ror
or
data16
or
data16
push
xchg
jo
xor
sub
push
mov
inc
or
data16
or
je
or
pushaw
fisttp
pushw
push
pushw
add
data16
pcmpgtd
push
data16
xchg
pcmpgtd
outs
push
jmp
fwait
or
mov
data16
sbb
data16
push
test
data16
retf
std
mov
or
xchg
pcmpgtd
inc
push
les
pcmpgtd
femms
rcl
adc
sbb
retfw
push
push
sub
data16
push
data16
pcmpgtd
add
data16
add
test
data16
xor
adc
ins
adc
jnp
data16
data16
in
out
push
inc
xchg
pcmpgtd
sbb
push
scas
lahf
or
data16
add
dec
or
add
add
cmps
mov
or
or
dec
add
out
dec
add
out
dec
add
add
add
add
sub
dec
add
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
cmp
add
add
add
xchg
shl
push
and
inc
xchg
cmp
inc
push
jo
in
add
add
add
add
je
jb
jo
add
add
dec
xor
add
sahf
mov
inc
mov
xchg
jecxz
psubsb
sbb
dec
cdq
jo
sub
and
cmp
xor
or
stos
add
xchg
dec
add
add
add
add
add
outs
jp
jb
add
imul
add
add
inc
add
(bad)
(bad)
(bad)
jmp
add
arpl
gs
add
add
add
mov
or
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
add
add
add
pop
aam
inc
add
add
add
inc
add
add
add
ds
add
add
add
cmp
add
mov
add
sub
inc
add
add
add
cmp
add
add
add
add
add
add
cmp
add
add
add
cmp
pop
add
add
inc
add
xor
add
or
or
add
add
sti
test
or
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
ins
arpl
aaa
add
je
jbe
js
add
dec
popa
je
jb
jo
add
add
add
add
in
inc
mov
xchg
jecxz
psubsb
add
add
add
add
add
add
adc
dec
add
add
add
es
add
fcomp
cmp
add
add
add
add
add
add
add
add
add
cmp
ins
cmp
out
inc
xchg
popf
push
sbb
ins
test
add
add
add
add
add
add
add
add
add
mov
inc
add
add
add
add
push
cdq
sub
repnz
mov
loope
icebp
add
add
add
add
add
add
inc
add
add
push
add
add
aas
push
inc
mov
cmp
add
add
add
add
add
add
dec
inc
add
add
pusha
cmp
add
add
nop
mov
dec
add
sub
add
add
adc
add
dec
add
adc
or
add
add
add
pusha
cmp
add
add
or
(bad)
inc
add
add
dec
add
add
add
sbb
add
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
sbb
add
add
sub
inc
add
add
sbb
cwde
and
add
add
js
pop
inc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
cmp
inc
add
add
add
sar
add
(bad)
(bad)
inc
add
add
add
add
stc
pop
sar
inc
add
(bad)
(bad)
jmp
inc
add
sbb
sbb
dec
sbb
pop
sbb
sbb
jb
inc
add
inc
add
inc
add
sbb
rcr
add
add
add
inc
add
adc
cwde
adc
sahf
adc
sahf
sbb
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
add
push
add
add
inc
add
add
add
inc
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
sbb
add
mov
push
sbb
dec
add
add
add
mov
inc
add
inc
inc
add
or
add
inc
inc
add
add
add
inc
add
pop
and
add
add
add
adc
cmp
add
sub
inc
add
add
add
pop
cmp
inc
add
add
add
adc
cmp
add
loopne
inc
add
add
add
inc
add
stc
pop
dec
inc
inc
add
add
inc
add
add
add
push
inc
inc
add
add
add
add
add
add
inc
inc
add
add
add
add
inc
add
add
add
push
inc
add
pop
ins
inc
inc
add
add
add
or
dec
add
add
add
add
add
pop
inc
add
stc
pop
test
add
add
add
adc
add
add
add
inc
add
stc
pop
mov
add
add
or
push
add
add
add
add
fcomp
inc
add
stc
pop
test
inc
add
add
inc
add
add
inc
add
add
add
inc
add
pop
mov
inc
add
add
add
add
pop
add
add
inc
add
add
add
inc
add
stc
pop
mov
add
add
add
pop
add
add
inc
add
add
add
add
add
pop
les
add
add
add
add
sar
add
(bad)
(bad)
inc
add
add
add
add
stc
pop
sar
inc
add
(bad)
(bad)
inc
sbb
add
add
aas
inc
add
add
add
inc
add
stc
pop
int3
inc
inc
add
add
add
add
add
inc
add
sbb
xchg
adc
cwde
adc
sahf
adc
jo
inc
add
sbb
xchg
adc
cwde
adc
sahf
adc
cwde
sbb
enter
xchg
adc
cwde
adc
sahf
adc
rcr
add
sbb
xchg
adc
cwde
adc
sahf
adc
call
sbb
xchg
adc
cwde
adc
sahf
adc
adc
add
sbb
xchg
adc
cwde
adc
sahf
adc
cmp
add
sbb
xchg
adc
cwde
adc
sahf
adc
pusha
sbb
add
sbb
xchg
adc
cwde
adc
sahf
adc
mov
add
sbb
xchg
adc
cwde
adc
sahf
adc
mov
inc
add
sbb
xchg
adc
cwde
adc
sahf
adc
fcomp
add
sbb
xchg
adc
cwde
adc
sahf
adc
add
inc
add
adc
sahf
adc
sub
inc
add
adc
sahf
adc
add
add
pusha
cmp
add
add
dec
mov
(bad)
inc
add
add
add
add
add
add
daa
pop
and
inc
add
add
add
inc
inc
add
add
add
inc
add
add
add
inc
add
add
add
and
or
and
add
mov
push
and
add
add
mov
add
inc
add
adc
xor
add
sbb
inc
add
add
xor
inc
add
pop
and
inc
add
add
inc
add
add
add
add
inc
inc
add
add
add
stc
pop
xor
add
add
add
adc
cmp
add
cmp
inc
add
add
add
add
add
and
add
stc
pop
dec
inc
inc
add
add
add
add
pusha
inc
inc
add
add
add
add
pop
pop
inc
inc
add
add
add
adc
inc
add
add
inc
add
add
add
stc
pop
ins
inc
inc
add
add
add
adc
dec
add
add
inc
add
add
add
inc
add
pop
jl
inc
add
add
add
add
dec
add
add
inc
add
add
add
inc
add
stc
pop
mov
add
add
add
or
add
inc
add
add
add
pop
xchg
inc
inc
add
add
add
adc
add
add
add
es
add
stc
pop
movs
inc
inc
add
add
add
inc
add
add
add
add
pop
mov
inc
add
add
add
add
pop
add
add
inc
add
add
add
stc
pop
mov
add
add
adc
pusha
add
add
add
mov
inc
add
inc
inc
add
add
add
pop
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
add
inc
add
stc
pop
sar
inc
add
(bad)
(bad)
inc
add
add
inc
add
inc
add
adc
push
and
lods
and
xchg
adc
cwde
adc
sahf
adc
jl
inc
add
inc
add
adc
movs
and
lods
and
xchg
adc
cwde
adc
sahf
adc
int3
and
lods
and
xchg
adc
cwde
adc
sahf
adc
hlt
and
lods
and
xchg
adc
cwde
adc
sahf
adc
sbb
inc
add
inc
add
adc
inc
and
lods
and
xchg
adc
cwde
adc
sahf
adc
ins
and
lods
and
xchg
adc
cwde
adc
sahf
adc
xchg
and
lods
and
xchg
adc
cwde
adc
sahf
adc
mov
and
xchg
adc
cwde
adc
sahf
adc
in
inc
add
inc
add
adc
or
inc
add
inc
add
adc
add
add
pusha
cmp
add
add
or
(bad)
inc
add
add
add
dec
add
add
add
and
add
and
inc
add
add
add
inc
inc
add
add
add
sub
add
add
sub
inc
add
add
add
inc
add
add
add
sub
add
mov
push
sub
mov
add
sub
xchg
add
inc
inc
add
inc
inc
add
adc
xor
add
sub
inc
add
add
pop
sub
mov
inc
inc
add
add
inc
add
add
add
add
inc
inc
add
add
add
sub
xor
pop
adc
inc
add
add
add
adc
cmp
add
cmp
inc
add
add
add
sub
add
stc
pop
and
add
add
inc
add
inc
add
add
inc
add
add
add
add
add
pop
sub
inc
add
add
add
add
add
in
sub
add
inc
inc
add
add
inc
add
add
add
and
inc
add
add
add
add
stc
pop
cmp
inc
add
add
add
adc
dec
add
add
inc
add
add
add
inc
add
inc
inc
add
add
add
lldt
add
push
inc
inc
add
add
add
sub
pop
pusha
inc
inc
add
add
add
add
push
add
add
inc
add
add
add
add
add
inc
add
stc
pop
ins
inc
inc
add
add
pop
add
add
inc
add
add
add
inc
add
inc
inc
add
add
add
or
pop
add
add
add
add
add
stc
pop
test
or
add
inc
add
add
add
lods
inc
inc
add
add
add
cs
add
inc
inc
add
add
add
push
add
add
inc
add
add
add
inc
add
inc
inc
add
add
add
pop
add
add
sar
add
(bad)
(bad)
inc
add
add
add
add
stc
pop
sar
inc
add
(bad)
(bad)
inc
add
add
sub
test
inc
add
adc
sahf
adc
push
sub
test
inc
add
adc
sahf
adc
js
inc
add
adc
cwde
adc
sahf
adc
mov
sub
xchg
adc
cwde
adc
sahf
adc
enter
test
inc
add
adc
sahf
adc
lock
test
inc
add
adc
sahf
adc
sbb
inc
add
adc
cwde
adc
sahf
adc
inc
sub
test
inc
add
adc
sahf
adc
push
sub
xchg
adc
cwde
adc
sahf
adc
nop
sub
test
inc
add
adc
sahf
adc
mov
sub
xchg
adc
cwde
adc
sahf
adc
loopne
inc
add
adc
cwde
adc
sahf
adc
or
inc
add
adc
cwde
adc
sahf
adc
xor
inc
add
adc
cwde
adc
sahf
adc
add
add
pusha
cmp
add
add
enter
(bad)
(bad)
(bad)
inc
add
add
cmp
sbb
dec
add
add
add
add
add
xor
add
add
pushf
inc
inc
add
add
add
xor
add
add
int3
xor
add
add
enter
push
add
add
xor
add
mov
push
xor
xchg
sbb
add
add
push
mov
add
inc
add
pop
add
add
sar
add
(bad)
(bad)
inc
add
add
add
add
xor
add
pop
sar
inc
add
(bad)
(bad)
inc
add
cmp
add
and
inc
add
add
add
add
add
stc
pop
xor
inc
add
add
add
add
fdivr
inc
add
add
add
pop
rol
add
add
add
adc
inc
add
add
inc
inc
add
add
add
inc
add
stc
pop
lock
inc
add
add
add
sbb
inc
add
add
aas
inc
add
add
add
pop
cld
inc
inc
add
add
add
or
add
inc
add
add
add
xor
add
pop
adc
inc
add
add
add
adc
dec
add
add
inc
add
add
add
inc
add
pop
sub
inc
add
add
add
or
add
inc
inc
add
add
lods
xor
pop
dec
inc
inc
add
add
inc
add
add
add
inc
add
add
add
xor
pop
push
inc
inc
add
add
add
adc
pop
add
add
inc
add
add
add
add
pop
jo
inc
add
add
add
sbb
pop
add
add
aas
inc
add
add
add
stc
pop
add
add
add
inc
add
add
add
mov
add
add
xor
inc
add
inc
inc
add
add
inc
add
add
add
add
mov
inc
add
inc
inc
add
add
add
add
fdivr
inc
add
add
add
aaa
inc
add
stc
pop
enter
or
add
add
add
int3
xor
dec
xor
xchg
adc
cwde
adc
sahf
adc
hlt
xor
dec
xor
xchg
adc
cwde
adc
sahf
adc
sbb
inc
add
add
adc
sahf
adc
inc
xor
dec
xor
xchg
adc
cwde
adc
sahf
adc
ins
xor
dec
xor
xchg
adc
cwde
adc
sahf
adc
xchg
xor
dec
xor
xchg
adc
cwde
adc
sahf
adc
mov
xor
xchg
adc
cwde
adc
sahf
adc
in
inc
add
add
adc
sahf
adc
or
inc
add
add
adc
sahf
adc
xor
inc
add
add
adc
sahf
adc
pop
xor
dec
xor
xchg
adc
cwde
adc
sahf
adc
test
inc
add
add
adc
sahf
adc
lods
xor
dec
xor
xchg
adc
cwde
adc
sahf
adc
aam
inc
add
add
adc
sahf
adc
mov
dec
add
(bad)
(bad)
inc
add
add
add
jle
dec
mov
pop
add
and
add
add
add
add
add
xor
inc
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
cmp
push
add
add
cmp
(bad)
inc
add
add
add
add
(bad)
(bad)
call
inc
inc
add
inc
add
add
add
and
add
add
add
sbb
(bad)
(bad)
(bad)
(bad)
fadd
add
add
add
add
pop
(bad)
inc
add
add
add
(bad)
(bad)
fadd
add
inc
add
add
add
pop
(bad)
inc
add
add
add
(bad)
(bad)
call
inc
inc
add
add
add
add
pop
(bad)
inc
add
add
add
(bad)
jmp
add
add
add
add
add
inc
add
inc
add
add
dec
popa
je
jb
jo
inc
outs
outs
jp
jb
add
addr16
popa
outs
je
add
add
popa
outs
outs
jne
aaa
add
add
inc
popa
jb
gs
gs
add
add
jb
outs
imul
outs
bound
jbe
ins
jae
jns
add
add
pop
cli
sbb
dec
cdq
jo
sub
and
inc
adc
ret
dec
mov
sti
xor
add
in
inc
mov
xchg
jecxz
psubsb
mov
or
hlt
xchg
inc
test
(bad)
push
inc
cmp
xor
or
stos
add
xchg
inc
outs
jb
add
add
cs
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
fdivr
inc
add
add
add
add
add
add
add
cmp
and
inc
add
add
add
pop
or
add
imul
ins
ins
add
add
add
add
ins
inc
gs
jo
outs
push
je
je
jae
add
add
add
add
add
fadd
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
imul
adc
add
inc
gs
gs
inc
outs
ins
outs
jb
jo
arpl
add
add
cmp
add
add
in
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
xor
add
add
inc
gs
ins
addr16
jb
arpl
or
add
inc
add
add
lock
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
push
imul
outs
outs
imul
add
cmp
add
inc
add
add
cld
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
or
add
push
outs
ins
outs
arpl
imul
add
add
or
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jbe
jbe
xor
add
add
add
add
je
gs
xor
jns
lods
xor
or
stos
add
xchg
push
inc
inc
ss
dec
dec
add
add
clc
cmp
add
cmp
add
adc
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
inc
push
xor
cs
dec
dec
add
adc
add
inc
outs
jne
push
push
push
imul
add
fs
inc
add
add
and
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
jb
popa
outs
addr16
arpl
imul
ja
add
add
or
add
cmp
add
sub
dec
add
or
je
jmp
push
mov
call
jmp
add
add
jb
popa
je
dec
jne
gs
add
add
movs
cmp
add
ds
add
add
cmp
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
inc
add
add
push
add
jb
imul
imul
add
imul
push
add
jae
je
add
dec
add
push
add
je
add
add
and
push
add
xor
and
push
add
xor
add
add
pushf
ds
add
add
add
add
cmp
add
add
push
add
add
add
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
dec
xor
jns
add
pushf
ds
add
add
jbe
popa
inc
jo
jns
add
pop
pop
jbe
popa
inc
jns
fs
pop
pop
jbe
popa
push
gs
jb
add
pop
pop
jbe
popa
inc
jns
jne
dec
xor
add
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
push
je
push
popa
jb
popa
ins
add
pop
pop
jbe
popa
push
je
inc
outs
ins
jo
add
add
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
imul
add
loop
lods
xor
or
stos
add
xchg
add
add
pop
pop
jbe
popa
inc
push
inc
imul
bound
jb
gs
bound
add
add
jbe
popa
dec
gs
add
add
jbe
popa
inc
jb
gs
popa
jb
add
add
dec
lods
xor
or
stos
add
xchg
push
bound
ins
popa
add
add
pop
pop
jbe
popa
dec
bound
popa
jb
pop
pop
jbe
popa
dec
bound
gs
fs
data16
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
dec
xor
jae
fwait
popa
je
pop
repz
fwait
inc
inc
into
push
dec
(bad)
pop
addr16
lea
push
push
ins
add
fcomp
cmp
repz
call
jno
sub
leave
xchg
pusha
(bad)
mov
add
add
push
arpl
gs
je
xor
add
add
dec
lods
xor
or
stos
add
xchg
inc
jne
outs
popa
arpl
add
add
dec
popa
bound
add
add
iretw
adc
pusha
rcl
gs
add
dec
lods
xor
or
stos
add
xchg
push
outs
imul
jp
imul
lods
xor
or
stos
add
xchg
push
gs
arpl
xor
add
add
jne
gs
imul
lods
xor
or
stos
add
xchg
push
popa
ins
jo
data16
jne
xor
add
add
push
jne
add
add
lods
xor
or
stos
add
xchg
push
popa
bound
je
gs
jns
add
add
cli
dec
lods
xor
or
stos
add
xchg
inc
jne
ins
outs
jne
add
add
dec
gs
arpl
je
add
or
je
cmp
ja
mov
out
stos
inc
or
lea
jl
popa
dec
mov
add
or
cmp
out
inc
xchg
popf
push
sbb
ins
test
mov
dec
stos
ds
ret
jae
imul
add
lods
xor
or
stos
add
xchg
inc
outs
jb
ins
popa
imul
add
push
gs
jb
add
bound
xor
or
stos
add
xchg
push
outs
ins
jns
outs
popa
ins
xor
add
push
ins
outs
jo
add
add
dec
lods
xor
or
stos
add
xchg
dec
jne
outs
data16
add
dec
lods
xor
or
stos
add
xchg
push
outs
ins
popa
arpl
add
gs
xor
push
gs
outs
outs
ins
jns
add
add
outs
gs
xor
inc
outs
imul
add
inc
jne
popa
arpl
jns
add
add
jo
and
inc
xor
outs
mov
pop
repnz
je
jmp
mov
mov
mov
repnz
mov
loope
icebp
add
bound
mov
addr16
push
outs
arpl
popa
je
add
add
gs
jno
gs
add
add
dec
lods
xor
or
stos
add
xchg
dec
bound
gs
je
fs
inc
imul
imul
push
jne
gs
outs
imul
add
jo
outs
outs
je
add
add
imul
add
inc
popa
jo
jb
jae
outs
gs
push
gs
arpl
add
inc
outs
ins
ja
jb
add
outs
ins
imul
outs
je
xor
add
add
adc
dec
add
cli
nop
or
sbb
mov
xor
outs
mov
out
aas
push
inc
mov
cmp
push
in
adc
movs
sub
push
ins
jne
jae
xor
dec
outs
outs
jbe
ins
jbe
add
add
dec
popa
jb
ins
jo
xor
inc
gs
add
jb
jbe
outs
add
ja
imul
imul
gs
dec
lods
xor
or
stos
add
xchg
inc
imul
outs
add
inc
arpl
outs
jb
add
add
outs
jae
jns
popa
jb
add
dec
outs
je
je
imul
popa
jb
outs
outs
outs
xor
add
ins
outs
jb
popa
add
add
or
or
dec
xor
or
push
out
inc
xchg
popf
push
sbb
ins
test
into
ja
mov
out
stos
inc
or
lea
lods
xor
or
stos
add
xchg
push
add
add
add
add
add
popa
outs
outs
jne
aaa
add
jo
outs
ins
popa
je
outs
arpl
add
add
inc
add
(bad)
(bad)
(bad)
jmp
add
jo
ins
popa
je
outs
arpl
add
xor
add
add
add
inc
add
inc
and
add
add
add
je
data16
or
push
add
and
jns
or
add
add
pop
add
gs
xor
or
popa
adc
cs
add
add
inc
pop
add
add
ins
jns
outs
popa
ins
xor
adc
or
add
add
inc
sub
add
push
or
dec
outs
jae
imul
add
push
add
outs
ins
ins
outs
add
je
test
and
add
pop
or
inc
outs
jb
ins
popa
imul
add
add
andnps
pop
mov
or
inc
sbb
add
or
add
outs
gs
xor
or
push
or
add
xor
add
inc
add
add
add
jo
add
pop
add
jae
imul
add
or
sub
pop
push
adc
add
add
pop
add
ins
popa
arpl
add
add
or
shld
or
push
add
add
add
add
or
inc
jne
popa
arpl
jns
add
add
or
or
push
or
add
arpl
xor
adc
add
add
add
add
imul
add
pop
jg
add
or
sldt
inc
sbb
add
add
add
popa
outs
outs
ins
jns
sbb
ja
sub
xor
add
add
add
or
jb
jae
outs
jae
jb
xor
push
add
or
inc
sub
add
or
add
jbe
jb
add
add
add
arpl
jne
ins
jns
add
adc
jmp
adc
add
add
dec
xor
or
repnz
mov
loope
icebp
and
inc
xor
outs
mov
pop
repnz
je
dec
lods
xor
or
stos
add
xchg
dec
add
add
add
add
add
jb
gs
gs
or
jb
addr16
add
add
inc
add
(bad)
(bad)
(bad)
jmp
add
addr16
add
xor
add
outs
add
add
inc
add
inc
add
add
or
push
popa
bound
gs
add
outs
jae
gs
outs
ins
jns
add
jb
cdq
pop
adc
add
add
add
add
or
push
ja
outs
bound
outs
gs
add
add
add
xchg
add
add
and
add
add
jb
arpl
add
add
adc
add
js
adc
add
add
add
add
push
add
outs
ins
imul
add
or
sub
add
pop
or
inc
js
outs
outs
outs
je
add
or
inc
outs
outs
imul
adc
add
add
add
or
popa
ins
imul
add
add
gs
add
adc
mov
add
inc
xor
add
or
push
jne
gs
outs
imul
imul
add
or
add
data16
outs
add
add
add
add
add
arpl
popa
je
add
add
add
jp
ins
ins
cmp
add
and
pop
adc
add
add
add
add
ins
imul
xor
add
or
add
imul
inc
sub
add
add
add
gs
jno
gs
add
add
add
ins
ins
imul
test
movlps
add
add
add
add
add
je
popa
jbe
ins
add
add
add
add
or
add
push
xlat
add
add
add
add
add
or
inc
popa
jo
jb
jae
outs
gs
(bad)
adc
add
add
add
push
add
ins
ja
jb
sbb
js
(bad)
or
add
add
int3
xor
or
(bad)
and
add
sub
and
adc
dec
add
cli
nop
or
xor
or
stos
add
xchg
push
add
add
add
add
add
jb
outs
imul
add
ins
ins
imul
sbb
add
and
(bad)
(bad)
jmp
add
ins
ins
imul
xor
hlt
or
add
add
add
add
add
add
add
or
dec
popa
jb
ins
jo
xor
jo
or
jo
arpl
jne
ins
jns
add
add
inc
sub
or
inc
popa
jb
outs
outs
outs
xor
add
ins
outs
ja
popa
ins
jo
add
mov
xor
adc
add
add
add
add
pop
add
ja
imul
add
add
call
add
add
add
add
jb
jbe
outs
add
ins
jo
popa
outs
je
outs
xor
add
fimul
inc
and
add
add
arpl
outs
jb
add
add
add
add
adc
add
loop
add
inc
push
add
add
or
inc
imul
outs
add
add
adc
push
add
popa
add
ja
outs
add
add
push
add
add
add
sbb
add
popa
jb
outs
outs
fs
and
add
add
add
add
or
inc
popa
ins
outs
jb
popa
add
add
push
mov
add
add
inc
pop
add
add
or
push
jb
jae
jns
popa
jb
adc
adc
push
or
pop
or
inc
and
add
or
add
ins
imul
add
add
or
add
add
add
add
add
or
dec
outs
je
je
imul
adc
pop
or
add
add
pop
add
jne
jae
xor
adc
add
or
adc
inc
sbb
pop
add
push
add
add
add
or
add
add
add
add
or
dec
outs
outs
jbe
ins
jbe
add
add
ins
popa
add
imul
add
int3
xor
or
ins
add
fcomp
cmp
fs
dec
xor
jae
fwait
popa
je
pop
cmp
xor
or
stos
add
xchg
and
add
imul
push
gs
popa
outs
je
add
jne
ins
ins
outs
je
outs
imul
add
and
je
add
pop
cmps
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
cs
dec
push
sbb
sub
sub
sub
sub
push
sub
sub
sub
sub
sub
sub
aam
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
retf
call
js
jl
add
(bad)
(bad)
(bad)
(bad)
(bad)
mov
enter
enter
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
sar
cmp
sub
pushf
sub
xchg
das
jmp
fsub
lods
inc
xor
push
sbb
pop
sbb
aad
fcmovnu
(bad)
(bad)
xlat
push
add
add
dec
or
or
jp
xor
push
push
push
lods
mov
mov
dec
out
dec
daa
mov
(bad)
and
pop
imul
icebp
(bad)
loopne
cmp
inc
(bad)
push
sub
push
push
xor
push
imul
or
xchg
test
push
rol
rcr
cmc
ins
in
xchg
(bad)
ins
mov
or
out
out
out
out
(bad)
(bad)
(bad)
fdivp
div
div
div
idiv
jmp
test
fidivr
fmul
lods
lods
lods
dec
lods
mov
inc
inc
push
inc
inc
adc
add
jg
jg
jg
into
out
into
into
into
into
mov
loopne
loopne
loopne
loopne
jmp
out
rol
(bad)
(bad)
xor
inc
push
inc
inc
mov
mov
data16
data16
or
sbb
sbb
mov
mov
retf
retf
mov
xor
or
xor
mov
xchg
mov
rcl
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
mov
cmp
cmp
cmp
cmp
mov
sbb
sbb
sbb
pop
dec
pop
inc
dec
cmp
cmp
ss
jo
pusha
pusha
jo
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
inc
inc
push
inc
and
lds
sub
sub
sub
pop
dec
pop
pop
pop
js
pop
mov
mov
outs
outs
rcr
(bad)
call
jge
dec
test
cdq
test
or
or
or
imul
imul
cmp
dec
dec
fbstp
adc
sbb
sbb
div
jecxz
jecxz
jecxz
out
out
out
cmps
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
inc
and
sar
pop
xchg
in
mov
cmc
loop
scas
out
gs
aad
mov
xchg
xchg
xchg
cmp
int
add
mov
mov
fadd
jnp
sahf
inc
es
mov
sub
fild
loop
jmp
(bad)
xor
sbb
jo
fcom
js
cmp
mov
xchg
das
sub
inc
inc
mov
mov
mov
inc
les
cdq
neg
loop
mov
mov
int3
adc
out
data16
sbb
or
push
adc
dec
or
fist
or
push
mov
(bad)
sbb
inc
not
dec
(bad)
jmp
addr16
in
es
retf
push
jmp
pop
pop
das
outs
jmp
xor
xor
and
jnp
loop
pop
and
sub
scas
sub
pop
add
(bad)
aad
cmp
cmp
int3
add
test
or
(bad)
or
test
lods
pop
repz
sub
imul
loopne
cmp
dec
sbb
pop
push
outs
cmovg
jecxz
push
(bad)
pop
mov
loope
ret
mov
mov
or
jecxz
jecxz
loop
push
sub
and
push
sbb
mov
jge
(bad)
(bad)
cli
sti
daa
in
das
ror
mov
das
popf
lods
lods
lods
sar
inc
dec
(bad)
fiadd
or
jmp
jae
inc
jg
sti
hlt
jg
jg
mov
int
cdq
es
pop
pop
pop
and
cld
mov
test
inc
add
les
ds
mov
fiadd
mov
into
ja
cmp
sbb
cmp
xchg
pop
adc
pop
sbb
add
jg
cli
arpl
retf
mov
fstp
mov
aas
jl
in
inc
leave
das
sub
repz
rcl
sbb
sahf
dec
leave
lea
mov
jnp
in
dec
cmp
mov
int
cld
jbe
dec
dec
dec
aas
dec
lahf
iret
test
push
sbb
call
jl
or
neg
(bad)
(bad)
(bad)
aad
push
icebp
enter
xchg
int3
dec
pop
les
mov
stos
jb
es
imul
jecxz
sbb
cmp
clc
shl
int3
es
adc
adc
sub
sub
pop
pusha
fdivr
ins
in
test
mov
enter
xor
xor
adc
and
sub
ret
(bad)
cdq
mov
ds
cwde
into
into
ja
je
aad
adc
ins
daa
push
loope
aas
adc
xchg
(bad)
cmps
mov
sbb
mov
(bad)
and
xchg
push
js
pop
xor
cmp
imul
jae
sub
int3
mov
jge
fs
dec
mov
mov
pushf
in
mov
push
ins
movs
push
in
ror
(bad)
inc
mov
jne
cli
jne
test
movs
xchg
jmp
loopne
rcl
aam
outs
clc
es
es
add
xor
jmp
or
push
adc
jl
lahf
xor
xchg
or
imul
mov
out
out
dec
test
inc
mov
add
pop
dec
ret
mov
lock
push
in
and
mov
jmp
or
xchg
stc
scas
xor
(bad)
inc
into
dec
inc
into
ret
outs
stc
repz
ret
inc
mov
pop
xchg
movs
out
adc
pop
pop
pushf
adc
aas
inc
dec
mov
mov
call
movs
jo
div
aas
icebp
dec
(bad)
repnz
(bad)
outs
adc
xchg
jno
xchg
sub
xchg
jg
cmp
sub
mov
imul
push
sbb
(bad)
sbb
imul
dec
leave
pop
retf
fs
sbb
mov
pop
cmp
cmp
cmp
imul
movs
mov
xor
aaa
jmp
out
xchg
add
cwde
clc
mov
adc
frstor
sub
(bad)
cmp
or
pop
rcl
push
ja
fsubr
push
pop
outs
out
pop
scas
fistp
add
dec
movs
pop
dec
dec
test
jmp
mov
dec
or
sbb
dec
sub
or
jg
dec
daa
adc
pop
sbb
(bad)
sbb
mov
pop
ja
cmps
ja
sbb
xlat
(bad)
cmps
out
mov
dec
mov
jle
and
mov
mov
sahf
repnz
in
lods
les
mov
sub
(bad)
in
lods
es
and
iret
ret
jge
ss
retf
or
inc
pop
or
retf
mov
and
imul
in
lds
adc
add
mov
std
push
int
(bad)
jmp
xor
out
xor
pop
sbb
push
mov
cli
push
call
mov
mov
in
in
push
mov
mov
pop
mov
sub
lahf
call
pop
mov
jb
or
outs
stc
xchg
icebp
mov
mov
mov
fwait
repz
mov
mov
in
ja
je
pop
push
push
push
push
push
push
sbb
cmp
sbb
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
retf
fdivrp
(bad)
mov
ins
dec
dec
sub
fisttp
test
or
sub
imul
imul
dec
dec
xchg
ins
dec
dec
sbb
sbb
pop
cmp
sbb
xchg
mov
leave
shl
xlat
shl
mov
(bad)
out
mov
cld
(bad)
jb
div
fs
test
lods
lods
adc
lods
lods
stos
mov
lods
lods
lods
lods
lods
lods
lods
lods
mov
push
add
xchg
ret
add
cmp
jg
jg
jg
out
into
into
into
out
into
into
adc
loopne
loopne
loopne
out
out
out
out
out
int3
out
out
icebp
in
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
and
dec
cmp
sbb
sbb
leave
sahf
mov
mov
ins
jmp
retf
xor
(bad)
adc
xor
mov
mov
fcomip
rcl
add
pop
pop
pusha
push
dec
dec
cmc
xchg
mov
loope
mov
xchg
shl
repz
repz
mov
ds
call
pop
jl
(bad)
(bad)
(bad)
(bad)
inc
aam
mov
call
pop
cmp
in
cmp
int3
ror
(bad)
ror
imul
sbb
imul
push
inc
inc
es
or
add
add
or
outs
aam
out
ror
int3
int
aam
dec
dec
dec
inc
and
cmp
push
inc
pop
dec
popa
dec
inc
cmp
cmp
cmp
fsubp
in
inc
out
into
pop
add
sub
outs
pop
outs
mov
call
cmp
call
out
int3
js
jle
outs
dec
push
sbb
test
sub
es
pop
sbb
push
pop
in
repnz
test
jecxz
je
mov
out
pop
in
stos
lods
mov
mov
mov
lods
lods
jg
repz
repnz
mov
mov
ror
fstp
jmp
rcr
xor
inc
cmp
aaa
add
out
sbb
adc
jg
and
cmps
mov
loopne
loope
mov
pushf
sub
lds
mov
and
sub
push
mov
jmp
add
jno
sbb
jb
inc
inc
iret
loopne
(bad)
rcl
shr
retf
inc
outs
outs
push
pop
pop
push
push
mov
jecxz
fldenv
mov
pop
fst
dec
jb
sub
cmp
adc
fst
ret
xor
pushf
popf
xchg
mov
xchg
mov
(bad)
out
xlat
cmc
(bad)
out
neg
xor
adc
adc
cmp
xchg
mov
test
and
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
or
mov
xchg
mov
enter
je
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
mov
mov
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
int3
into
into
into
inc
loopne
pusha
shl
pusha
inc
out
out
outs
(bad)
out
out
outs
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
or
mov
retf
retf
xor
xor
xor
xor
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
push
pop
dec
dec
dec
dec
fimul
dec
jne
mov
mov
mov
repz
mov
mov
mov
call
call
xor
xchg
(bad)
cdq
(bad)
adc
enter
enter
cmp
ins
cmp
out
mul
pop
sbb
sbb
sbb
sbb
(bad)
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
and
sub
daa
ss
daa
pop
in
push
xchg
jns
pop
adc
test
test
sbb
or
add
sahf
xchg
xchg
nop
mov
popf
call
and
out
mov
(bad)
int
and
add
sub
or
imul
ins
enter
xor
xor
(bad)
and
loope
and
sar
jne
mov
and
(bad)
mov
sub
mov
jecxz
out
nop
cmp
sahf
ret
fmul
popa
xchg
mov
fs
jecxz
inc
mov
mov
mov
retf
pusha
xchg
shl
mov
and
dec
mov
or
mov
fild
inc
mov
repz
xchg
xchg
mov
out
out
out
(bad)
lds
inc
inc
inc
push
mov
mov
addr16
sbb
mov
sbb
lahf
mov
retf
retf
retf
xor
xor
xor
mov
mov
rcl
(bad)
rcl
rcl
pop
pop
pop
pop
not
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
icebp
mov
mov
mov
jecxz
repz
mov
mov
mov
mov
mov
fwait
call
jge
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
arpl
sbb
push
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
xchg
sbb
clc
mov
mov
and
add
and
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
inc
sbb
push
mov
(bad)
(bad)
cmp
(bad)
dec
dec
dec
dec
inc
dec
dec
test
test
or
or
or
dec
imul
sbb
or
cs
dec
sti
and
sbb
sbb
sbb
mov
mov
jecxz
jecxz
jecxz
jecxz
out
cmps
enter
mov
iret
(bad)
mul
div
cld
div
lods
(bad)
lods
lods
lods
lods
lods
lods
mov
mov
or
les
xor
mov
inc
xor
add
jle
jg
jg
into
into
into
into
into
into
into
into
mov
xchg
test
(bad)
out
out
lds
(bad)
mov
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
mov
push
mov
mov
jae
fldcw
jmp
add
sahf
add
cdq
and
mov
cli
lds
inc
push
adc
or
inc
xchg
push
mov
jb
popa
jo
mov
into
into
leave
dec
and
out
push
loope
mov
in
mov
out
inc
add
call
retf
lods
mov
xor
inc
push
jle
ss
fmul
or
mov
or
inc
cmp
inc
sub
inc
movs
push
int3
cmp
mov
ror
inc
pushf
sti
pushf
push
inc
jns
sbb
out
dec
mov
cmp
add
bnd
mov
je
dec
lahf
gs
stc
mov
sti
sahf
call
cmc
cmp
sbb
xchg
les
enter
mov
mov
jae
push
cs
lahf
ficomp
jp
fisttp
call
cs
and
es
ins
aas
jmp
xor
lods
cmp
push
xor
nop
cmp
outs
cs
je
jle
push
or
(bad)
pop
cld
mov
imul
outs
outs
outs
jbe
je
jmp
mov
mov
les
and
mov
or
inc
adc
xchg
popf
pop
ja
sbb
cmp
sbb
mov
pop
nop
aad
in
pop
in
mov
mov
popa
mov
(bad)
jecxz
ins
or
jmp
mov
push
xchg
(bad)
jge
cli
aad
cli
aad
mov
daa
out
mov
iret
xchg
mov
push
aaa
inc
jno
push
xor
fiadd
or
outs
outs
fild
jle
hlt
sub
inc
add
inc
mov
cwde
loope
popa
sub
out
out
in
in
stos
sbb
ror
xchg
or
retf
(bad)
xchg
add
ja
int
aaa
in
bound
adc
sbb
or
retf
or
inc
mov
or
xor
mov
mov
stc
dec
adc
rcl
rcl
call
ud0
jbe
dec
leave
mov
rcl
icebp
sub
repz
dec
jmp
mov
pop
push
push
push
push
push
push
push
mov
mov
les
pop
cmp
leave
and
mov
enter
xor
push
cmp
dec
jge
pop
pop
pop
rcr
jecxz
hlt
dec
inc
sbb
mov
cli
ins
mov
fst
fst
fst
lahf
adc
nop
nop
nop
pop
imul
pop
out
mov
out
cmps
loop
popa
call
lds
cmps
sub
ja
and
xchg
xchg
in
stos
jp
lods
test
add
rep
dec
pop
enter
mov
mov
test
cmps
push
pop
(bad)
ret
or
loopne
xor
sub
dec
dec
dec
dec
jno
jae
add
or
ds
mov
mov
cmp
data16
sbb
sub
(bad)
ficom
xor
mul
outs
cli
daa
pop
daa
loop
imul
(bad)
stos
lods
cld
push
std
movs
cs
mov
cmps
mov
sub
sub
xchg
mov
dec
inc
into
loopne
mov
mov
loopne
out
out
adc
(bad)
(bad)
shl
in
push
jns
xor
mov
mov
adc
in
push
adc
nop
inc
adc
xchg
mov
ret
mov
mov
out
inc
xchg
ret
and
mov
jne
xchg
test
pop
push
shr
jmp
dec
mov
mov
std
xchg
xlat
xor
lds
fwait
scas
test
jecxz
cmc
out
(bad)
ficom
sbb
idiv
and
mov
pop
daa
ds
sub
aaa
ds
ror
ret
outs
rcr
xor
cmp
cli
sub
(bad)
popa
cmps
sbb
xchg
lock
push
adc
sub
ins
xor
clc
es
pusha
lahf
jne
inc
popa
jo
cmp
cmp
cmp
cmp
inc
add
loop
mov
cmps
xchg
and
and
test
jns
pop
pop
push
(bad)
pop
pop
mov
mov
outs
jle
mov
scas
sbb
(bad)
jg
jmp
jne
dec
pop
daa
jmp
test
jp
repz
push
loopne
loop
xchg
out
popf
cmp
push
sub
jg
sbb
nop
push
jecxz
push
mov
jecxz
in
adc
jecxz
shl
pusha
and
sbb
loopne
mov
xchg
loop
push
jge
iret
(bad)
div
div
fmul
lods
mov
add
xchg
test
call
push
inc
inc
enter
inc
pop
inc
stos
shl
xor
jns
push
inc
mov
mov
xchg
nop
mov
pop
jbe
out
inc
dec
in
out
out
outs
sub
(bad)
xchg
xchg
jae
leave
and
into
pusha
add
pop
add
and
and
pop
in
xchg
ret
cli
pop
xor
sbb
retf
imul
aam
repz
aaa
div
sbb
adc
xchg
aaa
pushf
push
pop
cmp
adc
repz
mov
(bad)
(bad)
iret
(bad)
fnstenv
xchg
mov
mov
jo
cmp
pop
test
in
fwait
mov
or
push
jle
pop
push
mov
sub
cwde
jmp
mov
(bad)
jge
cmp
xlat
movs
sub
ficomp
sbb
dec
aas
mov
imul
fisub
es
pusha
jmp
mov
mov
aas
nop
ds
js
jl
mov
jb
sub
jae
cmps
jmp
aad
mov
sub
rcl
ja
or
(bad)
in
mov
scas
sbb
imul
mov
dec
cmps
stc
(bad)
or
cld
dec
sti
stc
and
int3
add
cs
ds
sbb
pop
pop
nop
adc
or
mov
mov
repnz
ds
inc
mov
loop
repnz
inc
sbb
faddp
out
push
cs
fwait
push
mov
jecxz
xlat
mul
push
fnstcw
push
fldenv
lahf
mov
lods
sub
push
mov
adc
adc
jle
jg
cmp
inc
mov
pushf
inc
xchg
xor
imul
pop
jno
out
out
out
addr16
sub
adc
mov
sub
inc
shr
(bad)
push
push
fidivr
cdq
aaa
es
pop
mov
out
xor
mov
mov
cli
adc
mov
gs
arpl
adc
inc
in
sbb
sbb
inc
inc
rcl
rcr
call
imul
mov
mov
cmp
repnz
aas
dec
cmp
test
fwait
mov
xlat
push
retf
retf
xor
jge
or
pop
xchg
adc
not
enter
scas
inc
lea
out
mov
or
cmp
sub
out
sub
jae
push
shl
xchg
pop
fadd
or
sbb
ss
arpl
jbe
push
rcr
and
and
mov
std
adc
in
call
jne
hlt
scas
addr16
(bad)
cmp
or
cmp
sbb
sbb
xchg
ja
ja
and
out
cmp
in
cmp
outs
je
scas
pop
pop
call
dec
dec
dec
and
cmp
push
mov
repz
repz
dec
push
lods
cs
popa
fmul
or
nop
adc
dec
adc
pop
dec
mov
ja
int
jmp
sbb
jmp
shr
sbb
sbb
loop
and
mov
out
or
scas
jnp
xchg
or
scas
push
push
push
adc
xchg
mov
jne
adc
lods
lods
inc
mov
push
enter
or
mov
xor
cs
push
mov
pop
mov
movs
sbb
gs
xor
call
int
cmp
mov
ja
add
xchg
cmps
adc
outs
ss
adc
pop
in
xchg
cli
arpl
jg
mov
fwait
ret
fidiv
xor
mov
enter
in
inc
out
mov
adc
daa
mov
pop
pop
pop
dec
pushf
scas
pop
mov
inc
iret
cmp
cmp
jb
js
sbb
mov
mov
jae
mov
mov
fdiv
js
cmp
fcom
(bad)
adc
fsub
add
aaa
aaa
dec
clc
inc
and
sub
es
test
adc
je
sbb
cwde
cmp
cmp
jno
xlat
adc
in
es
xchg
ja
outs
in
stos
arpl
(bad)
xchg
xor
mov
jle
pop
push
jge
loope
test
jns
cmp
js
dec
aad
je
mov
mov
or
sbb
pop
xchg
cmps
(bad)
(bad)
jl
jmp
into
sub
adc
gs
and
or
jns
repz
push
ss
add
adc
xlat
xlat
dec
nop
not
inc
jo
sub
out
movs
loop
movs
out
ins
outs
mov
(bad)
(bad)
jae
xor
mul
push
icebp
outs
test
inc
inc
inc
inc
inc
inc
inc
popa
popa
popa
popa
clc
es
cs
push
enter
push
mov
(bad)
(bad)
push
(bad)
(bad)
pop
mov
mov
iret
fimul
mov
loopne
loopne
cmp
out
out
and
or
sub
int
dec
or
dec
test
mov
cmp
pusha
or
pop
mov
add
adc
mov
std
mov
std
mov
add
icebp
out
fiadd
lock
ins
repz
jle
inc
push
pushf
mov
rcl
cmps
shl
adc
jae
movhps
pop
inc
test
rcr
mov
mov
add
inc
std
jbe
xchg
jmp
jno
call
cmp
sar
mov
or
enter
popa
aaa
lods
clc
sti
rcl
mov
mov
push
jp
sbb
stc
dec
rcr
cmp
int
xchg
daa
in
addr16
pusha
pusha
mov
dec
pusha
pusha
fild
cmp
add
js
mov
push
xor
push
xor
pop
and
hlt
push
pop
pop
cmps
or
ja
nop
pusha
mov
outs
outs
aaa
aaa
xor
(bad)
jp
mov
xchg
leave
aad
pop
movs
sub
dec
test
imul
mov
add
popf
push
imul
outs
addr16
dec
sbb
neg
sbb
mov
das
mov
mov
xor
jecxz
or
jecxz
bound
xchg
loop
es
(bad)
pop
push
stos
cld
pushf
neg
cmp
div
cmc
inc
inc
sbb
icebp
outs
stc
add
data16
add
movs
sub
test
push
lods
ss
stos
test
inc
imul
jmp
out
outs
xchg
jnp
jg
xchg
dec
push
mov
mov
jo
loope
or
(bad)
out
out
sbb
mov
add
rcl
push
int
mov
ret
mov
mov
scas
in
cdq
mov
sub
xchg
pop
dec
ss
inc
ss
inc
sbb
jne
push
retf
fiadd
les
les
sbb
sbb
mov
pop
pop
fstp
and
call
aam
mov
cld
test
div
repz
rcl
mov
call
or
lds
(bad)
(bad)
mov
pop
into
(bad)
(bad)
fdivr
jno
cmp
sub
stc
push
pop
pop
cli
cli
arpl
jmp
cmp
sbb
dec
sbb
jl
mov
int
lods
arpl
pop
outs
outs
scas
pusha
sti
scas
in
jnp
fst
std
inc
inc
fstp
fst
loop
dec
and
mov
pop
pop
fstp
or
out
imul
jmp
je
jg
arpl
pop
dec
cmp
xor
fdivr
jecxz
or
repz
in
sub
xor
fld
test
les
pop
nop
shr
push
lahf
sbb
xor
test
ret
jg
sbb
in
xchg
and
bound
into
or
scas
in
add
aad
movs
icebp
outs
stc
daa
inc
push
fld
jne
push
hlt
mov
pop
jne
lock
push
enter
dec
stos
xchg
jg
jl
fiadd
or
sub
mov
enter
fidivr
or
pop
pop
pop
mov
sub
nop
dec
sub
leave
inc
test
xor
ret
test
xor
or
call
arpl
lea
push
in
out
sbb
inc
mov
jg
aad
mov
and
xor
xor
and
sub
adc
ror
jge
jg
xor
pop
mov
(bad)
dec
call
shl
adc
dec
dec
adc
jns
fwait
adc
jge
sbb
in
(bad)
(bad)
mov
pop
int3
enter
mov
cmp
cmp
cmp
shl
arpl
(bad)
dec
repnz
je
cmp
sar
mov
cmps
and
es
add
add
mov
imul
cdq
mov
mov
and
jnp
cmps
jmp
aad
(bad)
fcomp
jns
cwde
loopne
test
or
outs
aaa
aaa
test
out
std
(bad)
(bad)
dec
xchg
lds
stos
mov
mov
push
push
push
inc
in
test
add
add
jno
cmp
cmps
xor
fld
in
mov
mov
or
out
jecxz
xor
jecxz
jle
imul
push
sahf
ss
fcmovnu
fidiv
adc
cmc
outs
(bad)
mov
call
or
cmp
sub
adc
idiv
fwait
cld
sbb
push
iret
fmulp
xchg
out
out
fs
out
push
out
adc
ins
retf
mov
add
mov
mov
mov
arpl
fwait
cdq
cdq
aas
aas
push
scas
loop
pop
(bad)
fst
mov
inc
inc
xor
nop
aaa
xor
cmp
push
sar
das
rcr
fist
push
arpl
adc
pop
inc
mov
out
in
mov
repz
jp
pop
jbe
mov
mov
out
mov
leave
jb
addr16
cmc
or
jno
(bad)
(bad)
push
sub
mov
jmp
cmp
dec
sub
shl
sub
clc
lahf
jecxz
imul
(bad)
dec
sub
ror
and
fst
jo
mov
popf
lahf
lahf
lahf
adc
sbb
outs
cmp
int
cmp
fst
jno
jae
sub
jo
(bad)
pop
sub
cmps
pop
sub
(bad)
pusha
jmp
sbb
add
(bad)
dec
(bad)
mov
inc
and
cmp
or
repz
repz
xchg
push
arpl
int3
mov
les
cmps
sub
xchg
outs
(bad)
fcomp
dec
dec
dec
dec
cmp
pop
add
jecxz
and
rcr
(bad)
out
arpl
stos
fucomi
push
sahf
xor
jge
or
inc
xchg
scas
lods
lods
push
pop
aam
dec
xchg
shl
rol
inc
mov
(bad)
jl
mov
jge
cmp
jae
mov
ficomp
fidivr
or
in
out
and
mov
out
or
add
mov
sbb
fiadd
(bad)
scas
and
cmps
jge
adc
inc
icebp
mov
xor
cmp
sbb
mov
out
stc
adc
sub
pop
mov
sub
cmp
cmps
rcl
rcl
sti
pop
and
xchg
sbb
xchg
dec
jns
sbb
ret
lods
adc
int3
mov
test
hlt
cmp
mov
fisttp
xlat
jp
cmp
sbb
mov
add
adc
(bad)
lods
push
dec
xor
iret
loope
cmp
mov
bound
xchg
out
inc
xchg
ds
cmp
jno
push
lods
arpl
add
mov
dec
push
punpckhwd
int3
movs
test
mov
pop
jb
and
push
sub
dec
das
sub
pop
cs
pop
pop
pop
sub
adc
add
imul
test
ret
(bad)
out
jl
or
or
in
jne
in
push
and
inc
jo
or
pop
fs
loopne
xor
ss
dec
mov
dec
pop
nop
pop
ret
mov
mov
mov
repnz
cmp
sbb
push
dec
jle
idiv
into
fisubr
mul
repnz
push
outs
lods
mov
add
(bad)
fbld
mov
sahf
mov
mov
push
mov
(bad)
jae
into
ja
arpl
jns
dec
cli
pop
mov
iret
fisub
call
loope
in
out
out
out
sbb
push
(bad)
aad
xlat
ret
mov
inc
in
inc
fwait
mov
sbb
push
cmps
cmp
sub
and
mov
jg
jmp
retf
pushf
pop
daa
fadd
fidiv
xor
icebp
mov
xchg
loopne
pop
push
comiss
jg
adc
sahf
jg
ror
mov
xor
cmp
jle
push
or
cmp
dec
cmp
adc
out
add
sub
sub
scas
inc
inc
push
xor
movs
dec
(bad)
pop
mov
rcr
pop
lds
push
jo
jecxz
jp
mov
(bad)
mov
mov
movs
(bad)
(bad)
lods
arpl
scas
mov
in
and
xchg
nop
nop
test
mov
inc
inc
mov
clc
fimul
stos
cmps
mov
fst
movs
ins
cmp
pop
rcr
dec
int
popf
mov
outs
outs
outs
outs
out
dec
add
(bad)
out
sbb
adc
or
and
push
and
jne
repz
xlat
test
repnz
jle
dec
push
out
mov
mov
aaa
outs
dec
or
lods
fadd
lods
ja
mov
das
loop
mov
and
dec
jle
mul
and
(bad)
adc
cmp
cmp
cmp
cmp
pusha
pusha
pusha
pusha
les
call
mov
jmp
mov
push
and
mov
xchg
cmp
mov
push
pop
pop
pop
imul
out
out
aaa
push
dec
mov
inc
inc
inc
sbb
pop
push
rol
outs
(bad)
fidivr
fsubrp
mov
mov
add
sbb
jmp
push
retf
xor
mov
inc
cmp
loopne
lods
sub
lods
push
fidiv
xchg
daa
sub
repz
pushf
push
out
and
jecxz
movzx
pop
xor
dec
movs
cmp
mov
jle
pop
mov
mov
aas
stc
push
fbld
xlat
jbe
xor
or
cdq
xor
push
mov
(bad)
sub
lock
mov
mov
adc
sbb
fsub
stc
jns
xor
daa
fnstenv
clc
inc
popa
jo
or
clc
outs
jg
or
outs
ss
add
mov
iret
fstp
test
sub
into
(bad)
cmps
cmps
rcl
pop
fist
add
mov
or
mov
cmp
outs
out
inc
arpl
ds
sbb
jae
mov
mov
push
push
push
repz
jle
xor
xor
xor
hlt
jmp
dec
or
call
and
cmp
pop
rcr
pusha
and
or
mov
xor
mul
or
mov
lods
dec
jne
push
stos
mov
lea
scas
ret
inc
inc
sub
imul
or
jge
mov
ins
push
push
iret
fiadd
pop
jns
lock
addr16
ja
dec
pop
(bad)
aad
clc
in
fld
es
push
cwde
adc
inc
adc
add
jnp
jmp
jle
sbb
fnstenv
call
out
push
retf
ficom
xor
mov
and
mov
ret
pop
xchg
(bad)
xchg
retf
mov
mov
dec
pop
ror
mov
mov
adc
repnz
aas
imul
xor
je
mov
mov
lahf
pop
add
jl
jns
in
(bad)
xlat
(bad)
(bad)
(bad)
mov
enter
push
leave
sub
cmp
cmp
pusha
enter
scas
mov
mov
in
sbb
cmp
ss
push
fimul
add
jo
sbb
mov
je
jmp
or
cmp
aad
add
mov
(bad)
(bad)
arpl
cdq
add
mov
mov
outs
outs
jmp
test
xor
xor
pop
mov
pop
(bad)
xor
js
outs
aaa
bnd
aaa
hlt
add
call
popf
dec
dec
dec
into
mov
sbb
sbb
adc
ds
daa
mov
mov
xor
or
loop
jecxz
pop
ret
dec
jle
mul
lods
xlat
sub
shr
lds
pop
mov
mov
sbb
dec
scas
lods
lods
mov
inc
push
inc
dec
shr
add
xor
jle
jg
mov
ror
loopne
out
pop
pop
loop
in
gs
cwde
jmp
jg
inc
xor
dec
ds
ret
bound
test
jmp
outs
xchg
mov
ins
jge
mov
or
movs
test
inc
mov
aas
pop
outs
and
sar
pushf
fidiv
movs
jecxz
sub
jno
js
jno
sub
inc
xor
push
xlat
mov
xchg
cld
mov
sar
rcl
in
out
icebp
or
sar
mov
mov
xor
enter
xchg
sub
push
jle
lds
sub
in
jp
jae
pop
add
loopne
pop
ss
cmp
dec
mov
outs
mov
daa
jg
pusha
add
push
mov
mov
xlat
cwde
scas
pop
adc
scas
push
sub
jg
es
addr16
movs
shl
cwde
or
out
xchg
into
dec
or
add
sbb
jl
iret
cdq
lock
sub
inc
ja
xchg
dec
sub
mov
cmps
(bad)
dec
iret
cmps
ss
or
jae
jnp
fs
or
dec
sub
and
sub
xchg
ins
pop
xor
cmps
retf
movs
inc
mov
rep
xchg
repz
cdq
jmp
push
shl
lods
rcl
jne
bnd
bnd
and
test
push
dec
scas
fistp
or
and
movs
retf
mov
dec
enter
push
xchg
jl
je
add
jns
js
dec
or
dec
or
cmp
jecxz
loopne
xchg
or
into
loope
inc
in
out
lds
(bad)
ss
inc
daa
inc
mov
inc
push
je
push
fbld
dec
data16
dec
data16
xor
or
or
fwait
mov
loopne
das
inc
int3
inc
int
mov
(bad)
outs
outs
repz
ss
mov
clc
neg
lea
adc
lahf
or
ret
cmp
xchg
mov
jle
ret
retf
xchg
mov
mov
and
fwait
xchg
(bad)
call
mov
mov
sub
jecxz
inc
mov
inc
jg
jbe
mov
and
lods
and
int
cmc
push
lahf
fstp
mov
cmp
fld
mov
dec
pusha
jo
pusha
dec
pusha
jo
inc
outs
jg
inc
outs
jg
xchg
mov
mov
jge
mov
and
or
aad
pop
rcr
pop
ror
mov
into
mov
iret
mov
sub
xor
lods
(bad)
jne
cld
ja
cld
jne
dec
lds
dec
(bad)
or
test
in
lea
retf
add
or
and
ins
mov
dec
cmp
sbb
imul
mov
pop
arpl
jecxz
adc
mov
adc
adc
sub
sub
add
pop
mov
mov
test
lea
shl
mov
arpl
mov
cld
in
jo
cld
in
ror
jo
mov
dec
daa
dec
into
into
into
pop
and
pop
pop
xchg
jo
pop
into
pushf
int
add
inc
sub
ss
ss
das
push
push
mov
aas
inc
js
hlt
les
cmps
xchg
out
ftst
out
out
or
push
mov
dec
and
cmp
iret
inc
(bad)
push
mov
aad
aam
cmp
cmps
and
aam
dec
xchg
stos
mov
push
mov
repz
jo
mov
sbb
nop
mov
call
pushf
sbb
xor
adc
mov
mov
mov
scas
(bad)
mov
fcomp
inc
outs
sbb
inc
cld
xchg
lds
jae
dec
jp
jae
pop
pop
ss
inc
dec
pop
ss
inc
inc
sub
jbe
outs
pop
pop
add
outs
pop
adc
loop
out
outs
outs
outs
xor
mov
jmp
jge
repz
sub
sti
pop
or
stos
push
aaa
pop
jnp
out
cwde
jnp
imul
popa
adc
jle
sbb
jb
fbstp
push
cmp
mov
mov
or
or
call
lds
dec
or
push
outs
in
xchg
mov
mov
(bad)
mov
repz
mov
inc
(bad)
jecxz
out
ins
sbb
out
cmc
push
cmc
adc
push
sbb
ds
cmc
cmp
mov
in
pop
dec
bound
add
shr
stos
stos
mov
dec
dec
dec
dec
dec
dec
mov
mov
sub
hlt
or
fiadd
jmp
and
jecxz
aad
cwde
out
push
loope
push
mov
retf
inc
inc
inc
sar
cwde
test
scas
jp
addr16
imul
icebp
sti
sbb
sbb
mov
cmp
mov
(bad)
outs
outs
repz
mov
mov
push
test
rol
rcr
push
not
pop
sbb
pop
dec
inc
leave
jecxz
mov
inc
jbe
mov
mov
jbe
repnz
mov
mov
mov
call
idiv
xchg
js
or
rcr
rcr
ins
xor
mov
(bad)
dec
shl
mov
xor
out
lods
fsubr
sbb
push
pop
ss
pop
ss
push
lods
fld
outs
(bad)
jo
mov
pusha
add
dec
or
(bad)
mov
mov
icebp
inc
sub
dec
es
ss
es
mov
call
out
xchg
mov
and
adc
cli
sar
movs
loop
dec
test
push
and
hlt
add
jnp
sbb
add
outs
sub
and
cmp
cwde
loop
jge
je
sar
sar
mov
test
fsubr
and
sub
mov
adc
(bad)
nop
stc
mov
rcr
and
movs
popa
fsubr
test
les
fist
push
retf
mov
stos
jae
dec
sub
mov
mov
cmc
dec
cld
xchg
jo
lods
test
hlt
rcl
test
lahf
inc
out
aam
sub
mov
xchg
test
or
inc
es
aas
das
pusha
push
hlt
mov
(bad)
in
jbe
jne
imul
xchg
outs
or
shl
lds
enter
int3
mov
xor
inc
xor
aaa
xor
mov
iret
ret
lods
fst
fistp
rcr
xor
mov
dec
push
inc
jbe
mov
repz
jns
jnp
mov
jae
inc
jae
call
inc
jle
(bad)
pop
aas
aam
jae
xor
aaa
in
pop
or
enter
mov
push
cmp
test
lea
mov
xor
loopne
sbb
mov
sbb
test
lods
bound
sub
aas
mov
addr16
outs
out
outs
in
pushf
mov
out
xor
stos
and
outs
sub
sub
sbb
push
push
pop
fwait
enter
add
dec
popa
in
aas
outs
outs
outs
popa
inc
(bad)
outs
(bad)
out
(bad)
lock
(bad)
dec
mov
test
sub
(bad)
mov
and
push
mov
int
dec
sbb
nop
retf
sbb
mov
pop
mov
adc
sbb
jbe
leave
out
jbe
leave
out
push
icebp
fmulp
inc
icebp
fmulp
pop
fdecstp
out
mov
cli
repnz
cmp
jmp
scas
xchg
aad
and
lods
daa
jmp
and
inc
retf
add
or
cmps
(bad)
fstp
inc
adc
cmp
jl
cmp
inc
mov
inc
mov
inc
cmps
loope
movs
(bad)
in
mov
loope
out
out
call
dec
ret
dec
inc
inc
inc
xor
mov
mov
data16
cwde
sbb
sbb
pop
ja
dec
mov
icebp
scas
dec
mov
pushf
jmp
aas
pop
push
jo
aas
pop
pop
in
dec
mov
retf
mov
lods
mov
and
push
push
xor
into
(bad)
icebp
inc
mov
cld
mov
les
mov
pop
sbb
gs
or
test
call
and
(bad)
cmps
xchg
cmp
mov
retf
aaa
inc
ja
mov
inc
pop
pop
pop
(bad)
jle
fucom
jecxz
jecxz
or
cmp
movs
iret
and
out
lahf
lahf
lahf
adc
pusha
in
sub
outs
in
xor
dec
test
jge
leave
sub
in
mov
fstp
pop
mov
pop
or
dec
bound
or
retf
outs
(bad)
push
lock
stc
sub
add
inc
and
mov
cmps
(bad)
neg
push
jae
sbb
fs
dec
or
sub
sub
sub
jne
jge
je
xlat
sar
mov
in
pushf
mov
xchg
push
push
jnp
jbe
div
mov
fdiv
daa
jge
pusha
(bad)
addps
stos
pop
adc
mov
sub
push
mov
cmp
jo
cld
int3
xchg
push
cmc
pop
repnz
or
inc
(bad)
loop
out
imul
mul
jmp
mov
dec
or
push
retf
inc
push
pop
or
jl
das
scas
mov
in
and
inc
inc
fist
mov
scas
mov
loope
fwait
inc
or
inc
cmp
sti
cmc
leave
dec
adc
shl
add
adc
mov
mov
jge
jge
jge
jge
aas
aas
aas
aas
js
xlat
(bad)
mov
aas
arpl
out
sahf
pop
push
xchg
push
cmps
jge
jl
mov
push
das
neg
pop
or
enter
dec
enter
mov
cmp
cmp
add
shr
cmp
xchg
out
sbb
movs
xchg
es
outs
push
mov
pusha
ins
mov
test
cmp
xchg
ja
inc
cmp
and
pop
outs
scas
xchg
sub
sub
movs
lea
enter
pop
out
xchg
iret
cwde
out
xchg
sub
popa
adc
pop
or
cmp
sbb
sub
fldenv
sub
mov
or
stos
imul
inc
cmc
push
fisttp
sbb
jge
jne
jge
(bad)
ja
xor
xchg
vmovsd
pushf
in
in
pushf
mov
shufps
lods
xor
pop
shl
test
pop
mov
ror
call
outs
pop
ins
scas
lods
lods
lods
(bad)
inc
add
stos
inc
mov
add
mov
or
leave
dec
or
dec
daa
retf
sbb
pop
pop
xchg
shr
out
out
out
out
arpl
(bad)
dec
ret
inc
ret
xchg
test
je
je
data16
inc
(bad)
in
pushf
movs
or
jo
sbb
lock
inc
inc
xor
mov
jg
mov
repnz
inc
mov
and
inc
pop
mov
test
mov
push
stos
(bad)
repnz
inc
retf
xchg
outs
add
sbb
add
cmp
cmp
mov
arpl
xchg
jo
psllq
pop
mov
dec
fs
test
jae
mov
ds
leave
fdivr
xor
cmp
shr
push
jecxz
jecxz
hlt
jne
jecxz
cli
ins
mov
push
lods
xlat
scas
push
fcmove
inc
pusha
pusha
pusha
cmps
data16
jg
test
jp
mov
xor
mov
arpl
push
or
cmp
sub
pop
dec
fwait
or
jns
into
mov
fsubr
outs
in
push
push
scas
je
idiv
sbb
dec
adc
and
hlt
imul
or
cmp
xor
les
sbb
dec
pop
dec
mov
mov
mov
mov
sbb
sbb
mov
sbb
mov
mov
mov
out
test
or
jmp
das
out
dec
mov
xlat
xchg
leave
push
and
jns
shl
push
sti
adc
fcmovu
or
push
xchg
xor
jg
aas
outs
inc
mov
es
into
into
imul
fcos
out
out
addr16
inc
(bad)
(bad)
mov
dec
lea
mov
add
dec
add
ja
inc
adc
adc
ins
or
lock
sbb
cmp
stos
ss
pop
cmp
ss
retf
xor
xor
xor
aaa
fst
lods
mov
rcr
(bad)
pushf
dec
sbb
dec
dec
xor
inc
pop
mov
repnz
mov
sar
mov
ret
ins
mov
fisub
add
and
pop
mov
test
inc
mov
int3
mov
xor
inc
dec
stos
loop
push
les
push
adc
dec
imul
sar
movs
loop
movs
inc
ret
add
push
nop
nop
nop
test
js
mov
mov
retf
fst
jmp
rcr
cmps
sub
mov
outs
outs
in
mov
shr
(bad)
push
les
fcmovb
dec
fdivr
sub
mov
jae
sub
clc
jb
jns
adc
dec
dec
fcom
inc
into
xor
push
mov
outs
xor
inc
push
xor
jae
ret
cmp
or
arpl
xchg
(bad)
pop
mov
push
rol
cmps
mov
push
cmc
cmc
inc
scas
daa
icebp
dec
dec
loopne
xor
xchg
mov
lods
inc
pop
mov
pop
inc
ss
add
jg
imul
jo
jg
xor
movs
into
movs
into
inc
xchg
or
loopne
or
out
out
and
in
xchg
dec
mov
xor
pop
mov
lea
in
dec
cwd
adc
ins
sbb
sbb
ins
xchg
push
(bad)
lods
mov
out
xor
xor
cmp
xor
cli
mov
mov
pop
xchg
fistp
or
addr16
bound
mov
pop
sbb
adc
xor
out
jbe
xchg
movs
mov
mov
jmp
adc
xchg
adc
adc
aad
out
scas
ret
pop
sar
cmp
mov
xor
add
adc
(bad)
adc
cmp
lock
jno
lods
out
in
out
in
jmp
jecxz
and
jmp
arpl
cmp
adc
std
pusha
mov
cmp
mov
and
xchg
push
ret
push
rcr
push
add
mov
popa
jecxz
ins
outs
outs
in
idiv
pushf
mov
dec
dec
dec
into
xor
cmps
sub
test
sbb
lahf
adc
jg
outs
clc
jb
inc
into
xor
dec
fcom
sahf
mov
sbb
cwde
gs
mov
xor
mov
mov
movs
in
jecxz
pusha
fwait
repz
bound
out
push
out
(bad)
push
scas
into
ss
div
mov
mul
in
mov
pop
test
loope
mov
ror
rcl
ss
arpl
add
xchg
pop
jp
or
add
in
retf
pop
xlat
mov
loopne
fs
loopne
push
or
out
out
ins
xchg
fld
mov
sub
retf
add
mov
mov
fucom
push
jp
mov
data16
pushf
fsubr
out
pop
push
inc
mov
or
dec
xor
retf
leave
xor
xor
dec
push
mov
xchg
sub
mov
mov
push
pop
pop
xchg
xor
dec
inc
iret
(bad)
dec
dec
mov
iret
movs
xchg
mov
test
in
(bad)
out
mul
sar
or
call
cli
js
(bad)
(bad)
pop
fwait
add
cwde
aaa
mov
aaa
cmp
mov
sar
ja
and
sbb
xchg
push
or
pop
shl
mov
out
lods
pop
ds
addr16
outs
out
aad
pusha
pusha
pop
and
outs
outs
in
xor
push
xor
inc
cmp
test
mov
outs
xor
sbb
or
add
pop
add
mov
cmp
or
and
stos
and
lahf
xor
or
cdq
clc
inc
icebp
scas
or
(bad)
int3
jns
loopne
mov
cs
outs
pop
les
mov
(bad)
pop
call
jbe
ds
ds
pop
and
or
xchg
ds
mov
sbb
(bad)
or
add
fnstcw
fsub
jbe
jne
imul
mov
retf
or
arpl
pop
add
mov
es
pop
pop
mov
out
fwait
xchg
gs
(bad)
in
push
fdiv
sub
xor
(bad)
(bad)
jmp
cdq
adc
lock
sbb
inc
inc
pushf
jg
repz
mov
mov
retf
enter
mov
cmp
aaa
icebp
daa
test
(bad)
cmps
mov
pop
xchg
push
retf
dec
aas
cdq
dec
les
movs
or
out
mov
mov
aaa
jo
pop
pop
xchg
call
jnp
and
neg
xchg
(bad)
(bad)
mov
xor
aaa
xchg
xchg
mov
test
stos
rol
retf
(bad)
mov
dec
hlt
mov
sbb
jecxz
sbb
cmp
jno
push
xor
bound
pusha
pusha
jecxz
jo
pop
jl
retf
xchg
nop
nop
mov
jmp
cmp
sub
sub
sar
pop
rol
mov
int
mov
sub
outs
jle
sahf
xchg
inc
(bad)
test
fs
xchg
sti
jmp
sub
jns
pop
repz
xchg
push
jnp
push
addr16
fadd
dec
int3
mov
fist
mov
int3
mov
mov
jecxz
cmps
pop
mov
cmps
push
mov
xchg
cli
sbb
rcr
ficom
push
jne
loop
mov
aad
fsub
int3
jle
jmp
rep
shr
aas
inc
mov
jl
nop
or
xchg
fistp
hlt
sub
inc
xchg
(bad)
mov
arpl
adc
daa
imul
mov
xor
mov
adc
inc
adc
mov
fwait
je
xchg
mov
xor
push
loopne
pop
mov
ss
icebp
add
inc
aad
repz
xor
jo
aaa
push
aas
push
movs
out
test
fild
pop
pop
pop
pushf
sub
iret
mov
cmp
cmovb
bound
in
dec
cmp
lods
js
(bad)
js
jo
idiv
pop
aas
jl
fild
xlat
outs
adc
test
mov
js
adc
xchg
cmp
fidiv
mov
and
cmp
mov
(bad)
mov
out
push
push
lahf
fstp
xchg
pop
in
stc
mov
int
jl
inc
repnz
xchg
daa
lods
jae
jmp
mov
mov
in
sub
xor
xor
xor
jnp
mul
and
ja
into
jp
jle
push
and
fbld
es
xchg
pop
mov
fs
mov
in
scas
push
xchg
cmps
jp
mov
into
mov
jp
je
imul
mov
push
mov
dec
xchg
mov
sub
stos
cmp
pop
ins
dec
pop
mov
not
mov
(bad)
mov
and
fwait
out
push
lock
jmp
sbb
mul
push
fst
or
stc
mov
mov
mov
push
inc
stos
and
mov
es
aad
ror
fimul
jg
cld
mov
mov
mov
cmps
call
push
adc
adc
fst
mov
dec
(bad)
arpl
je
cdq
aas
aas
ss
adc
lock
out
out
pop
in
inc
inc
inc
push
inc
pop
inc
xor
or
fcomp
sti
je
xor
pop
lods
aam
ret
mov
sub
loopne
pop
xchg
ret
pushf
pop
adc
dec
dec
dec
jb
inc
inc
into
mov
mov
cmp
mov
add
repz
xor
mov
aas
xchg
adc
xchg
pop
push
loop
(bad)
mov
and
pop
scas
repnz
fdivr
sub
dec
sub
imul
pop
pop
pop
dec
clc
xchg
aam
or
dec
jge
cmp
cs
xor
adc
in
adc
jmp
aas
test
mov
shl
push
repnz
(bad)
pop
xor
ret
shl
daa
dec
mov
xlat
or
sub
xchg
pop
xchg
add
add
add
adc
imul
mov
pusha
fnsave
sub
fstp
dec
add
cmp
xor
pop
sbb
int3
fist
lock
xor
dec
dec
dec
xor
mov
sbb
adc
mov
outs
cmp
fwait
and
and
or
sbb
outs
daa
leave
inc
inc
jmp
dec
bound
outs
jne
outs
clc
es
es
jnp
add
mov
into
int3
shl
inc
or
lahf
or
es
leave
into
into
dec
scas
clc
loopne
mov
jmp
imul
mov
(bad)
or
sbb
cmc
mov
cdq
in
and
push
bound
pop
adc
mov
iret
mov
mov
mov
xor
iret
jo
mov
int3
mov
loopne
inc
sub
sbb
push
pushf
push
pop
pushf
add
movzx
mov
xor
inc
mov
xchg
js
sti
jp
sti
fdiv
aas
cmc
xchg
gs
push
jb
popf
jl
xchg
jno
or
sub
dec
lods
xor
inc
mov
rcr
fs
pop
pop
pop
jecxz
or
sbb
imul
into
loop
(bad)
in
adc
pusha
pusha
jecxz
ja
adc
sbb
lock
jno
jne
push
xor
repz
sub
jae
pop
pop
rcl
fld
xchg
aaa
dec
imul
push
push
dec
sbb
jle
pushf
mov
ja
dec
dec
int
mov
xchg
outs
fild
cli
dec
sub
add
popf
sub
pop
push
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
retf
xlat
dec
sbb
and
adc
xchg
mov
mov
dec
out
ret
xchg
out
or
sbb
test
les
std
sbb
out
test
iret
xchg
fmulp
pop
retf
stos
mov
xlat
or
fcom
jo
cmp
ins
or
lahf
or
mov
jne
pop
jo
cmp
cmp
xor
xchg
lock
xchg
loop
push
outs
or
inc
add
fidivr
mov
mov
adc
je
fwait
je
push
mov
nop
cdq
cdq
in
cmp
fcomp
inc
inc
loop
jmp
pushf
popf
inc
mov
dec
or
js
mov
xor
ror
cmp
shl
cmps
mov
dec
adc
sub
arpl
(bad)
or
push
jo
aas
stos
xor
call
xchg
jo
icebp
aaa
je
xor
push
aas
pop
jno
sbb
or
mov
aam
shl
aam
mov
ds
into
cmp
dec
xor
cmps
push
mov
jmp
stc
jns
bound
iret
fisub
es
retf
inc
xor
cmp
addr16
dec
outs
test
lds
sbb
fst
aam
xor
mov
js
pop
shr
js
xchg
shl
nop
pusha
add
ja
mov
adc
or
test
shr
stc
push
fcomp
fsubr
repz
repz
sub
jnp
xor
lea
add
xlat
xlat
dec
nop
test
retf
in
sbb
loop
sub
jmp
push
cwde
(bad)
push
nop
cli
cmc
cmp
cli
into
test
jae
push
pusha
pusha
inc
inc
inc
inc
inc
inc
inc
inc
popa
popa
popa
popa
clc
es
cs
pop
adc
push
dec
adc
or
mov
or
dec
jp
out
jle
cwde
sahf
or
loopne
xchg
adc
sbb
jle
adc
gs
(bad)
mov
lds
int
test
inc
es
push
aas
mov
jmp
sub
mov
sbb
fwait
out
pop
cmp
mov
inc
(bad)
enter
inc
(bad)
mov
xor
mov
push
cmp
fidiv
push
(bad)
(bad)
shl
pop
pop
call
imul
sub
daa
push
les
mov
repz
fwait
mov
push
jnp
mov
jo
pop
pop
out
adc
rcr
ins
div
fidivr
lahf
aaa
sub
sub
inc
mov
inc
ins
xor
xor
call
xchg
push
jecxz
ret
(bad)
ss
mov
pop
cmps
and
pusha
mov
adc
xchg
sbb
lods
sub
add
fstp
(bad)
shr
sub
pop
rol
mov
cmps
cmps
fistp
(bad)
rol
ins
aad
loopne
(bad)
outs
jle
in
in
pop
inc
idiv
push
sbb
inc
inc
ficom
push
and
inc
vpmacssdql
inc
add
pop
bound
cmps
or
inc
dec
dec
repz
fld
test
pop
mov
in
das
jmp
out
fisubr
sbb
div
stc
arpl
xor
scas
lods
lods
cmc
sbb
dec
fild
bound
mov
lods
fdivr
inc
stos
xlat
dec
add
cmp
jle
mov
into
jle
or
imul
mov
adc
ins
in
aad
xor
inc
jae
es
test
sahf
xchg
inc
addr16
cmps
adc
xchg
pop
outs
out
inc
inc
fucomi
xor
ds
repz
pop
retf
(bad)
ud1
mov
dec
inc
inc
inc
aam
mov
cmp
sub
xchg
rcr
xchg
sub
xchg
pop
dec
cmp
sbb
mov
mov
xchg
and
ds
jo
mov
cmp
dec
gs
sub
or
and
sub
xchg
sub
aaa
aaa
cwde
and
mov
mov
mov
fs
rol
(bad)
mov
je
adc
(bad)
jmp
cmp
loope
and
outs
into
jnp
mov
std
inc
xor
scas
scas
(bad)
(bad)
fld
sub
sub
rcr
cmps
fistp
mov
push
outs
dec
outs
outs
add
inc
fild
out
test
sbb
inc
leave
(bad)
fst
push
push
fs
cs
mov
lahf
xchg
xchg
mov
ret
mov
mov
repz
in
xchg
sahf
add
dec
out
mov
jecxz
jecxz
push
fwait
loop
mov
cmp
sbb
gs
adc
xor
stos
xor
cld
les
inc
jne
or
outs
lds
sbb
mov
or
(bad)
mov
into
pop
jnp
mov
retf
dec
push
retf
inc
(bad)
icebp
xchg
clc
xor
mov
add
inc
pop
xor
add
mov
dec
fiadd
addr16
outs
cdq
jae
inc
addr16
fsubr
xchg
sub
outs
cmp
cmp
cmp
xor
xor
enter
push
and
sub
cmp
inc
pushf
sti
pushf
push
pop
iret
mov
inc
ja
ror
lds
mov
stos
scas
xor
repz
js
adc
aaa
dec
gs
mov
pop
mov
jb
xchg
pop
jbe
(bad)
pop
es
inc
xlat
(bad)
xchg
mov
ret
popa
popa
outs
ror
(bad)
pusha
dec
stos
mov
adc
cli
mov
sub
push
and
jno
jne
inc
popa
jo
push
ud0
in
xchg
dec
loope
dec
push
sub
aaa
xchg
add
cmp
add
mov
gs
pop
shr
cld
call
jle
mov
jmp
hlt
sbb
pop
jle
inc
mov
mov
cli
pop
in
push
imul
lods
xor
mov
jmp
push
adc
sbb
out
xor
dec
ret
and
mov
js
repz
jl
out
mov
fnstenv
fcmovnu
(bad)
sbb
push
xchg
lods
mov
mov
mov
lods
mov
outs
(bad)
(bad)
(bad)
(bad)
push
enter
xchg
ror
(bad)
pop
mov
hlt
cmp
xor
inc
lea
mov
mov
xor
dec
cs
cmp
inc
inc
inc
xor
mov
mov
aas
cmp
dec
xchg
hlt
fwait
hlt
add
xor
push
cmp
and
stc
or
ret
sar
aaa
stc
test
jnp
push
in
rol
pop
sahf
sub
jmp
mov
pop
pop
pop
sahf
cpuid
(bad)
cpuid
cs
dec
les
sbb
jl
icebp
pop
rcl
mov
call
pop
sub
nop
call
fdivp
xlat
(bad)
(bad)
mov
enter
les
ror
(bad)
imul
sbb
mov
mov
icebp
or
mov
imul
bnd
ins
jmp
jae
sub
std
pop
cmp
pop
mov
mov
inc
int
inc
ror
sub
rcr
in
sub
int
outs
outs
outs
outs
in
data16
pcmpeqb
movs
mov
or
and
push
push
sbb
sbb
dec
cld
cmp
arpl
push
int3
sub
sbb
jg
push
mov
mov
cmp
cmp
sub
xchg
jecxz
out
or
cmp
(bad)
push
fwait
lods
jge
stos
xor
(bad)
cli
daa
fldenv
add
xchg
pop
add
mov
pop
aad
sub
inc
inc
add
test
xchg
imul
pop
add
mov
inc
mov
fcmovnu
imul
adc
mov
xor
leave
dec
retf
add
fadd
adc
cmps
jb
cmp
fild
std
inc
fcomi
cli
xchg
push
fwait
cdq
inc
pop
dec
or
mov
sub
aaa
mov
rcl
pop
xchg
fistp
fistp
call
pop
mov
pop
cmp
loopne
out
aad
(bad)
repz
dec
jae
dec
cdq
std
mov
lock
or
sub
jge
pop
xchg
ficomp
rcl
xor
mov
pop
mov
cmp
cmp
mov
pop
sub
sbb
sbb
inc
inc
xchg
stc
fs
xor
ins
mov
outs
fisubr
cs
lahf
lahf
or
nop
sbb
sbb
mov
into
test
push
sub
and
in
or
jmp
push
shr
(bad)
je
ja
ror
push
cmp
(bad)
(bad)
mov
sbb
and
mov
add
cmp
repz
xor
mov
mov
pop
imul
nop
pop
pop
and
outs
mov
mov
ret
jmp
movs
out
mov
(bad)
fsubp
out
mov
ss
mov
jae
cmp
loope
xchg
movs
fsub
dec
(bad)
jg
dec
in
lock
sahf
ins
lock
clc
enter
mov
retf
mov
test
ja
aas
retf
test
fild
in
daa
mov
loopne
cs
add
les
leave
cmp
mov
dec
je
xchg
mov
in
and
push
jbe
adc
lock
out
fcomp
(bad)
fwait
mov
ret
(bad)
fmul
iret
iret
pop
xor
(bad)
mov
xor
rcl
sar
int3
jmp
call
movzx
pop
inc
shr
cmp
xchg
dec
push
xor
js
scas
xor
mov
adc
test
retf
or
or
sub
bound
aaa
dec
or
inc
jge
data16
sub
pusha
imul
dec
hlt
xchg
popa
adc
arpl
sbb
jno
ss
ja
lods
daa
addr16
cdq
dec
stos
xor
in
cmp
xchg
push
outs
outs
in
loope
dec
int3
mov
retf
and
test
stos
in
and
sahf
sbb
mov
scas
mov
gs
(bad)
in
out
cmp
cmp
(bad)
mov
int
lods
test
inc
ins
sub
push
(bad)
sub
test
cmps
add
adc
xlat
xlat
dec
dec
dec
nop
jecxz
cmps
cmp
xchg
mov
mov
mov
mov
imul
rcr
(bad)
fidivr
dec
(bad)
lds
jg
sar
xchg
and
lods
daa
call
add
scas
sbb
js
pop
addr16
jns
test
and
outs
hlt
lds
ret
retf
sub
loope
loopne
imul
out
push
(bad)
(bad)
dec
xchg
sub
stos
lock
mov
dec
xchg
cmp
cmp
(bad)
out
pop
sbb
sbb
sbb
retf
mov
out
ret
ret
and
mov
mov
int3
lods
inc
int3
(bad)
cmp
sub
sub
pop
sbb
push
xor
pushf
inc
outs
pop
ret
dec
repnz
dec
dec
mov
in
lds
or
jo
idiv
nop
mov
test
jmp
gs
jb
add
mov
add
sti
ds
(bad)
jmp
pusha
sub
push
sub
sbb
sbb
fmul
loop
lock
or
fld
jae
retf
jno
pusha
xor
mov
xchg
outs
outs
xor
jecxz
jnp
xor
pushf
mov
jae
push
push
ss
(bad)
(bad)
stos
in
and
push
movntq
pop
cwde
mov
sub
jmp
jp
mov
add
ror
mov
outs
mov
push
mov
jb
or
or
imul
xor
outs
ror
retf
cmp
add
jmp
mov
loopne
mov
sbb
ret
jg
repz
gs
xchg
or
sbb
loop
mul
jne
jmp
fs
jmp
(bad)
sahf
sbb
es
es
adc
mov
adc
je
push
out
jle
dec
add
inc
add
cmp
add
rcl
xor
fist
call
sub
cmps
dec
mov
(bad)
mov
xor
mov
inc
mov
push
dec
(bad)
movs
or
pop
adc
mov
jae
mov
or
fcomp
retf
inc
stos
push
jmp
inc
and
pop
iret
iret
iret
in
mov
test
rol
cmp
pop
mov
push
pop
pushf
aad
aaa
xchg
stos
push
adc
cdq
test
mov
scas
xor
scas
mov
je
mov
mov
xchg
sub
mov
mov
ja
xchg
xlat
and
int
cmc
pop
and
jmp
cmp
push
mov
and
imul
cmp
mov
jo
jne
xor
push
popa
jo
nop
mov
xchg
jmp
call
test
cmps
loop
and
or
cmp
add
push
xor
mov
jle
jmp
cmp
add
je
jl
pop
enter
mov
mov
mov
jns
in
fpatan
xchg
xchg
mov
xor
adc
cmp
or
cmp
cmps
fild
xchg
mov
fnsave
sbb
adc
mul
xchg
cld
sbb
stos
retf
out
cmp
cmp
jo
push
push
push
jp
scas
loopne
rcl
xlat
dec
fild
inc
sti
lds
out
pusha
inc
push
sub
pusha
inc
xchg
jmp
jl
hlt
(bad)
cld
mov
fbstp
mov
mov
pop
pop
pop
ss
mov
sub
lods
add
les
and
sub
arpl
xchg
in
jbe
out
ins
cmp
ins
cmp
inc
retf
retf
mov
xor
in
iret
iret
push
mov
loope
xchg
test
jg
xor
pop
jg
imul
dec
dec
dec
cmp
jne
jbe
xchg
or
sti
js
pop
xchg
pusha
dec
dec
dec
(bad)
(bad)
(bad)
pop
(bad)
(bad)
gs
sub
nop
sub
cmc
xlat
(bad)
mov
mov
mov
mov
push
pop
(bad)
stos
es
xlat
pop
xchg
shl
hlt
iret
jecxz
(bad)
out
sar
(bad)
sub
sbb
ss
in
lods
retf
fs
popa
jo
pushf
dec
outs
jg
imul
sar
inc
cmp
xor
cmps
fistp
mov
cmps
cmps
cmps
mov
test
cwde
(bad)
aad
fucom
cmp
jbe
outs
jle
out
(bad)
out
xchg
out
dec
pop
daa
dec
movs
pop
mov
push
sub
and
fadd
repz
mov
js
loopne
sbb
xchg
xchg
xchg
cdq
movs
dec
mov
(bad)
outs
dec
or
fmul
test
fist
iret
(bad)
loop
mov
push
xor
sbb
ins
push
pop
sbb
pop
sub
jge
or
inc
popf
jg
push
push
pop
popa
xchg
xchg
movs
push
mov
repz
and
rol
adc
mov
mov
jle
es
mov
mov
ficomp
fisub
and
out
fwait
leave
mov
aad
sti
lds
ret
jle
xor
mov
stos
mov
mov
test
or
inc
inc
fistp
stos
das
mov
mov
stc
or
clc
add
xchg
in
mov
jo
pop
pop
pop
pop
pop
pop
pop
fcmovnu
fcmovnu
inc
pushf
sti
inc
sbb
pop
and
dec
and
loopne
mov
popf
xor
repz
lods
lods
test
push
jmp
mov
fistp
and
jl
or
cmp
ret
sub
push
test
aaa
aaa
popf
inc
mov
push
push
mov
stos
inc
xchg
pop
cmp
dec
cmp
mov
cmp
jne
jno
bound
ss
add
pusha
jg
nop
pop
outs
outs
outs
outs
sbb
call
inc
and
ins
or
shr
push
(bad)
hlt
lods
movs
ja
mov
dec
inc
sbb
pop
mov
jbe
fcomi
les
dec
dec
fdivr
test
in
or
or
das
fsub
xor
imul
les
imul
push
sbb
sbb
cwde
fild
test
push
jecxz
call
imul
rcl
shl
(bad)
(bad)
xor
div
div
xor
cmp
mov
xor
sbb
mov
add
sub
adc
fcmovnu
(bad)
fadd
add
hlt
xchg
cdq
inc
aaa
inc
add
mov
loopne
sub
jmp
sbb
aad
add
rol
leave
pop
(bad)
mov
and
mov
dec
sbb
pop
dec
xchg
enter
repz
add
repz
iretw
pop
fmul
or
lods
aaa
push
adc
ror
xchg
fist
dec
dec
mov
out
in
jae
mov
dec
cmps
js
jo
jmp
js
movs
loop
aas
leave
mov
out
xchg
test
clc
sub
pop
shr
mov
inc
jmp
cmp
sar
sbb
cmp
mov
or
jecxz
(bad)
mov
aad
(bad)
mov
pop
xchg
mov
pusha
adc
jmp
outs
outs
outs
in
arpl
xor
sub
sub
out
sub
ficomp
mov
pop
pop
pop
or
or
fidiv
test
addr16
push
xchg
jnp
dec
(bad)
out
jp
lock
dec
mov
push
ins
dec
pop
sub
fdiv
and
movs
xchg
test
xchg
mov
and
ds
(bad)
cmp
add
dec
repz
mov
out
out
cmp
dec
xor
xchg
in
arpl
jecxz
shr
cmps
outs
stos
sbb
stos
adc
ror
cmps
jge
sbb
lods
push
fsub
call
mov
lods
inc
inc
jo
and
or
ret
sub
jg
outs
hlt
or
or
enter
xchg
sbb
adc
enter
and
mov
int3
cmp
in
push
lds
stos
mov
mov
gs
cdq
out
in
sbb
push
lock
push
out
mov
jns
xchg
xchg
inc
das
xchg
or
gs
xor
inc
sub
mov
call
pop
jmp
mov
mov
mov
jb
sub
lock
jbe
xchg
dec
repz
mov
mov
jb
popf
adc
push
fwait
mov
js
xchg
into
push
jl
mov
xlat
(bad)
ds
in
enter
dec
add
cmp
leave
cmps
cmc
sub
hlt
nop
xor
jbe
call
adc
movs
loop
movs
sbb
adc
xor
sub
sbb
add
int3
adc
sub
ror
ins
loopne
dec
or
jecxz
mov
rep
jle
mov
add
cmp
lea
scas
outs
out
mov
(bad)
(bad)
repnz
push
push
les
stos
xor
les
push
fwait
mov
or
cmp
loope
mov
push
fsub
jecxz
adc
neg
shl
ss
(bad)
jg
inc
mul
scas
jge
lock
mov
push
mov
or
je
call
cwde
xor
lods
mov
inc
shl
inc
xchg
sbb
inc
or
xchg
hlt
cmp
mov
mov
and
mov
or
movs
out
cs
mov
(bad)
aad
push
scas
leave
lods
nop
aas
inc
push
test
lea
mov
into
sbb
cdq
aas
fwait
jge
sbb
mov
ss
(bad)
ss
xor
xor
mov
inc
inc
jle
mov
xchg
ret
sub
cmp
aam
call
cmps
inc
ror
cmp
dec
cmp
dec
cmp
mov
icebp
inc
in
aas
dec
gs
pop
adc
not
jl
ja
inc
xlat
(bad)
in
inc
lea
mov
enter
imul
pop
pop
pop
(bad)
mov
sbb
sbb
sbb
cmp
pop
daa
cmp
mov
daa
es
mov
nop
sbb
loop
xchg
nop
inc
push
add
cmc
sub
fst
jmp
add
mov
mov
or
lods
out
(bad)
xchg
xchg
xchg
jbe
imul
jbe
aad
mov
cmp
fdiv
push
fsubr
repz
out
sti
nop
xchg
xchg
(bad)
retf
mov
ret
loopne
in
in
add
xor
dec
dec
dec
dec
ret
mov
outs
inc
sbb
push
push
in
out
imul
and
jno
fdivp
jge
jae
cmp
das
dec
lods
cmps
dec
(bad)
xchg
sqrtps
mov
pop
fadd
sub
xor
(bad)
mov
stos
mov
fmul
cli
repz
or
fisttp
mov
push
gs
adc
aad
call
and
cmp
test
inc
inc
inc
sar
jo
je
inc
cdq
cdq
in
ss
in
xchg
fiadd
repnz
mov
push
mov
xor
or
inc
xor
repz
inc
xchg
gs
int3
sub
cmps
pushf
call
aaa
push
dec
aas
pop
mov
jbe
cmps
mov
mov
repnz
repz
or
ja
aas
shl
mov
pop
or
or
sub
fidiv
mov
aaa
aaa
mov
inc
cmp
movs
mov
or
sbb
fistp
sbb
cmp
xor
dec
and
es
xor
es
retf
pusha
jecxz
lahf
xor
outs
mov
mov
mov
repz
(bad)
jl
lds
nop
cmps
imul
jle
or
add
popa
xchg
(bad)
(bad)
cmp
repz
dec
lea
stos
pop
nop
lods
lods
test
repnz
or
sbb
outs
imul
dec
jle
cmps
shl
sbb
xchg
pop
out
xor
lods
cmp
dec
out
ins
out
jecxz
or
out
ins
mov
imul
ss
fcomip
imul
repnz
dec
icebp
outs
test
add
add
iret
sahf
in
inc
lods
fld
data16
xchg
mov
popf
or
outs
inc
sbb
ja
or
retf
and
and
je
mov
sub
dec
cmp
jnp
inc
inc
inc
test
mov
dec
mov
cdq
dec
xchg
hlt
dec
dec
xchg
jmp
xor
mov
xor
and
into
iret
iret
mov
inc
xor
xchg
push
sbb
and
pushf
aam
bound
pop
retf
ret
add
rcl
xor
mov
or
aad
mov
adc
pop
idiv
dec
push
test
add
pop
nop
loop
lea
aaa
popf
inc
and
imul
in
jecxz
sbb
jecxz
push
xchg
in
jae
mov
ins
xor
and
lods
cs
in
pop
data16
lods
sbb
outs
nop
sbb
jmp
dec
retf
and
mov
aad
icebp
test
fsub
dec
jbe
lods
push
ins
cmps
in
pop
out
add
mov
xor
adc
out
popf
div
and
sbb
xchg
pop
xchg
cmp
jnp
ja
les
pop
les
inc
sbb
outs
pop
repz
sbb
xor
dec
ret
mov
mov
repz
or
mov
or
into
mov
retf
(bad)
mov
adc
push
fmul
arpl
rep
es
clc
es
adc
retf
retf
ret
ret
ret
outs
idiv
imul
(bad)
inc
(bad)
rol
out
imul
scas
(bad)
scas
ror
rol
dec
inc
add
inc
inc
retf
or
je
add
in
xchg
mov
cdq
cdq
cdq
in
pop
adc
sbb
mov
mov
mov
inc
(bad)
sar
and
jbe
aaa
stc
mov
adc
rcr
inc
pushf
sti
inc
call
mov
push
mov
pop
mov
mov
les
or
push
mov
pop
aad
mov
adc
xchg
adc
mov
sub
lea
pusha
rcl
(bad)
(bad)
ds
enter
int3
int3
enter
data16
mov
ins
sub
sub
xchg
dec
aad
sbb
xchg
dec
adc
pop
cmp
cmp
add
js
in
pusha
jmp
xor
pop
imul
jnp
outs
test
jge
std
inc
out
xor
jne
and
sbb
icebp
bound
sub
cmps
rcr
pop
add
aad
jae
ja
mov
xchg
in
jecxz
retf
add
jp
mov
mov
or
jge
sub
push
push
push
stc
and
repz
dec
add
sbb
pop
out
retf
nop
mov
pop
cmps
push
mov
mov
xchg
mov
mov
cmp
dec
sbb
adc
fcomp
sbb
pop
jb
sbb
out
rcl
push
and
cmps
cmc
div
or
push
push
inc
stos
loopne
mov
rol
(bad)
jbe
imul
pusha
repz
fisubr
mov
enter
outs
or
(bad)
sub
jg
push
jg
into
inc
into
inc
(bad)
and
out
push
fs
sbb
push
mov
cs
stc
mov
xor
add
inc
les
jp
pop
ret
push
adc
xchg
sbb
nop
sbb
jl
inc
jmp
mov
or
inc
aas
aas
mov
aas
or
xchg
mov
cmp
loopne
pop
xchg
fistp
mov
push
pop
mov
dec
ror
pop
cmp
mov
test
jne
add
lahf
mov
sbb
jno
test
idiv
jo
retf
fdivrp
xlat
(bad)
pop
rcl
aaa
popf
inc
aam
mov
xor
xchg
repz
in
cdq
mov
not
pop
adc
add
cmp
cwde
and
pop
pop
pusha
pusha
cmp
cwde
sbb
in
arpl
mov
mov
mov
and
mov
das
push
fcomp
fwait
add
add
fsubp
lahf
jecxz
xchg
cmp
scas
je
repz
jl
dec
(bad)
or
sub
adc
test
push
dec
pop
fs
mov
or
dec
(bad)
pop
or
(bad)
mov
mov
ins
ret
loope
cld
mov
mov
sbb
xchg
fcmovu
fidiv
scas
out
div
xor
fs
repnz
call
test
xor
mov
push
inc
inc
inc
stos
mov
inc
add
jl
cmp
inc
mul
arpl
xor
out
ins
ins
loopne
loopne
cwde
repnz
test
or
cmp
ret
mov
jae
cld
dec
je
push
inc
cmp
in
test
gs
repz
fwait
push
xor
ss
aaa
loope
ss
inc
xchg
out
xchg
mul
or
xor
push
fwait
aaa
jb
xor
mov
(bad)
sti
cmp
pushf
fcos
xor
pop
rol
mov
jg
mov
xor
ja
or
dec
aas
repnz
ds
repnz
push
pop
xchg
pop
icebp
gs
js
(bad)
push
push
retf
xor
aaa
inc
jle
arpl
mov
cmp
std
mov
mov
inc
sbb
jb
sbb
dec
cmp
inc
cmp
mov
js
ss
ss
in
out
sub
outs
xchg
pusha
outs
outs
cmp
int
cmp
out
jno
stc
sbb
lods
jecxz
sub
ror
dec
pop
pop
pop
pusha
push
popf
mov
cmps
outs
outs
outs
out
push
jbe
jecxz
jp
(bad)
push
push
inc
shl
mov
mov
pop
in
xchg
xchg
xchg
loop
ja
xchg
inc
cmp
int3
mov
cmp
inc
sbb
nop
jns
mov
mov
pop
repnz
lods
retf
sbb
mov
outs
mov
push
and
out
adc
jp
div
sbb
shl
aam
popa
stos
add
scas
lods
lods
inc
mov
inc
inc
inc
test
enter
test
sti
pop
add
into
inc
mov
dec
push
shl
pop
pop
pop
cmps
lock
dec
loopne
out
push
retf
cmp
cmp
(bad)
adc
ret
(bad)
adc
push
mov
cdq
cdq
in
and
cmp
je
sbb
ds
scas
xor
xchg
retf
xchg
retf
outs
xor
call
lea
push
pushf
enter
shl
arpl
pop
xchg
call
arpl
mov
add
clc
xchg
mov
jecxz
mov
aaa
std
xchg
xchg
pop
mov
std
mov
jb
call
xchg
sub
(bad)
(bad)
adc
rcl
enter
enter
sti
mov
sti
sar
mov
dec
fwait
mov
sbb
sbb
sbb
sbb
dec
sub
cli
xchg
daa
in
fnstenv
es
mov
pusha
pusha
pusha
in
sbb
lods
loop
ja
mov
dec
and
jb
inc
sub
sub
(bad)
jg
pop
shr
mov
std
mov
dec
add
fsubr
pop
jecxz
mov
(bad)
jmp
dec
std
dec
adc
pop
(bad)
push
test
dec
add
inc
cmp
fnstsw
sub
jae
cmp
xchg
pop
add
xchg
xchg
push
mov
repz
cmps
out
cwde
xlat
out
cwde
into
stos
retf
retf
xor
loopne
div
inc
ins
mov
inc
mov
mov
aam
mov
pop
cli
adc
add
inc
lds
hlt
jg
jg
cli
inc
das
mov
sahf
lahf
inc
outs
test
loopne
or
in
out
out
mov
xor
test
inc
mov
push
xor
mov
mov
push
jne
push
cmps
repz
sbb
aas
(bad)
mov
loop
and
xor
and
mov
inc
xor
stos
xlat
push
call
push
sub
or
inc
leave
or
loopne
mov
jbe
out
hlt
repz
mov
mov
rcl
mov
jae
dec
jge
jl
sub
(bad)
(bad)
adc
fmulp
enter
fcmove
cmp
clc
sti
mov
inc
lods
sbb
adc
adc
mov
movs
fisubr
sbb
jecxz
or
test
outs
in
jg
adc
test
jg
xchg
and
and
stos
arpl
retf
cli
sub
sub
push
pop
mov
pop
pop
pop
dec
leave
movs
test
outs
outs
outs
test
(bad)
call
push
(bad)
(bad)
inc
sbb
(bad)
dec
jno
cmp
fdivr
dec
and
or
imul
jnp
in
imul
cmp
xor
xchg
pop
sbb
pop
fwait
mov
mul
xchg
neg
mov
jmp
stos
(bad)
xchg
push
imul
test
ror
out
xchg
push
(bad)
mov
push
xor
dec
sar
scas
test
mov
jg
and
leave
into
into
loopne
cld
imul
jecxz
sub
lds
cs
ins
inc
inc
inc
inc
lock
retf
int
jl
addr16
outs
in
sbb
popf
dec
sbb
sbb
(bad)
mov
push
enter
test
push
repnz
mov
mov
cmp
pop
add
pop
pop
jmp
dec
dec
js
mov
xor
les
(bad)
xor
cld
jl
repz
xor
mov
mov
dec
std
out
aad
(bad)
(bad)
out
movs
sbb
adc
push
cmp
xchg
(bad)
dec
lock
mov
cmp
cmp
mov
(bad)
push
sbb
sbb
fistp
cmp
js
xor
cmp
iret
popf
es
or
pusha
pusha
mov
pusha
pusha
outs
in
jg
ins
push
pop
int
cmp
mov
pusha
and
arpl
sub
sub
mov
sub
outs
sub
mov
mov
inc
outs
outs
outs
out
out
adc
ret
fwait
mov
ret
and
pop
jno
cmp
(bad)
mov
xchg
push
jns
retf
dec
and
aas
lods
sub
dec
dec
dec
movs
add
mov
outs
xor
cwde
dec
rol
xor
int
aam
mov
jecxz
enter
jmp
lahf
repnz
div
sbb
jbe
rcr
in
imul
mov
call
lods
lods
lods
repz
or
push
enter
aad
jb
pop
ror
cmp
xchg
pop
into
into
loopne
sbb
ins
push
scas
loope
jge
out
lds
xchg
ds
ret
mov
mov
(bad)
imul
data16
fcom
popf
xchg
sbb
lea
jb
mov
and
and
data16
push
mov
jb
cli
aad
sar
add
push
pop
cld
ficom
jne
mov
iret
xor
fadd
lods
jo
popf
xchg
jo
pushf
rol
jp
(bad)
mov
adc
popf
jl
xchg
loopne
xor
mov
movs
ror
enter
push
and
cmp
sar
stos
mov
pop
jecxz
hlt
outs
adc
jno
sar
dec
jmp
mov
xor
loopne
pop
outs
sbb
lods
xchg
out
cwde
mov
jne
stos
fisubr
ins
xlat
mov
fcomp
cdq
mov
or
cld
mov
je
test
mov
add
adc
je
movs
leave
mov
dec
mov
mov
and
out
sub
js
mov
push
jns
loopne
stos
sub
push
dec
jge
iret
mov
cmp
loop
outs
pop
sub
lock
mov
ins
ret
and
pop
shl
mov
cmps
stos
(bad)
push
xor
ss
bound
or
ror
and
xchg
push
das
dec
mov
aam
mov
pop
outs
mov
pop
adc
into
lds
inc
add
jo
cmp
outs
or
inc
mov
sahf
cdq
inc
mov
ins
outs
test
loopne
mov
cwde
in
out
mov
dec
add
sub
pop
sub
push
or
or
ss
jmp
out
fmul
jb
xor
push
dec
mov
mov
xlat
inc
mov
or
xor
arpl
cmp
mov
cmp
and
push
pop
pop
cmps
push
dec
dec
dec
pushf
repnz
mov
mov
shl
sub
cmp
dec
mov
jo
xchg
retf
fdivr
mov
(bad)
lods
sbb
jl
push
cs
mov
mov
dec
xor
cmp
mov
sub
or
adc
cs
shl
cmp
cmp
ss
movs
into
jl
xor
mov
ss
mov
mov
in
xchg
push
jbe
push
and
and
jmp
ficomp
fs
push
stos
ror
imul
(bad)
cld
xchg
jo
std
fsub
mov
outs
adc
je
pop
popa
cli
dec
ror
add
sbb
mov
lods
test
ret
push
imul
loopne
and
cmps
cmp
push
in
push
mov
addr16
loopne
data16
sbb
jg
cwde
out
fisubr
div
div
jge
(bad)
lds
sti
retf
push
daa
push
and
je
dec
dec
bound
outs
ins
inc
stos
mov
pop
push
test
scas
xchg
dec
or
xor
imul
scas
shl
cwde
call
gs
add
rol
(bad)
jb
sar
retf
mov
addr16
adc
cmps
ins
aas
ficomp
sub
aas
inc
dec
into
clc
or
enter
lock
movs
lock
clc
adc
mov
inc
aas
jnp
pop
(bad)
idiv
(bad)
jmp
enter
bound
call
add
mov
xchg
loope
inc
inc
dec
or
aaa
jecxz
test
jle
lods
in
cmp
dec
cmp
sahf
call
jl
xor
into
pop
pop
pop
ds
xlat
mov
ds
dec
sub
mov
jo
mov
dec
push
push
jecxz
lahf
fmul
sbb
not
push
cmp
mov
lods
pusha
push
out
(bad)
enter
aaa
xor
jmp
add
dec
inc
inc
cmp
and
jns
(bad)
jg
test
and
lods
cmps
cmps
dec
or
pushf
mov
leave
pushf
in
xchg
out
dec
jmp
xchg
jl
(bad)
or
(bad)
mov
mov
mov
adc
gs
add
ss
stos
sub
mov
inc
lock
fild
nop
in
fidiv
cmps
movs
mov
repz
out
lods
(bad)
out
loop
fmulp
loop
fmulp
mov
lahf
mul
nop
lds
add
fadd
jnp
or
mov
es
(bad)
mov
inc
push
pop
imul
cmp
or
cmp
mov
xor
dec
or
imul
aas
push
addr16
add
dec
cmp
xchg
je
ins
mov
mov
cmp
(bad)
sbb
xchg
out
xchg
hlt
out
out
jmp
icebp
jmp
mov
mov
inc
cmp
jnp
xchg
mov
into
adc
sti
sbb
pop
pop
cld
add
ror
sub
les
mov
repz
fstp
mov
psubsw
cdq
pop
retf
je
gs
mov
xchg
jnp
sub
std
adc
dec
int3
int3
enter
dec
cmp
cmp
(bad)
pop
mov
pop
or
push
or
shl
arpl
into
test
fs
pusha
jmp
jmp
into
mov
push
dec
adc
push
or
mov
(bad)
(bad)
jns
xchg
mov
mov
cmps
or
pusha
movs
mov
outs
in
dec
in
stos
inc
ds
cli
movs
push
dec
dec
cmp
cmp
xchg
pop
push
repz
push
xchg
xor
outs
push
sub
jl
sub
out
cmp
ins
adc
ins
das
repz
inc
dec
dec
out
out
cmp
and
xchg
jmp
lods
ret
cmps
cmps
outs
mov
push
fsub
mov
shl
xchg
cmp
cwde
xor
mov
popf
fbld
(bad)
mov
or
inc
push
jp
lods
repnz
xchg
sbb
enter
jb
jl
scas
mov
or
dec
es
and
xor
fisubr
mov
arpl
cli
mov
(bad)
jb
mov
retf
lahf
adc
inc
arpl
je
fucomi
and
ss
dec
sbb
fmul
inc
popf
fmul
call
inc
inc
into
into
retf
add
mov
xor
cli
test
cld
inc
xor
adc
jmp
rcl
rcr
adc
pop
pop
xchg
xlat
arpl
mov
xor
cli
dec
out
out
jae
mov
dec
in
pop
mov
test
dec
in
aas
inc
adc
jae
out
loop
xchg
jge
sub
in
aas
shl
enter
fidivr
cmp
rcl
xor
cmp
mov
lahf
pop
or
mov
sub
jbe
int
lods
pusha
inc
jecxz
je
mov
in
jnp
push
clc
inc
push
xchg
lock
mov
leave
sbb
cmp
sub
pop
push
out
movs
arpl
arpl
sub
scas
pop
sti
push
(bad)
je
jmp
dec
inc
repz
pop
jmp
(bad)
and
xchg
int
or
adc
pop
dec
retf
inc
mov
in
rcr
xor
lahf
mov
retf
movs
retf
loop
jecxz
or
adc
(bad)
fsubp
cwde
mul
jge
std
xor
test
retf
push
fldenv
jno
inc
inc
dec
inc
push
mov
lea
or
mov
jle
gs
add
mov
dec
not
xchg
in
pop
scas
aam
scas
fisubr
out
ficom
test
pop
les
lds
push
retf
mov
ret
push
push
pop
int
add
ja
xor
cmps
adc
adc
sbb
sbb
mov
mov
and
call
mov
xor
xchg
aas
push
mov
cmp
cmps
ret
push
cmp
(bad)
fstp
ret
sbb
or
cmp
imul
idiv
jmp
mov
repnz
pop
adc
mov
jns
jge
jne
sbb
(bad)
(bad)
(bad)
pop
xchg
mov
in
ss
(bad)
sti
push
cmp
(bad)
jns
stos
mov
(bad)
push
sbb
sbb
adc
jecxz
cli
mov
push
mov
jno
pusha
xor
lods
pusha
xor
push
dec
jmp
pushf
jmp
nop
sbb
nop
inc
inc
mov
adc
push
fst
rol
(bad)
(bad)
stos
in
cmp
cwde
sub
fld
mov
fist
push
outs
xchg
jmp
and
dec
mov
jns
popa
dec
mov
inc
mov
push
push
test
fld
xor
cmp
dec
dec
dec
fcomp
or
mov
mov
test
out
fsub
jecxz
mov
xchg
cmc
push
mov
out
sbb
enter
ss
lock
les
xor
aad
lods
fdiv
(bad)
cdq
bound
lods
mov
sub
inc
jno
xor
inc
or
outs
hlt
xor
hlt
ds
es
mov
fsub
loopne
xor
jl
(bad)
mov
adc
call
inc
and
xor
lea
mov
out
dec
ins
cmp
fwait
inc
inc
retf
lods
xor
cmp
cmc
mov
int3
leave
add
lock
xor
(bad)
jbe
mov
mov
(bad)
sar
std
adc
pop
and
dec
adc
mov
mov
cmp
mov
icebp
mov
repnz
js
aaa
int3
mov
shr
xchg
retf
mov
inc
ficom
sub
aaa
enter
cmp
mov
sub
loop
xchg
pop
adc
pushf
gs
cmp
cmp
lods
data16
bound
in
in
xor
inc
mov
sub
test
stos
lds
mov
popf
rcr
jns
or
mov
cld
xor
sub
scas
adc
je
retf
int3
and
aas
mov
inc
cli
dec
shl
into
int3
pop
test
in
clc
pop
or
imul
jnp
stos
cmp
or
pop
xchg
pop
add
outs
inc
cmp
inc
out
cmp
out
jecxz
add
jecxz
movs
fnstsw
clc
pop
nop
(bad)
and
jnp
out
cmps
or
test
lods
push
fidivr
mov
(bad)
push
sbb
pusha
imul
enter
xchg
outs
cld
xchg
outs
fisubr
jle
std
or
xor
pusha
sahf
fsub
xchg
mov
cs
mov
push
inc
add
inc
int
inc
ret
and
lea
into
jg
jmp
xchg
ss
dec
sbb
fmul
popf
fsubr
xchg
dec
retf
sahf
inc
leave
mov
call
pusha
mov
mov
mov
cmps
push
psubsb
psubsb
(bad)
or
sbb
stc
mov
mov
mov
add
jmp
xchg
pop
ja
gs
pop
js
test
pop
aad
xchg
les
and
pusha
leave
mov
inc
cmp
dec
xor
out
mov
out
mov
pop
adc
imul
fisubr
scas
sub
push
jmp
jg
pusha
fldcw
movs
aas
push
pop
inc
inc
inc
xor
test
sbb
push
xor
jns
push
mov
cmps
cmps
rcr
je
pop
add
jo
push
outs
sbb
cmps
sbb
jbe
mov
adc
sbb
inc
clc
clc
(bad)
(bad)
and
mov
hlt
xchg
(bad)
dec
imul
loop
xchg
loopne
dec
jbe
inc
cmp
arpl
sbb
nop
push
or
mov
cmp
repz
jmp
or
ins
mov
fcom
mov
stos
(bad)
or
push
imul
loope
das
push
mov
add
sub
call
pop
test
js
aaa
xchg
mov
xor
inc
jg
enter
int3
inc
rcl
lock
adc
ret
(bad)
aad
mov
leave
add
leave
add
add
arpl
and
sub
pop
hlt
popf
retf
lock
retf
jge
retf
clc
iret
fistp
mov
inc
xlat
xor
inc
xor
sub
or
cmp
retf
call
(bad)
ret
(bad)
(bad)
pcmpgtw
jecxz
ja
dec
dec
stos
stos
js
scas
xor
loope
pop
dec
rcl
gs
mov
ins
or
or
ds
xor
sub
retf
add
inc
test
int3
iret
stc
cmp
cmp
dec
sbb
mov
arpl
push
jmp
pop
sbb
sbb
(bad)
cmp
cmp
cmp
es
add
pusha
pusha
pusha
jmp
ficomp
mov
jp
jns
adc
retf
fisub
int
or
pop
sub
icebp
pop
mov
inc
add
dec
push
scas
cmp
mov
sti
data16
add
and
push
xchg
or
int
in
imul
ds
into
mov
out
jnp
xchg
pop
dec
xor
mov
sbb
jmp
arpl
sbb
mov
sbb
mov
mov
movs
pusha
and
sahf
cmp
div
jnp
pushf
push
push
push
(bad)
lods
cld
inc
loop
jne
pop
punpckhdq
push
imul
jae
mov
jg
jl
cli
lahf
add
xor
inc
pop
push
xor
pop
imul
pop
adc
adc
and
cmp
mov
mov
lods
mov
push
inc
jbe
je
jmp
xchg
mov
jle
adc
inc
inc
inc
and
cmp
aaa
xor
inc
mov
int
iret
mov
dec
inc
inc
inc
jnp
jecxz
sub
rcl
rcl
pushf
push
jmp
xchg
repz
iret
stos
mov
dec
cmp
mov
or
js
idiv
pop
dec
dec
dec
dec
mov
lock
jge
icebp
stc
movs
sub
xchg
ret
scas
not
fmul
mov
aaa
mov
xor
(bad)
stos
dec
fimul
pop
cli
xchg
push
loopne
rol
jp
mov
fsub
fnstenv
retf
cs
(bad)
cld
popa
jo
loopne
pusha
outs
xor
jmp
test
jge
fidiv
cmps
xor
sub
jne
pop
pop
(bad)
nop
ja
pushf
ja
cwde
xchg
sbb
sbb
mov
(bad)
out
add
mov
into
mov
xor
stos
add
push
iret
repz
xchg
sbb
push
loopne
xchg
push
jg
jp
ror
int3
scas
add
outs
or
aad
outs
mov
inc
ret
repnz
jecxz
shl
mov
mov
mov
lahf
sbb
and
retf
leave
push
pop
push
div
sub
cli
(bad)
mov
loopne
inc
stos
push
push
push
imul
inc
push
sar
mov
hlt
sub
xchg
hlt
xor
std
push
cmc
ret
loop
lock
(bad)
mov
pop
arpl
mov
scas
enter
dec
rol
mov
inc
nop
dec
test
or
cmp
dec
sbb
inc
fist
jmp
mov
inc
ret
xor
rcr
xor
jg
mov
adc
push
pop
aam
xlat
pop
mov
iret
jno
mov
and
xor
xor
cmps
aas
pop
jmp
mov
gs
adc
adc
jo
mov
addr16
pushf
dec
add
and
in
xchg
(bad)
movs
(bad)
and
aaa
aaa
bswap
xor
cmp
or
sar
sub
stos
hlt
es
pop
dec
hlt
addr16
inc
mov
sar
or
ss
push
ss
into
mov
mov
adc
push
xchg
sbb
inc
cwde
loop
sub
mov
fstp
mov
jmp
jl
mov
cmp
xor
cld
mov
sbb
xchg
outs
jmp
add
in
pop
fisttp
ins
and
push
inc
sbb
xchg
mov
fs
sub
imul
les
ret
sbb
sbb
retf
outs
adc
mov
mov
sub
das
xchg
loope
lahf
out
arpl
stos
fldln2
push
aaa
rcr
div
jne
repz
ins
and
push
lods
mov
push
jnp
lods
lods
es
and
mov
add
mov
repnz
xchg
enter
dec
push
ret
xchg
push
imul
xlat
out
cdq
mov
dec
(bad)
mov
sar
inc
xor
mov
mov
pop
mul
cmps
adc
pop
adc
fnstcw
mov
mov
or
xor
(bad)
cmp
idiv
mov
rcl
sar
xchg
push
jmp
xchg
(bad)
mov
push
mov
lds
repz
cmp
fcom
jno
mov
jl
xchg
rcl
nop
ficomp
(bad)
aaa
mov
shl
pusha
sbb
sub
out
popa
sub
stos
dec
mov
shl
shl
or
sub
out
mov
sar
and
jmp
pushf
push
lods
mov
mov
lods
xor
xor
cmp
inc
push
dec
ret
jmp
inc
fst
dec
mov
les
sar
cwde
or
retf
outs
jmp
pop
test
(bad)
jmp
jl
dec
adc
int3
push
test
or
xchg
or
imul
rol
imul
enter
mov
dec
sbb
nop
popw
sahf
in
mov
mov
xor
cld
mov
mov
xor
shl
(bad)
in
stos
jecxz
das
lds
cmps
cmps
cmps
daa
data16
daa
addr16
mov
jne
loop
xor
lods
ss
sub
mov
add
cli
or
pop
repz
iret
fisub
es
loopne
mov
out
inc
sub
pushf
pushf
inc
mov
inc
xchg
fadd
mov
jne
je
mov
data16
ins
xor
ins
adc
xor
mov
xor
inc
cli
and
xor
xor
mov
cmp
mov
ror
pop
pop
aam
call
cmp
dec
into
mov
xchg
aad
xor
pop
repnz
mov
(bad)
cmp
je
xor
(bad)
sub
in
leave
fadd
enter
sbb
sub
mov
out
inc
sbb
jp
sbb
add
imul
sub
pop
sub
mov
sbb
mov
js
test
jae
mov
in
mov
mov
fsub
or
mov
mov
outs
jle
aas
mov
test
pop
mov
mov
pop
sub
pop
frstor
repz
jnp
mov
dec
cmp
cmp
sbb
nop
push
out
jp
push
adc
cmp
mov
push
inc
dec
jp
test
mov
push
sub
or
jne
cli
outs
daa
push
stc
daa
inc
(bad)
lods
loopne
jne
and
push
push
imul
sar
adc
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
xor
pop
dec
jg
es
into
into
inc
ds
push
xchg
in
das
pop
or
mov
out
mov
add
cmp
xlat
adc
hlt
fadd
jecxz
pop
mov
mov
or
mov
dec
lock
sbb
out
js
loope
xor
lahf
inc
es
fwait
cdq
pushf
popf
mov
mov
movs
add
pop
mov
pop
rcl
cmp
push
adc
ror
scas
(bad)
repz
mov
pop
or
stos
stos
jbe
rcr
jmp
push
pop
retf
fwait
adc
test
cld
inc
inc
pop
xchg
xlat
pop
xchg
mov
and
enter
popa
popa
mov
pop
(bad)
pop
cmc
dec
js
sbb
lahf
fcom
cdq
fsubr
mov
lds
mov
movs
out
scas
arpl
into
sbb
pusha
pusha
jmp
cwde
cmp
out
push
outs
sbb
test
push
xchg
mov
retf
and
jnp
adc
inc
sub
cmp
sub
add
push
rcr
dec
mov
fdivr
xchg
xchg
xchg
xchg
mov
adc
mov
sbb
push
inc
movs
stc
inc
dec
scas
test
xchg
push
mov
mov
adc
adc
dec
mov
test
repnz
loope
adc
push
repz
mov
xchg
fcmove
add
test
mov
outs
xlat
dec
mov
inc
es
inc
sbb
push
aaa
inc
shr
jl
jl
fidivr
hlt
cmp
inc
into
cmc
retf
jb
iret
lock
out
or
mov
xchg
pop
(bad)
aad
mov
popf
cmp
xor
pop
mov
cdq
cdq
push
cmps
cli
addr16
sub
out
out
movs
and
inc
inc
xchg
xchg
or
aas
aaa
xor
sub
sbb
aas
fstp
pop
xchg
fld
cmp
(bad)
pop
pop
dec
xchg
jb
pop
pushf
pop
inc
mov
rol
push
jbe
dec
dec
or
or
(bad)
repz
jb
ja
dec
dec
jbe
call
or
jl
and
out
push
xlat
(bad)
and
lods
sub
mov
xor
or
cld
(bad)
mov
pop
mov
test
sbb
leave
mov
(bad)
jl
fcomp
(bad)
into
sub
es
jmp
mov
(bad)
lahf
lahf
lods
arpl
sbb
mov
xchg
mov
fnsave
into
mov
and
rcr
fdiv
test
in
xchg
xchg
in
mov
je
jl
inc
(bad)
or
add
in
pop
and
hlt
pop
repz
or
xchg
xchg
loopne
adc
out
jnp
add
xchg
out
pushf
jg
repnz
div
repz
ins
or
(bad)
jg
dec
(bad)
in
sbb
or
jg
push
jmp
lods
daa
mov
ja
or
jne
arpl
mov
adc
js
mov
sbb
gs
mov
or
outs
hlt
mov
movs
lods
mov
mov
xor
dec
jo
into
into
arpl
pop
out
fs
loopne
out
addr16
sbb
push
test
pushf
out
or
add
ret
stos
inc
jnp
xor
mov
(bad)
jle
mov
xchg
mov
in
test
sbb
or
inc
imul
pop
retf
fiadd
dec
sub
mov
mov
cld
mov
sub
adc
add
pop
out
sub
jecxz
inc
and
jno
mov
dec
cmp
inc
js
jp
add
sbb
aaa
dec
dec
sar
call
and
push
leave
mov
add
sti
fstp
pop
cmp
mov
mov
mov
sub
cmps
sub
adc
das
stc
addr16
lds
hlt
(bad)
into
dec
test
fldcw
lahf
xor
arpl
scas
out
xchg
cmp
mov
int
cmp
(bad)
cmp
and
cmp
jp
inc
fstp
pop
mov
mov
mov
push
add
jp
(bad)
(bad)
call
mov
dec
mov
stos
and
xor
repz
data16
push
xchg
sbb
outs
cmp
cmps
mov
dec
xchg
pop
out
outs
sbb
sbb
dec
xor
cmps
xor
retf
mov
outs
popf
out
mov
xor
sbb
mov
push
fwait
and
mov
(bad)
jge
or
out
aas
fldenv
lods
mov
push
add
push
and
inc
push
enter
mov
test
mov
push
mov
mov
jp
out
jle
inc
mov
inc
or
or
jecxz
or
fist
cmc
cmp
cmp
ds
nop
xor
add
or
ja
jle
into
jae
retf
bound
cdq
cdq
dec
xchg
pop
lock
out
xor
inc
xor
xor
ss
inc
(bad)
into
call
cmp
cmp
jno
inc
aaa
fcom
ret
pop
ficomp
pop
and
dec
dec
dec
pushf
repnz
mov
mov
shl
sub
repz
stos
scas
xor
dec
loope
pop
in
icebp
xchg
adc
popw
fbld
push
jle
jg
add
adc
and
inc
mov
cmp
adc
(bad)
mov
or
cld
add
pusha
adc
or
jmp
ss
and
push
lods
in
cmp
cmp
xor
inc
xor
fisubr
sub
jecxz
(bad)
(bad)
add
sar
sbb
mov
outs
fisubr
xchg
cmp
out
pop
jl
mov
mov
popf
ror
ficom
push
lock
repz
sti
push
cmp
push
jl
push
xor
enter
jnp
push
or
shl
jecxz
or
shl
out
push
rcl
(bad)
mov
xchg
daa
and
jne
loop
imul
adc
push
cmc
outs
sub
sbb
jne
pop
mov
or
aam
push
std
jnp
inc
xchg
mov
imul
jg
test
iret
fidiv
sti
push
push
iret
fimul
mov
loopne
pop
aad
jno
(bad)
fstp
(bad)
aad
nop
(bad)
(bad)
jne
loope
push
leave
jne
adc
fwait
arpl
mov
(bad)
addr16
sub
lock
mov
mov
retf
xchg
or
pop
sbb
lods
push
cmp
adc
add
rcl
push
adc
adc
dec
push
pop
dec
cli
dec
mov
bound
mov
mov
rep
stos
xor
loope
pop
dec
sar
sub
sub
nop
sub
xlat
(bad)
in
pop
xchg
xor
(bad)
les
adc
mov
pop
bound
call
aas
les
xchg
aas
mov
sar
xor
daa
ss
xor
daa
pop
xchg
sbb
xor
daa
inc
inc
test
fnsave
lds
cmp
popf
rcr
push
fbld
add
in
xchg
jnp
dec
outs
out
add
jp
mov
jl
dec
jbe
inc
cmp
push
neg
xchg
repz
push
test
add
jmp
jnp
nop
fimul
cmps
and
sbb
outs
test
cmp
dec
idiv
xor
cmps
and
fwait
and
and
and
adc
jge
mov
movs
lods
fadd
mov
cmps
or
mov
lods
push
mov
jo
jl
jae
xchg
fwait
pop
jle
das
xchg
(bad)
lea
nop
xchg
or
or
imul
fisubr
fwait
rol
lock
xor
test
mov
dec
call
push
dec
(bad)
addr16
or
popf
jg
push
mov
push
dec
xor
retf
add
outs
ins
repz
aaa
jmp
cmps
ret
fist
cmps
sbb
loope
add
mov
(bad)
inc
inc
or
js
lods
scas
xor
mov
cmp
fstp
pop
out
lahf
sbb
or
ja
fdivr
pop
and
sub
and
and
or
cmp
mov
int
mov
and
sbb
push
rcl
cmp
mov
and
dec
or
jne
pusha
and
nop
nop
in
jl
sar
fucomp
test
je
pop
and
imul
test
mov
or
test
dec
(bad)
(bad)
jp
mov
test
dec
adc
(bad)
fnstsw
test
call
stos
pop
mov
and
inc
dec
sbb
sub
inc
inc
fcom
jmp
sbb
push
dec
loop
loop
out
sbb
pop
ds
cmp
mov
div
lods
sub
inc
sub
or
xchg
jne
std
jo
ins
lock
es
clc
enter
imul
dec
rcl
imul
pop
hlt
add
cmp
retf
dec
pop
les
pop
adc
out
clc
out
out
out
push
ja
cmp
neg
dec
nop
push
lds
dec
add
add
movs
xor
shl
(bad)
out
xchg
pop
mov
dec
ss
cli
and
leave
inc
pop
inc
shl
jne
mov
or
mov
xor
das
cmp
rcl
rcl
sbb
push
cmovne
mov
(bad)
retf
les
hlt
or
div
fadd
ds
repnz
adc
xchg
jno
adc
jo
or
inc
adc
mov
dec
or
rcr
mov
adc
add
aam
lods
sbb
test
and
cli
mov
movs
out
fldenv
lahf
adc
test
imul
int
test
int3
mov
cmps
fst
dec
and
pop
fldenv
pop
pop
shr
ja
mov
cwde
xor
jo
out
xchg
out
repz
sub
mov
sbb
loop
sub
jnp
add
or
inc
or
cmp
icebp
test
mov
lock
add
mov
jbe
or
pusha
sub
sbb
(bad)
(bad)
xchg
retf
sub
(bad)
push
sub
xor
int
sbb
test
movs
mov
add
jle
mov
and
mov
mov
(bad)
jnp
out
add
mov
mov
std
adc
mov
mov
sbb
adc
mov
push
mov
sub
add
inc
inc
inc
mov
inc
dec
xchg
jge
adc
data16
repz
push
mov
jl
retf
mov
dec
mov
retf
mov
into
iret
iret
mov
in
mov
ret
sub
sub
pushf
sti
call
pushf
inc
into
mov
pop
jb
mov
dec
jbe
in
repz
or
jmp
dec
loope
jbe
fisttp
idiv
idiv
je
popa
rcl
stc
enter
rol
cmp
sbb
gs
mov
imul
dec
sub
mov
aad
or
cmp
push
push
cs
xchg
pop
es
xor
push
nop
in
stos
arpl
jnp
inc
in
xor
xor
push
cs
outs
rol
(bad)
loop
(bad)
mov
adc
out
mov
lods
mov
mov
sbb
sahf
jl
scas
cld
(bad)
inc
je
adc
int
mov
push
and
repz
pop
cs
xor
push
xchg
imul
inc
les
dec
les
jg
sbb
sub
loop
sbb
dec
dec
dec
sbb
or
jecxz
jecxz
sbb
sbb
out
fwait
into
and
ss
xor
jbe
mov
push
daa
iret
xor
mov
enter
call
inc
enter
dec
neg
jo
jle
jo
xchg
iret
fidivr
sbb
pop
mov
adc
adc
out
out
out
sub
pop
leave
(bad)
push
mov
mov
jecxz
out
jbe
pop
cli
cdq
cdq
xchg
pop
adc
sub
mov
cmp
inc
mov
mov
cli
fdivr
xor
imul
inc
inc
push
mov
rcl
cmp
sbb
pushf
push
pop
call
dec
dec
adc
xor
or
js
sti
or
pop
out
xchg
mov
in
aaa
shl
adc
xchg
adc
xor
cmp
sub
sub
ds
enter
push
aaa
aaa
cli
xor
mov
sub
or
and
dec
xchg
lock
lock
(bad)
mov
shr
jbe
adc
xor
in
xor
cmp
sub
stos
fisub
movs
ins
sar
sub
or
add
dec
add
and
div
add
pop
les
mov
mov
movs
and
pop
stc
inc
push
repnz
push
iret
xchg
addr16
inc
ret
(bad)
or
pop
jecxz
in
mov
pop
stos
sbb
sbb
push
mov
ins
or
in
pop
lahf
mov
push
xchg
out
jge
(bad)
xor
push
fld
and
mov
iret
adc
in
in
cmp
retf
enter
or
icebp
add
fbstp
jl
jg
inc
mov
inc
mov
inc
movs
sbb
mov
or
stos
out
stos
push
dec
or
cmp
cmp
mov
fwait
add
dec
in
cdq
xor
mov
sbb
ins
or
ins
adc
push
mov
mov
pop
xor
or
xor
popa
mov
cmp
ret
cmps
fld
call
call
mov
mov
ud1
sbb
mov
or
(bad)
sbb
icebp
mov
or
gs
je
or
xchg
test
dec
xor
aaa
inc
(bad)
rol
js
dec
rol
sub
stos
pop
shl
dec
leave
in
jecxz
pop
adc
lods
pop
cmp
cmp
gs
stos
arpl
scas
arpl
stos
and
mov
nop
nop
loop
addr16
xchg
xor
mov
frstor
je
mov
jg
sub
pop
sub
ja
les
mov
and
push
imul
ret
dec
pop
cmp
xor
stc
inc
inc
dec
add
stos
pop
ins
cmp
push
adc
cwde
jecxz
outs
cmp
pop
push
mov
mov
inc
adc
mov
sbb
fidiv
test
loop
fimul
and
mov
lods
mov
cmp
jne
xchg
inc
add
sub
inc
inc
jmp
jl
or
or
es
cmp
xor
aad
jno
lock
in
out
out
imul
in
xchg
and
pop
test
mov
arpl
jl
je
dec
xchg
cdq
adc
cdq
jae
cmp
or
jmp
mov
xor
cdq
addr16
and
aaa
dec
(bad)
addr16
push
sub
fild
pop
pushf
out
xchg
call
dec
dec
dec
and
dec
cmp
stos
jbe
xchg
mov
dec
in
pop
lahf
jecxz
scas
cmps
or
jl
stc
mov
xor
and
fwait
and
into
mov
(bad)
(bad)
stos
cmc
pop
mov
and
or
data16
jge
dec
jb
es
push
pusha
pusha
ret
pop
icebp
popa
jg
xchg
nop
sbb
jnp
out
inc
inc
cmp
retf
and
jo
ret
jmp
mov
pusha
cmps
mov
jmp
xchg
fisubr
je
stos
je
test
dec
jbe
lods
ror
mov
cmc
fwait
or
(bad)
imul
add
adc
mov
mov
nop
test
mov
ret
mov
mov
addr16
out
xchg
loope
pop
cld
(bad)
push
fadd
dec
sub
mov
(bad)
movs
les
mov
push
adc
cmp
mov
inc
push
aaa
imul
add
sub
lahf
jecxz
outs
es
into
into
xchg
xchg
ins
add
daa
movs
sbb
adc
adc
call
pusha
push
cmp
push
scas
shr
or
fiadd
addr16
sbb
xor
jp
pop
sti
or
or
cmp
inc
xor
xor
dec
sub
stc
cmp
add
mov
jp
fbstp
leave
lods
xchg
(bad)
cmps
leave
sub
cmp
xchg
xlat
bound
xchg
mov
aas
pop
aas
cmps
shl
xor
xchg
or
jmp
mov
aas
inc
xor
int3
jb
pop
and
imul
minps
fcomp
fadd
mov
popa
adc
jmp
nop
pop
and
nop
arpl
std
inc
inc
fist
mov
xor
add
lods
sub
and
mov
test
cmp
jae
pop
mov
mov
and
jno
aaa
repnz
cmp
jg
dec
inc
js
dec
(bad)
std
test
(bad)
ja
mov
sahf
test
int3
or
mov
jl
mov
dec
jle
cmps
pop
and
scas
sub
(bad)
sub
sbb
lods
xor
loopne
sbb
mov
dec
or
ficom
aas
(bad)
mov
fbstp
(bad)
mov
mov
shl
mov
push
and
sbb
ins
push
gs
pop
sub
jge
or
scas
xlat
idiv
mov
add
jbe
inc
repz
data16
push
push
es
push
add
outs
shl
xchg
adc
cmp
iret
fisub
cmps
adc
loope
mov
or
(bad)
gs
cmp
leave
dec
mov
push
mov
sahf
dec
stos
mov
sub
ins
mov
out
std
inc
fidivr
xor
out
imul
retf
(bad)
cmovae
pop
test
xor
aam
test
rol
mov
sub
xchg
rol
pushf
out
bound
mov
mov
jmp
addr16
cmc
or
dec
shl
jecxz
stc
dec
xchg
pop
stos
es
pop
sahf
call
(bad)
xlat
(bad)
in
pop
xchg
sub
fsub
push
and
sub
movs
dec
arpl
pop
and
or
in
jecxz
adc
dec
xor
fnstenv
jle
daa
ss
mov
jne
inc
popa
jo
and
test
pop
in
mov
test
jae
cmp
in
mov
pushf
pusha
pop
dec
xor
mov
jle
jp
or
jl
out
jp
mov
cmp
xor
push
mov
repz
add
jns
xchg
push
arpl
les
mov
adc
jg
in
nop
inc
mov
cmp
mov
div
repz
outs
mov
fsubp
into
mov
out
into
mov
into
mul
pushf
loopne
repz
daa
pop
das
push
lods
jne
mov
mov
lea
pop
mov
push
mov
(bad)
jl
mov
outs
sub
xor
pop
xchg
lock
xchg
loop
out
adc
(bad)
cmp
sub
inc
push
retf
or
arpl
je
add
movs
inc
data16
stos
in
cdq
xor
mov
or
xlat
pop
repnz
fisub
pop
aam
xor
pop
sub
mov
js
push
and
fistp
add
dec
pop
mov
mov
pop
dec
xor
sbb
push
jmp
mov
fwait
mov
lock
call
(bad)
(bad)
std
push
in
add
pop
leave
fsub
mov
addr16
mov
imul
dec
repnz
fst
and
fbld
sub
mov
enter
pop
iret
push
outs
jg
adc
push
pop
(bad)
(bad)
lods
fistp
stos
dec
shr
aad
mov
xchg
ja
shr
in
xchg
adc
pusha
pop
cmps
aam
(bad)
(bad)
out
mov
cmps
inc
daa
dec
adc
mov
test
xchg
loopne
ss
xchg
sbb
mov
cmp
or
xor
dec
ret
jmp
aad
imul
ret
loop
gs
and
addr16
inc
(bad)
stos
add
xor
sub
ds
push
or
outs
mov
and
lods
lods
hlt
cs
inc
sbb
jbe
pop
adc
jle
hlt
jnp
cli
mov
ret
ret
dec
loope
test
loope
adc
pop
push
mov
out
lds
cmp
inc
push
retf
(bad)
cmp
dec
stos
(bad)
inc
addr16
cli
cli
addr16
sub
lock
push
and
mov
retf
push
or
iret
iret
fdivr
xor
aam
sub
adc
pop
pop
dec
aam
call
pop
inc
sbb
cmp
mov
mov
mov
mov
xor
mov
rol
mov
aas
lea
sti
xchg
call
sub
(bad)
pop
enter
repz
sub
xor
and
dec
mov
movs
(bad)
hlt
push
mov
push
leave
sbb
or
data16
lods
fnstenv
retf
adc
imul
outs
test
push
mov
loope
loop
daa
mov
mov
and
mov
dec
pop
pop
fsub
mov
jmp
sbb
cmp
(bad)
pop
std
(bad)
(bad)
call
daa
push
and
inc
(bad)
cmp
sub
call
or
add
sar
imul
push
mov
les
ror
mov
xchg
pop
popf
repnz
mov
adc
fwait
arpl
xchg
mov
push
aaa
sbb
and
div
idiv
cli
aaa
inc
mov
das
push
mov
frstor
jne
push
hlt
cs
push
(bad)
(bad)
cwde
ss
or
(bad)
push
imul
div
xchg
push
add
mov
arpl
loopne
out
gs
cmp
jmp
mov
cmp
mov
into
ja
je
je
jb
data16
addr16
pop
cld
ins
sbb
das
inc
inc
jl
loop
mov
retf
repz
data16
leave
mov
xor
mov
aam
cmp
jnp
cmps
neg
push
arpl
cmp
mov
call
dec
inc
shl
shl
mov
jp
cmp
jmp
adc
jbe
icebp
cmp
sub
imul
push
stos
cmp
(bad)
enter
and
clc
aaa
mov
lock
sub
sbb
xchg
pop
loopne
sbb
cmp
add
inc
cmp
push
es
jmp
cmp
push
(bad)
in
cmp
cdq
sbb
xor
inc
xor
bound
mov
pop
sbb
push
or
cwde
or
test
push
scas
xchg
stc
xchg
das
iret
je
add
pop
ror
and
mov
stos
and
add
cs
push
xchg
push
(bad)
xor
adc
stos
adc
sub
nop
fcom
jbe
mov
adc
loopne
outs
and
mul
(bad)
sbb
and
jbe
lea
xor
lods
fdivr
loopne
or
inc
stos
(bad)
pop
inc
scas
(bad)
pop
sbb
mov
push
or
js
test
pop
iret
fisub
push
xchg
inc
pop
loopne
loopne
mov
ins
push
in
fwait
call
cs
inc
cmp
push
push
lds
jne
cdq
cdq
(bad)
cli
cli
addr16
fsubr
sbb
(bad)
scas
inc
inc
inc
inc
clc
cmp
leave
lds
xor
imul
cmp
push
cmp
xor
mov
rcl
mov
lahf
dec
lock
dec
jmp
mov
adc
jno
mov
dec
sbb
or
or
bnd
push
jae
dec
dec
dec
dec
gs
call
repnz
sar
xchg
ret
xchg
or
sahf
sti
ds
mov
mov
dec
mov
mov
sbb
cmp
cmp
push
sti
xchg
daa
js
lods
fnstenv
jo
adc
xchg
std
dec
call
sub
cli
rcr
frstor
aad
pop
and
adc
pop
pop
mov
ins
aad
add
in
iret
mov
outs
jle
aas
mov
xchg
inc
mov
std
mov
mov
adc
push
in
or
cmp
inc
(bad)
in
outs
ss
xchg
ds
int3
mov
sbb
outs
or
ja
in
nop
jmp
mov
test
cmps
or
out
mov
cli
pop
mov
push
jge
(bad)
div
idiv
sbb
jmp
mov
inc
pop
lods
lods
lods
sub
dec
enter
and
add
movs
jg
jg
mov
inc
mov
inc
mov
arpl
imul
out
xor
retf
xchg
sub
sbb
lds
jg
into
ja
cmps
or
out
cmp
repz
lock
inc
inc
mov
mov
stc
or
mov
jne
mov
inc
aaa
stc
push
mov
mov
pop
jmp
call
loop
dec
dec
(bad)
mulps
pop
imul
jmp
mov
mov
dec
aas
fistp
cmp
cdq
call
cmp
xlat
mov
(bad)
fnstcw
xor
cdq
push
sar
adc
adc
int3
pushf
popa
leave
cmp
mov
fnstsw
fld
cmp
in
nop
sbb
outs
nop
int
push
adc
cmp
cs
cmp
aad
je
mov
(bad)
sub
pop
pop
cmps
std
and
ja
or
xchg
cmp
adc
arpl
out
jp
cmp
dec
mov
inc
movs
addr16
push
push
lock
add
mov
xchg
jb
push
mov
mov
mov
(bad)
not
or
push
push
mov
ins
or
into
(bad)
(bad)
push
sbb
stos
cli
or
or
das
push
mov
dec
sahf
add
outs
es
clc
es
shr
dec
push
jne
fwait
or
xchg
push
movs
or
inc
jg
imul
dec
push
mov
imul
or
cli
dec
mov
cmp
add
inc
inc
mov
or
adc
shl
out
sbb
out
icebp
pushf
sbb
mov
mov
mov
xor
lock
jo
dec
les
fwait
xchg
mov
jmp
call
dec
sbb
inc
mov
inc
mov
gs
mov
cmp
inc
jbe
xchg
enter
call
aas
in
jno
test
jae
mov
mov
xchg
add
sbb
sub
dec
jg
pop
and
sbb
sbb
sbb
popa
loopne
dec
xor
jbe
es
lahf
lahf
lahf
jmp
xor
nop
sbb
int
inc
int
push
dec
inc
fstp
mov
test
stos
lds
psrlq
call
data16
sbb
dec
dec
aas
adc
je
test
inc
mov
sub
push
push
(bad)
fistp
repz
pop
add
xchg
xchg
sbb
push
ret
cmps
add
in
nop
pop
jmp
inc
mov
pop
mov
mov
mov
pop
sbb
out
sbb
nop
shl
stos
rcr
stos
aad
mov
or
jne
mov
push
(bad)
mov
div
fldenv
or
inc
inc
inc
mov
fmul
data16
pop
idiv
or
idiv
(bad)
dec
push
mov
loopne
loopne
cs
lods
adc
adc
les
rcl
push
pushf
pusha
inc
push
add
inc
call
stc
in
and
cmps
ins
mov
out
cmps
lahf
mov
retf
adc
cmp
arpl
jecxz
iret
inc
aas
js
push
sbb
icebp
lea
cmp
int
call
call
cmps
and
les
les
xor
or
aaa
jo
jmp
adc
add
test
add
or
pop
add
leave
mov
aas
adc
sbb
call
cli
dec
cmp
jae
lahf
xchg
sub
jmp
push
pushf
and
add
dec
iret
adc
add
sub
lods
cwde
arpl
jecxz
jo
xchg
stos
fwait
cmp
jge
int3
mov
cmps
loop
and
out
les
mov
fsub
cld
(bad)
leave
mov
std
jle
mov
cli
outs
(bad)
(bad)
jl
inc
(bad)
fwait
into
scas
inc
daa
mov
jae
jnp
fadd
jg
loopne
out
pop
loopne
je
cmp
jbe
cmp
pop
and
outs
in
xor
mov
in
cmp
mov
enter
or
push
int
in
or
mov
stc
and
jae
xor
ins
mov
daa
iret
xchg
mov
fldcw
pop
push
push
dec
enter
pop
jne
inc
jg
jp
cmc
push
mov
inc
and
mov
add
(bad)
gs
xchg
xchg
inc
cmp
inc
inc
inc
mov
inc
jmp
push
bound
pop
scas
imul
sub
jle
and
cmp
mov
mov
and
mov
das
pop
adc
xchg
jp
bound
xchg
fild
cmp
pushf
out
add
mov
pop
mov
fwait
jno
dec
lds
jo
icebp
enter
add
bound
call
mov
mov
push
adc
sbb
(bad)
or
(bad)
mov
popa
sbb
adc
push
adc
pop
add
dec
ds
push
ror
cwde
pop
mov
xchg
outs
pusha
jecxz
outs
mov
int3
lahf
xor
test
sbb
lods
xchg
sub
sub
cmps
ds
bound
cmc
pop
mov
pop
std
sahf
xchg
outs
outs
outs
in
jl
lock
out
cmps
aam
mov
mov
inc
xchg
outs
fisubr
jge
repz
loopne
push
es
pop
sub
cmp
lea
dec
out
call
mov
sar
mov
sub
enter
gs
jmp
xchg
xor
mov
stc
and
jae
fldcw
jge
pusha
add
add
xchg
mov
xchg
xchg
aaa
inc
rol
test
push
hlt
scas
bnd
inc
mov
sar
test
hlt
mov
(bad)
xchg
adc
aas
aas
adc
gs
and
dec
sub
add
inc
inc
fcomp
mov
sti
(bad)
in
mov
cmps
dec
and
ins
pop
and
ins
xor
jl
pop
inc
xor
mov
mov
sar
add
rcr
shl
push
sub
bound
jge
dec
mov
pushf
ds
(bad)
pop
pop
shl
lods
test
xor
loope
pop
aas
icebp
mov
sahf
adc
jnp
jl
cld
ja
or
pop
adc
adc
and
and
fwait
sahf
lahf
mov
and
jecxz
mov
scas
cs
int3
jecxz
xor
add
mov
mov
jle
add
xor
cld
icebp
(bad)
or
jmp
nop
nop
xchg
ins
outs
outs
in
mov
mov
addr16
jecxz
ss
(bad)
sub
adc
sub
or
sub
lods
fcmovnu
ja
nop
xchg
sbb
sbb
cmp
je
(bad)
push
mov
mov
dec
lds
retf
stos
test
in
je
or
push
mov
dec
dec
scas
iret
mov
adc
pop
lea
mov
jecxz
push
loop
loopne
mov
add
out
shl
xor
lods
out
ins
das
dec
dec
sub
cmc
or
cmps
ins
and
dec
cmc
fdiv
add
dec
cmps
jl
mov
pop
xor
cmp
int
into
and
cmps
imul
imul
cs
adc
dec
inc
inc
inc
retf
inc
retf
mov
leave
(bad)
scas
je
test
and
sbb
sahf
fstp
sbb
fiadd
push
mov
cli
xchg
inc
(bad)
xor
shl
mov
inc
lahf
ins
aaa
sahf
sub
sub
(bad)
sbb
pop
pop
and
sub
mov
jno
dec
mov
mov
jb
mov
jnp
repnz
icebp
dec
mov
fbld
fbld
jae
call
pop
xchg
cs
push
scas
jg
dec
or
push
sbb
sbb
mov
pop
and
pop
lods
mov
adc
sbb
mov
push
or
cmps
fild
adc
loopne
es
test
std
push
int3
lods
xor
and
xor
and
call
cmps
sbb
(bad)
mov
test
stos
bound
je
pop
jg
dec
xor
cld
jns
cld
mov
popa
sub
or
xchg
loopne
outs
cmp
imul
jl
into
scas
mov
sbb
xor
add
arpl
lds
pusha
and
mov
in
pop
pop
or
and
sub
scas
lods
lods
shr
loopne
fcmovu
cld
inc
retf
fldcw
push
cmps
retf
inc
add
push
pop
call
sbb
stos
popf
lahf
mov
imul
imul
cmp
mov
scas
inc
sub
adc
(bad)
mov
pusha
and
ds
push
out
push
ficomp
sbb
mov
repnz
dec
imul
imul
imul
jmp
mov
xchg
daa
test
iret
test
bound
call
dec
sbb
cmovb
sbb
cmp
aaa
jmp
mov
stc
movs
xchg
outs
mov
push
pop
mov
dec
mov
mov
and
cdq
sti
add
cmp
aaa
lods
stc
or
mov
mov
hlt
icebp
xor
lahf
fmul
stc
dec
cmp
ds
cmp
push
push
stos
arpl
dec
pusha
xor
inc
cmp
outs
mov
out
xor
jg
test
stos
lds
jg
mov
es
rcr
or
mov
test
jns
and
frstor
sub
mov
mov
adc
test
push
push
fmul
loop
repz
loopne
arpl
mov
push
jl
retf
rcr
dec
sub
cwde
and
adc
ja
je
dec
ret
or
out
jecxz
mov
gs
ins
mov
out
stos
fcomp
fstp
jnp
div
mov
es
jle
or
mov
lods
and
xchg
dec
xlat
add
mov
dec
jl
(bad)
(bad)
test
test
sbb
pop
pop
arpl
mov
arpl
mov
add
or
retf
add
js
xor
add
(bad)
repnz
xchg
mov
or
inc
and
adc
mov
xchg
icebp
sbb
push
(bad)
iret
xor
xor
aas
shl
cmps
fdivr
inc
inc
jmp
call
retf
dec
ds
cmp
inc
xor
loope
mov
push
shl
add
in
in
in
jecxz
gs
adc
not
mov
into
pop
stos
and
mov
inc
(bad)
int3
mov
and
mov
xor
pop
shl
das
sbb
lahf
aad
lahf
fsub
add
aaa
mov
ss
or
hlt
mov
ins
in
sub
ins
test
mov
lds
sub
jb
sub
in
cmp
pop
mov
cmps
std
test
int
loop
fdivr
xchg
sbb
xchg
(bad)
(bad)
jl
out
mov
(bad)
mov
(bad)
mov
in
cli
call
jns
in
mov
jg
push
jnp
adc
add
add
outs
mov
outs
or
and
and
jecxz
fmul
ins
adc
repz
lods
fist
fidiv
mov
pushf
mul
inc
xchg
scas
lods
lods
or
dec
mov
pop
sub
inc
inc
adc
stos
pop
add
push
jg
jg
into
inc
into
inc
enter
hlt
imul
outs
xchg
imul
fwait
out
das
xor
dec
cmp
lahf
pop
push
mov
outs
mov
xor
in
add
gs
inc
inc
inc
retf
mov
cli
dec
cmp
out
leave
retf
stc
or
ins
repz
mov
lods
out
jmp
pop
scas
and
(bad)
mov
out
push
sbb
cmovb
sbb
mov
sar
scas
push
jo
aaa
leave
inc
cdq
mov
fbld
push
xor
gs
cmp
pop
xchg
(bad)
std
pop
pop
fwait
cmp
js
cmp
mov
dec
cmps
mov
out
push
and
fnstsw
add
inc
add
and
mov
sahf
lahf
sbb
sub
inc
int
jmp
xor
frstor
fstp
ins
fld
jns
sub
(bad)
std
cwde
(bad)
je
ja
stos
dec
xor
xor
je
stos
je
jl
add
pop
jle
and
push
and
mov
xchg
add
push
mov
mov
pop
les
out
(bad)
inc
repz
pusha
in
cmp
jmp
loop
mov
pop
push
fsubp
mul
mov
into
push
fwait
(bad)
lds
mov
adc
xchg
lods
mov
pop
dec
add
inc
shl
xchg
lods
mov
jp
push
retf
shl
(bad)
imul
xchg
cmp
sar
fimul
mov
out
mul
lock
fsub
pop
adc
addr16
and
icebp
dec
mov
dec
mov
dec
mov
xchg
push
add
push
aaa
push
int
add
fsubrp
pusha
and
cmps
adc
xor
and
add
clc
mov
retf
cmp
fwait
and
pop
xor
outs
outs
mov
aas
cmp
inc
inc
inc
(bad)
jl
add
sub
fistp
pop
pop
iret
cwde
ds
sbb
les
enter
mov
xor
cmc
mov
cmp
sbb
sbb
mov
cmp
mov
dec
aaa
mov
mov
or
ins
pop
pop
sub
add
inc
or
loop
xor
push
and
xor
or
out
xchg
jle
dec
mov
mov
mov
stos
xlat
outs
pop
and
cmps
pop
sub
mov
int
in
mov
cmps
outs
sbb
not
dec
or
add
or
outs
push
fcom
(bad)
push
fsub
repz
add
xchg
sbb
mov
mov
fmul
sbb
or
mov
mov
mov
loope
loope
pusha
sbb
in
or
fidiv
cmps
or
or
mov
fnstcw
and
jne
popa
clc
cs
enter
fnstenv
lods
inc
aaa
pop
adc
jl
fwait
or
sub
or
xor
xor
and
pop
xchg
clc
pop
xchg
hlt
mov
push
push
cmp
inc
add
fist
xor
je
lahf
fcomp
je
outs
mov
lahf
cdq
cdq
in
cmp
inc
inc
xchg
std
inc
(bad)
jmp
or
xor
xor
xor
push
jno
inc
aas
je
loope
pop
xchg
ret
mov
pop
sub
pushf
sti
pushf
inc
sbb
sbb
cmc
mov
call
icebp
js
sti
jnp
dec
mov
add
ja
xchg
mov
fwait
mov
inc
jno
jecxz
ins
fld
adc
and
inc
mov
mov
jl
mov
(bad)
movs
xchg
fdiv
mov
sbb
dec
push
cmp
fwait
xchg
mov
dec
and
sbb
test
popa
jo
jo
mov
ret
ss
lahf
sbb
pop
je
mov
mov
cs
sub
pop
jnp
ficomp
pop
test
pop
add
loopne
jle
outs
xchg
mov
xchg
xchg
push
pop
ret
and
adc
enter
and
mov
inc
or
out
loop
outs
loopne
loop
mov
inc
dec
pop
dec
dec
mov
sbb
sbb
stos
sbb
ja
in
jmp
mov
packsswb
mov
xchg
jmp
pop
call
sub
push
lahf
inc
push
push
cmc
adc
push
push
jne
stos
lea
and
test
push
or
push
enter
mov
dec
add
jg
xchg
add
xor
xor
mov
pop
fcmovnb
dec
out
(bad)
adc
push
in
aad
push
dec
cmp
cmp
xor
ss
cdq
cdq
aas
lea
in
adc
lock
inc
inc
out
scas
cmp
sub
xor
xor
add
loop
loope
push
mov
cmps
xor
pop
pop
dec
xchg
xlat
arpl
sbb
and
jg
jmp
mov
mov
jbe
xchg
sbb
js
loop
or
movs
xchg
repnz
scas
cdq
add
rcr
ja
(bad)
dec
push
ror
ror
add
cmp
dec
jecxz
cmp
leave
mov
sbb
fadd
fist
push
jl
and
idiv
xor
popa
jo
mov
pop
addr16
outs
jg
dec
int3
cwde
sar
out
xor
xor
aaa
add
sub
(bad)
and
mov
(bad)
std
arpl
cmp
cmp
add
pusha
(bad)
out
scas
add
cmp
mov
inc
ror
test
inc
mov
repz
repz
loopne
xchg
xchg
xor
push
xchg
dec
les
inc
cmps
pop
dec
dec
sbb
pop
out
in
in
mov
test
jecxz
cmps
repz
push
dec
sbb
sbb
push
xor
cli
jge
(bad)
jnp
or
push
and
push
fidiv
xchg
iret
jle
inc
xor
push
push
es
lock
adc
or
retf
or
jnp
outs
fidivr
hlt
enter
mov
hlt
inc
loope
imul
out
gs
cmps
outs
repnz
(bad)
aad
inc
retf
inc
retf
add
ret
dec
xchg
loope
jecxz
sub
mov
mov
dec
xchg
mov
jg
out
fwait
mov
and
xor
mov
aaa
cld
hlt
(bad)
retf
rol
push
pop
dec
adc
dec
pop
leave
mov
mov
push
stos
fs
mov
mov
shl
gs
adc
fbld
jge
pop
rcr
pop
xchg
sahf
cmp
enter
aaa
popf
mov
mov
xor
xlat
mov
dec
cmps
xlat
add
lahf
hlt
cmp
or
fs
cwde
push
daa
ss
xchg
popa
jo
mov
jg
lods
into
das
push
outs
test
jnp
inc
in
xor
xor
rcr
(bad)
(bad)
stos
or
stc
pop
dec
pop
rcr
std
call
outs
outs
outs
outs
xchg
jnp
fdivrp
out
adc
jl
mov
pop
mov
in
dec
mov
push
mov
out
(bad)
hlt
lock
jnp
cs
lods
outs
dec
out
dec
pop
dec
dec
dec
dec
les
fwait
out
outs
adc
inc
xor
out
mov
push
push
sbb
ins
or
mov
in
and
out
mov
push
push
and
and
xchg
xor
lods
lods
lods
lods
into
cmp
call
adc
idiv
cld
xchg
jle
mov
xlat
iret
into
into
je
loope
loopne
in
push
out
fwait
sbb
dec
cmp
pusha
inc
inc
inc
loope
sbb
into
ja
xor
adc
jecxz
loopne
out
dec
out
sbb
stos
mov
mov
retf
retf
lds
repz
inc
inc
cld
xchg
daa
pop
push
cmp
call
mov
mov
push
push
mov
pop
jno
dec
xor
(bad)
xor
dec
dec
xchg
hlt
(bad)
jbe
jne
pop
cwde
adc
das
or
icebp
push
sub
sub
xchg
aaa
aaa
cwde
mov
sub
cmp
aad
cs
pop
pop
pop
dec
dec
dec
xchg
cdq
loopne
jecxz
imul
es
fiadd
and
in
pushf
lahf
lahf
cmp
sbb
aas
cmp
cmp
call
and
xchg
and
sub
stc
or
sub
push
out
fcom
and
pusha
ja
in
arpl
add
add
push
std
cmp
add
ins
(bad)
sub
push
and
or
or
imul
cmp
ret
sbb
sbb
xor
dec
dec
loopne
loopne
push
pop
sbb
sbb
(bad)
gs
jmp
(bad)
into
push
mov
sbb
push
push
push
mov
mov
ret
pop
retf
push
scas
inc
scas
and
mov
pop
inc
inc
add
dec
icebp
cmp
into
and
dec
mov
xchg
dec
mov
xchg
or
or
or
or
xor
adc
adc
iret
(bad)
(bad)
mov
sub
sbb
or
add
ret
mov
bound
bound
lea
cmp
sbb
lock
inc
inc
xor
cmp
xor
in
mov
xor
mov
aaa
inc
jmp
leave
daa
push
hlt
sar
mov
rcl
pushf
out
dec
sub
bound
out
mov
lea
mov
mov
inc
out
retf
or
lods
js
jmp
leave
xchg
call
xor
xor
xor
fst
into
popf
mov
dec
mov
lock
leave
fmul
dec
jo
cmp
pop
pop
cli
movs
mov
rcl
mov
jno
jl
iret
mov
and
adc
jo
adc
out
fwait
loop
dec
call
inc
inc
frstor
jnp
lods
mov
sub
mov
leave
pop
dec
mov
cmps
cmps
cmps
or
mov
jl
outs
add
xchg
cmps
cmp
xlat
pop
dec
pop
dec
std
dec
mov
inc
shr
test
inc
sbb
repz
cli
test
in
mov
xchg
loopne
loopne
adc
dec
pop
retf
dec
sbb
outs
or
ins
push
outs
mov
inc
ret
mov
out
lea
sbb
test
in
scas
popa
mul
add
add
mov
fs
pop
mov
or
mov
cmp
aam
push
retf
or
test
pop
xor
xor
es
into
loopne
or
xchg
add
jmp
mov
adc
mov
dec
add
push
retf
mov
lods
pusha
sub
dec
add
call
ins
adc
lods
jecxz
out
addr16
fs
push
shl
xor
and
add
mov
icebp
pop
test
inc
rol
fcom
rcl
pop
push
xchg
xlat
daa
sahf
pop
scas
ja
dec
dec
dec
cmp
mov
xor
jb
sbb
mov
mov
mov
sub
call
clc
(bad)
jl
(bad)
pop
xchg
xchg
leave
fmul
(bad)
mov
push
cmp
mov
hlt
repz
cld
popf
jecxz
xchg
inc
sbb
mov
and
pop
jnp
push
ja
sbb
mov
in
outs
jmp
sbb
push
imul
arpl
call
sub
aad
inc
loope
pop
mov
or
sbb
hlt
add
sti
jbe
push
dec
dec
dec
les
inc
cmps
stos
and
mov
add
or
imul
retf
pop
inc
sbb
cmps
stos
sbb
sbb
mov
mov
mov
mov
outs
movs
sti
mov
or
and
lea
ds
pop
mov
jg
adc
lods
daa
fcomp
dec
(bad)
mov
sbb
mov
inc
inc
xor
les
adc
mov
ds
scas
or
test
add
arpl
call
adc
pushf
push
mov
or
(bad)
test
mov
pop
or
add
xchg
sub
pusha
jmp
pop
mov
or
xchg
mov
ss
and
fdivr
retf
imul
inc
loop
jno
cmp
sub
pop
ss
pushf
call
pushf
aas
pop
iret
mov
pop
fdivr
hlt
mov
sbb
in
cmp
dec
dec
adc
int
out
stc
or
inc
or
fld
lods
sub
dec
or
sti
or
inc
dec
xor
cmp
jns
pop
pop
and
es
imul
xor
sub
frstpm(287
(bad)
dec
add
jmp
lahf
lahf
jmp
test
aaa
xor
in
xor
xor
sub
fld
pop
or
jecxz
pop
sub
rcr
cdq
pop
arpl
jge
inc
pop
jno
jp
in
lods
ins
or
mov
mov
mov
(bad)
mov
push
mov
xchg
aas
repz
js
cmp
xchg
xor
sbb
xchg
sbb
loopne
dec
dec
dec
in
(bad)
xchg
mov
ds
xor
xlat
mov
movs
xor
ins
push
mov
aad
mov
lea
sub
idiv
jae
jne
mov
bound
hlt
inc
scas
es
mov
inc
adc
adc
hlt
call
iret
fimul
ins
loop
iret
lock
jne
and
int3
dec
out
(bad)
out
pop
out
sub
(bad)
aad
std
fs
push
mov
push
sub
mov
movs
in
cdq
xor
mov
or
sbb
sub
ss
inc
call
mov
mov
popf
mov
mov
mov
ja
test
sub
push
adc
sub
sbb
jno
inc
aas
dec
cli
dec
mov
xchg
xor
jo
psllq
outs
sar
pop
mov
and
cmp
adc
mov
xor
add
mov
mov
imul
dec
repnz
fst
dec
xor
sbb
sbb
pusha
jmp
lahf
jne
dec
outs
jg
mov
xor
mov
sar
ficom
shr
(bad)
mov
cmps
or
xor
sub
outs
outs
xor
adc
pop
jle
les
mov
inc
xchg
sub
js
repz
xchg
xchg
jle
dec
push
xchg
mov
dec
jl
(bad)
sbb
fist
jmp
dec
cmp
mov
and
test
mov
sbb
cmp
mov
ss
jne
or
jge
mov
bound
imul
call
call
mov
or
imul
or
cmp
xor
loopne
loope
or
pop
adc
or
gs
out
cmc
sub
pushf
ret
and
push
ror
push
mov
jbe
test
ins
cld
fistp
out
out
push
mov
mov
jg
xor
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
retf
aam
jge
iret
add
inc
inc
in
aaa
sub
pop
aas
push
aas
fistp
pop
call
movsx
lss
mov
mov
pop
xor
or
push
scas
xor
loope
pop
aas
icebp
mov
out
mov
jb
or
xchg
jne
pusha
(bad)
shl
mov
or
imul
jo
cmp
add
pop
mov
mov
ins
mov
mov
and
in
ss
xchg
mov
je
cwde
mov
xor
mov
xor
rcl
jl
loopne
sub
inc
push
and
dec
push
rcr
dec
cld
xchg
cmp
ds
addr16
aas
repz
mov
int3
aas
adc
mov
stc
ret
stos
inc
test
repz
push
xchg
push
test
xchg
ds
xchg
push
inc
test
dec
pop
cmps
xor
in
in
adc
pop
(bad)
dec
dec
dec
sbb
jmp
scas
inc
loop
push
sbb
sbb
xchg
out
mov
into
mov
or
stos
xor
push
das
ins
movs
outs
mov
(bad)
leave
aam
lods
sahf
jbe
lock
lock
repnz
retf
push
mov
mov
mov
dec
repnz
in
xchg
iret
mov
loope
lods
or
ins
adc
call
inc
cmp
mov
aas
jbe
test
mov
(bad)
pusha
into
arpl
cdq
cdq
in
mov
ret
ins
adc
mov
jmp
xor
mov
aas
movs
icebp
mov
leave
scas
push
mov
(bad)
sar
ins
call
xlat
pop
and
ret
setb
aam
mov
js
mov
add
stos
jns
push
aaa
shr
jb
js
sbb
call
mov
push
xlat
(bad)
pop
sbb
aaa
leave
sti
fcomp
add
sub
cmp
jge
nop
jno
pop
mov
dec
aam
dec
(bad)
cwde
into
ss
mov
out
push
cs
and
lahf
cmp
arpl
push
cwde
sbb
mov
add
stc
stos
dec
sub
arpl
rcr
int
pusha
xor
ja
test
outs
push
cdq
mov
xchg
cli
adc
out
inc
dec
dec
es
int
dec
mov
in
ins
xchg
int
sub
stos
sbb
push
int3
scas
push
and
sub
enter
(bad)
mov
cmp
outs
ds
cmps
pop
sbb
xlat
out
out
fwait
cs
mov
sub
or
or
jo
mov
jne
push
shl
loopne
repnz
push
mov
mov
sub
add
mov
iret
fidiv
fwait
cmp
fist
xchg
jmp
adc
fwait
sti
dec
adc
xor
mov
add
cmp
movs
(bad)
jb
sbb
xchg
shr
sbb
cmp
mov
ror
cmp
gs
mov
lods
push
movs
inc
inc
inc
mov
pop
sub
pop
aas
xor
rcr
jg
fimul
cmp
test
adc
and
xchg
dec
rcl
mov
and
sbb
sub
xchg
or
imul
ins
mov
imul
sub
out
sub
xchg
push
loopne
dec
hlt
lods
jmp
jg
lods
ret
jnp
lods
lahf
xor
inc
sar
jg
stos
out
inc
jmp
int
xor
mov
outs
ret
mov
sub
sub
sub
push
rcr
aas
mov
arpl
add
and
sub
scas
pop
out
mov
adc
enter
and
jne
in
pop
call
test
xor
ss
jl
(bad)
or
jge
pop
jecxz
pop
(bad)
fnsave
repnz
mov
outs
cmps
adc
out
push
mov
sbb
pop
push
stos
int
mov
cmp
mov
das
or
scas
lods
lods
push
lahf
dec
popa
popf
test
mov
fldenv
loop
inc
inc
cmp
jg
dec
fcom
hlt
call
and
call
imul
push
adc
gs
inc
(bad)
inc
or
inc
mov
inc
retf
enter
mov
inc
dec
out
jmp
sbb
out
dec
jb
xor
xchg
loope
mov
retf
fidivr
loop
xor
iret
xor
mov
in
inc
push
add
push
(bad)
pop
xchg
stc
push
(bad)
call
dec
mov
call
dec
cmps
js
mov
mov
mov
mov
pop
out
mul
or
idiv
add
mov
(bad)
mov
enter
or
sub
retf
pop
pop
adc
hlt
xlat
push
sbb
inc
pusha
mov
mov
out
movs
push
es
xor
lahf
lahf
lahf
(bad)
out
outs
outs
xchg
ins
outs
mov
les
jmp
and
ror
(bad)
(bad)
jo
rcr
aam
pop
pop
fstp
mov
enter
outs
outs
outs
inc
nop
outs
(bad)
jmp
add
retf
(bad)
dec
repnz
test
inc
pop
retf
repz
inc
lods
cmp
mov
ret
dec
dec
dec
cmps
ret
in
fisttp
in
sub
mov
jecxz
mov
mov
out
outs
mov
pop
mov
out
jmp
icebp
jae
cmp
cld
inc
sub
jne
mov
push
hlt
hlt
es
inc
aaa
push
enter
inc
test
mov
mov
dec
or
arpl
loope
movs
sbb
pop
mov
adc
cwde
push
retf
mov
or
popf
or
mov
push
cmps
es
pop
fstp
pop
loop
pop
inc
inc
inc
shl
inc
xor
inc
inc
cmp
into
les
aaa
cmp
rcl
push
adc
adc
pop
inc
inc
mov
adc
adc
jb
dec
in
pop
cmp
sti
jbe
xchg
jb
mov
aaa
jl
push
pop
sbb
call
add
sub
ror
mov
mov
inc
mov
pop
stos
sub
daa
mov
push
mov
mov
out
push
and
scas
in
pusha
pusha
pusha
in
adc
lahf
nop
cmp
out
rol
mov
xor
(bad)
and
push
ror
movs
fisttp
or
cwde
or
fdivp
outs
(bad)
call
movs
add
add
inc
and
inc
inc
into
push
push
sub
or
test
repz
loopne
aaa
cld
push
retf
dec
dec
dec
cmp
ins
push
sahf
in
outs
pop
jno
pop
mov
dec
out
xor
pop
jecxz
(bad)
add
imul
stos
mov
(bad)
out
fiadd
stos
adc
mov
or
or
inc
mov
pop
fstp
jne
dec
test
push
sbb
and
jl
or
outs
aad
or
cli
mov
inc
inc
mov
dec
push
mov
push
xchg
in
es
mov
adc
cmp
sub
ret
aas
dec
inc
sar
imul
jbe
mov
cdq
out
repz
sub
inc
inc
loop
xor
jmp
dec
cmp
dec
and
xor
mov
enter
enter
mov
pop
xchg
ret
sub
outs
adc
arpl
sbb
adc
mul
mov
xchg
mov
or
aas
repnz
(bad)
mov
and
jb
pop
add
jns
inc
xlat
(bad)
mov
or
mov
add
dec
aas
repz
mov
pop
pop
cli
sub
daa
sbb
ds
jg
pusha
push
sbb
jo
xor
nop
nop
ss
push
push
push
das
mov
push
ret
out
fnstsw
bound
sub
mov
or
add
into
int3
mov
and
mov
shr
mov
push
sbb
push
lock
in
lods
mov
or
scas
xchg
xchg
xor
sbb
mov
sahf
in
outs
inc
nop
sbb
mov
ret
mov
or
push
mov
not
sbb
and
xrelease
mov
clc
push
int3
mov
lods
mov
out
xchg
js
pop
adc
xchg
test
or
and
in
mov
imul
jmp
add
add
(bad)
inc
pop
fwait
mov
arpl
arpl
je
int3
jmp
bound
pop
popf
adc
fist
jmp
dec
lds
retf
mov
iret
iret
iret
mov
in
push
sbb
inc
sub
xchg
jmp
fild
call
inc
sbb
(bad)
aaa
sub
loope
(bad)
or
or
inc
push
mov
mov
sub
dec
gs
call
add
ds
adc
jl
enter
cwde
and
mov
mov
dec
pushf
pop
jecxz
lahf
fcomp
call
imul
stos
mov
or
inc
lahf
lahf
nop
loop
and
outs
add
inc
inc
inc
inc
xchg
jbe
and
retf
(bad)
(bad)
(bad)
lahf
jno
sub
mov
fwait
cmps
cmps
cmps
out
add
mov
ja
fmul
outs
outs
outs
xchg
add
mov
sbb
mov
mov
ins
test
pop
pop
pop
repz
out
add
add
xchg
inc
nop
pop
not
ds
test
dec
mov
xchg
imul
jae
sbb
(bad)
(bad)
mov
mul
jg
push
jae
mov
lods
and
mov
xchg
ins
sub
and
movs
js
pop
and
or
xor
inc
cmps
fs
scas
xor
inc
cmp
mov
sub
loopne
not
aaa
cmc
cs
mov
cmp
pushf
lds
popf
popf
mov
mov
xchg
jecxz
adc
xor
lock
imul
inc
retf
inc
retf
mov
mov
adc
and
leave
movs
in
jmp
repz
pop
out
inc
push
pop
pop
pop
dec
retf
dec
ds
ror
xor
loope
mov
dec
js
jle
das
lods
lods
test
stc
dec
xchg
fcmovnbe
gs
pop
adc
not
mov
ficom
or
cwde
and
stc
mov
(bad)
imul
dec
and
lock
dec
das
jecxz
call
sbb
inc
int
shl
es
dec
mov
or
xor
and
(bad)
mov
sar
in
jns
xchg
adc
out
pop
and
adc
das
push
fistp
arpl
mov
push
test
lods
sbb
jl
fcomip
dec
aas
jl
dec
into
and
sub
(bad)
xchg
xchg
loopne
xchg
fsubr
lahf
cmp
popf
adc
jecxz
mov
into
mov
retf
sbb
ins
mov
sbb
sbb
xchg
cwde
(bad)
add
jge
jne
movs
lods
fdiv
mov
cmovp
mov
lods
fimul
inc
xchg
jl
push
fiadd
inc
fiadd
jl
hlt
xchg
sub
or
cmp
xor
daa
loopne
loopne
loopne
xchg
pop
adc
ins
adc
xchg
inc
or
add
dec
call
test
pop
je
fld
jae
fdiv
loopne
out
dec
lock
sbb
scas
cmp
mov
(bad)
(bad)
retf
iret
inc
sub
mov
inc
inc
aas
fisub
mov
pop
adc
dec
dec
aam
pop
jg
enter
dec
sub
cmp
push
xor
cld
xor
xchg
dec
jae
mov
sub
push
ficom
fiadd
and
in
enter
mov
stos
stos
pop
pop
cli
and
pop
mov
jecxz
inc
xchg
in
mov
(bad)
jl
mov
es
cmps
mov
sbb
sbb
inc
inc
loope
shl
retf
fstp
sbb
mov
and
pop
pop
add
std
je
int
add
scas
xchg
push
rcl
ror
or
inc
pop
or
push
pop
repz
push
out
stos
push
jbe
movs
std
mov
les
sbb
xchg
sbb
dec
jo
mov
sub
and
sbb
sbb
sbb
jmp
(bad)
push
sbb
mov
idiv
adc
loope
push
popf
inc
cmps
mov
fild
inc
cs
mov
push
mov
push
mov
(bad)
jnp
jl
(bad)
push
cmp
add
xor
imul
jecxz
ins
pop
adc
add
int3
(bad)
cs
mov
ja
jne
fisttp
dec
add
xchg
pushf
pusha
or
(bad)
fadd
mov
mov
ret
ss
(bad)
ss
data16
in
scas
push
xchg
inc
inc
adc
fcmovbe
rcl
cmp
fucomip
dec
pushf
scas
pop
mov
mov
shl
and
mov
js
(bad)
aas
jl
push
mov
mov
icebp
inc
stos
int3
adc
ins
sub
add
push
pop
fwait
add
rcl
inc
lea
inc
(bad)
fdivr
push
ins
and
out
rcl
sbb
xor
shr
sbb
es
or
push
jmp
mov
jnp
scas
and
mov
push
cmp
enter
frstor
xor
movs
fsub
pusha
(bad)
jl
xchg
popa
fsub
outs
out
(bad)
call
(bad)
xchg
inc
into
mov
test
inc
(bad)
stc
in
fdiv
repz
xchg
xchg
fs
mov
movs
push
and
repz
repz
in
xor
mov
xor
jecxz
sub
or
mov
push
fwait
ss
mov
jecxz
(bad)
mul
jg
pusha
sub
cmp
mov
(bad)
push
std
and
inc
std
push
fdiv
push
sbb
push
mov
test
push
jl
idiv
jnp
cmp
test
mov
jmp
loopne
stos
or
push
mov
and
push
sbb
push
lds
mov
imul
stc
pop
cdq
and
and
les
call
xor
imul
push
retf
fiadd
sub
mov
xor
inc
cli
xlat
cmp
sub
retf
repz
sahf
adc
adc
xchg
mov
cmp
cmp
js
mov
mov
leave
mov
sahf
adc
xchg
adc
ins
jg
cmc
cmp
fldenv
test
sbb
enter
repz
mov
ret
test
clc
lock
movs
ss
inc
jp
fisttp
jg
(bad)
jg
movs
loope
sbb
mov
jne
inc
popa
jo
imul
in
in
xor
xor
test
inc
movaps
jo
jmp
mov
psrlq
ja
jecxz
mov
rep
jle
mov
loopne
push
mov
into
cmc
add
mov
xchg
or
inc
imul
pop
stos
adc
mov
les
fild
sub
dec
mov
xor
jbe
mov
and
or
retf
mov
loop
mul
lds
jg
push
daa
loope
daa
ins
ins
jb
or
loope
mov
es
push
adc
or
mov
pop
jg
mov
dec
test
into
inc
inc
ds
sbb
pop
pop
add
add
mov
dec
mov
push
dec
xchg
int3
add
sahf
in
jecxz
lea
popf
in
out
xchg
inc
xor
dec
push
inc
inc
mov
dec
ss
iret
pusha
popa
iret
and
cmp
aaa
cmp
cmp
rcl
or
call
mov
ret
es
mov
repnz
cmc
js
(bad)
jb
jmp
gs
pop
test
ds
mov
sub
pop
leave
fdivr
or
jne
mov
stc
shl
xchg
lock
inc
or
sbb
outs
mov
xor
push
lods
arpl
and
mov
jmp
xor
mov
int
lahf
fmulp
fstp
sbb
pop
add
sahf
sub
push
sub
mov
test
out
add
out
jecxz
xchg
jl
std
les
je
pop
cmps
mov
aas
pushf
ror
inc
push
push
adc
pop
out
repz
(bad)
jmp
out
xchg
adc
pop
outs
dec
pop
sahf
fld
nop
sahf
out
lock
dec
mov
mov
jo
stc
push
sbb
imul
sbb
fnstsw
xchg
pop
xor
(bad)
(bad)
jg
jge
or
repz
popa
test
xlat
dec
add
es
adc
stos
in
sbb
rol
(bad)
jg
xor
mov
das
icebp
movs
pop
(bad)
popf
cwde
inc
in
and
lock
gs
out
gs
out
dec
mov
dec
cmp
inc
sub
push
inc
add
add
jg
cdq
cdq
out
cmp
scas
pop
fwait
mov
lods
dec
push
inc
inc
xor
out
inc
xor
jmp
jge
mov
xor
(bad)
mov
fidiv
mov
fist
rcr
gs
inc
sbb
pop
inc
dec
dec
mov
loopne
cmp
or
fdiv
and
mov
fcomp
mov
pop
fwait
mov
or
xchg
xchg
add
(bad)
pop
pop
cmp
aaa
aaa
jecxz
cdq
cwde
mov
rcl
(bad)
cmp
repz
push
dec
dec
pop
pop
pop
or
or
fsubr
cmp
mov
sbb
cmps
dec
and
push
rcr
mov
arpl
inc
inc
inc
fnsave
cmp
and
stos
and
fs
out
jbe
sbb
cmps
cmps
shr
dec
loop
loopne
or
xchg
mov
jl
add
mov
into
ins
dec
movs
fild
mov
mov
popf
fs
imul
jp
ror
inc
int3
lds
sbb
nop
(bad)
sbb
mov
jg
push
add
jle
jle
imul
push
mov
fild
(bad)
imul
mov
leave
push
lods
daa
test
dec
pop
mov
jmp
mov
mov
inc
sub
jl
add
or
or
cwde
es
into
into
dec
and
imul
popf
add
stos
adc
adc
adc
in
(bad)
add
in
dec
xor
push
test
mov
and
mov
sbb
sbb
sbb
adc
inc
and
nop
xor
gs
xchg
and
mov
stc
inc
pop
sahf
ret
pop
sahf
sub
pushf
push
sahf
push
iret
cmp
jns
mov
xor
les
or
retf
sbb
pop
dec
dec
jae
mov
cmp
mov
xchg
xlat
jge
jl
pop
adc
pop
sub
mov
sub
cmp
clc
movs
cmp
mov
ja
test
mov
pushf
out
push
dec
adc
daa
push
cmp
sub
pusha
mov
lahf
lahf
test
jns
outs
outs
xchg
inc
inc
push
jmp
addr16
data16
add
inc
sub
inc
sub
mov
jge
pop
fistp
ja
shr
scas
sbb
mov
dec
add
add
lock
dec
dec
dec
mov
mov
or
stc
inc
call
push
vpmacssdql
nop
or
imul
sbb
cmps
les
or
std
nop
pop
(bad)
cmp
xor
mov
cmp
or
xchg
mov
push
out
lock
fild
stc
jae
div
test
push
and
inc
sti
cli
cld
bound
jne
popa
dec
jne
push
and
inc
cli
sti
std
stos
loop
mov
idiv
(bad)
outs
aam
rcl
xchg
fdivp
mov
(bad)
std
pop
lahf
inc
or
adc
adc
mov
push
mov
in
aad
add
pop
pusha
inc
push
add
addr16
(bad)
addr16
idiv
and
xchg
pop
rcr
loope
jns
fisub
into
pusha
xor
xor
xor
(bad)
cdq
iret
inc
xor
push
add
cmp
pop
scas
(bad)
pushf
push
repz
pop
call
pop
mov
lds
test
xor
dec
dec
jae
test
mov
jb
xor
sbb
xchg
jg
cmp
lea
sub
jae
aaa
aaa
inc
sub
ins
mov
imul
leave
jecxz
push
stos
jecxz
xchg
in
(bad)
mov
shl
(bad)
dec
and
mov
pop
cwde
adc
ss
dec
in
cmp
iret
mov
mov
push
xchg
loopne
frstor
aaa
movs
pop
sbb
mov
pop
add
out
mov
out
mov
test
pop
mov
mov
adc
mov
push
and
and
and
pop
xchg
mov
js
cmp
cmc
imul
sbb
mov
mov
push
xor
sbb
cwde
fadd
loope
and
mov
mov
mov
out
ror
not
div
in
add
fnstcw
push
mov
and
imul
push
push
xor
cmps
sub
pop
jl
fimul
test
jle
inc
mov
test
loope
xchg
fild
sbb
adc
addr16
add
push
leave
xor
jne
je
arpl
retf
stc
sbb
fcomp
fadd
add
retf
int
call
iret
gs
aaa
je
pop
cmp
mov
pop
adc
add
dec
pop
pop
mov
mov
rcr
mov
int3
xor
cmc
cwde
xor
lock
je
mov
in
(bad)
mov
pop
adc
sub
or
adc
or
fdivr
(bad)
mov
ds
cmps
push
arpl
sbb
xor
push
and
dec
add
add
movs
fisub
adc
nop
adc
in
sub
int
call
call
jb
aam
cmp
or
cmp
pop
dec
fist
inc
ja
dec
arpl
xchg
test
outs
pop
test
add
into
test
mov
push
cld
and
in
(bad)
cmc
bnd
in
stos
xchg
xchg
call
int3
mov
mov
dec
dec
dec
lock
sahf
shl
and
ja
mov
les
fsub
sbb
mov
(bad)
ins
loop
es
imul
call
mov
out
stos
xor
push
das
mov
dec
mov
int3
or
cs
push
or
push
enter
and
inc
idiv
sub
or
dec
cmp
hlt
or
shl
mov
sahf
out
xchg
in
gs
cmp
retf
inc
retf
cmp
imul
mov
xor
fcom
mov
stos
imul
dec
or
mov
xor
xor
mov
ins
cmps
jl
adc
call
(bad)
call
dec
cmp
jno
jo
sbb
dec
or
das
jbe
cld
ja
mov
mov
mov
js
call
mov
iret
add
fst
xlat
enter
adc
sti
xor
cmp
jecxz
js
daa
mov
imul
or
outs
(bad)
sub
sbb
sub
es
cwde
push
mov
aas
cmp
sbb
int
push
je
inc
inc
xor
cmps
aam
cmps
cld
and
sub
ins
cmp
sub
rcr
or
mov
loope
outs
outs
outs
pop
cmps
aas
scas
scas
scas
add
cmp
cmp
fst
push
push
and
pop
cmps
mov
xchg
or
imul
pop
out
arpl
(bad)
add
retf
cmp
std
mov
jecxz
cli
fdiv
clc
and
daa
push
and
pop
and
adc
neg
ss
ins
cld
inc
sti
push
push
push
add
pcmpeqw
ret
dec
stos
jo
lods
lods
cs
test
jo
(bad)
mov
jmp
aam
or
cmp
xor
xchg
std
shl
mov
fldcw
mov
mov
cmp
sbb
inc
push
retf
mov
mov
outs
fsub
fs
sar
mov
xchg
jge
inc
inc
inc
xor
inc
mov
cwde
out
xor
or
sub
lock
inc
in
outs
aaa
sub
pop
aas
push
aas
ret
sub
pop
call
mov
aas
(bad)
(bad)
movsx
xchg
dec
les
xchg
or
out
shl
gs
sbb
cmp
xor
(bad)
sub
xchg
or
popf
inc
and
ins
xor
jmp
pop
leave
mov
sub
les
shr
inc
xor
imul
and
in
push
fs
mov
scas
das
push
sub
mov
aam
inc
inc
rcr
cmps
aam
xchg
jp
jae
mov
push
sahf
pop
push
add
sub
jbe
mov
adc
movs
dec
xor
aad
inc
stos
outs
test
xor
jmp
pop
push
outs
xchg
sub
test
ds
xchg
sbb
fld
xor
div
retf
mov
sbb
daa
out
mov
mov
push
das
mov
add
fdivp
jge
jne
jmp
stos
push
movs
lods
inc
sbb
mov
imul
lods
es
(bad)
(bad)
(bad)
(bad)
enter
lahf
add
mov
xchg
inc
sub
in
imul
sub
fnstsw
xchg
dec
mov
int
mov
add
les
sub
aaa
xchg
imul
pop
inc
inc
inc
ss
xor
xor
xor
fucomip
inc
inc
aas
js
aaa
jp
add
mov
xchg
loope
pop
pushf
adc
mov
dec
sbb
mov
xor
dec
dec
or
repz
aas
repnz
jecxz
mov
mov
call
dec
idiv
mov
sbb
ror
xchg
aas
adc
sbb
frstor
or
jmp
pop
mov
out
sbb
sbb
xchg
popa
in
mov
mov
int
scas
arpl
stos
adc
or
push
scas
imul
mov
xor
stos
jg
test
shr
mov
rcl
std
inc
add
data16
jecxz
xchg
sbb
add
dec
dec
sbb
stos
test
gs
or
in
shl
repz
fwait
call
mov
xchg
jno
pop
adc
in
outs
jmp
in
cmp
mov
movs
push
int
outs
stos
push
push
adc
sub
in
push
aaa
mov
xor
ret
nop
sub
imul
xchg
or
or
xchg
rol
mov
sub
mov
cli
lods
or
std
push
std
sbb
inc
sub
imul
stos
push
adc
and
mov
mov
stc
pop
inc
inc
inc
imul
mov
out
sub
fcomp
cli
pop
xor
jnp
push
inc
xchg
sbb
sar
retf
leave
mov
icebp
js
xchg
ins
sub
cmp
xchg
mul
rcl
pop
pop
dec
dec
leave
mov
cmp
cli
idiv
bound
add
mov
dec
icebp
dec
pop
xchg
sbb
xlat
mov
idiv
push
push
stos
or
pop
xchg
inc
rol
jge
cmp
dec
aad
sub
ficom
xchg
dec
(bad)
mov
in
sbb
lods
imul
aam
cwde
jmp
jmp
mov
mov
xchg
ins
out
inc
xor
push
retf
addr16
mov
shl
rcr
xor
std
inc
fcomp
pusha
sub
mov
cwde
in
jbe
daa
je
jbe
mov
or
adc
imul
jp
data16
push
cmps
call
xchg
pop
sbb
and
dec
dec
jecxz
jmp
fstp
ret
jmp
or
and
xchg
mov
jecxz
sbb
test
pop
push
sub
mov
adc
loope
inc
cwde
xchg
lods
lods
mov
clc
mov
push
fisttp
outs
mov
xchg
mov
(bad)
imul
pop
jg
cmp
xor
mov
imul
push
out
out
out
mov
inc
or
adc
sbb
add
addr16
xchg
in
out
and
jge
xchg
rcl
addr16
leave
inc
add
add
or
inc
xor
dec
xchg
jge
mov
xchg
aas
push
adc
xchg
jp
push
sahf
push
sti
bound
pop
cmp
ja
test
mov
cmp
aas
dec
aas
loope
sbb
inc
pop
ds
div
or
in
pop
test
aad
xor
or
add
xor
call
xlat
cmp
inc
sub
pop
and
lahf
dec
hlt
jecxz
pop
in
mov
int
dec
or
and
jmp
jmp
cwde
jecxz
pusha
in
add
cmp
lock
add
ja
stos
outs
xchg
stos
fisubr
mov
mov
imul
dec
mov
sti
xchg
add
in
push
(bad)
(bad)
cmp
(bad)
dec
rol
jbe
fistp
mov
xchg
(bad)
xor
stos
xchg
loop
push
call
adc
stos
inc
fcom
call
mov
es
pop
mov
mov
push
sbb
mov
arpl
or
jg
jb
push
push
inc
inc
push
push
push
daa
inc
or
lods
lods
sub
ss
inc
mov
std
or
or
add
and
mov
in
inc
add
popa
add
pop
out
loopne
das
fwait
cli
imul
cmp
inc
movs
inc
inc
test
int
sbb
js
je
aas
jecxz
adc
jmp
loopne
out
pop
sbb
sbb
mov
adc
and
lds
and
xor
ss
mov
fcom
rcl
pop
xchg
pop
xchg
icebp
call
out
ss
mov
or
int3
mov
hlt
mov
or
js
sub
aas
jnp
xor
bound
pop
jae
adc
jl
mov
mov
and
enter
or
mov
mov
inc
pop
pop
lods
mov
das
fcomp
mov
cmp
xchg
jmp
aad
cwde
lahf
lahf
mov
ds
dec
push
jg
mov
repnz
and
stos
cmps
mov
(bad)
(bad)
adc
(bad)
(bad)
push
pop
pop
gs
pop
pop
fsubr
or
out
pop
nop
xchg
xchg
pop
mov
add
retf
add
add
mov
(bad)
shl
push
push
sub
cmps
and
or
test
imul
xor
mov
dec
dec
pop
dec
(bad)
cli
xchg
loope
in
lds
mov
mov
test
xor
jae
sbb
fsub
(bad)
sbb
sbb
arpl
(bad)
pop
pop
ficomp
(bad)
adc
jae
push
or
lahf
jle
ins
scas
daa
pop
das
push
loopne
shl
push
push
push
sahf
ins
ins
lods
inc
add
div
mov
adc
jl
jg
jg
cld
(bad)
xchg
xor
xchg
jae
inc
gs
sbb
pop
pop
xor
bound
adc
call
scas
in
out
or
in
je
add
daa
jae
je
icebp
cmps
in
adc
out
pop
(bad)
fstp
cmp
mov
clc
or
aas
mov
xor
xor
mov
call
add
mov
fstp
mov
mov
mov
mov
inc
jle
ret
or
add
dec
dec
lahf
inc
cmp
bound
mov
(bad)
vmread
out
cmp
nop
sub
or
xor
(bad)
mov
(bad)
sar
or
es
pop
pop
pop
and
xchg
mov
mov
shl
fprem1
shr
imul
nop
nop
es
fild
inc
idiv
push
mov
fstp
stos
cmps
xchg
rcl
(bad)
stos
rcl
pop
and
lds
cmps
mov
add
add
jmp
sbb
xor
iret
add
add
mov
mov
push
test
test
or
xchg
xchg
sbb
inc
mov
mov
fs
hlt
xlat
sbb
sbb
sahf
xchg
dec
dec
dec
xor
data16
sbb
mov
arpl
sbb
sbb
and
pop
sbb
jne
bound
or
lds
test
in
and
jne
pop
push
jo
push
and
icebp
push
push
push
std
into
(bad)
sar
push
jecxz
jl
rcl
imul
cmp
outs
xchg
xchg
retf
inc
dec
jp
pop
pop
shl
mov
icebp
test
mov
es
jne
cmp
test
std
hlt
mov
sbb
je
inc
pop
data16
jmp
fwait
mov
mov
cmp
xor
dec
mov
xor
mov
in
jge
(bad)
call
sub
sahf
xor
mov
mov
ret
dec
dec
dec
mov
add
inc
mov
mov
je
jge
pop
jbe
call
jl
jl
push
and
pop
pop
pop
pop
push
or
xchg
rol
mov
xor
cs
sub
jecxz
xchg
mov
retf
mov
mov
fstp
xchg
adc
test
nop
loop
nop
push
jnp
mov
mov
mov
fstp
or
movs
call
mov
ja
pop
pusha
add
gs
in
push
pop
add
jl
sti
jbe
jmp
icebp
enter
push
loope
and
hlt
repz
hlt
repz
loopne
inc
xchg
xchg
xchg
sbb
(bad)
mov
mov
cmps
scas
jecxz
in
sbb
dec
ret
mov
outs
pop
rcr
pop
pop
push
sbb
out
adc
(bad)
stos
aad
pushf
idiv
fimul
or
sbb
push
push
push
inc
mov
mov
and
push
and
outs
mov
sar
jl
push
push
mov
add
xor
or
dec
imul
pop
loopne
and
adc
imul
cmp
cmp
cmp
inc
test
shl
je
test
xchg
addr16
neg
inc
fistp
mov
inc
inc
xor
mov
xor
xor
loop
cmp
xchg
(bad)
jecxz
sub
fcom
pop
pop
pop
xchg
aad
xchg
in
inc
aas
scas
leave
out
(bad)
mov
dec
mov
or
lds
shl
shr
lahf
jbe
inc
(bad)
jne
pop
mov
pop
test
out
stc
ins
sub
in
and
inc
pop
js
aaa
aaa
sar
mov
(bad)
mov
pusha
shl
push
das
into
xchg
mov
mov
and
int3
cmp
cwde
lahf
lahf
cs
out
ret
xchg
inc
inc
cmp
int3
mov
mov
leave
(bad)
adc
adc
int
pop
cdq
jae
in
mov
add
scas
sub
add
jb
mov
mov
stos
dec
sbb
test
push
push
and
aas
int3
dec
call
loop
pop
fbstp
dec
cmps
pop
sbb
sbb
dec
dec
xor
sub
sbb
in
pop
and
or
mov
ror
or
push
push
push
mov
(bad)
or
dec
lahf
ins
sub
fadd
inc
mov
fidivr
mov
xchg
(bad)
xor
xor
ins
fsubr
pop
dec
push
adc
aad
popf
in
ror
cmp
ret
in
mov
int
mov
clc
mov
xor
in
jecxz
loopne
out
neg
jg
push
mov
data16
dec
fdiv
mov
enter
inc
inc
enter
nop
sub
pop
addr16
call
out
call
(bad)
or
xor
dec
dec
dec
pop
cmp
fisttp
jo
cmp
dec
mov
xor
pusha
gs
mov
add
stc
out
sub
mov
cwde
and
sbb
aaa
dec
cld
sub
(bad)
mov
test
pop
pop
in
pop
sub
sbb
dec
push
cmp
dec
push
(bad)
adc
lods
jmp
push
lock
jmp
mov
jle
fstp
jecxz
and
lods
mov
aad
cmp
sub
ja
or
jmp
xchg
xchg
xchg
pop
mov
jb
pop
add
cs
dec
test
cmp
repz
test
out
stos
fs
sbb
dec
int3
mov
cmp
inc
adc
pop
sahf
lea
cmps
mov
loope
repz
sbb
daa
add
mov
loop
push
pop
push
and
and
data16
or
push
push
daa
push
dec
mov
add
cs
jne
sbb
mov
push
inc
push
adc
push
adc
jl
inc
das
xchg
popa
xor
xor
xor
(bad)
inc
ins
inc
sbb
pop
arpl
loope
xchg
gs
jle
adc
inc
cmp
inc
cld
mov
sbb
je
bound
mov
loop
fs
movs
inc
in
out
pop
cmp
mov
jecxz
xor
dec
(bad)
enter
(bad)
mov
fadd
inc
mov
mov
sub
push
lds
push
pushf
(bad)
mov
stos
mov
cmp
or
jbe
(bad)
or
out
mov
mov
or
dec
gs
xchg
sbb
test
not
pop
ss
pop
push
inc
xor
aaa
inc
inc
xchg
xor
(bad)
push
mov
jb
pop
and
or
jecxz
push
das
fdiv
(bad)
mov
jp
(bad)
jbe
mov
mov
nop
outs
pusha
jmp
outs
outs
mov
inc
inc
mov
and
test
(bad)
sbb
mov
cmps
imul
call
scas
out
fisttp
xchg
xchg
xchg
jl
(bad)
mov
in
mov
cmp
adc
push
lock
hlt
jg
jmp
pop
stos
loop
ret
mov
mov
retf
in
dec
xchg
sahf
mov
dec
dec
pop
pop
mov
mov
outs
mov
pop
jae
sbb
jmp
rcr
(bad)
ficom
xchg
or
or
data16
push
and
push
push
dec
dec
push
and
add
push
mov
or
and
jl
lods
dec
mov
jmp
ror
loopne
ins
and
pop
pop
lds
addr16
xchg
push
adc
dec
shl
rol
call
dec
(bad)
scas
mov
test
mov
loop
cmps
loopne
out
dec
sbb
inc
push
jbe
mov
ss
lock
mov
inc
inc
inc
test
sbb
sub
fcom
rcl
pop
xchg
out
arpl
fnstsw
pop
leave
out
(bad)
mov
mov
cmp
jbe
or
aas
and
dec
dec
aas
sahf
sbb
xor
gs
jmp
push
sub
pop
push
bound
aaa
aaa
dec
sbb
mov
mov
pop
pop
pop
pop
cwde
es
jecxz
imul
mov
sbb
sub
cwde
lahf
lahf
pusha
in
and
jmp
mov
cmp
js
fstp
test
fnstsw
(bad)
push
pop
push
(bad)
pop
pop
pop
shl
hlt
jo
ja
add
sub
popa
jmp
add
add
push
mov
mov
lods
dec
sbb
push
push
stc
and
ins
lock
pop
in
movs
xchg
xchg
call
retf
(bad)
cmp
(bad)
retf
in
xor
xor
dec
dec
dec
mov
sbb
outs
jg
sbb
arpl
jmp
ficom
push
repnz
out
or
sub
pop
push
push
and
jne
popa
mov
dec
and
xor
push
and
pop
mov
(bad)
jecxz
jl
ror
push
jecxz
add
xor
or
cld
push
and
push
pop
pop
loopne
dec
mov
adc
out
test
dec
inc
xor
cmp
mov
mov
movaps
in
jecxz
call
out
popf
jg
cmp
mov
stc
add
cmp
iret
iret
xor
mov
inc
inc
aas
outs
mov
pop
dec
sub
(bad)
not
dec
dec
dec
ror
mov
dec
xor
mov
or
inc
jbe
(bad)
dec
dec
xor
dec
dec
dec
pop
fistp
ins
imul
rol
pop
jle
sub
push
push
(bad)
dec
test
enter
push
dec
cmp
pusha
aaa
mov
mov
adc
sbb
mov
clc
fisub
stos
and
scas
mov
in
in
call
or
nop
inc
xor
pop
mov
fcmovu
(bad)
jg
cmp
dec
or
(bad)
jb
ja
dec
fsub
es
xchg
in
loop
xchg
add
jbe
pop
pop
mov
into
mov
inc
retf
test
push
push
repz
jns
aas
int3
test
neg
inc
mov
mov
ret
mov
sbb
sbb
int
mov
pusha
pop
iret
sbb
bound
arpl
and
and
pop
push
pop
inc
push
or
lds
jge
add
sbb
add
aas
mov
jg
jmp
addr16
sbb
mov
(bad)
mov
add
xchg
cld
or
into
into
inc
inc
dec
(bad)
push
pop
pop
pop
gs
push
pop
adc
cli
in
out
out
ins
push
jmp
mov
dec
std
jo
mov
imul
je
out
jmp
cwde
cdq
cdq
ss
popf
sub
out
dec
dec
push
jae
inc
inc
cmp
scas
dec
xor
xor
aas
mov
xor
mov
inc
inc
mov
rcl
pop
push
cmp
call
xchg
(bad)
mov
mov
mov
add
dec
dec
dec
mov
jp
inc
ret
or
mov
aas
jle
add
bound
out
jp
enter
inc
icebp
push
add
sub
fstp
dec
or
dec
dec
enter
test
mov
cs
pop
sub
mov
jecxz
cwde
fsubr
mov
adc
mov
fcompp
fldenv
in
sahf
lahf
lahf
jmp
nop
pop
mov
add
inc
inc
cmp
and
and
(bad)
add
mov
cmps
aad
out
ror
add
jmp
sbb
or
(bad)
jmp
lea
test
cmp
push
push
push
in
or
or
cdq
cmp
xchg
xchg
sub
stos
pop
mov
add
in
sahf
mov
xor
mov
mov
dec
les
hlt
pusha
inc
imul
sbb
out
in
push
pop
bound
and
push
jae
push
or
jge
push
push
push
daa
test
pop
or
jb
jne
dec
or
lods
sub
ins
push
push
push
enter
mov
ret
ret
daa
jnp
xor
hlt
jmp
outs
xor
mov
aam
sbb
out
out
aad
mov
inc
popa
dec
add
int
inc
leave
(bad)
je
add
mov
jmp
sahf
cdq
cdq
in
rep
loopne
out
out
repz
inc
int3
mov
imul
mov
iret
jbe
dec
mov
inc
inc
inc
inc
aaa
adc
jmp
adc
out
call
jp
mov
loop
pop
pop
jnp
dec
xor
jecxz
bnd
cld
ja
mov
mov
xor
dec
gs
bound
cmc
stc
rol
sub
sub
jle
aaa
aaa
dec
add
dec
sbb
cmp
mov
mov
outs
cmp
pop
pop
fcom
cwde
test
sbb
sar
mov
lods
stos
or
(bad)
mov
pusha
pusha
pusha
push
lahf
pop
cdq
cwde
retf
ficomp
nop
inc
mov
mov
(bad)
(bad)
rcl
fsubr
daa
rcr
movs
jbe
ja
jo
sti
and
shr
pop
nop
xchg
xchg
add
add
add
jle
sbb
mov
and
mov
mov
xchg
xchg
cmp
or
mov
mov
(bad)
repnz
in
cwde
mov
mov
adc
mov
or
shl
mov
arpl
sbb
sbb
inc
sub
and
push
add
or
push
push
(bad)
cld
inc
dec
gs
or
add
push
push
push
push
es
and
div
mov
div
mov
mov
hlt
sti
ret
add
int
inc
fs
rcr
pop
pop
arpl
out
test
fwait
cmovl
cmp
retf
cmc
hlt
mov
add
cmps
jne
je
jb
adc
loop
sub
out
out
xor
inc
inc
push
cdq
mov
ss
push
cmp
xor
iret
iret
mov
inc
in
xor
mov
inc
add
push
rol
pushf
jmp
mov
sbb
iret
data16
dec
loope
push
pop
dec
dec
call
enter
and
xor
dec
gs
in
fwait
adc
mov
cmc
leave
bound
sub
push
push
fst
enter
aaa
inc
cmp
icebp
mov
mov
(bad)
(bad)
pop
push
inc
leave
test
xchg
jl
jecxz
lahf
into
cmp
ret
arpl
test
fldenv
in
pushf
lahf
nop
in
xchg
sbb
pusha
out
cmp
inc
cmp
leave
pusha
adc
jb
lods
mov
(bad)
(bad)
mov
cmps
aad
clc
scas
ja
fadd
xchg
cmp
xchg
xchg
jl
out
adc
jp
mov
fnstenv
mov
test
or
repz
call
jmp
mov
(bad)
push
dec
(bad)
in
sahf
(bad)
ss
dec
dec
dec
enter
sub
jmp
ins
daa
in
bound
and
push
pop
push
and
int
stc
jb
div
mul
sub
ins
test
dec
mov
pop
sahf
fs
popf
mov
mov
js
popa
add
mov
add
xor
add
sbb
pop
gs
xchg
mov
adc
ins
push
popf
mov
dec
jns
cmc
cmp
mov
mov
dec
fild
push
pop
jge
cdq
out
jecxz
cwde
cdq
cdq
xchg
popf
mov
xchg
cmp
out
push
pop
or
fiadd
ins
int3
iret
iret
pusha
mov
inc
in
push
out
sub
mov
call
cmp
and
mov
mov
jae
mov
mov
movs
les
jo
mov
in
mov
adc
bound
mov
xor
sub
sub
rcl
cmp
leave
fsub
(bad)
shl
pop
hlt
mov
sti
hlt
sbb
dec
hlt
(bad)
mov
xor
cmps
fwait
push
fcompp
fldenv
cmp
nop
nop
aas
xchg
imul
xchg
jmp
jns
mov
cmps
cmps
xchg
shl
ja
test
rcl
bound
mov
or
stc
cmp
push
(bad)
mov
mov
and
movs
data16
(bad)
int3
add
add
cmp
inc
les
inc
mov
pop
mov
outs
push
repz
dec
dec
jo
xchg
mov
jecxz
xor
out
push
xchg
into
ins
mov
ficom
rcl
cli
aaa
push
cmc
pop
idiv
mov
test
add
xchg
je
or
pop
mov
sub
rol
(bad)
(bad)
cld
mov
hlt
cmp
dec
scas
(bad)
into
inc
mov
imul
loopne
fnstsw
out
sub
pushf
(bad)
xor
dec
adc
shl
mov
data16
jecxz
ins
adc
ins
adc
mov
mov
retf
xchg
ret
aam
retf
imul
aas
jl
and
fist
sub
rcr
mov
aam
mov
shl
pop
imul
dec
call
and
inc
es
mov
xlat
xchg
test
test
not
lahf
pop
sahf
ror
out
inc
(bad)
les
dec
cmp
shl
scas
sub
pop
adc
adc
cmp
stc
add
lods
out
inc
movs
(bad)
push
cmp
jbe
mov
push
scas
xchg
imul
js
mov
sub
add
pop
call
or
stos
dec
or
jo
sbb
in
bound
aaa
jl
repz
test
ror
sbb
push
push
sub
inc
sti
aam
int3
dec
push
xor
ds
adc
les
push
adc
pop
xor
jecxz
jecxz
jecxz
(bad)
sahf
ret
es
into
lods
ret
pop
aas
leave
aaa
push
lock
aas
(bad)
jge
sub
mov
mov
dec
inc
loopne
push
push
push
movs
inc
inc
inc
stos
(bad)
mov
imul
mov
prefetch
lock
mov
out
gs
out
fisubr
pushf
inc
mov
dec
retf
inc
retf
mov
lea
dec
in
pop
or
(bad)
fadd
adc
push
pop
mov
cmp
les
out
mov
cmp
mov
xor
das
sub
sbb
pop
pop
pushf
sar
sub
mov
inc
dec
sar
cmp
mov
adc
stos
xor
cmps
aas
pop
aaa
pop
mov
xlat
gs
bound
fisttp
or
pop
xchg
and
aaa
inc
sub
popf
mov
imul
pop
(bad)
mov
std
sub
cmp
hlt
jne
jecxz
(bad)
cmp
cmp
cmp
jne
rcr
sbb
jo
dec
jmp
jmp
in
(bad)
push
scas
xchg
imul
js
mov
or
push
movs
ins
and
movs
or
mov
cmps
cmps
cmps
rcl
arpl
xchg
in
dec
outs
xchg
xchg
add
push
(bad)
(bad)
call
pop
retf
into
test
push
push
cld
and
pop
pop
xchg
pop
in
mov
cmp
mov
xchg
or
inc
aaa
aas
mov
mov
ret
sbb
xchg
call
lock
push
mov
fist
ss
or
fs
inc
pushf
dec
push
push
rcr
jne
ret
call
mov
inc
push
enter
(bad)
pushf
jl
fimul
dec
add
xchg
test
hlt
jae
push
push
iret
fimul
mov
enter
xchg
in
mov
scas
imul
adc
(bad)
test
mov
add
add
add
(bad)
in
and
outs
xchg
pop
adc
cli
mov
imul
adc
pop
inc
sub
cmp
loope
(bad)
mov
ret
cmp
push
xchg
call
dec
int
mov
push
mov
jbe
mov
aas
repz
mov
mov
cmps
pop
add
cmp
div
fwait
xor
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
ss
popf
sub
mov
movs
cmp
aaa
mov
and
xlat
fcomip
hlt
jo
jecxz
inc
lahf
rol
mov
in
mov
mov
(bad)
movs
inc
fisub
lods
arpl
jmp
in
std
popa
jo
and
outs
sbb
inc
jg
sub
and
retf
fst
stos
or
ret
pop
dec
cmps
sub
punpcklbw
mov
in
out
mov
daa
cmp
mov
inc
dec
dec
dec
(bad)
sahf
inc
xchg
aam
and
jno
jns
pop
in
shl
xchg
xor
xchg
int3
outs
dec
cmps
or
sbb
sbb
sbb
pusha
xor
xor
dec
cmp
push
sbb
and
mov
or
(bad)
mov
or
or
inc
cmps
sub
imul
dec
add
loopne
fdivr
mov
dec
sar
mov
or
push
pop
jle
sahf
imul
xchg
or
imul
sub
sub
dec
or
cli
add
inc
sub
adc
fwait
or
mov
in
cmp
in
cdq
dec
xchg
hlt
out
or
ins
scas
inc
retf
retf
lods
xor
xor
repz
iret
inc
test
leave
lods
inc
leave
mov
cmps
fstp
sub
push
rol
dec
aam
call
jmp
fisttp
leave
dec
dec
les
repz
xor
jo
dec
shl
jno
lock
icebp
xor
add
not
(bad)
push
push
mov
rol
sti
cdq
pop
cdq
cmp
sti
mov
imul
dec
sub
stos
nop
fsub
adc
jns
add
jnp
lods
fnstenv
retf
xor
pusha
jmp
addr16
xchg
imul
js
in
test
jae
mov
dec
aad
jg
sub
dec
pop
mov
add
xchg
ds
add
add
cmp
jbe
mov
inc
(bad)
or
in
push
fsubr
aas
int3
dec
push
xchg
push
test
xchg
ds
cmp
int3
sub
int3
jle
sbb
cdq
in
dec
out
xor
mov
ja
or
push
push
ins
mov
imul
ror
or
or
sub
inc
xor
mov
xlat
dec
popa
popa
popa
popa
cs
and
push
inc
dec
mov
outs
mov
cmp
pop
inc
into
into
repz
ror
into
mov
xchg
les
ins
push
xchg
dec
mov
sub
dec
inc
inc
rol
jge
loope
fwait
mov
mov
enter
in
and
cmp
and
retf
sbb
dec
sub
mov
mov
mov
(bad)
idiv
rcr
pop
call
pop
pop
pop
xchg
mov
(bad)
push
outs
dec
mov
jecxz
push
js
xlat
call
mov
mov
mov
ret
fwait
mov
call
jl
jl
mov
pop
(bad)
dec
cmc
mov
aaa
mov
mov
and
mov
mov
sbb
mov
cmp
mov
nop
(bad)
sub
push
cmp
adc
outs
out
sbb
call
mov
add
or
and
xor
pop
popf
(bad)
push
pop
sub
movs
jb
mov
outs
in
push
push
pop
(bad)
out
push
jp
icebp
dec
dec
rol
dec
pop
adc
shl
xor
fs
lds
dec
int3
mov
imul
pop
aas
pop
ds
fs
mov
test
mov
in
cmp
mov
gs
cdq
push
mov
mov
test
retf
mov
in
test
push
retf
mov
dec
cmp
inc
adc
xchg
in
jns
in
lods
mov
jg
jg
mov
into
into
mov
xchg
adc
fst
in
out
out
xchg
in
loope
mov
loope
push
mov
fs
lods
inc
mov
fild
movs
jb
xor
xchg
dec
cmp
xchg
or
push
push
mov
mov
mov
into
or
lds
adc
push
aas
ret
cli
fidiv
jle
aad
sub
rcl
scas
imul
and
cmps
jno
push
dec
ficomp
jmp
std
xchg
imul
mov
div
mul
movs
ja
mov
fwait
mov
sub
sbb
mov
ror
xchg
repnz
inc
aaa
popf
inc
and
int
movs
cmp
imul
stos
sbb
dec
mov
sbb
pop
cmp
(bad)
mov
pusha
sub
push
imul
cmp
ja
jp
outs
imul
mov
xor
cmp
and
and
sub
rcr
add
fsub
mov
loop
loopne
outs
outs
cs
mov
outs
out
add
ret
(bad)
out
pop
(bad)
fimul
in
(bad)
fisubr
frstor
or
inc
dec
push
test
xchg
ds
les
inc
jl
mov
sbb
lahf
leave
into
mov
cmps
out
loopne
mov
jecxz
data16
loopne
das
out
adc
loop
out
fstp
fisubr
sbb
(bad)
div
xor
aas
hlt
pop
outs
lods
mov
or
fdiv
jmp
xchg
imul
dec
ret
inc
inc
inc
push
ret
add
jle
jg
les
or
out
into
into
xchg
loop
das
mov
adc
int
or
pop
clc
leave
lds
sbb
inc
loope
sar
(bad)
dec
movs
outs
adc
rcr
fimul
ins
sbb
mov
mov
je
(bad)
retf
repnz
or
outs
leave
mov
jne
mov
and
rcr
rcl
arpl
xchg
ficom
push
pop
pop
mov
dec
dec
dec
lds
mov
js
scas
xor
cmps
js
aas
loope
xchg
jbe
cdq
call
or
mov
pop
shl
adc
mov
ds
mov
into
cli
cmp
push
cmc
sbb
xchg
fidivr
fisub
fisub
xor
es
shl
es
pusha
adc
loope
pusha
fs
outs
test
lods
outs
outs
outs
mov
mov
jecxz
loope
fnsave
lds
ficomp
sub
scas
dec
cwde
cld
lea
or
outs
ins
outs
outs
cwde
cmp
xor
cmp
test
dec
test
scas
sub
add
or
into
or
imul
cmp
dec
les
inc
outs
adc
mov
lods
xor
jmp
sub
ret
jecxz
or
out
out
fcomp
ficomp
aaa
stos
xor
inc
daa
stc
movs
lahf
gs
dec
xchg
inc
fdiv
mov
imul
dec
inc
inc
dec
or
inc
mov
mov
sar
jnp
or
or
or
pop
loop
loopne
gs
sub
sub
aad
(bad)
(bad)
arpl
ret
inc
stos
add
dec
add
mov
xor
scas
out
fiadd
ins
push
dec
cmps
or
pushf
jns
or
retf
mov
ret
repnz
or
inc
mov
mov
adc
adc
xchg
ficomp
test
ror
les
mov
repnz
enter
aaa
jge
aas
jne
ja
gs
adc
retf
test
sbb
cmp
jmp
dec
xlat
(bad)
leave
mov
(bad)
xchg
xor
(bad)
jge
outs
push
pop
pop
(bad)
pop
sub
xor
jecxz
inc
pop
fiadd
cmp
cmp
fdivr
lods
fnstenv
retf
push
mov
and
mov
xchg
in
test
mov
sub
xchg
ja
mov
pop
sbb
call
dec
mov
mov
lea
cwde
lods
data16
sti
(bad)
sti
dec
cmp
dec
dec
dec
dec
mov
movs
test
test
xchg
cli
into
xor
popf
test
jnp
dec
pop
mov
call
fnstcw
mov
mov
adc
bound
in
out
adc
xchg
fcomp
(bad)
(bad)
aad
shr
imul
jmp
daa
push
stc
daa
inc
das
data16
(bad)
fnstsw
and
dec
and
inc
retf
retf
retf
or
jnp
mul
pusha
jl
jg
xchg
dec
xor
xor
ss
xchg
add
ret
sbb
push
mov
fwait
push
sbb
and
les
cmp
leave
cmp
ja
arpl
jbe
cdq
cdq
adc
xchg
xchg
mov
ins
in
jge
out
out
dec
out
retf
fs
ss
xchg
xchg
inc
das
ins
repz
mov
pushf
out
jmp
pop
scas
aaa
pop
scas
cmp
out
push
ret
aaa
mov
aas
stos
icebp
scas
mov
scas
loop
mov
or
or
sti
js
add
xchg
rcl
dec
dec
gs
xchg
push
adc
jle
sbb
(bad)
xlat
stos
icebp
pop
stos
sub
xchg
xor
and
xor
(bad)
pop
dec
(bad)
pop
pop
pop
inc
pop
in
inc
xchg
imul
bound
in
fnstenv
retf
ins
mov
jecxz
retf
imul
outs
pusha
jecxz
mov
std
inc
adc
test
and
sub
sub
xor
lock
sub
or
and
push
jle
ins
in
xor
cld
jl
dec
in
cmp
call
push
sub
test
add
xchg
ret
push
pop
inc
ret
dec
cmp
push
out
outs
sbb
outs
mov
jle
pop
cmps
ret
mov
sub
dec
ret
xchg
loopne
das
out
in
in
sub
adc
pop
xor
aaa
leave
fcomp
scas
(bad)
call
or
pop
ins
movs
fldcw
adc
ror
inc
mov
jle
mov
into
into
(bad)
into
inc
sub
or
bound
(bad)
(bad)
sub
or
dec
ret
movs
mov
pop
fs
cmc
(bad)
scas
arpl
movs
add
and
mov
jle
xchg
push
fnstenv
mov
sysret
xor
sbb
fidiv
mov
into
mov
rol
jno
aas
xor
dec
push
pop
sub
bound
adc
xlat
mov
out
xchg
cld
stos
adc
xchg
inc
mov
mov
xchg
mov
stos
les
les
ins
sbb
and
(bad)
cmp
(bad)
xchg
cmp
aaa
pusha
(bad)
pop
aaa
popa
cld
pop
lods
mov
lods
sti
gs
jecxz
sbb
lahf
cmc
sbb
cmp
ss
cmps
iret
fsub
xchg
outs
dec
xchg
or
cdq
scas
mov
jns
test
mov
and
mov
clc
dec
add
jno
dec
ds
jo
ds
jo
dec
ror
cmps
or
mov
popa
ss
das
cmps
(bad)
pop
mov
inc
test
cmps
lock
push
and
dec
push
or
mov
inc
pop
mov
inc
push
shr
adc
ret
jge
inc
jge
mov
mov
test
mov
adc
jmp
into
mov
stc
scas
cmp
stc
jecxz
pop
mov
hlt
push
test
dec
in
test
jmp
push
and
in
stos
mov
fild
mov
sbb
bswap
dec
ss
mov
xchg
mov
out
out
cdq
or
mov
xchg
inc
push
es
push
fwait
in
test
dec
in
test
movs
xchg
imul
sbb
mov
jl
and
retf
test
xor
ret
ins
fidiv
rol
imul
and
add
pop
mov
xchg
dec
pop
cmps
dec
dec
dec
jo
bnd
or
repz
dec
dec
mov
mov
mov
push
jne
jl
call
call
inc
sbb
or
mov
sbb
mov
xchg
xchg
sbb
rcr
lahf
std
and
ins
sbb
bound
and
push
mov
outs
adc
mov
mov
mov
cmp
int3
sbb
test
sub
pop
xchg
xchg
xchg
sahf
(bad)
cmps
ja
jbe
gs
mov
cmps
mov
test
jmp
add
add
int
es
dec
dec
dec
xchg
inc
ja
pop
sub
push
push
repz
sar
popf
test
xchg
popa
mov
cmps
std
dec
sbb
repz
sbb
sbb
ja
mov
mov
loope
cmp
cmp
or
out
setne
(bad)
add
add
sub
out
jae
push
push
push
scas
outs
jne
push
inc
push
outs
adc
jmp
int3
push
mov
call
jl
sbb
jle
mov
or
cmp
xchg
inc
aaa
pop
sub
lds
sbb
xor
jae
dec
mov
push
cdq
out
sbb
xor
cmp
mov
mov
das
pop
adc
cmp
call
mov
push
outs
mov
sub
dec
and
call
xchg
xchg
addr16
pop
lds
jbe
or
or
sbb
imul
pop
pop
jmp
mov
jns
push
or
fmul
adc
adc
adc
ss
cmp
out
mov
pop
pop
cmp
jge
jecxz
pop
imul
test
(bad)
mov
lahf
lahf
mov
mov
mov
seto
dec
jnp
js
fdivrp
sti
mov
xor
jmp
sub
cwde
and
mov
outs
outs
outs
outs
adc
inc
std
(bad)
(bad)
call
sbb
mov
sub
je
lea
inc
add
adc
xchg
sar
cmp
jg
sub
dec
int3
mov
inc
sahf
fld
repnz
sbb
jnp
jnp
das
das
das
arpl
sub
sbb
and
fcomp
and
sbb
in
and
push
jne
aam
jne
xor
ror
cmp
push
push
mov
mov
repz
jl
sbb
repnz
add
push
cmove
jmp
add
in
out
gs
ss
sub
mov
es
fstp
mov
or
mov
bound
fstp
add
test
out
shl
shl
scas
adc
inc
pop
cmps
xor
lea
iret
iret
idiv
int3
inc
inc
inc
mov
mov
sub
or
mov
stos
ja
call
out
mov
mov
push
popa
dec
popa
je
je
cld
and
adc
adc
or
jne
mov
jle
pop
xchg
and
std
popf
js
jl
mul
(bad)
sub
ds
enter
add
cmp
cmp
into
jle
jle
jp
pusha
jle
rol
repnz
icebp
push
in
in
dec
in
fwait
inc
(bad)
lahf
mov
lahf
xchg
jmp
addr16
enter
mov
fstp
frstor
(bad)
sub
jo
cmp
lock
in
cmps
cmps
cmps
xor
ja
ja
or
sbb
jmp
add
add
adc
cmp
mov
mov
xchg
mov
push
push
jb
outs
repz
mov
xchg
xchg
sub
dec
mov
mov
sub
loop
in
in
sahf
jb
in
test
dec
sbb
jecxz
in
xchg
sbb
sbb
cmp
and
add
out
dec
xchg
or
not
stos
push
fcom
push
mov
push
push
jbe
leave
hlt
lods
mov
call
xchg
fiadd
jne
or
lahf
mov
add
add
sub
sub
cmp
cmp
getsec
daa
aaa
push
aaa
push
sbb
sbb
cmp
sbb
retf
adc
inc
shl
inc
hlt
in
add
inc
pusha
mov
mov
sbb
sbb
mov
arpl
jb
retf
repz
xor
ret
cmp
xchg
xlat
push
aas
sbb
push
ror
rol
jns
jo
mov
jp
xlat
sub
xlat
aaa
jo
sbb
adc
sahf
pop
adc
mov
mov
inc
jl
es
xchg
repnz
dec
hlt
in
mov
dec
cmp
adc
(bad)
sti
pop
sub
mov
cld
cmp
or
fstp
dec
xor
es
jmp
pusha
pusha
cmp
lods
in
and
dec
in
pushf
mov
mov
mov
or
stos
pushf
push
jge
pop
test
sub
mov
mov
cld
xlat
or
push
or
ins
mov
cdq
jl
fisttp
sub
lods
ins
cmp
test
or
ja
or
xor
imul
xchg
arpl
mov
or
rol
out
outs
outs
ja
push
imul
cmp
jge
loop
out
xchg
and
rcl
xchg
into
xor
scas
mul
das
aas
das
push
jno
jne
jne
jo
ror
xor
(bad)
lahf
dec
xchg
inc
push
test
dec
dec
dec
dec
(bad)
or
mov
hlt
cmp
mov
inc
mov
inc
mov
jmp
and
stos
push
xor
dec
adc
mov
leave
add
int
add
imul
fldenv
arpl
in
push
pop
loopne
cdq
adc
retf
mov
jl
xor
es
imul
and
cmc
mov
rcr
test
jb
pop
call
pop
shl
dec
mov
dec
stos
mov
repz
ja
mov
mov
dec
mov
call
jl
jle
push
mov
xlat
mov
mov
(bad)
dec
mov
jge
loopne
mov
sub
or
pop
rcr
mov
xor
es
arpl
sti
cmp
mov
aaa
dec
outs
jg
mov
cmp
retf
fstp
in
or
sub
shl
pop
rcl
adc
cwde
popa
mov
mov
pop
jbe
and
mov
pop
movs
mov
in
jne
test
in
in
push
or
imul
fs
cmp
cmps
inc
cmp
cmps
dec
adc
sbb
sbb
fcomp
push
out
mov
cmp
mov
repz
aas
loop
out
cmp
ins
mov
add
push
fwait
sub
stos
sbb
lock
sub
pop
push
mov
jne
shl
mov
scas
lods
lods
lods
inc
aas
test
mov
push
(bad)
xchg
pop
addr16
(bad)
jg
jg
xchg
aad
xchg
dec
es
mov
xchg
fldenv
jmp
in
call
mov
inc
sub
inc
inc
inc
retf
into
adc
dec
dec
into
xchg
mov
pop
clc
call
jb
inc
inc
js
sub
xchg
retf
fisub
or
iret
div
aam
xor
jnp
psrlw
rcl
adc
xor
dec
push
pop
pushf
push
pop
pushf
test
aas
pop
xchg
dec
ror
ins
in
push
ins
mov
hlt
das
cs
pop
cs
mov
mov
gs
ret
pop
pop
out
xchg
jb
or
pop
jl
(bad)
or
test
sti
add
mov
mov
imul
dec
repnz
mov
dec
je
and
cmp
sbb
cmp
sti
arpl
lods
(bad)
jg
sub
sub
pusha
pusha
dec
cmps
ds
dec
or
mov
jnp
mov
jg
rcr
sub
test
cmp
mov
mov
mov
mov
fcomi
and
fist
jb
dec
dec
dec
dec
je
push
je
mov
in
shr
cli
enter
cmp
mov
in
dec
dec
xchg
or
in
fdivr
outs
pop
in
pop
cmps
outs
jle
mov
(bad)
mov
mov
push
jmp
add
cmp
cmp
cmp
cmp
pusha
pusha
stc
daa
inc
sti
(bad)
add
call
movs
shl
cmc
arpl
or
movs
mov
test
movs
jne
or
jle
or
hlt
sub
loop
fisub
xchg
out
sub
aam
mov
inc
sub
mov
test
mov
mov
dec
cmp
in
cdq
xor
in
cli
mov
cli
inc
xor
loop
inc
xor
fwait
push
jmp
cmp
jne
dec
ins
ficomp
fbstp
sahf
out
into
jp
sbb
pop
mov
mov
rcr
mov
xor
xchg
sub
sti
test
dec
das
inc
jne
out
mov
inc
jp
mov
es
mov
or
and
(bad)
mov
xchg
leave
fcom
stc
cmp
xor
dec
jp
jge
jle
cmp
fnstsw
sbb
test
fsub
fnstenv
retf
sti
pop
pushf
outs
fbld
lods
in
cmp
cmp
gs
mov
jmp
call
jnp
mov
and
test
and
pop
push
int
push
imul
cwde
stos
sub
(bad)
out
scas
scas
nop
sbb
sbb
push
jae
shr
push
push
cli
enter
add
and
shld
jl
(bad)
inc
nop
in
nop
imul
mov
enter
jecxz
adc
stos
repnz
frstor
mul
stos
stos
pop
ss
invlpg
add
repz
sub
sub
jl
lods
mov
mov
push
push
je
imul
(bad)
cdq
inc
inc
inc
sahf
fwait
pop
ins
push
add
inc
cld
add
mov
pop
adc
push
and
call
add
inc
out
out
out
sbb
sbb
add
retf
add
inc
mov
pop
call
data16
push
adc
ss
gs
mov
cmp
and
(bad)
ficom
sbb
aas
mov
iret
inc
inc
fs
(bad)
pop
xchg
retf
test
push
or
(bad)
cld
dec
cs
sbb
leave
aaa
inc
dec
aas
sbb
ins
lods
xchg
pop
inc
or
cs
in
in
ins
gs
jl
jp
pop
fucomi
mov
mov
pop
jge
push
das
xlat
mov
aam
adc
sub
or
inc
aaa
mov
in
jle
inc
shl
(bad)
pop
add
and
stc
fs
mov
jne
cli
ja
movs
ret
movs
fs
add
in
out
and
mov
mov
fisubr
jg
pop
and
rcl
and
cmps
cmps
rcr
pusha
mov
mov
dec
in
xchg
jns
pop
dec
mov
movs
dec
cmp
daa
pop
inc
cmps
ret
mov
out
data16
push
data16
cmp
sub
loop
dec
dec
int3
mov
fld
nop
push
adc
xor
mov
(bad)
xchg
in
xchg
sbb
cmp
pop
push
fld
stos
inc
jg
ss
out
cld
and
movs
cld
std
sti
and
div
jne
pop
iret
sub
lods
lods
xchg
into
aas
mov
jl
adc
jle
add
mov
xor
dec
and
pop
adc
adc
sub
pushf
dec
mov
mov
je
add
add
movs
in
cdq
xor
mov
aaa
lds
shl
inc
loopne
cli
inc
xor
loop
xor
lahf
inc
es
pop
bound
inc
xor
xor
enter
cld
loope
jnp
cmps
xlat
mov
push
arpl
jge
dec
dec
mov
mov
stos
dec
dec
jno
jb
dec
loop
ins
mov
jo
mul
aas
fbstp
adc
jbe
call
ins
dec
mov
pop
movs
neg
rcr
shl
cmp
cmp
(bad)
test
(bad)
arpl
xchg
pop
add
xchg
pop
or
(bad)
dec
xor
dec
cs
arpl
pusha
pusha
jmp
inc
jecxz
jae
sbb
xchg
nop
nop
inc
loope
inc
push
movs
push
inc
frstor
fst
hlt
push
jg
lds
test
dec
xor
xchg
lods
xchg
sbb
imul
cmp
adc
test
push
dec
dec
dec
mov
mov
test
push
push
repz
push
push
xchg
xor
cmps
xor
mov
stos
adc
lods
adc
nop
in
nop
neg
jmp
cld
adc
adc
mov
imul
div
idiv
(bad)
test
mov
jno
jne
or
inc
fisubr
dec
(bad)
fld
inc
jne
xchg
mov
adc
xor
mov
xchg
ja
ret
ret
and
out
call
mov
inc
cmps
retf
or
pop
lahf
imul
call
arpl
sub
test
xbegin
xchg
bound
and
inc
xchg
adc
in
sub
rol
hlt
xor
fistp
sahf
fisttp
cmp
loope
adc
xchg
dec
call
mov
shl
jmp
mov
inc
ja
mov
call
mov
dec
and
(bad)
mov
les
and
fmul
cld
jl
mov
cmp
out
repz
dec
rol
hlt
sbb
cmp
xor
fldcw
nop
mov
nop
nop
adc
nop
mov
call
popaw
mov
ret
arpl
pusha
test
aad
(bad)
stos
mov
rcr
mov
cmc
mov
sahf
cwde
sub
add
mov
or
mov
sub
clc
(bad)
in
push
mov
cs
out
mov
les
inc
xchg
add
sbb
in
sahf
in
ret
mov
dec
sbb
mov
and
xchg
not
mov
mov
shl
and
ss
repnz
dec
icebp
dec
add
add
mov
mov
fdiv
ss
mov
mov
add
mov
and
(bad)
std
pop
popf
std
cmp
movs
call
out
cmps
int
or
(bad)
leave
dec
or
xor
retf
into
xor
mov
bound
in
pop
adc
fwait
idiv
retf
mov
pop
jne
retf
mov
xor
(bad)
icebp
xor
mov
stc
mov
xor
(bad)
pushf
push
pop
test
pop
dec
mov
add
rol
out
les
test
push
movs
test
mov
pushf
cdq
pop
ins
dec
test
je
cmp
pop
rol
and
sti
mov
dec
sub
stc
mov
mov
xor
push
jae
loop
and
sub
xchg
push
xor
sar
jmp
in
addr16
jb
lahf
lahf
jmp
xchg
mov
and
arpl
mov
push
sub
loopne
pop
mov
and
sub
rcr
mov
test
push
bound
push
(bad)
(bad)
fmul
dec
dec
fisttp
test
jns
xchg
call
loopne
arpl
dec
int3
scas
mov
xchg
sbb
or
xor
dec
mov
cmps
jmp
ret
pop
push
out
lds
xchg
(bad)
jecxz
(bad)
fisubr
aam
mov
jne
dec
inc
mov
loope
daa
mov
push
or
popa
cmps
es
lods
cs
test
mov
inc
enter
into
xchg
inc
bound
lahf
cmp
mov
(bad)
xchg
out
dec
popf
shl
int3
imul
gs
div
lds
int
popf
aad
add
retf
add
or
jmp
add
outs
mov
lea
xchg
push
adc
pop
cmp
mov
(bad)
rcl
retf
ret
and
fdiv
icebp
mov
loope
aaa
xchg
mov
xor
push
sbb
sahf
push
ja
push
pop
retf
adc
mov
cmp
mov
mov
or
(bad)
shl
jecxz
stc
mov
shl
xchg
xchg
out
jg
pop
xchg
aad
lock
xchg
fmulp
mov
mov
cmp
push
out
mov
pop
and
lahf
hlt
sbb
sub
mov
movs
into
daa
push
push
cmps
sub
ins
pusha
pusha
mov
inc
nop
xchg
nop
nop
bound
outs
mov
xor
(bad)
and
and
ret
aas
mov
fstp
cld
xchg
or
cld
or
dec
js
js
stc
fdivr
dec
cmps
inc
(bad)
dec
outs
pop
stos
test
aam
or
js
aad
pop
mov
sub
cmp
mov
mov
nop
not
sbb
mov
dec
mov
sti
or
sbb
and
(bad)
out
out
and
and
fdivrp
fdivp
imul
jge
daa
stc
mov
inc
add
sahf
dec
push
call
in
cs
mov
mov
inc
enter
loope
xchg
or
addr16
dec
or
hlt
cmp
cmp
mov
inc
mov
imul
stos
sbb
in
cmp
(bad)
mov
leave
add
leave
(bad)
imul
ja
lods
jge
cdq
jmp
xchg
mov
mov
out
fcom
push
jmp
xor
xor
iret
inc
sbb
inc
dec
inc
inc
inc
leave
mov
jmp
push
rcr
pushf
repnz
aam
call
cmovb
push
out
jne
mov
cs
or
pop
mov
mov
sar
sar
in
call
sub
sub
(bad)
mov
mov
(bad)
mov
jns
cmps
nop
arpl
dec
mov
adc
add
lock
xor
movs
out
daa
scas
imul
hlt
das
xchg
and
push
in
popa
out
addr16
add
ficomp
sub
loop
cs
(bad)
sub
xor
fst
lods
pusha
mov
stos
bound
and
scas
and
fist
push
dec
dec
dec
inc
cli
mov
ins
movs
push
push
or
(bad)
jecxz
(bad)
imul
xor
mov
mov
les
or
pop
adc
mov
mov
loopne
out
pop
loop
sub
add
xor
sbb
mov
daa
jmp
dec
call
shl
ss
mov
fiadd
or
lea
xchg
jg
sbb
cmc
add
retf
and
loopne
xchg
sub
adc
jmp
add
stos
lea
sbb
add
add
test
xchg
sbb
add
cmps
jle
fidivr
fisubr
(bad)
cli
mov
out
bound
xor
fdiv
inc
sub
aas
push
mov
xchg
mov
mov
adc
aam
pop
adc
inc
std
or
mov
mov
xlat
xor
(bad)
in
add
dec
cld
repz
mov
sbb
pop
std
cld
jl
jl
mov
cmp
or
ds
mov
aas
adc
icebp
mov
js
pusha
push
jp
push
inc
stos
jecxz
jecxz
popf
sbb
sbb
fs
cmc
(bad)
sbb
sbb
fld
xchg
push
daa
ss
inc
pusha
inc
popa
jo
add
pop
outs
outs
outs
outs
loop
pushf
mov
fcomp
or
sub
sbb
jns
dec
fldenv
movs
cmps
cmps
ja
add
mov
outs
pushf
lods
mov
xor
stos
je
je
inc
jle
push
sbb
(bad)
loope
stos
popa
cmps
push
call
or
out
mov
jo
push
les
inc
je
cmp
sbb
and
imul
mov
shl
mov
das
sub
sub
sub
sub
adc
adc
mov
mov
sahf
div
out
es
lods
mov
lods
mov
or
(bad)
fisttp
cmp
push
jo
adc
push
mov
loopne
add
cmp
pop
jg
into
fisub
mov
into
into
arpl
and
out
out
out
(bad)
mov
aad
xchg
cmp
lds
scas
dec
arpl
mov
out
xchg
push
call
mov
loope
inc
das
xchg
or
es
or
sub
jge
pop
mov
adc
das
sub
xlat
pushf
pop
out
ret
inc
dec
dec
dec
dec
adc
in
jb
jge
aas
aas
aas
cmps
js
js
mov
mov
mov
pop
(bad)
pop
div
jg
dec
mov
(bad)
(bad)
mov
enter
cdq
shl
lods
clc
gs
hlt
hlt
hlt
outs
outs
outs
outs
outs
outs
outs
outs
rcl
rcl
dec
xchg
pop
cmp
mov
sbb
sub
mov
xchg
sahf
in
in
cwde
or
xor
jle
fcomp
test
cmp
sbb
push
mov
pop
push
add
jg
in
cdq
or
in
je
fucomi
or
cld
pushf
aas
inc
jbe
imul
in
lea
dec
sub
pop
dec
jg
mov
das
dec
arpl
inc
mov
rcr
rcl
jg
jno
jne
jecxz
das
das
das
das
das
das
sub
sub
mov
cmps
out
mov
(bad)
jge
shl
jg
shl
and
mov
sub
iret
push
sahf
push
and
stos
mov
mov
jl
jl
cmp
fdivr
into
into
cmp
inc
sub
sub
pop
pop
sbb
xor
adc
and
or
or
dec
and
push
dec
mov
or
xchg
add
scas
(bad)
xchg
xchg
xchg
rcl
fwait
stos
mov
mov
sub
sbb
cld
cld
cld
cld
cld
cld
cld
jo
jo
jmp
jmp
pop
xchg
test
push
push
pushf
inc
xor
xchg
mov
cmp
xchg
movs
cmp
xchg
mov
clc
xor
nop
lods
inc
ins
inc
inc
sbb
adc
mov
fs
or
repnz
pop
xchg
bnd
aas
cmp
inc
mov
iret
leave
mov
mov
push
mov
add
int
pop
mov
mov
sbb
xor
int
mov
imul
lahf
cwde
or
pushf
mov
push
sub
jbe
cmp
adc
dec
cs
push
jae
jl
xchg
fsubr
dec
jle
cmp
and
daa
jl
dec
mov
popa
and
fsubr
(bad)
(bad)
or
push
push
test
xchg
sub
pop
iret
mov
cmp
inc
loop
enter
fldcw
leave
aaa
push
test
pop
je
ja
xor
das
arpl
mov
(bad)
xchg
loopne
inc
sbb
ds
jbe
jmp
ss
jle
pusha
das
xchg
or
call
cs
movs
cs
push
jo
addr16
outs
inc
mov
daa
sbb
cld
xchg
jnp
inc
pop
daa
test
cs
dec
ss
xor
(bad)
loopne
loopne
arpl
ins
sub
inc
and
fs
lahf
cmp
push
lahf
out
fwait
add
scas
xchg
add
inc
jbe
cmps
adc
icebp
popf
retf
rol
mov
ds
mov
or
loopne
mov
loop
push
nop
mov
push
adc
sub
push
iret
pop
pushf
inc
xor
xchg
int
mov
pop
mov
into
les
push
scas
xlat
jmp
ja
js
js
js
push
push
push
push
iret
adc
inc
in
ins
jge
push
sub
(bad)
(bad)
pop
stos
fidivr
les
stc
fidiv
xor
pop
aaa
push
jns
lods
sar
lods
mov
movs
adc
sbb
sar
adc
or
aad
dec
sub
leave
mov
outs
adc
push
outs
adc
or
movs
dec
cmps
sbb
fwait
jo
lahf
jecxz
in
jmp
addr16
stos
loope
stos
out
cmp
mov
ds
pop
mov
inc
daa
dec
movs
xor
cmp
lock
inc
sti
sbb
lahf
cmp
cmps
test
add
das
lods
out
mov
mov
dec
dec
cmp
fmul
jge
(bad)
aam
inc
idiv
sti
in
adc
mov
das
and
sbb
sbb
shr
div
aad
push
push
push
push
push
jg
retf
jb
jo
sahf
in
mov
fldln2
mov
dec
xchg
mov
mov
push
add
hlt
add
mov
pusha
dec
bswap
cmp
arpl
loope
movs
in
sbb
out
(bad)
jmp
cs
dec
add
pop
mov
mov
inc
inc
or
addr16
imul
enter
adc
mov
gs
mov
adc
vmovups
out
xor
aas
xor
xor
outs
pop
xchg
ins
dec
fdivr
mov
arpl
jno
arpl
jno
mov
sub
mov
jae
sbb
cld
dec
xor
xor
mov
mov
pop
adc
pop
je
mul
repnz
adc
(bad)
enter
inc
ret
cmp
repz
popa
mov
popa
mov
not
les
(bad)
jmp
outs
xor
mov
xchg
fcomp
pop
lods
out
rcl
cdq
jecxz
lahf
in
lahf
nop
pop
mov
mov
mov
and
and
sub
sub
mov
sub
mov
xchg
xor
push
lods
mov
jnp
mov
leave
test
mov
sub
out
js
mov
js
cmp
xor
sub
adc
adc
xchg
pop
out
inc
inc
fdivr
cmc
dec
jmp
mov
xchg
jecxz
out
ins
mov
sti
(bad)
(bad)
push
mov
cli
jnp
sar
cmps
add
adc
shr
jne
pop
(bad)
data16
loopne
inc
push
push
mov
stos
mov
jge
imul
jl
xchg
movs
pop
add
xor
pop
and
sub
pop
pop
and
sub
arpl
cmp
dec
mov
mov
pusha
jb
je
(bad)
test
sti
aas
out
fcomi
(bad)
aas
out
jl
cs
inc
inc
jl
inc
in
xor
pop
iret
iret
repz
iret
inc
jg
ins
sar
sub
xchg
fistp
sti
and
mov
bnd
mov
pop
dec
or
jecxz
inc
or
dec
mov
mov
mov
mov
call
jl
jl
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
mov
cmp
pop
mov
daa
es
in
pusha
fsub
popa
pusha
and
outs
outs
mov
outs
outs
push
cmp
mov
and
movs
and
loope
sub
imul
pop
call
add
outs
pop
in
outs
fbstp
(bad)
jmp
(bad)
dec
dec
dec
mov
das
test
or
test
mov
or
or
in
push
outs
in
push
outs
enter
enter
pushf
sbb
jg
sbb
leave
xor
mov
fs
daa
fs
cmp
out
or
out
push
(bad)
int3
push
(bad)
fidivr
div
and
lods
lock
lods
loop
mov
sub
lods
lods
(bad)
inc
inc
in
retf
inc
inc
inc
or
adc
jle
rol
aam
iret
into
les
loopne
imul
out
mov
dec
(bad)
lds
leave
inc
inc
retf
inc
sbb
add
mov
data16
sbb
prefetcht2
cwde
scas
mov
mov
dec
ror
retf
xor
mov
xor
mov
mov
mov
shr
push
rcl
pop
pop
pop
pop
jnp
push
pop
dec
dec
dec
dec
cmp
dec
pop
mov
mov
out
mov
repz
mov
int3
pop
mov
push
arpl
call
jl
lahf
and
(bad)
mov
enter
enter
cmp
cmp
cmp
cmp
mov
jo
pop
enter
mov
je
imul
pop
pusha
inc
pusha
xor
outs
or
outs
cwde
mov
cwde
mov
dec
and
inc
sub
inc
sub
and
pop
js
cmp
mov
mov
mov
mov
outs
dec
outs
mov
call
dec
and
dec
ins
dec
shr
test
pusha
or
or
imul
push
imul
and
dec
cmp
dec
jle
adc
sbb
sbb
jecxz
mov
lds
jecxz
and
repz
neg
aad
test
into
call
out
cwde
popf
cwde
ret
fcmovnb
mov
aam
leave
cli
(bad)
jecxz
in
mov
jmp
jg
push
and
daa
arpl
sti
loopne
repz
in
adc
jg
or
lahf
iret
into
into
into
into
into
into
into
loopne
loopne
jecxz
loopne
into
jmp
imul
out
out
out
(bad)
vandnpd
aad
inc
inc
inc
or
ret
in
out
out
dec
data16
invd
cmp
ins
ins
push
jge
xchg
mov
scas
ds
retf
ficomp
and
push
xor
mov
aad
loopne
loope
rcl
rcl
jbe
addr16
jle
cmp
daa
dec
cmp
dec
cmp
mov
mov
mov
repz
shl
mov
call
dec
jl
jl
jl
jl
(bad)
(bad)
(bad)
mov
cmps
(bad)
mov
enter
cmp
push
cmp
mov
shl
outs
sbb
sbb
cmp
push
cmp
dec
es
or
adc
dec
pusha
push
pusha
pusha
pusha
pusha
pusha
add
or
outs
add
mov
mov
and
and
ins
pop
dec
inc
pop
jnp
dec
xor
sub
sub
pop
mov
in
out
cmp
or
lea
xchg
dec
dec
dec
or
sub
(bad)
(bad)
fcmovne
into
rcr
imul
cs
sbb
cmp
sbb
jle
sbb
sbb
sbb
mov
mov
icebp
fcmovnb
test
jecxz
out
out
in
out
cwde
mov
cwde
lods
mov
div
cmc
div
imul
rcr
leave
fdivr
int
(bad)
out
mov
lods
lods
lods
jmp
fdivrp
es
adc
inc
add
push
or
push
adc
mov
lea
mov
pop
retf
out
(bad)
and
(bad)
aad
loopne
aad
gs
push
inc
inc
push
fwait
lods
mov
dec
inc
addr16
inc
addr16
sbb
push
sbb
jmp
mov
scas
callw
cmps
in
retf
fiadd
and
and
mov
lods
pop
cmc
rol
pop
cmc
rol
xchg
push
pop
xor
pop
shr
out
ins
dec
pop
sbb
mov
inc
aad
jecxz
aad
jecxz
xchg
mov
or
fwait
mov
fwait
mov
jge
push
lock
mov
xlat
(bad)
adc
leave
fcom
leave
fcomp
push
cmp
fcomp
cmp
dec
test
mov
cmp
or
pop
cmp
lds
cmp
add
and
daa
ss
inc
popa
jo
dec
outs
jg
dec
outs
jg
lahf
mov
test
add
and
adc
sub
imul
pop
dec
cmp
pop
dec
clc
scas
mov
retf
jle
dec
outs
jle
fdivr
out
sti
xlat
(bad)
out
imul
pop
int
test
and
or
sbb
inc
push
xchg
inc
push
dec
dec
pop
inc
dec
pop
add
sbb
daa
xor
or
sahf
mov
out
mov
or
repz
retf
jp
out
and
out
xor
(bad)
retf
into
mov
mul
stos
fdiv
out
xchg
mov
jbe
mov
add
inc
push
jg
inc
push
fld
adc
and
out
into
into
into
mov
or
lea
lds
and
sub
inc
inc
inc
aam
jmp
loop
call
cmp
add
imul
je
sbb
loopne
fcmovu
retf
ror
test
retf
outs
outs
push
pop
inc
push
push
pop
sar
fnsave
mov
pop
dec
dec
gs
cmp
sub
dec
dec
out
out
(bad)
(bad)
fstp
(bad)
popf
xchg
xchg
repz
mov
mov
call
sbb
sbb
(bad)
(bad)
call
hlt
enter
enter
cmp
sbb
mov
sar
jae
sbb
sbb
adc
cmp
adc
cmp
or
or
es
pusha
pusha
pusha
dec
pusha
pusha
pusha
dec
outs
outs
outs
inc
push
inc
outs
xchg
mov
mov
and
pop
and
pop
sub
sub
adc
sub
pop
jo
pop
pop
test
mov
outs
outs
outs
dec
dec
outs
outs
add
jmp
dec
dec
pusha
jo
dec
xchg
test
xor
xor
push
imul
dec
dec
das
cmp
cmp
ja
cmp
sbb
xlat
rcl
(bad)
aad
rol
jecxz
jecxz
xchg
add
xchg
lahf
xchg
mov
(bad)
ficom
call
iret
mov
fldpi
clc
out
lods
mov
(bad)
(bad)
inc
inc
inc
inc
and
mov
icebp
or
adc
mov
mov
test
mov
mov
mov
(bad)
lds
and
and
in
clc
(bad)
stc
inc
add
push
aas
sbb
sbb
int3
(bad)
rcr
int
scas
scas
cmps
scas
mov
push
push
inc
inc
inc
inc
push
enter
mov
movs
mov
cmps
mov
jns
arpl
je
and
das
cmp
(bad)
xchg
mov
mov
test
rcl
rol
rol
xlat
shl
mov
sti
or
push
pop
jl
jl
mov
mov
mov
stos
test
cmps
push
dec
dec
dec
dec
pop
dec
push
rol
ret
outs
cmp
push
outs
dec
dec
pop
push
sbb
dec
push
dec
inc
inc
inc
dec
inc
dec
adc
or
pusha
(bad)
pop
dec
sbb
or
xlat
retf
xlat
(bad)
retf
int3
push
push
inc
push
dec
push
add
dec
pop
dec
pop
inc
pop
push
pop
pop
pop
pop
cmp
jmp
out
test
or
sbb
(bad)
fist
mov
aas
push
sub
int3
retf
fisttp
imul
sbb
or
add
outs
cmp
cmp
cmp
sbb
je
into
xchg
aam
fld
ret
lds
ret
or
shl
mov
lods
mov
lahf
cwde
xchg
shl
int3
jmp
clc
clc
ret
mov
jmp
retf
fxch
iret
das
es
and
sub
loop
mov
loope
sbb
adc
or
mov
mov
xchg
xchg
xchg
test
loopne
or
in
mov
sahf
sbb
das
sub
jmp
data16
push
or
jnp
jne
jbe
cmp
fcmove
ficomp
mov
retf
pop
push
push
push
pop
push
ror
pushf
fcomp
rcr
enter
repz
mov
xor
pop
pop
pop
sub
sub
sub
aam
(bad)
xchg
nop
pushf
popf
add
(bad)
xchg
ffree
rol
sti
out
cmc
call
sbb
sbb
sbb
mov
movs
imul
stos
mov
dec
pop
dec
pop
xlat
int3
rol
jns
cmp
jns
push
push
dec
inc
sbb
dec
push
push
push
push
inc
adc
adc
adc
adc
sbb
sbb
fcomp
rcr
dec
push
add
push
inc
or
pop
push
or
sub
sub
test
cld
in
cli
jmp
outs
push
or
add
xchg
xchg
xchg
cmp
and
sub
mov
(bad)
fisttp
push
outs
dec
or
push
adc
pop
dec
sub
cmp
cmp
imul
cmp
mov
mov
rcl
xchg
mov
call
xchg
xchg
mov
mov
mov
test
div
int3
fcmove
iret
fadd
fimul
stos
jmp
into
ret
fnstenv
and
sub
arpl
mul
icebp
loop
in
icebp
movs
jg
jg
pop
adc
adc
mov
xchg
rol
add
in
mov
xor
xor
xor
inc
jmp
in
jmp
syscall
inc
adc
push
jns
cmp
jns
fistp
int
mov
call
xor
fs
inc
fstp
aad
cmps
mov
shl
push
jbe
jb
push
jnp
cmp
push
das
cmp
ret
fadd
(bad)
xchg
rol
mov
adc
neg
aad
(bad)
xchg
fucomi
call
call
pop
xor
mov
mov
mov
scas
call
mov
dec
pop
cmp
cmp
and
into
ror
(bad)
xlat
jns
push
jle
jns
push
pop
dec
push
dec
add
es
and
pusha
pusha
jo
arpl
imul
mov
lea
and
or
sbb
and
push
sbb
invd
pop
pop
pop
js
push
(bad)
sub
call
outs
push
push
push
xchg
clc
dec
inc
inc
inc
dec
dec
inc
scas
mov
scas
test
or
imul
in
iret
leave
int
pop
dec
dec
or
sahf
sahf
sahf
push
sbb
xchg
mov
jecxz
(bad)
(bad)
out
(bad)
(bad)
mov
outs
(bad)
fdivrp
neg
pop
jbe
div
xchg
sahf
xchg
sahf
(bad)
les
std
cli
cli
add
lods
stos
movs
lods
stos
lods
imul
inc
stos
sub
test
jg
jg
jg
into
into
into
iret
into
into
into
mul
loopne
loop
loopne
in
out
out
out
in
out
out
out
mov
vaddpd
inc
inc
inc
inc
inc
xchg
mov
popa
data16
sbb
adc
sbb
mov
mov
mov
ror
retf
xor
cmp
xor
mov
mov
mov
(bad)
rcl
add
pop
pop
sbb
pop
pop
dec
dec
dec
dec
pop
dec
dec
dec
mov
mov
mov
repz
repz
mov
xchg
mov
mov
call
jle
jl
cmp
(bad)
(bad)
(bad)
xchg
(bad)
(bad)
(bad)
retf
enter
enter
cmp
cmp
scas
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
sub
es
pusha
pusha
pusha
or
outs
outs
outs
pop
outs
outs
outs
movs
mov
mov
and
and
aas
sub
sub
pop
pop
pop
fstp
pop
or
mov
outs
outs
in
outs
outs
outs
jmp
(bad)
(bad)
inc
dec
dec
fmul
dec
sub
test
lods
or
or
imul
imul
dec
dec
dec
call
sbb
sbb
mov
jns
mov
loope
jecxz
xor
jecxz
in
out
out
loope
out
(bad)
(bad)
(bad)
push
std
div
div
div
div
lods
lods
lods
mov
mov
lods
lods
lods
lods
lods
lods
lods
into
inc
inc
or
inc
add
inc
ja
jg
jg
jg
inc
into
into
push
(bad)
into
into
into
loopne
loopne
jo
loopne
out
out
out
out
out
out
out
push
(bad)
int
(bad)
inc
inc
inc
rol
add
mov
outs
data16
sbb
lods
sbb
fdiv
mov
retf
retf
xor
xor
cmp
xor
mov
mov
mov
shl
jb
jb
cmp
cs
es
es
dec
dec
repnz
hlt
leave
fadd
loope
pushf
nop
xchg
add
mov
xor
movs
call
mov
jl
in
jl
aam
(bad)
(bad)
push
(bad)
(bad)
je
enter
enter
cmp
mov
cmp
cmp
mov
mov
adc
sub
lods
cmp
inc
mov
test
jo
into
pusha
jo
outs
outs
outs
outs
outs
outs
outs
add
mov
mov
sahf
nop
and
dec
test
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
in
pop
dec
or
out
fdivr
in
mov
or
outs
cmp
sbb
lea
call
cmp
sub
dec
dec
in
(bad)
int
shr
jg
ins
jne
cmp
syscall
push
sbb
or
dec
dec
dec
sbb
cmp
sbb
sbb
icebp
(bad)
(bad)
into
mov
mov
xchg
xchg
xchg
xchg
out
xchg
ficom
xchg
out
ret
fld
lods
retf
(bad)
in
mov
out
cli
mov
into
fldcw
pop
and
and
add
loope
or
or
jg
scas
mov
into
mov
loopne
loopne
fwait
or
mov
mov
add
inc
inc
fsubr
sti
(bad)
out
out
out
adc
data16
push
push
ja
jge
fstp
int
mov
test
mov
jno
xor
in
icebp
mov
fdiv
rcl
shl
jae
cmp
pop
pop
pop
pop
push
cs
enter
stc
stc
mov
sahf
leave
add
mov
mov
mov
mov
call
sub
sbb
adc
(bad)
(bad)
pushf
enter
enter
cmp
push
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
imul
es
es
add
pusha
pusha
pusha
pusha
pusha
cmp
outs
or
outs
fdivr
mov
and
dec
and
sub
dec
sub
pop
pop
pop
or
xor
mov
mov
mov
mov
outs
pop
outs
outs
outs
outs
outs
mov
call
dec
dec
dec
dec
dec
cli
test
fsubr
ins
or
or
imul
imul
and
dec
or
dec
jns
sbb
push
sbb
lds
(bad)
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
ficom
div
mov
xor
lods
lods
lods
jmp
mov
mov
mov
lods
lods
lods
jecxz
ret
inc
inc
inc
pop
inc
es
loopne
add
jg
jg
jg
jg
into
into
into
mov
stos
into
and
loopne
loopne
loopne
out
xchg
out
out
out
out
out
mov
movs
lds
inc
inc
inc
add
inc
stc
mov
mov
mov
data16
data16
sbb
push
sbb
sar
mov
retf
mov
xor
xor
xor
mov
enter
mov
shl
pop
pop
pop
pop
je
ds
and
dec
ret
mov
mov
mov
mov
repz
repz
repz
repz
mov
call
adc
sbb
(bad)
(bad)
(bad)
(bad)
xchg
(bad)
fwait
(bad)
enter
cwde
enter
cmp
cmp
jne
mov
mov
sbb
sbb
pop
cmp
pop
cmp
or
push
imul
es
pusha
add
or
outs
dec
outs
push
outs
sar
mov
sbb
dec
and
sub
pop
sub
pop
pop
jo
pop
dec
movs
cmps
mov
pop
inc
outs
jle
inc
outs
jle
sar
out
mov
bound
bound
xchg
mov
js
or
jnp
inc
push
ret
pusha
dec
pop
fbld
pop
(bad)
xor
or
cwde
mov
pop
cwde
mov
inc
int3
loop
dec
int3
loop
dec
leave
out
push
leave
out
push
(bad)
data16
(bad)
ss
out
fincstp
out
sub
push
movs
mov
inc
sub
jae
push
dec
jae
push
xchg
mov
xchg
mov
dec
jle
push
dec
jle
cli
dec
fiadd
loopne
loopne
loopne
loopne
fsubrp
(bad)
mov
out
(bad)
mov
cmc
(bad)
aad
jo
push
cmp
inc
push
btc
fwait
cli
push
addr16
push
addr16
sub
or
sub
or
mov
scas
ret
fcmovu
sti
retf
fisubr
add
and
add
and
mov
ret
xchg
loop
ret
pop
es
pop
inc
es
pop
adc
pop
sub
pop
fld
mov
jg
repnz
ret
pushf
test
movs
sub
fwait
mov
dec
jge
es
(bad)
shl
xlat
(bad)
sar
leave
fsubr
cli
leave
fcom
or
sub
cmp
(bad)
xchg
mov
mov
sbb
sbb
sub
sub
sbb
sub
adc
ss
push
popa
jo
push
popa
jo
pop
outs
jg
dec
outs
jg
mov
test
adc
xor
adc
xor
push
sub
test
outs
pop
dec
js
pop
dec
push
stos
mov
movd
outs
xchg
call
call
dec
cmp
dec
and
test
fldcw
push
imul
imul
and
dec
es
and
sbb
sbb
sub
call
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
fisubr
(bad)
not
test
sub
mov
mov
lods
enter
shr
inc
outs
inc
mov
add
jg
jg
jg
jg
into
mov
into
int
and
loopne
loopne
out
ret
out
mov
xchg
test
lds
inc
jno
ins
inc
mov
mov
mov
dec
or
xor
sbb
jbe
xchg
mov
int
scas
retf
cmps
retf
push
xor
pop
xor
(bad)
mov
aad
mov
sar
pop
and
dec
dec
dec
sub
dec
fdiv
ret
repz
call
mov
mov
mov
call
pop
jl
jl
jl
jl
(bad)
mov
mov
enter
enter
cmp
push
cmp
mov
mov
xor
sbb
cmp
cmp
cmp
cmp
es
es
or
pusha
or
outs
sbb
outs
add
mov
retf
and
and
push
and
dec
sub
sub
pop
sub
xor
pop
in
mov
mov
mov
mov
add
outs
inc
outs
into
call
dec
(bad)
(bad)
jmp
pusha
dec
les
fisubr
and
or
imul
push
imul
dec
cmp
dec
es
jne
jl
sbb
xchg
call
jecxz
jecxz
out
out
out
out
fisubr
(bad)
not
test
sub
mov
mov
lods
sub
inc
jno
outs
inc
jb
add
adc
push
jg
jg
jg
into
mov
into
int
and
loopne
loopne
out
ret
out
cdq
out
xchg
stos
lds
lds
jno
ins
inc
jno
cmps
mov
mov
pushw
pcmpgtd
jne
imul
sbb
(bad)
mov
fdivr
scas
retf
dec
xor
inc
xor
enter
xchg
mov
(bad)
shl
sar
shl
pop
pop
pop
jbe
addr16
and
dec
daa
dec
cmp
mov
mov
mov
mov
repz
(bad)
mov
call
sbb
push
jl
jl
(bad)
mov
(bad)
mov
enter
cmp
cmp
mov
shl
jno
outs
sbb
cmp
push
cmp
or
push
es
es
es
pusha
adc
push
outs
inc
outs
sbb
push
outs
retf
mov
aad
inc
and
dec
and
pop
sub
inc
sub
sub
pop
xor
imul
mov
outs
or
outs
mov
sar
xchg
dec
and
and
test
fld
pusha
or
or
imul
imul
sub
and
cs
sub
sbb
sbb
outs
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
fidivr
neg
neg
lods
fld
mov
mov
mov
mov
lods
enter
sub
inc
das
inc
in
and
loope
in
add
push
jg
jg
jg
into
dec
jecxz
dec
loopne
loopne
test
cwde
loopne
out
ret
out
sub
out
call
lds
inc
xor
xor
mov
mov
data16
data16
outs
sbb
ins
sbb
mov
sar
cmps
retf
sbb
xor
xor
iret
mov
loopne
loope
pop
pop
pop
pop
adc
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
repz
repz
mov
mov
mov
mov
call
or
push
sbb
or
mov
mov
ror
enter
enter
cmp
cmp
cmp
loopne
ret
xlat
shl
jnp
fs
sbb
cmp
cmp
cmp
cmp
inc
inc
dec
inc
push
cvttps2pi
sub
outs
outs
outs
and
outs
rcl
fidivr
dec
inc
dec
and
or
push
sub
cmp
jo
cmp
mov
leave
(bad)
mov
outs
outs
outs
outs
xchg
sahf
xchg
xlat
xchg
xchg
fwait
(bad)
dec
dec
dec
dec
sub
jge
test
test
les
sbb
push
sbb
or
imul
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
pop
jl
(bad)
not
not
(bad)
(bad)
loopne
loopne
loopne
loopne
sbb
sbb
sbb
sbb
and
mov
cmp
cmp
sbb
sbb
sbb
sbb
push
es
outs
es
jo
jo
jo
jg
jg
jg
jg
test
test
test
test
xor
xor
cmps
and
sub
pop
fcomp
pop
fcomp
mov
mov
jle
jle
out
outs
jle
jle
jle
jle
int3
dec
dec
dec
dec
dec
dec
dec
test
test
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
sbb
or
or
or
cmps
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
fdivp
div
div
div
imul
lods
scas
lods
mov
mov
mov
inc
arpl
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
cmp
cmp
stos
test
movs
movs
cmps
cmps
mov
int
iret
rol
ret
adc
push
pop
sub
sub
retf
leave
mov
lds
push
push
dec
dec
dec
dec
stc
clc
sti
cli
cmc
hlt
div
adc
push
retf
(bad)
cmps
cmps
movs
movs
mov
call
mov
stc
clc
push
push
push
push
pop
pop
pop
pop
femms
or
adc
adc
adc
pop
sbb
and
and
(bad)
(bad)
repnz
(bad)
(bad)
cld
std
mov
mov
pushf
popf
xchg
xchg
nop
xchg
mov
mov
lea
imul
scas
scas
lods
lods
mov
mov
dec
dec
dec
dec
inc
inc
inc
inc
repnz
mov
xchg
add
popf
mov
mov
mov
sbb
and
out
out
in
in
jecxz
loope
or
or
push
pop
adc
ins
ins
outs
outs
pusha
popa
bound
ret
aas
ds
dec
inc
inc
inc
inc
mov
mov
sub
and
es
dec
dec
dec
dec
jae
jno
mov
mov
mov
out
in
sti
clc
stc
add
or
or
dec
dec
xor
xor
jo
jb
jl
jle
push
push
push
push
dec
dec
dec
dec
test
stos
stos
movs
movs
cmps
cmps
or
or
ss
xor
sub
cs
and
and
aam
(bad)
xlat
enter
push
push
push
push
pop
pop
pop
pop
loopne
loop
pushf
popf
sahf
lahf
mov
mov
mov
stos
test
mov
mov
hlt
cmc
div
clc
stc
cli
sti
repz
lock
into
int
sbb
push
pop
adc
adc
mov
nop
xchg
popf
pushf
lahf
sahf
xchg
nop
xchg
xchg
in
out
cwde
cdq
call
inc
inc
inc
mov
mov
sub
daa
es
xchg
lods
lods
scas
scas
dec
dec
dec
dec
inc
inc
inc
inc
loopne
loop
cld
std
(bad)
call
xchg
xchg
nop
mov
mov
dec
dec
dec
dec
pop
push
sbb
adc
cmps
movs
movs
div
cmc
hlt
sti
cli
stc
clc
cli
sti
clc
stc
mov
(bad)
clc
stc
div
hlt
cmc
fcmovu
fcomp
mov
lds
xchg
xchg
xchg
mov
mov
retf
leave
jmp
in
out
push
or
adc
(bad)
aad
fcmovnu
(bad)
and
and
pop
ds
mov
lods
scas
scas
mov
mov
mov
mov
xchg
mov
inc
inc
inc
(bad)
(bad)
enter
pop
push
add
sbb
repz
(bad)
(bad)
cld
std
test
mov
sbb
push
adc
gs
js
test
mov
jl
jle
pop
push
adc
sbb
fcmovu
fadd
mov
sahf
lahf
pushf
popf
xchg
xchg
nop
xchg
ins
ins
outs
outs
push
push
push
push
pop
push
adc
sbb
pop
pop
inc
inc
inc
inc
outs
outs
ins
ins
bound
popa
add
jl
mov
(bad)
aam
(bad)
(bad)
cmp
enter
cmp
cmp
cmp
mov
mov
sbb
sbb
pop
cmp
cmp
cmp
inc
daa
ss
add
jo
pusha
pusha
pusha
pop
or
outs
outs
outs
sbb
test
mov
and
and
and
sub
and
sub
or
dec
push
pop
pop
pop
shr
mov
push
or
jle
outs
outs
xchg
fwait
(bad)
out
out
(bad)
(bad)
(bad)
cmp
dec
dec
dec
ror
test
mov
push
or
jecxz
push
jle
imul
dec
pop
pop
dec
dec
dec
cmp
add
sbb
pop
shl
mov
xchg
repz
jecxz
jecxz
and
std
out
out
mov
(bad)
ss
mul
jmp
div
fs
lods
lods
lods
pop
out
mov
jne
lods
mov
mov
inc
inc
inc
imul
xchg
mov
sbb
pop
jg
jg
stos
iret
fsubrp
into
into
into
loopne
loope
(bad)
loopne
mov
dec
out
out
out
aad
(bad)
aad
(bad)
pop
and
inc
inc
stos
out
mov
dec
add
dec
data16
or
sbb
xchg
mov
mov
in
retf
push
xor
push
xor
xor
fnstcw
mov
jmp
rcl
ja
push
pop
cs
pop
pop
and
dec
pop
je
dec
dec
rcl
mov
mov
repz
mov
cmc
mov
mov
call
call
jl
dec
mov
(bad)
nop
(bad)
(bad)
(bad)
push
enter
pop
cmp
jno
cmp
adc
mov
mov
push
sbb
sbb
pop
cmp
ja
cmp
out
inc
daa
imul
popa
jo
pusha
pusha
pusha
mov
outs
jg
outs
outs
outs
pop
fnstsw
mov
js
and
(bad)
dec
sub
sub
pop
pop
pop
mov
mov
push
outs
jle
push
outs
out
cdq
(bad)
out
cld
sti
(bad)
call
dec
pop
dec
dec
dec
dec
or
test
sbb
or
sub
imul
dec
pop
inc
dec
dec
dec
inc
jge
or
pop
sbb
rcl
mov
mov
test
repz
out
jecxz
and
jmp
out
push
mov
(bad)
bound
div
or
lods
mov
es
mov
adc
test
inc
push
push
inc
inc
inc
push
in
xchg
xchg
xchg
outs
push
jg
es
(bad)
retf
adc
loope
clc
in
loopne
mov
(bad)
imul
out
out
leave
mov
vaddpd
inc
push
pop
inc
inc
inc
scas
in
mov
push
add
jnp
data16
sbb
push
sbb
sbb
fdivr
mov
jmp
and
xor
xor
fstp
mov
lock
rcl
xchg
jo
pop
xor
pop
pop
fisubr
dec
dec
sub
mov
mov
xchg
repnz
div
repz
mov
popf
mov
mov
std
fwait
mov
sbb
push
js
jl
mov
(bad)
cli
rcl
(bad)
sub
leave
fsub
int3
enter
cmp
pop
cmp
cmp
cmps
mov
or
sbb
sbb
sub
daa
adc
es
or
push
fs
pusha
sub
outs
jg
imul
sar
mov
sbb
and
inc
inc
sub
adc
pop
dec
pop
pop
pop
or
mov
loop
outs
jle
push
outs
addr16
(bad)
out
mov
and
dec
dec
sbb
test
in
lods
test
sbb
or
mov
outs
imul
dec
pop
or
dec
div
or
sbb
dec
fbstp
mov
mov
repz
jecxz
test
out
mov
into
nop
fcmovu
(bad)
lahf
mul
mov
lds
lods
retf
call
lods
mov
sbb
inc
push
adc
inc
inc
out
adc
push
jle
sbb
jg
cmps
iret
fisub
mov
lock
loopne
dec
xchg
(bad)
outs
jmp
(bad)
int
vmovaps
inc
dec
inc
inc
inc
loop
fwait
mov
addr16
outs
data16
jno
or
adc
sbb
mov
mov
fcmovb
retf
pop
xor
and
xor
lods
(bad)
mov
mov
(bad)
sar
jge
pop
or
and
push
inc
dec
dec
std
(bad)
mov
cdq
repnz
sti
repz
fidiv
mov
lock
mov
xchg
call
je
jl
mov
(bad)
(bad)
js
leave
fmul
(bad)
enter
cmp
aas
xor
cmp
mov
mov
push
adc
fst
sub
dec
daa
ss
es
or
pop
ins
pusha
pusha
jg
outs
jg
arpl
movs
sar
mov
xor
and
inc
sub
cmp
sub
pop
dec
push
dec
pop
pop
fsub
mov
xor
outs
outs
xchg
xchg
(bad)
out
in
(bad)
(bad)
cmp
dec
pop
jbe
dec
dec
sub
test
test
test
sbb
sbb
test
imul
dec
pop
inc
pop
dec
dec
scas
jo
or
bndstx
ja
mov
mov
mov
repz
mul
jecxz
(bad)
out
(bad)
out
cs
into
ffreep
(bad)
neg
div
mov
mov
lods
xchg
out
call
lods
mov
jae
inc
push
js
inc
inc
retf
out
adc
adc
jbe
jg
stos
mov
into
into
nop
mov
lock
cld
loopne
xchg
sub
aad
out
out
push
test
vpmulhuw
push
dec
pusha
inc
inc
cmp
mov
fimul
addr16
inc
data16
sbb
sbb
mov
mov
shr
retf
xor
or
xor
mov
mov
(bad)
rcl
(bad)
push
pop
sbb
daa
dec
pop
dec
dec
dec
sbb
mov
iret
sahf
repnz
fcomip
repz
fnstenv
mov
neg
call
jl
mov
loop
(bad)
mov
leave
fadd
cld
enter
cmp
xor
cmp
into
mov
mov
push
and
sbb
push
cmp
cmp
daa
ss
es
and
mov
das
outs
outs
pusha
aad
test
cld
mov
xor
push
and
inc
sub
and
sub
pop
pop
and
cwde
mov
mov
je
outs
outs
fist
(bad)
out
cmovge
sbb
test
test
jge
or
in
or
imul
jnp
dec
dec
dec
or
dec
pop
rcr
sbb
sbb
push
mov
mov
fnstenv
jecxz
(bad)
loop
imul
out
adc
(bad)
pop
mov
into
and
div
jp
mul
jle
lods
lods
xor
lods
mov
cs
call
lods
mov
jmp
add
jg
jg
adc
add
into
into
mov
loopne
or
loope
es
out
out
(bad)
mov
(bad)
in
(bad)
cmp
inc
inc
inc
push
das
inc
push
loopne
mov
inc
data16
or
jnp
sbb
call
mov
mov
retf
retf
fimul
xor
jl
xor
or
lods
rcl
rcl
mov
rol
push
pop
pop
pop
pop
jae
pop
dec
dec
dec
dec
cmp
mov
int
mov
je
repz
repnz
mov
mov
(bad)
call
jl
call
(bad)
(bad)
(bad)
jbe
xlat
(bad)
pop
enter
cmps
leave
fdiv
cmp
adc
adc
mov
sbb
jns
or
cmp
cmp
push
cmp
lods
es
inc
daa
ss
pusha
pusha
or
jo
outs
outs
outs
pop
or
mov
mov
test
and
and
dec
and
in
sub
sub
pop
pop
pop
dec
sub
inc
mov
cwde
cld
outs
outs
outs
inc
push
outs
jle
(bad)
(bad)
dec
(bad)
(bad)
out
mov
dec
or
test
test
fimul
or
jl
sbb
imul
sbb
add
dec
dec
aas
aas
dec
pop
fistp
sbb
imul
fs
mov
shl
jecxz
xchg
loop
aaa
out
out
xchg
out
add
(bad)
jle
(bad)
and
div
pop
xchg
out
lods
lods
lods
adc
lods
mov
dec
cli
mov
jge
lods
mov
lahf
xor
daa
add
sar
jg
movd
into
into
into
into
mov
loopne
in
xchg
loope
push
out
out
out
neg
vpsraw
inc
jo
inc
push
push
mov
mov
pop
addr16
sbb
sbb
or
mov
scas
or
retf
scas
retf
ficom
xor
xor
and
mov
mov
shr
pop
pop
pop
aaa
jb
pop
ins
dec
dec
dec
into
cmp
fnstenv
mov
stc
repz
mov
aam
mov
mov
call
jl
jl
sbb
fst
(bad)
(bad)
jle
xlat
(bad)
pop
enter
mov
cmp
clc
dec
cmp
or
shl
sbb
ins
sbb
cmp
dec
cmp
call
ss
pusha
pusha
pusha
nop
adc
out
outs
outs
(bad)
or
(bad)
mov
mov
and
and
and
pop
sub
push
pop
pop
pop
xor
mov
sbb
outs
fimul
outs
jle
(bad)
(bad)
(bad)
fisttp
dec
dec
popa
aas
dec
pop
repz
test
add
or
jle
sbb
imul
push
push
addr16
dec
dec
or
sbb
repz
or
lds
jecxz
xchg
repz
xchg
out
mov
(bad)
mov
(bad)
stc
div
neg
lods
lods
lods
fcomp
lods
mov
cli
out
mov
sub
inc
inc
inc
sbb
inc
push
scas
add
or
sbb
dec
into
into
push
mov
loopne
and
out
out
dec
pushf
out
inc
(bad)
mov
inc
inc
test
inc
push
mov
mov
out
data16
adc
jbe
sbb
sbb
mov
mov
retf
retf
ficom
inc
xor
fstp
lods
not
rcl
aaa
mov
pop
pop
out
push
pop
les
dec
add
dec
pop
call
mov
sti
xor
aaa
mov
mov
shl
call
jl
mov
jge
in
(bad)
(bad)
(bad)
mul
enter
leave
fmul
cmp
cmp
cmp
mov
mov
sbb
outs
sbb
cmp
cmp
jae
es
inc
daa
ss
pusha
pusha
cmp
popa
jo
outs
outs
outs
pop
sbb
jg
mov
mov
and
sub
sub
pop
pop
pop
clc
cmp
mov
adc
outs
dec
outs
jle
(bad)
(bad)
jmp
(bad)
out
sbb
dec
aad
dec
pop
mov
fisubr
or
jg
sbb
imul
sbb
ret
dec
dec
dec
cmp
test
sbb
(bad)
push
mov
pop
shl
jecxz
nop
loop
mov
and
leave
(bad)
fisub
lods
(bad)
scas
div
mul
xchg
mul
nop
lods
lods
lods
test
lods
mov
call
lods
mov
lods
mov
imul
push
pop
add
data16
jg
or
xchg
into
into
into
into
stos
iret
faddp
loopne
loopne
xchg
loope
mov
out
out
mov
(bad)
cdq
mov
aad
inc
inc
inc
sub
inc
push
cmp
mov
jmp
sbb
mov
scas
ror
retf
mov
xor
adc
xor
pop
mov
mov
rol
cmps
rol
stos
pop
pop
pop
jmp
pop
in
dec
dec
dec
dec
aas
dec
pop
sub
mov
call
xchg
jecxz
mov
mov
shl
adc
fwait
mov
jl
dec
or
lods
(bad)
(bad)
(bad)
es
(bad)
mov
enter
leave
fdiv
pop
cmp
fwait
mov
mov
sbb
jns
or
cmp
cmp
cmp
cmps
es
jl
pusha
pusha
add
popa
jo
outs
outs
outs
pop
sbb
(bad)
mov
mov
and
and
jbe
sub
mov
sub
ins
pop
pop
pop
shr
mov
dec
outs
outs
outs
cli
sbb
popf
(bad)
(bad)
call
fwait
(bad)
out
push
dec
dec
dec
in
cmp
test
test
cmp
or
jns
sbb
imul
push
push
xor
dec
dec
sub
cmp
sbb
(bad)
outs
sbb
fidiv
mov
mov
jecxz
pop
xchg
loop
in
out
loop
out
cmp
(bad)
retf
into
data16
not
xor
or
fisubr
mov
lods
lods
lods
jmp
inc
inc
inc
adc
add
jg
jg
jg
sbb
nop
or
loopne
loopne
or
ret
out
out
out
lds
cdq
xor
inc
mov
mov
loope
hlt
lahf
jae
or
sbb
sbb
or
fisubr
xchg
std
(bad)
(bad)
in
in
test
xor
cwde
mov
mov
jle
gs
pop
pop
pop
pop
(bad)
fldcw
ins
call
movs
xchg
retf
rcr
in
int
outs
lods
lock
mov
fimul
jns
xchg
es
test
mov
es
test
adc
fadd
pusha
ror
mov
div
daa
test
cmp
cmp
in
ins
cmps
cmc
cdq
inc
jg
lea
gs
pop
jbe
mov
rcr
inc
loop
cvttps2pi
mov
xor
xor
je
pop
test
push
repnz
test
push
push
and
xchg
jecxz
or
and
test
sub
in
jo
jno
fistp
cmp
mov
adc
pusha
aad
sbb
lea
imul
adc
add
es
pop
stc
dec
pop
xor
(bad)
xor
nop
out
cs
jle
cmc
or
hlt
mov
in
(bad)
sahf
in
clc
sahf
jae
cmps
test
mov
(bad)
fist
popa
test
push
div
fst
jge
imul
xlat
or
mov
inc
js
push
mov
enter
sub
fimul
jns
mov
loopne
cli
pop
push
movs
cmp
scas
movs
into
lds
push
pop
int
adc
xchg
pop
mov
mov
push
fcmovnu
add
inc
repz
add
stos
and
xor
(bad)
bound
xor
xor
mov
sub
jl
cmps
xor
mov
arpl
scas
into
cmc
enter
push
add
pop
stos
mov
loopne
js
xchg
cmps
pop
adc
adc
mov
ror
outs
push
mov
and
js
aas
adc
faddp
cmp
xchg
push
add
cwde
dec
out
test
retf
int
mov
dec
push
imul
mov
mov
sbb
dec
sbb
scas
mov
and
mov
(bad)
cld
dec
mov
push
ror
int3
arpl
jp
js
lock
push
aad
push
pop
pop
pop
cmp
outs
or
jp
and
out
outs
or
inc
dec
xor
rcr
cli
adc
mov
fcom
dec
inc
mov
add
es
test
dec
dec
pop
sub
adc
inc
pop
mov
xor
frstor
pop
fs
xchg
or
cmps
js
out
das
loopne
fs
push
adc
mov
mov
sbb
mov
or
outs
and
lahf
(bad)
in
iret
xchg
xlat
loop
or
add
bound
aad
aad
inc
cmps
call
xchg
jmp
shl
ror
xor
sbb
and
mov
fs
lods
ja
stc
xlat
loope
add
add
pushf
in
and
inc
mov
idiv
pminsw
or
pop
adc
rol
scas
ds
jle
iret
add
test
addr16
jbe
xchg
les
push
jl
stos
jle
xor
pop
pop
repz
fwait
pop
cmps
sbb
es
or
fistp
popf
test
jae
dec
dec
inc
in
pop
lods
dec
jo
cmps
out
in
loope
out
sbb
es
inc
pusha
aas
mov
sub
xchg
mov
popa
mov
push
test
outs
clc
test
mov
inc
sbb
or
mov
popa
or
dec
mov
movs
cwde
repnz
jg
xor
cli
xor
and
pop
frstor
cmps
punpcklwd
add
mov
mov
and
loop
push
cwde
mov
mov
jle
dec
cmps
das
sub
cmps
jl
cmc
dec
push
or
dec
nop
pusha
in
add
int3
inc
jne
mov
aaa
mov
dec
push
xor
xchg
push
sub
(bad)
(bad)
stc
mov
push
mov
mov
jecxz
jecxz
or
mov
jge
aas
fstp
jg
mov
sbb
scas
(bad)
scas
sub
cmp
push
jmp
jmp
fldln2
std
popf
into
sbb
repnz
push
dec
sub
jo
jecxz
jmp
cmp
mov
jmp
xlat
icebp
cmps
retf
into
test
popf
pop
iret
in
stos
pop
add
sysenter
mov
int3
and
mov
xchg
cmc
cmc
mov
sbb
ret
icebp
dec
cmp
pop
pop
imul
das
pusha
leave
pusha
std
outs
jle
popf
sub
mov
bound
xor
mov
push
daa
sbb
mov
mov
jmp
(bad)
inc
jo
popa
jns
(bad)
adc
pop
pop
xchg
enter
loop
fdivr
pop
rol
cmps
adc
mov
xor
das
fist
pushf
mov
test
shl
fdiv
jecxz
enter
mov
clc
movsx
xchg
inc
sub
pop
mov
add
dec
sub
outs
arpl
push
push
xchg
inc
aad
out
loopne
add
test
loopne
fs
mov
or
xacquire
or
aad
popa
mov
mov
push
mov
ins
pop
into
enter
(bad)
arpl
popa
loopne
jne
in
fidivr
les
movs
xchg
pop
hlt
dec
enter
retf
push
dec
jnp
out
retf
xchg
pop
sbb
pushf
imul
add
mov
inc
scas
pop
add
jmp
popf
or
call
retf
jg
adc
sub
dec
mov
pop
sti
mov
sub
ror
loope
sahf
ins
mov
mov
dec
dec
push
jmp
jecxz
ins
jle
jne
push
mov
jecxz
stc
and
adc
push
rcr
mov
jmp
es
out
jmp
mov
movs
push
cmps
jmp
clc
jmp
cwde
or
cmps
jmp
data16
or
lock
fisub
xchg
test
dec
add
jmp
xchg
cld
pop
inc
and
add
jle
popf
loope
sbb
dec
outs
lods
jmp
pop
cmp
pop
je
(bad)
xor
movs
repz
jmp
retf
adc
mov
imul
xor
and
xchg
je
ret
jl
(bad)
(bad)
xchg
jl
xchg
push
adc
sub
xor
dec
jle
or
rcr
loop
pop
shl
sbb
or
mov
daa
mov
ins
mov
loope
mov
out
jnp
adc
xchg
mov
es
cmp
(bad)
sub
push
dec
dec
movs
outs
lea
or
mov
outs
mov
les
pop
scas
sar
sub
xchg
cs
jl
enter
into
mov
pop
sbb
jbe
or
js
in
je
(bad)
cmp
mov
fnsave
les
xor
xchg
pop
mov
ror
lea
jo
fs
mov
out
imul
js
pop
shr
clc
div
lods
lods
enter
and
adc
or
adc
das
add
movs
cmp
movs
mov
arpl
xchg
jg
pushf
jge
sub
outs
jle
outs
xchg
sub
and
sub
sbb
or
push
sub
adc
push
lds
sbb
mov
mov
sbb
idiv
loop
sbb
(bad)
xchg
enter
sub
(bad)
jmp
mov
pop
and
in
sti
lahf
ret
dec
sub
push
xlat
(bad)
fcomp
pushf
addr16
lea
add
lea
push
ins
sar
push
cmps
test
lds
sti
pop
add
mov
sub
mov
cmp
cmp
mov
sbb
sbb
cmp
aas
and
cmp
cmp
and
add
and
dec
pusha
arpl
pusha
arpl
outs
ins
gs
outs
imul
mov
mov
and
cs
and
das
stos
sub
mov
pop
pop
push
neg
dec
mov
cdq
mov
jl
outs
imul
(bad)
imul
pusha
dec
inc
pop
push
dec
inc
pop
lock
mov
test
push
adc
mov
dec
inc
push
inc
dec
inc
push
sbb
push
adc
sbb
shl
mov
repz
gs
cmps
movs
jmp
out
aas
sub
ficom
in
div
test
mov
lods
popf
(bad)
std
loop
les
(bad)
in
jecxz
lods
pushf
mov
jecxz
inc
inc
inc
inc
inc
inc
inc
add
mov
jg
jg
jg
jg
into
into
into
into
into
into
into
loopne
adc
loopne
loopne
out
out
push
rcr
jmp
test
lds
inc
inc
inc
inc
inc
inc
mov
mov
cdq
popa
data16
sbb
sbb
sbb
mov
mov
retf
retf
jle
jg
xor
mov
mov
shr
sub
call
call
inc
dec
dec
dec
dec
dec
mov
push
mov
mov
repz
int3
jecxz
or
dec
dec
cmp
movs
dec
dec
dec
gs
sbb
jl
cld
sub
sub
fisttp
xlat
or
daa
add
mov
pop
pop
pop
jecxz
jecxz
jecxz
jecxz
mov
(bad)
cmp
cmp
es
pusha
nop
pop
pusha
pusha
pusha
pusha
outs
outs
lahf
push
outs
outs
outs
outs
mov
mov
and
and
and
sub
sbb
sub
sub
push
pop
mov
mov
outs
outs
outs
outs
(bad)
dec
cmp
(bad)
dec
mov
mov
sub
int3
pop
mov
data16
dec
stos
mov
and
push
xor
ins
mov
cdq
or
jecxz
jecxz
out
out
out
out
(bad)
pop
and
div
div
or
jnp
sub
fstp
mov
mov
mov
mov
add
pop
movq
jg
jg
into
into
iret
fcmove
dec
xor
lock
loopne
outs
pop
out
(bad)
pop
adc
(bad)
out
out
(bad)
(bad)
(bad)
inc
inc
cmp
sub
inc
je
push
movs
push
inc
les
sbb
sbb
sbb
mov
mov
ret
into
cmp
xor
cmp
xor
mov
mov
rcl
and
lods
shl
adc
mov
sbb
sub
mov
mov
mov
xor
mov
mov
repz
mov
mov
mov
hlt
call
in
jl
jl
jl
jl
mov
mov
clc
enter
mov
enter
cmp
push
push
mov
ror
sbb
sbb
outs
ins
outs
push
cmp
cmp
es
sbb
es
pusha
pusha
loopne
and
pusha
outs
outs
outs
outs
outs
outs
outs
out
mov
mov
and
and
and
sub
sub
sub
int
lock
and
inc
scas
or
lea
ds
push
imul
not
and
cmp
fadd
push
nop
xchg
test
(bad)
xchg
xor
jl
xchg
mov
stos
xor
dec
dec
inc
dec
xor
sbb
js
inc
dec
adc
mov
inc
adc
or
clc
icebp
inc
fnstcw
arpl
jecxz
ficomp
fsub
pop
leave
jo
es
jle
xchg
lods
in
outs
cmp
xlat
mov
lods
or
repz
adc
imul
cwde
mov
pusha
jecxz
inc
stos
sub
icebp
cs
push
stos
xor
cmc
push
fbstp
ins
in
or
shr
mov
outs
loop
jno
ss
cmps
or
test
inc
shr
adc
sub
data16
sub
outs
jae
daa
bound
or
mov
icebp
rcr
dec
xchg
xor
adc
pop
or
in
rcl
xchg
pop
popa
xor
arpl
stos
mov
mov
lahf
xor
and
iret
repz
lahf
xor
test
pop
stc
cmp
jg
cmps
call
inc
fisttp
retf
fidiv
cld
jmp
imul
adc
or
lea
sub
mov
or
popf
scas
bound
xchg
add
sbb
push
push
in
(bad)
stos
enter
sbb
imul
sahf
xor
and
xchg
push
outs
(bad)
fwait
jae
dec
jp
stc
(bad)
pop
and
sub
dec
pop
xor
mov
gs
clc
in
or
mov
xor
addr16
outs
scas
nop
xchg
(bad)
sbb
dec
jge
pop
fmul
ins
xchg
test
cmp
or
cli
push
jno
scas
push
js
push
inc
push
mov
fistp
xchg
frstor
or
mov
lahf
fstp
mov
or
cli
sbb
sbb
sbb
dec
mov
not
retf
not
nop
push
xchg
fs
xor
stos
mov
jp
xchg
or
jne
inc
xchg
movs
lods
pop
fimul
data16
pop
pop
inc
jg
lods
cmp
daa
pop
icebp
out
jmp
loopne
jecxz
dec
and
mov
push
imul
xchg
add
inc
mov
jmp
mov
jb
sub
pop
adc
push
inc
cmp
sub
pop
mov
jmp
retf
lods
mov
(bad)
movs
cli
or
(bad)
ret
fadd
inc
int3
and
mov
cmp
popf
not
ror
jecxz
in
int3
pop
pusha
fld
(bad)
test
mov
push
movs
sbb
xchg
pop
inc
jl
call
jmp
and
cmc
enter
mov
scas
retf
rol
out
push
int3
and
dec
aas
bound
add
rol
push
cmps
outs
neg
loopne
lahf
lahf
repz
pusha
enter
call
rcl
(bad)
(bad)
movs
push
in
sbb
arpl
sbb
sub
mov
lds
mov
lock
ss
cs
sub
ret
into
ret
xchg
out
aaa
pushf
jb
adc
rcr
xchg
test
mov
rep
push
movs
push
push
imul
jle
mov
inc
ins
xor
push
pop
push
mov
test
lahf
repz
neg
jecxz
repnz
test
enter
jecxz
push
popf
push
xchg
leave
pop
push
xchg
lods
sub
fimul
pop
mov
add
lods
popf
push
or
dec
nop
jl
fwait
cmc
pop
sbb
mov
shr
inc
daa
int3
ins
pusha
jmp
shl
into
into
into
into
loopne
cmp
loopne
loopne
out
cs
out
lds
lds
fwait
jg
inc
inc
inc
jnp
push
mov
mov
pop
data16
cwde
ret
sbb
sbb
cmp
adc
retf
retf
jmp
add
mov
ins
or
rcl
rcl
xchg
dec
into
sub
pop
pop
pop
retf
jne
dec
dec
dec
loope
push
mov
lock
repz
sbb
mov
mov
call
jl
jl
or
(bad)
(bad)
(bad)
(bad)
loopne
pop
test
(bad)
out
pop
cmp
cmp
ret
or
pushf
mov
mov
and
sbb
mov
cmp
cmp
es
mov
pusha
pusha
pusha
pusha
mov
outs
outs
outs
cmp
xchg
loope
sbb
adc
sub
and
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
adc
sar
(bad)
(bad)
cmp
dec
dec
dec
mov
test
fnstenv
or
or
inc
push
mov
imul
jo
dec
dec
dec
pop
cmp
and
sbb
sbb
xchg
bound
xor
aaa
fsub
jecxz
jecxz
add
(bad)
out
out
js
loope
(bad)
ficom
div
test
js
lods
lods
lods
lods
loop
pop
mov
mov
xchg
lods
lods
lods
lods
mov
inc
inc
inc
sti
jbe
mov
pop
mov
dec
je
icebp
into
into
into
into
pusha
pop
xor
loopne
loopne
out
ins
cmp
out
lds
cli
(bad)
lds
inc
inc
inc
jae
pop
mov
mov
pop
data16
bswap
daa
sbb
sbb
iret
pop
ins
cmp
sbb
retf
retf
loop
xor
xor
pop
push
outs
cmp
in
rcl
rcl
iret
imul
pop
add
jne
dec
dec
dec
stc
jmp
mov
mov
dec
out
and
repz
mov
dec
movs
call
inc
jl
jl
pop
adc
(bad)
(bad)
inc
or
test
scas
jmp
cmp
xor
mov
and
sbb
popa
push
call
cmp
es
pop
pusha
pusha
pusha
pusha
iret
jge
push
outs
outs
outs
outs
sbb
mov
sbb
sub
stc
push
sub
sub
sbb
pop
push
dec
pop
mov
mov
push
outs
outs
outs
outs
(bad)
data16
sar
(bad)
call
popf
jb
dec
dec
dec
mov
test
fdiv
or
or
sbb
mov
imul
dec
dec
fstp
sbb
das
mov
mov
jecxz
fsub
jecxz
jecxz
push
sub
out
out
ds
loope
(bad)
fidiv
cmp
div
div
sub
arpl
stos
mov
mov
lods
lods
lods
lods
and
inc
inc
addr16
mov
pop
loopne
inc
jg
jg
scas
push
add
into
into
into
into
loopne
cs
loopne
loopne
mov
shr
out
out
out
push
fimul
cli
(bad)
vcvtdq2ps
inc
mov
mov
pop
data16
sbb
jg
jb
mov
xchg
pop
cmc
retf
retf
std
wrmsr
xor
xor
cmp
in
rcl
rcl
ja
fld
pop
pop
pop
pop
sub
dec
dec
inc
adc
mov
add
int3
repz
fnstcw
mov
mov
jmp
call
jl
(bad)
stc
sbb
(bad)
(bad)
(bad)
(bad)
dec
aas
add
enter
mov
cmp
cmp
mov
xlat
and
sbb
cmp
fld
dec
pop
push
push
es
push
inc
dec
pusha
pusha
pusha
pusha
add
push
pop
outs
outs
outs
sbb
add
xlat
retf
mov
inc
inc
dec
dec
and
and
dec
inc
inc
inc
pop
sub
sub
cmp
sub
pop
pop
in
in
out
mov
or
push
outs
outs
outs
mov
(bad)
(bad)
call
and
dec
dec
iret
(bad)
(bad)
int
test
imul
pop
imul
imul
and
and
sub
sbb
inc
jne
arpl
(bad)
rol
rol
mov
jecxz
jecxz
mul
jecxz
push
mov
out
cmp
(bad)
and
div
je
lods
mov
dec
jmp
mov
mov
inc
push
dec
inc
inc
inc
imul
xchg
mov
jle
jo
jg
sahf
lods
iret
(bad)
into
into
into
mov
loopne
loopne
mov
(bad)
lock
out
out
movs
cmps
(bad)
aad
(bad)
and
inc
push
pusha
inc
inc
inc
jecxz
mov
or
jbe
data16
jp
or
fnstsw
mov
ror
retf
push
xor
and
xor
sub
mov
mov
(bad)
shl
pop
pop
pop
out
dec
pop
push
shl
mov
xchg
repnz
repz
mov
xchg
mov
mov
clc
fwait
mov
jge
unpckhps
adc
(bad)
(bad)
(bad)
mov
movs
mov
enter
cmp
enter
mov
mov
sbb
pushf
jge
outs
sbb
cmp
cmp
pop
cmp
es
es
es
pusha
pusha
pusha
sbb
pusha
inc
outs
sub
daa
outs
cmp
mov
mov
and
inc
and
sub
sub
dec
sub
pop
pop
pop
cmp
mov
mov
outs
outs
or
outs
(bad)
(bad)
(bad)
call
dec
dec
dec
sub
dec
test
test
or
fs
or
imul
imul
dec
dec
dec
dec
es
cmp
sbb
sbb
jp
mov
mov
fdiv
jecxz
(bad)
jecxz
jecxz
out
out
out
out
(bad)
fisubr
div
test
lods
lods
fisubr
mov
mov
mov
lods
fild
xor
inc
add
cmp
jg
jg
jg
into
into
into
mov
loopne
loopne
loopne
loopne
out
out
out
fwait
out
pushf
out
(bad)
lds
inc
inc
xor
mov
mov
data16
data16
sbb
jge
ins
sbb
mov
retf
retf
xor
xor
push
xor
mov
mov
rcl
mov
pop
pop
pop
jbe
ins
pop
dec
dec
dec
dec
das
dec
aas
dec
mov
mov
fdiv
repz
repz
repz
mov
fbstp
call
jl
adc
adc
(bad)
mov
enter
enter
cmp
cmp
inc
cmp
mov
sbb
imul
cmp
dec
cmp
es
es
es
pusha
pusha
pusha
pop
pusha
adc
outs
sbb
outs
mov
mov
and
dec
and
sub
sub
sub
pop
pop
sub
pop
mov
out
outs
outs
outs
outs
or
outs
(bad)
(bad)
(bad)
call
dec
dec
ds
xor
fld
shr
or
or
imul
inc
imul
push
dec
dec
dec
sub
sbb
pop
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
fisubr
fisubr
xchg
test
lods
lods
out
mov
mov
lods
lods
lods
enter
outs
inc
add
adc
inc
out
in
sub
jg
sbb
jg
into
mov
xchg
into
into
xchg
xchg
loopne
loopne
loopne
out
out
out
xchg
mov
call
(bad)
sub
inc
ins
inc
or
mov
mov
das
xor
data16
ins
sbb
mov
fidivr
call
xor
mov
sar
rcl
sar
jne
cmp
pop
pop
add
dec
es
pushf
mov
mov
mov
mov
repz
fdivp
mov
out
mov
(bad)
mov
mov
call
push
jl
jl
jl
jl
(bad)
(bad)
(bad)
mov
enter
enter
cmp
adc
mov
shl
push
sbb
sbb
cmp
adc
push
arpl
es
es
es
pusha
xor
sub
pusha
sbb
outs
inc
outs
cmp
mov
retf
and
imul
dec
sub
pusha
sub
pop
pop
sub
mov
mov
mov
outs
inc
outs
sub
cmps
(bad)
(bad)
dec
push
dec
add
dec
dec
int3
test
in
test
pusha
or
or
imul
cmp
dec
cmp
dec
add
sbb
sbb
jp
call
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
ficomp
ficom
div
lods
loopne
int
dec
mov
sub
inc
cs
sub
or
enter
or
jg
jg
jg
into
into
into
mov
cmps
into
int
mov
loopne
out
fwait
out
ret
out
mov
test
(bad)
lds
inc
add
inc
loopne
jmp
data16
xor
sbb
sbb
xlat
mov
idiv
cmps
retf
sbb
xor
xor
mov
repnz
mov
pop
pop
pop
dec
pop
pop
pop
and
dec
addr16
add
mov
mov
mov
mov
repz
repz
mov
mov
mov
mov
call
push
jl
jl
jl
jl
(bad)
mov
mov
enter
enter
cmp
ins
cmp
cmp
mov
jmp
sbb
sbb
cmp
ja
cmp
inc
es
or
outs
es
pusha
pusha
adc
add
outs
outs
and
outs
int3
mov
icebp
mov
dec
and
sub
sub
sub
pop
adc
mov
mov
daa
outs
and
outs
mov
sahf
call
push
dec
and
dec
test
test
or
or
or
imul
imul
bound
dec
sbb
dec
dec
jo
je
jo
ss
mov
mov
mov
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
fidiv
fidivr
div
neg
lods
fldcw
mov
mov
lods
fisubr
add
inc
cs
sub
or
fld
or
jg
into
into
into
mov
cmps
into
int
mov
loopne
out
mov
ret
out
lods
out
(bad)
(bad)
mov
inc
pop
inc
add
inc
out
mov
mov
data16
xor
sbb
sbb
(bad)
mov
cld
mov
movs
retf
sbb
xor
xor
mov
repnz
mov
pop
inc
pop
inc
pop
pop
pop
cmp
dec
addr16
sbb
mov
mov
mov
mov
repz
repz
mov
mov
mov
mov
call
push
jl
jl
jl
jl
(bad)
scas
(bad)
movs
(bad)
mov
enter
enter
cmp
cmp
into
mov
loope
push
sbb
sbb
sbb
sbb
cmp
cmp
gs
es
es
es
pusha
pusha
pusha
adc
pusha
adc
outs
sub
mov
mov
and
and
push
sub
add
popa
sub
pop
pop
pop
cmp
cmp
mov
mov
outs
inc
outs
das
outs
stos
(bad)
(bad)
call
dec
or
dec
dec
dec
iret
test
jmp
or
or
imul
cmp
imul
dec
cmp
sbb
sbb
jle
call
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
fisubr
scas
div
test
lods
jmp
lods
lods
out
mov
mov
lods
lods
lods
enter
outs
inc
add
inc
inc
inc
out
lock
jg
sbb
jg
into
(bad)
into
xchg
into
into
mov
xchg
loopne
loopne
loopne
out
out
out
popf
out
sub
(bad)
mov
mov
inc
inc
inc
inc
and
inc
cmps
mov
mov
mov
dec
sub
sbb
sbb
sbb
mov
movs
retf
test
push
xor
push
xor
xchg
mov
mov
sar
rcr
pop
jne
fs
addr16
or
dec
addr16
std
mov
mov
mov
mov
repz
repz
mov
call
push
jl
jl
jl
jl
(bad)
mov
(bad)
(bad)
enter
enter
cmp
jns
cmp
lds
out
mov
outs
sbb
sbb
cmp
js
adc
push
inc
es
es
es
pusha
pusha
pusha
adc
pusha
push
outs
inc
outs
and
outs
mov
mov
jbe
ins
and
and
sub
jae
sbb
pop
cmp
mov
mov
mov
outs
inc
outs
sub
mov
inc
dec
dec
dec
dec
dec
fisubr
test
or
or
or
imul
imul
dec
dec
sub
dec
sbb
push
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
fidivr
imul
test
ret
lods
out
lods
enter
out
mov
mov
lods
lods
lods
xor
inc
sub
or
add
jg
jg
jg
into
into
into
stos
into
mov
loopne
loopne
loopne
out
popf
out
ret
out
mov
lds
or
inc
inc
inc
out
mov
mov
data16
xor
sbb
sbb
fidivr
repz
scas
retf
sbb
xor
xor
mov
stc
mov
mov
mov
pop
inc
pop
pop
pop
das
dec
and
addr16
sbb
mov
mov
mov
mov
repz
mov
mov
mov
mov
mov
call
push
jl
jl
jl
jl
(bad)
movs
(bad)
sti
(bad)
xchg
(bad)
or
enter
enter
cmp
cmp
ret
mov
pop
sbb
sbb
sbb
sbb
cmp
jbe
cmp
inc
es
or
jne
ss
pusha
pusha
add
outs
daa
outs
and
outs
fnstsw
idiv
inc
and
add
jns
jnp
sub
and
pop
jne
sbb
mov
mov
outs
sbb
outs
outs
outs
outs
sahf
call
jmp
aas
dec
test
test
or
or
or
imul
imul
bound
dec
xor
sbb
sbb
shl
lds
xchg
jecxz
jecxz
out
out
out
out
(bad)
fidivr
neg
test
fisubr
mov
mov
lods
lods
lods
and
inc
outs
inc
cs
loop
add
jg
jg
jg
jg
into
mov
into
and
xchg
loopne
out
popf
out
(bad)
out
out
out
movs
lds
lds
inc
inc
inc
and
inc
cmps
mov
mov
mov
dec
popw
data16
sbb
jns
bound
xchg
mov
xchg
mov
mov
xor
xor
dec
xor
mov
mov
cmps
sar
pop
jne
jb
addr16
sub
dec
dec
dec
shl
shl
xchg
repz
repz
mov
mov
mov
mov
call
sbb
jl
jl
(bad)
mov
(bad)
stos
enter
enter
cmp
cmp
dec
cmp
mov
gs
sbb
sbb
cmp
cmp
pop
cmp
es
es
es
add
pusha
sbb
outs
or
outs
xchg
mov
mov
and
and
dec
sub
sub
dec
sub
xor
xor
pop
in
mov
mov
outs
outs
outs
or
outs
mov
sar
xchg
dec
dec
sub
dec
test
test
or
or
or
imul
imul
xor
sbb
sbb
(bad)
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
fidivr
neg
test
ret
lods
(bad)
lods
out
mov
sub
lods
es
sub
inc
jmp
add
jg
jg
jg
jg
into
mov
into
xchg
loopne
loopne
loopne
loopne
out
xchg
out
(bad)
out
out
out
mov
lds
inc
and
mov
mov
mov
dec
data16
ja
sbb
jge
imul
mov
mov
retf
test
xor
inc
xor
mov
mov
sar
pop
pop
jb
fs
addr16
das
dec
sub
dec
aam
ret
mov
mov
repz
repz
mov
mov
mov
mov
call
adc
sbb
sti
(bad)
mov
(bad)
lods
enter
enter
cmp
cmp
dec
cmp
mov
outs
sbb
sbb
sbb
cmp
cmp
cmp
es
es
es
pusha
adc
outs
outs
outs
or
outs
xchg
mov
mov
and
and
push
sub
sub
sub
cs
cmp
mov
mov
outs
outs
outs
or
outs
sar
call
dec
sub
pusha
dec
and
fld
shr
or
or
imul
imul
sub
dec
sbb
jle
sbb
shl
aam
and
jecxz
jecxz
jecxz
out
out
out
out
fisubr
test
div
nop
test
lods
lods
lods
in
mov
mov
lods
lods
lods
retf
lods
outs
inc
es
xor
inc
in
test
jg
jg
jg
jg
into
cmps
into
mov
loopne
loopne
loopne
loopne
out
out
out
xchg
pushf
out
call
(bad)
sub
inc
ins
inc
sub
mov
mov
push
adc
data16
popa
sbb
mov
fstp
scas
retf
pop
xor
sbb
mov
enter
mov
mov
pop
arpl
cmp
jle
ds
dec
dec
and
dec
pushf
mov
mov
mov
mov
repz
repz
xchg
repz
mov
call
pop
jl
jl
jl
jl
(bad)
(bad)
(bad)
mov
enter
enter
cmp
cmp
push
cmp
mov
gs
sbb
sbb
cmp
cmp
dec
cmp
es
es
es
push
pusha
dec
pusha
or
sbb
outs
add
outs
xchg
mov
mov
and
and
inc
sub
sub
sub
xor
pop
pop
pop
in
out
movs
mov
mov
outs
outs
outs
add
outs
sar
xchg
call
dec
ds
pusha
dec
das
dec
(bad)
test
fisubr
jne
or
push
imul
inc
imul
cmp
dec
and
dec
sbb
je
sbb
fnstenv
aad
xchg
jecxz
(bad)
jecxz
jecxz
out
out
out
out
fidiv
ficomp
test
int
lods
lods
cli
mov
mov
lods
lods
lods
(bad)
xor
inc
inc
inc
repz
scas
and
or
jg
jg
into
mov
into
xchg
loopne
loopne
loopne
loopne
out
sub
mov
mov
mov
inc
and
inc
inc
inc
cli
mov
mov
mov
data16
ja
xor
mov
retf
retf
mov
xor
sbb
mov
fnstcw
rcl
shl
pop
cmp
jns
and
dec
das
dec
pushf
mov
mov
mov
mov
repz
repz
xor
mov
mov
mov
mov
call
(bad)
adc
push
jl
(bad)
mov
(bad)
mov
enter
cmp
cmp
cmp
shl
mov
sbb
sbb
dec
cmp
cmp
push
es
es
pusha
push
pusha
dec
pusha
or
outs
outs
outs
outs
outs
retf
mov
xchg
mov
and
and
pop
sub
add
dec
sub
pop
pop
sub
pop
movs
mov
mov
mov
outs
sbb
add
(bad)
(bad)
dec
das
dec
sub
pusha
dec
lds
(bad)
test
jg
jle
inc
imul
sbb
imul
dec
cmp
sbb
sbb
imul
(bad)
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
fidivr
fiadd
test
fild
mov
mov
lods
fild
cmp
inc
inc
inc
test
jg
or
jg
into
cmps
into
mov
loopne
loopne
loopne
loopne
out
out
out
call
lds
xor
inc
xor
stc
mov
mov
adc
adc
ins
sbb
xor
mov
int
out
mov
retf
dec
xor
mov
lds
rcl
shl
ins
pop
cmp
bound
xor
dec
es
sub
mov
mov
mov
mov
repz
mov
mov
mov
mov
call
push
jl
jl
jl
jl
(bad)
movs
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
enter
cmp
cmp
cmp
mov
shl
sbb
sbb
cmp
push
cmp
cmp
or
dec
punpcklbw
sbb
pusha
inc
outs
sbb
or
outs
ret
mov
push
and
and
push
and
push
sub
sub
adc
sub
cmp
loopne
in
cli
cli
out
test
dec
or
add
fistp
ins
jge
push
test
xchg
cmps
ficomp
and
popa
push
push
adc
fs
dec
pop
xchg
fnstcw
sub
sub
movs
xchg
rcr
bnd
jecxz
test
out
out
dec
or
sti
div
div
aad
lods
clc
retf
lods
lods
mov
pop
fsubr
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
out
addr16
sbb
sbb
sbb
mov
mov
retf
retf
retf
xor
xor
xor
xor
mov
ret
rcl
rcl
pop
pop
pop
pop
push
pop
pop
pop
xor
dec
pop
mov
mov
popa
es
repz
dec
dec
dec
mov
mov
ficomp
fwait
mov
jl
jl
jl
(bad)
(bad)
(bad)
fimul
(bad)
js
leave
fmul
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
test
cmp
cmp
cmp
(bad)
fldenv
es
pusha
rcl
popa
jo
outs
outs
outs
outs
outs
outs
outs
mov
das
mov
xor
and
and
sub
sub
sub
sub
pop
dec
dec
and
inc
dec
mov
outs
outs
outs
(bad)
(bad)
(bad)
inc
add
add
dec
dec
or
fisubr
mov
or
or
imul
imul
imul
pop
daa
aaa
dec
pop
aas
sbb
sbb
sbb
mov
mov
dec
dec
dec
dec
jecxz
jecxz
mov
sahf
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
mov
out
div
imul
lods
lods
rol
mov
mov
cld
lods
lods
dec
pop
inc
inc
aad
inc
inc
and
aam
outs
jg
jg
jno
mul
retf
inc
jne
retf
into
into
loopne
loopne
loopne
shl
shr
cmps
sbb
lods
stos
xchg
lods
and
adc
bound
ret
in
add
dec
inc
data16
je
push
jns
jge
sbb
mov
jmp
dec
pop
inc
jge
pop
pop
jmp
sahf
sahf
mov
mov
bound
jb
cmp
es
add
daa
aam
mov
call
sbb
in
fcmovnb
(bad)
(bad)
call
or
xor
or
pop
shl
pushf
test
fmul
enter
cmp
dec
pop
inc
xlat
mov
mov
sbb
push
pop
push
cmp
cmp
cmps
xor
es
and
es
adc
sbb
or
outs
arpl
outs
pop
mov
ffree
push
push
pop
and
sub
sub
pop
dec
push
sub
and
pop
pop
pop
mov
mov
sbb
dec
pop
(bad)
(bad)
(bad)
jmp
dec
dec
dec
arpl
cs
into
test
test
and
pop
dec
xor
sub
imul
dec
dec
dec
dec
dec
dec
xor
inc
pop
push
mov
mov
rcl
jecxz
int
mov
ret
mov
mov
(bad)
fcmovu
(bad)
fdiv
mov
lods
ror
mov
in
lods
lods
lods
lods
cmp
inc
inc
inc
inc
inc
lods
rcl
cmps
fcmovne
fnstcw
jg
add
jg
into
into
into
loopne
pushf
call
loopne
outs
iret
out
out
out
out
out
jmp
xchg
xchg
loope
xchg
popf
inc
inc
inc
inc
enter
(bad)
mov
fild
ss
data16
cmp
sbb
sbb
xchg
cld
in
jmp
out
in
retf
pop
jmp
retf
xor
push
jae
fs
in
std
mov
repnz
xlat
rcl
sar
push
inc
inc
xor
dec
dec
dec
dec
dec
jmp
mov
ret
aad
xchg
repnz
mov
mov
(bad)
rcl
out
sti
mov
call
jl
clc
movs
mov
mov
lods
test
enter
cmp
cmp
cmp
ret
pop
dec
dec
sub
sbb
sbb
inc
cmp
dec
cmp
cmp
push
inc
inc
push
inc
add
aaa
push
pusha
pusha
pusha
pusha
dec
push
outs
outs
inc
outs
outs
outs
xchg
retf
int3
fstp
and
and
jp
sub
sub
sub
jbe
cmp
sub
jl
int
fbstp
cmp
outs
outs
sub
outs
ror
fild
sub
dec
xor
test
lods
test
js
sub
dec
imul
not
push
dec
dec
dec
dec
popa
cmp
inc
inc
sbb
sbb
pop
retf
mov
mov
mov
int
xchg
add
mov
out
call
lock
stos
mov
div
div
add
lods
lods
fsubr
out
jmp
jmp
repnz
lods
lods
lods
lea
lods
lods
adc
inc
ins
es
and
loop
xor
add
push
sbb
mov
into
into
into
xor
loope
hlt
loopne
loopne
xchg
ffree
(bad)
sub
inc
inc
inc
outs
sub
(bad)
jmp
es
data16
data16
jns
jns
cs
das
mov
retf
stos
mov
loopne
xor
sar
enter
rcl
push
pop
pop
cmp
fs
dec
dec
dec
dec
cli
dec
dec
cmp
xlat
fcom
repz
mov
hlt
mov
mov
std
cld
repz
jmp
jl
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
jmp
cmp
cmp
cmp
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
mov
jne
pusha
pusha
push
outs
outs
outs
fwait
adc
mov
mov
and
and
and
and
sub
and
sub
push
pop
pop
pop
pop
pop
pop
pop
cmp
mov
js
outs
jle
outs
outs
outs
loope
(bad)
out
(bad)
(bad)
(bad)
jmp
dec
pop
dec
dec
dec
dec
xchg
test
sbb
repz
jb
jnp
imul
push
dec
pop
dec
dec
dec
dec
pop
add
or
in
in
scas
mov
mov
mov
jecxz
jecxz
jmp
imul
out
out
(bad)
(bad)
aad
(bad)
xchg
out
mul
std
div
test
lods
mov
mov
mov
lods
lods
lods
lods
cmp
push
mov
call
sti
data16
jg
jg
inc
xlat
iret
fidiv
xor
xor
loope
loopne
loopne
retf
(bad)
sahf
adc
adc
ffree
aad
(bad)
sbb
inc
inc
inc
pop
test
mov
data16
sbb
sbb
sbb
inc
inc
inc
inc
mov
retf
sbb
retf
xor
xor
iret
iret
iret
mov
inc
inc
inc
rcl
rcl
sub
or
pop
stos
or
pop
dec
dec
dec
dec
mov
mov
mov
mov
popa
dec
dec
dec
repz
mov
mov
stos
mov
call
gs
jl
test
add
sub
sub
enter
xlat
enter
cmp
mov
(bad)
mov
pop
pop
pop
sbb
sbb
loop
jecxz
jae
cmp
push
sbb
sub
es
(bad)
pusha
pusha
pusha
pusha
mov
lahf
lahf
outs
outs
outs
outs
xchg
nop
nop
nop
mov
xchg
and
sbb
sub
xlat
(bad)
(bad)
(bad)
pop
pop
pop
pop
lock
cmps
cmps
mov
ja
outs
outs
outs
outs
enter
(bad)
(bad)
(bad)
inc
(bad)
out
dec
js
pop
mov
mov
test
push
push
push
or
or
repnz
push
imul
imul
dec
dec
mov
mov
sbb
sbb
ret
in
in
mov
mov
dec
dec
dec
jns
jecxz
inc
shl
repz
out
out
out
out
(bad)
ficom
or
or
div
not
push
push
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
cmp
push
popa
inc
rcr
add
jle
jg
pop
add
into
into
into
into
into
into
into
into
loopne
loopne
loope
loopne
out
out
out
out
adc
adc
(bad)
lds
inc
inc
inc
mov
mov
fwait
out
mov
push
push
data16
sbb
sbb
mov
scas
jle
retf
fcmove
retf
fsub
xor
inc
inc
inc
inc
mov
rcl
rcr
pop
pop
pop
pop
(bad)
push
pop
dec
dec
dec
dec
mov
mov
mov
mov
mov
(bad)
repz
or
or
mov
mov
dec
dec
dec
call
gs
jl
push
sub
(bad)
(bad)
(bad)
xor
sub
enter
sbb
aaa
aaa
cmp
cmp
mov
(bad)
mov
(bad)
sbb
fs
fild
sub
mov
es
fldenv
pusha
pusha
sahf
lahf
lahf
lahf
outs
outs
outs
outs
sbb
outs
jg
mov
inc
inc
and
and
neg
fstp
sub
sub
xlat
(bad)
(bad)
(bad)
pop
pop
pop
pop
lahf
and
dec
mov
ja
outs
outs
outs
outs
mov
(bad)
(bad)
inc
add
add
dec
pop
or
dec
pop
test
push
push
push
or
or
aam
repz
xchg
xchg
xchg
xchg
dec
dec
dec
dec
pusha
(bad)
dec
pop
sbb
sbb
in
in
mov
mov
outs
dec
dec
dec
jecxz
jecxz
sbb
out
out
popa
out
(bad)
(bad)
and
and
div
div
or
or
push
push
mov
mov
push
push
push
push
inc
inc
inc
inc
fwait
mov
add
jg
jg
clc
jg
into
into
into
into
xor
xor
loopne
loopne
cmp
pop
pop
out
out
out
out
adc
adc
(bad)
lds
(bad)
inc
inc
inc
mov
mov
je
data16
cdq
cdq
cdq
sbb
sbb
xlat
mov
or
inc
inc
inc
retf
retf
xor
xor
iret
iret
iret
mov
das
mov
rcl
rcl
sar
test
pop
jmp
dec
dec
dec
sahf
mov
mov
mov
mov
dec
dec
dec
repz
mov
mov
dec
dec
dec
call
gs
jl
add
(bad)
sahf
jns
(bad)
enter
ss
aaa
aaa
cmp
cmp
loopne
mov
pop
pop
pop
pop
sbb
sbb
in
sbb
cmp
cmp
mov
es
fldenv
pusha
pusha
sahf
lahf
lahf
lahf
outs
outs
outs
outs
inc
fld
mov
inc
inc
inc
and
and
xchg
fstp
(bad)
sub
sub
(bad)
(bad)
(bad)
pop
pop
pop
pop
cmp
pop
dec
mov
ja
outs
outs
outs
outs
mov
(bad)
(bad)
inc
add
add
dec
dec
leave
stc
dec
pop
test
push
push
push
or
or
fdiv
repz
xchg
xchg
xchg
xchg
dec
dec
dec
dec
adc
sbb
sbb
in
in
mov
mov
dec
dec
dec
jecxz
jecxz
sbb
out
out
and
neg
(bad)
fisub
and
and
div
mul
or
or
push
push
mov
mov
push
push
push
push
inc
inc
inc
inc
(bad)
mov
add
jg
jg
mov
outs
into
into
into
into
xor
xor
loopne
loopne
sub
pop
pop
out
out
out
out
adc
adc
(bad)
lds
inc
inc
mov
mov
je
data16
cdq
cdq
cdq
sbb
sbb
loop
sbb
mov
inc
inc
inc
retf
retf
xor
xor
iret
iret
iret
mov
push
mov
shr
pop
pop
pop
iret
call
dec
dec
mov
mov
pop
mov
mov
repz
and
mov
mov
enter
fwait
call
jge
jl
sahf
push
xlat
(bad)
call
enter
enter
cmp
cmp
(bad)
out
xlat
in
(bad)
xlat
dec
pop
xor
jo
push
push
pop
pop
jge
dec
ja
push
jbe
es
movs
daa
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
inc
jmp
outs
outs
mov
mov
and
and
popa
or
sub
lods
sub
pop
pop
pop
pop
pop
pop
pop
pop
(bad)
push
mov
push
jmp
outs
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
jge
(bad)
call
into
dec
dec
test
test
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
mov
mov
xlat
xor
jecxz
data16
inc
arpl
out
arpl
out
pop
(bad)
add
(bad)
sbb
div
add
mul
sub
mov
jnp
lods
fldenv
lods
lods
and
inc
inc
adc
inc
inc
ror
xor
jle
imul
jg
inc
iret
into
and
into
outs
data16
inc
data16
push
push
out
out
sub
inc
(bad)
lds
inc
inc
jle
inc
inc
fisttp
mov
or
mov
loope
data16
data16
sbb
fcomp
mov
mov
fadd
retf
xor
jo
xor
in
xor
mov
mov
pop
rcl
xchg
lahf
push
pop
cdq
lahf
push
pop
(bad)
ret
in
dec
dec
jno
mov
cmp
jnp
repz
jp
repz
cmp
fwait
call
jge
cs
jge
mov
(bad)
mov
inc
leave
enter
enter
cmp
sub
mov
or
pushf
sub
cmp
and
cmps
cmp
cmps
js
pusha
loopne
pusha
pusha
loopne
outs
outs
out
outs
outs
out
mov
ds
and
and
sub
sub
lds
sub
cmp
iret
in
cld
retf
add
add
add
and
xchg
call
aas
cmp
sub
or
and
retf
dec
stos
loopne
gs
ins
pusha
gs
sub
add
add
or
sbb
sub
and
push
jne
dec
imul
je
fld
mov
mov
fadd
(bad)
mov
mov
mov
test
call
fsub
int
fsubr
(bad)
in
mov
(bad)
fmulp
call
aaa
sub
(bad)
out
in
out
shr
push
adc
sbb
mov
mov
loopne
test
xchg
xchg
mov
cs
pop
inc
add
stc
in
out
clc
clc
mov
and
adc
pop
adc
imul
jge
mov
icebp
cli
repz
clc
in
cmps
cmps
retf
xor
pop
pop
push
pop
fdiv
aad
fld1
sar
mov
rol
and
cmp
es
add
push
add
mov
repz
xor
rcr
(bad)
(bad)
call
sbb
push
sbb
mov
movs
xchg
mov
mov
cwde
mov
dec
cmp
rcl
xlat
out
jle
jnp
push
outs
cmp
xlat
cmp
inc
push
gs
dec
push
dec
add
or
add
add
push
ins
and
fxch
(bad)
retf
rol
dec
jno
inc
push
dec
inc
inc
sub
sub
sub
cmp
into
in
jmp
ds
sbb
sub
stos
xchg
xchg
sahf
xchg
fwait
and
sub
xor
rol
out
rol
imul
imul
add
or
sub
aas
cmp
jne
jb
outs
jle
mov
mov
rol
in
adc
or
sub
mov
call
std
fxch
(bad)
cld
out
clc
in
in
out
in
enter
ret
fxch
xor
inc
add
aaa
add
icebp
icebp
out
not
icebp
adc
or
sbb
iret
mov
xchg
test
test
out
xchg
in
and
mov
and
out
(bad)
out
mov
adc
pop
je
bound
push
jno
retf
neg
(bad)
mov
mov
scas
pop
inc
pusha
inc
pop
push
push
inc
iret
mov
into
sar
and
pop
pop
std
pop
(bad)
sub
fcomp
(bad)
mov
mov
xchg
xchg
shl
fstp
sar
aad
dec
call
sbb
adc
pop
pop
sbb
mov
mov
lods
dec
je
dec
dec
jge
dec
int3
shl
xlat
jo
jb
jne
js
cld
cmp
push
push
dec
inc
es
jb
adc
add
adc
cmp
sbb
(bad)
out
(bad)
int
mov
push
fs
inc
dec
sub
outs
pop
dec
dec
adc
cmp
cmp
and
mov
in
cld
fdivr
out
das
or
sbb
sbb
cld
mov
sahf
fwait
add
aas
sub
xor
sar
test
fsub
gs
jne
imul
sub
or
sub
add
ja
push
jp
rcr
shl
iret
loopne
mov
out
mov
xchg
mov
stos
xchg
mov
mov
xchg
xchg
xchg
lods
scas
in
int
retf
out
in
mov
mov
enter
std
lods
lods
outs
inc
str
and
adc
icebp
jmp
jge
sbb
sub
sbb
stos
into
into
adc
cmps
test
xchg
sahf
mov
cmp
lea
mov
inc
or
retf
in
mov
adc
jl
ja
jge
jns
fidivr
retf
lock
mov
jae
jns
push
sar
stc
mov
mov
inc
arpl
jns
cmp
or
aam
hlt
ffreep
fadd
ficomp
mov
rol
jecxz
(bad)
mov
(bad)
out
retf
stc
dec
sysenter
sbb
xlat
xchg
mov
xchg
mov
lods
test
push
cmp
dec
imul
retf
neg
sar
sbb
dec
sbb
push
jg
push
pop
jnp
inc
inc
inc
push
push
es
gs
adc
adc
es
add
outs
cmc
outs
sub
int3
sti
xlat
(bad)
retf
xlat
aam
popa
jb
and
push
inc
pop
inc
inc
dec
adc
pop
fistp
cld
(bad)
in
shr
or
or
cmp
mov
mov
xchg
sub
sub
dec
push
sub
out
rol
stc
mov
js
jle
je
or
outs
cmp
add
push
sub
and
and
sbb
sbb
jle
outs
jle
(bad)
shl
mov
mov
call
mov
(bad)
aad
ficomp
xchg
(bad)
xchg
call
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
out
in
out
mov
mov
dec
dec
dec
dec
test
mov
in
inc
jmp
push
imul
imul
dec
pop
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
dec
jae
mov
inc
cmp
xchg
mov
hlt
retf
(bad)
(bad)
div
div
test
lods
lods
push
push
push
push
mov
mov
lea
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
out
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
push
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
fcmovbe
(bad)
(bad)
ror
enter
enter
(bad)
push
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
std
outs
jg
mov
mov
and
mov
xor
sub
sub
sub
sub
pop
pop
pop
retf
mov
mov
outs
cld
outs
jle
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
fisttp
test
test
or
or
or
imul
cld
push
dec
dec
dec
dec
dec
dec
dec
dec
retf
daa
sbb
dec
and
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
sahf
dec
(bad)
into
arpl
out
div
imul
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
mov
add
jg
jg
(bad)
jg
jne
into
into
into
iret
int3
retf
loopne
loopne
jecxz
loopne
ins
xchg
ins
iret
out
out
out
(bad)
lds
(bad)
inc
inc
inc
loope
inc
inc
mov
imul
data16
call
sbb
jle
gs
mov
retf
retf
xor
xor
xor
xor
mov
inc
mov
rcl
pop
pop
pop
mov
jmp
dec
dec
mov
mov
mov
mov
repz
mov
xor
call
jl
jl
retf
jl
je
je
(bad)
xor
xchg
enter
enter
cmp
cmp
cmp
pop
mov
sbb
bound
cmp
cmp
ja
js
push
es
or
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
imul
(bad)
and
pop
mov
sub
sub
sub
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
cmps
cmps
cmps
cmps
cmps
cmps
cmps
cmps
jecxz
jecxz
jecxz
ret
ret
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
push
pop
mov
mov
mov
movs
cmps
cmps
mov
dec
dec
dec
inc
inc
inc
cmp
loop
loopne
pop
pop
pop
push
push
push
push
jne
ja
imul
jno
jg
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aad
aad
aad
aad
push
push
push
push
push
push
push
push
mov
stos
stos
inc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
cmp
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
retf
retf
retf
xor
xor
xor
xor
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
jmp
or
push
pop
add
xchg
xchg
xchg
nop
(bad)
mov
cmp
test
jmp
dec
dec
dec
dec
inc
inc
inc
and
es
sbb
sbb
sbb
push
adc
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
dec
data16
sbb
sbb
jecxz
mov
scas
xchg
imul
xchg
imul
ins
xchg
xor
ins
xchg
xor
loopne
mov
lods
(bad)
jb
ret
lods
lods
lods
lods
push
adc
sub
dec
pop
sub
dec
pop
rcl
mov
rcl
mov
xchg
push
repnz
push
repnz
adc
mov
call
gs
jl
jl
jl
(bad)
(bad)
(bad)
(bad)
out
hlt
xlat
(bad)
enter
out
mov
addr16
push
pop
int3
jecxz
mov
sbb
sbb
xor
pop
dec
pop
pop
pop
pop
inc
pop
pop
push
push
dec
dec
dec
push
push
add
and
inc
popa
jo
outs
outs
outs
inc
push
cs
rcr
enter
dec
bound
inc
bound
adc
sub
sub
sub
jbe
sbb
pop
cmp
xor
out
enter
outs
outs
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
shr
or
mov
imul
imul
dec
dec
sti
iret
dec
dec
cmps
test
sbb
or
mov
test
jecxz
jbe
jecxz
ins
out
js
out
jne
(bad)
inc
ins
(bad)
jle
div
mov
test
lods
lods
cmp
mov
cmp
lods
lods
jns
inc
inc
pop
retf
push
xlat
add
repz
pop
xchg
jg
sub
into
xchg
into
into
sub
loopne
repz
loopne
out
out
out
cmps
out
out
out
mov
(bad)
(bad)
dec
inc
inc
inc
inc
inc
inc
inc
mov
mov
arpl
pushw
sbb
sbb
sbb
sbb
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
popf
jb
jb
jno
mov
mov
mov
mov
dec
daa
dec
sbb
addr16
adc
sar
cli
xchg
jp
dec
aam
aam
(bad)
(bad)
(bad)
(bad)
repz
mov
ja
ja
ja
mov
and
pop
cmp
and
and
and
xchg
xchg
xchg
jo
adc
in
lock
lods
or
or
or
dec
xchg
mov
int3
out
xchg
out
mov
mov
jo
outs
sub
push
ja
ja
ja
mov
stos
(bad)
fwait
(bad)
mov
mov
int
mov
mov
mov
movs
popf
movs
(bad)
movs
mov
inc
jl
jl
xor
(bad)
(bad)
test
push
out
clc
fyl2xp1
xlat
stc
repnz
jge
in
or
or
or
xchg
fist
test
mov
or
adc
clc
adc
cmp
out
pop
call
pop
leave
pop
ins
mov
push
mov
push
and
or
adc
pop
sbb
sbb
sbb
sbb
ins
(bad)
ins
(bad)
ins
sahf
ins
inc
mov
push
mov
pushf
pop
xchg
pop
dec
clc
leave
icebp
leave
jmp
jnp
jnp
lahf
out
lahf
in
(bad)
lahf
ins
cmp
lea
popf
cmp
pop
jg
dec
pop
cs
sbb
dec
jbe
jbe
jbe
and
push
and
adc
inc
mov
ficomp
fidiv
inc
fbld
fidiv
fsub
sbb
push
loopne
loopne
enter
leave
xchg
fcom
lods
lods
mov
mov
or
jo
jo
ja
ja
mov
mov
mov
mov
inc
int3
inc
sub
inc
jb
xor
repz
loopne
loopne
pop
loopne
loopne
fist
mov
inc
not
idiv
imul
jae
jae
jae
je
mov
icebp
mov
mov
sub
test
mov
cld
sti
cld
xchg
xchg
cld
pop
push
dec
push
mov
mov
lahf
mov
mov
jbe
jns
(bad)
jmp
cs
bnd
jbe
jbe
ja
mov
mov
into
dec
into
js
push
mov
mov
movs
(bad)
movs
shl
jmp
call
shl
xor
stos
pop
scas
pop
movs
pop
pusha
pushf
outs
pushf
jb
jne
out
sbb
sbb
sbb
cdq
cmp
cmp
or
or
push
adc
pushw
arpl
sub
push
sbb
pop
fcomp
pop
movs
pop
outs
mov
inc
mov
adc
adc
cwde
sbb
add
push
push
push
mov
retf
pop
in
pop
lock
(bad)
pop
cmp
sub
push
retf
adc
mov
inc
js
js
js
pushf
(bad)
pushf
sub
cmp
cmp
cmp
pop
ret
jae
jae
jae
jb
and
iret
and
push
mov
or
mov
fcomp
(bad)
out
xchg
out
(bad)
(bad)
out
(bad)
inc
cli
(bad)
out
into
iret
clc
xchg
hlt
xchg
lock
int3
xchg
out
mov
mov
mov
mov
xchg
aad
rcl
jge
jge
jge
mov
add
jg
jg
(bad)
repnz
in
cli
cli
mov
aam
aam
fidiv
fcmovu
fcmovnu
fisttp
lock
ja
ja
ja
mov
mov
mov
mov
pop
adc
pop
(bad)
and
and
cli
xchg
push
rep
repz
mov
sti
or
or
or
xchg
xchg
jb
sbb
sub
sub
sub
sub
imul
mov
mov
into
and
ror
leave
int
mov
mov
call
jge
jl
dec
inc
dec
xchg
out
out
out
out
clc
jge
or
add
loop
fmul
ror
retf
or
cmps
xchg
lods
xchg
mov
aas
sub
dec
sub
mov
out
or
pop
ds
adc
adc
push
sbb
push
fist
pop
fcomp
xchg
pop
repnz
(bad)
adc
and
mov
adc
lods
adc
bound
mov
mov
mov
mov
push
out
cld
push
icebp
push
push
les
and
push
les
jno
jno
xchg
call
jo
movs
xor
push
jg
ja
sub
jb
jb
jb
jb
mov
es
pop
mov
mov
(bad)
ffree
fstp
(bad)
fcom
loopne
loopne
loopne
enter
enter
xchg
mov
xchg
mov
mov
mov
xchg
sub
mov
rol
out
add
outs
dec
push
dec
dec
sub
(bad)
mov
inc
inc
ror
shl
fiadd
fucomip
hlt
(bad)
hlt
cdq
hlt
cmps
hlt
cmp
jno
jno
jno
mov
ds
jge
push
push
imul
sub
mov
mov
mov
and
mov
dec
bnd
call
or
mov
mov
adc
aad
fsubp
or
cmp
and
pop
and
jg
jg
jge
jge
xchg
push
xchg
inc
retf
loope
jmp
aam
hlt
(bad)
(bad)
pop
mov
das
mov
inc
inc
xor
in
movs
in
pop
in
jp
jle
pslld
sub
sub
and
sbb
adc
loopne
icebp
cwde
call
lahf
daa
(bad)
daa
mov
add
mov
mov
mov
sbb
inc
pop
pop
push
or
push
mov
mov
xchg
and
and
mov
sti
sbb
cmp
sbb
add
push
push
push
mov
cmp
test
mov
xchg
int3
addr16
push
int3
mov
jle
jns
jns
popf
repz
int3
popf
dec
popf
in
cld
cmp
cmp
cmp
pop
neg
jp
jns
jns
js
sub
sub
sub
sub
xor
sbb
aam
(bad)
fcmovnbe
fild
fistp
fsub
repnz
in
in
int
retf
pop
retf
dec
nop
push
nop
cmps
xchg
xchg
mov
mov
mov
mov
nop
fist
out
jle
jle
jle
jle
mov
pop
mov
jmp
jg
sar
loope
jp
std
inc
shl
inc
fcom
lods
fnsave
not
test
iret
je
je
je
jne
mov
pop
mov
jo
push
push
dec
fisubr
repz
lea
mov
repnz
repnz
repz
or
movs
or
xchg
xchg
add
out
pop
sub
sub
sub
add
ja
ja
ja
mov
(bad)
dec
scas
int
int
int
mov
mov
mov
sbb
lods
push
xchg
inc
lea
inc
stc
jmp
(bad)
(bad)
mov
enter
xchg
outs
or
push
jle
inc
call
int3
daa
pop
and
mov
test
in
sbb
sbb
or
jmp
pop
test
mov
outs
mov
mov
je
push
adc
and
push
sbb
push
push
push
mov
fwait
mov
fistp
pop
sub
(bad)
retf
ror
retf
pop
jns
jns
jp
jp
xchg
adc
adc
ss
push
xor
stos
push
xor
mov
and
xchg
and
mov
mov
fisubr
inc
fistp
and
neg
inc
loopne
loope
loope
fdivp
div
neg
pushf
jmp
mov
pop
mov
icebp
lahf
retf
jno
jno
jno
jno
mov
mov
mov
mov
dec
and
fisttp
aas
std
xor
(bad)
cli
cld
aam
aam
aam
aad
fucomi
fcomp
repnz
xor
jp
jp
jp
mov
mov
mov
mov
pop
data16
data16
sbb
fisubr
shr
jno
push
mov
(bad)
aam
mov
push
clc
gs
jg
xor
add
add
jle
mov
sub
shl
rcl
daa
push
pop
pop
dec
es
es
jnp
jnp
jnp
cmp
test
mov
mov
xchg
xchg
xchg
xchg
test
test
test
test
dec
mov
dec
xchg
and
loop
loop
cld
lods
cld
mov
or
or
or
or
xchg
daa
xchg
sub
mov
test
sub
or
xchg
or
sahf
adc
push
test
lods
push
mov
pop
mov
pop
mov
mov
push
(bad)
push
ficom
ficom
sub
sbb
ins
dec
ins
inc
ins
inc
ins
test
lods
mov
pop
pop
pop
pop
push
pop
push
pop
mov
retf
sbb
js
js
pushf
int
rcr
je
jo
jmp
out
pop
jecxz
out
fistp
jp
jp
jp
cs
cs
add
jb
daa
(bad)
sub
das
(bad)
shl
rcl
pop
fcomp
loopne
loopne
loopne
loopne
enter
enter
xchg
inc
xchg
inc
xchg
pop
xchg
jle
jb
jbe
mov
mov
mov
arpl
inc
jae
inc
xchg
add
dec
dec
test
cld
push
cld
push
cld
inc
rol
ror
fcomp
push
fcom
add
test
jb
jb
jb
mov
addr16
sahf
push
call
sub
scas
mov
mov
stc
out
cli
stc
(bad)
stc
or
or
jo
je
hlt
(bad)
lock
in
(bad)
loopne
loopne
loopne
loopne
and
and
and
and
jns
jns
jns
jns
cmp
imul
rcl
rcr
xchg
add
pop
test
mov
lods
dec
test
push
in
in
in
in
sti
cmp
cmp
xor
les
cmp
or
or
xchg
mov
mov
mov
sub
sub
adc
add
push
jb
jp
inc
sbb
adc
sbb
in
jecxz
sti
push
repz
retf
push
adc
or
add
jl
out
sbb
(bad)
sbb
aad
sub
pop
sbb
xor
pop
pop
mov
xchg
mov
pop
pop
push
pop
mov
iret
mov
jge
jge
jge
cdq
and
cdq
test
mov
cmp
pop
cmps
pop
mov
jg
jg
jg
jg
sub
sub
sub
sub
xchg
shl
xlat
mov
xchg
xlat
call
out
inc
out
push
(bad)
pop
mov
pusha
popf
js
jo
outs
mov
jbe
test
lahf
mov
addr16
jno
jno
jno
mov
mov
mov
mov
dec
adc
dec
add
cld
inc
cld
pop
cld
push
cld
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
ror
rcr
fsub
fdivr
fdiv
fsub
imul
div
idiv
test
jae
mov
mov
and
push
xor
push
jl
je
ins
sub
mov
mov
mov
mov
data16
jle
jbe
hlt
add
add
add
add
push
(bad)
(bad)
xlat
out
out
out
out
and
and
and
and
jle
jle
jle
jle
test
test
test
test
jg
addr16
outs
(bad)
adc
or
dec
scas
inc
scas
cwde
dec
nop
dec
mov
dec
shl
(bad)
ret
jecxz
std
in
cld
std
hlt
std
jl
je
ins
or
iret
xchg
xlat
xchg
fist
mov
sub
or
or
or
or
adc
adc
adc
adc
pushf
push
imul
jnp
jae
pushf
mov
data16
adc
adc
adc
pop
inc
pop
pop
pop
push
pop
fsubr
outs
enter
sub
xor
mov
leave
pop
leave
bswap
pop
leave
dec
jp
jp
jp
jp
sahf
sbb
pop
cmp
pop
add
adc
(bad)
js
js
js
sub
sub
sub
sub
cmp
sub
aam
aam
aam
aam
fsubrp
fdivp
fdivrp
fdivrp
out
out
out
out
into
mov
into
int3
xchg
les
mov
mov
mov
mov
xchg
add
xchg
cmp
xchg
jnp
jnp
mov
jnp
jg
ja
outs
inc
addr16
out
mul
idiv
div
mul
fnstcw
xlat
sahf
xlat
xchg
xlat
inc
cld
dec
cld
push
cld
pop
cld
loopne
call
jns
mov
mov
mov
mov
pop
mov
pop
sahf
pop
sbb
adc
or
add
lahf
test
test
lock
lock
or
inc
or
cmp
xor
sub
and
jae
jnp
arpl
imul
sub
iret
sub
mov
mov
mov
enter
enter
(bad)
cld
(bad)
in
in
(bad)
cli
mov
loop
cld
inc
hlt
inc
in
inc
in
jbe
jle
in
outs
in
or
add
sbb
adc
fadd
rol
enter
mov
lahf
mov
and
and
jns
jno
imul
pop
sbb
pop
call
pop
iret
push
(bad)
push
fist
push
js
jo
push
push
retf
push
ficomp
sub
adc
adc
adc
gs
push
mov
mov
mov
mov
push
push
push
push
push
push
push
jg
ja
jmp
dec
dec
ja
jae
jmp
out
nop
test
or
or
ds
pop
xchg
pop
outs
pop
inc
jl
jl
jl
jl
sub
sub
sub
sti
test
test
test
test
shl
push
jb
jp
inc
aad
in
push
(bad)
in
(bad)
test
div
xor
retf
mov
aad
sub
call
mov
jae
ja
xchg
imul
(bad)
test
test
xchg
fdivr
fadd
fsubr
shl
sar
shl
shl
clc
jmp
clc
add
or
sbb
and
out
push
repnz
cli
pop
ret
pop
lods
and
aam
imul
sbb
hlt
cmps
hlt
inc
push
mov
push
add
jl
js
pusha
xor
das
in
shr
ret
in
and
push
sub
arpl
xor
jne
jne
jne
mov
mov
int3
sbb
repz
repz
mov
test
retf
stos
or
in
dec
int3
dec
lods
dec
es
out
out
out
stc
mov
push
stc
jo
loopne
ror
or
or
xchg
fist
les
in
or
add
cmp
cmp
es
add
jle
popw
adc
push
lock
rcl
cmps
pop
mov
mov
inc
mov
(bad)
adc
push
push
push
push
test
outs
aam
shr
sub
and
ficomp
pop
mov
(bad)
fcmovnb
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
push
inc
mov
mov
mov
mov
mov
sbb
jecxz
pop
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
fdivp
div
div
div
imul
lods
lods
mov
mov
mov
test
dec
mov
mov
or
scas
mov
lods
stos
rcl
shr
mov
loope
(bad)
inc
inc
inc
adc
mov
data16
sbb
sbb
sbb
sbb
lahf
mov
retf
int
xor
xor
xor
cld
mov
rol
rcl
xlat
rcl
rcl
pop
pop
pop
adc
pop
pop
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
icebp
repz
repz
mov
mov
mov
movs
mov
mov
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
test
(bad)
fwait
enter
dec
iret
enter
cmp
cmp
cmp
mov
sbb
sbb
sbb
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
push
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
call
mov
dec
leave
adc
test
leave
scas
test
or
or
imul
imul
outs
dec
dec
das
popa
cmp
sbb
cmp
sbb
mov
mov
mov
mov
jecxz
in
jecxz
jecxz
out
out
out
out
sahf
(bad)
sahf
lock
mov
idiv
div
imul
lods
lods
mov
lea
lods
lods
lods
lods
lods
lods
lods
lods
add
add
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
frstor
push
sbb
sbb
cmp
movs
sbb
es
pusha
pusha
data16
pusha
pusha
cmp
mov
mov
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
inc
jo
inc
push
push
aad
mov
dec
int
dec
dec
dec
ds
test
test
or
push
mov
imul
bound
popa
iret
dec
dec
dec
dec
gs
dec
or
sbb
adc
sbb
mov
mov
leave
mov
mov
mov
jecxz
jmp
int3
out
(bad)
out
rcr
(bad)
(bad)
fmulp
mov
div
repnz
std
imul
xchg
mov
mov
inc
sub
inc
inc
dec
dec
push
nop
mov
xor
jg
jg
outs
mov
into
into
retf
into
loopne
jmp
fsubrp
out
(bad)
out
out
out
rol
aam
(bad)
in
aam
inc
dec
push
and
ins
data16
sbb
or
xor
sbb
mov
retf
retf
retf
xor
and
xor
test
mov
aad
rol
jecxz
rcr
pop
pop
pop
pop
pop
push
dec
bound
dec
inc
inc
popa
mov
fwait
mov
xor
loop
cmp
mov
mov
mov
push
js
jbe
jl
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ret
fxch
fcmove
ss
ds
mov
sbb
cvttps2pi
cmp
cmp
sub
es
and
push
bound
inc
out
jbe
outs
adc
mov
mov
xor
cmp
sub
mov
pop
pop
pop
sub
pop
or
mov
outs
push
push
stc
jg
dec
ds
dec
dec
dec
int
test
test
or
or
mov
imul
jo
dec
dec
cmp
dec
dec
inc
iret
pop
sbb
pop
push
aaa
stos
mov
mov
lahf
cld
jecxz
jmp
xchg
into
(bad)
out
in
data16
(bad)
(bad)
(bad)
(bad)
aam
jmp
aad
mov
lods
cmps
fisubr
stos
mov
lods
test
ffree
bound
inc
imul
mov
jg
add
jg
(bad)
in
enter
repz
loopne
loopne
loopne
out
out
out
nop
clc
out
out
shr
mov
push
mov
inc
xor
mov
mov
out
data16
push
sbb
sbb
push
pushw
mov
mov
mov
movs
inc
xor
sbb
xor
scas
mov
mov
sti
(bad)
rcl
adc
jmp
adc
push
imul
mov
iret
cmc
repz
dec
mov
mov
mov
mov
mov
jnp
jl
add
(bad)
(bad)
sar
fdiv
into
ror
enter
cmp
xor
cmp
mov
sbb
jae
sbb
xor
cmp
push
add
es
add
imul
outs
imul
outs
outs
mov
inc
mov
push
add
and
push
add
sub
test
push
push
pop
pop
pop
aaa
jl
pop
sbb
sbb
sbb
jg
(bad)
(bad)
sti
add
dec
dec
mov
test
or
push
jg
or
popa
jmp
imul
inc
dec
dec
dec
and
dec
adc
in
cmp
sbb
mov
jmp
out
jmp
out
mov
out
aam
and
std
(bad)
fadd
test
imul
test
test
mov
mov
inc
inc
dec
xor
or
std
jo
jg
imul
mov
into
into
retf
loopne
jmp
call
in
out
(bad)
aad
inc
inc
ds
inc
inc
inc
das
scas
mov
lods
data16
adc
imul
sbb
cwde
or
mov
mov
retf
xor
jecxz
xor
inc
adc
xor
iret
lahf
mov
mov
rcl
xlat
mov
add
adc
dec
dec
cmp
dec
inc
ret
mov
xor
loopne
repz
cmps
mov
pushf
cmc
out
call
jbe
outs
dec
je
mov
(bad)
(bad)
fcmovnbe
(bad)
(bad)
fidivr
mov
xor
sub
sub
mov
mov
or
nop
xor
cmp
fwait
ds
mov
es
test
xor
xor
pusha
pusha
push
dec
pusha
outs
gs
inc
outs
outs
gs
cmps
mov
mov
and
and
ss
sub
cmovl
je
pop
push
jb
mov
mov
push
aad
(bad)
stc
aad
dec
dec
dec
dec
addr16
dec
scas
sub
pop
cmp
or
or
or
imul
popa
push
(bad)
dec
dec
xor
dec
pop
je
sbb
sbb
mov
mov
jecxz
hlt
jecxz
out
(bad)
out
loopne
arpl
out
rcl
icebp
(bad)
(bad)
(bad)
loopne
in
div
repnz
movs
mov
cmps
sub
mov
shld
sub
inc
inc
inc
loope
pop
icebp
int
xor
mov
jne
ja
mov
ins
(bad)
ror
shl
loopne
jmp
loope
fucomip
out
in
out
mov
(bad)
lds
push
loop
xchg
cmp
sub
push
data16
out
sbb
sbb
prefetcht2
sbb
(bad)
mov
mov
out
retf
lock
iret
sbb
add
xor
mov
mov
rcl
sti
(bad)
rcl
sbb
adc
inc
cmp
dec
cmp
mov
mov
mov
stc
clc
cmc
in
pushf
mov
mov
mov
call
jge
je
jl
loopne
(bad)
fdivr
(bad)
fisub
xchg
enter
(bad)
xor
(bad)
mov
stos
shl
sbb
outs
mov
adc
cmp
xor
or
and
pop
pop
es
fs
popa
pusha
adc
data16
jnp
jnp
mov
nop
scas
and
and
xor
xor
add
sub
and
not
jo
pop
pop
push
dec
lea
push
mov
je
outs
push
sub
add
aad
repz
dec
inc
dec
(bad)
dec
inc
cwde
test
lods
test
or
or
imul
jge
popa
dec
dec
inc
pop
popa
pop
xor
sbb
pop
sbb
and
mov
aaa
lods
mov
mov
mov
stc
jecxz
out
(bad)
out
lock
(bad)
fisub
cdq
retf
cld
loope
cdq
xchg
lods
lods
cmps
test
inc
mov
lods
lods
cmps
mov
inc
inc
inc
push
cmp
in
mov
movs
adc
jg
jmp
into
retf
out
into
loopne
sahf
(bad)
loopne
in
in
(bad)
call
cmc
int3
(bad)
(bad)
inc
inc
push
push
dec
push
dec
popf
xchg
xor
push
sbb
ins
xor
sbb
or
xor
inc
mov
loop
retf
sbb
xor
cmp
into
mov
test
mov
cld
rcl
rol
push
adc
push
mov
dec
pop
bound
dec
inc
call
popa
mov
rcl
jmp
mov
mov
cmc
mov
nop
cmp
jl
jbe
ins
jp
push
or
(bad)
cmps
je
ror
loopne
enter
fxch
and
xor
mov
sbb
sbb
pop
sbb
cmp
xor
cmp
and
cmp
inc
pusha
pusha
adc
jnp
jnp
inc
mov
mov
cmp
and
dec
adc
sub
pop
ja
jo
pop
mov
movs
mov
push
dec
xchg
xchg
xchg
mov
fcmovbe
(bad)
(bad)
push
in
dec
gs
dec
inc
xchg
dec
sub
test
stc
stc
or
pop
imul
inc
imul
dec
dec
dec
gs
dec
sbb
xor
sbb
mov
repnz
repnz
jecxz
out
repnz
in
xchg
out
fisubr
aam
mov
idiv
loop
cdq
call
mov
clc
mov
fsubrp
lods
lods
cmps
mov
inc
inc
dec
inc
imul
mov
jg
jne
je
jg
(bad)
out
into
into
(bad)
call
jmp
out
out
in
shr
(bad)
sbb
push
inc
inc
inc
dec
inc
inc
mov
mov
push
fs
sbb
sbb
sbb
or
cmps
mov
mov
retf
movs
xor
ss
sub
xor
mov
xlat
mov
imul
inc
pop
dec
dec
xor
dec
dec
dec
and
iret
test
mov
pushf
mov
jmp
mov
in
call
jp
gs
js
fwait
(bad)
(bad)
sar
xchg
(bad)
(bad)
into
loopne
enter
lea
cmp
adc
cmp
mov
lods
xchg
xor
cmp
xor
cmp
cmp
daa
sub
es
pop
pusha
outs
push
pusha
pusha
popa
jl
ins
outs
jne
outs
outs
stos
mov
nop
icebp
and
sub
xor
sub
and
ret
pop
pop
jb
pop
xchg
mov
mov
inc
outs
outs
outs
jmp
(bad)
out
(bad)
(bad)
dec
add
inc
inc
xchg
scas
scas
arpl
or
and
or
ins
dec
ins
add
imul
fs
dec
gs
dec
add
sbb
xor
mov
mul
jecxz
nop
lods
jecxz
in
in
in
dec
out
xchg
enter
(bad)
enter
jmp
imul
push
movs
mov
cli
clc
mov
lods
ffree
adc
dec
loope
pop
imul
call
jbe
jnp
(bad)
aad
add
into
mov
inc
jmp
out
sahf
(bad)
lods
out
out
iret
addr16
fucomi
cmc
(bad)
dec
push
inc
push
sub
or
inc
pop
loop
sbb
sbb
sbb
iret
xchg
std
mov
in
retf
stc
mov
das
cmp
cmp
mov
into
sahf
rcl
mov
mov
addr16
pop
dec
inc
call
dec
mov
adc
repz
std
not
scas
(bad)
adc
xchg
into
jg
or
jne
jb
je
leave
fbld
mov
enter
daa
xor
aas
call
int3
repnz
in
sbb
pop
dec
out
cmp
jnp
es
push
or
es
push
adc
imul
bound
ins
int
scas
retf
mov
and
xchg
and
pop
inc
jns
sub
mov
inc
jo
pop
pop
pop
cli
push
xchg
cli
cmp
je
int3
addr16
push
push
(bad)
pop
mul
icebp
neg
push
aas
mov
jmp
test
cmp
push
and
imul
bound
dec
dec
inc
and
dec
dec
inc
cmp
fwait
pop
sbb
mov
mov
and
jne
out
lock
enter
enter
lds
fdivp
idiv
jmp
hlt
push
(bad)
mov
(bad)
add
mov
lods
cmps
shld
loope
pop
icebp
jno
xor
rol
push
dec
jg
(bad)
out
into
loopne
inc
jmp
in
mov
xor
loopne
cld
(bad)
into
push
sahf
inc
push
xchg
mov
data16
sbb
sbb
sbb
sbb
(bad)
mov
retf
retf
bound
xor
cmp
xor
mov
rol
rcl
ret
pop
pop
sbb
and
inc
(bad)
in
mov
mov
in
repz
stc
sub
mov
mov
mov
inc
call
jl
jl
popa
jl
out
(bad)
xlat
(bad)
(bad)
fcmove
enter
enter
adc
cmp
xor
mov
mov
cvttps2pi
cmp
cmp
sub
data16
or
pusha
jle
dec
ja
outs
gs
jl
ins
outs
mov
mov
je
and
and
sub
and
add
pop
push
pop
aaa
addps
or
push
outs
outs
fs
sti
nop
stos
(bad)
push
repnz
inc
dec
inc
addr16
dec
mov
test
or
movlps
jl
xor
inc
inc
cmp
dec
dec
inc
inc
sbb
add
je
sbb
mov
mov
mov
mov
mov
enter
mov
div
cld
in
out
and
mov
jbe
jp
leave
mov
xchg
mov
and
mov
cdq
imul
dec
dec
mov
add
jg
jg
into
into
(bad)
mov
repz
pop
in
adc
pop
rcl
dec
(bad)
lds
dec
push
inc
inc
das
jl
mov
mov
or
data16
cmpps
push
adc
sbb
cmp
rcr
loope
fcmovnb
enter
xor
daa
jmp
xor
mov
vcmpsd
fild
adc
pop
test
push
dec
pop
dec
nop
pop
inc
nop
pop
mov
mov
stc
outs
sti
in
jmp
mov
stos
and
jbe
js
js
push
(bad)
sar
(bad)
enter
enter
sar
ror
cmp
cmp
shl
sbb
or
sbb
push
sub
sub
adc
in
and
dec
inc
es
push
imul
pop
add
outs
outs
gs
fistp
shl
and
xor
push
dec
daa
sub
and
sub
sub
pop
pop
push
sub
mov
jecxz
outs
fs
imul
xchg
(bad)
push
in
sti
jmp
pop
dec
and
dec
test
test
add
adc
jp
jp
icebp
js
dec
pop
cdq
inc
pop
push
pop
int
pop
or
or
xchg
add
mov
jecxz
out
xchg
xor
out
in
imul
cmc
stc
enter
xchg
ror
ins
in
mov
jb
lods
fdivr
mov
lods
cmps
mov
push
push
xor
inc
xor
stos
in
cmp
outs
or
mov
out
loopne
jmp
(bad)
call
(bad)
fcmovnbe
adc
fcmovnbe
fcmovnbe
pop
into
div
push
push
dec
lahf
cwde
mov
inc
jne
pop
mov
data16
or
xor
mov
lods
mov
int
fsub
pop
xor
cmp
stos
and
test
stos
test
test
lods
aam
out
rcl
fld
fistp
pop
pop
sbb
imul
add
mov
mov
sahf
in
in
hlt
loop
pushf
mov
mov
mov
call
ins
jo
inc
jl
fdivr
rol
(bad)
fcmovb
fbld
loopne
cmp
xor
add
cmp
mov
mov
mov
mov
or
lods
or
xor
sub
es
xor
jae
pop
pusha
pusha
push
inc
outs
outs
outs
outs
outs
outs
outs
das
jecxz
lods
xlat
test
sti
xor
dec
push
and
and
jmp
dec
dec
dec
dec
aaa
mov
mov
cs
(bad)
(bad)
dec
shl
cli
pop
outs
mov
mov
sbb
xor
ins
leave
jp
jl
pop
push
pop
push
pop
ins
jle
or
sbb
adc
xchg
mov
mov
mov
repz
jecxz
out
push
fnstcw
aam
int
int
out
div
mul
in
in
mov
test
sti
mov
nop
mov
mov
inc
inc
imul
inc
mov
cwde
stos
push
jg
jne
or
jg
out
into
into
(bad)
out
loopne
jmp
(bad)
cld
push
je
call
(bad)
call
sbb
mov
cmp
aas
dec
push
sbb
adc
mov
cmp
(bad)
fcmovnbe
fucom
and
and
and
push
int3
inc
inc
inc
lods
test
ret
repz
imul
call
pop
addr16
dec
pop
dec
pop
inc
pop
inc
mov
mov
ret
shl
repz
add
mov
mov
test
call
jl
push
inc
(bad)
(bad)
fmul
(bad)
cld
(bad)
(bad)
mov
enter
enter
cmp
or
cmp
xchg
mov
mov
sbb
and
cmp
daa
cmp
sub
es
mov
push
jo
mov
inc
outs
imul
mov
and
sub
and
jmp
push
aaa
gs
pop
push
jo
mov
mov
bound
pop
sbb
cmc
aam
stc
aad
pop
jge
dec
ds
dec
dec
mov
test
or
push
jle
ins
imul
inc
imul
cmp
inc
pop
dec
push
add
add
sbb
adc
mov
(bad)
jecxz
jmp
inc
loopne
xchg
into
(bad)
(bad)
aam
fcmovne
(bad)
xor
cld
(bad)
out
test
lods
lods
cmps
mov
mov
test
fisubr
dec
imul
dec
push
inc
xchg
test
sub
jbe
jg
out
into
into
(bad)
icebp
into
into
out
imul
fmul
loopne
out
call
in
sti
and
(bad)
mov
inc
inc
xor
cmp
dec
popf
jne
(bad)
stc
ins
lea
data16
jo
sbb
push
push
sbb
(bad)
mov
mov
jbe
retf
xchg
xor
xor
aaa
mov
mov
shl
sbb
addr16
cli
dec
dec
cmp
loope
mov
mov
lock
inc
(bad)
mov
fistp
call
push
sar
or
data16
cmps
mov
mov
mov
dec
mov
cmp
int3
repz
pop
sbb
sbb
bound
sbb
cmp
xor
es
cs
imul
imul
enter
mov
sbb
dec
jb
sub
and
sub
and
pop
pop
push
lea
ja
mov
outs
adc
outs
outs
(bad)
(bad)
out
jmp
cld
nop
jno
dec
inc
pop
bound
lods
stos
(bad)
shr
or
push
push
push
arpl
imul
inc
outs
jge
dec
and
dec
dec
inc
and
sbb
adc
pop
sbb
into
mov
mov
jecxz
jmp
out
in
cmp
(bad)
out
fsubr
cmps
div
cld
cmc
test
lods
fadd
cld
lods
lods
cmps
cmps
push
test
and
jae
inc
dec
push
inc
or
or
jno
jg
jle
int3
out
into
into
(bad)
in
shr
loopne
loop
loopne
out
out
(bad)
cli
in
loop
(bad)
rcl
mov
lds
push
inc
xor
inc
inc
sti
mov
cmps
lods
adc
popa
pushw
dec
sbb
adc
pop
sbb
adc
mov
retf
loop
xor
cmp
sbb
add
mov
shl
cmps
adc
dec
dec
inc
bound
dec
mov
mov
mov
icebp
repz
out
mov
(bad)
sbb
mov
call
mov
sub
jl
outs
jnp
push
stos
(bad)
(bad)
fadd
rol
(bad)
into
inc
jg
adc
fcomp
xor
daa
cmp
cmp
ds
cmp
sbb
and
or
sub
push
add
cld
dec
pop
es
push
jno
jno
cli
add
outs
gs
add
mov
and
sub
sub
cmp
inc
adc
or
push
jae
mov
xchg
or
outs
outs
xlat
(bad)
(bad)
push
xlat
mov
dec
inc
xor
inc
gs
test
test
add
pop
add
jp
pop
mov
aas
pop
inc
dec
pop
ret
sbb
or
or
mov
fmul
mov
jmp
jmp
cmc
jmp
stos
leave
int
iret
xlat
iret
shl
jmp
sti
ins
out
(bad)
lods
lods
cmps
test
cmp
lods
lods
cmps
bsf
push
dec
pop
pop
jb
xchg
mov
mov
or
or
mov
inc
icebp
jmp
push
in
out
sahf
clc
mov
out
iret
shr
(bad)
aam
mov
inc
inc
xor
push
dec
fisub
cwde
sbb
or
sahf
or
ja
sbb
mov
fcmovnu
(bad)
(bad)
push
and
pop
dec
xor
cmp
mov
lods
mov
or
jmp
rcl
pop
push
sbb
sbb
cmp
mov
ret
popf
mov
repz
in
mov
cwde
lods
movs
mov
mov
inc
jl
jbe
cmps
adc
(bad)
(bad)
(bad)
(bad)
ffree
(bad)
push
mov
cmps
mov
xor
aaa
mov
cmp
xchg
stos
mov
sbb
inc
xor
sub
mov
sub
ja
maxps
push
jle
jle
js
cmc
jns
mov
mov
outs
and
push
and
sub
clc
dec
sbb
sub
pop
sub
pop
sub
mov
mov
sbb
outs
outs
push
in
lock
lock
pop
jae
mov
mov
mov
mov
aam
repz
imul
push
jg
dec
mov
dec
aas
sbb
or
adc
(bad)
mov
mov
xchg
retf
int3
jecxz
in
into
leave
out
in
into
xchg
(bad)
aam
fcmove
fdivrp
div
div
je
mul
cmps
movs
ret
or
fwait
mov
enter
mov
jnp
inc
inc
inc
push
nop
xchg
xchg
sbb
jb
cld
jg
jne
(bad)
ret
into
into
in
jmp
loopne
in
into
imul
in
out
xlat
leave
stos
add
(bad)
dec
pusha
inc
inc
inc
inc
int
mov
mov
data16
data16
sbb
adc
push
mov
iret
test
(bad)
(bad)
jmp
and
mov
mov
mov
add
add
add
dec
dec
dec
dec
pop
pop
mov
mov
mov
loop
clc
in
mov
cmps
mov
mov
jle
outs
ins
jnp
add
rol
fld
add
(bad)
fld
(bad)
stc
sub
ss
jg
cmp
sub
loopne
sbb
xor
sbb
push
push
sub
adc
dec
jae
pusha
push
gs
addr16
addr16
data16
js
stos
scas
stos
test
xchg
test
xor
and
push
cmp
cmp
cmp
mov
sub
push
mov
mov
jge
jg
jns
in
out
out
out
out
call
inc
xor
dec
fisttp
mov
jl
sbb
pop
imul
jns
cdq
pop
pop
pop
pop
pop
pop
xchg
lods
and
in
in
mov
mov
movs
repnz
(bad)
jecxz
cmp
out
cmp
int3
lahf
(bad)
(bad)
(bad)
(bad)
fcomi
div
jbe
div
add
lods
lods
mov
mov
or
lods
cmps
mov
dec
imul
xchg
add
jge
idiv
jne
stc
into
into
(bad)
out
into
into
(bad)
jmp
loopne
fsubrp
out
imul
out
out
jecxz
(bad)
inc
lds
enter
das
inc
mov
or
je
sbb
cmp
sbb
mov
test
ror
mov
sbb
xor
cmp
mov
mov
mov
mov
cmp
sub
pop
dec
pusha
dec
dec
push
dec
bound
mov
fwait
scas
mov
cmps
repz
fld1
ret
cli
repz
in
call
or
(bad)
jl
jbe
mov
(bad)
mov
enter
mov
enter
pushf
xor
dec
push
mov
int3
lds
sbb
push
adc
xor
xor
add
xor
dec
sbb
es
sbb
pusha
push
data16
minps
gs
push
outs
outs
gs
cmp
scas
and
sub
push
and
and
pop
sub
and
adc
push
push
pop
inc
mov
and
mov
aam
jb
outs
push
repnz
stc
in
cli
clc
in
sti
xor
dec
aas
ins
dec
test
jnp
test
sbb
imul
addr16
push
dec
dec
inc
addr16
dec
inc
lds
xor
sbb
sbb
mov
mov
sbb
mov
shl
jecxz
lods
loope
hlt
out
in
in
mov
std
(bad)
(bad)
(bad)
hlt
test
cld
test
xchg
pusha
or
stos
xchg
xor
int
add
jge
popa
je
movups
into
into
into
shl
xchg
retf
nop
(bad)
mov
out
out
out
fdivp
int3
lds
(bad)
push
cmp
mov
sti
mov
dec
push
data16
sbb
adc
push
mov
xor
mov
into
mov
inc
xchg
xor
inc
ss
mov
mov
rcl
mov
gs
pop
addr16
and
inc
dec
mov
xchg
mov
mov
and
push
repnz
cmps
mov
cwde
loope
call
or
fidivr
cmps
sar
fcmove
ror
xchg
enter
inc
sbb
cmp
and
mov
or
cs
aas
adc
aas
cs
xor
and
dec
(bad)
fprem
outs
inc
dec
pop
pusha
pusha
push
imul
outs
xchg
mov
mov
and
sub
sub
sbb
sub
pop
pop
jno
pop
dec
mov
movs
push
fs
push
fs
(bad)
stc
aad
in
sti
jmp
dec
dec
pop
mov
mov
test
or
and
imul
ins
inc
sbb
in
dec
dec
dec
lahf
push
sbb
sbb
bndstx
mov
(bad)
lahf
cmc
jecxz
jmp
jmp
out
in
xchg
rcr
(bad)
shr
test
movs
test
lods
lods
cmps
fimul
fisttp
test
xor
inc
xor
pushf
add
xorps
jg
out
into
into
(bad)
(bad)
fucomip
xchg
(bad)
in
loopne
(bad)
cmps
out
out
in
in
out
cmc
(bad)
rcl
aam
aam
push
inc
push
push
mov
lods
mov
data16
dec
data16
push
xor
sbb
xchg
push
mov
mov
adc
out
loop
retf
and
sbb
xor
cmp
mov
xchg
mov
rcl
rcl
(bad)
shl
pop
pop
push
pop
jp
dec
push
dec
dec
dec
call
clc
repz
std
mul
and
pushf
std
mov
mov
call
imul
aam
mov
(bad)
shr
loop
retf
xor
dec
push
popa
cmp
mov
shl
adc
outs
ins
adc
sub
xor
es
and
push
ins
pusha
adc
cmp
inc
outs
outs
outs
pop
ins
sbb
xlat
loope
mov
and
and
and
sub
das
jb
pop
pop
inc
push
mov
jno
inc
jno
outs
fs
repz
inc
inc
dec
cmp
inc
xchg
cmp
test
or
push
jle
imul
inc
and
dec
inc
pop
pop
je
sbb
adc
sbb
mov
(bad)
jmp
jmp
mov
out
xchg
in
fisubr
aam
icebp
(bad)
div
cld
in
fidivr
test
mov
lods
ffree
jmp
lods
dec
aaa
dec
inc
inc
pop
push
inc
xchg
xchg
test
jg
jns
push
and
into
enter
out
es
loopne
int
loopne
call
in
add
in
mov
(bad)
sbb
push
push
and
mov
dec
popaw
dec
data16
sbb
sbb
sbb
push
mov
mov
sbb
retf
xor
and
fdiv
xor
mov
xlat
mov
aas
and
pop
sbb
inc
and
mov
mov
mov
icebp
mov
repz
jmp
mov
jle
pop
jl
js
mov
je
enter
xchg
enter
cmp
inc
sbb
cmp
mov
add
inc
sbb
sbb
cmp
cmp
and
es
push
test
adc
cmp
imul
outs
mov
mov
and
es
add
pop
cmp
cmp
dec
jo
pop
pop
pop
mov
or
xchg
mov
dec
xlat
(bad)
(bad)
push
in
clc
xlat
ja
dec
inc
xchg
dec
addr16
test
test
test
cmp
pop
push
imul
pop
dec
dec
addr16
sbb
adc
mov
mov
mov
jecxz
leave
jecxz
(bad)
in
jmp
iret
fstp
mov
div
cld
cld
(bad)
lock
lods
lods
lods
mov
xchg
lods
fstp
cmovle
imul
inc
stos
test
cmp
(bad)
jg
or
mov
enter
out
out
out
lds
out
out
jmp
adc
inc
xor
loop
inc
xor
mov
mov
dec
data16
adc
adc
mov
iret
xchg
test
retf
dec
sbb
xor
inc
cmp
mov
int3
into
push
(bad)
mov
aad
sbb
cmp
cmp
cmp
std
mov
mov
repz
(bad)
mov
lahf
xor
mov
mov
jmp
jl
push
fidiv
or
in
(bad)
(bad)
sar
fcmovbe
(bad)
jecxz
in
enter
cmp
sahf
cmp
add
mov
sbb
aaa
pushf
adc
cmp
push
push
hlt
sub
push
push
test
adc
pusha
pusha
inc
popa
outs
outs
inc
out
inc
outs
mov
mov
and
sub
pop
add
sub
das
add
pop
pop
jae
ja
pop
pop
mov
mov
ins
sbb
sbb
(bad)
sti
aad
pop
jge
dec
push
dec
dec
dec
cdq
test
stos
stos
or
and
or
or
outs
jl
inc
ins
jl
inc
dec
push
jle
pop
inc
sbb
adc
xor
xchg
in
in
jecxz
loope
ins
out
in
in
hlt
in
repz
(bad)
fmul
fisub
retf
xlat
div
hlt
in
es
lods
scas
test
add
test
test
dec
inc
xor
inc
repz
add
jg
jge
add
into
les
idiv
sahf
data16
jmp
imul
mov
(bad)
cmp
push
cwde
or
data16
jne
cmp
xor
scas
mov
jmp
pop
xor
cmp
add
mov
mov
mov
cmp
xchg
pop
sbb
ins
dec
dec
dec
mov
mov
mov
repz
fdivp
(bad)
and
movs
mov
xchg
in
call
jl
rol
(bad)
add
ror
fcmove
cmps
push
enter
ds
test
sub
fisttp
sbb
and
cmp
cmp
aas
xor
and
es
fs
jg
mov
std
outs
outs
gs
imul
in
outs
nop
sub
pop
or
and
cmp
push
adc
sub
js
push
out
mov
inc
dec
jg
js
fucomip
in
stc
adc
dec
ss
dec
dec
mov
cdq
test
stos
or
or
addr16
jge
ins
sbb
dec
dec
inc
xor
pop
or
pusha
sbb
pop
cmps
mov
mov
jl
jecxz
into
in
jb
out
pushf
imul
(bad)
push
(bad)
fimul
int
fcmove
cld
jmp
mov
mov
cwde
mov
mov
jnp
aas
lods
lods
cmps
push
push
inc
push
dec
pop
push
xchg
stos
adc
xchg
pusha
imul
fstp
(bad)
fsub
mov
div
ins
lods
out
out
out
std
clc
jmp
ror
push
ds
inc
mov
mov
jae
ja
or
xchg
scas
or
ja
mov
int3
cs
vpsrad
aas
and
daa
out
and
rol
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
(bad)
inc
rcl
fld
imul
dec
xor
dec
dec
pop
inc
scas
addr16
mov
repz
fdivp
and
mov
stos
mov
mov
call
push
js
ja
fcmovb
fmulp
cli
(bad)
fcmovb
int
push
loopne
enter
or
cmp
mov
cmps
mov
jae
sbb
sbb
sbb
cmp
xor
and
es
pop
pop
pusha
pusha
fs
maskmovq
imul
imul
mov
(bad)
xchg
mov
pop
sbb
and
dec
sub
das
cmp
das
pop
leave
pop
pop
push
and
mov
outs
outs
push
inc
clc
outs
outs
cmc
in
call
out
pop
and
dec
dec
inc
pop
pop
lods
adc
or
ror
js
inc
imul
imul
dec
dec
dec
dec
dec
dec
sub
sbb
xlat
sbb
sbb
mov
xchg
jecxz
mov
xchg
out
out
xchg
cld
jmp
(bad)
cmc
pop
out
(bad)
repnz
imul
hlt
fsubp
lods
lods
cmps
xchg
mov
fwait
scas
stos
test
lods
lods
stos
scas
imul
inc
inc
xchg
inc
inc
sbb
stos
in
jg
fidivr
jg
(bad)
in
enter
sti
shl
loopne
loopne
loopne
out
out
(bad)
cld
out
adc
xchg
(bad)
(bad)
mov
retf
das
cmp
dec
ins
xchg
sti
mov
jbe
dec
std
sbb
adc
sbb
adc
and
xchg
xchg
into
movs
push
retf
inc
outs
xor
xor
pop
and
mov
std
rcl
fld
and
adc
aas
sahf
pop
dec
inc
addr16
inc
and
mov
cmp
sti
pushf
push
repz
mov
mov
nop
nop
inc
mov
sahf
adc
jl
jbe
(bad)
mov
mov
(bad)
xlat
in
fxch
mov
push
fwait
cmp
xor
inc
xchg
mov
or
sbb
push
aaa
sbb
ss
xor
sbb
dec
stos
xor
es
jae
fs
adc
pusha
pop
outs
outs
jle
js
js
xor
mov
and
ja
mov
jo
sub
pop
pop
pop
pop
pop
pop
imul
outs
outs
je
outs
outs
inc
sar
div
call
pop
dec
inc
fwait
gs
pop
test
or
or
stos
or
popa
arpl
mov
inc
addr16
adc
mov
mov
mov
lock
jecxz
jecxz
jecxz
out
test
les
fdivp
div
neg
div
test
lods
lods
xchg
mov
mov
scas
test
lods
inc
inc
imul
inc
dec
dec
test
test
sub
jg
out
into
into
(bad)
(bad)
in
call
retf
std
fsubrp
out
repz
out
out
repz
(bad)
adc
inc
inc
dec
push
cwde
or
data16
xor
sbb
imul
retf
fxch
(bad)
sub
mov
mov
xchg
cs
(bad)
add
or
aas
test
pop
sbb
dec
push
outs
bound
mov
mov
out
in
mov
pop
repz
mov
mov
call
imul
(bad)
(bad)
fdivr
jge
enter
retf
push
adc
js
(bad)
mov
test
pop
xor
sbb
push
or
cmp
xor
xor
sub
cld
ds
lock
lds
push
dec
add
outs
imul
stos
mov
test
or
or
sub
aas
add
mov
pop
dec
jo
mov
cdq
gs
shr
push
out
bnd
inc
pop
inc
jae
mov
push
mov
test
daa
or
or
imul
outs
imul
dec
js
dec
pop
sbb
jno
xor
sbb
mov
movs
jmp
xor
out
xor
dec
out
aam
jne
(bad)
shl
(bad)
pushf
and
pop
div
cmps
mov
test
lods
lods
stos
cdq
mov
sbb
mov
rol
dec
sub
nop
test
in
jg
jne
jge
jb
retf
out
into
into
jmp
jmp
scas
mov
in
into
rcl
ret
(bad)
enter
inc
inc
push
inc
push
xchg
mov
dec
int
data16
adc
or
into
xchg
pop
mov
xchg
scas
retf
(bad)
rcl
sbb
cmp
lods
mov
faddp
or
or
pop
sbb
dec
dec
pop
(bad)
fimul
mov
mov
fistp
repz
jmp
mov
pushf
es
popf
jg
push
push
jl
jbe
in
(bad)
(bad)
jns
(bad)
ret
int
aam
lds
out
sub
popf
retf
pop
pop
pop
mov
mov
jbe
sbb
cmp
cmp
cmp
cmp
push
sbb
es
push
push
pusha
adc
int3
bound
sbb
add
outs
mov
mov
and
push
sbb
and
push
sub
cmp
jae
push
pop
pop
mov
mov
ins
js
pop
outs
(bad)
sti
std
jmp
dec
dec
pop
xor
dec
sub
sar
or
or
and
or
popa
pop
dec
imul
jl
dec
dec
gs
dec
dec
jns
sbb
sbb
pop
mov
push
mov
mov
loope
shl
jecxz
int3
out
out
in
popf
jmp
fdivp
cld
sbb
div
mov
lods
lods
lods
call
mov
lods
lods
cmps
fld
ja
inc
inc
test
mov
and
jg
inc
jg
outs
mov
les
xor
loopne
out
(bad)
cli
out
out
in
add
inc
dec
xor
inc
inc
inc
xchg
mov
data16
jne
or
mov
ror
sar
retf
fsub
mov
xor
xor
mov
mov
shr
rcl
ret
jmp
adc
repnz
dec
dec
retf
mov
mov
fiadd
mov
stc
in
clc
hlt
stc
fdiv
mov
mov
dec
xor
push
enter
push
jl
out
(bad)
lods
(bad)
(bad)
(bad)
repnz
fdivrp
test
sbb
cmp
cmp
movs
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
fs
push
push
and
sar
and
and
and
sub
and
pop
and
pop
pop
pop
aaa
and
mov
outs
push
pop
outs
(bad)
sti
cld
sti
cli
nop
dec
dec
inc
dec
dec
addr16
mov
stos
test
sbb
imul
jl
push
imul
pop
xor
dec
pop
xor
cmp
test
mov
out
mov
stc
mov
jmp
in
cdq
mov
div
(bad)
jmp
push
lods
int3
sbb
mov
lods
lods
lods
xchg
sti
sub
inc
inc
test
xor
inc
loope
jg
in
fcmovb
neg
into
loopne
ins
loope
loopne
in
(bad)
sar
jmp
xlat
cmc
repnz
call
das
cmp
mov
mov
jmp
sbb
adc
pop
sbb
shr
mov
cwde
retf
retf
or
xor
xor
and
mov
xlat
dec
rcl
imul
pop
adc
sbb
pop
and
mov
mov
mov
clc
retf
in
repz
mov
mov
adc
call
jle
jl
inc
test
(bad)
shl
ja
(bad)
(bad)
sti
(bad)
fadd
lock
fdivr
cmp
sub
mov
fwait
js
sbb
and
sbb
sbb
cmp
sbb
xor
es
out
pusha
pusha
jno
jg
push
ins
jnp
push
fsubr
outs
push
push
mov
cmps
pushf
adc
sub
xchg
and
adc
sub
jnp
push
dec
push
pusha
retf
mov
mov
outs
outs
outs
pop
hlt
std
nop
cmp
stc
hlt
xor
pop
dec
ins
call
mov
or
pop
daa
fs
outs
jp
je
pop
popa
sbb
fs
fs
sbb
sbb
mov
mov
mov
repnz
inc
out
out
in
in
popf
(bad)
fcom
cmc
out
cmc
hlt
out
jmp
fldcw
xchg
cmp
mov
xchg
ds
inc
inc
dec
test
xchg
mov
dec
jle
jae
jg
repnz
into
(bad)
(bad)
jbe
loopne
jmp
out
out
in
out
out
clc
vpaddq
dec
imul
inc
inc
cwde
mov
mov
adc
jbe
push
xor
sbb
mov
fcmovne
fsub
cmps
xor
and
mov
mov
rcr
rcl
rcr
fstp
jl
pop
adc
push
cmp
cli
dec
dec
cmp
in
cdq
fidiv
loopne
hlt
loope
fistp
mov
call
nop
outs
js
jg
jns
ins
ror
rol
mov
out
fxch
cmps
xchg
cmp
xor
sbb
aaa
sbb
test
sbb
push
ret
cwde
mov
cmp
cmp
cmp
sub
or
popa
ins
pusha
pusha
pusha
pusha
pusha
pusha
add
outs
pusha
pop
outs
outs
outs
stos
mov
mov
and
daa
sub
daa
sub
das
daa
add
pop
pop
pop
push
jae
pop
mov
inc
inc
shr
outs
outs
jmp
call
call
cmp
cs
fiadd
fdivr
imul
inc
dec
push
sbb
add
and
sub
cmp
sub
xchg
xchg
xchg
xchg
xchg
lea
mov
(bad)
mov
mov
mov
xchg
cwde
retf
xchg
rcr
popf
xchg
mov
mov
(bad)
fcompp
enter
enter
xor
xor
imul
imul
out
out
sbb
or
mov
int
loopne
loopne
loopne
mov
stos
mov
or
mov
(bad)
stc
jno
inc
inc
inc
inc
inc
inc
mov
mov
es
push
push
data16
and
jnp
sub
mov
fnstcw
scas
retf
add
push
xor
xor
xor
mov
mov
shl
shl
es
and
and
das
dec
dec
dec
dec
dec
push
sbb
fidiv
xor
(bad)
call
call
pop
jl
(bad)
mov
(bad)
test
test
enter
cmp
je
cmp
(bad)
(bad)
ss
cmp
aas
outs
lds
pop
fst
push
movs
adc
mov
ret
cld
pusha
mov
xchg
pop
push
adc
fstp
fstp
scas
pop
mov
retf
in
repz
repnz
js
or
adc
out
ins
xchg
jecxz
push
mov
dec
xchg
add
jnp
mov
push
jnp
ja
inc
mov
dec
call
jae
ffree
scas
and
addr16
lods
(bad)
pusha
mov
sbb
jecxz
push
adc
call
call
ret
dec
xchg
cmp
adc
sbb
stc
mov
jno
cmp
fsubrp
pop
retf
not
xlat
test
jbe
loope
add
(bad)
push
repz
jp
adc
fcom
cmp
hlt
pop
and
fidiv
fwait
cmps
pavgw
mov
xor
dec
in
fld
fdiv
in
pop
cld
pop
push
mov
push
cmp
aam
(bad)
stos
fs
sub
xchg
stc
mov
test
jl
xchg
sti
push
fst
jo
fxch
xchg
adc
(bad)
rcl
ficom
xchg
dec
out
sbb
pop
hlt
hlt
sbb
xchg
pop
push
push
je
cmps
mov
jbe
or
enter
mov
leave
pop
add
ret
xchg
mov
jge
jae
ins
dec
test
fbld
mov
(bad)
call
mov
jb
lahf
loopne
dec
stos
imul
int
fsubr
dec
cmc
pop
cmps
and
(bad)
ss
jl
ficom
push
and
in
cld
mov
aad
jno
shl
sbb
or
shr
inc
jbe
push
(bad)
mov
loopne
cmps
jl
mov
dec
push
xor
xor
jo
not
cmp
mov
bound
mov
aas
ja
jo
dec
or
sub
push
dec
mov
jge
pushf
cmp
add
xchg
clc
xlat
imul
dec
das
call
scas
adc
mov
cwde
mov
fidivr
sub
jno
ret
dec
push
(bad)
or
dec
pop
fild
sub
add
pusha
call
dec
retf
xchg
xor
push
sub
dec
sub
cdq
rol
inc
into
cs
push
das
jmp
jle
lea
jne
mov
repz
inc
push
rcl
push
jl
jg
cmp
(bad)
mov
aam
sbb
repz
in
les
into
push
mov
movs
sbb
shl
sbb
mov
shr
and
xor
xchg
sub
inc
ins
shr
inc
lahf
cs
and
stc
sub
imul
mov
adc
daa
in
retf
jg
mov
adc
outs
sbb
adc
out
lea
push
xchg
in
int
bound
cmps
jmp
rcr
sub
mov
sahf
sahf
mov
out
pop
mov
dec
test
bound
lods
hlt
xlat
xchg
(bad)
jno
cwde
aas
and
adc
jle
ins
fstp
xor
mov
ss
add
xchg
ret
mov
jp
ds
cmps
xor
inc
call
adc
mov
pop
(bad)
std
inc
jbe
aad
add
fiadd
jno
push
push
cmps
pop
sub
xchg
fwait
lea
add
fldcw
ins
aad
cs
ror
shl
cmp
jne
adc
add
inc
push
sub
dec
dec
jle
xor
arpl
in
ins
pop
mov
mov
(bad)
nop
test
aad
test
add
mov
dec
out
cli
mov
(bad)
push
jbe
jb
push
push
mov
jge
test
cmp
(bad)
ja
in
movs
add
dec
push
adc
and
mov
imul
push
repz
fsub
xchg
jb
mov
mov
ins
and
push
inc
adc
xor
std
aam
pop
arpl
sub
fs
xor
neg
bound
jne
imul
arpl
xchg
xchg
push
clc
inc
sbb
jl
mov
mov
mov
sub
out
cmp
retf
jge
icebp
int3
push
pop
xor
jecxz
xlat
sar
cmp
jp
in
(bad)
pop
(bad)
dec
(bad)
fistp
xor
lahf
sahf
sahf
push
xchg
jae
and
mov
adc
add
mov
or
sti
xchg
loopne
cmp
jl
mov
ins
dec
pop
fld
adc
arpl
cdq
mov
xor
ins
and
movs
shl
jo
sbb
jbe
push
mov
gs
adc
push
cs
cs
or
mov
pushf
mov
fwait
adc
inc
and
sbb
mov
or
push
out
push
jmp
push
and
xchg
dec
add
ror
adc
sub
fwait
or
xchg
ja
or
xor
data16
xchg
push
jl
rol
test
jmp
dec
inc
pop
test
ins
xchg
sbb
cmp
pop
fwait
pop
dec
sar
repz
shr
fdivr
push
nop
and
sbb
jns
pop
aam
stc
adc
and
xor
call
xor
push
std
outs
gs
jge
int
sbb
retf
(bad)
fnstsw
push
or
sbb
pop
test
neg
xor
jle
push
ja
je
into
fst
adc
or
retf
aad
or
jb
xchg
xchg
aaa
lods
ins
rol
push
jne
sub
mov
dec
push
add
cwde
aam
repnz
hlt
cmp
push
cmp
lahf
into
or
aam
ds
or
adc
arpl
inc
xor
cs
pop
sbb
or
test
fidivr
jmp
mov
stos
test
jmp
xchg
arpl
mov
(bad)
arpl
aam
xor
movs
shl
push
adc
inc
call
and
jns
and
cwde
add
mov
test
leave
popf
rol
xchg
xchg
cwde
add
popf
sbb
les
rol
fdiv
(bad)
xchg
lods
mov
iret
and
movs
pushf
imul
dec
push
nop
dec
fnstsw
shl
xlat
dec
adc
xor
sub
sbb
shr
xchg
call
and
adc
mov
popa
sbb
call
dec
(bad)
xor
das
stos
xchg
test
(bad)
(bad)
nop
inc
or
sub
or
pop
pushf
stos
in
adc
not
dec
jno
pop
mov
leave
jb
test
jle
inc
rcr
in
mov
hlt
dec
fdivp
add
or
loop
addr16
cmps
add
icebp
pushf
fst
xchg
sub
xchg
jmp
and
sub
out
cmp
sbb
dec
jg
popf
add
push
hlt
jne
lods
pushf
sub
retf
dec
jbe
js
cmp
(bad)
cld
fld
in
add
sbb
inc
ds
pop
inc
pop
ret
pop
dec
movs
sub
mov
int3
test
and
aaa
scas
iret
mov
rol
xchg
popa
or
pop
shr
xor
lods
(bad)
retf
(bad)
jmp
xchg
xor
iret
lds
mov
mov
int
in
adc
cmp
inc
jns
(bad)
pop
das
jecxz
sub
mov
pop
data16
pop
int
aaa
or
rcl
iret
sbb
push
out
psrlw
les
sbb
push
jb
and
mov
in
jecxz
jle
in
pop
aas
or
fnstenv
lea
jmp
push
xor
int
jg
xchg
loopne
cmp
pop
jbe
in
ret
add
int
jg
mov
dec
aaa
imul
mov
jno
add
jg
mov
fst
xor
jno
jg
stos
mov
cmps
and
xor
sub
mov
jbe
push
movs
fs
cli
xchg
jne
addr16
pop
add
iret
rcl
mov
mov
inc
(bad)
xchg
ss
cmps
retf
push
(bad)
xchg
pusha
ins
or
imul
dec
pop
scas
sbb
stos
out
and
test
add
or
jo
jmp
pushf
retf
lods
mov
add
add
fdivrp
neg
cmp
pop
sub
adc
sbb
nop
add
inc
stos
leave
adc
mov
mov
mov
pop
mov
sbb
cli
sbb
pop
push
(bad)
xchg
mov
add
retf
adc
gs
(bad)
jmp
sbb
pusha
dec
push
mov
pushf
push
test
and
lods
cmp
mov
xor
push
and
movs
sbb
cmps
sub
aam
fnsave
jne
(bad)
mov
cmp
mov
gs
push
hlt
push
pop
inc
cld
mov
mov
sbb
(bad)
pop
mov
push
xchg
cld
jne
xlat
push
leave
call
or
xchg
mov
adc
or
xor
mov
push
sub
ss
test
dec
mov
dec
shr
pop
stos
fst
or
add
pusha
pop
adc
jne
jb
and
fst
add
mov
add
movs
mov
test
mov
clc
and
into
imul
test
cmp
shl
ins
push
enter
jle
mov
ss
aas
or
in
gs
add
lods
rcl
pop
cli
lds
xchg
or
mov
push
pop
push
gs
int3
fiadd
cli
mov
idiv
pop
xchg
aad
jo
enter
stos
popf
leave
jb
cmp
push
dec
xchg
add
iret
pop
add
js
add
addr16
js
mov
mov
lock
out
ins
cmp
sbb
inc
mov
mov
pop
pushf
mov
je
(bad)
lds
pop
aad
fnstenv
outs
xlat
pop
dec
push
or
sub
popa
mov
push
dec
lods
cmp
cmps
out
loopne
inc
jbe
ret
dec
push
enter
ja
add
fidivr
adc
mov
in
dec
dec
pusha
dec
(bad)
into
out
pop
imul
mov
popa
mov
pop
pop
cmp
or
sbb
out
cmps
add
mov
out
mov
mul
in
ins
sub
cmps
es
dec
mov
xor
icebp
adc
pushf
and
jo
fstp
xchg
mov
inc
dec
inc
repnz
enter
pop
mov
fwait
test
movs
pop
mov
rcr
jno
and
dec
push
mov
push
and
and
hlt
js
sub
in
add
popf
nop
cmps
sbb
sbb
sub
ja
movs
div
addr16
call
pop
xlat
xchg
mov
test
adc
push
adc
xchg
pop
inc
fild
push
inc
test
adc
mov
stc
pop
mov
or
xor
int3
mov
or
sar
cmp
or
stos
fld
jbe
xchg
mov
push
out
cmp
mov
xchg
in
js
ret
xor
mov
sar
and
mov
jnp
jns
in
add
test
out
cmp
mov
add
adc
fisubr
retf
adc
mov
jo
js
jmp
fdiv
push
adc
xchg
adc
data16
pop
adc
(bad)
and
test
cmps
add
push
outs
loopne
sbb
cmc
mov
(bad)
or
addr16
sbb
xchg
enter
sub
sub
push
pop
lahf
mov
fs
dec
(bad)
in
mov
sub
sbb
stos
pop
pop
or
sbb
jne
not
or
dec
push
cmc
jns
mov
ja
test
mul
lds
daa
mov
sbb
retf
out
add
cdq
xor
arpl
jp
mov
fs
jo
mov
iret
imul
jg
xor
ins
xchg
cld
mov
cmp
outs
adc
test
sub
hlt
mov
in
mov
xor
inc
in
xor
jae
shl
aad
in
pop
xor
mov
ins
and
and
arpl
loopne
mov
fnsave
pop
ins
add
xchg
aaa
clc
aas
mov
pushf
sub
inc
js
pop
daa
test
mov
pop
push
popa
and
push
in
pop
mov
jnp
bnd
in
cs
ficom
loop
bound
dec
retf
jl
or
leave
jbe
push
mov
jmp
shl
fld
popa
mov
daa
in
mov
stos
push
sub
(bad)
outs
test
mov
movs
cmc
and
push
lahf
mov
shl
dec
test
test
xchg
or
inc
pop
fnsave
sub
pop
or
mov
fcmovb
(bad)
enter
mov
lea
pop
add
iret
jnp
mov
mov
cmp
push
push
inc
push
aad
adc
out
xchg
dec
jne
scas
xor
jle
pop
jbe
les
mov
push
mov
inc
jle
inc
(bad)
stos
pop
retf
inc
mov
and
rcl
mov
jmp
dec
ds
sbb
sbb
pop
xchg
xor
jno
inc
daa
fnsetpm(287
std
test
frstor
nop
bnd
sbb
or
aad
loopne
retf
(bad)
enter
inc
push
xchg
and
lods
push
push
shl
cmps
jbe
aad
movs
xor
jnp
push
pop
sbb
inc
test
out
sub
int
mov
fwait
dec
jmp
int3
add
jno
xor
mov
xchg
xchg
mov
test
sbb
cmp
into
shl
sub
mov
push
sbb
jno
(bad)
shr
js
sbb
pop
popa
test
push
test
int
aaa
clc
pop
retf
inc
and
mov
movs
inc
pop
loop
fs
mov
jno
jp
adc
das
add
mov
repnz
test
cdq
or
push
std
xor
cmp
sbb
ss
xchg
push
pop
sub
out
inc
jle
xor
add
add
loop
cwde
xchg
pop
jg
add
sub
je
test
dec
or
loopne
cmp
adc
xchg
mov
call
hlt
enter
retf
xor
push
dec
and
sbb
nop
aam
(bad)
mov
jne
mov
pop
test
pop
movs
inc
sahf
add
inc
shl
aaa
fwait
sbb
fdivr
in
lods
scas
call
push
mov
rol
stos
sub
iret
cs
pop
gs
mov
push
pop
cmp
mov
mov
xor
mov
mov
xor
pop
dec
mov
repz
mov
jmp
(bad)
out
mov
stos
push
aas
push
fdiv
sub
in
fmul
daa
push
iret
jno
stos
inc
jecxz
stos
inc
sti
push
pusha
pop
jg
inc
fstp
jge
cdq
cmp
popa
and
popa
popa
xor
hlt
xor
xchg
pop
and
mov
push
xor
test
int
xlat
std
das
jmp
mov
test
inc
(bad)
je
xchg
mov
dec
(bad)
jo
and
xor
mov
clc
push
call
retf
cmp
add
xlat
cmc
mov
push
xchg
sbb
movs
iret
popa
jecxz
cmps
pop
lods
ins
mov
test
add
add
sbb
test
pop
add
call
pop
xchg
in
mov
mov
push
mov
mov
add
push
scas
add
sub
mov
jnp
call
lods
sub
inc
js
cmovle
retf
nop
mov
mov
xchg
jno
cs
sbb
jp
push
sub
das
pop
and
jnp
jl
add
out
sbb
sbb
pop
mov
mov
(bad)
fiadd
cld
jge
jae
adc
sub
push
aam
or
push
xchg
xor
cld
inc
in
pop
mov
sub
push
cwde
int
mov
adc
xchg
mov
xchg
data16
mov
addr16
cmp
lods
div
mov
pop
shl
xchg
call
into
or
push
pop
call
es
test
pop
push
or
sbb
or
mov
fbstp
mov
leave
mov
nop
jmp
mov
push
push
mov
push
leave
mov
stos
xchg
(bad)
xchg
mov
outs
fbstp
arpl
pop
jmp
push
and
inc
pause
and
mov
fsub
outs
scas
xchg
jl
sub
out
adc
imul
and
xchg
add
adc
xchg
add
test
sbb
icebp
mov
call
addr16
jo
out
enter
rol
sbb
and
mov
mov
nop
ja
test
cmp
loopne
mov
mov
imul
add
and
add
pop
mov
or
adc
cmps
cmc
xor
push
mov
hlt
xor
stc
or
mov
pop
mov
jbe
stos
in
enter
jecxz
push
aam
xchg
sub
cwde
out
les
movs
mov
lods
pushf
cmp
jbe
push
nop
aaa
add
push
xchg
es
mov
cs
ds
mov
mov
imul
push
shl
bswap
popa
stos
add
xlat
adc
jg
mov
inc
bound
sbb
mov
cmps
fs
in
sbb
mov
pop
rcl
and
gs
js
ins
xlat
cmp
mov
popf
test
push
dec
iret
movs
mov
test
test
push
mov
inc
daa
sbb
ret
test
cmp
push
test
dec
aas
push
sub
and
ins
inc
shr
xor
arpl
inc
or
lods
sub
add
test
xchg
clc
adc
sbb
dec
and
and
push
(bad)
out
fidiv
cmp
cwde
cmp
enter
inc
loopne
(bad)
in
mov
test
ret
or
add
mov
dec
sbb
xor
push
in
out
or
xor
jecxz
push
test
sahf
(bad)
out
rcl
movs
test
repnz
add
push
push
aad
addr16
jmp
fldcw
inc
(bad)
jl
outs
aas
movs
push
scas
(bad)
jle
or
jp
pop
jbe
inc
out
pushf
add
jge
cli
mov
cdq
jecxz
add
outs
out
(bad)
jbe
mov
sub
sbb
out
inc
js
mov
push
xor
push
pop
push
add
(bad)
loop
push
jecxz
pop
ucomiss
cmp
in
in
leave
lods
mov
inc
mov
sbb
jb
pop
fsubp
jg
rcl
mov
bnd
add
int
ins
mov
out
xchg
fstp
ss
add
aas
outs
dec
jo
and
push
jmp
xchg
call
loopne
pop
in
mov
cld
addr16
dec
int
inc
sbb
cmp
data16
cmp
imul
loope
add
add
and
fisub
aas
outs
mov
adc
div
xor
add
das
(bad)
cmp
inc
mov
push
fldenv
push
sub
shl
sub
sub
enter
and
std
aad
mov
fisubr
(bad)
fnstcw
mov
sbb
adc
lahf
or
xor
lea
imul
mov
mov
push
ret
fcmovbe
jecxz
loop
xor
mov
xchg
xchg
push
or
lock
cmp
icebp
fs
sub
or
loope
sbb
xchg
shl
out
adc
and
std
pop
or
inc
test
and
call
rcr
std
test
mov
fst
pop
aam
cmps
sub
lahf
dec
dec
and
test
mov
lahf
daa
mov
xor
dec
sub
inc
(bad)
mov
pushf
(bad)
pop
xchg
mov
or
inc
fmul
jp
pusha
lock
das
pushf
inc
mov
mov
push
scas
cmp
stos
rcl
dec
out
adc
icebp
xor
xchg
inc
jne
adc
dec
cmp
pop
pop
mov
or
into
test
inc
clc
das
mov
inc
sub
pushaw
or
mov
sti
icebp
xlat
rol
addr16
add
jl
cmp
stos
fdivp
rcl
sub
aas
xor
xor
fcomp
(bad)
test
movs
mov
lock
mov
outs
mov
icebp
sub
out
loopne
pop
ds
adc
mov
adc
std
imul
cs
pop
aam
mov
lods
int3
adc
addr16
adc
add
mov
fucomi
or
(bad)
inc
stc
inc
pop
fidivr
xor
cmps
stos
clc
mov
mov
xor
and
(bad)
out
jnp
repz
cmp
push
hlt
push
loop
and
call
and
fsub
mov
out
inc
in
push
pop
mov
mov
and
pop
adc
dec
and
test
pop
push
add
retf
gs
inc
sub
push
call
cmp
call
mov
add
movs
cld
mov
push
sub
mov
or
sar
sbb
add
xor
rol
push
mov
adc
retf
xor
movs
hlt
xor
mov
jb
xchg
fs
aas
enter
daa
retf
std
and
mov
add
jo
lea
test
push
adc
mov
inc
jle
xor
cmp
adc
daa
push
and
div
loopne
push
movs
and
mov
cli
in
or
and
mov
sub
scas
cmp
sbb
add
mov
mov
mov
js
push
jp
in
push
(bad)
lods
icebp
push
jmp
mov
retf
movs
lock
adc
adc
dec
std
pusha
jg
clc
cmc
rcr
xchg
xchg
bound
les
mov
ret
(bad)
mov
pop
pop
adc
hlt
(bad)
xor
clflush
fadd
call
add
gs
xchg
push
imul
or
sbb
repz
hlt
test
movs
cmp
aad
std
mov
mov
lock
xlat
push
shl
push
rcl
or
adc
fcmove
sub
outs
mov
jmp
pop
retf
scas
dec
loopne
sti
in
add
fadd
sub
imul
fidiv
dec
dec
int
dec
push
int
fdiv
dec
add
mov
dec
inc
push
xchg
mov
std
outs
lock
cld
xchg
or
mov
sbb
push
cli
mov
inc
mov
lock
add
fmul
push
dec
or
cmp
mov
jnp
loope
test
mov
pop
adc
sub
inc
mov
mov
test
add
test
add
(bad)
jmp
mov
in
add
push
std
lock
mov
call
frstor
movs
fmul
xor
cld
jno
es
and
in
sahf
retf
push
jb
aad
das
ss
stos
adc
nop
or
fcmovnu
jp
push
push
cs
cwde
jns
mov
xchg
fild
popf
or
and
sti
int3
call
inc
ss
rol
add
xchg
pusha
jmp
jecxz
dec
lahf
xlat
inc
cmc
inc
inc
mov
mov
xchg
adc
jge
cmps
out
pushfw
add
call
pop
inc
rcl
mov
loope
imul
popf
pop
or
loope
or
mov
and
mul
pop
cmp
pop
fs
int3
pop
xchg
jmp
dec
mov
sbb
and
scas
cmp
pusha
je
popf
repz
and
gs
leave
mov
rcl
dec
test
adc
inc
jp
in
or
stos
sbb
(bad)
sti
retf
fs
xlat
pushf
or
and
aam
sub
icebp
dec
or
sbb
addr16
fstp
or
pusha
int
das
jg
sub
test
cmp
fidiv
xchg
mov
or
test
push
sbb
mov
test
rol
sahf
nop
xchg
mov
jns
bound
loopne
mov
(bad)
push
sub
fcomp
push
add
xchg
pop
push
push
push
xchg
cmp
xchg
cmp
pop
or
sahf
aaa
jl
cld
out
dec
mov
push
mov
pop
or
std
(bad)
fild
adc
sub
jmp
iret
xlat
cmpxchg
or
add
sbb
and
adc
jmp
mov
jp
enter
inc
inc
dec
xchg
test
dec
fldcw
mov
mov
and
dec
ss
mov
dec
jge
mov
addr16
(bad)
mov
pusha
inc
xchg
adc
dec
mov
mov
je
pop
ror
push
pop
arpl
outs
cmps
or
pop
dec
pop
lock
jno
and
jecxz
retf
cmp
inc
xchg
or
add
mov
popa
inc
cmps
adc
push
popf
bound
addr16
in
retf
in
jl
xchg
scas
mov
call
adc
ror
mov
jg
add
sbb
adc
ret
nop
stc
neg
push
mov
mov
dec
ficom
push
dec
and
cdq
push
xchg
push
je
(bad)
xor
clc
pop
adc
mov
jmp
jl
pop
popf
mov
loopne
dec
sbb
xchg
jecxz
adc
sub
into
cmp
mov
outs
jmp
retf
jl
cmp
test
mov
push
(bad)
sub
sub
mov
jbe
mov
mov
iret
hlt
jmp
ins
mov
and
retf
dec
add
mov
inc
sahf
stos
inc
int
cwde
push
sbb
shl
jno
popa
dec
mov
inc
mov
ins
outs
shl
shr
sub
out
mov
jb
les
iret
pop
xchg
pusha
add
xor
mov
jb
mov
sahf
jne
test
daa
xchg
mov
addr16
push
pop
outs
test
in
dec
loop
repz
mov
sar
push
out
outs
jns
scas
es
mov
cmp
mov
cli
cmp
and
int3
popf
mov
xchg
pop
mov
pop
into
add
fs
or
push
stos
cmp
loopne
push
xor
dec
mov
and
sbb
push
lods
mov
loop
lods
mov
pop
xor
cs
xchg
and
fld
call
out
mov
adc
adc
or
sub
imul
call
dec
pop
adc
adc
sub
popa
in
hlt
lods
rcr
mov
sub
pop
jp
mov
out
dec
pop
jb
push
(bad)
in
sbb
or
dec
mov
pop
or
loopne
stos
jne
(bad)
xchg
mov
sbb
ficom
add
js
add
test
add
cld
xlat
shl
or
jno
xchg
dec
inc
iret
add
into
and
xor
test
fmul
cmps
bound
push
mov
xor
push
mov
cdq
retf
push
dec
cmc
pushf
jae
add
pop
lahf
and
or
dec
xchg
add
nop
into
stos
sti
call
pop
lds
pop
fwait
pop
push
aaa
popf
rcr
pushf
pop
outs
mov
test
ja
cld
pusha
in
pop
rol
push
mov
cmp
call
fs
test
xor
push
lds
push
aad
sbb
sahf
sbb
mov
scas
inc
mov
cwde
mov
inc
mov
shl
mov
outs
jno
mov
les
rcr
push
nop
loope
sub
in
or
xchg
lods
imul
mov
mov
movs
or
fisubr
pop
cmp
push
inc
push
movs
mov
fstp
dec
cmp
jp
xchg
jns
or
jp
xchg
inc
add
repnz
xchg
sub
lock
sub
sbb
inc
aam
lds
outs
jg
inc
js
or
jne
fisubr
loope
(bad)
shl
jae
pop
dec
or
xchg
scas
cdq
adc
pop
outs
pop
xchg
and
clc
aaa
cmp
imul
pop
jb
nop
and
push
xor
shl
aad
shl
ja
scas
test
xor
mov
cs
daa
pop
cmc
mov
and
cdq
retf
std
add
repz
sbb
mov
cwde
fs
add
mov
or
popf
test
or
aad
je
mov
sub
jns
mov
or
and
das
add
and
adc
adc
daa
mov
cmp
jae
jle
mov
not
into
ret
stc
outs
imul
dec
out
and
sub
adc
push
jmp
shr
test
dec
dec
cmps
xor
mov
retf
add
les
adc
sub
imul
jl
ret
and
and
mov
(bad)
xor
adc
pop
outs
cmp
xor
cmp
popf
scas
jmp
mov
jns
add
inc
push
xor
test
mov
test
fisub
cmp
adc
out
cmps
fs
mov
stc
fs
mov
fcmovnbe
push
xchg
out
fdiv
stos
mov
dec
mov
xor
xchg
mov
xor
xor
or
retf
scas
jecxz
clc
clc
xlat
(bad)
out
aam
push
ins
and
push
dec
push
sar
push
mov
dec
pop
jp
stos
dec
je
lds
pop
jge
ja
and
xlat
iret
neg
(bad)
shl
xchg
inc
mov
pop
loopne
cmp
xchg
cmps
mov
push
dec
jg
mov
sbb
mov
mov
jno
mov
(bad)
jo
stos
push
sub
imul
cmps
shr
scas
adc
or
fldenv
jmp
sbb
(bad)
or
xchg
ja
shl
or
lods
sub
sbb
and
xor
addr16
test
pop
push
cwde
push
push
xchg
mov
call
dec
dec
test
add
ret
sbb
add
mov
loopne
xchg
cmp
fsub
fmul
aam
in
inc
xor
sbb
sbb
xor
aad
cs
xor
sbb
daa
neg
lea
mul
inc
stc
cmp
scas
and
xchg
(bad)
(bad)
xor
cdq
int3
pop
pop
or
in
mov
add
cs
loop
and
sub
icebp
clc
loopne
test
stos
cwde
fsub
pop
int3
fist
lods
scas
aam
fs
mov
outs
mov
sbb
scas
mov
fnstenv
xrelease
mov
add
xchg
aad
pop
mov
out
rcr
xchg
jl
inc
jmp
mov
sahf
push
or
mov
dec
mov
xchg
popf
jbe
rcl
int
test
mov
es
lods
call
sti
loopne
xchg
jbe
pop
movs
dec
hlt
test
dec
test
pop
ror
inc
cwde
pop
add
xchg
xchg
xchg
xor
jecxz
mov
cmp
loop
add
fmul
add
gs
fld
adc
mov
test
pushf
pop
enter
jno
pushf
jmp
pushf
mov
sbb
pop
call
mov
mov
cs
or
shl
xor
aas
and
pusha
popf
test
dec
jmp
jl
fstp
xchg
adc
sub
(bad)
xchg
pop
or
mov
ret
cli
cmp
(bad)
cmp
sub
in
adc
push
adc
retf
mov
ins
and
xchg
mov
shr
pop
jmp
int
inc
scas
ins
dec
int
push
stos
aad
loop
xor
adc
fwait
clc
mov
mov
inc
jecxz
sub
push
pop
inc
mov
fisub
or
jb
xchg
jl
adc
ror
jge
jp
jne
mov
add
ret
out
imul
jnp
in
gs
lods
test
retf
mov
lods
fs
ja
jae
pop
out
test
lahf
pop
cmp
ret
imul
inc
fld
pop
inc
in
pop
push
jo
sub
or
(bad)
sbb
inc
ds
into
hlt
push
sahf
push
jge
cmp
push
gs
push
dec
jmp
mov
lods
stos
js
or
xor
cmp
shl
repz
inc
sbb
dec
mov
sub
or
jo
loopne
retf
loopne
in
mov
xchg
ss
inc
test
dec
aas
mov
in
xchg
jmp
in
fmul
std
mov
adc
sbb
cld
inc
cmps
jp
and
mov
inc
popf
dec
cmp
imul
pop
adc
or
pop
xchg
xchg
sar
mov
inc
push
cmp
cmp
outs
cmc
push
call
icebp
int
pop
outs
xlat
jo
cwde
adc
or
mov
stos
mov
inc
leave
mov
(bad)
xchg
jle
jnp
cmp
sahf
push
mov
push
and
mov
xchg
xor
shl
lahf
sub
sbb
sub
enter
push
ds
or
or
sti
aad
leave
cdq
push
popa
fcmovbe
in
push
mov
pop
mov
sub
loop
push
out
lods
data16
dec
lods
jno
pushf
push
inc
jl
packuswb
mov
push
push
fwait
mov
movs
push
sbb
popf
sbb
add
repz
jle
push
cmp
ins
sar
add
outs
lods
stos
call
test
fs
out
icebp
pop
push
jmp
cld
push
nop
inc
nop
add
pop
repnz
push
fwait
push
shr
sbb
dec
test
jne
xchg
outs
and
pop
mov
jl
xor
lea
mov
les
push
stos
std
dec
iret
push
jb
leave
dec
imul
mov
aam
int
jmp
sbb
mov
loope
pop
ret
jg
inc
dec
not
or
cs
(bad)
call
js
xchg
add
(bad)
adc
mov
sbb
out
(bad)
jg
stos
adc
xchg
ja
jecxz
fnsave
xlat
jns
(bad)
jl
sbb
int3
aaa
push
retf
movs
mov
push
adc
imul
or
sbb
sbb
jb
aas
adc
icebp
mov
adc
sbb
lahf
xchg
rcl
adc
or
xor
lea
call
sub
push
jmp
stos
retf
test
(bad)
jg
adc
cmp
fnstsw
bound
ins
fs
jle
repnz
loope
and
int3
inc
and
lds
fdiv
push
lds
inc
test
stc
mov
adc
loopne
inc
xchg
xor
jg
dec
mov
in
and
xchg
jmp
loopne
mov
outs
mov
mov
pop
int
lahf
cld
dec
pop
add
xchg
dec
test
sub
dec
cmp
cmp
lods
cmp
ret
pushf
and
push
jmp
ror
mov
cmps
retf
fisttp
popf
repnz
jg
sar
push
cmps
addr16
popfw
sbb
and
push
leave
iret
dec
xchg
lds
(bad)
dec
jecxz
in
add
iret
mov
in
jecxz
pop
mov
mov
mov
sub
jmp
jb
imul
jae
cmp
fcomp
and
mov
cld
jp
pop
cmp
ror
aas
shl
je
dec
pop
mov
and
cmp
clc
jae
adc
(bad)
in
sub
ss
sub
aas
std
cmp
push
mov
mov
mov
lods
mov
add
xchg
xor
jl
xchg
dec
sub
sub
cmp
outs
or
movs
imul
out
add
(bad)
loopne
mov
mov
pop
pop
retf
xchg
shl
aaa
(bad)
popf
adc
mov
stc
stos
sbb
xchg
cmps
add
ja
fst
xchg
pushf
add
sbb
sub
(bad)
cdq
push
popa
and
enter
scas
icebp
gs
dec
add
pop
inc
arpl
add
(bad)
push
jb
test
push
and
rcl
fistp
jmp
(bad)
aas
enter
retf
pop
imul
sub
pop
mov
or
hlt
mov
pushf
fs
sbb
(bad)
scas
idiv
rcl
les
cmp
xlat
popa
and
cmps
div
mov
dec
fisubr
ins
lock
sub
xlat
inc
lds
(bad)
idiv
xchg
sub
les
mov
add
adc
sahf
jb
sub
je
movs
ja
imul
push
mov
sbb
and
inc
mov
xlat
test
std
cmps
aad
outs
sbb
inc
mov
jp
mov
in
dec
not
push
mov
or
pusha
sahf
icebp
test
retf
jne
rcl
inc
xor
or
or
call
ss
sbb
repnz
adc
add
mov
cmp
aam
test
enter
jle
repnz
mov
jne
test
xor
ret
dec
jbe
(bad)
(bad)
out
icebp
imul
dec
fistp
dec
xchg
xchg
popf
bound
stos
nop
adc
loop
push
inc
aad
test
test
push
jno
loope
mov
and
lds
test
mov
jp
movs
add
sub
adc
(bad)
inc
shl
xchg
fisubr
jmp
sbb
(bad)
movs
push
xor
fucomip
imul
adc
call
sbb
addr16
mov
inc
cmp
clc
aaa
fidiv
jle
xor
repz
jecxz
or
dec
mov
mov
jmp
cmp
aam
ret
std
ins
out
dec
mov
test
std
sahf
cmc
mov
idiv
loop
(bad)
xchg
xchg
outs
ret
push
inc
push
test
mov
add
adc
das
imul
push
fadd
enter
adc
push
fcmovu
adc
shr
nop
(bad)
fcomp
pop
outs
sub
or
inc
movs
sbb
cmp
jl
pop
jp
or
pop
stos
dec
(bad)
cli
and
jl
jmp
sbb
out
xor
pushf
xchg
ret
mov
xor
scas
pop
pusha
ss
push
mov
out
or
shr
fs
(bad)
or
cmc
pop
dec
retf
inc
adc
test
jb
mov
adc
xor
add
pushf
cs
pusha
out
mov
xor
cdq
dec
pop
xchg
scas
inc
scas
es
xchg
or
and
call
sbb
jmp
xor
(bad)
dec
xchg
cld
rcl
sar
sub
xchg
adc
gs
ds
lahf
inc
sub
jecxz
mov
cmp
cs
pop
aas
in
xlat
jb
ds
mov
popa
mov
imul
icebp
mov
sbb
int3
add
mov
cmp
data16
jns
movs
mov
push
mov
pusha
pop
cmp
ret
ja
arpl
sbb
(bad)
push
and
repnz
fiadd
mov
push
and
stc
mov
(bad)
rol
or
sbb
dec
clc
inc
ret
cmp
add
mov
ins
imul
adc
popf
mov
jb
pop
pushf
in
ins
mov
in
push
lods
pop
xchg
pop
in
sub
mov
(bad)
es
popa
ss
fmul
adc
cdq
mov
call
xor
je
sub
or
push
xchg
dec
(bad)
neg
(bad)
imul
push
and
dec
mov
xchg
jmp
jecxz
test
cmp
adc
cld
test
xor
jo
xor
int3
cwde
sbb
outs
stc
idiv
mov
cmps
cmp
inc
loopne
daa
add
inc
test
push
aaa
imul
and
adc
jae
popa
fiadd
mov
lock
dec
loopne
(bad)
ror
xchg
sti
mov
jmp
lds
xor
sti
push
test
daa
jp
xchg
cwde
repnz
cdq
sbb
nop
push
dec
js
(bad)
and
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
out
pushf
or
ds
mov
push
pop
sub
pop
call
adc
adc
xor
pop
pop
data16
scas
aad
pop
mov
outs
repnz
mov
inc
fadd
stos
ja
aad
sbb
mov
push
jl
mov
adc
xlat
(bad)
lea
push
push
jl
mov
mov
movs
dec
shl
xchg
mov
inc
test
je
aad
lahf
mov
xor
outs
cdq
and
dec
dec
movs
hlt
dec
inc
aaa
shl
lock
retf
into
pop
in
int
lahf
mov
xchg
lds
stos
fbstp
fcmovnu
movs
mov
cdq
push
aad
or
mov
pop
sbb
daa
jb
(bad)
out
jno
cmc
xchg
ficom
and
mov
sbb
fwait
xchg
imul
das
aam
test
test
mov
inc
jge
jne
mov
std
push
outs
mov
sti
push
sub
adc
dec
dec
mov
pop
je
popa
cs
loope
pop
fdiv
mov
or
in
rol
dec
sbb
jbe
mov
xchg
pop
xor
lahf
ret
sar
xchg
push
jae
shl
popa
adc
lahf
sub
cld
or
rcr
icebp
gs
mov
mov
and
popa
pop
sbb
mov
jnp
cdq
or
pop
push
fmulp
adc
push
sahf
aas
adc
bound
jmp
pop
sbb
sub
jns
sti
xchg
add
pop
adc
xor
push
shl
dec
add
cmps
pop
mov
adc
adc
push
and
ins
loop
and
or
jo
retf
add
add
repz
pop
jp
adc
inc
jmp
push
or
out
xchg
mov
and
push
call
loopne
sbb
dec
push
ss
sahf
sbb
mov
adc
adc
cmp
mov
xchg
frstor
pop
gs
retf
dec
iret
les
mov
leave
pop
ret
xor
mov
cmp
cmp
sbb
mov
jl
repnz
rcl
adc
mov
in
fucomi
outs
inc
adc
inc
mov
cmps
mov
repnz
cmps
dec
call
pop
data16
imul
pop
jne
cmp
sub
add
jae
ret
xor
les
add
popf
cwde
dec
(bad)
xlat
xchg
imul
add
daa
dec
cwde
xchg
popf
mov
test
ja
jmp
sbb
xor
sbb
and
shr
mov
jo
dec
pop
xor
xchg
mul
xor
sahf
iret
sub
push
mov
adc
repnz
sub
jp
(bad)
push
ds
fisub
push
outs
sbb
shl
enter
fwait
stos
push
sbb
push
pop
xchg
sbb
hlt
aaa
cmc
in
cmp
test
xlat
fsub
aaa
std
push
xchg
add
aam
jl
add
cmps
test
push
arpl
or
call
dec
xor
cld
lock
pop
push
inc
mov
inc
xchg
nop
cmp
jge
inc
int3
push
xchg
dec
inc
pop
ja
pop
xchg
push
popf
mov
movs
mov
in
(bad)
lahf
int3
retf
jmp
int3
das
xchg
fild
nop
or
jae
xchg
sahf
push
sahf
sub
and
(bad)
and
sub
jp
mov
mov
push
(bad)
stos
fcomp
adc
(bad)
shr
dec
adc
mov
dec
or
cmp
rcl
xchg
mov
popf
and
loope
clc
mov
pop
xchg
outs
in
std
push
and
jmp
mov
add
scas
pop
dec
sbb
not
push
aaa
in
dec
mov
xor
pop
sbb
adc
add
fisub
mov
mov
add
mov
sbb
jmp
xor
ja
jnp
pop
rcl
jb
jmp
cmp
call
jae
(bad)
mov
xchg
lahf
xchg
push
iret
out
iret
test
dec
sub
in
mov
outs
xor
aaa
inc
xchg
xchg
or
and
xlat
jp
div
xchg
enter
add
popa
loopne
(bad)
adc
or
inc
call
push
xchg
pop
(bad)
jmp
daa
pushf
adc
mov
sub
sub
and
pop
lods
into
sbb
mov
jb
cwde
dec
cmps
or
mov
aaa
pop
popf
jp
adc
in
adc
in
imul
sbb
xor
(bad)
xor
jp
mov
pop
repz
stos
fst
pop
outs
imul
sbb
jns
outs
cmps
mov
jne
jmp
push
cdq
sub
retf
ret
inc
fisubr
push
or
arpl
xchg
es
repz
jecxz
das
cs
sar
mov
je
stc
mov
inc
jle
aad
rcr
mov
mov
pop
data16
test
pop
inc
fmul
jp
lock
pushf
xchg
mov
stos
dec
fisub
loopne
jp
dec
test
jge
xor
jle
(bad)
xchg
xchg
mov
cmp
and
or
adc
jb
movd
push
mov
fistp
mov
scas
nop
mov
and
cs
add
aas
xchg
sti
push
pop
jmp
lods
add
std
inc
jmp
xor
jo
lods
mov
and
aaa
fsubr
sti
pushf
mov
jbe
mov
shl
cdq
jg
aam
popf
icebp
sar
inc
aas
arpl
test
in
mov
pop
loopne
clc
sbb
push
jne
mov
cdq
data16
cmc
ret
(bad)
pop
ins
loop
mov
lea
lods
push
movmskps
cdq
(bad)
call
and
add
push
stos
pop
sbb
adc
rol
cmps
mov
les
push
dec
enter
add
fstp
and
ret
pusha
lods
mov
ror
cld
cld
stos
cmp
out
xor
or
shl
or
imul
mov
mov
outs
mov
jns
data16
mov
and
jo
loopne
mov
test
cmps
mov
mov
ins
in
cmc
pop
jecxz
and
sub
jo
jae
lea
aas
push
lea
cmps
and
retf
inc
jl
jmp
je
mov
or
scas
cmp
mov
pop
and
adc
jne
mov
popa
or
push
cs
jg
mov
not
sbb
sahf
ja
imul
fimul
mov
xor
or
call
mov
jne
jb
mov
sub
(bad)
outs
cmp
push
shl
in
jle
mov
mov
xchg
dec
add
js
fs
gs
sbb
pop
inc
cmp
sti
fs
push
adc
out
add
xor
outs
js
add
lds
cli
lods
add
sahf
mov
mov
ja
and
lds
pusha
dec
dec
jmp
pop
repnz
pop
mov
push
xor
jmp
jae
pop
movs
cvtps2pd
inc
dec
push
mov
mov
jg
clc
popa
neg
adc
in
stos
xchg
mov
out
push
pop
ja
inc
adc
loope
mov
and
cmp
sbb
ins
sbb
aaa
add
sub
cmp
pop
sbb
dec
loope
adc
and
fisub
in
shr
dec
stos
fs
rol
fbld
push
movs
(bad)
fbstp
loop
jmp
dec
mov
in
sbb
dec
aaa
jp
das
mov
jge
mov
repnz
pop
add
cmps
adc
push
and
lods
adc
fdiv
loope
ret
push
leave
pop
out
fistp
sbb
inc
adc
mov
int3
jae
pop
je
sub
push
sub
push
bound
lea
mov
(bad)
fist
dec
daa
(bad)
mov
sbb
int3
inc
std
or
xor
(bad)
ins
outs
sub
sti
repz
shr
jmp
fwait
(bad)
jo
adc
push
stc
cmp
call
or
jo
cmp
xchg
inc
push
or
dec
adc
sbb
mov
xchg
gs
out
stc
and
xor
rcl
mov
retf
pop
adc
pushf
add
cwde
pop
sub
cmp
jle
push
lods
fisubr
sbb
aas
mov
fild
lods
adc
xchg
loopne
test
mov
cwde
jo
cmp
ins
cwde
ins
mov
xor
lods
rcr
(bad)
cmp
mov
pop
xchg
and
push
sub
cmp
push
stos
rcl
xor
mul
pop
mov
sbb
pop
cli
jmp
stos
mov
repnz
dec
cmp
push
pop
jmp
aaa
call
inc
loope
call
xor
inc
xchg
popf
cmp
xchg
(bad)
clc
push
fist
(bad)
sahf
test
nop
sub
outs
lahf
enter
aam
add
test
cmps
out
movs
dec
loopne
lods
cs
cmc
test
dec
lahf
inc
(bad)
dec
int
mov
pop
dec
mov
in
mov
sbb
leave
jo
int
mov
sbb
push
xor
cmp
bound
jo
xchg
mov
mov
call
fwait
or
movs
les
jmp
or
jns
xor
cmp
and
repz
mov
scas
data16
out
jno
ins
ja
retf
jg
fist
xchg
cmp
nop
sbb
leave
or
inc
retf
push
idiv
mov
lods
imul
aas
cmp
rcr
pop
sub
or
das
pop
dec
push
mov
jecxz
jecxz
dec
or
mov
pop
js
cmps
shl
mov
mov
rcr
aad
cmp
cld
and
sbb
cmps
cmp
loope
mov
fisttp
push
push
gs
fisub
xor
xor
pop
mov
xchg
dec
adc
scas
lock
popa
mov
pop
rcl
and
aaa
cs
sbb
int3
loope
ja
fsubr
mov
fist
ds
loope
xor
sbb
mov
mov
test
fidiv
stos
ret
sahf
(bad)
push
(bad)
jp
loope
scas
popf
and
mov
in
out
mov
les
cmp
aam
xor
mov
stos
out
mov
hlt
inc
ins
(bad)
mov
idiv
sbb
inc
fsub
xor
pushf
std
div
mov
xor
jb
dec
sahf
test
loopne
aaa
ins
sub
repz
push
rcl
pop
pop
inc
push
popa
push
or
(bad)
cmc
je
push
sbb
cmp
add
and
in
dec
repnz
xlat
sbb
pop
push
jge
mov
xor
xchg
rol
ds
cmp
dec
fwait
or
std
xlat
add
or
pop
int3
mov
dec
mov
daa
out
in
je
addr16
inc
mov
stc
(bad)
aas
dec
mov
mov
loope
rcr
and
movs
xchg
push
inc
xchg
cmps
(bad)
xlat
sub
imul
(bad)
jmp
in
xchg
adc
lods
push
adc
pop
cmp
in
mov
push
pop
test
mov
lea
dec
data16
push
cmp
shl
aad
push
xor
inc
dec
push
(bad)
cmp
into
in
dec
push
cmp
xor
push
cwde
push
arpl
inc
mov
ss
xlat
clc
and
jecxz
jns
mov
push
mov
lea
aad
ins
pop
mov
and
repnz
mov
mov
push
inc
sbb
sbb
dec
mov
cmp
mov
(bad)
mov
cmps
xor
in
(bad)
and
mov
dec
ss
in
dec
and
pop
push
cmp
outs
mov
pop
mov
imul
in
cld
pop
mov
cli
jmp
jns
scas
outs
jae
lahf
xlat
stos
ja
push
cmp
pop
addr16
jp
mov
add
xchg
pop
ret
dec
xor
jmp
mov
enter
loopne
sbb
ret
push
jle
push
xor
aam
lods
jp
js
push
fwait
popf
pop
lahf
push
pop
add
dec
pop
repz
fadd
push
inc
(bad)
mov
cli
test
adc
fsubr
outs
jmp
cmps
out
inc
sahf
and
jp
cmp
push
or
xchg
push
fsubr
movs
cmp
push
mov
mov
int
retf
xor
and
push
pop
or
dec
dec
dec
xchg
xchg
push
movs
out
mov
mov
into
adc
cmp
ror
int3
push
add
call
(bad)
cmp
lds
push
imul
out
loopne
and
stc
sub
inc
adc
jne
fimul
data16
adc
inc
or
into
sub
push
mov
retf
lahf
inc
pop
cmp
and
outs
fidivr
movs
cwde
sbb
fsubr
push
sbb
xor
pop
push
(bad)
dec
repz
lock
push
push
addr16
mov
es
jne
inc
and
dec
dec
scas
sahf
sbb
cs
xor
jbe
ja
add
popa
rcl
mov
ins
adc
sub
add
xor
ret
mov
repnz
cmp
into
jo
sub
mov
xchg
pop
mov
aas
das
adc
adc
in
jl
inc
mov
repz
sub
popf
fstp
mov
les
add
mov
inc
sub
adc
ja
cmp
(bad)
add
xchg
push
cmp
inc
in
dec
vandnpd
pop
dec
ins
outs
mov
cmp
dec
aad
push
mov
mov
jl
das
cli
add
neg
movs
repnz
dec
mov
mov
xor
iret
or
mov
das
add
and
pop
dec
dec
std
mov
xor
stos
mov
into
push
xor
pop
imul
dec
xchg
out
dec
imul
cmps
push
lods
ins
div
(bad)
pop
jo
(bad)
fcmovb
cmc
cdq
cmps
or
adc
xchg
aad
daa
cmp
sar
and
out
add
sbb
clc
or
push
jbe
das
jl
adc
les
pushf
mov
shl
mov
test
adc
ins
rol
stos
mov
pushf
pop
push
fcom
xor
sub
sub
pusha
sahf
imul
inc
and
pop
fst
ins
scas
sub
ds
add
cmp
cmps
xor
mov
call
(bad)
test
into
sbb
repnz
mov
popa
test
sub
ss
neg
xlat
jge
jmp
(bad)
fisttp
sbb
inc
shl
mov
(bad)
int
popa
jno
test
push
add
imul
push
add
mov
dec
in
fmul
pop
xchg
cmp
stc
pop
out
inc
imul
sub
test
mov
mov
xor
add
clc
jmp
sbb
pop
shl
hlt
fwait
out
call
xchg
inc
in
dec
cld
push
pusha
xor
cs
pop
push
xchg
inc
cmp
xchg
call
data16
shl
jg
and
nop
(bad)
jb
xor
pusha
test
cmp
fcom
mov
enter
or
jmp
cld
sbb
retf
dec
rcr
cmp
adc
dec
fwait
daa
mov
xchg
aaa
pushw
cmps
outs
inc
loope
cmps
dec
mov
jo
aas
and
lock
iret
lods
mov
icebp
out
repz
in
out
js
or
mov
mov
adc
movs
stos
gs
cmc
mov
fcomp
mov
inc
ret
jno
cwde
out
sbb
enter
addr16
ret
dec
iret
mov
int
sbb
loopne
popf
ins
ror
jns
retf
sar
ds
mov
dec
repz
mov
in
push
gs
(bad)
xchg
xchg
neg
push
fist
jnp
inc
aad
jae
(bad)
lock
jmp
cmp
jmp
mov
sub
pop
clc
fist
pop
xchg
test
ret
adc
movs
or
xchg
ficomp
pop
xor
pop
loopne
xchg
xchg
push
call
mov
xchg
jns
lock
outs
mov
dec
mov
mov
scas
test
shl
sbb
ja
js
inc
lods
fsub
add
sub
hlt
test
sub
movs
call
shl
stos
das
cmp
adc
inc
ins
jmp
fist
cwde
xlat
rcr
jno
pusha
pop
pushf
fcomp
mov
jmp
xchg
jle
cmp
lods
inc
xchg
jle
es
mov
or
test
mov
cld
jmp
repnz
in
xchg
cmp
pop
jno
sbb
jp
jno
xchg
pop
cs
mov
pop
jecxz
out
(bad)
and
jnp
dec
data16
pop
bound
loopne
(bad)
(bad)
out
std
jmp
into
cld
adc
rcr
(bad)
pop
fwait
mov
nop
mov
cmp
and
inc
push
push
cmp
or
push
adc
shr
sar
add
or
hlt
mov
lidtd
test
(bad)
aaa
int
push
cmp
pop
mov
dec
adc
cmps
mov
(bad)
lock
pop
mov
sti
mov
inc
dec
and
sub
pusha
cmp
push
and
lods
mov
retf
nop
jae
call
mov
cmc
fnstsw
retf
and
xchg
sti
sbb
xchg
jmp
dec
sub
sbb
jns
jmp
addr16
int3
push
push
dec
fidivr
popa
in
xchg
mov
mov
pop
dec
mul
enter
jmp
(bad)
push
or
sbb
push
stos
mov
adc
sub
and
pmaxsw
mov
xor
or
movnti
int3
bswap
out
jnp
(bad)
mov
add
mov
mov
xor
sahf
jge
inc
lods
pop
dec
mov
sar
inc
pop
xchg
cwde
fisub
stc
or
mov
scas
pop
outs
mov
pop
test
mov
ins
addr16
(bad)
jp
clc
or
cdq
cmp
(bad)
out
lock
div
sub
dec
test
cmp
mov
fsub
lds
inc
sub
jmp
xor
push
retf
std
std
scas
loopne
bound
push
sub
popa
or
jecxz
cmc
bound
in
jmp
lea
mov
call
std
sbb
cmp
rcr
div
sbb
leave
push
sti
and
pusha
sub
mov
pusha
je
jecxz
xchg
aas
lea
fstp
out
mov
lods
or
sar
mov
pop
sahf
out
fwait
dec
jmp
ds
aaa
and
sub
or
jle
xor
jno
sbb
mov
pop
cs
or
add
mov
ja
sbb
fdivrp
int
fcmovne
loopne
and
imul
jg
xlat
out
fnsave
movs
or
shr
daa
xchg
rcl
sub
shl
adc
lahf
cmps
(bad)
je
pop
add
dec
mov
adc
sbb
(bad)
jg
cmp
popa
lds
xor
ror
cmp
in
mov
rcr
std
mov
or
mov
ucomiss
inc
icebp
push
jecxz
and
jle
pop
xchg
mov
test
out
xor
loopne
xchg
adc
shl
out
scas
mov
jmp
lahf
(bad)
daa
test
push
and
push
call
fist
lahf
dec
outs
jo
xchg
pusha
mov
test
mov
dec
aam
cmp
xchg
sub
je
pop
cmps
mov
dec
(bad)
loop
cmp
imul
push
(bad)
out
push
pushf
test
neg
mov
jmp
mov
add
out
pop
sbb
mov
rcr
mov
or
mov
xor
push
push
adc
sub
inc
push
mov
mov
mov
adc
pop
or
ss
mov
mov
xor
fcmovnb
cmps
jae
(bad)
sub
js
or
in
xchg
inc
pop
mov
gs
and
lods
int
and
mov
push
adc
push
mov
inc
xchg
pop
mov
leave
retf
sub
mov
popf
mov
mov
mov
movs
cwde
xor
xlat
jp
jp
iret
scas
mov
adc
cmp
aas
stos
addr16
mov
push
out
adc
push
fistp
aad
and
xor
dec
icebp
fsubr
sub
gs
stos
enter
push
div
mov
scas
mov
loop
pop
jl
inc
stos
jbe
lahf
out
stos
push
sub
in
jno
ss
xchg
jne
jmp
fstp
out
push
pop
cmp
pop
inc
cmp
add
shr
loopne
sahf
(bad)
mov
leave
mov
xchg
mov
and
sub
jmp
not
and
ins
shr
mov
aad
dec
ja
jp
jmp
test
cmp
push
ret
(bad)
(bad)
enter
fcmovbe
cmc
out
push
ret
repz
pop
test
scas
cmp
mov
(bad)
popf
mov
fcom
pop
in
or
nop
or
sbb
es
jbe
int
(bad)
push
aam
add
cdq
(bad)
in
jb
mov
(bad)
adc
add
shl
aas
mov
cs
je
push
inc
cmp
je
or
data16
adc
stos
and
lds
mov
xchg
mov
mov
pop
adc
in
adc
aaa
int3
jo
mov
sti
pop
(bad)
jnp
aas
leave
(bad)
and
int
pop
inc
and
jecxz
gs
jno
cmc
in
cmp
fcom
mov
xor
lods
stc
xchg
cmc
dec
pushf
ror
pop
arpl
jl
mov
jne
retf
dec
pusha
movnti
add
xchg
xor
xchg
pop
mov
aam
add
dec
push
or
pop
je
(bad)
cmp
sbb
mov
jo
scas
xor
sbb
xor
pop
in
jne
pop
call
cdq
dec
fstp
icebp
(bad)
test
mov
xchg
adc
jne
add
jle
cwde
adc
xor
xchg
aas
iret
movs
loop
adc
jo
ins
sub
inc
cdq
pusha
ss
mov
jl
mov
repnz
cmps
shr
sub
test
xlat
mov
dec
les
out
push
adc
xor
rcr
or
sub
in
push
ds
out
cld
jl
cld
push
out
pop
dec
loope
out
mov
arpl
in
int3
fbstp
imul
xchg
cmc
mov
mov
push
mov
sub
dec
fstp
mov
call
pop
and
test
test
xchg
jbe
mov
repz
xchg
mov
cmp
xlat
pop
or
inc
ss
sub
mov
mov
repz
test
lods
cs
pop
dec
jmp
xchg
sub
dec
dec
jo
mov
pop
jmp
pusha
fs
clc
neg
jmp
adc
push
rcl
jno
xor
enter
xchg
gs
inc
inc
test
mov
enter
sahf
cmps
fsub
pop
cmps
jnp
add
xor
jl
xchg
(bad)
pop
fiadd
sub
add
fnsave
rcl
call
adc
lods
xor
popa
es
ds
add
dec
daa
push
xchg
push
mov
repz
xor
dec
scas
addr16
mov
xchg
js
add
or
into
jb
loop
mov
inc
leave
in
add
dec
shl
call
icebp
aas
add
dec
xchg
xor
mov
fwait
pop
std
xchg
push
inc
(bad)
sub
sub
cs
cdq
cdq
inc
movs
cmp
cmps
or
dec
std
cmp
lods
inc
dec
adc
push
ret
pusha
sti
loopne
dec
fld
sar
cld
repnz
js
fucom
jmp
fmulp
fs
dec
jle
fiadd
iret
jge
jno
or
call
arpl
(bad)
sbb
inc
mov
in
pop
adc
mov
sbb
(bad)
data16
fwait
jae
pop
sub
mov
push
aaa
lods
xor
(bad)
push
repnz
pusha
out
xchg
retf
cmps
idiv
in
or
or
sbb
and
lahf
sub
and
shr
mov
jb
sti
jl
test
or
dec
xor
jg
test
jne
cmp
adc
fistp
inc
or
mul
fistp
jne
ja
sbb
and
out
aas
add
scas
dec
ficomp
push
ins
pop
and
dec
push
inc
pop
mov
jmp
jmp
fild
sbb
ins
(bad)
mov
out
cs
dec
pop
mov
gs
in
jmp
jp
push
pop
mov
add
leave
adc
rcr
cmps
dec
sahf
pop
in
push
mov
in
push
(bad)
out
xor
mov
sbb
xchg
inc
dec
ins
sbb
sbb
cmp
or
ins
xchg
cli
std
pop
xor
test
pop
jb
cmp
mov
pushf
loopne
into
mov
or
je
xor
add
xor
out
(bad)
adc
pop
jecxz
mov
fdivr
shr
xor
in
aam
pop
sahf
sbb
dec
xchg
mov
mov
aad
cmc
pop
es
ficomp
and
popa
or
xchg
(bad)
mov
dec
(bad)
pusha
xchg
loop
or
and
iret
jae
jne
(bad)
add
fisttp
pop
mov
xor
sahf
jmp
cmps
fisubr
inc
and
dec
mov
lods
aad
push
cmp
pop
inc
xor
aaa
pusha
mov
cmps
ds
fcomp
pop
add
and
clc
hlt
pop
lahf
dec
loop
repz
mov
cmp
or
data16
lods
pop
push
mov
push
mov
(bad)
jo
cmp
test
pusha
inc
cs
pusha
mov
push
adc
mov
push
push
adc
dec
pop
mov
clc
push
xchg
mov
pusha
ret
or
and
pop
sub
jno
jle
and
repz
mov
adc
cmp
scas
sub
cmp
jo
arpl
sbb
mov
mov
sbb
or
(bad)
and
fcom
inc
pusha
std
sbb
pop
mov
aas
mov
push
inc
mov
out
mov
xchg
int3
div
ror
pop
mov
jno
pop
push
xchg
(bad)
pop
(bad)
aam
sub
inc
cmp
fidiv
ficomp
shl
mov
into
jl
iret
scas
leave
mov
mov
adc
sub
pop
scas
sub
jne
jo
push
mov
inc
push
jmp
cdq
test
or
test
mov
inc
inc
sbb
repnz
out
(bad)
fistp
add
sbb
fmul
push
jmp
fs
movs
add
push
sub
inc
test
pop
jne
push
and
pusha
or
ins
mov
jmp
sysret
pop
mov
inc
push
(bad)
cmc
push
mov
or
iret
(bad)
sar
add
jb
mov
pop
out
jg
clc
xchg
ret
jnp
jecxz
sbb
mov
dec
sbb
jbe
imul
jmp
mov
push
clc
lods
mov
inc
neg
cmps
xchg
in
fwait
cld
xchg
int
inc
xchg
popf
jo
xchg
loope
pop
mov
ja
ds
loope
and
hlt
sub
mov
cmp
je
push
fcmovne
cmp
mov
and
into
int
xlat
and
adc
jmp
dec
pop
dec
pop
jmp
iret
stos
adc
cwde
mov
dec
adc
xor
ins
jne
push
fwait
rcl
mov
sbb
in
push
repz
sahf
push
cmps
or
stc
xlat
mov
cmp
sbb
dec
jmp
dec
inc
add
retf
xor
dec
popa
xlat
lahf
pop
add
jae
or
sahf
leave
bound
cwde
pop
xlat
pushf
add
lods
sub
add
sbb
push
adc
bound
xor
std
push
xchg
aas
add
ds
cmps
sub
dec
aam
dec
(bad)
movs
rcl
scas
addr16
ds
ret
rcl
adc
jecxz
push
shl
jle
mov
sub
and
dec
sub
mov
xchg
or
sbb
fidivr
(bad)
movs
mov
sar
xor
push
outs
mov
lahf
inc
cld
mov
test
pushf
mov
mov
or
xchg
pop
test
and
mov
shr
or
fld
pop
jecxz
mov
xchg
out
mov
shl
sbb
mov
sbb
ss
mov
js
ss
push
addr16
jecxz
fldcw
and
dec
rol
or
lods
sub
jmp
mov
imul
dec
sbb
xor
cmp
fnsave
mov
cmp
xchg
mov
imul
pop
mov
retf
xor
add
sub
ss
outs
int
gs
rcl
add
or
test
rcl
fsubr
inc
inc
inc
in
and
cmp
fmul
(bad)
inc
dec
in
in
sbb
sbb
rol
mov
and
jmp
data16
cmc
int3
and
sub
(bad)
popf
retf
mov
sbb
mov
sub
inc
stos
jmp
add
cmp
lds
or
mov
push
jge
mov
xchg
mov
or
and
pop
fadd
test
in
jo
xchg
inc
sti
(bad)
pop
stos
sbb
lds
test
stc
sub
adc
adc
out
loop
push
(bad)
nop
loopne
loopne
faddp
add
mov
in
scas
mov
push
loopne
pushw
aad
or
nop
test
and
stos
lods
mov
mov
sub
neg
inc
inc
test
pushf
cmc
lea
jecxz
cdq
pop
pop
mov
(bad)
mov
test
xor
cmc
hlt
not
xchg
mov
dec
je
inc
(bad)
(bad)
test
dec
dec
stos
into
cld
aaa
push
in
in
les
clc
scas
xchg
push
pop
aad
add
pop
scas
inc
inc
jl
jns
mov
add
imul
mov
leave
enter
push
movs
repz
rcr
or
imul
sub
xchg
xor
inc
loopne
leave
xchg
cli
mov
int
xor
mov
sbb
jo
pop
rcl
add
(bad)
icebp
mov
daa
sub
inc
cwde
push
ficomp
and
scas
ja
rcl
je
shl
or
sub
cli
xor
pop
cmp
inc
stos
fucomip
jno
retf
in
push
and
cmp
outs
and
das
(bad)
js
pop
inc
cmps
mov
aas
cmc
jb
sub
test
cmp
jno
push
mov
adc
pop
push
das
add
mov
push
mov
add
retf
pop
(bad)
shl
ins
xor
cs
movs
xchg
cs
in
fs
xor
into
sbb
fnstsw
sub
retf
mov
xchg
jmp
movs
call
(bad)
or
pop
inc
sbb
loopne
mov
fstp
ja
dec
ins
fidivr
jle
add
mov
dec
jle
cmc
jg
js
fwait
jb
loop
push
and
dec
icebp
in
jae
int3
push
(bad)
ss
repz
push
in
dec
rcr
mov
jmp
mov
and
call
enter
inc
test
imul
js
xor
push
imul
xor
dec
lea
popf
shr
or
xor
in
sti
in
pop
xchg
nop
jmp
aad
jns
pop
idiv
cmp
aad
inc
rcr
fucom
push
or
xchg
sbb
dec
dec
outs
fmul
jns
lock
mov
inc
fs
int
leave
test
sbb
or
rcr
dec
cmc
pop
lods
js
mov
jmp
data16
push
cmp
add
mov
int3
pop
mov
int3
jbe
lods
fucomp
adc
pop
jle
fadd
adc
ds
mov
std
cwde
cwde
loop
shl
iret
mov
mov
and
xlat
push
lock
push
stc
daa
xchg
adc
inc
mov
xchg
test
add
fimul
and
sar
sub
jecxz
pop
cmp
xlat
ret
repz
sbb
retf
xchg
bound
mov
sub
sbb
add
and
js
mov
mov
xchg
call
dec
mov
imul
(bad)
xchg
stos
out
cs
adc
rol
retf
(bad)
rcl
repnz
fnsave
mov
add
shl
stos
add
sbb
sub
add
inc
xlat
dec
push
test
or
fsubr
dec
popa
fisttp
jmp
sahf
xchg
pushf
xchg
or
int3
and
push
push
mov
les
mov
mov
add
ja
jne
mov
pop
leave
mov
xchg
out
rcr
pop
mov
dec
dec
(bad)
jb
call
add
leave
jb
repz
mov
mov
adc
push
mov
mov
mov
adc
fidiv
out
movs
arpl
xchg
ret
mov
hlt
mov
fisub
xchg
push
ret
xor
movs
in
and
std
sub
stos
jmp
(bad)
jmp
pop
jmp
jle
sti
add
inc
mov
les
(bad)
jno
in
cmp
call
stc
rol
stos
push
jbe
and
adc
retf
xor
mov
pop
fidiv
jmp
cmps
push
inc
test
pushf
bound
aas
ja
mov
add
mov
imul
and
push
(bad)
pop
pop
xchg
dec
repnz
(bad)
aas
or
dec
mov
scas
(bad)
(bad)
jmp
dec
js
pop
sbb
je
sub
test
mov
push
push
cdq
jp
push
pop
addr16
sbb
add
cmp
jbe
cmps
sets
sahf
mov
dec
jge
fld
xor
out
cmp
cwde
cdq
scas
and
push
and
xlat
ins
add
jecxz
stc
je
mov
pushf
sub
sbb
fimul
xchg
fimul
in
in
into
mul
ret
icebp
cdq
pop
scas
xchg
out
jg
icebp
push
sbb
cdq
mov
add
jne
mov
jne
dec
xchg
dec
ret
movs
cmc
inc
and
shl
xchg
pop
lods
jecxz
jnp
outs
push
fcomp
fidiv
jo
out
sbb
jg
pop
enter
cmps
aaa
sysret
call
lea
movs
pop
test
jb
cwde
pushf
xchg
loop
retf
jae
retf
dec
pop
retf
loope
or
push
dec
(bad)
in
outs
sbb
inc
aad
add
inc
lock
mov
(bad)
sub
push
test
and
lds
adc
lahf
gs
mov
push
dec
in
jo
not
fidiv
inc
cmp
in
not
(bad)
leave
sub
sar
or
dec
add
sub
and
mov
sbb
inc
and
pop
enter
cmp
out
std
(bad)
xchg
mov
(bad)
and
inc
sbb
ja
xor
aaa
adc
fmul
into
sub
mov
jbe
push
movs
push
mov
js
xor
jb
test
push
add
jns
dec
or
adc
push
pop
pop
mul
aam
jl
je
pop
arpl
(bad)
xchg
sahf
fstp
inc
cs
mov
add
jns
mov
dec
jo
mov
sbb
lea
(bad)
aas
mov
aam
mov
fcomp
or
scas
clc
nop
mov
mov
xor
test
clc
data16
mov
push
dec
movs
mov
cmp
mov
movs
add
inc
or
xor
pop
retf
scas
pop
add
ror
dec
inc
je
mov
leave
je
jbe
in
call
stos
push
cmp
push
mov
arpl
xchg
fwait
sub
repnz
push
fild
das
push
pop
neg
loope
push
add
retf
pop
fnstcw
sub
das
sar
scas
movs
out
add
push
adc
xchg
imul
push
push
(bad)
jg
loop
mov
xchg
rcl
scas
and
fnsave
push
push
mov
adc
add
pop
pop
aas
adc
cmp
mov
dec
pop
test
out
sbb
repnz
cmp
movs
dec
mov
sbb
in
cmp
fstp
sub
mov
aas
mov
dec
xor
xchg
xchg
push
lock
cdq
ss
shl
dec
gs
cmc
int3
(bad)
push
in
xor
iret
push
pop
cld
imul
sbb
lds
scas
(bad)
fsubr
pop
inc
xor
aad
hlt
js
movs
cmc
mov
mov
dec
sub
js
cmc
and
pop
xor
adc
bound
jo
pusha
and
lock
cld
xor
xchg
ja
jbe
lock
mov
rcl
in
mov
test
sub
dec
adc
mov
mov
ja
mov
pop
push
es
mov
lock
int
loopne
fsub
in
imul
mov
push
xchg
mov
sbb
mov
lar
aas
push
inc
mov
xchg
mov
mov
mov
in
xlat
and
cli
stc
xchg
add
cmp
lock
outs
fbstp
out
xchg
ret
(bad)
scas
lahf
ret
jle
addr16
cli
sbb
jbe
xchg
sub
loopne
(bad)
or
cmc
push
pop
xchg
xchg
(bad)
lahf
mov
fsub
mov
mov
mov
or
retf
xchg
(bad)
stc
in
sbb
mov
mov
mov
mov
ret
mov
or
sahf
sub
pop
sbb
enter
cmp
ret
dec
jbe
inc
and
cmp
jecxz
push
pop
push
cs
sbb
(bad)
cmp
cmp
mul
rcr
(bad)
fisubr
or
sbb
test
aas
add
nop
cmp
dec
pop
and
loopne
aaa
jmp
cmp
dec
stos
adc
inc
sahf
test
jae
gs
aam
dec
in
add
inc
call
fiadd
dec
and
lock
add
sub
jmp
popa
ins
fidiv
push
push
in
inc
(bad)
lock
in
push
or
test
loope
mov
inc
mov
push
and
pop
push
add
pop
cmp
imul
inc
mov
push
retf
call
sbb
cmps
cld
sbb
ss
test
stos
mov
or
fs
in
cmp
dec
xchg
in
repz
cmp
inc
or
movs
jle
popf
icebp
mov
fmul
jg
jle
shl
pop
xchg
cld
popf
add
adc
sub
mov
mov
push
pop
enter
lds
movs
mov
pop
or
xor
xchg
call
mov
push
jg
xchg
arpl
stc
lods
inc
cmp
call
addr16
adc
pop
fs
and
call
dec
inc
nop
je
push
inc
add
(bad)
xor
pop
jl
fmul
(bad)
popa
and
repz
cwde
(bad)
out
pop
repnz
sub
inc
mov
popf
push
jecxz
sbb
adc
push
ja
mov
and
jmp
jmp
aad
xchg
sti
and
fcomp
sub
and
dec
mov
mov
mov
outs
sub
mov
jmp
ret
dec
in
(bad)
test
addr16
stos
mov
and
dec
push
mov
sahf
cmp
call
rol
loope
(bad)
aad
push
ss
test
and
cmp
(bad)
fwait
cmp
mov
mov
inc
push
xor
sub
out
xchg
mov
push
cmp
les
in
add
mov
imul
int
cs
jmp
les
and
pop
das
add
idiv
call
rcr
lock
mov
sub
mov
sub
cdq
and
cmp
dec
lea
and
into
sbb
and
mov
(bad)
jmp
pushf
sar
mov
in
(bad)
inc
fdiv
stos
add
int
cmps
stos
popa
in
adc
jmp
push
and
cmp
jbe
or
pop
shl
inc
arpl
std
inc
xchg
in
and
jbe
sub
xchg
ins
xchg
rcl
add
sub
jmp
cmp
imul
adc
popf
test
or
jecxz
rcl
or
push
and
adc
das
and
pop
mov
xchg
cwde
cdq
sbb
jmp
push
xor
jne
dec
leave
mov
dec
push
pusha
(bad)
pop
dec
jmp
mov
fld
(bad)
lahf
sti
pop
push
and
push
out
cs
out
push
pop
mov
scas
movs
mov
mov
imul
pop
sub
(bad)
loop
mov
scas
jno
jle
sbb
retf
mov
xor
popf
push
stc
cmc
jl
mov
daa
jns
scas
fs
xlat
xor
xor
inc
xchg
add
popf
ret
jnp
xor
mov
pop
retf
jg
xchg
cmp
xchg
jnp
test
inc
mov
daa
or
hlt
push
pusha
enter
push
fisub
and
(bad)
rcr
jecxz
cmp
(bad)
sub
aad
dec
inc
sbb
pop
(bad)
pop
or
or
and
mov
stc
jne
movs
sbb
addr16
dec
fidiv
scas
jge
(bad)
jno
sbb
jle
inc
data16
sbb
jge
leave
and
push
fcmovb
mov
ror
sbb
fild
hlt
cmp
arpl
gs
push
inc
lea
aas
mov
add
pop
sub
fnstenv
sub
std
pop
push
adc
sti
(bad)
aas
and
sbb
mov
inc
retf
mov
sbb
sar
lock
lock
fcmovnb
or
stc
mov
jno
add
pop
ins
push
dec
imul
jb
mov
inc
xchg
sbb
cmc
retf
mov
dec
push
dec
xor
retf
in
add
out
adc
xor
xor
cmp
and
lock
shl
jge
push
ret
xchg
call
mov
cli
add
das
movs
mov
test
jmp
push
dec
cdq
inc
pop
ins
push
xlat
mov
gs
sbb
call
ja
cmp
inc
xchg
sbb
mov
add
jmp
push
neg
iret
mov
pop
addr16
cmp
pop
cmps
iret
add
or
sahf
faddp
dec
sub
inc
int
add
add
pop
dec
jnp
sbb
cs
mov
fcom
push
ja
rcl
mov
jl
and
add
out
aam
cli
add
les
ds
in
inc
mov
jbe
cmps
mov
aas
mov
fisub
icebp
dec
dec
fistp
int
or
scas
shl
push
cmps
(bad)
sbb
fs
sbb
shl
stos
outs
(bad)
mul
inc
push
ins
push
or
clc
(bad)
pop
out
popf
aam
mov
(bad)
pop
nop
xlat
mov
mov
push
test
jl
ins
inc
xchg
pop
xchg
je
dec
adc
push
inc
out
inc
ja
or
outs
retf
(bad)
and
sar
pop
xor
ret
call
test
xchg
and
inc
cld
in
imul
call
adc
push
mov
or
arpl
xchg
adc
dec
sbb
into
mov
pop
enter
call
lods
(bad)
nop
pop
push
scas
mov
icebp
jb
or
int3
jnp
dec
pop
or
add
daa
and
(bad)
sub
jge
or
loopne
outs
adc
cmps
dec
or
stc
out
mov
je
or
mov
or
xor
adc
or
lea
or
lods
sub
cmp
mov
mov
inc
or
aas
mov
fdivr
cmps
or
sub
adc
not
jae
sbb
fld
daa
mov
ja
aad
mov
mov
jp
pop
out
rcl
xchg
add
out
mov
test
sub
pop
lock
mov
cs
dec
push
lahf
or
xchg
push
cmp
inc
jp
es
addr16
and
ret
ret
mov
daa
add
jge
pop
fs
hlt
dec
cmp
ins
hlt
mov
inc
sub
inc
xchg
pusha
call
xchg
movs
adc
sub
shl
cmp
lea
clc
ins
jle
xchg
jne
or
mov
xor
jns
popa
jo
adc
mov
ror
pop
out
mov
sbb
add
adc
rol
add
pop
daa
addr16
sbb
mov
and
mov
push
mov
and
push
ja
lds
div
or
push
loope
push
push
(bad)
cmp
scas
mov
xor
sub
xchg
inc
outs
imul
pop
out
test
lods
and
mov
jecxz
mov
gs
in
pop
pop
sbb
stos
retf
loope
in
std
popa
inc
test
loope
loopne
scas
cmp
or
(bad)
dec
pop
cdq
outs
xchg
push
sahf
jle
jns
jg
and
cmp
call
ds
fnstsw
test
xchg
mov
fild
popf
mov
mov
out
mov
cmp
push
aas
out
mov
popa
inc
inc
cmp
dec
into
mov
jecxz
test
cmc
sbb
test
xor
iret
jmp
(bad)
ss
xchg
dec
pusha
push
je
call
jns
out
sbb
or
mov
jmp
loopne
repnz
shl
xor
add
jne
push
add
sahf
icebp
mov
mov
jb
fisttp
in
popf
jp
xor
sbb
iret
xchg
call
clc
movs
lds
cmps
add
movs
in
add
xchg
dec
repz
in
cmp
sbb
dec
mov
inc
add
je
movs
cmp
pop
stos
nop
add
mov
or
std
aaa
pop
scas
push
daa
js
les
ja
imul
xor
lock
sbb
ftst
(bad)
shr
dec
sub
jg
aam
jno
(bad)
jg
pop
cs
js
jle
and
adc
xchg
mov
mov
in
imul
add
aad
or
repz
cmp
daa
dec
adc
pop
nop
push
lahf
mov
push
mov
mov
test
push
pop
sbb
xchg
jns
mov
sbb
inc
stc
sbb
or
dec
add
adc
or
lods
cmc
push
dec
es
cli
or
sub
setnp
movs
jmp
outs
add
pop
lock
mov
clc
ins
cs
ss
push
add
js
push
pop
std
xchg
pop
stc
loopne
cmps
pushf
ss
push
adc
push
(bad)
movs
push
fisttp
xchg
out
pop
mov
mov
ret
push
out
outs
xchg
inc
mov
adc
xchg
outs
and
das
jle
pop
sub
xor
out
mov
xchg
shl
cmp
jle
dec
inc
push
inc
cmp
das
sub
adc
out
(bad)
js
and
pop
out
(bad)
cmp
jnp
sbb
jae
push
push
inc
frstor
das
jno
ja
adc
out
addr16
xchg
mov
leave
jns
shl
sub
inc
sub
xor
in
pop
mov
cs
mov
cmp
jmp
mov
dec
cmp
push
jg
stos
mov
and
popf
push
mov
xor
or
pop
mov
mov
cmps
cli
push
xchg
inc
mov
inc
adc
mov
shl
enter
dec
xor
push
mul
inc
movs
in
push
cmp
sub
nop
mov
cmc
jbe
outs
faddp
jne
push
cmp
loop
inc
cli
inc
mov
icebp
dec
mov
cmp
ror
ins
sub
push
rcl
mov
out
or
mov
test
mov
cli
scas
call
xchg
fstp
and
stos
sub
imul
call
call
cmp
sbb
mov
pop
adc
hlt
mov
sub
hlt
push
lahf
repnz
dec
sub
lahf
mov
push
xlat
les
mov
shl
xor
(bad)
in
inc
int
repnz
xchg
hlt
lea
or
out
cmp
fcmovnbe
mov
cmp
imul
call
in
and
jg
jb
retw
pop
fdivr
mov
pop
popa
push
clc
std
mov
mov
dec
push
cmp
mov
sub
iret
sub
or
sbb
aas
or
divps
adc
in
scas
in
jo
xchg
cmp
lock
retf
icebp
push
into
fwait
enter
ret
bound
test
outs
ja
int
inc
push
jnp
fdivp
add
fldenv
mov
mov
std
inc
nop
inc
or
ja
movs
ret
dec
pop
mov
fucom
and
add
or
lods
mov
loop
iret
inc
or
push
repz
xchg
std
adc
inc
(bad)
push
adc
and
inc
stos
xchg
ret
fldenv
xchg
(bad)
sub
dec
lods
ss
xchg
fs
loop
xor
mov
sub
mov
mov
push
mov
addr16
jmp
neg
or
pop
push
test
adc
add
loope
test
int
mov
popf
test
rcl
cmp
sbb
jb
loope
dec
pop
pop
sub
or
xchg
in
mov
js
adc
test
lock
mov
ins
jmp
cmc
int
push
sbb
or
add
and
xchg
scas
aad
adc
dec
les
(bad)
fdiv
mov
xchg
dec
or
xlat
sbb
push
retf
push
push
cmp
mov
xchg
loopne
frstor
push
test
shr
sbb
jae
scas
mov
sbb
or
dec
adc
sbb
inc
dec
movs
sub
cs
mov
call
mov
fld
js
fwait
or
lods
xchg
sbb
cmps
das
mov
jle
mov
jg
push
test
imul
and
inc
fistp
fst
es
loopne
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
(bad)
fiadd
je
jnp
aas
jnp
xlat
add
(bad)
jl
in
and
push
or
mov
fadd
jp
adc
and
xor
dec
fimul
push
sar
inc
shl
jae
push
xor
imul
jecxz
aas
clc
mov
(bad)
rcl
(bad)
and
sub
or
dec
jp
stos
clc
jp
mov
es
inc
cmp
and
jmp
push
retf
jge
jbe
ins
mov
int
mov
mov
cld
mov
frstor
add
jno
sar
dec
iret
sub
ins
jg
jl
adc
loop
movs
jbe
retf
lea
(bad)
imul
xor
test
adc
cmp
mul
adc
js
dec
sbb
aad
cmp
xchg
fs
adc
fnstsw
jb
punpckhbw
retf
cmc
or
shr
idiv
jnp
lds
icebp
sbb
pop
push
icebp
test
in
adc
rol
outs
lahf
gs
add
shr
js
psllw
dec
mov
sub
div
jb
imul
iret
push
push
adc
adc
inc
inc
pusha
scas
push
mov
hlt
adc
je
out
xlat
mov
popf
loop
and
and
xor
pop
pop
sbb
adc
xlat
out
push
add
frstor
mov
out
dec
push
push
cmp
mov
cli
adc
test
retf
mov
add
mov
adc
push
arpl
cs
sbb
mov
push
scas
pop
add
xchg
cmp
cmp
aaa
into
xor
jmp
ss
fwait
pop
jne
ret
pushf
ins
in
mov
jb
add
jmp
add
mov
dec
jmp
xchg
mov
test
sub
push
push
cmp
pop
out
sub
jp
push
arpl
push
shr
inc
sub
inc
add
fwait
leave
rcr
inc
dec
mov
jo
xor
sub
mov
pop
xor
mov
xor
pusha
mov
pop
sbb
js
push
mov
aas
adc
jne
xlat
dec
lods
dec
or
(bad)
(bad)
inc
lds
and
jne
jbe
pop
out
out
push
pop
popf
inc
dec
mov
mov
test
pop
or
(bad)
in
nop
cmp
nop
fldpi
ss
cmps
cmp
mov
fmul
adc
pop
dec
cli
mov
shr
inc
in
gs
pop
ins
(bad)
pop
clc
(bad)
inc
enter
sbb
adc
fdivr
aas
std
rcl
pushf
jl
adc
xor
std
dec
addr16
mov
dec
dec
test
pushf
mov
out
push
mov
hlt
std
aam
dec
test
cld
push
mov
adc
jo
(bad)
fdiv
cs
call
jg
or
lock
pop
dec
mov
pop
mov
shr
ret
jmp
sub
fidiv
mov
imul
sub
not
jmp
push
in
shl
jmp
mov
test
aaa
and
das
xor
adc
cdq
int
pop
mov
jb
jns
sbb
cmp
popf
jle
outs
add
sub
hlt
or
jmp
push
sbb
sub
push
jno
rol
jg
hlt
push
sub
sub
jae
mov
mov
inc
jp
repz
bound
fmul
cld
xor
jg
inc
mov
sub
mov
out
(bad)
in
mov
cmc
mov
fcmovnu
sbb
int3
mov
movs
mov
sbb
and
dec
fadd
add
push
push
retf
or
addr16
mov
add
jo
mov
fs
(bad)
ins
loope
and
or
push
jae
std
loopne
icebp
retf
sub
popa
cmps
enter
pop
xor
pop
clc
(bad)
and
and
call
cmps
pop
or
add
lahf
push
push
out
adc
mov
mov
fmul
loop
cdq
shr
push
xchg
rcr
xor
adc
dec
mov
jbe
push
cld
push
or
or
pop
mov
cs
enter
(bad)
xchg
bound
fdiv
aad
stos
adc
push
and
sub
daa
sbb
sti
das
fbstp
mov
push
pushf
lods
mov
scas
xor
push
repz
rol
aad
mov
lods
test
jnp
mov
mov
fstp
jmp
jno
cmps
mov
fwait
mov
ficomp
mov
dec
popa
(bad)
mov
data16
jae
inc
jp
scas
adc
mov
adc
adc
sub
jnp
stos
adc
ja
jno
sub
jge
sahf
not
mov
imul
fdivr
lods
push
out
mov
outs
sbb
cmp
cmp
mov
in
adc
(bad)
stc
add
push
fcom
and
sub
cli
aas
or
popf
aad
jo
(bad)
mov
sbb
xchg
sbb
jo
cs
mov
jmp
cmp
in
das
mov
xchg
jae
add
or
sbb
mov
call
cmp
sti
addr16
xchg
mov
retf
in
fbld
jb
adc
mov
jp
mov
lea
sar
push
pop
out
scas
push
xchg
repz
jge
lods
lods
xchg
sbb
popf
push
pop
int
retf
dec
lods
xor
xchg
add
add
imul
scas
sbb
jle
repnz
lods
pop
js
nop
or
fld
xchg
stc
stos
push
ja
clc
xchg
sub
lahf
mov
js
test
adc
sbb
xchg
push
popf
ins
push
add
cmp
rol
(bad)
mov
retf
push
push
and
mov
sbb
outs
cwde
sbb
shl
cmps
cmp
nop
jo
bound
cmp
mov
cmp
add
jge
call
fild
add
pop
fidiv
mov
push
imul
in
xor
in
pop
mov
mov
cmps
push
xor
push
and
xchg
jmp
in
add
xchg
fwait
in
cwde
jge
daa
(bad)
mov
stos
jns
mov
sbb
fst
lds
inc
jbe
imul
in
mov
pop
inc
xor
rcr
loopne
in
pop
out
imul
nop
mov
mov
mov
outs
cld
cmp
bound
xor
or
jne
xor
xchg
sbb
sub
ret
fdivr
test
dec
adc
add
sub
aad
xlat
adc
add
shr
cmps
mov
sub
ret
inc
aam
xchg
je
imul
xchg
pushf
test
and
mov
outs
je
xchg
or
ins
imul
jo
ret
icebp
imul
inc
nop
mov
arpl
add
pop
mov
jb
xchg
pop
shr
xchg
popf
ret
pop
push
mov
jle
icebp
repz
movs
adc
dec
sbb
or
mov
mov
retf
xchg
or
xor
pop
add
and
mov
ins
dec
rcr
push
push
out
adc
cmp
lods
fdiv
inc
addr16
sahf
push
movs
in
nop
lods
sub
or
rcr
mov
push
mov
dec
dec
sub
jmp
pop
ror
mov
ret
cwde
mov
sbb
and
mov
add
in
idiv
push
retf
imul
out
adc
dec
xchg
xchg
cmp
data16
sbb
sub
fadd
call
stc
mul
mov
push
scas
or
xor
in
xchg
(bad)
dec
push
dec
(bad)
mov
out
std
add
add
mov
add
sub
mov
cmp
mov
stos
(bad)
xchg
xor
stc
test
cmp
xor
inc
push
add
mov
push
fnstsw
call
dec
mov
sbb
lods
jle
popa
repz
xor
loop
xor
in
test
mov
mov
push
pusha
fadd
mov
inc
lea
mov
std
cmp
fisttp
sti
(bad)
rol
push
mov
mov
in
in
xor
pop
jg
fsub
iret
mov
push
sti
ficom
icebp
sbb
daa
sub
pop
cmps
pop
ss
imul
dec
ds
cmp
test
push
fild
inc
popf
mov
(bad)
imul
cmp
in
sbb
jb
xor
cmp
jl
pop
ins
pop
inc
mov
adc
jae
fnstsw
mov
add
jno
enter
(bad)
(bad)
jmp
fwait
stos
mov
mov
mov
clc
fist
fisttp
popa
adc
or
add
inc
lea
sub
jae
popa
mov
leave
mov
mov
xchg
test
pop
repnz
inc
sbb
fbld
rcl
ins
lods
clc
loope
retf
push
mov
push
xchg
inc
pop
or
inc
add
dec
xchg
test
call
sbb
mov
mov
xchg
fild
std
or
(bad)
sbb
rcl
(bad)
jmp
inc
cmp
mov
inc
and
add
mov
les
bound
adc
xchg
push
fdivr
aas
lods
cmp
pop
xchg
fs
sbb
inc
scas
outs
sub
mov
push
push
pushf
jmp
dec
add
nop
xor
shl
dec
jle
dec
xor
mov
xor
daa
lock
sbb
pop
pop
ins
pop
ds
or
xor
ret
push
add
sbb
inc
pop
push
mov
int
mov
pop
sub
pop
in
jb
and
mov
adc
ret
mov
push
mov
push
scas
dec
jno
in
mov
jb
pop
jnp
lock
mov
cmc
add
or
and
mov
sub
mov
jmp
dec
dec
(bad)
cmp
dec
mov
lea
mov
js
fdiv
movs
push
in
mov
(bad)
dec
mov
cmc
or
ja
sbb
push
xor
inc
jne
and
xchg
js
mov
pop
ins
adc
push
ror
or
pop
mov
inc
arpl
sbb
into
mov
in
test
int
movs
not
mov
xchg
shl
jle
sbb
jb
adc
jbe
sub
sbb
mov
fiadd
ror
push
fnstenv
gs
fs
adc
into
repnz
push
pop
mov
push
xchg
add
data16
jbe
inc
or
repz
sub
dec
inc
outs
inc
mov
aam
rcr
push
mov
sub
loope
cmp
mov
push
mov
std
xor
pop
fldenv
imul
mov
push
dec
stos
js
in
push
inc
(bad)
call
and
jb
dec
or
je
cwde
xchg
xor
adc
retf
cli
pop
jno
mov
adc
retf
fisttp
mov
push
sbb
aam
fst
mov
cmp
or
and
sahf
movs
or
mov
shr
pop
push
jmp
cs
repnz
ror
iret
shl
mov
or
lods
sbb
pop
mov
cmps
inc
push
bound
popaw
mov
lds
(bad)
cs
js
push
gs
cmp
aas
xor
dec
out
outs
xor
rcr
jmp
je
mov
shr
xchg
mov
fadd
xchg
dec
sub
call
add
mul
dec
mov
inc
repnz
mov
cmc
dec
test
xor
dec
call
ins
sub
test
and
push
cmp
neg
dec
and
mov
mov
ins
stos
pop
sub
nop
mov
cmc
mov
jmp
leave
dec
les
jmp
loop
dec
jo
imul
mov
inc
gs
adc
test
xor
push
fwait
xchg
push
test
je
xor
dec
retf
dec
push
stos
sub
outs
in
outs
push
out
add
lock
jbe
aas
jbe
enter
xchg
or
fucomp
movs
jmp
adc
cli
sti
pop
mov
icebp
popf
dec
adc
stos
jl
or
mov
push
sbb
movs
push
(bad)
dec
gs
dec
cmp
pusha
mov
mov
xchg
dec
in
fmulp
dec
aam
fwait
or
imul
push
inc
xor
ss
std
mov
popfw
je
push
xchg
jns
fistp
hlt
iret
dec
sbb
pop
dec
pop
cmps
mov
inc
in
fcomp
push
arpl
or
movs
mov
mov
or
cmp
push
jmp
xor
xor
imul
add
rcl
or
add
test
sub
movs
shl
push
cmp
push
xchg
mov
adc
dec
or
xor
hlt
xchg
mov
(bad)
pusha
dec
or
es
xor
xor
sub
push
dec
sub
jo
mov
enter
rcl
push
dec
jmp
push
sahf
in
cmp
mov
or
push
(bad)
scas
xchg
enter
out
gs
ret
mov
in
mov
int3
aaa
out
push
sahf
aaa
scas
lods
xor
fcom
loop
std
jb
fstp
mov
jnp
pop
adc
sbb
and
xchg
push
jnp
adc
(bad)
or
mov
sub
sub
fld
daa
and
stos
ret
gs
inc
push
adc
adc
(bad)
sub
leave
shl
(bad)
xor
push
sub
push
ror
sar
stc
pop
retf
jl
scas
outs
adc
cmp
inc
fcomp
out
in
test
mov
cmp
lea
(bad)
fs
jge
and
aad
in
dec
add
(bad)
not
dec
adc
mov
cmp
cmps
enter
xchg
sbb
loope
mov
push
rol
cdq
jecxz
cmp
sbb
mov
inc
gs
adc
dec
fist
out
std
dec
add
mov
test
data16
shl
inc
dec
mov
stc
dec
add
clc
(bad)
pushf
in
inc
or
cdq
loope
and
sbb
and
shr
push
mov
rcr
les
data16
xchg
add
pop
cdq
je
xchg
in
mov
and
or
adc
mov
add
test
and
imul
ja
mov
leave
inc
frstor
lea
ins
xchg
pop
jge
call
add
addr16
pop
movs
std
push
repz
sub
push
pop
cmp
cmp
ffree
inc
cli
mov
add
mov
push
jp
retf
(bad)
loope
jbe
cmp
retf
mov
movs
jae
mov
push
je
cmp
out
cmp
adc
in
hlt
retf
cdq
and
mov
xor
pop
scas
(bad)
outs
xor
std
pop
jnp
or
out
shl
xchg
arpl
fistp
fstp
jbe
pop
cmps
cmps
(bad)
inc
(bad)
mov
or
mov
mov
mov
and
retf
shl
push
popf
idiv
pop
into
mov
aas
fisub
dec
jae
jae
mov
cmps
or
retf
lea
inc
dec
or
mov
sub
pusha
rcr
adc
inc
push
or
scas
mov
xor
test
cdq
pop
adc
loop
stc
mov
idiv
mov
(bad)
in
xchg
cmp
mov
mov
idiv
outs
jbe
in
xchg
in
mov
lods
xchg
push
cmp
mov
xor
sub
sar
loope
push
adc
xchg
enter
test
out
sti
pop
out
pop
cmp
loope
hlt
stc
cmp
xor
cwde
add
mov
add
cwde
or
jo
(bad)
out
cmps
xchg
xor
test
stos
bnd
inc
push
std
dec
sahf
pop
push
jbe
xor
inc
inc
inc
mov
sar
aaa
jo
loop
inc
mov
shl
push
and
(bad)
jmp
ffreep
stos
mov
xchg
dec
or
popa
mov
adc
mov
setns
mov
adc
add
jge
jnp
lods
es
ret
dec
aaa
mov
dec
(bad)
mov
jp
mov
(bad)
cmps
mov
mov
sbb
xchg
retf
push
xchg
popa
jb
mov
push
push
test
(bad)
cmp
js
push
dec
sub
inc
in
cli
dec
or
xor
test
cli
push
rcl
or
pop
in
ror
cmps
sbb
pop
mov
sbb
mov
xor
xchg
enter
adc
dec
inc
retf
mov
and
int
fistp
clc
mov
ficomp
nop
jp
sahf
jl
test
ins
leave
xchg
sbb
xchg
mov
push
push
add
sub
pop
adc
mov
idiv
cdq
add
stos
daa
std
ins
pop
leave
mov
pop
push
rol
xchg
xor
stc
(bad)
lods
jae
mov
dec
push
ss
jp
xor
repnz
xor
test
mov
lea
ret
ss
pop
xchg
sbb
arpl
lock
cli
lods
push
icebp
mov
or
movs
xchg
retf
or
inc
pop
sar
inc
xlat
push
jo
add
out
jle
(bad)
hlt
jp
jo
and
shl
jp
mov
(bad)
call
repnz
repnz
aas
cwde
push
inc
mov
cmp
inc
icebp
jmp
inc
(bad)
sub
jb
inc
repnz
and
xlat
dec
pop
std
ret
ins
ds
or
fimul
cdq
pop
(bad)
retf
jne
stos
dec
cdq
sub
cmp
pop
rcr
(bad)
dec
mov
jp
js
not
xor
dec
repz
or
(bad)
mov
out
sub
scas
(bad)
pop
inc
sbb
iret
jno
and
imul
outs
pop
mov
sub
push
xchg
mov
(bad)
out
in
mov
(bad)
fst
movs
xchg
and
push
test
loope
sar
out
(bad)
push
cmp
nop
mov
clc
xchg
mov
jg
fcomp
inc
leave
pop
(bad)
fst
ins
loop
dec
mov
iretw
dec
pop
sbb
or
jle
xchg
xchg
test
loop
cmc
push
neg
and
or
enter
leave
mov
aas
xlat
push
jp
cmp
cdq
adc
test
and
mov
xor
lock
stos
jbe
adc
loopne
add
inc
sbb
fistp
push
mov
call
cdq
ret
sub
and
out
adc
mov
(bad)
fld
test
daa
dec
movs
sbb
ins
mov
hlt
fs
js
sahf
xchg
shl
lds
dec
or
call
div
hlt
or
push
(bad)
mov
push
repz
aaa
cmp
movs
cmc
clc
jmp
out
xchg
pop
ret
out
test
xor
and
sbb
xchg
dec
or
out
and
loop
cmp
jge
movs
retf
cmp
inc
mov
sti
and
mov
fdivr
cmps
add
pop
mov
dec
mov
cmps
jp
push
shl
mov
lods
mov
ficomp
int
rol
cwde
ffreep
mov
repnz
pop
mov
fcomp
sbb
cmp
hlt
xor
or
inc
imul
xor
add
imul
or
fwait
jnp
mov
in
enter
icebp
mov
xchg
pop
or
add
ret
js
nop
xchg
fidivr
test
imul
pop
cmp
outs
lods
aad
imul
out
mov
dec
(bad)
jmp
cmps
loope
push
and
cmp
lock
enter
cmp
push
jp
push
sbb
mov
pop
test
sub
out
loop
dec
or
mov
je
test
xor
add
lahf
das
and
sub
test
inc
push
pushf
je
inc
mov
dec
adc
imul
sub
or
inc
mov
out
mov
xchg
cli
xchg
int3
jbe
(bad)
out
jne
fdivrp
(bad)
test
mov
pop
sbb
shl
xor
iret
or
or
mov
scas
scas
fnstenv
fbld
(bad)
cmc
sbb
daa
and
in
sub
addr16
fsubr
mov
fwait
sub
adc
mov
sub
les
lds
pop
inc
add
sbb
and
add
test
enter
jl
add
push
jmp
dec
sub
and
daa
lea
and
push
mov
push
sbb
sub
push
inc
cmp
or
cmp
add
fdiv
push
clc
test
xchg
or
sbb
in
rcr
test
pop
int
or
adc
les
sbb
mov
mov
jmp
pop
inc
pop
jbe
pop
xchg
adc
rol
das
sub
ja
mov
and
pop
cli
aad
xor
sbb
pushf
mov
sub
loopne
es
pop
jb
sub
pop
pop
(bad)
mov
jbe
fimul
test
enter
pop
sar
xlat
lahf
fisttp
mov
fcom
ret
inc
lock
adc
mov
xchg
bound
popf
pop
jg
mov
inc
cmp
mov
pusha
std
ret
add
pop
out
test
xor
mov
jmp
mov
sbb
mov
aas
xor
aaa
or
int3
dec
or
shl
aas
ja
es
movs
mov
cmp
(bad)
clc
outs
and
sbb
push
movs
xor
clc
mov
dec
cmp
mov
jg
fst
mov
mov
test
icebp
jnp
popa
sbb
enter
ror
sti
mov
pop
sti
push
pop
xchg
cwde
xor
sub
cmps
push
jnp
or
pop
and
in
mov
dec
push
imul
mov
mov
popf
or
jle
pop
mov
jne
or
ja
lods
out
mov
je
ficom
xchg
mov
cld
ins
sub
outs
lahf
adc
jne
mov
bound
mov
or
out
(bad)
retf
out
cmp
pop
push
fs
lods
aad
stos
test
call
adc
(bad)
stc
push
xchg
lds
ins
jae
mov
loope
inc
pop
mov
inc
mov
rcl
sbb
and
out
sbb
pop
int
jge
mov
dec
psrad
xor
xor
bound
cwde
push
rcr
fild
cli
and
xchg
pushf
sub
lds
aam
jne
inc
inc
aas
leave
mov
push
ret
xchg
lahf
inc
mov
gs
inc
and
lods
jecxz
into
aam
xchg
pop
cmp
call
fistp
xor
cld
sar
popa
setge
jp
mov
sbb
mov
sub
frstor
push
(bad)
call
popf
loopne
popa
repz
pop
xchg
cmps
xchg
and
jecxz
(bad)
inc
in
mov
pop
fdivr
or
push
pop
push
repz
cmp
(bad)
movs
jo
mov
(bad)
push
jno
pop
fdiv
xchg
pop
lods
jb
iret
cmps
add
jl
cdq
mov
lock
xor
stos
dec
adc
repnz
xor
dec
mov
lods
stos
sub
push
in
adc
xchg
push
mov
fisubr
and
retf
imul
jno
xchg
adc
fs
aam
push
push
mov
xchg
add
jmp
push
mov
hlt
fs
sub
jns
pop
adc
test
loopne
and
inc
je
add
loopne
pop
call
push
sub
pop
and
test
test
push
or
addr16
rcl
and
mov
ret
sbb
daa
jo
mov
loop
mov
mov
(bad)
iret
mov
lods
data16
jne
mov
mov
pop
stos
dec
jp
movs
cmp
add
mov
ds
push
mov
mov
popf
push
hlt
loope
and
aaa
jge
add
pop
add
push
pop
in
test
sbb
fs
jg
mov
ja
hlt
xchg
mov
(bad)
neg
(bad)
mov
daa
and
dec
jns
lahf
outs
sbb
fidivr
popf
aam
popa
out
pushf
shl
loopne
xchg
xor
icebp
retf
fiadd
cli
dec
enter
(bad)
out
xchg
cmp
jns
rcr
fs
enter
xchg
mov
inc
lds
mov
dec
add
xchg
ins
cmp
xchg
inc
push
fmul
out
call
or
jmp
mov
std
sub
je
lock
outs
jp
popf
jmp
inc
jns
inc
dec
movs
jno
cmp
inc
pop
add
xchg
ja
rcr
push
pop
dec
dec
sub
push
sbb
cli
mov
cmp
test
inc
dec
cmps
(bad)
js
pop
push
(bad)
sti
fwait
arpl
jecxz
or
mov
mov
loop
dec
adc
stos
enter
js
push
pop
stos
pop
aam
aam
adc
data16
fistp
dec
mov
nop
cmps
sbb
jmp
nop
mov
jle
inc
mov
sbb
sub
dec
cmovs
push
out
(bad)
and
push
sbb
and
mov
or
pop
fdivr
add
lods
je
adc
scas
pop
push
out
cmp
inc
adc
add
addr16
push
cmp
mov
arpl
cs
sti
or
dec
jo
cmp
push
retf
xchg
rol
data16
sahf
add
outs
pop
xchg
adc
(bad)
jae
inc
dec
sub
rcl
or
ss
xor
gs
repz
clc
aad
aam
mov
inc
push
mov
mov
(bad)
or
pop
std
rcr
lods
adc
in
xchg
inc
xchg
push
cmp
jae
arpl
ret
js
cmp
inc
jg
je
ja
clc
pop
xchg
cmp
or
les
arpl
imul
ins
sbb
and
push
pop
mul
aaa
mov
push
(bad)
or
sub
fld
jp
fwait
repz
sub
leave
sbb
iret
scas
push
(bad)
daa
mov
jbe
inc
dec
and
data16
sbb
inc
fcom
push
in
xchg
xlat
test
dec
and
mov
jae
push
xchg
cmps
mov
ins
adc
in
or
aaa
out
mov
data16
sub
xlat
int3
push
je
daa
dec
scas
dec
push
test
lods
cmp
jns
or
cmp
jmp
push
or
dec
cdq
xchg
aam
add
(bad)
std
and
(bad)
push
xlat
adc
xor
dec
dec
inc
mov
lds
scas
cmp
push
mov
xchg
and
mov
out
push
jbe
inc
imul
test
inc
inc
xor
div
loopne
jbe
mov
shr
push
xchg
adc
fs
mov
jnp
push
fisub
or
call
std
jnp
mov
sar
cmc
mov
in
jg
mov
fst
pushf
out
pop
jb
sbb
fs
jae
out
jl
lods
cmc
jp
jmp
adc
and
and
adc
mov
sub
and
fsub
sar
aam
jns
mov
stos
jnp
pop
xlat
fiadd
retf
dec
push
mov
icebp
mov
xor
(bad)
sub
mov
cs
mov
pushf
test
out
jns
adc
or
sub
cmp
ficom
fucomp
pop
cmp
int3
fidivr
aad
mov
out
inc
ror
fcmovne
je
dec
xor
(bad)
pop
daa
inc
dec
mov
lods
add
or
int
inc
lods
dec
jns
pop
outs
pusha
push
ror
and
mov
cld
and
xor
lock
jecxz
loope
test
and
retf
mov
imul
enter
or
mov
and
mov
cli
jmp
fwait
cmp
dec
xor
daa
add
enter
push
pop
fdiv
pop
sbb
pusha
cmp
inc
aaa
inc
retf
mov
sub
cmc
pop
not
(bad)
daa
rcl
and
xchg
das
nop
pop
js
fidiv
mov
mov
out
daa
adc
(bad)
mov
shl
lock
xor
out
test
mov
inc
adc
mov
xchg
sub
mov
push
jae
mov
call
cld
fstp
fcomip
popf
cmc
push
xchg
pop
ins
jno
pushf
fs
rcl
cmp
push
or
leave
jge
mov
cmp
fbstp
pop
lock
test
sbb
jmp
pusha
fldenv
xchg
mov
out
mov
(bad)
in
cwde
sbb
out
rcr
and
bound
data16
shr
inc
aam
pop
mov
inc
mov
call
jo
imul
arpl
js
stc
push
adc
fidiv
or
add
jo
or
arpl
repz
pop
cwde
sbb
cmp
fs
out
test
or
mov
or
fsubr
pop
add
jg
retf
pop
fistp
scas
pop
mov
jl
xchg
fisttp
xor
or
sbb
rol
dec
lock
xor
repnz
lock
xchg
(bad)
lea
dec
push
adc
jge
jo
fcmove
rcr
dec
in
mov
mov
mov
ins
dec
and
mov
iret
sahf
or
sar
(bad)
data16
pop
mov
push
and
adc
sar
ret
cmps
jns
cmp
xchg
sbb
mov
pusha
fwait
lock
pop
sbb
out
mov
or
sub
mov
loop
jne
inc
pop
mov
adc
push
mov
and
adc
or
test
cmc
lea
push
mov
ret
sahf
es
jo
xor
push
dec
and
imul
in
inc
sbb
fucom
hlt
jne
cmp
dec
inc
sub
fmul
xor
adc
pop
hlt
call
fs
mov
sbb
mov
addr16
inc
lahf
mov
inc
or
mov
xchg
inc
mov
stos
imul
and
pop
push
jge
inc
and
into
jmp
(bad)
xchg
inc
stos
mov
sbb
hlt
push
mov
and
call
push
dec
adc
jae
xor
sbb
dec
test
aam
ficomp
mov
dec
dec
and
jecxz
stos
and
jmp
fisubr
sbb
lea
bound
enter
xor
and
dec
sbb
add
fisub
dec
fist
mov
addr16
call
mov
jmp
pop
jae
out
adc
test
(bad)
mov
sbb
test
rcl
pop
test
outs
pushf
xor
dec
xor
into
or
xchg
cmp
xor
and
int3
imul
mov
pop
or
mov
push
dec
pusha
fldl2e
or
rcl
call
sti
jmp
add
push
in
mov
sub
sbb
jecxz
xlat
shr
pop
push
sub
leave
mov
movs
mov
ins
ret
cs
stc
test
outs
sub
adc
mov
popf
lock
lahf
pop
mov
call
aam
pop
(bad)
fisttp
jge
cdq
push
into
adc
xchg
jmp
pop
add
sub
jbe
mov
sbb
xor
out
arpl
sub
adc
jb
mov
push
scas
call
inc
out
cli
das
cmp
xchg
es
pusha
lahf
lods
mov
and
or
ins
or
sbb
cwde
clc
inc
data16
cmp
out
sahf
enter
out
ror
ficom
sub
fbld
sub
lahf
iret
add
sbb
(bad)
inc
mov
jle
push
mov
fimul
cwde
sub
push
shl
pop
aad
cmp
push
jb
pop
xlat
adc
cmc
out
pop
jbe
clc
pop
inc
pushf
push
jmp
pop
or
(bad)
mov
repnz
pop
stc
mov
lea
cmp
dec
cdq
pop
retf
or
or
xchg
shl
sbb
mov
cmp
inc
sub
cmp
and
inc
leave
jecxz
dec
mov
or
fsub
adc
stos
out
adc
cs
mov
jp
aaa
adc
shl
loop
or
jge
mov
jbe
fdivr
mov
mov
mov
stc
stos
pop
xor
sbb
retf
mov
fs
sub
loop
ret
daa
daa
inc
mov
sti
add
cmp
add
adc
xlat
mov
ins
mov
dec
aaa
fisttp
ja
mov
sbb
pop
(bad)
cmc
push
and
rdtsc
mov
push
jne
fld
jb
or
jge
and
das
or
fdiv
aam
adc
movs
push
push
enter
jbe
arpl
mov
loope
cmp
(bad)
cmp
jl
les
cmc
std
sub
push
mov
cli
mov
add
(bad)
(bad)
mov
loop
test
ins
(bad)
leave
repnz
int
xchg
fcom
sbb
out
in
sbb
arpl
sub
or
test
sbb
shl
mov
icebp
pop
inc
jg
cmp
stos
cmp
rol
xor
mov
pop
scas
mov
xchg
and
and
bound
js
adc
or
call
aad
rcr
cdq
inc
test
in
fisttp
and
fimul
sar
pop
je
xchg
or
js
cdq
xor
jle
push
sub
mov
dec
adc
pop
in
les
mov
mov
test
stos
in
pop
repz
push
cs
ret
(bad)
out
aam
in
out
sbb
xor
ret
add
push
inc
pop
pop
movs
xchg
sub
push
popa
pop
dec
push
imul
mov
cld
mov
xor
jle
mov
jmp
lods
adc
iret
or
inc
and
dec
or
shl
dec
inc
push
pop
test
scas
cmp
push
cmp
and
xchg
cmp
ds
and
pop
rcr
push
in
gs
sahf
dec
pusha
gs
cmp
inc
inc
adc
test
shr
lods
cmc
or
adc
ins
lea
sub
and
(bad)
or
sbb
les
jle
loopne
das
idiv
and
jmp
jge
add
jae
push
test
adc
aad
das
jae
(bad)
iret
ret
inc
dec
pop
pop
jecxz
xor
dec
xor
cmp
mov
inc
sbb
inc
mov
cmp
fwait
jnp
xor
je
or
xchg
adc
mov
in
std
mov
push
push
int
push
or
jl
mov
pop
xor
jmp
into
imul
adc
pushf
imul
sar
in
or
cmp
mov
pop
nop
cmp
mov
sbb
fstp
push
outs
(bad)
xchg
mov
popa
cmps
push
fdivr
retf
jmp
loopne
test
loop
cwde
in
das
pushf
cmp
adc
imul
fadd
pop
fimul
mov
push
daa
xor
jmp
pop
stos
sbb
ss
mov
dec
jmp
jns
sbb
imul
xchg
lds
(bad)
arpl
cmp
jbe
std
or
push
clc
pop
leave
je
(bad)
stc
je
in
sub
sti
and
pop
xor
and
lds
cmp
adc
sbb
or
jmp
sub
add
fidivr
lds
xchg
mov
sbb
push
push
push
out
enter
pop
cmp
(bad)
fcmove
add
shr
test
xor
leave
add
cmc
fmul
lea
cdq
jae
push
clc
retf
cmps
repz
jp
inc
pop
pop
aad
je
inc
fcom
xchg
or
and
test
mov
mov
scas
lds
daa
cld
repz
fcomp
enter
cmp
xor
xchg
push
push
mov
movs
std
icebp
dec
mov
pop
xchg
add
adc
push
mov
add
sbb
push
ins
mov
stos
retf
(bad)
cs
loope
or
aas
(bad)
mov
add
push
cmp
je
or
sbb
adc
loopne
mov
shr
stos
pop
in
movs
pop
push
ds
dec
mov
mov
push
dec
shl
xor
push
inc
cmps
int
cmp
mov
fs
mov
imul
ficomp
ror
loope
push
jmp
div
dec
sbb
out
fild
int3
dec
std
test
lahf
cmp
adc
inc
jecxz
aad
mov
icebp
add
lods
sti
test
ins
fbstp
lods
loop
lods
mov
adc
arpl
imul
mov
(bad)
jg
sar
xchg
stos
jecxz
(bad)
aad
mov
cwde
in
mov
pop
call
ss
inc
sbb
out
out
movs
or
sub
sub
mov
cmps
aaa
cwde
or
mov
pop
xor
lea
jno
xchg
mov
scas
fdivr
mov
sub
or
fwait
cmc
ds
std
cmp
dec
cmp
outs
mov
jle
int
and
push
mov
cmp
test
inc
popa
movs
dec
pop
mov
dec
aad
outs
cmp
add
in
pop
sub
pop
and
imul
ins
(bad)
std
rcr
fs
call
xor
or
xor
lahf
clc
pop
add
mov
mov
gs
and
outs
xor
and
loopne
mov
cmp
loopne
dec
fnsave
add
stc
jne
xchg
jl
jbe
dec
clc
out
outs
pop
into
fcomp
jbe
push
ret
enter
aas
fist
mov
xor
retf
es
mov
dec
xsha256
cmps
pop
or
and
enter
iret
out
rcl
adc
sub
inc
mov
jb
mov
dec
mov
jge
pop
add
cmp
sbb
jmp
push
cmp
add
in
sbb
imul
cmp
xor
xchg
popa
stos
xor
daa
xor
sbb
mov
(bad)
loope
pop
mov
ret
xor
cmp
xchg
adc
shl
hlt
xor
out
lahf
movs
cmp
and
inc
sub
call
les
lahf
sbb
stos
dec
mov
into
add
inc
mul
enter
xchg
add
pop
sbb
push
add
jmp
xor
fsub
pop
gs
(bad)
cli
dec
in
jo
fsub
je
jo
pop
or
stos
mov
push
dec
jae
test
daa
je
cmps
jo
aad
or
cwde
(bad)
in
and
jb
xor
les
add
and
jge
xor
pop
imul
aad
cmc
mov
inc
imul
in
call
push
cs
or
stos
shl
xlat
xchg
xlat
push
mov
cmp
xor
pop
out
aam
cmps
fimul
vpunpcklqdq
jno
inc
ss
cmps
fbld
sti
nop
int3
mov
cwde
retf
and
jmp
js
cmps
ins
pop
lods
sub
xlat
adc
test
inc
fild
nop
inc
clc
outs
les
inc
sub
fld
xchg
ins
and
push
jl
imul
push
les
push
dec
push
push
clc
pop
addr16
mov
pop
imul
mov
sub
pop
xchg
aas
mov
adc
and
jmp
dec
ds
fwait
pop
pop
into
xchg
adc
into
inc
stos
mov
aas
or
mov
popf
and
fiadd
sbb
or
push
or
xor
js
fdiv
inc
cli
or
fadd
mov
int3
arpl
xchg
dec
loop
pop
fs
mov
mov
mov
mov
sbb
daa
xlat
adc
(bad)
clc
iret
xchg
out
call
lods
shl
add
dec
shr
je
out
jmp
dec
and
and
xchg
outs
outs
mov
pushf
mov
cwde
add
pop
dec
mov
ror
sar
jne
mov
pop
mov
xchg
xchg
cmc
inc
mov
mov
lock
push
in
push
into
ja
push
mov
jae
xchg
stos
push
int
sub
push
mov
jecxz
aad
in
imul
clc
push
mov
not
sub
int
stos
xor
cmp
adc
mov
test
cmp
add
xchg
pop
adc
add
test
mov
dec
mov
jo
push
or
ud0
rcr
icebp
movs
rol
es
fs
popa
fiadd
pushf
add
and
push
movs
add
jge
jnp
adc
xchg
ficomp
sbb
sti
push
sbb
jb
add
mov
dec
mov
popf
outs
ret
fsub
add
in
mov
icebp
stos
loopne
inc
ss
addr16
mov
cmp
pushf
mov
dec
repz
and
or
push
jbe
add
jae
add
or
pop
outs
jg
jne
addr16
push
aaa
repnz
pushf
push
or
inc
clc
push
sbb
scas
fstp
mov
mov
cmps
ins
cmp
fcom
or
inc
and
jecxz
out
pop
(bad)
pop
mov
(bad)
sbb
arpl
jo
sub
jle
xor
mov
loope
xchg
or
push
fidiv
fwait
inc
call
or
stos
mov
sub
movs
cdq
loope
mov
jmp
dec
mov
sbb
jmp
sbb
mov
or
or
retf
mov
aam
(bad)
(bad)
mov
std
and
dec
movs
pop
in
icebp
jge
add
mov
call
add
push
push
jne
repz
add
dec
es
les
sbb
xlat
ret
inc
lods
push
retf
jb
mov
loopne
mov
pop
out
xor
std
sbb
xor
outs
(bad)
mov
jnp
fstp
pop
lock
lods
arpl
ds
pop
mov
cmps
aaa
jae
xchg
stos
sbb
in
(bad)
sub
pop
xchg
aas
cmp
sub
dec
jae
in
test
fsub
lahf
cmp
xor
pop
clc
std
or
mov
cmps
iret
mov
in
in
stos
mov
nop
mov
sub
sti
sub
and
pop
sub
push
or
js
stos
test
cmps
mov
mov
adc
and
adc
aas
aaa
sti
in
fistp
or
or
in
lods
inc
stc
mov
outs
fadd
jns
stos
xor
int
dec
jmp
mov
inc
push
pop
popa
adc
sub
loope
push
mov
inc
sbb
ds
icebp
lahf
retf
dec
inc
mov
add
dec
bound
cdq
jg
jo
dec
ret
adc
pop
sbb
jge
pop
fadd
movs
sbb
int3
gs
xor
pusha
sbb
outs
ins
leave
retf
mov
or
cs
mov
scas
mov
ins
dec
fimul
in
nop
aaa
mov
ret
dec
fnstcw
xlat
retf
ja
mov
dec
mov
arpl
or
xor
or
sub
jmp
dec
arpl
je
xor
add
pop
inc
mov
push
aam
adc
adc
add
inc
lahf
addr16
cmps
(bad)
mov
dec
jbe
add
mov
cmps
dec
daa
add
jae
cmp
cmovns
dec
in
int3
ret
loope
stos
cmps
push
push
xor
jbe
call
sbb
xchg
ins
rcr
gs
xchg
loopne
lods
jg
(bad)
adc
ins
and
fidiv
retf
adc
imul
xchg
xor
imul
popa
rcr
push
xor
xchg
or
pop
sar
xor
cmp
adc
aaa
cdq
and
add
mov
pop
adc
movs
fidiv
cmp
movs
cs
lods
mov
cmps
fcmovbe
out
retf
stc
movs
cmp
dec
mov
xchg
loopne
addr16
or
jb
mov
inc
push
bswap
dec
fwait
aas
in
push
inc
das
inc
cmc
jp
int3
shr
fnstenv
mov
and
iret
mov
adc
jmp
xchg
push
add
mov
test
mov
shr
jmp
popa
loope
jmp
sub
adc
dec
mov
sbb
mov
mov
ret
mov
sbb
xchg
adc
fisttp
or
ret
add
jmp
sub
in
mov
ror
pop
les
dec
sub
pop
push
inc
popa
push
ret
pop
jnp
out
clc
retf
dec
xchg
cmp
push
cmps
mov
sbb
loope
jb
movs
das
rcr
and
test
or
aam
rol
imul
out
mov
loopne
dec
movs
stos
retf
inc
inc
xchg
hlt
test
in
lea
mov
arpl
retf
icebp
sti
pop
popf
out
rcl
mov
pop
pop
(bad)
add
cmp
sbb
jge
(bad)
gs
pop
mov
mov
push
aaa
xchg
outs
dec
call
jne
pushf
arpl
dec
and
lods
daa
dec
sbb
and
stc
xor
mov
mov
(bad)
dec
mov
jns
dec
xchg
ret
mov
outs
and
div
push
mov
sub
ss
cmps
inc
(bad)
jge
sbb
outs
scas
mov
loopne
mov
pop
dec
cmp
ins
pop
mov
fisttp
cmp
rcl
add
sti
inc
mov
retf
inc
in
mov
popf
lods
ja
mov
push
test
dec
mov
pushf
push
pop
retf
push
jecxz
movs
jne
or
xor
inc
and
dec
les
lds
ret
mov
int3
jne
retf
inc
jno
sahf
imul
jg
xor
add
cmps
mov
icebp
xor
inc
aaa
jo
sbb
mov
pusha
xor
sub
inc
movs
aaa
mov
dec
pop
js
loope
sbb
push
out
mov
es
movs
cmp
stc
outs
fldenv
sbb
popa
sbb
pop
mov
les
cmp
daa
stos
cmc
sub
push
ret
or
fld
pop
xor
and
pop
mov
xchg
fisubr
mov
xchg
add
hlt
into
xor
jo
fadd
add
and
(bad)
ret
cmp
mov
jmp
mov
test
mov
and
shl
dec
and
push
mov
xlat
dec
retf
repz
mov
mov
into
aad
jb
(bad)
shr
enter
(bad)
mov
ret
in
cmc
inc
daa
cmps
movs
jge
push
sbb
into
xchg
scas
push
xchg
mov
adc
(bad)
and
or
push
jmp
jae
jecxz
and
cld
adc
rol
es
cdq
mov
push
push
adc
test
les
ret
inc
cmp
inc
mov
adc
or
aaa
xchg
cmps
cli
dec
cmp
rcl
add
jo
jle
mov
pop
or
and
aad
cwde
mov
mov
sar
dec
xchg
test
or
ins
jle
in
out
cld
cmp
inc
xchg
mov
dec
mulps
mov
inc
xchg
js
push
test
nop
hlt
hlt
push
cld
mov
popa
xor
ss
push
dec
call
cwde
icebp
pop
daa
hlt
add
mov
push
push
lods
ficom
lods
fs
(bad)
jns
mov
(bad)
jle
movs
push
sbb
out
mov
sub
int
stos
sub
add
push
pop
rcr
test
mov
lahf
cmp
jl
mov
ds
into
idiv
jbe
(bad)
or
mov
hlt
push
movs
and
fldenv
xchg
sti
mov
adc
out
fiadd
(bad)
xor
cmp
jnp
data16
or
cmp
out
inc
or
or
arpl
das
xor
movs
faddp
add
sub
or
jne
ret
sbb
xchg
movs
jge
and
outs
sbb
loope
push
lods
and
mov
sar
xor
gs
xchg
das
dec
dec
int3
in
or
sub
push
sub
sbb
imul
loop
adc
aas
dec
cmc
xchg
or
icebp
push
fnstsw
aas
cmc
(bad)
mov
mov
sbb
add
push
jecxz
sbb
pop
push
mov
cmps
stc
push
sti
xor
aam
icebp
mov
bound
loop
test
les
dec
out
mov
scas
adc
in
inc
sti
mov
not
aaa
shl
popa
jle
iret
or
jne
pop
mov
adc
sub
push
sar
inc
fwait
clc
pop
pop
loopne
xor
in
fsubr
dec
xor
pop
dec
and
mov
sti
imul
out
dec
xchg
push
mov
mov
stos
sbb
adc
mov
outs
add
lock
add
cmc
test
retf
sahf
xor
cmp
jo
ja
adc
xchg
inc
push
sti
xchg
adc
ins
sub
lea
or
push
jmp
and
push
dec
inc
pop
cmp
and
data16
test
mov
add
and
or
imul
xchg
xchg
aad
jb
sub
fisttp
sar
mov
test
rcr
cmp
sbb
out
pop
clc
add
mov
mov
mov
setne
movs
js
iret
dec
mov
push
(bad)
retf
sub
sub
test
repz
mov
ins
pop
mov
ins
add
int
push
add
or
popf
mov
xchg
retf
test
lods
pop
sub
or
sbb
fsub
int
and
icebp
push
fst
(bad)
add
ds
mov
mov
push
adc
mov
sbb
xchg
retf
cs
sub
sbb
xor
pop
addr16
jno
scas
out
int
inc
mov
xchg
mov
test
push
les
ret
inc
pop
sbb
mov
push
xchg
jmp
jbe
adc
mov
cmp
stos
in
(bad)
leave
cdq
cli
pusha
and
mov
jle
test
mov
or
pop
sub
adc
sbb
sub
push
test
and
ret
fs
mov
sbb
pop
mov
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
cmp
imul
call
xchg
dec
in
aaa
or
push
mov
mov
loopne
jl
jg
push
fisttp
mov
or
stos
std
jnp
leave
hlt
mov
xchg
add
(bad)
xor
pusha
pop
xlat
pop
xchg
sub
(bad)
bound
dec
fldcw
or
inc
push
clc
pop
fwait
or
mov
sub
or
(bad)
aad
lds
hlt
sbb
jge
mov
cmc
ja
aas
mov
dec
or
shl
daa
push
push
fdiv
pop
mov
jecxz
stos
sub
hlt
mov
sbb
mov
jns
dec
jmp
sbb
sub
mov
pop
(bad)
dec
pop
stos
std
pushf
jnp
test
loop
xchg
cmp
pop
push
mov
mov
or
ror
jmp
pusha
ins
jmp
sub
inc
jo
dec
jo
mov
adc
loopne
outs
jae
sbb
cwde
aam
pop
xchg
push
scas
adc
std
(bad)
int3
cmps
test
push
xchg
leave
nop
cmps
scas
push
call
inc
icebp
xchg
ret
addr16
daa
bound
hlt
fucom
add
fsubr
movs
inc
add
adc
lods
je
mov
les
mov
ss
jmp
add
mov
nop
sub
pop
add
faddp
loope
push
and
cld
mov
push
xchg
or
push
lods
or
aad
mov
lods
rol
mov
mov
dec
and
ins
ja
pop
mov
in
aaa
jecxz
cwde
div
dec
dec
adc
lods
dec
xchg
fsub
inc
pop
jl
inc
pop
pop
int3
mov
xor
xchg
enter
pop
mov
adc
ss
pushf
push
push
test
ret
mov
jae
scas
xlat
mov
ret
jge
fwait
sti
js
push
xor
std
cmp
pop
xchg
mov
xchg
cwde
pop
cmp
push
imul
lods
mov
xchg
xlat
aas
cli
int3
and
push
cmp
pop
retf
pusha
pop
(bad)
sbb
jae
ja
stos
adc
sub
xor
mov
pop
xchg
lock
(bad)
jno
div
jecxz
neg
ss
inc
loope
into
cli
inc
jne
leave
xchg
xchg
sbb
cdq
adc
mov
jge
pop
ja
addr16
mov
fmul
xchg
mov
enter
(bad)
into
push
popf
cli
and
mov
hlt
mov
adc
ret
cmp
loopne
mov
lods
outs
pop
test
xchg
jae
mov
xchg
iret
sbb
stc
(bad)
mov
pop
pushf
mov
out
je
out
or
push
jo
push
cmc
mov
pop
jno
jo
inc
cmp
jl
jp
aas
sub
fucomp
int3
(bad)
ds
and
sbb
je
and
pop
mov
xchg
int3
xor
jecxz
and
lea
in
push
cld
fistp
nop
jbe
pop
imul
sbb
in
xchg
es
call
or
xchg
and
adc
jae
cmc
sbb
xor
leave
jp
movs
sub
(bad)
arpl
test
sub
xchg
nop
cld
inc
mov
cmps
mov
into
jae
mov
sahf
jmp
xchg
div
addr16
push
mov
cmps
and
add
pop
inc
test
dec
popa
test
jl
and
sub
out
pop
aad
adc
xchg
movs
sub
cmps
mov
data16
mov
bsf
cmp
cmp
stos
cli
push
ret
xchg
mov
jecxz
jl
jae
jmp
leave
mov
xchg
sbb
cmp
cmp
imul
push
mov
les
cli
add
mov
in
in
sbb
sbb
scas
pusha
inc
repz
xlat
mov
xor
mov
xchg
aam
loope
or
lahf
es
jnp
ins
xchg
xor
pop
fistp
xor
push
loope
or
mov
fidivr
dec
in
adc
bound
(bad)
in
xchg
and
cmp
test
or
(bad)
jae
mov
ror
leave
cmp
push
dec
mov
push
mov
ret
data16
adc
gs
mov
(bad)
aad
fs
mov
mov
rol
push
inc
loopne
neg
ficomp
stos
shl
adc
aam
push
or
mov
xchg
mov
inc
inc
nop
xor
lds
aad
(bad)
das
stc
data16
stc
or
sti
leave
scas
add
stos
xor
or
xchg
push
lock
xchg
push
mov
xchg
cmp
adc
aad
push
add
imul
ds
and
xor
and
dec
popa
inc
ret
rol
or
or
aam
scas
(bad)
sub
adc
inc
pusha
pop
jle
or
inc
iret
out
mov
pusha
ins
mov
ret
iret
cmp
movs
or
xchg
pop
cdq
ins
ins
xor
rol
mov
repnz
jbe
push
repnz
int
sbb
movs
and
inc
iret
jb
int3
cmp
fidivr
xor
aaa
push
push
fsubr
adc
add
pop
cmp
xchg
scas
inc
loope
ins
sbb
xorps
add
es
xor
lods
gs
and
loope
fdiv
lods
fst
hlt
push
loopne
cdq
jne
mov
sbb
push
xor
sub
mov
jle
ins
mov
ins
xchg
and
or
sub
test
pop
xchg
pop
(bad)
shr
jne
ret
jle
add
mov
push
lea
pushf
cs
sub
mov
or
fnstcw
pop
dec
mov
cmc
inc
imul
mov
arpl
loope
ffree
cmp
ja
cmc
and
dec
xchg
push
cmp
out
dec
mov
pop
ja
add
jne
mov
mov
stos
xchg
lods
cld
sub
pop
out
fst
mov
or
out
leave
sub
xchg
sub
std
lock
es
add
cmc
mov
cs
cmp
mov
repz
inc
mov
push
and
pop
std
icebp
call
call
xchg
dec
cmp
push
cmp
push
xchg
movs
jge
loope
pop
cmps
aad
inc
xchg
shl
out
jmp
or
pop
scas
nop
push
mov
(bad)
pusha
sub
add
mov
ja
jmp
call
lds
lea
sub
xor
sub
xlat
mov
adc
cmp
push
cmp
or
lods
pop
int3
or
adc
and
dec
lock
mov
aaa
inc
pop
mov
fbld
lods
ds
inc
into
pop
iret
fwait
loope
cmp
cwde
push
ja
mov
inc
call
cmp
adc
shr
(bad)
mov
cli
out
pop
adc
sub
call
(bad)
cmp
lods
and
push
pop
rol
out
fdiv
mov
sbb
push
cmp
mov
jl
out
sti
pop
nop
jecxz
xchg
lock
fisub
mov
aad
cmps
pop
ds
dec
pop
stos
jmp
popa
cdq
adc
sbb
cs
ss
es
fidiv
dec
test
scas
pop
add
in
idiv
mov
jl
cmp
imul
sub
or
cmps
inc
pop
lds
fs
ds
adc
mov
xchg
rcl
cmps
ss
lods
push
(bad)
and
jno
xor
add
fadd
jno
add
into
ins
dec
movs
adc
push
cwde
mov
rcr
dec
push
dec
cmp
fstp
push
add
pusha
push
movs
or
popf
lahf
xchg
test
pushf
mov
or
sbb
dec
and
mov
fsubr
push
stos
out
cmc
imul
sahf
inc
jnp
and
cmp
out
adc
pop
jle
in
dec
inc
mov
pop
lods
movs
jae
movs
movs
lahf
dec
fcomip
fs
dec
sbb
ds
fnstsw
pop
and
cmp
aas
sub
std
pop
mov
mov
push
aam
push
or
cdq
cmp
imul
popw
adc
ret
sub
pop
in
test
jae
lock
push
arpl
std
in
movs
pop
xchg
add
sti
test
add
ins
loope
push
push
daa
push
xor
mov
pop
mov
xor
ja
push
mov
or
scas
pusha
mov
pop
out
outs
dec
xchg
movs
jne
cwde
movs
outs
inc
xor
pop
mov
das
test
lods
cmps
jmp
fwait
jmp
push
jge
loop
aas
xchg
(bad)
sti
cmps
arpl
mov
cmp
push
call
pop
or
cmp
dec
sub
add
ins
pop
in
test
stos
mov
aas
rcr
adc
repz
stos
ja
dec
daa
and
dec
fnclex
(bad)
adc
pop
mov
fidivr
adc
jge
dec
and
sbb
(bad)
in
fcomp
xor
push
jecxz
sbb
mov
adc
dec
sahf
mov
gs
add
cmps
mov
and
icebp
pop
xor
pop
pop
adc
and
rcl
cmps
ror
repz
cmp
jne
cwde
sbb
test
lock
rol
cmp
cmp
cmc
daa
fs
or
sar
or
sbb
pop
cmc
movzx
or
push
or
stos
out
out
loop
dec
sysexit
add
stc
xchg
push
cmc
xchg
call
fadd
sbb
adc
cmps
stc
push
les
into
into
jo
hlt
sub
bound
push
add
add
lods
into
ins
xor
fist
xchg
push
push
fadd
inc
ret
cmp
pop
lds
push
mov
and
push
sbb
mov
out
out
mov
cmp
cmps
fstp
call
mov
es
xchg
lods
jb
sbb
dec
add
ror
bound
(bad)
ror
mov
mov
push
out
jbe
pop
push
test
or
xor
sti
xchg
ins
sbb
push
pop
leave
mov
imul
push
push
sbb
cs
and
inc
retf
jle
pushf
addr16
pusha
(bad)
cld
adc
mov
mov
aaa
imul
add
xor
jo
dec
sahf
fs
cmp
jge
sbb
cmp
push
mov
loop
push
lahf
xchg
sub
cmp
mov
jg
dec
aam
jge
je
add
int3
jo
fdivr
sub
stos
mov
xchg
jl
sbb
or
sbb
cmps
iret
call
pop
jle
lds
hlt
jmp
js
mov
inc
bound
call
adc
mov
mov
(bad)
sbb
jecxz
or
lods
adc
inc
mov
inc
scas
add
sbb
adc
cli
movs
retf
popf
xor
dec
add
jle
fsub
or
cmp
xchg
js
lds
loope
hlt
fist
test
shl
push
inc
xor
mov
dec
jne
push
shr
imul
and
mov
lods
(bad)
imul
fdivr
lea
xchg
lahf
arpl
pop
in
enter
xchg
jmp
jl
call
cmp
leave
adc
dec
and
leave
jmp
aas
mov
cld
inc
jb
or
or
sti
sub
test
sbb
sbb
(bad)
fsubr
and
inc
push
pop
mov
fwait
(bad)
sti
and
jmp
stos
sti
cld
rcr
movs
out
sar
outs
sbb
call
fldcw
dec
std
mov
inc
xor
inc
les
dec
and
xor
xchg
jg
push
jnp
aam
jbe
push
push
xor
lods
jmp
or
mov
inc
cmps
(bad)
xor
push
inc
shl
shl
out
daa
mov
loopne
adc
xor
cwde
test
xor
movs
lds
(bad)
jmp
loopne
sbb
dec
sub
int
sub
gs
pop
loop
mov
test
ins
jg
addr16
cli
inc
jp
dec
cmp
dec
std
test
sahf
ud0
inc
lock
cmc
jo
fiadd
fist
fcom
bound
and
fmul
adc
dec
and
sar
sub
xchg
push
push
add
mov
std
(bad)
fstp
xor
cmp
xchg
int3
lds
adc
enter
ret
and
fdivr
dec
add
rol
fidivr
lock
mov
inc
pop
into
xchg
xchg
and
push
test
enter
dec
sub
adc
or
xor
dec
mov
jmp
push
jo
adc
sti
or
(bad)
cld
into
jmp
mov
xchg
ror
mov
stos
aad
arpl
or
cmps
xchg
ret
xchg
xor
mov
push
jno
push
aas
(bad)
jnp
js
add
in
push
int
jnp
sbb
and
inc
rcr
stc
pop
stos
mov
loop
pop
ret
jle
or
or
neg
push
loope
inc
xchg
jne
ret
lahf
sbb
in
in
xor
lods
leave
jmp
or
(bad)
pop
rol
in
out
push
push
and
dec
adc
idiv
sub
out
adc
mov
pop
test
loopne
movs
xor
repnz
cmp
dec
fisttp
inc
or
frstor
in
movs
and
sti
mov
add
icebp
cmp
adc
inc
scas
xchg
out
jns
xchg
sbb
mov
outs
xor
adc
(bad)
mov
mov
dec
and
inc
icebp
test
sub
adc
xor
cmp
push
retf
and
cmp
cmp
inc
cmp
out
outs
mov
test
mov
xchg
loopne
jae
cs
stos
mov
xor
(bad)
mov
movs
fbld
sbb
mov
cmps
lahf
sbb
repz
dec
pop
pushf
mov
loopne
xchg
bound
mov
xchg
sar
iret
pop
add
ror
outs
test
pop
dec
(bad)
idiv
pop
addr16
fsub
jl
dec
xchg
pop
call
push
dec
aas
push
popa
(bad)
xchg
add
mov
dec
dec
int3
aas
das
rcr
adc
test
imul
ja
sbb
push
cmp
loopne
pop
ins
in
dec
imul
mov
sub
add
stos
fcmovnu
test
(bad)
and
inc
xchg
add
push
call
cli
dec
mov
inc
push
or
adc
or
test
sub
inc
xor
out
mov
jg
cmc
mov
aas
adc
scas
jbe
pop
mov
rcl
push
pop
sub
pop
adc
mov
(bad)
shr
cmps
bnd
aad
sbb
inc
test
and
mov
mov
inc
push
and
ins
int3
out
lods
pop
or
cld
js
mov
adc
adc
fwait
js
mov
test
ret
dec
(bad)
pop
aad
push
imul
or
(bad)
or
scas
out
mov
xor
dec
lahf
dec
lea
aam
lahf
loop
ins
cdq
sub
(bad)
mov
and
cwde
sub
(bad)
adc
cmp
paddusb
lods
stos
std
lods
ins
fstp
in
call
xchg
in
sub
loopne
imul
cmps
xor
ja
in
and
or
inc
mov
shr
xchg
jl
mov
push
(bad)
es
ret
cmps
xor
push
daa
out
shl
test
jb
shl
mov
test
enter
loopne
pop
adc
adc
int
or
ror
push
jns
cld
out
int3
xlat
pop
aam
test
popa
into
dec
cli
outs
inc
jg
stos
pushf
inc
adc
xchg
sub
fild
adc
jo
mov
daa
popf
je
add
cmp
ins
mov
lock
les
jne
cld
pop
add
or
inc
xadd
push
outs
in
adc
iret
or
jnp
test
pop
retf
cdq
xor
(bad)
nop
or
cmps
nop
fimul
retf
pop
mov
push
ret
jbe
outs
mov
into
outs
popa
push
call
nop
mov
push
test
jmp
push
cmp
mov
ret
sbb
mov
scas
test
sub
outs
fdivr
loopne
sub
or
cmps
adc
neg
xchg
scas
or
add
shr
push
push
rdrand
pop
jbe
loope
clc
lods
(bad)
fld
or
mov
bound
dec
loope
jp
leave
out
push
mov
or
inc
pop
xchg
mov
in
sbb
mov
mov
xor
sub
loop
or
xlat
scas
call
int
pop
(bad)
pop
into
pushf
enter
dec
fild
and
inc
test
sti
push
push
mov
and
xchg
sub
cmp
imul
push
cli
pusha
sub
int3
jnp
dec
ja
mov
dec
add
int
das
mov
add
cdq
dec
cs
pusha
jmp
fucomi
mov
xor
cmp
cmp
rol
(bad)
mov
mov
xchg
jg
ss
cmps
adc
cmc
sub
gs
in
fwait
cs
outs
test
movs
mov
pop
and
xchg
(bad)
shl
shr
adc
cmps
add
scas
cs
ficom
jg
add
jp
div
addr16
mov
scas
pop
cmp
leave
fs
or
push
and
lock
fsubr
in
in
cmc
out
mov
sub
push
xor
jmp
ins
xor
lea
stos
jecxz
outs
pop
sbb
jmp
es
mov
pop
movs
lahf
xor
mov
ins
cmp
aas
ret
sub
shl
data16
mov
fldcw
jecxz
pop
shl
(bad)
pop
popa
test
fimul
enter
mov
push
mov
enter
and
cwde
icebp
mov
outs
jne
jmp
push
cmp
fistp
inc
sbb
stos
daa
adc
pop
mov
js
rcl
xchg
and
xchg
mov
push
sbb
fldenv
sahf
in
mov
xchg
xor
aas
push
xchg
shr
add
push
jb
hlt
idiv
ret
scas
dec
or
jmp
call
pop
out
xchg
xor
pop
and
jae
fcom
mov
cmp
je
mov
or
outs
pushf
out
mov
outs
cld
call
push
ins
mov
scas
pop
aaa
inc
stos
pop
mov
push
or
les
add
mov
test
xchg
cmp
stos
mov
and
sahf
mov
cwde
jo
sub
jbe
gs
jno
jge
call
mov
pop
sbb
cmc
pop
shl
mov
sbb
or
movs
iret
pop
lods
out
bound
sbb
or
loop
mov
lods
push
ja
mov
fdiv
in
push
adc
xchg
mov
dec
pop
xchg
cmps
daa
ror
cmps
mov
cmp
cld
dec
adc
fimul
push
cwde
out
xchg
cmp
mov
pushf
repnz
mov
aad
jb
test
arpl
push
loop
into
sub
retf
inc
jbe
mov
sbb
inc
inc
jno
inc
jp
mov
mov
inc
mov
push
nop
cli
mov
ror
mov
dec
sbb
mov
repnz
rep
ss
and
push
fldcw
xor
(bad)
ja
lds
sti
fild
lahf
ds
(bad)
mov
daa
mov
pop
sar
jmp
test
dec
stos
lds
ins
or
mov
mov
xor
arpl
sub
(bad)
aaa
mov
outs
xor
xchg
mov
test
xchg
dec
mov
leave
sbb
enter
jg
cld
and
lds
out
or
sbb
out
sbb
movs
inc
mov
imul
stos
push
and
mov
mov
rcr
fcomp
leave
dec
sbb
push
cmp
lds
inc
and
outs
sub
cmp
sti
sub
(bad)
(bad)
mov
scas
popf
dec
sahf
scas
test
or
es
call
test
fidivr
jmp
cmps
push
cdq
pop
into
(bad)
call
mov
je
mov
sbb
sti
xchg
enter
and
js
adc
repnz
dec
int3
xchg
and
push
push
push
ins
adc
cdq
sbb
lea
mov
adc
mov
fwait
ret
repnz
daa
pop
cmp
xlat
fs
repz
and
pop
adc
hlt
cmp
cdq
fstp
ror
fs
dec
pop
pop
test
hlt
fdivr
jmp
ins
retf
(bad)
(bad)
clc
xchg
js
mov
pop
push
xchg
push
mov
jbe
mov
mov
push
movs
in
xchg
jmp
mov
sbb
loope
mov
rol
mov
add
xchg
movs
sbb
inc
loop
fs
push
jno
mov
or
nop
cmovbe
aam
mov
xlat
outs
jno
shl
dec
xlat
retf
in
mov
cmps
out
inc
movs
xchg
sub
jnp
adc
inc
ret
fistp
jbe
push
and
inc
movd
inc
jl
sti
mov
inc
aaa
adc
ffree
mov
ret
sub
jmp
daa
sub
in
sub
test
test
or
lods
dec
push
fmul
push
cld
clts
jecxz
adc
or
fs
rcl
mov
cmp
and
cli
cmp
cld
cmps
scas
push
int
call
lahf
or
shl
push
rcl
scas
in
adc
mov
xchg
aad
or
sbb
int3
fdivr
inc
cli
mov
adc
ret
mov
neg
xor
in
pusha
jo
fcmovnu
jl
add
mov
fbstp
mov
add
pop
ss
jno
aam
sbb
mov
fidivr
ins
add
mov
or
sti
mov
ja
pusha
pop
stc
mov
xor
xchg
std
jmp
in
mov
xor
(bad)
test
pop
repz
sahf
data16
sub
cmp
aad
and
pusha
xchg
sahf
in
js
mov
xor
lds
xchg
xor
arpl
cmp
(bad)
adc
out
leave
push
xchg
(bad)
mov
inc
sar
shl
outs
and
ret
adc
enter
mov
mov
jno
mov
das
mov
js
out
popf
test
or
dec
call
jnp
call
ret
push
jne
(bad)
and
mov
push
inc
mov
ficom
push
mov
je
repz
and
sbb
cwde
aad
xor
jae
cmp
pop
xchg
out
ror
adc
add
and
fdiv
popa
cdq
into
aad
icebp
movs
pop
mov
and
xor
cmp
scas
fsub
lds
push
or
scas
sar
icebp
push
inc
or
sub
sub
dec
mov
inc
or
mov
cmp
repz
sub
data16
xchg
inc
es
stc
inc
sbb
pop
and
lods
sbb
ja
repz
dec
adc
dec
rcr
mov
data16
retf
sbb
ins
push
lods
jp
add
not
mov
xchg
jg
shl
add
arpl
mov
xor
xchg
inc
retf
and
stos
xchg
jecxz
ins
inc
dec
pop
mov
mov
xchg
and
call
mov
fld
push
xchg
cmps
ss
and
imul
inc
push
or
int
dec
jns
add
jmp
sbb
arpl
int
dec
mov
add
push
(bad)
cmp
pop
lea
mov
stc
cmc
dec
sbb
jmp
icebp
repz
retf
jae
bound
dec
push
or
fidivr
jecxz
add
pushf
loop
test
imul
fdiv
fadd
fsub
push
or
pushf
or
jmp
mov
scas
dec
inc
cmps
push
adc
neg
ret
lock
pop
lods
jge
fdivr
gs
jns
(bad)
into
push
test
sahf
sahf
xor
mov
addr16
dec
jno
mov
pop
cmps
movs
mov
cmps
(bad)
(bad)
popf
cmc
pop
or
stos
in
(bad)
call
stc
jnp
cmp
add
mov
adc
xor
outs
ins
inc
fld
mov
out
xor
loopne
dec
push
test
stos
sbb
push
not
mov
(bad)
jmp
cld
test
push
sub
jne
into
mov
fwait
rcr
repz
pop
loop
not
adc
aam
adc
jmp
cld
ss
fidivr
clc
loope
fdivr
push
inc
add
sbb
sub
mov
stos
and
fs
fbstp
xor
sbb
mov
xor
or
xor
inc
jle
inc
sbb
js
outs
mov
jnp
or
xor
aad
xor
call
mov
pop
mov
pop
nop
ds
jo
pop
fdiv
pop
pandn
retf
and
push
xchg
ins
paddusb
mov
push
pusha
pushf
jge
in
dec
or
inc
ins
sahf
sub
mov
cmp
add
mov
(bad)
shl
sbb
cs
pop
aad
ins
jg
or
movs
in
fs
dec
jge
sbb
call
aad
rcl
inc
gs
push
cmp
retf
loope
inc
test
add
add
jnp
(bad)
dec
icebp
xchg
xor
mov
jge
sar
jae
imul
sub
mov
pop
pop
jb
enter
xchg
mov
mov
push
cs
xchg
movs
pushf
adc
mov
hlt
jge
adc
aaa
xlat
(bad)
je
nop
ins
push
popf
ret
push
jp
fld
push
sar
popf
xchg
sar
jg
cmp
out
mov
stos
aas
mov
add
ret
ins
stc
sub
outs
dec
jp
pop
push
into
adc
sub
loopne
cmp
inc
les
pop
jmp
jne
mov
ins
dec
sti
repz
mov
adc
enter
inc
jecxz
push
jmp
mov
inc
loop
inc
pop
test
pop
jnp
dec
sbb
sbb
mov
jle
or
fistp
add
das
jne
out
enter
jg
cmc
or
mov
ins
pop
lahf
sbb
jns
les
popf
fistp
loop
lahf
mov
dec
xchg
xchg
jl
mov
jo
pop
add
call
lds
stos
fist
jne
jg
pop
or
fisttp
inc
jmp
outs
mov
sbb
bswap
xor
enter
mov
add
inc
mov
movs
sub
mov
dec
xor
lahf
addr16
push
or
stos
fs
xchg
xor
(bad)
pop
mov
daa
les
pusha
sub
dec
fwait
cmp
fsubp
popf
(bad)
dec
mov
jnp
out
shl
cmp
jmp
repz
mov
xor
pop
arpl
stos
mov
xchg
out
inc
jge
inc
rol
pushf
stos
inc
fisttp
int
mov
push
repz
xor
bound
jmp
sub
sub
pusha
gs
and
xlat
retf
cmp
(bad)
sub
dec
mov
mov
fsub
pop
xor
mov
inc
jg
icebp
xchg
gs
(bad)
aas
sahf
push
add
push
xchg
push
or
hlt
or
xchg
inc
in
inc
push
lock
jmp
bound
fistp
push
loop
or
mov
mov
icebp
cmps
pop
fcom
iret
xor
xchg
push
movs
add
mov
push
scas
iret
leave
fstp
adc
mov
jb
mov
popa
inc
(bad)
in
adc
test
sub
xchg
mov
sbb
shl
dec
add
cmp
cmp
scas
(bad)
jge
lds
arpl
pop
gs
cmp
jmp
ins
add
and
xchg
je
bound
shl
pop
in
mov
lods
mov
xor
dec
aad
jge
mov
shl
out
cwde
in
std
jmp
out
jg
mov
jmp
shl
repnz
jb
dec
pop
xlat
data16
ja
rcl
movaps
mov
push
dec
push
stos
add
(bad)
or
xor
popa
push
inc
data16
mov
jmp
imul
dec
mov
and
xchg
sub
inc
dec
push
mov
cmp
(bad)
(bad)
dec
jbe
xor
jne
pop
mov
mov
or
mov
jmp
mov
cmc
jl
aad
lea
push
shr
iret
jle
xchg
add
call
fxch
imul
sahf
push
std
mov
pop
mov
mov
push
mov
cmps
add
jb
cli
hlt
rcl
stc
and
jmp
nop
jo
in
inc
or
or
adc
loope
mov
mov
repz
aaa
ret
jmp
jg
mov
fs
fisub
ror
ja
sbb
jmp
mov
shl
ss
sbb
inc
rcl
or
in
sbb
aaa
es
push
iret
mov
sub
sahf
fcom
push
adc
jmp
xchg
fucomi
inc
les
or
mov
dec
ins
in
jl
or
jecxz
mov
xchg
fdivrp
adc
ds
cmp
sbb
pusha
push
sti
adc
dec
test
xor
or
push
cld
sbb
scas
push
(bad)
inc
cli
sbb
mov
aaa
pop
mov
pop
outs
and
pop
sti
inc
data16
pop
pop
rol
adc
int3
ja
add
dec
cmc
loopne
or
hlt
push
mov
icebp
fistp
cmp
add
les
lods
scas
aam
jae
mov
dec
cdq
out
ss
mov
mov
or
bound
lods
mov
add
stos
and
xlat
adc
cmp
sahf
or
movs
xchg
bnd
scas
pushf
and
add
xor
mov
lea
movq
ins
jnp
xchg
adc
mov
add
mov
fsub
jno
(bad)
stos
dec
jno
sbb
or
es
out
cli
sub
dec
lds
fisttp
dec
sbb
sahf
lahf
and
and
push
mov
stc
shl
jne
bound
sub
sahf
test
sbb
loop
data16
add
int3
icebp
clc
cmp
fiadd
add
out
xor
pushf
dec
push
lds
adc
sbb
icebp
push
in
adc
test
sub
pop
xor
fdivr
test
sbb
jae
loopne
mov
xchg
js
lahf
dec
jge
dec
ins
jl
push
xor
lods
pop
movs
retf
mov
mov
sub
pop
pop
das
rol
les
xor
and
inc
fwait
push
fimul
xor
jmp
mov
mul
push
pop
inc
aaa
js
mov
outs
push
lds
popf
out
arpl
sbb
jg
sbb
dec
dec
pop
std
out
push
dec
jecxz
mov
int3
push
and
dec
dec
and
lahf
int3
inc
sar
dec
out
sbb
lods
cmp
or
mov
pushf
cwde
xor
add
pop
and
std
pusha
jl
xor
xchg
cmp
or
addr16
cmp
inc
lds
and
leave
mov
pop
int
(bad)
xchg
outs
repnz
sbb
adc
mov
push
pop
push
aas
sti
sub
cmp
ins
aam
(bad)
pop
xor
aas
push
daa
add
clc
les
and
test
sbb
leave
sar
aas
pop
dec
inc
cmp
inc
sbb
xchg
fisttp
test
rol
nop
xor
mov
xor
(bad)
cli
in
adc
aad
inc
push
adc
pop
mov
scas
sub
scas
mov
sub
shl
cmp
xor
mov
add
icebp
sar
xchg
cli
std
lds
xor
pop
out
aad
out
inc
pop
call
add
(bad)
jmp
dec
ss
mov
xrelease
mov
sub
fidiv
push
(bad)
dec
or
movs
adc
adc
icebp
sbb
inc
add
aas
jo
out
movs
mov
je
std
push
mov
stc
aad
mov
push
fwait
stos
test
jl
xor
adc
pop
aad
sbb
lds
and
sti
adc
sub
(bad)
pop
jne
mov
pop
mov
push
push
fiadd
scas
nop
mov
dec
jns
(bad)
jle
mov
or
cmc
or
(bad)
cmps
push
add
pop
lods
mov
xchg
cmps
icebp
pop
sbb
aad
adc
ins
in
addr16
or
ds
mov
jmp
fstp
inc
in
mov
popf
adc
xor
out
push
push
and
sbb
add
jno
xchg
(bad)
rcr
scas
dec
cmp
push
cmc
iret
cmp
ror
push
jbe
and
cmp
daa
and
jg
or
(bad)
imul
in
jne
sbb
xor
mov
fiadd
stos
nop
lods
jge
movs
scas
xchg
sbb
cmc
in
cld
movaps
fs
call
(bad)
pop
inc
addr16
and
push
cmps
mov
jbe
into
(bad)
xchg
pop
ret
xor
add
push
cmps
arpl
jl
and
and
or
pop
pop
loop
(bad)
sti
in
js
jmp
push
mov
cmps
in
sbb
push
inc
ficomp
add
push
add
pop
sbb
xchg
sub
inc
les
inc
lock
sbb
xlat
arpl
pmovmskb
xchg
(bad)
dec
sub
xchg
cmc
ud1
out
push
add
test
(bad)
inc
xor
les
fidivr
add
and
push
sub
jne
jp
jge
or
mov
or
(bad)
rcr
retf
fidivr
fnstcw
mov
sub
xor
jnp
(bad)
push
inc
pop
popa
xchg
ret
cld
or
cmps
sar
retf
fcom
push
jns
dec
sub
stos
xchg
loop
test
jb
fdiv
dec
push
dec
jbe
dec
sti
test
les
outs
mov
adc
outs
lock
pushf
clc
push
dec
fldenv
cmp
jnp
ja
jp
jb
fnstenv
mov
cmps
loope
hlt
or
lds
or
loop
leave
push
data16
sub
imul
inc
imul
sahf
hlt
and
retf
out
jb
loope
xor
stc
popf
std
mov
cwde
imul
xor
out
stos
mov
mov
jge
js
push
mov
in
and
mov
sbb
(bad)
sub
adc
es
and
or
push
rcr
and
xchg
retf
inc
cmp
push
dec
xor
rcr
or
sub
or
aas
scas
mov
sar
test
push
scas
add
pop
jo
mov
cmp
mov
xchg
rep
xor
push
fucomip
sbb
mov
into
pop
xchg
and
clc
outs
arpl
push
or
xor
adc
mov
(bad)
loop
out
push
push
inc
pop
add
popf
add
and
test
sub
mov
mov
xor
shl
test
ins
adc
pop
cmp
daa
push
fsub
sbb
dec
fiadd
int3
repnz
(bad)
popa
dec
gs
mov
and
jmp
cld
mov
mov
iret
(bad)
call
loope
dec
push
es
outs
nop
push
or
stc
mov
inc
sahf
out
jne
sub
and
repnz
mov
mov
xchg
bnd
jae
fisub
movs
stos
bnd
bound
mov
mov
cli
add
call
frstor
pop
test
or
loopne
aad
scas
retf
and
pop
mov
sbb
in
rcr
sub
xor
add
add
mov
retf
xor
fist
sub
out
pusha
gs
(bad)
inc
fs
sbb
and
cwde
jns
sbb
repz
dec
cld
scas
repnz
cwde
test
push
jle
cld
jp
(bad)
adc
sbb
inc
and
icebp
std
loope
rcl
inc
add
mov
ret
push
dec
dec
push
cmc
fs
loop
cli
sub
fadd
cmp
call
stos
jge
loope
mov
shl
stos
cmps
fsub
seto
xchg
scas
sar
out
imul
cmps
ret
mov
ins
or
(bad)
daa
movs
push
jecxz
jo
and
inc
or
popf
fcmovnb
xor
bound
mov
xchg
cld
or
mov
or
inc
ror
test
mov
in
ins
inc
std
pop
push
pop
movs
popa
dec
mov
mov
add
movs
fisttp
imul
jne
int3
clc
xchg
inc
xchg
ror
pop
fistp
int3
repz
in
jge
lea
in
mov
xor
(bad)
in
movaps
push
dec
pop
(bad)
shl
into
push
jns
ret
nop
lds
cmc
inc
cs
push
(bad)
lahf
push
mov
jle
dec
jle
inc
fdiv
jb
es
in
sti
rol
fsubr
pop
cmp
mov
(bad)
jmp
pop
cmp
jno
push
movs
dec
and
cmp
pop
int
cld
into
pop
or
sar
mov
sti
enter
fwait
add
or
and
and
xor
inc
leave
dec
xlat
mov
fisubr
mov
xor
cmc
shl
xchg
daa
movs
jae
jp
lods
lock
cdq
(bad)
call
mov
and
bound
iret
ja
(bad)
pop
(bad)
repnz
fidivr
inc
addr16
imul
inc
test
ror
mov
push
mov
pop
dec
jecxz
loop
sbb
cdq
add
(bad)
or
mov
not
cmp
retf
popa
xchg
or
cmp
mov
into
leave
add
jl
mov
call
lods
mov
aam
mov
(bad)
test
jno
pop
xchg
mov
mov
adc
inc
imul
or
pop
int
pop
or
int
lahf
scas
jmp
add
jb
in
stos
push
cdq
mov
cmovae
xchg
pop
push
mov
aas
push
rcl
adc
mov
or
das
mov
sbb
xchg
adc
mov
push
scas
ins
cmp
nop
xor
jmp
(bad)
in
push
and
sub
xor
test
ins
fwait
jmp
fistp
lock
data16
mov
loop
mov
adc
xor
cs
jmp
xor
and
imul
loopne
shr
cmp
out
jl
fmul
pop
jecxz
mov
fs
arpl
pop
jge
sub
mov
mov
retf
jmp
mov
jno
dec
loopne
(bad)
mov
mov
cmp
mov
jnp
in
cmp
mov
sub
fisubr
cmp
xchg
push
jmp
sahf
push
fcomp
mov
sub
das
ins
adc
jecxz
push
pop
addr16
test
ins
test
ja
pop
call
xchg
pop
jge
lods
inc
loope
lds
repz
sahf
or
lea
test
add
jnp
push
test
repnz
not
and
adc
xchg
aas
jle
mov
and
push
pushf
fadd
mov
pop
add
out
cmp
sub
and
(bad)
jo
(bad)
fidiv
pop
stos
nop
call
sar
dec
scas
mov
inc
pop
mov
popf
call
fist
fild
out
or
mov
hlt
cmps
mov
mov
inc
scas
mov
stos
ret
out
mov
push
ins
pop
mov
mov
mov
pusha
add
fild
ret
adc
and
mov
sbb
and
mov
in
xchg
pop
adc
sbb
and
and
and
or
jmp
in
in
inc
aaa
mov
pop
push
mov
retf
pushf
mov
mov
and
(bad)
aad
adc
cmp
mov
jns
jge
mov
retf
push
jno
push
call
int3
and
and
adc
call
fwait
push
sbb
sub
rol
inc
fadd
loopne
mov
inc
out
call
cmp
push
rcl
sub
shr
call
(bad)
int
inc
test
push
or
fidiv
jmp
sub
mov
and
push
sahf
ins
adc
loope
sbb
mov
sub
adc
adc
enter
sbb
lock
sub
std
add
xor
nop
out
loop
into
icebp
aad
mov
add
loope
aas
nop
loop
int3
cmp
daa
mov
ror
les
xchg
rcr
fwait
jno
and
xchg
cmp
add
push
or
mov
pusha
pop
in
std
ret
adc
js
sti
repz
or
lods
push
push
pop
std
jl
pop
les
push
jne
inc
and
retf
lods
fs
lods
add
mov
jae
jnp
xor
mov
xlat
js
mov
fst
add
mov
rcr
in
cwde
cmp
or
mov
outs
mov
pop
cmp
pop
or
fidiv
jecxz
(bad)
test
pop
push
aad
out
push
mov
inc
shr
stos
mov
mov
xchg
(bad)
push
or
and
xchg
inc
js
push
mov
cmps
mov
movs
aaa
inc
repnz
rcr
push
scas
es
das
inc
stos
or
sub
xchg
sbb
mov
mov
test
dec
pop
daa
retf
imul
cmp
(bad)
xor
stos
sbb
imul
imul
push
int3
push
sti
jo
js
fnstsw
mov
jo
inc
jmp
imul
cmps
fs
out
pop
adc
push
mov
scas
dec
xchg
fbld
sbb
rcl
add
rcl
scas
xchg
push
test
mov
push
dec
aad
nop
sub
lods
pop
outs
dec
jg
push
(bad)
and
cmp
outs
lods
lea
and
scas
mov
(bad)
retf
cmc
xchg
iret
add
fwait
mov
jp
fisub
sbb
lahf
adc
mov
adc
xor
movs
rol
(bad)
or
xchg
aas
rcl
cmp
std
mov
pop
sbb
not
loop
jg
sbb
dec
das
ds
inc
retf
(bad)
call
xor
sbb
call
cs
pop
jbe
push
iret
shl
leave
call
jl
lock
pop
add
vunpckhps
mov
pop
inc
mov
jl
mov
in
push
xchg
cld
(bad)
push
push
mov
mov
mov
stc
xchg
xor
jle
pop
fcomp
inc
xchg
inc
pop
les
out
(bad)
jns
fild
sbb
test
adc
xor
rcl
ror
scas
mov
popf
xlat
(bad)
inc
das
pushf
lahf
call
shr
out
addr16
fsubr
outs
scas
or
push
pop
dec
pop
mov
adc
push
add
sbb
mov
and
adc
cmp
jecxz
sub
jno
cmp
push
push
mov
dec
retf
adc
aaa
add
ror
cdq
adc
outs
cmp
cld
xchg
ins
mov
lea
fimul
mov
sub
push
dec
shl
sbb
shl
mov
xor
loope
push
sbb
cmp
fadd
lock
xor
dec
test
pop
shl
mov
ins
shr
push
mov
(bad)
adc
stos
push
dec
mov
dec
cwde
and
sahf
fstp
lock
mov
pop
out
retf
(bad)
dec
and
dec
xor
das
std
or
popf
bound
and
lds
jnp
sub
(bad)
ins
push
mov
jae
fs
retf
out
std
nop
mov
repnz
ins
adc
adc
xchg
sbb
inc
call
sbb
jmp
lods
push
call
test
inc
push
popf
(bad)
cmp
leave
je
mov
aad
mov
dec
cmps
sub
dec
jle
pushf
pop
cmps
xlat
push
dec
rcl
dec
mov
lea
in
int3
lea
add
sbb
test
in
sub
out
test
mov
test
(bad)
vsqrtpd
inc
sbb
pop
xor
pop
or
js
imul
idiv
fwait
mov
and
clc
sub
or
dec
in
jge
xor
xchg
sub
data16
fidivr
pop
mov
into
xchg
jle
inc
push
jl
inc
sub
sub
mov
pop
xor
leave
test
pop
push
jmp
push
sub
out
pop
in
sub
or
rcr
adc
ja
adc
xchg
push
sub
sbb
dec
push
test
push
loopne
jb
sbb
ret
xor
mov
xor
mov
lods
or
test
stos
out
loope
leave
js
pusha
or
dec
leave
aas
retf
jecxz
loop
push
pop
sub
push
loopne
int
out
mov
cmp
iret
push
rcl
std
mov
jbe
ins
cmp
gs
xchg
(bad)
enter
or
mov
ret
retf
sub
or
xor
cmc
mov
pop
daa
jge
mov
pop
push
add
test
xlat
xor
jno
icebp
jmp
pop
out
dec
inc
arpl
ins
lods
add
dec
xor
(bad)
or
mov
add
jbe
adc
pop
lea
push
mov
test
or
lea
sar
(bad)
sar
dec
fsubr
fcom
or
dec
mov
(bad)
mov
nop
add
(bad)
lahf
pop
xchg
mov
movs
xlat
adc
push
inc
hlt
jg
inc
push
repz
dec
pushf
call
mov
jnp
push
repnz
adc
fwait
add
adc
ror
ret
xchg
stc
shl
push
outs
or
test
mov
adc
(bad)
fnstcw
addr16
jnp
in
inc
cmp
ror
add
je
mov
dec
pop
fst
jnp
push
shl
cmp
pop
cmps
and
pop
jp
mov
pop
sub
cli
fistp
(bad)
jbe
test
adc
xor
dec
loope
cmps
xchg
aad
dec
(bad)
jmp
push
mov
push
fbld
fwait
mov
mov
test
clc
aad
push
shl
xor
inc
cld
mov
pusha
xlat
jp
push
adc
and
ror
xchg
mov
in
repnz
mov
mov
and
sub
sahf
ins
or
add
add
inc
mov
mov
and
pop
cdq
cmp
xchg
icebp
or
(bad)
aas
cwde
lods
mov
inc
je
movs
lods
inc
xor
lea
das
rcl
addr16
test
data16
stos
out
xchg
shl
into
fist
push
sysexit
xor
shr
mov
add
fadd
or
popf
mov
popf
or
xchg
bound
xchg
fcmovnbe
mov
cdq
stos
cmp
xor
sub
stos
(bad)
cmc
call
aas
xor
mov
scas
iret
add
sbb
scas
(bad)
cwde
fisttp
adc
in
cmp
mov
popa
add
mov
jae
loop
dec
ss
dec
mov
jge
outs
adc
call
mov
sub
daa
fistp
adc
mul
stos
lock
sub
cmp
jmp
ds
repz
cli
stos
dec
push
or
aad
cld
fisttp
push
shr
pushf
lds
and
jno
cmc
adc
loop
gs
push
cmp
jle
or
or
xchg
jo
adc
adc
fwait
jg
mov
push
xor
imul
sbb
enter
fcom
and
jae
ret
push
jno
div
push
sbb
retf
popf
lahf
(bad)
push
xchg
mov
stos
mov
inc
adc
sbb
sub
inc
repz
data16
pop
int
lea
mov
push
add
jmp
xchg
lock
out
movs
pop
pop
pop
adc
ins
cdq
clc
xchg
xor
push
jp
xchg
mov
and
cmp
test
sbb
push
test
inc
or
ins
outs
and
ret
leave
dec
data16
adc
jbe
je
ins
out
or
test
cmps
xchg
jle
shl
shl
fcom
loop
mov
push
enter
dec
cmp
xchg
retf
mov
sub
pop
adc
loope
outs
mov
mov
add
int
mov
inc
and
in
pop
mov
jbe
add
adc
or
cli
sub
adc
cmp
dec
add
sbb
and
pusha
ret
into
movs
icebp
sbb
pop
test
add
outs
mov
mov
mov
jnp
hlt
sar
rep
pop
and
sbb
fst
imul
pusha
sub
cmp
push
ret
mov
sahf
pop
sar
pop
pop
(bad)
sub
test
inc
ret
inc
aam
test
inc
adc
cdq
dec
mov
inc
dec
fs
dec
aas
pop
ins
stc
cpuid
adc
call
dec
in
dec
lds
mov
leave
mov
pop
ds
mov
out
and
(bad)
jmp
aad
jo
stos
or
dec
clc
test
xor
and
ins
push
fist
jne
mov
mov
add
lds
ret
int3
pop
jo
adc
and
daa
fs
push
or
shl
inc
jp
sbb
add
fsub
popa
(bad)
jmp
loop
out
(bad)
stos
mov
aas
rol
nop
jmp
mov
shr
dec
jb
je
sti
daa
xlat
mov
dec
mov
lods
xor
lods
retf
out
jge
adc
aaa
test
cmps
ffreep
mov
shr
scas
add
je
xor
sbb
ja
shl
ds
jmp
cmp
push
test
jbe
pusha
test
xchg
inc
aad
cld
push
pop
loope
call
xchg
pop
push
in
xchg
or
test
cmp
stc
or
aad
or
call
xchg
retf
xchg
test
dec
sahf
cmps
xor
or
dec
dec
enter
push
mov
xchg
mov
cmp
ret
jmp
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
ret
inc
bound
jae
and
fs
dec
push
in
in
mul
sub
int3
clc
xor
fwait
je
and
sbb
mov
xor
jae
cmp
sbb
out
retf
push
dec
div
cmp
test
aad
cmp
jns
cmp
in
dec
fistp
add
add
(bad)
movs
jno
ret
mov
jl
cmc
(bad)
mov
adc
into
ds
mov
shl
adc
mov
adc
cli
sahf
repnz
jae
movs
iret
clc
xlat
data16
loopne
shl
adc
dec
imul
jne
xor
cmp
stc
movs
xchg
and
mov
inc
sbb
cmp
cwde
fwait
jo
xchg
fbstp
mov
pop
scas
leave
iret
dec
ret
add
call
out
adc
sbb
sub
xlat
call
ret
jmp
stos
dec
xchg
push
mov
cmp
cdq
inc
or
stos
out
add
les
jg
iret
sahf
les
mov
pop
jle
(bad)
sub
sbb
out
jno
loopne
movs
xchg
aam
(bad)
pop
fldenv
mul
arpl
sbb
test
add
sahf
sub
jo
pop
cwde
push
pop
mov
pop
(bad)
in
adc
mov
js
mov
mov
(bad)
sbb
imul
push
xchg
jns
aam
sub
xchg
stos
jmp
sub
pop
and
pop
mov
dec
pop
outs
xchg
cmp
mov
cdq
fdiv
je
xchg
sbb
test
mov
idiv
and
ins
mov
mov
cmp
sub
xchg
cmps
icebp
cmp
push
enter
dec
mov
inc
push
lea
mov
ins
cmp
cld
xor
jle
in
jno
int3
ins
sti
dec
xor
stc
iret
or
(bad)
push
fsub
test
push
mov
icebp
or
mov
or
jmp
sbb
pop
fdivr
out
jb
pushf
outs
shl
dec
dec
mov
test
call
shr
mov
sbb
mov
lods
sbb
mov
mov
mov
pop
fnstsw
mov
imul
xor
cmp
jbe
cmp
cmp
dec
movs
lods
or
sbb
pop
jae
iret
mov
test
test
pop
or
stos
mov
mul
fstp
mov
pop
shl
movs
popa
popf
xchg
(bad)
or
sub
dec
pop
adc
or
pop
mov
cmp
pop
bound
call
and
mov
inc
loop
sbb
mov
adc
sbb
adc
add
retf
and
jae
ret
lods
jbe
shl
ret
push
fcom
mov
mov
stc
cmp
adc
ja
sbb
(bad)
nop
scas
call
or
cmp
nop
cwde
pop
aas
push
lods
lds
out
aaa
jl
sub
xchg
or
bound
test
jne
retf
inc
aam
and
mov
movs
pushf
outs
call
or
test
sub
jge
shl
inc
xchg
daa
mov
mov
fldenv
pushf
jb
jp
add
lds
dec
add
and
sti
leave
es
leave
sub
(bad)
ss
icebp
xchg
popa
xchg
and
arpl
xchg
inc
das
dec
inc
pop
and
out
xor
xor
gs
pop
ins
cli
mov
popf
inc
add
repnz
dec
add
push
sub
jne
mov
shr
jp
retf
push
xchg
neg
mov
or
pusha
fnstenv
iret
push
ret
addr16
jae
or
loopne
or
adc
pop
aad
retfw
(bad)
in
rol
outs
jbe
cmp
fcomp
out
xchg
push
push
adc
jle
xchg
inc
xlat
sbb
out
push
add
adc
pop
data16
arpl
jl
adc
in
dec
sub
xor
push
aam
push
jg
mov
inc
int3
dec
(bad)
jmp
loope
aaa
hlt
repz
lock
pop
movs
adc
or
es
pushf
fsubr
add
add
in
ins
shl
mov
push
dec
jle
jno
xor
xchg
mov
mul
jnp
aad
cmps
inc
lds
sbb
or
in
loop
and
pop
adc
mov
sbb
je
fs
push
mov
xchg
cmps
out
sti
imul
ins
js
shl
popf
cli
jno
sub
add
xor
mov
add
pop
shl
neg
mov
das
pop
or
sti
dec
les
(bad)
and
sahf
cld
stos
test
repz
das
cmp
outs
sub
mov
fnsave
ds
(bad)
jge
fisttp
xchg
(bad)
mov
sbb
jg
mov
pop
dec
push
push
push
nop
xlat
inc
and
add
std
fbld
mov
ja
enter
fidivr
test
outs
pop
retf
cmp
xchg
ficom
push
int
int
mov
out
fcomp
mov
stc
(bad)
sbb
call
pop
or
ins
das
test
push
movs
cmps
and
retf
xchg
je
mov
push
in
scas
fnstenvw
add
sbb
ins
pushf
lods
jbe
mov
xlat
stos
push
repz
cmc
xor
push
and
or
repz
icebp
mov
push
xchg
pop
bound
loop
xor
and
jmp
jnp
data16
mov
sti
seta
jno
xchg
cmp
retf
fild
xor
lods
scas
mov
pop
pop
xor
mov
movs
lahf
adc
jne
jo
fcomp
jbe
cmc
xlat
fsubr
loop
fwait
pop
(bad)
ins
jle
rol
sub
adc
jp
push
add
xchg
div
mov
push
and
or
pop
cmp
pop
scas
or
mov
dec
mov
pop
jle
data16
rol
je
imul
outs
mov
sub
jmp
retf
jp
cmp
inc
(bad)
inc
jns
cmp
popa
jne
xor
outs
or
cmp
test
jb
(bad)
lods
cmc
(bad)
jmp
sbb
add
sahf
ins
sti
in
push
or
stc
data16
hlt
inc
push
dec
mov
jge
xchg
mov
out
fldenv
popf
imul
enter
pop
sbb
adc
rol
out
add
sar
ror
(bad)
or
push
add
iret
fimul
mov
xlat
dec
jge
test
push
lods
pop
movs
in
mov
imul
xchg
fild
mov
popf
icebp
push
mov
pop
repz
mov
in
aad
cmp
jle
daa
or
mov
pushf
ss
xor
movs
shr
mov
sbb
push
push
cmp
nop
in
push
call
call
inc
test
sti
inc
ret
dec
mov
shl
mov
pop
fcos
int
test
xor
loope
sti
icebp
push
mov
dec
lods
addr16
mov
xchg
call
sbb
aam
sbb
inc
lds
mov
sbb
pop
outs
cmc
jle
mov
imul
xchg
push
mov
es
mov
gs
jg
lods
imul
push
sbb
out
push
sbb
outs
aas
cmp
cmps
pavgb
adc
jne
scas
(bad)
mov
dec
xor
pop
pusha
pop
mov
xchg
jns
pop
adc
das
dec
adc
xor
mov
(bad)
push
inc
ret
outs
ficom
xorps
rcr
fmul
dec
pusha
pop
jo
adc
scas
outs
mov
ss
nop
cmc
xor
xchg
add
nop
pop
(bad)
push
fwait
pop
in
out
and
repnz
pop
stos
mul
aad
sub
ret
mov
xor
adc
mov
fucomp
sar
lods
sbb
cli
out
shl
push
jmp
add
lods
xchg
adc
mov
mov
inc
mov
push
ja
adc
ret
pop
test
in
add
jno
in
clc
push
push
sbb
cli
dec
xor
btr
pop
cmp
fs
xchg
(bad)
scas
ds
imul
(bad)
jbe
ins
dec
rcr
ins
bound
inc
push
call
pusha
cmps
add
mov
sti
mov
cmp
push
or
sbb
and
(bad)
enter
fsubrp
(bad)
adc
inc
push
sbb
fdivr
or
xor
push
test
addr16
mov
sub
addr16
dec
xchg
loope
adc
ss
out
unpckhps
stc
jne
add
sub
pop
gs
cmp
push
fwait
adc
cmp
or
push
hlt
mov
nop
jnp
movs
ja
pushf
jb
sbb
pop
ins
adc
mov
hlt
aad
pop
adc
xchg
repz
jae
jp
loop
xchg
jl
icebp
xor
mov
mov
jne
push
sub
sbb
mov
adc
adc
enter
stos
cmps
sbb
ret
inc
outs
sub
(bad)
sub
push
sub
jb
sub
dec
sub
push
xor
mov
out
jle
(bad)
sti
mov
mov
cli
mov
adc
clc
(bad)
mov
pop
sub
pop
(bad)
arpl
or
sbb
es
inc
dec
call
and
mov
mov
outs
mov
jno
ja
xchg
jle
or
jp
mov
repz
sbb
mul
leave
xchg
xchg
mov
aad
jmp
(bad)
pop
push
sar
test
ss
out
mov
xchg
sub
sbb
das
iret
ins
icebp
or
jmp
jmp
lods
outs
fsincos
mov
arpl
jns
inc
movs
fcmovb
popf
jge
push
cwde
adc
movs
add
(bad)
in
addr16
jae
fbstp
add
leave
pop
mov
ret
test
fcomip
inc
fdivr
xor
icebp
push
pop
jmp
lea
inc
dec
test
or
pop
sbb
test
cmps
outs
inc
dec
or
repz
aaa
dec
test
aaa
cmp
dec
lods
push
xchg
sbb
les
test
mov
and
or
clc
fs
inc
pop
jmp
xchg
mov
mov
in
aad
xchg
call
shl
mov
cdq
repnz
jns
inc
jno
xlat
inc
(bad)
std
pushf
dec
shr
adc
pop
jecxz
call
push
push
and
sbb
sub
xchg
sub
mov
das
out
or
mov
push
pop
or
int3
dec
xchg
rcl
push
sbb
repnz
pushf
leave
outs
ins
xchg
sahf
sub
lods
test
fsubp
call
cmp
outs
call
add
xchg
jo
lahf
mov
mov
je
loopne
cdq
xchg
call
ins
test
xchg
pop
das
dec
cmp
scas
ins
pop
shl
or
cmp
mov
push
mov
inc
mov
add
bound
jecxz
pop
ins
mov
dec
jl
or
cmps
mov
test
call
or
or
xor
aaa
mov
iret
xor
inc
jle
jnp
lea
call
dec
sub
mov
movs
jmp
xchg
outs
cmp
ins
jno
hlt
xchg
cmps
mov
clc
in
dec
test
mov
and
adc
pusha
pop
xchg
pop
push
xor
or
xchg
loop
fcmovnu
push
pop
cdq
scas
mov
sbb
lods
js
cs
ja
imul
sub
out
sbb
mov
jnp
imul
mov
and
mov
and
shr
add
sbb
test
pop
push
add
mov
jo
push
xchg
lock
ss
std
rol
cs
enter
fs
mov
or
mov
dec
out
or
pop
sub
mov
iret
mov
rcr
fstp
mov
jp
mov
push
cmp
inc
or
xchg
sub
add
sbb
retf
or
fs
xchg
or
mov
les
retf
fsubr
sbb
lods
loopne
inc
test
or
std
in
call
inc
aad
ror
scas
inc
pop
shl
and
adc
pop
xor
test
(bad)
dec
cld
out
sbb
inc
sub
faddp
xchg
jg
dec
xor
movs
mov
ss
mov
xor
(bad)
dec
jmp
dec
inc
mov
xchg
mov
dec
xor
jmp
jmp
jg
js
adc
jmp
jmp
daa
jmp
aam
xchg
ret
cmc
aas
cli
call
stos
jb
xchg
mov
dec
int
das
pop
scas
or
ficom
pop
mov
nop
shl
mov
cmp
push
rcr
stos
cmp
xchg
cmps
mov
mov
push
dec
cmps
clc
in
hlt
in
ss
xchg
outs
add
sbb
xor
hlt
jb
dec
mov
outs
js
int3
jp
test
xchg
xor
nop
mov
fcom
pushf
sbb
jmp
pop
rcl
and
hlt
jo
xchg
mov
xchg
scas
or
and
sar
mov
loop
test
push
add
dec
aad
cmc
call
jmp
push
jle
push
jno
cmp
sub
sbb
popf
add
push
ins
clc
sbb
imul
call
xor
jb
push
cmovno
ja
sbb
mov
dec
adc
xor
cmp
loop
movs
adc
sub
shl
fst
dec
xor
cld
or
add
mov
sub
mov
out
dec
sbb
test
xchg
push
mov
in
call
or
xor
popf
push
jmp
cdq
mov
aas
test
(bad)
sti
lods
fwait
pop
stos
leave
mov
push
retf
jne
js
dec
sub
mov
xor
mov
adc
sbb
ins
push
pop
es
jle
sbb
adc
push
iret
sti
or
jno
xchg
ss
daa
adc
cmps
pop
call
ins
(bad)
paddusw
xchg
shl
(bad)
push
std
(bad)
xchg
mov
(bad)
xor
adc
outs
sub
shl
jge
retf
mov
es
cmc
dec
sar
mov
das
mov
loop
pop
lds
or
jl
cmp
lods
scas
sbb
xchg
repz
nop
sar
loopne
out
cmp
aad
or
mov
dec
call
xor
lods
fcomp
cmps
jecxz
sbb
cmps
mov
fs
adc
cmp
add
jecxz
pop
cli
mov
inc
imul
sti
test
and
jae
test
push
adc
cmp
dec
call
pop
and
cli
lods
mov
pusha
mov
pushf
mov
(bad)
int
add
arpl
cmps
and
push
pop
movs
mov
in
es
pop
adc
push
test
cmc
mov
mov
and
adc
mov
mov
sbb
aaa
aam
xor
pop
scas
fidivr
lahf
dec
stos
pop
ret
push
ins
push
test
jecxz
mov
adc
pop
lods
dec
sub
(bad)
repz
dec
cmp
scas
mov
jo
mov
push
cmp
outs
pop
jne
pop
cmps
sub
add
movs
ins
or
jg
test
(bad)
mov
sub
jbe
sbb
(bad)
push
pusha
dec
pop
xchg
add
nop
(bad)
cmps
mov
arpl
pusha
mov
push
std
mov
push
mov
aam
data16
dec
jp
popf
mov
mov
fimul
stos
lods
scas
pusha
gs
nop
xor
ret
(bad)
inc
movs
add
inc
scas
mov
sub
test
inc
or
push
adc
mov
popa
cli
xor
mov
or
pop
inc
sbb
enter
dec
cmc
xchg
push
sub
sahf
addr16
cvtdq2ps
dec
mov
xchg
ret
jmp
cmp
sub
sbb
push
ja
adc
adc
loopne
in
sub
pop
adc
mov
xchg
je
(bad)
out
xchg
mov
add
xor
pop
mov
in
xchg
xchg
mov
jmp
push
xchg
push
js
dec
cmp
dec
out
(bad)
das
adc
call
cmps
adc
icebp
mov
je
aad
xlat
jnp
push
dec
fisubr
mov
xor
and
cmp
jae
inc
mov
xchg
movs
mov
clc
sub
xor
jp
fwait
out
adc
mov
jmp
out
jae
sub
or
push
shl
test
stos
test
add
xlat
mov
pop
call
loop
and
repnz
xor
jmp
jecxz
and
cmp
dec
pushf
sub
cdq
popa
mov
fdiv
and
pop
adc
mov
pop
mov
adc
js
mov
xchg
pop
mov
push
iret
sub
xchg
xchg
or
ss
retf
cld
cmp
test
ins
popa
jns
push
lods
adc
push
jb
jno
cmps
movs
ror
push
jbe
mov
adc
std
imul
sbb
mov
xor
xchg
cli
mov
push
call
or
outs
test
popf
mov
mul
sbb
cmc
mov
sub
sysenter
sahf
cmp
push
jle
fld
mov
pop
push
sbb
popf
cmp
(bad)
pop
call
cmp
nop
inc
cmp
adc
in
push
imul
sub
bound
push
dec
jb
xor
push
fdivr
or
sbb
fwait
xchg
push
push
xchg
or
sub
arpl
ja
out
xchg
dec
fbld
js
mov
push
sar
xor
lds
mov
mov
xchg
gs
(bad)
test
clc
(bad)
xchg
fidivr
adc
call
es
(bad)
mov
fs
and
sub
adc
xchg
fwait
mov
sbb
ja
rol
dec
sub
sbb
jl
lea
or
xor
pop
jae
fisub
fwait
push
dec
repz
stos
fist
mov
xchg
jbe
mov
cli
sub
mov
iret
fistp
cmps
ins
jae
or
push
and
mov
sub
mov
(bad)
jnp
cmp
les
(bad)
xor
int
scas
adc
addr16
jae
xchg
ror
or
xchg
mov
inc
sti
jbe
push
scas
je
xlat
xchg
xor
test
push
pushf
fs
pop
int3
inc
fisub
push
jnp
fwait
test
xchg
jge
xchg
xchg
adc
xor
aaa
mov
push
cli
sub
dec
add
cmc
lea
push
push
rcr
jnp
stc
jle
mov
fild
pop
push
push
adc
xor
jb
xor
aad
and
pop
ss
sti
or
loop
mov
or
shl
mov
iret
mov
adc
adc
leave
loopne
sbb
fisub
shl
cwde
nop
xchg
add
pop
ins
jle
call
pop
cmp
out
inc
push
inc
lea
push
aad
in
xlat
stc
shr
push
and
xchg
sub
sub
sbb
ret
pop
and
cmp
movs
cmc
in
sbb
fs
push
sub
shl
loop
push
and
lahf
cmp
and
push
out
ins
cpuid
add
cli
loopne
mov
jno
add
mov
pop
xchg
push
and
je
push
jp
lods
cmp
ret
sbb
ret
sbb
rol
pop
call
pop
in
mov
call
and
pop
cmp
jo
mov
jnp
imul
push
add
mov
sahf
mov
lahf
test
sub
add
mov
push
jp
aas
cmp
(bad)
sub
xor
mov
ret
imul
(bad)
je
mov
jmp
sahf
(bad)
sub
or
lods
mov
cdq
loope
mov
jbe
pop
pop
mov
clc
ret
ror
dec
clc
cmp
sub
fbld
test
sub
cwde
aad
push
xchg
or
mov
sahf
pop
les
or
in
aam
shr
scas
ins
dec
retf
add
(bad)
mov
mov
ja
push
sbb
mov
(bad)
aam
out
add
push
mov
jmp
and
adc
add
gs
outs
retf
ins
lea
or
loop
aad
mov
or
jg
outs
mov
sbb
jmp
(bad)
out
xlat
dec
bound
dec
loop
jae
pop
push
retf
cmps
push
inc
(bad)
call
hlt
xchg
retf
fadd
cmc
cmp
int
ror
fsubr
push
lea
(bad)
outs
in
and
jecxz
xchg
sbb
fst
mov
lea
add
inc
adc
xchg
dec
adc
pop
call
cdq
xchg
xor
daa
mov
not
xchg
pushf
mov
push
out
push
jp
es
push
lock
repnz
mov
rcr
ins
in
pop
jnp
mov
add
test
jge
or
(bad)
xor
in
and
jle
mov
mov
jbe
in
and
cmc
fs
pop
and
jbe
nop
push
mov
outs
sub
(bad)
mov
popf
xchg
pop
arpl
ds
mov
fs
popf
inc
and
shl
imul
jnp
push
add
cli
cmp
and
dec
fwait
jbe
pusha
jno
leave
push
movs
cs
daa
xchg
ins
je
pop
ins
fld
aad
fucomip
sub
jnp
fs
jmp
std
xor
push
or
push
push
xor
outs
sub
out
pushf
add
push
cld
xor
adc
fs
sar
and
cdq
fwait
adc
mov
and
jnp
and
lods
adc
sbb
into
pop
rol
loop
jno
stos
fldenv
das
push
retf
mov
fld
mov
in
inc
mov
push
ror
and
(bad)
sub
xchg
clc
jl
int3
sub
int
aam
mov
pop
xchg
mov
iret
(bad)
mov
repnz
cmp
dec
push
jae
inc
es
xlat
imul
outs
pmaxsw
adc
scas
mov
adc
lahf
mov
call
push
retf
jae
outs
test
xchg
push
push
test
aad
jbe
sub
aaa
push
call
out
jle
ss
inc
dec
std
add
fcom
bnd
push
or
shl
pop
ret
jne
aaa
rcr
mov
hlt
xor
les
inc
jns
retf
movs
cmp
xchg
inc
cmps
sub
out
or
mov
aad
cmp
add
inc
mov
adc
mov
shl
or
xchg
sub
xor
test
retf
mov
rcr
fbstp
sub
movs
mov
pop
shl
sbb
push
mov
dec
inc
inc
movs
dec
test
aas
mov
or
mov
mov
jmp
nop
and
add
es
outs
ret
push
dec
movs
int3
mov
popf
inc
icebp
add
call
aas
xchg
or
add
fs
scas
dec
xchg
test
dec
dec
icebp
mov
and
xchg
add
sub
push
mov
aas
js
sbb
sub
mov
mov
xor
imul
(bad)
push
sub
fiadd
add
jge
xor
test
aam
lods
sar
or
pop
add
add
outs
add
dec
xchg
cmc
test
fmul
test
and
mov
(bad)
movs
and
into
cmp
sahf
add
popf
cmp
mov
mov
mov
add
sbb
jae
fld
and
hlt
ins
rol
ins
fwait
cmp
sbb
mov
mov
sbb
mov
or
adc
loope
xor
pop
mov
lea
shr
imul
shl
pop
jne
dec
xor
aaa
lods
push
mov
dec
jg
(bad)
sub
add
push
jb
and
stos
add
sbb
and
clc
sub
and
and
xor
fstp
pop
mov
mov
pop
in
fild
sahf
mov
jb
cmp
jnp
adc
add
jns
hlt
cmp
jns
and
(bad)
cmp
cmp
mov
sub
add
cdq
xor
inc
mov
jae
rol
sti
sub
adc
pop
adc
inc
push
repz
cmp
xor
in
fstp
jmp
mov
jmp
mov
inc
in
adc
mov
push
pop
mov
into
call
push
sub
mov
inc
or
retf
inc
pop
(bad)
jae
or
mov
addr16
mov
aam
sub
xor
cmp
je
mov
shl
cmp
jl
lea
jle
sub
jl
scas
pop
jno
iret
add
cmp
cmps
add
imul
sbb
out
pop
fld
mov
fnstcw
lods
or
mov
sbb
icebp
icebp
or
addr16
jne
or
cmp
data16
nop
sbb
imul
lock
add
movs
pop
mov
addr16
add
or
mov
enter
out
add
pop
push
ds
pop
cmp
inc
xor
fdiv
push
imul
and
cmp
mov
push
out
stos
aas
mov
pusha
bound
sbb
push
retf
pop
mov
xchg
mov
cmps
dec
lock
retf
and
cld
dec
xchg
push
cwde
mov
mov
aaa
jl
mov
mov
lods
or
lds
fld
dec
rcl
(bad)
dec
pop
xchg
dec
pop
lock
xor
es
xor
dec
sub
shl
fisttp
ret
xchg
dec
lds
push
mov
outs
pusha
int
mov
(bad)
scas
ret
xchg
jnp
call
mov
pushf
push
jo
dec
nop
into
pop
test
pop
lods
and
push
sti
or
xchg
jg
ins
mov
into
mov
mov
ins
imul
aas
dec
xchg
ja
nop
stos
cli
mov
adc
push
loopne
adc
inc
loopne
in
and
sbb
dec
clc
inc
mov
nop
scas
loope
jmp
daa
xor
aas
test
push
fwait
sahf
sub
add
(bad)
daa
inc
inc
int
call
outs
cwde
in
in
das
and
and
push
movs
mov
jle
push
or
push
push
mov
pop
imul
push
or
cmp
lock
push
arpl
mov
es
js
nop
xor
adc
or
jp
xchg
mov
mov
stos
cmps
lea
inc
sbb
and
xchg
mov
pop
pop
jno
in
dec
cmp
fwait
out
jg
adc
retf
lds
jmp
fmul
mov
lods
and
cdq
dec
leave
outs
or
adc
enter
add
xor
mov
pop
rcl
mov
repz
cmp
movs
mov
(bad)
jmp
scas
dec
jnp
repnz
xchg
ficom
lods
xchg
dec
and
adc
shr
fwait
pop
mov
sub
cmp
movs
unpckhps
fwait
and
sbb
push
(bad)
jle
pop
sti
mov
test
adc
mov
xchg
mov
shl
sbb
xor
xchg
cmp
pusha
les
(bad)
cwde
pop
jb
stos
call
inc
dec
ins
or
lea
pop
cmp
mov
sti
daa
lock
xchg
data16
lea
push
add
mov
cwde
xchg
ror
jo
pop
sbb
hlt
outs
cmp
out
imul
es
pop
add
mov
les
test
adc
pop
shr
mov
and
push
add
lock
mov
jg
loop
and
imul
hlt
push
jecxz
push
mov
ret
add
fimul
loopne
jmp
retf
cmp
sbb
data16
(bad)
fcomp
(bad)
sub
and
and
(bad)
out
repz
adc
sub
and
push
lods
dec
int
nop
aaa
lods
mov
or
rcl
popf
ret
mov
and
push
lock
test
pop
fidivr
sub
cdq
in
adc
loope
cmp
outs
cmp
jb
ss
ror
sbb
test
and
addr16
push
jmp
sbb
repnz
ja
cli
mov
push
sub
xor
ins
sbb
cdq
stos
in
repz
les
aad
add
daa
pop
inc
shr
sbb
hlt
ins
enter
fmul
cmp
out
sbb
je
out
pop
mov
ror
jp
dec
ret
sbb
mov
es
jmp
(bad)
or
mov
dec
mov
adc
loopne
mov
and
ret
das
in
push
cwde
lds
mov
nop
ret
push
xchg
jo
fbstp
dec
in
inc
(bad)
out
clc
mov
cmp
push
xor
mov
icebp
jnp
imul
jecxz
or
pop
pand
jge
call
pop
mov
sbb
jmp
adc
cmps
inc
inc
rol
cmp
arpl
dec
xor
pop
mov
jge
mov
outs
jecxz
(bad)
adc
mov
or
push
mov
sub
int
out
sbb
cmp
or
iret
lds
jae
ss
jl
iret
mov
xchg
(bad)
mov
and
adc
rcr
mov
pusha
mov
je
(bad)
mov
cmps
jae
(bad)
fdivr
pop
jmp
dec
inc
cmp
daa
ds
lahf
mov
sub
push
or
es
data16
outs
xchg
sbb
jg
cmp
fidiv
push
gs
jne
lods
jbe
xchg
jle
jmp
mov
or
fidivr
or
mov
mov
aad
js
mov
rcr
inc
jp
das
int
mov
cmp
cmp
das
imul
mov
movs
fld
in
xchg
ret
out
iret
cmp
pop
int
adc
lds
shr
jl
dec
sbb
cld
enter
fiadd
mov
push
dec
xchg
loopne
jo
jle
scas
inc
rcr
addr16
sub
shl
mov
loope
dec
ja
cmp
std
pop
and
or
test
xchg
inc
sbb
popf
adc
and
xchg
mov
adc
pushf
sbb
in
inc
mov
dec
lods
or
pop
and
out
inc
xchg
jmp
jl
stos
mov
daa
fnstsw
and
imul
loopne
push
or
push
cwde
mov
dec
fucom
mov
hlt
dec
or
idiv
sub
xchg
sbb
mov
sbb
test
mov
inc
jmp
js
outs
lods
sbb
in
cmp
out
jno
jb
jmp
mov
mov
inc
test
pop
jecxz
adc
out
add
pop
xchg
cdq
repz
aas
inc
push
js
addr16
and
into
into
sub
test
push
mov
out
loop
shl
call
outs
dec
and
dec
cld
pusha
add
xor
or
lods
jno
push
not
jmp
cmp
mov
pop
push
fs
inc
adc
and
jle
js
jmp
fsubr
mov
add
sar
sub
outs
xlat
jno
cmp
jmp
pop
gs
fcmovnu
dec
iret
fstp
pop
in
fucomi
test
jne
std
int
jae
(bad)
aam
xchg
mov
lock
outs
inc
adc
pop
je
paddw
jne
rcl
cmps
fisubr
neg
loopne
pop
mov
or
push
out
call
xchg
sub
daa
aaa
xor
retf
inc
in
in
ret
push
mov
mov
add
je
cmps
fld
enter
dec
into
mov
push
ins
fild
imul
stos
inc
mov
jae
loope
fs
fistp
cmp
ins
xlat
stos
push
fs
mov
test
push
test
dec
mov
push
adc
jp
push
cmp
xor
or
jns
add
rep
or
(bad)
lahf
in
add
stos
clc
add
and
mov
pop
jo
enter
add
pushf
daa
clc
repz
bound
call
fwait
dec
nop
add
cmp
retf
data16
or
or
adc
xchg
cmc
and
gs
xchg
adc
push
pop
and
mov
dec
xor
ret
test
add
pop
inc
xor
jno
mov
cwde
jecxz
sbb
jae
ror
aaa
stc
stc
ins
adc
lods
lahf
out
sub
pop
push
outs
jecxz
lahf
rol
adc
pop
mov
aam
dec
popa
lods
out
mov
xor
xlat
mov
sub
add
mov
cmp
jmp
push
imul
lea
je
rol
shr
pop
xchg
or
out
js
sbb
inc
cmps
push
mov
or
add
out
sbb
cmp
xchg
adc
mov
mov
dec
mov
push
push
sbb
fisub
jmp
mov
cmp
hlt
not
fisttp
push
fcmovne
std
ret
mov
fbld
xor
sbb
xchg
rcr
frstor
sbb
and
cmp
jbe
pop
dec
push
cmp
xchg
adc
ins
loope
out
icebp
push
dec
cmps
mov
fist
sbb
addr16
and
movs
pop
sub
ret
inc
lods
or
add
sbb
dec
mov
or
lds
out
(bad)
out
adc
div
lods
adc
mov
in
ret
popa
mov
adc
inc
xchg
fist
std
(bad)
mov
in
mov
sub
sahf
mov
cmp
sti
cmp
out
push
jmp
inc
cmps
aam
pop
std
jg
xlat
call
jno
mov
ficom
fild
sub
mov
adc
mov
(bad)
push
stos
fdiv
add
cdq
push
and
popa
in
je
xchg
icebp
jle
sub
icebp
fldcw
fs
mov
shl
jmp
xchg
mov
and
sbb
ror
test
xchg
int
push
sahf
mov
add
pop
push
call
jns
pop
gs
push
lods
cmps
dec
sub
inc
movs
ins
push
adc
add
in
xchg
mov
(bad)
(bad)
mov
ret
mov
das
pusha
mov
sub
imul
outs
sbb
in
jle
add
mov
and
xor
rol
movs
push
add
mov
cwde
xor
lds
dec
sub
and
sub
icebp
push
in
stos
mov
ficomp
mov
dec
cmps
push
and
mov
fwait
movs
mov
retf
inc
scas
jnp
inc
add
fwait
test
jecxz
mov
in
lods
out
pop
sti
arpl
imul
cmp
and
movs
mov
lahf
and
sbb
iret
test
mov
ror
or
test
rol
cmp
jle
push
jo
lock
into
sbb
pop
lods
aaa
sub
xchg
dec
xlat
test
fs
sbb
or
sahf
in
add
xor
or
dec
(bad)
ficomp
push
jmp
add
out
neg
pop
xchg
push
cmp
lahf
mov
jmp
test
push
call
jne
fiadd
rcr
or
shl
jmp
shl
pop
push
inc
and
jae
enter
add
add
das
stos
jbe
sub
repnz
lock
repz
xchg
jle
jns
mov
and
cmp
pusha
xlat
adc
xchg
ret
punpckhwd
hlt
scas
fnstsw
inc
mul
mov
paddsb
fisttp
icebp
mov
jge
cmps
sub
in
and
ins
xor
into
push
les
jle
popa
(bad)
push
test
jnp
ss
ss
enter
push
ds
cmp
outs
or
mov
xchg
in
pop
clc
iret
aad
lock
not
cmp
adc
adc
add
jecxz
loop
pop
push
add
add
jl
xchg
xor
adc
ret
retf
loope
inc
ret
or
pop
dec
into
dec
jmp
sar
xchg
(bad)
data16
fwait
in
addr16
mov
retf
loop
push
jle
pop
cmp
or
pushf
xor
rep
or
inc
mov
push
aam
mov
xchg
and
mov
scas
mov
fnsave
adc
xor
aaa
sbb
leave
lods
pusha
add
aad
movs
dec
jo
dec
dec
jmp
shr
ror
pop
mov
jp
push
jno
and
scas
(bad)
dec
lock
and
mov
push
fs
or
dec
loop
retf
mov
fsubr
fst
repz
sar
pop
les
inc
mov
les
jo
(bad)
je
dec
sbb
mov
call
jmp
mov
(bad)
(bad)
lods
mov
xor
adc
or
or
cs
or
push
sub
jmp
or
fcomp
mov
in
push
sub
or
jge
not
stos
pop
jl
movs
movs
ret
lds
arpl
mov
pop
mov
cmp
jp
cmp
clc
jle
and
inc
outs
dec
out
int
adc
pop
xchg
pushf
sub
leave
cmp
ret
jl
mov
test
rcl
lods
fwait
lds
cmp
cdq
test
stos
pusha
call
xlat
imul
(bad)
cmp
mov
xor
outs
dec
xor
(bad)
dec
push
popf
test
mov
ja
and
sbb
and
into
cmp
mov
ja
outs
addr16
aad
hlt
out
shl
leave
dec
add
scas
inc
mov
sbb
xor
scas
add
(bad)
sbb
inc
pop
fimul
sub
jae
sar
in
loope
movs
sbb
push
dec
jg
xchg
movs
mov
lods
cmp
stos
shl
mov
movs
sbb
and
lods
sub
(bad)
sub
xchg
lods
sbb
in
push
and
imul
adc
nop
pop
xchg
(bad)
in
inc
or
cmp
loop
loope
add
arpl
mov
xlat
fiadd
rcr
cli
arpl
aaa
pop
and
jno
iret
in
icebp
not
jnp
mov
ins
xor
cmp
ins
push
bound
push
fs
push
icebp
dec
cli
mov
pop
jo
cmc
in
add
mov
inc
mov
push
and
add
jle
aas
inc
dec
fsubr
js
sbb
push
je
or
ins
daa
dec
adc
mov
xor
xchg
bound
add
mov
add
sbb
lock
out
inc
fldenv
div
pop
xor
sbb
fld
leave
pushf
rcl
pop
cmp
in
jbe
add
popa
daa
rep
fnstenv
das
aaa
push
clc
push
(bad)
adc
ror
sbb
bound
lods
scas
xchg
xchg
mov
lods
icebp
push
cdq
sahf
or
daa
movs
cmp
inc
(bad)
movups
clc
(bad)
push
sbb
add
and
inc
cmp
mov
pop
sub
shl
pushf
das
rcl
adc
jmp
test
es
rcl
mov
mov
sbb
leave
stc
repz
cmp
cmps
fidivr
dec
jge
movs
stc
push
mov
inc
mov
ins
or
jp
mov
pop
sub
mov
dec
enter
cmp
pusha
mov
mov
shr
addr16
imul
lods
add
cmp
(bad)
cmp
adc
jge
ds
push
fsubp
test
xor
xor
retf
test
pop
sub
das
call
in
dec
das
ins
mov
mov
mov
gs
dec
add
dec
mov
add
xlat
movs
imul
stos
stos
xchg
bound
ins
xor
jmp
or
(bad)
sub
pushf
cmp
call
sbb
pop
cmp
or
int
int
cld
stos
lea
sbb
mov
ret
loopne
push
bound
push
inc
dec
inc
sbb
adc
(bad)
xchg
dec
and
xchg
test
xchg
xchg
mov
in
call
and
hlt
das
out
fbstp
mov
xchg
outs
mov
pop
mov
ss
push
hlt
jnp
or
ds
(bad)
jbe
pop
jo
dec
dec
mov
push
mov
leave
cmp
jne
loope
xor
cmp
add
pop
add
ins
push
fwait
and
ins
pusha
inc
out
mov
fs
ins
push
es
repz
cmp
sbb
fnstsw
jnp
stos
in
sbb
das
sbb
test
push
lock
pop
mov
(bad)
mov
push
in
arpl
jb
lods
xor
xor
sti
ds
nop
mov
add
sub
push
sub
test
inc
jns
cld
lods
jle
mov
jecxz
push
pop
sbb
xor
cmc
sahf
(bad)
imul
cmp
loop
fdiv
push
repz
pop
mov
jg
and
shr
pop
lods
push
fild
and
xchg
xor
in
mov
or
popf
cmp
sbb
ja
pop
push
mov
pop
push
cmps
popf
lods
scas
pop
adc
aas
cmps
cmp
xchg
jp
fild
or
jmp
mov
loop
test
stos
imul
push
sbb
fsubr
jecxz
add
dec
pop
inc
scas
and
xchg
rcr
cmp
mov
cmpps
mov
sahf
pop
cmps
pusha
daa
xor
cmp
add
pop
or
mov
pop
shl
aas
mov
in
cs
add
cs
imul
dec
mov
mov
loopne
aad
(bad)
or
inc
add
push
les
mov
popf
mov
pop
daa
(bad)
jle
inc
or
and
mov
or
or
inc
adc
push
inc
mov
mov
int3
stos
(bad)
adc
mov
test
out
arpl
mov
dec
and
xor
jmp
xor
cmp
push
in
jle
sbb
fisubr
loope
or
out
sbb
xchg
push
add
imul
in
retf
ins
xor
pop
icebp
(bad)
sti
pop
fld
jle
jmp
sar
test
cmp
cwde
outs
imul
sub
xor
push
in
imul
loope
cwde
je
fwait
ret
pop
push
pop
pop
xchg
add
mov
popf
or
hlt
daa
add
movs
leave
cmp
fdiv
xchg
push
hlt
sub
sub
cmps
mov
jns
(bad)
push
lock
adc
sti
push
push
loope
call
jb
rcl
push
loopne
popf
das
and
xlat
or
add
mov
mov
or
dec
(bad)
jp
xor
add
loope
cmps
xor
pop
bound
push
pop
fbstp
pop
add
in
push
stos
sahf
sbb
sub
jne
xor
push
push
or
fidiv
arpl
push
mov
xor
mov
add
popf
pop
movs
jmp
xor
repz
cs
dec
xchg
push
out
pop
jns
icebp
daa
mov
je
sub
xchg
rcr
jns
xchg
fcom
in
and
sbb
sub
inc
cli
mov
mov
jp
lods
fwait
dec
inc
jnp
fcomp
and
sti
add
ret
push
cwde
cwde
jne
data16
lea
mov
fild
ret
out
adc
and
mov
mov
cmc
shr
add
pop
jnp
or
push
leave
mov
lods
sub
sbb
xchg
hlt
movs
and
(bad)
xchg
aas
icebp
add
aad
mov
dec
cmp
aam
mov
fwait
rcr
inc
xchg
add
shl
shr
cld
or
and
bound
mov
bound
out
adc
(bad)
xchg
lea
cwde
mov
cmp
xchg
test
mov
call
inc
jl
je
mov
fistp
sbb
leave
jb
pop
hlt
mov
loope
mov
adc
es
repz
repz
inc
sub
mov
add
mov
fsubr
repz
pop
popa
xor
rcr
inc
xor
call
movs
fbld
(bad)
sub
mov
and
add
outs
fbld
dec
mov
xchg
fisttp
push
push
lds
push
and
dec
imul
cmp
xchg
retf
lods
(bad)
jmp
cld
add
or
cmp
sbb
pop
adc
mov
mov
sbb
lods
sbb
adc
jns
popa
cmovbe
in
pop
jne
push
sbb
pop
fnstsw
vmwrite
iret
jp
add
pop
lock
push
fsubr
pop
ins
cli
add
std
aam
(bad)
out
sub
sub
sub
xor
enter
das
or
or
pushf
adc
mov
fsubr
sbb
ins
js
adc
inc
xchg
or
pop
xor
add
hlt
fwait
test
pop
jmp
ret
shl
push
or
(bad)
fldcw
mov
inc
or
sub
push
scas
xchg
cdq
cdq
clc
pop
je
aas
std
int3
adc
pop
add
sbb
int3
and
(bad)
mov
fwait
cmp
add
dec
out
pop
ror
xchg
add
gs
mov
xor
sbb
pop
mov
add
in
inc
mov
imul
sub
mov
aam
pop
push
int3
push
dec
movs
push
jge
cmp
outs
and
pop
(bad)
loopne
add
inc
adc
ror
jl
movs
repnz
data16
adc
mov
movs
jp
fnstenv
sub
cmps
jae
mov
mul
mov
xchg
xchg
aaa
mov
das
repz
mov
push
dec
test
mov
sahf
pusha
ss
dec
mov
sub
mov
sub
out
push
retf
leave
cli
mov
leave
jp
in
ds
enter
dec
mov
fdivr
gs
add
shl
ret
fisub
push
pop
adc
in
adc
cmp
mov
or
retf
xor
jle
xor
lahf
std
push
out
les
(bad)
(bad)
push
sbb
rcr
daa
push
and
outs
std
xchg
shr
fcomp
loop
xchg
push
cli
popf
sbb
rcr
sbb
cld
inc
rol
fs
mov
jecxz
jl
push
sbb
adc
push
add
scas
pop
imul
mov
stos
push
add
ret
lds
add
rcl
or
xchg
popa
(bad)
jb
mul
cmp
dec
inc
xor
in
xchg
pop
pop
out
dec
pop
and
dec
ins
aad
fdivr
mov
jbe
or
stos
jge
ja
xchg
cmps
dec
jmp
cs
or
lods
cmp
out
sbb
xor
push
inc
mov
mov
jo
xchg
ja
jg
push
xchg
and
sbb
mov
test
les
call
mov
arpl
jmp
fst
xchg
sbb
je
lds
das
out
les
pop
ror
inc
fs
int3
lods
test
loop
and
(bad)
movs
(bad)
mov
sub
(bad)
xor
call
repnz
jmp
(bad)
jo
stos
and
xor
in
cmp
shl
cmps
cli
pop
cdq
popf
jo
lods
pop
mov
repnz
icebp
mov
jbe
xor
push
push
aad
ds
sbb
int3
(bad)
fild
push
in
into
sbb
mov
out
mov
dec
adc
push
test
stos
inc
shl
adc
push
icebp
fisub
cmp
pop
dec
ja
repnz
sbb
xor
jmp
into
or
xchg
test
ins
cmps
enter
fs
ins
xor
stc
mov
pop
cmp
sbb
loopne
inc
inc
xchg
out
cmp
xor
xchg
cld
xor
or
mov
inc
adc
sahf
clc
data16
and
xor
sbb
jg
gs
jb
lods
mov
add
dec
sbb
pop
(bad)
mov
add
jmp
xor
sbb
fwait
mov
dec
inc
fcomp
cmps
xor
pop
sbb
lods
sub
lds
mov
outs
leave
shl
fmul
into
lea
cmp
cdq
stc
stc
adc
push
adc
mov
rcr
cmp
das
retf
sbb
add
dec
cmp
or
call
gs
mov
cmp
daa
adc
or
repz
test
inc
retf
(bad)
cdq
pop
sub
repz
movs
mov
neg
ja
into
or
or
ja
scas
popa
fcom
in
xor
jbe
scas
jns
dec
rol
in
jmp
in
test
push
xor
push
adc
mov
inc
or
popa
outs
call
outs
movs
stc
mov
mov
sar
inc
adc
in
test
adc
enter
push
jmp
in
cdq
sbb
dec
nop
xchg
scas
jne
jbe
xchg
inc
gs
or
addr16
xor
adc
push
in
movs
or
mov
and
push
push
out
enter
adc
rcr
repz
aas
xchg
or
adc
push
pop
push
jge
ins
mov
jae
inc
sbb
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
popa
xchg
stos
jo
mov
stc
sbb
sub
jmp
out
rcl
fwait
mov
and
xor
js
les
out
and
jle
ja
fucomip
out
mov
sbb
push
sub
js
lods
pop
repz
cmp
mov
or
nop
pop
shl
mov
push
lods
lock
sbb
lds
lods
mov
ficom
dec
sbb
cmp
(bad)
and
sti
test
or
xchg
inc
cmp
mov
enter
rcr
xchg
jp
sbb
push
ret
xchg
pop
mov
icebp
test
(bad)
repnz
push
xor
inc
retf
sub
inc
hlt
aaa
jb
sub
sub
fucomi
sub
sub
mov
mov
cmc
add
mov
push
ret
xor
mov
cwde
data16
xchg
stos
jmp
push
out
bound
sub
add
(bad)
dec
je
fwait
mov
xor
add
aaa
cli
sub
xchg
cdq
cdq
test
or
push
repz
(bad)
dec
jns
or
mov
add
inc
and
pop
mov
push
adc
sti
les
and
add
retf
or
xchg
or
or
loop
imul
inc
ins
xor
mov
dec
sbb
dec
adc
mov
cmp
retf
popf
loopne
(bad)
not
xchg
stc
push
cmp
pop
sbb
call
mov
xchg
bound
mov
pop
out
xor
pop
pop
xchg
lods
xchg
cwde
push
scas
or
nop
ins
pusha
mov
retf
mov
inc
lahf
push
in
mov
add
mov
jmp
pop
pop
inc
sub
and
jg
in
or
add
psubusw
cs
dec
mov
das
xchg
stos
inc
addr16
jecxz
(bad)
icebp
push
(bad)
push
push
pop
fnsave
jle
(bad)
dec
sub
nop
xor
push
iret
sub
pop
pop
int
sub
mov
xchg
add
push
mov
adc
sub
cli
mov
and
fs
sub
inc
pop
fs
psrlq
push
cwde
push
nop
push
jg
adc
pop
fsub
mov
push
add
test
and
pop
xchg
sbb
mov
or
mov
inc
cdq
into
xchg
cli
jns
adc
xchg
pop
in
arpl
push
cmp
or
pop
jno
retf
repnz
cmc
push
jmp
pop
mov
mov
push
popa
loop
push
mov
aaa
pop
call
mov
mov
cs
hlt
pop
lds
mov
test
jbe
xlat
test
mov
retf
loope
fwait
jmp
jae
xchg
outs
out
stos
push
push
mov
mov
pop
sub
fst
loop
ss
test
aam
call
dec
fwait
xor
sub
push
sub
test
arpl
fcom
or
jmp
mov
cmp
sub
sahf
mov
adc
sub
jecxz
or
sbb
icebp
add
into
dec
mov
iret
mov
sbb
fdivr
mov
cli
cmps
pop
fs
out
out
ins
out
mov
lds
retf
adc
inc
cmp
adc
push
add
div
cld
lock
jmp
cmp
outs
sbb
mov
and
retf
adc
push
jno
pop
clc
pop
scas
xor
push
cs
not
push
add
addr16
nop
ror
scas
mov
nop
jp
mov
pusha
pop
sbb
stos
movs
stc
sbb
dec
(bad)
jo
ds
aaa
jb
xchg
mov
pop
(bad)
or
aas
push
xchg
cmp
out
js
(bad)
jmp
pusha
pop
pop
add
sbb
add
xchg
xchg
and
ins
mov
pop
pop
(bad)
pop
pop
fwait
loop
daa
fidivr
mov
enter
sbb
jg
in
scas
dec
out
jne
add
movs
jns
es
test
mov
imul
xor
add
and
repnz
sbb
inc
sub
lahf
(bad)
mov
cdq
jge
sub
lea
mov
(bad)
xchg
push
cmp
outs
int
jno
and
jbe
push
inc
jl
sbb
dec
add
test
retf
ins
push
popa
sbb
sti
inc
shr
call
aaa
outs
das
add
inc
cwde
cmps
rcl
mov
movs
in
xchg
sbb
pop
mov
test
(bad)
adc
add
loopne
jmp
adc
sbb
pusha
inc
test
call
inc
ror
stos
fcom
loop
xchg
shl
xchg
pmaxsw
ficom
add
add
inc
mov
rol
scas
mov
adc
sbb
push
out
mov
std
stc
dec
js
aad
(bad)
loop
pop
or
or
in
dec
cmc
pop
push
mov
dec
in
add
push
jae
sub
mov
clc
or
je
loop
cmp
and
(bad)
mov
sbb
(bad)
shr
adc
xchg
not
out
iret
inc
mov
pop
push
lahf
xor
mul
test
xchg
xchg
data16
in
mov
pushf
sbb
mov
jne
sar
pop
pop
outs
shl
push
jnp
adc
jne
into
dec
pop
dec
push
add
fisttp
ret
cmps
int3
mov
cmps
call
adc
stos
jns
add
jne
pop
test
push
into
or
imul
mov
sbb
fild
push
adc
jmp
ins
stc
ss
fidivr
mov
add
call
jno
mov
mov
pusha
mov
lods
add
test
add
mov
xchg
aaa
sahf
push
dec
imul
mov
and
outs
sti
(bad)
jmp
dec
adc
dec
jmp
fnstsw
test
mov
imul
mov
xchg
xchg
mov
cmps
imul
pop
adc
sub
mov
sti
and
into
mov
dec
add
mov
cmps
mov
inc
xor
xor
in
xchg
cmp
jl
fwait
lahf
dec
sbb
cmp
call
mov
fwait
sbb
xchg
cmp
popa
push
sahf
adc
pop
test
pop
outs
jge
pop
in
xchg
imul
mov
in
jnp
(bad)
imul
inc
movaps
jae
not
fldenv
in
sbb
add
aad
movs
pop
dec
arpl
mov
pop
fucomip
add
outs
enter
jle
cmp
inc
lea
mov
add
ret
dec
retf
fbld
fisub
fwait
jb
inc
sub
fcomp
dec
inc
sub
jmp
adc
ficomp
imul
rcr
dec
mov
jae
xchg
aad
adc
push
or
sbb
ss
sub
movs
inc
mov
fdivr
ss
mov
ret
xor
jno
mov
stc
cmc
dec
pushf
int3
movq
icebp
into
arpl
in
jp
rol
mov
mov
sbb
inc
repnz
sbb
jmp
cmp
mov
outs
xchg
out
or
xor
(bad)
out
ja
ins
push
je
pcmpeqw
adc
in
dec
fnstsw
adc
ins
or
aaa
adc
add
pop
int3
fimul
je
add
out
push
or
push
push
cmp
mov
arpl
inc
inc
ja
cwde
(bad)
test
add
inc
dec
pop
adc
push
and
aam
(bad)
jg
and
sub
adc
xchg
adc
sbb
sbb
push
jnp
pop
in
icebp
push
push
jne
ja
scas
pushf
inc
jmp
retf
enter
stos
and
idiv
and
scas
mov
dec
stc
pop
jno
stos
popf
pusha
and
and
nop
xor
push
add
fwait
outs
mov
pushf
xor
sub
inc
pop
sbb
adc
enter
fadd
jp
jg
mov
and
push
mov
sbb
js
adc
ret
mov
inc
jb
xchg
daa
dec
test
inc
call
retf
aam
lods
bound
lea
jns
cmp
mov
idiv
push
iret
cld
xchg
ror
xor
or
popa
ins
loop
int
das
mov
aad
sbb
pop
mov
mov
jmp
sub
(bad)
ss
out
dec
retf
inc
sub
pop
(bad)
stc
inc
fisub
mov
or
sub
lds
call
and
jle
push
mov
push
pop
ins
or
stos
popa
rol
jl
ds
push
mov
js
iret
mov
pop
rcl
ins
lahf
pop
jecxz
fadd
imul
data16
mov
inc
fnstsw
movs
dec
mov
fadd
in
cwde
cmps
mov
mov
xor
leave
dec
inc
xchg
(bad)
jmp
jmp
int3
cmps
pushf
mov
cmp
fs
fstp
push
addr16
dec
jmp
mov
loope
or
push
loopne
pop
stos
inc
sub
sbb
(bad)
(bad)
fadd
sub
xchg
mov
cmp
jo
add
sbb
push
mov
add
dec
xor
pop
mov
(bad)
outs
cs
mov
ins
arpl
rcr
mov
nop
sbb
add
adc
pop
push
loopne
push
ja
push
js
jo
mov
jae
fistp
pop
pop
mov
cmp
in
xchg
ror
and
jmp
imul
push
mov
mov
push
out
je
clc
xchg
inc
mov
neg
mov
sub
adc
je
jne
addr16
jmp
call
pop
leave
lahf
js
jmp
push
test
push
out
stos
xchg
mov
stos
sti
mov
jp
retf
call
das
imul
(bad)
cs
cmp
jmp
add
mov
adc
mov
(bad)
or
gs
inc
ins
push
gs
fist
aas
pushf
and
es
jae
pop
or
and
loopne
adc
lea
loop
loope
out
mov
or
daa
popa
fwait
and
mov
loop
mov
xlat
sub
jne
push
fmulp
retf
cmp
adc
call
add
cli
addr16
adc
(bad)
xor
sub
into
iret
adc
rcl
lahf
rol
inc
dec
pushf
mov
aad
stos
sbb
cmp
imul
mov
mov
(bad)
out
mov
inc
xor
popa
add
and
jbe
push
pop
out
or
push
lds
cmp
sbb
push
xlat
pop
loopne
push
sub
inc
sub
pusha
sbb
mov
and
add
mov
mov
push
jae
sbb
mov
mov
mov
and
or
xor
dec
lea
out
in
loop
shld
sbb
pop
or
out
xor
repnz
sti
add
retf
sub
arpl
shl
lock
jle
fwait
loope
mov
mov
lahf
xor
stos
call
call
cmp
sbb
pusha
xchg
cmp
dec
lea
jae
dec
push
out
ds
pop
push
push
lock
xor
cs
or
jb
shl
cmps
fdiv
and
imul
jl
stos
add
and
repz
add
cmps
cmc
call
repz
in
inc
in
popa
inc
mov
aaa
retf
mov
add
jo
pusha
xchg
lods
scas
call
call
add
jle
sbb
imul
ret
xor
stos
cmp
dec
enter
cmps
xor
(bad)
mov
pushf
pushf
pushf
cmp
push
(bad)
jmp
not
or
pop
xchg
arpl
cmps
adc
out
ss
(bad)
in
test
pushf
imul
jne
das
es
inc
sub
repnz
adc
aam
sub
mov
xchg
idiv
fstp
push
mov
cmp
push
test
add
cmp
mov
ss
pop
(bad)
fldenv
cld
mov
fist
adc
aas
retf
test
ja
(bad)
movs
fldenv
add
pop
jp
jns
aad
fcom
shr
loope
xor
jmp
mov
shld
call
pusha
xchg
mov
add
sar
fidiv
mov
test
jnp
cld
(bad)
add
xchg
mov
and
arpl
inc
mov
inc
add
aaa
pop
movs
sahf
and
scas
sub
loopne
jne
lds
movs
xchg
adc
cld
xor
fmul
dec
xor
call
push
dec
xor
or
loop
imul
sbb
adc
dec
iret
and
scas
xchg
icebp
mov
outs
popf
inc
mov
push
popf
mov
xor
push
adc
sbb
and
and
arpl
sbb
cmp
movs
movs
xor
in
jbe
nop
cli
out
push
inc
lock
test
pop
daa
sbb
hlt
mov
xchg
dec
enter
push
(bad)
imul
scas
inc
jecxz
aas
and
(bad)
and
stc
sbb
leave
pop
inc
das
jecxz
cli
out
jo
sbb
mov
sbb
mov
add
mov
adc
xchg
sahf
enter
cmp
push
or
add
adc
or
not
add
sbb
cmp
pop
mov
mov
(bad)
dec
ins
and
aas
lock
jae
add
ss
lds
mov
in
pop
daa
mov
sbb
les
hlt
pop
pop
rcr
fcmovbe
jne
ins
rol
pop
les
mov
xchg
adc
push
enter
pop
cld
push
mov
daa
or
pop
mov
xor
clc
ss
stc
(bad)
xchg
push
and
adc
and
pushf
enter
ins
pop
lock
fiadd
(bad)
(bad)
gs
pop
dec
xlat
leave
popa
sbb
out
shr
adc
test
add
test
outs
not
int
or
dec
add
(bad)
mov
cdq
and
fiadd
into
sbb
stos
nop
xchg
adc
jae
repz
jne
sub
pop
push
adc
jl
js
mov
cmp
xchg
stc
jge
in
push
or
call
jp
jne
das
shl
pop
cmps
daa
cmc
lods
aad
pop
shl
sub
retf
mov
popa
imul
loop
pop
dec
popa
and
adc
mov
fwait
std
dec
mov
mov
lahf
fldz
xor
aad
dec
jo
jae
dec
js
jge
loope
sub
aas
movs
stos
ins
mov
cld
aas
and
(bad)
out
cmc
inc
mov
xor
iret
mov
push
ficom
fs
push
cmp
out
pop
test
sub
mov
mov
push
jmp
xor
sbb
jge
or
jp
out
pop
xor
push
or
mov
and
pop
xchg
jae
mov
gs
cmp
pop
add
add
cmp
in
jmp
push
stc
stos
je
retf
pop
push
adc
lock
xor
xor
xor
cli
xchg
sub
loop
add
rcr
hlt
pusha
outs
inc
sub
pushf
inc
mov
jns
movs
sbb
sub
out
mov
(bad)
cli
adc
out
movs
xor
loopne
call
dec
sbb
xor
adc
sub
neg
dec
in
fimul
les
stos
lds
aaa
(bad)
adc
cs
ficomp
push
jae
mov
mov
sub
fst
popf
sub
gs
ret
outs
imul
dec
push
pusha
sub
jmp
jl
ret
in
ds
icebp
mov
cmps
xchg
rcr
ror
and
sub
xchg
ss
mov
data16
loopne
inc
fidivr
mov
mov
or
mov
fimul
mov
inc
and
fiadd
dec
mov
push
repz
bound
push
shl
int
xchg
stc
mov
retf
mov
mov
or
jmp
sbb
(bad)
shr
xor
xchg
ret
scas
arpl
mov
jmp
arpl
jecxz
js
rol
pop
inc
int
retf
push
jge
in
in
or
dec
je
fldenv
(bad)
loop
aam
(bad)
push
sub
push
cli
sbb
sbb
pusha
sub
xor
push
fbstp
and
jnp
sub
fistp
packssdw
fdivr
dec
jae
cld
popa
out
inc
retf
cmp
mov
lea
jno
mov
clc
adc
adc
repnz
xor
mov
popf
(bad)
idiv
jp
jl
(bad)
mov
pop
rol
pop
int3
ret
pop
add
dec
push
les
xchg
loop
jmp
in
mov
rcl
movs
inc
rol
or
mov
xchg
aad
pop
jge
shl
outs
mov
xor
mov
call
(bad)
ins
ret
shl
or
popa
pop
or
mov
jp
loope
mov
(bad)
call
adc
test
rol
jnp
call
js
sbb
xchg
mov
fs
jne
mov
fs
inc
rcr
xchg
clc
push
in
jbe
aaa
fistp
or
adc
daa
jmp
rcr
repz
mov
push
or
imul
out
push
sbb
and
jns
jg
test
xchg
fwait
(bad)
or
sbb
nop
and
pop
sbb
push
pop
jbe
dec
add
rol
mov
mov
pop
ja
cmp
pushf
jo
cli
inc
xchg
lahf
sub
mov
mov
push
jl
stc
loopne
shl
adc
js
mov
jmp
shl
inc
or
sahf
cmp
xor
add
rcl
scas
cmp
imul
fst
pop
sbb
sbb
pop
fisttp
jg
adc
and
inc
jmp
mov
retf
mov
movs
outs
fwait
repnz
add
hlt
cmps
xchg
retf
pop
and
mov
mov
add
data16
and
mov
pop
add
inc
jg
sbb
arpl
cmp
aaa
(bad)
push
xor
into
in
int
push
cwde
push
fsub
fild
rol
jmp
pop
inc
inc
pushf
fist
fucom
aam
cmp
lea
(bad)
ficom
jne
ds
sbb
iret
ds
movs
mov
out
imul
mov
mov
popf
pushf
(bad)
movs
dec
mov
inc
adc
xchg
ds
std
stos
cmp
pushf
fisttp
jmp
loopne
pop
add
hlt
sbb
pop
in
inc
mov
add
outs
dec
popf
adc
adc
mov
lds
rol
or
or
in
adc
fcomp
add
xchg
or
jns
pop
mov
dec
std
cli
cmp
iret
mov
outs
jp
retf
in
jo
sar
in
int
mov
imul
lods
and
movs
jl
fadd
sbb
dec
xchg
add
lods
mov
mov
add
mov
or
xor
aas
inc
inc
test
jecxz
dec
inc
and
(bad)
call
daa
inc
mov
inc
fsubr
movs
adc
xchg
retf
aad
add
xor
mov
jne
mov
inc
push
xchg
std
jp
mov
aam
adc
add
xor
cmp
dec
outs
pop
pusha
out
popf
sub
rcl
popf
sub
cli
mov
outs
sub
in
lea
dec
popf
mov
fisttp
push
lahf
popa
mov
adc
rcl
pop
test
or
pop
mov
add
imul
pop
je
push
popa
or
pop
mov
and
mov
je
ins
sub
or
inc
sub
sub
pop
xchg
aas
sbb
lahf
pop
xchg
das
jl
adc
shl
and
ret
imul
mov
xor
pop
mov
fs
js
jae
call
xchg
call
jae
int3
leave
lds
(bad)
or
fxch
out
and
fs
dec
sti
pop
neg
sti
dec
and
push
pushf
push
int3
cmps
bound
xor
pop
inc
in
inc
pop
rcl
dec
mov
xor
and
repnz
popa
fist
popf
loope
fwait
mov
movs
fistp
fnstenv
out
jbe
sub
pushf
mov
inc
jmp
inc
aam
pop
push
in
mov
test
jg
and
mov
mov
js
jecxz
(bad)
cli
jmp
hlt
mov
aam
adc
inc
dec
leave
inc
fnstcw
imul
xor
or
into
(bad)
retf
arpl
sbb
cld
cmps
dec
cld
mov
jmp
loope
and
in
mov
stc
loop
xor
retf
xchg
xchg
dec
ficom
jo
xor
dec
sbb
bound
fidivr
outs
jbe
out
or
jb
outs
cmp
fsubr
test
cmp
adc
cmp
xor
jle
adc
sub
push
mov
or
in
add
mov
mov
mov
push
sbb
dec
jmp
dec
xor
cmp
adc
jns
xor
jae
add
call
sbb
mov
dec
sub
jle
or
sub
and
mov
ja
push
mov
cmps
das
pop
xchg
in
inc
out
jo
mov
in
mov
aam
pop
sub
sbb
movs
add
xchg
sahf
mov
push
and
pop
daa
mov
or
fmul
add
mov
xor
adc
addr16
mov
out
cdq
inc
addr16
mov
or
or
ficomp
das
cmp
leave
out
sub
push
and
cwde
mov
test
mov
lahf
inc
mov
or
std
pop
ins
add
sbb
add
je
xchg
(bad)
div
xlat
cmp
call
and
test
sbb
loope
cdq
ins
retf
fxch
sar
in
ret
fsubr
rcl
mov
ja
inc
add
(bad)
push
ficom
sbb
mov
jns
ins
push
add
adc
jno
out
jmp
push
jp
xor
loopne
out
add
mov
xchg
xchg
push
or
int3
rcl
ffree
out
pushf
inc
div
push
inc
xchg
loope
fild
dec
sub
mov
xor
cmps
scas
pop
cmp
xor
cmp
lea
int
jle
scas
movs
xchg
pop
fst
inc
adc
sub
or
mov
push
mov
mov
icebp
jmp
in
mov
std
pop
addr16
call
pop
add
paddsw
ds
repz
pop
loop
jns
movs
int
in
hlt
inc
push
mov
leave
cmc
(bad)
jge
or
lea
adc
leave
in
xor
cdq
pop
cli
mov
(bad)
clc
lods
adc
jp
addr16
fisub
adc
scas
add
sbb
cmp
dec
(bad)
retf
mov
lea
into
fcomp
sbb
mov
pop
xchg
and
or
pop
xor
add
xchg
lods
jb
in
loope
mov
mov
ds
sub
scas
leave
adc
in
sub
cmps
dec
aad
out
repz
push
inc
add
pop
pop
dec
sub
pop
adc
push
(bad)
push
adc
pushf
jle
das
cmps
sbb
jecxz
in
cwde
gs
hlt
mov
dec
add
xchg
mov
sub
enter
rcl
fwait
xchg
add
movs
fadd
out
in
ret
ds
inc
mov
scas
push
sbb
cmp
sbb
xor
adc
popa
and
xor
ins
imul
pop
lock
xor
push
std
or
mov
cmp
ss
imul
jns
aas
repz
inc
xchg
xchg
dec
hlt
ins
imul
and
jge
test
ret
dec
and
inc
js
ret
retf
push
mov
fwait
movs
add
jecxz
fadd
sub
iret
test
jb
inc
movs
mov
mov
sub
mov
cmp
mov
in
out
ret
data16
int
(bad)
xlat
push
fistp
rcl
outs
leave
push
imul
out
jecxz
nop
out
xchg
outs
cmp
xor
xchg
pop
arpl
icebp
loopne
scas
mov
mov
push
cmp
jnp
outs
jle
mov
add
sub
xor
adc
stos
in
sub
test
ja
jno
mov
xor
inc
jb
mov
push
mov
cmps
shr
pusha
(bad)
fiadd
and
xor
xor
inc
mov
xor
add
ins
mov
shl
add
jo
out
(bad)
repz
push
fs
cdq
scas
aaa
jp
mov
mov
loopne
jl
xchg
movs
xchg
dec
(bad)
not
cmps
and
out
and
aaa
mov
xor
shl
dec
pusha
jl
adc
xor
(bad)
bound
js
in
sbb
fwait
in
bound
int
ins
lea
mov
inc
(bad)
stos
xchg
ror
sbb
xor
jae
ins
jmp
and
inc
and
mov
jle
xlat
cmps
jb
xor
push
cdq
jl
mov
call
nop
ficom
cld
sbb
fld
aaa
out
pop
xor
enter
xlat
fild
jno
mov
mov
out
arpl
adc
into
call
add
daa
in
out
ret
call
cmp
push
xchg
jmp
mov
xchg
rep
arpl
into
test
xor
jecxz
jnp
sbb
loope
stc
aam
cmc
cmp
ficomp
cmp
dec
mov
pop
cwde
mov
jnp
scas
fcmove
push
jle
movs
adc
sub
loope
xor
adc
push
xor
neg
jns
adc
xchg
jge
repz
or
mov
scas
fstp
ror
pop
pop
bound
push
push
test
data16
sbb
std
fisttp
push
mov
pop
test
jmp
inc
or
popa
frstor
into
ret
jmp
movs
or
idiv
mov
inc
in
push
cmps
or
xchg
or
and
movs
retf
stos
adc
sti
jle
ret
dec
jp
cmp
stos
add
inc
addr16
sub
mov
fist
and
imul
fidivr
mov
ds
(bad)
push
mov
rcl
in
call
stos
retf
jg
inc
sbb
or
sbb
lahf
cmp
icebp
add
jecxz
push
adc
ftst
data16
adc
pusha
arpl
adc
cld
stos
cmps
movs
sbb
mov
outs
fcomp
cs
in
std
(bad)
mov
test
cmp
mov
(bad)
ja
scas
hlt
retf
adc
sbb
jne
data16
push
mov
leave
lea
cmp
cmps
sbb
mov
clc
call
mov
outs
mov
add
lods
xchg
mov
cmp
hlt
xor
jns
outs
push
xchg
mov
mov
jbe
or
mov
scas
jg
and
jno
pop
(bad)
push
adc
jmp
cdq
out
lahf
dec
adc
cmp
clc
cmc
call
cmp
inc
in
shl
or
in
push
pop
mov
retf
test
ret
xlat
add
seta
or
fwait
sub
das
sbb
fsubr
cdq
cwde
mov
and
lock
aas
call
mov
dec
ja
xchg
and
enter
scas
jp
test
sub
mov
adc
mov
(bad)
dec
push
(bad)
xor
dec
mov
jg
aas
out
cmp
ds
retf
adc
retf
(bad)
mov
cwde
jge
cmp
inc
loop
out
shufps
inc
sbb
or
sbb
jbe
aad
mov
push
fwait
clc
jno
not
jo
mov
sbb
mov
lahf
es
sub
das
jb
pop
inc
aam
lock
dec
adc
pop
scas
cmps
cdq
fistp
aas
xor
fnstenv
bound
ins
mov
out
inc
aam
into
mov
dec
cmps
fild
cdq
mov
clc
pop
leave
mov
xchg
ss
imul
mov
ja
push
mov
inc
fsubr
cmps
outs
fldcw
jb
cmp
sub
cdq
test
sub
repnz
mov
rcl
jbe
pop
imul
dec
xor
retf
outs
mov
lea
call
adc
mov
xchg
push
mov
pop
xor
sbb
mov
in
fldcw
sbb
xor
adc
sub
xchg
int3
sub
adc
adc
je
sbb
xchg
xchg
in
into
sub
cmps
mov
fisubr
xor
and
arpl
pusha
(bad)
jge
add
movs
jbe
test
mov
push
cmc
inc
dec
lds
sbb
in
sbb
adc
mov
add
pop
jmp
adc
mov
inc
xlat
xor
sub
cmp
(bad)
in
(bad)
out
cs
leave
add
and
mov
mov
push
pop
mov
into
rcr
and
xchg
and
jmp
loope
mov
mov
dec
adc
mov
jge
popa
lock
push
popf
jmp
jb
push
ins
xchg
or
mov
mov
and
xchg
mov
fst
adc
cs
cmp
push
adc
lock
fwait
sti
pop
mov
sbb
ins
dec
jo
scas
pop
fst
sbb
test
mov
fdivr
repz
shl
mov
cmp
and
fdiv
int
into
mov
sbb
inc
mov
out
cmp
sub
outs
repz
xor
test
xchg
mov
push
mov
aaa
cmps
sub
sub
xchg
cmps
pusha
fnstcw
inc
pop
(bad)
jb
hlt
pop
and
unpcklpd
xor
ins
push
movs
jmp
xchg
adc
(bad)
mov
clc
dec
pusha
test
ja
lds
adc
xchg
pop
ret
fnsave
xchg
idiv
jnp
xor
out
xchg
out
retf
test
scas
mov
div
lods
cld
mov
aas
add
pop
sbb
out
push
call
dec
sub
sbb
in
mov
popf
jae
jge
popf
jbe
jbe
mov
loopne
xchg
loope
std
sub
inc
pop
push
out
add
fldcw
mov
paddsw
jmp
push
pop
and
mov
mov
inc
mov
or
jo
mov
and
mov
pop
jge
pop
cmps
and
hlt
pop
adc
out
mov
adc
mov
lods
cwde
imul
mov
lods
aam
push
pop
loop
cmp
push
or
sbb
mov
fld
cdq
movs
mov
dec
xchg
(bad)
cmp
ins
pop
dec
push
jmp
iret
enter
xchg
jb
jnp
outs
mov
inc
(bad)
enter
pop
or
xor
ret
leave
adc
cmps
jbe
lods
ret
jmp
and
dec
shl
test
pop
outs
fs
cmps
push
sub
fucomip
jae
(bad)
ds
mov
test
iret
jbe
add
loopne
gs
js
movs
sub
cmp
xchg
pop
mov
data16
mov
into
sub
xchg
je
jnp
jns
add
outs
cs
hlt
repnz
jns
and
cmps
jnp
ins
sub
xchg
sub
hlt
adc
dec
stos
and
jne
ss
dec
add
cmp
push
je
mov
inc
push
(bad)
(bad)
jmp
push
xchg
das
test
inc
xchg
jno
mov
int
jbe
and
mov
into
sar
jecxz
loope
aad
dec
in
inc
dec
mov
mov
inc
mov
dec
and
das
or
int
mov
aad
add
mov
cmps
xor
jne
or
test
mov
ret
mov
mov
mov
cmp
outs
add
and
jmp
jns
fimul
rol
ins
jne
mov
in
les
fimul
xchg
aam
jne
mov
inc
jecxz
(bad)
nop
retf
shl
imul
std
adc
out
inc
bound
mov
sbb
sti
fstp
fisttp
mov
sti
or
sbb
add
jne
imul
xchg
nop
loop
in
lahf
mov
xor
or
loop
aaa
je
stc
pop
inc
in
in
js
pop
sub
mov
jmp
mov
jb
sub
jae
popf
test
lea
es
(bad)
mov
leave
std
mov
mov
out
dec
mov
lahf
popa
xchg
cld
xlat
lods
scas
mov
push
cmp
cwde
jbe
js
fldenv
inc
mov
jge
ins
fcmovu
neg
fld
loope
call
mov
cmps
sbb
mov
and
stos
mov
xlat
add
in
add
adc
sbb
mov
inc
add
jp
add
inc
adc
cmp
pushf
sub
add
pop
mov
or
xor
pop
rcl
movs
pop
sbb
ins
mov
das
xchg
inc
adc
cld
test
and
pop
mov
popf
ret
out
push
push
xor
ror
ins
pushf
aas
ror
clc
inc
lds
lahf
and
icebp
xchg
pop
bound
xor
and
mov
jl
mov
outs
mov
(bad)
xor
adc
xlat
pop
daa
or
ds
retf
adc
inc
fidivr
fisubr
dec
jp
fisubr
add
fmul
push
mov
iret
aam
lock
mov
cmp
mov
mov
rol
push
or
push
jp
mov
cs
xchg
aas
popf
push
xor
pop
xchg
mov
push
call
rol
mov
adc
add
xor
adc
mov
pop
sbb
dec
sahf
stc
stos
inc
test
pop
xchg
(bad)
or
or
pop
inc
pop
or
and
js
pop
jl
cmp
sub
push
cmc
push
sub
or
pop
xchg
test
inc
xchg
in
js
cmp
sbb
adc
dec
ret
ficom
pop
push
sahf
out
movs
adc
jl
jmp
mov
loopne
mov
mov
pop
jp
out
std
retf
push
mov
retf
inc
(bad)
pusha
loopne
jmp
jnp
adc
push
and
(bad)
sti
in
std
fucom
mov
sub
pop
push
mov
push
movs
bound
loope
add
scas
or
jmp
nop
xlat
or
ja
je
cmps
les
cmps
adc
push
clc
pop
sbb
call
pop
sbb
out
(bad)
mov
rcr
push
fst
cs
dec
adc
inc
xchg
sahf
mov
das
mov
and
shr
and
sahf
call
mov
rol
shr
jl
inc
sub
jae
cmc
mov
stos
pop
fsubr
fimul
rcl
test
(bad)
jl
dec
cmp
pop
stos
pop
lods
enter
pop
lods
scas
dec
mov
adc
dec
rcl
or
dec
mov
je
test
mov
das
hlt
cmp
xor
dec
and
inc
stos
mov
jbe
imul
mov
movs
pop
cli
adc
and
and
mov
pushf
pop
pop
loop
jecxz
ret
mov
push
cdq
rol
cmp
(bad)
cmp
mov
mov
lea
jne
pop
pop
sbb
sub
jo
jb
loop
out
jmp
mov
js
inc
into
or
push
dec
xor
jg
dec
xor
xchg
mov
pop
dec
cmps
out
lods
loop
movs
out
inc
add
sub
in
sbb
pop
hlt
outs
loopne
stc
iret
push
jl
sub
xor
lods
sbb
adc
daa
shl
fld
inc
out
retf
sbb
inc
mov
hlt
jmp
js
ins
scas
in
cmp
jbe
xchg
mov
add
push
xor
jecxz
(bad)
loop
xor
outs
push
mov
pop
xchg
adc
pop
mov
aad
or
out
stos
dec
dec
inc
push
xchg
add
adc
cmp
mov
adc
(bad)
(bad)
out
clc
(bad)
mov
sbb
mov
fnstenv
xor
push
pop
mov
xchg
sbb
fadd
push
mov
jne
shr
stc
xchg
fstp
sbb
ret
lods
cmps
xor
jo
xlat
lock
lods
jmp
inc
repz
adc
arpl
lahf
das
or
jge
rol
test
or
test
je
repnz
out
cwde
loope
mov
loopne
push
sbb
sub
add
push
ins
push
sahf
mov
xor
mov
cmp
stos
jle
test
fiadd
xchg
xor
or
fmul
jne
popf
push
mov
stc
push
pop
test
and
test
jno
dec
push
cwde
add
dec
add
mov
sub
int
and
cmp
sub
es
(bad)
scas
cli
ficomp
pusha
pop
cli
cmp
cmp
in
js
or
lea
leave
xchg
popa
jl
push
ds
push
adc
out
sbb
jne
push
(bad)
mov
jnp
out
inc
jmp
cmp
retf
cmp
mov
in
outs
and
shl
dec
sahf
mov
jle
cmc
or
xchg
cwde
xor
mov
jge
rcr
sub
clc
push
jle
(bad)
push
ds
jne
jge
mov
movs
fsincos
push
sbb
jg
mov
add
push
clc
das
aad
sub
mov
sar
xor
retf
jae
xchg
in
(bad)
into
push
push
retf
popa
jns
jb
mov
cdq
mov
and
jae
call
mov
xor
push
cmp
xchg
xchg
dec
xchg
pushf
mov
test
pop
add
pop
push
mov
inc
jb
(bad)
gs
pop
lods
sub
fdivrp
jl
hlt
xchg
mov
sbb
pusha
int
cmp
pop
and
adc
mov
inc
xor
in
push
(bad)
lock
test
mov
adc
bnd
and
repnz
ficomp
pop
ret
cmp
retf
xchg
rol
out
mov
fst
ss
leave
add
sub
retf
int
xchg
pop
sti
retf
fistp
iret
inc
add
aaa
mov
movs
and
jae
addr16
test
loop
sar
lods
test
leave
lods
add
jg
mov
cli
pop
mov
mov
push
pop
repz
gs
shr
cmp
clc
dec
or
out
leave
sub
retf
fwait
sub
shl
and
add
lock
cmp
push
popa
div
jecxz
(bad)
cmp
lahf
cld
(bad)
xor
ins
pop
mov
popa
push
ret
ret
cmp
push
xchg
adc
cmps
sbb
mov
aam
xchg
inc
mov
jno
dec
dec
and
sbb
inc
std
xchg
mov
aaa
adc
mov
and
fcomip
xor
sbb
repz
hlt
mov
mov
cld
mov
cmps
mov
sub
fwait
push
leave
mov
into
xchg
pusha
fld
adc
mov
out
test
xchg
mov
sti
pop
and
clc
adc
sbb
push
loop
loopne
or
push
cdq
xlat
or
add
push
and
jle
sbb
add
shl
pop
jne
ret
mov
add
nop
ror
dec
nop
dec
and
test
pop
in
bound
xchg
imul
sbb
mov
leave
(bad)
gs
ins
loopne
or
xor
jge
nop
mov
dec
pusha
xchg
inc
mov
or
(bad)
jp
mov
das
fcomp
xor
pop
stos
in
jge
enter
nop
rcl
dec
cmps
mov
pop
mov
sbb
adc
adc
enter
pop
addr16
loop
mov
(bad)
push
shl
inc
push
mov
fwait
xor
sub
ja
ja
rcr
les
jg
movs
cmp
pop
jp
jne
sub
fadd
vcvtsd2ss
add
das
pop
and
data16
std
and
push
mov
mov
out
mov
imul
and
(bad)
add
mov
dec
test
jne
jae
inc
xor
mov
cmp
sti
test
sar
xor
xor
sbb
daa
push
test
sahf
xor
cmp
idiv
les
sub
lahf
mov
outs
jmp
add
clc
in
out
inc
or
mov
loopne
and
xlat
mov
sti
xchg
or
std
fcom
push
cmp
fisub
mov
rol
xchg
dec
xchg
sbb
imul
pop
sbb
sub
ror
dec
aaa
je
cmp
dec
js
shl
push
mov
inc
cli
les
aad
cmps
fucomip
inc
mov
xor
(bad)
dec
xor
cmp
jae
(bad)
mov
shl
or
wrmsr
mov
push
cmp
mov
xchg
inc
adc
cld
sub
ret
or
mov
jg
inc
ja
lahf
push
shld
ret
imul
cmp
into
fwait
retf
dec
adc
in
sbb
pop
pop
mov
movs
loope
repnz
movs
sar
sbb
mov
lds
pop
xor
sar
push
call
sbb
ins
dec
push
dec
gs
cmp
arpl
js
pop
push
test
mov
pop
and
out
cld
adc
mov
in
imul
das
push
inc
push
xor
outs
jb
mov
jnp
das
mov
(bad)
sti
cmps
pop
test
stos
fs
sub
mov
pop
bound
cld
(bad)
cmp
mov
xlat
fs
ds
inc
dec
xor
sbb
adc
or
and
mov
pushf
dec
add
mov
sbb
repz
add
and
stc
pusha
out
add
cmp
pop
mov
pop
pop
cli
mov
jns
mov
dec
mov
repz
or
sub
pop
sub
or
push
mov
inc
xor
sar
jecxz
test
adc
loop
sub
mov
das
ss
aam
sub
test
xor
mov
jg
fnstsw
stc
lods
repz
xchg
xchg
push
adc
icebp
aad
mov
sti
xor
popf
arpl
sbb
lahf
add
push
jne
out
ins
adc
push
popf
test
shl
dec
inc
iret
cmp
into
shr
ins
rol
sti
pop
pop
fwait
xchg
or
jae
xchg
jmp
push
aaa
adc
outs
xor
inc
int3
rcr
shr
jb
rcl
ret
out
je
cli
or
mov
bound
data16
out
leave
jmp
sub
into
push
cwde
mov
sti
inc
mov
lods
ror
push
data16
ja
dec
cmp
mov
loopne
mov
scas
sub
cmps
xor
mov
shl
lds
xor
cmp
fs
and
push
pop
adc
xchg
sub
shl
sbb
cwde
jle
mov
fisubr
mov
and
jae
xchg
sbb
push
and
mov
out
cmp
cmc
cmp
(bad)
sub
lods
stos
push
sub
not
adc
pop
jg
popf
cld
arpl
mov
dec
clc
lea
inc
jbe
adc
dec
jle
loop
pop
iret
ss
xor
cli
mov
into
cmp
(bad)
je
mov
cmp
shl
jns
pop
jg
daa
in
popf
gs
dec
cmps
or
repnz
push
mov
stos
inc
add
add
lods
jns
test
lahf
mov
and
and
scas
(bad)
pop
mov
add
xchg
jae
ss
ins
dec
push
add
cmp
and
push
aas
dec
sbb
fisttp
mov
cmp
add
dec
cmp
or
lahf
(bad)
and
daa
dec
fisub
mov
jmp
jle
xchg
mov
daa
pop
dec
pop
movs
shl
dec
jg
mov
sahf
pop
xor
cld
and
mov
jbe
dec
adc
jbe
imul
pop
movsx
pop
mov
movs
clc
lods
mov
xchg
cmp
outs
xchg
retf
rcl
test
pop
ret
jl
imul
sub
scas
loopne
fs
cmp
dec
jae
and
or
ins
push
fwait
loop
sub
push
cmp
pop
add
punpckhbw
sub
sub
push
mov
cmps
push
gs
and
(bad)
cmc
ds
sbb
pop
movs
popa
loope
lods
rcr
xlat
dec
arpl
div
xlat
pop
pop
pop
repz
or
inc
and
mov
mov
test
and
cs
mov
dec
mov
cmp
inc
xor
push
cmp
adc
std
out
sbb
fld
sub
fdiv
daa
das
cmp
inc
inc
idiv
xor
or
adc
fwait
je
xchg
and
(bad)
or
hlt
and
jnp
adc
sub
loope
mov
pop
mov
or
scas
out
mov
out
mov
out
cmp
push
jle
jg
jmp
cmps
cmc
inc
hlt
jl
dec
leave
test
inc
pop
dec
pop
push
mov
fcom
mov
aas
dec
pusha
push
cmps
stc
jl
or
adc
mov
adc
or
movs
jl
fistp
cmp
xchg
jp
out
scas
xchg
sub
cli
lods
inc
iret
enter
fwait
and
jmp
iret
mov
adc
jb
add
jns
retf
int
lea
mov
xor
lock
mov
int3
(bad)
lods
call
cmp
adc
fcomp
lods
leave
repnz
or
mov
and
jb
or
pop
pop
mov
adc
in
inc
hlt
cmc
(bad)
pop
sub
nop
daa
int
arpl
xchg
push
sub
cld
hlt
les
loopne
push
push
mov
lds
cmc
and
inc
and
ficom
inc
cli
mov
mov
cmps
movs
adc
(bad)
cs
in
mov
mov
daa
int
retf
push
add
lods
jle
fst
cli
pop
xor
int3
pop
fisub
sbb
mov
cmp
inc
xor
mov
add
mov
cmp
cwde
push
dec
rcr
cdq
jo
(bad)
jmp
adc
adc
dec
or
fsubr
pop
pushf
add
movs
ficom
out
loopne
jmp
mov
outs
pusha
das
retf
xchg
les
(bad)
mov
hlt
outs
cwde
ror
push
inc
add
aaa
xchg
jno
pop
pusha
xchg
dec
es
pusha
aas
push
nop
popa
test
cmp
aas
aaa
pop
hlt
lods
inc
jae
add
push
aam
out
adc
sbb
shl
push
mov
lods
mov
addr16
outs
int
jno
mov
lea
cli
out
clc
mov
mov
xchg
mov
and
leave
sub
mov
stc
jne
fnstsw
cmc
(bad)
fsubr
int3
push
xchg
enter
jmp
cmc
out
(bad)
cmp
jecxz
jnp
jne
cmp
les
movs
sub
stc
test
mov
inc
jns
fucomip
jne
mov
and
ret
les
mov
cmp
in
outs
aaa
mov
test
sahf
(bad)
xor
(bad)
ins
sub
nop
ins
ret
xchg
daa
out
mov
jae
mov
mov
shl
add
inc
test
push
repz
dec
adc
push
mov
dec
dec
mov
xor
je
inc
or
in
inc
arpl
test
jge
(bad)
scas
sbb
cli
pop
jns
pop
movs
jns
inc
mov
add
mov
stos
movs
push
mov
mov
adc
mov
mov
sbb
aad
sub
jno
or
or
xchg
(bad)
dec
or
movs
cmp
aaa
and
(bad)
mov
outs
pop
imul
outs
ret
jnp
and
adc
cmp
dec
mov
mov
mov
(bad)
bnd
lock
ret
call
mov
xchg
fwait
js
stos
(bad)
dec
mov
adc
add
data16
sub
clc
cmp
jno
in
inc
inc
(bad)
jmp
mov
aad
sbb
and
inc
inc
(bad)
pop
sbb
(bad)
test
inc
push
pushf
not
inc
adc
xchg
push
loope
out
pop
or
jns
xor
jbe
icebp
stos
cli
aam
xchg
sbb
xchg
arpl
repz
pop
cwde
xor
adc
and
inc
xchg
xor
xor
dec
out
pop
fldenv
nop
ins
fnstcw
mov
scas
inc
imul
les
loope
sahf
push
cmp
or
lea
ret
aas
addr16
jb
mov
and
add
push
std
inc
cwde
nop
lahf
adc
cmc
jno
iret
push
imul
mov
mov
pop
mov
sbb
std
mov
jecxz
bound
mov
sbb
repnz
cmps
das
xchg
mov
push
inc
inc
cmc
cs
retf
les
cs
or
dec
mov
ret
add
xchg
fadd
bound
cmp
sbb
push
xlat
in
test
add
pop
mov
xor
mov
dec
les
scas
(bad)
xchg
mov
mov
push
test
inc
cmc
ret
or
inc
mov
ins
(bad)
jns
jno
or
inc
js
ret
mov
test
inc
xor
pop
cmps
rep
mov
inc
xor
adc
aaa
and
cmp
dec
jae
out
mov
in
push
fisttp
lods
mov
and
or
mov
or
pop
shl
lea
mov
les
and
jle
mov
mov
nop
xchg
push
cmps
xchg
push
push
jp
push
push
fcom
jmp
repnz
fmul
outs
sub
jmp
loope
and
cdq
mov
cmps
xor
pop
xchg
(bad)
mov
call
push
jns
bound
gs
and
or
dec
push
jnp
cs
dec
movs
fstp
adc
shl
not
or
jl
and
fnstcw
dec
jge
inc
or
imul
cmp
loop
pop
ret
repz
mov
sbb
jb
mov
fwait
dec
mov
cmp
inc
mov
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
push
pop
repz
xchg
adc
ds
adc
call
xor
fdiv
mov
cmp
push
xchg
sub
cmp
mov
test
es
pushf
repz
jns
ret
push
dec
pop
dec
or
test
xor
int
add
(bad)
pop
jmp
cld
mov
mov
sbb
sub
adc
loope
push
jle
fistp
or
ins
je
xor
sub
(bad)
or
cmp
in
jb
xchg
dec
call
out
movs
sub
cwde
aaa
or
dec
out
punpcklbw
pop
in
xchg
inc
icebp
cli
loopne
mov
sbb
inc
dec
pop
mov
ds
not
dec
jg
outs
jns
pop
es
sbb
sub
(bad)
jp
and
not
xchg
mov
push
mov
outs
inc
xchg
(bad)
mov
iret
cli
sbb
push
mov
aas
test
(bad)
sti
jno
xlat
jnp
cld
out
pop
cmp
fs
sub
push
adc
add
push
test
ret
sar
in
or
int
popf
nop
mov
pusha
pop
lea
test
push
cdq
jne
cmp
mov
add
repz
add
jns
inc
in
outs
add
inc
rcl
push
arpl
and
dec
out
mov
outs
(bad)
and
jns
mov
mov
xchg
pop
dec
mov
les
scas
sar
fwait
retf
sbb
cmp
or
aad
into
fld
push
pop
sub
sti
ret
adc
ret
cmp
xlat
mov
xor
and
push
repz
call
adc
dec
in
jle
(bad)
push
test
test
gs
mov
mov
inc
(bad)
inc
cmp
add
adc
inc
push
arpl
and
popa
sub
mov
retf
cmps
test
mov
mov
es
mov
idiv
fisttp
inc
pop
inc
inc
fwait
(bad)
fnstsw
mov
(bad)
iret
(bad)
mov
inc
daa
es
in
mov
test
ins
push
jle
add
push
out
cwde
addr16
push
test
fcom
rcr
xchg
jne
pushf
mov
ins
fisub
nop
and
sub
fwait
cmp
(bad)
in
dec
lods
jo
xor
or
xchg
jne
inc
inc
lea
aad
call
fld
sub
push
push
sahf
xlat
loopne
mov
sub
std
neg
push
pop
sbb
int
int3
mov
cmp
fadd
repz
neg
adc
jecxz
loope
dec
aas
sahf
(bad)
(bad)
adc
repnz
pop
pop
pop
fs
out
loopne
int
(bad)
(bad)
cli
inc
fcomip
push
stc
mov
sbb
test
(bad)
mov
popf
cmc
mov
mov
cmp
mov
loopne
mov
pusha
lds
inc
lock
scas
pop
cmp
mov
jmp
push
xor
xor
and
jns
shr
pop
out
push
scas
jle
out
out
or
xor
cdq
stos
sbb
test
jge
aas
pop
add
int3
shl
aaa
mov
xor
pop
adc
js
pop
xor
inc
mov
mov
loope
xchg
shr
(bad)
into
mov
cmp
jo
and
adc
add
test
mov
sar
pop
aam
lds
(bad)
std
sub
or
test
cld
stos
(bad)
and
mov
push
mov
in
mov
push
cmp
popa
mov
pop
pusha
and
push
cld
sbb
out
adc
jns
push
jmp
or
xchg
out
sub
push
xchg
push
scas
adc
cmc
sbb
adc
push
mov
xchg
clc
dec
xlat
jns
(bad)
mov
in
sbb
(bad)
aad
mov
in
bound
fstp
js
jp
out
cmp
mov
loop
jl
int3
inc
xlat
jns
push
or
add
stos
inc
mov
push
and
push
dec
in
lods
jecxz
outs
sbb
mov
lahf
cdq
xchg
mov
mov
adc
xchg
(bad)
int3
xchg
xchg
outs
jns
(bad)
fsubr
and
push
arpl
(bad)
jg
fwait
add
push
rcr
(bad)
xchg
pshufw
adc
adc
sar
test
ret
mov
push
and
jle
mov
inc
cmp
sahf
and
cmp
retf
ret
cmc
sti
mov
push
adc
test
out
aam
outs
inc
test
jle
xlat
repnz
stc
and
lock
inc
mov
(bad)
sub
cdq
mov
std
and
add
sub
lock
leave
rol
add
js
dec
dec
pop
dec
fldcw
cmps
ins
pusha
pop
mov
inc
dec
add
sar
adc
scas
(bad)
jne
addr16
mov
shr
retf
pop
push
lds
(bad)
movs
mov
mov
push
fild
cwde
xchg
test
repnz
xchg
or
aam
lods
adc
imul
in
fsub
cmps
sar
mov
in
jb
jg
adc
bound
xor
or
fild
and
pop
movs
and
jge
sbb
pop
mov
ss
dec
and
and
or
jns
jecxz
lahf
dec
sub
in
fimul
ins
mov
jo
mov
ins
outs
dec
retf
or
jb
mov
dec
(bad)
cmp
ret
mov
sbb
test
popa
ja
xchg
jg
mov
stc
xchg
and
stos
sbb
cmp
push
mov
jne
ins
push
pop
sbb
jl
jg
and
adc
jb
mov
daa
xor
xchg
aas
inc
pop
enter
xchg
stc
and
and
jmp
shr
mov
inc
sub
inc
cmc
stos
mov
mov
into
push
pop
test
mov
arpl
inc
stc
mov
mov
or
sub
mov
mov
aad
push
(bad)
jns
ja
push
fdiv
sub
and
cmovb
jns
sbb
iret
fcom
sti
xchg
and
pusha
mov
mov
pop
popf
add
pusha
xchg
fdiv
push
ret
jae
unpckhps
ss
outs
sahf
movs
pop
pop
fs
xchg
ret
inc
pop
pop
mov
nop
mov
xor
sahf
and
xchg
fmul
fiadd
test
cmp
inc
fnsave
or
sbb
and
pop
ret
fdivr
ss
mov
out
sbb
sub
jbe
push
sahf
push
xchg
repz
lods
shl
loope
sub
(bad)
loopne
sbb
push
jg
rcl
sar
aas
js
mov
int3
in
or
inc
outs
and
mov
inc
adc
daa
imul
ins
in
or
push
(bad)
mov
sub
stc
int
movs
popf
and
adc
jl
mov
mov
cmp
xor
jae
imul
xor
iret
jbe
arpl
cmps
sahf
mov
lock
(bad)
push
addr16
pop
int3
add
das
and
xor
mov
jmp
pop
bound
in
push
jmp
arpl
inc
loop
lods
mov
aam
scas
fnstcw
or
(bad)
and
mov
sahf
dec
xchg
rcr
push
sbb
clc
in
jmp
(bad)
retf
push
add
inc
ss
popa
lea
jne
inc
das
cmp
les
in
xchg
int
pop
es
aaa
sbb
xor
pop
xchg
rcl
ret
jge
cwde
call
fidivr
les
hlt
inc
xor
int
dec
les
cmc
popa
test
pop
out
fmul
sbb
pop
or
pop
cli
and
jno
repnz
jmp
imul
push
out
push
cmp
cli
lods
jle
paddw
lods
push
(bad)
pushf
ja
adc
pop
test
inc
and
int3
sub
popf
and
dec
push
enter
adc
inc
push
pushf
lahf
jg
xchg
sbb
jp
out
addr16
ins
test
or
cmp
push
js
add
or
jmp
jo
out
push
popf
pop
je
xchg
hlt
xor
sbb
pop
push
mov
aas
add
cmc
aas
pop
stos
jne
sbb
(bad)
jae
loope
and
mov
jge
push
dec
sub
into
mov
ins
scas
pop
call
aas
mov
jecxz
gs
push
pop
push
sti
test
inc
jecxz
int
dec
popa
jbe
mov
dec
leave
repz
inc
add
ret
xor
adc
shl
inc
xchg
fist
and
ins
scas
stos
xor
lea
jb
pop
les
aad
add
cmp
and
adc
sub
push
out
in
sub
fsubr
jno
(bad)
xor
push
outs
inc
dec
pop
out
inc
pop
xchg
aam
stc
sub
or
mov
and
inc
in
dec
fcom
test
pop
icebp
loope
or
(bad)
movs
lods
mov
jno
icebp
shl
push
mov
sub
adc
dec
add
cld
push
xor
dec
shl
xchg
pop
jns
hlt
or
xor
mov
mov
and
inc
mov
mov
call
and
and
mov
xchg
stc
jl
fsub
ds
aas
xchg
pop
fbld
neg
int3
inc
dec
lods
rol
mov
pusha
jge
(bad)
push
push
sub
pushf
inc
stos
cmp
xchg
or
mov
pop
or
stos
mov
retf
jle
pusha
mov
and
jb
aad
jae
cli
int
retf
fiadd
push
mov
aad
jl
repnz
add
and
xchg
data16
sub
sub
in
je
sar
stos
sub
rol
inc
fdivr
cmc
dec
jecxz
sbb
dec
and
mov
dec
pop
idiv
push
cmp
jmp
push
or
jae
and
gs
ja
pop
je
loop
js
push
and
push
out
aam
call
movs
pop
mov
mov
xchg
mov
or
xchg
into
or
dec
leave
lea
imul
cmp
ret
sub
cmps
and
jb
fstp
data16
mov
ret
inc
rcr
push
jp
and
pop
nop
bound
sub
xchg
shr
enter
add
push
movs
push
sub
fnstsw
pop
push
loopne
sub
inc
mov
loopne
cdq
xchg
add
jmp
ret
pop
lock
xchg
fnstsw
push
cmp
sbb
test
in
cs
scas
shr
ror
xchg
mov
push
js
cld
js
(bad)
not
dec
dec
fisttp
push
cmc
sbb
aas
ja
arpl
adc
sbb
rcl
arpl
add
int
in
mov
push
cmp
popf
int3
mov
mov
and
or
popa
jnp
mov
xchg
dec
fs
(bad)
and
xchg
rol
into
mov
out
mov
sti
ja
pusha
mov
xor
out
in
fild
(bad)
inc
push
inc
xor
(bad)
xor
sub
hlt
xchg
push
dec
jmp
pop
cmps
ret
shr
adc
push
scas
cs
lahf
iret
lods
or
xchg
(bad)
and
loope
jmp
adc
movs
mov
sbb
mov
outs
scas
add
cmc
rcr
sti
rol
test
or
xchg
mov
sbb
lods
fimul
out
push
mov
cmp
movs
fild
xchg
imul
lock
ins
stos
in
cmp
popa
pop
std
mov
push
and
jecxz
xchg
cmps
sbb
mov
fisubr
call
or
cmps
cmp
xchg
sub
es
jmp
scas
std
push
rcr
clc
shl
out
push
inc
je
add
mov
out
mov
gs
hlt
iret
mov
loop
mov
or
(bad)
fist
out
test
pop
mov
std
sub
push
outs
jle
adc
rol
pop
cdq
(bad)
add
pushf
fwait
pop
ss
in
jno
dec
leave
pop
nop
dec
xor
sbb
dec
dec
(bad)
or
add
cmp
cmp
popa
loope
stos
fcomp
or
repnz
movs
rcr
adc
and
hlt
adc
jl
mov
push
mov
stos
jmp
mov
jp
pop
aam
push
mov
fld
dec
pop
ja
imul
jb
nop
shl
ret
es
fwait
and
shr
push
cwde
test
or
push
dec
mov
pop
pop
or
or
pushf
xor
or
add
sbb
fcom
mov
imul
jb
arpl
pop
fisttp
ins
mov
push
ret
pop
ret
push
mov
dec
hlt
xor
sahf
mov
dec
test
(bad)
shl
adc
dec
cmp
mov
(bad)
xor
sub
nop
dec
or
pop
clc
adc
mov
dec
test
popf
cs
mov
xor
jb
sub
mov
scas
cwde
jbe
pop
inc
shr
cmp
inc
jns
push
test
xchg
or
add
(bad)
fsubp
or
adc
sub
xchg
fldl2t
cmp
or
push
mov
mov
cdq
ja
inc
inc
mov
xor
dec
arpl
retf
xlat
adc
loopne
popf
mov
jle
push
stos
outs
xor
cld
ret
stos
sub
mov
(bad)
cmp
movs
call
inc
hlt
adc
ret
call
or
lds
pop
gs
ret
mov
cdq
mov
cmp
mov
(bad)
ficom
out
(bad)
sti
push
clc
loopne
push
mov
aad
std
or
push
imul
cmp
popa
pop
ins
das
adc
lahf
pop
jmp
sbb
ret
aam
jl
test
mov
sbb
inc
jbe
mov
lea
mov
(bad)
repz
out
pop
mov
test
dec
stc
cmps
mov
pop
fwait
xchg
dec
mov
jno
mov
mul
xor
fmul
loope
cld
ja
jmp
xchg
dec
sahf
mov
mov
dec
das
xchg
xor
fsub
adc
cmps
int3
nop
cmps
lock
push
test
pop
sahf
into
test
fs
(bad)
in
xor
cmp
sub
sti
jns
adc
das
pop
out
hlt
int
xor
pushf
sub
stc
mov
hlt
inc
pop
fwait
enter
lods
mov
xchg
add
jno
xlat
xor
addr16
lock
jno
mov
ret
addr16
cmp
jmp
out
pop
repz
outs
imul
(bad)
jecxz
jle
loope
mov
pop
adc
jl
push
xchg
iret
inc
call
lods
shl
test
fs
in
ins
(bad)
pop
xor
and
dec
pop
pop
es
sbb
fisub
shl
sub
mov
(bad)
cdq
or
pop
mov
sbb
mov
inc
int
sbb
lahf
fs
fisttp
push
sbb
inc
daa
push
ds
add
lahf
neg
mov
and
lahf
and
push
jb
in
sub
nop
inc
push
mov
xor
mov
iret
or
scas
xchg
fist
cli
mov
movs
sbb
xchg
jae
out
and
push
and
push
out
ja
mov
int
jnp
dec
push
or
sbb
mov
pop
mov
fnstsw
outs
push
sub
(bad)
imul
enter
ins
jno
imul
mov
sub
sbb
ja
loop
imul
sub
pop
in
pop
cmp
cwde
sbb
pop
cmps
rcr
icebp
dec
jge
cmc
sti
cld
inc
sub
repnz
ror
jnp
aaa
pop
sbb
jle
push
mov
out
fiadd
(bad)
pop
call
and
push
dec
pop
or
jg
jb
je
cdq
xor
gs
pop
pushf
fisttp
jne
sbb
out
mov
sbb
cmps
in
js
lahf
pop
test
mov
loop
nop
push
std
rcr
leave
jle
cmc
push
lods
inc
xchg
fisttp
push
cmp
inc
xchg
push
xchg
sub
xor
jno
fs
pop
mov
leave
inc
sub
(bad)
cmp
sub
jp
in
(bad)
push
lods
dec
rol
inc
div
xchg
icebp
setl
push
xchg
cmc
xchg
sbb
push
nop
mov
sbb
dec
outs
or
mov
add
mov
int3
xor
sar
mov
or
mov
adc
dec
lods
xor
or
nop
push
xchg
retf
retf
or
jo
pushf
push
cdq
sbb
cwde
pop
in
mov
mov
adc
xchg
xchg
(bad)
inc
int
pop
cmps
sti
sub
pop
cmp
sbb
jae
ins
lods
sbb
cli
stc
sub
fs
lods
rcr
fsub
and
xchg
lock
mov
loop
int
fwait
xchg
and
retf
cmp
inc
push
mov
push
div
cli
jmp
and
les
addr16
ins
push
nop
repz
xchg
sub
retf
(bad)
adc
mov
jo
push
test
dec
out
aaa
mov
loop
fcom
leave
xor
cmp
cmp
inc
and
iret
inc
js
fsubr
xor
jp
fwait
inc
mov
ds
sahf
sbb
add
movs
(bad)
pop
mov
imul
sub
add
inc
daa
pop
ja
scas
cmp
push
mov
add
int3
inc
xchg
adc
data16
mov
imul
nop
dec
mov
bound
and
(bad)
mov
and
or
inc
shr
adc
pop
movs
xchg
stc
mov
push
outs
inc
mov
call
inc
inc
(bad)
ror
xchg
push
add
pop
dec
mov
loope
push
pop
enter
or
jmp
inc
ins
lds
call
xor
scas
jg
pop
sub
test
test
pop
aaa
mov
push
dec
push
call
fnsave
jg
pop
ins
jbe
imul
shl
jg
pop
into
xchg
imul
jge
jp
retf
and
int3
push
scas
loopne
pop
fild
push
mov
jb
iret
stc
push
and
mov
dec
jmp
or
ret
jg
inc
or
out
sub
xchg
jo
ret
pop
fcom
sbb
sbb
cmp
add
test
ins
jmp
sbb
inc
xchg
jnp
stc
inc
call
cmps
js
xlat
fwait
push
sub
popa
push
adc
xor
in
cmp
and
ror
pop
mov
fist
or
cmp
mov
fdivp
loope
fucomp
les
xchg
icebp
adc
movs
pop
sbb
xchg
addr16
retf
xor
dec
stc
xchg
sbb
aad
outs
mov
(bad)
cmp
jo
jl
std
jb
fistp
push
mov
xchg
sbb
(bad)
stc
icebp
xchg
data16
lea
out
push
xor
scas
mov
sbb
pop
xchg
scas
push
fidiv
xor
push
ja
sbb
popf
xchg
sub
xchg
retf
push
dec
std
add
int3
rcr
add
call
fdiv
call
test
mov
jo
sbb
js
shr
mov
imul
or
mov
mov
cmc
lods
dec
pop
pop
mov
dec
sub
sub
mov
sub
shl
test
push
lds
jmp
sub
movs
sub
pop
loopne
outs
shl
rcr
mov
(bad)
lds
jb
adc
stos
adc
jp
loopne
cli
loope
push
mov
push
mov
add
push
arpl
xor
jne
xchg
lods
data16
sar
pcmpgtd
(bad)
out
pushf
ja
scas
inc
pop
push
mov
mov
pop
inc
pop
inc
lahf
inc
and
in
stc
movs
jno
mov
mov
aam
push
xchg
dec
pop
idiv
fwait
fwait
test
mov
int
jle
cmp
imul
or
cdq
ins
pop
mov
mov
movs
(bad)
add
jmp
mov
and
aaa
inc
call
fnstsw
push
and
jmp
jl
scas
(bad)
in
mov
cmp
in
jmp
(bad)
push
int3
jecxz
lods
mov
add
xchg
or
and
cmp
mov
push
aaa
sbb
mul
jae
popa
fldcw
arpl
loop
xchg
and
xchg
pop
icebp
in
xor
inc
fwait
and
scas
pushf
jo
adc
(bad)
cmp
xchg
pop
push
daa
or
inc
std
(bad)
fadd
cmp
xor
sbb
xchg
pop
inc
or
aaa
jg
add
outs
adc
mov
add
adc
adc
inc
paddw
or
mov
sahf
test
mov
jmp
loop
sub
outs
xchg
lock
jne
add
scas
cmp
xor
mov
sbb
mov
cmp
dec
mov
xor
ins
dec
ret
out
jnp
pop
retf
sahf
mov
rol
ds
inc
push
inc
pop
ficomp
sbb
or
je
jg
es
inc
(bad)
push
iret
pusha
pop
(bad)
out
inc
lods
aaa
and
mov
js
jecxz
inc
fcom
idiv
imul
inc
lods
adc
jo
mov
fdivr
xor
aam
mov
xor
in
outs
mov
popa
jmp
mov
or
retf
pushf
int3
test
pop
xor
call
jns
pop
stos
or
jmp
xchg
aad
imul
(bad)
outs
call
sbb
std
in
pop
mov
jno
lods
dec
cmp
pop
jle
cmp
xchg
mov
retf
jge
jmp
pop
mov
and
icebp
add
scas
jge
dec
je
push
fisttp
and
and
cdq
mov
dec
push
inc
ffreep
dec
retf
inc
mov
and
xchg
aam
mov
cmp
push
jb
iret
setb
and
inc
enter
cdq
popa
cli
stos
stos
dec
and
jle
popf
push
jecxz
fwait
xor
ins
mov
pop
in
dec
repz
sbb
out
ins
or
pop
lds
call
cmp
or
lock
sbb
inc
cwde
inc
xchg
cmp
outs
sbb
mov
pop
mov
mov
fcomp
add
int
mov
xchg
xchg
retf
mov
pop
imul
scas
int3
adc
in
das
jl
enter
xor
mov
push
test
mov
mov
sahf
cmp
inc
jg
mov
ds
adc
js
xchg
ror
inc
ins
sbb
mov
dec
mov
cdq
outs
cmp
adc
push
je
or
dec
(bad)
pusha
lds
sub
je
inc
pop
inc
shr
jmp
or
test
jae
xchg
jecxz
adc
push
ins
out
mov
jp
shl
xor
cmp
ret
and
pop
emms
mov
les
mov
and
pop
or
xor
mov
(bad)
(bad)
or
jg
js
call
arpl
inc
outs
std
adc
fcomp
lds
inc
sub
cli
xor
jmp
sub
add
out
call
xchg
ds
movs
jge
mov
(bad)
mov
pop
xchg
std
pop
and
stos
jle
dec
lea
leave
(bad)
xchg
xor
mov
cli
retf
adc
fistp
into
in
ret
xlat
ja
pop
in
repnz
call
shl
pushf
ins
imul
ins
xlat
xor
sbb
mov
mov
std
loopne
sbb
mov
xchg
mov
int3
cmp
add
mov
xchg
sbb
adc
jmp
cmps
mov
popf
out
xchg
aaa
push
push
lea
inc
lods
or
jl
jecxz
div
jne
rol
in
dec
push
sbb
push
nop
shl
push
mov
out
(bad)
pop
xlat
jb
jecxz
out
mov
dec
cmp
aam
stc
mov
imul
push
jge
loop
sub
sbb
test
inc
mov
dec
enter
leave
bnd
or
inc
push
lds
xchg
mov
and
inc
xchg
outs
or
ret
test
jmp
aad
jb
outs
pop
add
push
int3
add
mov
rol
sti
ja
repnz
lahf
mov
add
dec
ss
mov
les
jmp
dec
sub
fisubr
ss
nop
loopne
arpl
les
sub
lea
cs
jp
jne
push
xor
xchg
ja
mov
lahf
in
jo
xchg
dec
pop
jl
(bad)
lock
div
shl
ja
dec
out
mov
jle
inc
pop
out
pop
aad
sbb
sbb
(bad)
jmp
jle
push
mov
mov
sub
sbb
push
ror
jl
push
call
pop
es
cs
pop
outs
clc
imul
js
(bad)
sub
cmps
mov
les
repnz
scas
mov
retf
out
out
ins
or
and
sbb
gs
cwde
mov
in
sub
pop
mov
sub
push
pop
fistp
add
jnp
(bad)
lds
call
cdq
mov
rol
es
cmp
sbb
(bad)
aas
mov
mov
jp
pop
cmp
xor
dec
test
sbb
sub
pushf
jp
call
sub
lds
in
lods
xchg
jnp
je
jmp
xor
aad
in
stos
loopne
and
lock
sub
(bad)
imul
imul
xor
loope
dec
rcl
cmps
sbb
or
fadd
fs
or
loope
hlt
or
cmps
iret
call
jns
cmp
adc
into
pop
adc
mov
jne
xchg
dec
mov
movs
dec
(bad)
ins
or
inc
out
sbb
psubusb
outs
mov
aas
xor
dec
mov
inc
mov
int
clc
retf
xchg
cdq
jnp
imul
jno
or
dec
or
lods
ret
ds
mov
pop
sub
jo
or
stc
test
aad
fwait
mov
xchg
mov
pushf
stc
sub
(bad)
(bad)
mov
(bad)
iret
pop
into
stos
fs
stos
xchg
dec
(bad)
repnz
pop
repz
cmp
stos
dec
ins
mov
push
aam
push
sbb
sub
adc
xchg
or
mov
aam
fsincos
(bad)
idiv
inc
cmp
or
adc
pop
adc
sti
or
rol
or
mov
cmp
pop
jb
imul
sbb
add
out
cmp
mov
mov
cwde
lahf
dec
pusha
sub
sbb
bnd
or
and
pop
jle
jb
pop
sar
jmp
(bad)
in
push
mov
jae
stos
add
mov
popa
ins
xchg
daa
inc
retf
mov
shl
ins
sbb
lahf
test
jo
repz
pushf
leave
(bad)
outs
xchg
jmp
push
clc
imul
vmovss
pop
adc
inc
outs
dec
mov
jne
call
into
ins
mov
outs
or
inc
fsub
cmc
sbb
sahf
pop
cmps
push
aam
out
pusha
outs
pop
inc
pop
es
push
pop
and
shl
(bad)
aad
dec
sub
mov
fldcw
not
(bad)
push
pop
sbb
push
loope
xchg
fnstcw
sub
ret
fmul
es
scas
mov
fxam
adc
sar
mov
dec
retf
lahf
adc
mov
pop
retf
jmp
push
dec
out
add
fsub
and
inc
pop
jecxz
mov
inc
xchg
and
pop
sub
cmp
xchg
mov
out
mov
xor
sub
xchg
in
lock
aad
in
adc
dec
jl
xlat
dec
xchg
mov
gs
cmc
int
out
mov
aaa
add
jl
je
pop
jl
mov
outs
cmp
test
ret
rol
addr16
out
fcomp
mov
add
aaa
xlat
(bad)
push
and
out
es
mov
pop
loopne
or
add
test
jne
rol
nop
dec
cs
and
shl
movs
adc
clc
jmp
js
mul
sbb
mov
stos
aas
loope
push
push
sbb
loopne
xor
sti
or
cmp
adc
ins
fnsave
mov
test
jno
leave
es
movs
jnp
xor
push
adc
leave
popa
mov
xor
sub
push
mov
fist
ja
mov
pop
dec
outs
arpl
mov
add
sti
xor
inc
and
cld
add
cmps
aas
mov
stos
and
repz
mov
ins
fwait
sub
dec
call
bound
ins
mov
or
in
(bad)
dec
jno
xor
mov
push
pop
jecxz
clc
addr16
call
cmps
push
rcr
jb
push
adc
inc
pop
xor
ss
mov
popa
(bad)
mov
push
add
adc
div
or
mov
cmp
das
fiadd
pop
sbb
jl
mov
sbb
xor
cmp
push
fadd
loope
ins
or
mov
into
inc
addr16
test
pop
add
or
loope
push
fnstsw
jge
sub
sar
push
pop
fnsave
js
mov
prefetch
jge
test
ret
call
(bad)
cmp
das
pop
sbb
push
adc
mov
sahf
or
test
dec
das
lahf
ret
cmps
sub
int3
leave
ret
mov
mov
(bad)
rcr
int3
and
cli
jg
rol
or
aad
nop
addr16
adc
and
inc
lods
scas
int3
mov
jb
mov
adc
mov
add
sbb
inc
scas
fsub
jne
lods
or
mov
repz
mov
xchg
mov
pop
push
gs
cli
xchg
scas
adc
dec
mov
ja
pop
and
or
sub
jp
mov
out
sbb
fs
and
jbe
sbb
ret
fsub
push
cli
cmp
lock
icebp
adc
out
and
sub
xor
mov
jbe
inc
addr16
scas
aaa
sub
mov
js
in
jmp
loope
xor
les
stos
cli
pop
and
xor
ds
(bad)
jl
fsub
and
mov
out
mov
(bad)
pop
into
sbb
call
mov
sar
dec
add
sub
ss
adc
imul
xchg
pop
dec
dec
mov
in
mov
shrd
mov
(bad)
int
std
sbb
mov
fucom
jge
sub
pushf
enter
sysret
hlt
lods
pop
mov
xchg
pusha
jne
jno
mov
and
xor
pop
sub
add
out
sbb
movs
in
dec
jnp
inc
(bad)
sbb
push
fwait
xchg
mov
js
aam
cmp
inc
mov
stos
popa
adc
sbb
mov
ins
fimul
push
in
in
cs
fs
std
pop
mov
in
nop
xor
push
lods
sub
and
jnp
mov
std
out
std
fs
shl
sub
in
mov
ret
in
push
mov
cmp
(bad)
push
jecxz
jmp
push
jp
(bad)
std
test
cmp
fcmovb
mov
stos
dec
icebp
rol
call
ret
xor
ins
push
retf
mov
pop
xlat
popf
sahf
(bad)
push
dec
cmp
xchg
loopne
and
pop
jns
enter
sbb
test
dec
mov
add
fwait
and
mov
fist
test
scas
mov
int3
(bad)
in
(bad)
adc
mov
sub
leave
cmps
sub
test
pop
fs
cmps
adc
xchg
shr
movs
fs
fld
jne
cmp
pop
push
test
sar
jp
fisub
pop
movs
mov
imul
mov
sbb
bound
mov
adc
addr16
out
sti
adc
(bad)
and
and
out
adc
dec
(bad)
call
xchg
mov
ja
std
pop
mov
lahf
mov
sub
call
push
cld
add
jmp
imul
adc
call
dec
lock
test
out
inc
je
jecxz
push
mov
mov
test
fist
add
xor
push
scas
xchg
enter
ins
(bad)
popa
or
(bad)
mov
adc
cmc
loopne
ret
sti
test
in
popf
dec
cdq
inc
in
jmp
xchg
aaa
ret
enter
imul
movs
rol
push
add
add
mov
add
mov
inc
dec
sub
(bad)
jge
adc
xor
inc
adc
loop
scas
jns
fldpi
jmp
jl
adc
lods
call
stc
sub
xor
ds
mov
fstp
ret
(bad)
stos
dec
and
adc
jo
sbb
movs
add
call
lods
test
mov
icebp
cmps
and
adc
mov
das
jnp
sub
mov
ins
fidivr
mov
sub
adc
add
xchg
add
pop
imul
aad
mov
xor
addr16
mov
pop
dec
inc
cld
pop
or
(bad)
jae
das
clc
jmp
or
fcomp
cmp
lea
inc
and
mov
mov
mov
js
jae
(bad)
sbb
xchg
jle
cmp
ja
loop
jne
nop
in
sti
call
out
add
(bad)
loopne
xor
fld
fwait
xchg
mov
xor
jne
jg
xor
push
xchg
adc
clc
adc
adc
aad
(bad)
std
movs
ins
cmps
jns
mov
(bad)
cs
ja
leave
mov
sbb
(bad)
fs
test
cwde
xor
ss
call
iret
aam
pop
mov
mov
cmp
fldcw
fwait
xchg
mov
cmps
mov
std
sahf
adc
in
and
xchg
rcr
mov
sbb
or
mov
fmul
xchg
adc
popf
dec
pop
pop
sub
dec
jle
mov
mov
cli
out
xchg
popa
push
sub
ret
in
lea
xchg
pop
pop
ins
mov
imul
push
repz
in
outs
mov
(bad)
daa
mov
movs
cs
shl
xor
lds
jb
fadd
add
xchg
clc
jne
inc
and
push
and
cmp
cld
push
aas
lock
call
in
(bad)
retf
jnp
mov
gs
push
xor
fdiv
cmps
lds
mov
loop
pop
pusha
or
loopne
sub
sbb
dec
dec
(bad)
mov
mov
scas
jne
mov
call
cs
(bad)
scas
ins
int3
inc
ret
pop
fisubr
sub
fidivr
push
retf
mov
imul
mov
cs
or
(bad)
xchg
movs
cmp
adc
(bad)
jmp
mov
add
mov
mov
mov
and
mov
mov
sub
jns
ret
mov
cs
add
mov
pop
cmp
mov
mov
sub
inc
dec
icebp
dec
cmp
and
or
popf
das
adc
cmp
jle
aam
add
dec
sbb
cld
ret
bswap
sbb
push
ret
dec
mov
inc
outs
shl
push
imul
sbb
adc
and
pop
sub
jg
outs
fsub
adc
mov
mov
js
cmp
jae
(bad)
jmp
mov
mov
ret
jae
retf
movs
cmp
cld
rcl
(bad)
les
mov
repnz
loop
jmp
out
pop
mov
or
xor
ret
(bad)
clc
inc
cwde
mov
fmul
jne
and
(bad)
fcom
jns
pop
pop
icebp
mov
jno
cmp
std
js
stos
icebp
movs
xor
les
jae
mov
add
xor
push
test
movs
sub
in
add
push
aam
mov
ds
dec
add
icebp
repz
add
retf
push
xchg
jns
ins
pop
pop
lock
jmp
inc
fstp
dec
xlat
test
add
jp
cmps
rcl
xchg
std
dec
pushf
out
cwde
adc
xor
data16
xor
push
xor
out
retf
arpl
jp
int
mov
adc
xchg
es
xchg
shl
rol
or
mov
adc
pop
xchg
fistp
mov
bswap
push
fsub
mov
mov
rcl
mov
mov
mov
fild
xchg
push
jns
icebp
cmp
jae
adc
xor
adc
fdivr
and
movs
cmps
sbb
call
adc
stc
jne
je
pop
hlt
sub
jbe
push
sahf
out
mov
adc
bound
push
cmp
and
int
cmps
in
gs
into
ret
repnz
mov
popa
clc
cmps
adc
and
sbb
or
dec
dec
fbstp
ins
or
sub
nop
das
sti
aaa
add
into
jmp
jno
je
aas
(bad)
sbb
pop
pop
or
hlt
ret
and
jmp
or
mov
mov
dec
pop
pop
add
mov
test
add
pop
mov
leave
push
call
cmp
ret
aam
cmp
fisttp
xor
sbb
or
(bad)
jecxz
push
inc
cmp
in
in
adc
and
sbb
inc
mov
test
jle
sti
ror
stos
test
loop
and
fwait
inc
std
(bad)
les
push
in
out
dec
xor
in
dec
push
xor
adc
jns
push
push
xchg
mov
mov
out
jae
jmp
sbb
sahf
cld
mov
or
cld
dec
iret
popf
and
mov
dec
int3
pushf
iret
popa
scas
inc
or
(bad)
ret
loop
dec
add
and
push
adc
dec
xor
adc
dec
jle
sbb
cmp
ss
inc
movs
dec
fidiv
jne
out
push
popa
ins
dec
lds
mov
enter
cmp
cmp
mov
scas
add
pop
mov
inc
inc
add
das
das
cmp
inc
shl
sbb
dec
mov
out
or
js
das
into
xlat
lea
aad
(bad)
shl
mov
sbb
mov
das
pop
in
js
add
cmps
in
aaa
xchg
sbb
dec
adc
test
push
popaw
in
cdq
pop
(bad)
and
enter
loop
mov
sbb
push
sahf
mov
pop
(bad)
xchg
mov
sbb
ds
xchg
cmps
xor
ss
jl
xchg
les
xchg
sbb
adc
jg
lods
ss
adc
shl
shr
in
mov
xchg
jmp
imul
mov
jmp
sub
in
jl
cmps
jle
mov
popa
arpl
mov
adc
pop
add
fmul
mov
in
jmp
mov
inc
into
xchg
test
mov
inc
push
jnp
adc
in
cmp
mov
ins
outs
sbb
jbe
daa
inc
mov
jl
xor
mov
fwait
call
dec
rcr
sub
(bad)
test
pop
leave
inc
adc
out
inc
and
ds
or
cmp
je
pop
scas
xchg
xchg
pop
call
or
into
dec
jecxz
mov
pop
fs
retf
jbe
adc
sbb
sub
int
mov
shl
dec
das
jae
das
es
mov
icebp
or
pop
ins
sbb
pop
es
pop
je
sbb
test
cwde
lds
pusha
popa
pop
iret
shl
pop
mov
int
or
stos
cmp
fimul
fs
in
jcxz
es
popf
mov
jg
inc
int3
dec
sbb
stos
out
sti
dec
retf
sbb
sbb
add
mov
pop
sbb
jl
jmp
mov
cmps
dec
jne
sbb
xor
loop
push
cmp
call
push
nop
in
dec
cmc
mov
cmp
sti
cmp
imul
mov
repnz
dec
push
movs
cmp
sbb
retf
fwait
popf
push
jg
mov
fisubr
push
test
adc
stos
aaa
dec
ja
sbb
sti
loope
stos
mov
retf
mov
add
das
inc
fnstenv
inc
mov
ds
xchg
fs
inc
dec
push
push
jnp
fdiv
movs
mov
cwde
fnsave
jmp
mov
outs
in
cld
lds
mov
sbb
jbe
call
xor
jmp
add
mov
inc
and
push
adc
int
or
(bad)
cld
lea
ds
pusha
xor
out
in
push
out
jb
push
mov
cmps
adc
pop
popf
mov
pushf
comiss
jnp
xchg
xchg
add
test
mov
jg
aas
lock
shl
movs
jnp
jne
cmp
cmc
out
mov
adc
out
ret
mov
std
mov
repz
mov
addr16
adc
(bad)
fldenv
arpl
call
xchg
mov
in
les
pop
cmc
lock
inc
retf
xor
ret
repnz
dec
inc
push
test
je
mov
push
or
cdq
idiv
repz
jne
mov
push
fs
jp
mov
call
mov
xor
ficom
push
(bad)
fist
mov
and
cs
jle
mov
inc
outs
pop
and
xchg
sbb
lahf
mov
ficom
repz
sbb
push
and
movs
mov
jb
pop
mov
sub
test
into
sbb
loope
and
lods
dec
call
loope
push
gs
test
xor
ins
test
and
lock
add
out
cmps
mov
fdivr
gs
sti
fs
fidivr
inc
retf
mov
or
jg
push
fcom
icebp
mov
jnp
out
sub
dec
jne
jne
or
mov
mov
add
jno
(bad)
repnz
or
cmp
push
dec
adc
sbb
push
pushf
mov
sbb
sar
xor
loop
sbb
js
retf
xlat
loopne
pop
cmp
inc
pop
ins
pop
and
sbb
mov
sbb
inc
push
fdivr
sub
test
pop
iret
pop
fisttp
setae
inc
or
mov
sbb
into
jns
mov
add
push
mov
pop
movs
dec
scas
test
push
pop
push
jne
and
gs
xor
push
sti
jae
les
sbb
fldcw
loop
movs
(bad)
jg
cmp
es
sub
sub
pop
add
mov
xchg
xchg
fwait
and
je
js
call
(bad)
imul
bts
in
xchg
mov
dec
imul
or
imul
jmp
sahf
and
sub
icebp
mov
les
fld
xor
mov
inc
adc
repz
and
and
fsub
(bad)
push
mov
inc
fild
pop
test
nop
sub
jmp
mov
bound
out
rcr
ficom
into
push
mov
lea
and
mov
jmp
pusha
push
mov
aad
xchg
aaa
arpl
movs
adc
mov
ret
retf
inc
mov
test
in
add
mov
dec
jb
xchg
mov
in
and
pop
mov
lds
add
fist
into
fmul
cmps
out
jnp
cmp
daa
arpl
test
inc
cmp
jbe
xchg
inc
xchg
inc
fist
jb
dec
jbe
or
scas
xchg
in
fild
iret
cmp
rcl
jmp
arpl
scas
pop
sub
fldcw
mov
add
and
xchg
sbb
je
hlt
adc
out
mov
lock
jmp
call
mov
pop
gs
(bad)
retf
ja
test
cmps
dec
push
fs
cld
pop
data16
ja
jne
ret
mov
xchg
fwait
xor
mul
adc
jg
jnp
pusha
in
xchg
mov
xor
(bad)
movs
cli
sub
adc
adc
and
ss
sbb
repnz
dec
jne
test
inc
sar
sbb
aas
push
mov
xchg
jmp
loop
mov
mov
addr16
ret
sahf
add
xor
mov
lods
dec
xor
es
cwde
lock
sub
jp
ins
fistp
xor
pop
cmp
push
xor
arpl
push
leave
rcl
mov
dec
push
call
push
cmp
or
xchg
adc
mov
jmp
pop
pop
mov
out
or
test
repnz
mov
hlt
cld
rol
xor
mov
mov
jg
dec
fs
jle
data16
and
inc
inc
lods
daa
lahf
add
rcl
dec
and
push
dec
(bad)
hlt
retf
mov
loopne
jns
cmps
int3
add
pusha
test
test
mov
pop
in
dec
std
shl
cmp
pop
loop
ins
pop
bnd
int3
scas
cwde
or
xor
movs
test
mov
lds
inc
lds
out
xlat
loop
jmp
push
mov
pop
cdq
fwait
jbe
xor
pop
lock
xor
mov
lea
out
ret
sbb
idiv
(bad)
daa
jg
xchg
out
pushf
pop
xor
push
les
push
bound
or
jnp
mov
cmp
push
movs
fistp
mov
scas
lock
dec
movs
(bad)
(bad)
sahf
pop
jmp
sbb
xor
fs
pop
cmp
loopne
cmc
das
xchg
leave
in
aas
cmps
cs
test
jae
dec
mov
cld
mov
push
xchg
ret
xchg
dec
lods
xor
push
sub
out
fld
inc
cmp
cmp
sar
div
dec
jnp
xor
push
mov
or
sbb
push
dec
inc
clc
cmp
adc
test
es
xor
inc
popa
dec
and
cs
push
jl
retf
pcmpgtb
adc
mov
ror
dec
shl
pushf
nop
int3
jo
dec
or
int3
mov
(bad)
ja
movs
outs
leave
ins
ds
jb
stos
ret
test
add
mov
jl
mov
mov
outs
cmc
jo
data16
fisubr
loopne
(bad)
sbb
add
ins
shl
mov
jp
popa
(bad)
das
int3
jge
cmp
fwait
xor
jecxz
stos
jns
jb
stos
int3
push
loope
push
xchg
(bad)
fild
popf
or
enter
int
jecxz
out
lock
out
loop
jg
adc
cmp
int
fwait
data16
fist
bound
repnz
std
or
rcr
ss
adc
or
jo
cmpxchg
(bad)
xlat
jnp
test
retf
pop
sbb
sbb
repnz
adc
xchg
lods
sahf
(bad)
fldenv
mul
nop
cmps
fdivr
mov
xchg
push
pop
icebp
xchg
sub
jnp
int
pushw
push
xor
fidiv
xchg
loopne
ret
icebp
mov
je
pop
cmc
jl
or
sub
arpl
push
ds
jl
ja
ret
mov
daa
pusha
(bad)
dec
pop
mov
cwde
push
in
add
mov
mov
xchg
inc
(bad)
ja
leave
lahf
stos
mov
jno
sbb
sub
sub
pop
mov
mov
cmps
dec
in
pushf
add
add
cdq
dec
lds
xor
mov
int3
pop
push
mov
nop
mov
sub
jg
adc
jne
leave
stos
push
es
sbb
dec
adc
jb
fldcw
cmc
mov
outs
in
mov
ins
sbb
out
bound
(bad)
xlat
(bad)
jg
lock
sub
(bad)
cmp
mov
daa
popa
add
cmp
out
mov
adc
stos
std
(bad)
call
arpl
stos
retf
mov
fs
sub
adc
adc
test
adc
add
push
addr16
(bad)
pop
or
cmp
jo
mov
pop
add
neg
sub
adc
(bad)
aad
or
cld
add
leave
adc
sahf
dec
mov
aam
out
mov
pop
mov
cld
adc
dec
fs
mov
jle
test
xor
xchg
dec
psubusb
nop
adc
add
iret
cmp
cmp
mov
mov
test
push
call
shl
stos
mov
jno
dec
(bad)
mov
push
jl
jle
outs
movs
shr
or
in
jno
mov
aad
fild
jge
call
aas
mov
shld
addr16
cmp
push
mov
aas
jg
sub
lods
pop
or
into
sub
mov
and
mov
lods
retf
aas
xchg
xor
mov
xchg
inc
pop
loopne
push
add
push
pcmpgtd
in
movs
inc
jg
mov
pop
je
stc
aas
popa
test
addr16
sub
imul
test
mov
sub
xchg
mov
(bad)
retf
icebp
adc
inc
(bad)
lods
out
into
outs
fbld
dec
jb
xor
fld
fdivr
fmulp
(bad)
sub
dec
nop
test
xlat
pop
mov
xor
icebp
pop
mov
push
movs
adc
sti
and
mov
pop
inc
cwde
mov
push
jae
cld
retf
mov
sub
or
and
jbe
int3
adc
and
out
imul
mov
sub
in
cmp
scas
mov
scas
retf
jp
inc
inc
jae
inc
movs
sahf
out
test
int3
call
daa
xor
nop
add
mov
push
mov
jmp
jp
xchg
mov
xor
(bad)
rol
pop
loope
pop
stos
adc
aaa
mov
repz
je
rcl
xor
(bad)
jg
lock
push
rcr
gs
aam
clc
test
in
jmp
add
xchg
ss
adc
add
loope
lds
xchg
push
call
push
daa
cdq
call
cmps
dec
xchg
int
iret
jno
jge
inc
ins
sbb
movs
sahf
je
ss
push
imul
add
xchg
or
in
push
adc
(bad)
xor
add
mov
rcr
lahf
adc
xor
cmp
test
lahf
fsub
xchg
inc
adc
cmp
sbb
mov
add
dec
int3
daa
dec
inc
mov
fsub
lock
pushf
jp
sub
and
into
loop
or
ffreep
and
iret
dec
js
in
js
lea
lea
and
cwde
ds
push
(bad)
int3
outs
mov
lea
mov
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
dec
ins
test
fisttp
push
loop
aaa
fadd
dec
mov
mov
jle
test
mov
stc
push
sub
mov
icebp
dec
popf
cmp
lea
imul
xor
jge
sub
sbb
jns
or
fidivr
outs
bound
push
lods
jnp
add
les
or
repz
std
mov
pop
shl
(bad)
repnz
push
jnp
aas
mov
jmp
stc
(bad)
xlat
sub
shr
inc
aas
sub
stc
ins
movs
mov
and
sub
fwait
mov
test
(bad)
stc
lahf
push
dec
cwde
fcomp
in
call
add
xchg
push
pop
or
xchg
lahf
pushf
xor
add
jnp
popf
(bad)
cwde
dec
xor
xchg
xchg
gs
xor
push
pop
movs
add
jbe
xchg
ror
pop
js
dec
jns
sbb
xchg
rcl
gs
out
mov
scas
(bad)
jmp
or
neg
cmps
xchg
push
or
adc
cmps
or
xchg
cmc
addr16
inc
nop
jecxz
gs
cmps
dec
js
sbb
clc
repnz
push
jbe
pop
push
sub
jl
push
sbb
(bad)
leave
and
xor
sar
pop
xor
mov
mov
push
ja
xor
ret
fild
jle
mov
lods
cs
jno
jmp
fidivr
jecxz
mov
scas
add
jbe
inc
ror
xchg
repz
mov
cmp
or
mul
xor
aad
rol
fxch
jmp
dec
mov
add
sbb
fld
cld
ret
cld
push
(bad)
or
inc
(bad)
mov
pop
adc
inc
xor
cs
lock
adc
adc
cmp
jl
int3
adc
adc
outs
icebp
and
es
cwde
xchg
jnp
mov
retf
add
xchg
xor
jg
mov
mov
lock
popf
(bad)
pop
mov
jae
cmp
push
outs
or
pop
sbb
popf
(bad)
jmp
xchg
add
lods
or
nop
outs
mov
sahf
inc
mov
add
outs
adc
or
das
call
mov
inc
inc
scas
push
imul
mov
out
and
retf
pop
dec
dec
fs
rcl
fistp
mov
les
xchg
adc
cmp
cmp
mov
shl
leave
loopne
inc
(bad)
iret
fsubr
ins
jbe
nop
addr16
fcmovb
pop
mov
in
inc
jns
inc
call
(bad)
in
push
jle
and
or
push
xchg
adc
mov
xchg
inc
es
fld
and
add
cs
mov
aaa
adc
sub
test
add
ja
sub
cmp
or
fist
enter
xchg
xchg
fstp
jnp
data16
cmp
xchg
inc
cli
mov
sbb
iret
bound
nop
adc
rcr
shl
outs
aas
pushf
movs
dec
inc
push
or
mov
in
retf
in
cmps
pushf
ret
mov
and
cdq
mov
in
push
in
sbb
pushf
dec
call
xchg
fcomip
jno
aam
xchg
loop
outs
hlt
and
mov
fstp
push
ds
add
push
retf
jle
sbb
(bad)
fcomp
test
fsubr
addr16
jecxz
aad
adc
cli
xchg
adc
jbe
cmovg
xor
call
mov
clc
xchg
push
xor
jl
(bad)
pop
rcr
lods
push
stos
(bad)
hlt
popa
out
stos
gs
sbb
mov
arpl
clc
test
push
inc
adc
pop
jmp
fst
mov
fs
pop
pushf
mov
retf
mov
inc
dec
cmp
imul
retf
int3
cmp
movs
mov
push
xchg
out
xchg
popa
xchg
and
cdq
push
dec
popf
jge
mov
mov
cld
push
push
inc
xor
mov
mov
dec
pop
adc
imul
or
jge
or
push
sub
call
sbb
aam
inc
push
and
dec
add
push
mov
lock
test
scas
shl
lods
dec
pop
cmps
lock
(bad)
in
addr16
into
push
repnz
mov
add
mov
scas
fistp
dec
push
lods
fst
xor
sbb
xchg
mov
js
lods
dec
sti
and
outs
cdq
std
or
fcomp
push
pop
adc
mov
mov
lods
cmp
inc
out
movs
mov
jns
mov
pusha
cmc
fidivr
popa
jbe
mov
jge
push
add
call
and
add
push
adc
mov
aam
out
repnz
adc
mov
loope
js
sbb
push
and
fcomip
shl
inc
and
inc
addr16
cmp
ins
daa
add
repz
in
xor
packuswb
scas
ins
in
jp
jbe
out
sahf
add
pushf
xchg
retf
into
xor
mov
jp
cmp
dec
mov
mov
(bad)
xor
mov
lods
popf
mov
mov
ins
sbb
inc
int
push
push
push
or
mov
in
pop
sar
test
jne
add
jl
jmp
jbe
outs
je
sbb
scas
push
push
push
xor
jne
das
(bad)
sbb
xlat
cmp
xor
das
jge
pop
rcl
sti
sbb
neg
push
jp
fisub
push
out
push
enter
and
inc
cld
stos
fmul
(bad)
lods
push
pop
loopne
push
xchg
xchg
sub
in
fs
jns
fidiv
shl
jmp
dec
pop
xchg
repnz
sub
adc
stos
cmc
(bad)
fcom
dec
fiadd
inc
add
ret
out
or
mov
mov
pop
ins
pop
sbb
inc
inc
sbb
scas
adc
adc
push
mov
rcl
sar
call
cmp
cs
adc
cmp
pop
stos
jmp
stos
xor
xchg
in
add
mov
es
push
mov
lods
xor
sub
mov
adc
mov
sahf
lods
or
push
test
outs
jns
push
fbld
sbb
xor
dec
adc
pushf
inc
push
or
out
sar
js
pop
mov
jp
xor
cmp
mov
pop
add
dec
jb
fs
and
mov
cld
mov
or
(bad)
rcl
mov
pusha
sub
adc
mov
xchg
test
test
sbb
das
mov
push
loope
ds
xor
mov
test
jno
popa
stc
add
mov
hlt
scas
nop
cmps
jbe
mov
pop
mov
pop
jb
popa
inc
pop
add
push
and
jae
lock
add
cmps
pop
xchg
xor
in
mov
neg
arpl
jnp
sbb
cmps
(bad)
test
out
fcom
into
push
xchg
sar
dec
dec
adc
(bad)
jmp
adc
ins
or
ror
loope
xchg
mov
movs
popf
pop
push
enter
repz
test
xor
(bad)
test
das
or
int
and
cmp
shr
sub
sti
push
dec
pop
scas
and
adc
jmp
sbb
sub
in
bound
fld
lds
test
test
sbb
lahf
mov
shr
aad
xor
sub
rcr
bound
mov
test
popf
jmp
cmp
lods
in
repnz
fistp
mov
or
popf
in
sub
enter
mov
das
mov
add
jmp
dec
jbe
or
pusha
int3
pop
cld
xor
pop
ja
dec
mov
fstp
push
test
mov
stos
or
cs
out
sub
jl
movs
fdiv
adc
mov
jmp
jae
js
cmps
mov
push
movs
bnd
imul
iret
(bad)
jmp
sub
push
es
loope
dec
das
vmulss
sub
mov
dec
fcomp
mov
(bad)
and
push
mov
adc
in
jnp
fwait
pop
outs
inc
out
jle
fist
mov
lds
cwde
jecxz
or
int3
jnp
cmp
cdq
or
pop
sbb
ret
dec
test
or
test
mov
ins
(bad)
test
add
bound
pop
lock
adc
mov
cmp
or
int3
jp
sar
xlat
push
in
popa
adc
or
movs
mov
out
nop
jnp
mov
xlat
cmp
(bad)
xor
add
and
in
jmp
shl
(bad)
repz
pop
and
enter
inc
mov
pop
ficom
ret
mov
mov
pop
adc
or
popa
push
in
mov
neg
or
add
shr
push
stc
add
dec
int
pop
sar
je
dec
inc
inc
daa
mov
clc
jg
xor
and
inc
mov
cmc
xor
add
arpl
jns
aam
ds
jge
xor
out
pop
add
lods
jmp
in
and
and
xchg
sahf
cmps
jecxz
dec
clc
dec
pop
or
out
scas
xchg
xor
aam
call
leave
ficom
movs
int
les
mov
int3
(bad)
cmc
inc
pop
cmc
adc
je
sahf
pop
cs
aad
out
clc
xor
push
dec
repnz
test
jne
or
test
xlat
not
pop
int
scas
ins
popa
out
jns
(bad)
cmp
mov
mov
sub
es
ds
std
jle
pop
pop
xchg
push
lock
jb
mov
and
(bad)
fs
cwde
inc
cli
push
jo
and
mov
cmps
sbb
xchg
cmp
lods
je
(bad)
xor
sub
cs
addr16
in
mov
ins
or
je
xchg
lea
fcmovb
mov
xchg
jp
repnz
pop
mov
daa
add
jno
inc
push
dec
mov
and
fnsave
push
cmps
ret
inc
ret
jae
or
sub
pop
sar
push
call
out
push
lea
test
xchg
loop
cmp
fs
xchg
hlt
jecxz
rcl
sbb
aam
mov
mov
adc
and
mov
(bad)
pop
or
sub
sub
int
dec
add
out
addr16
aaa
aam
repz
push
sub
mov
jmp
lods
aaa
test
dec
xchg
test
out
sbb
and
and
fisttp
in
mov
mov
inc
dec
xor
cmp
and
mov
mov
mov
(bad)
xor
mov
or
loop
xor
(bad)
into
add
sbb
dec
mov
push
mov
mov
hlt
xchg
mov
cmp
stos
dec
fnstcw
dec
imul
test
in
jb
and
jmp
(bad)
loope
sub
jne
call
add
dec
test
es
jge
push
cs
xchg
cmps
push
js
mov
stc
pop
mov
jl
mov
mov
or
cmp
(bad)
fidiv
jb
loopne
inc
push
mov
clc
loop
push
out
fcom
(bad)
xor
jbe
adc
ins
scas
push
sbb
adc
xchg
add
fcomp
dec
jecxz
ret
mov
or
pop
cmp
icebp
(bad)
mov
ret
nop
in
lahf
hlt
push
mov
adc
push
(bad)
jns
mov
adc
xchg
mov
mov
mov
inc
inc
movs
shl
adc
dec
adc
jnp
push
out
sti
aaa
inc
lds
push
aad
ret
test
sub
xor
nop
pop
inc
in
(bad)
(bad)
mov
push
movs
mov
repz
dec
in
fs
add
mov
jb
test
cdq
ins
loope
je
push
mov
stos
cmps
pop
fldenv
mov
in
popa
out
mov
fmulp
cdq
cmps
cs
mov
dec
adc
pushf
call
dec
aad
mov
dec
scas
outs
sub
xor
ror
sub
xor
outs
ins
add
mov
outs
mov
sbb
jae
leave
ret
lds
pop
mov
into
ret
ins
push
mov
xor
jge
sbb
pop
in
sti
xchg
and
test
ret
call
mov
mov
inc
xchg
ins
jge
adc
xchg
scas
or
or
fild
lods
and
ret
shl
aad
int3
add
(bad)
and
aad
dec
fsubr
mov
xchg
retf
sbb
ret
test
mov
add
jp
mov
push
mov
xor
ss
add
push
cdq
aam
call
hlt
inc
push
pop
push
pop
fs
push
cmp
jbe
lahf
push
xchg
push
outs
or
imul
adc
loope
ret
std
rol
arpl
sahf
sbb
cmp
outs
fild
cmps
mov
ja
fst
cmp
pop
push
test
dec
movs
dec
adc
or
fs
xor
add
adc
imul
(bad)
arpl
mov
inc
xor
scas
cmp
dec
sar
xor
ja
dec
frstor
nop
shr
cwde
aas
adc
adc
loop
mov
pop
xlat
jmp
inc
loope
mov
dec
jb
mov
push
push
ins
loop
pop
jg
xchg
mov
retf
gs
sub
mov
xchg
fimul
das
iret
ret
loopne
pusha
jae
stos
xlat
mov
fninit
in
inc
fsub
mov
mov
mov
(bad)
mov
push
stos
pop
mov
inc
cwde
inc
xor
test
sbb
fstp
aam
add
xchg
mov
or
jne
jne
push
fidivr
mov
push
sbb
cmp
sub
dec
mov
(bad)
push
and
pop
in
and
in
mov
hlt
cmps
cmp
fmul
fcomp
stos
push
test
shr
dec
mov
repnz
push
push
xchg
mov
add
lds
inc
pop
add
in
lock
out
repz
or
dec
aad
das
mov
shr
sub
or
xchg
mov
mov
cdq
push
jbe
pop
gs
test
inc
jge
mov
adc
sub
cmps
jmp
push
jecxz
push
mov
jmp
pop
cmp
stc
in
push
sub
push
pop
dec
cmp
lods
mov
push
or
inc
stos
outs
jns
repnz
and
sbb
xor
jp
cmp
outs
mov
mov
enter
cwde
and
movs
jecxz
lods
ins
xchg
enter
mov
push
movs
cmc
add
mov
inc
cmp
cld
mov
push
mov
ds
retf
inc
repz
retf
and
dec
std
push
sti
sub
adc
cs
in
mov
jecxz
push
push
mov
leave
in
data16
mov
sub
adc
lods
or
cmp
xlat
inc
retf
sub
sbb
test
sub
and
jle
sti
push
bound
loopne
(bad)
(bad)
pop
or
mov
mov
test
sub
xchg
ret
aam
sub
mov
and
mov
(bad)
pop
mov
cmps
bound
hlt
and
lods
sbb
mov
(bad)
fdivr
jno
jbe
iret
test
(bad)
fsub
mov
fcomip
rol
stos
test
sbb
out
retf
mov
add
sahf
shl
lods
push
fucomip
je
loop
repnz
mov
dec
iret
mov
or
sbb
repnz
mov
sub
shl
xor
or
inc
push
and
aaa
pop
lahf
adc
into
shl
add
fdiv
mov
inc
jb
outs
push
sbb
outs
lods
jmp
xchg
mov
loop
aam
gs
rcr
lahf
inc
imul
and
scas
mov
repz
ret
mov
stos
ins
int3
mov
add
std
cmp
push
mov
in
push
aaa
clc
mov
mov
mov
cmp
(bad)
dec
popf
retf
cmps
mov
jge
xor
sbb
sahf
sbb
std
cmp
cmp
mov
ds
std
pop
sub
and
imul
push
jbe
and
scas
mov
cmp
std
jmp
xlat
and
into
mov
scas
add
xchg
or
nop
inc
mov
retf
pop
or
es
(bad)
push
add
inc
push
pop
or
sub
ins
jl
iret
pop
lahf
xchg
ins
ja
fld
cwde
pushf
push
mov
in
ss
xchg
and
add
xchg
rep
xchg
fdivp
je
cs
lsl
imul
pop
jmp
test
add
loopne
ret
das
xchg
and
das
outs
cdq
mov
jg
jg
jecxz
mov
jae
jnp
js
mov
dec
lods
xor
jp
js
lods
mov
pop
es
jle
push
cmps
push
arpl
cmp
jae
ja
inc
inc
push
or
mov
cmc
dec
cmp
pop
daa
xor
mov
push
mov
aam
jb
mov
and
cli
dec
test
ds
out
stc
inc
aaa
sub
push
jmp
push
imul
rcl
lock
and
xor
or
cmps
xchg
out
push
push
cmp
xchg
mov
mov
stc
xor
call
mov
loop
lahf
mov
xor
fidiv
sbb
jns
cld
xor
repnz
and
push
pop
ret
imul
aad
adc
cld
jo
out
add
xchg
sub
dec
cmc
popf
sbb
lahf
popa
jne
pop
push
lock
mov
xchg
inc
addr16
fwait
pusha
sbb
cmp
out
in
test
out
cli
loop
retf
jo
pop
jns
xchg
mov
sbb
cmc
jl
sbb
repnz
jmp
retf
into
scas
jne
sub
lds
cmp
xor
xchg
push
shl
inc
(bad)
or
xor
popf
and
pop
mov
pop
mov
jno
(bad)
xor
dec
add
add
enter
ins
pop
xor
add
dec
jmp
pop
xchg
or
enter
push
loopne
clc
push
ins
repnz
xchg
pop
dec
or
sbb
pop
fnsave
xchg
dec
push
mov
add
sub
aam
test
sbb
sbb
push
stos
mov
mov
adc
js
shl
out
xor
push
cld
and
push
inc
icebp
mov
xchg
ret
paddusb
test
repnz
stos
add
icebp
sub
cmps
icebp
add
dec
mov
mov
jmp
xchg
lds
mov
and
and
push
in
imul
fcom
loope
sub
aaa
repnz
xlat
mov
fs
xor
rcr
cdq
push
jo
int3
dec
push
mov
xchg
adc
sub
push
scas
jns
mov
push
jnp
div
jne
les
inc
in
inc
or
mov
aam
mov
ja
cmc
mov
enter
ds
xchg
dec
mov
stos
cwde
and
adc
jmp
dec
sahf
stos
fdivr
retf
cmp
dec
mov
push
loopne
sub
pop
fwait
into
stc
inc
mov
mov
xor
jae
cmps
mov
mov
movs
push
xchg
adc
or
mov
dec
div
add
sub
lea
jmp
pop
mov
loope
out
xchg
aas
shl
bnd
and
sbb
rol
sub
adc
push
xor
cdq
mov
pusha
or
mov
add
mov
xchg
sahf
xor
rcl
xlat
inc
xor
push
pushf
and
or
xchg
sub
pop
pop
mov
adc
jae
or
scas
cmp
jmp
jno
dec
sbb
mov
sbb
(bad)
fistp
fmulp
enter
nop
in
test
fdiv
cwde
sbb
mov
or
inc
loope
mov
push
jmp
or
cmp
and
and
frstor
xor
dec
clc
test
test
ror
xchg
icebp
inc
mov
das
pop
fnstcw
pop
shl
(bad)
add
shl
or
push
lods
cmp
adc
stc
cmc
mov
out
je
in
cmp
jmp
ror
xchg
add
mov
inc
aas
push
lock
xchg
(bad)
fst
xchg
add
pop
dec
in
cli
or
push
inc
sub
dec
lds
cmp
sahf
(bad)
mov
cmc
sub
add
push
push
xor
mov
pop
mov
mov
lods
retf
jecxz
stos
inc
shr
scas
sar
jb
pop
adc
xchg
imul
lods
js
sbb
cli
retf
ret
xchg
and
lea
xor
js
sbb
rcr
mov
js
inc
in
test
pop
sub
pop
ja
iret
or
cdq
pop
mov
aaa
call
jmp
inc
bound
in
xor
fcomi
xchg
ins
loopne
ins
fdivp
jb
es
sub
or
popa
cmp
ss
scas
inc
dec
dec
pop
(bad)
push
mov
xor
test
or
xchg
popa
mov
dec
inc
pop
pusha
and
pop
sbb
ss
mov
mov
or
xlat
in
scas
jns
test
pop
push
rcl
jno
ds
mov
sub
leave
or
movs
rol
int
fmul
dec
sbb
dec
mov
iret
jo
out
in
fs
xor
aaa
sub
xor
jge
outs
in
rcl
fcmovnu
mov
int3
aad
push
mov
mov
lock
cmc
iret
test
es
add
jp
add
scas
xchg
push
add
not
pop
and
stos
fs
push
lods
dec
lods
sbb
and
jle
jae
sbb
inc
cmps
adc
adc
fimul
jb
outs
outs
push
mov
mov
xor
mov
(bad)
jg
or
inc
test
cli
dec
pop
mov
jne
jecxz
add
cmps
cmp
jae
not
ins
push
inc
movs
cmp
fucomip
popf
cs
push
cwde
in
test
mov
inc
rcr
mov
xchg
cmp
movs
iret
cmp
jp
ret
jmp
fiadd
ror
add
inc
push
js
push
xchg
pop
sbb
sub
pusha
sti
xor
pop
gs
ret
shl
mov
jae
jg
fsubr
jmp
loopne
mov
sbb
cld
sbb
fisub
xor
jp
in
cli
les
push
iret
popf
lock
idiv
jb
push
int
fild
xchg
cmc
inc
clc
out
or
(bad)
adc
push
sbb
imul
out
cld
push
mov
dec
ss
adc
xor
or
inc
mov
ja
jae
pusha
mov
and
or
int
or
sbb
adc
and
mov
push
push
mov
addr16
icebp
or
cmps
push
out
jb
ret
in
adc
shr
nop
shl
and
mov
dec
xchg
nop
lock
aam
(bad)
mov
fcomp
aas
test
repz
gs
inc
cmp
fld
pop
xchg
pop
call
jno
mov
pop
(bad)
and
mov
jge
cs
xchg
sub
lods
jo
fld
or
fimul
pop
loop
or
div
mov
dec
fisttp
and
sbb
or
pop
xchg
int
(bad)
jbe
adc
mov
xor
sbb
repnz
test
cmps
push
rol
jo
adc
cwde
inc
xchg
pop
retf
push
pop
and
leave
call
adc
xchg
or
mov
cmp
mov
aad
int
(bad)
sub
lods
mov
mov
push
xchg
xor
mov
sahf
push
out
mov
inc
in
mov
rcl
ins
int3
xchg
cdq
ss
pop
imul
jge
jno
add
or
fwait
outs
mov
jne
retf
repnz
adc
jge
fmul
mov
retf
mul
aam
fcmovnu
adc
pop
add
add
leave
jns
push
jbe
das
mov
xchg
in
rol
int
ret
xor
and
repnz
lea
cmps
dec
push
lahf
loopne
loopne
cmp
js
nop
pusha
push
mov
inc
add
xor
lods
adc
push
push
jl
test
lea
dec
xchg
mov
cmp
movs
push
movs
ins
enter
sub
inc
inc
jne
or
jl
fwait
shl
xchg
call
xchg
jp
adc
xchg
push
lahf
adc
lods
ins
jno
sbb
popf
mov
mov
fst
mov
call
hlt
xchg
addr16
es
sahf
lods
cmp
jmp
add
call
adc
sub
inc
fld
pop
and
inc
inc
ret
es
ja
pop
add
(bad)
cld
mov
xor
push
push
jl
(bad)
jp
icebp
retf
jle
and
stos
mov
into
stos
outs
jle
push
rcl
(bad)
sahf
mov
fs
ret
and
xor
inc
data16
(bad)
outs
lods
cmpxchg
dec
inc
mov
repnz
push
jmp
sbb
loope
sub
dec
std
in
or
inc
mov
xor
xchg
sbb
cli
mov
jne
and
mov
int3
retf
out
das
mov
sbb
out
movs
mov
cmc
sub
rol
ins
sar
xchg
cmp
loop
pop
sbb
ds
int
fmul
retf
jg
jmp
ss
cmp
pop
mov
xchg
ret
mov
mov
call
push
inc
sbb
mov
add
clc
stc
push
ds
js
push
sbb
cmps
and
ret
ins
fs
ins
push
or
mov
pop
lea
(bad)
sbb
xchg
mov
popa
cmps
jmp
add
(bad)
mov
out
rol
bound
int3
mov
ss
test
push
pop
(bad)
bound
nop
repz
jno
pop
fwait
out
and
jecxz
xchg
dec
sub
adc
fistp
inc
inc
aam
fdivr
xchg
xor
dec
sub
or
push
sub
adc
sahf
jo
cmc
mov
pop
cmp
or
fnstsw
clc
dec
fcmove
(bad)
sbb
dec
imul
xchg
and
repnz
jmp
clc
jecxz
and
jae
dec
xchg
fild
and
out
out
movs
test
or
cwde
inc
(bad)
fucomi
sar
(bad)
push
sbb
scas
sbb
stos
cmp
add
push
scas
(bad)
retf
push
pop
ins
das
mov
push
mov
dec
(bad)
fs
arpl
or
adc
je
push
test
lods
mov
nop
push
loop
imul
add
mov
jg
push
fnstcw
outs
push
sub
jge
and
xchg
retf
pop
call
sbb
sub
xchg
popa
fsubr
fs
sub
jmp
mov
or
es
sub
or
pop
outs
cld
cli
arpl
or
daa
rol
pop
jmp
sti
fisttp
pushf
mov
jmp
jmp
push
pusha
dec
in
loopne
add
movs
sub
add
and
jb
adc
dec
push
(bad)
popf
sbb
mov
outs
xor
xchg
mov
std
out
pinsrw
movs
cmp
cmp
aad
mov
sub
lahf
outs
mov
pop
xchg
mov
fs
xlat
mov
cmps
stos
pop
leave
pop
ins
xchg
retf
push
call
out
mov
int3
aad
out
lods
mov
cmp
imul
jo
outs
mov
xchg
scas
inc
out
loope
add
shr
cmp
pop
rcr
call
fldcw
xor
jmp
jns
adc
cmps
jnp
not
sahf
int3
stos
jae
xchg
stos
mov
mov
cmp
jo
push
xor
int3
repz
shr
iret
sti
mov
dec
imul
mov
iret
outs
int3
aam
outs
stc
stc
pop
mov
cmp
dec
ss
lea
outs
fdivr
aad
adc
mov
inc
cmp
mov
lods
aaa
sbb
and
mov
popf
mov
sub
jge
push
push
aas
(bad)
in
outs
stos
push
repz
cdq
inc
bound
ror
(bad)
in
push
sub
mov
mov
pop
pop
lods
add
add
or
lock
scas
pop
sbb
mov
mov
xchg
xor
movs
pop
cs
mov
fcomp
sub
mov
cmp
icebp
pop
rol
or
dec
cmovle
fmul
leave
cdq
jnp
std
sti
repnz
xchg
int
cs
gs
pop
fst
imul
out
mov
pusha
jge
popa
(bad)
into
fstp
xor
jbe
test
repnz
dec
jno
mov
dec
mov
cmp
lahf
leave
sbb
push
jle
push
shl
jge
sbb
(bad)
repnz
mov
in
pop
mov
call
(bad)
pushf
and
push
out
fnsave
xor
mov
arpl
pop
loopne
xor
sub
outs
jecxz
mov
mov
push
adc
and
aam
pop
out
(bad)
xor
mov
xor
mov
test
xor
push
sub
xchg
fcom
sub
stos
dec
and
stos
inc
scas
hlt
cmp
outs
mov
loope
xchg
adc
add
jne
xor
cmp
shr
jmp
aaa
aas
sahf
js
push
repz
adc
shl
xor
ja
out
mov
pop
psrad
imul
jle
mov
(bad)
outs
or
in
ins
cs
xchg
sub
cmp
ficom
xchg
pop
out
sbb
xor
or
popa
or
dec
push
(bad)
sub
xor
jne
stos
out
mov
cmps
lods
rcl
mov
xlat
push
mov
mov
mov
jne
mov
mov
test
lahf
mov
popa
xchg
mov
xchg
shl
jle
outs
dec
xchg
mov
repnz
inc
jg
test
mov
mov
dec
push
lods
mov
in
sbb
cmp
daa
xchg
test
les
dec
clc
lock
or
mov
dec
popf
rol
aam
jmp
jns
fadd
push
mov
repz
imul
loopne
cmp
adc
loope
ret
push
ret
out
ret
add
cmps
ror
int
sar
rcl
nop
aam
mov
mov
hlt
jno
and
jle
xor
jbe
(bad)
scas
jne
test
inc
fist
hlt
lock
jno
sbb
not
ffreep
in
push
retf
outs
shl
or
ja
(bad)
mov
mov
in
adc
ret
jle
mov
push
inc
pop
in
lahf
xchg
scas
dec
mov
dec
mov
xchg
cmc
fucom
sub
mov
scas
mov
hlt
cmp
jp
lods
mov
inc
adc
mov
xchg
xor
bound
mov
or
mov
das
fnstsw
les
cmps
sbb
mov
stos
pushf
fsubr
jg
fstp
inc
retf
mov
lods
mov
rcl
jmp
outs
xor
(bad)
dec
or
push
add
xchg
mov
and
mov
out
push
fst
xchg
arpl
sahf
inc
ret
sub
ins
xchg
mov
push
mov
mov
enter
sub
add
fs
outs
test
dec
dec
int
bound
rol
cmp
(bad)
push
push
xor
ds
pop
cmps
xor
inc
retf
ins
ss
call
jg
xchg
xor
shr
outs
pop
shl
jp
jbe
jmp
mov
jge
and
dec
push
enter
mov
xor
lods
stos
(bad)
push
mov
test
in
or
push
or
movs
data16
fmulp
xchg
mov
add
or
ficomp
stos
daa
cmp
sub
cmp
std
jno
scas
sbb
ror
or
fsubr
nop
es
or
xchg
scas
pushf
or
in
lods
pop
adc
imul
test
jge
adc
cmps
cmpxchg
(bad)
cmp
jp
hlt
cmp
int3
loop
mov
and
sahf
test
in
xor
xchg
es
sahf
push
push
(bad)
jp
dec
or
jle
inc
sar
fcomp
sahf
gs
add
nop
pop
(bad)
aam
(bad)
sub
pop
das
mov
popf
repnz
out
dec
mov
dec
xor
jle
sub
lods
cmp
sbb
scas
mov
mov
(bad)
lods
add
mov
jmp
test
out
cmps
stc
sbb
pushf
lods
jne
mov
sub
test
imul
call
inc
fnstenv
jb
push
cmps
(bad)
loopne
push
jl
icebp
jle
mov
aad
xchg
mov
mov
push
adc
retf
stos
mov
movs
cmp
cs
in
push
pop
ror
stc
shr
ret
mov
jne
test
lds
movs
xor
mov
xchg
push
cmp
fs
mov
ror
cmps
sub
cmp
adc
mov
mov
dec
imul
cmp
mov
pop
pop
mov
out
mov
ret
pop
xchg
pop
xchg
not
dec
mov
lds
mov
arpl
cmc
sub
xchg
dec
out
lods
dec
out
retf
stc
cmps
push
pop
and
push
pop
and
in
dec
push
jmp
mov
mov
fmul
mov
cmps
pop
lock
(bad)
gs
jns
rol
cmp
inc
sbb
mov
pop
xchg
stos
fs
(bad)
sbb
sbb
push
pop
push
outs
pop
loope
daa
inc
mov
dec
adc
or
popa
enter
rcr
dec
mov
sahf
jmp
pop
pop
or
adc
dec
sbb
cdq
(bad)
loopne
lods
popf
outs
inc
add
xchg
push
cmp
xor
mov
jne
adc
xchg
sbb
jmp
pop
or
xor
cmp
inc
or
hlt
or
xchg
mov
in
pop
loopne
outs
add
add
or
hlt
repz
mov
pop
jb
add
xor
add
cmp
aam
sbb
mov
dec
push
and
xchg
jae
or
cmp
das
push
pop
cmp
xchg
leave
xor
pavgw
xchg
xchg
mov
fs
pusha
add
dec
cmp
neg
jns
(bad)
(bad)
push
and
mov
sub
mov
data16
mov
icebp
je
stc
imul
mov
out
(bad)
and
ss
lods
je
stos
test
or
mov
cld
aam
imul
fs
sub
lock
and
ins
xchg
mov
sub
xchg
lds
stc
xor
test
in
shl
jnp
rcr
pop
xchg
dec
jl
(bad)
aas
or
cld
enter
fdivr
sbb
pop
lods
aas
retf
gs
mul
mov
xor
lods
ins
lahf
adc
out
mov
add
loope
jp
xchg
xchg
pop
std
in
mov
xchg
jne
imul
(bad)
mov
pop
retf
push
cli
xchg
xchg
sub
imul
mov
jae
out
les
jg
int
das
ret
xlat
push
lods
int3
sar
rcr
lahf
aas
dec
iret
pop
cmp
mov
cmp
cld
into
mov
adc
mov
mov
lods
cmp
mov
jne
aam
sbb
cld
adc
mov
sbb
xor
xchg
outs
popa
retf
aad
lods
cli
sbb
cmp
pop
cdq
inc
adc
lock
push
out
sub
mov
out
sub
aas
ins
push
push
sbb
fbld
in
fsubr
sti
fisubr
std
dec
test
std
movs
cmc
sub
hlt
jne
mov
mov
(bad)
les
jg
aaa
cli
fs
js
or
jmp
jne
ror
int
sbb
mov
add
and
cmc
fnstenv
ds
adc
lods
repnz
cmp
in
push
mov
or
test
bound
xchg
lea
add
push
call
popaw
(bad)
or
pop
fcmovnb
xor
xor
xlat
clc
aad
ins
xlat
nop
jmp
jg
mov
test
xor
mov
dec
jo
jbe
or
pop
xor
push
push
fsub
call
stos
mov
adc
hlt
daa
loop
cs
fisttp
std
loop
jb
mov
arpl
pop
not
jecxz
leave
btc
retf
aad
mov
mov
dec
movs
retf
push
loopne
xchg
xor
test
add
dec
add
je
adc
ss
add
mov
in
mov
xor
nop
push
fwait
cmp
inc
pop
lds
aas
jge
ds
les
daa
fwait
stos
imul
push
outs
popf
rcr
mov
cdq
test
mov
fisttp
(bad)
xchg
and
and
cmp
jnp
test
dec
mov
lds
jne
add
outs
mov
inc
aaa
enter
(bad)
push
pusha
ret
and
adc
fs
and
aas
sbb
stos
dec
xchg
fisub
cld
mov
push
or
xor
sbb
sub
in
push
fcom
mov
push
imul
and
inc
sub
repz
cmp
mov
push
pusha
adc
sub
push
mov
test
mov
stos
dec
inc
pushf
test
daa
pop
and
mov
sar
mov
retf
repz
aas
mov
mov
mov
mov
and
test
test
cmp
ins
mul
jge
cli
add
sub
dec
mov
mov
hlt
pop
out
pop
in
mov
dec
(bad)
push
les
push
cmp
dec
inc
sub
mov
sbb
jle
call
xchg
inc
mov
jle
xlat
xlat
in
arpl
or
push
(bad)
ss
add
sub
pop
outs
dec
into
push
xor
sti
or
add
mov
ror
cmp
jne
xor
inc
adc
dec
lods
mov
mov
pop
arpl
leave
pusha
xchg
sbb
inc
icebp
xchg
sbb
int
fprem
dec
push
sbb
retf
xchg
ret
adc
push
lods
jno
adc
xchg
dec
adc
pop
and
(bad)
pop
test
repnz
add
dec
(bad)
jmp
enter
push
in
jno
call
pop
fisub
or
es
cwde
dec
in
or
xor
icebp
pop
in
jb
xor
inc
add
retf
mov
push
bound
push
lods
cwde
jno
(bad)
jp
adc
mov
div
fild
xchg
xchg
push
adc
loope
mov
adc
imul
mov
stc
cmp
pop
push
xchg
(bad)
and
ret
add
or
xor
jg
rcr
aas
push
popf
(bad)
movs
xor
in
js
mov
adc
ss
push
and
fmul
fisub
mov
popa
ret
test
dec
cmp
cs
int3
adc
xor
out
fsub
div
dec
or
nop
imul
dec
(bad)
int3
pop
fld
movs
shr
cmps
dec
mov
test
mov
fcmovbe
in
aas
pop
leave
dec
pushf
and
xchg
cmp
imul
xor
repz
ret
mov
jmp
and
sub
ror
or
ss
icebp
push
mov
rol
inc
xchg
ror
xor
mov
fidiv
test
xchg
push
xchg
shl
lods
xchg
in
jl
mov
sbb
cs
xchg
and
stos
sub
mov
jnp
gs
or
jnp
push
xor
inc
pop
add
scas
ins
call
sub
add
mov
in
nop
cmp
xchg
xchg
out
inc
mul
ret
xor
and
lock
mov
loop
in
and
das
mov
fld
push
dec
push
xlat
pop
fwait
shl
sbb
dec
popa
imul
add
fild
js
out
mov
fcmovb
mov
cwde
add
fiadd
jns
js
mov
sub
mov
xlat
data16
jmp
sub
push
mov
outs
cmp
int3
movs
clc
ds
cmc
adc
nop
xor
sbb
ficomp
pushf
pop
and
test
sbb
std
stos
scas
inc
and
fisubr
call
ja
int
add
push
(bad)
and
xor
les
enter
mov
ss
retf
(bad)
sti
cwde
dec
push
imul
pop
xchg
shr
loop
shl
sbb
sub
sbb
(bad)
out
mov
in
mov
sti
out
mov
push
cmp
out
xor
push
iret
push
dec
cli
jne
mov
pop
inc
cld
test
jmp
out
push
dec
lahf
add
js
lea
mov
jmp
sysret
xchg
cmp
outs
mov
fwait
fs
loopne
pop
jae
xlat
add
adc
push
or
xchg
pop
mov
scas
add
and
js
and
mov
test
xor
fnstenv
call
mov
inc
arpl
adc
add
pushf
or
mov
cmc
ja
push
daa
sbb
xchg
mov
(bad)
ror
mov
jg
sbb
dec
jno
sbb
cmps
add
sub
sbb
mov
xor
xchg
or
mov
jg
push
sub
dec
ret
push
repz
popa
fild
xlat
push
adc
imul
or
ret
rcl
sti
jne
mov
adc
(bad)
push
sti
xor
ret
inc
loope
mov
dec
sbb
cmc
and
sbb
aad
mov
inc
and
push
jne
pop
mov
mov
xor
imul
push
aaa
call
jnp
fild
ja
mov
pushf
or
hlt
imul
fadd
out
lods
sub
(bad)
clc
rcl
inc
sbb
retf
in
outs
bound
aad
sar
mov
cmp
mov
add
mov
add
jg
and
sub
inc
nop
nop
ds
js
xchg
sbb
fild
pop
adc
xor
inc
jle
pushf
mov
retf
mov
sub
dec
xchg
je
push
mov
mov
inc
sub
cdq
das
push
repz
clc
jns
cmp
xor
push
or
fistp
mov
cmp
add
cmp
shl
adc
push
add
out
xchg
sub
pop
retf
neg
js
sub
xchg
lea
mov
cs
gs
bnd
jns
jmp
fsubrp
dec
mov
push
cmc
je
call
inc
sub
mov
sub
or
call
imul
push
mov
sub
js
sub
mov
push
push
rol
dec
mov
adc
dec
test
ja
popa
fdivr
sub
jo
dec
or
mov
les
mov
(bad)
sti
xlat
pushf
fs
xlat
fimul
ret
mov
loop
push
les
add
sar
movs
pop
jae
xchg
sub
sub
mov
or
mov
mov
mov
mov
add
adc
mov
push
jl
daa
mov
and
adc
push
das
dec
mov
(bad)
push
xchg
xchg
out
stos
dec
mov
inc
mov
push
out
or
stos
iret
jle
or
push
rol
or
arpl
stos
movs
xchg
ins
aaa
mov
icebp
xor
outs
fcom
cs
xor
addr16
in
and
jns
into
and
or
loope
or
call
js
loope
mov
cmps
popa
pop
scas
les
out
xor
inc
bound
adc
je
test
add
mov
jae
jne
push
into
and
or
pop
adc
loop
mov
cmc
int
sbb
cs
and
inc
pop
xchg
sahf
xchg
adc
cmp
repnz
jbe
std
and
arpl
(bad)
or
push
(bad)
ss
and
dec
or
shr
mov
stos
adc
cmp
sub
mov
pop
lods
fwait
stos
jmp
xor
cmps
mov
popa
movs
and
sub
jecxz
pop
(bad)
mov
ds
or
dec
dec
dec
(bad)
repz
mov
inc
enter
lea
in
cmp
outs
pop
cmp
jne
outs
neg
mov
adc
push
int3
ret
aaa
pop
push
lds
sahf
add
mov
movs
call
dec
and
cli
xlat
dec
stos
fstp
aaa
fcmovnb
not
mov
xor
in
cld
fisub
and
bound
push
inc
repz
fnstenv
add
cdq
inc
fild
pop
cmc
lods
adc
arpl
dec
adc
in
loope
push
idiv
in
lock
push
push
jecxz
add
push
lea
mov
xor
rol
cmp
outs
sbb
test
imul
push
add
push
xchg
cmp
cmp
(bad)
mul
cdq
pop
inc
ret
pop
imul
jne
jl
(bad)
jmp
pop
xlat
pushf
jns
(bad)
popf
movs
adc
inc
inc
arpl
push
stc
jl
jp
push
test
aad
pop
pop
sub
mov
xchg
fiadd
cmp
dec
add
ja
iret
xchg
mov
jg
out
xor
sub
mov
test
pop
push
das
add
pop
(bad)
jns
push
mov
(bad)
or
ror
add
and
xor
mov
rcr
mov
scas
fidivr
sahf
dec
pop
popf
in
jb
dec
popa
mov
push
push
mov
ins
cmp
push
sub
aad
jecxz
add
pop
aad
add
fs
in
or
movs
cmp
scas
mov
es
sub
push
or
(bad)
xor
aas
shr
add
sysret
xchg
jle
cli
add
lods
xchg
je
sbb
ficomp
adc
dec
pop
aaa
ja
out
xchg
loopne
mov
jnp
and
and
sbb
mov
ds
sbb
push
and
push
xchg
jge
dec
bound
xchg
push
adc
ret
inc
retf
sbb
add
and
enter
cmp
xchg
and
jne
and
jo
das
call
enter
xor
pop
pop
sub
push
fdivp
(bad)
js
out
pop
lea
movs
cmp
jo
movs
jbe
xor
fnstcw
jbe
cmp
sub
in
ficomp
int3
sub
fwait
add
push
push
jmp
cmps
pop
and
cli
xchg
pushf
xchg
jnp
out
cmps
loopne
dec
xor
or
cdq
cmp
dec
sub
out
cmps
or
stos
cdq
aad
clc
rcr
(bad)
enter
xor
sub
loop
fiadd
sti
pop
(bad)
dec
adc
je
fisub
lods
mov
sbb
xchg
adc
retf
sub
jecxz
pop
fisubr
stc
inc
add
das
inc
lds
(bad)
jmp
and
sbb
out
or
das
mov
cmps
ja
xlat
or
ja
(bad)
mov
int
push
jb
ror
or
sbb
jae
jnp
pop
in
dec
cmp
rcl
dec
test
loop
outs
ss
stos
add
jmp
xor
cmp
sub
and
push
jno
pushf
(bad)
xor
adc
xchg
dec
sub
ror
test
and
xchg
and
mov
clc
cld
jle
ins
adc
cmp
movs
test
outs
xchg
scas
call
push
ss
cmps
mov
je
sbb
cld
arpl
mov
(bad)
imul
xchg
js
cmp
daa
mov
pop
push
pushf
inc
jnp
push
pop
in
push
xchg
sbb
mov
fwait
cmp
test
push
sbb
sub
(bad)
jns
sbb
(bad)
adc
pop
jnp
or
pop
dec
cld
xor
mov
pop
ins
test
div
push
push
inc
mov
pop
lea
ret
push
int3
data16
cwde
and
es
mov
movs
inc
stc
cmp
jne
or
push
lods
out
repz
(bad)
bound
and
sub
add
dec
sub
adc
enter
pop
cmp
ds
dec
cmp
mov
jg
std
in
pop
and
lock
mov
data16
test
pushfw
(bad)
cmp
iret
enter
add
mov
mov
inc
pop
jg
push
das
cwde
(bad)
cmp
mov
mov
cmp
div
adc
test
jle
neg
sbb
or
adc
jl
jle
(bad)
mov
add
jge
push
cmp
popf
loop
mov
mov
add
cmp
jmp
xchg
sar
fidivr
call
jmp
fwait
jmp
scas
dec
jge
daa
fisttp
push
sub
mov
xlat
mov
push
sub
jae
fnstenv
xor
add
jbe
cdq
stos
rcl
push
int
push
aaa
mov
add
adc
adc
es
sub
shl
pusha
jnp
sbb
or
in
pop
and
daa
out
fwait
leave
add
movs
dec
cmp
or
ins
leave
jmp
xchg
cli
aam
std
sub
or
fwait
inc
mov
adc
pop
jmp
call
(bad)
push
mov
shr
inc
pop
cmp
mov
jp
test
push
push
test
cmc
js
clc
dec
jmp
cmp
arpl
jmp
dec
retf
and
push
shl
shl
inc
inc
cmps
data16
arpl
add
fidivr
xchg
push
xor
and
leave
sbb
pop
sahf
ret
xor
sub
mov
les
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
jne
iret
fimul
dec
xor
rol
nop
push
adc
movs
aaa
inc
js
push
pop
leave
out
xlat
xchg
je
jge
push
xor
std
inc
shl
cdq
xchg
add
(bad)
pop
push
mov
pop
(bad)
lods
push
pop
inc
out
pop
cmp
xor
or
repz
cmps
jg
hlt
or
dec
pop
sbb
pushf
or
ja
(bad)
imul
adc
fcom
add
jmp
sbb
push
xlat
xchg
out
pop
nop
lea
jne
jnp
cmc
std
imul
add
cmp
push
xchg
inc
xlat
pop
leave
push
inc
call
cmp
shl
cmp
inc
scas
dec
dec
je
xor
xchg
les
xor
jge
inc
les
arpl
sahf
or
jne
sbb
dec
std
and
xlat
cdq
mov
pop
cmps
pop
call
out
pop
lea
inc
daa
in
xchg
xor
mov
mov
sahf
imul
cmp
mov
dec
icebp
add
retf
popa
dec
dec
cmp
jbe
pop
push
sub
add
rcr
shl
cmp
out
add
mov
sbb
or
addr16
push
add
ins
xor
xor
(bad)
adc
push
and
div
cmps
lea
inc
push
pop
int
sbb
pop
cmps
loopne
movs
jecxz
pop
fidivr
xor
clc
out
mov
into
cmc
cdq
cli
cmp
pop
xchg
aam
xchg
sbb
mov
push
xchg
leave
js
xchg
aam
outs
adc
sub
inc
loope
rcr
jmp
fwait
sub
loopne
push
mov
push
mov
(bad)
retf
cmps
pop
ins
pop
mov
mov
mov
mov
loopne
scas
mov
test
imul
inc
ss
mov
jle
nop
mov
jp
push
sub
jo
push
iret
mov
iret
imul
popf
fidiv
test
ret
mov
pop
cmp
add
daa
in
test
xchg
(bad)
xlat
clc
(bad)
fisttp
mov
movs
imul
nop
cmp
ror
cmp
lods
popf
nop
aam
les
mov
dec
add
jnp
dec
pop
mov
xor
aam
nop
push
sbb
xor
out
pop
add
inc
stos
xlat
aaa
add
call
adc
nop
mov
in
outs
aam
push
test
fwait
adc
jmp
lea
ss
in
cmp
cld
repnz
adc
fnstenv
pop
cmp
lock
rol
inc
ficom
sbb
js
mov
xor
paddusw
fistp
das
cmp
sub
js
mov
jmp
test
cmps
jns
push
jmp
inc
jns
push
imul
and
cmp
and
leave
add
adc
std
mov
mov
mov
into
mov
and
push
mov
mov
pop
inc
sub
shl
sub
sbb
or
xor
into
sub
mov
cmp
std
sahf
add
js
xor
cwde
rcr
hlt
pop
inc
imul
inc
call
and
ret
rol
mov
(bad)
ja
push
fwait
sahf
mov
sbb
arpl
sub
adc
pushaw
retf
icebp
pop
repnz
sub
mov
mov
aam
fucom
mov
test
mov
(bad)
test
stos
xchg
lods
es
call
cmp
adc
mov
jns
cmp
and
rcl
pop
dec
aaa
bound
mov
pop
popa
in
daa
and
popf
neg
ret
fsubr
fchs
or
cmps
test
push
stc
retf
pop
jno
aas
aas
addr16
jae
cmp
xor
adc
sbb
cdq
inc
test
sbb
das
retf
push
imul
test
sahf
jo
ret
jne
fsub
cmps
mov
mov
test
mov
(bad)
(bad)
fiadd
std
enter
outs
mov
test
mov
jne
test
xor
sub
cmc
dec
mov
push
mov
xor
push
sahf
retf
gs
sbb
lods
jge
(bad)
or
and
dec
lahf
outs
ret
or
stc
ins
int
cmps
and
push
test
push
pop
movs
jp
jg
int
js
or
xchg
mov
jnp
aad
cmps
popf
gs
(bad)
pop
in
add
mov
aam
push
fist
fidiv
out
fs
adc
inc
adc
pop
ja
pop
jo
std
xchg
es
xchg
xchg
jbe
or
push
in
or
movs
pop
and
test
lods
adc
adc
cs
and
fwait
dec
and
add
movs
aaa
xor
push
pop
pushf
sar
es
cmp
nop
aaa
push
icebp
repz
stc
sbb
aam
sub
xor
ins
mov
addr16
xchg
jo
mov
sub
inc
sub
push
and
sub
lea
or
fnop
or
icebp
mov
jno
fimul
pop
retf
retf
mov
xor
mov
and
retf
dec
inc
shr
imul
mov
into
mov
adc
cmp
push
sbb
mov
inc
fmul
mov
out
(bad)
sub
lods
add
(bad)
in
xchg
lods
xor
or
inc
sbb
and
push
cld
stc
push
xchg
cmp
mov
jmp
pop
pop
jnp
call
pop
dec
jecxz
sete
push
cmp
add
popf
xor
cmp
lahf
pop
mov
adc
mov
mov
push
movs
stos
push
jnp
push
jns
jae
mov
mov
retf
pop
test
repnz
inc
cmp
movs
jl
popa
pop
mov
stos
(bad)
xchg
mul
data16
shr
sub
daa
pop
sbb
pop
pop
shl
inc
and
out
lods
mov
lock
(bad)
imul
add
stos
pop
repz
popf
les
aad
push
cdq
outs
cmp
(bad)
sub
sub
stos
idiv
cwde
cmps
mov
xchg
dec
out
popf
and
retf
lods
pop
dec
lods
push
hlt
inc
mov
jnp
push
lock
push
inc
(bad)
nop
ds
mov
loop
cmp
jae
push
and
xchg
xlat
xchg
mov
cmp
sbb
bound
push
mov
(bad)
or
mov
cld
clc
cmps
mov
mov
pop
ror
cmp
shr
cs
mov
shr
cmp
and
lahf
add
stos
test
inc
in
imul
popa
dec
xor
arpl
(bad)
push
or
sub
test
loop
fcom
pop
xchg
sub
inc
adc
pop
and
add
mul
mov
dec
sub
xor
inc
jns
cmp
cmps
sbb
leave
popf
outs
xchg
xor
xchg
dec
out
xchg
adc
xlat
xlat
cmp
loop
stos
mov
repnz
mov
xchg
sub
movs
das
jb
outs
rcl
xchg
mov
pop
scas
loope
shl
cmc
cdq
and
cmps
lea
loope
pop
xchg
hlt
frstor
xchg
xchg
mov
pop
gs
mov
cmp
xor
push
neg
fisubr
imul
cld
xchg
adc
shr
inc
mov
jbe
pop
rcl
enter
push
shl
aad
ja
cmp
ficom
push
aas
push
cmps
add
mov
icebp
mov
fild
adc
mov
cmp
loopne
push
(bad)
cmc
repz
stc
hlt
dec
lahf
xor
mov
pop
cmp
sbb
jmp
pop
fidivr
daa
jg
pop
sahf
jle
cmp
xchg
out
xor
xor
paddb
addr16
ins
out
pop
retf
and
push
inc
sbb
retf
mov
fld
push
mov
mov
sub
cmp
pop
mov
not
sbb
or
add
fist
sbb
push
cmps
int
in
pop
jae
enter
and
(bad)
int3
nop
int3
lock
mov
pop
loopne
nop
mov
shr
jmp
push
outs
xor
inc
stos
or
jg
or
dec
in
mov
jmp
out
sbb
sub
(bad)
cmp
push
mov
xchg
jmp
outs
xor
add
in
cmp
test
jg
adc
inc
mov
jne
cmp
mov
adc
pop
pushf
mov
dec
repz
ficom
inc
or
mov
dec
add
add
mov
mov
ja
inc
mov
and
mul
inc
cmp
push
jnp
inc
inc
pop
xchg
push
mov
dec
adc
mov
lahf
inc
pop
xchg
aas
adc
and
jecxz
sub
imul
mov
ret
mov
jo
sbb
inc
push
cs
rcl
shr
pop
add
bound
imul
or
scas
inc
scas
ror
js
sbb
lods
sbb
(bad)
fwait
mov
repnz
mov
data16
call
mov
push
jge
sub
icebp
cld
(bad)
in
mov
jecxz
div
lock
shr
mov
sbb
out
aaa
ds
inc
sub
stc
imul
loope
leave
cwde
rcl
adc
arpl
les
xchg
jecxz
aas
push
das
jb
and
sbb
push
retf
in
jg
outs
add
fwait
add
dec
and
or
div
fs
sub
cld
(bad)
(bad)
lock
(bad)
cmps
adc
inc
and
mov
sti
cmc
and
cmp
xlat
fsub
test
jge
sbb
out
adc
inc
aas
out
lock
mov
inc
push
scas
mov
rcl
xchg
(bad)
dec
pop
cmp
pop
fdivr
push
cmp
loop
cmp
repnz
dec
bound
push
sub
and
ss
inc
add
adc
mov
or
dec
jbe
pop
and
cmp
call
icebp
fisubr
or
and
scas
mul
add
and
loopne
sahf
push
nop
stos
aad
loope
adc
(bad)
cmps
scas
jnp
cmp
jbe
jp
mov
repnz
sbb
jmp
push
add
cmp
aas
mov
test
push
add
or
pusha
mov
rcr
outs
popa
xlat
jl
jle
mov
in
mov
mov
aad
fprem
xchg
imul
jge
mov
pop
jae
add
hlt
push
stc
je
add
retf
adc
hlt
lock
push
sub
mov
dec
je
ret
ss
aaa
jl
add
stos
fwait
aad
out
pusha
cs
xlat
jecxz
sub
vpmaddwd
shl
inc
push
out
mov
jmp
and
hlt
ins
adc
pop
sbb
sbb
test
adc
cmp
pop
jmp
pop
cmp
addr16
call
ja
xchg
adc
in
pop
call
pop
jl
dec
mov
fidivr
jl
ja
enter
rcr
jmp
stos
or
add
mov
jns
in
(bad)
jle
(bad)
jo
mov
lods
push
inc
or
and
aam
fcomp
bound
xor
mov
add
mov
and
xor
shl
ins
sbb
in
mov
out
dec
les
aaa
jle
das
popa
sahf
cmp
mov
add
rcl
rcl
and
inc
ins
aad
popf
pusha
jo
and
addr16
mov
pop
loope
sbb
out
fstp
sub
(bad)
repz
cmps
xchg
es
cmp
je
das
cmps
mov
add
ret
data16
pushf
cld
sbb
jb
jp
or
out
or
add
outs
pop
adc
jle
ins
jns
loopne
out
pop
inc
shl
push
pop
push
fstp
adc
xor
jno
sbb
jge
mov
shl
inc
loopne
outs
adc
xor
sar
test
outs
das
pop
in
jne
xor
scas
rol
push
loop
xor
xchg
out
lahf
cmc
movs
fldenv
leave
mov
mov
sti
jmp
call
mov
xor
or
jg
je
rol
or
outs
push
hlt
outs
pop
icebp
inc
fild
ins
and
dec
mov
adc
inc
lock
or
popa
mov
ins
cmc
xchg
xchg
mov
xchg
cmps
push
sahf
aam
or
stos
jbe
stc
arpl
adc
popa
jg
outs
xchg
in
fwait
adc
je
lods
add
outs
ja
mov
jmp
and
xor
cmp
adc
sahf
dec
test
ror
stos
jmp
test
or
xchg
imul
dec
iret
sbb
sub
ja
inc
test
push
and
and
mov
push
ret
xor
dec
mov
sbb
add
movs
les
mov
mov
test
ja
sub
xchg
xchg
jle
mov
push
stc
push
dec
je
in
inc
sub
in
or
mov
fisubr
sub
pop
aaa
jnp
mov
inc
mov
fucomi
fstp
adc
repz
pop
outs
ret
addr16
(bad)
in
stc
std
mov
cmp
test
ret
mov
(bad)
stc
les
inc
outs
sub
daa
inc
aas
rcl
popa
ja
out
leave
or
mov
jg
dec
push
cmps
and
add
(bad)
xor
or
and
icebp
push
mov
js
lods
mov
cmps
(bad)
(bad)
ins
adc
mov
inc
fisub
jae
or
clc
pop
jo
mov
jl
mov
and
xor
out
jbe
lods
xchg
dec
cmp
mov
cs
mov
lahf
jae
stos
sub
or
imul
pop
push
mov
stc
retf
xor
sub
mov
and
(bad)
pop
push
sar
inc
or
idiv
inc
ror
xlat
inc
dec
imul
(bad)
loopne
pop
fnsave
xchg
sbb
xor
pop
cmp
dec
inc
test
adc
ins
dec
hlt
inc
repnz
or
push
jle
add
cdq
pop
mov
bndstx
xchg
push
add
adc
adc
mov
inc
jae
clc
xchg
gs
mov
lahf
jns
das
push
mov
cmp
ret
sahf
and
mov
inc
xor
xchg
xchg
lods
data16
fnstenv
xor
push
and
and
outs
push
sar
xchg
jle
ss
xchg
xchg
cmc
sahf
xchg
pop
cmps
xchg
sub
out
mov
test
mov
inc
push
outs
fnstcw
lods
xor
(bad)
cmp
(bad)
icebp
xchg
jp
outs
mov
jns
xor
jnp
aas
mov
loope
in
jbe
data16
cld
jmp
dec
mov
les
fwait
arpl
adc
push
imul
(bad)
ror
and
push
inc
sub
ret
int
daa
(bad)
jne
cmp
or
test
in
push
pusha
fstp
retf
jne
(bad)
ret
das
imul
add
loope
ret
mov
and
mov
movs
ins
ret
in
in
cld
js
push
rol
xor
pop
jmp
(bad)
cmp
jmp
jg
add
(bad)
cli
cmps
call
rol
or
std
adc
int
movs
pop
mov
test
sbb
dec
scas
inc
mov
aaa
lea
xor
cld
out
aam
movs
dec
addr16
jmp
xor
and
call
mov
xor
xor
cmp
(bad)
cmp
fsubr
adc
sbb
les
popa
jno
cwde
sub
jns
das
jmp
sub
aaa
adc
xchg
add
(bad)
cmp
das
sbb
mov
repz
sahf
inc
mov
cmp
retf
xchg
sub
idiv
std
xchg
push
push
dec
hlt
cmp
push
inc
jmp
hlt
cmp
mov
xchg
enter
inc
jmp
ja
xlat
clc
sbb
call
out
scas
push
jbe
out
jmp
movs
scas
fiadd
sbb
mov
jne
hlt
mul
sub
or
dec
out
(bad)
xor
test
sbb
jne
and
cdq
jno
aad
pusha
test
cmp
jns
shl
pop
pop
xor
push
movs
inc
lock
rcl
push
int3
xchg
cmps
icebp
ds
fs
cmps
jl
jno
jo
mov
mov
dec
fs
xchg
xchg
outs
int3
xor
(bad)
fisubr
imul
lods
xor
cld
(bad)
pop
fcmove
das
icebp
sbb
mov
adc
out
jl
sbb
movs
lods
jle
int3
das
sub
adc
int3
mov
sbb
cli
add
out
mov
or
xchg
jno
pop
mov
hlt
xchg
nop
pop
repz
je
adc
pop
add
xor
jns
cmp
retf
mov
lods
test
inc
in
nop
dec
ret
cdq
push
imul
cmp
test
les
mov
jb
add
push
pop
mov
in
jecxz
(bad)
jp
inc
fdiv
dec
mul
mov
xlat
call
adc
popf
rol
movs
cmp
sbb
loope
ret
push
out
pushf
mov
popa
push
mov
xchg
out
mov
jge
sub
pop
or
test
ficomp
cmps
cli
xor
adc
pop
add
sbb
in
cdq
aaa
popf
out
dec
inc
push
sahf
sbb
and
shr
pop
int
(bad)
jge
mov
call
loopne
xchg
mov
test
push
push
test
aam
aam
cmp
shl
xor
or
add
dec
aas
mov
sbb
sub
cmps
add
hlt
call
mov
mov
int
sub
out
(bad)
test
push
cmp
idiv
adc
in
cli
push
lock
xor
ret
adc
outs
sbb
das
aas
xor
add
nop
pop
mov
xor
call
sbb
das
dec
loopne
int3
dec
push
bound
mov
cmps
push
mov
sbb
mov
xchg
fwait
sbb
cdq
out
push
out
inc
jmp
sar
push
push
mov
addr16
cmc
adc
call
mov
jno
out
fnstsw
jo
jns
sti
dec
mov
(bad)
aaa
rol
(bad)
push
popf
xor
and
cmps
aad
and
jmp
adc
cld
pop
xchg
xchg
and
pop
cmc
mov
jnp
fstp
rcl
cmp
mov
push
repz
mov
clc
push
lea
and
dec
mov
add
sbb
inc
xchg
(bad)
gs
adc
sahf
rol
aas
adc
add
jmp
call
mov
push
popa
jne
sub
repz
cmps
or
dec
fdivp
mov
add
xor
ins
(bad)
retf
cli
loopne
into
imul
or
add
inc
movs
outs
xchg
pusha
dec
pushf
pop
xchg
les
test
bound
or
mov
retf
je
cmp
xlat
jmp
test
jmp
std
hlt
jg
xchg
fild
cmp
shl
xor
or
popf
and
or
stos
mov
and
xchg
push
sub
pop
mov
fnstsw
arpl
and
mov
sahf
pop
cmp
cdq
push
cmp
cld
dec
pop
nop
enter
and
push
mov
fcom
mov
pop
ja
fcmovnbe
mov
aas
int
imul
lds
(bad)
aad
sbb
sbb
in
push
shl
sub
mov
fnstenv
into
test
cmp
sub
in
int
lea
loop
pop
pop
out
lea
xor
lods
or
adc
ds
mov
leave
loop
add
adc
imul
xlat
dec
xchg
add
imul
mov
or
(bad)
in
dec
enter
aad
push
mov
sbb
xchg
call
inc
repnz
jb
shl
and
cli
fsubr
(bad)
or
add
push
and
les
int
shl
xor
imul
pusha
mov
addr16
cli
retf
call
sbb
nop
xchg
inc
mov
mov
inc
mov
mov
pop
xor
xchg
pop
jecxz
push
ja
test
(bad)
repz
ret
sbb
lds
ss
push
mov
je
fnstenv
push
add
sbb
jnp
push
or
cmp
push
(bad)
movs
aas
mov
(bad)
adc
loop
lods
enterw
mov
sbb
jecxz
xchg
xor
inc
fwait
test
push
loopne
add
outs
popa
cmp
les
mov
inc
pop
in
in
xor
fldenv
inc
or
inc
movs
mov
pop
(bad)
cmovp
sbb
push
xchg
xor
(bad)
hlt
add
push
fadd
fadd
adc
jg
in
mov
in
mov
int3
pop
mov
(bad)
js
push
std
fimul
call
rcl
jno
sbb
shl
jo
dec
sahf
cmp
imul
sbb
call
scas
cwde
imul
lods
inc
es
mov
inc
jp
xchg
jno
xchg
or
ins
or
mov
sub
mov
cmp
sbb
mov
jp
cmp
mov
daa
adc
cdq
sar
std
outs
mov
aaa
sub
arpl
sbb
rol
enter
sahf
dec
and
push
sub
jp
xor
neg
pop
shl
mov
mov
mov
sub
mov
adc
jecxz
xor
inc
push
push
jmp
retf
xor
ins
ror
dec
dec
out
je
(bad)
jo
sahf
xchg
xor
in
clc
lock
lahf
xor
aas
aam
jns
xor
jp
js
push
shr
sbb
jl
cmp
lds
retf
and
xchg
sub
inc
iret
bound
mov
loopne
xor
gs
mov
cdq
sbb
or
mov
push
push
int3
retf
cmp
sar
mov
imul
dec
add
js
mov
push
adc
ins
js
pushf
fxch
add
in
shl
sbb
dec
mov
cmp
ror
or
enter
in
inc
clc
mov
fidivr
loop
cmp
out
ja
popa
push
loope
loope
mov
into
sbb
pop
sbb
fmul
imul
xchg
or
test
and
test
pop
and
out
mov
loope
xor
pop
into
mov
add
xor
add
xlat
add
out
pusha
out
jae
test
(bad)
mov
xor
push
or
mov
mov
cmp
mov
sbb
gs
xchg
(bad)
(bad)
mov
push
dec
mov
retf
cmp
int
cmp
push
pop
out
add
data16
ins
push
daa
jecxz
push
shl
or
call
cdq
push
cdq
jge
and
xchg
jbe
jnp
pop
mov
jne
stos
ja
aad
outs
popa
sbb
ins
jmp
in
out
arpl
mov
mov
les
fldcw
add
shl
stos
es
mov
aad
and
or
in
les
xor
cmps
cmps
cmps
iret
jae
mov
or
loope
mov
jmp
aas
lock
add
pop
and
ret
pop
push
das
xchg
or
adc
xor
mov
mov
xor
push
pushf
and
add
add
mov
adc
fcom
jbe
xchg
jmp
jmp
xchg
inc
dec
ins
add
out
call
and
inc
popf
xor
inc
lahf
inc
out
or
push
shl
mov
retf
jb
lock
test
js
call
dec
call
addr16
mov
push
test
into
mov
outs
std
cs
gs
outs
inc
outs
mov
enter
test
mov
sub
mov
sbb
ss
sub
adc
cli
jbe
mov
repz
and
and
hlt
mov
dec
clc
lahf
cmp
ins
xchg
mov
mov
push
cmc
mov
or
shr
sbb
mov
(bad)
out
fwait
and
out
into
cmp
out
inc
push
xor
push
pop
addr16
ins
xchg
pop
add
pop
dec
enter
leave
out
add
adc
jp
hlt
mov
in
push
fwait
sbb
rcr
adc
sbb
adc
fsubr
mov
or
ret
cld
test
mov
inc
je
call
(bad)
xor
aaa
mov
and
ja
and
icebp
out
(bad)
cwde
aas
mov
sub
neg
movs
mov
jns
inc
adc
retf
(bad)
ins
js
aaa
fsubr
mov
cmp
sub
es
jbe
add
sub
ins
adc
add
shr
inc
mov
xchg
sbb
pusha
mov
ss
gs
jl
sar
shl
dec
cwde
xchg
ret
(bad)
cmp
stos
popf
mov
ds
add
pop
mov
data16
jnp
arpl
(bad)
mov
mov
xchg
out
or
out
std
test
rcl
ds
and
inc
sub
mov
or
lods
mov
lods
fisub
add
mov
out
inc
daa
shr
iret
add
lahf
movs
push
cli
pushf
outs
xchg
sbb
mov
pop
add
iret
cmp
ror
sbb
adc
jb
xchg
jge
push
push
retf
les
pop
pushf
or
pop
xor
pmaxub
test
out
adc
jno
add
or
fwait
gs
inc
or
pop
and
(bad)
jmp
fdiv
ret
js
inc
sub
inc
mov
movs
pushf
pop
push
fstp
aam
xchg
dec
stos
mov
dec
adc
and
jae
and
(bad)
mov
pop
ins
test
repz
xlat
adc
adc
xor
popa
or
sbb
pextrw
xor
adc
ja
mov
xchg
les
rol
mov
(bad)
in
jae
push
xor
fnsave
mov
cmp
test
xchg
retf
sti
pop
jmp
adc
stos
push
xchg
jg
adc
sub
in
cmp
shl
out
push
(bad)
imul
add
lods
and
mov
iret
dec
int
mov
lea
fmul
call
mov
jne
jle
jmp
push
gs
mov
xor
out
adc
in
xchg
scas
adc
pop
sar
cmp
shl
ds
repnz
inc
hlt
xchg
push
cmps
stos
ins
xchg
(bad)
(bad)
mov
jl
shr
cld
adc
add
mov
clc
dec
cmps
jo
push
mov
cmp
mov
sub
out
push
push
jmp
es
retf
rol
aaa
fnstsw
push
(bad)
sub
dec
xchg
cmps
fs
in
lds
and
pop
cmp
sbb
push
in
(bad)
sti
pop
clc
movs
adc
stos
ds
cmp
scas
push
pusha
mov
ins
xchg
fadd
call
jo
outs
push
sbb
shr
jp
sub
imul
adc
cwde
xor
push
dec
adc
inc
adc
push
dec
fld
inc
sub
add
iret
mov
add
push
add
cmc
pop
call
enter
pop
fstp
xor
fwait
cmp
sub
ret
fisttp
daa
in
xlat
xchg
xchg
mov
add
mov
jle
mov
(bad)
movnti
mov
adc
neg
lods
(bad)
leave
cmp
mov
leave
mov
push
add
into
out
cli
in
sar
inc
jl
jmp
dec
sub
and
pop
clc
test
and
pop
push
aas
cwde
cld
dec
cmp
push
inc
rcr
in
cmc
aas
sbb
dec
jg
js
mov
sbb
add
aaa
sub
or
hlt
pop
jmp
arpl
dec
imul
icebp
dec
jmp
mov
ret
push
add
pop
mov
iret
inc
enter
xchg
push
mov
(bad)
cmp
fbld
dec
sbb
pop
aad
je
mov
mov
sub
or
call
adc
pop
mov
xchg
fbstp
push
cmp
adc
scas
popf
pop
stos
xor
mov
fnstsw
jno
aas
mov
in
out
jne
jbe
inc
push
jb
cmp
push
jmp
xor
jo
imul
mov
or
clc
and
stos
cmp
or
mov
mov
adc
pop
loopne
in
pop
jmp
jmp
cmp
adc
dec
(bad)
call
cs
(bad)
push
scas
mov
pop
sti
mov
push
jl
jp
sbb
and
retf
and
cmps
mov
not
das
mov
loope
mov
adc
in
repz
retf
mov
lock
aad
adc
and
fsubr
xor
mov
cmp
and
movs
xor
pop
shl
push
pop
cmp
inc
gs
bound
xor
add
jno
mov
xor
cmc
bound
neg
sbb
ret
cmp
sbb
add
mov
dec
push
xchg
dec
mul
jp
stos
call
je
jle
loope
dec
hlt
and
lds
sbb
nop
les
lods
sbb
inc
xchg
and
xchg
test
sbb
sbb
cmp
scas
popf
jge
imul
and
cmps
add
dec
std
call
imul
rol
out
cmp
lds
pop
std
movs
add
cmc
js
int3
inc
rol
(bad)
in
push
xchg
aaa
(bad)
loopne
in
cmp
sahf
(bad)
fadd
cld
add
int
mov
retf
fwait
jmp
(bad)
es
push
out
call
dec
pop
mov
retf
ja
mov
aas
fwait
icebp
in
inc
clc
vmwrite
xchg
stos
fist
mov
call
lods
xchg
rcl
std
dec
push
ins
mov
dec
jbe
jne
add
mov
jns
inc
lock
cli
(bad)
test
das
pop
pop
call
pop
push
jmp
mov
push
pop
hlt
dec
call
test
and
js
adc
dec
test
(bad)
mov
xchg
or
lahf
pop
hlt
jmp
cmp
fsubr
adc
cdq
sar
and
pop
loopne
jl
adc
sbb
out
cli
ins
pop
js
dec
dec
stos
mov
imul
out
fs
scas
fld
or
adc
push
neg
and
leave
pop
adc
ja
loop
cld
cld
stos
test
pop
aad
cmp
or
inc
mov
daa
xchg
pop
jo
les
xchg
popa
fsubp
out
jb
ret
or
sub
test
popf
add
es
int3
mov
pop
icebp
(bad)
sub
sbb
out
inc
movs
dec
inc
int3
sbb
(bad)
call
dec
sbb
lahf
mov
pop
js
push
sahf
pop
int3
push
push
cmp
pop
sar
enter
int3
sbb
arpl
and
or
pop
icebp
cmc
mov
(bad)
hlt
sar
mov
lods
dec
imul
inc
fdivr
cdq
ret
jb
pop
xchg
dec
adc
xor
mov
and
cmp
addr16
pop
daa
hlt
sti
cmp
in
jl
push
int3
and
push
sti
mov
push
daa
mov
push
call
dec
stc
mov
mov
ins
cdq
mov
ds
dec
shl
popa
fsub
push
fld
add
mov
(bad)
into
and
scas
add
adc
add
inc
shl
jle
lods
and
cmps
pop
retf
ja
aas
push
loop
test
(bad)
scas
mov
jecxz
shl
pop
push
mov
cli
mov
sub
adc
jo
jmp
pop
and
sbb
mov
das
call
cli
inc
popa
push
(bad)
cmps
fst
push
mov
mov
scas
movs
fmul
nop
dec
dec
and
push
iret
leave
inc
ja
scas
mov
jp
sbb
lea
ins
push
daa
movs
shr
dec
in
into
mov
sub
jns
movs
dec
inc
push
stos
adc
push
sub
repnz
dec
sub
in
inc
xor
out
adc
and
xchg
lock
adc
push
inc
sub
stc
and
std
arpl
out
dec
cmps
jmp
mov
mov
push
ss
jle
inc
inc
mov
aam
xchg
sbb
es
stos
movs
(bad)
cmp
rcl
adc
icebp
not
scas
clc
cdq
jle
retf
pop
ds
ins
cmp
scas
ficomp
sbb
in
lods
add
dec
jno
push
stos
shr
add
xor
mov
and
call
mov
sbb
ds
ins
xor
adc
or
mov
jmp
and
pop
in
fistp
in
aas
imul
fadd
(bad)
xchg
jg
sub
sub
imul
inc
xchg
loop
inc
adc
mov
dec
mov
fwait
add
inc
adc
dec
mov
sub
lea
clc
call
cmps
mov
in
rcr
mov
push
into
push
scas
ja
xchg
or
jp
or
ret
ds
push
aaa
jp
dec
lods
push
mov
loop
shl
movs
mov
movs
mov
fwait
hlt
and
addr16
addr16
sbb
inc
jne
or
mov
jns
sub
xor
out
faddp
xchg
hlt
test
test
or
and
mov
cmps
mov
pusha
push
ds
cmp
cmps
cmp
jp
movs
pop
mov
es
in
cdq
enter
lock
adc
push
sub
cmp
mov
fisubr
dec
dec
inc
dec
hlt
retf
dec
sub
or
in
cmps
in
ss
push
dec
xor
jmp
mov
add
or
enter
adc
mov
mov
push
inc
sbb
jl
xchg
inc
push
sahf
xor
cmp
jl
jbe
dec
cdq
loope
push
xlat
add
and
mov
test
outs
push
mov
dec
pop
scas
add
lock
add
xlat
or
sbb
mov
push
dec
loop
mov
xor
nop
xor
(bad)
call
sub
push
pusha
xchg
add
int
mov
fsub
addr16
stos
jns
js
outs
leave
xor
inc
add
out
imul
or
cmp
pop
push
dec
test
sub
sar
dec
in
imul
pop
aas
dec
jnp
fld
mov
aad
cmp
sbb
ss
mov
leave
mov
mov
adc
nop
cli
mov
fxch
je
(bad)
mov
dec
sub
popa
not
fptan
inc
shl
inc
or
dec
loope
sbb
out
in
and
jnp
cmp
fwait
mov
dec
sub
mov
js
jne
clc
mov
sbb
test
pop
and
jle
and
movs
inc
fcomip
popa
daa
xor
cld
imul
push
dec
xor
jecxz
xchg
pop
dec
adc
or
dec
mov
jns
lahf
xchg
or
out
imul
dec
into
fistp
sub
or
dec
imul
in
(bad)
and
xchg
add
jno
jb
cmps
jge
or
sar
fiadd
lea
test
inc
and
mov
and
and
repnz
retf
push
mov
xor
retf
repz
jo
dec
data16
sahf
inc
sahf
xchg
fld
inc
xor
into
mov
in
jg
in
xchg
cmp
jmp
jl
jle
xchg
mov
ins
sub
lods
mov
inc
scas
lahf
pusha
dec
cld
fcom
push
pop
cs
lock
xchg
ror
jnp
bound
dec
outs
push
adc
data16
enter
push
jnp
pushf
inc
retf
or
inc
adc
inc
mov
(bad)
ror
test
stos
cmp
outs
ror
pop
inc
pop
(bad)
sbb
mov
shl
jns
sbb
lock
rcl
adc
jo
aam
add
push
mov
push
sti
sub
lods
sbb
cmc
add
cmp
or
call
(bad)
pushf
adc
mov
sub
aad
xchg
mov
enter
mov
and
cld
daa
xchg
sub
add
aad
ins
clc
popf
jne
mov
mov
dec
sti
arpl
mov
cbw
adc
mov
std
dec
in
mov
xor
jmp
ja
xor
inc
imul
retf
push
push
enter
outs
push
inc
imul
popa
and
ss
out
xchg
popa
sbb
or
add
cld
mov
push
sub
(bad)
xchg
inc
ds
jnp
mov
call
fimul
fcomi
xchg
push
aad
adc
mov
inc
mov
sahf
inc
call
xchg
enter
ins
pop
mov
pop
(bad)
mov
cmp
addr16
icebp
retf
push
(bad)
popa
or
xchg
(bad)
neg
shl
fs
cmc
fdiv
xchg
jp
xchg
jle
std
sub
jno
imul
mov
div
jne
loop
in
push
stos
jbe
cmps
mov
jo
and
jnp
aas
in
ds
imul
fs
inc
int3
adc
and
inc
es
pop
mov
aad
pop
lock
jnp
inc
lahf
pop
pop
and
hlt
inc
popf
cmp
addr16
cmp
push
in
and
and
shr
sbb
jle
arpl
(bad)
repz
(bad)
lahf
retf
push
inc
xchg
or
mov
(bad)
push
test
(bad)
push
mov
ins
jmp
add
ficom
cmp
jnp
xor
add
pop
jmp
dec
mov
xor
push
mov
xor
pop
mov
adc
push
xchg
stos
lods
movs
mov
cmp
mov
adc
mov
cmp
pop
jo
sahf
mov
scas
mov
xor
les
xchg
(bad)
fcomp
ret
sub
xor
xor
iret
ror
lahf
push
push
or
ret
jne
scas
add
dec
adc
cld
jbe
clc
add
and
sbb
(bad)
movs
scas
aas
pop
xchg
mov
xchg
jbe
mov
mov
idiv
sbb
ror
cmp
mov
mov
(bad)
mov
stc
test
mov
mov
cmp
mov
mov
pushf
inc
push
mov
mov
mov
shr
adc
aaa
adc
mov
add
clc
sar
cmp
mov
rol
out
jae
clc
cmps
xchg
sub
cli
stos
hlt
cmp
xabort
mov
pop
loop
xor
and
jecxz
fsub
cmc
pop
push
ror
loop
or
adc
fidiv
ficomp
scas
mov
test
movs
ss
rol
test
xchg
sub
mov
paddb
ds
int
sub
test
or
xor
jne
imul
push
mov
pop
sbb
push
cmp
into
mov
cwde
lea
jns
out
or
mov
pop
mov
xchg
aas
jo
add
pop
and
mov
jl
test
xor
ficom
xchg
daa
scas
jb
sbb
sub
rcl
xchg
jmp
mov
xor
leave
pop
lock
sub
mov
pop
cmp
into
call
inc
add
pop
dec
and
lds
dec
in
aam
adc
xchg
jl
and
scas
icebp
inc
adc
jmp
mov
and
ret
pop
call
aaa
stc
pop
xor
das
js
xor
xchg
inc
xor
jge
add
outs
test
add
adc
jle
out
sub
push
sub
xchg
retf
rcpps
scas
and
and
cmc
or
fnstsw
or
jmp
pop
sub
dec
fs
and
lahf
xor
cmps
rcr
jecxz
ins
cmps
pop
push
ja
cwde
adc
sbb
xor
fidiv
ja
pusha
pop
repz
mov
fs
sbb
ja
jl
sub
inc
push
sub
out
std
xchg
mov
lods
(bad)
aaa
sub
mov
add
mov
push
adc
and
pop
ins
cs
mov
cs
push
and
mov
aas
cli
popf
jmp
into
cld
mov
aas
pop
mov
mul
and
sahf
jns
aad
mov
mov
rol
xlat
fisubr
push
arpl
push
daa
sub
pusha
out
mov
rcr
jne
xchg
jge
pop
push
ins
popa
pop
jnp
test
cmp
jmp
add
cld
sub
ins
push
pop
mov
js
lock
mov
fcmovnb
mov
loope
movs
pusha
ficom
in
cmp
jns
pop
gs
adc
mov
sub
jmp
mov
sahf
jno
xchg
arpl
dec
jae
ins
loope
mov
inc
daa
out
sub
push
cmp
xchg
push
ret
mov
jae
xlat
dec
pop
test
mul
pop
test
mov
jns
pop
in
lahf
push
fs
int
rol
jg
xchg
pusha
xor
jmp
hlt
repz
pusha
je
hlt
lock
xor
push
jmp
dec
xor
cli
test
push
fadd
and
dec
test
popf
inc
mov
jae
and
inc
inc
mov
rcr
sbb
stos
cdq
xchg
pop
je
mov
mov
push
ds
cmps
stos
sti
adc
sbb
fidivr
repnz
push
or
aas
jg
xor
enter
ja
xor
hlt
rol
cli
mov
rcl
pusha
frstor
sbb
stos
and
xor
inc
ins
mov
js
test
(bad)
out
and
dec
nop
xor
inc
push
dec
in
jo
stc
dec
call
pop
cmp
push
(bad)
jle
jbe
xlat
add
mov
mov
sbb
test
mov
adc
ret
ja
pop
jmp
in
add
xchg
in
out
mov
adc
mov
jmp
mov
mov
adc
xchg
push
inc
in
fs
mov
rol
imul
lock
das
inc
sbb
(bad)
mov
pop
or
adc
push
and
mov
jle
dec
in
inc
push
inc
dec
call
xchg
push
fs
dec
test
das
pop
outs
out
adc
add
sbb
or
movs
popa
test
xchg
dec
(bad)
sbb
ret
lods
in
jnp
sbb
pop
cmp
mov
shl
xor
jg
rcl
stos
mov
mov
dec
jge
rcr
jns
rol
fcmovnbe
fdivr
fild
std
push
push
jg
retf
outs
adc
in
(bad)
or
retf
cmc
sub
loop
mov
inc
mov
repz
sti
cmp
sbb
jno
xchg
xchg
js
pushf
jno
xor
xchg
js
dec
or
(bad)
cwde
arpl
dec
sub
mov
movs
cmp
jmp
arpl
and
bnd
sar
and
mov
lds
xchg
int
or
test
mov
pushf
cwde
pushf
sbb
mov
ret
inc
rcl
mov
mov
xchg
adc
sbb
dec
push
je
mov
jns
push
xor
cs
test
add
cmp
push
loopne
inc
push
enter
jno
dec
mov
pop
out
push
xchg
push
mov
or
sbb
popa
stos
and
popf
dec
mov
xchg
clc
mov
dec
inc
div
xchg
std
scas
fstp
or
adc
xlat
pop
pusha
cmp
test
in
jecxz
imul
les
adc
and
jg
fnstcw
inc
test
pushf
push
gs
daa
(bad)
adc
dec
push
jne
pop
gs
xchg
mov
sub
(bad)
loope
mov
dec
cmp
mov
cmps
stos
dec
test
mov
xchg
pop
inc
aas
or
sbb
cmp
pop
cmp
xor
jle
mov
shl
jmp
call
adc
and
in
es
sbb
mov
inc
add
int
push
jne
retf
aas
pop
mov
dec
movs
scas
mov
pop
test
hlt
ja
ss
rcr
cld
mov
mov
push
cmp
pop
into
or
xor
lds
addr16
pusha
cwde
xchg
jg
xchg
jns
adc
out
and
add
mov
mov
std
fidiv
push
lods
push
das
ror
aaa
sar
jl
mov
aas
retf
pop
sbb
pop
lods
(bad)
popf
jae
pop
loope
inc
push
mov
outs
jne
xor
int
fsubp
ins
push
pop
rcl
movs
mov
mov
popf
icebp
loop
in
addr16
stos
ror
cmp
into
jno
outs
and
ror
test
mov
aam
mov
adc
js
xchg
or
xchg
ror
imul
popf
fnsetpm(287
test
cld
pop
dec
ins
mov
movs
shl
cmp
xor
test
xchg
adc
mov
pop
shl
mov
jbe
xchg
jno
ss
dec
and
retf
cmp
mov
push
rcl
sub
push
addr16
lods
pop
mov
call
push
fstp
and
out
out
pop
inc
rcl
lds
cmp
and
adc
push
and
dec
or
cld
or
retf
cmp
bound
xor
pop
sbb
ds
fld
adc
xor
lods
mov
adc
mov
cmc
mov
mov
cmc
pop
inc
cs
cmps
imul
sub
shl
js
adc
push
aad
mov
jle
cli
or
xchg
aaa
add
adc
mov
loop
or
fs
aam
jle
sub
mov
xchg
sub
gs
aam
sahf
add
mov
adc
inc
sub
inc
rcr
jg
lahf
push
into
add
aam
retf
jg
call
nop
je
ins
shl
jmp
mov
js
and
mov
sbb
(bad)
fcom
in
sbb
mov
js
xchg
xchg
retf
mov
nop
das
pop
mov
pop
inc
push
jg
fs
out
(bad)
lds
xchg
iret
and
nop
repz
adc
cmp
ins
push
pop
inc
retf
pusha
mov
test
ds
jns
jns
mov
pinsrw
pop
xor
mov
test
mov
push
xchg
mov
sbb
hlt
push
dec
retf
push
push
out
inc
call
lock
pop
outs
jmp
es
repz
sub
xchg
and
(bad)
(bad)
std
cwde
iret
outs
fs
and
jb
loop
inc
or
lods
and
mov
add
mov
cs
(bad)
mov
retf
jb
sahf
call
fcom
mov
push
dec
push
ins
out
mov
fld
je
sti
mov
or
ins
ins
nop
sbb
repz
xlat
cld
ins
push
(bad)
or
movs
dec
pop
iret
mov
pop
mov
xor
jnp
jae
add
adc
jo
or
pop
and
push
shr
imul
jb
into
or
ins
push
cmps
retf
sbb
lds
sti
icebp
adc
mov
mov
dec
ss
loopne
cdq
mov
mov
pop
mov
(bad)
xor
test
leave
add
dec
jne
adc
loop
out
mov
xchg
pop
mov
daa
rcl
cld
(bad)
sbb
hlt
(bad)
mov
xchg
sbb
cld
jb
mov
lds
push
shl
push
movs
cld
(bad)
mov
xchg
jmp
(bad)
add
into
inc
sbb
add
mov
dec
(bad)
fild
(bad)
jnp
push
out
add
ins
mov
jnp
mov
pushf
cmps
mov
xor
call
sbb
call
xlat
add
ins
xor
jle
inc
xchg
rcl
or
push
ret
mov
mov
jg
mov
fnstcw
jp
pop
inc
pushf
xor
movs
ds
movs
leave
dec
pop
loopne
(bad)
cmp
adc
sub
cmc
dec
das
mov
jno
mov
hlt
push
das
dec
ins
cli
not
rol
outs
mov
mov
xchg
icebp
jno
cmps
aam
das
shr
into
and
mov
dec
or
jg
cmps
ret
mov
pop
addr16
cld
imul
jb
fdivp
test
sbb
test
fistp
push
(bad)
(bad)
sub
jb
aas
fidiv
sbb
xchg
xchg
movs
ret
fld
sbb
cmp
iret
inc
(bad)
nop
mov
dec
jg
mov
pop
dec
mov
fcmovb
push
loopne
aad
data16
iret
mov
iret
call
mov
push
mov
daa
mov
lock
jge
fidivr
mul
dec
push
jge
les
pop
jg
cmp
out
or
shl
add
pop
jbe
push
rcr
leave
adc
fs
xchg
(bad)
xlat
dec
inc
fidiv
mov
mov
ret
mov
and
sbb
jmp
mov
mov
in
mov
cmc
aas
jl
adc
sub
movs
mov
js
setp
nop
int
out
sahf
into
mov
pushf
popf
iret
xor
jp
jo
test
mov
mov
ret
pop
das
and
cmp
mov
loopne
lock
test
sub
pop
in
sbb
xor
lods
push
or
lods
lock
test
rol
dec
movs
test
in
and
jge
out
jmp
comiss
leave
add
retf
push
add
cmps
add
loope
out
dec
xchg
adc
ret
or
xor
push
xchg
call
mov
jle
add
es
shl
or
into
lea
imul
movs
test
push
pop
cmps
js
or
push
jl
sbb
popf
jge
dec
sub
jp
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
sbb
adc
dec
dec
xchg
jb
gs
stos
xchg
fnsetpm(287
mov
fnstcw
jns
push
jle
and
out
cli
sbb
pop
les
pop
jge
cmps
rcl
sub
mov
out
imul
daa
jmp
stos
dec
xor
cmc
push
hlt
sub
mov
mov
ins
dec
rcr
out
stos
lods
sbb
outs
xchg
dec
jbe
xor
bound
fs
sbb
imul
mov
inc
movs
pop
fadd
sbb
add
dec
add
ror
jmp
mov
aad
shr
(bad)
not
xchg
inc
mov
neg
dec
(bad)
dec
adc
add
sbb
mov
fld
movs
push
int
and
xor
mov
push
jge
dec
inc
pop
cmps
je
std
data16
jno
xchg
repz
out
mov
ss
cmp
movs
jle
je
adc
(bad)
sub
ror
jbe
in
retf
iret
add
pusha
xlat
scas
nop
push
shr
rcr
or
fcomp
das
xchg
ins
jo
scas
ins
or
dec
fs
inc
or
test
xor
out
ror
ret
adc
mov
or
or
or
mov
ret
push
fldenv
jp
das
(bad)
fisttp
cmp
and
sub
sbb
xor
mov
push
imul
mov
dec
aaa
pop
es
xor
ss
repnz
pop
mov
sar
(bad)
xchg
je
push
xchg
rcr
xchg
les
jmp
jb
js
sub
jmp
or
(bad)
xor
jmp
push
outs
push
push
mov
dec
jmp
int
jp
(bad)
sub
xor
movs
jmp
push
mov
xchg
hlt
and
rcr
in
and
imul
lods
jmp
sahf
jge
mov
adc
or
hlt
cdq
jmp
aas
cwde
sub
aam
repnz
xchg
ret
xor
pusha
loope
xchg
push
ret
mov
jb
cmps
push
ss
xor
pop
xchg
cmp
js
fwait
stc
sbb
sub
and
or
ret
lods
xchg
rcr
push
mov
mov
sub
jbe
arpl
mov
fild
enter
push
sbb
sbb
rcr
jl
aam
out
add
lea
xor
fsub
movs
ss
enter
jl
pop
outs
push
int
add
push
jno
mov
xchg
mov
push
fsubr
shl
add
imul
sar
add
add
fidiv
sbb
jle
rcr
movs
mov
retf
sahf
jno
or
jg
fcom
xchg
ins
(bad)
jmp
xchg
add
mov
cmc
and
(bad)
out
lods
movs
inc
in
mov
(bad)
imul
loope
push
leave
push
lods
pop
jmp
sbb
rcl
mov
aas
add
jg
mov
hlt
mov
or
shl
jns
(bad)
mov
inc
in
test
aas
(bad)
cmp
dec
jae
add
dec
sar
rcl
ficom
inc
in
loopne
stos
jmp
cwde
jno
mov
add
outs
adc
movs
fs
mov
adc
(bad)
cmp
xchg
sar
mov
mov
dec
lahf
out
mov
call
dec
mov
and
loop
cmps
repz
dec
sbb
mov
js
mov
jmp
outs
jno
jecxz
sbb
aam
xor
ret
and
xor
xor
test
push
push
stos
nop
popf
cmp
fdivr
cwde
dec
mov
mov
cmc
mov
loope
and
fmulp
sub
das
jecxz
cmp
sub
mov
pop
jmp
js
and
lods
or
jmp
sti
dec
ss
xor
add
cmp
repz
xor
retf
cmp
mov
mov
aas
adc
dec
ins
daa
retf
clc
ret
xor
xchg
or
mov
add
bswap
xchg
pop
cmp
cmp
jg
dec
fstp
xchg
inc
rol
addr16
lahf
movs
stc
(bad)
dec
pusha
adc
retf
int
shl
rcr
pushf
popf
mov
jmp
jno
ror
and
push
fild
jg
sub
jne
out
adc
mov
enter
adc
mov
xlat
jno
shr
ret
ror
mov
mov
push
sub
or
and
inc
pop
cmp
rol
(bad)
mov
scas
ins
ret
lock
xchg
bnd
fist
jne
repnz
push
nop
int3
mov
fistp
or
and
add
push
pop
push
dec
outs
loopne
clc
inc
push
daa
movs
xor
push
pop
ins
in
and
xchg
jne
jae
iret
push
test
sahf
or
jmp
pop
mov
dec
pop
add
dec
xor
loop
push
lock
pop
iret
inc
mov
push
push
mov
push
inc
test
ficomp
enter
std
shl
xchg
div
or
popf
adc
dec
cld
sub
cmp
or
imul
inc
adc
mov
sbb
fmulp
push
mov
dec
retf
and
(bad)
xchg
fistp
push
sbb
mov
add
xor
inc
out
lahf
clc
es
lahf
mov
mov
or
add
pop
retf
adc
stos
cmc
xchg
push
lahf
cmps
or
xor
cld
jae
mov
xchg
and
or
push
mov
cmp
fld
cmps
ins
mov
xchg
out
or
and
stos
pop
push
sar
outs
sub
fisubr
dec
and
lods
pop
js
(bad)
mov
mov
inc
stos
ror
push
or
mov
lds
sub
add
test
(bad)
repnz
inc
mov
outs
mov
mov
adc
push
aad
ja
shl
jne
jmp
and
sbb
inc
push
xchg
or
cmp
xor
pop
loopne
pop
mov
jge
jge
pop
xor
xor
mov
adc
hlt
push
cwde
imul
call
xor
or
jns
stos
(bad)
pop
and
push
leave
stc
push
dec
sar
mov
pushf
pop
mov
iret
cmp
sahf
push
retf
dec
addr16
pop
(bad)
movs
pop
movs
or
enter
call
sub
inc
stos
sub
(bad)
lods
sbb
cld
cmps
shl
test
xchg
sub
mov
jns
push
or
jg
sti
les
arpl
add
sub
pop
sbb
std
outs
pop
add
add
dec
lea
cs
cmp
cld
push
sbb
jbe
jmp
cmc
xor
add
push
loop
leave
jae
ja
mov
jmp
ror
outs
or
adc
xor
test
dec
dec
mov
daa
add
inc
imul
mov
inc
mov
and
popaw
(bad)
jmp
dec
dec
adc
mov
or
pop
dec
addr16
sti
jl
pop
jno
(bad)
fwait
sbb
mov
pop
out
xchg
inc
jne
fstp
(bad)
mov
and
ja
loop
sbb
imul
xor
mov
jge
sbb
shl
loope
xchg
pop
push
rcr
mov
or
xor
push
mov
sbb
mov
aam
push
stos
call
and
or
inc
rcl
movs
data16
(bad)
xchg
jnp
pop
pop
inc
jp
fucomp
dec
bound
dec
aam
pop
or
aas
outs
ja
dec
xor
fwait
and
mov
sbb
xor
outs
inc
outs
(bad)
push
add
mov
in
push
rcr
cmp
dec
iret
sbb
cmps
mov
mov
js
jle
mov
in
cdq
jmp
pop
test
nop
pop
out
outs
jmp
mov
outs
je
sub
daa
sbb
or
fistp
lods
stos
sbb
cmps
(bad)
in
jns
cli
test
stos
and
inc
sub
ficomp
pop
call
push
xchg
cmp
rep
xchg
cmp
and
outs
outs
or
dec
jne
stos
lahf
add
rcl
mov
(bad)
out
sbb
stos
(bad)
pop
pushf
stos
es
fist
jecxz
mov
push
mov
movs
popf
sub
movs
jne
shr
jecxz
cmp
daa
loop
fwait
sub
inc
ror
xor
mov
inc
push
xor
xor
das
mov
sub
into
aad
mov
daa
std
ret
xchg
mov
jo
jnp
sub
repnz
aam
ins
xor
call
out
movs
(bad)
fcmovnb
and
gs
lea
mov
pushf
mov
iret
inc
push
test
popa
lods
push
iret
mov
movs
repz
lahf
inc
int3
and
std
push
mov
rcl
scas
xor
into
ins
cli
pop
push
pushf
cs
mov
mov
pop
mov
cdq
stc
ret
mov
arpl
in
hlt
aad
sub
cmps
cwde
es
ficomp
push
dec
mov
mov
dec
sbb
pusha
jo
xchg
mov
adc
mov
vmread
or
add
pop
sbb
push
test
mov
push
adc
mov
or
(bad)
cld
push
cmp
xchg
fwait
int3
mov
inc
cmp
mov
cld
aam
pusha
cmp
cmp
ds
rep
fistp
outs
call
mov
mov
in
xlat
xor
test
mov
or
pop
dec
popf
mov
sti
adc
in
retf
mov
jmp
in
call
fwait
cmps
cld
ins
jno
jge
dec
arpl
inc
add
or
sbb
cmp
jl
inc
or
xchg
popfw
inc
dec
mov
ins
cmps
movs
mov
movs
ror
and
xor
lahf
scas
xchg
adc
inc
inc
mov
jge
xor
mov
cmps
ja
ja
(bad)
dec
xchg
pop
shl
sub
jmp
inc
or
inc
sahf
sub
mov
fstp
imul
push
adc
dec
repnz
ror
jg
mov
stos
or
cs
dec
out
cs
fsub
daa
push
scas
retf
dec
xchg
aad
push
mov
in
or
cli
xchg
in
sbb
push
fnstsw
push
jbe
cmps
jo
cmps
bound
ret
cmp
in
xchg
test
(bad)
adc
pop
cli
leave
in
pop
pop
int
rcl
jb
test
pop
mov
sbb
xlat
inc
adc
mov
aad
add
cs
pop
lahf
xchg
sub
stos
and
dec
std
int
sbb
jp
inc
sbb
popa
mov
cs
hlt
sbb
stos
out
xchg
push
push
sub
dec
mov
mov
int3
pusha
mov
jmp
mov
add
sbb
adc
jg
mov
mov
mov
mov
jnp
jmp
adc
(bad)
bound
cmc
aam
dec
cmp
push
inc
mov
or
mov
adc
or
adc
push
mov
mov
pop
into
(bad)
stc
gs
sub
fadd
int
xor
push
ror
mov
data16
mov
call
leave
adc
xlat
cmp
in
and
stc
aaa
adc
xchg
loop
push
push
fiadd
pop
clc
fdiv
icebp
daa
je
jge
dec
sub
stc
push
retf
iret
dec
inc
mov
cmp
push
sahf
jmp
stos
cmp
xchg
shl
mov
push
stos
test
in
xchg
or
pxor
dec
stc
xchg
arpl
or
sub
jne
shl
mov
fwait
imul
(bad)
int
fldenv
outs
push
push
les
adc
das
and
gs
adc
clc
dec
push
mov
enter
lods
fld
inc
scas
cli
fwait
retf
and
rol
jge
inc
mov
sub
hlt
ror
jmp
sti
push
mov
jecxz
xchg
ins
mov
push
aas
aad
mov
mov
shl
dec
and
das
cmc
add
mov
pusha
mov
div
adc
call
adc
cmp
imul
mov
cwde
out
jp
adc
mov
mov
cmp
push
sub
push
aas
jle
sbb
enter
inc
push
(bad)
cmps
push
mov
jno
(bad)
(bad)
aaa
push
ds
mov
les
and
pusha
cs
mov
and
ret
les
jo
jmp
mov
pop
sub
cmps
std
int
cmp
mov
sar
repz
mov
jne
(bad)
sbb
dec
push
jecxz
xchg
(bad)
out
mov
jmp
add
ins
not
ds
inc
call
pushf
add
sar
repnz
shl
xchg
jmp
daa
cmp
test
pop
scas
jmp
jnp
in
in
mov
adc
das
das
xchg
jb
xrelease
aas
mov
gs
loope
push
xor
ror
push
test
es
pop
leave
mov
push
jmp
cld
inc
sbb
cmp
jmp
sbb
test
fistp
pop
xchg
retf
and
(bad)
in
fs
inc
push
cmp
clc
add
imul
arpl
and
inc
sub
jecxz
jle
xchg
sbb
cli
push
sub
add
inc
test
ds
js
push
pandn
fidivr
push
push
retf
cli
fnsave
add
and
pop
imul
sbb
movs
stos
daa
mov
pop
jb
int3
mov
mov
or
inc
loopne
push
in
popa
pushf
push
outs
cwde
fidivr
inc
pop
xor
cmp
pop
fsubr
loopne
mov
hlt
test
dec
push
pop
shl
retf
push
retf
dec
add
sbb
arpl
ja
mov
popf
pavgw
add
sbb
pop
(bad)
cmp
inc
inc
cmp
call
pop
inc
xor
dec
fdivr
and
(bad)
fwait
dec
push
jg
xchg
retf
or
scas
movs
(bad)
hlt
inc
mov
cs
sbb
je
jmp
pop
stos
xor
lods
sub
adc
mov
add
cmps
mov
ins
xor
add
sbb
retf
and
in
dec
mov
mov
mov
inc
fnstcw
pop
les
sbb
ss
xor
add
shl
jmp
test
sub
out
sar
xchg
ss
or
test
cmp
sbb
push
jge
cmp
rol
aad
mov
lods
daa
xor
cdq
repz
and
xor
pusha
adc
(bad)
pop
xchg
test
sub
rcr
movs
gs
cwde
std
sbb
add
push
test
adc
jp
xchg
push
xchg
lea
push
jb
dec
inc
nop
mov
arpl
add
jnp
push
mov
and
add
adc
lea
cmp
out
mov
inc
rol
iret
sar
and
gs
xchg
sub
movs
sahf
ret
out
cmp
les
out
dec
mov
adc
add
fstp
sub
movs
ins
cli
sub
mov
dec
movs
fild
dec
mov
out
jns
enter
in
inc
dec
cmp
int
push
mov
outs
jecxz
mov
jno
call
out
and
aas
mov
and
jb
mov
push
mov
xchg
xor
push
push
loopne
or
popf
push
or
mov
or
arpl
test
sub
cmp
dec
neg
stc
pop
repnz
nop
inc
mov
adc
mov
mov
inc
out
inc
xchg
push
repnz
leave
movs
repz
push
lahf
xchg
and
(bad)
sti
xchg
push
jp
inc
add
jae
and
shr
cmp
pop
sbb
stos
dec
and
jae
lea
mov
push
add
data16
add
adc
xor
fdivr
xchg
fstp
sbb
mov
xor
lods
shl
fimul
mov
xlat
jle
iret
or
fdiv
fdivr
mov
inc
into
shr
xor
popf
adc
call
in
fwait
outs
fwait
sbb
bound
and
gs
jmp
jmp
(bad)
push
je
ds
out
inc
in
test
mov
add
pop
stos
or
retf
(bad)
cmp
(bad)
movs
sub
mov
fsub
pop
or
adc
sbb
mov
imul
scas
xor
sbb
sahf
mov
loopne
icebp
jecxz
cs
dec
ins
aaa
xor
inc
lods
repnz
cli
or
call
jne
movs
iret
dec
jle
aam
in
mov
cdq
push
aas
das
cmp
shr
mov
bound
loopne
out
inc
lods
mov
or
pop
rol
jg
push
stos
inc
out
icebp
jp
jl
push
fwait
push
loopne
lods
mov
fcom
mov
adc
stos
dec
push
or
cmps
inc
dec
mov
xlat
inc
fisttp
rcr
fidivr
mov
sub
mov
sub
jl
push
nop
icebp
mov
add
inc
dec
xchg
xchg
retf
ins
push
lds
pushf
sub
pop
xchg
and
fmul
sub
in
stos
push
mov
fs
sete
sti
and
(bad)
fdivr
test
or
aad
mov
push
mov
fs
in
dec
xchg
in
in
inc
aaa
or
leave
add
add
cmp
pop
(bad)
jo
mov
scas
push
or
xchg
mov
push
push
mov
ja
jae
fcomp
add
rol
or
out
fimul
test
adc
cmc
and
push
cmc
stc
mov
xchg
and
mov
(bad)
jg
or
dec
in
mov
mov
xchg
push
push
movs
pushf
xchg
mov
or
or
aad
sub
popaw
adc
or
ret
pop
fistp
xchg
add
or
or
push
aaa
jmp
jns
rol
jp
mov
xor
imul
jbe
inc
sub
push
lock
mov
test
test
push
cdq
adc
mov
retf
sar
icebp
jg
lahf
in
add
ins
adc
fcomi
into
xchg
adc
adc
jno
mov
loope
enter
in
or
inc
aad
push
repz
sar
hlt
or
js
xchg
arpl
out
mov
add
shr
cmp
inc
mov
or
mov
outs
mov
sub
lea
loop
mov
pop
es
or
nop
xchg
push
test
pop
rol
sti
stos
(bad)
mul
or
cmp
pushf
sbb
mov
arpl
lods
xor
addr16
fcmove
cmc
cmp
jae
sub
inc
jno
dec
adc
pop
pop
xchg
dec
pop
mov
stos
jno
push
lock
and
fsubp
lods
add
mov
xchg
int
stos
push
call
into
jl
into
into
(bad)
cwde
lods
xlat
imul
mov
fwait
aam
push
imul
xchg
dec
xor
retf
(bad)
aad
and
js
(bad)
sahf
lahf
push
pop
in
out
imul
inc
inc
push
les
jl
lahf
xor
inc
pop
or
xor
jp
sub
out
in
(bad)
pop
ds
scas
mov
jo
shl
pop
push
les
hlt
sub
mov
shl
mov
sti
ins
out
and
sub
ror
cmp
xchg
out
ins
loop
fistp
ss
xor
call
neg
inc
mov
or
mov
in
fisttp
mov
jae
dec
stos
popf
and
mov
xor
mov
jne
fs
and
adc
data16
push
inc
in
nop
popf
cmp
push
or
pop
mov
das
test
das
stos
sub
cmc
fs
cmp
mov
xor
dec
jmp
push
mov
jno
ins
cmps
mov
idiv
addr16
lock
mov
xchg
push
fstp
lock
add
xchg
mov
adc
pushf
cmp
arpl
fld
retf
xchg
inc
mul
sbb
inc
(bad)
movs
fsub
mov
ins
push
mov
mov
adc
inc
dec
jne
pop
icebp
dec
mov
int3
dec
daa
xor
icebp
cmp
cmp
scas
pop
sbb
fwait
aam
lods
fidivr
aam
lds
(bad)
sbb
into
sbb
daa
xchg
adc
add
fcmovnb
cmps
cmp
xor
rol
bound
and
imul
rcl
sub
fisttp
outs
fcomp
outs
(bad)
pushf
lahf
aad
int3
mov
inc
cs
push
iret
popa
push
xor
add
and
ret
pop
jo
stc
frstor
test
fcomp
or
iret
stos
outs
xlat
in
shl
push
dec
mov
daa
into
sbb
retf
ins
xor
xor
and
pop
ins
sbb
cmp
jbe
adc
mov
jae
int
cmps
mov
maskmovq
test
mov
std
mov
into
popa
mov
sub
loopne
lods
scas
std
add
jg
xor
out
dec
push
movs
cmp
stc
add
fstp
call
cmc
lods
movs
xor
nop
xchg
jl
into
jnp
xchg
aad
inc
mov
les
xchg
jmp
mov
cmp
inc
jge
add
inc
fistp
cmp
repnz
push
repz
out
out
pop
out
aas
(bad)
enter
adc
xchg
dec
(bad)
mov
inc
adc
sahf
inc
mov
pop
mov
daa
dec
adc
add
push
retf
sbb
add
push
mov
sbb
fs
fucomip
add
push
adc
jle
jg
adc
or
loop
imul
ins
sbb
cmps
mov
adc
and
cmps
data16
ins
mov
mov
repz
ja
sbb
inc
xchg
xchg
ficom
lea
ja
cs
jnp
or
xchg
mov
sub
scas
(bad)
std
push
pusha
or
fisub
test
outs
fild
int
xchg
push
pop
jle
fs
xchg
fcomi
mov
(bad)
and
pop
loope
add
mov
cmc
out
shl
loopne
xchg
mov
and
stc
xlat
add
lods
dec
test
in
ror
retf
mov
sar
imul
adc
push
sbb
sub
aaa
xor
cmps
out
and
test
sahf
sub
mov
cmp
add
inc
mov
or
push
add
mov
and
out
lea
ds
mov
sub
data16
pop
mov
leave
adc
cli
icebp
xchg
pop
and
popa
out
outs
das
jbe
mov
mov
mov
outs
xor
mov
sbb
call
pop
mov
mov
add
push
sub
test
test
jne
add
outs
dec
call
stc
popf
fnstcw
push
jecxz
(bad)
in
sub
push
lock
add
mov
add
dec
movs
add
adc
adc
cli
data16
pop
dec
in
mov
cmps
jl
cs
cmp
cmp
jbe
movs
out
mov
(bad)
fcomp
(bad)
imul
cdq
imul
mov
jp
add
and
mov
aam
lods
push
daa
sbb
push
or
in
jecxz
arpl
add
dec
push
test
aad
push
leave
and
jo
movs
loopne
add
test
iret
mov
xor
add
xor
xor
sahf
xor
imul
(bad)
pop
cmp
xor
aaa
xor
mov
sub
and
cs
jb
cwde
xchg
or
jl
jbe
cmp
inc
call
les
lock
stos
mov
pop
inc
out
sbb
loop
loopne
inc
cmp
ss
leave
pusha
imul
jo
call
dec
adc
jns
fsub
fcomp
loop
ja
push
sbb
jg
add
or
je
add
adc
and
(bad)
sti
pop
or
fist
mov
or
lahf
push
and
outs
loopne
jmp
inc
cs
pop
and
cwde
add
xchg
popf
retf
aad
mov
retf
lea
in
and
sub
pop
popf
fcom
(bad)
ins
inc
ja
ficomp
add
scas
fmul
mov
js
xlat
and
pop
xchg
xor
int3
je
fdivrp
mov
repnz
fdivr
jno
fcom
sub
and
fnstcw
inc
mov
dec
test
pop
fs
hlt
ss
mov
xchg
test
(bad)
int
adc
pusha
lahf
mov
mov
dec
stc
or
jg
data16
into
repz
in
loopne
cli
es
ins
jo
js
pop
call
jmp
sbb
cmc
mov
das
mov
push
ins
and
jle
movs
cli
pop
mov
push
(bad)
jg
stc
test
jp
jmp
mov
js
out
sti
add
sahf
mov
pop
fimul
repz
mov
sahf
dec
addr16
xchg
xlat
xchg
into
mov
or
sub
ret
fwait
sbb
mov
mov
and
pop
xchg
loope
push
ret
shl
call
pusha
sbb
pop
pop
adc
mov
inc
mov
mov
cmp
push
stc
shl
hlt
mov
ja
jge
mov
sete
imul
mov
popa
mov
sbb
jne
mov
sar
inc
lahf
cmp
loop
scas
sbb
jno
mov
outs
rcr
pop
sub
fdivr
pusha
mov
fcmovbe
in
cmps
push
xchg
push
cli
not
(bad)
je
iret
or
mov
adc
out
jno
adc
adc
adc
ds
or
push
dec
mov
mov
loopne
je
sbb
jbe
and
outs
jp
mov
sbb
jecxz
xor
pop
scas
dec
fnsave
adc
mov
xchg
retfw
inc
mov
das
ds
retf
dec
aam
enter
mov
ss
mov
pop
dec
cli
jmp
jmp
cmp
inc
push
pop
repz
mov
cld
and
(bad)
es
shr
adc
xor
jo
imul
dec
xchg
(bad)
aad
imul
mov
scas
xchg
jae
mov
out
out
aad
gs
in
sub
pop
call
cmp
cdq
imul
jno
leave
mov
int3
movs
fmul
imul
jo
movs
or
mov
test
data16
dec
or
add
mul
push
sub
dec
aad
ins
mov
ins
(bad)
lods
mov
sar
sbb
scas
jbe
push
sar
(bad)
fstp
sub
jne
jno
out
fstp
cdq
outs
fnstcw
fisttp
rol
add
icebp
enter
xor
ret
xchg
into
aad
cmp
cmp
fiadd
jb
mov
jmp
sbb
jl
das
loope
push
leave
stos
rol
call
mov
imul
fld
mov
mov
pusha
sub
ins
xchg
sub
mov
pop
mov
pushf
fisub
and
mov
pop
icebp
fcom
(bad)
test
mov
sti
imul
push
leave
sbb
inc
cdq
mov
pop
mov
sub
mov
fistp
add
jns
inc
mov
popf
pop
mov
mov
xor
cmp
fsubr
mov
push
jmp
jmp
retf
ja
data16
rcl
inc
and
ds
sbb
mov
cmp
sub
shl
jmp
sbb
mov
pop
in
retf
stc
cld
fdiv
xchg
jae
fs
inc
enter
pop
mov
xchg
jb
mov
inc
mov
(bad)
cmp
sbb
dec
aad
mov
mov
hlt
pop
add
sbb
push
xchg
stos
xchg
mov
jo
push
and
jb
add
xor
enter
adc
cmp
and
in
fcom
ret
pop
outs
jle
(bad)
fstp
and
das
pushf
mov
and
fmul
fs
mov
in
mov
and
xor
ins
je
jp
inc
icebp
(bad)
xor
push
dec
cmp
std
pop
mov
lods
bound
(bad)
aas
addr16
and
rol
adc
repnz
or
ins
stc
add
int
jmp
cmps
in
cmps
(bad)
(bad)
mov
push
ror
fsub
add
iret
mov
bnd
xchg
clc
jmp
add
outs
mov
les
loopne
xchg
dec
shl
mov
gs
out
fxch
mov
inc
jnp
test
les
rcr
(bad)
data16
jnp
or
(bad)
loop
jb
pop
xor
pop
add
les
sahf
dec
scas
pop
movs
(bad)
or
push
lahf
xchg
cdq
fstp
mov
inc
sbb
repnz
cmp
or
push
hlt
(bad)
jg
ret
idiv
xlat
xor
in
into
in
push
mov
or
out
(bad)
in
movs
xchg
in
ret
repz
jo
mov
pop
loopne
inc
mov
push
jnp
fsubr
sub
pop
cmp
mov
mov
je
add
pop
and
fadd
mov
push
inc
or
sub
xor
mov
push
pop
call
dec
pop
dec
mov
test
adc
mov
inc
mov
sbb
jle
or
dec
test
xchg
scas
inc
pop
loope
adc
xchg
sahf
out
xchg
or
push
les
mov
out
fild
(bad)
fldcw
or
(bad)
cmp
pop
and
dec
call
retf
xchg
popa
lahf
mov
pushf
ds
rep
sbb
pop
mov
cmps
push
cmp
pop
mov
stc
push
xlat
xor
call
pop
idiv
fisubr
inc
hlt
jge
mov
enter
sub
adc
aas
test
xchg
sti
adc
movs
adc
push
jbe
mov
xchg
jae
add
jle
mov
les
mov
adc
std
ss
fwait
test
repz
mov
fnsave
mov
loope
mov
sbb
jl
inc
mov
jmp
sbb
scas
clc
cs
and
test
mov
pop
lock
jle
inc
dec
inc
loope
dec
repz
mov
ret
sbb
jle
cld
loop
cmp
pop
adc
add
cli
into
adc
and
and
cli
out
nop
add
mov
rcl
ins
rcl
out
jo
xor
add
stos
push
push
idiv
jo
and
std
fst
lds
movs
mov
cli
icebp
pop
movs
sar
bound
add
lods
popa
sti
cmp
and
push
clc
xchg
mov
sbb
cwde
adc
sub
pop
mov
sbb
pusha
out
or
movs
(bad)
js
mov
mov
mov
sbb
inc
jne
cmp
dec
mov
iret
jle
sbb
pusha
retf
add
int
xor
xchg
scas
xor
cmps
aas
sub
test
test
inc
movs
adc
sahf
pop
push
or
xchg
addr16
outs
mov
retf
fwait
cmps
push
dec
and
sbb
addr16
stc
sti
push
jecxz
add
jb
cmp
pop
push
popa
shl
dec
sti
stc
mov
push
sbb
jb
mov
push
mov
push
jl
mov
mov
push
in
sbb
sbb
xor
xchg
cmp
int3
inc
rcl
adc
cmp
mov
jmp
xlat
cmp
jne
fwait
dec
rol
adc
pop
adc
mov
jl
stos
aam
js
dec
lds
push
inc
dec
push
jbe
ret
pop
or
adc
(bad)
pop
jnp
aas
jmp
test
test
(bad)
jae
pop
clc
push
mov
ror
test
cmp
jno
out
dec
(bad)
icebp
cmp
and
sbb
iret
and
fild
jmp
and
dec
fst
sub
cmp
xlat
inc
inc
stos
icebp
sbb
xchg
in
inc
push
and
cmova
adc
xor
or
mov
ret
lahf
into
mov
jno
inc
xor
pop
sub
ret
popf
inc
ret
scas
inc
sbb
jmp
retf
dec
int3
frstor
dec
pop
push
sbb
daa
inc
pop
mov
int3
hlt
mov
mov
xor
mov
sub
push
sbb
xor
call
jb
aam
dec
mov
mov
inc
outs
(bad)
lods
jle
imul
mov
shr
inc
test
push
mov
or
inc
out
adc
sbb
mov
inc
cmp
sub
movs
in
scas
mov
lods
sub
test
push
cmp
data16
inc
mov
xor
xchg
mov
or
add
repnz
adc
icebp
shr
and
xlat
cmp
inc
mov
mov
fmul
stos
xchg
imul
sub
call
dec
dec
cld
iret
daa
jnp
cli
out
or
cmp
xor
mov
and
inc
enter
imul
mov
gs
push
xchg
xor
imul
inc
mov
ss
jp
xchg
jno
sbb
inc
push
leave
int
jb
or
outs
xchg
shl
xor
jl
stos
out
sbb
nop
in
jmp
lds
adc
pop
repnz
jno
popa
sub
xchg
scas
adc
cmovno
loope
push
retf
jle
(bad)
adc
movs
sahf
test
adc
aam
(bad)
stos
pop
push
scas
inc
pop
cmc
jmp
jecxz
and
mov
movs
call
jno
inc
push
or
mov
das
jo
add
(bad)
jle
xchg
push
fidivr
add
or
out
mov
test
nop
movs
iret
stc
pushf
jns
lods
lahf
inc
jp
sbb
cmp
xor
das
sbb
cmp
mov
or
pop
dec
cmp
mov
rcr
and
cmp
fimul
aam
or
pop
std
(bad)
sub
mov
shl
adc
outs
inc
std
repz
xchg
test
dec
cli
pop
xor
add
add
jge
pusha
ins
js
xchg
and
add
sub
pop
dec
xlat
inc
inc
lods
nop
pop
add
dec
into
jb
sub
dec
sbb
mov
ret
mov
pushf
in
pop
and
jbe
push
lock
sub
dec
aad
or
jne
xor
adc
mov
iret
xchg
mov
in
jle
add
cmp
jmp
push
sub
shl
cs
je
cld
cwde
add
ret
loopne
push
sbb
std
adc
in
dec
unpcklps
out
mov
sub
sbb
sbb
mov
in
test
or
and
je
mov
repnz
adc
movs
into
sub
inc
aaa
fcmovu
clc
sbb
gs
sub
lea
jb
sbb
xchg
dec
jb
(bad)
into
adc
lds
fwait
adc
shr
movs
pop
dec
mov
test
mov
fcmovu
mov
iret
xchg
dec
imul
or
movs
sbb
xchg
cmp
ss
dec
imul
sub
add
dec
xchg
add
(bad)
hlt
inc
inc
jns
jmp
mov
mov
adc
inc
les
sub
test
jle
and
xchg
adc
arpl
mov
lock
push
mov
sub
call
mov
aam
out
shl
cld
inc
xchg
cmp
push
mov
mov
test
mov
adc
aam
popa
push
(bad)
test
sub
ret
daa
pop
sti
loop
and
inc
out
pusha
xlat
push
cmps
and
aaa
mov
inc
fsub
stc
mov
fwait
mov
mov
xchg
sahf
adc
sub
jns
mov
mov
pop
add
test
mov
push
jle
mov
iret
inc
ins
scas
subps
jno
mov
inc
xchg
add
cmp
and
push
jle
in
nop
(bad)
fld
inc
lahf
test
sbb
mov
add
sub
or
mov
sbb
pop
sar
sub
stos
fstp
add
fisub
imul
ins
mov
push
stc
not
xor
xchg
and
sar
mov
jmp
xchg
dec
add
ss
out
sub
aaa
mov
xor
jb
outs
mov
clc
std
or
das
gs
loope
pusha
nop
repz
in
mov
push
push
les
(bad)
repz
push
sub
mov
jne
fxch
mov
ss
out
ins
xchg
ss
cmp
mov
int3
inc
sub
mov
mov
push
mov
nop
push
pop
inc
and
movs
jae
and
xchg
push
cmps
or
inc
dec
push
lea
out
and
int
and
test
xor
pop
add
int3
das
or
in
cmp
push
add
sbb
aaa
mov
dec
mov
dec
push
(bad)
repnz
test
inc
or
popf
or
mov
aam
int
and
pop
ret
popa
(bad)
cmp
lds
enter
xchg
rcl
sub
xor
jae
adc
adc
sub
or
mov
nop
call
dec
pop
jbe
(bad)
fdiv
mov
dec
xlat
in
in
adc
mov
xlat
aas
or
or
sbb
js
popa
mov
sahf
jg
cmp
movs
in
jle
cld
or
sub
adc
jns
imul
xchg
test
test
mov
pop
out
ret
por
xchg
stos
adc
pop
scas
les
cmp
pusha
jg
out
pop
adc
popa
es
mov
sbb
mov
or
jl
rol
pop
inc
stc
iret
ret
jle
sub
fsubr
pop
sub
mov
jecxz
sar
shl
loopne
repz
lahf
ds
cmps
mov
movs
(bad)
aaa
out
or
push
pop
push
push
fst
loope
pop
call
jne
dec
and
xor
xchg
adc
and
dec
pop
and
mov
mov
jmp
shr
sar
add
mov
push
xchg
int
scas
push
cmp
stc
pop
inc
test
and
imul
adc
pusha
sbb
pop
add
addr16
sub
mov
jg
(bad)
cmp
jle
std
sub
xor
inc
xchg
mov
mov
mov
scas
sbb
sbb
mov
adc
push
add
dec
fs
or
repnz
clc
cmp
lods
ds
and
push
outs
lahf
repnz
pop
push
scas
pop
jmp
pop
leave
mov
xchg
and
or
mov
xor
sar
xor
pop
fnstsw
adc
mov
les
cmp
fisub
add
shl
or
mov
test
sbb
loope
jge
xor
(bad)
mov
mov
sbb
add
cmp
dec
and
mul
xchg
addr16
push
loopne
call
push
outs
test
shl
in
(bad)
sbb
inc
fldcw
push
fwait
jmp
sbb
cmp
imul
out
cmp
js
test
aad
xchg
mov
pop
ror
adc
hlt
cmp
loopne
bound
jbe
add
retf
push
dec
mov
movs
arpl
das
add
fdivrp
mov
mov
dec
xchg
cmp
call
fs
sti
int
add
jge
push
push
sub
push
mov
pop
fiadd
push
outs
es
sbb
inc
push
cmp
sub
cmp
pop
xor
ja
push
sar
int
dec
or
dec
mov
sub
popf
add
pop
push
fistp
and
mov
out
sbb
clc
loope
rol
pop
nop
dec
jmp
and
ds
mov
fnstsw
xor
std
fwait
(bad)
int3
ret
adc
jae
pushf
mov
(bad)
mov
rcr
mov
hlt
xchg
mov
xlat
imul
sub
lods
sub
push
lgs
push
pop
aas
out
sbb
mov
pop
and
fnstsw
arpl
sbb
mov
repz
inc
(bad)
sbb
jl
ret
and
popf
ret
(bad)
jmp
scas
dec
stc
ja
add
dec
cmp
arpl
pop
mov
xor
jmp
cmp
push
pop
push
test
(bad)
ret
sti
popa
and
inc
jp
cmp
xchg
sub
dec
push
or
fcmovbe
fstp
bound
xchg
jg
sbb
aam
daa
call
aaa
or
lods
dec
fisub
enter
sbb
cmp
retf
int
dec
xlat
cli
push
call
movs
pop
ror
movs
pop
mul
xor
and
sbb
retf
fcmovu
pop
push
lods
push
jp
dec
pop
adc
aad
ds
sub
inc
movs
(bad)
push
and
test
and
xlat
mov
fnstcw
xor
fbld
push
mov
dec
or
(bad)
(bad)
jno
fidiv
mov
mov
outs
xchg
mov
imul
inc
dec
mov
pop
dec
js
sbb
xchg
mov
out
(bad)
std
lahf
dec
adc
icebp
jle
mov
cmp
fucom
enter
loopne
sbb
pop
jl
sahf
push
or
das
gs
xor
xchg
xchg
out
xchg
and
(bad)
mov
fimul
sub
cmp
loope
(bad)
fidivr
and
(bad)
mov
cmc
mov
mov
mov
into
cmc
enter
pop
lods
add
fild
and
add
scas
scas
mov
neg
add
outs
or
mov
pushf
push
xor
jp
add
sti
loope
add
(bad)
retf
inc
int3
test
cmps
pushf
into
xor
cdq
mov
xor
ja
or
mov
movs
adc
retf
push
xchg
xchg
cmp
sahf
ins
mov
loopne
jmp
xchg
std
add
bnd
adc
outs
jne
xchg
xchg
jmp
pop
movs
rol
mov
fld
adc
mov
jbe
aaa
cmps
xchg
shl
add
cmps
(bad)
xor
inc
sbb
or
ins
cdq
aaa
shl
scas
mov
or
daa
outs
xchg
mov
push
enter
mov
mov
lea
cmps
mov
add
mov
popf
jb
stos
out
imul
test
sub
sub
(bad)
hlt
mov
pushf
leave
cmp
lds
mov
sbb
push
xchg
mov
fild
push
rol
sub
push
repz
nop
xlat
cmp
mov
jnp
stos
mov
xor
inc
ins
mov
frstor
test
arpl
cmp
rcr
jne
jmp
add
lock
or
mov
gs
fbld
dec
or
jmp
retf
adc
dec
pop
pop
lds
lods
dec
mov
jle
dec
stc
out
or
push
mov
jmp
jns
fnstenv
out
jns
jp
scas
sub
stos
adc
loopne
add
inc
mov
push
in
xchg
pop
pop
mov
cdq
es
or
pop
inc
les
add
mov
push
fwait
in
dec
xchg
pusha
nop
shr
xchg
in
jmp
mov
push
movs
xchg
js
movs
push
(bad)
xor
or
jle
pmullw
shl
jo
push
jae
out
leave
push
addr16
ds
mul
sub
(bad)
fcmovnb
mov
cmps
clc
leave
leave
add
les
or
mov
xchg
xor
sub
push
stc
leave
mov
and
out
bound
mov
xchg
mov
dec
mul
mov
pop
fild
cmps
jle
lods
inc
call
dec
je
pop
cmc
push
fdiv
push
push
jbe
imul
inc
inc
inc
add
out
mov
idiv
mov
sub
mov
movs
call
dec
mov
sub
mov
stos
mov
mov
jo
or
add
cmp
add
xchg
lahf
pop
in
dec
push
fstp
les
dec
xchg
sbb
jmp
lea
lock
jo
jne
mov
mov
pop
pushf
ror
clc
call
mov
xchg
xchg
dec
add
aas
icebp
xchg
aas
lahf
xor
shr
jl
mov
dec
sbb
dec
loop
push
pushf
pop
mov
out
neg
loope
xchg
(bad)
mov
lock
adc
dec
xchg
mov
xchg
xor
cmps
jo
inc
test
shl
in
in
cmovbe
lock
psrlq
inc
ss
pop
jle
fist
jp
sbb
imul
xor
add
jp
fsubr
or
inc
loopne
pop
or
mul
in
shl
xor
jb
push
xchg
jp
jbe
cmp
stos
stc
cmp
(bad)
lds
mov
xor
fst
outs
pop
jmp
mov
inc
push
pop
fild
mov
dec
sub
mov
pop
mov
loopne
cmp
scas
mov
cmc
adc
fwait
xlat
inc
scas
xchg
adc
add
push
mov
xchg
xor
pop
adc
xchg
ds
int
lock
or
push
pop
(bad)
aad
inc
add
add
xchg
cdq
pop
sbb
inc
pop
imul
lds
jp
push
dec
and
mov
fisttp
adc
das
add
jl
das
push
test
shl
rcl
xchg
jg
mov
push
xchg
fcomip
mov
xchg
jl
repnz
xchg
ins
mov
clc
(bad)
repnz
pop
jge
inc
jno
(bad)
cmp
pop
cmp
shl
mov
or
add
outs
repz
sbb
ins
loop
inc
data16
mov
sbb
sti
cmp
push
aas
mov
aas
push
xor
jno
stc
sbb
into
sub
mov
cmps
mov
in
and
cmp
or
cs
dec
movs
inc
pushf
and
cmps
sub
dec
(bad)
pop
mov
or
cmps
adc
(bad)
retf
adc
pusha
ds
add
dec
jge
mov
inc
pop
mov
sbb
sub
xchg
adc
shl
push
imul
mov
repnz
aaa
lea
xchg
fst
movs
push
lods
jne
and
imul
and
(bad)
sbb
rcl
popf
js
push
jo
jl
fisub
das
and
sbb
xor
test
sub
aam
add
pop
fucomp
dec
and
xor
xchg
mov
(bad)
int3
xor
push
and
inc
xlat
dec
mov
stos
mov
inc
out
xchg
xchg
jecxz
pop
fs
(bad)
jmp
arpl
mov
(bad)
dec
xchg
jl
std
sahf
in
mov
fisttp
mov
sub
cmc
add
jno
mov
fwait
shr
mov
and
push
dec
mov
stc
jmp
data16
les
dec
jl
sahf
hlt
jno
xchg
xchg
test
mov
fisttp
ins
cs
in
lods
pop
fadd
jne
mov
sub
cs
jnp
lods
cmc
int3
and
fnsetpm(287
sub
jecxz
test
mov
xchg
call
bound
popa
cmps
push
xchg
push
in
js
dec
ins
lods
xchg
imul
int
adc
scas
in
popf
pushf
jno
mov
mov
xchg
inc
push
pop
mov
jg
stos
fs
mov
(bad)
ds
push
jne
test
xor
push
jecxz
jns
sbb
jmp
(bad)
cdq
cli
mov
or
sub
jae
imul
add
loopne
shr
mov
imul
out
push
xor
ror
inc
sub
sbb
enter
add
les
mov
mov
movs
outs
mov
mov
jae
fist
aam
scas
add
push
push
in
out
push
stc
cmp
pusha
scas
frstor
jo
addr16
fnsave
mov
leave
test
xor
aas
mov
mov
repnz
jg
push
ds
movsx
sbb
sbb
ret
xor
(bad)
mov
cld
js
inc
ins
pop
dec
mov
arpl
cmps
into
lahf
mov
mov
inc
jmp
pop
mov
clc
xchg
mov
retf
xor
sahf
xchg
adc
xor
mov
jns
add
out
popa
fidivr
imul
adc
movs
test
jno
lahf
sub
xchg
xor
je
inc
addr16
mov
out
mov
arpl
pop
mov
movs
(bad)
(bad)
call
cld
popf
jmp
mov
pop
ror
test
push
sti
push
mov
sti
dec
movs
push
aas
imul
data16
shr
cmps
push
add
push
sti
sahf
pop
or
adc
sbb
cli
test
cmp
cmp
mov
loopne
sahf
xor
test
mov
adc
stos
out
pop
push
or
cmc
mov
fist
jae
daa
jle
mov
pop
pop
mov
dec
adc
ins
loop
pop
jb
push
and
retf
jmp
cwde
sbb
arpl
sbb
cmps
lods
sub
xor
cmp
nop
popa
addr16
xchg
mov
fisub
jne
xchg
mov
adc
and
dec
mov
xor
mov
imul
test
sub
xchg
push
mov
icebp
pop
mov
xchg
test
cmp
outs
sbb
call
push
aad
jle
xchg
xchg
xchg
mov
lea
mov
inc
mov
mov
or
inc
xchg
inc
hlt
mov
iret
aaa
pop
retf
pop
test
les
or
fs
jecxz
daa
aaa
xor
aad
jecxz
cs
add
adc
fsubr
imul
inc
das
repz
outs
bound
push
sbb
cmp
and
outs
pop
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
xor
bound
and
scas
lods
cdq
cli
cmp
jl
rol
repnz
sub
cmp
cmp
cli
out
fsub
push
repz
pop
sbb
and
movs
aas
xchg
and
fidiv
cmp
mov
lds
and
and
lds
push
bound
sbb
stos
cmp
or
xchg
push
adc
pop
dec
and
mov
imul
jne
imul
push
jmp
sbb
mov
loope
xor
sahf
xor
les
sbb
cmc
dec
mov
call
mov
jecxz
pop
lahf
sub
adc
out
dec
jo
repnz
sub
(bad)
pop
mov
mov
dec
jmp
mov
call
jbe
imul
jbe
jmp
icebp
xchg
sbb
xor
or
sbb
fisttp
mov
xchg
pop
in
fbld
(bad)
mov
mov
mov
xor
adc
stc
int
cmp
std
retf
xor
inc
push
fidivr
pop
jp
cmc
fdivr
jns
rep
nop
aaa
out
loopne
push
push
or
jge
adc
cli
dec
mov
dec
pushf
stos
dec
loope
pop
jnp
mov
repz
xchg
cli
div
aam
cld
in
aam
cmp
or
jnp
outs
inc
retf
int
or
push
push
push
xchg
cli
mov
mov
mov
icebp
dec
push
sub
repnz
imul
cmp
fwait
or
inc
or
xchg
dec
test
or
in
add
fild
push
cmp
out
(bad)
sar
sub
cmp
sbb
adc
mov
rol
add
inc
push
stc
daa
add
sub
sub
cwde
scas
xor
ins
dec
ins
xlat
or
mov
mov
jg
xchg
imul
push
dec
adc
lock
shl
imul
xchg
jge
inc
mov
xchg
push
lock
add
or
dec
leave
pop
xor
pop
inc
mov
xor
adc
pop
je
test
cmp
mov
je
lods
cld
push
(bad)
cmps
or
pop
mov
mov
call
xor
sbb
mov
leave
adc
push
std
xchg
aas
stc
adc
movs
pop
mov
fdiv
(bad)
loop
mov
imul
mov
jp
aad
popa
test
dec
pop
xchg
(bad)
mov
mov
pop
test
xchg
sbb
xchg
mov
jmp
dec
inc
push
in
dec
and
cmc
mov
cmc
add
not
addr16
in
push
shl
sub
mov
mov
imul
ficom
sbb
out
mov
js
xchg
dec
mov
xor
lods
pop
sub
jg
sub
and
inc
cmc
mov
js
sbb
dec
and
xchg
sub
sub
(bad)
push
mov
fdivr
inc
leave
das
pusha
mov
dec
mov
pop
out
xchg
or
das
mov
add
loop
int
and
aaa
test
sub
dec
imul
mov
jno
cmp
push
mov
push
sti
jmp
xor
and
(bad)
jmp
outs
inc
cmc
cwde
in
jl
test
inc
sbb
and
mov
or
xor
mov
pop
add
push
jbe
inc
mov
add
push
or
dec
mov
dec
mov
jbe
push
repz
xor
and
cmp
movs
sbb
inc
or
cld
js
sbb
repnz
outs
or
movs
sub
xchg
xchg
and
repz
loopne
sbb
mov
addr16
mov
(bad)
int
sbb
inc
das
aad
cmp
rcr
(bad)
verr
nop
movs
stos
ins
xchg
popf
sbb
enter
popf
inc
add
(bad)
std
ins
test
cli
mov
or
push
pop
les
mov
mov
fimul
dec
mov
inc
and
out
xchg
mov
sbb
(bad)
fadd
es
mov
adc
loop
retf
fwait
cmp
mov
xchg
sub
mov
jmp
jnp
enter
leave
in
jns
stos
aas
into
ins
add
mov
retf
sub
add
push
mov
sub
or
mov
cs
lds
add
test
pop
ror
sbb
pop
fld
jns
xor
mov
fsubr
int3
add
cli
out
in
adc
retf
xchg
xchg
or
js
ret
stos
xchg
retf
push
dec
mov
cmp
sbb
fisttp
pop
(bad)
lods
sti
bound
(bad)
shr
add
clc
ror
retf
in
push
retf
in
jns
or
mov
data16
movs
into
add
adc
fs
mov
sub
jmp
xchg
dec
jo
test
and
inc
push
fcomi
xchg
pop
mov
jge
add
pop
(bad)
adc
mov
in
sub
xor
jne
xor
sub
cs
jp
movs
xor
cdq
push
jmp
push
add
xchg
adc
mov
jmp
jae
sbb
and
xchg
xor
inc
repz
ror
lods
sub
inc
in
imul
push
(bad)
jl
movs
push
(bad)
stos
xor
mov
icebp
cmps
shl
pop
(bad)
fsub
cs
sbb
jno
aaa
aad
iret
xchg
(bad)
jp
mov
pop
mov
add
fsubr
daa
bound
xor
hlt
cmc
push
mov
xor
sub
pop
pop
ins
pop
adc
mov
push
dec
ror
and
(bad)
(bad)
jbe
mov
imul
jns
push
call
add
jmp
cmp
xchg
add
mov
ins
or
push
pop
cmp
add
mov
outs
mov
push
cwde
sar
les
mov
and
clc
pop
xor
mov
xor
sub
retf
cwde
call
mov
dec
cwde
sub
inc
sub
pop
mov
(bad)
ja
aad
cmp
add
ret
xchg
retf
mov
pop
and
or
add
or
mov
rol
mov
inc
add
xor
mov
lock
mov
ds
stc
aad
outs
test
pop
popa
dec
pop
in
cs
jns
and
sub
sub
cld
push
in
mov
sbb
ret
(bad)
out
es
sbb
mov
mov
mov
popf
mov
cmp
jmp
sbb
mov
loope
in
push
fwait
hlt
std
gs
and
rcl
cmp
or
mov
and
cmp
mov
sbb
jns
popf
pushf
imul
out
jg
les
data16
cmp
jne
imul
xor
pop
addr16
xchg
dec
bound
data16
aaa
add
test
adc
jb
test
sbb
dec
sti
mov
cdq
ins
ret
xchg
das
mov
sbb
ins
add
cmp
int3
(bad)
ds
sub
arpl
aad
fidivr
mov
push
mov
loope
inc
jae
cmp
or
in
icebp
arpl
fucom
stos
mov
xor
mov
mov
(bad)
dec
repz
mov
ror
ja
sbb
enter
inc
jnp
sub
ja
and
scas
in
mov
not
push
das
jnp
inc
pushf
and
xchg
cmps
icebp
out
sbb
leave
mov
xchg
in
mov
call
out
mov
mov
call
sbb
and
test
jg
dec
mov
and
xor
adc
or
stc
cwde
jnp
mov
test
gs
jno
add
(bad)
je
cmp
lds
(bad)
pop
xchg
ret
xchg
mov
xchg
inc
sub
arpl
xor
add
push
mov
jp
pushf
push
push
xchg
xchg
pop
mov
rol
and
dec
mov
ficomp
lea
dec
aas
ins
mov
sbb
xor
ret
mov
pop
mov
and
daa
scas
pop
or
int3
shl
jb
add
jae
sbb
das
xchg
cmp
or
gs
cmps
mov
mov
les
cs
cmp
cs
sti
cs
mov
or
mov
movs
mov
sub
cmp
mov
aad
(bad)
and
push
dec
icebp
gs
jnp
(bad)
test
push
add
jmp
mov
push
or
iret
lods
pop
xchg
gs
scas
or
mov
mov
icebp
inc
rcl
sbb
or
sbb
xchg
mov
mov
sbb
frstor
fidiv
cmp
ins
jmp
push
mov
(bad)
cmp
jecxz
push
cmc
add
movs
imul
popa
shr
pcmpeqw
call
scas
jne
adc
mov
mov
dec
cmp
xchg
push
pop
jl
adc
cmp
mov
push
scas
ficom
(bad)
sti
inc
call
sub
bound
data16
out
ret
mov
ds
inc
xchg
(bad)
push
jo
jne
adc
popf
call
scas
and
mov
xor
addr16
xchg
out
(bad)
cwde
xor
pop
fdiv
test
gs
retf
fsubr
aaa
and
adc
jp
outs
pop
inc
jmp
xlat
rcl
jnp
out
mov
sub
shl
(bad)
adc
jb
inc
xchg
jg
cmp
call
retf
add
sub
int3
mov
mov
call
pop
cmovle
inc
loopne
cmp
sub
retf
and
icebp
test
nop
icebp
or
mov
cmc
sar
xchg
push
movs
sar
pop
iret
enter
add
mov
jae
sub
sub
cmp
or
fisttp
inc
adc
cmp
inc
(bad)
jo
inc
loopne
jecxz
sbb
push
jno
sahf
nop
adc
mov
and
inc
ins
mov
cs
in
inc
stos
into
scas
mov
movs
out
(bad)
sub
xor
xor
xchg
jg
mov
push
pop
std
cwde
ficomp
mov
or
or
aaa
mov
sub
lock
inc
xchg
xlat
or
cmp
mov
outs
movs
jle
jl
sub
xor
inc
or
xchg
xor
out
or
shl
xor
fild
sbb
sbb
scas
or
pop
arpl
jl
lock
jp
or
push
fild
push
les
sbb
ror
inc
mov
mov
add
je
les
jmp
and
pop
push
repnz
pushf
sahf
fidiv
pop
push
adc
mov
lea
mov
sub
xor
retf
dec
inc
cmp
ror
or
push
cmp
push
mov
fucomi
push
xchg
fiadd
dec
push
sbb
std
and
rol
inc
inc
call
jnp
rol
inc
int3
pop
mov
test
std
cmp
dec
loopne
test
push
sbb
mov
push
adc
sbb
inc
leave
repz
repz
(bad)
cmps
call
icebp
or
movs
xor
jge
sub
pop
int3
dec
mov
push
pop
inc
push
mov
dec
jae
pop
adc
sbb
icebp
je
lock
int3
call
cmp
rol
dec
cmp
ds
mov
add
daa
inc
hlt
not
iret
data16
out
imul
mov
ss
sti
jle
adc
paddd
push
jp
xchg
es
mov
xchg
cmc
sbb
jo
inc
xchg
pop
jmp
retf
add
les
leave
push
sub
ret
xchg
inc
sbb
mov
add
cs
add
cld
cmp
fistp
(bad)
mov
mov
xor
(bad)
xor
adc
(bad)
lods
sti
add
hlt
pop
clc
js
inc
popa
jp
dec
pushf
sti
shl
cmps
stos
arpl
cdq
xor
push
push
test
pop
aad
mov
cmp
call
enter
cmp
into
stos
push
aaa
xchg
test
ins
nop
cdq
mov
mov
jg
xor
pop
xchg
into
jg
cld
int
jns
cmp
mov
cmp
xchg
xchg
cmp
loope
jne
or
std
inc
mov
cld
mov
mov
ins
fmulp
push
push
fadd
jg
mov
cmp
dec
or
push
push
add
push
push
sbb
jae
fcomp
adc
push
xor
mov
or
cmp
mov
mov
xor
scas
inc
push
daa
out
lds
out
aas
fwait
jmp
jne
mov
mov
add
and
fs
push
popa
aaa
adc
sbb
mov
sub
xchg
dec
jbe
or
mov
loop
inc
mov
push
pop
aas
movs
out
jecxz
xor
in
jecxz
dec
sub
add
cdq
and
jmp
jl
mov
jmp
rol
and
std
cmp
jnp
dec
loope
jecxz
cmp
ins
pavgb
adc
gs
pop
xchg
mov
iret
sub
sbb
jno
ins
ffree
mov
push
add
int3
pop
call
(bad)
int
sbb
pop
jg
scas
mov
std
pop
cmp
sub
jl
dec
xchg
jle
jl
cdq
icebp
push
hlt
test
sbb
mov
test
push
into
fild
xor
jp
inc
inc
push
pop
xor
(bad)
push
and
xchg
cmc
movs
xchg
rol
adc
sub
mov
push
jle
sahf
shr
mov
cmp
jl
pop
xchg
xor
cwde
js
adc
pop
mov
test
gs
xchg
stos
es
not
dec
pop
shl
or
and
mov
lock
xor
mov
mov
cwde
cmp
cmc
out
mov
sub
test
sbb
and
inc
das
test
adc
mov
adc
clc
jp
sbb
mov
and
(bad)
lods
repz
adc
push
call
add
xchg
pop
out
mov
cmp
xchg
fisubr
stc
stos
cwde
mov
cmp
pop
mov
mov
add
cmp
repz
movs
inc
adc
nop
push
push
fstp
add
xor
mov
cmc
adc
xchg
mov
sti
js
fild
dec
cs
add
mov
outs
test
das
pop
hlt
call
aas
inc
mov
in
jae
aaa
mov
out
cmp
adc
cmp
adc
in
shl
shr
cmp
popa
aaa
call
or
out
fistp
mov
jecxz
cmp
pop
and
bound
sub
scas
imul
pushf
shl
mov
mov
ficomp
in
gs
sbb
mov
dec
and
shr
jge
leave
lock
outs
sub
imul
dec
push
adc
and
add
mov
fldcw
ja
cmps
cmp
jmp
adc
jp
fimul
fld
jmp
adc
cmp
cmps
bound
pop
jb
inc
mov
jmp
nop
or
das
in
mov
(bad)
aad
out
repnz
imul
cmc
mov
fldcw
dec
hlt
out
adc
(bad)
(bad)
mov
pop
nop
hlt
inc
adc
addr16
cld
out
ss
and
aas
push
mov
sub
jl
jp
ret
popf
pop
jne
inc
inc
loop
js
addr16
pop
iret
mov
or
xor
jbe
stos
fdivp
xchg
ins
inc
cmc
add
xchg
das
ins
retf
imul
pop
repz
sub
mov
cmp
retf
sub
pop
pop
or
arpl
shr
neg
adc
jmp
cmps
sbb
jmp
stos
and
dec
test
dec
loope
sbb
ror
in
(bad)
outs
push
rcr
imul
rcl
cvtps2pi
es
inc
pop
mov
or
dec
jbe
fistp
jne
js
ja
inc
ret
push
xchg
jno
retf
jp
retf
and
xchg
mov
add
cmps
mov
add
inc
sti
mov
xchg
pop
out
jl
pop
add
out
(bad)
mov
jmp
enter
hlt
xchg
adc
je
cmc
sti
fild
retf
mov
mov
aas
jno
adc
test
movs
xchg
int
js
sbb
mov
test
jmp
rcl
jl
add
sub
pop
ja
jbe
mov
mov
(bad)
pushf
iret
ror
daa
int
pop
shl
(bad)
pop
shl
shl
push
in
pusha
repz
xlat
mov
pop
sub
outs
jo
inc
mov
push
sbb
cwde
mov
shr
pop
shl
retf
mov
xchg
sub
fsubrp
shl
imul
jae
sub
push
mov
fistp
ja
js
lock
lods
ret
ror
xchg
push
sbb
dec
inc
inc
push
cmp
pop
mov
ror
sbb
jp
pop
fisubr
cmps
int3
or
movs
scas
and
push
scas
push
jae
mov
sub
icebp
sub
fnstsw
inc
test
icebp
pop
sub
inc
(bad)
loope
push
mov
jns
(bad)
in
pop
pop
gs
test
sub
movs
adc
sub
dec
push
mov
mov
(bad)
fisub
add
cmps
std
push
push
mov
pop
js
fucomi
scas
jmp
cmp
cs
xchg
and
imul
and
jnp
mov
push
in
push
sbb
pop
cmp
mov
js
mov
push
repz
jns
pop
xchg
mov
aas
repz
data16
or
dec
jno
inc
mul
adc
cmp
inc
cs
add
jb
sahf
movs
data16
stc
retf
jae
cmps
mov
retf
dec
mov
sub
xchg
push
sub
idiv
push
xchg
xchg
xor
mov
add
inc
lods
rcr
fldenv
xor
mov
ins
(bad)
jae
in
lds
push
stos
cld
mov
and
adc
repnz
adc
mov
push
and
pop
pop
jmp
inc
mov
out
loopne
out
pop
cmp
test
jl
push
mov
cld
mov
xchg
sbb
pop
setae
mov
ja
sbb
mov
repnz
dec
sbb
cdq
(bad)
scas
push
or
adc
jo
sub
inc
dec
call
and
mov
js
jp
jg
or
enter
fwait
std
xor
sbb
mov
hlt
xor
popa
js
ds
dec
gs
test
hlt
ins
add
xchg
lods
xor
ja
call
lahf
jmp
shl
inc
sbb
setl
xor
inc
cmp
push
mov
dec
mov
xchg
or
mov
pop
or
cwde
add
shl
jne
adc
fisub
es
and
jmp
pusha
jbe
fistp
test
mov
xor
imul
jge
add
in
dec
(bad)
bswap
repnz
lods
outs
sub
jae
dec
(bad)
std
bound
nop
and
push
push
pop
in
aad
test
clc
ja
imul
jo
and
lods
add
adc
(bad)
repz
data16
mov
xchg
or
push
aad
cmp
xlat
(bad)
xchg
dec
adc
inc
jmp
xor
sti
pop
add
push
jmp
jl
xor
or
xor
cdq
inc
retf
sbb
xchg
imul
int3
pop
cmp
outs
add
out
jo
xor
sbb
or
jg
xchg
pop
out
fadd
mov
mov
lods
sti
jae
push
call
add
cmp
cmp
ja
push
sbb
clc
js
(bad)
not
and
test
or
into
inc
mov
movs
pop
mov
(bad)
gs
aad
xchg
shl
jnp
adc
iret
or
inc
cmps
imul
adc
test
cmp
or
popa
or
inc
xchg
mov
jg
xor
outs
test
pop
mov
add
pop
adc
adc
loope
cmp
fs
cs
mov
inc
sub
cmps
xchg
mov
ret
adc
test
adc
and
pop
inc
mov
pavgb
std
pop
lods
movs
add
aas
add
fmul
adc
ret
sti
jo
xor
cmp
scas
in
not
cmp
aaa
mov
mov
cwde
pop
lods
dec
jo
lods
movs
push
push
pop
mov
sti
inc
xchg
lods
jb
dec
dec
in
mov
and
push
mov
mov
sbb
pop
mov
push
pusha
or
mov
and
aad
mov
sub
push
scas
out
cld
xchg
lock
xor
and
pop
mov
retf
or
dec
jmp
ins
in
pop
loopne
pop
mov
dec
es
pop
(bad)
cmp
mov
sub
mov
cmp
rol
inc
fdiv
mov
mov
ret
sub
mov
cmp
stos
jge
rol
fstp
push
gs
pop
out
xor
stos
and
or
sar
ins
jl
ja
das
sub
or
in
into
xor
add
icebp
lahf
(bad)
(bad)
stc
dec
(bad)
push
gs
mov
test
add
cmp
lods
sbb
jo
pop
and
hlt
iret
dec
xchg
movs
pop
imul
xlat
dec
jle
call
jbe
in
out
xor
push
xor
mov
mov
mov
aam
dec
push
inc
shl
push
inc
dec
push
xor
xchg
push
mov
lods
dec
in
neg
stos
jno
loope
push
cli
dec
fwait
js
mov
jge
fidivr
adc
sub
mov
jo
pusha
jns
outs
cmp
pop
daa
fadd
mov
int3
mov
lahf
or
cmp
mov
dec
xchg
retf
push
adc
jmp
enter
mov
sbb
je
retf
les
mov
jo
fild
ret
xchg
mov
mov
sbb
add
test
jno
adc
jnp
stos
xlat
push
(bad)
xchg
pop
sbb
dec
and
retf
test
into
dec
arpl
mov
xchg
mov
sbb
lock
int
adc
retf
mov
clc
add
jo
sub
mov
xor
stos
(bad)
imul
retf
sar
mov
sbb
adc
fdivr
mov
push
pop
cld
adc
es
adc
mov
sti
sub
repnz
bound
scas
pusha
mov
and
mov
aaa
inc
in
outs
mov
scas
icebp
call
pop
xor
lock
call
dec
mov
push
xor
rcr
fimul
and
pop
push
outs
inc
fisubr
js
adc
in
cdq
icebp
jmp
repnz
adc
xor
cld
jo
xchg
mov
xlat
xor
call
and
or
add
xchg
jnp
adc
cwde
mov
stos
out
xlat
mov
push
scas
cs
loopne
inc
in
adc
sbb
inc
cmc
daa
push
pop
outs
aam
mov
sub
push
(bad)
int
gs
mov
xchg
shl
aas
xchg
adc
loop
ss
(bad)
div
test
cmp
add
mov
fldcw
add
inc
repz
and
add
(bad)
xchg
sbb
pop
jecxz
dec
arpl
push
or
imul
inc
xlat
xchg
cmp
lods
daa
in
outs
cld
sub
mov
mov
lods
call
iret
add
adc
mov
lea
inc
mov
sub
adc
ret
add
popa
and
add
fst
and
adc
test
stc
push
xchg
pop
stos
xchg
fimul
inc
dec
aaa
pop
mov
imul
gs
and
arpl
sbb
cmp
prefetcht2
push
test
repz
outs
mov
xchg
mov
vpdpwssd
inc
in
xor
(bad)
mov
rcr
adc
push
jle
ja
and
clc
adc
nop
ins
jnp
push
mov
pop
aas
or
pusha
pusha
sub
mov
pop
jo
mov
jnp
sbb
clc
mov
or
sub
mov
gs
push
jmp
scas
push
and
loop
int3
mov
stc
clc
test
call
shr
sub
mov
sub
jno
jns
push
mov
cmps
pushf
ja
and
mov
(bad)
inc
addr16
lods
or
retf
mov
xor
aas
fistp
bound
jecxz
mov
xchg
cli
into
ret
pushf
scas
or
cmp
nop
cld
repz
push
ins
cdq
(bad)
call
lea
mov
inc
stos
mov
frstor
add
xor
pop
sub
adc
add
repnz
fiadd
daa
jg
xchg
stos
outs
ret
add
inc
popa
jmp
cmp
cmp
dec
jno
inc
call
jnp
mov
xor
sub
popf
jge
xchg
ins
push
add
je
enter
sub
adc
mov
push
inc
inc
rcr
mov
cmp
not
and
inc
mov
or
push
ss
cmps
add
cmp
pop
dec
jp
hlt
xchg
das
imul
(bad)
test
mov
mov
jbe
cdq
rol
xchg
cmc
xor
sub
sub
and
mov
adc
stos
dec
push
xchg
pop
loope
shl
aam
pop
jmp
xor
cmp
push
imul
pslld
in
push
ins
xor
sbb
pushf
and
stc
retf
push
sbb
mov
(bad)
cmp
inc
imul
xchg
(bad)
aas
dec
or
mov
cdq
mov
mov
repnz
inc
popf
cmp
jmp
xchg
rcl
cmc
adc
sbb
xchg
mov
ds
rcl
push
sbb
test
dec
call
int
jae
stos
xor
inc
rcr
test
xor
test
(bad)
adc
shl
ror
mov
mov
push
mov
cs
test
shl
mov
ja
(bad)
push
(bad)
push
daa
int
frstor
pop
sub
nop
lahf
jmp
ud2
repz
outs
cmp
sub
cli
pop
imul
icebp
cmp
and
int3
je
jno
sti
xor
jmp
jecxz
push
cmp
mov
sub
test
xchg
mov
(bad)
aam
ret
push
int3
aad
scas
sub
dec
mov
shl
push
test
pop
pop
fld1
inc
jge
fcom
ficom
lds
lock
sbb
and
pop
xchg
das
in
movs
sti
push
retf
push
xlat
inc
mov
mov
add
fwait
pop
dec
push
cmps
sub
xor
add
call
mov
iret
adc
mov
cmp
stos
xchg
loope
dec
pop
cmp
jmp
sub
test
lock
sbb
mov
mov
adc
inc
fst
mov
(bad)
pop
xchg
out
push
mov
pushw
cmp
mov
sub
lock
or
inc
not
outs
fwait
int
dec
sbb
das
and
cmp
push
cld
ja
pop
aad
adc
leave
sahf
(bad)
inc
or
in
xchg
cmp
lods
push
into
adc
sub
xchg
mov
retf
add
dec
je
sub
sti
(bad)
call
mov
adc
out
jbe
add
pop
xor
das
sbb
and
lods
or
dec
cmp
(bad)
daa
inc
mov
cmp
and
dec
add
aas
mov
(bad)
icebp
aad
(bad)
fld
das
mov
fdivr
clc
ficom
xchg
push
xchg
cmps
std
mov
jb
inc
sub
mov
or
push
cdq
(bad)
adc
pop
add
out
mov
jb
add
idiv
fisubr
pop
or
sub
xchg
mov
out
and
or
mov
bound
aam
mov
dec
fldenv
push
xor
dec
jbe
mov
test
loope
call
and
cmc
pop
mov
cli
and
adc
js
ret
call
or
loopne
call
pop
jl
xor
mov
jg
push
aam
dec
stos
push
jmp
xor
lods
cmp
mov
fwait
scas
jne
add
nop
sbb
scas
xor
add
pop
or
rol
xor
lahf
and
push
sbb
add
cmp
retf
jmp
or
dec
fnstcw
xchg
push
aam
cmp
js
pushf
sub
pop
and
cmp
mov
jmp
jno
dec
mov
lods
data16
aaa
sub
mov
dec
inc
adc
sub
mov
jecxz
loop
push
sub
push
std
add
cmp
stos
scas
retf
mov
jns
lds
sti
push
mul
mov
loop
hlt
sub
sub
sbb
jae
outs
or
fs
aad
sub
mov
inc
(bad)
jb
mov
adc
shl
pop
cmp
pushf
(bad)
xchg
lods
mov
jno
and
pop
inc
scas
jmp
sub
cdq
mov
(bad)
jno
pusha
fld
and
inc
jmp
xchg
inc
pop
sbb
cmp
cs
imul
iret
loope
out
jnp
out
sub
cmp
pop
xor
push
sbb
xor
mov
or
inc
rol
cdq
dec
sbb
cmp
adc
jo
cmp
jo
jbe
clc
pop
cmp
test
jg
and
leave
xchg
(bad)
je
pop
rcr
mov
test
jl
and
outs
test
pop
jmp
add
lahf
jle
jnp
adc
mov
std
add
jbe
xchg
sar
out
leave
imul
xchg
and
sub
xchg
ffreep
imul
call
dec
adc
loop
outs
inc
fst
shr
inc
mov
test
sub
ficomp
stc
ror
mov
(bad)
icebp
fwait
xor
inc
cmc
fidivr
jns
jbe
mov
mov
mov
sub
cmc
jge
add
clc
loope
(bad)
adc
sar
ror
cld
fs
push
icebp
cmps
dec
xchg
gs
call
cdq
sbb
adc
and
ins
dec
ins
sub
outs
dec
dec
or
aas
rol
mov
adc
rcl
cld
ret
xchg
mov
add
rcr
cwde
pop
inc
xchg
scas
pop
(bad)
shl
mov
cmp
xchg
test
dec
ds
test
dec
push
adc
jp
cmp
in
(bad)
dec
push
test
dec
call
xchg
cld
loop
mov
daa
jge
push
retf
jle
stos
lea
fs
xor
(bad)
fstp
fwait
imul
xlat
int
inc
inc
leave
mov
adc
sub
cmp
lds
jae
or
inc
jmp
test
(bad)
dec
icebp
sub
sbb
jb
sub
in
leave
std
xor
ret
xchg
js
and
clc
bound
test
and
ja
mov
jecxz
aas
and
mov
cs
push
(bad)
pop
pop
mov
adc
xor
repnz
fldcw
push
movs
sub
xlat
in
xchg
pusha
retf
mov
lods
jmp
xchg
test
(bad)
bound
dec
dec
iret
or
xchg
sti
rcr
mov
adc
adc
mov
mov
xchg
sbb
pushf
jae
and
adc
cmp
push
mov
add
xchg
aas
add
js
cmp
dec
cli
cmp
jl
add
or
adc
loopne
add
retf
cmps
hlt
dec
cmp
fwait
xor
xor
neg
pop
or
jle
lock
int
mov
push
loop
dec
lahf
imul
loope
ret
push
push
in
imul
int3
xchg
fcmovne
test
ins
mov
int3
cmps
xchg
fsub
xchg
add
push
(bad)
das
loop
out
jns
mov
jne
aas
xor
mov
push
fwait
mov
mov
xor
imul
imul
hlt
loope
std
dec
adc
jns
add
sbb
jnp
xchg
aam
adc
(bad)
inc
shl
lahf
leave
sbb
lea
in
inc
pop
(bad)
and
(bad)
(bad)
mov
leave
pop
fcmovu
mov
mov
neg
lahf
cmps
pop
shl
shl
sub
call
ds
mov
sub
fld
data16
jmp
jbe
div
xchg
fcomp
nop
mov
push
push
pusha
test
and
fiadd
cmps
or
xchg
mov
dec
jle
lea
retf
sbb
cwde
cmp
inc
jle
xchg
jle
aaa
aam
cmp
xchg
cmp
ftst
dec
imul
imul
aas
movs
popf
dec
inc
and
jge
out
xor
mov
jge
mov
fidiv
xlat
sub
sub
pop
push
mov
ins
xlat
(bad)
mov
test
add
and
in
psrlw
(bad)
js
int3
cld
fcmovb
jle
popa
push
jecxz
cmp
and
stos
ret
dec
retf
imul
cmc
xchg
lahf
dec
cdq
les
call
stos
fbstp
aam
outs
arpl
loopne
pop
jne
mov
xchg
arpl
cli
add
hlt
out
and
imul
and
(bad)
sbb
in
dec
push
mov
and
shl
adc
shr
inc
pop
sub
clc
push
jecxz
jg
ret
and
add
cmps
or
pushf
mov
mov
push
sar
pop
pop
popf
adc
js
mov
jbe
dec
ins
(bad)
sub
xor
cwde
sub
test
lea
mov
sbb
lods
les
test
out
shl
icebp
in
je
ss
ins
jae
mov
(bad)
lods
add
or
xchg
xchg
jbe
retf
or
ss
sub
sub
xchg
mov
loop
or
adc
inc
pop
mov
call
fmul
pop
pop
pop
bound
rcl
pop
in
stc
jmp
jo
jp
push
jl
fcomp
idiv
push
xchg
mov
cmp
dec
fmul
push
(bad)
call
out
outs
mov
cmps
dec
or
push
loop
or
pop
in
cmp
idiv
call
push
(bad)
mov
popf
sbb
pop
pop
xchg
xchg
fmul
and
lea
mov
pop
popa
and
lock
jmp
loop
mov
aas
repz
shl
ins
mov
push
fiadd
xchg
cdq
sbb
sbb
cs
push
jp
test
push
fidiv
int
xor
mov
popf
(bad)
sbb
repz
retf
fwait
mov
sbb
(bad)
bound
call
jmp
mov
stos
sbb
mov
cli
push
sbb
cmps
mov
adc
dec
pop
and
test
and
or
mov
movs
mov
fcmovnu
arpl
push
jae
pop
test
push
enter
and
push
in
push
adc
inc
jmp
ins
mov
jge
mov
stos
pop
sub
xchg
mov
aad
icebp
(bad)
call
xchg
xchg
jle
shr
enter
dec
or
shr
ret
idiv
mov
or
imul
je
mov
fstp
movs
mov
add
(bad)
mov
sbb
add
push
mov
cmps
pop
ficomp
lods
into
mov
mov
cmp
push
mov
sbb
(bad)
cmp
push
pushf
js
add
push
popf
enter
(bad)
cwde
fucom
sar
neg
mov
and
not
dec
cmp
rol
jne
call
clc
adc
push
ror
mov
(bad)
loop
in
jle
inc
dec
mov
sbb
lods
dec
dec
sub
data16
add
jne
sbb
mov
in
inc
push
mov
sbb
mov
shl
cmps
dec
stos
aad
inc
inc
stos
popa
pop
mov
sbb
or
sbb
inc
mov
test
xchg
adc
cmc
adc
mov
or
in
jge
xor
mov
sbb
mov
mov
add
in
bound
nop
xor
sar
sahf
jo
fyl2xp1
rol
add
sbb
loope
dec
out
mov
mov
pop
out
cld
push
add
add
add
nop
push
js
sub
mov
sbb
xlat
jne
xor
sub
int3
mov
mov
popf
jmp
jmp
movs
or
popf
(bad)
sbb
ret
push
popa
xchg
sub
inc
(bad)
imul
cli
xchg
jl
adc
jp
and
jmp
cmp
jl
(bad)
jg
add
push
sbb
jae
lds
gs
lock
sub
not
lock
(bad)
fs
ret
cmp
mov
repz
in
jl
or
sbb
popa
mov
cmp
jmp
mov
data16
jmp
pop
in
push
dec
pop
stc
xchg
push
aad
add
add
pushf
xchg
and
(bad)
(bad)
mov
aam
dec
rol
sub
sbb
loopne
dec
icebp
rol
pop
mov
hlt
(bad)
mov
lock
jle
cmp
imul
mov
jle
mov
leave
loopne
loop
call
cmp
aaa
push
(bad)
sub
push
fidivr
addr16
cmps
cmp
adc
jle
repnz
out
pop
cmp
es
xor
mov
mov
jl
mov
inc
push
sbb
sub
shl
inc
fadd
xor
addr16
jno
sub
jg
mov
mul
mov
mov
mov
rcl
fwait
cdq
xchg
fimul
push
xor
jo
das
adc
out
dec
repz
and
xchg
ins
pop
fwait
cmp
sbb
dec
dec
lea
fcmove
int
jp
jns
addr16
adc
in
jne
(bad)
jmp
movs
jle
arpl
cmc
add
add
xor
xor
jb
test
cwde
xor
dec
rol
mul
mov
and
add
lock
xchg
add
inc
cmp
and
das
(bad)
rcr
daa
jb
in
adc
loop
hlt
add
in
jb
outs
cdq
mov
push
or
pop
mov
stc
or
xchg
dec
sub
or
out
ja
fcmove
sub
mov
fdiv
mov
loope
std
or
daa
push
movs
pop
cmps
fs
mov
loope
push
push
or
cmp
push
movs
imul
ds
sbb
es
xchg
add
sub
inc
test
mov
or
ins
adc
std
xchg
int3
and
loope
ret
outs
or
fcmovu
shl
imul
(bad)
pusha
or
dec
pop
jns
stc
adc
rcr
add
add
pslld
popa
and
xchg
mov
push
int3
pop
sbb
adc
cmp
push
mov
aaa
sbb
arpl
cmp
into
pop
sbb
ret
sbb
mov
or
fld
(bad)
sbb
and
sbb
sub
iret
push
out
inc
stos
std
push
sub
jle
movs
(bad)
loopne
cmp
in
aad
cld
jo
inc
sbb
adc
mov
add
les
sub
jmp
nop
not
inc
(bad)
or
and
fcomip
mov
sbb
sbb
jp
gs
inc
out
pushf
dec
int
jmp
mov
pop
cmp
jecxz
cwde
jae
fcomp
cwde
adc
xchg
push
mov
adc
cmp
fdiv
push
sub
push
fsub
sub
cli
or
stos
dec
add
lock
mov
ja
lock
rcr
and
sahf
in
adc
push
jecxz
mov
dec
xchg
dec
out
je
loope
(bad)
scas
push
xchg
movs
jle
aaa
mov
add
call
fcomi
cli
push
retf
int
push
inc
in
push
mov
push
movs
sub
xor
dec
add
sbb
adc
xchg
jp
and
neg
and
in
in
pop
rdtsc
adc
mov
push
xor
das
pop
jns
inc
aam
stos
loop
add
and
push
fsubr
mov
sub
or
mov
mov
scas
sti
cs
sbb
enter
gs
fstp
sub
xor
popf
sbb
mov
sbb
xor
cmc
imul
es
jae
into
pushf
mov
mov
paddsw
test
pop
add
aaa
imul
mov
or
add
push
and
add
sbb
xchg
ins
jmp
mov
ror
enter
and
pop
shr
pusha
sub
or
arpl
push
lds
xor
cmps
dec
sub
cmp
dec
movs
sbb
pop
enter
sbb
mov
pop
enter
and
and
shl
aaa
pop
jb
adc
push
add
enter
aas
adc
cmps
and
out
mov
push
rol
jno
xor
retf
and
jno
fs
push
cmp
aas
push
mov
mov
xor
cmp
fbld
je
lds
adc
mov
iret
dec
and
lods
test
lods
push
inc
mov
push
movs
fld
mov
iret
ins
stos
jno
out
cdq
fs
(bad)
fsub
and
xchg
cld
adc
aam
inc
inc
pop
xor
and
jg
repz
test
add
or
stos
nop
lock
rcr
cwde
sar
add
adc
cld
inc
add
push
xchg
pop
inc
mov
popf
mov
fist
dec
adc
movs
in
ret
push
lock
mov
or
jnp
and
mov
hlt
stc
in
ret
dec
mov
nop
mov
lods
mov
mov
jge
jmp
outs
pop
imul
fwait
push
popf
fwait
and
shr
dec
mov
xlat
mov
sbb
cmp
jno
pop
push
or
push
and
or
adc
sbb
cli
sbb
enter
mov
lahf
or
iret
add
xor
sahf
movs
add
stos
push
dec
jb
ss
fmul
lods
sbb
sti
in
fisttp
popf
(bad)
fidiv
aas
out
movs
test
and
mov
add
out
add
push
loopne
cmp
(bad)
xlat
push
inc
xor
xchg
add
dec
sbb
pop
and
jecxz
icebp
cmp
xchg
pop
cmps
add
pushf
pop
sub
mov
(bad)
scas
mov
data16
and
std
push
(bad)
pop
or
mov
lea
jnp
push
jp
in
dec
jo
int
jecxz
jns
sbb
lods
mov
nop
out
call
add
sbb
xor
jae
mov
mov
retf
and
add
clc
mov
leave
jp
or
xchg
(bad)
or
jns
xor
or
mov
mov
xor
adc
xor
fstp
dec
rcl
mov
mov
(bad)
xor
fsub
pop
jbe
push
popf
push
cmp
jno
pop
cs
mov
test
imul
jns
lods
lds
xor
sbb
xor
xchg
cmp
mov
or
loope
movs
mov
push
xor
test
jb
call
mov
sub
jnp
ja
jmp
mov
inc
xchg
sub
mov
sti
repz
cmp
out
mov
rcr
push
dec
or
loop
cmp
pop
addr16
cmp
idiv
fst
mov
adc
dec
je
pop
xchg
xor
int3
sbb
mov
sbb
jo
je
adc
test
movs
sub
in
jl
pusha
in
cwde
(bad)
cmp
and
mov
lock
cli
mov
cdq
mov
adc
sar
sbb
mov
cmp
jp
dec
mov
sub
imul
outs
cmp
daa
add
jg
jns
out
in
jnp
out
cmp
js
add
push
test
xchg
push
data16
int3
jae
outs
cmp
xchg
push
cmp
pop
sub
into
mov
lahf
dec
fs
arpl
test
mov
ret
fbld
inc
pop
push
push
test
dec
not
and
cs
jae
dec
fcmovb
leave
movs
jecxz
cmps
pop
dec
and
lds
pop
dec
sub
jnp
adc
xor
mov
dec
mov
fild
call
mov
in
test
retf
xchg
jo
jecxz
fs
nop
mov
in
mov
cdq
popf
push
ret
ret
es
mul
jge
retf
fst
add
stc
jge
rol
loopne
add
jmp
jb
(bad)
inc
in
stos
stos
xchg
pop
sub
adc
jle
loop
mov
out
xchg
mov
imul
stos
gs
test
retf
jmp
dec
pop
cwde
mov
jg
(bad)
leave
in
or
inc
sub
jp
jp
xor
mov
add
(bad)
cmc
mov
or
mov
fadd
adc
loope
shr
sbb
fbstp
cmp
inc
sub
(bad)
js
into
sti
jl
(bad)
enter
sti
jge
xchg
xor
jo
mov
push
mov
cmc
add
adc
sub
xor
jge
outs
(bad)
add
test
push
fdivr
mov
mov
outs
add
inc
loope
inc
sub
push
sahf
pop
stc
scas
cmp
lock
fild
data16
add
fcmovnbe
loop
pop
aaa
(bad)
lahf
je
or
cmps
das
adc
out
retf
out
neg
iret
adc
cmp
dec
je
cmp
cmp
iret
mov
pop
xchg
pop
inc
ds
lea
jo
gs
or
mov
je
push
imul
aam
stos
lods
adc
aad
sub
add
fidivr
push
(bad)
icebp
pop
aam
aaa
mov
xchg
test
mov
cs
jmp
pop
pop
lea
les
xor
adc
pop
or
add
mov
or
test
add
jb
xchg
test
je
int
push
xor
xchg
pop
dec
mov
inc
jecxz
arpl
das
es
inc
jb
rcl
retf
jbe
nop
ins
pop
xor
adc
and
sub
inc
inc
jae
inc
call
inc
imul
cs
outs
cmc
push
enter
pop
sbb
movs
mov
jmp
push
scas
repz
xchg
xor
dec
xchg
sub
ja
retf
shl
popf
imul
sub
mov
mov
fild
jmp
out
dec
mov
mov
fxch
int
sub
aas
jl
int3
imul
je
jecxz
clc
jmp
sub
add
xchg
mov
fidiv
xor
sub
fs
or
push
mov
push
cli
xchg
dec
jl
test
mov
and
repz
retf
cmc
sub
push
stc
pop
sbb
mov
mov
pop
ror
ret
(bad)
jmp
adc
pop
imul
into
xchg
inc
(bad)
call
mov
aas
dec
enter
std
cmc
add
cs
sar
push
xor
cmp
fs
aad
mov
inc
inc
je
adc
adc
cmp
cs
mov
dec
cmp
cmp
sahf
lods
mov
mov
push
push
fdiv
cli
daa
repz
retf
adc
xchg
clc
or
jno
pop
and
ret
mov
mov
push
daa
dec
into
jno
hlt
add
movlps
sahf
xchg
or
(bad)
fs
std
es
push
mov
or
pop
mov
retf
scas
sbb
or
xor
hlt
cmp
jge
xchg
bswap
call
cmp
inc
leave
xlat
std
mov
cmp
dec
jae
mov
jns
pop
stc
and
and
or
aaa
jno
mov
rol
jge
std
xlat
xor
scas
jecxz
imul
pop
cdq
sahf
clc
leave
aaa
fcmove
jb
jl
out
pop
xor
add
xchg
cdq
xlat
jno
adc
idiv
xor
pop
fcom
rol
push
xchg
jg
lea
sub
enter
sub
adc
cmps
add
add
gs
and
jne
cmp
dec
(bad)
mov
es
adc
mov
adc
push
cs
sub
call
jno
add
jno
neg
cmps
cli
shl
(bad)
mov
hlt
(bad)
inc
xchg
jecxz
js
push
inc
ja
and
xor
push
ja
mov
out
pop
mov
xchg
or
setnp
cmps
hlt
mov
mov
push
icebp
jne
lahf
pop
jmp
ret
cmps
(bad)
pop
aad
js
cli
pop
pop
pop
loop
inc
mov
sbb
push
std
adc
dec
xchg
push
pusha
sbb
push
and
dec
call
sbb
xchg
test
scas
mov
xor
frstor
xor
loope
pop
inc
dec
ja
mov
test
das
test
push
sub
out
jno
mov
inc
adc
iret
jle
in
and
aas
hlt
retf
mov
pop
xchg
push
aad
push
push
xchg
sti
cwde
sub
fcomip
sti
mov
jnp
(bad)
and
mov
adc
fsubr
mov
xchg
sbb
cmps
cmps
mov
jb
retf
in
shr
dec
out
mov
add
add
iret
ror
xor
mov
scas
dec
fisubr
imul
mov
mov
jno
repz
jmp
(bad)
mov
pmulhuw
xchg
je
xchg
push
and
inc
adc
add
iret
add
cmp
cmp
sub
pop
popf
fld
add
push
jnp
xchg
test
jno
adc
outs
cmps
mov
arpl
adc
xor
mov
test
or
fadd
cmp
out
ret
fldcw
cmp
lods
repnz
loope
push
mov
ficomp
in
cld
aad
pop
outs
push
ins
ja
xchg
adc
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
out
inc
or
pcmpeqw
dec
mov
push
xchg
mov
or
in
int3
pop
int
inc
push
xchg
rcr
sub
lea
cmp
(bad)
dec
xchg
xchg
daa
xlat
lods
rcl
push
dec
cmp
sbb
push
repz
mov
cdq
retf
jne
test
adc
xor
and
adc
inc
pusha
pop
mov
es
inc
scas
sub
(bad)
in
mov
xlat
std
inc
mov
dec
xchg
or
rol
mov
in
(bad)
adc
popa
ss
jno
adc
bound
sub
clc
icebp
mov
adc
cmp
pushf
in
inc
mov
jbe
push
movs
mov
retf
cmp
sbb
pop
jg
lock
pop
shl
pushf
icebp
add
inc
div
inc
inc
mov
nop
pop
data16
fwait
cmp
adc
mov
xchg
dec
jbe
mov
shr
xchg
inc
movs
addr16
jmp
lock
(bad)
repz
sub
xor
popf
pop
lock
popfw
nop
inc
ficom
push
push
sti
cwde
mov
stos
or
sbb
push
or
dec
dec
ss
jo
pop
pop
xchg
clc
aad
push
jno
mov
call
popa
aam
fiadd
mov
mov
(bad)
adc
mov
and
in
mov
push
pop
push
jmp
pop
mov
mov
std
push
arpl
and
ror
repz
mov
and
fisttp
cwde
sbb
in
cli
and
retf
dec
pop
add
aad
loopne
sub
ret
ret
jecxz
pop
iret
out
sub
mov
and
pop
pop
cmp
sbb
outs
pop
repz
popf
xchg
test
jmp
bnd
hlt
outs
sbb
pop
mov
and
mov
or
add
mov
lods
jns
clc
sub
rol
popa
mov
jmp
sahf
cmps
sbb
retf
and
call
iret
fisttp
xchg
push
rcr
mov
add
jne
fistp
into
sub
test
movs
mov
in
and
enter
(bad)
push
mov
push
sbb
std
jbe
in
int
cmp
pop
xor
xor
jge
dec
xor
nop
fisub
fwait
mov
lods
push
mov
movs
scas
cmp
add
(bad)
(bad)
sub
and
sub
sbb
(bad)
aam
inc
push
xor
cmps
lea
ss
mov
or
mov
out
iret
xor
retf
(bad)
(bad)
jae
pop
ins
inc
adc
sbb
cmps
inc
sbb
lods
add
mov
stc
jmp
ror
push
push
inc
mov
push
stos
dec
gs
cmps
ret
loop
std
mov
cmc
cmp
mov
call
push
or
push
stos
add
xlat
mov
lods
xor
stc
and
popf
jle
add
mov
aam
ud2
outs
pop
mov
dec
lock
icebp
fnstenv
ret
(bad)
leave
pop
mov
ret
xchg
das
dec
hlt
inc
sub
sub
in
repnz
jnp
add
es
xor
scas
sti
fstp
jno
adc
jns
(bad)
(bad)
je
out
sysret
out
pop
sbb
xor
pusha
imul
ins
retf
cmc
push
addr16
dec
jno
sahf
test
pop
out
push
out
inc
jbe
test
lock
fwait
mov
setg
and
pop
pop
(bad)
mov
ret
mov
push
frstor
movs
jo
cld
mov
clc
ss
test
xor
push
mov
aaa
add
add
push
out
inc
stos
fmul
mov
mov
pop
scas
xor
les
add
sub
ffreep
idiv
dec
and
and
bnd
mov
inc
or
leave
ret
push
sub
add
and
shr
mov
enter
rep
or
movs
popf
fadd
out
xchg
push
rol
mov
ss
dec
inc
outs
cmp
lods
or
jmp
mov
cwde
jl
add
push
iret
sub
adc
sbb
push
ss
aas
pop
or
into
popf
stc
sbb
retf
mov
icebp
mov
dec
mov
stos
std
dec
repnz
or
test
movsx
mov
pop
aas
jae
js
lea
in
aas
push
mov
rol
or
fisttp
rol
ret
mov
dec
test
sti
push
push
pop
(bad)
mov
and
push
cli
inc
push
pop
fistp
hlt
scas
(bad)
xor
scas
and
adc
gs
adc
mov
add
push
div
lods
fsub
addps
xor
gs
fucomp
js
push
pop
dec
push
imul
mov
sbb
jle
arpl
repz
cld
pop
data16
pop
adc
(bad)
fcomp
movs
sbb
ret
inc
push
cld
sub
gs
cwde
mov
lods
mov
pop
mov
idiv
loopne
xchg
cmc
push
sbb
stos
test
aam
inc
dec
dec
add
fidivr
and
enter
in
call
mov
arpl
je
mov
dec
in
adc
mov
test
div
push
mov
adc
shr
sub
stos
out
repz
shr
shl
mov
imul
dec
fstp
icebp
add
sub
sti
stos
clc
push
sbb
pop
in
sar
stos
pop
adc
out
aas
mov
mov
and
je
jb
jae
ja
inc
rcl
js
adc
pushf
inc
(bad)
or
(bad)
sub
cdq
out
pop
lahf
call
cmps
mov
dec
outs
inc
adc
jno
bound
xchg
or
adc
lods
mov
sub
scas
rol
mov
dec
test
jb
jne
jno
addr16
add
dec
xchg
test
or
es
pop
jmp
lock
ficom
push
outs
xchg
xor
rcr
repz
js
(bad)
and
mov
icebp
cmp
iret
enter
cwde
cmp
xchg
pop
gs
adc
into
or
not
jmp
cmps
dec
outs
and
daa
test
sbb
out
cmps
push
movs
daa
(bad)
cmps
das
xchg
cs
add
fmul
xchg
pop
popf
shr
pop
sbb
xchg
and
outs
mov
jmp
outs
jge
(bad)
push
push
or
adc
mov
mov
inc
xor
sbb
jge
or
cdq
js
cmp
fucomip
inc
mov
push
lahf
xchg
or
sbb
(bad)
scas
fnstsw
into
lahf
fldenv
rol
add
stos
xchg
sar
push
xor
cmp
dec
test
xor
sbb
retf
sar
cld
clc
test
adc
push
mov
pop
(bad)
add
pop
inc
scas
mov
loope
mov
mov
movs
std
cmp
out
add
jns
xchg
xchg
mov
mov
mov
adc
xchg
jo
or
push
inc
lea
int
xchg
jno
jne
lods
xchg
adc
xor
es
test
out
sbb
or
ins
xchg
out
sub
dec
test
inc
pop
ret
in
scas
jle
das
xor
adc
sub
inc
pop
lock
pop
adc
aas
retf
xor
push
xchg
stc
repz
adc
cmp
push
mov
xchg
mov
dec
les
cmps
jo
jp
stos
xor
sbb
les
jg
sub
aad
inc
fld
sbb
xchg
jbe
add
movhps
mov
jmp
jnp
imul
xor
int
cmp
aas
push
aaa
mov
pop
test
sahf
out
jge
lea
pop
sahf
adc
mov
sub
rol
jns
cmp
scas
jo
outs
and
lock
fidivr
mov
(bad)
(bad)
cmc
cwde
stos
popa
cmp
mov
or
loope
retf
pusha
jmp
sti
pop
add
push
xchg
mov
mov
out
inc
adc
cli
repnz
xchg
sub
test
sar
add
jge
das
rcl
dec
ins
daa
sbb
lods
push
adc
xor
out
xchg
xchg
in
push
push
ja
sbb
push
clc
lahf
jg
mov
jae
lods
dec
aad
fbstp
daa
inc
sbb
pusha
cli
and
mov
cmc
call
clc
mov
push
test
pop
outs
cmp
ds
sub
repnz
ss
inc
ror
imul
mov
int3
(bad)
jmp
mov
xor
add
jno
xor
push
outs
sbb
dec
out
jbe
pop
and
add
mov
xor
xchg
adc
mov
mov
jle
ror
mov
jmp
adc
cli
and
xchg
pusha
jae
repz
mov
jl
xchg
ret
(bad)
xchg
data16
pop
pop
out
add
cmp
pop
mov
stos
pop
(bad)
enter
aam
and
jmp
test
paddusb
ins
or
sahf
dec
clc
outs
popa
or
sbb
popf
out
fcomp
jle
and
movs
sti
adc
stos
push
mov
bound
pop
pop
lgs
cld
ss
pop
fnstcw
pop
and
lock
pop
mov
mov
pop
cli
mov
cmp
lock
xor
lahf
imul
into
or
jp
jge
out
push
push
sti
pop
retf
std
mov
xchg
xchg
adc
out
adc
jnp
das
inc
arpl
scas
les
inc
imul
mov
dec
xchg
cmp
stos
iret
jecxz
xchg
movs
nop
and
test
(bad)
push
cmp
add
lods
retf
push
into
or
jb
iret
hlt
dec
rcr
lahf
sahf
cs
daa
and
mov
push
push
and
fmul
and
push
or
and
loope
jo
jno
sti
pop
les
nop
out
call
push
and
push
mov
retf
mov
(bad)
ret
test
int
(bad)
fdivr
adc
cmps
stos
inc
and
mov
inc
outs
mov
xchg
push
fild
jo
(bad)
pop
xchg
cmp
mov
call
sub
push
mov
mov
movs
fisttp
cmps
mov
pusha
icebp
dec
cmp
test
add
adc
popf
pusha
mov
sbb
pop
and
mov
daa
jb
out
fsubp
test
push
jnp
rcr
and
mov
inc
or
mov
xchg
das
jg
or
xor
test
cmps
mov
and
jbe
aas
and
shl
(bad)
leave
fbstp
add
sbb
pop
push
movs
(bad)
jge
scas
shr
jle
jg
dec
clc
pop
mov
js
cdq
adc
dec
and
dec
aas
mov
sub
mov
out
pop
test
popf
xor
xor
jae
fcom
jb
scas
push
inc
sbb
ret
and
cmp
mov
int
jne
mov
push
loope
cmp
hlt
adc
push
jl
inc
and
mov
push
and
cmp
xchg
add
pop
or
mov
push
mov
test
repz
ins
cwde
mov
dec
mov
(bad)
cli
or
lock
xchg
(bad)
mov
pavgw
mov
xchg
push
push
fnstenv
inc
push
jns
in
pop
lahf
dec
dec
loope
mov
xchg
or
and
mov
add
xlat
imul
adc
xor
mov
loopne
push
test
sbb
sub
movs
push
xor
les
adc
aad
(bad)
xchg
daa
enter
jmp
dec
xchg
std
mov
or
dec
leave
and
push
add
loop
je
add
add
dec
out
test
mov
dec
and
inc
mov
or
in
mov
idiv
dec
fsub
(bad)
adc
sbb
mov
and
imul
push
sub
movs
xor
shr
mov
iret
(bad)
hlt
outs
adc
adc
xchg
mov
sahf
sti
and
das
push
push
or
mov
cmp
cmp
mul
xor
call
aaa
push
xchg
mov
(bad)
mov
imul
je
xchg
fist
push
push
inc
mov
stos
xchg
lods
xchg
repnz
mov
or
jg
mov
call
stc
jecxz
out
sti
out
mov
ror
retf
in
push
fdivr
sub
out
pop
jg
xchg
add
ror
in
pop
xor
out
mov
jne
adc
out
jge
inc
sbb
mov
or
xchg
sub
push
or
dec
stos
ins
sbb
in
xchg
cmc
xor
arpl
cmps
icebp
in
pop
sub
and
rcr
ds
xor
rol
cmps
or
sbb
aam
addr16
dec
mov
cmp
cmps
loop
sbb
add
mov
pusha
sub
call
ja
lds
mul
dec
sbb
lods
ins
cmp
push
ins
loope
dec
lds
and
jle
dec
xlat
lds
jp
dec
mov
cmp
ins
fsub
outs
movs
pop
test
les
xor
loope
(bad)
les
adc
repnz
sub
inc
sbb
cs
repnz
jle
sbb
inc
sub
cmp
pop
imul
jno
jbe
pop
(bad)
(bad)
js
or
sar
push
stos
fs
or
(bad)
repz
mov
dec
aam
mov
jnp
stos
retf
je
(bad)
dec
(bad)
bswap
mov
int
imul
ror
mov
adc
xchg
sbb
mov
retf
jle
xlat
mov
fld
cmc
out
push
jmp
xchg
ret
loop
push
ret
xor
mov
mov
shr
sahf
xchg
les
jmp
dec
xchg
rol
xchg
and
jmp
(bad)
dec
into
retf
cli
sub
cdq
pop
loopne
cpuid
loopne
enter
xor
in
mov
jne
mov
enter
imul
loope
cmp
(bad)
ss
push
gs
shl
dec
fimul
loope
retf
dec
sub
mov
mov
into
push
lahf
or
test
jle
cwde
cmps
retf
and
fcomp
mov
out
int3
mov
js
scas
stos
inc
and
(bad)
cdq
xlat
adc
xchg
mov
sti
and
ret
jne
retf
or
ficom
pop
pop
xor
cdq
jle
xor
mov
push
bnd
and
scas
and
adc
ja
push
and
test
jno
ds
xlat
add
sub
adc
xchg
mov
xchg
sbb
aas
fcomp
arpl
mov
sahf
sbb
outs
pop
pushf
adc
sbb
mov
ret
push
dec
sub
dec
xchg
jmp
in
or
add
cmp
out
or
dec
movs
movsx
ss
and
test
push
in
mov
les
cmp
inc
rol
mov
xor
movs
jbe
(bad)
cmp
arpl
outs
or
xlat
inc
ins
addr16
inc
xchg
fmul
jne
pop
daa
mov
cmp
or
jnp
jns
and
int
hlt
lods
mov
fstp
push
nop
jae
xor
addr16
dec
xchg
into
inc
(bad)
jns
cmps
test
fcom
cld
pop
mov
mov
sbb
xchg
xchg
in
fnstcw
inc
dec
mov
cmp
ins
inc
dec
fcom
gs
nop
aas
inc
in
lea
imul
scas
cmp
xor
repz
fsubr
push
movs
sub
sub
stos
jns
fcom
xor
mov
fstp
pop
dec
jmp
repnz
jo
jle
dec
xchg
neg
aas
imul
loop
mov
adc
cwde
test
xor
(bad)
or
loop
mov
dec
data16
pop
pusha
mov
ret
push
xor
(bad)
fadd
(bad)
stos
inc
shr
and
shl
jae
inc
jge
and
or
jbe
push
xchg
lahf
stc
js
es
mov
iret
(bad)
retf
xchg
pop
dec
lahf
mov
retf
pop
push
jmp
cmc
mov
pop
shl
mov
dec
and
push
rol
pop
jae
arpl
adc
mov
add
push
cdq
out
movs
ds
xchg
add
pusha
jae
xchg
(bad)
aam
inc
outs
pop
add
std
push
cwde
aaa
(bad)
out
imul
sub
xor
cwde
in
jo
pop
mov
cmp
mov
mov
ins
jmp
xor
fs
dec
xchg
push
outs
jge
(bad)
stc
repnz
mov
test
ds
lods
lea
ja
adc
sub
ins
cmps
add
cmc
xlat
mov
mov
imul
or
sub
jmp
(bad)
jns
movs
icebp
sbb
ret
std
jp
jecxz
lock
pusha
out
int3
popf
dec
sahf
push
pop
dec
sbb
jp
jmp
sbb
leave
jae
rcr
lock
shr
(bad)
sti
and
cli
ret
ficomp
inc
cmp
or
adc
mov
out
shr
in
cs
jmp
pop
xchg
sbb
inc
mov
mov
mov
rcr
jl
xor
push
lods
push
pop
imul
lahf
mov
adc
pop
push
aas
jnp
mov
inc
mov
cmps
rcr
cmc
push
and
lea
inc
jno
out
sbb
hlt
push
in
hlt
repnz
or
in
cmps
retf
call
mov
and
adc
lock
dec
or
outs
pushf
pusha
cmp
cmc
arpl
movs
in
cs
cmp
fild
sub
add
retf
dec
jno
pushf
shr
pop
scas
(bad)
add
mov
lods
jle
sub
adc
neg
add
les
repnz
xor
pusha
jns
int
push
loopne
push
sbb
cmp
push
mov
shr
and
ror
call
mov
and
xor
(bad)
pop
cld
inc
xchg
and
xor
leave
adc
fadd
pop
fcmovnb
mov
xor
loop
das
loop
in
sar
rcl
sub
cmp
imul
repnz
(bad)
push
sbb
xchg
pop
sbb
(bad)
jg
std
mov
scas
fsubp
jmp
ds
xor
jmp
xchg
clc
mov
add
into
mov
mov
xchg
and
push
inc
fadd
add
stos
xchg
enter
pushf
xor
(bad)
or
add
mov
repnz
cwde
fldenv
sub
pop
add
sub
jno
sbb
inc
mov
adc
jne
pop
ds
mov
outs
rcr
add
ss
aad
pop
imul
fwait
jle
outs
mov
dec
sbb
cmps
ficom
sbb
mov
cld
xor
xor
cdq
inc
lods
ret
sub
mov
jb
inc
add
add
cmc
das
cwde
cmp
sbb
jge
addr16
stc
push
mov
cdq
mov
gs
test
ins
fsub
jmp
lock
and
jp
inc
out
leave
or
jl
cmp
in
sbb
mov
pusha
aad
inc
inc
dec
inc
les
add
and
push
xor
lock
pop
out
jg
push
push
out
sub
div
pop
sub
xor
(bad)
fwait
imul
pop
scas
push
mov
add
sub
xor
sub
js
or
mov
xchg
mov
adc
sbb
jg
loopne
push
lahf
call
mov
hlt
dec
mov
cmp
jnp
mov
mov
dec
push
loopne
int
fcom
lods
or
mov
test
cwde
es
aas
pop
and
retf
mov
js
mov
es
inc
ror
xchg
sti
mov
inc
loopne
inc
sbb
jnp
inc
adc
inc
mov
add
cmps
mov
adc
outs
das
xchg
push
popf
daa
push
push
mov
les
pusha
xchg
adc
shl
and
xchg
or
jmp
mov
stos
pop
ds
or
cs
dec
mov
jp
inc
dec
jne
xchg
jns
xchg
test
jo
call
inc
lds
pop
sahf
cld
sbb
les
mov
sub
scas
ins
stos
mov
lods
jmp
call
or
adc
xor
cld
cmp
xor
mov
into
xchg
jl
xchg
and
lea
call
push
iret
neg
sbb
or
in
ficomp
cli
(bad)
xor
mov
(bad)
sbb
mov
or
jmp
mov
lea
xchg
dec
arpl
sub
dec
rcl
test
lea
loopne
cmp
mov
lods
(bad)
retf
jg
out
repz
movs
outs
cmp
sti
aad
addr16
jmp
cmp
pop
stc
dec
cmp
or
sbb
mov
push
mov
in
lahf
mov
push
jp
sbb
push
push
retf
adc
mov
mov
push
lods
inc
imul
xchg
aad
sub
mov
rol
mov
xor
mov
(bad)
stc
inc
(bad)
and
aas
ja
enter
add
rcr
sbb
lahf
ror
mov
and
(bad)
push
and
push
into
int
lds
adc
sbb
mov
dec
sub
jo
aaa
daa
push
xchg
ret
mov
or
pop
sar
add
in
pop
ss
pop
cli
cmp
in
das
rcl
adc
pop
inc
(bad)
jbe
loopne
in
daa
es
lahf
pop
icebp
jl
xchg
mov
dec
aaa
dec
out
push
and
lahf
xor
cmp
jmp
dec
jmp
stos
cmp
jl
mov
adc
push
sti
aaa
iret
rcl
dec
xchg
adc
push
push
add
or
iret
dec
in
jne
rcr
(bad)
jmp
and
lds
sub
sbb
outs
mov
stos
jno
pop
out
das
cmp
xor
dec
xchg
iret
in
rcl
xor
imul
cmp
in
lds
or
clc
or
cmp
or
int
or
jp
pop
ins
cmp
mov
inc
xchg
test
xlat
dec
or
div
adc
mov
and
sti
sbb
and
jbe
jmp
mov
and
pop
mov
jle
arpl
pop
rcl
mov
mov
jae
pop
jecxz
xor
outs
mov
pop
xchg
jae
aas
cdq
push
retf
adc
and
mov
test
ins
mov
inc
(bad)
das
push
and
mov
movs
loopne
mov
fdiv
pop
lods
and
inc
cmp
sub
cld
add
pusha
push
or
shr
inc
mov
mov
mov
xor
arpl
in
retf
imul
retf
sub
(bad)
(bad)
ja
and
pop
inc
pop
xor
arpl
neg
push
lds
and
push
outs
mov
dec
add
cmp
(bad)
sub
or
add
ss
mov
push
test
test
pop
int
or
cmc
push
pop
mov
(bad)
aad
mov
aad
mov
in
cmp
pop
lds
adc
mov
fisttp
mov
push
iret
pop
(bad)
mov
add
out
shl
fbstp
test
mov
sbb
xchg
repz
sub
dec
jae
js
cmps
or
mov
mov
inc
loopne
push
sub
pusha
das
jb
lods
xor
jae
pop
mov
aas
push
hlt
je
(bad)
shl
jl
mov
add
icebp
sub
or
sbb
fdiv
(bad)
mov
inc
dec
jmp
sbb
adc
cli
pop
movs
imul
std
out
xor
mov
ds
add
mov
add
add
jae
test
cmp
mov
add
mov
mov
mov
ja
ret
mov
cmps
aaa
stc
cmp
adc
jle
mov
push
or
(bad)
int
sbb
call
retf
pop
imul
dec
leave
aam
mov
xchg
enter
and
daa
mov
das
xchg
sbb
add
adc
push
scas
sqrtps
js
imul
or
test
mov
cld
out
fiadd
fsubr
hlt
cwde
imul
pusha
dec
das
call
inc
pop
scas
rcl
gs
push
pop
clc
or
(bad)
jnp
retf
push
inc
adc
iret
mov
ret
sbb
jb
shr
and
mov
clc
jne
sbb
mov
out
fst
mov
cmp
jp
arpl
aaa
std
sub
repz
dec
popa
scas
outs
popf
mov
mov
call
mov
add
cli
mov
pop
sub
sbb
xchg
inc
ja
rcr
test
rol
sbb
xchg
inc
popa
or
xchg
and
shr
cs
sbb
(bad)
sub
xor
cmp
inc
repz
data16
cmp
jg
add
sbb
aaa
jl
xor
icebp
sub
and
rol
(bad)
cmp
xor
adc
inc
(bad)
rcr
das
in
cmps
mov
leave
inc
jno
call
je
inc
inc
dec
popf
dec
fsub
dec
sahf
sbb
mov
jb
push
cs
test
xor
test
loope
test
clc
retf
aad
mov
std
xchg
sub
or
and
jnp
retf
pop
pop
inc
and
mov
test
pop
fs
fbstp
lahf
adc
iret
call
leave
cmp
into
jg
rol
dec
fldl2t
cwde
pop
mov
xchg
sti
push
push
std
or
not
fcomp
dec
adc
(bad)
in
push
retf
jecxz
je
fcom
or
dec
cld
pushf
(bad)
fcom
loop
popf
ins
loopne
push
in
inc
dec
shl
loopne
iret
outs
int
xchg
adc
rcr
fcmove
dec
inc
push
pop
push
cmp
jns
dec
imul
adc
sbb
(bad)
mov
pop
imul
dec
(bad)
cmp
sbb
movs
js
jno
shl
add
pop
adc
jmp
lahf
push
inc
inc
aaa
mov
xchg
sbb
jnp
stc
imul
call
imul
out
test
push
test
jle
popa
dec
ins
iret
sti
fimul
imul
sti
call
shl
popa
test
cmp
inc
outs
mov
xchg
ret
fistp
xchg
push
or
ins
div
loopne
inc
pop
mov
fcmove
ror
mov
cmp
jne
ret
rol
std
dec
movs
in
sti
es
sub
test
cmp
adc
push
shl
js
lods
rcr
mov
jns
js
sbb
mov
mov
inc
nop
cmp
rcr
xlat
retf
clc
pop
sub
jnp
cmp
jne
sbb
adc
xor
loopne
xchg
sbb
add
mov
adc
clc
popf
ret
aas
sub
popa
mov
sub
mov
cmp
es
jge
repnz
adc
dec
dec
and
loop
dec
movs
dec
shl
aam
fnstsw
push
jo
cwde
mov
push
mov
jnp
int3
dec
adc
mov
sub
and
mov
addps
dec
cmp
or
push
or
sbb
out
xchg
(bad)
cmp
xchg
inc
xlat
aad
push
das
ss
cmp
xchg
add
mov
sbb
iret
sub
repz
(bad)
out
jecxz
mov
ror
pop
cli
retf
mov
or
lds
inc
pop
push
das
mov
mov
clc
adc
lods
sub
rcl
pop
ret
sahf
sub
add
pop
push
ret
mov
jge
aad
je
jmp
jns
cmp
jne
push
ss
pop
jmp
push
jns
and
popa
jl
shl
inc
pop
inc
xchg
in
add
ret
mov
arpl
fdiv
and
fmul
dec
xor
mov
stos
rcr
(bad)
inc
mov
push
jg
mov
sbb
jl
jns
push
or
cmp
repz
dec
inc
call
mov
sahf
mov
nop
and
cmp
dec
(bad)
push
je
jmp
int
setl
xchg
jp
sub
inc
(bad)
xor
lahf
pop
enter
leave
ret
xchg
jmp
ja
fldenv
cmp
test
xchg
pop
inc
dec
ins
sbb
clc
jne
adc
mov
cmp
adc
and
fwait
jmp
push
aad
fwait
push
push
pop
jno
pop
mov
push
iret
jnp
xor
jmp
xchg
ss
mov
xor
fnsave
repnz
cmp
jae
fs
sub
sub
xchg
adc
mov
mov
xchg
sub
cmp
jb
and
leave
test
mov
mov
in
mov
pop
std
mov
scas
sbb
das
push
adc
fwait
jb
mov
lods
sti
fcomp
push
mov
lea
and
out
sti
lea
js
inc
cdq
stos
ins
sti
mov
aam
xchg
dec
mov
mov
aaa
or
pop
nop
and
add
mov
jp
xchg
jg
add
ror
push
fistp
sbb
jno
imul
mov
mov
jge
mov
jb
or
xor
push
add
es
xor
ficom
ret
rcr
pop
aaa
push
xchg
sbb
and
cli
add
out
ficom
add
jns
fisttp
retf
movs
cli
inc
cmp
push
dec
icebp
sub
call
add
pop
data16
(bad)
in
call
sub
cs
data16
stos
jne
jmp
aas
pop
popa
scas
daa
add
mov
sbb
mov
mov
xchg
(bad)
ins
loop
jg
test
sbb
push
sub
or
mov
push
cwde
adc
inc
int3
dec
mov
(bad)
es
add
cdq
ss
adc
jo
cmp
mov
(bad)
clc
pop
jno
out
bound
cmp
mov
dec
add
mov
nop
jae
cmp
cmp
(bad)
leave
dec
pop
mov
outs
xor
loop
xchg
mov
xor
mov
fidivr
mov
or
sbb
ret
mov
dec
imul
stos
pushf
shr
mov
lea
inc
call
sub
int
shr
sar
call
repnz
pop
ins
xor
sbb
or
pusha
sub
inc
xor
and
dec
xchg
sbb
sub
in
mov
inc
cld
add
popf
data16
pusha
jecxz
dec
arpl
mov
jge
leave
leave
out
mov
add
movs
cmc
cmp
mul
call
jae
and
sbb
cmp
pusha
jns
inc
cmp
sar
test
mov
int3
call
sbb
pop
fsub
int3
out
ror
daa
rcr
loopne
jns
mov
mov
loope
pop
mov
test
sbb
mov
(bad)
xor
in
cmps
fisttp
jecxz
xchg
add
loopne
nop
mov
loope
ficomp
mov
xor
or
repnz
cli
adc
jb
rcr
adc
jae
push
sub
sti
add
ins
cmps
in
repz
jmp
repz
push
pop
mov
and
out
mov
mov
push
rcl
imul
pop
scas
loopne
xchg
hlt
pop
das
ret
add
ret
xchg
or
fwait
hlt
and
inc
cmp
mov
in
add
mov
adc
les
inc
in
sub
shl
stos
xchg
fdiv
scas
mov
cli
inc
iret
and
in
inc
jmp
and
xor
into
mov
pop
jno
int
cli
and
pop
fld
fucomp
fs
jge
dec
test
pusha
outs
call
mov
shl
cld
pushf
xlat
pop
adc
clc
mov
bound
test
push
fwait
jb
add
mov
sub
gs
(bad)
js
mov
xor
push
jle
dec
pop
ins
cld
shl
movq
test
mov
jl
xlat
mov
stc
sti
or
xor
lock
(bad)
fld
inc
sbb
mov
popf
mov
push
xchg
fucomp
xor
in
in
test
jle
jmp
or
add
pop
mov
xlat
das
out
mov
xchg
ss
mov
(bad)
mov
sub
hlt
push
ror
(bad)
(bad)
rol
jbe
int3
pop
outs
dec
data16
cmp
clc
push
push
pop
mov
ja
cli
and
dec
ss
mov
adc
outs
xlat
outs
jo
mov
jno
mov
push
repz
add
out
mov
ffreep
hlt
(bad)
sbb
sub
loope
cwde
sub
jbe
xor
fstp
ss
in
mov
or
or
pop
ins
mov
and
je
hlt
and
xor
ror
xor
(bad)
xor
push
dec
daa
dec
jno
xor
pop
jmp
mov
ss
dec
mov
push
outs
aas
lods
cmc
fistp
mov
je
(bad)
jg
add
jne
push
cmp
aas
js
cli
xor
sub
mov
call
repz
idiv
add
loopne
or
mov
retf
je
bound
int3
add
(bad)
stc
pop
ja
dec
or
mov
xchg
mov
imul
pop
fcmovbe
mov
les
cwde
call
stc
inc
enter
scas
imul
stos
push
jno
xchg
sbb
xlat
js
inc
not
test
nop
pop
xlat
dec
ret
ins
or
in
ds
push
outs
shl
jo
stc
ds
cs
popf
daa
retf
loopne
cmp
and
movs
in
ret
and
inc
jbe
inc
mov
repz
out
and
jp
push
xchg
mov
xor
ins
ins
or
mov
cmp
das
pop
movntps
jb
fsubr
dec
pcmpgtb
call
mov
outs
int
aam
sar
dec
mov
rol
sub
js
pop
push
retf
adc
mov
inc
cmps
dec
pushf
cmp
das
and
cmp
cs
xor
mov
cmp
imul
add
sbb
adc
jmp
dec
jecxz
loopne
cmps
lsl
sub
adc
adc
movs
fisttp
mov
pushf
in
cmp
pop
jae
cmp
ins
xor
cmc
les
push
mov
jecxz
dec
mov
lock
cs
pop
push
sbb
xor
icebp
adc
ror
sbb
mov
cmp
cmp
sbb
xor
retf
dec
inc
jne
int
jne
shl
loopne
aaa
ds
dec
inc
xchg
jb
push
jmp
inc
sbb
pop
push
push
xchg
sbb
push
inc
lods
jmp
push
scas
mov
test
xor
mov
clc
sti
shr
push
mov
mov
out
rcr
xlat
sub
xor
shl
out
ins
sbb
xchg
(bad)
gs
cld
mov
mov
fwait
push
adc
pushf
and
or
test
call
mov
xchg
add
add
leave
cwde
mov
cmps
xchg
inc
out
out
cli
and
sub
shr
in
fiadd
sbb
cmp
cwde
retf
cmp
add
push
ret
sub
dec
loopne
adc
push
dec
jns
aas
push
shr
(bad)
fild
jl
imul
(bad)
sar
or
imul
cmc
pop
mov
inc
or
mov
push
shl
adc
add
mov
or
sub
test
repz
sub
ja
sub
and
push
sbb
jg
xor
clc
gs
add
ds
dec
sub
lea
xor
scas
ins
push
retf
xchg
hlt
fnstenv
loop
adc
pop
jle
cli
mov
je
dec
mov
popa
add
(bad)
test
dec
mov
es
cld
outs
pop
cmp
fwait
(bad)
scas
sub
inc
mov
add
or
push
jno
adc
ss
mov
xlat
pop
lods
push
bound
mov
popa
push
jbe
(bad)
stos
pop
jb
cmc
sub
mov
div
mov
sahf
retf
and
jb
and
sbb
rcl
pop
fwait
call
pusha
pop
push
jb
mov
dec
rol
call
add
pop
icebp
sbb
retf
inc
int
test
push
mov
ret
adc
clc
loope
xchg
test
stos
push
adc
mov
call
push
xchg
fwait
push
scas
or
push
and
mov
dec
cmp
ins
or
sub
gs
and
push
ss
(bad)
cmp
pop
jl
lds
ins
int
inc
cdq
aas
retf
cmp
sub
xchg
jecxz
movs
fild
mov
cmpps
test
sbb
or
aam
lock
jnp
pop
(bad)
jp
xchg
xchg
jmp
dec
lds
sub
push
test
sub
and
xor
pop
faddp
inc
aad
fcomi
call
sub
cmove
xchg
mov
xor
mov
inc
lea
jp
push
rcl
adc
mov
fadd
(bad)
jns
xlat
in
scas
cwde
cld
adc
out
sbb
adc
inc
je
idiv
lods
fwait
gs
mov
es
sbb
or
mov
cmp
out
push
jbe
sbb
repnz
jp
pop
and
sti
jae
mov
or
and
mov
inc
mov
mov
jmp
inc
in
imul
jge
sbb
fcmovnb
movs
ja
out
adc
sub
sub
jae
loopne
shl
jmp
or
pop
dec
and
in
stc
add
cmps
ret
push
push
sbb
or
fistp
xchg
daa
jmp
push
mov
mov
and
and
in
or
lahf
outs
leave
dec
in
stc
jnp
push
aam
lods
mov
int
sub
cs
std
fxch
adc
xlat
jnp
mov
int
dec
(bad)
(bad)
inc
cmp
test
push
icebp
pop
fld
xchg
cld
int3
pop
jae
dec
inc
or
test
pop
mov
cmps
mov
loop
and
mov
push
push
outs
fldcw
sub
or
push
fcomi
push
and
popf
iret
imul
and
mov
mov
arpl
sbb
cdq
sub
xchg
ficom
xchg
pop
pop
lock
stc
mov
sub
int
daa
inc
es
stos
lock
in
fld
sub
repnz
mov
leave
and
push
nop
sahf
add
mov
jo
shr
in
ror
ror
je
add
push
stos
cmp
cmp
adc
mov
or
and
jg
(bad)
cli
push
adc
mov
pop
pop
sar
and
frstor
pop
jae
aas
cwde
outs
sbb
rol
fsub
pop
cmp
icebp
sub
repnz
es
jmp
jge
mov
or
mov
mov
sar
adc
lods
xchg
pop
add
sbb
outs
add
jge
cmp
(bad)
sahf
repz
mov
add
nop
hlt
mov
popf
inc
(bad)
push
ss
das
mov
inc
jmp
(bad)
in
pop
or
mov
test
mov
sbb
inc
repz
adc
mov
cmp
rol
dec
ret
jns
mov
dec
std
cmp
sbb
pop
jb
stos
jb
dec
mov
je
cmp
and
mov
jns
bound
je
fisub
pop
cmps
sub
lds
cmp
jge
mov
les
adc
xchg
pop
movs
aam
xor
push
mov
sahf
movs
inc
int3
and
fst
scas
sbb
out
push
cmps
enter
pop
xor
cmp
mov
daa
ret
cmp
and
sbb
add
fild
adc
bound
jae
ja
or
cmp
outs
fisttp
adc
ds
cli
inc
inc
jp
call
xor
inc
arpl
loopne
aas
cld
or
add
fwait
out
pop
and
cmc
fild
mov
jne
in
cmc
aaa
and
sub
outs
jl
jo
dec
inc
(bad)
mov
lock
stos
not
xor
mov
in
loope
(bad)
jnp
ja
adc
sahf
adc
jmp
xor
sub
mov
and
inc
cdq
popf
cmp
xchg
sub
(bad)
movaps
adc
xor
lahf
xchg
jecxz
push
nop
mov
pop
or
xor
ss
push
fstp
shl
push
iret
mov
fsubr
xor
sub
xchg
fadd
and
mov
cmc
bound
add
sbb
xor
pop
neg
mov
out
inc
and
imul
das
popf
and
in
xor
pop
popf
or
cmp
dec
inc
sbb
inc
ins
fdivrp
loopne
xchg
fs
inc
mov
xchg
lods
adc
xchg
mov
mov
fcmovbe
adc
jne
iret
loope
dec
loop
call
cmp
scas
mov
sub
cli
cmps
mov
dec
or
mov
pop
pop
mov
dec
fadd
in
push
and
xchg
adc
mov
push
jge
lods
sbb
inc
ret
(bad)
fadd
xor
add
jmp
xor
call
add
adc
cdq
js
jl
scas
ins
shl
pop
icebp
add
not
(bad)
in
mov
ficomp
mov
cdq
nop
in
int
jb
inc
enter
inc
mov
mov
ss
lahf
lods
(bad)
or
push
stos
cmc
jae
pop
adc
gs
popf
dec
cmp
or
outs
xor
lock
push
mov
add
out
call
jle
jmp
inc
or
inc
out
dec
fcom
mov
cmp
ins
pop
and
mov
adc
adc
clc
and
push
xor
and
(bad)
xchg
push
push
and
jae
or
fs
hlt
xchg
and
hlt
int3
bound
sbb
sub
(bad)
and
mov
mov
push
ret
mov
xor
xor
ror
xchg
sbb
ss
lods
cdq
mov
mov
test
inc
push
sar
test
jno
dec
(bad)
jbe
scas
mov
fs
retf
cmp
jno
inc
inc
jno
icebp
sbb
and
xchg
xchg
jecxz
pop
lds
dec
enter
cmp
sbb
dec
sbb
jle
xor
cmps
cmps
out
push
or
test
sbb
addr16
dec
pop
in
(bad)
mov
push
mov
mov
iret
lea
jo
adc
sti
push
arpl
xor
ret
ss
and
fidivr
cmp
fsub
cmp
inc
adc
in
push
inc
xchg
jle
mov
stos
rcr
outs
xchg
ror
mov
shl
retf
pop
push
pop
fsubr
mov
jp
std
xor
test
mov
rol
out
js
adc
inc
pop
adc
xor
sub
mov
adc
inc
les
(bad)
mov
mov
add
mov
rol
push
sub
mov
sahf
push
mov
mov
daa
aaa
pop
sti
fwait
add
cmp
ror
(bad)
push
jne
mov
rcr
ja
dec
jmp
xor
xchg
cs
dec
icebp
(bad)
xchg
add
mov
ss
loope
jle
push
jne
fsub
or
jnp
retf
mov
xchg
movq
adc
in
ret
jno
ds
inc
jnp
mov
pop
mov
ret
cmc
lahf
lock
int
sbb
inc
pop
push
retf
or
ret
dec
xor
dec
adc
aad
in
dec
push
mov
sti
push
xor
pop
and
sbb
cmp
mov
or
adc
jle
sti
sbb
mov
ds
xchg
cmc
movs
test
or
pop
mov
repnz
pusha
inc
mov
repz
jno
lock
mov
mov
jle
cmp
adc
mov
int3
movs
hlt
nop
test
sub
mov
pop
inc
shl
xor
call
dec
mov
sti
loope
pop
xchg
or
movs
fcmove
mov
jne
leave
scas
test
imul
daa
add
lahf
dec
push
inc
dec
fwait
in
mov
and
pop
cmp
cmp
mov
fcom
dec
xor
jnp
pop
and
add
or
arpl
cmps
sbb
cmp
mov
(bad)
mov
dec
push
jp
and
sbb
sub
and
fild
pop
dec
ins
scas
shl
pop
hlt
push
pop
repnz
pop
jl
fstp
push
loop
adc
aaa
xchg
dec
rol
stc
jnp
pop
adc
cmps
cmp
dec
(bad)
adc
xchg
divps
into
fdivr
cmp
int
adc
lods
push
lods
mov
add
mov
mov
dec
or
test
push
xchg
out
mov
dec
rcr
jmp
(bad)
jo
ret
cmp
or
repz
xlat
ret
fsub
in
push
mov
sbb
add
int
jb
ins
sar
pop
and
dec
bound
jmp
push
inc
jnp
dec
mov
inc
add
inc
ret
sti
mov
cmovae
inc
xor
mov
sub
das
dec
aas
cmp
and
xor
movs
sahf
fwait
icebp
scas
stos
and
cmp
or
clc
jnp
or
xor
mov
jnp
cmc
loope
movs
rcr
push
dec
mov
sbb
or
sbb
repz
(bad)
fidiv
ficom
jle
xchg
cmp
mov
in
out
sbb
ret
pushf
outs
cmp
xchg
lock
ins
inc
add
mov
xor
cmc
xor
bound
mov
mov
pop
push
sub
(bad)
push
mov
mov
in
cmc
std
popf
sbb
or
stos
mov
jbe
or
mov
leave
(bad)
mov
hlt
ds
stc
retf
xor
sub
adc
jge
mov
xlat
add
jno
cwde
jne
or
bound
jb
push
mov
jg
pop
xchg
xor
out
dec
inc
inc
cmp
pop
pop
fmul
pushf
movs
je
xchg
mov
or
rol
pusha
and
retfw
call
adc
add
adc
call
adc
sub
mov
dec
mov
inc
inc
or
dec
sbb
mov
push
out
pop
outs
sbb
adc
jb
loop
jne
in
inc
aam
xchg
pop
nop
fwait
xchg
pop
mov
inc
xchg
mov
ds
sub
mov
jmp
mov
out
push
pop
xlat
movs
or
js
fs
mov
cli
xchg
test
test
and
xchg
clc
gs
cli
mov
stos
xor
or
jmp
add
inc
loopne
sub
outs
int
xchg
jp
js
adc
movs
push
cmp
push
leave
xchg
cmp
xchg
cmp
mov
jo
das
push
cwde
mov
fcom
mov
xor
test
pop
inc
scas
icebp
and
jbe
jle
aam
vdivps
sub
jbe
pop
cmp
xor
je
dec
inc
and
out
sub
push
or
cmps
movs
(bad)
lock
addr16
push
lock
or
jg
stos
ret
bound
pop
pop
loop
test
or
(bad)
std
jmp
push
out
dec
or
dec
or
xchg
adc
ficom
cmp
fstp
mov
stos
pop
scas
ins
or
sbb
fwait
jmp
fmul
(bad)
out
pop
pushf
adc
mov
nop
dec
clc
cld
mov
je
xor
jmp
rol
addr16
and
iret
cmp
fs
sbb
std
fisttp
ret
fnstsw
addr16
imul
ds
scas
sub
pop
push
mov
ins
and
jge
jg
sub
ins
stos
sbb
ror
cmc
push
cmc
bound
sbb
jg
add
inc
out
jl
pop
dec
movs
push
into
dec
or
xor
xlat
push
loopne
sbb
(bad)
mov
jae
outs
out
or
mov
(bad)
js
fs
adc
mov
mov
adc
sub
stos
lahf
lahf
test
add
inc
pusha
in
mov
or
mov
mov
dec
repnz
aas
jp
dec
mov
dec
xor
jle
pop
sti
inc
add
sub
nop
in
scas
mov
adc
push
das
aaa
xlat
or
ret
push
and
jge
xor
mov
(bad)
pushf
fnstcw
cdq
jae
icebp
cmp
(bad)
xchg
push
or
adc
or
mov
add
push
add
mov
push
mov
and
sar
jbe
clc
aaa
movs
in
inc
inc
mov
fsub
(bad)
push
pop
mov
xchg
rol
inc
loope
or
sti
in
rol
jae
fbld
retf
stos
jb
aad
xchg
jecxz
dec
shl
adc
pop
lahf
mov
xor
cmp
mov
fs
push
cwde
xchg
(bad)
cli
xor
repz
bound
pop
cmp
loopne
mov
cli
loopne
ficom
sbb
jmp
gs
movs
mov
cmp
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
adc
jne
jb
retf
(bad)
push
adc
out
mov
test
fild
xchg
icebp
xor
jo
test
(bad)
mov
repnz
xchg
cmps
pop
jns
addr16
(bad)
scas
in
xor
gs
mov
xlat
mov
cmp
push
movs
rcl
or
aam
adc
xchg
sti
test
xchg
vpunpckhwd
jnp
hlt
push
aad
sub
sti
mov
add
jmp
aaa
ins
loopne
adc
pop
scas
push
gs
mov
jecxz
loopne
lds
cmc
or
mov
outs
rcr
inc
adc
add
rol
jae
gs
adc
dec
mov
sub
loop
call
vpshlw
imul
ins
xchg
and
dec
jmp
mov
(bad)
jnp
repz
pop
inc
xor
mov
push
jo
push
(bad)
test
sub
cmc
jecxz
mov
push
sub
or
sbb
scas
iret
cmp
jns
pop
loop
loopne
xor
mov
imul
jnp
xor
fsub
dec
sbb
cmp
daa
arpl
jecxz
pop
loope
cmp
arpl
and
inc
add
xchg
rcr
push
scas
int
(bad)
push
cmps
inc
sub
ret
push
cmps
les
adc
jg
xor
sbb
inc
out
sbb
jl
sahf
mov
fild
leave
and
iret
inc
stc
je
in
sub
add
push
mov
xor
cmps
mov
daa
and
popf
add
scas
in
pop
sub
mov
movs
add
jecxz
out
stos
push
rcl
or
sbb
mov
fbstp
test
movs
(bad)
jmp
sar
dec
loop
pushf
mov
mov
dec
or
dec
dec
cmps
aaa
jmp
and
sbb
dec
jmp
and
and
mov
ds
out
xor
add
(bad)
mov
adc
jo
ss
rcr
pop
cmp
leave
aad
add
and
into
xchg
stos
push
jp
aas
xor
cmps
jb
fadd
pop
test
mov
dec
ds
dec
sbb
out
bound
jne
jg
cmc
push
sub
fcmovnb
ins
lds
mov
mov
dec
mul
ins
sub
pushf
les
fst
repnz
dec
xlat
rol
sbb
sub
sub
mov
mov
mov
cmps
in
inc
dec
and
outs
cmps
pusha
gs
out
popa
loopne
cmp
retf
pop
(bad)
mov
push
xlat
cmc
shl
retf
cmp
jge
sbb
inc
add
xlat
add
scas
ss
jnp
jp
gs
push
aam
mov
rcl
int
pusha
les
mov
das
sahf
int
mov
iret
sbb
mov
push
movs
int
test
fsub
cmp
cdq
fwait
sahf
inc
xchg
out
inc
jnp
into
cmp
xor
inc
ss
push
retf
retf
fiadd
stos
xchg
dec
mov
test
js
retf
push
icebp
sub
sbb
aad
fsub
in
mov
xchg
mov
sub
inc
ins
jecxz
xchg
adc
loopne
jge
jmp
jno
aam
push
pop
daa
cvtdq2ps
aam
(bad)
push
push
jb
push
mov
ins
xchg
in
leave
imul
pop
inc
imul
xor
mov
mov
idiv
push
sti
xchg
add
mul
lds
add
aas
ins
(bad)
dec
repnz
pop
call
test
xchg
popf
mov
adc
inc
sub
pop
lea
jo
cmp
int
adc
cmps
xchg
sahf
shl
outs
cs
jecxz
dec
xchg
bound
test
jmp
imul
jbe
lock
mov
sub
and
jle
push
(bad)
ret
xor
ins
ds
test
mov
aas
imul
sbb
mov
js
clc
add
out
mov
mov
rcr
push
loope
sub
cmp
add
xchg
and
repnz
cs
in
xor
nop
cmp
or
sti
jl
fadd
pop
inc
int3
sti
psllq
cmc
jnp
repz
fld
sahf
int3
or
ret
mov
jp
nop
adc
jbe
ja
push
outs
idiv
mov
ret
jno
loope
mov
or
sbb
adc
mov
jb
iret
in
lahf
test
jbe
pop
sub
pop
retf
jno
test
loopne
mov
mov
inc
movs
xchg
clc
jg
movups
or
in
mov
nop
add
and
inc
sahf
imul
retf
sbb
adc
pop
sub
aam
iret
call
out
sub
mov
leave
arpl
fwait
xchg
mov
into
int
(bad)
cmc
(bad)
in
jmp
ds
iret
xchg
cmps
adc
sbb
test
iret
xchg
xchg
jae
aas
rcr
aaa
inc
and
xor
lahf
sbb
fdivp
xchg
pushf
shr
lahf
dec
and
imul
mov
dec
xchg
loopne
fwait
jno
jle
test
push
and
icebp
fiadd
jb
push
mov
xor
scas
fpatan
sbb
add
pushf
jmp
(bad)
sub
xor
aaa
jg
pop
jnp
stos
lock
je
lods
scas
mov
scas
pop
popf
test
cmp
pop
addr16
pop
int
pop
pushf
pop
inc
pop
inc
pop
add
xor
jae
jle
push
add
outs
add
mov
vphaddbw
inc
xchg
loop
adc
in
mov
push
mov
dec
and
lahf
sbb
sbb
mov
xor
loope
or
in
(bad)
in
mul
pop
jae
jg
mov
dec
enter
mov
loopne
movs
mov
das
pushf
clc
sbb
sub
mov
lods
dec
mov
(bad)
push
pusha
jmp
push
ins
pop
mov
adc
xchg
mov
cmp
xor
jmp
sub
popa
jbe
mov
gs
dec
and
inc
(bad)
fidiv
mov
test
ds
cmova
pop
sbb
pop
xor
sub
fisubr
mov
xor
mov
cmps
out
inc
fs
mov
mov
cmp
add
add
out
pop
jo
(bad)
int
sub
pop
push
dec
mov
cmps
cmp
jnp
xchg
ins
pop
mov
cld
(bad)
cmps
xchg
movs
cmp
iret
out
cmp
sbb
jmp
outs
jo
test
sbb
dec
add
or
mov
cli
inc
dec
push
std
test
inc
mov
jns
xor
movs
ja
(bad)
es
sahf
neg
(bad)
lods
retf
aam
lods
div
mov
push
sbb
mov
cdq
xor
mov
icebp
mov
jmp
xor
mov
or
pop
call
cmp
je
stc
pushf
mov
retf
test
mov
hlt
retf
sub
or
cmp
add
xlat
adc
clc
sbb
ins
shr
xor
clc
adc
xchg
xor
es
inc
add
sub
sbb
sub
test
inc
xchg
enter
stos
out
dec
nop
addr16
mov
bound
sbb
xor
(bad)
aad
outs
retf
icebp
das
pop
and
(bad)
cmps
pop
xchg
dec
sar
sbb
sbb
int
or
(bad)
push
cmps
adc
or
(bad)
call
daa
dec
ins
pop
pop
out
dec
(bad)
pop
cmps
rcr
jns
push
repz
xchg
or
fs
adc
ins
adc
or
push
(bad)
lds
and
sbb
jge
dec
push
add
out
inc
sub
test
je
lea
out
aaa
test
fwait
rcl
pop
cdq
ror
inc
sahf
pop
adc
fisttp
push
mov
xchg
adc
pushf
setb
ret
les
repz
pusha
jmp
sbb
aas
popf
movntps
xchg
adc
clc
loope
lock
mov
cld
aaa
adc
dec
xlat
cmps
jp
dec
data16
xchg
imul
xchg
sub
sub
or
call
inc
pop
movs
xor
aas
jg
loopne
in
push
push
xlat
idiv
and
(bad)
mov
jmp
jmp
outs
je
mov
jne
add
push
cmp
push
pop
iret
xlat
push
pop
outs
mov
mov
cs
sub
out
fwait
pop
test
or
jge
push
inc
mov
sbb
lds
mov
sti
repz
push
int
lea
loopne
mov
inc
adc
xchg
test
loopne
jp
push
sbb
push
loop
out
xor
fsubr
adc
rol
inc
push
dec
hlt
mov
add
inc
mov
jmp
cmp
jecxz
push
xchg
cmp
add
jns
mov
xchg
dec
fiadd
xor
mov
and
xchg
jnp
cmps
adc
cmps
in
jg
inc
pop
jg
jp
out
mov
cmp
jb
mov
mov
xor
and
or
mov
sbb
push
outs
inc
pop
lahf
outs
jl
mov
mov
sub
xor
es
aad
in
add
mov
jge
jbe
in
dec
push
xor
adc
retf
pop
mov
loope
jg
push
or
inc
test
cmp
push
rol
jmp
retf
mov
sub
sbb
pop
add
and
imul
popa
pop
mov
fidiv
jnp
sti
(bad)
cmp
push
pop
in
icebp
fld
repz
cmps
xor
test
push
lods
xchg
pop
xchg
add
aad
push
cli
sbb
stos
xchg
lahf
pop
mov
dec
add
adc
enter
fadd
mov
jo
lods
fldenv
ja
and
aas
mov
sub
outs
cld
mov
or
dec
(bad)
popa
xchg
pop
lock
jne
xchg
test
ins
cmp
add
mov
(bad)
adc
pop
pop
dec
dec
mov
inc
mov
lahf
xor
sub
xchg
mov
add
inc
int3
add
add
test
test
fwait
call
fisttp
inc
pushf
cmp
or
imul
sbb
add
pop
adc
outs
jp
and
rol
test
mov
mov
das
stos
call
ins
movs
mov
into
jnp
jo
mov
not
pop
movs
cmps
inc
mov
dec
loopne
cmp
into
cmp
ja
repz
shl
ins
and
shl
and
sar
repz
not
sbb
cmp
mov
call
sub
mov
pop
add
shl
ficomp
dec
mov
inc
shl
xor
xchg
shl
dec
add
xlat
iret
fbstp
loop
fwait
pop
repz
fs
outs
pushf
movs
fbstp
mov
fwait
jns
xchg
adc
adc
and
push
xlat
jge
inc
rol
adc
mov
and
mov
cmp
mov
std
cli
and
mov
repz
mov
mov
int3
inc
sub
mov
shl
pop
and
fdiv
jmp
jg
jae
cmp
push
and
mov
mov
xchg
pop
(bad)
fistp
pushf
aas
push
push
push
pop
test
add
imul
fmul
sbb
mov
shl
sub
mov
into
push
mov
and
call
fidivr
and
and
out
repnz
cmp
les
mov
shl
js
(bad)
mov
mov
sbb
xor
add
rcl
fsubr
add
or
in
ins
push
mov
mov
push
mov
dec
aas
xchg
pop
lea
iret
mov
or
dec
mov
lods
and
(bad)
adc
push
iret
out
mov
scas
popf
addr16
cld
fnstenv
int
xchg
mov
push
xchg
stos
je
sti
jecxz
add
adc
jns
dec
(bad)
inc
push
adc
dec
push
mov
(bad)
in
outs
cmp
ja
xor
shl
or
pop
fidivr
jmp
lods
lods
shl
fst
popa
movs
jecxz
daa
sti
leave
ins
popf
cmc
cmp
mov
jbe
and
sti
mov
xor
mov
sti
sahf
cmp
adc
pop
stc
das
add
fwait
cmp
push
data16
out
retf
test
ds
stos
mov
push
shl
mov
inc
pop
hlt
mov
mov
hlt
and
or
and
xor
aad
(bad)
mov
inc
lahf
xchg
sbb
mov
inc
aas
adc
pop
add
lods
loope
push
inc
push
(bad)
ins
sub
cwde
in
sub
call
xor
out
out
mov
inc
pop
cwde
and
outs
aas
mov
int
sti
jb
xchg
cmc
dec
or
mov
(bad)
jbe
mov
and
mov
jns
jb
loop
retf
cmp
jb
mov
lea
cmp
jge
push
xor
retf
push
imul
cwde
addr16
hlt
pop
js
das
pop
sbb
add
test
mov
cdq
enter
les
pop
jns
popf
loope
ficom
scas
scas
in
cmp
pop
adc
add
sbb
fs
jne
rcr
imul
dec
in
push
sbb
cld
les
(bad)
mov
or
add
mov
icebp
mov
xlat
daa
dec
sub
push
nop
push
pop
aam
mov
fisttp
out
(bad)
out
sub
push
inc
aad
sub
ss
or
pop
mov
aam
arpl
sub
push
add
dec
jl
aaa
inc
sahf
jae
or
lahf
in
pop
test
inc
jge
mov
mov
inc
jge
leave
retf
out
add
xchg
fidivr
mov
test
retf
(bad)
mov
jmp
dec
push
iret
scas
and
rcr
test
jno
ret
test
fs
test
out
push
imul
dec
sbb
loope
jns
mov
xor
xlat
jbe
bound
sahf
cs
pop
das
mov
mov
ret
fcom
std
aam
or
push
call
pmaxsw
mov
into
dec
mov
mov
or
push
xor
daa
mov
xchg
pop
push
test
pop
addr16
and
xchg
add
scas
retf
dec
cld
dec
jmp
cmp
xor
push
pop
lods
xor
mov
call
pop
push
adc
jbe
stc
mov
adc
mov
sbb
mov
nop
xchg
and
sub
iret
or
fisttp
cmps
out
call
jecxz
test
popa
jecxz
mov
sbb
in
cmp
imul
mov
mov
push
(bad)
push
stos
mov
lods
sub
jne
add
add
movs
int3
sar
daa
adc
inc
test
inc
in
and
or
cmp
test
adc
adc
ins
std
jp
jp
(bad)
xchg
xchg
mov
or
xchg
cmp
outs
mov
mov
add
adc
push
mov
out
ins
or
in
cmp
pop
sbb
lea
push
xlat
xor
pop
and
xchg
fs
or
cmp
or
je
sub
xchg
fist
repz
gs
xor
sbb
adc
mov
mov
mov
aad
adc
inc
xchg
and
push
pop
fcomp
scas
(bad)
mov
sbb
inc
cmp
add
aas
jg
pop
sbb
add
repz
jecxz
popf
iret
sahf
and
loop
(bad)
call
jge
orps
into
mov
mov
mov
dec
retf
dec
mov
mov
pop
dec
sbb
mov
cdq
mov
cmp
mov
aad
add
scas
push
gs
aad
mov
rol
test
fisttp
ins
jp
cmp
pop
mov
pusha
je
ds
push
mov
test
adc
inc
pop
lods
jle
xchg
fisttp
pop
push
stc
adc
jecxz
(bad)
push
movs
push
(bad)
cld
popa
sub
sub
xchg
imul
push
leave
lea
and
nop
repnz
das
xchg
xchg
mov
call
add
dec
fwait
add
lea
or
loop
(bad)
xchg
dec
xchg
sbb
xor
icebp
or
dec
pop
stc
jne
popa
and
and
cdq
jle
lea
lock
into
jmp
jge
xor
mov
fistp
pusha
cmp
adc
stos
(bad)
adc
xchg
inc
dec
(bad)
aas
call
in
lahf
and
ins
jle
inc
mov
in
mov
sub
loop
fnsave
push
(bad)
xchg
lds
aaa
pop
hlt
je
out
pop
mov
in
adc
cmc
mov
add
pop
and
rol
iret
cmp
sub
pushf
in
js
out
movs
push
popa
(bad)
out
and
mov
add
fstp
fild
mul
icebp
scas
inc
mov
pop
and
cs
rcl
push
pop
xchg
and
pop
push
lea
aad
ret
mov
into
fstp
xor
or
aam
dec
ror
lds
dec
ret
jle
mov
adc
repz
cmp
and
ins
push
outs
mov
shl
ds
or
fisub
retf
jns
(bad)
mov
adc
shl
fs
jg
sar
lea
scas
scas
mov
adc
repz
hlt
nop
dec
mov
aas
jl
push
in
or
fst
movs
fsub
dec
dec
xchg
cdq
pop
mov
sbb
adc
cli
mov
retf
or
cld
fcom
into
jb
es
ffree
xchg
xchg
retf
ret
jecxz
and
sbb
sar
fbstp
pop
enter
mov
(bad)
retf
pop
cmps
aas
and
scas
loope
sbb
mov
icebp
fcom
retf
sbb
lahf
inc
xor
pop
cs
add
fcmovnb
bound
pop
repz
cmp
pop
xor
add
sbb
(bad)
dec
jl
mov
repnz
xor
push
fldenv
popf
inc
mov
in
cmp
jmp
mov
inc
mov
mov
scas
bound
icebp
cmps
mov
pop
outs
leave
mul
out
rcr
inc
push
inc
(bad)
add
mov
push
jne
sub
inc
sbb
jmp
in
in
stc
jne
mov
sub
mov
je
hlt
or
cwde
into
gs
mov
xchg
pop
and
fcmovb
push
push
outs
out
test
add
adc
xchg
inc
aad
jb
clc
fisub
cli
jge
mov
pop
inc
les
scas
add
pop
stos
pop
je
mov
aaa
int3
jecxz
jecxz
add
aaa
xchg
fwait
sub
cmc
imul
ja
push
add
and
push
in
pop
cmp
inc
jg
in
mov
jno
pop
ins
outs
pop
test
(bad)
push
loope
or
daa
xor
jb
sbb
sub
in
shl
adc
jnp
daa
test
lahf
daa
pop
mov
rol
xor
and
(bad)
sub
or
jnp
push
pop
cmp
jecxz
adc
idiv
mov
and
jb
loope
les
sbb
cmps
arpl
pop
mov
sub
inc
mov
sub
dec
xor
adc
jae
sub
or
mov
popf
loopne
(bad)
sar
jmp
pushf
xchg
pusha
ins
sbb
hlt
jge
dec
lahf
in
xchg
clc
(bad)
dec
mov
and
std
mov
mov
xor
lahf
jno
ret
dec
mov
jno
mov
xchg
repz
aam
cmp
or
mov
iret
mov
pushf
push
dec
sete
pop
mov
xor
cmp
enter
stos
out
cmp
inc
sub
mov
pop
add
jg
adc
pop
movs
mov
outs
inc
out
cmc
call
aaa
xchg
jnp
push
cmp
loop
lahf
or
cmps
fnstcw
xor
pop
jnp
pop
pop
sbb
jge
nop
int
pushf
fistp
push
xchg
mov
add
and
xchg
int3
ret
mov
push
stos
and
shr
into
push
outs
jno
loopne
cmp
mov
stc
push
sub
sbb
out
cwde
stos
mov
push
adc
les
rol
xor
dec
cmp
push
ins
cdq
lea
mov
xchg
cmp
int3
repz
int3
mov
sbb
lea
repz
xchg
mul
adc
inc
push
fwait
cmp
xor
pop
mov
js
cmp
fild
sar
cld
xchg
dec
rcl
nop
iret
repz
fwait
xchg
mov
lods
sbb
stos
and
nop
es
adc
mov
iret
push
sub
xchg
aam
lods
rcr
pop
int3
idiv
adc
rcl
jne
imul
std
mov
and
hlt
sbb
cli
jmp
lea
test
adc
adc
sbb
dec
sbb
mov
addr16
inc
mov
mov
cmps
jle
sar
imul
dec
js
sbb
xchg
fdivr
fcmovb
lahf
in
xor
xchg
out
xchg
adc
xchg
enter
call
shr
pop
(bad)
cli
shr
outs
bnd
repz
mov
push
xor
xchg
inc
scas
pop
iret
xchg
push
mov
dec
xchg
xchg
inc
or
neg
ficom
pop
or
add
xor
cdq
(bad)
push
sbb
adc
mov
jmp
cdq
test
movs
imul
ret
aaa
out
inc
rcr
add
sub
pop
add
fdiv
(bad)
mov
sub
xchg
jno
imul
mov
pop
sbb
xchg
mov
mov
pop
jbe
movs
dec
ins
nop
sub
(bad)
jbe
xchg
movs
lock
addr16
data16
iret
push
add
ss
cdq
outs
jo
mov
hlt
xchg
(bad)
pop
leave
xlat
adc
dec
and
retf
jp
jno
or
out
popa
xchg
retf
je
cs
xchg
jmp
aad
aad
(bad)
outs
das
cmps
add
call
or
shl
mov
into
dec
inc
jbe
dec
scas
test
mov
cmps
sbb
je
add
dec
xchg
ds
scas
sub
out
pop
jnp
in
xchg
push
xor
cmc
aad
nop
add
xchg
and
aad
pushf
lods
xor
sub
push
sbb
mov
jp
icebp
lock
mov
dec
add
jns
out
mov
add
sbb
mov
int3
(bad)
jmp
in
jle
imul
(bad)
js
add
cmp
cwde
adc
bound
scas
fisubr
ins
retf
add
lahf
ds
aaa
inc
sub
push
(bad)
out
pop
push
sbb
xor
arpl
sbb
ss
push
stos
in
ins
inc
jle
adc
add
adc
and
mov
jno
jp
mov
in
call
push
inc
xchg
in
sahf
scas
sbb
push
or
cdq
sbb
fisub
push
and
test
test
xchg
jb
ret
stc
mov
push
mov
jno
retf
sbb
(bad)
push
and
lods
cmp
std
(bad)
jae
arpl
fistp
push
(bad)
loop
mov
jle
lahf
xor
sub
pop
pop
sub
rol
push
arpl
inc
adc
push
jle
inc
dec
(bad)
sub
xchg
loope
adc
(bad)
sub
adc
das
lods
test
inc
neg
test
stos
sub
ins
inc
pop
jmp
dec
sbb
sub
iret
and
loopne
mov
je
sub
mov
daa
lahf
sub
push
and
xchg
daa
jmp
mov
std
sub
movs
cmp
and
in
jno
or
sub
iret
mov
sbb
popf
cmp
mov
jb
icebp
dec
movs
add
mov
sbb
jp
addr16
cmp
push
test
dec
fbstp
loop
aaa
adc
jle
mov
ret
xchg
stc
mov
and
test
lahf
dec
and
cmp
inc
push
es
xchg
int3
lea
xchg
(bad)
mov
xor
push
sbb
sar
(bad)
sbb
inc
add
sub
mov
jg
xchg
push
shl
mov
jno
rcr
movs
sahf
jmp
loop
je
stos
cmp
inc
pop
xchg
ficom
jns
or
add
les
dec
push
mov
or
shr
test
cwde
shl
(bad)
sti
inc
in
ja
adc
test
movs
ins
repz
jp
dec
(bad)
inc
mov
mov
and
(bad)
mov
pop
sbb
fwait
xchg
pop
lea
xchg
dec
xor
popf
ja
in
stos
inc
aas
jp
sbb
test
(bad)
loopne
dec
mov
add
mov
cmp
cli
mov
lahf
and
push
rcr
shl
gs
add
lahf
add
xchg
fs
jle
push
dec
scas
lahf
inc
xchg
int
pop
test
sbb
mov
aad
enter
bound
loopne
stos
adc
inc
loope
xor
retf
jp
cs
call
dec
popf
icebp
out
xchg
jecxz
stc
retf
ret
mov
jno
retf
cmp
cdq
or
mov
scas
shl
add
popf
mov
loopne
(bad)
sbb
mov
pop
jp
clc
inc
imul
ret
daa
add
mov
cwde
movs
sbb
jp
sahf
or
and
movs
mov
dec
pop
pusha
jbe
and
fs
cmp
jmp
push
push
movs
or
xor
dec
pop
movs
pop
das
call
inc
xchg
in
ins
add
loop
pop
pop
hlt
and
sbb
jae
or
dec
gs
xchg
adc
icebp
loop
xor
pop
mov
dec
pop
and
add
push
sbb
xchg
loop
ret
(bad)
es
push
sub
stos
and
les
push
mov
adc
pop
xor
pop
mov
stos
cmp
sbb
cmp
sahf
test
loopne
cmp
pop
in
cmp
int
retf
sti
dec
jmp
inc
add
shl
cld
adc
(bad)
fidivr
outs
mov
cmps
loop
dec
push
dec
sahf
jnp
mov
adc
ss
lds
mov
mov
pop
push
mov
fcomp
les
xchg
push
add
mov
xor
daa
std
call
push
ret
mov
sbb
add
mov
repz
scas
jbe
pop
dec
imul
xchg
sub
aaa
or
jno
jmp
dec
push
loope
jp
dec
sahf
call
cmp
mov
jns
mov
arpl
mov
mov
xor
call
sbb
leave
add
lock
call
jno
das
and
mov
stc
das
mov
xor
push
xchg
fist
shl
cmc
or
mov
jg
mov
imul
fdiv
addr16
xchg
imul
mov
jmp
rcr
or
daa
pop
outs
add
in
jge
mov
sub
jmp
popf
add
fdiv
mov
cdq
movs
ss
mov
mov
cs
nop
cwde
xor
div
pusha
lea
xchg
jno
aaa
push
or
movs
rcr
sub
sub
cmps
sbb
sbb
cld
loopne
shl
mov
jnp
sub
outs
arpl
pop
and
pushw
les
jo
ins
cmps
mov
mov
lds
xor
sti
add
push
fdivr
jo
and
add
repnz
add
lods
inc
dec
sub
xor
xchg
sub
lea
add
call
pop
(bad)
in
add
out
call
xor
xchg
inc
cmp
push
jno
fwait
adc
mov
cmp
sub
add
dec
fild
stos
ficomp
retf
push
in
stos
xchg
jmp
xchg
popf
push
cmp
sbb
xchg
xchg
movs
jo
cmps
(bad)
imul
lea
mov
or
loop
sub
in
inc
mov
std
add
dec
inc
xlat
inc
lds
mov
cdq
push
js
sar
cmp
mov
mov
xchg
sbb
sub
out
int3
int
fnstsw
xchg
mov
es
mov
mov
mov
jecxz
movs
xchg
adc
jne
inc
push
lods
jge
dec
ins
xchg
and
daa
(bad)
in
(bad)
fldcw
lea
rdpmc
mov
push
sub
stos
inc
stos
sub
add
and
dec
int3
lahf
adc
xchg
out
inc
sub
mov
jns
mov
in
movs
pushf
cmp
inc
out
sti
and
ins
cmps
sub
les
cmp
aam
or
(bad)
adc
jmp
mov
or
loope
mov
hlt
inc
push
ja
shl
xchg
and
mov
cmp
das
inc
sbb
dec
jge
sub
sahf
in
sub
inc
movs
cmps
xor
test
mov
iret
adc
dec
(bad)
adc
mov
shr
nop
fdiv
lahf
adc
data16
lods
jmp
not
push
jge
js
inc
data16
fdiv
pop
mov
sbb
push
fisub
add
in
mov
fdivr
retf
test
bound
call
ror
jp
xchg
outs
mov
addr16
or
and
clc
xlat
fld
je
or
mov
xor
fs
jne
(bad)
jb
out
je
clc
aaa
fild
adc
xor
pop
mov
sub
xchg
fs
in
adc
pop
fdiv
enter
mov
je
in
shr
dec
not
outs
and
inc
mov
inc
mov
mov
dec
lock
add
adc
(bad)
fnstenv
pushf
inc
out
mov
inc
push
lahf
loop
push
adc
xchg
rol
and
pop
popf
xchg
add
pusha
out
inc
jae
adc
dec
inc
lods
push
add
jo
stos
cs
aaa
in
fcomp
bound
add
add
cmp
xchg
daa
scas
cld
fdivr
push
add
add
stos
scas
ja
add
out
aas
or
fdivr
mov
out
loopne
xor
(bad)
sbb
dec
and
or
push
push
pop
or
lahf
int
mov
pop
popa
xor
arpl
push
fld
cmp
cs
ret
das
pushf
mov
pop
pop
in
jns
mov
jp
dec
jmp
bndstx
push
xchg
pop
rcr
jmp
xchg
shl
mov
gs
sub
and
ins
aad
aam
cmp
sub
cmp
mov
mov
es
and
inc
dec
fst
mov
inc
pop
stos
mov
fst
mov
mov
sbb
sbb
cmp
lods
and
mov
addr16
sbb
jl
je
pop
out
jp
cmc
sbb
shl
jp
aaa
enter
enter
cs
(bad)
sti
or
sbb
pop
cmps
push
xor
mul
mov
cs
mov
popa
sub
push
mov
add
stos
xchg
adc
or
fucomi
clc
mov
mov
lods
sbb
push
mov
jge
mov
loop
mov
sahf
inc
leave
sub
sub
cmp
stos
js
dec
jbe
pop
xchg
cmps
pop
xchg
clc
sbb
stos
inc
push
fmul
(bad)
idiv
ins
mov
pop
scas
scas
lahf
mov
inc
std
scas
repnz
xor
cmp
fiadd
mov
addr16
xor
push
inc
(bad)
fisttp
imul
inc
or
std
jle
xchg
cmp
push
scas
pop
std
and
mov
mov
pop
fldenv
pop
pop
repz
lods
jns
cdq
cli
cld
cmp
ss
test
jge
rcr
pusha
je
clc
inc
outs
aam
cmp
mov
(bad)
sub
mov
aas
add
shl
mov
inc
lods
retf
xor
mov
repz
data16
rol
push
and
popf
pop
xor
jmp
xchg
sbb
inc
fs
imul
inc
mov
jmp
mov
cwde
(bad)
or
mov
xor
adc
cmps
push
dec
call
out
test
mov
int3
sar
cld
sahf
aam
pop
dec
je
fisub
call
jbe
icebp
adc
jp
xchg
gs
pop
inc
lahf
mov
push
fwait
cmp
push
loope
fld
(bad)
or
pop
xchg
ret
loop
adc
inc
jns
cmp
lods
popa
dec
cmp
(bad)
outs
fstp
adc
les
pop
xor
pusha
shr
mov
sbb
pusha
test
call
leave
test
mov
mul
pushf
inc
cmp
and
sub
lea
loope
cs
in
mov
stos
inc
sti
gs
inc
or
jp
fidivr
ja
retf
cmps
push
mov
push
retf
stos
xor
je
aas
jb
popf
daa
cmp
bound
je
cli
sti
js
stc
inc
mov
add
movs
sbb
pop
repz
call
and
or
cwde
or
xchg
mov
push
mov
(bad)
cmps
scas
je
nop
jmp
or
hlt
(bad)
imul
sub
cld
leave
sub
inc
fldenv
adc
vpsrlw
fcom
mov
mov
cmp
mov
xchg
mov
aaa
retf
pop
test
in
mov
cli
(bad)
fistp
jmp
int
lods
popf
push
dec
popf
or
push
xchg
call
add
add
jns
clc
rcl
jmp
cld
lods
mov
pop
popa
xor
push
or
clc
sbb
popa
(bad)
inc
xor
aaa
lahf
test
sbb
pop
fsubp
jl
pop
pusha
jae
mov
pop
and
and
jmp
push
mov
aam
jne
push
sar
or
and
cmc
jle
inc
dec
jns
pusha
outs
cld
outs
add
or
repnz
(bad)
ds
div
ds
jmp
mov
pop
pop
inc
inc
repz
outs
and
lods
or
add
imul
in
adc
ret
inc
xor
add
and
call
add
loop
aam
sub
in
mov
ret
pop
addr16
outs
xor
mov
push
xchg
jmp
ja
fs
cmp
add
js
rcl
outs
ret
cmp
add
test
test
jne
clc
mov
pop
jp
push
test
das
mov
into
push
out
inc
push
adc
vpcomud
mov
push
cmc
test
dec
cwde
xchg
cmc
fstp
mov
jnp
add
mov
(bad)
ss
pop
pop
pop
iret
sahf
mov
push
ja
pop
jnp
inc
cld
nop
or
and
dec
pop
in
pop
call
dec
cmp
pop
add
popaw
ins
add
addr16
mov
popf
in
push
mov
loop
inc
sub
ss
repz
test
push
xchg
and
(bad)
test
sub
pop
test
push
xlat
pop
jmp
into
stc
xor
push
ret
push
cmp
xor
jle
clc
leave
xor
scas
js
and
pop
or
arpl
sub
add
lea
push
cdq
sahf
js
and
inc
je
dec
(bad)
sbb
lods
mov
movs
call
sub
(bad)
fwait
call
xor
pop
int
cmps
adc
pop
and
jg
inc
mov
xor
fmul
jbe
xchg
aad
push
stc
in
dec
jne
ja
push
mov
inc
jns
int
and
mov
cmps
adc
js
fisttp
bound
and
call
pop
push
sbb
adc
and
inc
cmps
adc
add
test
lock
in
mov
mov
aaa
sbb
pop
rol
xchg
sub
mov
cli
mov
adc
neg
shl
loopne
mov
std
repnz
in
push
cmps
and
mov
pusha
push
inc
and
pop
inc
rol
mov
stc
das
shr
push
mov
pushf
lods
aad
jns
clc
cwde
(bad)
or
xchg
imul
adc
push
pop
(bad)
cmp
sbb
cwde
cmp
pop
push
mov
jae
arpl
test
repz
xchg
popa
cmp
inc
add
and
sub
jo
mov
loope
in
inc
mov
xlat
cld
test
(bad)
daa
popa
mov
push
mov
sbb
inc
ins
loop
mov
or
jge
push
or
iret
nop
fsubp
push
push
xchg
hlt
scas
imul
dec
mov
jecxz
les
xchg
sbb
or
mov
cmp
push
mov
mov
or
xor
push
xchg
test
sub
ror
into
and
dec
pop
pop
push
push
mov
mov
fdivr
hlt
cmc
std
and
bound
xor
fbstp
or
(bad)
aaa
repnz
rcl
pushf
aaa
push
jle
sub
adc
sbb
test
out
mov
and
xlat
sub
bound
xor
int
jno
add
pop
shr
aaa
jge
shr
lds
iret
ret
mov
leave
int
imul
jl
add
ret
call
jb
clc
cmp
xchg
mov
out
xchg
xchg
movs
fwait
xlat
cmp
push
add
push
xchg
push
mov
fwait
lahf
jecxz
xchg
aaa
add
xor
or
xor
jo
retf
dec
lds
sub
and
sub
sub
jno
jns
inc
xor
sub
jb
mov
or
or
popa
pop
test
or
xchg
retf
repnz
cmps
into
in
je
mov
fwait
jmp
jle
pop
out
pusha
sub
or
ret
or
out
jnp
shr
inc
xlat
(bad)
fist
stos
fiadd
cdq
inc
or
stos
push
fsub
loop
je
js
xchg
test
mov
xchg
int3
push
xor
scas
cli
sub
xchg
jg
xchg
mov
xor
xchg
sbb
lahf
ins
cli
or
push
push
adc
iret
mov
jbe
sahf
mov
xchg
inc
or
outs
out
fisttp
inc
test
addr16
fist
jmp
sti
movs
stos
mov
cs
adc
mov
jnp
movs
cmp
in
inc
jmp
sbb
push
sub
loop
mov
js
in
inc
sbb
cmp
dec
in
xchg
int3
push
xchg
cmp
out
xchg
sbb
cmps
(bad)
adc
cmp
je
rcl
scas
dec
sub
dec
dec
mov
mov
and
in
in
and
mov
sub
(bad)
pop
ret
mov
mov
add
pop
retf
jae
scas
jmp
mov
das
es
fild
int3
fidiv
dec
sub
jno
outs
cmp
pop
adc
sub
and
jmp
pop
dec
mov
pushf
ret
popa
test
retf
push
scas
div
in
push
mov
mov
iret
retf
push
dec
cmp
push
rcr
push
(bad)
int3
xchg
(bad)
(bad)
or
push
pushf
popa
in
jb
xor
pop
xor
(bad)
xchg
in
hlt
fimul
bound
mov
and
call
cs
sub
xor
add
mov
js
es
pusha
loope
fiadd
push
jle
jns
mov
jne
out
ja
and
xchg
inc
pop
or
dec
dec
pop
or
add
sbb
adc
div
addr16
pop
pop
mov
sahf
je
lods
sbb
(bad)
cmp
das
out
mov
adc
adc
iret
shl
and
push
sub
and
jo
iret
mov
je
(bad)
mov
adc
pop
nop
sbb
jle
ins
dec
cmp
mov
mov
test
lea
mov
jnp
test
dec
xchg
mov
jbe
stos
adc
xor
stos
xor
mov
shl
or
fimul
fdivr
mov
out
mov
aas
mov
iret
xor
(bad)
out
dec
fs
scas
(bad)
jo
stc
cs
push
xlat
outs
sub
les
outs
mov
pop
outs
aas
mul
and
int
outs
retf
fldcw
sub
push
push
fs
mov
xchg
mov
or
out
aaa
jmp
xchg
(bad)
popa
es
push
ret
pop
push
xchg
sub
sbb
and
(bad)
jae
cdq
mov
mov
ror
cmp
cwde
int
xor
pop
in
pop
jmp
lahf
lods
mov
loopne
retf
imul
add
out
jmp
dec
mov
pop
pop
icebp
outs
pop
xchg
xor
adc
pop
or
xchg
add
test
test
shr
ds
or
mov
popf
xchg
or
push
and
fwait
mov
xchg
sahf
mov
push
jge
scas
jne
fbld
push
dec
pop
ror
push
inc
repz
inc
lods
rcl
cdq
mov
cdq
callw
repnz
add
mov
test
outs
mov
add
xchg
rcr
fdivr
fst
mov
pop
cmp
call
mov
adc
test
(bad)
adc
popa
shl
out
ds
mov
mov
xor
mov
call
mov
aam
mov
ret
bound
call
mov
jns
push
mov
sub
or
dec
dec
jge
and
sti
les
pop
pop
sbb
sar
inc
sbb
cmp
mov
cli
ret
mov
cs
ins
and
pop
pusha
push
mov
aas
pop
sub
outs
push
xor
in
inc
aas
jecxz
test
mul
ss
mov
lea
pop
pop
inc
fdivr
inc
mov
ins
hlt
cmc
sar
or
aas
sub
and
sub
jle
sub
call
fidivr
sub
or
mov
push
or
adc
jnp
shl
cmp
mov
push
mov
adc
mov
adc
xchg
inc
mov
sub
cmp
xor
add
into
xchg
out
leave
popf
in
cld
shl
pusha
bound
out
mov
adc
jl
mul
bound
lock
sahf
mov
xchg
stos
adc
inc
leave
pop
bound
mov
xor
cmp
clc
jle
daa
repz
outs
popf
jg
rcr
sbb
(bad)
cmp
ret
retf
cmp
(bad)
popa
test
arpl
add
(bad)
push
push
xchg
dec
into
ja
inc
inc
mov
xor
cmp
test
mov
call
gs
lahf
sbb
cwde
or
xchg
cmps
sub
push
sbb
popa
inc
mov
mov
call
outs
imul
xchg
arpl
xchg
xchg
or
or
imul
jno
jb
sub
test
repnz
movs
xlat
xchg
mov
mov
stos
mov
jg
push
xor
ficomp
or
cli
sbb
and
pop
adc
ins
mov
loopne
dec
ins
cmp
or
sbb
sub
scas
sar
fisttp
cmp
rol
or
(bad)
stos
sub
mov
pop
sbb
(bad)
and
fdiv
xor
outs
aam
cmps
(bad)
stos
jns
and
stos
mov
add
sub
in
(bad)
or
fnstenv
lods
xchg
add
ss
sbb
mov
cmc
and
movs
fdivr
sahf
adc
xchg
cmp
and
imul
cli
inc
mov
ins
and
add
fsubr
daa
loop
sbb
cli
sbb
dec
push
cmp
mov
pop
or
and
adc
adc
and
inc
jmp
mov
jne
jo
pop
outs
gs
aam
dec
lods
out
loopne
cdq
ss
icebp
inc
dec
je
jns
xor
mov
mov
dec
mov
xchg
dec
cmc
adc
push
shl
stos
sub
dec
xor
retf
mov
and
xchg
xor
cmp
and
pusha
cmp
jp
pop
pop
test
or
or
xor
inc
std
inc
pop
jg
test
mov
xor
fcmovb
imul
(bad)
xor
sub
push
shr
pushf
jge
mov
ja
mov
inc
inc
pop
fisttp
fs
dec
mov
fldenv
mov
adc
ins
sbb
popa
sub
jne
or
stos
sti
movs
cs
cmc
sbb
ds
mov
aam
xchg
or
repz
cmps
or
xchg
shl
out
gs
(bad)
sqrtps
inc
out
fwait
rol
lea
sub
imul
jmp
inc
jmp
bnd
outs
xlat
int3
mov
sub
fs
adc
mov
or
test
dec
jge
pop
xchg
sub
push
jnp
inc
add
dec
push
scas
xlat
jo
pop
pop
push
push
inc
mov
jnp
es
xor
push
fidiv
test
imul
ret
mov
rol
xor
aam
cld
xlat
cmp
cmp
lahf
xchg
pusha
in
out
pushf
mov
cmp
inc
add
and
sub
shr
leave
sub
scas
loope
iret
sbb
inc
xor
loope
fild
idiv
outs
fwait
jmp
inc
fsubr
ins
in
cld
or
fldenv
fistp
push
and
lods
sub
dec
ror
and
fdivrp
jecxz
xlat
push
sti
xchg
xchg
and
push
shl
xor
xor
mov
xchg
xchg
xor
mov
fisub
fcom
xor
jno
nop
inc
jg
xchg
pop
outs
push
sbb
mov
pop
sub
adc
push
mov
outs
xchg
push
sbb
ficomp
addr16
jl
xchg
hlt
jle
xchg
add
sbb
dec
and
sub
inc
pop
inc
ret
fidivr
popf
nop
xor
pop
mov
dec
xor
in
cdq
je
xor
mov
lock
stc
xor
lahf
out
shr
not
aaa
pop
sub
ss
mov
in
aad
sar
cmps
ins
enter
mov
clc
xor
xchg
pop
fsubr
push
xor
pop
sar
xlat
fbld
pop
pop
(bad)
dec
repnz
mov
cmp
inc
mov
outs
outs
jmp
dec
or
dec
dec
repnz
and
popa
sbb
push
outs
out
leave
mov
(bad)
cs
lods
dec
std
mov
pop
sbb
inc
inc
xor
lds
std
xchg
fnsave
mov
jbe
repnz
jecxz
mov
jg
in
cwde
and
mov
in
push
inc
icebp
sbb
push
pusha
out
xchg
(bad)
daa
jns
popa
pop
mov
aam
out
shl
mov
cmp
sti
cmp
push
scas
push
sub
fs
mov
aaa
test
fild
mov
rcl
mov
sbb
lahf
je
sbb
inc
sbb
and
mov
sbb
out
cmc
out
adc
mov
jle
sub
movs
sbb
mov
retf
pop
outs
fst
add
xchg
(bad)
pop
lahf
sti
mov
sbb
dec
fnstenv
xchg
lods
lock
inc
fiadd
sub
mov
mov
clc
pop
in
or
mov
sahf
or
jae
stos
xchg
(bad)
push
jae
imul
cmp
mov
hlt
and
repz
add
ins
popa
push
(bad)
into
retf
sub
mov
idiv
xlat
popa
add
das
aam
ret
ret
int3
fidiv
bound
ds
add
std
cli
mov
push
icebp
push
push
std
pushf
outs
pop
and
iret
es
push
mov
mov
(bad)
(bad)
mov
dec
test
xor
ss
imul
pop
or
add
mov
iret
test
push
leave
pop
and
and
and
xchg
adc
and
pop
in
stc
popa
xor
inc
fsubr
gs
jecxz
test
loop
sbb
or
mov
mov
pop
push
push
cmc
or
mov
cmp
add
add
xchg
lahf
push
je
(bad)
lea
push
cmp
mov
dec
jne
sub
jo
jne
adc
sar
outs
scas
retf
dec
xchg
jbe
sti
add
test
jmp
add
sti
mov
dec
lock
add
xor
bnd
ja
or
cmp
(bad)
out
mov
xlat
movs
ficomp
xor
jecxz
pop
push
retf
cmp
jae
mov
icebp
xchg
mov
push
pop
jns
pop
pop
in
imul
push
jo
mov
addr16
adc
push
xchg
push
mov
test
lods
mov
xor
xor
adc
jnp
adc
stc
mov
pushf
xchg
cli
push
fbstp
mov
pop
sti
lods
out
ds
mov
imul
scas
jmp
jno
fs
fst
jge
dec
sub
inc
in
aam
stos
push
or
es
mov
hlt
add
fwait
jb
imul
adc
mov
mov
jmp
push
nop
movs
sti
cmps
cmp
cmps
add
add
and
cdq
adc
dec
push
add
inc
adc
adc
fdivr
cli
iret
(bad)
mov
cmps
pusha
mov
shl
fmul
fidiv
jo
cmp
shr
loopne
cmp
mov
xchg
and
add
retf
fsubr
jge
fst
dec
test
push
and
out
dec
cdq
push
jae
in
mov
push
mov
and
and
js
lock
icebp
jo
mov
call
out
xor
adc
int
xchg
sbb
mov
cmps
and
nop
ret
xchg
adc
pop
test
into
jo
jbe
inc
test
lahf
add
jne
xor
aaa
rcr
scas
movs
outs
fidiv
sti
mov
fiadd
adc
lahf
(bad)
jl
push
mov
push
outs
xchg
cli
fimul
retf
dec
in
aaa
mov
mov
in
mov
mov
sahf
adc
sbb
mov
cmp
pusha
loop
xor
pop
data16
cmp
test
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
add
jo
inc
sub
push
cvttps2pi
add
add
jmp
pop
xchg
fisubr
fmul
(bad)
stos
mov
sbb
ins
sub
mov
outs
mov
sub
call
cmp
iret
or
dec
mov
int
sbb
ss
(bad)
jbe
mov
or
xchg
dec
inc
call
retf
cmp
xchg
add
mov
(bad)
fimul
mov
das
enter
dec
mov
jno
pop
cmp
jmp
ins
pushf
and
push
jle
sub
shr
retf
pop
dec
inc
pop
and
add
data16
inc
in
leave
mov
aaa
in
add
sub
phaddd
dec
mov
shr
sub
push
xchg
push
and
shl
adc
frstor
dec
cdq
arpl
push
jge
jge
into
dec
(bad)
test
into
adc
shl
in
popa
ins
jp
movs
inc
mov
mov
ror
addr16
sub
in
cld
adc
ins
inc
push
cdq
(bad)
xor
inc
lahf
fidivr
ret
push
jle
mov
rol
bound
push
enter
(bad)
(bad)
cs
ret
jo
jo
mov
movs
jle
xchg
push
cmp
iret
push
push
add
dec
lods
or
jg
adc
lods
jl
jmp
stos
and
(bad)
cld
dec
jns
aaa
in
mov
push
add
hlt
inc
rcl
aas
add
pop
xor
rol
pop
out
hlt
sub
cmp
ret
fidiv
shl
fiadd
add
ds
and
and
jl
dec
pop
dec
icebp
pusha
adc
jno
mov
fwait
or
mov
cmps
pop
lds
iret
test
add
cmp
mov
inc
iret
cmp
out
ins
lds
pop
pop
sbb
inc
js
lods
push
ss
mov
(bad)
fst
push
mov
cwde
sub
shl
frstor
pop
das
stos
ret
sub
sbb
and
popa
mov
mov
into
mov
xchg
popa
dec
retf
(bad)
pop
add
sbb
fisttp
call
inc
dec
dec
imul
sbb
test
loop
icebp
(bad)
scas
and
cdq
xchg
call
xchg
add
in
adc
dec
in
xor
jle
movs
imul
pusha
aam
xlat
pushf
bound
das
add
retf
mov
mov
cs
enter
push
ror
mov
retf
dec
aam
jns
or
aad
mov
rol
rol
out
sahf
pop
push
inc
ss
imul
xor
pop
pop
addr16
mov
aas
push
xchg
sti
xchg
pushf
lea
jb
pop
nop
gs
inc
pushf
sar
sbb
ss
adc
xchg
sbb
cmc
call
xor
push
scas
mov
dec
(bad)
jmp
push
push
dec
jae
shl
out
data16
adc
mov
add
xor
sbb
pop
adc
out
cmp
pushf
stc
or
retf
ror
mov
push
aas
call
dec
dec
lock
mov
sti
outs
sahf
or
fs
movs
mov
cli
cmp
mov
dec
bound
daa
je
xchg
fst
and
fwait
push
cmp
cwde
push
rcr
out
push
not
cmp
ja
aas
lods
mov
rol
(bad)
xchg
jle
mov
xchg
aaa
mov
mov
jl
enter
adc
inc
ret
ins
imul
repz
cli
clc
lock
rcl
lods
push
sbb
xchg
shl
out
(bad)
bound
pushf
cmps
shr
push
outs
add
in
test
(bad)
dec
enter
fimul
pop
dec
mov
pop
inc
xchg
inc
mov
adc
dec
cmp
mov
test
inc
(bad)
jns
push
and
cmps
hlt
pop
cmp
mov
cmp
int
cmps
stos
pop
xor
cmc
sub
adc
sub
call
ret
xchg
test
lock
adc
stos
add
stos
pop
adc
mov
add
jno
sbb
jno
lods
lock
arpl
out
inc
jp
fs
xor
xchg
dec
cwde
mov
aam
pusha
outs
fistp
cmp
sub
push
mov
jmp
and
dec
adc
cmps
loop
or
cmc
icebp
(bad)
jns
and
fucomi
sub
mov
stos
clc
mov
cld
fdivr
das
popf
sub
xor
(bad)
dec
xor
addr16
(bad)
(bad)
adc
cmp
add
pop
cmps
xchg
or
xchg
cmp
or
(bad)
aam
mov
inc
lds
push
xor
cwde
fs
in
sub
and
mov
sbb
repnz
dec
mov
cmp
popa
std
and
jne
sub
sub
aas
cmp
clc
mov
stc
stos
push
fisubr
mov
mov
fisub
lds
pop
mov
sub
loope
push
sar
inc
imul
push
scas
pop
scas
lds
into
push
pop
xlat
cmc
mov
(bad)
aas
fld
sbb
es
fidivr
or
sub
out
cmps
lds
adc
xor
or
fmul
cmp
jmp
push
add
mov
ins
sti
push
mov
clc
fldenv
cmp
out
jno
fdiv
or
test
jmp
daa
jg
cmp
popf
xor
loop
sti
jmp
inc
sbb
inc
ss
loopne
inc
test
pop
mov
in
es
push
push
sbb
(bad)
inc
mov
sbb
or
fadd
mov
dec
lods
cs
jge
stc
add
inc
push
adc
retf
xchg
cmp
js
aas
(bad)
repz
push
mov
dec
out
xor
movs
pushf
out
enter
push
xchg
lds
xor
(bad)
or
inc
cmp
sar
arpl
mov
fs
data16
bound
sub
dec
mov
scas
xor
out
mov
fs
adc
lods
(bad)
or
test
outs
jle
jmp
mov
mov
mov
pop
dec
pop
add
jno
or
arpl
add
sub
outs
out
mov
lock
sub
ins
mov
xor
add
sbb
adc
out
(bad)
test
jae
mov
xchg
leave
jno
ins
mov
xchg
test
pop
push
inc
sbb
leave
xor
cli
push
inc
inc
icebp
out
cmp
mov
mov
cs
mov
es
dec
and
mov
sub
mov
xchg
or
push
ror
add
push
jbe
xchg
mov
ja
(bad)
and
shl
inc
inc
repz
pop
imul
out
jb
pop
loopne
mov
add
xchg
fsub
xor
xor
bound
inc
test
sbb
ins
cmp
ror
sub
dec
or
cmp
lea
and
jge
cmps
jl
test
lods
call
jb
sti
or
test
jmp
scas
pop
mov
jl
stc
sar
mov
fbld
xor
je
cmp
(bad)
test
mov
or
pop
xchg
add
out
mov
jb
or
repz
pop
fidiv
outs
or
mov
mov
cli
pop
pop
cmp
stos
mov
ret
or
(bad)
mov
cmp
cdq
mul
mov
popa
mov
das
in
mov
int3
inc
fdivr
jae
das
enter
pop
mov
hlt
cdq
cld
dec
pop
loope
pop
add
std
scas
test
cli
out
iret
mov
jno
mov
popf
jl
scas
int3
fidiv
outs
movs
nop
or
fwait
jge
clc
or
cdq
and
outs
inc
mov
and
dec
data16
inc
je
xor
out
push
dec
call
mov
jne
jb
cld
push
cmp
jg
jne
mov
lock
jl
in
push
sahf
pop
arpl
jl
pop
adc
mov
js
fs
mov
fsubr
and
call
les
inc
push
adc
jl
mov
dec
fimul
xchg
or
shr
mov
aad
mov
cmc
loope
out
push
mov
ret
inc
or
ret
pusha
sub
adc
sbb
cmc
mov
stc
adc
fst
sub
jecxz
mov
and
cmps
mov
shr
int3
and
shr
(bad)
cmps
xchg
into
dec
mov
mov
cli
in
adc
jns
mov
mov
xchg
fwait
sbb
out
lahf
push
inc
xor
xchg
rcr
push
or
bound
xchg
jl
dec
add
jl
push
jmp
rol
mov
inc
out
je
ret
les
mov
mov
fcmovnb
dec
and
fidiv
mov
xchg
out
inc
ins
les
dec
inc
mov
mov
fidivr
or
retf
sub
aas
test
fstp
fld
pop
cmps
repnz
scas
sub
outs
clc
cmp
mov
ds
nop
int3
dec
dec
cmp
inc
div
push
push
ins
jno
cdq
dec
test
mov
jno
xchg
mov
pushf
lahf
leave
int3
or
add
nop
cwde
or
push
push
xchg
sbb
scas
fwait
out
add
jo
inc
xchg
popa
jb
or
xor
or
push
movs
popf
test
retf
daa
push
cmp
cmp
jbe
movs
adc
idiv
not
sub
adc
xchg
add
sub
pop
lods
xchg
dec
mov
xchg
in
mov
out
ins
pop
ins
cmc
mov
mov
jle
dec
sub
aas
shr
fxam
pop
sbb
out
add
repz
cmp
sar
jecxz
je
shl
lea
into
mov
daa
inc
test
pushf
and
enter
xor
xchg
mov
mov
cwde
sub
mov
ret
scas
shl
shl
adc
sub
outs
xchg
cli
(bad)
scas
xchg
add
scas
mov
ins
retf
shl
xor
sub
pop
enter
in
mov
shl
jmp
std
test
or
sub
add
jmp
in
(bad)
mov
xchg
outs
jno
add
ret
xchg
dec
iret
sub
scas
xor
and
and
movd
jg
jb
push
mov
adc
enter
sub
xchg
cmp
ffree
(bad)
cmps
adc
lahf
popf
scas
sub
dec
aad
pop
out
fistp
sub
inc
jmp
xchg
nop
imul
scas
cli
xor
movs
jae
jmp
aas
ret
pop
(bad)
ins
cmp
les
leave
loope
cmc
inc
jnp
push
sbb
inc
mov
ds
lods
push
add
das
or
imul
or
add
test
or
movs
popa
stc
dec
sbb
rcr
mov
or
(bad)
int
dec
imul
ins
mov
int
(bad)
fcom
adc
pushf
add
dec
dec
and
xor
adc
test
xchg
xchg
mov
push
xor
ret
push
pop
lahf
ds
out
shl
stc
mov
cmp
popf
adc
add
fsub
mov
aas
sahf
jbe
mov
sub
pop
cwde
daa
(bad)
xor
jb
daa
mov
pop
jo
repnz
push
jmp
mov
rcr
fistp
inc
sub
(bad)
int
test
mov
adc
dec
outs
aas
add
int3
dec
pop
mov
push
fwait
sub
popa
or
dec
sahf
das
xchg
(bad)
mov
out
rcl
daa
fcomip
dec
jp
or
xor
test
jmp
out
(bad)
sub
mov
rol
inc
popa
lods
cwde
call
sub
lahf
aad
sbb
add
jg
cmp
cmc
lds
sub
rol
jae
dec
into
out
call
mov
int3
out
dec
(bad)
lea
mov
mov
push
aad
rcl
je
sbb
into
scas
int3
cmp
imul
hlt
cmc
sar
xchg
loop
jbe
pop
jge
mov
sub
arpl
adc
jmp
sbb
adc
(bad)
fbstp
mov
sbb
icebp
sub
push
lds
js
xchg
fisub
or
js
or
jge
stos
ret
(bad)
out
stc
aad
push
mov
enter
das
pop
daa
mov
mov
xlat
xor
or
mov
scas
jae
jae
imul
mov
xor
test
inc
(bad)
hlt
loopne
cld
inc
fcomp
jge
mov
hlt
push
arpl
xor
imul
pop
movs
adc
pop
jmp
mov
div
mov
mov
std
int3
or
inc
and
lea
test
or
repz
cmp
jae
nop
scas
cs
outs
in
lahf
jmp
bound
push
mov
cdq
jbe
or
mov
lds
pop
xchg
cmc
mov
gs
dec
stos
pop
xor
xchg
sar
test
add
das
fs
call
xor
les
test
xor
dec
mov
sahf
retf
mov
inc
mov
inc
rol
lahf
sqrtps
add
dec
push
daa
repnz
sbb
cli
jno
adc
xchg
retfw
ficomp
mov
mov
adc
sub
loopne
aam
cmp
in
imul
sahf
pop
mov
ja
arpl
scas
rol
sub
cmp
sar
xor
fsubr
aam
jne
mov
adc
retf
mov
loopne
cwde
push
add
ffree
loopne
and
sub
shl
sub
sub
in
clc
(bad)
jl
push
out
nop
adc
or
lea
sbb
cmp
mov
inc
sub
aas
jl
mov
std
adc
dec
sbb
add
call
and
es
xor
and
popa
(bad)
daa
cmps
add
push
(bad)
inc
jne
sbb
or
inc
xor
test
cmp
lock
mov
sbb
cwde
loop
xchg
test
dec
sub
sbb
mov
xlat
inc
inc
stos
mov
push
xchg
mov
mov
or
inc
loop
shr
sbb
and
pop
mov
push
xor
cmp
mov
(bad)
jge
pusha
pusha
pop
mov
jle
or
scas
mov
imul
aam
stos
scas
add
ss
xchg
mov
lods
stc
xchg
sbb
cmp
push
repnz
call
loop
push
and
sub
fidiv
cli
and
out
mov
scas
xchg
push
sub
xchg
(bad)
jae
xchg
sbb
sbb
sub
mov
adc
repz
lock
jp
jecxz
gs
adc
out
dec
mov
jns
(bad)
int
iret
push
je
add
inc
jne
push
xchg
not
hlt
cdq
cmp
sar
or
ja
int3
jmp
mov
xchg
xor
(bad)
(bad)
rcl
imul
adc
repz
shr
shr
xchg
(bad)
jmp
or
pop
cmc
dec
pop
and
jmp
scas
outs
push
sahf
dec
in
and
imul
mov
inc
push
es
lahf
in
inc
mov
cdq
shl
lea
mov
cmp
mov
push
and
mov
push
sar
pop
cmp
mov
stos
mov
jge
call
mov
sti
enter
sub
daa
bound
mov
shl
adc
test
shl
jno
sbb
int3
stos
jecxz
lock
mov
mov
lea
cs
imul
mov
gs
mov
ins
dec
cmp
jg
rdtsc
js
daa
or
(bad)
fisubr
xor
inc
(bad)
shr
adc
fild
cmp
mov
cmp
mov
outs
cmp
dec
ret
shl
xchg
leave
popa
test
dec
repnz
cmp
mov
lahf
fistp
sbb
xor
movs
not
cmps
jg
and
mov
push
pop
cmp
int
adc
out
jge
addr16
bound
lea
imul
test
mov
pop
inc
inc
cs
stc
je
fdiv
adc
and
xor
out
in
pop
scas
inc
popa
mov
in
aam
or
movs
out
mov
adc
iret
dec
mov
mov
fsubrp
mov
sbb
sub
loopne
sub
js
fild
test
dec
mov
push
ret
int3
xchg
xchg
xlat
sahf
and
xor
jns
push
dec
inc
push
test
stc
shl
jo
out
out
add
cmp
out
pusha
adc
rol
in
xor
push
mov
es
jae
fistp
sbb
in
retf
push
xlat
xchg
jno
mov
push
pop
xor
jl
adc
pusha
and
mov
push
mov
sar
sbb
add
push
ret
js
dec
pop
push
fistp
clc
repz
push
inc
xor
pop
jle
daa
iret
das
and
call
stos
xchg
daa
sbb
enter
dec
mov
xchg
sub
adc
pusha
pop
ret
sub
mov
popf
mov
pushf
iret
leave
mov
or
in
push
ja
jg
cmp
ret
mov
arpl
xor
imul
mul
repz
out
and
mov
jne
test
push
dec
and
jmp
xchg
or
and
jp
ret
add
pop
xchg
movs
jns
sub
push
stc
inc
into
ins
jecxz
dec
dec
mov
xor
icebp
js
push
xor
add
pop
clc
out
loopne
xchg
popa
jo
push
test
adc
outs
push
shl
in
pop
pop
addr16
add
stc
sub
idiv
inc
pop
int3
mov
loope
and
loope
out
jbe
sbb
das
in
adc
cwde
sub
enter
shr
clc
push
lea
jb
pop
sbb
mov
pop
arpl
or
sub
xchg
retf
mov
push
shl
aad
adc
out
arpl
in
sub
aaa
ja
movs
cmp
dec
fst
in
push
mov
nop
inc
jb
dec
jl
xchg
mov
out
inc
pusha
sahf
addr16
inc
push
xchg
test
int
aaa
sbb
leave
xor
mov
loop
pop
mov
sub
mov
push
pop
cmp
inc
mov
and
test
call
sbb
cmc
sbb
fnstsw
repnz
pop
or
push
mov
add
imul
retf
inc
rol
sahf
push
adc
int
or
pop
test
shl
test
lds
scas
ss
ret
mov
push
daa
xor
mov
cmp
lock
popf
add
inc
popf
dec
jns
ja
inc
test
(bad)
ins
mov
test
out
mov
pop
or
sub
xchg
cld
enter
cmps
mov
inc
dec
repz
ret
push
rcr
test
fwait
jbe
sub
lea
test
push
inc
xchg
addr16
pushf
bound
mov
int
ficom
jb
and
dec
mov
sbb
sar
push
sbb
icebp
out
mov
cwde
cld
out
or
iret
sub
mov
xor
scas
imul
mov
lods
jne
iret
sbb
mov
hlt
out
lea
xchg
mov
pop
mov
hlt
push
inc
dec
push
push
out
int
inc
jmp
clc
xor
in
(bad)
mov
outs
mov
ror
adc
aad
and
jp
out
xchg
mov
push
adc
jecxz
mov
fld
hlt
adc
in
add
movs
pop
loop
lea
cmp
pop
cmp
sar
or
test
push
out
dec
inc
jno
enter
pop
sahf
test
xlat
aam
stos
and
push
fild
push
aas
dec
mov
mov
rsqrtps
mov
xchg
jp
(bad)
mov
mul
sub
mov
stos
lods
retf
mov
ret
and
movs
cmp
es
pop
shl
cmp
dec
out
mov
pop
sbb
mov
mov
dec
pop
dec
mov
mov
add
sbb
sbb
ins
mov
xchg
add
pop
mov
and
xchg
push
retf
imul
xor
jle
jmp
inc
sub
and
out
out
inc
loop
sbb
mov
nop
mov
div
or
xchg
cmp
outs
sbb
ror
mov
(bad)
sti
cmp
mov
fwait
pop
(bad)
iret
dec
push
call
imul
mov
pop
mov
(bad)
cld
fnstcw
imul
inc
jo
add
(bad)
mov
sub
scas
js
aas
cmps
lea
pop
sti
xor
lods
cmc
(bad)
retf
mov
jmp
into
sub
inc
cmp
lods
in
loope
jl
xchg
imul
mov
dec
xor
xchg
mov
in
inc
imul
popa
inc
jae
dec
mov
ror
lahf
mov
and
jae
jle
ror
jg
push
pop
pop
mov
push
enter
cmp
shl
daa
jg
jg
inc
pop
sti
mov
pusha
mov
xor
fistp
cmps
pop
or
fnstsw
fnsave
inc
push
sbb
xlat
sub
pop
test
mov
in
cmp
push
mov
mov
lahf
fisubr
xor
cdq
dec
and
adc
imul
pop
sar
lea
sub
xor
fadd
(bad)
sub
cmps
movs
mov
push
inc
sbb
neg
push
dec
test
dec
dec
fs
inc
mov
cwde
mov
mov
adc
pop
xor
call
or
and
fadd
dec
cli
(bad)
xchg
mov
in
ficom
xor
es
sbb
(bad)
ds
into
fcomp
lock
test
adc
fidivr
pushf
adc
mov
sahf
push
aad
add
inc
les
(bad)
icebp
inc
mov
mov
jne
pop
rol
pusha
out
es
lds
scas
jge
jecxz
pop
cmp
dec
pop
jns
movs
jne
push
pop
out
push
fnsave
jo
mov
cdq
or
imul
adc
jg
push
mov
or
mov
mov
cld
push
inc
xchg
popa
pop
sbb
dec
xchg
movs
cmps
pop
mov
test
in
sub
add
mov
xchg
std
or
push
inc
mov
push
and
mov
ror
jecxz
loopne
jle
add
sub
pushw
test
sahf
cmp
out
xchg
adc
ds
adc
imul
into
mov
jbe
or
pop
sahf
div
xor
fidiv
stc
mov
push
ja
mov
arpl
push
imul
lods
or
adc
iret
mov
mov
sub
(bad)
sub
lahf
test
and
inc
in
ficomp
sub
xchg
dec
(bad)
and
out
sbb
(bad)
in
rol
cmps
(bad)
jo
imul
scas
mov
push
cmc
ja
nop
aad
mov
mov
pop
jp
mov
add
in
fisubr
inc
iret
sbb
aaa
jnp
dec
push
cld
mov
jge
push
psubsw
pushf
fild
call
push
push
mov
mov
dec
dec
ret
lock
sub
lods
out
int3
mov
setne
imul
enter
add
or
mov
jle
data16
dec
adc
loop
and
(bad)
jno
pushf
inc
arpl
adc
or
std
xchg
pop
stos
icebp
call
add
cdq
fnstenv
jmp
add
pusha
dec
and
xchg
push
cmp
jnp
cmps
test
mov
adc
adc
add
adc
jp
loop
cmp
mov
add
sub
jnp
sub
or
pushf
mov
loope
test
add
nop
mov
dec
pop
mov
lods
pop
aaa
add
cmc
jp
cmp
imul
pop
and
ret
push
es
lea
pop
aas
sub
push
xchg
mov
inc
jae
sub
xchg
(bad)
neg
push
inc
ret
adc
mov
add
jne
and
jmp
xor
in
xchg
mov
cmp
ins
mov
inc
pop
scas
pop
jne
sbb
jmp
cmp
jne
pop
retf
aad
gs
enter
imul
xor
inc
ud0
add
adc
bound
jmp
push
sub
sub
sbb
jb
call
sbb
mov
and
jae
(bad)
pop
stos
inc
fist
xchg
ins
sub
xor
add
test
sub
test
sub
mov
enter
inc
adc
and
or
js
jge
mov
call
sub
hlt
jg
cmp
std
pop
(bad)
jge
dec
add
inc
mov
pusha
adc
and
xor
xor
inc
inc
in
pop
(bad)
adc
push
xchg
and
sbb
into
lahf
ja
repz
je
xchg
or
and
outs
mov
adc
rcr
jge
fnstenv
and
ss
cmp
adc
xchg
fs
cmps
and
dec
or
clc
xchg
mov
out
add
pusha
xor
lea
dec
fidiv
adc
fs
or
jne
pcmpgtd
retf
add
clc
fwait
inc
mov
inc
div
lods
ret
pop
(bad)
sub
mov
jmp
inc
mov
pop
cmp
jbe
pop
mov
pop
sti
xor
push
movs
int3
sbb
xor
dec
sti
retf
sub
jg
rcl
cmps
inc
adc
and
dec
adc
mov
xor
dec
jp
imul
repnz
(bad)
repnz
mov
test
xor
jg
jbe
sbb
addr16
pop
and
repnz
dec
xchg
xor
push
cmc
lahf
call
jmp
push
cmp
in
pop
xor
cld
aaa
ds
add
rcr
xchg
ins
js
jnp
loopne
(bad)
aas
inc
ds
mov
and
inc
lds
inc
cmp
push
test
add
mov
dec
mov
add
cld
dec
loope
imul
lahf
or
xchg
cs
inc
push
test
or
xchg
out
mov
pop
cdq
xchg
sbb
dec
dec
and
pop
movs
aam
repz
popf
or
mov
jo
mov
ja
dec
push
iret
pop
sbb
xor
jecxz
inc
stos
pop
push
call
imul
icebp
pop
std
int3
(bad)
stos
pop
stos
repz
add
stos
sub
push
pop
lds
jns
push
je
(bad)
or
ins
inc
je
add
ror
jp
cmp
out
xchg
mov
sbb
jmp
add
(bad)
les
ins
int
push
enter
pushf
jno
popf
aas
mov
and
mov
std
neg
or
enter
cdq
cmps
out
lods
jmp
sbb
and
movs
leave
inc
cdq
dec
in
inc
cmp
push
jle
movs
pop
cs
lock
ins
ret
retf
sahf
inc
push
pop
inc
icebp
push
(bad)
(bad)
js
mov
shr
test
repnz
mov
les
popa
xlat
ins
lock
mov
stc
aam
sub
int3
jmp
shr
add
jl
pop
push
jb
push
bound
push
cs
test
jmp
and
push
in
std
adc
jmp
push
popf
jg
loop
jne
movs
mov
addr16
not
push
mov
pop
push
and
push
mov
shr
add
push
push
test
pop
push
cld
imul
push
in
mov
mov
add
push
mov
dec
xor
inc
je
mov
push
sbb
mov
mov
sub
std
call
xor
aad
or
jae
shl
popa
movs
mov
out
idiv
xchg
push
outs
adc
sbb
cmp
mov
push
clc
push
out
call
ret
cmps
mov
mov
xchg
ss
push
jl
int
jbe
xchg
ins
push
mov
ret
inc
jmp
stc
dec
dec
rcr
adc
sti
addr16
jbe
fwait
or
sbb
or
mov
xor
lahf
(bad)
(bad)
jle
test
push
cmps
(bad)
or
jle
dec
test
fwait
xchg
ret
popa
cmp
in
rol
sti
aaa
xor
out
mov
pop
cmps
sub
sub
sbb
pop
cmp
jmp
sub
dec
outs
cld
rol
test
js
or
inc
pop
and
lea
pop
repnz
in
dec
out
imul
imul
jp
outs
ret
(bad)
cmp
mov
dec
fimul
stos
cmp
sbb
mov
rol
jge
adc
into
lods
nop
clc
inc
leave
stc
push
fs
adc
mov
xor
ret
add
pop
shl
inc
pusha
or
inc
mov
jae
add
sub
adc
dec
adc
dec
jg
and
stc
or
mov
icebp
and
jmp
and
pop
mov
rol
jmp
int
sub
popa
cmp
fcom
push
fwait
cmp
push
mov
mov
push
icebp
xchg
mov
popa
stos
fs
imul
lods
dec
retf
mov
xor
call
mov
xchg
sbb
enter
cdq
out
push
mov
idiv
xchg
sar
add
outs
mov
mov
stos
adc
mov
sub
jae
and
pop
(bad)
jmp
je
fdiv
dec
cmps
xlat
sub
add
adc
or
aaa
and
popa
xchg
call
cdq
int3
inc
scas
(bad)
and
xor
cmps
sub
pop
les
add
fcomp
and
or
xchg
dec
movs
iret
mov
sbb
out
fcmovne
aad
loope
inc
mov
mov
icebp
push
or
jae
fistp
fnstcw
mov
retf
push
pop
push
and
add
pop
pop
aam
ss
adc
icebp
push
adc
call
mov
or
aam
imul
mov
add
mov
xor
mov
add
mov
sbb
add
or
mov
mov
aas
lahf
aad
pusha
ret
cmp
dec
add
adc
jl
jnp
adc
aaa
or
mov
dec
xor
iret
outs
push
adc
cmc
movs
aaa
iret
jmp
xchg
nop
xchg
lahf
mov
push
xor
mov
mov
movs
(bad)
pop
cmp
pop
cmps
push
sub
sub
clc
sbb
dec
add
out
mov
out
pop
pushf
ror
jnp
aaa
and
mov
push
outs
mov
aas
push
pop
jmp
pop
sbb
sbb
or
minps
push
sub
lods
pushf
dec
es
ret
cmp
fxch
xor
dec
adc
shr
jae
enter
lds
lds
nop
mov
jbe
xor
push
(bad)
imul
xor
pop
repz
pop
and
pop
mov
stos
aad
sahf
test
jg
ret
scas
mov
pop
cmp
inc
mov
mov
mov
sti
push
jecxz
jo
push
mov
mov
add
push
mov
lods
pop
xor
adc
add
sbb
call
dec
ins
mov
dec
in
call
mov
jne
js
push
pop
mov
pop
lahf
jmp
mov
outs
push
mov
xchg
mov
cmc
sub
fwait
ins
inc
enter
pop
ja
inc
mov
push
ss
xchg
cmps
or
lods
test
repnz
sub
pushf
mov
adc
es
jecxz
mov
addr16
inc
xor
sub
call
das
jmp
shr
sbb
pop
lods
popa
mov
push
push
and
lods
scas
push
adc
fwait
push
mov
test
jb
xchg
push
(bad)
jge
popf
js
or
das
outs
cwde
aaa
mov
inc
or
repnz
dec
ret
push
mov
push
push
add
and
scas
je
stos
dec
mov
mov
and
ins
xchg
ror
inc
mov
cwde
xchg
addr16
repz
icebp
movs
jle
movs
stc
mov
push
in
in
cmp
inc
mov
or
jb
repz
int
out
push
xchg
out
das
pop
out
imul
gs
popw
xchg
fs
shr
dec
out
xor
jmp
out
ret
fsubr
push
popf
jmp
idiv
movs
pop
add
lahf
push
mov
fstp
ja
fwait
(bad)
stc
jno
or
dec
add
xor
inc
pop
scas
and
icebp
sti
and
adc
ds
jmp
in
loopne
xchg
inc
mov
mov
fld1
arpl
and
xchg
jne
mov
push
in
pusha
in
xchg
pushf
mov
std
popf
scas
(bad)
ficomp
sbb
cs
sti
and
in
sub
(bad)
xor
xor
cld
add
pop
inc
gs
sub
sbb
ds
into
add
inc
jmp
les
adc
and
movs
adc
mov
imul
adc
sbb
cdq
pop
jmp
sbb
test
inc
cdq
lock
arpl
movs
aad
in
outs
imul
test
lahf
dec
fdecstp
pop
adc
inc
and
vmovlpd
dec
movs
adc
sbb
jae
push
int
pop
add
ja
repnz
loope
inc
add
and
mov
out
in
stos
(bad)
pop
das
ins
or
dec
lea
shl
lods
add
adc
movs
inc
mov
lock
jne
jmp
jae
or
sbb
cdq
and
in
sbb
jo
out
(bad)
pop
xor
sbb
js
mov
xchg
(bad)
gs
xchg
not
cwde
mov
fnstsw
icebp
xor
jge
test
sahf
repnz
jae
rcr
retf
add
test
inc
(bad)
mov
call
hlt
in
in
shl
dec
adc
sub
jl
mov
dec
call
ds
mov
push
or
pop
into
fdivr
shr
xchg
xor
add
pusha
add
mov
mov
add
push
les
mov
ror
mov
jp
dec
xchg
dec
mov
enter
push
lock
and
leave
jmp
imul
cmps
adc
movs
inc
std
sbb
or
gs
cmp
int3
lahf
int
loopne
fld
mov
push
cmp
(bad)
dec
fs
jae
xchg
jg
test
test
push
clc
mov
or
pop
ret
dec
repnz
pusha
(bad)
retf
mov
fisttp
mov
outs
ins
sbb
adc
and
cmp
hlt
xor
(bad)
jo
cmp
clc
jecxz
adc
bound
pop
adc
jmp
mov
mov
fst
add
pop
sub
and
mov
call
ret
fdiv
pop
(bad)
movs
addr16
dec
aam
fdiv
pop
adc
push
mov
dec
aad
addr16
test
scas
hlt
popa
shl
stc
or
jns
xlat
div
clc
cmp
ss
inc
rol
xchg
mov
cmp
scas
scas
mov
std
xor
lock
lods
jmp
(bad)
and
cli
xchg
mov
or
adc
xor
call
jbe
inc
pop
rol
test
inc
xchg
inc
lods
adc
dec
mov
xchg
shl
addr16
fs
fisub
and
pusha
cmps
cmps
scas
xchg
mov
dec
mov
dec
les
adc
adc
(bad)
in
in
aaa
into
mov
cdq
mov
pop
jecxz
mov
cdq
mov
and
and
sub
cmp
mov
adc
scas
test
inc
jnp
aaa
dec
mov
pop
jae
mov
std
mov
mov
xchg
js
dec
scas
retf
mov
cmp
pop
sbb
mov
in
mov
test
xor
push
jge
adc
sub
sbb
aam
mov
les
sub
adc
cmp
ret
arpl
(bad)
(bad)
pop
mov
mov
je
les
mov
inc
je
jmp
inc
(bad)
cli
pop
mov
jb
xor
clc
mov
push
cmp
inc
adc
dec
lds
adc
add
mov
cmp
rcl
or
inc
xchg
jmp
pop
js
mov
sbb
mov
test
std
mov
pop
cmp
cmc
std
mov
fdiv
stos
or
icebp
cmps
and
sub
push
dec
or
xchg
dec
jb
mov
in
ficomp
mov
mov
push
cmp
cmp
add
push
in
cmp
push
(bad)
enter
jle
jecxz
call
mov
in
jecxz
pop
imul
sbb
fst
mov
dec
sbb
jmp
out
mov
pop
hlt
imul
out
dec
outs
fs
fwait
mov
mov
pushf
push
add
inc
and
lea
call
xchg
jbe
lods
inc
fiadd
xor
xor
stc
cli
push
adc
cmp
push
pop
adc
stos
call
xor
mov
ins
stc
fcomp
jns
inc
mov
dec
addr16
(bad)
xor
jne
mov
add
or
and
cmps
jl
stos
rcr
cs
add
jmp
mov
(bad)
pop
inc
nop
sbb
ret
inc
mov
push
dec
xor
push
push
aas
test
adc
shl
nop
sbb
mov
hlt
jnp
into
add
movs
ds
pop
dec
popf
jle
fadd
dec
xor
ins
adc
frstor
icebp
mov
lds
and
ds
gs
jmp
or
pop
daa
cli
sbb
jle
mov
add
lock
fwait
push
pop
or
cmc
inc
cmp
xchg
mov
mov
and
adc
jno
outs
stos
pop
cwde
add
mov
add
add
inc
mov
shl
inc
xchg
fcom
fisttp
and
dec
sbb
cmp
popf
sbb
pop
mov
mov
inc
or
cmp
adc
add
jno
stos
mov
adc
shr
ss
sar
out
mov
in
pusha
inc
adc
cli
loope
daa
or
pop
cli
dec
icebp
sub
inc
xchg
(bad)
pop
add
xchg
repz
adc
lods
xchg
outs
(bad)
xchg
mov
out
mov
fidiv
mov
loop
movs
xchg
pop
mov
fldenv
loopne
nop
pop
stos
xor
popf
fcom
daa
jecxz
stos
adc
ja
outs
sub
or
leave
ret
push
add
cwde
push
sbb
pop
sbb
xchg
in
or
jecxz
test
test
loope
pop
push
mov
(bad)
mov
inc
loopne
mov
cmps
int
dec
xchg
out
xchg
bnd
pop
dec
repz
cmps
rcl
std
fild
in
cld
sbb
fbld
sar
sbb
loop
outs
push
jl
(bad)
icebp
arpl
add
mov
push
adc
xor
pop
jmp
mov
push
loopne
add
repz
ins
fstp
xchg
push
xchg
nop
or
jbe
cmp
add
lock
jecxz
aam
loopne
xor
pusha
xor
inc
inc
sar
or
dec
mov
out
mov
sbb
lea
ins
pop
(bad)
neg
loope
mov
mov
push
aaa
lock
dec
cmp
pop
sub
(bad)
xchg
out
jo
adc
mov
call
pop
push
and
cmp
aad
ds
sbb
js
jl
mov
sub
aaa
gs
pop
mov
push
outs
stos
pop
jns
andnps
aam
pop
rol
pop
pop
sti
jbe
inc
in
fcomp
adc
outs
lds
mov
arpl
jg
punpcklwd
mov
adc
pop
ss
sbb
jmp
xchg
sbb
idiv
push
jo
fnstcw
and
sbb
mul
fadd
pop
cmp
inc
inc
bound
ror
fs
mov
fmul
lods
fst
dec
es
and
sub
fnstsw
xor
sbb
xor
inc
cmc
sub
dec
jg
inc
enter
imul
pop
jnp
(bad)
ins
dec
sbb
test
add
ret
jmp
sub
(bad)
pop
je
adc
pop
and
xchg
xchg
push
fisubr
mov
out
lea
rcr
cmp
sti
sub
nop
movs
sbb
xor
jae
outs
int3
mov
sub
push
popf
pop
in
jge
mov
rol
jmp
jmp
push
cmp
cdq
cwde
push
sbb
cmc
js
jae
xor
loop
sbb
lods
int
dec
push
xchg
mov
push
cs
cmc
lods
dec
pop
inc
(bad)
ret
not
popa
icebp
dec
xchg
xchg
sbb
ja
pop
dec
test
jle
cmovae
cmc
(bad)
xor
bound
sub
push
cdq
xor
push
aad
push
inc
push
push
mov
pusha
cmp
or
das
test
movs
mov
mov
mov
mov
shr
out
push
add
adc
iret
ins
test
add
inc
in
sbb
dec
test
pop
jecxz
call
ins
or
push
(bad)
loop
sub
jb
inc
call
in
test
jl
jb
jns
add
out
sbb
jns
out
out
jns
les
lock
movs
jle
jnp
or
(bad)
std
xchg
push
adc
repz
mov
and
cmp
pop
pop
in
fisttp
inc
inc
int
or
xlat
and
test
popa
push
or
inc
and
pop
adc
and
or
or
adc
test
push
jo
rol
add
es
adc
(bad)
test
add
mov
(bad)
and
add
in
push
or
jo
out
ja
sub
loop
or
inc
add
js
jno
scas
retf
cmp
and
lahf
in
cld
fmul
nop
and
call
or
imul
iret
mov
add
and
mov
mov
fcom
mov
ins
dec
fisttp
push
loop
mov
ins
mov
cdq
ret
mov
cld
(bad)
shl
jne
mov
mov
jno
jnp
ins
cmps
ret
jge
int
imul
sbb
xchg
push
and
xlat
push
xor
in
pop
fld
mov
in
cmps
and
cmp
ror
nop
fild
xchg
or
sbb
je
sbb
ins
cmp
push
sbb
pop
pop
ja
icebp
out
push
sar
cmp
add
iret
inc
push
(bad)
call
jge
sbb
es
inc
mov
cld
pop
into
das
ret
clc
sub
mov
jmp
push
jnp
add
xchg
cmps
mov
jno
ror
std
pop
push
retf
push
pop
ins
xlat
popa
jne
jbe
jbe
mov
and
sub
dec
icebp
jno
repz
xchg
bound
xor
jg
fsub
mov
sbb
aam
fiadd
(bad)
(bad)
ds
mov
scas
xchg
mov
inc
rol
sub
mov
std
lods
sti
or
mov
frstor
add
mov
add
jns
sbb
(bad)
mov
push
or
inc
cmp
xchg
in
sar
push
hlt
loop
dec
or
and
data16
cwde
mov
ror
pop
(bad)
int3
xor
push
punpcklwd
test
dec
or
data16
cmp
nop
ins
mov
mov
jne
ja
jno
jno
inc
or
ins
aam
ret
inc
leave
pop
loopne
mov
fld
cs
jle
dec
xor
jns
sub
xor
int3
xchg
xor
pop
cli
jns
push
mov
sbb
clc
mov
adc
mov
cwde
(bad)
jle
push
sbb
mov
call
pop
mov
(bad)
mov
fsub
mov
mov
or
loope
inc
xchg
fwait
js
mov
repz
ja
enter
les
test
mov
jne
fs
cmps
scas
adc
je
lds
jmp
enter
lods
push
mov
mov
neg
out
sub
jbe
xor
jmp
sub
mov
jp
jl
xor
fcmovnb
mov
sbb
add
mov
cmp
jg
push
jae
sahf
out
(bad)
popf
pop
mov
aad
push
xlat
mov
cmps
sbb
dec
sub
loopne
inc
xchg
(bad)
xchg
stc
dec
cld
or
out
mov
add
std
pop
call
repnz
test
mov
mov
dec
fwait
adc
ret
mov
cmp
lds
jp
jmp
mov
sub
cmp
shl
in
arpl
and
loop
int
and
scas
or
cmp
jge
rcl
lds
jnp
in
lods
fstp
mov
loope
dec
(bad)
pop
add
xor
popf
or
cmp
add
js
push
imul
test
nop
rcl
xchg
scas
ins
pusha
add
es
not
or
dec
bound
(bad)
hlt
mov
daa
cmp
jmp
hlt
lods
jecxz
push
jmp
scas
or
cmps
lods
push
vfmadd132ss
or
scas
xchg
lea
ins
sbb
fidiv
stos
xchg
shr
inc
mov
repz
mov
gs
adc
lock
lods
inc
das
lahf
addr16
fidiv
stos
and
inc
dec
or
jle
shl
sbb
pop
adc
or
repz
push
push
mov
rcr
and
shr
aam
and
mul
or
pop
adc
xchg
jo
xchg
(bad)
and
mov
sbb
mov
add
js
pop
cmps
pop
push
jle
(bad)
cmp
mov
retf
xor
add
mov
sbb
pop
movs
jp
fdiv
shr
aas
repnz
and
sbb
dec
mov
inc
jne
cli
sbb
loopne
mov
outs
ficom
jmp
dec
inc
xchg
jbe
fcomp
push
pavgb
mov
stos
or
dec
xor
aaa
jge
or
dec
dec
bound
out
mul
jmp
cmp
lods
add
push
mov
jmp
mov
(bad)
mov
xchg
jmp
sbb
mov
xchg
scas
and
push
shl
fs
sbb
xchg
ss
fldlg2
mov
jge
inc
int3
inc
test
xor
js
fadd
das
xchg
test
xor
mov
cdq
mov
push
lea
mov
adc
sub
and
xchg
pushf
sbb
dec
cli
lds
out
shl
jae
dec
push
mov
inc
fisubr
sub
aam
sub
inc
(bad)
jecxz
ret
xchg
(bad)
js
jmp
adc
pop
fistp
outs
ja
mov
dec
outs
mov
fadd
mov
cmps
or
pop
push
add
push
cmp
retf
repnz
mov
pop
push
std
mov
or
push
push
sub
fwait
xchg
in
call
aad
sub
mov
mov
or
das
or
add
bound
mov
ins
mov
xchg
xchg
rol
inc
and
call
adc
js
xchg
xchg
sub
jo
imul
std
rcr
rcr
in
jmp
lea
mov
sbb
add
mov
(bad)
jge
mov
pop
inc
jmp
nop
sar
push
mov
inc
pushf
iret
jmp
push
(bad)
xor
dec
adc
and
pop
out
push
cs
sbb
mov
out
icebp
jg
pusha
shl
jno
xchg
cmp
xor
(bad)
lods
or
into
aam
or
adc
and
sti
xor
sub
sbb
push
inc
cmc
sahf
fidivr
mov
push
icebp
(bad)
fdivr
mov
xchg
fisttp
sbb
add
sbb
int
(bad)
and
jbe
iret
push
cmp
pushf
or
mov
test
jmp
(bad)
retf
jle
fsubr
lock
push
mov
cmp
fcom
ins
mov
fcomi
mov
mov
cmp
jp
mov
sti
inc
mov
mov
in
cmp
mov
iret
sbb
fstp
sar
cmp
push
and
scas
nop
sti
and
dec
fadd
pop
scas
cmps
mov
(bad)
or
mov
lods
sbb
sub
imul
inc
dec
scas
dec
jp
cld
cmp
or
jmp
inc
pop
shl
mov
mov
in
jo
gs
jle
mov
shl
(bad)
js
rol
jge
mov
jb
dec
mov
(bad)
ror
or
mov
call
int
jns
adc
sub
lods
fcomp
xchg
addr16
or
pop
push
fsub
adc
push
push
push
aas
inc
pop
mov
push
dec
stos
mov
(bad)
or
gs
dec
aas
addr16
jle
push
cwde
nop
jge
jmp
sbb
mov
icebp
stos
out
mov
xchg
dec
xchg
mov
fwait
xchg
jno
sub
dec
sar
mov
push
cmp
sub
stc
and
fsub
aaa
mov
dec
add
(bad)
outs
dec
adc
stos
inc
fiadd
out
int3
jle
sub
push
not
in
mov
data16
mov
xor
cmp
cmp
inc
mov
push
into
stos
icebp
push
cmp
pusha
call
mov
jg
dec
jmp
sbb
cwde
xor
xor
adc
arpl
mov
push
sar
jp
(bad)
or
iret
cmp
push
inc
aam
jl
jmp
adc
or
xor
add
vphaddwq
arpl
outs
mov
call
mov
call
int
fmul
pusha
push
fwait
adc
ss
jnp
mov
inc
push
push
inc
loope
xchg
add
pop
dec
(bad)
jmp
lds
mov
daa
mov
mov
pop
or
xor
adc
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
dec
xchg
dec
pop
add
fidivr
sub
cdq
inc
clc
dec
mov
pop
add
out
and
ins
push
(bad)
mov
sbb
adc
scas
repnz
adc
inc
mov
enter
or
push
xchg
mov
pop
frstor
repz
or
sub
push
push
nop
movs
dec
dec
dec
pop
mov
mov
jmp
jmp
xchg
and
jns
outs
xchg
sub
and
stos
jns
push
test
pusha
mov
jb
retf
repnz
(bad)
icebp
mov
cmp
imul
mov
clc
inc
scas
pop
cmc
or
or
out
fcom
dec
lods
sbb
xor
xchg
lods
(bad)
sbb
ss
pop
jnp
icebp
mov
cmp
xor
dec
dec
xor
dec
mov
sub
int
call
inc
nop
or
or
mov
and
test
pop
out
mov
out
je
mov
xchg
add
(bad)
jge
scas
(bad)
mov
fistp
jo
jbe
shl
fld
into
dec
mov
jne
sub
test
push
ds
out
add
mov
pusha
mov
pop
push
imul
mov
jg
xchg
push
scas
out
out
sbb
imul
ja
sbb
ret
xchg
inc
sub
dec
repnz
jle
out
jo
mov
or
arpl
cmps
shr
xor
and
fsubr
xor
mov
cmps
xchg
mov
mov
jmp
and
push
fisttp
pop
sub
and
push
test
jnp
cdq
inc
scas
or
pop
push
add
sub
adc
or
inc
call
std
add
(bad)
xor
mov
or
mov
jg
ss
dec
sbb
mov
ret
mov
int
shr
jg
jg
sub
repnz
or
popf
mov
aas
mov
and
pop
pop
adc
fist
sbb
jmp
xor
out
loop
mov
xchg
mov
jmp
pop
fwait
push
cmps
push
aas
nop
sbb
lea
pop
cmp
sub
nop
push
repnz
mov
mov
cli
xlat
mov
cmps
ins
dec
popf
test
push
xchg
int
cmps
std
ss
mov
mov
and
(bad)
nop
fs
push
dec
xchg
dec
jb
xor
imul
mov
push
int3
dec
mov
mov
sbb
sbb
xor
jbe
into
xchg
outs
shl
cmp
jecxz
adc
das
dec
mov
cmps
dec
dec
rcl
mov
test
or
sti
sbb
cld
sbb
loope
jmp
dec
sub
dec
push
cmp
push
int3
dec
retf
clc
xlat
dec
sbb
jne
fmul
mov
xchg
xor
adc
jb
aam
pusha
leave
and
lods
pop
(bad)
fs
ins
fidiv
dec
lods
dec
mov
push
push
and
inc
mov
inc
jle
lods
mov
test
sbb
mov
sbb
jns
cli
js
enter
pop
lods
nop
and
aas
sahf
fnstenv
xlat
xor
push
enter
sub
cwde
(bad)
in
sbb
mov
xchg
clc
iret
shl
dec
and
dec
jle
ja
mov
inc
push
xchg
push
imul
fdivr
aaa
out
aas
cmp
jecxz
mov
out
cmp
jae
imul
jl
rcl
(bad)
nop
(bad)
stc
ss
jo
(bad)
lea
call
clc
xor
aas
fisubr
jnp
popa
adc
push
pusha
sbb
and
je
push
pop
arpl
fist
xchg
aas
pop
adc
cmp
jno
pop
adc
push
push
mov
(bad)
lds
mov
cdq
aam
popa
inc
mov
popf
jbe
iret
add
icebp
push
es
mov
xor
mov
ds
aaa
retf
(bad)
out
mov
pop
xor
mov
fs
movs
loop
pop
or
sbb
cmps
mov
push
xchg
retf
scas
test
adc
mov
scas
jnp
fcom
jmp
push
inc
adc
test
mov
loop
inc
push
outs
fist
jp
pop
fidivr
xchg
inc
inc
adc
jo
movs
sub
mov
cs
dec
test
cdq
and
xor
jg
adc
push
loope
movs
dec
and
xor
sbb
jecxz
xor
dec
lds
loopne
adc
mov
xor
jns
mov
imul
int3
mov
mov
fcom
sub
pop
mov
dec
xchg
adc
xchg
pusha
cmp
stos
shl
dec
pop
sbb
je
dec
push
adc
in
cmp
inc
mov
or
mov
cmp
mov
ins
repz
loopne
sbb
stc
xchg
test
xlat
daa
xchg
adc
imul
icebp
repnz
sti
pop
cmp
mov
mov
dec
or
les
dec
lock
mov
inc
jmp
int
jp
retf
iret
mov
inc
mov
test
enter
sbb
sbb
fwait
clc
mov
inc
clc
data16
adc
imul
push
xor
xor
jecxz
sub
jae
jg
clc
push
pop
or
ficomp
ret
mov
add
mov
inc
add
or
pop
mov
xor
rol
std
push
or
and
inc
int
adc
imul
add
inc
jmp
and
and
and
sub
sub
mov
ret
adc
xchg
les
lds
mov
xchg
push
out
pop
push
push
(bad)
cmc
lods
mov
aas
lock
xchg
mov
repz
jns
cmc
or
push
fild
icebp
dec
or
xchg
mov
xor
cld
fidivr
out
push
mov
push
push
push
(bad)
mov
xchg
std
xor
out
out
xor
inc
mov
das
mov
xor
je
inc
jg
ret
repnz
inc
aam
xchg
sbb
add
movs
ja
loop
push
adc
repz
xor
adc
push
and
or
push
mov
retf
mov
mov
mov
clc
add
je
(bad)
arpl
imul
mov
dec
push
in
out
iret
pop
mov
add
dec
sub
or
xchg
shl
clc
xchg
stos
(bad)
lds
sub
dec
push
add
jo
pop
adc
loop
jb
adc
dec
loop
pushf
push
sbb
fsubr
das
sbb
sub
sub
es
jmp
xor
mov
mov
adc
jp
inc
fbstp
inc
ins
sub
aad
pop
mov
xchg
push
and
imul
dec
stos
push
push
mov
movzx
mov
mov
pop
cld
test
mov
mov
fsubrp
loope
out
push
jp
inc
fucom
lahf
xor
shr
mov
jns
ja
scas
or
xchg
inc
pop
mov
dec
mov
popa
cmps
sahf
cmps
xchg
xor
fld
(bad)
mov
test
or
lods
pop
add
sbb
mov
jno
lea
inc
dec
dec
xor
xchg
lods
xor
scas
data16
adc
imul
pop
aaa
pop
or
jmp
inc
jecxz
ficomp
repnz
xchg
ret
jge
aad
lahf
stos
fdiv
(bad)
dec
dec
std
das
jne
sbb
cmps
dec
push
in
daa
push
fisubr
push
and
(bad)
ds
jae
mov
adc
or
inc
push
fs
das
pop
mov
jp
sbb
cmc
fidiv
out
loope
xor
push
xlat
jmp
cmp
(bad)
mul
cmp
pop
popa
xchg
and
cdq
rcl
jb
fs
sbb
inc
int
dec
shr
jo
leave
mov
jmp
sbb
ds
psubd
push
lock
adc
adc
mov
cmp
fs
push
call
mov
add
data16
es
cmp
cmp
dec
mov
out
inc
daa
lods
cmp
pop
in
imul
prefetcht2
int
(bad)
ja
ss
adc
stc
sub
mov
je
xor
stos
pop
lahf
scas
ret
leave
int
mov
ret
cli
rcr
shl
push
sti
or
push
fild
int3
push
mov
xor
test
and
pop
rcr
dec
stos
ins
jae
test
fiadd
and
mov
inc
shl
dec
jl
inc
loopne
mov
sbb
sub
xor
popa
or
ret
sub
or
sbb
cwde
and
leave
or
into
mov
leave
sahf
jmp
mov
pushf
cmp
sbb
movs
pop
js
lock
pop
leave
imul
cmp
fisubr
xlat
push
(bad)
das
adc
jge
addr16
ror
fst
int
stos
call
mov
push
adc
xchg
mov
je
in
neg
mov
push
mov
sub
daa
sbb
push
add
xchg
les
sar
mov
std
in
xor
mov
(bad)
fisttp
xor
cs
test
inc
push
loopne
pop
jae
cmp
aas
adc
push
stos
test
sub
inc
cmc
mov
out
dec
nop
call
ror
lea
xchg
or
push
jle
call
stc
jge
mov
sbb
sub
push
push
stos
stc
mov
ss
jg
mov
cwde
test
arpl
call
repnz
aaa
and
lea
(bad)
jmp
in
dec
fld
mov
arpl
dec
ret
ror
cdq
fld
sub
inc
mov
mov
add
and
call
movs
xor
or
push
mov
or
push
mov
addr16
shr
xchg
sbb
add
rcl
mov
mov
pop
xor
loop
push
jl
mov
mov
pop
test
shl
adc
push
mov
fiadd
jmp
fsubr
icebp
call
ror
fst
rcl
jle
mov
dec
retf
fs
cld
or
and
xor
ins
test
out
add
push
lock
(bad)
pop
fwait
les
das
jmp
and
adc
adc
int3
mov
jno
gs
jmp
cmp
push
jns
cs
sbb
xchg
fsubr
xor
inc
ins
addr16
xor
sbb
hlt
sub
inc
cmp
adc
jns
mov
mov
lods
sub
les
ds
jo
ror
out
xchg
xlat
mov
mov
enter
pop
add
add
xchg
mov
popa
cmp
mov
add
je
mov
xor
jecxz
fdivr
jns
sub
push
cmc
jmp
sub
mov
cmp
in
cmp
dec
pop
(bad)
imul
es
shr
das
shl
cmp
and
nop
add
sub
sub
cmp
jo
xor
js
cmps
int3
fsubr
mov
not
inc
add
aaa
rcr
mov
mov
jle
pop
imul
fsubrp
fst
cmp
jb
jnp
dec
arpl
loopne
popa
push
scas
xchg
and
mov
cli
call
enter
lds
(bad)
and
fimul
(bad)
inc
movs
sti
pop
mul
stos
mov
mov
test
xchg
cdq
sbb
int3
movs
div
cmp
mov
pop
pushf
(bad)
les
jmp
popf
movs
cmps
mov
ins
pop
and
adc
icebp
lea
xor
inc
movs
jge
out
leave
mov
retf
jnp
inc
cmp
adc
(bad)
(bad)
out
gs
push
repnz
pop
repz
retf
adc
and
push
pop
mov
or
pop
ror
mov
xchg
stc
cmp
(bad)
jl
jbe
jne
mov
ins
jecxz
dec
inc
jnp
add
das
shr
mov
mov
(bad)
and
outs
push
mov
sahf
mov
(bad)
sub
mov
dec
ja
mov
aad
repz
das
and
cmps
aaa
or
call
mov
add
or
jl
fs
mov
add
xor
adc
dec
js
enter
retf
repnz
inc
test
and
jno
rcl
sbb
sub
out
test
pop
rcl
pop
sub
(bad)
loope
pop
jmp
inc
inc
adc
and
shl
test
lods
mov
mov
jb
call
scas
shl
cwde
pop
cmp
xor
movs
fwait
in
sbb
fistp
int
cmc
xchg
dec
add
enter
add
mov
dec
mov
das
add
cwde
add
ins
icebp
adc
in
movs
lds
mov
mov
xor
xor
dec
hlt
jbe
fwait
adc
das
push
adc
or
xor
ss
xor
(bad)
bound
in
dec
bound
out
sti
mov
jno
push
dec
pop
je
sub
push
mov
les
or
das
sbb
ins
ror
add
daa
sbb
sbb
arpl
retf
dec
jmp
call
xor
sub
movs
inc
xchg
xchg
fwait
test
or
pop
inc
call
xor
adc
aaa
fdiv
sub
jns
aad
mov
xchg
pop
shl
lods
lahf
xchg
(bad)
mov
sahf
sti
loop
inc
push
int
scas
ds
adc
es
inc
cdq
das
mov
push
pop
jl
cli
lds
mov
dec
iret
jp
int
sti
mov
pop
sub
sahf
int
push
in
xchg
cmp
dec
sar
(bad)
idiv
jbe
test
cmp
repnz
es
aas
mov
xchg
xchg
mov
mov
mov
cmp
outs
imul
xchg
jmp
push
push
xchg
into
aad
inc
cmp
test
stc
sti
pusha
(bad)
fcom
fld
mov
mov
icebp
jns
and
je
lahf
sbb
jp
dec
mov
inc
cmps
mov
(bad)
std
jg
inc
aad
add
jle
daa
cmp
shl
dec
popf
mov
mov
in
inc
je
movs
jnp
push
out
mov
popf
add
mov
sub
inc
cmp
sub
jnp
and
jg
push
pop
ins
repnz
mul
adc
sub
push
or
xlat
cmp
fsubr
jp
retf
inc
call
ins
es
cmp
fwait
dec
popf
jo
sbb
adc
pop
jge
sbb
pop
scas
jg
mov
jae
cld
jmp
out
xlat
sar
dec
lds
pop
dec
inc
outs
out
mov
xchg
clc
cld
aaa
lods
adc
nop
adc
jb
adc
adc
jp
add
sub
cs
pop
test
mov
(bad)
frstor
push
mov
fldenv
out
mov
sub
in
dec
mov
lea
mov
aam
cs
aam
(bad)
pusha
pop
mov
fmul
jmp
jne
imul
cmp
add
xchg
stos
in
mov
sbb
lea
sub
mov
addr16
scas
imul
iret
scas
ret
push
fistp
mov
mov
mov
push
cdq
sar
hlt
in
dec
aaa
fisubr
pop
sbb
or
push
push
fsub
push
call
jp
push
cwde
add
xchg
jo
cmp
(bad)
movs
or
jp
jae
cmp
jmp
(bad)
int3
(bad)
mov
sub
mov
jmp
shl
(bad)
ins
fs
cmps
in
and
mov
mov
add
mov
jl
sahf
mov
outs
(bad)
mov
cmps
in
xchg
and
and
or
adc
cmc
mov
in
movs
push
(bad)
int3
ficomp
out
nop
stc
and
dec
sbb
mov
add
sub
sbb
popa
dec
add
aad
out
fcomp
xchg
aaa
out
loop
push
cmps
jmp
test
pop
cs
cmc
cli
sti
(bad)
jne
sub
mov
add
(bad)
and
jmp
fdiv
jbe
std
mov
mov
and
mov
daa
(bad)
(bad)
jg
les
sub
fimul
xchg
sbb
xor
cmp
xor
push
xor
cdq
ss
(bad)
jo
pop
in
fldcw
push
push
(bad)
xchg
cmp
mov
cmp
sti
push
add
add
lock
dec
mov
in
retf
cmp
xchg
sbb
sub
(bad)
lock
cmc
mov
xor
cmps
xchg
and
mul
add
mov
ins
push
ss
push
sbb
stc
adc
test
push
mov
cmp
int
repnz
adc
arpl
xor
or
outs
call
repz
aad
scas
(bad)
mov
push
out
inc
(bad)
stos
sbb
or
mov
xlat
xchg
stc
or
pop
dec
mov
cmp
push
xor
and
imul
out
xor
out
inc
test
neg
frstor
shr
ss
pop
push
mov
sub
push
pop
mov
ss
and
outs
and
dec
aas
cmp
dec
jg
add
arpl
and
push
inc
jl
fsqrt
hlt
inc
sub
nop
repz
(bad)
and
int
pop
aaa
std
enter
inc
dec
xchg
or
mov
ret
sub
or
sbb
pop
outs
iret
or
adc
fs
pop
js
aam
or
mov
xchg
sub
fldcw
push
pusha
sbb
pushf
inc
stos
jge
int
xchg
xchg
xchg
popf
ret
dec
icebp
cld
frstor
fld
jnp
inc
xchg
cli
mov
mov
into
hlt
stos
in
and
dec
movs
push
mov
xchg
stos
ja
add
ds
inc
cmp
je
sbb
cwde
mov
retf
sub
shr
call
cmp
add
sub
lock
sbb
repnz
stos
arpl
loop
add
inc
mov
lahf
dec
mov
adc
push
sbb
out
(bad)
outs
rol
jnp
mov
mov
test
ret
int3
push
inc
xor
push
pop
jb
xor
add
pop
xchg
jae
push
arpl
into
clc
fst
push
mov
daa
xlat
scas
inc
mov
push
jmp
mov
mov
aas
into
out
inc
dec
add
pop
shl
(bad)
sbb
xor
(bad)
ins
fdiv
vucomiss
jge
sbb
test
ins
sub
inc
fbstp
adc
int
xchg
mov
or
(bad)
adc
dec
mov
jbe
(bad)
stc
fild
add
test
pop
pop
test
push
and
inc
sub
mov
ds
cwde
(bad)
jo
mov
xchg
jns
cli
inc
pop
sub
push
mov
das
repz
outs
cmp
cmps
push
(bad)
imul
fs
cld
push
shr
mov
pop
mov
mov
xchg
mov
call
pop
push
aas
mov
pop
imul
sub
cwde
push
fs
mov
cs
cmc
adc
fs
cld
ror
push
inc
or
pop
fs
inc
popa
dec
sub
and
sti
mov
inc
xlat
jmp
cmp
push
loopne
mov
jns
inc
push
pop
loop
loope
pushf
movs
sub
retf
jl
mov
and
sbb
cmps
and
test
jnp
push
xor
adc
(bad)
and
push
(bad)
mov
push
push
cmps
pop
adc
shl
dec
fs
pop
retf
mov
mov
or
and
mov
mov
push
inc
inc
in
loope
push
jmp
cli
lods
cs
in
(bad)
aam
lods
mov
cli
mov
xor
stos
xchg
sub
mov
jno
or
jp
mov
scas
shl
mov
jl
lea
inc
(bad)
fld
scas
fist
and
fisubr
cdq
mov
mov
sar
test
movs
add
xor
mov
push
movs
cmp
mov
fdiv
sbb
rcl
out
arpl
fwait
ja
dec
cmp
stos
lahf
jae
cmp
lods
add
and
push
mov
repz
mov
cmp
lock
fs
mov
jno
sbb
out
pop
pop
xchg
push
mov
aad
arpl
int3
out
jmp
or
call
ror
push
icebp
icebp
out
cbw
and
mov
shl
pop
jmp
adc
clc
xchg
int3
jno
sbb
pop
push
dec
fst
leave
inc
cwde
cs
shl
aaa
cdq
mul
cli
sbb
lea
into
fdivr
mov
and
fcom
or
pop
shl
repz
lock
push
sti
dec
mov
into
pushf
sub
iret
add
int
and
push
mov
pop
sbb
jecxz
push
jmp
and
pop
fwait
jge
push
daa
or
dec
fs
inc
mov
retf
and
pop
ins
fwait
adc
shl
inc
xchg
mov
or
jbe
pop
sar
sbb
mov
addr16
push
out
add
add
jecxz
mov
into
push
pop
mov
stc
idiv
int3
data16
pop
xchg
leave
pop
xchg
adc
dec
stc
xlat
cmp
mov
inc
xchg
xchg
mov
popf
pop
das
lods
push
fmul
in
push
movaps
aaa
xchg
jb
rcl
cmp
sbb
fmul
(bad)
fdivr
fst
outs
cmp
sub
pop
jle
xchg
pushf
or
inc
adc
std
and
sbb
into
pop
jo
push
xor
push
cmp
mov
adc
lock
test
mov
mov
xchg
mov
push
pushf
xchg
sbb
jle
test
cli
in
pop
stos
aas
push
jno
cmc
fsub
sub
gs
hlt
mov
bnd
out
mov
add
pop
cdq
jl
jnp
push
iret
aad
xor
pop
dec
pop
and
jmp
hlt
adc
lods
(bad)
scas
mov
in
idiv
xor
hlt
and
cdq
jo
rol
xor
jmp
add
and
das
loop
fimul
inc
xchg
push
sub
sub
mov
sbb
mov
or
cs
xchg
dec
gs
sub
adc
das
mov
cs
arpl
cmp
lea
fldenv
out
sub
outs
xor
mov
scas
pop
mov
add
outs
data16
aas
mov
in
in
or
retf
idiv
out
adc
int
xchg
scas
fstp
dec
in
dec
jae
scas
cmps
sub
sub
lahf
ret
push
loope
push
mov
jb
movs
aam
out
retf
lds
jne
push
arpl
loopne
cs
pop
sub
jne
jmp
mov
jl
or
or
fsubr
retf
ret
cmp
(bad)
iret
es
jo
mov
mov
stc
sbb
int3
dec
or
adc
fwait
and
pop
dec
adc
fiadd
add
dec
dec
pusha
sbb
xchg
jne
cmp
outs
cmc
push
jb
xor
ja
pop
stos
fistp
jg
push
iret
clc
cmp
mov
js
sub
push
and
ror
xchg
push
dec
addr16
in
jg
xchg
sbb
rcr
sbb
and
pop
sbb
div
mov
xchg
jmp
jne
pop
(bad)
icebp
mov
andnps
sbb
dec
test
push
idiv
dec
loope
adc
pop
push
cmp
inc
add
pushf
or
pop
std
fs
pcmpeqd
aam
push
sahf
cld
mov
xor
(bad)
xor
mov
jae
rcr
pop
xor
lock
aam
dec
retf
jg
add
fimul
xor
xor
arpl
test
jb
stos
sub
dec
test
jmp
stos
mov
out
mov
stos
jp
out
int3
sub
xor
rol
push
in
push
fstp
xlat
adc
lea
(bad)
js
shl
(bad)
in
retf
es
ds
adc
mov
sub
dec
adc
dec
retf
or
add
inc
iret
ds
push
cmp
data16
sub
dec
or
push
mov
popa
jmp
shl
pop
cmp
mov
call
xlat
mov
pop
sbb
cli
lahf
outs
push
lods
(bad)
or
mov
lock
xchg
ins
movs
cmps
or
jae
aas
dec
and
idiv
(bad)
mov
fs
push
call
mov
aas
mov
xchg
out
dec
adc
xor
jnp
jae
std
lahf
jp
lds
stos
jbe
push
scas
or
or
jnp
cmp
not
aaa
xchg
cmp
pop
lea
sub
aad
movs
xchg
psubw
(bad)
aam
lods
lea
shl
adc
dec
push
mov
mov
sbb
iret
push
jb
int
mov
inc
push
shl
stos
or
cmp
xor
xchg
inc
(bad)
in
in
jle
mov
mov
cmps
pop
sti
pushf
mov
xchg
js
inc
add
scas
not
ss
cmp
push
fcomp
and
and
imul
fistp
mov
outs
(bad)
mov
ret
jo
sbb
pop
js
jns
outs
adc
push
cwde
sub
jecxz
fsub
test
idiv
fxtract
sub
cmp
int
test
sbb
xchg
lds
fild
adc
jns
xchg
movs
ins
and
push
sbb
jno
jl
ret
shl
push
jbe
movs
dec
adc
pop
ins
add
int
push
jae
test
jnp
cmc
cmp
dec
(bad)
cwde
xchg
pop
ds
pop
add
mov
sub
adc
ds
xor
and
sti
lods
add
out
out
bound
cmps
sub
jmp
mov
cdq
inc
fisubr
xlat
or
mov
call
sar
or
push
mov
xor
mov
ins
dec
push
jp
ss
dec
call
xor
add
outs
adc
mov
sub
retf
ja
inc
ret
cli
dec
imul
sbb
inc
mov
jmp
adc
dec
jge
dec
add
inc
js
pusha
scas
lea
dec
aas
shr
mov
cmp
mov
mov
jl
pop
out
inc
bound
loopne
stos
repz
int3
xchg
pushw
jbe
clc
dec
leave
jmp
cmp
jno
jl
dec
sar
pusha
loopne
jmp
inc
int3
mov
jne
add
mov
ss
inc
into
adc
loop
or
cmps
jb
mov
pop
xchg
sbb
push
out
mov
fbld
cld
mov
je
add
xchg
sbb
cs
mov
enter
in
das
outs
call
jnp
lods
dec
leave
scas
cld
fild
loopne
mov
mov
or
js
cld
fdiv
adc
pop
hlt
push
mov
cmp
or
add
addr16
dec
cmp
bound
daa
jmp
movs
mov
mov
fcmovbe
dec
fs
bound
js
js
jo
mov
pop
retf
repnz
pushf
jns
pop
inc
add
jae
cmp
pop
mov
sbb
inc
cmp
out
into
xor
xchg
jb
adc
fld
mov
push
xor
xor
mov
pop
jo
jo
ror
daa
push
in
adc
sub
xor
cmp
(bad)
(bad)
cmp
stos
call
or
pop
sub
lods
in
xchg
in
sti
loope
xchg
test
cs
fisubr
sub
inc
pushf
ins
cdq
test
(bad)
sub
sti
jmp
div
sti
popf
or
and
sub
push
rcr
xchg
dec
xchg
sbb
sbb
fnsave
loop
pop
daa
icebp
pop
js
cdq
lahf
pop
or
scas
lock
xchg
dec
inc
push
mov
push
bound
fucomip
sbb
mov
cmps
and
push
ins
fsub
xchg
pop
call
adc
adc
add
aas
jae
xchg
and
movs
(bad)
movs
iret
jp
ret
mov
xchg
aas
mov
scas
cmps
(bad)
(bad)
add
dec
mov
mov
fidiv
dec
popf
pop
and
sbb
mov
dec
add
dec
and
xor
xchg
sbb
stc
ror
adc
scas
pusha
loop
sbb
loope
sub
daa
jne
push
inc
dec
xchg
dec
daa
jo
leave
sub
test
aad
pop
lods
loope
add
fwait
sub
ins
inc
cmp
fcomp
adc
pushf
mov
jg
or
mov
fsubrp
aam
xor
outs
std
das
bnd
mov
push
push
mov
xchg
add
dec
and
clc
fbld
jmp
adc
add
cmps
test
jmp
fwait
xor
clc
aaa
dec
(bad)
cmp
or
gs
outs
test
push
mov
clc
test
jno
movs
sub
or
shl
mov
jo
adc
iret
stc
sbb
(bad)
sub
mov
arpl
or
pop
ds
mov
int
(bad)
repz
(bad)
call
pop
push
in
add
cld
or
fiadd
sbb
test
push
imul
adc
cmps
fcom
mov
pextrw
sub
mov
imul
adc
dec
leave
daa
or
or
call
data16
mov
in
add
pop
or
add
leave
push
mov
mov
add
shl
stc
imul
push
jp
enter
xchg
mov
iret
out
aad
or
rol
fwait
in
(bad)
mov
rcl
fmul
dec
fsubr
pop
push
jbe
shr
xor
loope
out
and
pop
fbstp
test
in
pop
inc
retf
pop
add
(bad)
xor
fidiv
push
leave
and
loopne
fsub
add
fisttp
in
in
cmp
ror
jbe
pop
cmc
adc
rcr
add
push
icebp
add
cmp
loope
js
mov
xor
je
imul
mov
call
icebp
in
or
mov
dec
es
dec
popa
sub
int
mov
lahf
sbb
out
jg
xlat
iret
je
sbb
xchg
std
xchg
inc
mov
stos
ret
outs
xchg
cmp
outs
jmp
mov
dec
inc
in
and
les
shl
xor
jl
repnz
scas
inc
and
push
cli
mov
mov
es
or
lods
shl
pop
pop
mov
rol
add
jns
xchg
and
bound
adc
push
addr16
mov
xchg
add
pop
icebp
cmps
lds
mov
mov
xchg
pop
sub
test
popf
call
repz
es
ins
mov
(bad)
dec
out
and
je
addr16
aam
jg
add
daa
mov
sub
and
xchg
mov
cwde
cmp
adc
mov
icebp
out
and
inc
sar
js
and
popf
lods
push
(bad)
jl
shl
jo
push
mov
ret
and
aaa
lock
(bad)
sub
lds
sub
loop
mov
add
sbb
ds
es
and
cwde
test
hlt
jl
sti
pop
scas
mov
ins
ret
clc
lea
dec
loopne
fstp
rcr
mov
imul
add
repnz
outs
sti
mov
call
xchg
add
push
addr16
int
sbb
dec
xor
pop
sub
sar
mov
cmps
mov
rol
push
adc
push
xor
jno
add
mov
mov
mov
das
ret
push
or
pop
jae
sbb
mov
test
retf
inc
inc
test
mov
cmps
jle
leave
cmps
mov
sbb
addr16
rol
loopne
test
out
in
out
shl
ss
test
(bad)
jle
ja
std
icebp
sub
mov
mov
fwait
test
xor
or
cld
xlat
(bad)
xor
mov
icebp
mov
outs
adc
ficom
xor
sub
out
aas
adc
dec
pop
mov
test
mov
mov
js
mov
jno
dec
inc
test
push
loop
or
jmp
sahf
add
test
or
scas
xchg
int
xchg
and
mov
jmp
pop
dec
je
fidiv
mov
and
cmc
mov
scas
pop
jae
fisttp
xchg
loop
and
jns
int
jmp
mov
or
repnz
dec
jmp
lea
pop
cmp
adc
fidiv
ret
add
test
adc
movs
jne
outs
xchg
fucomip
mov
mov
rol
stos
xor
push
rcr
popf
xchg
or
(bad)
std
jecxz
push
rol
ror
std
mov
cld
lods
mov
add
inc
jp
mov
xchg
shl
xchg
sbb
outs
scas
xor
loop
pop
dec
movs
or
scas
pop
push
push
js
pop
scas
fnstsw
repnz
mov
(bad)
xor
lods
pop
push
(bad)
jns
pop
ins
sbb
cli
dec
push
sti
xchg
xchg
mov
(bad)
ficom
stc
or
dec
cld
sub
inc
jb
call
js
mov
pop
sahf
retf
ffreep
pop
mov
and
jge
jp
dec
xchg
mov
retf
jbe
cmps
fld
gs
stc
sahf
jae
je
(bad)
push
pusha
hlt
xlat
cmp
imul
cmp
sbb
lds
push
fwait
imul
pop
mov
dec
inc
jg
and
fwait
movhps
push
test
mov
ins
pop
pop
xchg
das
inc
jns
in
sti
jmp
loope
xor
sahf
sbb
mov
jmp
sbb
pop
adc
add
mov
pop
pop
mov
inc
cwde
push
xchg
jnp
jae
test
inc
ret
mul
rcr
or
xor
(bad)
mov
retf
adc
cmp
mov
sub
mov
xor
outs
mov
jle
and
jns
sub
bound
int3
test
outs
cli
fiadd
pop
jg
jo
jne
ror
dec
out
xchg
out
mov
fidivr
sahf
outs
jmp
sub
movs
fidiv
adc
mov
sahf
sub
in
jno
add
(bad)
xchg
ficom
mov
jnp
(bad)
jns
sub
loope
setp
or
repz
push
mov
cs
pushf
push
ja
aam
jo
cld
adc
pop
repnz
loope
mov
inc
cli
mov
push
or
ja
xchg
jmp
and
stc
xchg
leave
adc
out
pop
leave
lahf
jmp
std
sbb
js
call
lods
sub
cmp
and
ret
int
jg
mov
cmp
add
inc
add
call
xchg
sub
fwait
pop
icebp
jns
cmp
mov
loope
sbb
pop
ins
mov
jo
movs
sar
rcl
jns
(bad)
jnp
icebp
pop
ret
cs
jecxz
jnp
(bad)
outs
xchg
fwait
stos
into
jb
cmps
lods
mov
shl
and
xchg
loop
ins
dec
loopne
test
mov
lds
xchg
jmp
pop
push
sbb
(bad)
mov
ficomp
push
mov
ret
mov
lods
jnp
inc
mov
mov
ja
lds
cs
push
daa
ins
add
cdq
mov
and
ja
and
xchg
test
jle
sub
dec
pusha
stos
in
gs
cs
inc
mov
mov
pop
fidiv
aam
xor
xor
push
jae
sub
fimul
inc
sbb
repz
or
data16
jmp
mov
test
movs
jg
and
xor
push
inc
jl
mov
pushf
mov
inc
pop
jae
sbb
fidiv
and
cmp
fadd
sub
ins
(bad)
cmp
das
ss
mov
clc
jmp
push
ja
pop
add
xor
sub
popf
sbb
cmp
leave
mov
inc
jbe
scas
and
xlat
fisubr
(bad)
push
ja
sub
cs
iret
add
enter
ins
push
push
loopne
inc
and
xchg
loope
mov
aad
adc
mov
sub
rcr
sbb
out
lds
push
jnp
adc
rcl
clc
je
xchg
or
cli
mov
ja
mov
and
lahf
ja
aam
arpl
mov
add
xor
jb
push
add
sti
push
addr16
and
sbb
les
retf
inc
and
mov
cli
stos
jg
xchg
mov
push
pop
pop
mov
lods
jmp
mov
sar
inc
pop
hlt
stos
xlat
ret
ins
mov
inc
std
mov
dec
xchg
xchg
rol
pushf
mov
(bad)
js
pop
cmc
pop
pusha
mov
cmps
pop
cwde
jns
(bad)
jecxz
imul
neg
frstor
jnp
fmul
adc
sbb
ds
scas
ins
fcom
add
fimul
dec
das
dec
retf
ja
jl
push
pop
inc
dec
movs
in
ror
rol
inc
ror
mov
cs
cmp
mov
pop
out
push
bound
mov
sahf
mov
xchg
jmp
retf
arpl
(bad)
popf
mov
pop
push
test
push
shl
in
dec
lods
pop
lahf
sti
sub
popf
cld
ja
sbb
shr
dec
adc
pop
xor
ret
lahf
cmp
or
or
jno
pop
cld
push
sbb
xchg
push
pop
fs
push
mov
and
daa
and
cmp
jmp
or
or
imul
test
xchg
mov
in
inc
cdq
clc
jmp
pop
int
inc
pop
sbb
jno
adc
push
int
test
push
outs
add
sub
push
in
xor
test
adc
mov
push
outs
lds
adc
jnp
or
ret
mov
psubb
push
adc
push
mov
sti
inc
cmp
push
adc
(bad)
(bad)
push
xlat
cwde
or
fnstenv
sbb
dec
mov
inc
dec
cdq
mov
sub
jb
popf
arpl
xchg
cmp
lods
and
int
pop
xchg
mov
sub
jmp
loopne
sub
mov
cmp
jne
leave
adc
dec
add
les
mov
addr16
clc
daa
push
cmps
shl
bound
and
lea
imul
xchg
or
popf
mov
cmp
cld
mov
aam
pop
ret
xor
mov
push
push
dec
jecxz
pop
mov
push
cli
jo
int
fwait
jno
rcr
lods
sti
and
inc
cmp
and
mov
clc
imul
fucom
and
push
aam
cmp
fisubr
add
sbb
sbb
pop
std
loop
jae
icebp
dec
test
adc
in
pop
cmp
je
push
stos
xchg
jb
ret
(bad)
lahf
mov
std
push
cmc
repnz
js
mov
adc
fisttp
add
dec
sti
adc
movs
lods
imul
les
out
push
push
sbb
ret
stos
or
cmp
fidiv
dec
lods
mov
jnp
cdq
retf
jl
movs
data16
xchg
and
jo
fadd
mov
inc
add
int
dec
pop
dec
test
jns
cdq
aad
xchg
addr16
xchg
dec
push
or
out
jecxz
cmp
ins
dec
mov
repnz
enter
sbb
xchg
push
jnp
xlat
xchg
push
addr16
int3
lock
adc
xchg
ret
sub
cli
sbb
leave
mov
bound
idiv
stc
out
dec
retf
test
shl
jne
pop
aam
xor
xor
dec
mov
rcr
add
mov
repz
retf
mov
adc
arpl
sahf
or
add
test
mov
jb
test
imul
mov
jne
lods
cmp
sub
pop
pop
out
addr16
cmp
pop
mov
mov
aas
or
cli
push
jge
adc
sub
stc
xchg
dec
out
enter
les
pusha
mov
jmp
movs
add
stos
in
shl
jbe
cmp
mov
sub
push
add
push
pop
outs
and
cmp
in
push
cs
sbb
cmp
mov
xchg
xchg
xchg
jns
mov
xchg
cmp
lahf
(bad)
popa
dec
or
mov
sbb
fild
paddd
or
hlt
pop
dec
das
cmps
push
repnz
jne
in
test
out
sub
cmp
inc
sub
scas
add
lock
(bad)
sbb
ret
sub
inc
lds
xchg
es
jge
jp
inc
stc
mov
push
add
dec
rol
enter
ins
sbb
leave
es
cmp
or
adc
hlt
pop
sub
xchg
out
shr
shl
dec
add
dec
mov
jle
add
xor
mov
fsub
pop
test
adc
xor
or
dec
imul
ins
cwde
icebp
or
xor
ss
push
inc
mov
ficom
lods
scas
xor
inc
aas
(bad)
frstor
dec
fsubr
daa
out
xchg
fadd
aam
(bad)
aam
adc
shr
dec
addr16
fimul
xchg
ja
loopne
cmp
ins
in
loopne
imul
es
inc
xor
sbb
addr16
xchg
fld
push
cld
int3
(bad)
jnp
fidivr
popf
push
jecxz
rcl
push
add
icebp
push
dec
rol
inc
push
cmp
sbb
and
adc
adc
ds
stos
jg
xor
loope
inc
int
pushf
ds
xor
imul
dec
pop
mov
adc
fist
mov
xchg
test
xlat
scas
sbb
mov
mov
mov
mov
sub
(bad)
out
or
test
cbw
stos
(bad)
ja
mov
ret
or
pop
xlat
iret
(bad)
jl
push
js
gs
xlat
leave
sbb
aas
sub
and
dec
fsub
outs
pop
push
scas
mov
aam
add
cmp
mov
inc
jbe
test
jne
pop
rcr
mov
stc
in
daa
data16
push
or
xchg
dec
push
cmp
shr
push
fimul
shl
outs
test
daa
xor
not
xchg
dec
pop
and
jns
and
push
add
mov
fistp
adc
dec
(bad)
jne
mov
mov
push
sbb
lea
sbb
shl
ret
retf
xchg
push
aaa
pushf
je
inc
inc
mov
xor
xor
pop
or
cmp
sbb
sbb
js
adc
mov
call
adc
out
cmp
inc
ret
(bad)
push
sub
fs
test
das
mov
mov
mov
fcomp
pusha
loop
imul
and
mov
sub
nop
add
push
das
mov
dec
xor
mov
fwait
bound
adc
test
pop
xor
iret
mov
cmp
xchg
and
lahf
div
jle
adc
cld
popa
or
push
pop
retf
mov
sbb
dec
aas
pop
(bad)
cmp
cmc
sahf
push
lods
call
mov
jecxz
cmps
mov
repnz
inc
bound
xlat
mov
inc
cmp
jl
mov
mov
je
pop
jnp
inc
inc
mov
or
sub
add
mov
xor
in
push
imul
or
sahf
xchg
mov
bound
push
mov
cmp
dec
push
fstp
dec
inc
xchg
pop
sub
adc
push
jmp
mov
xor
push
sbb
out
jge
ret
sub
sbb
mov
or
cmc
hlt
mov
inc
test
ret
xchg
movhps
ds
mov
retf
pop
jo
stos
add
sbb
jmp
xchg
or
loopne
loope
jmp
xchg
jmp
(bad)
dec
mov
ins
ret
adc
mov
jbe
mov
push
scas
ds
xchg
mov
dec
push
sbb
retf
pop
popf
jge
lea
cmp
leave
push
sti
imul
int3
add
mov
xor
jae
movs
jmp
cs
inc
push
cmc
fisub
(bad)
fdivr
sub
cmp
test
xlat
loope
xchg
dec
in
imul
xchg
leave
int
adc
sub
pop
retf
lds
inc
dec
cmps
outs
retf
mov
inc
mov
loopne
aam
pusha
enter
or
adc
cmp
mov
adc
push
cmc
add
daa
sub
xor
pushf
je
xchg
xor
or
mov
ss
adc
fdiv
es
out
outs
and
outs
ins
das
or
add
(bad)
lahf
mov
leave
pushf
inc
mov
inc
xchg
shl
loope
jne
jb
sbb
inc
xchg
inc
cmps
sbb
es
ret
ins
jns
sub
xchg
js
pop
adc
jnp
fdiv
fwait
cld
adc
jle
mov
stos
pop
cwde
inc
mov
in
(bad)
leave
test
xor
add
and
xor
gs
and
lahf
push
int
cwde
loope
jmp
outs
out
ffree
cmps
arpl
dec
sub
popa
lds
(bad)
inc
add
jge
ss
cmp
outs
jp
or
cld
and
gs
inc
test
sub
lods
or
or
push
ds
ss
pop
daa
lea
fnstenv
ss
clc
nop
jns
jle
into
adc
xor
mov
xor
cdq
push
dec
repnz
(bad)
pop
jp
adc
jge
jecxz
nop
mov
and
xor
fwait
rol
sbb
jle
arpl
fsub
push
push
pop
imul
inc
add
and
mov
(bad)
sbb
pop
cmp
sar
pop
dec
cmc
mov
jb
and
add
(bad)
sub
xchg
loopne
fistp
cmp
mov
push
arpl
or
fsubr
mov
iret
sub
(bad)
fsubr
inc
xchg
add
gs
aam
out
mul
xchg
(bad)
mov
ficomp
sub
cmp
sub
ret
icebp
cdq
int3
push
or
add
ins
in
stc
add
add
jecxz
sub
pushf
les
push
mov
add
ficomp
inc
ins
jmp
push
data16
sahf
fimul
sub
jmp
stos
inc
inc
push
fcmovnbe
cwde
shl
aaa
push
lods
push
test
jno
mov
(bad)
mov
and
inc
mov
jbe
int
mov
cmp
cld
and
repz
je
mov
sar
xchg
mov
fwait
add
scas
out
das
hlt
inc
pushf
les
mov
mov
cwde
test
mov
and
test
and
mov
out
push
push
shl
inc
ds
stos
pop
add
outs
mov
iret
lea
mov
add
sbb
and
adc
xlat
mov
and
pop
imul
and
xchg
inc
and
lds
and
sub
jns
add
inc
daa
movs
and
inc
mov
sub
push
ret
push
jmp
js
test
xchg
fsub
cmps
in
mov
(bad)
lods
or
retf
shl
mov
cli
icebp
mov
iret
jmp
jp
jae
mov
mov
repnz
push
sbb
inc
mov
xor
xor
aam
in
push
or
scas
in
inc
inc
jo
sub
inc
xchg
adc
movs
cmp
pop
sub
jne
jmp
test
sub
mov
add
jne
cmp
repz
test
out
in
movs
nop
dec
xchg
dec
popf
jb
fmul
jno
sbb
std
stos
loop
inc
repnz
inc
jmp
lahf
in
cdq
or
jg
jle
lods
ds
pop
and
push
jg
mov
and
xchg
jg
data16
xchg
ret
and
int
push
mov
add
stos
sub
adc
hlt
shl
in
test
out
xor
loope
je
jg
inc
xor
mov
sahf
into
or
ins
and
add
sub
push
xchg
xchg
dec
or
stc
mov
imul
xlat
das
or
push
push
add
xor
ret
dec
hlt
clc
nop
pop
jnp
test
push
and
xchg
jnp
sub
cmps
(bad)
retf
push
pop
fimul
adc
(bad)
sub
sbb
outs
aaa
or
inc
in
adc
sub
sbb
jne
rcl
push
inc
and
or
nop
xchg
push
and
dec
push
mov
mov
xor
dec
fld
scas
mov
xchg
fcom
lea
popf
cmovne
push
sub
jnp
outs
enter
bound
scas
jb
mov
test
lahf
pop
xchg
jl
push
cwde
inc
fld
rcl
mov
xchg
sub
dec
repnz
inc
addr16
push
cmps
push
aaa
adc
sbb
outs
cli
test
or
fmul
mov
jae
and
adc
add
cli
out
sbb
add
mov
pop
mov
jb
jb
cmp
mov
push
sahf
mov
repz
enter
cmp
(bad)
stc
pop
inc
sub
cmp
push
cmps
ret
pop
(bad)
ds
aam
add
sub
shr
jo
(bad)
cmp
or
mov
xchg
xor
cwde
leave
in
mov
push
sbb
(bad)
data16
add
xor
jl
and
xchg
adc
scas
mov
xor
dec
enter
lock
cmps
dec
dec
fs
lea
push
inc
mov
xchg
dec
fcomp
dec
jmp
sbb
daa
out
mov
retf
pop
inc
movs
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
(bad)
std
mov
jmp
pop
push
inc
and
fsub
loop
adc
mov
add
mov
add
lods
jae
mov
pop
xor
rcr
adc
(bad)
out
jns
icebp
addr16
pop
mov
out
lods
inc
rcl
sub
sar
mov
push
mov
pop
mov
out
jbe
xchg
pop
jp
and
jecxz
fild
mov
in
test
and
or
cwde
cmps
sub
popf
into
mov
mov
pop
sbb
daa
sar
pop
jge
sbb
cmp
jbe
aam
gs
fstp
mov
dec
mov
push
ds
xchg
fimul
pop
aam
jmp
fild
test
pop
mov
adc
fcom
adc
fisttp
and
dec
mov
ror
mov
sbb
cld
fnstsw
push
leave
fadd
jbe
jns
ficomp
inc
psubusw
push
popf
xchg
test
out
popf
enter
(bad)
daa
lods
mov
shl
rol
or
and
sub
fdivp
enter
pop
imul
pusha
movs
idiv
jge
cmp
jg
mov
das
cmc
lds
xor
and
ss
rcl
(bad)
sbb
and
inc
lods
jmp
mov
outs
ficomp
xor
push
cs
ret
cwde
lods
movs
push
fs
jae
xlat
add
jecxz
vorpd
mov
rcr
jl
ins
xor
xor
clc
hlt
fdivr
(bad)
xor
je
out
xor
popf
pop
iret
int3
mov
cmp
and
jae
push
pushf
adc
mov
jl
pop
(bad)
xor
js
das
rol
cmp
adc
and
sbb
cmp
leave
xor
(bad)
fmul
lods
imul
dec
push
out
push
(bad)
or
nop
lahf
ja
ret
jg
(bad)
aad
and
or
call
cmp
xor
xchg
aaa
sbb
xchg
sub
mov
cmp
(bad)
inc
pop
xchg
inc
push
xor
adc
mov
out
sbb
jecxz
aas
fidivr
shr
sti
cmp
repz
sar
sti
sbb
sub
pop
add
es
cs
idiv
cs
ins
mov
repz
cmp
enter
js
push
dec
movs
adc
fldcw
mov
xchg
fmul
push
aas
jno
jb
out
or
mov
fadd
cmp
push
sar
or
(bad)
sub
rep
repnz
sar
or
and
scas
call
mov
in
retf
pushf
ins
jmp
ret
xchg
je
add
data16
pop
pop
sub
popa
bound
fwait
push
mov
mov
push
pop
call
ins
push
pop
add
xchg
pop
jno
jbe
sub
jnp
jg
in
jne
xor
dec
in
test
pop
xchg
pop
push
fnop
mov
push
loopne
shl
jle
std
pop
pop
pop
out
pop
stos
mov
jl
pop
sbb
lock
stos
stos
or
sub
cmp
mov
mov
stos
xchg
sub
int
iret
push
test
jge
outs
mov
xor
pop
stos
dec
pushf
stos
out
or
mov
daa
dec
test
lods
mov
ret
cmps
add
psubw
sbb
jle
imul
fsub
sbb
int3
loop
inc
push
not
cmp
in
int3
out
(bad)
sbb
sti
outs
ins
cmps
je
sbb
cmc
icebp
xchg
pop
adc
jmp
adc
fwait
lock
lahf
movs
outs
inc
aaa
mov
xchg
push
daa
push
rcr
movs
ins
add
mov
lea
xchg
xor
sti
cmp
cmp
lods
add
je
mov
dec
pop
inc
cmp
jae
lods
es
mov
lahf
nop
mov
in
(bad)
cmp
enter
mov
fisub
test
inc
repz
je
or
sub
stos
xor
(bad)
jp
shr
shl
pop
pop
call
or
jecxz
push
xor
sbb
test
dec
pop
fsubrp
test
sti
sbb
das
fistp
pop
sbb
jne
sub
cli
pop
xor
mov
cmp
pop
jmp
test
stc
(bad)
addr16
(bad)
dec
ror
sub
test
or
nop
jnp
mov
rcr
leave
pop
adc
loop
adc
inc
mov
xchg
dec
fsub
in
jne
add
jbe
push
inc
mov
aad
cmp
pushf
movntq
out
jno
mov
jecxz
pop
scas
push
pop
xor
jo
nop
jo
or
arpl
jae
out
sbb
addr16
dec
call
sahf
(bad)
add
add
ret
or
inc
retf
and
xor
inc
(bad)
sahf
jge
imul
fiadd
in
rcr
hlt
mov
jmp
pop
mov
cdq
and
xchg
mov
xor
xchg
ds
shl
cmp
lea
mov
and
popf
jne
mov
sub
sbb
fs
rol
test
adc
mov
jo
scas
movs
js
shr
out
dec
gs
(bad)
or
scas
xor
and
out
pop
enter
push
jecxz
jno
sub
mov
pop
mov
call
cli
mov
test
dec
add
(bad)
push
shl
xor
adc
pop
gs
xor
add
lods
jl
pop
adc
inc
sbb
fisttp
inc
sahf
fldcw
mul
push
retf
or
mov
or
sub
call
pop
or
bnd
pop
xor
scas
xor
jmp
imul
xor
cmp
cmp
aam
and
or
mov
lea
cdq
adc
test
sub
adc
into
sub
sbb
cmc
arpl
add
and
jp
sub
out
cld
imul
dec
xchg
scas
dec
xor
jae
daa
ins
sbb
vmread
loop
xchg
sbb
scas
mov
jbe
jbe
daa
mov
cmp
mov
pop
cmc
jmp
mov
jns
cmps
aad
cmp
mov
loopne
or
cmp
jnp
push
xchg
dec
or
mov
clc
sbb
cmp
fld
popa
addr16
adc
mov
aam
push
clc
mov
push
adc
gs
sti
sub
bound
xchg
je
adc
lahf
mov
(bad)
xchg
mov
add
sar
or
add
jp
iret
mov
add
int3
into
fcomp
movs
in
scas
lods
sbb
out
fist
fild
cmp
push
fcomip
pushw
cwde
xor
and
out
fild
mov
or
xchg
ss
push
xor
fisttp
xchg
pop
(bad)
pop
(bad)
in
jnp
ins
push
xchg
adc
imul
out
pushf
mov
clc
div
pop
sahf
out
adc
call
xchg
jecxz
cmp
sub
pop
out
mov
jbe
dec
xchg
shl
add
loop
cmp
and
cmp
pop
inc
jp
pop
mov
frstor
sub
aas
int3
fcmove
es
scas
cmp
xlat
sub
cmps
push
pop
cmp
mov
or
out
shl
pusha
pop
aas
std
in
cmp
push
mov
sar
mov
mov
mov
or
add
aaa
mov
aas
daa
lods
cwde
dec
dec
sbb
(bad)
ds
xchg
loop
enter
out
(bad)
loop
inc
xlat
xor
addr16
adc
adc
dec
push
xchg
mov
adc
stos
test
les
pop
or
and
ret
ins
stos
xor
and
(bad)
jno
addr16
xchg
sub
or
cmp
and
pop
lods
dec
std
jp
imul
aad
repz
in
stos
jbe
or
psadbw
add
punpckhwd
lock
loopne
jb
mov
xor
or
jge
aad
add
(bad)
xor
ret
cmp
pop
(bad)
fstp
adc
sub
retf
ins
stos
ja
test
adc
int
lods
jne
push
xor
cdq
sub
stos
adc
xor
add
test
and
fsubrp
fprem1
sbb
imul
(bad)
xor
dec
cwde
or
or
push
push
jno
push
adc
push
fucomi
clc
out
mov
mov
addr16
push
push
sbb
ins
or
dec
push
shl
xchg
loop
aaa
iret
rcl
jnp
add
cmp
jmp
xor
jns
lods
jmp
mov
xchg
adc
fs
inc
xor
inc
and
mov
fmulp
ins
mov
jmp
dec
fwait
or
mov
mov
jge
imul
into
inc
sbb
mov
stos
lock
sti
xor
push
clc
cmp
call
dec
pop
mov
jmp
nop
mov
and
and
icebp
cli
imul
cwde
idiv
fcom
cmp
adc
jge
dec
push
mov
cmc
dec
clc
in
mov
enter
xchg
or
(bad)
jne
je
cmps
push
neg
bnd
push
in
leave
mov
mov
fist
xchg
lahf
arpl
stos
sbb
psubw
lods
pushf
cmp
xchg
imul
or
mov
dec
xor
ret
outs
in
stos
mov
xor
ins
add
lods
push
adc
sub
mov
inc
jle
clc
imul
sar
push
sub
and
lods
stos
fs
idiv
and
push
jmp
or
(bad)
inc
cdq
pop
push
fwait
aas
inc
je
xor
xchg
in
push
aas
xlat
(bad)
ror
push
and
cmp
in
sub
or
imul
(bad)
mov
mov
push
cmps
jmp
pop
call
ret
iret
inc
sahf
movs
mov
mov
mov
mov
push
mov
movs
sub
mov
jmp
add
pusha
jbe
mov
cmp
push
inc
mov
dec
mov
imul
xchg
sahf
mov
sbb
call
gs
push
imul
pop
inc
xlat
fwait
sbb
test
dec
fstp
ret
push
mov
icebp
push
pop
pop
xchg
cmp
mov
push
and
jp
push
push
mov
cs
or
jnp
daa
(bad)
jnp
jbe
xchg
xchg
das
repz
ret
aaa
jo
rol
push
dec
push
fnstsw
and
iret
sub
mov
outs
(bad)
por
mov
adc
add
cmovns
adc
jecxz
xchg
clc
pop
jecxz
ffree
xor
push
test
push
inc
test
adc
adc
ror
sub
jg
mov
cmp
cwde
and
jns
fld
add
pop
sti
fidivr
clc
fdivr
pop
lahf
out
push
xchg
fiadd
stos
fwait
xlat
ins
pushf
inc
sub
or
push
inc
jne
cmc
jno
sub
jb
sahf
movs
out
xor
jp
adc
gs
call
adc
int
std
cs
arpl
popa
add
or
out
sub
stos
xchg
fsubr
les
js
mov
mov
mov
iret
sbb
add
and
lods
lahf
jae
jns
and
addr16
ror
cmp
xchg
push
cmp
ret
xor
arpl
cmp
xlat
xchg
iret
sahf
out
add
inc
cs
mov
jecxz
jne
dec
out
jg
pop
aad
mov
push
js
jbe
cmp
test
pushf
jmp
push
repz
iret
into
cmps
and
jne
pusha
addr16
jae
cmps
retf
rol
jb
pop
sbb
sbb
retf
or
les
ror
repnz
fcmovb
movs
adc
mov
push
(bad)
movs
shr
cmp
iret
je
xor
add
sbb
repnz
fdiv
fsub
dec
jb
loopne
fdiv
stos
inc
sbb
adc
or
iret
lock
jmp
cmp
sahf
inc
xor
dec
movs
loope
out
mov
or
sub
jecxz
(bad)
and
sub
xlat
sub
mov
sar
cmp
das
std
fidivr
inc
cmps
fcmovnbe
mov
push
mov
loop
add
adc
xchg
mov
call
cs
xchg
push
mov
push
stc
jns
inc
pop
in
mov
jge
lea
sub
les
or
fnstenv
nop
adc
push
and
jno
push
push
scas
pushf
outs
mov
popf
mov
or
push
aam
data16
out
je
cmp
push
mov
xchg
test
mov
js
sahf
(bad)
mov
les
cwde
pmaddwd
xor
xor
dec
std
push
pop
or
mov
leave
scas
pusha
pop
jnp
jno
arpl
jg
(bad)
fld
fnstsw
pop
(bad)
rol
push
mov
jbe
inc
sbb
pop
cdq
iret
scas
test
mov
mov
cdq
std
sbb
sbb
mov
aaa
mov
sub
or
scas
lods
pop
test
dec
into
mov
dec
aad
in
pop
and
in
outs
mov
inc
xchg
repnz
push
aam
cmps
jecxz
cmp
pop
inc
shr
in
push
stc
in
hlt
xchg
movs
jnp
cmp
adc
je
lock
dec
mov
popf
stos
lea
fist
mov
cmp
push
in
or
dec
jbe
(bad)
sub
popf
pop
inc
mov
test
push
fistp
mov
jle
or
xor
in
ja
ret
loope
jno
cmp
add
repz
js
xor
dec
hlt
out
adc
adc
arpl
outs
sbb
aad
repz
mov
inc
nop
or
fs
dec
test
fldcw
sbb
rcr
xor
cmps
push
cmp
xchg
push
ss
pop
lods
sbb
(bad)
mov
mov
int3
packssdw
adc
jl
sbb
js
mov
enter
jnp
inc
retf
movs
sbb
ja
shl
inc
adc
cmp
fidiv
js
mov
hlt
add
and
mov
(bad)
mov
cmp
rol
lahf
ror
aad
pushf
push
jecxz
addr16
sbb
(bad)
es
jl
mov
ins
add
ret
imul
jg
fs
fistp
xor
scas
add
dec
push
inc
inc
enter
jl
push
adc
inc
xlat
sub
xchg
fcomip
xchg
gs
push
(bad)
(bad)
stos
pop
je
sub
adc
xlat
pop
ins
inc
and
xchg
and
inc
push
xchg
sub
mov
push
ss
dec
jo
add
in
pop
into
in
popf
mov
fild
push
xchg
data16
imul
rcr
xchg
inc
xchg
and
xchg
pop
push
fdivr
in
loope
outs
int
dec
sbb
dec
mov
mov
and
jp
mov
sub
jb
xor
cmps
fcomp
jae
scas
push
and
jns
push
movs
bound
pusha
jp
test
test
or
fs
mov
pop
std
xchg
ret
(bad)
mov
push
lahf
mov
std
sbb
cmp
cmp
in
mov
xchg
xor
(bad)
shr
mov
outs
icebp
mov
lods
movs
mov
pusha
std
dec
and
loopne
push
pop
cwde
push
int3
stos
sahf
jns
and
dec
jle
dec
or
adc
mov
out
ror
cmp
aas
inc
cmp
js
inc
sbb
outs
or
push
lods
mov
cld
retf
clc
bound
(bad)
xor
cmp
popa
mov
ss
mov
lea
movs
iret
adc
scas
push
pusha
retf
mov
add
cmp
pop
pop
sar
mov
fs
mov
xchg
or
xlat
adc
cdq
or
xchg
jnp
add
shl
xchg
xchg
fdivr
int
xor
fimul
add
mov
es
inc
jo
enter
pop
(bad)
jmp
je
cmp
int3
push
clc
xor
add
sub
jo
mov
sbb
pop
add
jae
inc
jg
jmp
ret
inc
in
adc
in
mov
(bad)
pop
gs
sbb
rcr
mov
or
add
rol
js
fmul
aaa
test
sbb
inc
ds
enter
jb
out
mov
daa
push
movs
retf
mov
jns
and
in
and
dec
mov
adc
das
xorps
and
mov
(bad)
dec
cs
sbb
or
ret
fwait
and
push
or
rol
cmp
enter
fsub
ficomp
xor
push
arpl
mov
out
aas
mov
fistp
(bad)
out
retf
call
pop
adc
inc
mov
ror
inc
or
sti
pushf
(bad)
mov
cmps
sub
or
mov
fld
frstor
cmps
jae
clc
ss
lds
dec
pop
push
and
iret
sbb
and
lahf
xchg
xchg
jne
ins
enter
add
push
(bad)
inc
loope
xor
jg
std
sub
xor
outs
in
add
xchg
dec
nop
imul
jl
cli
sahf
mov
(bad)
cmps
dec
ret
lods
es
or
inc
push
push
add
push
dec
(bad)
repnz
stos
xchg
and
mov
inc
mov
add
mov
or
cmp
mov
or
or
aaa
jnp
jmp
test
xchg
and
hlt
jecxz
xor
push
mov
repnz
jg
outs
push
xlat
das
jo
sub
xor
into
xchg
pop
cmp
cmp
ret
mov
push
cld
je
push
xchg
jecxz
loop
ja
sbb
out
push
jle
outs
sub
xor
clc
mov
add
inc
pop
mov
mov
data16
leave
ficomp
cwde
idiv
or
fidiv
mov
(bad)
xor
addr16
shl
cld
cmp
cmp
xlat
inc
and
shr
or
mov
les
js
pop
jnp
inc
imul
jae
stos
mov
cmc
sub
ss
call
add
lock
adc
lahf
xchg
sti
sub
fmulp
ins
mov
inc
xchg
push
loop
(bad)
sub
jp
sub
int
test
aaa
dec
not
mov
imul
pushf
jb
xor
mov
mov
sbb
rcr
leave
rcl
(bad)
loope
ja
imul
je
and
pop
jl
pop
sahf
mov
(bad)
dec
test
outs
dec
mov
lea
jno
mov
mov
mov
test
inc
jmp
out
add
mov
iret
push
loopne
dec
add
sbb
and
xchg
pslld
and
push
xchg
adc
adc
test
inc
movs
mov
in
jmp
retf
sbb
mov
rcr
dec
ins
mov
out
es
rcr
dec
and
in
retf
or
dec
lahf
(bad)
shr
mov
mov
jl
cmp
xchg
imul
cs
or
sub
pop
mov
into
ins
ret
sbb
add
xor
(bad)
retf
mov
pop
(bad)
dec
mov
mov
dec
jmp
lahf
or
adc
jnp
lds
and
or
movs
pop
lock
xor
fidiv
fmulp
sub
das
push
repnz
mov
jl
stc
sub
leave
popa
mov
hlt
fild
outs
ja
mov
adc
arpl
fist
pop
xor
push
dec
js
stc
pop
rol
sahf
or
js
xor
mov
jb
imul
ret
add
cmp
mov
sbb
mov
xchg
dec
ret
(bad)
add
add
lods
dec
sub
pop
sub
ss
mov
mov
mov
and
dec
jmp
jno
jne
dec
sub
push
in
data16
ds
dec
sti
mov
xchg
pushf
cdq
adc
repnz
aam
and
mov
add
xor
jmp
sbb
push
rol
adc
cmp
sti
pop
pusha
daa
imul
fist
jmp
pop
call
add
dec
iretw
dec
lock
xor
shl
mov
cmps
xchg
rcl
leave
or
mov
dec
test
mov
jmp
push
(bad)
imul
add
icebp
xor
mov
mov
call
mov
leave
fidiv
(bad)
jns
dec
call
mov
push
push
cmps
jmp
sub
dec
sbb
in
and
data16
dec
mov
and
test
dec
cmp
shl
and
adc
and
js
pop
mov
or
mov
stos
lds
cmp
or
daa
and
and
scas
or
lods
or
sbb
sbb
mov
add
inc
aas
test
xchg
sbb
clc
adc
pushf
sar
cmc
daa
in
pop
sbb
jns
dec
mov
xor
outs
aam
or
mul
gs
push
lods
push
push
add
cmp
and
in
and
jmp
or
fwait
push
fs
sar
and
and
pop
jne
movs
jns
mov
sub
in
add
jle
ja
(bad)
sar
sbb
retf
or
xchg
jle
pop
std
lods
xchg
push
mov
mov
retf
push
pop
xor
hlt
jmp
popf
(bad)
and
xchg
imul
adc
lahf
and
ins
mov
imul
push
out
dec
sub
iret
rcl
adc
js
inc
retf
xor
ret
aam
xor
gs
outs
inc
pushf
call
xacquire
jge
mov
icebp
pop
leave
inc
and
nop
inc
dec
outs
push
mov
push
push
in
inc
shr
push
mov
test
cmp
sar
or
adc
int3
sub
dec
xor
mov
out
mov
mov
aas
das
ins
(bad)
iret
lds
lahf
daa
xor
inc
push
sbb
mov
mov
inc
iret
ins
add
retf
xchg
cs
movs
jp
out
aas
dec
fcomp
and
ins
and
mov
mov
push
pcmpeqw
ret
addr16
(bad)
rol
xchg
rol
lods
in
rol
xchg
mov
ret
pop
int3
inc
int3
jne
std
or
loopne
fldcw
xchg
jae
loope
add
test
jmp
xchg
clc
fimul
and
nop
in
dec
dec
cmp
xchg
test
icebp
pop
pushf
jae
xor
push
jno
fisub
sub
pusha
push
retf
mov
or
push
cmp
iret
xor
ss
fucomp
add
pop
ret
pop
popf
mov
call
scas
adc
jmp
test
mov
sub
xchg
pop
and
and
lock
and
hlt
push
cld
adc
mov
add
mov
fld
sub
mov
xlat
sar
mov
jo
dec
push
sbb
inc
push
cld
lea
in
cli
fdivr
adc
and
jp
fcom
cmp
les
data16
repnz
stc
in
jbe
aaa
scas
cs
popa
fbld
stc
shl
or
inc
mov
dec
cmp
movs
sub
jmp
cmp
mov
dec
push
call
or
and
adc
stc
xchg
add
xlat
jns
push
cmps
pop
dec
outs
jns
cmp
into
mov
jmp
ja
test
jne
ins
imul
and
xor
xchg
movs
cmp
jne
data16
or
cli
cdq
sub
adc
js
scas
mov
fisttp
mov
in
mov
mov
sub
and
xor
ja
push
dec
retf
retf
push
ds
adc
ss
aas
xor
shl
xor
outs
(bad)
out
gs
jb
adc
push
xor
sub
bound
and
int3
sbb
enter
xlat
mov
sub
adc
mov
inc
dec
sahf
cmc
ins
mov
(bad)
std
cdq
retf
push
out
stos
jb
les
inc
and
push
add
xchg
addr16
xor
push
loope
in
sub
shl
test
mov
xchg
out
jle
(bad)
fst
jp
jnp
arpl
aaa
pop
mov
(bad)
aas
call
fucomi
pop
push
aaa
push
repz
cdq
imul
sbb
int
pop
sahf
push
push
psubusb
(bad)
int
loopne
mov
push
push
into
sub
sti
dec
hlt
mov
and
push
push
push
ret
stos
xor
push
call
fistp
add
cmps
xor
int
stc
sub
not
mov
mov
jmp
push
aad
mov
cli
adc
adc
xchg
add
sti
mov
outs
inc
inc
dec
sub
iret
leave
stc
xchg
fist
data16
or
or
pop
sub
inc
(bad)
mov
or
call
mov
adc
(bad)
xor
shr
ret
loopne
into
cmp
imul
arpl
push
cmc
jae
cmc
popw
sub
stos
test
es
movs
outs
mov
dec
cmc
or
int3
add
xchg
rol
fcomp
dec
inc
dec
lea
into
mov
(bad)
jp
aad
adc
add
inc
jp
adc
fwait
push
stos
cmc
cmp
pop
cmps
ret
rcr
int
push
cdq
mov
and
jl
aas
ja
les
pop
lds
data16
ss
xor
cmp
inc
mov
dec
fwait
cmp
push
sub
mov
push
call
mov
sbb
xor
loopne
(bad)
aas
adc
or
(bad)
ins
pop
hlt
xchg
mov
xor
mov
(bad)
jnp
fistp
sbb
inc
jmp
sub
div
movs
inc
scas
mov
pop
mov
aaa
or
mov
mov
leave
xchg
mov
cmp
xchg
std
test
jne
sbb
push
cmc
push
push
pop
and
aas
das
push
hlt
sbb
out
push
push
lea
mov
inc
sbb
pop
push
jo
mov
les
enter
sub
cs
test
call
loop
and
mov
add
mov
jmp
pop
aas
fwait
push
fstp
lahf
and
pushf
(bad)
stos
mov
sahf
mov
jae
and
xchg
xchg
jl
mov
dec
lahf
jnp
dec
xchg
or
into
mov
cmp
lahf
cmp
movs
retf
push
(bad)
mov
aad
addr16
retf
cmp
mov
mov
ja
cmp
jl
dec
sbb
jg
cld
pop
sub
std
push
xor
fisub
fistp
and
dec
xchg
(bad)
dec
sahf
les
xlat
pop
jne
in
daa
xor
pop
outs
mov
dec
adc
or
aas
jle
dec
xchg
or
sbb
inc
inc
ds
sbb
popf
or
lock
pop
mov
cmp
cwde
jl
adc
inc
ds
shl
icebp
out
push
sub
lock
jae
fldenv
aam
inc
push
fdivr
and
pusha
das
(bad)
inc
sub
or
jae
or
mov
test
mov
adc
cmp
push
pop
(bad)
pop
xor
mov
(bad)
mov
icebp
mov
outs
rol
adc
sbb
mov
xchg
cmp
jns
idiv
lods
(bad)
mov
cmp
dec
mov
sbb
retf
cli
push
jmp
dec
in
lods
fimul
push
popf
pop
fbstp
adc
or
add
into
jmp
push
sub
adc
push
or
cmp
sub
lock
aas
and
pop
mov
cli
aad
das
dec
add
mov
mov
xchg
das
xchg
scas
pop
mov
mul
lahf
or
cmp
push
add
inc
in
aaa
dec
out
leave
or
xchg
dec
xor
push
and
dec
out
fld
test
scas
jnp
push
xchg
and
out
mov
mov
pop
rol
fdivr
fwait
out
lods
mov
outs
sub
push
data16
es
sub
mov
jle
add
and
push
pop
jo
sub
mov
dec
sbb
xor
sub
scas
mov
in
mov
ins
mov
rcr
fst
inc
mov
push
out
loopne
ret
outs
bound
cli
out
cmp
dec
inc
push
hlt
sub
aas
jecxz
pushf
and
jo
sbb
sbb
inc
and
sti
jg
pop
sub
add
mov
shr
cmc
arpl
dec
in
test
or
dec
push
inc
sub
pop
(bad)
in
in
sub
or
icebp
imul
cmp
xchg
mov
mov
std
dec
dec
xor
inc
into
pop
out
ins
inc
sub
outs
jmp
stos
adc
mov
daa
(bad)
cli
dec
imul
leave
pop
sub
ins
sbb
rol
mov
rol
cmp
cs
cli
jg
jo
inc
xchg
inc
mov
jge
test
add
inc
xor
mov
shl
cmp
ins
add
das
fwait
scas
mov
fimul
adc
pop
sbb
sub
mov
sub
pop
dec
jmp
mov
popf
add
cmp
push
xchg
adc
xchg
push
jmp
(bad)
out
and
jecxz
adc
cmc
mov
add
sbb
adc
add
dec
mov
adc
popf
pushf
adc
push
cmp
out
xor
mov
jg
out
jmp
cmps
retf
mov
ds
jbe
hlt
mov
mov
add
pop
aaa
dec
and
fst
adc
mov
cmc
sub
fsub
clc
xchg
xchg
(bad)
sbb
xor
loope
in
shl
xchg
jno
sbb
fld
mov
or
cmps
ins
(bad)
sbb
cmp
(bad)
or
xchg
dec
add
mov
dec
xor
icebp
jg
mov
push
add
jle
shl
xchg
pusha
es
icebp
xchg
sub
movs
xchg
div
adc
or
sub
inc
(bad)
std
popf
repnz
mul
pop
into
hlt
or
jbe
lea
and
or
(bad)
ror
add
jmp
loopne
pop
jb
(bad)
fsub
jnp
test
inc
mov
jle
cmp
mov
lahf
xor
xor
mov
ins
xchg
call
inc
dec
int
jae
jp
aad
sub
cmp
inc
gs
vprotd
loopne
lahf
std
in
xchg
into
lds
icebp
retf
popf
mov
sub
loope
mov
add
mov
inc
shl
mov
retf
adc
mov
add
ins
movs
xabort
pop
popa
mov
cmp
retf
data16
scas
push
xchg
fnstcw
and
mov
mov
pop
pusha
add
fwait
in
popf
sub
fdiv
mov
arpl
sub
or
repnz
jmp
pop
mov
fild
retf
gs
ins
stos
out
mov
mov
aam
or
cli
in
add
or
dec
push
div
mov
popf
fcomp
add
data16
pop
(bad)
pop
rcl
push
add
stos
pop
xor
dec
cmp
mov
jno
popa
ret
outs
adc
sub
push
je
cmp
addr16
call
jns
fwait
call
lahf
cmp
cmp
je
popa
jg
pop
adc
jle
mov
cdq
sub
bsf
mov
popf
das
stos
imul
pop
push
fwait
pop
aam
pop
int3
fsubr
int
xchg
ret
xor
mulps
ror
sbb
mov
dec
test
or
retf
stc
cmp
and
add
mov
int
xchg
shr
cmp
push
stc
aas
aam
dec
cs
aaa
xchg
ins
dec
movs
imul
iret
into
inc
sub
in
xor
jb
pop
pop
push
add
gs
push
and
cmc
test
into
rcr
mov
les
enter
sub
pop
adc
sub
xor
push
(bad)
movs
(bad)
jg
mov
sub
mov
mov
xor
leave
popf
shl
dec
in
xor
mov
jmp
pop
not
or
add
jo
leave
loope
adc
jno
test
in
mov
repnz
dec
in
movs
ror
das
int3
test
mov
adc
dec
inc
sbb
jne
shl
lock
push
jge
add
daa
stos
cmp
inc
popf
leave
movs
inc
iret
adc
adc
jmp
pop
sahf
inc
jnp
int3
or
ss
xor
iret
aam
(bad)
mov
mov
pop
or
mov
popa
fidiv
dec
cmc
add
js
leave
test
cwde
into
sbb
lods
call
test
(bad)
int
or
or
cmc
arpl
nop
call
fist
sub
es
mov
mov
sub
mov
in
div
repz
xchg
push
(bad)
inc
jecxz
pop
pop
mov
lods
ret
cdq
adc
pop
pop
or
jbe
fsub
movs
or
sbb
shr
ds
pop
fnsave
shrd
ja
sbb
xor
les
or
pop
cmps
mov
cmps
xchg
sub
ins
not
dec
pop
mov
lahf
push
gs
and
xor
dec
rol
clc
cmc
mov
sbb
push
fs
fistp
js
mov
add
and
sub
pop
inc
ror
out
mov
in
sbb
aam
inc
mov
adc
cmovp
jae
push
shl
into
mov
push
aad
repnz
cmp
inc
fstp
inc
fcom
sahf
test
or
imul
xor
jp
loop
icebp
movs
sub
dec
mov
xchg
xchg
je
in
pop
fidivr
adc
ror
xor
jmp
mov
xchg
stos
sub
cld
clc
pop
pop
sbb
xchg
mov
ins
fld
cmps
inc
or
or
adc
mov
retf
outs
xor
xor
sbb
cmp
mov
std
stos
pop
mov
push
jo
add
push
xchg
xchg
imul
mul
and
repz
scas
sbb
fcom
(bad)
mov
fistp
push
cmp
dec
add
mov
and
cmp
mov
push
dec
sbb
sti
(bad)
pop
or
or
(bad)
dec
aas
mov
rcr
mov
iret
mul
jno
add
pop
lods
xchg
mov
arpl
dec
inc
lea
movs
cmp
jb
hlt
inc
(bad)
sub
inc
ret
stos
push
push
movs
pop
movs
cmp
mov
pusha
xchg
pop
sahf
retf
or
xchg
xchg
sbb
push
jnp
ror
adc
scas
dec
retf
or
iret
xchg
repz
call
pop
or
jne
(bad)
bound
add
repnz
add
pop
cwde
imul
fstp
and
inc
sub
mov
out
cmc
repnz
jge
jp
scas
adc
mov
(bad)
and
dec
mov
inc
iret
lods
repz
xlat
into
jmp
xchg
jbe
cmp
mov
sbb
jae
xchg
jo
mov
pop
mov
cmp
dec
jo
nop
lea
mov
data16
fwait
push
aas
nop
add
lds
inc
pop
shl
scas
je
inc
jbe
xchg
jp
sub
push
adc
adc
xor
push
rcr
lahf
and
enter
add
jecxz
and
pop
mov
rol
cmp
pop
stc
mov
cmps
push
pushf
mov
jle
jge
stos
and
sub
push
add
push
(bad)
out
rcr
xchg
mov
adc
mov
xchg
(bad)
and
mov
add
in
cmp
sar
pop
mov
sub
dec
mov
xor
scas
dec
mov
pop
sbb
shl
jle
pusha
and
adc
bound
in
push
or
xor
xchg
dec
pop
mov
stos
dec
daa
jmp
(bad)
push
mov
xor
(bad)
popa
stos
hlt
and
(bad)
sti
enter
jne
addr16
adc
fidiv
call
iret
pop
dec
popf
movs
cdq
pop
or
mov
addr16
ja
xchg
inc
pusha
dec
(bad)
pusha
(bad)
add
stc
sar
test
ror
add
imul
mov
cmovae
call
in
out
mov
add
xchg
out
sar
out
pop
mov
enter
pop
jbe
mov
js
push
ins
(bad)
movs
xor
inc
mov
sar
mov
repz
add
mov
xor
das
xchg
xchg
add
xchg
and
rcr
pop
cmp
sti
sbb
pop
imul
mov
adc
xchg
daa
es
popa
xchg
neg
and
jmp
fild
cmp
jecxz
cld
mov
(bad)
(bad)
push
test
or
pushf
cdq
or
sub
xor
hlt
ins
pushf
adc
(bad)
jb
cmc
dec
pusha
sahf
pop
nop
cmp
imul
aas
and
ret
xchg
aas
inc
or
test
mov
out
jbe
ins
out
fild
stos
(bad)
std
call
xor
test
out
mov
pop
pop
cmps
nop
loopne
xchg
mov
xor
xchg
push
cmp
retf
sti
mov
xchg
sub
imul
fdiv
pop
rcr
out
dec
mov
jecxz
and
fidiv
adc
jnp
add
ins
sbb
in
sbb
jb
pop
int3
call
clc
jo
inc
ds
and
dec
dec
hlt
ds
push
jne
(bad)
jmp
cmp
adc
dec
adc
fcom
addr16
hlt
xchg
std
ds
cli
popf
push
fistp
in
pop
jge
mov
mov
adc
retf
call
cmp
js
mov
js
movs
mov
cmps
mov
adc
lahf
pop
dec
jnp
xor
sti
push
inc
adc
jbe
mov
or
aad
xchg
mov
fldln2
outs
mov
imul
movs
dec
pop
xchg
mov
mov
push
mov
mov
imul
fnstcw
shl
stc
int
out
or
add
sub
or
cdq
jp
int
(bad)
out
and
sbb
outs
hlt
pop
sub
xlat
in
xor
add
sbb
cmp
scas
js
push
or
and
int3
lods
pusha
push
daa
adc
dec
adc
or
and
xchg
xor
mov
jno
sbb
outs
mul
xchg
ja
and
imul
vucomisd
sub
(bad)
in
test
fist
and
lds
fs
adc
retf
iret
add
add
ins
xor
into
mov
cdq
xchg
mov
mov
mov
fisttp
imul
sub
dec
loop
xchg
std
(bad)
jg
cmp
pop
aam
test
xchg
out
lods
fwait
in
(bad)
shr
mov
jnp
call
push
enter
cmp
mov
adc
pop
mov
add
mov
bound
icebp
pop
jo
int3
or
push
sbb
or
out
addr16
sbb
fst
push
add
fcmovb
pusha
in
mov
push
(bad)
push
addr16
aam
jo
mov
sbb
mov
or
sar
sahf
cmp
cs
jge
xchg
jl
xor
in
nop
cmps
jae
(bad)
xor
scas
scas
push
idiv
inc
ins
(bad)
or
xlat
inc
sar
and
sub
and
mov
outs
outs
in
imul
mov
and
cli
pop
cmp
pop
lock
jae
test
xor
rcl
(bad)
rcl
pusha
outs
or
(bad)
xor
inc
push
jle
int
xchg
(bad)
push
fxam
cmp
test
mov
loope
test
(bad)
out
add
outs
sub
mov
sbb
or
push
adc
outs
xor
mov
arpl
mov
cmc
mov
into
iret
loopne
arpl
and
and
cmps
stc
jl
jo
nop
ins
loopne
cmc
dec
test
cmp
inc
loop
sar
fadd
sub
aad
test
jb
popa
jg
sub
(bad)
sub
js
scas
mov
inc
mov
mov
mov
int3
mov
jmp
daa
jmp
mov
xchg
ins
push
dec
xchg
imul
sbb
mov
mov
mov
scas
cmp
je
xor
dec
add
shr
dec
xchg
adc
imul
push
xor
aas
mov
fild
mov
(bad)
in
or
lahf
loope
scas
test
ss
stos
test
mov
cmp
ror
scas
dec
jmp
daa
in
push
(bad)
call
adc
jno
push
and
adc
mov
mov
lods
mov
test
in
stos
in
add
sahf
out
xor
ss
push
ror
stos
retf
cmp
cwde
cdq
xor
sub
sbb
aas
inc
push
ds
ja
or
ds
pop
js
rcr
dec
push
inc
cs
lea
stos
js
jo
jns
pop
mov
cmp
je
push
jg
xchg
std
pusha
fst
mov
aad
sub
cli
and
or
and
mov
scas
mov
in
retf
sti
nop
fstp
fwait
sbb
in
and
mov
push
popa
inc
movs
mov
mov
sti
hlt
jb
mov
add
mov
lods
in
loope
dec
leave
loope
hlt
fwait
rcl
out
cli
mov
mov
and
mov
mov
jno
cmc
jmp
push
add
push
enter
sbb
xchg
xor
adc
cmp
xor
(bad)
xor
sbb
jns
mov
(bad)
(bad)
mov
mov
or
adc
pop
xor
or
lods
and
adc
popf
ret
mul
ins
iret
(bad)
rcl
add
(bad)
jo
xchg
push
sbb
jnp
sbb
dec
xor
jecxz
into
(bad)
(bad)
dec
ror
dec
xor
ret
lea
nop
jnp
push
pusha
cmp
fucomip
not
sub
ret
test
test
sbb
ror
lahf
jl
push
and
push
daa
push
je
adc
js
out
push
cmp
jecxz
xor
or
repz
jne
out
fwait
ja
cmc
fdivr
adc
adc
xor
xor
cmp
std
test
adc
outs
push
pushf
arpl
xchg
pop
ins
ins
retf
retf
dec
pop
jl
and
jle
cdq
rol
push
les
or
cmp
call
aad
or
addr16
mov
cmp
retf
xor
cli
push
ror
stc
push
and
and
jmp
xor
outs
mov
add
pop
cli
outs
inc
clc
loop
movs
adc
inc
repnz
mov
and
repz
mov
mov
leave
popf
or
outs
daa
call
mov
pop
int
sahf
pop
sbb
inc
(bad)
jecxz
inc
pushf
xchg
stos
pop
xlat
jns
pop
mov
(bad)
push
push
and
adc
xchg
pop
out
lds
mov
jo
push
aaa
pop
adc
pushf
arpl
sub
add
shl
fnstcw
in
mov
mov
xor
std
std
loop
and
(bad)
repnz
shr
aad
cmp
ss
xchg
xor
lds
pusha
inc
jbe
int
mov
(bad)
dec
and
stos
out
adc
jnp
pop
and
ja
jge
cli
sub
pop
(bad)
aam
(bad)
imul
pop
xchg
dec
out
or
push
mov
xchg
dec
ret
(bad)
in
lea
retf
aam
xchg
or
dec
pop
std
mov
mov
jge
jg
sub
stos
and
and
cmp
adc
cmps
ss
jns
mov
test
fisubr
xor
or
push
dec
pop
jl
ins
lahf
sub
dec
iret
or
push
(bad)
xor
sub
or
inc
jns
(bad)
push
xchg
sahf
xor
and
inc
xchg
(bad)
test
scas
inc
and
ins
xchg
dec
stos
fadd
repnz
xor
xchg
push
retf
ja
mov
and
hlt
sbb
xor
out
jmp
xchg
jmp
in
sahf
imul
fwait
aas
jp
gs
sub
push
mov
les
outs
fcom
repz
mov
cdq
out
cld
lods
ins
jp
pop
xchg
out
push
loopne
jno
mov
loop
jle
jp
clc
sti
or
xchg
lds
jnp
dec
std
xchg
pop
rcl
outs
inc
repz
nop
out
mov
cmc
imul
or
fs
mov
pop
jmp
xchg
pop
shr
cmp
bound
cmp
push
clc
outs
pop
ds
pushf
js
adc
dec
lods
pop
pop
cwde
call
ins
fistp
(bad)
in
add
daa
sbb
add
shl
adc
adc
stos
xchg
adc
test
fwait
hlt
cmps
cmp
daa
push
add
push
gs
pop
xor
dec
jne
cwde
repnz
mov
lds
aas
inc
jl
mov
test
data16
icebp
(bad)
mov
lods
not
jmp
adc
fs
test
mov
mov
test
rcl
shr
call
ss
xlat
xor
sub
and
loopne
jo
rcr
push
add
push
in
arpl
cmp
push
pop
test
div
loopne
in
add
adc
out
cwde
aas
stc
mov
cmps
je
ins
cmps
xor
push
jmp
add
xor
imul
jmp
jnp
xchg
cmps
loopne
push
inc
fdivr
shl
mov
xchg
ret
pop
jecxz
repnz
(bad)
scas
pop
jb
mov
loope
and
add
cmp
mov
adc
cmp
jo
cwde
add
addr16
mov
aam
loope
cmp
adc
sub
inc
gs
jb
arpl
aas
or
shr
mov
pop
jl
out
sub
adc
jo
mov
push
dec
jo
mov
and
dec
test
nop
fadd
sub
into
pop
adc
mov
arpl
lock
arpl
jo
add
mov
pusha
lods
daa
jbe
xchg
(bad)
aas
or
in
test
xor
in
pusha
test
mov
jcxz
jne
add
es
dec
int
jmp
add
(bad)
popf
call
dec
pop
shl
js
retw
mov
jp
das
int3
aas
push
call
les
fs
pop
push
jecxz
lds
mov
and
cdq
xchg
push
movs
mov
(bad)
sub
pop
inc
and
aad
and
push
lods
test
cld
dec
jb
aad
mov
dec
sti
cmp
aas
mov
mov
dec
mov
ins
sahf
pusha
mov
add
mov
pop
inc
xor
repnz
adc
push
dec
jmp
cmp
xchg
es
lock
dec
jge
outs
pop
or
loope
cmc
fwait
xchg
xchg
das
loop
and
dec
mov
nop
dec
xchg
push
lea
adc
xchg
lahf
xchg
ja
in
in
pop
mov
loope
sub
stos
pop
out
push
fistp
and
inc
pop
loope
pusha
jp
(bad)
cmp
xchg
(bad)
sub
jmp
jns
call
mov
test
push
ret
add
adc
lahf
pop
loop
xor
or
retf
add
add
retf
test
fbstp
mov
sqrtps
jmp
pop
outs
es
add
test
(bad)
fmul
xor
push
mov
mov
xor
sbb
mov
push
push
jmp
cmps
fdivrp
xor
lea
xchg
add
push
mov
daa
add
push
sbb
nop
ja
pop
retf
aam
jb
das
shr
sti
or
mov
xchg
fnstcw
or
push
adc
pop
outs
mov
clc
cmp
push
adc
(bad)
pop
xchg
nop
lods
xor
out
fwait
shl
jmp
cmp
dec
xor
sbb
pop
mov
cs
mov
cwde
xor
fnstcw
mov
ror
ss
adc
icebp
inc
in
inc
scas
pop
pop
das
mov
jle
and
fs
mov
mov
bound
or
scas
stos
and
adc
ret
mov
fisttp
mov
push
sub
sahf
jne
jns
jns
imul
loopne
mov
(bad)
xor
adc
fcompp
sbb
enter
imul
bound
aaa
cli
cmp
push
pop
or
fild
fistp
sub
dec
sbb
pop
popa
mov
cld
xchg
shl
call
out
mov
shl
or
fldenv
inc
mov
xchg
and
scas
inc
pop
add
and
call
icebp
sub
mov
or
repz
stc
es
nop
cmp
inc
(bad)
pop
inc
inc
aas
stos
test
fsub
or
pop
ja
mov
es
scas
sbb
out
add
push
ror
leave
push
popa
jmp
add
or
or
imul
leave
das
mov
dec
lods
push
mov
dec
repnz
pusha
stos
push
push
mov
sar
mov
sbb
sbb
adc
fisubr
mov
into
mov
out
sub
in
ror
xchg
dec
adc
shr
aaa
hlt
adc
push
xchg
iret
cwde
test
and
mov
lock
out
scas
js
imul
add
pop
ficomp
test
ror
rcr
out
test
fldcw
mov
add
dec
in
mov
cwde
jmp
xchg
mov
(bad)
xor
jmp
shl
pusha
xor
(bad)
stc
pop
dec
cmps
inc
(bad)
xchg
out
xchg
mov
in
adc
ret
mov
and
bnd
mov
add
jp
ins
scas
xchg
adc
jmp
js
aad
inc
add
adc
lds
dec
dec
out
push
imul
pushf
xchg
xchg
dec
xor
xchg
jmp
mov
movs
iret
inc
pop
lods
inc
div
adc
or
sub
in
jb
push
push
enter
dec
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
js
mov
lds
mov
cmp
and
test
jl
mov
popf
mov
push
jp
shl
jge
call
push
cmp
js
jl
xchg
push
repnz
sbb
push
inc
mov
pop
and
cmp
lods
fisttp
shl
jmp
sar
dec
mov
jae
xchg
or
retf
sti
shr
xor
stc
rcr
aad
outs
dec
repnz
sub
iret
test
dec
jno
cmp
mov
cmp
movd
sbb
cmp
lea
mov
xor
gs
pmaxub
sbb
push
loop
pop
addr16
and
ins
push
jnp
pop
out
cli
and
jno
push
leave
imul
jl
dec
push
xor
shl
mov
mov
sahf
ins
aam
out
pop
sbb
xor
xchg
fwait
stos
pushf
sti
or
test
inc
mov
or
cmp
call
lea
jmp
mov
fbstp
mov
inc
push
sub
mov
pop
mov
adc
lock
jb
and
call
cmp
fisttp
scas
adc
pop
jge
jne
repnz
pop
cmp
loop
jp
adc
mov
arpl
sub
sub
out
sub
lods
aaa
sub
daa
imul
imul
xchg
(bad)
xlat
jmp
jmp
jp
jnp
sbb
scas
enter
jnp
test
test
xor
movs
xor
or
in
and
push
das
or
je
mov
mov
jmp
(bad)
jmp
std
and
sub
cmp
sahf
add
int3
jg
xor
push
mov
ret
iret
hlt
out
test
and
mov
pop
push
ins
xchg
pop
loopne
iret
pop
cmp
test
daa
mov
jge
js
adc
xchg
ds
jmp
mov
outs
push
sub
cli
jnp
std
cwd
or
sbb
sbb
icebp
call
push
inc
xchg
push
cmp
das
mov
jo
and
icebp
cmp
out
pop
cmp
outs
mov
sub
dec
jb
(bad)
outs
gs
in
and
adc
sbb
stos
stc
ret
iret
or
shr
add
out
sub
and
fidivr
xchg
mov
inc
popa
cmc
in
popf
shr
sahf
adc
dec
add
adc
xchg
xor
sub
cmp
gs
cmp
nop
arpl
xchg
xchg
mov
outs
mov
pop
push
nop
mov
jo
dec
sub
pop
je
cmc
xor
addr16
cwde
lea
mov
sbb
cmp
pop
pop
adc
scas
dec
popa
push
int3
xor
cmp
js
(bad)
cmp
xor
push
fnstsw
daa
xchg
or
xor
mov
mov
jecxz
or
jp
mov
and
inc
push
pop
push
xor
dec
sbb
mov
test
neg
(bad)
cld
js
mov
or
xchg
lds
js
adc
push
cmp
xchg
inc
cmc
mov
(bad)
push
cld
push
cmp
out
cmc
cmp
pop
or
jne
adc
dec
inc
outs
or
je
push
sub
sub
cmc
js
int3
pop
enter
add
pop
gs
mov
pusha
jmp
or
scas
xchg
gs
and
cdq
and
jmp
push
out
hlt
mov
clc
fmul
mov
daa
mov
imul
mov
dec
jbe
or
push
outs
dec
add
jecxz
add
js
mov
retf
inc
es
adc
mov
dec
gs
cmp
mov
call
xchg
(bad)
js
inc
hlt
push
cmp
cs
loope
movs
push
jno
int
cdq
out
ror
fcom
add
mov
fimul
sar
movs
and
dec
mov
mov
loopne
test
dec
shl
adc
pop
jae
mov
movs
jmp
inc
push
icebp
aam
and
push
rol
cmp
fwait
pop
stos
adc
test
mov
pop
sahf
imul
push
push
adc
adc
xor
shl
and
sbb
push
scas
ins
mov
dec
inc
push
push
mov
shl
pop
adc
and
stos
push
in
cmp
aas
idiv
sub
stc
add
inc
jge
(bad)
repz
push
int
and
int
cmps
jbe
pop
cmp
aaa
dec
or
xchg
sbb
inc
dec
mov
ds
cmc
dec
pop
lods
or
in
jmp
ins
hlt
mov
add
mov
adc
ja
imul
cs
add
dec
pop
fld
push
and
push
add
dec
cmp
push
inc
fmul
xchg
jae
arpl
cmp
mov
jmp
sti
lods
(bad)
iret
cmp
xor
jmp
cmps
push
mov
fimul
push
jmp
scas
mov
xchg
push
mov
inc
mov
div
shl
mov
mov
loopne
in
cmp
repz
jne
out
mov
movs
mov
add
aad
xchg
hlt
xor
es
push
add
dec
fucomi
dec
cwde
jl
sub
jno
and
inc
pusha
pop
(bad)
push
fisub
clc
mov
daa
fcomp
cli
loopne
cmp
jno
(bad)
mov
in
sbb
das
inc
xor
push
add
mov
dec
sub
fmul
dec
in
mul
push
in
les
ret
pop
sbb
sub
fisubr
cdq
xor
and
xchg
and
push
js
mov
mov
mov
pop
xor
fadd
xchg
inc
mov
push
xlat
mov
ja
mov
fnstsw
dec
mov
cmp
repz
cld
sbb
ins
jb
lock
data16
mov
sbb
out
pop
leave
jo
retf
aam
rol
inc
push
push
mov
cmps
adc
adc
aaa
sbb
icebp
pop
jnp
in
mov
mov
data16
add
mov
nop
xor
icebp
jl
xchg
test
bound
retf
sub
add
push
pop
jae
xchg
or
inc
popf
dec
pop
xchg
mov
mov
cmp
push
lods
inc
jo
sti
xchg
stc
mov
imul
jmp
adc
enter
inc
test
aaa
sub
call
cmc
repnz
in
aas
dec
pop
rcl
out
outs
scas
push
xchg
jnp
cli
xchg
jb
clc
dec
push
imul
add
sbb
pop
test
aam
inc
lods
fsubr
push
cmc
in
retf
sti
xor
stc
mov
mov
dec
fwait
retf
loopne
jp
cmp
out
jne
test
in
sbb
pop
ret
out
cs
pop
fisubr
jbe
leave
inc
xor
movs
cmp
jbe
mov
aam
loope
xchg
lea
cmp
call
cmps
sbb
push
pop
inc
test
adc
pop
xor
inc
pop
xchg
push
pop
sbb
sar
scas
ret
push
in
hlt
mov
add
mov
sub
or
xlat
in
loope
pop
inc
dec
ins
addr16
out
enter
or
lock
xorps
add
push
pop
pop
and
sbb
std
lea
dec
sbb
shl
nop
sbb
lock
sti
push
and
loopne
push
add
xchg
inc
xchg
pop
dec
push
ret
rcr
pop
sub
movhlps
add
mov
xchg
jnp
dec
lock
scas
dec
loopne
enter
jp
call
inc
in
sub
aad
ret
scas
mov
cmp
sbb
xchg
pusha
cmp
test
ret
dec
add
xor
pop
jbe
imul
pop
adc
pop
jecxz
sar
imul
stc
xchg
div
push
mov
xchg
push
inc
mov
lds
je
mov
ins
push
clc
mov
or
(bad)
mov
ss
xchg
push
shl
es
and
loop
pop
in
(bad)
mov
icebp
pop
and
sahf
call
fidiv
jmp
adc
xchg
mov
xchg
mov
adc
loope
mov
inc
inc
push
add
mov
pusha
pop
push
inc
stc
jns
mov
sub
cdq
ins
daa
fist
sbb
cld
mov
sar
mov
sub
inc
mov
loopne
imul
popf
addr16
sub
mov
jp
mov
in
iret
jge
pop
rol
mov
std
add
(bad)
fs
outs
inc
int
fild
in
out
push
in
dec
inc
ss
pop
inc
in
cwde
mov
lods
cmps
out
push
sbb
(bad)
mov
xor
aad
push
pop
sub
mov
ror
inc
and
ficomp
js
fwait
cmp
fdivr
sbb
shl
sahf
shl
push
adc
mov
jl
mov
pop
mov
xchg
cld
jge
bnd
pop
xchg
stos
ret
inc
xlat
(bad)
mov
add
cmp
pop
sub
mov
xlat
xor
mov
mov
and
mov
jg
pop
adc
call
rcr
aaa
outs
gs
lea
mov
sub
cmc
mov
lahf
sub
(bad)
loopne
mov
mov
xchg
fs
in
inc
test
mov
imul
or
dec
cmp
ret
pop
pop
jns
pop
adc
clc
addr16
or
mov
fs
mov
ss
push
cmp
lds
xor
lock
pop
rcr
outs
jmp
retf
push
jmp
psadbw
in
cmp
ret
cld
mov
lea
lods
xchg
fwait
or
jne
dec
popa
and
sbb
scas
daa
pop
push
in
(bad)
fdiv
xor
jb
pop
jge
out
popf
dec
sub
sahf
dec
neg
mov
in
outs
(bad)
dec
jmp
nop
or
rcl
lea
sub
ds
cmp
in
inc
mov
popf
mov
rcl
mov
pop
cwde
shr
(bad)
ficomp
call
loopne
cmp
xchg
rcl
mov
xor
inc
cmp
mov
mov
in
xchg
movs
inc
cli
pop
sub
fmul
hlt
add
std
dec
in
pop
fisttp
push
stc
xor
scas
fwait
or
outs
cwde
adc
xor
imul
loopne
and
xor
leave
cmps
adc
add
xchg
ret
or
fs
cs
dec
outs
mov
jne
sub
jb
add
push
mov
addr16
xchg
mov
push
bound
or
xor
mov
lock
jbe
cmps
test
and
aaa
mov
inc
clc
clc
adc
sub
je
xchg
and
push
lods
dec
pop
inc
int
adc
clc
inc
hlt
cld
test
jg
adc
js
movs
push
sbb
sub
fiadd
es
add
adc
adc
pop
sub
ja
int3
xchg
push
cli
sbb
repnz
push
dec
cmp
jp
mov
xchg
xor
dec
inc
sub
inc
adc
xor
xchg
ficomp
adc
or
mov
out
sub
mov
lahf
jns
cmp
(bad)
and
inc
les
rcl
add
cmps
xchg
js
nop
out
sbb
jbe
ja
and
int
push
or
mov
mov
and
pop
sub
lds
scas
jno
aam
sub
mul
xor
data16
je
aaa
test
dec
adc
stos
dec
daa
adc
jecxz
push
inc
sub
(bad)
or
and
scas
call
or
fidivr
cld
push
leave
adc
aaa
ja
xchg
test
mov
inc
push
or
call
std
sbb
fist
ret
cmp
(bad)
nop
xchg
add
je
and
mov
(bad)
sub
dec
mov
in
push
mov
dec
pop
adc
add
inc
mov
jl
and
jnp
and
call
and
arpl
mov
aas
inc
or
adc
retf
arpl
mov
cmp
imul
daa
pushf
cmps
push
pusha
scas
or
(bad)
mov
or
and
push
jns
(bad)
adc
xchg
push
add
fs
jae
cli
xor
aad
loope
cmp
ins
aas
push
cmp
pop
movs
mov
ins
fcmovbe
lods
sub
fsubr
sbb
(bad)
retf
int3
aas
jge
or
mov
or
push
xchg
mov
dec
cld
and
je
enter
or
pop
sub
loop
dec
xchg
push
fldenv
mov
inc
ins
or
or
jp
mov
(bad)
dec
xor
dec
ss
jmp
sub
xor
inc
jnp
jle
sub
movs
lock
jne
ss
scas
mov
stos
mov
jp
xchg
fucomip
dec
cmp
pushf
out
mov
jns
into
iret
mov
jg
ret
aam
pop
lods
pop
adc
push
dec
cmps
lock
jbe
fucomip
or
pop
mov
push
pop
xchg
mov
inc
jno
nop
cmp
outs
dec
rcl
repnz
test
dec
adc
dec
sbb
inc
test
mov
lods
jb
test
fstp
sub
pusha
into
cmp
cmps
cld
and
fcmovbe
add
push
and
pop
sbb
and
or
repz
pop
mov
jecxz
fimul
pop
test
cdq
mov
ins
in
inc
jns
or
in
push
scas
dec
(bad)
fwait
cwde
ret
pop
add
sbb
jle
pop
mov
retf
dec
and
pop
dec
loop
and
jecxz
mov
jnp
push
jmp
jnp
addr16
jb
push
mov
jnp
fcomp
xchg
inc
mov
push
mov
add
ss
jnp
idiv
jmp
(bad)
aas
push
outs
cld
icebp
out
aaa
add
lea
push
jne
inc
pop
jl
jo
jbe
pop
adc
adc
mov
or
mov
adc
inc
adc
sub
or
daa
jne
lds
rcr
and
es
lock
aas
aam
mov
hlt
mov
adc
dec
in
ins
xor
mov
shl
aas
adc
mov
fild
xor
xchg
fprem
imul
sub
and
mov
hlt
cmp
jg
mov
in
cwde
mov
jl
pop
mov
aas
sub
xchg
push
aad
and
xor
or
call
jmp
dec
dec
int3
loope
dec
jbe
sub
add
and
jo
data16
les
loop
mov
call
cmp
fsubrp
sbb
addr16
add
cmp
test
adc
inc
outs
inc
mov
lahf
dec
dec
pop
(bad)
daa
jmp
dec
es
dec
add
sahf
mov
lahf
jbe
push
in
xchg
sbb
jne
push
imul
shl
dec
outs
std
mov
stos
inc
(bad)
cld
mov
jp
out
xor
lds
dec
xor
and
jl
(bad)
into
dec
pop
cmp
test
jne
test
xchg
cmp
push
enter
add
mov
jne
jae
cmp
retf
or
sub
adc
daa
sahf
imul
jmp
adc
lock
xor
xor
jl
movs
imul
or
scas
lods
adc
in
mov
outs
mov
(bad)
fisub
(bad)
out
das
es
cmp
js
inc
sbb
cmp
ds
les
sbb
pushf
fld
and
jmp
cs
(bad)
and
lahf
jmp
jae
push
std
dec
mov
mov
mov
push
pop
movs
push
cli
adc
mov
int
jmp
dec
mov
jle
push
inc
cwde
cmp
cmp
adc
add
rol
sub
sub
and
in
sub
jge
adc
xor
mov
add
inc
or
ins
jae
dec
sub
imul
call
lds
icebp
js
pop
(bad)
movs
retf
outs
stos
outs
aas
push
add
sar
test
xor
imul
adc
and
add
lds
(bad)
div
and
scas
ror
adc
data16
sbb
dec
or
cld
dec
cmps
inc
add
in
sub
stos
mov
popf
add
pushf
fs
mov
pop
jno
inc
push
stos
addr16
cmc
std
in
push
add
sbb
test
int3
sbb
sub
or
xchg
mov
push
push
test
mov
sub
test
daa
mul
push
lea
ror
sbb
add
pop
test
sar
mul
and
dec
loop
cmps
pop
sub
hlt
lahf
mov
sbb
jg
(bad)
and
or
lods
fisttp
sub
xchg
push
push
imul
je
lahf
retf
aad
inc
dec
in
mov
or
jp
xchg
mov
scas
cli
sub
data16
jmp
mov
pop
jmp
ins
leave
pop
push
sbb
mov
out
hlt
dec
jo
adc
pop
bound
test
stos
leave
repz
addr16
push
inc
cmps
ror
lods
push
movs
pop
mov
sub
dec
popa
xor
push
and
pop
push
out
mov
(bad)
je
inc
shl
or
cmp
jecxz
xchg
loope
jne
scas
add
mov
lods
push
jb
stos
sub
fidivr
lea
(bad)
jl
stos
mov
add
ins
mov
sub
dec
fmul
in
fnstenv
xor
inc
jecxz
or
push
inc
pop
xor
cdq
sahf
(bad)
fsub
mov
cmp
scas
pop
push
add
pop
jne
in
loopne
popf
cmp
dec
push
sub
pop
gs
loope
xor
mov
lods
lahf
xchg
stos
(bad)
xchg
ret
in
ret
into
scas
cmp
jns
adc
push
cmp
push
cld
mov
push
test
cmc
sub
mov
arpl
dec
movs
je
rcr
adc
mov
pusha
inc
xchg
jecxz
push
outs
add
xchg
movs
mov
mov
sub
jae
sub
imul
sti
and
push
(bad)
cmp
inc
and
nop
mov
arpl
lds
rol
aas
(bad)
xchg
loope
mov
nop
les
sub
xchg
cmp
cmps
shl
outs
adc
mov
pop
xchg
jg
xor
cmp
or
cmc
or
adc
pop
sub
xor
sub
mov
push
mov
cwde
pop
daa
cli
cmc
imul
bound
scas
ret
xor
icebp
vorps
cmps
int
mov
imul
jp
sbb
(bad)
mov
addr16
inc
mov
or
xor
mov
sbb
jmp
aas
push
es
cmp
add
adc
out
pushf
in
movs
pop
xlat
jnp
adc
push
dec
cmp
fbld
jne
(bad)
ss
mov
mov
inc
adc
shr
pop
xor
xor
inc
and
mov
je
pop
add
iret
cmp
jecxz
pop
shl
mov
pop
mov
adc
push
sahf
outs
shr
std
shl
fs
rcr
jle
jnp
sbb
stos
mov
rcr
dec
test
cmps
mov
or
mov
dec
mov
repz
imul
or
enter
add
test
adc
sbb
adc
fnstsw
loopne
xchg
in
add
push
jle
test
lods
ret
(bad)
movs
pop
xchg
push
push
test
cmp
(bad)
hlt
xlat
fnstenv
and
(bad)
xor
stos
xchg
xchg
popf
repz
cmp
retf
dec
ja
cli
sahf
xchg
adc
in
popf
and
imul
mov
(bad)
sub
dec
pop
jns
int
call
in
ret
outs
pusha
sbb
push
mov
call
call
sbb
inc
jne
ror
cdq
aad
mov
mov
fisttp
xchg
adc
or
in
fist
mov
and
test
rcl
push
inc
sub
fld
jo
leave
arpl
mov
icebp
pop
dec
xor
shr
push
and
xchg
or
imul
repz
push
inc
lahf
ins
sub
and
(bad)
sbb
xor
cmp
add
(bad)
call
mov
shr
je
sub
clc
add
scas
jne
pop
push
jp
fdivr
mov
inc
sub
or
pop
bnd
in
xor
mov
add
cmps
sub
cmp
and
and
stos
aas
fsub
sub
stos
inc
shr
or
leave
movs
sbb
xchg
arpl
pop
icebp
popf
or
xor
in
cmc
xchg
mov
fisttp
or
out
aam
push
ficom
jnp
jae
adc
sti
mov
enter
movs
stc
aad
pusha
aam
(bad)
ds
test
test
sub
jg
aam
mov
dec
sbb
mov
and
lods
inc
adc
rcr
mov
std
mov
iret
push
jmp
inc
ds
adc
les
aam
pop
mov
cli
in
mov
aam
inc
or
fiadd
cli
popf
xor
pop
fsubr
push
mov
mov
cld
out
in
xchg
(bad)
sbb
push
ds
xor
aaa
cmp
jnp
adc
mov
clc
cmp
movs
and
imul
(bad)
push
pushf
sbb
dec
adc
lds
(bad)
or
je
imul
(bad)
fdiv
xor
adc
jnp
stos
leave
out
call
xlat
loopne
sti
mov
or
sahf
les
xor
dec
adc
mov
retf
xchg
push
jge
fadd
inc
std
cs
mov
jnp
push
int3
inc
jle
ror
mov
ret
add
mov
xchg
xor
call
pop
push
xchg
icebp
shl
push
repnz
pop
jmp
cli
ss
pop
dec
cmps
addr16
add
and
xchg
fdiv
inc
retf
inc
and
mov
xor
mov
push
daa
test
retf
(bad)
jmp
add
and
adc
ja
fsub
xchg
call
sub
lds
mov
or
cmp
fsub
mov
out
mov
jnp
mov
mov
scas
je
lods
fcomip
adc
push
lods
and
xor
ins
ins
aaa
into
pop
scas
xchg
dec
dec
sbb
push
popf
push
(bad)
push
sub
mov
or
xor
dec
fmul
fsubr
mov
lds
dec
jl
mov
div
inc
mov
sub
push
or
nop
jo
xor
not
sbb
pop
inc
imul
dec
add
mov
xchg
pop
int3
out
cwde
dec
mov
fmul
stos
sbb
(bad)
pop
dec
push
out
add
cdq
pop
js
std
hlt
dec
xchg
xor
sbb
add
mov
sahf
cmps
ds
cmp
jge
(bad)
cs
xor
fiadd
xor
mov
adc
mov
inc
pop
jmp
cmp
cmc
jns
stc
data16
mov
stos
cmp
pop
mov
xchg
sub
dec
sub
outs
xor
push
in
pop
jne
test
mov
in
xor
or
aam
mov
das
xchg
dec
xchg
ja
mov
out
shl
enter
mov
in
lock
cmp
dec
(bad)
or
fimul
aas
or
in
adc
dec
cmp
adc
and
xchg
jne
sbb
fistp
inc
in
cmp
lds
or
mov
call
cmp
jae
adc
sub
into
(bad)
mov
test
xchg
scas
repz
mov
stos
cmp
push
jbe
je
add
les
or
jg
pop
fwait
repnz
xchg
mov
mov
bound
or
inc
outs
test
pop
movs
fsub
retf
in
and
movs
pop
push
cmp
fild
dec
mov
jae
push
in
mov
dec
and
aas
cwde
push
stc
pushf
stos
and
inc
push
call
jb
movs
push
popa
stos
cmp
aam
lods
jne
outs
call
xor
fist
in
mov
dec
fst
out
dec
sub
rcr
mul
ins
sbb
and
dec
loope
mov
jbe
loopne
add
mov
mov
pop
mov
add
scas
sub
(bad)
pop
imul
jnp
aam
inc
xor
jmp
or
jbe
test
outs
stos
and
or
test
retf
fist
sbb
sub
and
pop
mov
js
iret
mov
sbb
ins
(bad)
push
add
cmps
mov
add
or
and
xlat
and
inc
sub
or
mov
les
in
xchg
xchg
lahf
(bad)
jmp
push
or
fsub
cmp
fistp
inc
push
xchg
and
jp
outs
lods
adc
jbe
push
sahf
(bad)
sbb
dec
into
mov
hlt
rol
pop
push
(bad)
fwait
fwait
inc
rol
mov
adc
push
or
shl
test
mov
in
popa
or
loope
int3
retf
arpl
fwait
test
cmc
fcomip
fidiv
ds
jnp
inc
pop
in
scas
stos
mov
shr
out
fstp
fimul
scas
mov
dec
mov
stos
mov
jp
es
add
inc
test
movs
(bad)
push
ins
push
loop
xor
sbb
xor
pop
mov
aaa
push
dec
cmp
dec
pop
lea
mov
loopne
bound
mov
fsub
mov
in
xor
xor
add
sbb
xchg
xor
jne
mov
sbb
jp
enter
cmp
retf
mov
pop
cmp
add
cld
(bad)
jns
sbb
push
sahf
repz
retf
in
popa
lahf
push
jp
mov
fwait
imul
pop
jo
fisttp
jno
adc
daa
(bad)
pop
sub
pop
test
test
and
test
or
push
xor
call
mov
ins
sub
and
mov
stos
retf
(bad)
cmp
lahf
and
out
mov
push
cmps
leave
dec
pop
(bad)
shl
ins
inc
nop
jg
lahf
adc
jb
hlt
sub
iret
sub
div
adc
aam
or
mov
mov
and
test
xchg
xor
pusha
dec
mov
mov
mov
jnp
and
push
popa
mov
mov
xchg
xor
cmp
std
stc
mov
dec
mov
shl
popf
cmc
adc
setns
push
lea
or
dec
mov
dec
push
add
pop
shr
pop
imul
inc
mov
sti
inc
repz
mov
mov
mov
or
lods
or
mov
fsubr
jo
cmp
ret
or
shl
dec
or
pop
or
cmp
scas
mov
icebp
or
mov
ins
sub
nop
xor
iret
loope
push
dec
and
movs
mov
push
fsub
pop
add
shl
iret
popf
iret
lahf
hlt
mov
imul
adc
call
loop
mov
jle
add
je
push
push
out
aam
aas
dec
daa
sbb
int
retf
push
idiv
or
les
cmps
lea
mov
mov
popa
mov
dec
push
mov
in
ins
rcr
sub
and
lahf
ret
dec
imul
xor
jno
fprem1
adc
xchg
loop
rol
movs
mov
mov
loopne
jno
mov
push
sar
sbb
shl
mov
fdivr
pop
xchg
in
sbb
leave
dec
sar
jns
xor
xor
stos
mov
(bad)
mov
xor
sti
sti
loope
lods
xor
scas
jle
stc
mov
jecxz
test
rcl
movs
adc
icebp
jmp
je
out
jo
adc
mov
jae
fst
mov
adc
dec
rcl
test
fcomp
pop
mov
pop
fisubr
push
rol
sbb
dec
pop
pop
out
cld
mov
ret
fisubr
mov
or
push
push
and
and
xor
test
cmps
pushf
pop
xor
pop
test
mov
lods
ds
sub
in
cmc
retf
std
les
add
retf
xchg
(bad)
scas
nop
ss
jmp
ds
ins
mov
push
sub
push
mov
int
mov
mov
call
das
mov
dec
cmp
test
mov
stc
push
xlat
ins
mov
xlat
sbb
cld
adc
xor
mov
inc
cmp
dec
mov
pop
add
loope
(bad)
js
ss
ret
mov
int
(bad)
int3
dec
pop
xchg
aam
mov
dec
in
addr16
ss
lock
rcr
mov
inc
sbb
cmp
or
mov
add
mov
mov
test
sub
daa
mov
shl
inc
mov
cmp
sub
and
cmp
or
loop
xlat
xchg
dec
push
or
xor
xchg
jecxz
test
imul
sub
(bad)
loope
jns
mov
adc
cmp
mov
ror
push
cmc
jae
stos
das
add
scas
addr16
dec
mov
push
retf
fdiv
mov
cmp
sub
jmp
out
call
mov
inc
mov
aas
pop
in
sbb
jnp
ds
and
in
ret
imul
shl
(bad)
nop
xchg
int3
cmps
add
xchg
in
xor
(bad)
lock
sbb
cs
pop
and
mov
xchg
dec
jge
inc
nop
xchg
lods
sub
inc
add
cmps
and
push
jnp
jmp
push
jge
xlat
lds
dec
mov
push
ret
xchg
aam
shl
in
xor
mov
cli
adc
fmulp
inc
add
push
or
jbe
out
mov
jmp
dec
sub
int3
in
xchg
ja
jnp
mov
popf
out
mov
test
ja
cmp
dec
loope
jae
mov
inc
scas
das
fs
call
pop
ror
int3
retf
pop
push
(bad)
cmc
shr
cmc
sbb
ret
shr
adc
dec
mov
mov
ret
add
shl
jp
iret
push
daa
xor
repz
test
scas
mov
cmps
inc
mov
call
xor
ret
jl
sub
(bad)
push
or
mov
cmp
out
scas
jno
mov
mov
(bad)
mov
retf
out
scas
xlat
mov
cwde
dec
push
test
(bad)
ss
sbb
inc
pop
or
movs
dec
or
not
sbb
sti
and
mov
scas
xchg
test
sub
setle
loop
xor
mov
add
out
add
cmc
ss
jbe
and
or
test
fild
or
das
dec
dec
pop
adc
icebp
pop
scas
je
jno
iret
mov
add
mov
cs
jb
jecxz
mov
cmp
xchg
jecxz
adc
hlt
dec
call
jl
outs
repz
sbb
cmp
xor
into
inc
pop
push
(bad)
sbb
sub
and
inc
mov
or
clc
sub
mov
icebp
mov
lds
and
dec
push
les
mov
ins
or
in
fistp
movs
das
xlat
in
adc
add
hlt
jge
pop
xchg
(bad)
mov
lea
adc
dec
jne
mov
cs
rol
fistp
jnp
mov
pop
test
movs
add
ins
test
lock
test
inc
and
adc
push
daa
mov
test
xor
mov
popf
(bad)
sbb
fld
jne
xchg
imul
movs
enter
pop
push
cmp
mov
jmp
and
push
adc
jp
and
and
mov
js
inc
pop
push
inc
inc
mov
mov
pop
fwait
test
shr
dec
sub
es
nop
rcl
and
retf
fstp
jmp
arpl
lods
sub
xor
clc
mov
xor
call
mov
sub
mov
addr16
call
retf
ins
pop
int
jle
ins
repnz
xchg
fild
iret
arpl
and
sub
fidivr
popaw
dec
mov
mov
stc
add
std
jge
fstp
mov
inc
mov
pop
sub
cdq
dec
or
adc
and
jmp
lds
xor
xlat
jae
jl
fldcw
(bad)
mov
jg
test
int3
cmc
or
cmp
cmps
test
not
pop
mov
test
push
mov
mov
pop
push
sub
ret
adc
jne
stos
clc
xchg
sbb
and
mov
data16
jns
xchg
lea
lods
mov
imul
adc
(bad)
jnp
inc
pop
jnp
jg
ins
and
jae
ja
cmp
sub
fcom
stos
das
pop
jbe
mov
aas
jmp
pushw
test
neg
push
call
(bad)
mov
mov
out
mov
aaa
sbb
lahf
cld
and
les
imul
jmp
push
xchg
into
mov
bound
push
sbb
mov
xor
pushf
bound
sub
sub
mov
sbb
popf
push
adc
push
aad
(bad)
sub
call
dec
sub
icebp
mov
mov
jl
pop
cmp
rcr
push
mov
inc
jns
mov
mov
lock
adc
mov
js
imul
rcr
repnz
xor
push
and
leave
ins
mov
push
adc
sbb
rcr
in
and
imul
mov
jecxz
nop
push
bound
shl
int
and
out
cli
out
and
jnp
and
fild
arpl
mov
(bad)
cdq
push
push
jmp
es
push
sub
xchg
jge
imul
test
dec
loop
jnp
cmp
fwait
sub
xchg
cmp
and
sar
sbb
cs
je
dec
pop
inc
das
fidivr
repnz
mov
jmp
sbb
ss
in
fwait
mov
in
sbb
xor
jmp
xor
sbb
mov
dec
ror
xor
pop
pop
inc
out
in
loopne
in
ror
out
daa
pop
or
sub
les
mov
les
mov
dec
call
fucomip
repnz
lods
add
lods
cdq
mov
das
int
clc
neg
inc
ins
das
cmp
dec
pop
sbb
jb
cmp
in
pop
sbb
lock
mov
mov
pop
mov
das
inc
lods
or
jp
dec
int3
mov
dec
add
stos
mov
mov
or
jmp
popf
ins
jne
cmp
scas
ins
cmp
mov
fdiv
xchg
lods
fild
push
jnp
repnz
hlt
pop
add
nop
sub
fs
or
aaa
sbb
in
jmp
fucomp
mov
or
movs
cs
nop
js
(bad)
retf
and
mov
aam
push
dec
pop
xchg
inc
pop
pop
mov
frstor
pusha
out
and
dec
dec
dec
pop
clc
gs
cli
(bad)
into
push
test
jb
push
xlat
dec
cmp
pusha
retf
cmps
jl
or
(bad)
sub
arpl
mov
stc
xor
add
loope
xor
xor
icebp
or
pusha
jno
inc
sub
das
mov
shl
std
fiadd
sbb
stc
adc
cwde
jns
test
jo
xchg
scas
inc
dec
daa
adc
aas
les
ffree
dec
ror
sub
rcl
jnp
adc
push
aas
stos
xor
push
call
and
jl
cmps
jne
ficom
rcr
mov
mov
mov
(bad)
shld
or
bound
push
aas
adc
cmp
ins
xlat
cmc
sbb
int3
pop
cwde
add
jns
mov
scas
and
out
ss
pop
adc
les
shl
ins
(bad)
cmp
jb
daa
out
cmp
jmp
cwde
pusha
push
sub
inc
xor
fcomp
mov
adc
add
pop
stos
pop
(bad)
pusha
imul
sub
sahf
pop
add
loop
ins
mov
add
jno
dec
call
into
addr16
mov
jno
scas
jmp
push
dec
push
xor
and
inc
sub
mov
int
jae
mov
and
cmps
stos
adc
pop
mov
cs
(bad)
into
call
sbb
cmp
xchg
xor
mov
mov
inc
xchg
inc
pcmpeqw
call
jbe
lock
and
xchg
mov
cdq
sbb
pop
jle
push
je
cmp
mov
test
jmp
jne
or
push
rcr
and
mov
or
mov
imul
dec
enter
push
push
icebp
mov
push
fwait
and
rol
xchg
inc
leave
push
sbb
and
retf
ficom
cmp
mov
aaa
fisubr
push
loopne
lds
jne
ror
dec
icebp
push
les
push
jg
in
out
jge
sahf
pop
in
fcomp
cmp
shl
sbb
adc
inc
cmp
pop
jp
rol
in
inc
call
push
xor
fs
add
push
cmp
mov
pop
loopne
sbb
push
stos
cmps
call
fdivr
dec
xchg
jp
in
jecxz
adc
imul
xor
push
pop
cmps
mov
xchg
sub
jnp
lods
cmps
push
adc
push
(bad)
pop
mov
inc
pusha
fist
mov
outs
ret
scas
xor
jg
add
pop
or
xor
repz
inc
ret
lds
ret
repz
or
lahf
sub
int
xor
jns
sbb
xchg
leave
mov
add
arpl
jl
push
push
xor
inc
inc
(bad)
lods
cli
or
scas
out
xor
and
imul
cld
mov
ret
sbb
mov
cmp
xchg
cmps
test
aam
sahf
pop
dec
dec
hlt
cmp
push
cmc
jge
test
js
cmp
xor
inc
dec
stc
fcom
and
jle
mov
sub
in
or
shl
mov
in
lods
mov
outs
mov
mov
jns
cmps
retf
xchg
movs
and
cdq
xchg
arpl
mov
pop
inc
(bad)
test
aad
int
push
test
clc
int
std
int
mov
sahf
add
dec
jns
jne
pusha
and
lods
push
aas
jmp
add
cmp
push
cmovp
enter
or
cmp
xor
jmp
retf
xor
or
out
jns
cld
xor
mov
jmp
jmp
push
xlat
pusha
sub
pop
aad
pop
xchg
add
lds
sub
mov
fcom
xlat
jae
push
fmul
(bad)
xor
sar
xchg
mov
pop
stc
aam
sbb
adc
test
cmps
rcr
pop
call
cmp
sar
fidivr
adc
out
out
aas
push
popa
xor
rol
fsubp
push
xor
into
mov
mov
pop
mov
jmp
lods
leave
hlt
and
sub
pop
adc
sahf
mov
shl
xchg
repz
push
add
call
dec
push
neg
inc
popa
dec
push
fadd
ds
cs
movs
mov
jg
mov
mov
lds
fcomp
push
ins
popa
jmp
cld
mov
movs
sti
cld
inc
pop
or
cld
cmp
push
cmp
int3
pop
cmp
jae
sub
xor
mov
push
inc
movs
cwde
jne
(bad)
in
nop
cmps
pop
mov
addr16
ret
outs
mov
call
sbb
dec
sub
dec
push
mov
cmp
icebp
cdq
mov
aad
sbb
fistp
mov
dec
mov
sti
jns
xor
cli
in
cmp
cmp
icebp
je
fmul
dec
or
dec
inc
sub
adc
scas
addr16
mov
js
pop
(bad)
and
ror
or
iret
mov
stc
adc
sbb
sahf
(bad)
shl
fs
pop
lods
jp
in
popa
xchg
push
cmp
out
push
ror
out
sahf
mov
jnp
mov
push
scas
sub
mov
mov
dec
mov
daa
out
retf
outs
push
in
jb
in
ror
mov
add
or
ds
lea
outs
out
mov
mov
xchg
mov
loop
push
int3
leave
movs
dec
dec
cmp
sbb
xor
cmp
xchg
imul
mov
ret
nop
mov
mov
mov
test
dec
pop
add
xchg
xor
out
dec
cmp
lea
xchg
adc
call
jmp
(bad)
imul
push
inc
push
pop
inc
mov
int
xchg
pop
sub
fidiv
test
in
adc
popf
push
or
outs
jo
out
sbb
(bad)
div
test
pop
mov
bsr
das
(bad)
adc
loop
mov
into
push
mov
call
sub
mov
push
lods
iret
jg
and
xchg
cmp
xlat
mov
lods
rcl
adc
push
(bad)
(bad)
mov
add
hlt
jge
push
je
pop
fidiv
lds
sahf
push
mov
pop
aaa
cwde
jp
outs
aas
jg
jp
and
std
(bad)
scas
pop
rcr
test
pop
daa
mov
popf
shl
dec
rcr
mov
push
icebp
daa
shl
pop
add
jl
comiss
arpl
jmp
inc
mov
sbb
xor
jne
gs
pop
lods
test
cli
mov
lea
cwde
adc
sar
mov
dec
cmp
scas
adc
jo
xchg
sub
mov
xlat
mov
call
icebp
add
xor
leave
or
xor
(bad)
jae
sahf
xchg
out
xchg
ret
and
jnp
xchg
or
ins
mov
std
daa
enter
dec
mov
xchg
adc
lods
mov
or
mov
fisubr
xor
jno
cmps
and
pop
in
movs
in
mov
lock
sub
imul
(bad)
push
ret
movs
xor
jbe
push
clc
clc
jmp
cdq
scas
lods
bound
in
(bad)
push
(bad)
pop
and
fnstenv
xchg
rcl
xchg
fidiv
inc
stc
test
test
aaa
loop
adc
out
xor
sti
push
lea
xchg
inc
cdq
ins
dec
stos
xchg
popf
adc
cmps
dec
pop
sub
or
sbb
or
cmp
sbb
cmp
mov
lds
in
shr
(bad)
or
jmp
mov
sti
dec
addr16
iret
pop
sub
dec
or
sbb
or
push
cmp
les
cmp
cmp
rcr
pop
jge
xchg
inc
mov
iret
jl
in
dec
pop
stos
pop
mov
pop
inc
jl
fiadd
or
loop
out
loopne
lock
imul
(bad)
icebp
xor
sbb
(bad)
shl
sete
es
mov
or
aad
sbb
add
shl
push
pop
iret
xchg
scas
cmp
xor
addr16
adc
fisub
int3
and
imul
mov
push
outs
test
retf
and
jb
xlat
inc
leave
jge
scas
popf
xchg
popa
jae
xchg
cmp
mov
lods
dec
xchg
mov
pusha
cmp
and
int3
xor
and
outs
inc
movs
stos
inc
sub
add
jmp
cdq
fwait
call
dec
sbb
push
fsubr
ja
jno
push
add
dec
jl
jo
inc
sub
pop
sub
sub
xchg
cli
mov
int
sub
xchg
mov
gs
sub
cmp
mov
and
int
or
je
iret
cmp
ins
push
sbb
int3
push
dec
ss
add
test
pop
inc
outs
sub
and
dec
call
adc
dec
dec
inc
sub
cdq
sub
mov
add
push
stos
pusha
jl
int
jl
scas
shl
shl
adc
xchg
mov
mov
rcl
mov
push
inc
push
add
or
xchg
and
cli
rcr
and
jl
jnp
sti
mov
inc
xor
add
cs
pop
mov
or
outs
cmp
pop
fisttp
in
shl
outs
xchg
pop
and
(bad)
pushf
ins
adc
cmps
inc
dec
mov
mov
mov
inc
es
fidiv
sbb
out
ret
xchg
fisub
jae
jg
push
mov
push
sub
adc
jo
inc
pop
xor
(bad)
out
in
ins
stc
inc
shl
clc
and
dec
xor
shl
shr
mov
pop
pop
inc
(bad)
jecxz
lahf
cmp
jnp
test
jno
fild
repz
(bad)
cmp
enter
in
out
ins
and
out
iret
sbb
cmc
dec
fsub
mov
xor
xor
lahf
xor
xor
xchg
cmp
(bad)
fsubr
push
jnp
loop
add
add
sbb
or
jle
scas
(bad)
out
retf
enter
cdq
cs
or
ins
dec
push
xor
and
loope
mov
mov
jecxz
fldcw
cs
(bad)
jne
cmp
mov
add
ja
sbb
mov
jmp
mov
sub
cld
cwde
mov
lock
xchg
or
inc
lods
out
pusha
cwde
mov
cld
std
repz
imul
jp
mov
mov
xchg
fnstenv
test
imul
push
scas
sahf
test
mov
xchg
add
cli
repz
sub
(bad)
ins
adc
xchg
inc
(bad)
inc
sbb
ret
push
or
xor
pop
lods
mov
fs
inc
pop
sbb
push
cmp
test
repnz
lahf
retf
xchg
rcr
inc
sub
fadd
(bad)
push
imul
addr16
dec
sub
imul
scas
mov
pop
mov
or
push
nop
fiadd
adc
ss
ins
fmulp
adc
inc
pushf
cdq
hlt
push
mov
mov
loopne
stos
lea
bswap
adc
stc
push
fst
shl
repnz
ins
push
push
cli
pop
stos
(bad)
xchg
in
cmp
cmp
or
sar
jne
or
push
adc
sbb
loop
retf
dec
icebp
cli
pop
push
jo
ja
jns
push
push
xlat
movs
mov
dec
sbb
inc
fist
(bad)
sub
movs
popa
outs
push
inc
jmp
inc
dec
xchg
pop
inc
sub
sahf
ret
out
sbb
inc
cmc
jmp
inc
or
add
sbb
push
and
mov
lods
jecxz
(bad)
loopne
ins
xchg
cmp
scas
arpl
sbb
push
inc
add
out
mov
cmp
repnz
imul
add
in
sbb
imul
cmp
xchg
mov
inc
daa
pop
pusha
and
bound
js
xor
imul
jmp
cmp
cmp
or
push
xor
imul
xchg
dec
mov
xor
xchg
stos
outs
pusha
pop
rol
or
mov
push
shr
jle
mov
ins
pop
fadd
mov
dec
dec
je
clc
loope
mov
ret
xlat
test
fs
ja
data16
(bad)
push
push
pushf
dec
in
sbb
(bad)
push
add
mov
sti
push
sbb
out
ds
adc
movs
clc
mov
stos
or
retf
push
adc
add
mov
mov
pop
fwait
scas
sbb
push
not
jnp
mov
add
icebp
in
sbb
and
adc
test
es
mov
pop
sar
out
jno
sbb
or
icebp
xor
pop
cli
in
test
bound
stos
outs
fdivr
outs
rol
jo
xchg
inc
cmp
mov
js
dec
mov
mov
test
ss
dec
fadd
test
add
push
enter
dec
loope
retf
test
xchg
sub
aam
cmp
or
fnstenv
test
xor
rcr
mov
es
jle
xor
mov
adc
push
(bad)
mov
inc
or
call
pop
xchg
daa
adc
imul
mov
sub
xor
clc
xchg
sub
pop
inc
ficom
and
rol
mov
and
std
adc
xchg
call
jmp
sub
jle
cmp
jo
sbb
sbb
aad
stos
push
mov
mov
imul
push
push
mov
xor
nop
daa
jp
inc
push
(bad)
fdivr
push
shl
lods
imul
inc
push
loope
fmul
mov
cwde
fld
loop
adc
lods
add
or
cld
retf
repnz
cwde
jmp
mov
lahf
in
jns
and
fst
enter
inc
sub
icebp
add
mov
cld
cmc
mov
adc
add
ror
and
xor
(bad)
out
pushf
cmp
xor
pop
mov
jno
pop
leave
adc
(bad)
push
jmp
das
out
xchg
xor
in
arpl
mov
fxch
or
jnp
aam
aad
sbb
mov
mov
inc
adc
leave
mov
fiadd
jbe
cmp
in
ins
pop
dec
daa
sbb
or
nop
imul
leave
push
(bad)
push
or
mov
adc
mov
xchg
jbe
jbe
sti
adc
add
aaa
imul
test
inc
sub
ins
int3
cdq
push
scas
jl
sub
xchg
inc
ret
jl
push
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
sbb
and
fist
(bad)
sbb
test
call
mov
les
js
push
clc
mov
(bad)
mov
xchg
aas
movs
jmp
xor
xchg
xchg
sbb
pop
adc
cs
in
lods
lahf
dec
shl
push
jno
inc
lods
aad
lahf
mov
xor
cld
xor
sub
dec
mov
idiv
mov
repnz
mov
bnd
xor
ficom
push
xlat
and
jecxz
outs
pop
pushf
ds
cmc
iret
jbe
outs
scas
and
push
xchg
sub
dec
push
arpl
test
xchg
stc
or
ret
mov
sub
fmul
cmps
scas
in
inc
cdq
stos
jno
inc
push
outs
lods
(bad)
mov
pop
fild
shl
push
iret
sbb
mov
sub
mov
out
mov
jp
bound
pop
fs
mov
scas
cld
bound
jmp
cdq
jbe
cdq
cdq
inc
fld
pop
mov
mov
in
test
leave
sbb
rcl
mov
pop
push
(bad)
into
xchg
nop
sub
mov
sbb
cmp
inc
cwde
cmp
mov
push
lock
pop
adc
loope
gs
lods
ret
int
dec
dec
add
inc
jbe
jp
rcl
dec
jp
call
out
retf
add
mov
xor
inc
and
mov
mov
and
lock
mov
push
jmp
int
pop
shl
jae
fidivr
arpl
int
pop
inc
xchg
fimul
(bad)
into
jo
shr
mov
add
loope
pop
or
sub
icebp
pushf
cmp
out
sahf
test
ret
pop
in
inc
sub
pop
imul
xchg
adc
pop
or
sub
and
xlat
dec
and
xor
ins
mov
sub
out
jae
fs
jns
or
pop
out
jnp
out
dec
pop
cwde
test
cld
push
sub
fadd
add
pop
popf
xchg
push
xor
fwait
mov
popa
mov
call
xor
xor
jecxz
test
xchg
mov
sbb
lahf
lahf
jle
cwde
fnstcw
test
bound
div
and
daa
jb
inc
inc
jno
mov
test
jmp
jmp
dec
aad
push
out
inc
fild
sar
xchg
mov
pop
repz
xchg
scas
(bad)
fild
fdivr
stos
sub
xchg
stos
out
jb
pop
mov
xchg
mov
scas
dec
stc
cmp
fwait
repz
mov
mov
push
mov
and
cmp
popf
mov
cs
mov
pusha
or
xor
test
sub
jp
cmp
aam
add
(bad)
ds
gs
inc
sub
(bad)
mov
sbb
mov
jae
inc
mov
dec
mov
mov
inc
popa
shl
jnp
jmp
fnstcw
push
or
pushf
push
das
std
push
arpl
lock
pop
dec
cwde
fwait
xlat
push
xor
jmp
call
mov
mov
mov
push
sub
sub
sbb
jp
stos
push
xor
bound
or
sub
inc
pop
in
retf
pop
add
call
add
mov
call
sbb
xchg
mov
(bad)
pop
movlps
add
(bad)
xor
mov
pop
add
xor
add
ins
xchg
hlt
inc
dec
ins
icebp
mov
pop
fxch
push
jg
fld
sub
xchg
cmp
test
cmp
ss
scas
or
mov
cmc
pop
scas
fsub
sub
dec
cmp
mov
nop
test
sti
sbb
push
inc
push
aam
xor
pop
jecxz
mov
adc
clc
xor
inc
call
sbb
dec
pop
scas
jle
out
xchg
cdq
sbb
sbb
and
cmp
mov
xor
jne
hlt
aad
test
lods
inc
std
ret
xchg
and
sbb
pushf
xor
out
lahf
mov
add
xor
xor
push
and
or
inc
(bad)
mov
repz
mov
xchg
pop
in
ins
jb
add
pop
daa
cld
cmp
and
aaa
mov
cmps
pop
popf
enter
mov
neg
mov
aaa
hlt
es
adc
jae
mov
movs
or
add
(bad)
fisttp
sbb
push
fs
cmc
mul
push
pop
inc
push
jo
cmp
adc
cmc
mov
stos
aam
(bad)
push
call
ret
jp
pop
(bad)
into
inc
xor
push
jl
sbb
fsub
call
mov
cs
and
and
pop
sbb
(bad)
ins
call
fsubr
cmp
jnp
dec
std
dec
loop
cld
jbe
and
inc
data16
push
xor
mov
push
add
sti
sbb
loope
(bad)
aam
push
in
add
fidivr
jle
or
inc
das
jg
es
call
sbb
mov
inc
xchg
xchg
push
(bad)
popf
and
mov
or
push
shl
aas
xor
pop
outs
jle
fmul
pop
movs
push
sbb
xchg
add
jge
out
iret
push
(bad)
or
ins
and
aaa
xor
repnz
push
lods
bound
dec
add
fsubr
neg
jecxz
pusha
(bad)
mov
pop
fisttp
xchg
aas
(bad)
(bad)
popa
test
cmp
push
inc
stos
mov
sbb
push
ss
jnp
xlat
aas
add
mov
rol
fucomip
ret
xchg
mov
sti
daa
pop
xchg
in
ror
bound
cli
xor
lahf
into
and
mov
neg
ret
add
xor
jne
loop
clc
in
loop
inc
imul
fmul
xchg
aam
rcr
push
adc
mov
in
test
(bad)
fisubr
pop
pop
lds
fadd
pop
call
add
ss
cmc
cmp
mov
jno
inc
mov
jg
fst
retf
mov
sahf
mov
mov
lea
in
push
in
iret
or
js
cmp
xchg
sub
add
pop
fnstsw
push
ficomp
idiv
push
xor
pop
cmc
aaa
test
xor
mov
jmp
or
add
pop
aad
xor
adc
jecxz
in
data16
je
jp
mov
adc
sar
push
sbb
clc
sbb
and
fs
out
stc
cld
add
mov
mov
jle
pop
add
xchg
addr16
cmps
adc
fwait
dec
dec
sub
sti
ror
mov
dec
loopne
(bad)
pop
dec
shl
sbb
aam
dec
jmp
inc
mov
jmp
and
xlat
mul
sub
add
imul
sub
dec
(bad)
push
in
push
inc
push
into
pop
dec
mov
loop
sbb
add
lahf
mov
leave
adc
sub
ret
or
lock
ret
nop
and
and
movs
sbb
pop
(bad)
sbb
stos
mov
cli
push
(bad)
test
jnp
jp
ficom
sub
(bad)
adc
repz
sbb
or
loop
lods
jmp
fdivr
repnz
cmp
push
push
sbb
jg
iret
loope
stos
pop
imul
ja
int
and
lds
add
mov
arpl
fadd
push
lods
pop
jg
ror
push
sub
mov
lea
adc
cmp
cmps
(bad)
xor
adc
mov
mov
scas
test
jecxz
in
sbb
jmp
(bad)
das
fcomp
xchg
outs
push
push
add
lock
mov
retf
xchg
inc
xchg
loopne
push
addr16
xchg
fild
ret
cmc
es
rcr
jmp
sbb
call
dec
in
das
(bad)
xchg
push
outs
dec
movs
dec
mov
jge
jmp
mov
mov
scas
dec
aas
add
sub
(bad)
js
push
lods
adc
fsubr
popf
js
cmps
xchg
(bad)
cmp
inc
(bad)
repnz
(bad)
mov
jl
call
mov
and
movs
mov
es
ret
out
mov
loope
mov
sub
mov
clc
xor
cld
jo
les
outs
xlat
dec
loopne
sub
sbb
push
or
cmp
jne
and
daa
push
xor
out
sbb
ror
sbb
ficomp
mov
into
stos
sub
daa
dec
xor
test
(bad)
aaa
xchg
jecxz
jne
(bad)
aad
sti
add
movs
xor
cmp
mov
and
pop
xchg
popf
push
pop
pop
pop
ss
pusha
iret
push
(bad)
jmp
and
das
jge
jo
aaa
or
fs
sbb
mov
xchg
movs
jecxz
sbb
ins
push
ss
pop
movs
pop
add
inc
gs
shr
cwde
mov
ret
shl
sub
je
and
push
cmps
sub
outs
pop
or
pop
or
adc
imul
pop
jne
push
mov
add
mov
cmp
jb
cwde
pop
dec
jae
popa
(bad)
push
push
inc
xor
cmp
das
pop
push
and
inc
fadd
sbb
fdivr
or
imul
or
dec
adc
mov
loope
xor
pop
or
test
or
mov
jb
dec
out
fcmovbe
jge
cld
mov
and
scas
mov
xchg
jmp
lea
test
(bad)
(bad)
dec
outs
jle
cmp
mul
in
cmc
mov
int
icebp
adc
add
not
adc
xchg
pop
jno
jbe
ret
mov
bswap
sub
or
pushf
or
xor
and
sbb
hlt
arpl
mov
sar
lds
dec
mov
pop
jo
mov
addr16
push
leave
add
test
rol
(bad)
test
xchg
retf
add
adc
xor
int3
in
mov
enter
nop
inc
xchg
ss
dec
mov
sub
cmp
rcl
js
fstp
outs
invd
mov
fild
push
gs
in
xchg
in
mov
xchg
dec
shr
adc
loop
lea
xchg
sbb
xchg
(bad)
fucomp
sbb
mov
and
cmp
sub
rol
dec
mov
sub
mov
out
push
jbe
adc
ret
mov
jmp
push
iret
xor
push
mov
pand
cmp
out
mov
jl
je
mov
and
int
cmp
fldcw
imul
ss
call
mov
shl
cwde
pushf
sti
fwait
sahf
cmps
pop
pop
or
popa
dec
shr
repz
fistp
xlat
pop
xor
jmp
daa
movs
pop
and
cli
rcl
out
adc
je
xor
cld
mov
mov
leave
inc
jns
pop
adc
cwde
pop
aam
(bad)
or
pop
lods
(bad)
sbb
retf
or
xchg
fistp
push
out
push
fcomp
push
cdq
sti
dec
div
loope
push
mov
push
fs
jl
xchg
mov
aad
ret
jmp
loopne
fldenv
ret
sub
(bad)
in
push
loop
mov
jg
cdq
pop
or
pop
mov
sub
mov
xor
mov
fld
inc
imul
cwde
cld
mov
mov
xchg
mov
mov
jmp
push
lods
cli
mov
push
or
fisubr
inc
mov
adc
es
out
imul
popf
aas
aaa
dec
pop
ss
adc
fcomp
jne
loope
push
xchg
int
fstp
pushf
cmps
sub
jnp
xchg
cmp
jae
xchg
clc
(bad)
fwait
aam
cmp
out
xor
ds
or
cwde
pop
xchg
stos
sbb
adc
call
pop
loop
mov
add
out
inc
jae
loop
sub
inc
ret
cmp
dec
mov
jg
rcl
and
sub
ja
mov
mov
mov
lock
push
jg
jne
cwde
push
sub
fstp
dec
(bad)
push
scas
fild
or
out
xor
add
sub
popf
int
icebp
in
sar
inc
aaa
dec
repnz
and
adc
push
pop
jl
mov
jns
xchg
mov
or
or
dec
imul
pop
lods
mov
add
jb
cmp
(bad)
aas
sub
dec
cmc
push
lahf
xor
xchg
mov
adc
adc
dec
push
jb
rcl
call
mov
pop
mov
loope
adc
in
cwde
jne
les
mov
ds
std
hlt
or
clc
push
inc
dec
inc
xchg
pop
dec
jns
dec
inc
test
pop
mov
xchg
aaa
jp
and
out
outs
ror
in
je
hlt
jb
lahf
fbstp
sub
addr16
cmps
mov
push
std
sti
pop
mov
ins
arpl
sar
adc
(bad)
adc
into
ret
cmp
retf
aam
pusha
je
sbb
mov
push
stc
sar
retf
adc
dec
es
xchg
aas
adc
lods
inc
je
xchg
xchg
mov
push
ss
test
inc
mov
cmps
dec
sub
fstp
mov
fcomp
xchg
ja
leave
add
push
push
out
into
inc
fdiv
aad
and
mov
adc
aam
push
or
dec
stos
cmp
mov
test
ins
pushf
fcomp
cmps
stos
sub
push
sar
push
fcom
rcl
das
inc
adc
sbb
jmp
mov
ret
jecxz
and
push
fdivr
push
jb
test
and
pop
mov
sar
rcr
cmp
cld
cmp
jb
shr
js
popf
in
cmp
sub
sbb
rol
rcr
scas
sbb
add
pop
mov
and
imul
inc
and
jecxz
imul
push
inc
pop
stos
push
outs
gs
mov
retf
or
sbb
dec
mov
push
das
lods
pop
int
imul
add
ret
test
stc
pop
ja
adc
add
retf
jb
call
mov
jecxz
push
jmp
cmp
mov
adc
adc
fnstenv
(bad)
cmp
cmp
pusha
nop
popa
jne
ret
in
outs
add
xchg
add
and
and
imul
(bad)
mov
test
or
xor
test
lods
fcom
push
pop
ror
sbb
imul
jb
xchg
retf
mov
das
addr16
sahf
push
sahf
jo
fnstsw
jno
fdiv
retf
adc
xor
inc
pop
in
xchg
idiv
xor
(bad)
stc
mov
push
repnz
cs
stc
leave
jns
jb
sub
sar
stos
xchg
int
cmps
xchg
xchg
mov
movs
int3
in
or
std
or
jb
js
cmp
mov
xchg
or
test
les
imul
sbb
mov
outs
cmp
(bad)
cmp
ins
push
stos
lea
out
lock
rcl
loopne
adc
div
mov
mov
jl
push
dec
inc
pop
cmp
std
mov
cmp
mov
sbb
and
adc
inc
iret
stos
js
data16
mov
push
addr16
scas
mov
sub
not
iret
hlt
addr16
hlt
and
iret
(bad)
imul
inc
cmp
call
fs
mov
outs
out
and
or
xchg
aad
loop
xchg
mov
shr
xor
cmp
mov
jle
mov
sub
mov
adc
adc
cli
pop
inc
outs
mov
mov
adc
or
sbb
inc
(bad)
push
bound
cli
loop
adc
ins
mov
nop
aas
pop
mov
inc
inc
push
fwait
inc
sbb
cdq
push
xor
fsubp
mov
out
mov
repnz
cld
or
icebp
sbb
and
adc
and
(bad)
cli
mov
shl
xchg
pushf
pushf
repz
popf
jns
into
sbb
in
repnz
and
fbld
out
pop
fisttp
xor
movs
std
leave
in
inc
lods
push
out
cmps
xor
ret
test
xchg
xchg
(bad)
pop
dec
fst
cmp
cli
xchg
fcom
sbb
daa
movs
sbb
pop
add
ficom
loopne
popa
leave
sahf
cmp
mov
xchg
mov
inc
push
push
in
fwait
jge
jp
push
pop
push
cwde
gs
mov
imul
adc
or
loopne
std
fidiv
jge
je
pop
movs
push
push
bound
push
push
adc
xchg
dec
ret
push
nop
mov
aam
dec
outs
getsec
mov
rol
pop
push
xor
clc
mov
out
outs
sub
pop
mov
xchg
(bad)
pusha
nop
jp
dec
fstp
sbb
cmps
lahf
popf
jmp
push
xchg
aam
xchg
jno
mov
inc
mov
daa
xchg
dec
test
shr
inc
gs
adc
cld
pop
scas
jecxz
xchg
push
adc
jb
inc
sbb
cs
xor
inc
xchg
mov
ret
aam
mov
loope
jno
pushf
pop
push
or
enter
ror
in
sti
xchg
ja
dec
dec
call
pop
sbb
mov
sbb
fild
xchg
adc
mov
rcl
push
push
dec
lods
scas
xor
sub
std
mov
int
sub
jb
shl
pop
aas
mov
mov
cmp
loop
mov
and
xchg
xchg
pushf
adc
lods
push
sub
add
mov
fisttp
arpl
popf
fstp
mov
pop
popf
mov
xchg
inc
mov
push
(bad)
dec
push
popf
stos
sub
popf
push
inc
push
pop
push
les
sub
and
(bad)
xor
jmp
push
or
mov
mov
xor
or
into
push
and
dec
stos
addr16
int
add
bound
add
jle
ins
rcl
sbb
mov
mov
scas
jb
xchg
test
xor
ss
xor
xchg
imul
lods
out
xchg
inc
idiv
cmp
adc
push
jmp
cmp
les
push
iret
cmp
xor
std
js
loopne
lahf
stos
mov
ja
and
gs
and
icebp
and
imul
mov
and
ror
nop
repnz
or
dec
add
(bad)
lock
jle
mov
cmps
fs
add
jmp
leave
ret
stos
jae
or
xor
sbb
mov
loope
shl
cmp
mov
mov
mov
push
dec
cli
push
mov
inc
pushf
push
or
mov
push
jg
sahf
xor
pusha
xor
or
sbb
imul
jg
ss
in
sbb
jb
push
fstp
not
retf
cmp
xchg
pop
inc
dec
jae
mov
out
xchg
dec
and
in
cmp
cmp
xor
or
mov
ins
mov
mov
cwde
iret
imul
jecxz
ret
mov
jo
lds
cmp
inc
push
adc
xor
cld
pop
jo
je
lock
fistp
and
test
sub
sbb
and
pusha
or
mov
xchg
div
out
xlat
cmps
dec
js
fist
sar
or
or
xor
xchg
mov
cmp
movs
dec
gs
ja
pop
mov
push
scas
xchg
sbb
test
in
lods
nop
fld
enter
lods
out
in
adc
dec
add
pop
adc
xor
sbb
add
and
push
xchg
pop
cmp
or
pop
ins
test
cmp
mov
push
fbstp
xchg
jne
and
or
call
lea
add
sbb
jns
scas
ja
sbb
xchg
pop
dec
fdivr
stc
add
(bad)
cld
inc
jno
jmp
mov
or
dec
mov
hlt
jns
push
jmp
sub
cmp
mov
jae
xor
cmp
and
xlat
std
dec
jne
rcl
shl
into
push
sbb
movaps
add
out
pusha
dec
outs
test
jae
popf
mov
or
sbb
fisttp
adc
or
dec
or
out
into
cmp
mov
add
bound
ret
sbb
nop
mov
adc
pop
cmp
or
mov
mov
mov
push
dec
lods
ins
shr
(bad)
loope
scas
mov
outs
jle
aad
mov
(bad)
fdivr
xchg
push
mov
jns
xor
mov
fsub
cwde
pop
jp
stos
cmps
mov
fsub
mov
push
jne
cld
outs
push
data16
std
adc
int3
push
bnd
(bad)
je
xchg
lods
scas
mov
mov
push
pop
aaa
scas
mov
pop
sti
ja
xor
push
lea
jg
fst
mov
jecxz
clc
xchg
not
pop
dec
or
cdq
retf
dec
in
arpl
push
adc
in
sub
jmp
hlt
icebp
pop
mov
addr16
out
(bad)
mov
dec
xor
or
and
std
retf
cmp
mov
dec
jl
or
pop
out
add
cld
in
mov
push
(bad)
mov
scas
or
mov
xor
add
dec
add
scas
jo
sbb
lds
icebp
outs
imul
sbb
retf
xor
add
and
xchg
fstp
loope
aad
aaa
lea
mov
cmps
sub
jb
adc
sbb
cmp
xchg
dec
shr
out
and
ret
pusha
mov
xor
das
cld
inc
outs
pop
lea
mov
out
jns
add
mov
jbe
cld
mov
fnstsw
mov
movs
in
rcr
int
test
into
pop
xchg
or
add
in
pop
das
cli
xor
cmp
or
and
fsincos
dec
outs
dec
and
mov
bound
mov
enter
pushf
je
add
mov
dec
daa
dec
shl
call
les
ss
push
lock
jp
stos
mov
lahf
dec
pop
jnp
repz
mov
arpl
push
mov
fdivr
adc
in
inc
frstor
fsubr
dec
xchg
aaa
pop
test
dec
cmps
test
loop
leave
es
cmps
dec
mov
mov
sbb
mov
ins
enter
or
add
cmp
sbb
jns
outs
mov
jno
pusha
and
xor
xrelease
inc
or
push
inc
add
movs
test
jno
lahf
or
mov
add
jge
icebp
imul
xchg
fadd
pusha
test
fwait
popa
jl
loopne
cmc
xor
jno
and
adc
scas
mov
ins
dec
mov
push
add
pop
sub
arpl
in
inc
out
add
in
je
add
int
xchg
stc
enter
jne
lahf
add
cmps
jle
add
gs
out
xor
mov
mov
icebp
hlt
jbe
ins
shl
(bad)
xchg
inc
add
call
sahf
daa
or
data16
retf
in
adc
hlt
leave
imul
mov
jbe
test
mov
scas
leave
ds
cmc
xor
out
adc
pop
scas
es
mov
push
xor
cmp
jg
fs
in
mov
je
xchg
mov
shl
xlat
je
dec
ret
jne
in
xchg
mov
cmp
or
and
iret
and
mov
call
outs
addr16
mov
retf
jl
xor
add
xchg
ja
popa
adc
xchg
inc
inc
mov
push
pop
mov
mov
aas
mov
push
sub
inc
fisttp
push
mov
or
cmp
loope
sub
pop
test
adc
mov
aam
sub
cs
aam
shl
in
adc
mov
cmps
hlt
mov
cmp
(bad)
out
pushf
cmp
scas
and
int3
test
in
push
das
or
jmp
out
retf
add
fs
stos
mov
ficom
nop
xor
inc
repnz
ja
sub
xor
shld
xchg
mov
dec
or
in
mov
fbld
adc
xor
adc
and
jmp
test
mov
mov
xchg
pusha
push
push
inc
popf
inc
sub
jns
pushf
push
push
imul
jmp
mov
mul
pop
scas
xchg
aad
add
mov
arpl
dec
mov
fcmovne
and
xchg
js
or
jns
in
mov
ins
loopne
push
and
pusha
push
xchg
push
push
xchg
lock
aaa
jns
ds
sbb
mov
in
dec
xchg
lods
and
mov
sti
cmp
lahf
mov
pop
lahf
nop
gs
ss
inc
push
mov
xchg
je
push
or
lods
mov
mov
pop
out
or
jo
xchg
dec
mov
pop
cmp
adc
push
xchg
cmp
inc
mov
adc
adc
inc
xchg
jne
cmp
and
lock
call
pop
mov
cmp
add
fldenv
mov
fnstcw
out
aad
adc
jle
jp
xchg
sub
mov
xor
scas
add
pop
(bad)
div
or
retf
lds
pusha
fwait
mov
test
dec
jge
or
mov
call
inc
xchg
or
jnp
stc
add
add
test
jno
lds
pop
xchg
and
call
ins
cmps
sbb
lods
rcr
ja
jmp
sbb
test
test
retf
add
mov
ret
scas
mov
xor
ins
push
bound
add
xchg
cmp
das
repz
xor
inc
mov
dec
rol
jp
clc
add
scas
loopne
out
dec
adc
or
pop
daa
sbb
scas
in
pop
sub
or
sub
pop
sub
ins
and
pushf
in
mov
ja
fdivr
pop
aam
xchg
xchg
int
cmp
pop
sbb
cdq
ficomp
jmp
(bad)
push
pop
pusha
jl
adc
cmp
dec
movs
fwait
or
mov
add
dec
call
inc
adc
cmp
and
aas
pop
les
into
xor
pop
mov
add
cli
pop
gs
mov
mov
in
lea
test
sbb
dec
mov
ret
mov
push
scas
movs
mov
cli
xchg
in
ret
dec
(bad)
fidivr
xchg
pop
into
and
cmc
shl
adc
shl
xchg
xor
mov
pop
fcmovne
add
jno
std
push
pushf
retf
scas
dec
js
cmps
dec
jmp
sub
push
std
(bad)
shr
jbe
and
js
dec
and
dec
sub
jo
mov
cmp
jmp
push
pushf
sahf
adc
mov
inc
mov
inc
iret
lea
lds
dec
call
mov
loope
mov
cmp
dec
fprem1
mov
xor
mov
mov
jae
push
js
shl
xchg
xchg
jne
pop
stos
dec
or
shld
dec
jns
je
jl
out
gs
sub
mov
cmc
push
fst
or
scas
dec
loope
mov
cdq
les
lods
inc
inc
dec
mov
jg
cmps
test
je
sahf
(bad)
hlt
jp
mov
jno
cdq
pop
pop
mov
ins
test
stc
push
movs
out
or
dec
push
sub
mov
inc
jne
pop
sbb
pusha
push
xlat
mov
add
idiv
xchg
push
mov
mov
int3
or
fisubr
dec
adc
test
ret
or
js
pusha
mov
ins
lock
sahf
mov
in
imul
inc
jno
cmc
fdiv
ret
adc
ds
imul
std
dec
les
test
popa
popfw
fld
mov
sub
jp
mov
mov
and
mov
fstp
cmps
ins
cmp
mov
jmp
es
mov
add
js
(bad)
je
arpl
jns
aaa
push
pop
pop
test
js
cmp
loopne
sbb
jmp
fidivr
popf
idiv
movs
test
inc
cld
adc
fmul
push
sbb
scas
dec
mov
or
inc
xchg
shr
cwde
in
in
adc
(bad)
jno
sbb
mov
push
mov
sar
sub
mov
outs
aas
loope
mov
std
imul
gs
movs
xchg
jae
(bad)
aam
retf
mov
shl
jae
fimul
pop
pop
cmp
jns
outs
mov
sbb
cli
jmp
into
cs
int3
call
daa
push
and
mov
cwde
aas
jns
ret
mov
adc
clc
mov
xor
ja
pushf
icebp
loopne
ret
jb
sbb
je
popa
and
pop
push
mov
mov
retf
push
jge
xchg
cli
dec
pushf
ror
cmp
sbb
(bad)
rcr
xlat
fidivr
adc
out
sub
mov
imul
add
cmps
mov
(bad)
rol
aam
jge
push
scas
mov
jmp
mov
fdivr
sbb
ins
rol
cmp
pop
cmp
loope
xchg
xlat
jbe
repz
pusha
retf
inc
fisub
jae
addr16
inc
push
adc
ret
jmp
out
fwait
aas
(bad)
xchg
xor
pop
pop
cld
mov
(bad)
pusha
or
inc
mov
pop
jae
and
hlt
pop
vmovhpd
mov
ins
and
cmps
aaa
add
push
mov
cli
out
inc
inc
js
leave
pop
cwde
add
cld
(bad)
cdq
mov
movs
push
cmp
aad
add
mov
mov
enter
call
outs
jmp
into
aas
jae
retf
add
and
push
and
mov
cmps
popa
jno
and
pop
cwde
pop
ret
pop
test
(bad)
jmp
push
jae
popa
mov
xor
mov
imul
mov
and
daa
or
mov
inc
ret
cmps
mov
push
dec
or
inc
xor
mov
inc
mov
jl
retf
sub
mov
mov
xchg
cmp
fld
scas
pop
jmp
push
xchg
out
or
sub
mov
add
arpl
out
jl
add
fistp
call
sahf
jmp
ins
repz
fwait
pop
popa
push
int3
pop
pop
dec
or
jge
pop
mov
xchg
daa
sub
sub
push
jae
(bad)
(bad)
jp
cmp
xor
mov
sar
add
inc
sub
sbb
pop
cs
pusha
inc
ins
movs
(bad)
cld
jle
push
mov
inc
dec
sar
mov
inc
cmp
sbb
stc
pop
in
fs
in
dec
lahf
xor
les
pop
push
jne
hlt
cmp
mov
sub
adc
inc
mov
jb
or
mov
add
jmp
inc
add
add
dec
push
outs
push
jmp
add
out
fnsave
and
mov
pop
ss
jmp
imul
xor
fild
fldenv
dec
jl
jle
push
cmps
mov
push
sub
ror
mov
add
xchg
xchg
cli
cmp
jg
jnp
dec
shl
mov
xchg
fprem1
xchg
in
out
aad
jae
xchg
adc
inc
in
mov
test
out
repnz
cmps
sbb
loopne
test
xor
pop
std
pop
cmps
add
jmp
pop
ins
and
pushf
js
(bad)
sub
(bad)
out
cmp
sub
sub
push
fcmovnbe
out
jge
xor
imul
test
mov
ret
enter
in
mov
test
xchg
adc
or
dec
dec
inc
ss
and
xacquire
add
jg
cs
int3
sbb
xor
push
shr
xchg
movs
mov
or
jnp
jnp
das
call
xchg
int
and
push
les
push
sbb
scas
and
ror
addr16
sbb
pop
cs
lods
loope
ret
jge
mov
cs
stos
leave
arpl
dec
ret
adc
add
mov
mov
inc
(bad)
xchg
xor
xlat
jno
mov
push
clc
ja
sbb
lds
call
clc
fisttp
std
dec
mov
int3
ds
cli
(bad)
mov
adc
cli
in
sub
imul
mov
rol
sub
mov
sbb
into
fdivr
and
add
mov
lds
aas
int3
lods
add
cmp
mov
mov
inc
mov
in
jecxz
or
jmp
inc
jl
push
call
adc
les
sbb
pop
movs
push
out
ins
cli
and
fistp
dec
jmp
mov
test
push
mov
out
(bad)
ja
push
retf
repnz
das
push
or
scas
call
loop
dec
xchg
ins
fs
and
int3
sbb
(bad)
fcom
cli
js
call
jns
sbb
pop
fdiv
sbb
mov
aam
push
and
ja
dec
test
movs
push
daa
out
(bad)
out
pop
mov
lock
leave
jecxz
push
out
and
adc
ss
cmp
inc
xlat
fdiv
iret
ss
mov
call
cdq
or
sti
and
xchg
push
or
fistp
add
mov
dec
and
jmp
test
fmul
nop
add
sbb
cmps
arpl
scas
fldenv
repnz
mov
cmp
lea
shl
sbb
xor
xchg
in
jecxz
outs
dec
and
nop
dec
xchg
sbb
aaa
test
in
fcom
or
(bad)
push
shl
push
(bad)
adc
jle
sub
mov
js
add
mov
jg
imul
mov
test
stc
ret
ds
aaa
or
ja
mov
xor
cmp
loopne
pusha
jge
shl
lahf
pop
call
and
std
push
shl
cmp
in
push
sbb
push
retf
dec
adc
pop
inc
and
jge
sub
je
rcl
mov
dec
in
xchg
mov
out
ds
test
sbb
jl
and
call
lods
mov
ret
jmp
jmp
push
lahf
and
push
in
gs
xor
inc
daa
cmp
pop
pop
mov
ins
cmp
or
bound
mov
xchg
imul
mov
jmp
add
fnstcw
(bad)
ins
scas
sub
cmc
push
cmp
nop
adc
idiv
pushf
lea
mov
cli
adc
sub
addr16
cmp
lods
dec
mov
test
test
stos
pop
js
or
lods
push
or
movs
loope
(bad)
imul
fisubr
sar
je
xchg
out
ret
nop
push
icebp
cmp
or
push
xchg
cmp
ror
xchg
not
cli
and
sub
add
mov
pop
push
aad
pop
pop
add
xor
sub
fcomp
pop
sub
jo
(bad)
jecxz
add
inc
cwde
cwde
jp
mov
pusha
imul
adc
dec
out
adc
push
aas
aam
imul
dec
push
in
out
add
(bad)
push
iret
sub
retf
gs
add
mov
sahf
push
mov
retf
mov
sti
sahf
xor
out
js
jae
push
nop
in
lds
aad
(bad)
and
test
in
enter
jae
add
call
imul
mov
std
cmp
jp
or
pop
retf
sbb
shl
sbb
call
push
inc
popa
outs
or
(bad)
xor
and
cmps
adc
mov
xchg
out
jae
retf
cmovs
dec
lods
fstp
es
cmp
push
fst
arpl
cmp
js
xchg
sub
inc
and
jae
fst
icebp
fcmovu
or
cmps
bound
leave
je
xor
sbb
ds
xchg
ja
mov
iret
xchg
icebp
pop
push
iret
scas
test
outs
mov
ins
jo
sahf
sahf
aad
ins
fisub
jp
outs
mov
cmp
adc
xor
ret
jmp
ss
cmp
sub
adc
push
jecxz
and
repz
and
push
pop
dec
mov
fldenv
sub
cmp
repz
lds
and
jo
sub
fist
inc
ins
leave
(bad)
mov
mov
pushf
call
sbb
in
sub
aad
mov
(bad)
xchg
jg
mov
xchg
jl
ds
iret
fmul
pop
movs
jg
jns
loop
push
xchg
ror
out
int3
and
push
cmp
(bad)
int
push
dec
push
pop
or
push
xchg
jl
push
jp
xchg
mov
lds
test
jae
pushf
sbb
mov
fdiv
out
push
out
xchg
dec
popa
jecxz
jno
repz
xor
sbb
add
shl
push
cli
in
and
lods
popf
mov
scas
xlat
jecxz
push
ret
lods
sub
mov
loopne
and
mov
jns
push
pushf
sbb
out
loope
jge
mov
arpl
(bad)
inc
xchg
and
imul
xlat
sub
in
(bad)
xlat
repz
addr16
fadd
adc
dec
push
cmp
gs
add
int
cmp
xor
sub
xor
pop
push
sub
mov
sbb
xor
push
int
or
das
loopne
or
inc
scas
add
adc
mov
enter
cld
dec
pop
dec
push
add
add
cmps
mov
dec
jg
jne
das
adc
xchg
sahf
xchg
xlat
arpl
sar
aaa
xchg
mov
dec
jg
inc
mov
jns
or
hlt
mov
dec
sbb
xlat
xor
push
mov
into
dec
mov
xor
scas
(bad)
jne
pop
(bad)
jmp
jmp
sub
repz
adc
repnz
jg
test
mov
cmc
cld
add
adc
push
inc
sahf
xor
push
add
leave
aaa
jmp
xor
xchg
and
iret
or
or
push
shl
cmp
ins
push
xchg
dec
and
std
in
jae
jmp
or
es
out
mov
sbb
pop
inc
mov
out
cli
pop
pop
pop
push
adc
dec
dec
and
shufps
mov
jb
loop
add
mov
cmp
in
ins
dec
ins
mov
mov
int3
add
leave
jecxz
jns
and
adc
adc
ret
sub
pusha
mov
and
and
cmp
add
(bad)
gs
not
mov
imul
loope
sub
dec
sti
and
add
call
std
push
xchg
ss
shl
fidiv
test
cmp
xchg
test
cmp
adc
cmps
pushf
jge
adc
and
pop
inc
xor
scas
aaa
inc
xchg
popa
sar
mov
jl
push
pop
inc
pop
sub
jmp
movs
es
add
and
ss
mul
rcr
loop
aad
lods
dec
fld
sbb
in
fiadd
jb
adc
mov
aaa
sub
lods
pop
in
xor
retf
aaa
sti
scas
or
sbb
sbb
mov
frstor
or
mov
mov
(bad)
ja
movs
mov
(bad)
iret
bound
dec
push
mov
test
cmps
pop
popf
dec
cmp
jecxz
pop
xor
call
wrmsr
sub
push
in
xchg
and
xor
add
pop
rcl
fist
push
sbb
xor
ins
dec
push
es
push
mov
dec
mov
dec
mov
mov
outs
cmp
mov
cdq
rol
cli
add
and
mov
in
xchg
add
(bad)
jns
popf
sahf
imul
jl
out
add
ror
in
ror
gs
mov
jnp
xchg
or
ins
(bad)
jge
ins
cmp
adc
add
cmp
cmps
push
mov
loope
mov
jnp
loope
cmc
pushf
push
or
sub
or
scas
(bad)
dec
sub
xor
adc
jo
cwde
pop
ja
xor
cmp
rcl
pushf
adc
mov
inc
scas
jmp
ds
out
aam
movs
enter
push
sbb
lahf
fchs
adc
mov
iret
test
inc
adc
fwait
in
mov
dec
in
adc
mov
xchg
pop
jne
imul
and
sub
push
cwde
push
scas
adc
arpl
adc
es
jle
mov
inc
push
cli
add
jnp
mov
imul
lea
push
dec
dec
or
je
test
out
pop
inc
pop
cmps
xchg
fidivr
mov
js
pop
ins
or
or
jl
mov
out
repnz
loopne
xor
fsub
dec
mov
jp
cli
lahf
push
push
and
xchg
sub
rcl
push
out
ja
mov
hlt
mov
jne
xor
xchg
and
scas
into
outs
ror
je
loop
mov
and
test
pop
repnz
cmp
cmps
or
or
in
and
inc
inc
(bad)
cmp
ror
mov
jp
cmp
jl
push
jmp
cli
movs
cmp
iret
pusha
cmps
inc
push
sbb
sbb
mov
addr16
push
inc
push
push
gs
lock
sbb
std
stos
mov
dec
cwde
mov
stos
xchg
(bad)
jmp
leave
and
test
(bad)
mov
xchg
or
pusha
mov
cwde
lea
nop
test
mov
out
cmp
jno
jae
mov
mov
xchg
(bad)
mov
xchg
ins
aam
das
and
test
mov
sub
aaa
sub
in
inc
nop
adc
clc
mul
cmp
adc
jns
out
imul
test
jp
jbe
js
je
scas
fsubr
(bad)
mov
add
icebp
sahf
cmp
push
(bad)
add
mov
lock
addr16
test
sub
icebp
jo
add
ret
ret
cwde
xchg
cmps
or
adc
cmp
mov
dec
pop
cmp
int
push
iret
mov
retf
jle
xor
les
mov
adc
sbb
jge
and
and
clc
in
dec
sti
push
(bad)
and
iret
std
das
add
pop
xor
mov
jmp
xchg
jecxz
pop
(bad)
xchg
mov
push
fistp
mov
adc
fnsave
out
mov
pop
mov
or
and
shl
sbb
movs
jns
es
mov
and
add
mov
daa
int3
add
(bad)
ins
adc
out
in
sahf
in
fbstp
xchg
jno
int3
cmc
dec
in
push
in
(bad)
jne
jmp
or
(bad)
mov
mov
(bad)
mov
iret
push
test
repnz
(bad)
out
sbb
fmul
outs
and
pushf
inc
adc
jo
mov
or
cmp
hlt
or
(bad)
or
mov
adc
add
jp
inc
ror
mov
repnz
std
mov
(bad)
(bad)
shr
movs
sub
lods
add
std
sbb
xchg
sbb
sub
pushf
pop
sub
aam
push
fbstp
mov
(bad)
loope
cmp
adc
in
gs
jns
(bad)
inc
and
call
mov
mov
push
fisub
rol
iret
inc
out
sar
dec
pop
xor
dec
scas
retf
(bad)
xchg
repz
inc
dec
rcr
jg
vucomiss
and
dec
sub
jne
sub
dec
sti
stos
fs
xor
jmp
dec
fcmovnb
lea
ins
imul
cmps
or
xor
ja
pop
sbb
pop
jmp
ror
pop
ret
scas
push
hlt
imul
lds
or
or
cmp
xchg
mov
xchg
stos
pop
outs
xchg
or
adc
xlat
dec
push
test
push
(bad)
stc
and
jl
repnz
pushf
imul
dec
arpl
push
gs
sub
xchg
cmp
iret
rcr
cmp
jo
ret
cmp
xchg
in
and
mov
mov
or
and
pop
add
or
aam
enter
pop
test
aas
jmp
jecxz
pop
jmp
(bad)
jmp
arpl
popf
ret
out
adc
mov
in
ds
addr16
cdq
jecxz
into
dec
xor
dec
mov
hlt
or
fmul
pop
es
jb
xchg
imul
cmp
pop
mov
outs
call
and
mov
leave
(bad)
push
mov
lock
daa
test
jns
cmps
cli
push
imul
or
inc
lds
repz
push
mov
imul
inc
xchg
or
int
jmp
and
ret
nop
adc
movs
repz
in
imul
mov
ss
into
imul
xor
retf
push
mov
xor
(bad)
push
jge
push
fwait
(bad)
popa
js
sti
cmp
imul
(bad)
mov
fcmovb
push
xchg
cdq
add
mov
and
ss
jne
les
test
xchg
mov
pop
push
cmps
inc
dec
pop
xor
ss
and
ss
and
lahf
cmp
and
push
repnz
push
push
add
je
pop
push
cmp
(bad)
das
out
pushf
fsubr
in
adc
in
or
fisub
ja
dec
mov
pop
int3
push
jecxz
pop
jb
not
(bad)
add
fimul
dec
call
pop
daa
test
push
call
js
lea
sti
push
push
push
pop
stos
repz
in
xor
ror
fisttp
cmp
(bad)
cmp
gs
or
mov
xchg
add
lea
data16
inc
sbb
sbb
and
or
and
retf
cmp
pop
or
mov
cmc
arpl
jo
ds
mov
cs
dec
pop
cmp
sar
ins
cs
push
mov
ret
popf
inc
ins
adc
and
push
xor
in
adc
xor
lods
or
push
cmp
stos
fwait
pop
mov
jo
sahf
jno
(bad)
cs
xor
mov
ins
fsubp
out
and
mov
fist
outs
add
xchg
or
inc
adc
(bad)
sub
pop
not
pop
sub
mov
clc
or
xchg
sahf
and
or
mov
cmp
data16
pop
(bad)
mov
sub
das
test
(bad)
mov
stos
mov
inc
or
test
ret
fs
mov
or
call
stos
mov
loopne
lds
(bad)
loope
mov
pushf
dec
jecxz
jb
fdiv
lahf
xlat
sar
bound
jmp
inc
stos
leave
cmp
and
jnp
push
stos
mov
test
into
add
js
jnp
movs
mov
es
xchg
movs
pop
push
jecxz
inc
rcl
test
push
cmp
neg
or
ins
jmp
push
xor
(bad)
rcl
jmp
int3
mov
sbb
mov
(bad)
push
mov
call
cmp
or
sbb
mov
sub
scas
cli
xor
out
aad
inc
push
jo
cmp
adc
mov
xchg
in
test
jne
xor
int3
mov
cmp
es
es
adc
xchg
adc
(bad)
adc
out
int3
push
sbb
rol
in
jno
ins
inc
xchg
and
or
pop
mov
mov
sub
imul
mov
xchg
cmps
lds
ins
or
xor
ret
mov
jns
dec
adc
add
retf
push
(bad)
imul
int
daa
in
sub
mov
cdq
loopne
sbb
dec
sub
ror
fs
xlat
or
in
xchg
push
mov
(bad)
sbb
xchg
sti
popf
js
lds
hlt
outs
in
call
pop
push
mov
ficomp
rol
pop
push
or
scas
addr16
scas
push
push
stos
fwait
cmp
int3
imul
out
cwde
jecxz
repnz
iret
pop
or
mov
push
out
popf
popa
jne
cwde
pop
jg
mov
cli
mov
aaa
loope
mov
adc
adc
mov
mov
sub
fild
imul
push
in
inc
mov
pop
test
loopne
pop
fdivr
jl
mov
stos
gs
cli
scas
mov
aas
push
xchg
loopne
jp
inc
add
ss
mov
pop
sub
xor
or
es
cmp
mov
into
and
rcr
test
sahf
sub
jl
gs
int
neg
mov
cwde
aas
mov
push
imul
mov
xor
bound
and
xlat
jno
fld
xor
repz
adc
(bad)
test
xor
(bad)
je
inc
mov
dec
shl
sub
add
sub
enter
dec
dec
bound
add
cmc
(bad)
sti
test
sbb
dec
cmp
adc
mov
and
mov
lea
jp
mov
jne
hlt
sbb
jno
fsub
pusha
loopne
mov
std
pushf
mov
arpl
push
daa
iret
mov
sbb
mov
cmp
mov
mov
xor
push
mov
sbb
inc
sti
add
dec
mov
push
mov
sti
je
and
inc
pop
inc
dec
rcl
jmp
mov
pop
lock
les
imul
cmp
jno
add
sbb
mov
pop
mov
mov
add
or
add
fdiv
test
test
aas
xchg
scas
xchg
jbe
xchg
cmp
add
xor
push
imul
(bad)
xchg
and
cwde
adc
(bad)
xchg
adc
movs
das
(bad)
mov
push
dec
push
sti
mov
aaa
aas
pop
push
xor
dec
jge
sbb
add
es
(bad)
sbb
cmc
int
repz
xchg
or
fld
sbb
mov
aam
push
mov
cmp
inc
retf
xor
fcom
or
icebp
ret
lods
ds
push
jne
sub
pop
or
sbb
iret
leave
push
mov
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
jo
cmp
push
dec
ja
mov
in
mov
lods
std
and
cwde
cmps
bswap
ret
cdq
push
loopne
cmp
imul
stos
jle
push
inc
mov
call
sub
cs
mov
pop
rol
xor
test
popa
mov
or
xlat
imul
dec
in
cdq
rcr
xchg
cs
call
dec
movs
mov
and
inc
call
xor
test
add
(bad)
aaa
(bad)
sub
pop
pop
adc
jmp
inc
sub
or
add
cdq
mov
in
and
mov
cdq
push
sbb
dec
hlt
inc
stos
leave
sbb
inc
daa
jmp
mov
jp
adc
push
inc
sbb
lds
movs
cmp
out
ret
jo
dec
add
dec
iret
shr
dec
iret
jmp
sub
push
test
jmp
(bad)
ins
cdq
scas
icebp
(bad)
aam
sar
adc
xor
cs
push
jb
xor
mov
dec
scas
fimul
shr
pop
mov
dec
push
fmul
test
jmp
xchg
aad
and
xchg
lahf
adc
(bad)
popa
mov
jne
jmp
and
mov
or
scas
leave
push
aad
js
xchg
rol
data16
and
sub
jmp
mov
sub
or
retf
std
sti
test
xor
mov
stc
mov
jmp
daa
dec
fucom
push
in
xor
pop
push
out
std
and
out
or
int3
pop
jl
int3
and
mov
and
xor
in
out
int3
add
sbb
mov
pop
mov
adc
in
repz
cmp
xor
sbb
outs
shl
test
aaa
add
retf
sahf
(bad)
int
or
xor
daa
dec
push
sbb
xchg
div
xor
in
inc
ins
jno
xor
(bad)
ins
jae
shl
mov
sub
cmp
in
jg
ins
sub
sbb
add
pop
add
clc
inc
cwde
xor
dec
test
dec
out
jae
xchg
ss
jns
sub
mov
mov
mov
(bad)
adc
arpl
push
imul
not
fnstsw
and
mov
and
retf
push
sbb
test
fisubr
or
in
(bad)
rol
dec
std
xchg
call
pop
and
pop
add
das
lea
sub
adc
int3
outs
daa
rcr
cmps
or
mov
jmp
clc
fmul
je
lock
cdq
enter
loopne
pop
mov
pop
outs
scas
inc
arpl
and
aad
or
dec
aaa
cmc
adc
movs
mov
inc
add
push
sti
rcr
mov
dec
push
xor
aas
in
push
out
add
fnstenv
je
lahf
addr16
pop
(bad)
and
test
pop
pop
ja
and
push
ret
mov
dec
xor
push
add
cwde
pushf
dec
dec
and
mov
popa
and
jnp
sub
add
sbb
out
(bad)
xlat
xor
aas
add
je
inc
jae
cs
add
test
neg
mov
nop
repz
pop
sub
adc
push
stos
mov
ja
push
std
cmc
pop
cmp
or
bound
dec
pop
iret
mov
ins
adc
enter
std
rcl
add
es
and
add
pop
gs
shr
jo
mov
add
ror
jne
fistp
xor
inc
jg
daa
outs
sub
movs
popa
(bad)
(bad)
fiadd
and
jl
imul
add
mul
ret
sub
jecxz
jmp
(bad)
xchg
or
xchg
sub
mov
xor
pop
and
sar
and
inc
adc
pop
xchg
pop
jge
mov
in
adc
fisttp
scas
sub
lods
dec
jmp
(bad)
(bad)
inc
mov
xor
xchg
nop
aaa
movs
in
sub
jle
popa
imul
or
sbb
sti
add
pop
ror
jecxz
scas
mov
iret
and
jg
outs
dec
(bad)
repz
(bad)
pop
retf
fadd
and
mov
xchg
div
cli
or
jno
push
nop
cld
(bad)
ficom
aas
(bad)
xor
push
inc
call
in
stos
scas
lea
pop
out
push
inc
xor
mov
adc
daa
out
outs
leave
(bad)
not
xchg
push
inc
sub
mov
mov
jge
and
xor
xchg
dec
ins
in
mov
mov
pop
and
inc
push
inc
iret
sub
jb
mov
or
or
js
outs
arpl
add
mov
mov
adc
jg
lods
inc
or
sub
in
pop
loope
xchg
mov
aam
ss
xchg
mov
movs
out
mov
call
mov
xor
div
jo
lea
ins
jg
fstp
mov
mov
sub
fdivrp
je
pop
lods
xor
mov
and
dec
or
cmc
xor
xor
nop
repnz
(bad)
mov
loope
(bad)
mov
push
pop
sbb
in
mov
sub
js
mov
push
cmp
xchg
ror
sti
sbb
retf
adc
imul
(bad)
mov
leave
jns
imul
mov
into
fcmovnbe
mul
les
je
ins
add
or
xchg
fcom
sbb
mov
mov
xchg
push
jbe
xchg
adc
push
out
mov
mov
mov
add
mul
cmc
push
call
sub
ins
cmps
inc
jmp
test
add
(bad)
xor
shl
(bad)
xchg
lds
or
sub
into
daa
retf
repz
mov
add
adc
repz
dec
loopne
test
mov
cdq
shr
stos
xchg
or
cs
dec
cmp
mov
jne
xchg
push
cli
and
xor
and
loop
mov
scas
out
mov
mov
and
loop
mov
push
or
push
icebp
jecxz
sti
push
popf
xchg
xchg
mov
cmc
lds
mov
call
add
es
or
cs
add
test
jns
dec
(bad)
int3
repz
lea
pop
xor
(bad)
sbb
es
std
test
aam
hlt
jns
fdivr
dec
je
cmp
pop
jecxz
jns
and
cmp
ficom
aaa
or
rcpps
ins
add
test
xchg
push
pushw
cmp
lds
add
inc
dec
nop
adc
push
add
clc
loope
repnz
fsubr
outs
pushf
and
cmp
adc
push
repnz
adc
popa
push
jmp
mov
pop
jo
mov
pushf
mov
scas
xor
lods
inc
xlat
sub
popa
mov
not
test
fnstsw
jmp
shr
xor
xor
mov
popf
add
sar
hlt
mov
(bad)
int3
dec
xchg
dec
cmp
push
pop
dec
fabs
lods
push
sbb
push
daa
mov
sbb
call
jecxz
(bad)
and
gs
std
sbb
pop
pop
icebp
add
sbb
fnsave
or
rol
fldenv
sub
xchg
mov
rcr
ss
and
in
clc
xchg
dec
sbb
or
scas
scas
popa
jg
push
lds
jge
imul
jmp
pushf
out
and
adc
das
jmp
cmp
jmp
cmp
lds
push
clc
shr
push
jo
nop
in
mul
dec
ds
stc
xchg
push
dec
std
addr16
jne
jb
and
push
(bad)
inc
ins
cmps
mov
inc
pop
sbb
sbb
mov
jp
loop
add
loop
aad
sub
jmp
mov
(bad)
inc
cmps
dec
test
stc
xchg
shl
out
dec
push
push
inc
adc
xchg
clc
pop
or
stos
out
mov
movs
ret
push
xchg
pop
pop
push
lea
(bad)
jno
test
jecxz
jae
and
cdq
xor
adc
int3
lea
in
retf
stos
faddp
push
xor
fidivr
cmps
cwde
cmp
out
shl
scas
aam
inc
call
shl
jmp
jg
mov
loop
in
xchg
fadd
mov
or
dec
push
aad
cmp
mov
call
mov
std
bound
push
jno
xchg
dec
jmp
push
and
gs
loope
xchg
mov
fnstcw
je
es
mov
fild
jbe
jb
add
lods
fisttp
in
ins
arpl
jmp
mov
mov
in
fs
lahf
pop
js
push
xchg
xor
in
clc
icebp
mov
cmp
call
cmp
sub
and
mov
ins
lahf
mov
dec
(bad)
call
add
test
pop
mov
sbb
mov
sub
cmp
addr16
jmp
inc
das
cld
sahf
mov
jmp
mov
jmp
lods
sar
xor
arpl
ret
and
cmp
sub
sbb
dec
fisttp
add
lahf
adc
jg
dec
retf
sbb
loope
xor
cmp
cld
test
xor
add
test
sub
(bad)
out
call
cmps
cdq
lods
sub
(bad)
xor
pop
push
sbb
cdq
les
mov
pushf
stos
xchg
mov
mov
jnp
xchg
fist
mov
cmps
cmps
add
call
gs
stc
les
dec
jl
loope
cmp
mov
mov
mov
xlat
scas
ins
mov
and
dec
adc
(bad)
aad
sar
adc
and
xor
stos
push
push
lds
call
and
mov
jnp
lods
mov
ffree
jno
mov
sub
and
iret
sub
sbb
or
fild
mov
out
xor
cmp
xor
cmps
add
ins
add
mov
das
je
es
leave
loope
mov
mov
cld
and
cmp
sub
(bad)
mov
mov
xor
mov
mov
and
mov
(bad)
pop
xor
inc
dec
aaa
scas
imul
stos
dec
movs
cmps
jno
fwait
xchg
arpl
jmp
add
std
jo
dec
jp
pop
aad
inc
add
out
(bad)
(bad)
xchg
mov
or
hlt
ret
movs
ficom
les
cmp
repnz
add
sub
sahf
cli
adc
jle
mul
out
iret
mov
or
push
fs
je
(bad)
jp
outs
aas
out
pushf
shl
js
les
jmp
lock
add
sub
gs
jmp
shl
mov
and
stos
mov
pop
inc
xor
jp
leave
xor
mov
mov
inc
adc
lea
outs
inc
lds
jo
ror
add
frstor
gs
pushf
push
(bad)
out
mov
popa
or
ins
xor
mov
cmp
jecxz
jb
stos
xchg
arpl
push
gs
mov
xor
xchg
loopne
xor
outs
out
in
add
test
ins
jo
sbb
out
jecxz
jge
jne
add
sbb
fwait
mov
paddusb
test
(bad)
or
xor
mov
inc
mov
loope
mov
dec
ret
ins
ror
bound
fwait
sbb
pop
mov
pop
xor
cmp
leave
xlat
xor
xchg
stos
and
push
fidivr
dec
ja
jmp
or
sbb
pop
pop
jo
scas
or
fld
int3
or
or
gs
ror
add
push
jp
pop
inc
xchg
cs
fwait
ja
push
push
cmp
scas
sbb
jg
jg
stc
leave
bnd
ins
or
test
ja
(bad)
jg
imul
jns
neg
or
push
jl
or
lods
xchg
inc
aas
inc
push
dec
leave
das
jg
dec
test
test
push
push
daa
xchg
and
clc
push
jmp
mov
inc
push
mov
mov
or
xchg
cmp
cmp
sub
push
fsub
addr16
scas
jle
inc
push
xchg
mov
pop
dec
adc
push
xor
jae
or
(bad)
das
sub
xchg
sub
(bad)
mov
aaa
imul
shl
(bad)
or
jo
aaa
arpl
jge
test
jo
or
adc
cmc
pop
fst
push
jo
or
xchg
ja
fs
fmul
mov
cdq
bsr
je
jg
pop
imul
pop
out
cmp
pop
hlt
dec
fistp
(bad)
pushf
mov
dec
cmp
inc
call
xchg
ins
pop
and
fcmovne
stc
je
retf
(bad)
and
add
stc
or
imul
mov
daa
cmc
xchg
ud2
inc
adc
lea
mov
ins
mov
xor
push
out
push
cmp
xor
mov
lar
adc
mov
sar
jbe
xchg
iret
or
inc
outs
inc
bnd
xor
cli
mov
repz
push
in
(bad)
xor
cmps
mov
and
mov
shl
inc
inc
jno
and
mov
xchg
scas
xchg
out
in
mov
cmp
sbb
lea
mov
int
or
nop
jno
imul
push
in
fsqrt
aam
dec
addr16
loopne
pop
mov
push
mov
(bad)
sbb
addr16
cmc
inc
push
les
fidiv
sbb
cmp
dec
cmp
in
in
and
(bad)
in
sub
fsubr
mov
mov
xchg
cmps
scas
retf
mov
xor
inc
cmp
dec
jp
mov
pop
pop
mov
or
test
jle
ret
sbb
cmp
rol
inc
jl
test
hlt
add
mov
and
lahf
mov
(bad)
push
sub
and
add
hlt
scas
jl
push
sbb
sbb
retf
mov
popa
test
stos
(bad)
cmps
repz
lods
push
lds
in
js
add
or
aas
mov
(bad)
sbb
das
fs
fs
(bad)
xor
ins
inc
xor
add
add
pop
dec
pop
jmp
push
pop
sbb
inc
push
aam
jmp
test
cmp
loopne
fucomi
iret
jp
inc
movs
mov
mov
mov
test
xor
jl
jnp
adc
sti
popf
call
test
mov
pop
lock
and
xchg
scas
push
outs
rcr
mov
lahf
mov
and
xor
es
fidiv
imul
jne
inc
cli
int
retf
xor
in
xor
je
repz
cmp
and
jbe
inc
aaa
xor
loope
pushf
jae
add
mov
sbb
sbb
mov
pop
xchg
retf
nop
stos
aad
in
imul
into
inc
adc
les
cmp
test
(bad)
xchg
inc
jne
sbb
jmp
repnz
inc
ins
test
fs
push
mov
cli
or
pop
cmp
inc
outs
(bad)
mov
adc
and
stc
loope
jmp
jl
test
xor
xchg
xchg
push
dec
aas
loope
gs
ror
outs
dec
jmp
inc
mov
cmp
sub
add
int
in
xor
bound
call
call
enter
sbb
xchg
gs
add
fbld
into
or
ret
test
nop
or
mov
or
pop
lods
or
test
(bad)
mul
ja
adc
int3
je
and
jp
dec
push
retf
call
movs
jbe
and
push
mov
or
xor
dec
mov
mov
sub
fisttp
inc
lahf
push
jne
mov
faddp
xchg
and
adc
dec
in
jmp
movs
push
push
mov
or
lock
ret
ret
xchg
jno
fisubr
add
cs
aad
cmp
add
and
jle
pop
arpl
hlt
mov
sub
cmp
int3
dec
mov
sar
jle
shl
mov
sbb
pushf
push
sbb
mov
jmp
pusha
inc
in
in
jb
cli
call
jge
xchg
lods
sahf
out
out
retf
ins
(bad)
scas
mov
mov
mov
lock
mov
cmp
dec
dec
dec
pop
sub
test
inc
cmps
ins
out
mov
jnp
adc
hlt
push
jmp
jle
lahf
fcmovb
mov
and
popa
push
jp
(bad)
jle
bound
mov
loop
shl
dec
mov
leave
push
(bad)
in
sbb
pop
or
dec
mov
rol
jmp
pop
inc
push
xor
das
dec
xor
and
bound
add
sub
xchg
popa
add
sbb
sahf
repnz
inc
lea
popa
nop
push
clc
xchg
stc
jnp
and
jmp
bnd
inc
addr16
mov
je
(bad)
es
movs
push
adc
add
xchg
jo
out
cmps
fwait
aas
in
mov
test
lods
xchg
or
cmps
(bad)
mov
stos
cmps
xchg
mov
stc
outs
sar
repz
mov
mov
dec
lock
add
push
add
jne
adc
fcomp
inc
xor
rcr
pop
std
mov
jge
push
mov
mov
je
shl
(bad)
ror
imul
repnz
push
(bad)
dec
arpl
fistp
xchg
cmp
mov
out
sbb
div
iret
fst
pusha
mov
cmc
or
xchg
xchg
leave
inc
not
ins
jne
movs
lods
gs
aam
fsub
fldenv
or
loope
add
outs
adc
cmp
repz
jbe
dec
xchg
jno
shr
pop
xor
loop
or
(bad)
repz
or
mov
mov
ja
and
and
je
jbe
xchg
(bad)
out
mov
cli
mov
fcom
inc
clc
jmp
out
iret
je
jge
xchg
mov
pusha
(bad)
adc
popa
stc
mov
daa
fscale
loop
pop
jae
aad
sub
xor
in
(bad)
test
call
jmp
push
lea
jge
mov
(bad)
cmovs
xchg
sbb
push
dec
outs
mov
mov
cmp
js
aam
pop
xchg
mov
mov
mov
mov
mov
repnz
repnz
nop
fbstp
outs
stc
push
jmp
xor
je
mul
not
fwait
addr16
jne
sub
dec
enter
gs
fstp
popa
and
inc
iret
test
(bad)
fnsave
iret
enter
dec
sbb
out
ins
or
jnp
jecxz
cdq
xchg
mov
aam
inc
faddp
mov
test
dec
adc
mov
int
mov
mov
or
pop
jmp
xchg
(bad)
iret
(bad)
or
push
jecxz
out
aam
sub
ja
xchg
jle
bound
lods
in
inc
push
xor
mov
pop
jo
les
add
scas
mov
or
clc
adc
int3
pop
retf
sar
add
(bad)
mov
je
test
in
std
pop
dec
test
in
jo
adc
loop
mov
inc
in
stc
mov
inc
fisubr
push
icebp
nop
in
stos
mov
inc
fs
cs
out
sub
cwde
add
jne
sub
adc
repnz
scas
jb
rcl
pop
or
arpl
sub
mov
fbld
cmp
fsubr
int3
ror
lds
cld
xchg
daa
das
loopne
mov
fdiv
stos
(bad)
xor
pop
movs
leave
adc
mov
xor
enter
das
out
push
sub
stos
push
sub
sub
sub
mov
sbb
mov
sbb
adc
pop
(bad)
in
test
add
inc
imul
fbld
mov
ffree
jb
mov
fs
jae
(bad)
cmp
cmp
(bad)
mov
aaa
sub
xchg
(bad)
in
push
dec
push
aaa
in
pop
mov
mov
shl
or
push
daa
dec
mov
add
out
mov
loope
cmp
fisub
inc
xchg
xchg
mov
fs
stc
(bad)
sub
das
out
xor
inc
not
jg
xchg
sbb
mov
jo
adc
fsubr
sbb
stos
add
ins
mov
pop
fimul
mov
pop
mov
(bad)
ret
and
xor
stos
jno
push
mov
stc
adc
jnp
or
fdiv
jp
fnstcw
repnz
adc
test
call
int
lods
pop
sub
xchg
pop
xor
repz
jl
xchg
dec
jp
out
sub
or
stc
inc
rcr
add
scas
lock
inc
(bad)
mov
leave
xor
ja
xchg
push
fistp
bound
and
sub
jae
test
sub
test
inc
mov
xlat
(bad)
xchg
sub
bound
movs
pop
xor
xlat
sbb
cmp
push
push
rcl
jo
mov
out
dec
fild
mov
loopne
xlat
(bad)
sti
add
dec
push
ret
out
iret
and
ins
test
add
cmps
arpl
or
cld
out
and
retf
enter
pop
fscale
fild
inc
push
cmp
push
pop
je
movs
pop
pushf
int3
add
inc
jg
bnd
and
jg
(bad)
xchg
ss
add
inc
ins
xchg
sub
push
lahf
add
mov
fimul
add
inc
adc
aas
mov
lods
outs
fsubr
bound
lock
out
jne
push
inc
repnz
arpl
mov
push
std
dec
cmpxchg
inc
mov
in
xlat
cmovnp
jb
hlt
sub
icebp
cmp
out
mov
inc
adc
mov
mov
icebp
push
adc
sub
push
dec
mov
sbb
jg
push
adc
or
pop
mov
ss
mov
(bad)
push
cmp
add
add
dec
in
inc
mov
mov
xor
ret
ins
(bad)
pop
or
js
add
xor
mov
dec
popf
push
sub
(bad)
xor
cmp
mov
out
dec
cwde
inc
inc
inc
mov
std
out
adc
cmp
sub
fisttp
test
add
pop
mov
xor
jecxz
fwait
lods
mov
lahf
rcl
(bad)
lods
or
rol
adc
pop
xchg
inc
outs
fs
or
xchg
add
mov
enter
loope
loope
je
mov
push
and
loop
call
push
jg
jecxz
test
fadd
jbe
into
pop
jbe
jle
fsub
or
cmps
cmp
mov
push
call
inc
or
ss
sub
jl
aas
jb
mov
popf
jae
loopne
int
pop
pop
pop
inc
pop
bound
or
cmps
pushf
sub
mov
repnz
cdq
jmp
jno
and
(bad)
pop
add
jp
sbb
and
jp
popa
add
push
mov
call
lock
int
hlt
inc
xchg
inc
pop
int3
cld
in
push
das
mov
jmp
jb
adc
jp
mov
push
adc
cmp
xor
xor
jo
(bad)
retf
mov
pop
pop
jmp
sub
call
into
add
jecxz
fwait
addr16
lods
(bad)
clc
out
pusha
sbb
outs
iret
fwait
stos
jmp
fst
js
arpl
(bad)
mov
mov
ficom
fld
inc
out
out
rol
push
je
or
xchg
push
mov
mov
mov
cdq
xor
xor
(bad)
imul
lock
out
sbb
push
(bad)
gs
xchg
(bad)
or
jo
jno
aas
ret
push
cld
push
jp
cmps
push
pop
imul
and
lods
jle
adc
stos
(bad)
push
aad
or
push
repz
addr16
and
sbb
sub
mov
outs
or
add
(bad)
jns
lods
arpl
test
jmp
pushf
shl
mov
ds
lods
push
arpl
and
out
pop
in
outs
lock
add
sub
jbe
cmp
xor
out
and
and
pop
mov
out
cmp
adc
iret
push
push
call
xchg
pop
push
push
jecxz
pushf
jmp
enter
adc
push
cmps
and
pop
adc
adc
or
(bad)
retf
shr
inc
stos
(bad)
icebp
dec
and
cld
emms
cmp
stc
or
out
xor
mov
fst
or
pop
adc
mov
jp
dec
ss
fisubr
add
rol
popf
retf
xor
not
repz
es
inc
(bad)
int3
fisttp
adc
nop
(bad)
iret
leave
jo
iret
add
sub
das
adc
or
aaa
cli
add
or
sbb
scas
pop
shl
jne
neg
mov
sbb
in
inc
popf
dec
les
into
stc
in
cdq
and
sar
or
repz
cdq
jne
(bad)
pop
inc
outs
mov
sbb
retf
ja
cmc
xor
sub
mov
fild
push
stos
xor
xchg
outs
add
cmc
fdivp
xchg
aam
lahf
jmp
xlat
push
jae
cmps
pop
scas
stc
nop
retf
push
scas
cmp
mov
out
jle
or
pop
mov
scas
retf
push
sub
(bad)
add
in
mov
inc
dec
jne
push
sub
sub
fucomip
push
pop
mov
xchg
ss
jno
(bad)
xor
daa
and
cwde
mov
mov
jle
pop
add
lock
sahf
es
fs
sbb
dec
add
mov
mov
cwde
add
push
int3
mov
test
and
pop
mov
jne
mov
aad
pop
sub
jecxz
loope
xchg
enter
ins
pop
arpl
js
movs
and
sti
jp
in
ss
and
adc
retf
pushf
push
pop
add
mov
arpl
outs
and
not
bound
in
clc
(bad)
xor
jecxz
aam
xchg
arpl
add
into
adc
cdq
imul
fs
xor
pop
push
mov
or
push
cmp
inc
jp
aad
call
mov
arpl
inc
adc
push
fisubr
push
add
clc
clc
iret
inc
daa
sbb
cwde
test
cmps
inc
outs
stc
neg
jmp
rep
mov
ins
mov
sbb
add
imul
pop
retf
(bad)
push
sbb
idiv
mov
add
dec
mov
cld
out
adc
cmp
retf
jns
stos
mov
retf
push
jnp
dec
dec
imul
hlt
inc
mov
mov
test
ds
leave
cmp
stos
sbb
xlat
xor
les
jnp
adc
mov
xchg
sub
adc
xchg
push
mov
retf
sbb
mov
and
mov
or
and
pusha
shl
mov
xlat
into
jmp
scas
repz
neg
cmc
data16
icebp
dec
repnz
push
sbb
pop
sbb
fcmovbe
ds
inc
stos
inc
xchg
xor
xchg
repz
ja
loopne
call
les
mov
xchg
adc
inc
outs
and
sahf
xchg
mov
aas
and
sbb
sbb
adc
xor
test
sub
inc
jecxz
jb
movs
or
cmp
cmp
or
ficomp
add
cli
and
ret
push
xchg
(bad)
fist
daa
inc
fld
xor
aas
jne
out
xchg
bound
repnz
pop
push
js
sbb
mov
enter
xor
ficomp
sbb
jae
push
xchg
mov
nop
(bad)
push
call
and
add
mov
xchg
cmp
adc
dec
xchg
jno
push
push
pop
dec
and
lds
dec
aam
(bad)
cs
std
xor
jae
push
dec
push
pop
cmp
mov
jecxz
adc
call
pop
es
and
test
cmps
and
scas
dec
xchg
xor
outs
xchg
cdq
inc
push
xor
into
adc
push
adc
fs
enter
mov
or
cs
add
jle
add
push
pop
clc
clc
or
dec
or
rol
mov
addr16
jmp
test
ja
fidivr
adc
mov
mov
push
scas
scas
iret
test
rol
mov
push
(bad)
clc
mov
jle
mov
imul
fmul
leave
cwde
(bad)
ret
inc
cmc
in
les
xchg
shl
dec
fmul
push
pop
pop
shr
inc
sub
aaa
dec
into
ss
mov
sbb
gs
mov
pop
or
add
loope
cmp
imul
sbb
push
imul
cli
int
stos
sbb
pop
repnz
xchg
dec
push
jge
aaa
jecxz
sbb
jle
sbb
shl
cmp
aaa
mov
adc
inc
int3
in
push
mov
mov
adc
mov
in
(bad)
mov
leave
add
dec
pop
(bad)
mov
out
xor
int3
ins
inc
fmul
xchg
sbb
arpl
out
mov
rcr
inc
call
data16
cmp
rol
adc
mov
loop
inc
add
ins
div
xor
test
(bad)
fiadd
pop
ss
fldenv
xor
pop
sbb
dec
jp
sbb
dec
imul
or
lods
shl
jl
sqrtps
fisubr
inc
movs
and
rcl
sbb
(bad)
int3
dec
and
clc
dec
pop
sub
add
xor
inc
ja
jo
inc
mov
jnp
dec
push
inc
push
xchg
push
scas
inc
xlat
cmp
out
push
fistp
or
(bad)
fcomip
adc
gs
bnd
xlat
fnstsw
leave
popa
mov
outs
and
mov
mov
int3
ja
push
mov
pop
icebp
iret
fldenv
push
out
in
mov
mov
(bad)
jecxz
(bad)
or
push
(bad)
mov
inc
add
mov
lods
jb
xor
mov
(bad)
scas
adc
dec
les
sub
fcomp
dec
iret
fisubr
mov
adc
cli
mov
jge
push
sub
jns
repnz
in
imul
ret
outs
jecxz
inc
adc
test
sub
fucomp
cdq
mov
aaa
mov
rol
push
pop
xchg
je
pop
push
push
jmpw
cmps
sub
cld
xlat
cmp
(bad)
ret
ror
call
bnd
push
retf
cs
or
inc
jbe
jmp
mov
push
aam
jns
pop
sbb
jnp
mov
in
lea
ins
add
push
inc
push
retf
push
mov
jge
sub
sbb
fbstp
xchg
pop
jne
nop
jae
sub
mov
cmps
repnz
inc
mov
loope
enter
jl
and
shl
xor
nop
push
pop
(bad)
jle
jge
out
pop
or
mov
std
mov
dec
sbb
shr
stos
daa
xor
xor
data16
stos
das
xchg
pop
enter
jg
ret
add
cmp
mov
add
xchg
push
stc
adc
outs
adc
adc
aaa
mov
movs
and
retf
sar
loop
popf
retf
inc
aaa
lock
cli
cwde
sub
add
inc
fwait
and
sahf
inc
xchg
sbb
movs
push
push
add
mov
les
inc
pop
push
add
ss
jg
nop
test
loopne
or
ret
jle
in
and
cmp
or
pusha
(bad)
push
sub
adc
es
cmp
and
xlat
ret
adc
lods
sbb
adc
mov
pop
test
mov
inc
cdq
add
mov
sub
jno
repnz
inc
shr
jg
and
push
in
push
jmp
div
fnstenv
and
fcom
sub
xchg
fs
aam
je
out
popf
jb
mov
push
dec
jp
mov
fbld
fs
(bad)
mov
aam
mov
inc
in
cmp
jmp
pop
jg
cmp
js
imul
add
fidiv
pop
outs
dec
xor
jae
sbb
mov
xor
ss
sub
and
sbb
clc
push
rcr
adc
push
(bad)
ins
outs
cwde
(bad)
(bad)
(bad)
sti
(bad)
mov
mov
shl
and
test
and
and
cmps
push
retf
dec
daa
dec
xchg
out
gs
add
xchg
pop
adc
mov
nop
push
retf
dec
mov
xor
sbb
int3
sbb
call
das
cmp
popf
mov
adc
and
pop
or
pop
dec
addr16
adc
push
mov
cwde
arpl
scas
lea
push
or
outs
lea
sub
sti
or
xor
loopne
call
adc
addr16
mov
cmp
xor
push
cmp
mov
leave
cmp
sahf
adc
push
ror
push
xor
cmc
xchg
stos
xchg
not
repz
rcr
mov
iret
jne
rcl
jb
pusha
sti
mov
out
dec
jle
in
pop
(bad)
sti
mov
jg
jne
pop
fadd
xchg
out
and
fnstsw
call
jbe
cdq
fwait
or
dec
push
daa
jae
adc
(bad)
in
adc
call
pop
and
shl
ret
clc
inc
and
popa
jns
adc
xchg
pop
std
adc
adc
cs
xor
dec
sub
push
data16
scas
xlat
mov
add
inc
jecxz
dec
inc
cdq
push
js
lods
(bad)
bound
mov
dec
mov
aam
js
pop
inc
test
les
ja
es
(bad)
xor
add
mov
aad
cmp
mov
dec
add
sbb
mov
or
pusha
ret
pop
fdivr
pop
gs
mov
loopne
ins
aam
aas
and
or
mov
addr16
shr
fnstenv
xadd
rol
inc
stos
pop
mov
sti
movs
cmp
adc
cli
mov
stos
lahf
mov
in
shr
adc
iret
cmc
rol
outs
daa
cmps
icebp
push
jmp
dec
popf
test
jno
jp
pop
je
outs
push
lea
push
xlat
push
mov
cli
xchg
pop
push
mov
xchg
mov
stc
sub
xlat
aas
(bad)
push
call
mov
ins
mov
mov
jmp
je
pop
jnp
fcomp
imul
aas
or
test
sub
in
add
add
das
adc
push
mov
daa
push
std
dec
arpl
push
stos
mov
sub
stos
je
int
lds
or
push
stos
not
add
adc
inc
js
out
pop
test
jns
shl
cmp
push
jecxz
push
mov
rcl
bound
pop
out
nop
shl
jle
xchg
(bad)
xlat
dec
push
aad
test
jo
test
nop
dec
(bad)
fsubp
and
or
pop
fimul
inc
cli
pop
icebp
es
ss
push
aad
push
push
mov
dec
adc
ins
sub
test
es
cdq
in
jno
outs
std
inc
cmp
ror
rcr
mov
sbb
jo
sti
popw
inc
adc
or
outs
push
jbe
es
pop
jne
stos
sti
retf
stos
in
xchg
arpl
(bad)
mov
call
test
jns
cmp
lods
sbb
aam
lods
pop
inc
retf
lds
pop
(bad)
push
je
mov
in
scas
popf
retf
jmp
jg
adc
outs
cmp
xchg
das
sub
xchg
test
std
push
ja
repz
and
lock
jg
shl
mov
sub
test
push
ss
in
das
frstor
test
mov
mov
add
cmc
in
ja
jge
add
std
das
pop
mov
inc
leave
inc
and
mov
std
out
and
test
fcom
adc
aas
mov
js
pop
mov
xchg
adc
add
data16
movs
fisttp
cwde
aad
xor
in
adc
xchg
xlat
sti
in
out
add
fiadd
cmp
sub
add
ret
and
cmp
ror
call
pop
arpl
cmc
jnp
jp
jl
inc
mov
(bad)
out
popf
sbb
mov
inc
lods
dec
in
adc
fs
in
xchg
cmc
sub
ins
imul
inc
cmc
aad
cdq
pop
rcl
rol
das
sub
push
jg
scas
shr
stos
test
mov
shl
xor
cwde
test
mov
pop
push
inc
lock
(bad)
cmp
cmp
mov
ret
pop
cli
push
push
jne
(bad)
pushf
fild
bound
cmp
cmc
loopne
adc
dec
adc
adc
jmp
sub
mov
jne
aam
shl
out
ins
mov
push
fs
push
inc
sahf
and
mov
mov
mov
rcr
or
dec
add
push
sar
imul
xor
mov
(bad)
lahf
dec
sub
ja
xchg
and
and
jns
cdq
aam
and
dec
ds
test
outs
sub
mov
cmps
add
add
lds
(bad)
pop
(bad)
fwait
adc
xchg
cmp
push
jg
rol
loop
es
add
push
inc
imul
stos
in
mov
stc
aas
cmp
pop
jecxz
jne
cmp
sbb
je
mov
xor
adc
adc
in
mov
pushf
cmp
cmp
pop
sub
cld
adc
xor
cmp
sbb
cmps
(bad)
retf
add
xchg
jno
push
adc
push
mov
mov
aas
mov
fnsetpm(287
call
mov
mov
ret
push
mov
pop
mov
outs
inc
sub
and
cmp
dec
in
ret
sbb
icebp
cdq
sar
and
in
(bad)
jne
popa
pop
jp
inc
cmp
pop
int
bswap
add
xchg
pop
jecxz
and
inc
xor
test
cmps
add
sub
outs
test
mov
sub
bound
jge
fisubr
scas
xchg
pusha
sahf
push
dec
int3
push
retf
sbb
sti
dec
cwde
xor
out
mov
xchg
add
aas
push
loopne
jp
imul
cmp
adc
(bad)
out
iret
ja
sbb
jno
fistp
aad
daa
push
pushf
rcr
xor
cmc
fnstcw
fcmove
dec
or
pop
add
into
mov
push
pop
bound
sbb
sbb
sbb
mov
movs
shl
das
inc
std
test
popa
mov
fwait
mov
out
stos
jo
add
mov
push
(bad)
pop
and
into
and
cwde
adc
ss
jecxz
ficomp
movs
(bad)
fcom
nop
dec
and
mov
lds
mov
cmp
push
(bad)
sahf
pop
pop
mov
jnp
jnp
ret
test
sbb
mov
test
sbb
pop
xor
mov
mov
dec
jae
xchg
into
dec
sbb
sub
lods
test
js
mov
in
sbb
jo
ins
push
ret
jne
enter
xor
sub
lods
adc
dec
or
das
push
or
test
pop
in
imul
bound
sub
mov
push
xchg
fadd
test
inc
scas
popf
lahf
mov
outs
xor
enter
mov
pop
in
aad
(bad)
jmp
jno
pop
xor
or
(bad)
ret
sub
mov
iret
addr16
or
stc
xchg
jbe
mov
div
pop
sbb
jge
(bad)
fucomi
scas
imul
sar
call
movs
dec
mov
sub
mov
fbstp
or
cmp
pop
sub
aas
int3
and
and
enter
mov
and
adc
mov
add
addr16
xor
push
dec
xchg
and
sbb
retf
mov
cwde
pop
mov
lahf
mov
mov
adc
les
inc
mov
mov
mov
adc
cmp
jp
stc
das
jecxz
aad
sbb
nop
test
cmp
inc
or
jg
std
mov
into
mov
mov
pusha
pop
sub
add
push
pop
mov
(bad)
jno
inc
sub
imul
push
mov
test
sbb
xor
imul
outs
add
cli
int3
jns
clc
in
sub
aad
jmp
jle
lock
sbb
cmp
cs
daa
and
cdq
ja
in
repnz
cmp
or
ret
ret
inc
retf
std
mov
ss
sti
retf
pop
xchg
inc
outs
or
in
cmp
imul
sub
nop
daa
mov
push
xchg
adc
daa
fiadd
push
xchg
push
push
add
rol
stos
pop
dec
inc
mov
add
ja
sahf
pushf
test
pop
(bad)
inc
sub
adc
ss
pop
out
stc
fld
mov
push
jb
out
pop
add
or
sub
push
xor
xor
movs
push
xchg
mov
and
and
inc
cmp
jmp
cmp
xor
dec
xchg
push
arpl
sub
rcl
repnz
int
adc
test
xor
or
push
test
jle
mov
fcom
mov
(bad)
(bad)
mov
arpl
mov
mov
mov
xchg
adc
xor
aam
repz
shr
or
mov
sub
jmp
cmp
(bad)
xchg
sahf
call
cmp
fwait
push
ins
mov
test
aad
jmp
sub
push
iret
xor
iret
add
inc
arpl
call
movs
sahf
sub
add
and
jo
aam
(bad)
jnp
loope
jns
fnstcw
ins
cmp
test
mov
test
or
xlat
(bad)
mov
and
clc
push
inc
arpl
movs
es
in
(bad)
mov
xchg
push
mov
mov
lock
sbb
sub
add
pop
int3
sub
js
cmp
sub
adc
stc
addr16
jge
cmp
and
mov
fdiv
out
out
loope
out
in
(bad)
jmp
dec
fcmovbe
mov
out
mov
fdivrp
iret
xor
mov
jnp
je
(bad)
jne
xlat
dec
repz
(bad)
fdiv
imul
out
mov
test
or
dec
mov
in
sti
xor
(bad)
aas
fist
(bad)
sbb
dec
mov
add
jge
into
inc
test
mov
mov
(bad)
retf
inc
add
push
jge
mov
inc
mov
mov
shl
call
cmps
pop
fnstsw
push
stos
test
xchg
lea
adc
ja
push
pop
inc
mov
or
xchg
cmp
ret
inc
addr16
(bad)
repz
and
add
ror
mov
icebp
vxorps
mov
test
push
mov
iret
idiv
inc
dec
pop
push
jo
sbb
mov
stos
(bad)
push
adc
sub
push
out
(bad)
or
sbb
xchg
pop
test
pushf
mov
in
jns
das
hlt
std
les
sub
in
mov
cmc
ds
mov
into
sbb
dec
push
mov
push
sub
or
mov
push
mov
sbb
push
inc
out
cs
xor
inc
jne
stos
jns
mov
iret
dec
call
cmp
cmp
jmp
xor
loope
lahf
in
or
int
aam
int3
dec
jnp
mov
sub
pusha
(bad)
(bad)
dec
daa
dec
sbb
mov
imul
jecxz
arpl
lods
sbb
pop
adc
(bad)
bound
lods
call
lock
inc
pop
mov
popa
adc
iret
iret
test
push
fwait
cmp
or
jle
and
sbb
bound
inc
mov
dec
out
lds
mov
push
jbe
add
jp
sbb
dec
mov
daa
enter
shr
push
inc
mov
or
jp
push
test
pusha
cmp
adc
leave
dec
test
inc
cwde
mov
push
scas
pop
mov
push
xchg
clc
mov
dec
jl
in
dec
sub
aas
push
add
lods
and
push
mov
cmp
inc
les
adc
mov
xchg
lds
int
repz
fisub
int3
retf
daa
aam
shr
cdq
add
les
(bad)
jge
mov
xchg
icebp
aam
cmp
push
adc
test
pop
push
test
movs
rcr
fld
xor
adc
mov
mov
dec
pushf
sbb
jmp
scas
ror
xchg
or
mov
jns
ins
nop
(bad)
sti
(bad)
out
repnz
fsub
repz
jmp
push
push
idiv
rcr
rcr
push
out
add
pop
outs
mov
icebp
cmp
or
out
scas
add
adc
(bad)
int
gs
lahf
push
sahf
mov
div
mov
jle
in
mov
and
adc
stos
jp
out
jecxz
or
js
into
sub
loopne
xor
fisttp
add
sub
fisttp
add
into
cmp
(bad)
and
push
dec
or
popa
inc
ret
cmc
js
rol
fstp
pushf
jle
push
(bad)
push
call
int3
and
fldcw
mov
cld
jp
imul
pop
push
fldenv
clc
mov
clc
mov
mov
and
fwait
push
sub
push
fiadd
ins
mov
test
mov
push
test
dec
fadd
xchg
sub
adc
or
or
call
xor
cmp
push
mov
aas
stc
pop
xor
sbb
es
pop
pusha
mov
aad
and
pop
call
jns
xor
lds
in
dec
mov
jo
dec
pop
mov
xor
inc
rcl
movs
inc
fwait
sbb
push
mov
ret
mov
adc
bound
push
xor
aad
icebp
int3
and
fsub
rcr
xchg
in
dec
mov
xchg
sbb
pusha
jnp
out
repnz
mov
hlt
in
in
sub
or
sub
stos
adc
les
fwait
jns
imul
vpslld
xor
xor
retf
mov
push
lods
and
jmp
xor
popf
push
data16
retf
aam
sbb
(bad)
ss
mov
pop
and
call
pop
stos
xor
pop
(bad)
xchg
repz
outs
daa
mov
mov
add
(bad)
daa
mov
inc
stos
ficomp
xchg
arpl
icebp
dec
jbe
mov
fisttp
pop
(bad)
nop
addr16
xor
dec
inc
add
outs
push
mov
lahf
pop
inc
mov
xchg
in
push
and
xchg
push
fdiv
and
inc
xor
and
nop
movs
pushf
fld
std
or
push
shr
retf
mov
mov
cmp
test
jbe
push
test
arpl
call
jb
hlt
rol
cmp
jae
call
jp
bound
es
aaa
xchg
test
enter
out
push
sar
scas
or
cmp
in
je
out
cdq
fbld
jle
jno
push
mov
ss
je
das
push
mov
and
jle
ret
cmps
xchg
push
mov
inc
push
sub
adc
sti
cs
ret
jmp
cmp
sbb
ret
add
sti
jecxz
or
mov
sub
fmul
icebp
in
test
sbb
mov
das
test
sub
cmp
xchg
imul
enter
mov
out
repz
aam
or
into
sub
or
sub
call
repz
add
ret
mov
sbb
out
mov
lds
dec
push
xlat
fwait
mov
mov
fnsave
jbe
push
adc
test
ins
push
sub
mov
mov
(bad)
loop
sub
out
fs
int
mov
loope
push
(bad)
fsubr
mov
das
ret
pop
pop
sti
enter
jno
adc
lods
xor
jae
or
jp
xlat
sbb
sbb
clc
mov
and
push
loopne
aaa
inc
outs
xchg
or
mov
xor
xchg
adc
js
or
inc
inc
adc
and
xor
push
sub
xchg
jae
xchg
clc
push
mov
daa
loopne
(bad)
push
repnz
push
push
mov
nop
fimul
and
mov
loop
repnz
dec
(bad)
es
movs
cmps
int
repnz
retf
ss
mov
(bad)
xchg
pusha
dec
icebp
push
push
inc
jb
xor
in
addr16
(bad)
sar
mov
fucom
jmp
scas
or
cmp
xchg
jmp
iret
mov
sbb
xchg
and
add
mov
sti
mov
repnz
pop
das
outs
jo
push
jns
xchg
mov
int
test
mov
dec
cdq
push
and
movs
ja
mov
data16
cwde
inc
retf
sub
pop
out
adc
and
lods
daa
cs
mov
dec
xchg
cmp
mov
pop
or
xor
movs
dec
push
shl
popa
fisubr
fdiv
frstor
cmp
sub
jmp
sub
mov
fadd
test
call
cmp
pop
pop
sar
cmp
inc
inc
sub
push
mov
adc
(bad)
dec
out
in
push
ret
sbb
retf
or
add
and
dec
adc
aas
pop
push
add
cmp
jno
sub
stc
mov
pop
pop
xor
jno
in
es
pop
sub
je
mov
cmp
pop
push
cld
retf
or
dec
adc
jmp
imul
push
scas
push
shl
dec
or
ins
sbb
dec
sbb
enter
xor
shl
jg
stos
std
xor
mov
mov
push
fld
repnz
add
out
jle
mov
push
add
popf
jle
mov
jbe
(bad)
stc
mov
pop
cmps
pop
jb
inc
or
addr16
outs
hlt
or
xor
pop
pop
jg
cmp
or
ret
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
sub
mov
jb
mov
sahf
push
leave
enter
aaa
xchg
add
add
icebp
cli
es
sti
sbb
mov
cmp
jb
adc
(bad)
sub
in
aaa
inc
jl
jle
push
mov
mov
inc
je
jae
stos
imul
fadd
cmp
dec
sbb
(bad)
or
jmp
leave
enter
and
iret
stc
stos
dec
jle
inc
xor
sar
sbb
ja
cdq
xor
stc
mov
xor
mov
inc
les
(bad)
iret
sub
in
push
dec
and
or
push
outs
(bad)
clc
out
push
push
out
mov
mov
shl
add
rol
fild
sub
xchg
cmp
pop
inc
sbb
retf
popa
mov
jg
in
dec
sbb
fidivr
retf
cmps
pop
push
test
pop
sub
cmp
aam
dec
outs
jns
add
pop
or
lods
imul
xchg
(bad)
das
ficomp
jo
popf
sti
cmp
mov
rcl
retf
pop
fsubr
cmp
outs
adc
mov
std
ja
(bad)
adc
xchg
and
enter
cmp
fnstenv
inc
jae
xchg
stos
inc
pop
jns
push
sbb
jne
mov
mov
out
cld
push
or
bound
(bad)
or
cmp
ins
xchg
arpl
cmps
pop
xchg
push
adc
cmp
mov
in
mov
cdq
int
pop
jecxz
adc
jne
fcomp
scas
cs
pop
(bad)
(bad)
jp
hlt
xchg
mov
outs
(bad)
(bad)
jae
adc
xor
(bad)
fstp
popf
add
mov
xor
sub
ret
sar
jmp
inc
aad
pusha
add
fistp
xor
shl
push
xor
sar
xchg
ds
jmp
mov
fwait
cmps
test
pop
sub
sbb
fsub
cdq
out
fild
shl
ja
retf
not
sbb
sbb
push
mov
pop
or
addr16
pop
movs
mov
lahf
sub
mov
gs
iret
lock
mov
xchg
cmp
cli
dec
fdivr
mov
inc
dec
push
xor
push
call
jle
xchg
mov
fld
ins
stos
cld
fisubr
and
and
retf
in
cmp
pop
dec
mov
std
sub
addr16
xchg
cs
imul
js
adc
clc
mov
(bad)
jmp
jmp
out
jbe
mov
int
call
xchg
lods
jo
sub
repz
pop
repz
lock
retf
sub
lds
jno
adc
lods
push
adc
sub
popa
pop
out
add
jb
push
bound
out
in
xor
bound
mov
cmc
aas
mov
mov
mov
fst
pushf
cmp
push
push
and
mov
ret
out
into
cmp
inc
jns
dec
test
mov
add
mov
xchg
sub
xor
jbe
pop
div
xchg
push
pushf
and
lods
xor
dec
adc
(bad)
stos
scas
or
dec
xchg
inc
int
das
and
int3
push
push
sub
and
pop
arpl
inc
(bad)
fidivr
mov
inc
cmp
adc
mov
add
cld
mov
pushf
loopne
movs
fdivr
jg
ins
xchg
in
popf
mov
mov
lahf
mov
fs
xchg
shl
pop
test
into
mov
jecxz
mov
icebp
jb
adc
xchg
push
xchg
rol
mov
cmc
sub
and
aam
into
sub
and
outs
mov
lods
jnp
shr
gs
jae
jl
jo
jge
push
shl
or
aam
sbb
or
sub
adc
add
inc
sahf
ds
movs
call
inc
mov
xchg
mov
rcl
fmul
pop
rol
cmps
fwait
stos
inc
(bad)
call
cmp
cmp
jle
sahf
into
sub
dec
lods
push
sahf
mov
sub
out
mov
lea
fnstcw
mov
popa
je
je
stos
outs
lahf
jmp
daa
push
adc
stos
cmp
fcom
int3
popf
or
sub
lahf
push
mov
or
dec
push
pop
iret
xor
out
and
(bad)
enter
fcomi
adc
das
pusha
cmp
repz
fs
scas
repnz
push
jne
outs
add
test
sbb
not
cvtdq2ps
adc
pop
sbb
leave
test
pushf
in
inc
aad
adc
pop
sub
mov
or
pop
pushf
outs
mov
loope
mov
pop
sbb
hlt
shl
adc
(bad)
cs
push
jge
xchg
xor
jmp
mov
fwait
push
sbb
push
push
jbe
iret
adc
dec
movs
lock
pop
sub
push
jmp
inc
div
dec
add
xor
mov
xchg
test
cmc
adc
add
xor
fs
imul
add
es
lahf
cmc
ins
xchg
ret
pop
xor
mov
cld
inc
add
bound
rcr
lahf
out
(bad)
xor
scas
pop
jae
shl
out
ins
and
jb
fstp
fadd
mov
ror
jo
inc
adc
frstor
test
test
mov
mov
lds
inc
jp
movs
mov
outs
mov
dec
in
mov
inc
mov
pop
sub
add
rol
pop
daa
adc
mov
adc
imul
pushf
mov
out
ror
pop
pop
add
mov
mov
shl
mov
push
push
in
movs
es
pop
adc
cld
out
pop
je
mov
(bad)
call
scas
cli
add
(bad)
or
pop
fs
sub
imul
fs
sbb
xor
mov
div
push
shl
xchg
pmaxsw
aam
add
sub
pop
jae
fimul
adc
sub
sbb
dec
and
lods
jnp
shl
(bad)
int
cmp
push
outs
pop
add
sub
mov
push
push
add
into
aam
ror
fistp
add
ins
mov
out
fisub
out
movs
push
xor
(bad)
jbe
cmps
enter
mov
jge
adc
lahf
(bad)
dec
mov
adc
test
cwde
push
sub
aas
push
fsub
sbb
jge
inc
inc
out
mov
mov
jmp
xchg
mov
xchg
stc
repz
jb
sahf
mov
jecxz
aad
pop
jl
mov
lods
jp
inc
in
sbb
std
push
fsin
inc
dec
ret
and
jns
jns
stos
test
addr16
lods
into
or
cmp
adc
and
fadd
ins
fsub
pop
cmp
aaa
pop
xchg
mov
xor
cmps
adc
retf
jmp
xchg
or
or
shl
sbb
pop
xor
cmp
cmp
test
inc
pop
and
sbb
rcl
ds
repz
enter
mov
pop
int3
adc
add
call
pop
leave
fmul
cmp
or
dec
mov
test
push
call
jmp
cs
mov
jb
das
std
daa
add
shl
int
fisubr
test
inc
popf
movs
punpcklwd
mov
int
and
sbb
cwde
inc
pop
ja
cld
ds
(bad)
loopne
imul
inc
mov
pop
(bad)
out
clc
test
pop
add
std
sbb
sti
fs
lahf
fisttp
or
and
ins
inc
fldenv
clc
addr16
adc
mov
fneni(8087
cwde
xchg
mov
out
pop
fmul
aad
cmp
mov
out
enter
mov
popf
xor
cwde
pop
adc
pop
sub
xor
ins
fcomi
xor
nop
add
movs
leave
mov
mov
xor
adc
out
mov
xchg
cmps
jno
dec
adc
ror
aas
movs
out
outs
(bad)
jno
xor
das
pop
jecxz
push
mov
pop
or
mov
mov
loop
es
shl
rcr
push
rcr
out
inc
inc
imul
and
pop
nop
ficomp
mov
xchg
ds
mov
dec
in
and
sbb
xchg
fadd
fmul
cld
xchg
sub
mov
jg
inc
in
xchg
js
fldz
and
(bad)
mov
test
dec
xor
loop
pop
bound
mov
cmc
sbb
das
or
clc
mov
pop
and
mov
sbb
dec
mov
in
shr
cmp
cld
inc
push
retf
pop
es
inc
icebp
mov
ds
jno
adc
dec
addr16
shl
cld
(bad)
mov
lods
xchg
cli
push
out
popf
imul
cmp
lahf
(bad)
(bad)
daa
loop
mov
and
movs
js
cmp
mov
push
ins
cmp
mov
push
xchg
popf
mov
mov
dec
inc
(bad)
scas
xchg
test
sbb
pop
fist
ins
inc
jne
aaa
mov
pop
jns
sbb
dec
repnz
adc
pop
sbb
adc
daa
sbb
ret
xchg
or
cmps
daa
jge
xchg
fbld
xor
cmp
(bad)
push
jmp
addr16
mov
inc
lods
jae
add
nop
dec
lahf
mov
push
frndint
fs
jecxz
xor
add
cmps
inc
push
add
test
test
mov
xchg
test
sub
std
int
xlat
xor
push
out
mov
xor
test
cmp
jbe
out
stos
cli
in
inc
mov
sbb
mov
inc
lds
pop
je
sub
fdivrp
(bad)
sbb
xor
mov
in
mov
fidiv
inc
mov
aam
bound
mov
cld
ror
pop
pop
iret
mov
adc
seta
xlat
fdivr
jmp
jns
push
mov
dec
inc
outs
dec
imul
sbb
stc
pop
shl
cmps
nop
sbb
icebp
xor
pop
xchg
push
mov
cmp
shl
or
fistp
mov
not
jo
xchg
jnp
shl
rol
mov
dec
out
add
mov
jge
sub
mov
out
or
bound
arpl
or
jae
cmp
in
inc
out
cmp
sbb
push
cwde
repz
fs
jnp
or
in
mov
inc
sbb
out
std
pop
pop
(bad)
sbb
pop
pushf
jno
call
es
or
div
xor
add
adc
mov
jecxz
xor
sbb
mov
test
jp
xchg
movs
xor
mov
stos
adc
retf
test
rcr
adc
lea
jg
lock
(bad)
xor
jne
dec
push
shr
aad
sti
xchg
dec
cmp
pop
ror
xor
xchg
lods
cmp
sub
repnz
xor
repz
js
fst
scas
sbb
cs
stc
repnz
push
pop
loope
xchg
int
sbb
jne
sub
sub
pushf
pusha
sbb
mov
or
fst
xor
or
xor
gs
aaa
add
movs
push
sbb
mov
sub
mov
adc
xor
pop
test
movups
call
fmul
retf
idiv
loopne
stos
and
push
popf
and
sbb
int
push
pop
mov
movs
xor
or
nop
push
cwde
arpl
(bad)
push
pushf
daa
jecxz
lds
aaa
call
fsub
fsubr
dec
push
stos
es
icebp
adc
imul
pop
fstp
cld
inc
inc
push
jae
lods
psubq
jmp
ins
dec
dec
inc
ds
adc
or
add
add
mov
jae
fcomi
mov
dec
nop
inc
pop
and
inc
inc
stos
icebp
or
stos
loopne
daa
iret
pop
push
adc
and
cli
call
pop
or
cmp
add
iret
mov
popa
mov
adc
xchg
push
popf
jmp
sti
jns
xchg
jecxz
pop
push
(bad)
(bad)
dec
dec
pop
jns
cld
jo
movs
loopne
lods
lods
cdq
mul
ret
movs
jg
das
mov
sub
(bad)
and
scas
into
add
in
adc
dec
sub
daa
jp
jp
xchg
in
pusha
(bad)
mov
pusha
sub
aam
leave
inc
and
and
mov
xchg
push
aad
add
sbb
push
scas
ins
cld
cmp
jno
iret
retf
inc
dec
pop
inc
test
in
add
dec
sub
mov
fsubrp
xchg
aam
adc
xchg
les
or
xor
cmp
push
ins
adc
xchg
add
dec
in
test
nop
fs
retf
es
mov
dec
mov
mov
jecxz
push
mov
cmovs
mov
cs
lds
push
mov
and
scas
gs
cs
pop
je
push
cdq
cdq
mov
xchg
fwait
mov
jmp
push
fstp
shl
loope
mov
cs
jmp
add
lds
push
xor
pop
ret
push
jae
jge
xchg
fwait
ja
adc
scas
les
add
xor
lock
fsubr
ins
test
pop
adc
mov
push
imul
mov
rcl
mov
in
pop
jp
fnstsw
mov
pop
mov
inc
mov
adc
ins
pop
or
ins
into
lds
xlat
xchg
call
mov
nop
leave
cmp
inc
cmp
adc
mov
jmp
out
bound
sahf
adc
adc
(bad)
int3
mov
jmp
call
(bad)
xchg
shl
add
pop
cmps
aas
jo
rcl
movs
xlat
xor
jmp
scas
xchg
xchg
ins
mov
in
fisub
jno
loop
jge
icebp
out
sar
sahf
adc
ss
ret
loopne
push
fimul
outs
mov
test
aam
jne
push
push
fldenv
jle
pop
or
pushf
sub
scas
ret
jl
xchg
in
sub
mov
sub
dec
gs
adc
mov
sbb
test
aam
nop
dec
inc
enter
add
ror
in
mov
or
sahf
push
xor
cmc
test
dec
push
add
outs
test
cwde
push
or
or
jmp
jmp
xchg
aas
popa
in
dec
je
cmc
fwait
into
inc
call
or
ds
inc
ss
ret
mov
and
sub
dec
cmp
jmp
mov
outs
dec
jecxz
cmp
sub
jecxz
push
out
iret
cmp
ret
sar
and
call
jmp
inc
aas
ja
mov
and
xchg
rol
pushf
rol
jg
xchg
xor
and
inc
jo
and
test
pop
in
xor
mov
inc
les
loop
adc
or
jg
shr
adc
jbe
mov
loop
xor
add
cdq
adc
cmp
jle
mov
loop
fucomip
mov
call
pop
(bad)
and
popf
jnp
loop
in
dec
pop
adc
in
or
les
xchg
cmp
shl
cmps
aam
in
push
pop
ins
nop
pop
repz
(bad)
rcl
sbb
fstp
(bad)
mov
sar
test
or
and
jecxz
adc
sbb
jmp
mov
imul
pop
test
dec
adc
test
jp
push
cdq
sub
push
add
add
mov
cld
mov
iret
inc
mov
add
cdq
push
fst
dec
inc
dec
bound
jno
(bad)
mov
daa
es
pop
fcmovnb
jbe
sbb
inc
mov
jne
and
fidiv
jle
mov
hlt
add
push
xchg
popa
mov
adc
mov
pop
xor
jp
pop
dec
shl
xchg
ficom
out
mov
dec
js
jge
loop
into
adc
retf
push
(bad)
mov
mov
dec
sub
mov
test
cmp
sbb
ret
int
arpl
push
push
xor
loope
loope
(bad)
aam
das
jns
xor
mov
ss
(bad)
sar
sar
jmp
fstp
add
aam
imul
mov
call
cmp
push
jno
int
sahf
dec
sub
or
inc
idiv
inc
cmp
xchg
mov
addr16
push
mov
adc
dec
stos
out
call
pop
cmp
xchg
out
mov
repnz
pop
outs
jnp
add
pop
add
call
dec
js
out
es
xchg
xchg
cmps
scas
mov
mov
aad
add
(bad)
dec
icebp
push
pushf
mov
push
ss
cwde
inc
in
shr
shl
cdq
sbb
and
mov
pop
nop
mov
jmp
inc
push
push
ins
into
into
(bad)
fisubr
or
push
rol
jp
pop
pop
mov
cmps
cmp
leave
dec
push
xor
(bad)
sti
and
ja
in
test
pop
mov
enter
ins
in
mov
sub
ins
adc
mov
pop
jno
fcom
retf
shl
cdq
mov
jg
ins
xchg
mov
pop
sub
mov
sub
mov
pop
pop
add
addr16
adc
sub
iret
push
outs
cmp
push
das
int
sbb
call
xlat
push
loope
add
cld
rcl
leave
mov
add
das
mov
push
pop
or
pop
adc
scas
sub
fwait
ds
hlt
mov
sbb
xchg
js
pop
ficom
cmp
rol
mov
cdq
jmp
mov
test
retf
loop
in
mov
ins
test
dec
dec
xchg
mov
dec
(bad)
cmc
or
push
sub
mov
pop
inc
fmul
loope
ficom
(bad)
popa
mov
scas
push
repz
ja
pop
pop
imul
pusha
hlt
sar
ins
mov
jle
jnp
push
shr
dec
scas
sahf
cmp
jno
pop
movs
sub
sub
mov
dec
sub
mov
adc
in
sub
pusha
cmp
neg
sahf
ja
test
push
mov
mov
sub
cmp
stos
aaa
adc
xor
mov
lods
inc
cmps
shl
xor
lock
jo
out
sbb
pushf
jne
mov
es
into
(bad)
cmp
stos
pop
cmc
bound
rol
cld
ds
stc
sub
ret
mov
xchg
rol
jl
neg
xor
sbb
jge
hlt
in
ret
aam
sahf
pop
inc
sbb
jb
std
xchg
or
mov
sar
(bad)
mov
cmp
inc
gs
mov
sahf
stc
push
pop
inc
push
jmp
jo
out
xchg
nop
xchg
retf
call
stos
lds
pop
mov
dec
xlat
push
xchg
inc
jg
push
pop
mov
sub
xchg
jle
cmp
inc
or
pop
test
outs
or
dec
jae
in
and
inc
fidivr
gs
xor
pushf
add
add
daa
jle
(bad)
leave
call
cmp
in
jmp
cmps
xchg
cmps
iret
push
test
dec
jb
jmp
mov
or
inc
inc
(bad)
test
jmp
xor
cmc
imul
or
aam
fs
xor
outs
xchg
inc
inc
(bad)
jae
popa
ja
mov
outs
mov
int
out
push
(bad)
mov
mov
in
sar
sbb
dec
pop
push
dec
inc
sub
cmp
imul
pop
nop
outs
push
jmp
pop
and
nop
hlt
dec
mov
pop
xor
aad
and
scas
sqrtps
fucomp
add
test
xchg
mov
sbb
out
aad
or
inc
test
into
scas
sbb
xor
call
movs
ds
into
pop
mov
jae
loop
stc
stc
gs
in
(bad)
in
mov
pop
jae
jbe
sbb
out
or
pop
sar
fcomp
push
dec
xor
inc
data16
and
sar
cmp
mov
pop
repnz
or
dec
imul
call
cmp
mov
(bad)
cmc
int
gs
fldenv
addr16
xor
jge
or
pop
scas
fsub
cmp
jl
outs
dec
je
scas
inc
cmp
mov
ret
shl
iret
jae
int
ds
ss
aaa
pop
aas
hlt
mov
pushf
mov
mov
iret
fisubr
add
jecxz
mov
fadd
aas
jo
xchg
or
or
je
xchg
dec
inc
dec
cld
fcom
pop
push
lock
repnz
pop
adc
int
mov
add
neg
(bad)
lahf
je
or
je
retf
dec
jnp
cs
pop
lea
push
jb
push
ins
adc
test
mov
inc
ins
adc
add
sbb
mov
adc
(bad)
cdq
jns
jbe
mov
es
mov
(bad)
sti
pop
or
and
or
movs
mov
push
cdq
std
sar
jne
mov
xor
add
adc
xchg
dec
hlt
or
pop
js
ja
xlat
sti
retf
mov
push
dec
(bad)
lds
lea
fcmovbe
dec
scas
jp
imul
xchg
pop
sbb
mov
xchg
das
dec
stc
xchg
retf
iret
pop
cmc
jmp
or
gs
sbb
pop
pop
inc
inc
dec
push
retf
jmp
in
xchg
push
jge
mov
test
xchg
sbb
dec
nop
jne
mov
cdq
sbb
adc
mov
inc
repz
dec
arpl
add
xchg
push
xchg
mov
ror
cmc
iret
test
mov
les
and
stc
jg
xchg
add
or
fwait
xor
(bad)
in
hlt
dec
mov
je
xchg
pop
adc
lods
rcl
and
mov
dec
ffree
lods
xor
in
loope
gs
repnz
scas
push
int3
fdivr
in
inc
retf
mov
xlat
addr16
cmps
pop
pusha
(bad)
xor
xor
ins
js
and
inc
and
push
sar
add
mov
popf
xchg
mov
or
loopne
cmps
jl
adc
sbb
dec
cli
and
mov
push
fadd
jb
dec
lea
fdivr
shl
rcr
and
ss
mov
sbb
xor
arpl
or
xchg
test
cmps
dec
mov
lods
sub
xchg
and
adc
inc
mov
mov
mov
adc
pop
sbb
scas
sub
shl
test
in
(bad)
icebp
jbe
(bad)
loopne
lea
mov
mov
sar
aas
jno
ja
xor
jge
dec
inc
dec
repnz
popa
sbb
(bad)
and
out
dec
adc
pop
rcl
cwde
cli
add
movlps
mov
inc
aaa
xchg
mov
jno
addr16
and
lock
out
jg
shl
fnstenv
push
sub
mov
inc
push
dec
and
pop
inc
mov
test
popf
arpl
dec
in
sub
dec
fs
cli
shl
or
jg
adc
xchg
jg
adc
sub
and
dec
xor
cs
pushf
or
sbb
cmp
ret
ror
inc
mov
test
repnz
aad
shr
cmp
pop
clc
lea
loop
mov
add
loopne
xor
nop
xor
clc
aam
mov
in
push
sbb
sub
mov
stc
cmp
ss
int
ficomp
xchg
cmps
sbb
in
fidiv
xor
data16
sub
xchg
cs
jmp
xchg
in
lock
ins
sub
push
xor
out
cdq
jno
lods
movs
retf
leave
mov
imul
sbb
rcl
xor
in
inc
rcl
out
mov
jae
outs
lods
lock
mov
xor
imul
jae
jb
xchg
jmp
inc
into
int3
fnstenv
adc
dec
out
in
pop
mov
nop
mov
mov
test
or
xor
sub
cld
jne
mov
mov
xor
je
dec
fimul
push
cmp
test
sub
mov
(bad)
or
outs
movs
pop
div
jne
add
push
mov
stc
test
arpl
and
int3
jne
cmp
inc
pusha
xor
aas
and
rcr
mov
mov
rcr
mov
sti
mov
lahf
jecxz
shl
mov
and
mov
xchg
(bad)
out
arpl
inc
in
cmp
mov
add
mov
outs
outs
mov
adc
loopne
dec
cs
div
jae
sub
cmp
out
ret
ins
out
add
fidivr
test
push
or
(bad)
xchg
pop
retf
pop
push
adc
stos
add
rcl
ins
or
dec
mov
mov
inc
jmp
and
gs
push
mov
mov
leave
js
icebp
int
sub
xchg
pop
retf
adc
xor
cmp
push
loop
or
mov
cmp
mov
(bad)
dec
pop
int
ja
in
mov
and
call
xchg
ja
push
fild
jae
xchg
inc
or
push
xchg
jg
mov
movs
call
in
push
loopne
gs
jne
outs
and
xchg
sti
stos
out
retf
xchg
inc
push
lods
jnp
push
and
adc
sub
popa
mov
push
or
(bad)
cld
mov
fisub
inc
xchg
xchg
pop
mov
xchg
mov
add
jno
mov
sub
cmovbe
push
js
test
ins
movs
inc
mov
cmp
xchg
add
call
or
test
pop
jo
shl
push
xor
cmps
push
dec
jg
mov
mov
xchg
pop
lock
dec
imul
dec
jae
and
rcr
mov
lods
lods
inc
leave
std
mov
dec
or
xlat
jmp
xchg
add
pop
test
in
rcr
mov
jne
sub
vpackuswb
repnz
dec
in
jns
out
cmp
inc
cmp
jns
out
adc
fnstenv
adc
fnsave
jae
imul
jl
mov
dec
in
mov
sbb
(bad)
mov
loope
stc
sbb
rol
rol
dec
mov
test
dec
or
sub
cmps
ja
retf
mov
jns
pop
push
movs
pushf
pop
mov
lods
sbb
sti
int
dec
xor
xor
enterw
mov
into
pop
xor
or
imul
sub
add
mov
in
dec
dec
sub
cmovae
jae
xchg
mov
outs
inc
adc
mov
fmul
push
pop
xchg
mov
jge
inc
dec
dec
outs
movs
call
dec
in
and
dec
aam
std
cdq
jg
inc
cld
jecxz
in
mov
add
sahf
mov
das
out
pop
xor
adc
in
jmp
cwde
iret
(bad)
in
movs
or
ins
mov
daa
dec
std
rcr
and
ins
jmp
scas
push
pop
sub
push
push
add
xlat
adc
sub
or
stos
retw
arpl
jge
addr16
xor
ret
fwait
jmp
xchg
fdivr
dec
adc
push
and
jne
push
push
mov
fwait
iret
dec
xchg
fisttp
shl
pop
test
push
pop
pop
push
mov
loop
dec
mov
mov
ror
xor
cmp
dec
xchg
pop
test
leave
mov
aad
das
push
fstp
call
repz
lahf
and
shr
or
sub
clc
lahf
mov
int3
xor
rcr
jl
ficom
ins
pop
daa
pop
mov
or
mov
adc
xor
mov
jno
fwait
push
hlt
push
idiv
push
inc
sub
pop
add
data16
lds
jns
mov
outs
fadd
fs
sahf
test
loop
imul
xor
jne
js
repz
pop
data16
cld
mov
mov
xor
int3
sbb
iret
je
arpl
sbb
imul
mov
adc
jbe
scas
push
daa
cmps
loopne
test
or
pushf
jmp
inc
mov
fcomp
addr16
cdq
mov
cld
dec
dec
(bad)
sub
sbb
jge
daa
dec
pop
(bad)
pop
jnp
pop
or
pop
and
mov
and
stc
hlt
(bad)
jmp
(bad)
jno
pop
loope
pushf
jmp
jp
retf
stos
popf
or
mov
or
mov
pop
std
mov
aas
retf
ret
mov
pop
push
aaa
repnz
shl
sub
jmp
scas
adc
nop
push
add
cmp
scas
adc
cdq
ins
rol
movs
ins
arpl
in
sbb
(bad)
into
jns
push
xchg
mov
cmp
fdivr
(bad)
inc
call
push
dec
sub
mov
dec
ins
cwde
jl
hlt
ins
in
outs
jmp
mov
xchg
xchg
push
jecxz
sub
ins
pop
add
cmp
sahf
push
push
add
jl
stc
inc
ja
xchg
mov
xchg
jns
push
cs
cmp
cs
pop
push
dec
mov
sub
pop
int3
inc
out
dec
test
stos
cs
in
pop
inc
xlat
fld
hlt
dec
push
xchg
pop
cmp
rol
cmp
int3
(bad)
cdq
mov
push
or
ret
pop
adc
pusha
loope
mov
adc
loopne
or
sahf
lock
dec
lea
push
mov
sbb
inc
mov
fadd
sub
arpl
jl
dec
in
cmp
bound
jge
ret
mov
(bad)
jmp
je
mov
mov
adc
arpl
fabs
inc
imul
mov
or
pop
gs
fcom
cmp
out
sar
xchg
add
addr16
faddp
sbb
cs
bound
sbb
inc
adc
xchg
loop
mov
shr
ret
sbb
repnz
enter
cmp
pop
std
shl
sbb
pop
in
sahf
adc
movs
cmps
and
dec
mov
js
int3
inc
ss
mov
(bad)
push
out
or
mov
cs
inc
push
add
mov
and
dec
fcom
shl
sbb
xchg
dec
vpaddq
cmp
test
xchg
jecxz
push
std
das
daa
pop
sbb
test
push
in
data16
test
shr
xchg
cmp
and
popa
dec
loope
push
dec
(bad)
and
lods
aad
add
dec
ret
inc
call
jae
lock
cdq
xlat
xchg
jmp
sbb
call
sbb
out
mov
mov
sbb
xchg
sub
cs
ss
jmp
lahf
outs
xchg
adc
movs
ins
rcl
adc
push
jl
adc
xchg
shl
stc
cwde
pandn
(bad)
cmp
or
xor
stos
fsubr
xchg
iret
test
add
jno
(bad)
cmp
cmps
jp
aas
cmp
push
mov
jnp
imul
mov
(bad)
push
jo
dec
add
cdq
ins
cmp
clc
arpl
loopne
jo
or
fidiv
ds
call
push
push
sbb
fdivp
xor
movs
(bad)
stos
xchg
push
mov
pop
mov
jle
cdq
out
push
and
ret
dec
or
mov
jnp
or
enter
repz
pop
jbe
adc
sub
stc
jb
add
loopne
jecxz
rcr
add
sub
cmp
lds
sbb
cmp
retf
fdivr
pop
sub
aaa
retf
dec
dec
add
mov
(bad)
cmp
fcom
jne
cdq
ret
pop
pop
mov
outs
mov
sub
sub
dec
and
shr
cmp
inc
dec
adc
adc
repnz
inc
pop
fld
jle
pop
sbb
jecxz
sub
and
mov
idiv
retf
retf
jg
cmp
outs
mov
cmp
jg
movs
mov
mov
lock
fld
sbb
pusha
shr
adc
push
xor
cwde
mov
dec
jl
adc
popf
adc
and
sbb
inc
cmps
jo
push
push
movs
cmp
dec
std
and
test
xchg
(bad)
push
xor
test
ret
pop
fwait
neg
out
cdq
mov
and
rol
sub
fidiv
and
jmp
stos
ret
in
inc
pop
dec
gs
xchg
repz
mov
cmp
and
sbb
pop
loope
shl
and
push
nop
out
or
enter
xor
cmps
int
je
shl
sbb
add
jae
retf
jno
push
test
sbb
into
shr
retf
or
cmp
push
loope
imul
fisttp
call
addr16
pop
xor
sbb
cmp
std
mov
(bad)
or
imul
jne
inc
pop
stc
mov
mov
mov
cmp
fisubr
dec
mov
dec
adc
call
jno
aaa
cwde
pop
test
jmp
retf
call
mov
or
stc
dec
lock
hlt
test
sub
into
rcl
(bad)
mov
add
push
aad
mov
out
and
or
in
xor
fstp
jae
scas
xchg
xchg
sub
jp
movs
dec
test
mov
cmp
adc
movs
not
sub
cmp
jp
sbb
mov
out
ins
ins
adc
outs
mov
jecxz
mov
pop
xor
mov
jg
cdq
and
dec
xchg
imul
movs
or
fild
lahf
out
es
jmp
mov
mov
test
stos
fstp
xchg
aaa
daa
xchg
push
xor
sahf
mov
xchg
pop
pop
or
adc
ins
xor
inc
repz
sbb
cmps
xor
xchg
leave
sub
loope
dec
push
inc
jae
dec
mov
adc
inc
xor
sti
scas
sti
int
adc
lea
jns
imul
cwde
jl
mov
mov
retf
call
or
xor
sahf
sahf
ss
in
xchg
jecxz
dec
mov
pop
jmp
int3
and
retf
xchg
adc
loop
std
lea
dec
pop
lods
cmc
lahf
and
sub
aas
add
std
and
repz
cmp
xchg
stos
jl
and
jo
mov
xchg
or
mov
pop
mov
or
jns
pushf
dec
int
dec
push
sbb
mov
jp
in
lock
call
call
xor
mov
dec
arpl
bound
js
sti
stc
cmp
daa
clc
xchg
inc
mov
ds
pusha
ror
inc
lea
jns
xchg
xor
sub
sub
mov
sbb
loope
sub
mov
mov
outs
das
sbb
out
retf
pop
or
ja
and
leave
push
lea
cmp
mov
pop
or
adc
test
push
popf
in
pop
int3
mov
xchg
mov
dec
xor
push
jns
xchg
in
fist
xchg
xor
arpl
(bad)
cmp
iret
pop
or
mov
cmp
repz
and
or
mov
cmc
hlt
sahf
addr16
into
jg
loopne
cdq
and
neg
fld
in
sub
mov
enter
dec
cmp
jg
aam
lea
and
jecxz
push
aam
loope
add
int3
adc
adc
in
outs
shl
sbb
hlt
jecxz
int3
pop
cmp
xchg
clc
and
test
sub
jns
jmp
mov
pop
cmp
fstp
cld
(bad)
mov
cmp
jmp
(bad)
(bad)
fnsave
ficom
dec
adc
dec
push
gs
jo
(bad)
xor
in
push
adc
add
mul
mov
and
pusha
add
andnps
into
imul
fs
or
xor
cmp
xchg
and
arpl
pop
fs
xchg
iret
adc
cmps
adc
popf
push
mov
cmp
sbb
lods
mov
jb
cmps
cmp
int
test
test
mov
inc
jmp
sub
repnz
ret
push
jne
das
jnp
pusha
cmc
es
or
iret
ret
jl
fsubr
push
xor
test
out
scas
fdivr
test
in
addr16
mov
mov
ja
cmc
clc
cmc
jnp
arpl
sbb
or
lea
inc
mov
cwde
sbb
lds
test
inc
mov
iret
clc
data16
push
mov
push
lods
je
xor
repnz
cmp
dec
mov
lods
icebp
and
out
push
inc
xlat
std
dec
out
push
aas
jmp
mov
inc
xchg
shl
sub
retf
cmp
daa
pop
cmp
mov
jno
or
sbb
pusha
push
xchg
gs
data16
mov
aad
xor
and
jp
loope
es
inc
fdivr
mov
div
mov
push
mov
inc
cld
pushf
mov
pop
mov
mov
jg
or
add
ja
xor
mov
jecxz
lods
sub
and
(bad)
adc
mov
add
loopne
or
daa
jae
outs
add
arpl
or
(bad)
pop
in
sub
mov
stc
mov
stc
jmp
push
mov
dec
inc
dec
aam
fwait
aam
(bad)
mov
add
shl
jb
es
(bad)
sbb
and
int
inc
bound
dec
cmp
sbb
mov
push
sbb
mov
adc
mov
in
sub
cwde
sub
pop
or
fwait
std
mov
mov
inc
popa
ins
hlt
jne
xlat
inc
mov
repnz
cmps
push
cs
inc
pop
stos
xor
lock
movs
popa
pop
mov
adc
ret
mov
inc
mov
jb
or
push
addr16
ss
sbb
pop
lods
xchg
xor
mov
mov
inc
test
outs
pop
adc
dec
scas
gs
jge
daa
fisttp
retf
jbe
add
cld
jae
jg
inc
inc
pop
sub
sbb
dec
pop
sub
repnz
ins
pop
pop
movs
or
popf
pop
(bad)
mov
movs
mov
aam
xchg
sar
pop
add
add
pop
arpl
scas
cmp
les
pop
iret
jbe
sbb
fnstenv
and
push
mov
in
std
add
mov
imul
mov
mov
fcmovnb
leave
mov
arpl
or
not
mov
jmp
imul
retf
mov
xchg
mov
imul
push
mov
mov
(bad)
lock
cmp
xchg
cmp
jns
push
cli
out
fstp
mov
retf
paddb
pop
inc
push
add
shl
mov
dec
movs
mov
sub
cmp
xor
inc
push
movs
fist
xlat
stc
adc
lea
pop
js
adc
and
je
aam
lods
(bad)
or
cs
fidiv
fwait
cmp
push
mov
add
sti
das
and
mov
ror
(bad)
pop
outs
iret
jl
popa
xchg
jo
(bad)
fcmove
pusha
ror
pop
out
(bad)
mov
xchg
scas
rol
inc
ds
(bad)
pop
xlat
and
test
sti
fiadd
and
push
xchg
outs
and
call
inc
lods
adc
jns
pusha
leave
sub
test
std
loop
fisubr
inc
loopne
aam
mov
int
ficomp
mov
cwde
and
imul
mov
sbb
sbb
fild
pop
stos
fisttp
icebp
sbb
(bad)
jge
in
add
hlt
sub
lock
mov
js
push
out
sahf
xchg
inc
and
xchg
pop
test
mov
fsub
test
dec
sub
cdq
and
xchg
xor
dec
cmc
lea
shr
pusha
leave
xor
mov
or
repz
int3
add
push
data16
dec
popf
add
movs
mov
or
je
jnp
not
lods
mov
repnz
lods
and
dec
inc
je
test
mov
test
loopne
inc
xor
lea
mov
dec
jmp
jge
ret
cmc
mov
add
xchg
inc
cs
int
in
mov
or
(bad)
rcl
add
jmp
test
lods
xchg
jnp
(bad)
mov
cmp
mov
icebp
icebp
stos
pop
arpl
test
jnp
pop
cwde
retf
retf
push
cdq
dec
cwde
leave
mov
mov
xchg
test
sub
hlt
mov
mov
jle
or
mov
sbb
lock
xchg
cmps
aad
int3
jmp
(bad)
outs
(bad)
dec
fstp
sub
add
cmp
cmp
inc
fwait
in
and
stos
fs
ds
dec
and
pop
test
pop
mov
push
jnp
test
jl
push
mov
out
daa
mov
shl
es
sbb
retf
lahf
(bad)
adc
mov
int3
jns
and
mov
(bad)
fsub
push
lahf
in
mov
cwde
rcl
or
sub
shl
sub
and
and
stos
jp
sbb
mov
add
adc
cmc
ds
xor
neg
jno
xchg
ins
xchg
gs
mov
xchg
pusha
jbe
adc
xchg
cdq
pop
cs
daa
sti
and
daa
sti
mov
mov
sub
sahf
pop
nop
cmps
cmp
ret
pop
std
rcr
push
pusha
std
xchg
jmp
cdq
xor
or
out
cmps
push
pop
mov
xor
add
in
popa
jmp
push
test
pop
dec
or
mov
std
mov
mov
xlat
pop
mov
stos
xchg
call
jp
das
cli
mov
mov
push
fst
popa
out
loopne
inc
push
addr16
xchg
xchg
xor
es
icebp
inc
jno
call
in
dec
hlt
jle
shl
or
orps
cld
aaa
aas
inc
mov
mov
adc
xor
jecxz
jmp
mov
enter
ficom
mov
(bad)
imul
mov
or
pop
push
aas
icebp
sbb
iret
mov
ins
pushf
xor
ds
cmp
inc
sbb
jmp
jnp
inc
xor
or
xchg
push
loope
cmps
sub
lds
ins
and
dec
cwde
add
mov
xchg
or
cmc
mov
gs
jmp
popf
lock
pusha
aam
xor
movs
jb
aam
out
loopne
fwait
pop
fs
mov
push
sahf
or
loop
xor
cmp
mov
fcom
cs
xchg
mov
cld
mov
cmp
or
aad
xor
inc
mov
jg
mov
fistp
std
cmc
cmp
inc
mov
popa
add
sti
adc
or
pop
(bad)
imul
fisubr
faddp
add
pusha
mov
stos
inc
loop
repnz
cmp
dec
addr16
js
sub
out
or
pop
loope
xchg
(bad)
repnz
xchg
popa
xchg
std
jnp
loopne
lods
dec
xchg
mov
mov
cmp
xchg
inc
sbb
sbb
fcomp
sbb
movs
jmp
iret
fwait
pop
cmp
add
jno
inc
push
mov
das
inc
add
sub
xchg
push
and
sub
mov
(bad)
hlt
cmp
sub
into
jl
mov
jecxz
out
mov
lea
gs
or
or
clc
push
push
std
add
fild
fwait
sbb
inc
mov
lahf
push
mov
cmova
xchg
int3
ds
cmp
jecxz
xor
std
nop
jecxz
adc
cli
ret
dec
jns
fnstenv
movs
jmp
push
jb
and
call
outs
mov
mov
cld
xchg
pop
sub
ins
push
test
jle
cs
rcr
fs
mov
aas
xchg
fild
sbb
mov
and
mov
ja
mov
and
pop
dec
xchg
mov
cwde
mov
xor
adc
sti
loopne
push
ds
lahf
push
retf
lods
call
ins
lock
mov
lea
inc
rcl
jmp
inc
test
mov
xchg
xor
cmp
inc
call
add
repnz
xor
jne
xor
pop
int3
cmps
sbb
(bad)
mov
mov
xchg
les
dec
paddusw
push
adc
xchg
mov
ss
retf
pop
pop
pop
sbb
mov
adc
push
test
sbb
add
inc
cmove
(bad)
neg
nop
js
out
xchg
aam
lea
jmp
pusha
lahf
push
sub
js
mov
test
(bad)
aaa
(bad)
aaa
jle
pop
fadd
dec
pusha
jb
mov
push
lock
mov
pop
cld
ja
ins
adc
fstp
ret
and
ss
rcr
sub
xchg
fs
xchg
pushf
xor
prefetch
adc
je
xchg
inc
jns
in
add
fwait
int
enter
aad
push
test
in
mov
xchg
push
push
sub
es
pushf
pop
mov
imul
mov
or
dec
adc
or
cdq
shl
cdq
sbb
adc
cdq
jo
aam
popa
cmps
inc
mov
mov
push
adc
dec
add
in
jo
bound
sbb
mov
scas
movs
add
out
pop
jge
cmp
cmp
adc
inc
inc
sti
or
bound
fwait
jg
dec
das
and
in
jle
jecxz
xchg
or
ror
inc
stc
xchg
xor
inc
mov
cs
js
and
inc
test
les
outs
pop
es
or
fwait
cs
stc
push
fwait
call
pop
or
mov
das
stos
mov
cmp
retf
ret
test
cmp
cwde
ficom
mov
call
push
dec
iret
call
imul
or
inc
jle
outs
pop
inc
add
out
daa
pop
aam
or
out
(bad)
mov
push
enter
pusha
cmp
enter
and
stos
add
in
stos
xor
jno
dec
scas
fwait
mov
iret
push
push
pushf
mov
pop
xor
repz
jb
jne
mov
jbe
movs
jb
add
repnz
mov
imul
mov
scas
and
sar
jae
sahf
jl
add
enter
repz
dec
dec
jecxz
pop
(bad)
push
scas
cmp
add
leave
outs
jo
pusha
pop
into
ins
sub
stos
mov
popf
ss
sub
jnp
outs
ror
and
cmps
in
push
or
fadd
adc
push
das
psadbw
jecxz
xchg
jae
cdq
fistp
sahf
add
nop
cmp
jl
jge
or
or
cmps
cmps
hlt
pushf
mov
or
add
adc
pop
push
(bad)
popa
jl
sti
rol
jno
sbb
pop
(bad)
xor
mov
loop
mov
ins
pop
out
pop
mov
mov
cs
and
cmp
dec
jmp
push
movs
push
add
shl
aaa
js
mov
mov
add
cmp
cmp
jmp
ins
push
test
cmp
repz
pop
adc
aad
mov
cdq
dec
xor
dec
js
nop
or
cmps
repnz
ds
cdq
jne
cwde
push
imul
sbb
movs
cmp
es
and
popa
(bad)
sbb
test
cld
nop
mov
rcr
jecxz
pop
iret
jp
addr16
push
inc
xor
stc
repnz
mov
or
scas
xchg
pop
int3
push
enter
pop
inc
dec
sub
mov
lahf
jecxz
(bad)
mov
xor
retf
adc
gs
pop
retf
mov
sbb
dec
dec
adc
int3
jb
and
sbb
cld
cmp
aaa
cld
test
loope
xor
xchg
sbb
and
or
adc
jl
cwde
(bad)
pop
inc
loopne
mov
mov
stos
movs
fs
retf
dec
pop
fcmovbe
aas
or
inc
cmp
setns
jno
add
jae
push
push
int3
add
fisubr
lods
jnp
cmp
rcl
jg
xchg
inc
adc
retf
jp
(bad)
cmps
dec
(bad)
or
inc
adc
out
int3
out
cld
rcl
sbb
out
sbb
pop
inc
xor
lods
hlt
int3
test
sub
jmp
fisub
jg
sbb
push
mov
inc
retf
fptan
inc
outs
mov
int3
xor
test
mov
(bad)
(bad)
or
pusha
mov
xchg
mov
or
pop
inc
fist
(bad)
in
push
cmps
movs
ja
lock
mov
out
loopne
mov
cmp
dec
cmps
or
jmp
popf
inc
ret
mov
inc
daa
nop
popa
sub
lods
and
jo
and
loopne
xor
movs
cmp
mov
add
fs
cmp
retf
rcl
enter
jbe
loopne
pop
pushf
xchg
mov
aas
bound
adc
xor
add
jp
out
stos
jecxz
mov
jle
push
jae
jle
scas
sar
iret
xor
aas
pop
pusha
add
dec
sbb
icebp
leave
push
fnstcw
and
ins
retf
sahf
out
pop
test
cs
(bad)
mov
mov
pop
pop
sub
push
retf
out
pop
mov
lea
dec
push
test
cmps
test
add
jb
xor
in
aad
jmp
sub
or
cld
shl
cmp
inc
pushf
dec
add
sbb
scas
pop
sub
push
cmp
lods
pop
dec
fxch
in
pop
gs
jb
jl
in
ret
mov
cs
fs
ins
retf
in
xchg
mov
cmps
mov
sub
mov
pop
leave
enter
retf
fstp
movs
jmp
xor
jno
or
mov
jnp
(bad)
fstp
pop
das
stos
ss
and
jle
cmp
test
xor
ret
lods
add
xchg
add
xor
adc
push
mov
mov
std
(bad)
in
lods
xchg
sbb
sub
push
movs
dec
push
dec
shr
push
std
call
jno
mov
mov
jp
dec
ds
sar
dec
pop
movs
sar
xchg
out
pop
jb
add
xchg
dec
cmp
shl
mov
pop
loopne
push
aas
fimul
add
test
pop
dec
dec
jae
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
inc
mov
loop
pop
xor
xchg
fidiv
adc
cmp
dec
mov
cmp
and
push
dec
(bad)
xor
mov
adc
cmp
sbb
mov
test
xchg
push
gs
das
jne
ror
push
push
xor
(bad)
jg
mov
lods
mov
movs
outs
xor
jne
std
dec
inc
xor
xor
adc
call
popa
cmc
mov
push
stos
cmp
mov
push
mov
or
lahf
inc
icebp
data16
jne
xchg
sbb
jne
out
inc
add
push
fdivr
test
cdq
dec
mov
xchg
mov
adc
push
jecxz
repnz
int
call
xchg
repz
(bad)
jmp
and
push
loope
call
lahf
out
pop
mov
jne
jns
test
inc
lea
jae
es
div
jnp
in
xchg
cmp
xor
rcl
mov
cdq
or
mov
xor
nop
sbb
mov
lahf
mov
hlt
cmp
and
push
fidivr
mov
dec
daa
add
jmp
xor
std
adc
in
sbb
das
inc
push
add
sbb
test
adc
pop
jmp
std
sub
inc
lods
jne
rcl
jnp
jmp
cmp
mov
out
dec
jnp
cmp
push
sbb
jo
cli
jp
push
push
mov
cdq
test
push
(bad)
dec
ins
iret
dec
(bad)
aaa
imul
xchg
xor
ss
rol
mov
stc
cmp
push
adc
movs
mov
push
sub
hlt
jae
pushf
(bad)
aad
jle
imul
arpl
inc
mov
push
sbb
mov
imul
pop
popa
add
pop
sub
jmpw
adc
sbb
pop
mov
pop
adc
gs
jmp
dec
xchg
test
ret
or
add
jne
shl
add
inc
scas
sub
in
out
xchg
int3
mov
(bad)
jnp
retf
xchg
push
dec
mov
adc
lods
mov
push
popf
xlat
pop
lock
pop
push
xor
inc
das
sahf
fist
add
cmp
xor
ds
jp
jo
cmp
jg
popf
inc
shl
or
mov
jo
imul
dec
in
retf
in
es
and
mov
stos
or
leave
adc
imul
lods
mov
push
push
je
mov
xchg
jle
(bad)
dec
add
xchg
cli
jl
stos
popa
dec
movs
pop
cmps
and
sahf
sub
leave
add
lock
pop
sbb
and
aam
jo
and
inc
jb
data16
(bad)
(bad)
pop
leave
xchg
inc
dec
push
sbb
xchg
adc
popa
pop
sub
fadd
hlt
outs
or
pop
mov
movs
dec
mov
adc
push
adc
jg
fdiv
inc
out
inc
inc
jle
push
dec
stos
or
rcr
and
inc
pushf
repz
enter
sbb
sub
ficomp
or
cmc
jo
xchg
jmp
xor
jns
sub
pop
xchg
mov
mov
mov
in
mov
lea
ficomp
test
xchg
sbb
xor
push
test
in
fsqrt
fs
mov
mov
loop
mov
pop
jns
xor
ds
pushf
in
stos
xchg
cmc
add
bound
mov
lock
stos
push
fcomp
(bad)
sbb
div
add
xchg
or
sti
mov
inc
dec
mov
or
pop
push
mov
adc
mov
mov
stos
jno
cmp
mov
cld
push
dec
scas
mov
bound
mov
cmp
call
jno
sti
outs
dec
mov
retf
(bad)
mov
and
sbb
test
mov
push
xchg
xchg
jo
xchg
dec
pop
into
pop
mov
cmp
xchg
outs
stc
rcl
xor
jp
lahf
cmp
imul
popf
add
or
sub
fisubr
xchg
cmp
pop
fsub
ret
mov
sbb
arpl
xor
adc
inc
lods
js
(bad)
daa
shl
xor
fist
stos
(bad)
cmp
out
sub
inc
xor
cs
lods
int
xor
mov
scas
pslld
jp
cdq
aas
push
dec
sbb
sub
mov
mov
and
call
fsubr
ret
push
or
jmp
adc
nop
cmps
xchg
inc
mov
xchg
inc
out
out
sbb
push
jecxz
fiadd
mov
lods
sbb
mov
test
fsubr
add
or
jno
ror
cmp
dec
(bad)
stc
fmulp
imul
repz
dec
or
add
or
(bad)
je
and
ds
jno
aaa
inc
std
pop
(bad)
jo
cmp
mov
xchg
pop
jge
retf
jmp
and
xlat
(bad)
mov
sub
out
out
cmp
and
or
push
or
retf
es
gs
scas
mov
cmp
out
pop
dec
push
retf
ja
jmp
ds
test
addr16
push
mov
fs
arpl
loopne
sbb
aam
mov
cmc
fild
(bad)
addr16
stos
and
adc
out
inc
lods
xchg
out
imul
inc
dec
pusha
inc
push
push
test
mov
dec
mov
dec
jl
push
div
or
imul
into
repz
and
jb
push
cmp
adc
mov
add
call
mov
mov
xor
into
dec
or
dec
loop
push
push
and
out
rcr
std
mov
mov
div
ret
mov
and
pop
dec
aaa
pop
repnz
sbb
lock
xor
ret
(bad)
lds
cmp
arpl
and
outs
out
pusha
in
es
jno
mov
and
pop
push
push
test
sub
or
sbb
cmp
sbb
ror
popf
les
fist
jmp
cmp
mov
aas
mov
mov
test
inc
retf
add
fucomip
mov
xlat
icebp
inc
ror
dec
ret
mov
fmul
adc
push
cmp
push
loope
add
pop
fcomp
add
loope
frstor
test
stos
push
mov
inc
and
ret
xlat
jns
div
jg
dec
dec
out
jo
and
dec
cli
mov
outs
fbld
lock
xchg
(bad)
or
xor
(bad)
inc
mov
out
pusha
jns
fiadd
mov
popf
movs
pusha
xchg
xchg
jmp
repz
xchg
fistp
shr
and
in
rol
pusha
push
aas
jns
idiv
adc
jl
shr
call
xor
xor
mov
call
lahf
pop
sub
cli
hlt
adc
dec
push
cmp
jno
(bad)
aaa
mov
pop
dec
xchg
adc
test
sub
xchg
(bad)
pop
jmp
push
pop
push
and
sbb
mov
pop
(bad)
mov
ds
xor
lahf
je
clc
outs
push
daa
inc
lahf
cmps
mov
mov
lods
repz
dec
ja
push
xchg
xchg
adc
fld
cs
cmp
adc
(bad)
popa
shl
jno
retf
imul
mov
fld
jb
pop
daa
sub
adc
push
or
xchg
dec
aas
jg
mov
ror
mov
fistp
cmps
and
out
mov
cmc
iret
mov
imul
ins
sub
xchg
and
jno
mov
(bad)
pop
neg
js
dec
push
push
inc
add
xchg
xchg
aaa
push
mov
pop
pop
cwde
push
enter
cld
inc
iret
fld
xchg
dec
and
mov
dec
aas
or
push
pop
data16
(bad)
cmp
ins
push
sub
icebp
call
xchg
adc
mov
jmp
sbb
jno
sar
in
cmp
mov
mov
loope
stos
rcr
inc
adc
push
adc
mov
xchg
mov
(bad)
lahf
mov
pop
stc
comiss
out
mov
movs
pop
pusha
out
sub
aam
out
adc
sub
hlt
pushf
push
int
outs
mov
and
test
loop
ds
ficom
lock
dec
aaa
mov
sub
mov
fst
outs
xlat
imul
cmps
jecxz
dec
loopne
sub
add
aam
pop
cmps
ss
stos
loopne
push
inc
pop
imul
mov
std
xor
adc
test
outs
fist
or
dec
pop
add
mov
mov
jnp
mov
pop
stc
push
ja
inc
call
clc
dec
arpl
cmp
popf
outs
(bad)
jmp
and
call
push
fcomp
out
mov
mov
jmp
jmp
retf
sub
mov
push
xor
pop
cmps
sbb
add
cmps
(bad)
push
push
cdq
fdiv
mov
scas
rep
sub
jnp
and
ja
push
pop
pop
pop
jbe
and
lods
js
js
pop
cld
std
outs
rol
aad
add
add
dec
xor
adc
inc
mov
nop
dec
add
addr16
ins
jo
adc
es
mov
or
sub
pop
xchg
inc
pop
jl
call
add
inc
jne
jb
xor
pop
cmps
jnp
iret
sbb
jbe
cmc
dec
test
inc
nop
sbb
cmp
int
push
hlt
fst
dec
xchg
std
xchg
fdivr
inc
test
inc
jno
jnp
jno
jae
rcl
lods
icebp
push
loop
nop
jns
xor
mov
enter
jecxz
and
mov
cdq
fldcw
jmp
loope
jne
cli
fisubr
dec
sub
ss
stc
pop
xchg
push
shr
push
jge
out
sbb
pusha
and
outs
ins
rcl
cld
sbb
lods
int3
add
adc
push
loopne
push
cld
pop
out
imul
outs
xchg
rcr
icebp
test
je
dec
lds
lods
cli
cmps
in
fisubr
(bad)
jge
iret
dec
gs
pop
stos
or
mov
lods
fsub
stos
pop
jl
fidivr
stc
into
(bad)
fdivr
int
sti
imul
push
daa
ins
mov
jne
std
xchg
mov
pop
popa
mov
push
push
sar
sub
fcomp
lods
daa
clc
out
dec
bnd
mov
dec
inc
mov
ss
in
adc
xchg
sub
cmc
aad
sub
add
rol
aaa
inc
mov
add
or
out
mov
dec
mov
ds
cwde
adc
mov
push
cwde
pop
(bad)
push
pusha
pop
inc
jb
add
scas
movs
test
outs
stos
adc
mov
push
test
sub
and
jp
stos
mov
mov
in
imul
jmp
xchg
add
mov
ret
mov
mov
add
mov
les
xchg
push
xor
je
into
test
outs
push
movs
mov
pushf
test
imul
mov
mov
test
xor
cmps
(bad)
cmp
mov
ins
xchg
(bad)
lahf
in
jle
adc
mov
pop
stos
mov
jecxz
push
les
mov
pop
outs
cmps
lahf
dec
jno
cmp
sub
add
sub
in
(bad)
or
mov
dec
or
addr16
stos
and
stc
or
sub
out
mov
adc
mov
(bad)
dec
mov
cli
sub
jae
(bad)
int
fimul
je
and
rol
push
in
adc
cmc
imul
xor
mov
imul
dec
or
mov
jbe
out
cs
mul
outs
cmp
into
cmp
cmp
sbb
in
push
aas
ins
ss
sar
pop
je
mov
jb
cmc
dec
pop
popa
push
cwde
cmp
add
mov
loopne
jnp
test
cs
cld
sub
pusha
sar
cmps
jmp
mov
leave
stc
xor
pop
xchg
bound
pop
sub
outs
pop
cmps
fadd
sahf
push
pop
call
xor
add
movs
and
repnz
add
retf
push
cwde
leave
or
jno
dec
inc
cs
pushf
xor
mov
sub
rep
or
push
xchg
(bad)
xor
stos
in
cmp
mov
sbb
push
pop
pop
cmp
dec
adc
loope
dec
aam
idiv
shl
(bad)
push
mov
(bad)
(bad)
stos
repnz
in
jg
dec
jl
fcomp
jb
or
clc
stos
or
mul
xchg
sub
iret
pop
push
enter
cmp
and
push
lahf
sbb
xchg
std
aas
loope
ss
sbb
cmps
pop
push
inc
push
xchg
lea
out
push
sbb
loop
pop
fld
jge
cmp
pop
push
cmps
fcomp
jno
push
mov
mov
cwde
test
sub
xchg
push
test
or
test
ss
push
push
lods
mov
add
inc
jno
inc
cld
jno
imul
pop
test
cmp
pop
inc
shl
add
(bad)
mov
gs
pop
ret
pop
icebp
push
and
and
mov
sub
lds
stos
ja
jg
cmp
cmps
jae
pop
add
lods
ja
mov
fiadd
cs
add
mov
and
and
pop
jl
lods
div
ins
aas
and
call
mov
xchg
jp
jmp
xchg
stos
movs
jnp
cld
mov
pop
sti
(bad)
adc
or
in
and
cmps
cmp
jmp
dec
imul
mov
std
cld
jae
jo
mov
xchg
into
xor
into
sbb
mov
cmovnp
mov
cld
mov
ror
div
sbb
cmp
cmps
mov
sti
cmp
dec
(bad)
daa
sar
dec
adc
ss
js
daa
mov
sahf
mov
xor
pop
pop
mov
lock
xchg
clc
cmps
xchg
sbb
mov
mov
and
outs
sbb
fs
sbb
imul
daa
mov
xlat
(bad)
pop
push
mov
bnd
fadd
add
adc
push
das
test
les
xor
(bad)
mov
lds
rol
lods
sub
mov
mov
cli
push
pop
add
aas
cmp
jmp
mov
outs
inc
pop
shl
xor
mov
out
dec
mov
mov
jl
push
imul
cmps
imul
frstor
repnz
popf
pop
or
ror
jno
mov
stc
push
xor
in
test
dec
inc
sub
fwait
mov
inc
fwait
inc
in
fcom
and
fcomi
mov
jmpw
cmps
je
cwde
mov
sahf
xchg
and
je
(bad)
sbb
dec
loope
inc
mov
mov
sub
ret
sub
add
imul
or
movs
retf
adc
retf
bound
sub
add
adc
xor
imul
adc
aas
rcl
and
mov
push
imul
ja
ins
inc
cmp
adc
addr16
nop
sbb
lea
sub
dec
inc
gs
cmp
(bad)
cmp
and
retf
out
mov
fsub
pop
mov
cmp
dec
aas
sbb
dec
xor
imul
(bad)
in
daa
or
cmp
push
cld
retf
jnp
in
not
adc
push
mov
out
jp
enter
adc
ret
dec
fild
mov
es
lock
pusha
retf
xor
xor
mov
dec
add
sub
and
addr16
(bad)
fs
cdq
pop
sar
ins
(bad)
pop
mov
mov
inc
cs
test
sbb
or
mov
jecxz
inc
lea
pop
sub
ins
jno
ins
jp
rol
cmp
xchg
icebp
inc
icebp
cmp
sub
mov
fadd
icebp
mov
inc
add
cmps
xchg
mov
or
call
loopne
lods
xor
mov
sbb
mov
jl
int3
(bad)
cmp
sub
jnp
mov
xchg
scas
ja
shl
loop
cmp
xlat
pop
ror
xchg
lods
mov
shl
daa
xchg
adc
adc
add
dec
adc
inc
mov
dec
push
or
fs
call
mov
retf
arpl
popa
aas
out
addr16
loope
inc
outs
dec
mov
fld
call
cli
mov
out
repz
js
sub
in
adc
mov
push
das
fcmovnu
inc
xchg
jno
(bad)
fldcw
sbb
in
cmps
lods
mov
jg
repnz
push
cwde
xchg
fiadd
dec
(bad)
outs
sub
xor
nop
and
push
cmp
pop
push
imul
shr
call
loop
fcom
mov
add
mov
jno
(bad)
sar
push
pop
add
push
in
inc
xor
push
sub
(bad)
push
jmp
pop
xchg
xor
pop
inc
and
sub
inc
and
pop
cmp
push
sbb
cmp
inc
adc
stc
inc
enter
aad
jnp
pop
sbb
adc
dec
dec
dec
pop
shr
stos
push
and
mov
cmp
push
adc
cmps
xchg
call
ins
ins
mov
sub
sub
retf
lods
jl
lods
lock
dec
jae
push
sub
loope
mov
push
std
retf
or
mov
or
in
push
je
call
sbb
scas
test
fs
jmp
inc
add
out
and
xor
(bad)
in
les
shl
xor
xchg
xchg
test
(bad)
retf
xlat
add
add
fwait
jle
adc
out
xor
shl
arpl
cmps
ret
inc
stos
push
or
(bad)
adc
xchg
loopne
fisttp
loopne
pop
mov
rcl
dec
(bad)
push
and
mov
jge
push
or
call
into
jp
adc
xor
daa
mov
lods
call
and
pusha
stc
loopne
bound
int3
jbe
sti
push
mov
sbb
hlt
or
pop
or
sub
and
clc
add
ret
shl
(bad)
iret
pop
pusha
arpl
xchg
jns
scas
into
inc
jp
fstp
sbb
ins
and
(bad)
mov
xlat
sbb
fstp
cmps
mov
push
sahf
xchg
adc
and
fnstcw
push
mov
clc
je
adc
inc
arpl
inc
clc
inc
stos
cwde
push
sbb
add
pop
push
fstp
xchg
movs
sahf
push
out
cmp
mov
push
cmp
and
jb
pop
out
jg
or
les
mov
inc
xlat
ror
and
pop
add
inc
adc
adc
iret
addr16
jns
pop
pop
(bad)
pop
loope
(bad)
ins
scas
enter
jg
jne
mov
not
fbstp
xchg
or
jnp
fst
or
ins
retf
sub
pop
bound
pusha
fs
push
mov
jmpw
adc
pop
call
cmc
add
fbstp
loope
call
mov
mov
lock
into
fs
jno
ss
mov
lea
shl
data16
or
push
shr
mov
ja
push
xor
or
aam
int
cdq
(bad)
pop
push
xchg
add
cmp
stc
sub
mov
xor
(bad)
mov
xchg
loopne
test
aas
inc
jmp
dec
lea
and
inc
fs
ins
sbb
pop
lods
js
add
dec
adc
les
push
std
mov
jmp
aam
mov
mov
(bad)
outs
xchg
and
mov
test
push
xor
shl
retf
pop
ror
aaa
cmp
sub
(bad)
in
jge
adc
xchg
or
xor
int
fs
int
loope
shl
push
fs
mov
cmp
jb
add
and
retf
leave
(bad)
mov
cmps
aaa
mov
cdq
dec
jbe
cwde
mov
push
xlat
imul
mov
outs
sbb
cmp
jnp
gs
adc
jne
or
xor
cmp
adc
sbb
sbb
inc
int
mov
shl
sbb
push
cmp
xchg
cmp
mov
xchg
xchg
loop
jecxz
and
mov
aam
jl
hlt
inc
repnz
pop
pop
adc
or
lods
mov
nop
jmp
adc
pop
cmp
fidivr
pop
cli
out
mov
and
sbb
cmps
cmps
inc
mov
pop
icebp
test
cmp
jecxz
std
sbb
lods
or
cmps
adc
pop
cmp
pop
(bad)
shr
or
bound
inc
mov
stos
or
cmps
pushf
int3
sub
popf
in
and
clc
and
jnp
(bad)
pushf
fwait
and
xchg
pop
scas
or
in
fwait
repz
push
adc
pop
inc
movs
fadd
(bad)
adc
or
mov
fdivrp
and
mov
mul
cs
cli
jnp
pop
out
sub
adc
xor
cmp
xor
adc
pop
retf
test
jg
std
pop
mov
sti
sar
ja
jle
push
pop
cmc
(bad)
mov
cmp
test
jecxz
ret
and
jo
cld
cmp
les
stc
and
adc
aas
xchg
sub
(bad)
ret
pop
adc
aam
inc
retf
loopne
jo
jo
popf
jp
mov
ror
jb
mul
cmp
inc
outs
jmp
fild
mov
cmp
lea
loope
cmp
sar
push
pop
hlt
daa
mov
pop
das
ficom
fmulp
adc
push
test
popa
xchg
loop
and
std
sbb
addr16
lea
pushf
push
push
loopne
popa
ret
std
push
add
loopne
pop
ret
lods
jecxz
pop
inc
clc
mov
stos
ret
inc
leave
jno
out
cmp
rcr
fnstenv
jo
rcl
mov
mov
and
sub
jle
and
jg
add
pop
enter
xchg
inc
jne
add
enter
fdiv
test
xor
fwait
popf
and
int
ss
(bad)
sbb
adc
icebp
xor
xor
inc
(bad)
pop
cli
nop
lss
xor
xor
sub
push
rcr
mov
cmp
xlat
cs
sti
sbb
test
mov
(bad)
test
in
rcl
fcmove
loopne
mov
sahf
not
ins
mov
icebp
jmp
inc
icebp
and
pusha
dec
(bad)
inc
sbb
ret
and
idiv
repnz
fidivr
jp
push
retf
adc
xor
in
jae
ins
xor
(bad)
push
ja
pop
stc
aad
mov
arpl
(bad)
dec
xlat
jle
retf
jbe
mov
mov
hlt
call
jl
xchg
mov
xor
fidiv
(bad)
and
xchg
je
or
in
mov
in
bound
es
add
movs
sahf
mov
ins
(bad)
popa
(bad)
div
in
fs
mov
movs
test
fcmovb
dec
cmc
sbb
jbe
push
rcr
into
push
out
adc
jo
pop
call
cmp
jo
pop
sbb
imul
mov
leave
(bad)
xchg
mov
addr16
(bad)
jmp
jg
fsub
mov
cwde
neg
call
pop
hlt
xchg
sub
jge
and
nop
mov
or
or
or
inc
pop
mov
lods
mov
cmp
or
jb
mov
inc
das
mov
loop
and
lods
aad
dec
xor
fidiv
xor
shl
adc
retf
enter
jg
or
mov
add
add
sub
cmp
jno
pop
and
mov
pusha
dec
sub
cmp
pop
ins
js
push
int
aaa
out
icebp
mov
mov
mov
jbe
or
push
ins
cmp
stc
out
gs
mov
add
(bad)
fs
mov
jmp
rol
in
sar
xor
cli
xor
ror
or
add
aas
ss
data16
xchg
(bad)
(bad)
dec
xchg
movs
xchg
stos
test
ds
jmp
sbb
sahf
out
gs
jmp
mov
xor
cmp
cdq
add
dec
mov
jecxz
leave
pop
inc
daa
cld
retf
cli
push
out
xchg
mov
xchg
push
scas
pop
and
loop
cmps
jbe
rcl
cmp
fs
enter
inc
pop
ins
inc
fwait
in
jbe
jb
or
jge
repz
test
push
cmp
movs
sbb
pop
cmp
add
(bad)
adc
stos
stos
(bad)
cmp
jmp
cmp
or
inc
mul
xchg
mov
xchg
pop
clc
out
ds
cmps
ds
ja
dec
mov
mov
xchg
jnp
retf
inc
sbb
pop
stos
push
xchg
dec
jp
xor
sub
and
nop
into
js
and
and
adc
mov
sbb
repnz
cmp
pop
mov
and
mov
cmp
and
push
aaa
bound
sub
test
adc
mov
pop
data16
pop
pop
iret
sbb
cmp
or
leave
es
inc
adc
sbb
imul
jle
sbb
sbb
mov
pop
scas
lods
mov
xor
int
dec
cmp
pop
pop
mov
aas
call
add
mov
(bad)
les
ret
pushf
into
cmp
and
popa
dec
add
and
inc
aas
rol
shl
adc
fs
sub
popa
outs
jmp
dec
sti
sbb
jns
push
push
jns
icebp
sub
test
test
dec
jmp
cmp
jmp
cmc
xor
xor
es
cmps
jo
sbb
leave
add
maxps
or
jmp
xchg
push
scas
jl
jmp
mov
and
ja
push
xchg
bound
xor
dec
adc
scas
fsubr
lock
cmps
mov
outs
xchg
aaa
mov
cs
std
js
sub
aad
ror
and
sbb
adc
jne
frstor
cwde
jecxz
pop
jno
push
cmp
(bad)
in
dec
xchg
pop
mov
pushf
or
fisttp
call
leave
mov
jl
les
cmp
xor
fcomp
scas
iret
sub
icebp
add
or
jb
pushf
and
nop
jge
test
test
push
fiadd
sar
js
into
movs
out
pop
ja
push
jecxz
mov
ss
jecxz
sbb
call
push
daa
hlt
hlt
outs
sub
adc
pushf
and
mov
sbb
mov
repz
out
pop
out
scas
mov
imul
fwait
mov
in
nop
pop
sub
cmp
fcomp
fcomp
pusha
(bad)
rol
and
adc
and
int
xor
arpl
adc
mov
push
call
sub
push
imul
ins
sbb
lock
jmp
push
or
cmp
test
push
or
stos
push
pop
aaa
jbe
shl
add
arpl
ins
mov
jmp
jle
pop
push
jns
inc
addr16
jb
mov
sbb
sub
dec
cdq
lods
adc
sahf
gs
in
shl
aas
inc
rdpmc
inc
xor
sbb
mov
bound
ins
les
sar
daa
push
cdq
lar
jecxz
push
add
sar
pop
inc
aas
nop
hlt
xor
mul
inc
pushf
jecxz
aas
ret
sub
imul
clc
vmovntps
push
shl
aad
sbb
and
das
pop
push
mov
cmp
std
inc
(bad)
out
aam
inc
jns
mov
cwde
aaa
(bad)
outs
in
push
push
enter
fld
cmps
or
call
test
mov
pusha
dec
popf
cmp
mov
mov
mov
scas
sbb
and
cli
mov
sahf
shr
rcl
add
sub
jbe
out
dec
dec
pop
fnsave
dec
dec
jecxz
adc
lea
push
ret
popa
je
movs
adc
scas
cmp
clc
cwde
shr
push
mov
jne
std
jp
pop
pop
or
add
scas
call
xor
xchg
or
repz
add
pop
xchg
in
cmp
pushf
add
call
and
les
pop
mov
idiv
pushf
rcl
movs
fsubr
mov
in
add
dec
adc
fist
ret
cmp
jns
push
mov
xlat
outs
jbe
test
cmp
mov
out
and
jo
rcl
and
jno
cmp
pop
xchg
mov
lahf
xchg
movs
jle
ins
mov
cmc
jae
enter
out
cwde
pop
call
mov
or
stos
jb
inc
mov
std
push
xchg
push
mov
ins
lock
repnz
nop
sahf
cs
sub
dec
inc
push
lahf
fidiv
cli
xor
out
mov
call
mov
gs
cmp
in
inc
cmp
mov
cmc
fadd
arpl
stos
(bad)
adc
aaa
cwde
ss
jmp
repz
retf
lock
xor
sbb
or
push
or
push
xchg
adc
test
call
aas
fiadd
pusha
mov
adc
aas
rol
cmps
pusha
inc
xchg
cld
adc
push
xchg
(bad)
mov
mov
pop
mov
ins
outs
adc
inc
inc
cmps
jnp
gs
(bad)
mov
sti
or
les
(bad)
add
imul
fild
mov
push
cmp
jl
jg
outs
icebp
xchg
(bad)
cmp
jae
add
gs
sbb
add
mov
jb
ss
add
outs
enter
dec
push
and
stos
test
jge
mov
xchg
movd
jbe
ret
fs
cmp
xchg
pop
push
pop
shr
jmp
cmps
retf
sbb
dec
inc
and
and
jmp
mov
scas
cdq
ins
and
stc
popf
outs
adc
call
mov
or
in
xchg
jp
fild
mov
loop
xchg
movs
xchg
or
add
add
loop
mov
sbb
ss
in
sub
and
jo
fistp
lods
xor
jne
adc
xchg
lock
(bad)
ins
xchg
mov
test
push
popa
mov
clc
push
fwait
stos
ret
data16
je
or
(bad)
pop
push
out
shr
imul
aas
mov
sbb
mov
adc
add
fs
or
sbb
push
jmp
adc
cdq
dec
pop
les
cmp
aam
xchg
xor
xor
xor
dec
(bad)
jbe
rcr
pop
lahf
or
shl
out
fild
xchg
push
dec
cs
cmps
jns
ds
push
or
pop
push
sub
sub
int3
cmp
int
inc
push
pop
xor
sahf
xor
mov
push
out
push
data16
mov
imul
inc
lods
jbe
fistp
sub
and
lock
in
adc
push
ds
addr16
ret
in
in
add
jbe
aam
dec
out
jmp
add
cmp
push
es
mov
push
(bad)
cdq
pop
xor
jge
out
jge
sbb
imul
and
daa
sub
sahf
imul
(bad)
retf
and
pop
bound
pop
jno
lds
mov
jb
push
loope
pop
sbb
int
jle
push
mov
add
movs
adc
sub
repz
dec
sub
lock
push
jle
pop
jmp
jb
push
out
adc
inc
adc
cs
adc
sub
pusha
movs
(bad)
rol
xchg
outs
cli
or
jbe
aas
jg
sahf
mov
mov
clc
jmp
ins
sbb
cmp
sar
sbb
(bad)
or
pop
int
adc
fistp
mov
jmp
lods
int
imul
movs
jg
push
shl
mov
fistp
rol
sbb
xchg
sti
fst
mov
adc
(bad)
call
repz
addr16
out
sar
push
xlat
imul
ror
xchg
inc
test
mov
rcr
pop
mov
mov
adc
mov
stos
pop
mov
dec
cs
jae
or
dec
inc
mov
aam
inc
aas
jo
xchg
mov
cwde
sub
mov
std
(bad)
xor
fs
call
test
jp
div
cmp
xor
dec
cld
icebp
pop
lods
les
dec
retf
data16
movs
ror
jno
xchg
add
mov
xlat
enter
cmp
pop
add
adc
loop
or
sub
adc
cmp
jle
push
mov
repz
mov
inc
(bad)
call
sbb
clc
popf
xor
xchg
mov
nop
bound
inc
test
das
out
push
cwde
push
pop
push
and
jl
add
sbb
rcl
dec
fwait
and
inc
aaa
sbb
inc
sahf
mov
sbb
mov
lods
cs
adc
fcom
pop
retf
fistp
mov
into
and
or
int
inc
push
fwait
(bad)
sbb
jnp
mov
pop
dec
loop
xor
inc
jae
mov
mov
aas
aam
fs
sbb
inc
movs
adc
stos
rcr
pop
or
xchg
inc
jo
loope
push
push
les
jns
pop
stos
js
adc
sub
adc
test
data16
into
push
mov
into
xchg
pop
ins
add
mov
push
mov
xor
push
dec
xchg
inc
retf
ds
icebp
clc
mov
sar
or
dec
mov
popf
push
mov
sub
xor
add
cmp
nop
mov
and
jns
jbe
repz
loop
mov
test
lea
jmp
cmc
cli
rol
mov
push
adc
stos
fcomp
xlat
dec
mov
adc
mov
je
mov
push
and
xor
aad
xchg
jb
enter
ret
arpl
sar
jle
loop
or
jne
cli
(bad)
(bad)
dec
mov
xchg
sub
inc
retf
popf
sbb
scas
shr
lods
sbb
xchg
push
pop
mov
aas
sahf
fs
add
push
je
(bad)
jne
test
repz
adc
lods
test
int
push
(bad)
lods
es
test
push
scas
rcr
sar
mov
not
push
mul
in
gs
xchg
mov
xor
leave
mov
stos
(bad)
push
retf
cdq
mov
inc
jge
loopne
mov
(bad)
ss
shl
dec
inc
xchg
push
dec
jmp
sbb
pop
dec
out
push
pop
pop
inc
jl
jae
in
adc
inc
jge
adc
inc
push
ins
add
inc
mov
loop
mov
pop
ret
jns
dec
cmps
out
mov
dec
fmul
and
ret
mov
(bad)
jge
outs
je
test
jp
xchg
outs
sahf
inc
or
push
(bad)
sbb
fst
cwde
aad
jnp
pop
cmovb
or
dec
xor
mov
cmps
ins
sbb
call
sahf
mov
adc
xchg
shl
sbb
cmp
lock
jns
loope
test
test
test
(bad)
dec
inc
dec
lods
sbb
test
ror
pop
jmp
imul
adc
lea
inc
je
sahf
xchg
adc
jge
pop
sub
add
pop
stc
cmp
or
adc
jg
mov
mov
in
pop
out
dec
adc
sbb
stc
test
(bad)
cld
push
pop
mov
jle
(bad)
xor
pop
mov
test
iret
sbb
pop
xor
sub
mov
and
and
push
mov
push
mov
repnz
(bad)
xchg
inc
lock
test
adc
push
(bad)
daa
fwait
into
xchg
pop
dec
push
fcom
inc
(bad)
jo
sub
(bad)
add
mov
jb
(bad)
cmp
push
mov
or
fadd
imul
ret
sub
xchg
in
cmp
mov
and
nop
pop
shl
(bad)
sbb
sub
mov
cmc
frstor
sub
jmp
inc
gs
aaa
js
imul
(bad)
fdiv
or
mov
push
pop
xlat
adc
out
adc
jbe
mov
sbb
xchg
out
inc
dec
das
add
dec
mov
cld
out
mov
fiadd
cmp
cmc
xor
jne
sbb
push
add
das
jl
ror
or
lds
cmps
or
test
jae
adc
repnz
clc
sub
jmp
arpl
dec
ror
xchg
popf
ret
repz
lahf
mov
arpl
(bad)
(bad)
ficom
jp
ds
leave
clc
mov
repz
out
sub
test
push
call
mov
xchg
xchg
dec
adc
(bad)
into
mov
adc
add
cmp
movs
sub
adc
sbb
xor
xor
ins
bound
gs
lea
mov
leave
mov
(bad)
stos
scas
test
dec
jge
lock
inc
loop
repnz
push
xor
sub
out
mov
lods
not
out
pop
pop
sub
dec
xchg
xor
xchg
lods
rcl
repz
push
dec
imul
sahf
ins
jle
dec
lods
lods
inc
jno
and
cmc
and
xchg
outs
in
(bad)
mov
aad
mov
mov
repnz
sbb
jmp
shl
mov
loope
(bad)
std
dec
hlt
stos
sbb
xor
(bad)
out
test
aam
or
fild
push
sub
add
stos
or
leave
ins
ds
(bad)
cmp
hlt
leave
mov
jle
mov
add
mov
das
rcl
mov
cmp
int
outs
sbb
ins
jbe
in
adc
sbb
stc
jnp
push
test
cmp
or
push
jg
jns
cmp
mov
mov
das
lods
outs
fimul
mov
cld
add
jae
cmc
add
lea
in
sar
je
xchg
pop
ror
mov
mov
out
lods
and
fistp
xchg
adc
mov
pop
hlt
ins
nop
mov
ret
cld
add
call
add
stos
dec
pop
dec
imul
fidivr
int
fwait
mov
xor
add
retf
push
lahf
xchg
adc
xchg
inc
or
in
out
push
(bad)
(bad)
div
cmps
pop
sbb
lds
lahf
push
out
lods
mov
fwait
scas
sbb
imul
mov
cmp
adc
mov
cmc
xor
outs
pop
sbb
add
loope
xchg
sub
xchg
in
dec
dec
fldcw
mov
sbb
aas
div
or
push
lahf
push
cli
std
xchg
sbb
pop
out
mov
test
pop
dec
dec
sbb
out
test
out
or
outs
mov
das
pop
jb
cld
fisubr
ret
mov
jge
sub
imul
pop
sbb
cdq
or
js
mov
pop
push
js
jae
ret
out
je
inc
xor
push
fimul
bound
out
push
fdiv
add
jb
push
mov
retf
pushf
adc
(bad)
cmp
ret
adc
(bad)
mov
xchg
or
dec
test
mov
push
cmc
rep
pop
mov
enter
sub
add
movs
jbe
push
or
jmp
test
xchg
jge
les
nop
push
lods
outs
adc
sub
dec
jge
fdivr
call
ins
inc
cmp
add
xlat
xor
xlat
xchg
into
or
lahf
stos
mov
jmp
sar
and
sar
mov
cmp
jp
mov
cmp
or
pushf
push
mov
mov
mov
push
cvtps2pi
mov
or
pushf
aaa
xchg
push
inc
adc
imul
sti
into
fs
nop
ds
jne
cmp
mov
outs
(bad)
mov
fiadd
mov
mov
and
mov
out
add
mov
enter
jno
pushf
sub
mov
xor
cli
es
loop
push
jge
movs
push
stc
(bad)
xchg
in
fwait
xor
inc
adc
(bad)
jne
stos
pop
or
(bad)
mov
add
pop
or
shr
sbb
pop
dec
xchg
ins
mov
mov
ror
(bad)
mov
pop
dec
pop
ins
cwde
ds
lea
add
jb
ja
adc
fs
add
push
iret
jmp
(bad)
adc
sbb
loopne
das
mov
fwait
in
adc
pop
push
div
mov
outs
add
fadd
cmp
imul
adc
cwde
fcom
add
pushf
mov
cmp
popf
pop
sub
pop
sub
fcomp
ins
ins
mov
cmp
mov
cmps
repz
fld
mov
(bad)
aad
dec
es
lock
rol
retf
and
jnp
jno
inc
lock
mov
enter
sub
dec
pop
sub
(bad)
add
add
xor
add
jno
pop
push
sbb
xchg
imul
mov
or
cmp
cmp
stos
mov
test
jns
jno
mov
mov
ret
imul
bound
sbb
out
ror
out
or
data16
mov
push
dec
ins
mov
icebp
stc
xchg
scas
ret
movs
cmp
jp
es
mov
clc
in
and
mov
iret
cmp
sbb
sub
pop
lea
cmp
cdq
lods
mov
into
sbb
(bad)
leave
lods
mov
aas
or
outs
ja
inc
les
and
(bad)
and
push
jne
mov
mul
adc
cmp
fs
addr16
popf
call
rcl
pop
rcr
jp
mov
dec
cmp
push
sub
sbb
in
ret
mov
mov
adc
sub
out
test
or
repnz
pop
pop
cmps
daa
fisttp
push
jecxz
jne
sqrtps
pop
sub
jl
std
fwait
ins
sahf
push
test
push
lods
cmps
lea
mov
jge
mov
inc
int3
in
scas
fsubr
in
xor
(bad)
sbb
pop
cmp
inc
fcmovbe
dec
ss
cmp
div
mov
aas
mov
sbb
popa
scas
movs
adc
xchg
mov
xor
stos
dec
pop
std
mov
jecxz
pop
cld
mov
aaa
pop
pop
test
push
adc
out
adc
pushf
out
test
dec
popf
inc
mov
mov
int3
imul
xor
pop
add
pop
shr
xchg
mov
cmp
jge
xchg
mov
jp
lock
adc
ret
out
mov
pop
sti
or
imul
arpl
call
imul
mov
sbb
addr16
and
jbe
mov
cwde
pop
in
cli
cld
(bad)
jbe
dec
icebp
jae
retf
mov
std
call
aaa
xlat
or
xchg
add
and
ret
jl
repz
push
jb
mov
dec
sbb
call
mov
mov
mov
vcvtsi2ss
dec
or
push
jp
mov
inc
imul
imul
inc
push
ficomp
out
call
adc
fsub
mov
dec
mov
push
mov
lock
jo
mov
loopne
test
fidivr
loopne
in
movs
test
popf
addr16
mov
push
mov
or
es
push
push
repz
pop
or
and
pop
(bad)
cmp
jmp
pop
inc
js
ret
xchg
enter
dec
cmps
mov
cmp
inc
pop
in
and
enter
outs
and
xchg
sbb
xchg
add
push
int3
rcr
nop
ja
mov
bndstx
mov
xor
dec
jnp
dec
pop
pop
and
rcl
movs
outs
cmps
inc
leave
scas
push
sub
mov
mov
xor
inc
aad
jmp
into
sahf
cmp
cdq
stos
adc
test
cmp
sbb
call
int3
(bad)
bound
jb
push
cs
pop
aaa
jl
test
adc
sbb
fwait
and
pushf
mov
mov
ins
cmp
bound
sbb
(bad)
jmp
(bad)
jmp
sub
inc
mov
dec
adc
stos
push
cmp
gs
(bad)
in
scas
xchg
ror
(bad)
dec
jg
psrad
test
shl
(bad)
fmul
imul
sbb
repnz
aad
movs
pusha
sbb
and
jno
outs
(bad)
jno
mov
and
dec
mov
xchg
sub
das
mov
addr16
xchg
add
xor
sbb
inc
sbb
arpl
push
or
int
scas
push
xchg
mov
push
mov
pop
pop
popf
aas
shr
int3
sbb
cld
pop
push
gs
mov
add
mov
adc
rcr
call
imul
loopne
adc
xchg
imul
jo
xlat
mov
xchg
js
ins
xchg
xchg
retf
cmps
xor
cmps
sub
dec
sbb
sub
leave
scas
int
lea
push
mov
dec
mov
enter
daa
cwde
jnp
aad
push
daa
lods
lea
push
loopne
push
hlt
pushf
mov
stos
mov
or
dec
pop
xchg
retf
inc
fst
mov
mov
or
movs
xchg
retf
out
lods
xchg
es
jne
jmp
xor
(bad)
repnz
jo
cmp
icebp
pop
mov
popf
iret
jno
std
hlt
sub
jb
cwde
test
popf
clc
inc
in
xchg
inc
or
push
pop
pop
lods
cld
outs
std
xor
adc
or
fs
(bad)
cmp
arpl
cmc
add
(bad)
cmp
sar
xor
mov
push
xlat
adc
mov
add
push
icebp
cmps
rcr
inc
js
fild
int3
popf
pop
retf
sbb
fwait
push
add
int
je
or
inc
aaa
lea
cmp
popa
dec
pop
xor
jne
push
ss
cmp
test
lods
xchg
and
xor
retf
jo
aad
sub
gs
dec
or
dec
pop
pop
or
mov
neg
into
pushf
dec
pop
popa
fst
xor
cdq
jecxz
es
jne
clc
and
dec
or
cmps
(bad)
mov
fwait
mov
stc
mov
or
pop
mov
xchg
lods
dec
cli
imul
and
inc
and
or
xchg
stc
mov
pushf
adc
popf
ja
rcl
les
mov
mov
sub
fwait
and
adc
dec
shl
jge
pushf
lea
push
loopne
mov
aas
add
jnp
aaa
adc
jbe
xchg
lods
add
pushf
imul
retf
jb
mov
ret
iret
lds
sub
shl
arpl
stos
icebp
adc
imul
clc
mov
inc
lock
movs
dec
pop
mov
(bad)
pop
pop
mov
sar
std
jb
repz
push
(bad)
jo
fsubr
mov
leave
add
ins
sbb
jecxz
cmp
and
mov
(bad)
outs
xchg
pop
mov
dec
lods
or
add
or
mov
cmp
adc
jl
or
and
push
stos
inc
sbb
adc
or
into
or
aaa
pop
iret
adc
pushf
jge
and
jbe
mov
xchg
xor
addr16
data16
enter
outs
mov
dec
push
mov
not
dec
mov
hlt
inc
or
adc
push
in
sbb
sti
push
push
clc
inc
dec
xchg
fsin
adc
data16
jmp
sbb
add
sbb
stos
add
or
outs
or
push
ins
jno
loopne
xchg
xchg
xchg
mov
add
inc
add
mov
push
out
cdq
lock
mov
pop
xor
iret
ret
adc
push
test
dec
aas
cmps
stos
je
in
outs
mov
fiadd
sub
xchg
shr
xor
xor
mov
pop
pop
in
sub
add
test
jbe
and
or
sbb
xchg
mov
dec
cmp
xor
shl
sub
xchg
push
sub
fldl2t
aaa
and
jnp
add
fbld
ret
fadd
rcr
je
mov
pop
(bad)
jmp
lods
lock
push
std
fisub
enter
mov
adc
icebp
es
push
mov
pop
cdq
push
push
shl
clc
xor
push
fild
mov
fsubr
inc
jno
pop
adc
push
lock
rcl
mov
or
push
jno
test
add
cmp
mov
lock
in
mov
cmps
push
push
pop
aas
pop
fld
jmp
jmp
jne
popf
sub
jns
inc
sub
js
adc
fcomp
icebp
jae
mov
dec
xor
js
cdq
jle
mov
lahf
or
jne
jecxz
outs
mov
pop
dec
xchg
test
es
mov
mov
dec
pop
fs
ja
sub
lock
dec
adc
push
ja
lds
fst
cli
dec
je
shl
and
sub
(bad)
popf
out
add
ins
int
stos
xchg
aad
iret
mov
pop
ret
push
xlat
jmp
ja
nop
fs
or
das
nop
out
push
fwait
daa
stos
in
xlat
push
pushf
and
mov
(bad)
cmc
xchg
cdq
mov
mov
push
lods
push
add
dec
push
loopne
fwait
pop
rcr
retf
or
xchg
fcmovb
mov
cmp
repnz
pop
int3
and
pop
sbb
dec
test
cli
xchg
cmp
outs
test
jns
jmp
adc
add
mov
xchg
std
fcmovne
xor
sub
es
std
into
shl
retf
mov
sbb
stos
scas
jp
xchg
or
jecxz
mov
inc
es
bound
inc
enter
xor
xchg
mov
aad
add
pushf
lods
ja
mov
movs
or
fwait
xchg
rep
push
push
push
ret
add
das
ret
shl
cmp
mov
dec
icebp
mov
or
add
xchg
lock
out
mov
ret
cmp
repz
sbb
lock
gs
(bad)
pusha
repz
sub
adc
pop
xor
mov
leave
rol
xchg
cs
push
pusha
mov
das
(bad)
dec
xor
imul
mov
aad
ins
mov
rcr
dec
and
iret
jb
and
mov
addr16
push
jnp
adc
in
inc
je
leave
(bad)
cld
sub
sub
and
xchg
mov
lods
into
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
push
cmp
imul
mov
pop
and
and
sahf
imul
repz
call
mov
adc
jecxz
or
outs
scas
aam
out
daa
jl
mov
push
adc
xchg
mov
and
jge
popf
xchg
mov
loopne
ss
cdq
adc
dec
adc
dec
cwde
xlat
mov
arpl
fidiv
test
mov
sub
jae
mov
adc
fisttp
adc
dec
and
push
mov
repz
mov
sbb
sbb
fdiv
mov
xchg
fidiv
pop
push
dec
cmp
sahf
scas
xchg
scas
cmp
cmp
dec
cmp
out
pop
push
push
pop
mov
ins
dec
in
jo
sbb
fwait
sbb
test
(bad)
lods
(bad)
sti
sbb
cli
bound
es
lds
mov
je
xor
popa
mov
sbb
jp
push
cmps
clc
movs
aaa
xchg
adc
fwait
adc
clc
adc
jg
jp
mov
and
sbb
cmps
push
inc
pop
jne
out
xor
xsavec
loope
jo
outs
add
push
test
das
sub
adc
sahf
rcl
ror
bound
aam
arpl
jmp
sub
jmp
dec
popa
mov
ins
push
sub
fwait
out
pusha
cmp
pop
add
cmp
mov
pop
hlt
mov
sar
jnp
call
xchg
sub
iret
bound
or
mov
fdivr
adc
cdq
inc
bound
xchg
sub
mov
fstp
retf
movs
cmp
or
mov
out
das
add
ret
sub
lds
xor
movs
and
jmp
mov
gs
add
sub
sbb
sti
into
daa
sar
sub
ror
lahf
in
ja
mov
adc
out
and
mov
or
inc
xchg
cmp
dec
outs
lods
jl
outs
loopne
jmp
js
pop
clc
scas
jmp
push
mov
xchg
test
xchg
gs
popf
out
xor
cli
out
retf
inc
mov
push
push
xor
push
cwde
push
je
cmp
mov
push
gs
fiadd
xchg
dec
push
xor
popf
and
adc
fs
push
test
repnz
(bad)
in
lahf
or
sub
out
in
xchg
scas
fist
and
call
fldenv
(bad)
sar
jo
jbe
lahf
pop
jns
(bad)
aad
jbe
push
fist
arpl
aaa
movs
cmp
add
xchg
jns
cli
ins
stos
pop
xor
or
push
out
ret
pushf
xchg
pop
rol
repz
shr
dec
push
mov
jb
mov
sbb
cmp
xlat
jne
xchg
out
jmp
xchg
jmp
jns
rol
mov
jl
movs
jl
mov
out
push
cs
in
sbb
fiadd
pop
fwait
dec
inc
call
sbb
cmp
retf
int
fimul
rcr
retf
dec
out
jmp
mov
cwde
jbe
std
aam
dec
or
es
(bad)
(bad)
lods
outs
cmp
xchg
(bad)
mov
daa
push
ins
pop
xor
inc
mov
dec
inc
fild
pusha
xor
push
mov
mov
in
clc
cld
shl
leave
test
mov
clc
data16
sub
leave
or
leave
cdq
fnsave
xor
test
dec
pop
mov
push
shr
and
stc
sbb
mov
or
lods
adc
dec
jb
int
sbb
push
cmp
test
in
sti
mov
push
or
inc
in
iret
rcl
les
ins
fistp
pop
push
aam
mov
retf
jnp
xor
pop
pop
cmc
lods
stos
es
sub
dec
(bad)
xor
xchg
inc
xor
retf
add
cmps
test
and
add
(bad)
loop
cwde
aam
push
xor
dec
mul
fnstenv
push
xchg
fwait
push
fdiv
jmp
push
dec
ss
cld
jg
jg
out
pop
push
call
shl
fldenv
out
push
xor
pop
lds
push
mov
sbb
pop
cmp
dec
fiadd
jl
(bad)
popa
sbb
aas
cmp
dec
push
or
cwde
(bad)
pop
aam
sub
bound
rcr
call
and
inc
mov
xor
cs
xor
dec
(bad)
sbb
gs
xchg
test
rol
and
or
cwde
test
cmc
pusha
add
and
jmp
or
add
cmp
mov
mov
xlat
pop
xchg
jnp
xor
xchg
test
sti
cmp
sbb
loope
mov
pop
fldcw
or
cmps
adc
rcl
dec
stos
dec
loopne
out
pop
mov
jns
push
mov
sbb
les
adc
aad
inc
mov
or
dec
pop
mov
and
fidiv
sbb
cld
cmp
ss
cmps
ins
mov
dec
cmp
xlat
test
scas
push
sub
mov
daa
xor
jne
or
pop
dec
and
mov
mov
mov
dec
or
cmp
pop
inc
popf
rcl
jno
dec
in
add
jno
lock
xor
cmp
push
loope
jno
fwait
(bad)
rol
jno
cmps
js
sbb
or
(bad)
arpl
aaa
jb
jecxz
and
inc
cmp
retf
ret
xlat
sar
test
mov
outs
in
arpl
das
out
pop
xor
sti
mov
cmp
out
frstor
inc
adc
arpl
xor
cmp
mov
mov
dec
mul
aad
retf
out
(bad)
sti
das
cmp
pop
mov
retf
push
enter
lods
push
neg
mov
or
dec
xchg
inc
pop
shl
imul
push
retf
in
scas
lods
sub
(bad)
sbb
loop
test
in
add
cs
push
fsub
lds
setae
std
or
pushf
mov
mov
gs
call
sbb
lods
(bad)
and
nop
sbb
in
and
jp
lahf
inc
add
and
fucomp
push
mov
sti
movs
cmp
sbb
outs
hlt
pushf
dec
fdiv
fdivr
mov
jnp
ds
sbb
dec
and
adc
scas
iret
out
rcl
inc
movs
arpl
pushf
and
sub
push
je
inc
stc
gs
and
(bad)
cli
loope
push
test
push
jnp
jo
stos
in
pop
inc
aaa
ins
dec
mov
or
repz
out
xchg
sbb
pop
addr16
pop
fmul
jae
dec
push
daa
mov
test
adc
outs
scas
xlat
or
mov
popf
and
sbb
push
add
mov
fisub
xchg
jo
(bad)
jno
into
mov
sbb
xlat
ret
pop
pop
jb
dec
or
inc
mov
jge
shl
in
push
lods
out
imul
and
stos
jns
jbe
fcmovne
aam
sbb
cld
pusha
jno
add
popf
test
jo
stc
push
dec
(bad)
jmp
mov
in
loope
mov
mov
pop
xchg
jecxz
push
mov
scas
(bad)
sub
inc
sbb
imul
sbb
bound
sub
aad
or
stos
aaa
add
cdq
imul
xchg
outs
call
push
pop
stc
mul
lods
jns
or
sbb
jl
and
pop
out
push
lahf
cdq
out
cmp
push
and
push
(bad)
arpl
rol
inc
addr16
mov
nop
stos
and
pop
outs
mov
retf
retf
jmp
aas
dec
aas
inc
xlat
cwde
adc
rcr
xor
mov
push
cmp
push
mov
dec
cmps
inc
fdivr
jle
push
pop
inc
xchg
int
(bad)
repz
push
loopne
mov
call
push
rol
aaa
mov
mov
jnp
mov
xor
push
xchg
aaa
sub
pop
gs
cmp
inc
cmp
outs
jl
or
mov
jmp
xchg
adc
sbb
inc
stc
pushf
cmp
push
push
jle
mov
clc
xor
es
jne
mov
inc
pushf
neg
movs
and
imul
dec
add
std
xchg
les
and
addr16
js
push
pusha
pop
fcmovnb
mov
xor
sbb
adc
jne
sti
inc
adc
stc
mov
xor
mov
fs
cmc
scas
mov
dec
jnp
mov
mov
push
jp
xchg
imul
jae
fimul
push
mov
xchg
pop
push
repz
outs
sbb
retf
pop
js
in
cmp
shl
xchg
test
aas
mov
outs
mov
xabort
imul
push
mov
ins
xor
hlt
or
test
add
lea
xchg
mov
inc
push
cmp
rcl
lods
jns
(bad)
stos
adc
inc
cmps
and
adc
fsubr
sub
cld
sub
push
mov
popf
push
dec
xor
lods
xor
jl
inc
repnz
jl
or
aad
mov
call
mov
vorpd
repnz
in
xor
lods
push
loopne
push
ins
in
mov
sti
out
sar
add
ficomp
xchg
and
push
jmp
mov
lds
inc
xchg
rcl
mov
cmp
sbb
outs
dec
aas
ror
ret
xchg
xor
xchg
aas
test
xor
pop
ins
dec
inc
repz
(bad)
je
pop
aad
enter
mov
jne
sub
mov
cs
in
scas
mov
or
test
and
pop
push
mov
iret
in
mov
js
(bad)
jo
call
jmp
add
mov
jmp
ins
pop
fidivr
push
movs
jle
jmp
xchg
and
xchg
dec
cmp
xchg
pop
(bad)
idiv
mov
aam
int3
add
and
call
ja
dec
imul
push
leave
retf
retf
imul
pop
push
es
imul
dec
jg
xchg
inc
xor
lods
inc
inc
jo
bound
inc
(bad)
in
adc
push
push
cmp
jle
daa
dec
xchg
loopne
adc
mov
push
push
arpl
popf
les
sub
cdq
and
fbld
into
add
push
fxch
fcom
mov
ja
stos
shl
mov
jl
test
mov
scas
add
movs
push
fisub
pop
cmp
imul
mov
push
sub
xchg
loope
scas
push
fstp
pop
popa
je
push
test
nop
cmp
pop
int
push
out
sub
add
leave
adc
pop
xor
lea
fwait
dec
xchg
ret
push
cmps
(bad)
pop
jb
ds
dec
or
loop
add
mov
cmc
enter
stc
sub
adc
xchg
out
xchg
lods
dec
cmps
shr
fmul
dec
inc
jae
das
push
push
push
inc
mov
inc
movs
enter
or
mov
out
cld
or
xchg
mov
(bad)
lock
push
push
adc
mov
pop
pushf
sti
xor
pop
gs
xor
xchg
cmp
out
sub
les
mov
out
leave
mov
dec
popf
and
popf
rcl
sbb
and
add
sub
(bad)
pop
xchg
pop
into
inc
or
mov
pop
jmp
call
popf
scas
sbb
imul
retf
mov
mov
sub
sub
fisub
inc
lds
inc
repz
sahf
ror
retf
pop
or
add
pusha
push
dec
fwait
(bad)
jmp
sub
push
adc
pop
in
jmp
and
outs
mov
mov
inc
rol
xor
mov
mov
mov
aaa
mov
push
outs
inc
and
arpl
jmp
sahf
adc
and
pop
ds
iret
push
ror
loop
fsubr
dec
jno
out
icebp
cmp
push
lods
xlat
pop
leave
cli
inc
aaa
sub
mov
stos
push
ja
jb
cmp
push
cmc
loopne
and
pop
cwde
fild
and
and
paddb
lods
mov
(bad)
aad
dec
loopne
sub
mov
aaa
(bad)
lock
cmp
xor
inc
mov
jmp
push
mov
sbb
loop
jo
pushf
shl
icebp
jge
xchg
jp
or
sub
and
sahf
(bad)
push
and
xor
rol
(bad)
mov
or
es
retf
(bad)
stc
push
cdq
mov
and
pop
inc
out
sbb
jmp
mov
fst
lods
int3
sbb
and
add
push
in
ins
js
out
dec
call
iret
popf
loop
mov
mov
cs
pop
iret
les
sbb
mov
std
pop
dec
sub
dec
jmp
sbb
das
inc
fisttp
iret
or
xchg
cmp
dec
or
adc
xor
cmp
movs
popa
and
sbb
cs
push
pop
adc
pop
mov
shl
in
iret
pop
mov
dec
dec
das
(bad)
mov
dec
add
push
out
and
pop
mov
xor
test
sbb
popa
mov
and
sbb
push
shl
mov
pop
rcr
repnz
retf
dec
gs
or
push
faddp
rcl
call
mov
sbb
inc
or
jecxz
xchg
xor
mov
cmps
gs
out
pop
neg
nop
out
inc
test
pop
xchg
jecxz
in
jb
jg
call
xor
les
imul
mov
enter
adc
push
cmc
aam
add
xor
push
jmp
lods
mov
ret
fnsave
sbb
jo
mov
lods
add
imul
push
pushf
xchg
mov
push
mov
loope
xor
shl
inc
and
pop
mov
mov
and
pslld
mov
ror
adc
dec
fs
inc
jae
stos
jmp
push
lods
(bad)
lock
(bad)
test
aad
addr16
(bad)
and
dec
mov
cdq
jno
xchg
jns
mov
cvtdq2ps
mov
fs
int3
mov
adc
mov
mov
sbb
jb
(bad)
rcl
cmp
sar
clc
lock
push
loope
aad
mov
jmp
xlat
push
cmps
push
out
iret
test
enter
mov
ja
stc
clc
mov
out
or
xor
adc
jo
cld
sub
test
inc
(bad)
test
out
scas
in
mov
clc
out
inc
addr16
fnstcw
mov
jecxz
je
push
repnz
aam
lods
adc
cs
inc
add
push
cmps
sti
fcom
je
dec
cs
adc
and
add
and
add
push
push
pop
ds
mov
ret
xchg
add
or
(bad)
fist
jecxz
mov
into
bound
aas
push
retf
mov
sub
adc
pusha
adc
jle
cmp
push
cli
outs
jle
imul
dec
(bad)
and
xchg
cmp
adc
out
xor
popf
push
je
test
xor
outs
outs
cmp
rol
and
sub
aaa
cmc
cdq
inc
fs
pop
push
ficomp
shr
xchg
xor
std
cs
mov
dec
adc
mov
jle
mov
shl
adc
wbinvd
adc
(bad)
addr16
sbb
mov
jne
pop
or
imul
mul
add
push
imul
xlat
je
push
(bad)
ins
pop
push
dec
mov
dec
sbb
xchg
jmp
rol
dec
mov
add
test
pop
dec
dec
xor
xor
sub
cmp
test
icebp
retf
mov
push
mov
xchg
sbb
outs
adc
ror
je
stc
sbb
sbb
das
jg
(bad)
stc
fbstp
movs
and
xchg
adc
jecxz
or
retf
imul
jno
mov
sar
lahf
mov
scas
aad
mov
cdq
adc
dec
xor
(bad)
push
push
movs
push
jge
repz
ja
std
jbe
ret
jge
mov
sbb
mov
cmc
and
jns
inc
add
imul
int
in
inc
ds
mov
int
and
mov
iret
(bad)
pushf
adc
dec
adc
cli
in
arpl
xor
push
loopne
es
lock
jae
js
movs
into
inc
dec
sub
pop
mov
and
int
mov
fisttp
scas
fs
xor
xchg
bnd
mov
mov
in
push
imul
adc
dec
fsubr
dec
or
mov
dec
sbb
pop
sbb
fwait
inc
test
fidivr
mov
mov
mov
arpl
icebp
xor
jb
jmp
mov
xor
fbstp
aaa
imul
pop
pushf
call
adc
dec
ficomp
test
sub
add
jne
xchg
cli
aaa
mov
jmp
sub
push
mov
push
jmp
mov
jp
ja
stos
mov
inc
fs
in
loop
or
adc
nop
dec
scas
(bad)
dec
add
cs
xor
sub
es
or
mov
sahf
sub
push
xor
xchg
push
(bad)
jo
jmp
(bad)
sahf
popa
xor
pop
fistp
rcr
dec
cs
mov
sti
jge
cmp
sar
mov
add
cmp
and
adc
aas
inc
mov
mov
cmp
jmp
lea
mov
rol
cmp
push
push
leave
(bad)
jecxz
(bad)
cmp
std
xchg
cmp
mov
ret
test
(bad)
es
loope
hlt
dec
mov
ror
cdq
mov
xor
sub
xchg
or
ret
sub
ins
jl
sub
dec
imul
jecxz
jb
lea
mov
mov
mov
icebp
jno
inc
aaa
(bad)
xor
jns
jb
xor
jg
or
inc
jnp
ret
loop
outs
xchg
inc
mov
das
mov
out
xor
loop
(bad)
aaa
xchg
or
into
push
sar
xor
mov
xor
sub
mov
dec
cmp
inc
jnp
jo
and
icebp
pop
shl
stc
sub
rcr
scas
pushf
test
je
pop
scas
nop
xchg
add
stos
std
cmp
push
pop
enter
jne
ins
out
jnp
lods
punpcklbw
shr
cmp
jmp
ss
pop
add
fmul
mov
retf
jbe
sbb
fwait
mov
jo
sub
jmp
push
cmp
mov
dec
das
xor
sti
and
adc
dec
inc
fimul
cmps
fisttp
mov
pop
mov
call
inc
test
xchg
lahf
xor
jns
mov
movs
adc
adc
ins
test
and
dec
mov
sbb
shl
daa
pop
sbb
pop
fbstp
das
cmp
and
push
sub
rol
ret
sub
cmp
mov
add
leave
lods
(bad)
adc
mov
pusha
mov
or
mov
cmc
icebp
icebp
xchg
les
dec
lds
outs
add
out
jecxz
outs
shl
pop
mov
outs
rcr
pop
out
dec
aam
ds
push
push
sbb
in
(bad)
cmp
adc
xchg
xchg
add
mov
adc
xchg
mov
cld
(bad)
cld
not
ins
jne
aad
lods
jmp
jmp
aas
and
enter
inc
or
pop
loopne
mov
and
out
pop
and
js
into
outs
mov
mov
xchg
lea
pop
mov
pushf
in
sub
xor
mov
push
scas
mov
add
mov
mov
addr16
sub
adc
(bad)
jnp
dec
mov
int
imul
adc
not
push
add
jmp
fnstsw
in
dec
fnstcw
scas
sub
jp
push
repnz
and
jle
loope
add
enter
xchg
jge
addr16
fsubr
out
jle
je
and
inc
mov
pop
xchg
mov
and
inc
inc
inc
cdq
add
jle
cmc
int3
xchg
jmp
sbb
mov
lahf
xor
ret
dec
mul
call
aad
xchg
call
les
jnp
(bad)
dec
shl
out
adc
fistp
lods
mov
adc
adc
fld
and
cld
mov
out
inc
scas
mov
mov
pushf
mov
jne
dec
not
push
adc
aaa
jo
mov
lea
sub
add
xchg
jnp
test
mov
cmp
sbb
mov
outs
fnclex
xchg
in
inc
sub
adc
fs
xchg
hlt
push
mov
jmp
(bad)
in
jne
lahf
imul
int
pop
clc
adc
mov
add
inc
jo
xchg
push
rol
call
daa
hlt
xor
cs
push
pop
xchg
jge
cdq
inc
jle
lahf
fld
sub
push
cld
add
mov
mov
mov
pop
stos
push
aam
fwait
in
(bad)
xor
or
ja
mov
dec
movs
sbb
mov
and
xchg
mov
lock
or
cwde
push
clc
push
dec
xlat
adc
and
mov
pop
cmc
dec
clc
shl
and
jae
scas
cmp
sub
loopne
or
call
popf
and
(bad)
mov
iret
pop
ins
pop
sbb
call
loope
mov
add
outs
add
out
inc
mov
sub
or
and
sbb
clc
mov
lods
mov
pop
sbb
push
add
clc
xchg
add
bswap
mov
movs
push
mov
dec
lahf
push
adc
jae
icebp
adc
(bad)
les
dec
jbe
ins
loopne
push
sub
cli
dec
pop
inc
std
jno
jns
xor
and
dec
or
xor
push
test
dec
mov
and
xchg
aas
jl
xchg
dec
jne
jns
(bad)
sahf
shr
sub
rcr
out
push
sbb
stos
ins
test
mov
push
sbb
add
cli
jle
push
lods
pop
stos
jmp
jns
xor
push
add
cld
push
add
sar
pop
lods
fwait
jecxz
push
sub
xchg
dec
pop
mov
and
sbb
in
lods
popa
pop
mov
ins
mov
mov
es
pop
xchg
cmp
cmp
out
push
ret
aaa
mov
xchg
mov
or
mov
mov
mov
enter
and
movs
xchg
nop
push
fsub
xchg
mov
in
data16
jno
cs
mov
into
aad
pop
xor
in
fwait
sub
xchg
ror
int
push
pop
dec
arpl
pusha
retf
cmps
mov
mov
dec
movs
sub
xchg
add
mov
push
jle
ja
pop
loope
jo
out
setnp
jmp
or
test
dec
cwde
push
jl
push
fidiv
inc
lea
jl
in
pop
push
cmp
adc
inc
fimul
fisttp
ins
and
push
stos
mov
aam
cli
(bad)
sub
mov
gs
sub
pusha
push
test
ins
aad
js
imul
mov
cli
scas
int3
add
xchg
adc
adc
gs
inc
call
mov
ins
in
outs
lods
sub
call
enter
cwde
xor
jmp
jp
or
adc
xor
mov
leave
clc
shr
lds
and
fisttp
mov
lods
test
inc
jg
out
or
xor
xor
dec
fbstp
scas
xchg
cmp
mov
sbb
movs
mov
and
push
fcmovu
jb
inc
movs
test
mov
mov
sbb
add
movs
cmc
lahf
out
mov
push
or
mov
jg
mov
mov
add
mov
inc
xchg
retf
fisub
lods
loop
sub
icebp
aam
imul
out
call
gs
stos
jmp
sbb
das
jge
hlt
clc
lock
imul
jae
jp
fwait
inc
sbb
mov
sub
repnz
dec
cmp
pushf
(bad)
out
inc
test
xor
repz
adc
pop
sar
fimul
mov
jnp
mov
xchg
jecxz
mov
ss
xor
dec
(bad)
iret
call
and
mov
(bad)
outs
sti
idiv
cmp
(bad)
or
mov
mov
aaa
jae
fstp
fwait
int3
inc
or
jns
jno
(bad)
ins
les
dec
addr16
or
cmp
out
jo
aad
xchg
movs
adc
stos
and
xchg
mov
stos
or
add
mov
fld
clc
mov
sub
(bad)
cs
bound
xchg
jecxz
retf
es
adc
jno
inc
into
in
mov
jle
lock
arpl
cmp
cmp
bound
jge
and
je
lds
inc
mov
lock
xor
(bad)
mov
sub
mov
cld
clc
xlat
adc
xlat
mov
imul
and
mov
lahf
xchg
fmul
add
popa
cwde
push
mov
jns
xor
jle
mov
adc
cmp
pop
test
cmp
cdq
jp
xor
(bad)
in
jbe
pop
pop
push
jge
cmps
mov
test
cdq
neg
mov
dec
cmp
(bad)
clc
ret
nop
mov
aad
gs
daa
push
popa
dec
cwde
add
(bad)
jp
ror
push
ret
inc
or
in
loop
and
retf
or
push
leave
xor
int3
pusha
mov
cld
xor
mov
fwait
sbb
adc
jne
xchg
popf
push
lock
add
(bad)
(bad)
out
mov
jecxz
pop
sub
mov
sub
mov
shl
push
jns
sub
cdq
bound
lock
cwde
out
aam
(bad)
das
xor
sub
inc
pop
fucomi
stos
fbstp
ret
xor
sub
ds
fdivr
mov
ret
fcmovnu
pushf
mov
adc
push
add
clc
mov
mov
jp
dec
or
sbb
loope
mov
scas
fsubr
mov
mov
mov
loopne
aaa
arpl
dec
mov
(bad)
add
jecxz
jecxz
or
xlat
xchg
mov
mov
dec
(bad)
hlt
call
push
dec
or
fild
test
loope
jns
call
push
pop
mov
imul
mov
add
pop
ins
xchg
dec
mov
repz
adc
jne
jno
into
aas
jns
add
daa
cmp
cmp
nop
jp
sbb
jne
and
test
cmp
mov
addr16
aam
dec
or
or
or
hlt
aad
aaa
sub
in
push
and
mov
mov
cld
cmps
mov
push
test
jns
adc
dec
cwde
in
adc
sbb
loope
ja
les
int
ret
dec
mov
add
push
rcr
sbb
scas
scas
cs
clc
push
out
jns
fbld
push
xchg
aad
call
jmp
add
ds
in
lock
gs
pop
or
xor
into
shl
xor
(bad)
loop
mov
xchg
in
push
retf
pop
or
xor
cs
sub
lea
mov
aad
and
jne
adc
or
sbb
call
ja
pop
sbb
jmp
loope
xor
daa
cmc
arpl
add
xchg
and
in
mov
shl
sub
cmp
dec
pop
inc
sbb
xor
sbb
fs
(bad)
or
xor
and
ja
popa
push
and
dec
sbb
sub
imul
test
jns
mov
shl
fsubrp
sbb
cld
mov
mov
daa
nop
push
inc
cld
bnd
jno
stos
outs
stos
aad
cmp
ffreep
mov
sub
outs
nop
sub
nop
xchg
sub
(bad)
cmp
dec
mov
jmp
ins
aad
(bad)
call
xor
aaa
pusha
mov
ja
xchg
cmp
and
or
adc
test
xchg
dec
push
stos
mov
mov
pop
pusha
xchg
mov
aam
jecxz
cmp
out
mov
ja
(bad)
cs
sbb
cmp
mov
cld
mov
fimul
pop
cmp
das
out
pop
ins
in
sar
lahf
jne
xchg
into
loope
and
push
ficom
push
jnp
inc
std
adc
fdivr
icebp
adc
outs
stos
lods
clc
imul
in
xor
dec
ror
mov
pop
jl
out
mov
(bad)
mov
push
loope
jp
mov
ins
adc
ret
xchg
or
imul
jmp
inc
in
pop
in
and
enter
mov
ins
pushf
inc
ficomp
add
movs
cmp
jmp
sub
ror
cmps
movs
popa
in
sbb
or
sar
call
inc
and
sbb
dec
gs
push
cmp
ss
ds
out
mov
aaa
xor
pop
fxch
(bad)
mov
lods
inc
inc
je
loop
jge
pop
jo
adc
push
cs
aas
cs
xchg
sub
std
xor
and
fwait
and
jno
ret
mov
inc
and
mov
scas
pop
ds
sbb
jno
leave
fsub
pop
dec
mov
clc
inc
push
push
sub
mov
rcl
mov
fmul
int3
mov
jae
sar
push
sbb
pop
mov
bound
pusha
inc
inc
add
pop
(bad)
sub
mov
loope
and
fist
bound
inc
popf
mov
add
jns
push
sahf
iret
retf
xor
jns
jmp
clc
inc
sbb
sbb
and
ss
inc
dec
xor
dec
and
loope
sub
das
retf
aas
push
ins
pop
call
mov
push
sbb
push
loope
sti
sbb
cmp
popa
int3
pop
out
sub
adc
sbb
mov
pop
aas
lods
cmp
(bad)
or
ds
mov
loope
ins
fimul
push
adc
mov
movs
in
test
fidiv
jne
retf
popa
mov
gs
push
jbe
scas
xchg
jl
cmps
push
sar
pushf
pop
test
movs
jb
scas
imul
and
nop
int3
loopne
enter
rcr
cmp
xrelease
cmp
adc
mov
inc
xchg
hlt
dec
pop
sbb
jge
(bad)
hlt
(bad)
cmp
out
mov
cs
daa
(bad)
pop
icebp
scas
jmp
adc
mov
mov
jno
push
(bad)
inc
mov
fwait
in
add
dec
fs
retf
mov
jno
mov
sub
mov
xchg
dec
pop
mov
call
cld
mov
add
in
dec
adc
mov
dec
pop
stos
ja
pop
mov
dec
repz
aas
enter
gs
or
jecxz
mov
mov
lahf
dec
cmps
mov
xor
push
fstp
lea
pop
fsubr
jnp
das
outs
fnstenv
pop
adc
out
out
push
and
mov
enter
mov
ins
inc
call
je
nop
cmp
dec
lods
fs
adc
lock
or
cs
cmp
mov
int
stc
xor
mov
jmp
mov
xchg
xchg
or
dec
lds
mov
shl
mov
lea
pop
mov
or
popf
dec
enter
mov
adc
mov
(bad)
cmc
mov
add
mov
fnsave
movs
stos
outs
adc
cmp
(bad)
aad
jmp
adc
(bad)
in
lds
dec
cmp
inc
bnd
add
ret
mov
outs
push
test
dec
fstp
imul
mov
sbb
cmp
push
retf
cmp
lods
cmp
mov
push
adc
jo
or
add
push
sub
jns
jle
xchg
inc
bound
mov
jmp
enter
inc
call
(bad)
loopne
xchg
mov
setg
pushf
ins
fisub
push
xchg
stc
lods
daa
into
and
xor
sub
mov
stc
scas
pop
pop
mov
arpl
xor
dec
mov
popa
add
jnp
sub
pop
fst
inc
daa
add
lahf
nop
sub
jbe
cwde
fdiv
out
jnp
ret
mov
popa
xchg
icebp
mov
sub
inc
pop
push
adc
(bad)
pop
push
cwde
sbb
xchg
cmp
sub
fldenv
in
arpl
jns
mov
mov
jg
add
jmp
or
out
sub
pop
mov
push
popf
fwait
cmp
push
test
arpl
rol
adc
mov
mov
mov
jmp
dec
ss
or
call
jge
fsub
stos
or
ins
pop
ss
repnz
xor
cwde
movs
sbb
xchg
repz
ins
inc
es
clc
lea
in
cmps
lea
add
fwait
call
test
inc
pop
idiv
pop
sub
sub
rcl
adc
sti
mov
fidiv
cmp
fcom
sbb
xchg
dec
aas
xchg
jg
vdivsd
sbb
lahf
retw
repz
shl
(bad)
fnstcw
cmp
(bad)
dec
xchg
mov
test
mov
pop
std
xor
dec
daa
jmp
pop
push
mov
push
leave
scas
xor
jno
or
add
cmp
adc
or
repz
scas
rcl
or
test
int
stos
sbb
mov
jmp
pop
dec
dec
dec
or
adc
loopne
xchg
nop
dec
push
inc
xchg
test
enter
into
sub
lods
cmp
(bad)
xor
jecxz
enter
and
aam
repz
jmp
call
push
les
push
test
jb
clc
arpl
pop
sbb
sti
xlat
dec
mov
add
in
rcr
jne
jo
clc
(bad)
or
stos
loope
icebp
shr
jmp
les
sti
test
test
out
jmp
por
test
scas
mov
mov
dec
sahf
outs
adc
cwde
mov
mov
mov
pop
stos
xchg
jns
xor
or
loop
push
cs
push
or
aam
sahf
ins
(bad)
adc
dec
popf
lea
and
pop
sbb
mov
push
inc
stc
pop
aam
jno
cmp
push
je
cli
fs
stos
adc
push
mov
sub
pop
jo
push
and
inc
mov
shr
nop
sbb
test
xchg
add
or
imul
dec
jmp
push
mov
lahf
(bad)
jle
mov
pop
loopne
imul
jl
xor
les
xchg
leave
test
daa
out
sub
fadd
ds
fisubr
push
and
push
jns
push
adc
arpl
xor
rol
call
out
jne
and
iret
shr
jmp
jmp
dec
out
into
stos
add
test
cmps
dec
(bad)
xor
inc
sbb
adc
repz
sbb
fsubrp
sbb
jo
imul
cmp
out
pop
nop
add
sbb
mov
inc
lods
shl
sub
mov
mov
out
mov
or
pop
retf
lods
dec
dec
pop
mov
mov
or
sub
in
jmp
push
ins
lods
and
jo
inc
aas
jne
pop
ret
add
jmp
movs
inc
jae
and
push
dec
std
into
mov
call
sbb
stc
sbb
and
add
adc
fs
pop
mov
and
retf
int3
mov
into
sub
cmp
loopne
sub
into
adc
scas
push
and
pop
inc
jb
push
fwait
xor
cmps
sar
outs
jecxz
mov
push
fist
mov
adc
ins
jl
push
jle
ins
ror
cmp
jle
add
push
xchg
mov
mov
fmul
nop
mov
in
clc
dec
xchg
mov
add
pushf
bnd
popa
mov
jmp
sar
mov
in
or
cmps
jle
mov
int3
push
fldcw
jge
(bad)
aaa
xchg
scas
push
or
xchg
and
add
pop
sub
fld
xchg
mov
push
daa
xor
add
mov
dec
(bad)
dec
stc
mov
in
sahf
push
mov
adc
loope
push
mov
mov
pop
cmp
xor
in
inc
or
int
test
mov
jo
daa
fdiv
fsubr
clc
dec
pop
enter
movs
dec
mov
inc
inc
mov
sbb
ret
inc
xchg
pop
call
push
(bad)
xor
mov
add
xchg
test
loopne
xchg
push
pop
(bad)
mov
adc
lahf
cdq
sbb
pop
aaa
pop
movs
mov
repz
sbb
push
sub
jge
imul
fnstsw
aas
nop
int
adc
std
xchg
sbb
rol
jno
cmp
cmps
nop
or
xchg
mov
inc
aaa
sbb
inc
out
adc
repnz
sbb
xchg
in
cmp
stos
dec
jle
movs
rcl
pop
popa
adc
fist
cmp
jecxz
and
jecxz
jno
icebp
clc
jno
push
cmps
clc
pop
scas
or
std
adc
stos
xor
cmp
cmp
je
mov
and
shr
int3
push
cs
outs
mov
mov
mov
cwde
and
loop
imul
mov
adc
(bad)
cmp
push
cmp
into
test
or
(bad)
test
sbb
(bad)
jg
cmp
dec
jbe
xor
push
inc
inc
inc
pop
push
sub
daa
stc
sub
dec
jb
fwait
js
push
rol
into
retf
je
and
leavew
cmp
pop
and
int
sub
shr
shr
push
dec
(bad)
fiadd
ss
push
xchg
add
shl
sub
add
fild
mov
inc
fcomi
push
scas
pop
outs
mov
lds
push
adc
sti
xchg
scas
fst
iret
aaa
in
scas
xor
push
stos
daa
sub
out
sbb
xlat
repnz
and
mov
push
mov
and
scas
xchg
and
sbb
pmuludq
sbb
fsubr
outs
or
pop
pushf
mov
pop
rol
jl
mov
call
movs
pop
add
inc
aam
push
loope
push
hlt
mov
jae
std
into
jno
push
xor
das
add
and
repz
jge
cmp
retf
loope
and
int3
loopne
sub
sub
call
clc
push
fcom
or
inc
jbe
mov
add
imul
pop
fiadd
mov
sub
not
aaa
(bad)
(bad)
ror
loopne
lods
or
cmps
test
test
push
sbb
(bad)
aad
pop
ins
lods
push
push
stos
mov
ror
adc
lds
mov
shl
push
cmp
xchg
dec
scas
push
in
sbb
aam
mov
xchg
retf
inc
cwde
jbe
xchg
sub
sbb
push
inc
cmp
jae
mov
ins
int
mov
jb
ins
mov
test
mov
push
push
push
adc
inc
pop
repnz
push
jbe
mov
xchg
inc
dec
jb
mov
enter
xchg
pop
xchg
aas
outs
inc
mov
xor
popf
add
and
movs
adc
dec
jecxz
cdq
movs
mov
pop
inc
inc
enter
ins
cmp
adc
inc
dec
pusha
pop
cmps
int
push
lea
scas
retf
loope
jecxz
or
loop
pop
adc
xor
cmp
fisttp
in
inc
sbb
out
mov
mov
xor
stc
stos
cmp
test
mov
adc
pop
out
sub
mov
sbb
mov
adc
(bad)
(bad)
mov
dec
fs
cmp
push
cmp
mov
aam
mov
xchg
dec
mov
repz
push
stos
mov
fild
inc
or
and
ins
(bad)
jmp
sub
xchg
mov
adc
dec
clc
sti
push
adc
sbb
shl
shl
xor
stos
dec
cli
retf
adc
or
xor
inc
xchg
mov
dec
jg
mov
xor
lock
xchg
fdivp
inc
pop
mov
fnsave
push
or
gs
pop
jp
ret
jns
xor
add
cwde
call
mov
adc
sub
add
(bad)
cmp
mov
out
push
or
mov
inc
cmp
mov
test
cmc
loopne
mov
aad
ret
clc
repz
lods
out
stos
stos
push
out
xchg
lahf
cmp
into
cli
(bad)
and
sbb
and
ret
imul
add
(bad)
sub
or
pop
mov
cdq
ret
in
sub
pop
add
jae
mov
movs
or
out
loopne
pop
jbe
test
into
mov
sbb
mov
dec
pop
mov
bswap
repnz
xchg
mov
cmps
inc
popa
inc
sbb
test
gs
dec
pop
out
or
sub
fbstp
dec
jns
daa
dec
sbb
cwde
int
out
inc
mov
fwait
mov
rcr
ret
enter
xor
inc
pop
and
enter
int3
retfw
call
add
ins
sub
mov
ficom
jle
jp
mov
popa
aaa
mov
call
mov
outs
sbb
adc
hlt
and
or
cmc
xchg
ss
pop
ds
cmp
fld
ss
gs
fwait
adc
fwait
mov
hlt
cmc
dec
mov
mov
and
and
xor
jne
xor
js
sub
jne
mov
adc
icebp
pusha
retf
cmps
dec
add
mov
(bad)
ret
adc
inc
icebp
ret
sub
sbb
sub
inc
(bad)
in
fld
clc
xchg
icebp
ret
out
mov
and
int
dec
dec
ja
cmps
mov
cmc
fiadd
jmp
out
sub
ret
jl
xor
dec
xchg
jnp
jp
cmp
mov
fmul
lods
sbb
aad
(bad)
push
popa
mov
dec
int3
fcom
mov
and
inc
sbb
repnz
in
cmps
pop
rol
sar
aas
add
aad
adc
push
pushf
nop
aas
adc
and
push
add
mov
jecxz
es
into
dec
sbb
jb
je
test
add
test
and
push
popf
sbb
xor
lahf
mov
into
xor
sahf
imul
jne
nop
in
pop
and
loope
jb
(bad)
jle
sbb
shl
out
xor
mov
jecxz
imul
movs
mov
pop
dec
cmp
cmp
in
jo
cld
jp
cs
inc
imul
int3
dec
in
into
jecxz
jecxz
xchg
in
jbe
pop
jbe
movs
sub
push
and
push
repz
pop
fbstp
call
add
out
xchg
es
shr
jns
aad
clc
repz
pop
test
lahf
mov
mov
popf
lods
mov
push
pop
(bad)
jg
mov
ficomp
aas
aam
in
inc
fsub
(bad)
and
std
xor
out
mov
xchg
aaa
adc
jnp
lods
cmp
and
sbb
fwait
pop
jnp
cmp
jg
dec
jb
xor
xchg
in
mov
mov
and
sbb
mov
mov
pushf
push
mov
mov
ret
push
ret
(bad)
push
sete
inc
sbb
repnz
or
ja
in
retf
lods
adc
jne
dec
mov
gs
or
dec
aas
lods
mov
int3
adc
or
imul
and
call
ss
push
les
repz
shl
movs
icebp
lea
mov
fcos
cmps
(bad)
pop
ror
dec
out
xor
hlt
mov
xchg
jecxz
xor
sub
repnz
xor
add
jle
(bad)
xchg
hlt
mov
dec
stc
inc
lea
mov
cmp
mov
sbb
sub
dec
jb
mov
int3
cs
dec
xor
(bad)
mov
push
dec
mov
ins
rol
shl
xchg
sub
ret
aaa
inc
sub
jbe
loop
daa
inc
jmp
xor
ins
cmc
bound
inc
push
test
loop
push
mov
ret
jo
mov
outs
or
lea
out
adc
data16
fcmovne
aas
sti
push
pop
and
xchg
cmp
push
cmp
jmp
bound
fwait
push
mov
push
push
test
pop
jno
adc
nop
push
push
gs
pop
ja
dec
and
adc
cdq
adc
sub
cmps
xchg
jecxz
mov
or
dec
call
add
das
push
popa
push
fcomp
push
sbb
rcl
lods
stos
xor
jmp
jmp
(bad)
fcmovu
rcr
fsubr
(bad)
in
or
dec
je
mov
adc
jle
dec
test
xchg
pop
out
mov
jne
cmps
fdiv
out
mov
ins
jns
mov
hlt
xor
push
pop
int
or
test
sub
popf
push
fwait
xchg
cwde
xchg
pop
(bad)
ret
xor
pop
cmp
mov
test
mov
mov
out
xchg
adc
or
repz
and
jno
test
xor
push
cmps
fiadd
mov
push
and
dec
fdivp
(bad)
shr
mov
mov
sub
jecxz
daa
ret
add
mov
xor
loopne
mov
mov
mov
bound
lahf
inc
mov
ss
xchg
adc
addr16
rcl
shr
cmp
retf
scas
(bad)
loop
ror
sub
jbe
bound
jle
sub
and
push
xor
mov
nop
int
mov
das
adc
test
es
push
push
add
hlt
call
adc
push
aas
or
mov
sbb
jle
pop
mov
test
fisttp
js
mov
outs
fidivr
ja
outs
mov
mov
cmp
xor
js
test
push
xchg
adc
adc
fs
je
cdq
jnp
add
or
adc
sub
pop
aam
loope
cmps
lods
js
(bad)
push
cmps
and
or
imul
cmc
push
sar
push
xchg
iret
adc
sub
push
pushf
add
add
mov
scas
mov
call
ret
xlat
les
fsubr
or
fldenv
push
sbb
mov
jmp
sub
adc
mov
mov
inc
cmps
ret
jno
cmp
xchg
aaa
pop
add
jo
or
mov
jecxz
imul
cmp
pop
add
fdivr
(bad)
mov
xchg
push
xchg
(bad)
xlat
pop
mov
sub
inc
adc
clc
int
shl
add
push
or
jns
sbb
mov
jle
rcr
test
movs
dec
ret
xor
cmp
out
pop
ficom
mov
in
sar
jae
push
outs
movs
add
pop
pop
mov
cmp
pushf
aas
stos
inc
imul
jmp
adc
imul
call
xchg
push
retf
dec
mov
pop
(bad)
out
fwait
cdq
and
cmp
cmp
jmp
ja
loop
js
push
(bad)
xor
xor
shl
scas
fimul
push
cdq
cmp
sbb
mov
shl
gs
test
aas
jbe
retf
jae
fidiv
out
push
sub
lds
or
dec
cmps
idiv
xlat
dec
das
mov
add
mov
mov
icebp
pop
jge
mov
(bad)
call
pusha
sbb
repz
pop
gs
sar
out
jbe
jp
leave
inc
jecxz
sahf
xlat
mov
pop
lods
dec
mov
scas
pop
cli
mov
dec
test
pop
sbb
fbstp
movs
daa
adc
mov
mov
fsubr
pop
mov
jae
repnz
jns
inc
inc
aad
cmp
sar
movs
stos
(bad)
lds
imul
dec
retf
int
data16
ins
pop
cmps
mov
ss
push
adc
and
jecxz
sar
push
adc
xlat
push
adc
sub
and
(bad)
loopne
sub
lods
mov
outs
(bad)
lods
test
test
scas
mov
ror
add
xcrypt-cfb
cmps
movs
test
xor
popf
les
sub
mov
inc
cld
repnz
mov
xchg
cmp
daa
fmul
std
std
mov
movs
(bad)
xlat
call
xor
hlt
xchg
mov
xchg
dec
imul
test
and
dec
hlt
push
sub
sbb
mov
cmps
sbb
sbb
in
xchg
or
(bad)
mov
add
mov
test
gs
or
nop
bound
stos
ds
push
dec
xlat
xor
mov
mov
movs
icebp
test
pop
sub
out
push
fstp
cs
hlt
aaa
or
fnstcw
pand
repnz
outs
adc
pop
mov
sub
movs
xchg
sahf
sbb
jl
addr16
xor
test
sub
pushf
test
into
repz
cmp
ss
mov
push
ficomp
jge
test
pop
mov
fsub
cmp
dec
daa
imul
add
shr
test
pop
in
out
or
les
std
lods
call
jle
xchg
mov
retf
sbb
mov
xchg
(bad)
(bad)
jne
and
(bad)
(bad)
fwait
mov
or
inc
out
je
aaa
jecxz
stc
in
or
sub
mov
in
xchg
and
cmp
pop
(bad)
ja
loope
je
dec
cmc
jns
or
sahf
pop
(bad)
jmp
adc
(bad)
std
mov
sti
xor
inc
push
test
test
outs
mov
adc
push
ins
mov
mov
repnz
mov
out
sbb
inc
jnp
xlat
mov
aas
mov
add
in
sbb
stc
inc
mov
sub
dec
or
dec
in
or
xchg
and
lock
sub
cmp
pop
jmp
xor
mov
rol
adc
or
cmps
je
push
addr16
sbb
out
inc
out
imul
cmp
jge
and
addr16
or
jmp
sbb
xchg
pop
call
jl
xchg
movs
addr16
div
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fisubr
int
sahf
scas
in
rcr
fs
outs
push
adc
push
fadd
inc
fisubr
mov
push
and
sbb
aas
lods
adc
push
outs
pop
popf
fnstcw
(bad)
and
jmp
imul
cmp
ret
rcl
lock
sub
rol
jp
pop
add
and
rep
mov
clc
addr16
add
pop
fldcw
pop
sub
cld
cli
test
imul
shl
sahf
mov
in
ins
add
mov
scas
pop
enter
mov
lahf
(bad)
dec
cdq
fcomip
mov
loop
ja
mov
lods
and
xchg
push
mov
inc
inc
mov
mov
pop
jb
push
cmc
aad
add
retf
jl
daa
xchg
call
jbe
mov
imul
fld
imul
and
xchg
cdq
mov
xchg
call
cs
test
mov
jmp
fwait
xchg
and
mov
adc
mov
inc
sub
inc
outs
add
mov
sub
gs
rol
sar
jle
out
dec
add
loop
xor
mov
test
pushf
or
or
lahf
mov
imul
int3
mov
outs
call
inc
repnz
les
fisttp
lods
mov
push
dec
dec
dec
cmp
ja
or
mov
xor
jno
mov
sub
pop
and
pusha
xor
fst
pop
js
fucomp
loope
mov
mov
jo
inc
push
daa
in
leave
or
jns
lods
lahf
out
or
and
movs
jg
daa
ret
scas
xchg
sbb
dec
cli
cs
test
push
jnp
leave
jb
mov
cs
or
xor
add
pop
xchg
cmp
push
out
dec
ret
pop
test
pop
rcl
pop
sbb
popa
retf
aad
push
call
sub
(bad)
mov
cmp
pop
cld
pop
jo
mov
out
test
mov
and
inc
retf
and
pop
lea
fsub
sbb
cmp
(bad)
popa
mov
ret
neg
shl
add
jbe
lods
bound
pop
cmp
cdq
inc
outs
push
xor
push
add
(bad)
push
fs
mov
in
hlt
xchg
and
fwait
mul
sbb
leave
(bad)
std
rol
xor
mov
ins
das
mov
(bad)
loopne
scas
(bad)
sub
loope
(bad)
sub
cs
(bad)
loopne
push
mov
pop
jge
pop
fnstsw
lea
push
retf
(bad)
mov
cmp
aam
jbe
adc
push
adc
stc
push
add
in
loop
dec
and
dec
cdq
mov
(bad)
and
fld
xchg
pop
mov
jo
fst
adc
sub
hlt
adc
call
retf
mov
cmp
push
mov
jmp
add
and
lahf
sti
jmp
cmps
sar
ins
movs
(bad)
ss
xchg
and
jmp
dec
dec
stos
loope
arpl
enter
dec
xchg
shl
das
enter
scas
mov
inc
clc
adc
push
adc
imul
adc
mov
cmp
shl
popa
and
fisttp
xor
add
mov
mov
xlat
jge
in
xchg
repz
addr16
sub
jle
jnp
inc
jbe
jle
jo
mov
adc
cmp
push
mov
in
ds
mov
int
mov
ins
out
mov
cmp
adc
or
pop
cmc
kmovw
inc
mul
shr
fwait
pop
(bad)
pop
imul
sub
dec
icebp
adc
xchg
cmp
jns
aam
retf
mul
scas
or
shr
imul
je
mov
movs
(bad)
movs
dec
movs
pop
ror
xchg
movs
stc
mov
ds
and
(bad)
jle
outs
in
shl
rcl
lods
cs
lahf
imul
and
ds
aam
xchg
out
add
mov
ja
mov
add
dec
inc
js
out
sub
ss
pop
inc
not
stos
jno
mov
aas
mov
jle
(bad)
xchg
retf
out
mov
movs
sti
fld
shl
inc
mov
mov
add
inc
sbb
jecxz
out
jns
add
dec
xchg
mov
mov
loop
ins
je
push
cdq
pop
loope
pusha
mov
jns
mov
and
adc
and
es
add
or
mov
push
mov
pop
shl
(bad)
ins
dec
dec
imul
mov
adc
lds
jns
ret
ret
push
std
outs
xor
mov
push
push
sub
sbb
in
loop
sub
xchg
stos
pop
push
pop
cld
pop
movs
sbb
mov
mov
inc
mov
add
mov
aaa
je
in
(bad)
sub
inc
in
jae
mov
lds
cmp
mov
mov
or
push
add
or
sahf
cld
in
vminsd
jmp
lahf
dec
xor
loope
movs
mov
fxch
emms
mov
rcr
push
popf
xchg
cmp
stc
sahf
add
jo
push
pop
sub
sbb
lock
jp
mov
sub
push
dec
sbb
fs
shl
daa
nop
mov
sbb
mov
xchg
pop
movs
lods
push
mov
scas
loope
std
popf
stc
or
mov
das
dec
in
lea
iret
test
pop
arpl
loop
daa
sti
div
ficomp
ja
mov
inc
loope
fistp
mov
bound
clc
test
mov
dec
jo
xlat
cmps
pop
clc
inc
mov
test
inc
inc
cmps
add
lahf
lahf
rol
(bad)
test
enter
mov
jg
push
dec
nop
movs
int3
(bad)
enter
movs
fnstsw
dec
xchg
dec
push
mov
ins
jno
fisttp
(bad)
(bad)
xor
mov
mov
cs
mov
dec
dec
dec
push
loope
push
sar
les
icebp
sbb
enter
add
lods
cmc
imul
jg
ins
sar
in
pop
ffree
xor
jmp
inc
enter
add
(bad)
gs
pop
stc
inc
mov
mov
je
imul
mov
fwait
dec
stc
test
pop
loop
stc
adc
(bad)
ds
lock
add
sbb
scas
call
and
xchg
stos
inc
xor
(bad)
xchg
add
mov
cmp
adc
push
xor
mov
call
sbb
xor
test
xchg
xchg
test
rcl
mov
(bad)
jge
lods
xor
inc
jl
mov
leave
sub
ret
jmp
pop
(bad)
xor
cmp
nop
aad
js
int3
add
push
nop
adc
mov
(bad)
or
and
in
retf
mov
mov
in
pushf
xchg
mov
fstp
mov
outs
popa
call
movs
sub
pop
sahf
mov
mov
adc
daa
sub
out
inc
pop
mov
and
inc
add
xchg
leave
and
xor
cmps
dec
mov
sub
pushf
je
sbb
mov
sub
ds
scas
es
aam
frstor
inc
dec
fidivr
xchg
(bad)
sar
sbb
inc
icebp
lods
stc
in
add
push
imul
in
fdivr
push
pop
cmps
sub
xchg
push
fst
jno
sti
neg
or
or
int
call
mov
xor
lahf
jbe
push
rcr
inc
scas
imul
rcr
fwait
clc
adc
pop
add
loopne
bound
mov
fcomip
cwde
or
dec
mov
ret
jbe
and
aaa
ss
push
mov
ficom
inc
mov
sub
cmp
or
(bad)
mov
mov
xchg
jp
jp
je
popf
call
mov
push
add
push
pop
repz
movs
data16
shr
inc
push
xor
(bad)
xor
in
xor
mov
lds
lods
les
imul
cli
push
fs
es
jo
dec
int
add
ret
std
test
mov
mov
jle
mov
jmp
push
lahf
call
mov
add
and
out
sti
inc
dec
nop
add
imul
inc
into
mov
(bad)
push
pop
jno
inc
inc
xor
cmp
pop
sub
mov
sbb
adc
sbb
fcomi
xor
fidiv
mov
mov
shl
test
xor
xor
das
rol
cmp
pop
mov
rol
scas
nop
cld
out
aad
retf
jne
push
add
pop
mov
mov
stos
lods
js
inc
je
and
inc
outs
xchg
xchg
sbb
jle
sbb
xlat
or
inc
test
sub
dec
jo
aam
xor
ds
popf
daa
shl
stos
sub
sub
sub
mov
xor
fbstp
add
xchg
cmp
sub
fmul
mov
je
(bad)
stc
lods
mov
daa
test
ret
push
jae
mov
xor
mov
add
xor
arpl
mov
xor
leave
mov
iret
stc
add
fbstp
inc
jg
add
nop
fnstenv
das
cmp
mov
adc
pop
cmp
stos
push
jb
cmp
neg
pop
cmps
mov
retf
sbb
aam
dec
test
pop
mov
shr
adc
jl
cli
mov
mov
sub
shr
pop
mov
mov
fdivr
and
cli
jns
push
(bad)
aaa
hlt
xchg
push
retf
inc
push
xor
xor
add
push
jns
mov
jge
sbb
jb
iret
je
test
cmp
jb
call
and
add
(bad)
dec
mov
or
inc
inc
cmp
mov
add
jno
std
cld
out
jne
add
out
pop
jno
add
addr16
cmp
jmp
sbb
cmp
mov
xchg
sub
mov
dec
call
jmp
int3
add
rcr
clc
cmp
out
std
not
xchg
out
fdivr
inc
into
bound
movs
imul
popa
sub
add
je
push
ret
pop
pop
push
jno
pop
xor
cmp
mov
das
jmp
xor
adc
dec
sbb
sbb
mov
push
fldenv
push
pushf
inc
(bad)
pop
add
cmps
fbstp
sbb
leave
mov
inc
scas
and
jne
sbb
add
(bad)
push
xor
in
in
int
jmp
gs
fstp
out
loope
outs
das
in
xchg
pop
leave
call
cdq
push
mov
inc
movs
xor
push
mov
(bad)
ret
imul
cmc
sub
imul
aas
fmul
aad
jne
xchg
mov
mov
imul
pop
jbe
xchg
sub
cmp
mov
cld
(bad)
xor
test
repz
mov
(bad)
sar
inc
in
mov
out
dec
aam
pop
xchg
loopne
cld
sti
push
rol
dec
inc
push
xchg
cs
jo
xchg
push
fs
cmp
out
aad
push
in
mov
mov
retf
test
daa
and
popf
into
push
loop
xor
pop
xchg
fstp
or
dec
fadd
fild
pop
sbb
xchg
mov
xor
cmps
test
sub
dec
cmp
ret
gs
shl
or
loop
sbb
in
call
imul
cmps
jbe
push
in
lahf
sub
ins
dec
std
jo
sub
sub
xchg
inc
adc
adc
movups
cmp
fnstcw
mov
mov
mov
sub
sti
pop
push
mov
(bad)
stc
ins
sub
jnp
pusha
mov
inc
sbb
xchg
pop
dec
test
pop
or
adc
out
int
int3
ins
and
out
(bad)
sbb
sub
xchg
push
inc
sub
mov
inc
push
jb
and
mov
shl
call
retf
push
cli
mov
shl
addr16
add
pop
scas
dec
jne
or
push
xchg
cmps
shufps
xchg
sbb
sbb
cmp
sub
es
jnp
ds
pushf
inc
adc
xlat
push
sbb
push
push
inc
in
mov
push
dec
mov
adc
adc
sbb
cmp
repnz
cwde
jbe
outs
push
(bad)
cmps
xor
or
loop
icebp
sub
jae
lock
call
iret
xor
(bad)
xor
cmp
sub
cwde
popa
popf
ins
add
int3
test
mov
pop
adc
fs
pop
push
cld
ficom
sub
jle
popf
ret
add
call
pop
pop
loop
jb
add
push
adc
xchg
retf
adc
mov
jecxz
stc
pop
sti
and
fiadd
retf
leave
xor
jge
repnz
inc
sub
mov
sbb
push
data16
jns
mov
jecxz
dec
jae
cmp
hlt
sbb
xor
xchg
hlt
(bad)
pop
add
outs
sbb
call
arpl
mov
imul
mov
arpl
fist
jnp
jae
pushf
and
loop
(bad)
jge
jp
xor
lods
cdq
jp
shl
xchg
xor
retf
in
adc
inc
call
cdq
ins
ins
out
mov
adc
es
fsub
test
xor
fisubr
mov
fmulp
and
inc
nop
and
mov
sbb
ret
fadd
xlat
lods
sar
jne
or
data16
ds
and
movs
(bad)
jecxz
pop
mov
scas
hlt
xor
sbb
mov
pushf
mov
mov
les
cdq
sub
jmp
sbb
aad
mov
and
test
lahf
aam
xchg
mov
xchg
sbb
jmp
jnp
add
sub
xchg
jmp
jl
frstor
mov
cs
and
sub
stc
stc
cwde
add
jge
and
mov
pop
xlat
repnz
fyl2xp1
pop
inc
popa
icebp
inc
push
sbb
pop
ret
dec
adc
inc
aam
and
sub
xchg
clc
enter
pop
pop
js
xor
inc
cmp
(bad)
and
(bad)
fld
dec
mov
mov
(bad)
in
cmovl
jecxz
mov
js
ror
sbb
push
mov
lahf
pop
xchg
pusha
in
push
test
loop
ficomp
jmp
int
cmp
or
push
ret
pop
sbb
or
frstor
aaa
xor
retf
dec
loop
jg
popa
fdiv
push
xor
adc
push
lahf
mov
mov
jo
sub
in
out
ins
in
rcr
push
mov
xchg
(bad)
aas
jle
adc
dec
xor
test
xchg
sbb
icebp
movs
jmp
call
shl
imul
jle
cmp
mov
scas
xchg
stc
ret
ins
repz
xchg
(bad)
(bad)
fwait
xor
cmps
jecxz
pusha
jo
cld
sub
adc
mov
push
pop
mov
pop
movs
inc
pop
jb
pop
add
lds
sub
out
fnstenv
jns
sbb
or
or
in
push
jle
add
jecxz
scas
jp
sbb
or
mov
mov
(bad)
adc
lea
adc
arpl
ins
mov
call
test
(bad)
popa
xlat
mov
mov
jnp
neg
leave
stos
ins
sbb
lods
std
test
cmp
mov
mov
pop
(bad)
lds
inc
add
add
movs
ja
xchg
jmp
pusha
sub
pop
lahf
into
sub
mov
mov
push
jo
loopne
jae
push
pop
mov
inc
out
dec
popf
mov
cld
sub
arpl
loopne
sahf
and
dec
mov
fst
mov
addr16
jbe
or
mov
retf
fcomp
push
(bad)
add
(bad)
jmp
fistp
pop
rcr
mul
fdivr
add
scas
cmp
jmp
sub
aas
ror
dec
mov
shl
pop
or
adc
addr16
movs
or
pushf
fld
add
mov
data16
sbb
stos
push
xor
mov
xchg
pop
inc
inc
hlt
sbb
ja
xchg
or
mov
jne
stc
das
std
enter
xor
stos
and
mov
mov
inc
ret
push
movs
scas
jmp
(bad)
ror
pop
movs
pop
dec
scas
jbe
push
mov
mov
(bad)
cmp
data16
dec
aas
xchg
fdivr
xchg
imul
jmp
fs
lods
jmp
pop
inc
(bad)
iret
hlt
das
ret
jg
mov
leave
cwde
add
sub
mov
mov
xor
push
mov
mov
adc
fwait
pop
aad
iret
in
cs
jnp
test
aas
addr16
or
cmp
xchg
mov
inc
or
xchg
push
test
xor
pop
cmovle
xchg
push
div
ins
pop
sbb
jnp
push
jb
xchg
ss
add
not
pop
fsubp
mov
shr
xlat
rcr
jle
push
pop
int
scas
jns
retf
sbb
mov
xchg
xchg
arpl
xchg
sub
nop
stos
inc
and
cmp
sbb
pop
scas
inc
and
pop
lods
and
std
add
push
gs
jbe
fld
(bad)
in
push
cwde
jge
out
arpl
ss
mov
das
lahf
push
mov
test
shl
gs
push
mov
pop
pop
xor
sahf
pop
jb
sub
not
sub
hlt
mov
out
xlat
mov
and
ret
inc
ins
lods
movs
add
pop
retf
pushf
es
sahf
outs
sbb
dec
or
sti
jmp
or
xor
and
enter
push
std
sbb
xor
mov
cmp
retf
sub
add
in
pushf
lods
outs
cmp
sbb
fwait
cmp
pop
data16
xor
sbb
and
add
push
icebp
sbb
or
in
movq
out
xor
das
cmp
push
daa
mov
sub
xor
pop
xchg
add
and
pop
enter
rcr
adc
lea
dec
pop
mov
dec
mov
adc
lea
sub
(bad)
push
lea
mov
data16
aas
pop
mov
jl
mov
clc
sbb
mov
dec
loopne
call
iret
inc
movs
(bad)
jge
jne
outs
call
fxtract
lods
push
push
sub
imul
jecxz
mov
xchg
xor
retf
inc
jns
sbb
ret
mov
pop
adc
(bad)
mov
cld
js
in
cmp
add
retf
or
std
xor
jmp
xor
fiadd
push
mov
xchg
cmp
in
mov
xchg
(bad)
fild
xlat
cld
stos
sub
and
push
aaa
mov
xchg
adc
mov
dec
imul
fadd
fchs
cld
cmps
adc
cld
adc
cdq
in
sahf
jo
mov
pop
fst
dec
cwde
or
adc
es
pop
sub
out
fimul
hlt
sti
ja
sti
and
adc
add
add
pop
push
ds
ins
cmc
xchg
inc
sub
mov
inc
retf
dec
mov
pop
and
sahf
aaa
mov
add
pop
loope
cmp
sahf
sbb
fldenv
enter
loopne
adc
cmp
and
data16
stos
lods
cmp
repz
xchg
add
mov
xchg
fwait
lods
mov
cmp
mov
addr16
ss
cs
cmp
jb
push
cmps
test
and
adc
fwait
lods
adc
sub
sub
xchg
out
inc
mov
loop
jbe
cmps
jp
xchg
stos
fucomp
xor
out
in
sbb
and
mov
or
fimul
sub
adc
xchg
sub
fwait
loop
test
psubsb
add
cmp
pop
pushf
xchg
ds
in
add
push
sar
sub
movs
mov
mov
(bad)
fstp
inc
sub
inc
cld
add
lods
jns
cli
loopne
mov
push
loop
out
call
mov
mov
xor
ins
aam
adc
fdivr
or
loope
fmul
mov
fmul
pop
adc
mov
je
add
xchg
jbe
(bad)
call
loop
xor
out
and
not
adc
add
mov
hlt
and
and
push
fldcw
(bad)
jno
push
xor
movs
jnp
xor
mov
add
fnstenv
dec
xchg
fidivr
test
imul
cmc
in
test
xchg
adc
pop
jg
inc
adc
out
idiv
jp
push
lds
in
retf
enter
dec
xor
movd
hlt
cmp
push
stos
lods
lods
jp
mov
fs
int
jl
mov
cmp
test
cmp
pop
or
mov
mov
xchg
cmp
ins
jle
mov
shl
in
sub
cli
mov
push
shl
ss
enter
or
inc
sti
in
mov
mov
mov
test
xchg
xor
adc
cwde
xchg
xchg
jb
mov
or
les
push
xchg
out
sub
sbb
into
pop
ins
xchg
sub
sar
cmc
pusha
xor
mov
pop
ficom
mov
dec
fnclex
aas
pop
and
movd
adc
aaa
adc
push
and
ins
mov
shl
adc
out
into
loopne
jne
sub
mov
daa
or
pusha
push
or
(bad)
jo
dec
cmc
pop
sub
fcmovb
stc
dec
in
pxor
ficomp
je
sbb
in
call
inc
and
push
popa
mov
mov
cmp
mov
push
js
inc
sti
jns
ret
repz
fsub
test
repnz
mov
and
xchg
cmp
gs
outs
mov
push
(bad)
mov
inc
es
cli
in
xor
jne
into
xor
jns
ins
mov
fucomi
push
and
leave
(bad)
mov
out
or
fadd
inc
int
es
mov
or
(bad)
mov
icebp
cmps
sub
out
adc
in
fistp
cwde
cmp
sub
mov
cmc
fstp
lods
ret
gs
clc
xchg
jmp
mov
mov
jbe
pushf
mov
aad
test
(bad)
fst
adc
sti
aam
loope
cmp
jle
hlt
jbe
daa
rcl
loopne
loop
dec
push
dec
outs
push
pop
and
test
pop
fcomp
hlt
sbb
add
dec
or
(bad)
das
gs
mov
inc
mov
fcom
inc
cmp
addr16
add
idiv
stos
out
inc
aaa
or
cli
sbb
cdq
rcl
or
xchg
(bad)
stc
cmps
adc
xchg
pop
out
mov
pushf
mov
test
xor
sub
cmp
xchg
repz
inc
pop
fs
mov
xor
add
ds
inc
arpl
(bad)
jecxz
add
xor
call
or
mov
push
xchg
adc
mov
test
es
pop
ret
pop
mov
mov
fdivr
mov
pandn
retf
cdq
stos
sti
jb
sub
cmp
jmp
rol
rcl
sub
or
xor
jge
jno
shl
push
(bad)
mov
in
ss
sub
xchg
mov
add
ins
sub
shl
jbe
ins
pop
clc
mov
cmp
movs
ins
lods
add
xchg
call
jne
dec
rcl
mov
cmp
rcl
xor
gs
sub
mov
jecxz
dec
fmul
test
fdivr
rol
sahf
movs
ss
les
jg
sub
outs
aaa
xchg
stos
xchg
out
in
sahf
cmp
push
push
repz
cld
dec
jle
xor
fld
mov
loop
xor
cwde
sahf
cmps
popf
sub
iret
mov
icebp
jle
jns
cmp
cmc
js
loope
repnz
pop
je
(bad)
pusha
scas
inc
scas
xchg
inc
sbb
(bad)
dec
cmps
fs
xchg
add
fistp
aam
inc
data16
mov
jo
inc
jo
xchg
sbb
and
and
cld
or
dec
add
ins
pop
mov
(bad)
call
inc
pop
rcl
call
cli
fstp
xor
(bad)
cs
cmp
sbb
jb
pop
sub
and
jp
leave
lds
dec
data16
dec
inc
pushf
push
or
into
popa
xor
pop
jae
loopne
mov
add
pop
push
arpl
ret
rcr
test
les
test
inc
inc
pop
sahf
or
sbb
mov
mov
out
fidivr
pop
gs
xchg
shr
ins
push
mov
pcmpgtd
push
cmp
retf
xor
mov
inc
push
pop
sbb
xchg
out
mov
and
and
mov
call
fcomp
sbb
retf
in
int3
xor
movs
leave
into
daa
cmps
shl
pop
mov
inc
into
out
lahf
(bad)
sub
add
adc
fild
fist
std
dec
hlt
fadd
hlt
ja
out
jmp
adc
push
out
pmaddwd
push
fisttp
sub
push
mov
or
jne
cs
mov
jae
out
neg
shl
stc
pop
push
call
shl
(bad)
psraw
test
cdq
fdiv
cmp
dec
sbb
ins
inc
mov
neg
xchg
inc
imul
pop
mov
lods
inc
(bad)
adc
xchg
mov
daa
mov
or
xor
gs
dec
ins
cmp
push
loop
fld
add
mov
sub
lods
call
icebp
push
mov
pop
imul
rcl
xor
push
sub
(bad)
pop
cdq
fsubr
mov
xor
stc
addr16
cmps
scas
jb
sbb
xchg
stos
inc
fbld
cmp
sub
lock
cmp
test
in
std
xchg
push
mov
fiadd
sbb
cmp
pop
or
fistp
jg
pop
movs
inc
sahf
repnz
jg
cwde
lods
addr16
inc
loop
aam
push
cdq
inc
loop
daa
jae
xor
movs
es
sbb
inc
fstp
adc
jmp
inc
inc
lods
and
pop
and
aas
cmp
clc
pushf
cmc
jb
add
daa
sub
sub
mov
sub
cdq
mov
out
sbb
xlat
mov
mov
xor
mov
inc
or
fild
push
shl
sar
dec
ins
add
test
jecxz
mov
xchg
mov
(bad)
fisub
movs
aad
xchg
je
iret
inc
lock
and
les
(bad)
mov
or
inc
mov
adc
pushf
repz
jmp
test
mov
in
cmps
pop
sub
jne
pop
inc
mov
mov
rol
dec
scas
xor
sar
xor
mov
inc
movs
adc
enter
pop
push
xchg
js
nop
rol
(bad)
movs
cmps
(bad)
pushf
daa
fdivr
(bad)
cdq
and
inc
addr16
sub
sub
sbb
push
out
inc
xor
ja
call
call
push
mov
dec
mov
push
adc
cmps
adc
push
add
xchg
cdq
movs
imul
sbb
(bad)
inc
dec
lds
(bad)
in
std
call
ja
popa
xor
or
test
nop
sti
stos
sub
and
xor
push
sbb
(bad)
rcl
inc
xchg
pop
mov
adc
(bad)
sti
fwait
or
jo
mov
fisubr
inc
jmp
rcr
cmp
or
jnp
jb
jno
sti
mov
(bad)
mov
sbb
mov
cli
or
sub
aad
div
shr
jns
bnd
mov
mov
jns
add
xchg
(bad)
and
or
into
dec
inc
pop
int
fst
xchg
mov
mov
(bad)
scas
jo
dec
mov
arpl
je
cmps
fcomp
sbb
es
sbb
mov
lods
fidiv
cmps
int3
in
imul
or
or
sti
pop
movs
xchg
cmps
add
inc
iret
inc
pop
push
pop
loope
fstp
call
push
add
pusha
loop
push
inc
cmps
rcr
or
lock
adc
fmulp
mov
cmp
or
cmc
mov
pusha
mov
pop
sub
movs
pop
jo
lds
arpl
addr16
pusha
mov
loopne
jno
cli
xchg
mov
iret
jl
imul
je
xchg
pop
sbb
dec
popa
inc
cmp
lods
pop
out
(bad)
and
lahf
dec
sbb
and
cdq
into
pop
xchg
jmp
out
mov
push
jno
dec
shr
push
xor
(bad)
mov
mov
clc
mov
add
dec
test
xchg
hlt
out
jnp
cmps
repnz
out
aam
out
out
sub
xlat
and
call
das
ss
mov
fistp
popa
(bad)
xchg
jnp
cs
test
add
into
push
out
xchg
cmp
push
push
shl
push
hlt
stos
cmp
lock
ret
test
jo
(bad)
mov
adc
stos
into
ins
mov
pop
shl
lods
inc
adc
movs
adc
aad
jge
mov
aad
xchg
imul
add
daa
and
jbe
xchg
aam
or
shl
cmp
popf
add
jge
sti
mov
pop
sub
or
push
add
shr
sbb
in
ds
js
sub
jns
pop
pushf
dec
in
or
clc
jl
dec
lea
push
sbb
jl
sub
sub
xor
scas
cli
enter
pusha
aam
sbb
mov
xchg
hlt
aaa
shl
not
stos
add
outs
push
and
adc
fnstcw
loop
jl
imul
ins
jmp
jnp
cmp
lods
lods
cmp
test
inc
ror
pushf
rcl
xchg
pop
push
add
mov
or
mov
mov
(bad)
adc
clc
pusha
ins
push
mov
dec
cmp
jg
mov
adc
in
dec
call
ja
sbb
test
jp
nop
add
(bad)
adc
xor
mov
inc
sub
sbb
retf
loope
and
mov
(bad)
xchg
out
aas
inc
xor
xor
mov
out
das
pop
mov
mov
iret
ror
sbb
push
out
movs
ret
fidiv
aad
jo
fwait
clc
ins
mov
fiadd
push
faddp
cmc
inc
dec
imul
aad
rcr
ja
fwait
dec
test
or
push
mov
pop
hlt
xchg
adc
inc
inc
aas
push
mov
psubq
pusha
mov
push
push
lahf
jg
xor
cs
add
inc
hlt
dec
pop
pop
mov
dec
xor
inc
loop
mov
dec
sti
sbb
clc
mov
inc
sar
pop
add
mov
mov
sub
in
push
mov
(bad)
dec
push
loopne
xor
xchg
mov
adc
jne
push
adc
and
or
adc
add
fsubr
mov
cmc
retf
xor
jne
mov
dec
es
out
inc
mov
cmps
pop
loopne
or
sar
loopne
aas
ja
adc
cs
lock
pop
pop
lahf
popa
mov
ret
cmp
lds
lods
lahf
and
mov
push
gs
fdiv
add
sub
sub
dec
aas
and
cmp
xchg
jp
ins
ins
xor
push
dec
push
jb
aam
jle
push
(bad)
sub
mov
stos
repz
xor
inc
push
or
jp
ret
fnstsw
inc
and
add
ret
or
lock
jge
cmp
fcmovnu
repz
icebp
loop
pop
loopne
add
cli
pusha
shl
add
rcl
or
fcom
jno
test
add
das
and
ins
and
mov
xchg
sbb
jl
push
in
rcr
push
(bad)
fistp
jbe
xchg
loope
dec
scas
mov
jle
popf
aad
inc
cwde
and
ins
sub
jge
shl
sbb
ds
mov
pop
xchg
pop
cmps
leave
add
cld
movs
adc
and
push
inc
clc
jb
mov
inc
ret
shl
mov
push
cwde
and
or
mov
scas
and
sti
shl
pop
jbe
mov
hlt
and
(bad)
ja
stos
loope
or
mov
xchg
xor
jbe
retf
sbb
push
pop
test
jle
cli
stc
push
adc
mov
(bad)
adc
push
mov
mov
scas
sub
jb
or
cdq
adc
cli
fs
inc
xchg
div
cmps
shr
add
sbb
jmp
iret
cli
mov
aad
icebp
ret
add
xor
test
jb
sar
mov
mov
je
aam
mov
sbb
enter
mov
pop
and
cmp
mov
aam
icebp
es
cmps
jge
mov
out
in
mov
mov
adc
pop
or
scas
sbb
dec
adc
xor
jbe
cmp
dec
inc
jo
repnz
jmp
xor
mov
sbb
mov
dec
lds
dec
loope
movs
sub
bound
pop
mov
add
xchg
popf
mov
lds
arpl
mov
xchg
pushf
cmp
(bad)
dec
cmps
cmp
das
pop
sbb
in
ja
inc
pop
test
mov
dec
and
popf
adc
repnz
sbb
cld
sti
mov
or
inc
test
test
jne
in
xchg
nop
xchg
lds
push
icebp
icebp
inc
jne
xor
mov
shl
cmps
ins
int3
sbb
mov
add
fwait
and
lock
fs
jae
mul
jne
inc
(bad)
jns
inc
pop
adc
cwde
mov
hlt
shl
stc
lods
dec
pop
mov
push
xor
sub
push
inc
add
daa
cwde
movs
mov
test
mov
sub
and
cmp
lods
loope
loopne
dec
cmps
pop
sbb
jl
movs
add
scas
inc
retf
(bad)
pop
cld
aaa
inc
fwait
xchg
adc
push
hlt
push
out
test
mul
push
jge
arpl
stos
pushf
js
scas
jge
pusha
jb
call
jg
in
jno
pushw
or
call
add
push
inc
in
int3
call
xchg
out
mov
mov
(bad)
shl
mov
loop
iret
fisttp
or
push
test
(bad)
shl
dec
push
ins
aad
sbb
inc
cwde
sbb
aam
sub
cdq
bnd
and
jecxz
mov
into
mov
aaa
rcr
imul
xchg
adc
jmp
dec
iret
and
xor
mov
fisttp
out
xchg
sbb
adc
outs
repz
sub
lea
mov
movs
out
pop
mov
jno
loope
call
int
jbe
sbb
push
push
ss
jns
mov
jmp
mov
stos
push
sbb
rol
imul
sub
xchg
into
jle
mov
test
push
push
popf
je
mov
jmp
cdq
pop
add
jbe
add
test
enter
mov
(bad)
jl
dec
cmp
dec
jbe
jne
call
std
xchg
scas
das
enter
adc
call
dec
push
pop
mov
xlat
addr16
loop
outs
loopne
movs
nop
sti
pop
mov
fdivrp
imul
fimul
shl
jmp
sub
inc
dec
imul
push
mov
sub
or
dec
dec
clc
rcr
lahf
inc
loope
xchg
jmp
dec
sub
mov
sub
cmp
dec
mov
fisubr
pop
ja
jl
imul
pop
mov
mov
mov
adc
sub
or
js
sbb
inc
loop
xor
cld
inc
mov
sbb
xchg
inc
outs
add
and
mov
jge
mov
fadd
sbb
push
outs
xchg
rcl
jns
scas
or
test
test
push
sbb
inc
xchg
inc
psubsb
pop
xor
in
inc
push
jmp
dec
fisubr
mov
jne
hlt
mov
mov
fisub
psrlq
inc
sysexit
or
mov
es
mov
cld
pop
scas
data16
call
xchg
aad
mov
inc
add
hlt
jb
cmp
inc
xchg
stc
mov
daa
stos
repz
in
mov
pop
lds
cmp
adc
pop
ret
imul
out
xchg
jb
mov
ficom
pop
fnstenv
jno
loope
sti
les
outs
cmp
ja
xorps
ja
xor
mov
cmps
fld
lahf
xlat
js
ret
clc
xchg
adc
jo
mov
ret
cli
movs
and
pop
scas
clc
add
sbb
ins
mov
dec
or
sar
xor
pop
call
sub
scas
ror
outs
cs
imul
imul
clc
mov
loopne
mov
push
stos
jo
mov
cmc
int3
shr
enter
push
pop
fst
lock
and
jmp
into
sahf
jne
ds
mov
scas
sar
test
dec
test
sub
and
scas
nop
xchg
cmp
mov
xchg
push
inc
dec
jnp
push
clc
jecxz
sub
cmp
enter
repnz
add
ins
jmp
(bad)
int3
mov
outs
cmps
mov
add
dec
ds
in
lods
sbb
or
mov
dec
push
inc
test
pusha
or
sub
sti
stc
push
fdivp
mov
mov
add
mov
daa
xchg
push
in
fdivr
ret
in
je
inc
jmp
sbb
or
dec
test
pop
dec
call
push
aas
aad
stos
fist
add
sbb
ins
xor
iret
and
xchg
xlat
ins
scas
jp
ds
sti
(bad)
lds
(bad)
and
or
adc
bound
inc
or
ror
retf
mov
aas
ja
cmp
mov
outs
cmp
sbb
dec
leave
push
push
sbb
jns
or
shr
repz
cmp
(bad)
leave
add
jno
pushf
pop
nop
icebp
ja
cmps
cmp
sbb
inc
mov
fmul
pop
retf
jns
test
sub
stos
pop
fsqrt
adc
push
and
ins
mov
icebp
push
jmp
iret
or
mov
mov
aas
hlt
add
or
loopne
sahf
adc
jno
lods
mov
scas
jb
pop
test
outs
mov
sar
pusha
sahf
ins
test
psubsw
mov
xor
lahf
adc
push
pusha
pop
scas
pop
push
rcr
xchg
paddb
cmps
ret
test
aaa
sti
data16
push
das
or
movs
fistp
xchg
mov
dec
scas
push
mov
addr16
in
or
fistp
push
scas
lock
sar
mov
ss
movs
mov
cld
adc
popf
sahf
mov
int3
pavgb
fsub
pop
leave
rcl
mov
pop
lahf
adc
push
push
adc
xor
lods
popf
cs
outs
mov
pushf
sub
push
dec
sbb
xchg
gs
mov
pop
addr16
jmp
cmc
add
jmp
adc
imul
psubd
adc
loop
sbb
dec
aas
xchg
inc
add
sbb
bound
into
scas
add
jbe
popa
sbb
inc
cmp
jnp
ins
(bad)
push
push
out
arpl
mov
loope
retf
pushf
repz
dec
dec
dec
stos
cmc
std
out
sbb
pushf
hlt
das
cmp
mov
movs
cld
dec
jmp
retf
das
jecxz
ja
test
scas
push
push
std
dec
enter
sahf
cli
ins
paddusw
imul
push
xlat
push
sub
daa
mov
push
int3
imul
test
imul
fidivr
xchg
loope
shr
(bad)
call
scas
jmp
xchg
push
sbb
jae
xchg
add
hlt
ss
mov
lods
sub
xor
fwait
sub
aam
mov
add
sbb
mov
sub
or
mov
mov
inc
push
js
ss
pop
pop
mov
stos
mov
out
popa
mov
adc
fsub
aad
fwait
mov
mov
je
push
ret
imul
test
pop
add
add
jmp
pop
outs
or
add
lahf
and
lahf
xor
jne
xchg
pop
dec
xor
aam
push
dec
cld
dec
inc
xor
pop
das
xor
adc
mov
cdq
add
sub
mov
cmc
xchg
dec
push
test
jle
in
test
repz
mov
xor
fiadd
(bad)
jnp
mov
mov
jae
mov
popf
cmc
loop
mov
mov
jns
sub
push
mov
jmp
ins
outs
push
movs
icebp
stos
sub
cwde
retf
int
xadd
or
mov
pop
xor
push
hlt
ror
lods
pop
ja
pop
jmp
pop
outs
nop
xor
mov
out
adc
jb
hlt
inc
hlt
sbb
mov
call
nop
das
arpl
nop
cmp
(bad)
xchg
lock
push
cli
movs
push
or
mov
xchg
fcom
(bad)
mov
add
xor
jno
inc
pop
cmp
mov
sbb
pop
jecxz
sbb
jmp
adc
inc
scas
mov
and
inc
(bad)
bound
pusha
popa
jp
jns
mov
mov
adc
bound
cmp
push
xchg
mov
in
jmp
xlat
js
cmc
mov
xor
inc
jecxz
cld
popf
ficomp
rcl
dec
movs
xor
scas
cmps
mov
test
aaa
push
mov
dec
cmps
out
stos
aaa
(bad)
test
mov
inc
mov
loope
jp
cmp
popa
call
cmp
sbb
sbb
xor
or
xor
sub
mov
adc
xor
les
arpl
mov
mov
cld
inc
loopne
mov
mov
push
xchg
aam
sti
imul
sbb
mov
repz
sub
loop
jns
pop
les
sub
pop
cs
jmp
sub
pop
ds
outs
xor
cmp
gs
call
add
loop
clc
adc
jnp
push
mov
test
sti
arpl
sti
xor
or
or
retf
fs
add
inc
or
shl
inc
push
outs
imul
aad
aam
int3
cli
adc
sub
mov
xor
add
xor
and
mov
push
adc
xor
pop
mov
mov
xchg
cmp
into
ret
jle
mov
or
push
dec
ss
mov
in
aad
repz
inc
pop
(bad)
mov
das
outs
stos
pop
into
fmul
mov
inc
(bad)
ins
pop
xor
sar
scas
stos
jne
cmp
(bad)
jbe
push
adc
push
xchg
xor
xor
dec
imul
push
inc
sub
call
jecxz
fist
js
jp
jmp
push
push
mov
push
inc
or
ins
leave
push
sub
pushf
enter
pop
lods
or
scas
push
div
aas
cmp
clc
sti
gs
inc
dec
sub
call
ret
push
cmp
leave
sbb
jmp
inc
fsubr
aam
cmc
and
rcl
stos
fdiv
mov
loopne
inc
dec
sar
jl
xor
clc
add
(bad)
xor
cmp
inc
stos
mov
pop
pop
add
aas
push
fdiv
or
ds
xchg
pushf
not
rcl
adc
pop
xchg
shr
in
retf
ins
mov
in
cmps
pop
lods
xchg
xor
push
outs
inc
jne
enter
loopne
xor
mov
fcomip
leave
adc
inc
jmp
mov
(bad)
jmp
xor
mov
dec
lea
dec
xchg
jmp
jo
pop
inc
or
cwde
sub
inc
int3
enter
pop
push
dec
scas
pop
adc
stos
sbb
mov
call
sbb
outs
mov
jnp
add
gs
push
jae
lahf
pop
cmp
(bad)
xchg
into
inc
scas
mov
dec
test
in
adc
cmp
fnsave
mov
loop
sub
xchg
gs
test
cmp
dec
pop
div
into
mov
adc
pop
add
dec
aas
retf
repnz
retf
or
sub
dec
dec
inc
or
popa
or
mov
in
sub
mov
stos
cmp
push
shl
ss
pop
xor
jo
cdq
adc
push
(bad)
scas
add
gs
add
fdiv
test
ins
sti
jmp
rcl
xor
cmp
outs
jae
push
out
test
loop
xchg
sbb
mov
int3
add
mov
nop
cmps
fisttp
shr
and
xor
push
movs
sbb
or
mov
sub
cli
stos
push
mov
xor
test
fisttp
add
pop
jns
hlt
add
inc
arpl
cmp
out
sub
fsubr
add
mov
or
jbe
sbb
(bad)
fstp
pop
sar
xchg
xor
and
out
frstor
arpl
jae
xchg
add
push
in
sub
jp
(bad)
in
je
cmps
cmp
repnz
xor
mov
or
test
je
cmp
loope
rep
mov
sub
ret
mov
es
pop
daa
hlt
inc
mov
clc
jecxz
(bad)
jo
je
sbb
sub
cmps
aam
jge
inc
sar
fadd
xor
cs
or
je
lock
jo
retf
inc
in
lods
mov
imul
dec
test
push
xor
cmc
jmp
mov
retf
fcom
les
(bad)
adc
sbb
mov
cwde
test
repz
hlt
sub
add
sub
push
rcr
cdq
or
add
mov
mov
mov
xor
or
jno
sar
sti
in
cmp
push
mov
js
scas
dec
xchg
in
xchg
std
enter
mov
push
jbe
cld
pop
and
pop
push
daa
sub
pop
add
outs
and
sti
lods
mov
push
push
pop
shl
adc
mov
mov
inc
fsub
mov
les
mov
enter
cwde
mov
ror
or
icebp
or
retf
xor
shr
out
adc
mov
cli
ret
lea
jge
mov
ret
push
adc
cwde
and
stos
jo
inc
mov
cmp
xor
into
ins
arpl
outs
and
push
and
icebp
jne
xchg
mov
dec
push
jecxz
inc
push
sub
jl
cmp
leave
out
mov
mov
pushf
(bad)
in
mov
jbe
adc
hlt
mov
inc
das
test
mov
(bad)
pop
cmp
outs
(bad)
cmc
daa
cmp
add
ror
mov
dec
inc
add
ret
xor
mov
push
push
jae
jecxz
jmp
dec
mov
adc
in
dec
xor
dec
cs
mov
hlt
jmp
das
adc
xchg
mov
aam
fidivr
popf
sbb
inc
aam
push
dec
push
push
daa
rol
adc
jg
push
push
jno
dec
out
stos
(bad)
outs
das
add
ret
(bad)
push
push
jns
call
dec
loope
mov
ret
jmp
jne
pop
sbb
arpl
mov
in
mov
ins
lods
sbb
cmp
pushf
and
hlt
or
fs
sbb
ret
mov
sub
call
repnz
push
adc
int3
addr16
sub
pop
mov
addr16
jle
pop
and
mov
sub
test
std
dec
and
xchg
mov
movs
xor
xchg
add
sbb
fcmove
adc
cld
mov
out
dec
cmp
(bad)
xchg
add
mov
mov
jmp
push
js
mov
jnp
push
ret
inc
jb
sbb
jb
es
ret
push
bound
or
xchg
(bad)
add
iret
iret
jne
cmp
sbb
sahf
movs
jl
adc
inc
out
imul
mov
imul
aaa
push
xor
iret
jnp
js
int
sar
xchg
mov
and
ret
aam
jmp
sbb
nop
sub
lea
pop
push
push
add
push
adc
and
int3
inc
inc
in
sar
or
cld
and
or
ret
test
add
jg
popa
mov
dec
mov
inc
add
std
adc
aas
jno
jl
xchg
(bad)
fstp
dec
shl
cmp
test
addr16
cmp
rcr
pop
dec
movs
pop
movs
test
push
xor
jecxz
shl
sahf
sub
or
cmp
(bad)
jmp
jl
jge
push
mov
sub
std
test
push
mov
sbb
cmc
shl
lahf
js
xchg
or
xchg
xchg
adc
pop
inc
mov
pop
aas
mov
js
sbb
fdivr
xchg
and
mov
sub
mov
pop
mov
add
cwde
cs
sub
cmps
pop
dec
adc
jg
and
mov
push
xor
mov
repnz
pop
in
pop
sub
pop
test
retf
je
adc
mov
mov
ins
cmp
cmps
dec
push
pop
dec
pop
les
pop
inc
sti
sbb
jl
cmp
movs
adc
add
mov
xchg
in
in
mov
cmp
mov
add
dec
or
ss
pop
je
pop
ss
pop
push
loope
cmp
(bad)
not
push
je
jecxz
inc
cmp
vsubsd
cmp
add
dec
xlat
pop
push
and
or
pusha
out
retf
lods
add
add
adc
adc
lods
sub
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
cmps
or
or
iret
xchg
pop
(bad)
and
adc
not
dec
movs
mov
call
mov
inc
mov
out
mov
aam
adc
inc
push
sti
jle
mov
sub
mov
inc
(bad)
pop
aam
pop
adc
push
popf
(bad)
sti
mov
sub
adc
add
dec
shl
or
ja
or
mov
add
inc
sar
push
inc
mov
dec
jge
faddp
adc
mov
mov
aam
(bad)
xchg
pop
daa
jnp
iret
call
hlt
out
dec
out
mov
shr
dec
sbb
cmp
pushf
shr
aad
(bad)
adc
mov
lea
cmp
inc
sbb
xchg
xor
movs
xor
inc
or
sbb
push
fcmove
sbb
sahf
push
je
cs
es
sbb
jnp
cmp
cmp
mov
xchg
das
rcr
add
popa
xchg
inc
dec
xchg
fistp
jb
clc
cli
retf
ins
lock
ficomp
cmps
in
fdiv
jmp
in
iret
cs
sub
inc
bound
adc
cdq
mov
jge
mov
and
jne
cmp
xchg
test
push
jno
movs
jb
imul
mov
ins
mov
sub
out
into
xchg
les
mov
arpl
retf
dec
push
int3
xchg
jne
jl
xlat
enter
int3
clc
dec
js
mov
mov
pusha
xor
push
cmp
jno
xor
or
pop
fadd
mov
add
sbb
adc
in
cmp
pop
xchg
call
adc
pop
fs
icebp
mov
out
inc
mov
scas
pop
out
add
arpl
popf
mov
dec
cmp
pop
adc
adc
inc
mov
dec
jmp
pop
ret
mov
cli
fisttp
ds
push
push
pmuludq
mov
mov
jg
jmp
dec
ret
mov
imul
xor
nop
push
idiv
data16
fisub
call
mov
xchg
jb
mov
enter
add
ret
mov
in
adc
or
outs
lahf
add
in
aas
test
or
sbb
jb
jne
std
mov
xchg
xchg
lods
adc
iret
mov
pop
mov
xor
xlat
dec
cmp
sbb
or
js
or
adc
(bad)
xor
imul
lea
jnp
sbb
jge
add
es
rcl
lods
mov
adc
cs
out
xlat
jnp
sub
mov
mov
adc
dec
inc
sub
cli
hlt
push
jmp
out
(bad)
mov
loopne
sub
ins
pop
push
adc
lea
add
jge
mov
outs
scas
test
sbb
push
push
mov
pop
mov
inc
push
cmp
xchg
ret
dec
sub
fldz
daa
adc
fmul
ror
jnp
jle
mov
aaa
sbb
in
jmp
xchg
mov
(bad)
jmp
and
jae
dec
jl
shl
mov
adc
and
(bad)
sbb
add
test
push
adc
cdq
push
loope
add
lea
std
rcr
call
pop
or
retf
ins
xchg
mov
in
dec
jp
lea
sub
mov
and
inc
mov
sti
and
daa
mov
das
or
movs
repnz
inc
pop
and
fdiv
scas
test
loope
and
inc
dec
and
or
jmp
jno
(bad)
pusha
cs
out
jle
sub
adc
shl
jge
aaa
fldcw
adc
mov
push
push
sub
pop
(bad)
retf
xchg
cmp
pusha
gs
rol
and
xchg
ins
out
std
push
out
xchg
cli
cmps
xor
push
pop
dec
into
cs
(bad)
xlat
mov
sub
or
movs
test
and
mov
sub
jno
fild
scas
nop
jne
(bad)
les
jp
mov
les
repz
test
sub
sub
sbb
scas
sbb
cmc
repz
add
cmp
add
int
aaa
inc
cmp
rcl
popf
add
pop
aaa
mov
mov
lods
(bad)
sub
push
xchg
jae
pop
aad
das
inc
iret
mov
add
dec
sti
jbe
sub
js
adc
dec
cmps
mov
pop
xor
and
push
(bad)
push
sub
popf
lods
fxch
in
ds
mov
jecxz
test
mov
mov
out
pop
nop
jle
xchg
xchg
arpl
dec
inc
js
cli
stos
retf
pop
cmp
mov
and
jne
jmp
arpl
mov
sahf
les
clc
mov
push
dec
in
dec
lahf
aam
and
cld
inc
cs
aam
inc
mov
jmp
div
dec
mov
or
ret
fnstsw
push
popa
bound
loopne
stos
mov
enter
ds
xor
in
mov
mov
adc
xor
cmps
rcl
retf
sahf
into
jl
lock
fwait
push
mov
inc
jmp
mov
gs
cmp
sub
jl
mov
jecxz
xchg
sbb
xlat
cmp
pop
pop
cwde
ret
xchg
inc
ret
push
mov
imul
std
mov
fild
in
(bad)
popa
mov
mov
cdq
aaa
adc
or
cwde
clc
rol
ja
mov
pop
data16
dec
jg
movs
mov
sti
dec
cmps
xor
ins
retf
cdq
mov
add
xor
mov
mov
icebp
sbb
shl
adc
ja
jae
or
(bad)
fsub
mov
stos
loop
das
cwde
stos
fnstsw
fcomp
and
add
pop
mov
imul
xchg
adc
in
nop
enter
add
data16
in
ja
mov
aam
push
sbb
sub
das
fst
out
push
sbb
fst
adc
push
xor
push
loop
or
push
adc
mov
inc
or
xor
cmp
sub
sub
inc
mov
xor
(bad)
iret
push
push
add
add
cmc
pop
and
cmp
dec
cmps
int
aaa
mov
and
sub
adc
mov
cs
mov
mov
pop
ret
push
adc
ins
loopne
ins
jp
jecxz
mov
pop
or
push
jmp
dec
test
frstor
mov
add
inc
jp
sbb
int
adc
mov
aad
(bad)
call
push
lds
ret
add
jle
pusha
fs
mov
shl
dec
adc
xchg
pop
ror
cmps
or
(bad)
or
outs
arpl
loop
(bad)
call
scas
mov
stos
xlat
movs
rol
loopne
sub
sbb
dec
sahf
sbb
fmul
sub
jmp
fsub
in
es
pop
xchg
lds
fist
nop
outs
push
xlat
or
sbb
cmp
mov
in
enter
mov
mov
push
add
gs
or
mov
outs
jns
mov
push
retf
xchg
jle
jg
push
lahf
mov
jp
test
and
inc
cwde
(bad)
mov
(bad)
mov
dec
mov
in
loopne
adc
js
jg
ins
sbb
lods
xor
sub
push
stc
jmp
out
aaa
jge
mov
push
mov
sti
ins
cmps
es
in
sahf
or
neg
mov
xor
pop
or
xchg
ins
repz
xor
or
or
mov
adc
mov
repnz
test
cmps
sub
sbb
rcr
mov
xchg
pushf
into
inc
cmp
or
or
movs
sub
adc
push
movs
enter
mov
inc
cmp
movs
mov
lea
cmp
adc
rcr
cmp
mov
cmp
(bad)
fisubr
inc
push
jmp
out
cwde
icebp
ror
inc
mov
cdq
fidiv
sub
jmp
fwait
outs
aad
push
mov
cmp
mov
add
push
sbb
cmps
add
sbb
les
jmp
xor
(bad)
call
mov
add
cmps
push
sub
les
adc
push
push
je
mov
cdq
(bad)
cmps
pop
mov
and
cmps
js
add
jo
popa
jmp
std
jnp
in
cmp
call
jae
call
sar
fld
stos
and
shl
dec
call
mov
jns
retf
inc
mov
sahf
out
aaa
xchg
inc
popa
jnp
call
loope
jmp
gs
fimul
jno
and
mov
lock
(bad)
xor
xlat
popa
pop
fld
psubsb
jmp
sbb
stc
pop
sbb
daa
jo
mov
and
cld
or
or
add
xor
push
test
lea
ins
or
int
or
jns
push
mov
or
ret
mov
xor
es
mov
cmp
push
clc
sbb
out
jp
dec
out
repnz
mov
mov
(bad)
es
lock
scas
es
data16
jb
push
test
(bad)
retf
ror
jbe
popa
clc
and
ins
push
repz
inc
js
add
jno
push
mov
pusha
imul
sar
imul
push
xor
mov
add
fsub
retf
push
cmp
push
les
fidiv
xor
pop
pop
inc
mov
mov
cmc
cmp
pusha
cmp
jo
push
inc
sub
sub
cwde
in
rol
cmps
xor
and
repnz
jb
cmps
leave
ins
(bad)
outs
aad
or
mov
jb
int
lahf
test
ins
xchg
add
movs
iret
popf
cmp
not
bound
push
das
cwde
clc
add
add
xchg
dec
test
icebp
mov
stos
arpl
fnstsw
in
repz
cli
ja
fist
mov
shr
call
dec
pop
ror
cdq
les
or
pop
dec
sub
mov
out
or
xor
imul
mov
push
ret
aad
and
or
cdq
push
dec
gs
(bad)
(bad)
push
push
leave
(bad)
cdq
xchg
sbb
cmps
mov
ret
sbb
push
and
or
pop
mov
call
ret
cmp
push
sbb
push
retf
sub
push
jno
test
adc
(bad)
lahf
add
mov
mov
mov
pop
jp
sbb
cli
leave
xor
mov
mov
(bad)
pop
cli
mov
mov
cld
das
je
push
or
mov
repnz
xor
sub
jmp
(bad)
(bad)
clc
(bad)
rcr
dec
mov
stos
pushf
fild
xlat
hlt
sub
mov
inc
rcr
js
inc
add
xor
add
jnp
rcr
pop
inc
ror
js
call
mov
icebp
fst
test
mov
int
and
cs
test
add
pop
cmp
gs
add
hlt
clc
das
jmp
adc
inc
fdiv
loopne
mov
pop
pop
mov
jecxz
div
pop
pop
mov
je
xlat
and
pop
movs
(bad)
mov
test
jg
jp
std
lds
xchg
js
cli
ds
add
test
(bad)
outs
std
and
push
pop
mov
xchg
and
test
ds
push
sub
mov
cmc
mov
loopne
movs
ret
inc
dec
cmc
retf
mov
stos
fld
cmc
fbstp
fistp
push
mov
pop
or
movs
aam
push
inc
pop
mov
popf
data16
cmc
pop
sub
or
in
sar
lahf
or
cli
sbb
mov
das
addr16
push
test
xchg
pop
and
or
mov
lahf
pop
aas
adc
push
jo
outs
inc
mov
xor
xor
jp
sub
jnp
jmp
or
push
inc
pop
jno
or
pop
(bad)
jns
pop
repz
mov
mov
fcmovnbe
mov
pop
mov
leave
and
jmp
xchg
movs
xchg
call
loopne
sub
mov
sub
enter
dec
pop
inc
xor
push
stos
stc
cwde
fstp
or
movs
dec
ret
adc
in
ins
ficom
lea
mov
mov
or
xor
inc
stos
push
mov
inc
mov
xchg
pop
lock
ret
js
cmc
xchg
cmps
ins
jne
dec
sbb
jmp
rcr
sbb
mov
mov
mov
mov
push
les
jge
and
pusha
aaa
add
xor
adc
mov
stos
data16
xor
dec
mov
repnz
or
mov
fs
inc
cdq
js
rol
push
mov
call
adc
test
repz
push
test
mov
icebp
(bad)
in
push
arpl
scas
xlat
out
add
sub
test
push
inc
pop
cdq
loope
xchg
dec
jmp
rol
pop
inc
xchg
cmp
ficomp
adc
push
xchg
inc
pop
jne
inc
add
int3
mov
cs
cmps
jbe
push
test
pop
xor
call
nop
lock
add
mov
jmp
jge
mov
cmc
xor
inc
(bad)
mov
cld
jae
cdq
or
ret
dec
lods
adc
mov
adc
imul
clc
outs
fwait
add
aaa
daa
daa
ret
test
xchg
mov
jmp
sub
mov
test
jecxz
jle
dec
out
mov
mov
cmp
xor
inc
aaa
sub
outs
or
dec
add
(bad)
sub
jl
pusha
mov
retf
(bad)
xor
in
lock
mov
int3
cmc
push
popf
cdq
aad
ins
arpl
ins
push
sti
add
jae
xchg
cli
dec
push
out
bound
mov
jmp
sub
xor
pop
xchg
sbb
sub
sbb
stos
ds
xchg
jns
shl
mov
push
mov
sbb
mov
fs
jnp
lods
sub
movs
mov
pop
push
sub
inc
test
adc
lods
cmc
inc
jmp
xchg
ins
xchg
sbb
mov
loopne
cmps
add
aaa
idiv
adc
jo
push
jp
mov
inc
cdq
xor
sbb
mov
mov
ins
shl
jmp
call
sub
sahf
or
jae
es
popa
je
mov
adc
sbb
in
out
pop
jmp
xchg
fistp
daa
pop
mov
mov
repz
xchg
push
pop
jno
add
adc
push
xchg
jmp
pushf
sbb
neg
mov
lods
mov
push
jne
cmp
pop
mov
lock
lock
ror
cmp
gs
jmp
xor
mov
fs
dec
das
or
add
ret
and
pop
push
inc
dec
push
cwde
hlt
cmovg
cmp
fwait
push
mov
dec
adc
leave
jbe
cld
shl
ficom
dec
cmp
ins
icebp
or
vpmaxub
test
mov
ds
adc
pop
(bad)
mov
or
pop
rol
test
inc
jnp
sahf
xchg
(bad)
pushf
cdq
mov
jl
test
cdq
cmp
js
into
xor
into
shr
adc
cli
and
pop
jb
out
test
popa
mov
mov
mov
jnp
ja
dec
das
inc
pop
hlt
(bad)
cmp
xchg
pop
retf
mov
(bad)
cmp
pop
ds
mov
adc
pusha
push
cmp
adc
dec
aas
add
push
push
xor
fistp
dec
jg
jg
aaa
xchg
xchg
or
(bad)
movs
stc
sub
repnz
stc
mov
pop
jg
jecxz
cmps
movs
jnp
cmp
adc
xchg
sub
push
cdq
push
jp
fwait
lahf
dec
adc
repz
aam
mov
dec
mov
imul
pushf
mov
icebp
sub
and
jg
pop
cmp
(bad)
jne
jle
bound
fild
sbb
sub
inc
fisub
mov
sub
mov
aad
cmp
int
retf
fadd
or
xor
push
lock
cdq
pushf
dec
ins
addr16
fnsave
cmp
push
jno
add
mov
arpl
mov
popf
cmp
fisubr
hlt
inc
mov
(bad)
bound
ret
stc
jmp
xchg
xchg
addr16
and
les
movs
lods
retf
xchg
dec
lahf
in
cld
inc
cmp
aad
adc
mov
mov
dec
sbb
adc
out
retf
push
data16
mov
or
push
pop
mov
push
cmc
idiv
pushf
js
dec
das
fsub
aad
bound
int
and
jmp
cli
jg
jbe
jmp
pushf
aad
aad
sar
ja
and
dec
sbb
fcomp
jnp
lahf
pop
and
daa
fistp
inc
xchg
aaa
xor
fwait
cmp
and
stc
je
pusha
adc
or
cmp
and
movs
push
mov
mov
mov
test
inc
push
pop
jg
lahf
cli
add
ins
repnz
push
or
jnp
scas
out
push
aas
loop
sbb
fdivr
movs
xchg
cmps
cmp
mov
scas
and
mov
mov
cmc
fs
dec
mov
inc
sub
lds
sub
(bad)
sub
iret
sti
je
pop
in
mov
aad
or
pop
xchg
repnz
sub
adc
mov
push
lahf
lods
fs
das
mov
or
ss
retf
mov
push
fidiv
je
int3
push
cmp
add
call
push
xor
xchg
(bad)
js
sub
imul
add
pop
cdq
fidiv
xchg
jbe
movs
movs
pusha
nop
test
fimul
sub
mov
mov
mov
mov
or
outs
xchg
dec
test
mov
mov
arpl
retf
in
test
sbb
cmp
(bad)
std
dec
and
movs
mov
scas
mov
and
retf
inc
je
adc
ret
sub
(bad)
jnp
std
push
sub
cmps
ja
outs
in
mov
aaa
call
push
mov
repz
sbb
mov
dec
xchg
sti
push
and
clc
lock
push
mov
sbb
fcomp
and
lods
fdiv
fidivr
mov
(bad)
mov
mov
xor
stc
add
movs
sahf
inc
sub
xchg
jbe
add
push
jle
push
cmp
mov
stc
jp
dec
push
into
mov
jle
shr
mov
pop
lea
sub
mov
jno
jmp
mov
jb
ror
(bad)
mov
bnd
sub
(bad)
in
test
inc
rol
mov
cmps
sub
shl
mov
mov
xchg
adc
inc
jmp
sub
in
pop
test
movs
nop
cli
or
push
or
loope
cdq
mov
add
or
imul
mov
mov
sahf
mov
ds
or
pop
mov
stos
ds
and
daa
jl
call
and
bound
loope
sbb
lds
xor
into
push
dec
jp
jp
mov
pop
cld
push
mov
ret
mov
add
adc
and
(bad)
sub
mov
adc
test
push
mov
(bad)
push
ret
xor
xchg
in
shl
sub
adc
retf
inc
test
adc
or
mov
cmc
cmp
inc
and
out
test
inc
aam
cmp
jb
sub
add
xchg
xchg
sub
mov
xchg
sub
sbb
sbb
lahf
mov
aas
mov
mov
mul
adc
inc
or
in
rol
mov
aaa
mov
and
cdq
ds
mov
loopne
dec
xchg
or
js
int3
rcr
mov
mov
xchg
std
and
pop
sbb
ins
ret
(bad)
push
inc
and
int
ins
das
push
push
loop
pusha
push
neg
pop
das
out
stos
xlat
mov
fld
daa
cmp
mov
outs
call
push
fwait
mov
mov
loop
repnz
mov
xor
ret
sbb
pop
jbe
in
out
outs
mov
adc
fwait
push
mov
add
jne
mov
inc
mov
out
cmc
stos
mov
ds
mov
adc
fwait
xor
xor
mov
ret
or
inc
test
and
nop
rcr
lea
xor
pop
fisubr
neg
jmp
(bad)
xchg
pop
ret
jnp
pop
xchg
pop
push
out
push
xor
ins
in
inc
mov
xor
iret
std
push
je
(bad)
cmp
ds
inc
xor
test
call
or
xor
fisub
neg
adc
sub
or
and
lahf
daa
add
in
cmps
mov
daa
or
mov
mov
scas
cld
or
icebp
in
jno
movs
shl
aaa
dec
pop
call
xor
jp
movs
stos
retf
data16
aad
outs
out
mov
cmp
push
jp
call
pop
jp
xchg
xor
int
xor
xchg
pop
jae
aam
jbe
xor
iret
xchg
mul
push
lock
rcl
and
fld
stos
gs
ins
or
xor
or
mov
pusha
push
and
push
mov
in
cmps
add
mov
jnp
jae
xor
xchg
loope
dec
adc
mul
out
pop
sbb
shl
fdivrp
and
push
rcr
cli
(bad)
mov
adc
or
inc
jno
bound
out
mov
push
imul
scas
nop
movs
sub
outs
xchg
hlt
inc
bound
ret
mov
rcr
add
dec
mov
push
in
add
pop
cwde
clc
mov
lock
mov
into
fwait
jae
xchg
neg
test
cld
xchg
ds
dec
int3
es
dec
pop
jmp
mov
or
rcl
cld
jmp
and
pop
or
bound
add
mov
cmp
xchg
push
jp
push
into
repz
iret
enter
push
in
inc
mov
push
out
sbb
mov
cmp
and
or
push
scas
clc
adc
jge
fnsave
add
test
movs
out
movs
aam
xor
jmp
fld
dec
sub
pop
jle
stos
xchg
loopne
ins
sub
js
test
jnp
sar
(bad)
iret
jae
int
stc
sub
gs
cdq
push
add
pop
in
and
push
clc
push
stos
or
aad
adc
je
xor
lds
sbb
mov
jnp
dec
cdq
push
ds
sbb
xchg
sub
mov
cmp
imul
sbb
jle
mov
clc
sbb
push
dec
es
(bad)
xor
stos
test
mov
imul
mov
dec
jle
dec
punpckhbw
jmp
fstp
and
mov
in
aas
sub
add
mov
mov
imul
mov
outs
pop
(bad)
lock
es
repnz
fdivr
push
imul
lock
stos
mov
fcmovbe
mov
mov
fwait
sub
imul
ret
push
inc
dec
push
dec
loopne
push
out
clc
outs
xor
mov
retf
xor
data16
inc
psllq
mov
xlat
add
jno
vmread
sbb
adc
lock
mov
pop
pop
sbb
dec
xchg
jnp
push
aas
stos
dec
push
fimul
fsubrp
outs
(bad)
in
and
dec
dec
cmc
ror
jno
out
dec
cmp
loope
add
add
mov
fist
or
jnp
ins
push
inc
bound
dec
adc
fnstsw
test
aad
test
sahf
xor
sbb
loope
icebp
int3
hlt
cdq
iret
sub
aaa
pop
jbe
xor
imul
jns
pop
sbb
jae
sbb
jne
push
mov
or
int3
div
jo
jecxz
adc
pop
or
pop
mov
or
outs
xor
xchg
push
jle
test
aaa
pop
(bad)
pop
jae
outs
push
mov
add
sub
inc
lahf
icebp
pop
jmp
jne
popf
pop
test
jecxz
test
outs
rcr
add
movs
jnp
jp
inc
cmp
fcomp
push
cld
lds
mov
and
and
out
retf
or
mov
pushf
mov
stc
loop
jl
outs
dec
inc
cdq
es
adc
cli
mov
inc
xor
mov
ins
cli
les
fbstp
sub
pop
push
inc
sbb
std
stos
push
xchg
scas
cdq
std
mov
pop
xchg
jns
ret
push
mov
cli
push
sbb
das
dec
retf
ins
into
in
dec
jp
xchg
(bad)
push
ret
(bad)
and
pop
inc
sub
push
dec
leave
fs
add
mov
int3
or
imul
push
fst
idiv
xchg
pop
frstor
inc
hlt
dec
scas
fistp
jge
adc
xchg
sub
inc
inc
in
stc
mov
add
movs
dec
sub
and
jp
dec
stc
mov
xor
int3
xor
push
iretw
dec
ror
lods
leave
xor
int3
ja
or
sbb
or
ret
les
ror
je
les
jecxz
push
test
push
mov
add
mov
ret
xor
mov
push
popf
mov
mov
(bad)
ficom
jl
push
not
adc
cs
xchg
dec
add
lds
ss
dec
push
jne
ret
out
sti
push
inc
pop
ret
mov
xor
iret
pop
cmp
in
ja
cdq
std
shr
aad
test
jne
fnstcw
add
fcmovne
mov
popf
call
inc
js
cmps
mov
shl
mov
dec
mov
sbb
shr
gs
lds
shl
jbe
pop
pop
loope
adc
clc
(bad)
ins
pop
and
cld
leave
or
inc
cmp
fwait
cmp
mov
lock
xlat
cmp
mov
sub
cli
xor
je
sti
pop
lds
push
test
adc
mov
xchg
nop
mov
cmp
movs
adc
push
cmp
push
into
adc
jmp
pop
fs
and
test
push
scas
cmp
and
cmc
shl
dec
mov
pop
retf
push
mov
pop
sbb
out
pop
pushf
cmps
daa
lock
shl
shl
or
jmp
pushf
add
dec
and
mov
ds
xlat
movs
jle
inc
push
jge
dec
sub
cmp
(bad)
(bad)
out
ins
lods
adc
(bad)
xor
sbb
add
ds
add
test
xchg
retf
mov
test
sub
and
sbb
int
push
call
or
cdq
push
mov
mov
outs
lods
fidivr
push
in
adc
xor
push
xlat
shl
call
sub
jge
imul
inc
jbe
bound
stos
add
fstp
ss
test
(bad)
cmps
cmc
pop
xchg
retf
jmp
call
cwde
jl
out
xlat
out
xchg
pop
pushw
nop
outs
leave
add
iret
jl
xor
dec
jl
push
inc
lds
outs
(bad)
pop
mov
lods
ret
les
mov
les
outs
push
iret
xor
das
stos
pop
leave
cmps
fst
cmps
inc
cmp
jmp
fbstp
popa
lahf
mov
mov
sahf
sbb
sub
inc
lock
cld
cmp
pop
sbb
jbe
jmp
in
xchg
jl
pop
leave
jge
push
sbb
mov
xor
adc
or
mov
adc
xchg
repz
or
inc
sub
ins
pusha
fucomp
arpl
out
repnz
xlat
xor
int
in
icebp
pop
cmp
leave
mov
imul
imul
xchg
stc
loope
jmp
dec
xchg
jecxz
shl
stos
dec
jmp
neg
scas
or
mov
or
mov
dec
aam
rol
ins
jae
loopne
sbb
xchg
pop
xchg
inc
hlt
into
and
mov
out
sub
jecxz
in
dec
shl
push
xor
or
addr16
mov
push
jns
jae
mov
xchg
dec
dec
movs
idiv
mov
adc
pop
in
lods
cs
sub
and
data16
fdiv
imul
retf
not
arpl
fmul
sbb
xchg
ds
ret
and
stc
mov
sbb
cmps
sub
inc
aaa
dec
je
inc
fldenv
pop
sbb
sbb
not
stc
inc
(bad)
or
jg
adc
out
sbb
mov
pop
push
or
cmc
sahf
jmp
bndstx
push
xor
inc
jae
rcl
mov
mov
rol
jns
aam
int3
repnz
rol
dec
fst
fnstcw
jmp
out
push
das
dec
adc
dec
dec
cdq
(bad)
(bad)
cwde
mov
inc
adc
popf
cli
and
retf
pop
movs
cld
mov
fist
adc
sar
test
sbb
xor
je
mov
dec
popf
mov
mov
dec
xor
sbb
pop
sbb
repnz
test
push
mov
enter
aaa
mov
fmul
or
push
mov
mov
in
mov
mov
cli
xchg
fsubr
test
pop
stc
adc
stos
push
mov
push
mov
jecxz
jno
in
mov
fsubr
retf
jbe
arpl
test
movsx
stos
aad
jle
jb
lods
in
mov
pusha
test
(bad)
xlat
xchg
fcmovbe
mov
xchg
(bad)
pop
add
xor
jp
pop
aad
std
or
mov
int
mov
mov
xor
push
aaa
pop
ds
and
sub
mov
mov
cmp
js
cwde
les
mov
mov
xchg
adc
rcr
lahf
outs
inc
rcr
fwait
or
fxch
and
into
pop
sub
fdivr
jmp
mov
inc
out
repnz
retf
ins
add
jmp
ret
sub
fucom
lea
ins
pop
in
adc
fisttp
mov
mov
jecxz
dec
std
jp
data16
mov
cmc
sar
pop
sti
push
cmp
mov
imul
outs
daa
in
mov
mov
shr
mov
cmp
shl
mov
push
pop
adc
and
repnz
dec
push
mov
jle
fstp
adc
jp
xchg
sub
arpl
mov
push
and
pushf
adc
jle
ja
and
or
xchg
das
fwait
clc
scas
add
jns
sbb
out
sbb
pop
jbe
or
in
push
aaa
test
sbb
inc
inc
dec
in
loop
add
cmp
sub
mov
sub
push
imul
les
dec
pop
push
dec
gs
xor
call
lods
push
test
mov
fdivr
inc
std
jbe
fist
push
test
std
cli
(bad)
pop
or
cmp
push
sub
push
enter
mov
je
mov
cmp
mov
fcmovbe
pop
or
cmp
mul
aaa
mov
icebp
shr
dec
(bad)
mov
push
outs
mov
cmps
inc
mov
push
push
sub
jbe
sti
xchg
addr16
retf
retf
xor
call
jns
mov
jge
sub
cmp
push
stos
int
scas
dec
cs
les
push
mov
mov
sub
push
cmps
in
push
ss
jnp
mov
jecxz
cdq
repnz
push
or
sub
cmps
adc
ins
jno
and
push
ja
dec
int
mov
stos
xchg
js
arpl
jne
dec
jle
jp
out
movs
xor
xchg
ret
add
cld
mov
lock
jp
and
mov
add
imul
and
add
or
inc
in
sub
bound
dec
pop
rol
inc
or
notrack
sub
call
xor
test
retf
leave
and
inc
cmp
scas
lods
adc
push
outs
into
add
out
push
(bad)
div
ins
ins
cmp
mov
inc
outs
ins
mov
inc
sbb
mov
jmp
outs
sbb
inc
jge
dec
pop
xor
mov
test
mov
jne
ins
pop
dec
or
cwde
lea
adc
dec
add
push
mov
dec
mov
adc
mov
sbb
dec
push
in
dec
push
gs
ds
cdq
lea
popa
xchg
loope
addr16
xchg
ins
in
iret
shl
ja
les
cmp
es
fwait
scas
xchg
scas
cmps
xor
(bad)
cmc
mov
inc
mov
and
and
mov
out
push
inc
aam
add
mov
push
(bad)
dec
in
fbstp
imul
pop
or
into
sbb
(bad)
and
mov
add
sub
sbb
(bad)
dec
fcom
add
lods
or
or
mov
std
cwde
prefetch
fisub
cmp
outs
push
sbb
jmp
rcl
inc
push
into
sub
sbb
(bad)
sahf
mov
inc
xchg
pop
mov
cmp
mov
and
loop
fisubr
pop
mov
mov
inc
out
(bad)
out
jb
jnp
out
stos
mov
mov
xchg
sub
push
das
pop
leave
cld
or
call
lock
lds
dec
cmc
mov
push
mov
xchg
jp
fwait
add
mov
mov
add
or
les
pop
pop
fcomi
ret
sbb
repnz
mov
imul
pop
fcomp
inc
dec
sbb
fisttp
jp
sahf
inc
mov
ds
push
sub
jmp
jecxz
inc
adc
inc
sahf
mov
sub
jb
push
scas
and
dec
test
dec
jge
push
pop
mov
push
test
ins
dec
mul
adc
pop
lods
sub
out
cmp
loop
inc
push
mov
sbb
mov
jecxz
fistp
jnp
addr16
scas
push
pop
rcr
mov
or
retf
test
cs
(bad)
repnz
inc
ret
scas
loopne
inc
std
or
adc
mov
xchg
sahf
out
jo
mov
movs
fisttp
mov
mov
(bad)
loop
and
jmp
into
(bad)
das
mov
jae
out
mov
lods
mov
call
ins
jle
inc
out
add
div
and
out
inc
jmp
adc
ss
nop
fist
sbb
mov
mov
jne
adc
div
or
sbb
push
adc
sbb
adc
mov
sbb
pop
fldenv
mov
dec
(bad)
loop
inc
push
ror
inc
dec
dec
jg
mov
not
pushf
hlt
xchg
enter
fldenv
cmc
mov
push
push
retf
cmp
mov
sahf
das
movs
test
sbb
sbb
mov
les
mov
das
mov
push
cli
jmp
mov
bound
retf
mov
les
mov
inc
jnp
loopne
jle
dec
enter
ins
xor
pop
loopne
xchg
push
mov
pop
ins
jnp
jne
test
mul
fnstcw
stos
mov
ins
mov
scas
pop
fmul
retf
ins
(bad)
cmp
inc
stc
popf
inc
aad
and
jno
xchg
js
sti
xchg
es
inc
jge
in
aas
adc
or
je
jmp
jecxz
or
es
dec
push
fdiv
add
retf
adc
scas
bound
adc
mov
icebp
neg
cmp
test
arpl
imul
cdq
lods
shl
fcomp
imul
xchg
sbb
and
dec
js
xchg
ss
leave
repz
and
repz
sbb
js
retf
loop
ret
sub
test
mov
stos
loope
jge
(bad)
xchg
sbb
mov
ins
iret
adc
jb
or
movs
pop
mov
repz
add
fisub
ss
stos
mov
jmp
pop
mov
ficomp
je
and
rcr
inc
jo
cmp
mov
popa
xchg
cmps
adc
push
(bad)
fbld
pop
sub
int3
cmp
xchg
add
push
rcl
mov
pop
adc
test
cwde
inc
icebp
into
ja
sbb
adc
in
rol
cmp
push
popf
jae
xchg
(bad)
mov
inc
loope
xor
loopne
movs
add
retf
push
cmp
add
bound
js
gs
loope
jns
lahf
mov
jb
fs
cmp
jno
inc
jmp
jmp
sbb
loop
clc
in
sbb
and
jno
push
sbb
inc
mov
(bad)
mov
xchg
mov
(bad)
mov
in
add
cmp
inc
sbb
cs
jmp
inc
xchg
push
ins
test
xor
mov
cmp
nop
inc
mov
out
inc
ds
add
pop
mov
out
jle
lock
mov
dec
iret
std
test
sbb
clc
cmps
div
or
das
mov
xchg
in
imul
jge
mov
or
mov
mov
test
mov
jmp
add
cs
in
imul
fcom
out
push
push
je
push
dec
and
dec
cwde
cmp
adc
pop
xor
mov
lods
mov
lods
into
push
cmp
cmp
out
cmc
jp
ss
sbb
mov
ret
and
mov
pusha
movs
stc
or
jmp
cmps
sahf
repnz
jns
jbe
scas
push
mov
adc
stc
js
and
scas
xlat
xor
push
sub
dec
sbb
imul
push
pop
and
(bad)
cwde
jmp
adc
xlat
dec
adc
push
pop
push
sahf
imul
fbstp
sub
daa
out
or
js
xor
enter
mov
cli
dec
inc
sub
lds
test
xchg
mov
xchg
pop
ror
dec
jg
je
in
pusha
xchg
call
cmc
(bad)
icebp
fsub
adc
add
mov
fxch
mov
cmps
cmc
lods
sub
pushf
cs
or
leave
bound
lahf
and
pop
push
js
neg
dec
inc
sti
xlat
daa
or
adc
push
mov
movs
cmp
popf
jns
and
mov
(bad)
pop
cmp
and
pop
or
sub
call
adc
adc
xchg
mov
mov
jmp
dec
cmp
inc
dec
repz
dec
movs
test
cmp
sbb
pop
sub
fdiv
mov
lock
push
hlt
xchg
push
test
mov
pop
sub
gs
call
add
icebp
or
mov
lock
(bad)
out
pushf
sub
rcr
fwait
pop
loop
xchg
dec
mov
(bad)
iret
adc
in
enter
push
fadd
dec
xor
lock
push
js
cmp
aad
or
cmp
ds
int3
push
and
sub
push
test
ja
sub
inc
jno
(bad)
retf
xor
cmp
test
mov
loopne
les
aas
pop
sbb
add
loope
and
aas
sub
sbb
call
test
mov
dec
or
mov
pop
movs
aas
fdiv
sub
xor
or
std
out
and
mov
mov
jmp
xor
and
and
stc
sbb
xchg
xor
dec
mov
fiadd
jb
daa
jnp
lods
xchg
shl
inc
mov
xchg
stos
out
div
dec
cmp
ret
push
in
pop
mov
test
pop
mov
dec
pushf
mov
add
stos
cmp
out
sub
xor
test
ins
(bad)
stos
or
push
out
add
ror
push
sbb
pop
in
je
scas
add
dec
aad
rcl
xchg
push
in
stos
sbb
jb
cmp
mov
inc
push
sub
and
adc
push
shr
inc
adc
push
sar
mov
sbb
or
mov
lds
or
jge
cmp
xchg
(bad)
add
pop
int
mov
jns
mul
pop
jns
jecxz
call
data16
fmulp
xchg
adc
pop
xlat
push
scas
mov
lods
inc
mov
cs
arpl
mov
sbb
jbe
sub
arpl
dec
adc
out
push
mov
sub
ss
cmp
jle
or
ja
or
mov
sub
int3
mov
(bad)
jp
add
ss
imul
cmp
inc
jle
in
cwde
inc
xor
inc
js
loope
sub
dec
ret
test
outs
(bad)
ret
mov
cmps
jo
mov
(bad)
jmp
test
jmp
retf
sub
mov
jecxz
push
sti
mov
mov
or
cli
adc
mov
cs
cmp
cmp
fisttp
lea
sub
push
std
pop
xchg
(bad)
call
repz
retf
sub
inc
xchg
mov
sub
jno
cmp
inc
sub
mov
push
push
mov
push
fcmove
imul
push
adc
loopne
outs
setno
sub
or
pushw
dec
jmp
push
js
int3
cvtps2pi
xchg
outs
loopne
inc
xchg
loop
mov
mov
cmp
out
rcr
clc
cs
push
inc
adc
mov
or
fsubr
xor
into
sub
cmp
inc
popa
popa
xchg
fdivr
movs
mov
xchg
mov
push
inc
jle
xor
pop
push
stc
imul
jmp
daa
repnz
jne
out
fnsave
outs
push
lods
(bad)
mov
jne
rcr
nop
out
jmp
push
into
inc
or
adc
cwde
cmps
data16
xchg
mov
xchg
stos
inc
jp
call
loope
loope
mov
cld
jge
cmps
jne
neg
out
inc
rol
pop
scas
mov
jnp
rcl
popa
add
sbb
fs
xlat
adc
and
addr16
fdivr
xor
aas
sub
stos
sti
pop
(bad)
mov
and
je
ret
mov
cmp
mov
mov
nop
inc
out
xchg
and
pop
cmps
fs
pop
(bad)
cmps
push
stos
mov
lahf
loop
dec
xchg
mov
inc
ss
xor
mov
mov
jmp
dec
ins
jnp
jmp
dec
clc
sub
inc
mov
cmp
jne
add
ds
int3
jg
push
pusha
in
pusha
lock
in
inc
fs
add
mov
pop
sub
int
adc
pop
out
sub
loope
call
out
mov
inc
push
add
dec
test
cld
pop
sbb
push
nop
shl
data16
jmp
adc
inc
or
push
lahf
jp
and
cmp
dec
sub
mov
dec
rcr
and
icebp
fisttp
cdq
jno
sub
stos
das
int
or
mul
inc
cli
mov
adc
dec
xor
lahf
dec
call
add
jmp
mov
rcr
fcom
imul
in
pop
pop
out
jae
hlt
mov
sbb
push
sbb
in
sar
xor
sar
push
fild
mov
adc
ret
inc
mov
dec
adc
jb
scas
xchg
ficom
mov
jns
jecxz
mov
xchg
and
jbe
mov
jecxz
mov
inc
daa
outs
jmp
icebp
fild
pop
out
jmp
push
loop
ins
cmp
inc
push
in
iret
lock
stos
and
(bad)
lahf
pop
repnz
lock
js
imul
mov
scas
pop
sti
(bad)
rcr
jb
ror
cmp
xor
jg
out
rol
mov
or
mov
push
or
outs
pop
cmps
sub
xchg
xchg
jecxz
mov
clc
push
je
in
xchg
lods
xor
dec
push
push
arpl
in
aaa
daa
mov
out
jp
mov
xchg
test
test
mov
pop
mov
(bad)
jns
pop
enter
mov
pop
mov
pop
push
rol
mov
xor
fstp
mov
lods
(bad)
and
in
outs
inc
call
and
iret
jmp
retf
inc
mov
push
add
cld
cmp
test
jnp
shr
xchg
sub
fidiv
inc
xor
xchg
xor
inc
mov
push
jo
inc
int3
test
ret
jmp
xor
aad
pop
out
popa
rcr
xor
add
or
xor
cmp
movs
pushf
push
inc
cmps
mov
xchg
fadd
retf
outs
sbb
sub
aam
ins
xor
and
cmps
push
add
or
push
aam
fst
xor
xor
xchg
cmp
cmc
es
test
fsubr
je
mov
outs
add
push
imul
mov
xor
cdq
inc
mov
sbb
not
inc
pop
xlat
test
dec
shl
mov
mov
push
xlat
js
cs
fisttp
(bad)
dec
inc
neg
jbe
fldcw
lea
test
xchg
movs
sbb
(bad)
mov
imul
inc
sub
sub
xchg
push
fst
aaa
out
pop
add
adc
ret
adc
(bad)
push
mov
cld
fs
mov
xchg
enter
(bad)
jl
dec
mov
sub
cmp
pop
(bad)
in
cmp
lea
sub
and
cmp
lea
push
loopne
inc
cld
cmp
xor
adc
popf
add
call
ror
jg
loop
cmp
nop
enter
inc
dec
xor
std
test
or
inc
dec
ror
movs
ret
sbb
nop
stc
pop
loope
out
(bad)
jb
sbb
jmp
add
mov
xor
imul
lods
and
movs
aad
neg
pop
adc
ins
pop
sti
ss
push
in
add
and
and
add
mov
test
int
and
adc
cdq
mov
ja
dec
mov
inc
lahf
adc
dec
xor
in
pop
into
xchg
cmps
add
adc
mov
pop
push
push
jb
sbb
cld
jno
adc
sub
mov
or
pop
dec
xor
in
inc
jp
(bad)
push
fiadd
sub
ins
mov
add
pop
or
shl
mov
fdiv
pop
aam
jns
or
mov
adc
icebp
in
es
xchg
mov
mov
movs
shl
mov
ins
or
test
push
cmc
enter
aas
iret
push
stos
and
cs
mov
mov
stos
enter
pushf
out
cmps
jmp
mov
dec
pusha
sub
ds
mov
adc
adc
int
adc
push
jmp
dec
loope
mov
inc
dec
sbb
(bad)
fmulp
xlat
xchg
sub
fistp
pop
pop
cmp
lahf
cmc
mov
or
mov
out
or
dec
lods
mov
retf
clc
bound
shl
mov
add
jo
and
rol
inc
pop
dec
(bad)
in
in
mov
aaa
jle
arpl
mov
xchg
pop
cmp
cmp
test
bound
xor
call
adc
xchg
aaa
xchg
aam
mov
push
les
popf
fadd
loop
retf
inc
push
lods
add
cmp
(bad)
pusha
jle
into
xlat
mov
into
add
sbb
push
ds
sub
jmp
lods
adc
dec
inc
push
(bad)
push
jg
pusha
push
xchg
sti
cmp
cmp
sub
fcomp
sbb
fimul
mov
jl
xchg
loope
cmps
push
xchg
jl
mov
hlt
fcos
std
and
inc
loope
jge
pop
idiv
fs
adc
cli
xor
mov
mov
retf
push
in
in
sub
push
lods
mov
sub
aam
enter
sub
or
jmp
outs
bound
test
jge
pop
or
sbb
pop
add
loopne
mov
mov
loope
xor
popf
xor
call
and
shl
call
fstp
mov
or
cmp
pusha
je
and
icebp
int
stos
pop
sahf
xchg
dec
pop
jmp
hlt
mov
arpl
iret
out
test
mov
test
mov
aad
push
test
jnp
retf
sub
outs
sahf
pop
out
sbb
outs
fsubr
ins
or
jae
pop
imul
xor
or
xchg
or
clc
add
adc
daa
mov
jmp
and
ret
sbb
push
inc
iret
pop
outs
iret
addr16
cmps
loope
fwait
scas
lds
out
dec
repnz
mov
in
cmp
inc
stc
jb
pop
shl
(bad)
inc
push
pop
fstp
or
inc
es
sbb
push
test
lock
or
sbb
cld
pop
or
xor
adc
(bad)
jne
sub
fmul
pop
aad
movs
pmaxsw
aam
int
adc
cmp
lods
vpunpckhwd
out
mov
jb
cmps
dec
aas
into
mov
mov
inc
(bad)
mov
sbb
(bad)
mov
mov
adc
fst
(bad)
dec
and
iret
sahf
push
scas
aam
and
data16
pushf
es
je
fstp
test
mov
cli
aam
and
and
rep
add
(bad)
sub
ins
mov
sbb
or
test
sbb
adc
or
cdq
xchg
ror
cmp
or
pop
xor
repz
xchg
outs
movhps
jnp
outs
in
jge
aaa
in
mov
imul
jae
lods
(bad)
jno
retf
lahf
movs
mov
xlat
cmp
and
and
inc
mov
add
mov
adc
daa
scas
or
in
add
lahf
outs
repz
xchg
jl
adc
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
ror
addr16
icebp
movs
cli
jo
xor
fs
mov
movs
dec
adc
dec
xor
gs
fnstenv
mov
sahf
das
rcl
movnti
jmp
push
push
inc
mov
dec
adc
es
in
outs
(bad)
xlat
rol
mov
call
sbb
pop
aam
out
(bad)
lock
movs
not
xor
jl
mov
das
or
clc
lods
sti
push
stos
jbe
push
jmp
push
add
jae
aas
into
cmp
(bad)
scas
fwait
or
gs
rol
shl
xchg
cmc
movs
lock
xchg
pop
mov
xchg
das
mov
jecxz
out
xor
std
jmp
movs
stos
push
cmps
stos
jnp
jg
or
rcr
mov
rcl
int3
sub
pop
setle
rcl
mov
cmp
and
inc
adc
sub
ret
loopne
nop
jo
jmp
dec
popf
sub
sbb
sbb
pop
mov
pop
pop
jmp
xlat
xchg
enter
addr16
pop
hlt
leave
mov
test
dec
lods
rol
add
iret
and
outs
clc
add
add
(bad)
mov
xchg
call
in
jnp
and
bsf
add
sbb
cdq
cmp
xchg
sbb
test
and
popf
push
imul
outs
fnsave
repnz
adc
cld
inc
out
scas
cmp
(bad)
repnz
sub
cmp
mov
push
jp
cmp
push
in
les
adc
xchg
data16
pop
inc
in
movs
inc
mov
fwait
push
(bad)
and
mov
movs
adc
sub
gs
mov
xchg
cmp
jl
xor
jo
add
mov
push
dec
arpl
cmp
xchg
adc
gs
sti
in
ret
or
loop
aaa
adc
ja
clc
sub
xchg
mov
mov
adc
ret
inc
neg
outs
pop
adc
adc
fs
test
jae
adc
inc
lds
shl
mov
xchg
xor
sbb
sbb
or
xor
imul
inc
inc
nop
mov
out
jmp
je
int
inc
enter
test
add
push
push
inc
gs
xchg
xor
out
jbe
or
out
add
sub
hlt
mov
call
fwait
aaa
sbb
cmps
ds
ins
int
adc
aam
dec
jp
or
cld
mov
sbb
gs
retf
imul
sbb
jp
mov
mov
xchg
mov
push
xor
inc
hlt
stc
das
data16
repz
cmp
jg
das
mov
sbb
enter
mov
loope
leave
or
mov
sbb
fs
pop
inc
imul
enter
pop
stos
pop
nop
or
sbb
addr16
fxam
push
xor
and
cmp
mov
lahf
adc
stos
pop
es
mov
mov
push
popf
pop
gs
js
push
mov
scas
aad
(bad)
mov
cli
inc
enter
pop
inc
adc
xchg
xchg
(bad)
pusha
adc
das
scas
or
call
loope
mov
and
imul
push
pop
inc
mov
mov
mov
xor
adc
push
enter
adc
xchg
jg
ror
(bad)
ins
mov
jg
cs
enter
dec
lds
test
push
adc
push
arpl
add
es
pop
jmp
push
jl
pop
dec
adc
xchg
jae
jmp
or
or
sbb
aad
fnstcw
dec
stc
xchg
mov
sbb
je
or
sbb
mov
sahf
addr16
inc
repnz
loopne
mov
add
ret
repnz
adc
icebp
repnz
mov
mov
mov
cli
sub
mov
arpl
cmp
out
into
(bad)
pop
icebp
pop
mov
or
xchg
sub
mov
ret
aam
xor
sub
push
stc
fst
push
imul
pusha
or
push
sub
fild
or
aaa
lods
pop
dec
and
pop
cli
pop
rcl
push
aas
push
jno
pop
outs
lock
jno
lahf
and
push
(bad)
jns
sbb
fwait
jecxz
sbb
out
push
stos
in
int
push
adc
jecxz
jae
cld
push
stos
jmp
repnz
fcom
mov
sub
imul
sahf
xchg
or
sbb
sbb
pop
sbb
xchg
mov
test
scas
pop
and
popf
dec
sahf
(bad)
test
or
cmp
adc
gs
(bad)
pop
retf
jb
push
ret
shl
cmp
mov
dec
(bad)
jb
ror
mov
dec
popf
xchg
mov
pop
push
gs
sbb
int3
pop
cmp
dec
ins
inc
mov
ret
push
repnz
retf
fisttp
inc
out
lods
sub
and
int
outs
les
cmps
dec
jne
dec
dec
dec
xor
and
mov
and
pop
inc
sbb
int
mov
xor
fldcw
and
add
xor
cli
cli
and
push
ins
jge
lds
mov
mov
jle
jmp
cwde
movs
in
xchg
(bad)
loopne
sub
mov
sbb
dec
cmp
std
push
in
out
add
mov
mov
retf
sub
cli
inc
in
fcmovbe
jg
ins
(bad)
push
test
scas
cmps
xor
mov
lods
dec
or
out
mov
iret
add
les
fs
dec
mov
xchg
xchg
ds
add
mov
dec
call
dec
ds
mov
mov
xchg
xchg
ss
and
and
push
imul
xchg
sub
mov
xchg
fldcw
lods
sbb
dec
pop
cmps
inc
jno
pushf
outs
mov
cmp
mov
(bad)
lods
in
test
pop
stos
or
movs
xchg
xchg
(bad)
mul
icebp
cmp
jge
cmp
enter
out
in
clc
gs
or
add
movs
cld
rcl
(bad)
push
(bad)
push
jne
push
push
test
leave
push
and
out
or
(bad)
ds
das
mov
clc
cld
shl
fiadd
mov
out
push
ins
push
outs
mov
lahf
cmp
jne
xlat
test
sbb
cmp
jbe
scas
xor
pop
mov
in
mov
jae
mov
mov
inc
cwde
movs
ret
daa
(bad)
mov
cmps
call
int3
mov
cmp
jno
scas
and
and
jmp
lods
cmp
outs
push
out
or
mov
(bad)
stos
(bad)
mov
sbb
enter
cld
inc
das
test
push
adc
fiadd
cmps
dec
jge
push
ret
xchg
xchg
jbe
push
sub
inc
in
adc
jne
push
pop
(bad)
mov
ficom
jmp
cmp
data16
fcmovnu
push
sub
scas
imul
or
pop
dec
mov
test
push
and
jle
mov
mov
dec
and
adc
pop
pop
sub
or
dec
enter
repz
inc
mov
das
mov
fbstp
pop
je
mov
mov
dec
in
push
fiadd
scas
fsub
jmp
sub
aaa
das
ficom
out
jecxz
mov
jle
xor
leave
push
jl
push
dec
cmp
sbb
fsubr
or
adc
out
xor
add
aaa
sub
es
xor
aaa
ds
call
add
fldln2
(bad)
hlt
lea
mov
ins
xchg
mov
lea
jns
repz
push
inc
mov
pop
in
add
xchg
sub
pop
mov
mov
mov
inc
xchg
add
and
dec
cwde
mov
dec
inc
pop
mov
in
cld
pop
fld
xor
xchg
loope
push
sbb
pop
and
cli
pusha
psubq
adc
inc
cmp
and
jg
scas
aaa
adc
cmp
out
ds
fmul
dec
sbb
ret
inc
xchg
icebp
lea
add
cdq
sahf
adc
add
(bad)
int
and
adc
nop
sub
add
jo
imul
inc
outs
ficomp
pop
sbb
mov
or
je
sub
mov
dec
retf
adc
lods
test
xor
aaa
inc
test
sub
inc
cli
fdivp
enter
and
hlt
test
mov
sub
pop
retf
cdq
retf
leave
inc
pop
push
push
mov
sbb
cmp
and
popa
mul
push
into
xchg
push
dec
cmp
mov
stos
mov
pop
xchg
mov
hlt
aad
sub
std
sub
cmp
in
xor
out
sar
neg
out
inc
ja
jl
mov
cmc
(bad)
jmp
scas
xor
jmp
push
xchg
mov
iret
add
nop
push
mov
cmps
jmp
movs
inc
outs
cli
repz
xor
ins
jmp
xlat
fs
xchg
or
ror
push
mov
scas
in
movs
mov
mov
xor
pop
arpl
push
cmc
jmp
ss
dec
fmul
sub
dec
cmp
mov
sbb
push
lahf
pavgw
xor
mov
(bad)
out
cs
mov
and
lods
jmp
mov
leave
out
pop
aas
mov
ret
retw
scas
push
jae
cmp
sahf
aas
rol
icebp
pop
add
(bad)
cld
dec
lea
shl
sub
or
pop
xchg
gs
shr
inc
aaa
add
jns
sti
cmp
pop
mov
dec
shl
jno
and
inc
mov
mul
inc
sbb
mov
test
cwde
ss
adc
test
push
cmps
xor
scas
add
test
(bad)
popa
cmc
mov
inc
xchg
dec
or
push
arpl
pushf
(bad)
lock
xchg
pop
nop
outs
das
pusha
pop
scas
pusha
inc
push
add
ins
cmp
inc
jecxz
sbb
xor
call
xlat
enter
stos
(bad)
push
bound
sbb
jmp
dec
xor
(bad)
or
(bad)
add
push
push
lock
cmps
jl
fidiv
mov
mov
das
and
push
bound
(bad)
test
jg
adc
lahf
inc
mov
mov
dec
mov
retf
sub
mov
outs
mov
adc
dec
and
out
mov
xchg
scas
pop
lods
nop
fwait
je
mov
aas
je
sti
lock
pop
fcomp
retf
cmp
idiv
cwde
ss
and
imul
gs
and
mov
les
cwde
loopne
lea
cli
adc
jmp
mov
lods
das
sar
xchg
out
imul
or
fs
mov
cmp
mov
test
fbstp
and
dec
loopne
dec
push
mov
repnz
fucomp
xor
rcl
stos
jae
loop
fstp
push
xor
iret
mov
mov
xor
jecxz
mov
xor
pop
fcomp
(bad)
popf
dec
loopne
rol
or
ins
jae
jmp
fnsave
cmp
sbb
into
rcr
inc
inc
inc
inc
cmp
out
std
dec
(bad)
clc
enter
push
or
xor
cmp
(bad)
push
ret
lods
in
vmread
push
xor
data16
cmp
fsub
ror
inc
ret
(bad)
clc
ins
aas
cdq
cmc
clc
test
cmp
dec
adc
mov
mov
mov
inc
test
mov
cli
jmp
mov
sub
nop
mov
jno
pusha
mov
adc
das
shl
pop
pop
pop
in
(bad)
jge
cmp
jmp
dec
jg
jae
shl
inc
mov
sti
inc
scas
jno
test
(bad)
gs
and
and
loop
mul
xor
enter
pop
into
xchg
aad
call
out
cmp
jge
mov
(bad)
dec
stos
loope
inc
sub
mov
loopne
or
pop
out
mov
sub
movs
push
cmps
cdq
push
dec
xlat
cmp
and
mov
add
out
enter
(bad)
add
mov
mov
sbb
add
xchg
cmp
dec
pop
mov
push
pop
imul
pop
rcl
add
mov
cmps
push
mov
xor
dec
ror
out
push
idiv
jae
mov
cli
ret
adc
arpl
jmp
outs
loop
sti
pusha
movs
xchg
add
mov
icebp
ja
sar
pop
jle
jns
push
and
loop
sbb
sar
pushf
mov
xchg
mov
ds
sub
jecxz
in
call
ror
jl
pushf
inc
cmc
inc
test
sub
daa
test
mov
pop
lds
mov
icebp
pop
mov
xor
loopne
lods
sbb
pop
inc
out
test
inc
sub
adc
push
test
adc
jecxz
sbb
es
ret
and
pop
ins
(bad)
and
push
lea
test
jne
pop
mov
ror
jns
test
mov
push
test
call
fcomip
jp
pop
inc
(bad)
out
mov
push
ret
mov
popf
sub
xchg
movs
xor
popf
aad
ss
fimul
mov
les
test
in
adc
xchg
(bad)
push
jmp
mov
jp
and
repz
mov
aad
addr16
sbb
aas
aas
pop
jno
dec
pop
jmp
out
mov
mov
sub
stos
sub
mov
pusha
jmp
cwde
or
sub
shl
lods
xor
mov
mov
std
pop
(bad)
int3
repnz
and
mov
mov
clc
popa
cli
das
pop
add
icebp
push
into
sbb
dec
pop
cmp
out
xchg
out
out
adc
jge
dec
ja
shr
xchg
inc
pushf
out
cld
mov
pop
pop
sbb
cmp
arpl
sub
lods
mov
stc
pop
mov
shr
push
cmc
xor
fwait
push
fldcw
mov
mov
icebp
adc
sti
or
sub
pushf
daa
pop
cmc
shl
pop
inc
(bad)
pop
leave
sar
add
or
(bad)
nop
mov
sbb
mov
pop
repnz
inc
aam
repz
xchg
inc
imul
inc
mov
in
or
and
add
in
xor
mov
outs
xchg
inc
cld
aas
and
dec
ret
out
iret
dec
xlat
sub
pop
mov
fsub
arpl
push
outs
(bad)
not
jne
cmp
mov
out
enter
dec
rcl
mov
jne
stos
xlat
arpl
mov
aas
sbb
shl
mov
jne
cmc
gs
add
ds
gs
popf
jbe
out
push
add
test
xchg
in
push
js
sub
mov
mov
or
mov
adc
arpl
sub
push
fidiv
pop
xchg
push
shr
out
cmp
stos
dec
mov
iret
bound
int3
es
fidiv
fsubr
pushf
mov
xchg
push
loope
jmp
cmp
mov
jno
push
(bad)
out
test
pop
retf
int3
sar
xchg
xchg
sbb
in
inc
cmp
popa
out
pop
popa
cmps
sub
icebp
setno
sbb
mov
packssdw
fiadd
and
into
push
ins
arpl
retf
push
jl
pop
mov
and
cmp
mov
mov
lea
push
add
mov
push
fadd
stc
mov
pop
dec
(bad)
push
jnp
stos
inc
pop
out
jb
test
lea
sbb
inc
imul
aad
xor
lods
or
int3
dec
in
nop
in
mov
test
test
mov
outs
in
ret
int3
enter
call
pusha
adc
cmp
in
cli
outs
(bad)
out
and
retf
xlat
gs
loopne
add
inc
push
mov
aad
inc
xor
push
adc
cmp
dec
ins
jno
dec
or
rcl
ror
int
leave
dec
call
clc
ror
cmp
mov
push
(bad)
push
cli
mov
mov
dec
adc
mov
ror
adc
dec
aam
mov
jo
dec
ds
and
mov
sbb
ss
xor
jecxz
add
xor
das
xor
fidiv
in
dec
mov
sbb
scas
dec
(bad)
das
cs
ss
mov
pop
lods
sti
popa
aas
data16
fsubr
int3
(bad)
retf
or
jecxz
stos
dec
outs
pusha
daa
into
jg
jns
imul
inc
pop
sbb
rcl
push
sub
and
rcl
mov
hlt
fisubr
or
push
push
inc
cmps
xchg
add
movs
and
stos
or
mov
popa
int
aas
and
imul
cmc
cmp
sbb
xor
call
cmc
inc
or
mov
jl
inc
ds
and
data16
(bad)
ja
fbstp
mov
nop
in
push
jbe
adc
sub
fisttp
ds
pop
daa
fdiv
jmp
mov
int3
stos
mov
data16
test
xchg
dec
adc
xor
out
or
cdq
or
add
jl
test
mov
ins
(bad)
dec
push
add
or
inc
scas
fldcw
test
sub
ror
xor
xchg
pop
mov
adc
xchg
nop
addr16
cmps
inc
(bad)
push
xor
inc
and
outs
xor
retf
(bad)
cli
adc
xor
movs
test
adc
jb
xchg
pop
test
lods
mov
xchg
xchg
adc
clc
adc
ds
dec
lods
(bad)
dec
pop
pop
stos
push
jns
out
add
fmul
sahf
or
arpl
ret
xchg
cmps
xchg
pop
stos
or
and
js
data16
pop
cmc
jno
inc
stos
cmp
mov
imul
dec
(bad)
xchg
aad
mov
dec
adc
cmp
push
xor
retf
pop
jne
jne
or
inc
jb
push
arpl
ret
mov
dec
sbb
inc
mov
ja
or
xchg
call
nop
sbb
cld
xor
xchg
stc
arpl
add
sti
leave
rcl
leave
bound
fadd
mov
add
dec
enter
add
in
add
add
mov
or
cmp
mov
ds
into
jb
into
xor
test
hlt
in
inc
ficomp
sbb
jb
ficomp
pusha
fwait
cmp
enter
fst
jg
je
fimul
or
les
sub
mov
adc
mov
pop
arpl
inc
repz
mov
mov
and
(bad)
stc
adc
retf
pushf
mov
fadd
push
bnd
test
xchg
call
xchg
adc
fdivr
sbb
cli
and
iret
cld
dec
inc
repz
mov
cmps
push
cmp
push
inc
dec
mov
push
cld
repz
bound
out
jl
cmp
sbb
(bad)
(bad)
out
and
push
pop
dec
add
lock
mov
mov
add
xor
scas
adc
stos
and
outs
pop
mov
mov
xor
and
mov
push
movs
xchg
(bad)
xor
adc
ins
add
in
adc
and
stos
jl
xor
xchg
lods
mov
test
ins
sbb
aaa
lock
mov
pop
xor
add
inc
aas
add
cmp
div
(bad)
clc
mov
push
out
ret
inc
jns
xchg
out
mov
iret
outs
dec
or
inc
data16
dec
imul
adc
shr
xor
xor
pop
retf
ins
aam
sti
sbb
mov
stos
loop
sub
mov
xor
or
jns
rcl
add
bound
hlt
inc
lods
cli
outs
out
jl
sbb
mov
push
call
std
call
cmp
inc
cmps
and
outs
into
cmp
xchg
or
shr
loop
xlat
js
enter
popf
jae
ss
data16
cli
or
ror
imul
pop
test
ins
lods
jge
add
lock
outs
adc
jge
cli
lock
jge
sbb
fldcw
adc
ror
jl
loope
rcr
sbb
pop
cli
cmc
sub
adc
or
jp
mov
mov
mov
xchg
fwait
lods
mov
xchg
sub
adc
ret
in
int3
mov
loope
or
and
adc
das
mov
and
mov
das
xchg
and
out
xchg
jp
sbb
mov
sbb
mov
cwde
pop
mov
ficomp
inc
mov
mov
mov
xor
mov
popa
mov
cwde
enter
mov
pop
int3
repnz
dec
(bad)
jae
dec
cmp
js
dec
shl
ins
les
ds
fbstp
jne
xchg
into
xor
mov
in
inc
inc
into
jnp
inc
mov
movs
pop
push
cdq
inc
pop
adc
loope
sub
jge
mov
lods
cmp
(bad)
repnz
dec
dec
ss
dec
sbb
xchg
dec
cmp
xchg
int3
jnp
das
mov
ds
sub
xchg
dec
popf
sbb
adc
xchg
jmp
jl
ret
les
fcom
in
lods
not
call
pop
addr16
lds
dec
ss
dec
mov
dec
xchg
cmp
pop
imul
movs
or
adc
nop
movs
sub
fst
mov
fdiv
sub
jle
imul
cmps
push
in
dec
push
jl
cld
les
dec
(bad)
xor
int
sar
scas
(bad)
and
test
push
(bad)
mov
and
mov
fwait
sub
es
mov
jae
cwde
fbld
(bad)
(bad)
enter
sbb
mov
jmp
stos
(bad)
or
mov
mov
std
xchg
dec
sub
repnz
clc
xchg
sbb
mov
mov
outs
xlat
stc
sub
and
ret
test
test
sub
push
shl
mul
lds
mov
xchg
or
mov
(bad)
sub
test
xchg
pop
pusha
mov
sub
sbb
rep
or
inc
inc
(bad)
hlt
dec
fisttp
adc
inc
sbb
lods
sub
xor
test
repz
imul
sbb
pop
scas
lahf
and
jno
call
add
dec
retf
mov
stos
mov
xchg
int3
or
dec
jmp
pop
xor
sub
lds
scas
mov
dec
jl
and
cmp
xor
iret
out
loop
imul
mov
jp
loopne
xor
sbb
outs
ret
adc
push
jle
lahf
inc
jmp
loopne
arpl
add
cwde
or
loop
ins
icebp
fsubr
sbb
std
movs
jo
popf
mov
and
fdivr
jae
dec
mov
inc
test
vpavgw
sbb
mov
or
mov
movs
fild
pop
mov
fld
push
jno
cli
aam
scas
xchg
bound
jmp
xor
cs
pop
bound
mov
jmp
mov
sub
shr
pop
xor
aad
movs
mov
dec
js
cmps
repnz
fs
rol
xchg
mov
mul
xor
cmp
cmps
dec
xor
mov
push
pop
mov
mov
stos
inc
cmp
ins
mov
nop
adc
sbb
neg
cmp
mov
(bad)
fsubr
push
and
mov
or
mov
add
es
and
aam
xor
and
aaa
xor
rcr
push
cmp
push
sbb
sar
sub
outs
push
(bad)
mov
dec
cmp
sbb
ja
adc
xchg
fbstp
sahf
mov
aaa
pop
popa
mov
jnp
mov
fs
dec
xchg
or
cs
shr
leave
mov
add
mov
les
sbb
and
sub
aad
ja
dec
cmps
rol
mov
cmp
mov
dec
dec
pop
cmp
psrad
pop
xor
xchg
adc
cmp
cmp
push
daa
inc
sub
sbb
stc
call
dec
fidivr
stos
icebp
loope
int
add
enter
data16
push
sub
add
mov
inc
sub
outs
imul
push
jg
sbb
sub
push
into
mov
mov
in
dec
stos
cmp
fyl2xp1
mov
mov
sub
ins
dec
iret
out
push
add
shl
or
add
into
int3
jle
push
bound
jnp
icebp
xlat
cmp
bswap
cmp
xor
jnp
test
or
jns
cmp
mov
stos
jmp
imul
loop
jp
dec
cmp
call
fadd
and
test
ins
sub
sar
xor
outs
jmp
mov
ins
in
call
pop
shl
mov
imul
pop
ror
lea
jl
inc
or
fbld
sub
adc
mov
imul
fdiv
aad
add
and
dec
add
movs
inc
je
push
jge
popa
or
push
pusha
scas
mov
shl
arpl
and
xor
cmp
aam
xor
aam
(bad)
push
sub
mov
cmp
cmp
into
xor
(bad)
icebp
loop
pusha
adc
test
into
arpl
inc
push
dec
popf
cwde
dec
push
and
movs
std
daa
into
cmp
dec
ins
mov
daa
xchg
mov
imul
nop
sahf
pop
je
dec
mov
stos
std
adc
add
mov
retf
shl
cmc
mov
(bad)
xchg
(bad)
ret
popf
and
xlat
xchg
xlat
jg
scas
repz
adc
ja
and
or
mov
and
cmps
cmp
sahf
add
popf
pop
dec
loopne
in
les
gs
sub
and
loopne
jecxz
ficom
js
mov
scas
out
fistp
popa
xor
hlt
and
lock
retf
jl
icebp
mov
add
cdq
sbb
hlt
cmc
aam
sbb
mov
push
xor
fninit
mov
or
mov
xlat
mov
push
mov
and
jmp
ss
adc
push
fcomi
jmp
jle
in
pop
push
adc
je
ins
dec
jp
movs
pop
sub
pop
les
push
xor
stc
stc
mov
rcl
shl
mov
dec
xchg
cmps
mov
push
cmc
in
fcom
(bad)
stos
jge
fld
lock
shl
jmp
mov
int3
pop
out
lock
fimul
rol
xchg
out
mov
push
(bad)
adc
mul
sbb
add
aaa
and
test
mov
into
mov
test
push
sbb
add
cmp
cwde
inc
lods
dec
cmp
lahf
cmp
push
ss
add
xchg
mov
into
inc
dec
pop
inc
sub
push
xchg
icebp
push
fdivr
pushf
dec
movs
stos
loopne
adc
in
in
fnsave
ins
mov
cmp
sahf
xchg
jmp
loopne
add
push
jp
into
int
pop
xchg
adc
loope
push
daa
in
sbb
push
stos
inc
pop
in
inc
cmp
(bad)
jl
nop
fbld
mov
cdq
or
das
ret
cmp
push
enter
test
pop
push
(bad)
into
das
and
add
movs
int
imul
xlat
sbb
or
jne
mov
mov
pop
inc
jb
xchg
mov
dec
stc
and
xor
xchg
(bad)
fadd
ss
mov
iret
stos
icebp
push
hlt
cwde
and
aas
ds
pop
and
ins
setb
adc
push
mov
repnz
xchg
loopne
shl
loopne
fnsave
xchg
add
daa
mov
push
adc
fdiv
adc
cli
(bad)
cdq
in
cdq
loopne
fucomi
adc
pop
xlat
mov
in
adc
adc
loop
dec
pop
adc
mov
shl
add
xor
call
in
mov
xlat
or
stos
test
adc
cmp
sub
stc
mov
out
jno
cmp
icebp
mov
xchg
popa
xchg
mov
sahf
loopne
(bad)
cmp
inc
push
or
or
jge
in
mov
addr16
std
pop
popf
ins
push
add
cld
daa
fdivr
push
cmp
shr
jo
repnz
loopne
mov
mov
push
fdivr
xlat
dec
and
dec
fs
pop
mov
lock
inc
outs
into
mov
dec
(bad)
jecxz
(bad)
and
mov
cmps
xor
xor
pop
test
pop
mov
adc
out
outs
sbb
mov
lea
test
jmp
xchg
adc
cmp
add
popf
ud2
cmp
mov
sar
dec
sub
das
int
and
mov
dec
clc
jno
int
ja
into
mov
jg
sub
(bad)
xchg
pop
shl
xor
mov
call
xor
inc
inc
(bad)
rdpmc
out
mov
jg
add
jp
icebp
inc
xor
or
(bad)
sbb
cmp
call
test
mov
mov
mov
dec
mov
inc
pusha
sahf
inc
pop
dec
cwde
repz
ds
cmp
stos
outs
jne
aad
xchg
or
xor
adc
push
inc
neg
and
stc
fisttp
inc
lock
stos
cmp
daa
and
push
push
ds
mov
sbb
pop
xchg
repz
fidiv
add
mov
and
mov
pop
jb
and
setg
arpl
and
dec
popa
test
xor
dec
add
(bad)
cmp
nop
push
pop
adc
movs
shl
pop
and
fcmovne
lds
pop
mov
cmp
sub
sbb
cmc
jo
sub
cmp
fisub
test
and
fstp
inc
cmp
mov
adc
stos
and
push
imul
inc
arpl
jne
sbb
cld
je
mov
xchg
sbb
arpl
ss
mov
push
jle
or
and
dec
popf
xor
xchg
cld
ss
ins
mov
dec
mov
(bad)
clc
or
dec
test
inc
mov
sub
mov
xor
shr
sub
mov
xchg
stos
cwde
mov
ror
repnz
or
ins
aas
scas
dec
stos
mov
sbb
arpl
mov
arpl
push
jle
dec
and
and
out
dec
jbe
mov
cmp
ins
xor
mov
mov
rcr
pop
inc
push
xchg
outs
out
mov
rcr
pusha
aad
leave
xlat
scas
cmps
add
cmc
aas
mov
xor
retf
call
outs
jo
(bad)
push
pop
mov
pop
mov
out
stc
ja
mov
cmp
clc
dec
sbb
adc
mov
mov
scas
fwait
and
add
out
and
sbb
dec
hlt
loope
int3
push
stos
bound
pop
fdiv
ja
pop
sub
in
jnp
add
cdq
push
idiv
jmp
rcr
xchg
mov
dec
sbb
dec
pop
fistp
retf
cmp
sahf
mov
inc
mov
mov
scas
into
stc
ds
xchg
aad
cmps
add
sub
adc
xor
pop
and
add
cmp
cmps
mov
fidivr
xchg
sub
jg
sub
(bad)
pop
fwait
popf
movs
push
or
jp
sti
mov
pop
lods
das
xchg
leave
lock
push
ins
add
inc
icebp
pop
hlt
fsubr
jp
pop
sub
ret
repz
xchg
push
fmul
mov
pusha
push
cdq
inc
mov
mov
fisub
adc
xchg
mov
adc
cld
dec
leave
movs
ins
push
lds
jge
test
dec
sub
adc
std
xor
mov
addr16
cmp
fcomp
aad
jnp
gs
mov
fistp
ds
ret
add
adc
aam
int
js
mov
and
dec
(bad)
mov
add
inc
bound
xor
dec
mov
popf
mov
inc
je
sub
jmp
add
and
pop
jns
jo
cmc
lods
sar
sbb
or
imul
push
xor
das
icebp
scas
or
push
fnsave
push
repnz
mov
mov
sahf
adc
cdq
ss
dec
or
je
xor
jo
nop
ret
lea
js
pop
add
push
jg
push
mov
pop
aaa
fsubrp
push
xchg
and
pusha
xlat
or
int3
jno
fidivr
sbb
sbb
adc
(bad)
icebp
std
inc
jne
mov
sub
call
sbb
mov
fbstp
inc
adc
jno
cs
mov
adc
mov
ss
aas
cmc
push
sahf
stos
outs
cmp
es
inc
loopne
dec
iret
repz
out
(bad)
mov
dec
into
in
icebp
movs
packuswb
xchg
das
loope
out
mov
(bad)
adc
cmp
and
fidivr
bnd
xchg
push
in
mov
pusha
fild
jmp
sub
mov
stos
cmp
dec
lods
jge
add
pop
dec
fsubr
popf
movs
inc
sub
sub
jecxz
retf
push
inc
inc
cmp
xlat
cmps
popa
ror
in
push
xor
cmp
and
or
out
in
mov
and
in
push
out
xor
xor
mov
inc
xchg
adc
test
mov
adc
dec
mov
mov
not
fdiv
in
sub
xor
pop
add
inc
cmp
or
cmp
cmps
movs
cmp
test
retf
push
xor
in
adc
or
dec
stos
ret
(bad)
out
or
dec
dec
je
(bad)
in
fld
adc
pop
mov
les
aad
adc
iret
call
push
add
xchg
fidiv
xchg
loope
push
cmp
jmp
mov
fucom
fwait
mov
push
dec
mov
mov
pop
adc
push
push
repnz
sbb
rcl
test
dec
or
and
sub
ds
xchg
mov
inc
xor
out
inc
mov
sub
add
adc
stos
enter
or
adc
ror
pop
cmp
xchg
and
sbb
scas
loopne
push
jbe
je
adc
cmc
jnp
dec
int
dec
pop
sub
inc
xchg
or
std
retf
mov
inc
pop
push
xor
push
xor
jno
test
push
cmps
retf
jae
sbb
es
xlat
mov
rol
scas
pop
in
hlt
push
dec
mov
xor
lea
nop
mov
aas
xor
repnz
out
push
cld
jle
pop
sbb
add
imul
aam
sbb
jns
jl
add
inc
sub
mov
(bad)
aaa
xor
pusha
inc
pop
pop
icebp
xor
cld
fwait
in
dec
ins
rcr
pop
(bad)
or
cwde
or
lahf
sbb
jl
xchg
push
shl
movs
push
xor
push
dec
cs
lock
hlt
sbb
push
jmp
mov
add
adc
mov
pop
(bad)
in
xlat
ret
xchg
arpl
jb
test
and
sub
in
xchg
or
inc
mov
push
xor
popa
and
xor
data16
nop
iret
shl
adc
or
cmps
add
push
iret
mov
inc
jb
sub
sbb
enter
and
(bad)
movs
in
sub
inc
lods
add
jg
out
jp
adc
sbb
cmps
xchg
or
xor
mov
ss
js
out
push
pop
push
hlt
stos
shr
push
inc
jmp
sub
mov
test
sub
pop
mov
dec
in
dec
sub
(bad)
das
ja
int3
daa
nop
test
retf
push
test
ss
out
jae
popf
out
cli
push
loop
add
cmp
ret
push
aaa
stos
inc
cmps
les
arpl
loope
out
jmp
ret
push
xchg
loope
inc
out
push
fwait
hlt
inc
sbb
pop
dec
ficomp
mov
and
or
mov
dec
in
push
in
ins
hlt
push
inc
and
int3
add
xor
js
in
xchg
test
xor
daa
sub
cld
pop
inc
push
lods
mov
fdivr
push
aam
cmp
scas
mov
pusha
cdq
ror
jae
aas
mov
push
mov
in
rol
pop
sub
les
fisub
jecxz
popa
fsubr
imul
dec
fst
jns
push
imul
adc
mov
and
imul
xor
mov
or
jno
jmp
jmp
pop
inc
mov
push
mov
out
add
cmp
cmp
test
dec
xor
call
shr
pop
ss
fwait
sbb
sbb
out
gs
nop
mov
cmps
pusha
pop
push
into
popf
mov
sub
mov
out
mov
lahf
(bad)
push
nop
(bad)
faddp
repnz
and
xor
xchg
xchg
ror
shufps
xor
adc
outs
in
aaa
push
xlat
dec
mov
xchg
fdiv
test
jae
pop
jno
retf
(bad)
in
mov
lahf
adc
adc
jg
mov
out
jg
aas
in
clc
test
(bad)
adc
int3
and
ja
dec
ret
sub
fcmovnbe
(bad)
pop
pop
jno
xchg
push
jno
push
into
jns
mov
aaa
mov
dec
shl
dec
ss
pop
fdiv
cmp
jl
std
jp
por
fsub
mov
je
(bad)
jge
sub
jp
shl
rcl
je
mov
cmp
sbb
or
loope
jns
or
lea
xchg
add
(bad)
push
jecxz
lahf
push
push
mov
add
in
in
sub
arpl
inc
fcom
xchg
mov
xchg
add
int3
stos
je
adc
lahf
jae
pop
xchg
or
mov
add
call
pop
ja
lahf
jp
cld
cmps
mov
push
push
stc
push
std
int3
ds
jmp
push
call
push
jg
fwait
loop
jl
pop
add
pop
jne
jmp
mov
mov
jae
inc
fmul
out
pop
fs
cmp
lds
(bad)
sbb
adc
cmp
add
sub
aam
arpl
dec
lock
cs
mov
jge
mov
call
adc
dec
cli
enter
adc
jnp
das
js
shl
in
int
(bad)
dec
ret
lods
cmps
jb
dec
fadd
push
or
ja
jg
dec
jmp
bound
jp
jbe
pop
adc
imul
push
int3
push
push
mov
mov
cmp
fld
dec
sbb
xor
and
cmp
inc
cdq
(bad)
std
and
aas
cmp
inc
mov
and
pushf
enter
cmp
(bad)
(bad)
repnz
add
push
call
loope
shl
mov
out
outs
dec
hlt
loop
xor
cmp
sbb
mov
inc
cmps
fdiv
into
dec
aad
shl
mov
enter
mov
gs
xchg
cmp
lds
outs
add
xor
xchg
jno
adc
arpl
mov
outs
sub
sub
and
cmps
and
sbb
sbb
and
inc
add
fmul
xor
dec
sysret
sbb
nop
test
cmps
inc
mov
jo
mov
sbb
lahf
pop
jbe
cmp
aam
cmp
pusha
pop
add
and
shl
(bad)
adc
or
mov
cs
push
jns
xlat
cmp
jne
adc
pop
scas
pop
mov
sub
xchg
out
ret
out
retf
or
adc
enter
push
jae
lods
jb
jg
cwde
and
ds
fs
das
mov
adc
cdq
jmp
addr16
xchg
imul
jae
stos
push
adc
fnstenv
push
(bad)
dec
mov
repz
fadd
or
push
loopne
ins
adc
call
cmps
cwde
push
mov
lock
sahf
int
imul
dec
loop
cld
fidiv
je
in
popa
cmps
push
call
fidivr
lods
inc
dec
sbb
sti
sub
addr16
(bad)
aaa
sbb
or
mov
ret
jbe
sbb
test
aam
imul
pop
mov
pop
cmc
ss
cmp
bound
pop
ds
and
dec
mov
jle
or
lds
fstp
pop
mov
push
sar
push
mov
mov
je
jmp
scas
(bad)
or
fdiv
xor
push
cmp
jae
loopne
sub
inc
arpl
xchg
pop
arpl
adc
shr
ins
cmp
jae
sbb
xor
sahf
lahf
cmps
jne
mov
or
add
jl
and
aad
sbb
inc
xchg
out
and
push
mov
test
call
(bad)
out
pop
scas
jo
jmp
repnz
or
(bad)
mov
xchg
pop
dec
stc
int
mov
inc
in
hlt
ret
scas
xlat
xchg
emms
out
outs
stos
mov
lds
jns
scas
int
jp
aaa
push
sbb
sar
sbb
jb
xchg
and
push
pop
fsubr
in
push
mov
fsubr
mov
mov
sbb
imul
aam
test
test
dec
cwde
mov
jg
dec
imul
mov
sbb
pop
rol
hlt
pusha
rcr
jge
jp
fsub
jnp
or
mov
mov
cwde
and
retf
inc
fld
pop
xchg
(bad)
shr
xor
xchg
pminub
mov
jbe
jge
lea
pop
xchg
push
jp
xchg
cmp
mov
xor
aam
pop
(bad)
dec
xor
xor
mov
xchg
cwde
cld
lods
call
aad
sbb
xchg
adc
es
lea
mov
out
xchg
fs
fstp
std
sbb
pop
repnz
mov
rol
jle
or
test
imul
cmps
dec
daa
fld
loop
sub
and
pop
xchg
call
sbb
ss
adc
aas
mov
mov
hlt
shl
xchg
out
inc
out
in
jmp
inc
jno
lds
push
dec
mov
out
push
in
pop
out
push
out
or
and
push
cmp
lods
stos
pop
dec
sbb
add
dec
jl
loopne
push
in
xor
dec
and
fldcw
stc
and
mov
mov
pop
lahf
or
push
in
cs
es
shl
pop
sahf
pop
xchg
inc
lock
mov
jo
mov
sub
in
int3
shl
sub
cmps
add
push
cmp
dec
ret
mov
inc
in
loopne
sbb
fs
(bad)
and
call
outs
mov
or
jns
jne
xchg
(bad)
and
cmp
popa
(bad)
adc
or
xchg
stos
or
ins
stos
fwait
mov
loope
lea
in
lods
sbb
xchg
aam
inc
dec
stos
outs
sbb
cmp
xor
pop
lea
inc
or
std
push
popa
ret
arpl
sbb
xchg
mov
daa
dec
xor
xor
mov
xchg
jo
outs
movs
cmc
push
repz
fwait
lods
idiv
jb
dec
or
jno
das
lea
sbb
cdq
lods
add
push
mov
inc
mov
inc
xchg
jl
ds
mov
rol
inc
xchg
in
pop
push
neg
mov
sbb
jmp
jbe
lock
push
outs
adc
adc
cmp
sub
in
test
cs
call
mov
aas
cmp
jbe
inc
pop
mov
mov
clc
cmc
push
sti
ficom
lods
outs
pop
shl
inc
pop
ins
je
stos
and
cmp
int
ins
shl
ja
enter
jne
and
fwait
push
sbb
(bad)
ficom
test
call
stc
das
pop
test
sub
xor
mov
cli
push
repnz
dec
stc
and
pop
and
add
popa
enter
or
in
movs
sub
test
jo
inc
cmp
jl
out
mov
lahf
mov
lock
dec
mov
ja
pop
out
aam
scas
dec
push
cmps
ss
jne
sbb
aaa
mov
ja
jne
jno
cwde
aad
or
mov
sub
add
test
rcr
fcomp
inc
call
not
mov
sti
setne
adc
cwde
lock
repnz
call
movs
xchg
adc
xor
imul
out
fdiv
ins
push
icebp
popf
dec
dec
jmp
xor
repnz
retf
cmp
push
iret
jg
mov
les
sbb
sbb
sub
push
hlt
or
dec
jecxz
and
sbb
sub
jns
rol
sub
sahf
pop
pop
ja
out
std
pop
adc
(bad)
icebp
aam
jecxz
push
xor
repnz
push
test
fisub
dec
jle
imul
sub
add
pop
or
cli
push
and
icebp
in
and
push
and
mov
inc
or
lods
xor
sub
jle
jne
xchg
or
cmp
cmp
sub
sti
push
popf
sub
sbb
jnp
inc
stos
clc
jbe
cmp
xlat
push
aam
sbb
and
push
mov
test
fcmovb
mov
rcr
ins
adc
xor
or
into
xchg
test
arpl
aaa
sbb
in
dec
lods
add
fimul
arpl
sub
sub
fidivr
mov
pop
fs
sar
retf
adc
fstp
lods
(bad)
outs
jns
lods
or
test
push
js
out
pop
pop
push
sbb
cmp
mov
lods
das
cmp
js
repnz
call
test
outs
mov
into
push
lods
clc
out
js
mov
cmp
loopne
xchg
aaa
pop
sar
cmps
push
push
(bad)
mov
data16
pop
or
aam
(bad)
in
xlat
fstp
push
mov
cmc
mov
jb
(bad)
mov
in
cmp
sahf
aam
jns
mov
loope
jg
push
test
data16
sbb
mov
pop
mov
clc
dec
retf
inc
mov
push
mov
pop
hlt
mov
pop
push
cmp
imul
xchg
sbb
movs
adc
cdq
sub
cmps
sub
jb
mov
adc
fcom
lea
mov
jle
bsr
cmps
les
mov
mov
inc
push
dec
sahf
cmp
cdq
repz
xor
add
pop
fsubr
dec
xor
aam
loop
mov
cmp
mov
cwde
jg
or
dec
test
adc
imul
push
das
mov
xor
dec
loop
push
push
aaa
mov
jmp
ret
push
fwait
jno
les
add
and
xchg
lock
mov
pop
(bad)
div
arpl
fistp
or
xor
ds
shl
mov
or
push
stc
imul
in
inc
push
in
fwait
adc
das
and
or
mov
adc
rcl
mov
adc
jo
inc
sub
jno
mov
dec
sbb
mov
xchg
sub
xchg
cwde
enter
shl
fldz
push
sub
je
movs
sub
adc
arpl
xor
mov
push
xor
fadd
add
gs
fiadd
sub
not
adc
and
bound
pop
retf
inc
aam
ret
jb
add
sbb
mul
loopne
xor
mov
mov
mov
xor
dec
fyl2x
scas
dec
sahf
int
xlat
and
je
add
loop
rcr
mov
sbb
ja
(bad)
xlat
add
sar
and
icebp
dec
inc
adc
stos
ds
out
push
frstor
add
mov
je
gs
push
cld
in
jge
cmc
xchg
out
push
xor
dec
jmp
sbb
xchg
add
nop
mov
lea
pop
adc
out
xchg
adc
repz
push
or
xlat
data16
xchg
lods
ret
xchg
cmp
xchg
push
mov
into
(bad)
add
(bad)
fs
sbb
cmc
repnz
sub
imul
or
mov
xor
fcomp
lock
loop
adc
daa
mov
dec
in
(bad)
ja
mov
pop
lods
adc
dec
push
bswap
ret
dec
cld
pop
sbb
pop
ins
sbb
mov
call
sbb
sub
ins
(bad)
adc
jmp
cmps
jge
sub
scas
jo
loopne
xor
push
popa
add
sub
xor
jl
xchg
aas
sub
dec
popa
repz
add
mov
loop
into
shr
mov
imul
adc
cdq
xchg
retf
jns
adc
aaa
push
or
(bad)
(bad)
loopne
push
add
into
jbe
add
dec
leave
or
jno
les
loope
ds
jmp
adc
shl
push
xchg
push
ret
mov
push
fdiv
xchg
popf
sbb
sbb
lods
cmp
cmp
mov
loop
pop
mov
enter
mov
jnp
or
mov
cmps
mov
movs
push
mov
retf
out
into
dec
out
pop
xchg
sahf
daa
scas
pop
test
test
les
inc
push
sub
mov
mov
jne
in
sbb
jle
pop
repnz
mov
sahf
pop
(bad)
daa
add
mov
test
add
mov
mov
or
pop
sub
lods
fidiv
add
test
shl
push
lods
sbb
or
inc
leave
loopne
lds
gs
add
fs
aas
fs
movs
jmp
leave
(bad)
pop
dec
bnd
fcmovbe
pop
cmp
sbb
inc
shufps
dec
fmul
or
mov
xor
scas
mov
push
push
leave
nop
popa
and
test
jno
jmp
(bad)
stc
cmps
pop
aaa
stos
mov
in
scas
add
dec
fimul
pop
fxch
retf
pop
add
(bad)
xchg
pop
xchg
sahf
ss
dec
mov
mov
mov
cmc
out
adc
and
(bad)
inc
sub
add
xor
pop
aaa
stc
pop
xor
dec
push
mov
adc
jne
dec
movs
movs
xor
inc
sbb
mov
jmp
scas
imul
inc
clc
pop
lahf
(bad)
out
mov
pop
and
jp
lods
push
lahf
cmps
mov
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
and
sahf
cld
ret
aas
jae
jno
(bad)
rol
bound
fild
mov
pop
jp
adc
xor
mov
outs
mov
xor
push
sti
cmp
bound
add
sub
mov
jle
cmps
lahf
popf
lds
sbb
mov
and
mov
xchg
neg
pop
push
bound
and
xor
les
test
ficom
or
dec
in
or
pop
cs
fild
fs
loope
push
pushf
and
(bad)
hlt
hlt
js
shl
or
pop
fild
inc
inc
imul
or
jmp
ret
ret
je
daa
aam
mov
(bad)
outs
ret
adc
movs
pop
inc
add
xlat
mov
arpl
adc
sbb
outs
jmp
repz
neg
aaa
pop
dec
movs
inc
imul
repz
and
xchg
loopne
adc
cdq
mov
aaa
stos
mov
sti
mov
sub
jecxz
push
movs
mov
jmp
jmp
xchg
sahf
push
mov
imul
xchg
and
push
lock
jno
pop
xchg
and
enter
push
jno
aam
or
fs
and
xor
jmp
pop
xor
iret
mov
outs
pop
stos
les
dec
test
inc
jp
inc
dec
cmp
retf
mov
mov
push
pushw
fidiv
lea
sbb
sub
fnsave
out
in
jnp
dec
push
test
or
and
push
popa
call
cmp
scas
idiv
popf
pop
xchg
sub
std
xor
movs
fadd
rol
mov
mov
jns
xchg
and
mov
fwait
addr16
xchg
aad
loopne
movs
mov
cmp
(bad)
mov
std
adc
out
(bad)
enter
loope
sub
call
sbb
xchg
cmps
inc
push
push
int
xchg
pusha
mov
lock
or
retf
add
jp
(bad)
jle
sbb
cdq
mov
fidivr
aam
pop
xchg
iret
cmp
mov
(bad)
fmul
add
shr
jae
add
push
scas
sub
push
or
std
push
jl
push
out
push
(bad)
(bad)
shrd
in
aad
(bad)
and
xor
mov
nop
mov
test
jl
icebp
imul
aad
and
shr
inc
into
adc
mov
(bad)
stos
sub
(bad)
mov
ret
pop
jns
js
pusha
mov
movs
fisubr
icebp
call
ins
sub
jecxz
ret
adc
pop
cld
cmp
icebp
mov
(bad)
movs
test
es
jmp
fsub
cdq
retf
or
test
outs
xchg
cs
lahf
push
pop
sub
adc
in
inc
adc
aaa
and
fistp
cwde
lods
sti
pop
dec
pop
out
aad
xlat
push
jb
jmp
xchg
fsubr
dec
cdq
lods
loop
xor
pop
(bad)
ret
xor
std
daa
xchg
pop
mov
add
sbb
sbb
and
in
mov
add
scas
and
mov
jecxz
outs
cmp
mov
movs
jnp
loope
mov
and
lea
sbb
mov
aaa
cmc
(bad)
mul
dec
xor
xchg
mov
or
cs
js
pusha
in
and
mov
pop
shl
aas
pop
fs
sub
push
cmp
push
mov
repz
pop
or
jno
repz
adc
cmps
and
dec
in
mov
add
xor
jb
fidivr
shl
sbb
jne
ret
cmp
pop
shr
sbb
in
jmp
add
or
shl
xchg
sahf
or
xchg
imul
ins
jno
dec
or
mov
out
outs
xchg
add
loop
or
push
outs
ret
dec
(bad)
cmc
jg
loope
shl
pop
pusha
mov
popf
push
leave
aam
lds
xor
xor
cmp
call
dec
mov
call
and
out
push
cmp
pop
sbb
jmp
and
jmp
jp
imul
shl
ss
rcr
push
pop
mov
dec
mov
inc
mov
(bad)
xchg
in
adc
icebp
jle
aad
stos
xor
add
xchg
jg
jmp
cmp
jns
(bad)
cdq
add
dec
adc
ja
pop
mov
pop
or
ret
inc
fstp
jmp
(bad)
dec
mov
xor
jg
imul
push
sub
xor
ret
mov
test
and
adc
adc
jl
xor
xchg
(bad)
jbe
add
fmul
outs
jae
test
jle
stc
call
std
pop
in
mov
jb
xchg
dec
fsub
cli
test
(bad)
out
and
dec
out
xchg
mov
xor
aam
aam
jne
ins
clc
mov
popa
add
xchg
mov
inc
int3
pushf
pop
test
cli
fsub
mov
loope
adc
jl
sbb
xor
sbb
inc
bound
ret
sub
xchg
ss
mov
(bad)
cmp
fnsave
das
sub
shr
mov
icebp
pop
icebp
aas
jo
pop
push
mov
xchg
mov
lods
xor
or
cmps
xchg
lock
rcl
retf
loopne
loop
out
mov
mov
cwde
sbb
xchg
out
xchg
neg
push
sbb
out
inc
aad
test
loop
shl
cmp
mov
icebp
ins
add
clc
cmps
lock
aad
daa
inc
mov
hlt
mov
jbe
cmp
fisttp
js
xor
ds
scas
dec
cmc
loope
jo
adc
jp
(bad)
jbe
retf
xchg
pop
out
add
or
fnstsw
rcl
mov
push
pusha
dec
in
inc
sub
fistp
and
lods
movs
aas
inc
aaa
popa
sbb
(bad)
xor
jae
(bad)
std
mov
sbb
and
mov
loopne
aaa
mov
pop
jbe
fistp
pop
fwait
psraw
jge
addr16
dec
lahf
mov
xor
fwait
out
add
jge
in
or
iret
rcr
shr
pop
add
mov
(bad)
hlt
xor
mov
(bad)
scas
lahf
push
fs
inc
loopne
out
shl
xchg
into
stos
push
mov
or
cld
add
adc
inc
adc
mov
sbb
mov
sti
push
es
jae
xchg
cmp
push
mov
cmp
mov
inc
cmp
xchg
jbe
xor
pop
loopne
test
ins
add
sub
fbld
adc
aad
sub
mov
pop
call
inc
out
xchg
ja
add
rcr
push
jno
xchg
xchg
(bad)
jns
aad
push
xor
shl
fwait
xor
jmp
es
jb
outs
push
je
pusha
jg
sbb
hlt
scas
cmp
cdq
out
data16
imul
out
add
mov
jb
push
cmp
fsubrp
pusha
xchg
xor
jne
inc
in
cli
mov
test
in
or
mov
ds
call
clc
mov
push
hlt
mov
test
pushf
movs
hlt
shr
mov
in
jmp
outs
mul
pop
ins
sbb
mov
es
fnstsw
inc
adc
mov
repnz
pushf
jbe
and
jbe
stos
stos
mov
sbb
test
add
std
fistp
jmp
mov
(bad)
call
shl
imul
dec
sbb
push
and
push
stos
dec
inc
in
aam
mov
in
cdq
pop
mov
repz
es
mov
push
(bad)
push
retf
retf
mov
retf
aaa
dec
push
xchg
and
out
scas
scas
mov
lods
test
mov
loope
sbb
push
enter
add
cld
cmps
mov
mov
mov
fisubr
stc
lock
stos
dec
call
repz
cmp
in
push
adc
iret
mov
je
adc
addr16
sahf
push
xchg
pop
imul
mov
adc
scas
and
mov
into
retf
ja
imul
fucomp
xchg
popf
dec
fisttp
cmps
pop
call
sbb
push
test
add
cwde
mov
stos
sahf
mov
and
loop
int
clc
cmps
push
dec
sub
mov
xchg
add
pop
into
fisubr
mov
fidivr
jbe
fwait
and
mov
retf
push
dec
cmp
dec
ins
pop
xor
mov
sbb
mov
(bad)
aad
jbe
adc
xchg
mov
adc
(bad)
push
push
xor
fld
out
loope
pop
outs
pop
jns
pop
dec
mov
pop
or
mov
adc
sti
shl
in
gs
and
das
mov
xchg
sub
dec
sub
div
push
jae
push
sub
mov
stc
inc
or
mov
adc
cmp
or
add
fisub
gs
ds
add
or
pop
(bad)
fwait
inc
(bad)
pushf
mov
idiv
and
xor
repz
cmc
loopne
push
cmc
test
clc
test
mov
pop
stos
rol
sub
xchg
data16
arpl
into
dec
jns
cld
jmp
cmp
push
dec
in
(bad)
fiadd
stos
mov
pusha
pushf
seto
out
jno
sub
dec
in
mov
arpl
jge
dec
and
(bad)
xor
push
fmul
sub
pop
xchg
mov
in
jmp
adc
jbe
ins
or
cmp
mov
mov
xchg
push
pop
mov
repz
push
popf
iret
std
sbb
xchg
push
int3
xchg
add
call
adc
loopne
(bad)
and
shl
lock
(bad)
rcl
div
mov
jp
sbb
clc
xchg
fidivr
jmp
pop
inc
addr16
outs
mov
adc
sub
mov
int3
sub
sub
addr16
push
mov
fwait
ins
mov
mul
pop
repnz
scas
cmp
add
test
mov
jo
pop
push
xor
xor
lds
mov
jmp
xor
pop
cmp
stos
leave
sahf
jo
or
adc
mov
hlt
shr
adc
or
cmp
cmp
std
fdivr
push
sbb
push
loop
out
jno
lea
mov
sub
cdq
in
aad
push
lock
mov
push
push
and
(bad)
mov
int
popf
bound
movs
or
adc
dec
xlat
mov
push
int3
fsub
loop
cld
popa
rcl
xchg
adc
into
jge
sub
addr16
cmps
stos
or
jns
cld
jmp
jp
push
push
outs
ret
add
rcl
ins
add
pop
pop
out
in
fisubr
sar
inc
cmp
push
mov
mov
push
push
jmp
and
jg
sub
rol
data16
jl
xchg
int
jnp
outs
aam
mov
xchg
out
sbb
loopne
cdq
(bad)
fs
daa
mov
xchg
xlat
mov
js
(bad)
push
pushf
test
push
repnz
retf
dec
xchg
pushf
xchg
mov
pop
mov
sub
mov
jmp
cmp
imul
mov
ror
int3
lock
ins
sub
pushf
fimul
cld
xchg
retf
inc
push
xchg
or
sbb
adc
std
inc
adc
sub
xchg
cdq
push
hlt
push
or
add
and
cli
aas
mov
das
loopne
sub
aad
jns
mov
pop
sub
ret
pushf
shl
jmp
add
pop
dec
sti
test
xor
dec
stos
js
int3
imul
inc
inc
movs
jo
xchg
jp
xchg
xchg
test
push
stos
in
imul
xor
daa
xor
adc
leave
(bad)
jns
jae
scas
fistp
iret
jo
rcl
sub
movs
test
pop
sbb
pop
cmp
arpl
mov
cmp
xor
lahf
sbb
xchg
(bad)
icebp
call
ret
div
pop
xor
sbb
outs
mov
arpl
mov
jb
neg
xchg
aam
std
xlat
add
cmp
mov
adc
hlt
cmp
inc
push
dec
repz
xchg
xchg
jne
push
(bad)
sbb
jne
enter
sub
push
ret
push
pop
ja
push
or
cmc
ds
stos
nop
inc
sub
retf
mov
mov
cmp
ret
movs
mov
sbb
sub
jmp
dec
dec
xchg
jle
inc
add
push
cmp
(bad)
jmp
and
ins
nop
mov
div
mov
outs
adc
mov
ss
stos
int3
nop
lahf
push
adc
mov
add
call
fwait
add
in
xchg
sub
mov
push
repnz
pop
and
and
dec
cmps
mov
scas
xchg
out
shl
icebp
dec
jo
xor
xchg
mov
add
dec
(bad)
and
ret
inc
ins
xchg
add
dec
dec
aas
loopne
in
or
dec
loopne
jb
mov
adc
sbb
(bad)
jno
mov
or
inc
ror
mov
or
arpl
(bad)
push
pop
inc
xor
mov
sub
push
ins
add
inc
xchg
fist
jmp
loopne
jg
test
mov
or
out
mov
ret
adc
add
add
int
pop
mov
daa
mov
pmuludq
adc
cli
mov
addr16
fwait
jnp
out
or
ins
out
mov
xor
add
xchg
jp
(bad)
stos
mov
imul
dec
xchg
mov
mov
movs
and
dec
in
xchg
add
cmp
fsub
xor
xchg
push
sub
cwde
pop
mov
jp
pop
inc
repz
pop
cli
scas
xchg
mov
(bad)
repz
shl
repnz
xlat
sahf
outs
push
push
mov
pop
call
adc
jae
and
jbe
jl
xchg
outs
sbb
sub
adc
pop
pop
and
fild
lahf
push
xchg
mov
xor
fstp
cmps
mov
sub
jo
cld
and
adc
jle
repz
xor
cwde
ret
js
movs
out
loope
lea
inc
jmp
pop
pop
das
cs
or
and
mov
or
fucom
shl
xchg
push
mov
cmp
daa
and
rep
adc
test
push
adc
push
scas
sbb
xor
mov
fistp
div
or
int
in
or
pop
mov
push
sbb
out
pop
jmp
xor
xchg
mov
or
xlat
jp
mov
xchg
fbld
stos
cli
popa
not
dec
bound
jmp
mov
mov
xor
in
and
mov
adc
and
out
inc
test
jne
in
enter
push
leave
(bad)
mov
adc
xchg
mov
push
fadd
and
data16
lock
(bad)
push
push
out
ror
outs
into
stc
push
adc
fdivr
fnstcw
in
imul
pushf
mov
mov
xchg
add
xchg
cmps
loopne
daa
repnz
fwait
add
mov
xor
push
or
shl
imul
sub
mov
dec
addr16
push
lea
cmps
dec
xor
xchg
jnp
in
div
lea
add
inc
mov
jp
push
cmp
jmp
jo
cld
and
sbb
pushf
lahf
mov
jmp
cmps
movs
jne
xor
mov
add
mov
mov
mov
pop
iret
cdq
fisttp
lods
mov
pop
mov
sbb
sahf
add
fcom
ins
cmp
dec
mov
mov
mov
stos
stos
dec
into
add
mov
pushf
push
adc
push
(bad)
mov
jo
mov
mov
std
mov
inc
push
movs
sbb
cmp
or
push
push
adc
test
mov
add
xor
pushf
xor
mov
add
xchg
adc
jmp
push
or
cmps
adc
daa
jecxz
out
addr16
mov
popa
cmp
out
sbb
xor
jbe
or
les
xchg
mov
xchg
mov
sar
outs
stc
pushf
and
aam
mov
adc
and
pushf
push
xchg
(bad)
pusha
repz
out
and
sub
ss
xor
leave
nop
mov
mov
lods
ss
rcr
adc
gs
test
mov
mov
imul
pop
adc
mov
and
xor
test
cmp
lahf
aas
shl
mov
mov
daa
mov
sbb
jmp
jge
(bad)
cli
cli
scas
mov
movs
mov
rcl
aam
add
cmps
pop
popf
shl
mov
pushf
call
pop
jbe
mov
xor
dec
out
mov
ins
adc
cmp
adc
cld
test
adc
mov
(bad)
mov
aam
fistp
lahf
jge
inc
lock
popf
and
fsubp
test
cwde
mov
mov
pop
sub
sti
daa
push
add
sub
outs
add
jns
dec
sub
inc
pop
xor
and
lahf
inc
cmp
mov
and
or
or
pop
pop
mov
and
lds
xlat
xlat
(bad)
adc
cmp
add
push
pop
cmps
dec
or
pop
in
mov
inc
aaa
mov
dec
js
lds
jbe
add
and
adc
sub
cs
fwait
neg
test
in
add
mov
push
xchg
jmp
popa
inc
and
imul
int
popa
rcl
xchg
jno
pusha
sbb
fdivr
push
mov
push
dec
mov
pop
outs
iret
dec
lds
sbb
sub
adc
leave
push
jae
call
add
rcl
adc
sub
pop
mov
xor
sub
add
mov
ins
lds
mov
cdq
stc
es
(bad)
xchg
cmp
movs
pusha
xchg
mov
pushf
sub
dec
inc
and
pop
mov
sbb
out
outs
mov
out
mov
fdiv
in
pusha
pop
and
pop
adc
push
out
shl
imul
xchg
loope
lock
jg
xor
xor
cmp
mov
xchg
mov
mov
cmc
stos
aaa
and
pop
inc
loopne
xchg
adc
fsubr
or
or
jno
ret
jb
xchg
jecxz
daa
push
loop
sub
or
rcl
adc
in
mov
int3
cdq
jb
fdivr
ror
ins
fs
test
not
push
push
push
mov
sbb
aam
pusha
and
mov
mov
pop
pop
or
xchg
jbe
push
or
xor
dec
imul
into
in
push
ret
adc
or
stos
in
test
inc
or
loope
cld
and
cwde
ret
fist
mov
mov
sbb
or
adc
sub
addr16
nop
aad
fdiv
push
xchg
or
mov
ss
inc
icebp
xchg
cld
dec
loop
lods
test
pop
test
xchg
xor
mov
sub
lea
pop
mov
mov
ins
mov
jno
push
repz
in
loope
test
ficom
gs
fs
mov
jg
lods
add
stc
adc
cmc
stos
mov
lds
outs
push
aam
vphaddwd
test
fcomp
(bad)
out
mov
jmp
aaa
dec
dec
fwait
cmp
shl
leave
dec
mov
add
stc
mov
sbb
popf
and
(bad)
jb
dec
mov
into
xchg
fidivr
stos
loope
xchg
imul
aaa
jl
add
loope
and
mov
mov
in
fnstenv
test
hlt
add
ins
mov
pushf
in
push
hlt
xchg
xchg
cwde
(bad)
cld
and
add
push
add
aam
mov
xor
jnp
pop
outs
adc
jle
mov
sbb
out
jp
dec
(bad)
jg
imul
stc
rcl
sbb
or
popa
mov
pop
lock
mov
add
push
stos
scas
xor
pop
jge
rol
aad
sti
jmp
xchg
fs
mov
inc
jno
in
call
add
sub
mov
lods
ret
shr
and
mov
cmp
loope
pop
ja
jno
xchg
cmp
in
cmps
loope
mov
mov
mov
inc
data16
mov
cld
sahf
mov
stos
dec
xchg
fst
cmc
pop
mov
out
mov
lods
ret
add
aam
call
dec
sub
mov
loop
cmc
cmp
xor
jge
les
push
retf
adc
push
movs
cmps
mov
enter
icebp
cwde
and
jo
in
and
push
adc
imul
test
dec
sub
out
cmp
jns
adc
dec
xor
ret
xor
sbb
sbb
mov
dec
out
pop
jle
push
aad
or
mov
inc
(bad)
pop
leave
ja
clc
int
call
lds
mov
lahf
retf
pusha
test
mov
scas
push
jne
out
pop
mov
add
sbb
fdiv
dec
xchg
dec
or
js
loope
das
int
jmp
loope
aas
cmp
jnp
rcr
push
push
aad
test
movsx
cmp
loop
mov
gs
cmp
out
stos
shrd
stos
add
iret
inc
inc
lea
enter
idiv
pop
xchg
ds
fidivr
inc
push
(bad)
lds
xchg
aad
add
(bad)
aaa
fcom
outs
dec
cmp
xor
mov
jmp
addr16
push
pop
in
cdq
imul
fisub
les
xor
xchg
mov
jo
push
fisubr
add
cmp
ja
mov
rcr
lahf
arpl
xchg
or
adc
add
hlt
sub
(bad)
sbb
adc
cmp
mov
push
cmc
jb
fstp
(bad)
into
aad
pop
cwde
xor
cmp
push
push
jge
push
mov
mov
loope
add
dec
loop
mov
jmp
sub
fsub
pop
xor
add
dec
mov
add
mov
inc
jb
clc
pop
test
in
jmp
push
popf
loope
cmp
mov
sbb
mov
test
leave
dec
jbe
(bad)
call
nop
fidiv
pop
clc
scas
retf
dec
cmps
push
xor
adc
loopne
dec
jns
(bad)
mov
ret
mov
and
loop
push
jnp
jmp
push
ins
push
add
bnd
out
pop
sub
or
ffree
cld
int
daa
sti
sbb
and
xchg
and
(bad)
cmp
stos
push
leave
inc
cmp
test
pusha
pop
(bad)
in
lods
retf
sar
(bad)
movs
imul
out
or
ss
xor
xor
ins
aas
inc
push
pop
outs
mov
xor
mov
bound
sub
cld
shl
(bad)
(bad)
dec
pop
mov
les
jg
cmp
dec
imul
ror
mov
mov
(bad)
sub
xor
add
mov
jae
add
xor
jp
push
repz
mov
jae
mov
outs
cmc
mov
mov
and
and
sbb
lock
push
ret
or
out
sbb
push
sar
cmps
jae
and
ds
adc
lea
lock
mov
mov
sub
push
mov
and
push
aad
movs
aaa
mov
mov
dec
fs
repz
nop
dec
jge
mov
inc
lods
test
jb
xor
xchg
call
jne
fiadd
jge
dec
ret
or
fimul
and
jne
xchg
xor
test
outs
and
leave
cmp
test
inc
xchg
shl
mov
popa
pop
iret
pusha
aas
jb
xchg
fisub
mov
inc
mov
ret
inc
cs
inc
cmc
movs
aad
push
sub
mov
js
add
xchg
in
add
(bad)
and
inc
xor
js
ins
mov
push
mov
nop
dec
push
(bad)
mov
pop
in
jg
popf
pop
xchg
mov
and
std
jmp
cdq
pushf
adc
pop
(bad)
ficomp
add
aas
or
movs
and
sti
scas
cli
int
mov
in
push
add
out
cmp
cmp
ds
in
jmp
movs
mov
sbb
(bad)
xchg
retf
xchg
xlat
clc
(bad)
push
inc
ret
out
or
xchg
jno
fimul
movs
jnp
inc
mov
or
add
pop
test
jecxz
hlt
dec
cli
daa
inc
into
mov
and
pop
mov
scas
repz
jno
adc
movs
jnp
cmc
mov
or
add
cmp
movs
inc
repz
push
and
loop
push
or
xchg
cld
push
jnp
outs
mov
in
scas
arpl
dec
xor
in
jne
es
inc
jns
popa
xor
pop
sbb
hlt
push
inc
cli
or
(bad)
arpl
loope
in
sbb
mov
xchg
cmps
aaa
jae
or
sbb
gs
lahf
popa
sar
cmps
loopne
xor
xchg
adc
jb
or
jno
mov
daa
bound
adc
and
xchg
or
dec
jo
push
scas
jne
sub
mov
add
popf
mov
jl
adc
repnz
adc
dec
ja
cmps
or
cmp
push
inc
xchg
fisttp
sbb
lahf
jmp
dec
mov
jnp
popf
cmp
mov
xchg
cmps
sub
pushf
pushf
dec
xchg
sbb
xchg
das
dec
adc
push
dec
hlt
xor
pushf
test
(bad)
icebp
cmp
adc
ret
pop
cs
push
mov
and
mov
adc
rol
retf
jb
mov
icebp
pop
leave
lods
sub
jmp
jmp
xchg
and
xchg
pxor
data16
ds
fs
jp
in
xchg
mov
pop
dec
out
js
mov
call
or
retf
or
jno
and
push
lahf
mov
jae
je
push
fldcw
pop
in
in
(bad)
jno
gs
repz
jge
es
adc
cmp
mov
xor
mov
and
es
in
pop
rcl
adc
into
loope
adc
adc
shl
pop
cvtps2pd
cmp
cmp
jge
clc
jle
outs
cmp
addr16
pushf
push
sub
mov
loopne
xor
jbe
adc
test
dec
test
js
mov
mov
int
lock
fidiv
ret
sbb
imul
ins
sbb
pop
loope
sbb
dec
inc
sbb
stc
mov
outs
pushf
inc
es
movs
lock
cld
mov
or
push
lds
mov
xchg
cmp
xor
cmp
in
adc
or
sub
fs
jmp
(bad)
ds
cmp
lods
(bad)
ja
xchg
jecxz
jne
dec
mov
xor
dec
inc
movs
aaa
jae
dec
inc
mov
imul
xchg
xor
icebp
setns
add
and
dec
mov
dec
jae
mov
out
mov
sub
fs
out
and
xchg
mov
dec
fnstsw
mov
inc
test
fimul
or
xor
es
lds
cmp
lods
add
mov
dec
ret
mov
push
bound
jne
icebp
int
loop
out
nop
lahf
mov
mov
inc
repz
daa
push
inc
imul
fstp
jge
jg
(bad)
aad
pop
fcmovbe
cdq
pop
inc
aas
pusha
sbb
mov
cmps
leave
ss
add
bound
arpl
test
fadd
in
and
mov
mov
imul
(bad)
out
mov
aas
and
mov
(bad)
mov
push
add
mov
mov
mov
in
test
dec
data16
sahf
cmp
popa
shr
lods
dec
sub
dec
pop
cs
cmp
mov
and
idiv
scas
scas
fldcw
cli
ins
xor
xor
int3
cmp
aad
scas
pop
popf
jge
sbb
inc
xchg
pop
daa
dec
mov
mov
fdivr
aas
adc
in
cmps
push
mov
jnp
loope
push
mov
push
repnz
fisubr
stc
or
retf
div
mov
mov
jp
cmp
js
dec
jg
xchg
popf
jp
pop
xor
mov
in
gs
mov
pop
xchg
xchg
sti
inc
dec
jne
dec
sbb
jne
or
or
iret
adc
sbb
mov
retf
push
mov
out
popf
pop
out
mov
repnz
inc
sbb
dec
loope
cmps
sub
or
stos
sub
lahf
jecxz
mov
(bad)
dec
lods
out
sub
inc
cmp
add
mov
adc
sub
fs
popa
or
or
ret
push
scas
push
jno
test
jmp
icebp
test
(bad)
aas
das
test
mov
les
(bad)
neg
jo
call
push
ja
fistp
arpl
cmps
add
in
xchg
push
cmps
mov
pop
lods
(bad)
div
test
jecxz
mov
or
aaa
ds
bound
jmp
ret
push
mov
(bad)
stos
push
test
cld
xchg
add
nop
jg
je
xor
ror
sar
out
adc
test
adc
xlat
jno
pop
imul
(bad)
stos
and
rcr
mov
pushf
sbb
scas
or
test
or
xor
call
or
adc
vprotb
xchg
sti
movs
xor
cmp
inc
push
sahf
sbb
cmp
sbb
test
mov
retf
sbb
in
call
xor
scas
in
fwait
cmc
data16
mov
mov
add
jge
xchg
fist
mov
dec
xchg
push
xor
sbb
push
jmp
jp
rcl
pop
ss
and
or
mov
stos
test
shl
push
stos
loop
mov
cmps
ins
mov
and
enter
cvtps2pd
jb
jae
inc
mov
push
int3
jns
jmp
daa
(bad)
xchg
sub
jecxz
repz
ror
in
sbb
or
pusha
xchg
int
push
(bad)
push
mov
call
pop
and
sahf
adc
cmp
retf
loop
mov
mov
jmp
mov
add
scas
loopne
sahf
sub
or
scas
push
out
fidivr
rcl
inc
sub
adc
ss
push
and
adc
xchg
cmc
popf
cmc
sbb
inc
bound
imul
push
push
(bad)
xor
xchg
(bad)
iret
cli
aad
out
sub
call
bound
pop
nop
push
xchg
js
lds
aas
xchg
inc
sbb
cmc
(bad)
test
lock
call
cmps
cmps
xchg
(bad)
std
pushf
pusha
movs
cmps
ins
iret
test
or
jb
and
popf
mov
daa
and
aad
outs
inc
scas
and
(bad)
mov
xchg
test
pushf
inc
push
xchg
jb
push
jle
iret
adc
adc
and
jno
push
add
xor
cli
dec
outs
pushf
inc
stos
and
test
int
adc
jp
fist
pusha
adc
fisttp
push
dec
and
xchg
pop
push
mov
mov
aaa
bound
adc
mov
ror
mov
sub
(bad)
dec
stos
sbb
adc
add
cmps
inc
pop
xchg
call
xor
aaa
xchg
push
repnz
xchg
shr
mov
pop
cdq
jle
jnp
cmp
sti
xchg
jle
ss
or
push
shr
aad
or
xchg
xor
cmc
int
push
dec
adc
dec
inc
out
fcmove
push
xchg
sbb
push
daa
jb
sub
xor
push
push
inc
out
pop
cmp
int3
call
jno
pop
call
popf
outs
test
ja
mov
jmp
xchg
mov
das
sbb
ins
into
int
add
mov
inc
pop
mov
add
add
jno
(bad)
fild
mov
or
shl
pop
fdiv
cmc
out
or
std
test
repz
adc
jno
and
adc
test
(bad)
fimul
lods
sbb
cmps
cmps
jp
out
imul
sbb
test
xchg
(bad)
mov
mov
int3
pusha
imul
repnz
adc
ins
sbb
xchg
retf
scas
jp
jge
sub
(bad)
sbb
push
call
pop
push
fs
ret
jo
int3
xlat
cmp
das
mov
lock
push
add
cmps
sti
test
mov
xchg
sbb
jp
repz
xchg
cmp
inc
jle
in
fistp
lods
mov
sub
mov
cwde
outs
shr
popa
int
loopne
xchg
and
push
add
and
aaa
je
mov
retf
xchg
or
mov
jle
in
jb
jmp
xchg
pushf
mov
fcomp
cs
fxch
nop
pusha
jnp
es
mov
ss
mov
push
sub
inc
sahf
stc
cmps
neg
call
and
push
cdq
int
aam
xchg
push
sub
out
outs
jmp
mov
add
test
cmp
stos
out
out
imul
push
hlt
jp
dec
fdiv
(bad)
mov
or
lods
adc
mov
inc
(bad)
popa
int
push
enter
adc
mov
rcl
lods
sbb
call
xchg
call
stos
push
fcomp
or
dec
lods
or
hlt
sbb
jo
jb
mov
lock
stc
xor
cmp
hlt
pop
add
mov
cmp
into
xor
cmc
xchg
test
int
lods
retf
push
xchg
mov
pop
push
xchg
repz
(bad)
iret
adc
push
in
adc
sbb
inc
and
cmps
jne
leave
and
inc
lods
mov
popf
ret
adc
aaa
fnstcw
repz
std
fs
rol
push
repnz
push
sub
fnstcw
dec
push
push
mov
repz
sti
mov
das
and
mov
add
out
cmp
sbb
popa
xor
pop
sub
adc
cs
push
jecxz
dec
pusha
adc
out
xor
dec
adc
xor
mov
fimul
mov
cwde
(bad)
adc
mov
dec
add
cmp
mov
sbb
test
ins
call
inc
push
sbb
sub
popf
stos
pop
mov
jle
inc
sar
push
mov
idiv
pushf
int3
cmp
fwait
test
lods
cmp
jle
popa
xchg
imul
or
stos
and
sar
or
cmps
out
fcomip
test
in
rcl
int3
mov
sahf
out
shl
fbstp
pop
pusha
cmp
xor
xor
mov
loope
sub
pavgb
aad
or
inc
pushf
xchg
adc
inc
adc
pop
mov
shr
xor
sub
mov
in
and
mov
cmp
mov
adc
(bad)
jp
cmp
dec
retf
js
std
lods
xor
cmps
es
mov
or
add
push
test
cmp
aas
add
xchg
scas
ret
(bad)
mov
scas
add
ja
mov
cmp
or
sbb
pop
cmp
pop
mov
in
sbb
and
jg
lods
jnp
jns
and
dec
lods
sahf
xor
sub
sub
pop
mov
lea
retf
or
stc
pushf
mov
pushf
imul
mov
fneni(8087
test
repnz
mov
(bad)
or
cmp
data16
jge
out
lahf
adc
push
inc
cs
cmps
dec
cdq
pop
in
mov
xor
dec
push
lahf
lods
ins
dec
daa
dec
mov
pop
jge
arpl
scas
loop
or
mov
xchg
xchg
push
inc
sbb
mov
xchg
idiv
or
inc
rol
ss
mov
pop
out
ss
mov
test
repnz
ja
pop
jb
pop
std
jle
imul
fild
dec
pop
cmp
dec
mov
cmp
movs
fcomp
jmp
add
xchg
repz
call
stos
fsubrp
xor
popf
mov
in
inc
jge
dec
push
mov
and
jo
arpl
mov
inc
jmp
add
cmps
and
or
add
inc
aaa
lods
popa
push
mov
ss
in
inc
sub
mov
sbb
call
out
add
inc
lods
fdivr
fucomp
xchg
sar
cmp
cwde
in
in
daa
cwde
xor
xchg
bound
out
add
xor
pop
daa
dec
pop
das
lods
out
and
pop
mov
mov
stos
inc
and
sub
mul
mov
imul
lea
loop
arpl
dec
cmp
call
cmps
mov
mov
mov
pop
mov
xchg
and
add
or
outs
mov
jo
push
mov
or
push
push
cmc
repz
pop
push
mov
jb
pop
mov
inc
add
pop
and
sub
call
xchg
imul
lahf
push
into
pop
(bad)
jle
mov
stc
(bad)
aad
jae
pop
(bad)
xlat
cdq
dec
mov
mov
sub
push
mov
mov
pop
xchg
pop
mov
jnp
mov
xchg
mov
cmp
and
dec
leave
sahf
push
rcr
mov
ss
cmp
push
movs
xchg
in
popf
mov
mov
and
out
or
pop
stos
xor
sbb
pop
push
mov
loope
dec
or
lods
(bad)
les
cmp
xchg
scas
out
scas
or
cdq
push
jmp
push
loopne
es
leave
mov
push
cs
stc
fmul
xor
clc
retf
mov
mov
push
and
mov
mov
mov
inc
sbb
aam
out
and
cmp
in
sbb
add
imul
mov
adc
bnd
inc
cmp
jmp
sbb
adc
lods
sub
nop/reserved
gs
arpl
mov
mov
xlat
std
inc
and
mov
lods
mov
jbe
pop
cmc
pusha
scas
pop
gs
inc
adc
sbb
pop
add
ss
mov
and
in
xor
mov
ins
repz
jmp
pushf
mov
jg
ss
lds
or
pop
mov
dec
mov
jp
dec
jg
inc
dec
cmps
leave
xchg
test
push
retf
mov
mov
jge
add
retf
shl
aam
pop
scas
shl
xchg
sbb
js
xchg
(bad)
mov
(bad)
sbb
pop
pop
mov
xchg
out
fcomp
out
test
retf
dec
retf
call
dec
add
popa
xor
sbb
sti
ins
cmp
adc
ror
push
cmp
sub
mov
call
xor
xchg
aaa
push
xor
ss
xor
dec
sub
push
or
xor
loope
and
icebp
jae
rcr
and
xchg
add
repz
xchg
jnp
mul
xchg
cld
out
pop
sbb
cmp
fld
add
sbb
jne
sbb
mov
pushw
jl
or
fsqrt
pop
push
pusha
loope
repnz
jmp
ss
lea
mov
pop
inc
or
pop
mov
pop
cmp
push
ja
(bad)
or
jnp
push
or
dec
xchg
arpl
lds
js
xchg
add
jb
icebp
jle
(bad)
(bad)
das
call
ins
sub
pop
stos
xchg
adc
fcom
pop
jmp
mov
mov
scas
cmc
add
outs
sub
pop
mov
out
adc
in
stc
and
loopne
sbb
aas
push
mov
call
xchg
or
dec
js
jle
imul
fbld
pop
mov
jg
loop
cmp
sbb
sti
out
or
jmp
xor
and
push
(bad)
fcomp
cmp
push
push
es
xchg
jne
test
popf
test
adc
call
icebp
pop
stc
sti
dec
xchg
cwde
test
add
(bad)
sub
sub
push
mov
pusha
jo
mov
loope
popa
imul
popa
and
mov
push
stos
cli
xchg
or
test
stc
imul
dec
leave
cmp
scas
sahf
mov
inc
fist
int3
scas
and
lods
test
inc
and
test
repnz
scas
xor
cdq
pop
cli
lods
and
xor
pop
mov
jae
adc
mov
jg
fsubrp
das
jg
cwde
arpl
mov
loope
mov
imul
adc
addr16
aaa
dec
inc
sti
sti
inc
fs
sbb
cwde
cli
cmp
rcl
dec
movs
mov
push
fiadd
and
addr16
jmp
lods
(bad)
cwde
fwait
scas
xchg
scas
mov
fnstsw
lahf
or
mov
mov
cwde
xor
shl
xor
ins
xor
pop
call
imul
pusha
les
je
add
inc
shr
mov
dec
js
push
xor
es
je
loopne
push
fsubr
(bad)
(bad)
xor
fadd
jg
cmp
cmps
cli
jge
lds
shl
test
add
jg
xchg
pusha
jmp
rcl
adc
or
adc
mov
sub
cmp
leave
retf
and
or
hlt
(bad)
cmc
and
in
aad
push
stos
shl
dec
aaa
sub
cmp
add
js
mov
mov
jmp
xor
clc
inc
mov
dec
in
cwde
pushf
jge
xchg
xor
mov
cli
jae
xchg
(bad)
pop
rcl
sti
add
xchg
in
adc
in
out
mov
aam
popa
sbb
fsub
mov
jmp
push
out
jnp
retf
cmp
sub
ds
jl
adc
sub
fs
mov
lahf
outs
dec
in
aaa
lds
mov
or
jmp
lods
xor
daa
jbe
repz
xor
xor
sub
ins
mov
test
neg
inc
mov
lods
into
lahf
shl
dec
mov
popa
popa
and
iret
dec
sbb
mov
push
xor
sbb
movs
xchg
lahf
mov
imul
mov
jbe
in
leave
jg
push
fild
fimul
stc
inc
outs
or
ins
jp
cmps
pop
dec
mov
cs
in
jns
mov
mov
test
cmc
adc
jp
sub
stos
inc
loope
jge
iret
mov
(bad)
jo
loop
and
cmc
int
fwait
inc
cmp
shr
cld
scas
mov
scas
aaa
pop
das
(bad)
adc
mov
mov
test
and
out
(bad)
int
jb
xor
(bad)
jl
mov
xor
outs
call
inc
fld
sbb
xchg
xchg
dec
cs
js
sub
(bad)
out
dec
in
xchg
loopne
or
mov
xlat
xor
scas
scas
jge
cwde
loope
(bad)
cmp
mov
fisubr
movs
aas
and
adc
add
test
loopne
aaa
call
cmp
jecxz
popa
jmp
push
aam
dec
jae
jo
add
sbb
int3
repnz
mov
sar
push
mov
popa
inc
test
loopne
fwait
sbb
aaa
das
(bad)
adc
lahf
outs
inc
push
cmps
push
scas
mov
xchg
adc
in
int3
pop
fnstcw
js
lea
cwde
xchg
mov
mov
push
aam
sub
sbb
stos
sbb
add
xor
pop
mov
or
push
pop
and
aam
rcr
(bad)
cmps
shl
sbb
int3
inc
jmp
or
push
add
fdivr
jae
cmp
ins
ror
out
adc
xchg
jl
xlat
int3
das
mov
(bad)
and
xor
mov
in
mov
out
add
pusha
pop
pusha
out
jmp
jne
cwde
add
add
neg
mov
mov
dec
cld
das
mov
cld
(bad)
loopne
mov
rcl
mov
inc
call
and
(bad)
js
not
jg
sbb
pushf
sub
mov
cmp
ss
inc
loope
pop
xor
rcr
add
cli
add
ret
push
in
mov
sub
pusha
mov
gs
and
dec
cmp
add
and
fbstp
xor
test
cld
sbb
push
xchg
mov
mov
stc
in
add
push
mov
lock
test
fcmovbe
sbb
popa
xchg
dec
icebp
jecxz
jp
stos
leave
sbb
adc
scas
inc
aad
out
sbb
or
popa
cmc
xor
add
xor
pop
sbb
cdq
and
and
(bad)
popf
inc
stc
dec
pop
dec
mov
movs
mul
mov
and
call
icebp
push
js
inc
(bad)
jns
xor
cdq
rcl
add
pop
xor
mov
mov
mov
fdivr
gs
mov
sub
stos
add
lods
fmul
mov
push
sub
pop
je
pusha
pop
pop
into
mov
(bad)
shl
enter
and
sub
ds
mov
xor
retf
arpl
stos
jg
out
sbb
mov
xchg
jecxz
push
fnstsw
jae
div
xor
mov
out
in
add
fsub
cld
lea
shl
cwde
int
outs
xor
aas
loope
imul
repnz
cli
add
data16
push
pop
(bad)
mov
push
adc
sbb
rcl
add
dec
into
mov
xchg
cmps
sbb
mov
outs
fwait
dec
clc
push
sub
cmp
mov
(bad)
jae
clc
sub
mov
jb
inc
push
lods
fdivp
lahf
shl
sub
push
ret
xchg
adc
mov
xor
jge
mov
mov
ins
push
adc
mov
push
ret
add
neg
mov
cmp
out
mov
nop
mov
sub
jmp
rcr
add
sub
push
cs
mov
jg
stc
aas
movs
jae
int3
rcr
sbb
test
jmp
or
add
fwait
inc
daa
popf
xor
ffree
sbb
cmp
data16
ss
popf
call
add
out
iret
mov
push
push
pop
fist
aam
fisttp
popa
cmp
jmp
aaa
test
test
xchg
or
push
add
out
shl
ret
xor
add
add
aam
scas
ss
cs
(bad)
test
xchg
or
sub
and
outs
push
ror
add
test
pop
jg
retf
cmovp
jno
scas
xor
cli
test
call
and
cld
dec
pop
cmpxchg
mov
imul
rol
xor
push
in
dec
shr
cmp
sbb
dec
mov
clc
(bad)
jb
out
xchg
inc
into
push
daa
push
add
add
dec
mov
and
lods
out
dec
lods
(bad)
mov
sbb
dec
frstor
mov
or
scas
inc
jmp
mov
ds
inc
lock
ret
(bad)
or
mov
pop
mov
pop
adc
stc
jnp
inc
js
fcomp
add
out
mov
dec
jmp
sub
stos
adc
or
sbb
adc
sbb
and
pop
sbb
sub
inc
pop
cli
jge
xor
(bad)
xchg
cmps
cmp
mov
ins
or
cmp
(bad)
xor
adc
cmps
and
repnz
lahf
mov
jmp
mov
xchg
ret
push
fidiv
out
add
in
in
cmp
cmp
cmps
popa
jg
int
adc
cmps
aad
pop
ins
pop
cs
mov
or
lea
mov
repz
jb
(bad)
xor
inc
push
or
cld
int
and
pusha
rcl
cdq
mov
adc
inc
in
pop
popf
cmp
jnp
push
jns
xchg
mov
push
out
push
sbb
xchg
dec
mov
daa
and
mov
sbb
cmps
outs
iret
add
xchg
out
scas
xor
ja
mov
push
stc
ins
iret
aaa
pusha
jnp
inc
xor
inc
inc
cwde
fisub
bound
inc
das
mov
and
cli
mov
sbb
ins
sbb
mov
fisttp
call
pop
pop
test
and
call
cmp
pop
add
xchg
out
mov
xchg
(bad)
js
out
and
mov
mov
sub
ins
xchg
(bad)
mov
shr
aaa
daa
sbb
ror
jnp
cmp
enter
dec
dec
dec
sbb
push
stos
mov
lea
xchg
int
test
dec
adc
or
cmp
(bad)
sub
mov
aas
and
daa
push
in
scas
retf
(bad)
mov
xor
dec
mov
pop
ss
sub
mov
push
cmp
cmps
jae
sbb
scas
adc
xchg
(bad)
movs
cwde
sub
int3
jmp
je
scas
movs
leave
pop
sub
iret
lods
loope
outs
movs
imul
ret
sub
pusha
inc
mov
movntq
dec
pusha
adc
int
mov
lock
aam
mov
mov
xchg
out
sbb
outs
pop
xchg
push
dec
call
shr
dec
fistp
fwait
cmp
inc
add
int
dec
(bad)
sub
outs
test
or
out
jle
pop
jge
inc
aad
scas
mov
(bad)
dec
mov
(bad)
jmp
cdq
in
scas
rcr
cld
push
fcomp
test
(bad)
bound
mov
push
mov
xchg
call
push
fidivr
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
sub
cmps
and
push
jmp
jne
nop
cmps
mov
pop
aam
stos
loopne
jg
std
jne
psrlq
xcrypt-ofb
cmps
stos
xchg
xchg
mov
fcmovne
xor
xor
dec
test
mov
or
sbb
pop
jb
jmp
dec
or
mov
push
mov
jo
mov
(bad)
out
stos
lock
(bad)
popf
hlt
gs
add
(bad)
or
mov
sbb
mov
jmp
cmp
or
scas
repnz
mov
xchg
pop
hlt
sbb
adc
pop
sbb
fsubrp
aas
sar
push
imul
lock
adc
(bad)
ds
push
ficomp
sbb
mov
and
test
push
mov
cmp
shr
out
pop
sbb
fld
loope
mov
mov
adc
je
ins
(bad)
aad
ins
xchg
sbb
mov
cmp
lds
jle
lock
xor
mov
dec
stc
or
test
mov
test
cmp
push
push
mov
imul
inc
jb
repnz
in
pop
ret
int
das
call
(bad)
jge
push
inc
push
push
sub
xor
test
aad
mov
xor
jb
std
and
jl
sbb
adc
dec
std
push
in
loop
arpl
jo
xor
je
push
mov
and
pushf
xor
out
fs
aas
and
and
adc
mov
sahf
pop
add
ss
jecxz
sbb
mov
ror
cmp
xor
inc
push
das
mov
popa
jecxz
xchg
shr
jnp
pop
add
inc
or
xor
dec
pop
push
adc
push
or
pusha
das
jmp
mov
push
ins
rcl
mov
jp
add
loope
pusha
mov
out
or
xchg
cld
nop
sub
xchg
rol
jge
add
ja
loopne
add
scas
add
loop
pop
int
inc
fistp
dec
and
ja
popa
aaa
fiadd
sub
mov
xor
adc
xchg
sub
aam
add
test
mov
arpl
or
fwait
cmp
xor
addr16
adc
mov
aam
call
push
arpl
or
lods
push
and
mov
mov
jns
mov
xchg
inc
cli
xchg
cmp
aam
lods
mov
ja
test
xchg
xor
jns
pop
scas
imul
dec
daa
fadd
sub
out
jl
mov
ret
xchg
or
sub
lds
mov
mov
in
pop
enter
daa
(bad)
dec
pop
mov
xor
(bad)
mov
jnp
jne
dec
jae
mov
pusha
in
dec
int
xor
scas
cli
and
dec
sbb
xchg
adc
xor
shl
pop
ds
test
das
or
pop
fisub
cmp
inc
lahf
shl
setbe
sbb
push
or
hlt
lods
call
pop
sub
fcom
fidivr
dec
cmps
lods
xor
mov
mov
ds
sbb
sbb
or
xchg
cmp
or
in
mov
jge
sbb
fxch
adc
out
and
out
mov
push
call
nop
js
js
sub
(bad)
jb
ret
and
or
and
push
out
je
push
jne
jno
bound
sti
pop
dec
lods
je
mov
add
leave
mul
pushf
jne
push
add
sbb
clc
fcmovbe
push
fnstcw
pusha
test
mov
xor
imul
aam
pop
add
das
ja
or
xchg
dec
dec
mov
data16
nop
jo
ins
jmp
into
movs
dec
xchg
mov
mov
xchg
ror
cdq
jno
inc
mov
cmps
clc
adc
call
retf
dec
add
retf
imul
push
and
jne
or
push
cmp
mov
cmp
mov
mov
push
cmp
adc
fild
lock
inc
inc
mov
sbb
dec
pop
out
jecxz
dec
aad
int3
shl
mov
retf
pop
dec
add
xchg
in
addr16
mov
add
add
test
jl
and
pop
adc
pushf
data16
adc
psubsb
pop
daa
fadd
je
pop
and
inc
sub
mov
inc
xor
sub
fs
add
lahf
push
mov
add
pop
xor
(bad)
xor
fisubr
adc
out
lods
xor
cmps
gs
xor
(bad)
jmp
shr
mov
retf
or
in
xlat
mov
cmp
stos
and
mov
ret
mov
and
jno
and
dec
fwait
mov
in
aam
jno
push
and
cmp
test
aaa
cmc
cmp
pop
ins
cmc
(bad)
fcomp
repnz
call
imul
xor
movs
sbb
mov
jbe
icebp
arpl
sub
dec
or
add
cmps
inc
addr16
test
or
or
or
ins
jmp
imul
jmp
add
aas
push
hlt
cmp
xchg
addr16
aas
popa
(bad)
stc
mov
pusha
xor
push
and
and
xchg
sti
ss
or
punpcklbw
(bad)
aam
push
and
jl
in
dec
and
stos
xchg
mov
popf
sbb
(bad)
aad
push
mov
pop
std
sahf
loop
sub
fild
adc
clc
outs
dec
pop
add
outs
mov
jae
or
mov
cwde
cmp
iret
sahf
sub
add
sbb
test
sub
xor
out
in
sbb
push
loop
ins
sub
movsx
cmp
xchg
mov
ror
ins
fisub
cmp
inc
lds
inc
jnp
cdq
and
rol
push
movs
inc
js
enter
jmp
jg
call
adc
mov
icebp
loope
sbb
fnstsw
ja
pushf
jmp
das
fiadd
je
int
pop
inc
sbb
and
fisub
pop
int
mov
jle
daa
cmp
push
push
mov
push
adc
pusha
mov
popa
and
mov
add
inc
test
enter
sar
inc
std
sbb
mov
mov
cmps
repnz
pmullw
xchg
call
leave
sti
in
mov
fimul
dec
adc
iret
xchg
int3
rcr
dec
dec
leave
sub
mov
xor
out
cli
mov
or
mov
lock
icebp
jp
and
push
adc
pop
mov
push
mov
sti
ins
iret
arpl
movs
in
mov
fldenv
loopne
aam
mov
xchg
leave
xchg
ret
cli
movs
push
sub
ins
stc
es
scas
stos
sar
inc
or
movs
or
sti
jp
adc
sbb
sub
adc
stos
xor
pop
repnz
xor
pop
ret
scas
hlt
retfw
or
int3
jo
rcr
ins
fild
mov
into
mov
pshufw
adc
pop
and
sub
push
test
push
mov
lods
jne
dec
fwait
jns
jmp
jl
cmp
clc
scas
mov
sbb
dec
or
push
mov
fldl2e
and
cs
jge
xchg
or
gs
mov
dec
scas
xchg
cmps
push
mov
test
ds
retf
(bad)
repz
ret
retf
cs
dec
sub
pop
fadd
call
push
xchg
push
leave
mov
adc
stos
lahf
test
pop
(bad)
loop
js
ficomp
(bad)
adc
mov
fmul
scas
aam
or
xor
clc
mov
cdq
mov
jge
test
test
jp
test
mov
sbb
and
cmc
out
push
shl
push
xlat
push
dec
or
movs
mov
pusha
aaa
xlat
(bad)
fild
add
fs
rcr
mov
(bad)
lods
sub
adc
js
outs
add
imul
cmc
les
mov
ffreep
icebp
je
addr16
jg
aad
jecxz
push
xchg
adc
cmp
ins
movs
adc
ficom
(bad)
add
in
cli
and
push
pop
mov
sub
push
fwait
fwait
jmp
jmp
inc
jmp
sti
add
fdiv
dec
xchg
test
mov
mov
and
push
aaa
pop
pop
stos
pop
mov
mov
jge
fwait
mov
mov
adc
push
jle
(bad)
and
pop
call
in
or
adc
or
sti
fbstp
aad
sub
mov
push
push
inc
ins
fimul
xchg
cmp
mov
xchg
cmc
popf
push
or
mov
jne
inc
mov
cmps
and
ja
out
push
jmp
and
in
or
pop
repz
push
mov
mov
arpl
push
sahf
movs
push
xchg
dec
dec
sbb
add
cld
rcr
pop
cmp
pop
xchg
mov
xor
jne
or
xor
pop
jecxz
sub
dec
pop
scas
stos
aam
or
retf
inc
fwait
ds
ffree
ja
(bad)
daa
sbb
xchg
mov
sub
gs
cwde
imul
in
shl
sub
dec
pop
push
jnp
mov
ds
push
leave
jmp
sbb
stos
fiadd
pop
add
xor
or
lds
and
fwait
outs
xor
fdiv
push
cwde
sub
adc
jo
pop
push
pushf
stos
jecxz
mov
loopne
and
adc
mov
movs
sub
jge
jns
mov
push
xchg
xchg
mov
sar
and
addr16
mov
das
sbb
outs
sbb
icebp
add
ss
fwait
add
cld
and
(bad)
fs
jmp
in
sub
cs
inc
mov
xchg
cmp
in
(bad)
jecxz
and
movs
mov
sub
mov
push
dec
fnstcw
jo
rcr
sbb
and
add
ins
jl
les
dec
mov
scas
sar
xchg
test
push
sub
psubb
cld
loopne
sbb
jno
in
clc
neg
inc
fwait
cmp
in
jg
xor
sub
js
push
ror
psrad
js
je
cli
pop
push
push
sbb
xchg
iret
js
cld
(bad)
mov
mov
outs
sbb
fidiv
mov
sub
mov
add
jnp
ror
sbb
ror
pop
mov
jae
movs
xor
scas
xchg
mov
enter
or
mov
inc
ror
jo
adc
sbb
iret
cmp
mov
sub
frstor
sahf
lea
iret
push
ret
call
stos
fwait
popf
jb
inc
test
shr
cmc
mov
(bad)
pop
xchg
push
fwait
xchg
fmul
or
or
outs
xor
lods
jnp
dec
js
sbb
test
ret
mov
jns
dec
xor
mov
cmc
pop
fxch
fiadd
or
ja
or
inc
fdivr
pop
fidiv
lods
jmp
jg
retf
sub
dec
mov
retf
out
sub
mov
adc
mov
lds
push
aam
xchg
pop
je
mov
ret
pusha
(bad)
xlat
jno
lods
lods
sub
test
jne
sub
ds
xchg
add
ret
lods
arpl
or
push
or
push
cmps
pop
ror
scas
(bad)
sbb
retf
outs
inc
outs
xor
pop
stc
mov
mov
and
ins
movs
fst
pop
or
mov
push
ja
sar
and
out
adc
repnz
dec
enter
daa
pop
outs
xchg
pusha
es
stos
jmp
test
repz
ror
hlt
shl
push
movs
stos
xchg
push
push
or
mov
push
inc
inc
xor
leave
(bad)
ficomp
out
mov
adc
inc
js
call
fnstenv
in
repz
xchg
cmc
inc
or
(bad)
mov
mov
neg
pop
xchg
loopne
jnp
retf
mov
ret
inc
fnstcw
mov
int
cwde
sbb
test
arpl
gs
sub
fwait
mov
xor
mov
aas
xor
not
cmc
dec
dec
inc
sbb
jne
or
pop
lock
imul
sub
rcr
adc
movs
sbb
(bad)
leave
lods
adc
ins
retf
inc
cmc
dec
inc
mov
jbe
loop
inc
outs
push
xchg
mov
jmp
mov
jle
outs
pusha
mov
shl
jno
js
and
add
in
aam
nop
mov
(bad)
out
and
clc
fisttp
iret
ret
jp
push
mov
sub
pop
enter
pop
out
push
popa
leave
mov
imul
jcxz
cmps
jge
retf
movs
xor
mov
push
int3
(bad)
scas
sub
mov
pop
popa
pusha
cmp
mov
call
loop
ds
lods
inc
and
pusha
cmps
xor
inc
das
fiadd
cdq
or
dec
enter
outs
mov
stos
xchg
scas
cmp
dec
mov
mov
or
jg
cmp
mov
movs
aad
jle
nop
les
push
repnz
mov
push
call
pop
pop
mov
inc
dec
call
sub
dec
test
mov
(bad)
mov
cs
dec
loopne
lea
ds
mov
dec
jp
movs
jp
mov
sbb
add
inc
mov
dec
pushf
cmp
cwde
inc
imul
push
push
iret
fmul
hlt
icebp
sbb
ret
fwait
mov
xor
xor
push
(bad)
in
mov
outs
mov
aad
enter
ficomp
push
mov
mov
jne
cmps
push
fcom
in
sbb
call
cdq
retf
jns
stos
sbb
mov
lods
xchg
mov
add
dec
or
sti
xchg
pop
mov
mov
sar
lods
das
jbe
and
sbb
stos
xor
jle
push
adc
jns
shl
and
inc
repz
pop
ret
mov
push
sub
ins
fnstsw
pop
rcr
std
(bad)
movs
outs
ins
stc
dec
sbb
mov
aas
fs
inc
pop
ins
or
jl
sti
sbb
add
call
cmp
jb
pop
push
push
aad
jle
loopne
and
jmp
jns
dec
mov
addr16
or
xchg
push
and
or
test
and
adc
or
add
(bad)
(bad)
pushf
movs
cmp
cwde
add
dec
mov
and
mov
sub
sbb
rcl
arpl
hlt
sub
out
mov
test
ds
cdq
jge
push
add
std
sbb
stc
cs
and
inc
pop
xor
adc
and
jb
xor
fistp
cmp
push
jle
sbb
test
lds
imul
cmp
scas
mov
aam
mov
ud1
sub
dec
mov
stos
cmp
ss
xor
sub
lods
aam
ja
and
les
jp
pushf
mov
(bad)
je
(bad)
xchg
(bad)
cli
jne
icebp
or
sbb
mov
scas
add
stos
mov
cmp
sbb
or
enter
sub
inc
ret
cwde
dec
stc
or
and
and
mov
xchg
into
jg
adc
pop
adc
scas
jns
pushf
or
ins
or
add
dec
sbb
repnz
imul
popf
ja
cmp
lea
xchg
pushf
jg
and
in
pop
retf
inc
fld
push
push
jae
jnp
(bad)
push
xchg
mov
loopne
push
mov
mov
cmp
aad
adc
jne
repnz
sbb
stos
outs
(bad)
mov
outs
push
je
bound
mov
push
mov
mov
fistp
mov
cmps
test
xor
fbld
in
ret
adc
hlt
xor
push
test
cmp
pop
pop
pop
push
mov
mov
or
out
jecxz
mov
idiv
pop
dec
loope
xor
inc
neg
popa
cld
pushf
adc
arpl
jns
mov
mov
mov
in
mov
jns
add
add
push
jp
ss
dec
(bad)
call
lods
loopne
(bad)
sti
xchg
pop
jecxz
jns
sbb
movs
xchg
adc
cmp
mov
xor
das
mov
xchg
leave
(bad)
stc
call
stos
cmp
pop
mov
leave
not
jne
repnz
jo
ror
(bad)
mov
movs
dec
push
mov
(bad)
pop
xchg
mov
jnp
mov
neg
leave
pushf
xchg
push
sbb
add
push
cmp
(bad)
and
daa
outs
jmp
in
mov
mov
(bad)
outs
mov
sub
arpl
or
push
cs
cmp
mov
stos
stc
push
jl
xor
push
test
inc
sub
mov
ja
repz
add
(bad)
pop
inc
push
mov
push
dec
xchg
dec
pop
push
push
test
(bad)
cmp
pminub
movs
test
loop
in
jne
(bad)
cmp
enter
fs
fsubr
js
push
(bad)
out
aaa
cld
sahf
or
add
scas
scas
xor
or
add
jle
rcl
add
pop
lock
pop
je
adc
out
aad
data16
rcr
lea
cmp
push
add
shl
in
scas
add
push
outs
ja
sahf
das
sub
daa
imul
imul
jns
sbb
popa
jle
movs
jb
dec
and
scas
pop
popf
repz
and
mov
pop
lahf
fsubr
je
and
xlat
xor
sub
pop
test
or
sbb
adc
aam
repz
(bad)
(bad)
movs
shr
jns
jne
xor
icebp
nop
fdiv
inc
gs
sbb
pop
ins
xchg
imul
shr
ss
aas
retf
popa
pop
sbb
xor
out
xchg
pop
in
movs
cld
push
inc
and
sbb
gs
mov
push
push
retf
pop
mov
popf
inc
xchg
xor
fbld
pop
and
or
cmp
mov
dec
xor
push
mov
shrd
cmc
xlat
ins
dec
pusha
popf
mov
(bad)
cmp
cmc
loopne
and
cmp
or
scas
push
xchg
inc
fnstcw
shr
xchg
fisub
test
imul
nop
popa
enter
sahf
or
leave
in
dec
into
push
inc
jns
leave
pop
adc
add
push
mov
iret
dec
add
das
js
or
mov
repz
nop
lock
and
xchg
loopne
cmc
in
out
outs
arpl
xchg
adc
pop
(bad)
test
and
ror
neg
mov
das
xchg
mov
int3
mov
fcom
add
sbb
call
sub
(bad)
aam
retf
not
push
fmul
aad
and
jle
iret
js
mov
fsubr
adc
fisttp
rsm
xchg
stc
or
ins
mov
sub
pop
lock
imul
lods
(bad)
shl
lods
xchg
mov
xchg
xlat
adc
rol
push
cmp
mov
and
sub
sbb
lods
int3
lock
mov
sub
sub
mov
jge
iret
push
aaa
jl
cmp
lds
ret
adc
aaa
jno
rcr
pop
test
xchg
sub
inc
xchg
jb
push
(bad)
outs
retf
mov
aam
and
shl
adc
sar
dec
neg
cmps
mov
pop
sub
mov
and
mov
scas
push
xchg
retf
scas
inc
ds
lock
imul
xlat
aad
jl
and
cmp
cld
sub
pop
add
cmp
xchg
repnz
mov
iret
inc
xor
push
dec
xor
push
das
add
shl
sahf
icebp
adc
adc
mov
pop
or
adc
arpl
xchg
push
(bad)
dec
push
push
lods
xor
mov
les
sbb
stos
adc
mov
cli
dec
push
outs
ss
das
jmp
je
push
imul
mov
mov
xchg
add
xor
jno
leave
dec
ja
rcr
lock
out
xchg
ins
aam
jb
xor
xchg
mov
jbe
xor
inc
jge
test
mov
addr16
cld
dec
retf
xor
xchg
daa
(bad)
and
lea
(bad)
gs
pop
xchg
not
repnz
popf
icebp
xchg
jp
cmp
(bad)
dec
jae
xor
movs
(bad)
xor
jg
in
in
stc
cmp
data16
push
jl
outs
jmp
push
push
iret
mov
dec
cli
scas
sub
aaa
outs
movs
mov
into
scas
mov
jmp
inc
pop
jb
ror
rcr
lods
sar
inc
popa
push
or
mov
daa
jg
inc
push
out
ins
das
jp
(bad)
or
cmp
retf
aaa
outs
pop
mov
ds
shl
dec
shl
fild
leave
push
(bad)
push
add
or
iret
aaa
add
mov
fld
inc
outs
retf
ret
scas
push
pop
pop
jne
or
jne
sbb
lahf
in
xor
cld
mov
and
les
pop
ins
test
cld
jmp
lods
hlt
push
mov
fisttp
dec
vmulss
inc
push
inc
sub
call
(bad)
xchg
adc
mov
ins
fwait
push
sub
ins
cwde
pop
jp
pop
sub
mov
lods
xor
adc
xor
and
in
popf
jg
jnp
rcl
aaa
stos
dec
mov
mov
fild
mov
je
sub
fwait
mov
xchg
push
ret
stos
stos
cmp
mov
aas
pop
rcl
(bad)
into
retf
sbb
or
ret
sti
mov
xchg
xor
sub
ss
sub
mov
inc
push
sbb
rcr
mov
jae
in
lods
jbe
call
push
in
imul
sub
in
sub
popa
cli
mov
xchg
adc
mov
das
cmp
clc
xchg
test
jae
xchg
jae
or
ss
push
cmps
pop
jmp
xchg
pop
(bad)
imul
xlat
daa
sub
add
mov
movs
inc
scas
push
(bad)
fwait
and
sbb
mov
inc
leave
neg
cmps
sub
cmp
pop
sbb
inc
pop
sbb
repnz
dec
rcr
das
shl
sub
mov
cmp
mov
out
cmp
frstor
sub
fcomp
retf
fist
aas
push
pop
(bad)
jbe
fnstenv
mov
xchg
or
popa
cmc
(bad)
add
mul
sub
and
jp
rcl
ds
icebp
mov
jmp
ds
addr16
das
hlt
xchg
out
jmp
mov
dec
push
push
add
push
icebp
jge
or
inc
lods
mov
and
add
add
shl
enter
cdq
dec
push
jo
test
or
cmp
bound
outs
cmps
imul
dec
mov
pop
dec
xchg
div
mov
(bad)
adc
sub
jae
aad
jae
lods
cmp
sub
xchg
imul
sar
pop
iret
test
daa
pop
daa
pop
dec
push
dec
sbb
xlat
popf
mov
sbb
ret
inc
loope
imul
push
dec
mov
jp
icebp
ds
fst
jmp
pop
std
test
jmp
sub
dec
ins
adc
rcr
lods
(bad)
pushf
sub
cmps
hlt
mov
cmps
arpl
xchg
(bad)
loop
xchg
mov
add
sub
into
jle
push
js
jecxz
pop
rcl
xchg
push
inc
fnstenv
(bad)
adc
aad
aam
sar
ja
jp
je
sub
pop
jmp
leave
sbb
ret
ret
pushf
jbe
xor
leave
in
push
mov
(bad)
mov
sbb
in
add
adc
and
cmps
jno
inc
xor
shr
pushf
cld
repnz
in
xchg
addr16
adc
stc
pop
lods
call
fmul
clc
cld
daa
sbb
cmp
or
add
stos
cmp
outs
xchg
push
lods
lock
(bad)
inc
jbe
push
into
xor
int
fidivr
pop
inc
mov
das
push
push
and
cmc
inc
and
and
pop
stos
inc
add
pop
xor
inc
jae
stos
sub
aad
popa
xlat
aam
fwait
rcl
sub
bound
jns
push
hlt
(bad)
inc
cmc
mov
pop
inc
sbb
mov
stos
xchg
adc
adc
leave
push
rol
popf
pop
jle
sbb
xor
loop
mov
jae
aad
aas
xchg
cmps
push
retf
retf
movs
inc
loop
jg
cmc
dec
pop
inc
mov
dec
stc
iret
mov
xchg
xlat
clc
lods
or
cdq
dec
(bad)
jle
retf
fwait
sub
fmul
cmc
push
xor
movs
ret
jno
mov
inc
push
fdivr
(bad)
mov
sub
dec
xchg
jne
push
mov
and
std
fidivr
iret
test
imul
mov
dec
sub
and
mov
adc
fld
push
push
scas
dec
mov
rcr
or
mov
and
inc
xchg
hlt
hlt
push
fcmovnu
shrd
pop
dec
fistp
adc
not
add
push
inc
mov
mov
sub
(bad)
add
jae
aas
mov
inc
and
mov
adc
or
cmc
sbb
adc
cmc
cmp
pop
nop
les
cwde
or
and
inc
rcl
sbb
aaa
jb
call
push
lea
cmp
mov
sub
sahf
push
mov
adc
call
fidivr
push
jne
jns
mov
pop
mov
in
fadd
je
mov
ss
pop
pop
push
xlat
and
cmps
xor
add
sar
call
(bad)
adc
push
and
iret
xlat
and
jmp
outs
xor
push
hlt
xchg
mov
cld
cmps
(bad)
bound
add
lds
push
dec
mov
arpl
data16
outs
push
sbb
cmp
xchg
mov
call
aam
fsub
es
loop
inc
mov
neg
mov
stc
pop
adc
sub
enter
mov
das
push
adc
or
int3
xchg
push
pop
cld
jno
and
mov
in
cs
js
in
jns
pop
fs
and
lods
cmps
cmp
(bad)
xor
lods
push
shr
cmps
pop
mov
cmps
add
jae
shl
mov
push
aam
call
push
test
rol
(bad)
xchg
push
cdq
mov
bound
or
pop
pop
pop
lods
enter
stc
pop
int3
fs
test
lds
xchg
cmps
sti
and
mov
movs
mov
cmp
lahf
push
test
sbb
mov
ja
push
xchg
xchg
xor
int3
push
cmp
imul
xor
xchg
xchg
jno
xchg
pop
xchg
retf
daa
les
jle
and
fcomp
pushf
cwde
scas
mov
pop
pand
pop
add
(bad)
xchg
das
ins
bound
sub
icebp
ins
and
and
push
scas
mov
inc
ins
xor
jecxz
pop
sbb
leave
mov
sbb
dec
and
jg
(bad)
hlt
inc
stc
fbld
sub
mov
iret
xchg
cs
sub
movs
xchg
fcmove
sbb
pavgb
xchg
mov
xor
xor
dec
inc
stos
adc
cdq
inc
repz
adc
inc
pop
and
mov
in
mov
mov
push
jge
gs
int
std
xchg
ret
adc
into
jnp
xor
leave
in
inc
add
sub
push
xchg
stc
sub
mov
or
scas
mov
fimul
sub
mov
cli
or
lods
outs
sbb
fcomp
pop
mov
inc
leave
or
mov
sbb
sbb
jbe
dec
arpl
jp
jp
(bad)
jge
lea
mov
and
sub
xchg
mov
mov
and
(bad)
pop
(bad)
fnstsw
dec
(bad)
or
lock
nop
xchg
sub
pushf
les
cwde
mov
push
cmp
enter
nop
inc
adc
and
sub
add
jae
ss
lea
mov
inc
cmp
out
push
xchg
mov
and
jbe
loop
int
push
sbb
add
pop
ins
out
fsub
mov
popf
sbb
lds
jp
push
(bad)
pop
mov
sbb
adc
jmp
and
ins
jmp
xor
fst
cmp
mov
add
adc
or
inc
add
icebp
mov
loopne
inc
aam
popa
arpl
out
xchg
add
push
xchg
and
mov
add
jae
ror
push
adc
ret
mov
xor
test
push
dec
xchg
mov
ins
push
int
hlt
inc
inc
dec
in
loope
test
pop
sbb
mov
mov
ret
mov
sub
and
aaa
sar
cmp
pop
dec
pop
and
fld
push
loop
mov
xchg
dec
les
sbb
adc
inc
inc
dec
adc
popa
inc
call
and
push
xchg
sbb
pop
sbb
pusha
and
sti
mov
cmp
loopne
cmp
adc
jne
cld
je
push
loop
lods
out
retf
dec
cmc
or
sahf
xor
fwait
or
dec
cmp
add
pop
and
sub
sahf
(bad)
jmp
(bad)
jnp
and
sub
or
mov
sub
cdq
in
sub
dec
mov
mov
into
cmps
fwait
rcl
repz
jl
out
sar
push
fwait
cld
mov
es
push
pop
(bad)
cdq
aam
ret
or
cmp
in
jmp
sub
pusha
aaa
pop
cmc
mov
mov
jge
inc
mov
je
call
mov
nop
cwde
stos
sti
dec
(bad)
xchg
xchg
stos
mov
fsub
sub
or
mov
dec
sbb
icebp
dec
nop
xor
sbb
test
pop
cmp
mov
int3
lods
lock
fxch
pop
sti
inc
sbb
mov
lods
outs
outs
or
jle
jo
mov
dec
rcr
mov
stos
sahf
inc
ins
dec
xchg
push
mov
jo
ret
inc
jns
mov
das
cld
lea
cmp
enter
push
cdq
push
shl
mov
mov
or
xor
mov
repz
(bad)
cmp
xchg
lods
test
mov
aas
add
fidiv
push
dec
xchg
pop
jle
sub
outs
stos
(bad)
leave
nop
push
pop
adc
add
jns
out
fbstp
sub
dec
fsub
xchg
and
outs
mov
dec
fadd
cmp
das
into
sub
test
and
movs
jns
push
push
mov
inc
push
jnp
loopne
and
and
mov
mov
jbe
mov
ss
imul
cmc
test
jp
cmp
inc
xor
mov
scas
rcr
sub
outs
push
xor
das
sti
adc
mov
pop
inc
sbb
fsub
cwde
mov
mov
push
mov
xchg
or
pop
out
in
jmp
jge
stos
pop
clc
xor
out
cmc
xchg
repz
scas
inc
sub
adc
xor
sar
in
sub
inc
mov
add
xchg
enter
push
ins
jnp
into
addr16
sub
test
xlat
xchg
icebp
xlat
ins
mov
jge
(bad)
push
leave
cmc
je
or
loopne
mov
mov
ins
(bad)
and
push
push
shr
inc
mov
xor
adc
jns
mov
mov
pop
iret
inc
(bad)
and
ret
not
lds
jmp
adc
xchg
jmp
les
ret
add
test
mov
pop
sbb
into
sahf
ins
pushf
ja
mov
sbb
pop
and
jbe
lods
mov
inc
cld
movs
add
jns
into
mov
fistp
test
pop
mov
ins
pop
dec
das
jae
scas
add
push
sub
ret
test
push
jecxz
(bad)
pop
shl
pop
inc
pop
xor
mov
jl
push
push
arpl
cmp
mov
cdq
pop
call
or
je
aaa
lea
mov
outs
pop
pop
lahf
mov
jne
push
mov
jl
cmp
rcl
push
and
aad
dec
cmp
pop
pop
out
xchg
and
mov
and
adc
movs
push
inc
ret
cmp
fcom
mov
ds
nop
aas
scas
lahf
addr16
vshufps
lds
maxps
jne
pop
mov
jns
in
push
lods
pop
push
xchg
dec
add
ss
xchg
push
cmp
fdiv
repz
pop
arpl
cli
push
stos
sub
jecxz
xor
push
scas
shr
pop
in
adc
fwait
pop
gs
nop
aad
add
adc
fdivr
inc
mov
mov
cld
mov
dec
inc
sub
push
int3
clc
ror
sub
cmp
or
adc
mov
and
out
push
das
push
push
adc
mov
or
retf
lods
or
std
inc
mov
xchg
(bad)
outs
inc
or
movs
mov
lods
add
movs
jge
cmp
push
cmps
jb
mov
or
dec
call
mov
add
iret
js
shr
cmp
jne
leave
cdq
sub
xchg
mov
sbb
or
fxch
loopne
rcr
xor
mov
and
xchg
pushf
mov
pushf
test
jbe
xchg
or
loopne
push
xchg
stos
in
xchg
dec
mov
mov
int3
inc
retf
std
cmovbe
shr
dec
sahf
out
out
out
ja
shr
(bad)
xchg
or
popf
mov
pushf
xor
xchg
jno
jmp
loop
jno
and
or
mov
cmp
fisub
pop
mov
jmp
mov
lahf
sub
mov
cdq
mov
jnp
and
mov
and
out
(bad)
loope
fisubr
add
or
mov
idiv
enter
lods
loopne
pop
not
jns
jmp
xchg
cmp
mov
rol
jge
mov
fstp
div
mov
inc
xor
icebp
pop
inc
stos
data16
aas
cmp
adc
push
imul
mov
seta
ins
push
push
xor
xchg
jb
pop
in
retf
and
xchg
pop
or
cmp
cmp
hlt
dec
cmp
pop
loop
or
rol
sbb
in
sbb
xor
ret
cmps
retf
pop
xchg
push
mov
mov
shl
cli
mov
movs
gs
push
lahf
daa
mov
adc
mov
xlat
inc
imul
adc
aaa
jp
outs
setp
cwde
outs
jmp
ss
add
mov
push
es
sbb
xor
lds
and
mov
sbb
jo
bound
clc
inc
fdiv
add
push
aad
fstp
push
adc
ficom
adc
sbb
scas
rol
xor
and
and
neg
and
push
data16
pop
adc
xchg
fiadd
retf
repz
jne
scas
sbb
movs
sub
popa
mov
mov
inc
mov
rcl
daa
adc
ins
or
pop
pop
int
xor
pop
int3
outs
pop
fcmovnbe
call
ds
shl
ret
or
cld
fs
rcr
adc
pop
xor
outs
pop
fwait
xchg
nop
pop
dec
call
outs
popf
mov
and
xchg
mov
fld
(bad)
ins
inc
aas
add
push
bound
jg
jbe
mov
and
lds
loopne
fdiv
rol
sub
pop
pop
adc
mov
inc
xor
in
es
ret
xchg
mov
jp
test
add
xchg
add
cmp
fmulp
inc
stos
hlt
ret
in
push
push
xor
aaa
and
aad
retf
(bad)
pop
fbstp
lea
not
repnz
xchg
mov
sub
jecxz
fstp
cli
push
add
test
push
inc
iret
call
mov
(bad)
jnp
lock
fcomp
or
mov
pusha
jg
xchg
jmp
add
mov
cmps
or
imul
mov
xor
pop
sub
pushf
mov
sbb
mov
inc
push
push
ins
js
jg
test
push
je
mov
mov
cmp
sti
or
sbb
(bad)
or
inc
icebp
fld1
mov
push
cmp
loopne
and
push
fldenv
out
gs
and
iret
(bad)
mov
into
pxor
jb
out
jbe
push
in
call
mov
jae
fwait
data16
and
xchg
imul
pop
xchg
lods
sbb
int
je
ret
xor
cmp
fs
popf
cmp
mov
pop
out
mov
jmp
pop
in
cmps
scas
mov
push
xlat
push
jo
popf
sahf
lods
imul
ror
int
cmp
fcom
add
mov
sbb
call
cld
jo
addr16
cmps
pop
out
sbb
rol
sub
imul
fs
dec
push
xor
stc
rcl
sub
ins
stc
and
cmp
in
push
jnp
into
push
or
mov
dec
iret
adc
sbb
(bad)
or
sub
es
rcr
pop
fdivrp
xchg
mov
ret
push
push
mov
scas
and
dec
jns
shl
clc
push
ss
test
retf
lea
out
das
inc
or
neg
jae
mov
xor
aad
and
in
push
inc
or
inc
mov
xchg
pop
cmp
pop
in
xor
repnz
mov
mov
push
sub
ss
push
imul
or
mov
outs
inc
mov
cmp
mov
push
mov
jl
and
out
rol
out
or
int3
pusha
rcl
fcomp
repnz
push
cs
and
xlat
ret
mov
adc
adc
push
mov
shr
or
rol
pop
push
test
jmp
jmp
inc
push
int
mov
retf
pop
ds
ins
cdq
jo
shr
ins
test
sbb
retf
shl
in
sub
sbb
pop
cdq
clc
sbb
push
repnz
dec
retf
daa
jmp
stos
mov
out
popa
jnp
ss
sbb
jmp
push
or
pop
(bad)
jl
xchg
jae
adc
dec
jmp
or
push
cmc
lds
jnp
sub
pushf
sti
data16
jmp
mov
aad
cmp
pop
dec
mov
cmp
iret
inc
or
fadd
(bad)
(bad)
std
and
adc
xchg
popa
in
add
xor
loope
mov
jle
lods
mov
add
xor
mov
outs
push
lods
out
test
fdivr
cwde
in
sbb
and
xor
dec
(bad)
cli
(bad)
retf
mov
push
adc
ror
in
inc
pop
sar
push
cmc
mov
push
es
sub
xor
push
sbb
cmp
and
repnz
adc
nop
aaa
cmp
(bad)
aam
ss
cmc
push
sub
or
jl
(bad)
frstor
mov
sub
in
mov
hlt
cwde
data16
jp
je
out
in
out
mov
(bad)
mov
push
add
jmp
cmc
out
rcl
xchg
addr16
call
cdq
inc
jne
outs
sbb
out
dec
fdivr
push
sahf
js
mov
hlt
scas
out
and
mov
outs
cmp
movs
xor
mov
jae
hlt
ss
or
enterw
push
hlt
out
or
nop
xor
inc
in
pop
dec
mov
imul
xchg
inc
leave
mov
or
mov
stos
jno
xchg
mov
sub
dec
cmps
xchg
mov
aas
(bad)
xor
and
sub
lahf
jl
mov
cdq
fisub
int
xchg
sbb
mov
(bad)
mov
loop
xor
cmps
sbb
fwait
sbb
outs
add
mov
stc
jno
push
jecxz
gs
xor
adc
je
add
sbb
push
and
pop
cvtps2pi
mov
jmp
iret
div
fs
push
fadd
outs
cmps
retf
fidiv
(bad)
test
jne
cmp
xchg
inc
pop
mov
out
adc
pop
push
stos
fild
sbb
jge
int
push
xchg
ins
jae
or
pop
xchg
cmp
loop
retf
stos
sti
addr16
pop
(bad)
dec
stos
pop
test
push
aad
or
xchg
push
pop
jb
bound
jmp
adc
shl
jbe
imul
xor
xor
mov
lods
ffree
mov
sar
push
int
mov
mov
shl
mov
aaa
mov
fist
scas
in
bound
push
xor
cmps
pop
dec
test
mov
push
ret
loopne
fst
(bad)
aaa
jmp
shl
push
loop
(bad)
dec
sub
fistp
cwde
call
(bad)
rol
fbstp
adc
jmp
cmps
fild
movs
mov
add
push
pop
jl
and
test
xchg
mov
dec
mov
dec
inc
jo
sbb
mov
lods
mov
xor
test
cli
inc
inc
cmps
ins
push
ins
out
xor
jmp
aam
pop
mov
add
dec
mov
hlt
stos
rcr
ror
mov
lods
mov
shl
fcmovbe
cmp
call
les
sbb
mov
dec
add
psubusw
cmp
sahf
xchg
cmp
aad
jecxz
push
and
test
sbb
push
hlt
jae
stos
jp
cdq
and
mov
sub
dec
dec
sti
mov
add
(bad)
or
cld
popf
es
popf
inc
mov
pop
ret
jmp
or
enter
mov
mov
mov
(bad)
lock
jo
dec
sti
lds
add
adc
gs
sub
bnd
cmp
jne
inc
sub
adc
out
popf
sar
fsubrp
mov
sahf
iret
mov
ins
gs
hlt
sbb
push
pop
adc
cdq
movs
popf
jmp
mov
push
jno
xchg
test
push
add
bnd
int3
not
bound
xchg
rcr
fwait
xchg
add
xor
mov
call
cli
cld
mov
and
arpl
and
jmp
or
mov
cmp
stc
shl
jns
push
nop
jb
test
in
jns
jmp
xor
ja
(bad)
std
ja
movs
xor
push
adc
std
dec
int3
test
bound
adc
pop
push
cmc
jmp
or
repnz
inc
ss
jmp
add
test
retf
int3
je
bound
push
sub
pop
mov
es
or
lds
xor
push
imul
sbb
aas
loop
xor
sar
xor
push
pop
adc
icebp
sub
xchg
xchg
and
sbb
lds
adc
std
add
add
pop
lods
ficom
push
ret
xor
(bad)
aam
mov
or
inc
sbb
shl
in
jmp
jmp
lock
xchg
mov
jae
pusha
pop
test
arpl
dec
mov
ins
sbb
fs
ret
inc
sti
sahf
adc
xor
(bad)
outs
pcmpeqb
int3
cmp
push
mov
gs
mov
popf
pusha
repnz
fwait
loope
les
xchg
cmp
mov
jb
push
or
mov
fadd
or
jnp
gs
fld
inc
popa
xor
adc
dec
adc
imul
xor
lock
mov
es
cmc
mov
lods
dec
push
push
stos
mov
das
shr
in
mov
xor
sub
stos
xor
(bad)
into
push
cmc
add
sub
fcomp
sahf
popf
inc
lods
xor
(bad)
call
mov
(bad)
mov
(bad)
cmp
mov
sub
clc
push
arpl
xchg
and
test
les
in
push
int
or
out
push
mov
in
mov
cmps
rcl
sti
mov
sti
push
cmps
jle
cmp
out
les
cdq
mov
gs
jge
pop
popa
dec
push
cmp
pop
mov
jmp
add
sbb
jmp
loopne
ja
adc
ret
ret
mov
and
add
(bad)
jge
fist
pop
jg
call
sbb
push
test
inc
mov
rol
adc
(bad)
out
and
mov
mov
push
pusha
popa
mov
jg
outs
xchg
rcr
sbb
imul
sub
xor
push
sbb
mov
fsub
(bad)
std
repnz
and
xor
in
or
adc
mov
loope
push
and
inc
es
add
lods
cld
scas
xor
add
adc
repz
add
mov
push
xor
(bad)
rcr
dec
xor
int
and
inc
push
retf
mov
cmp
jno
div
psllq
js
(bad)
dec
sub
lds
xchg
gs
or
xor
(bad)
mov
mov
inc
pop
out
outs
test
and
stc
hlt
int
push
jns
or
lea
add
cld
jle
xor
imul
or
movs
jb
dec
sub
inc
jbe
sub
cmps
xor
out
test
mov
mov
sti
scas
jmp
mov
imul
stos
cmp
retf
(bad)
in
sbb
std
movs
pop
mov
jae
push
mov
scas
mov
je
sbb
pop
add
jmp
xchg
std
es
cld
jmp
dec
or
loope
ja
xchg
sub
nop
pop
xor
iret
pop
adc
das
(bad)
js
mov
mov
or
cmp
pop
ja
dec
xor
and
mov
add
sub
cmp
das
or
test
adc
mov
mov
(bad)
inc
in
mov
push
imul
repz
add
popa
mov
mov
jg
push
enter
fisubr
and
and
enter
add
push
daa
mov
push
pop
add
fs
mov
push
pusha
adc
and
sub
cmp
cmp
xor
ret
mov
push
xchg
stc
jbe
iret
mov
les
fs
sub
loop
aas
add
ror
jl
or
nop
ret
in
call
pusha
div
push
sbb
mov
mov
scas
pop
call
pusha
xchg
push
or
jmp
lods
sbb
or
sbb
pop
call
sbb
ror
in
mov
outs
(bad)
lds
int
ror
xor
leave
inc
xor
iret
ins
enter
popf
pushf
js
mov
not
push
aam
pop
mov
xchg
(bad)
nop
adc
jmp
pop
sbb
ins
call
jns
jne
jmp
jle
inc
dec
inc
cmp
push
rcr
jbe
push
mov
adc
outs
jae
call
imul
dec
(bad)
in
dec
das
add
fisub
(bad)
and
push
retf
(bad)
push
xchg
pop
scas
loope
(bad)
sbb
xor
pushf
retf
pop
jb
loope
and
loopne
xor
shl
inc
cmps
cmps
movs
in
push
retf
mov
fiadd
cdq
mov
mov
pop
or
push
sub
jle
pop
mov
xchg
jno
int
mov
jnp
fwait
or
aas
leave
pop
mov
xrelease
or
sbb
lock
enter
sar
idiv
aas
rcr
adc
es
sbb
sub
push
add
xchg
es
cdq
std
or
hlt
mov
and
xchg
sub
adc
nop
mov
mov
ins
ret
cwde
mov
adc
pop
xchg
(bad)
inc
inc
(bad)
jecxz
fidiv
fmul
sahf
or
xchg
xlat
fld
rol
mov
add
(bad)
sahf
scas
add
cmp
fmul
cmp
sbb
jl
pushf
in
mov
jg
hlt
gs
jmp
mov
pop
dec
shr
mov
push
mov
nop
cmp
cdq
dec
or
pop
adc
cmps
mov
sbb
mov
popa
add
mov
push
nop
jns
inc
mov
test
xchg
mov
push
scas
and
mov
test
cwde
hlt
cld
add
sub
mov
xchg
fstp
js
bound
jb
push
int
clc
sub
fwait
cs
cmp
xchg
or
test
rol
sbb
push
jl
jecxz
adc
mov
ja
mov
call
(bad)
cmp
mov
cwde
xor
jmp
sahf
je
mov
mov
jo
retf
sbb
mov
aas
add
sti
cwde
aad
mov
sahf
sub
stc
push
sub
fld
outs
and
xchg
push
ret
xor
jle
enter
es
aam
test
push
mov
ficomp
hlt
and
popf
inc
mov
push
jae
out
dec
test
cdq
ins
mov
dec
js
adc
or
or
sbb
adc
adc
pop
into
stc
cmp
call
xor
mov
xchg
xor
xor
xor
jecxz
or
stc
adc
sbb
dec
sar
shl
mul
jno
xor
lods
dec
arpl
jl
sti
nop
jo
push
aaa
lods
(bad)
push
and
pop
in
js
mov
xor
test
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
pop
mov
pop
cmp
js
or
sbb
and
and
ds
int
sub
shl
inc
(bad)
ja
and
adc
jg
aad
pop
pop
mov
mov
les
hlt
repnz
rcl
pop
or
addr16
scas
je
in
push
cs
js
push
adc
push
mov
dec
adc
push
jle
inc
cmc
enter
and
mov
daa
pop
cmps
rcl
arpl
(bad)
loopne
popw
aam
adc
mov
cwde
xchg
loope
and
pop
xor
sub
push
add
test
cmps
fidivr
inc
iret
dec
adc
stos
adc
add
xor
js
jecxz
or
or
dec
(bad)
stos
retf
mov
xchg
ds
cmps
js
(bad)
je
xor
mov
ss
sbb
icebp
sub
lods
nop
loop
mov
adc
out
mov
stc
xchg
int
gs
inc
cmp
xor
lds
(bad)
cmc
out
cmp
int3
ins
cwde
xchg
and
push
mov
out
sub
gs
dec
push
inc
cmp
cmp
pop
cmp
mov
mov
fbstp
movs
cmp
sar
cmp
jns
pop
and
adc
mov
push
pop
push
cwde
(bad)
pop
jecxz
or
data16
cmp
or
out
(bad)
sbb
into
xor
cmps
jbe
add
pop
or
das
xchg
ret
fs
add
jge
cmc
adc
es
mov
call
lock
add
scas
jb
sbb
mov
clc
dec
inc
in
cmp
in
(bad)
test
dec
add
jno
mov
push
jb
inc
rcr
loop
push
pop
adc
sub
call
push
pusha
mov
jg
cld
sub
adc
jno
imul
imul
mov
sub
sar
sbb
repz
ins
push
cs
sub
sbb
cld
gs
clc
pusha
pop
pop
push
out
call
rcl
sub
loopne
ss
xor
jb
sub
jmp
mov
or
mov
add
in
xor
pop
sub
ins
push
adc
js
jo
jbe
add
xchg
push
jne
adc
jmp
fs
cmp
push
push
in
inc
lods
neg
in
clc
dec
inc
jne
xchg
cli
test
xchg
repz
shl
dec
and
xor
push
dec
push
pop
fnstsw
jns
cwde
add
inc
adc
int3
test
xchg
mov
sbb
sub
xor
and
fwait
test
in
out
jmp
fisubr
xchg
fild
xchg
mov
cmp
dec
call
scas
sbb
stc
leave
mov
adc
clc
nop
cmp
adc
inc
mov
pop
jbe
fcom
cmps
cli
imul
int
jmp
enter
retf
pop
or
lea
jmp
lods
adc
mov
int3
pop
pop
push
and
xor
inc
cmp
cmps
pop
rol
ins
push
aad
(bad)
stos
cli
mov
pop
mov
sub
pop
pop
xor
dec
and
shl
icebp
pop
lds
(bad)
push
adc
imul
push
(bad)
xlat
push
fwait
add
lods
cmps
ret
aam
or
dec
fstp
jnp
nop
imul
popf
push
sar
cmc
jl
fnsave
inc
call
pusha
jmp
test
mov
push
adc
dec
xchg
sbb
(bad)
dec
es
fimul
dec
mov
aaa
mov
sbb
adc
aad
test
adc
ins
mov
lahf
xchg
pop
dec
bound
sbb
cmp
mov
lods
or
jnp
fdiv
xchg
and
jno
jno
jbe
outs
mov
movs
popf
out
dec
repnz
push
pop
sub
add
movs
inc
fcmovnb
mov
jo
push
int3
mov
lods
or
push
lods
xchg
fcmovb
mov
jno
dec
lods
push
(bad)
out
cmp
pop
xchg
enter
sbb
push
daa
js
mov
xor
pop
ss
mov
loop
stos
dec
clc
pusha
sub
lods
push
pusha
add
iret
dec
imul
or
mov
leave
lock
fst
dec
out
inc
xor
(bad)
rol
lods
push
inc
std
out
adc
faddp
inc
xor
(bad)
lods
cwde
out
iret
mov
div
pop
xor
sbb
(bad)
dec
mov
aas
sub
push
and
rol
or
or
cmp
mov
mov
xor
mov
dec
xor
out
or
mov
xlat
retf
popa
jl
jo
and
xchg
cmps
mov
push
cli
mov
sub
leave
cwde
fsubrp
xor
scas
adc
(bad)
out
out
lahf
sub
arpl
les
hlt
mov
int3
js
push
lods
jb
es
push
adc
and
cmp
xor
or
scas
jecxz
loop
stos
cmc
movs
lock
out
lock
sbb
je
rol
or
test
push
push
push
pushf
xchg
mov
outs
push
inc
lock
daa
mov
pushf
xor
fimul
push
jmp
xchg
in
mov
mov
xor
fldcw
mov
push
jge
xor
ficomp
adc
mov
push
outs
inc
out
dec
pop
pusha
fmul
or
cli
leave
ret
mov
cli
cmp
sub
cmps
adc
dec
jp
cmps
fimul
add
repz
mov
or
adc
fisubr
sub
rcl
inc
ret
jmp
call
ds
mov
or
and
ja
sahf
or
mov
int3
sbb
or
out
movs
push
(bad)
xchg
sbb
fscale
sbb
and
outs
mov
ficomp
add
lds
xchg
inc
jl
pop
xchg
fiadd
out
inc
scas
gs
jmp
fcom
lds
jecxz
push
dec
sbb
jns
inc
out
sar
jbe
push
jno
pusha
push
scas
lea
mov
push
ret
sbb
jl
loop
push
jnp
dec
xor
or
jmp
aaa
or
or
lods
shl
int3
(bad)
ins
sbb
mov
xor
cmp
retf
sbb
push
sbb
aaa
fmul
xor
jecxz
push
add
push
stc
xchg
jns
mov
sahf
or
(bad)
mov
xor
xor
mov
mov
ret
aad
mov
cmp
(bad)
dec
xchg
dec
mov
fdiv
int3
push
mov
mov
shl
fadd
sbb
jb
add
jmp
(bad)
sbb
inc
dec
jae
xchg
adc
outs
jmp
jmp
or
and
cld
retf
loope
call
sub
out
retf
rcl
push
xlat
cmp
sbb
jb
mov
jno
adc
push
inc
pushf
inc
push
inc
xor
add
mov
mov
or
hlt
mov
xlat
xchg
fwait
or
sbb
fnstenv
xor
leave
loopne
jbe
dec
or
cld
adc
mov
add
xchg
loopne
aam
fisubr
sub
int3
out
mov
arpl
lea
inc
add
mov
enter
sub
add
mov
icebp
dec
sub
sbb
int
xor
or
arpl
fsqrt
fldenv
xor
push
(bad)
mov
dec
jno
push
js
cmp
sbb
jp
test
hlt
int
aam
ins
call
pushf
pop
in
ss
icebp
test
xor
hlt
aam
cmc
jmp
push
retf
push
sar
es
mov
(bad)
fld
icebp
and
add
xor
cmc
xor
scas
dec
fist
mov
mov
aas
cmp
xlat
sbb
jmp
xchg
stos
ret
fsub
cmovbe
stos
or
(bad)
repnz
mov
and
lea
mov
xchg
mov
mov
rol
sub
mov
pop
lock
sub
ret
mov
jne
push
and
inc
nop
add
ins
mov
mov
cmp
mov
loope
xor
(bad)
xchg
adc
imul
fdiv
repnz
pop
add
repz
aam
fnstcw
in
mov
les
rol
xchg
cmp
cmp
stc
ror
cs
sti
inc
mov
sbb
mov
mov
mov
xchg
in
call
mov
adc
test
je
mov
outs
dec
dec
dec
mov
movs
jb
fwait
loope
pop
sbb
sbb
cmp
cld
sub
(bad)
ror
mov
mov
call
rol
sti
mov
mov
push
lea
or
push
fnsetpm(287
cld
retf
inc
into
daa
inc
in
or
inc
stc
(bad)
mov
stos
mov
and
and
(bad)
adc
stos
sub
sbb
imul
push
inc
sbb
mov
repz
imul
sbb
scas
mov
imul
imul
je
or
xchg
test
xor
xchg
sbb
cmc
inc
out
mov
out
ret
in
movs
jecxz
(bad)
lock
sub
inc
push
rcl
jne
bound
mov
fnstenv
stc
sub
les
inc
sub
lock
xchg
lds
fcmovnbe
cli
and
jb
addr16
add
ds
mov
ret
sbb
cmc
out
aaa
xchg
div
mov
push
xchg
mov
push
mov
push
xchg
add
pusha
cwde
add
sbb
xchg
es
dec
xor
data16
std
jns
jmp
or
jns
call
popf
repnz
or
ficomp
push
xlat
call
jmp
enter
aad
mov
push
sub
inc
aaa
dec
cmp
cmp
sub
arpl
das
xor
outs
movs
cmc
(bad)
mov
imul
pop
push
scas
xor
out
scas
jge
popa
push
icebp
fnstsw
popf
cmps
push
and
stos
int
jmp
jg
or
movs
mov
push
jle
retf
sbb
sbb
sbb
loop
fldenv
sbb
mov
or
lahf
jbe
lods
sub
push
cmp
mov
dec
pushf
sbb
mov
xor
fsub
pushf
or
pushf
jae
cli
es
int3
dec
sbb
out
mov
arpl
jns
mov
ret
jge
(bad)
popa
fcomp
rcr
mov
cmps
push
int3
leave
or
sub
adc
popf
inc
sub
in
in
jmp
jle
cmp
addr16
(bad)
dec
and
int3
(bad)
cli
call
int3
and
rcl
xor
push
inc
sub
pop
pop
jp
mov
sub
sbb
push
repnz
pop
mov
pop
in
iret
cdq
adc
jmp
(bad)
rcr
or
pop
jb
ret
jg
test
pop
adc
xchg
imul
sub
daa
cmp
mov
xor
mov
push
in
pop
inc
sbb
clc
xchg
sbb
jmp
mov
dec
ror
pop
push
sbb
and
xor
call
sub
mov
aad
inc
inc
dec
push
retf
cmp
not
je
mov
push
xor
add
rol
push
in
jae
std
mov
imul
pop
aad
add
mov
in
mov
mov
scas
xchg
mov
sbb
mov
inc
mov
push
popf
sub
or
sbb
or
adc
push
dec
imul
dec
inc
jmp
inc
aas
jns
dec
inc
rcl
mul
or
xor
push
push
jns
aaa
xor
call
test
fistp
jl
jae
outs
cmp
inc
enter
push
inc
and
mov
mov
out
mov
mov
arpl
in
mov
clc
loop
stos
ret
sbb
mov
mov
gs
mov
xchg
(bad)
xor
fimul
or
push
retf
mov
lea
pop
int3
gs
push
dec
test
out
jge
cmc
aas
loope
pop
xchg
imul
cli
lods
addr16
push
and
and
int
fwait
test
ss
jo
jg
das
ins
mov
rol
mov
jge
iret
repnz
add
mov
dec
lahf
das
inc
icebp
int3
call
mov
pop
cli
pop
jmp
movs
and
mov
in
sahf
je
or
pop
lea
add
mov
mov
pop
mov
push
mov
cmovge
shl
inc
mov
adc
fdiv
fidiv
scas
push
mov
xchg
mov
mov
hlt
pop
out
jl
ins
adc
sub
je
cld
btc
adc
xchg
or
jecxz
out
cwde
pop
or
pop
inc
aas
cld
int
cs
jp
adc
cmp
js
popa
inc
xor
(bad)
into
nop
stos
mov
cmp
lods
pop
adc
icebp
rcr
xor
out
adc
rcl
lods
push
add
(bad)
ret
or
test
mov
push
cld
mov
jb
xor
lock
sbb
push
mov
stc
push
sub
inc
lahf
shl
pop
out
add
pushf
mov
bound
sahf
jge
pop
sbb
popa
ins
push
test
pop
adc
mov
fcmovne
xchg
xor
sbb
mov
inc
push
popa
stos
es
pop
jae
mov
ja
cmps
sub
loop
test
jl
mov
and
push
pop
bound
jo
pop
mov
dec
popf
movs
xchg
mov
cmp
jb
sbb
popf
inc
mov
mov
pop
dec
mul
pop
add
and
ja
jne
ret
icebp
test
cmp
push
call
xchg
fwait
add
clc
ror
jg
fcmovnbe
fs
xor
jae
xor
pop
std
dec
cmp
fistp
sbb
adc
fmul
pop
aas
pop
mov
jbe
mov
sbb
xor
mov
push
inc
imul
cmp
movs
xlat
fmulp
inc
inc
retf
dec
sbb
retf
mov
fnstsw
(bad)
enter
sbb
fst
lods
xchg
jno
or
pop
xor
pop
or
hlt
or
dec
cli
int3
outs
movs
mov
lahf
call
mov
idiv
scas
xchg
and
ret
xchg
push
into
push
js
std
sbb
mov
xchg
fld
out
push
repz
in
ret
pop
arpl
aas
pop
cmc
mov
lds
mov
gs
sbb
pop
or
add
jecxz
mov
adc
out
fdiv
popa
inc
or
add
push
mov
gs
xor
das
mov
repnz
add
shr
dec
cmps
pusha
mov
in
jecxz
scas
movs
push
sbb
mov
xlat
sub
jae
xchg
pop
mov
push
(bad)
aam
loopne
pop
sar
push
cs
mov
pop
fild
jo
subps
mov
push
pop
nop
cmp
fs
jmp
jmp
sahf
jae
and
les
retf
test
dec
sbb
jmp
push
(bad)
mov
stc
imul
jmp
pop
or
mov
xchg
or
dec
pushf
imul
add
out
mov
test
test
sub
lock
scas
jmp
jbe
scas
(bad)
ret
pop
or
idiv
adc
(bad)
fld
xchg
je
sahf
xlat
fwait
pop
sbb
xchg
pop
sbb
cmps
ficom
pop
ins
in
cmp
cli
xchg
sub
nop
push
xor
adc
movs
jne
xchg
sbb
dec
cmp
stc
inc
adc
test
in
jns
cmps
aam
xchg
mov
mov
jge
mov
mov
push
adc
std
shr
cdq
mov
arpl
and
mov
and
pusha
call
xor
(bad)
pop
add
dec
sti
stos
cmp
sub
jmp
inc
xchg
or
cmc
mov
(bad)
and
adc
stos
mov
jb
imul
enter
outs
dec
out
ret
mov
scas
sti
aad
jns
in
push
push
push
dec
push
enter
mov
sbb
mov
inc
jne
fistp
loope
fisttp
shl
div
push
(bad)
cmps
push
shl
cs
les
jne
(bad)
stos
imul
xchg
cmps
or
xchg
xor
sbb
mov
or
stc
xchg
xor
jne
xorps
adc
pop
ins
fadd
pop
sti
mov
cmp
fcom
inc
js
daa
jmp
enter
mov
and
mov
push
lahf
ds
jecxz
add
sbb
mov
fcomip
xchg
ret
inc
sbb
mov
icebp
and
sbb
sbb
int
cmp
sti
mov
xor
fs
dec
adc
cmp
add
(bad)
pusha
lods
lahf
add
inc
adc
xchg
fst
lock
add
lds
and
xor
icebp
rcr
hlt
arpl
lds
xchg
dec
in
xor
inc
push
xor
jne
fld
sub
pop
pop
jle
inc
and
cmp
fwait
mov
xor
inc
in
int
or
lods
idiv
jae
cmc
mov
push
mov
in
popf
ds
imul
mov
cmp
das
(bad)
retf
js
xor
and
leave
push
loop
daa
cli
dec
or
sub
aaa
and
stc
hlt
pop
xlat
cmp
push
sub
sbb
popf
xor
mov
movs
gs
mov
fwait
and
add
nop
pop
aad
addr16
cmp
xchg
cdq
mov
fisubr
sbb
cmp
rcr
pop
aad
imul
hlt
repnz
out
xlat
mov
mov
sahf
loopne
mov
fist
fsqrt
cmp
inc
lds
les
repz
jns
sbb
cmp
aaa
jg
adc
cmp
sbb
cmps
mov
jecxz
or
pop
scas
sbb
sub
lods
aas
mov
add
scas
pop
cmc
sbb
and
mov
fstp
je
movs
jg
cdq
rol
add
inc
inc
mov
mov
ins
mov
cmc
jg
mov
icebp
fs
mov
pop
mov
fst
lahf
cmp
in
pushf
adc
xchg
sti
add
xor
xchg
loop
add
mov
push
and
dec
stos
(bad)
sbb
jne
dec
fsub
push
loopne
gs
je
dec
mov
xchg
out
jns
inc
mov
lahf
paddb
inc
jl
cmc
loopne
xchg
aaa
mov
shl
sbb
or
inc
push
jmp
ins
imul
call
repnz
mov
ret
fcom
pushf
dec
dec
dec
iret
add
ret
cmc
mov
cmp
jbe
mov
jnp
pop
ds
dec
and
iret
mov
xchg
outs
imul
nop
sub
loope
or
hlt
inc
les
mov
imul
call
pushf
cmc
(bad)
aad
sub
adc
dec
aas
jnp
stc
xor
or
sbb
fcmovbe
lahf
and
retf
loop
mov
sub
mov
sti
lahf
xchg
jne
dec
in
fadd
jnp
enter
addr16
test
xor
dec
push
loope
pop
outs
ins
(bad)
sub
mul
pop
mov
push
imul
sbb
gs
sub
nop
jo
(bad)
out
scas
mov
xor
adc
fadd
aas
adc
lds
jge
and
cdq
out
dec
push
mov
sbb
sub
push
sbb
leave
fimul
daa
adc
sbb
xlat
push
and
cdq
xchg
add
push
dec
loope
repz
popf
or
jp
movs
dec
scas
xor
jmp
cmp
jmp
scas
mov
imul
enter
xchg
add
(bad)
pop
cmps
cld
sub
popf
cmp
sahf
les
adc
mov
(bad)
cld
xor
jmp
xor
jmp
jecxz
rcl
mov
xor
inc
adc
and
lahf
mov
or
mov
mov
fs
sub
(bad)
imul
mov
pop
jle
jp
inc
xchg
mov
mov
jmp
mov
sbb
adc
xor
fdivr
push
out
add
js
mov
inc
(bad)
xor
jne
jecxz
ins
pop
xchg
push
add
sar
in
out
mov
xchg
test
movs
shl
out
pop
scas
test
mov
loop
xchg
push
or
hlt
inc
daa
pop
sbb
int
sar
addr16
xor
ficomp
ja
ret
mov
mov
retf
aaa
inc
lods
inc
mov
dec
in
sub
mov
pop
movs
mov
icebp
or
ss
test
and
sar
repz
lea
adc
into
fsubr
or
cmc
call
push
jg
cwde
mov
movd
jae
les
pop
mov
pop
ins
popf
icebp
cmc
in
xor
dec
std
(bad)
and
add
jb
call
fdivp
aaa
stos
and
adc
xchg
popa
xchg
cli
mov
mov
fcmovu
mov
and
arpl
pop
in
dec
and
cmp
adc
and
(bad)
adc
cwde
sbb
xlat
add
sbb
xor
bound
call
rol
or
mov
dec
push
arpl
sbb
cmps
jne
outs
and
cmp
je
mov
js
js
lods
in
xor
ins
add
call
pop
std
push
call
jbe
rcl
dec
les
and
pop
addr16
retf
xchg
jmp
aad
out
pop
sbb
mov
mov
jnp
mul
and
fild
popf
aas
stos
and
mov
push
or
je
xchg
xchg
rol
rol
pop
outs
shr
pop
mov
movs
ds
pusha
xchg
aam
adc
mov
clc
push
lods
(bad)
iret
pop
push
inc
mov
jbe
jno
aaa
aam
out
dec
inc
std
sbb
dec
sub
mov
hlt
adc
add
xchg
pop
mov
lock
sbb
(bad)
pushf
ins
adc
xor
xchg
test
ret
arpl
mov
pusha
pop
mov
(bad)
mov
adc
adc
aaa
cmp
out
jo
pop
jo
into
add
push
neg
or
adc
fiadd
mov
adc
jb
jnp
data16
add
into
xchg
inc
sar
pop
cmc
es
adc
in
or
adc
hlt
popf
sbb
out
leave
mov
cmps
sbb
loopne
mov
es
pushf
sub
mov
xchg
xchg
sbb
jbe
cmp
pop
test
dec
test
loop
enter
inc
aaa
pop
xchg
shl
jge
mov
aas
xchg
aaa
sub
add
adc
popf
xor
inc
out
cmc
xor
cmp
jbe
push
retf
sti
sahf
aaa
cmp
scas
(bad)
and
push
dec
and
dec
dec
cmc
inc
mov
scas
xor
call
movs
test
sbb
or
rcl
cli
(bad)
sti
xor
xor
add
push
clc
fdivp
push
nop
dec
sbb
data16
xor
adc
sub
adc
test
inc
or
lahf
shl
repnz
in
jg
push
dec
mov
pop
into
ret
je
cmp
xor
and
jb
test
xlat
cmps
xchg
into
mov
les
data16
das
enter
cmp
adc
cmps
sti
mov
xor
ffreep
dec
jae
xor
loop
adc
xlat
add
mov
sub
shr
xchg
mov
enter
(bad)
xchg
cdq
out
test
div
scas
xor
into
push
jne
sub
inc
in
inc
cdq
adc
in
ins
sbb
outs
cmc
inc
xchg
xchg
(bad)
mov
cwde
push
popa
fld
stos
int
cmc
lds
scas
pop
loop
mov
adc
imul
adc
in
call
scas
out
mov
jmp
(bad)
inc
xchg
jb
in
mov
push
cmp
mov
addr16
sbb
dec
adc
(bad)
lods
xchg
sti
in
pop
arpl
or
jbe
sahf
(bad)
dec
call
aad
test
pop
add
(bad)
inc
addr16
push
or
adc
inc
and
call
mov
xor
jp
cmp
mov
mov
inc
(bad)
sbb
imul
movs
sub
inc
(bad)
icebp
scas
xor
sub
test
jmp
push
xor
js
in
nop
popa
sbb
lahf
shl
pop
mov
imul
mov
into
test
leave
cmps
sub
dec
in
sbb
adc
xchg
push
push
and
mov
mov
inc
ins
loopne
bound
mov
or
xor
push
idiv
adc
or
push
in
jmp
rcr
inc
mov
call
imul
test
es
ret
fist
push
jecxz
stos
jne
cdq
xchg
popa
pop
pop
nop
xchg
jp
dec
and
add
gs
jmp
jb
jno
lods
shr
aaa
test
mov
ror
mov
inc
loop
lds
mov
add
(bad)
cmp
lods
into
sbb
sub
xlat
fld
in
and
retf
outs
test
popf
pop
jmp
lahf
jns
sti
sbb
cdq
aam
xchg
addr16
int
or
sub
push
jg
outs
fild
popf
adc
xor
pushf
and
aaa
std
lods
xchg
cmp
pop
pop
add
mov
inc
out
jle
rcr
repnz
or
jl
sub
fild
sub
mov
popf
cwde
shl
xor
cmps
mov
mov
(bad)
xchg
mov
mov
mov
add
jns
jno
fsubp
das
fwait
inc
ss
retf
jno
mov
call
je
mov
pop
cmps
aas
mov
idiv
mov
pop
and
sbb
out
jmp
ins
imul
pop
ret
jecxz
cmp
out
sbb
sbb
pop
test
mov
cmps
ficom
pop
xor
cmp
aas
cmp
int3
xor
mov
test
jmp
pop
pop
adc
ret
xor
pushf
sti
cmp
mov
sar
push
xchg
rol
xor
rcl
inc
or
mov
jbe
xchg
icebp
stos
xor
or
mov
push
push
nop
push
nop
mov
pop
and
(bad)
scas
gs
arpl
pop
mov
sub
int3
adc
jnp
xchg
sub
data16
lahf
jbe
lahf
inc
xlat
push
retf
push
adc
mov
cmp
(bad)
test
or
or
jne
or
jge
(bad)
ja
mov
push
mov
loope
inc
(bad)
rcr
or
scas
adc
mov
test
lods
push
jmp
sar
add
repnz
ret
sub
adc
push
adc
adc
jp
(bad)
mov
inc
mov
(bad)
jmp
lods
movd
test
jg
(bad)
fsubr
fmul
xor
shl
jo
pop
out
jns
imul
imul
cmp
and
lock
xchg
sbb
dec
pusha
addr16
push
popa
(bad)
jmp
inc
arpl
shr
fistp
js
fs
push
test
stos
shl
sar
test
leave
sub
int3
bound
mov
xlat
cmp
aad
lahf
mul
shl
push
lods
movs
sbb
jmp
pop
xor
mov
call
push
test
addr16
pop
mov
adc
mov
test
mov
sub
xchg
push
test
mov
sub
xchg
and
jnp
dec
(bad)
scas
iret
pop
mov
push
adc
jo
mov
sub
fs
xor
xor
sbb
or
test
aas
adc
(bad)
sub
out
or
test
inc
xor
mov
dec
jmp
std
cs
hlt
lea
and
enter
addr16
(bad)
shl
or
(bad)
jmp
inc
mov
outs
jbe
xchg
cwde
jge
add
jle
xchg
call
test
cmp
jo
ret
int
cmp
and
sbb
or
out
jb
push
(bad)
je
pop
fwait
aam
ret
fcmovnu
jno
sti
jns
or
sbb
xchg
inc
test
arpl
test
pop
mov
pop
fisubr
push
fcomi
cmp
cdq
dec
and
stos
sbb
fcom
add
repnz
fsubr
xchg
shl
dec
xchg
jae
test
mov
cmp
inc
call
mov
mov
dec
push
imul
xor
neg
xchg
mov
xor
cmp
xor
es
sub
jno
idiv
and
sub
shl
mov
ret
ficom
mov
mov
hlt
out
scas
in
out
clc
mov
pusha
push
leave
imul
or
xchg
in
iret
dec
jbe
out
stc
fisubr
test
repz
mov
and
sbb
add
cdq
sbb
mov
xor
and
jnp
adc
call
mov
lea
sbb
rcr
mov
rol
xchg
xor
es
pushf
fmul
das
ret
mov
xchg
cmp
add
pop
push
repnz
sub
pop
ret
pop
push
daa
inc
lods
movs
test
sbb
lds
les
stos
ja
out
(bad)
retf
push
cmp
pop
mov
or
fnstcw
or
jno
pop
dec
mov
jmp
sbb
cmp
xor
das
push
pusha
retf
mov
stos
add
push
stos
jbe
imul
mul
jge
(bad)
sar
mov
aad
in
push
dec
ins
mov
add
sub
cmp
or
mov
cmps
inc
pop
fidiv
repnz
sub
(bad)
out
repnz
aas
out
xor
or
clc
call
jo
push
push
xor
popf
jle
cmp
jne
inc
nop
jle
fisubr
pop
or
lds
jmp
mov
fnstenv
push
mov
mov
enter
xchg
and
dec
shl
sub
ret
sbb
cld
xor
fmul
inc
sbb
jne
addr16
stos
rcl
call
cli
mov
call
mov
mov
xchg
dec
xlat
sub
hlt
ja
outs
sbb
mov
mov
int3
inc
(bad)
leave
or
pop
or
mov
inc
mov
out
rcl
push
(bad)
xlat
pop
in
fcomip
clc
inc
cmp
lods
gs
pop
jbe
call
cs
retf
inc
aam
mov
push
aaa
mov
mov
fnstsw
ins
mov
dec
xchg
cs
inc
mov
jns
push
adc
and
lea
adc
lods
rcr
adc
adc
mov
push
loope
add
adc
rcl
mul
cdq
mov
pop
out
push
bound
push
sub
shr
std
sub
mov
in
xor
xor
int
jle
jecxz
popa
mov
jle
cmp
aaa
clc
in
cmp
iret
arpl
jle
add
xchg
and
mov
push
inc
push
xor
push
arpl
pop
popf
lahf
cmc
jno
bound
sahf
mov
pusha
sbb
xchg
(bad)
xor
jbe
mov
int3
adc
adc
dec
pop
(bad)
jl
lods
jmp
jae
out
jno
and
cmp
fisubr
pop
gs
mov
lods
mov
jbe
addr16
xor
lock
push
or
pop
std
mov
mov
cmp
and
sub
cmp
mov
inc
pop
aas
xchg
xor
(bad)
stos
mov
sub
mov
loopne
hlt
addr16
mov
inc
and
sbb
cmp
push
jmp
bound
inc
xlat
in
mov
out
aas
push
stos
adc
jae
popf
pop
les
pop
push
pushf
xor
arpl
push
mov
loopne
or
adc
cmp
mov
xor
ss
cld
pop
nop
or
pusha
add
or
sbb
xchg
mov
mov
test
push
mov
pop
xchg
xchg
icebp
sub
scas
les
inc
fs
inc
dec
push
add
jo
adc
call
jp
xchg
jecxz
pop
and
adc
adc
imul
dec
mov
cmp
ror
rol
mov
inc
ret
daa
stos
mov
cmp
sub
ror
cmc
in
loopne
push
xor
mov
fisttp
loop
out
inc
jbe
rcr
popf
mov
sub
jo
xchg
sub
mov
repz
xchg
pop
not
mov
mov
pop
xchg
xor
in
and
shl
outs
std
inc
dec
lods
sahf
jo
arpl
and
cmc
jbe
dec
mov
jnp
xlat
sub
jb
dec
out
jnp
xor
enter
sub
(bad)
(bad)
stos
jmp
test
sbb
jmp
dec
pop
fisub
jbe
mov
outs
sbb
(bad)
xchg
sbb
movs
xchg
jb
in
jno
mov
mov
jmp
cs
pop
inc
or
test
into
adc
dec
cld
jae
sbb
mov
mov
test
mov
mov
jno
fist
dec
into
hlt
xchg
pop
and
mov
adc
add
xchg
fs
(bad)
stc
xchg
mov
ins
fwait
int
lods
rcr
xor
in
cmps
adc
mov
lahf
scas
hlt
jo
or
loopne
or
cwde
push
add
and
mov
or
add
cmp
retf
xor
leave
dec
ss
in
mov
dec
ins
jle
mov
sub
mov
clc
push
in
mov
mov
push
xor
add
mov
sbb
xchg
mov
mov
pushf
(bad)
adc
or
arpl
jmp
pop
mov
ds
enter
sub
outs
(bad)
mov
mov
cmc
or
in
out
lea
push
dec
xchg
sbb
mov
rcr
jae
cmp
ins
mov
les
imul
inc
outs
or
pmaddwd
or
cli
(bad)
sub
mov
pop
xlat
es
cmc
in
(bad)
mov
xchg
in
xor
cmp
les
in
xor
cmp
popa
or
mov
ror
xor
dec
icebp
test
ss
enter
sbb
outs
push
fistp
jmp
xor
mov
in
out
js
xor
or
add
xor
fisub
mov
push
(bad)
jmp
xchg
dec
add
pop
aas
or
sbb
adc
sbb
inc
and
arpl
clc
out
push
xor
and
mov
dec
jno
bnd
retf
test
xchg
cmp
daa
outs
imul
cmp
add
test
cli
int3
mov
fild
add
pop
mov
sub
out
cmp
aad
add
inc
jb
in
les
add
outs
pop
hlt
lock
sub
sti
outs
mov
ins
loope
pop
leave
cld
sub
pop
xor
xlat
jbe
push
pop
out
std
or
hlt
mov
pop
and
mov
jl
and
imul
arpl
jmp
pop
data16
repz
aad
add
cli
cmp
pop
popf
(bad)
dec
stc
sbb
xchg
addr16
shr
out
push
test
jle
xor
push
retf
mov
fistp
mov
aad
repz
cmp
cmp
jmp
cmp
sub
pushf
sbb
sub
lods
scas
sar
shl
popf
xchg
enter
or
mov
loope
cmp
cs
fbstp
add
ja
inc
scas
and
push
cmp
adc
mov
add
xor
pop
jp
in
loop
mov
xor
xor
pop
pop
imul
sbb
sbb
pop
mov
mov
aad
or
mov
por
ins
cmp
xlat
sub
jns
(bad)
aas
mov
je
mov
jl
movs
dec
sbb
in
mov
outs
sbb
fist
or
lahf
call
jle
and
sub
add
and
xor
cmc
add
jno
xchg
sbb
sbb
pop
pop
pop
cmc
and
pop
mov
pop
retf
xchg
in
add
popf
xor
mov
adc
int
mov
loopne
mov
(bad)
inc
mov
cmps
cmp
fisub
pusha
xchg
xor
xor
push
adc
test
dec
mov
jno
pop
(bad)
mov
and
inc
sub
xor
pop
push
xor
push
test
pop
mov
fstp
sbb
jo
aas
xchg
xor
imul
std
xor
scas
test
mov
or
push
and
mov
into
jp
and
int
iret
fadd
xor
in
inc
pop
out
test
repz
arpl
ds
jmp
sub
xchg
xor
cmp
ror
cmp
repz
cmc
inc
cmc
or
dec
sub
jle
int
ja
fsubr
pop
lock
mov
retf
les
rcl
mov
xchg
mov
test
pop
(bad)
fistp
push
push
jnp
jmp
mov
(bad)
pushf
in
pop
int3
xchg
retf
push
iret
adc
addr16
jp
inc
mov
outs
fwait
jae
call
and
jg
mov
and
or
inc
mov
cmp
(bad)
cmp
and
aad
je
dec
and
jne
pop
popf
call
push
mov
scas
push
and
jmp
xor
pop
xor
push
std
ret
pop
inc
pop
sub
sub
test
jecxz
pop
sbb
mov
js
jecxz
dec
imul
or
pusha
retf
xlat
mov
stos
jns
clc
inc
fldenv
mov
lods
sahf
add
es
lds
arpl
pusha
unpcklps
out
mov
sti
sahf
test
sahf
pushf
dec
push
inc
push
mov
adc
sbb
mov
inc
mov
mov
enter
pop
mov
xor
repnz
and
pop
or
xchg
in
cmp
cwde
test
fld
ja
jo
mov
push
dec
sub
lods
mov
jmp
pusha
xchg
inc
sub
jmp
pop
(bad)
retf
out
mov
pop
sub
in
sub
push
pop
xchg
mov
hlt
dec
test
into
push
push
int3
dec
dec
xlat
pusha
jo
ins
dec
and
jp
xlat
pop
inc
js
jmp
mov
call
test
stc
ja
inc
jnp
and
cmp
jl
mov
ja
cmc
mov
mov
pop
idiv
xchg
cmps
test
or
pop
cld
xchg
xor
push
js
adc
mov
mov
ret
dec
popf
push
push
xor
jnp
mov
int
test
test
jns
loopne
es
inc
sbb
je
mov
js
xchg
pop
xchg
cmps
cmps
xlat
mov
aas
and
inc
nop
imul
jecxz
pop
push
aaa
out
add
ins
dec
push
cs
je
pop
enter
cmp
inc
pop
sbb
outs
call
fsub
sbb
pop
sub
sahf
push
stos
add
sub
inc
or
adc
outs
inc
pusha
shr
xor
jae
shr
loop
jge
repz
and
fcmovb
fmul
push
push
pop
mul
jnp
ins
pop
fcomp
in
int3
sbb
adc
imul
retf
inc
and
mov
mov
test
nop
and
in
cmp
mov
cmp
lock
xchg
and
sub
xchg
test
inc
mov
cs
adc
cli
and
fadd
movs
dec
outs
add
ret
clc
add
stc
or
xor
push
adc
jae
dec
xor
adc
int3
fnclex
adc
mov
aad
mov
jnp
ss
jge
mov
mov
ror
cdq
shr
jns
mov
xor
nop
inc
and
mov
cmc
mov
pop
mov
xchg
outs
ret
mov
bsf
lea
xchg
mov
jb
push
inc
aas
cmp
dec
jo
shl
pop
movs
sbb
mov
or
rcl
dec
sub
stos
leave
adc
jge
out
(bad)
cld
mov
add
xchg
pop
scas
mov
mov
into
lods
aad
(bad)
ror
aas
dec
js
pop
push
ficomp
mov
mov
mov
(bad)
and
xchg
(bad)
(bad)
imul
(bad)
popf
ret
(bad)
jp
ret
jns
push
dec
sub
mov
rol
inc
add
ins
into
inc
rcl
enter
js
pop
sti
push
and
mov
scas
call
xchg
(bad)
repnz
add
jmp
sti
xchg
lods
pop
mov
push
repnz
retf
push
sub
aad
jmp
inc
outs
mov
pop
sub
fdivr
stos
pop
(bad)
(bad)
retf
dec
mov
out
das
call
xchg
jge
and
fsub
inc
imul
xchg
mov
push
mov
sub
cmp
pop
sub
stos
imul
xchg
int
and
jno
pop
retf
imul
pop
dec
(bad)
fwait
xchg
sub
mov
push
clc
xchg
add
or
popa
cmp
or
dec
xorps
cmps
imul
addr16
push
jmp
add
inc
pop
stos
sbb
ret
adc
div
mov
xor
stos
ja
cdq
xchg
dec
xchg
gs
push
je
(bad)
cdq
test
cmp
retf
cli
jp
sbb
and
(bad)
iret
or
repz
or
leave
test
fadd
sub
xchg
and
xchg
shl
pop
leave
jne
pop
arpl
mov
jo
and
push
inc
add
inc
jmp
cmp
cmps
dec
jmp
jmp
arpl
es
and
jnp
cs
daa
int
mov
lahf
jp
dec
push
and
shl
repz
shl
jmp
std
in
jo
test
inc
repz
jo
call
cmc
(bad)
loopne
sahf
cmps
sub
dec
pop
push
and
movs
xor
scas
gs
mov
call
sbb
add
mov
(bad)
in
push
fwait
pop
out
fwait
dec
xor
movs
popf
dec
ins
leavew
dec
aaa
rcr
leave
ret
xchg
loopne
dec
pop
or
repnz
retf
pop
mov
sub
pop
ja
stos
imul
xor
lahf
movs
inc
int3
or
adc
gs
in
ror
mov
adc
popf
idiv
xchg
ds
rcl
or
mov
xchg
retf
dec
test
push
ret
push
or
pop
jecxz
mov
stos
fistp
(bad)
pop
cs
mov
sbb
jne
repz
sbb
xchg
mov
push
(bad)
inc
call
in
xchg
add
(bad)
xor
out
sbb
bound
loopne
aad
xor
mov
mov
jg
fwait
outs
sub
push
(bad)
das
xlat
mov
cmp
pop
jl
and
fild
xchg
add
sti
sbb
test
dec
or
(bad)
ja
sbb
in
rol
pushf
cs
jnp
pop
sbb
lahf
bound
add
dec
add
mov
pusha
or
retf
xchg
in
pop
sbb
inc
sbb
pop
jae
xchg
push
movs
dec
fidivr
div
xchg
jmp
xor
ret
rol
mov
inc
pop
xor
nop
mov
pop
jge
adc
xchg
push
dec
jae
rcl
push
rcr
jb
pop
(bad)
mov
int
test
shl
retf
xor
and
pusha
(bad)
cmp
(bad)
push
nop
repnz
(bad)
in
cmc
fbld
lods
test
fcomp
mov
loope
inc
ds
fwait
mov
jbe
lea
and
lahf
and
push
outs
cmps
neg
pop
repnz
das
pop
adc
sbb
cli
dec
addr16
push
mov
xchg
xchg
dec
loope
mov
jnp
sahf
inc
outs
jmp
mov
js
mov
sbb
loop
bound
pop
and
mov
das
adc
imul
jmp
fisub
jl
mov
fdiv
pop
add
mov
bnd
fwait
mov
(bad)
(bad)
outs
add
aas
addr16
lahf
cmp
lds
pop
(bad)
mov
push
adc
push
ins
lods
xchg
retf
xlat
or
jae
inc
adc
dec
popa
ret
ret
push
mov
es
mov
xchg
not
stos
mov
push
mov
loop
call
mov
mov
mov
dec
pop
add
mov
mov
int3
lock
pop
jg
(bad)
ins
mov
loope
xchg
push
jae
jmp
retf
mov
xchg
dec
add
adc
sbb
popa
push
push
mov
es
in
sub
cmp
dec
icebp
(bad)
es
push
inc
inc
adc
mov
xchg
mov
sub
dec
inc
push
inc
pop
(bad)
fnstenv
jns
pop
out
xchg
adc
inc
adc
shl
imul
mov
or
dec
push
inc
leave
xchg
and
(bad)
imul
push
dec
mov
call
sar
icebp
call
clc
jne
(bad)
ja
cmc
xchg
popf
mov
in
hlt
enter
xlat
icebp
sbb
pusha
inc
popf
fcomp
loop
sub
cld
jecxz
test
mov
call
cmc
out
cwde
cmp
cmp
cli
les
xchg
icebp
(bad)
cld
arpl
xor
ror
sub
outs
xchg
adc
jle
add
sbb
pop
addr16
inc
mov
sbb
mov
test
adc
sbb
iret
pusha
sub
call
aam
repz
mov
mov
fidiv
add
ror
fbld
pop
dec
(bad)
fldcw
push
pop
and
fdivrp
adc
pop
ret
inc
mov
push
jne
(bad)
jle
rep
fidivr
jo
jns
test
ins
aas
sbb
daa
jle
push
lods
push
pop
not
cmps
(bad)
push
les
push
inc
fcmovnu
xchg
pop
jmp
cwde
sub
jp
pop
push
mov
lock
or
mov
push
push
call
ret
aas
into
daa
inc
fdivr
mov
pop
cmps
cmp
fcom
(bad)
and
in
stos
or
inc
orps
lods
shl
xor
ficom
jl
ror
rcl
push
xchg
sbb
fstp
pop
retf
mov
and
xchg
or
retf
mov
cld
enter
fnstenv
loop
pop
inc
xor
add
fadd
scas
outs
ins
pop
dec
(bad)
pop
ss
mov
fucomip
inc
pop
push
rcr
cmp
jae
in
ror
pop
mov
pop
pop
retf
rcl
in
push
ret
add
mov
mov
and
nop
movs
push
sub
and
outs
shl
add
mov
xor
mov
mov
jb
xor
sub
pop
fwait
les
and
push
es
ds
xor
cmp
loope
aad
dec
sub
pop
fisub
std
(bad)
jmp
push
dec
push
leave
(bad)
pusha
es
add
jp
rcl
fld
adc
adc
out
and
push
push
add
sbb
dec
sar
add
push
ja
loope
inc
mov
outs
push
jns
adc
add
cmp
and
sub
fsubr
cmps
div
cmp
adc
xchg
or
fldcw
enter
sub
sbb
(bad)
and
out
daa
cmp
jge
aaa
ficom
lods
stos
ret
dec
es
clc
mov
mov
xchg
dec
adc
pop
scas
cmc
jp
call
cmp
jmp
sbb
mov
add
sbb
pusha
adc
sbb
icebp
push
mov
(bad)
rcr
bound
ficomp
or
adc
jg
or
mov
jae
fwait
and
(bad)
ins
xor
inc
and
inc
mov
sbb
xor
nop
sbb
push
mov
mov
and
adc
add
sbb
adc
adc
dec
or
jge
stc
sbb
mov
je
retf
cmp
sbb
lods
test
cdq
dec
test
push
shl
ror
es
mov
dec
cmp
shl
aaa
clc
fdiv
mov
push
push
cmc
inc
aad
daa
mov
sub
jl
sub
mov
pop
adc
mov
jb
push
shl
jg
push
and
cmovae
jp
pop
outs
clc
sub
jmp
and
push
test
stos
inc
cli
pop
leave
dec
(bad)
adc
das
or
jmp
or
adc
sbb
mov
add
xor
cmp
cwde
xchg
arpl
lea
cmc
in
mov
popa
mov
xchg
cmp
xchg
xchg
(bad)
jge
mov
jp
std
lds
sbb
sar
imul
xchg
(bad)
mov
je
in
icebp
or
(bad)
xor
jle
cmp
fmul
pusha
jl
jg
pop
inc
aas
inc
mov
or
sbb
or
dec
dec
rcl
sbb
(bad)
rcl
push
adc
dec
repz
push
jnp
mov
and
xchg
jae
ins
xchg
loop
lds
push
sbb
inc
adc
mov
jge
adc
add
xchg
pop
sub
sub
das
repnz
push
clc
pop
dec
jmp
push
mov
mov
dec
(bad)
icebp
ret
test
and
test
or
loope
outs
rcl
sti
ins
sub
adc
cmc
unpckhps
push
mov
dec
(bad)
loop
sub
outs
cmp
jecxz
cvtdq2ps
pop
add
pop
mov
(bad)
jno
pop
lods
or
leave
xchg
(bad)
jae
push
pop
out
xchg
xchg
push
fwait
shr
cmp
jmp
mov
(bad)
call
jnp
xlat
pusha
ret
and
mov
inc
scas
daa
sub
std
movs
xor
adc
lea
sbb
lahf
retf
xor
jnp
and
lds
inc
lahf
sbb
in
dec
sti
and
jle
(bad)
int3
push
sub
stc
xchg
and
(bad)
jae
push
add
arpl
(bad)
push
inc
push
pop
jno
mov
push
inc
loope
retw
lods
jbe
jg
mov
inc
mov
inc
leave
mov
sub
dec
ja
xor
sar
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
xor
sahf
and
inc
arpl
(bad)
ficom
xchg
or
loop
adc
inc
sub
adc
or
idiv
sbb
sahf
jp
lahf
ret
jmp
cmp
shl
imul
xchg
ss
sbb
sub
sbb
pop
add
imul
daa
outs
fisttp
xor
or
test
jecxz
mov
sti
call
cmp
xlat
repz
fsubr
push
add
rcr
jmp
fadd
fisttp
jne
sub
ret
mov
fmul
and
xchg
cld
dec
pop
xor
arpl
fild
int3
popa
repz
int
test
xchg
pop
mov
stos
and
call
scas
xor
pop
mul
cmp
cmc
lods
push
ret
pop
ror
lds
fdivr
push
test
pusha
out
ds
cmp
movs
mov
shl
mov
cmp
sub
pop
call
mov
ja
xchg
pop
fldcw
xchg
(bad)
les
imul
idiv
cld
sbb
(bad)
xchg
cmp
sbb
aaa
jae
fnstsw
mov
imul
test
add
cs
test
rol
sub
lods
cld
and
sbb
add
popf
fdivr
retf
xor
push
rcl
xor
mov
aad
push
inc
or
mov
stos
pop
dec
popf
sub
mov
fidiv
sar
sub
jb
shl
cmp
sti
xchg
lds
cmp
mov
loopne
or
fs
mov
mov
push
aam
inc
xchg
pop
mov
sub
sbb
push
pop
sub
push
adc
mov
ins
das
push
jae
xor
fsubr
push
sub
xchg
mov
or
sbb
test
pop
mov
or
leave
lea
imul
push
cmps
adc
or
xchg
mov
push
mov
cld
mov
nop
pop
jae
paddusb
je
in
sbb
jnp
out
shl
stos
ficomp
xlat
pushf
or
in
sub
(bad)
jmp
push
cmp
sub
sub
fwait
push
adc
push
das
jmp
mov
jo
dec
data16
int
push
cmps
and
jp
call
rcl
dec
mov
mov
lods
mov
call
and
fist
icebp
xor
adc
stos
xor
shr
fnsave
add
sbb
jae
inc
pop
in
cmp
mov
lods
mov
iret
dec
dec
leave
push
mov
sar
push
xchg
scas
test
xchg
adc
xchg
inc
lods
mov
les
push
(bad)
pushaw
loop
sbb
jle
or
jg
aas
dec
icebp
out
(bad)
and
push
pop
lahf
lahf
mov
pop
data16
jo
iret
nop
aaa
and
(bad)
dec
inc
and
call
(bad)
dec
and
cmp
ds
std
xchg
mov
out
into
sub
nop
sahf
imul
push
shl
cmc
mov
mov
loopne
cmp
lahf
sub
mov
imul
push
pop
cs
cmp
in
mov
in
push
jno
paddq
in
imul
sbb
std
mov
popf
xchg
xor
nop
iret
mov
push
std
icebp
into
fcomp
push
xor
pop
and
bound
or
mov
cs
ja
pop
adc
stos
enter
xchg
adc
cmps
outs
mov
or
and
rol
mov
(bad)
fadd
xchg
imul
push
test
out
mov
mov
nop
xor
cmc
or
(bad)
xor
push
xchg
iret
pand
cmp
in
pusha
in
nop
in
sbb
add
rcpps
retf
mov
inc
adc
(bad)
mov
loope
jne
aaa
sub
push
xor
in
movs
push
xchg
outs
pop
ja
inc
mov
add
mov
pop
cmovp
stos
dec
fdivr
stos
lahf
fwait
hlt
inc
push
retf
iret
mov
mov
push
scas
dec
xchg
mov
mov
pop
popa
(bad)
stos
mov
mov
repnz
(bad)
cmc
fild
push
(bad)
or
dec
fistp
fistp
mov
test
xlat
sbb
pop
int
adc
adc
xchg
in
out
add
cmps
mov
inc
fdivr
gs
jle
rcr
test
popa
(bad)
jl
add
sbb
aam
mov
cmp
in
inc
repz
arpl
loope
js
stc
loopne
in
enter
mov
in
push
mov
sub
sub
jns
fst
scas
aas
xlat
sbb
in
scas
mov
and
(bad)
leave
in
push
dec
dec
inc
test
cmp
test
jnp
xor
and
aas
in
and
lods
pop
bound
out
xor
pop
mov
mov
xchg
and
pop
mov
or
sbb
add
fcomp
js
jge
je
int3
jle
adc
dec
rol
loop
lahf
addr16
adc
fistp
bound
add
out
cmc
ins
cld
jae
fst
in
test
cmps
push
dec
push
(bad)
daa
imul
or
mov
xor
mov
jmp
retf
adc
repnz
cmp
mov
popf
dec
dec
inc
mov
push
mov
adc
mov
jo
aad
enter
das
imul
jecxz
cmps
lahf
jmp
push
adc
mov
scas
mov
push
sbb
aam
sbb
or
dec
mov
movs
frstor
add
pop
xor
xchg
test
pusha
mov
addr16
adc
sbb
mov
dec
inc
scas
sub
dec
mov
sar
lods
int3
ja
imul
jp
aas
test
jle
mov
or
cmp
sbb
mov
or
and
ror
out
js
imul
ss
xor
mov
and
scas
std
sub
(bad)
lods
aam
or
cld
or
inc
fistp
pop
push
mov
gs
add
loop
or
fist
cmps
or
aam
retf
push
enter
aas
sbb
test
xor
mov
sbb
punpckldq
dec
jge
cmps
out
in
adc
mov
nop
mov
mov
imul
add
inc
or
push
test
out
sahf
aam
cmp
fwait
xor
and
push
mov
das
cs
mov
pop
adc
adc
aas
call
inc
in
pushf
repz
outs
stos
dec
je
pop
pop
sbb
pusha
xchg
inc
popa
sbb
ret
or
xchg
pop
sbb
sbb
test
jg
rcr
adc
ja
sti
mov
mov
(bad)
mov
adc
mov
pop
push
outs
pushf
cmp
fisubr
sbb
aaa
cmp
sub
inc
push
out
cwde
mov
inc
adc
cwde
sbb
(bad)
clc
ror
imul
mov
ret
inc
movs
mov
xor
cld
mov
mov
sbb
mov
ja
jmp
jecxz
out
or
cmps
repz
repz
sub
cli
outs
dec
jbe
mov
sub
dec
push
in
out
loope
cmps
and
dec
daa
add
xchg
pop
jp
adc
mov
mov
xchg
add
cmps
mov
dec
xchg
push
loopne
dec
popf
imul
movs
test
xchg
dec
fld
adc
test
xor
dec
sbb
cmp
xor
aam
popa
xor
add
cmp
mov
push
lods
push
jmp
sub
repz
jne
inc
pop
jne
(bad)
(bad)
mov
fdivp
fild
cmp
sbb
ds
push
cmp
mov
cmp
xor
call
aad
mov
vcvtsd2si
outs
sub
push
xchg
cwde
cdq
jmp
add
dec
cmp
pop
movs
adc
xor
jns
imul
mov
adc
mov
mov
dec
push
adc
(bad)
cmc
pop
mov
jae
push
imul
sbb
adc
mov
shl
rol
xlat
aas
and
cli
clc
cli
xchg
xchg
mov
lods
xchg
int
push
and
xchg
cmp
fwait
and
dec
xor
jmp
or
dec
pop
jle
or
adc
xchg
push
mov
xchg
sub
push
rol
test
shl
lahf
enter
gs
cmp
sahf
xchg
inc
jb
mov
imul
dec
adc
sbb
inc
jg
sahf
test
iret
outs
push
cmps
and
pop
dec
int3
sub
inc
pand
add
dec
sub
and
mov
mov
ret
into
(bad)
and
xor
sub
mov
fadd
push
sbb
adc
inc
inc
rdtsc
sub
mov
push
mov
iret
jno
les
clc
and
out
inc
sbb
icebp
repnz
cdq
cmp
hlt
popf
jns
fcmovu
shr
jae
cmc
push
(bad)
adc
mov
push
cli
xor
in
popa
test
movs
cdq
inc
jge
add
mov
aas
pop
scas
aaa
mov
les
leave
add
adc
lods
bound
call
xchg
pop
and
pop
push
lock
ds
mov
add
dec
popa
mov
and
push
loope
mov
xor
loop
fadd
xor
(bad)
std
jl
ret
add
xchg
fdiv
sbb
xor
cmc
jmp
add
cmp
mov
jbe
or
(bad)
dec
dec
inc
movs
stc
xor
sbb
loop
(bad)
lods
stos
lods
mov
mov
out
cmps
xchg
push
push
stos
inc
jmp
mov
push
xor
test
rcl
sub
loop
inc
imul
mov
xchg
mov
sub
or
dec
(bad)
mov
mov
and
xor
and
cmps
or
popa
add
mov
xchg
add
cmp
xor
xchg
mov
push
jns
sub
mov
or
ss
xchg
cmp
lock
jmp
jl
mov
inc
jmp
jl
int
pop
dec
daa
sti
mov
mov
pop
jmp
or
mov
lea
mov
mul
mov
mov
fidivr
scas
cmp
mov
stc
mov
push
mov
pop
sbb
popa
into
es
xchg
dec
aas
push
inc
sbb
inc
push
sti
mov
mov
rol
xchg
adc
loop
scas
std
push
cmp
mov
xchg
and
xor
ins
xchg
in
and
popf
xchg
add
mov
iret
lahf
push
adc
leave
mov
and
xchg
in
or
jg
and
xchg
lds
push
jle
xor
shr
out
push
mov
sub
mov
cmp
pop
retf
and
jp
inc
stos
adc
inc
mov
(bad)
jmp
rcl
xchg
mov
(bad)
cli
stos
push
mov
mov
mov
or
repnz
out
sbb
inc
ds
cmp
enter
jge
sbb
sti
(bad)
xor
jo
jecxz
mov
add
int3
mov
test
or
(bad)
dec
inc
ficomp
jb
jg
(bad)
mov
popa
ss
inc
test
push
ret
xlat
mov
ror
cmc
icebp
lock
cli
push
jecxz
add
jmp
clc
cmp
cmp
jle
loope
inc
ss
push
mov
in
mov
cs
lahf
mov
or
push
icebp
mov
sub
(bad)
mov
or
cmps
push
lock
in
ror
popf
cmp
sbb
or
sbb
cmp
pushf
xor
xchg
fwait
sti
xor
popf
mov
nop
xor
inc
mov
ins
mov
and
ss
movs
pop
gs
jg
push
xchg
and
add
outs
aaa
test
std
fst
fs
cmp
add
pop
adc
call
sub
cs
dec
aam
hlt
dec
bound
push
adc
mov
xchg
stos
inc
mov
fwait
or
adc
das
fwait
repnz
mov
(bad)
xor
aam
repnz
cld
sti
xchg
fneni(8087
lea
mov
push
mov
jp
mov
jg
pop
cwde
les
ror
xchg
(bad)
fidiv
push
sub
leave
movs
and
cdq
sub
aad
jmp
mov
sub
and
add
das
pushf
pop
ja
sbb
xchg
mov
pop
hlt
push
dec
je
clc
test
fisttp
addr16
adc
daa
imul
fwait
xchg
or
lods
lea
xchg
mov
leave
xor
out
mov
pop
pop
dec
fidivr
or
xchg
(bad)
pusha
add
jno
or
dec
rol
dec
fsub
test
push
std
inc
pop
xlat
cmp
pop
scas
adc
(bad)
mov
movs
fwait
retf
rcr
fidivr
lods
aas
cmp
mov
dec
ins
scas
leave
std
fist
adc
cmp
sbb
pop
xor
pop
pop
ins
mov
fwait
add
xchg
test
mov
cwde
out
adc
jecxz
pop
mov
rol
into
and
add
std
call
adc
inc
cld
pop
mov
ficom
jne
jns
sbb
mov
jp
cld
cld
ror
sar
sub
adc
ja
mov
jecxz
bound
pop
push
fld
pusha
mov
jae
mov
in
outs
cmp
jle
mov
push
add
add
jl
mov
mov
outs
jmp
ds
int
push
inc
bound
sub
fisubr
xchg
shl
inc
jle
scas
ins
mov
xchg
movs
sti
and
sub
das
outs
or
adc
gs
(bad)
jae
pop
rcr
jne
test
mov
mov
je
jmp
adc
and
mov
fidivr
dec
gs
div
or
ss
xchg
std
jle
mov
bound
imul
data16
dec
retf
nop
mov
shl
pushf
sub
nop
sbb
int
fcom
jbe
pushf
cmps
mov
(bad)
xor
out
(bad)
stc
jle
stc
out
(bad)
cli
jle
sub
dec
xlat
and
fbld
inc
xchg
cmp
repz
pop
aas
and
inc
lds
fdivr
push
jge
jecxz
call
sbb
test
adc
pop
adc
and
cmp
rol
xor
fwait
inc
dec
(bad)
cmps
jmp
push
xchg
inc
xchg
push
(bad)
mov
xchg
retf
mov
call
into
popa
cmp
or
pop
pushf
dec
sub
into
cmp
add
outs
sub
or
jge
mov
add
jecxz
stos
dec
mov
movs
lods
fdivr
inc
jge
icebp
jle
and
popf
rol
mov
je
popa
sub
mov
in
mov
cmp
cmp
and
and
(bad)
fild
outs
xor
add
dec
leave
iret
fimul
dec
jns
add
xchg
add
mov
xchg
xchg
fild
jl
out
jno
pop
pop
mov
call
cli
mov
fstp
xor
push
std
mov
cmp
push
cmp
dec
aas
sbb
mov
addr16
outs
xor
ror
xchg
je
leave
outs
(bad)
call
xchg
sbb
test
test
cmp
sub
jbe
pushfw
xchg
and
jecxz
movs
dec
(bad)
jns
or
sti
cli
fldenv
and
cmps
adc
jg
push
xlat
fistp
adc
loop
(bad)
(bad)
out
(bad)
adc
(bad)
rol
sbb
pop
pop
mov
mov
push
xchg
jns
test
or
dec
fist
push
retf
arpl
ds
(bad)
sar
xor
mov
das
pop
js
or
rcl
cli
cld
push
cmps
jns
jno
je
test
jge
neg
(bad)
in
adc
add
cmp
in
movs
iret
lods
push
inc
movs
int
pop
inc
arpl
jp
jle
ret
stc
xor
popa
cmp
cdq
cmp
scas
dec
dec
movs
scas
repnz
dec
das
cs
adc
mov
xchg
add
push
fs
mov
add
arpl
call
(bad)
popa
jmp
nop
fwait
(bad)
cmps
inc
xchg
pop
inc
out
fs
jmp
leave
mul
xchg
loop
ins
xchg
sbb
ret
and
add
cdq
mov
push
dec
mov
xor
push
xor
fld
stos
sbb
or
cli
add
ds
in
int3
cmps
pop
push
cmp
mov
data16
inc
push
xor
pop
pushf
ficom
mov
jmp
cld
les
jns
cmps
pusha
jns
dec
cld
mov
scas
popf
or
adc
or
push
and
test
sbb
xor
pop
imul
sbb
inc
inc
in
and
bound
cmp
add
lods
fnstcw
and
xor
mov
fcmove
jp
mov
inc
push
ins
cmp
xchg
mov
cdq
fcomp
and
and
fstp
cs
ficom
retf
ret
rcr
pop
jmp
cmc
xor
leave
sbb
fadd
aam
mov
adc
test
jno
dec
sub
push
ret
scas
or
test
sub
imul
retf
ret
mov
cwde
stos
adc
std
mov
leave
cmps
inc
fs
fiadd
xchg
push
or
inc
in
mov
jns
scas
aaa
pop
mov
push
cmp
out
sub
push
cmp
and
popa
icebp
fwait
aad
sbb
adc
pop
xchg
sub
repz
aad
push
sar
ins
sbb
pop
scas
adc
lahf
test
imul
lea
jnp
sbb
cmp
and
or
pop
sbb
fadd
mov
push
jp
mov
mov
xchg
outs
push
ja
cs
es
repz
cdq
jmp
mov
sub
sub
sbb
fucomip
mov
mov
stos
lods
xor
sahf
lods
aas
es
ins
dec
push
jl
adc
inc
push
and
aas
mov
(bad)
call
out
push
shr
jns
jge
ja
das
xor
mov
push
push
inc
mov
or
mov
in
mov
sbb
fwait
push
push
popf
fsub
scas
adc
popf
loope
mov
lods
mov
mov
fwait
popa
or
mov
dec
inc
pushf
mov
repnz
mov
mov
xor
fiadd
lods
jp
adc
mov
int3
es
xor
jl
inc
into
adc
mov
add
imul
inc
dec
inc
retf
adc
cmp
xchg
jle
ins
cmc
gs
mov
pop
(bad)
js
mov
aas
loope
xchg
fisubr
aas
retf
aad
out
sub
out
add
in
push
jne
jb
or
sub
jecxz
mov
jge
push
rcr
out
cs
rol
retf
pop
outs
shr
dec
or
lea
xchg
dec
loop
sub
retf
xor
sbb
or
push
mov
aad
jmp
fbld
cmp
adc
ja
lods
repz
scas
(bad)
in
les
pop
sbb
or
cwde
(bad)
test
or
loope
pop
cmp
loope
sti
xchg
inc
rcr
movs
fisubr
stc
cwde
loop
mov
pop
aaa
gs
and
sub
inc
xchg
pop
and
retf
inc
mov
sar
dec
inc
cmp
sub
and
add
jl
jbe
int
cwde
mov
pushf
sub
mov
scas
jmp
add
inc
loop
and
adc
out
daa
stc
dec
retf
adc
sub
mov
xchg
xchg
mov
inc
fstp
jns
repnz
jmp
lea
inc
push
retf
inc
ins
adc
push
mov
pop
inc
call
xchg
cmp
outs
aaa
dec
sub
and
dec
shl
sbb
mov
call
js
popa
movs
sbb
xor
dec
hlt
mov
cli
dec
or
repnz
pop
lea
aad
arpl
and
pop
dec
ins
dec
gs
jmp
sub
xor
and
xchg
fsubr
hlt
repz
icebp
sub
xchg
xor
ins
int
push
jbe
mov
bound
pop
jl
scas
(bad)
adc
das
xchg
xor
enter
rol
add
mov
int
push
or
pop
jmp
mov
push
cmp
jns
iret
es
xlat
sbb
test
jae
dec
arpl
mov
fchs
dec
push
push
sub
jb
or
mov
inc
test
jae
jns
(bad)
mov
ins
cmp
mov
call
(bad)
sub
push
dec
or
pop
xor
out
lea
xor
test
xor
mov
ficom
dec
jne
push
fs
inc
sub
xchg
inc
loopne
cmp
push
ret
imul
mov
mov
dec
xor
xchg
in
add
scas
enter
xor
and
loop
push
faddp
and
lock
pop
inc
dec
xor
mov
clc
daa
ss
mov
(bad)
out
or
sbb
dec
pop
adc
neg
cli
sbb
or
in
das
mov
push
xchg
retf
loope
das
mov
js
dec
jno
sbb
cmc
sub
js
loope
fs
ja
es
int
gs
jb
mov
es
(bad)
sbb
call
dec
xchg
clc
sahf
and
lock
fidivr
loop
inc
or
xchg
(bad)
mov
sbb
(bad)
in
shl
aas
or
pusha
repnz
std
push
mov
add
data16
test
shl
or
enter
stc
arpl
cmp
imul
pop
adc
jle
ret
hlt
test
out
push
push
sbb
(bad)
xlat
push
sbb
push
jp
shr
mov
stos
sti
pusha
mov
loopne
ficomp
jle
int
sbb
enter
lods
addr16
dec
mov
sub
cmps
jecxz
dec
imul
inc
fnstenv
sbb
movs
mov
test
adc
jecxz
(bad)
xchg
loop
je
push
cmc
in
leave
fnstsw
xchg
xchg
and
push
sub
aas
jge
sub
cmc
test
pop
xchg
sbb
xchg
inc
cmp
(bad)
dec
mov
mov
ja
out
loopne
out
xlat
xchg
dec
xor
pop
and
xchg
xchg
aaa
jnp
pop
xor
jne
es
lock
sub
sub
mov
pop
repnz
add
push
or
test
push
or
call
mov
mov
lds
inc
scas
jmp
in
sbb
jnp
(bad)
inc
sbb
inc
stos
scas
cs
outs
sbb
cmp
jno
popa
cwde
lock
out
in
lahf
add
jne
mov
sub
xor
test
mov
push
stc
jmp
bound
fistp
sti
ret
xchg
xchg
into
dec
gs
sub
cmps
mov
rol
les
ficom
hlt
mov
mov
popf
arpl
push
shr
xor
sbb
cmp
mov
cdq
call
(bad)
js
mov
add
jmp
lds
imul
fdiv
and
call
and
xchg
xchg
adc
scas
addr16
out
in
pop
jb
je
cmp
pop
les
jp
scas
stc
push
out
xor
les
mov
fmul
mov
or
push
xor
jmp
push
mov
and
push
ins
lods
stc
pushf
jecxz
push
jns
call
mov
adc
sub
call
inc
dec
adc
shr
cdq
mov
mov
fmul
lds
jp
sahf
or
mov
dec
add
mul
iret
pop
(bad)
add
in
sub
outs
jnp
lock
dec
fucomi
pmullw
xchg
inc
aam
fstp
enter
sub
and
dec
sti
in
xchg
ds
(bad)
sub
xor
sub
add
and
push
gs
frstor
mov
std
int3
ja
ss
cmp
pop
xchg
jo
adc
xor
sbb
jo
lock
add
xchg
hlt
push
call
cld
enter
or
les
push
pop
test
sub
jne
mov
repz
(bad)
inc
pop
clc
pushf
clc
mov
dec
fadd
lahf
adc
popa
aad
data16
push
shl
out
or
push
pop
and
lods
popa
movs
fsub
add
xor
sub
xchg
mov
lods
pop
lea
mov
in
push
pop
movs
mov
out
(bad)
cmps
push
lock
mov
test
xchg
lock
sahf
fbstp
rol
pop
or
rcr
in
jmp
imul
outs
shl
dec
aas
in
ins
pop
cmp
xchg
cdq
jmp
shr
and
mov
cwde
stos
int
xchg
dec
fld
xchg
out
xor
fimul
inc
cmps
aam
push
cmps
mov
or
jae
mov
fdiv
ss
jne
push
adc
(bad)
or
pop
pop
aam
push
mov
xchg
or
or
sbb
jno
retf
bswap
movs
push
inc
xchg
add
jno
adc
push
in
mov
xchg
sub
mov
add
sub
ret
push
retf
sbb
fmul
cmps
push
adc
lock
mov
clc
pop
inc
cmp
ins
pop
or
jne
cmp
xor
mov
icebp
mov
dec
cmp
pusha
lock
xor
les
mov
cmps
out
add
rcl
jns
sbb
jl
sar
push
ins
inc
adc
dec
or
inc
push
shl
mov
sub
and
pop
cmc
int
pop
add
fcom
test
icebp
mov
(bad)
(bad)
outs
and
ins
aam
arpl
and
xchg
idiv
push
mov
pop
mov
adc
or
cmp
in
xchg
pop
sub
mov
in
sub
fs
xchg
dec
(bad)
xor
xchg
das
cs
(bad)
cmp
fisubr
mov
into
jg
arpl
xchg
mov
test
(bad)
jno
mov
fist
add
or
loope
dec
mov
push
inc
fs
rcl
out
jge
jmp
sub
cmp
and
daa
ror
cdq
outs
xor
inc
les
jl
sub
dec
fmulp
ins
enter
inc
outs
ins
xchg
mov
stos
sbb
sbb
cmps
add
pusha
movs
jmp
movs
or
mov
fstp
test
es
push
mov
call
push
add
push
sbb
and
cmp
inc
cmp
aas
loop
int3
leave
aam
out
inc
sub
call
int
daa
dec
leave
sahf
dec
pop
repz
sbb
sar
out
jo
mov
loopne
(bad)
jl
(bad)
call
out
push
or
test
pop
jp
hlt
cs
rcl
adc
enter
and
and
shl
ins
sub
pop
loop
push
jmp
or
inc
lea
pop
stos
mov
cdq
or
adc
shr
push
int
ret
jbe
inc
inc
ins
cmp
mov
ins
sub
bnd
xor
cmp
push
in
outs
fidiv
and
scas
mov
inc
fwait
and
stc
loope
xchg
lods
cmp
ins
pop
mov
ret
sbb
inc
dec
std
mov
dec
sub
ret
sub
mov
mov
and
ins
ret
lods
xor
clc
retf
test
push
push
push
xor
mov
movs
mov
lock
cmp
in
retf
sti
cmc
daa
hlt
xlat
loop
or
repz
(bad)
pop
aas
jecxz
imul
push
test
pop
loopne
pop
ins
xchg
xor
in
mov
sbb
mov
(bad)
adc
test
mov
aam
push
dec
sub
inc
xor
call
into
mov
mov
aam
cmp
loop
mov
pop
pusha
mov
push
jge
(bad)
and
jbe
adc
mov
inc
push
mov
dec
js
sub
aas
inc
int3
sbb
test
push
outs
iret
test
pop
sub
stc
outs
lea
sbb
pushf
pop
stc
inc
pop
push
cdq
pop
xor
jle
or
loopne
repnz
adc
sbb
loope
mov
not
es
in
mov
es
test
rcr
pop
les
push
in
(bad)
dec
xchg
mov
or
(bad)
mov
pop
and
lds
sbb
aaa
inc
sbb
or
fwait
dec
mov
leave
das
movs
sub
mov
mov
inc
mov
and
xchg
sbb
mov
inc
iret
fsin
inc
shl
ret
in
push
xchg
iret
fadd
inc
cvtpi2ps
push
inc
ror
mov
dec
push
or
cmp
xor
mov
pop
in
in
pop
cwde
shl
jmp
jns
shl
test
jno
test
mov
jle
aas
ss
cli
and
js
test
out
(bad)
aas
sbb
xor
cmp
sub
dec
outs
adc
push
lock
loop
rcr
nop
test
hlt
mov
cwde
cmp
xor
int3
cmps
mov
clc
enter
pop
in
inc
adc
push
mov
(bad)
lods
arpl
push
jns
or
int
shr
pop
mov
mov
cs
retf
cmc
jle
mov
popa
fs
call
addr16
and
out
jmp
pop
jmp
xchg
aam
mov
lea
in
push
das
mov
and
jae
int
adc
fst
mov
cli
cmp
cwde
jmp
ja
pusha
cdq
nop
push
push
out
bound
jnp
icebp
popf
int
cs
xchg
shl
nop
sti
cmp
add
cwde
cmp
scas
les
push
jg
mov
mov
call
call
jle
nop
push
mov
scas
mov
push
sbb
int
xchg
lods
ins
iret
mov
ret
push
push
cmp
mov
fs
sub
xchg
(bad)
pushf
mov
xchg
aam
arpl
es
mov
sti
imul
dec
or
jbe
bound
sbb
add
fld
sub
loop
adc
sbb
test
rcl
cld
mov
(bad)
inc
mov
dec
test
lock
mov
push
in
(bad)
inc
fistp
add
dec
test
lds
in
call
outs
or
xor
inc
adc
mov
adc
jo
ret
daa
les
out
rol
push
cld
pop
mov
cld
sub
leave
or
mov
test
test
add
mov
push
mov
add
adc
xchg
imul
mov
jge
xor
pusha
inc
retf
adc
jmp
pop
inc
fisubr
ret
push
stos
sbb
or
lods
shr
push
sbb
cmp
sbb
jl
es
cmp
popf
das
xchg
lea
and
pcmpgtd
dec
cmp
mov
pop
scas
loopne
mov
xor
gs
sbb
mov
push
jl
pop
add
push
xchg
das
aas
fisttp
lods
scas
jbe
push
cmc
dec
hlt
inc
icebp
rol
inc
mov
and
(bad)
mov
(bad)
dec
into
jle
xchg
retf
gs
mov
cmc
leave
div
inc
(bad)
push
loopne
mov
pop
(bad)
test
or
pop
int
mov
shl
xchg
(bad)
jl
loop
xchg
fldenv
test
jae
(bad)
fs
inc
dec
push
aam
shl
xchg
call
movs
xor
fistp
loope
add
scas
jecxz
movs
inc
add
shl
jmp
popa
push
cli
sub
pop
jmp
call
icebp
ins
(bad)
(bad)
cmp
repz
add
test
cwde
pop
push
dec
push
xor
dec
mov
sti
jl
retf
jae
mov
inc
retf
aas
fisub
movs
ss
das
fbld
push
outs
frstor
and
and
mov
lea
and
xchg
loop
daa
xchg
cwde
xchg
retf
push
lock
or
push
jg
imul
sbb
rol
jp
xor
and
adc
aas
or
ror
ins
mov
sti
arpl
mul
push
jp
add
push
sti
and
jmp
call
out
mov
sub
je
mov
clc
dec
push
and
fwait
dec
lea
push
call
or
arpl
cmps
nop
int3
jb
jecxz
lods
nop
sub
loop
(bad)
repz
or
inc
outs
loop
cmc
rcl
jnp
sub
jno
push
push
or
adc
push
cmp
push
sub
int
mov
mov
cwde
rol
cmp
xchg
in
je
arpl
jl
add
mov
xchg
add
xor
sbb
fs
js
stc
call
mov
lea
movs
xchg
push
test
les
repnz
ja
les
ret
mov
adc
ret
icebp
add
inc
sar
add
and
push
out
push
enter
mov
shl
cmps
data16
int
xor
sbb
ffreep
inc
mov
or
or
ins
cli
sub
sbb
das
in
add
ds
outs
shl
dec
call
push
ffreep
shl
jle
pop
aaa
jg
cld
sub
or
fadd
out
mov
and
adc
mov
es
xchg
movs
icebp
or
or
daa
sbb
and
out
xor
fstp
ins
rcl
mov
jmp
clc
scas
jmp
dec
int
(bad)
icebp
jne
mov
sbb
inc
or
test
fsubr
lea
sub
or
loopne
lea
lods
xchg
mov
int
xor
xchg
push
cli
xchg
pop
test
sub
push
xchg
movs
daa
ror
dec
mov
mov
ja
inc
ja
push
xlat
push
sub
cmp
not
jp
or
(bad)
daa
and
lds
jns
jle
test
pushf
scas
add
push
int
call
enter
stos
inc
and
scas
pop
pop
fucomi
lds
mov
test
inc
mov
adc
(bad)
sub
mov
push
pop
shl
iret
lods
loop
ins
(bad)
jmp
push
les
aas
rcl
arpl
out
aaa
popf
pop
jge
das
cmp
xchg
vmptrld
aam
es
lock
(bad)
pop
scas
dec
sbb
xchg
sbb
es
dec
sub
dec
in
(bad)
idiv
sbb
shl
and
inc
cld
cdq
mov
fld
shr
into
loope
scas
jge
and
xchg
enter
jae
or
adc
cld
jo
push
mov
sbb
xor
jno
jmp
mov
push
inc
jecxz
and
fcomp
sti
sub
test
cmps
sub
and
mov
xchg
inc
repz
bound
add
ja
(bad)
mov
mov
lods
lea
movs
not
mov
in
into
jno
retf
xchg
cs
aam
pop
xor
scas
fiadd
dec
popf
push
and
out
mov
fstp
lods
pop
cmp
sub
jnp
cmps
fdiv
xchg
rcr
cmp
sbb
test
push
add
fisttp
in
and
stos
add
sub
stos
out
jo
inc
cli
pop
movs
and
leave
cmc
(bad)
xor
mov
mov
pop
or
js
lods
stc
scas
(bad)
mov
out
jns
fst
out
test
add
add
sar
ret
push
lock
cmc
fidivr
movs
dec
test
std
push
fcom
fisubr
push
mov
into
cmps
jmp
sar
jbe
push
clc
or
mov
jge
fdivr
in
pop
mov
sbb
popa
mov
lahf
mov
mov
or
jp
pop
fidivr
mov
idiv
jmp
push
jbe
adc
mov
mov
sbb
jmp
stc
scas
add
dec
retf
xchg
fst
(bad)
and
movs
outs
add
sbb
mov
push
dec
out
and
ficom
mov
xchg
daa
pop
clc
add
mov
lds
cmc
adc
test
mov
in
scas
shl
add
sahf
and
pop
xor
inc
push
mov
xchg
aad
jne
movs
iret
ret
add
(bad)
pop
sbb
imul
lods
mov
in
cmp
push
stos
popa
dec
sahf
dec
dec
pop
sbb
and
lock
sub
icebp
sub
inc
jae
sub
icebp
jle
lock
stos
xor
leave
imul
jecxz
(bad)
mov
je
cdq
stos
or
repz
adc
in
outs
xchg
js
addr16
in
pop
push
adc
int
sbb
xor
out
mov
imul
imul
pop
xchg
xchg
pop
or
es
(bad)
stos
ror
shr
outs
inc
out
cli
dec
(bad)
cmp
add
jo
push
test
daa
shl
and
out
mov
punpcklbw
inc
mov
dec
rol
aas
push
repnz
xchg
cli
pop
retf
pop
or
cmp
shr
mov
mov
scas
and
xchg
sub
add
inc
add
pop
mov
mov
xor
shl
ds
cld
sbb
ror
je
push
mov
retf
je
test
jge
je
dec
add
retf
test
cmp
xchg
inc
jne
xchg
aas
cmp
repz
cmp
dec
push
adc
cmps
cli
test
fwait
push
sub
pop
mov
xchg
imul
xor
clc
mov
enter
cmc
mov
mov
jmp
xchg
sub
inc
add
and
cmp
stc
xor
xchg
mov
movs
(bad)
in
lahf
ins
adc
xor
lahf
pop
dec
adc
xor
sbb
gs
jns
cmp
cmp
aam
test
aaa
or
aaa
xor
sbb
push
mov
mov
dec
nop
cmc
push
int
jmp
and
mov
inc
cmp
lock
(bad)
in
int
scas
inc
and
test
sub
(bad)
fistp
mov
movs
sub
mov
imul
(bad)
int
jns
cli
nop
dec
dec
mov
lea
mov
push
rcl
sub
int3
shl
cmp
mov
fnstenv
cmp
clc
adc
sub
iret
pop
push
es
idiv
scas
xchg
inc
jne
cmp
mov
xchg
xchg
sbb
(bad)
shl
mov
repz
test
jbe
cmp
xlat
mov
adc
inc
popf
pop
push
push
stc
stos
inc
adc
jbe
sbb
cdq
jecxz
mov
aam
pop
cmp
js
das
jns
jmp
aaa
mov
push
mov
lock
rcr
shr
push
sbb
xchg
test
add
fwait
iret
fs
call
ds
sub
adc
push
or
shl
push
push
outs
cld
mov
fstp
aam
xchg
or
arpl
aam
push
mov
ret
out
mov
cmps
pop
cmp
rol
mov
(bad)
into
es
mov
adc
or
icebp
popf
xchg
mov
mov
sub
sbb
adc
adc
popf
push
or
outs
pop
jbe
add
shufps
push
ss
sbb
data16
xor
and
mov
push
cmps
int3
inc
rol
sub
dec
stos
inc
mov
sbb
xlat
repz
fwait
movaps
sahf
xor
and
icebp
aaa
pusha
dec
or
push
adc
movs
cmps
pushf
mov
xor
sar
add
shl
call
mov
mov
loope
dec
mov
mov
adc
aaa
inc
neg
loopne
and
(bad)
mul
arpl
lods
loopne
cwde
dec
out
or
out
fidiv
inc
xor
inc
cmp
sbb
in
pop
addr16
clc
xchg
les
hlt
xor
clc
xchg
adc
xchg
cmps
call
fcmovnb
jge
mov
lods
inc
in
popa
mov
push
not
add
cdq
loopne
lahf
and
mov
cmp
inc
mov
pop
mov
int
and
into
cmps
mov
inc
xor
aas
sub
daa
cmps
aad
stos
pop
ins
shl
into
or
lahf
sub
sub
xchg
mov
call
sbb
jbe
(bad)
push
xor
ror
cmc
mov
add
push
sbb
rcl
clc
jecxz
mov
ret
jne
mov
push
fld
jmp
aas
pop
xlat
aad
sub
pop
mov
sbb
or
pop
xchg
cmp
loop
es
data16
movs
mov
(bad)
in
mov
sub
cld
int
push
pop
imul
adc
pop
or
scas
dec
mov
xchg
xor
(bad)
xor
fimul
adc
test
les
dec
and
ja
xor
pop
call
pop
daa
jb
mov
xor
dec
adc
sbb
jg
or
push
jb
push
pop
retf
sub
out
arpl
pop
ds
sbb
xchg
xor
in
rcr
dec
mov
jmp
push
jbe
pop
sbb
ror
mov
movs
inc
sahf
add
repnz
sub
in
pop
pushf
out
lock
ror
jp
jmp
ja
pop
mov
lahf
clc
xor
test
mov
sub
out
fldcw
sbb
test
and
test
jnp
or
ss
and
int
sbb
sbb
jp
int3
call
(bad)
jge
arpl
rcl
jnp
inc
stc
push
repz
loopne
idiv
shr
jle
sbb
scas
popa
dec
sub
pop
in
push
xor
mov
push
or
pop
(bad)
out
inc
mov
and
inc
imul
lods
fcom
lds
jge
out
call
ss
inc
rcl
pop
lods
int
retfw
stos
push
lock
shr
into
fidiv
sbb
imul
movs
push
fcmovne
movs
(bad)
pop
xchg
and
jg
xor
add
dec
out
inc
cli
scas
loope
mov
add
jmp
xchg
sbb
sbb
enter
mov
sti
push
sbb
push
xchg
jno
test
jmp
es
cld
and
or
mov
loopne
pop
mov
ja
sub
and
movs
inc
or
rcr
stos
retf
call
xor
cli
sbb
fisttp
test
jmp
fwait
pop
(bad)
imul
punpckhdq
dec
call
or
cmp
jb
fs
mov
sbb
cwde
jle
cwde
fwait
mov
retf
cwde
jne
jmp
adc
mov
mov
mov
dec
jl
jecxz
or
push
in
ins
mov
out
cmp
cs
add
or
push
and
xor
int3
in
pop
(bad)
mov
xchg
adc
add
pop
shr
sbb
jl
(bad)
cmp
pop
mov
adc
add
aam
xchg
(bad)
push
sub
ja
stos
inc
aam
mov
jmp
pusha
idiv
sbb
push
mov
mov
push
(bad)
das
push
inc
and
sbb
ja
jns
sub
push
dec
scas
mov
mov
int3
out
stc
xor
adc
push
mov
popa
fdivr
add
movs
test
imul
adc
cmp
cs
mov
fmul
mov
pop
mov
sbb
imul
das
retf
fdivr
mov
mov
(bad)
js
push
iret
les
(bad)
test
mov
or
in
ror
mov
jno
ret
in
popf
adc
dec
mov
call
push
mov
sub
jns
lds
and
jmp
shld
repz
leave
jg
fwait
(bad)
(bad)
jns
retf
ror
enter
imul
xchg
call
div
mov
mov
or
dec
jnp
das
cmps
ret
call
cdq
inc
cli
dec
mov
retf
jnp
sti
scas
cmp
or
retf
(bad)
call
popf
mov
popf
xchg
add
in
xor
inc
loopne
or
dec
ins
aad
adc
arpl
nop
int
or
outs
push
adc
daa
mov
scas
jbe
popf
sahf
xchg
push
stos
ss
or
and
or
sbb
jmp
push
into
stos
loope
push
add
cmovnp
int
fist
sbb
ret
or
jl
or
int
in
(bad)
xor
mov
clc
xor
aad
rcr
add
movs
xchg
and
aas
cmp
cli
lahf
jno
cmc
jmp
push
add
out
jb
and
dec
pusha
movs
adc
test
add
repnz
add
add
movs
inc
jecxz
pop
shr
sub
cld
add
inc
and
rcr
push
call
sub
inc
sti
push
cmps
loope
dec
push
mov
push
je
iret
inc
cmps
inc
dec
(bad)
retf
arpl
jge
jmp
pop
sub
xchg
pusha
loop
out
mov
inc
int
es
jb
dec
test
mov
and
sbb
jnp
push
in
push
loopne
mov
cli
leave
jo
pushf
mov
rcr
in
adc
adc
mov
ret
pop
adc
and
call
cs
es
in
mov
retf
xor
jne
std
(bad)
retf
aaa
in
nop
jbe
add
adc
mov
pop
jg
pop
jns
scas
dec
jae
mov
pop
pop
jp
mov
xor
mov
fld
sbb
and
cmc
int
lahf
jbe
sar
loopne
mov
or
add
in
ret
sahf
outs
cmp
adc
pop
test
mov
mov
add
into
or
mov
jmp
mov
mov
repnz
xor
and
enter
cmc
out
sti
int3
xor
pusha
sbb
out
mov
cmp
pop
adc
pop
adc
and
aad
data16
fsub
jnp
pop
mov
mov
loopne
add
pop
add
dec
cs
out
pop
aas
cmp
mov
sub
pop
out
lea
jb
scas
lods
push
cmp
pop
cmp
ror
jle
sub
adc
pop
jns
pop
cli
xor
jno
ds
sub
dec
pop
lds
fld
sar
(bad)
loope
cmc
dec
mov
cdq
push
jp
stc
pop
sbb
pop
and
fadd
in
loopne
add
ins
jno
xchg
inc
xor
mov
loop
aas
ss
jmp
cmc
add
mov
test
dec
inc
jge
sub
sbb
jmp
mov
sub
add
es
sbb
or
shl
sub
pop
push
xchg
xchg
inc
inc
call
cld
je
ss
jl
jl
outs
lods
shl
dec
and
sbb
sti
mov
adc
ins
mov
fwait
fs
cmp
lahf
or
or
cmp
ja
mov
push
fucom
jo
(bad)
adc
pop
dec
sbb
sbb
fnsave
lock
or
sub
dec
adc
jo
and
popf
out
in
sub
fild
mov
stos
dec
mov
jg
repnz
jnp
pop
test
clc
fisubr
imul
dec
movs
sbb
int3
and
dec
cmp
aaa
pop
jmp
fisttp
inc
imul
rcr
ja
pop
mov
add
retf
dec
shr
retf
ret
xchg
pop
ins
sar
or
add
fidiv
push
lods
loop
inc
xchg
cli
stc
lock
aaa
dec
ins
aas
mov
sahf
mov
test
cmp
push
ds
adc
outs
pop
fisttp
xor
dec
xchg
(bad)
mov
iret
outs
push
enter
mov
sbb
add
mov
js
mov
sbb
pop
or
push
jg
aas
daa
loop
(bad)
outs
in
push
out
and
aaa
push
(bad)
test
or
cwde
cmps
loop
dec
arpl
xor
imul
iret
(bad)
out
popf
pop
movs
pop
sbb
cdq
outs
push
add
in
inc
stos
jmp
(bad)
pop
(bad)
out
mov
dec
pop
xchg
add
xchg
sbb
or
cwde
mov
mov
xlat
pop
lahf
push
loope
cdq
mov
adc
push
sbb
jmp
xor
scas
sar
outs
test
mov
daa
pop
and
dec
jno
adc
pop
pop
data16
ror
inc
data16
in
aam
out
or
or
push
jle
pop
inc
leave
aad
or
jge
mov
mov
jbe
mov
(bad)
xchg
pop
cli
mov
ins
jge
mov
jmp
sub
sbb
push
rol
aad
push
mov
mov
mov
add
sahf
inc
enter
jge
jae
int
push
mov
xor
pusha
adc
mov
mul
inc
sar
loop
adc
dec
in
rcr
and
inc
jle
fs
xchg
popa
sbb
jmp
nop
sbb
movs
xchg
dec
(bad)
das
dec
hlt
pop
(bad)
xor
mov
cs
sub
sub
sbb
ins
cmc
sbb
jo
pop
inc
test
add
fwait
sbb
and
ret
xchg
in
lds
sbb
repz
fstp
arpl
and
imul
hlt
in
pop
mov
push
jne
mov
mov
push
or
popa
iret
jp
push
retf
inc
sub
push
add
push
popa
out
jmp
adc
outs
mov
bound
mov
arpl
xor
js
lock
call
pop
mov
pushf
cld
xor
cmp
jle
or
push
cmp
jno
mov
push
cli
pop
sub
out
sahf
pop
or
stc
dec
cmp
repz
int3
test
arpl
pop
xchg
xchg
mov
into
loopne
push
arpl
sub
mov
push
lock
cmp
enter
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
clc
cmp
pop
inc
mov
test
das
test
xchg
jbe
and
jl
pop
in
icebp
push
shr
mov
dec
das
and
ror
jge
(bad)
int
mov
es
xlat
cmp
rcr
xor
(bad)
sub
cld
fistp
and
sub
fimul
add
test
inc
(bad)
adc
loopne
or
push
cmp
scas
out
repnz
cwde
stc
dec
(bad)
iret
xchg
mov
pop
mov
mov
lods
pop
pop
cwde
imul
jle
cmp
pop
xor
mov
fsub
xchg
mov
sbb
xchg
cmp
jle
dec
adc
das
loopne
push
jo
inc
test
test
das
xchg
dec
cmc
pop
inc
test
shl
ret
ja
push
ins
add
aad
(bad)
out
add
xlat
or
cli
jne
std
push
es
paddusb
sbb
les
test
cwde
jnp
dec
sbb
xor
jns
data16
sub
jmp
xor
sub
sbb
mov
sbb
push
sbb
or
or
pop
scas
pop
and
add
adc
fs
mov
xchg
jle
test
sbb
adc
mov
(bad)
cld
fcmovnu
jle
(bad)
scas
call
loop
das
push
scas
mov
push
js
test
or
gs
gs
push
dec
xchg
adc
cli
test
int3
call
imul
add
xor
push
mov
or
mov
mov
das
push
popa
test
mov
dec
xor
sub
(bad)
or
mov
jb
add
pop
ds
daa
pop
ret
loop
arpl
pop
test
sbb
or
fldcw
push
jns
daa
mov
inc
sub
lds
xor
adc
ins
add
rol
dec
dec
sbb
retf
jmp
or
sub
data16
cmp
mov
or
mov
fiadd
push
jb
jne
mov
call
jnp
push
cmps
and
xchg
sub
test
icebp
sbb
ins
aad
pop
inc
call
das
ins
lea
mov
idiv
mov
inc
(bad)
rcr
or
out
xchg
pop
addr16
add
movs
xor
mov
fdiv
or
cmp
sbb
push
sahf
rol
mov
addr16
push
jae
in
fsubr
loop
mov
fisubr
push
in
jmp
js
mov
push
push
jno
clc
sti
inc
cld
in
mov
jae
mov
mov
mov
sbb
rol
loope
pop
mov
or
cmp
xor
inc
sub
fistp
or
push
cmc
cmp
sub
pushf
pop
push
and
out
loope
sbb
pop
je
shr
dec
pop
call
js
(bad)
gs
fsub
fsubr
cld
adc
add
jecxz
push
in
xor
mov
iret
xchg
mov
lds
retf
sub
mov
scas
cmc
cdq
repz
fsubr
stos
sti
retf
push
xchg
mov
ja
sub
xchg
mov
(bad)
(bad)
mov
lock
out
lahf
mov
sub
test
add
jo
push
jp
dec
jb
cmps
mov
mov
add
push
int3
sbb
fcom
shl
or
and
out
inc
jbe
jle
and
push
mov
adc
jae
imul
(bad)
scas
(bad)
dec
lods
cdq
jle
sbb
dec
lahf
jp
jge
xor
and
addr16
cmp
loopne
shl
loopne
jp
mov
cmp
movq
cmp
xor
push
mov
xlat
popa
jbe
cmps
cs
movs
push
push
jo
inc
ror
rcl
pop
xor
push
(bad)
jp
jg
lds
int
enter
inc
ror
mov
add
pop
fs
cmps
outs
add
or
out
enter
cmp
mov
pop
jecxz
pop
ds
fndisi(8087
dec
pop
or
lock
fwait
hlt
ror
mov
pop
inc
or
pxor
cmps
lods
mov
adc
sahf
shl
inc
mov
push
mov
push
push
cmp
(bad)
sbb
mov
call
sbb
push
daa
lods
popf
sbb
mov
dec
sbb
mov
inc
loop
ins
test
hlt
pop
xchg
mov
adc
js
xchg
fprem
ficomp
jbe
add
test
fild
mov
retf
cmc
repz
in
cs
lea
xchg
fimul
xchg
out
into
mov
mov
and
mov
aam
cmps
dec
add
cli
inc
mov
pop
loope
push
mov
daa
or
push
jge
xor
sbb
inc
into
test
je
test
ja
sub
fnstcw
cs
pop
xchg
xor
cld
std
xchg
xor
int
jmp
mov
rol
xor
pusha
movs
or
sahf
mov
int
movs
or
(bad)
iret
lds
test
call
dec
js
pop
test
test
dec
jp
jne
sub
dec
lock
pop
jle
cmp
inc
jmp
mov
and
push
mov
mov
sbb
and
fnstsw
xchg
inc
sub
call
jg
imul
sub
popf
adc
lock
ja
es
pop
mov
cwde
mov
imul
mov
jmp
dec
stos
mov
lahf
(bad)
fcomp
fwait
pop
cmc
pop
push
shl
std
xor
out
sti
cmp
or
leave
pop
stos
mov
push
and
adc
in
xchg
sub
cmps
mov
mov
ror
push
adc
mov
sub
xor
gs
dec
jecxz
pop
stos
sbb
mov
push
xchg
push
add
ds
pop
pop
in
(bad)
push
xchg
out
xor
push
sub
add
sub
fcmovb
mov
sub
rcr
mov
cmps
lods
out
lds
mov
into
imul
xchg
jmp
pop
stos
mov
add
lahf
rol
movq
mov
pop
push
and
lock
leave
in
inc
push
arpl
add
fwait
arpl
jae
test
push
mov
xor
xor
push
dec
xchg
sbb
rcr
or
and
inc
xor
je
jbe
gs
pop
aaa
push
add
test
pop
jmp
xor
and
push
imul
sub
cmp
cmp
out
dec
stos
shr
sub
cmps
sub
push
repz
sub
mov
inc
pop
mov
add
pop
adc
cmp
daa
(bad)
repz
adc
(bad)
je
or
nop
aad
aad
lahf
fwait
sbb
hlt
loop
and
out
and
in
and
sub
in
dec
stos
loopne
mov
cmp
clc
sbb
mov
push
mov
xor
retf
add
(bad)
addr16
push
xchg
pop
mov
jo
mov
loopne
repnz
mov
add
jo
mov
push
iret
je
push
rcr
inc
retf
adc
sti
iret
or
mov
adc
mov
inc
push
cmc
(bad)
sub
mov
and
js
call
in
jl
cmps
xchg
bound
rcr
scas
sbb
test
mov
cmp
dec
sbb
and
xchg
mov
fsubr
cld
imul
xor
and
mov
sar
ret
add
inc
lods
ficom
adc
ror
fcomp
push
loope
xchg
mov
adc
call
mov
inc
mov
cmp
loop
push
add
mov
gs
cmps
inc
pop
mov
sbb
(bad)
int3
mov
ins
outs
push
and
pop
sahf
bound
sbb
pushf
sbb
mov
xor
xchg
and
jg
mov
or
cld
sub
mov
mov
lahf
cmp
scas
ds
outs
or
test
in
in
sub
loopne
jp
repnz
adc
shl
iret
add
xor
ret
xchg
jae
jl
ror
push
iret
ss
in
pop
std
and
out
sub
stos
mov
shl
jp
cmp
outs
sub
xchg
mov
in
repnz
lods
sub
add
inc
jae
int
xchg
js
mov
retf
jle
fsub
push
add
pop
pop
ret
push
dec
out
jmp
xor
and
stos
outs
call
ret
and
inc
xchg
iret
jne
mov
sbb
icebp
cwde
xor
nop
mov
sub
lods
into
out
adc
outs
xor
call
push
inc
cmp
fst
mov
(bad)
sbb
fld
mov
int3
mov
mov
popa
xor
sbb
push
mov
xchg
call
add
push
hlt
jmp
fldenv
inc
push
arpl
aad
fnstsw
nop
(bad)
mov
cmps
retf
dec
jl
inc
jecxz
inc
ja
jnp
retf
fidiv
adc
in
pusha
lea
jmp
sti
push
push
and
daa
sub
jmp
lods
stos
pop
(bad)
xor
add
adc
lock
call
rcr
xchg
rcr
mov
jmp
enter
sub
push
jecxz
xchg
icebp
cli
add
inc
push
fst
sbb
fsubr
pop
in
cli
jno
dec
es
jmp
stos
mov
mov
daa
sub
fiadd
iret
xchg
and
ja
dec
or
aaa
or
shl
scas
mov
inc
pop
mov
fist
ror
dec
adc
xlat
dec
sub
rol
fmul
push
in
sub
fsub
cwde
xor
inc
test
int
adc
mov
lds
(bad)
lods
sub
adc
push
test
outs
xchg
mov
sbb
jno
test
(bad)
jmp
pusha
lea
es
xchg
jb
jg
stos
les
xchg
dec
(bad)
ins
mov
fnstsw
pushf
in
es
and
add
cmp
adc
in
add
mov
dec
adc
popaw
sti
jge
push
loope
int
inc
mov
outs
ja
(bad)
mov
nop
xchg
push
lea
sub
out
xchg
dec
sbb
xchg
jmp
dec
imul
frstor
push
ficomp
jmp
into
cmp
dec
mov
and
mov
push
sar
jae
les
movs
pushf
(bad)
dec
(bad)
pusha
ror
pop
mov
pop
push
cmps
pop
daa
or
mov
imul
in
add
ficom
or
mov
pop
test
jp
ror
xor
repnz
mov
xor
sub
mov
push
dec
test
inc
sar
arpl
pop
ds
sbb
jg
mov
int
add
cwde
mov
dec
(bad)
sti
nop
mov
aaa
xchg
ds
repnz
jns
ret
cmp
and
inc
push
aas
in
enter
push
sti
pop
adc
add
sub
inc
add
xor
inc
add
jg
or
stc
enter
adc
pusha
dec
outs
adc
mov
sbb
bound
and
jo
jbe
pop
lods
and
stos
adc
and
cmp
mov
fcomp
cmp
and
xor
add
dec
sti
fs
ja
es
lahf
push
inc
jl
xchg
xchg
leave
and
shl
icebp
std
add
sbb
addr16
sbb
and
repz
sar
stc
pop
arpl
mov
dec
scas
dec
es
(bad)
ficom
and
xchg
call
not
jne
bound
es
ret
mov
repnz
mov
ins
int
mov
int3
aad
(bad)
(bad)
clc
arpl
add
popf
shl
add
inc
add
mov
mov
jp
adc
rcr
dec
fild
push
add
ja
jo
sahf
mov
test
js
xchg
call
int3
dec
jnp
add
lds
dec
mov
hlt
push
jmp
je
clc
arpl
daa
and
add
push
sbb
xchg
jnp
pop
mov
movs
add
(bad)
ins
pop
dec
ret
mov
stos
jae
add
pop
iret
nop
fnsave
cmp
out
sub
or
inc
push
inc
sub
sub
in
add
jmp
rcr
mov
repz
mov
pusha
cli
cmc
jg
je
cmp
repz
arpl
call
fstp
mov
iret
retf
mov
mov
add
in
or
sub
fld
loope
sti
das
out
mov
inc
jg
lea
sub
sub
leave
shl
inc
clc
loope
push
lahf
mov
sbb
xchg
in
mov
mov
mov
aas
adc
pop
loope
retf
mov
repz
push
cmp
cli
mov
mul
ins
xchg
ret
(bad)
jmp
call
retf
addps
out
xchg
test
cmps
sbb
ds
xchg
fdiv
or
int3
iret
cmps
sub
xchg
xor
pop
sahf
inc
shl
push
xor
mov
dec
int3
and
xor
(bad)
pop
in
outs
sub
adc
lahf
jl
push
inc
in
push
mov
ffreep
sub
and
pushf
jle
repz
cmp
cmps
cmps
imul
cmp
popa
(bad)
push
(bad)
iret
pop
cmps
call
mov
ffree
xor
mov
push
retf
and
jg
or
loope
in
dec
outs
retf
mov
or
mov
lock
mov
or
std
jnp
sub
dec
ror
push
dec
(bad)
loopne
jg
adc
push
mov
fwait
sub
push
push
pop
shl
out
pop
ret
and
ins
jge
ret
inc
in
xchg
bound
xor
cmp
mov
cmc
mov
sub
adc
jmp
push
sub
mov
pop
mov
int3
xchg
sub
add
inc
jmp
add
sar
mov
dec
mov
sub
jp
fsubr
popa
and
mov
xor
cmc
icebp
and
xchg
popa
cmps
push
inc
ret
jae
out
cmc
inc
(bad)
and
push
inc
loop
xchg
out
(bad)
mov
mov
jmp
lods
or
push
cmps
loopne
call
adc
push
inc
pop
jl
fdivr
jp
ins
jbe
dec
pop
out
add
rcr
cli
mov
dec
add
or
jae
mov
scas
loope
mov
jg
push
das
jo
ins
cmp
in
and
in
sbb
mov
lods
xlat
data16
maskmovq
sub
hlt
mov
in
mov
lahf
inc
stos
pop
sbb
fmul
xchg
outs
ret
shr
xchg
(bad)
movs
enter
mov
sub
add
aad
ins
aam
xchg
(bad)
icebp
loope
jecxz
add
xor
stos
stos
enter
sub
iret
and
push
add
pop
pushf
push
scas
test
mov
and
lods
mov
stos
icebp
cld
pop
xor
retf
xchg
and
inc
xor
(bad)
lock
jl
fnstsw
movs
cdq
loopne
add
mov
mov
mov
xchg
pop
mov
push
sbb
cmp
jno
mov
sbb
dec
xchg
aaa
loope
jae
or
imul
dec
xor
mov
mov
sub
mov
icebp
or
mov
into
lahf
mov
inc
mov
inc
test
cmp
push
in
lahf
enter
fcomi
cmp
sub
bound
sub
mov
es
(bad)
ss
dec
push
xchg
(bad)
popf
not
leave
jne
cmp
jae
xor
repnz
adc
stc
mov
push
(bad)
(bad)
cwde
in
jmp
mov
jle
add
in
(bad)
cli
ja
out
mov
loopne
shr
cdq
mov
cmp
inc
mov
sbb
in
push
nop
dec
mov
mov
lods
push
xor
xchg
mov
cmp
mov
push
inc
mov
jecxz
aam
xor
bound
mov
mov
mov
fist
aas
pop
add
sub
cmp
popa
pushf
xchg
loope
int3
sub
mov
pop
cmp
loopne
pop
adc
aam
arpl
(bad)
inc
call
loop
jns
and
jb
sub
cmp
inc
push
xchg
in
aam
mov
daa
es
push
xchg
push
lahf
imul
mov
int3
out
add
mov
int3
ja
js
and
xchg
sar
addr16
mul
lds
ins
xor
adc
pushf
pop
cmp
not
test
test
inc
in
stos
pusha
mov
mov
xchg
je
sbb
pusha
mov
ins
mov
sbb
inc
push
sbb
data16
test
mov
aaa
sbb
rol
shl
ror
push
adc
mov
ret
(bad)
outs
rol
shl
mov
dec
sbb
mov
pop
jecxz
sti
mov
jnp
(bad)
sahf
cmps
sub
push
inc
inc
cmp
pop
in
in
mov
xchg
xchg
aaa
int
mov
es
ins
in
push
je
push
sbb
sub
(bad)
and
fcomp
inc
out
mov
nop
mov
cli
sbb
and
sar
imul
xchg
jmp
sub
int
sti
mov
lock
rol
push
movs
xor
je
xchg
jbe
mov
fild
adc
les
imul
cli
sub
cmc
fs
fdiv
loopne
mov
loopne
pop
jnp
mov
xchg
add
popf
shr
out
sub
clc
sub
inc
mov
repz
inc
out
arpl
test
mov
mov
clc
adc
and
add
jmp
mov
inc
cdq
aam
pop
or
add
inc
(bad)
popf
and
shr
inc
icebp
(bad)
push
jmp
mov
data16
push
push
mov
test
and
movs
mov
cmp
add
test
xchg
jae
loope
sub
dec
je
popa
ja
or
push
lds
mov
sub
mov
outs
and
jno
mov
bound
jecxz
das
mov
push
cmp
call
mov
xor
scas
lea
jbe
jae
mov
loopne
xchg
inc
movlps
jmp
cmps
mov
lds
inc
xor
stos
add
fs
mov
or
adc
sub
push
cmp
fsubrp
sbb
pop
sti
js
mov
or
adc
lea
jo
jle
int3
pop
loope
pop
mov
outs
shl
mov
hlt
adc
add
xor
inc
pop
stos
aaa
aad
push
add
inc
dec
mov
cli
dec
int
call
test
xchg
push
jg
sub
scas
mov
sub
push
mov
pcmpeqw
xchg
cli
aaa
sbb
repz
call
mov
adc
sti
in
mov
push
jnp
and
cmp
nop
fs
aaa
dec
mov
aas
pusha
(bad)
pop
push
xor
pop
adc
add
or
sbb
js
ja
dec
push
loopne
ja
outs
icebp
dec
mov
mov
dec
shl
out
std
push
jne
mov
loopne
inc
(bad)
lods
jp
sti
std
inc
pop
imul
sub
sub
dec
push
jae
adc
pop
retf
bound
jno
std
sar
(bad)
dec
mov
add
cmps
xchg
mov
push
lds
mov
adc
jnp
test
add
jbe
call
ret
hlt
mov
add
call
daa
fs
cwde
adc
pop
pop
sti
xchg
test
jmp
pop
(bad)
aas
xchg
cli
jmp
gs
fld
sbb
inc
sbb
mov
adc
mov
pop
xchg
adc
call
pusha
lods
fisttp
fsub
and
cmc
stos
(bad)
aam
adc
ins
mov
mov
(bad)
in
(bad)
and
add
fisubr
loopne
rcr
js
cmp
adc
add
mov
test
push
xor
test
adc
dec
rcr
in
sahf
icebp
fsub
mov
movs
leave
mov
xchg
pushf
lea
dec
mov
repnz
sub
sbb
sbb
mov
retf
pop
xchg
adc
dec
dec
jmp
rcl
cmp
xchg
js
mov
jp
cmp
adc
scas
shl
int3
es
sbb
mov
dec
cdq
pop
cmc
jmp
popf
dec
push
test
push
sbb
mov
ss
jns
mov
punpckhwd
repnz
adc
pop
sub
adc
popf
or
(bad)
mov
fwait
pop
xlat
xlat
mov
jnp
jge
shl
sub
mov
popf
or
fisubr
push
mov
ja
inc
adc
fidiv
lahf
sub
cmp
pop
fistp
xor
stos
das
test
cmp
cmp
jnp
mov
xchg
aam
jle
xchg
lods
jbe
xchg
xchg
add
repnz
pop
push
retf
pop
mov
and
or
sub
adc
dec
jne
dec
xlat
jo
cmp
je
cmp
push
lea
pop
repnz
dec
fcomp
fstp
or
jmp
call
out
sub
sub
adc
je
cmps
jno
push
cmp
pop
jl
push
dec
(bad)
sub
adc
mov
or
shr
imul
stos
retf
sub
rcr
jg
aad
xor
cmc
pop
test
inc
in
jl
or
cmc
add
mov
in
xor
sub
fld
and
out
add
push
pusha
pop
test
cmp
push
push
shl
fist
cmp
es
fimul
mov
jl
popa
jecxz
mov
(bad)
pop
in
inc
cmovnp
mov
call
mov
pop
(bad)
(bad)
mov
mov
out
cmp
sub
sbb
ror
fcom
fild
js
add
out
jmp
lock
test
inc
xor
jle
mov
cmp
push
scas
icebp
cmc
retf
and
jg
mov
mov
jae
stos
clc
test
imul
ins
sub
add
xchg
adc
add
rol
inc
repnz
xor
push
lods
dec
das
cmp
ror
imul
leave
xor
push
xchg
xlat
in
inc
or
and
mov
arpl
cmp
jecxz
call
call
ins
not
xchg
lods
(bad)
ins
mov
add
fstp
jae
js
mov
mul
or
pop
cli
pop
xchg
call
arpl
fs
push
es
mov
movs
clc
ror
add
(bad)
jmp
or
lods
push
fdiv
outs
and
cmp
jae
dec
pop
je
mov
(bad)
fstp
ror
inc
mov
test
loope
push
push
mov
or
xor
cmp
out
cmps
mov
in
push
ins
dec
js
push
cmp
pop
mov
dec
neg
pushf
sub
es
mov
fisttp
sub
jle
or
pop
(bad)
push
es
ss
(bad)
xchg
bound
xchg
xchg
push
fadd
js
and
cmp
sbb
dec
jbe
xor
adc
rcl
dec
sahf
(bad)
mov
adc
icebp
mov
pop
add
icebp
pop
dec
stc
fidiv
xchg
sub
sub
jmp
xchg
test
or
or
cmps
dec
jle
pop
into
cmc
pop
cld
movs
jg
in
mov
push
mov
int
xor
sbb
mov
imul
icebp
xchg
stos
into
jbe
dec
retf
jecxz
aam
mov
and
mov
jmp
test
pop
lea
mov
pop
pop
cmp
jl
xor
lea
mov
push
ds
setb
pop
jne
push
das
es
outs
lea
shr
leave
xchg
idiv
mov
cwde
hlt
sbb
fidivr
iret
outs
outs
cs
sahf
adc
hlt
dec
mov
rcr
hlt
xchg
push
jge
inc
push
es
inc
test
js
(bad)
loop
add
mov
adc
inc
and
bound
inc
(bad)
nop
ss
inc
push
pushf
lods
mov
push
push
test
rol
lahf
sbb
out
jmp
test
ins
comiss
adc
mov
sub
push
fcom
in
call
and
cmp
out
rol
dec
sti
push
(bad)
ror
hlt
adc
jecxz
pop
xchg
out
in
gs
ret
hlt
pop
cs
lahf
dec
loope
push
daa
mov
shl
or
or
icebp
push
push
fstp
test
les
adc
cld
pop
push
fucomi
iret
fstp
retf
loop
jns
jmp
bound
fsub
sub
or
pop
push
add
ins
jb
shr
out
fcom
push
lods
das
ins
js
and
jb
or
jecxz
cmp
dec
iret
mov
sbb
shr
xchg
xor
inc
adc
or
mov
and
pop
nop
mov
sbb
mov
mov
inc
mov
test
int
cmp
push
fwait
sub
mov
mov
inc
adc
cdq
pop
(bad)
push
out
(bad)
mov
sbb
jbe
outs
jnp
pusha
sub
iret
mov
push
push
lods
sbb
sahf
lock
aas
sbb
or
sub
in
in
icebp
les
test
jmp
stc
mov
adc
sub
xchg
or
ds
jno
jp
loop
or
mov
mov
ficomp
inc
mov
inc
loop
xchg
lahf
cwde
pop
push
cmp
mov
cwde
pop
push
test
cmp
nop
sub
lahf
pusha
dec
xchg
iret
mov
jo
push
cld
push
fcomp
xchg
pushf
xor
dec
xchg
gs
push
rcr
and
fwait
scas
jmp
inc
ins
rcl
dec
into
sbb
xor
scas
dec
(bad)
or
mov
jb
gs
loop
or
imul
and
cmp
pop
mov
jl
sbb
out
fbstp
push
cwde
lods
push
dec
neg
xor
scas
bound
out
xchg
add
jo
cmc
mov
jno
inc
and
rcr
nop
add
outs
les
in
test
sbb
push
mov
rcl
les
mov
mov
adc
jnp
loopne
push
mov
fadd
daa
shl
loope
iret
(bad)
push
dec
fwait
mov
retf
xchg
cmp
pop
pop
fnstenv
inc
out
dec
fisttp
mov
adc
jmp
(bad)
sbb
repz
mov
addr16
ret
jae
sti
and
pushf
enter
adc
pushf
xlat
mov
jp
mov
lods
xchg
dec
inc
arpl
sbb
add
add
jns
lahf
or
xchg
test
adc
fist
in
out
mov
cli
into
fisub
dec
and
clc
adc
(bad)
in
retf
call
dec
clc
das
test
jmp
push
dec
cwde
push
rcl
add
out
out
aaa
push
jmp
mov
out
out
fwait
sbb
xor
jmp
jbe
ret
add
imul
fcomp
jmp
idiv
inc
jg
sbb
icebp
int3
fdiv
outs
ss
jle
stos
bound
or
add
sti
sahf
icebp
sbb
jmp
(bad)
or
sub
sbb
mov
imul
iret
cmp
or
in
leave
and
aam
cs
(bad)
jns
add
push
mov
sbb
pop
pusha
pop
xchg
sub
rcr
mov
push
jmp
sub
loope
inc
cmps
out
int
les
sub
test
mov
(bad)
mov
cdq
data16
add
shr
cmp
xchg
enter
mov
aam
pop
mul
jp
shl
cmp
test
adc
add
xchg
rol
jle
push
or
inc
inc
shl
mov
inc
adc
mov
rcr
ins
daa
fild
xor
pop
ret
mov
jb
add
addr16
idiv
xchg
idiv
pushf
push
rcr
or
into
mov
cmps
arpl
outs
mov
add
jmp
mov
es
jae
jle
pop
inc
sbb
outs
pushf
mov
pop
mov
popa
sub
(bad)
push
les
mov
test
mov
mov
dec
xchg
jle
mov
jbe
xor
dec
shl
neg
adc
mov
aas
adc
div
stos
call
xor
icebp
sbb
bound
add
inc
sub
mov
mov
or
out
fcomp
and
in
stos
sahf
mov
rcl
cwde
mov
jp
inc
inc
push
stos
call
cmps
add
or
sub
imul
adc
push
test
or
ret
jbe
jb
and
pop
aam
dec
enter
mov
movs
das
cmc
in
jp
add
mov
das
pop
je
repnz
mov
hlt
mov
loop
movs
adc
xchg
es
or
dec
std
fild
mov
fdivr
es
xor
mov
or
into
pushf
pushf
mov
jno
rcl
cmc
dec
js
das
push
test
dec
loope
push
xor
push
mov
cld
mov
cdq
push
mov
jg
xchg
fbld
fild
xor
mov
in
inc
cmp
call
sub
xchg
and
xor
pop
inc
sbb
cmps
fs
xchg
sub
out
xchg
sbb
sub
mov
call
mov
mov
mov
out
mov
fcmovu
in
leave
inc
adc
mov
xchg
fsubp
push
adc
imul
shl
(bad)
pop
xor
pop
cmp
push
aad
gs
out
push
aad
ficom
xor
xor
mov
je
sbb
cmp
jge
dec
call
test
mov
outs
push
in
clc
jmp
mov
jb
push
mov
fs
ds
in
pop
fs
sbb
cmp
add
cs
scas
push
fsubr
repz
mov
jl
jns
ins
nop
jecxz
inc
cmp
xor
enter
rcr
mov
and
push
cmp
mov
mov
mov
mov
mov
xchg
cwde
push
dec
std
fsincos
mov
dec
sbb
mov
lock
xor
dec
mov
xlat
in
retf
pop
jmp
fst
adc
rcl
inc
dec
call
inc
dec
fst
(bad)
(bad)
add
inc
cmp
fild
jl
(bad)
out
xchg
cs
mov
outs
fdivr
arpl
inc
cs
lahf
loopne
inc
xchg
call
adc
push
movs
mov
dec
inc
(bad)
mov
mov
add
mov
pop
addr16
xor
loope
inc
in
dec
push
ret
adc
push
sbb
fldcw
cmp
adc
fidiv
sar
or
sbb
jo
test
stos
or
loop
push
jecxz
push
aas
lahf
inc
push
mov
shr
retf
addr16
push
cmp
aas
sbb
xlat
sar
push
sbb
jno
ret
jb
imul
pop
call
ins
bound
fwait
dec
into
inc
ss
jne
pop
push
mov
not
xor
mov
inc
mov
or
mov
sbb
pop
mov
fnstenv
inc
mov
mov
mov
(bad)
pop
in
iret
pop
shl
sub
mov
icebp
cmc
int
shr
or
in
ret
pop
(bad)
in
xchg
push
cmps
mov
mov
mov
sub
(bad)
xor
stc
xlat
ficom
push
mov
fstp
dec
fldenv
sbb
xchg
sbb
bound
pop
mov
adc
xlat
lea
or
outs
adc
ss
mov
and
mov
mov
inc
(bad)
mov
mov
aam
adc
xchg
or
sbb
cmps
movs
scas
jbe
call
(bad)
jbe
cmp
icebp
sbb
out
mov
bound
fild
out
add
jmp
loopne
dec
xchg
test
push
sub
xchg
stos
out
pop
xchg
nop
lea
add
lods
fwait
push
aad
(bad)
and
movs
retf
sbb
idiv
pop
mov
(bad)
ror
mov
jecxz
stos
jge
call
and
pop
jnp
sbb
jle
fidiv
mov
nop
cli
fbld
lock
test
jae
mov
nop
inc
jmp
out
js
shr
js
test
push
sub
dec
std
(bad)
pop
nop
mov
shl
adc
test
inc
cli
inc
push
mov
add
dec
leave
adc
loope
pop
cmps
cwde
int3
test
popf
xchg
add
dec
inc
push
loope
mov
sub
cli
xchg
sub
aad
inc
scas
cmp
push
rol
mov
hlt
ret
ror
outs
dec
cmp
popf
jns
add
xor
cdq
ret
jae
int
jge
jmp
mov
or
inc
test
or
add
mov
jg
push
push
cmp
pop
push
push
dec
cmp
fldcw
mov
dec
jmp
mov
sahf
test
push
pop
das
push
cmp
inc
sbb
mov
inc
sub
out
cmp
lds
iret
mov
pop
push
pop
push
dec
sub
outs
pop
inc
mov
nop
icebp
inc
es
setno
and
pop
dec
out
cmc
pop
xor
dec
jns
jo
das
mov
je
scas
push
xchg
mov
pop
jmp
xchg
jne
push
(bad)
mov
lods
dec
cmps
or
mov
mov
mov
clc
jl
jnp
adc
pop
das
push
pop
in
cmp
inc
(bad)
pop
in
adc
test
push
test
dec
ret
fsub
push
xchg
mov
or
mov
fmul
xchg
int3
push
dec
ret
scas
sub
mov
and
daa
inc
cli
xchg
pop
lock
jns
cmp
dec
in
jmp
retf
iret
mov
enter
cmp
lock
movs
mov
adc
mov
ss
jg
inc
or
mov
sar
push
xchg
jno
call
in
pushf
jnp
bound
dec
push
test
fisubr
in
xor
sbb
imul
xchg
sub
jg
pop
aaa
scas
sub
jge
sbb
mov
fs
mov
xlat
jno
add
shr
out
and
js
cmp
inc
pop
push
js
jecxz
push
dec
mov
or
xchg
push
es
pusha
push
mov
inc
arpl
dec
adc
pushf
rcl
call
adc
je
fwait
jge
jnp
stos
inc
mov
dec
repz
jno
push
ret
pusha
jno
icebp
mov
sub
jecxz
adc
mov
sub
outs
cmps
rcl
pop
retf
out
pusha
mov
mov
mov
pop
jl
adc
imul
and
lahf
out
cmp
je
sbb
mov
add
push
xchg
push
push
xchg
mov
push
outs
push
pop
push
add
jmp
scas
int3
jb
pushf
xchg
dec
fild
ins
movs
int3
and
add
mov
jb
shl
push
or
sbb
(bad)
mov
and
loope
xor
pop
retf
pushf
test
out
push
push
mov
or
xor
push
retf
out
add
and
and
hlt
mov
sbb
lahf
jle
stc
xchg
arpl
lahf
sbb
or
int3
xchg
and
sub
stos
mov
and
sbb
fdivr
movs
ins
retf
out
imul
add
jl
in
xchg
xchg
out
inc
and
fmul
jmp
out
xor
jg
adc
sbb
mov
ds
xchg
hlt
pusha
retf
mov
fbstp
test
jnp
jns
and
(bad)
mov
scas
or
dec
(bad)
jle
mov
(bad)
rol
pop
mov
(bad)
shl
and
sti
loopne
jmp
repnz
push
push
test
or
push
nop
lahf
mov
add
jns
jns
stos
mov
pop
dec
xchg
aam
into
mov
(bad)
sub
and
(bad)
cmp
and
jmp
adc
push
aas
push
mov
aas
adc
addr16
sahf
sti
cmc
mov
arpl
xchg
fimul
xchg
sbb
cmp
in
test
cmp
xchg
mov
fwait
push
xor
adc
call
scas
ja
lods
jmp
mul
mov
daa
mov
jo
cs
pop
(bad)
push
sbb
imul
test
ins
es
fcom
in
(bad)
mov
add
mov
leave
and
jmp
jecxz
dec
les
movs
or
cmp
test
ins
arpl
push
jne
and
mov
jg
mov
in
mov
pop
adc
lock
mov
jge
xchg
scas
mov
dec
cwde
aaa
fstp
push
shl
push
sbb
sbb
dec
pop
xchg
mov
jnp
xlat
cmps
xor
push
mov
fist
push
movs
add
and
xchg
mov
pop
add
es
push
fwait
pop
mov
xlat
pusha
or
loopne
ins
inc
leave
jg
scas
repnz
popa
jle
cmp
fnsave
add
test
or
inc
pop
jle
(bad)
mov
xchg
pushf
add
xchg
lods
and
movs
call
xor
outs
scas
call
rcl
sbb
outs
mov
sub
cmp
arpl
adc
pop
ds
inc
inc
xchg
add
nop
sti
adc
rcl
in
jl
sbb
pop
enter
inc
fstp
pop
jp
mov
mov
jae
jge
xor
jp
les
sub
push
cwde
mov
mov
das
loop
push
daa
or
jp
cwde
cmp
cs
iret
je
clc
cmps
xchg
sub
scas
out
imul
sub
pop
in
enter
push
push
arpl
pop
ret
cmps
sub
push
ret
adc
jg
outs
nop
in
lods
add
stos
das
sbb
mov
dec
ins
les
out
(bad)
out
rcl
xchg
scas
jmp
or
or
cld
nop
not
inc
cmp
ret
sub
add
js
cmps
xchg
inc
mov
call
lds
mov
dec
mov
(bad)
mov
into
and
enter
test
stos
xlat
sbb
pusha
or
loopne
xor
mov
(bad)
push
xlat
add
iret
xor
dec
sbb
jne
add
push
cmp
ret
mov
jns
xchg
ret
jae
cmp
outs
lds
push
sbb
adc
inc
imul
sbb
cwde
xchg
xchg
cld
outs
pop
or
addr16
out
div
hlt
jl
push
(bad)
call
lods
cmp
mov
retf
cwde
inc
daa
inc
(bad)
push
mov
outs
mov
cvtdq2ps
sbb
push
call
nop
stos
push
mov
dec
data16
pop
fstp
fwait
imul
mov
loop
xor
ja
inc
sub
jne
cld
push
jae
cli
and
daa
loopne
jb
sbb
stc
mov
jle
push
xchg
pop
add
retf
aad
in
and
pop
sbb
add
int
retf
sub
pop
add
cmps
add
push
jmp
shl
iret
stos
adc
fld
jnp
sub
adc
xchg
fldenv
or
ret
xchg
int
aas
push
fisubr
fs
lods
out
inc
pop
and
fist
iret
ret
ins
jecxz
mov
dec
add
loop
call
ret
out
loop
mov
sub
pop
daa
loopne
dec
fsubr
mov
mov
sbb
jg
cli
inc
sub
ret
jg
popa
push
stos
adc
std
cs
inc
cmp
popw
mov
data16
and
jp
mov
or
jmp
add
loope
xchg
stos
mov
mov
iret
xor
mov
outs
mov
mov
push
ret
daa
mov
ins
ds
mov
retf
rol
rcl
gs
pop
jns
add
out
dec
in
hlt
cli
sbb
cmp
out
in
hlt
sbb
scas
xor
inc
ins
fisttp
add
sub
mov
(bad)
cmp
mov
mov
xor
push
nop
outs
ins
lock
mov
outs
jle
cmp
data16
rcr
int
sbb
and
dec
inc
ds
aad
repz
das
scas
cmp
inc
mov
cmp
sar
adc
cmp
adc
imul
xor
int
sbb
mov
adc
imul
aad
(bad)
mov
out
mov
enter
rcr
out
fsubr
and
push
add
imul
mov
adc
and
icebp
xchg
ret
sub
and
fdivr
and
cld
loop
mov
pop
sub
dec
cmp
cmp
dec
or
in
or
xchg
fistp
jnp
mov
std
push
jmp
add
psrad
or
popf
out
retf
lock
pop
jo
xor
mov
leave
inc
cdq
xchg
pop
mov
inc
xchg
mov
dec
sub
icebp
sbb
cmp
sbb
cwd
or
push
das
movs
push
std
add
inc
xor
movd
jns
fadd
mov
mov
inc
scas
popf
clc
repz
mul
cmp
ror
xor
test
xchg
(bad)
push
or
adc
clc
mov
xor
mov
out
movs
in
xor
inc
es
or
mov
imul
mov
fnstsw
imul
stc
mov
sub
(bad)
push
push
out
jmp
pop
dec
fsubp
mov
icebp
push
fbstp
aas
and
inc
loope
into
cmp
mov
ss
popf
adc
add
sbb
ss
and
jmp
pop
inc
sqrtps
mov
xor
jg
mov
call
xchg
sbb
dec
push
pop
mov
ins
hlt
outs
dec
aam
fcmovu
sbb
and
pop
adc
lea
inc
stos
and
scas
call
popa
shl
xchg
je
pop
fucomp
adc
nop
fst
movs
cmovle
xor
pop
mov
out
adc
ror
retf
ds
push
pop
repnz
xor
setnp
maskmovq
test
xor
inc
cmp
call
lock
lods
(bad)
adc
ins
push
dec
xchg
cmp
and
repz
jns
cli
ds
ss
xlat
in
dec
in
push
and
dec
push
(bad)
int
mov
cmp
ror
aaa
scas
fst
js
inc
loopne
std
in
push
test
les
ins
cdq
xor
(bad)
inc
pop
(bad)
fadd
dec
inc
jle
jbe
shl
sahf
(bad)
stos
jmp
xchg
in
out
adc
in
sbb
mov
cmps
sub
ins
nop
push
pop
mov
call
mov
leave
cmp
pop
sbb
xor
inc
inc
mov
jmp
(bad)
cmp
idiv
push
cmp
mov
stos
xchg
sar
fisttp
rol
popf
and
inc
sbb
mov
jb
jno
int3
mov
loopne
fistp
int
lds
pop
jmp
sti
popf
sbb
xor
jp
ret
add
loopne
frstor
add
mov
and
cld
dec
out
or
fucomip
enter
stos
iret
jl
jb
xchg
pop
and
pop
push
mov
shl
mov
dec
or
pop
icebp
jl
push
stos
leave
arpl
ret
adc
mov
pop
xchg
inc
add
sbb
ds
xchg
push
mov
shr
dec
push
mov
lahf
xor
or
jmp
mov
pop
retf
test
pop
xchg
inc
push
loopne
mov
in
or
xchg
xchg
movs
pop
jnp
stc
mov
xlat
jmp
inc
cmp
pop
push
out
idiv
cwde
push
and
push
daa
fld
sbb
jne
or
dec
fiadd
outs
add
and
(bad)
cmc
xor
repnz
pop
xor
fldenv
ret
(bad)
mov
movs
sbb
mov
adc
repz
lods
std
or
and
add
nop
pop
setp
mov
jg
leave
sbb
pop
data16
cmp
add
cmp
movs
mov
xchg
jge
shl
push
adc
inc
jmp
or
call
mov
stc
mov
scas
adc
pop
jp
pop
mov
fldenv
dec
scas
ret
int
popf
test
iret
repnz
inc
repz
pop
sti
(bad)
xchg
ss
in
pop
and
mov
out
pop
stos
dec
ins
inc
push
or
dec
adc
xor
sbb
ret
inc
sub
lds
or
lds
dec
jle
imul
das
popa
shr
inc
ret
test
push
cli
inc
push
fdivp
pop
jg
(bad)
mov
sub
je
sbb
or
sar
xchg
retf
push
aaa
sti
fild
and
ret
into
test
imul
(bad)
das
jecxz
adc
push
fstp
rol
icebp
xor
test
mov
inc
lods
leave
push
loopne
sub
inc
inc
aad
ds
dec
inc
sub
aaa
neg
and
xor
xor
sti
mov
js
ss
adc
test
cmp
in
retf
mov
pushf
test
aaa
adc
lods
dec
aas
adc
mov
leave
mov
out
and
cmps
inc
int
retf
adc
jp
dec
or
sbb
cmc
pop
mov
cwde
ror
mov
add
jnp
pop
ret
and
mov
sub
(bad)
call
pop
test
popa
es
and
or
mov
xor
enter
xchg
xchg
dec
lea
(bad)
(bad)
dec
inc
cwde
out
and
repz
mov
setb
inc
sbb
cmp
push
xchg
push
ins
hlt
outs
inc
xor
int3
popa
and
jl
push
push
test
dec
pop
mov
loop
data16
enter
in
push
add
clc
adc
out
scas
push
mov
lods
shl
push
ins
inc
jb
ret
jmp
out
call
adc
mov
xchg
call
popf
js
mov
sar
cmp
dec
ja
pop
fwait
and
xlat
imul
dec
nop
pop
ins
and
add
sti
out
xor
pop
cdq
mov
dec
in
mov
jb
jnp
(bad)
jle
push
or
mov
ss
xchg
mov
scas
je
dec
adc
or
mov
std
daa
jnp
cwde
and
imul
cmp
scas
mov
outs
call
adc
mov
cmp
pop
js
ror
retf
scas
repnz
test
pop
stos
ds
xchg
inc
pop
xchg
fwait
mov
dec
div
les
add
adc
addr16
(bad)
iret
ins
jnp
inc
(bad)
and
push
hlt
xor
add
std
cwde
enter
mov
pusha
cmp
jecxz
dec
cmp
test
cmovge
neg
or
xchg
xchg
and
dec
jmp
stc
data16
sahf
jb
cmc
into
xchg
xchg
mov
xlat
xor
push
push
jns
gs
pop
or
outs
xor
xor
ins
ret
outs
mov
dec
aad
inc
mov
int
or
mov
repnz
jle
and
xor
adc
ins
sbb
hlt
outs
ret
adc
lods
arpl
arpl
xor
idiv
and
cmp
icebp
sbb
fsubr
ja
cmp
mov
scas
mov
dec
mov
clc
sbb
mov
jbe
adc
fiadd
sub
enter
cmp
sti
ins
aaa
(bad)
jmp
popa
pushf
xchg
ret
cmp
stos
inc
das
jno
or
and
jp
dec
ds
cmc
imul
(bad)
cmp
int
jmp
fwait
nop
sahf
bound
mov
xor
cmp
add
call
pop
stos
fadd
inc
xchg
xchg
pusha
repnz
ins
sub
cmc
or
sbb
mov
fld
imul
mov
push
adc
xor
adc
xor
popf
das
aad
xor
xchg
test
mov
sbb
(bad)
sub
push
jae
mov
inc
dec
xor
and
jne
jb
sub
adc
iret
test
and
call
mov
imul
(bad)
iret
xchg
xor
repnz
mov
and
inc
inc
jmp
test
fcmovbe
popa
adc
dec
or
imul
sar
inc
test
es
retf
(bad)
push
scas
icebp
xlat
mov
push
pop
mov
pop
xchg
mov
bound
sub
jns
aas
sbb
pop
cld
mov
sub
repz
icebp
sar
aad
push
aas
addr16
inc
fld
xchg
ror
add
mov
adc
imul
sub
jmp
je
inc
mov
cmp
ss
test
inc
jno
in
and
push
adc
addr16
fs
call
addr16
fcom
sub
cmps
xchg
cmp
stc
mov
add
cwde
adc
cmc
test
inc
gs
push
mov
repnz
ins
jp
inc
cmp
jnp
stos
jle
jmp
push
test
fcomip
icebp
ror
sbb
mov
dec
inc
loop
jb
push
out
mov
jp
out
mov
scas
pushf
aaa
icebp
lods
retf
sub
(bad)
das
rcl
fcom
adc
mov
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
adc
inc
push
in
mov
xor
jne
jp
sbb
mov
sahf
cmp
xchg
call
and
lea
ret
jbe
or
cld
cdq
out
loope
xchg
icebp
mov
and
enter
mov
push
shl
push
popf
inc
push
sub
hlt
and
push
ret
push
jo
dec
or
and
cmc
out
mov
mov
out
mov
daa
mov
cmp
xchg
jne
addr16
loop
lea
outs
push
or
pushf
in
gs
inc
rcl
pop
cld
add
mov
hlt
adc
mov
popf
xor
pop
mov
out
sbb
push
mov
cld
mov
into
out
fs
fwait
xor
sbb
xor
bound
fwait
jmp
cwde
mov
pop
mov
pop
(bad)
shr
xor
sbb
or
call
pushf
aas
jbe
mov
cwde
push
inc
dec
outs
scas
jp
dec
ins
fucom
or
or
cmps
mov
or
(bad)
cs
push
pop
pop
mov
hlt
mov
in
in
jecxz
dec
repz
mov
pop
test
repz
sub
adc
call
mov
aas
push
int
adc
dec
jmp
cld
iret
jmp
lea
jo
mov
neg
out
fmul
call
pop
inc
popf
cmp
xor
ficom
das
aaa
xor
xchg
sub
mov
sbb
sub
mov
mov
in
cmp
dec
in
mov
ss
sbb
ret
in
pop
ficom
jle
add
aad
(bad)
adc
es
sar
mov
fimul
out
add
mov
stos
aad
sbb
iret
push
nop
adc
das
pop
or
xchg
sahf
mov
std
pop
sbb
jle
cld
out
out
push
js
mov
mov
in
mov
repnz
clc
(bad)
sub
cmp
test
xor
jmp
sub
adc
xchg
iret
xlat
pop
ficom
adc
xchg
sub
fst
daa
scas
and
in
mov
dec
and
adc
mov
loope
xor
sub
int
les
cmp
and
out
addr16
std
iret
test
mov
mov
repz
mov
(bad)
in
mov
minps
push
or
xchg
arpl
pop
mov
sbb
pop
fiadd
clc
cmp
push
rol
test
loopne
xchg
mov
cmp
(bad)
hlt
jl
cwde
repnz
es
cli
adc
aas
in
mov
push
pop
xchg
xor
jae
sahf
popf
ja
cmp
ficomp
fadd
into
sub
xor
cmp
sbb
adc
js
ret
nop
inc
mov
pop
ror
popf
xchg
push
sub
fwait
mov
imul
scas
stc
jecxz
repnz
call
loopne
jne
(bad)
sbb
dec
mov
movs
sar
pop
stc
imul
test
lock
ds
inc
scas
lods
(bad)
fst
pop
(bad)
add
mov
dec
ins
fidivr
call
sbb
jae
push
jb
pop
daa
sbb
(bad)
jb
push
push
sub
jno
(bad)
pop
add
cmp
mov
and
inc
shl
ret
lods
mov
mov
fcomp
es
xor
dec
ja
xor
add
das
dec
ret
in
add
adc
add
and
sub
or
icebp
sub
sub
jns
push
pop
mov
test
mov
icebp
sbb
ins
push
xor
sar
adc
xchg
sbb
cmps
push
pop
push
ss
aad
retf
mov
or
or
sub
cld
pmuludq
dec
mov
les
ret
ret
sbb
or
jp
pop
scas
and
push
bound
or
jmp
mov
pop
add
cmp
clc
movs
je
loopne
add
push
pushf
mov
jl
jne
retf
push
test
cmc
sub
(bad)
es
jbe
and
lea
test
leave
fstp
je
test
cmps
push
fidivr
add
rcr
mov
int3
fsub
xor
retf
out
xchg
sub
enter
mov
cmp
mov
xlat
jp
scas
cs
mov
out
sbb
push
imul
mov
xor
inc
jbe
mov
push
ds
aas
mov
mov
test
jbe
popf
imul
mov
inc
xchg
movs
mov
mov
and
fdiv
jns
add
cs
pushf
ss
dec
cmp
out
fs
add
int3
xor
repnz
jae
pop
aaa
mov
mov
aad
das
inc
mov
sub
outs
sub
xchg
scas
aam
int3
xchg
repz
push
lds
inc
in
cld
leave
mov
movs
mov
test
jmp
fwait
imul
repnz
sbb
loopne
cmp
aam
int
shr
cmp
sti
outs
xchg
push
push
cmps
pushf
addr16
pop
push
icebp
in
shl
lahf
xchg
jo
or
cmp
stos
xor
mov
dec
out
inc
mov
int3
pushf
lahf
inc
cli
dec
nop
shr
out
fisttp
mov
hlt
in
adc
adc
cld
adc
sbb
and
imul
pop
retf
mov
cmp
sbb
ror
jmp
mov
arpl
repnz
sub
sub
xchg
jecxz
jb
xchg
lods
push
fs
popf
loop
and
sub
pop
popf
pop
xchg
lock
and
inc
enter
push
xchg
pop
dec
xor
je
pop
ins
sbb
stos
jle
add
lock
in
movs
mov
mov
out
xchg
test
lock
mov
int3
mov
mov
fcom
and
cs
mov
xchg
scas
test
adc
xchg
leave
xchg
(bad)
clc
repnz
jmp
jecxz
xchg
ret
hlt
push
mov
loopne
hlt
mov
lds
or
aad
pop
shl
lock
fistp
pop
push
inc
dec
mov
cs
pop
mov
add
mov
mov
pop
dec
sbb
ret
xchg
mov
dec
cmp
test
add
fidiv
fs
add
mov
scas
pop
call
rol
xor
stos
(bad)
adc
lahf
repnz
push
jmp
jae
fdivrp
test
dec
out
xchg
neg
and
cmp
aam
es
ss
lods
cwde
cwde
mov
mov
mov
cld
out
retf
mov
jle
push
mov
xchg
leave
(bad)
inc
stos
add
and
call
dec
lds
hlt
adc
js
cs
inc
cmps
or
test
mov
cwde
fucomp
test
loope
in
adc
mov
stos
lods
fmul
int
lods
fs
xor
pop
mov
pop
add
imul
push
add
fsubr
dec
jmp
cmp
xchg
retf
mov
dec
cdq
jo
push
loopne
mov
shl
cwde
rol
jmp
call
(bad)
aad
jbe
icebp
jb
out
push
mov
mov
sahf
call
adc
jns
sbb
(bad)
jmp
push
outs
sbb
inc
in
add
jbe
add
add
dec
sbb
mov
(bad)
xchg
jo
mov
lods
cmp
movs
and
neg
rcl
mov
popf
jns
movs
loop
and
cmp
push
push
mov
mov
sbb
or
(bad)
bound
sbb
mov
lds
adc
xchg
stos
xor
mov
mov
(bad)
xchg
mov
jp
xlat
lds
cwde
inc
pop
mov
hlt
sub
shl
call
fld
sbb
adc
fsubr
mov
sar
inc
push
xchg
(bad)
mov
ins
or
jne
retf
cmp
test
mov
leave
mov
jnp
add
mov
rol
jmp
cmps
std
mov
xchg
mov
nop
pop
fnstcw
dec
push
dec
lock
gs
jnp
inc
dec
jae
es
sbb
dec
loop
in
jo
inc
xchg
imul
scas
mov
push
mov
jle
mov
and
push
js
inc
in
mov
sub
jecxz
dec
sub
adc
call
push
retf
mov
mov
mov
inc
jne
mov
les
std
in
sub
inc
sub
and
popf
mov
push
out
test
das
xor
mov
mov
inc
retf
inc
(bad)
xchg
xchg
stos
cdq
inc
test
xchg
(bad)
ins
dec
xchg
and
jns
out
mov
or
stc
xor
adc
cmps
push
stos
scas
jno
cmp
jg
int
repnz
js
loop
jo
or
iret
or
jl
ins
or
xchg
xchg
xor
and
out
inc
gs
xchg
push
stos
mov
jecxz
lods
mov
leave
mov
movs
sbb
cmp
add
arpl
cmc
cli
std
jmp
mov
pop
(bad)
cmp
mov
mov
jne
sub
mov
mov
add
push
mov
xchg
sbb
imul
rol
add
add
xchg
fbstp
cmp
dec
out
xor
in
sbb
loop
and
(bad)
jge
shr
dec
dec
(bad)
jp
fld
gs
xchg
pop
inc
cmp
push
xchg
fisubr
lock
pop
or
outs
lods
out
push
repnz
and
test
jp
xor
xor
mov
mov
std
jecxz
out
in
and
pop
pop
pop
adc
es
dec
dec
jp
dec
dec
xchg
iret
mov
sub
call
xchg
mov
mov
pop
movs
call
sub
jl
xor
(bad)
(bad)
(bad)
cmc
xchg
sbb
xchg
enter
cmp
jp
push
shl
mov
dec
test
cmp
cmp
cmp
xor
es
es
pusha
pusha
dec
pusha
pusha
pusha
and
outs
mov
mov
mov
and
and
and
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
ins
outs
outs
outs
hlt
(bad)
(bad)
push
(bad)
(bad)
dec
dec
dec
dec
dec
dec
test
test
test
push
or
or
imul
imul
dec
inc
dec
xor
dec
adc
stos
sbb
mov
mov
mov
mov
loope
jecxz
loopne
loope
out
loop
loop
out
fisub
fcomp
sbb
repnz
repnz
repnz
test
mov
xchg
mov
fisttp
dec
inc
inc
fwait
mov
test
jns
loope
(bad)
jge
into
gs
ja
enter
pop
loop
loopne
out
xor
(bad)
xor
aad
aad
lds
push
push
push
dec
inc
loopne
repnz
or
mov
pusha
data16
sbb
push
sbb
push
mov
push
mov
fxch
int3
retf
leave
cmp
xor
jle
mov
ret
pop
sar
push
pop
pop
adc
push
dec
and
inc
mov
fwait
mov
iret
loope
div
repz
loope
mov
mov
cmps
or
mov
mov
ins
jbe
out
scas
(bad)
(bad)
outs
les
fidiv
into
enter
cmp
cmp
sub
mov
mov
das
movlps
sub
sub
cmp
es
es
ins
je
ins
pushaw
inc
jnp
jnp
outs
push
jnp
mov
mov
and
inc
ss
cmp
cmps
cmp
lds
mov
xchg
push
clc
stc
call
dec
xor
dec
and
mov
mov
imul
pop
test
inc
pop
mov
or
xchg
mov
jecxz
cmc
test
loopne
mov
test
enter
ror
fimul
call
loope
lods
stos
lods
mov
mov
popf
cdq
mov
cmps
lods
sar
clc
push
call
xchg
jp
test
jns
jne
aaa
ret
jmp
loopne
clc
sbb
out
xor
xchg
idiv
ret
lds
cmp
inc
inc
fistp
inc
dec
inc
dec
xchg
lds
mov
push
jbe
sbb
sbb
cmps
push
mov
inc
(bad)
int3
retf
jae
xor
leave
cmp
xor
cmps
mov
cmps
rol
aad
jne
(bad)
adc
aam
sbb
adc
xchg
push
inc
inc
dec
dec
mov
mov
mov
mov
repz
mov
popf
mov
mov
call
jl
inc
jl
jl
jl
(bad)
aam
(bad)
xlat
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
mov
sbb
inc
sbb
sbb
cmp
cmp
cmp
es
es
pushaw
jno
pusha
pusha
pusha
pusha
out
outs
outs
bound
outs
xchg
mov
and
add
adc
sub
sub
mov
sub
push
pop
jnp
outs
pop
pop
pop
mov
test
outs
outs
outs
outs
dec
(bad)
(bad)
push
(bad)
fdivr
jb
dec
dec
dec
dec
test
test
or
retf
or
imul
imul
dec
xchg
dec
dec
dec
inc
dec
cmp
pop
sbb
sbb
sbb
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
fmulp
fisub
(bad)
fdivrp
not
imul
lods
test
lods
lods
mov
mov
lods
lods
lods
mov
inc
inc
inc
inc
inc
push
inc
add
cmp
jg
jle
jg
into
hlt
into
dec
into
int3
iret
loopne
shl
loopne
mov
out
in
out
out
out
repnz
(bad)
(bad)
enter
inc
inc
jle
mov
pop
mov
and
pop
sbb
sbb
mov
pop
retf
retf
xor
xor
or
mov
rcl
xchg
shr
ror
adc
push
pop
pop
or
dec
jmp
mov
mov
mov
repz
repz
repnz
cmc
mov
mov
call
jl
xor
sar
(bad)
(bad)
inc
xlat
(bad)
(bad)
test
mov
fs
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
es
arpl
pusha
mov
outs
and
outs
mov
mov
sahf
and
and
and
sub
sub
arpl
cwde
pop
push
pop
pop
pop
movs
pop
mov
dec
mov
outs
fs
outs
outs
mov
(bad)
std
dec
outs
dec
dec
dec
or
out
popa
test
xor
or
dec
or
or
imul
imul
bound
dec
cmp
sbb
lock
mov
mov
mov
jecxz
out
jecxz
jecxz
loop
out
out
loop
fmulp
fdivp
fiadd
out
(bad)
repnz
mul
neg
lods
xchg
test
mov
mov
mov
inc
push
inc
push
inc
sbb
sbb
out
outs
jg
retf
(bad)
xchg
retf
icebp
loopne
in
loopne
out
mov
dec
out
std
out
pop
shl
lds
(bad)
push
inc
mov
mov
dec
mov
data16
test
sbb
sbb
sbb
sbb
mov
or
fcmovne
fxch
lock
xor
xor
sar
data16
rcl
shl
xlat
pop
push
pop
adc
inc
push
jnp
add
dec
jnp
(bad)
mov
out
lods
bnd
cli
xchg
repnz
mov
xchg
lock
stos
call
icebp
jne
jge
(bad)
dec
fbld
shl
test
or
mov
loope
xchg
mov
mov
sbb
iret
cmp
cmp
aas
ret
es
daa
and
or
pushaw
adc
imul
mov
mov
adc
inc
das
imul
sub
daa
sub
movs
push
inc
pop
pop
pop
add
push
ins
stc
jmp
lock
(bad)
stc
jmp
lea
dec
arpl
test
mov
adc
or
fs
ins
imul
push
dec
dec
dec
sbb
dec
sbb
sbb
mov
mov
mov
data16
sbb
loopne
ins
jmp
(bad)
(bad)
fadd
push
fsub
div
imul
lods
stos
mov
scas
mov
stos
mov
push
mov
arpl
inc
inc
push
dec
dec
sbb
jg
ja
jge
into
iret
into
or
into
into
loopne
repz
out
out
push
into
out
out
out
out
(bad)
int
mov
inc
inc
inc
inc
push
inc
or
xchg
stos
data16
jo
sbb
sub
sbb
mov
mov
call
xor
xor
popf
mov
mov
rcl
pop
repnz
pop
pop
pop
push
pop
fst
dec
dec
dec
loop
dec
dec
mov
mov
cmp
repz
shl
repz
push
aas
mov
mov
mov
pushf
xor
outs
jl
jl
pop
(bad)
(bad)
(bad)
(bad)
(bad)
into
adc
(bad)
int3
enter
enter
xor
xchg
cmp
mov
arpl
mov
sbb
cmp
cmp
and
and
inc
pusha
pusha
pusha
pusha
jbe
dec
gs
push
sub
outs
mov
mov
outs
pop
and
and
aas
sub
sub
sub
jge
pop
pop
pop
dec
pop
(bad)
fsubr
js
xor
(bad)
stc
jmp
dec
pop
dec
cmp
dec
mov
test
mov
sbb
imul
imul
pop
dec
inc
dec
sub
sbb
sbb
mov
mov
xchg
mov
jecxz
cmc
jecxz
out
jecxz
out
ret
out
out
enter
leave
(bad)
fmulp
shl
div
mul
neg
mov
mov
mov
lods
cmp
inc
push
inc
push
inc
push
inc
pop
add
jg
jg
jmp
fmul
shl
mul
in
loopne
enter
out
clc
out
lods
call
or
(bad)
inc
push
inc
sub
mov
mov
sbb
data16
xor
sbb
sbb
sbb
mov
addr16
retf
retf
ins
int3
daa
xor
xor
sbb
xor
push
mov
rcl
rcl
add
leave
adc
pop
add
dec
dec
dec
pop
dec
pop
mov
mov
mov
fwait
repz
jmp
icebp
cmps
mov
mov
mov
mov
call
push
jl
jl
cld
jl
neg
(bad)
mov
enter
into
enter
cmp
cmp
mov
das
mov
cwde
ss
cmp
das
cmp
cmp
es
or
es
mov
je
inc
pusha
pop
outs
outs
outs
jns
gs
nop
xchg
and
and
xor
retf
sub
sub
dec
pop
scas
pop
dec
pop
lods
mov
movs
mov
loop
jge
dec
outs
xchg
sar
(bad)
(bad)
(bad)
jmp
dec
push
test
movs
mov
sub
or
imul
inc
arpl
dec
lahf
popa
dec
dec
dec
dec
sbb
sbb
sbb
mov
mov
mov
jecxz
jecxz
shl
out
out
out
out
repnz
fidivr
mul
idiv
lods
xor
pushf
mov
sbb
lods
lods
lods
lods
mov
inc
ins
inc
ja
add
mov
push
jg
dec
jg
into
into
enter
(bad)
shl
xor
loopne
loopne
clc
out
(bad)
out
out
fsubr
imul
ret
(bad)
inc
push
inc
jb
hlt
ja
mov
xor
es
data16
push
add
test
(bad)
clc
retf
xor
xor
sub
mov
mov
aad
pop
fild
and
pop
dec
dec
dec
dec
lds
dec
xor
mov
repz
loopne
shl
(bad)
mov
mov
mov
xor
out
mov
jp
shl
in
push
in
(bad)
(bad)
enter
je
test
cmp
cmp
movs
mov
nop
mov
sbb
sbb
xor
or
mov
and
leave
and
popa
push
pusha
int3
pop
pusha
pusha
outs
outs
imul
mov
mov
sub
and
and
adc
sub
sub
sub
pop
mov
mov
mov
xchg
push
outs
outs
(bad)
(bad)
stc
push
imul
push
jae
dec
dec
dec
scas
test
nop
test
or
or
bound
imul
push
dec
dec
dec
dec
dec
dec
repz
and
and
out
and
sbb
mov
mov
jecxz
mov
loopne
aad
mov
sahf
(bad)
(bad)
iret
(bad)
xor
loope
mov
xchg
stos
mov
scas
cdq
mov
mov
retf
mov
sbb
inc
repz
inc
inc
xchg
or
add
outs
cmp
jg
outs
addr16
fxch
xchg
out
loopne
loopne
out
ins
loop
out
cmps
out
fisubr
rol
pop
int3
dec
les
inc
and
inc
inc
inc
inc
popf
mov
mov
mov
data16
xor
sbb
sbb
test
retf
test
fimul
xor
cwde
xor
mov
mov
fnstcw
adc
pop
pop
push
jge
dec
repnz
test
cmps
repz
movs
xchg
add
call
pop
jne
mov
(bad)
(bad)
(bad)
push
(bad)
(bad)
not
ret
bswap
xchg
enter
cmp
xor
std
mov
pushf
sbb
cmp
pop
enter
cmp
cmp
mov
and
es
es
pusha
pusha
pusha
loopne
jno
les
push
outs
mov
mov
mov
mov
and
(bad)
imul
or
das
and
and
sub
pop
dec
adc
js
mov
in
mov
outs
outs
dec
outs
push
(bad)
call
dec
dec
dec
dec
inc
mov
jecxz
test
cmp
imul
dec
dec
or
dec
sub
push
sbb
sbb
sbb
in
mov
cld
jecxz
jecxz
loop
inc
out
(bad)
in
out
stos
out
(bad)
fcomp
je
rcr
test
div
imul
lods
(bad)
lods
inc
(bad)
mov
adc
dec
loopne
inc
inc
inc
inc
inc
xchg
sub
cmp
jg
jae
jge
into
outs
test
clc
ins
loop
loopne
loopne
xlat
out
out
out
out
test
out
fcmovnb
mov
adc
inc
inc
inc
inc
add
jno
xchg
mov
mov
mov
mov
sbb
and
sbb
sbb
mov
retf
retf
mov
xor
xor
add
rcl
rcl
rcl
push
adc
sbb
retf
dec
dec
dec
dec
dec
dec
dec
div
xor
repz
jmp
mov
mov
mov
mov
call
sti
jle
jl
jl
jl
(bad)
nop
aad
fadd
enter
enter
cmp
mov
mov
movs
mov
mov
sbb
cmp
cmp
xor
mov
arpl
arpl
outs
repnz
outs
outs
ins
outs
(bad)
mov
es
and
and
movs
sub
mov
sub
pop
pop
pop
pop
push
pop
loope
jp
mov
ds
cld
ins
pop
(bad)
(bad)
(bad)
(bad)
(bad)
cld
dec
dec
and
dec
jmp
test
dec
push
movs
or
or
imul
push
in
dec
dec
dec
dec
sbb
pop
sbb
mov
sbb
mov
movs
loopne
in
jnp
push
jecxz
out
out
out
(bad)
push
fcomp
fdivp
div
div
scas
sbb
mov
mov
test
push
lods
lods
lods
lods
lods
scas
lods
add
inc
std
inc
add
fwait
repz
jge
jg
jg
into
int
mov
ja
and
and
loopne
out
test
mov
(bad)
vshufpd
inc
cs
call
mov
and
data16
sbb
pop
sbb
mov
leave
retf
call
xor
xor
xor
mov
mov
rcl
rcl
aad
fwait
adc
pop
pop
dec
dec
dec
dec
or
repz
dec
mov
mov
mov
mov
repz
mov
mov
mov
mov
mov
cdq
hlt
xchg
xchg
cdq
jl
jl
jl
jg
jp
pop
aam
aam
(bad)
(bad)
(bad)
enter
mov
jno
sub
aad
cmp
cmp
mov
lods
dec
mov
sbb
pop
sbb
cmp
and
enter
es
bound
bound
outs
ins
outs
sub
xchg
mov
mov
and
adc
fisubr
sub
sub
sub
push
pop
ss
pusha
pop
mov
mov
ins
sub
outs
outs
(bad)
(bad)
cld
(bad)
mov
dec
mov
dec
dec
dec
dec
stos
test
inc
stos
or
or
or
push
imul
dec
dec
push
xchg
sbb
sbb
sbb
mov
mov
jecxz
jecxz
in
mov
in
(bad)
(bad)
(bad)
fidiv
cmc
out
lods
lods
lods
lods
scas
lods
stos
mov
mov
mov
lods
scas
lods
jmp
adc
cmp
inc
inc
inc
inc
inc
add
and
jg
jl
mov
mov
iret
loopne
loopne
jecxz
out
(bad)
in
test
out
vshufpd
(bad)
jl
imul
inc
mov
or
inc
addr16
sbb
daa
sbb
sbb
mov
(bad)
enter
retf
xor
jbe
mov
mov
rcl
sar
push
pop
pop
pop
pop
adc
or
and
jne
addr16
mov
mov
mov
mov
jg
mov
(bad)
repz
mov
repnz
mov
call
jg
jb
jg
xlat
(bad)
(bad)
(bad)
(bad)
aad
mov
cmps
(bad)
ins
retf
icebp
leave
cmp
cmp
cmp
and
mov
mov
sbb
pop
movs
adc
cmp
cmp
cmp
and
sub
and
popa
pusha
pusha
pusha
pusha
arpl
ins
add
ins
sub
mov
mov
and
and
sub
sub
outs
sub
pop
pop
pop
pop
pop
mov
dec
mov
outs
outs
outs
outs
outs
ins
outs
mov
cld
lods
dec
dec
dec
lds
dec
test
push
test
or
imul
outs
imul
and
dec
dec
dec
push
sbb
sbb
fs
mov
mov
ins
mov
mov
jecxz
out
jecxz
jecxz
loopne
out
out
loopne
(bad)
fiadd
not
div
stos
lods
lods
lods
lods
push
mov
mov
lods
lods
scas
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
js
jg
jg
leave
into
into
int
cmps
leave
loopne
loope
out
loopne
out
gs
push
ret
rol
ret
inc
inc
sub
inc
lea
mov
outs
data16
sbb
sbb
pop
sbb
mov
mov
retf
retf
xor
xor
retf
xor
mov
rcl
rcl
lock
pop
push
pop
in
adc
pop
dec
dec
inc
inc
dec
dec
dec
dec
stc
mov
sti
mov
mov
mov
mov
in
xchg
call
jl
jl
je
jl
(bad)
adc
(bad)
(bad)
xlat
(bad)
sbb
enter
push
sar
cmp
ret
cmp
mov
sbb
sbb
sbb
cmp
cmp
xor
cmp
fsub
es
pusha
addr16
pusha
arpl
outs
outs
imul
outs
outs
mov
mov
and
and
push
daa
sub
sub
nop
and
sub
in
pop
pop
pop
pop
dec
or
outs
xlat
outs
outs
cld
inc
(bad)
(bad)
sti
dec
dec
and
test
test
push
or
push
or
popa
imul
push
popa
dec
dec
dec
dec
or
sbb
sbb
sbb
sar
loope
jecxz
loope
ins
jmp
mov
out
in
push
aam
(bad)
ficomp
aam
div
idiv
cld
div
scas
lods
jg
scas
mov
mov
lods
stos
lods
inc
cmps
lods
lods
inc
inc
mov
inc
inc
inc
inc
push
mov
mov
jge
push
je
jg
into
sahf
(bad)
int3
into
mov
loopne
loope
pusha
jmp
out
out
out
push
in
out
(bad)
lds
into
(bad)
lds
inc
lea
mov
mov
pop
push
data16
adc
sbb
sbb
mov
mov
(bad)
retf
retf
xor
xor
js
mov
mov
mov
shl
xlat
sar
sbb
pop
adc
cld
sbb
dec
dec
cmps
inc
dec
dec
mov
pop
mov
ja
repz
repz
(bad)
mov
mov
jno
mov
cwde
call
scas
jno
jl
jl
jno
(bad)
rcl
xor
(bad)
(bad)
into
enter
enter
xor
les
scas
lods
mov
adc
pop
sbb
aaa
cmp
xor
es
sub
es
outs
pusha
pusha
arpl
popa
outs
outs
outs
outs
stos
bound
mov
mov
and
es
and
sub
int3
and
pop
pop
pop
mov
pop
pop
vpmacssww
outs
outs
outs
arpl
push
jmp
icebp
(bad)
dec
inc
dec
dec
dec
dec
cmp
cmps
or
push
or
add
push
imul
inc
dec
dec
dec
dec
adc
sbb
sbb
mov
retf
mov
addr16
jecxz
loope
jb
out
out
xchg
call
mov
(bad)
clc
div
repnz
lods
lods
lods
lods
mul
inc
mov
sub
ror
inc
add
add
jg
jl
push
jno
into
retf
ror
loope
mov
loopne
loopne
out
in
out
xchg
loopne
(bad)
inc
enter
inc
ror
inc
inc
inc
inc
test
sbb
and
sbb
mov
mov
retf
retf
retf
xor
sub
mov
rcl
pop
fst
rcl
(bad)
sbb
pop
adc
aad
dec
dec
dec
dec
loopne
mov
mov
popf
mov
into
std
repz
mov
mov
push
mov
rcl
jl
jle
pop
fcom
(bad)
aad
dec
fmul
enter
(bad)
enter
xchg
cmp
cmp
daa
scas
mov
scas
sbb
sbb
sbb
cmp
cmp
es
pusha
aam
pusha
pusha
imul
outs
test
or
and
and
js
and
sub
lods
daa
sub
sub
aam
pop
pop
pop
pop
rcl
mov
imul
outs
outs
outs
outs
jnp
(bad)
(bad)
std
jmp
dec
dec
dec
dec
leave
inc
dec
dec
stos
test
stos
test
or
add
push
xor
imul
inc
dec
dec
dec
dec
xchg
adc
lahf
push
mov
mov
es
and
jecxz
loope
cs
ss
or
(bad)
repz
clc
div
lock
xchg
mov
rol
mov
mov
inc
inc
inc
xchg
dec
add
cmp
jno
jg
jg
ret
into
into
int3
into
pop
ret
loopne
loope
and
loopne
in
out
ret
out
in
out
clc
retf
(bad)
lds
inc
or
xchg
imul
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
mov
xor
mov
mov
rcl
rcl
mov
pop
pop
adc
jl
pop
pop
dec
dec
pop
inc
dec
dec
dec
dec
popf
mov
mov
test
mov
mov
lds
icebp
xchg
jl
js
outs
jae
jl
(bad)
push
fcmovnbe
(bad)
aam
pop
(bad)
leave
enter
cmp
cmp
cmp
mov
mov
sbb
sbb
adc
cmp
cmp
cmp
daa
es
sub
es
cmp
pusha
popa
pusha
fild
outs
ins
outs
pop
pusha
outs
outs
mov
mov
and
and
cmps
das
sub
sub
mov
pop
sub
pop
pop
pop
aam
mov
outs
outs
push
inc
pusha
outs
outs
cli
inc
icebp
(bad)
(bad)
(bad)
jmp
inc
dec
dec
dec
dec
pop
inc
test
cmps
test
add
(bad)
or
imul
dec
dec
dec
dec
fiadd
dec
sbb
or
fwait
mov
mov
mov
out
loopne
out
out
rcr
(bad)
fimul
div
div
out
div
scas
lods
and
test
test
stos
lods
lods
inc
inc
(bad)
dec
inc
inc
inc
inc
adc
pop
mov
jge
out
jg
int
outs
ror
retf
out
loop
in
push
out
out
out
call
out
ret
retf
mov
inc
inc
inc
inc
sbb
mov
mov
imul
sbb
sbb
mov
mov
mov
mov
retf
retf
xor
xor
movs
aas
mov
mov
mov
rcl
rcl
dec
sbb
pop
push
pop
sbb
dec
dec
dec
into
inc
dec
dec
mov
and
cld
repnz
repz
cld
mov
mov
jge
mov
sahf
call
shl
jp
scas
jae
(bad)
rcl
cli
fcom
(bad)
ror
(bad)
retf
enter
cmp
cmp
aaa
mov
lods
mov
adc
cmp
cmp
lock
and
icebp
sub
gs
(bad)
pusha
pushaw
mov
ins
jl
sbb
or
xor
scas
and
sub
sub
pop
dec
pop
ins
pop
add
fwait
mov
sub
ins
jge
sar
and
je
retf
call
dec
xchg
dec
and
and
pop
or
or
imul
jo
xchg
dec
jle
int
add
call
mov
mov
mov
cmps
ins
out
jecxz
loopne
jecxz
out
idiv
jmp
push
fmul
fisubr
ficom
pop
repnz
not
and
push
mov
mov
scas
mov
inc
push
inc
push
inc
je
mov
xchg
bound
jle
ins
imul
inc
int3
mov
dec
ins
loop
in
loopne
repnz
out
fucomip
movs
cld
mov
xlat
rol
test
int3
inc
adc
push
ror
or
or
addr16
imul
jae
jne
xchg
retf
adc
inc
iret
fcmovne
shl
xor
mov
int
stos
shl
rol
ror
movhps
dec
ror
pop
and
mov
mov
inc
loopne
neg
dec
loopne
mov
mov
cmps
jb
repz
inc
mov
outs
popa
jge
jge
outs
mov
lds
retf
sub
mov
cmp
sub
mov
shl
add
xor
cmp
cmp
daa
and
and
popa
adc
mov
imul
lods
cmp
movs
sub
sub
movs
sub
add
dec
xor
mov
mov
mov
loop
jge
pop
outs
popf
jp
stc
push
inc
cdq
stc
pop
dec
inc
pop
pop
dec
mov
je
shr
mov
or
or
pop
jle
ins
push
or
dec
ret
dec
mov
adc
xchg
sbb
sbb
mov
mov
neg
ret
neg
(bad)
in
repz
loopne
fmul
fadd
jecxz
lock
test
scas
mov
mov
mov
jecxz
fidivr
sar
leave
push
pop
inc
loop
sbb
fdivr
mov
iret
mov
in
(bad)
iret
mov
ins
loop
loope
loop
clc
int3
jmp
in
ret
cs
ret
mov
jae
add
mov
xlat
jne
popa
jns
mov
sbb
mov
mov
call
xor
daa
stos
aaa
jmp
mov
js
stos
rcl
push
adc
pop
(bad)
dec
pop
dec
fisttp
pop
test
cmps
js
xor
cdq
in
cmc
mov
and
pop
mov
call
in
lock
jp
jle
shl
xor
leave
retf
dec
into
mov
cmp
das
mov
bound
or
adc
cmp
cmp
and
and
pusha
sub
ja
popa
push
outs
ins
ja
scas
ins
stos
mov
mov
and
sub
ds
and
push
xchg
pop
gs
imul
or
(bad)
outs
stos
out
jmp
std
jae
push
inc
lods
dec
ror
push
mov
dec
add
and
push
dec
dec
add
dec
dec
add
bound
jle
(bad)
mov
mov
scas
jecxz
loop
sahf
cli
std
loope
loopne
push
out
in
icebp
mov
inc
fadd
xlat
aaa
hlt
push
out
lahf
jmp
add
ss
adc
adc
aaa
mov
movs
ins
scas
hlt
pop
ret
inc
sbb
inc
or
lods
in
mov
(bad)
aas
int3
rcr
jmp
ss
or
xchg
(bad)
fbstp
fadd
retf
fist
popa
inc
pop
pop
dec
dec
dec
mov
mov
gs
inc
gs
jl
adc
sbb
xor
inc
enter
leave
inc
enter
xor
xor
pop
shr
sar
rcl
inc
adc
pop
cld
adc
fs
mov
int3
inc
fs
push
mov
mov
jne
(bad)
and
(bad)
stc
call
mov
call
pushf
jg
jl
jl
jg
(bad)
(bad)
aad
(bad)
dec
enter
enter
cmp
sub
fdivr
retf
mov
aaa
sbb
sbb
cmp
cmp
and
scas
es
pop
shl
push
outs
push
mov
xor
ret
and
and
sub
sub
mov
mov
mov
lea
outs
imul
sti
(bad)
(bad)
pop
dec
lods
dec
ins
dec
pop
dec
dec
stos
mov
dec
or
dec
or
or
imul
dec
pop
dec
scas
dec
fwait
sbb
sbb
cwde
sbb
mov
mov
mov
mov
out
loop
jecxz
out
out
out
in
out
fcompp
fcmovu
fmul
ficom
cmc
div
(bad)
icebp
repnz
imul
(bad)
(bad)
xchg
inc
jno
inc
inc
add
cmp
jg
jg
jnp
retf
stc
retf
imul
in
in
in
jmp
pop
ror
cs
jae
add
inc
sub
pop
lea
(bad)
adc
lahf
pusha
ds
xchg
sbb
pop
mov
mov
cmp
cdq
ret
outs
cmp
inc
cmp
mov
out
fimul
fidiv
push
loopne
mov
inc
inc
int
ror
mov
mov
repnz
outs
repz
inc
mov
fwait
call
jp
imul
cdq
(bad)
(bad)
(bad)
mov
enter
enter
cmp
cmp
mov
mov
sbb
and
sub
xor
dec
cmp
cmp
cmp
es
and
arpl
pusha
adc
pusha
jg
sbb
outs
ins
outs
mov
mov
and
and
sub
sub
sub
sub
push
pop
pop
pop
dec
pop
test
xchg
sbb
outs
ja
mov
repz
in
sti
push
dec
ins
dec
push
dec
js
mov
test
dec
or
push
imul
fbld
dec
dec
dec
cwde
dec
inc
inc
sbb
sbb
ret
adc
mov
mov
ds
call
cmp
(bad)
loope
ficomp
aad
div
jbe
div
imul
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
dec
inc
add
cmp
jg
jg
jg
into
(bad)
into
into
into
into
loop
loopne
loopne
loopne
out
out
out
out
out
out
push
in
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
adc
push
push
mov
mov
retf
ror
retf
xor
xor
test
mov
rcl
rol
ror
pop
add
pop
push
dec
pop
dec
push
dec
pop
dec
lods
mov
mov
mov
mov
repz
shl
loope
xchg
mov
mov
mov
mov
call
pop
jl
jl
jl
jl
(bad)
ret
(bad)
ret
enter
enter
cmp
cmp
cmp
mov
or
add
cmp
cmp
cmp
es
cdq
and
dec
pusha
inc
gs
outs
pop
stos
outs
push
addr16
sti
mov
mov
mov
sub
sub
and
jmp
mov
stos
outs
scas
data16
outs
inc
addr16
xor
test
dec
dec
jno
and
fadd
int3
xchg
test
jle
outs
or
add
sbb
add
pop
popa
sbb
cmp
and
sbb
pop
mov
ret
fimul
scas
call
adc
mov
xchg
xor
(bad)
mov
(bad)
(bad)
fisttp
jmp
fxch
retf
enter
enter
xor
jecxz
add
out
or
push
sbb
push
sbb
sahf
mov
mov
xchg
test
cdq
out
mov
sub
sub
cs
adc
sub
jmp
out
sbb
or
pop
data16
ja
jbe
ja
jl
int
not
retf
fcmove
shr
movs
cmps
movs
push
push
jge
pop
push
push
push
into
mov
mov
movs
mov
xchg
mov
gs
inc
das
sub
sub
fnsave
mov
mov
repz
int
fcmovnu
fbstp
jmp
rcr
jl
sbb
fwait
mov
mov
or
sti
xchg
cmp
test
mov
pusha
ds
mov
mov
mov
scas
cmp
dec
prefetch
or
in
in
mov
jecxz
mov
(bad)
sti
jnp
jnp
mov
out
loope
loope
and
mov
in
mov
fcomp
or
or
or
lods
clc
lods
clc
lods
clc
lods
clc
cmp
cmp
push
and
aas
sub
xor
stc
enter
int3
(bad)
jg
pop
imul
sbb
and
and
aaa
dec
or
and
jle
outs
push
je
fdiv
iret
mov
repz
jecxz
mov
xchg
scas
xchg
fimul
mov
mov
xchg
test
fcompp
jmp
mov
out
retf
enter
aam
cmp
adc
xor
cs
out
lock
sbb
adc
xor
mov
scas
mov
test
xchg
mov
cmp
and
inc
or
clc
in
jmp
pop
or
imul
pop
push
fmulp
(bad)
rcl
in
scas
mov
mov
pop
pop
push
push
inc
aad
sar
(bad)
fnstcw
rcr
fs
arpl
sbb
cmp
sub
or
ret
lahf
cmc
aam
fcom
pushf
sahf
add
rol
mov
int
out
push
call
jl
pop
pop
or
movs
(bad)
mov
mov
mov
enter
push
push
dec
dec
dec
pop
shr
ror
rcl
outs
jae
jne
jns
sbb
pop
dec
data16
dec
push
dec
inc
inc
push
dec
dec
dec
es
das
add
or
aas
sbb
(bad)
mov
and
push
jge
push
inc
pop
sub
pop
dec
pop
pop
cmp
cmp
out
loope
in
cli
mov
or
xor
or
pushf
call
sbb
das
push
sub
ffreep
retf
out
imul
arpl
femms
sbb
sbb
and
sub
cmp
and
sbb
dec
jle
ins
(bad)
rol
mov
mov
(bad)
nop
jecxz
jecxz
xchg
movs
mov
scas
mov
mov
mov
(bad)
lods
leave
clc
out
jmp
out
aad
in
fcompp
int3
ret
into
enter
pop
inc
sub
loopne
add
or
adc
and
mov
lods
stos
xchg
mov
mov
sbb
lds
mov
and
and
jmp
adc
or
jge
dec
popa
imul
jmp
int
(bad)
(bad)
movs
lods
retf
mov
add
add
call
mov
in
xchg
rol
pop
inc
es
dec
push
jnp
dec
push
jnp
mov
add
mov
sahf
repz
stc
rol
int3
mov
call
sbb
sbb
jl
sbb
mov
mov
lods
mov
xchg
sbb
push
pop
pop
pop
dec
mov
out
(bad)
jb
outs
dec
jge
imul
push
push
pop
dec
push
es
inc
pop
jne
adc
or
sub
push
pop
or
hlt
xlat
fistp
inc
dec
or
dec
dec
dec
dec
dec
pop
inc
inc
inc
pop
pop
pop
cmp
cmp
loope
cld
call
sbb
pop
sbb
lea
nop
cmp
cmp
enter
pop
ins
js
or
jl
xor
or
add
and
adc
and
cmp
jne
dec
inc
push
jb
fdiv
mov
fs
and
and
push
mov
mov
fidiv
cmp
aam
in
enter
fsin
jmp
(bad)
(bad)
(bad)
fcomp
xor
sub
inc
in
loop
out
repz
pop
jg
push
sbb
cmp
mov
mov
adc
or
lods
mov
xchg
lods
xor
xor
xor
and
clc
(bad)
stc
inc
adc
dec
jno
jge
imul
fcmovu
(bad)
mov
mov
push
inc
inc
inc
inc
(bad)
cli
aad
fnstcw
mov
jb
push
bound
jb
ds
cmp
faddp
aad
xchg
mov
lahf
fcmovnbe
rcl
(bad)
in
(bad)
(bad)
jmp
jecxz
das
sbb
sbb
adc
mov
mov
mov
push
dec
pop
dec
cmp
retf
int3
ret
out
jae
jnp
jb
sbb
pop
push
pop
push
dec
pop
pop
dec
push
dec
dec
push
arpl
add
push
pusha
sbb
add
sbb
outs
icebp
(bad)
retf
int3
(bad)
fcmovnu
and
push
inc
inc
dec
outs
inc
dec
dec
inc
inc
dec
sub
das
ss
cmp
out
int
in
jmp
cld
or
add
add
add
call
cs
and
(bad)
test
fdivr
dec
bound
push
sbb
adc
sub
cmp
or
and
dec
jle
je
imul
shl
xchg
xchg
add
xchg
xchg
xchg
mov
test
test
mov
fcomp
leave
leave
ret
ret
dec
lods
fcompp
fistp
inc
or
cmp
sub
in
icebp
add
test
or
cdq
cmps
mov
xchg
xchg
test
xchg
popf
call
mov
xchg
mov
lods
stos
daa
add
xor
loop
out
or
xor
push
adc
dec
jbe
sbb
ins
int
rcr
mov
cmps
stos
mov
push
inc
jae
inc
inc
pop
pop
sar
shl
rcr
addr16
inc
and
and
fst
mov
aam
ret
pushf
cwde
xchg
and
cld
fcmovnb
shl
idiv
jl
sbb
push
mov
xchg
mov
test
mov
enter
addr16
push
dec
mov
ret
jne
jns
dec
outs
jae
dec
pop
push
pop
pop
dec
pop
es
es
dec
push
jns
add
add
or
or
mov
fstp
retf
push
and
stos
in
out
xchg
out
sub
sahf
xlat
sahf
in
fwait
rcr
in
jmp
icebp
clc
cld
fmul
push
sbb
or
(bad)
mov
and
dec
or
cmovge
int3
fstp
or
js
jle
inc
bound
adc
add
push
xor
and
cs
cs
sbb
jg
jle
outs
(bad)
rcr
(bad)
jecxz
adc
xchg
mov
lods
mov
mov
ret
jmp
clc
out
clc
mov
cli
out
clc
int3
lods
dec
retf
int3
ffreep
inc
adc
sub
aaa
inc
(bad)
out
add
adc
or
or
mov
into
add
mov
sbb
mov
sub
inc
sysexit
xor
das
in
mov
jecxz
in
add
unpcklps
and
ja
jns
push
jbe
int
fcmovnbe
rcr
(bad)
cmps
retf
mov
push
xor
push
push
jge
aad
mov
nop
mov
rcr
jns
jbe
and
and
dec
cmp
sub
rcr
mov
add
xor
xor
pusha
xor
mov
or
ja
pop
or
pop
out
mov
mov
push
or
or
pop
or
cmp
mov
sub
pusha
cmp
sbb
(bad)
fistp
cli
xchg
cli
xchg
cmp
stos
in
in
in
in
pusha
mov
icebp
mov
lods
imul
mov
inc
inc
push
inc
and
inc
pop
dec
pop
inc
dec
inc
dec
pop
fwait
leave
fwait
leave
fwait
leave
fwait
sbb
dec
sbb
sbb
das
push
pop
outs
xchg
call
and
add
aas
sub
shr
(bad)
js
jle
ins
pusha
inc
arpl
push
pop
push
sub
sbb
push
sub
cmp
outs
ja
push
jp
jle
stc
fadd
cli
(bad)
ret
aam
mov
nop
nop
jecxz
add
lahf
lods
lods
mov
xchg
test
lahf
(bad)
leave
lods
jmp
fdivr
fsubp
jmp
out
stc
fisubr
ror
daa
daa
xor
xor
inc
(bad)
sti
repz
icebp
test
adc
sbb
stos
mov
mov
xchg
popf
mov
sbb
lds
mov
or
xor
xor
and
int3
out
(bad)
(bad)
in
daa
add
adc
adc
ins
jns
cs
jmp
jmp
(bad)
mov
mov
jnp
dec
xor
push
fst
call
fcomp
mov
stos
and
pusha
fs
push
bound
dec
sub
and
aas
xlat
xlat
mov
neg
rcl
xor
test
sub
jno
jno
pop
cmp
call
push
adc
mov
mov
fwait
mov
sahf
mov
movs
jae
inc
cmp
push
pop
(bad)
mov
neg
ins
jns
pop
jns
dec
jne
pop
push
dec
ins
push
dec
pop
inc
inc
jbe
dec
inc
inc
push
adc
add
or
push
add
add
or
aas
sbb
retf
icebp
cld
mov
adc
or
dec
inc
sub
pop
bound
aaa
cmp
cmp
cmp
out
cld
mov
inc
jmp
outs
cmp
xchg
fwait
nop
mov
xor
(bad)
int3
rcr
loope
arpl
je
or
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
add
cmp
add
pop
and
and
arpl
push
je
jo
(bad)
rcl
call
jecxz
or
mov
mov
mov
cwde
not
fsubr
leave
aad
cli
mov
cli
iret
cld
enter
out
jmp
and
or
call
mul
adc
sbb
adc
sbb
cmps
mov
stos
xchg
mov
test
test
stos
mov
inc
pop
add
xor
mov
loop
in
add
or
or
jnp
pop
ja
jge
enter
(bad)
mov
stos
cmps
retf
inc
push
pop
push
push
inc
xor
aad
iret
mov
mov
mov
pop
inc
outs
fs
daa
fs
mov
neg
ret
fadd
xor
rcl
shl
(bad)
cmc
stc
icebp
(bad)
(bad)
call
push
adc
xchg
mov
mov
or
ins
push
push
pop
push
pop
pop
mov
mov
dec
jb
jg
pop
pop
cmp
jge
jl
pusha
es
bound
push
pusha
xor
adc
or
inc
cmp
aad
xchg
icebp
(bad)
int3
fst
push
jno
push
push
dec
dec
dec
pop
sub
dec
dec
adc
ss
cmp
xlat
sar
out
lar
or
or
call
fwait
and
dec
add
add
cmp
(bad)
test
jl
bound
jne
adc
push
or
pop
add
sub
ss
sbb
jle
bound
fcmovnb
shl
iret
mov
ret
mov
or
out
mov
xchg
mov
mul
fsub
leave
fadd
ret
out
mov
retf
stc
repz
dec
(bad)
rcr
in
xor
sub
das
loope
loopne
add
in
adc
adc
adc
into
or
outs
into
and
inc
and
and
jl
push
sub
push
jle
js
jl
jl
xor
inc
les
in
loop
or
or
or
data16
push
jge
ins
pop
(bad)
int
fmul
ror
(bad)
retf
stos
mov
pop
push
pop
xor
pop
(bad)
iret
iret
cmc
rcr
shl
mov
jnp
jo
arpl
sub
sub
sub
mov
aam
aam
rol
xchg
mov
mov
rcl
icebp
fcmovbe
std
hlt
in
cmc
icebp
call
sbb
scas
mov
mov
cmps
mov
dec
push
dec
pop
pop
pop
cmp
int3
int
(bad)
fcmovnbe
mov
jns
outs
sbb
pop
dec
pop
js
pop
dec
inc
push
push
es
push
inc
inc
add
push
push
add
or
push
int3
(bad)
jmp
push
inc
push
jne
dec
pop
pop
dec
inc
sub
inc
cmp
cmp
sub
sti
sti
mov
in
out
sbb
outs
sbb
push
or
lea
call
sub
cmp
sbb
(bad)
retf
jg
ins
bound
imul
mov
and
and
dec
pop
cmp
push
ffreep
rcl
sar
shl
xchg
xchg
xchg
xchg
lea
mov
mov
fidivr
movs
xchg
test
(bad)
leave
enter
(bad)
out
ret
in
(bad)
dec
fcomp
fstp
aaa
inc
adc
daa
push
xor
in
icebp
or
cli
(bad)
out
sbb
push
or
jg
and
stos
test
mov
or
mov
mov
xor
or
es
inc
jecxz
out
repnz
(bad)
jmp
or
adc
ja
imul
jns
pop
fcmove
(bad)
int
fstp
scas
mov
pop
inc
push
pop
inc
push
repnz
fnstcw
movs
mov
shl
jle
jb
inc
xor
ds
daa
or
aam
(bad)
xchg
xchg
lahf
repz
call
ret
(bad)
sti
clc
idiv
fucomi
out
call
sbb
mov
movs
mov
movs
lods
fwait
mov
imul
pop
into
(bad)
loopne
mov
pop
jae
ins
jne
pop
dec
cmp
push
pop
dec
inc
push
inc
inc
gs
inc
inc
and
adc
add
push
sbb
or
xchg
cld
rcr
(bad)
xlat
retf
push
dec
inc
push
and
inc
pop
dec
dec
dec
pop
popa
inc
dec
cmp
sbb
sub
jmp
jmp
add
cmp
mov
arpl
and
cmp
cli
int3
fcmovnu
shr
or
js
bound
or
(bad)
add
push
and
push
cmp
cmp
jle
push
jb
jle
fcom
ret
stc
(bad)
mov
mov
mov
xchg
xchg
mov
mov
mov
xchg
cwde
cmp
call
ret
out
out
shr
fcmovb
(bad)
in
(bad)
fild
and
aaa
es
adc
lock
out
lods
shl
in
or
adc
push
cmp
adc
popf
stos
mov
xchg
loopne
xchg
sbb
xor
mov
and
out
out
mov
(bad)
in
ud2
add
pop
push
add
jns
jl
jge
pop
jge
jmp
iret
(bad)
int
cmps
sub
jno
inc
pop
inc
push
inc
pop
into
mov
enter
mov
mov
pop
outs
push
gs
or
es
sub
and
fcomip
(bad)
fcom
xchg
sahf
movs
ffree
fst
fcom
cmc
shr
repz
out
out
call
sbb
mov
mov
mov
push
dec
push
push
pop
dec
jg
int
rol
xlat
mov
push
imul
push
dec
push
push
dec
inc
dec
push
es
inc
add
add
(bad)
add
sbb
sub
aam
(bad)
call
jno
push
push
inc
dec
or
sub
inc
dec
inc
ss
pop
sbb
cld
jmp
bndldx
outs
cmp
lea
sahf
lea
dec
push
cmp
cmp
fxch
fcmovnu
(bad)
int3
(bad)
js
js
js
or
push
pop
sub
or
pop
push
sub
cmp
cmp
sbb
jne
push
jne
test
fcmovnbe
or
adc
(bad)
xchg
mov
xor
xchg
(bad)
lods
loop
fsub
call
mov
in
fcmovne
(bad)
(bad)
inc
pop
sub
sub
das
out
in
or
mul
cmp
adc
jg
or
mov
loopne
mov
or
mov
xchg
lods
test
lds
xor
in
mov
(bad)
stc
invd
add
add
cmp
outs
push
jno
jge
sti
fmulp
(bad)
rcr
jmp
cmps
scas
retf
mov
xor
pop
ror
enter
(bad)
cmps
mov
nop
mov
pop
push
outs
je
cmp
and
ret
fcomp
frstor
aad
icebp
int3
(bad)
(bad)
rol
jmp
call
cmp
pop
sbb
mov
mov
mov
mov
jne
dec
pop
push
(bad)
shl
loopne
imul
pop
pop
dec
jg
push
dec
jp
dec
push
push
dec
dec
es
movlps
movups
lidtd
sbb
add
hlt
xlat
xlat
enter
push
ins
inc
dec
and
imul
dec
dec
pop
sub
sub
cmp
in
jmp
(bad)
jmp
sbb
add
or
nop
(bad)
(bad)
mov
sbb
retf
fcmovnu
(bad)
fisttp
imul
pop
add
push
pop
xor
daa
cs
jns
outs
imul
faddp
aad
(bad)
lds
mov
fwait
xchg
out
lahf
xchg
xchg
or
stos
lods
mov
xchg
test
loope
ret
out
clc
mov
(bad)
clc
jecxz
retf
(bad)
(bad)
dec
xor
inc
push
es
in
out
in
in
jg
sbb
xor
or
mov
mov
adc
mov
test
lods
xor
add
add
xor
clc
mov
stc
in
out
adc
or
adc
pop
jnp
jge
imul
xlat
int
retf
call
mov
inc
inc
inc
pop
push
inc
inc
fnstcw
into
mov
mov
cmps
cmps
mov
jb
jo
arpl
sub
ds
ret
(bad)
mov
xchg
xchg
neg
fst
fcmovb
mov
(bad)
jmp
adc
adc
adc
mov
mov
xchg
test
pop
jbe
push
pop
cmp
ror
retf
mov
dec
dec
pop
and
jle
dec
push
dec
push
push
inc
es
inc
push
jns
dec
or
(bad)
add
sub
outs
cmp
retf
int3
fst
xchg
jmp
inc
push
push
dec
push
pop
or
pop
push
pop
pop
inc
dec
pop
dec
sub
and
xor
ss
jmp
out
or
or
or
mov
sub
xor
sub
dec
(bad)
(bad)
test
imul
imul
pop
add
imul
cmp
add
ss
cmp
outs
inc
push
dec
sbb
(bad)
ret
fsub
(bad)
nop
test
add
lods
cmps
scas
stos
mov
fimul
nop
cdq
test
shr
ret
jmp
in
in
out
fild
aam
add
sub
sub
sub
cli
adc
shr
icebp
ds
cmp
scas
mov
mov
mov
mov
mov
sub
movs
stos
movs
mov
xor
or
out
out
in
(bad)
jmp
data16
push
pop
jns
fidivr
ror
movs
lods
mov
stc
add
bound
pop
inc
inc
into
(bad)
lds
cmps
mov
gs
arpl
das
cmp
cmp
and
(bad)
sar
aam
mov
aam
mov
mov
mov
rol
int3
sti
imul
call
jl
sbb
mov
mov
lods
xchg
enter
dec
pop
dec
dec
inc
out
xlat
ret
iret
iret
jns
push
jnp
dec
imul
push
push
dec
inc
push
es
inc
adc
sub
sbb
cmp
add
or
fxch
fisttp
inc
ins
inc
dec
inc
dec
pop
sub
inc
pop
dec
sub
aaa
cmp
vpaddb
mov
out
add
outs
sub
stos
nop
mov
sub
xor
test
call
je
or
bound
adc
sub
and
sbb
ins
jb
je
mov
rcl
shl
fcmovnu
scas
mov
mov
mov
stos
mov
xchg
mov
mov
lahf
call
in
(bad)
int
mov
out
(bad)
aad
out
retf
int3
fadd
fldcw
inc
sub
sbb
xor
loop
jmp
or
adc
sbb
mov
popf
xchg
nop
nop
xchg
test
pop
xchg
cmps
mov
sub
add
xor
jmp
(bad)
(bad)
adc
adc
adc
add
ins
jge
push
jbe
ins
ins
int
(bad)
retf
fidivr
mov
pop
inc
pop
push
inc
xor
into
iret
aam
sar
mov
call
gs
jp
xor
and
or
(bad)
mov
xchg
xchg
loopne
std
fcmovb
test
retf
stc
sbb
(bad)
add
mov
mov
test
jns
dec
dec
push
pop
dec
xlat
(bad)
mov
(bad)
push
sbb
jge
dec
push
pop
push
js
js
push
push
dec
inc
push
push
inc
pusha
xor
add
or
cmp
pop
or
fst
fstp
fxch
fnstsw
inc
dec
inc
inc
dec
pop
dec
outs
inc
pop
outs
pop
cmp
aaa
or
loope
cld
in
cli
mov
cli
add
add
mov
mov
and
and
retf
mov
test
popa
imul
sub
pop
sub
cmp
pop
cmp
push
aam
(bad)
(bad)
cli
fcom
ret
mov
adc
adc
mov
lods
mul
call
iret
fsub
in
enter
mov
enter
fadd
enter
sub
inc
and
neg
shl
icebp
out
or
sbb
and
adc
scas
mov
lods
(bad)
xchg
test
mov
(bad)
popf
mov
mov
das
ss
mov
iret
loop
sti
in
pop
add
add
packssdw
imul
push
rcl
(bad)
mov
scas
mov
pop
jns
inc
mov
fdiv
mov
xchg
mov
push
jnp
jne
es
or
(bad)
fsubp
(bad)
popf
xchg
mov
sbb
cld
repz
(bad)
sti
neg
in
sbb
or
cwde
xchg
xchg
(bad)
xchg
lods
mov
movs
lods
dec
cmp
push
pop
push
push
fld
mov
shl
sbb
jns
inc
push
push
pop
push
pop
push
pop
dec
jb
pop
push
es
inc
push
add
or
or
and
or
fstp
mov
aad
dec
push
push
arpl
push
inc
dec
pop
pop
dec
sub
and
cmp
jmp
sti
mov
out
clc
pop
add
sbb
add
cmp
xchg
sahf
xchg
ds
cmp
and
(bad)
int3
test
gs
imul
add
add
add
adc
cmp
cmp
jle
pop
push
fcmovne
icebp
(bad)
shl
rcl
mov
test
lods
lods
mov
popf
cdq
fwait
xchg
fcomp
(bad)
fmul
lods
retf
stc
stc
out
out
out
jmp
(bad)
fstp
sub
sub
div
out
ret
sbb
sbb
or
mov
test
xchg
xchg
cdq
fwait
out
fwait
mov
mov
jmp
cmp
inc
out
sti
mov
mov
mov
popw
data16
data16
pusha
sbb
mov
mov
lock
in
inc
xor
xor
sar
mov
mov
cld
shl
pop
bound
jl
cmp
dec
dec
retf
mov
mov
mov
mov
repz
repz
repz
mov
mov
mov
call
test
jl
jl
(bad)
mov
mov
mov
mov
cld
enter
enter
cmp
pop
cmp
mov
call
sbb
sbb
cmp
cmp
cmp
push
es
adc
adc
pusha
pop
pusha
push
outs
pop
outs
push
outs
push
outs
pop
mov
mov
adc
sub
dec
sub
sbb
pop
pusha
pop
ins
pop
popa
mov
mov
outs
or
dec
call
dec
sub
dec
je
sub
sahf
test
push
fs
or
imul
add
dec
sub
adc
ja
je
push
stos
loopne
fsubp
(bad)
jecxz
jecxz
jecxz
out
out
out
out
fidiv
fdivrp
div
stc
(bad)
div
lods
xchg
lods
icebp
lods
mov
jmp
jmp
lods
ret
lods
enter
pop
inc
sub
and
mov
pop
xor
sbb
jg
into
mov
into
movs
loopne
loopne
loopne
loopne
out
xchg
out
sahf
out
mov
mov
inc
in
(bad)
inc
dec
inc
inc
push
or
mov
mov
mov
mov
or
add
sbb
adc
jns
fdivr
mov
(bad)
sahf
retf
pop
xor
or
adc
mov
jmp
add
pop
jnp
jle
addr16
sub
dec
sub
mov
mov
cwde
enter
xchg
repz
repz
repz
ficomp
out
call
cmp
mov
xchg
(bad)
(bad)
rcr
enter
cmp
push
cmp
sbb
xlat
mov
xchg
sbb
sbb
sbb
cmp
cmp
pop
add
push
add
pusha
inc
pusha
pop
pusha
inc
outs
add
dec
outs
or
mov
int3
mov
push
and
inc
sub
sub
pop
jl
xor
mov
lods
outs
add
outs
dec
outs
add
sahf
(bad)
(bad)
xchg
call
dec
imul
test
mov
or
or
or
or
imul
imul
add
dec
and
dec
jb
sbb
cmp
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
fidivr
(bad)
xchg
neg
lods
leave
lods
ret
lods
les
out
lods
lods
lods
mov
fild
inc
xor
xor
and
rol
movq
jg
jg
into
mov
into
mov
loopne
loopne
out
int
call
lds
inc
arpl
inc
xor
mov
mov
data16
inc
inc
sbb
jns
jnp
jo
pushf
mov
fcmove
movs
retf
stos
retf
push
xor
mov
call
sar
pop
jbe
arpl
jle
and
dec
dec
mov
fdiv
into
repz
mov
mov
mov
mov
call
(bad)
jl
jl
imul
mov
enter
enter
cmp
sub
cmp
int3
mov
retf
sbb
sbb
jno
cmp
push
cmp
add
or
add
pusha
or
pusha
adc
outs
push
outs
dec
outs
sbb
enter
push
and
and
and
inc
sub
pop
jl
cmp
pop
cmp
in
mov
outs
movd
call
dec
imul
test
xchg
or
or
adc
or
imul
add
imul
and
dec
cmp
sbb
arpl
outs
mov
mov
mov
xchg
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
nop
fidiv
not
lods
int
fsubr
mov
lods
ret
lods
mov
addr16
xor
sub
repz
or
jg
into
jmp
loopne
loopne
loopne
loopne
out
xchg
mov
xchg
(bad)
vpextrw
lds
sub
inc
cs
mov
mov
add
pushw
inc
sbb
jbe
cmp
jge
fwait
mov
fmulp
out
retf
out
retf
adc
or
popf
out
mov
enter
mov
mov
pop
inc
pop
jbe
jnp
ds
sub
dec
and
fbstp
xchg
repz
repz
mov
mov
mov
mov
call
call
jl
jl
(bad)
in
in
mov
call
enter
cmp
cmp
shl
out
jns
push
jne
jg
pop
cmp
jge
add
add
es
ss
punpcklbw
adc
outs
cmp
or
fnstcw
push
and
inc
sub
sub
and
pop
pop
pop
pop
pop
pop
pop
bound
out
out
outs
sbb
outs
movd
call
dec
and
dec
sub
and
test
or
or
or
imul
push
imul
imul
cmp
dec
dec
sbb
sbb
or
jp
les
fsub
xchg
jecxz
jecxz
jecxz
jmp
mov
xchg
fidivr
(bad)
shl
not
lods
shr
jecxz
out
enter
les
and
inc
inc
mov
sub
out
and
and
jg
into
scas
into
xchg
into
mov
loopne
loopne
loopne
out
popf
out
mov
pushf
out
cwde
lds
(bad)
cmp
inc
sub
inc
mov
out
out
data16
pcmpgtd
data16
jns
inc
sbb
jno
retf
mov
fmulp
movs
retf
lods
retf
inc
xor
xor
pop
mov
cmp
cmps
shr
pop
pop
sbb
pop
inc
pop
fs
das
dec
cmp
dec
dec
mov
shl
int
repz
cld
mov
call
out
jl
jl
jl
jl
retf
repnz
jmp
enter
enter
cmp
dec
cmp
popf
mov
lahf
sbb
sbb
sbb
sbb
cmp
pop
cmp
sub
sbb
jbe
add
inc
pusha
adc
pusha
adc
outs
dec
outs
outs
jb
outs
push
mov
pushf
mov
inc
and
and
pop
sub
pop
pop
dec
push
pop
xor
mov
mov
mov
mov
outs
add
outs
outs
popa
push
call
jmp
dec
ds
jae
dec
outs
sbb
test
ins
or
or
or
imul
push
imul
inc
dec
aaa
dec
ja
jns
sbb
add
imul
lds
test
mov
(bad)
jecxz
out
out
mov
out
fidiv
test
neg
lods
enter
fimul
jmp
lods
retf
lods
les
daa
inc
and
and
loop
or
sbb
jg
into
lods
into
mov
loopne
loopne
loopne
ret
nop
out
pushf
out
sub
movs
lds
inc
sub
and
mov
mov
data16
inc
data16
sbb
sbb
outs
mov
sar
scas
retf
xchg
xor
pop
xor
adc
fidivr
shl
shl
pop
xor
fs
das
dec
fs
cmp
mov
mov
mov
mov
repz
repz
mov
mov
mov
call
sar
sub
xor
not
xchg
(bad)
cdq
(bad)
cwde
enter
enter
cmp
cmp
jns
sbb
out
sbb
xor
cmp
cmp
push
es
es
es
pusha
punpcklbw
pusha
adc
sbb
outs
add
retf
and
and
sub
sub
sub
(bad)
pop
pop
pop
sub
pop
pop
mov
mov
outs
outs
jns
(bad)
mov
call
dec
sub
sub
test
or
or
or
imul
sbb
imul
or
dec
cmp
sbb
je
jp
jg
cli
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
fisubr
fidivr
div
mov
ret
lods
retf
lods
fimul
mov
stos
lods
in
ret
lods
fldcw
sub
and
hlt
jg
jg
jg
jg
into
stos
into
out
into
or
loopne
loopne
loopne
loopne
out
pushf
out
into
out
shr
fadd
in
(bad)
lds
inc
inc
push
add
mov
mov
adc
adc
sbb
jl
sbb
push
mov
mov
retf
stos
retf
pop
xor
xor
xor
movs
out
mov
repz
rcr
pop
push
pop
outs
dec
dec
pop
sbb
dec
sub
mov
mov
repz
repz
mov
stos
out
shl
call
sub
adc
mov
(bad)
scas
enter
enter
cmp
cmp
dec
mov
jmp
sbb
sbb
cmp
pop
cmp
push
es
es
es
es
xor
pusha
push
pusha
adc
sbb
outs
sbb
mov
out
and
jle
push
and
pop
sub
pop
sub
sub
pop
pop
push
adc
std
mov
outs
sbb
add
xchg
call
dec
and
aas
dec
sub
test
test
or
or
or
imul
dec
dec
or
dec
aas
dec
and
je
imul
mov
clc
mov
mov
jecxz
jecxz
jecxz
out
mov
xchg
and
out
fidiv
fimul
mov
lods
fisubr
mov
mov
mov
lods
lea
arpl
inc
arpl
sub
jg
jg
into
mov
into
out
loopne
loopne
loopne
loopne
out
into
out
into
out
into
out
into
(bad)
inc
in
lds
inc
adc
inc
pusha
mov
mov
inc
inc
sbb
sbb
sbb
sbb
mov
test
popf
retf
test
adc
jb
inc
xor
retf
mov
into
shl
shl
shl
shl
pop
aaa
pop
aaa
pop
aaa
pop
sub
push
or
mov
mov
mov
mov
repz
xchg
movs
in
sti
call
adc
sbb
stc
(bad)
movs
(bad)
mov
enter
enter
cmp
pop
cmp
aad
(bad)
mov
outs
sbb
sbb
sbb
cmp
cmp
cmp
imul
dec
pusha
punpcklbw
pusha
or
je
outs
cmp
outs
sbb
fnstsw
inc
and
push
sub
sub
jbe
sub
pop
sub
mov
mov
mov
outs
or
call
call
dec
dec
pop
add
fisubr
jl
imul
imul
add
dec
cmp
popa
dec
cmp
arpl
outs
sbb
or
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
icebp
cmps
fisubr
fidiv
test
ret
test
mov
mov
mov
mov
lods
lea
lea
inc
arpl
inc
arpl
mov
jg
jg
jg
out
into
stos
into
mov
loopne
loopne
loopne
out
into
out
into
out
into
out
into
(bad)
in
in
in
pusha
inc
pusha
inc
jp
pusha
mov
mov
data16
add
sbb
sbb
jbe
lahf
mov
lahf
retf
jmp
xor
and
push
mov
fnstcw
rcl
int3
fist
inc
push
dec
push
or
pop
dec
sbb
dec
jge
add
out
nop
mov
mov
repnz
mov
repnz
mov
mov
mov
call
(bad)
jge
jge
jge
jge
xlat
data16
inc
xlat
mov
leave
mov
push
leave
jp
lods
cmp
mov
int3
mov
jb
xchg
sbb
push
cmp
outs
daa
push
daa
stos
daa
dec
daa
dec
popa
push
popa
lds
inc
and
pop
outs
cld
outs
push
outs
add
jmp
and
scas
sub
inc
sub
(bad)
pop
pop
jne
pop
ret
mov
mov
outs
jmp
adc
outs
adc
jae
gs
jo
stos
dec
xlat
dec
loopne
xor
sbb
test
cmp
xor
push
push
push
dec
cs
int3
dec
add
sbb
sbb
jne
ds
mov
nop
lock
loop
loop
loop
out
out
out
out
fistp
test
cmps
fistp
test
cmps
ret
mov
mov
mov
lods
lods
xchg
or
inc
das
inc
cmp
sar
jle
jle
jle
iret
scas
iret
dec
iret
(bad)
iret
cmps
loope
loope
loopne
jmp
mov
xchg
les
les
inc
daa
inc
sbb
mov
mov
sbb
sbb
mov
retf
shr
mov
cli
xor
adc
xor
jl
sar
sar
shl
pop
push
pop
pop
inc
fs
cs
es
es
mov
aam
xor
repz
nop
mov
mov
mov
call
hlt
jl
jl
jl
jl
(bad)
movs
(bad)
sahf
(bad)
mov
enter
enter
cmp
sbb
cmp
iret
mov
jns
fs
cmp
push
cmp
push
arpl
pop
es
pusha
adc
and
outs
or
sbb
mov
fistp
push
and
dec
sub
inc
sub
sub
pop
cmp
mov
mov
mov
mov
outs
sbb
outs
outs
add
nop
call
or
dec
dec
or
movs
out
fsubr
ins
or
or
add
sub
imul
sbb
dec
dec
inc
adc
or
outs
sbb
ja
inc
mov
mov
fninit
xchg
jecxz
jecxz
jecxz
mov
ret
push
add
dec
sub
inc
stos
mov
movs
sbb
repz
stos
mov
test
inc
inc
push
push
pop
inc
push
dec
xchg
test
ja
jg
(bad)
leave
enter
iret
repnz
in
loopne
hlt
out
sti
cld
imul
cld
cli
jmp
(bad)
inc
dec
inc
push
push
inc
dec
mov
mov
bound
je
sbb
sbb
sbb
sbb
mov
retf
retf
retf
fcmovbe
retf
xor
xor
xor
xchg
mov
ror
aad
or
add
sbb
dec
pop
sbb
mov
mov
xchg
lock
loope
lock
loope
mov
mov
xchg
fwait
xchg
sahf
call
jge
jb
jl
xlat
fcom
(bad)
aam
retf
into
enter
mov
cmp
cmp
cmp
cmp
stos
cmps
stos
sbb
dec
pop
sbb
add
cmp
xor
sub
xor
sub
sub
outs
outs
outs
outs
arpl
outs
imul
popa
push
ins
mov
mov
mov
daa
aas
daa
daa
and
sub
and
sub
daa
and
pop
push
push
push
push
pop
test
mov
pusha
pusha
imul
idiv
stc
in
mov
stc
pop
adc
pop
sub
stos
scas
mov
pusha
(bad)
push
jl
or
push
ins
pop
xor
pop
iret
iret
inc
sbb
sbb
mov
mov
test
in
arpl
jecxz
(bad)
call
sti
jecxz
(bad)
fcmovnu
fadd
(bad)
shl
div
(bad)
(bad)
clc
repz
lods
stos
movs
add
xor
test
inc
inc
dec
dec
dec
inc
inc
inc
mov
or
out
jnp
fmul
enter
fsub
in
repnz
jl
into
out
out
cld
outs
dec
jmp
int
ret
push
rcr
pusha
inc
push
jno
cdq
mov
sub
out
fs
fs
and
cmp
mov
mov
int
ret
ret
xlat
iret
fcomp
sbb
xor
mov
xlat
aad
push
arpl
aaa
adc
aaa
sbb
inc
inc
push
push
dec
inc
test
cmp
mov
mov
movs
xor
movs
movs
xor
mov
mov
fs
fs
(bad)
push
pop
mov
push
fsubr
int3
fimul
jno
cmp
jge
and
cmp
push
pop
add
or
xor
xor
jo
xor
and
cs
push
bound
jo
addr16
popa
dec
push
movs
mov
imul
add
and
sub
ins
and
sub
xor
inc
pop
push
dec
push
push
js
call
lea
data16
imul
out
repz
in
mov
inc
pop
add
mov
mov
sub
push
dec
adc
and
dec
push
jae
dec
push
dec
dec
inc
dec
dec
push
push
adc
sbb
pop
adc
xchg
mov
movs
repnz
loop
in
out
ret
in
mov
out
out
int3
xchg
ret
fcmovbe
(bad)
in
outs
(bad)
(bad)
clc
(bad)
lock
mov
ret
xchg
sub
or
dec
dec
dec
dec
push
push
ret
daa
mov
mov
(bad)
fld
arpl
iret
iret
fmul
movs
clc
out
call
cld
cmps
repnz
in
out
xlat
xchg
xlat
or
ror
dec
dec
push
push
adc
stos
sbb
jbe
jnp
jbe
je
add
cmp
adc
adc
lahf
mov
ret
xlat
iret
and
xor
gs
mov
mov
rcr
ffree
push
pop
sbb
jp
sub
das
dec
jb
sbb
repz
out
jmp
cmps
mov
mov
xchg
pushf
(bad)
mov
imul
rcl
(bad)
fcmovbe
rcl
fcmovb
int3
iret
leave
fcmovu
int3
aas
cmp
sub
cmp
ss
fimul
(bad)
outs
push
jg
outs
sbb
sub
cmp
je
pop
jp
dec
push
push
push
inc
push
es
ins
popa
pusha
addr16
or
mov
stc
enter
inc
inc
push
dec
dec
dec
sub
sub
sub
pop
pop
pop
pop
push
pop
mov
mov
imul
loope
sti
cmc
(bad)
push
dec
dec
dec
dec
push
dec
dec
mov
cmps
enter
pop
jne
js
push
inc
cmp
or
push
cmp
cmp
pop
imul
cdq
in
(bad)
(bad)
inc
ret
xchg
mov
xchg
mov
mov
hlt
popf
lods
mov
cmp
repz
ret
stc
out
aad
ret
in
dec
ret
into
enter
lods
inc
inc
push
push
pop
inc
push
inc
xchg
test
jle
jge
iret
into
into
into
into
retf
fcmovnu
vpmaxsw
loopne
out
icebp
outs
arpl
jmp
in
(bad)
xlat
inc
pop
ret
in
inc
push
rcr
pusha
inc
mov
xchg
xchg
je
push
jnp
or
sbb
mov
mov
(bad)
xlat
(bad)
xlat
fcomp
sub
xor
mov
mov
(bad)
rcl
ret
(bad)
rcl
sbb
sbb
adc
pop
retf
inc
dec
dec
dec
mov
mov
out
out
out
jecxz
jecxz
mov
mov
test
mov
cwde
xchg
jge
outs
cld
mov
(bad)
fcomp
les
aam
aam
call
cmp
cmp
stos
lods
movs
movs
lods
stos
adc
push
pushf
(bad)
aas
sbb
sub
and
cmp
cmp
bound
jb
fs
outs
jae
ins
jb
imul
xor
daa
cmp
sub
cmp
pop
pop
pop
dec
fmul
mov
push
ins
pusha
pusha
pusha
outs
outs
div
cwde
sub
dec
dec
dec
ins
dec
dec
mov
test
add
add
sub
gs
outs
jns
mov
iret
mov
not
sbb
adc
movs
ss
xchg
loop
(bad)
out
in
in
sti
jecxz
sbb
and
(bad)
ffreep
fcmovnbe
aam
repz
jmp
clc
clc
jmp
movs
mov
pop
pop
mov
test
inc
push
ret
arpl
xchg
add
ins
(bad)
(bad)
mov
leave
retf
ror
fsub
repnz
jmp
jmp
(bad)
(bad)
int
in
(bad)
fadd
inc
dec
dec
pop
inc
dec
xchg
mov
sub
bound
out
pop
cmp
or
lahf
mov
mov
retf
div
adc
and
mov
mov
xlat
into
fstp
fstp
push
xchg
push
adc
push
sbb
dec
dec
inc
inc
dec
dec
mov
mov
mov
std
out
std
loope
popf
cmps
xor
xchg
xchg
jb
jb
outs
std
dec
popa
fcomp
fcomp
fcomp
(bad)
rol
aad
rcl
xor
xor
ds
cmp
lods
stos
stos
movs
mov
adc
sbb
xor
aaa
aaa
aaa
aaa
sub
sub
push
daa
and
fs
popa
push
popa
addr16
popa
popa
imul
mov
mov
out
and
aas
sub
and
sub
xor
xor
push
push
push
dec
jne
xchg
xchg
pusha
data16
div
stc
(bad)
in
jle
inc
inc
dec
dec
pop
int3
push
mov
mov
scas
adc
add
add
add
jmp
jns
jle
sbb
dec
inc
adc
ficom
push
adc
mov
mov
scas
loope
jecxz
loope
sti
out
out
dec
jecxz
out
pop
jb
aam
int3
pop
inc
push
icebp
(bad)
clc
clc
clc
mov
stos
movs
movs
test
cdq
stos
cmps
mov
mov
inc
push
ret
sahf
xchg
add
test
dec
bound
jno
retf
fmul
fmul
ret
call
out
in
cld
outs
sub
in
cld
cdq
ror
xlat
movs
ror
push
and
dec
inc
push
sub
pop
ins
addr16
bound
sbb
pusha
sbb
sbb
ret
mov
aas
mov
iret
retf
ds
xor
cmp
and
mov
rcr
aad
rcl
into
adc
adc
push
or
pop
dec
dec
dec
pop
retf
outs
mov
mov
mov
icebp
sti
out
sti
mov
test
xchg
xchg
xchg
xchg
xchg
jp
jge
(bad)
push
mov
(bad)
dec
mov
ret
mov
sub
cmps
movs
mov
sbb
push
pushf
in
cmp
cmp
mov
xor
cmps
and
addr16
jb
sbb
imul
mov
mov
cwde
and
and
cmp
sub
sub
sub
sub
and
pop
pop
push
inc
pop
pop
mov
nop
xor
push
jae
out
sti
(bad)
(bad)
icebp
out
dec
dec
dec
push
pop
dec
inc
inc
cmps
mov
mov
adc
add
push
ins
fs
arpl
outs
inc
inc
inc
inc
inc
inc
push
inc
adc
push
adc
or
movs
aaa
and
icebp
bound
out
(bad)
hlt
xlat
(bad)
(bad)
rcl
int3
jmp
out
repz
imul
in
lock
scas
mov
stos
mov
cwde
or
xchg
mov
dec
push
jp
jp
xchg
mov
xchg
inc
outs
js
jno
bound
(bad)
mov
pusha
and
loopne
out
out
out
out
out
lock
out
(bad)
lds
movs
xor
das
cs
jmp
in
(bad)
stc
or
adc
popa
cs
sub
sub
mov
in
aam
mov
test
pop
push
pop
push
inc
adc
xchg
std
xchg
mov
(bad)
cmp
pop
pop
pop
inc
imul
dec
dec
dec
dec
dec
(bad)
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
lods
test
dec
pop
push
dec
pop
(bad)
(bad)
(bad)
iret
iret
mov
jecxz
sbb
pop
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
fmul
enter
cmp
mov
mov
sbb
sbb
cmp
mov
es
pusha
popa
pusha
pusha
pusha
pusha
pusha
daa
outs
outs
outs
aaa
out
push
mov
and
and
jmp
sub
jbe
push
pop
sbb
pop
ror
mov
outs
and
outs
and
(bad)
(bad)
inc
adc
dec
dec
dec
dec
dec
dec
dec
dec
test
test
push
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
repz
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
fidiv
(bad)
div
div
mul
lods
ret
lods
out
jmp
dec
ret
lods
lods
lods
lods
lods
inc
inc
repz
imul
add
adc
adc
jg
jg
into
mov
into
mov
xchg
(bad)
loopne
loopne
in
out
out
out
out
fsubrp
cmc
(bad)
cmc
(bad)
je
and
inc
inc
inc
scas
mov
mov
or
add
sbb
sbb
sbb
mov
iret
mov
call
xor
pop
xor
mov
lds
shl
pop
inc
pop
jl
xor
dec
das
dec
push
in
aam
shl
pushf
repz
repz
repz
mov
call
push
jl
jl
jl
jl
(bad)
nop
(bad)
mov
enter
enter
cmp
push
cmp
xlat
mov
int
sbb
sbb
dec
sbb
sbb
cmp
pop
cmp
cmp
es
es
or
pusha
add
outs
sbb
outs
xlat
mov
mov
and
and
sbb
pop
sub
sub
sub
pop
pop
pop
adc
mov
mov
mov
mov
outs
movd
outs
and
call
(bad)
cmp
dec
and
dec
shr
test
imul
imul
imul
dec
sub
dec
jp
ja
pop
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
ficom
ficom
not
lods
lds
mov
mov
mov
lods
lods
lods
fsubr
and
inc
ss
call
sub
sbb
jg
into
(bad)
into
iret
into
sahf
into
xchg
loopne
loopne
loopne
loopne
out
call
lds
lds
inc
inc
inc
jbe
outs
inc
mov
mov
pop
data16
sbb
pop
sbb
imul
mov
sar
pushf
retf
inc
xor
pop
xor
sar
mov
jecxz
std
shl
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
fwait
mov
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
out
loop
out
out
outs
shr
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
cs
dec
push
cs
dec
push
stc
aas
inc
das
call
call
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
cmp
cmp
cmp
cmp
mov
mov
sbb
sbb
sbb
cmp
cmp
cmp
cmp
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
outs
outs
outs
outs
outs
outs
outs
outs
mov
mov
and
and
and
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
outs
outs
outs
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
test
test
or
or
or
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
out
out
out
out
(bad)
(bad)
(bad)
(bad)
div
div
div
div
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
jg
jg
jg
into
into
into
into
into
into
into
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
inc
inc
inc
inc
inc
inc
inc
mov
mov
data16
sbb
sbb
sbb
mov
mov
retf
retf
xor
xor
xor
xor
mov
mov
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
repz
mov
mov
mov
stc
aas
inc
das
add
add
inc
inc
pmulhw
pcmpgtw
pmullw
paddsb
push
punpckhbw
paddusw
punpckhdq
packuswb
pop
psubsw
punpckhwd
pcmpgtw
psrlw
jmp
jno
out
xchg
mov
aaa
add
xchg
xchg
out
addr16
xchg
imul
outs
aam
ja
out
cdq
cwde
pop
pop
paddw
pmulhw
paddsw
paddw
push
psraw
pcmpeqd
psrlq
jmp
sbb
jmp
cmp
xor
punpckhbw
paddusw
punpckhdq
packuswb
pop
psubsw
punpckhwd
pcmpgtw
psrlw
ret
or
xor
inc
fwait
(bad)
pushf
nop
jb
mov
sbb
test
shl
add
push
lock
paddw
pmulhw
paddsw
paddw
sub
psraw
pcmpeqd
psrlq
jmp
xchg
shr
cmp
(bad)
mov
adc
punpckhbw
paddusw
punpckhdq
packuswb
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
call
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
psubsw
punpckhwd
pcmpgtw
psrlw
or
paddw
pmulhw
paddsw
paddw
test
jne
psraw
pcmpeqd
psrlq
jmp
leave
repz
xchg
mov
mov
je
aad
mov
clc
shl
call
cwde
fild
ret
jle
arpl
push
punpckhbw
paddusw
punpckhdq
packuswb
pop
psubsw
punpckhwd
pcmpgtw
psrlw
pop
paddw
pmulhw
paddsw
paddw
add
psraw
pcmpeqd
psrlq
jmp
in
push
aas
push
jmp
punpckhbw
paddusw
punpckhdq
packuswb
psubsw
punpckhwd
pcmpgtw
psrlw
push
paddw
pmulhw
paddsw
paddw
pop
psraw
pcmpeqd
psrlq
jmp
or
add
call
punpckhbw
paddusw
punpckhdq
packuswb
push
psubsw
punpckhwd
pcmpgtw
psrlw
pop
paddw
pmulhw
paddsw
paddw
psraw
pcmpeqd
psrlq
jmp
xchg
jle
bswap
punpckhbw
paddusw
punpckhdq
packuswb
rdtsc
paddusw
psubusb
psubusb
psubsb
fld
psllw
jmp
inc
push
mov
psrlw
packssdw
fnop
psubb
psubsb
psrlw
loop
pmulhw
psubusb
psrad
punpckhbw
jmp
punpcklwd
por
jmp
je
(bad)
lock
xchg
paddb
pop
psrad
punpcklwd
pcmpgtw
packsswb
adc
pcmpgtb
paddusw
punpcklbw
test
jne
paddsb
packsswb
packssdw
pand
psubd
punpckhbw
packsswb
inc
pcmpeqd
pmaddwd
punpckhbw
pand
push
psrld
packuswb
pandn
punpckldq
xor
psrad
paddw
psubsw
psllq
pop
paddusw
punpcklbw
paddsb
cmp
jne
packsswb
packssdw
pand
mov
psubd
punpckhbw
packsswb
pcmpeqd
push
pmaddwd
punpckhbw
pand
psrld
pop
packuswb
pandn
punpckldq
psrad
xor
paddw
psubsw
psllq
dec
paddusw
punpcklbw
paddsb
packsswb
dec
packssdw
pand
psubd
dec
punpckhbw
packsswb
pcmpeqd
pmaddwd
dec
punpckhbw
pand
psrld
packuswb
xor
pandn
punpckldq
psrad
paddw
call
psubsw
psllq
paddusw
push
punpcklbw
paddsb
packsswb
packssdw
cmp
jne
mov
pand
psubd
punpckhbw
add
packsswb
pcmpeqd
pmaddwd
punpckhbw
mov
pand
psrld
packuswb
pandn
add
punpckldq
psrad
paddw
psubsw
call
psllq
paddusw
punpcklbw
mov
paddsb
packsswb
packssdw
push
pand
psubd
punpckhbw
packsswb
mov
pcmpeqd
pmaddwd
punpckhbw
pand
sub
pcmpgtd
psrlq
psllw
push
psllw
paddw
punpckhwd
psllw
push
psubusb
paddsw
paddw
pcmpeqw
push
paddusb
pmulhw
punpckhwd
pcmpeqb
push
psubw
psrlq
psllw
push
psllw
paddw
punpckhwd
psllw
push
psubusb
paddsw
paddw
pcmpeqw
push
paddusb
pmulhw
punpckhwd
pcmpeqb
push
psubw
psrlq
psllw
mov
psllw
paddw
punpckhwd
psllw
add
psubusb
paddsw
paddw
pcmpeqw
push
paddusb
pmulhw
punpckhwd
pcmpeqb
sub
psubw
psrlq
psllw
push
psllw
paddw
punpckhwd
psllw
push
psubusb
paddsw
paddw
pcmpeqw
call
paddusb
pmulhw
punpckhwd
pcmpeqb
mov
psubw
psrlq
psllw
mov
psllw
paddw
punpckhwd
psllw
add
psubusb
paddsw
paddw
pcmpeqw
mov
paddusb
pmulhw
punpckhwd
pcmpeqb
add
psubw
psrlq
psllw
call
psllw
paddw
punpckhwd
psllw
push
psubusb
paddsw
paddw
pcmpeqw
push
paddusb
pmulhw
punpckhwd
pcmpeqb
call
psubw
psrlq
psllw
psllw
paddw
punpckhwd
psllw
psubusb
paddsw
paddw
pcmpeqw
paddusb
pmulhw
punpckhwd
pcmpeqb
psubw
psrlq
psllw
psllw
paddw
punpckhwd
psllw
psubusb
paddsw
paddw
pcmpeqw
mov
paddusb
pmulhw
punpckhwd
pcmpeqb
add
psubw
psrlq
psllw
mov
psllw
paddw
punpckhwd
psllw
add
paddd
paddb
paddsw
punpckhdq
call
psubb
jmp
and
ja
retf
repz
ins
xchg
paddw
paddsw
jmp
packssdw
packsswb
pslld
psrad
pop
psubusb
punpckhbw
pcmpeqb
punpcklwd
push
psrlw
paddusw
pcmpgtd
pandn
push
paddw
psllq
punpcklbw
psrld
push
pand
pxor
punpckhbw
movq
call
packssdw
paddw
psrlq
pcmpeqb
pop
punpcklwd
psrlw
paddusw
pcmpgtd
cmp
jl
pandn
paddw
psllq
punpcklbw
mov
psrld
pand
pxor
punpckhbw
sub
movq
packssdw
paddw
psrlq
mov
pcmpeqb
punpcklwd
psrlw
paddusw
sub
pcmpgtd
pandn
paddw
psllq
call
punpcklbw
psrld
pand
pxor
xor
punpckhbw
movq
packssdw
paddw
xor
psrlq
pcmpeqb
punpcklwd
psrlw
add
paddusw
pcmpgtd
pandn
paddw
push
psllq
punpcklbw
psrld
pand
mov
pxor
punpckhbw
movq
packssdw
push
paddw
psrlq
pcmpeqb
punpcklwd
push
psrlw
paddusw
pcmpgtd
pandn
push
paddw
psllq
punpcklbw
psrld
call
pand
pxor
punpckhbw
movq
jmp
packssdw
paddw
psrlq
pcmpeqb
pop
punpcklwd
psrlw
paddusw
pcmpgtd
add
pandn
paddw
psllq
punpcklbw
push
psrld
pand
pxor
punpckhbw
pop
movq
packssdw
paddw
psrlq
call
paddd
psraw
psrlw
cmp
jne
packssdw
psrld
psubsb
packssdw
mov
pslld
psubd
pcmpgtb
punpckhdq
jmp
paddw
paddsw
pcmpeqw
pslld
jo
into
mov
xchg
out
push
mov
popa
std
sub
repz
adc
shr
add
pop
nop
idiv
sti
mov
lods
movs
xor
sub
stc
jns
xor
call
psubd
pcmpgtb
punpckhdq
paddw
mov
paddsw
pcmpeqw
pslld
psubd
mov
pcmpgtb
punpckhdq
paddw
paddsw
inc
pcmpeqw
pslld
psubd
pcmpgtb
mov
punpckhdq
paddw
paddsw
pcmpeqw
mov
pslld
psubd
pcmpgtb
punpckhdq
ret
iret
cmp
mov
xchg
mov
mov
jge
mov
and
sbb
data16
pop
xlat
and
paddw
paddsw
pcmpeqw
pslld
mov
psubd
pcmpgtb
punpckhdq
paddw
push
paddsw
pcmpeqw
pslld
psubd
pop
pcmpgtb
punpckhdq
paddw
paddsw
mov
pcmpeqw
pslld
psubd
pcmpgtb
mov
punpckhdq
paddw
paddsw
pcmpeqw
push
pslld
psubd
pcmpgtb
punpckhdq
mov
paddw
paddsw
pcmpeqw
pslld
mov
psubd
pcmpgtb
punpckhdq
paddw
paddsw
pcmpeqw
pslld
psubd
cmp
jne
pcmpgtb
punpckhdq
paddw
paddsw
pcmpeqw
pslld
psubd
pcmpgtb
cmp
jne
punpckhdq
paddw
paddsw
pcmpeqw
pop
pslld
psubd
pcmpgtb
punpckhdq
mov
paddw
paddsw
pcmpeqw
pslld
mov
psubd
pcmpgtb
punpckhdq
paddw
mov
paddsw
pcmpeqw
pslld
psubd
add
pcmpgtb
punpckhdq
paddw
paddsw
mov
pcmpeqw
pslld
psubd
pcmpgtb
mov
punpckhdq
paddw
paddsw
pcmpeqw
add
pslld
psubd
pcmpgtb
punpckhdq
mov
paddw
paddsw
pcmpeqw
pslld
add
psubd
pcmpgtb
punpckhdq
paddw
lods
paddsw
pcmpeqw
pslld
psubd
test
je
pcmpgtb
punpckhdq
paddw
paddsw
add
pcmpeqw
pslld
psubd
pcmpgtb
mov
punpckhdq
paddw
paddsw
pcmpeqw
cmp
jne
pslld
psubd
pcmpgtb
punpckhdq
mov
paddw
paddsw
pcmpeqw
pslld
cmp
jne
psubd
pcmpgtb
punpckhdq
paddw
mov
paddsw
pcmpeqw
pslld
psubd
xor
pcmpgtb
punpckhdq
paddw
paddsw
push
pcmpeqw
pslld
psubd
pcmpgtb
push
punpckhdq
paddw
paddsw
pcmpeqw
push
pslld
psubd
pcmpgtb
punpckhdq
push
paddw
paddsw
pcmpeqw
pslld
push
psubd
pcmpgtb
punpckhdq
paddw
push
paddsw
pcmpeqw
pslld
psubd
push
pcmpgtb
punpckhdq
paddw
punpckhdq
push
punpcklwd
pmaddwd
pcmpgtw
paddusb
call
psubd
psrlq
paddsb
psubsb
add
pxor
pmullw
psrlw
psrad
ret
push
(bad)
(bad)
push
push
popf
dec
mov
or
jl
dec
leave
dec
and
fmul
(bad)
int
jno
out
mov
aaa
add
xchg
xchg
out
addr16
xchg
imul
outs
aam
ja
out
cdq
cwde
pop
pop
fisttp
dec
xor
inc
fwait
(bad)
pushf
nop
jb
mov
sbb
test
shl
add
push
lock
shl
je
aad
mov
clc
shl
call
cwde
fild
loopne
movd
arpl
push
(bad)
call
(bad)
mov
repnz
leave
dec
and
fmul
mov
bound
mov
(bad)
bound
enter
inc
cmps
test
in
push
sub
ins
adc
add
inc
fsubr
xor
popa
dec
add
ins
dec
mov
and
jae
aaa
mov
outs
push
sub
imul
jb
and
gs
loopne
dec
xor
js
inc
(bad)
xor
imul
push
arpl
mov
and
xchg
lods
(bad)
xchg
adc
enter
mov
xchg
out
push
mov
popa
std
sub
repz
lds
shr
sbb
idiv
sti
mov
lods
movs
xor
sub
stc
cli
xor
pop
iret
cmp
mov
xchg
mov
dec
jp
jne
add
inc
ficomp
pop
data16
pop
xlat
and
scas
push
(bad)
(bad)
push
push
popf
dec
mov
or
repnz
leave
dec
and
fmul
mov
push
out
mov
aaa
add
xchg
xchg
out
addr16
xchg
imul
outs
aam
mov
pop
fisttp
dec
shl
int3
inc
fwait
(bad)
pushf
nop
jb
mov
sbb
test
fs
inc
loop
pusha
mov
fcmovnbe
jmp
jg
cmp
ss
call
push
mov
jge
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
cld
xchg
popa
dec
and
fdiv
int3
dec
rcr
mov
push
jge
es
jl
mov
cmp
mov
push
jge
sar
stos
call
cwde
retf
test
mov
push
jge
ss
jl
mov
mov
mov
push
jge
add
enter
clc
and
pop
out
push
test
push
daa
and
pop
jge
sub
ins
leave
mov
push
jge
ss
jl
mov
inc
jl
mov
push
jb
push
push
jge
sub
jns
adc
enter
shl
sbb
push
jge
and
jge
mov
push
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
xor
sbb
test
push
daa
and
push
jge
sub
loope
mov
cmp
adc
mov
jae
mov
les
mov
and
cs
jl
mov
push
daa
and
push
jge
sub
jne
mov
push
jge
imul
jb
outs
jns
enter
in
leave
push
sbb
jge
imul
jge
pop
push
jb
adc
enter
in
lods
and
xor
push
jg
mov
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
sub
enter
xchg
retf
aad
mov
daa
mov
mov
push
jb
sub
popf
leave
and
push
enter
inc
cs
enter
loope
push
and
out
cmp
jge
dec
pop
jnp
mov
sbb
inc
jb
enter
int
push
hlt
(bad)
repz
and
out
dec
xchg
test
mov
enter
mov
sbb
or
enter
int
push
hlt
(bad)
out
mov
push
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
sbb
inc
jae
enter
int
push
hlt
(bad)
jmp
xor
dec
retf
mov
push
jge
out
test
push
daa
and
jge
sub
ror
mov
mov
daa
and
jge
sub
jge
mov
mov
daa
and
jge
sub
imul
cmps
mov
daa
and
shl
mov
mov
daa
and
push
jge
sub
popa
leave
mov
mov
daa
and
rcr
mov
push
jge
sub
lea
push
pop
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
in
xchg
hlt
dec
imul
and
or
mov
and
jge
sub
jno
push
jns
mov
push
jge
(bad)
cmps
(bad)
push
jge
out
xchg
adc
mov
xchg
push
mov
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
neg
push
div
(bad)
sti
(bad)
test
lods
ror
mov
adc
rcl
mov
push
jge
lea
xchg
jae
push
jge
sub
(bad)
jecxz
test
lods
shl
retf
xchg
int3
mov
nop
repz
test
ror
retf
test
mov
div
scas
push
jge
retf
stos
jge
mov
push
jge
pop
push
jge
and
sub
push
jl
mov
push
jge
dec
or
mov
push
jge
in
(bad)
mul
add
popf
scas
aam
dec
mov
add
enter
pop
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
ret
jmp
xor
aad
not
scas
xor
pop
push
or
fbld
mov
push
cmp
mov
push
std
retf
mov
push
gs
les
xchg
lds
push
jl
mov
aas
jg
mov
stos
sub
gs
into
and
not
xchg
inc
enter
retf
out
xchg
ds
stc
push
sub
cmps
stos
dec
aaa
test
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
dec
sar
aas
jge
mov
push
sbb
lods
jge
es
aaa
pop
fs
(bad)
jecxz
sbb
push
jge
sub
test
or
jge
mov
push
sub
loope
or
sub
inc
inc
xchg
jno
push
sub
add
adc
xchg
dec
mov
clc
or
scas
jle
xchg
inc
popf
sub
add
inc
(bad)
mov
stc
js
cs
idiv
das
cdq
imul
mov
enter
fsubr
adc
jno
out
jno
mov
xchg
fidiv
cld
sub
jns
in
add
jge
sub
jno
pop
(bad)
mov
dec
bound
hlt
xchg
sbb
bound
xor
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
inc
push
fnsave
sbb
test
stc
mov
sbb
adc
js
xor
adc
stc
jbe
enter
int
pop
jge
sub
pop
and
aam
pop
enter
int3
leave
push
pop
enter
mov
pop
sar
push
(bad)
xor
stos
and
dec
jge
cli
fdiv
ror
enter
jmp
stos
add
test
push
daa
and
adc
dec
mov
xor
dec
lds
mov
mov
daa
inc
out
pop
xchg
scas
mov
mov
xchg
add
push
jge
inc
mov
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
sahf
sub
test
push
daa
and
mov
xchg
pop
adc
dec
sbb
enter
mov
dec
ss
aaa
pop
stos
xor
push
test
aas
cmp
enter
or
add
enter
or
stos
dec
aaa
mul
xor
push
jge
hlt
fadd
enter
mov
leave
mov
fidiv
rcr
andnps
leave
adc
jge
adc
jl
mov
stos
call
inc
es
jge
mov
stos
retf
push
jge
push
cmc
jge
mov
add
xchg
stos
sub
sub
pop
push
mov
sete
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
int3
sub
jne
xchg
stos
sub
and
jbe
mov
push
xor
(bad)
jno
mov
pop
sbb
enter
ret
mov
fidiv
into
lds
cdq
leave
push
neg
and
sbb
push
sbb
or
sbb
jns
psubusb
punpckhwd
(bad)
jno
inc
stc
pop
jle
cmps
push
neg
hlt
dec
(bad)
xor
push
jge
cli
xor
and
fsub
enter
jne
push
jge
mov
push
jge
out
pop
xchg
push
mov
dec
xchg
pop
stos
or
sub
jne
rcl
sbb
lods
jge
es
jbe
mov
std
jge
mov
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
cmps
fadd
inc
cld
inc
test
jge
and
aaa
xchg
stos
lods
dec
pop
push
jb
nop
pop
jge
sub
ins
dec
pusha
in
enter
int3
sub
or
xchg
sbb
inc
xchg
pop
stos
or
sub
jne
rcl
sbb
lods
jge
es
je
mov
push
pop
mov
push
dec
enter
fsub
add
xchg
stos
call
inc
es
enter
clc
mov
pop
sub
or
xchg
hlt
pop
pop
push
jge
sub
jns
inc
inc
jge
stc
mov
pop
enter
and
xchg
(bad)
push
cs
push
loope
enter
rcr
dec
out
jge
mov
pop
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
sub
aaa
or
pop
int3
sub
jge
lock
js
push
jge
pusha
test
neg
hlt
dec
pop
enter
xchg
jge
inc
add
enter
or
push
jge
lock
js
push
jge
pusha
push
jg
mov
stos
dec
aaa
hlt
dec
pop
enter
and
xchg
(bad)
push
cs
ds
enter
int3
mov
add
xchg
stos
sub
dec
retf
mov
push
jge
sub
jne
pop
loopne
enter
lahf
stos
stos
dec
aaa
hlt
dec
xchg
inc
mov
jge
leave
push
pop
out
rep
enter
jge
hlt
pop
cmp
add
mov
sub
jns
fimul
stc
mov
hlt
dec
daa
push
jge
dec
jecxz
enter
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
out
test
inc
out
push
xchg
or
mov
pop
fdivr
dec
mov
push
sub
jae
cmp
dec
jge
stc
mov
xchg
ret
mov
jge
icebp
fidiv
movs
repnz
lods
dec
pop
push
or
sub
or
mov
repnz
jge
mov
data16
jge
and
add
neg
xor
dec
mov
xchg
sub
add
not
pop
data16
sbb
pop
inc
jge
stc
mov
pop
enter
xor
xchg
or
mov
cmp
cmp
data16
jge
sar
mov
push
test
push
daa
and
in
jge
mov
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
out
(bad)
jae
add
jge
sti
aas
jge
hlt
pop
cmp
push
jb
adc
jge
sub
jns
or
jge
stc
mov
hlt
dec
das
push
jge
sub
enter
rcr
and
or
mov
mov
add
daa
mov
xor
dec
lods
imul
setne
retf
aad
enter
rcr
sub
jns
cmp
enter
cmp
fist
sub
jns
dec
inc
jge
stc
mov
hlt
dec
fist
sub
jns
mov
sar
leave
mov
push
jge
mov
enter
dec
mov
push
jge
inc
mov
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
adc
inc
pop
push
in
leave
mov
sub
ret
push
jge
lods
rcr
leave
mov
push
jge
sahf
test
enter
inc
mov
scas
nop
(bad)
lods
sar
leave
mov
push
mov
enter
into
mov
push
jge
sahf
nop
jnp
mov
push
jge
mov
shr
leave
mov
push
jge
cdq
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
repnz
outs
inc
mov
fidivr
mov
xchg
jb
daa
push
jge
sahf
ret
jge
arpl
add
cmps
push
jge
xlat
and
mov
push
or
inc
and
lods
shr
mov
push
mov
enter
dec
clc
push
jge
sahf
push
jge
and
cld
mov
(bad)
ret
push
jge
xlat
jno
leave
pop
shr
mov
push
jge
adc
jl
mov
push
jge
xor
jl
mov
stos
pop
enter
popf
fwait
pushf
mov
leave
and
jge
adc
jl
mov
push
jge
jnp
mov
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
arpl
(bad)
(bad)
mov
pop
loop
leave
mov
push
jge
pop
ret
mov
stos
and
loop
leave
mov
push
jge
pop
ret
mov
stos
add
jl
mov
shl
xor
stos
add
mov
fwait
leave
push
adc
aaa
aam
not
ss
jge
mov
and
push
pop
mov
leave
mov
push
jge
sub
jne
nop
stos
call
mov
pop
loop
leave
mov
push
jge
pop
ret
mov
push
jge
and
aaa
sar
mov
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
pop
ja
test
scas
cld
or
push
jge
lock
jl
adc
jl
mov
push
jge
cld
pop
cmp
rcl
mov
stos
and
sbb
cmp
lea
rcr
leave
mov
push
jge
sub
test
mov
jge
std
in
jae
mov
xor
aam
xor
fsubr
mov
mov
or
push
or
pop
fdivr
bt
enter
mov
aam
enter
mov
and
sub
push
jl
mov
push
jge
sub
jno
fs
js
mov
add
jge
dec
jle
enter
xchg
and
ja
push
jge
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
cld
dec
and
add
push
jge
sub
jno
fs
jg
mov
inc
jge
sti
fdivr
or
push
jge
sub
xchg
retf
hlt
test
stos
sbb
pop
sbb
pop
sbb
jo
jne
inc
movs
(bad)
push
jge
sub
inc
dec
pop
push
or
sub
and
mov
not
cmps
push
jge
mov
test
mov
mov
cmp
sub
push
sub
jno
pop
(bad)
mov
pop
mov
adc
and
push
jge
mov
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
jecxz
jle
xor
xchg
ins
mov
out
push
iret
mov
rcr
push
sub
test
int
adc
enter
leave
jnp
add
inc
jmp
js
loop
jge
xchg
pop
inc
ss
push
hlt
xor
fsub
inc
movs
and
mov
push
pop
enter
enter
enter
sahf
pop
add
dec
arpl
enter
test
add
sub
test
xchg
sub
adc
mov
mov
xor
xor
push
jge
out
cmp
jge
dec
aam
aaa
pop
fdivr
shl
int
push
jge
mov
xchg
or
popa
push
das
mov
xchg
enter
mov
and
jle
mov
push
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xchg
and
mov
xor
mov
stos
xor
add
cld
or
retf
mov
fs
enter
ret
jbe
lahf
jnp
cmp
mov
push
jbe
mov
push
jbe
mov
push
jbe
mov
push
jbe
mov
push
jge
mov
pop
jge
dec
mov
add
and
mov
mov
xchg
hlt
and
pop
enter
retf
pop
retf
jge
mov
sbb
push
jge
pop
enter
or
push
jge
(bad)
pop
jge
sti
aam
enter
and
push
jge
hlt
fiadd
les
stos
cld
push
mov
fs
mov
and
mov
push
cmp
push
xchg
and
xchg
jp
in
jp
in
jp
in
jp
in
jp
dec
mov
mov
dec
sbb
mov
xor
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
pop
test
xor
ficomp
and
pop
enter
leave
mov
add
enter
aaa
adc
js
mov
div
mov
and
out
push
xchg
sbb
fcom
gs
jg
mov
test
and
mov
pop
aam
enter
sahf
and
sub
push
jg
mov
push
pop
enter
enter
mov
stos
call
mov
imul
or
dec
cmc
xlat
jecxz
std
lock
pushf
dec
sbb
dec
ins
inc
mov
push
jge
and
and
(bad)
shr
push
jge
lods
sar
mov
push
jge
sub
push
(bad)
push
jge
dec
jmp
enter
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
push
gs
mov
enter
inc
ds
enter
mov
pop
loopne
leave
mov
stos
sbb
jge
sub
pop
leave
mov
push
jge
dec
cmp
not
sub
jno
add
enter
rcl
or
and
enter
mov
sub
mov
mov
ins
enter
aam
pushf
not
add
mov
outs
popa
rcl
aaa
dec
pop
push
or
or
(bad)
pop
(bad)
push
jge
out
xchg
pop
mov
push
sbb
enter
inc
ds
mov
push
jge
ds
enter
cld
stos
xor
xchg
push
jge
(bad)
enter
inc
xchg
inc
dec
mov
mov
or
rcl
push
sbb
cs
enter
lock
xor
inc
leave
mov
pop
stc
les
pop
cmc
aam
adc
test
out
jge
mov
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
hlt
fsubr
mov
hlt
sbb
push
jge
mov
push
jge
push
(bad)
xchg
(bad)
jbe
dec
xchg
xchg
mov
inc
mov
rcr
mov
push
jge
ret
cld
mov
xor
sub
dec
push
sbb
call
mov
add
mov
adc
mov
out
jne
add
xchg
mov
inc
jge
mov
mov
pop
dec
repz
mov
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
cmps
int3
cmp
inc
cmps
pop
jl
lods
cmp
daa
bound
mov
fnsave
or
fdivr
and
or
or
sub
and
ins
dec
add
fistp
lahf
in
or
loop
imul
cmps
pop
hlt
xor
xchg
or
mov
cmp
sub
mov
or
gs
lds
mov
stos
das
lods
ret
mov
rcr
sbb
dec
or
enter
sub
xchg
aaa
pop
mov
js
mov
fdiv
(bad)
sub
test
jno
and
stos
cmp
push
xchg
push
mov
and
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
or
sbb
stos
sbb
cmp
test
xor
enter
aaa
pop
sbb
xchg
push
xchg
jg
stos
add
add
xlat
and
out
xor
cmps
shr
aaa
lock
test
or
mov
stos
cmp
sar
sets
es
stc
mov
aaa
in
and
mov
retf
mov
into
cmp
mov
mov
cmp
enter
int
jge
pop
push
jge
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
pop
sbb
popf
int
sbb
cmc
cmp
mov
shl
cmps
int
xchg
pop
inc
stos
add
cmp
test
shl
sbb
mov
stos
xor
xor
mov
out
jge
mov
xor
(bad)
cmp
enter
aaa
pop
sbb
mov
cmp
stos
ret
sahf
retf
mov
into
cmp
mov
mov
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
in
pop
xor
xor
xor
mov
mov
stos
xor
cmp
lods
(bad)
sub
mov
stos
xor
cmp
lods
(bad)
sub
mov
stos
cmp
into
xor
lods
out
cmp
lods
hlt
push
xchg
cmp
sbb
sbb
repz
mov
out
mov
or
int3
xor
cwde
sar
push
lods
shl
jge
push
mov
test
int3
sbb
mov
xor
mov
repz
adc
retf
xchg
adc
jns
push
jge
adc
int3
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
in
jns
inc
xchg
aaa
pop
adc
stos
(bad)
xor
xlat
cmp
lods
repz
adc
dec
mov
aaa
pop
add
xlat
and
repz
adc
push
xchg
aam
stos
sbb
pop
cmp
adc
int
adc
shl
sbb
sar
cmps
call
add
lods
ror
mov
in
adc
mov
xor
shl
mov
dec
add
(bad)
xor
mov
cmp
stos
out
jge
add
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
jns
cmps
push
xchg
test
ret
mov
daa
cmp
aad
adc
stos
ds
icebp
xor
cmps
xlat
xor
mov
mov
stos
cmp
rcl
shl
push
mov
pop
stos
lods
xlat
add
adc
ficom
adc
add
rcl
(bad)
or
and
mov
aaa
or
xlat
push
xchg
fnstsw
or
adc
mov
and
lea
mov
(bad)
push
xchg
sar
or
xor
lods
iret
xor
jnp
xor
sbb
or
shl
mov
mov
push
push
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
loop
jg
and
mov
sub
enter
enter
enter
aaa
pop
pop
sbb
(bad)
push
sbb
pop
stos
das
lods
les
lods
shr
test
fist
aaa
ret
test
mov
stos
das
lods
les
or
mov
sub
stos
aaa
pop
es
cli
mov
stos
lods
xlat
adc
(bad)
adc
mov
xlat
xor
lahf
mov
stos
das
lods
ret
mov
or
xor
cmp
add
lods
hlt
push
xchg
ja
stos
or
xor
test
dec
or
mov
xlat
xor
mov
je
or
xor
mov
int
xor
xor
pushf
(bad)
cmp
lahf
mov
stos
cs
rcl
jp
push
jge
and
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
xlat
dec
mov
lods
xlat
jne
stos
leave
push
adc
cmc
adc
lods
ret
xchg
aas
sbb
retf
xor
movs
lea
test
cmp
retf
xor
movs
lea
adc
mov
or
(bad)
lea
pop
ja
call
xor
call
jg
or
push
jge
and
xor
push
jge
dec
or
jge
mov
stos
jge
mov
stos
or
push
jge
lea
and
stos
and
ret
out
sub
xchg
aaa
pop
or
mov
(bad)
xor
enter
aaa
pop
pop
sbb
fidiv
lods
fidiv
test
add
lahf
mov
stos
test
in
jge
push
add
mov
stos
jge
mov
stos
sbb
cmps
xor
ins
jge
dec
data16
aaa
pop
add
mov
add
add
add
inc
dec
add
add
add
add
enter
add
adc
rol
add
add
add
add
mov
add
add
add
add
add
jmp
add
add
add
add
sub
add
cmp
add
add
pop
add
arpl
add
add
add
add
add
add
mov
add
mov
mov
add
add
add
rol
add
add
add
add
add
add
add
adc
sbb
add
and
add
add
add
dec
add
push
add
outs
add
js
add
add
test
add
add
add
rcr
add
add
add
add
add
test
add
add
or
add
push
add
add
add
add
add
add
add
pop
add
add
data16
or
add
mov
add
add
leave
iret
add
add
add
add
add
add
add
add
inc
push
add
add
adc
sbb
add
add
add
add
add
add
or
add
add
add
leave
add
rol
add
add
test
add
add
add
add
sub
add
add
add
cmp
add
add
add
add
add
add
outs
jbe
jge
add
add
add
add
add
add
add
add
add
fld
add
add
jmp
pop
add
adc
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
jno
add
add
add
add
xchg
add
add
add
add
aaa
add
add
add
dec
add
add
add
jg
xchg
add
xchg
cwde
add
add
add
cmps
add
scas
add
int3
add
aad
add
add
add
add
add
adc
add
das
xor
add
add
add
pop
add
add
gs
add
add
mov
add
cwde
add
add
add
mov
add
add
mov
add
add
add
add
jecxz
add
repz
add
add
add
sbb
add
add
sub
add
add
add
add
add
add
add
pusha
add
add
imul
add
xchg
add
add
add
add
add
add
test
mov
loop
out
add
add
add
add
add
add
add
add
sub
cmp
inc
add
add
dec
push
add
add
outs
add
xchg
add
add
mov
add
add
add
add
jmp
add
push
add
inc
add
push
add
add
add
add
add
add
nop
add
cdq
add
mov
rol
add
rol
repz
unpckhps
add
add
add
add
cmp
dec
add
add
add
jne
add
add
add
cwde
add
mov
add
mov
add
enter
add
add
add
add
add
inc
add
pop
pusha
add
add
add
xchg
add
add
add
mov
add
add
add
add
add
in
add
add
add
add
daa
sub
add
inc
add
dec
add
arpl
add
add
test
add
add
add
test
add
add
lds
add
fchs
add
add
add
add
add
add
popa
add
jbe
add
add
add
add
mov
add
add
add
add
add
repz
add
add
sbb
add
add
add
add
xor
add
add
add
imul
add
add
jle
xchg
add
add
mov
add
mov
add
add
add
add
add
out
add
add
add
aas
add
add
jo
ja
test
add
nop
xchg
add
mov
add
add
add
add
retf
rol
add
add
add
add
add
and
xor
add
add
add
aas
inc
dec
push
add
add
add
add
jp
add
xchg
movs
add
add
scas
add
mov
add
add
jecxz
add
idiv
add
add
xor
add
add
ins
add
add
add
add
add
add
add
add
rol
add
add
jecxz
add
add
add
add
add
xor
add
add
add
pop
data16
add
add
add
add
add
add
add
add
mov
add
add
add
ret
add
fild
add
jmp
add
add
test
add
add
add
or
add
add
add
arpl
jp
add
add
add
add
add
add
add
add
add
add
add
pop
add
adc
add
add
and
aaa
add
add
add
je
add
add
add
or
add
mov
add
add
iret
add
add
clc
add
add
add
push
add
push
add
add
add
sbb
and
add
add
dec
add
add
add
add
add
push
jae
add
add
add
xchg
mov
add
mov
add
add
retf
add
add
(bad)
add
add
add
add
add
add
add
repz
add
add
adc
add
push
and
xor
add
add
add
add
add
add
add
add
add
push
add
js
add
add
add
add
add
add
leave
add
add
aam
fadd
add
add
add
add
add
add
push
add
add
inc
add
add
add
push
add
pop
add
add
add
imul
add
mov
xchg
add
add
add
add
add
enter
(bad)
add
add
loope
add
add
add
add
add
add
add
sub
add
add
inc
add
add
add
add
add
add
add
add
add
add
jno
add
test
mov
mov
add
add
add
ret
leave
add
add
add
add
fiadd
add
out
add
test
inc
push
add
add
push
add
add
and
add
add
add
add
add
add
add
add
add
add
pop
add
jno
add
jnp
add
add
add
mov
add
les
add
add
add
add
fild
add
add
add
add
add
pop
add
add
add
add
add
add
aas
add
dec
dec
add
add
pop
imul
add
add
add
add
add
pushf
add
add
add
add
add
mov
add
add
add
add
add
fiadd
add
jecxz
out
cmc
sti
add
add
add
add
adc
add
add
sbb
add
xor
add
inc
add
dec
add
add
pop
popa
add
add
ins
add
add
add
add
add
add
xchg
add
add
popf
add
add
int
add
add
fld
loopne
add
add
sldt
add
add
sbb
add
add
xor
cmp
add
pop
add
add
add
add
outs
add
ja
jle
add
add
add
add
mov
add
add
mov
add
add
add
add
leave
add
rol
add
fild
add
add
add
add
add
add
add
add
add
add
add
push
add
sub
add
add
add
add
add
add
push
add
jp
add
mov
add
add
add
add
add
add
add
add
fld
add
add
add
add
add
add
or
add
add
add
sub
push
add
add
add
add
outs
add
add
add
jl
add
call
add
add
add
enter
add
add
fndisi(8087
add
add
in
cld
add
add
add
or
add
add
sbb
add
and
das
add
add
add
add
add
add
add
dec
add
add
ins
add
add
or
add
add
add
mov
add
leave
add
rol
add
add
add
add
icebp
add
add
cld
add
add
add
add
add
add
add
add
add
and
add
add
dec
add
add
pop
add
add
add
jo
add
add
add
lods
add
mov
add
add
add
add
add
loope
jmp
add
add
add
add
pop
add
add
add
sbb
add
sub
add
add
inc
add
add
add
push
add
pop
add
bound
add
ins
add
add
ja
add
add
add
test
add
add
add
add
add
add
test
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
inc
dec
add
imul
add
js
add
add
add
add
add
(bad)
int3
add
fld
loope
add
add
add
add
sldt
add
sbb
add
xor
add
add
add
add
add
add
add
push
pop
add
add
add
ins
add
je
add
jle
test
add
add
xchg
add
call
rol
into
add
xlat
add
add
add
in
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
xchg
add
add
add
add
add
add
(bad)
add
add
test
add
unpckhps
sbb
add
add
add
push
pop
add
add
fs
add
add
add
add
add
add
add
stos
add
add
add
mov
add
fadd
add
add
add
stc
add
add
sbb
add
add
add
add
cs
dec
add
pop
add
add
push
add
add
add
add
add
add
popf
add
add
rol
add
add
fcomp
add
cli
add
add
add
add
add
add
add
and
add
aas
add
inc
add
add
add
add
add
add
add
add
add
add
les
add
add
add
add
add
add
add
add
jmp
add
add
push
add
add
add
add
add
add
xor
push
add
add
imul
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
out
add
cli
add
add
or
adc
sbb
add
daa
add
inc
add
add
add
add
add
pop
add
add
mov
add
mov
add
add
fadd
add
add
in
add
add
idiv
add
sldt
add
add
add
pop
add
add
add
add
cmp
add
dec
add
add
popa
add
add
add
add
jge
test
add
add
add
add
add
mov
add
loopne
out
out
add
add
stc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
lea
add
add
add
pushf
add
add
leave
add
rol
add
add
add
jmp
add
and
add
add
cs
add
add
inc
add
pop
push
add
add
add
add
add
cdq
add
add
add
add
mov
rol
in
in
repnz
sti
add
add
add
or
add
add
add
add
add
inc
add
add
add
add
add
add
pop
add
add
add
jb
add
add
add
mov
add
aad
add
add
add
in
add
out
add
sti
add
add
sbb
add
add
add
xor
add
add
add
add
add
jbe
add
add
xchg
add
add
add
add
add
fsub
add
jmp
add
add
add
add
add
and
cmp
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
int
add
add
jecxz
hlt
add
add
add
add
add
sbb
add
add
sub
inc
add
add
add
add
add
add
add
jl
mov
add
add
add
xchg
popf
mov
add
mov
add
add
add
add
add
add
add
out
add
add
add
push
and
add
xor
add
inc
add
push
add
add
popa
add
imul
test
add
lods
add
add
add
add
add
add
add
add
add
add
add
sti
add
adc
pop
add
add
das
add
add
add
add
add
add
add
add
add
add
add
mov
add
cwde
sahf
add
add
test
mov
add
enter
add
add
add
jecxz
out
cmc
add
add
add
add
or
add
adc
add
add
and
daa
add
add
xor
add
add
pop
add
jne
add
add
fwait
add
add
mov
rol
add
add
add
repnz
add
add
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
pop
pusha
add
add
add
add
add
cwde
add
add
add
movs
add
scas
add
mov
add
add
add
add
in
add
add
add
add
sti
add
add
pop
sbb
add
add
xor
add
add
add
add
add
pop
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
mov
fld
in
jmp
add
cmc
add
std
add
add
xor
add
add
inc
add
add
add
add
add
pop
add
add
add
add
add
add
mov
popf
add
mov
add
add
add
rol
add
add
add
add
add
add
add
out
add
test
or
pop
add
add
das
add
add
cmp
add
add
add
pop
pop
add
add
add
add
jg
add
add
add
add
movs
add
add
add
add
ret
leave
add
add
add
add
add
add
push
add
pop
sbb
add
add
add
bound
add
add
add
add
add
fwait
add
add
add
add
add
add
add
add
add
aad
out
out
hlt
cli
add
add
add
sub
add
add
add
add
inc
add
dec
add
push
add
add
jb
add
add
add
add
mov
add
mov
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
or
and
xor
inc
dec
push
add
pop
add
popa
add
jbe
jge
add
mov
add
add
add
add
add
iret
aad
add
add
add
in
add
in
add
add
add
sti
add
add
add
add
pop
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
fwait
add
add
add
add
leave
add
add
aam
out
add
stc
add
push
sbb
add
add
xor
jo
lahf
add
add
add
add
add
(bad)
fadd
add
add
add
add
add
add
or
add
add
pop
add
add
add
add
add
add
add
add
ins
jg
add
add
add
add
add
add
add
mov
add
into
add
(bad)
add
add
add
jmp
hlt
add
add
add
add
and
add
add
add
add
cmp
add
add
add
add
add
add
add
add
in
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
test
add
add
add
add
add
add
mov
add
rol
add
add
add
add
jmp
add
add
add
add
add
add
and
add
add
add
add
aas
add
lods
add
add
add
in
add
hlt
cli
add
add
add
add
add
add
add
cmp
add
add
mov
add
add
add
les
add
add
add
rcr
fsubp
add
add
add
add
stc
add
add
add
add
or
add
add
add
add
and
add
add
add
add
dec
add
sbb
leave
add
add
add
fadd
sbb
dec
add
push
add
add
add
add
add
add
add
add
add
add
mov
add
add
rol
add
loopne
add
jmp
add
add
add
add
adc
sbb
add
add
add
add
aaa
add
add
push
add
pop
add
add
add
add
add
add
pop
add
add
fwait
add
add
add
add
mov
add
leave
add
fndisi(8087
add
jmp
add
or
add
add
add
add
sub
xor
add
add
add
add
add
add
add
push
pop
add
add
add
imul
add
add
add
add
add
add
mov
add
mov
rol
add
add
in
add
add
add
add
add
sbb
add
and
sub
add
add
cmp
add
add
add
inc
add
add
push
add
add
pop
add
add
add
jno
add
add
mov
add
xchg
add
add
add
mov
add
add
iret
add
add
add
add
add
add
add
add
add
cmc
add
add
add
sbb
add
sub
add
xor
add
add
add
add
pop
bound
add
jb
add
add
add
add
add
nop
add
add
add
add
add
rol
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
ins
add
add
add
add
add
add
mov
add
add
sahf
add
add
mov
add
add
add
aad
fld
add
add
add
jmp
add
add
adc
add
add
sbb
add
add
add
add
add
add
add
add
imul
add
add
add
xchg
add
sahf
movs
add
lods
add
add
add
add
add
add
rol
(bad)
add
add
add
in
add
add
add
add
adc
add
sub
add
add
add
add
add
add
add
add
add
add
add
outs
add
jge
add
mov
add
add
add
add
lods
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
imul
add
add
js
add
mov
add
add
add
int3
add
add
xlat
add
loopne
add
out
add
push
add
add
add
adc
sbb
add
add
add
das
add
add
add
add
push
add
add
add
jl
add
xchg
add
add
add
add
mov
add
add
fld
add
out
out
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
mov
add
add
add
add
add
add
add
icebp
add
add
add
sbb
add
sub
add
xor
add
add
add
add
add
add
mov
add
add
add
mov
add
leave
add
(bad)
add
add
add
in
add
add
lock
pop
add
sbb
and
add
add
add
add
dec
add
add
push
pop
add
add
jae
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
call
repz
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
pop
add
add
add
imul
add
add
add
add
mov
leave
add
rcr
add
loope
call
add
add
clc
add
add
add
push
add
add
add
add
add
add
add
inc
add
push
add
add
add
add
add
add
fwait
add
add
mov
add
add
add
add
iret
add
add
add
add
add
add
out
add
add
stc
inc
add
add
sbb
add
sub
add
add
add
add
add
push
push
add
add
jb
add
add
add
add
lds
add
add
xlat
add
add
add
in
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
dec
add
add
add
add
add
push
add
add
add
add
add
add
scas
add
add
add
add
add
jecxz
jmp
cld
add
add
pop
pop
add
add
add
add
add
add
add
add
inc
inc
add
add
push
bound
add
add
add
add
jle
add
xchg
add
mov
mov
add
add
add
add
add
in
add
add
adc
add
add
and
add
add
add
add
add
add
cmp
add
inc
add
add
push
add
pusha
data16
add
add
add
jns
add
add
xchg
add
add
add
add
add
mov
add
fiadd
add
add
add
out
add
add
add
add
add
sub
xor
add
cmp
add
add
add
add
add
add
add
push
add
add
add
jns
add
add
mov
fwait
stos
add
mov
add
add
add
mov
add
add
add
fild
loop
add
add
add
add
add
add
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
cmps
lods
mov
add
add
add
add
add
add
fld
add
add
add
clc
add
push
add
add
sub
add
add
add
cmp
add
dec
push
add
add
jb
jns
add
add
nop
add
add
stos
add
add
mov
add
add
add
add
add
add
add
add
add
add
in
add
add
test
add
add
add
sbb
add
add
add
sub
add
add
add
add
dec
dec
add
add
push
add
add
add
add
add
mov
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
popa
add
je
add
add
add
add
add
movs
add
add
add
fld
loope
add
jmp
add
push
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
mov
xchg
cdq
add
add
add
lds
int3
add
add
add
jecxz
jmp
pop
add
sldt
sbb
add
add
add
add
xor
add
cmp
add
add
bound
add
add
add
add
jp
add
add
fwait
add
mov
mov
add
retf
rol
add
add
add
in
add
out
add
or
adc
sbb
add
add
add
add
add
dec
pop
add
add
add
add
add
jno
add
add
or
mov
add
add
add
mov
add
add
add
add
add
loope
add
hlt
add
add
add
add
add
add
add
add
add
add
add
outs
add
jbe
jle
add
add
cdq
add
add
add
add
(bad)
int3
rol
(bad)
add
add
out
test
inc
add
or
add
add
sbb
add
add
cmp
pop
add
add
add
add
add
ja
xchg
add
add
add
add
add
add
iret
add
add
fiadd
add
jecxz
cmc
add
add
add
add
add
add
push
add
add
sub
add
add
inc
dec
add
add
push
add
add
add
add
add
ins
jb
jle
add
add
add
lea
add
add
add
int3
add
aad
fadd
out
add
add
add
add
add
adc
add
add
cmp
add
add
dec
add
push
add
pop
arpl
jne
add
mov
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
sub
cmp
add
inc
add
add
add
add
add
add
ins
add
add
add
add
add
add
mov
add
add
add
add
add
rcl
fadd
add
add
add
jmp
add
add
sldt
sbb
pop
add
add
sub
add
add
add
add
push
add
add
add
ins
jae
jp
add
add
lahf
add
add
add
add
add
add
rol
add
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
add
add
outs
add
add
jp
add
add
add
add
add
add
add
mov
add
int
add
xlat
add
add
jecxz
add
add
cmc
add
add
add
add
add
add
add
add
add
cs
dec
add
push
add
pop
add
add
add
add
jge
mov
add
cwde
add
add
add
les
int3
add
aad
add
jecxz
add
in
add
test
inc
push
add
push
and
add
add
add
add
add
push
add
add
jnp
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
out
add
add
repnz
add
adc
add
sbb
add
add
add
add
add
add
add
add
dec
push
pop
popa
add
add
add
add
add
popf
add
add
mov
add
add
add
add
add
add
add
add
add
in
repz
add
pop
add
add
pop
sbb
add
xor
add
add
inc
inc
add
add
xchg
add
add
add
xchg
add
add
add
add
add
add
add
add
in
add
add
test
add
add
add
or
sbb
add
add
add
add
add
add
push
add
add
add
add
add
add
jp
add
test
add
add
add
xchg
cwde
sahf
movs
add
add
add
add
add
iret
add
fadd
add
add
add
add
repz
sti
add
add
add
push
add
add
add
xor
cmp
push
add
pop
pusha
add
push
add
jnp
add
add
add
add
call
add
enter
add
add
xlat
add
add
add
add
add
add
add
add
add
add
es
add
add
add
add
inc
add
add
add
add
add
add
add
push
add
test
add
popf
add
add
test
add
add
add
add
add
add
add
fld
add
add
add
add
add
add
add
add
or
add
add
add
cmp
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
rol
add
add
add
add
add
add
add
out
add
adc
add
xor
add
add
add
inc
dec
add
add
add
add
popa
add
add
add
add
xchg
add
add
mov
lods
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
sti
add
add
add
add
add
pop
add
add
xor
add
add
cmp
add
add
add
add
add
test
mov
add
add
add
fwait
add
scas
add
ret
add
add
add
xlat
call
add
cmc
add
sbb
add
add
inc
add
add
dec
push
add
add
add
add
imul
test
add
sahf
add
add
test
mov
add
add
rol
add
add
add
add
add
fild
add
add
add
add
add
add
add
add
push
add
and
sub
add
add
add
add
add
add
push
add
add
add
bound
add
add
add
add
add
mov
add
add
add
add
add
add
(bad)
out
add
add
add
add
add
add
add
add
aas
add
add
dec
push
add
add
add
add
data16
add
add
add
mov
add
add
mov
add
add
add
add
fiadd
add
add
add
add
add
add
add
add
push
add
and
sub
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
fild
add
jmp
hlt
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
arpl
add
ins
add
add
add
call
add
cmp
add
add
push
pop
bound
push
add
add
jl
add
mov
add
add
add
add
cld
add
add
add
or
add
add
add
inc
add
add
add
add
pop
add
bound
add
add
add
add
jns
add
add
add
add
add
add
add
add
int
add
add
add
add
jmp
cmc
add
add
add
add
adc
pop
add
add
add
add
add
add
push
add
pop
add
add
add
add
add
add
xchg
add
add
add
add
mov
rol
add
fld
add
add
jmp
add
add
add
add
add
add
sldt
add
add
add
add
add
cs
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
or
add
adc
add
add
cmp
add
add
dec
add
add
add
add
add
ins
jae
add
add
add
add
mov
mov
add
add
int3
add
add
xlat
add
add
add
add
add
add
add
add
add
add
or
daa
add
add
xor
add
inc
add
add
add
dec
add
push
pop
add
jne
add
add
add
add
scas
mov
add
mov
add
int
add
add
add
fadd
add
add
jmp
add
add
push
add
add
add
add
add
add
xor
add
add
add
dec
add
push
add
pop
add
popa
add
add
add
outs
add
add
jp
add
add
xchg
add
add
add
xchg
add
add
mov
add
scas
add
add
add
mov
mov
add
add
in
add
add
add
add
add
add
add
add
add
add
sub
add
add
pop
add
push
add
add
add
jns
add
add
xchg
add
add
test
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
xor
add
add
add
dec
add
push
add
pop
add
popa
add
add
add
outs
add
add
jp
add
add
xchg
add
add
add
xchg
add
add
mov
add
scas
add
add
add
mov
mov
iret
add
add
add
in
add
add
pop
add
add
add
add
add
and
add
add
add
add
dec
push
add
pop
add
add
add
add
add
add
add
xchg
add
add
stos
mov
add
enter
add
add
add
fld
add
add
jmp
add
add
add
pop
add
add
add
add
add
dec
add
push
add
pop
add
bound
add
add
add
add
add
add
add
xchg
add
add
add
xchg
add
add
mov
add
scas
add
add
add
mov
mov
iret
add
add
add
jmp
repz
add
add
add
add
add
add
add
add
sub
add
add
bound
push
add
add
add
jns
add
add
xchg
add
add
test
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
and
add
add
xor
add
add
add
dec
add
pop
add
pusha
add
imul
add
add
add
add
add
add
test
add
add
add
add
ret
add
into
add
(bad)
add
add
add
repnz
add
or
add
add
sbb
add
add
and
add
xor
add
add
bound
imul
add
add
jg
add
add
call
add
scas
mov
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
mov
add
add
add
add
add
int
add
add
add
add
icebp
add
add
or
add
add
pop
add
add
add
add
add
add
add
push
pop
add
popa
add
jo
add
add
add
add
add
add
fwait
add
add
mov
add
add
add
add
add
add
add
int
aad
add
add
add
jecxz
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
int
add
add
add
add
icebp
add
add
or
add
add
pop
add
add
add
add
add
add
xor
add
add
popa
add
outs
add
add
add
add
add
add
cdq
add
add
lods
mov
add
retf
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
sub
add
add
add
add
add
dec
add
push
add
pop
add
add
add
add
jae
add
add
add
add
mov
add
add
add
cdq
add
add
movs
add
add
add
mov
add
add
add
add
leave
add
fsub
or
add
add
add
add
add
inc
push
add
outs
add
add
jg
add
add
add
xchg
add
add
add
add
add
jmp
add
add
or
add
add
add
sub
add
add
add
inc
inc
add
add
add
pop
outs
add
jle
add
add
add
add
cdq
lahf
mov
add
ret
add
add
aad
add
in
repz
add
add
add
sbb
add
add
add
add
add
add
add
add
xchg
add
nop
xchg
add
add
add
movs
add
add
int3
add
aad
jmp
add
idiv
add
add
add
add
and
add
add
add
add
add
add
add
add
add
jae
add
add
add
add
mov
lods
mov
add
add
int
add
fadd
add
add
call
add
add
add
add
pop
add
add
add
add
add
add
add
cmp
add
add
jp
add
add
add
add
add
add
loopne
add
add
add
add
push
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
mov
add
fild
add
out
add
add
add
add
add
sbb
add
cmp
add
add
add
add
add
push
add
lea
add
add
add
add
add
add
repnz
sti
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
test
scas
add
add
add
mov
fadd
add
add
repz
sti
add
add
add
or
add
add
add
add
sub
add
dec
add
add
push
add
add
add
bound
imul
test
lahf
add
mov
mov
into
add
add
add
fild
sti
add
add
add
and
add
sub
add
add
add
add
add
add
add
add
add
add
je
add
lea
add
add
add
add
mov
fiadd
add
add
jmp
push
add
unpckhps
add
add
and
add
cmp
add
add
add
add
add
add
add
jge
cwde
sahf
mov
add
add
add
add
loope
add
add
add
add
add
pop
add
and
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
mov
add
add
fld
out
in
std
add
add
or
cdq
add
test
add
mov
add
add
ret
add
add
fld
add
out
add
icebp
add
add
push
or
add
adc
add
cmp
add
inc
add
add
add
add
add
add
add
outs
add
add
add
mov
add
add
add
add
add
add
add
pop
sbb
add
add
aaa
cmp
add
push
add
pop
add
jbe
add
add
add
add
add
mov
add
mov
add
add
add
icebp
add
add
cli
add
add
add
add
adc
add
add
add
and
add
add
add
add
cmp
retf
add
add
out
add
add
repnz
add
add
add
add
add
push
add
add
add
add
add
add
das
xor
inc
add
add
jb
add
add
jg
add
add
add
lods
add
add
aad
add
fiadd
add
add
jmp
test
add
or
pop
sbb
add
add
aaa
add
push
add
add
pop
bound
add
add
add
add
add
add
add
add
add
add
retf
add
aad
fadd
add
add
add
jmp
add
add
add
cli
or
add
add
add
add
das
add
add
add
add
add
fadd
add
loop
add
in
add
add
add
add
add
pop
add
add
add
add
add
dec
add
jo
xchg
call
add
add
add
add
add
add
rol
add
add
add
add
icebp
add
pop
add
add
add
add
add
add
add
add
add
pusha
add
push
add
add
add
add
add
add
lea
xchg
add
add
add
add
add
add
add
add
add
add
fild
add
jmp
add
add
add
add
adc
and
add
add
sub
add
add
inc
add
dec
add
add
add
pop
add
add
arpl
add
add
outs
add
add
add
add
add
add
add
scas
add
add
mov
add
int3
add
aad
add
jecxz
add
add
or
sbb
add
xor
add
add
add
add
add
add
add
jo
ja
jg
add
add
movs
add
add
add
add
add
add
fild
loop
add
add
add
icebp
add
add
add
add
add
add
add
add
sub
add
aaa
add
add
inc
add
add
push
bound
add
add
add
add
jp
add
add
add
cmps
add
add
mov
add
add
mov
add
add
rol
add
fsub
call
std
add
add
or
add
add
add
add
and
add
sub
add
add
add
inc
add
add
add
jl
add
add
add
add
mov
add
mov
iret
add
add
add
add
in
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
scas
add
add
mov
add
retf
add
add
fild
add
add
add
add
icebp
add
add
std
add
add
add
add
add
add
add
push
add
add
sub
add
add
add
add
add
add
add
add
js
add
scas
mov
add
add
add
add
aad
fadd
add
add
add
add
sbb
add
sub
cmp
add
inc
add
dec
push
add
add
add
add
ja
add
add
add
xchg
add
add
xchg
cwde
add
scas
add
add
add
mov
add
add
fadd
add
add
test
add
add
add
adc
sbb
add
add
add
cmp
add
add
add
add
push
add
add
add
add
add
add
or
add
add
add
mov
add
into
add
add
in
add
add
add
add
add
add
and
sub
add
add
add
push
add
arpl
add
jl
add
add
add
call
add
add
mov
add
add
add
add
add
add
add
add
add
out
add
add
add
add
or
add
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
loopne
add
add
repnz
add
add
add
push
add
add
push
add
add
xor
add
add
add
add
pop
add
add
add
ins
add
add
mov
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
inc
add
add
add
add
popa
add
add
add
add
add
add
add
test
add
add
add
popf
add
add
add
add
add
xlat
add
jmp
add
add
add
or
add
xor
add
cmp
add
add
pop
add
outs
add
add
add
add
cwde
add
scas
add
add
add
add
add
add
add
add
add
add
or
sldt
add
add
add
and
add
add
add
push
add
add
add
add
add
outs
add
add
add
add
cwde
add
add
add
add
mov
add
add
add
add
aam
add
add
in
in
repnz
sti
add
or
add
add
add
add
xor
add
add
cmp
push
add
add
add
ins
add
add
add
mov
add
add
add
rol
fld
hlt
add
add
add
add
add
add
sub
xor
add
cmp
dec
add
push
add
pop
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
add
add
mov
add
add
add
add
aad
add
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
jge
add
add
mov
add
add
add
add
add
add
add
add
fadd
jecxz
jmp
push
add
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
add
add
add
test
add
add
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
pop
add
add
and
add
add
add
push
add
pop
add
add
add
add
add
add
xchg
add
add
scas
add
retf
add
aam
add
fiadd
add
add
add
add
inc
push
add
sbb
add
add
add
add
add
add
push
add
add
jbe
add
add
add
mov
add
add
cmps
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
cmp
add
add
add
add
popa
add
jae
jp
add
add
add
add
xchg
add
add
add
mov
enter
rol
call
adc
and
daa
add
add
cmp
aas
add
add
add
add
imul
jp
add
add
scas
add
mov
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
fld
add
jecxz
add
add
add
sldt
sbb
add
and
add
add
add
add
inc
add
push
add
pop
add
jl
add
add
add
mov
add
add
mov
rcl
fld
add
add
add
jmp
clc
inc
add
add
or
add
add
add
add
add
sub
xor
add
add
inc
add
add
add
add
add
add
lahf
add
add
rol
add
add
add
add
add
add
add
add
inc
add
pop
add
add
add
imul
jae
add
test
fwait
add
add
add
retf
rcl
add
add
add
add
in
repnz
add
add
add
add
pop
add
add
add
sub
add
add
cmp
push
add
push
add
add
add
add
add
add
add
add
add
add
int
add
add
add
and
cmp
dec
push
push
add
add
add
add
add
add
nop
add
cdq
add
lods
add
mov
int
add
(bad)
fadd
std
add
add
add
add
add
(bad)
in
add
add
add
add
add
add
or
add
add
add
add
sub
add
add
add
add
add
add
add
xchg
add
add
add
add
add
adc
sbb
and
xor
add
push
add
add
add
pop
add
push
add
nop
add
add
add
rol
add
add
add
add
loop
out
add
add
add
add
add
add
or
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
adc
sbb
and
xor
add
add
add
add
pop
add
add
add
iret
add
cmc
cld
add
add
add
add
adc
sbb
add
add
xor
add
cmp
add
add
dec
add
add
add
add
add
add
add
add
mov
add
add
repnz
push
add
aas
add
push
add
add
add
jg
add
add
add
scas
add
mov
int
add
xlat
fld
inc
add
add
add
add
pop
and
add
cmp
add
add
dec
add
add
add
pop
add
add
imul
add
add
add
add
add
add
scas
add
add
add
rol
fadd
fild
add
add
in
add
hlt
cli
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
pop
add
push
js
add
add
mov
add
sahf
add
mov
mov
add
add
add
fiadd
add
add
add
add
cmc
add
std
add
add
sbb
sub
cmp
dec
add
add
imul
jle
add
add
mov
cmps
add
add
add
xlat
add
add
add
add
test
add
add
sbb
pop
add
add
add
add
add
cmp
add
add
add
pop
bound
js
add
add
add
add
add
add
cmps
add
scas
add
add
retf
add
rol
add
out
out
add
add
stc
add
or
add
add
add
add
sub
add
add
add
add
add
inc
dec
add
push
add
pop
add
add
outs
jne
add
add
add
add
add
add
mov
rol
out
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
push
add
add
test
call
rol
add
add
into
add
add
add
add
add
add
add
lock
clc
add
add
or
add
adc
add
add
add
add
add
add
inc
inc
dec
push
pop
add
add
add
add
jg
add
mov
movs
add
mov
enter
add
add
add
fld
add
jecxz
idiv
add
or
add
add
add
aaa
add
add
add
add
add
imul
add
add
jp
add
add
add
add
add
add
add
add
add
add
add
add
int
add
add
jecxz
add
in
repz
add
add
add
add
add
sub
add
add
add
add
add
add
outs
add
ja
add
add
mov
add
sahf
add
mov
mov
add
add
add
fld
add
add
add
add
add
add
adc
add
add
and
sub
add
xor
add
add
inc
add
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
pop
add
add
add
jno
add
add
add
call
mov
add
add
add
add
add
add
add
add
add
add
in
add
add
add
inc
add
or
add
add
add
sub
add
add
cmp
dec
dec
add
add
add
add
je
add
or
call
mov
add
add
add
add
int
add
xlat
add
out
cmc
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
jp
add
add
xchg
add
add
add
add
add
add
add
aam
add
fsubp
add
add
add
add
or
add
add
adc
add
add
sub
add
add
add
inc
add
add
push
add
add
add
jle
test
lea
add
add
add
add
mov
add
mov
int3
add
add
out
add
lock
add
add
pop
or
add
sub
add
add
add
cmp
add
inc
add
add
add
add
jle
add
add
add
mov
add
rol
add
add
fld
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
push
add
pop
add
push
add
add
add
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
das
add
add
add
inc
add
push
push
add
jb
add
add
add
add
xchg
cwde
add
add
add
add
rcl
add
in
in
add
or
add
add
adc
add
daa
add
cmp
add
inc
add
add
dec
add
add
add
add
add
add
add
js
add
add
add
scas
add
add
add
add
int3
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
sub
add
add
aaa
add
add
add
add
add
push
add
add
add
add
add
add
add
fwait
mov
add
mov
add
add
add
add
add
jecxz
stc
add
add
add
add
add
sbb
add
sub
push
add
add
add
add
add
add
add
add
add
cwde
add
add
add
add
mov
add
rol
leave
add
add
add
add
add
add
add
cmp
push
add
push
add
je
add
add
add
lahf
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
pop
add
add
add
lea
add
add
add
fwait
add
add
leave
add
rol
add
add
add
jmp
add
add
and
add
add
cs
add
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
cwde
add
add
add
add
lds
int3
rol
jecxz
jmp
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
retf
add
add
add
add
add
in
repz
sldt
add
add
add
add
add
add
xor
add
push
add
pop
add
add
add
add
add
movs
add
add
add
add
ret
add
(bad)
add
add
add
add
jmp
add
add
add
stc
add
add
or
add
adc
add
add
add
add
add
inc
add
push
push
add
outs
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
add
add
adc
add
add
add
pop
add
add
add
test
add
(bad)
xchg
add
add
mov
mov
add
enter
add
add
add
in
add
add
add
cld
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
dec
push
push
add
jns
add
add
add
add
add
enter
add
add
(bad)
add
add
loope
jmp
hlt
add
add
push
add
add
add
sbb
add
das
add
dec
add
pop
add
add
add
add
add
add
add
popf
add
cmps
add
scas
add
add
add
aam
add
add
add
call
add
push
adc
add
add
add
and
add
add
add
cmp
dec
dec
add
add
add
add
outs
add
add
add
add
xchg
lods
mov
add
retf
add
add
add
in
add
add
cmc
add
add
add
add
add
add
add
add
and
sub
add
add
dec
add
add
add
pop
add
add
ja
add
add
add
movs
lods
add
add
add
mov
add
add
out
add
add
adc
and
add
add
add
inc
dec
dec
push
add
add
add
add
jno
add
add
mov
add
add
add
add
add
add
add
lds
add
add
(bad)
jmp
add
stc
add
add
or
adc
add
sbb
add
add
add
cs
add
dec
add
add
add
add
add
add
imul
add
add
add
fwait
add
add
add
int3
add
add
add
add
in
add
add
add
cli
add
add
add
add
daa
add
xor
inc
add
add
add
add
popa
add
imul
add
add
add
add
add
add
add
movs
stos
add
mov
add
add
add
add
add
add
add
add
add
add
adc
sub
add
cmp
add
dec
add
add
pop
add
add
add
outs
jne
add
mov
add
add
add
xchg
add
add
mov
add
mov
mov
add
add
add
iret
add
add
add
fld
add
icebp
add
or
add
add
add
add
add
inc
add
pop
add
add
outs
add
xchg
add
add
mov
mov
add
leave
iret
aad
add
add
add
in
add
add
add
cld
add
or
add
add
add
add
add
add
add
dec
add
add
push
pop
jo
add
jle
add
add
add
add
add
int
add
add
add
fadd
add
add
add
add
add
cli
add
add
adc
add
add
add
add
add
add
push
add
pusha
add
add
add
add
add
jge
add
add
mov
add
add
add
add
fld
add
add
add
in
add
add
pop
or
add
add
add
add
inc
inc
add
add
add
add
add
je
jnp
add
add
add
xchg
call
add
add
add
scas
mov
add
into
add
add
add
add
call
repz
add
add
add
add
add
add
add
add
add
cmp
inc
add
push
add
add
popa
add
add
add
add
ja
add
add
add
add
add
add
add
add
jecxz
hlt
add
add
add
pop
add
lldt
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
sub
aas
add
add
add
dec
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
leave
iret
add
add
add
add
repz
sti
add
add
add
push
add
add
sbb
sub
add
xor
add
add
add
add
popa
add
add
fadd
or
add
add
add
add
add
xor
add
add
inc
add
add
dec
add
add
add
add
add
add
jg
add
mov
add
add
add
mov
add
add
aam
loopne
add
add
add
out
cmc
add
add
add
add
sbb
add
add
add
add
xor
add
add
add
add
pop
add
ins
jae
jp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
xor
add
add
push
add
add
add
pusha
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
fsubp
add
add
add
add
or
add
add
add
add
and
add
add
add
add
dec
add
pop
bound
push
add
add
add
mov
add
mov
add
add
add
add
add
add
add
retf
add
xlat
add
add
add
add
cli
add
add
add
add
add
add
add
add
inc
add
add
add
add
popa
push
add
add
add
add
mov
mov
add
add
lds
xlat
add
add
add
repz
adc
add
add
add
add
add
inc
add
mov
add
add
add
add
add
mov
add
mov
add
in
add
add
add
add
add
pop
add
add
add
add
sbb
add
es
add
add
add
add
add
pusha
add
add
add
add
add
add
jl
add
add
xchg
add
add
add
add
add
add
mov
add
add
add
loopne
call
add
add
add
push
add
add
add
sbb
add
add
add
add
add
add
pop
add
add
add
add
jne
add
test
add
add
add
add
stos
mov
add
mov
add
add
fld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
inc
add
add
add
add
add
add
add
ins
add
add
add
mov
add
add
add
rol
add
add
add
add
add
fiadd
add
add
add
add
add
add
or
add
adc
sbb
add
add
daa
add
xor
cmp
add
add
add
add
add
add
add
jne
add
add
add
add
stos
add
add
add
add
add
rol
xlat
add
add
loop
add
lock
add
sti
or
add
add
add
add
and
add
add
add
add
add
cmp
add
add
add
dec
add
add
add
push
add
add
jno
add
add
add
add
add
add
add
add
enter
xlat
add
loopne
out
add
icebp
test
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
pusha
add
add
add
je
jnp
add
mov
add
add
mov
add
add
add
add
add
repz
add
add
add
add
add
add
sbb
and
add
add
add
xor
add
add
inc
push
add
add
add
bound
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
retf
rcl
add
add
add
add
add
repz
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
dec
add
add
add
add
add
add
data16
add
jno
add
add
add
add
add
test
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
add
add
push
add
pusha
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
out
add
std
add
add
add
and
inc
add
add
add
add
add
add
add
outs
add
add
add
mov
add
add
add
add
add
add
add
add
fld
add
add
add
add
add
add
or
add
adc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
add
retf
add
add
add
fld
add
in
add
add
clc
or
add
add
add
add
pop
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
mov
add
iret
add
fadd
add
add
add
add
add
add
add
add
add
add
add
adc
and
add
add
add
add
add
cmp
add
add
add
add
add
ins
jb
add
xchg
lea
add
movs
add
add
add
add
add
in
add
add
add
add
cli
add
add
add
or
add
adc
add
pop
add
add
das
xor
add
add
add
add
add
add
outs
add
jns
add
add
add
add
nop
add
add
movs
stos
add
add
add
mov
enter
add
fild
out
in
add
add
std
add
add
push
add
push
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
pop
popa
add
add
ins
jl
add
add
xchg
popf
add
add
add
rol
fld
add
add
jmp
add
add
or
add
add
xor
add
add
add
add
inc
add
add
add
push
add
add
add
push
js
test
add
add
add
add
test
add
add
enter
add
add
add
add
add
add
add
in
repz
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
add
aam
add
add
loopne
add
add
add
pop
add
add
add
add
sub
add
cmp
add
add
inc
dec
add
jno
add
add
add
nop
add
add
add
popf
add
add
add
int3
add
add
add
fiadd
add
add
or
adc
add
add
add
add
add
add
add
add
xor
add
add
add
add
outs
add
jge
test
add
add
add
add
add
add
rol
add
add
add
add
add
loopne
add
add
icebp
add
add
cld
or
add
add
add
add
sub
add
add
add
add
dec
dec
add
add
push
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
in
add
out
add
add
add
add
or
adc
add
and
add
add
add
add
add
add
pop
push
add
add
jge
add
add
add
xchg
xchg
add
add
add
add
add
aad
fadd
add
out
add
add
add
stc
or
add
adc
add
add
add
and
add
add
xor
add
add
inc
push
add
pop
arpl
add
add
outs
jne
add
mov
xchg
xchg
add
add
mov
retf
add
add
fadd
jecxz
add
add
or
add
add
add
add
push
add
add
add
sub
add
xor
add
add
pop
add
add
add
push
add
add
add
add
add
lahf
scas
add
add
ret
leave
add
add
add
xlat
fld
add
out
std
add
or
adc
add
add
add
add
add
add
add
add
dec
add
popa
push
ja
add
add
add
lahf
add
add
add
lods
add
mov
add
fadd
add
out
add
add
sti
add
add
push
add
add
and
sub
add
add
add
aas
inc
dec
add
add
add
add
add
push
add
add
jbe
jge
add
add
popf
add
add
add
add
(bad)
retf
add
aam
add
jecxz
jmp
add
add
or
add
cmp
dec
dec
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
aam
add
add
add
add
add
add
add
repnz
cli
add
add
add
add
add
add
xor
add
cmp
add
add
add
ins
jae
add
add
add
add
add
lahf
add
cmps
add
add
add
add
iret
aad
fld
in
cmc
add
or
add
sbb
add
sub
xor
cmp
aas
add
add
add
ins
add
test
add
add
add
add
movs
add
add
add
retf
add
aad
out
out
hlt
cli
add
add
add
sub
add
add
add
add
inc
add
dec
add
push
add
add
jb
add
add
add
add
add
add
add
add
add
add
int3
rcr
add
add
add
add
in
add
add
add
add
add
add
add
add
adc
sub
cmp
dec
push
pop
add
pusha
add
push
jle
test
add
pop
add
add
add
add
add
(bad)
fadd
add
add
add
jmp
add
hlt
add
adc
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
into
add
add
fld
add
in
repz
inc
add
add
add
sbb
add
add
add
add
xor
add
cmp
add
add
dec
add
add
add
add
outs
add
add
add
add
cmps
add
mov
add
add
add
add
fld
stc
add
adc
add
add
and
add
add
add
xor
add
cmp
add
add
add
jb
jns
test
add
(bad)
xchg
add
add
add
mov
add
add
add
add
int3
add
aad
add
add
add
add
and
add
sub
add
add
cmp
add
dec
push
pop
popa
add
add
add
outs
je
add
add
add
add
add
add
mov
rol
in
cmc
sti
add
add
add
adc
add
add
add
add
add
add
inc
add
jae
add
add
add
add
add
add
add
mov
les
aad
fucom
jmp
stc
add
sbb
add
add
add
add
xor
add
add
inc
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
dec
add
outs
je
add
add
add
add
test
mov
add
mov
leave
fld
add
add
add
add
add
add
add
cmp
add
add
add
add
add
imul
je
add
add
add
mov
add
add
add
add
add
add
add
add
int
add
loope
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
inc
add
ins
add
jbe
jge
test
add
add
add
xchg
add
fwait
add
scas
add
add
ret
add
add
add
rol
add
add
add
add
add
add
add
add
add
xor
add
dec
add
add
add
jg
add
add
xchg
add
add
add
add
add
mov
add
enter
fadd
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
bound
add
ja
jg
add
add
add
mov
add
add
test
add
mov
add
add
add
add
into
add
add
add
fild
in
add
add
add
and
add
add
add
add
add
add
pusha
add
imul
add
add
test
add
add
add
add
add
mov
add
add
add
add
add
add
fild
add
call
add
add
add
sti
add
add
adc
add
add
add
add
add
cmp
add
add
jb
jns
add
add
add
mov
add
add
movs
add
add
mov
add
add
leave
add
add
add
(bad)
add
add
add
add
sub
add
add
add
inc
add
add
ins
add
add
jg
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
fiadd
add
in
add
add
add
adc
add
add
sbb
add
add
sub
add
add
add
add
push
pop
add
data16
jne
add
add
add
add
mov
xchg
add
add
sahf
add
add
mov
add
add
add
add
add
add
add
rol
loop
add
push
add
pop
add
add
and
add
aas
add
add
add
outs
add
add
jns
add
add
nop
add
add
add
add
stos
add
add
add
mov
add
retf
add
rol
add
fild
add
add
add
or
add
add
sbb
add
add
and
add
add
add
add
push
pop
add
bound
imul
add
add
jg
add
add
call
add
scas
mov
add
int3
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
imul
add
add
jg
add
add
mov
add
add
add
call
add
add
add
add
add
add
add
add
iret
add
add
add
jmp
repz
add
add
add
add
add
add
add
add
sub
add
add
pop
add
push
add
add
add
jns
add
add
xchg
add
add
test
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
pop
add
add
add
add
jo
add
test
add
add
add
add
mov
add
add
mov
add
add
add
add
add
loopne
add
out
add
add
push
add
add
sbb
add
daa
add
xor
aaa
inc
add
add
add
push
add
add
add
add
add
add
jl
add
add
add
add
cmps
add
scas
add
add
add
fild
add
add
add
cld
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
mov
add
add
int
add
add
fld
add
add
in
add
add
add
add
add
add
sbb
add
daa
add
add
inc
add
add
push
add
pop
pusha
add
push
add
add
add
add
add
add
lea
xchg
call
test
add
add
mov
add
add
fiadd
add
add
add
add
add
add
pop
add
and
daa
add
xor
add
add
add
dec
add
add
pop
add
add
add
add
add
add
jns
add
add
add
add
test
add
add
add
retf
add
add
add
add
out
out
add
add
add
add
add
add
add
add
add
sub
add
aas
add
push
pop
add
pusha
add
add
add
add
add
add
add
mov
add
add
add
mov
add
mov
rol
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
push
add
pop
add
ins
add
jbe
add
add
add
add
add
add
add
add
mov
enter
add
fld
add
add
add
in
repnz
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
retf
rol
add
add
icebp
add
add
add
inc
push
or
add
add
add
add
add
add
add
add
push
add
pop
add
add
add
ins
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
pop
add
add
add
sbb
add
add
add
cmp
inc
add
add
add
add
add
add
add
add
add
ja
add
add
add
add
add
add
popf
add
add
add
add
add
ret
leave
add
rol
add
fild
add
add
add
add
sti
add
add
add
adc
sbb
add
add
add
add
add
add
add
aaa
add
inc
add
add
add
push
add
add
add
add
add
add
fwait
add
add
add
add
add
fild
add
test
or
add
add
adc
add
add
add
and
add
add
add
add
cmp
inc
add
add
add
add
add
add
add
jne
jl
add
add
add
mov
scas
add
add
add
add
add
add
add
aad
add
jmp
add
add
add
cld
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
js
add
add
add
mov
add
add
cwde
add
scas
add
ret
retf
add
add
add
add
cli
add
add
or
adc
add
and
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
jb
jns
add
add
mov
add
add
add
lods
add
add
ret
leave
add
add
call
add
push
add
add
add
xor
add
inc
add
add
add
popa
add
add
ins
add
jne
add
test
mov
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
cli
add
add
add
or
add
push
add
add
cmp
inc
add
add
pop
push
add
add
add
test
add
add
add
xchg
add
add
lahf
add
add
stos
add
add
les
add
add
aad
fadd
add
out
in
add
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
jl
add
test
add
add
movs
add
scas
mov
add
add
add
add
aam
add
add
add
add
out
add
add
add
std
add
add
add
add
and
add
add
cmp
add
inc
add
add
imul
je
jnp
or
add
add
add
mov
add
add
add
add
add
add
fadd
add
add
add
add
add
add
cld
add
add
pop
or
add
add
add
add
add
add
add
dec
pop
add
add
add
add
add
jno
add
add
add
add
xchg
add
movs
stos
add
mov
add
mov
rol
add
add
add
out
add
cmc
add
or
add
add
add
add
daa
add
add
add
xor
add
add
add
add
add
add
xchg
sahf
movs
add
lods
add
add
fld
add
jecxz
jmp
add
add
add
add
adc
add
add
add
add
add
add
inc
inc
add
add
push
add
add
add
add
ins
jae
jp
add
add
add
add
add
add
mov
add
retf
add
fsubp
add
in
add
add
or
add
add
add
pop
and
xor
add
add
inc
add
add
add
push
add
add
add
add
ins
add
add
add
add
add
add
add
movs
add
lods
add
add
add
fadd
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
add
add
ins
add
add
js
add
add
add
add
mov
add
add
retf
add
add
add
add
add
add
add
add
lock
add
add
sbb
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
retf
fld
add
add
add
add
add
add
adc
and
add
dec
add
add
add
add
add
add
add
add
ja
add
add
lea
xchg
add
add
add
add
add
enter
add
add
add
fsubp
add
add
sub
add
add
add
add
add
add
add
add
add
add
mov
add
xchg
test
mov
add
rol
add
add
add
add
add
add
add
lock
inc
add
add
add
add
add
add
add
das
add
inc
add
dec
add
add
add
je
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
jmp
hlt
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
pop
imul
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
mov
add
add
out
add
add
add
stc
inc
add
add
pop
add
add
add
sub
add
add
add
add
add
push
add
ins
add
jg
add
add
add
add
add
add
aad
add
in
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
add
push
add
pop
add
add
push
add
add
add
add
add
add
lods
mov
add
add
add
add
add
add
add
loop
add
test
or
add
pop
add
add
xor
inc
add
dec
dec
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
int
add
add
add
add
add
add
add
adc
add
cmp
add
inc
add
add
add
add
add
add
add
add
jb
add
add
test
add
mov
add
mov
add
mov
add
add
add
(bad)
add
add
hlt
add
add
add
sbb
add
add
inc
inc
add
dec
add
add
add
add
add
add
add
movs
add
add
add
add
add
xlat
add
add
add
in
add
add
icebp
add
or
add
add
and
add
sub
add
add
imul
add
xchg
add
add
add
add
add
xchg
lea
add
add
call
add
mov
add
add
add
add
fadd
add
add
jmp
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
add
add
scas
add
add
mov
add
rol
fadd
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
or
and
add
das
add
add
inc
add
dec
pop
add
add
outs
add
add
add
add
add
add
mov
add
add
mov
add
add
add
fild
jecxz
add
in
add
add
add
add
add
add
add
sub
add
add
xor
add
add
add
add
add
arpl
add
add
test
add
mov
add
add
scas
add
mov
add
lds
int3
fadd
add
add
add
add
test
add
add
add
sub
add
add
inc
add
add
add
pop
add
add
jge
test
mov
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
add
add
add
add
push
add
add
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
jge
add
add
add
add
add
add
add
add
add
add
mov
add
rol
add
fild
add
add
add
repnz
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
js
add
add
add
stos
mov
add
int
add
out
add
lock
add
add
add
add
add
add
add
add
add
sbb
sub
das
add
add
add
inc
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
add
in
repz
sti
add
add
sbb
add
add
add
cmp
inc
push
add
add
add
popa
add
add
add
add
jl
add
add
mov
add
add
add
add
mov
add
add
add
add
jmp
add
add
add
or
add
and
add
sub
xor
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
retf
fild
add
add
out
add
add
hlt
add
add
add
add
add
adc
add
add
add
sub
add
add
add
add
add
add
add
add
add
js
jg
add
add
add
add
add
pushf
add
add
mov
add
add
les
add
add
out
add
test
add
add
add
add
add
das
add
add
inc
add
dec
pop
add
add
ins
add
add
add
add
add
add
mov
add
add
add
add
mov
(bad)
retf
add
add
add
add
add
add
add
clc
add
add
push
add
add
add
add
add
add
add
add
add
cmp
add
push
add
arpl
add
add
jnp
add
add
fwait
add
movs
stos
add
mov
mov
add
add
retf
add
add
xlat
add
in
add
add
add
add
add
add
add
pop
add
sub
add
add
add
add
inc
add
add
jb
jns
add
mov
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
imul
add
add
js
add
mov
add
add
add
int3
add
add
xlat
add
loopne
add
out
add
push
add
add
add
adc
sbb
add
add
add
add
add
add
add
push
add
add
ins
add
add
add
add
xchg
popf
add
cmps
add
add
aam
add
fiadd
in
add
add
icebp
or
add
add
add
add
add
add
xor
add
add
inc
add
add
push
add
add
add
add
imul
add
add
add
add
add
add
add
mov
add
mov
add
add
add
loopne
add
add
add
or
add
add
add
sbb
add
sub
xor
add
add
add
add
add
add
add
push
pop
add
add
add
push
add
add
jbe
add
add
add
add
mov
add
mov
add
mov
add
fld
add
add
add
test
add
add
add
adc
add
sbb
and
add
add
sub
add
add
add
add
add
add
pop
add
add
add
add
ja
add
xchg
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
out
add
add
add
push
sbb
add
add
add
add
inc
add
add
dec
add
push
pop
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
leave
add
fadd
add
add
add
add
add
add
adc
add
xor
add
dec
add
add
pop
add
add
add
add
add
add
js
add
add
mov
xchg
add
add
add
add
add
retf
add
add
add
add
out
out
add
add
add
add
add
add
add
add
add
sub
add
aas
add
push
pop
add
pusha
add
add
add
add
add
add
add
mov
add
add
add
mov
add
mov
add
add
loop
add
add
out
add
push
add
sbb
add
add
add
add
add
dec
push
add
pop
add
push
xchg
add
xchg
add
add
add
add
add
add
retf
add
add
add
in
add
add
cmc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
mov
mov
into
aam
add
add
hlt
add
add
add
add
or
add
add
add
sbb
add
add
inc
add
push
add
pop
add
add
add
jo
xchg
popf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
pop
add
add
sub
add
add
add
dec
add
add
add
add
add
ins
jl
add
add
mov
add
add
xchg
add
add
add
mov
add
add
add
add
add
add
add
leave
iret
add
fadd
add
loope
add
add
add
add
add
add
adc
add
add
xor
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
mov
add
enter
add
add
out
add
inc
add
or
sldt
add
add
add
add
add
sub
add
add
add
add
inc
add
add
push
add
pop
add
add
data16
add
add
jge
test
add
add
add
xchg
cdq
add
add
add
add
mov
add
add
add
add
add
add
add
fiadd
add
repnz
add
add
adc
add
sbb
xor
add
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
retf
add
aam
add
fld
add
out
inc
add
adc
sbb
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
data16
add
jno
add
add
add
add
add
add
add
mov
add
add
add
aad
fadd
jecxz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
add
dec
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
jl
add
add
mov
add
enter
add
add
out
add
inc
add
or
adc
add
add
sbb
add
add
add
add
add
add
inc
add
add
push
add
pop
add
add
ins
add
add
test
add
add
add
xchg
call
add
add
add
mov
add
add
add
add
add
add
add
fild
add
repz
add
add
add
xor
add
add
add
inc
dec
add
push
add
add
add
add
ins
add
add
add
jp
or
add
add
add
mov
add
add
add
int3
add
aad
add
fiadd
add
call
add
add
add
and
add
cmp
add
inc
add
add
add
add
add
add
add
add
jb
add
add
test
add
mov
add
mov
add
mov
add
add
add
aad
fadd
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
add
dec
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
hlt
add
push
add
sldt
add
add
add
add
aas
add
inc
add
push
pop
add
add
add
add
add
jne
add
jle
xchg
add
add
xchg
add
add
add
add
lods
add
add
mov
mov
add
rol
add
add
loop
jmp
add
add
add
add
add
lldt
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
xchg
cmps
add
add
mov
add
add
loop
add
add
add
add
std
add
add
add
or
add
add
push
add
add
inc
add
dec
add
add
add
pop
add
add
add
add
lahf
scas
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
or
add
add
sbb
and
add
sub
add
add
add
add
pop
push
add
add
add
add
mov
add
mov
add
add
add
mov
add
ret
add
add
loope
add
add
add
idiv
add
add
add
add
add
sbb
add
add
add
add
aaa
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
rol
add
jmp
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
mov
add
add
add
enter
fadd
add
hlt
add
std
add
add
sbb
add
add
add
xor
add
aas
add
add
add
add
add
add
add
add
jno
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
out
add
test
add
and
add
sub
add
add
add
add
add
push
add
add
pop
add
add
data16
add
ja
add
mov
add
add
add
add
int
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sub
add
cmp
add
inc
push
add
add
bound
add
add
jns
add
add
add
add
sahf
add
add
add
add
add
fld
add
add
clc
add
add
add
add
add
sub
add
add
add
inc
add
dec
pop
add
add
outs
add
add
add
add
add
add
mov
add
add
mov
add
add
add
retf
add
add
add
add
add
add
add
clc
add
add
push
add
add
add
add
add
add
add
add
add
cmp
add
push
add
arpl
add
add
jl
add
add
pushf
add
movs
stos
add
mov
mov
add
add
retf
add
add
fadd
(bad)
add
add
add
repz
add
add
add
push
add
sub
add
add
add
add
add
pop
popa
add
push
jno
js
add
xchg
add
add
add
add
add
add
add
ret
add
add
into
add
add
fld
loopne
add
jmp
add
add
or
add
adc
add
add
add
xor
cmp
inc
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
retf
add
aad
add
jecxz
add
add
add
add
add
add
add
push
add
add
add
sub
add
add
cmp
add
add
add
add
je
add
jle
xchg
fwait
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
cmp
add
push
add
add
add
add
add
jns
add
add
add
add
add
add
add
mov
add
les
add
fld
add
add
add
add
add
add
add
sbb
add
add
cmp
add
dec
add
add
add
add
data16
add
add
add
add
add
add
pushf
add
movs
add
add
add
aam
add
add
add
repnz
cli
or
add
adc
sbb
add
add
daa
add
add
add
add
add
add
inc
add
add
dec
add
add
add
add
add
add
add
mov
pop
add
add
add
sahf
movs
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
adc
add
push
add
add
cmp
dec
add
push
push
add
pop
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
ret
add
aad
add
add
add
add
add
add
push
add
push
add
add
inc
add
add
push
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
ret
add
add
add
add
fiadd
out
in
std
add
add
add
add
add
add
add
add
add
and
add
aaa
add
dec
dec
add
pop
add
add
add
add
add
add
add
cdq
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
cld
add
sldt
pop
add
add
add
add
add
add
push
add
pop
add
ins
jge
add
xchg
mov
add
add
call
add
mov
add
add
add
add
fld
add
add
jmp
add
add
add
add
add
sbb
pop
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
add
add
mov
add
add
add
rol
fiadd
add
add
add
add
add
add
add
test
add
add
adc
add
add
push
add
add
dec
add
push
add
add
add
add
add
add
add
mov
xchg
add
mov
add
rol
add
add
add
add
add
add
add
add
add
out
add
add
stc
add
add
add
add
adc
add
add
and
sub
add
xor
add
add
add
pop
add
add
add
add
add
add
add
jl
add
add
mov
add
add
add
add
add
add
add
add
add
add
mov
add
add
jmp
add
add
add
adc
add
add
add
add
add
add
add
xor
cmp
add
add
add
dec
add
add
add
add
add
add
xchg
add
add
add
retf
fadd
add
lock
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
inc
add
dec
add
add
pop
pop
add
add
outs
add
add
add
add
test
stos
add
add
add
add
add
add
add
rol
add
jecxz
add
cld
add
add
and
add
add
add
aaa
cmp
dec
pop
add
add
add
push
jno
add
add
add
test
add
add
xchg
add
test
add
add
add
mov
add
int
add
xlat
add
repz
cld
add
add
adc
add
sub
add
xor
cmp
add
add
inc
add
add
add
add
add
add
add
add
jb
add
jge
add
xchg
xchg
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
xor
add
inc
pop
add
add
add
jo
add
jle
xchg
add
add
add
add
add
mov
add
add
add
add
add
loop
add
add
std
add
add
add
add
add
sub
cmp
inc
dec
add
push
bound
add
ins
add
add
add
add
add
add
add
cdq
add
add
movs
add
add
retf
xlat
add
add
add
add
add
add
add
std
add
add
add
add
sbb
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
jl
add
add
mov
add
add
add
xchg
popf
add
add
add
ret
add
add
into
aad
add
add
loope
add
add
add
stc
add
add
sbb
sub
add
inc
add
add
add
dec
add
add
add
add
jg
add
mov
add
add
add
add
mov
mov
retf
loope
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
jecxz
add
in
repz
add
add
or
add
add
add
add
add
add
das
add
add
add
add
add
add
add
push
pop
add
add
xchg
add
add
add
add
add
add
aam
add
call
test
add
adc
and
add
xor
cmp
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
into
add
add
add
loopne
out
add
add
pop
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
fld
loopne
add
add
add
add
add
add
sbb
add
sub
add
add
inc
add
add
add
add
add
add
jg
add
add
add
lea
add
add
call
mov
add
add
add
into
add
xlat
fadd
in
add
add
add
test
add
add
add
add
adc
add
add
push
and
sub
add
add
add
add
pop
add
add
add
add
add
add
add
add
xchg
add
add
popf
mov
add
add
ret
fld
loopne
add
inc
add
add
add
add
push
add
inc
add
add
add
push
pop
add
add
add
add
add
xchg
popf
add
add
mov
add
add
add
add
add
add
in
cli
add
or
add
add
add
sbb
add
add
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
stos
mov
add
mov
add
xlat
add
add
loop
add
add
add
add
std
add
add
or
add
add
add
add
add
add
add
cmp
add
push
add
add
add
bound
push
add
add
add
add
add
add
add
add
lds
int3
add
add
fsub
add
add
add
add
add
or
add
add
add
pop
add
add
add
sub
aas
inc
add
add
push
add
pusha
data16
add
add
add
add
add
nop
add
add
fwait
add
add
add
add
add
aad
add
add
loope
add
add
add
lock
add
push
or
adc
add
add
add
sub
add
add
inc
add
add
add
push
add
add
add
add
add
add
cmps
add
int
add
xlat
add
add
out
add
sti
add
add
or
adc
sbb
add
sub
cmp
add
add
add
pusha
add
add
add
add
add
add
jnp
add
add
inc
add
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
loope
add
jmp
test
add
add
adc
add
add
add
add
add
ss
dec
add
add
add
add
xchg
add
mov
add
add
rol
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
ret
add
add
into
add
add
add
loope
jmp
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
dec
add
add
add
jne
add
add
add
add
movs
add
add
add
mov
mov
fld
add
jecxz
add
in
repnz
add
or
add
push
add
sub
add
add
add
inc
add
add
add
test
add
add
sldt
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
rol
add
add
out
add
add
add
add
add
adc
add
add
add
ss
add
add
dec
add
push
add
add
add
jp
add
add
add
add
add
add
mov
add
fiadd
add
call
clc
add
add
add
add
and
sub
add
cmp
dec
add
add
add
pop
add
add
add
add
outs
add
add
add
cwde
sahf
add
mov
add
add
add
add
fiadd
add
add
add
add
add
add
cmc
add
add
add
or
sldt
sbb
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
xchg
add
popf
add
add
add
add
add
mov
fucom
add
test
add
add
add
or
add
add
add
add
add
ds
add
add
add
add
outs
add
add
add
add
movs
add
add
mov
add
int
jecxz
add
add
add
cld
add
add
add
add
sbb
add
add
add
add
xor
inc
add
add
add
add
add
add
add
add
xchg
add
add
add
xchg
fwait
add
add
enter
add
fiadd
add
add
out
add
add
add
add
add
add
cmp
push
add
add
add
mov
add
add
add
add
mov
add
add
aad
add
jmp
add
or
add
pop
add
add
add
add
xor
add
add
add
add
add
pop
pop
add
add
add
xchg
fwait
add
add
add
add
add
lds
add
add
add
add
add
loop
jmp
add
add
add
add
add
add
add
add
add
xor
inc
add
add
add
add
add
add
add
add
add
jg
add
mov
add
into
add
add
add
fild
jecxz
add
add
add
add
add
adc
das
xor
add
dec
add
pop
ins
add
add
add
add
add
add
add
add
add
dec
push
add
add
add
jg
add
add
test
add
add
mov
les
add
add
rcl
add
add
out
add
add
add
add
add
add
add
add
and
add
sub
aaa
add
add
inc
add
add
push
pop
add
add
add
add
add
ja
add
scas
mov
add
add
add
add
(bad)
add
cmp
add
add
add
add
add
jge
test
mov
add
add
add
add
scas
add
add
add
mov
add
add
add
add
add
add
out
std
add
or
add
add
add
pop
and
add
add
inc
push
add
add
pop
add
add
add
aaa
add
add
inc
add
pop
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
rol
add
fucom
add
add
add
adc
add
add
add
add
add
add
add
cmp
inc
add
add
add
js
add
add
mov
add
mov
add
add
add
aad
add
add
add
add
add
add
add
add
add
add
add
sbb
add
cmp
inc
add
add
push
add
pop
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
rol
add
add
loopne
add
add
add
out
test
add
push
or
adc
add
add
xor
add
add
cmp
add
add
dec
push
add
outs
jbe
xchg
add
add
add
mov
add
scas
add
(bad)
add
add
add
add
lock
add
adc
add
sub
add
add
add
inc
add
add
add
push
add
add
add
add
push
add
add
ja
add
add
scas
add
mov
add
add
into
add
add
fld
add
add
add
add
add
add
cmc
add
add
add
or
sldt
sbb
add
add
add
add
add
add
add
add
push
jb
add
add
add
add
call
lods
mov
lds
int3
rol
in
add
inc
add
add
add
adc
add
add
add
add
dec
add
add
add
add
jp
add
mov
add
add
add
add
mov
mov
add
add
add
add
add
fiadd
icebp
clc
add
add
add
or
add
add
add
sub
add
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
mov
add
fadd
add
add
jmp
add
inc
add
or
add
add
xor
inc
dec
add
pop
add
add
add
push
add
nop
add
add
stos
add
add
iret
add
add
add
out
add
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
jo
add
add
xchg
movs
add
add
scas
add
add
add
rol
add
add
add
add
add
add
add
add
or
sbb
add
add
add
add
add
add
add
add
add
xchg
add
add
sahf
movs
add
mov
add
add
add
add
in
add
add
add
add
pop
add
add
and
add
sub
xor
cmp
add
pop
add
add
add
push
jb
add
add
add
add
mov
stos
mov
mov
lds
add
aad
fadd
add
add
add
icebp
add
add
add
add
add
sbb
add
add
xor
add
add
add
push
add
add
add
add
add
je
add
add
add
popf
movs
add
add
add
add
ret
retf
add
add
add
add
add
jmp
add
add
add
add
add
and
sub
add
add
add
push
add
add
add
add
add
add
add
mov
add
add
add
mov
add
enter
add
add
add
fild
add
add
in
repnz
add
add
lldt
add
add
and
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
jbe
add
movs
add
add
add
add
add
mov
fild
out
add
add
add
cli
add
add
add
push
add
pop
add
add
sub
cmp
inc
dec
add
add
jae
add
add
add
add
test
add
add
fcomp
add
add
add
add
add
add
add
add
add
add
sub
xor
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
mov
retf
add
add
fld
in
add
add
add
add
add
add
add
add
daa
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
cwde
add
add
add
add
mov
add
add
add
add
add
add
add
fild
out
add
add
add
add
add
add
and
add
ss
add
push
add
pop
add
add
add
add
add
add
add
add
add
add
add
test
add
int3
add
add
add
fild
add
out
add
add
inc
add
add
sbb
add
add
add
add
add
cmp
inc
add
dec
add
popa
add
add
add
add
add
add
jge
add
add
add
lods
add
add
mov
add
add
add
add
rol
add
fucom
add
add
add
adc
add
add
add
add
add
add
add
cmp
inc
add
add
add
js
add
add
mov
add
mov
add
add
add
aam
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
cmp
add
push
add
pop
add
add
add
add
add
add
ja
add
add
add
add
add
mov
add
add
add
add
add
loopne
add
jmp
or
add
add
sbb
add
add
add
das
add
add
inc
add
pop
popa
add
add
mov
add
add
add
add
rol
add
add
add
fild
add
out
test
add
add
add
add
sbb
add
add
add
add
add
add
add
add
push
add
add
add
add
add
cwde
add
mov
add
les
add
add
add
add
add
add
fild
add
add
in
repnz
add
add
add
add
add
add
add
add
add
add
cmp
dec
push
add
add
add
jo
add
add
add
add
xchg
sahf
add
iret
aad
add
add
add
add
test
sbb
add
add
cmp
add
dec
push
add
add
add
jne
add
add
fwait
add
add
add
add
add
fsub
add
add
add
cmc
add
inc
adc
and
add
add
add
add
add
add
cmp
add
add
dec
dec
add
add
add
add
add
test
add
add
add
xchg
call
add
add
add
aam
add
add
loope
add
add
add
cli
add
adc
add
add
inc
add
add
add
push
add
add
add
add
test
add
mov
add
add
add
add
mov
add
rcr
add
add
add
add
clc
add
add
add
add
add
add
add
add
and
cmp
add
add
add
add
add
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
test
push
add
add
push
add
add
sub
add
add
add
add
push
push
add
jo
add
add
add
add
add
add
scas
add
(bad)
add
add
add
add
lock
add
adc
add
sub
add
add
add
inc
add
add
add
push
add
add
add
add
push
add
add
ja
add
add
lods
add
mov
add
add
int
add
add
jmp
hlt
add
add
add
or
adc
add
add
xor
add
add
cmp
add
add
add
pop
arpl
jb
add
add
add
add
cdq
add
mov
mov
les
int3
rol
in
add
std
add
add
add
or
adc
add
add
add
add
add
inc
dec
add
add
add
add
jns
add
mov
add
scas
add
add
add
add
add
add
fld
lock
add
add
or
add
sbb
and
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
jne
add
add
add
add
mov
add
xlat
add
add
loop
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
mov
into
add
add
add
out
add
add
add
add
or
adc
add
add
add
and
add
add
das
xor
add
pop
add
add
data16
outs
jne
jge
add
out
add
add
add
add
add
add
or
add
add
adc
add
add
inc
add
add
add
add
add
add
pusha
add
add
jle
test
add
call
lods
add
mov
add
rol
fadd
loopne
add
inc
add
add
add
add
pop
add
inc
add
add
add
pop
pusha
add
add
add
add
add
sahf
movs
add
add
les
retf
add
add
add
add
add
add
add
out
add
add
add
add
daa
add
add
aas
add
add
dec
pop
add
add
data16
add
add
add
add
add
add
add
iret
(bad)
fadd
in
add
add
add
clc
inc
add
add
or
add
add
push
and
add
add
add
add
inc
add
add
outs
add
add
add
jge
test
add
add
add
mov
rcr
add
add
add
add
add
std
add
adc
add
and
sub
add
add
add
cmp
add
add
inc
dec
add
add
add
add
add
add
test
add
add
add
add
les
add
add
rcl
add
add
call
add
inc
add
add
or
add
add
add
sbb
add
add
cmp
inc
add
dec
add
add
push
pop
add
add
add
add
add
jnp
add
mov
add
int3
add
add
add
fiadd
loop
add
add
add
add
add
add
xor
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
rol
into
add
add
fiadd
add
jmp
cli
add
add
add
add
add
push
add
add
and
add
add
cs
cmp
add
add
add
add
imul
add
js
add
add
add
cmps
add
add
mov
add
add
add
add
into
add
add
fild
lock
inc
adc
add
sub
add
add
add
add
add
add
add
imul
add
add
lahf
add
mov
add
add
add
add
fld
in
add
add
add
hlt
add
add
add
pop
add
add
add
add
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
mov
add
add
add
add
add
fadd
add
out
repz
add
add
add
add
adc
add
add
sub
add
xor
add
add
add
dec
add
add
add
xchg
add
add
add
add
mov
add
add
xlat
add
add
repnz
add
add
or
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
xchg
add
popf
movs
add
add
rol
add
add
add
rol
add
add
add
add
add
out
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xchg
call
add
add
add
add
add
add
rol
add
add
add
add
repz
sbb
add
and
add
cs
add
add
add
add
add
add
bound
imul
mov
add
add
add
add
add
add
add
add
fild
out
add
add
add
sti
add
or
add
add
add
push
add
add
cmp
add
add
inc
dec
add
pop
add
jne
add
add
add
add
add
add
mov
add
rol
add
retf
rol
add
add
fiadd
add
add
add
clc
add
add
sbb
sub
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
mov
iret
(bad)
add
add
add
add
test
add
add
add
add
add
and
ss
add
push
add
pop
pop
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
rol
add
add
fild
add
add
add
out
cmc
add
add
push
or
adc
add
sub
add
add
add
add
add
dec
push
add
outs
jne
xchg
add
add
add
mov
add
scas
add
aad
add
fild
add
jmp
add
add
add
add
sub
add
add
add
inc
add
add
add
push
add
add
add
add
push
add
add
jbe
add
add
lods
add
mov
add
add
int
add
add
jmp
cmc
add
add
add
or
adc
add
add
xor
add
add
add
add
add
add
add
add
imul
add
jnp
add
add
add
call
lods
mov
lds
int
add
jmp
add
add
add
add
or
adc
add
add
add
add
dec
add
add
add
add
jp
add
mov
add
add
add
add
mov
mov
add
add
add
add
add
fild
repnz
add
add
add
or
add
add
add
sub
add
add
dec
add
add
push
add
add
add
add
add
add
add
add
add
mov
add
fld
add
add
jmp
add
add
add
or
add
add
xor
inc
dec
add
pop
add
add
add
imul
add
add
add
rol
add
rol
fadd
loopne
add
out
add
add
add
add
lldt
add
add
add
add
add
add
add
cmp
push
push
add
add
add
add
add
add
add
add
add
cmps
add
add
mov
add
add
mov
add
add
out
add
add
add
add
add
add
add
adc
add
sbb
sub
xor
add
add
add
inc
dec
add
add
add
add
add
ins
je
xchg
mov
add
add
cmps
lods
add
rol
add
add
into
add
test
add
add
add
adc
add
es
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
fsubp
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
jp
add
add
add
test
mov
add
add
add
add
rol
add
fsub
add
add
add
adc
add
add
add
add
add
add
add
cmp
add
add
add
add
jp
add
add
test
mov
mov
add
add
add
add
add
or
add
add
add
sbb
add
add
sub
add
add
jnp
cdq
add
add
add
test
mov
add
add
fadd
add
add
add
add
out
add
add
add
inc
add
or
add
adc
sbb
add
and
add
add
add
push
add
add
add
add
imul
mov
xchg
add
add
add
mov
add
add
mov
add
add
add
fld
add
add
jmp
or
add
adc
add
sub
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
jp
add
add
add
add
add
add
add
ret
add
rol
fiadd
in
add
add
std
add
push
add
add
add
add
sbb
and
add
add
add
add
add
bound
add
add
add
add
jnp
add
xchg
mov
add
cdq
mov
add
scas
add
mov
add
xlat
add
in
in
inc
pop
add
add
add
adc
add
add
xor
add
cmp
add
push
add
add
add
outs
add
jge
add
mov
add
sahf
scas
add
add
add
add
rol
add
add
in
add
add
add
add
add
add
add
sub
add
cmp
push
add
ins
add
jbe
add
xchg
add
add
add
mov
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
inc
add
add
add
add
pop
pusha
add
add
add
add
add
add
add
add
xchg
xchg
add
add
add
cmps
lods
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
or
sbb
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
add
add
imul
add
add
add
jl
add
add
call
add
add
add
mov
mov
loop
jmp
add
add
inc
push
add
add
add
adc
cmp
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
lds
add
add
add
xlat
add
loop
icebp
add
or
add
add
add
sbb
add
ins
ja
add
add
add
add
add
xchg
add
add
add
repz
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
mov
add
add
rol
add
xor
add
add
aas
inc
add
add
popa
add
add
add
add
add
add
add
add
pop
add
add
add
imul
add
add
add
add
lods
add
add
add
mov
add
add
add
add
add
call
add
test
push
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
bound
add
add
add
add
add
add
add
add
add
add
mov
add
add
rol
add
add
out
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
aas
add
dec
dec
add
add
add
add
add
jle
add
add
add
sahf
add
add
add
add
into
add
add
hlt
add
std
add
push
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
pop
add
js
add
add
add
pop
add
daa
add
aas
add
add
add
add
add
add
add
push
add
add
add
pop
add
add
pushf
add
add
add
add
int
add
add
jmp
add
add
add
add
or
add
add
sbb
add
add
cmp
add
add
add
add
add
add
js
add
add
add
add
test
mov
add
enter
add
add
test
inc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
pop
add
jae
add
add
add
add
xchg
add
add
add
stos
add
add
ret
add
add
add
fld
add
call
add
add
add
add
add
add
add
add
sbb
and
sub
add
xor
add
add
add
inc
pop
add
add
add
add
add
jb
add
add
test
xchg
cmps
add
mov
add
add
add
retf
add
add
in
add
add
add
add
pop
add
and
sub
add
add
add
add
add
pop
add
add
outs
add
add
add
jl
add
add
add
add
add
add
add
add
add
fiadd
add
add
add
out
add
cld
add
add
add
push
add
add
add
add
sub
add
add
add
push
add
add
add
add
ja
jg
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
cli
add
add
push
pop
add
and
add
add
add
push
add
add
jp
add
mov
add
add
add
stos
add
add
rol
add
add
loop
add
add
add
add
or
add
adc
add
xor
add
add
add
add
pop
add
add
add
add
outs
jbe
jle
add
add
add
add
add
add
movs
lods
add
add
add
mov
retf
add
add
add
add
add
add
sti
add
add
add
add
add
add
cmp
add
inc
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
rol
iret
add
add
add
add
stc
add
add
or
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
jbe
add
add
add
add
add
test
add
rol
add
add
add
add
fild
out
add
add
add
add
add
add
add
add
or
add
add
sub
add
xor
add
dec
add
add
add
pop
add
add
add
add
xchg
movs
add
add
add
add
add
fadd
add
add
cmc
add
inc
add
add
add
sbb
add
add
cmp
add
add
add
add
pop
add
push
jns
add
add
add
lods
add
mov
add
add
into
add
add
add
fld
add
call
add
add
add
add
add
add
xor
add
add
add
inc
add
add
add
add
add
outs
add
add
add
add
add
add
stos
add
add
add
add
add
add
fld
in
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
dec
push
add
add
pop
outs
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
jecxz
add
add
add
add
add
add
or
add
add
xor
add
add
add
add
dec
add
add
add
pop
add
add
add
jno
jns
add
or
add
add
mov
add
add
add
rol
rol
fiadd
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
dec
add
add
outs
add
add
add
nop
mov
add
add
add
add
into
aad
add
add
hlt
add
inc
add
sbb
add
sub
inc
add
pusha
add
push
add
jp
add
add
add
scas
add
mov
add
add
add
add
iret
add
add
add
fiadd
add
jmp
add
add
add
push
add
add
add
sbb
add
add
add
add
inc
add
pop
ins
add
add
add
test
add
cdq
mov
add
add
add
add
add
add
fld
in
in
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
aas
add
add
dec
push
add
add
pop
outs
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
loop
add
add
or
add
add
das
add
cmp
add
add
add
add
add
add
add
pusha
add
add
jb
add
jge
add
add
add
xchg
add
lods
add
add
add
add
aam
add
add
add
add
add
add
add
add
cld
add
add
add
add
sbb
add
and
add
cmp
add
add
inc
add
add
data16
add
add
add
add
add
add
xchg
add
add
add
add
add
int
add
add
in
add
idiv
add
add
add
sub
xor
add
push
add
add
add
js
add
add
add
lods
add
mov
add
add
add
add
iret
add
add
add
fld
add
out
add
repnz
add
add
add
add
add
sbb
add
add
add
add
add
dec
push
add
add
add
add
add
jb
add
add
add
add
add
test
add
mov
add
add
fld
loope
jmp
add
std
add
add
or
add
add
add
add
add
add
add
add
add
add
add
pop
imul
je
add
add
add
mov
mov
add
add
add
add
add
fiadd
add
add
add
add
add
inc
pop
add
and
add
add
add
add
dec
add
add
add
pop
add
add
add
ins
add
add
jg
add
add
add
xchg
add
scas
add
add
add
add
aam
add
add
add
add
add
add
add
add
sti
add
add
add
add
pop
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
retf
add
add
xlat
call
add
add
add
add
add
add
sub
add
add
add
add
dec
add
push
add
popa
add
add
add
add
add
sahf
add
cmps
add
mov
add
add
add
add
into
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
dec
pop
add
add
add
add
add
add
add
fwait
add
add
add
aam
fadd
add
out
add
add
add
std
sldt
add
add
add
add
add
das
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
xchg
add
rol
add
rol
add
add
add
add
add
out
add
add
adc
add
add
add
add
add
add
add
inc
add
add
add
pop
add
add
ins
jb
add
add
add
add
cdq
add
add
add
add
mov
add
add
iret
add
add
add
add
in
add
add
add
sti
add
add
push
add
add
add
add
xor
cmp
dec
add
add
pop
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
(bad)
add
loopne
add
add
add
cld
add
add
add
and
sub
cmp
inc
add
dec
add
push
add
add
add
add
jne
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
sbb
add
add
add
add
add
add
add
pop
add
add
add
imul
add
add
add
add
cmps
add
add
add
leave
add
add
add
add
in
add
add
add
add
or
add
add
add
sbb
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
les
add
add
add
add
add
jecxz
jmp
add
add
adc
add
add
add
add
sub
add
add
add
add
add
add
dec
add
add
add
add
add
jb
add
add
add
mov
add
add
add
add
add
add
add
add
fchs
add
add
add
out
cmc
add
add
add
add
xor
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
add
add
mov
iret
fadd
add
add
in
add
add
add
adc
sbb
sub
xor
add
dec
add
add
add
pop
add
add
mov
add
add
movs
add
add
add
mov
add
mov
add
add
add
jecxz
add
add
add
add
or
add
add
add
sbb
and
add
add
add
add
add
dec
add
add
add
pop
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
pop
add
add
and
add
add
add
add
add
add
inc
add
push
pop
add
add
add
add
add
mov
xchg
add
mov
retf
add
add
add
fiadd
jecxz
add
add
or
add
add
add
add
and
add
add
add
add
add
add
add
pop
bound
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
fnclex
add
add
add
lock
add
push
add
add
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
nop
xchg
add
add
mov
add
add
add
leave
add
rcr
add
add
add
in
add
add
add
adc
sbb
sub
xor
add
dec
add
add
add
pop
add
add
add
add
mov
add
mov
add
mov
add
add
add
loop
add
add
add
add
or
add
add
add
sbb
and
add
inc
add
add
add
add
add
add
add
ins
je
add
jle
add
xchg
add
add
add
mov
add
add
aam
add
add
icebp
add
add
add
add
add
add
add
add
push
and
xor
add
add
add
add
add
add
add
pusha
data16
add
or
add
add
add
movs
add
add
add
add
add
add
fiadd
loop
add
add
or
add
add
and
add
add
add
add
add
add
add
pop
pusha
add
add
add
outs
add
xchg
add
add
add
xchg
add
add
add
add
add
add
add
aad
add
add
add
jmp
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
add
add
add
mov
pushf
mov
scas
mov
add
add
add
jecxz
add
clc
add
pop
add
add
add
add
xor
add
add
add
add
add
pop
add
ja
add
add
add
add
add
cmps
add
add
add
add
add
aam
add
add
add
add
sti
add
add
add
add
add
sbb
and
add
add
add
add
cmp
add
add
add
add
add
add
pop
add
add
add
test
add
add
xchg
add
mov
add
mov
add
add
loope
add
in
add
add
add
add
add
add
add
pop
add
add
and
add
add
add
add
add
cmp
add
add
add
add
add
jae
add
add
add
add
cmps
add
mov
mov
add
add
add
add
add
in
add
cmc
add
inc
add
add
add
add
add
add
push
add
add
add
add
cmp
add
inc
dec
add
add
add
pop
add
je
add
add
add
add
xchg
add
add
add
lods
add
add
leave
add
add
add
fcomp
add
add
add
add
add
add
add
add
add
sub
add
aaa
add
inc
add
add
dec
pop
add
add
add
add
add
ja
add
add
mov
popf
scas
add
mov
add
add
add
rol
add
out
lock
add
add
add
adc
sbb
add
add
sub
xor
add
add
add
dec
add
add
jo
add
add
add
add
add
xchg
add
add
add
lds
add
add
add
add
in
add
add
add
add
add
add
add
add
add
sub
add
add
add
inc
add
add
add
dec
push
add
add
add
jne
add
add
add
nop
add
add
add
add
xlat
add
add
add
add
add
add
stc
add
add
add
add
sub
add
cmp
add
add
inc
dec
add
add
ins
jne
jge
nop
add
add
add
add
les
int3
add
jmp
add
add
add
add
or
add
add
add
add
add
add
das
add
add
add
add
add
add
push
add
jo
add
add
add
add
test
add
add
mov
add
add
fild
add
out
add
sti
add
add
add
add
push
add
add
add
add
add
cmp
add
add
add
add
add
add
add
bound
add
add
add
jno
add
add
or
cmps
add
mov
add
add
add
retf
add
add
add
out
add
add
add
add
sbb
add
sub
add
add
add
add
add
add
add
fild
add
add
add
add
add
add
test
add
or
adc
add
push
and
add
xor
add
add
add
add
imul
test
mov
add
add
add
add
add
rol
add
add
add
add
add
icebp
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
dec
push
add
add
pop
add
add
jb
add
add
add
add
add
add
add
mov
aam
out
out
add
clc
add
add
or
add
add
add
add
add
inc
add
dec
add
push
add
add
add
bound
add
add
add
add
jp
add
xchg
pop
add
cdq
mov
add
scas
add
enter
add
add
xlat
add
in
in
inc
push
add
add
add
adc
add
add
add
sub
add
add
add
add
add
add
pop
add
add
jge
add
xchg
add
sahf
scas
add
add
add
add
rol
add
add
in
add
add
add
add
adc
add
add
push
and
add
add
add
add
add
add
arpl
imul
je
add
test
add
add
add
add
add
add
add
add
add
fiadd
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
bound
push
add
add
add
add
add
add
add
xchg
call
stos
mov
add
mov
add
add
add
add
add
add
add
add
in
add
add
add
add
add
sldt
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
pop
bound
add
add
add
add
add
add
add
add
popf
movs
add
add
rol
jecxz
jmp
add
add
inc
push
add
add
add
adc
cmp
add
add
add
add
add
add
add
add
add
add
add
xchg
fwait
add
add
add
test
add
ret
add
add
add
add
loopne
call
add
add
clc
movhps
add
add
add
aaa
add
add
add
add
popa
push
add
add
add
add
add
add
stos
add
add
add
add
retf
add
add
xlat
fiadd
add
add
std
add
push
or
add
and
add
add
inc
add
bound
imul
jne
add
mov
add
add
add
mov
add
add
add
add
fild
add
add
add
add
add
add
add
or
add
push
sbb
add
sub
add
add
add
add
push
add
add
add
add
add
add
xchg
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
in
add
add
add
add
add
adc
add
add
das
add
add
add
add
add
add
add
add
pop
bound
add
add
add
add
add
add
add
add
popf
movs
add
add
rol
jecxz
jmp
add
add
std
add
add
adc
sbb
add
add
inc
add
dec
add
add
add
pop
add
add
add
add
add
add
jl
test
add
(bad)
xchg
add
add
add
movs
add
mov
add
add
add
fild
jecxz
add
add
add
add
add
add
add
add
or
add
add
add
pop
daa
add
add
add
add
add
add
push
add
add
jb
add
jge
add
xchg
movs
add
add
add
add
add
xlat
add
add
jecxz
add
add
add
add
add
std
add
add
add
adc
add
add
xor
add
push
add
add
add
ja
add
add
add
lods
add
mov
add
add
into
add
add
add
fadd
add
out
add
icebp
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
push
add
add
add
add
add
jae
add
add
add
add
add
test
add
add
add
add
add
add
fld
in
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
add
pop
ins
add
jbe
add
add
add
movs
add
add
add
add
add
add
add
fiadd
add
add
add
add
add
std
add
add
and
add
add
xor
add
add
add
add
add
add
add
pop
add
add
ins
add
add
add
add
add
mov
add
add
add
into
loopne
call
add
idiv
add
add
add
push
adc
add
add
add
dec
push
add
bound
add
outs
add
ja
add
add
add
add
add
add
add
add
add
retf
add
add
xlat
call
add
add
add
or
add
and
sub
add
add
add
pop
add
push
jb
add
add
add
test
add
add
add
add
add
fld
add
jecxz
add
out
add
add
add
or
add
add
add
add
xor
add
add
add
inc
add
add
add
add
add
add
outs
add
add
add
jge
add
add
add
xchg
cdq
add
add
add
add
add
add
add
add
aam
fadd
in
add
out
add
clc
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
inc
dec
add
add
push
imul
add
add
add
mov
add
loopne
add
add
add
out
add
add
sbb
add
and
add
add
add
aas
add
add
push
add
imul
add
add
add
add
xchg
add
add
sahf
movs
mov
rol
add
fild
in
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
dec
add
push
add
jbe
add
mov
xchg
add
stos
add
ret
add
add
add
fadd
add
or
sub
add
add
add
add
push
add
pop
add
add
add
jae
add
add
xchg
add
add
add
add
mov
add
add
add
add
loopne
add
add
repnz
add
or
add
sbb
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
mov
nop
add
add
pushf
add
add
add
add
add
lds
add
fiadd
loop
add
add
add
unpckhps
add
and
add
add
xor
add
add
add
pop
add
add
add
add
add
test
add
add
add
add
rol
add
add
jecxz
jmp
add
cld
add
lldt
add
add
add
add
add
add
add
inc
dec
pusha
push
add
add
add
add
movs
stos
add
mov
add
add
add
add
add
add
add
add
add
add
loopne
call
hlt
add
add
adc
add
add
add
add
add
add
add
push
add
add
data16
add
add
add
add
add
add
fiadd
add
add
add
jmp
add
add
add
add
sub
add
add
cmp
add
add
jno
jns
add
add
add
nop
add
add
pushf
movs
mov
rol
add
fiadd
jecxz
add
out
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
push
add
add
add
add
jl
add
xchg
add
add
mov
mov
int3
add
add
add
loope
add
add
or
add
add
push
add
add
add
add
add
add
arpl
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
lock
add
inc
add
add
and
add
xor
add
cmp
inc
add
add
add
add
add
pop
add
outs
add
add
add
add
call
scas
add
add
add
add
leave
add
add
add
fadd
add
in
add
add
or
adc
add
push
add
add
add
cmp
add
add
add
add
ins
add
add
add
lahf
mov
add
add
add
add
fild
add
add
repnz
add
add
add
sbb
add
add
inc
add
add
dec
push
outs
jne
add
add
add
add
add
add
rol
add
add
add
jecxz
add
add
add
add
add
add
or
add
add
add
add
sub
add
inc
add
add
push
add
je
add
add
add
add
mov
add
add
les
loopne
add
add
add
add
or
add
and
add
sub
add
add
add
aas
inc
add
add
pop
add
jb
jp
add
add
add
add
cdq
add
add
movs
stos
ret
leave
add
rcr
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
add
pop
add
add
add
add
add
add
add
add
add
mov
add
rol
add
fld
add
add
out
add
or
add
add
cmp
add
add
add
popa
add
push
add
jne
add
add
mov
add
add
add
add
add
add
lds
int
aad
fld
add
add
add
add
add
idiv
adc
add
and
add
add
cmp
add
inc
add
add
add
add
add
data16
add
add
add
ja
add
add
add
mov
add
add
add
stos
add
add
add
add
leave
add
add
add
fadd
add
out
add
add
lldt
add
add
sub
add
xor
add
add
dec
add
add
add
add
xchg
cdq
add
add
add
add
mov
add
rol
add
fld
add
add
add
repz
add
or
add
add
add
add
add
add
add
add
add
add
ja
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
or
adc
add
add
add
add
xor
add
dec
add
add
jb
add
jl
add
add
add
add
mov
add
add
in
add
add
add
add
adc
add
add
add
add
add
add
cmp
add
add
add
add
add
jns
add
add
add
add
lods
mov
add
add
iret
add
fabs
add
add
add
add
add
add
add
add
add
xor
add
add
add
inc
add
add
dec
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
jmp
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
fild
out
out
add
add
add
inc
add
add
adc
add
add
sub
add
add
push
add
add
add
add
add
ins
je
add
add
add
add
add
add
add
stos
add
mov
fadd
add
add
add
add
add
add
add
push
add
add
add
aaa
add
add
add
add
je
add
add
add
popf
movs
add
add
add
add
leave
add
rol
add
fld
add
call
add
add
add
or
add
xor
cmp
inc
add
add
add
add
add
add
add
add
mov
add
add
add
int
add
call
add
add
add
add
add
or
add
add
add
add
xor
add
add
add
add
push
add
add
jg
add
mov
add
movs
add
scas
add
int3
add
add
add
add
inc
add
add
add
sldt
add
daa
add
xor
add
cmp
add
inc
add
push
add
add
pop
arpl
imul
jnp
add
add
add
mov
add
add
enter
add
in
add
cmc
add
add
add
add
add
add
add
add
and
add
xor
add
add
add
add
add
add
add
add
pusha
add
add
add
add
nop
add
add
add
sahf
add
add
rol
fild
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
xlat
add
jmp
add
add
add
adc
add
add
cmp
add
dec
dec
add
add
bound
add
ins
add
add
add
add
add
pop
add
add
add
add
add
add
mov
add
rol
fadd
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
fild
add
add
add
add
add
add
or
add
add
add
xor
add
push
add
pusha
add
add
add
outs
add
add
jnp
cwde
sahf
add
cmps
scas
add
add
add
add
add
add
add
in
add
inc
add
add
add
sldt
add
sbb
and
add
add
add
add
dec
add
add
add
pop
add
add
ja
add
add
mov
add
add
add
add
add
add
adc
add
add
cmp
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
(bad)
fld
add
add
sti
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
pop
add
add
add
add
add
add
add
add
mov
xchg
add
test
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
sbb
add
add
add
add
dec
add
add
add
add
add
call
scas
add
add
add
add
aad
fucom
add
in
add
add
or
adc
sbb
add
add
add
add
add
xor
push
pop
add
bound
add
jae
jnp
add
xchg
add
add
add
xchg
sahf
add
cmps
mov
add
add
add
add
aad
fld
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
pop
add
add
add
add
add
lahf
add
add
add
add
aam
add
add
add
in
add
add
add
add
add
add
add
and
xor
add
inc
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
sbb
add
add
add
sub
add
add
add
dec
add
add
add
add
jb
add
xchg
mov
add
add
retf
aam
add
add
sti
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
mov
add
add
add
fiadd
add
add
icebp
pop
push
add
pop
sbb
add
add
add
add
add
add
add
add
pop
ins
add
add
add
add
add
mov
nop
add
add
pushf
add
add
add
add
add
mov
add
add
add
fadd
in
add
add
push
add
add
add
sub
add
add
push
add
add
add
jns
add
add
add
add
movs
add
scas
add
add
add
int
add
add
fild
out
add
test
add
add
add
add
add
add
add
add
add
xor
add
add
inc
pop
popa
add
push
add
add
xchg
add
xchg
add
add
add
add
ret
add
add
add
add
add
add
fild
call
hlt
add
add
adc
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
fadd
add
add
add
out
add
add
add
add
add
add
add
and
add
add
add
inc
add
dec
add
popa
add
jo
js
add
add
add
xchg
cwde
scas
mov
add
iret
add
add
add
add
add
add
add
cli
add
add
add
add
pop
add
add
add
add
add
add
xor
cmp
dec
add
add
add
add
add
add
mov
xchg
add
lods
add
mov
add
add
fadd
add
add
add
add
add
adc
cs
add
add
add
add
add
add
outs
add
add
add
nop
xchg
add
add
ret
add
add
add
add
add
add
jmp
cmc
cld
adc
add
and
add
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
jbe
add
add
add
test
add
add
add
movs
add
add
add
add
rol
add
add
rol
add
in
in
add
push
add
pop
add
add
add
xor
add
add
add
add
data16
add
add
add
add
cwde
scas
add
mov
add
ret
add
add
aad
add
add
out
out
test
inc
add
add
add
add
add
add
add
cmp
add
add
imul
je
add
add
add
add
add
enter
add
add
fadd
add
add
add
add
add
clc
adc
add
and
add
cmp
inc
add
pop
add
add
ins
jae
add
jle
add
add
add
add
loope
add
add
add
lock
add
pop
add
adc
add
sbb
add
and
add
add
add
add
pop
add
outs
add
jle
xchg
add
add
add
cmps
mov
(bad)
add
add
add
add
add
add
add
add
add
or
add
and
add
add
add
xor
inc
add
add
add
pop
add
jae
add
add
add
add
add
add
add
mov
mov
iret
add
add
add
jecxz
add
add
or
add
add
sbb
cmp
add
add
add
add
add
add
add
sahf
add
add
add
add
add
fild
add
add
add
add
add
adc
add
add
and
cmp
add
add
add
bound
add
ins
add
add
add
add
add
add
add
pushf
add
add
add
add
mov
mov
leave
add
add
in
add
add
add
add
add
add
add
daa
add
add
add
aas
add
add
add
add
js
add
add
test
mov
add
add
mov
add
add
add
aad
add
fild
add
jmp
add
add
add
or
add
sbb
add
add
add
add
add
add
add
add
add
jnp
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
or
adc
add
add
add
add
add
add
dec
add
add
add
jns
add
add
add
add
mov
add
add
out
add
add
add
test
add
or
add
add
push
add
add
add
xor
add
add
add
add
pop
add
ins
add
jl
test
add
add
add
popf
movs
mov
iret
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
sub
add
add
cmp
add
add
dec
add
bound
add
add
add
add
add
add
movs
add
add
add
add
iret
add
fadd
add
add
add
add
add
add
add
xor
add
add
add
add
pop
add
add
add
add
add
add
add
stos
add
add
add
add
rol
add
add
loop
add
add
inc
add
push
add
add
add
add
add
add
add
add
add
inc
add
dec
pop
add
add
add
add
add
add
add
add
mov
nop
add
mov
add
mov
add
lds
int
add
add
add
add
add
add
or
add
add
add
add
dec
add
add
add
add
add
add
add
add
movs
add
add
add
add
retf
add
fld
add
add
cmc
add
add
add
add
sbb
sub
inc
dec
add
push
pop
add
add
jo
add
jnp
add
add
add
mov
add
add
add
add
add
add
leave
add
add
add
fld
in
add
add
add
add
or
add
push
add
add
inc
add
add
push
pop
add
add
outs
add
js
add
add
ror
add
add
add
xlat
in
add
test
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
jnp
add
add
add
mov
add
add
add
add
add
add
add
out
add
clc
or
add
add
add
sbb
add
add
add
cmp
inc
add
push
add
add
add
add
add
add
fwait
add
mov
add
rol
leave
add
rol
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
(bad)
add
add
jecxz
add
add
adc
add
add
add
add
add
add
add
add
add
add
pop
push
add
add
add
jnp
add
add
add
call
add
add
add
mov
add
add
add
add
add
add
add
cli
add
add
add
and
add
add
xor
add
add
add
pop
add
add
add
add
add
movs
add
scas
add
add
add
int3
add
add
fcomp
add
out
add
test
add
add
add
add
add
add
add
add
add
xor
add
add
pop
pusha
add
imul
add
add
add
pushf
mov
add
add
add
add
add
add
add
add
fadd
loopne
add
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
mov
add
add
rol
add
add
add
loopne
add
add
add
inc
add
or
add
adc
add
sub
add
add
inc
add
pop
add
push
jb
add
add
add
mov
add
add
add
add
rol
add
add
add
add
add
add
add
add
cmc
add
inc
add
add
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
add
add
add
add
jge
xchg
add
add
ret
int3
add
(bad)
add
repz
add
add
add
xor
add
add
add
add
pop
add
add
add
add
add
add
add
mov
mov
add
add
add
fld
add
add
jmp
add
add
or
add
sbb
add
and
sub
add
xor
add
add
add
push
data16
add
add
add
add
add
add
xchg
add
add
add
add
add
mov
add
add
add
add
add
add
repz
add
add
or
add
pop
add
and
add
add
inc
add
add
add
outs
jbe
add
add
add
test
add
add
add
scas
add
add
add
add
xlat
add
out
add
add
pop
add
add
add
add
add
add
sub
cmp
add
add
add
outs
add
add
add
add
add
add
pushf
mov
add
add
add
add
add
add
add
add
fiadd
loop
add
add
add
add
or
add
add
add
add
add
dec
add
add
pusha
data16
add
add
add
add
mov
add
add
aam
add
add
add
in
add
add
add
add
add
add
add
and
xor
add
add
push
add
add
jne
jge
add
add
add
xchg
popf
mov
add
ret
retf
add
add
add
add
add
add
add
add
std
add
push
push
add
add
add
add
add
add
xor
cmp
add
add
dec
add
pop
add
add
add
ins
add
add
mov
add
les
add
add
aad
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
pop
xchg
add
add
add
mov
add
add
add
loop
add
icebp
add
add
add
add
add
add
add
add
add
cmp
add
add
add
pop
add
add
add
jb
add
add
xchg
add
add
mov
(bad)
add
add
add
repnz
sti
add
sbb
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
rol
xlat
add
add
add
add
add
cmc
add
add
add
sbb
add
sub
add
add
add
add
add
add
pop
add
ins
jle
add
add
add
lea
add
add
add
lods
add
add
add
add
mov
add
add
aam
add
call
or
adc
add
sbb
add
add
add
xor
add
add
add
add
data16
add
add
add
add
cdq
scas
add
mov
add
rol
add
add
aad
add
add
out
out
cmc
add
inc
add
add
add
add
add
add
add
add
add
inc
dec
pop
add
outs
je
add
jg
xchg
add
xchg
add
add
add
add
ret
add
add
add
add
add
fld
in
add
add
add
add
or
add
add
add
add
add
add
add
dec
add
add
bound
add
jae
add
test
add
mov
int
add
add
add
add
sti
add
add
add
sldt
add
add
and
add
add
aaa
add
inc
add
dec
add
bound
push
jb
jp
add
add
add
xchg
call
add
add
add
scas
mov
add
rol
fadd
add
jecxz
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
jg
xchg
add
add
ret
retf
add
aad
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
pop
add
add
add
add
add
add
add
stos
add
add
add
add
iret
add
add
fndisi(8087
idiv
add
push
or
add
add
add
add
add
add
add
aas
add
dec
pop
add
add
add
add
add
add
jnp
add
add
mov
add
scas
add
add
add
add
loop
jmp
add
add
add
add
xor
add
add
inc
add
add
add
add
jb
add
add
add
fwait
add
add
add
add
add
fadd
add
add
add
add
add
add
add
adc
add
add
and
add
add
add
inc
dec
add
add
pop
add
add
add
add
add
jns
add
mov
add
add
add
add
add
add
mov
mov
mov
add
loope
add
add
add
add
add
add
add
and
sub
add
xor
inc
add
dec
add
push
add
je
add
add
add
pushf
mov
add
add
mov
add
add
add
add
out
add
add
cli
add
or
add
sbb
add
add
add
add
add
add
add
add
add
ja
adc
das
add
inc
dec
add
add
pop
add
add
add
or
add
add
add
add
add
out
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
push
add
add
add
bound
add
add
outs
add
add
add
add
add
add
movs
lods
add
add
mov
add
into
aad
jecxz
add
add
add
clc
inc
adc
add
sbb
add
add
add
inc
dec
add
pop
add
add
js
add
add
test
add
add
add
add
add
in
pop
add
pop
add
add
add
add
add
add
add
add
jno
jns
add
add
add
mov
add
mov
add
add
add
add
add
loopne
add
add
out
add
add
adc
add
sbb
add
add
sub
cmp
add
dec
push
pop
arpl
add
add
add
add
add
add
add
add
add
cmps
add
scas
add
ret
retf
add
add
add
add
add
add
add
sbb
add
xor
cmp
add
add
pop
add
bound
add
add
add
popf
add
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
add
adc
add
add
sub
add
add
add
add
push
add
add
add
bound
add
add
outs
add
add
add
add
add
add
cmps
scas
add
add
mov
add
add
add
add
(bad)
fucom
add
add
add
repz
add
adc
add
and
add
add
add
add
add
dec
push
add
popa
add
add
jg
add
add
lea
add
add
add
add
add
in
or
add
sub
add
add
xor
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
out
add
add
hlt
add
add
adc
add
add
sub
add
add
add
add
popa
push
add
jbe
add
add
add
add
add
add
test
mov
(bad)
aam
fadd
out
add
add
add
add
add
or
and
sub
add
inc
inc
add
add
pop
add
arpl
add
add
add
sahf
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
adc
add
add
daa
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
rcr
fild
add
add
add
repz
add
add
push
add
and
add
add
add
add
cmp
add
add
add
jno
add
add
jle
mov
add
add
add
add
add
fiadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
fld
add
add
in
add
add
or
add
pop
add
add
and
add
add
xor
add
add
add
add
push
pop
add
add
add
ins
jae
add
add
mov
add
add
add
add
add
add
add
add
add
add
adc
add
sub
xor
add
add
push
add
pop
jne
add
xchg
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
pop
push
add
add
and
add
add
add
add
add
add
add
add
add
add
push
mov
add
xchg
add
add
mov
add
add
add
add
add
aam
loope
add
add
add
idiv
add
add
add
add
and
add
xor
add
add
add
pop
add
add
jne
add
add
or
add
lds
int
add
fadd
add
std
add
add
add
add
sub
add
add
add
cmp
add
inc
add
pusha
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
fld
add
add
out
add
lock
add
push
add
add
add
add
sbb
add
add
sub
add
add
add
add
dec
push
add
add
add
arpl
add
add
xchg
add
lahf
add
mov
add
add
add
add
add
add
add
add
clc
inc
add
push
add
sbb
add
add
add
dec
outs
add
xchg
add
add
xchg
add
add
add
add
add
retf
add
aad
fld
add
add
add
in
add
cmc
cld
add
add
or
sbb
add
and
xor
add
add
add
add
add
dec
add
add
add
add
add
jns
add
add
xchg
add
add
add
add
add
aam
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
pop
bound
add
add
fwait
add
add
mov
add
add
xlat
add
out
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
pop
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
in
hlt
add
add
inc
add
adc
and
add
add
add
xor
add
add
add
add
add
add
add
js
add
add
add
add
add
add
leave
iret
add
fcomp
add
in
add
sti
add
or
add
adc
add
cmp
add
push
add
add
add
add
add
add
jb
add
jge
add
movs
add
add
add
add
(bad)
fadd
add
add
add
add
add
add
adc
add
add
pop
add
add
inc
add
add
add
add
add
add
push
add
add
add
add
mov
add
lahf
movs
lods
add
add
rol
add
add
add
add
in
repz
add
add
add
add
add
cmp
add
add
add
outs
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
cmp
add
dec
push
add
add
pop
add
add
jnp
add
add
add
add
mov
add
ret
add
into
aad
add
add
add
add
std
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
add
add
add
xchg
add
add
add
ret
retf
fadd
loopne
in
add
add
add
add
or
add
add
sub
add
add
add
add
add
add
popa
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
or
add
add
push
add
add
aaa
add
add
add
add
add
add
popa
add
add
or
add
add
add
add
add
add
int3
add
aad
fadd
add
add
out
add
add
add
add
add
add
xor
add
inc
inc
add
add
imul
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
pop
add
add
jnp
add
add
add
add
mov
add
add
iret
(bad)
add
add
loope
add
cmc
cld
add
add
add
add
pop
push
and
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
ror
rcl
add
out
add
add
add
add
or
add
add
add
inc
add
add
add
add
add
add
pusha
add
add
add
xchg
add
add
lods
add
mov
add
add
int3
add
add
fld
add
jecxz
cmc
add
add
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
add
pop
add
add
jl
add
add
add
xchg
cwde
lahf
add
add
lds
add
add
add
add
loop
add
add
add
add
add
add
xor
add
inc
add
add
add
add
ja
add
sahf
movs
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
aas
inc
add
add
push
add
add
outs
add
add
add
jge
add
add
mov
add
xchg
lods
add
add
ret
add
add
add
add
out
idiv
add
add
add
or
add
add
add
add
add
add
add
inc
add
dec
add
add
pusha
add
ja
mov
add
xchg
add
add
add
mov
add
loope
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
add
add
add
add
add
add
mov
add
add
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
add
aas
inc
add
add
push
add
add
jb
add
add
add
xchg
add
add
add
test
add
mov
add
rol
add
add
in
in
add
add
add
add
add
add
add
and
cmp
push
pop
add
add
add
fwait
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
ret
add
add
add
add
idiv
add
add
add
add
sbb
add
add
add
add
inc
add
push
add
add
add
add
jnp
lea
add
xchg
add
add
add
rol
iret
add
fsubp
add
add
add
add
inc
add
add
and
add
add
add
add
add
add
add
add
pop
add
jp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
and
add
sub
add
add
cmp
dec
add
add
push
add
add
add
jle
mov
popf
add
add
add
add
int3
rol
fiadd
loop
repz
add
add
add
add
adc
add
and
add
xor
add
add
pop
add
add
add
jg
add
sahf
add
add
add
add
add
add
loope
add
add
add
add
add
add
add
add
pop
and
xor
add
cmp
dec
add
add
add
pop
add
add
add
add
jno
add
add
add
add
pushf
mov
scas
add
add
leave
iret
(bad)
add
add
add
in
icebp
add
add
add
add
add
add
add
xor
add
dec
add
add
arpl
add
add
jo
jge
add
add
add
add
add
retf
in
add
add
add
add
adc
add
add
add
pop
add
add
add
inc
add
add
push
add
add
add
add
push
add
add
add
add
add
add
mov
add
add
add
in
add
add
add
add
add
add
add
adc
add
sub
xor
add
add
push
add
add
jae
add
test
mov
add
add
scas
add
add
add
add
add
add
fucom
add
in
repz
add
or
push
add
add
add
add
xor
add
add
add
ins
add
add
add
add
add
add
mov
add
xchg
add
scas
add
add
mov
add
add
add
add
fsub
add
add
hlt
add
add
inc
add
or
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
xchg
add
fwait
mov
add
add
mov
add
add
add
add
add
add
add
test
add
add
push
sbb
add
add
add
add
add
push
pop
arpl
add
jnp
add
add
add
add
add
(bad)
add
out
add
add
add
add
add
add
add
add
pop
add
xor
inc
add
add
add
add
pop
add
imul
add
add
add
mov
add
xchg
add
add
mov
add
add
rol
add
loope
add
jmp
add
add
inc
add
add
add
add
and
add
add
inc
dec
dec
add
add
imul
je
add
xchg
add
add
test
mov
add
add
add
(bad)
add
jmp
add
inc
pop
push
adc
add
add
xor
add
add
add
push
add
add
ja
add
add
add
mov
add
xchg
add
mov
add
add
add
add
rol
add
jecxz
add
in
hlt
or
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
cmc
add
add
add
or
add
add
add
add
add
add
push
add
pusha
add
add
lea
xchg
add
add
add
add
retf
add
jecxz
add
add
lock
add
add
sub
add
add
add
add
add
push
pop
add
add
add
add
jns
add
add
add
add
add
add
add
movs
add
add
add
rol
add
fild
add
add
in
add
add
stc
add
add
add
add
add
ss
add
add
add
add
add
pop
add
add
ins
add
add
add
xchg
add
add
add
add
(bad)
int
add
fld
in
add
cli
add
or
add
adc
add
add
add
cmp
add
add
add
add
add
add
jno
add
jl
add
movs
add
add
mov
add
add
fild
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
mov
add
popf
movs
stos
add
add
rol
add
add
add
add
out
hlt
add
add
push
add
add
add
add
add
xor
add
inc
dec
add
add
outs
add
add
add
mov
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
adc
sbb
add
add
add
sub
add
cmp
add
inc
dec
add
add
push
add
add
jb
add
add
add
add
mov
add
mov
(bad)
into
add
add
fld
add
out
idiv
add
add
add
add
sbb
add
add
add
add
inc
add
dec
add
add
add
add
js
mov
add
xchg
add
add
add
mov
add
fucom
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
pop
add
add
add
xchg
add
add
add
add
add
into
add
add
fiadd
add
in
test
add
add
add
add
add
pop
xor
add
add
dec
push
add
add
pop
add
add
add
add
add
add
add
add
add
leave
add
rol
fiadd
add
add
in
add
add
add
add
add
add
add
add
cs
add
add
add
add
jns
add
popf
mov
add
mov
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
sub
add
add
add
add
pop
add
add
add
add
add
add
xchg
add
nop
cmps
add
add
mov
add
add
add
call
add
add
add
adc
and
add
sub
add
inc
add
add
push
pop
add
push
add
add
add
add
test
add
add
xchg
xchg
sahf
add
cmps
scas
add
rol
fld
add
jecxz
add
pop
push
add
daa
add
add
add
add
add
add
add
add
dec
add
push
add
add
jge
add
add
add
lea
add
cmps
lods
add
add
mov
add
add
add
add
loop
add
add
out
add
add
sldt
add
add
add
and
add
add
add
pop
pop
add
add
add
ins
jae
add
add
scas
add
add
mov
rol
loop
add
in
add
add
add
add
add
adc
add
and
sub
cmp
inc
add
add
push
outs
jbe
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
cld
add
add
or
add
add
add
add
add
add
add
dec
add
add
add
add
pusha
jne
add
jg
add
add
add
add
add
add
add
add
add
add
fchs
add
add
add
add
add
adc
and
add
add
add
add
push
add
add
add
ins
add
jbe
add
mov
add
add
add
fld
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
inc
add
add
add
add
pop
add
arpl
add
jae
add
add
xchg
add
nop
add
add
mov
add
add
mov
fadd
add
out
add
add
clc
add
add
add
add
sbb
and
add
add
inc
inc
add
add
arpl
add
jne
jge
add
add
mov
add
add
add
add
add
add
rcr
add
loop
add
test
adc
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
mov
add
add
add
add
fsub
add
add
test
add
add
add
or
and
add
add
add
add
add
add
pop
add
add
add
add
add
add
mov
add
lahf
cmps
lods
mov
add
add
add
retf
rol
in
add
lock
cli
add
add
or
add
add
push
add
add
add
add
dec
add
add
add
add
jo
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
dec
add
add
add
add
add
add
add
add
add
mov
add
xchg
add
add
mov
add
add
ret
add
add
in
add
lock
add
cld
add
add
add
add
add
sub
cmp
add
add
add
push
add
add
jb
add
add
add
cwde
lahf
add
add
add
add
add
add
add
add
add
add
loopne
add
icebp
clc
add
pop
add
push
sbb
add
add
cmp
add
add
add
add
add
add
add
add
add
add
mov
mov
add
add
loopne
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
into
add
(bad)
(bad)
(bad)
jmp
ins
ins
outs
je
outs
imul
or
add
pop
add
daa
or
add
pop
add
inc
add
inc
sub
add
add
add
push
jne
add
add
or
add
or
inc
addr16
ins
gs
cmp
adc
add
add
or
push
arpl
gs
je
xor
add
add
fist
mov
or
add
je
jb
add
add
inc
add
add
add
jb
arpl
xor
add
or
dec
jns
push
gs
outs
add
stos
adc
inc
and
add
add
bound
ins
popa
add
add
add
add
add
add
or
push
add
inc
sub
add
push
or
dec
outs
jne
gs
imul
push
add
jb
popa
jb
add
sbb
repz
add
add
pop
or
push
outs
imul
jp
imul
inc
jne
outs
imul
push
xor
mov
add
add
add
or
dec
gs
arpl
je
add
add
push
fist
bound
cmp
or
add
ins
popa
ins
imul
inc
sub
add
or
push
popa
ins
jo
data16
jne
xor
add
add
jne
add
add
pop
add
pop
add
add
add
add
add
dec
popa
bound
add
adc
adc
or
push
gs
outs
jo
imul
inc
and
add
or
add
bound
je
gs
jns
add
add
adc
add
push
push
adc
or
inc
sub
add
or
ins
ins
outs
jne
add
popa
outs
outs
imul
add
adc
or
add
or
inc
sub
add
add
add
popa
outs
popa
arpl
add
add
add
jne
push
or
sbb
adc
add
add
add
add
push
add
ins
gs
sbb
or
jecxz
sahf
(bad)
add
mov
dec
add
mov
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
add
add
add
lods
and
(bad)
(bad)
(bad)
inc
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
add
add
add
add
enter
(bad)
(bad)
(bad)
inc
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
add
add
add
add
dec
xor
(bad)
(bad)
(bad)
inc
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
add
add
add
mov
inc
add
(bad)
(bad)
inc
add
add
dec
add
add
add
mov
add
mov
add
mov
add
add
add
add
pusha
cmp
(bad)
(bad)
(bad)
inc
add
add
mov
add
(bad)
(bad)
inc
add
add
cmp
sar
add
dec
add
cmp
and
inc
add
add
cmp
fdivr
inc
add
dec
add
cmp
loopne
inc
add
add
cmp
add
inc
add
dec
add
cmp
sbb
inc
add
add
cmp
cmp
add
dec
add
cmp
pusha
inc
inc
add
add
cmp
mov
add
dec
add
cmp
lods
inc
inc
add
add
cmp
sub
inc
add
dec
add
cmp
push
inc
inc
add
add
cmp
je
inc
add
dec
add
cmp
nop
inc
inc
add
add
cmp
cmp
inc
add
cmp
push
inc
inc
add
int3
int3
int3
int3
int3
int3
jmp
rol
add
in
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
push
mov
call
xor
mov
sub
mov
mov
mov
lea
movs
movs
movs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
movs
call
xor
cmp
fnclex
jge
push
push
push
push
call
push
call
mov
call
cmp
jne
push
call
mov
call
cmp
je
mov
push
call
cmp
jge
mov
push
mov
push
push
push
call
jmp
mov
mov
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
push
call
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
xor
push
push
push
call
mov
call
cmp
jne
mov
push
call
test
jge
push
push
push
push
call
push
push
lea
push
call
lea
push
call
push
lea
push
call
lea
call
push
lea
push
call
cmp
jne
push
push
call
mov
mov
push
mov
lea
push
call
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
call
lea
mov
lea
push
mov
call
cmp
je
mov
push
call
test
jge
push
push
push
push
call
mov
push
push
call
fnclex
test
jge
push
push
push
push
call
push
call
fld
push
push
fstp
call
fstp
fld
call
fstp
lea
lea
mov
mov
call
lea
push
call
mov
lea
call
lea
call
push
push
push
pop
push
call
lea
push
push
lea
push
lea
push
mov
mov
call
push
call
mov
lea
call
lea
call
lea
call
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
push
call
mov
lea
call
push
push
push
push
push
push
call
mov
lea
call
lea
push
call
lea
lea
call
push
call
push
push
push
call
mov
mov
push
push
push
push
lea
push
push
push
call
fld1
add
call
push
push
push
push
call
cmp
mov
mov
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
lea
push
push
mov
call
fnclex
test
jge
push
push
push
push
call
xor
cmp
lea
setne
neg
mov
call
test
je
lea
push
push
push
call
push
call
call
cmp
jne
push
call
push
push
push
push
call
mov
lea
push
push
push
call
push
push
call
xor
mov
fwait
push
jmp
lea
call
lea
call
lea
call
ret
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
push
push
call
ret
mov
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
push
push
mov
push
mov
mov
call
mov
call
lea
lea
mov
mov
call
push
lea
call
ret
mov
mov
mov
mov
pop
pop
xor
mov
pop
leave
ret
int3
int3
sahf
sahf
sahf
sahf
jl
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
push
add
adc
add
add
xchg
icebp
push
add
add
xor
push
add
icebp
push
add
icebp
push
add
icebp
push
add
repnz
add
repnz
add
repnz
add
add
push
add
add
push
add
repnz
add
add
mov
push
add
add
add
push
add
repnz
add
repnz
add
add
sub
push
add
repnz
add
repz
add
repz
add
repz
add
push
add
add
add
xor
add
add
or
add
cmps
repz
add
repz
add
repz
add
repz
add
repz
add
hlt
push
add
hlt
push
add
push
add
xor
push
add
hlt
push
add
add
add
push
add
push
add
hlt
push
add
add
adc
push
add
add
add
push
inc
push
dec
xor
inc
dec
dec
add
push
add
dec
arpl
add
mov
pop
popa
fs
data16
popa
outs
add
js
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
mov
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jbe
add
push
imul
xor
mov
pop
popa
fs
data16
gs
xor
sub
bound
gs
jns
je
ins
inc
jb
outs
jb
rol
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
push
imul
xor
pop
add
jbe
popa
inc
jb
inc
gs
jb
arpl
jae
pop
pop
jbe
popa
inc
jns
fs
cmps
add
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
pop
imul
xor
imul
jbe
popa
inc
push
inc
imul
inc
dec
jae
outs
add
outs
add
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
pop
pop
jbe
popa
inc
jns
xor
jns
pop
pop
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
dec
bound
popa
jb
or
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
pop
pop
jbe
popa
push
gs
jb
add
mov
pop
popa
fs
data16
je
outs
add
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
push
add
dec
jae
jb
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
mov
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
push
data16
gs
add
scas
add
fs
imul
ss
add
bound
push
inc
js
gs
imul
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
fwait
add
jbe
popa
inc
imul
push
add
dec
ins
outs
add
test
popa
dec
gs
add
pop
jbe
popa
inc
jns
jne
dec
xor
add
push
imul
xor
add
push
imul
xor
imul
fs
imul
xor
add
stos
add
fs
imul
cmps
add
jbe
popa
inc
jo
jns
bound
pop
pop
jbe
popa
push
popa
jb
jne
add
bound
je
inc
outs
ins
jo
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
retf
pop
jbe
popa
dec
xor
jns
mov
pop
popa
ins
ins
ins
jne
add
pop
inc
dec
je
outs
add
push
add
dec
gs
add
lods
add
jbe
popa
inc
jb
gs
bound
add
bound
jb
gs
je
