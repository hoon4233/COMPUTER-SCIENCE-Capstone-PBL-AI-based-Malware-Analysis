push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
dec
or
ja
sub
or
test
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
not
shl
mov
jge
shl
or
jmp
call
cmp
mov
mov
dec
jmp
mov
mov
push
mov
mov
push
pop
mov
push
ret
shl
test
jle
add
rol
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
cmp
cmp
jae
ror
ror
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
and
jg
and
mov
popf
imul
test
fist
jmp
arpl
mov
jle
cmc
mov
mov
push
inc
xchg
sub
and
push
shl
add
jmp
cmc
mov
mov
jp
cmp
mov
call
mov
cmp
xchg
push
sbb
stos
push
loopne
daa
and
je
sbb
mov
jp
sub
mov
sbb
(bad)
sbb
add
mov
mov
sub
mov
sbb
add
js
xchg
add
and
sub
jmp
add
mov
lock
ja
inc
sbb
pop
jb
movd
add
dec
add
jle
inc
call
rol
je
jmp
icebp
retf
mov
lock
or
outs
jbe
add
jmp
jle
and
sub
xlat
(bad)
jle
je
xchg
mov
mov
push
xchg
(bad)
out
adc
push
add
mov
mov
mov
nop
mov
les
xchg
adc
push
add
inc
and
aam
lds
fimul
mov
pop
mov
push
add
iret
jns
call
pop
xchg
mov
mov
nop
sbb
add
mov
jmp
mov
scas
pop
pop
jbe
push
add
mov
mov
and
mov
jns
sub
fild
mov
sbb
(bad)
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
xchg
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
cmp
jo
and
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
cmp
jmp
mov
mov
mov
mov
push
mov
push
mov
pop
push
mov
push
jmp
rol
test
or
jmp
call
mov
inc
cmp
je
cmp
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xchg
xchg
add
not
je
sub
shl
not
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ins
(bad)
sbb
xor
sbb
or
jge
inc
push
nop
mov
and
into
stos
sub
jl
rol
and
pop
add
xchg
dec
inc
and
add
add
or
test
and
mov
pop
sub
mov
or
dec
and
jns
mov
out
add
sub
mov
lea
je
jmp
mov
cmp
into
call
mov
add
sbb
pusha
imul
and
(bad)
dec
add
iret
mov
inc
and
sub
dec
xor
adc
ret
retf
add
add
add
std
mov
jl
sub
lods
push
add
add
add
movs
pushf
out
sub
mov
and
rol
mov
add
inc
and
sub
mov
inc
rdmsr
rol
jge
inc
sbb
add
push
xchg
sub
into
inc
cli
or
mov
pop
out
xchg
mov
js
mov
add
pop
mov
mov
cmp
cmp
inc
rcl
pop
jmp
mov
mov
lds
mov
mov
repz
xor
pop
imul
int
cdq
dec
rcr
ja
sub
push
fsubr
(bad)
(bad)
mov
jnp
movzx
sbb
idiv
xchg
mov
push
xlat
pushf
cmp
sbb
mov
(bad)
mov
inc
pushf
lds
out
ret
mov
jns
push
and
rcr
xor
and
and
mov
int3
xor
test
scas
dec
fimul
add
xor
add
add
stos
jl
into
jmp
mov
jmp
mov
sub
jge
add
mov
std
int
push
inc
inc
or
mov
scas
or
pcmpeqd
pop
pop
inc
add
xchg
xchg
dec
pop
inc
add
push
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
shl
jge
xor
inc
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sub
sar
jle
shl
xor
dec
jmp
push
mov
mov
mov
push
mov
mov
mov
push
mov
pop
jmp
mov
js
cmp
xor
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
or
jo
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
dec
or
inc
and
mov
and
test
fst
mov
mov
mov
and
mov
jbe
mov
ss
pusha
stc
cmps
scas
pushf
add
jmp
sbb
or
inc
(bad)
pop
xchg
test
add
aaa
jmp
shl
xchg
pop
add
and
mov
add
xchg
add
add
fidiv
mov
je
imul
inc
and
sub
mov
and
cmovo
pushf
add
add
js
(bad)
test
adc
add
jmp
mov
lods
dec
inc
jmp
dec
sub
add
pop
push
add
add
inc
sbb
in
hlt
mov
sub
add
push
jmp
mov
fs
mov
clc
adc
add
stos
mov
pop
es
jae
inc
inc
and
jg
jne
aaa
add
mov
and
sub
mov
jo
mov
aaa
imul
shl
xchg
arpl
adc
cmp
or
add
jg
fs
mov
rdpmc
xor
add
or
cwde
add
mov
fs
imul
rol
test
sub
and
sub
pop
jl
sub
test
or
add
add
cmp
fcomip
sub
sub
and
jb
add
iret
mov
cmp
mov
je
jmp
xchg
sub
or
and
mov
add
imul
add
cmp
adc
mov
(bad)
in
or
jecxz
add
add
or
mov
mov
xchg
test
imul
mov
sbb
add
out
enter
aam
sub
add
cwde
fiadd
cmp
add
nop
scas
dec
dec
in
hlt
mov
mov
add
add
rol
mov
mov
mov
push
lock
mov
add
xlat
push
add
jb
fwait
add
push
adc
inc
add
shl
in
nop
mov
mov
mov
cmp
mov
and
fsubp
cmp
mov
add
mov
pop
jmp
mov
mov
jmp
mov
mov
add
aaa
mov
jmp
or
sti
inc
mov
add
add
mov
sbb
mov
and
add
mov
jmp
dec
mov
add
cmp
out
and
sti
xlat
and
jmp
mov
xlat
dec
add
aaa
mov
sbb
push
iret
pusha
pop
ret
(bad)
adc
xor
das
jmp
or
add
or
mov
mov
je
test
mov
xor
jmp
and
repz
sub
jg
nop
push
mov
push
push
push
and
sub
jmp
call
cmp
not
jne
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
dec
and
shl
jmp
push
mov
mov
pop
mov
mov
mov
mov
push
ret
shr
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
push
mov
ror
je
dec
ror
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
cmp
js
xor
mov
rol
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
jmp
int3
mov
mov
pop
adc
add
pop
call
mov
cmp
add
fisttp
and
test
add
or
add
mov
jnp
and
rol
add
dec
add
stos
scas
xchg
jno
in
cwde
sub
std
imul
repz
test
add
add
push
sbb
xor
pop
adc
xchg
iret
adc
add
xor
push
fisttp
lock
xor
mov
jl
movs
add
push
mov
sub
(bad)
js
mov
sub
add
add
mov
dec
pop
push
sub
fild
add
adc
shr
add
repnz
add
clc
lds
aam
and
add
pop
(bad)
call
add
mov
sub
pop
xchg
add
add
leave
hlt
pop
add
jmp
mov
add
shr
pop
or
(bad)
xlat
add
in
and
add
rol
clc
add
jns
add
sbb
test
add
add
test
fwait
(bad)
jmp
cs
daa
sub
clc
add
or
hlt
mov
cmp
mov
jno
add
jmp
mov
sti
in
ud0
add
clc
retf
or
push
jmp
add
and
add
sub
mov
dec
sub
add
add
clc
add
add
push
add
mov
cld
je
jmp
mov
aad
mov
mov
(bad)
xor
jg
jmp
xor
repnz
rol
or
add
je
mov
push
mov
sub
push
add
daa
jp
ror
repnz
sub
add
add
add
add
mov
and
pop
add
cmp
xchg
mov
mov
cdq
cli
mov
add
mov
sub
inc
add
mov
pop
(bad)
cmp
mov
push
cld
xor
repnz
add
sub
mov
je
jmp
mov
sub
mov
add
and
mov
test
sub
repnz
sub
dec
leave
and
pop
add
pmullw
les
adc
add
sub
pop
outs
and
repnz
pop
add
lds
mov
jns
add
sub
mov
fld
mov
and
rol
add
dec
leave
and
add
pop
and
add
push
ja
mov
sub
int3
test
inc
mov
dec
add
popf
sub
add
mov
sbb
add
add
jmp
add
movs
mov
sub
clc
add
mov
push
ficom
add
add
add
popa
mov
add
sub
mov
les
add
cmp
add
lea
sub
int3
and
add
add
test
lock
sub
add
add
mov
sar
fwait
(bad)
pcmpgtb
repnz
jmp
mov
pusha
fs
xchg
xor
adc
test
add
add
fs
add
add
sti
push
and
addr16
add
dec
outs
add
pop
jmp
mov
and
xor
jne
call
add
(bad)
je
jmp
pop
test
add
lds
xor
jg
jmp
mov
sub
add
mov
popa
out
jno
imul
mov
add
and
add
sub
mov
and
jmp
add
and
lds
add
sbb
popa
mov
push
add
test
add
add
add
test
sub
mov
psrld
sbb
xor
(bad)
and
std
mov
xor
bound
stos
push
in
add
add
test
add
mov
pop
(bad)
js
lldt
add
(bad)
rol
add
lods
movs
rol
add
lds
loopne
cmp
mov
xor
test
add
adc
pop
test
fiadd
inc
movs
sub
mov
rol
add
(bad)
call
add
sbb
add
add
mov
and
rol
add
test
push
lds
ins
add
xchg
test
mov
(bad)
js
add
add
jb
jmp
add
sub
sbb
adc
add
bswap
fadd
add
in
mov
and
add
add
push
ds
xchg
iret
jl
jge
add
jmp
mov
xor
mov
adc
test
stc
mov
add
mov
sub
pop
inc
and
test
add
mov
sub
mov
outs
and
mov
xor
add
sub
add
pop
mov
sub
mov
repz
(bad)
add
jmp
mov
cmp
jecxz
dec
imul
add
fld
add
mov
rcl
jecxz
mov
repz
add
add
add
dec
test
pop
push
sbb
mov
cmp
cmps
add
add
mov
sub
jno
and
push
fidivr
mov
push
push
add
add
pushf
pop
inc
and
je
jmp
mov
and
sbb
mov
retf
mov
jg
jmp
pusha
test
repz
add
mov
push
aad
add
mov
push
lea
sub
pop
scas
(bad)
or
add
add
add
jae
and
add
add
call
std
stos
dec
je
out
jp
add
xor
sub
pop
inc
daa
mov
pop
push
icebp
add
add
pop
cld
mov
inc
bound
dec
and
inc
stc
add
dec
leave
jns
add
add
mov
and
cmp
and
add
adc
pop
outs
(bad)
imul
jns
je
jmp
mov
xchg
fs
jbe
mov
and
clc
(bad)
add
add
test
add
push
xor
push
inc
and
cmp
fadd
fwait
(bad)
pusha
test
sub
add
sub
pop
inc
daa
aam
ret
push
sbb
mov
test
add
add
cmc
mov
sub
test
out
add
jmp
mov
add
sbb
adc
sahf
add
add
ja
lahf
mov
add
fbstp
inc
and
je
adc
add
add
test
add
add
sbb
xor
(bad)
add
add
add
test
jmp
rcr
loopne
test
pop
add
add
add
pop
sub
pop
mov
aam
add
jmp
mov
sub
(bad)
jae
inc
(bad)
je
push
pop
add
or
mov
aam
mov
rol
jae
loope
add
fs
inc
ror
mov
add
adc
cmp
inc
movs
jmp
mov
jae
and
add
pop
mov
and
sbb
cmp
add
jmp
repz
pop
cld
mov
jmp
std
dec
cmp
and
les
add
push
jne
push
mov
mov
mov
sbb
add
(bad)
and
add
add
jecxz
jmp
in
dec
xlat
std
mov
mov
mov
inc
call
jbe
jge
add
jmp
call
mov
imul
shl
add
mov
cdq
dec
jno
(bad)
and
add
add
add
test
add
cmps
cmp
rol
adc
(bad)
dec
add
ficom
sub
sub
mov
mov
mov
dec
(bad)
add
add
mov
icebp
lds
add
add
mov
pop
mov
je
fcomi
push
cmp
push
(bad)
add
pop
mov
push
push
jmp
mov
mov
mov
test
cmovne
fldenv
sbb
add
jmp
repnz
add
lods
std
rol
add
(bad)
mov
frstor
cmp
add
add
pop
jo
mov
(bad)
sub
add
mov
pop
jmp
(bad)
cmp
push
nop
cmps
jno
jmp
mov
mov
inc
add
add
in
mov
aas
sbb
add
test
ins
sbb
pusha
push
jmp
inc
clc
push
and
jge
movs
shr
and
add
cmc
jne
mov
push
mov
push
push
cld
push
(bad)
call
add
add
ficom
add
mov
and
sbb
add
mov
or
and
add
add
fwait
(bad)
mov
mov
push
sub
idiv
add
add
jge
add
mov
jne
sbb
inc
mov
mov
bound
jmp
imul
push
or
and
pop
add
rol
imul
add
cld
adc
mov
add
(bad)
mov
cmp
cmp
add
add
test
add
add
mov
loopne
and
xor
sbb
add
inc
mov
jno
imul
add
in
ror
inc
add
add
lds
sbb
cwde
cmp
mov
rcl
add
and
mov
(bad)
(bad)
outs
and
inc
movs
add
out
pushf
ss
sub
mov
and
add
mov
push
inc
and
jmp
mov
repnz
add
add
mov
sub
vpmullw
cmp
add
mov
add
add
jo
movs
add
and
add
clc
cmp
add
mov
mov
mov
and
add
add
mov
jmp
mov
xchg
add
sbb
mov
and
pop
add
cmp
and
xlat
add
mov
hlt
int
dec
movs
add
adc
daa
cmp
lds
loopne
outs
add
fcomip
(bad)
jmp
pop
inc
add
push
mov
push
push
push
and
push
jmp
mov
mov
mov
mov
mov
mov
mov
push
ret
not
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
test
sub
cmp
ror
jns
and
cmp
mov
jmp
call
xchg
and
cmp
jle
mov
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
ror
jo
xor
and
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
mov
test
and
jo
push
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
jo
sub
inc
mov
jmp
mov
mov
push
mov
pop
push
mov
mov
mov
mov
jmp
mov
jmp
call
shl
jle
mov
dec
inc
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
test
dec
jns
rol
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
ror
dec
and
jne
not
cmp
shl
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
out
mov
mov
jmp
or
pop
xchg
mov
call
mov
cmps
add
jmp
sti
cmps
add
and
scas
add
stc
mov
add
test
mov
sbb
jge
or
test
add
imul
dec
test
mov
mov
xchg
jo
add
mov
jmp
mov
mov
add
in
fdivrp
add
mov
add
lods
jo
test
test
add
xchg
lods
(bad)
ror
sbb
hlt
mov
push
lods
out
in
mov
neg
cmps
mov
hlt
and
add
add
mov
xchg
sbb
hlt
jg
jbe
call
add
xchg
mov
imul
cmps
add
(bad)
lods
or
add
add
add
out
mov
add
out
icebp
imul
and
add
inc
mov
add
stc
and
mov
pop
retf
in
sbb
add
jg
jmp
add
and
add
bound
mov
call
add
add
xchg
test
cld
mov
test
sti
hlt
cmp
or
xchg
cvtpi2ps
imul
rol
add
mov
ja
add
sub
stc
test
aam
retf
(bad)
pushf
test
add
rcl
call
aaa
test
(bad)
mov
add
jmp
mov
scas
xchg
arpl
lods
sub
mov
jg
hlt
hlt
add
data16
or
dec
mov
jg
add
add
pop
test
cld
add
sub
add
xchg
bndldx
add
add
add
sub
mov
and
push
add
test
jmp
mov
test
add
bound
push
test
xchg
add
add
lahf
call
sub
add
mov
(bad)
add
hlt
test
fwait
ins
bound
or
add
retf
xchg
and
or
adc
jmp
mov
add
dec
rol
hlt
test
add
lods
sti
test
add
retf
mov
shr
inc
lahf
add
add
add
dec
xchg
jmp
fisttp
add
add
cdq
enter
sbb
and
add
mov
stos
xchg
test
add
mov
add
add
or
pushf
add
aam
sar
cmps
jb
and
mov
ins
(bad)
add
lahf
add
cmc
add
sub
mov
and
jl
mov
add
pusha
loopne
(bad)
add
add
push
fiadd
stos
add
and
add
add
jmp
xchg
test
cmc
mov
mov
mov
and
sub
xchg
cvtpi2ps
add
cmp
add
cmps
mov
sbb
add
setns
adc
hlt
add
lahf
call
test
nop/reserved
add
add
push
(bad)
add
addr16
hlt
and
add
retf
fwait
mov
sbb
mov
add
inc
mov
add
stc
add
jmp
sub
lods
jo
xchg
mov
rol
sbb
add
push
pushf
imul
cmp
and
push
add
pop
and
add
add
add
out
in
adc
add
add
test
call
and
or
add
pop
jg
loop
div
mov
and
add
mov
and
xchg
add
(bad)
jbe
add
test
sahf
add
nop
lods
or
add
mov
aam
jno
ror
bound
xchg
jmp
jg
and
add
cmps
add
add
test
add
call
and
pop
sti
dec
(bad)
push
sbb
xchg
add
(bad)
and
sbb
pusha
add
mov
je
jmp
sti
cmps
je
mov
or
mov
mov
xor
xchg
repnz
add
xchg
add
add
das
inc
or
mov
dec
pop
arpl
add
jle
popf
mov
cld
mov
cmps
call
push
xchg
add
add
jmp
mov
scas
cld
ins
bound
sub
mov
lods
test
xor
add
add
add
mov
prefetchnta
imul
add
add
mov
pop
mov
or
hlt
and
retf
xchg
add
sbb
push
add
jmp
xor
mov
sub
mov
add
jbe
std
cmps
add
add
jmp
jo
out
out
loopne
test
add
sbb
add
push
add
add
test
jl
add
push
test
popa
imul
pop
inc
mov
add
jmp
retf
icebp
icebp
xlat
xor
sahf
add
add
in
add
add
inc
cld
push
rcl
je
inc
inc
jmp
and
add
jo
(bad)
dec
repz
and
add
add
and
add
add
mov
and
add
add
(bad)
nop
add
add
xchg
add
mov
inc
xor
lds
jmp
xchg
test
add
mov
sbb
add
or
add
jmp
mov
dec
enter
jmp
bound
add
xchg
xchg
add
add
xor
add
add
(bad)
add
add
mov
(bad)
add
cmps
sub
mov
jg
adc
xchg
add
add
push
and
add
sbb
mov
test
add
add
jmp
xchg
sub
jo
and
cli
add
jg
test
jo
mov
mov
pop
test
adc
add
mov
das
add
add
mov
sub
sub
and
popa
add
(bad)
and
sti
add
add
cld
arpl
add
jg
and
xchg
add
mov
call
add
sub
push
test
add
pmulhuw
rol
adc
out
cld
add
sub
sbb
neg
(bad)
mov
add
add
add
cmp
mov
scas
cld
ins
bound
imul
mov
adc
sub
jmp
add
(bad)
sub
add
pop
jg
cld
add
pop
int3
mov
push
add
add
je
jmp
mov
mul
add
add
adc
jg
jmp
mov
mov
das
jg
stc
jb
in
xchg
xchg
mov
sbb
mov
cld
fwait
jge
and
popw
inc
mov
and
pusha
add
jbe
add
rcl
add
dec
cld
arpl
rcr
test
mov
lock
jmp
mov
sub
test
movs
jg
jmp
mov
mov
pop
mov
test
add
add
test
into
add
xchg
push
es
sbb
add
aam
and
jge
add
xor
add
xchg
jmp
jb
idiv
add
add
mov
jg
in
pop
add
jmp
push
test
sub
jmp
add
xchg
repnz
mov
add
add
aam
sub
jg
test
bound
xchg
add
push
xchg
add
sub
dec
mov
dec
call
jge
add
(bad)
add
xchg
jmp
jmp
and
add
(bad)
xchg
ins
xchg
push
mov
and
add
lods
pmuludq
sbb
add
and
add
mov
mov
jge
rdtsc
sub
xchg
dec
pusha
add
imul
add
in
and
lods
add
test
add
jmp
mov
and
rol
sbb
jmp
add
(bad)
or
add
mov
and
push
add
inc
int
dec
add
(bad)
push
or
jmp
mov
sub
xchg
test
mov
pop
mov
add
lods
xchg
add
add
add
mov
jg
jbe
xchg
xchg
jmp
xchg
jo
inc
popa
add
sub
mov
sub
adc
add
add
mov
das
mov
mov
and
add
add
adc
sub
add
add
lahf
mov
adc
inc
test
stc
je
adc
out
push
add
add
mov
je
cmp
idiv
cld
add
jge
pusha
lock
or
add
add
adc
rol
mov
cld
mov
dec
add
adc
xchg
mov
hlt
mov
add
sub
sub
sub
dec
imul
dec
or
jmp
mov
out
cmps
xor
pop
add
pop
add
jbe
add
add
test
add
add
or
mov
je
adc
mov
ins
jmp
add
fist
mov
add
add
test
mov
add
sub
and
pop
jg
and
add
retf
mov
mov
xchg
enter
rol
outs
sbb
mov
movs
pusha
mov
sub
mov
dec
mov
add
bound
test
sub
mov
je
test
hlt
jmp
mov
and
add
ss
mov
jo
adc
add
jmp
pop
test
cld
add
add
jmp
and
je
jmp
push
test
sub
mov
nop
mov
add
sbb
inc
xchg
clc
add
sub
mov
mov
bound
add
add
retf
pushf
dec
push
pusha
je
jmp
mov
pop
cld
mov
cmp
pop
movq
or
add
pop
mov
out
cld
add
sub
mov
xchg
cdq
inc
repnz
push
outs
add
add
jge
mov
inc
and
je
jmp
jo
and
add
popa
or
call
scas
int3
xchg
xchg
dec
or
sbb
cld
fwait
add
push
out
mov
dec
adc
add
(bad)
add
add
and
cmps
mov
sti
pop
retf
inc
rol
xchg
xchg
jmp
mov
cld
cmc
add
ins
adc
je
in
add
add
repz
jno
inc
scas
sub
add
and
xchg
mov
xor
xchg
inc
mov
xchg
movs
pusha
jmp
mov
cld
mov
dec
mov
inc
mov
(bad)
lods
pop
add
cmp
hlt
add
xor
and
sahf
add
mov
or
jl
inc
and
add
mov
jge
pop
cmps
add
sub
jmp
mov
test
test
xchg
jl
or
sbb
pop
mov
not
test
add
ror
stc
cmp
add
mov
aam
stc
out
cmp
xchg
and
enter
sub
add
test
add
jge
mov
mov
xchg
in
mov
jmp
cmps
add
add
call
xchg
xchg
add
jmp
movs
push
repz
dec
fldcw
mov
add
test
add
adc
(bad)
add
aam
lahf
xor
cmp
add
cmp
cmove
adc
add
sbb
mov
add
mov
mov
and
add
add
add
jo
test
call
lahf
add
mov
mov
add
jne
add
lahf
sbb
or
and
ins
and
xchg
movs
add
das
(bad)
rcl
add
int3
fidivr
int
js
push
add
cmp
test
xchg
call
mov
or
add
and
add
cmp
push
or
and
stc
jo
fst
jo
and
mov
out
and
scas
add
adc
inc
adc
mov
push
rol
(bad)
inc
cdq
sar
leave
add
and
xchg
sbb
inc
add
sar
movzx
and
add
jmp
inc
add
mov
mov
mov
dec
jle
xchg
mov
stos
mov
das
mov
lea
rol
bswap
or
mov
add
out
adc
add
push
rcl
or
jmp
jg
mov
out
sbb
hlt
add
call
mov
add
pop
cs
mov
inc
jae
sar
daa
aaa
dec
sbb
jo
add
add
inc
retf
and
mov
repz
cwde
add
inc
xchg
js
push
push
pop
or
and
add
mov
test
rol
fmul
add
and
scas
add
jb
or
add
xchg
xlat
xchg
push
das
xlat
sbb
add
xchg
inc
push
cdq
das
xchg
mov
and
add
adc
inc
add
and
mov
mov
jmp
and
pusha
add
inc
add
out
or
add
adc
stos
xchg
and
add
add
adc
adc
inc
add
pop
fwait
jge
add
add
mov
mov
mov
add
push
and
jo
and
mov
adc
mov
dec
dec
scas
jo
mov
and
add
mov
mov
add
mov
call
add
push
and
mov
test
adc
inc
add
push
adc
mov
pop
movs
xor
cmp
jbe
add
mov
add
jle
and
add
cmps
xchg
add
movs
pusha
mov
jmp
aad
xchg
stos
jg
and
enter
in
add
add
sbb
add
add
lahf
add
add
push
mov
mov
or
push
pushf
add
imul
add
mov
mov
mov
jecxz
sbb
push
test
(bad)
(bad)
mov
fwait
fwait
jge
mov
call
(bad)
lock
push
add
add
cmps
add
setne
add
add
retf
mov
add
sbb
dec
cmp
xchg
call
movs
(bad)
stos
mov
sar
cmps
add
xor
and
add
not
add
and
pop
add
sbb
in
and
lahf
call
add
add
fst
mov
call
popa
(bad)
add
add
or
test
sbb
push
add
add
jge
popf
pusha
popf
call
mov
mov
and
add
pop
outs
and
add
add
sti
mov
add
test
and
jge
popf
or
fstp
add
mov
pop
popf
pop
cmp
setl
and
mov
and
add
jmp
and
add
add
pusha
mov
imul
push
mov
add
hlt
idiv
pminub
mov
rcr
add
jge
add
cmps
add
push
add
lods
(bad)
hlt
and
add
retf
imul
sub
xchg
mov
jmp
cmps
test
fist
xor
xchg
sbb
fldcw
and
aad
mov
add
inc
ins
stc
jb
xchg
add
xchg
dec
out
add
mov
push
add
call
(bad)
push
and
jg
or
rol
movs
add
mov
and
add
add
mov
add
mov
(bad)
jg
mov
test
push
test
jmp
fidiv
add
pusha
add
push
adc
add
mov
dec
add
add
adc
gs
push
adc
test
xchg
mov
pop
add
call
movs
pusha
sub
mov
push
aam
loopne
fwait
mov
shl
xchg
xchg
add
fld
mov
add
mov
add
mov
mov
jmp
mov
jmp
push
call
mov
mov
xchg
xchg
mov
add
popf
call
in
add
movs
mov
inc
cmp
js
push
add
add
add
inc
addr16
and
scas
jo
jmp
das
add
ds
add
dec
add
push
add
add
jb
push
add
mov
mov
mov
mov
and
add
add
in
add
add
test
add
sti
dec
adc
jb
add
sbb
xor
pushf
leave
xchg
fist
add
pop
mov
call
add
test
cmps
add
mov
xchg
fist
jg
out
jg
push
add
mov
fiadd
add
add
xor
mov
push
sbb
add
add
add
or
sbb
or
stc
mov
mov
add
add
dec
stc
mov
ins
mov
xor
call
sub
test
mov
add
(bad)
stc
and
add
add
add
push
sti
movs
add
jmp
mov
mov
and
add
add
mov
add
xchg
sbb
neg
popf
add
adc
lea
pop
pop
pop
pop
ret
mov
pusha
imul
cmps
add
sti
mov
sbb
add
inc
xor
mov
and
sub
popf
or
std
xchg
add
daa
fwait
add
jge
or
loope
sub
or
or
imul
xchg
xchg
mov
call
mov
xor
lahf
repnz
ficom
sub
xchg
mov
and
imul
mov
add
mov
jmp
add
inc
sub
sub
mov
and
jmp
inc
call
retf
add
daa
call
adc
add
stos
out
xor
add
add
test
add
add
rol
cdq
rol
add
inc
jmp
test
add
jg
dec
add
bound
hlt
or
ins
ret
js
push
add
dec
add
xor
js
push
add
add
fst
add
add
add
add
movs
xchg
push
dec
or
fist
jmp
dec
add
(bad)
(bad)
xchg
fist
add
cmps
mov
test
scas
add
dec
scas
cmps
fucomip
add
xor
mov
(bad)
jle
and
add
call
add
add
sar
scas
rol
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
jmp
mov
add
pop
ret
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
call
sub
mov
jmp
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
sub
mov
mov
sub
mov
je
jmp
jmp
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
rol
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
rol
rol
ja
shl
shl
inc
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
cmp
inc
not
jmp
call
mov
xor
jmp
push
mov
push
mov
push
mov
pop
mov
push
ret
cmp
inc
cmp
jle
or
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
gs
adc
push
das
mov
and
ja
mov
ss
xor
mov
and
mov
jno
mov
mov
xor
adc
and
pop
mov
cmp
mov
or
jmp
push
fmul
mov
mov
mov
cdq
mov
add
inc
jb
call
fcom
mov
jb
cmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
or
mov
test
js
sar
sub
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
dec
or
jge
rol
sar
jmp
push
pop
mov
mov
push
mov
mov
mov
mov
push
pop
jmp
shl
jmp
call
xchg
sub
inc
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sar
rol
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
add
add
pop
loope
lods
push
add
inc
add
add
mov
add
add
add
add
add
add
dec
push
adc
or
lds
add
sub
mov
add
add
gs
(bad)
rcl
add
and
retf
mov
push
add
or
rol
jg
jmp
mov
sub
in
loope
jl
test
mov
dec
and
add
add
dec
rol
inc
adc
pop
pop
inc
xchg
add
mov
mov
sub
mov
sahf
jb
jmp
not
mov
add
sub
ficom
push
add
movs
push
test
mov
push
or
mov
jge
inc
and
cmp
add
vpcmpgtw
and
add
add
dec
mov
push
rcl
jmp
(bad)
jmp
scas
or
call
inc
add
dec
jmp
mov
sub
mov
(bad)
repnz
adc
jmp
inc
jmp
cmc
mov
and
je
fimul
add
mov
mov
add
mov
out
inc
and
jg
jmp
mov
sub
pop
psllq
mov
jge
dec
test
mov
add
adc
inc
and
call
add
add
loope
sub
div
js
lods
(bad)
push
movs
pop
or
jp
add
daa
test
pusha
add
dec
add
movs
ins
rcl
add
and
out
xchg
mov
push
add
cmp
aaa
mov
ja
add
pusha
sub
mov
and
psubsw
add
dec
add
test
pop
test
mov
push
add
inc
inc
push
cmp
ins
fcom
jge
push
rol
aaa
mov
sub
jmp
(bad)
scas
mov
data16
test
bound
add
sub
adc
or
add
jge
fadd
aaa
add
xlat
imul
add
rdtsc
ror
xor
and
add
movs
add
mov
push
add
jmp
xlat
int3
mov
cmp
add
shr
aaa
add
xchg
aaa
sub
mov
inc
add
add
mov
add
data16
and
ins
loope
fisttp
ins
stc
add
lea
test
mov
lods
add
jmp
or
mov
add
out
test
inc
inc
test
mov
sbb
test
jne
add
push
lea
dec
test
add
dec
mov
movups
add
mov
out
test
add
add
popf
scas
and
je
sahf
add
add
add
lea
imul
aas
mov
or
frstor
mov
data16
add
mov
jmp
mov
cmp
in
mov
jge
test
dec
add
lods
mov
mov
mov
mov
inc
ret
test
jmp
popa
rol
mov
jmp
add
mov
dec
test
and
add
push
xchg
add
dec
or
add
pop
jp
sub
retf
add
pushf
add
test
lds
lods
(bad)
scas
or
add
or
mov
add
out
mov
mov
and
inc
and
out
adc
add
popf
cwde
outs
xor
mov
scas
add
inc
or
cmp
pop
mov
scas
mov
jmp
shr
pushf
add
and
(bad)
push
test
jmp
ja
cmp
add
add
pop
in
mov
add
add
and
add
add
jmp
and
add
add
and
rol
add
xor
mov
rol
pusha
push
or
int
data16
(bad)
out
add
imul
imul
add
push
add
lea
add
mov
retf
xchg
aaa
dec
dec
or
add
test
fwait
add
push
mov
cli
mov
pop
pop
pop
or
(bad)
or
add
shr
clts
inc
das
add
add
add
push
stos
mov
or
jmp
pop
nop
and
jmp
and
ja
add
test
fild
pop
dec
add
aaa
and
and
pusha
xchg
aaa
mov
add
mov
mov
mov
mov
mov
add
inc
out
add
push
add
sbb
in
in
shr
rol
lds
lock
rol
pusha
mov
lahf
stos
pop
and
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
jmp
cmp
shl
jmp
call
mov
sar
xor
je
or
or
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
add
test
jno
mov
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
cmp
xor
xor
jb
rol
cmp
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
and
sub
add
xchg
xor
addr16
add
fwait
add
add
add
inc
add
jmp
cmp
and
add
add
mov
and
add
in
jle
repz
add
jae
push
add
iret
add
cmps
mov
imul
add
add
sub
jbe
jns
mov
push
mov
cs
add
lock
arpl
fs
jmp
mov
ja
dec
mov
inc
and
aam
arpl
fsubrp
add
(bad)
in
add
test
add
lods
sbb
add
ins
jg
jmp
mov
push
add
dec
ret
xchg
xchg
mov
xor
enter
push
push
sub
or
and
add
mov
clc
test
jnp
(bad)
arpl
sbb
aas
mov
add
add
cs
and
add
xchg
sbb
pmaddwd
fs
add
movs
sub
mov
sahf
(bad)
and
pop
fwait
jmp
mov
sub
ja
inc
rol
fs
jmp
or
add
out
stc
adc
or
inc
add
add
mov
sub
movs
add
scas
and
and
add
nop
adc
jecxz
cmps
aam
dec
repz
and
add
mov
or
mov
sub
mov
aam
hlt
jne
add
add
(bad)
call
add
sub
mov
and
add
add
add
add
ins
popf
xchg
pop
fwait
sub
mov
cmovs
add
add
and
add
add
iret
mov
dec
mov
and
sub
add
or
add
xchg
jmp
mov
and
arpl
sub
cmp
xor
or
dec
ins
add
add
xchg
pop
adc
lock
jno
xlat
int3
mov
iret
add
fs
cmp
add
mov
add
mov
pop
cmc
loope
and
int
lds
xchg
pop
unpcklps
add
jmp
mov
adc
jno
and
sub
mov
jmp
out
mov
(bad)
add
jmp
add
jmp
and
ins
add
sub
mov
and
fild
jno
dec
push
add
aam
add
add
sbb
push
add
mov
add
or
add
mov
(bad)
mov
lock
add
sub
test
jmp
add
jmp
mov
add
out
mov
push
adc
add
add
jno
mov
aam
add
mov
out
outs
pop
mov
add
jg
dec
sub
add
ins
add
mov
mov
jg
jmp
out
test
lock
cmp
fild
loopne
and
add
add
popf
xchg
js
pop
add
add
mov
jecxz
jmp
sub
xchg
add
add
(bad)
inc
and
jg
jmp
mov
sub
mov
stos
(bad)
clc
add
add
sub
add
ins
add
xor
gs
arpl
fs
add
push
mov
mov
jo
(bad)
mov
fwait
add
push
test
add
(bad)
sub
mov
ins
(bad)
xor
add
jmp
mov
pop
ins
je
jmp
stc
add
jmp
dec
test
add
mov
pop
mov
add
add
xchg
jmp
pop
mov
and
lock
(bad)
ja
add
ins
jmp
lock
mov
xchg
push
sbb
mov
je
jmp
mov
ja
aas
test
mov
je
jmp
dec
test
cmps
add
stc
dec
mov
and
imul
add
jmp
mov
add
shr
push
je
cwde
(bad)
movs
aam
mov
inc
lock
add
mov
mov
add
in
add
ret
lock
pop
fwait
test
fmul
out
jmp
shld
xchg
dec
inc
cli
xor
inc
je
jmp
sub
lock
add
mov
inc
inc
stos
xor
push
or
movs
push
sub
add
add
inc
in
mov
out
test
add
add
jp
mov
inc
arpl
push
sar
and
mov
xchg
add
pop
add
add
dec
ins
mov
push
inc
push
xor
inc
rol
(bad)
jmp
popa
mov
aas
cwde
push
add
xor
add
xchg
pop
jmp
push
test
add
cmps
stc
out
es
in
inc
and
in
pop
add
cmp
xor
jae
add
sub
mov
bswap
test
pop
add
adc
aaa
cmps
add
sub
mov
into
pop
je
out
add
add
test
add
inc
jle
lahf
and
je
jmp
mov
dec
fwait
and
test
add
push
add
add
add
cs
dec
std
sub
inc
jle
nop
add
jmp
pop
jp
xchg
jmp
std
mov
mov
test
sub
jmp
jle
add
add
mov
pop
add
cmp
push
add
aas
mov
and
push
movs
sub
ret
ins
popa
sahf
ficomp
(bad)
xchg
aam
arpl
add
sub
mov
cmps
and
test
add
add
rcr
inc
xor
outs
cs
fiadd
test
jmp
out
cmps
add
mov
ds
into
mov
cmp
icebp
dec
mov
add
add
inc
add
mov
mov
inc
int3
mov
mov
sub
lahf
mov
test
jmp
fmul
sub
mov
cs
and
add
add
add
sub
sbb
xor
add
ficomp
in
add
mov
mov
stos
sub
je
dec
add
or
xchg
push
cmp
(bad)
cmps
aam
test
add
arpl
(bad)
add
cmp
mov
mov
cmc
inc
add
inc
mov
add
js
pop
fwait
add
dec
and
add
add
xchg
cmp
add
cs
or
dec
adc
xchg
add
add
jb
jae
cmps
adc
cld
arpl
add
xchg
sbb
dec
add
mov
and
sub
add
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
call
mov
cdq
mov
sbb
in
add
xor
clc
push
and
add
add
push
and
(bad)
arpl
mov
add
mov
mov
xchg
pop
jb
fiadd
add
jle
movs
test
jp
ins
jmp
add
sub
xchg
sete
mov
sbb
jno
dec
sub
aam
arpl
test
add
mov
mov
test
cmovne
mov
ins
cld
ins
xchg
add
add
imul
loopne
pop
jmp
aas
or
sub
and
sub
add
leave
dec
ins
xchg
mov
push
mov
add
cmps
out
mov
or
arpl
sub
and
add
pop
add
ret
and
xchg
mov
mov
mov
mov
test
enter
test
inc
add
cld
test
cld
add
add
cs
loope
sub
test
add
add
dec
ins
add
add
mov
and
add
add
jge
pop
fsubr
mov
xor
lods
sub
mov
ins
adc
popf
pop
(bad)
cld
add
jno
jnp
fucompp
movs
add
add
adc
fisttp
aas
mov
add
pushf
lock
and
add
ins
mov
jno
inc
sub
add
jmp
mov
lea
pop
pop
fs
ret
jb
and
add
movs
test
cmps
mov
push
add
or
add
mov
jno
test
aam
add
pop
ror
push
add
add
fidivr
add
mov
sub
add
movs
inc
scas
daa
jnp
ins
add
movs
popf
cmc
mov
add
jno
test
or
je
mov
cmp
mov
ret
sti
jb
xchg
lds
pop
push
mov
in
push
push
and
sub
jmp
call
xor
jmp
push
pop
mov
push
pop
mov
mov
mov
jmp
dec
or
add
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
not
xor
jle
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
rol
js
shl
test
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jb
add
add
inc
and
iret
add
mov
movs
bound
add
inc
add
dec
push
(bad)
retf
and
lods
es
xor
mov
mov
mov
cmp
(bad)
nop
inc
add
adc
add
bound
fwait
and
sbb
add
xchg
ds
add
dec
adc
fld
or
cmovo
inc
std
jmp
jmp
mov
clc
dec
mov
je
jmp
mov
stos
cmps
les
gs
out
retf
mov
loop
or
and
adc
inc
add
add
xor
imul
je
xlat
add
cmps
cmp
mov
and
dec
test
dec
add
out
mov
and
and
les
push
mov
and
xor
xchg
cmps
shl
dec
add
mov
sahf
shr
xor
test
add
iret
jmp
mov
and
sub
mov
sbb
mov
add
jmp
aaa
in
push
dec
pop
mov
dec
repnz
leave
jl
dec
add
xchg
cmp
xor
sub
fcmovnbe
xor
and
int
inc
sbb
loop
sbb
mov
or
shl
jmp
inc
mov
ret
and
dec
sbb
dec
adc
dec
out
push
mov
fisttp
mov
jmp
mov
adc
mov
xchg
stc
call
inc
shl
add
add
add
add
mov
mov
push
pop
fs
push
dec
push
mov
add
sub
daa
xlat
cmps
or
push
add
and
mov
je
push
push
mov
and
fs
add
leave
push
and
dec
sti
and
mov
retf
mov
and
fisub
xchg
and
add
mov
fcomp
sbb
dec
(bad)
leave
enter
retf
add
add
add
push
add
call
(bad)
loop
pop
(bad)
mov
inc
inc
and
aas
scas
retf
and
add
mov
fstp
add
add
and
lock
mov
and
add
pop
gs
xchg
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
(bad)
loop
dec
xor
pop
cli
push
mov
lds
push
sub
ss
jno
xor
(bad)
loope
fld
imul
mov
add
popa
mov
sub
jo
fcomp
fisub
stc
push
cmps
mov
and
cmp
cmc
xor
jbe
test
ss
fiadd
jbe
adc
leave
and
in
jne
cmp
cmp
mov
cmp
fist
or
aad
mov
sbb
movs
and
ds
or
jp
ret
cdq
fsub
cs
ret
sub
psrlq
jge
adc
jmp
retf
push
fst
or
into
loop
dec
aas
mov
les
leave
(bad)
cmp
jge
or
aas
fstp
gs
(bad)
sbb
sar
cmp
loopne
sbb
(bad)
enterw
or
pusha
pop
sub
shr
data16
(bad)
xchg
sub
push
mov
not
mov
lods
scas
add
inc
leave
push
ror
not
pop
stos
xchg
xor
add
lahf
sbb
cmp
lahf
cld
sbb
aam
mov
pop
xor
mov
xchg
sar
jne
inc
adc
leave
xor
and
xor
and
test
out
inc
fs
test
out
adc
mov
xor
cmp
mov
mov
mov
and
push
stos
inc
out
dec
mov
push
movs
add
and
jge
fimul
xor
jle
xor
dec
xor
stos
fbld
aaa
bound
mov
in
xchg
xor
and
adc
fistp
and
adc
adc
pop
sbb
bound
jb
lods
arpl
and
mov
rcl
cli
outs
je
or
fisubr
inc
sahf
repnz
jl
in
xchg
aad
inc
bound
movs
test
sub
or
inc
mov
pop
hlt
push
pop
in
adc
push
out
dec
aad
sbb
dec
push
fidivr
xchg
outs
stc
scas
xor
mov
cwde
push
fcom
mov
std
ss
(bad)
xor
and
mov
dec
out
push
fisttp
fadd
xchg
ja
in
xchg
inc
xor
(bad)
add
ffreep
adc
push
test
and
repz
pop
add
jecxz
mov
add
jp
jns
sbb
and
inc
popa
mov
push
cld
adc
clc
lahf
(bad)
imul
xor
jp
mov
scas
cmp
jecxz
sbb
pop
loopne
push
adc
mov
aad
sub
jg
loopne
adc
and
dec
push
lock
das
idiv
or
cli
cmps
int3
cmp
addr16
test
pop
inc
push
retf
popf
out
dec
ret
lods
adc
mov
(bad)
ret
inc
fnsave
call
jb
inc
adc
fnsave
clc
mov
xchg
inc
test
cmps
cmp
cmp
push
ja
add
sbb
(bad)
push
div
add
sbb
xor
xor
(bad)
or
dec
or
mov
out
push
add
test
push
jae
mov
cmp
push
inc
scas
movs
mov
or
lds
repz
add
popa
inc
imul
inc
ins
(bad)
dec
and
rcr
dec
into
add
cmps
not
dec
mov
stos
cmp
stc
dec
mov
arpl
call
pop
xor
(bad)
xor
or
dec
push
jp
pop
gs
fs
add
idiv
fwait
into
xchg
mov
pop
mov
jg
cld
adc
push
or
test
shl
jecxz
jo
cmps
fwait
repnz
inc
ret
mov
xlat
pop
jmp
jecxz
cmp
lock
lahf
mov
jno
repnz
pop
jns
sbb
xor
and
and
inc
cmp
jb
mov
pop
movs
mov
push
jb
pop
pushf
(bad)
gs
into
xchg
(bad)
cmp
pop
repnz
push
xor
or
leave
sbb
inc
scas
repnz
jno
aad
cmp
sbb
add
movs
icebp
ds
ins
or
lea
xchg
dec
in
mov
rcr
icebp
and
xor
pop
dec
xlat
movs
xchg
test
jl
pop
mov
test
jne
push
jmp
imul
test
sar
mov
les
stos
jnp
aam
retf
pop
icebp
fstp
xchg
call
or
xlat
fdiv
dec
leave
mov
std
pmulhuw
popf
js
mov
push
inc
jmp
and
xor
mov
mov
mov
jne
cmps
mov
mov
cli
pushf
xor
push
pop
or
or
cmp
jns
leave
popf
xchg
mov
aaa
and
or
jbe
push
das
xchg
cdq
loop
or
fcmovne
push
cmp
ffree
jo
and
jecxz
jbe
ror
jno
add
adc
add
mov
scas
xor
int
pop
bnd
inc
popa
pop
rcr
(bad)
(bad)
shl
lods
(bad)
cmp
sub
ret
rcr
push
cld
gs
jb
sub
xor
ins
cli
mov
popa
nop
int
pop
adc
in
iret
adc
jae
out
and
mov
test
jno
jb
fist
test
lock
and
pop
push
aam
push
mov
(bad)
stos
scas
pcmpeqb
mov
lods
imul
leave
fcom
fimul
inc
inc
and
cmps
(bad)
xchg
xor
repz
inc
das
dec
cmp
hlt
cmps
add
lods
ds
(bad)
add
es
xor
inc
push
jbe
ins
xchg
push
mov
adc
nop
call
test
cmp
jecxz
cmp
bswap
bound
fbld
xchg
sub
bnd
sbb
adc
test
cs
push
fisubr
push
push
pop
sbb
neg
loop
xchg
cmp
dec
and
push
or
das
pop
mov
xor
sbb
pop
ins
sbb
inc
xor
mov
adc
test
pop
mov
rol
inc
push
jno
into
je
jmp
jg
int3
jmp
test
sbb
xchg
loopne
into
xchg
push
push
jg
arpl
mov
rol
das
inc
adc
jae
lods
scas
xor
call
mov
add
jno
inc
inc
scas
out
adc
jp
dec
mov
inc
data16
imul
in
bound
jge
std
dec
daa
cmc
adc
leave
sub
xchg
pop
mov
sub
fdivrp
pop
dec
fs
xchg
mov
jbe
pop
mov
dec
rcl
mov
mov
xchg
sbb
inc
(bad)
ins
call
dec
adc
out
dec
popa
add
sub
cli
cmc
sub
sub
(bad)
sbb
out
mov
cmp
mov
test
out
outs
fadd
inc
mov
iret
jp
sub
or
leave
shl
and
stc
jo
mov
cdq
int
jae
sbb
inc
call
jae
rcr
popa
sbb
enter
push
sub
pusha
mov
cmp
dec
or
xor
icebp
loopne
push
mov
cli
shr
adc
cmps
push
xchg
dec
pop
andnps
loope
out
movs
mov
out
xlat
mov
aaa
xchg
je
cwde
clc
xchg
dec
lock
wrmsr
jae
and
adc
leave
mov
inc
mov
cmp
icebp
mov
ss
movs
sbb
jge
sub
ret
imul
pusha
test
fadd
mov
push
add
adc
sub
repz
sbb
and
sub
jge
stos
xor
repz
push
ds
jg
cmp
clc
jmp
das
or
jecxz
ins
or
adc
loope
sub
pop
add
and
fs
test
push
adc
gs
dec
push
ror
shr
jmp
mov
(bad)
mov
repnz
(bad)
js
push
mov
stc
stos
add
or
es
inc
push
aam
fcomip
shr
mov
out
cmp
aaa
or
outs
aad
nop
rcl
xor
xor
mov
mov
dec
gs
sbb
adc
jp
mov
pop
jb
sub
shl
sub
mov
fnstcw
adc
push
or
push
shl
shl
jmp
cld
fldcw
ds
movs
ja
xchg
adc
inc
retf
xor
leave
mov
xchg
adc
dec
or
mov
add
mov
jno
rcl
mov
sub
dec
daa
sub
popf
in
push
ss
(bad)
(bad)
jg
mov
mov
stos
add
sbb
inc
sub
rol
dec
repz
int
scas
or
icebp
test
scas
mov
mov
push
adc
shr
arpl
ror
aas
dec
leave
mov
jo
fadd
xor
cmps
push
inc
dec
jge
mov
mov
mov
mov
and
enter
jno
push
pop
dec
cdq
cmps
rcr
cld
imul
and
fld
sub
jmp
xlat
mov
sbb
fidivr
jp
xchg
xchg
jge
dec
cli
and
adc
xor
(bad)
aad
aaa
push
push
inc
sub
mov
shl
or
movs
jb
adc
cli
aam
push
repnz
xchg
xchg
or
dec
mov
inc
pushf
add
cmps
jl
xchg
adc
sub
cmps
jbe
push
popf
sub
sbb
xchg
mov
mov
test
and
enter
jl
jmp
aaa
dec
mov
or
je
pop
(bad)
and
jae
mov
and
mov
arpl
inc
out
mov
loope
jle
jle
sub
sahf
or
sbb
inc
inc
fsubr
test
sub
imul
cli
mov
lds
movs
das
push
or
sbb
xchg
mov
xchg
test
pop
movs
lea
add
je
jbe
cmc
ret
or
loopne
cmps
or
fld
int3
movs
aam
icebp
mov
int3
mov
jg
ja
pop
or
push
xor
push
jmp
inc
pop
xor
inc
sbb
(bad)
ffreep
rol
add
pop
add
sbb
xchg
movs
movs
xchg
rcr
xchg
push
and
adc
jge
mov
cli
dec
stos
cmps
xor
fidiv
xchg
leave
(bad)
xor
and
push
popa
cwde
mov
xchg
repz
jo
xchg
push
push
outs
cmps
outs
mov
retf
xor
sti
das
xor
jns
jecxz
retf
(bad)
in
or
aam
clc
aas
cwde
jae
enter
cmp
jo
sub
pop
mov
jns
sti
push
xor
popf
shl
mov
xchg
neg
push
push
(bad)
dec
fnstcw
es
aad
shl
int3
mov
xchg
xchg
neg
xchg
leave
push
cmp
push
sub
ss
inc
pop
enter
cmp
daa
push
nop
es
mov
or
in
add
int
imul
add
xchg
movs
dec
std
fnstcw
sar
imul
cmp
xchg
mov
mov
mov
retf
adc
scas
test
mov
fild
retf
movs
aas
adc
fnstsw
mov
mov
dec
cdq
push
adc
icebp
js
das
cmp
(bad)
(bad)
add
loop
and
loope
pusha
or
in
retf
pop
not
push
pop
pop
pop
popf
ins
xchg
sbb
jae
fisttp
imul
js
icebp
and
jle
imul
xchg
pop
aaa
and
xchg
mov
dec
fld
call
sbb
push
outs
xchg
sahf
mov
adc
xor
hlt
stc
dec
into
mov
gs
xchg
jecxz
cmps
mov
mov
jns
inc
mov
aaa
xor
fistp
xor
jno
sub
sbb
retf
std
ret
stc
cmp
jns
mov
xor
data16
dec
sahf
push
mov
jge
loopne
sub
dec
dec
ror
aam
mov
inc
repnz
add
vpshufhw
leave
jmp
xor
loope
outs
jne
mov
adc
rcl
(bad)
shr
outs
mov
out
lods
xchg
xor
in
push
in
daa
xor
(bad)
rol
jbe
sar
mov
cmps
inc
and
and
sbb
xor
push
repnz
in
jecxz
and
mov
jmp
push
test
imul
sbb
inc
loopne
jbe
sbb
dec
clc
(bad)
jle
ins
xchg
pop
and
sub
push
imul
fist
pop
in
popa
add
inc
sbb
pop
xor
mov
jne
inc
and
rcl
pop
sub
call
mov
sahf
je
push
xor
aam
lods
stos
lods
jae
iret
mov
das
jns
cmp
movs
or
cwde
lahf
iret
pushw
mov
dec
(bad)
int3
sub
push
in
pop
cld
outs
dec
scas
mov
movs
ss
retf
outs
into
push
sbb
movs
jmp
and
dec
jns
xchg
es
mov
jns
cmc
and
inc
int
retf
leave
cmps
fdivr
sbb
loop
(bad)
push
cmp
pop
inc
call
cmp
sbb
jae
mov
sub
xor
outs
test
(bad)
repnz
ja
cmp
(bad)
xchg
(bad)
adc
test
xchg
retf
rcl
dec
rcl
(bad)
cmps
xor
push
fmul
imul
xor
or
shl
(bad)
cmp
ds
mov
(bad)
imul
mov
or
mov
jae
test
mov
into
or
or
popa
xchg
adc
test
add
div
movs
aad
loope
jns
loopne
iret
sbb
shr
and
in
cld
pusha
or
and
push
scas
jl
fidiv
cmc
inc
cmp
leave
fmul
scas
seto
inc
xor
and
jl
aad
xchg
int
mov
popf
repz
or
push
mov
sub
sub
add
sbb
mov
sbb
pop
push
shl
sub
xchg
inc
daa
fsub
enter
inc
mul
call
jg
mov
or
cmc
pop
cld
test
ja
outs
pop
xchg
popf
ret
ret
adc
mov
jmp
addr16
mov
xor
fwait
imul
jns
inc
sub
add
jle
xor
sahf
lock
sbb
xchg
inc
jp
icebp
nop
sbb
xchg
xchg
inc
pop
(bad)
mov
jl
pop
or
data16
loope
fnstcw
mov
in
inc
not
cdq
push
xor
or
mov
inc
scas
(bad)
mov
or
sbb
seto
inc
xlat
loopne
cmps
xbegin
dec
cmp
shl
fabs
mov
xor
mov
repz
mov
pop
aad
mov
(bad)
jmp
push
js
dec
std
shl
add
in
and
fcomp
ins
adc
and
xchg
push
repnz
sti
ret
mov
stc
push
fnsave
and
jns
lock
cmp
jl
lahf
sar
ins
sub
jmp
shr
xchg
lods
aad
and
xor
xchg
and
int
ds
(bad)
push
xchg
adc
lock
sbb
leave
repz
add
pop
in
cwde
hlt
scas
cwde
jmp
and
pop
jle
lock
cwde
(bad)
in
dec
jo
icebp
mov
out
fs
or
xchg
push
js
mov
or
cwde
fwait
cmp
sbb
mov
sahf
cwde
gs
(bad)
std
jmp
xor
mov
dec
mov
fsub
ja
fdivr
call
inc
push
add
mov
or
add
push
jp
cmp
mov
retf
dec
push
dec
call
call
call
sbb
movs
retf
add
fidivr
push
mov
sub
add
cmp
adc
aad
icebp
arpl
stos
jne
sbb
push
xor
mov
xor
stos
push
imul
add
lock
loop
xchg
or
pop
cld
xchg
(bad)
xchg
mov
iret
dec
cli
pop
dec
push
and
jb
enter
mov
(bad)
xor
les
retf
xor
cld
jl
data16
dec
test
or
les
das
sahf
mov
(bad)
shr
loop
(bad)
or
sbb
pop
xor
sahf
js
xchg
add
sbb
xchg
jmp
and
rcr
and
pushf
or
pop
sahf
pop
push
jno
mov
or
push
pop
in
sbb
loopne
ret
sub
(bad)
sbb
enter
xchg
jb
(bad)
popf
add
push
loope
jb
push
xor
stc
inc
sub
jmp
mov
call
ror
rcr
les
xor
leave
sbb
xchg
mov
mov
das
push
aas
sahf
sahf
fcom
mov
dec
shl
ret
pop
ins
mov
aas
hlt
lods
es
dec
jae
stos
push
stos
dec
ja
jne
push
popf
xchg
in
imul
xor
jne
and
fnsave
test
hlt
lds
adc
fstp
(bad)
loope
inc
pop
nop
xchg
xor
int3
in
out
outs
push
mov
mov
rcr
mov
jg
push
lahf
leave
bound
sub
shr
je
arpl
mov
neg
mov
xor
fld
sub
mov
push
mov
add
pop
std
push
xchg
xchg
mov
cmp
jl
call
enter
push
ss
mov
xchg
mov
inc
int
icebp
into
shr
or
adc
jnp
add
fidiv
in
mov
or
sti
les
mov
in
icebp
(bad)
sub
dec
sbb
aam
sub
dec
push
nop
inc
jmp
ret
xchg
sub
mov
mov
xchg
nop
sub
and
push
or
pop
sbb
imul
in
ja
push
les
xchg
loopne
push
xor
je
test
or
(bad)
jecxz
sbb
cs
adc
adc
in
jecxz
mov
mov
int
fld
mov
jae
(bad)
ds
xor
ss
pop
inc
cmps
out
leave
stc
int3
nop
lods
mov
mov
es
mov
int3
or
out
ror
adc
jns
inc
cmp
jge
int
aas
and
jno
aas
ins
retf
xlat
jle
loopne
dec
jo
mov
mov
movs
into
retf
hlt
cwde
daa
mov
nop
jmp
(bad)
loopne
cmps
in
push
and
push
inc
je
mov
fistp
mov
xchg
ss
xchg
loop
es
addr16
gs
test
nop
xchg
loop
push
pop
fs
rcl
ja
iret
jb
fadd
rcl
pop
or
jmp
loopne
mov
dec
stos
and
lea
sbb
push
test
jle
test
mov
push
out
xlat
arpl
je
pusha
mov
fisubr
pop
cs
sub
cmp
movq
cmc
out
xor
or
cs
and
adc
push
and
shl
xor
mov
and
dec
rol
pop
dec
cld
aad
in
adc
sub
dec
pushf
lea
ret
mov
pop
arpl
in
push
mov
pusha
in
xchg
jmp
mov
xor
sub
mov
sbb
pop
aas
sar
movs
es
adc
push
sub
xor
xor
popa
ret
mov
mov
or
shr
add
cwde
(bad)
push
test
bound
fldenv
or
aad
and
adc
push
xor
mov
push
je
inc
mov
sbb
add
mov
inc
lock
out
mov
out
mov
push
jns
dec
test
nop
xchg
jnp
out
cdq
dec
adc
dec
mov
(bad)
nop
stos
inc
leave
mov
jb
sub
jbe
pop
and
mov
test
das
add
xchg
dec
jnp
out
jae
stos
xor
inc
sbb
retf
sbb
ins
jo
icebp
int3
sar
cmp
aaa
push
jp
out
jae
into
cmp
pusha
aad
mov
xchg
ret
iret
add
fdecstp
lea
mov
enter
push
mov
ins
adc
or
mov
mov
or
in
lahf
mul
mov
and
mov
ret
mov
mov
push
mov
or
hlt
xchg
scas
aam
imul
or
fdiv
shl
mov
pop
mov
xchg
push
imul
mov
cwde
fnstenv
sbb
mov
inc
mov
leave
dec
(bad)
cli
aas
retf
nop
cmp
jbe
movs
xchg
cmc
inc
lahf
jae
sbb
mov
dec
or
push
or
outs
aam
cmp
fst
inc
(bad)
test
sub
pop
jb
inc
ds
cmp
push
push
js
add
dec
popa
pop
or
jae
push
pop
mov
les
mov
rcr
inc
(bad)
aas
sahf
sbb
sub
adc
inc
dec
adc
mov
jge
pop
shl
sub
jns
inc
pop
jl
fcom
sub
fcomip
aad
(bad)
mov
cmp
inc
fsubrp
sub
pop
and
adc
push
dec
aaa
jmp
add
dec
xchg
mov
sub
sbb
jp
push
jg
test
dec
repz
fwait
jmp
xor
leave
fistp
xchg
and
lds
pop
pop
or
imul
sahf
(bad)
fsubr
dec
mov
mov
ret
inc
(bad)
mov
inc
and
(bad)
jle
xor
cmps
rcr
sbb
nop
fistp
sub
inc
mov
retf
push
jnp
mov
push
inc
inc
cmp
gs
jb
add
mov
dec
out
adc
pop
xchg
(bad)
mov
push
seto
sub
xor
clc
sbb
mov
jp
pop
enter
gs
dec
cmp
shr
out
fdiv
imul
and
or
pop
(bad)
cmc
push
test
dec
xchg
aad
(bad)
nop
lods
mov
cli
pop
in
enter
mov
or
ja
pop
jecxz
xchg
mov
fsubrp
pop
cld
mov
mov
in
jmp
cmp
mov
aaa
mov
les
mov
call
adc
ins
fisubr
or
pushf
lods
adc
jmp
leave
stos
call
xor
adc
enter
mov
sbb
rol
dec
ins
sti
inc
mov
jl
jnp
or
jb
or
addr16
outs
and
inc
sbb
xlat
pop
push
js
xchg
retf
pop
mov
jae
(bad)
push
out
inc
pusha
shr
fcmovnbe
fild
mov
cmp
test
mov
pop
xor
cld
or
fucomip
pop
sti
inc
enter
xor
mov
sbb
outs
ror
sub
mov
jae
(bad)
call
imul
stc
mov
(bad)
out
aas
cli
sbb
cli
sbb
sub
jmp
mov
movs
lods
pop
leave
jg
lods
out
sub
cmps
pusha
pushf
jmp
lock
or
mov
push
jno
jp
mov
add
mov
bound
sub
mov
loopne
mov
fisubr
jb
add
ss
repnz
jno
xchg
jl
dec
mov
or
pop
out
fwait
xchg
repnz
cli
jno
dec
pop
dec
mov
jge
fs
xlat
push
into
bswap
repnz
jae
pushf
pop
dec
movs
adc
loopne
enter
xchg
lock
push
jl
fst
(bad)
mov
mov
mov
xchg
icebp
cwde
xor
pop
or
pop
leave
out
mov
dec
fdivr
cmp
(bad)
shl
or
out
icebp
outs
pop
push
les
inc
lahf
mov
aam
cwde
adc
mov
cmps
jmp
ds
mov
add
sub
sbb
ror
dec
dec
pusha
xchg
mov
or
inc
xchg
pusha
cwde
dec
inc
lds
popf
test
jle
mov
push
jp
(bad)
xor
fisub
jb
mov
fsubrp
outs
lods
mov
add
pop
xor
ss
inc
push
fs
xchg
add
mulps
dec
xor
call
push
mov
inc
jae
pop
cmps
(bad)
(bad)
sub
icebp
hlt
mov
inc
jno
fist
cmp
lea
inc
mov
inc
(bad)
adc
cmc
mov
leave
stos
pusha
clc
imul
int
add
std
daa
or
adc
mov
(bad)
fadd
xchg
cmp
es
inc
or
out
ffree
call
adc
inc
fld
jl
ins
js
xchg
xchg
pop
adc
enter
imul
test
cmps
jns
mov
test
jo
cmp
inc
hlt
(bad)
mov
sahf
retf
outs
jmp
rcl
jno
cs
jp
xor
repz
inc
xor
mov
test
out
or
pop
xchg
mov
movs
pusha
stc
rcr
ret
out
or
(bad)
push
pop
jb
sub
(bad)
xchg
fwait
out
add
mov
ja
jmp
fisubr
or
es
xchg
icebp
addr16
push
jne
adc
dec
adc
inc
or
and
xchg
nop
cmp
xchg
push
pop
or
pop
adc
ret
cmp
cs
jmp
jg
(bad)
gs
push
xchg
shl
or
retf
test
cmp
push
inc
xchg
aas
stc
jecxz
fist
movs
cmp
ror
mov
pop
cmp
mov
cmc
stos
jp
xlat
inc
(bad)
fnstsw
sub
pop
sbb
mov
push
ret
test
leave
in
dec
sbb
pop
out
fwait
sub
pop
lea
ss
xchg
xlat
pop
dec
push
fsubp
mov
pop
or
mov
push
imul
popa
mov
push
or
mov
mov
adc
stos
cmp
loopne
mov
mov
fst
push
int
imul
cmp
aam
stc
or
inc
test
in
sbb
add
push
mov
xchg
out
add
in
jnp
jmp
cmc
xbegin
call
or
push
das
lahf
out
add
xor
jge
retf
add
movs
in
add
stc
ret
pushf
dec
jmp
addr16
pop
gs
lahf
int3
lea
xchg
mov
add
dec
pop
fwait
dec
lods
cmps
jmp
cmp
lahf
cli
call
inc
fld
xchg
adc
icebp
xchg
aas
loope
cdq
mov
dec
hlt
mov
fsub
neg
idiv
and
ins
stc
pop
fdiv
mov
or
or
cmp
into
cmc
xchg
adc
ss
jne
mov
dec
jb
bound
rol
lock
pop
in
popf
xor
icebp
mov
xchg
sti
gs
data16
loopne
lods
gs
add
ret
ret
dec
push
ja
sub
mov
cwde
cmp
rcr
push
les
stos
cmps
adc
test
bound
jae
dec
push
jnp
jmp
push
jnp
and
and
inc
call
and
pop
retf
xchg
int
xlat
mov
scas
loop
sub
sbb
lock
out
popa
inc
push
push
gs
dec
pop
dec
rol
dec
dec
ds
pushf
cmp
imul
sbb
cmp
cld
adc
scas
cmp
out
sub
xchg
or
in
or
sbb
shl
inc
aad
pushf
arpl
int
les
sub
pop
lods
jo
mov
test
dec
dec
sbb
aad
dec
cdq
jecxz
mov
clc
push
cmp
cmc
inc
fsub
jmp
dec
std
sti
stos
imul
out
push
mov
jne
retf
xchg
pusha
mov
jle
cmps
aas
jl
mov
mov
xor
add
inc
js
adc
push
mov
rcl
and
cmc
pop
(bad)
push
add
lods
xchg
dec
cmp
push
xchg
pop
mov
sub
bound
fidiv
pop
inc
repz
and
inc
movs
(bad)
pop
cld
inc
sub
jg
cmp
pushf
push
in
xchg
mov
in
adc
popa
fwait
mov
mov
cmp
cmps
inc
or
pop
push
stos
cld
int3
pop
jge
(bad)
data16
inc
loopne
aam
xlat
xor
jb
(bad)
jmp
xchg
daa
stc
in
ins
sbb
out
ja
fld
shl
mov
and
fist
jb
xchg
jo
mov
fsub
rcl
stc
scas
sub
xlat
adc
scas
sub
cld
jno
xchg
out
xchg
sar
rol
ins
pop
iret
inc
sbb
mov
dec
aad
jecxz
(bad)
les
sbb
bound
xlat
push
or
mov
mov
mov
pop
fucompp
fimul
leave
shr
adc
dec
cmps
out
push
cdq
ret
ret
sub
sub
fstp
xchg
pop
lock
mov
push
dec
rcr
sub
mov
dec
xor
fidiv
jp
pop
or
and
ret
es
neg
cmps
adc
in
out
cli
arpl
push
leave
xor
sti
mov
lock
cmp
in
mov
into
ss
sub
xchg
cmp
in
out
push
aam
imul
loope
mov
xor
out
push
idiv
xor
push
les
dec
btr
mov
pop
xchg
mov
fild
std
push
and
mov
and
mov
xchg
push
xchg
cmps
ds
mov
cmps
cmp
ins
push
push
jns
fsub
xchg
pop
adc
shl
sbb
iret
sar
mov
dec
call
push
cli
retf
ds
cmp
cmp
dec
cmc
clc
xor
mov
jae
jge
mov
mov
add
and
or
aam
repz
mov
outs
or
arpl
repz
adc
pop
push
pop
and
mov
add
or
enter
xchg
shr
jmp
xlat
or
jecxz
je
push
jecxz
adc
xchg
xlat
jmp
in
sub
cmp
xor
add
out
mov
in
xor
xor
sbb
leave
call
retf
sar
adc
add
faddp
sbb
das
add
mov
stc
scas
je
dec
in
mov
jne
retf
repnz
daa
outs
push
movs
or
jmp
rol
fist
sti
push
aad
xchg
mov
lds
inc
xchg
pop
mov
xchg
imul
or
das
imul
pusha
adc
cmp
loop
inc
add
pop
and
push
(bad)
adc
push
call
pop
aam
into
add
sar
jo
inc
stos
xor
pavgb
frstor
jg
dec
dec
sub
dec
push
icebp
enter
sub
dec
cmps
out
jo
sub
shr
nop
mov
loop
jg
inc
out
pop
retf
ins
scas
and
mov
dec
push
mov
jmp
aam
jbe
stos
mov
gs
in
push
imul
in
fidiv
mov
push
call
cmp
lock
lea
cs
cmp
outs
pusha
leave
mov
(bad)
arpl
jo
cmp
mov
loope
mov
(bad)
out
cwde
mov
retf
js
cld
mov
sub
rol
push
in
shl
ja
pop
pop
sti
and
movs
mul
fidiv
jmp
push
out
mov
ror
push
dec
sbb
add
mov
sbb
inc
mov
rol
ret
shl
movs
jnp
push
adc
mov
aaa
fwait
(bad)
cmp
xchg
or
les
pop
inc
push
jae
lahf
aam
(bad)
mov
je
push
sbb
(bad)
test
movs
push
lahf
std
ds
push
ins
sbb
cdq
js
cmp
push
fs
mov
sahf
leave
add
ja
outs
jae
jnp
(bad)
movs
arpl
mov
out
jle
xor
inc
mov
loope
adc
lahf
bound
xlat
mov
lahf
or
js
out
sub
mov
dec
sub
sar
ja
jo
leave
cmc
xor
pop
mov
in
adc
loopne
ins
jge
and
mov
sti
push
in
dec
loopne
shl
leave
(bad)
test
scas
and
fidiv
adc
shr
aaa
inc
popa
push
stos
dec
cmp
jge
movs
xor
or
mov
shl
cmp
aas
rcr
shl
fs
inc
or
inc
mov
fs
leave
jnp
mov
jae
and
jp
xor
sahf
and
xchg
outs
(bad)
fnstsw
pushf
loop
adc
dec
mov
mov
mov
js
nop
pop
je
arpl
jmp
stos
and
hlt
jmp
int
adc
(bad)
mov
jb
ja
lods
out
xchg
iret
repnz
push
pop
pop
iret
xor
ss
jnp
loop
shr
fild
sbb
je
mov
xor
stc
sbb
mov
arpl
dec
dec
mov
enter
jns
sub
and
mov
mov
loope
jmp
jnp
ds
imul
sbb
push
push
mov
inc
movs
jg
or
stos
lock
fwait
pop
xor
lea
inc
xor
pop
sub
lds
pop
dec
cld
dec
mov
pop
inc
out
cmp
scas
mov
enter
push
cs
js
mov
daa
out
sub
aas
int
cmp
outs
movs
jmp
pusha
dec
mov
cmp
or
mov
aam
inc
lahf
imul
(bad)
add
jp
sub
mov
sti
and
lock
mov
das
jle
int
cmp
popa
dec
lods
inc
xchg
jmp
add
push
adc
cmp
test
jmp
mov
dec
jae
movlps
lods
xchg
rol
cwde
in
sub
add
mov
pop
cs
mov
or
inc
es
push
pop
xchg
test
dec
jecxz
or
xchg
push
pushf
cld
rcr
les
loop
inc
repz
stos
cmp
psrlw
pop
jmp
mov
into
add
pop
and
shl
loope
ss
imul
and
mov
xchg
push
and
mov
ins
retf
or
jmp
mov
loopne
jo
(bad)
iret
cdq
mov
test
fwait
sbb
outs
xchg
fbstp
lahf
icebp
add
daa
js
call
dec
sub
js
ret
jnp
sub
pop
xchg
adc
cli
fwait
sahf
inc
cs
pop
sub
lsl
adc
cmp
out
loop
rcr
push
jb
stos
mov
jae
std
jno
jp
sub
aam
sbb
adc
mov
pusha
aad
adc
jmp
mov
sbb
das
(bad)
fst
pop
xor
mov
inc
es
bsf
jns
pop
jne
call
sub
jmp
pop
add
outs
jmp
jb
ret
xchg
dec
pop
cmp
cdq
(bad)
ficomp
xor
les
dec
test
mov
cwde
mov
xchg
out
mov
int
xchg
mov
jb
stc
mov
xchg
lea
xchg
push
push
(bad)
sar
and
cmp
fucom
xchg
mov
mov
cld
cwde
jo
(bad)
push
dec
fsubr
and
and
add
cmp
std
dec
int3
mov
test
leave
nop
cmc
fistp
popa
mov
mov
add
repnz
fdiv
aaa
in
jne
pop
fmul
xchg
fiadd
aas
pop
pop
jmp
sub
add
lds
jno
mov
mov
ret
mov
gs
and
(bad)
stos
adc
cmc
xchg
test
mov
jae
loop
je
(bad)
gs
xchg
jns
das
or
movs
(bad)
push
fbstp
xchg
and
mov
lods
and
lahf
pop
mov
mov
scas
dec
fiadd
mov
push
inc
sbb
aas
xchg
imul
pop
frstor
loopne
or
int3
into
outs
scas
dec
pop
retf
(bad)
jmp
int
pop
add
xor
clc
sub
out
fldenv
adc
adc
mov
mul
xor
xchg
xchg
neg
(bad)
lds
scas
cmp
movs
mov
jmp
sbb
mov
and
adc
jne
and
dec
inc
xor
clc
add
mov
mov
std
xchg
dec
xchg
adc
pop
or
into
rcr
pop
mov
mov
mov
add
jp
and
popa
into
sub
cmp
retf
xchg
mov
repz
mov
inc
repnz
mov
jae
jp
scas
imul
(bad)
adc
and
push
sbb
cmp
mov
mov
lods
scas
popa
pop
and
mov
push
enter
neg
inc
jp
outs
pop
mov
(bad)
arpl
sbb
push
pop
out
and
push
xchg
js
aas
(bad)
or
or
xchg
mov
mov
and
mov
mov
popa
cmp
movs
aas
mov
fcomp
cmp
es
iret
or
movs
or
mov
or
mov
xchg
cmc
fidivr
aas
ret
mov
inc
out
mov
loop
add
adc
out
adc
inc
cmps
lock
rol
xchg
ret
aam
std
mov
mov
sbb
call
and
(bad)
jecxz
hlt
mov
jle
fisub
popf
ror
ins
gs
mov
in
push
call
sbb
or
jge
push
push
xchg
xchg
jp
vaddsubpd
fwait
test
sub
movs
shr
ficomp
push
mov
cmps
cwde
sub
and
shr
fwait
mov
fwait
in
scas
cmps
sar
sub
and
and
test
fsubr
and
and
loope
xchg
adc
test
das
ret
cmp
dec
jne
or
mov
pop
imul
fisttp
mov
mov
jne
sar
stc
dec
mov
mov
mov
es
enter
or
outs
cmp
sahf
adc
and
(bad)
or
das
jge
jmp
jno
pop
or
cmp
inc
and
xchg
or
pop
cmp
add
jl
add
inc
xlat
retf
fs
jae
xor
or
cli
xchg
sbb
aas
push
aad
mov
out
or
add
push
int
pushf
int3
jmp
sar
push
pop
mov
pop
addr16
aas
push
jge
push
jecxz
inc
inc
mov
xlat
pushf
mov
mov
cmp
retf
ja
in
test
xchg
jno
std
xchg
pop
xchg
and
popf
push
mov
das
jmp
nop
or
xor
push
pop
jno
jg
add
jmp
sub
imul
cwde
mov
fldenv
or
shl
popf
cmps
mov
pop
add
ins
(bad)
cmp
dec
mov
mov
cmp
mov
(bad)
lods
(bad)
push
scas
mov
ins
cmp
cli
xor
dec
and
and
xor
jg
retf
je
cmp
adc
push
pop
fdivp
sub
jns
imul
pop
sti
loopne
jle
dec
ficomp
push
jp
lock
outs
mov
xlat
pop
and
dec
adc
sbb
outs
js
ror
dec
out
(bad)
and
jo
fisub
sub
add
mov
scas
sub
(bad)
(bad)
add
mov
mov
mov
push
ss
shr
and
mov
(bad)
mov
add
aad
rcl
fiadd
cs
pop
sub
mov
out
dec
test
in
jbe
mov
jecxz
gs
(bad)
fidivr
or
mov
add
pop
pop
in
into
or
rcl
sub
call
add
mov
dec
add
adc
sub
outs
push
sbb
xor
stc
push
scas
out
pop
mov
adc
push
mov
je
sbb
pushf
jo
sbb
stc
stos
ficom
loop
jp
dec
js
fisttp
scas
jns
lods
and
inc
in
iret
jb
(bad)
les
sub
rol
push
enter
jo
add
mov
adc
call
xchg
and
lods
inc
and
std
aam
jmp
fwait
(bad)
icebp
add
or
arpl
inc
lea
or
lea
mov
in
sti
inc
rcl
push
add
sub
cld
jb
sbb
imul
test
mov
movs
loop
or
ja
cdq
icebp
std
int
out
repz
adc
adc
retf
sbb
adc
jnp
stc
(bad)
xchg
jo
mov
fsubr
ror
daa
pop
repz
popa
jg
add
popa
in
nop
aam
mov
sbb
and
xchg
fnstenv
add
sar
loop
jbe
movlps
and
jg
es
mov
mov
(bad)
mov
cdq
jae
shl
jl
and
test
movs
les
popa
(bad)
cld
jl
mov
jno
mov
push
adc
mov
ds
jmp
dec
fiadd
xchg
int3
inc
lds
in
mov
lea
jg
loopne
stos
pop
into
out
push
shl
xor
or
xor
jno
out
repnz
sub
xor
int3
push
dec
test
mov
mov
aad
dec
sub
push
aam
outs
adc
and
test
xor
cmps
mov
repnz
pop
leave
leave
cmps
mov
adc
pop
loopne
jg
(bad)
xchg
stos
in
jae
push
dec
js
(bad)
leave
pop
pusha
retf
jb
cmps
les
fld
imul
push
push
pop
fistp
aam
and
mov
rol
ds
mov
int
xchg
push
xchg
(bad)
cmp
mov
mov
mov
jns
cmc
shl
sub
out
adc
adc
fnstcw
lds
fsubr
add
xchg
cwde
test
cwde
nop
jg
js
inc
inc
pop
enter
into
pop
hlt
aam
add
or
xor
out
repnz
scas
mov
mov
adc
xchg
sub
push
jl
adc
call
push
aad
fisttp
test
mov
mov
cmps
push
popf
push
pop
jg
jmp
mov
cmp
ss
jmp
fcomp
mov
or
shl
mov
shl
fisub
adc
imul
cmp
fdivr
cmps
and
push
fcomp
xchg
dec
sbb
cmps
test
hlt
iret
xchg
mov
lods
jno
lods
xor
fldcw
lods
or
xchg
cmp
push
pushf
addr16
(bad)
jne
lea
nop
push
xchg
xor
scas
pop
lods
mov
not
and
pop
pushf
push
push
das
push
dec
in
bound
fnstcw
pop
(bad)
clc
mov
jb
sub
push
xor
lock
leave
loope
shl
dec
and
mov
aad
add
or
std
sti
(bad)
cld
xlat
mov
stos
ss
enter
sub
xor
ret
lods
xchg
imul
test
retf
pop
loopne
push
es
push
(bad)
push
hlt
jge
adc
pop
jns
inc
ret
aam
push
stos
jmp
out
pushf
inc
lods
mov
fisubr
cmp
push
adc
inc
gs
fwait
ins
sub
fisubr
jbe
outs
dec
xchg
popf
or
bound
popf
adc
add
sbb
mov
(bad)
push
push
cmovnp
sbb
cmp
dec
stos
jmp
mov
movs
add
int
mov
mov
mov
pop
cmps
sysexit
arpl
and
xlat
ror
cdq
loopne
xlat
les
jmp
out
repnz
jns
out
ret
fsub
pop
mov
jnp
cmps
jns
and
push
push
cli
mov
repnz
aas
mov
ins
bound
outs
aaa
jge
fstp
bound
sub
or
cmp
cld
js
cmp
push
dec
bound
(bad)
adc
cmp
leave
pushf
xor
inc
repz
stos
or
jmp
(bad)
clc
sub
test
push
jns
fs
shl
ins
std
mov
sbb
imul
retf
(bad)
bnd
push
dec
inc
push
loope
ret
sub
sbb
mov
loopne
ret
sbb
and
jno
jl
lock
arpl
cwde
sub
pop
mov
mov
shl
aad
ja
mov
scas
push
fbld
arpl
enter
clc
and
push
and
stos
movs
sahf
daa
stc
cdq
mov
xchg
sub
mov
test
test
fs
fadd
mov
mov
xor
dec
aas
push
addr16
cmp
into
idiv
sub
call
in
xchg
call
inc
imul
sub
pop
out
test
icebp
add
shr
push
imul
dec
cld
inc
in
lahf
xchg
cmp
ins
adc
mov
pop
xor
push
call
mov
xchg
je
sbb
jp
dec
mov
xor
shl
int3
xchg
scas
fdiv
enter
adc
jno
pop
pop
inc
jle
xlat
sub
cdq
dec
lock
jmp
test
push
jl
sbb
fld
dec
mov
mov
xor
and
xchg
mov
cmc
(bad)
aaa
iret
repz
scas
aaa
pop
addr16
mov
lods
push
out
dec
cmp
jmp
lods
shr
and
or
cmp
and
ret
jmp
adc
xor
(bad)
loope
cdq
mov
inc
mov
mov
mov
inc
xchg
ror
in
push
test
(bad)
std
sbb
sbb
pop
dec
add
out
mov
stos
adc
pop
jno
repnz
cmp
ja
mov
fdivr
and
adc
mov
xor
ret
or
shl
js
xchg
push
cwde
aaa
dec
int3
inc
sti
(bad)
je
add
jecxz
loopne
mov
lods
jecxz
(bad)
cmp
or
adc
dec
cmp
aad
push
or
pop
adc
outs
mov
sub
dec
jp
cmp
mul
sahf
pop
leave
repz
aaa
sub
push
push
es
inc
pop
dec
cmc
adc
or
enter
adc
xchg
(bad)
les
hlt
loop
cmp
jbe
movs
test
cmps
ja
in
lods
inc
pop
mov
or
mov
shl
iret
dec
daa
cmps
test
loope
mov
ss
push
jns
push
retf
out
scas
aam
dec
stos
stc
xchg
fcmovnbe
mov
push
sbb
sub
data16
mov
push
ss
pop
jmp
inc
ins
(bad)
je
nop
mov
loop
cmps
sub
sub
or
push
mov
movs
fmul
(bad)
cmc
mov
inc
add
cmps
(bad)
pop
push
or
into
add
sbb
int
retf
adc
push
cs
pop
jle
js
cmps
mov
fwait
in
xor
xchg
call
enter
jne
pop
sbb
push
movs
mov
sub
cmp
ret
adc
enter
xor
jo
jne
pop
dec
add
push
fist
movs
bound
imul
hlt
mov
cmc
(bad)
sbb
ja
js
jle
and
mov
xor
shl
push
sbb
mov
popa
pop
cwde
xor
ins
fld
lahf
retf
mov
test
cmovp
jp
sbb
xor
xor
fstp
jl
lahf
std
or
fsub
stc
inc
imul
ss
adc
jne
pop
jno
retf
adc
cwde
clc
or
gs
mov
pusha
dec
fcom
scas
mov
jb
sti
mov
test
pushf
jg
loopne
aas
cmp
mov
aam
lahf
jp
test
loopne
fisubr
add
jmp
mul
xchg
mov
cmp
jmp
stos
mov
jnp
dec
mov
mov
mov
sbb
or
call
cmp
jae
push
js
xlat
mov
mov
cmp
mov
mov
pusha
cmc
test
ja
test
scas
dec
repnz
dec
sbb
(bad)
pop
cli
add
pushf
mov
je
dec
sbb
mov
test
imul
pop
fiadd
ds
(bad)
je
fsub
test
adc
les
loop
retf
mov
in
or
mov
sbb
mov
adc
jg
mov
mov
movs
fild
adc
in
leave
loopne
call
aad
fld
sbb
scas
das
jge
ins
or
cmp
leave
add
sub
shl
clc
xor
adc
ss
jns
fisub
cli
ret
(bad)
movs
aad
inc
adc
in
or
push
mov
dec
xor
ror
dec
loopne
xor
sbb
add
loope
dec
in
lods
fs
sbb
jp
mov
inc
jl
xchg
repz
or
data16
cmp
aam
xor
mov
fsub
dec
and
out
cwde
jno
fs
clc
xor
ret
shl
push
stc
fimul
inc
mov
mov
sub
or
into
out
jge
shr
js
adc
imul
cmp
add
xor
lock
lahf
push
add
jg
ins
aas
inc
inc
test
sbb
(bad)
cmp
(bad)
in
cwde
dec
mov
in
pop
mov
add
sub
pop
jmp
sbb
push
(bad)
idiv
sub
mov
loop
shr
clc
bound
or
sub
inc
sbb
and
mov
push
dec
inc
sbb
fiadd
gs
add
(bad)
inc
add
pop
xchg
sub
cmps
xchg
push
push
mov
hlt
imul
fadd
mov
xchg
in
into
adc
aas
cld
mov
fdivr
inc
xchg
cmp
jp
ror
outs
pop
out
inc
mov
pop
cdq
stc
mov
imul
cwde
inc
add
push
mov
out
adc
dec
fdivr
jbe
mov
pop
cmc
cli
fs
sub
fidiv
fist
mov
(bad)
test
cdq
pop
xchg
mov
add
xchg
jg
in
ror
mov
xor
dec
adc
inc
inc
data16
ret
xor
add
cmp
fild
div
mov
and
push
push
leave
dec
xchg
push
jp
push
push
add
shr
das
(bad)
in
sahf
push
push
cmovo
xchg
or
rcl
mov
mov
pop
lods
jg
loop
cmps
fcomp
lea
retf
push
rcl
sub
movs
rol
stos
mov
repnz
repz
add
call
(bad)
xor
movs
pop
daa
iret
in
sub
add
xchg
bound
and
fwait
adc
inc
or
or
ret
cmp
pop
dec
lods
jle
jge
retf
lock
fld
(bad)
ins
imul
jecxz
in
mov
dec
xchg
sub
jno
jmp
inc
xchg
or
(bad)
push
mov
out
imul
gs
ror
in
lods
stos
pushf
stos
shl
sahf
call
jp
or
sbb
mov
mov
fs
sub
fldcw
adc
or
fwait
lea
xchg
and
gs
imul
adc
sub
xchg
jmp
dec
lahf
mov
mov
sbb
shr
inc
and
out
retf
mov
lock
sbb
inc
inc
xor
dec
cs
jmp
pop
fs
sub
pop
loopne
adc
sub
aaa
nop
add
pop
imul
retf
call
sahf
sbb
pusha
gs
out
iret
cs
pop
(bad)
mov
inc
hlt
pop
sti
out
cmp
(bad)
rcr
jns
(bad)
sbb
ret
xchg
sahf
jle
inc
fcomp
jne
ds
div
push
xchg
fimul
test
sub
dec
hlt
in
push
(bad)
je
adc
sbb
jmp
neg
out
(bad)
nop
mov
fisub
aaa
xchg
push
lea
ja
sti
jp
call
and
iret
and
dec
inc
jecxz
sub
add
pop
cmc
dec
shr
mov
(bad)
fldcw
enter
adc
ja
mov
adc
imul
xor
push
sets
(bad)
mov
ja
push
jns
jge
pop
aas
(bad)
jge
(bad)
xor
xor
jp
movs
push
inc
jmp
aad
clc
clc
inc
out
mov
aad
xor
jl
pusha
sbb
in
arpl
sub
cmps
inc
stos
adc
cli
in
adc
inc
inc
sbb
xchg
les
add
push
(bad)
or
jmp
jmp
ds
mov
in
(bad)
ficomp
stc
mov
fbstp
sti
pusha
xchg
iret
push
mov
daa
and
mov
jns
sar
(bad)
test
aas
sbb
and
mov
mov
inc
mov
shl
adc
wbinvd
ret
and
in
fisub
ins
add
xor
mov
push
pop
aaa
icebp
repz
rol
test
adc
lds
mov
inc
lods
cmp
pop
push
gs
sbb
xchg
scas
sub
(bad)
aam
(bad)
(bad)
jns
(bad)
mov
ror
mov
fld
test
jae
dec
sub
out
dec
mov
clc
and
sbb
mov
jg
test
adc
adc
out
ins
inc
data16
mov
push
pop
add
daa
pushw
push
shl
in
call
fs
xchg
jmp
loopne
scas
ror
(bad)
in
fmul
dec
sbb
mov
pop
rcr
xor
lea
mov
lods
aad
sar
fst
xchg
inc
pop
call
dec
int
mov
mov
sbb
push
movs
jecxz
add
add
clc
shl
out
aas
cmp
cmp
cmc
pop
inc
dec
cmp
adc
xor
les
push
xchg
out
xchg
js
inc
daa
je
mov
inc
data16
mov
pushf
push
pop
push
and
and
test
push
cmps
test
rol
mov
dec
dec
add
pushf
inc
std
and
mov
dec
mov
movs
mov
(bad)
(bad)
push
iret
sub
adc
add
xchg
(bad)
movs
mov
mov
call
lds
mov
test
mov
int3
cs
inc
sbb
add
xchg
cmps
xchg
lock
rcl
push
xor
stc
adc
adc
xchg
imul
jmp
outs
mov
sbb
sub
pop
enter
lods
test
inc
aam
ss
les
mov
sahf
lods
add
aas
sbb
sahf
shr
dec
xor
dec
call
xor
dec
lods
ja
out
jmp
adc
(bad)
dec
pop
scas
mov
sti
fwait
push
repz
mov
add
adc
ins
xlat
outs
or
pop
mov
cmp
pop
mov
ret
dec
repz
mov
loop
or
adc
xlat
dec
or
test
xor
in
jae
loopne
push
jmp
pop
jnp
fnstsw
mov
sbb
pusha
icebp
mov
call
lock
mov
test
in
push
push
mov
lods
fdivr
jno
mov
pop
jmp
sbb
push
and
(bad)
mov
hlt
movs
retf
clc
dec
rep
loope
fbld
pop
or
lock
or
adc
xchg
ror
and
push
ss
mov
test
rol
int
lock
jne
xchg
xchg
in
push
mov
mov
movs
fnstsw
mov
push
or
inc
mov
fwait
mov
fsubr
inc
lds
(bad)
fsubr
or
mov
sbb
mov
fdivp
mov
int
push
add
xchg
dec
push
sbb
imul
outs
cdq
jnp
jns
ins
xlat
cmp
cli
mov
push
lea
mov
push
mov
leave
nop
ret
fist
inc
loope
mov
sti
(bad)
(bad)
adc
mov
sub
(bad)
push
sub
(bad)
cmp
imul
push
nop
mov
fstp
dec
push
or
pop
fadd
cmp
mov
int3
(bad)
mov
cmc
mov
add
and
lahf
(bad)
aad
fisubr
pop
call
inc
fwait
sbb
mul
dec
jnp
and
push
mov
in
inc
mov
cmp
(bad)
mov
cmp
icebp
add
stos
xor
add
jae
sbb
xor
aam
mov
inc
push
popa
mov
mov
(bad)
cmps
xor
mov
ins
jne
add
pop
int3
or
sub
popa
sbb
mov
es
ffree
cmp
or
adc
add
sbb
dec
popa
add
fild
push
sub
xor
sub
inc
push
cdq
out
cld
mov
pop
jg
loopne
jl
xchg
mov
rol
jle
cmovl
data16
sbb
jle
add
mov
ds
es
add
cli
ret
add
inc
stos
int3
(bad)
mov
push
sub
dec
shr
fs
add
cmp
scas
pop
cmps
movs
mov
cmp
pop
and
pop
cmp
movq
mov
dec
clc
cld
es
xchg
mov
mov
stc
iret
jne
cmp
pop
fmul
mov
ret
inc
packuswb
into
stos
scas
push
(bad)
outs
push
sbb
jmp
mov
(bad)
mov
ins
add
(bad)
jge
inc
sub
idiv
daa
nop
push
mov
push
or
pusha
stos
stc
jp
mov
clflush
dec
mov
std
or
mov
iret
xor
dec
test
dec
lea
lahf
adc
add
xor
inc
cmp
popw
pop
pop
fdivr
movs
ins
adc
adc
mov
cs
rcr
das
int
inc
fsubp
mov
dec
sbb
jnp
xor
push
and
mov
push
pop
loopne
lds
aaa
add
adc
mov
push
inc
mov
dec
inc
mov
inc
adc
popf
int
xor
mov
push
cmp
push
out
inc
and
sbb
push
push
add
inc
dec
out
jae
js
xchg
cwde
mov
push
push
xor
inc
xor
sbb
ret
adc
push
mov
ds
lods
cmc
adc
out
xchg
inc
lods
add
stos
mov
icebp
jno
dec
(bad)
(bad)
and
cmp
inc
les
mov
mov
clc
inc
pop
lea
adc
push
loope
add
and
icebp
sbb
jl
adc
lea
jmp
rcl
dec
sub
cmp
inc
pushf
inc
and
ret
int
push
cmc
sub
push
ret
xchg
test
pop
nop
repz
rcr
mov
imul
push
out
or
jp
imul
mov
cmps
inc
js
lahf
xor
lds
lods
idiv
ja
add
scas
cs
(bad)
sbb
stc
bound
scas
test
jecxz
div
stc
popa
jo
mov
je
adc
dec
fldcw
xlat
cwde
dec
leave
leave
addr16
(bad)
int3
pop
or
in
ja
push
sbb
jp
mov
push
enter
dec
iret
aas
pop
add
les
sub
inc
push
sub
fidivr
scas
mov
mov
or
cmc
pop
(bad)
jbe
lock
nop
test
jmp
dec
or
fldcw
push
fadd
(bad)
lock
js
int
(bad)
jge
hlt
or
clc
cli
pop
sbb
dec
mov
mov
jne
out
sbb
loopne
movs
push
dec
mov
mov
mov
cmc
mov
and
into
test
pop
push
mov
loope
out
xchg
lds
push
enter
movs
fs
mov
stc
sub
(bad)
sub
jl
mov
bnd
dec
lock
cmc
mov
or
jno
xlat
jb
adc
jg
sub
idiv
iret
inc
add
ja
jmp
stc
in
jae
fadd
or
or
jge
cmps
shl
popf
and
mov
shl
pop
sbb
fmul
enter
cmp
xor
push
add
fsub
dec
inc
mov
pop
pop
ds
dec
adc
mov
add
or
dec
daa
lea
iret
mov
push
out
jmp
scas
mov
dec
inc
or
ins
and
dec
cmps
retf
loope
je
jo
js
test
(bad)
jnp
xor
pop
cmps
mov
out
in
mov
jmp
xor
das
pop
inc
and
not
sbb
and
pop
lods
mov
mov
adc
iret
sbb
test
(bad)
les
xchg
inc
popf
clc
nop
mov
push
sti
fidivr
xchg
icebp
mov
sub
mov
push
ret
mov
fild
in
shl
dec
nop
sbb
rol
iret
mov
int
fs
ss
dec
add
fist
jmp
add
ja
dec
(bad)
push
cmp
mov
leave
(bad)
cmps
pop
movs
sbb
cs
rcl
shl
jnp
aas
retf
cmc
adc
pop
dec
mov
mov
mov
jmp
sbb
(bad)
cmp
aaa
fdiv
mov
in
pop
cmp
retf
(bad)
lahf
add
pop
(bad)
aad
lahf
test
pop
pop
in
and
jg
xchg
stc
push
xchg
jae
lods
call
stos
push
jbe
enter
add
stc
fidiv
mov
in
mov
jnp
bound
fcmovu
rcr
push
and
and
sbb
fcom
out
mov
stc
dec
inc
ror
add
sbb
sub
stos
xchg
mov
or
or
inc
stc
pop
clc
loop
pushf
icebp
xchg
mov
retf
retf
mov
int
cmp
pusha
bound
repnz
mov
jbe
icebp
inc
int3
jge
mov
ret
add
dec
sti
mov
scas
mov
jg
jae
or
mov
retf
mov
lods
jb
fldenv
popf
iret
test
pop
out
cs
aad
cdq
pushf
shr
sub
push
pusha
sbb
fwait
or
out
mov
test
fidivr
jno
pushf
inc
xchg
addr16
rol
pop
push
sbb
dec
pop
cmc
xchg
jo
adc
push
xor
mov
icebp
sti
sbb
popa
adc
fistp
(bad)
and
ja
or
shl
neg
xchg
adc
and
shr
pop
sub
sub
cmp
lods
je
arpl
mov
inc
mov
fistp
pop
cmp
cmp
add
and
scas
pop
or
xor
push
pushf
(bad)
(bad)
rol
dec
mov
leave
inc
xchg
mov
cld
mov
shr
adc
mov
jb
mov
xor
dec
in
mov
js
mov
into
bound
mov
push
fdivr
xlat
push
xlat
pop
sub
pop
fwait
jns
cmp
mov
jbe
pop
xchg
leave
xchg
fs
imul
int
fmul
inc
pop
pop
adc
sub
cmp
test
(bad)
clc
test
push
xchg
ficomp
cmp
je
nop
or
and
and
(bad)
loopne
jae
scas
push
jns
and
enter
rcr
in
vmread
enter
dec
cmp
cmp
cmp
or
push
xchg
sar
fwait
retf
dec
mov
ss
in
cs
js
adc
rcl
test
adc
ret
jbe
pop
aad
dec
repnz
sub
(bad)
sub
sub
shl
fisubr
(bad)
js
inc
(bad)
les
int
bound
mov
add
inc
sub
xor
dec
inc
nop
xchg
daa
push
push
push
not
adc
leave
jne
mov
cmp
out
jp
sahf
mov
pop
cmp
mov
inc
sti
sub
mov
out
or
pop
sahf
mov
push
sbb
ret
int
cmc
jb
and
xchg
xchg
sbb
xchg
xor
int
sub
mov
or
mov
pushf
push
lahf
pop
(bad)
cmp
mov
outs
jo
pop
addr16
inc
cmps
rcr
mov
adc
xchg
mov
mov
sbb
jg
adc
imul
addr16
leave
mov
daa
sbb
or
xor
and
call
sub
scas
mov
mov
into
push
or
mov
and
jg
mov
sahf
dec
inc
add
cld
rol
mov
int3
xchg
pop
jge
sbb
adc
add
pusha
and
inc
daa
scas
(bad)
popa
daa
jo
outs
fwait
stos
adc
jmp
add
cmps
(bad)
std
cld
jbe
outs
sti
aam
mov
lods
(bad)
(bad)
push
(bad)
int
popa
xlat
(bad)
rcr
push
in
dec
mov
sub
es
jge
jg
lods
mov
jns
out
mov
jb
mov
dec
shl
push
imul
cmps
(bad)
mov
inc
and
cmp
in
ins
push
mov
(bad)
jne
sub
xor
imul
xchg
cmp
inc
out
mov
dec
inc
xor
in
data16
cdq
fidiv
mov
sub
es
cmps
mov
scas
adc
push
inc
mov
loopne
sbb
clc
call
ficom
dec
jg
in
aam
push
ficom
scas
sbb
dec
fld
cmc
(bad)
sbb
sbb
xchg
and
pop
sub
sub
inc
mov
call
jnp
sbb
inc
jbe
push
jmp
cli
xchg
in
cwde
and
and
outs
inc
jne
scas
loopne
inc
ror
dec
out
(bad)
add
repz
sub
sti
(bad)
push
sub
stc
push
in
(bad)
out
jbe
in
sahf
add
adc
fbstp
mov
jno
lahf
scas
and
rcl
int3
cmp
xor
rol
cmp
pop
pop
push
push
xchg
sub
and
loop
pop
pop
sahf
cmps
jg
ins
jne
ds
pop
aaa
mov
add
out
fadd
in
push
pop
jl
shl
jp
mov
hlt
jmp
inc
sub
lods
push
jg
fnstenv
and
ret
pop
gs
sub
in
pop
int
mov
sbb
add
cmps
ret
or
pop
stc
iret
into
and
and
xor
add
push
js
sub
xchg
test
mov
daa
ds
jp
lahf
mov
adc
callw
jl
mov
add
xchg
out
mov
scas
dec
test
push
das
mov
adc
mov
stos
jl
inc
ins
cmp
into
lods
mov
add
ds
inc
lods
mov
mov
mov
inc
mov
mov
loope
icebp
jecxz
pushf
in
sub
xchg
jle
mov
fstp
jne
push
and
add
das
sbb
fidiv
pop
idiv
xchg
cli
mov
pop
xor
in
push
sub
mov
div
inc
add
hlt
mov
je
rcl
aas
mov
cmp
outs
pushf
xchg
mov
movs
js
adc
rol
sbb
enter
sub
jp
jmp
test
dec
jbe
retf
adc
inc
xchg
jg
push
repz
push
pop
fs
cmp
sub
ins
cld
mov
jb
pop
aad
ret
cmps
sbb
push
or
push
mov
outs
fsub
mov
in
push
scas
cmps
stc
stos
sbb
inc
dec
mov
pop
mov
push
adc
sbb
addr16
pop
pop
inc
data16
adc
push
or
inc
dec
loope
dec
pop
out
jne
fs
cmc
sbb
push
pop
xor
retf
push
into
cmp
loopne
je
push
fs
inc
inc
jno
mov
xchg
out
mov
dec
sub
scas
xor
mov
xchg
mov
movs
xor
(bad)
sbb
es
call
or
mov
sti
mov
jns
out
stos
in
add
mov
les
pop
cmps
sbb
stos
pop
ret
mov
sub
cs
sahf
lods
cmp
pop
fstp
add
icebp
jb
mov
push
retf
mov
pop
movs
adc
mov
cmp
in
inc
bound
icebp
adc
gs
cmp
(bad)
int
jae
ja
mov
test
or
stos
and
in
sub
inc
cwde
(bad)
in
adc
popa
xlat
and
dec
or
push
into
adc
sbb
aam
dec
fmul
inc
das
xchg
push
xor
sar
sbb
ret
ficomp
cmp
repnz
dec
outs
ret
movs
cmp
ss
jns
xchg
mov
aas
push
rcl
jnp
mov
mov
push
loop
ds
lahf
jns
sub
inc
lods
mov
das
dec
adc
daa
(bad)
arpl
jo
clc
fistp
fs
cmp
sti
mov
jmp
xor
sub
aam
mov
jge
xchg
sbb
call
sub
fs
ror
shl
(bad)
test
pop
dec
push
daa
cmp
add
mov
mov
xchg
ss
enter
fsubr
das
das
mov
pop
xlat
pop
and
les
cmp
adc
out
pop
add
mov
pop
mov
add
lds
pop
sbb
mov
xchg
or
cld
mov
out
sbb
mov
pusha
sub
cwde
fbstp
and
cmp
out
int
jmp
repnz
popf
xchg
std
mov
push
and
arpl
sbb
cmp
pop
stc
scas
jno
test
inc
mov
fwait
mov
add
sub
xor
inc
or
jns
into
jp
icebp
xchg
sbb
fcom
ds
stc
mov
outs
sub
mov
mov
push
jb
shl
dec
repz
jne
push
addr16
icebp
daa
leave
mov
sbb
mov
add
sbb
cmp
cwde
out
jmp
callw
cli
pushf
push
lea
pop
xor
xor
sub
pshufw
test
sub
pop
popa
jp
cmc
cmp
out
into
adc
sbb
out
adc
cwde
ror
ror
aam
in
pop
push
xchg
xor
push
(bad)
mov
mov
or
int3
push
mov
xlat
movs
adc
push
mov
mov
js
leave
dec
sbb
mov
mov
in
push
pop
mov
adc
mov
fwait
mov
adc
cmp
jmp
pop
dec
jecxz
jbe
imul
push
stc
pushf
les
inc
mov
mov
adc
jae
push
xor
fisttp
cli
test
inc
imul
dec
imul
jge
cmp
mov
leave
outs
call
loopne
or
sub
pop
sbb
pushf
pop
mov
rol
mov
(bad)
jge
cmp
inc
outs
lds
mov
loopne
ja
les
lods
js
call
iret
add
jno
aad
clc
in
mul
or
push
cmp
mov
xchg
mov
loopne
out
jmp
cmc
xor
or
mov
push
adc
repnz
inc
and
fistp
pop
iret
dec
or
shr
push
xchg
rcl
stos
mov
test
xchg
pusha
mov
ins
push
xor
out
dec
dec
xchg
mov
push
dec
mov
pop
jno
xor
add
ins
js
fst
jbe
nop
cmps
xlat
dec
jle
(bad)
out
(bad)
mov
sbb
cmp
add
enter
mov
mov
mov
mov
cwde
xchg
add
push
fwait
push
pushf
into
outs
(bad)
jle
ja
mov
xchg
adc
dec
jg
in
je
test
je
lods
lds
add
and
loop
leave
retf
pop
repnz
fist
retf
dec
cmp
sub
imul
test
pop
lock
mov
xchg
xchg
popa
mov
mov
popa
je
aas
aam
cmp
movs
fnsave
cmp
dec
shr
cmp
push
mov
fisub
repnz
js
inc
out
inc
frstor
stc
scas
jecxz
sub
ja
xor
popa
pop
aaa
inc
aaa
movs
ret
cmp
add
or
mov
mov
rcl
shl
jae
jp
enter
test
jle
xchg
pop
jne
jmp
or
xor
adc
jmp
mov
scas
mov
push
cmp
push
fisttp
sbb
cdq
test
es
cmp
(bad)
push
cmc
(bad)
clc
xor
xor
push
gs
fwait
mov
mov
pop
nop
cld
out
sbb
fidiv
je
imul
lods
or
xchg
mov
repz
or
mov
ss
jnp
iret
(bad)
adc
(bad)
out
data16
pop
xchg
daa
stc
fistp
mov
or
call
push
and
xchg
stos
inc
mov
xchg
and
scas
(bad)
or
int3
loop
jns
cmp
mov
sbb
cmp
pusha
sar
mov
mov
popa
mov
fmul
mov
and
ss
ficom
hlt
jmp
retf
test
cmp
int3
lea
and
add
xlat
xor
movs
push
inc
dec
xor
add
push
mov
outs
movsx
or
movs
sub
xchg
outs
sbb
outs
out
fcmovnb
fsubr
sbb
and
cmp
call
xor
push
inc
dec
xor
mov
je
dec
cmp
es
aaa
pop
or
repnz
fmul
or
hlt
push
lea
jb
xchg
jno
xchg
jg
sub
adc
sbb
cwde
out
push
ins
loopne
fldcw
dec
sahf
sbb
hlt
xchg
je
loope
pop
mov
mov
add
loopne
movs
int
leave
add
scas
jp
push
push
sub
mov
mov
mov
adc
push
adc
rcl
cli
push
add
cmp
jp
push
sar
in
mov
rol
gs
push
push
xchg
sbb
jge
and
jle
mov
sbb
std
sub
hlt
js
push
cmp
cmc
fstp
cli
scas
pop
mov
test
mov
movs
fstp
xchg
xchg
lock
mov
test
and
cmc
jae
mov
hlt
int
xchg
push
cs
outs
jecxz
in
add
aad
(bad)
jmp
retf
fcom
lock
push
push
sbb
call
xor
out
sbb
pmulhw
mov
adc
or
push
popa
ja
pushf
push
jne
adc
das
pushf
aas
jmp
les
aad
cwde
dec
ins
add
loopne
jmp
add
(bad)
(bad)
cmp
loop
prefetchwt1
call
jl
lock
sbb
mov
add
(bad)
cmps
lea
push
mov
lds
loopne
retf
fucomp
pop
xor
pop
pmullw
dec
sub
pop
inc
mov
daa
pop
sub
(bad)
mov
mov
shl
jmp
mov
stc
dec
add
jg
push
push
dec
jnp
int3
lahf
or
pop
mul
mov
mov
mov
lds
or
dec
sahf
leave
push
(bad)
int3
dec
adc
xlat
inc
add
mov
ret
push
popa
popf
or
(bad)
mov
je
inc
jno
add
cmps
adc
jmp
xchg
in
fwait
cmp
imul
or
jle
inc
dec
push
pop
(bad)
jg
je
pop
rol
in
or
and
xchg
jge
test
je
mov
jp
jg
add
aas
mov
icebp
fst
ss
shr
int3
xchg
sahf
dec
or
in
adc
and
enter
mov
sbb
or
sbb
mov
pop
pop
cmc
mov
mov
xchg
adc
xor
in
jno
or
fisub
js
mov
push
dec
stos
pop
cmps
xchg
repnz
loop
sbb
push
arpl
jle
fisttp
mov
addr16
mov
cmp
or
inc
inc
push
rol
mov
xchg
daa
mov
sub
pusha
arpl
and
add
jae
in
out
cmp
out
int
or
ds
int3
xor
jcxz
add
arpl
outs
push
mov
cmp
fs
inc
sbb
std
push
mov
mov
sbb
in
sub
lea
or
pusha
cmps
sub
fcmovnu
movs
jg
scas
mov
lods
enter
lods
les
inc
ficomp
mov
add
in
in
xor
ins
or
mov
fmul
sar
fldcw
sub
mov
scas
(bad)
rcl
(bad)
enter
mov
or
mov
das
sbb
xor
jne
fst
call
dec
pop
sbb
jge
dec
in
ins
out
ins
mov
(bad)
mov
and
sub
cmp
and
das
pop
dec
xor
cmp
in
or
outs
push
cli
lea
iret
cmp
ret
cmps
out
or
ds
add
icebp
mov
xchg
out
outs
scas
(bad)
pop
adc
pop
fmul
ja
jmp
xchg
aad
call
mov
dec
push
sbb
sub
xlat
push
add
xor
std
in
mov
fwait
cwde
out
scas
int
xor
out
sub
mov
stos
or
sbb
sbb
or
mov
mov
test
inc
in
repz
fisttp
add
jo
ss
mov
add
inc
mov
pusha
std
lods
lock
call
push
mov
lods
pop
sub
sub
push
pop
xor
ss
aas
and
jns
mov
push
dec
mov
fnstenv
test
adc
sbb
push
push
xchg
fwait
inc
xchg
std
adc
push
repz
pop
in
aad
add
mov
and
lods
jge
fs
test
push
inc
or
out
neg
push
retf
inc
into
push
sahf
das
sbb
movs
scas
test
iret
cmp
add
int
cs
jo
push
push
aam
lock
sbb
sar
loop
pop
mov
ja
test
shl
sar
aad
pop
test
(bad)
lock
and
mov
mov
out
and
dec
inc
dec
outs
jmp
and
sub
mov
retf
sbb
cmp
std
pop
or
les
push
leave
test
lods
into
cmp
repz
fiadd
sbb
sub
bound
mov
pop
or
fwait
out
es
adc
test
xchg
icebp
sbb
adc
jge
out
xchg
or
adc
mov
dec
xor
and
and
icebp
in
push
pop
dec
add
cmps
or
add
shl
xor
mov
ja
hlt
shl
or
sbb
cmps
dec
xor
aaa
pop
not
call
dec
adc
ins
(bad)
(bad)
jnp
bound
mov
adc
sar
hlt
aaa
test
mov
mov
loope
mov
sbb
stos
(bad)
pusha
or
repnz
or
inc
push
or
ja
mov
pop
imul
test
push
test
es
ja
and
mov
outs
cdq
addr16
cmp
and
jg
pushf
fst
scas
add
dec
int
faddp
in
xchg
(bad)
cs
mov
mov
call
mov
dec
arpl
jb
arpl
loope
icebp
and
popa
mov
not
jno
adc
pop
(bad)
std
imul
sbb
in
cmp
ret
sub
push
add
mov
mov
cmc
scas
bsf
ins
(bad)
sbb
test
cdq
scas
cmps
stos
or
cwde
lea
or
mov
push
sbb
mov
in
jb
adc
stos
jl
and
sbb
sbb
dec
mov
sub
xor
or
push
pop
xchg
retf
adc
les
sbb
mov
(bad)
neg
jl
or
inc
inc
mov
mov
ss
add
shl
cmp
fst
iret
aaa
jp
popa
sbb
pop
and
jbe
enter
out
jl
mov
mov
mov
stos
fdivr
call
out
mov
clc
pop
fwait
adc
or
enter
iret
push
mov
mov
inc
jp
adc
mov
repnz
ret
pop
(bad)
or
sub
stc
push
xchg
adc
push
dec
inc
mov
sbb
sub
iret
xor
scas
aam
cmp
inc
mov
add
out
test
dec
or
outs
ins
pop
dec
leave
scas
xor
pop
(bad)
push
adc
fstp
add
mov
cmp
pushf
sbb
cmps
loope
cmp
icebp
aam
scas
fnstenv
push
cld
xlat
scas
lods
ffree
fisttp
stos
rcr
cwde
inc
test
lahf
jmp
pop
xchg
imul
mov
ret
jae
push
pop
ret
js
scas
or
ja
in
sub
in
or
je
cdq
xchg
cmovno
cmc
popa
dec
dec
clc
loopne
stc
jecxz
pusha
inc
adc
fisubr
add
leave
mov
xchg
jge
pop
or
add
cmps
rol
jg
push
in
sub
imul
out
cmp
xchg
arpl
(bad)
adc
jns
mov
es
xchg
aad
push
mov
imul
enter
ds
div
aam
(bad)
cli
int3
mov
rol
jbe
fist
stc
leave
cmps
cmp
mov
mov
not
cmp
call
cmp
adc
aam
add
xchg
out
dec
cdq
fisub
pop
or
hlt
or
and
jl
and
lds
(bad)
das
xor
lds
push
mov
sahf
add
sbb
aad
jmp
mov
movs
fidivr
repz
lds
cmp
ret
jns
pushf
cmp
shl
out
aad
add
mov
call
jle
or
and
jge
cmps
leave
or
fdiv
inc
dec
movs
icebp
dec
cmc
cwde
gs
mov
xchg
jae
inc
(bad)
clc
pusha
mul
test
jb
ds
les
movs
loope
jg
int3
cli
inc
jne
loope
mov
xchg
pop
jle
mov
inc
in
vpmadcswd
popf
lods
(bad)
push
lods
pop
sbb
lods
ss
lock
xor
retf
adc
adc
xor
je
outs
ret
mov
mov
or
jle
movs
loop
and
js
jmp
inc
sub
cmp
(bad)
jne
pop
inc
dec
or
shl
stc
mov
mov
and
mov
retf
xchg
aam
ins
dec
retf
pop
push
jge
and
cmp
(bad)
xor
mov
stos
mov
mov
aad
call
ins
(bad)
in
lods
add
sbb
jns
mov
mov
fcomp
in
mov
in
cdq
test
imul
es
imul
cmc
addr16
xchg
xchg
lds
mov
cmp
ret
loope
sub
sub
xchg
adc
in
push
iret
xor
sub
(bad)
(bad)
and
repnz
jmp
(bad)
leave
fwait
xchg
lods
lds
fild
outs
push
mov
daa
mov
std
jg
icebp
or
dec
mov
loopne
stc
fcmovnb
imul
sbb
dec
mov
pop
adc
sbb
mov
push
pop
lea
xchg
les
push
(bad)
popf
mov
sbb
inc
mov
push
sub
inc
scas
out
xchg
jno
adc
mov
sub
loop
fdiv
dec
call
dec
imul
mov
push
lahf
mov
inc
xchg
test
jl
inc
(bad)
sbb
daa
pusha
or
clc
mov
popa
sub
xchg
pusha
sbb
dec
iret
push
call
mov
jge
(bad)
popf
sub
test
pop
out
into
sbb
adc
xchg
aam
scas
push
xchg
movs
mov
hlt
dec
retf
cmp
imul
pop
(bad)
hlt
mov
inc
das
mov
neg
sub
pushf
int
jg
push
lahf
xlat
dec
(bad)
dec
or
xor
stos
movq
cmc
sbb
scas
mov
sahf
nop
jge
and
adc
sti
sti
into
mov
int3
pop
mov
lods
sbb
adc
dec
xchg
pop
push
and
jle
ss
sbb
out
in
(bad)
out
cmp
out
mov
fucomi
in
sub
aas
pusha
mov
(bad)
and
push
sub
mov
aas
push
jo
repz
mov
jecxz
pop
fwait
mov
mov
iret
xor
ret
sti
push
ret
in
pop
inc
adc
(bad)
mov
sbb
mov
(bad)
aas
leave
popf
movs
mov
shr
loope
xor
arpl
daa
adc
xor
sub
imul
adc
in
cdq
lods
lahf
sub
adc
dec
mov
frstor
repnz
xchg
cmp
mov
outs
mov
outs
fsub
ret
clc
mov
shl
xchg
cwde
arpl
sub
fcmove
out
inc
push
xchg
cld
sbb
and
mov
sub
fadd
add
push
enter
jnp
lods
push
jbe
add
jnp
shl
inc
aaa
dec
je
sti
in
dec
inc
fstp
enter
adc
iret
cdq
fwait
ror
add
ret
mul
scas
and
cmps
mov
mov
(bad)
movs
rcr
xchg
mov
pop
dec
retf
ins
jecxz
pop
xor
je
xor
imul
pop
cld
sub
dec
or
ds
inc
or
aas
pop
pop
add
cmp
mov
test
mov
data16
sbb
jmp
popa
cmp
aam
jne
inc
dec
jg
cld
add
cwde
fist
leave
adc
int
cmc
add
inc
sub
xor
dec
shl
push
push
mov
and
dec
je
ror
mov
jne
fbstp
pop
fucomi
inc
and
xor
and
and
retf
xor
rcr
xor
ret
mov
dec
add
sub
cwde
jmp
push
loope
arpl
mov
(bad)
xchg
cwde
sbb
out
arpl
adc
dec
xor
mov
(bad)
pop
fsubr
inc
sub
ds
xchg
out
jl
fidivr
add
adc
jg
cmp
leave
dec
jmp
sbb
mov
jmp
cdq
popf
retf
inc
dec
mov
cmc
pushf
lods
rol
dec
clc
int3
inc
lods
cwde
mov
adc
in
sbb
xor
into
imul
add
xchg
cwde
sahf
imul
mov
sahf
fisub
in
ds
bound
stos
sbb
cmp
mov
jb
in
cmp
xchg
rcr
imul
icebp
sahf
cmps
icebp
ja
dec
xchg
xor
push
out
dec
int3
fwait
jg
mov
cmp
lods
std
and
and
dec
mov
hlt
jo
cdq
adc
push
lea
out
and
in
pop
cs
retf
sbb
mov
or
jnp
push
jne
into
pop
mov
add
int
cmp
and
xor
inc
pop
in
mov
ret
and
inc
data16
mov
call
mov
out
mov
dec
push
sbb
mov
inc
in
retf
jmp
scas
sbb
pop
mov
cmp
push
add
mov
nop
xor
mov
rol
mov
enter
or
fcom
dec
inc
out
pop
push
xor
mov
jb
fcmovbe
fwait
mov
dec
and
mov
sbb
mov
add
fidiv
jb
test
push
pop
xor
jmp
jecxz
sub
call
(bad)
(bad)
ins
jno
pop
jae
adc
pop
popf
lds
rcl
jle
mov
push
(bad)
clc
out
xor
imul
cmp
call
lock
dec
in
xor
cmps
mov
hlt
fst
pop
ja
mov
or
sbb
jbe
retf
sar
pop
sahf
aad
push
(bad)
shl
inc
(bad)
(bad)
xchg
inc
push
aas
jp
mov
fsub
mul
and
jge
stos
cli
lea
lahf
shl
nop
or
movs
xchg
or
cmp
mov
and
xor
and
and
int3
rcl
scas
sub
or
sbb
fs
mov
cmp
lds
dec
adc
pop
mov
push
out
(bad)
xchg
inc
adc
mov
sbb
sub
arpl
loop
pop
pop
(bad)
or
aas
bts
and
sar
xchg
push
xor
lea
and
sub
dec
push
pushf
xor
icebp
pop
sahf
inc
rol
jle
pop
aam
mov
out
fnstenv
mov
pop
sub
gs
mov
jp
mov
ss
repnz
ret
pop
mov
sub
(bad)
mov
(bad)
test
daa
sub
cmp
inc
in
loop
cmp
dec
nop
cmps
cmc
jns
mov
and
fmul
loope
or
push
inc
test
arpl
pusha
into
dec
mov
add
daa
(bad)
pop
mov
dec
(bad)
rcl
ret
mov
(bad)
jmp
hlt
push
fucomi
mov
outs
popf
neg
fcmovne
aad
pop
cmp
lea
fs
jb
ret
ror
jno
mov
or
lea
daa
mov
mov
xor
push
fsub
jecxz
loope
pop
inc
sub
fwait
dec
sub
sub
add
dec
xchg
jge
lods
xchg
ins
dec
push
inc
ret
mov
das
or
popf
into
fs
ja
out
sar
and
sbb
loop
mov
scas
movs
cli
(bad)
jle
lods
sub
mov
jmp
push
xchg
test
push
push
stos
ins
dec
or
jle
out
or
movs
dec
xchg
fistp
mov
xchg
sbb
repnz
fwait
imul
push
idiv
cwde
jecxz
and
pop
movs
adc
inc
loope
aas
sub
mov
mov
dec
add
ins
push
neg
out
scas
clc
(bad)
adc
or
sub
sbb
cmps
cmp
fs
stos
ror
ror
outs
aaa
xchg
ds
jmp
test
or
fisubr
or
jp
jnp
clc
int
iret
sbb
repnz
adc
and
xchg
push
inc
ss
popa
pop
js
sbb
ror
rcr
cdq
ins
mov
loop
push
mul
dec
test
dec
and
jae
shl
into
cmp
iret
fs
fcomp
xor
adc
jns
mov
(bad)
push
sub
mov
mov
cmp
cmp
(bad)
sub
dec
cli
call
inc
xor
fst
push
add
lea
mov
mov
sti
sub
mov
in
push
aas
aaa
fsub
sub
daa
mov
mov
stos
(bad)
lock
cwde
add
pusha
sysret
mov
push
pop
shr
cmp
(bad)
retf
xor
mov
jno
ret
sub
push
pop
inc
sub
in
mov
stos
xchg
test
outs
mov
cmps
movs
or
xor
lods
fcom
mov
call
repnz
dec
jge
test
clc
rcr
add
inc
lods
in
fimul
pop
mov
scas
outs
and
ss
mov
mov
xchg
mul
pop
lahf
mov
add
addr16
repnz
adc
ss
shl
out
lea
pop
imul
sub
xchg
pushf
pop
jmp
mov
popf
push
scas
call
fadd
xchg
mov
sbb
les
xchg
imul
lods
jne
sub
gs
into
pop
stos
sub
in
push
call
test
inc
pop
test
fnstenv
loop
pop
mov
mov
mov
out
dec
inc
inc
clc
xchg
and
inc
push
xchg
cmp
in
or
push
or
jecxz
jle
loopne
cmp
(bad)
pop
aam
(bad)
sbb
pop
dec
pop
push
sub
xchg
jle
jo
into
repnz
push
clc
and
fadd
sub
xor
ss
mov
jge
cvtps2pd
popf
mov
lods
xor
ret
sbb
(bad)
cwde
loopne
retf
sbb
mov
outs
fnstsw
mov
mov
pop
xchg
mov
fbstp
lock
add
shr
and
adc
inc
jb
lods
xchg
scas
test
xor
jl
push
das
mov
fmul
imul
movs
fisubr
aaa
shl
or
popa
or
imul
movs
sbb
(bad)
fist
fs
and
aas
sar
scas
mov
ss
popf
xor
je
stos
mov
adc
mov
ror
adc
xlat
movs
dec
repnz
adc
mov
adc
sub
xchg
or
cmp
repnz
push
inc
xchg
in
into
mov
loop
(bad)
mov
les
out
ret
dec
jge
ret
inc
pop
stos
addr16
cmps
push
(bad)
iret
mov
add
inc
imul
mov
das
xchg
enter
mov
popf
adc
pop
or
mov
mov
jmp
and
(bad)
jb
movs
mov
je
inc
sub
and
mov
inc
(bad)
mov
test
scas
shl
xchg
cwde
pushf
push
push
enter
pop
push
inc
test
adc
push
in
cmp
popf
into
cmp
test
(bad)
(bad)
ja
jno
inc
pop
or
in
movs
jmp
cld
cli
ins
fcom
cmp
sahf
inc
ret
sub
in
ins
loop
or
das
mov
adc
jno
out
push
push
inc
std
(bad)
aad
push
in
popf
mov
inc
cmps
or
mov
jmp
or
pop
gs
cwde
xchg
repnz
pushf
xlat
in
sub
popa
ins
mov
mov
cdq
sbb
stc
imul
cmp
push
inc
into
mov
cmp
adc
xlat
ret
in
cmp
or
sahf
daa
jecxz
and
ins
mov
cmp
lods
mov
iret
or
sti
ins
ret
and
mov
loop
stc
sub
jno
ins
dec
mov
pop
ins
dec
aas
pop
es
cmp
sbb
pop
std
clc
xchg
hlt
push
cmp
mov
sbb
aaa
std
mov
add
jge
out
or
pop
pop
jecxz
mov
pop
sbb
mov
inc
xchg
(bad)
retf
aaa
nop
add
xor
not
and
add
ins
or
sub
in
lods
sub
gs
std
adc
addr16
fmul
(bad)
sbb
add
push
(bad)
call
int
cmp
fwait
pop
in
out
jo
add
and
fmul
inc
and
test
jge
mov
loopne
das
cmps
adc
mov
stos
rcl
call
inc
xor
hlt
test
cmps
jg
jbe
mov
popf
(bad)
clc
shl
jg
(bad)
fsubr
lea
sbb
lea
dec
movs
pop
push
push
jnp
xor
shr
in
mov
int
lea
ins
or
sbb
and
add
mov
adc
lahf
push
clc
sar
push
adc
(bad)
inc
gs
(bad)
in
ret
pop
pop
xlat
mov
push
(bad)
out
(bad)
sbb
loop
(bad)
in
jb
rcr
scas
lods
push
pop
adc
stos
or
adc
pop
daa
xchg
push
jb
inc
ins
aad
push
icebp
pop
add
adc
outs
add
mov
mov
stos
inc
daa
icebp
mov
adc
push
js
outs
pop
test
lahf
loope
lods
sub
lea
or
or
popf
lods
mov
dec
push
adc
ret
mov
push
push
ret
(bad)
dec
jp
jp
xchg
cld
pop
adc
push
out
or
(bad)
test
sahf
inc
imul
cmp
inc
dec
fsub
jmp
in
or
leave
mul
push
stos
(bad)
into
push
mov
mov
jp
imul
enter
push
fisub
repz
jmp
dec
(bad)
mov
loopne
mov
aad
jle
out
sbb
enter
imul
sub
mov
lods
outs
pusha
sub
pop
jle
mov
ficom
jmp
sbb
sahf
mov
pop
ror
and
(bad)
mul
xor
jnp
dec
pop
inc
jge
dec
push
enter
sbb
push
int
jns
push
outs
lea
out
cmp
arpl
jns
out
outs
jns
push
fisttp
xchg
cmps
imul
pusha
and
sbb
xor
xchg
dec
leave
xchg
fstp
popa
cwde
and
movs
jp
mov
(bad)
fist
(bad)
movs
and
sub
cmp
add
jbe
pusha
or
dec
outs
xor
fs
xor
sub
fcom
xchg
push
push
jg
mov
dec
mov
and
test
push
ja
arpl
dec
movs
mov
pop
cmp
xor
repnz
neg
aaa
es
jp
pop
mov
xchg
pop
out
mov
mov
sub
xor
or
or
jo
(bad)
jle
add
repnz
jb
dec
sub
mov
xor
and
loope
dec
test
add
or
(bad)
push
test
test
movs
inc
dec
jmp
hlt
push
cmp
cld
sub
and
sbb
stos
mov
retf
movs
lock
ret
out
scas
cmp
xor
mov
and
inc
sti
pop
inc
cld
iret
inc
mov
daa
ret
ss
aas
mov
xor
aaa
jmp
popf
pop
imul
lods
test
scas
cmps
test
add
push
cmps
mov
rcl
shl
lock
fucomi
mov
fs
dec
loope
add
add
imul
jns
test
cmc
mov
pop
mov
mov
call
jmp
aad
dec
inc
outs
rcr
popa
rcr
mov
sub
adc
nop
or
rcl
adc
push
leave
inc
mov
fadd
mov
test
int3
lahf
xor
cmps
xchg
dec
ret
out
sbb
int
pusha
pop
cmp
call
jg
jnp
clc
inc
inc
cdq
mov
(bad)
loop
inc
mov
das
inc
cmps
shl
cmp
pop
sar
mov
retf
sbb
cmp
hlt
out
into
out
imul
or
push
ret
hlt
inc
jb
or
xor
jecxz
inc
movs
mov
sub
dec
mov
retf
inc
add
cmp
lds
and
gs
fisttp
pop
push
pop
push
jmp
sub
mov
rcl
mov
in
mov
add
mov
(bad)
xchg
mov
xor
mov
fxtract
mov
lock
xlat
inc
ror
push
leave
mov
in
popa
ret
test
mov
cmp
push
push
and
mov
test
cmp
shl
inc
sti
inc
xor
daa
and
inc
test
(bad)
pop
or
jmp
mov
adc
adc
mov
mov
mov
xchg
sub
fs
nop
repz
jge
adc
xor
in
fwait
push
mov
and
add
pop
push
pop
push
out
fistp
scas
push
pop
icebp
sbb
xchg
and
inc
push
push
es
xchg
pop
in
fbstp
mov
out
cmp
inc
jae
stc
pop
xchg
lock
out
hlt
cs
jmp
jne
nop
push
(bad)
ja
jmp
jnp
dec
cmp
pop
jns
arpl
mov
mov
outs
(bad)
push
dec
sub
xor
push
mov
adc
add
xor
mov
imul
pop
mov
push
sahf
xchg
mov
dec
call
es
div
or
jle
dec
xchg
cmp
scas
mov
inc
sbb
retf
es
out
sbb
imul
jae
iret
retf
sbb
lea
pushf
dec
xchg
push
imul
icebp
add
mov
sti
inc
fcmovnbe
adc
out
sbb
(bad)
jle
xor
push
pop
(bad)
out
sti
adc
push
or
cmp
mov
sbb
cmp
idiv
aas
adc
es
jbe
clc
push
fbstp
sbb
inc
inc
ja
in
xchg
cmp
cmp
sub
imul
sub
sar
shr
xlat
ret
dec
(bad)
call
add
addr16
and
lea
std
sub
sub
inc
out
movs
test
mul
and
es
enter
popa
dec
mov
(bad)
mov
ja
xchg
in
ror
sbb
test
sti
sub
fimul
adc
(bad)
lock
test
retf
dec
mov
fsub
out
add
fcmovu
cdq
dec
and
scas
push
es
mov
mov
xchg
daa
inc
popf
inc
int
mov
ins
(bad)
fisubr
popf
sub
dec
loopne
in
mov
add
(bad)
std
in
mov
jo
pop
mov
pushf
dec
icebp
lea
xchg
inc
push
and
push
xlat
scas
jle
les
nop
cmp
fist
(bad)
mov
inc
in
gs
and
push
xchg
pop
add
adc
sub
outs
push
repz
and
jmp
in
jg
mov
push
pushf
fbld
jb
leave
imul
cwde
loopne
dec
leave
jmp
fnstsw
test
and
scas
jle
or
xchg
imul
into
pusha
mov
or
jae
scas
sti
xor
and
xchg
outs
pushf
xor
daa
pop
das
and
jg
(bad)
xor
aas
inc
shr
dec
outs
pop
test
hlt
push
mov
shl
sbb
push
mov
clc
popf
gs
jne
fdiv
sub
out
push
push
add
jbe
push
inc
adc
cs
xchg
into
out
pop
jno
jecxz
aad
add
sub
dec
dec
pop
(bad)
in
xlat
mov
xchg
cli
fs
mov
stos
mov
add
or
and
lds
fcom
sbb
push
(bad)
xchg
jnp
sahf
and
lea
add
enter
jns
adc
xor
test
mov
fwait
aas
int3
adc
mov
fs
add
push
pop
xchg
ror
sbb
and
push
pop
push
fsubr
adc
pop
inc
and
add
or
add
shl
iret
shl
or
call
push
inc
mov
cmps
and
out
mov
mov
inc
std
bound
jmp
sub
and
jge
sub
dec
push
cmc
test
sbb
cmp
mov
mov
mov
inc
mov
inc
leave
dec
outs
push
pop
(bad)
xor
push
sahf
xchg
pop
jge
pop
cmp
add
pop
std
dec
loop
jecxz
out
int3
loop
adc
sub
or
cdq
and
inc
xchg
push
add
dec
(bad)
jmp
loopne
fidiv
sbb
add
adc
jmp
scas
call
xor
fistp
xchg
sbb
sti
mov
and
pop
pushf
scas
data16
adc
imul
xor
iret
cmp
pop
adc
(bad)
inc
adc
ror
mov
(bad)
adc
jmp
jmp
loopne
gs
dec
mov
loope
sub
sbb
and
daa
cmc
pop
popf
cmp
div
adc
xchg
dec
(bad)
mov
jns
dec
inc
aaa
mov
xor
mov
and
clc
inc
(bad)
lahf
inc
aas
push
xchg
mov
jp
mov
cmp
fs
inc
hlt
(bad)
cmp
inc
mov
fisubr
push
cmp
lds
retf
fild
xor
xor
into
mov
pop
cmp
cmp
cmp
mov
push
mov
repz
pushf
clc
push
fst
inc
dec
ror
push
adc
xchg
inc
xchg
push
lods
pop
fstp
stos
inc
das
xor
pop
fbld
jmp
pop
jne
fwait
push
inc
retf
cmp
pop
cmp
xor
add
repz
or
xchg
dec
inc
jp
push
pop
adc
fisttp
cmp
xor
mov
jecxz
fsubr
mov
imul
int3
lods
pop
mov
mov
mov
push
(bad)
or
mov
cmp
xlat
inc
rdmsr
dec
jno
sar
mov
sub
adc
push
jb
cmp
jo
out
jnp
pop
sahf
pop
dec
push
mov
add
pop
mov
cld
and
add
int
add
adc
dec
fst
je
xchg
shr
xor
add
outs
in
push
lea
lea
pop
jbe
clc
dec
adc
aam
mov
sub
ret
cmp
enter
addr16
jb
xor
cmp
cmp
or
scas
jg
pusha
aaa
xchg
dec
mov
mov
vpsrld
mov
mov
mov
mov
in
or
cmps
in
jnp
push
mov
xchg
sub
lods
aas
in
mov
(bad)
faddp
ficom
sar
(bad)
mov
ja
pop
lock
jge
loope
psubb
loopne
mov
cs
sahf
int3
loope
add
icebp
fistp
pusha
inc
jmp
jns
sbb
in
xor
jp
and
repnz
aam
cmp
test
test
out
ins
xchg
call
jle
inc
lock
sub
out
or
repz
jno
aas
std
int3
(bad)
ret
mov
pop
mov
out
fistp
xor
(bad)
out
mov
clc
imul
sbb
jge
in
or
pop
imul
ds
xor
or
xor
(bad)
inc
pushf
xor
mov
scas
imul
ret
jg
push
cmps
bound
fild
lods
int3
jle
ins
pop
into
xchg
sub
dec
cmp
int3
jno
fsubr
add
gs
add
cmp
jmp
shr
bound
jo
xor
pop
ss
add
and
(bad)
out
daa
xchg
ficomp
retf
sub
sbb
push
into
loope
dec
push
cmp
jg
ret
rol
pop
mov
and
repnz
(bad)
movs
stos
inc
outs
xlat
jae
daa
movs
pop
mov
xor
rdmsr
xor
(bad)
sbb
clc
cs
movs
lea
ret
xor
retf
push
lods
arpl
pop
dec
push
mov
inc
in
mov
pop
loop
cmp
pop
mov
iret
jno
add
ins
pushf
cld
stc
jl
pop
push
les
call
sbb
sti
mov
inc
jno
add
mov
or
xchg
and
in
test
add
dec
sti
(bad)
mov
sti
sub
popa
push
xor
dec
out
retf
loop
loop
push
and
ins
dec
outs
lds
jae
pushf
retf
out
out
jae
enter
ins
stc
jb
inc
mov
out
lods
stc
ficomp
ds
mov
cmp
std
popa
bound
fnstsw
sub
mov
aam
retf
fsubr
cli
ds
aaa
cmp
icebp
jno
call
mov
pop
stos
dec
repnz
hlt
jmp
and
add
and
out
mov
mov
(bad)
lods
sar
pusha
mov
lods
mov
mov
scas
sbb
daa
add
mov
push
leave
xor
mov
lahf
sub
aas
out
scas
and
mov
enter
in
ins
xchg
mov
pop
push
xor
jp
hlt
pop
jle
(bad)
xor
xchg
dec
jns
cmp
jp
mov
in
sub
add
add
adc
lods
xor
sar
adc
jo
lahf
retf
cld
inc
in
and
sbb
(bad)
and
ds
add
into
movs
inc
mov
push
lahf
mov
dec
sbb
push
sub
imul
or
int3
dec
movs
xor
mov
pushf
pop
mov
stc
fs
adc
cmp
mov
sbb
repz
add
aad
cmc
rcr
sbb
imul
pusha
push
sub
xor
inc
hlt
jne
push
sbb
ret
inc
and
jmp
(bad)
call
nop
sbb
fwait
clc
dec
ror
mov
cld
lea
pop
and
stc
fmul
or
js
pop
inc
jae
mov
adc
div
add
pusha
push
iret
jp
push
movs
inc
mov
jae
dec
jmp
inc
das
(bad)
icebp
shl
lds
(bad)
sub
mov
cmp
xchg
and
sbb
or
repnz
ret
mov
sub
movs
sbb
inc
adc
jg
mov
cmp
popf
push
aam
repnz
mov
ficomp
sub
sbb
js
pop
enter
push
and
mov
fwait
dec
add
adc
push
ja
push
xchg
add
test
and
push
fiadd
sbb
mov
test
cs
popa
cmp
xlat
cmp
inc
mov
push
lahf
sub
xor
mov
inc
stos
xchg
mov
cmp
mov
xchg
dec
jl
pop
jecxz
js
gs
dec
scas
arpl
lods
int3
cpuid
jnp
ins
mov
mov
inc
jg
movs
dec
pop
adc
push
lods
pop
(bad)
jb
xchg
sub
xchg
push
add
push
sub
ds
pusha
push
sub
cmps
jbe
je
push
xchg
fs
outs
push
jmp
xor
jns
jl
enter
mov
lahf
inc
cs
mov
cmp
mov
cmp
js
out
push
leave
xchg
push
addr16
popa
add
pop
dec
and
and
mov
add
pop
lds
dec
inc
add
outs
jbe
jne
call
icebp
loopne
je
mov
and
in
dec
ret
jne
adc
dec
data16
pusha
shr
adc
or
push
jle
(bad)
sub
mov
in
jb
popf
xor
enter
lea
data16
ret
sbb
jns
jbe
jae
dec
adc
call
mov
dec
jl
(bad)
push
adc
pop
push
(bad)
out
pop
jne
sub
and
inc
clc
cmps
pop
xor
cs
xor
fdecstp
jecxz
sbb
dec
xchg
push
(bad)
jb
dec
(bad)
sub
int
aam
rcr
mov
pusha
imul
std
sbb
push
pop
mov
nop
scas
into
pop
inc
mov
sub
xchg
gs
outs
mov
sbb
jp
jg
fdiv
mov
mov
jae
out
cwde
push
adc
cmp
std
imul
xor
add
test
(bad)
mov
in
pop
cld
adc
into
mov
mov
fs
cmp
lock
adc
int3
push
pop
jns
(bad)
imul
jae
mov
adc
faddp
cdq
push
mov
nop
ror
sbb
sub
cmp
cmc
jbe
into
mov
std
mov
fdivrp
fisubr
sub
add
(bad)
jmp
jmp
or
dec
fbstp
mov
sbb
jo
mov
pop
adc
pushf
sub
outs
loope
cmp
sub
hlt
cmc
addr16
sub
jle
cli
stos
xchg
stos
xor
lahf
xchg
or
ror
stc
xchg
lea
push
xchg
scas
xchg
in
adc
add
jmp
dec
std
ret
mov
cmp
cwde
push
xchg
sub
mov
out
mov
in
test
add
js
xchg
xchg
push
lea
mov
clc
lock
cs
cmp
push
sbb
jae
sub
sub
add
sar
inc
push
pop
inc
stos
pop
sub
cmps
push
fnsave
or
cwde
retf
pop
or
shr
repnz
xlat
xor
mov
adc
or
stos
or
or
add
les
mov
jmp
gs
je
mov
pop
mov
outs
movs
jmp
jg
xor
aam
sbb
inc
sbb
inc
and
cmp
data16
imul
mov
mov
ja
sbb
xchg
xchg
jle
xchg
cmp
ret
jno
fbld
inc
out
cwde
lock
pop
dec
mov
data16
pop
sbb
cmp
js
mov
inc
mov
sti
out
mov
inc
mov
mov
mov
pop
push
jno
lea
daa
jne
push
xchg
shl
jne
sub
xchg
jg
in
aaa
jnp
adc
fs
add
in
stos
mov
and
ins
push
jbe
ins
sbb
leave
jmp
or
xor
or
fild
inc
jno
fs
addr16
inc
shl
jle
mov
(bad)
xchg
lds
les
inc
cmp
icebp
jge
jns
mov
scas
dec
test
aad
add
and
mov
nop
mov
mov
pop
mov
push
rcr
mov
push
pop
mov
ja
shr
cwde
lods
movs
jae
add
sub
(bad)
sub
int
cmp
inc
sub
xchg
inc
repnz
sub
(bad)
imul
jns
(bad)
in
retf
sub
popa
cmp
sub
scas
xchg
adc
pop
stos
cmp
mov
rcr
jp
inc
int
hlt
(bad)
repz
pop
push
js
jno
icebp
jp
xor
mov
cmp
fadd
add
cld
cmp
adc
cld
and
shr
xor
popa
dec
pushf
ds
mov
movs
inc
xadd
sar
jg
cdq
retf
mov
scas
jae
dec
ja
jp
gs
fistp
mov
push
inc
push
mov
push
test
rol
push
pop
sar
adc
push
sub
rol
push
lds
mov
jbe
mov
rcr
xor
jge
repnz
test
jno
xor
rol
(bad)
mov
jnp
repz
(bad)
and
adc
mov
jo
mov
not
loope
mov
popf
cmc
xchg
sbb
dec
sbb
out
gs
ins
pop
add
loope
repnz
ret
jnp
mov
adc
(bad)
ja
xchg
xchg
mov
xchg
cmps
pop
cmps
adc
inc
std
in
sub
sub
cmp
inc
or
sbb
stos
adc
pcmpeqd
adc
add
push
bswap
pop
fnsave
aas
stos
stos
push
and
out
add
shl
cs
sti
push
mov
imul
or
dec
int3
sub
mov
jp
adc
loopne
inc
adc
pop
hlt
fcmovu
mov
es
sbb
dec
and
xor
gs
iret
mov
jno
jo
imul
outs
jbe
xor
and
(bad)
test
jns
and
sar
jae
add
xchg
sbb
ins
push
pop
in
push
outs
inc
mov
out
hlt
jae
pop
loop
nop
aam
aam
in
out
sbb
test
push
je
mov
pop
test
das
dec
inc
dec
out
cmp
sahf
cmp
loope
mov
ja
ins
dec
into
push
repnz
repnz
fdivr
dec
or
sub
sub
and
xor
push
inc
and
sti
adc
sub
xchg
out
pop
mov
cmp
shl
add
xchg
out
sub
inc
pushf
ins
push
(bad)
scas
sub
arpl
aad
loop
adc
push
mov
aaa
je
mov
shl
je
addr16
sbb
cs
jns
test
xchg
mov
push
jns
jmpw
pop
lea
push
jg
not
push
mov
add
cmp
adc
pop
add
xchg
call
jnp
pusha
lock
stos
jbe
jmp
out
cmc
lods
xlat
pop
jno
pop
cmp
int
and
jmp
dec
(bad)
cmc
out
pop
or
aad
pop
sub
adc
leave
test
and
(bad)
and
cli
or
fiadd
outs
adc
lds
and
cli
sub
sbb
call
push
and
in
(bad)
cmp
ins
sub
mov
in
arpl
mov
mov
push
jns
push
jmp
push
cmp
in
sub
addr16
jnp
pop
rol
mov
retfw
(bad)
jle
(bad)
jge
xchg
adc
mov
shl
gs
shl
jmp
mov
xchg
xchg
cmps
adc
mov
adc
and
and
sbb
jmp
repz
adc
ret
mov
cld
daa
pop
push
cs
dec
call
retf
jns
sub
out
jmp
add
rol
cmp
sti
dec
(bad)
arpl
inc
jg
xchg
(bad)
xlat
shr
pop
sbb
sub
and
inc
sub
xchg
mov
fst
inc
adc
and
sub
stos
dec
popa
jbe
call
imul
push
or
sbb
sbb
loope
outs
(bad)
jl
lock
ins
bound
outs
scas
rol
xchg
jo
mov
sbb
mov
ss
hlt
cmp
iret
clc
iret
cli
lods
fcomp
xchg
cmps
test
movs
mov
call
sub
cdq
cmps
or
test
sbb
hlt
ror
outs
ret
cmp
adc
stos
js
nop
fbld
cmp
loope
push
fnstcw
jl
lahf
(bad)
out
call
fldcw
mov
je
frstor
or
mov
aas
call
add
and
aam
inc
mov
popf
mov
cmp
scas
retf
xchg
inc
mov
into
int
pusha
and
jno
js
ret
lahf
or
addr16
xlat
aas
and
popa
xor
shl
dec
int
icebp
ds
nop
inc
adc
js
and
dec
mov
push
xchg
xor
push
inc
adc
rol
sbb
mov
test
das
push
pushf
jae
inc
push
sti
adc
inc
lds
fbld
add
shl
xchg
add
aad
int
cld
enter
ins
ret
xor
jmp
aad
outs
sbb
stos
dec
in
and
pop
loope
ror
pusha
lods
sub
das
sub
es
inc
ret
mov
repz
jno
and
mov
hlt
lods
pop
cs
in
fcom
int3
imul
ins
mov
mov
jge
cmp
jo
std
rcl
pop
(bad)
lds
movs
sahf
jae
xor
push
into
clc
retf
push
out
lock
jmp
add
pushf
mov
int
jg
rcr
fsubr
addr16
ret
out
or
mov
and
pushf
ins
retf
ret
das
retf
std
outs
lods
sbb
cld
(bad)
and
add
loope
adc
add
jle
sub
adc
div
popf
scas
icebp
mul
dec
mov
test
mov
cmp
movsx
outs
mov
xchg
aas
add
test
mov
dec
mov
dec
div
adc
push
iret
cmp
bt
faddp
sub
add
jno
(bad)
mov
rcl
dec
jne
imul
and
aas
xor
sbb
and
add
jb
jmp
cmp
imul
jmp
dec
or
lahf
lods
push
pop
mov
mov
fldlg2
jle
dec
xchg
mov
mov
loopne
inc
xchg
mov
sbb
pop
ins
call
repz
in
gs
leave
test
mov
mov
and
ja
in
cmp
cdq
or
outs
stos
push
hlt
loopne
loopne
adc
imul
or
(bad)
cli
adc
sbb
mov
sbb
mov
test
outs
xchg
rcr
call
sbb
dec
mov
jae
mov
push
out
jbe
pop
and
adc
jno
mov
mov
in
test
cmp
xor
push
das
ret
inc
cmps
or
add
shr
in
mov
push
adc
and
sub
cmps
mov
xchg
adc
and
sub
inc
jno
push
dec
mov
adc
pop
mov
mov
sbb
xchg
inc
leave
mov
pop
push
xchg
aad
xor
ret
xchg
add
dec
adc
fild
jo
popf
jne
mov
scas
gs
mov
mov
bswap
rcl
lods
adc
jns
jp
cmp
fmul
and
sub
and
sbb
xor
mov
fisttp
in
idiv
xchg
dec
js
xchg
mov
mov
fisub
paddq
sbb
not
pop
inc
fisub
test
ins
ds
push
(bad)
out
xlat
jns
lods
stc
cdq
lahf
push
daa
iret
jecxz
adc
lods
scas
push
(bad)
fidivr
push
(bad)
out
(bad)
mov
sti
add
sbb
ins
shl
xchg
jno
imul
aam
sub
pusha
pop
xor
sbb
outs
cdq
push
loopne
adc
loopne
jns
add
pop
dec
retf
arpl
or
mov
mov
push
mov
clc
dec
shl
stos
mov
sub
inc
gs
fisubr
mov
jle
clc
lock
xlat
mov
out
xchg
cs
cld
add
mov
mov
call
and
lock
test
jmp
sbb
ret
xor
xchg
pusha
mov
or
sahf
add
enter
rcr
repnz
fwait
shl
fsubr
jb
daa
mov
test
cmp
lods
xchg
aas
test
das
mov
ds
sub
int3
sub
test
jmp
fnstcw
ret
push
aas
loop
aam
mov
mov
and
and
ficom
mov
mov
inc
mov
aad
mov
dec
out
sub
add
xor
pop
mov
jb
add
movs
push
xor
and
mov
(bad)
jne
mov
sub
test
add
scas
retf
out
fwait
loop
mov
imul
inc
dec
aas
push
jp
sbb
dec
cmp
add
xchg
mov
cmp
mov
cmc
lds
sahf
movs
sbb
mov
loopne
add
jle
mov
leave
lods
xor
push
push
je
add
ret
ds
pop
enter
scas
enter
mov
lds
mov
aam
imul
adc
sub
movs
add
scas
add
dec
popa
xor
pusha
dec
imul
xor
std
fs
div
add
cmp
ins
fchs
mov
jle
lds
mov
adc
hlt
scas
dec
outs
adc
push
lods
sti
mov
pop
cdq
dec
adc
test
call
push
icebp
stc
push
mov
push
xor
stos
stos
add
stos
(bad)
sbb
fcomp
pop
or
sub
loop
add
sbb
arpl
sub
and
out
push
mov
add
out
xchg
(bad)
adc
arpl
and
mov
lods
int
sbb
lar
out
inc
(bad)
mov
out
mov
fsubr
inc
jp
rcl
vlddqu
aam
(bad)
test
push
pop
mov
(bad)
les
add
cmps
inc
xor
jmp
add
pop
dec
stos
jmp
mov
jmp
mov
inc
enter
xchg
push
add
call
retf
mov
out
xchg
cmp
aas
js
dec
push
clc
outs
aaa
sub
movs
fadd
xor
retf
adc
jb
and
sub
enter
in
je
jmp
movs
jmp
in
add
data16
movs
fcmovbe
dec
sub
out
push
sbb
int3
mov
fbld
adc
loop
mov
xchg
popa
ficomp
daa
mov
test
movs
mov
out
ficom
push
push
mov
push
mov
imul
xchg
jle
aas
push
add
pop
pop
or
inc
and
add
jo
or
dec
pop
mov
movs
push
retf
adc
xor
sbb
aaa
test
loope
aas
mov
in
fs
ret
add
adc
aad
add
ret
pop
push
movs
adc
repnz
push
xchg
adc
cmovs
jo
and
jnp
fnstcw
es
xchg
pop
mov
loope
and
repnz
movs
ins
jo
inc
xor
jmp
cmp
inc
dec
add
out
ret
std
repz
mov
fst
pop
inc
lock
jno
xor
dec
or
call
push
in
mov
(bad)
dec
cmp
jnp
inc
lahf
sub
in
inc
sub
inc
xchg
hlt
pop
aas
or
cmp
std
sub
pop
sbb
shr
pop
mov
pop
inc
inc
fnstenv
ins
cmp
sbb
mov
fiadd
xchg
adc
dec
rol
arpl
ret
mov
add
ret
ficom
xor
sub
call
xchg
test
pusha
adc
sub
imul
push
push
lea
mov
jmp
pop
push
mov
int3
(bad)
or
push
dec
jl
int3
ds
push
add
mov
sti
xchg
dec
mov
pop
xchg
adc
pop
mov
cmp
add
cmp
and
add
and
iret
fisttp
pop
ss
pop
push
repnz
repz
ret
push
adc
and
aam
sub
xchg
les
and
in
mov
sbb
fst
push
mov
ror
mov
xor
icebp
mov
ins
ds
test
sbb
pop
xchg
mov
mov
xor
stos
cmp
sub
nop
icebp
or
cli
mov
out
push
dec
adc
adc
xchg
(bad)
or
push
mov
call
dec
in
inc
sub
leave
out
jns
sbb
and
jp
retf
pop
jns
shl
xchg
mov
repz
push
daa
xchg
sub
cs
sub
add
sub
jnp
and
lock
stc
pop
mov
sbb
xchg
repz
(bad)
sub
xchg
xchg
add
dec
lahf
lods
jbe
pop
push
cmps
mov
jmp
rcl
mov
mov
push
(bad)
dec
adc
in
xchg
mov
das
sub
or
jg
xchg
sub
xor
ffree
das
lahf
adc
jg
dec
in
jmp
inc
or
in
mov
leave
aaa
pop
xor
and
rcl
xor
clc
sub
fs
leave
or
scas
hlt
(bad)
jge
mov
or
js
add
or
mov
out
dec
add
pop
pop
mov
fwait
popa
xchg
jmp
inc
and
dec
push
push
adc
jl
out
popf
cmps
dec
cmps
pop
adc
sub
fidivr
add
int3
add
add
pop
imul
gs
cmps
mov
test
sub
aaa
test
and
or
push
fdiv
fist
pop
aaa
shl
or
dec
shl
ds
je
pop
scas
cmps
sbb
jno
xor
repnz
jecxz
xchg
pop
js
call
and
or
jl
xor
xor
cmp
daa
pop
xor
push
push
add
dec
test
bnd
dec
pop
lods
xchg
into
mov
adc
movs
mov
sahf
sub
(bad)
mov
dec
push
and
mov
sbb
jnp
pop
out
sbb
adc
dec
xor
je
xor
mov
sbb
and
pushf
xor
cli
call
and
sub
adc
jl
xor
fadd
cmps
cwde
mov
cs
sub
cmc
inc
jge
or
mov
dec
lahf
adc
or
movs
dec
jl
dec
jmp
mov
xlat
mov
(bad)
push
adc
clc
imul
inc
movs
neg
pop
mov
cs
(bad)
cs
pop
mov
dec
lea
inc
stos
enter
jbe
sbb
xor
mov
cmp
mov
mov
jno
mov
fld
cwde
ins
into
fld
mov
mov
in
aas
mov
xor
mov
add
xor
(bad)
add
in
mov
xor
hlt
or
fstp
outs
sbb
pop
mov
jns
mov
sti
mov
inc
clc
lock
std
adc
xor
ficom
or
fisub
lahf
inc
jne
inc
inc
int
jp
call
in
stos
add
(bad)
in
push
test
inc
in
sbb
gs
cmp
xchg
mov
movs
jmp
aad
mov
push
cmp
mov
dec
adc
pop
imul
(bad)
cmc
xchg
test
pop
mov
mov
adc
call
loope
ins
loopne
lahf
inc
out
pusha
cmc
mov
push
push
lods
fsub
push
xchg
or
shr
mov
jae
jae
cmp
aad
icebp
inc
pop
xor
push
xor
les
jbe
shl
js
sbb
int3
outs
dec
mov
push
xchg
jle
xor
mov
inc
test
movs
ja
sbb
sahf
cwde
daa
imul
jbe
or
add
jo
je
fist
rol
cwde
or
mov
pop
scas
jnp
push
cmps
fnsave
adc
mov
in
xchg
daa
cmps
in
adc
js
jmp
sbb
xchg
adc
sbb
movs
add
mov
scas
xchg
rol
mov
clc
je
sbb
hlt
xchg
mov
(bad)
aam
jp
push
loop
push
fnstenv
popa
popa
and
mov
jb
test
push
jae
fnsave
jns
xor
test
and
std
push
push
cmp
mov
inc
push
pushf
in
cli
(bad)
jmp
and
adc
das
push
sub
sbb
je
and
add
mov
push
pop
test
imul
dec
push
cmp
mov
push
(bad)
enter
outs
add
inc
outs
cmp
daa
imul
push
fnstsw
xchg
aaa
loopne
and
mov
mov
jmp
ins
add
stos
sbb
stos
and
jne
mov
popa
and
daa
mov
fistp
adc
sbb
push
cli
inc
hlt
cld
xor
sbb
dec
xor
and
mov
adc
cdq
push
dec
or
(bad)
(bad)
fwait
inc
dec
add
scas
out
outs
inc
movs
and
das
and
mov
mov
repz
imul
(bad)
outs
in
or
push
in
and
mov
or
cld
add
sbb
in
iret
sub
lds
push
push
jno
sub
add
shl
imul
or
shl
cmp
add
pop
cdq
sahf
add
loop
sub
jp
cmps
cs
inc
and
ficom
or
cwde
jmp
xor
pop
mov
push
clc
jns
fild
aad
jb
mov
scas
mov
push
cwde
stc
sub
and
sbb
sub
shr
push
outs
data16
mov
pop
adc
js
out
in
test
jmp
adc
rol
sar
push
push
jle
or
sbb
call
push
pop
popf
mov
neg
shr
int
enter
ins
push
xchg
ret
xchg
outs
ss
ror
mov
mov
mov
idiv
jp
xor
push
adc
add
adc
jae
fild
push
inc
add
xor
repz
fst
in
fsub
test
mov
dec
cmp
aad
aaa
mov
popf
out
sbb
mov
jl
pop
sbb
mov
dec
ins
dec
movs
adc
(bad)
loop
movs
lock
or
lock
pop
stos
aas
movs
les
fwait
and
test
or
jnp
div
ret
and
stc
stc
inc
pushf
xchg
je
mov
jns
mov
and
(bad)
mov
sbb
jne
mov
cmp
sti
aas
sub
imul
add
out
jg
mov
jp
pop
xor
adc
add
add
dec
retf
dec
or
out
(bad)
(bad)
adc
jo
(bad)
lods
rcr
dec
or
hlt
xchg
enter
xchg
and
jno
or
and
and
in
and
in
scas
cmp
test
mov
jne
xor
mov
sub
mov
cmp
rcr
aad
call
mov
lahf
test
jecxz
rcl
bound
sbb
clc
sub
mov
mov
mov
xchg
cmc
or
inc
pop
in
xor
adc
jge
mov
and
repnz
push
mov
mov
enter
mov
shl
rol
fdivr
cmp
mov
inc
fmul
je
test
bsr
xbegin
cmp
sbb
gs
lahf
push
dec
fmul
pop
(bad)
inc
loopne
int3
cmp
jecxz
clc
cmps
pop
stc
nop
jb
(bad)
jbe
xchg
fbstp
stos
imul
jp
mov
int
scas
in
sub
lods
jp
enter
int
ret
lods
jp
mov
into
sub
add
xchg
aad
in
pop
scas
mov
push
repnz
pop
retf
pushf
xchg
push
rcl
inc
aaa
idiv
and
retf
jge
test
out
adc
not
je
and
pop
pop
jbe
cwde
and
frstor
frstor
jecxz
xor
xor
cmp
dec
mov
push
sub
mov
stc
cmps
rol
cmp
retf
(bad)
in
cwde
test
repnz
imul
loope
pushf
inc
lea
retf
sub
xchg
xor
pop
mov
outs
loope
call
mov
pusha
sbb
movs
add
imul
dec
dec
cmp
dec
rcr
xchg
and
pop
psubb
iret
clc
fist
fst
and
xor
push
(bad)
sbb
popf
inc
push
ret
ins
inc
sbb
or
cmps
not
inc
jp
out
mov
push
push
add
sbb
test
jecxz
and
push
inc
std
xor
das
and
adc
enter
movs
jns
loope
dec
add
lock
and
ins
dec
pop
dec
sub
popa
pop
jl
mov
stos
xchg
icebp
fwait
sar
test
pop
ins
adc
ret
add
mov
xor
ja
push
jbe
sti
movs
xchg
cmp
push
stos
(bad)
(bad)
add
dec
xor
mov
cmp
test
lea
mov
push
pop
addr16
shl
repnz
cmp
cwde
(bad)
jae
test
pop
mov
xchg
daa
pusha
xchg
pushf
push
push
icebp
mul
js
into
pop
jo
xchg
or
adc
fldenv
mov
or
call
cmps
call
ins
mov
aaa
adc
add
dec
xchg
mov
inc
pop
jno
(bad)
mov
cmp
dec
jmp
xchg
or
mov
jns
loopne
cmp
mov
fcom
(bad)
loopne
push
lods
push
ss
cwde
retf
dec
cmps
xor
jecxz
hlt
iret
mov
mov
(bad)
stos
jb
inc
add
mov
mov
ror
pop
data16
mov
gs
jle
fld
aad
dec
push
sbb
jno
stos
push
nop
mov
jns
add
cld
pop
outs
xor
cli
push
fnstsw
test
fisttp
(bad)
(bad)
push
cli
pop
jo
mov
pusha
xlat
repz
cmp
jb
mov
aad
pop
xor
stos
aad
push
mov
addr16
sub
popa
movs
pop
sub
sub
pop
sbb
jmp
aas
std
lahf
idiv
sbb
xchg
test
push
(bad)
outs
xchg
fwait
sbb
mov
jp
repz
call
movs
pusha
das
cmps
pusha
fsubr
jb
repz
push
pop
sti
jno
push
mov
daa
(bad)
in
add
int
cli
xor
nop
inc
ss
fisub
xchg
jbe
fld
aaa
push
sub
jl
mov
loop
pushf
je
xchg
iret
jo
(bad)
call
dec
cmps
jp
ror
jl
ja
rcr
imul
or
cmp
stos
pop
fs
lods
adc
jbe
repnz
sub
jnp
sbb
mov
sar
cmp
aaa
jge
in
int3
cmp
sub
push
cmp
imul
scas
lahf
sbb
(bad)
leave
test
sar
dec
pusha
push
pop
imul
vmovlps
ds
sbb
cs
shl
ja
dec
ficom
pushf
jecxz
xchg
ror
outs
jo
fistp
push
add
outs
xchg
sbb
pop
das
(bad)
in
and
in
scas
cmps
pushf
adc
xor
loopne
nop
pop
enter
sbb
jge
cmc
mov
inc
add
lea
xchg
dec
lods
pop
mov
(bad)
mov
sbb
mov
dec
jl
loopne
mov
sbb
jmp
not
sbb
push
push
movs
aas
es
pushf
fsub
xchg
xchg
mov
outs
adc
ins
jns
push
les
jo
data16
pop
in
sub
inc
loope
es
fs
call
imul
xchg
cmp
and
ss
cmp
mov
bound
jo
jl
pop
xchg
lea
cmp
add
push
stc
pop
adc
and
retf
and
movs
bound
and
das
jmp
xor
stos
icebp
add
mov
sub
rcr
ins
repnz
iret
int
dec
push
push
cmp
sti
je
rcl
or
scas
imul
stos
push
jle
push
shr
bnd
aam
jbe
xchg
fadd
into
stos
and
mov
mov
test
mov
fiadd
mov
mov
xor
dec
pop
adc
xlat
in
icebp
fnstenv
xlat
arpl
test
sbb
sti
data16
adc
repnz
mov
enter
mov
hlt
popf
movs
adc
mov
ficomp
xchg
xor
outs
inc
jg
fisubr
inc
mov
ds
add
inc
fisubr
xchg
retf
inc
push
movs
pop
cmp
cmp
xor
mov
cld
xchg
mov
mov
lds
lahf
test
call
movs
aad
xor
mov
mov
jae
adc
and
or
in
xchg
xor
cld
and
addr16
pop
or
mov
maxps
push
loope
mov
popf
sub
and
mov
dec
jbe
sahf
mov
imul
cld
adc
rol
mov
inc
xor
rol
(bad)
jl
push
push
add
pop
fistp
adc
dec
out
shl
(bad)
aam
aas
mov
aad
xor
mov
out
mov
or
sub
push
fidiv
in
mov
in
out
add
arpl
xchg
test
jno
push
sti
rsm
add
xor
or
sti
out
(bad)
push
and
cmpxchg8b
loop
push
xor
push
or
loop
test
add
xchg
bound
adc
sub
jmp
mov
pushf
aad
dec
jecxz
outs
sub
sbb
add
push
bound
push
add
inc
test
sbb
ins
jle
dec
fs
aaa
ss
sbb
neg
jnp
lds
or
arpl
sbb
bound
mov
pop
scas
pop
sbb
and
push
push
and
push
scas
xor
and
dec
push
ds
lock
adc
imul
cli
mov
pop
es
pop
xchg
cmps
fbld
jle
jle
mov
ret
push
ins
or
sbb
sbb
push
mov
mov
out
lds
push
xchg
pop
sub
sbb
loope
in
or
dec
out
je
inc
(bad)
sub
add
lods
adc
sbb
sbb
in
push
dec
(bad)
stc
shl
push
repz
adc
enter
adc
push
inc
scas
push
cmp
in
dec
mov
add
pop
inc
add
bound
fild
pop
jbe
mov
stos
es
aad
mov
stos
xor
sub
mov
sub
out
std
pop
shl
loopne
mov
xchg
ss
push
dec
pop
sub
nop
jmp
test
cmp
stc
fucomi
lahf
sbb
xor
push
jo
popf
sar
sbb
jne
pop
push
icebp
sbb
or
daa
pusha
sub
inc
call
mov
mov
lods
pop
xchg
popa
cmc
mov
dec
bswap
add
movs
sbb
dec
aaa
or
and
lods
out
iret
jns
sbb
rep
lds
dec
add
nop
mov
gs
das
lea
push
sub
push
out
add
inc
mov
sbb
fwait
repz
mov
lock
hlt
add
add
scas
dec
test
xor
push
mov
xor
stos
sub
dec
out
cmps
mov
sbb
mov
xchg
rcl
call
daa
lods
sub
sub
gs
pop
shl
or
xor
loop
int3
add
add
cwde
push
sub
in
jmp
pop
into
int3
add
div
inc
(bad)
shr
stos
sub
movs
leave
je
hlt
mov
fstp
pusha
mov
jno
xchg
jle
push
pop
das
inc
es
adc
loope
aad
xrelease
sbb
mov
mov
or
jmp
and
ds
into
shl
cmps
aam
push
mov
jo
neg
sbb
jg
cwde
adc
xchg
mov
sbb
add
js
add
lock
jp
je
jg
retf
test
sbb
daa
popf
inc
sbb
xor
fst
mov
inc
fidiv
shr
and
mov
pop
mov
cli
cdq
xor
popf
imul
neg
adc
and
push
jae
add
repnz
jmp
add
pop
popf
adc
jb
sub
jle
(bad)
out
popf
xlat
sbb
cmc
popf
pop
cmc
mov
jmp
test
shl
vandps
fisubr
mov
and
call
jmp
sbb
pusha
stos
hlt
lahf
cmp
(bad)
sar
adc
adc
and
xchg
push
aam
inc
mov
cmps
push
enter
lahf
in
inc
clc
add
out
xor
jnp
dec
cs
les
jmp
sub
sbb
jae
mov
push
push
ficomp
loopne
pop
inc
mov
add
push
adc
cmps
outs
rol
mov
aaa
test
fidiv
mov
xor
adc
mov
cmova
jmp
xor
xchg
cmc
loope
sti
inc
test
mov
sbb
and
(bad)
mov
jbe
out
out
xor
sbb
cmp
sbb
ss
dec
mov
movs
fdiv
shl
jmp
or
int3
or
mov
cmp
hlt
inc
mov
data16
sbb
cli
outs
shl
(bad)
sub
mov
sbb
js
test
outs
mov
or
inc
mov
push
cdq
inc
outs
retf
and
icebp
lea
inc
retf
fadd
pop
test
mov
xor
mov
scas
shl
adc
imul
shr
rcr
adc
push
test
in
arpl
retf
sbb
sbb
push
and
xchg
inc
cmps
xor
test
push
ficom
jo
inc
sub
sbb
jl
imul
adc
jbe
ds
lahf
mov
ret
mov
rol
jecxz
mov
push
xchg
jmp
fidivr
cli
fcmovu
or
sub
enter
ins
repnz
or
adc
adc
fisub
fimul
jle
inc
inc
push
and
sbb
push
mov
ins
mov
in
movs
lock
dec
(bad)
pop
out
(bad)
xlat
pusha
cdq
sbb
icebp
das
into
repnz
syscall
cmp
xchg
xor
imul
aad
mov
aam
pusha
inc
and
movs
call
fimul
popf
jmp
adc
cmps
xchg
push
or
shl
repz
xchg
popf
pop
cmps
sub
pop
ins
pop
sahf
icebp
push
inc
mov
cs
xchg
cmp
mov
jns
mov
out
push
shl
push
or
cli
jmp
mov
and
or
fcomi
mov
cmp
lock
fsub
into
jp
push
mov
fldlg2
ret
(bad)
inc
xchg
jnp
scas
gs
aam
in
cmp
sbb
je
not
daa
cmp
pop
xchg
retf
and
mov
or
jl
je
cmp
pop
push
arpl
adc
mul
fidiv
shr
stos
sbb
xchg
add
lds
push
(bad)
rcl
fst
sub
jle
repnz
xchg
sbb
pop
cdq
cli
mov
sti
dec
jmp
test
push
enter
pop
sub
in
cmps
mov
fstp
movs
mov
jecxz
push
dec
and
xor
sbb
out
icebp
jecxz
icebp
shr
sub
leave
in
shl
sub
sub
bound
fisttp
pop
jp
push
cmp
xchg
repnz
mov
(bad)
in
js
sbb
adc
(bad)
xchg
retf
mov
push
in
pusha
ja
dec
stos
das
pop
pop
xchg
add
outs
aaa
jne
pop
push
xchg
jmp
fist
pushf
pop
pop
xchg
loop
add
fisttp
mov
push
cli
add
xor
xor
loopne
jg
int
jo
out
dec
test
adc
jecxz
sub
int
mov
mov
(bad)
mov
mov
push
pop
sbb
ret
fild
sub
out
fbstp
imul
sub
jnp
icebp
(bad)
jne
pop
dec
adc
(bad)
fwait
(bad)
rcl
outs
pop
mov
gs
rcr
sar
and
sbb
sbb
movs
add
leave
test
mov
mov
adc
add
jae
add
push
popf
pop
loop
data16
(bad)
loopne
shr
xor
inc
pop
adc
pop
cdq
int3
test
jo
mov
dec
push
fstp
ror
clc
pushf
sub
stc
cmps
ins
add
pop
xchg
adc
jnp
cmp
addr16
push
lock
(bad)
outs
mov
test
sbb
xlat
push
mov
cmp
xlat
mov
mov
pop
mov
or
rcl
js
push
inc
in
push
mov
xchg
(bad)
inc
mov
or
sub
fmul
push
in
fsub
push
neg
pop
xor
das
pop
adc
push
mov
test
xchg
push
jle
pop
cmps
push
jns
cmp
pop
and
sbb
sbb
xor
enter
pop
jp
arpl
inc
xchg
lock
add
loop
xor
xor
inc
pusha
sub
fcmovnu
jg
pushf
ja
jl
inc
jg
aam
cmp
mov
hlt
and
std
jle
rol
lock
cmp
mov
xor
xor
lock
xchg
movs
push
ja
aad
dec
loopne
scas
add
cmp
and
xor
jge
test
xchg
repz
cdq
sahf
inc
inc
pushf
imul
cmp
push
mov
popa
je
push
aas
cmp
mov
cmps
in
jae
inc
mov
dec
call
repz
clc
sbb
popf
pop
shl
aaa
xchg
(bad)
cli
aaa
adc
in
call
mov
and
dec
mov
jp
mov
sbb
call
dec
mov
jge
xchg
mov
jae
sar
jle
sti
push
mov
aaa
sub
dec
int
(bad)
clc
pop
mov
cmp
lds
fistp
jge
outs
xor
pop
fcomp
xchg
test
repnz
or
call
data16
xor
push
rcr
imul
inc
pop
adc
(bad)
lahf
(bad)
adc
jne
inc
sbb
(bad)
fst
fucomp
cmp
loop
pop
arpl
jp
fcomp
jbe
fcmovnu
pop
fs
mov
(bad)
out
adc
xor
out
nop
out
fs
rcr
inc
dec
push
arpl
jo
jmp
scas
mov
leave
sbb
cmp
mul
sub
add
mov
ins
cmp
rcr
mov
andnps
mov
push
mov
or
jnp
out
lds
sti
fs
mov
mov
dec
pop
mov
sbb
mov
sbb
mov
fcomp
in
gs
xor
popa
push
and
fs
jecxz
stos
aas
jns
mov
out
arpl
add
cmp
mov
enter
lea
daa
mov
lods
xlat
sbb
or
outs
sti
mov
aam
mov
out
jge
mov
push
inc
pop
xor
inc
dec
idiv
mov
pop
push
pop
jge
call
jb
inc
(bad)
loop
clc
popf
mov
bnd
sbb
nop
cli
inc
enter
out
xchg
xchg
sub
dec
pop
dec
lods
call
repnz
sbb
pop
fsub
stos
pop
scas
jp
adc
ret
adc
ja
scas
adc
or
addr16
jp
ret
add
rol
ffree
inc
out
(bad)
dec
lods
lods
dec
cdq
xchg
retf
pop
imul
pop
jge
cld
xchg
dec
or
add
inc
jnp
pop
mov
shl
in
sbb
dec
(bad)
jge
repnz
jp
cli
and
std
pop
fwait
shl
mov
or
mov
sub
lods
push
shr
popa
mov
pop
repnz
sub
sti
xlat
xor
loope
push
sbb
dec
or
scas
leave
(bad)
adc
add
js
sti
sub
ror
cmp
out
mov
add
or
sub
mov
sub
cmp
cdq
fdiv
adc
pop
mov
stc
sub
cmps
ins
outs
adc
cmp
lock
ins
jne
xchg
mov
jae
or
mov
data16
fcomp
sbb
push
mov
dec
mov
shl
inc
add
mov
xor
xchg
push
xchg
into
fwait
lahf
or
iret
(bad)
(bad)
mov
and
rol
sbb
inc
adc
cli
aaa
fadd
ss
fstp
pop
mov
push
xchg
xor
push
xor
movntps
jg
add
idiv
jl
cmp
dec
(bad)
mov
xchg
ret
xor
out
das
lea
psrlq
je
frstor
xor
retf
jne
pusha
cmp
mov
or
cmps
rcl
mov
pushf
cmp
jecxz
cmp
out
scas
mov
or
jns
imul
ss
lods
pop
mov
retf
adc
lock
mov
pop
je
mov
xchg
push
sub
push
jb
movs
shr
or
mov
shr
or
shl
sbb
popf
jl
mov
push
lods
add
push
movs
sti
ret
jp
ret
mov
lods
(bad)
cmc
in
jp
add
inc
push
dec
jae
enter
movs
inc
sub
xchg
inc
add
je
icebp
push
push
and
mov
sub
mov
jo
mov
scas
cmp
rol
outs
sub
adc
clc
mov
pop
shl
outs
(bad)
rcr
dec
popf
pop
test
scas
xchg
jbe
xor
int
mov
dec
lock
cmp
popf
inc
test
ins
xchg
ins
add
dec
ds
jmp
retf
icebp
inc
push
fldcw
les
mov
popa
pop
mov
xchg
push
movs
js
jl
push
(bad)
pop
iret
jg
xchg
mov
leave
fs
int
daa
gs
repz
sar
pop
stos
xchg
mov
shr
movlhps
cmp
sar
or
push
std
in
fst
jo
dec
ret
in
outs
imul
rol
pop
retf
lea
iretw
jmp
and
not
xor
js
cld
sub
cmps
push
mov
inc
scas
sub
xor
pushf
ja
mov
scas
cld
jne
mov
mov
and
jnp
rcl
pop
je
or
mov
cwde
or
pop
inc
jmp
pop
sub
xor
dec
aas
pop
inc
ror
in
cmp
jb
add
and
outs
inc
push
cwde
cmp
(bad)
fld
sub
stc
sub
cmp
jb
add
pushf
imul
movs
mov
push
xor
mov
or
jmp
lods
sbb
jo
fld
sbb
jg
loop
pop
popa
(bad)
xchg
xchg
arpl
stos
bound
(bad)
cmps
push
mov
popf
retf
pusha
out
mov
or
inc
xchg
cld
pop
bound
cmp
push
out
jge
pop
int3
adc
lea
sbb
pusha
lock
outs
pop
and
adc
idiv
icebp
fstp
adc
mov
ds
outs
push
and
mov
inc
cmp
xor
mov
jl
ret
shl
sbb
xchg
and
test
(bad)
imul
pop
out
mov
aas
loope
and
sar
(bad)
sar
sub
stc
sar
inc
xchg
imul
mov
test
adc
mov
xor
push
mov
sbb
shl
sti
daa
jle
nop
or
mov
push
in
jp
movs
(bad)
int3
adc
jg
ss
add
out
xchg
aaa
dec
std
inc
xor
imul
jno
cmp
retf
rol
out
dec
pop
lea
pusha
inc
jg
add
xchg
imul
jb
scas
pop
pop
ds
pushf
inc
lock
adc
mov
rcl
dec
ds
add
fwait
ret
sub
out
xchg
fs
xchg
movs
pop
imul
xor
loope
movs
imul
inc
push
mov
pop
sub
sub
frstor
cmp
popa
lods
daa
mov
clc
xchg
shl
xchg
mov
xor
add
es
mov
je
lods
ss
stc
sub
xor
inc
std
xchg
mov
data16
lahf
mov
xor
cmps
jecxz
mov
arpl
dec
nop
and
xor
or
xor
adc
pop
xchg
test
jbe
stos
in
mov
pushf
push
out
push
out
out
int3
iret
xchg
fwait
sbb
add
pop
cmps
jmp
mov
push
pop
sub
cmp
mov
imul
lock
mov
lods
add
sbb
xchg
out
inc
into
mov
out
aas
test
rcl
sar
dec
(bad)
int3
jl
push
sub
mov
iret
dec
in
xchg
int
xchg
(bad)
div
ins
enter
inc
mov
fmul
mov
fisubr
xchg
(bad)
retf
idiv
sub
fxch
or
xchg
cmp
outs
dec
es
dec
not
mov
int3
ret
or
mov
lods
ins
rcl
lahf
dec
dec
mov
loop
dec
sub
jl
jl
and
mov
push
repz
loopne
mov
add
(bad)
push
inc
mov
jno
cs
call
movs
push
sbb
dec
cmp
jnp
cmp
adc
addr16
and
push
shl
mov
fwait
lahf
out
ror
jns
xchg
sahf
cdq
ss
out
jecxz
dec
lock
fwait
cmp
out
in
test
mov
xor
mov
jecxz
add
repz
pusha
adc
mov
stc
pop
pop
scas
cmc
mov
mov
jmp
sahf
push
stos
js
jge
jg
fiadd
cmps
fimul
out
xchg
inc
test
outs
iret
daa
mov
jbe
out
aad
sar
dec
popf
aad
xchg
inc
pop
mov
test
in
sbb
xlat
scas
in
sti
pushf
in
aas
or
in
cwde
xchg
retf
push
xlat
ja
inc
cwde
fadd
cmp
xchg
adc
stos
inc
or
sbb
mov
jae
jb
std
mov
push
fneni(8087
xchg
sbb
inc
cwde
les
jnp
mov
ins
push
aaa
inc
repnz
pop
mov
ret
in
nop
shl
mov
call
leave
mov
push
or
into
enter
rcr
ror
jp
pop
push
mov
inc
jno
mov
xor
jl
add
mov
xor
in
rcr
mov
cwde
loope
push
test
es
fcom
adc
and
(bad)
push
push
out
out
retf
jg
in
bound
and
push
loopne
dec
inc
ficomp
arpl
rcl
into
jno
into
iret
in
jecxz
xchg
aaa
int
cs
jne
push
movs
pop
retf
push
mov
lods
push
jmp
sbb
movs
sub
adc
push
fisttp
popa
push
mov
(bad)
adc
adc
push
add
gs
shl
retf
adc
xor
mov
and
and
ss
push
push
ret
ss
and
xchg
xchg
inc
dec
retf
dec
mov
shl
ss
push
aad
pop
ins
and
mov
frstor
fsubr
pop
mov
mov
pusha
or
loope
iret
dec
(bad)
push
ja
frstor
push
jns
aas
mov
xchg
dec
jmp
mov
shl
jo
jle
clc
imul
sbb
sahf
(bad)
or
nop
mov
int
pushf
inc
adc
mov
mov
cmp
lods
call
pop
and
loop
inc
or
lea
jns
xchg
(bad)
add
ficom
test
inc
retf
pop
(bad)
sbb
adc
mov
rcr
xor
inc
pop
das
pop
idiv
or
ror
clc
fcom
lods
mov
sbb
fcmovnbe
ja
pop
je
ds
popa
inc
pushf
sub
xchg
call
xor
ffree
push
into
pusha
push
sub
add
addr16
cmp
fadd
jg
std
pop
mov
cs
sar
sti
popf
cmp
sub
or
fsubr
scas
adc
aas
dec
mov
pop
jbe
or
push
repz
jmp
clc
sub
xchg
stc
adc
nop
pop
ds
in
cdq
in
jo
inc
push
aam
sub
fiadd
adc
call
addr16
xor
jne
or
sub
(bad)
push
cmp
das
movs
cli
mov
daa
mov
inc
mov
xchg
fsubr
and
movs
cmps
out
jb
or
lock
jl
pop
sub
das
push
xchg
sti
xor
int3
push
nop
retf
push
ds
or
mov
sub
sar
jmp
cmp
jnp
mov
mov
add
xchg
add
push
mov
push
pop
call
fwait
dec
sbb
and
fild
lods
ds
xor
fwait
pop
push
in
adc
pop
adc
ror
dec
mov
fdiv
inc
fs
nop
fisttp
push
pop
lds
pop
pavgb
inc
and
jae
in
sub
in
loop
jp
cs
(bad)
ret
les
aam
sub
pop
iret
les
movs
lds
sub
cli
mov
lea
mov
xor
hlt
push
push
pop
out
sbb
ss
stos
mov
out
jmp
jb
sbb
stos
push
mov
sbb
add
dec
jge
loopne
dec
xor
jg
sub
out
add
inc
in
mov
shl
cmp
pop
add
inc
loopne
test
xor
cmp
mov
cld
sub
mov
(bad)
jae
(bad)
fs
adc
div
stos
mov
dec
push
or
push
pop
mov
pop
aas
inc
(bad)
jle
xor
pop
push
gs
xchg
jo
popa
sub
(bad)
adc
pop
push
cmc
xlat
mov
push
imul
mov
jmp
(bad)
test
mov
jge
std
adc
js
mov
shl
mov
ret
cs
enter
arpl
sahf
call
jecxz
sbb
sub
mov
aas
add
aam
sbb
or
push
call
out
mov
lock
cmp
xor
cld
xchg
xchg
sar
cmp
pop
pop
adc
cld
in
dec
xor
push
pop
adc
xor
pop
inc
movs
in
sub
push
dec
add
adc
xchg
mov
enter
in
and
mov
push
cli
cmc
xchg
aam
mov
xor
loope
loop
test
dec
sub
dec
push
sub
clc
imul
adc
rol
outs
add
ror
ret
shl
mov
mov
or
jp
outs
cmp
mov
in
fnstcw
cmp
dec
lea
cli
inc
repnz
stos
mov
dec
(bad)
loopne
cli
ins
div
ret
jl
retf
mov
movs
lahf
mov
stos
push
repz
inc
int
ins
clc
ror
mov
cvtps2pd
loopne
sbb
dec
mov
jno
mov
xor
hlt
sbb
je
in
lods
mov
pop
rol
movs
pop
addr16
and
add
jl
nop
push
mov
loop
imul
pop
popf
push
loope
jo
cmps
popf
aam
mov
fstp
ins
in
push
test
jecxz
add
add
clc
inc
pop
push
pop
push
xchg
cs
rep
xchg
scas
dec
xchg
mov
dec
shr
jle
pop
cmp
cmp
sub
fiadd
in
xchg
jae
lods
fcomp
cmp
jp
leave
loopne
into
inc
jge
cmp
push
sub
das
scas
pop
popa
mov
mov
jo
push
mov
or
out
mov
scas
out
adc
or
mov
scas
lods
cmp
mov
jo
movs
addr16
mov
or
repnz
mov
(bad)
xor
adc
aad
jns
inc
inc
int3
std
mov
pop
movs
into
scas
into
or
iret
int
dec
or
cdq
loop
imul
xchg
sbb
xor
add
fwait
xor
clc
adc
fwait
icebp
imul
out
pusha
push
fwait
xchg
daa
add
repnz
jmp
inc
pop
sti
repz
scas
add
pop
outs
cmp
push
bound
or
and
movs
ins
cmp
into
inc
inc
mov
jle
push
or
enter
adc
stc
out
adc
retf
adc
fmul
mov
inc
add
xchg
pusha
xor
pop
xchg
mov
add
gs
or
les
sbb
jnp
test
adc
frstor
les
inc
out
xchg
dec
aam
fcmove
in
mov
cmp
dec
rol
imul
cmp
pop
dec
ficomp
jecxz
sub
loopne
mov
cmps
add
out
imul
adc
mov
pop
xchg
retf
pop
add
jns
repz
(bad)
outs
jno
fmul
pusha
retf
jnp
hlt
daa
pop
test
inc
hlt
mov
jno
(bad)
pop
jmp
retf
dec
dec
jnp
and
xchg
loope
and
js
inc
jecxz
and
pop
adc
push
adc
call
dec
in
dec
cmp
push
push
(bad)
es
sub
(bad)
rep
dec
push
or
adc
push
ins
sub
stos
aaa
pop
mov
call
push
retf
mov
xlat
mov
call
mov
and
and
bnd
ds
jmp
sub
pop
fstp
bound
inc
fcom
and
int3
and
sub
cmp
in
cld
mov
scas
push
test
cmp
and
lods
aad
lods
call
mov
push
(bad)
jno
stc
out
and
sub
(bad)
stos
push
mov
rol
retf
int3
xchg
mov
fidiv
dec
jae
je
dec
inc
cmp
xor
shl
pushf
cmc
adc
and
dec
push
xor
push
(bad)
jmp
inc
jae
and
mov
mov
jnp
ins
cmp
mov
cmp
std
(bad)
xchg
push
hlt
outs
cwde
shl
bound
mov
jmp
ins
cs
sahf
ret
out
sbb
pop
or
pop
ficom
sbb
lds
inc
imul
push
and
mov
loope
out
in
in
mov
xor
push
sub
xor
and
xchg
sbb
loope
fisttp
in
imul
ins
cld
sbb
jb
hlt
loope
shl
xor
adc
push
icebp
xlat
cmp
xor
ja
mov
mov
mov
aaa
sub
and
(bad)
clc
cmp
fild
mov
push
and
dec
pop
or
ret
jns
push
jnp
aas
fist
push
aad
xchg
xchg
leave
nop
ja
mov
jle
in
cli
(bad)
push
xchg
stos
arpl
mov
pop
aad
shl
loop
jg
popf
xchg
adc
sbb
push
push
push
ins
mov
into
cwde
sub
sbb
sub
rcl
add
cmp
shl
fwait
jp
fmul
xor
push
inc
pop
sub
and
mov
ss
xor
lock
call
ret
je
pop
sub
push
adc
xchg
ins
cwde
xor
mov
scas
daa
cmp
outs
xchg
int
cmps
daa
or
repnz
and
jo
and
xor
dec
mov
jle
lods
pusha
jge
sub
aad
test
fst
xchg
adc
dec
iret
mov
aad
enter
push
xor
fdiv
and
lea
pop
sbb
lds
popf
movs
rcl
popf
bound
mov
mov
mov
aad
mov
cmc
inc
sbb
(bad)
in
jmp
push
loopne
lds
push
pop
aad
repz
test
adc
xor
mov
fsub
fld
cs
adc
xchg
xchg
fld
xlat
or
leave
push
push
stos
sbb
int
in
jmp
mov
fcmovb
push
std
mov
sahf
cmp
dec
data16
mov
xchg
inc
xor
retf
push
push
jle
jge
and
jmp
and
or
cmp
pop
outs
push
pusha
icebp
or
cmps
adc
jno
lahf
sub
arpl
movs
fst
leave
test
adc
jl
jmp
mov
ins
test
sahf
mov
fsubr
retf
sar
jae
cmp
neg
and
shl
into
imul
add
mov
and
enter
call
gs
cmp
inc
mov
sbb
sbb
xchg
add
cmp
js
mov
mov
push
jnp
(bad)
(bad)
stos
ja
cmp
xor
cmp
cmps
ins
out
inc
mov
call
push
in
mov
fcomp
rcl
or
loop
jne
push
ror
inc
lods
sub
dec
das
xor
ins
mov
sub
pop
dec
popa
mov
xor
push
out
cmp
push
xor
cmp
dec
xchg
adc
cld
out
mov
dec
addr16
lea
(bad)
mov
pop
pop
loop
dec
icebp
or
out
imul
stc
sub
lods
pop
mov
sub
sbb
mov
test
cmp
jp
mov
adc
icebp
imul
lahf
dec
push
daa
mov
ror
cmps
add
add
test
push
jmp
push
cwde
push
scas
jle
fld
aad
ja
in
leave
mov
mov
inc
xor
outs
fwait
sbb
pop
inc
push
daa
inc
ds
(bad)
cmp
mov
xor
rcr
bound
(bad)
mov
shl
repnz
dec
or
add
adc
addr16
add
pop
pop
loopne
(bad)
lock
sahf
mov
cmp
push
in
ss
fcomi
les
push
(bad)
call
xor
pusha
shl
push
inc
out
lock
adc
dec
push
add
adc
jg
adc
fsubr
pop
sbb
or
jb
adc
in
arpl
aad
scas
mov
loop
mov
mov
int3
in
adc
jo
push
adc
xor
das
add
xor
mov
dec
lds
jae
push
pushf
leave
pop
pop
cld
sbb
mov
mov
jbe
cmp
push
xchg
outs
fwait
mov
mov
and
sub
lea
rcl
lahf
dec
push
stos
sub
inc
inc
inc
daa
mov
scas
in
and
(bad)
mov
inc
dec
sti
shl
cwde
jg
add
cdq
lahf
outs
out
cld
or
sub
pop
xor
punpckhbw
or
xchg
ficomp
xor
inc
mov
xchg
xor
(bad)
add
pop
adc
fistp
mov
cmps
push
sub
fisubr
fist
mov
and
dec
call
sbb
lea
push
test
mov
xchg
push
inc
repnz
push
sub
stc
popf
out
pop
stos
sub
ret
xchg
sbb
adc
dec
repz
mov
fdiv
push
mov
mov
xchg
sub
cli
add
mov
jne
idiv
add
push
push
dec
and
repnz
int3
repnz
test
(bad)
xor
nop
popa
out
sar
in
sub
adc
ins
into
push
sahf
shl
inc
xchg
or
fld
mov
scas
stos
fs
jp
add
imul
je
and
add
outs
sub
sbb
ja
and
xchg
mov
repz
push
into
cdq
sub
das
inc
outs
int
and
and
pusha
outs
mov
inc
addr16
in
or
adc
xlat
jo
pop
jnp
or
mov
pop
shl
push
loope
adc
sbb
std
adc
add
pop
and
inc
stos
fwait
lea
sahf
and
jecxz
das
mov
ds
dec
push
add
mov
push
or
cmp
retf
sub
xchg
mov
and
and
daa
(bad)
mov
jp
pop
cdq
jb
or
fldcw
ja
pop
adc
cmp
mov
inc
into
outs
xchg
mov
push
out
js
xchg
jle
scas
fcomp
arpl
sbb
mov
sbb
das
rdpmc
cdq
push
pop
add
pop
jg
ror
adc
mov
lock
sub
mov
loopne
stc
mov
xchg
mov
adc
or
addr16
mov
push
mov
sub
or
adc
(bad)
repnz
mov
mov
int
(bad)
ds
or
xchg
aaa
push
add
out
test
mov
push
ja
ins
cmp
pop
out
jo
mov
into
or
imul
xchg
ins
mov
jle
icebp
mov
call
or
pop
ss
clc
outs
not
mov
(bad)
or
jns
jl
in
mov
xchg
adc
pop
sysexit
sub
xchg
sti
mov
or
push
imul
mov
jle
outs
iret
sub
fiadd
xlat
mov
mov
xchg
enter
(bad)
cmp
and
mov
loopne
imul
test
sbb
mov
fwait
dec
loope
mov
sbb
mov
aad
push
mov
out
hlt
popa
mov
pop
out
call
(bad)
adc
jge
mov
fstp
or
mov
sbb
push
je
test
xor
jg
add
adc
loopne
jl
xor
in
sub
pop
jbe
sbb
aas
mov
repnz
test
or
jmp
add
test
dec
sub
jge
out
push
push
enter
jg
pop
add
sub
cmps
push
sbb
out
test
mov
cli
sub
sub
mov
rcl
jae
hlt
rcl
sub
cld
mov
into
mov
loopne
fcomp
mov
dec
arpl
xor
push
xchg
fsubrp
pop
or
jl
mov
cwde
or
jno
and
pop
sbb
lahf
std
std
cmp
je
jbe
sub
data16
cld
je
add
mov
mov
hlt
cmp
inc
loopne
pusha
out
out
xor
mov
cmps
loop
fist
(bad)
adc
jns
sub
mov
ss
not
mov
ret
jne
lods
mov
xlat
gs
inc
stos
sub
out
dec
cmp
sbb
jle
scas
dec
icebp
test
fs
ds
stc
adc
sbb
mov
mov
xchg
mov
and
repnz
out
mov
push
(bad)
xlat
push
adc
lods
pop
fs
and
and
(bad)
sahf
add
and
shl
jno
xchg
cmp
push
mov
ja
mov
mov
cmp
xor
aad
lods
mov
push
jmp
inc
int3
push
lods
or
repz
loopne
ds
sti
cmp
aam
fist
mov
sub
sbb
mov
retf
ret
push
gs
jp
jp
ss
sti
in
aam
sbb
ja
push
in
cld
add
call
(bad)
fadd
or
sbb
push
in
or
imul
jb
lock
pop
xchg
cdq
jl
fwait
(bad)
loope
mov
push
test
ss
ror
sbb
and
jmp
push
test
int
adc
push
cs
add
push
scas
int
int3
jecxz
lods
mov
stos
in
pushf
mov
or
jno
inc
xlat
mov
sub
xchg
add
shl
ror
(bad)
pop
cmps
push
out
shr
mov
fnsave
ds
aaa
cmp
cmp
stos
fwait
sub
dec
out
mov
mov
mov
in
cmp
xor
mov
jne
ins
lea
cmps
push
push
mov
sub
imul
or
sbb
add
pop
(bad)
enter
xchg
xor
(bad)
push
lock
mov
mov
es
push
push
popf
(bad)
dec
mov
jge
lods
retf
lds
or
mov
scas
sub
test
sub
adc
mov
fadd
sti
es
hlt
into
jp
xchg
adc
sar
inc
je
mov
pop
popf
lds
pop
clc
(bad)
xchg
stos
icebp
push
repz
(bad)
icebp
daa
adc
enter
push
jbe
cmp
fbld
push
ds
and
test
push
test
pop
jmp
jg
ins
psrld
and
ss
hlt
out
cld
and
jle
inc
popf
add
retf
cmp
retf
cli
sbb
cmps
aad
push
int3
in
push
add
pop
fiadd
das
pop
mov
jns
adc
jnp
out
(bad)
xlat
rcr
or
xchg
aam
push
jbe
addr16
cld
aam
inc
adc
jmp
cmp
ficom
mov
test
mov
xor
jmp
xor
cmp
nop
icebp
adc
out
push
test
push
dec
push
pop
popf
cs
sub
aad
and
xor
scas
lock
push
push
dec
push
and
dec
stc
and
call
stos
mov
cmps
js
sar
clc
pop
and
aas
pusha
and
xchg
mov
pop
push
int3
imul
xlat
jb
retf
daa
jg
mov
xchg
(bad)
sbb
jge
dec
ret
lds
dec
jmp
mov
jecxz
ja
or
scas
xchg
ins
(bad)
lods
xchg
stc
pushf
xchg
xchg
xchg
sub
jno
xchg
mov
inc
loop
bnd
inc
repz
sbb
push
rcr
shl
out
cmp
mov
(bad)
add
out
cmc
out
cli
into
cmc
cmp
push
add
mov
sbb
in
fst
mov
ss
adc
in
loope
xor
(bad)
outs
sbb
loope
sti
outs
loope
cmps
xor
out
jns
mov
sub
xor
and
mov
push
enter
pop
mov
push
movs
leave
js
mov
loope
loop
out
int
ficomp
mov
or
or
dec
stc
ja
and
not
xchg
clc
adc
aaa
fwait
shl
xchg
and
clc
push
sub
outs
pop
call
sbb
xor
jbe
shl
mov
daa
loop
out
mov
mov
mov
inc
jae
popa
inc
gs
lods
inc
mov
addr16
cmp
cmps
clc
dec
jmp
xor
shl
bound
call
jmp
icebp
push
test
xchg
xchg
push
scas
xor
mov
rcl
mov
out
mov
mov
adc
mov
mov
pusha
pop
stos
xchg
or
sub
adc
mov
aad
and
xchg
cs
js
sti
gs
test
mov
adc
cmp
js
lds
and
enter
inc
std
ja
mov
fild
dec
mov
cmps
mov
mov
push
imul
mov
xor
xchg
pop
call
xchg
mov
sbb
push
in
fs
imul
add
cmp
in
int
jno
xchg
inc
inc
mov
cmp
shr
inc
dec
(bad)
pop
sub
mov
jecxz
enter
icebp
and
mov
data16
jecxz
dec
jge
add
mov
push
jge
stos
sub
cmp
pop
out
and
bound
xchg
movs
pop
adc
fadd
push
mov
adc
imul
dec
dec
sbb
mov
shl
sbb
gs
(bad)
cmps
sub
xor
or
xchg
mov
sbb
sbb
jmp
les
dec
movlps
dec
movs
sti
ss
adc
xlat
fnstenv
xor
out
aam
jl
lods
out
aam
fdivr
cmp
js
pop
hlt
mov
lods
xchg
fbstp
jl
jnp
aaa
ret
or
or
arpl
sub
mov
rol
xchg
into
movs
pop
lds
push
je
ror
add
or
cli
cmp
sbb
(bad)
scas
xchg
(bad)
out
int3
push
dec
out
inc
push
loopne
(bad)
iret
inc
mov
mov
in
push
dec
inc
cli
cmps
mov
(bad)
ss
mov
dec
mov
outs
aam
in
mov
sub
cmps
pop
lods
push
lea
nop
mov
xchg
lock
pop
test
mov
movs
mov
push
mov
stos
xchg
mov
jl
(bad)
test
fucomp
mov
adc
repz
scas
cdq
push
sbb
out
sti
(bad)
retf
pop
or
loopne
(bad)
pop
ret
hlt
test
fdiv
repz
mov
mov
dec
sbb
leave
mov
sub
popa
les
les
movs
pop
cmp
jae
loop
daa
int3
outs
outs
jae
stos
pop
fcmovb
aas
cmc
stos
pop
lock
icebp
dec
sar
mov
pop
scas
cmp
imul
jge
ret
out
jno
inc
in
dec
call
mov
cs
aas
fs
cmp
sahf
jb
push
mov
fsub
mov
call
push
test
cmc
fisub
cmp
call
xchg
call
cmps
pop
and
mov
movs
sub
ret
test
test
pop
dec
out
inc
dec
sub
sub
jno
aas
sub
rol
sbb
ins
xor
mov
data16
cmc
jnp
mov
mov
add
jne
jb
inc
inc
idiv
cmp
or
inc
movs
fmul
inc
cmp
outs
icebp
test
xor
rol
and
std
or
cmp
test
xchg
jge
and
mov
clc
jns
sub
pushf
call
inc
enter
push
xchg
and
mov
arpl
cmp
(bad)
adc
mov
mov
mov
ds
mov
mov
push
adc
pop
jb
test
out
add
retf
dec
mov
add
jge
sub
rcl
out
arpl
push
jp
hlt
or
jne
push
fdivp
xor
cmp
out
sbb
ffreep
aaa
pop
pop
lds
or
adc
cmp
pop
ret
push
outs
sbb
sbb
cmp
add
lods
or
fistp
out
ins
sbb
loopne
sbb
popa
je
leave
push
into
pop
dec
push
xchg
ja
loope
jnp
mov
(bad)
enter
sub
les
cmps
inc
sub
hlt
outs
sub
pop
lods
ds
and
std
cwde
imul
dec
and
add
cmc
push
fwait
clc
mov
dec
add
movs
std
jg
mov
xchg
pop
jne
sub
mov
cli
push
push
push
adc
sub
sub
fadd
push
jnp
or
adc
imul
push
repz
mov
(bad)
mov
mov
dec
(bad)
mov
sti
pop
sub
std
jg
jle
cmp
jmp
data16
xor
cmps
jo
and
dec
jno
cld
push
or
mov
push
movs
mov
js
rol
inc
gs
jmp
sbb
sar
mov
addr16
mov
dec
or
pop
data16
jge
(bad)
sbb
mov
xchg
or
dec
ds
xchg
mov
pop
ret
mov
cmps
test
ss
or
or
retf
sbb
pusha
jle
je
adc
or
out
leave
mov
inc
cli
or
sub
imul
cmps
mov
sub
(bad)
sub
cmp
daa
clc
int
push
cld
scas
and
out
mov
aam
push
cmp
hlt
push
push
dec
lods
sbb
dec
mov
cmp
mov
sbb
dec
cmps
push
(bad)
mov
in
jne
sub
pushf
pop
hlt
pop
ins
cmc
mov
cmp
and
sbb
jg
sahf
mov
out
lods
fwait
fwait
add
push
pop
arpl
lods
mov
push
call
or
fisttp
jne
sbb
cs
or
movs
je
shl
pop
into
movs
jl
ffree
jmp
inc
mov
push
push
jmp
jb
mov
test
or
icebp
fwait
adc
sbb
aad
shr
std
out
xor
test
fiadd
test
pop
cmp
mov
sbb
aad
cmp
mov
xor
imul
ins
push
out
push
xchg
imul
pop
xchg
cmp
inc
or
das
ret
or
scas
xchg
(bad)
mov
adc
mov
and
mov
in
add
sbb
(bad)
dec
jp
mov
sbb
jb
bnd
outs
inc
and
pop
xor
gs
fcmovu
inc
or
cld
outs
adc
cwde
cwde
mov
dec
and
dec
adc
jle
jmp
loopne
leave
out
enter
push
mov
popa
jne
adc
jecxz
pop
push
sbb
mov
pop
dec
and
xor
(bad)
out
mov
add
xchg
ss
cmp
imul
add
dec
sub
in
inc
lahf
dec
clc
mov
pop
xor
or
div
add
or
mov
shl
adc
cli
(bad)
fisub
mov
sbb
leave
lahf
fst
or
enter
scas
div
mov
repz
jne
jmp
ror
shr
push
cmc
adc
clc
into
out
in
or
stc
push
xor
ja
sbb
das
jmp
leave
push
shl
adc
in
mov
fisub
cmps
mov
sbb
add
add
test
dec
xor
hlt
fwait
pop
std
xor
xor
jge
ins
aas
or
mov
mov
push
movs
add
cli
fs
mov
add
and
fcom
in
pop
dec
sbb
ins
mov
sub
xchg
sbb
add
mov
shl
scas
jle
in
and
add
pop
add
jae
dec
xchg
mov
push
mov
mov
and
(bad)
leave
sysret
scas
loopne
xchg
lea
inc
inc
adc
into
movs
(bad)
or
fnstcw
rcl
jne
push
pop
ins
imul
mov
pop
rcr
cld
sub
idiv
cdq
xor
jge
pop
les
mov
popf
jmp
cmp
fsub
or
mov
pop
ret
push
(bad)
xchg
mov
loope
dec
dec
aaa
stc
jb
inc
xor
sbb
xchg
push
clc
add
ins
fs
push
ins
inc
test
or
add
jb
pop
sub
cmps
js
lods
fisubr
dec
cdq
adc
cmp
pop
leave
test
mov
xchg
icebp
mov
xchg
test
fidiv
leave
fs
mov
jmp
push
push
add
jb
clc
shr
mov
rcl
xchg
adc
jecxz
and
push
mov
std
xchg
mov
mov
int3
inc
push
mov
jle
dec
fsubr
add
mov
std
pop
cmp
je
jle
pusha
inc
inc
out
imul
dec
fisubr
into
test
adc
sub
xchg
cmc
xchg
outs
and
inc
frstor
out
jl
mov
mov
popf
push
shl
lahf
mov
mov
xchg
std
mov
in
ja
aam
jle
call
inc
rol
shl
addr16
pop
mov
mov
mov
cld
(bad)
clc
xchg
cmp
dec
jl
popa
in
test
dec
(bad)
sub
mov
(bad)
cwde
sbb
dec
ffreep
push
push
push
cmp
cdq
rep
imul
xor
sub
push
sub
shl
out
aas
and
sbb
or
pop
jle
lea
arpl
and
aam
loopne
pop
cmp
lods
lods
cs
xchg
fld
xlat
addr16
fnstcw
addr16
es
mov
es
pop
mov
cmps
xchg
push
cwde
stos
jecxz
loopne
mov
dec
push
mov
(bad)
xchg
xlat
mov
lds
ret
mov
ss
iret
fiadd
les
mov
push
enter
mov
out
mov
lea
mov
adc
push
xchg
ss
mov
and
mov
cli
dec
movs
xchg
jns
pushf
xor
xchg
out
mov
popa
push
and
or
sbb
or
fdivr
pop
or
sbb
pop
adc
mov
ins
dec
loopne
jbe
sti
fisub
dec
inc
fs
rcr
outs
inc
push
les
enter
mov
fprem1
lods
xor
addr16
(bad)
std
push
je
sar
icebp
call
out
retf
pop
enter
cs
dec
jo
cmp
mov
cdq
ins
outs
mov
lods
in
and
hlt
and
ret
sbb
push
rcl
aad
sahf
ret
call
adc
cmp
retf
adc
mov
xchg
lods
arpl
inc
ror
mov
bswap
push
and
aas
in
cmp
aad
sbb
(bad)
pop
lea
test
push
push
xchg
test
cld
and
inc
pushf
sub
dec
repz
out
or
(bad)
cs
and
xchg
mov
xchg
in
enter
adc
push
adc
sahf
and
dec
mov
lods
cmps
mov
push
cld
mov
retf
out
lahf
mov
popf
push
adc
adc
mov
jp
mul
mov
int3
(bad)
mov
mov
mov
adc
add
push
dec
les
jecxz
call
sbb
clc
sbb
ss
sar
js
retf
mov
mov
and
or
pop
(bad)
iret
dec
in
cmc
mov
push
cld
cmp
push
pop
outs
bound
xor
arpl
sub
sub
fidivr
out
in
jne
dec
mov
sbb
fs
ror
mov
je
pop
xor
loope
idiv
xchg
xchg
push
in
outs
ja
mov
loop
inc
in
cdq
push
iret
rcl
cdq
imul
or
mov
mov
and
fmul
lock
lods
cwde
mov
std
sbb
(bad)
clc
arpl
ins
xchg
jle
je
fild
mov
push
sbb
out
xchg
pcmpgtw
sub
pop
lods
(bad)
jle
add
add
in
cwde
mov
mov
adc
sub
mov
dec
mov
xchg
fld
mov
lds
pusha
or
push
sbb
sub
adc
test
ud2
and
mov
push
bound
or
push
idiv
or
mov
cmp
or
mov
sti
sub
(bad)
jg
stos
fstp
in
loope
in
pop
add
mov
mov
scas
and
and
(bad)
hlt
jne
faddp
es
jmp
mov
out
iret
mov
cmp
mov
jl
add
cmp
fs
cmp
aad
or
dec
sub
cdq
jmp
jbe
test
lock
icebp
sbb
repnz
xor
mov
out
aas
sub
ss
icebp
sub
aam
cli
inc
rcr
pop
cmps
push
sub
or
retf
rcl
mov
xchg
mov
icebp
add
xor
vmovaps
or
movs
loop
inc
rcr
jecxz
aad
into
cs
popf
int3
rol
retf
outs
xchg
mov
sub
lahf
retf
dec
cmp
add
xchg
or
xchg
adc
imul
sbb
and
dec
aaa
test
mov
pop
or
jbe
popf
sbb
mov
pop
aad
jl
les
int
(bad)
shufps
(bad)
fisttp
adc
xchg
xchg
lock
hlt
pop
mov
adc
fwait
add
lods
jp
(bad)
repz
les
pop
jp
mov
mov
jae
(bad)
iret
mov
inc
cmp
int
clc
std
adc
and
das
cmp
cmp
int3
xchg
cmp
retf
fld
pop
cmc
pusha
inc
into
xor
imul
mov
add
mov
in
aas
mov
cmp
or
shr
cmp
fcmovbe
inc
cwde
jp
adc
push
shl
js
cld
into
in
(bad)
sub
dec
mov
loope
dec
test
rol
inc
push
adc
into
mov
or
xlat
dec
fisttp
jecxz
add
xchg
and
sub
dec
scas
xlat
mov
aaa
push
jbe
int
popf
mov
repnz
mov
pop
xchg
movs
inc
dec
nop
mov
ret
mov
in
stc
xor
dec
nop
hlt
iret
dec
into
push
movs
idiv
push
xor
fsubr
mov
fadd
(bad)
cmp
call
jecxz
rcr
shl
int3
mov
add
jecxz
mov
inc
add
cmp
rcl
adc
psubd
sbb
inc
and
xor
pop
mov
cmp
add
lds
jns
pop
add
sbb
pop
fmul
add
or
or
or
and
pop
dec
arpl
mov
cmp
dec
outs
in
adc
xchg
rol
popa
lahf
int
(bad)
sbb
push
push
sub
cmp
sub
mov
sub
aas
mov
ret
test
repz
mov
int
pusha
lds
mov
sar
sbb
cmc
xchg
mov
jmp
mov
stos
lods
sbb
push
pop
or
pop
(bad)
xor
popf
mov
mov
pop
inc
pop
imul
int
sbb
test
xchg
ins
pop
xor
add
nop
ja
add
fsub
sub
xchg
adc
ja
sub
lods
into
call
pop
jge
sar
out
mov
push
jle
inc
mov
dec
icebp
(bad)
cli
jne
jo
outs
test
push
pop
push
sbb
inc
stc
cmp
pop
loopne
mov
bound
mov
mov
in
retf
xchg
ret
cmp
mov
fisub
push
icebp
out
repz
jnp
jo
enter
lea
push
push
jb
stos
and
pop
push
push
mov
sub
shr
sub
inc
sbb
fs
cmc
cld
loop
cwde
mov
adc
cwde
jne
loop
call
call
mov
xor
sar
xor
mov
add
addr16
jo
sub
lods
movs
pop
sbb
pop
mov
mov
cli
ins
inc
dec
fst
aam
xchg
loop
xchg
cmc
mov
cmp
out
mov
rcr
imul
pusha
mov
xchg
into
pop
aas
std
dec
call
xchg
add
and
fcom
ret
pop
dec
dec
mov
jecxz
les
adc
mov
mov
mov
into
enter
inc
mov
mov
push
pop
sbb
movs
xchg
out
or
xor
and
and
or
clc
pop
scas
scas
xchg
and
add
shr
test
push
and
adc
sub
and
sbb
iret
pop
fisttp
xchg
mov
adc
or
test
mov
sahf
arpl
(bad)
retf
lds
cld
enter
arpl
and
dec
xlat
lock
mov
cmps
lea
xchg
dec
call
jae
adc
mov
dec
or
or
mov
and
pushf
jge
add
das
or
stc
mov
cmc
shl
setl
inc
sahf
sar
dec
mov
cmps
pop
popa
mov
sub
sar
pop
out
sub
xlat
data16
ja
neg
jecxz
add
and
dec
cwde
retf
popf
pop
and
popf
movs
add
call
jmp
into
sar
sbb
adc
jbe
dec
and
add
faddp
mov
sub
and
mov
lds
cld
shl
sub
jecxz
and
mov
rol
adc
jmp
and
stos
scas
ret
into
push
aaa
sub
es
push
cmp
gs
jecxz
jno
or
cmc
jne
lds
pop
push
out
fwait
arpl
jo
dec
xchg
mov
scas
les
mov
or
loopne
arpl
and
test
enter
mov
jle
aad
jmp
cmp
xor
repnz
push
pushf
mov
inc
jns
pop
jg
sar
aam
movs
or
hlt
add
lahf
xor
outs
(bad)
sbb
push
mov
adc
pusha
out
pusha
(bad)
ja
pop
mov
icebp
push
and
adc
xchg
push
push
jmp
ins
imul
pop
enter
push
jmp
adc
inc
fisttp
dec
ss
xor
pop
mov
(bad)
pop
sbb
je
movs
int3
jmp
sub
pop
sbb
cmp
aas
popa
aad
stos
stc
sbb
adc
jmp
push
jecxz
retf
and
pop
stc
sbb
pop
out
inc
and
loop
add
mov
(bad)
(bad)
adc
jmp
sub
test
mov
movs
call
mov
xchg
fs
push
fcom
xor
cmp
ins
lock
add
mov
push
aaa
neg
cmp
or
pop
jne
push
adc
ret
mov
pop
les
mov
int
ret
aas
movs
dec
shl
or
sbb
mul
dec
ja
(bad)
call
sub
add
adc
push
rcl
loop
das
jae
loop
data16
xchg
inc
mov
push
add
clc
jb
push
test
lods
ret
jmp
cs
mov
xchg
retf
fsub
ins
js
jg
and
call
dec
push
inc
sti
or
jle
dec
(bad)
stc
shl
add
inc
xchg
pop
inc
outs
mov
mov
mov
cld
mov
cmp
cmp
push
test
scas
out
or
and
fsubr
mov
fisub
lods
fisubr
ss
(bad)
fcom
rol
(bad)
push
lea
sub
sahf
test
push
mov
pop
add
dec
popf
push
mov
dec
dec
dec
ss
jp
lods
test
mov
jge
or
sbb
data16
mov
adc
std
jg
loop
lock
or
aaa
pop
or
and
je
push
cmp
add
sbb
cmp
test
popf
stc
inc
push
jmp
and
jb
loop
movs
(bad)
ror
xchg
pop
jo
sti
jl
std
push
ror
cmp
jnp
mov
test
or
retf
pusha
test
int
repnz
adc
sub
mov
(bad)
stc
ins
popf
mov
mov
int
pop
xor
imul
inc
sbb
leave
enter
clc
mov
movs
and
push
cmp
mov
add
dec
or
adc
add
dec
in
mov
int3
fwait
mov
ret
cli
adc
aas
out
imul
jb
jmp
jo
mov
jb
cdq
leave
daa
and
pop
std
fs
pop
das
out
shr
pop
inc
std
add
jp
xor
imul
loop
cmps
cmp
jnp
ins
rcl
loopne
data16
sub
xor
stc
loop
in
mov
xchg
ret
aas
or
das
out
sbb
and
adc
mov
mov
clc
push
ficomp
fisttp
imul
and
out
pop
retf
outs
inc
mov
addr16
dec
addr16
pusha
loop
push
(bad)
push
lods
pop
sahf
js
sub
lds
mov
pop
xchg
and
movs
dec
fistp
sahf
popf
inc
pop
loop
out
enter
popf
retf
sub
ds
pop
out
sbb
test
add
call
add
jbe
sahf
xchg
in
mov
xchg
repz
les
ins
mov
and
mov
xchg
pop
aas
int
(bad)
arpl
sbb
pop
xor
pop
retf
ins
pop
jl
test
push
sbb
js
mov
int3
fbld
or
push
or
or
mov
test
outs
dec
les
inc
mov
push
addr16
sub
cmp
adc
push
dec
mov
inc
inc
clc
pop
xchg
test
mov
push
xchg
adc
adc
adc
cdq
mov
pop
add
movs
popf
mov
in
stc
jbe
inc
inc
cwde
add
pop
loopne
(bad)
dec
imul
push
jmp
sub
ins
fwait
in
mov
imul
and
leave
int
stc
and
das
ret
test
sti
mov
mov
jne
sub
lods
out
mov
pop
inc
ins
add
push
xchg
imul
(bad)
out
ficomp
dec
mov
mov
add
fild
xchg
retf
push
rcr
dec
push
mov
or
mov
sub
mov
loopne
aam
pop
fisubr
(bad)
push
fisttp
div
fnstcw
mov
repz
fidivr
adc
mov
push
xchg
mov
adc
inc
mov
pop
fimul
int3
mov
mov
push
outs
cmp
das
es
xchg
mov
xchg
es
push
push
bound
pop
leave
(bad)
sub
div
sbb
in
inc
ss
cwde
ret
int
dec
cmp
in
popf
lods
into
(bad)
repnz
sahf
xchg
out
jb
imul
dec
sbb
sbb
mov
inc
test
out
jne
nop
stos
movs
mul
sbb
inc
test
not
xchg
mov
sub
dec
sbb
stc
les
add
push
loope
imul
jb
cmp
lods
mov
dec
addr16
das
les
fiadd
jae
cdq
out
nop
and
sbb
add
loope
(bad)
jnp
pop
jmp
add
sub
push
cmp
imul
arpl
ret
xor
pushf
stos
mov
jno
cmp
sbb
xor
ror
push
dec
cmps
or
xchg
dec
xchg
loopne
out
jmp
jnp
loop
cmp
bound
in
leave
in
nop
ss
test
in
stos
inc
(bad)
(bad)
shl
cmp
rcl
mov
test
call
jp
ficomp
scas
(bad)
mov
into
xchg
fimul
and
rcpps
test
inc
jl
pop
inc
cmp
ja
test
cmp
pop
and
popa
lea
dec
xor
xchg
pop
movs
cmp
fistp
out
xchg
jo
sbb
fcom
call
jbe
in
and
push
push
and
xchg
pushf
mov
sahf
inc
push
jno
xchg
mov
ret
(bad)
hlt
sbb
popf
dec
scas
add
(bad)
rcl
cmps
push
jge
add
leave
frstor
mul
jl
and
jns
ins
rol
sti
pop
push
scas
fsubr
(bad)
dec
out
mov
addr16
mov
push
mov
retf
out
xchg
xor
imul
lea
fwait
mov
shr
fcmovnb
sbb
push
jns
outs
sub
scas
mov
push
sub
scas
call
std
xor
sub
push
hlt
test
lea
lods
fdivr
into
sbb
ror
adc
and
jne
scas
mov
push
sub
aaa
cwde
sub
hlt
int3
push
std
mov
ins
or
inc
cwde
xlat
lahf
mov
adc
cmp
in
pop
in
fisubr
cmp
(bad)
(bad)
repnz
mov
dec
mov
mov
push
jmp
jne
out
xlat
sbb
nop
mov
adc
adc
mov
dec
movs
mov
push
push
or
js
call
jbe
mov
or
pop
add
mov
sub
popf
and
adc
daa
repz
popa
mov
int
mov
mov
xor
lock
movs
jne
mov
pop
xchg
arpl
movs
retf
out
ja
sub
jb
fsubr
loope
mov
mov
mov
in
cmp
fs
cs
inc
outs
add
mov
inc
in
mov
jne
inc
addr16
call
addr16
inc
cmp
shl
xchg
retf
imul
(bad)
out
mov
inc
inc
pop
rol
out
int3
adc
fs
push
dec
loopne
sti
mov
pop
movs
idiv
xchg
lock
cmc
sub
xchg
jns
and
cdq
imul
dec
xor
mov
or
mov
lods
(bad)
shl
xor
(bad)
out
add
add
mov
adc
add
cmps
mov
mov
neg
push
push
push
xor
out
rol
pushf
jl
ins
sar
std
pop
xor
aam
imul
adc
push
and
push
call
mov
fwait
aam
xor
outs
mov
mov
add
xchg
dec
xchg
sbb
mov
test
push
or
aam
and
cmp
not
dec
in
out
fxtract
push
dec
cmp
retf
cs
lock
fisttp
mov
sbb
retf
scas
lahf
mov
dec
xchg
out
fisttp
iret
and
jo
sbb
inc
adc
dec
sbb
xchg
adc
add
pop
leave
mov
daa
or
jl
mov
jns
xor
jns
push
jle
retf
mov
and
imul
pop
sub
push
out
push
cdq
mov
jnp
addr16
pop
mov
ins
(bad)
and
imul
mov
jecxz
fdivr
cmps
icebp
aaa
icebp
jnp
stc
mov
aas
(bad)
(bad)
loope
push
xchg
icebp
arpl
mov
jns
jbe
fcmovnbe
pop
adc
xor
adc
lods
hlt
push
test
xor
outs
add
xchg
dec
call
jbe
and
pop
mov
pop
cmp
jmp
les
add
jbe
mov
adc
mov
mov
lock
push
lods
inc
sbb
ja
or
pop
mov
or
cmp
adc
fsub
les
fbld
daa
(bad)
lock
das
jmp
inc
and
sbb
mov
cmp
(bad)
lock
enter
sbb
xchg
(bad)
repz
fs
loop
cmps
mov
jle
mov
daa
test
jne
mov
jle
mov
sahf
jb
out
inc
fst
scas
imul
sahf
xor
xchg
jb
cmps
shr
adc
pop
cmp
cli
lods
iret
(bad)
xlat
(bad)
sub
or
in
mov
inc
mov
aad
sbb
test
movs
(bad)
mov
and
sub
sub
jge
(bad)
pop
mov
not
mov
(bad)
pop
inc
test
imul
jb
mov
xor
fnstcw
dec
pop
es
mov
call
mov
add
sti
xlat
out
cmp
jne
movs
xchg
mov
inc
mov
adc
test
int3
dec
pop
push
sub
movs
(bad)
or
sub
jg
pop
pushf
in
adc
push
out
dec
mov
sub
jl
and
dec
inc
lea
shr
dec
mov
jb
popa
ret
xchg
retf
int
stc
adc
jmp
mov
mov
stos
lock
inc
add
add
rcl
cmp
push
fsubrp
and
mov
sbb
mov
xor
dec
sbb
cwde
mov
jnp
push
movhps
add
int
pushf
sub
test
cmc
add
xchg
retf
shr
push
jmp
js
mov
dec
daa
jne
sbb
test
jbe
mov
mov
leave
pop
loop
test
arpl
ret
(bad)
(bad)
fistp
ins
push
and
out
neg
(bad)
pop
call
inc
push
sbb
and
icebp
lock
std
mov
pop
shl
jp
mov
and
lods
jb
jl
imul
fwait
push
pop
pusha
inc
imul
sub
mov
lock
add
inc
test
fwait
aam
sar
fs
jae
push
or
and
cli
adc
add
mov
pminub
dec
ret
rcr
mov
inc
bound
lods
lods
ins
lea
xchg
test
mov
fild
and
pop
sbb
clc
(bad)
fnstsw
xchg
mov
ss
stos
movhps
daa
adc
mov
aam
jns
int
push
outs
sbb
(bad)
mov
push
mov
cmp
cmps
shl
lea
xlat
dec
ror
and
or
in
sahf
popf
cmc
movaps
je
push
xchg
mov
dec
idiv
ret
inc
sub
imul
lods
xchg
push
dec
int
bswap
test
jns
dec
lods
dec
push
daa
pop
fild
pusha
loope
cmp
shl
push
jmp
dec
pop
jecxz
xchg
dec
inc
xchg
lahf
inc
cmp
push
sahf
mov
mov
cmps
mov
clc
pushf
mov
cmps
push
cli
fwait
stos
jno
shl
repnz
xchg
test
sbb
gs
mov
mov
pop
lock
outs
stc
cmc
add
cwde
sbb
add
adc
cld
pusha
retf
loope
stos
je
les
mov
lods
dec
and
int3
in
popf
xchg
dec
sub
mov
jecxz
pop
pop
loope
test
mov
pushf
xchg
cmp
mov
mov
push
outs
cmps
std
in
dec
add
cmp
mov
pop
pop
(bad)
cmc
jne
fwait
je
adc
xor
outs
mov
mov
jl
pop
xor
pop
bound
sub
icebp
add
mov
xchg
ins
leave
dec
popf
lea
add
jecxz
iret
mov
mov
test
in
push
mov
dec
leave
mov
das
out
pop
inc
and
sbb
pop
std
pop
mov
sub
and
add
clc
jmp
cmp
lods
jae
data16
jno
adc
rcr
cmp
jecxz
or
shl
lods
sub
bound
pop
mov
pop
sbb
or
jb
outs
es
data16
jmp
cmp
xor
lods
out
inc
sbb
xchg
push
add
loopne
push
mov
clc
fbstp
lods
add
or
ret
ins
sbb
aad
adc
adc
xchg
pop
jno
lds
add
mov
int3
idiv
out
out
imul
dec
shr
aad
hlt
aad
aam
dec
test
popf
ins
dec
jmp
loope
iret
aas
pop
fstp
jno
xor
test
test
pusha
push
cdq
out
cdq
les
into
cli
adc
int3
inc
js
pop
pop
xchg
stc
repnz
mov
out
xchg
xor
sbb
mov
pop
adc
xor
fnstcw
mov
fisub
nop
retf
shr
mov
lahf
sbb
pop
lahf
xchg
out
pop
pop
mov
std
or
add
mov
pop
fild
pushf
cld
mov
jecxz
push
add
sahf
mov
loopne
lds
dec
push
ja
out
call
ja
pop
outs
(bad)
outs
add
xchg
lock
cmp
sti
sbb
mov
shl
add
lock
and
add
div
test
(bad)
jmp
xor
mov
and
mov
loop
xchg
mov
sbb
and
cmp
in
sbb
cld
xchg
xchg
pusha
mov
dec
test
jp
or
fistp
and
add
mov
fadd
aas
push
lahf
rol
cmps
sbb
push
push
mov
push
pop
in
je
cdq
sub
fisub
test
or
and
sbb
fdivp
fadd
inc
lods
leave
fist
pop
ins
(bad)
(bad)
sbb
(bad)
xchg
ror
mov
cdq
outs
addr16
adc
and
ins
push
push
enter
dec
cli
inc
ins
dec
js
dec
bound
pop
jp
pop
aaa
repnz
pop
ret
push
mov
jge
jbe
movs
popf
mov
sbb
stos
jmp
pop
push
out
jns
mov
push
inc
call
test
(bad)
test
jmp
jmp
pop
clc
ret
dec
int
xchg
xor
cmp
sub
dec
adc
out
jo
mov
sbb
adc
bound
push
in
retf
mov
cdq
aaa
arpl
or
adc
or
add
cmp
test
cmps
(bad)
and
and
or
mov
mov
push
cmps
ror
or
mov
icebp
mov
or
mov
push
dec
sub
arpl
outs
(bad)
mov
movs
sbb
retf
bound
cmp
test
push
dec
iret
sub
and
clc
test
cdq
mov
fs
outs
pop
and
in
rcr
add
movs
adc
rcl
cwde
ret
xchg
mov
das
int
fwait
push
push
loop
mov
cmp
mov
fdivp
jl
xor
pop
fstp
es
xchg
or
add
shl
push
sar
jmp
aas
int
(bad)
int
or
out
adc
mov
rol
cmps
mov
in
cmp
mov
pop
xchg
sbb
adc
mul
add
jb
loop
popf
inc
repz
call
mov
or
add
les
push
inc
mov
(bad)
adc
sub
ds
cmc
fstp
mov
int
xor
mov
stos
xchg
ins
pop
cvtdq2ps
dec
jl
mov
stos
and
and
mov
scas
(bad)
mov
popw
adc
xchg
and
xor
sahf
ja
push
mov
cmps
xchg
das
(bad)
fadd
popf
mov
pusha
or
bound
xchg
cmp
cmp
jns
fld
pop
add
mov
cmp
out
ja
sbb
mov
jmp
ret
leave
loopne
pop
mov
ds
imul
call
dec
push
jne
push
dec
jecxz
nop
inc
cmp
cmc
mov
in
inc
pop
xor
adc
sub
jmp
or
inc
dec
push
mov
dec
popa
jae
nop
add
(bad)
push
(bad)
sbb
pop
jmp
jl
aad
add
dec
iret
or
jo
mov
fsub
pop
sahf
(bad)
mov
test
jecxz
cmp
in
jne
jnp
jne
mov
jecxz
add
movs
xor
sub
sub
inc
pop
ss
mov
mov
sar
int3
pop
push
(bad)
int
(bad)
push
mov
dec
imul
stos
es
and
jge
fsub
jecxz
cbw
and
mov
xor
jp
mov
sbb
push
scas
hlt
mov
shl
xchg
or
jmp
(bad)
gs
pop
aam
maxps
jne
xchg
pop
test
popf
ins
xor
mov
movs
outs
mov
adc
loop
out
or
test
loope
pop
or
xchg
and
mov
ja
call
sbb
test
loopne
jnp
jne
fsubr
and
xor
lods
fldcw
lea
aaa
dec
adc
adc
(bad)
or
sbb
or
push
jecxz
xchg
aam
sbb
cmps
fist
mov
cmp
pushf
or
sub
xchg
pop
xchg
aaa
jge
sar
add
cmp
fcmovb
fcom
jae
mov
in
inc
sbb
(bad)
pop
loopne
push
lods
sbb
imul
adc
push
sub
rcr
(bad)
test
push
retf
adc
jbe
stc
fcom
mov
movs
arpl
and
and
popa
fsubr
js
cmp
jmp
add
mov
scas
push
pop
(bad)
into
into
inc
popa
jecxz
cmc
jo
shl
icebp
mov
addr16
push
ds
or
or
cmp
jno
(bad)
mov
add
mov
xchg
scas
int3
jg
out
dec
test
add
dec
mov
xchg
int
mov
jnp
rol
stos
(bad)
mov
imul
sti
adc
push
pop
scas
imul
cmp
jmp
mov
dec
lods
ja
movs
inc
dec
in
mov
not
dec
pop
and
call
and
repz
push
in
add
inc
jae
dec
mov
mov
fistp
nop
mov
in
mov
aam
or
jl
jns
mov
push
cdq
jo
ja
add
cmp
mov
adc
inc
mov
mov
mov
mov
and
or
and
stos
outs
ins
or
jnp
das
(bad)
cmp
push
ds
jge
add
dec
or
add
arpl
ret
dec
mov
fwait
clc
outs
dec
push
push
dec
sub
dec
pop
mov
adc
mov
ret
xchg
ret
test
xchg
data16
ret
mov
fist
inc
add
js
aas
adc
pusha
cwde
sub
loope
(bad)
sub
add
dec
sub
outs
add
inc
jg
cdq
out
ss
test
dec
sub
push
aad
scas
dec
sub
xlat
add
out
cmps
mov
and
mov
mov
hlt
sahf
jmp
and
adc
mov
lea
cmp
xchg
xchg
fisttp
leave
outs
or
push
push
lahf
cmp
and
and
retf
inc
loop
fist
push
inc
mov
mov
add
push
jmp
(bad)
sbb
ret
fiadd
mov
sbb
xchg
sub
pushf
xchg
xchg
mov
ins
pop
push
push
stos
sub
xchg
retf
xor
ss
scas
lds
inc
outs
inc
jno
mov
test
cmps
shl
mov
bound
call
call
sub
xor
and
mov
or
sbb
arpl
icebp
(bad)
dec
xlat
jns
add
push
je
adc
jmp
pop
or
sbb
cmp
icebp
mov
mov
mov
mov
pop
pop
into
iret
loop
lods
lods
punpckhwd
jcxz
clc
cmp
inc
push
loope
cdq
loope
arpl
fs
mov
pop
inc
ja
les
stos
mov
mov
push
in
inc
fcmovne
cmp
ret
dec
int3
pop
int
imul
test
mov
test
movs
jle
add
inc
inc
xor
rcl
retf
jns
and
std
jno
mov
xor
push
shl
jmp
(bad)
cli
cmp
stos
push
cmp
mov
mov
push
pop
push
and
(bad)
mov
pop
mov
lds
xchg
mov
movs
xlat
xor
out
mov
aam
sbb
cmp
(bad)
push
jg
pop
mov
pop
fst
or
dec
out
aad
mov
out
test
push
jecxz
neg
mov
mul
xor
std
out
and
dec
popa
mov
ror
daa
iret
fwait
popa
push
lea
ins
pushf
fist
jmp
iret
sub
inc
add
aaa
fwait
jne
cmp
add
or
outs
(bad)
ins
dec
pushf
fisttp
repz
mov
fidivr
aam
pop
mov
push
or
dec
pop
push
mov
mov
ja
jo
sti
addr16
call
lahf
bound
pop
push
jg
cmp
and
dec
arpl
ja
clc
lock
dec
jb
in
xchg
(bad)
imul
out
popa
movs
inc
lock
in
mov
push
jno
cld
mov
dec
pop
inc
cwde
and
enter
xchg
jge
outs
pop
arpl
aaa
mov
mov
mov
das
pop
adc
test
and
add
pop
ss
pop
mov
jmp
stc
cmp
and
movs
add
adc
popa
mov
shr
sub
jmp
inc
fild
and
add
jmp
pop
or
mov
and
xchg
es
hlt
mov
jge
sub
push
stos
(bad)
fadd
inc
xor
xchg
dec
dec
ffreep
adc
inc
shl
xchg
sbb
popa
mov
sbb
arpl
xchg
jmp
mov
(bad)
lods
ss
lods
dec
cmp
pop
push
xor
mov
mov
add
push
pop
push
mov
fisub
inc
mov
inc
iret
xlat
jl
xor
imul
or
mov
adc
std
into
sub
xchg
ffree
xchg
in
or
outs
enter
icebp
inc
fidiv
out
mov
repnz
stc
out
dec
mov
pop
jmp
(bad)
cmp
fidivr
mov
loop
(bad)
fwait
movhps
push
inc
mov
xor
and
pop
sbb
pop
pop
popa
mov
add
pop
mov
sub
aaa
stos
idiv
xchg
and
ss
popa
cmc
out
outs
cmp
push
leave
in
ss
jbe
and
mov
push
sti
cmc
imul
cli
mov
cmp
ds
cwde
mov
bound
sub
pop
cmp
hlt
loop
jmp
cs
cmp
adc
xlat
push
adc
fcmovb
int
jge
sbb
shl
test
aas
je
mov
lock
(bad)
jmp
mov
aas
mov
out
rol
cmp
adc
ficom
push
mov
xlat
gs
xchg
je
xchg
sbb
ins
andps
(bad)
cmc
mov
retf
lds
sub
mov
push
inc
xchg
mov
test
test
sub
ins
stos
pop
cli
fstp
xor
inc
movs
sbb
out
das
loop
dec
in
dec
lahf
lea
lahf
mov
adc
mov
jno
dec
or
sub
sbb
adc
bound
enter
add
ds
or
popa
and
jmp
cdq
adc
das
fistp
fisubr
push
xor
(bad)
dec
add
cmp
cmp
loope
clc
and
mov
push
(bad)
dec
adc
mov
stos
imul
or
mov
pop
mov
daa
movs
cdq
sub
jne
or
fwait
sbb
call
push
pop
je
xchg
ret
repnz
dec
mov
test
out
test
sub
movq
inc
daa
aad
loope
adc
sub
cld
frstor
scas
or
xor
xor
mov
xchg
inc
in
xor
mov
pushf
and
cmp
mov
in
adc
out
(bad)
sub
leave
loope
mov
inc
aam
push
in
cwde
fdiv
xchg
jno
out
fsin
or
lahf
(bad)
in
mov
int3
inc
out
call
repnz
xchg
cmp
xchg
nop
mul
cs
data16
stos
fstp
movs
or
adc
movs
fistp
sbb
mov
mov
xor
jle
(bad)
cmp
mov
mov
mov
in
xchg
test
ret
push
outs
jmp
sbb
fsubr
popa
jno
mov
xor
cmp
arpl
jge
sbb
adc
adc
add
outs
in
shl
mov
xchg
adc
enter
push
test
dec
sbb
add
(bad)
je
and
push
jb
ds
js
pop
adc
cs
pushf
nop
cmp
cmp
dec
adc
dec
inc
push
xchg
mul
mov
mov
xchg
dec
mov
fisttp
inc
sbb
pop
pop
retf
imul
xchg
sub
xchg
les
xlat
push
rcr
add
lds
in
mov
cmp
sub
ja
add
pop
dec
push
push
int
xor
inc
xlat
xchg
test
add
ins
aam
cwde
mov
es
aaa
test
imul
outs
and
mov
sbb
sar
adc
pop
mov
stos
or
jne
xor
xchg
add
add
mov
adc
lock
pop
aad
jp
xchg
fwait
add
push
xchg
xchg
add
fadd
sti
leave
cs
icebp
aad
imul
xchg
mov
xor
mov
dec
inc
das
sti
jb
xchg
or
stos
bound
push
cli
dec
inc
bound
and
adc
pop
sbb
dec
movs
jmp
pop
dec
movs
out
sub
ins
icebp
lock
sub
mov
lds
stc
data16
das
inc
and
js
outs
add
xchg
adc
clc
add
mov
jnp
out
stos
pop
outs
xor
fnstcw
sahf
cmps
lods
add
dec
les
adc
inc
in
je
xchg
sbb
mov
xchg
mov
aaa
sbb
mov
and
test
cmc
call
jb
inc
xchg
lods
ja
into
push
retf
xor
and
xchg
fisubr
in
int3
(bad)
mov
icebp
das
mov
xor
adc
(bad)
xor
fbld
cmp
imul
inc
(bad)
fwait
sub
add
imul
pop
mov
movs
and
and
loope
int
or
sbb
stos
push
push
add
sar
fisttp
add
je
cli
arpl
popa
mov
test
and
dec
push
push
dec
cmc
xlat
in
neg
or
push
pop
mov
xor
pop
sbb
push
inc
pop
stos
sbb
jnp
adc
pop
data16
sub
lea
xchg
mov
into
mov
div
cli
lods
push
fidivr
adc
data16
aad
pop
lods
fdiv
adc
(bad)
gs
inc
mov
sub
mov
mov
aas
push
out
pop
push
or
mov
or
in
shl
fs
pop
and
sbb
(bad)
pushf
or
sbb
stc
pop
rol
mov
leave
dec
xor
push
pushf
mul
mov
adc
mov
inc
pop
cld
inc
xchg
push
pop
(bad)
sub
cmp
stos
jmp
cmps
fdiv
call
outs
sub
mov
sbb
push
xor
out
adc
and
mov
fnstsw
mov
cmps
(bad)
sbb
fcom
jb
je
std
add
xchg
je
das
lahf
int
shl
xor
js
pop
cld
sub
add
ja
sub
test
popa
dec
lahf
loope
cmp
jns
inc
and
das
hlt
ror
mov
ins
xor
push
clc
dec
int
fwait
repnz
aam
sbb
xchg
in
popf
imul
fs
das
jne
jecxz
push
jle
ins
retf
dec
lahf
xchg
das
mov
xchg
jl
popa
inc
dec
jnp
jnp
mov
inc
imul
pusha
sub
es
pusha
(bad)
mov
mov
je
hlt
aas
adc
paddusw
mov
(bad)
dec
popa
sub
mov
add
add
imul
(bad)
mov
pushf
or
or
lock
int
mov
popf
retf
out
in
push
pop
jl
xchg
inc
sub
jmp
scas
mov
fmul
rcr
sbb
and
scas
scas
popf
jb
cmp
scas
test
mov
and
jb
adc
push
dec
daa
or
jge
add
stos
add
int
sub
inc
jge
mov
test
stos
mov
xor
(bad)
inc
add
inc
outs
sbb
mov
fbld
loopne
jbe
test
das
sbb
int
ds
cmc
xor
inc
pop
and
lock
push
aaa
hlt
cmp
lea
aam
mov
jl
in
fdivr
imul
(bad)
push
int
ficom
sub
push
and
and
cmp
or
jne
cmp
dec
adc
push
dec
jo
bound
call
jbe
ror
cmps
data16
jae
mov
jl
jns
mov
pusha
and
push
call
mov
dec
icebp
in
(bad)
cmps
sbb
cli
mov
and
jp
adc
xor
shr
jecxz
mov
stos
fldpi
sbb
xchg
in
push
data16
xchg
push
jmp
or
jns
mov
add
fs
int
pop
fild
cli
lods
push
inc
or
xor
sub
push
(bad)
cs
repnz
fs
xchg
mov
out
or
push
or
xlat
in
dec
mov
push
ds
retf
dec
ins
cdq
jg
adc
mov
in
and
outs
xchg
xchg
and
shl
(bad)
mov
cdq
cmps
cmp
xchg
jbe
das
cdq
dec
(bad)
push
xchg
aas
jg
jl
jns
pop
bound
inc
fdiv
adc
pop
in
mov
add
and
push
outs
addr16
jl
xor
test
int3
(bad)
neg
jmp
add
rcr
mov
fnsave
jb
xchg
jnp
cmp
popa
mov
mov
aad
and
push
loope
test
or
out
mov
jmp
mov
jmp
cmp
push
out
fsubr
xor
mov
inc
cld
movs
adc
aas
(bad)
aas
mov
inc
les
(bad)
sbb
ja
push
xor
mov
push
xchg
pusha
cmp
xor
nop
outs
in
out
adc
sbb
call
popa
cmp
ins
(bad)
sub
repz
mov
iret
popf
ror
xor
jg
fdiv
pop
sbb
bound
loop
dec
mov
loope
icebp
call
inc
inc
leave
cmp
dec
pop
ins
sbb
sahf
enter
push
(bad)
pop
movs
sti
pop
mov
sbb
jg
mov
cwde
jecxz
stos
xchg
inc
jmp
lods
inc
(bad)
(bad)
call
cld
add
cdq
sahf
iret
xchg
push
add
inc
jo
push
add
xor
pop
xchg
and
push
add
or
and
test
push
add
mov
mov
dec
dec
shr
pop
xchg
push
mov
inc
adc
push
or
inc
(bad)
inc
push
jmp
adc
fild
mov
xor
into
xlat
repz
lds
call
cmc
cmp
sar
pop
(bad)
aaa
movs
jns
add
pop
arpl
lods
cmp
xchg
sbb
cmps
jne
add
sub
ror
mov
mov
mov
mov
gs
mov
or
mov
jmp
mov
dec
or
imul
dec
mov
inc
inc
stc
inc
or
test
xor
ja
stos
inc
mov
dec
mov
cld
rcr
push
scas
aam
mov
jp
fmul
push
cwde
jl
add
les
ror
fisubr
adc
mov
jmp
(bad)
test
push
test
mov
pop
iret
xor
add
cmp
xor
xor
ret
push
mov
mov
das
sub
fnsave
mov
jp
mov
addr16
ds
in
addr16
sub
fdiv
hlt
movs
es
add
loop
cmc
loopne
jb
inc
push
iret
(bad)
in
or
fwait
sbb
jbe
in
dec
mov
fsubr
ror
push
xor
js
xlat
inc
fstp
fs
xor
push
xchg
mov
div
mov
cmc
sbb
mov
adc
inc
or
mov
shl
pop
shl
rol
push
je
scas
fnstenv
pop
mov
clc
fcomp
fist
imul
movs
or
into
xchg
jo
int
test
and
adc
xchg
mov
movs
xchg
cmp
push
adc
fwait
mov
adc
leave
leave
pop
movs
lods
daa
std
jns
fsubr
mov
clc
mov
xchg
loope
sbb
repnz
aam
push
ret
aas
jbe
in
or
fistp
sahf
sbb
pop
inc
inc
jg
lds
jmp
jl
lods
dec
rcr
fxch
add
loopne
js
mov
cmp
call
inc
pop
dec
div
into
shr
call
and
mov
mov
jno
cmps
ret
adc
add
je
in
aaa
fmul
arpl
js
(bad)
xchg
repz
push
add
cmp
repnz
das
jbe
jp
add
cmp
push
pusha
cs
add
retf
sbb
jp
jecxz
not
adc
ins
aaa
or
xor
inc
push
ins
out
push
gs
call
rol
xchg
test
add
add
mov
jecxz
(bad)
xchg
jbe
sbb
enter
mov
and
mov
out
mov
inc
sub
rcr
stc
inc
jmp
adc
shr
sub
leave
jle
push
scas
(bad)
cmps
adc
ins
lods
push
rcr
call
jae
cmp
ins
bound
or
jmp
or
xor
nop
mov
rep
dec
leave
scas
inc
das
aad
mov
repz
shr
jle
pop
mov
dec
call
push
repnz
adc
and
retf
cmp
jp
scas
push
add
mov
rol
fidiv
jecxz
xor
jg
dec
sbb
sub
cmp
cmps
imul
loop
or
int
push
pop
mov
add
ds
mov
push
adc
jb
mov
mov
bound
xchg
cmps
std
and
adc
xchg
jg
sub
test
gs
sub
jb
pop
push
jg
jno
inc
in
das
ret
fwait
and
ret
test
inc
dec
dec
jns
jo
jae
out
xor
out
xor
and
pop
xor
enter
pop
adc
push
add
jecxz
data16
test
adc
sbb
ins
adc
repnz
les
hlt
adc
mov
push
inc
ds
in
add
jns
sbb
stos
inc
adc
push
jmp
jge
mov
and
fdiv
fiadd
addr16
gs
dec
repz
jns
sbb
add
ja
fs
ret
pushf
into
mov
(bad)
fcmovb
mov
jne
mov
ja
data16
repnz
in
inc
mov
mov
inc
mov
out
popa
retf
fdiv
mov
or
mov
jp
inc
adc
popf
retf
sbb
call
cdq
mov
jp
or
adc
cmps
mov
outs
cwde
fdivr
adc
ret
sti
(bad)
and
ss
and
sub
mov
scas
out
xor
movs
jp
ficom
pop
out
ds
pop
adc
js
loop
sub
jne
rcl
adc
iret
pushf
mov
jb
jmp
and
xor
out
stc
or
mov
aad
outs
sub
cwde
jmp
jmp
je
cmp
pop
push
shl
xchg
pop
mov
(bad)
xor
leave
pop
(bad)
repz
test
outs
cmp
lea
sbb
dec
cmp
ins
mov
xchg
pop
mov
xor
out
push
jge
add
push
add
mov
adc
test
jmp
pop
movs
call
bound
or
not
(bad)
and
shl
popf
fnstsw
int
aas
mov
sbb
cld
(bad)
push
push
icebp
pop
dec
add
or
fisubr
push
jo
jo
(bad)
jae
aaa
scas
mov
(bad)
mov
fxch
(bad)
jmp
loop
xor
fdivr
push
dec
mov
daa
fwait
or
lods
retf
push
das
cli
fild
test
dec
leave
push
mov
(bad)
(bad)
cmp
popf
pop
(bad)
jno
xchg
cmp
loop
shl
mov
xchg
mov
enter
jne
lds
push
js
xchg
sti
mov
fcmovne
aam
sub
gs
int
mov
mov
mov
push
adc
xchg
pop
call
sub
retf
mov
(bad)
xor
ds
pop
rcr
mov
(bad)
xchg
jg
pop
inc
pop
out
cs
add
ins
dec
retf
and
loope
mul
xor
xlat
mov
call
cwde
or
jnp
dec
aas
fst
adc
xchg
jle
add
das
sbb
cdq
dec
xchg
jmp
dec
and
inc
adc
out
push
jne
xor
push
movs
(bad)
js
pop
inc
daa
push
loope
mov
cwde
test
in
popa
call
and
sbb
push
out
cmp
add
xor
pop
push
lods
aam
jae
gs
sbb
xchg
push
mov
sti
and
mov
outs
jae
sub
movs
ret
nop
adc
add
mov
inc
xchg
and
push
push
xor
cli
push
add
popa
mov
mov
inc
xchg
sub
rcr
xor
mov
inc
fnstsw
pop
xchg
mov
in
pop
pushf
test
dec
in
jns
mov
jg
xlat
lea
jmp
cmp
xor
mov
fcom
popf
rcl
cmp
jo
int
xor
push
fsubp
sti
sub
daa
(bad)
pop
jbe
in
int3
fdiv
dec
lock
and
movs
in
(bad)
dec
jge
dec
fucomp
aaa
adc
push
sub
jecxz
add
xor
adc
cdq
pop
lock
or
mov
out
mov
jo
add
inc
sub
into
inc
or
push
pop
cdq
pop
stos
add
xor
mov
xor
call
cdq
mov
sbb
pop
pop
adc
cmps
jb
cmps
or
or
jge
sbb
pop
xchg
pushf
shl
jnp
inc
imul
adc
inc
jle
mov
dec
icebp
stos
cmp
sbb
mov
fstp
jns
and
sub
xor
xchg
sbb
enter
movs
xchg
gs
push
out
mul
adc
repnz
mov
fs
fsub
mov
jne
les
fs
sti
(bad)
push
mov
outs
xchg
adc
xlat
pop
fist
test
stc
mov
aam
out
fist
pushf
(bad)
daa
arpl
sbb
popf
mov
xchg
int
mov
outs
jnp
xlat
sub
aas
hlt
adc
sub
sub
xor
fdivr
inc
mov
jnp
sbb
pop
pop
popf
call
ds
mov
cmp
(bad)
fsub
push
cmp
cmp
fidiv
sahf
cmps
push
xchg
jecxz
popf
sar
cmp
inc
repz
cmp
sub
and
pop
inc
jne
lds
repnz
cmp
repnz
lods
jne
in
fsubr
repz
jle
cmps
gs
out
rcr
cmp
icebp
daa
(bad)
jmp
xor
inc
pop
iret
ret
sbb
mov
js
lock
sbb
dec
and
pop
mov
not
lods
add
and
dec
jp
or
nop
pop
dec
dec
loopne
adc
push
jmp
adc
icebp
ret
jb
(bad)
xchg
call
or
cli
cmc
or
xchg
pop
popa
mov
sahf
xchg
mov
jo
add
xchg
cs
push
cvtpi2ps
div
shl
fwait
pop
xor
sub
stos
jmp
dec
cmp
aad
lods
adc
scas
gs
into
dec
mov
in
sbb
popa
add
lds
xchg
das
mov
mov
jg
scas
std
cmp
fld
xor
int
mov
sahf
adc
pusha
test
sbb
dec
and
inc
sbb
xchg
fld
xchg
push
cmp
cli
retf
mov
stc
or
push
call
mov
pop
xlat
cmp
ret
mov
sub
pop
retf
rcr
adc
mov
lds
ret
in
and
pop
ins
mov
adc
add
fs
xor
or
outs
aad
mov
shl
xchg
iret
sbb
cmp
adc
cmp
cmp
fwait
int
outs
cmp
test
lods
add
scas
popa
(bad)
xor
icebp
mov
adc
lds
mov
inc
jbe
call
and
dec
pop
cwde
jmp
loope
in
pop
korw
ret
or
pop
jp
xlat
cs
xor
jns
cdq
or
xchg
mov
inc
sub
jle
mov
mov
cmp
cmp
add
nop
mov
in
icebp
cmp
retf
sbb
pop
inc
cdq
xchg
cmp
mov
jecxz
mov
rcr
adc
sub
mov
inc
mov
pop
icebp
mov
das
in
test
imul
mov
fs
dec
adc
aaa
xor
jg
push
inc
lods
out
sbb
in
push
or
iret
add
jns
outs
jns
sub
aam
cwde
add
inc
pop
std
push
rcr
call
lds
xor
and
xor
sub
adc
lea
out
push
arpl
mov
(bad)
xchg
xchg
rcl
push
and
jmp
sbb
lock
imul
imul
sub
cmps
xor
pop
clc
sbb
out
xchg
out
(bad)
sub
popa
fidiv
fstp
aad
movs
scas
stos
call
jnp
std
ftst
push
and
div
cs
mov
fmul
push
lods
mov
pushf
pop
in
or
ins
lea
jae
call
push
mov
push
adc
dec
dec
fsubrp
mov
div
xor
not
sub
or
popa
es
das
mov
push
shl
inc
in
ja
cmp
adc
adc
test
scas
stos
popa
mov
adc
jmp
jmp
dec
cmps
and
cmp
mov
add
mov
or
adc
push
mov
dec
in
pop
repz
and
lahf
add
data16
rcl
imul
push
adc
cs
shl
lods
cmp
pop
adc
sbb
mov
cmp
pop
sub
jecxz
je
mov
push
jb
xchg
mov
arpl
mov
and
(bad)
push
inc
add
adc
push
xchg
mov
mov
fsubp
div
mov
mov
cmp
outs
ja
cmp
fsubr
inc
add
ds
fcom
or
out
dec
sub
ins
mov
fstp
adc
icebp
daa
pop
std
fs
ret
jg
push
fbld
mov
and
or
add
adc
sub
sbb
in
push
pushf
aas
fs
xchg
sbb
aaa
sbb
push
stos
or
fisub
and
mov
add
and
aas
movs
movs
in
jmp
inc
mov
cs
bound
imul
loop
mov
cmc
pop
ins
shr
and
dec
(bad)
and
movs
add
test
sub
outs
out
push
xor
jne
mov
shr
cmc
ss
xchg
sub
lds
sbb
movs
or
push
pop
out
outs
pop
fs
(bad)
(bad)
xor
mov
arpl
push
add
aam
sbb
outs
das
xor
push
lock
shr
cmps
sub
inc
or
call
test
inc
adc
shl
and
xchg
addr16
mov
mov
mov
ins
(bad)
shl
add
frstor
cdq
nop
cmp
mov
imul
test
inc
sbb
sub
dec
mov
dec
xchg
enter
sub
loop
xchg
iret
and
or
sub
fcomp
fst
fcmovu
bound
ror
jne
inc
outs
lods
sbb
pop
cmps
int3
fwait
sbb
loop
xchg
sub
bound
cmc
cmps
movsx
in
xor
jbe
aaa
mov
xor
(bad)
sti
jb
aad
xchg
mov
or
mov
push
jne
cmp
cmps
movs
bound
cwde
js
not
jge
out
fmulp
push
aad
push
and
in
jl
cmp
clc
xlat
or
push
cmp
dec
pop
sbb
cmc
xor
in
ror
push
jmp
mov
movs
iret
add
or
rcl
sub
mov
scas
and
mov
sub
imul
mov
or
push
arpl
mov
shr
(bad)
not
mov
or
ja
mov
mov
inc
mov
mov
(bad)
in
sbb
add
sbb
lea
loope
aas
cld
test
adc
mov
sub
inc
dec
movs
or
add
fstp
dec
xchg
aad
dec
and
add
xlat
rcl
add
popa
add
cdq
cmp
gs
sbb
cld
cdq
sbb
mov
and
es
or
add
or
sub
fs
clc
div
xchg
enter
call
jmp
das
movs
loop
mov
retf
xchg
add
mov
pop
inc
xor
fld
mov
rcl
push
sub
in
into
mov
loope
sti
pop
(bad)
push
(bad)
lods
jge
mov
(bad)
pop
es
pop
mov
aas
out
rcr
(bad)
jge
sbb
or
popa
test
dec
jecxz
wrmsr
(bad)
dec
lock
std
pop
sbb
cmc
shr
mov
icebp
js
imul
clc
(bad)
sub
iret
mov
out
in
daa
inc
xor
jno
mov
shl
adc
sbb
pop
dec
aaa
push
xchg
jb
ja
cmps
ins
fisttp
mov
and
pop
cmp
movs
mov
mov
das
xor
adc
iret
mov
cmp
(bad)
jne
xor
(bad)
push
adc
inc
jo
test
cmp
jle
test
lock
xor
fwait
xchg
stc
xor
daa
into
cmp
fcmovnu
data16
add
adc
in
out
jl
or
lods
mov
xor
popf
cli
les
movs
pusha
jo
test
jecxz
mov
lock
xor
mov
lds
push
mov
pop
hlt
jl
es
les
cs
inc
cs
rcr
push
lock
or
mov
xchg
sbb
daa
js
daa
dec
ins
xor
push
mov
sub
jmp
push
mov
xor
popa
enter
sub
inc
les
je
pop
ja
adc
mov
ret
jmp
cmp
ficom
jbe
loope
dec
dec
fdiv
dec
xor
xor
ffree
mov
cs
fld
stos
inc
dec
test
or
stc
dec
push
mov
cmp
xlat
jnp
xor
jo
push
lock
mov
adc
or
mov
dec
cdq
sbb
xchg
nop
pop
sbb
and
mov
movs
jb
add
lods
sbb
fcomp
loopne
aam
dec
test
repz
popa
retf
(bad)
les
xchg
mov
jns
inc
in
and
mul
out
repz
jl
cmc
pop
pop
jb
cld
in
fiadd
aaa
sub
jmp
repnz
inc
xchg
xchg
add
inc
mov
mov
sub
aas
cdq
clc
into
jecxz
jnp
fild
lods
push
loop
neg
cmp
ins
jmp
or
mov
and
aam
inc
cwde
scas
rcl
fstp
push
out
lods
push
shr
mov
jmp
mov
fiadd
adc
jae
test
int3
out
mov
(bad)
xor
loop
push
mov
aad
sbb
gs
mov
sbb
data16
lods
jb
icebp
mov
shl
and
jle
adc
int
(bad)
dec
and
cmc
mov
push
adc
fdiv
lods
jae
mov
mov
lds
int3
xor
into
mov
or
ds
fnstcw
adc
jle
retf
xchg
push
xchg
pushf
adc
or
mov
ins
cmps
xchg
stc
ins
mov
jge
dec
mov
fs
rcl
js
pop
push
adc
or
dec
cmp
xchg
(bad)
test
jo
ror
and
and
fucomp
or
cmps
mov
pushf
leave
imul
jne
mov
inc
jne
loopne
cmp
ins
out
add
stos
mov
popf
mov
jbe
pop
inc
into
add
jp
adc
loopne
inc
ret
enter
mov
imul
sbb
in
dec
or
sub
adc
arpl
sbb
in
pop
or
shl
aam
pop
push
xor
jbe
xchg
xchg
sahf
mov
(bad)
loope
mov
jecxz
dec
jl
sar
dec
mov
in
or
jle
aaa
daa
xchg
mov
mov
scas
aas
aas
in
retf
paddusb
imul
stos
arpl
je
push
movs
cwde
outs
pop
push
xchg
lds
sbb
das
mov
mov
jnp
js
loope
repnz
fidivr
push
int
fwait
std
ror
xchg
mov
dec
push
mov
outs
jne
mov
into
pop
adc
(bad)
loope
mov
in
dec
add
push
retf
dec
push
xlat
push
xor
jne
mov
xor
adc
daa
mov
aaa
and
push
std
xchg
int3
daa
ficomp
push
call
out
(bad)
jb
jno
mov
pop
outs
mov
leave
adc
stos
data16
xchg
imul
cmps
pop
scas
ds
cmp
test
pop
movs
cmc
mov
arpl
ds
jae
pop
std
into
xor
cmp
push
stos
lea
jno
add
add
xchg
inc
mov
dec
xor
and
data16
mov
mov
clc
sbb
dec
pop
call
add
leave
push
adc
cli
mov
cmps
xlat
mov
adc
push
or
inc
stos
and
shl
dec
mov
addr16
pop
ds
and
shl
and
bound
movs
xchg
ds
lods
arpl
pusha
cmc
inc
xchg
push
sahf
sbb
pop
mov
in
mov
ffree
pop
pusha
add
mov
addr16
imul
jo
iret
int3
das
dec
out
outs
scas
(bad)
imul
xchg
mov
or
mov
nop
movs
or
push
outs
lods
enter
mov
test
fst
pop
xor
and
inc
xchg
dec
inc
xor
and
mov
test
push
cli
test
mov
arpl
je
mov
jnp
and
cmp
xor
mov
call
cwde
loopne
cmps
test
js
(bad)
mov
iret
cmps
frstor
sbb
test
xchg
sub
in
mov
ss
data16
int
add
cdq
sub
clc
jno
outs
fwait
jmp
(bad)
push
dec
outs
push
jg
add
pop
shl
xlat
pop
retf
repz
loop
frstor
or
fs
mov
push
int3
ret
mov
scas
push
jne
jnp
xchg
pop
mov
pop
sub
add
mov
out
std
fild
xlat
pop
lods
xor
je
jns
dec
push
dec
pop
mov
ret
test
push
repnz
cmp
and
sub
pop
test
das
nop
iret
pusha
xor
xor
sbb
mov
jl
dec
pop
jne
pop
lock
rcr
fs
mov
jns
jmp
repnz
mov
mov
outs
push
sbb
aas
inc
sub
daa
mov
mov
icebp
lds
jnp
fnclex
or
xchg
fdiv
cmp
lods
mov
push
(bad)
xrelease
sbb
dec
or
(bad)
lods
arpl
push
dec
mov
mov
add
dec
xor
sub
mov
mov
and
or
out
pop
les
xchg
jne
shr
repz
pop
push
ds
pop
ins
sbb
cmp
xchg
rcr
push
(bad)
nop
jne
or
mov
(bad)
mov
sbb
ins
dec
inc
sub
jo
pusha
xchg
add
or
xchg
mov
jg
pop
dec
scas
into
in
cmp
mov
push
ss
and
pop
add
jmp
mov
cdq
sub
out
bound
xchg
sahf
inc
arpl
fwait
sbb
ret
(bad)
rcr
nop
stos
mov
fdiv
mov
xchg
mov
mov
loope
xor
dec
sub
pop
inc
mov
imul
call
jmp
daa
cwde
mov
sbb
fisttp
pop
mov
dec
adc
test
out
mov
mov
cwde
leave
scas
int3
aas
scas
es
adc
rol
pop
(bad)
sti
and
pop
mov
mov
retf
scas
in
mov
not
out
sbb
int3
jns
xchg
push
mov
xchg
ret
xchg
dec
cmc
cmps
ds
fucomp
dec
cmps
dec
fs
outs
mov
test
cmp
jl
cli
adc
hlt
aas
push
(bad)
aad
ss
out
ss
fst
mov
ret
adc
sbb
pop
mov
fdivr
mov
cmp
adc
outs
inc
adc
mov
xor
add
mov
or
and
int
lock
sar
ret
pushf
mov
add
sbb
sar
test
pusha
shl
mov
(bad)
xor
loopne
lods
aad
lods
mov
pop
jmp
cmp
ret
cmp
pop
repnz
jbe
push
fistp
cli
daa
jno
mov
inc
aaa
jl
(bad)
jae
cmc
rcl
retf
add
rcr
mov
call
inc
adc
inc
inc
(bad)
cmp
(bad)
scas
(bad)
cmp
inc
jo
jnp
rcl
dec
stc
sbb
stos
xchg
pop
stc
sahf
dec
inc
rcr
jge
sub
cwde
cmp
cmp
xor
test
fcom
(bad)
js
les
and
mov
scas
lea
add
jmp
cmp
std
jmp
cmp
dec
je
mov
adc
leave
sub
movs
jne
mov
inc
test
inc
adc
shl
std
mov
pop
jecxz
sub
lea
lahf
pushf
inc
pop
dec
sub
jno
cwde
cli
sbb
add
sbb
inc
adc
out
cli
inc
xchg
jae
push
sahf
call
je
iret
sbb
xor
mov
push
int3
mov
push
jle
(bad)
call
(bad)
rcr
inc
movs
int3
out
popf
push
jb
std
cmp
cmp
add
into
int3
push
dec
push
push
mov
add
jge
in
dec
in
mov
pop
daa
cmp
stos
inc
mov
mov
sbb
repnz
fdivr
push
aad
cmps
dec
inc
mov
sub
mov
jecxz
and
ins
sbb
out
out
(bad)
into
fistp
aam
daa
mov
in
xor
lods
and
jecxz
jmp
dec
cmps
scas
jb
(bad)
repnz
pop
pushf
fstp
(bad)
mov
test
das
sbb
mov
or
pusha
lea
ja
cmp
lock
pushf
mov
inc
mov
pop
push
pop
xor
(bad)
(bad)
call
icebp
sbb
xor
cmp
add
jl
push
sbb
and
les
loop
cdq
jg
loope
inc
lods
mov
and
call
pop
out
jmp
int3
dec
mov
popf
in
mov
inc
pushf
add
push
cmp
call
adc
mov
and
sbb
jmp
call
(bad)
cmps
popa
xchg
sahf
xchg
ficom
loope
in
inc
scas
pop
mov
lahf
xor
mov
jne
ins
lea
call
sahf
xchg
push
pusha
ss
xchg
add
retf
int
pop
ficom
xchg
and
lahf
or
jo
cmp
fdivr
xchg
sbb
retf
dec
pop
js
inc
xchg
cmp
movs
rol
jno
cmp
sub
fldcw
pusha
xor
lds
sbb
sbb
ja
ss
mov
out
std
fwait
aam
in
xor
mov
xchg
jmp
add
and
nop
int3
or
xchg
aaa
dec
mov
ror
and
repnz
mov
lds
or
test
mov
inc
jmp
bnd
cmp
das
add
sub
ret
adc
sub
dec
pop
lahf
test
js
nop
(bad)
int3
ss
pop
cmp
loopne
cs
movs
dec
mov
or
dec
int
pop
bound
mov
add
jnp
inc
add
xor
lahf
or
not
and
jmp
inc
cmps
sub
repz
pusha
ds
pusha
psrld
lock
(bad)
inc
sbb
add
ret
push
lods
fwait
pop
out
xor
xchg
mov
dec
cmp
dec
aas
jae
push
xor
jmp
dec
arpl
(bad)
(bad)
or
inc
xor
fs
xchg
fbstp
sub
add
dec
iret
or
sbb
clc
and
rol
sub
or
mov
mov
fimul
addr16
arpl
xchg
(bad)
in
pop
inc
arpl
cmp
out
sub
test
imul
mov
out
lods
push
mov
clc
push
lods
(bad)
les
xlat
sub
popa
addr16
hlt
mov
outs
pushf
outs
popf
rcl
div
mov
add
cdq
aad
nop
and
mov
inc
aad
jo
scas
jmp
push
push
pop
rcl
cmp
xchg
pop
sbb
test
repnz
pop
loope
ds
lahf
and
pop
mov
cmp
xor
ret
mov
ret
cli
arpl
scas
bound
pop
push
mov
scas
dec
sub
test
pop
sti
jmp
fistp
sti
adc
or
imul
mov
call
cli
add
jge
imul
xchg
popf
xchg
pop
nop
jl
fbld
dec
pusha
jae
in
jo
rcl
ja
neg
cdq
xchg
sub
mov
push
jns
jne
adc
jge
imul
(bad)
imul
outs
mov
lea
ja
repz
lds
sbb
pop
mov
call
and
loopne
sbb
xchg
cmp
inc
popf
mov
inc
mov
cwde
dec
sbb
in
ret
test
cld
xchg
cs
sbb
sub
cmp
jp
aas
add
sti
xchg
jmp
dec
mov
in
pop
pop
clc
xchg
pushf
inc
xchg
push
add
addr16
sub
leave
and
ja
cdq
mov
pop
mov
or
sub
ins
scas
push
adc
sbb
mov
adc
mov
mov
xchg
add
mov
and
in
mov
cmp
jl
mov
sub
dec
shr
std
popf
aam
cmpxchg
call
imul
sbb
fs
pop
not
test
sar
cmc
iret
inc
sbb
xchg
jp
push
fsub
outs
add
cli
aad
in
lahf
loope
and
aaa
call
fldenv
push
ret
mov
inc
lock
(bad)
mov
popa
shr
xchg
adc
pop
ret
cmp
bound
jne
mov
pop
pushf
jmp
sub
pop
mov
js
or
push
mov
mov
sub
or
pop
aas
rol
jge
jo
jecxz
(bad)
ins
sub
ret
dec
xor
out
outs
and
xor
cmc
pushf
or
xor
fisttp
adc
mov
push
imul
jle
sti
rcl
lds
or
jo
xor
jne
cmp
mov
pop
cmp
in
add
sub
add
mov
dec
mov
test
sub
jae
jg
sahf
adc
fldcw
push
in
push
pop
cmp
jl
pusha
or
pop
sahf
test
push
popa
xchg
mov
(bad)
bnd
xor
out
xchg
stos
jecxz
sahf
mov
(bad)
pop
mov
dec
pop
and
stos
sbb
iret
gs
fmul
mov
jbe
pop
addr16
sub
pop
cmps
mov
add
test
cmp
scas
pop
mov
and
stc
mov
(bad)
and
arpl
lahf
rcl
jns
or
test
test
movs
pop
pop
pusha
xor
jno
test
push
lods
and
(bad)
cmp
into
push
daa
pop
jbe
jmp
sbb
mov
xor
repz
iret
stc
mov
adc
cmp
movs
ror
fdiv
daa
into
xchg
mov
xchg
stos
or
xor
scas
xchg
pop
adc
dec
hlt
lahf
pop
sbb
in
xchg
(bad)
ja
sbb
int3
inc
test
xor
xchg
stos
push
mov
adc
mov
sub
test
dec
enter
adc
mov
push
sbb
xlat
mov
shr
test
call
sbb
(bad)
cli
mov
out
cmps
jmp
jg
mov
mov
pusha
cld
xor
pop
cld
mov
pop
inc
mov
lea
in
push
and
dec
adc
rol
or
push
inc
push
dec
cmp
xchg
leave
cwde
or
jecxz
lods
mov
inc
faddp
fmul
pop
loop
aas
in
inc
dec
pop
jno
(bad)
mov
or
xchg
mov
leave
jnp
pop
cld
fdivr
xor
in
rcr
mov
xchg
dec
push
dec
jne
xchg
or
cmp
inc
pop
(bad)
div
retf
cli
mul
(bad)
jecxz
mov
sar
fsubr
inc
jbe
fmul
jp
add
jp
inc
sbb
fmul
rcr
inc
xor
je
mov
jo
jg
xchg
repz
scas
push
xor
cmp
xchg
clc
inc
xchg
jno
bound
cmc
adc
xor
scas
(bad)
fst
ficomp
ds
and
push
mov
loop
push
scas
pop
push
jl
dec
cdq
nop
hlt
or
dec
push
(bad)
push
loopne
dec
or
shl
mov
and
push
aas
push
jmp
jnp
jne
mov
jae
(bad)
iret
mov
jno
enter
xor
mov
add
lds
mov
repnz
ins
or
and
pop
sti
outs
cwde
push
inc
cli
jl
fild
ins
popf
adc
cmps
jge
mov
std
inc
ins
pop
adc
lods
mov
or
dec
into
mov
jecxz
(bad)
xlat
push
push
rcr
lods
imul
sub
dec
stos
(bad)
mov
mov
fldcw
retf
pop
je
call
loope
inc
push
xchg
dec
pop
stos
lea
cmp
(bad)
hlt
ror
pop
or
cs
fisubr
imul
gs
add
pushf
pop
inc
xor
cmp
push
inc
xlat
sub
dec
int
mov
mov
not
loop
mov
push
cmc
inc
mov
or
or
retf
lods
cmp
gs
shl
mov
mov
out
js
cmp
sub
sar
fbstp
pop
mov
outs
add
inc
in
shr
fadd
shl
push
sub
(bad)
(bad)
repnz
aad
sbb
cmp
inc
es
push
push
sub
loop
dec
push
xor
sar
leave
xor
sbb
sbb
add
add
add
js
add
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
push
push
call
and
xor
mov
test
setne
test
jne
call
mov
call
xor
jmp
xor
mov
test
setne
test
je
xor
cmp
setne
test
je
call
mov
mov
test
jne
call
mov
jmp
and
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
push
mov
push
push
push
test
je
mov
test
je
mov
test
jne
call
mov
call
xor
pop
pop
pop
leave
ret
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
je
mov
jmp
mov
mov
test
je
mov
and
je
mov
mov
test
je
js
cmp
jae
mov
mov
push
push
push
call
mov
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
pop
test
jne
mov
mov
test
je
xor
div
mov
sub
mov
jmp
mov
push
push
push
call
pop
push
call
add
cmp
je
mov
mov
cmp
ja
mov
add
sub
cmp
jb
mov
jmp
mov
push
movsx
push
call
pop
pop
cmp
je
inc
mov
dec
mov
test
jg
xor
inc
mov
test
jne
mov
jmp
or
sub
mov
xor
div
jmp
push
push
call
cmp
je
cmp
je
xor
mov
test
setne
test
jne
call
mov
call
xor
call
ret
push
call
pop
and
push
push
push
push
call
add
mov
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
call
mov
imul
add
mov
shr
and
mov
ret
push
mov
call
mov
mov
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
cmp
jl
jg
cmp
jbe
or
mov
mov
test
je
mov
mov
leave
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
test
jne
call
mov
call
mov
pop
ret
mov
test
je
push
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
movzx
movzx
pop
pop
sub
pop
pop
ret
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
push
cmp
jne
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
push
lea
call
add
movzx
lea
test
je
cmp
je
movzx
movzx
sub
pop
cmp
pop
pop
je
mov
and
mov
leave
ret
push
mov
push
push
and
add
push
mov
mov
mov
sub
push
push
mov
xor
movzx
mov
cmp
jne
mov
jmp
mov
cmp
jle
mov
and
push
pop
cmp
ja
movdqu
jmp
push
pxor
movzx
pop
movzx
psrldq
pinsrw
xor
cmp
je
add
movzx
dec
jne
mov
mov
mov
and
cmp
ja
movdqu
pcmpistri
jbe
add
mov
jmp
jae
pcmpistri
lea
mov
mov
mov
and
mov
cmp
ja
mov
and
cmp
ja
movdqu
movdqu
pcmpistri
jno
js
mov
add
add
jmp
movzx
xor
cmp
je
cmp
je
add
jmp
movzx
and
cmp
je
cmp
jne
add
add
jmp
add
jmp
mov
jmp
jne
movzx
mov
movd
pshuflw
push
pshufd
pxor
pop
mov
and
cmp
ja
movdqu
movdqa
pcmpeqw
pcmpeqw
por
pmovmskb
test
jne
add
jmp
bsf
mov
shr
lea
movzx
xor
cmp
je
movzx
cmp
jne
mov
mov
and
cmp
ja
mov
and
cmp
ja
movdqu
movdqu
movdqa
pcmpeqw
pcmpeqw
movdqa
pcmpeqw
por
pmovmskb
test
jne
add
add
jmp
bsf
mov
and
add
add
movzx
and
cmp
je
cmp
jne
add
add
jmp
mov
add
jmp
mov
jmp
mov
movzx
test
je
and
mov
mov
sub
push
mov
pop
test
je
movzx
test
je
movzx
movzx
sub
mov
mov
jne
add
cmp
jne
jmp
mov
cmp
je
mov
add
add
movzx
mov
test
jne
xor
pop
pop
mov
pop
mov
pop
ret
push
mov
cmp
mov
push
jne
test
jns
push
push
jmp
push
push
mov
push
push
call
mov
pop
pop
ret
push
mov
cmp
mov
push
push
mov
push
je
push
pop
mov
add
neg
push
mov
pop
mov
xor
div
mov
lea
cmp
ja
lea
mov
add
test
jne
xor
mov
sub
movzx
mov
mov
mov
sub
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
mov
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
mov
mov
cmp
jge
mov
mov
test
je
test
jne
test
jne
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
mov
jmp
push
call
pop
mov
mov
mov
test
je
push
mov
mov
add
push
call
mov
mov
add
push
call
mov
mov
mov
mov
test
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
push
push
xor
and
push
mov
xor
push
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
mov
call
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
mov
test
je
mov
test
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
test
jne
inc
and
jmp
test
jne
inc
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
mov
test
jne
mov
test
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
push
add
pop
jmp
inc
cmp
je
cmp
jne
inc
cmp
je
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
inc
mov
xor
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
mov
push
push
call
pop
mov
mov
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
je
mov
mov
lea
mov
mov
sub
dec
mov
mov
test
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
cmp
je
cmp
je
mov
mov
and
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
mov
lea
push
push
call
add
mov
cmp
je
or
or
jmp
movzx
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jl
inc
add
mov
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
dec
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
mov
inc
add
inc
and
pop
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
inc
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
inc
add
inc
add
inc
add
mov
and
pop
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
push
xor
push
cmp
jne
call
push
pop
mov
call
mov
jmp
mov
test
je
call
test
jne
call
test
jne
xor
inc
xor
push
push
push
push
mov
push
push
call
mov
test
jne
call
push
call
pop
xor
jmp
add
push
call
pop
mov
test
je
push
push
push
push
push
push
call
test
jne
call
push
call
push
call
and
pop
jmp
xor
inc
pop
pop
leave
ret
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
add
movzx
movzx
jmp
mov
push
cmp
jae
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
and
ret
cmp
jne
repz
jmp
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
push
call
and
xor
mov
test
setne
test
jne
call
push
pop
mov
call
mov
jmp
or
xor
cmp
setne
test
je
cmp
je
mov
and
neg
sbb
inc
je
and
push
push
push
push
push
push
lea
push
call
add
mov
mov
mov
call
test
je
or
mov
call
ret
mov
mov
cmp
je
test
je
mov
mov
sar
and
shl
mov
and
push
call
pop
ret
push
mov
push
and
lea
push
push
call
pop
pop
test
jne
or
leave
ret
push
push
push
push
push
push
push
push
call
push
mov
call
add
mov
pop
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
push
mov
test
jne
xor
jmp
push
push
push
lea
call
mov
xor
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
dec
mov
inc
test
push
mov
pop
je
test
jne
movzx
mov
mov
test
jne
mov
movzx
jmp
mov
test
jne
mov
jmp
shl
movzx
or
inc
movzx
mov
movzx
mov
mov
inc
test
push
pop
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
movzx
inc
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
je
mov
and
mov
pop
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
push
call
mov
xor
test
je
mov
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
mov
movzx
dec
inc
test
mov
je
test
jne
movzx
mov
test
jne
mov
movzx
mov
jmp
mov
test
jne
mov
jmp
shl
movzx
or
mov
movzx
inc
mov
mov
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
test
je
movzx
mov
mov
movzx
mov
mov
movzx
inc
test
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
mov
movzx
inc
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
push
test
mov
pop
je
mov
movzx
mov
mov
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
pop
je
mov
and
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
and
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
push
call
pop
ret
call
and
call
mov
call
mov
mov
call
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
inc
push
mov
push
call
pop
mov
mov
test
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
pop
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
push
call
or
mov
and
push
call
pop
test
jne
or
jmp
push
call
pop
and
xor
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
test
jne
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
inc
and
call
mov
test
jne
lea
push
call
test
je
lea
push
call
add
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
or
mov
sub
sar
mov
shl
add
mov
cmp
jne
inc
jmp
push
push
call
pop
pop
mov
mov
test
je
mov
add
mov
add
cmp
jae
mov
or
and
add
mov
jmp
mov
shl
mov
mov
sar
mov
and
shl
mov
mov
push
call
pop
test
jne
or
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
mov
mov
cmp
jne
xor
leave
ret
mov
cmp
jae
movzx
mov
movzx
jmp
lea
push
push
lea
push
push
call
neg
sbb
and
movzx
movzx
and
leave
ret
push
mov
mov
test
jle
push
push
call
pop
pop
push
push
push
push
push
push
call
add
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
push
mov
xor
mov
cmp
jbe
mov
cmp
je
inc
add
cmp
jb
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
sub
push
call
test
je
push
push
call
push
call
mov
test
jne
or
jmp
mov
call
test
mov
je
and
and
mov
mov
mov
mov
mov
lea
push
push
mov
push
push
push
call
jmp
or
push
push
push
push
push
push
push
call
pop
leave
ret
push
mov
sub
push
xor
test
push
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
pop
test
jne
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
mov
sub
je
dec
je
dec
je
call
mov
mov
or
call
push
pop
mov
call
mov
jmp
mov
jmp
test
je
test
je
mov
mov
jmp
mov
jmp
mov
mov
mov
push
push
pop
push
pop
mov
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
and
mov
cmp
jg
je
test
je
cmp
je
cmp
je
cmp
jne
mov
jmp
push
jmp
push
pop
jmp
cmp
je
cmp
je
cmp
je
call
mov
mov
or
call
push
pop
mov
call
jmp
push
jmp
xor
inc
mov
mov
mov
mov
test
je
mov
not
and
test
mov
js
xor
inc
mov
test
je
or
or
mov
mov
mov
test
je
or
mov
test
je
or
mov
test
je
or
jmp
test
je
or
mov
call
mov
mov
cmp
jne
call
mov
or
call
mov
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
lea
push
push
push
push
call
add
mov
cmp
jne
mov
mov
mov
and
cmp
jne
test
je
push
lea
push
and
push
push
push
mov
push
push
call
add
mov
cmp
jne
mov
mov
sar
and
mov
shl
and
call
push
call
pop
call
mov
jmp
push
call
test
jne
mov
mov
sar
and
mov
shl
and
call
mov
push
call
pop
push
call
test
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
pop
pop
mov
mov
sar
and
mov
shl
or
mov
mov
mov
sar
and
mov
shl
mov
and
mov
mov
and
mov
jne
test
jns
test
je
push
push
push
push
call
mov
and
add
mov
mov
cmp
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
call
and
add
cmp
je
mov
mov
test
jns
test
jne
mov
and
jne
or
jmp
or
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
and
cmp
jne
mov
jmp
mov
test
je
mov
test
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
test
je
push
pop
cmp
jbe
cmp
jbe
cmp
je
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
mov
push
pop
cmp
je
cmp
jne
cmp
jne
mov
jmp
and
cmp
jne
push
call
pop
call
push
pop
mov
jmp
cmp
jne
push
push
push
push
call
and
add
cmp
je
mov
jmp
test
je
push
pop
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
jne
jmp
push
pop
movsx
mov
dec
je
dec
jne
mov
jmp
push
pop
mov
mov
mov
sub
push
lea
add
push
push
call
add
cmp
je
mov
add
cmp
jg
mov
mov
sar
and
mov
shl
mov
xor
and
xor
mov
mov
mov
sar
and
mov
shl
shr
mov
shl
and
or
mov
mov
cmp
jne
test
je
mov
mov
sar
and
mov
shl
or
mov
mov
mov
mov
and
cmp
jne
test
je
push
call
push
lea
push
and
push
push
push
push
push
call
add
cmp
jne
call
push
call
mov
mov
sar
and
mov
shl
and
push
call
pop
jmp
mov
mov
sar
and
mov
shl
mov
mov
jmp
push
push
push
push
push
call
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
test
je
sub
test
je
movzx
cmp
jne
test
cmove
inc
sub
jbe
test
jne
lea
and
cmp
ja
mov
cmp
jne
sub
jbe
lea
add
not
and
test
je
xor
pop
pop
ret
lea
sbb
or
pop
pop
ret
push
mov
cmp
push
jne
cmp
jne
call
mov
call
mov
jmp
cmp
je
mov
cmp
jbe
call
mov
call
mov
jmp
pop
pop
jmp
push
push
push
push
call
add
pop
pop
ret
push
mov
sub
cmp
je
push
push
push
push
lea
call
mov
mov
test
je
mov
test
je
mov
cmp
jbe
call
mov
call
jmp
mov
cmp
jne
push
push
push
call
add
mov
jmp
sub
movzx
lea
push
push
call
mov
movzx
lea
push
push
call
add
inc
dec
je
test
je
cmp
je
sub
cmp
je
mov
and
pop
mov
pop
pop
leave
ret
xor
leave
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
push
push
push
mov
xor
push
push
push
push
mov
mov
call
mov
mov
and
add
mov
cmp
je
push
push
push
push
call
mov
and
add
cmp
je
mov
mov
sub
sbb
mov
js
jg
test
je
push
push
call
push
call
mov
test
jne
call
mov
call
mov
pop
pop
pop
leave
ret
push
push
call
pop
mov
mov
pop
test
jl
jg
cmp
jb
mov
jmp
mov
push
push
push
call
add
cmp
je
cdq
sub
mov
sbb
mov
js
jg
test
je
jmp
call
cmp
jne
call
mov
or
or
push
push
call
pop
pop
push
push
call
push
call
jmp
test
jg
jl
test
jae
push
push
push
push
call
and
add
cmp
je
push
call
pop
push
call
neg
sbb
neg
dec
cdq
mov
mov
mov
and
mov
cmp
jne
call
mov
call
mov
call
mov
and
cmp
je
push
push
push
push
call
and
add
cmp
je
xor
jmp
int3
int3
push
mov
sub
mov
push
push
mov
push
push
pop
xor
mov
mov
mov
cmp
jne
call
mov
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
mov
mov
test
je
cmp
jbe
call
mov
call
mov
jmp
test
je
test
jne
cmp
jne
call
and
jmp
mov
add
sar
mov
movsx
dec
je
dec
jne
mov
not
test
je
and
mov
mov
jmp
mov
not
test
je
shr
cmp
jae
push
pop
push
call
pop
mov
test
jne
call
mov
call
mov
jmp
push
push
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
cmp
je
test
je
mov
xor
lea
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
test
je
mov
mov
inc
push
dec
cmp
mov
pop
mov
jne
mov
mov
cmp
je
test
je
push
pop
mov
mov
push
inc
pop
mov
dec
mov
push
call
test
mov
pop
je
mov
test
je
lea
push
push
call
mov
test
je
cmp
jne
push
lea
push
mov
shr
mov
push
push
push
call
test
jne
call
push
call
pop
or
mov
jmp
mov
lea
mov
jmp
mov
mov
push
lea
push
push
push
push
call
test
je
mov
test
js
cmp
ja
mov
add
mov
mov
test
jns
cmp
je
test
je
mov
cmp
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
mov
dec
cmp
jae
lea
cmp
jne
push
pop
add
mov
jmp
mov
inc
mov
jmp
push
lea
push
push
lea
push
mov
inc
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
inc
jmp
mov
mov
mov
inc
mov
jmp
cmp
jne
push
pop
cmp
jne
mov
inc
push
pop
cmp
jb
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
inc
jmp
mov
push
pop
mov
inc
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
inc
mov
mov
sub
cmp
jne
test
je
dec
mov
test
js
inc
jmp
movzx
xor
inc
cmp
jne
mov
cmp
jg
cmp
jb
dec
inc
movzx
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
mov
test
je
mov
inc
mov
mov
cmp
jl
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
mov
cdq
push
push
push
push
call
add
mov
mov
shr
push
push
sub
push
push
push
push
call
mov
test
je
mov
xor
mov
cmp
setne
add
mov
mov
mov
cmp
je
push
call
pop
cmp
je
mov
mov
jmp
cmp
je
mov
mov
cdq
sub
sar
mov
mov
lea
cmp
jae
push
mov
pop
movzx
cmp
je
cmp
je
mov
add
add
jmp
lea
cmp
jae
push
add
pop
cmp
je
push
pop
push
pop
mov
add
cmp
jb
jmp
mov
mov
or
mov
mov
sub
and
jmp
test
je
mov
push
pop
cmp
mov
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
movzx
cmp
je
cmp
je
mov
jmp
mov
add
cmp
jae
push
pop
cmp
mov
jne
push
pop
add
mov
jmp
mov
add
add
jmp
push
lea
push
push
lea
push
mov
add
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
add
jmp
pop
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
mov
push
pop
cmp
jb
jmp
cmp
jne
push
pop
cmp
jne
mov
add
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
add
jmp
mov
push
pop
mov
add
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
add
mov
mov
sub
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
xor
jmp
xor
jmp
call
mov
call
mov
call
or
pop
pop
pop
leave
ret
push
mov
mov
test
jne
call
mov
call
push
pop
pop
ret
mov
mov
xor
pop
ret
push
mov
push
push
mov
mov
sar
and
shl
push
mov
mov
movzx
and
mov
mov
add
movsx
mov
sar
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
mov
mov
and
or
mov
jmp
or
mov
mov
mov
and
or
jmp
and
mov
jmp
or
mov
mov
and
cmp
pop
pop
pop
jne
mov
pop
ret
neg
sbb
and
lea
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
push
mov
sub
lea
push
push
push
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
cmp
mov
movzx
je
mov
and
mov
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
jne
cmp
je
mov
and
jmp
cmp
jne
cmp
movzx
je
mov
and
jmp
movzx
movzx
shl
or
cmp
je
mov
and
mov
pop
pop
leave
ret
push
mov
sub
lea
push
push
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
call
mov
call
call
mov
mov
jmp
xor
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
call
mov
call
call
mov
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sar
shl
add
js
sub
or
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sar
jge
test
shr
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xchg
sar
je
xchg
not
jmp
call
not
jae
add
sar
or
jmp
mov
push
pop
mov
mov
mov
mov
push
mov
push
pop
push
jmp
shr
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
xchg
icebp
inc
or
cs
xor
aas
cmp
add
aam
add
mov
nop
inc
dec
jb
mov
test
add
and
add
add
and
sub
mov
dec
jecxz
sub
xor
jmp
push
movs
add
add
mov
mov
add
add
dec
inc
ror
mov
add
shl
(bad)
jge
adc
iret
pop
jmp
sbb
add
(bad)
hlt
xchg
pusha
mov
pop
(bad)
jmp
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
and
shr
dec
jle
add
shl
mov
jmp
mov
mov
push
mov
push
mov
push
mov
pop
mov
push
pop
mov
jmp
mov
shl
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
jg
xchg
test
inc
mov
jmp
call
add
sub
jns
test
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
xor
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
fld
add
mov
mov
and
sti
out
jmp
sub
dec
and
jg
jmp
fwait
inc
and
sub
mov
(bad)
lods
sbb
cmp
add
mov
mov
popa
(bad)
jge
movs
fucomi
add
push
add
jge
jb
mov
mov
(bad)
dec
sub
add
mov
popf
fmulp
ins
cmps
mov
sub
out
fld
add
ja
add
sub
or
inc
and
and
add
add
cmp
cmp
(bad)
mov
retf
sbb
mov
add
cmp
(bad)
cmp
push
je
cmp
add
mov
xlat
sub
pop
imul
mov
data16
push
add
push
jmp
mov
sub
mov
add
sub
add
sub
pop
sub
pop
js
popf
faddp
xchg
cmp
mov
and
ins
into
add
fucomi
push
add
call
dec
mov
mov
cs
dec
daa
mov
push
add
jmp
ja
add
fdivr
call
mov
mov
jb
add
mov
mov
mov
sub
repz
inc
adc
inc
push
jmp
pop
inc
and
or
ret
add
add
gs
je
pop
ffreep
mov
daa
ja
mov
add
add
pushf
div
mov
jle
pop
jmp
ds
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
push
mov
push
mov
push
mov
pop
mov
push
ret
test
mov
jge
xchg
test
jmp
call
ror
add
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
inc
add
jl
cmp
not
cmp
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
or
jae
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
or
xchg
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
adc
dec
xor
or
and
rol
add
add
add
daa
aas
jle
pop
mov
add
add
xchg
push
add
jno
and
add
ror
and
mov
push
cmp
mov
imul
js
mov
mov
(bad)
(bad)
ror
add
and
inc
ds
mov
jg
jmp
fnstsw
cmp
dec
sbb
out
(bad)
sub
test
xchg
add
adc
pop
in
fistp
add
mov
mov
add
shr
and
xchg
inc
xor
outs
in
and
or
rcr
aad
xchg
and
xchg
jmp
add
sub
mov
jmp
add
jmp
jae
pop
xchg
or
xor
test
sbb
pop
pop
mov
mov
mov
sub
out
movs
push
je
jmp
jae
pop
xchg
sar
and
dec
sbb
push
(bad)
inc
add
pop
pusha
test
js
mov
cmp
(bad)
fmul
add
js
dec
mov
and
mov
sbb
add
and
inc
fadd
sub
pop
int3
loop
je
mov
push
mov
mov
and
sbb
dec
or
inc
emms
arpl
call
popa
(bad)
pop
add
cmps
dec
out
adc
test
aas
add
add
inc
and
or
lock
call
add
add
and
sub
mov
add
jmp
jae
and
sub
add
push
and
add
add
sub
out
and
pusha
test
add
jmp
mov
std
stos
pop
std
ss
inc
and
push
pop
mov
test
xchg
add
add
xor
mov
or
add
cmp
mov
(bad)
rol
xor
aaa
mov
and
xchg
jge
add
add
mov
inc
pop
jecxz
push
popa
(bad)
pop
scas
bound
int
js
cli
and
add
test
and
jle
pop
inc
and
movs
(bad)
in
clc
mov
push
test
scas
add
bound
pop
add
mov
sub
mov
test
add
add
loopne
(bad)
pushf
mov
loop
push
test
mov
pop
div
add
dec
sub
mov
mov
sbb
jle
xchg
lods
js
pusha
call
test
test
add
jmp
mov
mov
mov
mov
pop
add
pop
xchg
repnz
inc
and
imul
add
adc
pusha
outs
outs
sbb
popa
xchg
add
dec
push
cmp
push
pop
(bad)
inc
add
outs
in
and
and
call
mov
mov
mov
not
add
mov
mov
xchg
add
mov
mov
std
aam
add
add
cmp
(bad)
push
mov
mov
(bad)
outs
add
cmp
cmp
mov
mov
pop
ret
inc
fwait
mov
jmp
mov
retf
mov
add
mov
mov
rcl
cmp
loop
add
xor
outs
mov
(bad)
jae
pop
test
add
mov
mov
add
mov
dec
inc
and
cmp
fisub
pusha
cmc
xchg
add
mov
add
pop
cli
add
add
sub
dec
fsub
add
jl
pop
addr16
mov
mov
fcom
add
cmp
inc
and
xchg
sub
add
lea
pop
cdq
pop
add
jl
mov
add
add
and
(bad)
jno
or
or
add
inc
and
xchg
pop
sahf
in
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
rol
xor
jl
cmp
cmp
dec
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
inc
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
and
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
inc
jge
test
mov
cmp
jmp
push
mov
push
mov
mov
pop
mov
ret
mov
ror
test
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ja
adc
add
add
dec
and
ds
repz
and
add
push
call
mov
mov
inc
xor
add
sub
sub
add
mov
and
add
add
inc
add
sbb
repz
js
jo
(bad)
dec
ret
in
xchg
add
mov
push
and
outs
jmp
in
mov
gs
dec
mov
mov
popa
retf
lods
(bad)
dec
add
add
pop
add
sub
mov
out
or
sub
and
sub
mov
out
fwait
out
std
xchg
mov
mov
out
mov
mov
data16
add
jmp
sbb
mov
and
sub
mov
xor
add
pop
jl
mov
pminub
add
add
add
leave
mov
xchg
mov
stos
cmove
call
out
je
adc
test
or
fiadd
pop
add
mov
loop
lods
sahf
sub
inc
adc
add
jmp
mov
sub
mov
and
push
test
add
add
push
inc
and
sub
mov
sbb
sbb
and
adc
out
in
xchg
mov
cmp
xchg
jmp
mov
out
or
fdivr
inc
cdq
(bad)
pcmpgtd
add
push
movs
inc
add
ins
loop
cmovb
add
add
or
add
mov
je
lahf
mov
cmp
(bad)
loope
add
jmp
mov
adc
std
mov
xor
dec
imul
xchg
jmp
sub
and
push
xor
xor
inc
add
add
pop
and
ins
sbb
pop
mov
sub
ja
jmp
pop
mov
out
jae
loope
or
inc
sbb
add
movs
mov
out
div
dec
xor
call
push
mov
sub
jmp
je
add
mov
cld
or
je
cld
cld
shr
dec
cmc
bnd
add
out
retf
adc
cdq
xlat
(bad)
or
inc
cld
push
sbb
je
jmp
mov
adc
xor
pop
jmp
mov
and
sub
mov
fisttp
test
cld
add
inc
cmp
nop
dec
adc
aas
push
std
mov
repnz
pop
cmp
pusha
(bad)
ret
xor
jmp
stos
rol
add
pushf
inc
cmp
add
and
and
(bad)
sbb
and
push
pop
add
test
add
lock
(bad)
jl
fsubrp
or
(bad)
std
add
cmp
mov
mov
gs
stc
aas
add
jae
pop
in
sbb
add
int3
rol
cmps
add
add
int
adc
mov
and
mov
xchg
add
ret
inc
ror
push
mov
add
aad
and
lock
mov
and
sar
sbb
pop
mov
lea
mov
add
mov
aaa
dec
jp
pusha
lock
iret
add
add
mov
add
ja
and
add
add
cmp
push
int3
add
inc
mov
std
inc
inc
and
cmps
loop
shr
and
out
mov
ret
add
pusha
jnp
mov
add
jmp
add
ror
mov
add
movs
mov
add
add
popa
inc
sub
sub
sub
dec
test
add
pusha
aaa
inc
and
movs
lods
int3
jecxz
imul
and
add
add
and
cmp
mov
(bad)
and
and
outs
dec
add
add
xchg
cld
shl
inc
and
add
add
leave
jae
mov
add
mov
test
inc
add
cmp
mov
xchg
das
cmps
pop
pop
out
ret
mov
jmp
(bad)
mov
fs
cmc
sti
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
add
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
add
pop
pop
ret
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
ror
add
sub
jne
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
mov
rol
jmp
call
dec
ror
or
ror
jne
ror
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
mov
jmp
mov
push
mov
mov
mov
push
pop
mov
mov
jmp
inc
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
dec
inc
mov
mov
sar
(bad)
add
add
jmp
inc
int3
inc
add
stos
fs
jp
mov
enter
mov
test
inc
in
inc
or
movs
rcl
xor
adc
add
inc
mov
add
sar
inc
mov
call
or
jbe
jmp
test
inc
and
mov
xchg
and
mov
out
test
mov
add
add
inc
in
cmp
mov
sub
fadd
cmp
add
enter
sub
sbb
xor
adc
add
stos
push
(bad)
fisub
ror
mov
or
and
sub
mov
setg
add
or
icebp
inc
ins
movd
inc
fild
test
add
jmp
mov
cld
sub
dec
jle
dec
inc
xor
movzx
add
sar
inc
and
jp
pusha
nop
xchg
(bad)
jge
add
jmp
mov
and
lds
cmp
dec
push
sbb
jg
jmp
ret
sbb
neg
cmp
movhps
add
add
dec
retf
xchg
cmovs
sete
jp
dec
add
xor
sub
test
add
add
add
add
mov
inc
sbb
(bad)
dec
mov
or
dec
dec
add
inc
and
sub
mov
fistp
add
sbb
call
pop
in
jnp
jecxz
push
dec
neg
(bad)
fwait
add
push
jmp
in
add
add
cld
inc
dec
mov
arpl
cmp
jne
pop
jmp
(bad)
xchg
and
mov
(bad)
mov
test
inc
es
cwde
add
add
add
pop
add
sub
mov
and
data16
mov
adc
inc
push
jmp
je
and
mov
xor
push
add
dec
les
adc
jl
lea
sub
add
inc
or
inc
add
xchg
mov
mov
cmp
cmpxchg
push
inc
and
cmp
inc
pop
imul
inc
inc
and
jmp
mov
in
cdq
loope
add
mov
add
add
iret
xchg
jle
add
add
add
inc
add
rol
in
stos
ret
mov
mov
sbb
cmp
pop
iret
inc
neg
mov
dec
push
enter
sub
inc
inc
and
mov
lds
movs
add
mov
mov
mov
sub
repz
mov
in
push
add
push
and
add
out
push
and
dec
outs
xor
rol
push
(bad)
xchg
add
dec
add
xchg
sub
outs
dec
sub
mov
mov
jmp
movs
mov
adc
inc
add
add
mov
pop
and
mov
inc
add
inc
or
add
add
add
add
adc
and
push
(bad)
call
pop
pop
imul
cs
inc
and
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
xor
rol
jno
shl
jmp
mov
mov
mov
mov
push
mov
pop
mov
mov
push
pop
mov
ret
xor
xchg
jmp
call
inc
mov
and
jne
cmp
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
or
shl
jns
test
inc
xchg
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
test
ror
jae
dec
or
mov
or
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
or
and
xchg
add
mov
and
leave
mov
add
mov
and
sub
icebp
mov
sub
add
test
loop
mov
sbb
mov
add
add
test
ret
add
add
leave
add
test
fdivr
cmps
add
add
test
lock
mov
es
add
add
sbb
add
sbb
xchg
add
add
popa
js
ret
add
addr16
inc
inc
mov
mov
xor
in
loopne
jg
test
shl
sub
mov
add
jg
jmp
mov
and
pop
ret
mov
cwde
or
shl
add
imul
mov
mov
and
lock
and
jmp
dec
cmps
in
mov
push
mov
test
add
add
(bad)
and
mov
add
push
add
sub
mov
je
jmp
mov
arpl
add
inc
cmp
stc
imul
and
add
add
das
xchg
test
and
add
add
fcom
and
and
test
pop
add
sub
mov
lods
(bad)
mov
jecxz
add
add
mov
mov
psubusb
adc
and
mov
add
cmc
test
cmps
add
dec
adc
clc
push
mov
sub
add
add
in
add
add
add
add
mov
sub
sbb
mov
add
je
jmp
test
pop
mov
js
inc
mov
out
movs
add
add
pop
add
and
clc
add
adc
aad
xchg
mov
fld
test
add
add
add
push
adc
je
cs
jno
add
add
add
cmp
jns
aam
push
movs
and
in
ret
fld
add
jmp
lea
inc
mov
rcr
and
add
add
ins
push
mov
sbb
add
add
not
jb
mov
push
inc
ror
add
jmp
mov
mov
sbb
adc
jo
mov
add
stc
add
jecxz
cmps
(bad)
sub
xchg
not
xchg
jg
ins
fsub
add
add
test
outs
push
add
or
arpl
add
aad
test
sbb
add
jmp
mov
sub
dec
cmps
and
add
xor
adc
cmps
arpl
or
add
mov
mov
pop
cs
add
push
and
and
jmp
test
and
add
jle
pop
sbb
mov
lock
add
add
add
push
push
test
add
add
ret
add
and
pop
mov
cmps
sub
mov
pxor
out
add
cmp
add
add
pop
in
test
or
and
cmp
and
add
dec
add
arpl
mov
sub
mov
daa
loop
sub
add
shl
add
mov
call
outs
mov
mov
add
(bad)
pop
push
add
jmp
mov
sub
mov
cmp
add
test
add
jg
or
pop
mov
jno
jle
sub
test
add
or
add
stc
loopne
and
mov
add
mov
je
sub
into
xor
cmc
add
daa
fisubr
mov
fld
mov
(bad)
add
cmp
add
add
and
xchg
sub
mov
je
xchg
mov
arpl
add
mov
(bad)
movs
test
jg
jmp
stos
test
sub
aad
out
enter
test
add
dec
ja
add
call
add
sub
mov
in
mov
jmp
mov
sub
mov
je
jmp
test
and
add
sub
js
sub
(bad)
and
sub
add
mov
and
add
iret
sub
add
mov
push
add
sub
or
xor
jne
test
add
add
(bad)
and
sub
das
xchg
mov
enter
test
push
mov
outs
add
jmp
sub
imul
mov
and
add
add
pop
sub
add
add
add
sub
movs
test
or
mov
pop
mov
jecxz
mov
add
add
mov
add
(bad)
and
ret
leave
xor
jle
add
iret
xor
sub
and
or
add
add
xchg
sub
mov
bsf
push
cmps
mov
add
sub
add
or
and
add
jecxz
test
add
jmp
mov
and
xchg
add
sub
pop
popa
and
ret
cmovbe
xor
add
add
add
mov
and
adc
push
fisttp
or
ins
add
les
add
add
das
mov
mov
lods
ret
(bad)
mov
dec
add
add
mov
or
(bad)
in
add
das
popf
test
add
loopne
add
inc
and
add
add
mov
add
icebp
dec
add
and
sub
sbb
xor
movs
mov
add
add
cmp
add
jmp
cmc
test
mov
or
and
imul
in
(bad)
push
add
add
mov
(bad)
mov
fstp
inc
repz
out
and
leave
je
out
pop
add
and
sub
icebp
sub
sub
mul
rol
mov
add
add
mov
add
ins
fsub
test
call
jecxz
sub
sbb
stc
inc
mov
cdq
and
cmp
das
popf
push
add
add
and
add
push
daa
or
cs
int3
add
mov
jecxz
bound
test
add
sub
sbb
enter
jg
jmp
mov
sub
js
and
or
add
add
adc
add
push
add
adc
mov
and
add
fld
sbb
add
add
and
mov
add
xchg
adc
icebp
sub
add
addr16
das
sbb
cmp
xchg
fld
ins
test
pop
add
int
add
leave
xor
add
push
sub
and
sub
icebp
sub
mov
in
test
and
add
push
cmp
mov
sub
sbb
mov
add
cdq
push
add
ret
add
add
sub
mov
and
add
add
test
jmp
mov
pop
add
sbb
and
add
(bad)
mov
pop
ret
xor
lea
and
sub
add
jo
and
jecxz
add
seto
fsub
add
ret
pop
inc
pop
adc
and
arpl
jg
dec
or
addr16
sub
add
mov
das
test
xchg
add
mov
add
ret
in
mov
add
js
sub
stc
add
jg
jmp
mov
add
mov
je
and
add
jle
test
pop
add
sub
test
add
or
add
sub
test
cmp
js
add
ret
xchg
or
xor
mov
and
bound
add
mov
pop
fild
mov
add
imul
and
add
das
sbb
sub
dec
test
leave
add
movzx
add
jmp
call
add
cmp
add
and
rol
das
xchg
fld
add
sub
mov
add
add
out
cmc
add
mov
sub
jo
(bad)
js
add
sbb
add
and
add
sub
mov
jno
icebp
add
repz
sbb
stc
add
jmp
and
jmp
push
test
add
fdivrp
mov
pop
jno
rep
add
pop
add
add
test
sbb
add
push
xor
mov
aam
and
add
add
pop
ret
sub
fs
jno
arpl
les
add
clc
imul
stos
cmc
sbb
inc
scas
pusha
jg
jmp
sbb
mov
jg
xor
pop
(bad)
mov
push
add
jmp
cmps
test
sbb
add
gs
dec
pop
in
(bad)
or
cmp
add
sbb
mov
dec
push
sbb
inc
and
je
fidivr
pop
add
mov
fcomp
mov
and
sub
add
xchg
test
add
gs
test
and
add
(bad)
xor
mov
and
sub
add
and
or
out
dec
jg
jmp
mov
add
lahf
enter
rol
inc
push
test
and
jmp
mov
sub
js
sub
pcmpeqd
add
imul
add
sub
add
cmp
punpcklwd
ret
xchg
jle
push
sub
or
jg
jns
jo
(bad)
adc
add
jmp
movs
test
or
mov
xcrypt-ofb
cmps
jmp
add
push
cmps
call
add
mov
mov
ror
test
add
add
mov
or
dec
addr16
movzx
jle
out
xchg
arpl
add
mov
lea
inc
mov
add
xchg
mov
mov
inc
loopne
jg
inc
js
sub
pop
add
add
add
add
xor
sbb
loop
push
rol
sub
retf
mov
scas
cli
xchg
add
and
and
ret
and
jmp
mov
mov
les
inc
mov
and
loop
add
add
mov
aaa
cwde
fwait
pop
stc
ins
pop
xchg
add
jo
fsub
and
add
(bad)
and
bound
mov
cmp
daa
mov
test
jge
cmps
push
and
and
ret
test
cld
add
pop
call
mov
push
jp
mov
sub
mov
mov
repnz
xchg
in
lea
std
repz
cmps
arpl
add
add
cmp
add
add
add
add
add
fsub
ret
stos
push
and
jl
push
test
add
add
and
inc
mov
add
and
inc
and
enter
ins
push
add
xor
not
fisubr
cwde
jg
aaa
sub
imul
cmp
sbb
add
xlat
sbb
ret
popa
push
add
(bad)
mov
cli
add
cmps
pushf
call
push
(bad)
daa
and
or
stc
xchg
adc
cdq
les
lea
add
mov
jmp
mov
xlat
dec
pop
and
xor
mov
and
pop
add
mov
dec
clc
add
loop
or
add
das
add
push
and
add
fcmovne
pusha
fimul
mov
add
and
cli
stos
test
mov
leave
jnp
push
mov
(bad)
jne
outs
add
add
dec
pop
add
add
mov
jmp
pop
and
mov
mov
mov
cmps
add
pop
pop
jb
mov
loope
add
js
or
jecxz
mov
lods
in
adc
and
add
and
add
add
pusha
jnp
cmps
fucomi
push
adc
clc
imul
lea
add
jmp
cmp
push
sbb
pushf
add
ret
test
fild
add
mov
pop
add
movs
and
mov
and
mov
add
sbb
jae
les
cmp
inc
sbb
add
and
adc
add
add
inc
xchg
mov
mov
lds
add
add
add
add
inc
or
sbb
add
call
sub
mov
rol
add
add
in
add
test
in
pop
mov
retf
add
leave
mov
add
mov
and
loop
add
xor
xchg
mov
mov
mov
fcomp
and
add
cmps
mov
mov
dec
xchg
outs
jecxz
xor
mov
call
(bad)
call
mov
fsub
add
mov
add
(bad)
xlat
test
bnd
(bad)
lods
retf
div
pop
push
jmp
je
(bad)
imul
sub
cdq
sbb
add
add
and
in
inc
pop
call
mov
add
add
aam
add
add
add
mov
lds
add
fs
sahf
adc
jbe
push
movs
mov
in
ret
and
add
leave
or
and
cmps
arpl
and
and
stos
loopne
add
xor
push
add
(bad)
mov
sbb
rol
and
or
je
inc
or
arpl
(bad)
outs
add
add
mov
mov
mov
pop
cs
cmp
in
adc
mov
mov
jo
add
pusha
out
cld
add
add
pop
mov
hlt
pop
cmp
das
sub
les
mov
sub
xor
mov
add
mov
add
stc
imul
xchg
je
xchg
sbb
mov
pop
ret
inc
inc
pop
and
lea
mov
inc
rol
sub
add
pushf
and
add
sub
push
xor
add
xchg
in
sbb
sbb
sbb
outs
mov
adc
add
icebp
(bad)
int
add
imul
mov
add
add
sub
add
mov
rol
pop
add
add
jbe
mov
jmp
mov
test
and
push
add
mov
sub
jo
jmp
add
and
fisttp
add
add
add
mov
mov
adc
jmp
mov
mov
stc
jmp
shr
and
cs
add
add
add
in
jmp
push
mov
ret
push
pop
adc
jp
sub
add
jmp
xchg
jns
sub
jo
add
push
mov
sbb
add
mov
push
movs
and
in
add
inc
test
jg
add
test
clc
adc
sbb
in
jecxz
mov
(bad)
aad
fild
mov
sub
int3
daa
add
add
mov
or
test
xlat
add
sub
jmp
mov
mov
retf
add
mov
mov
mov
mov
mov
add
mov
jmp
stos
test
scas
lods
(bad)
and
pop
ret
sub
and
add
in
mov
xchg
add
add
dec
mov
add
mov
fisttp
add
cmps
in
rol
jle
mov
sbb
jge
call
xchg
sbb
add
das
xchg
sbb
mov
in
pop
mov
mov
cwde
or
test
outs
or
add
mov
(bad)
xchg
add
mov
repz
rcl
and
fiadd
add
and
mov
leave
mov
add
gs
add
add
add
iret
cmp
add
add
mov
mov
xor
in
push
add
add
mov
dec
add
mul
sub
and
lock
mov
movs
mov
cmp
das
mov
and
or
mov
dec
addr16
and
jle
rol
call
jge
mov
mov
mov
xor
and
xchg
add
add
add
(bad)
fsub
mov
add
add
jle
and
add
gs
mov
aas
push
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
add
shl
add
shl
mov
call
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
call
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
shl
mov
call
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
lea
mov
mov
sub
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
seta
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
cmp
seta
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
lea
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
add
shl
add
shl
mov
call
mov
mov
jmp
call
mov
mov
jmp
mov
shl
mov
call
mov
mov
jmp
lea
mov
mov
sub
mov
mov
mov
mov
jmp
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
jmp
lea
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
call
mov
jmp
mov
jmp
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
ror
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
ror
or
inc
jne
ror
jmp
call
sar
ror
jno
and
sub
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
sar
and
jge
ror
cmp
jmp
mov
mov
push
mov
mov
mov
push
mov
mov
mov
jmp
sub
shl
and
test
jns
add
dec
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
psraw
adc
ret
ror
mov
or
imul
add
nop
push
add
push
and
and
mov
and
inc
inc
pop
cmp
pop
test
ret
mov
sti
jmp
mov
and
mov
and
jg
jmp
rol
push
cmp
cmp
aaa
xchg
add
sub
sbb
ja
xchg
mov
and
movs
(bad)
popf
add
sbb
pop
adc
stos
and
or
aam
cmp
stos
mov
jnp
mov
pop
clc
mov
add
dec
jmp
mov
sub
mov
and
inc
(bad)
or
add
add
mov
mov
rcl
sbb
push
add
pop
and
sub
xor
cmps
test
xchg
add
push
inc
and
sub
mov
sub
nop
mov
and
jnp
lahf
xchg
sub
bswap
mov
sbb
jmp
cmps
or
loopne
and
cmc
mov
and
jg
jmp
mov
and
sub
repz
jbe
test
sub
jmp
mov
ja
xchg
and
jg
jmp
mov
pop
jo
cmp
scas
repz
dec
add
add
mov
and
xchg
ds
sbb
cmp
fld
add
jmp
mov
mov
rol
je
jmp
mov
popf
jo
add
and
je
jmp
mov
jmp
adc
push
sub
add
push
jmp
jnp
mov
pop
clc
nop
inc
adc
add
add
stos
out
mov
jne
push
dec
sbb
fisttp
add
mov
pop
jo
out
and
rol
or
add
xor
stos
dec
xor
mov
nop
inc
adc
add
jmp
sbb
jle
test
xor
and
mov
adc
add
ins
jp
sbb
fucomip
jnp
add
mov
mov
and
stos
dec
mov
add
and
xchg
dec
add
add
pop
adc
(bad)
mov
sub
lahf
fst
pushf
cmps
inc
pushf
and
push
and
lock
mov
mov
mov
push
add
push
inc
imul
mov
mov
and
dec
sbb
mov
jmp
mov
and
fisub
dec
sub
inc
xor
int3
add
mov
jmp
mov
mov
and
jmp
stos
add
mov
sub
mov
xchg
ins
cdq
add
add
jl
js
int
mov
rcr
or
cmp
call
dec
lahf
repz
cmp
mov
and
jmp
(bad)
aam
and
cmp
inc
pop
add
sar
lea
and
pop
pop
(bad)
add
inc
mov
fwait
mov
mov
xor
mov
add
add
add
mov
ud0
mov
repz
and
loope
mov
dec
test
mov
add
fld
xchg
pop
cld
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
rol
dec
not
jmp
mov
mov
mov
mov
mov
mov
push
mov
mov
push
pop
push
pop
push
jmp
mov
xchg
or
ja
cmp
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
rol
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
mov
shl
jo
xchg
not
shr
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
hlt
data16
add
lea
lea
cmps
add
retf
daa
movs
cmp
add
mov
fadd
fs
cdq
push
or
movs
(bad)
addr16
or
adc
add
test
scas
add
add
add
xor
add
dec
add
inc
and
adc
add
ins
and
add
add
and
push
add
mov
and
add
cli
std
push
(bad)
push
sub
shl
mov
and
stos
add
or
movs
add
in
push
(bad)
jmp
cmp
add
adc
mov
cmp
add
pop
add
add
mov
add
(bad)
fild
cdq
add
add
mov
(bad)
addr16
push
mov
sub
add
add
inc
add
call
loope
mov
dec
add
add
mov
mov
dec
sub
mov
jg
dec
add
or
sub
adc
add
sub
mov
(bad)
leave
dec
add
movs
bound
add
mov
jnp
movs
(bad)
mov
add
adc
push
lods
mov
and
dec
add
stos
mov
sub
in
test
enter
mov
sub
mov
das
ret
inc
stos
cdq
push
loopne
call
and
add
mov
dec
mov
clc
add
lods
je
movs
jmp
inc
or
add
stos
ins
iret
lahf
sub
out
add
jg
jmp
stos
enter
add
dec
adc
adc
or
(bad)
push
adc
or
rol
add
add
shl
pop
(bad)
call
jecxz
mov
sub
xor
and
pop
and
inc
loop
mov
add
test
adc
mov
pop
mov
pushf
pop
add
scas
and
jmp
and
add
jnp
and
test
add
adc
adc
pusha
mov
push
sub
test
movs
fmul
mov
and
add
mov
and
add
add
mov
movs
sbb
mov
mov
(bad)
sbb
aaa
mov
aam
add
sbb
popf
jmp
shl
popa
dec
cmp
mov
add
adc
mov
adc
mov
jge
mov
imul
push
or
call
mov
jp
sbb
test
add
mov
add
leave
and
add
and
add
stos
sub
mov
in
(bad)
das
mov
add
add
mov
(bad)
cmps
mov
nop
mov
(bad)
add
push
or
push
jge
push
test
setge
add
add
add
mov
add
popa
and
add
or
add
adc
add
mov
test
pop
add
sub
mov
and
add
stos
jg
mov
mov
loope
add
fwait
test
test
adc
lods
jmp
stos
enter
stos
add
mov
in
add
add
pop
and
sub
fild
in
(bad)
in
mov
add
(bad)
xchg
and
mov
inc
nop
push
(bad)
movs
cwde
add
psubusw
add
call
adc
mov
pop
jno
test
adc
or
dec
(bad)
stos
add
cdq
mov
sub
into
sub
push
into
or
jg
jmp
shl
xchg
push
mov
add
or
addr16
add
add
mov
push
mov
data16
test
stos
add
add
add
call
test
cmps
cdq
aaa
mov
ss
add
xchg
add
mov
or
add
add
sub
mov
and
jmp
sub
adc
pop
add
or
adc
stos
(bad)
push
or
add
jecxz
or
mov
sub
mov
add
xor
leave
dec
add
mov
sub
sub
adc
lods
jg
mov
add
dec
mov
and
add
sbb
and
add
add
(bad)
cmps
stos
add
dec
adc
add
popf
add
mov
movhps
add
jmp
mov
movs
sub
or
mov
or
add
pop
add
add
test
test
mov
mov
mov
adc
add
add
fsub
and
sahf
xchg
adc
jg
jmp
push
add
push
push
in
sbb
add
dec
imul
movs
push
add
sub
sbb
dec
add
(bad)
xor
call
test
test
inc
fwait
cmp
int3
mov
cmp
stos
jo
add
mov
add
or
mov
test
mov
mov
fwait
pop
and
add
and
sub
popa
and
or
stos
push
add
adc
and
pop
add
popa
push
jl
cmp
(bad)
int3
icebp
add
jecxz
(bad)
jno
mov
dec
adc
lods
mov
pop
mov
out
cmp
add
add
xchg
pushf
adc
mov
add
mov
movs
push
inc
or
call
add
add
mov
mov
ret
add
add
das
mov
sub
sub
sub
add
add
mov
push
sub
mov
push
(bad)
mov
add
add
xchg
and
dec
add
xchg
imul
adc
and
add
inc
jmp
mov
mov
sub
or
getsec
jg
add
push
popf
add
stos
enter
add
and
lea
jmp
xchg
add
add
add
lods
scas
mov
xor
test
add
xchg
(bad)
pop
push
add
add
addr16
add
in
les
popf
jg
jmp
add
cmp
dec
setge
mov
add
add
and
xchg
ror
add
add
(bad)
dec
cmps
add
jmp
mov
push
mov
aaa
ins
dec
data16
jmp
add
int
jl
mov
sbb
add
add
mov
add
add
mov
jg
imul
and
add
mov
lock
das
ret
rol
stos
cdq
mov
mov
adc
add
push
mov
and
pushf
pop
and
(bad)
aaa
add
inc
cdq
add
mov
loope
add
jge
and
leave
and
add
mov
add
push
fsub
and
add
mov
jg
jmp
add
xchg
movs
sub
test
and
add
je
add
add
dec
sub
push
mov
out
mov
or
imul
and
add
mov
(bad)
dec
data16
(bad)
(bad)
add
add
add
pop
add
adc
mov
das
ret
jne
add
jo
push
add
mov
sub
or
sbb
mov
pop
mov
sub
mov
pop
xchg
add
or
test
dec
adc
les
add
inc
(bad)
cmp
add
add
sub
add
add
mov
push
movs
mov
stos
add
adc
(bad)
jae
mov
movs
test
test
or
mov
dec
mov
(bad)
adc
cdq
push
and
lds
sub
and
mov
cmp
hlt
add
jl
and
add
mov
pop
fild
(bad)
ror
mov
push
add
dec
retf
adc
and
add
test
cdq
add
sbb
add
arpl
pusha
add
outs
bound
popf
pop
das
enter
add
push
add
add
lea
cmps
jecxz
sub
sub
ret
lods
mov
or
dec
jmp
mov
sub
mov
lods
test
mov
push
ret
mov
add
add
and
pop
lea
movs
jecxz
movs
or
mov
adc
push
in
test
dec
add
pop
or
add
out
add
add
aas
retf
pop
mov
das
test
inc
add
ret
popf
push
or
and
add
or
fistp
and
add
add
leave
cmp
xlat
pop
and
(bad)
loop
adc
add
sub
popa
test
lods
add
sbb
add
sub
add
daa
ds
add
sub
adc
je
jmp
mov
mov
test
stos
cdq
push
jge
jmp
mov
mov
add
stc
xor
(bad)
cmp
add
jmp
stos
test
add
mov
aaa
stc
push
mov
(bad)
test
or
je
jmp
xor
jl
add
dec
dec
pop
cmp
int3
add
or
lods
test
cs
mov
pop
add
add
fisttp
jecxz
test
js
mov
push
mov
inc
jns
mov
nop
add
add
inc
jecxz
sub
sub
mov
mov
imul
jmp
sub
or
sub
mov
mov
mov
add
push
add
and
stos
sub
add
daa
sbb
add
add
mov
dec
test
push
test
add
or
add
add
adc
and
popf
pop
das
test
add
jmpw
add
adc
sub
push
and
mov
jecxz
mov
add
mov
and
lahf
add
sub
out
test
cdq
add
je
jmp
sub
sub
mov
mov
add
adc
and
jmp
cmp
daa
fiadd
dec
adc
jmp
dec
add
add
xlat
call
je
sbb
jmp
xchg
aas
push
inc
mov
jo
movs
and
add
jmp
in
das
and
push
or
sub
mov
popa
add
or
add
add
test
adc
mov
fisttp
movs
outs
pop
dec
inc
jg
add
mov
into
xchg
bound
ret
and
je
inc
jno
add
add
pop
or
fisttp
pusha
(bad)
aaa
mov
add
mov
adc
add
mov
paddusb
add
stos
add
jmp
push
les
mov
jl
add
add
test
sub
mov
add
lods
add
sbb
and
popa
xchg
out
push
adc
psrld
movs
or
add
leave
ss
add
adc
add
bswap
arpl
add
mov
add
mov
movs
add
add
dec
mov
(bad)
lea
sub
mov
lock
repz
mov
add
inc
out
out
and
xchg
test
add
or
fadd
movs
jecxz
daa
and
add
cs
mov
add
movs
fld
sub
and
and
xchg
sar
popf
pop
stos
test
add
sub
lods
and
je
imul
test
scas
add
xchg
scas
daa
shr
inc
and
imul
sub
add
mov
(bad)
loop
add
push
add
dec
mov
and
add
push
jne
inc
int3
sub
and
xchg
add
mov
xchg
mov
dec
jbe
inc
add
je
movs
jge
cdq
add
add
sub
mov
and
add
pop
add
movs
mov
add
fsubrp
add
aaa
mov
mov
and
push
mov
adc
mov
sbb
add
dec
jmp
pop
shr
jne
ds
push
sbb
mov
push
add
mov
xchg
inc
add
add
mov
sub
daa
mov
sub
push
sub
add
mov
cmp
mov
adc
jmp
(bad)
mov
add
xor
mov
lods
add
xor
and
add
movs
mov
stos
cdq
(bad)
shr
or
test
add
call
adc
mov
setl
out
cwde
ficom
push
and
mov
adc
aam
add
mov
add
jecxz
popa
add
(bad)
test
add
dec
jmp
jge
jl
add
jb
pop
loopne
out
add
lea
pop
add
mov
inc
add
add
pop
add
add
cmp
add
inc
add
mov
and
add
add
mov
xor
add
inc
add
push
or
inc
loop
repnz
cdq
xor
cmp
mov
dec
out
scas
mov
fbstp
mov
sub
(bad)
sbb
and
adc
push
add
pop
add
inc
add
push
movs
mov
mov
sub
mov
add
inc
add
mov
jmp
mov
mov
lods
xor
add
add
mov
rol
sub
mov
movs
mov
and
jl
or
je
or
push
ss
dec
and
call
xor
add
or
xor
mov
movs
ds
(bad)
mov
mov
cmp
in
dec
retf
xchg
mov
and
dec
data16
daa
dec
jmp
(bad)
in
inc
in
push
add
or
push
xchg
clc
scas
(bad)
(bad)
mov
add
ins
jne
add
add
retf
and
add
add
addr16
add
into
test
and
ds
movs
cld
mov
inc
in
push
add
push
add
inc
add
and
jno
scas
(bad)
(bad)
out
inc
test
jp
lds
pavgb
mov
mov
and
and
add
mov
add
test
dec
adc
add
add
add
and
jne
scas
(bad)
jmp
xchg
and
add
xchg
retf
jmp
pusha
xor
add
mov
add
add
in
add
mov
and
in
dec
jbe
mov
loop
cdq
add
xchg
or
loopne
push
sub
cmp
add
add
add
add
je
and
cmp
push
add
add
jb
call
push
into
retf
lahf
stc
mov
cmp
cmovl
mov
add
repz
lods
mov
test
dec
add
test
js
cmps
mov
jmp
retf
daa
and
add
imul
jmp
aaa
cwde
xor
push
add
sub
mov
out
dec
(bad)
popf
mov
mov
das
cmp
dec
aaa
lock
xor
add
add
pushf
scas
mov
pop
and
fs
dec
and
add
add
jp
or
mov
test
and
dec
adc
push
imul
and
rol
mov
push
push
push
mov
movs
pop
add
lods
xor
jl
add
scas
mov
add
(bad)
mov
dec
add
add
mov
add
(bad)
movs
push
movs
dec
fwait
jg
in
add
sbb
mov
and
add
add
std
ins
xor
and
and
add
jmp
in
and
mov
sbb
add
add
or
jmp
or
xor
call
(bad)
cwde
test
push
add
dec
data16
test
add
enter
or
mov
and
add
jmp
adc
cwde
js
push
add
or
or
mov
and
add
add
stos
jo
push
or
push
push
inc
xor
mov
mov
mov
jns
test
movs
and
stos
add
cmc
data16
add
add
and
push
add
add
(bad)
mov
(bad)
test
add
add
xor
jmp
(bad)
sbb
add
xor
jmp
mov
mov
sub
add
add
add
xchg
fist
add
add
fldenv
mov
test
sub
add
add
mov
xchg
in
repz
and
add
test
mov
mov
add
scas
dec
aas
cmp
test
add
add
pushf
add
push
add
add
(bad)
mov
lahf
add
add
add
lds
jmp
mov
jmp
stos
hlt
cmp
add
and
and
and
add
dec
add
mov
and
mov
push
cs
fidiv
mov
adc
jo
add
sub
inc
shl
jl
add
add
and
mov
sub
push
mov
mov
sbb
inc
add
rol
and
pop
add
cs
and
jmp
mov
mov
jmp
cmp
aaa
loope
cmp
pop
and
xchg
cmps
or
test
xchg
add
mov
(bad)
and
or
jmp
mov
mov
mov
and
pop
add
mov
xchg
add
xchg
add
add
add
mov
push
mov
sub
mov
imul
add
add
push
or
push
jmp
add
retf
test
in
inc
(bad)
inc
sub
lahf
add
cmp
int
movs
sub
add
and
add
pop
mov
cmp
add
mov
lods
xor
add
mov
sub
inc
and
jmp
(bad)
out
in
push
add
add
add
les
call
imul
mov
lahf
xchg
cmc
adc
loopne
add
movs
and
sub
or
retf
pop
push
mov
popf
pop
(bad)
movs
and
add
add
dec
dec
mov
add
sub
jecxz
test
add
(bad)
leave
rol
add
add
and
and
cwde
out
xor
jns
add
(bad)
shr
lods
sub
jmp
mov
mov
call
mov
add
lods
mov
add
cmc
data16
mov
mov
sti
mov
add
xor
(bad)
dec
add
add
add
test
test
push
cmp
scas
jecxz
mov
add
add
add
(bad)
dec
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
not
shl
jne
inc
shl
cmp
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
inc
mov
inc
xchg
jb
dec
cmp
jmp
mov
push
pop
mov
mov
push
mov
mov
ret
cmp
shl
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xchg
and
cmp
not
jbe
dec
cmp
or
mov
add
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sbb
and
jg
add
push
rcl
inc
and
mov
jmp
mov
mov
add
sbb
add
mov
pusha
sub
mov
call
and
add
sahf
and
xor
jp
jo
add
push
mov
cmp
add
jnp
mov
and
cmp
pop
inc
and
pextrw
or
xchg
push
add
and
or
mov
jg
jmp
mov
mov
sub
ret
inc
inc
dec
je
jmp
xchg
or
rol
mov
aad
jg
jmp
mov
(bad)
pusha
mov
mov
and
je
test
mov
sub
repnz
and
jg
xchg
dec
bound
fimul
sub
lea
mov
add
jmp
mov
mov
ds
mov
pop
(bad)
sbb
add
add
inc
mov
sub
mov
sub
dec
mov
je
add
jp
and
cmp
mov
inc
neg
push
in
add
scas
std
mov
cmp
inc
mov
sete
add
mov
add
xchg
xchg
retf
sub
mov
sub
jmp
mov
push
mov
ja
mov
and
fld
sbb
bound
inc
not
dec
add
or
push
add
jnp
xlat
jle
mov
arpl
xchg
and
add
sbb
cmovne
adc
ja
sbb
jp
add
mov
add
mov
mov
xlat
push
add
push
mov
adc
jle
es
imul
push
add
mov
mov
add
cmp
pop
push
push
repnz
jle
dec
movs
inc
dec
adc
add
mov
and
mov
call
or
mov
lock
sbb
cdq
fmul
or
repnz
dec
and
fmul
mov
test
jle
mov
arpl
and
jmp
fcmove
xchg
addr16
popf
sbb
push
adc
mov
add
add
xor
ficom
pop
add
pop
js
cmp
xlat
push
add
test
add
xchg
xlat
inc
repnz
cdq
add
mov
inc
jno
int3
pop
cmp
inc
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
shl
shr
ja
cmp
cmp
cmp
jmp
push
mov
pop
mov
push
mov
mov
pop
mov
push
pop
mov
push
jmp
dec
or
jmp
call
shr
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
xor
ror
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
iret
jmp
inc
add
jo
add
add
imul
ins
(bad)
nop
and
add
and
adc
cli
add
and
jb
sbb
push
lds
push
clc
(bad)
jmp
xor
add
adc
loop
sbb
enter
dec
add
(bad)
nop
inc
mov
mov
mov
js
dec
add
and
push
loop
sti
adc
add
add
mov
add
leave
je
popf
mov
and
mov
mov
mov
mov
dec
inc
and
aam
je
(bad)
sti
add
add
lahf
add
add
push
and
mov
and
inc
and
std
add
xchg
mov
mov
xchg
(bad)
sahf
hlt
add
lea
and
add
inc
add
add
mov
sti
pop
and
inc
or
add
test
ins
add
add
push
add
dec
mov
mov
sbb
shr
mov
and
inc
rcr
jp
ret
push
mov
push
push
push
and
sub
jmp
mov
push
mov
mov
pop
mov
mov
mov
push
mov
mov
pop
mov
pop
jmp
xor
sub
shl
jmp
call
and
xchg
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xchg
xor
jge
cmp
inc
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
and
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
or
not
ror
jno
add
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
add
retf
aam
or
mov
icebp
test
add
push
sub
test
add
pop
sub
and
inc
xchg
add
add
add
add
jmp
add
mov
mov
add
xchg
lahf
cmc
dec
stc
hlt
(bad)
call
test
sub
sbb
inc
add
jb
sub
movaps
add
nop
(bad)
(bad)
inc
test
add
add
push
nop
ins
test
sub
add
mov
and
hlt
mov
add
add
mov
inc
add
lods
pop
and
mov
inc
jb
add
(bad)
fist
mov
add
in
repz
jns
sbb
popf
stos
jmp
mov
mov
and
add
je
xchg
pusha
add
push
sbb
jge
outs
and
add
add
mov
sub
fsub
fld
mov
out
repnz
inc
dec
test
or
or
(bad)
or
mov
aaa
push
sub
sub
sub
js
sub
add
(bad)
and
add
jmp
push
fmul
add
and
ins
or
or
mov
add
test
sub
jl
and
mov
or
add
jmp
rol
cwde
cmps
idiv
mov
psubsw
pop
pop
leave
xchg
das
and
push
mov
jge
imul
test
and
sub
add
add
cwde
ins
clc
loop
mov
jge
pop
push
ins
add
sbb
pop
leave
repz
ret
xchg
stos
add
mov
paddb
sbb
mov
add
test
test
fnsave
cli
test
jae
add
test
xlat
jg
pusha
mov
nop
add
mov
jg
jmp
pop
sbb
add
mov
lods
mov
test
aam
add
mov
test
dec
sahf
xchg
mov
add
movs
sub
sub
rcr
and
test
icebp
xchg
mov
iret
mov
push
ins
add
jae
jmp
mov
sub
mov
and
add
add
mov
add
mov
nop
pop
sub
push
mov
sbb
add
psubsw
push
leave
add
and
js
jmp
movnti
vandnps
add
jg
jmp
mov
sub
rol
mov
add
add
pop
mov
call
cmp
popa
popa
mov
movups
or
cmc
jmp
mov
jne
js
ror
add
mov
inc
jmp
mov
pusha
sub
sbb
imul
or
add
mov
add
mov
and
add
cmp
enter
add
test
ret
add
in
mov
mov
sub
cmp
test
jae
add
mov
dec
inc
test
jns
add
(bad)
mov
add
ret
nop
stos
mov
and
push
add
mov
mov
js
sub
add
fdiv
push
ins
or
sub
mov
jg
jmp
mov
and
add
and
pop
imul
xor
xor
jb
mov
add
mov
add
mov
and
add
add
xchg
jbe
add
cmc
sub
sub
shr
clc
sbb
add
add
popf
mov
add
sub
mov
jg
jmp
jle
and
pop
add
ficom
dec
add
imul
shl
inc
jb
mov
dec
and
add
js
dec
pop
xchg
ja
test
jg
jge
add
lahf
jle
jl
add
xchg
push
fcmovbe
out
clc
or
add
leave
xchg
and
test
stos
add
fimul
cmc
mov
test
mov
fadd
add
cmp
push
jp
fisttp
add
jg
xchg
jmp
test
push
add
loope
scas
mov
cmc
mov
test
add
mov
sub
mov
je
jns
scas
add
mov
je
add
xchg
mov
inc
lahf
sti
sub
jg
jmp
ds
add
pop
xlat
loope
test
add
add
test
jno
add
mov
inc
mov
cmc
add
push
mov
cmc
add
pop
jmp
mov
sub
mov
int3
jmp
jmp
mov
stos
add
sbb
add
push
(bad)
jg
add
ins
add
add
mov
sub
mov
bound
jmp
mov
and
add
cmps
sub
mov
ucomiss
pop
pop
add
add
add
push
fmul
mov
cmp
into
mul
fadd
ins
or
test
sar
mov
test
jge
(bad)
mov
inc
lahf
cmc
add
and
add
add
add
mov
and
push
add
mov
out
ins
or
mov
add
add
add
or
mov
add
test
mov
out
or
pop
add
and
jae
stos
cmps
mov
adc
and
pop
add
shl
scas
fadd
mov
(bad)
sbb
jb
add
add
out
and
ins
xlat
inc
or
push
add
pop
or
cmc
jmp
xlat
scas
and
add
add
push
xor
jb
ins
add
and
add
xchg
add
push
mov
sub
mov
add
add
add
mov
sub
mov
arpl
loopne
add
jmp
mov
mov
test
add
mov
test
add
sub
stc
pop
mov
out
ins
add
jg
mov
push
nop
stos
mov
je
add
xchg
mov
sahf
pop
jns
add
push
sbb
add
fdivr
test
cmp
sub
dec
jmp
add
(bad)
and
add
xchg
pusha
sub
and
je
sub
xchg
sub
jl
and
pop
pop
add
test
add
mov
add
add
sub
mov
ja
and
pusha
add
sub
add
cs
add
sub
mov
add
call
add
mov
mov
out
pusha
repnz
pop
add
js
(bad)
and
push
nop
jmp
mov
push
inc
and
nop
add
fmul
add
jmp
mov
and
jae
add
sub
mov
pusha
add
movs
jo
add
jmp
fld
add
add
imul
mov
jb
or
or
mov
call
mov
lahf
mov
nop
(bad)
(bad)
mov
add
pop
mov
unpckhps
imul
test
ret
add
bound
sub
add
inc
cld
inc
mov
stc
nop
and
mov
and
mov
lahf
cmc
dec
pop
pop
sub
mov
sub
cmp
and
je
sub
ins
or
mov
add
mov
adc
stos
cmps
add
add
add
test
add
mov
cmp
fdiv
add
add
fdiv
add
inc
sub
mov
paddb
add
mov
mov
je
add
sub
mov
jl
push
test
xchg
and
add
mov
bound
push
cmps
je
jmp
jmp
ja
add
add
cs
hlt
nop
test
add
add
add
mov
inc
xchg
fs
mul
cmp
cld
and
add
add
sbb
and
je
ret
xchg
lahf
jle
and
mov
sub
mov
push
paddusb
add
mov
inc
jmp
jnp
vandnps
adc
stos
test
cmovne
and
mov
mov
mov
mov
imul
cmp
cmp
jo
(bad)
(bad)
jp
sahf
clc
bound
mov
mov
mov
sub
add
cmps
push
add
push
jl
and
pop
add
jmp
loopne
cmc
add
mov
and
inc
add
jmp
mov
or
add
inc
pop
xor
cli
mov
fiadd
imul
sbb
mov
mov
and
(bad)
sti
push
in
or
pop
mov
sti
push
fdiv
add
call
inc
add
add
push
nop
inc
les
push
sub
dec
ds
es
mov
add
je
mov
inc
jmp
mov
out
das
mov
in
inc
int3
sub
add
jbe
push
sub
sub
mov
mov
jl
pushw
push
add
add
add
add
rol
dec
mov
xlat
mov
dec
mov
pop
add
ja
retf
inc
mov
push
nop
mov
jmp
pop
add
push
add
xchg
lahf
jl
test
add
add
shr
(bad)
(bad)
mov
mov
mov
out
ins
or
cmp
cmove
stos
add
add
lahf
cmc
sub
rol
mov
mov
mov
(bad)
mov
jb
cdq
jmp
mov
add
in
push
add
add
fstp
cmc
mov
mov
mov
jmp
mov
int3
inc
int
add
(bad)
sti
sub
sub
sbb
mov
add
sub
and
add
pop
jmp
push
test
push
mov
test
add
jb
clc
in
push
add
and
add
add
and
push
nop
stos
and
sahf
pusha
rol
add
out
mov
sar
(bad)
repnz
test
cld
inc
xlat
push
nop
stos
mov
pop
mov
sbb
mov
mov
sub
dec
add
out
daa
dec
fidivr
and
add
add
jb
dec
js
les
mov
shl
add
stc
ret
sub
xor
add
mov
jl
test
and
add
je
or
adc
adc
fldenv
lea
mov
les
jge
or
jmp
ja
stos
cmps
add
ds
dec
add
ror
loopne
xchg
pushf
add
add
add
ret
add
or
pusha
add
add
add
sbb
lahf
add
shl
and
mov
push
and
mov
sbb
call
and
add
inc
mov
mov
and
lea
sbb
(bad)
(bad)
mov
mov
cmp
psrlw
sub
add
pop
add
imul
mov
and
add
or
in
das
add
loop
(bad)
(bad)
mov
fcmove
mov
stos
add
cmovne
mov
push
add
jmp
mov
mov
xor
inc
push
arpl
ins
or
pop
mov
add
in
test
add
add
pop
push
add
mov
mov
jmp
mov
mov
push
add
test
movs
add
imul
and
add
mov
(bad)
int3
add
mov
mov
rol
add
fadd
add
test
loope
cmps
icebp
xor
inc
add
shr
push
cmp
pop
pop
add
(bad)
add
jb
and
jae
add
movs
add
leave
mov
nop
add
mov
out
mov
js
test
hlt
in
push
add
loop
inc
add
fmul
fnsave
inc
and
add
add
inc
and
add
push
cmp
add
add
add
xchg
lahf
(bad)
mov
pop
pop
sub
fiadd
add
inc
or
sub
sar
mov
mov
jmp
cmp
fcmove
jl
jl
pop
add
ret
add
mov
shl
and
mov
add
mov
mov
ss
mov
dec
mov
mov
mov
add
push
mov
aam
pop
pop
(bad)
cs
add
xchg
mov
xlat
adc
add
mov
and
sub
add
shl
push
(bad)
scas
and
xchg
lahf
add
pop
cli
or
inc
and
jmp
mov
add
cmps
cld
rol
jae
add
call
test
sub
jmp
adc
clc
mov
add
mov
mov
cmp
add
or
jl
add
mov
add
ret
mov
mov
mov
and
test
add
pop
jl
and
add
and
test
rol
cmp
arpl
mov
test
add
pusha
imul
sub
pop
add
jmp
mov
mov
sub
mov
mov
or
fadd
jb
and
add
inc
xchg
ins
or
inc
cld
and
add
fdivp
pop
stc
cvtdq2ps
mov
in
push
add
xchg
push
add
inc
test
cmps
rcl
loope
xchg
mov
mov
mov
inc
jbe
ret
add
inc
das
cmp
xlat
dec
in
je
test
sub
push
fprem1
xchg
lahf
mov
je
ret
add
add
ret
imul
test
int3
mov
cmp
xchg
dec
ins
mov
(bad)
fild
rol
push
push
ficom
xor
xor
je
add
xchg
jl
repz
outs
(bad)
fist
fnsave
fist
into
test
rol
mov
jmp
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sar
test
inc
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shr
cmp
jl
cmp
sar
jmp
call
rol
shl
jno
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
mov
jmp
push
mov
push
mov
mov
pop
mov
pop
push
jmp
mov
shl
js
dec
ror
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
punpckhdq
cmps
data16
push
cmova
push
xchg
add
adc
cmp
add
rcl
push
pop
js
add
rcr
push
ins
mov
add
add
pop
into
dec
sbb
out
aas
xchg
mov
and
add
adc
jle
les
mov
add
rcl
(bad)
in
(bad)
add
ror
add
mov
add
add
xchg
inc
test
add
mov
mov
adc
cmp
addr16
pop
pop
sbb
add
push
fldenv
add
(bad)
pmaxsw
add
dec
add
dec
and
push
add
sub
mov
and
cli
add
jg
pusha
add
add
mov
mov
add
cmp
loope
and
add
sbb
add
add
add
add
and
inc
pop
xchg
add
jmp
mov
sub
mov
cmc
pop
add
stc
push
test
xor
test
stos
punpcklwd
mov
push
add
add
sahf
mov
pop
push
push
xor
and
push
sar
add
add
rcr
fiadd
sub
lds
jg
jmp
mov
mov
add
inc
test
imul
popw
shl
push
stos
add
into
popa
or
cmp
add
(bad)
mov
add
jmp
mov
add
jae
lods
inc
add
rcr
out
std
add
pop
pop
test
loope
str
test
test
je
jmp
mov
sub
mov
add
add
out
sbb
js
add
stos
sub
mov
mov
out
test
add
retf
bound
js
(bad)
scas
js
fs
mov
loope
add
and
lea
add
jmp
mov
sub
mov
fisttp
adc
add
add
pop
add
pop
inc
stc
cmp
test
add
mov
add
add
mov
add
add
jae
inc
retf
jae
and
lds
adc
add
mov
dec
pop
adc
xlat
mov
mov
add
movs
add
dec
mov
sub
push
inc
daa
pusha
mov
and
mov
jmp
jbe
and
add
cli
fisttp
shl
or
test
add
into
popa
push
hlt
fcmovu
mov
and
jg
adc
add
add
rol
cmp
mov
and
imul
add
push
mov
sub
pop
add
sub
mov
mov
add
add
add
add
sar
cmp
mov
pop
jmp
and
mov
xchg
xor
jmp
jno
and
add
add
pop
push
and
repnz
add
pop
ror
punpcklwd
aas
push
sahf
out
mov
and
add
push
adc
cli
add
test
mov
add
sub
pop
inc
and
imul
rol
add
add
mov
cmp
mov
add
rol
mov
sub
in
inc
cmp
je
out
add
into
mov
stc
mov
je
adc
add
jle
adc
mov
and
ja
cwde
sbb
shl
add
push
and
into
popa
mov
xor
mov
lsl
mov
retf
add
mov
sub
in
pop
mul
test
add
add
dec
and
xchg
leave
add
mov
or
dec
add
add
ret
cli
add
adc
sub
mov
imul
jmp
sub
dec
add
xor
test
add
xchg
sbb
adc
mov
add
icebp
inc
inc
adc
test
mov
add
jmp
in
inc
mov
and
sbb
imul
jle
add
sub
xchg
retf
pavgb
push
verr
dec
push
sub
mov
ja
pusha
xor
jns
mov
add
xor
loop
icebp
inc
inc
add
test
fld
push
jmp
test
and
into
add
fisubr
inc
push
add
je
std
cli
mov
shr
sbb
add
inc
ja
mov
mov
sub
test
jbe
dec
add
retf
push
aas
mov
add
jo
mov
ror
add
add
mov
cmp
pop
out
into
mov
and
pop
into
add
loop
xchg
add
test
mov
xchg
and
icebp
repz
mov
mov
jbe
and
mov
mov
add
cmp
xchg
and
stos
add
test
int
push
mov
aas
mov
mov
and
adc
add
jmp
inc
xor
loopne
jmp
add
mov
sbb
or
add
pop
out
into
call
dec
add
ss
add
mov
sbb
mov
fisttp
mov
fldenv
adc
add
(bad)
cld
and
add
cld
icebp
out
add
push
add
add
jmp
add
enter
rol
icebp
inc
(bad)
gs
mov
mov
add
rcr
fdivrp
sbb
mov
and
pop
add
cmp
aad
xchg
add
adc
scas
js
push
mov
hlt
adc
add
mov
in
add
add
daa
push
add
test
add
dec
or
(bad)
fsubr
add
add
xlat
idiv
mov
ins
rol
add
mov
jbe
and
add
push
fldenv
stos
punpcklwd
xchg
add
and
add
add
les
lods
jbe
rol
movzx
mov
bswap
jo
pop
mov
les
lsl
mov
dec
mov
(bad)
xchg
mov
mov
pop
aam
jmp
scas
jns
in
add
mov
pop
mov
jmp
mov
inc
enter
add
(bad)
les
add
mov
mov
test
add
mov
frstor
rcl
and
push
stos
add
pop
pop
ret
or
repnz
xchg
mov
adc
add
add
dec
inc
sbb
and
pop
add
add
rcr
add
cs
sldt
mov
and
dec
add
mov
inc
add
mov
mov
add
jge
and
push
and
sbb
adc
add
popa
add
mov
(bad)
pop
and
add
add
idiv
mov
jb
adc
pop
and
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xchg
rol
rol
jmp
mov
push
mov
mov
push
mov
mov
mov
mov
mov
push
pop
push
mov
jmp
mov
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
dec
ror
rol
jns
ror
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
and
jmp
call
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
or
cmp
scas
add
mov
rcl
shl
test
add
add
mov
mov
jge
adc
(bad)
dec
add
sbb
sub
sar
and
add
lahf
scas
and
add
mov
add
add
dec
popa
xor
sub
sbb
sub
fild
daa
fdiv
arpl
mov
add
dec
dec
cmp
mov
paddusw
add
jmp
mov
push
sbb
mov
add
cpuid
call
add
popa
test
(bad)
hlt
(bad)
xchg
mov
sbb
xchg
add
add
add
(bad)
mov
add
mov
mov
sub
mov
and
add
add
lods
and
imul
test
mov
lods
test
jmp
push
(bad)
jbe
add
jg
mov
pop
and
loopne
and
mul
add
arpl
cld
(bad)
jno
add
jmp
hlt
jecxz
push
add
add
jg
push
add
mov
test
or
sbb
jne
add
test
add
add
mov
and
pop
add
pmulhuw
add
test
mov
add
mov
(bad)
jns
push
mov
(bad)
or
add
pop
fistp
adc
jg
mov
inc
fiadd
int3
mov
dec
in
and
mov
repz
add
add
jecxz
test
add
add
test
gs
mov
jge
push
jmp
add
inc
xor
xchg
ja
push
adc
pop
jo
and
and
add
and
add
sub
mov
cmp
add
je
jmp
mov
add
cmp
es
jmp
repz
mov
sub
mov
test
sahf
pop
add
jmp
lds
hlt
add
add
mov
jg
cld
sub
add
test
add
push
push
dec
xchg
push
mov
rol
add
xor
popa
add
jmp
mov
push
pop
adc
ret
test
add
add
add
add
mul
dec
popa
test
xlat
mov
inc
cli
and
cvttps2pi
pop
mul
jmp
mov
sub
xchg
test
push
add
call
add
mov
inc
ret
fimul
scas
test
mov
push
add
jmp
sahf
lods
jl
add
add
in
jmp
add
add
(bad)
and
add
dec
popa
xor
iret
add
sbb
pushf
lods
and
add
jg
xchg
cli
push
add
jmp
cmp
or
mov
sub
mov
mov
add
(bad)
or
pop
jg
add
and
mov
sub
mov
into
aam
add
paddsb
cmp
and
add
add
mov
jg
pop
add
add
add
mov
(bad)
test
sub
and
add
add
js
std
cmc
and
in
and
add
add
ja
inc
add
add
xchg
mov
push
push
jmp
and
arpl
test
sbb
jg
jmp
mov
inc
inc
add
push
sub
and
inc
outs
(bad)
ins
mov
icebp
mov
add
mov
and
add
add
mov
add
call
jmp
lods
retf
add
mov
inc
popa
stc
jecxz
test
mov
add
je
mov
sub
add
sti
inc
inc
pop
and
sub
mov
inc
(bad)
and
add
pop
add
add
mov
sub
mov
push
test
jnp
add
sub
imul
rol
add
fadd
dec
and
add
cld
(bad)
and
pop
cld
sub
add
xchg
pop
das
add
loope
mov
cpuid
test
add
pop
push
add
repnz
add
ret
sub
mov
in
add
add
test
mov
sub
mov
je
jmp
aam
xor
jg
xor
imul
test
shl
add
jmp
mov
jg
jmp
or
test
adc
sub
add
mov
test
and
add
add
(bad)
outs
xchg
clc
add
pop
adc
add
hlt
jecxz
inc
pop
add
sub
stos
out
mov
cdq
icebp
add
iret
add
mov
add
sub
mov
jg
jmp
mov
pushf
retf
adc
mov
pop
ja
pop
adc
add
test
and
add
cmp
into
add
add
aas
dec
add
add
add
add
jbe
pop
add
sub
sar
inc
jl
test
add
fldcw
add
add
cmp
repz
jl
push
add
adc
sti
and
pop
add
inc
shr
and
cpuid
lahf
jmp
add
push
push
add
jns
xor
rol
psubsb
and
imul
mov
test
add
mov
je
jmp
sahf
lods
and
jle
cmp
sub
jg
jmp
mov
jg
inc
jnp
mov
psubq
adc
add
aaa
add
add
add
cmp
inc
and
(bad)
dec
add
mov
add
add
js
jbe
adc
pop
push
imul
aaa
cmps
test
push
mov
jmp
mov
popf
rcl
xchg
inc
xlat
pop
pop
(bad)
jg
adc
add
test
inc
add
add
cmp
inc
mov
add
retf
mov
add
repz
sub
mov
(bad)
and
jg
jmp
cmp
(bad)
stos
loop
inc
loope
and
setl
push
pop
add
mov
test
add
sub
loop
mov
jg
jmp
mov
sub
mov
push
test
cmp
and
test
retf
bound
add
add
push
mov
add
add
sti
and
pop
add
push
retf
push
mov
and
cpuid
xchg
add
dec
add
add
add
add
(bad)
or
pusha
jo
add
and
imul
scas
add
add
loope
scas
xor
ja
add
jmp
mov
cmp
cmc
and
pop
and
add
jmp
mov
add
test
(bad)
mov
dec
sbb
mov
test
add
dec
(bad)
adc
jno
inc
and
test
sbb
add
jle
add
stos
inc
dec
mov
add
xchg
add
cmp
xor
mov
and
xlat
and
push
retf
mov
mov
mov
(bad)
push
and
daa
fadd
add
jmp
mov
sub
mov
cmp
add
push
pop
mov
sub
lahf
addr16
cmps
test
add
dec
jmp
add
mov
sbb
add
push
jmp
adc
or
dec
xchg
cmp
dec
(bad)
sbb
add
(bad)
jnp
add
add
push
ror
and
not
leave
xchg
xchg
dec
mov
mov
mov
or
add
test
mov
jmp
fld
sahf
pusha
or
add
pusha
adc
mov
add
es
fdiv
add
ja
pop
add
pop
sahf
push
mov
and
pop
add
lods
test
stos
xchg
cld
pop
popf
mov
add
jmp
cmp
cmp
add
imul
cmovl
test
add
jmp
or
into
xor
mov
xchg
xchg
xlat
fs
pop
adc
pop
add
dec
mov
add
imul
add
mov
or
(bad)
inc
xchg
xchg
xlat
add
xchg
cli
cs
jg
cmovl
mov
and
pop
and
jmp
mov
lahf
rcl
imul
inc
rcl
or
add
jg
cmp
cmp
add
popa
xchg
xchg
or
add
or
not
add
aam
test
add
jmp
fwait
jecxz
es
mov
mov
or
mov
pop
adc
pop
add
mov
mov
sbb
(bad)
dec
xchg
ja
pop
add
add
inc
sub
enter
mov
mov
cmp
pmuludq
add
jmp
out
test
add
adc
add
mov
jmp
sub
add
push
add
(bad)
lods
jl
jle
add
push
push
retf
hlt
add
mov
dec
pushf
xlat
sbb
pop
add
ja
(bad)
pop
(bad)
sti
inc
inc
and
lods
add
clc
add
push
icebp
stos
add
lods
jp
and
mul
and
pop
add
and
add
mov
mov
dec
mov
add
xor
and
adc
pop
jl
retf
out
inc
imul
sub
mov
icebp
pop
mov
add
add
jp
mul
add
addr16
mov
jbe
and
test
mov
(bad)
dec
add
repz
mov
push
add
push
ins
(bad)
jmp
push
xor
push
add
add
mov
mov
mov
jnp
sub
add
mov
and
ja
mov
lea
jg
or
dec
mov
out
mov
jecxz
jp
jno
mov
adc
cmovne
mov
xor
add
jmp
adc
ret
mov
dec
daa
dec
add
add
xor
jb
test
push
add
mov
fcomp
add
retf
mov
mov
pop
aas
add
mov
push
or
movs
jl
data16
adc
and
test
and
daa
dec
jmp
add
add
mov
dec
push
add
sub
addr16
loop
and
dec
mov
add
test
dec
daa
dec
jmp
add
test
add
add
call
jg
xchg
xchg
imul
mov
add
mul
mov
add
test
pop
adc
xor
mov
mov
add
call
pop
movs
add
jp
jbe
pop
adc
dec
add
mov
and
xor
jmp
pop
dec
fbstp
sbb
sub
inc
and
xchg
cmp
add
(bad)
out
and
mov
es
dec
add
(bad)
outs
xchg
and
mov
mov
movs
in
inc
add
add
fsub
add
add
inc
imul
ret
jb
jno
rol
es
sub
add
add
add
mov
jmp
mov
inc
xchg
inc
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
rol
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
ror
jmp
mov
mov
mov
push
mov
mov
push
mov
mov
jmp
add
mov
rol
jb
not
dec
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
shr
ror
jb
rol
or
or
jmp
call
shr
jbe
or
mov
or
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
std
test
add
add
xchg
add
push
and
add
fld
cmp
add
jmp
add
popa
fiadd
xor
cdq
cmps
or
push
and
add
add
and
cmp
ss
jne
sahf
or
xor
add
add
mov
(bad)
imul
add
mov
push
lods
pop
and
sbb
add
popf
jno
fld
adc
add
push
push
add
mov
jg
fild
mov
jge
outs
test
add
jns
pop
cdq
cmps
jmp
mov
sub
mov
jg
push
push
cmp
add
add
push
cmps
pop
rcr
in
add
add
jle
add
and
add
sub
arpl
cmp
pop
add
add
cmp
add
or
ret
cmp
add
movlps
cdq
cmps
add
add
add
mov
mov
mov
push
add
xchg
adc
jns
and
mov
mov
test
test
dec
adc
cdq
jmp
mov
sub
mov
jl
adc
pop
fcomp
add
jb
xor
jle
neg
add
mov
add
add
pop
add
add
cmp
add
fld
sub
mov
add
(bad)
fwait
add
popf
xchg
test
add
add
sub
mov
or
add
mov
(bad)
pop
add
add
push
add
mov
and
xchg
add
xchg
test
add
add
cmps
jbe
add
jmp
mov
lods
lahf
fiadd
push
sub
mov
add
add
and
add
jge
or
cli
and
add
add
sbb
jmp
push
add
sub
mov
add
push
(bad)
fdivr
push
jmp
add
lods
mov
add
das
in
push
sar
popf
add
push
add
mov
setp
add
aam
or
mov
push
iret
ss
mov
or
push
add
shr
add
add
ror
fnsave
daa
add
add
add
add
xor
and
cdq
add
pop
add
adc
add
test
add
mov
xchg
js
ret
add
add
push
add
test
add
add
mov
nop
add
cmps
jmp
mov
popf
cmps
pop
rol
and
add
push
xor
add
add
fisttp
add
push
jl
or
test
add
add
mov
in
not
cwde
add
sub
mov
in
shl
pop
add
cmp
add
add
add
xchg
test
test
or
add
cmp
jle
jge
and
cwde
add
pop
mov
in
test
retf
add
push
cmp
ss
and
arpl
and
add
jge
sbb
pop
add
add
js
add
lods
mov
jl
inc
dec
mov
cmp
mov
sti
mov
add
jmp
mov
mov
and
add
jle
lods
les
push
loop
sub
dec
(bad)
push
aad
xor
ss
cmp
add
test
add
cmp
pop
cdq
ja
add
adc
inc
jmp
add
add
push
and
dec
and
(bad)
ins
and
mov
add
test
xchg
add
cmp
mov
fadd
add
add
mov
popf
(bad)
jecxz
mov
add
mov
sub
aad
jmp
mov
sub
push
add
dec
jmp
add
fnstsw
xchg
imul
int
es
jle
adc
in
mov
add
in
push
add
push
add
inc
and
inc
inc
stc
xor
push
jge
mov
call
daa
add
add
ds
in
push
add
mov
mul
xor
inc
and
inc
or
jmp
sub
aad
cmc
jne
ficomp
add
add
add
and
push
add
push
scas
and
pop
add
mov
mov
lds
add
popf
jle
pop
and
jno
or
add
movs
cmp
push
add
jmp
add
mov
add
push
xor
inc
mov
add
add
add
add
add
mov
fcomp
add
add
mov
push
mov
jg
and
jno
or
add
add
in
push
add
jmp
add
add
inc
push
xor
ret
cmps
or
add
add
cmps
or
add
mov
mov
push
jmp
adc
mov
pusha
lds
add
add
jns
add
mov
adc
jmp
add
xchg
push
adc
xchg
pop
add
cmp
or
dec
mov
add
mov
and
push
add
xchg
adc
dec
mov
mov
icebp
mov
mov
call
mov
and
jmp
add
and
inc
and
xor
scas
add
and
call
mov
mov
mov
fdivr
mov
(bad)
jle
pop
sbb
xchg
xor
call
mov
mov
aas
js
push
add
add
adc
rcr
movs
or
add
add
xchg
or
add
mov
mov
mov
inc
sub
add
cmp
xchg
jle
add
pop
dec
mul
add
les
add
sahf
test
mov
mov
not
pushf
inc
and
pop
inc
and
add
add
cmps
aaa
or
add
mov
test
lods
push
add
mov
and
(bad)
stc
add
pop
and
add
jge
stos
shr
inc
call
mov
mov
pop
add
in
push
add
adc
jge
rol
iret
mov
inc
add
add
add
mov
inc
retf
mov
not
and
add
test
cmp
and
add
push
mov
pop
mov
or
(bad)
cmps
mov
mov
jmp
cmps
jge
add
mov
mov
add
and
dec
and
mov
adc
call
cmp
jecxz
mov
mov
and
add
mov
lods
and
jle
add
and
add
add
hlt
dec
pop
cmps
loop
pop
add
mov
ds
in
push
add
cmc
xchg
and
not
mov
add
aad
cmc
and
rcl
add
add
mov
es
jmp
add
add
mov
and
jg
add
addr16
jle
mov
push
add
mov
mov
mov
mov
mov
mov
ja
and
push
cmp
add
mov
fnstsw
push
add
mov
mov
and
add
mov
rol
fld
add
jae
call
mov
in
push
add
in
push
add
inc
adc
cmp
add
add
add
adc
into
in
mov
or
mov
xor
jmp
mov
mov
mov
imul
stc
push
rcl
and
dec
pop
jecxz
sub
lods
or
gs
fnstsw
test
mov
mov
jmp
and
and
add
add
jp
jmp
mov
mov
add
xchg
and
add
push
hlt
adc
mov
call
popf
add
inc
and
call
mov
(bad)
xchg
and
cwde
cmps
or
and
aam
mov
mov
jmp
dec
xchg
lds
push
jge
inc
hlt
pop
pop
lds
lds
bound
xor
dec
cpuid
or
aad
add
mov
push
add
add
mov
and
dec
and
mov
add
add
inc
add
adc
in
push
add
mov
push
add
jecxz
ficom
mov
mov
mov
and
call
mov
mov
mov
mov
adc
add
xchg
imul
inc
or
popf
jle
pushf
aad
sbb
add
add
add
pop
jecxz
clc
in
push
add
mov
add
inc
and
inc
inc
and
add
cmp
hlt
outs
and
call
mov
mov
cmp
jmp
add
xchg
and
adc
add
and
mov
or
push
sub
pop
cld
popf
inc
call
mov
mov
mov
or
mov
stos
fisubr
add
inc
and
add
add
mov
xchg
pusha
add
add
jg
mov
mov
call
cmp
adc
movs
or
add
add
sub
mov
mov
cmps
shl
xchg
sbb
add
(bad)
(bad)
(bad)
(bad)
cld
call
sub
push
jmp
mov
dec
pop
add
add
push
mov
push
push
push
and
sub
jmp
call
xor
or
jge
or
cmp
shl
jmp
push
mov
pop
push
pop
push
pop
push
pop
mov
push
jmp
not
xor
jl
test
rol
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
rol
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
ror
js
cmp
inc
mov
inc
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
add
xor
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
rcl
mov
mov
mov
dec
dec
test
push
les
and
mov
mov
js
and
xchg
shl
fs
pop
jmp
mov
mov
push
(bad)
sbb
loopne
mov
fs
mov
push
pop
(bad)
add
add
add
add
sub
sub
sbb
(bad)
sbb
cmc
pop
add
mov
lock
mov
je
jmp
mov
movs
call
ror
jmp
mov
movs
lea
bound
mov
inc
and
movzx
add
add
leave
add
mov
pop
imul
push
push
add
jmp
mov
inc
sub
mov
or
mov
inc
and
sub
jge
ins
mov
and
lgs
add
sub
add
add
ins
xchg
test
(bad)
push
add
pop
jmp
sub
(bad)
(bad)
rol
add
add
add
add
mov
shr
fdivr
out
and
jg
jmp
mov
ret
mov
cmp
mov
add
rol
ret
inc
loope
repz
add
outs
jmp
outs
inc
fcom
xor
inc
and
je
fcmovnb
add
pop
add
mov
and
adc
cld
cmc
jmp
sub
int
retf
mov
pop
or
add
push
dec
add
cld
fldenv
sub
push
rol
in
test
add
shr
mov
and
sub
mov
pop
test
add
mov
and
xchg
sub
jno
sbb
popf
outs
push
jmp
mov
dec
pop
js
xchg
and
cmovno
mov
add
fdiv
push
add
pop
call
jmp
mov
mov
cmp
setb
fsub
ror
add
inc
cdq
fs
out
stc
push
add
adc
xor
add
not
add
sti
fs
in
add
hlt
jl
jl
sbb
jno
jmp
imul
add
pusha
sbb
mov
movntq
out
push
mov
mov
fst
xor
mov
int
test
sbb
mov
fwait
mov
add
enter
(bad)
(bad)
jmp
shl
mov
push
fsub
mov
mov
scas
sbb
mov
and
fistp
inc
and
add
mov
fs
jl
je
add
(bad)
fwait
and
pop
and
or
cld
cmc
pop
mov
dec
in
fs
mov
ss
call
fadd
add
fmul
outs
loope
jmp
(bad)
push
and
add
sub
ss
xchg
in
cdq
add
pop
pop
addr16
jl
inc
call
add
push
aas
pop
jb
sub
lds
stc
rol
and
ins
push
inc
shl
ins
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
xchg
xchg
rol
jb
cmp
shl
jmp
call
xor
inc
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
ror
jae
mov
jmp
push
mov
push
mov
mov
pop
mov
mov
push
mov
jmp
rol
not
mov
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
or
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
icebp
inc
lods
gs
and
jge
dec
jb
adc
add
add
add
mov
mov
and
pop
xor
inc
add
mov
(bad)
and
add
jg
movs
mov
bound
pop
mov
pop
xor
jp
es
cmps
xchg
add
xchg
jg
test
(bad)
scas
add
scas
mov
icebp
dec
or
add
cmp
(bad)
sub
mov
xchg
jg
ins
push
xor
daa
mov
inc
add
add
and
add
jmp
inc
(bad)
add
pop
mov
inc
add
jne
mov
and
test
sub
iret
test
scas
aaa
or
and
jne
int3
add
mov
add
mov
pmuludq
mov
sti
scas
mov
add
jg
or
fidivr
icebp
and
add
add
(bad)
and
pop
add
xor
popa
int3
add
or
test
add
add
test
push
jo
js
repnz
sub
int3
add
sub
mov
cmovae
mov
jp
test
jmp
lods
fisubr
and
add
mov
test
add
scas
aaa
lods
aaa
or
add
mov
dec
(bad)
and
add
add
add
add
jnp
sti
rcr
add
add
sub
jnp
mov
inc
pop
pop
fld
cwde
jp
sub
pop
xchg
add
int
(bad)
add
push
(bad)
mov
movq
add
add
test
add
loopne
cmps
mov
add
pop
add
add
inc
sti
sub
or
data16
xor
push
and
jp
mov
movs
pop
pusha
nop
pop
add
add
jg
inc
add
add
add
add
mov
jg
jmp
mov
cdq
scas
push
and
inc
add
hlt
(bad)
jb
add
jmp
mov
sub
aaa
inc
sbb
sub
sub
movs
jo
add
sti
ror
cmp
mul
cmp
inc
pop
add
xor
cmp
movs
mov
jo
bnd
fs
and
jg
fiadd
sub
mov
and
jne
add
mov
mov
inc
add
jmp
mov
or
add
sub
mov
(bad)
xchg
add
adc
(bad)
and
mov
add
inc
inc
and
push
(bad)
sbb
mov
add
into
dec
int3
add
add
stc
lock
(bad)
push
inc
add
inc
aaa
add
fld
jb
push
ja
int3
inc
pop
pusha
jg
dec
jo
add
test
imul
mov
daa
jae
pop
lea
add
jmp
mov
sub
repz
and
pop
push
add
jmp
sti
xor
adc
fdiv
mov
and
cmp
jmp
push
mov
icebp
dec
int3
int3
pop
add
mov
dec
test
cs
sub
int3
add
mov
jb
and
clts
xlat
add
push
jmp
loop
and
pop
add
xchg
sar
push
mov
outs
daa
test
add
add
jo
sbb
ror
add
inc
sub
or
pop
bound
add
inc
test
add
add
rcr
mov
and
pop
push
nop
add
test
add
add
retf
jae
inc
or
mov
add
repz
mov
adc
mov
xor
inc
add
je
jmp
sbb
(bad)
sahf
cmps
movs
push
bound
and
je
jmp
mov
or
mov
xor
xor
xor
(bad)
add
mov
(bad)
add
dec
(bad)
sub
ss
add
xchg
add
mov
and
add
add
mov
je
jmp
aas
test
aaa
enter
(bad)
iret
jbe
test
imul
fist
cmp
mov
sub
mov
pmuludq
add
mov
add
mov
fbld
add
sub
fild
je
jmp
aam
and
add
add
repz
sbb
test
add
add
add
add
add
pop
or
fimul
add
fsubr
jmp
mov
jne
add
xchg
jnp
add
(bad)
mov
add
test
inc
fild
add
scas
mov
push
stos
(bad)
call
(bad)
push
icebp
mov
mov
jmp
mov
sar
add
mov
cmp
aaa
add
add
shufps
test
jmp
sub
mov
movs
jmp
mov
(bad)
adc
add
sti
scas
(bad)
mov
push
add
jmp
add
add
add
jmp
(bad)
(bad)
mov
mov
xchg
and
arpl
add
mov
bound
add
xchg
xchg
and
add
add
iret
xor
pop
add
mov
and
jp
cs
nop
repz
mov
aam
aaa
add
push
xchg
mov
fsubrp
xchg
push
inc
(bad)
mov
icebp
call
mov
push
aas
and
add
scas
add
mov
add
(bad)
call
mov
push
repnz
hlt
cwde
(bad)
push
shr
vfrczpd
(bad)
call
inc
mov
jns
mov
xchg
bound
add
fadd
jmp
cmp
mov
cmp
push
lock
or
mov
xchg
div
sub
add
mov
popa
and
jg
shr
push
ja
sub
fsub
sub
loopne
cmp
jg
scas
add
sbb
push
bound
jmp
mov
cmc
test
add
mov
pop
fcom
and
add
popa
and
test
enter
(bad)
iret
(bad)
pop
dec
mov
and
add
mov
fiadd
int3
add
mov
and
add
add
cmps
xor
mov
add
sub
loop
dec
out
add
sbb
inc
xchg
inc
(bad)
pushf
add
sub
fild
(bad)
icebp
dec
sbb
add
rcr
jmp
mov
and
mov
add
sti
scas
mov
push
mov
add
inc
dec
les
mov
inc
repz
mov
shl
hlt
sti
pop
sub
mov
mov
(bad)
adc
cmp
add
add
pop
nop
dec
enter
(bad)
jbe
cmp
mov
and
(bad)
fsubr
add
add
shl
cwde
jmp
(bad)
mov
xor
mov
add
add
test
pop
add
add
xor
inc
jp
sub
jo
add
hlt
jp
xchg
add
sti
daa
std
add
add
dec
mov
push
aam
mov
popa
aam
add
xchg
add
movs
jo
sahf
leave
or
mov
and
add
scas
mov
push
mov
fist
mov
fdivp
dec
inc
inc
mov
test
sub
or
mov
idiv
(bad)
(bad)
push
push
adc
ret
dec
xlat
retf
lock
mov
cmp
dec
adc
mov
test
rol
sub
pop
es
sti
add
and
add
add
jmp
jne
and
jne
int3
mov
sbb
jmp
(bad)
(bad)
and
add
cs
jl
mov
call
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
add
js
xchg
xchg
ror
cmp
jmp
call
shl
inc
je
add
test
jmp
mov
mov
push
pop
push
mov
push
mov
ret
cmp
ror
jge
mov
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
sar
jne
sar
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
add
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
mov
add
in
repnz
mov
add
mov
add
jg
xchg
ror
and
add
or
xchg
pop
mov
add
and
mov
pusha
jg
inc
add
add
jecxz
leave
fild
add
sub
mov
add
popa
push
jnp
lahf
pop
(bad)
rol
or
xor
jae
aas
shl
add
in
(bad)
and
add
xchg
add
in
mov
sahf
add
jg
mov
je
jmp
mov
add
mov
cmp
pusha
stos
in
(bad)
and
in
jnp
add
loope
mov
jl
out
push
add
pop
in
cmp
rol
push
ss
jo
dec
xchg
or
add
pop
movs
mov
je
mov
add
push
pop
add
add
push
movs
jg
mov
sub
test
add
add
(bad)
fbld
add
inc
test
pop
add
sub
jmp
push
jnp
loope
add
mov
movs
add
add
sti
cld
add
push
fild
add
jmp
lods
test
out
dec
sub
mov
jg
jmp
jmp
add
add
rcr
and
pop
test
jp
add
add
ror
imul
add
mov
inc
outs
jo
nop
and
in
push
add
in
or
xchg
jmp
inc
and
pop
test
jnp
add
add
sbb
movs
add
add
mov
lds
mov
stos
add
mov
movs
add
push
push
inc
jl
loope
sti
fwait
add
add
add
mov
inc
(bad)
and
add
add
dec
dec
jnp
add
mov
mov
sub
add
ins
add
lahf
mov
loopne
add
add
mov
retf
test
add
add
add
push
mov
push
movsx
pop
fwait
out
jmp
cmp
in
add
push
enter
push
cmovne
add
add
mov
shr
xlat
ins
movs
push
not
fcom
add
lahf
add
mov
test
fs
sub
scas
jne
dec
jl
jmp
add
mov
sub
ins
inc
and
movsx
retf
push
hlt
test
scas
inc
ror
inc
(bad)
aas
add
mov
add
add
test
add
stos
sub
mov
punpcklbw
loop
mov
out
mov
and
add
add
dec
inc
and
jg
jmp
clc
dec
and
add
add
xchg
add
inc
and
paddsb
add
jmp
push
push
movs
mov
ds
outs
mov
cmovnp
add
sub
enter
test
add
dec
sub
jmp
test
jp
add
mov
jl
fwait
out
add
ds
and
iret
or
fdiv
dec
add
in
repnz
push
test
cmp
mov
fwait
test
add
retf
(bad)
imul
jg
jmp
inc
test
add
dec
sub
mov
test
add
in
xchg
mov
test
pop
add
ret
pop
xchg
pop
neg
and
rdpmc
cmp
adc
xor
add
add
sub
mov
and
punpcklwd
in
add
push
pop
add
ret
ror
and
je
sub
mov
movs
xor
sub
ret
pop
stos
or
in
add
stos
jmp
lock
add
add
mov
ja
jo
arpl
add
les
and
add
enter
jnp
mov
mov
mov
inc
add
test
(bad)
loope
sub
addr16
and
sti
test
add
shl
mov
ror
(bad)
xor
mov
add
add
in
das
sub
inc
dec
cmp
add
pop
fwait
out
mov
es
mov
and
rol
mov
mov
enter
ss
in
dec
push
jecxz
add
and
(bad)
(bad)
dec
add
pop
enter
loopne
adc
movzx
cmp
(bad)
mov
into
cmp
pusha
add
in
add
xor
or
cmp
mov
jle
test
add
(bad)
sar
mov
xor
pinsrw
xor
pop
mov
xchg
mov
xchg
and
add
in
repnz
dec
cmp
add
xlat
es
mov
ret
inc
or
dec
pop
jmp
pop
ja
imul
pusha
lds
sbb
pop
fwait
mov
sub
lahf
mov
add
rol
push
leave
add
mov
idiv
popa
stos
add
popa
and
add
push
jmp
and
retf
test
jmp
pminsw
or
daa
add
div
out
test
pop
mov
fistp
add
mov
mov
add
mov
mov
and
add
lahf
add
dec
mov
rol
add
and
add
jae
mov
mov
mov
outs
in
mov
add
rol
(bad)
(bad)
(bad)
inc
pop
mov
mov
jmp
pop
push
imul
(bad)
push
imul
mov
jae
(bad)
dec
and
dec
add
mov
add
(bad)
in
add
add
ss
inc
mov
fild
add
mov
add
pop
add
mov
ret
mov
dec
or
jmp
mov
outs
cmps
mov
add
add
jnp
loope
jmp
push
(bad)
sti
mov
pushf
aad
(bad)
jmp
retf
add
dec
add
add
add
mov
lods
push
and
add
jnp
and
add
cmp
add
mov
out
add
pop
sub
add
(bad)
inc
dec
sub
mov
(bad)
mov
test
add
hlt
mov
clc
(bad)
dec
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
add
jb
shr
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
ror
dec
jmp
call
xchg
mov
jmp
mov
push
mov
push
mov
mov
push
mov
pop
push
mov
ret
shl
xchg
jno
mov
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
dec
inc
cmp
sub
jb
xchg
or
add
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
dec
icebp
mov
or
mov
mov
call
add
add
or
and
add
add
mov
movs
aam
add
mov
and
add
enter
(bad)
push
xchg
jns
movs
push
pop
add
mov
xor
add
or
push
dec
add
test
add
add
test
sub
mov
mov
test
jo
mov
or
sub
mov
add
jg
add
jmp
push
and
add
dec
mov
shld
cmp
push
iret
pop
add
add
add
test
sub
fadd
sub
jns
pop
add
aad
test
lods
add
add
test
push
add
mov
and
call
lock
lfs
add
jmp
mov
lds
sbb
mov
call
xor
and
aam
mov
call
add
add
add
sub
pop
retf
pop
sub
test
or
pop
daa
test
cmc
sub
dec
pop
cld
mov
out
les
push
add
add
fild
sub
adc
(bad)
test
cmp
inc
add
xchg
icebp
or
test
add
(bad)
prefetch
and
add
test
test
push
adc
mov
add
push
add
or
call
pop
and
add
pop
jg
rcl
rcr
dec
add
sub
mov
movs
fild
cmp
(bad)
jne
pop
add
add
add
mov
int3
cmp
jmp
mov
jg
data16
and
call
popa
test
pop
pop
retf
pop
in
add
xchg
loope
hlt
and
add
(bad)
outs
push
mov
ja
rcr
add
fisttp
pop
add
scas
stc
inc
movs
and
(bad)
mov
add
add
test
neg
(bad)
js
jg
jmp
or
and
add
retf
inc
pop
ins
xchg
(bad)
pop
add
sub
add
retf
pop
sub
sbb
femms
lods
add
cmp
and
add
test
add
int
test
inc
ret
add
mov
jns
sub
push
(bad)
and
bts
add
sub
ltr
test
xchg
sbb
(bad)
push
xchg
loope
jmp
mov
add
call
mov
and
push
test
pop
add
jo
test
add
pop
add
pusha
lea
test
xor
add
fisttp
retf
pop
sub
mov
pcmpgtw
je
cmp
add
(bad)
scas
add
adc
add
cmp
and
fcomp
sbb
je
data16
add
sub
add
adc
das
pop
fild
cmp
repz
add
add
ret
mov
cmps
cld
test
jmp
push
test
add
jno
test
and
unpckhps
add
add
les
pop
sub
lods
in
and
xchg
test
add
add
add
add
pop
les
add
sub
mov
and
sahf
test
add
or
add
add
add
mov
mov
pop
stos
lgs
and
xor
add
add
out
adc
test
add
add
fiadd
and
and
xor
fwait
push
inc
jns
push
test
cmp
js
loope
add
test
stc
mov
repnz
lea
test
add
add
and
sub
mov
sub
xchg
add
loope
add
cdq
aam
cmp
cmc
adc
add
loopne
add
bound
xchg
push
mov
lock
mov
xor
and
push
and
or
or
jmp
neg
mov
or
add
jo
test
(bad)
add
add
and
call
dec
add
call
(bad)
iret
sahf
push
jmp
mov
mov
mov
stos
bound
add
mov
push
adc
dec
jmp
mov
add
jo
rol
add
sub
add
and
mov
add
mov
mov
and
inc
and
add
add
aad
sbb
jns
xchg
(bad)
call
lock
movs
mov
add
cmps
clc
test
cmps
movs
and
add
pop
dec
cmp
add
aam
stc
mov
add
and
pop
enter
and
nop
xor
pop
add
mov
mov
add
add
add
mov
stos
mov
and
and
fst
push
std
(bad)
mov
mov
add
dec
xchg
add
push
int3
add
add
pop
push
add
mov
push
and
test
mov
out
inc
cmp
add
adc
in
lock
(bad)
(bad)
mov
sub
mov
push
add
cmp
cmovne
mov
pop
and
and
add
and
stos
data16
add
cmp
fs
sub
add
cmp
mov
xchg
push
mov
movs
int3
add
push
pop
push
enter
out
jns
mov
and
sub
and
add
add
int3
add
inc
xchg
js
add
xchg
push
and
mov
std
inc
or
sub
mov
int3
add
add
pop
and
add
add
mov
in
add
xchg
mov
push
and
add
push
add
add
stc
sub
and
jmp
mov
jmp
mov
cmp
ja
pop
add
cmps
fsub
add
test
mov
enter
xor
fsub
add
stc
test
pop
xchg
(bad)
inc
test
and
outs
cmp
jmp
xchg
inc
sbb
enter
jmp
mov
or
add
add
add
xchg
rol
inc
js
add
and
jmp
mov
mov
imul
ret
retf
mov
add
daa
add
js
or
fwait
push
test
add
sub
and
je
mov
mov
mov
jmp
test
sub
jmp
(bad)
fsub
add
add
push
dec
add
pop
inc
or
bound
call
add
pop
pop
ret
mov
push
and
push
add
mov
mov
and
enter
test
in
mov
mov
mov
mov
jns
retf
pop
add
xchg
add
and
cmp
add
inc
and
shl
std
dec
and
cmp
pop
retf
add
mov
hlt
xchg
add
sti
adc
add
mov
add
adc
and
jns
add
add
int
mov
jmp
(bad)
hlt
movs
pushf
add
add
add
sbb
call
add
xchg
(bad)
inc
pop
and
add
pop
not
(bad)
push
adc
(bad)
call
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
jo
rol
shl
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
shr
inc
jge
or
test
dec
dec
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
cmp
mov
je
add
cmp
or
jmp
call
and
shl
dec
inc
dec
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
mov
pop
mov
push
ret
cmp
shr
not
jne
rol
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
jmp
add
add
mov
lea
or
mov
(bad)
imul
sahf
mov
test
mov
popf
dec
test
pop
add
test
add
lea
mov
stos
add
int
test
push
add
pop
test
loope
add
test
hlt
mov
cmp
jp
mov
add
jae
arpl
add
or
mov
test
add
add
or
add
aas
sbb
dec
add
add
nop
mov
in
and
add
mov
mov
add
add
and
add
rol
lds
call
mov
lods
inc
sbb
aaa
inc
add
add
mov
stos
es
(bad)
dec
add
mov
mov
jle
and
or
add
jne
(bad)
(bad)
dec
adc
add
(bad)
pusha
and
add
add
pop
and
sub
push
call
test
add
out
mov
add
add
inc
lds
aad
sahf
or
mov
inc
fmul
add
add
mov
and
add
add
add
push
mov
rol
jne
and
shl
add
mov
jl
add
imul
hlt
add
jmp
add
int
sub
add
add
mov
add
ror
add
enter
rol
sub
cmp
out
adc
and
int3
add
pop
xchg
and
inc
add
cld
add
loop
loope
inc
rcr
adc
icebp
xor
inc
add
sbb
mov
push
add
sbb
fsubr
pop
cmp
mov
jne
popf
or
pop
and
call
mov
lea
add
and
imul
cmp
lea
add
or
add
adc
lea
mov
mov
or
add
int3
mov
jae
mov
xchg
hlt
mov
fs
add
aad
pop
add
call
mov
or
lea
mov
or
push
call
xchg
adc
mov
inc
add
push
and
add
mov
and
add
add
lea
and
loop
cld
mov
lea
icebp
cwde
popa
pop
adc
loope
mov
or
add
sub
in
push
pop
inc
lods
mov
mov
fsub
add
pop
add
fst
popa
cmp
jl
or
test
pop
aad
add
add
mov
sbb
push
add
inc
mov
mov
add
mov
mov
add
pop
pop
or
mov
mov
jne
data16
sbb
arpl
add
add
sub
in
and
int3
aad
xchg
test
jne
popf
add
jp
sub
mov
push
(bad)
and
add
add
test
add
inc
sub
pop
fs
std
mov
ltr
jmp
into
test
mov
add
sub
mov
and
imul
(bad)
sahf
add
aad
adc
add
sub
imul
add
aas
add
sbb
test
imul
(bad)
test
and
lahf
add
out
or
add
loopne
inc
cmp
xor
test
out
push
jg
jns
hlt
add
add
sub
mov
and
test
mov
popf
add
cmp
lds
call
push
mov
pmulhw
add
add
add
clc
daa
pusha
mov
imul
add
or
call
lahf
pop
test
test
add
pusha
aad
add
add
dec
and
add
aad
cmp
fs
adc
lods
add
aas
add
jae
sub
mov
(bad)
rol
add
add
test
popa
lahf
loopne
rcl
cmp
inc
adc
and
add
adc
call
add
call
push
ret
loopne
mov
jg
jmp
xor
sub
dec
call
(bad)
ins
cmp
add
add
push
adc
cmp
add
inc
mov
test
lahf
add
(bad)
out
cli
mov
lds
xchg
test
adc
jp
fnstcw
jae
mov
and
jb
arpl
in
xchg
hlt
add
ins
inc
int
sbb
mov
add
xchg
int3
add
test
adc
dec
mov
push
add
call
and
add
add
mov
ret
push
add
jmp
mov
add
cwde
test
and
pushf
outs
add
jns
add
add
and
inc
add
sub
mov
repz
add
mov
and
add
add
cwde
inc
push
inc
aas
sbb
jmp
add
jmp
add
pop
fs
std
mov
rcr
xchg
add
add
test
add
add
jecxz
and
xchg
add
jg
and
add
xor
add
sbb
test
dec
inc
aas
sbb
add
push
add
add
ins
add
add
dec
xchg
imul
add
ss
in
add
add
adc
aas
add
jmp
dec
inc
mov
add
add
add
test
sub
mov
xchg
(bad)
ficomp
adc
jmp
mov
add
mov
mov
push
add
inc
jg
ja
add
add
mov
sub
adc
and
add
add
(bad)
fld
and
(bad)
add
add
mov
inc
fsubrp
nop
add
stos
movs
or
std
add
add
add
add
add
ja
and
loope
popf
call
mov
add
add
xchg
pop
pusha
add
sub
hlt
mov
test
int3
add
sub
mov
les
(bad)
repz
add
popf
add
dec
call
pop
push
lock
test
(bad)
mov
add
int
aad
mov
test
add
cli
add
les
pushf
lds
push
cmc
pop
inc
add
(bad)
sbb
push
test
xchg
add
movs
inc
cmp
add
loopne
(bad)
aas
inc
mov
lds
add
xor
add
popa
sbb
aas
add
xchg
add
push
out
add
mov
int
sub
jne
les
(bad)
fld
adc
inc
aas
sbb
test
imul
mov
in
and
add
aad
adc
cld
add
movs
jnp
and
mov
sahf
push
or
add
paddsb
add
add
add
addr16
aad
mov
xor
xor
les
adc
push
add
add
add
arpl
push
mov
in
addr16
aam
add
adc
test
add
loopne
add
xor
sub
mov
arpl
fwait
out
add
mov
int
sub
mov
jg
test
test
icebp
sbb
movs
xor
jge
adc
or
add
(bad)
fiadd
aad
or
test
cld
mov
lds
mov
dec
mov
push
add
add
add
sub
imul
add
jmp
mov
push
mov
je
jmp
mov
sub
mov
cmovns
sahf
loopne
push
add
test
and
pushf
lds
sub
mov
xor
inc
add
push
imul
add
cmp
mov
retf
add
add
add
test
icebp
add
aas
sub
mov
pmaxsw
mov
mov
sub
mov
je
clc
fdivr
add
inc
add
sahf
add
dec
cmp
pusha
dec
int
jmp
xor
add
add
mov
add
pop
push
jmp
mov
cmp
add
sub
mov
push
loopne
add
add
mov
add
xchg
test
sub
xchg
test
jae
push
test
cld
add
popa
pusha
outs
inc
add
add
sub
jne
and
add
add
test
fwait
lds
jmp
scas
test
inc
aas
add
data16
dec
add
dec
test
pop
add
cmp
add
loopne
js
mov
add
sub
mov
loope
add
adc
dec
inc
aas
add
push
jo
add
out
and
add
add
in
addr16
test
or
and
pushf
add
sub
repz
add
add
test
adc
mov
hlt
add
pop
test
loopne
cld
mov
mov
loopne
je
sbb
add
mov
aas
aaa
fdivr
jmp
mov
and
add
loopne
pop
cld
mov
inc
xlat
sahf
loopne
js
mov
add
mov
sar
jb
shl
aas
sbb
add
loopne
hlt
add
test
add
sub
pop
mov
out
test
push
adc
sub
and
into
test
mov
add
sub
data16
(bad)
call
loope
add
mov
add
add
mov
add
mov
jmp
xchg
test
js
in
push
mov
cwde
mov
ret
popf
loopne
adc
mov
loope
pop
adc
sub
mov
sbb
fild
add
xor
lods
mov
add
rcl
and
add
add
sbb
add
add
add
mov
sub
mov
sbb
(bad)
add
sahf
add
mov
add
loopne
out
lock
test
mov
mov
inc
pop
adc
test
add
aaa
mov
out
retf
test
mov
bound
add
mov
fmul
cmp
xor
add
setne
and
add
sbb
push
mov
in
and
je
ja
add
add
js
or
add
imul
and
xor
add
out
mov
push
ret
adc
in
addr16
test
jbe
add
ja
and
loope
add
mov
push
dec
add
jmp
clc
out
fiadd
add
sub
add
and
ret
add
add
pop
test
add
fs
les
adc
mov
je
jmp
mov
sub
mov
bndldx
add
add
loopne
mov
jle
fs
inc
and
paddd
ins
aas
add
xchg
test
add
add
mov
and
lahf
test
push
hlt
add
ins
add
test
sub
add
cwde
adc
and
je
clc
ss
add
add
dec
push
jns
inc
retf
push
unpcklps
add
jmp
mov
fld
add
mov
je
jmp
sub
pop
jp
std
sbb
lods
test
or
fld
add
in
cli
inc
add
int
inc
pop
imul
add
fwait
add
jge
push
xchg
mov
inc
add
jmp
mov
mov
stos
lahf
rol
add
sbb
clc
add
test
in
mov
sti
out
popf
lea
push
inc
sbb
sub
(bad)
(bad)
mov
(bad)
xor
(bad)
cmp
mov
retf
and
pop
add
jmp
mov
mov
push
test
test
add
hlt
jmp
(bad)
dec
and
add
add
xchg
mov
(bad)
stc
add
add
in
mov
jmp
mov
aas
add
sbb
call
out
out
push
jmp
sbb
push
add
add
mov
sub
sbb
or
sar
xchg
push
sahf
bnd
pushf
and
sub
add
mov
add
add
or
dec
sbb
xor
xlat
jmp
jae
add
(bad)
clc
add
push
add
xchg
pop
clc
add
and
pop
(bad)
mov
jp
add
retf
call
out
and
xchg
add
jmp
mov
jmp
imul
nop
mov
add
mov
or
mov
neg
sbb
add
cmp
jbe
loop
retf
or
dec
mov
lock
add
mov
mov
or
push
out
and
mul
bound
push
int
nop
hlt
dec
jmp
sahf
call
daa
xor
pop
sbb
test
mov
mov
inc
aas
add
add
clc
mul
out
add
mov
sub
retf
sub
mov
add
pusha
mov
mov
imul
add
inc
aas
sbb
inc
mov
out
retf
clc
add
add
add
add
test
xchg
mov
rol
cld
mov
mov
or
adc
sub
aaa
add
add
jmp
sbb
jo
add
out
addr16
adc
adc
inc
inc
and
mov
dec
and
dec
inc
and
stc
in
(bad)
(bad)
mov
test
fcom
add
push
je
push
add
out
add
mov
int3
add
jmp
pop
fs
std
add
je
add
lds
mov
and
add
repz
add
mov
mov
mov
jl
push
add
add
mov
xchg
mov
or
ror
add
enter
add
and
call
cld
add
add
xchg
data16
push
add
add
add
add
push
retf
add
aam
or
dec
inc
retf
jmp
sub
fst
lds
add
jne
ret
and
imul
data16
xor
push
cmps
repz
fisttp
cld
mov
sbb
(bad)
and
inc
add
jmp
mov
mov
retf
push
add
mov
je
push
add
add
and
call
mov
xor
test
push
add
loope
add
add
pusha
popa
aaa
xchg
inc
push
pop
jecxz
and
outs
and
jecxz
mov
inc
test
data16
cld
jmp
(bad)
sbb
clc
pop
adc
cmp
mov
mov
or
iret
outs
ret
xor
loopne
add
ror
popf
jmp
mov
repz
int3
call
mov
add
bound
add
or
add
int
aad
test
add
and
fcmovb
add
cmps
rcl
popf
mov
int
inc
add
xchg
loope
dec
jmp
retf
ins
or
add
nop
add
nop
in
mov
sbb
js
clc
add
mov
popf
jge
int
or
mov
add
ret
pop
mov
out
retf
push
jmp
ins
(bad)
mov
(bad)
(bad)
cmp
add
int
or
fidivr
add
test
js
add
mov
test
add
sti
(bad)
test
jmp
xor
and
inc
push
mov
push
lahf
add
loopne
dec
gs
add
and
int3
mov
add
sbb
test
mov
loopne
mov
mov
mov
inc
add
add
push
add
jg
adc
(bad)
inc
clc
inc
aas
add
inc
jmp
mov
stos
inc
test
add
and
cwde
add
push
adc
mov
jne
imul
add
(bad)
and
and
add
mov
jmp
mov
mov
test
retf
inc
inc
icebp
call
test
imul
xchg
push
and
xchg
fisub
add
mov
je
push
add
add
xor
lods
add
add
nop
add
and
in
jmp
les
(bad)
stc
mov
push
add
add
in
dec
dec
cmp
stc
add
add
ret
add
and
enter
push
add
ja
bound
add
mov
jecxz
and
sbb
add
shr
dec
daa
test
test
add
test
push
xchg
add
cmp
fst
dec
or
mov
xor
call
mov
mov
fst
mov
push
mov
mov
out
and
pop
rol
adc
push
(bad)
js
clc
mov
outs
mov
ficomp
add
(bad)
test
inc
add
rcr
mov
jmp
push
jo
jo
ins
inc
sub
push
dec
push
mov
push
push
push
and
sub
jmp
call
ror
not
sar
js
sub
rol
jmp
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
mov
pop
mov
jmp
cmp
cmp
xchg
test
jl
add
xor
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
cmp
not
jle
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
jne
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
shl
js
mov
dec
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jo
xchg
adc
mov
add
add
add
mov
adc
push
je
scas
(bad)
and
add
sub
add
mov
lock
int3
mov
and
or
sti
jl
or
jae
cld
retf
mov
and
push
jbe
(bad)
sub
mov
jb
mov
iret
(bad)
and
push
jnp
add
add
xchg
cmp
mov
sbb
je
test
bound
push
test
add
add
xlat
or
push
inc
inc
call
push
jnp
setno
mov
mov
mov
sub
test
add
add
or
push
push
mov
mov
outs
mov
add
xchg
rol
mov
add
cmp
sub
add
mov
pmulhw
add
add
push
test
mov
mov
jge
mov
pop
(bad)
and
push
mov
add
add
(bad)
sbb
mov
and
push
je
out
add
mov
mov
add
outs
adc
inc
adc
push
je
repz
(bad)
add
jo
and
add
bound
ins
mov
ret
add
mov
add
sti
push
test
and
add
push
push
je
adc
mov
jg
jmp
mov
sub
mov
and
jbe
push
and
jmp
adc
sub
mov
in
xor
aam
sti
push
sub
add
test
add
add
sub
sub
sub
jg
jmp
mov
sub
mov
adc
call
(bad)
add
or
(bad)
add
dec
or
(bad)
add
add
fsubr
add
rcl
mov
xchg
cs
mov
or
sub
loope
and
paddusb
add
add
aas
add
add
and
add
add
mov
and
jg
or
push
das
inc
add
cs
ins
dec
push
jbe
lds
aas
add
jo
mov
cs
cld
and
(bad)
push
add
add
add
jo
and
add
inc
xchg
mov
inc
and
jns
ja
add
push
add
add
add
push
sub
mov
je
jmp
mov
sub
fild
je
jmp
mov
xchg
jae
aam
mov
je
fsubp
rol
mov
and
jnp
add
imul
(bad)
dec
clc
add
jmp
mov
sub
cld
(bad)
out
mov
push
dec
stc
mov
add
rol
sub
mov
and
(bad)
mov
mov
test
push
push
mov
inc
je
call
adc
jp
jne
add
test
add
mov
add
and
mov
lods
popf
adc
xor
je
mov
mov
add
mov
cmp
inc
add
add
add
es
inc
xchg
mov
in
repz
jmp
mov
sub
mov
movq
test
jmp
mov
add
sub
mov
add
add
push
test
push
sbb
sub
test
mov
sbb
js
add
sub
xchg
cld
(bad)
cdq
rsqrtps
pop
mov
dec
int3
add
sub
mov
and
push
enter
call
mov
sbb
inc
pop
add
or
xlat
add
add
sub
inc
(bad)
outs
ins
fild
pop
test
add
add
push
add
sti
xor
and
add
and
aas
cmp
test
add
add
aam
(bad)
add
add
sub
std
inc
and
shrd
add
mov
sub
mov
or
add
add
jmp
jmp
mov
mov
pop
xchg
cmps
jmp
add
cli
sub
push
call
and
add
add
ds
imul
push
or
and
rol
jmp
ret
sub
and
cmp
setg
and
mov
je
loope
push
out
sub
add
add
cld
repz
loop
sbb
(bad)
icebp
xchg
and
mov
xlat
add
ror
add
loope
bound
test
push
jbe
sub
add
sti
push
cmp
std
dec
cwde
add
jnp
lods
and
dec
and
imul
mov
add
outs
ins
adc
and
test
sub
ror
ja
add
add
sti
mov
mov
aaa
add
jmp
mov
add
js
add
add
mov
and
bound
push
mov
add
fisttp
mov
ja
xlat
cmp
add
mov
mov
or
add
add
mov
mov
add
add
xchg
add
mov
xor
jmp
rcl
adc
and
aas
add
jmp
(bad)
mov
mov
sahf
cs
jb
add
mov
mov
jmp
mov
mov
sar
add
sub
xor
test
add
rol
jmp
test
push
mov
add
add
add
mov
add
inc
mov
add
sti
push
sbb
add
pop
test
mov
push
mov
push
add
inc
outs
sub
push
sti
mov
add
dec
mov
ja
aas
add
jb
mov
jmp
xchg
test
mov
hlt
pop
pop
lea
(bad)
(bad)
and
add
add
push
add
lods
dec
mov
popa
in
lds
add
add
add
sti
jb
inc
sbb
mov
add
sub
retf
or
das
inc
mov
sub
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
rol
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
test
shl
dec
cmp
jg
shr
xor
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xchg
cmp
jmp
call
sar
sar
jmp
mov
push
pop
mov
mov
push
mov
mov
mov
jmp
inc
not
dec
jle
dec
cmp
or
and
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ror
addr16
add
imul
pop
add
add
rcl
add
outs
mov
and
call
shr
ss
add
mov
mov
(bad)
test
pop
sub
dec
and
call
jmp
dec
and
push
ficom
sahf
mov
push
adc
mov
int3
jg
dec
mov
dec
fild
add
inc
add
inc
and
bound
push
mov
jg
loop
and
neg
adc
mov
inc
sbb
iret
sbb
add
add
std
daa
sub
mov
dec
test
pop
add
in
inc
stos
and
neg
adc
test
rcl
xchg
add
add
dec
aas
adc
mov
pop
and
das
inc
pop
add
cmp
jl
inc
and
(bad)
xor
add
xchg
add
dec
mov
mov
movs
(bad)
and
add
push
and
lea
pop
cmp
xchg
jb
sub
outs
popa
call
jecxz
les
(bad)
fbld
add
add
cmp
pop
int
pop
add
inc
call
mov
rol
stos
xor
int
cvtdq2ps
mov
lea
and
ret
sub
sahf
mov
push
push
and
mov
call
mov
mov
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
movzx
movzx
cmp
cmove
mov
jmp
mov
add
mov
mov
jmp
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
lea
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
sub
sub
add
shl
mov
add
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
call
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
mov
call
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
call
sub
neg
mov
sub
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
imul
mov
call
mov
jmp
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
sub
add
mov
shl
add
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
mov
mov
sub
sub
add
mov
sub
add
mov
shl
add
mov
shl
add
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
lea
lea
mov
mov
mov
mov
mov
call
sub
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
lea
mov
add
sub
sub
mov
shl
add
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
call
mov
xor
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
mov
xor
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movzx
mov
mov
movzx
mov
mov
mov
lea
inc
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
lea
mov
xor
mov
mov
mov
div
mov
mov
mov
movzx
mov
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
add
sub
sub
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
sub
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
shl
mov
cmp
cmovne
mov
jmp
mov
mov
call
shl
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
sub
add
mov
sub
add
add
sub
mov
sub
sub
sub
add
add
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
add
mov
sub
sub
add
add
add
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
lea
lea
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
mov
mov
call
sub
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
jmp
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
call
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
add
mov
shl
add
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
mov
mov
sub
add
mov
sub
add
mov
shl
add
mov
shl
add
mov
mov
mov
mov
mov
call
mov
mov
jmp
lea
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
lea
mov
sub
sub
add
mov
shl
add
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
lea
lea
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
call
sub
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
lea
imul
add
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
imul
add
mov
mov
mov
mov
mov
mov
call
sub
lea
imul
add
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
add
pop
pop
ret
mov
jmp
mov
jmp
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
sub
rol
jae
cmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
push
ret
cmp
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
jno
sub
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
sar
jl
or
and
sub
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
dec
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ror
sbb
and
add
mov
and
add
mov
sub
sub
call
add
add
inc
dec
rol
mov
(bad)
add
add
icebp
inc
adc
add
ret
nop
jmp
bound
mov
mov
ds
xor
jbe
movs
inc
repnz
add
inc
or
adc
add
add
ret
inc
add
mov
and
add
mov
ss
add
add
add
and
pop
add
clc
inc
jmp
mov
inc
(bad)
and
add
call
cmp
add
add
mov
add
fcos
or
ss
mov
sub
mov
add
(bad)
adc
popa
add
add
inc
cmp
sub
mov
lds
add
stos
(bad)
mov
add
movs
mov
sub
mov
add
in
mov
add
add
mov
(bad)
sub
cmp
sub
add
(bad)
adc
mov
jmp
jmp
dec
pop
mov
faddp
mov
add
xchg
add
movs
jmp
mov
sub
call
add
bound
jmp
mov
and
add
add
in
test
add
jb
(bad)
xchg
add
movs
inc
add
repnz
mov
cmp
xchg
add
je
jmp
fnsave
adc
jg
pop
pop
sti
test
jge
add
add
bound
dec
cmp
lea
push
add
test
cmp
ins
retf
xor
add
call
add
jp
and
pop
add
test
add
pop
xchg
cmp
and
movs
gs
sbb
add
or
test
add
add
popa
test
leave
add
jg
mov
add
add
push
add
mov
and
add
add
xchg
lods
test
add
mov
and
add
add
mov
and
cmp
add
push
cmp
push
add
movs
add
sti
test
mov
add
test
repnz
jmp
mov
and
cmp
pop
fs
and
and
movs
add
pminsw
retf
jmp
das
sub
add
in
cdq
inc
out
push
mov
jmp
inc
mul
add
movs
sub
popa
test
sub
add
(bad)
push
add
pop
mov
dec
test
mov
movs
dec
jo
jp
mov
add
add
inc
add
add
cmp
mov
and
(bad)
push
mov
retf
mov
movs
mov
sub
mov
ins
test
xor
add
out
pop
add
cmp
sub
mov
cmovne
add
repnz
and
jmp
jg
test
test
cmp
pop
mov
dec
stos
arpl
retf
and
movs
add
ror
add
mov
dec
cmp
mov
mov
add
mov
outs
test
or
cmp
add
cmp
pushf
or
icebp
mov
push
push
add
add
add
add
repz
add
ror
add
push
int
or
add
xor
add
mov
mov
and
pmaxsw
add
enter
add
mov
jl
add
sub
fbstp
adc
aaa
int3
add
jmp
mov
sub
mov
enter
(bad)
push
pop
add
mov
dec
shl
add
test
repnz
add
cmp
cmp
fld
sub
sub
add
test
add
add
cmp
shl
(bad)
je
jmp
mov
out
push
pop
in
and
ins
(bad)
and
add
dec
mov
(bad)
sub
mov
and
gs
je
jmp
mov
popa
sub
fsubr
mov
sbb
and
(bad)
push
pop
add
add
test
mov
ins
and
bound
xor
add
pop
add
and
add
idiv
test
std
(bad)
and
add
add
add
inc
out
cmp
sub
mov
and
push
add
movs
add
test
add
add
mov
(bad)
(bad)
and
add
add
add
test
cmp
(bad)
jnp
jb
shr
jb
xor
jmp
mov
arpl
cmp
cld
sar
psubusw
add
add
mov
pop
jbe
pop
and
(bad)
out
bound
add
add
sub
mov
cmp
jmp
and
sub
ror
sbb
(bad)
push
add
test
add
pop
xor
add
add
pop
mov
jbe
fld
and
add
add
mov
sbb
rcr
movs
test
loopne
(bad)
aam
add
mov
add
imul
jg
jmp
mov
enter
sub
mov
and
push
add
mov
add
in
mov
test
add
add
mov
and
add
add
(bad)
and
cmp
add
fnsave
and
add
add
mov
je
jmp
mov
add
sub
fsubr
mov
ss
and
add
add
out
dec
push
add
add
mov
movs
add
call
add
jmp
mov
add
mov
mov
pushf
sbb
dec
and
add
jg
sbb
add
arpl
sub
mov
je
mov
das
loope
repnz
mov
xchg
(bad)
js
test
xchg
call
push
add
mov
mov
(bad)
mov
add
push
sub
add
add
test
pop
add
mov
leave
bound
adc
test
cmp
add
fst
gs
cmp
and
add
popa
sub
ja
icebp
mov
xor
popw
add
jmp
mov
and
push
mov
sbb
mov
xor
jge
add
add
jmp
cmp
sub
mov
jb
test
mov
jmp
mov
sub
mov
jl
inc
mov
add
(bad)
mov
mov
sub
mov
je
jmp
inc
out
sbb
adc
and
(bad)
and
mov
jmp
mov
inc
add
add
mov
(bad)
adc
xor
add
add
test
dec
cmp
inc
hlt
mov
and
mov
add
add
add
out
test
add
add
mov
mov
call
pop
dec
mov
sbb
sub
in
inc
and
jge
and
add
mov
sub
mov
jecxz
mov
add
add
gs
not
sub
mov
pop
cmova
add
add
adc
cmp
(bad)
sti
cmc
and
cmps
jbe
add
cmp
dec
mov
add
inc
inc
push
push
jg
inc
repnz
add
mov
enter
add
ror
retf
add
mov
pop
sub
adc
inc
dec
je
mov
add
add
(bad)
sub
mov
lss
addr16
add
mov
and
dec
cmc
mov
inc
inc
ud1
add
mov
test
jmp
in
test
movs
test
add
add
xchg
jmp
and
bswap
push
push
cmp
jmp
mov
add
sub
cmp
and
cvtps2pi
add
add
xor
add
mov
in
jp
push
mov
add
push
pop
add
ss
test
retf
add
pop
mov
mov
xor
cmp
add
mov
and
add
add
cmp
sub
jge
gs
mov
add
scas
add
dec
push
pop
jae
retf
or
(bad)
arpl
arpl
cmp
push
cmovne
and
movs
add
jno
add
mov
jmp
fcmovbe
out
jb
mov
cs
add
xor
outs
icebp
and
jae
add
add
leave
bound
cmp
test
push
add
fbstp
mov
and
in
movs
in
add
fidivr
popf
int3
ret
dec
add
mov
pop
dec
(bad)
pavgb
jecxz
mov
add
add
jmp
mov
adc
gs
xchg
and
aaa
add
mul
cmovne
movs
test
add
add
mov
cmp
mov
nop
push
add
add
gs
and
mov
call
test
and
add
add
dec
mov
and
mov
add
fisttp
mov
sti
inc
and
dec
jmp
test
mov
bound
sub
add
ret
aam
mov
mov
inc
dec
add
add
mov
pop
add
clc
(bad)
push
mov
mov
add
mov
cmp
mov
mov
in
cmc
mov
(bad)
mov
mov
out
mov
push
mov
movzx
adc
push
ret
repz
sbb
lds
cmp
add
jnp
movs
add
lods
ja
loopne
and
jmp
mov
cmp
add
push
mov
movs
out
inc
and
jae
add
and
call
mov
mov
add
rol
(bad)
xor
test
mov
test
add
mov
mov
add
cld
inc
test
mov
icebp
add
add
mov
xor
add
add
test
and
mov
mov
push
mov
pop
test
gs
mov
lea
mov
(bad)
test
nop
cmp
(bad)
jmp
sbb
out
push
sahf
mov
inc
cwde
bound
add
cmp
cmp
add
push
add
add
jecxz
mov
jge
or
mov
pop
mov
dec
mov
add
movs
mov
mov
add
icebp
add
add
in
jmp
and
ror
aas
add
mov
mov
gs
add
jbe
add
not
mov
mov
add
add
dec
cmp
mov
movs
add
stc
mov
dec
(bad)
jmp
inc
jbe
rol
and
call
mov
mov
loope
clc
pop
retf
add
ds
sub
jmp
mov
mov
and
add
jmp
jg
fs
test
jb
dec
aam
add
(bad)
jbe
add
aas
test
dec
mov
mov
rol
mov
dec
pop
add
add
cmp
mov
mov
test
add
add
cli
test
cmp
cmp
sub
cmp
xor
and
out
add
popa
mov
add
add
lods
push
(bad)
loope
mov
retf
mul
repz
mov
mov
rcr
and
cmp
add
ret
inc
xchg
mov
and
aaa
add
dec
mov
add
gs
(bad)
sub
add
cmp
cmp
push
mov
(bad)
and
jb
add
add
movs
add
inc
add
sbb
rcl
inc
je
shl
cmp
and
jmp
(bad)
and
add
gs
ja
sbb
ja
movs
test
add
add
test
leave
bound
aam
mov
mov
xchg
sahf
movs
add
lea
ds
pop
pop
das
ret
jbe
and
test
add
add
popa
ret
test
add
out
jb
jmp
inc
rol
add
dec
and
gs
xchg
xor
add
add
add
mov
mov
add
mov
and
and
pop
arpl
add
add
iret
ss
dec
add
cld
inc
jbe
add
test
jmp
sbb
pushf
cmp
add
add
mov
out
pop
push
sub
xor
ror
add
add
rol
sbb
rcl
mov
and
mov
jmp
mov
and
dec
add
mov
and
mov
fild
call
(bad)
mov
loope
add
popa
pushf
fcomp
jo
movs
test
add
add
or
iret
mov
enter
and
dec
add
mov
xchg
xor
test
movs
add
pop
inc
jmp
mov
jmp
mov
mov
mov
cmovno
cmp
add
add
call
sub
add
mov
mov
adc
pop
(bad)
dec
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
movsx
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
mov
sub
add
add
mov
mov
mov
mov
shl
mov
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
ror
inc
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
add
shr
jbe
and
cmp
jmp
push
pop
mov
mov
push
pop
push
mov
jmp
dec
shl
cmp
jmp
call
not
shr
jg
sub
cmp
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
dec
mov
jno
and
xchg
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
std
test
les
add
add
add
out
dec
in
arpl
leave
les
stos
(bad)
(bad)
dec
xchg
push
mov
mov
xchg
movs
rsqrtps
add
add
add
xchg
(bad)
clc
es
leave
cmp
jle
push
add
inc
add
add
mov
outs
mov
xor
and
imul
add
movs
imul
pusha
nop
add
shl
les
stos
mov
cmp
pop
cmp
call
js
popa
fwait
ds
stc
pop
nop
aad
inc
xchg
mov
sub
and
bswap
sbb
add
push
add
push
in
adc
jo
adc
adc
pabsw
add
jmp
mov
movs
imul
adc
add
add
mov
pop
xchg
mov
inc
and
psubsw
add
aaa
add
add
mov
inc
and
mov
add
and
xor
mov
sub
mov
mov
adc
push
jmp
mov
inc
gs
push
inc
and
mov
inc
jp
add
xor
and
sub
xor
sub
psubsw
outs
add
sahf
inc
and
sub
ds
in
jmp
add
add
sahf
jp
iret
mov
movs
test
mov
and
sub
out
and
ins
xchg
fcom
mov
add
add
mov
sub
cmp
fiadd
inc
add
add
dec
jo
fidiv
mov
and
je
jmp
mov
and
jnp
imul
pop
xor
fidiv
pusha
jecxz
xchg
pop
mov
mov
je
jmp
mov
and
inc
dec
jnp
test
add
add
cmp
xor
es
(bad)
fsub
icebp
cmp
imul
(bad)
push
add
outs
mov
pop
push
mov
lahf
cmp
mov
jmp
mov
lds
push
mov
add
xchg
faddp
jle
mov
add
push
push
sub
mov
mov
mov
cmp
and
inc
(bad)
sti
mov
mov
int
xor
and
jmp
lea
mov
sahf
or
sbb
inc
add
stc
jmp
mov
xchg
and
xor
les
adc
sbb
inc
add
adc
mov
fmul
dec
inc
js
ret
arpl
sbb
inc
add
ret
xchg
ret
add
and
xor
add
xor
sbb
inc
add
add
jl
jl
pushf
and
add
pop
jecxz
(bad)
fmul
jae
mov
in
or
or
pop
icebp
push
jnp
push
(bad)
(bad)
mov
mov
fcom
add
je
add
mov
mov
sub
mov
fld
add
int
push
xor
add
out
dec
je
push
leave
cmp
mov
or
mov
arpl
enter
stc
je
push
mov
add
pop
into
ret
mov
sub
lea
loop
and
cwde
dec
dec
inc
add
mov
xor
and
in
dec
and
pop
xchg
jae
add
add
inc
add
mov
or
pop
int3
int
and
mov
adc
add
add
adc
sbb
inc
add
ret
add
loope
and
push
add
in
mov
rol
and
cmp
test
xchg
add
mov
and
(bad)
dec
add
cmp
or
push
dec
add
adc
call
and
add
inc
jae
xchg
fnstcw
sbb
pop
add
add
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
sub
jmp
push
mov
mov
mov
pop
mov
mov
push
pop
mov
ret
cmp
and
xor
jmp
call
ror
jb
shr
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
cmp
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
push
and
shl
js
and
shl
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
mov
enter
inc
and
into
cmps
and
les
and
add
add
mov
std
mov
adc
fistp
adc
clc
dec
add
add
add
out
sub
and
or
jno
mov
movq
inc
jmp
movs
add
retf
cwde
in
inc
jmp
retf
icebp
mov
adc
jne
in
add
xchg
add
mov
out
or
and
mov
add
add
sub
sbb
dec
out
nop
pop
add
jmp
mov
sub
pop
imul
retf
icebp
in
inc
jcxz
dec
add
inc
mov
mov
and
mov
mov
cmp
or
das
or
fld
out
mov
adc
sub
or
loop
retf
sbb
inc
push
pop
js
cwde
or
mov
or
cmps
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
jmp
or
inc
jmp
call
xchg
add
jge
cmp
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
shl
not
dec
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
xor
mov
jl
xchg
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
cmp
rol
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
cmp
stos
pusha
mov
std
dec
and
mov
mov
and
cwde
push
pushf
scas
mov
retf
hlt
cwde
shl
in
or
mov
mov
cmp
in
scas
mov
and
or
or
add
xchg
inc
cld
inc
pushf
pop
mov
sbb
pop
out
ds
push
mov
adc
loop
enter
repnz
add
sub
call
and
sub
mov
movs
pop
cmp
add
pop
sub
mov
and
movaps
add
add
xor
sub
mov
and
(bad)
(bad)
add
add
jnp
mov
mov
sub
hlt
mov
imul
cmps
add
mov
fisubr
or
stos
sub
gs
mov
pop
dec
ret
add
inc
and
sub
mov
stmxcsr
push
cmps
jmp
mov
sub
pop
jp
jae
add
adc
sub
addr16
dec
mov
jl
add
add
mov
add
xchg
daa
cmp
ins
call
es
rsm
ror
inc
add
mov
mov
gs
mov
ret
mov
mov
aas
add
adc
mov
inc
and
add
inc
or
mov
jmp
pop
inc
xchg
xchg
pop
pop
jmp
mov
inc
and
popa
jmp
push
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
sete
and
movzx
mov
mov
mov
jmp
mov
mov
pop
ret
mov
call
mov
mov
mov
mov
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
shl
xchg
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
shl
jmp
push
mov
mov
pop
push
mov
mov
push
pop
mov
pop
push
mov
jmp
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
shr
jne
and
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
shr
mov
jg
shl
xor
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
pop
and
add
add
aam
add
(bad)
leave
or
add
add
inc
pop
add
fld
add
loope
and
mov
push
test
and
add
add
jne
jecxz
dec
(bad)
add
test
add
mov
xor
aad
add
add
iret
push
mov
aad
add
add
or
fdiv
mov
test
add
add
(bad)
cld
add
add
add
and
add
add
mov
rdtsc
mov
add
cmp
add
or
fld
xor
test
pop
add
xorps
add
mov
add
add
adc
(bad)
(bad)
mov
and
fadd
fst
and
or
add
pop
add
push
and
add
imul
push
lock
aad
(bad)
sbb
push
add
add
add
(bad)
daa
xor
mov
(bad)
or
add
pusha
mov
test
sub
xchg
test
jg
add
push
stos
mov
or
add
sub
mov
jg
jmp
mov
or
push
add
outs
test
fild
add
(bad)
xor
stos
aam
add
add
mov
aad
test
test
add
fst
and
add
push
mov
lock
mov
sub
mov
jg
xor
add
stos
xchg
ret
add
sub
(bad)
cs
mov
add
jmp
mov
and
jno
mov
fisttp
jmp
mov
or
enter
or
nop
add
fisttp
and
cmp
mov
add
xchg
lock
push
test
arpl
add
add
in
add
add
add
mov
or
add
xchg
icebp
icebp
les
inc
jg
jmp
mov
retf
cmps
je
and
and
add
add
add
add
mov
inc
fadd
lock
jl
mov
fcomp
push
movs
(bad)
xor
rol
add
inc
or
add
in
test
xor
out
xlat
(bad)
and
add
add
pop
inc
and
mov
fdivr
push
test
mov
add
setno
stos
add
jmp
ins
test
pop
add
cmc
es
enter
mov
xor
aam
addr16
add
add
pop
cmp
ror
cmp
mov
stos
add
stos
fisttp
mov
add
or
int3
fimul
mov
psrlq
add
add
add
stos
aam
or
mov
or
movs
push
add
mov
jmp
mov
add
stos
sub
aaa
icebp
and
add
aad
(bad)
fwait
add
add
fld
mov
sub
mov
fild
stos
cvtdq2ps
add
jmp
pop
jecxz
lods
inc
add
cmc
fwait
mov
add
stc
add
mov
add
mov
or
add
sub
into
test
fld
add
test
out
fcomp
lea
in
fistp
xchg
cld
test
test
add
in
fcomp
mov
or
repnz
mov
movs
push
add
mov
test
or
inc
fsubr
mov
je
inc
test
test
add
mov
mov
and
fcomp
push
ucomiss
add
add
mov
icebp
outs
add
shr
or
add
add
pop
inc
add
test
add
aam
sub
mov
and
(bad)
dec
add
add
push
inc
fadd
mov
and
inc
and
je
jmp
mov
add
pop
and
scas
or
gs
add
xlat
test
xlat
add
add
dec
inc
and
mov
jecxz
movs
jmp
mov
add
bound
enter
ins
fild
mov
movs
int3
pop
and
add
fnsave
cld
fbstp
xlat
pop
add
stos
aam
or
mov
mov
pop
mov
and
test
fld
push
jmp
mov
add
push
inc
mov
inc
inc
mov
mov
add
and
add
add
mov
movs
test
jp
fcomp
lea
and
add
shl
and
push
add
sbb
or
or
push
add
add
mov
je
pushf
xchg
add
add
and
add
fnsave
adc
sub
rol
cmp
mov
or
push
mov
adc
pop
(bad)
out
jmp
mov
or
push
add
mov
cmps
lea
mov
test
add
push
xchg
ins
(bad)
mov
inc
cld
fwait
je
sub
add
mov
add
sub
push
inc
stc
inc
setp
mov
bound
add
fild
add
push
jmp
inc
add
mov
pop
and
fadd
add
mov
inc
and
add
add
fisttp
add
sub
inc
and
xchg
mov
pop
stc
or
push
stos
and
inc
and
cvtdq2ps
push
stos
add
pop
test
mov
sub
loope
sub
pop
mov
ss
or
pop
bound
add
add
mov
pop
aam
pusha
movs
add
add
push
and
data16
sub
push
inc
and
movs
mov
mov
add
jmp
mov
pop
retf
mov
lahf
int3
dec
and
pop
add
sub
add
add
cmove
test
mov
fadd
add
test
mov
aam
mov
add
mov
jmp
call
adc
xchg
cli
mov
mov
mov
mov
pop
repz
ret
sub
icebp
and
aaa
cmp
out
fcom
inc
int3
mov
pusha
lock
jne
jb
xchg
stos
mov
or
or
(bad)
pop
add
mov
stos
aam
mov
add
mov
call
sub
mov
(bad)
xchg
and
add
mov
push
push
cmp
add
mov
sub
(bad)
pop
sti
or
push
pop
jmp
mov
adc
and
(bad)
out
pop
test
or
imul
add
inc
pusha
movs
fxch
sar
aas
sub
and
fiadd
add
dec
aad
repnz
test
add
add
mov
mov
pop
pushf
sbb
jmp
repz
or
push
test
push
stos
aam
mov
mov
mov
inc
shl
in
add
push
and
data16
add
add
das
and
or
push
lods
xor
add
mov
ins
adc
and
je
aad
popf
cmps
add
add
dec
xchg
stc
adc
add
out
cld
lods
xor
mov
and
cmp
cmove
and
add
xor
add
mov
mov
mov
xchg
add
adc
add
mov
add
mov
add
stos
sti
inc
clc
jmp
and
mov
push
add
rol
lock
mov
mov
pop
and
scas
jne
push
add
or
add
mov
add
add
imul
mov
push
stc
add
add
cmc
test
fld
idiv
add
retf
test
out
add
sti
fwait
clc
jmp
mov
jmp
push
cmp
in
sub
or
add
jmp
xor
and
fadd
add
sbb
add
add
sub
xchg
call
arpl
add
xor
add
add
test
stos
or
inc
and
(bad)
jmp
pusha
bound
mov
add
aad
test
(bad)
add
xor
inc
add
loopne
mov
push
xchg
and
pop
add
mov
and
add
movs
into
inc
and
xor
push
stos
add
or
push
add
fist
popa
ror
add
pop
add
xchg
aad
push
fisub
push
rol
lods
stos
je
aad
mov
add
or
fld
adc
dec
test
jmp
shr
fadd
ror
cli
add
push
pop
and
add
add
or
add
mov
pop
dec
cmp
add
jne
xor
out
xor
add
mov
mov
mov
add
or
mov
dec
mov
(bad)
icebp
icebp
or
add
mov
and
in
cmc
(bad)
dec
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
cmp
and
jne
cmp
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
ror
not
jmp
mov
mov
mov
mov
mov
push
mov
push
jmp
shl
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
jne
add
cmp
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
xchg
sar
jo
cmp
xor
or
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
cld
jno
add
loopne
(bad)
call
call
mov
cmp
xchg
aam
mov
mov
sub
mov
ret
jg
adc
add
sti
(bad)
rol
adc
fsqrt
and
cmovbe
std
sub
cwde
in
hlt
mov
mov
mov
jg
jmp
mov
enter
inc
test
add
add
add
mov
add
jns
mov
addr16
add
(bad)
jmp
mov
xchg
mov
xor
push
mov
and
add
fnsave
cmp
xchg
adc
push
add
fs
sub
mov
sbb
dec
add
dec
push
xor
inc
mov
and
pop
(bad)
lods
add
les
fs
stos
mov
cmp
mov
inc
mov
add
pop
sub
dec
inc
fldcw
(bad)
dec
add
sbb
push
sub
outs
sub
pop
inc
fstp
cli
call
inc
not
mov
and
and
add
jmp
jecxz
and
sub
inc
stos
and
test
add
push
js
add
mov
mov
int
cmp
test
popf
add
into
inc
and
sub
sbb
adc
retf
test
add
add
(bad)
stc
add
cmp
mov
inc
and
(bad)
std
add
add
xor
(bad)
xchg
call
mov
ret
xor
fsubr
mov
cmp
xchg
xor
mov
sbb
cmp
dec
push
add
add
add
xchg
ret
fdivr
push
popa
mov
add
adc
cmovl
sbb
and
jmp
sub
(bad)
adc
pop
xchg
inc
dec
jmp
fchs
jns
jbe
push
add
jmp
in
stc
xchg
push
xchg
popa
dec
mov
ins
inc
shl
ins
and
xchg
push
retf
and
addr16
stc
mov
dec
mov
(bad)
mov
mov
cmp
fmul
sbb
loop
cdq
stc
add
mov
iret
push
inc
and
jl
call
mov
add
mov
pop
pushf
fist
mov
and
(bad)
jae
bound
popa
jmp
ins
push
add
push
ror
test
adc
mov
mov
mov
jl
ror
xor
add
mov
and
mov
cmp
and
mov
and
pop
inc
push
add
mov
fild
mov
mov
and
dec
rol
ror
call
mov
fwait
inc
mov
mov
jmp
add
and
mov
pop
inc
fnstsw
add
in
push
add
jae
mov
mov
push
add
adc
mov
je
cmp
call
pop
shr
push
add
or
mov
loope
and
dec
adc
or
call
mov
add
hlt
mov
mov
xor
inc
and
call
repz
push
add
or
mov
xchg
pusha
dec
adc
mov
je
popa
in
sbb
xor
add
mov
dec
push
mov
add
pusha
jo
retf
mov
mov
xor
add
mov
mov
enter
mov
imul
stos
xchg
mov
mov
xor
add
cmps
add
fs
int3
jmp
add
ror
mov
aas
inc
retf
or
loopne
add
mov
jno
and
mov
mov
pusha
mov
and
dec
and
sub
call
mov
mov
push
add
push
out
je
and
dec
and
mov
sbb
xor
add
fwait
ror
or
mov
adc
mov
mov
add
mov
inc
sub
shr
add
adc
(bad)
add
mov
dec
dec
and
jmp
and
adc
jmp
mov
(bad)
jmp
cmps
pop
in
mov
mov
jno
movs
jmp
add
arpl
pop
mov
add
adc
or
and
in
push
add
or
mov
movs
adc
mov
and
jge
and
call
ss
in
push
add
or
mov
mov
stos
mov
inc
and
adc
xor
add
mov
adc
scas
mov
push
add
je
aaa
adc
mov
and
or
push
fsubr
push
add
or
mov
ror
mov
mov
adc
shr
push
add
or
mov
mov
pushf
dec
sbb
mov
sbb
mov
out
jbe
mov
push
shl
and
and
xor
inc
and
call
addr16
push
add
popf
mov
cmp
adc
mov
and
mov
call
add
in
push
add
pop
(bad)
jmp
add
movs
out
pusha
and
mov
and
call
mov
outs
inc
shl
enter
mov
push
mov
and
mov
mov
das
add
mov
mov
cmp
add
adc
mov
inc
sbb
dec
(bad)
das
add
jo
in
push
add
adc
aam
iret
shr
push
add
and
movs
push
sar
xchg
loope
adc
sub
das
add
mov
mov
mov
add
adc
mov
mov
and
call
xchg
(bad)
in
push
add
xor
jmp
add
xchg
mov
cmp
rcr
call
ss
add
aaa
add
(bad)
stos
and
ror
jl
inc
push
(bad)
dec
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
mov
imul
add
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
mov
imul
add
mov
mov
cmp
cmove
mov
jmp
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
lea
mov
add
mov
call
mov
mov
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
add
add
sub
mov
add
shl
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
add
add
sub
add
sub
sub
mov
mov
mov
mov
add
add
sub
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
movzx
mov
mov
add
add
sub
mov
mov
movzx
mov
xor
and
xor
and
mov
mov
xor
and
and
or
or
xor
mov
mov
mov
mov
mov
mov
movzx
cmp
mov
cmove
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
sub
mov
sub
add
mov
sub
sub
sub
add
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
mov
mov
mov
mov
mov
mov
push
pop
mov
jmp
cmp
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
mov
not
jo
rol
test
or
jmp
call
ror
cmp
je
xchg
and
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
add
jo
cmp
not
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
jns
shr
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
pop
test
push
sub
add
out
mov
es
in
mov
mov
clc
xchg
or
add
mov
mov
add
add
aam
pusha
and
add
mov
test
pop
cli
add
add
in
push
sbb
cs
add
cmp
je
adc
test
mov
(bad)
mov
movs
jmp
(bad)
pop
and
add
add
and
mov
add
cmp
rcl
push
out
and
jmp
xchg
cld
pop
xchg
mov
mov
add
pop
mov
mov
add
add
or
adc
(bad)
outs
lea
sbb
pusha
mov
push
add
sbb
sbb
mov
popf
mov
jnp
and
in
jmp
and
and
add
ins
sub
mov
or
jmp
add
scas
aas
inc
imul
es
and
jg
(bad)
add
xor
jno
and
add
in
sub
mov
ins
and
pop
add
mov
add
add
(bad)
(bad)
inc
mov
and
ins
aas
fld
jmp
add
(bad)
std
jns
inc
and
test
fld
cmp
and
add
or
inc
ret
(bad)
and
jmp
mov
je
add
icebp
ss
mov
or
je
pop
test
add
in
or
mov
fs
jmp
outs
test
add
add
or
and
and
add
mov
add
add
pop
adc
mov
and
aas
add
add
add
outs
test
mov
add
sub
mov
pop
je
jmp
mov
stos
daa
sub
(bad)
and
jg
test
add
add
cli
in
mov
mov
je
jmp
cmp
scas
nop
xor
cmps
hlt
mov
lock
packssdw
lahf
add
jmp
mov
sub
mov
rol
jmp
mov
add
mov
pop
xor
jbe
out
add
cli
in
cmp
sbb
test
push
xor
in
aam
mov
mov
or
dec
cmp
mov
add
mov
add
lock
into
stc
add
mov
add
add
jne
aam
pusha
and
add
scas
sub
mov
xor
(bad)
(bad)
in
push
jmp
mov
add
push
mov
xor
add
sub
add
add
sub
(bad)
mov
add
jmp
mov
fadd
sub
mov
and
xor
jmp
mov
and
adc
sub
outs
sub
jg
adc
in
push
fmul
in
pushf
sub
jne
cmps
movsx
in
lahf
and
ret
add
sub
ins
test
ror
inc
add
in
add
scas
mov
cs
rol
add
add
add
jle
je
add
sub
mov
sysexit
pop
add
mov
add
add
add
sbb
arpl
add
sbb
add
pop
in
enter
add
ss
lahf
mov
inc
push
retf
mov
cmp
sbb
add
mov
add
push
mov
and
je
jmp
jmp
mov
mov
mov
and
out
add
add
inc
shr
xchg
in
add
xor
mov
or
xchg
and
add
xchg
cmp
and
in
add
mov
addr16
and
add
inc
ror
add
push
add
add
push
add
mov
cmp
cli
xor
or
xchg
and
xor
add
cmp
ja
cmp
pop
and
aam
add
ins
aas
mov
push
scas
add
cmovne
jae
and
in
add
xor
mov
mov
mov
sysenter
push
sbb
out
add
in
adc
in
imul
pop
add
(bad)
xchg
and
add
add
mov
add
mov
test
mov
aam
inc
js
test
add
lahf
(bad)
sub
add
add
push
and
in
add
fadd
push
jle
pushf
stos
and
mov
mov
add
fwait
pop
test
lahf
scas
add
add
mov
stc
inc
ror
add
adc
test
add
xchg
inc
sbb
test
add
mov
pop
sub
xchg
ins
add
or
mov
add
inc
xor
cmp
mov
cmp
in
inc
ror
add
adc
add
or
test
scas
out
loopne
cmps
add
xor
xchg
and
jmp
test
add
add
in
add
sahf
(bad)
dec
into
jae
fwait
data16
pushf
add
add
add
jle
and
add
sets
mov
and
add
in
mov
cmp
popf
mov
cmp
daa
push
xor
and
aas
xor
popa
xchg
and
add
add
push
add
mov
inc
movs
push
and
add
add
sbb
je
or
xchg
add
lahf
inc
mov
test
add
fwait
out
jmp
(bad)
pusha
enter
add
pop
push
in
mov
test
cwde
mov
add
cmp
add
pop
jg
push
push
mov
mov
fld
test
fadd
add
jmp
and
xor
lock
add
adc
fild
scas
out
mov
add
adc
inc
add
add
add
add
mov
xor
js
mov
lock
lahf
add
test
ins
aas
add
test
jmp
add
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
and
ja
not
test
jmp
call
not
cmp
sub
shl
jg
mov
mov
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
mov
dec
jmp
push
mov
pop
mov
push
mov
pop
mov
jmp
mov
inc
cmp
jge
add
shl
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
or
cmp
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
imul
xchg
and
add
in
add
push
add
jb
popf
xor
mov
call
(bad)
mov
adc
(bad)
add
and
add
add
shl
pop
or
fdivrp
push
enter
mov
mov
out
adc
sub
mov
mov
adc
add
sub
mov
mov
test
add
add
add
mov
cmps
mov
int3
add
addr16
push
or
add
push
enter
jbe
ins
xor
mov
push
add
lods
mov
mov
xchg
xor
mov
xchg
inc
or
call
(bad)
and
addr16
add
or
and
ja
mov
jae
outs
mov
add
push
pop
inc
xchg
xor
add
int
add
add
mov
mov
add
push
test
add
sub
mov
punpckhwd
fs
mov
shr
fbld
inc
inc
mov
add
add
fld
or
jmp
mov
sub
mov
adc
jmp
add
add
add
mov
and
(bad)
add
sub
mov
(bad)
push
add
add
add
add
(bad)
fistp
adc
sbb
jmp
xchg
test
rol
add
xchg
and
movs
add
or
or
aaa
pop
add
ja
test
add
add
mov
add
xchg
sub
not
(bad)
add
sub
(bad)
cli
xor
jecxz
pushf
add
add
add
mov
lea
push
mov
xor
add
test
add
inc
add
add
mov
sbb
sub
mov
and
add
add
pop
jmp
jne
adc
lea
test
add
(bad)
je
jmp
bound
dec
cmps
jp
ror
push
add
mov
ins
xor
add
add
mov
xor
test
jp
addr16
mov
fidiv
mov
loop
xor
jp
xor
jg
jmp
test
xor
(bad)
add
sub
es
and
sub
ror
test
mov
fisubr
xchg
or
add
fcom
out
inc
xchg
or
dec
add
add
xor
mov
shr
xchg
push
scas
test
add
pop
and
add
addr16
test
cs
shl
add
pop
(bad)
ins
xor
test
add
sub
mov
test
push
adc
in
aaa
add
in
rol
movs
jmp
dec
cmc
mov
inc
and
jne
jmp
mov
inc
xchg
xor
lds
sub
add
xor
gs
add
pop
and
fadd
pop
pop
dec
and
add
jmp
cmp
sbb
push
and
xchg
sub
xor
fs
sbb
pushf
or
movs
mov
lods
push
jmp
(bad)
sub
ficomp
add
xor
rol
add
stos
inc
and
jmp
add
icebp
adc
and
add
add
jmp
and
or
fimul
ja
shl
inc
and
je
jmp
mov
and
add
(bad)
sub
mov
dec
jg
jmp
in
test
push
or
sub
mov
js
cmp
add
sub
and
mov
shl
add
mov
imul
add
add
mov
and
add
jmp
xlat
mov
leave
jecxz
pop
or
or
push
fist
mov
add
jnp
dec
jnp
inc
and
sub
add
add
add
add
sbb
and
je
jmp
in
test
or
lods
scas
sbb
hlt
and
je
jmp
sub
cmp
push
and
je
jmp
mov
xor
mov
and
leave
jecxz
add
jmp
xchg
sub
mov
int3
and
add
icebp
out
add
add
and
inc
fbstp
inc
repnz
adc
ss
add
inc
and
pop
or
or
and
xor
cmp
adc
sub
mov
and
add
add
pushf
add
push
mov
into
cmp
and
mov
mov
cmovne
in
nop
and
add
add
jmp
rol
movs
dec
mov
add
or
jmp
add
dec
cmp
push
stos
push
adc
xor
add
inc
and
sub
jmp
jle
and
mov
jmp
aam
xchg
lock
ins
mov
add
inc
or
loope
add
into
fild
lods
xchg
jno
add
add
mov
sub
dec
test
fcomip
cli
mov
ja
test
fist
mov
out
push
mov
sldt
lea
sub
jmp
fst
das
into
add
xchg
push
mov
add
mov
out
in
push
in
mov
and
add
call
add
in
nop
and
add
les
sbb
sti
mov
add
(bad)
fild
or
sbb
xchg
cli
call
les
ins
xor
sub
test
out
call
movs
cmp
mov
lds
add
movs
jle
aas
inc
call
push
test
and
mov
adc
into
mov
add
add
cmp
xchg
sbb
repnz
(bad)
jmp
and
lods
sub
add
add
add
push
add
add
fld
add
mov
mov
sub
test
cmovne
mov
les
fs
mov
sub
cmc
inc
mov
jmp
dec
jecxz
std
add
push
mov
add
mov
and
ja
dec
xor
daa
mov
and
verr
mov
add
shr
or
and
sub
movs
dec
test
pop
add
or
xchg
(bad)
(bad)
mov
mov
and
add
add
mov
rol
xor
sete
in
xlat
mov
mov
icebp
or
add
mov
fisubr
pop
out
mov
pop
div
mov
out
push
add
add
in
nop
and
add
fsubr
add
inc
add
add
or
in
and
mov
(bad)
aad
(bad)
(bad)
dec
call
call
bnd
sbb
inc
movs
mov
call
scas
mov
(bad)
call
pminub
mov
stos
inc
outs
inc
add
or
rol
xor
add
cmp
add
sar
mov
data16
or
push
add
add
mov
mov
ja
adc
out
add
call
xor
cld
dec
add
add
pop
sub
mov
ss
ja
jg
imul
and
add
add
bound
retf
mov
jmp
mov
xchg
mov
hlt
add
add
sub
mov
loop
add
addr16
test
xchg
add
add
add
pop
ja
aad
pop
xor
loope
bound
test
push
inc
or
or
inc
add
rcl
add
(bad)
add
mov
and
add
pop
mov
add
mov
mov
test
add
add
test
int3
fist
mov
adc
test
add
add
and
sub
js
add
test
add
sub
mov
add
mov
xchg
cs
jbe
test
add
add
add
and
mov
add
xor
pop
femms
ins
add
rol
and
add
add
add
add
mov
call
sbb
pop
ja
cmp
inc
jnp
dec
xorps
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
imul
and
cmp
sete
mov
cmp
setl
mov
and
xor
or
test
mov
mov
mov
mov
jne
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
sub
add
mov
mov
mov
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
cmp
jne
jmp
mov
mov
cmp
mov
jbe
mov
cmp
setl
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
sub
sub
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
shl
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
add
add
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
jmp
mov
mov
cmp
mov
je
mov
mov
mov
cmp
setb
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
cmp
setae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
jne
mov
mov
mov
mov
add
add
sub
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
add
mov
mov
mov
mov
mov
sub
sub
add
cmp
jge
mov
mov
mov
mov
mov
sub
add
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
add
mov
mov
mov
mov
cmp
mov
jbe
mov
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
sub
add
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
cmp
setne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
cmp
jb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
mov
xor
xor
xor
or
or
xor
and
mov
mov
mov
mov
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
sub
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
xor
xor
xor
or
or
xor
and
mov
mov
shl
mov
movzx
mov
mov
mov
sub
add
mov
mov
mov
sar
mov
sub
mov
sub
add
sub
imul
shl
add
mov
mov
mov
cmp
setge
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
shl
mov
mov
xor
mov
xor
and
mov
mov
mov
mov
add
mov
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
shl
mov
mov
cmp
je
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
add
add
sub
sub
sub
mov
mov
cmp
jne
jmp
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
add
add
sub
sub
add
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
sub
sub
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
sub
sub
add
mov
jmp
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
sub
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
cmp
jae
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
cmp
setae
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
sub
sub
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
sub
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
shl
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
mov
sub
add
add
sub
add
add
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
mov
cmp
setne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
mov
mov
cmp
jge
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
add
mov
cmp
mov
jge
mov
mov
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
add
add
sub
sub
sub
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
cmp
jne
mov
mov
sub
sub
add
mov
cmp
jl
mov
mov
mov
sar
add
sub
sub
mov
mov
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
xor
mov
and
mov
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
shl
mov
mov
mov
add
mov
shl
add
mov
mov
sub
sub
add
shl
add
add
mov
mov
jmp
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
mov
shl
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
add
add
sub
mov
cmp
jne
mov
mov
add
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
sub
sub
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
and
xor
or
mov
mov
mov
shl
mov
mov
mov
sub
add
add
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
add
add
sub
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
mov
cmp
seta
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
mov
mov
cmp
setb
mov
mov
test
jne
jmp
jmp
mov
cmp
jae
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
mov
sub
add
mov
mov
add
sub
sub
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
shl
sub
add
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
jmp
mov
mov
sub
add
add
mov
jmp
mov
mov
jmp
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
jmp
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
sub
sub
mov
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
mov
xor
xor
xor
or
or
xor
and
mov
mov
mov
mov
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
add
mov
mov
mov
mov
add
add
sub
mov
mov
xor
mov
xor
and
mov
mov
mov
mov
shl
mov
movzx
mov
mov
add
sub
sub
mov
mov
mov
sar
mov
sub
mov
sub
add
sub
imul
shl
add
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
jmp
jmp
jmp
jmp
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
jmp
jmp
mov
mov
jmp
jmp
mov
mov
add
sub
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
sub
add
add
mov
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
sub
sub
mov
jmp
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
jmp
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
add
mov
mov
sub
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
dec
add
sub
jmp
mov
mov
mov
pop
mov
push
mov
mov
push
mov
push
mov
pop
mov
pop
push
mov
jmp
shl
shl
mov
jb
xchg
not
jmp
call
mov
dec
shl
je
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
arpl
and
pop
add
mov
and
add
sbb
and
push
jmp
mov
test
add
push
cmps
sti
add
js
xchg
add
add
inc
and
xchg
push
jmp
rol
add
jmp
mov
and
add
xchg
add
fsubr
les
retf
fild
jmp
mov
arpl
sub
fwait
or
shr
add
(bad)
add
mov
sub
and
and
es
ins
cld
add
add
add
mov
(bad)
sub
push
test
push
(bad)
pop
test
inc
jmp
jecxz
cmp
mov
test
iret
fild
fwait
(bad)
je
add
jmp
mov
sub
xchg
test
xchg
outs
add
and
xchg
push
jmp
mov
sub
loope
call
and
add
jmp
inc
pop
and
push
add
(bad)
push
add
add
je
test
xlat
sbb
das
in
fcomp
dec
xor
xchg
push
add
(bad)
add
add
add
mov
or
mov
and
add
add
add
sub
js
lahf
and
(bad)
enterw
mov
and
jmp
pop
movs
(bad)
addr16
add
in
fdiv
xchg
fbld
inc
and
je
jge
add
mov
mov
add
sub
mov
and
jg
push
add
pop
das
mov
push
fiadd
jbe
push
shl
pop
test
add
pop
jmp
mov
sub
mov
repz
sldt
add
and
dec
add
iret
add
xor
sub
test
ja
add
scas
push
add
add
inc
adc
loopne
mov
rcl
jmp
add
stos
add
add
pop
aam
jmp
inc
cmp
sahf
ins
add
(bad)
push
add
add
add
sub
mov
pop
(bad)
pop
add
jmp
jmp
add
hlt
and
imul
pinsrw
fist
mov
sub
mov
jnp
clc
push
das
outs
cld
movs
test
mov
add
sti
mov
adc
inc
inc
call
ret
add
add
pop
stos
mov
push
mov
push
movs
ins
jne
and
jg
jmp
pop
(bad)
and
pop
add
fimul
(bad)
push
pop
add
xchg
cld
das
add
add
imul
jo
repnz
and
dec
lock
add
pop
das
add
stos
pop
dec
add
sub
mov
sbb
es
mov
and
add
pop
sub
stos
inc
repnz
pop
imul
ret
and
es
xor
out
and
je
aas
inc
dec
add
inc
test
and
add
sub
and
(bad)
test
add
das
in
and
add
cld
sub
ret
out
fwait
(bad)
push
add
inc
push
add
inc
add
and
and
rsqrtps
add
xor
xchg
add
outs
and
add
xchg
sbb
mov
cpuid
int3
imul
outs
add
or
push
jmp
sbb
adc
jecxz
add
lock
add
mov
daa
mov
fsub
test
add
(bad)
mov
push
adc
jmp
pop
xchg
scas
ret
bound
je
xchg
das
and
iret
add
cwde
xor
mov
ret
xor
add
add
add
mov
add
mov
pop
push
mov
ja
fild
jmp
mov
sub
into
inc
push
adc
test
add
mov
pop
das
in
or
dec
xchg
xor
pop
outs
outs
stos
add
sbb
add
mov
sub
jne
or
push
mov
fild
jge
add
add
inc
add
stos
mov
mov
xor
cld
add
dec
rcr
add
jmp
cmc
pop
stos
inc
mov
and
push
or
call
mov
ins
pop
and
jmp
je
or
(bad)
pop
inc
retf
and
add
add
mov
mov
xchg
mov
(bad)
cmp
cmove
sbb
add
jmp
out
fist
mov
and
add
scas
test
add
pop
std
(bad)
ficomp
mov
mov
mov
cmp
movs
inc
xchg
je
jmp
xchg
inc
sti
int
stos
push
outs
jnp
add
mov
xor
out
push
pop
cmps
jmp
dec
das
and
aas
jp
add
sbb
mov
jmp
stos
mov
pop
imul
and
add
and
pop
add
add
and
mov
inc
je
fldcw
mov
das
add
xor
int3
add
(bad)
mov
inc
pop
mov
add
add
ficomp
stos
mov
mov
and
add
es
mov
xchg
add
mov
mov
add
push
add
mov
jnp
cwde
or
outs
add
test
mov
add
shl
daa
repz
mov
sbb
add
mov
sbb
add
add
dec
iret
push
test
jmp
aad
arpl
add
gs
ss
pop
ret
fadd
in
add
and
push
and
iret
fild
mov
jne
add
add
add
sbb
pop
das
test
and
das
add
add
push
or
inc
iret
add
sbb
and
xchg
add
dec
push
add
(bad)
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
not
cmp
jg
xor
shl
jmp
push
pop
mov
push
pop
push
mov
pop
mov
push
ret
sub
or
jo
or
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
rol
rol
inc
je
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
rol
jmp
call
xchg
or
inc
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
mov
mov
fwait
pop
xor
mov
es
cmp
mov
repz
mov
sub
mov
lock
cdq
jmp
jecxz
and
add
inc
and
(bad)
push
add
add
adc
and
sub
mov
dec
test
adc
adc
xor
mov
and
(bad)
push
scas
add
jmp
pop
sub
pop
inc
addr16
push
jmp
cdq
sbb
add
ret
das
or
shl
(bad)
sbb
add
add
mov
and
sub
mov
adc
push
into
cmp
jmp
mov
mov
mov
and
lea
add
add
mov
sub
mov
and
cld
test
add
add
add
push
icebp
mov
sbb
rol
ins
mov
repnz
add
cwde
add
mov
mov
mov
fld
retf
xor
jmp
scas
(bad)
and
sub
add
stos
inc
and
push
xchg
cmp
repz
or
jmp
mov
mov
mov
pop
or
je
add
dec
mov
jmp
lds
and
loopne
cmp
jmp
js
and
lea
pop
pop
pop
pop
mov
xor
push
add
int
cmp
mov
sub
mov
and
sub
xor
iret
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
mov
mov
mov
ja
test
cmp
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
shl
jmp
call
sar
cmp
jno
xchg
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
shr
jmp
mov
mov
mov
push
pop
mov
push
mov
pop
push
jmp
shr
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
or
dec
(bad)
inc
and
jl
test
cmp
popa
sub
pop
fcomp
mov
dec
in
xor
jb
and
data16
inc
and
retf
jmp
adc
xchg
or
xadd
push
add
mov
sub
mov
test
add
add
add
sub
mov
sub
mov
add
add
xlat
add
inc
sbb
sub
mov
popa
test
sbb
add
add
and
dec
mov
add
adc
rcl
das
add
xlat
div
dec
mov
xor
(bad)
xchg
add
cmps
cmp
cld
add
and
data16
call
mov
sbb
mov
call
add
mov
pop
or
add
pop
inc
mov
push
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
inc
test
jg
xchg
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
xor
shl
jmp
mov
mov
mov
mov
push
mov
pop
push
mov
pop
mov
ret
shl
shr
jo
not
dec
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sub
cmp
shl
jg
shr
cmp
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sar
sub
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
rcl
or
outs
mov
and
neg
cdq
enter
mov
and
adc
mov
call
push
mov
hlt
mov
lock
mov
dec
retf
inc
and
jg
jmp
mov
sub
mov
push
jle
(bad)
ins
(bad)
add
jae
add
int
ins
adc
and
jg
jmp
mov
icebp
sub
jl
addr16
(bad)
ficomp
mov
push
dec
dec
mov
and
mov
jp
sbb
add
clc
cmc
mov
push
jbe
movs
sbb
jle
(bad)
or
add
jmp
mov
inc
dec
addr16
retf
mov
les
(bad)
jge
add
jmp
mov
sub
mov
bswap
cmp
add
add
movs
dec
sub
cld
inc
inc
bound
test
add
add
mov
call
mov
je
ds
stos
sub
ret
inc
enter
stc
inc
add
pop
add
cmc
add
xchg
mov
sbb
test
add
popa
add
test
mov
in
mov
sub
mov
cmc
stos
(bad)
ja
add
fisub
sbb
popa
je
mov
add
mov
fnstcw
inc
and
mov
jno
inc
ja
xlat
add
sub
mov
ret
jns
into
xor
add
mov
pop
repz
and
bswap
cmc
add
pushf
das
add
addr16
and
sub
mov
and
mov
add
loop
inc
add
jle
fwait
sub
mov
add
or
mov
mov
mov
mov
leave
je
ret
test
cli
add
mov
or
cdq
cmp
sbb
dec
push
test
fnstenv
push
sub
add
add
xor
and
sbb
inc
ja
mov
dec
pop
out
add
inc
push
xor
(bad)
test
push
dec
mov
mov
retf
mov
jno
mov
test
mov
sbb
inc
test
push
stos
mov
mov
push
pusha
mov
mov
mov
adc
adc
inc
mov
pop
fsubrp
retf
in
mov
leave
inc
xchg
jmp
jl
sub
mov
inc
movs
push
dec
push
icebp
out
push
popa
add
push
hlt
inc
add
ret
mov
sub
add
pop
jmp
ret
sub
rol
inc
and
(bad)
mov
adc
and
mov
sub
mov
ret
mov
inc
mov
cmp
std
cld
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
or
sub
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shr
shl
jae
rol
shl
mov
jmp
call
or
sar
not
add
jne
shr
jmp
mov
mov
push
mov
mov
pop
push
mov
push
mov
mov
pop
mov
mov
pop
jmp
dec
ror
jne
cmp
dec
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
inc
sbb
xchg
and
add
add
out
mov
jl
repnz
add
and
js
sub
mov
popa
test
jo
pop
sbb
cdq
mov
adc
cdq
mov
jo
sbb
test
mov
mov
mov
outs
add
mov
fnsave
je
and
and
jg
test
aad
sub
sub
pop
sbb
add
adc
pop
sub
pop
sbb
icebp
pop
add
add
mov
int
or
xor
mov
mov
lock
cmp
and
seto
mov
add
jp
and
sub
inc
clc
and
add
jmp
add
add
adc
mov
pop
nop
fwait
mov
xchg
bound
add
test
movs
and
sub
mov
je
(bad)
aam
add
mov
cmp
cmovns
mov
ins
add
add
sldt
sbb
and
sub
cmp
and
jg
jmp
mov
sub
mov
jg
jmp
xchg
pop
mov
mov
mov
xchg
mov
add
add
or
add
sub
mov
xor
xchg
xor
add
icebp
sub
mov
cmps
movs
xlat
out
sbb
and
jg
jmp
mov
je
adc
sbb
jmp
mov
je
(bad)
fiadd
mov
sahf
jo
jmp
sub
sbb
sbb
test
fwait
pop
add
int
add
cdq
inc
ret
je
cwde
(bad)
out
mov
sahf
add
icebp
test
dec
add
loope
mov
sub
test
xchg
ud0
lods
add
adc
je
sbb
xchg
pop
je
jmp
mov
out
or
push
test
adc
xor
mov
adc
test
mov
vmread
add
cmove
lods
xor
inc
and
setne
inc
add
add
add
or
pushf
test
pop
jmp
mov
je
repnz
loopne
push
dec
and
add
pop
add
adc
push
sbb
push
fwait
add
call
xchg
add
mov
jmp
xor
mov
scas
xchg
cmp
add
mov
jnp
sbb
fwait
mov
add
add
mov
mov
and
lods
mov
or
add
add
iret
pop
loope
jl
add
mov
outs
inc
cmp
jmp
mov
mov
sub
push
je
popf
lsl
mov
add
dec
push
sahf
mov
mov
or
outs
inc
and
jmp
inc
inc
xchg
js
test
mov
sub
retf
das
and
movsx
and
dec
ror
push
add
mov
(bad)
mov
js
call
add
inc
and
mov
cmc
mov
pop
inc
xor
sti
adc
jmp
ins
pop
cmp
add
add
sub
xor
mov
add
add
add
pop
mov
add
stos
pop
aas
adc
add
add
adc
mov
add
adc
add
fistp
js
cmp
lods
out
xchg
add
xor
cld
add
js
rol
into
mov
dec
call
sahf
xchg
and
or
out
inc
and
icebp
dec
pop
add
or
mov
jl
hlt
cld
pop
mov
into
add
add
xchg
jl
mov
lock
pop
adc
bts
mov
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xchg
cmp
jns
xor
sar
not
jmp
call
xor
shr
jae
cmp
shr
add
jmp
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
jmp
dec
test
and
ja
cmp
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
cmp
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
xchg
not
and
jno
dec
or
shr
add
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
or
repz
push
rol
cmc
std
shl
and
add
add
cmp
mov
les
add
mov
test
add
add
add
add
and
idiv
(bad)
fiadd
daa
add
test
prefetch
or
and
or
xor
add
jno
(bad)
pop
and
movs
mov
add
xchg
scas
add
jmp
xchg
mov
pop
out
and
add
ret
jle
and
movs
mov
test
test
xchg
scas
and
add
sub
xor
test
jno
test
mov
es
mov
scas
add
jg
push
add
add
xor
and
and
shr
mov
inc
mov
and
pop
ret
test
add
movs
mov
mov
add
sar
test
xor
(bad)
xor
jno
xor
add
add
mov
and
add
scas
das
(bad)
and
call
test
xor
pop
inc
xchg
cdq
dec
ja
test
clc
sub
xchg
scas
and
add
sub
mov
add
(bad)
and
pop
add
mov
nop
ins
sbb
mov
test
push
mov
or
xchg
scas
leave
loopne
inc
mov
xor
inc
ja
mov
push
(bad)
test
add
jno
push
test
xchg
pop
inc
push
mov
sysexit
jecxz
scas
add
and
jne
test
or
add
aam
and
jg
jmp
cli
pop
and
add
add
xor
jg
jmp
je
and
or
xor
out
mov
fadd
add
add
xor
and
add
mov
mov
and
jg
fadd
pop
add
test
pop
(bad)
test
and
vmread
test
test
sub
mov
(bad)
xor
pop
outs
add
inc
and
fldenv
xchg
or
inc
sahf
icebp
jg
push
jne
push
add
xor
sub
mov
mov
jmp
ss
push
add
add
mov
mov
jg
jmp
xchg
mov
add
add
or
(bad)
(bad)
movs
add
mov
test
sub
mov
(bad)
cmp
push
or
dec
test
sub
mov
and
(bad)
ret
add
add
add
test
push
mov
inc
fimul
call
pop
add
mov
mov
hlt
dec
ds
mov
mov
imul
mov
and
inc
jne
sub
cmc
mov
mov
mov
add
cli
pop
and
add
add
mov
je
leave
iret
push
xchg
lods
add
add
pop
pop
or
inc
and
pusha
add
add
and
test
push
sub
daa
sbb
test
mov
jmp
lods
add
test
sub
and
je
jmp
mov
call
retf
mov
je
push
mov
add
mov
and
add
inc
mov
lock
scas
add
mov
pop
adc
inc
jbe
and
psubusw
outs
test
cwde
push
add
add
test
sub
mov
mov
je
push
ss
add
push
jo
jnp
push
dec
inc
and
minps
add
push
sbb
lods
xchg
add
inc
mov
lock
add
ret
add
add
xchg
fdiv
add
sbb
inc
scas
and
add
add
jnp
mov
pop
outs
jmp
add
push
imul
xchg
scas
add
mov
jmp
cmova
jno
movs
mov
mov
and
add
test
xchg
scas
test
fild
dec
and
mov
add
je
(bad)
inc
in
popa
mov
sub
add
push
and
mov
xor
xchg
xchg
scas
and
mov
add
add
inc
add
mov
and
and
add
test
sar
nop
mov
mov
and
add
jmp
inc
cmp
xchg
mov
pcmpgtd
fldenv
mov
mov
and
test
js
and
add
mov
add
push
xchg
enter
in
mov
sub
cdq
xor
and
test
xchg
daa
push
and
mov
and
mov
jmp
sbb
std
(bad)
mov
mov
dec
cmc
std
mov
test
add
add
jae
enter
movups
xor
cmp
push
add
cmp
cmp
pop
push
xchg
add
mov
clc
pop
xor
mov
fimul
mov
nop
retf
and
add
add
add
xchg
and
or
call
retf
and
test
jno
and
push
mov
(bad)
sub
add
cmp
inc
dec
cmp
add
jnp
mov
xor
pop
add
outs
inc
inc
and
add
jb
into
or
jp
add
mov
add
mov
or
add
xor
scas
or
fldenv
add
mov
add
call
push
test
scas
add
enter
mov
jmp
inc
mov
pop
add
in
out
jno
add
mov
mov
jno
add
add
mov
push
scas
and
xor
cld
push
cmp
mov
and
xchg
inc
and
add
fscale
cmp
sub
mov
scas
adc
push
add
jnp
mov
mov
movs
ror
mov
add
hlt
add
jmp
mov
xchg
and
inc
xor
test
es
ins
loope
and
(bad)
dec
pop
add
in
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
test
jns
rol
cmp
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
and
jmp
call
rol
sar
jmp
mov
push
pop
push
pop
mov
mov
mov
pop
mov
jmp
mov
xor
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
test
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
fst
jne
and
mov
outs
pop
sub
xchg
fstp
js
inc
and
sub
pop
test
add
add
test
loop
and
movsx
push
add
int3
add
add
nop
push
in
dec
(bad)
mov
add
add
sub
loop
and
(bad)
loope
add
jmp
mov
sub
ins
mov
jns
stos
add
sahf
jg
add
ret
cmp
inc
or
je
jmp
loopne
and
jp
stos
jb
inc
push
and
je
jmp
jmp
mov
stos
fdivr
popa
lock
in
cmps
call
mov
xchg
xchg
adc
jnp
push
int3
adc
fst
mov
or
mov
test
pop
stos
fnstcw
loop
add
dec
jl
ins
xor
pop
mov
xchg
fist
add
add
pop
jb
sub
push
mov
inc
add
sti
pop
add
(bad)
cmp
add
in
(bad)
mov
ins
cmp
scas
jg
jle
push
push
jno
inc
ret
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
shr
not
jmp
call
xchg
not
jb
mov
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
rol
sub
sub
ja
sub
sar
jmp
push
mov
pop
mov
mov
push
pop
mov
push
mov
mov
mov
ret
dec
sar
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jge
adc
or
add
xchg
and
add
mov
and
cmp
jecxz
add
add
add
test
sbb
inc
add
add
out
cmp
add
add
cdq
ja
adc
sbb
call
call
push
into
test
lea
in
sbb
add
push
fnstsw
sbb
in
add
gs
jo
inc
add
mov
stc
movs
and
cdq
ja
add
stos
sbb
lods
mov
and
add
add
test
outs
push
out
jmp
mov
sub
xchg
test
imul
add
(bad)
and
cdq
add
ja
add
sbb
sub
mov
gs
or
sbb
add
mov
add
push
add
aas
hlt
push
jge
test
jbe
add
lock
add
test
movs
sub
rol
and
in
push
popa
or
dec
xor
mov
call
(bad)
fiadd
add
sub
add
mov
add
stos
inc
add
lahf
inc
and
mov
sub
sub
add
sbb
add
and
or
in
movs
int3
lea
jbe
add
test
add
add
outs
add
mov
xchg
(bad)
pop
out
movs
loope
fadd
cmp
add
jmp
into
lea
inc
and
inc
cs
cmp
test
push
or
add
jmp
mov
and
add
add
cmp
int3
test
bswap
and
add
enter
add
mov
sub
mov
add
add
popf
add
add
add
jle
push
mov
or
cs
and
add
imul
cdq
ja
and
sub
in
test
stc
add
add
mov
push
inc
mov
or
push
fmul
add
shld
ja
dec
xchg
mov
and
add
sub
mov
aam
push
out
dec
test
mov
test
pop
xchg
adc
mov
and
sbb
or
add
push
test
or
sub
jg
and
add
sub
add
add
add
or
sbb
add
call
mov
(bad)
add
out
lods
add
add
std
test
add
add
xor
sub
pop
add
add
add
sub
jbe
and
out
inc
add
(bad)
and
jbe
jmp
(bad)
call
mov
fs
inc
je
lock
add
mov
ret
shl
adc
jbe
jo
out
add
jg
lahf
inc
and
add
jb
add
cdq
add
lock
pushf
add
(bad)
push
test
add
add
add
add
jns
push
inc
and
(bad)
and
push
add
sub
cdq
ja
test
add
dec
jmp
sbb
test
push
sub
cmp
add
inc
or
mov
add
jns
add
cdq
sahf
movs
xchg
add
xor
xor
mov
retf
add
add
push
add
jmp
xor
inc
and
add
jg
js
sub
add
js
mov
and
sub
add
mov
pop
(bad)
aas
in
inc
add
or
jbe
mov
add
sub
mov
sbb
add
add
sbb
add
out
cmp
mov
pop
(bad)
ds
or
lahf
inc
and
xchg
jb
add
add
sub
mov
sahf
(bad)
call
add
cmps
loope
add
or
rcr
and
mov
bswap
or
jmp
mov
imul
mov
and
movntps
(bad)
sbb
add
add
adc
into
(bad)
es
and
pop
(bad)
clc
out
inc
add
or
jbe
stos
test
sbb
sub
mov
pop
and
push
pop
add
add
add
jns
in
mov
xor
and
(bad)
lods
add
jmp
mov
sub
mov
dec
jg
jmp
jecxz
retf
add
sub
inc
jo
jmp
mov
mov
pop
add
icebp
in
inc
and
loope
fld
add
add
push
jmp
sbb
mov
push
adc
add
xchg
xor
stos
sbb
dec
je
add
test
add
jp
inc
add
add
xor
inc
and
js
mov
nop
mov
add
add
sub
mov
dec
lock
mov
dec
add
add
add
sub
shr
shl
test
add
mov
add
add
mov
je
mov
shr
ss
xor
outs
and
je
jmp
das
adc
add
and
add
jnp
push
out
add
test
sbb
sub
sub
inc
stos
adc
lock
add
mov
fld
add
mov
inc
cmpeqps
enter
add
add
sub
xor
push
or
sbb
add
mov
and
or
std
into
xor
sub
test
add
jmp
mov
mov
rol
pop
or
cmp
add
retf
add
sub
lea
and
jb
add
add
scas
ja
movs
mov
(bad)
xor
inc
pop
sbb
stos
and
add
cmc
add
inc
add
inc
hlt
push
cmp
test
push
add
ret
add
sahf
loope
add
sub
push
jge
xchg
and
sbb
add
add
jns
test
jmp
mov
jbe
bound
neg
add
(bad)
mov
mov
mov
cmp
cmovne
add
add
or
cmp
sub
cdq
icebp
adc
mov
sbb
add
mov
add
cmp
push
add
mov
and
add
rol
movs
icebp
(bad)
jmp
inc
mov
scas
push
movs
cmp
paddd
ror
mov
add
or
add
mov
loopne
inc
and
push
repnz
call
add
add
or
pop
sbb
sbb
popa
sub
nop
and
add
push
mov
and
dec
and
adc
call
mov
cmp
mov
ret
and
xchg
mov
xor
out
add
inc
sub
iret
or
pop
imul
cwde
rdmsr
ror
add
sbb
test
mov
add
bound
mov
add
add
loope
and
mov
add
add
add
add
jb
or
inc
xor
add
add
and
add
gs
inc
add
cmp
rol
push
add
out
inc
add
xchg
rol
add
add
add
jmp
sbb
test
sbb
movs
cmps
xchg
and
add
sbb
add
inc
int
test
or
push
out
add
jp
ss
add
arpl
add
and
test
add
add
int3
test
mov
mov
mov
in
add
inc
or
add
(bad)
mov
add
add
cmp
inc
add
add
cmp
pop
mov
gs
adc
test
add
(bad)
jnp
pop
out
add
jae
jae
loopne
ja
add
jg
mov
sahf
(bad)
nop
add
add
fxch
sub
add
addr16
movs
or
add
jb
or
add
jo
add
add
add
mov
cmp
test
cmovns
mov
pop
add
inc
loopne
inc
and
mov
mov
and
add
add
test
mov
(bad)
mov
mov
push
jmp
(bad)
lea
inc
add
add
and
cdq
ja
adc
sbb
sti
or
push
inc
add
lea
sub
and
add
push
test
push
adc
xchg
add
xlat
and
mov
add
jmp
adc
fisttp
int3
dec
push
or
mov
mov
jmp
(bad)
adc
add
int3
lea
dec
gs
mov
and
imul
movs
mov
mov
or
and
mov
mov
call
sub
mov
rol
lock
gs
cmp
add
out
outs
data16
add
imul
mov
cld
push
add
jns
sub
push
xor
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
rol
jb
or
sub
jmp
call
add
cmp
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
jmp
push
mov
pop
mov
mov
mov
push
pop
mov
ret
not
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
(bad)
push
pop
add
add
mov
mov
mov
jnp
sbb
and
cmc
inc
and
mov
pop
cmps
ins
and
aas
sub
push
movs
inc
and
outs
rol
pop
inc
and
mov
sbb
add
jmp
stos
inc
and
imul
test
add
add
aaa
add
ins
and
sub
mov
ins
adc
push
add
cdq
add
shl
or
pop
pushf
add
(bad)
aad
cmp
inc
lods
add
add
add
pusha
add
xchg
and
lock
mov
and
jns
jmp
mov
cmp
mov
or
rol
ss
jmp
cmps
inc
std
push
sub
mov
rol
fstp
push
lea
jmp
mov
je
jmp
mov
jns
das
into
das
leave
push
inc
out
pop
je
jmp
mov
cmp
lahf
inc
and
je
jmp
mov
sub
adc
test
add
jmp
mov
mov
lahf
aad
xchg
mov
je
push
add
add
add
call
test
mov
popa
add
jmp
mov
mov
mov
andnps
push
add
dec
add
mov
sbb
and
(bad)
cli
add
add
psubusb
jmp
in
fld
mov
(bad)
and
test
adc
loopne
add
add
push
call
(bad)
je
adc
shl
call
mov
lahf
and
dec
icebp
cld
dec
js
mov
inc
adc
mov
push
aam
dec
and
add
push
add
movzx
mov
cmp
mov
gs
add
push
or
fiadd
leave
xchg
mov
je
test
sub
call
dec
push
mov
iret
inc
mov
pop
jno
ror
ins
pushf
ss
shl
les
call
movs
popf
out
dec
and
sbb
mov
jmp
mov
pop
jmp
jl
cmp
mov
add
pushf
add
add
sub
or
push
ins
(bad)
jmp
mov
push
cld
bnd
dec
pop
jecxz
shl
add
or
inc
and
mov
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
ja
shr
rol
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
xchg
jns
not
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
xchg
jmp
call
test
shl
js
xchg
cmp
jmp
mov
push
mov
push
mov
pop
mov
push
mov
mov
mov
pop
push
pop
mov
jmp
cmp
or
shr
add
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
(bad)
xchg
fld
hlt
add
mov
(bad)
dec
cmp
mov
enter
std
dec
add
psubd
in
cld
(bad)
call
mov
retf
mov
add
imul
test
lods
loope
aaa
jle
xchg
mov
add
sub
push
cwde
xchg
fnstsw
and
add
(bad)
xor
dec
retf
dec
add
jle
push
add
stos
cld
mov
and
add
add
add
add
hlt
imul
cwde
(bad)
sbb
jg
fld
add
push
add
hlt
sub
mov
js
sar
add
push
cli
mov
add
push
and
add
sub
add
scas
imul
jmp
mov
sub
pop
out
and
jg
fld
add
add
add
sub
jge
and
cmovs
aas
push
enter
push
push
aaa
test
mov
div
lods
mov
cmp
jmp
mov
sub
mov
mov
mov
and
mov
push
sbb
fsub
sahf
(bad)
mov
add
(bad)
cmp
push
enter
sbb
pop
jae
stos
pop
movs
(bad)
call
xor
add
add
add
hlt
inc
ss
jb
fiadd
xadd
push
add
jmp
mov
mov
add
jnp
in
add
and
xchg
push
pop
add
add
add
add
mov
dec
js
out
ja
and
mov
push
add
add
sub
jge
dec
jb
(bad)
push
add
add
push
add
add
test
add
mov
xchg
rcl
add
jmp
push
jo
mov
(bad)
cmp
xchg
adc
je
jmp
mov
sub
rol
test
fdivp
add
cld
add
ds
test
cmp
std
sahf
std
mov
pop
cmp
stos
push
push
xor
or
xchg
sub
mov
and
ud1
add
and
add
mov
xlat
mov
inc
and
psrld
add
add
adc
add
pop
stc
mov
dec
inc
and
je
jmp
mov
add
js
xchg
out
and
je
jmp
ret
sbb
add
sub
mov
add
add
mov
add
sar
xchg
jmp
and
mov
add
jmp
jg
and
add
sub
mov
dec
add
dec
mov
aaa
test
push
add
stos
sub
mov
je
jmp
mov
mov
imul
inc
mov
je
mov
and
fiadd
push
xor
(bad)
xlat
mov
shl
add
add
fmul
push
add
sub
mov
dec
push
add
jmp
adc
sub
jge
dec
or
inc
jnp
push
enter
push
mov
add
add
mov
psrld
add
add
sbb
mov
fld
scas
mov
(bad)
retf
add
jmp
jmp
adc
dec
psubsb
mov
add
cli
add
shl
and
add
add
mov
add
js
sub
mov
add
add
push
add
inc
dec
mov
xor
cmc
imul
add
add
add
add
add
sbb
xor
test
cwde
add
add
push
imul
mov
xchg
test
xchg
push
add
jmp
call
xor
push
mov
hlt
add
mov
add
shr
pushf
dec
add
setae
aad
push
xor
and
cli
mov
and
shl
mov
sub
cmps
mov
inc
scas
mov
and
enter
ret
adc
mov
inc
fild
add
test
sbb
sbb
jmp
test
call
push
add
mov
ss
int
dec
cmp
inc
xchg
pop
xor
in
scas
add
mov
jmp
in
rcl
mov
and
push
push
add
ret
inc
dec
rcr
add
add
add
add
test
add
clc
out
push
dec
aam
enter
test
add
aas
repz
add
push
push
sub
add
popf
or
push
mov
test
hlt
imul
add
add
ds
jmp
mov
pop
shl
push
add
int
xchg
add
(bad)
ss
cmp
icebp
push
add
xor
shl
pop
pop
adc
fld
(bad)
or
add
or
add
scas
test
xchg
add
cmp
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
push
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
not
xchg
cmp
jge
cmp
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
sub
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
test
jg
mov
cmp
cmp
jmp
call
and
cmp
jmp
mov
push
mov
pop
push
mov
mov
push
jmp
shl
and
cmp
jo
sar
shr
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
pushf
fist
pop
dec
and
push
push
add
sbb
pop
pop
aas
fs
data16
push
mov
push
push
push
and
sub
jmp
call
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
shl
jl
add
test
sub
or
jmp
mov
mov
mov
push
mov
mov
push
jmp
sar
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
jbe
rol
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
dec
popa
add
(bad)
lock
imul
sbb
test
adc
loop
mov
jle
lahf
sub
add
add
or
push
add
lock
dec
add
fdivr
loop
and
inc
or
xchg
mov
stos
out
xor
das
ds
jl
add
fimul
rcr
and
loope
add
push
add
cli
stos
out
div
xor
add
loop
idiv
inc
xor
fadd
std
stos
cdq
jmp
mov
add
imul
cmps
push
push
jae
cld
inc
add
add
test
add
add
xchg
mov
and
push
loop
cli
stos
sub
mov
and
add
int
mov
pop
and
pusha
fmul
sti
dec
sbb
add
scas
test
jg
add
sub
sub
movd
jae
jmp
mov
sub
mov
jg
jmp
mov
mov
sahf
mov
adc
or
jl
or
push
pushf
and
dec
add
sub
dec
test
add
jg
jmp
jno
and
add
sub
pushf
ret
jge
pusha
xlat
test
outs
sbb
hlt
fiadd
add
add
jmp
sub
and
add
(bad)
add
jl
jl
push
lock
add
add
ret
test
and
push
in
(bad)
icebp
add
mov
jae
test
add
inc
sub
cmc
test
je
jg
jmp
imul
push
inc
mov
push
add
add
jmp
clc
xchg
(bad)
les
jl
sub
std
out
cmp
sbb
inc
add
and
add
cli
stos
add
lods
adc
add
repz
pusha
fdiv
out
and
add
add
jl
fsub
mov
add
les
loope
cli
jmp
mov
imul
jp
test
add
xchg
fwait
push
add
jmp
mov
sub
jae
and
sub
sbb
xchg
pusha
fdiv
pushf
and
sbb
loopne
pop
and
pop
mov
fsubp
stos
sub
(bad)
call
add
add
xor
mov
pop
(bad)
adc
stos
sub
clc
test
add
sub
jmp
add
seta
dec
loopne
add
and
add
(bad)
in
mov
jae
dec
(bad)
jnp
jl
mov
add
add
and
sbb
arpl
mov
cvttps2pi
add
add
sub
add
xchg
and
jmp
loopne
aas
mov
jg
hlt
add
dec
add
and
lds
push
iret
push
xor
ss
add
montmul
cmps
mov
add
add
jl
sub
std
out
cmp
sbb
rol
and
add
and
sti
add
xchg
ss
mov
jg
jmp
mov
sub
mov
jg
sub
mov
xchg
jae
sub
mov
jnp
mov
sbb
test
add
and
aas
mov
or
sbb
jae
jl
jmp
mov
sub
xchg
cdq
outs
mov
and
add
add
mov
test
adc
add
(bad)
popw
stos
jmp
add
xlat
test
add
hlt
add
add
test
add
les
mov
test
pop
add
jmp
mov
dec
cwde
mov
and
dec
add
sub
add
add
mov
add
add
cmp
int3
movs
jl
pusha
je
adc
and
and
push
sub
jae
and
stos
add
maskmovq
div
or
add
and
add
sub
jecxz
cmp
sbb
scas
loop
add
jno
or
sub
mov
subps
add
mov
lds
add
imul
xchg
add
add
add
jl
in
sub
add
pop
hlt
sbb
jo
les
test
add
cli
and
sub
iret
ins
and
jl
add
in
fiadd
je
aam
add
xchg
into
and
add
add
mov
je
jmp
idiv
and
popa
fadd
sub
mov
and
add
add
test
add
add
mov
add
add
imul
cmp
add
jmp
mov
inc
sub
add
sub
xchg
inc
cmp
mov
pop
push
loop
mov
add
push
aaa
jmp
outs
test
add
jmp
rol
lahf
aam
pop
jae
and
idiv
adc
jmp
mov
inc
hlt
add
je
pop
xor
and
sub
loope
add
hlt
stos
add
clc
xchg
and
add
call
sbb
out
jmp
(bad)
add
push
imul
add
mov
and
dec
ins
mov
jl
jmp
push
lock
sub
add
lds
retf
loop
push
cli
add
and
add
cmc
inc
inc
mov
add
jmp
imul
iret
push
pop
out
mov
test
inc
call
add
add
xor
ret
inc
and
pop
(bad)
(bad)
push
add
iret
cli
stos
add
call
aam
mov
je
jmp
scas
test
add
push
sub
mov
movs
lods
sbb
adc
int3
sub
add
push
dec
xchg
ret
cs
adc
cmp
add
int3
sbb
add
xchg
add
add
cli
inc
and
je
jmp
jmp
mov
mov
imul
cli
add
bound
or
jmp
mov
push
lock
sbb
add
mov
dec
loopne
jp
and
sub
shr
add
ins
and
add
add
(bad)
in
jmp
mov
loope
cmp
sbb
add
inc
xor
mov
(bad)
loope
stos
add
jae
push
add
add
call
call
(bad)
stos
into
pop
jmp
pop
mov
sar
add
sub
push
mov
and
jge
add
das
add
cld
xor
sbb
or
pop
push
loop
mov
jno
mov
add
mov
mov
mov
arpl
rcl
add
and
adc
add
loop
jbe
jno
add
inc
and
mov
into
les
and
add
test
adc
jge
add
mov
xchg
ja
fiadd
loopne
les
xchg
movs
or
add
add
inc
cmps
add
add
(bad)
lods
call
mov
pushf
inc
bound
cmp
in
sbb
mov
jecxz
cmp
add
dec
popa
mov
add
push
loop
cmc
inc
popa
mov
add
jmp
rol
inc
sti
bound
fsub
mov
and
add
sbb
les
out
mov
mov
adc
je
fdiv
inc
add
add
add
call
pop
add
xor
mov
inc
mov
and
sub
add
jae
add
add
mov
xor
cmp
loopne
xchg
xor
jmp
xchg
push
cwde
fsub
test
jge
add
scas
(bad)
add
mov
scas
xchg
loopne
add
add
fidivr
add
add
inc
mov
imul
inc
cmp
add
add
je
or
dec
and
call
jge
cmps
mov
dec
mov
mov
add
(bad)
sub
add
cli
loope
mov
adc
mov
add
add
push
add
add
ja
jp
sub
mov
jmp
and
add
fmul
sub
add
ja
pop
jge
retf
mov
and
add
cli
pop
jmp
sbb
popa
clc
and
popa
add
popf
or
add
mov
sub
sbb
add
inc
add
jl
mov
dec
(bad)
mov
sub
sbb
sub
pop
(bad)
cmps
sti
stos
add
cli
inc
and
std
push
aam
(bad)
mov
mov
cmp
sete
pushf
and
jne
push
mov
xchg
add
(bad)
jmp
ss
aam
pop
cmp
and
sub
mov
add
inc
mov
add
push
push
add
and
les
(bad)
in
jmp
mov
mov
mov
add
add
xchg
push
cmp
sbb
loope
and
add
push
imul
sub
mov
jmp
add
sub
loopne
add
sub
add
int
xchg
addr16
fsubr
test
push
add
or
and
add
je
or
xchg
sbb
add
je
xchg
pop
mov
int3
sbb
add
daa
and
sti
stos
add
adc
jmp
mov
popa
stc
mov
outs
movs
add
and
lods
inc
shl
xor
jae
jmp
push
or
aam
cmc
in
xor
fdiv
add
sbb
add
les
add
in
scas
mov
iret
mov
jmp
inc
hlt
popf
outs
imul
fiadd
push
movs
sbb
les
inc
or
pushf
repnz
jl
add
add
inc
ror
fsubr
dec
imul
mov
push
imul
add
pop
sar
sub
add
loope
mov
mov
and
mov
add
gs
inc
pop
inc
pop
mov
mov
add
lods
call
add
mov
mov
jmp
add
dec
and
jne
sbb
les
pop
fsubrp
add
add
ror
jl
cmc
add
mov
mov
or
push
and
call
pop
shl
dec
mov
add
add
push
xchg
stos
sub
adc
scas
and
mov
cmp
add
daa
mov
mov
mov
sub
jl
les
pusha
add
int
push
sbb
loopne
mov
sub
fisubr
and
stos
sub
add
(bad)
sub
cli
sbb
inc
int3
js
jl
fdivr
cs
lock
sar
(bad)
mov
lea
mov
dec
or
add
push
add
add
test
mov
lock
xor
add
or
sahf
dec
mov
(bad)
call
in
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
test
sub
xchg
js
mov
or
jmp
push
mov
push
mov
mov
push
mov
pop
push
pop
mov
pop
mov
jmp
dec
and
jmp
call
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
or
cmp
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
push
cmp
je
ror
mov
xchg
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sbb
scas
push
or
test
and
inc
mov
sbb
add
mov
inc
ins
or
and
add
add
mov
add
mov
pusha
mov
sbb
mov
lahf
mov
inc
mov
sub
add
jg
(bad)
add
test
add
sub
mov
pop
inc
add
shl
and
cmp
sub
inc
add
mov
add
or
add
add
add
and
mov
mov
push
ror
test
test
call
leave
pop
add
mov
inc
add
adc
je
add
lods
test
push
popf
jmp
xor
hlt
add
add
test
cmps
add
fiadd
mov
sub
mov
pcmpeqd
sbb
shr
mov
add
test
add
sub
out
cmp
add
sub
cmps
ret
push
sub
outs
push
test
add
add
sub
fadd
mov
and
add
xchg
mov
add
(bad)
lods
inc
ror
add
je
shr
add
call
leave
sbb
popf
jl
xor
add
add
add
test
add
and
test
xchg
rcl
add
cmps
sub
sub
les
add
cmps
int3
dec
sub
test
add
(bad)
add
mov
test
sub
fld
inc
call
adc
lods
mov
xchg
sub
add
sub
sub
add
jg
jmp
sbb
sub
int3
push
ss
add
sub
add
add
call
add
add
mov
jae
push
stos
mov
jl
mov
add
mov
mov
add
sub
add
shl
test
push
add
in
pop
sub
mov
add
jmp
mov
sub
mov
add
(bad)
and
add
add
add
jae
cmp
rol
add
test
scas
add
add
add
sub
mov
shl
add
add
add
add
add
sub
mov
add
add
mov
push
popf
add
cmp
add
add
sub
mov
psllq
sub
add
pop
add
test
shl
add
add
mov
call
lds
add
loope
add
test
pushf
add
sub
mov
ucomiss
and
test
add
sub
sub
int3
test
cwde
add
add
pop
add
add
add
add
add
sub
mov
and
jl
shl
and
jl
sub
test
add
mov
nop
add
add
(bad)
and
ror
pop
push
add
test
rol
test
and
test
movs
pop
test
ficom
jmp
mov
shld
jge
fcomp
pop
aaa
add
add
add
and
test
sub
fwait
lods
and
sub
push
and
popf
mov
sub
mov
jae
and
pop
test
inc
add
adc
add
add
mov
add
je
add
push
lea
or
inc
aas
mov
(bad)
icebp
add
add
add
adc
mov
add
sub
mov
sub
push
je
jge
add
lea
add
sub
stos
popa
and
psllq
pop
test
add
add
test
sub
add
sub
popa
push
inc
push
popf
jl
dec
rol
test
xchg
add
sub
mov
or
(bad)
adc
sub
sub
or
add
stos
iret
jp
nop
mov
test
and
add
sub
mov
pusha
fisubr
adc
add
mov
add
add
stos
pop
mov
xlat
pminub
add
jl
pop
test
add
test
jl
push
adc
ins
adc
add
add
sub
mov
lds
add
pop
push
popf
test
test
and
sub
mov
test
rcr
add
add
adc
xlat
adc
aas
aad
add
mov
add
add
sti
jge
xor
fiadd
sub
xchg
jmp
mov
mov
fimul
pop
lahf
add
add
lods
mov
pusha
mov
sub
add
stos
sub
sub
mov
mov
sub
add
shr
fmul
pop
test
add
mov
or
sub
(bad)
fisub
test
push
retf
call
add
pop
jo
add
test
add
inc
ror
add
ret
add
pop
or
cmps
and
add
call
ds
mov
mov
test
mov
loop
sub
retf
retf
or
mov
jmp
in
and
xchg
call
lds
and
and
out
inc
mov
and
xchg
and
add
xor
mov
mov
inc
add
mov
mov
mov
and
movs
push
add
add
hlt
or
add
and
xor
into
inc
and
sub
and
ror
rol
jne
add
add
add
(bad)
(bad)
cmp
xchg
mov
mov
std
cli
add
add
cmove
mov
jmp
adc
add
je
fdivr
lea
mov
and
mov
add
mov
mov
data16
data16
ins
cmovne
cmc
fldenv
shl
xchg
push
mov
sub
(bad)
pop
mov
xchg
inc
xchg
mov
mov
mov
add
mov
into
mov
xor
dec
xor
xchg
and
lods
aaa
jns
in
or
cmp
ds
push
data16
mov
add
mov
mov
jmp
and
sub
xchg
ss
call
out
test
add
xchg
test
ror
test
add
das
test
fwait
add
and
add
inc
add
shl
jmp
call
add
popf
(bad)
push
add
add
xchg
sub
das
xor
sub
adc
add
je
sub
ret
dec
mov
inc
mov
inc
jp
mov
pop
(bad)
pop
in
xor
xor
sbb
sbb
nop
mov
add
ret
adc
add
sbb
iret
test
mov
test
test
xchg
mov
add
add
pop
add
mov
rcl
sub
adc
je
xor
imul
cmp
jp
and
pop
mov
pushf
movs
mov
add
inc
and
xchg
add
and
(bad)
mov
mov
mov
mov
or
add
out
cmps
or
add
xchg
test
cmp
int
rol
add
(bad)
push
xchg
fadd
add
xchg
mov
mov
mov
sub
add
add
cdq
test
sub
popw
(bad)
jmp
iret
jp
data16
dec
inc
pcmpgtd
lea
dec
in
mov
and
in
and
mov
cmc
and
pop
and
and
data16
and
loopne
in
fbld
jmp
mov
jae
add
mov
and
add
lods
movs
sbb
and
pslld
clc
fsubr
lock
call
xor
and
pushf
add
mov
(bad)
sbb
inc
mov
dec
xor
stc
into
je
je
fisub
mov
jmp
stos
fbld
(bad)
sbb
add
cmp
and
test
xchg
inc
and
jmp
jmp
jp
add
inc
out
popf
repnz
nop
mov
test
shl
bound
retf
push
repnz
test
mov
test
add
pop
or
add
rcl
add
mov
and
adc
add
popa
test
aam
and
push
add
jmp
(bad)
std
push
ss
jp
cmps
add
add
test
or
sub
or
add
mov
mov
add
mov
push
mov
sub
mov
and
or
sbb
inc
pop
rol
add
jae
ret
mov
dec
fisub
push
popf
add
pop
mov
and
(bad)
lea
outs
add
adc
xchg
(bad)
(bad)
(bad)
jmp
add
stos
iret
and
mov
jg
mov
add
xchg
mov
mov
push
dec
mov
cmp
xchg
ss
mov
mov
mov
dec
xor
cmps
test
jo
movzx
mov
add
hlt
mov
xchg
and
xchg
adc
test
or
rol
fldenv
iret
rdtsc
daa
sub
sub
mov
aad
and
pushf
jl
pop
mov
add
lock
pop
test
into
call
xchg
mov
mov
pop
inc
packuswb
fmul
and
mov
call
jmp
or
das
xchg
jge
int3
inc
and
jmp
(bad)
xchg
and
add
sub
imul
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
cmp
jge
mov
jmp
mov
mov
mov
movzx
cmp
jl
mov
jmp
mov
mov
movzx
cmp
jl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
add
mov
movzx
sub
mov
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
movzx
cmp
setge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
movzx
sub
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
movzx
mov
mov
mov
mov
mov
cmp
jge
mov
add
mov
movzx
mov
shl
shl
mov
mov
add
mov
mov
add
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
add
pop
pop
pop
ret
jmp
mov
mov
jmp
jmp
mov
mov
add
mov
movzx
sub
mov
mov
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
test
add
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
and
and
ja
test
test
jmp
mov
push
mov
mov
pop
push
mov
push
mov
push
mov
jmp
ror
dec
xchg
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
or
and
je
ror
sub
mov
jmp
call
shl
xor
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
fisttp
adc
mov
mov
pop
cmp
fidiv
and
add
pop
push
mov
test
add
mov
pop
jle
inc
frstor
add
add
ror
mov
xchg
fcom
jbe
push
inc
and
jno
movs
pop
add
ja
add
add
int3
cmp
add
rcl
and
jg
jmp
out
push
inc
add
iret
mov
xor
stos
mov
sbb
cmp
inc
jmp
dec
cmp
sub
frstor
jg
cmp
add
mov
sub
mov
int3
add
fucompp
fdivr
mov
sub
mov
ins
add
into
mov
add
sub
sub
mov
(bad)
add
mov
mov
test
add
add
mov
or
inc
jae
adc
(bad)
sbb
add
push
scas
cdq
add
jns
sub
in
inc
cmc
lods
dec
aam
add
jle
test
iret
add
neg
sbb
push
pop
add
jmp
mov
and
cdq
add
sub
mov
cmove
rol
jmpw
add
mov
mov
push
icebp
pop
dec
cmovo
fucomi
sbb
adc
xor
rol
mov
add
add
repnz
inc
push
data16
mov
inc
aad
clc
jle
add
add
add
adc
add
popa
or
inc
and
jg
jo
add
inc
test
add
dec
mov
mov
cmp
sbb
add
mov
add
iret
mul
jae
add
inc
andps
scas
jmp
adc
sub
mov
movups
mov
add
add
add
test
aas
xor
dec
ror
pop
add
fild
out
mov
mov
imul
jmp
pop
cmp
add
push
inc
and
je
mov
mov
aam
add
xor
loop
mov
add
add
jle
imul
cmp
and
je
xchg
aaa
dec
mov
and
add
jns
bound
mov
inc
add
mov
xchg
pop
test
cwde
xor
sub
lahf
aas
xchg
dec
xor
cmp
jmp
fild
sub
mov
cmc
adc
loop
mov
add
cs
xor
iret
add
idiv
js
dec
inc
jmp
cmp
sbb
add
rol
sub
mov
je
jmp
jmp
sub
scas
xchg
imul
(bad)
iret
aaa
dec
xor
and
push
scas
add
add
inc
loope
pop
add
sub
ds
pusha
mov
mov
and
cmp
inc
inc
lock
mov
add
push
jmp
ret
iret
out
cmp
cmp
data16
add
test
add
jle
dec
add
add
push
lahf
mov
mov
jmp
pop
test
sub
rol
dec
sbb
add
mov
mov
cmp
cmovg
and
mov
mov
enter
mov
add
add
out
sbb
shr
call
add
ret
inc
arpl
xchg
(bad)
jmp
mov
mov
es
jl
xchg
out
inc
adc
push
add
scas
cdq
repz
out
test
gs
dec
add
gs
and
xchg
(bad)
add
pop
cs
test
int
mov
sahf
add
inc
and
add
add
scas
add
cmp
push
add
add
mov
and
rol
sub
inc
fiadd
push
sub
adc
test
fiadd
mov
cli
jmp
add
sbb
mov
das
cmp
add
mov
into
aam
mov
ret
(bad)
sbb
retf
xor
add
xchg
(bad)
rcl
xlat
push
add
mov
mov
fistp
sub
je
ficom
xor
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
cmp
jmp
call
inc
rol
jle
inc
inc
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
or
sub
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
inc
dec
jmp
push
mov
mov
pop
mov
push
pop
mov
mov
pop
push
mov
pop
jmp
or
and
shl
je
add
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
loop
imul
add
fisttp
mov
inc
fmul
inc
adc
std
add
jl
push
and
add
add
jmp
mov
mov
mov
cmc
cmps
ja
inc
and
and
outs
pop
push
add
add
(bad)
rol
mov
add
loop
inc
fsub
cmp
and
pop
inc
push
add
jmp
push
jne
sub
mov
hlt
jmp
loop
inc
fsubr
jg
and
je
out
mov
shr
inc
test
push
stos
mov
(bad)
popf
add
add
add
add
inc
and
sub
mov
(bad)
ins
add
add
rol
add
or
cmp
inc
and
jg
jmp
mov
and
inc
dec
int3
aam
mov
clc
jno
push
cmp
add
push
inc
and
fstp
inc
and
(bad)
fld
add
test
fld
ja
in
and
paddusw
xor
sar
mov
push
inc
lock
mov
dec
xor
push
sbb
mov
test
inc
and
inc
retf
and
outs
daa
dec
push
fdiv
jmp
mov
xchg
add
inc
lock
inc
xor
add
mov
and
adc
cmove
add
add
mov
sub
mov
test
add
jmp
mov
stc
add
stos
fs
movs
inc
mov
clc
or
mul
mov
and
int3
sub
lea
je
pop
jns
add
mov
in
outs
sbb
jle
inc
inc
sbb
cmp
or
add
add
pop
cmp
and
outs
test
xor
cmp
inc
xchg
mov
jecxz
test
add
jmp
data16
fs
in
and
cvttps2pi
mov
cmp
or
test
mov
test
and
test
adc
or
outs
clc
jb
inc
jbe
lgs
cmp
nop
pop
mov
add
(bad)
pushf
cmps
dec
ins
add
add
jmp
out
aad
inc
in
mov
mov
mov
add
repnz
lock
jmp
scas
test
add
and
xchg
sar
mov
mov
and
(bad)
inc
cmps
jle
nop
and
add
add
mov
jmp
(bad)
sub
mov
jmp
mov
mov
lea
in
mov
push
sub
add
je
mov
push
add
and
and
mov
mov
data16
adc
mov
inc
mov
inc
and
cmp
add
jns
icebp
cli
ins
mov
jmp
mov
mov
in
in
test
mov
pop
rcr
in
mov
in
mov
and
push
ror
mov
(bad)
mov
mov
loopne
and
jmp
sub
push
jge
push
pusha
test
(bad)
(bad)
clc
mov
in
lea
pop
es
add
inc
lock
shr
push
in
in
add
mov
push
rol
add
pusha
mov
and
(bad)
dec
and
mov
add
inc
xchg
mov
test
add
add
jmp
mov
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
sub
jge
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
not
mov
jno
cmp
cmp
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
shl
jmp
push
mov
pop
mov
mov
pop
mov
push
mov
mov
mov
pop
mov
push
jmp
shl
shl
dec
je
shl
add
jmp
call
shl
and
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
or
test
add
add
loope
mov
xor
sub
add
add
add
psubd
or
mov
add
add
test
repz
add
add
and
mov
push
rol
stc
and
in
xchg
sub
sbb
add
(bad)
scas
add
data16
xchg
mov
pushf
sub
mov
fadd
and
mov
push
loope
pop
scas
mov
mov
add
add
test
push
jnp
mov
add
xor
push
add
(bad)
and
xchg
add
add
in
add
outs
rol
mov
add
(bad)
jp
add
loope
xchg
inc
in
xchg
add
cmp
add
mov
add
jg
rol
mov
in
xchg
xchg
sub
mov
and
pop
add
imul
add
pushf
mov
push
push
lea
xchg
add
data16
jmp
mov
dec
pop
mul
jl
sub
add
jmp
add
add
sub
adc
jle
or
mov
sub
jmp
mov
add
inc
or
pushf
jmp
mov
sub
sub
add
xchg
vmlaunch
ja
jmpw
add
mov
icebp
jp
fwait
mov
test
daa
and
jmp
pushf
test
mov
mov
push
test
jle
add
(bad)
and
xchg
xchg
add
add
dec
in
push
mov
pusha
sbb
add
xchg
test
add
mov
and
xchg
xchg
add
mov
pcmpgtd
fadd
add
mov
xchg
inc
lds
pop
add
jb
add
jmp
mov
inc
cmp
xchg
in
(bad)
clc
sub
ja
(bad)
and
pop
data16
xchg
add
and
add
fs
psubd
add
add
test
test
add
sub
sub
push
data16
popf
(bad)
and
add
jmp
add
pushf
mov
and
fadd
xchg
test
add
xchg
jmp
mov
dec
popa
mov
and
add
(bad)
movs
add
add
jle
add
mov
mov
add
rol
test
inc
add
imul
mov
push
cmp
push
in
xor
sub
jg
jmp
mov
in
add
bound
fisttp
fmul
add
dec
add
add
lods
test
add
mov
imul
xchg
add
jmp
pop
test
xchg
sub
cmp
add
sahf
test
test
add
jmp
or
(bad)
pop
add
add
xchg
add
mov
xor
enter
xchg
add
mov
and
fadd
xchg
mov
xstore-rng
cmps
add
add
in
add
sub
out
and
test
push
add
jmp
pop
test
fadd
mov
fs
jmp
mov
in
add
jb
aam
sbb
cld
imul
jle
jmp
and
add
xchg
sub
mov
stos
pop
out
clc
aaa
add
jnp
add
add
pushf
add
cmove
je
shl
mov
in
loope
pop
or
inc
and
jg
jmp
pop
loopne
cmp
add
nop
sbb
sahf
test
add
add
add
in
data16
sub
mov
inc
fadd
add
aaa
push
or
add
shl
inc
and
imul
mov
in
add
cs
sub
(bad)
mov
add
jmp
mov
jecxz
xchg
add
les
sub
inc
je
shl
xchg
xchg
mov
lds
test
xlat
test
movlps
add
add
and
add
xchg
add
mov
mov
je
jmp
sbb
les
and
rcpps
add
inc
xchg
xchg
add
push
test
xchg
add
inc
fadd
mov
and
jle
add
jo
mov
sub
add
add
add
in
inc
mov
add
jmp
dec
mov
and
je
jnp
add
mov
loope
ja
int
mov
and
test
sahf
fs
add
xchg
mov
sub
sbb
je
jmp
mov
add
pusha
inc
mov
add
add
mov
mov
pop
inc
stos
stc
js
xchg
lds
add
add
jmp
add
fs
(bad)
(bad)
pop
popa
mov
mov
scas
test
sbb
add
mov
and
data16
xchg
sub
push
ret
or
fsubr
add
mov
out
loope
mov
scas
cmp
mov
pop
sar
mov
add
repnz
push
mov
js
add
xchg
dec
test
jae
pop
add
add
add
add
jge
add
sub
sahf
xchg
adc
mov
pusha
cwde
and
mov
add
gs
es
push
add
jp
add
mov
jmp
adc
inc
je
mov
add
add
xchg
add
mov
cs
add
add
mov
mov
mov
and
sub
add
mov
rcl
cli
pop
xchg
add
test
add
cs
add
push
sbb
daa
push
xchg
add
dec
sti
xchg
xchg
add
mov
mov
sbb
or
add
and
add
add
add
leave
add
retf
arpl
pop
mov
fs
inc
ret
pusha
test
jmp
(bad)
cli
and
mov
xchg
sub
and
add
lds
jecxz
add
push
out
sub
add
pushf
jmp
ds
xor
mov
jmp
(bad)
adc
sub
mov
jmp
pop
mov
inc
mov
add
jmp
add
jecxz
add
mov
pop
das
sub
(bad)
(bad)
call
sbb
in
test
xchg
jmp
and
xchg
add
cwde
pushf
shl
in
add
iret
mov
loop
mov
jne
add
fs
mov
mov
mov
mov
add
xchg
sub
add
mov
mov
sar
add
sub
add
mov
ja
mov
mov
dec
(bad)
and
mov
out
(bad)
(bad)
aas
cmp
jge
(bad)
jmp
(bad)
pop
ins
add
popf
add
jle
jmp
mov
mov
add
(bad)
movs
add
add
mov
jmp
fdiv
mov
jg
add
mov
call
xor
add
push
and
add
pop
neg
pop
pop
ret
bound
and
add
add
add
add
add
add
mov
in
add
add
add
lock
mov
mov
xor
push
lods
and
xchg
xchg
mov
add
add
push
and
add
jmp
xor
mov
and
add
add
in
(bad)
dec
dec
sbb
sbb
int
rcr
xchg
add
sub
add
add
arpl
hlt
ins
js
enter
jmp
add
sub
push
sbb
jecxz
mov
add
add
shl
add
add
bound
and
add
xchg
add
cmc
and
mov
mov
call
add
sub
sub
mov
es
add
fadd
xchg
or
add
mov
or
call
push
mov
push
push
push
and
sub
jmp
mov
mov
push
mov
push
mov
mov
jmp
and
jmp
call
ror
jb
add
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
mov
shl
jg
sar
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
test
cmp
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
ret
add
add
inc
test
or
and
mov
or
dec
jle
and
add
xor
jmp
push
inc
and
mov
scas
bound
rol
add
add
mov
jo
bound
and
pop
(bad)
adc
sbb
int
mov
sbb
mov
nop
test
cmps
clc
aas
fwait
mov
sub
sub
jge
dec
dec
jmp
dec
jle
sub
xor
mov
pop
(bad)
jae
lea
add
and
and
push
xlat
add
popa
pop
dec
dec
dec
test
loopne
pop
das
ja
in
inc
and
inc
pushf
scas
add
ds
mov
and
sub
mov
xor
jmp
mov
sub
mov
mov
dec
mov
add
sub
or
add
jmp
jmp
or
and
adc
sub
mov
and
sub
les
dec
mov
mov
std
jmp
arpl
or
mov
adc
add
inc
ror
add
dec
inc
loopne
adc
and
ds
inc
test
(bad)
add
add
mov
(bad)
jp
enter
aaa
daa
xchg
sub
popa
cmp
ins
xor
das
hlt
pop
test
dec
sub
add
iret
jmp
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
test
je
mov
mov
shl
jmp
call
mov
or
jmp
mov
push
mov
mov
push
mov
pop
mov
mov
pop
mov
ret
xor
ror
xchg
jbe
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
xchg
dec
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
sbb
mov
mov
mov
mov
add
mov
inc
add
add
pop
das
std
inc
fistp
enter
call
call
stos
push
push
add
cdq
idiv
retw
pusha
jecxz
add
outs
sub
imul
push
and
add
scas
add
pop
mov
ror
add
in
add
and
add
out
adc
repnz
mov
int3
jmp
mov
pop
pop
and
(bad)
sti
add
popf
add
or
add
out
inc
iret
jl
aad
sub
mov
and
add
add
(bad)
loope
push
add
dec
push
add
mov
sti
imul
inc
popf
frstor
mov
out
je
xchg
cmp
(bad)
or
add
push
sub
mov
verr
sti
add
add
add
(bad)
shl
in
out
push
jnp
dec
mov
je
in
add
add
add
add
sub
pop
or
sti
inc
add
add
add
mov
sub
ins
inc
and
fiadd
hlt
add
add
push
pop
add
sub
ficomp
movsx
add
(bad)
sti
add
push
in
pop
pop
movups
and
cmovae
push
out
ret
cs
push
mov
sub
mov
and
jg
jmp
outs
arpl
add
add
ins
xchg
and
ud0
ret
add
dec
add
dec
(bad)
mov
jg
jmp
fbld
cwde
out
add
mov
fiadd
add
push
in
add
mov
addr16
std
mov
mov
and
and
add
mov
mov
add
inc
mov
je
or
add
out
inc
and
add
add
ins
push
ret
es
and
pop
(bad)
into
add
dec
mov
mov
and
xor
add
mov
hlt
ret
adc
mov
in
add
add
sub
mov
inc
fisttp
dec
push
icebp
add
add
mov
add
imul
mov
je
mov
ins
inc
and
jmp
add
mov
and
sub
dec
push
sub
test
sbb
sar
pop
pushf
fisubr
add
sbb
ret
add
aad
dec
jmp
add
ret
xor
les
pop
mov
jmp
int
lds
push
add
dec
scas
sar
pop
add
add
aas
add
into
and
add
sub
daa
hlt
les
and
or
inc
adc
mov
cwde
add
jmp
adc
jne
dec
inc
pop
xor
rcl
add
jmp
fcomp
sub
fwait
inc
jns
pand
in
out
ret
jmp
aad
test
cwde
jnp
out
sub
mov
or
xlat
xchg
add
sbb
fadd
xor
mov
mov
mov
pop
(bad)
and
in
jmp
outs
test
sbb
and
and
lock
add
mov
test
add
xlat
mov
mov
jg
or
add
ret
pusha
pusha
and
(bad)
jnp
sub
mov
arpl
sub
aas
add
add
xlat
add
iret
push
jns
pop
test
ret
jmp
in
add
mov
sub
xchg
adc
test
add
jmp
mov
xlat
(bad)
sti
imul
sar
in
jnp
mov
out
mov
rcl
dec
jle
push
and
xchg
and
add
adc
pop
mov
pop
scas
mov
push
shl
mov
jo
add
add
out
rol
dec
push
cmovb
pop
push
stos
mov
xor
pop
push
outs
arpl
add
jmp
pusha
icebp
test
add
mov
jmp
lea
push
sbb
add
push
and
add
add
mov
add
inc
stos
adc
in
inc
jle
(bad)
mov
push
add
add
xchg
jecxz
push
out
ret
rcr
imul
aas
or
add
mov
mov
mov
mov
dec
jnp
cmp
cmps
or
ds
enter
ja
add
sub
adc
add
outs
mov
add
ret
(bad)
aam
add
sub
sbb
fidiv
add
mov
cmp
add
add
clc
pop
adc
call
dec
popf
mov
jge
add
in
push
icebp
add
idiv
cli
cli
push
add
add
and
cmovne
les
cmp
add
jb
bound
aaa
add
add
pop
aad
add
dec
xchg
pop
lods
add
or
(bad)
mov
add
sub
mov
push
pop
mov
add
inc
add
sub
add
test
inc
ret
jmp
mov
dec
out
add
mov
mov
sub
sub
push
mov
mov
outs
bound
and
add
add
fadd
add
test
add
add
xchg
add
push
mov
mov
xlat
add
inc
sti
inc
adc
out
pop
mov
and
aad
(bad)
mov
jo
add
add
add
les
mov
pop
jmp
mov
or
mov
sub
add
sbb
mov
mov
mov
lea
mov
add
mov
out
ret
out
fs
xchg
rol
cli
mov
ret
mov
jmp
and
mov
push
mov
ret
test
dec
add
(bad)
xchg
xchg
adc
pop
mov
ret
add
adc
(bad)
retf
push
cmp
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
call
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
add
pop
ret
mov
call
mov
jmp
mov
mov
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
cmp
test
jb
cmp
cmp
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
add
not
ror
jbe
shl
cmp
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
inc
mov
jle
xchg
not
jmp
push
mov
pop
mov
push
mov
mov
mov
pop
push
pop
mov
jmp
shl
jne
sub
ror
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
pop
mov
mov
dec
add
repz
lock
rol
loop
inc
jno
dec
mov
add
add
or
and
adc
aaa
add
add
add
pusha
xchg
add
sbb
sub
mov
inc
inc
and
mov
call
jge
xor
sub
and
jge
cmp
mov
js
and
fstp
jmp
mov
in
dec
xchg
gs
add
mov
inc
lahf
pmuludq
add
mov
jp
and
sub
mov
popa
popf
add
add
sub
add
and
jle
pushf
inc
xchg
push
dec
cmp
dec
aam
mov
inc
in
dec
sub
add
(bad)
icebp
add
hlt
jmp
int
and
cwde
jne
pop
das
jmp
test
in
ins
jmp
cmp
int3
sub
mov
je
mov
mov
mov
sub
mov
and
test
add
(bad)
ins
enter
and
dec
movs
fwait
pop
jge
out
aam
xchg
mov
add
add
mov
pop
scas
(bad)
sub
rol
mov
cmp
cmove
mov
or
add
cwde
jle
sbb
mov
and
cmp
js
lea
jmp
enter
call
jne
out
int3
and
dec
dec
jnp
add
mov
cmp
cmovne
fimul
add
mov
add
xor
inc
add
rol
inc
dec
mov
and
jmp
jl
and
pop
cmp
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
add
jmp
push
mov
push
mov
mov
push
ret
add
or
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
jno
not
cmp
jmp
call
dec
xchg
test
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
mov
mov
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
fist
mov
mov
mov
add
add
xor
add
int
push
and
mov
call
lea
mov
or
out
inc
sti
(bad)
jns
inc
pop
pop
pop
ss
pop
add
add
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
dec
rol
jl
shl
jmp
push
mov
mov
mov
push
pop
mov
push
mov
jmp
shl
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
shl
jl
inc
and
jmp
call
mov
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
out
into
fnstcw
inc
and
mov
sub
mov
sub
mov
mov
and
enter
xor
jmp
add
dec
add
dec
mov
dec
(bad)
xchg
dec
inc
jp
mov
and
sub
mov
je
loope
mov
std
mov
sub
je
ss
inc
mov
lock
mov
add
mov
sub
mov
call
or
fbld
std
add
sub
jbe
xchg
je
ja
cmp
mov
fsubr
mov
test
mov
adc
add
lahf
stos
outs
sub
mov
mov
sti
dec
cli
xor
fisttp
iret
cmp
inc
and
cmp
add
cmp
and
mov
jl
int
jo
add
fisttp
rol
(bad)
push
jns
arpl
stos
sub
mov
and
jmp
fadd
gs
mov
add
and
xor
inc
and
jmp
mov
dec
add
lea
add
add
(bad)
dec
fisttp
add
inc
add
rol
and
fild
out
lock
dec
jmp
lea
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
or
jb
shl
jmp
push
mov
mov
push
mov
mov
mov
push
mov
mov
mov
mov
mov
pop
mov
mov
ret
xchg
xor
shl
dec
dec
jmp
call
dec
add
test
dec
jl
add
not
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
xor
test
je
and
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
ja
jge
adc
jbe
mov
sbb
push
and
add
xchg
mov
and
mov
fld
cmc
or
adc
and
jecxz
and
mov
call
dec
inc
cmc
test
mov
mov
adc
aad
loope
call
(bad)
fcomi
push
lods
ret
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
cmp
jle
or
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sar
xor
or
jmp
push
mov
mov
push
pop
mov
push
pop
mov
pop
mov
push
mov
jmp
or
mov
xchg
shr
js
shl
jmp
call
inc
shl
jae
mov
add
xchg
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
cmp
shr
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ins
inc
adc
cli
sbb
push
inc
mov
and
in
add
cmp
and
add
add
shl
add
inc
cmps
test
add
push
(bad)
ins
sbb
add
test
push
add
mov
sub
mov
mov
cvtps2pi
add
add
cmc
add
xor
add
push
mov
je
jmp
(bad)
push
out
sub
gs
and
add
jge
sub
cmc
add
test
add
mov
xchg
fisubr
push
add
add
test
or
sbb
cmps
enter
in
sub
div
xchg
add
add
cmp
or
jmp
mov
jmp
stos
scas
and
push
add
bound
add
push
or
test
add
jle
mov
xchg
adc
add
push
and
cs
mov
and
add
sub
(bad)
ret
mov
jns
add
xlat
movs
in
add
and
add
jns
faddp
or
and
add
jmp
mov
xchg
not
stos
jnp
pop
jp
add
or
add
imul
xor
add
mov
and
add
add
mov
add
jmp
mov
xor
add
xchg
xor
ins
mov
jle
jb
cvtps2pi
add
add
add
cmc
add
mov
add
int3
ret
add
push
add
bound
sub
mov
ret
mov
jmp
add
xchg
mov
and
add
mov
pop
mov
inc
or
cvttps2pi
push
inc
(bad)
aam
add
mov
dec
jp
imul
dec
add
repnz
jle
add
add
add
cmc
mov
xor
jns
and
scas
add
add
test
aam
mov
lods
test
xor
dec
push
sub
mov
call
jge
xchg
add
jb
mov
lds
ror
(bad)
and
add
add
test
jmp
dec
push
mov
and
out
and
cmp
mov
cmp
loopne
add
add
add
or
jp
test
add
add
mov
jmp
ins
test
in
add
sub
mov
and
jb
in
or
gs
push
add
enter
add
add
pusha
test
repnz
je
jmp
mov
mov
mov
mov
add
add
add
add
sub
pusha
test
int3
add
add
test
push
add
mov
mov
adc
mov
ss
test
arpl
add
cmc
pop
add
or
test
push
add
jecxz
mov
les
add
jo
mov
mov
(bad)
in
repnz
sub
mov
and
add
add
add
add
mov
xor
push
add
mov
and
add
add
shl
add
add
add
add
jns
test
add
jb
arpl
add
mov
or
lock
add
adc
test
lds
sub
scas
or
in
jmp
cmc
test
push
(bad)
pushf
mov
inc
and
add
add
lods
test
dec
push
add
aaa
(bad)
enter
inc
add
repnz
test
add
jle
adc
xor
or
cli
das
fisubr
test
es
ret
je
push
out
add
in
mov
add
add
test
push
add
push
add
cs
xlat
and
call
push
dec
mov
and
push
out
sub
pushf
add
add
add
repnz
mov
rol
and
cmc
mov
je
jmp
mov
add
mov
paddusb
add
add
add
es
shl
out
add
mov
popf
test
mov
test
lds
mov
sub
sub
addr16
fmul
aas
es
add
add
and
add
out
jnp
mov
mov
jecxz
and
add
fadd
add
sub
mov
add
pop
and
push
jmp
add
add
clc
push
loop
stos
test
in
mov
add
xchg
xchg
stc
add
xor
lock
cmps
test
add
add
(bad)
jae
add
jmp
lods
sub
add
xchg
jmp
gs
fwait
nop
std
push
cmp
push
add
add
and
add
mov
inc
sub
pop
and
add
cmp
mov
xor
add
or
enter
or
psrlq
out
add
mov
sub
mov
cli
(bad)
and
add
pop
add
or
shl
aad
add
scas
inc
push
add
add
out
in
add
add
sub
mov
ret
add
mov
add
mov
cmp
inc
and
push
add
jmp
mov
jae
out
and
mov
and
std
(bad)
push
add
dec
in
add
cmc
ds
xor
mov
dec
inc
pop
pop
int
pop
mov
dec
add
add
add
mov
and
add
add
mov
shrd
add
mov
test
add
jb
cld
push
call
push
cli
test
mov
or
inc
add
pop
test
add
jmp
sub
test
push
push
add
add
add
test
(bad)
in
repnz
mov
and
jbe
jecxz
push
add
mov
jle
jle
cmp
rcr
add
add
sbb
and
add
add
jl
and
psraw
add
cs
xlat
and
add
es
fld
je
push
mov
jbe
xor
jmp
xchg
pop
je
(bad)
mov
test
xor
add
sub
mov
es
in
push
imul
add
test
add
cmp
and
lods
shl
cs
ins
add
aas
mov
push
jns
aam
mov
mov
adc
repnz
jle
add
add
cwde
xor
outs
rsm
jge
add
jmp
mov
jp
push
jae
gs
and
jecxz
dec
add
add
add
jb
es
add
add
cmp
cs
test
add
add
add
push
add
push
mov
xchg
data16
xchg
and
push
add
addr16
mov
xor
xchg
add
clc
add
mov
mov
ss
mov
jmp
add
mov
mov
(bad)
push
push
shl
and
add
in
mov
cmps
add
jmp
sbb
or
pushw
sub
test
xlat
and
add
jmp
add
mov
ins
mov
cmp
in
repnz
inc
ror
gs
mov
retf
pop
add
jmp
add
add
arpl
sbb
and
mov
jmp
retf
aad
jle
inc
add
inc
add
fcmovnb
ret
add
add
test
add
out
xor
add
mov
mov
mov
test
jge
arpl
es
add
or
mov
stos
lock
add
jmp
sahf
push
(bad)
sahf
mov
push
mov
inc
add
in
mov
jmp
sub
into
jecxz
dec
dec
mov
add
mov
mov
add
test
add
push
mov
mov
inc
add
add
add
inc
shr
or
ins
mov
pop
cmp
or
add
inc
add
push
jmp
add
pop
js
sbb
add
add
ret
xlat
ror
add
retf
add
je
mov
cs
add
inc
lea
mov
mov
add
add
lea
mov
(bad)
adc
pop
out
add
sub
std
call
mov
jb
add
xchg
shl
cmp
add
mov
cs
push
xor
jns
lahf
jl
outs
add
mov
jg
inc
ror
add
or
or
inc
add
cmps
push
ja
add
add
sub
add
sub
arpl
in
js
(bad)
xor
jle
xchg
cmp
mov
mov
inc
add
add
or
aas
sahf
dec
int
jb
rol
xor
add
jmp
sub
xor
and
mov
or
cld
add
jmp
add
adc
or
add
mov
mov
add
push
and
and
in
or
add
movs
adc
test
add
add
xor
add
add
xchg
jmp
sti
jmp
test
or
es
inc
add
leave
mov
inc
add
in
mov
enter
jle
test
add
jmp
mov
or
sbb
fadd
call
mov
lds
jmp
(bad)
cmps
and
add
mov
jnp
jb
in
mov
mov
jmp
add
push
inc
scas
lahf
iret
mov
push
mov
stos
or
test
add
add
mov
cmp
and
mov
add
push
add
sub
push
jmp
add
dec
ficom
mov
and
pop
in
mov
sub
sar
inc
cli
push
xchg
add
in
or
or
sbb
add
test
das
aam
mov
cmovl
and
in
(bad)
cmp
push
jmp
push
mov
push
push
push
and
sub
jmp
call
add
inc
inc
add
jo
dec
inc
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
ror
jb
dec
inc
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
dec
cmp
add
je
shl
mov
dec
or
jmp
mov
mov
mov
mov
push
pop
push
mov
mov
push
jmp
mov
and
rol
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
mov
jl
sar
test
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
sub
mov
aam
and
jg
pop
movs
(bad)
add
test
lahf
mov
les
pminsw
rol
mov
movs
fsubr
mov
je
dec
xor
add
adc
sti
mov
inc
and
movq
add
gs
add
inc
push
inc
xchg
sub
mov
call
pop
jle
mov
hlt
mov
fdivr
mov
arpl
add
or
add
push
out
inc
cmp
sti
mov
inc
fwait
and
stc
and
xor
pop
mov
(bad)
icebp
enter
inc
and
add
jmp
mov
sub
in
pop
and
fiadd
mov
das
add
call
sbb
xchg
fwait
rol
adc
xchg
mov
pop
hlt
mov
inc
lods
adc
test
add
add
xor
jle
and
repz
jb
lods
mov
xchg
add
add
add
sbb
mov
jmp
push
cmps
loopne
push
add
neg
ret
adc
or
inc
add
mov
mov
mov
add
add
push
retf
and
mov
or
inc
add
enter
dec
and
mov
popf
push
inc
dec
mov
add
add
mov
push
xchg
or
rol
add
mov
adc
cld
and
xchg
mov
cmc
jl
pop
mov
les
mov
mov
call
fiadd
ss
ins
add
add
call
sti
jmp
xchg
and
and
in
add
mov
sub
sub
mov
cli
add
jl
add
sub
nop
mov
xchg
jmp
js
pop
int3
and
jns
or
pop
add
gs
lods
pop
pop
jmp
push
cmp
in
push
gs
mov
xor
inc
and
call
iret
mov
push
mov
push
push
push
and
sub
jmp
call
rol
not
dec
jge
xchg
mov
cmp
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
or
inc
not
xor
jmp
mov
push
mov
pop
push
mov
pop
push
mov
pop
mov
push
mov
push
ret
cmp
add
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
shl
cmp
jae
mov
cmp
not
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
pop
and
add
add
jmp
mov
or
dec
inc
and
mov
fisttp
jmp
mov
sub
mov
jecxz
je
push
in
add
add
cli
sub
leave
push
inc
and
je
jmp
mov
mov
mov
enter
add
add
jmp
push
add
inc
add
sub
(bad)
jmp
xchg
add
jne
imul
mov
push
in
nop
leave
jle
xor
(bad)
cmovb
mov
fild
add
lea
mov
mov
mov
inc
add
dec
xor
dec
jecxz
or
add
add
movs
add
jns
scas
mov
mov
(bad)
or
mov
pop
dec
pop
xor
adc
mov
inc
add
inc
daa
xor
push
push
sbb
cmp
inc
add
add
stc
xor
stos
fmul
adc
je
ja
push
ds
dec
and
call
mov
xor
add
xor
add
cs
and
mov
push
fwait
mov
sub
add
fild
add
sub
mov
(bad)
pop
xor
mov
or
add
pop
pushf
pop
dec
mov
(bad)
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
jmp
mov
push
pop
mov
mov
push
mov
mov
mov
push
ret
shr
cmp
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
not
test
ror
jne
xchg
mov
inc
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
mov
shr
jmp
call
rol
rol
dec
jl
inc
ror
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
or
xlat
add
add
and
add
mov
aam
add
add
dec
imul
add
jbe
and
add
add
mov
push
addr16
je
inc
or
test
inc
and
xchg
add
mov
mov
jecxz
and
mov
pop
mov
(bad)
sub
cmp
dec
inc
call
mov
and
mov
out
pop
dec
xchg
add
nop
and
retf
jmp
xor
shl
in
jae
inc
xchg
cmp
push
dec
xor
push
jmp
mov
and
sub
cld
jp
cli
xadd
sbb
xor
ror
call
fwait
psrad
add
jmp
aam
aam
sub
mov
pop
aaa
mov
ds
mov
arpl
sbb
mov
mov
sbb
add
add
and
inc
push
in
jmp
mov
je
inc
daa
lock
add
or
sub
adc
and
je
cmps
xchg
add
mov
sub
rol
test
add
add
mov
sub
(bad)
inc
aam
mov
fwait
pop
inc
add
retf
aas
in
sbb
mov
adc
jns
add
sbb
xchg
and
sub
(bad)
inc
aam
(bad)
jns
jl
jmp
and
and
dec
sub
mov
and
cmovb
in
dec
fwait
push
lea
add
fidivr
inc
and
cmps
jg
add
mov
mov
movzx
xlat
pop
or
mov
mov
inc
je
sti
jge
adc
cmove
jmp
(bad)
or
jmp
test
outs
xlat
mov
lods
pop
lock
add
inc
and
mov
xchg
mov
add
cmp
hlt
pop
pop
cs
std
inc
or
jne
mov
and
mov
mov
jbe
xchg
xor
out
inc
and
and
push
(bad)
(bad)
dec
pop
add
add
push
mov
push
push
push
and
jmp
push
pop
mov
push
mov
push
pop
push
mov
mov
ret
inc
xor
mov
jmp
call
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sar
ja
inc
dec
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
shr
jle
cmp
xor
inc
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
dec
inc
jo
push
add
in
add
add
pop
cmps
rcr
xchg
or
mov
adc
jg
add
ins
mov
lea
pop
pop
in
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
test
shl
mov
jg
xor
dec
and
jmp
mov
mov
mov
push
pop
mov
mov
pop
push
pop
mov
jmp
inc
add
shr
jl
test
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xchg
cmp
js
mov
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
mov
sar
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
shl
jb
inc
sar
test
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
mov
jg
or
repz
add
out
shl
add
mov
pop
mov
mov
sar
mov
mov
mov
cdq
inc
and
shr
and
mov
jbe
cmp
mov
test
cmc
dec
arpl
je
jmp
jb
and
sub
sub
ins
push
sti
(bad)
add
add
add
out
jl
push
cmp
mov
inc
and
je
cmp
add
jmp
mov
into
cmp
repnz
mov
add
ror
ror
push
add
dec
mov
lea
mov
and
inc
and
out
stos
test
push
sar
jns
das
arpl
(bad)
mov
mov
ja
mov
retf
add
and
inc
and
add
mov
and
mov
and
dec
and
cmp
arpl
(bad)
mov
lea
rcr
in
stos
mov
mov
call
inc
dec
cmc
inc
js
jae
(bad)
dec
add
mov
ins
clc
push
dec
add
add
add
mov
add
int
stos
push
and
pop
and
and
call
(bad)
mov
jp
in
add
add
mov
arpl
stc
add
sahf
sub
cmps
xchg
sbb
ret
pusha
add
hlt
mov
es
test
std
and
or
jo
pop
fimul
inc
and
call
mov
mov
test
add
out
push
mov
mov
and
sbb
in
inc
aaa
and
push
cmp
pop
scas
cmc
call
dec
lea
pop
or
addr16
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
add
shl
inc
inc
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
test
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
xor
inc
jl
test
cmp
xor
shr
jmp
mov
push
mov
pop
mov
push
mov
mov
push
mov
ret
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
sub
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
pop
inc
add
add
add
xchg
test
mov
add
xor
mov
sub
add
hlt
pop
iret
cdq
mov
pop
int3
fdivr
(bad)
lods
and
push
add
push
or
add
and
rol
add
in
xchg
mov
stc
mov
sbb
cwde
add
(bad)
pop
mov
nop
jmp
mov
mov
xor
and
sub
out
add
xchg
stos
jo
cmp
add
sub
cmp
comiss
xor
add
add
add
or
add
ins
cmp
add
add
jnp
in
add
lea
add
mov
mov
push
fst
add
add
jbe
mov
jmp
mov
mov
inc
mov
jb
add
xor
add
lahf
push
add
push
mov
(bad)
lods
mov
popf
(bad)
and
in
add
test
add
sub
fild
je
cdq
arpl
add
push
mov
sub
mov
iret
and
sub
fidiv
mov
frstpm(287
add
mov
shr
sub
shl
stos
add
jg
leave
or
cmp
daa
push
cwde
mov
adc
and
mov
cwde
xchg
fadd
jg
or
add
add
test
add
add
jns
mov
test
add
add
add
or
and
xor
add
mov
lods
in
sub
add
pop
add
add
cmps
test
in
push
add
div
shl
cwde
add
test
scas
add
and
add
sub
xchg
xchg
ror
sub
jmp
add
add
sti
and
stos
add
pop
jle
mov
loopne
mov
scas
mov
pop
add
jmp
add
sub
mov
fsubr
add
(bad)
iret
add
inc
add
jo
mov
add
sub
add
rcr
aaa
sub
and
add
shr
fild
xor
and
add
nop
sub
add
add
je
jmp
mov
pop
add
add
mov
mov
(bad)
and
and
push
fiadd
sub
mov
and
shr
je
jmp
mov
and
cmp
jecxz
imul
jae
test
lahf
das
adc
add
mov
sbb
enter
out
test
add
jecxz
inc
jp
stos
jmp
mov
add
mov
daa
(bad)
and
add
mov
popf
add
inc
inc
and
add
xlat
add
out
cwde
cmp
push
mov
test
(bad)
and
add
push
inc
rol
add
add
sub
and
and
cmp
jecxz
ss
push
mov
push
push
mov
mov
mov
add
and
add
jmp
mov
add
loopne
leave
mov
test
nop
add
test
aaa
add
jmp
fiadd
sub
mov
add
add
mov
mov
into
or
mov
sub
push
psrlw
xchg
add
sub
mov
mov
mov
and
add
jg
(bad)
add
add
add
mov
sub
mov
je
jmp
outs
cmp
inc
add
jmp
inc
mov
jo
and
cmp
add
add
push
nop
mov
test
test
mov
sub
test
add
jmp
outs
test
out
push
mov
mov
movs
(bad)
push
add
add
add
and
mov
scas
jmp
add
daa
mov
add
add
push
and
sub
clc
pop
sbb
hlt
pop
add
(bad)
and
nop
add
mov
test
or
push
add
mov
mov
sub
add
mov
push
mov
or
and
add
and
add
sub
ins
inc
cdq
cmp
test
add
adc
add
add
stos
scas
sub
sbb
jg
jmp
mov
sub
mov
test
mov
add
add
add
mov
sub
(bad)
mov
xor
add
mov
add
es
push
scas
add
add
add
add
mov
xchg
outs
scas
cmp
test
add
add
mov
ficom
lods
and
xor
sub
pop
inc
or
je
jmp
mov
sub
sbb
sub
or
add
or
add
pop
inc
and
je
mov
push
cwde
mov
xchg
fwait
add
mov
daa
(bad)
and
xchg
pusha
add
add
mov
pop
in
adc
mov
stos
jo
fs
add
adc
xor
sub
mov
nop
inc
add
shl
dec
add
(bad)
in
aas
and
stos
xchg
ss
mov
push
push
xchg
mov
in
pop
sbb
inc
jg
jmp
and
sub
adc
and
lahf
and
xor
add
shr
push
add
mov
sub
mov
fnstenv
add
sub
add
shl
pop
stos
add
and
mov
cmp
and
xor
add
mov
shl
sub
mov
or
in
add
add
add
add
push
mov
inc
xchg
xor
adc
mov
add
sbb
enter
mov
punpckhbw
add
jg
stos
add
mov
mov
sub
mov
jge
test
add
mov
mov
shr
mov
mov
test
cwde
add
test
add
xor
and
fadd
je
jmp
cmps
test
dec
in
add
in
jp
jg
test
add
and
add
rcr
xchg
mov
mov
sahf
dec
mov
jge
add
repz
mov
sub
add
cmp
mov
test
add
jmp
lea
and
mov
add
inc
add
and
dec
in
push
(bad)
retf
mov
add
mov
xor
add
in
or
push
push
add
xchg
add
dec
cdq
inc
mov
pop
pop
and
cmps
imul
push
repnz
mov
mov
mov
add
and
add
adc
add
add
pop
mov
xlat
out
test
push
jg
cdq
test
cmp
and
aad
sbb
jmp
xchg
test
cmp
dec
adc
add
mov
mov
mov
cli
mov
cmp
add
add
and
add
xchg
mov
add
ins
sbb
int
or
je
pop
not
shufps
outs
(bad)
adc
mul
call
sbb
sbb
push
add
ror
xor
mov
and
sub
cmps
or
in
add
mov
imul
in
stos
lods
and
add
mov
(bad)
lods
and
in
add
repnz
mov
sti
add
push
das
int
mov
add
and
cmp
nop
mov
pop
adc
lods
and
in
mov
add
and
add
shl
test
xchg
mov
call
nop
xchg
pop
mov
(bad)
push
lods
cmp
add
add
add
mov
push
xor
add
(bad)
push
or
in
push
jns
(bad)
mov
add
mov
cmp
cmp
jmp
mov
add
inc
out
add
mov
test
in
add
xor
(bad)
mov
add
call
mov
mov
mov
and
add
rol
sub
test
add
dec
xchg
add
mov
cmp
jmp
in
xchg
xchg
xor
mov
sar
in
xchg
test
jno
cmp
popf
mov
jmp
mov
dec
lods
push
and
in
jge
gs
stos
enter
sbb
xor
add
sub
adc
sbb
mov
shl
dec
in
mov
xchg
push
pop
cld
jmp
and
add
add
xchg
and
addr16
add
or
xchg
push
shr
mov
and
add
jmp
sub
mov
add
add
mov
mov
pop
dec
stos
jo
mov
add
add
nop
mov
sbb
pop
std
mov
push
push
fs
inc
jmp
add
in
dec
rol
add
push
add
pop
cld
push
jecxz
cwde
inc
jle
dec
fsub
sub
(bad)
and
add
xchg
(bad)
in
fsubr
mov
imul
cmp
add
jecxz
mov
and
add
add
and
fsubp
and
add
add
xor
mov
add
sub
sbb
mov
and
mov
push
aaa
in
mov
mov
adc
and
call
mov
mov
xor
or
add
push
cld
call
dec
in
push
jg
add
test
jno
add
cmps
cwde
mov
mov
mov
push
cld
(bad)
out
shl
add
sub
test
and
mov
ins
jmp
ins
test
jecxz
sti
cmps
ds
sub
add
sar
hlt
(bad)
dec
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
ror
jmp
mov
mov
push
mov
pop
mov
push
mov
mov
jmp
cmp
cmp
jge
or
shl
not
jmp
call
inc
cmp
shl
sub
je
cmp
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xchg
or
or
jne
inc
dec
not
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sub
ror
or
and
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
jecxz
fidivr
xchg
mov
sub
lods
sbb
jb
mov
pop
add
(bad)
int3
and
add
jge
add
add
test
jae
retf
add
std
add
in
and
repz
pop
mov
mov
mov
ins
jne
or
xor
jno
jne
add
ror
cli
(bad)
mov
mov
add
(bad)
int3
mov
add
or
mov
std
add
push
and
repz
test
mov
and
add
inc
pop
add
test
in
add
jecxz
arpl
dec
and
jg
bound
dec
mov
sub
mov
inc
test
push
xor
add
rol
push
mov
sub
add
add
mov
sub
mov
jg
jmp
mov
push
jl
push
test
das
mov
jg
loope
jae
add
cmps
lahf
and
inc
xlat
add
(bad)
popf
aam
add
add
dec
mov
and
stos
cli
mov
mov
jge
ins
pop
dec
add
jge
add
mov
jl
xlat
loope
je
(bad)
(bad)
jg
pop
aad
sbb
iret
and
sub
mov
mov
add
jmp
mov
jl
add
call
jne
repz
mov
jl
and
test
sti
pop
and
inc
test
add
jmp
inc
inc
fnstcw
sub
dec
mov
psubsw
sbb
add
ret
dec
jl
test
ins
xor
jae
or
cld
add
call
push
into
je
pop
and
mov
sbb
add
and
inc
vandnps
sar
jno
test
out
add
fld
add
faddp
sub
std
mov
scas
cmp
(bad)
sbb
xor
mov
add
cli
inc
and
je
jmp
or
sub
mov
xor
jl
add
add
mov
sub
mov
cmps
xor
test
rol
xor
sahf
push
into
stc
mov
sbb
add
add
mov
sub
(bad)
int3
mov
add
pop
dec
test
repnz
rcr
(bad)
and
repnz
push
shl
jmpw
add
mov
aaa
pop
stos
mov
(bad)
sbb
outs
sbb
inc
and
sbb
push
adc
je
dec
sbb
test
repz
add
mov
scas
xor
or
and
je
mov
mov
sbb
js
dec
mov
je
adc
add
js
and
aaa
imul
mov
add
mov
add
dec
jmp
mov
les
int3
add
repz
and
mov
add
mov
jmp
mov
nop
add
add
mov
data16
add
mov
sti
push
and
mov
or
stos
adc
dec
inc
xor
repz
pop
mov
popa
fwait
add
add
pop
dec
xchg
in
inc
jns
cld
shl
pop
sahf
and
add
add
aas
and
add
mov
add
sub
call
retf
jmp
cmp
fisubr
jb
and
data16
add
add
setne
and
mov
and
add
mov
and
add
sub
add
add
push
nop
jle
shl
fldcw
push
repnz
add
dec
add
test
mov
cld
inc
int3
pop
mov
add
adc
add
std
mov
pop
ja
mov
add
jmp
xor
inc
daa
rol
or
iret
add
add
add
icebp
add
add
je
add
(bad)
mul
retf
std
sbb
add
add
push
sbb
jae
xor
ret
mov
jg
add
jge
and
(bad)
call
cmps
enter
aad
add
jl
and
mov
(bad)
outs
sub
mov
nop
push
mov
push
push
push
and
sub
jmp
call
shl
shr
mov
jne
sub
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
ror
js
or
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
sar
jmp
mov
mov
push
mov
pop
mov
mov
pop
mov
mov
push
pop
push
jmp
sar
shl
je
shl
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
rol
jns
mov
shr
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
retf
mov
and
sbb
add
jnp
xor
nop
ins
fcmove
pop
ins
ja
push
out
push
js
dec
mov
das
test
add
fisub
mov
add
mov
dec
jmp
mov
mov
in
shl
add
out
sub
add
cld
test
arpl
add
mov
and
add
jg
test
loopne
add
mov
sub
mov
jg
mov
out
ret
add
test
add
arpl
test
and
dec
add
jg
add
add
inc
out
test
xchg
add
mov
add
(bad)
jns
add
add
mov
add
add
sub
dec
inc
and
jg
jmp
mov
rcr
add
push
jne
mov
push
inc
ds
(bad)
jb
bound
dec
add
add
test
add
mov
loope
push
jne
add
arpl
js
outs
test
add
add
pop
sbb
mov
imul
iret
bound
jmp
mov
push
out
add
mov
sbb
inc
and
jmp
mov
out
ret
test
add
out
xchg
add
sub
mov
and
jo
jb
add
lea
dec
inc
pushf
add
cmps
sub
xor
loop
imul
ret
ins
jmp
mov
xchg
add
pusha
loop
adc
popa
inc
gs
por
add
add
inc
test
or
rol
mov
int3
jmp
clc
add
out
jmp
out
and
add
sub
jmp
add
add
add
jg
lds
xchg
int
mov
aas
and
jg
jns
add
add
add
inc
xchg
push
cmp
push
daa
and
dec
or
mov
and
call
jl
lahf
mov
ins
test
add
add
or
and
add
add
inc
mov
jmp
mov
add
ja
add
mov
sub
ins
inc
and
bswap
cmps
add
test
add
add
bound
sub
repnz
and
js
jmp
gs
and
add
imul
and
je
jmp
hlt
ins
and
add
add
xor
mov
(bad)
mov
cmps
and
xchg
mov
mov
retf
inc
or
add
sahf
outs
add
arpl
in
adc
pop
lds
ret
and
je
mov
or
cmps
mov
and
pop
aaa
or
jne
ret
add
repz
mov
sub
les
sub
lds
fs
ret
or
add
add
sbb
(bad)
add
ret
jmp
mov
aad
add
add
push
pop
pop
das
mov
and
out
or
inc
add
inc
test
add
or
repnz
popf
adc
add
imul
cli
xchg
add
arpl
sahf
scas
push
inc
mov
sbb
xchg
and
add
add
mov
cmps
add
sub
xor
mov
push
add
add
ins
add
aas
mov
adc
test
in
jmp
retf
xchg
add
sub
add
mov
add
add
sub
iret
inc
cli
imul
add
add
inc
fs
popa
sbb
add
mov
dec
sbb
mov
sbb
loope
shl
and
add
aaa
pop
repz
rcl
lea
add
add
add
bound
mov
or
nop
in
pop
(bad)
rol
in
and
ja
fsubrp
jne
jl
add
jmp
mov
clc
lds
mov
test
cmovne
mov
xchg
add
or
test
(bad)
(bad)
inc
test
add
ins
push
test
add
mov
mov
mov
xrelease
mov
add
xor
add
loop
in
push
inc
ss
(bad)
(bad)
fcmovu
mov
xor
xchg
shr
jg
popa
add
loopne
movs
xchg
add
add
retf
daa
jecxz
repz
add
retf
ja
jmp
fild
lahf
mov
mov
and
add
jg
ret
and
test
cwde
add
add
pop
mov
cmp
nop
jmp
jnp
jns
fld
add
(bad)
(bad)
(bad)
(bad)
jmp
movs
(bad)
add
test
call
fisttp
cmps
mov
xor
add
in
add
cdq
into
lahf
mov
call
pushf
dec
add
add
mov
mov
add
loopne
test
sbb
bound
add
mov
xchg
or
xchg
push
pusha
jp
out
add
in
pop
xchg
jmp
mov
test
add
gs
pop
pop
pop
pop
xor
add
(bad)
pop
inc
test
add
lods
add
cmps
add
mov
ins
push
and
inc
and
sub
es
jmp
sti
bound
sbb
pop
fst
aam
dec
add
add
sti
int3
jmp
(bad)
call
add
add
cs
jmp
xor
nop
outs
add
(bad)
out
ja
add
inc
or
aad
add
ins
or
mov
mov
jmp
data16
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
xchg
jbe
dec
cmp
xor
jmp
push
pop
mov
mov
mov
mov
pop
mov
mov
mov
mov
push
mov
push
mov
jmp
shr
rol
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
test
and
xchg
jmp
call
shl
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xchg
mov
jo
test
mov
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
dec
adc
add
inc
or
adc
and
mov
sbb
loop
adc
sbb
not
xor
mov
jmp
imul
dec
add
add
mov
(bad)
cmp
sbb
inc
mov
push
call
(bad)
mov
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
call
shr
shr
ror
jne
or
shl
jmp
push
mov
mov
push
pop
mov
mov
mov
mov
mov
push
mov
mov
mov
ret
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
dec
shl
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
mov
je
shl
sub
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fild
add
add
add
mov
sub
pop
and
cdq
add
mov
sbb
add
jmp
push
xchg
cmc
push
add
mov
jmp
rol
mov
mov
xchg
(bad)
into
add
jae
add
jge
mov
mov
and
jecxz
and
add
add
(bad)
xchg
add
icebp
jmp
xchg
test
cmps
add
jnp
ds
mov
pop
scas
fld
jg
or
add
add
test
add
add
mov
add
xchg
(bad)
and
add
jmp
jp
and
mov
xor
and
add
add
inc
jecxz
add
jmp
add
scas
add
and
pop
mov
add
test
imul
into
test
add
sub
mov
mov
lldt
mov
out
scas
add
cmps
fstp
push
js
fbld
add
cmps
sahf
or
jmp
mov
sub
xchg
test
add
jnp
inc
and
add
sub
add
mov
add
sub
mov
push
jl
stc
add
xor
add
sub
sub
mov
cmp
leave
(bad)
and
(bad)
and
jmp
mov
and
scas
add
sub
mov
and
je
call
mov
sub
mov
out
add
xchg
retf
shl
test
scas
fldcw
mov
jg
aas
(bad)
xor
push
aad
add
push
xchg
xor
pop
loop
pmuludq
add
retf
add
add
add
mov
je
call
mov
xor
add
and
inc
adc
inc
sub
add
psubsw
jnp
retf
and
add
mov
cwde
neg
push
mov
and
je
jmp
adc
add
mov
or
cmp
(bad)
setb
add
ror
add
mov
and
jge
mov
test
xor
or
sub
xchg
and
add
out
retf
add
ret
add
add
punpcklwd
add
jmp
add
(bad)
out
fsubp
inc
sub
add
mov
add
pop
test
add
in
ret
fmul
sub
add
add
add
adc
dec
in
pop
add
add
add
add
icebp
add
sub
lods
pop
mov
inc
rol
add
add
mov
add
out
jo
inc
retf
add
and
jmp
add
add
mov
sub
jecxz
sub
sbb
setb
add
shl
imul
ret
ficom
scas
xor
add
in
jge
mov
mov
dec
sub
test
sub
push
add
pushf
and
add
jnp
jno
out
adc
iret
sub
mov
mov
test
jg
lods
inc
mov
xchg
lea
stos
icebp
add
xor
and
pop
jecxz
(bad)
retf
cvtpi2ps
xchg
in
test
pop
add
sub
mov
sbb
test
cwde
add
jmp
loope
and
add
push
sub
xchg
sub
je
imul
ret
add
add
add
cli
inc
and
je
call
popa
push
sub
and
dec
out
mov
add
rol
jmp
add
(bad)
push
je
call
jae
add
and
add
aas
(bad)
dec
pop
fisub
adc
rol
xchg
dec
mov
test
pop
hlt
add
gs
add
or
stos
shr
js
pushf
mov
add
out
enter
add
pop
add
inc
shr
dec
mov
adc
and
add
jge
add
(bad)
jmp
sub
or
mov
punpcklbw
push
add
cmp
dec
sub
dec
inc
and
fld
add
popa
pop
test
jge
jmp
mov
shr
mov
or
sbb
add
pcmpeqb
inc
inc
iret
and
add
cdq
retf
repz
fdivp
fbld
xor
or
popf
lea
jbe
add
cmp
andnps
or
mov
adc
or
jl
add
mov
mov
pushf
ret
inc
jns
pushf
and
mov
jmp
mov
inc
test
add
add
test
mov
dec
test
mov
add
cmp
inc
add
add
push
and
sub
sbb
push
mov
add
jnp
cs
or
mov
ret
add
pop
out
fiadd
test
push
add
add
add
mov
pushf
add
or
loop
call
add
scas
dec
pop
pusha
push
rcr
add
mov
mov
jmp
mov
mov
xor
add
imul
les
mov
cmp
lods
add
add
jmp
add
or
shr
jecxz
bound
ds
pop
outs
push
mov
pop
test
push
or
push
add
pushf
and
mov
test
int3
fist
mov
mov
popa
cmp
inc
add
cmp
std
daa
add
scas
hlt
inc
jg
jmp
sub
push
test
out
add
jnp
inc
and
jmp
add
add
fdivr
test
mov
add
mov
lods
jmp
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xchg
shl
shl
jg
not
shl
jmp
mov
mov
push
pop
mov
mov
pop
push
mov
mov
push
mov
jmp
add
xor
jno
add
dec
jmp
call
shl
inc
add
xor
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
not
xchg
jae
shl
cmp
sub
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
mov
test
je
sub
ror
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
or
add
and
gs
jne
ja
xchg
xor
add
clc
enter
add
add
xchg
add
inc
das
and
adc
add
add
add
arpl
mov
repz
add
add
add
sub
add
test
cmp
jmp
mov
mov
pop
add
add
and
add
jmp
inc
jl
aam
add
sub
add
test
add
adc
mov
movs
push
cmp
mov
jg
jmp
mov
sub
comiss
jne
adc
jae
out
add
mov
and
inc
jne
pop
jl
jmp
add
jge
rcl
add
xchg
jne
sub
mov
jg
and
clc
verr
and
or
add
icebp
and
adc
add
sahf
addr16
mov
inc
cwde
add
pop
retf
aam
ja
sub
xchg
mov
(bad)
adc
cld
sbb
add
jne
sub
inc
test
add
add
and
jmp
mov
and
adc
cld
aaa
mov
test
add
inc
psllw
(bad)
or
jmp
add
and
xor
xchg
add
add
add
inc
mov
and
add
add
lods
jnp
ret
mov
add
jmp
outs
add
stos
(bad)
xchg
and
add
add
push
aaa
cmps
rol
test
stos
pop
add
into
and
add
jae
and
pushf
or
sub
and
push
test
(bad)
in
mov
add
jo
jmp
(bad)
sahf
test
add
add
or
or
add
xchg
and
add
add
add
and
add
jp
dec
adc
retf
add
add
add
mov
(bad)
(bad)
stos
jne
sahf
fistp
add
jmp
(bad)
test
add
add
sbb
inc
jl
mov
pminsw
sbb
dec
add
xchg
icebp
and
add
add
clc
sti
cld
loope
arpl
bswap
and
add
add
add
jae
and
pushf
or
mov
cld
test
arpl
scas
add
jmp
(bad)
repz
add
add
arpl
and
add
add
(bad)
and
add
add
adc
aaa
stc
sti
cld
push
add
jns
je
(bad)
adc
add
popa
sbb
add
or
inc
and
setle
sbb
add
add
and
add
sub
sahf
inc
and
je
jmp
mov
jne
mov
mov
popa
jne
ja
add
add
mov
sub
arpl
and
jge
jmp
mov
aam
add
aaa
daa
cmps
push
jns
bswap
and
add
jmp
inc
jl
fild
jmp
sbb
movs
test
add
add
jg
inc
jne
nop
dec
jl
jno
and
add
or
add
and
aaa
iret
das
sbb
inc
jns
jp
ret
add
push
call
and
add
pop
adc
repz
(bad)
mov
ja
mov
out
inc
xchg
popf
adc
push
xor
add
or
jne
shr
ficom
sahf
mov
pop
pcmpgtw
pushf
or
xchg
test
adc
cld
aaa
jns
pop
dec
mov
lods
add
retf
add
add
sub
stos
push
or
push
call
inc
pushf
add
retf
and
add
add
dec
jmp
mov
add
sbb
pop
add
add
add
sub
and
jp
push
pop
retf
jmp
out
xchg
(bad)
out
mov
xor
pop
inc
pushf
sub
add
test
retf
sub
mov
sbb
add
add
out
sub
mov
sbb
repz
add
mov
sub
mov
fwait
jg
jmp
and
and
add
add
sub
inc
mov
inc
or
add
mov
das
push
(bad)
sbb
mov
push
(bad)
and
ja
add
add
mov
aad
push
mov
(bad)
fiadd
cmp
jmp
(bad)
xchg
and
add
sbb
add
movs
test
add
test
add
mov
aad
sbb
jnp
inc
push
call
clc
add
add
ja
and
add
out
inc
scas
bound
add
mov
ss
add
mov
sub
mov
mov
sbb
pusha
sbb
stos
add
inc
add
cmp
(bad)
push
out
call
add
jmp
mov
xor
imul
stos
(bad)
jecxz
ds
pminsw
pushf
cmove
mov
xchg
mov
jmp
stos
int
cmp
jle
inc
add
xchg
jmp
(bad)
mov
jne
gs
jmp
call
and
retf
call
adc
inc
mov
out
mov
call
sub
scas
jb
(bad)
adc
and
add
cld
fwait
pop
and
stos
pop
inc
jne
ja
rcpps
mov
loopne
add
xchg
jne
ret
fadd
mov
jmp
mov
mov
jmp
sub
add
movs
pop
inc
iret
jmp
mov
mov
push
lds
mov
mov
jns
add
inc
mov
push
repz
xchg
mov
add
gs
cld
loope
xchg
add
xchg
mov
mov
pop
test
add
jne
xor
pop
and
dec
loop
mov
not
movnti
icebp
and
adc
add
add
add
mov
and
pop
inc
jne
and
pop
retf
sbb
mov
jmp
mov
and
cld
sbb
xor
xor
add
inc
mov
out
jmp
pushf
mov
inc
das
push
fadd
add
adc
cld
sbb
pop
add
push
add
inc
(bad)
icebp
push
fcom
add
jmp
pushf
jmp
mov
and
mov
add
add
add
ud1
mov
jmp
inc
mov
call
xor
dec
jmp
mov
add
adc
or
pop
test
jne
pop
mov
test
fadd
pushf
or
xchg
add
cld
repz
mov
sbb
mov
add
jmp
cmp
pop
jne
add
cld
add
(bad)
pop
test
mov
and
retf
mov
repz
add
or
add
inc
das
and
add
mov
es
add
test
add
add
test
pop
retf
test
or
add
push
fadd
add
aad
outs
out
jns
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
test
add
shl
jl
shr
shr
jmp
call
cmp
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
mov
cmp
sub
jmp
mov
mov
mov
push
mov
pop
push
mov
pop
mov
jmp
or
xchg
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
mov
dec
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
and
mov
in
das
add
mov
les
or
enter
imul
jbe
mov
addr16
add
xchg
inc
mov
jnp
not
and
mov
adc
inc
and
mov
jbe
jmp
mov
sub
dec
inc
and
je
jmp
mov
dec
mov
and
js
mov
loop
imul
inc
and
cmp
inc
and
je
(bad)
jmp
inc
pop
out
add
and
sbb
mov
ja
inc
and
test
into
mov
jae
pop
add
mov
dec
inc
and
repz
out
push
ja
and
(bad)
adc
mov
inc
and
sub
mov
lods
add
mov
add
cmp
shr
push
inc
and
lods
xchg
add
add
fld
add
mov
mov
sub
and
(bad)
int
add
es
imul
add
and
sbb
add
add
and
sub
mov
je
std
ja
test
cmp
mov
mov
add
pop
add
add
push
mov
scas
push
test
add
jmp
mov
xor
sub
loop
and
je
iret
das
mov
xchg
inc
sub
mov
shl
jmp
mov
and
aas
jnp
dec
lds
popa
add
add
add
or
(bad)
loop
jl
add
pop
dec
cmp
cmp
push
ror
add
add
adc
pop
jmp
push
(bad)
cld
(bad)
mov
mov
mov
and
dec
jmp
mov
xchg
mov
xchg
and
aaa
mov
push
and
ss
xor
mov
rol
add
xor
and
loop
inc
inc
and
and
lods
sbb
push
cmps
dec
sbb
call
add
add
shl
inc
add
add
(bad)
popf
lahf
fcos
mov
imul
add
mov
jmp
