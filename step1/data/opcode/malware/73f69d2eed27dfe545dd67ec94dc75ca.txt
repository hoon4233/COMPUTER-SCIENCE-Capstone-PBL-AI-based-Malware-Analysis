push
outs
(bad)
call
in
sub
mov
mov
or
loopne
lock
dec
cmp
inc
cld
mov
mov
pop
ret
int3
add
idiv
pop
fcomp
push
push
mov
pushf
in
outs
sti
call
push
push
push
mov
xor
push
lea
lock
in
aaa
mov
mov
sbb
or
or
cmps
cmp
fiadd
test
je
sub
or
mov
test
and
adc
lock
dec
in
push
in
test
fsubr
in
(bad)
outs
imul
pop
dec
in
mov
jmp
jmp
mov
jmp
adc
add
ret
mov
neg
or
dec
jmp
mov
pop
ror
inc
rcl
xor
adc
shl
fst
(bad)
loopne
adc
sub
mov
(bad)
fdiv
mov
ja
or
add
in
aas
div
push
jmp
push
addr16
sbb
stc
call
push
sub
mov
adc
mov
dec
ins
adc
xor
mov
data16
leave
add
ins
add
cs
or
adc
lods
loopne
(bad)
int
add
push
(bad)
ret
fcmovnb
jle
push
mov
add
cmp
in
fmul
(bad)
in
(bad)
rcl
mov
fmul
and
jnp
jg
add
push
fcomp
push
sbb
sbb
test
int
jnp
jbe
cmp
sar
push
xchg
rcr
fadd
mov
repz
cld
mov
stc
jnp
xchg
jnp
ret
pop
call
or
lods
sbb
mov
imul
das
int
adc
jecxz
imul
ret
adc
repz
or
xor
fimul
shr
xor
in
push
mov
in
enter
sub
mov
in
cmp
loop
inc
push
sbb
and
and
int
jmp
out
adc
xchg
sbb
int3
inc
inc
inc
or
jmp
add
add
pop
xchg
adc
cmp
ja
pop
ror
call
jno
sub
pop
ins
mov
mov
pop
sbb
movs
add
idiv
xchg
dec
mov
and
in
push
mov
lods
add
jno
(bad)
fsubr
push
fadd
cmp
std
adc
jae
cmp
leave
xchg
ret
mov
push
pop
dec
jo
test
movs
and
in
(bad)
jmp
cmps
mov
push
mov
xor
in
inc
and
std
int3
xor
pop
outs
jnp
int3
jno
call
cmp
lea
sub
jae
inc
mov
mov
lods
in
add
mov
mov
in
dec
retf
jl
in
push
or
nop
cmps
mov
and
cmp
nop
dec
add
push
imul
ss
pushf
add
add
scas
mov
pop
popa
je
nop
mov
adc
mov
js
jge
push
jg
in
sbb
pop
inc
neg
jl
lahf
xor
and
mov
adc
push
mov
inc
cmp
adc
retf
mov
mov
pop
stos
add
ins
mov
push
inc
or
xchg
dec
adc
sbb
jb
and
sub
pop
pop
add
xor
aas
push
sbb
nop
lock
dec
icebp
das
fadd
pushf
push
int
test
adc
loopne
fmul
(bad)
sub
loopne
push
dec
jnp
loopne
dec
mov
fmul
fwait
xlat
dec
pop
push
call
push
es
mov
cmps
popf
out
loopne
lods
push
call
sub
add
das
in
sub
shr
jmp
movs
out
and
xor
add
sbb
out
xchg
pushf
adc
out
pop
mov
adc
mov
call
cmp
loop
and
clc
sahf
xor
jmp
xor
loopne
pushf
or
inc
popf
cmp
cmps
or
sbb
pop
or
jb
mov
mov
xor
mov
mov
and
in
pop
(bad)
jmp
fist
xchg
add
add
ret
ja
scas
lea
lods
adc
inc
sub
adc
or
sbb
mov
in
mov
mov
xchg
dec
push
jle
rcr
adc
and
pop
movs
mov
(bad)
test
test
pop
mov
data16
int3
or
and
icebp
mov
or
in
mov
fxch
cwde
add
push
test
aaa
in
mov
std
add
mov
and
sbb
jmp
pop
mov
push
xchg
push
push
pushf
jbe
adc
inc
sbb
pop
nop
dec
or
xor
adc
popf
push
dec
in
fcomp
sub
jno
mov
lea
out
call
push
cmp
enter
in
add
sbb
test
in
adc
add
enter
mov
sahf
test
or
int3
sbb
(bad)
mov
adc
das
add
sti
push
and
or
cmps
mov
sti
or
cvtps2pi
pop
call
xchg
xchg
std
fs
adc
mov
jne
jo
mov
sti
test
(bad)
lock
or
push
sbb
(bad)
jbe
iret
and
adc
adc
mov
shr
shl
xchg
rcl
movs
cmps
xor
mov
repnz
cmps
xchg
in
loopne
pop
ins
add
in
mov
jb
xor
cmp
mov
pop
and
cld
out
inc
hlt
xchg
out
clc
popa
sbb
mov
push
push
mul
cmp
sbb
out
xor
pop
enter
test
lock
push
inc
repnz
repz
jne
or
push
push
rol
fwait
out
jb
sub
in
hlt
add
inc
hlt
or
ds
jne
js
rol
fwait
or
call
(bad)
clc
push
or
sbb
in
aas
lock
std
sbb
add
into
out
loope
and
pop
xor
cmp
add
fist
in
ds
in
mov
xor
fisubr
mov
adc
clc
fs
retf
pusha
(bad)
pop
adc
or
cmp
push
sbb
clc
lock
dec
clc
mov
ins
(bad)
in
fidivr
add
sbb
cmp
jne
mov
popa
punpckhbw
add
bound
in
(bad)
sbb
add
es
jmp
mov
hlt
adc
cmp
dec
add
stc
mov
pop
pop
idiv
push
and
sub
(bad)
sti
sbb
and
cld
fadd
pushf
icebp
jmp
popf
popf
adc
clc
dec
push
stc
mov
idiv
movs
adc
js
call
pop
sbb
inc
cmp
dec
fisttp
cwde
jne
ins
or
sub
pushf
retf
lea
jmp
push
mov
(bad)
mov
pop
cs
repnz
lahf
sbb
lock
ret
ja
pop
inc
pop
clc
dec
aaa
and
push
ds
(bad)
and
and
(bad)
hlt
hlt
hlt
pop
addr16
adc
mov
jo
jbe
or
enter
cmp
(bad)
clc
sub
sar
pop
lods
enter
psubsw
data16
push
add
daa
in
sub
mov
cld
movs
clc
mov
xchg
inc
clc
clc
imul
mov
cmp
mov
inc
mov
inc
lods
dec
js
or
imul
movs
fadd
inc
adc
mov
adc
push
popa
pop
fsub
jb
add
xchg
cld
add
push
mov
mov
add
mov
ins
and
jmp
cmp
jo
mov
daa
rol
mov
and
pop
ret
(bad)
cwde
sub
in
adc
scas
ret
(bad)
sub
repnz
in
shr
in
add
cmp
rcr
mov
push
movs
push
lds
pop
adc
add
lea
sbb
les
push
push
in
pop
push
in
fisubr
rol
movs
adc
cmp
cmp
data16
aam
in
dec
sti
mov
clc
inc
or
sar
cli
pop
jno
pusha
mov
ss
or
rcl
cs
dec
popf
mov
inc
cli
or
fsubr
(bad)
hlt
loopne
cdq
cmps
hlt
push
xchg
and
call
hlt
mov
rcr
outs
rcr
lods
add
das
and
mov
push
inc
adc
xchg
pop
pushf
cmp
jns
xor
jecxz
cmps
mov
data16
loopne
shr
call
add
ret
adc
pop
cwde
add
mov
cmp
adc
addr16
mov
add
inc
fld
mov
sbb
ins
xor
test
shr
mov
push
(bad)
enter
cmps
or
inc
xchg
and
outs
jnp
retf
shl
cmp
push
mul
mov
mov
add
sbb
or
(bad)
or
ror
or
lock
xchg
movs
mov
hlt
dec
ret
and
lock
dec
xchg
lock
add
(bad)
sub
sub
push
iret
pop
add
adc
cmp
data16
add
daa
or
sbb
je
in
add
push
xor
add
sbb
jle
dec
je
xor
je
ds
push
pop
push
in
push
cmp
mov
sti
push
dec
fiadd
lods
test
lock
call
cmp
push
add
add
imul
push
shr
xchg
and
mov
mov
aas
pop
xor
sub
or
push
scas
or
push
adc
add
adc
mov
lock
std
test
adc
cmp
icebp
aam
push
rcr
lock
pop
lock
mov
dec
inc
add
add
je
in
jg
dec
dec
add
jmp
je
pop
lahf
xchg
jecxz
adc
icebp
les
sub
dec
xchg
lock
mul
cwde
mov
mov
mov
es
fsubr
push
mov
dec
inc
or
adc
dec
xor
fbstp
dec
mov
jno
push
in
js
sbb
mov
nop
loopne
loopne
pusha
or
sub
inc
fdivr
gs
into
mov
test
fs
inc
lock
pop
and
push
daa
out
pop
fisttp
or
popa
fdiv
push
or
dec
xchg
pop
sub
or
sub
sub
retf
popa
pushf
enter
xchg
arpl
popa
sti
xor
mov
and
cmps
fld
es
cmp
cmp
ret
push
mov
cmp
ins
cmp
fxch
in
lock
cmc
pop
mov
xor
mov
dec
imul
lea
in
pop
mov
mov
add
mov
ficom
jmp
and
and
inc
loopne
call
jbe
mov
jecxz
lods
js
pop
jae
inc
lock
int3
ins
imul
fs
add
push
add
jo
rcl
daa
sub
out
call
adc
mov
add
or
jne
push
sbb
or
or
xor
nop
retf
test
sub
and
test
ret
push
dec
fwait
xor
and
lds
sub
add
mov
ja
bound
xor
or
repnz
test
daa
mov
sbb
and
sub
or
and
pop
pop
xor
add
in
jmp
dec
(bad)
mov
dec
cmp
imul
lods
out
mov
div
stc
mov
test
pop
aad
mov
call
fild
ret
push
mov
xchg
add
mov
sbb
sub
jne
sti
dec
rol
dec
das
stos
or
dec
jmp
push
or
mov
lock
loope
cs
push
lock
ret
jmp
or
prefetchw
test
cdq
pop
mov
or
sub
popa
int3
popa
leave
push
sbb
sub
je
ins
push
pop
mov
mov
pop
shl
push
jmp
pop
ret
out
ss
and
pusha
or
xchg
ret
cmp
xchg
mov
sub
aas
jecxz
push
xlat
sbb
jg
sbb
je
fidiv
sub
adc
jne
sti
jge
fwait
sahf
test
cdq
pop
or
push
adc
or
jne
xchg
pop
and
mov
sbb
mov
or
adc
adc
xor
adc
jl
push
or
push
jo
or
dec
mov
imul
cmp
pop
push
push
pusha
cwde
(bad)
sti
in
hlt
sbb
dec
and
lock
pusha
xor
or
adc
popa
inc
or
and
xchg
add
fiadd
mov
ja
cmp
shl
pop
adc
loope
jne
pop
jg
ins
jb
gs
dec
enter
lock
jns
mov
inc
inc
in
ja
pop
adc
popa
pop
jmp
jmp
push
add
or
xchg
retf
add
pop
sbb
sub
pop
lea
pop
rol
push
ret
pop
lods
jnp
pop
mov
cmc
jne
and
pop
push
cdq
out
jne
sub
and
mov
mov
clc
int
call
lock
imul
in
clc
and
and
sub
clc
mov
test
clc
hlt
daa
pop
call
xor
xchg
xor
adc
hlt
clc
adc
das
adc
sbb
rcr
hlt
mov
leave
hlt
and
pop
cmp
js
rol
lods
pop
add
aaa
int3
cmp
pop
aad
ret
mov
cmp
pop
stos
adc
call
int3
sbb
and
pop
les
jecxz
push
inc
jg
inc
add
and
inc
and
jns
jae
fidiv
scas
dec
pop
and
adc
pop
mov
mov
xchg
int3
ja
dec
loope
cmp
mov
ror
inc
xor
in
jne
inc
sub
or
pushf
rcl
in
xchg
or
adc
pop
sub
sbb
sub
add
or
cmp
and
enter
or
or
or
add
jg
xor
mov
cmp
adc
push
xchg
sub
(bad)
jo
adc
ret
pop
inc
and
aas
mov
enter
les
mov
mov
adc
or
fs
add
rol
cmp
mov
rol
outs
std
mov
mov
cld
jecxz
movs
or
addr16
movs
pop
pop
ss
lods
inc
sti
inc
and
mov
or
pop
lock
or
pop
js
jmp
cmp
es
mov
push
sbb
mov
sbb
jno
sub
nop
sub
cmp
fisubr
js
(bad)
mov
add
push
mov
or
pop
int3
mov
sub
int3
int3
push
addr16
sub
or
sbb
xor
cmps
push
sbb
pop
stos
shr
ins
pop
jnp
adc
add
fstp
inc
push
fwait
jno
leave
or
xor
inc
dec
ds
in
pop
mov
int
pop
bound
and
dec
(bad)
and
push
cmp
in
ret
inc
jne
stc
cmps
cmp
mov
repz
xor
sbb
shl
push
pop
pop
inc
adc
lods
aam
bsf
push
int3
popa
clc
xchg
popa
ins
add
ja
es
sbb
jae
jl
outs
in
in
popf
in
mov
sahf
pop
in
test
(bad)
sub
clc
jp
ja
fisubr
pop
xchg
mov
popa
and
inc
xor
pop
aas
pop
mov
push
(bad)
push
adc
sbb
and
std
add
and
push
pop
push
scas
sti
rcr
add
ret
fld
xchg
pop
jbe
sbb
jg
ins
fdiv
inc
shr
jp
enter
in
stos
and
pop
jmp
(bad)
jmp
dec
adc
dec
or
or
or
das
jo
dec
ret
adc
push
pop
jne
fist
pop
cdq
sub
dec
dec
add
pop
sbb
ins
into
fistp
cs
add
imul
in
sbb
jo
aaa
push
pop
or
pop
cmp
or
or
inc
xchg
mov
je
out
push
pop
xor
and
xchg
push
dec
adc
or
add
mov
adc
cmp
pop
cmp
add
pop
sbb
nop
or
cmp
loope
je
inc
mov
loopne
scas
xor
clc
in
add
add
xor
jecxz
ds
call
xor
cmp
push
mov
clc
push
mov
mov
clc
push
mov
pop
xor
scas
rcl
lahf
mov
sbb
test
inc
cmps
std
add
push
cmp
and
lods
pextrw
cmp
test
enter
cld
mov
sub
pop
mov
in
add
or
popa
loope
je
xchg
mov
jo
mov
hlt
imul
inc
dec
ins
ja
aas
mov
xor
xchg
and
adc
mov
push
jns
enter
and
in
(bad)
retf
gs
adc
ins
imul
push
jae
outs
dec
sub
fidivr
adc
mov
fsub
cmp
scas
push
cmps
cmp
push
xchg
pusha
loope
push
cmp
or
cmc
xor
(bad)
ss
mov
dec
jae
inc
inc
mov
cmp
dec
icebp
push
retf
outs
inc
push
mov
adc
sbb
sbb
test
in
and
sub
xor
adc
loope
aaa
lahf
(bad)
dec
cdq
(bad)
aas
mov
ja
rcl
test
cmp
aam
cmp
add
xchg
xor
mov
xor
jo
xchg
or
dec
stos
imul
add
fdiv
sub
faddp
inc
data16
movs
push
movs
add
dec
nop
mov
dec
movs
inc
adc
cwde
call
sar
mov
xchg
fcmovu
mov
sub
sbb
pop
(bad)
enter
xorps
push
adc
inc
lock
sub
mov
les
mov
dec
rcr
sbb
clc
push
pusha
loopne
sbb
loopne
xor
nop
leave
or
mov
mov
and
xchg
dec
mov
pop
adc
jmp
fadd
xchg
cmps
mov
jne
ins
pop
sbb
test
pushf
mov
push
push
or
lods
adc
mov
retf
inc
push
mov
ds
sti
or
imul
loopne
add
dec
scas
or
sub
mov
das
repz
mov
mov
mov
jne
mov
xor
add
fwait
test
int
call
dec
fld
jae
pusha
or
fidivr
add
ficomp
rol
test
in
(bad)
and
and
inc
pop
jmp
adc
rol
pop
mov
add
outs
aad
and
inc
push
inc
push
adc
jp
nop
test
imul
pop
pop
js
popa
sub
sub
shl
cmps
shl
mov
lods
xor
xchg
fidiv
cmp
sub
loopne
shr
rcl
or
ins
sbb
mov
mov
popa
cli
cmps
cvtps2pd
jns
inc
cmp
aaa
jmp
push
dec
dec
push
mov
sbb
sbb
cmp
pop
nop
jp
xlat
xor
or
pushf
adc
in
cmc
jo
sar
repnz
pusha
call
inc
aad
or
scas
fbstp
mov
pushf
pushf
enter
int
enter
mov
mov
mov
test
sub
(bad)
fsub
lahf
cld
dec
js
jns
cld
or
popf
cld
dec
dec
stos
jne
retf
cmp
fsub
mov
sub
fld
cmp
loope
xor
(bad)
dec
test
push
out
and
jne
pmuludq
inc
in
pop
push
mov
pop
loop
jne
jp
mov
test
addr16
jge
hlt
addr16
hlt
in
pop
and
in
cli
adc
adc
int
push
or
jle
ret
enter
add
adc
js
jo
or
push
dec
pop
or
and
loope
daa
loopne
jmp
frstor
fist
or
or
inc
cmp
in
adc
adc
pop
pop
cmp
cmp
clc
jge
inc
cld
rcl
icebp
dec
movs
(bad)
and
jmp
pop
movs
mov
rcl
lods
cmp
bound
mov
movs
cmp
inc
pop
enter
inc
lahf
jmp
add
fst
lahf
xor
inc
inc
and
shl
fist
pop
xchg
xchg
jl
mov
adc
ret
add
jmp
pop
xor
mov
lods
cmp
push
or
or
sub
jne
add
jmp
and
rcr
sbb
lgdtd
jecxz
push
arpl
das
jge
mov
sbb
movs
xchg
shr
ret
or
jo
add
cwde
fdiv
push
hlt
push
mov
inc
add
call
xchg
mov
jg
stos
(bad)
leave
hlt
jg
sub
add
add
dec
xchg
test
scas
add
test
jae
das
mov
or
lods
lea
int3
xchg
pop
adc
or
mov
xor
xchg
pop
sub
imul
jb
cmp
aam
sbb
inc
pop
sub
and
jae
outs
xor
adc
push
movs
popa
sbb
(bad)
xor
sub
mov
mov
or
fcom
cmp
popa
test
pop
std
mov
push
adc
ja
add
int
mov
mov
ds
cmps
enter
ror
sbb
js
jnp
and
movs
fimul
jmp
jbe
ret
cmp
and
pusha
and
sub
pop
call
dec
adc
jae
inc
push
push
or
and
ror
not
ja
iret
bound
inc
sbb
ret
or
scas
dec
cmp
inc
mov
lahf
or
out
push
adc
or
sar
adc
or
shl
sub
sub
or
dec
fs
in
adc
sub
aas
das
mov
sub
les
adc
mov
or
fidiv
or
mov
jo
pop
fdivr
dec
outs
inc
mov
cmps
cs
loope
mov
adc
pop
popa
push
adc
xor
add
into
inc
and
and
cwde
jmp
test
arpl
neg
pusha
rcl
clc
adc
loopne
aam
adc
push
adc
push
cmps
mov
sbb
mov
out
not
push
mov
inc
ins
fnstcw
ins
cli
push
and
xchg
xchg
and
sub
xchg
jo
jo
cmp
jge
xchg
jl
call
and
xchg
sub
xchg
out
scas
in
test
sub
and
or
test
or
hlt
mov
aas
inc
or
xchg
outs
sbb
pop
add
or
mov
jle
dec
aaa
push
add
add
and
jmp
cld
scas
xlat
test
pop
sub
sub
xchg
cmps
lods
inc
sub
mov
fild
cmp
or
aas
shl
adc
call
xchg
add
inc
out
pop
push
cmovne
or
mov
js
adc
mov
jge
adc
inc
dec
push
dec
add
sbb
mov
xchg
pop
dec
cmp
clc
inc
mov
or
ror
iret
or
jno
out
inc
test
pop
push
push
mov
sub
ret
mov
(bad)
xor
(bad)
cmp
sbb
clc
jg
mov
sbb
mov
in
loopne
xchg
fisub
cmp
or
xor
in
mov
fisttp
ins
mov
mov
xchg
call
inc
cmc
ret
lahf
cmp
cmp
and
mov
test
mov
inc
and
pop
inc
or
(bad)
xor
sub
mov
sub
data16
fld
sub
cmp
add
and
xchg
inc
and
and
aas
ret
adc
push
call
or
push
leave
jg
out
enter
adc
add
imul
cmp
push
cmps
adc
adc
add
push
imul
and
or
(bad)
push
sub
and
inc
dec
fnstsw
pusha
inc
xor
jecxz
pusha
dec
or
cmp
jne
dec
xor
pop
lea
sbb
and
sbb
cmp
mov
adc
cmp
xor
or
sbb
inc
cmc
pop
(bad)
imul
sub
mov
push
or
adc
push
push
xchg
inc
cmp
cmp
push
clc
sar
add
rcl
dec
cld
jne
test
je
clc
jmp
jmp
call
dec
cwde
dec
adc
idiv
shl
mov
shr
add
pop
pop
mov
loopne
xchg
bound
xchg
cld
sub
aas
clc
mov
loopne
jns
pop
test
aam
push
aas
jl
pusha
xor
inc
xchg
jg
cmp
mov
add
push
and
or
dec
lods
add
mov
mov
out
dec
aas
jle
ins
pop
inc
mov
fisttp
(bad)
cmp
xchg
(bad)
jle
push
xchg
xor
push
sbb
jge
int3
xchg
nop
adc
mov
pop
jo
stc
pop
adc
pop
sbb
pop
add
push
addr16
in
sbb
or
js
stc
in
lods
mov
jmp
jns
push
lods
sbb
mov
(bad)
call
nop
pop
sbb
jp
push
repz
xor
add
into
inc
jb
cs
pop
adc
mov
jo
mov
inc
mov
fsub
inc
out
adc
push
add
dec
push
hlt
addr16
stos
adc
adc
add
int3
sti
cmp
push
clc
into
adc
call
push
retf
jp
mov
mov
jmp
cwde
push
test
inc
test
or
dec
mov
or
sub
(bad)
cld
fistp
aad
sub
dec
push
mov
mov
das
xor
scas
mov
ret
aas
push
popw
test
aas
enter
lea
xor
and
call
pop
push
xor
cmp
pop
sbb
push
cs
add
sbb
sbb
and
sbb
sbb
mov
dec
pop
jmp
sbb
dec
mov
and
popa
loopne
fadd
sbb
pop
cmp
js
fsubr
lods
pop
adc
lea
sub
or
dec
sub
mov
fisttp
fst
inc
mov
aas
push
dec
jno
dec
pushf
aas
or
xchg
sbb
pop
dec
int3
adc
xor
or
pop
and
add
fist
mov
dec
or
je
adc
cmp
mov
add
pop
data16
arpl
mov
(bad)
test
dec
dec
ret
and
push
std
lock
in
and
and
push
stc
fdiv
add
mov
test
pop
sti
mov
jb
gs
mov
dec
in
mov
fs
pop
fdiv
clc
in
jmp
dec
mov
cmp
push
fcomp
cmp
adc
cmp
jns
mov
int3
dec
jge
call
inc
mov
hlt
sbb
arpl
xor
in
int3
push
jmp
fcom
push
je
pop
or
movs
loopne
aas
ficom
sbb
enter
and
lea
inc
fmul
sbb
inc
jg
lock
add
test
outs
or
or
clc
mov
pop
push
xor
pop
je
or
jg
pop
fadd
cmp
test
add
lahf
js
arpl
inc
in
lods
dec
fidivr
adc
cmp
pop
cmc
xchg
loop
ja
jne
fist
call
jl
add
xchg
lea
cmp
pop
pop
mov
pop
jb
adc
mov
jo
and
mov
inc
inc
test
dec
cmp
repnz
sub
pop
or
add
xor
cs
pop
inc
ins
pop
mov
or
cld
aad
or
push
dec
add
(bad)
fistp
xor
pop
push
sbb
dec
ins
and
ret
int3
pop
mov
jle
pop
jg
dec
iret
ror
mov
aas
cld
mov
push
jg
fistp
xor
aas
sub
pop
mov
repnz
push
dec
out
add
xor
sub
sub
mov
mov
cwde
push
xchg
jecxz
sub
mov
cmp
cld
pop
jmp
push
outs
loopne
jmp
(bad)
jl
test
xchg
lds
add
mov
and
push
cmp
add
popa
push
das
and
or
enter
inc
dec
dec
lds
or
ins
stos
iret
pop
add
sbb
scas
add
adc
cmova
int3
rcr
lock
and
push
add
pop
cwde
or
sar
imul
mov
dec
cmp
or
inc
mov
sti
movs
add
data16
pop
lods
push
mov
sti
pop
pop
je
mov
aas
pop
fsub
dec
dec
rcr
push
jb
pushf
dec
add
or
nop
cld
pop
cmp
dec
jmp
les
or
adc
pop
fstp
push
fistp
jmp
mov
call
push
dec
or
dec
adc
arpl
adc
sbb
adc
imul
and
mov
push
adc
dec
push
test
pop
push
push
jl
jnp
out
push
jmp
retf
dec
jb
xchg
dec
jns
in
push
cmp
xchg
das
mov
sub
in
stc
xchg
retf
and
test
test
shr
lods
push
mov
add
dec
mov
xchg
sub
mov
cld
pop
add
or
push
inc
fadd
icebp
push
mov
mov
add
jp
dec
loopne
lods
or
outs
mov
push
mov
cmp
inc
inc
movs
jp
or
js
fstp
mov
call
(bad)
es
loopne
mov
xchg
jl
sub
movs
cld
lods
cmp
jmp
jle
daa
cmc
scas
and
pop
or
and
adc
or
xlat
cmp
(bad)
mov
ret
and
push
or
lea
jno
cmp
jg
xchg
js
pop
xor
lock
xchg
pop
push
aam
mov
add
push
clc
ror
outs
mov
or
adc
sahf
fcomp
sub
inc
mov
adc
fbld
in
aad
js
mov
rcr
jmp
ror
sbb
je
out
sub
loop
mov
cdq
mov
pop
lahf
test
mov
adc
cdq
mov
add
ret
aas
sub
mov
sbb
add
sbb
push
jno
mov
cs
popa
pop
jne
cwde
retf
aad
adc
cld
sar
push
sbb
xchg
outs
xor
rol
xor
add
or
in
pop
push
repz
jg
dec
lods
movs
push
sbb
hlt
jg
mov
xor
test
xor
sbb
jl
daa
int
add
push
add
adc
aaa
mov
and
sbb
sbb
mov
movs
rcl
clc
loopne
inc
clc
loopne
jmp
jmp
xor
test
or
inc
cld
adc
neg
std
jmp
sbb
adc
inc
xor
jb
leave
xor
and
xchg
pusha
test
add
xlat
pop
cs
mov
add
enter
inc
cmp
sbb
cld
or
dec
ret
(bad)
and
in
push
pop
test
in
lock
or
push
dec
in
in
es
dec
cs
lock
and
xor
adc
jns
hlt
faddp
and
hlt
xor
sub
inc
lock
lock
sub
fsubr
adc
call
fimul
lods
and
popa
(bad)
pop
dec
push
pop
lahf
stos
push
mov
and
mov
and
(bad)
(bad)
add
outs
inc
aas
inc
or
or
inc
cmps
pusha
dec
(bad)
fbld
push
sub
ja
jg
push
mov
mov
cld
jmp
rcl
pop
mov
dec
aas
dec
pusha
and
loopne
cmp
ss
mov
shl
adc
scas
jp
adc
pop
(bad)
dec
fwait
xor
call
mov
mov
add
push
call
cmps
xor
xor
xchg
or
pcmpgtb
jg
jl
enter
or
ins
xor
sar
movs
cmp
loop
pushf
pop
gs
lds
pop
clc
ins
addr16
push
clc
inc
clc
out
pop
add
hlt
ds
add
sbb
data16
ins
fbld
cdq
sbb
adc
jg
pop
call
call
aas
push
inc
pop
in
aam
dec
sub
lods
dec
les
add
dec
aas
inc
fwait
aas
sbb
and
addr16
or
in
dec
mov
xor
fmul
aas
js
jne
cmp
call
aaa
add
or
and
dec
test
mov
addr16
iret
mov
push
cmp
call
pop
int3
jmp
sahf
dec
cmps
cld
jns
fcmovne
pop
and
mov
jg
fcom
push
cmp
adc
xor
push
sub
jecxz
pusha
push
inc
sub
and
push
add
(bad)
sbb
xchg
push
inc
nop
or
adc
sbb
jg
or
mov
ja
dec
and
push
pop
add
xor
sub
cs
dec
mov
cmp
sbb
xchg
push
aas
push
sbb
push
lods
jmp
push
xchg
dec
cmp
fisub
test
or
push
gs
fsubr
lock
or
shl
cmp
enter
xchg
push
pop
add
sbb
inc
lds
push
cwde
in
call
xor
mov
mov
xchg
or
ins
xor
nop
out
shr
push
jae
ds
in
cmp
fild
inc
and
inc
imul
add
mov
xchg
aas
les
xor
scas
push
mov
js
adc
cmp
pushf
test
mov
mov
fistp
dec
clc
mov
inc
mov
jb
jg
call
adc
add
dec
mov
mov
imul
inc
inc
clc
push
cmc
or
sbb
es
daa
pop
aas
mov
xchg
nop
or
pop
test
ins
in
push
inc
or
cmp
je
or
cmp
js
mov
lods
inc
cmp
adc
jl
and
push
xor
or
xor
mov
call
sub
inc
mov
push
(bad)
push
gs
popa
xor
jg
xchg
cmps
or
or
pushf
jge
push
rol
pop
or
push
call
pop
jmp
and
and
daa
push
add
sub
and
jp
(bad)
jmp
(bad)
(bad)
test
xor
pushf
jg
bound
test
mov
pop
adc
inc
mov
mov
cmp
jne
adc
dec
imul
(bad)
adc
das
inc
fs
sub
xchg
sbb
xor
push
or
outs
pushf
test
shl
fild
mov
inc
cmps
imul
jo
mov
cli
sbb
add
inc
test
and
sti
push
pop
test
add
and
pushf
shr
xchg
xchg
fcom
loopne
add
inc
je
pop
jmp
jae
pop
pop
add
imul
loope
jo
(bad)
fucomp
shr
jno
mov
test
sbb
ret
fiadd
or
bound
fbld
in
std
add
and
ret
pop
cmp
imul
pop
or
or
call
cmps
dec
cs
mov
sbb
adc
enter
cli
movs
xor
add
loopne
loopne
int
add
mov
pop
dec
pop
rcl
adc
jmp
cmp
jb
ins
mov
(bad)
adc
inc
adc
adc
inc
call
imul
or
jmp
push
fist
mov
test
mov
sbb
push
add
dec
das
loopne
or
imul
ror
fwait
dec
rol
aam
push
int3
mov
sbb
and
sahf
xor
jbe
test
adc
inc
sub
push
das
ret
call
test
sub
frstor
xor
sbb
or
mov
and
ror
pop
int
cmp
in
push
test
lahf
push
or
pop
mov
mov
in
pushf
sub
adc
sar
mov
push
cmp
movs
arpl
into
mov
and
je
and
sbb
jl
mov
lock
mov
pop
(bad)
push
xchg
xchg
ror
jp
popa
shl
lea
lock
jo
jmp
cmp
jns
jb
jmp
xchg
adc
pop
or
push
inc
adc
adc
daa
cmp
push
js
in
adc
add
and
jbe
push
popa
or
daa
cld
jge
rol
adc
clc
mov
adc
inc
sti
sbb
and
rcr
outs
ins
jmp
dec
or
or
es
movs
or
or
push
enter
addr16
stc
ins
add
cmp
push
mov
and
ja
pop
lods
sahf
dec
arpl
in
lea
mov
sbb
mov
pop
push
inc
xor
inc
sbb
call
fnstcw
push
outs
rcr
mov
push
or
pop
sub
jnp
hlt
lock
scas
pop
in
js
call
loopne
(bad)
out
xchg
sub
call
aam
lahf
jb
sbb
test
cwde
stos
cwde
mov
div
repnz
ror
int
aad
out
inc
into
nop
lahf
pop
mov
lock
fldenv
mov
cmps
xor
xor
xor
out
adc
push
mov
push
enter
es
sar
inc
les
cwde
push
sub
(bad)
fcom
loopne
test
xor
aam
es
add
add
out
mov
sar
push
inc
data16
int3
lock
hlt
jl
out
inc
in
enter
dec
sbb
loopne
fdivr
test
inc
hlt
in
out
loopne
mov
inc
nop
sub
push
ins
leave
lock
adc
pop
jo
jle
or
push
sahf
push
jae
jg
jns
imul
and
mov
or
pop
adc
call
(bad)
push
lods
mov
pop
repnz
in
jne
and
retf
bound
mov
dec
sub
enter
mov
or
cmc
je
mov
adc
ror
inc
scas
cmp
push
add
dec
adc
pop
mov
idiv
and
adc
aam
arpl
je
hlt
xor
fadd
or
mov
rol
mov
dec
or
inc
jmp
cmp
mov
lahf
in
popf
xchg
and
mov
imul
jno
or
mov
adc
lea
and
adc
or
dec
neg
add
jle
mov
cmp
fs
lahf
int3
push
mul
pop
fsubrp
div
inc
in
push
inc
pop
mov
in
into
fcom
movs
dec
xchg
in
ja
sti
xor
je
push
xchg
push
out
jb
push
xchg
inc
lahf
jbe
mov
fcomp
and
inc
fwait
sbb
aas
xchg
aaa
mov
and
mov
inc
in
push
aas
mov
or
test
(bad)
mul
sub
loopne
mov
and
and
xor
jo
or
mov
mov
imul
lods
adc
or
in
mov
inc
jnp
rcl
(bad)
cmp
adc
adc
sub
sbb
pop
iret
adc
js
inc
xor
mov
or
mov
in
ret
retf
popa
inc
dec
pop
scas
je
push
loopne
enter
out
sub
xor
jmp
jmp
dec
mov
hlt
mov
ror
in
or
fistp
mov
cmp
jmp
cwde
sub
cmp
mov
dec
fist
in
mov
jno
js
call
cmp
jmp
sub
xchg
xchg
sbb
mov
xor
dec
push
fsub
jns
jo
movs
jg
inc
shl
pop
or
enter
inc
in
test
repnz
imul
mov
sub
test
jns
and
push
and
adc
mov
adc
push
pop
idiv
or
mov
sahf
or
jmp
daa
mov
xchg
fistp
xor
out
mov
ret
inc
ret
aas
int
cs
mov
adc
lods
sub
scas
adc
shl
fdiv
push
push
pop
cwde
pop
push
clc
icebp
clc
push
pop
int
or
fs
xor
xchg
clc
mov
cmp
push
sub
and
mov
mov
sbb
into
sbb
inc
jnp
ins
loopne
push
inc
mov
dec
sub
(bad)
and
cmp
and
cmc
aaa
or
xchg
jmp
mov
pop
fsub
inc
shr
jl
inc
je
mov
lea
push
das
stos
sub
and
fcom
lahf
sub
fs
dec
pop
pop
lock
pop
push
cmps
dec
ins
clc
xchg
add
or
loope
jne
fs
cmp
hlt
scas
jns
shr
dec
ret
mov
inc
(bad)
(bad)
push
retf
cmp
xchg
vpcomub
mov
cmps
std
mov
push
lods
mov
mov
das
inc
pop
in
stc
popf
push
icebp
or
rol
popf
xor
jo
xor
ins
pop
cld
adc
dec
ficom
nop
lea
ror
iret
cs
push
add
push
lock
(bad)
lods
hlt
cwde
movs
sub
sub
repz
push
or
lds
shl
movs
test
xor
pop
pop
dec
mov
pop
xchg
stos
lea
lea
lods
je
retf
jl
push
pop
cmp
dec
aas
mov
pop
dec
dec
ds
(bad)
arpl
add
or
and
retf
push
inc
mov
dec
ret
inc
in
or
lock
dec
clc
fxch
cmps
lock
call
sbb
ds
loopne
or
sub
das
inc
test
test
cmp
xchg
adc
mov
sub
adc
call
jae
int
ins
push
pop
pop
ret
ins
adc
movs
loopne
js
mov
lea
pop
xor
lods
loopne
mov
jnp
dec
dec
lahf
ret
jecxz
push
cmp
xchg
or
lods
jmp
adc
inc
cmp
shl
js
mov
rol
lds
imul
aas
jo
push
popa
mov
std
xchg
fs
mov
hlt
xchg
jecxz
or
jno
inc
rcl
or
inc
mov
mov
addr16
stos
xchg
mov
aas
push
enter
mov
sbb
add
or
ins
adc
in
pusha
push
inc
and
imul
es
cmps
or
mov
popa
rcr
xchg
and
out
outs
pop
ds
pop
test
jo
in
ins
inc
(bad)
adc
pop
inc
in
enter
out
pop
inc
in
int3
add
adc
push
movs
add
in
loop
add
inc
mov
movs
add
cmps
jb
push
adc
stc
fsub
cwde
push
cwde
add
inc
pop
sub
jmp
add
mov
and
(bad)
out
mov
mov
jmp
mov
retf
or
pusha
lea
ja
mov
lods
or
mov
jmp
mov
and
movs
aam
pop
and
sub
jmp
cwde
xor
lock
int
dec
call
pushf
xchg
add
call
push
xor
(bad)
out
nop
ficom
mov
push
lds
xor
and
movs
push
and
pop
aas
mov
mov
or
or
stos
inc
das
inc
or
loopne
cmp
mov
mov
and
and
cdq
(bad)
cdq
sbb
add
daa
pop
sar
std
dec
in
inc
pop
ds
mov
test
adc
daa
into
aam
mov
retf
sbb
mov
adc
arpl
mov
and
call
sbb
jle
jle
mov
jno
jg
mov
sub
push
aam
jge
retf
or
adc
ins
add
cli
xchg
lods
stc
les
and
push
fsubr
or
movzx
cmp
jge
(bad)
cwde
shl
imul
cmps
or
lea
cmp
in
push
lods
outs
fs
mov
mov
or
fucomip
sahf
mov
adc
push
shl
push
lock
aas
enter
sbb
mov
or
pop
mov
int3
scas
cmps
jo
xor
or
pushf
push
adc
mov
jb
in
pop
xor
cwde
call
push
aaa
inc
xchg
push
xlat
call
xchg
(bad)
lock
mov
in
mov
push
sbb
jnp
neg
test
enter
(bad)
adc
mov
and
call
inc
(bad)
popf
popf
jmp
loopne
adc
in
push
or
shl
inc
sub
sbb
add
cli
adc
mov
xchg
leave
mov
out
daa
adc
sub
mov
outs
shl
push
xchg
xor
aaa
repnz
or
lea
push
or
fs
sahf
(bad)
adc
and
mov
js
cmp
out
movs
push
lds
clc
and
sbb
adc
shl
add
call
retf
in
das
push
cmp
inc
add
dec
cmp
fst
mov
add
xchg
rol
or
es
rol
cld
sub
sub
(bad)
retf
mov
dec
call
xor
and
jo
out
push
inc
mov
jl
xchg
sub
and
cmps
test
mov
cwde
dec
or
inc
sub
push
jecxz
clc
pop
dec
sbb
xchg
out
and
xor
xchg
cli
(bad)
xchg
pop
mov
push
or
mov
sbb
mov
loopne
cmp
xchg
je
aaa
jne
adc
dec
in
dec
jmp
loopne
dec
inc
sbb
dec
fwait
mov
jg
mov
mov
push
xor
rcr
movs
lock
add
sub
mov
push
movs
shr
jns
pop
pusha
mov
xchg
arpl
ja
dec
inc
dec
dec
ins
dec
inc
inc
mov
es
push
ret
mov
es
and
int
push
adc
mov
cs
test
inc
pop
or
add
test
test
aam
daa
enter
mov
and
in
test
cwde
pop
dec
sbb
cdq
sub
push
mov
or
bound
rcr
fild
fdiv
and
aam
pop
mov
mov
stos
mov
mov
sub
mov
inc
mov
gs
xchg
push
in
les
cmp
and
je
bound
loopne
inc
adc
xchg
gs
mov
jl
mov
jp
and
js
shr
mov
or
add
fmul
fadd
xchg
sbb
sub
dec
cs
call
add
pop
int
in
aam
dec
fwait
mov
mov
pop
nop
fs
pop
jmp
in
pusha
mov
int3
hlt
add
daa
movs
xor
ins
and
xchg
jmp
lahf
inc
add
int3
jmp
daa
retf
sbb
mov
dec
pop
mov
test
cmp
inc
mov
mov
jge
push
(bad)
clc
jge
or
in
dec
lgdtd
sbb
mov
and
cld
adc
ror
test
sar
je
hlt
(bad)
pop
loopne
mov
addr16
mov
aaa
ins
xchg
and
mov
retf
jl
mov
cmp
add
jmp
add
add
call
sbb
add
leave
or
sbb
dec
ror
mov
xchg
test
push
jle
loopne
xor
push
data16
test
push
ret
fwait
push
bound
jns
sub
fcomp
loope
cld
ret
out
adc
pusha
and
or
push
sub
add
je
pusha
xchg
jge
sbb
aad
lods
cwde
loope
call
fcmovnu
fsub
or
sbb
fisttp
xchg
mov
add
shl
add
xor
call
xor
push
daa
cmp
cwde
movs
xor
(bad)
xchg
and
add
cmc
xor
cmps
mov
push
sub
loopne
pop
add
pusha
fwait
sbb
push
aam
aam
(bad)
adc
mov
add
xor
pushf
adc
adc
add
mov
je
ret
lods
mov
imul
mov
aaa
push
imul
mov
into
push
ret
ret
pusha
mov
repz
not
js
and
sub
(bad)
lods
ins
jne
test
jmp
adc
test
cmovnp
nop
push
sub
add
pusha
jmp
mov
lahf
cmp
popf
pop
faddp
fcom
in
add
and
xchg
ins
cmp
inc
lods
das
sbb
mov
add
jb
cmp
int3
inc
or
jecxz
enter
lods
jp
push
sub
out
test
add
add
ret
cmp
loopne
scas
add
(bad)
fsubr
in
add
retf
cmp
inc
in
jmp
xchg
jo
dec
inc
xor
push
jo
sbb
sub
das
sub
dec
in
jmp
jmp
xor
or
stos
mov
mov
pop
ficomp
or
dec
stos
dec
and
jmp
out
imul
sbb
sbb
hlt
retf
call
ss
sbb
and
movs
inc
mov
mov
sub
mov
or
test
test
adc
sbb
cmp
xor
xchg
test
push
aad
jb
jns
push
jns
loopne
ret
xor
in
cli
or
aam
aam
push
mov
add
mov
mov
add
pop
push
ss
push
adc
sbb
pop
xchg
jg
popf
add
mov
cmp
jmp
xchg
fcom
xor
in
mov
shr
retf
and
and
cdq
or
stos
ins
jle
add
shl
dec
xlat
push
adc
cmps
call
sbb
test
test
xchg
push
cmp
ret
cmp
and
mov
pop
lods
ins
push
lods
cdq
add
inc
add
fcmovnb
sub
add
jmp
push
pop
inc
loopne
dec
inc
and
mov
mov
fs
pusha
sahf
cmp
push
sbb
or
rcr
and
push
in
popf
and
xchg
mov
and
(bad)
out
retf
mov
xchg
and
loope
or
push
inc
xchg
(bad)
test
push
jle
stos
lods
inc
test
(bad)
popf
repz
mov
or
adc
data16
lahf
cmc
rcl
jl
pop
cmp
int3
adc
stos
jmp
pushf
sub
add
gs
sub
push
or
bound
xchg
cmp
xor
add
dec
mov
ss
lahf
imul
sbb
loop
loop
pop
and
cmp
loopne
movs
loope
jmp
pop
mov
push
and
jecxz
lods
in
inc
pop
cwde
call
fisubr
or
jmp
mov
nop
pusha
push
and
xchg
dec
jbe
test
lods
int3
add
inc
and
or
jmp
xchg
pop
out
push
or
bound
ret
fstp
push
xor
mov
ins
cwde
adc
mov
jnp
sub
mov
sti
xor
jmp
les
int
clc
sar
sub
mov
mov
add
int3
xchg
push
add
retf
xor
mov
and
cmp
repnz
adc
xchg
mov
add
pop
inc
les
mov
mov
xor
inc
mov
loope
or
jo
push
xor
retf
call
into
add
and
adc
movs
movs
sub
shr
pop
add
ins
(bad)
jb
cmp
(bad)
cmp
cwde
xchg
or
bound
cwde
adc
pusha
mov
ins
or
add
js
push
xor
daa
fs
jge
iret
add
les
pop
adc
dec
push
mov
push
pop
sub
aas
jle
nop
add
xchg
jnp
and
xchg
scas
ds
cmp
add
add
jmp
or
in
pusha
call
sbb
and
or
cld
dec
lods
mov
dec
and
ss
jg
pop
mov
xchg
xchg
or
sub
and
sbb
push
adc
jb
loopne
push
dec
push
sbb
test
sub
add
lock
loopne
lods
leave
icebp
sub
fcom
lea
inc
push
cmps
repz
loopne
mov
push
movs
bound
mov
js
aas
xor
jmp
jmp
(bad)
mov
or
push
mov
movs
inc
mul
mov
shl
sub
loopne
and
fist
push
shr
cmps
retf
dec
pushf
lods
ss
cmp
cmp
or
add
xacquire
mov
cmp
add
loopne
loopne
and
mov
adc
mov
sbb
or
mov
cmp
and
inc
in
and
mov
cld
adc
add
jmp
gs
xlat
push
jo
or
enter
js
dec
shl
sub
mov
pop
jbe
cmp
outs
jne
adc
adc
aam
enter
lods
xchg
inc
das
or
mov
push
shr
add
cmp
mov
inc
gs
test
mov
sub
xchg
jb
push
nop
adc
fistp
or
adc
sub
int3
mov
mov
jmp
addr16
mov
add
add
(bad)
mov
lea
push
test
mov
test
stos
cmp
and
jne
sbb
mov
xchg
(bad)
ds
inc
sbb
fadd
rcl
add
or
dec
jl
sub
cmps
pop
mov
inc
enter
sub
test
rcr
jns
mov
or
sub
mov
and
push
xor
mov
aam
mov
dec
push
jo
repz
gs
pop
cmps
pop
add
cmp
(bad)
xchg
cmp
push
call
pop
dec
shl
sub
xchg
adc
nop
or
nop
mov
xchg
sbb
pop
fsub
mov
mov
cld
cld
dec
add
aas
dec
fistp
or
jmp
in
in
dec
mov
stos
xchg
jmp
ds
popf
sub
push
ins
int3
pop
push
or
in
push
push
sub
push
es
jo
enter
out
pop
lods
je
inc
mov
dec
push
mov
jmp
mov
dec
dec
or
push
leave
enter
cld
and
xchg
enter
(bad)
not
inc
xor
inc
inc
imul
les
add
mov
mov
scas
mov
es
mov
inc
sub
adc
inc
or
or
xchg
sbb
or
push
int3
ror
mov
fdiv
xchg
mov
lock
adc
push
aas
push
outs
ror
out
push
cmps
ret
dec
stos
cmps
push
dec
enter
rcr
or
xor
add
or
imul
cwde
mov
sub
mov
je
xchg
add
fs
push
mov
scas
xchg
adc
retf
or
pop
pop
add
aam
mov
popa
shr
cmp
sbb
das
pop
mov
add
aaa
stc
fistp
ret
jae
imul
lods
jmp
fcmovnb
mov
xchg
mov
jmp
jmp
jne
movs
loop
(bad)
push
pop
aam
sub
dec
mov
dec
and
add
adc
mov
scas
(bad)
xor
or
jg
adc
add
ret
shl
inc
cmps
test
test
repnz
xor
adc
push
imul
aam
popa
sbb
xchg
push
adc
into
in
push
fist
jno
push
bound
fist
enter
or
sti
pop
or
push
jmp
jns
rol
and
sub
ins
gs
jmp
adc
or
jmp
xchg
in
mov
jns
and
movs
hlt
adc
test
dec
(bad)
xor
sub
sub
mov
sbb
xchg
add
cs
jl
mov
and
pusha
cmp
mov
cs
(bad)
call
ja
repz
les
popa
inc
push
mov
push
pop
inc
(bad)
cmps
adc
add
inc
push
mov
dec
ss
or
push
add
ins
cmp
test
iret
sahf
or
push
scas
cli
mov
xchg
outs
mov
pop
jp
push
dec
fwait
mov
pop
push
pop
cmc
retf
clc
xor
sub
adc
xchg
push
pop
enter
inc
movs
push
stc
add
retf
ror
dec
push
rcr
out
gs
push
pop
mov
fimul
int3
je
fbld
jne
jne
dec
jle
hlt
ss
les
sbb
push
clc
ss
sub
popa
sbb
push
mov
sub
push
pop
mov
jb
and
aas
add
jmp
push
or
xchg
xchg
inc
pop
mov
imul
mov
mov
adc
adc
pop
pop
int
jne
xchg
add
mov
cli
jp
adc
add
sub
push
push
ja
imul
rol
fsub
sbb
cmp
cmp
pop
lock
cmp
xchg
call
mov
sub
sbb
mov
inc
popf
inc
fistp
sbb
mov
jge
add
and
fistp
cmps
jns
jl
ret
daa
pop
sub
rcr
or
mov
js
xor
js
ficomp
imul
out
push
sbb
sub
call
sbb
dec
adc
and
aas
not
and
push
dec
push
and
sub
inc
cmp
and
push
push
add
push
pop
push
sti
(bad)
sbb
retf
or
xor
cmps
repnz
lahf
sbb
int
les
fist
mov
add
bound
std
jne
lea
inc
push
inc
rol
(bad)
cmps
test
movs
lahf
ret
push
out
in
neg
(bad)
jg
and
cdq
or
in
add
sbb
inc
jb
or
add
xor
enter
or
mov
push
dec
in
jg
pop
gs
add
push
pop
push
push
jo
jmp
jo
and
and
push
imul
call
cdq
ret
jns
or
jbe
adc
enter
push
dec
sbb
push
arpl
stos
pop
pop
pop
jmp
inc
lods
push
or
jmp
(bad)
push
add
jmp
cmp
jae
add
or
pop
stos
ja
cli
das
adc
xchg
mov
stc
mov
dec
test
sbb
fdiv
sub
fsub
lock
push
inc
js
(bad)
sub
bound
test
lods
hlt
push
adc
les
in
(bad)
adc
shr
xor
xlat
sub
push
aam
or
aam
loop
mov
ins
jmp
outs
xor
js
aaa
fisttp
push
add
ret
add
adc
pop
repz
adc
out
jne
xchg
add
aaa
or
nop
push
(bad)
cmp
push
add
fcomp
js
clc
mov
jmp
jmp
std
aad
inc
aam
dec
fistp
pop
sub
call
xchg
movzx
frstor
scas
sbb
push
fwait
sub
or
add
inc
add
push
loopne
adc
jmp
rcl
jl
icebp
lods
int3
pop
xor
mov
mov
add
jl
mov
and
in
or
(bad)
fdiv
sbb
(bad)
pushf
or
getsec
jns
or
fldcw
xchg
movs
rol
aas
jg
iret
aad
jle
ret
pop
mov
or
hlt
xchg
or
or
dec
and
jno
addr16
in
adc
jmp
outs
adc
mov
inc
(bad)
pushf
mov
add
sbb
lea
jg
loopne
xchg
xor
(bad)
push
cmp
(bad)
sub
or
out
call
xor
loopne
xchg
cmp
sub
loop
(bad)
or
mov
movs
sti
adc
fwait
lock
lock
lds
lock
pusha
in
lock
cwde
mov
add
jbe
pushf
fs
mov
mov
sbb
add
pop
int
in
add
add
adc
pop
sub
inc
mov
fidiv
pop
aas
adc
(bad)
repnz
pop
jns
sub
arpl
stos
xor
nop
sub
popa
add
pop
mov
movs
push
jge
or
pop
pop
push
test
push
fmul
in
mov
or
adc
fist
mov
mov
or
jl
add
and
mov
call
cmps
cmp
imul
or
aad
and
add
rol
inc
cdq
pop
and
dec
and
adc
push
inc
dec
inc
ds
jb
adc
or
aam
inc
add
call
test
push
imul
mov
lods
dec
sbb
and
and
pop
jae
jmp
fsub
push
jecxz
cdq
cld
stos
pusha
add
adc
sbb
je
fsub
(bad)
(bad)
int
adc
mov
scas
mov
or
jne
ss
mov
dec
rcl
mov
add
adc
or
das
add
frstor
push
call
lahf
aad
shl
ds
iret
adc
popf
pop
movs
je
inc
aad
inc
add
pop
sbb
push
ret
dec
aaa
add
mov
or
or
inc
out
loop
add
sub
or
push
in
mul
nop
out
imul
mov
leave
and
mov
fdiv
test
dec
jae
test
mov
dec
rcl
out
aam
ins
sub
je
fiadd
popf
test
pusha
mov
mov
add
add
fcom
enter
in
inc
mov
enter
es
adc
add
and
(bad)
int3
jmp
jge
(bad)
in
inc
iret
add
jmp
repnz
mov
mov
and
int
sub
into
mov
movs
cmps
into
adc
jle
push
sub
sub
ffreep
dec
call
adc
adc
or
jmp
inc
mov
lods
mov
(bad)
pop
push
cmp
sbb
mov
mov
aaa
repnz
pop
pop
fild
ins
jb
dec
inc
push
addr16
mov
pop
loop
fisttp
cmps
nop
pop
pop
lods
inc
sbb
loope
sbb
pop
arpl
cdq
mov
add
cmp
aam
xor
nop
pop
aaa
fidiv
in
pop
add
dec
aam
fmul
pop
push
mov
lock
lea
add
cmp
mov
ret
pop
cld
jg
sub
or
lods
dec
mov
jns
cmp
out
sbb
xor
icebp
push
push
sahf
test
icebp
(bad)
fcom
in
add
cmp
clc
pop
ror
test
lea
les
cmc
push
rcl
jo
sbb
add
aas
jmp
mov
jl
mov
jbe
aaa
imul
stos
mov
sbb
add
es
cwde
enter
in
enter
xor
test
js
sbb
lea
aam
cmp
mov
stos
fcom
cmps
test
popa
or
cmps
or
mov
sti
inc
pop
inc
popa
daa
or
rcl
push
out
sub
mov
push
or
adc
push
xchg
lods
xchg
mov
loopne
cli
push
push
fcom
mov
mov
popa
add
adc
hlt
cmp
sub
or
push
arpl
(bad)
ds
xchg
pop
sbb
sbb
sbb
or
adc
add
pop
in
pop
xchg
(bad)
inc
mov
ds
or
jo
sbb
adc
adc
es
xchg
loope
dec
sbb
pop
adc
sahf
sbb
jl
pop
mov
je
mov
add
jl
adc
ja
jecxz
push
inc
iret
and
iret
push
mov
ret
ins
retf
cdq
pushf
sbb
retf
push
push
aad
movs
mov
cmp
jg
sub
and
repnz
(bad)
mov
inc
cmp
fidiv
or
fs
lock
sbb
mov
fstp
je
xor
mov
ss
movsd
div
add
ucomiss
lahf
test
jnp
cmps
jnp
lock
sub
std
pop
dec
aaa
or
mov
lea
mov
out
sbb
adc
mov
and
adc
js
or
jl
xor
inc
das
add
mov
sub
pop
add
arpl
pop
sbb
pushf
(bad)
in
xor
push
in
and
jno
jb
mov
and
scas
inc
sbb
lds
xchg
and
sbb
leave
int
int3
or
sub
lea
cmp
mov
push
xchg
(bad)
out
arpl
ins
lea
push
test
dec
je
xor
sub
dec
imul
sbb
and
sub
xor
adc
dec
xchg
dec
dec
push
jg
repnz
sbb
mov
adc
ror
add
inc
ret
lds
mov
xchg
stos
xchg
adc
sbb
inc
ins
push
inc
jg
repnz
add
call
adc
add
jle
dec
or
(bad)
and
mov
adc
xchg
std
inc
sbb
inc
jmp
jmp
inc
add
mov
pop
inc
adc
add
and
out
add
xor
sbb
cmp
sar
sbb
adc
mov
(bad)
xor
xor
ins
xor
rol
xchg
aam
mov
idiv
sub
mov
add
dec
iret
cld
ins
sbb
sbb
(bad)
pop
jb
mov
data16
aas
cmp
or
xor
lea
inc
(bad)
aaa
imul
xchg
sbb
adc
sbb
out
jl
sbb
adc
lods
popa
adc
push
xchg
invd
jle
jmp
arpl
out
and
inc
add
sub
mov
mov
js
inc
aas
aas
sub
sbb
and
jnp
add
pusha
adc
or
lahf
call
push
xchg
pop
out
pop
aas
cld
pop
sbb
sbb
(bad)
out
cmp
sbb
call
add
fdiv
pop
aad
inc
push
xlat
pushf
aas
and
or
js
test
dec
icebp
jbe
xchg
mov
cld
jae
sub
shl
xchg
clc
push
in
loop
lock
add
pusha
in
ins
inc
call
(bad)
leave
call
test
cmp
vunpcklps
add
shl
arpl
loop
adc
push
jg
and
or
jmp
jle
dec
pusha
popa
add
(bad)
arpl
popa
data16
imul
(bad)
arpl
cmp
push
popa
or
mov
inc
cld
cmp
jb
mov
xor
cdq
sub
sar
add
add
dec
loopne
(bad)
jge
and
mov
imul
ret
add
ja
sahf
sub
jne
sbb
push
adc
add
adc
outs
lods
jmp
push
sti
add
or
aam
clc
outs
xor
push
or
inc
add
dec
mov
loope
push
push
mov
mul
cld
and
jecxz
jg
out
std
mov
out
and
je
and
sub
and
ds
mov
add
sub
popf
sbb
sub
inc
icebp
xchg
mov
add
call
mov
and
je
pop
lods
and
adc
dec
in
fucomp
cs
sbb
sbb
inc
jmp
inc
dec
inc
mov
dec
std
in
std
mov
xor
daa
in
jmp
lahf
cli
sti
popa
lods
retf
pop
jns
gs
mov
inc
shr
lods
inc
pusha
jno
mov
xor
xchg
jl
mov
loopne
cmps
sbb
jbe
push
add
cdq
fistp
or
adc
cmp
inc
lahf
jno
push
mov
adc
jns
fbstp
or
rcl
add
ja
mov
mov
ds
mov
push
inc
add
js
ins
sahf
pop
sbb
push
cli
pop
jle
sub
test
cmp
rol
pop
and
int3
xor
add
data16
push
jl
jnp
not
mov
adc
mov
mov
jge
mov
pop
lea
push
dec
fsub
push
xchg
movs
(bad)
mov
jecxz
xchg
push
outs
jmp
popa
addr16
or
mov
mov
imul
lea
jecxz
jo
mov
test
pop
std
mov
rol
sub
sub
nop
cmp
adc
xor
or
add
jo
rcr
mov
rcr
sbb
sbb
mov
push
cmp
pop
sbb
scas
sahf
and
scas
mul
movs
(bad)
mov
and
or
(bad)
retf
and
adc
sub
pop
jmp
push
mov
pusha
ret
mov
sbb
mov
outs
mov
sub
movs
test
in
xchg
jno
(bad)
cmp
movs
push
sub
sbb
mov
fisubr
pop
cmp
jbe
sti
cmps
test
test
jle
bound
or
sub
imul
shl
pop
or
inc
pop
movs
mov
rcr
test
or
imul
xchg
mov
movs
cmp
or
xchg
inc
cmp
adc
sub
mov
push
cmps
add
jecxz
sbb
dec
xor
mov
xor
pushf
cmp
or
push
je
mov
loopne
rol
adc
cli
or
pop
pop
xchg
mov
cmp
lea
sar
pusha
cmps
adc
mov
inc
sbb
jne
add
xor
adc
jae
std
mov
mov
push
retf
dec
inc
lock
xor
jb
sub
sub
and
or
jae
push
add
add
shl
sbb
add
rcr
push
or
add
clc
adc
mov
stc
es
clc
clc
sub
xchg
or
inc
fimul
push
scas
out
dec
je
daa
mov
stc
pop
push
adc
lods
clc
jmp
sbb
jle
mov
mov
xor
pop
outs
push
inc
push
aam
pop
cld
mov
cmp
loopne
loope
in
(bad)
add
lds
nop
retf
pop
js
movs
sbb
rol
sbb
jp
and
cmp
dec
mov
push
mov
push
fs
inc
ds
pushf
dec
push
mov
jo
xchg
sbb
test
das
lods
shl
inc
sbb
jo
xlat
ss
mov
fdiv
push
mov
adc
hlt
cwde
add
mov
cmps
mov
push
cwde
frstor
enter
mov
cs
stc
mov
mov
outs
pop
js
sbb
js
cld
push
mov
push
int3
or
shl
jbe
movs
and
mov
push
movs
pop
ins
mov
jae
or
dec
sub
and
mov
xor
stc
jge
add
xchg
and
push
inc
pop
sbb
jmp
xchg
repnz
lods
cmp
sub
lods
lods
repnz
mov
mov
psubusb
and
icebp
leave
movs
add
xchg
mov
nop
or
mov
cmp
mov
sysenter
loopne
fst
sub
or
mov
scas
xchg
and
in
mov
pop
adc
cmp
cli
jl
ret
je
not
lods
jmp
sbb
ficomp
lahf
je
add
enter
enter
outs
adc
test
fld
ret
lahf
adc
push
push
mov
xor
test
inc
mov
popa
addr16
dec
fstp
int3
pop
(bad)
imul
push
pop
arpl
test
jmp
fsub
sbb
test
loope
je
test
add
mov
xchg
fld
inc
jmp
clc
sub
int3
dec
push
sub
pusha
cmp
mov
test
pop
sub
fild
mov
in
jmp
mov
jg
push
leave
sub
stos
mov
(bad)
dec
push
retf
mov
stos
aas
popa
xchg
in
mov
(bad)
leave
sar
cmp
add
push
jecxz
dec
adc
add
or
lock
add
arpl
and
pop
fimul
dec
in
shl
shrd
jb
inc
movs
(bad)
loopne
dec
(bad)
adc
clc
ja
sbb
dec
add
in
add
pop
and
imul
or
xchg
adc
ds
jmp
test
jne
push
add
mov
les
xor
mov
pop
ret
dec
xor
fstp
pushf
rcl
es
or
je
cmp
shr
sub
jl
cmps
xor
xchg
mov
test
dec
add
in
shl
shl
pop
sub
inc
inc
lahf
in
lods
add
inc
pop
ret
js
adc
inc
push
and
jb
add
inc
or
push
dec
out
cld
mov
leave
leave
add
fs
adc
adc
cmp
sub
or
fsubr
sbb
jns
cdq
add
add
rcr
dec
and
mov
sbb
mov
mov
inc
lods
inc
mov
fisttp
lods
fs
and
add
mov
push
pop
adc
cmc
lea
sub
aaa
pop
pop
neg
mov
pop
jns
rcr
jmp
xchg
jle
mov
or
fsub
and
cmp
pop
data16
pusha
or
sbb
add
clc
rep
jmp
cmp
rol
shl
mov
inc
adc
test
pop
xor
jmp
dec
leave
leave
clc
cld
mov
cmc
fsubr
adc
(bad)
cmps
adc
adc
sub
sbb
std
sub
and
in
mov
mov
test
mov
mov
adc
aad
hlt
fdivr
dec
add
inc
cs
or
int
(bad)
dec
(bad)
bound
dec
add
inc
mov
jo
mov
cmp
jge
je
stos
cmc
cmp
push
rol
xchg
pop
push
mov
cld
mov
ror
sbb
cmp
mov
sbb
adc
add
enter
pop
mov
xchg
and
in
push
test
aam
adc
push
pop
pop
sub
dec
jmp
test
inc
test
fisttp
mov
lahf
mov
xor
fcomip
sub
inc
and
push
sbb
add
pop
ss
add
xchg
pop
add
add
fild
cdq
or
mov
xchg
add
ins
imul
pop
and
or
and
test
inc
enter
jb
inc
add
dec
add
pop
repnz
int3
add
pop
add
sbb
and
imul
cmp
xor
add
pop
bound
ins
arpl
push
pop
push
adc
mov
adc
jmp
mov
imul
xchg
stc
sbb
jecxz
sbb
fisttp
mov
popf
fidivr
out
sub
cmp
shl
mov
mov
je
mov
and
add
or
pop
add
mov
call
aas
inc
mov
push
ja
jmp
or
and
dec
or
xor
push
fucomi
sbb
jmp
jmp
adc
xor
cmp
mov
repz
sub
add
sbb
add
add
cwde
inc
inc
jg
adc
cli
cld
aam
sbb
jg
dec
ins
int3
push
test
fdiv
sahf
mov
mov
push
mov
aas
inc
push
pop
test
mul
dec
aaa
add
test
sub
imul
lods
out
mov
pxor
push
mov
sub
sbb
adc
sub
lea
out
fldenv
xlat
inc
jb
adc
inc
retf
sbb
cdq
push
fs
lahf
dec
js
xchg
adc
push
and
out
sbb
xor
cmp
jae
sbb
rcl
ret
cs
or
and
sbb
ss
add
add
outs
(bad)
and
adc
or
std
sbb
nop
adc
scas
data16
cdq
and
xor
jae
inc
cmp
stc
adc
push
sbb
leave
jne
test
inc
jg
in
dec
lods
lahf
or
adc
fild
jle
lahf
adc
test
and
call
ret
call
in
push
push
sbb
jb
mov
or
sub
in
(bad)
xchg
or
cmc
fbstp
cmp
das
cmp
mov
fbld
mov
lahf
inc
jae
push
clc
and
sti
retf
aas
fdiv
clc
sub
mov
mov
sub
dec
adc
popa
add
add
ja
popf
or
pop
dec
jle
add
adc
sub
or
mov
or
fs
(bad)
or
adc
dec
adc
hlt
and
add
push
adc
or
test
aas
enter
fistp
or
in
mov
shl
mov
dec
test
neg
es
pop
jge
jle
sti
mov
jge
rep
pop
lea
jge
les
lods
sbb
push
xchg
mov
add
ins
cdq
adc
movs
loopne
add
mov
sbb
inc
cmp
lea
gs
je
loope
outs
mov
or
pop
jmp
aad
sub
mov
sub
outs
adc
sub
mov
adc
add
push
push
sub
mov
fcom
daa
fisttp
out
les
movs
cmps
add
mov
push
test
push
mov
dec
inc
add
adc
ret
lahf
push
mov
mov
fwait
add
mov
popa
pop
jmp
xor
adc
dec
aaa
hlt
jmp
jno
pusha
out
mov
shl
add
add
mov
mov
xor
mov
xchg
pushfw
mov
dec
mov
movs
jl
ret
int3
mov
hlt
push
add
mov
sub
lods
fcom
lods
push
mov
inc
push
push
call
pop
mov
push
call
cs
addr16
push
or
lock
jmp
inc
pop
movs
test
ror
or
dec
jecxz
dec
data16
pusha
jg
nop
fwait
adc
jbe
jmp
repz
mov
cmp
leave
pop
mov
or
cmp
aaa
add
pushf
add
mov
xor
or
and
inc
xor
icebp
add
add
cmp
lahf
add
test
bound
jg
aad
add
mov
pop
or
sbb
push
push
or
mov
cmp
aas
dec
jecxz
jp
adc
int3
cld
and
inc
gs
sbb
stos
add
mov
lods
adc
mov
stc
sub
loopne
xor
sbb
xchg
or
inc
adc
mov
sub
inc
add
cmp
push
pop
mov
add
sbb
mov
sbb
add
mov
cmp
test
lock
and
inc
cmp
add
adc
sbb
inc
pop
lods
js
xor
ins
add
aas
and
sub
call
lahf
and
ja
sbb
add
ror
inc
xchg
mov
jmp
es
es
lea
push
add
adc
aas
mov
mov
sbb
dec
jae
in
call
xchg
add
or
hlt
jmp
sub
nop
adc
adc
in
loopne
inc
es
or
push
mov
xchg
sbb
popf
sub
movsx
push
test
(bad)
sbb
and
push
rcr
mov
adc
xor
je
and
std
jge
test
inc
jge
dec
mov
cmp
ins
shl
aam
dec
in
push
cmp
push
rcr
sbb
sbb
and
loope
shl
push
mov
call
xor
in
int3
int3
ror
cmp
mov
dec
sbb
adc
push
push
sbb
xchg
push
sbb
add
jecxz
repnz
xchg
rcr
jne
mov
rcl
and
jae
cmp
or
pop
lods
xor
xor
inc
dec
or
mov
xor
xchg
or
mov
test
adc
cmp
pop
adc
daa
cld
in
xor
xor
add
dec
mov
jmp
inc
adc
mov
les
mov
or
add
add
int3
pop
sub
and
or
out
push
xchg
lgdtd
pop
pop
sbb
jg
mov
je
test
pop
or
mov
test
movs
sub
in
sti
jl
xor
aam
lods
lahf
lods
jle
cmp
sbb
fimul
mov
push
push
cmps
inc
xor
and
je
cmp
aam
jo
mov
sub
xchg
pushf
push
nop
or
je
popa
(bad)
cmp
add
add
test
pop
mov
(bad)
and
pushf
jmp
shr
inc
in
xor
cld
dec
pop
mov
or
mov
mov
or
ja
inc
cwde
pop
lods
dec
dec
stos
aas
cmps
jne
or
lahf
ds
mov
clc
rcr
call
dec
pop
pop
push
and
(bad)
(bad)
pop
or
mov
dec
cmp
lods
jbe
adc
xor
push
les
mov
lea
push
(bad)
ds
push
cmp
sbb
push
pop
sbb
sub
xor
cmps
mov
add
add
and
bound
pop
push
ja
lahf
imul
iret
cmp
pusha
fwait
xor
mov
loopne
add
inc
lds
or
sar
fsubp
and
pop
or
stos
push
stc
push
hlt
hlt
xor
add
jno
sar
aaa
int3
fnstcw
ins
movs
cdq
fadd
gs
sub
inc
mov
bound
hlt
lock
push
xchg
out
ja
mov
or
dec
pop
(bad)
jmp
stc
mov
jmp
push
push
mov
push
xchg
push
jne
pop
in
out
idiv
mov
mov
mov
push
cmp
xchg
pop
lock
bound
ret
fiadd
ret
mov
jb
inc
mov
fisttp
ret
xor
(bad)
icebp
sub
sub
xor
xchg
pusha
pop
sub
add
dec
cmp
test
or
or
fcom
lea
imul
repz
int3
mov
sbb
loope
sub
rcl
mov
loope
lock
lea
mov
mov
inc
adc
fidiv
ja
adc
daa
mov
push
xchg
sbb
ss
inc
xchg
and
call
into
xchg
push
cli
fdiv
popa
mov
(bad)
xor
push
pushf
loope
ficom
sbb
mov
cld
je
out
sbb
int
(bad)
pop
and
je
xor
jg
popa
xor
cmp
je
cmp
push
fld
xor
pushf
push
aas
add
cmp
sub
mov
sub
inc
loope
mov
or
push
ror
pop
mov
pop
aad
adc
in
cld
fstp
nop
rcl
mov
mov
clc
outs
ret
jbe
call
mov
dec
jo
shl
cmp
mov
sbb
mov
mov
pop
push
pushf
pop
fist
aas
cmps
mov
ins
jo
mov
add
or
xchg
sub
(bad)
ffree
fnstsw
mul
aaa
retf
sub
dec
mov
aas
sbb
loopne
ja
mov
mov
inc
rol
fwait
add
cli
xor
and
lods
leave
lock
push
or
mov
repz
push
inc
sub
or
in
and
or
jo
sahf
out
push
loope
pop
jb
mov
loope
fs
cmp
cmp
rol
ins
sub
mov
std
inc
and
pop
cmps
mov
add
or
cmp
jae
push
and
xor
mov
scas
pop
push
retf
call
xor
loop
dec
add
clc
mov
neg
(bad)
js
jl
pop
mov
pop
out
nop
mov
fcomip
test
push
add
packssdw
pop
cmp
fstp
add
rol
sar
pop
aad
add
test
jbe
jo
push
popa
sub
push
mov
mov
pusha
out
sbb
xchg
push
add
sbb
sbb
scas
jmp
push
data16
imul
mov
fmul
or
sar
popf
jge
mulps
std
jmp
mov
push
inc
cdq
mov
jne
lea
cmp
ss
sbb
xchg
xchg
and
inc
sbb
cld
push
mov
cmp
push
je
jecxz
push
jne
scas
adc
(bad)
mov
test
js
cmp
shr
hlt
aas
sbb
movzx
movzx
and
mov
rol
cli
or
mov
clc
inc
push
or
pop
or
pop
jmp
add
push
or
add
xor
inc
add
add
sar
push
sbb
jb
and
add
mov
sahf
or
xor
adc
jmp
or
rcr
leave
stc
lahf
enter
call
and
cmp
mov
add
push
add
inc
jl
clc
adc
mov
push
xlat
clc
pop
fisub
out
and
lock
test
je
mov
icebp
dec
mov
idiv
enter
adc
out
and
sbb
lock
push
pop
push
bound
test
je
mov
push
hlt
cmp
pusha
test
xchg
jmp
cmp
mov
add
fcom
je
out
pop
push
rol
push
cmp
jmp
push
pop
push
aas
mov
mov
pop
push
add
mov
push
push
fistp
xor
inc
mov
rep
popf
dec
mov
dec
sub
cmp
xchg
ror
cld
es
ficomp
scas
out
or
retf
and
mov
repz
sar
or
popf
loop
or
iret
jl
inc
pop
pop
shr
add
pushf
push
push
mov
or
sub
jle
mov
or
and
ins
lock
pop
dec
mov
in
push
mov
xchg
jg
xor
xchg
pop
cld
mov
add
test
add
jl
cmp
sar
jae
fild
add
xor
retf
js
add
jl
gs
test
jmp
add
pop
cmp
cwde
jecxz
pop
test
mov
xchg
xchg
les
loopne
nop
jnp
icebp
(bad)
and
lods
inc
fbld
les
adc
sbb
or
out
(bad)
push
and
mov
sub
push
sub
push
fadd
mov
cs
ja
mul
cwde
lea
or
hlt
les
dec
ror
or
xchg
jp
cmp
call
scas
loopne
adc
or
push
pushf
pop
jo
es
inc
adc
ds
pop
adc
or
cdq
mov
xor
or
xchg
mov
push
retf
push
or
inc
add
movs
stos
fwait
or
or
xor
ficom
jmp
jne
(bad)
or
or
ins
xlat
jae
push
sub
add
and
shl
push
inc
cmp
inc
jl
or
push
cmp
outs
ror
pop
pop
mov
les
ds
jl
sbb
cmp
mov
(bad)
xor
inc
inc
cmp
fild
jmp
clc
loopne
js
cmp
jge
lea
inc
pop
adc
push
xchg
test
push
sub
xor
daa
and
inc
xor
xor
adc
add
cmp
mov
and
push
sbb
loopne
mov
and
inc
adc
jnp
adc
jle
or
or
xlat
ss
or
push
iret
jmp
add
cmp
cs
xchg
sar
dec
test
jg
add
push
add
dec
push
sub
sbb
lea
jmp
(bad)
enter
or
cmc
sub
retf
xor
mov
push
push
sbb
sub
jne
test
sub
ror
sub
lods
push
sub
or
lods
add
mov
hlt
es
mov
push
das
loopne
or
add
pop
jns
fnstenv
dec
sbb
ret
repz
mov
mov
push
add
(bad)
enter
cmps
fmul
jno
ds
iret
push
fs
idiv
pop
jns
jb
dec
or
pop
or
jp
pop
retf
inc
mov
gs
pop
sbb
or
or
test
aam
imul
movs
mov
push
sbb
lock
cmp
mov
inc
loop
or
pop
mov
and
add
jmp
mov
and
dec
icebp
xchg
jne
mov
out
out
mov
jne
cmp
cmp
pusha
cld
setne
mov
call
mov
and
cmp
sahf
lock
out
xor
aas
add
mov
mov
mov
dec
or
xchg
outs
in
pop
lahf
aad
or
add
pop
arpl
cmp
fisubr
in
jo
mov
or
(bad)
cwde
lods
dec
inc
jo
add
fistp
nop
rcr
mov
mov
push
into
inc
ret
pop
xchg
loop
inc
jmp
sar
je
xlat
aam
fmul
test
daa
icebp
cdq
push
push
mov
stos
rcl
cmp
loope
add
mov
mov
mov
test
lds
xor
and
xor
and
je
(bad)
(bad)
(bad)
jle
rol
lock
ret
test
jl
cld
jb
retf
xor
push
xor
fcmove
dec
cmp
adc
std
cld
push
pop
dec
sub
mov
adc
jl
or
ror
stc
dec
(bad)
jbe
cmp
jb
cld
or
jae
ror
cwde
sub
int3
cmp
cld
sbb
and
(bad)
xor
test
lock
int
fiadd
and
in
nop
push
test
out
push
std
es
sahf
push
sub
lea
pop
lea
fwait
idiv
adc
movd
sub
or
(bad)
cvttps2pi
mov
pop
arpl
out
cmps
mov
xor
dec
hlt
inc
hlt
push
pop
adc
sub
outs
jnp
outs
xor
cmp
(bad)
jg
sbb
movs
repnz
sub
inc
adc
ins
outs
and
xor
ins
or
sub
int3
add
mov
mov
inc
push
or
pop
sub
ds
mov
cli
jmp
add
add
ret
ins
inc
add
adc
outs
adc
lock
xor
pop
adc
call
and
sub
jmp
mov
adc
loop
ficomp
jb
rep
or
nop
mov
mov
pushf
jb
add
enter
ss
dec
cmp
lea
int3
cmp
jmp
mov
lods
and
mov
mov
mov
mov
or
xlat
xor
add
mov
popa
(bad)
push
dec
add
add
and
das
or
iret
repz
add
cmp
jns
(bad)
jnp
push
mov
mov
call
out
in
lock
adc
jns
hlt
clc
clc
cld
push
inc
adc
fld
jmp
and
lods
sbb
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
or
stc
or
std
(bad)
cld
out
aam
neg
adc
inc
jno
lea
fsubr
nop
call
mov
add
out
add
out
add
outs
sub
push
add
nop
dec
dec
addr16
add
push
push
test
mov
cwde
mov
sahf
mov
retf
cmp
sbb
out
sahf
out
sbb
adc
or
or
add
or
jns
inc
in
in
push
movs
loop
push
cld
adc
lds
add
ud2
and
shl
pop
das
add
icebp
push
mov
je
rol
mov
and
shr
je
cmp
stos
pop
mov
adc
pop
fist
out
push
dec
and
push
jg
shl
or
lahf
out
jge
jbe
jle
xor
jg
jg
fdivr
aas
jg
jo
mov
lea
cs
mov
jp
in
add
pop
lea
loope
shl
inc
out
pop
push
inc
add
and
push
pop
fdiv
mov
cli
test
mov
in
repz
xor
je
add
push
idiv
adc
add
mov
mov
shr
retf
ret
mov
mov
shr
add
shl
sub
test
inc
jmp
aaa
cmps
cs
push
rcl
out
ret
pop
inc
test
mov
xor
push
push
fadd
inc
iret
push
dec
and
inc
call
ret
cld
sub
dec
inc
aas
inc
pop
and
inc
out
out
mov
iret
or
push
mov
mov
jns
movs
pushf
xchg
mov
pop
xor
fadd
lock
cld
mov
inc
aas
je
sub
js
mov
nop
mov
lods
push
aam
aas
or
jb
inc
je
out
out
mov
sub
push
cmp
lock
dec
push
pop
imul
aaa
ret
add
or
clc
mov
aas
xor
pusha
push
aad
push
push
mov
js
cmps
popa
lea
push
add
(bad)
jg
mov
pop
sbb
pop
inc
pop
shl
xor
jmp
or
or
push
sub
mov
push
pop
and
jmp
xor
aam
push
inc
aaa
xchg
jne
pop
sar
dec
or
jns
pop
in
add
xor
aaa
stos
lock
(bad)
mov
fcom
jo
sar
out
inc
add
mov
sub
in
jg
test
cs
arpl
in
fbld
loope
adc
cmp
je
dec
scas
mov
addr16
jg
js
add
into
in
shl
xchg
add
or
daa
add
sub
sbb
popa
icebp
test
adc
push
inc
push
inc
mov
inc
mov
gs
add
loop
sub
mov
clc
pop
add
int3
cld
ret
push
inc
dec
or
test
or
mov
aam
retf
pop
or
add
shl
mov
push
push
and
cmp
inc
cmp
and
inc
mov
(bad)
inc
addr16
jne
fist
sub
push
dec
fist
cmp
in
mov
jle
scas
dec
xchg
fdivr
xor
sub
lea
mov
rol
jbe
stos
dec
sbb
test
xchg
pop
mov
mov
outs
add
adc
mov
loope
fadd
jb
push
push
mov
dec
imul
inc
adc
ds
sar
push
sub
sbb
leave
je
lea
add
in
push
mov
xor
cmp
pop
mov
leave
or
adc
push
jmp
pop
retf
sub
sub
scas
gs
mov
xor
push
jo
push
je
inc
pushw
jecxz
mov
daa
rcl
hlt
sub
and
lods
pusha
fcom
mov
les
mov
pop
adc
fcomi
cmp
sub
add
mov
add
xor
test
dec
push
imul
lahf
ror
jbe
fstp
inc
add
enter
add
push
xchg
das
dec
add
adc
jnp
call
leave
dec
rcl
cmps
xor
cmp
je
and
pushf
adc
or
add
retf
or
push
mov
pop
movs
test
or
out
add
or
or
es
or
or
or
or
pop
cmps
(bad)
or
cmp
adc
shr
and
test
adc
push
cmp
adc
or
mov
xchg
adc
cmp
push
xchg
adc
jae
adc
push
adc
test
call
xor
adc
rol
adc
cmp
pop
imul
sbb
sbb
inc
push
sbb
sbb
push
sbb
in
pushf
inc
in
add
sbb
retf
add
sbb
push
mov
sbb
add
cmp
push
and
nop
add
pop
in
(bad)
jg
xor
fld
icebp
add
cmp
jae
lock
pop
loopne
add
pop
pop
ja
inc
pop
inc
add
in
ins
sbb
xor
add
inc
in
sbb
out
out
add
cmps
loopne
jns
sub
call
call
es
jmp
add
jmp
add
cmps
loop
in
in
in
dec
mov
jmp
in
nop
adc
or
daa
jno
out
out
ss
gs
lock
push
icebp
xchg
icebp
and
in
cld
add
repnz
pop
dec
fiadd
repz
hlt
xor
xchg
or
hlt
jmp
cmc
cmc
repnz
rol
pop
mul
iret
in
inc
add
test
add
clc
clc
enter
jmp
stc
and
and
int
sub
adc
pop
dec
stos
add
sti
aaa
ror
add
cld
je
and
sbb
fdivr
cmp
pop
enter
(bad)
(bad)
and
test
or
push
imul
pop
js
cmp
jecxz
fidiv
push
jecxz
shl
cmp
push
cmp
pop
cmp
es
jno
nop
cmps
loop
push
out
out
cmc
outs
add
call
aaa
and
push
add
push
dec
adc
(bad)
jmp
pusha
add
jmp
jmp
loop
in
push
mov
or
dec
push
sub
inc
out
out
out
loop
cdq
pusha
jmp
xor
adc
xlat
aaa
rol
push
sub
lods
std
repz
jg
inc
hlt
or
sub
div
adc
add
div
jmp
loop
dec
out
push
lds
mov
inc
dec
push
imul
cld
sti
sti
lea
sti
jmp
or
inc
cld
arpl
scas
sub
popa
or
jp
push
sub
(bad)
push
push
or
push
lock
loop
in
dec
adc
xchg
sti
jecxz
jecxz
jne
or
mov
jmp
push
dec
lds
xor
addr16
out
mov
jmp
cmc
or
mov
inc
lock
xchg
cli
jmp
jmp
imul
inc
cli
push
enter
sub
xor
cmps
mov
out
int
stc
lock
or
int
out
inc
sub
enter
jmp
mov
idiv
mov
cmps
nop
out
cmc
sar
div
test
stc
mov
inc
sub
push
repnz
das
cmps
jb
loope
pop
cmp
cli
enter
cli
cli
jmp
xlat
sti
int
mul
inc
dec
int
mov
dec
data16
data16
movs
sub
stos
pop
imul
add
loope
or
loope
popa
loop
and
neg
push
lods
xor
sub
sub
inc
sub
in
scas
outs
test
test
lods
xchg
lods
xor
sub
inc
fadd
push
and
imul
cmc
cmp
in
leave
cmc
or
movs
cmc
mov
jp
cli
dec
xor
lods
pop
sub
mov
icebp
xor
xchg
icebp
mov
lds
sub
dec
scas
pop
ins
inc
call
movs
pop
add
dec
and
sub
nop
clc
add
stc
in
add
in
(bad)
repz
(bad)
fist
xor
push
add
lods
sub
ja
or
out
jle
mov
cmp
mov
int3
inc
pop
and
(bad)
lock
test
add
icebp
add
inc
cmp
in
loopne
lods
dec
sub
jnp
add
lods
jne
js
lahf
add
in
lea
or
inc
add
out
pusha
cmp
jmp
xchg
hlt
and
and
xchg
in
cmp
bound
and
xor
dec
push
fld
dec
push
push
mov
in
int3
push
push
out
sahf
data16
sbb
cmp
ss
int
pop
mov
popf
dec
movs
push
jmp
push
push
push
mov
int
mov
dec
ja
mov
dec
sahf
out
ss
and
xor
repz
ret
scas
xor
sbb
pop
not
xchg
test
xchg
andnps
dec
mov
jmp
imul
test
je
ss
ror
es
clc
push
adc
fcomp
outs
clc
mov
(bad)
jae
sub
push
or
push
rcl
inc
popa
mov
cwde
movs
push
sub
enter
mov
and
icebp
jne
cmp
xor
mov
push
adc
push
sbb
mov
xor
out
and
push
pop
mov
test
rcl
sbb
mov
mov
push
jecxz
mov
add
repz
mov
jbe
in
or
shl
ja
jno
add
jle
push
jb
adc
push
push
lds
add
mov
enter
lock
sbb
push
pop
cmp
mov
je
push
cdq
jne
jmp
out
sbb
jbe
mov
movs
pop
jmp
inc
(bad)
xor
pop
or
jo
(bad)
mov
sbb
inc
and
popa
or
pop
or
pop
dec
cmp
lds
add
mov
stc
cmp
jb
neg
fimul
ror
pop
mov
mov
cmp
ror
retf
fstp
scas
push
rep
or
gs
fdivr
out
pop
ret
or
xor
add
cmp
arpl
sete
hlt
test
jns
enter
rol
mov
inc
jmp
adc
out
pusha
sbb
inc
fcomp
fwait
pop
lods
fwait
shl
iret
popf
xor
in
lock
mov
ins
lods
inc
xor
push
rol
inc
je
or
push
jge
aaa
adc
mov
jmp
bound
push
add
nop
sub
push
push
pop
inc
pop
mov
outs
loopne
call
mov
test
ja
ja
je
dec
push
and
mov
outs
and
stos
call
call
cmp
mov
sti
out
or
cmp
mov
cmp
xor
inc
out
and
(bad)
sti
mov
and
sbb
sub
sar
pop
inc
add
or
ins
jmp
push
or
wrmsr
mul
out
adc
push
push
test
pop
cwde
popf
mov
xor
inc
aad
outs
fcmovnb
jb
cmp
aam
cmp
mov
pop
jae
mov
popf
stc
fcom
arpl
pop
or
lea
loop
mov
and
jne
ss
and
push
pusha
mov
fstp
pop
cld
test
jne
pop
mov
aam
rol
je
or
jmp
stc
inc
loopne
and
add
(bad)
fisubr
and
jne
ins
pop
sub
cdq
loop
loop
test
inc
and
je
add
or
inc
and
dec
add
push
or
stos
cmps
and
push
jmp
hlt
cwde
enter
test
rcl
mov
arpl
dec
sub
push
mov
or
pop
inc
adc
inc
or
mov
not
sbb
push
(bad)
div
cmp
ja
cld
ss
xor
scas
sti
not
xchg
mov
or
sbb
arpl
les
adc
push
mov
adc
je
mov
xor
(bad)
pop
ror
mov
xchg
jo
adc
clc
push
pop
ss
aam
cmp
push
or
and
push
fadd
push
pop
cmp
jb
pop
loope
pop
into
jne
sbb
xchg
pop
imul
jbe
or
ins
adc
ret
cdq
xor
pop
ja
or
(bad)
(bad)
dec
cmp
pop
cs
div
sub
sar
fsubr
loope
mov
jmp
dec
sbb
leave
jg
push
adc
call
sub
sbb
xchg
rol
aaa
adc
jecxz
scas
call
stos
and
push
mov
and
inc
mov
ret
inc
rcl
sbb
je
mov
adc
cmp
jmp
stos
test
sub
pop
inc
outs
test
in
jno
mov
stc
shl
jecxz
lock
imul
shr
dec
sub
inc
and
loope
mov
test
push
and
lahf
lahf
loopne
push
repnz
or
fcom
loopne
cmp
les
out
aam
into
inc
jb
std
data16
add
inc
mov
dec
pop
sub
sbb
out
icebp
and
mov
and
push
and
dec
dec
nop
out
pushf
push
shl
jmp
mov
sbb
inc
adc
and
dec
pop
lea
and
inc
sub
in
jp
or
shl
or
fwait
jno
jb
icebp
pop
xchg
mov
lea
push
pop
les
push
mov
ficom
inc
jmp
or
dec
push
adc
cmp
movs
dec
fisubr
ud1
outs
pop
test
or
jb
pop
jae
and
ss
xchg
add
or
push
aas
push
adc
cmp
cld
inc
scas
test
xchg
jo
fisub
pop
pop
add
or
test
xchg
jnp
push
sub
cld
jne
dec
outs
(bad)
xor
or
fdiv
adc
pop
inc
out
xchg
jb
les
and
jl
adc
xchg
pop
test
aam
int
outs
cld
ins
jmp
test
adc
outs
or
test
sbb
clc
ret
push
jne
(bad)
and
in
pop
xor
push
or
add
aad
or
cmp
sbb
mov
dec
into
push
push
add
in
in
and
dec
call
les
add
xor
test
jo
push
adc
sti
mov
mov
inc
jne
or
add
cmp
sub
mov
jbe
dec
xchg
lods
fstp
or
dec
add
mov
dec
or
cmps
push
ficom
jo
xchg
or
pop
jmp
ja
xor
adc
push
add
clc
push
inc
and
or
pop
call
ret
mov
cmp
ror
mov
xchg
dec
repnz
int3
cmps
mov
aas
sbb
fcomp
das
or
adc
rol
test
and
mov
pop
sbb
pop
cmp
fild
and
cmp
inc
push
adc
xchg
ins
jbe
jno
mov
cmp
jne
data16
in
test
pop
pop
or
movs
(bad)
bound
fs
adc
xrelease
sbb
mov
aam
aam
sub
lahf
mov
loop
pop
adc
xor
jno
pop
sbb
nop
cmp
xchg
jecxz
push
mov
dec
pop
test
mov
push
shr
(bad)
mov
adc
cmp
dec
or
push
sub
inc
xchg
dec
mov
add
push
aaa
jne
or
out
out
inc
fcomp
test
test
outs
sub
jg
push
push
iret
mov
pusha
pop
fcomp
ret
add
in
ror
adc
push
jb
daa
push
mov
ret
add
ret
retf
je
mov
mov
fnstenv
jne
sbb
adc
add
or
jge
or
add
arpl
shr
(bad)
jne
pop
ret
push
in
or
retf
mov
std
stc
xor
xor
inc
add
loope
jns
xlat
sub
xor
je
shr
adc
xchg
outs
mov
add
enter
(bad)
jp
(bad)
pop
or
cld
ins
adc
cmp
inc
xor
cmp
(bad)
adc
fsubr
rol
and
pop
adc
mov
adc
or
jmp
cmp
push
mov
add
stc
and
loop
cmp
movs
fst
in
lea
sbb
sbb
jg
dec
stos
push
sbb
data16
shl
add
jmp
pop
ins
fild
or
je
(bad)
jmp
dec
adc
pop
pop
cwde
pusha
jae
(bad)
cmp
or
push
dec
ins
cmp
jbe
pop
xor
repnz
jo
les
fst
inc
mov
icebp
rol
pushf
sub
(bad)
push
xchg
in
int3
pop
push
xchg
inc
mov
movs
jle
bts
cmps
shl
jmp
add
ss
mov
xor
push
test
in
and
jo
xchg
sub
mov
test
push
pop
adc
add
push
push
push
or
scas
daa
or
iret
push
xchg
cmp
aas
sbb
push
and
or
loopne
inc
or
mov
icebp
dec
jmp
in
cmp
aas
sbb
loopne
movs
lods
aam
or
daa
sbb
nop
mov
add
or
or
je
mov
cdq
int3
mov
xchg
aam
lock
loopne
leave
movs
xor
retf
das
add
push
push
cmc
adc
fs
mov
mov
or
sub
jle
dec
or
js
call
sub
into
push
in
lods
dec
adc
adc
or
jbe
imul
inc
mov
dec
or
pusha
inc
mov
ffreep
into
data16
xor
inc
and
pop
ins
repnz
push
or
add
mov
mov
das
scas
jne
es
outs
mov
pop
push
adc
out
jmp
or
adc
test
imul
loopne
mov
jae
call
lock
sahf
or
clc
sbb
rcr
push
mov
retf
inc
add
ds
aaa
imul
mov
out
push
xlat
or
shr
mov
inc
enter
xchg
aam
push
add
leave
cmp
sbb
jne
mov
add
pushf
ins
fild
enter
in
add
adc
pop
push
enter
push
fcomp
and
pop
push
in
mov
gs
ins
add
call
cmps
cmp
fwait
adc
add
clc
push
cmp
or
pop
mov
or
pop
enter
int3
in
dec
loopne
stos
mov
mov
mov
jae
(bad)
push
cmps
dec
adc
dec
push
inc
jp
ret
mov
inc
fs
mov
cs
cwde
aaa
dec
stos
out
idiv
cmp
jge
cmp
or
inc
pop
call
imul
xchg
das
movs
cmp
js
ja
cmp
jbe
xchg
jb
ins
aad
pop
fidiv
pop
std
push
lea
sbb
fldcw
inc
or
ins
fisub
loopne
sbb
pop
ret
lock
push
sbb
popf
jne
push
addr16
sbb
mov
sub
inc
aaa
std
inc
inc
add
cmp
push
clc
mov
out
inc
push
into
lock
push
mov
cwde
dec
add
and
jge
daa
jnp
sti
mov
adc
push
mov
popa
ins
xchg
lock
aad
enter
cmp
add
xchg
xor
rcr
test
lods
shr
xchg
or
push
xchg
and
inc
rcr
dec
stos
rcl
mov
push
or
clc
mov
jmp
pop
jg
push
push
aas
pop
dec
add
cld
adc
clc
(bad)
jb
mov
mov
push
add
add
outs
pop
inc
mov
pop
int
add
fcomp
popa
push
push
xor
pop
xor
mov
test
(bad)
push
mov
push
or
loope
fs
test
je
add
adc
ret
mov
add
fild
push
push
dec
out
sbb
push
mov
data16
gs
or
or
pop
add
fsub
outs
addr16
lods
push
in
es
add
outs
push
shl
ret
add
push
sub
ins
adc
or
and
push
clc
aaa
or
test
jp
pop
push
loope
ror
mov
out
aam
clc
push
fmul
imul
adc
adc
js
dec
ret
push
xchg
retf
xchg
je
pop
lods
fcomp
pop
cmp
push
mov
pop
push
scas
push
pop
daa
push
or
call
out
fcomp
lods
inc
cmp
mov
in
add
(bad)
loop
push
push
mov
add
mov
jge
lds
pop
pusha
std
pop
push
inc
lock
mov
or
push
(bad)
ror
gs
mov
sub
daa
loope
sbb
jle
imul
cmc
mov
sbb
popf
adc
pop
shr
sbb
xchg
inc
pop
xchg
mov
add
push
sbb
jno
cmp
fwait
push
xchg
nop
mov
rcr
or
cli
data16
scas
push
mov
mov
push
or
mov
cmc
sar
adc
push
xor
dec
jmp
inc
cmp
stos
jo
jmp
adc
test
push
scas
adc
cmp
cmc
into
add
push
jb
aas
lods
shr
add
sub
je
jle
or
test
shl
loopne
dec
out
jae
or
jnp
mov
inc
ret
push
in
test
and
adc
and
add
adc
sbb
and
outs
or
movs
jo
jmp
mov
xchg
dec
mov
add
add
xchg
dec
add
add
repz
xor
cmp
sub
sbb
jmp
mov
xor
je
xor
or
push
xor
aas
push
xchg
mov
loopne
fmul
in
mov
in
push
sgdtd
or
push
lea
cmp
jne
push
push
dec
lock
retf
xor
sti
mov
sub
mov
and
in
test
inc
(bad)
aam
pushf
jmp
pop
stos
cmp
adc
movs
pop
call
in
pop
mov
mov
inc
cmp
mov
push
mov
lock
mov
clc
add
mov
add
fdivr
xchg
cmc
inc
cmp
push
inc
push
sti
push
sbb
xchg
iret
add
mov
addr16
mov
int3
push
pop
aam
(bad)
shl
xor
pop
out
je
mov
xchg
(bad)
mov
and
mov
int
push
shr
cmp
inc
cmp
jle
into
cmp
fstp
dec
cmp
shl
add
cmp
mov
adc
push
jge
mov
jnp
out
mov
jmp
pop
jg
call
in
test
sbb
or
aaa
adc
outs
lock
lea
or
clc
mov
jo
pop
sub
in
into
cmp
jp
out
ret
push
push
mov
mov
jg
push
lea
adc
cmps
arpl
mov
pop
in
jbe
dec
cmp
(bad)
push
mov
xor
enter
cwde
enter
int3
add
(bad)
push
mov
mov
nop
movs
mov
icebp
or
mov
xchg
xor
lahf
aam
je
es
dec
fisubr
pushf
aam
push
loopne
in
xchg
inc
retf
mov
pop
jmp
xchg
push
mov
sahf
and
aad
dec
in
(bad)
stc
adc
inc
adc
js
popf
in
out
dec
or
xor
pop
fistp
adc
stos
sub
sub
and
dec
or
xchg
inc
and
jg
(bad)
dec
cmp
lea
jl
cmp
and
repnz
pop
js
inc
enter
jo
sub
sar
cmp
in
mov
mov
inc
jle
cmp
mov
mov
bt
lods
sbb
cmp
push
ret
or
ret
in
lods
sub
fstp
inc
ret
(bad)
cmp
cmp
(bad)
cmps
push
out
add
out
xor
xchg
icebp
jne
cli
push
push
(bad)
fisub
add
push
inc
pop
jge
jnp
in
test
pop
dec
and
div
add
stc
jg
jne
stos
ror
add
sub
mov
lea
mov
jge
test
je
mov
mov
pop
sub
cmp
inc
(bad)
push
inc
and
je
leave
xchg
jl
inc
sbb
jmp
and
push
push
ret
mov
clc
push
cmc
call
aas
mov
lea
imul
mov
lahf
rol
mov
jo
pusha
(bad)
adc
test
dec
arpl
xchg
mov
xchg
mov
(bad)
neg
jne
add
clc
shl
push
es
add
fimul
or
or
or
jmp
ret
sti
jae
pop
add
xchg
cmp
sub
xchg
out
and
mov
outs
inc
xchg
iret
(bad)
int3
pop
popa
rol
aad
lods
clc
sbb
je
jl
or
xchg
cmp
shl
or
test
arpl
loopne
push
push
sahf
loope
add
cmp
cmp
and
pop
xchg
clc
repz
mov
inc
mov
arpl
daa
or
loop
jp
mov
sbb
xchg
mov
sbb
loop
lods
shl
add
inc
sbb
das
or
(bad)
adc
and
sub
and
mov
and
push
push
jmp
aad
imul
xchg
xchg
das
cmp
mov
pop
and
sbb
mov
aaa
pop
add
stos
jne
inc
inc
adc
jecxz
cmp
or
jb
(bad)
and
jne
sub
jbe
xor
pop
cmp
lea
cwde
lods
cmp
xor
push
cmps
aas
aam
add
jg
movsx
mov
mul
or
mov
mov
inc
or
aas
mov
(bad)
mov
adc
dec
ds
jle
jbe
push
push
or
dec
(bad)
inc
or
push
sub
xchg
or
ss
out
cmp
push
push
push
xor
jno
or
test
jne
sub
mov
stos
or
outs
mov
pop
add
shl
int3
cmp
jns
cmp
jle
or
ds
xchg
aas
and
sbb
inc
add
ror
lds
sub
xchg
or
jb
in
dec
sbb
mov
adc
aad
add
or
mov
and
push
cwde
adc
jae
sbb
jo
mov
ss
jne
push
fcom
lods
les
ss
popa
rcl
inc
ret
pop
imul
inc
and
pop
int
cmps
dec
inc
adc
stos
aas
pop
inc
push
lods
aas
pop
push
or
cmp
ret
ins
sbb
bound
sbb
cmp
mov
push
pop
lea
jp
jg
hlt
push
fadd
outs
inc
jle
lock
jmp
jl
cmp
jl
sub
sbb
xor
test
int3
cmp
or
or
push
or
pop
fucom
push
mov
adc
retf
cmp
cld
mov
rol
xchg
aam
and
(bad)
fiadd
xchg
jb
add
test
xor
ins
mov
in
out
mov
ins
and
mov
jnp
test
jg
inc
xor
cmp
jle
inc
shr
je
outs
fsub
dec
or
xor
dec
mov
out
hlt
sbb
sar
jp
enter
imul
out
xor
jbe
and
xor
push
fs
jmp
cmp
jae
sub
xchg
jmp
std
pop
pop
or
cmp
xchg
sbb
out
cmp
push
stos
fdivr
or
dec
loop
inc
ins
pop
xor
jo
sub
add
jmp
fsub
inc
xchg
int
and
inc
dec
sub
in
cmp
push
sbb
sub
ror
and
int3
loopne
or
mov
daa
inc
xor
aaa
popa
nop
addr16
shl
xor
lock
jbe
mov
mov
test
clc
mov
add
je
adc
cmp
xchg
cld
jae
fistp
jl
sbb
pop
and
jb
cmp
(bad)
js
pop
lds
pop
dec
or
pop
or
hlt
bound
push
jmp
jp
jmp
and
clc
ret
inc
retf
cmp
xor
pop
inc
cmp
push
or
mov
push
mov
adc
add
mov
pop
(bad)
mov
loopne
aaa
iret
xor
(bad)
les
out
into
ss
daa
fcos
ror
test
adc
or
cmp
cmps
jmp
add
sbb
rol
emms
pop
and
je
push
lock
addr16
lods
jb
xor
dec
dec
inc
loopne
sub
push
inc
rcl
and
push
jne
pop
loop
push
cmps
xor
cmp
push
shl
rol
add
jecxz
mov
retf
lea
outs
jg
pop
cmp
jl
or
jg
outs
rcr
loopne
jl
hlt
clc
adc
fst
add
pusha
cmp
jne
inc
add
add
cmp
test
loop
lea
rcl
cmp
into
cmp
push
lock
loop
adc
add
add
lock
enter
jle
mov
mov
sub
test
mov
adc
sbb
adc
repnz
lods
push
hlt
(bad)
outs
and
jmp
mov
inc
scas
pop
icebp
lods
dec
cmp
jl
(bad)
mov
fistp
in
mov
sbb
adc
pop
lock
and
jno
add
cmp
mov
adc
(bad)
sbb
ror
into
out
cmp
push
adc
lods
mov
mov
jmp
lea
add
jecxz
ret
push
push
push
xlat
jge
and
dec
je
dec
jne
push
inc
adc
sbb
jl
push
into
pop
and
or
or
pushf
mov
std
mov
ss
jno
jp
mov
jp
and
dec
sti
jmp
cmp
adc
add
dec
add
pusha
xor
and
push
jge
js
pop
test
mov
sub
ret
jo
adc
dec
mov
cld
adc
les
movd
pop
jo
inc
push
pop
mov
pop
imul
pusha
jle
out
push
sbb
push
add
mov
mov
inc
mov
adc
mov
aas
cmp
cdq
das
aaa
jmp
cmp
add
push
cmp
push
xchg
push
neg
sbb
cmp
add
sub
and
xchg
jl
and
pop
sbb
push
jmp
cmps
ss
dec
push
sti
sub
sub
push
push
jae
mov
sub
mov
inc
inc
js
and
adc
xor
loope
lock
jo
out
in
or
sbb
paddusw
je
xchg
and
loope
jo
test
push
adc
push
mov
cmp
jmp
add
arpl
out
jge
or
in
(bad)
xchg
loopne
jmp
or
jg
ffreep
nop
and
clc
imul
xor
mov
inc
mov
cli
aas
stos
jne
cmp
je
cmp
aas
sbb
(bad)
jb
test
sub
fist
data16
cmp
cmp
loopne
ret
push
push
pop
jmp
inc
mov
jne
adc
push
mov
jne
cmp
jb
cmp
jbe
inc
sbb
mov
movs
into
push
mov
adc
je
dec
pop
mov
jo
pop
das
xor
sbb
(bad)
jge
ja
cmp
add
movs
rol
mov
xor
xchg
pop
(bad)
xor
ret
inc
pop
test
ret
scas
test
and
pop
add
repnz
test
sbb
in
in
pop
jnp
or
mov
mov
adc
sub
stc
dec
cmp
retf
fucomip
jle
pop
or
(bad)
add
rcl
mov
js
outs
xlat
ror
es
mov
xchg
fsub
push
push
jnp
dec
je
lahf
dec
imul
adc
dec
inc
mov
test
maxps
sar
cmc
sahf
jp
adc
add
push
inc
or
mov
shl
clc
mul
leave
inc
or
pop
fcom
jl
in
fist
adc
sub
and
xor
push
xchg
jno
fiadd
mov
inc
ficom
mov
xchg
xchg
cwde
mov
imul
mov
jle
or
clc
mov
scas
inc
or
icebp
(bad)
in
xchg
mov
ja
push
pop
push
sub
enter
shr
push
ja
mov
and
xor
add
aaa
fst
dec
xor
jne
xor
cmp
pop
es
sbb
dec
mov
jo
pop
es
test
sub
add
js
and
pop
sbb
ret
icebp
enter
stos
xor
xlat
xor
es
and
ror
ror
fidivr
cli
dec
movs
pushw
adc
xor
mov
pop
add
int
ret
aad
or
call
cmps
rcl
xchg
loop
icebp
sbb
inc
mov
cmp
xor
cmp
sub
sbb
cwde
call
mov
test
retf
ret
out
(bad)
cld
add
push
ret
push
mov
sbb
sub
dec
ja
fcmovu
add
into
ret
js
lds
xchg
icebp
xchg
push
test
pop
xchg
push
pand
add
xor
addr16
xchg
iret
in
adc
xchg
out
repnz
test
mov
push
mov
adc
add
pop
lahf
pop
add
push
cmps
mov
jnp
dec
fild
in
pop
jmp
add
cmp
outs
and
call
sbb
cmp
leave
mov
or
or
lea
push
xchg
and
or
test
mov
sbb
in
leave
mov
ins
or
xor
xchg
loopne
rcl
enter
jns
mov
jo
div
pusha
push
add
push
push
je
faddp
add
add
push
xor
scas
push
push
push
and
addr16
mov
pop
and
(bad)
mov
sbb
popa
and
nop
retf
js
test
adc
int3
sbb
xor
xchg
in
clc
and
sub
sbb
and
add
sub
xor
xchg
pop
xor
sbb
call
jno
inc
mov
and
gs
nop
retf
lock
sub
add
cmp
mov
pop
pop
pop
xor
xchg
add
sbb
pushf
push
lods
ins
pop
mov
jo
(bad)
cld
mov
jo
leave
jae
fist
clc
sub
cmp
jg
sbb
mov
fbstp
push
xor
daa
fcomp
jae
enter
loopne
mov
dec
or
sub
or
js
sub
jo
test
pop
cmp
lock
dec
loopne
mul
inc
mov
sbb
mov
xchg
pop
push
add
ror
inc
add
mov
pop
std
push
mov
imul
std
add
loop
add
add
add
fldenv
sbb
daa
cmc
xor
adc
or
jo
aas
adc
fwait
mov
adc
clc
je
sar
dec
jmp
sbb
and
shl
or
test
ret
pop
pop
sub
sub
fadd
xchg
sbb
cmp
inc
and
in
or
and
test
cmps
out
adc
enter
sub
cmp
mul
mov
cmp
fs
add
loope
rcr
es
adc
sbb
out
ins
mov
push
adc
jae
scas
sbb
and
repz
mov
shr
rcr
or
jne
div
mov
mov
mov
add
jb
cmp
or
cmp
add
out
dec
cmp
sub
outs
leave
mov
sbb
sub
mov
sub
test
jns
icebp
fwait
or
pop
and
add
into
jle
data16
xchg
jns
xor
mov
ret
sar
push
je
mul
jp
ror
ret
adc
xchg
pop
jle
jle
pushf
enter
ja
cmc
in
jae
mov
push
pop
cmp
dec
inc
ror
mov
jne
test
jg
lock
int3
mov
jo
xor
push
adc
call
idiv
xchg
lods
xchg
ins
std
sub
or
inc
add
scas
mov
xchg
inc
jecxz
xor
adc
pushf
jae
ror
gs
inc
add
cmp
jl
push
(bad)
mov
fadd
pushf
inc
movs
sub
nop
push
and
lea
pop
jg
mov
sbb
add
sbb
add
inc
jecxz
and
int3
push
pop
xor
xor
mov
stos
and
cmp
adc
add
jge
or
push
pop
jmp
pop
(bad)
clc
push
pop
push
jmp
or
pop
sub
add
adc
and
call
jb
or
push
xor
mov
xor
rcl
mov
dec
push
das
sar
or
in
push
or
shl
movs
ret
sub
rcr
add
(bad)
inc
or
add
rcl
pop
loope
pop
push
jl
adc
out
adc
mov
mov
ret
lea
adc
mov
push
adc
das
popf
pop
aas
aam
test
cli
push
push
add
test
mov
cs
dec
out
jg
sub
call
mov
xor
int3
sub
sub
test
xchg
push
mov
fcomp
sub
pop
cli
and
adc
pop
mov
loop
sub
pop
or
lsl
sbb
or
pop
hlt
adc
movs
cwde
(bad)
xchg
pop
pop
icebp
sub
dec
xor
jnp
xor
mov
pop
adc
jae
xchg
(bad)
je
push
jle
pop
sbb
into
xor
sub
das
pop
sub
pop
test
inc
add
and
cdq
adc
push
shr
in
inc
cld
mov
stos
mov
push
es
cmovo
push
out
push
sbb
sbb
xor
mov
mov
mov
jle
push
dec
cmp
adc
mov
call
mov
mov
xchg
add
adc
push
pop
adc
in
enter
pop
and
pusha
shl
scas
(bad)
data16
pop
(bad)
sub
add
daa
xchg
test
inc
jmp
ret
jmp
rcr
add
ss
gs
arpl
ror
xor
cmc
aad
and
jg
(bad)
mov
fsubr
cmc
add
xchg
and
(bad)
dec
lods
test
push
je
add
xor
and
cmp
jne
aad
push
mov
es
mov
push
jo
lods
push
mov
pop
sub
gs
jae
cmp
and
rcr
enter
jae
xor
push
imul
add
add
sbb
daa
xchg
pop
dec
add
popa
and
pop
add
mov
mov
and
sub
test
push
inc
pop
sti
scas
loopne
mov
inc
jl
cmp
jp
ror
fs
cmc
sub
stc
pop
les
inc
xor
and
xchg
test
add
push
imul
and
xchg
cmps
lfs
mov
sub
ins
push
mov
xor
sbb
add
pop
dec
int
xchg
push
test
imul
add
and
or
imul
sbb
cmp
inc
and
inc
repnz
xchg
retf
dec
dec
cmp
pop
xor
or
int3
ret
sbb
xor
pop
mov
aam
stos
sahf
mov
js
cmp
(bad)
jbe
and
lods
pop
cmp
lods
adc
js
mov
sub
push
dec
pop
add
dec
xchg
sbb
push
pop
or
push
dec
movs
sbb
loopne
pop
imul
ret
clc
test
inc
push
lock
dec
dec
xor
dec
mov
dec
cmp
lahf
pop
and
dec
add
(bad)
retf
pop
push
push
xor
add
pop
lds
cdq
push
icebp
xchg
adc
push
push
inc
pop
mov
xor
ror
test
jl
(bad)
pop
das
push
jp
push
xlat
les
inc
ins
and
push
bound
int
pop
arpl
or
jns
xlat
popa
or
push
not
mov
hlt
adc
mov
mov
and
jecxz
arpl
sbb
mov
push
jae
packsswb
or
(bad)
das
(bad)
in
cmp
jne
js
jl
or
jecxz
popf
idiv
xchg
outs
inc
test
(bad)
adc
pusha
and
sub
inc
cdq
les
mov
adc
mov
outs
add
out
push
or
xchg
jno
in
inc
jae
xor
nop
mov
push
or
mov
jnp
jecxz
adc
add
std
rcl
pop
push
inc
or
sti
add
xchg
xchg
iret
pop
adc
bound
mov
dec
in
or
mov
pop
shl
mov
adc
ficomp
cmp
neg
sbb
mov
ins
jg
ss
adc
jns
jmp
sbb
push
dec
ret
aaa
cld
pop
mov
mov
inc
mov
pop
jmp
icebp
scas
loop
fadd
ror
dec
push
enter
movs
ss
dec
cwde
and
add
pushf
(bad)
push
or
repnz
aas
add
rcl
add
xor
xchg
sub
fs
cld
add
ja
lock
xchg
call
repnz
shr
add
mov
shl
mov
dec
cmp
sbb
mov
mov
and
sbb
adc
jb
sbb
clc
adc
xlat
and
add
icebp
int3
xchg
and
fs
cmc
gs
adc
and
call
nop
sub
or
sti
jb
idiv
pop
xchg
push
push
lock
dec
sub
fdivr
dec
in
(bad)
adc
jne
cmp
je
sahf
fchs
dec
pop
cld
mov
clc
jmp
push
push
xchg
into
gs
and
inc
adc
cwde
cwde
dec
sub
and
arpl
mov
sbb
adc
fcom
jmp
je
sbb
xor
nop
ins
push
mov
mov
inc
add
mov
jae
shl
les
inc
add
jns
mov
jp
push
mov
test
call
mov
unpckhps
xor
adc
pop
dec
inc
inc
neg
inc
add
adc
mov
jo
das
inc
add
mov
ss
mov
pop
outs
loop
sti
push
mov
or
pop
ret
push
inc
jns
mov
sysexit
pop
inc
sub
xor
int3
test
mov
sub
push
stos
clc
push
mov
sbb
mov
ror
adc
inc
sbb
mov
aaa
dec
retf
mov
sub
jne
mul
add
sub
test
xchg
call
inc
mov
push
je
dec
mov
mov
sbb
je
inc
and
lea
or
lods
adc
aad
and
and
inc
pushf
inc
jmp
ins
in
in
int3
movs
rcr
add
loopne
rol
and
sbb
fisub
or
cld
push
pop
je
mov
fsub
push
and
sbb
adc
lea
add
dec
test
data16
std
call
or
or
inc
and
jg
or
and
mov
sub
mov
stos
mov
mov
pop
clc
sub
sub
pop
and
add
push
adc
aam
add
ror
mov
jl
inc
in
test
sar
or
pop
jge
cmp
stos
push
outs
mov
fisttp
mov
push
loopne
lea
mov
addps
(bad)
je
mov
mov
mov
jne
mov
dec
std
outs
xchg
jp
(bad)
push
mov
and
shl
add
dec
out
adc
cmps
(bad)
mov
push
inc
add
lea
or
popa
inc
dec
or
loope
jp
cmp
es
mov
or
and
sbb
mov
push
sub
jmp
shl
sti
add
push
lods
adc
pusha
ror
ds
dec
imul
mov
pop
push
inc
rol
mov
jbe
jge
cmp
inc
xor
pop
retw
add
mov
and
(bad)
push
out
fwait
inc
jmp
sbb
jne
or
xchg
cmp
push
cmp
push
cmp
dec
xor
ret
add
push
cdq
sub
cwde
mov
inc
ret
cmc
sbb
and
pop
push
fs
or
mov
scas
or
call
rol
push
inc
nop
or
out
ret
dec
dec
stos
mov
mov
mov
jne
sbb
push
push
pop
cmp
jl
sahf
dec
cwde
test
sti
adc
sub
dec
pusha
cmp
jmp
inc
adc
leave
add
cmp
push
ds
add
cmps
je
jg
add
push
cmp
sub
test
mov
jl
pop
pop
mov
unpcklps
out
sub
enter
push
lahf
ror
inc
or
xor
or
and
add
pushf
repnz
es
sbb
or
js
push
inc
sbb
add
mov
push
or
mov
adc
loope
pop
test
data16
and
push
or
jne
dec
or
push
cmp
dec
inc
(bad)
and
add
call
mov
mov
pop
add
adc
xor
cmp
pop
inc
setle
xchg
pop
inc
inc
je
pop
shl
cmp
ret
pusha
and
pop
shl
pop
jns
lods
or
or
jmp
jmp
pusha
add
inc
ins
dec
sbb
out
pop
adc
sub
repnz
and
lods
or
cmps
xchg
cmp
mov
push
mov
test
xor
add
jb
inc
or
adc
add
fs
(bad)
sbb
pop
clc
jbe
(bad)
add
or
pop
cdq
outs
std
sub
push
push
pop
inc
loop
rcr
jb
cs
sbb
fwait
into
push
je
cs
int
pop
lea
sbb
jb
add
mov
mov
push
push
push
in
dec
add
rcr
add
adc
ret
mov
ja
mov
mov
ret
push
fistp
adc
in
inc
popa
adc
nop
add
sub
sub
jle
and
pop
out
jb
loopne
stos
push
bt
pop
xor
jno
adc
add
inc
mov
mov
or
rcl
dec
cli
inc
test
inc
jo
sahf
dec
push
nop
xor
sub
xor
dec
dec
in
dec
mov
dec
in
call
enter
pop
mov
test
loopne
or
mov
dec
mov
into
mov
aas
not
push
iret
addr16
inc
arpl
not
lods
or
mov
fadd
pop
sub
mov
push
xchg
inc
adc
mov
mov
push
pop
je
mul
clc
(bad)
pop
rol
push
add
test
mov
or
pop
jo
and
fadd
mov
xor
dec
add
inc
(bad)
(bad)
hlt
push
push
pop
iret
(bad)
ja
mov
cmp
inc
and
sbb
shl
fadd
adc
out
and
pop
mov
add
fimul
loopne
ret
and
(bad)
scas
sbb
mov
push
jnp
and
add
aaa
outs
sub
adc
or
cmp
ins
int3
cmp
pop
pop
push
cmp
pop
push
cmp
pop
pop
and
popa
ror
add
mov
retf
mov
int3
xor
iret
cmp
lock
out
retf
retf
add
mov
pop
add
bound
add
loopne
mov
jp
enter
fadd
inc
test
add
sbb
fmul
popa
nop
fmul
jbe
movs
inc
adc
sahf
pop
imul
aas
lods
and
sub
adc
dec
add
je
xchg
loope
cmp
jns
outs
fadd
daa
or
dec
or
and
cmc
rol
dec
push
sti
cmps
xchg
pop
mov
adc
add
sbb
dec
cdq
inc
cli
push
in
jg
ror
cpuid
mov
lock
sbb
test
xchg
xor
adc
div
fbstp
pop
js
call
xchg
into
fidiv
sub
aaa
or
mov
nop
add
enter
or
xor
nop
mov
movs
dec
push
hlt
jge
xlat
(bad)
loop
in
fbstp
test
add
fistp
lea
inc
outs
jne
pop
adc
imul
int
push
clc
outs
je
ins
jne
and
nop
mov
lock
dec
pop
mov
mov
cmp
sbb
jo
cmp
popf
out
sub
add
or
test
sbb
imul
add
push
xchg
and
lea
pusha
cmp
inc
dec
mov
sbb
push
jg
jle
das
or
cli
or
add
ret
xor
(bad)
cli
sbb
sbb
inc
add
mov
mov
add
add
cmps
leave
lods
shr
lds
imul
xchg
mov
mov
mov
and
mov
pop
sbb
xchg
or
xor
stc
ins
dec
outs
sahf
repz
std
(bad)
fcomp
pop
pop
xchg
fcomp
int3
retf
retf
outs
ror
in
popf
enter
retf
test
movs
shr
dec
mov
lea
jmp
push
adc
push
and
dec
add
out
cmp
in
pop
ins
in
adc
rol
mov
arpl
icebp
mov
cmp
push
ror
or
in
pop
scas
enter
inc
or
clc
cmp
test
jmp
push
ret
and
push
push
mov
sub
outs
rol
out
pop
sub
or
jb
add
lahf
adc
jp
je
leave
mov
cmc
neg
dec
cmc
push
and
not
call
or
hlt
sbb
or
test
push
in
je
pop
or
xor
xor
or
mov
add
fnsave
dec
xor
jmp
xchg
imul
(bad)
pop
test
push
xor
jl
test
ror
arpl
inc
or
mov
xchg
or
cmp
mov
xor
hlt
add
aaa
hlt
dec
out
popf
mov
push
and
jle
daa
sti
fistp
rcl
push
push
gs
mov
mov
push
lahf
jle
test
mov
pop
daa
or
jb
push
push
ja
test
in
pop
sahf
cmp
push
add
cmp
adc
adc
int
or
ret
or
or
mov
xor
add
mov
cmc
pop
ins
in
add
nop
inc
je
sub
xor
add
das
aam
es
retf
add
add
shl
inc
jae
or
xor
(bad)
ja
adc
or
or
popa
or
cmp
cmc
leave
sar
push
push
movs
mov
adc
cmp
out
mov
cmp
outs
rol
popa
jo
cmp
mov
or
call
js
sub
jg
jmp
je
je
sub
xor
dec
movs
push
inc
push
pusha
jo
mov
lods
adc
mov
hlt
dec
aaa
jp
add
packssdw
scas
sub
jle
adc
mul
pcmpeqb
jmp
dec
jecxz
in
push
inc
inc
cli
pop
pop
ret
neg
add
sub
push
mov
pop
js
int3
int3
das
dec
cwde
arpl
pop
pop
fsub
int
ret
mov
xchg
or
mov
mov
test
adc
xor
mov
movs
add
add
push
cmp
push
add
nop
jb
iret
inc
data16
add
cmps
aas
jne
cmp
jmp
and
mov
lods
add
sub
sbb
(bad)
pop
pop
inc
add
shrd
mov
add
lock
push
pop
add
inc
enter
dec
mov
add
lock
mov
pop
pop
sbb
pop
movs
pop
cs
lea
pop
test
popf
call
sbb
out
mov
jo
comiss
sbb
add
loop
push
cmp
or
mov
fisttp
jg
jbe
jl
stos
add
pop
mov
imul
dec
sub
xchg
loopne
fdiv
mov
mov
or
or
js
lock
mov
(bad)
sti
fild
ja
movsx
add
mov
inc
mov
mov
movs
es
add
and
xor
jecxz
pop
ja
ja
ret
inc
cmp
imul
scas
test
sbb
popf
call
xchg
inc
or
out
fdiv
dec
test
pop
sar
or
or
pop
sbb
dec
fisttp
jmp
or
add
or
dec
jmp
cmp
jne
mov
cld
ror
mov
push
pop
mov
fidivr
fsubr
sub
mov
mov
sub
mov
fisttp
rol
enter
(bad)
not
shr
sub
xchg
mov
imul
sbb
shl
imul
jmp
ret
xchg
dec
dec
je
cmp
push
stos
or
xchg
sub
outs
test
xor
sub
mov
jg
scas
cmp
mov
lods
jb
mov
jg
add
mov
mov
xor
add
xlat
sahf
cmp
aas
xor
int
fstp
jle
fs
pop
cmp
movs
test
outs
call
js
pop
cmp
jge
push
shl
xchg
xchg
mov
push
imul
loopne
sbb
aam
jg
mov
mov
push
loopne
out
mov
and
test
or
cmp
test
in
shr
bound
sbb
in
xor
mov
inc
je
push
push
or
rol
dec
das
sbb
loopne
mov
xchg
inc
mov
jl
fs
hlt
mov
dec
push
adc
mov
test
and
ins
xchg
add
mov
sbb
adc
lidtd
repnz
jne
lea
adc
mov
or
adc
(bad)
mov
jg
lods
xor
dec
cmp
je
push
or
mov
clc
fdiv
jo
and
jo
pop
daa
jmp
loopne
out
sahf
leave
je
movzx
adc
xchg
hlt
xor
daa
push
pop
hlt
mov
mov
xchg
popa
shr
fadd
call
xor
xor
in
push
outs
sub
mov
clc
and
xor
lock
cmps
shl
sbb
add
imul
stos
jo
shl
iret
add
mov
adc
mov
repz
mov
fs
outs
jne
cmp
test
jns
repnz
clc
or
jmp
inc
mov
cli
in
add
int
test
add
inc
add
push
xchg
cmp
sub
xchg
adc
or
movs
cmp
add
les
xor
xchg
std
jbe
popf
jne
call
push
add
dec
cmp
pusha
ret
hlt
or
pop
xchg
lea
mov
scas
test
pop
mov
test
jmp
mov
int
movs
dec
mov
ds
test
adc
rcr
mov
mov
lea
call
test
ins
test
inc
sub
scas
and
adc
scas
mov
fstp
push
rol
inc
xor
inc
scas
cmp
sub
sub
inc
xor
mov
push
fsubr
sbb
jnp
adc
jae
cld
test
int
jb
stos
daa
pop
gs
aad
lds
add
pop
rol
xor
inc
int3
adc
out
cmp
rol
add
pusha
das
push
in
mov
or
inc
fs
dec
jmp
imul
or
shl
or
cli
(bad)
fistp
mov
daa
sbb
(bad)
jg
jl
cmp
jae
neg
sahf
mov
adc
neg
jns
nop
add
xchg
push
mov
jmp
and
mov
es
mov
mov
out
fwait
jne
mov
dec
fdivr
aaa
or
and
test
cmps
add
xor
add
cmp
add
out
jle
push
mov
mov
lock
inc
and
add
ss
sti
xchg
sub
push
xor
and
add
cmps
mov
test
mov
adc
sub
cwde
or
sbb
jmp
scas
add
push
sti
add
jle
mov
clc
push
or
push
xchg
fstp
push
push
pop
mov
rcr
sub
fwait
lea
jbe
cmp
aam
and
data16
je
xchg
add
sbb
xor
add
lods
je
ret
sub
into
dec
cdq
push
push
push
xchg
jp
shr
push
mov
shr
out
aas
cmp
je
sbb
or
and
das
cmp
jmp
and
adc
inc
jmp
mov
push
xchg
jp
js
movs
and
je
adc
adc
not
push
cmp
es
pop
test
ss
sbb
inc
cmp
sar
stos
adc
cmc
leave
mov
faddp
inc
out
call
mov
add
cs
shl
add
jp
dec
test
imul
add
sub
jmp
jo
push
sub
xchg
ret
adc
cmp
xor
add
jp
fcom
lds
aas
push
push
out
data16
dec
pusha
mov
loopne
push
mov
push
pop
xor
push
stos
add
pusha
add
mov
push
add
cmp
jl
dec
data16
add
xor
sbb
jmp
or
repnz
or
das
xchg
add
sbb
ror
or
in
dec
pusha
sub
mov
lock
or
and
cs
push
sub
and
and
add
inc
or
inc
sbb
test
inc
(bad)
and
or
pop
shr
and
retf
adc
(bad)
sub
mov
cmc
xor
sbb
retf
sub
jle
outs
adc
pop
push
push
push
popf
mov
jmp
or
out
dec
mov
shr
sub
sbb
inc
sbb
mov
xor
aas
xchg
cmc
pusha
cmc
leave
(bad)
ret
and
or
rol
movs
push
push
test
or
cli
fiadd
or
add
and
sub
cmp
(bad)
enter
and
sbb
daa
(bad)
packssdw
add
fdivr
mov
sbb
aaa
inc
ror
mov
dec
faddp
sti
sbb
add
movs
out
add
lahf
stos
and
pop
pop
inc
cmp
arpl
mov
pusha
sub
jno
div
inc
repz
add
xchg
mov
mov
xor
shl
lods
add
push
ret
jp
sti
mov
(bad)
and
cld
test
rcr
retf
mov
inc
or
into
xchg
sub
or
jle
cmp
dec
les
aad
cmp
inc
js
sahf
mul
jmp
xor
push
mov
pop
push
and
(bad)
sbb
sar
cmp
mov
or
ds
cli
not
test
sbb
sbb
jbe
cmp
or
push
adc
mov
adc
add
stos
adc
add
inc
add
inc
ins
outs
adc
sbb
push
pop
jo
aad
inc
arpl
inc
(bad)
add
imul
daa
je
test
push
mov
out
shr
xor
and
retf
jbe
mov
ja
xor
adc
xchg
(bad)
adc
mov
in
sbb
test
mov
cmp
hlt
clc
jb
cmp
jno
cmp
dec
pop
mov
mov
aam
mov
hlt
inc
mov
and
pop
ret
loope
rcr
sub
xchg
out
sub
add
cwde
pop
and
(bad)
int3
cmp
sub
stos
pop
cmp
dec
fild
pop
inc
(bad)
cmp
jae
(bad)
jmp
shl
arpl
lods
(bad)
gs
fist
or
add
push
xor
fsub
loopne
and
push
arpl
dec
ret
ret
in
inc
jle
jle
or
ret
mov
mov
sbb
jl
lods
fidiv
ins
lock
add
pop
add
xchg
cmp
mov
xchg
(bad)
jp
mov
dec
test
inc
sub
add
(bad)
jmp
cmp
mov
cmp
test
lds
push
inc
jns
jo
inc
mov
sub
sbb
jns
jae
pop
aaa
hlt
je
mov
outs
dec
shr
sub
mov
fwait
inc
add
mov
call
sub
mov
in
mov
sub
dec
jnp
ret
rcl
mov
fbld
loope
ret
jne
int3
mov
mov
and
inc
int
xor
mov
inc
inc
mov
and
push
jne
data16
lahf
xchg
mov
inc
inc
mov
push
add
sub
mov
adc
test
fsubr
sub
pop
add
out
cmps
cmps
mov
push
mov
sub
sbb
fs
adc
jo
push
stos
xlat
pop
pop
(bad)
dec
cmp
push
and
sbb
rol
sbb
ds
xor
xchg
rcl
pop
cmps
mov
pop
icebp
ret
imul
xor
push
cmp
cmp
mov
cmc
push
push
clc
push
mov
pop
or
mov
(bad)
sbb
sbb
movs
cmp
mov
sbb
pop
adc
add
jbe
add
mov
sub
sti
cmps
mov
stc
retf
jae
clc
ds
(bad)
xor
retf
mov
mov
lahf
retf
xor
cmp
test
push
cs
pop
sub
sub
es
ret
lock
int3
jmp
inc
push
enter
push
je
lea
in
aam
mov
mov
push
and
lea
ret
pop
lock
cmps
sar
sbb
jbe
aas
mov
push
cs
mov
or
mov
sub
fnstsw
sti
dec
enter
xor
aaa
fld
shl
dec
adc
or
or
lock
lock
out
add
adc
mov
jmp
push
cmc
jmp
stos
rol
add
je
je
lock
movs
sbb
mov
sbb
or
movs
add
aaa
lock
pop
pop
mov
call
push
test
adc
mov
xor
push
adc
add
rol
and
mov
jmp
js
loop
push
adc
dec
lds
rcr
lar
arpl
inc
adc
cmp
or
mov
clc
pop
push
and
push
inc
add
or
inc
add
mov
ret
popa
outs
test
ret
mov
mov
pop
inc
push
sbb
out
or
add
aaa
sbb
fistp
add
cmp
or
bound
mov
or
or
adc
push
mov
add
or
adc
dec
pushf
or
dec
and
in
scas
imul
push
dec
jmp
xor
mov
mov
ss
mov
mov
pop
test
mov
rol
xor
pop
ret
(bad)
imul
ins
jnp
jge
mov
fsub
cdq
rol
jmp
xchg
hlt
out
xlat
jg
mov
pop
pop
mov
or
jmp
imul
into
mov
(bad)
cmps
adc
loope
loopne
in
inc
addr16
fdivrp
rcl
test
mov
or
push
inc
add
cmp
cli
xchg
in
lahf
jne
xlat
mov
mov
sub
idiv
jl
cmp
fisttp
(bad)
ins
stos
aas
in
sar
jl
xor
pusha
and
out
sub
pop
add
bound
inc
movs
cmp
shr
pop
int3
jo
push
mov
push
sub
mov
movs
jbe
scas
dec
retf
in
fadd
add
(bad)
adc
scas
dec
repz
add
jmp
leave
inc
push
cld
pop
and
rcr
int
(bad)
mov
push
out
sar
jl
movs
jl
and
xchg
sbb
mov
and
add
or
enter
mov
cmp
sbb
jmp
jmp
repnz
enter
jo
push
scas
xor
loop
sbb
ret
lods
sbb
ss
sbb
inc
mov
mov
sbb
outs
mov
mov
inc
inc
cmp
jb
ret
rcl
iret
stos
cli
(bad)
cwde
jge
xor
pushf
adc
mov
inc
mov
not
mov
jnp
(bad)
add
adc
ja
mov
inc
xor
jae
daa
dec
pusha
and
cmp
jg
fidivr
or
inc
inc
cmp
mov
cmc
xor
jnp
pop
xchg
push
push
(bad)
arpl
xor
sub
pop
xor
clc
ja
add
test
pushf
jnp
test
in
(bad)
test
das
mov
add
inc
jne
shr
sub
cwde
test
inc
sub
or
(bad)
adc
iret
pop
and
cmp
push
test
jne
jo
out
and
xor
js
xchg
cmp
jge
or
and
jecxz
pop
xchg
xchg
xchg
test
jo
dec
and
sbb
je
push
mov
inc
(bad)
adc
dec
mov
inc
adc
mov
lods
retf
dec
lods
sub
push
push
(bad)
test
ja
push
push
call
add
add
sub
arpl
xlat
jmp
add
add
cmp
or
xor
adc
add
por
daa
ror
sub
dec
(bad)
xchg
test
pop
mov
xor
daa
and
mov
sbb
jbe
inc
adc
push
mov
cwde
cld
test
daa
adc
test
push
mov
dec
loopne
je
sub
or
cld
sbb
xchg
or
add
push
sbb
ins
retf
dec
test
ins
mov
push
sub
push
add
pop
and
pop
and
mov
jle
mov
jns
jae
pop
enter
push
or
nop
sub
push
push
and
inc
stc
int3
inc
adc
inc
clc
push
push
mov
cmp
aad
js
or
test
out
push
add
push
lds
daa
mov
addr16
je
add
or
(bad)
sub
push
or
cmc
inc
inc
or
inc
cmp
loop
jb
or
cs
push
sub
ficomp
lods
and
push
inc
aaa
add
ja
js
fbld
xchg
dec
jl
mov
pop
lea
popf
mov
jnp
or
add
dec
xor
cmp
xchg
push
or
push
daa
ja
idiv
jne
mov
push
push
dec
xchg
outs
out
(bad)
xchg
ret
xchg
movs
cmp
scas
cmp
sbb
sbb
cmp
outs
xchg
xor
adc
popa
pop
lods
cdq
cvtps2pd
cmp
lods
xor
sub
shl
fsubr
jecxz
out
sub
and
xchg
sub
mov
xor
sbb
cwde
(bad)
adc
cmp
jmp
repnz
jle
jg
mov
ret
jbe
or
mov
sub
inc
or
mov
dec
pop
aaa
ret
int3
enter
shl
mov
jg
jne
cmp
cmp
pop
xchg
fwait
jbe
mov
sub
jecxz
pop
cmp
mov
mov
pop
add
pop
sbb
push
in
xchg
and
test
je
or
sbb
das
jo
xor
mov
or
fsub
outs
push
ins
and
ret
pop
pop
mov
mov
pusha
pop
add
add
push
movs
pop
mov
cmp
fimul
push
add
inc
rcr
pop
push
inc
pop
shl
js
push
leave
rcr
cdq
adc
or
fadd
pop
pusha
lea
add
jbe
rep
into
pop
mov
shl
mov
sbb
cmp
jb
popa
jle
push
imul
sbb
adc
fst
push
movs
inc
push
scas
jge
push
push
sbb
call
icebp
fcom
pop
jp
dec
js
mov
ret
test
sbb
pop
pop
(bad)
sub
aaa
enter
mov
pop
pop
pop
leave
adc
xor
and
xchg
cmp
sub
push
push
or
and
ror
jns
pusha
adc
push
mov
pop
xor
clc
inc
pop
add
push
pop
hlt
fnstcw
add
and
dec
cli
jo
fmul
rcr
add
pop
es
jmp
ror
or
add
pop
pop
mov
shr
cmp
and
cmp
push
dec
cmps
mov
mov
xor
mov
inc
adc
addr16
mov
int3
dec
jl
aaa
xor
fidivr
and
pop
ret
scas
mov
and
inc
hlt
je
jae
push
ja
mov
shl
adc
sbb
frstor
push
or
fcmovb
sti
push
in
lea
mov
push
aas
pusha
dec
call
inc
add
push
push
addr16
inc
pusha
add
jecxz
or
push
out
push
adc
push
clc
pop
inc
lea
push
push
call
fcomp
inc
js
aaa
push
push
pop
add
mov
imul
popf
pop
retf
add
test
add
sbb
adc
(bad)
data16
pop
shl
aad
push
pop
data16
pop
sbb
je
push
push
xor
jno
mov
xchg
pop
and
inc
or
ins
ss
xchg
jmp
ds
pop
adc
dec
inc
pop
dec
rol
lea
xchg
mov
jmp
pop
int3
sbb
adc
push
push
mov
or
je
push
push
dec
jmp
cmp
out
xchg
sub
jae
enter
sub
data16
in
jmp
xor
jne
adc
mov
cmp
add
adc
sub
mov
enter
clc
das
mov
cmps
adc
into
cld
xchg
inc
call
mov
jmp
dec
outs
and
sar
rol
add
adc
lods
sbb
cmp
push
push
(bad)
rep
adc
jno
adc
jns
xchg
adc
lock
adc
push
pop
adc
clc
ror
jp
mov
lea
add
fcom
mov
and
jge
call
inc
hlt
cmp
add
push
cmp
ret
sbb
push
add
ds
jne
jb
jne
mov
pop
add
xor
sub
jo
push
daa
sahf
retf
add
mov
jg
or
push
dec
sbb
mov
mov
in
and
sub
sahf
aam
or
dec
pushf
cmp
sbb
push
not
push
and
shl
add
push
fbld
adc
pop
xchg
pop
imul
push
sbb
sbb
dec
mov
loope
adc
mov
setb
addr16
imul
fcmovne
mov
addr16
imul
dec
test
push
mov
xor
cmp
add
add
popw
xchg
sbb
push
test
stos
pop
pusha
cmp
add
retf
mov
adc
mov
rcr
lahf
rol
add
mov
hlt
sbb
mov
adc
jae
xor
jecxz
add
or
sti
xchg
adc
pop
lods
arpl
and
jle
push
mov
cmp
(bad)
or
sub
sbb
inc
ja
add
ins
cld
inc
pop
repz
jle
repnz
pop
int
mov
aaa
std
in
sti
cmp
or
fidivr
pop
rol
push
add
ret
jnp
add
test
addr16
fiadd
mov
and
pop
add
push
fsubr
cmc
push
mov
ficom
aad
retf
rcr
push
mov
cmp
sub
and
sbb
mov
add
(bad)
xor
test
mov
idiv
xor
xor
dec
adc
pop
test
sbb
inc
je
xor
push
test
xor
loopne
mov
inc
cmp
sbb
sbb
ficom
and
push
sbb
jmp
clc
adc
push
mov
pop
fidivr
jnp
test
jg
sbb
pop
push
lea
data16
cmp
and
pop
push
push
and
jmp
push
stos
xchg
sub
or
ja
loop
and
adc
push
add
sbb
call
lea
xor
mov
stos
shl
mov
pusha
into
push
out
pop
data16
xor
iret
mov
aad
and
sbb
dec
cmp
jecxz
mov
iret
or
or
movs
pop
sub
sbb
sbb
dec
sbb
mov
ja
inc
pop
cld
aaa
movs
aam
push
mov
xor
(bad)
stos
mov
retf
mov
dec
cmps
cmp
outs
dec
adc
stos
mov
pop
sbb
stc
ror
mov
mov
xchg
jmp
push
enter
ins
fidiv
add
mov
adc
push
adc
xchg
jne
popf
cmp
sti
add
dec
nop
adc
xor
fiadd
inc
adc
add
dec
test
shl
(bad)
pop
(bad)
cmp
(bad)
mov
sub
sar
or
out
and
cmp
jae
push
adc
cmp
mov
mov
xor
and
clc
scas
iret
call
push
add
cmp
pop
ds
jo
clc
cmp
loopne
out
test
(bad)
mul
push
inc
cmp
add
fldenv
bound
(bad)
lahf
les
cmp
fadd
cwde
add
mov
mov
je
pusha
nop
xor
pop
inc
mov
jbe
pop
leave
mov
mov
mov
(bad)
stc
mov
movs
std
or
dec
sbb
add
movs
ja
or
inc
push
movs
cmps
imul
cwde
sahf
dec
xchg
and
ins
and
into
add
ror
or
sbb
inc
push
lea
lods
ficom
lock
dec
mov
in
pop
ror
or
or
ret
inc
add
shl
sub
std
jnp
inc
or
jecxz
dec
add
out
int3
cmp
std
add
ret
jmp
xchg
push
movs
sti
(bad)
in
jo
lea
pop
adc
lea
popa
or
and
lods
jae
(bad)
adc
cs
adc
add
or
mov
inc
cmp
into
xchg
test
mov
pop
push
mov
mov
jmp
jmp
imul
pop
hlt
jge
sub
cli
add
rcr
movs
add
sub
sub
and
adc
int3
les
enter
aas
pop
cmp
xchg
xchg
(bad)
pop
xchg
add
cmp
pushf
push
mov
add
fwait
cmp
and
xchg
xchg
inc
mov
scas
(bad)
mov
addr16
cmp
jl
sbb
sub
add
dec
or
stos
jg
push
mov
add
test
aad
test
inc
push
xor
mov
in
push
or
xor
mov
jecxz
dec
sub
popf
add
js
loopne
iret
out
inc
rol
mov
mov
fs
dec
mov
pop
(bad)
pop
lds
jo
cli
pop
jae
jmp
fwait
movs
xchg
or
or
shl
xchg
nop
mov
pop
cld
mov
pop
je
leave
rcl
xor
cmp
pop
adc
cmp
mov
mov
in
jno
fcmove
push
hlt
in
scas
cmp
mov
sbb
fidiv
scas
xor
mov
xor
xlat
push
sbb
fist
sbb
or
inc
stos
or
cmps
mov
or
shl
inc
push
in
shl
jle
jg
in
push
mov
pop
push
mov
add
call
push
add
mov
mov
add
or
mov
or
lock
test
pop
sbb
xchg
mov
or
push
sbb
fs
pushf
test
sbb
bound
push
inc
add
enter
add
push
push
inc
rol
adc
dec
jne
mov
fucomp
cmp
push
retf
sbb
sub
adc
and
pop
outs
inc
jo
xor
sbb
cmp
adc
fsub
test
jmp
test
rol
xchg
jne
in
or
test
imul
mov
cmp
ja
xor
dec
jbe
sbb
jno
inc
push
push
ds
pusha
mul
jmp
mov
cs
add
popa
jmp
ret
jbe
sbb
dec
pushf
adc
mov
rcr
dec
inc
(bad)
movs
add
or
jmp
inc
aaa
hlt
push
and
dec
adc
dec
sub
sti
(bad)
or
loope
jecxz
jne
or
pop
jo
mov
shl
cwde
add
cmp
xor
arpl
js
std
and
(bad)
jnp
ja
mov
mov
data16
pop
dec
inc
jbe
cmp
jb
test
add
jne
and
ja
xchg
mov
jne
dec
ret
dec
jno
jne
add
sub
sar
inc
fimul
and
ror
push
or
ss
mov
movs
sub
xor
mov
int
push
ja
test
lock
lods
scas
ja
push
pushf
push
mov
mov
shl
mov
sbb
xchg
jno
out
ret
fcom
mov
push
mov
scas
and
jo
and
add
xor
add
or
xlat
sbb
mov
add
push
movs
mov
push
cmp
xor
ds
inc
fdivr
or
cmps
ror
push
xor
addr16
adc
pop
data16
add
iret
push
mov
ja
jmp
jmp
add
adc
add
rol
pop
call
fmul
dec
push
mov
and
cmc
mov
aam
and
retf
stos
rcl
mov
mov
scas
jle
or
fild
jb
jge
and
cmp
jmp
push
in
xor
push
rcr
call
cmp
jbe
lahf
sbb
stos
add
push
sbb
(bad)
cmp
js
add
adc
xchg
punpckhwd
mov
sub
mov
push
fadd
std
rcr
call
es
add
aam
dec
dec
je
retf
idiv
inc
add
and
test
(bad)
call
cmp
fs
mov
jge
retf
fxch
or
loopne
sub
std
je
adc
cld
(bad)
lock
xor
push
sbb
sub
popa
cmps
(bad)
jae
push
push
push
adc
adc
dec
or
shl
or
lea
imul
mov
sti
mov
mov
jb
or
mov
cdq
add
cmp
adc
test
popf
xchg
and
loop
call
addr16
add
xor
mov
jnp
mov
add
add
pop
mov
and
sub
loop
fld
pop
and
out
out
dec
or
or
jne
push
mov
sar
loopne
push
mov
mov
xor
pusha
lock
push
movs
cmp
sub
push
inc
fadd
and
retf
data16
mov
scas
mov
push
or
mov
sub
sahf
adc
loope
pop
xor
shr
pushf
adc
sar
lahf
push
jmp
rol
xchg
jno
add
adc
and
or
mov
das
and
mov
jge
adc
stos
mov
mov
or
xchg
xchg
mov
pop
mov
fdivr
dec
jo
pusha
add
ja
push
add
add
or
cmps
pop
cmp
fwait
sbb
xchg
in
mov
mov
pop
ins
push
or
shr
(bad)
jmp
sbb
loop
stos
dec
and
mov
ja
pop
sar
out
pop
mov
test
and
cmc
imul
pop
mov
mov
rep
xchg
mov
aam
xor
in
jle
xor
fiadd
pop
scas
jp
lea
jne
dec
push
cmp
pop
push
inc
pushf
and
sub
in
mov
xchg
nop
jle
add
sub
push
inc
mov
in
mov
sub
add
mov
idiv
xor
inc
jmp
xor
ss
ja
jge
mov
mov
mov
mov
push
ret
mov
sbb
repnz
jmp
dec
adc
cmp
jge
mov
sub
xor
add
and
jns
int
stos
adc
aam
rol
sbb
das
sbb
loopne
int3
inc
or
mov
push
sbb
xor
shrd
jne
gs
jle
mov
or
cwde
push
and
repnz
into
jns
lods
pop
xor
cmp
call
in
pop
ficom
jmp
bound
mov
jb
sub
push
mov
pop
add
arpl
test
ret
iret
jo
enter
pop
call
out
adc
je
mov
rol
add
jmp
mov
mov
jbe
mov
jne
mov
mov
mov
(bad)
stc
add
mov
cmp
push
sahf
mov
jne
pop
loopne
out
fstp
cmp
inc
je
add
fs
add
xchg
or
xor
dec
mov
inc
shl
pop
idiv
pop
ss
dec
or
cmps
inc
sub
cmp
jbe
hlt
cmp
xor
inc
test
sub
or
jge
pop
adc
mov
inc
hlt
xchg
pop
adc
add
add
test
lds
imul
inc
and
pop
inc
rcl
mov
push
sbb
cmp
add
pop
jmp
fcmovbe
(bad)
sbb
mov
add
sub
inc
stc
mov
dec
out
rcr
add
or
push
and
add
or
and
or
test
jns
mov
unpcklps
adc
sub
jp
(bad)
(bad)
sbb
imul
xor
jae
sbb
or
pop
xchg
iret
sbb
push
jo
adc
enter
jecxz
xchg
iret
fdiv
lock
jle
shl
cmp
or
cmp
in
mov
mov
sbb
mov
movs
lods
scas
xor
and
nop
sbb
xchg
and
mov
or
sub
lock
in
push
sbb
jle
les
es
add
sbb
repz
inc
fadd
js
push
pop
fsub
cmp
adc
jne
out
and
inc
test
std
clc
and
push
fidiv
push
inc
sti
push
into
add
mov
icebp
mov
(bad)
stc
cmp
cs
inc
jmp
mov
sub
stos
inc
jg
jge
push
mov
sahf
aaa
pop
inc
arpl
stc
lods
ins
addr16
and
push
inc
dec
shr
push
and
out
inc
mov
or
dec
inc
nop
in
ret
or
(bad)
mov
xor
and
xor
cmp
mov
and
push
cmp
je
cmp
je
cmp
pop
mov
ja
pop
hlt
inc
mov
cld
in
inc
jle
or
jmp
mov
or
inc
jl
mov
and
xchg
or
sub
int3
sub
jbe
sub
lods
std
mov
adc
je
dec
je
push
sbb
or
loope
icebp
mov
add
mov
mov
fdivr
cmp
repz
xchg
imul
out
cwde
aaa
inc
sbb
scas
lods
and
inc
mov
jecxz
cld
fadd
push
or
iret
jge
pop
fdivr
(bad)
mov
(bad)
fcom
push
push
je
push
rcr
sub
sbb
lock
pop
rol
cmp
jbe
sbb
sub
fdivr
sbb
iret
xor
stos
repz
fadd
into
mov
es
push
or
and
lock
(bad)
mov
push
push
imul
mov
ret
ficomp
fcomp
cmp
je
push
cmp
fidivr
or
(bad)
pop
loope
xor
mov
clc
add
aaa
xchg
test
add
pop
movs
popf
outs
leave
push
pop
xor
inc
add
or
xor
std
add
stos
dec
add
rcr
jne
fmul
pop
xchg
in
ds
sub
add
ss
mov
or
sub
xor
mov
add
adc
pop
push
adc
dec
pusha
sbb
push
push
push
mov
les
and
retf
xor
xor
mov
adc
xchg
add
bnd
lea
lea
or
inc
imul
mov
sub
pop
loope
push
sbb
push
out
add
add
ficom
shl
mov
add
sub
add
cs
call
pop
out
dec
rcr
mov
fcmovu
xchg
mov
sub
jno
add
sbb
sbb
push
clc
push
xchg
mov
out
jmp
add
push
rcl
dec
sar
jp
and
cmp
xor
out
ffree
daa
imul
push
shr
xor
aaa
mov
add
seto
fisub
mov
jo
clc
jmp
mov
xor
inc
or
(bad)
push
pop
mov
mov
lods
(bad)
clc
xchg
leave
jns
jae
mov
ror
inc
sar
dec
loope
mov
imul
add
sar
xchg
idiv
enter
or
dec
add
shl
jnp
popa
fmul
ror
aaa
and
leave
fdivrp
add
mov
(bad)
or
ds
retf
fs
fs
mov
pop
ret
loopne
stc
fisttp
addr16
sbb
sti
cmp
add
add
add
add
ins
dec
push
js
pop
popf
mov
lea
adc
data16
or
leave
pop
or
adc
stc
xchg
into
and
jae
sbb
ja
ret
dec
nop
sbb
leave
js
mov
clc
jecxz
nop
xchg
mov
add
fimul
dec
rol
jae
cmovle
xchg
xchg
popf
popf
loopne
jge
xor
icebp
or
xor
inc
ds
inc
inc
cmp
push
push
(bad)
and
lods
ins
scas
jns
jae
lahf
mov
lock
mov
mov
add
retf
int3
sbb
adc
xor
retf
add
or
cmp
sar
fldenv
mov
and
dec
cmp
mov
jo
sbb
repz
loop
shr
loope
or
sbb
ret
pop
pop
pop
test
dec
dec
movs
fcmovnu
imul
dec
sbb
dec
push
js
push
adc
jp
or
cwde
add
je
int3
mov
or
jne
stos
add
out
clc
push
je
clc
scas
imul
and
lds
ja
stos
jne
ja
cld
sub
jge
push
lock
clc
add
je
in
je
dec
je
dec
in
sbb
mov
dec
dec
retf
mov
or
and
jb
or
ror
aam
clc
jbe
and
sti
or
pop
push
inc
call
or
or
aad
outs
lahf
and
pusha
jo
and
jne
sbb
fld
ss
or
and
or
(bad)
mov
mov
cmp
jge
mov
imul
add
out
outs
pop
pop
and
inc
ss
jmp
(bad)
mov
aad
jle
popa
and
sti
out
cdq
and
push
sub
pop
test
loopne
add
adc
xor
cmp
or
jge
xor
or
shl
add
lock
inc
inc
or
ror
sbb
aam
xor
sbb
js
adc
cli
or
jne
dec
and
xchg
fnstsw
push
fldz
fucom
fnstsw
push
or
(bad)
inc
fnstcw
std
das
push
xchg
add
test
inc
and
jl
test
popa
jle
fiadd
mov
jmp
mov
jne
movs
jg
(bad)
cmps
test
jne
add
pop
repz
inc
in
stos
hlt
loopne
(bad)
dec
das
je
movs
mov
jnp
ss
mov
sbb
lock
sbb
cwde
rol
push
fstp
std
aaa
and
push
inc
and
fstp
and
es
out
add
call
lock
cmp
nop
jge
push
push
push
mov
fstp
clc
lea
and
xor
dec
(bad)
clc
outs
popf
add
or
test
sti
inc
ins
push
test
out
inc
add
pop
sub
sbb
cwde
dec
push
jns
xor
adc
jl
call
adc
and
mov
pop
push
push
loopne
shl
sbb
bound
cmps
fcomp
jle
add
movs
fwait
les
cmp
mov
sub
jmp
sub
push
jbe
call
inc
call
leave
adc
movs
rcl
mov
mov
adc
fucompp
outs
sbb
xchg
pop
(bad)
cmp
cli
jecxz
mov
pop
fst
dec
add
mov
repz
cmp
(bad)
mov
sub
leave
inc
jmp
adc
ror
add
sbb
or
into
push
or
adc
dec
fidivr
retf
and
and
hlt
test
adc
push
repnz
sbb
sub
call
adc
ins
clc
dec
jne
fst
loop
adc
sbb
js
add
pop
cmp
repz
inc
cmp
adc
and
out
xor
add
mov
xor
fst
jae
xor
mov
aam
cdq
into
je
fisttp
xchg
push
mov
mov
mov
or
add
rcr
push
xchg
xor
add
add
mov
or
and
nop
rcr
sub
push
mov
cdq
fisttp
loopne
xor
push
xor
shl
pushf
sbb
or
call
xchg
fucomi
add
and
jne
shl
ret
fwait
cmps
push
inc
mov
push
add
dec
or
call
xor
pushf
fwait
add
je
aam
cmp
xor
inc
mov
pop
dec
jmp
mov
sti
fistp
aam
(bad)
aam
jmp
sbb
lock
popf
mov
mov
cld
mov
and
sbb
jge
mov
gs
cmps
sub
stos
adc
mov
inc
loopne
xor
sub
cwde
and
pusha
and
mov
jbe
outs
fld
push
fstp
cmp
pop
sbb
pusha
loope
xchg
sbb
add
push
jmp
scas
inc
and
xchg
inc
sub
adc
fisttp
jp
rol
fld
aas
rol
les
add
sbb
dec
mov
idiv
push
fisub
(bad)
adc
sti
add
aaa
test
xchg
add
add
movs
add
lods
repz
add
dec
xchg
push
mov
sub
out
push
(bad)
shl
push
jmp
pop
pusha
ret
jle
test
mov
jne
jb
pop
jnp
je
sbb
jmp
call
or
add
pop
inc
fld
fstp
jmp
fld
fstp
pop
jns
sar
dec
ja
and
sbb
pop
add
jmp
out
add
jbe
push
cwde
icebp
dec
inc
cli
adc
mov
ldmxcsr
or
push
lods
push
dec
jae
jle
sbb
or
add
or
mov
pop
in
jl
pop
fnstsw
pusha
jg
neg
loop
mov
push
add
call
push
shr
or
mov
ins
or
cmps
mov
or
sub
or
pusha
adc
push
inc
adc
sti
add
icebp
fstp
sbb
fldpi
xor
iret
fdivr
ffree
mov
ins
xchg
xor
loop
pop
or
pop
fcmove
je
data16
pusha
and
cmps
ins
outs
into
and
inc
popa
je
inc
je
test
jmp
xor
loope
repnz
jmp
or
iret
cmp
xchg
jl
pop
ss
dec
sbb
xor
rcr
ins
dec
ret
jns
adc
sub
pop
push
or
inc
or
iret
sub
and
cmp
pop
jo
dec
das
ins
cmp
out
or
jmp
xchg
mov
dec
shl
xchg
nop
test
js
sbb
pop
js
push
lea
push
push
call
fstp
loope
or
xchg
cmp
jne
sbb
add
add
enter
mov
xchg
pop
shr
push
xchg
push
scas
ja
sar
adc
shl
inc
add
shl
scas
xchg
lock
xlat
out
mov
aas
imul
fld
and
add
cmps
push
mov
or
jne
pop
and
and
or
test
push
push
nop
ja
je
xor
imul
pop
mov
mov
xchg
hlt
nop
push
test
pop
lgdtd
push
inc
loope
and
add
fdiv
ja
cmp
xchg
call
xor
cs
mov
js
jle
xchg
push
add
adc
sar
jg
or
leave
and
pop
or
push
pop
add
cmp
ret
jmp
cmps
je
jg
shrd
adc
test
add
dec
pushf
in
inc
jbe
bound
or
scas
data16
or
mov
cmp
mov
cmp
ret
pop
xchg
stc
inc
mov
push
mov
cmp
add
sub
jecxz
inc
loopne
ror
adc
push
in
not
xchg
lock
test
add
or
adc
out
inc
mov
call
mov
clc
sbb
js
jg
and
cmps
add
jns
mov
(bad)
or
adc
mov
push
cmp
cli
outs
ins
loope
inc
mov
pop
push
push
push
push
and
xchg
and
xor
(bad)
mov
jne
dec
sbb
cmp
jb
mov
adc
fs
inc
xchg
out
int
inc
push
or
or
sbb
fld
pop
test
push
test
int
test
mov
mov
lods
mov
and
aam
push
push
fcomi
ja
pop
mov
mov
cwde
adc
or
mov
xchg
fcmovnb
or
iret
push
call
sub
(bad)
push
dec
jo
cmp
push
push
outs
daa
(bad)
loope
cmp
out
inc
jmp
cmp
movs
pop
test
lea
adc
in
dec
lock
and
mov
ret
inc
out
ret
or
sub
push
add
movs
pop
je
dec
add
dec
cmps
aam
add
pop
dec
dec
popa
push
add
pusha
icebp
jns
neg
dec
int3
pop
cmp
jl
in
jmp
push
or
pop
push
add
add
lods
push
test
jo
push
mov
push
int
test
pop
vxorps
mov
pop
adc
or
xchg
mov
sub
jge
jo
xchg
adc
inc
aad
jmp
js
mov
or
jmp
push
jno
push
push
aam
ror
xchg
and
enter
jge
lods
and
leave
rol
retf
cmp
test
out
imul
bound
mov
add
ss
pop
mov
sub
jmp
mov
adc
push
push
dec
xor
or
inc
cmps
dec
jne
ds
push
pop
mov
or
push
xchg
cmp
sbb
adc
pop
mov
shl
jne
js
and
push
and
pop
ret
jle
pop
inc
jmp
lock
sub
in
pop
pop
cmp
cmp
xlat
push
clc
neg
jmp
cmp
inc
sar
jl
push
imul
dec
les
push
xor
(bad)
imul
jb
arpl
sbb
fisub
push
das
push
mov
inc
cmps
jno
and
call
fsubr
xor
(bad)
adc
out
push
adc
push
ret
loopne
mov
or
pop
or
adc
sbb
mov
dec
mov
cmp
cmp
inc
push
pop
push
add
xchg
sub
push
pop
icebp
int
outs
cmp
clc
cld
jl
cmp
fisubr
xchg
loopne
mov
inc
or
mov
xor
pop
shl
ret
and
lods
popf
jmp
das
jne
mov
push
nop
stc
addr16
add
ror
push
stos
mov
adc
jge
sbb
or
push
xchg
inc
ja
jne
mov
inc
xchg
or
scas
aaa
sbb
das
add
and
dec
cmp
call
or
push
inc
inc
mov
mov
sbb
pop
adc
inc
test
clc
push
ret
je
push
push
aaa
icebp
lea
out
xchg
mov
or
jb
loopne
cmp
inc
and
scas
les
mov
pushf
jmp
inc
movzx
add
push
pop
call
js
add
push
mov
add
fimul
inc
xchg
or
mov
mov
call
fcomp
dec
jp
sbb
mov
pushf
add
push
outs
adc
mov
push
push
mov
ins
add
add
xchg
in
sub
push
cmp
cmp
mov
xchg
xchg
lock
sub
pop
shl
jmp
jne
rol
iret
daa
inc
inc
dec
inc
push
inc
loop
sub
jmp
sub
pop
cmp
cmp
out
pop
jns
lock
mov
sub
sbb
cli
aam
sbb
retf
(bad)
pop
aaa
or
xlat
test
pusha
or
mov
or
pop
fistp
icebp
dec
sbb
inc
mov
sbb
cmp
xchg
adc
cmp
jo
test
clc
clc
les
cld
sbb
dec
ret
je
clc
pop
adc
jmp
add
outs
adc
pop
lea
and
adc
jbe
int
xlat
and
push
pop
retf
pop
push
add
sbb
or
push
sbb
xchg
add
popf
jno
xadd
movs
dec
jp
add
popf
or
iret
add
jmp
mov
mov
or
sub
fnstsw
add
mov
mov
sbb
stc
rol
mov
and
xlat
sub
loope
mov
rcl
fiadd
fmul
int
push
fxch
iret
cmp
and
icebp
in
std
rol
mov
mov
or
in
test
or
pop
mov
lds
fadd
adc
test
sahf
mov
call
test
lods
or
test
clc
in
add
mov
ret
stgi
add
cmp
mov
jbe
into
aam
pop
faddp
test
inc
or
jae
mov
scas
add
ins
imul
ret
sbb
arpl
xchg
sbb
xchg
or
sbb
push
adc
stc
hlt
dec
popa
dec
cmp
push
push
push
jo
adc
and
and
movs
jg
fldcw
into
add
ins
cmp
frndint
fsub
jb
f2xm1
int3
dec
das
sub
rcr
fstp
ret
call
cmps
clc
pop
or
sahf
sbb
fldcw
or
xor
push
mov
cmp
jnp
inc
sahf
pop
cmp
xchg
aam
jb
mov
and
inc
je
shld
shl
push
add
mov
cli
mov
fld
or
mov
add
ret
jge
fidiv
pop
sbb
sbb
data16
xchg
ds
into
adc
mov
adc
push
test
or
push
stos
jmp
daa
je
xlat
pop
mov
or
jb
jne
sbb
mov
call
add
push
loope
sbb
mov
jae
fmul
push
sbb
add
outs
mov
aas
add
stos
and
enter
aad
mov
mov
or
add
xchg
push
ret
sub
popa
pop
jmp
je
dec
cmp
enter
add
in
movs
push
data16
sub
sbb
jb
inc
sbb
or
movs
das
or
cmp
jb
xchg
mov
(bad)
push
mov
xchg
imul
clc
movs
add
sbb
lock
inc
popa
popa
push
jns
adc
push
loopne
call
mov
shr
add
add
mov
add
aam
push
push
sub
shl
sbb
pop
mov
push
or
cmp
inc
pop
push
cmp
mov
push
sbb
mov
inc
jbe
xor
and
and
test
push
mul
sub
dec
jne
fs
repnz
out
and
dec
pop
mov
jmp
xor
and
pop
cmp
jne
ja
movs
sub
test
jmp
outs
push
xor
add
fst
sbb
cli
mov
fiadd
push
or
lea
dec
jmp
sub
sub
cmp
scas
mov
dec
sub
dec
dec
inc
in
cmps
jmp
add
fstp
mov
add
push
inc
pop
jmp
out
xor
sub
and
ficomp
xor
xchg
lock
cld
adc
call
mov
jb
cmp
and
in
pushf
sar
idiv
adc
sbb
dec
push
cmp
push
jg
sub
push
fnstsw
inc
sbb
add
push
jnp
sub
lds
daa
sbb
and
jnp
fsubr
cmp
and
imul
mov
or
or
add
sbb
jge
dec
jo
push
jmp
mov
dec
leave
sbb
shl
push
shl
adc
cs
out
ja
das
mov
call
or
or
es
inc
push
call
add
jne
adc
outs
pop
(bad)
and
mov
cmp
sbb
loopne
xchg
fldenv
push
xor
gs
mov
daa
or
test
imul
and
and
repnz
and
sbb
pop
adc
lock
adc
dec
pop
xor
inc
xchg
jmp
and
test
sbb
jae
inc
inc
cmp
ret
add
addr16
pop
repz
push
mov
mov
sbb
sub
xchg
and
out
xlat
push
jmp
dec
cmp
fld
sbb
jle
xchg
cmp
nop
jg
loope
test
je
mov
adc
sub
inc
popa
push
ret
shr
pop
lock
and
cmp
cmp
push
add
ins
cmp
lahf
jne
nop
test
pop
mov
cwde
add
rcr
add
mov
nop
loop
pop
ret
or
dec
in
or
aam
xchg
retf
lods
in
loopne
ins
gs
add
push
mov
sbb
scas
mov
pop
or
dec
mov
jecxz
add
cmps
dec
pop
xor
lds
into
dec
rcr
cmp
and
xchg
int3
not
push
jbe
push
xor
mov
or
add
xchg
les
and
push
stos
repz
inc
mov
pop
sbb
pop
imul
nop
cs
mov
mov
xor
jo
mov
test
xor
add
xlat
cmc
mov
or
xor
and
push
mov
enter
add
adc
cdq
xchg
add
xchg
add
xchg
xchg
xchg
xor
sbb
and
loopne
stc
mov
add
lea
push
mov
xor
or
sbb
cmp
arpl
and
add
and
add
pop
mov
je
jp
pop
sub
push
cmp
xor
add
inc
inc
sahf
sbb
inc
inc
inc
xchg
test
mov
or
int3
int3
dec
outs
pusha
loopne
inc
bound
test
loopne
inc
xchg
div
push
scas
in
add
and
cmps
nop
add
ds
add
aas
call
in
cs
xchg
daa
add
inc
call
inc
arpl
cmp
sbb
push
add
aas
enter
in
inc
sahf
adc
out
fsubr
test
fsubr
in
inc
ds
add
dec
loopne
or
loopne
mov
and
jb
inc
sub
loopne
push
enter
test
pop
enter
lods
in
sub
cmp
fs
and
in
dec
push
nop
or
in
nop
or
jb
xchg
add
dec
in
or
inc
xor
fcomp
cdq
nop
retf
sbb
in
mov
aam
cs
xchg
shr
sbb
mov
mov
cdq
test
push
stos
pusha
stc
or
dec
aaa
add
push
dec
fs
sbb
in
adc
dec
pop
inc
adc
popf
in
scas
in
test
test
test
push
xchg
stc
push
mov
sbb
(bad)
je
shl
sub
out
sahf
cmps
stc
sub
xchg
fcos
ss
add
mov
sub
sbb
jg
sub
inc
push
pop
add
jmp
dec
jge
test
add
test
cwde
(bad)
mov
lods
cmp
pop
imul
ds
aas
aaa
outs
mov
retf
cs
inc
mov
js
pop
xor
mov
cmp
sahf
adc
fdivr
cmp
sbb
dec
scas
or
loope
rcl
or
arpl
push
popf
call
daa
push
mov
dec
popa
adc
sbb
cmp
loopne
int
pop
and
add
mov
mov
mov
sub
sub
xchg
or
push
and
inc
push
pop
mov
sbb
test
(bad)
cmps
sub
mov
xchg
push
adc
add
dec
push
mov
adc
and
cmps
adc
push
xchg
ss
pop
push
das
test
fld
rcl
mov
es
mov
sub
or
mov
ret
mov
xlat
(bad)
lsl
jmp
push
pop
push
push
inc
sub
or
adc
jnp
fwait
inc
or
cmp
or
xor
and
loopne
ja
xor
adc
or
(bad)
fdivr
xor
aam
pop
ret
adc
adc
mov
arpl
sbb
adc
xor
sbb
adc
and
xor
sahf
mov
add
mov
(bad)
xchg
(bad)
cwde
fs
add
fist
or
fisub
in
fadd
ds
xor
or
fisubr
inc
mov
lock
loope
lods
inc
jge
int3
adc
jl
pusha
and
or
js
clc
jno
add
push
push
scas
cmps
loopne
push
sbb
fadd
or
scas
sub
aam
cmp
ins
ja
je
pop
sub
jmp
shr
add
movs
mov
pop
and
mov
xor
pop
je
icebp
sar
sbb
add
pop
mov
inc
les
in
mov
mov
loope
xchg
(bad)
mov
push
add
and
adc
jnp
jo
mov
add
sub
pop
pop
icebp
fistp
(bad)
in
inc
rcr
or
add
or
mov
pusha
cmp
jae
mov
sar
lock
and
cmps
jns
push
mov
cmp
aam
loopne
pop
pop
cmp
test
push
push
jmp
or
stos
out
jmp
neg
add
or
stos
rcl
mov
and
dec
adc
adc
push
fiadd
dec
inc
dec
dec
push
or
and
pop
ror
or
push
pushf
pop
push
jbe
inc
sbb
ss
std
ret
retf
pusha
repnz
push
in
test
test
add
dec
dec
push
push
cmp
dec
push
push
jnp
xor
pop
push
inc
mov
rcr
int
movs
int
rol
sbb
inc
add
sbb
adc
(bad)
add
push
adc
mov
(bad)
pop
dec
test
test
adc
dec
push
push
(bad)
or
call
sub
stos
add
xchg
and
daa
cmp
jl
jne
inc
cmp
adc
push
or
cmp
pop
fsub
repnz
jmp
arpl
imul
push
and
inc
dec
in
sbb
jecxz
adc
sub
mov
mov
sbb
outs
sbb
or
loopne
mov
int3
outs
jecxz
add
ja
out
add
pop
push
mov
gs
cmp
sar
jbe
jl
ins
ret
add
cmp
adc
imul
xor
inc
cmps
rcr
or
or
daa
xor
pop
add
and
loope
mov
loopne
out
ja
sub
jno
or
test
cmp
inc
je
push
outs
jge
in
mov
mov
jmpw
lods
retf
push
cmp
pushf
push
fsubr
pop
jmp
xchg
push
loope
add
mov
push
test
xor
ret
xchg
shl
and
jmp
mov
out
push
mov
add
pop
daa
pop
sub
jb
sbb
xor
add
retf
fiadd
inc
sbb
mov
sub
int
test
jmp
out
mov
cmp
les
loop
push
lea
mov
inc
dec
enter
mov
sbb
sbb
fisub
mov
sub
add
cmc
dec
repnz
and
sbb
out
(bad)
out
pop
push
pop
arpl
inc
pop
pop
dec
mov
push
xor
repnz
pop
je
or
cdq
and
sbb
je
and
sbb
inc
sub
(bad)
add
or
test
jb
mov
inc
sbb
lea
test
and
cmp
shl
push
fstp
pop
push
xchg
mov
sahf
add
mov
into
ja
jbe
xchg
retf
push
add
test
cmps
out
push
aaa
add
cmps
xchg
adc
stos
or
das
add
add
fiadd
sti
mov
lock
cmp
dec
xor
in
sbb
icebp
or
dec
jbe
mov
mov
xchg
cdq
cmp
xchg
sbb
sub
loope
inc
dec
call
clc
jae
lea
or
nop
idiv
cmc
retf
cli
mov
inc
in
pop
jle
push
and
adc
jmp
xor
fnstenv
dec
mov
fsub
stos
or
jl
add
cli
jmp
mov
out
es
jo
xlat
dec
jge
add
sbb
adc
mov
jl
add
call
push
push
pop
mov
(bad)
push
push
jmp
sub
mov
push
addr16
inc
test
xchg
jp
and
dec
hlt
inc
or
mov
inc
hlt
xor
scas
xor
fs
mov
xor
lock
adc
push
dec
inc
inc
xor
xor
jmp
movs
sbb
jns
xor
icebp
or
push
inc
add
jmp
sbb
xor
ins
fld
adc
sub
and
inc
sub
jne
es
sub
mov
dec
js
push
push
sbb
movs
cli
test
jae
in
or
imul
cmp
xchg
adc
sbb
dec
pop
add
je
(bad)
(bad)
sbb
add
dec
xor
test
add
and
out
jnp
inc
scas
(bad)
adc
inc
pop
retf
adc
push
sub
into
lea
cmp
jae
loop
sbb
adc
sbb
outs
jmp
nop
(bad)
je
cs
jecxz
add
jmp
pop
push
push
ret
push
pop
sti
gs
hlt
pop
mov
inc
cmps
jmp
jmp
dec
sub
adc
inc
and
mov
cmp
adc
and
loopne
push
or
sub
push
pop
add
cld
bnd
sbb
jmp
(bad)
(bad)
hlt
sub
mov
inc
fbstp
push
push
cmp
and
dec
or
adc
pusha
adc
mov
sbb
outs
test
xor
push
jmp
por
pop
adc
clc
xchg
jge
sti
xor
stc
and
mov
loopne
push
jbe
push
ins
jg
test
lahf
outs
dec
mov
adc
jmp
xor
test
dec
or
scas
aas
or
rol
in
add
or
sbb
dec
add
sar
dec
sub
test
jge
sbb
pop
cmp
jp
leave
jmp
sub
push
adc
sbb
movs
cdq
nop
jo
je
inc
call
cdq
nop
data16
imul
cdq
nop
inc
dec
mov
movs
movs
fcmovu
xchg
jmp
dec
(bad)
fsubrp
in
or
cmp
fmulp
push
mov
hlt
jo
(bad)
stc
mov
test
sbb
adc
mov
mov
sbb
inc
aaa
arpl
xchg
xchg
leave
sbb
imul
mov
mov
jmp
into
cmp
push
jns
dec
shr
clc
(bad)
dec
push
pop
iret
hlt
xchg
faddp
lods
pop
push
push
push
inc
lahf
xor
and
movs
sbb
loope
shr
(bad)
sub
or
dec
ins
push
push
sub
mov
sbb
push
xchg
shr
and
push
shr
push
jae
fiadd
sbb
sub
mov
push
sub
(bad)
movs
movs
push
mov
pop
dec
mov
push
xchg
xor
push
cmp
add
sbb
sub
mov
pop
dec
not
movs
movs
push
mov
(bad)
sub
sub
dec
dec
loopne
mov
lods
aaa
adc
mov
loopne
adc
adc
cmovne
mov
adc
jg
sub
mov
inc
cmp
in
ja
pop
shr
and
repnz
lea
mov
repz
xor
popf
fiadd
sahf
add
mov
jge
xor
inc
xchg
add
xor
movs
imul
sbb
xor
shr
xor
mov
sub
in
dec
call
js
push
sbb
xchg
repz
jns
scas
sti
inc
js
mov
rcl
(bad)
dec
mov
adc
test
add
or
dec
xor
xor
ror
mov
sub
icebp
cmp
mov
out
(bad)
push
jbe
rcr
jmp
push
xchg
sbb
aad
add
add
(bad)
cmp
mov
cld
xor
in
push
xchg
call
push
add
sbb
sbb
xor
dec
aad
mov
int
push
and
xor
add
scas
xor
clc
call
cmp
inc
sub
sar
cmp
lods
hlt
int
add
ret
add
sar
je
jl
cmp
mov
inc
imul
jo
js
fcom
test
jl
jnp
push
stos
mov
mov
mov
mov
outs
mov
test
jg
xchg
xchg
xchg
xchg
or
adc
outs
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
mov
dec
dec
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
add
popa
imul
mov
xchg
cwde
pushf
xor
and
mov
xchg
dec
mov
dec
xor
enter
fs
dec
mov
fsub
es
in
dec
es
call
cdq
fs
clc
inc
push
jb
cld
add
add
es
ss
or
or
adc
fs
dec
sbb
fs
dec
es
sub
dec
es
xor
nop
sub
inc
and
dec
cmp
dec
push
xchg
dec
xor
push
pop
pop
pusha
mov
(bad)
and
test
mov
ins
xor
xor
push
sbb
in
jmp
mov
add
pop
cmp
push
and
add
sahf
push
jmp
mov
lock
xchg
or
xor
fadd
adc
scas
je
retf
data16
dec
mov
add
jge
mov
push
not
xor
loopne
push
xor
mov
push
push
clc
mov
or
push
daa
jl
adc
je
imul
xor
sbb
push
push
push
cs
aaa
mov
push
ja
sub
sub
sub
test
push
movs
xor
sbb
sbb
imul
cmp
inc
inc
imul
call
sbb
dec
call
sbb
dec
call
cmp
xchg
dec
jo
je
imul
jl
cmp
call
mov
xor
pusha
mov
dec
cs
repnz
inc
shl
jne
pushf
and
xchg
sub
and
movs
and
xor
cmp
leave
ja
add
pop
xchg
xor
mov
ret
les
in
and
enter
ss
xchg
pop
xchg
xchg
sub
sub
leave
gs
cs
sub
in
call
and
xor
xchg
retf
xchg
pop
inc
lock
cs
jb
hlt
inc
clc
inc
pop
leave
gs
cld
dec
jl
ror
pusha
dec
add
dec
sbb
or
stc
scas
jbe
mov
gs
mov
adc
jb
pop
imul
scas
and
or
cmp
das
push
repnz
pop
xchg
jb
cmp
mov
inc
inc
dec
cs
jb
inc
inc
mov
inc
dec
sub
mov
push
sub
pop
pop
and
xor
mov
stc
add
push
and
push
fucomp
pop
xlat
(bad)
mov
add
jae
pop
pop
xor
dec
cld
lods
rol
adc
push
and
xor
xor
mov
movs
push
push
mov
rol
lock
mov
jo
(bad)
push
lea
mov
xor
cli
clc
add
fwait
pop
sub
push
cmp
stos
add
icebp
mov
mov
pop
or
cmp
jl
scas
pop
inc
mov
ins
pop
add
or
out
pop
add
pop
cmp
pop
jne
call
pop
xor
add
dec
push
mov
fisttp
xor
inc
add
imul
ret
mov
and
mov
push
sub
jne
sub
cld
mov
aaa
xor
daa
or
sub
jmp
add
or
rcr
test
ds
shl
ror
bound
mov
ror
add
cld
sub
movs
push
shl
popw
enter
cmp
jne
mov
inc
call
dec
inc
jge
pop
sub
xor
fdiv
cmp
ret
sub
(bad)
jo
(bad)
or
or
je
add
sbb
lock
push
push
jne
imul
add
or
sbb
mov
mov
lahf
lods
add
xor
xchg
push
mov
xchg
pop
inc
ud1
and
int
inc
dec
mov
jl
in
jge
rol
pop
js
push
ins
fadd
mov
xchg
clc
pop
jmp
add
fadd
call
jae
add
jno
cmc
and
adc
or
xadd
out
adc
push
test
mov
sbb
(bad)
ficomp
shl
xchg
pop
xchg
add
dec
adc
es
pop
inc
sbb
jle
clc
jb
or
or
lahf
test
dec
pop
inc
jmp
mov
mov
mov
mov
loopne
inc
adc
sahf
mov
mov
neg
sbb
add
lock
or
enter
jne
and
cli
dec
xor
lock
push
fnstcw
push
idiv
add
test
aas
xchg
mov
adc
and
add
or
xor
shr
xor
fst
or
inc
or
or
jne
adc
loope
pusha
add
xchg
or
jle
push
push
jp
xchg
jmp
xor
sub
cmps
cmp
push
sbb
ins
rcl
push
or
and
adc
adc
mov
jmp
test
or
sub
adc
ror
xchg
mov
xchg
jne
mov
pop
add
dec
dec
jmp
cdq
push
jl
or
mov
inc
or
movs
fistp
out
adc
or
lock
jne
push
mov
pop
lods
sub
mov
aaa
mov
inc
pop
or
xchg
and
mov
or
int
push
inc
add
and
adc
and
imul
push
pop
pop
sbb
adc
jo
ffreep
and
mov
jge
outs
or
push
popa
dec
stc
add
push
pop
push
jne
scas
inc
rol
imul
fdivr
or
mov
mov
hlt
pop
add
(bad)
out
data16
shl
pop
adc
daa
stos
je
mov
or
clc
pop
fstp
sub
push
add
add
xchg
movs
add
leave
ins
mov
xchg
ret
sub
jg
outs
dec
ja
mov
jo
push
push
shr
mov
and
push
xor
inc
clc
mov
(bad)
and
jg
add
jne
or
inc
or
sub
xchg
inc
pop
mov
pushf
popa
or
sbb
xchg
je
and
xchg
imul
xchg
sub
ds
in
mov
push
jns
(bad)
call
xor
ret
sbb
adc
movs
xor
mov
xchg
bound
or
jne
inc
inc
shr
dec
ficomp
push
jecxz
out
dec
push
xchg
jb
xor
jnp
outs
js
ins
push
and
loop
push
jno
cs
mov
fdivp
(bad)
in
mov
leave
sbb
mov
push
cdq
pop
mov
das
test
ret
mov
jecxz
loope
(bad)
test
and
imul
ss
fwait
cmps
test
rcl
push
jae
cmp
pusha
popf
cmove
add
scas
rcl
pop
mov
push
inc
clc
push
adc
push
popa
mov
inc
(bad)
mov
jecxz
fimul
xor
inc
xchg
pop
sub
push
and
pop
lods
cmp
imul
scas
or
add
pop
in
shl
loope
or
(bad)
pop
mov
das
loop
repz
add
daa
add
les
cmp
sub
mov
adc
loopne
gs
test
lods
call
dec
or
dec
rcr
or
dec
js
or
scas
push
fld
(bad)
in
or
(bad)
and
adc
inc
dec
or
pushf
ror
push
xor
push
jmp
or
ja
cmp
jne
sub
jo
mov
xor
adc
cmp
rcl
stos
pop
push
cld
adc
es
xor
add
pop
jmp
add
(bad)
and
mov
aam
inc
or
inc
pop
shl
jno
push
shr
mov
pop
in
xor
xchg
add
xchg
push
sbb
add
sub
test
adc
jmp
or
or
mov
adc
pop
sbb
mov
call
or
mul
inc
lahf
dec
pusha
cmp
fcos
jbe
scas
sub
push
stc
pop
jno
cmp
xchg
jb
js
scas
ror
jnp
and
push
cmp
cmp
push
or
dec
push
test
dec
pop
pop
popa
ins
ds
aas
aad
or
cwde
icebp
ins
mov
push
add
out
pop
push
es
fsubr
jbe
mov
cld
into
ret
xor
dec
xchg
cmp
call
cmc
mov
adc
add
shr
je
bound
sbb
push
push
and
rol
mov
fcom
sti
mov
inc
pop
aad
ret
(bad)
lds
adc
test
fcom
lea
pushf
pop
jl
enter
sbb
or
jae
add
int3
rcl
pop
rcr
sub
jbe
add
xchg
(bad)
mov
mov
or
xchg
inc
ret
push
movs
and
and
add
fld
or
call
pop
xor
sbb
and
push
mov
push
sbb
push
mov
add
bound
movs
adc
jecxz
push
int
or
pop
sbb
pop
jne
mov
in
fwait
or
jge
test
nop
out
jnp
pop
jmp
inc
adc
push
push
xor
pop
hlt
add
mov
lock
adc
and
jno
cdq
fs
or
and
jne
mov
push
js
adc
ins
fsubr
shr
fst
test
pop
in
mov
push
and
cmp
xchg
sub
movs
xlat
mov
daa
pop
xor
sub
inc
dec
mov
daa
or
or
adc
and
pop
or
fdivr
jbe
inc
rcr
sub
inc
rcr
sub
leave
sbb
push
adc
loop
mov
pop
dec
inc
cmp
pop
push
fcmovb
jno
mov
out
ret
push
xchg
cmp
sbb
push
dec
aas
movs
or
sti
and
ss
outs
retf
aas
push
lds
loopne
xchg
pop
xchg
scas
inc
dec
dec
or
cld
sub
int
sahf
cmp
(bad)
icebp
sub
pop
or
repz
xchg
jb
inc
inc
pop
ficom
add
pop
adc
push
jns
or
rcr
lea
or
push
xor
mov
cmp
and
test
hlt
adc
add
loopne
je
in
push
xor
dec
imul
mov
ins
mov
and
xor
dec
mov
pop
(bad)
ror
sar
loope
rol
jne
sub
xchg
pop
int3
inc
xchg
data16
jecxz
cmp
jbe
mov
movs
dec
mov
fsub
inc
pop
jo
sub
xor
imul
push
shr
push
sbb
lahf
push
sub
jo
cmp
hlt
xchg
enter
pop
pop
stc
xor
mov
jge
cmc
and
xlat
clc
xchg
xchg
xor
sahf
push
push
in
xor
loopne
mov
nop
cwde
mov
dec
rcl
loopne
or
or
mov
mov
js
add
xchg
sbb
ror
out
adc
shl
sub
jge
or
inc
xchg
add
jno
jb
or
ja
add
out
div
jmp
and
jb
adc
and
jmp
push
xchg
nop
jnp
shr
push
out
call
xor
or
loopne
inc
rol
dec
cmp
bound
dec
add
(bad)
cld
movs
fst
pushf
cld
cld
inc
pop
repnz
cld
cld
call
jb
adc
sub
lds
pop
rol
test
loopne
into
movs
mov
repz
push
loope
cmps
(bad)
div
test
xchg
gs
fs
(bad)
hlt
out
sbb
in
sbb
in
inc
or
push
or
nop
lahf
push
(bad)
xor
push
mov
ficomp
je
dec
lock
fwait
and
movs
ror
add
popa
mov
sub
mul
or
cmps
add
in
inc
loop
sti
cmp
xor
or
loopne
pop
dec
cs
int3
je
or
out
inc
or
rol
cmp
sbb
sbb
arpl
ins
add
loope
ret
jle
mov
mov
adc
rol
and
cmps
inc
or
aam
dec
jg
into
je
sub
je
sub
ret
xchg
add
cmp
adc
jbe
stos
ret
sub
push
and
and
mov
add
div
movsx
cmp
cli
adc
pop
push
cmp
aas
iret
sti
fsubr
(bad)
je
push
sub
adc
cmp
adc
hlt
pop
adc
xchg
rol
popf
sbb
sub
add
dec
and
pop
jge
scas
lods
jg
je
mov
ins
add
jns
adc
dec
js
add
stos
dec
bnd
push
sahf
div
add
inc
mov
sar
add
xor
add
sbb
outs
rcr
push
mov
movs
xor
fiadd
les
or
popa
scas
inc
or
jmp
push
repz
fadd
and
or
test
xlat
(bad)
cdq
xor
push
lods
shl
xchg
imul
sub
sub
popa
(bad)
shl
add
add
ret
mov
enter
jne
ret
sub
pop
mov
fwait
jae
loope
add
ja
inc
xchg
cs
add
push
(bad)
inc
mov
push
jg
push
add
mov
xor
movs
jno
jae
daa
sahf
push
es
sbb
xor
in
inc
jns
add
mov
loop
in
cmp
sbb
fimul
shl
or
xor
mov
leave
fadd
mov
retf
push
into
xor
lahf
push
add
sbb
and
mov
nop
clc
push
xor
mov
xor
cmp
call
or
and
pop
das
adc
pop
stc
dec
sbb
movs
sub
int
(bad)
bound
in
in
xchg
sbb
and
inc
jecxz
add
mov
fcomp
xchg
jne
jle
data16
mov
je
mov
or
mov
fldcw
sbb
mov
(bad)
xlat
and
push
retf
add
dec
outs
gs
sub
sub
inc
inc
cmp
dec
add
add
add
push
xchg
add
cmp
pop
add
pop
jp
add
or
add
or
stos
jmp
in
test
loopne
or
jbe
mov
cwde
mov
mov
je
pop
clc
les
ins
int3
fs
pop
loope
jns
cmp
jbe
and
or
jle
test
jmp
aam
mov
add
pushf
xchg
add
jo
xor
push
or
inc
cld
mov
(bad)
sub
add
and
sub
stc
pop
mov
pop
pop
sub
sub
cmp
dec
push
fs
sbb
sbb
mov
xchg
out
push
lock
push
and
fistp
pushf
mov
dec
je
dec
jne
sbb
xchg
cmc
jmp
enter
fwait
inc
test
mov
repnz
add
in
add
sub
push
fadd
lock
jg
mov
(bad)
cmps
adc
ja
mov
adc
mov
mov
mov
xchg
pop
movs
leave
xor
adc
clc
stc
int
dec
xor
loope
or
mov
cmp
add
add
scas
pop
pop
and
aad
or
jge
js
or
jmp
mov
xlat
mov
mov
and
enter
cmps
mov
retf
or
add
pop
outs
pop
add
inc
cmp
pop
loop
ret
shr
add
xchg
sbb
jmp
icebp
pop
sub
rcr
or
repz
ds
cld
dec
neg
pop
jmp
mov
addr16
pop
sbb
or
jmp
test
mov
cdq
mov
sub
js
dec
in
rol
cmp
pop
test
test
add
inc
aas
or
jp
cmp
xor
outs
sub
mov
xchg
inc
push
pop
addr16
les
sub
sbb
enter
sub
dec
inc
and
daa
popa
call
shr
movs
jb
ja
adc
cmp
(bad)
pshufw
push
fstp
clc
inc
and
cmp
loopne
stc
xor
outs
iret
mov
dec
(bad)
out
rol
je
retf
push
xlat
retf
push
shl
iret
jne
leave
bsr
add
out
jg
cmp
push
inc
fldenv
fcom
push
xchg
sub
dec
and
pop
dec
inc
ret
fwait
pop
add
cmp
(bad)
aad
mov
or
cmp
and
lock
ja
jne
and
sahf
or
arpl
inc
lea
sbb
ficom
cmp
and
rol
mov
fwait
loop
(bad)
clc
clc
and
push
mov
in
bsf
add
jmp
test
or
clc
not
scas
and
dec
xor
std
sbb
add
pop
mov
ins
(bad)
cld
ror
or
xchg
mov
add
add
and
lock
data16
inc
mov
xchg
push
ja
push
lea
test
inc
sbb
xor
xor
add
pop
mov
inc
jl
fcmovb
jg
call
push
js
cmp
jl
sbb
dec
cmp
je
or
inc
cli
inc
xchg
sbb
inc
mov
inc
fadd
out
fist
enter
mov
push
xor
lahf
push
add
aam
lock
or
push
sbb
push
inc
mov
test
mov
and
adc
(bad)
popa
mov
clc
jmp
push
add
add
rol
jno
fdiv
mov
cmp
mov
push
xchg
js
xor
test
or
shr
je
out
mov
or
repz
add
jne
and
cmp
and
cmp
or
enter
inc
jmp
and
jmp
sbb
sub
mov
shr
mov
repz
nop
mov
jae
mov
fild
outs
adc
jmp
(bad)
neg
(bad)
mov
icebp
mov
jns
clc
or
push
cmp
mov
or
popf
xor
push
xchg
cmps
popa
fcom
or
imul
or
pop
adc
wbinvd
mov
movs
movs
movs
xor
fistp
fmul
ror
mov
add
mov
xor
mov
add
pop
sub
push
push
push
xor
xor
dec
add
sub
inc
cs
neg
ds
ficomp
xchg
sub
inc
add
dec
repnz
mov
sbb
aaa
sbb
sbb
sbb
fcom
test
sbb
inc
and
fnstenv
xor
sbb
adc
mov
sbb
inc
add
or
mov
mov
daa
pop
pop
pop
hlt
cmp
jae
clc
stos
mov
or
jae
lods
rcl
jmp
pop
rcl
daa
pusha
xchg
sub
syscall
js
xchg
cld
adc
xor
add
test
ret
popf
cmp
mov
ins
sbb
mov
or
rol
push
mov
add
pop
dec
arpl
or
push
add
data16
je
jne
mov
mov
add
pop
arpl
add
shr
inc
loope
lods
jmp
cwde
(bad)
dec
js
out
adc
sub
ret
(bad)
popf
jne
or
stos
inc
cwde
mov
xchg
xchg
add
sbb
shl
jmp
push
or
out
mov
push
cmps
adc
or
out
xor
mov
xor
pop
ror
push
sub
movs
mov
aam
out
xchg
jo
push
les
retf
imul
and
sbb
or
jbe
(bad)
cwde
push
cmps
adc
push
mov
fwait
xchg
ins
and
outs
rol
add
inc
and
fs
in
imul
add
das
mov
pop
lahf
jp
adc
push
mov
and
mov
loopne
add
test
cdq
mov
(bad)
leave
out
dec
cmps
rcr
cs
push
je
sbb
jo
sar
rcr
sub
jecxz
jb
cli
fstp
or
shl
sub
fcom
cmps
cmp
js
imul
and
or
pusha
ds
cmp
mov
adc
shl
pop
add
jp
fld
inc
pop
je
mov
rcr
pop
cmps
inc
bound
push
js
push
cdq
mov
shl
dec
pop
or
dec
xor
shl
sub
or
fwait
or
add
jmp
bsf
add
jle
xor
cmp
cmovne
fimul
stos
or
shl
adc
dec
push
sub
inc
pop
test
jecxz
movs
movs
dec
push
adc
mov
retf
add
inc
imul
xor
inc
xchg
fld
jne
and
push
push
test
out
les
cmc
mov
aam
ret
push
mov
cmp
je
push
pusha
call
jecxz
daa
dec
loop
iret
repz
adc
xchg
pop
and
inc
imul
mov
pushf
mov
inc
cwde
jno
cwde
lods
sti
sub
ins
xchg
test
adc
xchg
jne
push
cwde
or
fmul
cmovs
movs
dec
outs
bnd
jl
lods
mov
push
test
push
std
dec
les
jb
cli
push
push
ja
add
enter
test
sub
dec
jecxz
setne
adc
in
adc
int3
or
xlat
mov
mov
add
and
(bad)
out
ret
sub
jns
and
add
cmp
retf
push
jo
adc
or
jle
je
rol
inc
lea
jb
add
aam
pop
jb
or
sub
pushf
jbe
push
and
mov
push
sbb
adc
dec
mov
add
cmp
add
dec
push
dec
or
in
dec
mov
mov
rol
or
add
xor
lock
dec
add
sbb
fcmovne
push
jne
ret
ror
hlt
cmp
bound
rol
push
mov
xchg
jmp
sub
adc
xor
mov
mov
add
jmp
leave
rcr
or
loop
mov
mov
sub
mov
add
mov
jg
and
sub
jbe
div
rcl
pop
cld
(bad)
add
inc
or
(bad)
mov
rol
test
out
call
add
add
or
sbb
mov
dec
and
sbb
dec
mov
cwde
adc
call
dec
loopne
mov
iret
sti
rol
jno
cdq
add
(bad)
mov
mov
test
cmp
cmp
jbe
push
inc
and
out
and
out
add
pop
mov
xchg
shl
es
sub
sbb
lods
xor
inc
mov
and
mov
adc
ins
and
ffreep
fiadd
adc
cmp
pushf
xor
out
push
xchg
pop
push
inc
fwait
mov
loop
pop
add
and
sbb
int3
mov
or
add
ret
or
js
mov
jecxz
push
pop
or
add
xor
add
fbstp
pop
ins
sub
pusha
or
cmp
xchg
jb
mov
push
out
push
sub
adc
jge
hlt
pop
adc
jg
test
ret
jg
xchg
cmp
push
fiadd
or
lock
or
loop
movs
dec
pushf
jmp
mov
outs
jl
mov
fist
mov
les
pop
es
fwait
push
dec
cdq
xor
mov
lods
fisub
mul
mov
cmps
retf
clc
popf
dec
lea
cmp
sbb
(bad)
sbb
lea
add
push
pusha
jl
jo
xchg
xor
cmps
sbb
loope
push
inc
adc
dec
(bad)
xchg
pop
or
or
pusha
pop
movsx
push
lods
test
or
push
dec
sub
std
dec
mov
and
or
mov
jl
and
xor
jo
xor
xor
and
das
jmp
sbb
ret
inc
add
and
and
cli
add
neg
sbb
and
jmp
adc
rol
shl
fadd
(bad)
cmp
sub
clc
outs
xchg
jmp
cmp
(bad)
push
jge
mov
sub
outs
or
and
test
ss
inc
dec
inc
clc
jl
(bad)
jl
gs
ss
int3
stos
add
pop
int3
mov
mov
sub
movs
dec
movs
dec
sbb
xchg
add
push
movs
add
pop
and
add
pusha
pop
dec
jg
fidiv
jns
dec
or
inc
sub
movs
jle
ins
mov
shl
push
in
rcr
mov
add
jns
(bad)
sub
or
add
pop
nop
add
or
(bad)
jl
fidivr
mov
mov
stc
addr16
adc
and
loopne
sub
movs
jmp
push
add
loopne
add
add
loopne
enter
in
lahf
mov
jae
aam
mov
dec
fist
push
retf
aaa
lods
rol
cmp
pop
jge
mov
push
mov
inc
cwde
inc
and
cmp
nop
adc
jle
ins
mov
cmp
add
stos
dec
loopne
mov
mov
sbb
push
or
jmp
mov
call
sbb
jo
add
ror
imul
mul
sti
shl
and
rol
fcomp
scas
mov
bound
sub
iret
ficomp
sbb
popf
lock
and
ds
or
adc
cmp
jl
movs
(bad)
in
add
cmp
das
pusha
add
rcr
add
scas
adc
and
mov
mov
and
mov
jmp
inc
dec
vpunpcklbw
xchg
and
cmps
mov
xchg
or
js
pop
jmp
jbe
ss
mov
out
dec
or
inc
sbb
sub
int3
shl
call
add
mov
pop
xchg
jae
mov
cdq
loop
sub
push
and
jne
pop
lds
enter
xchg
sub
(bad)
loop
or
push
shl
lods
xlat
jp
or
sub
ret
lea
retf
not
in
call
pop
mov
int3
and
adc
pop
loope
jno
xlat
int3
inc
dec
pop
jl
hlt
pop
adc
cs
std
sar
inc
xlat
nop
loope
jl
icebp
jmp
in
cmp
cmp
mov
test
rol
sbb
sbb
jb
xor
xor
bound
out
jecxz
xor
sub
loopne
nop
cmp
xor
lock
xor
daa
or
inc
jg
icebp
popa
inc
ret
and
jne
mov
push
push
pop
mov
sub
mov
add
inc
xor
inc
dec
dec
cwde
call
clc
jmp
xchg
mov
add
out
or
mov
adc
or
cld
int
les
jne
cmp
jne
xor
and
mov
aad
aaa
(bad)
pop
repnz
push
push
test
leave
enter
mov
and
stc
jle
cmp
dec
gs
dec
and
push
add
fist
test
pop
jl
push
sub
(bad)
mov
adc
sub
and
or
bound
cmps
imul
cdq
sub
inc
and
pop
pusha
outs
mov
lds
inc
add
mov
cmp
lods
fwait
push
enter
or
scas
mov
ins
fmul
out
cmps
clc
or
xchg
mov
jnp
aad
cdq
retf
push
ds
iret
cmp
adc
pop
dec
jmp
and
add
cmp
add
cmp
mov
call
add
shr
test
xchg
jmp
sbb
pop
fwait
or
pushf
scas
jbe
mov
outs
and
je
loope
jnp
xor
jle
jle
sub
cmp
and
or
ficomp
scas
cmp
push
xcrypt-ecb
cmps
jbe
add
adc
jge
inc
arpl
pusha
mov
adc
fisttp
loopne
fdivp
cmp
mov
int3
xor
shl
pop
inc
dec
sub
in
sbb
mov
cmp
dec
repz
sub
enter
je
imul
pushf
test
shl
nop
jne
ins
xlat
or
je
xor
jbe
mov
adc
enter
iret
or
adc
push
shl
inc
jle
inc
inc
out
cmp
imul
push
dec
(bad)
fcomp
add
or
(bad)
(bad)
not
inc
(bad)
mov
pop
push
daa
dec
xchg
out
xchg
and
sar
or
xchg
mov
cmps
push
sub
movs
jmp
dec
ficom
aam
into
or
dec
ror
jmp
cmp
out
int
into
dec
mov
mov
enter
or
add
xor
push
inc
mov
jg
push
aaa
sub
test
(bad)
rol
lock
mov
pop
inc
loopne
xor
loopne
outs
fucomp
or
sub
dec
scas
push
cwde
mov
pushf
inc
mov
call
jbe
mov
cmp
jl
inc
mov
popf
rol
lods
dec
push
inc
mov
xchg
sbb
sbb
mov
fs
sub
cmps
push
or
stc
ss
push
push
add
adc
pop
call
jle
sar
imul
add
mov
dec
test
sub
inc
fbstp
mov
jg
jmp
adc
mov
cmp
or
jns
mov
es
adc
inc
adc
jmp
mov
fs
dec
pop
test
add
ret
cmp
sbb
enter
adc
cmc
data16
adc
movs
push
or
ja
dec
mov
push
into
xor
and
mov
mov
mov
sbb
jmp
cmp
jae
shl
mov
adc
aas
fist
add
pop
call
test
xor
(bad)
(bad)
je
and
push
inc
or
fwait
mov
nop
cmp
je
xchg
add
dec
nop
lea
jge
and
mov
add
push
jle
lea
pop
lea
clc
fs
mov
or
out
push
mov
clc
mov
jp
mov
cmp
mov
shl
test
dec
jmp
jmp
pushf
sbb
mov
adc
stos
in
mov
nop
add
in
outs
inc
dec
loopne
aam
jl
shl
xor
adc
xchg
or
pop
mov
mov
shr
add
or
lock
xchg
shl
mov
inc
or
push
jmp
in
dec
sub
fs
jg
or
xor
fnstenv
push
jns
mov
stos
(bad)
(bad)
sbb
cwde
test
je
inc
pop
mov
loopne
push
sar
or
or
shl
shr
shr
or
and
adc
mov
into
push
das
dec
and
pop
je
pushfw
inc
or
sbb
mul
stos
aam
jmp
and
rol
push
and
mov
or
xor
retf
adc
dec
lods
xchg
dec
loopne
mov
cmp
push
aam
fisub
cmp
sti
inc
jmp
inc
mov
sub
cmp
adc
pop
mov
sbb
mov
sti
(bad)
or
dec
les
or
jo
sbb
pusha
sbb
mov
xor
add
jnp
outs
pop
les
mov
dec
xor
sub
shl
daa
ret
(bad)
sub
movs
or
xor
or
mov
cmp
pop
jo
mov
lea
jmp
xor
mov
rcr
mov
inc
xchg
hlt
(bad)
inc
or
add
push
cmp
nop
sbb
push
leave
cli
pop
xchg
iret
sar
neg
cmp
xchg
movs
or
cmp
sub
mov
mov
ins
and
push
push
(bad)
lock
adc
or
fdivr
aas
pop
dec
pop
xor
mov
pop
push
mov
cmp
or
push
adc
cdq
std
lods
mov
mov
cmp
adc
lods
xchg
repz
inc
fld
and
(bad)
cmp
loop
add
les
je
cmp
or
mov
sub
pop
mov
dec
inc
test
adc
jne
push
mov
mov
sahf
stc
mov
push
and
lea
in
lea
std
add
add
inc
sbb
test
push
ret
and
ret
adc
ja
push
inc
or
sbb
in
mov
popaw
mov
call
loop
bound
jb
xor
mov
mov
mov
movs
add
or
std
mov
mov
je
jns
push
cmp
ror
inc
rol
mov
rol
dec
loope
repz
loope
adc
(bad)
(bad)
jmp
pop
xor
or
push
and
scas
pop
sti
lds
(bad)
std
and
cmp
add
hlt
mov
hlt
adc
push
jae
jge
mov
push
rcr
cmp
sets
test
call
mov
jl
inc
call
xor
jne
or
push
dec
xor
mov
mov
mov
mov
push
and
in
or
push
outs
lea
call
(bad)
lea
mov
mov
push
cmp
cmp
mov
jo
pop
push
lea
mov
jb
add
loopne
test
pop
(bad)
jne
mov
test
jb
push
ins
pop
pop
and
outs
xchg
jp
fdiv
push
aad
lock
lahf
xor
(bad)
ja
dec
sbb
cmp
mov
sar
xor
shl
enter
mov
ret
pushf
dec
pop
into
mov
add
cmp
add
pop
pushf
cmp
jo
sub
push
mov
and
adc
jne
sbb
and
shl
or
pushf
sub
cmp
test
mov
neg
ror
rcr
pop
je
int3
mov
jmp
iret
push
rol
add
lock
xchg
out
add
(bad)
repnz
daa
repnz
mov
cld
mul
ret
inc
cli
test
sub
mov
mov
or
sbb
hlt
mov
xor
jmp
or
push
mov
(bad)
clc
test
test
pop
push
add
je
sbb
stos
push
xlat
clc
inc
aas
mov
sbb
inc
fdiv
push
out
add
(bad)
and
jae
xchg
add
clc
pop
test
adc
inc
mov
call
adc
mov
jl
shl
scas
rcl
fmul
call
push
ja
lods
adc
mov
pop
adc
pop
push
(bad)
push
push
cmp
xchg
call
mov
inc
cwde
adc
adc
cli
std
cwde
mov
call
adc
or
xor
mov
dec
rcl
inc
dec
push
(bad)
aas
and
xchg
sbb
clc
fimul
mov
cmp
popa
adc
sub
mov
add
and
aas
fcmovnb
push
mov
jne
shl
mov
std
pop
movs
dec
lock
enter
loop
xor
sub
sbb
lods
or
sbb
movs
push
cli
idiv
je
outs
jecxz
jl
cmp
(bad)
aaa
xor
xchg
call
shl
mov
cs
rcl
xlat
sbb
inc
rcr
push
inc
int
repnz
jae
mov
nop
bound
dec
add
lods
mov
out
mov
rol
sbb
nop
or
dec
jge
pop
push
sbb
das
pop
in
push
les
loope
mov
inc
in
or
sub
or
mov
add
sbb
pop
sbb
xchg
push
add
fs
ror
xchg
or
add
inc
push
and
pop
mov
call
sub
js
or
or
test
xor
jne
cmp
mov
lds
aaa
neg
sbb
addr16
dec
jle
js
xchg
cmp
dec
je
pop
inc
movs
mov
movs
xor
iret
test
(bad)
sbb
mov
or
sbb
(bad)
sbb
pop
sub
xor
movs
or
das
add
lods
mov
pop
icebp
fdivr
call
cmp
jmp
dec
sub
adc
rcr
enter
mov
push
inc
sbb
mov
mov
test
jl
mov
aas
mov
in
ss
mov
cmp
jp
cmps
stos
pop
jmp
fwait
rol
sub
or
pop
adc
mov
mov
push
mov
fdivr
sub
jne
mov
dec
ss
push
add
push
push
(bad)
(bad)
nop
sub
sub
mov
movsx
mov
je
dec
and
xchg
dec
test
out
pop
xor
push
pop
cdq
int3
arpl
ss
stos
xor
jl
idiv
movhps
or
xor
adc
or
adc
inc
jecxz
jmp
dec
cli
(bad)
mov
mov
cmp
je
cmp
je
cmp
sahf
and
sub
dec
mov
and
into
mov
retf
cmp
pusha
retf
rol
ret
popf
or
or
inc
pop
pop
fild
sahf
mov
ins
cld
push
adc
jb
retf
or
leave
or
add
cmp
or
(bad)
cmp
loope
pop
pop
inc
movs
lods
repnz
or
ins
test
aaa
sub
daa
test
or
jmp
dec
imul
cld
fsub
and
div
and
mov
or
mov
adc
not
and
daa
sbb
icebp
fwait
adc
mov
xchg
or
mov
mov
mov
xor
and
and
into
jl
imul
retf
je
repnz
aaa
cmp
cmp
into
retf
cmp
push
push
add
jb
jo
adc
sub
dec
cmp
jnp
mov
mov
cli
scas
push
mov
hlt
test
jns
(bad)
ror
add
xor
out
test
or
fild
and
retf
(bad)
cli
add
leave
leave
aam
popa
push
out
inc
and
jnp
push
pop
sub
jl
sar
jp
mov
push
(bad)
and
nop
shr
pop
dec
cmp
rcl
push
and
rcr
or
pop
scas
adc
adc
enter
cmp
or
pop
xor
or
test
xchg
push
(bad)
push
gs
push
add
push
push
imul
add
add
push
fild
adc
push
sub
out
sub
push
xor
push
xchg
jmp
lock
pop
pop
pop
jne
mov
push
ja
inc
std
sub
popf
in
adc
add
lods
or
and
xchg
fstp
and
or
cmp
fs
add
push
adc
in
push
rcr
mov
adc
sub
sub
mov
dec
rcr
ss
adc
pushf
dec
pop
das
adc
retf
cmp
scas
mov
or
aaa
or
neg
(bad)
adc
xor
mov
jne
sbb
xchg
aad
cmps
(bad)
and
or
dec
or
jne
or
and
mov
lock
(bad)
ss
push
pop
xchg
pop
jbe
push
fadd
sbb
cld
sbb
icebp
adc
xor
cmps
icebp
nop
inc
scas
xor
mov
clc
cdq
ror
dec
mov
lock
and
cmp
jae
les
xor
add
cmp
jbe
xchg
es
clc
mov
lods
cmp
scas
fld
fimul
call
je
pop
mov
enter
push
inc
sbb
push
outs
ja
or
cwde
out
and
jne
in
mov
xor
xor
inc
push
loop
ret
mov
mov
xor
add
or
fadd
mov
inc
jmp
pusha
mov
mov
mov
jmp
lods
and
pop
je
pop
push
mov
out
push
cmp
lahf
ja
jecxz
sub
cmp
adc
(bad)
cmp
jne
sub
cmp
ds
xor
dec
jle
jb
(bad)
and
cmp
pop
mov
(bad)
or
add
or
push
push
bound
push
lock
mov
clc
push
mov
repz
out
sbb
mov
mov
or
add
or
test
daa
and
mov
ret
loop
or
inc
push
dec
cmp
mov
jbe
mov
dec
(bad)
adc
cmp
fnsave
pop
cmp
xor
fs
mov
push
imul
into
mov
inc
rol
rcr
mov
mov
hlt
call
lahf
aas
icebp
fs
std
adc
and
cmp
cwde
cmp
call
jo
rol
push
adc
sub
sti
pop
lea
and
push
stc
ss
cmp
and
xchg
hlt
sub
pop
fstp
add
mov
and
jne
mov
mov
outs
or
loop
xchg
shr
imul
mov
repz
adc
pushf
fs
sbb
movs
cld
jl
popf
icebp
or
add
je
mov
inc
inc
xchg
add
data16
movups
and
xor
inc
dec
cmp
jae
dec
loop
outs
sub
jae
push
sahf
fstp
sbb
push
ret
std
and
cmp
jecxz
or
sub
and
daa
int
push
jbe
pop
mov
add
sbb
xchg
fist
jns
xlat
dec
fisubr
or
xor
mov
scas
or
xchg
fs
retf
push
jb
pop
sbb
addr16
nop
xchg
iret
out
add
jnp
inc
cmp
fld
loopne
daa
jg
(bad)
inc
dec
movs
xor
xor
ins
call
xor
dec
jnp
jp
and
mov
test
mov
or
sub
sbb
lea
add
adc
adc
xor
gs
dec
in
cmps
or
test
mov
fisub
inc
(bad)
inc
fisubr
mov
jne
push
gs
and
inc
xchg
push
inc
repz
jno
ret
sub
push
(bad)
(bad)
xchg
mov
adc
xor
(bad)
lahf
out
test
pop
sbb
dec
push
jb
cmp
dec
fcomp
mov
hlt
mov
cmp
lock
sub
sbb
pop
clc
jbe
nop
sbb
xor
idiv
xlat
add
int3
adc
xchg
dec
sbb
sub
aam
adc
xlat
dec
in
fwait
push
mov
jb
xchg
lahf
fs
test
shl
(bad)
fsubr
mov
loopne
mov
pop
jl
mov
xchg
sbb
inc
mov
add
and
scas
fmul
mov
dec
add
inc
push
cmp
mov
leave
jmp
push
aam
movs
mov
ins
and
jns
pop
lahf
adc
and
int3
movs
cmp
pop
or
stos
or
(bad)
adc
clc
mov
push
nop
sti
dec
fist
adc
and
dec
or
shr
dec
imul
mov
fild
mov
mov
xchg
dec
push
nop
in
xchg
lock
rcr
add
jmp
inc
mov
rcl
and
fbstp
jo
movs
mov
sub
enter
pop
call
fs
pop
fadd
dec
xor
in
lahf
and
mov
xchg
push
pop
mov
add
aam
fs
pop
clc
shl
stos
add
cs
lods
mov
xchg
pusha
or
sub
inc
pop
adc
pop
clc
mov
jg
pop
mov
adc
mov
dec
mov
leave
stos
arpl
retf
leave
sub
sbb
nop
mov
enter
cwde
cwde
mov
adc
les
add
mov
out
fwait
jmp
or
psubusw
fcomi
add
sbb
sub
mov
lods
sub
les
out
sub
mov
sbb
add
mov
call
sbb
aam
loopne
xchg
movs
lahf
cwde
leave
sub
test
push
adc
pop
jb
mov
jb
fstp
dec
mov
lahf
enter
adc
mov
stc
mov
je
mov
repnz
jg
dec
xchg
cld
jns
pop
ficomp
push
jmp
(bad)
jns
pop
lds
inc
loopne
jb
push
xor
fistp
adc
neg
cwde
or
les
add
cmps
inc
leave
xor
xchg
aas
fadd
rol
cmp
enter
xchg
call
mov
enter
mov
repz
and
add
les
mov
cmp
ins
movs
add
(bad)
in
es
xchg
pop
lock
sub
push
cwde
push
shl
push
mov
jg
movs
in
fiadd
mov
leave
add
push
je
inc
das
jns
jecxz
add
test
loopne
aad
push
or
mov
mov
mov
inc
or
dec
scas
nop
xlat
pop
dec
ret
in
leave
push
mov
and
cwde
cdq
call
xchg
dec
sub
test
sub
mov
int3
add
imul
inc
inc
xor
xchg
adc
inc
aaa
sub
cmps
pop
pop
mov
lods
outs
(bad)
ds
adc
xchg
test
xor
sbb
in
les
push
repnz
mov
inc
shl
push
push
popa
(bad)
pop
push
imul
xchg
push
out
dec
sub
xchg
xchg
and
test
inc
mov
(bad)
out
mov
(bad)
das
sub
stc
and
cmps
pop
mov
pop
inc
bound
mov
and
rcr
mov
cli
lock
(bad)
cld
dec
sbb
mov
cmp
jns
jmp
pop
out
daa
dec
mov
in
(bad)
and
jl
loop
mov
lahf
or
fild
loop
mov
leave
cdq
xchg
add
add
push
pop
iret
repz
cdq
mov
or
and
mov
iret
repz
nop
shl
lock
cmps
stc
adc
outs
fistp
fild
add
arpl
stc
mov
div
mov
aaa
sub
cs
add
retf
ja
idiv
pop
pop
push
es
xchg
and
ins
outs
arpl
imul
sahf
les
repz
adc
adc
xor
shl
out
cld
out
xor
inc
pop
inc
push
push
and
jo
cmp
out
mov
aaa
lock
data16
fs
add
push
push
jo
inc
out
mov
(bad)
mov
cld
iret
repz
adc
fsubr
stos
sub
mov
pop
repz
inc
fisubr
mov
pmaddwd
aas
aaa
(bad)
or
push
push
or
fs
sahf
fcomi
js
out
add
jbe
(bad)
sidtd
test
cmp
leave
repz
rcl
fwait
mov
add
sahf
aam
push
push
imul
outs
sar
inc
popa
jecxz
sbb
push
fwait
mov
push
dec
aad
jg
pop
mov
pop
jo
aas
add
outs
sbb
out
push
daa
cs
push
pop
inc
cmp
repz
aas
xor
sbb
inc
aam
out
cmp
call
ficomp
xor
xor
out
sahf
jnp
scas
push
es
sahf
out
sahf
mov
pushf
cmp
jmp
inc
in
stc
cmp
inc
hlt
inc
or
cmp
jns
sbb
fisttp
cmp
dec
cmp
xchg
xor
push
add
iret
cmp
(bad)
mov
push
aam
in
pop
iret
repz
pop
jle
fdivr
repz
or
cmp
repz
and
iret
repz
mov
ins
rcr
(bad)
psrlw
dec
jle
sub
cs
adc
mov
frstor
sub
outs
cs
push
xor
inc
clc
mov
js
ficomp
push
sbb
sbb
cmp
repz
je
jne
cmp
repz
in
push
cmp
dec
faddp
out
iret
jnp
push
adc
sub
mov
aas
jl
dec
push
push
gs
add
out
cs
mov
sahf
out
jle
or
or
enter
jo
fadd
cmp
repnz
sbb
mov
fiadd
repz
or
repz
jnp
push
push
push
ins
and
fimul
test
jmp
push
movs
jg
sahf
out
sahf
push
mov
mov
mov
sahf
out
push
pop
cld
sbb
stc
push
sbb
jb
test
popf
out
pop
add
ins
(bad)
not
imul
outs
imul
and
in
out
scas
push
and
arpl
jbe
arpl
int3
ret
(bad)
outs
popa
ins
ds
xor
aaa
xor
out
jmp
outs
jb
jb
jae
jne
push
bound
inc
test
fisubr
sub
imul
and
(bad)
jbe
ins
imul
mov
mov
fbstp
fwait
outs
out
fdivr
xchg
push
fidiv
mov
outs
adc
lods
dec
jo
sub
cdq
jne
or
mov
(bad)
int
jnp
push
bound
repnz
xchg
fsubr
mov
fs
mov
xchg
imul
mov
add
and
sbb
iret
outs
popa
jmp
ins
fistp
ins
sbb
pusha
inc
outs
mov
mov
mov
in
pop
imul
push
js
jo
das
data16
es
out
rol
sub
mov
je
or
push
pop
jns
jo
addr16
shr
mov
fisttp
jbe
xchg
pop
bound
mov
pop
jo
jae
and
sbb
cs
mov
inc
sub
cmp
adc
fild
xor
or
fisub
shl
popf
addr16
or
outs
je
add
push
add
pop
pop
push
fiadd
(bad)
pop
adc
mov
pushf
fs
shl
fimul
inc
shl
ja
imul
(bad)
ins
outs
ja
pop
leave
pop
shl
or
jp
data16
or
adc
ins
lock
in
bound
sub
lods
test
pop
int
push
mov
imul
ins
xor
jne
lahf
ja
push
mov
(bad)
mov
adc
aas
test
nop
and
test
and
out
daa
(bad)
push
movs
cmp
mov
test
push
outs
ins
outs
xchg
inc
outs
repnz
and
pop
and
sub
daa
addr16
shl
mov
push
es
gs
and
or
nop
stos
push
inc
inc
dec
push
and
imul
add
ins
push
cmp
pop
add
in
shr
xor
inc
mov
cdq
imul
retf
int3
mov
and
mov
sub
pop
push
jo
lods
and
add
popa
xor
shl
cwde
mov
push
mov
pop
ins
imul
sub
push
popa
icebp
nop
sub
fbld
mov
cdq
nop
or
rol
and
xor
cmp
cmp
cmp
scas
and
mov
push
test
aaa
cmps
push
and
mov
adc
add
imul
pop
imul
sub
das
arpl
(bad)
xlat
add
bound
xchg
adc
push
pop
das
pop
and
mov
fcomp
push
pop
sub
mov
shl
fmul
aaa
popf
mov
(bad)
mov
aas
sbb
push
add
or
mov
cmps
ror
push
fstp
mov
je
pop
out
ret
and
pop
inc
xchg
pop
das
aas
stos
lods
std
pop
xor
inc
ins
cmp
xor
gs
ins
mov
xor
and
test
and
mov
fwait
jbe
adc
inc
mov
push
(bad)
lock
xchg
ss
push
jg
inc
into
jae
ins
rol
in
rol
call
dec
in
lock
clc
cld
fdivr
out
loope
or
iret
mov
sbb
push
ja
bound
sahf
cmps
repnz
sub
(bad)
scas
add
adc
and
repz
and
sub
adc
lock
test
les
jbe
movups
push
push
sysret
xor
xor
pop
out
imul
rol
pop
inc
jo
lock
jnp
bound
dec
in
fnsave
sbb
into
push
sbb
fs
push
sbb
fcom
push
lock
jns
popf
push
adc
push
nop
rol
repnz
adc
cmps
nop
and
pop
(bad)
ja
push
pop
adc
xor
sub
out
xor
xor
ss
cmp
mov
mov
mov
addr16
push
ins
ins
adc
jb
cld
call
clc
jne
ja
jns
add
adc
or
or
or
sbb
in
dec
inc
sub
sbb
pop
push
adc
adc
adc
mov
or
inc
sti
call
rol
inc
add
add
push
pop
or
or
or
push
ud2
jnp
push
sub
cmp
xor
fisubr
fbld
cdq
cdq
mov
movs
xor
mov
lds
bound
mov
push
jecxz
adc
jp
add
inc
in
arpl
ud0
(bad)
aas
call
adc
(bad)
mov
push
scas
push
sahf
out
in
dec
xor
fadd
and
jns
mov
dec
sar
inc
aam
mov
icebp
(bad)
(bad)
in
fistp
(bad)
xchg
sar
rcl
lods
nop
add
dec
inc
out
push
and
ins
dec
cs
cmp
dec
imul
mov
ds
cmps
mov
and
mov
bound
sbb
jle
inc
mov
cld
xlat
pop
loope
jns
xor
into
push
shl
lods
cld
mov
inc
rcl
mov
mov
(bad)
dec
popf
jae
jno
hlt
dec
call
push
mov
dec
repz
xor
leave
(bad)
xor
test
cmp
das
sbb
pop
add
xor
mov
mov
jbe
lahf
in
retf
mov
add
mov
xor
pop
adc
nop
inc
cmp
cwde
dec
or
push
lock
out
rcr
jno
and
fistp
xchg
gs
jo
std
push
xchg
scas
ins
aaa
cs
mov
aas
mov
fidivr
push
push
sahf
xchg
test
ja
call
inc
pop
fwait
cmps
stc
sbb
rcl
mov
cmp
push
mov
sbb
pusha
xor
and
inc
outs
ret
lock
outs
imul
arpl
mov
mov
out
je
pop
pop
add
jo
pop
loopne
in
mov
and
push
stos
sub
test
push
adc
xchg
adc
add
xchg
sbb
jo
push
add
add
cdq
jbe
add
add
adc
ja
call
pop
test
adc
aaa
mov
add
or
(bad)
fisttp
push
add
add
mov
mov
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
(bad)
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
ret
(bad)
(bad)
enter
int3
int
(bad)
(bad)
dec
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
fcom
lock
repnz
cmc
div
clc
stc
cli
sti
cld
adc
call
and
adc
adc
sbb
sbb
push
pop
and
and
jmp
and
and
es
sub
sub
sub
cs
out
cmp
cmp
(bad)
sbb
cmp
pop
pop
ror
(bad)
pusha
aas
jnp
jge
jg
test
or
imul
dec
dec
dec
dec
dec
dec
dec
dec
loope
inc
fwait
sahf
push
push
push
pop
pop
pop
add
xchg
(bad)
aas
inc
add
or
(bad)
scas
mov
xchg
imul
mov
or
loopne
push
xor
cs
ins
add
sti
ins
or
inc
in
pop
inc
jb
gs
gs
dec
pop
push
dec
in
sub
stos
adc
inc
jb
arpl
adc
js
and
push
jge
cwde
jge
popa
jo
outs
push
and
jo
push
cwde
push
je
arpl
jne
and
or
outs
outs
ins
push
(bad)
ds
fisub
popa
rol
das
mov
and
bound
push
sub
xchg
(bad)
pop
mov
sub
pop
out
jne
push
gs
out
pusha
sub
pop
dec
dec
imul
jb
push
push
mov
jb
fwait
shr
inc
js
adc
add
dec
jne
bound
ss
outs
addr16
sub
cwde
aaa
lods
mov
popa
(bad)
jno
cs
test
push
addr16
add
mov
jo
mov
rol
gs
inc
outs
test
adc
es
mov
addr16
out
int3
fnstcw
inc
retf
pop
pop
repz
lods
loope
xchg
push
and
mov
dec
jbe
dec
jae
dec
icebp
ror
sub
jmp
sub
mov
fs
mov
out
add
add
add
sub
xor
cmp
jns
out
inc
or
push
out
sahf
out
pop
or
or
push
adc
out
adc
adc
adc
out
sahf
test
mov
mov
jns
sbb
sbb
out
sahf
out
fcomp
jns
call
cmp
push
inc
xor
push
or
repz
repz
and
iret
sub
xor
cmp
repz
inc
sub
repz
repz
sub
repz
ss
cmp
repz
cmp
aas
repz
pause
inc
cwde
inc
mov
inc
test
mov
mov
inc
ror
repz
repz
dec
loopne
repz
dec
call
repz
cmp
add
pop
or
adc
adc
add
sbb
push
and
jns
out
xor
add
out
push
pop
pusha
or
or
test
sahf
out
nop
or
jns
out
mov
rcl
out
sahf
int3
adc
adc
adc
sahf
out
lock
repz
rcr
adc
and
iret
repz
sub
cmp
sbb
push
push
pop
pop
push
and
and
repz
mov
cwde
and
and
mov
mov
iret
repz
sub
sub
repz
in
sub
sub
jns
das
sbb
sub
jns
out
xor
out
sahf
out
cmp
sahf
out
sahf
cmp
ds
jns
out
aas
mov
jns
out
inc
les
out
sahf
inc
call
add
iret
repz
or
sbb
cmp
repz
xor
iret
repz
dec
dec
push
push
push
pusha
cmp
repz
ins
push
js
repz
xrelease
imul
mov
sahf
out
sahf
rol
pop
call
jns
or
add
iret
repz
adc
iret
repz
xor
cmp
dec
sbb
pusha
sub
cmp
nop
inc
pushf
imul
call
rcr
fmul
call
sar
fmul
push
or
call
add
inc
jns
out
add
pop
pop
or
jns
out
or
jl
xor
push
call
movs
sub
test
adc
dec
push
imul
iret
cmps
rcl
adc
pop
sbb
out
push
adc
and
sub
jns
out
cmp
inc
cmp
imul
cmps
jnp
test
nop
sbb
sub
test
rcl
push
sar
and
and
ja
xchg
cmps
and
and
or
iret
repz
adc
sub
or
call
inc
sub
xchg
cmps
rcl
xor
dec
movs
test
xor
dec
push
imul
dec
movs
test
cmp
sub
inc
loopne
dec
push
jns
in
inc
clc
dec
add
lahf
cmps
sar
adc
add
add
repz
sbb
push
ret
rol
inc
es
mov
dec
push
fmul
pop
fcmove
repz
fs
mov
repz
iret
xchg
aad
repz
repz
cmp
(bad)
(bad)
rcr
fadd
iret
repz
int3
hlt
mov
jae
push
enter
or
push
and
outs
and
xchg
and
cmp
out
outs
sub
pop
push
jae
jns
jge
mov
js
sahf
out
push
inc
sub
inc
push
iret
fwait
or
nop
xchg
add
iret
repz
push
test
push
mov
mov
or
push
mov
cmp
push
cmp
mov
outs
xchg
push
hlt
dec
xchg
jns
shl
mov
int
jns
out
lods
and
xor
jnp
xchg
cmp
outs
push
lds
sahf
out
pusha
(bad)
ins
rcr
dec
test
nop
shl
sahf
aaa
and
push
pushf
ror
test
repz
fnsave
iret
repz
fadd
in
stc
cmp
rep
cld
lods
or
jns
cmps
fist
and
sahf
out
sahf
sub
cmp
inc
loope
jnp
out
push
fistp
push
cmp
(bad)
aaa
xor
mov
sub
jns
ds
push
pop
movs
push
dec
xlat
cs
mov
jns
loop
daa
or
mov
iret
repz
aam
loopne
mov
mov
mov
push
or
sub
ret
or
inc
mov
das
push
sub
push
ret
xor
scas
push
inc
pop
adc
fwait
adc
or
cmp
fwait
xchg
sub
pop
push
pop
fisub
js
push
out
iret
push
push
(bad)
xchg
push
mov
(bad)
xchg
push
push
pop
repz
dec
aaa
mov
iret
repz
lods
js
cmp
sbb
adc
les
push
aam
inc
xor
iret
repz
loopne
xor
cwde
adc
outs
or
cmps
push
mov
sub
adc
push
sbb
aaa
cmp
out
push
xchg
mov
mov
popf
push
dec
ja
icebp
cmp
pop
jne
push
ja
sahf
idiv
jl
push
(bad)
repz
xchg
cmps
adc
xchg
(bad)
int
out
xchg
ss
push
jle
adc
int3
mov
push
lods
push
out
push
push
jns
out
push
les
loope
out
lock
push
cmp
rcl
push
pop
rcl
idiv
push
sbb
sahf
and
xor
pushf
ret
mov
dec
push
pop
pop
cmp
jnp
push
push
push
fs
pusha
mov
repz
xor
iret
mov
mov
push
rcr
push
int3
jmp
mov
inc
sar
cdq
xchg
push
sub
test
push
pop
aaa
xor
inc
icebp
mov
inc
push
push
mov
repz
pusha
adc
and
hlt
cmp
and
out
pop
push
test
cmp
jnp
sbb
mov
pushf
call
push
and
adc
push
xor
cmp
sahf
push
fdivr
sub
jnp
daa
mov
outs
adc
cmp
ror
add
loop
nop
cmp
jae
xor
outs
push
mov
stos
and
repz
inc
fs
push
lods
in
lods
push
packsswb
mov
push
repnz
jae
fs
gs
movd
in
mov
mov
dec
imul
je
push
add
leave
in
in
outs
pop
jo
pop
pop
fld
jb
jb
push
retf
leave
xchg
xchg
jno
je
push
xchg
jne
fs
outs
bound
gs
ins
fbld
(bad)
ins
pop
lock
in
sub
mov
outs
jne
ins
cs
pop
mov
imul
jbe
setg
ja
jne
mov
(bad)
addr16
sub
ss
in
gs
scas
das
popa
pop
neg
ins
fild
jns
jno
mov
sub
or
aaa
push
push
aas
icebp
xor
xor
scas
jb
icebp
jecxz
pop
pop
inc
push
inc
add
ja
in
inc
push
sub
neg
mov
push
inc
add
in
jne
jb
push
jne
jge
test
je
test
out
push
out
push
xchg
mov
mov
(bad)
jb
xchg
bound
jo
scas
cs
mov
jo
out
push
push
jecxz
into
aas
dec
xlat
mov
in
shr
jbe
ds
pop
(bad)
sbb
out
dec
jg
daa
or
out
gs
je
cs
cmps
ins
dec
pop
mov
inc
ins
xlat
jmp
mov
aas
sub
or
dec
pop
pop
lods
cmp
jg
mov
ja
dec
ds
mov
in
cs
pop
mov
loop
shl
pop
iret
xlat
inc
imul
fbstp
dec
mov
je
(bad)
gs
das
mov
pop
(bad)
imul
sub
pop
inc
das
push
mov
sbb
push
push
ja
dec
fcmovnbe
jbe
out
ja
jg
ficom
gs
ficom
pop
jb
loopne
pop
jb
ins
pop
dec
arpl
xchg
out
sbb
sbb
out
arpl
jmp
mov
jno
xor
push
(bad)
bound
jae
mov
cmps
dec
sbb
aad
loopne
push
xchg
xchg
ss
lahf
mul
xlat
ins
push
mov
pop
test
sahf
fisub
lds
push
jg
jnp
pop
cmp
push
pop
mov
ins
mov
ins
inc
gs
icebp
push
not
dec
scas
pop
or
cmp
fidivr
inc
dec
neg
push
pop
xor
or
inc
add
mov
add
imul
add
in
mov
add
fistp
(bad)
(bad)
test
shl
(bad)
push
inc
sahf
mov
mov
(bad)
mov
outs
call
(bad)
push
sbb
fist
dec
out
fadd
test
or
outs
scas
popa
xor
adc
push
push
daa
pop
inc
vminss
pop
cmp
mov
add
pop
pop
sar
addr16
addr16
aaa
pop
inc
aad
mov
sub
pop
jb
mov
ja
jg
push
out
mov
dec
inc
not
loopne
sbb
das
outs
mov
scas
aas
dec
inc
inc
pop
push
mov
das
inc
pop
push
das
push
nop
outs
pop
imul
pop
push
add
lods
or
adc
push
ret
(bad)
pop
mov
aas
mov
fnsave
jp
xlat
or
jnp
sbb
fs
pop
inc
addr16
pop
repnz
imul
imul
xchg
ins
add
ins
xchg
sbb
imul
ins
das
jno
rcl
pop
ja
addr16
jp
arpl
test
mov
inc
or
or
imul
xlat
imul
jo
les
push
fsub
pop
bound
cmp
jg
push
push
pop
or
retf
jne
jecxz
add
mov
iret
popa
dec
pop
bound
jp
xlat
push
inc
dec
pop
(bad)
enter
addr16
mov
pop
jb
jo
push
adc
add
ins
push
jecxz
push
ja
inc
pop
(bad)
xchg
jl
jmp
cdq
mov
ds
scas
pop
jae
add
outs
inc
ds
ins
add
add
fimul
jp
gs
inc
inc
cs
das
repnz
leave
jne
ja
aaa
gs
scas
(bad)
in
xchg
lock
aas
or
sub
or
pop
pop
xor
pop
push
mov
ins
dec
das
out
jge
mov
imul
outs
das
out
popa
pop
adc
outs
or
lea
mov
or
or
dec
mov
(bad)
popf
cmp
(bad)
push
jp
inc
movs
jmp
sbb
jb
jns
test
mov
mov
pop
out
in
fimul
stos
outs
outs
fist
pop
inc
jns
lea
in
loop
inc
xchg
xchg
addr16
arpl
outs
jae
mov
xlat
pop
or
lea
pop
or
fwait
push
aas
push
pop
sti
mov
inc
imul
xlat
or
or
jae
fcmovnb
and
call
dec
pop
fild
or
imul
das
push
mov
and
jb
imul
push
fs
sti
pop
jae
or
aas
iret
ins
pop
das
jg
stos
shl
lods
in
add
pop
jbe
mov
div
imul
mov
xchg
mov
gs
mov
dec
test
jne
cmp
and
data16
add
js
jp
pop
jbe
(bad)
out
rcl
mov
mov
push
or
jle
jbe
jo
mov
and
xchg
cmps
mov
xchg
in
xchg
out
or
mov
xchg
mov
mov
aad
(bad)
xchg
xchg
ret
call
aas
inc
outs
jb
js
icebp
push
push
adc
scas
add
xor
cmp
or
neg
sbb
push
adc
mov
sbb
scas
and
jnp
adc
jae
enter
add
mov
mov
mov
xor
scas
jp
outs
lock
add
stos
popa
and
push
call
fwait
cli
mov
neg
mov
popa
mov
scas
popa
sahf
and
cmp
aaa
shr
call
gs
pop
loopne
imul
imul
(bad)
add
mov
mov
and
jo
cmp
jns
xchg
ins
xlat
je
push
jo
xchg
js
bound
jae
aas
cs
sbb
xor
xor
sar
sub
pop
fcmovnb
das
scas
sbb
cmp
xor
mov
fld
loopne
rol
arpl
outs
xor
add
je
mov
imul
fist
imul
aaa
sar
(bad)
fist
fist
push
pop
cmp
fwait
gs
mov
cmps
xchg
pop
fimul
scas
mov
push
xchg
pop
xchg
test
add
out
ins
lods
shl
gs
mov
xor
popa
(bad)
mov
sti
jo
outs
cs
sti
cmp
daa
popa
mov
jecxz
or
xchg
jl
jo
out
jo
arpl
push
push
sbb
pop
xor
adc
xor
mov
xchg
xor
fwait
dec
fisttp
imul
push
pop
jb
jne
addr16
(bad)
jns
rol
pop
shl
out
mov
xor
imul
jae
push
loopne
(bad)
pusha
jb
das
jb
add
and
data16
cdq
xchg
sbb
rcl
xor
jp
dec
call
lahf
popa
push
outs
inc
not
adc
push
or
jecxz
mov
imul
mov
imul
aas
and
push
out
fwait
jmp
sub
xchg
sub
add
push
mov
neg
addr16
xor
ins
stos
mov
inc
push
cmp
cmp
push
sti
outs
das
ins
dec
les
fcom
sbb
push
cmp
or
jns
adc
adc
mov
dec
not
das
adc
adc
out
cmp
push
sbb
sbb
dec
repz
sbb
je
in
into
cmp
adc
and
cmps
stc
cmp
and
sbb
sbb
iret
repz
jp
cld
cwde
xchg
test
out
xor
lahf
pop
ret
jo
(bad)
enter
inc
sbb
arpl
fs
push
cdq
sbb
addr16
and
add
(bad)
ds
out
sar
cmp
sub
idiv
imul
or
(bad)
add
popf
mov
xor
loopne
jae
aaa
push
iret
inc
jnp
fwait
mov
and
jb
jnp
dec
adc
jb
adc
mov
mov
enter
xlat
bound
pcmpgtw
arpl
cld
retf
sub
ins
ins
sub
out
jbe
add
add
push
imul
add
add
push
mov
push
pop
push
xor
push
push
aas
into
lahf
lods
and
push
add
pusha
push
ja
out
add
pop
sub
add
sbb
adc
ficom
dec
test
fst
inc
jbe
mov
push
fimul
ss
mov
shrd
adc
adc
pop
jb
in
int
mov
daa
dec
popa
mov
(bad)
fisub
xchg
inc
jo
dec
sub
out
sub
outs
push
dec
arpl
dec
outs
cs
arpl
addr16
pop
jns
jb
pop
push
arpl
loope
js
imul
fincstp
aas
mov
test
mov
adc
mov
pop
inc
dec
push
push
dec
dec
das
fs
jns
call
and
adc
sub
dec
cmp
cmp
pop
fcomp
dec
mov
call
gs
arpl
dec
div
push
pop
inc
mov
ins
outs
inc
int
pop
fisubr
ins
(bad)
jae
lahf
inc
daa
(bad)
mov
(bad)
mov
mov
fisttp
dec
mov
sahf
pop
jmp
call
(bad)
int
jns
jne
ins
aas
add
gs
sahf
push
push
iret
shr
jbe
ss
in
or
and
aam
out
out
mov
loope
movntq
lods
lock
pop
in
nop
sub
pop
pop
xor
sub
inc
daa
dec
jnp
push
arpl
push
fld
das
add
jmp
fsubr
test
add
and
js
mov
mov
jmp
add
and
jle
ins
sahf
pop
jle
or
dec
clc
fnstcw
xchg
out
(bad)
add
dec
cmp
sahf
ret
push
inc
call
dec
lahf
pop
mov
mov
sahf
adc
fidiv
or
push
dec
dec
and
xor
es
ss
out
mov
jnp
dec
push
pop
dec
dec
das
add
push
inc
and
ins
push
cmp
mov
ud2
cmp
shr
lds
inc
stc
fadd
push
arpl
jmp
out
jl
push
inc
sub
dec
popf
push
dec
dec
inc
dec
pusha
(bad)
sti
push
daa
lods
adc
cmp
adc
pop
fiadd
aaa
dec
pop
mov
pop
fistp
outs
ja
outs
addr16
pop
aas
mov
xor
imul
int
pcmpeqb
popa
xor
xor
and
xor
mov
add
mov
inc
dec
retf
add
stc
data16
ins
outs
fldcw
jnp
inc
xor
pop
push
inc
int3
repz
xor
xor
xor
daa
outs
ss
data16
test
sub
add
add
cwde
add
je
pop
push
sbb
hlt
loop
sbb
add
retf
add
shl
call
or
ret
mov
aas
and
dec
pop
jle
into
push
add
pop
lock
jg
mov
inc
inc
out
jg
outs
fucomi
ins
adc
ror
addr16
add
add
outs
push
inc
inc
(bad)
pop
push
(bad)
aaa
dec
mov
adc
iret
mov
out
mov
or
xchg
jno
mov
into
jne
ret
ins
cmp
jg
bound
pushf
jp
outs
mov
mov
je
call
stc
mov
es
sub
sahf
out
cmp
push
pusha
aas
ja
dec
test
jle
ss
push
cmp
jl
push
je
es
jl
repz
repz
dec
cmp
cwde
movs
out
jns
stos
mov
push
mov
push
mov
mov
sahf
out
sahf
rcl
fcomp
loopne
jns
out
call
repz
out
add
add
or
repz
adc
and
cmp
repz
pop
push
iret
repz
inc
out
sahf
out
and
sahf
hlt
clc
add
mov
jns
out
pop
je
mov
in
sub
push
push
js
push
cmp
out
hlt
sub
std
mov
push
xchg
pop
inc
in
es
popa
ins
fsub
push
out
jne
je
jae
push
data16
cmp
ret
jb
gs
repz
test
ss
jb
jb
arpl
nop
dec
add
cs
ss
and
mov
les
je
cli
ins
pop
gs
ds
inc
in
pushf
cmp
iret
cmp
pop
out
push
push
dec
lods
inc
sub
sub
push
sub
out
sub
cmp
ds
sbb
jns
sub
sub
out
neg
(bad)
addr16
sub
sub
das
and
inc
cmp
push
pop
pusha
jbe
inc
daa
add
push
int
dec
bound
adc
mov
data16
data16
dec
xor
sub
addr16
sbb
fs
jae
pop
jbe
mov
es
daa
adc
daa
jecxz
push
cmc
add
les
ds
or
push
sub
dec
mov
jne
pop
jae
jg
ret
sub
inc
xor
jne
js
mov
inc
imul
retf
bound
add
sbb
and
gs
js
inc
or
or
mov
jne
dec
aaa
push
pop
sbb
sbb
push
push
les
mov
fistp
inc
ss
mov
(bad)
pop
pop
inc
cmp
outs
ins
mov
dec
retf
shl
out
dec
jge
movs
outs
int
cmp
test
sub
cs
sbb
mov
ret
mov
stos
push
in
mov
inc
inc
fsubr
cmp
ror
fld
cmp
das
inc
mov
sub
rcl
pop
scas
test
mov
ins
mov
jp
and
inc
cmp
ins
or
mov
mul
inc
jb
jns
sbb
xchg
jns
adc
int3
sar
nop
daa
xchg
cli
outs
arpl
and
cmp
add
sti
fisttp
call
adc
add
jge
mov
push
or
push
cwde
jne
test
push
mov
movs
int3
cmp
push
jo
ja
ret
add
pop
cld
cs
cdq
test
xchg
les
pop
xor
jns
cs
inc
jo
js
ins
push
sub
push
xchg
pop
into
jae
(bad)
call
outs
xor
inc
fsubr
mov
pop
and
push
(bad)
dec
xor
ror
pop
mov
repnz
cmp
movs
pop
dec
les
sahf
pop
add
xor
dec
sbb
cmp
dec
cmp
dec
sahf
xchg
out
jl
mov
mov
push
loopne
fwait
in
(bad)
les
sbb
pop
inc
mov
pop
dec
pop
push
js
leave
jnp
and
cwde
inc
rcr
cmp
dec
in
jg
fstp
mov
cmp
push
push
dec
out
jns
leave
jo
pop
xchg
push
inc
mov
(bad)
mov
jns
sahf
xchg
xor
and
xchg
out
cmp
inc
movs
cmp
sahf
inc
les
inc
iret
leave
xor
adc
repnz
cmp
dec
je
cwde
daa
iret
leave
jae
mov
stc
pushf
cmp
push
and
pop
rcr
adc
adc
fimul
nop
ss
pop
mov
mov
jecxz
mov
mov
sbb
pop
lods
push
pop
push
pop
scas
cs
repz
ins
and
pop
imul
xor
inc
mov
pop
adc
aad
fild
imul
inc
jae
ret
fidiv
sub
xchg
adc
xlat
fild
adc
and
sub
mov
test
das
mov
arpl
das
rol
jecxz
add
push
cmp
fisubr
push
popa
pop
aam
test
aas
jnp
and
push
push
pop
lock
jecxz
scas
cmp
mov
iret
aas
outs
and
aaa
movs
arpl
outs
or
outs
das
jae
mov
pop
sub
test
jmp
mov
inc
jae
jno
mov
ins
mov
pop
mov
push
jg
sahf
push
gs
xadd
lods
inc
pandn
stos
jmp
jmp
push
gs
dec
ins
daa
packssdw
mov
pusha
cmps
inc
inc
push
jns
mov
clc
push
jg
into
gs
scas
mov
fadd
mov
outs
jne
pop
out
ss
popa
adc
pusha
and
lods
ss
aas
fild
jnp
push
ja
ret
jnp
sub
fisub
jbe
mov
jecxz
pop
sar
jo
out
bt
push
inc
arpl
dec
xchg
push
fbstp
sbb
lods
fdiv
mov
stos
aas
pop
push
jo
div
stos
or
aas
push
adc
or
jb
push
cmp
inc
daa
inc
pop
mov
lock
add
jg
rol
aaa
push
test
push
outs
inc
fcmovnu
aad
jne
retf
aas
xchg
mov
lahf
cmps
ja
in
rcr
fs
out
add
btr
scas
outs
sahf
shl
ror
adc
pop
dec
les
inc
inc
aam
mov
mov
outs
dec
pop
pop
mov
inc
cld
pop
sbb
fnstcw
dec
mov
push
sub
repnz
dec
push
push
pop
cmp
imul
jo
test
cs
pushf
cmp
lods
(bad)
repz
mov
jmp
cld
adc
and
les
add
dec
and
fidivr
cmp
pop
cmp
xchg
inc
xor
scas
pop
cmp
mov
pop
xor
jg
mov
sub
out
ins
push
sub
test
test
popa
push
push
pusha
and
pop
jo
sbb
sub
pop
add
add
push
push
push
jbe
inc
mov
sub
sub
xchg
es
imul
xchg
push
daa
imul
mov
xchg
setbe
dec
or
jge
add
sbb
adc
repnz
adc
sbb
dec
outs
inc
inc
xor
loope
mov
repnz
pmuludq
and
and
inc
dec
cmovns
add
ja
aaa
inc
das
push
add
js
push
aaa
dec
imul
dec
fs
pop
push
inc
jb
dec
imul
xor
jns
imul
bound
pop
dec
inc
inc
(bad)
(bad)
(bad)
jmp
inc
dec
ins
dec
xor
jae
aaa
outs
ins
arpl
bound
inc
inc
jb
inc
je
xor
inc
jae
(bad)
(bad)
(bad)
push
push
push
ins
inc
xor
jne
push
cmp
ss
jae
inc
js
push
inc
inc
push
arpl
(bad)
(bad)
(bad)
call
ja
push
xor
inc
dec
ins
je
inc
push
inc
inc
xor
inc
ins
push
(bad)
(bad)
(bad)
fbld
je
dec
jne
push
imul
push
ins
jb
jno
push
push
arpl
jg
inc
push
dec
jno
and
inc
ins
dec
fs
mov
jae
push
outs
imul
popa
xor
push
ins
push
push
push
gs
mov
add
ins
cmp
aaa
push
push
inc
and
jae
(bad)
(bad)
push
xor
jo
pop
xor
aaa
push
dec
push
outs
jb
push
outs
cmp
fs
inc
ss
clc
or
or
mov
cmp
dec
dec
repnz
push
inc
ja
cld
cmp
aaa
outs
push
inc
es
inc
jns
push
cmp
xor
(bad)
(bad)
(bad)
(bad)
jns
xor
jbe
xor
cmp
outs
push
push
dec
push
outs
jno
cmp
jno
jae
aaa
bound
jp
(bad)
jg
jns
push
xor
outs
xor
ins
xor
popa
xor
jp
cmp
arpl
outs
(bad)
inc
cmp
inc
jne
push
push
inc
inc
push
inc
push
ss
jno
aaa
fcomp
into
in
bound
outs
inc
push
outs
outs
test
inc
xor
push
inc
jo
hlt
push
push
addr16
lds
dec
dec
jo
xor
jns
jno
dec
dec
xor
jne
test
jg
push
xor
arpl
dec
ss
(bad)
push
xor
jae
xor
ins
dec
push
dec
push
bound
inc
push
xor
cmp
lock
push
jbe
fdivrp
pop
lock
push
push
sbb
jp
js
push
cmp
je
das
retf
ja
dec
inc
push
dec
aaa
xor
xor
addr16
jg
lock
imul
xor
cmp
jo
ins
inc
aaa
pop
push
inc
outs
clc
jg
pop
aaa
push
jne
sub
inc
xor
dec
jns
push
jp
jle
fs
dec
or
js
mul
ins
cmp
outs
cld
push
inc
xor
adc
js
adc
jae
imul
gs
inc
jno
or
popa
pop
pushf
push
inc
push
xor
ins
cld
pop
cmp
xor
cmp
jbe
ins
aaa
push
jno
jp
aaa
cld
pop
scas
inc
imul
xor
push
push
push
je
xor
dec
dec
or
outs
xchg
jo
bound
mov
cld
xor
je
xchg
dec
pop
jo
push
dec
cld
outs
cmp
int3
xor
dec
bound
inc
ins
jno
data16
je
push
cmp
push
pop
ins
imul
je
jmp
(bad)
jmp
cmp
ss
push
popa
jae
xor
pop
imul
jp
jns
xor
icebp
das
cli
pop
arpl
dec
fidivr
ja
cmp
jne
jne
dec
dec
popa
jp
pop
lock
xor
jne
xor
xor
inc
(bad)
jg
fwait
push
push
addr16
repnz
gs
pop
inc
dec
xor
jns
dec
bound
mov
pop
shr
add
ins
xchg
ss
aaa
mov
inc
add
push
popa
gs
ss
(bad)
push
cmp
push
push
dec
mov
inc
inc
push
inc
ja
ss
imul
lods
loope
arpl
(bad)
cwde
dec
pop
cmp
pop
outs
shr
push
ins
xor
xor
cmp
in
fs
xor
popa
fidiv
dec
ss
push
dec
hlt
mov
sbb
outs
dec
inc
dec
push
push
dec
cmps
dec
pop
jns
xor
jbe
stos
addr16
fs
inc
jne
push
popa
inc
dec
imul
sub
pop
pushf
jbe
xor
ins
inc
bound
outs
jle
scas
mov
mov
push
inc
xor
sbb
jbe
cmp
nop
jb
jbe
push
mov
mov
xor
push
xor
pop
cmp
addr16
hlt
jmp
imul
jno
or
call
pop
loope
cld
ins
xor
pop
jp
push
inc
pop
gs
jbe
aaa
adc
dec
ins
dec
push
jne
or
sub
jb
aam
pop
inc
inc
dec
inc
cmp
sbb
push
dec
jb
imul
popa
push
(bad)
dec
js
imul
je
dec
mul
test
jae
pop
xor
popa
not
inc
jo
pop
mov
dec
clc
xor
push
push
xor
push
push
rcl
ins
inc
in
je
int
rcr
xor
ins
add
push
ja
fdiv
icebp
sbb
nop
pop
not
cmp
mov
jns
arpl
dec
push
addr16
inc
je
inc
jbe
(bad)
mov
push
jo
je
inc
dec
push
add
jg
push
es
dec
inc
push
push
inc
outs
pop
jbe
jne
push
inc
popa
inc
fs
pop
add
jns
push
ja
inc
fs
cmc
push
push
bound
je
inc
push
push
xchg
dec
dec
xchg
or
xor
push
je
inc
dec
dec
push
jno
inc
add
jb
pop
aaa
push
jne
data16
dec
mov
mov
inc
in
jo
cmp
jge
ret
jmp
xor
cmp
inc
dec
pop
lock
js
ja
jb
out
push
dec
pusha
jo
dec
pop
dec
inc
push
popa
xor
in
int
dec
push
jo
jo
addr16
ins
dec
xor
outs
xor
loopne
jne
dec
pop
mov
ds
xor
dec
push
fidiv
dec
inc
bound
ss
dec
in
arpl
mov
jno
push
dec
jp
inc
jp
inc
cmp
mov
inc
push
push
or
jo
jbe
jns
push
je
rol
push
xor
jb
push
push
ins
xor
sub
cmp
nop
loopne
push
fs
and
xor
inc
dec
add
xor
shl
gs
mov
push
jns
dec
dec
jbe
bound
scas
outs
adc
clc
inc
push
dec
inc
jns
dec
inc
(bad)
push
mov
push
mov
mov
jl
pushfw
inc
je
ret
cmc
add
fs
dec
push
jns
add
outs
xor
mov
cmc
int
ret
xor
cs
jns
push
pop
push
push
inc
jle
ja
push
cmp
jo
test
push
push
ja
ss
inc
dec
fs
pop
pop
dec
xor
cdq
stos
cs
push
push
push
cli
out
push
inc
push
inc
push
dec
xor
js
inc
inc
inc
push
push
cmp
or
out
mov
push
inc
sub
jno
push
inc
push
dec
add
push
push
scas
mov
push
loopne
cmp
inc
dec
dec
inc
dec
push
gs
and
inc
inc
ret
(bad)
outs
aaa
dec
dec
inc
xor
cmp
dec
out
add
bound
cmp
jp
fs
outs
mov
pop
jp
inc
push
imul
push
loopne
and
ja
push
push
adc
imul
xor
hlt
mov
aaa
cwde
loope
inc
push
cmp
ret
bound
jae
ins
xchg
push
ins
inc
inc
xor
jp
bound
inc
fs
not
fs
bound
ja
xor
adc
and
push
data16
loop
out
stos
sub
jns
push
cs
outs
push
xor
call
adc
(bad)
xor
xor
dec
mov
xor
cmps
push
pusha
push
xor
jmp
imul
stos
inc
mov
inc
pop
pop
outs
imul
imul
je
ss
sbb
addr16
xor
add
sub
repnz
mov
or
ds
jbe
ss
jb
mov
adc
pop
fs
outs
xchg
mov
xchg
loop
das
bound
xor
dec
aaa
outs
into
pop
jbe
imul
add
push
xor
xor
outs
stos
js
jno
push
inc
bound
xor
push
add
xor
inc
mov
jo
sub
xor
push
cmps
push
jl
ret
aaa
pop
inc
aam
push
jns
bound
jns
add
jg
arpl
pop
push
jno
je
dec
pop
push
xchg
dec
xor
je
jmp
pop
imul
push
xchg
push
fimul
pop
push
js
fsubr
push
pop
jne
dec
mov
(bad)
sbb
mov
aaa
ins
pop
in
fimul
push
test
lock
dec
sub
sbb
add
test
addr16
ins
push
jae
and
outs
push
cmp
inc
jae
cmp
fdivr
xor
imul
inc
inc
imul
gs
push
pop
inc
xor
xor
mov
data16
std
mov
push
jbe
cmp
jbe
dec
dec
push
cmp
call
shl
mov
ss
dec
fmul
stos
pop
mov
hlt
ja
inc
dec
inc
outs
data16
cli
jmp
push
arpl
pop
inc
xor
movs
mov
xor
push
or
bound
xor
jns
pop
and
xchg
ror
shr
popa
mov
nop
pop
aam
inc
inc
jne
inc
and
nop
pop
xchg
shr
pushw
fsub
jb
jb
shr
push
inc
pop
ss
dec
jbe
dec
ins
jne
and
loopne
jge
jae
jp
sub
jno
ja
dec
ins
ja
imul
push
clc
ss
bound
dec
jns
cmp
std
inc
js
dec
push
ins
addr16
loope
push
jns
popa
push
rol
push
arpl
push
push
xor
xor
call
cmp
jecxz
mov
inc
dec
inc
ss
pushf
imul
pusha
jne
cwde
jno
jl
dec
test
aaa
icebp
jg
xchg
pusha
mov
fs
dec
dec
xor
push
push
jp
inc
rcr
mov
inc
arpl
fidiv
ja
ss
dec
push
add
fs
push
dec
push
and
jno
dec
aaa
popa
outs
loop
mov
cmps
pop
je
outs
dec
push
sbb
or
push
xor
in
push
push
ins
xor
ins
jns
push
xor
xor
dec
inc
push
cmp
lock
mov
cmp
bound
pop
popa
stos
push
and
pop
stos
retf
dec
imul
mov
test
push
inc
loopne
inc
and
xchg
xor
stos
adc
dec
cmp
ins
dec
push
fs
imul
pop
dec
loop
push
jno
pop
test
cmp
dec
mov
popa
js
gs
push
dec
xchg
ins
imul
std
cmps
push
sub
pop
ins
jo
jbe
dec
loop
and
ja
outs
push
ins
gs
je
xor
dec
test
dec
jp
call
push
push
mov
outs
ins
mov
jno
bound
push
sub
xor
xor
aaa
jp
push
in
data16
push
ins
cwde
imul
add
push
scas
pop
xor
dec
jb
push
push
mov
jb
loopne
sti
push
jno
dec
xor
dec
xor
jp
dec
loop
icebp
stos
cmp
jne
push
inc
outs
aaa
cmp
je
xor
cld
mov
dec
inc
dec
jae
sar
bound
dec
dec
inc
outs
xor
mov
jae
pushf
sbb
imul
fsubr
jle
ficom
pusha
dec
dec
xor
xor
xor
dec
lock
push
push
xor
push
sbb
frstor
bound
outs
outs
push
outs
dec
sbb
lock
jl
adc
and
shl
push
dec
arpl
adc
cli
out
test
push
mov
push
ins
imul
or
mov
xor
cmps
fwait
add
in
dec
mov
or
mov
imul
inc
ja
xor
inc
push
(bad)
out
xor
clc
mov
inc
jno
dec
inc
pop
fs
xor
aaa
xor
fimul
gs
pop
inc
dec
inc
imul
test
jo
sub
es
imul
hlt
inc
pop
push
aaa
outs
jno
stc
ins
ror
push
xor
sbb
nop
arpl
dec
popa
arpl
sub
dec
push
dec
push
push
(bad)
push
push
inc
xor
mov
(bad)
jo
ss
xchg
push
imul
xor
jb
jb
dec
outs
pop
out
jp
push
mov
int3
push
outs
dec
cmp
dec
xchg
les
dec
arpl
lock
sub
stos
push
xor
push
jno
sub
inc
sub
mov
dec
inc
and
mov
push
push
inc
xchg
rcr
jo
ins
jbe
dec
xor
dec
push
out
fdiv
ins
dec
dec
dec
cld
outs
push
retf
push
push
clc
jne
loopne
lock
js
push
aam
push
dec
push
jb
icebp
adc
imul
mov
push
cmp
je
mov
inc
xor
inc
mov
lods
xor
ja
outs
retf
cwde
mov
arpl
fmul
je
pop
call
jbe
xor
je
inc
inc
pop
movs
dec
push
dec
push
pop
and
addr16
icebp
pop
ins
dec
push
jbe
outs
mov
dec
xor
jb
or
arpl
push
push
jb
push
push
inc
mov
adc
inc
arpl
and
fs
push
xor
mov
aaa
jne
push
jns
js
jbe
dec
and
sub
dec
cld
cmp
inc
jae
ja
data16
stos
xor
xor
mov
push
nop
xor
shl
fiadd
xor
cmp
sub
add
push
stos
xor
xor
cli
jne
inc
cmp
push
loopne
jl
cmp
xchg
jo
jl
loop
inc
jbe
jb
dec
inc
xor
mov
xor
xchg
push
mov
data16
outs
add
fcomip
mov
fs
jno
push
outs
ins
inc
outs
add
inc
ja
dec
stos
push
cmps
cmp
mov
ss
dec
push
into
dec
xchg
inc
dec
outs
push
es
fwait
mov
shl
jns
and
dec
push
jp
jae
jns
jo
push
cmp
xor
add
push
push
add
dec
pop
int3
mov
inc
js
and
push
dec
popa
ret
mov
jbe
(bad)
shl
dec
fcom
dec
inc
ins
cmp
xor
push
add
jp
inc
push
pop
jbe
imul
popa
pusha
dec
lock
mov
aaa
aam
pop
imul
(bad)
mov
pop
ss
cmps
imul
je
fdivr
add
inc
pop
xor
ins
jo
inc
js
and
push
mov
outs
inc
and
push
push
push
push
inc
inc
sbb
outs
adc
push
jp
fsub
pop
xchg
inc
lock
dec
jo
cmps
cs
cmc
mov
inc
push
gs
xor
dec
ss
scas
js
inc
mov
pop
push
push
push
inc
popa
push
push
jno
inc
sbb
pop
push
mov
ins
dec
dec
xor
push
pop
ret
pop
xor
inc
push
ins
inc
push
loop
pop
push
inc
ja
add
ret
cmps
mov
push
add
mov
jne
mov
xor
imul
adc
mov
ins
(bad)
or
push
outs
xchg
ret
call
mov
add
scas
push
jmp
dec
xor
imul
adc
lock
aaa
imul
cmps
dec
push
gs
xor
pusha
movs
addr16
ret
cmp
pop
cld
lock
jo
bound
retf
push
push
xor
jb
pushf
fisttp
stos
inc
(bad)
cmp
js
mov
mov
inc
jmp
mov
xor
data16
jp
xor
shr
jl
push
inc
dec
inc
not
outs
jns
dec
xchg
dec
mov
js
and
fadd
inc
in
xor
push
cwde
push
imul
sbb
nop
mov
cmp
inc
cmp
adc
dec
pop
jae
jo
arpl
mov
jbe
lock
jb
fs
stos
adc
push
gs
fs
pop
test
adc
dec
jns
outs
fdivr
popa
jp
ins
fs
mov
ins
(bad)
in
inc
jae
les
popa
dec
gs
addr16
bound
push
clc
cmp
dec
jo
xor
fild
sub
pop
push
dec
fs
mov
mov
xor
imul
cmp
dec
pop
fs
jb
adc
data16
jno
ja
mov
push
jno
test
inc
xor
jbe
loope
mov
inc
push
push
inc
dec
jno
add
or
pop
pop
mov
test
dec
aaa
pop
es
js
xchg
and
cmp
inc
jbe
fs
rol
arpl
pop
ins
jb
jmp
mov
inc
pop
xor
inc
mov
inc
fwait
and
sub
push
fmul
inc
xchg
jo
xor
js
add
push
lds
xor
dec
pop
mov
push
dec
dec
push
pop
push
jae
dec
push
cmp
dec
dec
arpl
xor
ja
or
mov
jb
es
lods
or
les
push
pop
inc
daa
fild
cmps
mov
xor
pop
inc
or
push
inc
outs
push
inc
cmp
loop
adc
add
ss
jb
xor
jb
jbe
mov
out
push
inc
imul
js
scas
js
das
cs
ins
dec
push
xor
dec
cmp
dec
sbb
mov
jp
retf
cmp
push
push
push
cmp
inc
dec
fs
xor
dec
imul
call
xor
lock
dec
dec
addr16
xor
push
inc
bound
push
cmp
push
cmp
jne
js
js
bound
mov
scas
ins
in
inc
inc
dec
add
push
push
inc
data16
dec
ds
fist
imul
cmp
inc
dec
ja
or
jle
aaa
imul
inc
jae
test
lds
aad
xor
repnz
dec
pushf
sub
dec
cs
jp
jae
cld
sbb
mov
jb
dec
ins
inc
xor
push
inc
popa
ret
aam
loope
push
xor
push
push
std
and
inc
cmp
outs
inc
adc
out
push
xor
dec
xor
sar
xor
xor
push
mov
push
mov
inc
je
dec
xor
aaa
arpl
add
bound
dec
dec
jl
cs
icebp
push
pop
cmps
push
xor
xor
mov
test
sub
push
sahf
inc
and
pop
jo
stos
add
clc
mov
cli
addr16
imul
out
push
dec
jp
push
aaa
pop
inc
bound
dec
aad
dec
inc
push
inc
or
sub
push
xor
jp
mov
pop
out
arpl
inc
fs
mov
mov
dec
push
cmp
inc
jns
inc
retf
or
xchg
push
cmp
inc
xor
jae
adc
std
ins
gs
ss
arpl
dec
mov
cld
outs
ins
je
jne
pop
outs
push
jno
push
push
xor
popa
add
(bad)
push
imul
xor
dec
ja
jbe
shr
inc
jns
aaa
(bad)
dec
inc
inc
xor
sbb
test
outs
push
dec
jp
add
xchg
ins
jp
dec
cmp
xor
dec
shl
inc
pop
add
dec
xor
and
hlt
push
outs
sbb
or
dec
inc
jne
jo
push
ja
sub
fidivr
mov
outs
ds
ret
outs
pop
push
jo
dec
xchg
xor
push
dec
imul
clc
fbstp
js
ins
xor
imul
dec
stos
jp
inc
sub
ss
pop
jno
ds
cwde
cmp
loope
inc
cs
pop
dec
aaa
dec
aam
dec
inc
call
cmp
push
inc
push
xor
inc
cmp
cmp
outs
jo
xchg
jbe
pusha
jno
dec
fs
dec
outs
jne
rcl
add
sbb
pop
movs
xor
dec
cmp
lds
mov
arpl
ds
dec
cmp
movs
push
adc
dec
dec
jp
dec
pusha
dec
push
inc
cmp
cwde
js
cmp
sbb
dec
xor
or
xor
push
inc
pusha
stos
loop
mov
xor
xor
sub
push
es
add
inc
scas
adc
dec
jne
gs
sbb
xor
adc
scas
push
ins
repnz
ins
inc
xor
inc
push
inc
mov
jmp
pusha
push
fdiv
push
inc
jo
data16
ins
xor
dec
dec
push
mov
cmps
inc
js
jno
adc
jbe
xor
xchg
arpl
push
jp
cmp
push
and
clc
ins
inc
inc
bound
test
icebp
sub
mov
dec
push
dec
imul
sbb
cmp
cmp
rcl
scas
dec
dec
push
jno
inc
or
xchg
adc
dec
xor
dec
xchg
ss
jne
push
je
push
xor
bound
jno
dec
push
rol
ja
into
xor
mov
push
imul
xor
jb
xor
xor
pop
pop
and
in
bound
dec
inc
jo
push
mov
push
pusha
push
pop
cs
dec
push
inc
test
(bad)
push
stos
xor
pusha
stos
stos
inc
jbe
push
clc
retf
inc
lods
imul
dec
inc
ret
sub
xor
js
shl
fs
cmp
outs
inc
inc
push
xor
dec
fisubr
adc
pop
cmp
cs
jmp
inc
cmp
dec
inc
push
push
jns
nop
mov
sbb
rol
bound
push
mov
shr
pusha
jae
lock
push
inc
call
cmp
jns
data16
addr16
imul
sbb
push
pop
les
pop
enter
push
outs
inc
push
pop
inc
imul
dec
jne
ja
test
push
inc
arpl
jb
nop
xor
cmp
inc
es
cmp
mov
push
inc
mov
jns
test
or
push
jb
sbb
add
rcl
je
imul
jle
pop
inc
scas
push
jae
addr16
je
xor
gs
add
fadd
jne
xor
in
sub
out
push
pop
loope
bound
xor
inc
xor
xor
inc
inc
dec
add
inc
inc
xor
test
je
push
dec
addr16
fs
push
hlt
fs
pop
jp
pop
dec
jp
xor
sbb
enter
jno
outs
call
cmp
push
mov
push
test
adc
push
dec
ja
sub
mov
dec
ja
dec
mov
scas
call
push
inc
push
xor
inc
push
cmp
add
add
pop
jo
xor
inc
jp
ins
cmp
outs
push
dec
lock
xor
inc
mov
aaa
frstor
jns
js
mov
push
jbe
xor
dec
inc
test
cld
popa
pop
bound
inc
dec
bound
push
jl
ins
sub
push
push
cli
dec
mov
jns
js
jp
xor
jbe
push
sbb
dec
mov
dec
int
outs
data16
fs
push
dec
lock
pop
out
fsubr
cli
push
jp
push
dec
jp
inc
jae
ss
mov
add
cli
stos
outs
aam
push
fdiv
dec
push
ins
mov
dec
push
jb
in
pop
popa
sub
jne
sub
xor
bound
sub
gs
xor
xor
push
dec
pop
xor
mov
xor
ja
push
sub
push
fs
push
data16
push
push
xchg
les
cmps
jne
jne
(bad)
fidiv
push
mov
int3
push
fisub
inc
rol
dec
popa
je
call
nop
xchg
jmp
inc
arpl
outs
aaa
push
adc
jno
dec
jns
xor
lea
xchg
sub
jp
inc
xor
outs
dec
mov
mov
arpl
jbe
pop
(bad)
test
push
inc
jmp
jo
push
jno
add
push
push
dec
pop
inc
inc
pop
mov
arpl
ret
inc
push
push
xor
add
dec
ins
bound
bound
ja
imul
popa
xor
inc
jb
std
fisttp
scas
loop
pop
ins
push
push
cmp
popa
aaa
push
ins
std
cmps
clc
pop
retf
push
xor
cwde
scas
js
push
xor
sbb
mov
jbe
sub
ins
arpl
outs
je
or
jmp
jae
imul
push
mov
dec
jno
inc
push
sbb
push
outs
xor
pusha
xor
jbe
push
(bad)
dec
pop
sbb
scas
xor
ins
jp
outs
pop
xor
xor
fsubp
cli
jns
dec
dec
jp
mov
dec
aaa
jns
dec
push
inc
or
loop
push
dec
or
cmps
xor
adc
call
jns
xor
dec
cmp
jbe
aaa
jp
sahf
fsubr
push
xchg
call
mov
or
push
dec
cmp
push
dec
outs
inc
out
addr16
outs
ja
add
cli
aaa
repnz
addr16
jae
fs
dec
sub
cmp
dec
jo
call
or
gs
push
xor
pop
inc
je
jbe
add
inc
jns
dec
push
push
inc
outs
cli
ss
push
sbb
dec
and
jne
or
je
add
bound
inc
dec
pop
xor
ja
sub
push
push
inc
add
pop
and
fimul
inc
imul
fistp
push
sbb
js
pop
imul
repnz
(bad)
int3
fs
sub
jns
jo
je
jo
popa
stos
push
mov
mov
jo
fdiv
cmp
jae
push
push
rol
(bad)
or
pop
adc
pop
pop
push
jl
hlt
stos
or
jp
push
dec
xor
retf
xor
xor
ror
cmp
cmp
jle
data16
push
pop
mov
mov
aaa
push
pop
es
inc
push
pop
dec
push
pusha
cli
xor
push
xor
addr16
ror
xor
push
dec
jmp
inc
ret
push
or
jo
mov
cmp
and
fs
push
inc
inc
ss
pop
push
mov
cmp
push
jbe
xor
fist
dec
xor
je
dec
push
dec
push
push
push
dec
sbb
sbb
push
rol
xor
fimul
imul
inc
xchg
aam
xchg
hlt
or
bound
mov
int3
dec
inc
dec
push
jae
inc
inc
ins
mov
dec
inc
jne
push
je
inc
inc
inc
ss
inc
outs
scas
mov
jp
push
inc
inc
xchg
outs
arpl
xor
push
mov
out
dec
jae
xor
addr16
inc
(bad)
das
sar
jb
aaa
jne
xor
inc
dec
push
push
je
jb
cmp
inc
je
outs
add
inc
xor
push
push
ins
jae
push
push
ja
ins
inc
inc
outs
div
outs
push
in
outs
outs
pop
xor
retf
jno
push
das
push
add
push
ss
enter
push
add
adc
inc
push
sbb
inc
dec
jmp
cld
stos
pusha
dec
jae
ins
outs
inc
push
js
inc
jns
jne
push
inc
out
mov
repnz
jne
push
ret
pop
in
and
jae
inc
arpl
jo
jbe
hlt
jb
jae
sub
ror
stos
jo
xor
fimul
je
mov
test
or
inc
inc
and
push
push
imul
jo
cmp
mov
push
ins
jo
push
jne
cmp
jb
shl
mov
ss
dec
xor
outs
xor
jb
loopne
adc
xor
jp
xor
(bad)
jno
shr
ret
adc
outs
jp
push
dec
sbb
(bad)
sbb
aaa
ja
inc
xchg
cmp
jp
bound
push
xlat
stos
push
test
inc
jo
jo
mov
and
les
jp
ins
mov
dec
(bad)
gs
cmp
xor
push
js
stos
enter
test
dec
push
cs
cmp
js
push
inc
aaa
jb
ss
pusha
pop
cmc
xor
sub
js
fldenv
ins
aaa
pop
imul
mov
or
adc
inc
je
add
movs
add
out
js
test
dec
ss
outs
dec
dec
inc
mov
mov
cmp
push
gs
sahf
push
and
call
ja
jle
adc
xchg
inc
push
mov
jo
stos
imul
jo
cmp
jp
dec
dec
mov
and
pushw
push
dec
gs
shl
ds
(bad)
data16
jg
loopne
neg
dec
popa
bound
gs
bound
jno
ror
es
xchg
dec
push
addr16
mov
and
les
enter
push
fs
dec
xchg
pushf
pop
xlat
stos
or
inc
mov
(bad)
push
aad
pop
inc
push
pop
mov
hlt
dec
inc
outs
push
sbb
xor
dec
data16
(bad)
mov
push
inc
outs
push
dec
push
call
mov
outs
cmp
sar
inc
push
inc
jno
dec
scas
adc
push
sbb
adc
fdiv
xor
loopne
lods
inc
bound
loop
inc
or
sub
jp
outs
sub
addr16
push
jo
push
push
rcl
shl
mov
xor
push
push
cmp
mul
xor
jo
dec
inc
push
popa
push
jmp
jp
cmp
aaa
in
jae
test
cs
dec
mov
dec
inc
push
xor
test
push
dec
in
cmp
cmps
xor
ins
jb
pusha
sub
cmp
push
jns
sub
pop
fsub
outs
jo
push
xor
aaa
push
ja
inc
mov
mov
jns
dec
push
add
dec
inc
xor
xchg
popa
xor
aam
test
xor
push
push
or
cs
jb
dec
ins
jbe
aaa
ins
xor
imul
fs
das
into
dec
xor
pop
xor
ss
pop
inc
mov
xor
popa
jo
outs
gs
mov
inc
gs
xor
mov
push
ins
inc
je
xor
popa
xor
std
jg
mov
or
push
jno
xor
inc
dec
imul
(bad)
pop
into
jns
xor
jp
jno
xor
pop
push
and
out
or
gs
je
push
jne
dec
sbb
sub
pop
jbe
pusha
inc
ins
jno
imul
or
xor
jmp
sub
jo
jno
dec
dec
inc
inc
xor
adc
ja
je
bound
dec
inc
stos
fisubr
fmul
imul
pop
imul
dec
inc
push
xchg
ja
addr16
ja
jae
push
fs
fisttp
adc
arpl
add
arpl
js
(bad)
pop
ror
dec
bound
ss
ins
enter
popf
clc
jg
push
shl
dec
dec
jae
push
push
imul
inc
cmp
xor
je
inc
adc
cmp
dec
xor
dec
inc
push
aaa
dec
inc
inc
xor
fs
stos
mov
ja
cmp
mov
inc
clc
cli
ss
ss
outs
push
inc
lock
inc
data16
jbe
inc
jg
adc
push
and
retf
ins
inc
pop
push
ins
or
jns
sub
aaa
dec
inc
push
je
aaa
jge
adc
dec
cmp
push
dec
jno
mov
xor
stos
inc
pop
arpl
xor
inc
push
push
mov
add
ja
shl
dec
cmp
push
fcmovu
ror
inc
sbb
ins
arpl
rol
sub
dec
push
jno
inc
cmp
stos
jle
mov
dec
push
cmp
inc
jo
dec
jb
inc
in
dec
and
cmp
stos
pop
inc
fs
jo
aaa
inc
cli
dec
mov
outs
push
sbb
dec
mov
push
mov
inc
sbb
fnsave
jge
addr16
jb
dec
jo
xor
add
test
(bad)
jmp
or
push
xor
dec
inc
gs
movs
mov
jmp
xchg
(bad)
xor
pop
jae
pop
push
sbb
xor
dec
mov
dec
outs
inc
dec
ins
cmp
out
push
arpl
push
xor
push
jns
arpl
je
mov
push
xor
inc
inc
loopne
jl
inc
inc
jmp
fs
(bad)
mov
imul
je
fs
mov
pop
pop
mov
hlt
jo
sbb
push
dec
inc
cs
inc
dec
inc
xor
cmp
or
dec
inc
ins
push
dec
das
add
pop
sbb
push
inc
jp
inc
out
sub
inc
mov
fs
push
jb
or
xchg
bound
fwait
pop
push
lods
call
mov
xor
pop
and
push
jb
(bad)
jns
pop
add
mov
xor
jp
sbb
pop
dec
jle
test
and
imul
push
cwde
mov
push
mov
dec
scas
cmps
push
cmp
cmp
sbb
sbb
dec
ins
jmp
in
outs
mov
push
xor
cmp
mov
mov
dec
dec
xor
sbb
jg
xor
dec
and
outs
xor
addr16
addr16
retf
push
std
xchg
ins
xor
je
(bad)
stos
fistp
clc
bound
dec
push
in
ja
push
inc
fcom
inc
inc
aaa
js
mov
xor
fldcw
cwde
imul
outs
push
imul
je
mov
push
xor
push
lds
cmp
push
jo
add
mov
adc
jb
jb
test
push
push
imul
dec
jne
xor
gs
js
js
mov
pop
inc
jne
inc
mov
jmp
push
cwde
cmps
jb
adc
mov
imul
push
push
pop
imul
jno
jno
shl
aaa
lds
(bad)
jmp
or
inc
inc
ins
popa
ins
outs
push
dec
xchg
add
imul
fbld
outs
inc
dec
push
ds
xor
test
pushw
call
jne
push
jo
cs
pop
sub
cmp
data16
fs
dec
inc
cmp
xor
inc
xchg
cmp
in
dec
push
push
in
fidiv
xor
jne
outs
add
fbld
int3
jns
xor
cmp
inc
push
popa
ins
aaa
outs
(bad)
xchg
push
xchg
je
xchg
inc
xchg
mov
dec
sbb
and
jo
or
inc
outs
cmp
push
push
cmp
push
push
ja
(bad)
xor
mov
push
dec
gs
aaa
dec
test
std
or
mov
push
jp
inc
js
jne
inc
js
add
mov
dec
push
jg
(bad)
mov
inc
push
test
add
xor
jo
push
and
dec
mov
mov
ss
dec
data16
outs
stos
inc
xor
inc
ja
mov
push
pop
ins
jmp
ins
push
jno
xor
dec
inc
cli
pop
je
data16
inc
push
scas
push
jo
jp
xor
xor
scas
sub
js
push
inc
inc
inc
xor
scas
stos
test
out
bound
je
outs
inc
cmc
or
jo
sbb
outs
dec
jns
push
fcmovnb
pop
pop
inc
xor
cmp
ins
xor
inc
mov
js
mov
dec
ja
inc
mov
xor
add
mov
popa
mov
push
push
push
cwde
out
cli
inc
jle
dec
imul
inc
push
js
sbb
lods
add
addr16
or
push
pop
arpl
push
or
jne
push
ins
fidiv
add
push
jbe
mov
dec
dec
arpl
inc
inc
xor
out
sub
sub
fs
cmps
inc
dec
dec
xor
out
adc
fs
and
gs
ja
adc
inc
cld
jns
dec
inc
inc
jo
jne
outs
cli
xor
aaa
dec
inc
gs
xor
movs
add
pop
div
ins
push
mov
fs
imul
push
jl
cmps
stos
icebp
jmp
dec
jae
outs
push
dec
adc
outs
jp
push
cld
dec
xor
addr16
jno
dec
xor
dec
xor
push
jle
add
div
push
js
dec
xor
jne
inc
jne
and
push
dec
push
push
and
(bad)
jb
cmp
adc
fisubr
aaa
cmp
and
fs
rcr
push
push
ins
xor
inc
aaa
push
cmp
cmp
cmp
push
bound
inc
inc
xor
mov
sub
fcomp
inc
dec
inc
jb
outs
inc
dec
xor
push
pop
es
add
data16
or
ins
jno
inc
dec
js
xor
mov
mov
ja
jne
push
enter
adc
jle
dec
xor
dec
inc
popa
pop
ss
shl
scas
inc
pop
jp
push
cmp
jo
fidiv
push
jp
xor
jne
outs
cli
mov
outs
xor
inc
push
jno
xor
xlat
test
ins
dec
call
push
inc
inc
mov
push
push
and
dec
inc
jo
ja
xor
outs
jno
push
ret
hlt
fild
stos
xor
cmp
xor
inc
(bad)
inc
mov
inc
into
push
call
sub
js
jg
add
imul
inc
dec
pop
test
inc
push
push
cmp
xor
pop
push
fs
pop
push
sbb
xchg
jns
dec
imul
push
mov
je
xor
jb
inc
arpl
pop
xchg
add
aaa
call
cs
arpl
fs
imul
std
out
fimul
repnz
dec
inc
dec
cmp
popa
cmp
nop
add
add
data16
retf
mov
push
dec
js
js
mov
(bad)
scas
jg
dec
ins
inc
outs
js
dec
jb
sbb
pop
dec
dec
cmp
outs
xor
dec
xor
ins
imul
inc
push
arpl
outs
jbe
aaa
pushw
push
shl
fcomp
xor
pop
pushf
dec
mov
jb
push
inc
add
cld
push
mov
push
cld
add
push
pushf
xor
dec
mov
sub
push
push
xchg
sub
inc
cmp
jg
ins
push
aaa
jns
push
xor
je
push
arpl
nop
jbe
or
aaa
inc
xor
push
jbe
dec
movs
(bad)
push
inc
adc
push
jno
inc
jno
push
push
sbb
pop
adc
jb
fs
cli
scas
jb
test
fs
dec
dec
push
mov
xor
inc
mov
fs
cli
inc
fcomp
inc
xor
mov
dec
push
mov
push
lock
loopne
sub
dec
inc
les
dec
jb
imul
push
xor
test
push
inc
dec
mov
jp
or
inc
js
mov
sub
jne
push
popa
dec
or
push
push
push
push
push
je
cmp
xchg
dec
ficomp
add
inc
xor
xchg
imul
push
xor
adc
shl
sahf
jp
aaa
int3
aam
inc
push
pop
outs
jb
lock
imul
cmp
lock
cmp
jne
inc
inc
pop
dec
push
outs
jno
ins
xchg
jbe
fs
push
bound
pop
xor
gs
rcl
ins
pop
out
inc
jb
sub
add
je
outs
push
or
adc
je
dec
mov
xor
pusha
jb
lods
push
adc
push
mov
jno
mov
xor
in
clc
dec
jbe
push
xchg
xor
push
jae
dec
arpl
ss
sub
jne
inc
aaa
inc
push
mov
pop
jp
mov
fs
dec
cld
add
popa
push
push
fs
add
xchg
mov
ins
dec
arpl
cmps
push
inc
mov
xor
and
call
and
cmp
dec
jne
pop
outs
dec
jp
push
inc
addr16
fidiv
push
dec
inc
aaa
ins
jbe
push
js
addr16
inc
push
cmp
xchg
arpl
pop
pop
dec
loopne
(bad)
loop
ins
xor
cmp
jmp
dec
cmp
inc
push
dec
cmp
jp
inc
je
imul
jb
in
add
(bad)
bound
rcl
outs
popa
push
adc
mov
pop
pop
gs
dec
mov
ins
xor
push
retf
lock
mov
rcr
dec
popa
push
mov
outs
adc
inc
dec
dec
inc
pop
xchg
xchg
inc
sub
dec
dec
inc
jb
(bad)
out
or
push
add
in
inc
imul
mov
push
imul
add
inc
gs
inc
adc
outs
outs
mov
adc
movs
add
bound
inc
lock
sub
pop
ins
sub
push
and
adc
nop
push
xor
mov
ss
dec
jo
jo
jae
pop
dec
ret
mov
dec
xor
dec
push
xor
aaa
sub
xchg
repnz
jmp
out
pop
movs
push
xor
mov
jno
inc
outs
dec
jp
mov
jbe
mov
dec
inc
sar
jo
fs
jne
sbb
or
je
push
imul
push
xchg
jne
add
outs
cli
gs
addr16
inc
icebp
mov
inc
jo
dec
xor
dec
jae
dec
push
inc
(bad)
outs
clc
outs
aaa
mov
jae
pop
imul
gs
add
fdiv
ins
dec
push
out
push
dec
ret
push
sbb
dec
dec
push
je
or
mov
outs
push
dec
push
cld
popa
jno
dec
mov
add
je
pusha
adc
ins
cmp
jge
jecxz
or
inc
cmp
inc
push
dec
sbb
jne
jb
push
push
dec
fsubr
pop
mov
push
inc
fidiv
je
cmp
fadd
push
inc
rcl
jo
push
arpl
and
adc
push
ss
inc
cmp
inc
cmc
ins
inc
inc
jae
mov
jns
dec
dec
cmps
stos
mov
or
xor
inc
ss
cmp
fwait
mov
hlt
dec
imul
jp
xor
addr16
loopne
push
xchg
and
cmp
jp
dec
outs
cmps
inc
push
jo
push
or
pop
xor
addr16
inc
in
clc
dec
push
or
dec
mov
scas
movs
lock
imul
outs
jno
xor
imul
push
dec
into
jno
dec
imul
ret
sub
dec
popa
dec
inc
pop
add
mov
inc
sub
dec
push
bound
add
gs
cmp
sbb
xor
test
or
mov
and
or
add
aam
mov
push
gs
inc
xor
ins
shl
push
sbb
imul
cmp
xchg
mov
sbb
fcomp
test
cmp
pop
push
aad
add
xor
mov
mov
inc
ds
inc
imul
les
sbb
les
cmc
or
push
outs
aam
jb
jns
out
pop
sub
push
inc
push
ret
outs
push
mov
(bad)
adc
inc
cmp
dec
jb
ss
add
hlt
push
cmps
dec
aam
loop
loopne
dec
ja
jbe
push
xor
dec
pop
dec
jmp
arpl
stos
or
inc
inc
jmp
fs
and
retf
xor
push
bound
jle
shl
cmp
inc
data16
jno
dec
jno
fldenv
les
retf
aaa
cmps
jp
mov
popa
aam
push
inc
cld
dec
inc
jo
outs
sub
imul
jae
ss
inc
add
mov
mov
inc
xor
dec
pop
sub
mov
imul
or
xor
xor
arpl
sub
loope
sbb
jne
mov
inc
push
dec
mov
dec
dec
je
push
inc
jno
xor
push
bound
ins
inc
cmp
aad
test
ret
dec
mov
bound
push
cmps
inc
inc
mov
dec
les
adc
cli
inc
jns
jbe
movs
push
dec
push
inc
xor
loope
or
xchg
push
ins
dec
add
jmp
push
addr16
jp
popa
ja
(bad)
fwait
ret
xchg
adc
ins
jb
xor
adc
sub
outs
adc
xor
sbb
xor
inc
push
push
bound
loopne
in
js
jae
aaa
retf
inc
jns
je
xor
dec
adc
pop
jp
jb
outs
push
cmp
ins
sub
mov
dec
dec
in
cmp
sub
ss
inc
data16
dec
data16
cwde
loopne
xor
dec
imul
dec
xor
fmul
cli
nop
cmp
mov
cli
das
xor
push
push
dec
dec
arpl
inc
push
scas
and
cli
jne
imul
popa
test
mov
pushf
(bad)
lock
rcl
pop
cmp
fs
push
pop
scas
loopne
dec
pop
adc
cmp
scas
mov
push
xor
jbe
aaa
(bad)
imul
mov
add
pop
dec
dec
xor
ss
mov
mov
jbe
jecxz
mov
ins
les
out
mov
dec
jb
ret
ins
dec
pop
cdq
add
add
pop
inc
mov
arpl
outs
push
jns
cld
push
push
inc
jg
loopne
mov
dec
dec
pop
outs
inc
arpl
inc
addr16
and
dec
aaa
rol
mov
hlt
out
dec
jp
bound
lods
xor
jle
pushw
cmp
fisub
jne
in
inc
pop
mov
addr16
data16
sar
mov
inc
push
pop
jo
push
jne
dec
outs
jne
cmp
push
mov
jae
dec
clc
push
inc
push
jo
std
jbe
aaa
es
bound
inc
jp
repnz
dec
int
add
les
push
dec
fiadd
dec
out
fidiv
push
fwait
push
push
dec
jbe
or
or
jo
push
add
sbb
gs
dec
imul
inc
push
dec
push
pop
fs
push
push
imul
aaa
outs
xor
popa
add
loope
imul
jns
fs
inc
cmp
pop
lods
cmp
ja
clc
je
hlt
int
data16
js
dec
aam
jp
push
(bad)
mov
jmp
fs
push
sub
cmp
pop
addr16
dec
xor
arpl
enter
inc
add
jne
inc
aaa
push
push
pop
xchg
aad
ss
outs
dec
pop
(bad)
cld
inc
outs
and
push
xor
push
dec
dec
pop
dec
xor
sub
dec
test
fwait
arpl
push
dec
push
push
loop
outs
aam
arpl
cs
cmc
xor
popa
or
outs
mov
push
xchg
ja
imul
inc
jbe
inc
jo
push
mov
jno
sub
xor
inc
xor
lods
ret
inc
inc
cli
sbb
push
ja
jo
adc
or
shl
sub
fidiv
outs
inc
xor
inc
push
mov
cwde
sub
cs
mov
js
repnz
jmp
inc
mov
jp
loop
push
inc
test
dec
jno
sbb
scas
movs
aaa
gs
push
fcmovu
mov
xchg
push
int3
pop
popa
push
into
jmp
inc
clc
add
or
arpl
pop
data16
jb
jg
imul
xor
test
pusha
xlat
dec
cmp
fisub
cmp
ja
ins
dec
les
inc
push
push
inc
pop
xor
cmp
push
int
mov
stos
retf
inc
and
inc
jb
dec
jae
in
fdiv
ret
call
inc
jae
lods
sbb
js
push
lock
add
popa
cmp
imul
div
rol
into
jne
ja
out
cmp
outs
cli
xchg
dec
cmp
mov
rep
outs
lock
data16
ds
mov
jne
mov
push
and
hlt
out
push
scas
cmp
or
(bad)
fld
bound
push
push
pop
push
hlt
outs
dec
mov
push
jns
arpl
xor
fs
imul
mov
je
jno
inc
imul
or
sub
dec
popa
push
inc
inc
nop
pop
add
je
je
fdivr
fisubr
push
pop
dec
outs
imul
dec
push
cmp
jno
push
popa
pop
pusha
aad
mov
jbe
push
std
cmps
dec
sbb
fidivr
xor
sbb
sub
ja
xor
inc
adc
ins
adc
arpl
ins
ins
push
imul
jle
add
ins
inc
outs
pop
cmp
sbb
xor
push
jo
xchg
ins
mov
aaa
jns
test
jo
jb
scas
outs
stos
jne
inc
dec
popa
inc
inc
inc
gs
lods
push
inc
jbe
aaa
ins
jae
push
push
xchg
add
pushf
sbb
fiadd
fild
jbe
dec
sahf
jne
push
dec
pop
fs
ja
jle
xor
push
les
inc
ins
inc
fs
shr
jae
pop
xchg
dec
js
sbb
xor
aaa
jo
gs
ret
cld
dec
push
aaa
push
bound
lods
jno
push
cld
pop
lods
clc
xor
push
inc
xchg
lock
xor
dec
push
arpl
pop
and
inc
push
dec
arpl
inc
outs
jbe
mov
push
push
push
jbe
ins
fs
pop
xchg
stos
pop
dec
inc
push
je
ds
pop
sub
jbe
push
dec
jbe
(bad)
sub
inc
inc
mov
or
push
jb
int3
jp
add
mov
dec
dec
add
xor
addr16
push
clc
outs
push
call
je
dec
lock
jl
jns
xor
xor
push
push
ror
xchg
in
in
inc
sub
jle
ja
outs
jno
js
inc
aaa
mov
push
mov
outs
data16
cld
dec
dec
pop
ja
or
xor
dec
arpl
push
mov
xor
inc
pop
dec
ins
test
enter
jmp
pop
push
xor
inc
push
adc
dec
mov
jns
xor
dec
ja
fidivr
xor
imul
dec
inc
dec
xchg
push
lock
add
pop
push
ins
(bad)
stos
add
mov
pop
or
cmp
xor
xor
sbb
hlt
inc
push
or
out
loopne
xor
push
retf
push
bound
mov
data16
pop
jo
inc
std
jo
call
dec
ja
jb
push
dec
cmp
mov
dec
jno
aad
xchg
mov
jns
inc
pushf
push
cmp
dec
xor
push
dec
cmp
imul
jbe
jo
push
push
gs
jb
push
sbb
push
shl
push
addr16
je
push
inc
sbb
jns
or
js
add
ret
icebp
jne
inc
pop
xchg
push
add
and
cmp
neg
xor
imul
es
outs
outs
or
mov
xor
push
inc
mov
ret
dec
sub
inc
xor
jbe
dec
add
fisttp
push
jo
push
push
sar
push
sub
pop
ins
push
test
fs
mov
adc
cs
dec
xor
outs
popa
push
dec
jb
jo
push
jl
nop
xor
inc
arpl
jae
inc
cmp
add
push
dec
push
dec
jg
test
push
ins
dec
push
mov
push
push
jo
gs
inc
or
or
inc
imul
clc
adc
(bad)
push
jbe
jbe
push
cdq
inc
outs
out
push
gs
dec
or
sbb
xor
jb
xor
jne
push
bound
push
fmul
jp
lods
movs
sub
pusha
jae
xor
pop
add
and
dec
je
push
es
push
fucomi
mov
shl
xor
dec
hlt
nop
mov
push
inc
sub
arpl
fisttp
mov
or
rcl
xor
fs
popa
out
aad
push
arpl
or
jb
push
mov
sbb
inc
push
fdiv
push
cmp
xor
addr16
push
dec
inc
add
push
xor
sbb
xor
sub
shl
into
or
popaw
retf
dec
dec
dec
ss
dec
aaa
inc
inc
push
inc
inc
xor
mov
ss
dec
push
jb
mov
xchg
call
push
push
push
jns
dec
inc
ins
popa
push
imul
mov
xor
inc
cs
outs
ins
clc
inc
mov
pop
jns
outs
push
stos
dec
push
xor
aaa
ja
push
dec
pusha
xor
xchg
cmp
pop
jl
cld
dec
dec
ss
xor
push
imul
imul
push
inc
push
fs
xor
jb
mov
inc
xchg
push
aaa
jb
aaa
cmp
arpl
push
ret
test
bound
xor
dec
sub
xor
inc
rcl
push
inc
xor
cmp
xchg
push
ins
inc
push
inc
adc
and
mov
inc
inc
mov
push
inc
mov
lods
dec
or
jb
dec
push
ins
sub
sbb
jbe
jne
dec
push
adc
inc
cwde
dec
addr16
dec
dec
xor
popa
push
popa
js
jg
stc
pop
inc
xor
jmp
dec
xor
mov
jb
push
ret
mov
mov
jne
ins
mov
pop
data16
js
inc
dec
cmp
jp
pop
xor
outs
jns
add
mov
push
(bad)
push
push
aad
add
mov
add
fiadd
clc
outs
inc
xor
inc
push
push
and
cmp
dec
cmp
inc
cmc
sbb
fs
bound
(bad)
je
dec
inc
cmp
push
hlt
pop
inc
dec
dec
data16
jns
cmp
pop
(bad)
mov
add
ds
scas
cli
inc
and
ss
ins
push
push
xor
ret
xchg
or
mov
push
push
cmp
dec
cmp
sub
js
js
ja
push
push
dec
loopne
add
aaa
pop
mov
inc
push
jb
outs
and
jo
imul
pop
inc
push
or
cmp
xchg
shl
js
data16
push
mov
bound
sub
pop
mov
jo
xor
inc
test
gs
aaa
cli
xor
cwde
dec
adc
jbe
pop
pusha
pop
add
jo
push
ins
xor
push
xchg
pop
inc
push
pop
pop
pusha
ss
(bad)
gs
dec
dec
xor
inc
inc
dec
jb
xchg
add
cmp
ins
cmp
outs
push
push
stos
and
dec
into
jmp
sub
pop
push
dec
jp
inc
outs
jp
arpl
push
pop
or
pop
imul
pop
push
test
mov
aam
(bad)
xor
(bad)
jp
xor
sub
xor
into
imul
clc
xor
pushf
retf
inc
outs
jne
push
js
or
cs
loopne
cmps
add
js
popa
aaa
or
hlt
mov
je
mov
add
push
pop
ret
inc
cmps
stos
fistp
xchg
inc
xor
inc
rcr
xor
into
dec
dec
sub
mov
xor
mov
jno
push
ss
dec
adc
call
inc
inc
addr16
pop
push
or
aaa
mov
sub
dec
jae
jb
pusha
pop
push
fsub
stos
jb
clc
inc
lock
cmp
mov
push
add
xor
add
gs
dec
inc
sub
arpl
dec
ret
push
cmp
mov
jno
jp
pop
push
icebp
inc
add
cmp
ins
dec
push
xor
inc
push
jne
(bad)
call
ins
xor
imul
cdq
test
scas
xor
jbe
sub
xor
dec
dec
jge
and
mov
dec
pop
ss
xchg
mov
ja
jbe
jne
addr16
or
sub
inc
inc
call
push
adc
rol
fs
dec
mov
push
mov
dec
push
add
pop
dec
out
dec
ja
mov
cmp
das
mov
inc
xor
repnz
jne
dec
jp
ins
push
xor
push
mov
dec
ss
push
xor
xor
push
rol
mov
imul
ins
jns
ja
and
cmp
push
dec
dec
xor
sbb
push
pop
lods
push
dec
je
bound
jns
inc
push
popa
jb
push
sub
inc
dec
jae
push
ins
jp
cmp
dec
fbld
push
push
clc
(bad)
out
xor
push
jo
sub
ficomp
xchg
and
and
add
cs
jne
jo
sub
jp
mov
push
cmp
dec
add
push
mov
ins
xchg
adc
js
inc
rol
jno
dec
js
jbe
add
cmp
pusha
jnp
cmps
outs
ins
push
outs
or
dec
dec
cld
sub
cmp
js
xor
mov
jp
imul
xor
push
pusha
into
inc
mov
pop
push
aaa
cmp
or
in
js
xor
loopne
fwait
adc
nop
outs
imul
imul
outs
push
xchg
gs
xor
jl
loop
in
push
dec
bound
dec
imul
mov
outs
xor
pusha
pop
shl
xor
ss
inc
outs
xchg
callw
or
test
(bad)
and
shl
dec
push
adc
(bad)
ss
mov
push
sbb
data16
sahf
popa
push
imul
dec
xor
push
or
hlt
push
(bad)
jne
mov
ins
pop
xor
jae
cmps
pop
je
ss
dec
xor
push
push
outs
xchg
dec
mov
add
bound
push
nop
sbb
shr
dec
mov
clc
or
jne
bound
lock
xor
push
mov
jp
xchg
cmps
mov
mov
dec
push
ss
jae
push
js
sub
dec
pop
cmp
push
loopne
pusha
ins
adc
ja
mov
gs
loop
lds
aam
call
pop
add
adc
rol
shr
cmps
adc
lods
pop
ss
jne
dec
dec
inc
outs
xor
xchg
ja
(bad)
pop
push
mul
jno
pop
push
(bad)
push
dec
push
shr
call
fdivr
fcmovbe
xchg
js
ja
inc
push
cmp
pop
ja
sbb
dec
add
popa
and
call
outs
xchg
mov
outs
inc
pop
pusha
imul
push
test
inc
pop
lock
inc
push
inc
dec
dec
imul
ins
stos
dec
adc
sub
ss
mov
xor
add
mov
mov
push
push
dec
(bad)
out
cmps
ja
mov
jp
jns
push
addr16
dec
aaa
sbb
ss
pop
mov
ins
jb
mov
lock
push
sbb
popa
test
push
cmp
cmp
jo
ja
add
cmp
inc
imul
jno
retf
pop
cmp
push
jno
aam
ins
ss
jb
dec
ins
popa
or
add
imul
(bad)
push
imul
dec
mov
popa
dec
shl
mov
push
xor
push
push
dec
xor
dec
dec
call
push
push
mov
lock
ins
ss
in
dec
inc
mov
dec
dec
dec
or
imul
jae
dec
add
mov
dec
dec
jmp
data16
inc
bound
ins
jo
bound
push
dec
inc
push
fbstp
dec
jb
pop
out
xor
inc
imul
jb
(bad)
pop
inc
push
xchg
jno
addr16
sbb
test
jno
jo
ss
xor
pop
jne
ss
ss
cld
push
dec
push
inc
dec
pop
xor
aaa
push
lock
fdivr
push
inc
popaw
adc
arpl
ins
xor
loopne
out
push
jns
outs
mov
jp
push
mov
cli
dec
pop
jbe
aaa
cmps
test
inc
xor
loopne
adc
mov
jns
cmps
(bad)
push
ins
popa
sub
imul
add
mov
jne
or
pop
sbb
jl
jae
inc
dec
outs
into
xor
lds
dec
mov
jae
stos
popa
or
push
inc
imul
add
xor
ss
xor
adc
ja
ins
xor
jo
push
sub
in
je
mov
pop
mov
inc
data16
fist
loopne
jae
es
push
jp
ins
retf
mov
fdivr
shl
test
inc
ss
and
rol
or
push
dec
(bad)
cld
scas
or
push
xor
dec
js
pop
jae
pop
hlt
das
adc
pop
jp
aaa
xor
bound
mov
inc
aaa
movs
icebp
sbb
adc
imul
pop
js
jno
loop
push
js
imul
inc
push
dec
lods
cmps
adc
sbb
dec
xor
sub
xor
imul
call
xor
push
inc
aaa
inc
pop
and
imul
fs
jbe
push
mov
ins
xor
dec
xor
inc
dec
dec
inc
jp
inc
jb
dec
or
push
pusha
adc
dec
inc
nop
xor
jo
aaa
adc
adc
xor
outs
fs
imul
sub
push
hlt
jae
enter
push
je
inc
movs
xor
dec
inc
bound
xor
adc
dec
push
dec
jbe
(bad)
icebp
scas
xchg
push
loop
imul
dec
lock
ja
inc
call
inc
mov
dec
idiv
out
push
outs
xor
push
add
inc
shl
mov
lods
add
add
dec
xchg
push
jno
dec
aaa
or
jmp
mul
push
or
mov
aaa
test
inc
pop
cmp
dec
dec
xor
pop
dec
push
push
inc
movs
fsubr
inc
push
dec
jmp
inc
inc
mov
sub
inc
dec
imul
jg
add
push
dec
dec
hlt
dec
fbld
xor
call
jo
jne
stos
mov
dec
push
jns
outs
dec
dec
cli
outs
inc
cmp
inc
inc
pop
fwait
mov
mov
xchg
ret
jae
bound
je
ins
push
std
sbb
je
push
xor
dec
dec
aaa
jmp
inc
pop
push
push
loop
dec
jne
popa
mov
js
jg
add
push
dec
xor
push
bound
push
aad
pop
mov
imul
xor
xor
ja
pop
nop
jne
bound
xor
push
imul
or
inc
push
lods
bound
xor
mov
pop
pop
and
dec
addr16
adc
push
xchg
pop
dec
xor
imul
inc
dec
jbe
cmp
dec
outs
inc
ins
nop
inc
inc
pop
mov
inc
jno
cmp
data16
push
aaa
(bad)
xor
jb
inc
jno
jo
xor
aad
sub
push
jns
mov
aam
arpl
(bad)
pop
push
je
dec
dec
or
ins
inc
cmps
push
dec
fs
les
cld
data16
xor
cmp
inc
jbe
ja
mov
dec
(bad)
pop
fs
inc
or
jae
data16
sbb
pusha
mov
xor
xor
jo
(bad)
(bad)
jg
inc
jb
push
inc
je
bound
inc
push
je
inc
ins
jne
push
fisttp
aaa
sbb
push
dec
addr16
addr16
inc
cs
jbe
pop
push
and
jae
ficom
adc
push
outs
xor
dec
int3
xor
push
push
xor
in
inc
sbb
imul
inc
jecxz
data16
int3
ins
cmp
gs
popa
jne
jb
je
xor
stos
or
pusha
test
sahf
inc
inc
sbb
xchg
ror
sub
push
push
and
or
call
dec
mov
pop
retf
mov
and
push
inc
push
popa
movs
clc
dec
and
cmp
dec
push
sub
or
cmp
movs
jno
jae
imul
mov
jno
inc
inc
fsubr
dec
inc
clc
or
xor
dec
lods
(bad)
fild
add
outs
jb
cmp
push
bound
loope
ror
xor
push
sbb
inc
test
loope
aad
or
push
mov
ins
push
sub
imul
jo
dec
fs
dec
push
xor
inc
(bad)
ins
ret
ins
aam
pop
sahf
dec
(bad)
mov
in
push
imul
jbe
cli
inc
jecxz
ins
addr16
je
outs
jns
xor
and
xor
ins
mov
push
push
inc
push
jp
cmp
dec
popf
and
test
fisubr
ja
dec
cmp
pop
ins
or
ins
out
shl
dec
retf
dec
jns
xor
aaa
ficomp
sbb
sbb
ins
gs
js
xor
fisttp
jno
addr16
push
mov
jbe
xor
push
push
aaa
js
ins
push
mov
inc
popa
cmp
push
add
push
pushf
push
dec
aaa
cmp
adc
push
add
cmp
ss
shl
cs
jp
scas
mov
hlt
xor
inc
xlat
inc
cwde
pushaw
sahf
inc
jb
xor
pop
arpl
xchg
adc
jbe
adc
dec
pushw
xchg
nop
dec
js
push
adc
stos
test
add
dec
jne
add
int3
inc
and
xor
xor
push
cmc
inc
test
outs
jb
push
xor
push
cli
or
xor
push
ss
jmp
push
xor
imul
xor
and
adc
adc
push
pop
call
js
gs
push
fdiv
jae
aaa
push
ins
inc
dec
aaa
inc
arpl
inc
or
sbb
aaa
xor
ins
fcom
aam
inc
dec
js
pop
jb
xor
lock
inc
xor
arpl
shl
xor
inc
push
dec
inc
xlat
jns
push
dec
cmp
dec
je
inc
mov
scas
data16
sub
push
sub
sbb
or
and
push
ja
stos
dec
xor
gs
mov
dec
and
jp
dec
or
(bad)
sub
dec
into
inc
push
dec
jbe
cli
push
int3
shl
aaa
clc
inc
inc
jns
movs
call
into
pop
adc
jb
mov
push
inc
inc
gs
cmp
rol
sbb
cdq
cmp
outs
sbb
outs
into
push
ins
cld
or
push
ja
xor
outs
call
imul
inc
jne
push
mov
add
jo
xor
mov
aaa
push
mov
ja
jo
imul
cmp
push
es
dec
add
jbe
into
push
sbb
dec
lods
pop
dec
mov
inc
jmp
mov
jo
pop
inc
in
sbb
mov
gs
outs
call
adc
inc
bound
dec
inc
ss
pop
js
jp
xor
sub
add
dec
jl
add
inc
outs
pop
ja
inc
rcl
push
push
inc
sub
inc
aaa
ss
push
data16
push
cmps
push
pop
xor
dec
xor
ins
ins
dec
gs
cmp
stos
push
popa
les
lods
jno
fdiv
in
ins
dec
jns
inc
push
cmc
add
mov
sub
mov
pop
inc
xor
cmp
mov
ins
jne
dec
ss
int
out
clc
dec
push
bound
dec
push
jno
xor
bound
lea
push
cwde
cmc
sub
ja
imul
outs
xlat
jg
fbstp
pop
cmp
dec
push
inc
dec
outs
dec
dec
pop
xor
or
jae
pop
dec
pop
add
mov
jp
pop
push
outs
imul
xor
fistp
addr16
repnz
push
inc
xor
outs
cmp
or
xor
dec
push
and
inc
out
dec
sub
sub
xor
shl
inc
xchg
dec
or
bound
push
aaa
push
push
fdiv
cmp
ja
jo
repnz
dec
xchg
ins
je
jo
sub
lock
xor
cli
adc
add
cwde
ins
cmp
icebp
jmp
jb
jbe
xor
push
dec
push
data16
jae
xor
pop
mov
xor
mov
xor
bound
jmp
test
push
jp
jno
(bad)
dec
cmp
sub
push
ja
mov
cld
imul
xor
mov
cdq
and
inc
cmp
inc
sbb
scas
mov
xor
arpl
jne
ss
mov
stos
cli
jns
push
jp
push
dec
retf
dec
inc
dec
jns
dec
je
jae
(bad)
scas
clc
jo
inc
inc
jbe
xor
dec
inc
push
dec
inc
popa
inc
ins
push
bound
inc
push
and
push
outs
push
push
test
mov
je
inc
dec
mov
pusha
xor
jp
pusha
fistp
bound
outs
inc
arpl
push
jmp
push
ins
or
arpl
dec
inc
pop
dec
dec
dec
sbb
dec
mov
fs
dec
cmp
push
call
cmp
or
or
push
add
and
xor
cmps
sub
imul
mov
mov
sub
push
inc
jle
pop
clc
or
int3
ss
and
dec
push
imul
mov
cwde
mov
inc
mov
ret
scas
punpckhbw
push
xchg
pop
jb
xor
cli
pop
and
cmp
sbb
gs
xchg
jbe
push
ja
fidivr
ret
push
jp
mov
popa
inc
js
fiadd
adc
call
inc
adc
push
inc
push
ja
fs
jne
dec
outs
xchg
outs
arpl
xor
je
jne
ss
or
arpl
pusha
mov
push
push
outs
scas
inc
xchg
or
dec
aam
inc
bound
ja
inc
jno
push
fs
xor
xor
out
shl
add
ins
push
fs
push
push
inc
push
dec
xor
xor
jbe
aaa
cs
or
imul
pop
dec
popa
xor
arpl
outs
xor
cmps
xor
scas
mov
js
inc
xor
push
push
je
ret
mov
pop
push
ret
ret
(bad)
mov
jno
dec
inc
push
jno
jbe
push
push
push
dec
jae
xor
push
scas
outs
jne
aaa
rol
pop
push
jne
push
push
fcom
add
aaa
adc
push
inc
outs
inc
add
inc
ins
call
cmps
js
jo
and
fs
ins
ss
jp
add
jae
mov
jbe
dec
inc
xor
jo
data16
dec
mov
xor
push
dec
test
or
pop
hlt
push
je
push
push
dec
jbe
out
push
dec
push
push
test
mov
add
mov
and
jae
pop
shl
stos
jmp
xor
inc
mov
inc
imul
dec
in
dec
inc
push
ins
mov
xchg
mov
pop
inc
lds
dec
lock
pop
cli
mov
sub
inc
int3
jns
or
push
dec
cdq
aam
xor
scas
xor
and
test
dec
dec
jb
mov
inc
mov
jne
jo
scas
mov
mov
inc
fdiv
dec
push
outs
js
repnz
je
inc
ret
shl
xor
sbb
es
ror
outs
rcl
and
pop
js
inc
je
mov
jo
xor
fs
sbb
mov
inc
imul
or
dec
movs
jne
cmps
push
push
das
xor
(bad)
push
pop
bound
inc
call
ins
cmp
icebp
scas
push
arpl
dec
pop
jo
cmp
xor
inc
mov
add
ss
pop
add
fs
sub
dec
shl
push
xchg
mov
pop
jo
outs
push
dec
sbb
arpl
(bad)
dec
xor
js
push
and
data16
js
mov
lds
mov
bound
ficom
xor
dec
push
xor
mov
js
inc
pop
inc
imul
mov
mov
xchg
rol
inc
aaa
inc
inc
xchg
stos
je
enter
out
and
xlat
cmp
mov
inc
jb
pop
and
inc
sub
dec
stos
lock
dec
mov
push
sbb
push
dec
dec
outs
ins
push
fidiv
push
(bad)
push
outs
not
popa
dec
pop
xchg
mov
and
mov
sbb
aaa
sar
jbe
mov
add
push
push
push
es
scas
or
dec
jae
imul
sar
mov
jns
jns
jae
jle
mov
add
(bad)
jae
jns
arpl
pop
inc
push
dec
mov
push
scas
cmp
add
sbb
jb
bound
fiadd
dec
xor
je
inc
push
arpl
add
inc
mov
popa
jns
pushf
aaa
dec
jbe
lock
sub
gs
dec
imul
pop
inc
scas
je
aaa
dec
js
push
mov
dec
push
add
ins
addr16
in
push
lods
movs
push
push
push
push
test
outs
xlat
das
pop
sub
xor
outs
cmp
into
jmp
es
dec
outs
mov
pop
xor
(bad)
cli
ins
dec
pop
xor
mov
xor
push
dec
dec
inc
js
or
push
mov
bound
popa
mov
sub
aaa
dec
sbb
scas
pop
cld
jo
cld
addr16
push
inc
outs
inc
jbe
inc
push
push
sub
fiadd
ficom
enter
fs
or
data16
aam
addr16
adc
dec
dec
inc
push
push
mov
sub
xor
push
sub
dec
ins
and
fdivr
add
cmp
inc
jp
push
push
or
inc
push
push
stos
jae
push
bound
push
popa
outs
mov
mov
xor
addr16
pop
fs
outs
push
jne
js
mov
xor
popa
mov
ins
outs
push
cmp
mov
mov
inc
arpl
outs
out
xor
cmps
aaa
cmp
inc
imul
mov
push
pop
dec
jae
ror
xor
into
inc
popa
jno
jbe
pop
mov
dec
je
arpl
push
imul
sub
imul
inc
jbe
jp
movs
fs
scas
mov
cmps
dec
gs
ins
mov
sbb
push
dec
jbe
mov
jns
xor
jae
xchg
dec
fs
dec
sub
sbb
pusha
jp
inc
push
dec
mov
adc
and
add
pop
frstor
jb
push
mov
outs
push
dec
jne
mov
dec
mov
jp
xor
outs
ss
xor
cmp
inc
cwde
inc
mov
push
cmp
inc
cli
push
dec
jne
hlt
add
sbb
dec
dec
and
dec
call
js
inc
aaa
pop
pop
add
cs
mov
mov
bound
inc
dec
arpl
or
inc
mov
call
sub
pop
push
adc
jne
push
xor
cmp
and
cmp
hlt
jp
addr16
sbb
aaa
outs
imul
imul
arpl
push
dec
push
adc
add
imul
loopne
jno
pop
sub
inc
aaa
inc
aam
mov
push
ins
jbe
and
push
push
ret
jbe
gs
cmp
pop
in
jbe
dec
push
inc
jae
push
adc
fstp
loop
jg
in
repnz
outs
dec
popa
ja
sbb
dec
pop
sub
and
aaa
lock
xor
inc
cmp
inc
bound
es
jle
cmp
dec
dec
fadd
xor
push
dec
js
mov
sahf
and
int3
push
outs
sbb
int
nop
imul
cmp
popa
(bad)
push
mov
pop
js
dec
mov
dec
rol
mov
imul
data16
inc
imul
loopne
out
push
push
sub
adc
jmp
cmc
xchg
xchg
mov
push
data16
jmp
and
test
pop
ja
outs
cs
xor
and
xor
jp
and
add
je
sub
cld
inc
hlt
arpl
xor
xor
sub
xor
sahf
cmps
test
ins
adc
xchg
addr16
ins
movs
ja
pop
push
pop
addr16
xchg
push
std
imul
cs
(bad)
stos
push
cmp
jbe
dec
jo
mov
or
inc
fs
mov
neg
retf
aaa
dec
dec
push
ins
xor
arpl
mov
push
push
into
fs
inc
jns
ret
pop
push
jg
inc
push
push
inc
inc
mov
push
xor
xchg
push
and
dec
mov
adc
or
cmp
jne
dec
fs
ss
mov
mov
cmp
ret
mov
push
xor
js
push
mov
mov
lock
stos
dec
js
xor
ins
push
dec
inc
ja
addr16
pop
ss
inc
cmp
push
or
ins
inc
retf
push
stos
cmps
sbb
xor
inc
xor
cli
sbb
jb
jp
push
mov
imul
mov
xor
push
loopne
jp
push
bound
mov
int3
inc
data16
imul
bound
xor
gs
jmp
loopne
mov
arpl
push
jb
inc
inc
call
ins
push
popa
inc
push
in
and
movs
push
xchg
dec
dec
bound
js
xchg
mov
dec
aaa
inc
jbe
jno
inc
clc
push
mov
mov
aaa
push
ja
outs
dec
push
push
sbb
push
mov
push
mov
sahf
(bad)
jae
add
jmp
xchg
retf
inc
jl
inc
dec
ins
jp
inc
inc
and
arpl
imul
push
inc
ins
fwait
rol
dec
push
jns
cmp
mov
dec
pop
mov
mov
ja
popa
and
dec
imul
push
jbe
sbb
dec
or
popa
push
inc
xor
and
adc
jne
ins
add
dec
push
jno
cmp
fwait
cmp
push
dec
dec
cmps
inc
xchg
dec
jp
or
add
ror
and
jbe
xor
inc
gs
outs
mov
mov
push
pop
dec
add
test
push
dec
jb
hlt
adc
xor
xor
cli
je
adc
mov
push
dec
js
cmp
push
inc
test
jmp
sbb
mov
jo
push
push
je
dec
aam
mov
js
jb
sbb
js
or
pop
push
push
sbb
jb
xor
mov
inc
ja
test
cmp
push
ds
push
aaa
movs
mov
dec
push
gs
adc
pop
gs
jo
dec
push
bound
sub
add
dec
shl
cmps
ja
jo
inc
xor
push
data16
inc
cmps
dec
outs
nop
push
imul
push
lods
arpl
in
sub
pop
or
dec
sbb
jle
push
ja
js
js
or
push
add
dec
dec
mov
sub
mov
adc
enter
add
mov
jo
ret
dec
and
push
(bad)
inc
add
inc
mov
je
jb
dec
push
cmp
dec
push
push
popa
jbe
and
push
push
js
test
inc
push
push
add
jae
pusha
add
pusha
push
shl
jb
and
adc
mov
inc
xchg
ret
adc
sub
js
mov
xchg
ja
add
dec
dec
jo
xor
outs
inc
pop
xor
add
hlt
stos
arpl
push
inc
bound
pop
ins
test
dec
inc
fs
je
imul
mov
dec
pop
mov
push
nop
xchg
dec
xchg
aaa
jb
pusha
xor
dec
mov
add
dec
mov
(bad)
pop
dec
cld
data16
arpl
inc
popa
pop
jns
int3
mov
xor
shl
cmc
stos
fistp
popa
xor
inc
ins
pusha
push
js
cmp
push
xor
inc
jmp
dec
jno
push
push
adc
sub
mov
jno
popa
add
mov
xor
loopne
retf
inc
dec
mov
call
mov
hlt
aaa
jbe
add
sbb
mov
adc
outs
je
inc
outs
sub
(bad)
mov
push
aaa
mov
push
sbb
mov
inc
arpl
push
xor
inc
dec
inc
fsubr
jl
shl
push
push
jb
data16
dec
push
cs
jo
cli
push
sub
outs
push
ins
xor
or
(bad)
test
inc
or
xor
jne
xor
cld
inc
jns
jns
xor
dec
sub
mov
xor
inc
sbb
xor
arpl
ret
lods
jae
inc
outs
xor
push
xor
lods
cmp
sub
fisub
push
jno
xor
mov
shl
xor
inc
sub
ret
dec
jb
push
cmp
sbb
outs
jbe
js
push
inc
imul
jnp
push
cmp
jl
ins
dec
ja
cmp
mov
je
mov
mov
pusha
xor
in
das
add
pop
addr16
bound
push
sbb
add
inc
repnz
js
fisub
or
pop
pop
dec
push
sub
push
mov
xor
adc
sub
or
sbb
inc
and
data16
retf
mov
xor
fs
je
outs
inc
inc
je
push
add
mov
push
xor
call
ins
outs
fs
dec
xchg
and
aam
cli
je
mov
stos
pop
inc
(bad)
js
fisubr
add
push
xor
sbb
xchg
push
hlt
pop
push
inc
mov
ja
out
adc
jb
push
fdiv
jp
and
push
push
dec
xor
std
add
cmp
push
xor
push
dec
add
pop
js
inc
ja
jo
dec
adc
dec
js
inc
push
lock
es
adc
addr16
cs
lods
dec
push
outs
inc
in
adc
outs
push
bound
mov
aaa
mov
cwde
js
or
inc
fs
sbb
inc
ins
dec
outs
push
aaa
jno
jne
mov
imul
inc
loopne
adc
xchg
out
dec
lods
adc
push
inc
pop
cmp
dec
push
jo
ja
inc
or
dec
inc
fimul
jne
data16
cmp
push
push
es
xor
cmp
sbb
xor
jae
outs
push
lods
jmp
cwde
xor
push
push
inc
inc
arpl
jo
push
in
sar
lock
xor
adc
popf
mov
pop
dec
inc
inc
pop
add
push
outs
and
outs
xor
mov
cmp
inc
pop
das
out
aaa
xor
push
(bad)
jns
xor
jg
and
push
dec
push
pop
jb
pop
jp
dec
dec
stos
pop
loopne
sbb
je
inc
test
add
loopne
inc
inc
in
push
cwde
inc
ficom
jl
xchg
sbb
pop
bound
push
dec
scas
inc
ins
ret
shr
xchg
pop
imul
mov
cmp
push
and
adc
fst
ret
gs
call
ss
loopne
aaa
jbe
ins
xor
ss
mov
outs
fdiv
fs
inc
outs
mov
jb
cli
mov
cs
ret
dec
inc
push
push
xor
xor
ins
cwde
push
mov
mul
push
inc
js
pop
aam
inc
sub
cmp
pop
mov
test
xor
imul
in
clc
and
push
inc
fisubr
push
ins
bound
inc
push
stos
in
pop
push
mov
xor
dec
test
push
popa
rcr
aaa
xor
outs
and
jno
push
jbe
inc
sub
inc
push
or
sbb
pushf
jp
outs
push
int3
push
or
lods
pop
ins
addr16
push
push
dec
ins
jbe
bound
cs
xor
movs
mov
jno
push
push
mov
cmp
ins
push
pusha
fdiv
es
push
push
inc
jae
pop
push
dec
jle
push
mov
scas
or
push
dec
mov
add
loop
pop
xor
jb
jb
xlat
int
mov
dec
or
add
dec
xor
push
add
imul
add
xchg
lods
jns
ror
outs
cmp
in
or
ja
ja
inc
fmul
rcl
loopne
je
xor
sub
adc
pop
call
pop
push
pop
dec
ja
jno
jbe
bound
add
inc
out
dec
push
xor
mov
dec
inc
mov
sbb
pop
gs
push
je
js
xchg
std
(bad)
clc
enter
push
xor
xor
cmp
loopne
mov
xor
inc
jns
xor
scas
push
add
xor
push
pop
jmp
jp
mov
mov
xor
je
out
push
pop
fcom
xchg
mov
aaa
jb
xor
push
loopne
std
sub
outs
inc
inc
dec
xor
pop
add
jmp
sub
cs
jp
jo
inc
xor
dec
and
xor
jp
jno
push
mov
data16
dec
xchg
pop
sub
fisubr
jns
inc
inc
push
pop
bound
nop
fisubr
push
dec
push
ja
jp
push
sar
xor
dec
stos
push
bound
ror
lods
and
outs
call
out
sub
add
cmp
push
ja
jbe
dec
or
mov
inc
imul
movlps
push
xor
cmp
loop
(bad)
cld
push
fcomp
(bad)
or
retf
and
popa
push
mov
push
popa
adc
jbe
mov
(bad)
or
ins
pop
xor
xor
add
pop
scas
push
imul
bound
dec
push
xor
test
add
nop
repnz
outs
add
popa
test
inc
loope
inc
inc
xchg
dec
xor
jbe
ret
fld
push
xor
jne
jo
je
and
pop
inc
inc
jno
test
jmp
dec
jae
push
call
mov
inc
test
or
jo
xor
inc
push
push
sub
push
(bad)
mov
call
xchg
jmp
dec
inc
je
inc
mov
push
imul
popa
inc
imul
mov
inc
ds
cli
ss
push
push
adc
xor
jo
ja
inc
ins
gs
inc
push
dec
jae
dec
mov
push
push
jb
pop
out
cmp
dec
jle
cs
retf
add
dec
add
jl
push
push
test
les
ss
test
push
cmps
call
add
push
fs
imul
popa
je
dec
cs
jne
sub
pushf
xor
aaa
mov
inc
sub
or
mov
inc
pop
inc
jle
jo
jne
call
push
imul
ja
lock
pop
mov
pop
je
dec
push
dec
dec
xor
jb
xor
inc
xor
adc
dec
pop
pop
inc
gs
pop
dec
js
pop
mov
popa
jb
jb
pusha
mov
fs
loop
js
(bad)
jb
push
cmp
mov
xor
imul
push
push
mov
not
push
fs
dec
jp
inc
xor
outs
push
ins
jae
sbb
fs
xor
js
push
or
adc
dec
push
lods
or
cmp
add
dec
xor
mov
mov
imul
jo
and
adc
xor
ret
push
aam
sbb
pop
mov
daa
idiv
pop
data16
push
lock
inc
(bad)
dec
dec
xor
sub
outs
jne
addr16
inc
jo
sub
dec
push
dec
bound
dec
loop
dec
or
push
and
inc
(bad)
fs
and
push
inc
test
dec
dec
retf
mov
push
jbe
arpl
xor
stos
imul
pusha
adc
mov
jns
addr16
adc
cs
push
shl
lods
inc
xchg
in
xchg
cmp
outs
xor
push
push
cmp
mov
pop
aad
cmp
dec
rcr
in
push
ja
arpl
outs
pop
mov
das
fiadd
cmp
cs
fs
aaa
addr16
pushf
les
adc
xchg
sub
dec
push
dec
in
dec
je
xchg
push
jne
inc
cmp
shl
mov
jp
pop
or
test
call
bound
inc
push
call
fcomp
imul
sbb
push
ja
and
fidiv
outs
push
dec
mov
stos
or
adc
xor
push
inc
mov
jns
inc
push
or
into
mov
dec
repnz
inc
adc
jp
ja
scas
(bad)
ins
jns
fidiv
outs
push
outs
dec
jae
push
inc
push
cmp
out
mov
inc
inc
inc
mov
fs
fsub
mov
aaa
(bad)
xchg
rol
inc
dec
jbe
push
add
add
add
test
xor
jp
push
fild
dec
je
lods
push
jmp
ror
jmp
pop
push
ss
inc
aaa
sub
cwde
dec
gs
imul
(bad)
loopne
cmp
dec
dec
popa
jbe
dec
xor
dec
push
push
bound
push
push
outs
fadd
pop
stos
dec
aam
jb
pop
ins
jp
push
push
inc
and
outs
imul
jno
mov
sub
mul
test
add
idiv
outs
bound
pop
gs
mov
add
add
arpl
ins
lods
mov
sub
popa
xor
push
lock
mov
les
pop
inc
jae
jae
inc
jmp
out
addr16
dec
imul
mov
pop
mov
sub
dec
ins
mov
add
inc
jb
outs
xor
push
sbb
mov
push
push
cmp
sub
inc
pop
aaa
pop
mov
mov
inc
shl
mov
je
dec
jo
popa
push
and
ins
add
dec
or
rcl
sbb
dec
add
xor
mov
jmp
push
or
mov
inc
push
data16
or
gs
dec
and
dec
popa
adc
loopne
cli
inc
outs
push
jns
ja
stos
or
outs
pop
hlt
(bad)
mov
jp
xor
jns
arpl
inc
fidiv
push
xor
dec
adc
ja
fadd
je
jmp
mov
outs
dec
jb
cmp
lds
addr16
mov
jb
push
pop
pop
mov
xor
ror
inc
and
and
inc
inc
jno
or
xor
pusha
or
dec
mov
mov
outs
test
adc
push
ss
nop
dec
pushf
jae
push
xor
pop
outs
sub
imul
and
xor
retf
sub
hlt
dec
imul
imul
outs
push
push
popa
addr16
je
call
bound
popa
arpl
inc
push
dec
and
add
push
dec
xchg
push
mov
outs
into
fs
js
push
push
imul
xor
dec
push
scas
sub
lock
adc
js
or
mov
ss
outs
call
pop
jbe
push
dec
je
data16
rcr
push
ss
dec
inc
pusha
cs
adc
add
push
imul
push
int
stos
es
xor
push
popa
mov
add
mov
mov
mov
je
push
sub
xchg
jp
xor
push
jbe
ins
inc
inc
sbb
inc
push
pop
xor
dec
ins
call
cmp
mov
inc
shl
jae
outs
push
jne
push
dec
imul
ja
push
data16
aaa
(bad)
gs
jp
xor
aad
and
jl
ja
jbe
jae
jp
xchg
xchg
fst
inc
popa
fs
(bad)
dec
sub
xor
in
jo
pusha
sbb
mov
push
ja
sub
sbb
js
imul
mov
bound
js
pop
dec
loope
add
(bad)
dec
jbe
or
mov
dec
mov
aaa
add
dec
rcl
popa
bound
xchg
jno
cmp
inc
mov
push
push
push
inc
xchg
inc
dec
push
xor
cs
popa
push
inc
cmp
inc
add
cmp
xchg
mov
push
test
push
dec
shl
push
bound
adc
push
jp
outs
xor
imul
data16
mov
jo
push
mov
push
xor
xor
jl
loope
mov
push
mov
jno
jb
das
push
ins
lock
and
inc
(bad)
ss
adc
inc
xor
je
sub
or
push
mov
ins
dec
jne
mov
cmp
push
or
test
add
sub
cmp
js
push
add
jno
ja
retf
push
inc
add
loopne
mov
push
inc
jbe
icebp
push
stos
dec
ss
js
dec
dec
jno
test
mov
inc
push
scas
push
or
inc
loopne
xor
xor
sub
mov
jp
push
push
inc
retf
push
neg
mov
je
cld
loopne
dec
mov
bound
or
push
pop
or
adc
loopne
movs
cld
mov
bound
xor
js
jp
cmp
sub
outs
div
dec
jge
pop
xchg
mov
jo
pop
xor
inc
ins
out
fidiv
cs
push
dec
ss
xor
ins
js
xchg
mov
dec
ins
mov
inc
sub
inc
aam
bound
ss
push
add
nop
enter
push
sbb
xor
js
sbb
or
adc
push
or
mov
loopne
inc
inc
xor
call
or
cmp
shr
mov
inc
dec
dec
imul
jmp
cmp
xor
push
mov
outs
jbe
xor
dec
ror
cmp
imul
xor
inc
mov
push
fisttp
int3
push
mov
dec
imul
push
xor
adc
adc
add
ins
pop
sub
ja
dec
xchg
jo
popa
push
rcr
inc
add
loop
test
cmp
aaa
ins
imul
ja
add
jb
jg
popa
inc
and
jo
inc
xor
js
std
ffree
jno
bound
xor
jo
push
call
movs
add
ins
add
ja
dec
push
imul
push
sub
ss
dec
data16
pop
cwde
imul
or
pop
push
fisubr
adc
jae
inc
push
push
add
gs
xor
pop
inc
xor
bound
ja
jmp
dec
inc
ins
xor
inc
mul
retf
jle
mov
inc
dec
jo
cmp
xor
xor
mov
das
mov
and
push
jbe
outs
inc
push
xor
add
add
pop
ins
fdiv
gs
dec
imul
stos
add
push
dec
ins
bound
dec
lock
jb
inc
inc
mov
jbe
push
std
or
fcomp
push
xor
push
jo
add
pop
jae
js
xchg
mov
dec
(bad)
gs
sahf
xor
push
jecxz
outs
add
outs
dec
push
(bad)
into
imul
lock
scas
out
outs
fs
push
jae
add
test
inc
sub
je
inc
adc
stos
sbb
je
inc
rcl
adc
inc
cmp
std
ins
inc
jne
jbe
outs
push
ss
sbb
add
jno
cmp
push
data16
fbld
xchg
jbe
imul
imul
add
ins
push
sbb
xor
jno
adc
mov
ficom
mov
push
dec
inc
cmp
dec
dec
js
dec
push
push
lds
pushf
dec
inc
arpl
or
scas
shl
outs
dec
cmp
push
ja
jb
inc
pop
imul
xchg
js
jo
push
or
xor
push
xor
std
jp
jae
bound
jp
outs
xor
jae
add
jmp
fdivr
xor
fs
inc
xor
inc
je
dec
inc
pop
inc
cmp
sbb
mov
dec
or
lock
mov
jbe
dec
jne
pop
inc
mov
outs
outs
repnz
ficom
ret
cwde
mov
dec
cli
pop
in
repnz
pop
push
push
push
xor
or
push
fsubr
inc
mov
add
imul
inc
jb
loop
push
push
imul
sub
ror
dec
fcmovbe
pusha
pop
sahf
ins
pop
sar
js
bound
cmp
xor
fld
adc
out
dec
jb
xor
jbe
cmp
adc
mov
call
arpl
inc
int3
cmp
mov
call
push
adc
imul
outs
ins
dec
jne
xchg
pop
push
je
into
push
push
imul
imul
push
addr16
mov
dec
push
dec
mov
mov
ins
dec
hlt
push
dec
xchg
xor
push
cmp
jns
ins
scas
js
in
and
outs
arpl
inc
imul
and
push
push
pop
sbb
inc
push
jo
aaa
out
or
es
cli
outs
push
push
xor
push
push
mov
xor
jns
lds
cmp
js
ret
add
and
push
pop
add
xchg
mov
adc
dec
sub
fs
add
test
cmps
mov
dec
jbe
ds
hlt
sbb
xor
push
scas
xor
imul
push
fs
dec
push
inc
push
inc
xor
mov
stos
or
dec
in
in
ins
(bad)
fwait
loop
jp
pop
clc
dec
pop
js
push
cmp
gs
hlt
call
cmp
ja
addr16
cmp
ins
jmp
pop
data16
inc
gs
add
rcl
inc
dec
push
push
rol
call
jg
adc
dec
popa
xor
push
jge
xor
shl
jbe
aaa
mov
shr
js
cmp
and
inc
outs
call
push
pop
ss
les
inc
call
jmp
sub
inc
dec
out
push
xchg
dec
inc
shr
xor
xor
jne
jb
clc
cmps
xchg
dec
cmp
aaa
ins
dec
(bad)
push
sbb
aaa
sub
cmps
js
test
push
push
inc
jbe
xchg
das
movs
(bad)
adc
cmp
push
push
fdivr
inc
jne
mov
cmp
mov
xor
jae
add
dec
gs
push
mov
mov
mov
xchg
loopne
inc
gs
add
sub
cmp
enter
aaa
pop
inc
xor
xor
les
scas
push
scas
push
push
ins
fs
lock
mov
mov
je
push
xchg
dec
mov
cli
xor
scas
or
push
mov
jp
push
hlt
xor
inc
mov
je
es
in
jp
push
hlt
outs
pop
pushw
fimul
jno
or
sub
inc
sbb
mov
pop
jo
or
add
dec
inc
pop
mov
ss
dec
popa
sub
ja
bound
push
std
test
xor
jns
arpl
inc
push
inc
sbb
fmul
inc
push
mov
sub
and
mov
adc
outs
addr16
outs
aam
loope
mov
js
pushf
cld
outs
clc
cs
push
xor
dec
or
inc
or
test
xor
outs
jne
test
xor
push
inc
dec
dec
ins
mov
dec
(bad)
and
pop
mov
in
fmul
inc
mov
pop
xchg
dec
inc
push
inc
out
and
or
dec
outs
push
test
xor
dec
pop
adc
fisubr
or
outs
in
rcl
push
jp
push
fild
dec
jae
push
mov
pop
xor
popa
mov
inc
mov
addr16
add
dec
adc
dec
jae
test
push
jmp
xor
jbe
(bad)
xor
pop
je
dec
dec
push
xor
pop
push
shl
push
shl
inc
push
js
jo
pop
fs
not
dec
add
xor
jl
push
pusha
fcomp
jno
xor
imul
ja
aaa
jo
test
fs
pop
mov
dec
pushf
xor
add
fbld
jb
xor
jo
add
sub
push
cdq
hlt
stos
or
bound
jmp
das
out
dec
imul
arpl
ins
push
dec
push
dec
or
pop
add
ret
jae
int3
pop
inc
push
xor
shl
cmp
jns
stos
add
push
sahf
imul
push
mov
push
lock
mov
outs
cmp
lods
cmp
shl
je
jno
inc
inc
bound
pop
inc
pop
icebp
inc
aam
xor
stos
dec
jbe
xor
xor
mov
cmp
xor
adc
pop
cmp
push
icebp
xor
jb
bound
aam
popa
jmp
sbb
ja
xor
inc
stos
cmp
cmp
inc
and
inc
inc
mov
pusha
ror
jo
push
pusha
push
dec
inc
ja
cmps
fwait
call
and
inc
dec
xor
mov
in
pop
xor
out
inc
inc
jno
xchg
inc
xchg
arpl
ins
push
jo
movs
adc
jg
imul
push
inc
or
xor
jp
mov
cmp
popa
stos
mov
push
push
ds
and
jo
pushf
inc
push
dec
push
jne
push
xchg
sahf
jae
mov
outs
fs
mov
add
cmp
ss
or
aam
add
add
imul
enter
jmp
xor
xor
xor
pop
daa
fdivrp
xor
inc
push
xor
and
cmp
push
call
push
dec
jbe
push
dec
pop
neg
repnz
ins
pop
jns
data16
push
cld
data16
pop
dec
jne
hlt
inc
test
adc
aaa
ficomp
jbe
inc
push
sub
push
jne
pop
inc
and
xor
jp
xlat
or
push
xor
shl
or
xor
xor
je
jge
or
inc
dec
mov
add
stos
ja
inc
imul
into
or
mov
inc
add
inc
outs
test
sbb
push
dec
jle
dec
push
xor
mov
ja
js
jne
dec
rol
inc
jp
sub
add
dec
mov
aam
jno
push
sub
bound
nop
out
test
cld
dec
arpl
xor
js
push
cwde
ret
sub
loop
call
add
or
sub
dec
dec
xor
xchg
pop
shl
adc
cmp
adc
mov
pop
arpl
ds
inc
xor
mov
or
push
inc
test
jae
push
xchg
dec
bound
bound
dec
inc
push
xor
retf
clc
inc
push
aam
sub
shr
pop
mov
rcr
xchg
jo
sbb
js
loop
inc
fstp
xor
arpl
xor
call
add
xor
push
xor
mov
js
ins
dec
js
pop
shr
bnd
xor
mov
xor
push
aaa
push
inc
test
and
enter
jns
dec
ins
pop
add
mov
inc
push
add
test
cld
xor
dec
fdivp
sbb
cmp
jo
js
push
jae
dec
pop
add
outs
jmp
cmc
mov
je
gs
gs
ins
dec
outs
inc
dec
jbe
mov
in
push
push
inc
inc
pop
cs
jmp
dec
cmp
pop
dec
sahf
gs
aam
loope
and
pop
cmp
jmp
inc
dec
les
jns
dec
pop
and
pop
jne
xor
(bad)
inc
ins
xor
mov
and
popa
mov
cmp
push
push
pop
cmp
sbb
jne
js
pop
ss
cld
sbb
push
inc
inc
push
push
xchg
or
jle
ss
ja
xor
ret
push
pop
loop
jo
enter
or
push
ja
jle
inc
repnz
push
xor
push
pop
je
jno
bound
cmp
pop
mov
dec
ins
gs
cmp
cmp
shl
stos
ja
inc
inc
scas
jns
std
inc
or
push
arpl
outs
enter
pusha
aaa
ins
scas
jae
pusha
push
push
xchg
mov
xor
inc
mov
mov
adc
or
jb
data16
mov
into
cmp
inc
gs
stos
or
add
jbe
outs
push
js
jp
push
cmp
xchg
mov
inc
dec
dec
loopne
ins
outs
push
pusha
es
fcomp
inc
shr
xor
data16
sbb
dec
dec
inc
popa
jb
inc
sub
loopne
je
xor
dec
lea
(bad)
jb
adc
fisubr
pusha
std
jecxz
jbe
pop
xor
jns
jne
jp
call
gs
ins
push
bound
jo
add
sahf
arpl
rcl
pushf
les
xor
xor
xor
inc
inc
(bad)
jbe
ja
pop
inc
mov
dec
imul
add
es
test
dec
dec
mov
inc
push
fimul
(bad)
xor
push
call
dec
lods
pop
lods
push
jl
push
in
push
ins
inc
inc
push
pop
xor
add
cmp
pop
dec
sbb
mov
jne
pop
push
jbe
push
sub
pusha
xchg
inc
xor
pop
sbb
mov
bound
ja
add
ins
cmp
push
push
mov
or
push
push
inc
jbe
push
shl
and
cmps
push
jp
repnz
push
push
test
mov
inc
jb
push
cmp
fidiv
cmps
push
add
arpl
test
gs
bound
xchg
into
ja
mov
aaa
dec
call
or
arpl
inc
xor
je
sbb
push
push
test
inc
inc
shl
jns
fidiv
lods
retf
adc
jp
mov
and
dec
jp
xor
adc
xor
ins
outs
dec
dec
dec
jne
test
dec
push
adc
aam
pop
jbe
lods
jb
fcom
or
je
outs
cli
gs
pop
push
xor
aam
ins
pop
imul
outs
sub
xor
cmp
sar
imul
cs
and
sbb
jmp
pop
shr
pop
hlt
aaa
aaa
outs
inc
inc
push
and
lea
fidiv
mov
inc
mov
xor
test
imul
fwait
(bad)
hlt
inc
jb
inc
outs
movs
xor
aaa
xchg
(bad)
mov
inc
xor
xor
outs
cmp
(bad)
scas
fdivr
ins
dec
jno
popa
dec
fisubr
cmp
stos
(bad)
xor
shl
popa
jno
stos
push
add
mov
ja
call
nop
push
dec
fs
lds
repnz
inc
sbb
and
test
dec
in
fsubr
pop
cld
cmp
inc
dec
inc
js
and
xchg
mov
add
cmps
ret
xor
push
adc
inc
ja
enter
push
ss
jae
adc
push
data16
fsub
jb
push
xor
push
push
xor
inc
add
fs
mov
and
cmc
or
ins
jb
sbb
mov
add
fsub
inc
inc
mov
xor
jb
inc
jns
dec
xor
jae
jmp
push
dec
xor
xor
inc
xor
dec
push
scas
xchg
movs
ins
bound
jo
test
mov
pop
cli
inc
aaa
popa
inc
cwde
inc
imul
sbb
mov
push
push
inc
xchg
lock
dec
outs
cmp
jo
xchg
sbb
je
and
and
add
std
mov
imul
jne
push
push
dec
aaa
ja
push
ins
push
dec
shl
adc
push
xchg
push
mov
xor
cmp
add
gs
dec
xor
jbe
dec
or
inc
js
push
jg
pusha
mov
repnz
dec
push
jb
inc
cmp
loopne
jns
push
inc
pop
sar
mov
ss
retf
outs
jns
push
push
dec
scas
mov
scas
push
or
dec
push
jns
push
push
imul
or
mov
add
push
dec
push
sbb
push
push
pop
mov
mov
push
jb
cmp
inc
loopne
loopne
ror
aam
mov
inc
or
and
mov
ja
or
ins
xor
mov
xor
inc
inc
dec
imul
jne
push
pop
into
ins
jp
add
dec
inc
ins
cmp
cmp
fiadd
js
push
push
scas
push
jns
mov
arpl
ja
cmp
jp
dec
sbb
inc
popa
jl
dec
mov
dec
mov
dec
dec
cld
push
xor
push
dec
add
scas
push
clc
mov
addr16
pop
xor
xchg
inc
outs
ficom
pop
mov
outs
xchg
bound
xor
arpl
pop
jns
xor
xor
arpl
pop
dec
pop
hlt
jb
fisub
add
in
dec
sbb
sbb
out
enter
dec
clc
jb
push
jne
mov
adc
cdq
sub
imul
movs
dec
bound
push
push
sub
aad
jno
imul
push
(bad)
pop
nop
bound
enter
add
data16
add
dec
cmp
bound
fimul
mov
inc
sbb
ins
cli
jbe
adc
push
sbb
mov
adc
xor
inc
push
inc
ins
pop
lock
jl
inc
xor
and
push
aaa
sub
inc
jno
adc
inc
bound
cmp
pushf
jb
ret
aad
fsub
js
pop
dec
loopne
pop
jae
inc
bound
jbe
dec
jle
xor
cs
inc
ja
dec
xor
cwde
outs
sahf
inc
add
and
inc
inc
in
in
aaa
movs
adc
clc
jp
mov
xor
ss
dec
nop
es
dec
dec
push
push
inc
inc
push
pop
dec
xor
cmc
ja
bound
xor
imul
add
xchg
pop
jne
push
push
loopne
jae
js
adc
or
add
adc
or
xor
dec
outs
hlt
retf
sub
out
push
mov
dec
inc
jne
push
xchg
dec
stos
adc
je
lock
push
push
sub
sub
push
out
stos
movs
js
push
cmp
dec
inc
ficom
outs
dec
sub
addr16
jo
or
stos
lea
fisub
mov
push
imul
dec
pop
jns
pop
inc
jne
inc
push
mov
cmps
cmp
ss
stos
scas
xor
addr16
dec
inc
push
sbb
mov
retf
es
out
sub
inc
retf
mov
inc
push
add
push
inc
push
in
xchg
stos
test
mov
int3
ss
bound
and
push
test
in
inc
push
add
xchg
push
aam
scas
push
dec
mov
inc
dec
cmp
(bad)
and
xor
je
dec
adc
movs
inc
inc
data16
inc
aam
xor
push
push
cmp
dec
or
xchg
ret
cmp
ins
adc
dec
(bad)
mov
inc
xchg
push
js
push
dec
xor
sub
ins
push
imul
xchg
retf
outs
adc
stos
pusha
cmp
jbe
les
add
push
and
mov
cwde
mov
lock
push
test
push
fs
push
inc
push
push
inc
jno
retf
sub
mov
xor
push
sar
push
popa
(bad)
enter
add
push
loopne
sub
dec
mov
out
xor
push
push
xor
jbe
push
dec
gs
nop
inc
xor
sub
ins
dec
ss
xor
or
mov
cmp
dec
jae
lea
xor
dec
jae
xchg
push
push
xchg
imul
cs
jbe
jae
mov
inc
dec
inc
addr16
ss
push
dec
data16
add
push
gs
inc
adc
mov
or
push
mov
lods
outs
inc
outs
mov
push
lock
mov
mov
mov
jmp
dec
jne
add
jbe
nop
add
dec
push
cli
addr16
inc
xor
dec
dec
mov
bound
or
push
popa
sbb
and
arpl
push
pop
jbe
pop
inc
sub
ss
pop
sbb
push
dec
push
arpl
xor
add
ins
dec
dec
fs
inc
pop
push
in
in
and
xchg
inc
xor
enter
sbb
mov
js
push
sbb
jle
mov
ss
addr16
cmp
inc
jo
push
push
mov
les
imul
es
inc
ror
ins
aam
pop
retf
mov
(bad)
lods
push
dec
jbe
aaa
ins
loopne
scas
mov
dec
push
or
fsubr
push
or
push
pop
cmp
fs
xor
clc
je
xchg
cmp
cmp
dec
sbb
jo
ds
adc
push
mov
lock
mov
int3
mov
pop
push
fs
dec
jbe
adc
or
push
push
inc
clc
dec
ins
cmp
push
push
sbb
cmp
push
pop
push
or
mov
stos
or
outs
js
es
push
inc
add
cmp
push
adc
shl
dec
add
aad
ret
xchg
xor
ror
jecxz
xor
sub
xor
outs
(bad)
nop
dec
dec
pop
mov
inc
outs
dec
push
push
jp
js
push
mov
mov
ja
xchg
dec
jno
imul
(bad)
adc
ja
lock
sub
xor
inc
xor
aaa
inc
mov
js
dec
inc
inc
mov
inc
fs
add
jbe
mov
jbe
pop
add
add
push
jle
arpl
in
adc
push
jbe
dec
inc
push
fs
push
je
inc
push
inc
xchg
pop
imul
dec
ficom
pusha
sbb
push
pop
je
(bad)
arpl
push
inc
add
xor
push
xchg
mov
pop
xchg
je
push
jb
sub
pop
mov
add
pop
ja
jo
xor
stos
or
lock
push
jno
pop
call
mov
inc
gs
mov
xor
add
xor
add
bound
jo
data16
test
jp
addr16
inc
push
jns
call
push
push
ins
dec
test
fs
dec
and
rol
outs
inc
jns
ins
dec
arpl
add
push
ret
pop
mov
arpl
push
inc
inc
xor
cmps
add
add
arpl
popa
push
fcom
popa
jbe
dec
inc
arpl
jae
or
add
jne
imul
pop
jne
rcl
nop
dec
inc
xchg
push
arpl
inc
cwde
ins
imul
mov
outs
dec
test
jbe
jne
bound
jbe
repnz
inc
adc
outs
arpl
loop
cmp
mov
mov
xor
pushf
loope
rcl
xor
push
push
dec
xchg
nop
retf
add
ins
push
xor
mov
add
dec
mov
mov
ja
push
inc
arpl
push
xor
pop
inc
mov
push
jno
hlt
push
or
or
sbb
and
call
adc
outs
push
mov
outs
cmp
mov
cmp
inc
jp
push
shr
xchg
ja
inc
popa
dec
ins
fdiv
outs
lods
push
or
cli
dec
outs
inc
xor
mov
retf
je
add
xchg
push
js
xchg
aaa
push
pop
pop
stos
ins
mov
nop
dec
cli
int3
outs
mov
or
adc
jns
sub
push
stos
and
js
popa
push
xor
push
dec
popa
lock
push
pop
jno
test
mov
jae
push
push
or
or
xor
dec
ins
call
in
jp
push
xor
inc
add
mov
dec
jns
arpl
cmc
add
push
push
outs
push
push
outs
xchg
push
inc
pop
push
xor
fs
outs
dec
push
inc
cmp
or
bound
cld
ins
add
inc
fcmovnbe
inc
push
pusha
jns
sbb
add
aam
ins
imul
arpl
ins
inc
bound
mov
sbb
xor
xor
inc
sbb
inc
js
inc
ins
push
ret
ror
xchg
push
lods
ins
adc
mov
je
lock
shl
idiv
ins
js
push
data16
stos
arpl
fcom
mov
inc
jbe
bound
cmp
xor
imul
into
push
inc
push
fisubr
add
mov
inc
js
js
adc
arpl
std
scas
xchg
dec
cmps
repnz
inc
dec
xor
es
dec
in
add
sbb
je
enter
push
cmp
pushf
dec
ins
rcl
bound
test
add
dec
xor
dec
add
add
jae
dec
push
xor
repnz
js
cmp
add
push
and
mov
mov
push
push
pop
push
aaa
sub
ins
outs
inc
push
push
and
cs
je
xor
mov
bound
push
pop
and
js
push
xchg
inc
pop
imul
nop
add
or
cwde
jmp
pop
das
add
xor
cmp
mov
push
cmp
dec
clc
dec
lods
nop
fiadd
dec
inc
add
adc
dec
mov
dec
push
je
xor
jp
inc
je
rcl
sbb
ja
xor
js
jae
call
daa
xchg
outs
mov
mov
sub
outs
imul
add
cld
sbb
mov
push
ja
xor
test
inc
cli
dec
imul
dec
fdivr
bound
jg
dec
xor
push
ins
jae
xor
and
ins
cmp
push
sbb
arpl
js
add
mov
stos
and
inc
sahf
jno
mov
outs
xor
xor
xor
inc
or
mov
into
push
jb
push
jmp
or
add
push
outs
cli
push
sahf
jb
mov
dec
bound
pop
cmp
(bad)
mov
or
pusha
imul
mov
jns
jne
dec
stos
ret
dec
mov
out
mov
push
jno
in
xor
and
cmp
ss
into
dec
cmps
jmp
push
inc
cmp
inc
inc
push
push
inc
push
rcl
cmp
jmp
inc
jb
fdivr
xor
test
xor
bound
aaa
cmps
xor
and
xor
cmp
dec
mov
sahf
inc
pop
or
(bad)
cmp
aaa
into
dec
or
ss
xor
outs
(bad)
fs
jp
je
pop
xor
fsubr
mov
imul
cmc
xor
jns
cmps
outs
pop
dec
mov
add
loop
and
or
call
fs
(bad)
call
ds
dec
and
dec
xor
inc
rcr
push
shl
mov
cmp
ins
push
push
aaa
add
push
dec
adc
mov
jae
ja
pop
ins
adc
dec
dec
popa
add
inc
adc
dec
xor
xchg
adc
es
add
push
outs
data16
je
pop
ins
sbb
cmp
xor
ins
jo
add
push
aaa
dec
push
imul
inc
popa
adc
jb
dec
es
jbe
xor
pop
fisub
xor
fs
outs
gs
inc
js
inc
jne
and
dec
lds
sub
mov
inc
cs
ins
push
adc
test
outs
popa
popa
shl
popa
mov
call
xchg
call
outs
fcom
out
push
or
les
push
xor
jae
cld
fist
lods
imul
push
jb
pop
ret
mov
inc
cmp
test
adc
bound
xchg
cs
scas
inc
mov
cmp
hlt
dec
dec
fs
adc
inc
pop
cmp
or
in
imul
jne
xor
push
jb
jo
sar
push
push
fsub
out
ja
mov
cmp
popa
cmp
sbb
outs
movs
xor
add
push
les
inc
push
xchg
outs
xor
cs
dec
(bad)
mov
inc
ja
into
cmps
dec
push
out
jb
adc
outs
dec
lods
inc
xchg
push
call
loop
movs
mov
xor
out
adc
out
pop
test
push
fs
push
cmp
jno
stos
add
xchg
ret
(bad)
fistp
dec
xor
inc
inc
aam
push
dec
cmps
fwait
bound
inc
ins
dec
test
adc
popa
jbe
aaa
outs
dec
xor
mov
cwde
ja
xor
dec
dec
push
push
pop
xchg
or
sbb
loope
(bad)
cmps
inc
or
dec
pop
push
jne
jae
sub
xchg
mov
jmp
lods
jmp
dec
push
ja
xlat
add
dec
or
push
jle
push
inc
hlt
dec
xor
push
nop
ss
bound
ja
in
ficom
inc
push
dec
ins
push
outs
inc
inc
dec
addr16
popa
adc
loope
adc
dec
scas
(bad)
jbe
sub
jo
inc
push
xor
sbb
dec
pusha
retf
and
pop
pushf
xor
shr
add
push
inc
inc
xchg
popa
jno
je
cmp
push
dec
inc
push
mov
ss
in
or
jmp
outs
stos
xor
push
push
dec
outs
ja
xchg
add
dec
fs
mov
ins
outs
into
dec
inc
inc
push
pop
dec
pop
mov
test
adc
ja
je
dec
dec
dec
dec
jns
sbb
and
push
test
or
push
inc
and
ins
imul
ds
cmp
dec
inc
ins
popa
xor
hlt
dec
dec
jbe
ds
bound
fwait
mov
call
push
mov
sub
je
inc
stos
jg
scas
outs
cmp
jae
xor
xor
fbld
nop
jbe
push
test
popa
dec
outs
inc
cmps
push
call
lods
xchg
fsub
xchg
arpl
jp
add
push
ins
push
into
dec
xchg
adc
inc
push
inc
dec
int3
dec
add
aad
ins
add
gs
push
ss
cs
hlt
pop
mov
push
movs
dec
push
xchg
pusha
add
je
jo
xor
push
lods
ds
inc
adc
xchg
or
hlt
dec
gs
inc
dec
inc
inc
mov
sbb
cmp
xor
imul
int3
js
pop
dec
xchg
jne
push
push
xor
es
fisubr
fs
xor
inc
shl
dec
ret
adc
mov
push
inc
mov
dec
pop
popa
push
mov
and
outs
pop
shl
add
dec
je
aaa
mov
hlt
ins
js
jo
dec
sub
xor
imul
les
inc
int3
aas
xor
pop
mov
pop
mov
xchg
push
adc
shl
pusha
loopne
inc
jno
dec
xchg
aam
fild
dec
push
data16
fs
aad
pop
outs
xor
push
xor
add
fwait
sbb
pop
sbb
jno
push
inc
jno
add
(bad)
enter
inc
xor
dec
and
call
aad
js
push
test
inc
dec
dec
jbe
ins
cmp
inc
mov
test
dec
add
jns
arpl
cmp
jne
sub
pop
sar
popa
xor
jo
ins
mov
sahf
push
xor
push
cmp
fistp
dec
adc
cmp
bound
mov
lods
xchg
dec
push
adc
sbb
stos
jo
push
imul
push
js
popa
fs
ja
mov
pop
dec
fsub
or
aaa
jae
frstor
inc
dec
jns
push
popa
inc
push
xor
jp
dec
pop
inc
sub
push
push
mov
mov
jns
xor
arpl
jp
push
dec
inc
inc
push
inc
dec
mov
js
imul
ror
pop
push
data16
xor
stos
out
cdq
adc
mov
push
push
pop
xchg
push
cmp
push
or
int
add
ja
jbe
push
or
push
int3
mov
sub
sbb
and
adc
or
jbe
push
xor
dec
ret
cmp
ss
adc
clc
out
ins
dec
arpl
inc
imul
sub
cmp
jl
movs
jle
xor
mov
cmp
and
dec
jp
push
or
not
aad
inc
lock
ja
cmp
push
aad
cld
pop
add
dec
dec
ja
push
inc
jbe
stos
or
enter
push
pop
jne
inc
push
aaa
push
push
add
aam
jmp
inc
pop
outs
inc
dec
xchg
rcr
jmp
sbb
xor
push
popa
enter
pop
adc
add
addr16
jbe
xor
cmp
dec
inc
push
pop
jne
add
sub
imul
dec
inc
xlat
pop
or
bound
aaa
xor
cs
mov
outs
ss
cmp
push
xor
test
outs
dec
dec
dec
jae
dec
inc
push
dec
sub
dec
shl
popa
push
data16
sub
inc
xor
aad
sar
cmp
add
dec
inc
mov
xor
repnz
jns
aaa
mov
je
dec
aaa
xor
dec
imul
ins
xchg
jbe
jo
jle
dec
idiv
ins
test
xor
xor
push
pop
fst
and
xor
push
arpl
cmp
push
inc
clc
xor
inc
outs
xchg
cmps
xor
xor
fs
jmp
mov
push
cwde
loopne
shr
inc
call
or
bound
popf
test
mov
or
adc
jp
jne
gs
push
xchg
adc
inc
imul
add
add
inc
jecxz
les
dec
xor
je
push
(bad)
sti
inc
adc
into
popa
inc
inc
inc
xor
or
jp
jb
popa
out
xor
cmp
mov
adc
jp
addr16
and
xor
bound
or
ins
jo
dec
push
dec
push
and
inc
inc
jbe
adc
adc
imul
inc
inc
jns
inc
les
cmp
push
ins
xor
dec
sub
jno
inc
dec
enter
inc
xor
pop
and
test
push
jb
hlt
xchg
loop
xchg
cmp
ja
inc
inc
ins
arpl
dec
push
or
cmp
bound
sbb
loope
xor
cmp
ja
xor
aaa
mov
and
(bad)
push
xor
cmp
xor
push
push
test
push
add
pop
mov
sbb
jmp
mov
add
sbb
sub
popa
jo
cmp
pop
or
xor
imul
fs
dec
push
arpl
adc
sahf
popa
push
dec
imul
jp
inc
jo
push
mov
adc
or
inc
loop
sbb
push
sub
xor
xor
inc
dec
outs
pop
jl
cmp
inc
mov
adc
adc
push
je
or
add
dec
xor
xor
pop
add
jbe
or
jbe
adc
xchg
add
sbb
outs
inc
push
xor
dec
shl
adc
pop
retf
pop
mov
cmp
xor
call
ins
and
ins
ss
push
ins
jne
jp
dec
xor
sbb
outs
stos
adc
inc
addr16
js
imul
fdivr
jne
mov
outs
ja
fs
popa
push
dec
test
pop
out
gs
jmp
aaa
dec
pop
push
dec
inc
outs
dec
dec
jo
mov
inc
dec
bound
push
push
push
imul
dec
enter
push
js
push
push
and
push
ss
imul
adc
mov
push
cli
je
js
and
xor
fist
push
xor
out
fcom
inc
push
jg
push
dec
sub
imul
inc
inc
jae
cmps
fwait
test
dec
aaa
cmp
gs
xor
inc
and
out
mov
jp
xor
push
push
fcomp
in
outs
pusha
cmp
mov
cmp
inc
test
inc
outs
outs
xor
add
xchg
scas
adc
ror
aam
cs
push
inc
or
push
movs
or
xchg
adc
jne
mov
pusha
xor
dec
dec
adc
inc
rol
ins
push
mov
arpl
call
dec
imul
xor
cli
ins
dec
or
jno
push
dec
ins
mov
jp
pop
cmps
jno
fs
les
push
clc
dec
xor
(bad)
js
inc
push
jle
ins
xor
add
imul
jbe
mov
dec
bound
inc
fisub
push
push
ins
push
stos
mov
cmp
dec
pop
clc
push
mov
or
es
(bad)
and
popa
xchg
xchg
je
out
jb
nop
lock
dec
dec
test
ins
xor
push
push
sar
dec
jne
mov
hlt
popa
xor
pushf
jbe
push
xchg
outs
js
adc
sub
push
mov
pop
xchg
sub
lock
and
mov
pop
push
loop
test
or
inc
xor
inc
add
ss
es
bound
inc
push
aad
loopne
ins
inc
rcl
add
ret
sbb
add
(bad)
jmp
cld
and
push
pop
inc
js
push
xor
xor
inc
push
dec
popa
push
ss
ins
cmp
add
xor
sbb
sub
push
xor
and
push
jae
add
and
retf
clc
loopne
push
ins
xor
dec
ins
xor
or
adc
out
mov
sub
push
pop
loop
xchg
push
nop
fs
outs
push
push
imul
aaa
test
push
rcr
fistp
push
jne
push
push
ss
stos
jb
jg
dec
dec
jo
imul
dec
xor
pop
dec
add
(bad)
push
cwde
lods
add
js
data16
dec
pop
push
js
aaa
inc
ret
popa
mov
mov
or
aaa
cwde
aaa
xor
and
mov
xchg
sahf
into
push
ss
mov
jmp
push
fs
inc
jbe
xor
ja
mov
xchg
stos
nop
inc
push
adc
inc
ret
mov
pop
cwde
inc
aaa
or
gs
scas
xor
ja
cmp
outs
(bad)
xor
ret
sub
or
cli
and
mov
push
inc
inc
inc
fsubp
sub
jbe
popa
push
cwde
or
xor
addr16
data16
mov
push
in
stos
or
xor
js
push
inc
adc
test
push
push
dec
push
je
jns
scas
push
out
in
jae
rol
adc
mov
dec
out
pop
push
or
clc
inc
xor
jae
pop
bound
adc
dec
inc
(bad)
outs
fcom
outs
ds
inc
inc
sub
inc
dec
push
inc
imul
ins
movs
push
inc
inc
dec
loopne
add
add
inc
rcl
inc
cmp
fsub
push
adc
outs
inc
adc
push
mov
gs
jp
jmp
daa
add
dec
cmps
push
inc
push
inc
fs
call
inc
mov
dec
push
movs
in
scas
adc
dec
pop
or
jecxz
add
pop
and
pop
fdivrp
push
xor
stos
mov
or
push
mov
cmp
inc
and
push
jo
push
scas
lock
daa
add
inc
fs
mov
push
add
gs
pop
push
push
inc
xor
inc
pop
adc
in
lock
enter
je
sbb
sub
pop
mov
enter
inc
mov
xor
dec
add
int
mov
push
push
and
fld
xor
retf
push
dec
inc
and
test
ins
and
and
xor
xor
jne
or
cmp
pop
push
or
pop
lods
js
pusha
adc
aam
adc
ret
xchg
(bad)
inc
or
xchg
retf
add
inc
mov
jle
push
sbb
sub
add
pop
lods
push
or
gs
or
add
jo
dec
jmp
addr16
mov
xor
xor
imul
xchg
sahf
jle
add
int3
fisubr
pop
je
xor
data16
loop
xor
dec
sbb
dec
sub
dec
sub
dec
inc
xor
inc
push
mov
sub
ret
inc
inc
add
div
push
xchg
shr
push
mov
add
inc
cmps
push
adc
or
dec
js
cmp
xor
ins
loop
bound
push
or
mov
dec
jp
inc
dec
inc
push
and
shl
fld
adc
aaa
pop
sahf
push
addr16
add
ins
ss
jae
dec
scas
fild
push
arpl
push
xor
add
loopne
pop
data16
gs
pushf
pop
repnz
inc
dec
inc
push
add
ins
mov
pop
inc
dec
in
sbb
je
ins
cwde
sub
inc
imul
xor
loopne
ss
pusha
xor
nop
into
dec
adc
enter
push
push
sbb
loopne
push
mov
ret
data16
xor
sbb
cli
mov
mov
ja
inc
mov
inc
jo
jb
dec
adc
loopne
out
add
mov
push
jbe
mov
jp
dec
or
pusha
sbb
adc
xor
clc
fwait
mov
dec
push
jbe
scas
lods
mov
and
dec
outs
push
adc
xchg
je
inc
or
xor
push
inc
jae
jb
je
ins
dec
jo
dec
js
inc
jbe
mov
addr16
mov
es
adc
push
inc
mov
sbb
mov
push
cmp
inc
jno
jo
push
popa
xor
fwait
mov
xor
push
inc
ins
adc
and
jp
push
jo
dec
jmp
mov
push
outs
cli
xchg
mov
inc
jae
js
ins
mov
jp
add
fdiv
mov
pushaw
jne
cmp
mov
ss
inc
arpl
push
mov
pushf
fs
push
inc
clc
lock
bound
outs
ror
add
cmp
les
test
jle
inc
ret
mov
xor
sub
dec
shr
outs
sub
xor
xor
dec
xor
add
cmps
mov
jb
adc
dec
push
sahf
add
add
mov
sbb
dec
xor
shl
mov
inc
push
sbb
add
mov
dec
dec
jae
rol
sbb
je
cld
inc
dec
cmp
and
add
mov
stos
pop
je
inc
jb
ja
adc
inc
outs
pop
mov
xor
(bad)
mov
adc
fs
dec
inc
enter
xor
push
shl
inc
inc
inc
inc
mov
jo
xor
inc
sbb
and
push
sub
pop
pusha
adc
inc
dec
bound
push
outs
dec
push
sub
push
jo
xor
or
dec
push
push
dec
imul
dec
and
outs
cmp
cwde
mov
xchg
ins
sub
xor
enter
pop
add
dec
pop
imul
mov
cmps
push
out
dec
mov
inc
add
ret
and
ds
outs
jmp
repnz
shl
sub
js
push
dec
call
dec
xchg
inc
ins
ja
sub
mov
movs
in
popa
dec
ins
sbb
ins
popa
inc
mov
add
ss
xor
xor
rcl
jle
lock
mov
fimul
cmp
or
lods
jno
or
jno
xchg
in
xor
push
gs
jbe
mov
dec
movs
jo
push
jo
push
xor
dec
mov
push
push
outs
shl
outs
inc
dec
pop
lock
fadd
inc
xor
popa
fstp
dec
rol
xor
js
lock
jp
pop
ins
data16
dec
jp
push
or
mov
mov
inc
jp
inc
jns
inc
inc
je
inc
imul
call
xchg
adc
and
dec
pop
js
xchg
and
sbb
frstor
jl
into
xor
cmp
sub
dec
arpl
popa
ficomp
add
clc
inc
dec
ss
add
jp
outs
push
test
imul
mov
and
push
pop
inc
jae
js
ins
xchg
jp
push
jp
push
test
and
inc
shl
ret
push
push
jne
lock
or
aam
les
dec
push
push
push
popa
jae
test
jo
cmp
pop
jbe
xor
xor
push
xor
inc
push
js
push
dec
adc
pusha
adc
mov
sbb
push
ss
cmp
jo
inc
cmps
hlt
aad
jae
push
dec
adc
sahf
mov
push
bound
push
ins
push
xor
inc
xor
mov
pop
jo
loopne
add
xlat
xor
mov
out
dec
inc
push
retf
js
xor
clc
xchg
xor
dec
es
or
dec
xor
mov
sbb
pusha
pusha
(bad)
dec
pop
mov
xor
inc
test
jo
dec
jno
shl
arpl
or
adc
cmps
sbb
popf
add
ss
sbb
ins
(bad)
(bad)
fwait
mov
push
jae
inc
dec
push
xor
lods
adc
data16
gs
cmp
xchg
call
dec
inc
push
xor
data16
std
stos
ins
xor
push
gs
jno
pop
js
and
aam
dec
xor
jg
leave
shl
je
dec
sub
dec
aaa
dec
push
inc
mov
movs
test
inc
les
sub
xor
jecxz
sbb
xor
dec
jae
bound
je
inc
jo
outs
aam
mov
fs
aam
aaa
outs
inc
sbb
mov
inc
fdiv
ja
inc
les
and
ss
add
xchg
jno
jb
push
ss
cmps
inc
les
cli
dec
xor
lods
push
mov
jl
push
xchg
fdiv
aaa
adc
inc
jno
push
dec
js
inc
add
js
push
inc
mov
dec
dec
xor
cdq
out
mov
imul
sahf
jo
adc
pop
cmp
push
push
ret
es
xor
inc
push
inc
cmps
stos
std
fwait
pop
pop
mov
bound
je
fs
push
ja
dec
clc
add
push
cmp
push
fwait
push
cmp
dec
test
push
push
inc
xor
int
sub
jbe
jp
push
push
aaa
mov
push
mov
in
je
bound
add
xor
lock
ss
ficom
pop
add
sub
push
inc
dec
bound
ror
xor
cli
jae
jb
fisttp
mov
pop
dec
cmp
push
cmp
loop
adc
or
xor
pop
lock
push
popa
shl
dec
or
jb
push
xor
sub
ret
icebp
mov
dec
jno
xor
outs
pop
push
push
mov
into
call
sbb
gs
xchg
sub
xor
inc
pop
push
xchg
adc
retf
imul
sub
xchg
push
inc
push
sbb
sbb
cld
in
push
popa
inc
ins
loopne
test
xor
cmps
push
dec
push
fs
(bad)
cli
outs
xor
cs
loop
aaa
dec
jp
sar
dec
stos
imul
(bad)
in
inc
adc
mov
popa
bound
jne
ins
ins
call
xor
popa
push
jb
jbe
jp
ss
xor
pusha
mov
sub
dec
add
call
xor
cmp
xchg
push
add
add
fs
bound
jo
push
pusha
jmp
mov
dec
xor
cmp
mov
imul
push
jno
inc
sbb
inc
inc
jns
mov
imul
mov
retf
mov
mov
cli
inc
xor
pop
inc
adc
jb
push
aaa
pop
push
dec
push
jo
sbb
inc
inc
or
cmp
(bad)
out
xchg
pushf
shr
cmp
popa
push
in
pop
mov
mov
cmp
es
ss
cmp
sbb
pusha
push
bound
push
sahf
(bad)
dec
or
ds
bound
mov
data16
jb
dec
inc
dec
jmp
cmp
push
inc
xchg
mov
xor
data16
and
dec
imul
in
push
cmp
imul
mov
push
outs
ss
ret
mov
imul
jbe
loope
icebp
or
cmp
jno
cwde
add
and
push
pop
inc
mov
push
pop
aaa
inc
push
jne
inc
dec
jne
sub
aaa
xchg
xor
movs
cli
pop
sub
push
ins
pop
dec
addr16
addr16
(bad)
shl
jno
inc
pop
or
push
(bad)
and
and
ror
inc
inc
xor
pop
jno
add
xor
inc
push
jno
out
push
and
jbe
addr16
xor
or
push
pusha
fs
mov
(bad)
mov
int3
mov
push
dec
dec
adc
mov
outs
fs
jbe
cld
jns
dec
gs
mov
dec
xor
inc
cmp
dec
add
fs
jp
inc
jp
push
jge
fucomi
inc
inc
sub
aaa
jne
push
inc
adc
jp
push
adc
sbb
dec
arpl
xor
add
push
je
push
xor
mov
cmp
mov
pop
jmp
dec
loopne
push
mov
dec
cs
lods
add
bound
xor
dec
cwde
int3
cmp
sbb
add
or
xor
jns
cwde
popa
adc
add
push
es
mov
pop
gs
push
jo
inc
cmps
jne
jbe
pop
outs
pop
push
push
test
cli
dec
dec
outs
imul
mov
sub
lods
outs
nop
or
inc
dec
push
mov
call
pop
popa
hlt
pop
push
add
and
xor
inc
mov
ins
mov
mov
inc
dec
loop
pop
mov
dec
jo
and
cmp
sbb
inc
je
xor
add
mov
jbe
dec
dec
dec
bound
arpl
sbb
push
push
jo
dec
addr16
add
arpl
jne
jo
pop
xor
push
inc
popa
arpl
imul
mov
jle
xor
dec
sub
mov
fadd
jo
sub
shl
push
outs
call
jp
mov
(bad)
outs
mov
inc
xor
ja
dec
xor
shl
scas
addr16
sbb
sbb
mov
push
jae
push
arpl
stos
dec
adc
add
jp
fcom
pusha
mov
push
or
mov
xor
xor
inc
jne
outs
push
jno
push
pop
push
ss
nop
movs
xchg
dec
mov
push
dec
jbe
push
mov
mov
data16
js
xor
mov
push
push
push
jb
retf
in
push
pop
fmul
xor
inc
ficomp
xchg
out
rcl
push
or
cmp
cmp
push
imul
adc
dec
popa
dec
(bad)
mov
jne
add
xor
jp
cmp
jo
mov
sub
out
(bad)
test
inc
inc
push
fs
ja
push
xor
mov
mov
sub
dec
xor
jne
or
sub
ins
jb
mov
ss
mov
dec
je
sbb
call
dec
jo
or
dec
bound
mov
stos
jo
es
add
mov
push
mov
or
and
div
inc
fs
inc
inc
push
inc
dec
outs
inc
xor
call
push
mov
jbe
call
mov
aam
adc
or
jo
sbb
sbb
ja
inc
adc
(bad)
jmp
call
addr16
push
push
bound
sbb
xor
or
push
mov
adc
and
push
dec
inc
in
adc
in
dec
jno
add
add
mov
in
mov
dec
loopne
jno
mov
and
push
es
and
aam
push
sub
arpl
add
enter
sbb
add
pusha
push
sbb
dec
mov
add
fisub
int3
xor
xor
push
int3
push
xchg
push
adc
adc
pushf
lods
push
mov
cld
js
pop
add
inc
ins
ss
push
ins
push
pop
je
rol
int3
pop
push
dec
pop
xor
inc
shl
jns
push
xor
cmps
jns
repnz
sbb
and
pop
adc
jno
sahf
cs
test
dec
xor
and
push
ins
mov
push
mov
push
sahf
pop
dec
outs
outs
scas
push
or
(bad)
addr16
outs
inc
cmp
stos
arpl
fs
es
dec
out
nop
jo
dec
add
cmps
push
pop
push
jmp
dec
push
cmp
pop
dec
(bad)
bound
mov
ins
mov
push
pop
push
dec
inc
xor
push
or
bound
pop
bound
or
jmp
sbb
inc
xchg
cwde
push
in
cmp
push
jbe
xor
ret
push
cli
aad
call
cmp
mov
jb
bound
cmps
push
push
push
inc
movs
movs
adc
imul
mov
xchg
jne
js
jo
jb
fs
inc
xor
sub
push
js
mov
xor
dec
outs
xor
rcl
mov
mov
bound
test
cmp
push
aaa
jb
inc
popa
sbb
ret
outs
outs
rcl
push
rol
xor
pop
xor
xor
push
hlt
imul
push
call
mov
push
add
dec
mov
aaa
gs
xchg
sub
je
add
jbe
(bad)
adc
jno
xor
dec
inc
inc
js
popa
push
and
add
ins
dec
push
sahf
popa
jbe
push
xor
push
adc
xor
sub
sub
inc
dec
inc
ss
dec
xchg
and
and
lea
data16
mov
inc
js
stos
adc
xchg
shl
addr16
icebp
in
mov
push
push
jne
imul
xor
add
mov
fadd
inc
out
push
pop
mov
jl
push
jne
xor
push
or
jne
je
ss
push
xor
gs
inc
sub
pop
pop
push
inc
jl
imul
dec
inc
inc
jbe
scas
add
retf
or
add
retf
(bad)
mov
in
data16
xor
stos
mov
imul
out
pusha
popa
adc
xor
je
push
inc
add
sahf
dec
mov
test
sbb
push
aaa
push
push
dec
loop
adc
lock
pop
jns
jo
mov
dec
imul
pusha
jns
jbe
push
xchg
pop
or
cmp
rol
xor
cmp
push
cdq
scas
jo
inc
cmp
cmp
cwde
push
nop
outs
push
outs
adc
bound
dec
cwde
adc
xchg
rol
pushf
dec
and
je
sub
push
hlt
add
jno
call
cmp
scas
xor
mov
gs
(bad)
cmp
xor
xchg
add
jo
cmp
push
cmps
ss
ja
sahf
pop
inc
or
into
nop
dec
dec
xor
or
mov
fcmovnb
or
adc
adc
or
xchg
push
dec
or
xchg
xor
outs
inc
inc
mov
push
xor
inc
push
stos
pop
xor
ss
jno
movs
rcr
cli
cmp
inc
push
dec
shl
inc
rcl
sbb
xchg
jb
dec
pop
outs
dec
dec
push
aaa
dec
pop
xchg
loopne
dec
inc
pusha
jb
fmul
out
mov
dec
cmp
into
or
scas
xchg
sahf
pop
or
or
push
xor
sub
mov
(bad)
cwde
push
add
sbb
je
jo
mov
sbb
jae
add
push
pop
mov
mov
inc
inc
jae
cmp
dec
icebp
dec
aam
aaa
jno
xchg
ja
adc
je
popa
cmps
cs
inc
pop
in
mov
dec
inc
mov
push
fidiv
push
imul
loop
addr16
pusha
inc
dec
popa
ins
inc
mov
movs
and
cmp
scas
fadd
dec
or
inc
adc
ficom
inc
repnz
inc
outs
pop
fidivr
mov
mov
push
pop
popa
pop
xor
dec
dec
push
mov
sub
xor
fwait
and
mov
sbb
jne
dec
or
sbb
ret
mul
jp
dec
popa
jp
pop
xor
add
les
add
push
xor
xor
inc
cli
ds
mov
inc
dec
jbe
imul
jno
push
add
ror
jne
push
or
or
inc
push
and
mov
sbb
pop
dec
push
dec
ja
cld
adc
inc
inc
jns
mov
inc
push
jo
and
pop
aaa
push
(bad)
call
rcr
fidivr
push
clc
push
mov
xor
test
(bad)
dec
xor
mov
inc
xchg
inc
test
pushf
jne
xor
mov
jb
mov
addr16
xor
push
or
dec
dec
imul
xor
pushf
or
ja
je
movs
into
inc
cmp
ins
ins
xor
push
dec
pop
mov
jp
xor
sbb
cmp
xchg
pop
push
stos
sub
ficom
add
inc
outs
ret
pop
dec
inc
jno
dec
inc
pop
sar
xchg
push
cmp
inc
jp
and
(bad)
mov
mov
mov
xor
lods
jo
push
outs
aam
imul
jbe
adc
or
fs
outs
sub
push
dec
jp
push
jo
and
test
or
data16
push
shl
xor
xchg
cli
dec
loopne
inc
push
cmp
xchg
inc
and
xor
dec
adc
mov
jb
pop
inc
inc
jae
jb
pop
test
push
push
mov
arpl
or
push
jne
adc
imul
push
cmp
pusha
dec
data16
addr16
or
dec
dec
dec
push
push
mov
add
ja
xchg
aaa
test
inc
inc
inc
xor
xchg
or
ss
inc
aaa
and
push
aaa
rcr
loope
pop
in
ss
inc
xchg
cmps
jp
in
scas
adc
push
jb
jne
dec
cmps
(bad)
enter
jns
push
ror
push
test
or
push
xchg
pop
pusha
adc
call
arpl
(bad)
inc
aaa
push
xor
cmp
jp
sub
test
jne
xor
jbe
adc
push
inc
ins
imul
or
mov
mov
and
push
dec
inc
jp
jne
xchg
popa
xor
push
xor
push
inc
ja
dec
aam
jo
or
js
jbe
xor
shl
jo
cmp
cmp
add
int3
dec
inc
ret
mov
xchg
aam
test
add
push
and
fs
push
leave
jle
mov
push
ins
mov
daa
in
sbb
aaa
sbb
cmp
bound
push
ja
or
hlt
inc
dec
ja
rcl
jp
inc
js
mov
arpl
dec
inc
cmp
ins
imul
push
inc
xor
inc
adc
cmp
ins
dec
dec
popa
pop
and
stos
fadd
pop
add
je
daa
je
das
push
imul
cmp
xor
stos
adc
add
ss
cs
call
inc
push
push
cmp
in
dec
pop
and
mov
dec
pop
in
je
xchg
jno
outs
xchg
outs
dec
adc
ja
mov
jb
mov
div
mov
dec
xor
xor
xor
inc
jbe
sahf
dec
sbb
gs
mov
call
fs
div
sbb
(bad)
push
jne
inc
test
dec
and
into
inc
push
arpl
jae
push
inc
addr16
cmp
mov
and
imul
sub
inc
ret
pop
mov
mov
stos
add
push
inc
cs
fs
fs
xor
or
fs
call
mov
imul
out
cmp
xor
ins
js
outs
inc
jg
aam
repnz
mov
cmp
jp
xchg
mov
sub
addr16
dec
cwde
xchg
std
sub
gs
out
ja
inc
push
pop
hlt
mov
retf
arpl
mov
je
adc
inc
inc
mov
outs
imul
in
push
mov
in
dec
sub
ss
aad
add
fisub
mov
ins
cli
jb
popa
push
inc
jp
ss
inc
mov
enter
cld
add
cli
xor
imul
cld
push
shr
cmp
je
dec
jo
push
or
inc
dec
nop
push
mul
cmp
ins
jb
cmp
jge
cli
inc
xor
outs
pop
test
sub
repnz
ja
push
int
sub
jbe
fs
xor
outs
fist
push
inc
loop
jbe
pop
ins
movs
arpl
xor
pusha
xor
test
jns
inc
cmp
dec
dec
cmp
stos
cmp
ss
dec
inc
lea
dec
dec
inc
shl
inc
push
xchg
cmp
int
pop
inc
inc
sub
jl
adc
jbe
push
jo
inc
add
inc
or
dec
addr16
xchg
push
rol
lock
inc
cmp
mov
es
dec
xor
xor
loop
jo
inc
arpl
in
pop
lods
mov
pop
dec
inc
xor
cmp
hlt
jns
imul
adc
jbe
cmp
pop
sub
or
je
jbe
jb
adc
inc
mov
mov
add
out
into
jae
xor
inc
adc
xor
addr16
jo
retf
fidivr
ja
les
outs
cmp
jae
arpl
pop
pop
inc
ret
inc
jle
movs
sbb
dec
dec
cmp
fs
gs
sub
jne
sbb
jo
push
xor
push
xlat
mov
push
cmp
or
sahf
outs
pop
jae
jne
pop
and
xchg
xchg
ret
dec
push
sbb
adc
imul
sbb
ins
xchg
outs
gs
movs
fbld
je
aaa
dec
xor
aam
pop
and
push
jmp
xor
fisttp
mov
inc
rol
push
add
hlt
js
ja
mov
imul
dec
bound
mov
push
imul
rcr
dec
outs
jno
dec
xor
dec
inc
bound
add
movs
xor
ins
test
lods
xor
add
xor
adc
jg
mov
jp
inc
arpl
fs
inc
mov
adc
mov
jno
cwde
xor
nop
push
scas
sub
mov
pop
and
push
jmp
push
add
ss
xor
rcr
pop
jne
inc
xor
js
aam
xchg
dec
adc
mov
ret
sbb
jp
fmul
sub
xchg
push
jns
push
xor
bound
dec
push
push
dec
loop
inc
fsubr
pop
push
pop
adc
cmp
inc
xchg
ss
dec
rcl
dec
xor
fisubr
call
call
and
jmp
jbe
mov
sub
mov
jb
and
sub
dec
cmp
fisubr
retf
test
pop
(bad)
xlat
dec
inc
addr16
push
dec
test
shr
popa
jae
pop
into
dec
jbe
aaa
or
addr16
pop
xor
cmp
add
call
retf
fidiv
dec
cmp
test
xchg
nop
clc
inc
movs
mov
or
ins
inc
addr16
pop
addr16
imul
xor
adc
sbb
push
test
inc
push
scas
mov
inc
pop
push
push
jo
mov
ret
shl
add
jo
outs
fcom
loop
mov
pop
inc
jo
repnz
jns
test
jae
(bad)
adc
jo
cmps
inc
sub
adc
inc
stos
data16
add
or
clc
pop
push
aam
cli
ins
data16
dec
inc
ins
fs
adc
add
xor
pop
je
mov
mov
fs
inc
adc
adc
xchg
call
pop
mov
cmps
push
inc
xor
xchg
dec
push
inc
jp
adc
mov
dec
outs
cmp
inc
add
mov
sbb
test
push
aam
add
inc
popa
and
lock
loop
jo
enter
and
or
push
ss
jns
xor
inc
hlt
cs
dec
push
inc
push
inc
dec
mov
call
inc
push
inc
mov
retf
and
adc
loopne
mov
(bad)
arpl
xor
jns
dec
loopne
and
inc
mov
add
mov
ja
pop
xor
mov
add
call
jle
ja
js
sbb
inc
push
(bad)
js
xor
ja
dec
gs
je
or
icebp
imul
in
xor
push
push
jmp
inc
movs
dec
adc
and
cs
out
fs
dec
ss
dec
add
ret
je
inc
push
sub
ss
rol
bound
outs
mov
dec
outs
push
add
push
xor
and
data16
cld
stos
(bad)
sbb
dec
inc
ins
xor
cmp
push
loopne
nop
push
cmp
mov
push
nop
data16
js
lods
xor
test
or
inc
sub
dec
outs
mov
xor
inc
push
(bad)
fs
inc
adc
fs
movs
sbb
pop
out
cmp
push
add
and
add
push
inc
inc
xor
in
pop
inc
inc
fmul
inc
addr16
push
push
push
bound
call
out
movs
es
std
sbb
mov
fsubr
push
ins
outs
js
test
imul
inc
jne
ins
js
movs
xor
pop
ins
dec
xor
inc
add
ins
lock
test
jo
xchg
push
inc
xor
sti
inc
xor
push
xor
jbe
add
xor
imul
dec
fdivr
adc
xor
hlt
inc
inc
xor
push
dec
jne
inc
les
xor
popa
push
jp
fcom
add
movs
outs
inc
(bad)
popa
mov
rol
fs
push
inc
xor
pop
aaa
out
cmp
imul
push
push
fsubr
push
mov
stos
call
add
or
and
inc
inc
outs
rol
je
fmul
pop
mov
mov
push
jae
xchg
push
push
test
test
pop
outs
push
push
(bad)
cmps
fwait
sub
xor
loopne
dec
and
je
test
popa
ins
inc
pop
mov
xor
dec
ins
xchg
out
adc
push
xor
push
cmp
adc
push
inc
jns
pop
adc
push
inc
push
or
xor
outs
outs
js
jp
loopne
lock
test
fisttp
xor
pop
dec
ror
push
inc
outs
xor
inc
jae
xor
pop
sub
bound
lods
test
jmp
xor
into
xor
push
inc
mov
mov
push
inc
in
aam
or
ins
sub
push
aam
jbe
imul
mov
inc
bound
retf
sub
ret
adc
cmps
push
inc
push
xor
push
xor
sbb
push
mov
inc
cs
jp
xor
lock
call
ins
dec
sub
push
ja
aaa
outs
sti
inc
adc
dec
imul
clc
jp
ss
ror
mov
fs
xor
outs
aaa
or
cld
pop
jb
dec
out
popa
outs
rcr
in
jp
jbe
cmp
bound
in
(bad)
or
dec
out
inc
inc
push
jb
dec
je
inc
inc
inc
or
dec
sahf
(bad)
out
xor
and
adc
aam
inc
imul
add
inc
es
dec
ret
outs
loop
mov
bnd
inc
jns
add
ja
cmp
inc
bound
inc
push
outs
adc
add
cmp
jo
daa
add
adc
inc
push
push
test
mov
loopne
inc
xor
jne
mov
ins
outs
mov
jae
outs
into
push
test
fst
cld
push
push
dec
xor
xor
xchg
adc
jbe
inc
or
dec
inc
cs
popa
push
sbb
call
adc
sub
pop
xchg
gs
jp
sbb
pop
dec
xor
arpl
lods
sub
jno
cmp
(bad)
xor
adc
jo
sub
mov
rcl
jp
ins
addr16
add
outs
adc
inc
inc
pop
push
dec
inc
dec
cmp
push
dec
ss
push
ds
push
jns
dec
sub
sub
js
inc
inc
push
outs
mov
cmp
jbe
(bad)
pop
popa
mov
dec
jno
ss
dec
push
dec
jo
ret
popa
mov
inc
mov
arpl
pop
fisub
dec
add
mov
or
inc
loop
push
jb
mov
inc
jb
mov
push
xchg
jmp
pop
adc
jno
imul
mov
pop
jl
push
sub
fs
xor
and
or
inc
inc
inc
dec
sbb
xor
div
or
sub
cwde
sbb
push
mov
mov
ja
inc
push
jb
pop
inc
mov
push
imul
or
sub
push
jb
push
push
fisttp
cmp
dec
ja
jne
adc
inc
jbe
pop
jno
inc
lock
sub
push
aaa
jns
ins
jp
jo
adc
dec
xor
adc
push
enter
hlt
jmp
bound
arpl
pop
arpl
push
xor
push
dec
fiadd
jg
gs
jbe
movs
jbe
pop
dec
arpl
push
sub
aam
cmp
xor
fs
hlt
aaa
push
dec
imul
push
(bad)
dec
dec
shl
in
fs
add
jb
addr16
inc
arpl
clc
and
aaa
dec
push
add
sbb
aaa
inc
jns
push
out
sub
push
xchg
cld
inc
inc
cs
loop
xchg
popa
xor
fcomp
or
cdq
xor
clc
inc
dec
(bad)
sub
dec
xor
jmp
cmp
sub
jmp
dec
mov
push
addr16
sub
adc
add
out
pusha
addr16
popf
push
scas
mov
ss
dec
jae
fs
jno
dec
inc
and
mov
scas
pop
or
je
ins
callw
jno
or
dec
push
clc
push
push
popa
sub
and
dec
outs
mov
call
add
ja
adc
jbe
outs
xor
adc
pop
add
push
out
loop
aaa
aad
cmp
movs
and
jp
dec
ins
push
outs
fs
sub
inc
aam
gs
arpl
inc
mov
push
gs
dec
sub
xchg
mov
push
ins
sub
fsub
inc
jp
div
and
jb
sub
mov
pop
fcmovnu
test
push
add
push
add
push
pop
push
imul
cmp
sub
xchg
ret
xor
mov
xor
add
push
gs
mov
and
add
sti
shl
arpl
ret
jb
sbb
jnp
dec
pop
dec
inc
daa
xchg
add
mov
daa
ret
sub
or
stos
orps
mov
mov
je
mov
(bad)
sub
push
mov
mov
jne
push
mov
jo
das
inc
inc
js
push
pop
movs
push
outs
ins
js
cmp
jb
mov
jp
pop
jo
lock
ins
push
inc
les
addr16
pop
dec
out
cli
fwait
mov
outs
dec
xor
push
jbe
dec
pop
test
dec
xor
push
jae
sub
aam
xor
(bad)
mov
test
cld
jg
push
lods
enter
dec
ja
inc
push
dec
cmp
loope
jb
push
inc
js
jae
dec
xor
mov
imul
jns
pop
imul
jo
clc
bound
add
dec
dec
loope
das
mov
in
dec
data16
data16
inc
dec
inc
jp
movs
push
inc
mov
ja
sub
jmp
push
bound
ja
imul
cmp
cmp
imul
aam
jl
push
xchg
test
test
fadd
inc
sar
addr16
dec
xor
cmp
aaa
sbb
imul
outs
ins
jne
push
imul
scas
push
aam
dec
outs
pushw
jle
popa
rol
fs
imul
(bad)
dec
pop
jno
fmul
mov
push
push
out
and
cmp
jno
xor
pop
mov
inc
gs
dec
data16
or
fs
sub
jns
add
or
fwait
inc
mov
xchg
inc
(bad)
mov
into
inc
ja
jne
loop
xchg
inc
pop
push
push
pop
shr
mov
adc
je
outs
(bad)
ins
dec
gs
push
jnp
or
push
jae
inc
push
pop
in
jmp
inc
stos
fiadd
ds
fwait
gs
mov
stos
push
inc
bound
inc
jnp
sub
pop
sub
arpl
add
mov
and
(bad)
sbb
inc
loop
sub
fisubr
iret
dec
push
das
dec
or
rcl
arpl
xchg
out
or
arpl
and
ret
aad
xchg
jb
pop
mov
pop
inc
pop
add
add
shl
inc
push
cli
outs
add
ja
dec
pop
cmp
cmp
inc
js
dec
push
push
inc
and
xor
mov
dec
dec
inc
inc
add
adc
xor
aaa
jno
inc
adc
lock
inc
and
sub
js
inc
(bad)
rcr
xor
clc
push
ss
pop
jb
shr
dec
push
movs
adc
adc
cs
popf
add
js
jne
mov
data16
enter
iret
mov
cmp
dec
push
push
pop
(bad)
pop
inc
pop
xor
pop
test
cmc
or
push
inc
outs
or
aas
add
jae
cs
gs
outs
addr16
add
jl
dec
outs
or
arpl
push
test
push
jbe
fcomip
push
xchg
imul
cmp
cmc
jmp
jno
inc
push
ds
push
mov
cli
pop
pushf
push
jns
pop
jo
inc
cmp
fimul
les
pop
inc
dec
pop
xor
push
inc
imul
dec
cmp
ss
shr
popa
js
push
ret
fmul
xor
push
push
std
push
push
call
xor
ins
inc
outs
push
xlat
jg
xor
dec
inc
inc
dec
inc
pop
jb
xor
push
fs
cmp
push
sbb
loop
push
push
inc
fistp
clc
cmp
addr16
push
xor
push
jno
inc
or
lods
aad
gs
fs
add
dec
ds
pop
je
mov
adc
mov
lds
push
mov
inc
sbb
js
hlt
or
xor
pushf
cmp
mov
pusha
push
and
sbb
xor
js
loope
retf
jo
dec
lods
pop
sbb
loopne
lock
sbb
dec
jmp
mov
jae
push
popa
push
inc
push
inc
dec
gs
dec
pop
mov
xor
outs
jo
add
or
dec
xor
out
inc
push
jb
jne
mov
data16
cmp
push
stos
jne
loopne
or
arpl
xor
mov
ja
push
push
dec
les
out
clc
imul
dec
dec
mov
mov
jb
pusha
dec
xor
neg
les
cs
outs
dec
outs
push
dec
sbb
inc
push
jne
sbb
jbe
cwde
inc
push
mov
test
dec
push
jae
xchg
jne
mov
dec
inc
pushf
jns
(bad)
loopne
push
push
push
dec
mov
dec
sub
jmp
cld
jbe
jo
push
dec
push
jo
push
push
cmp
pop
jo
mov
xor
popa
inc
popa
aaa
inc
xor
jo
inc
jns
or
mov
imul
dec
aam
les
into
jp
jecxz
add
inc
addr16
dec
sbb
ret
pop
jo
xor
(bad)
inc
push
popa
inc
ins
imul
add
mov
addr16
dec
test
dec
es
inc
ins
and
inc
adc
xor
mov
int3
xor
add
xor
and
test
inc
outs
cli
(bad)
jo
jns
mov
push
sub
and
ins
xchg
pushf
(bad)
leave
mov
cs
imul
push
xor
jns
cmp
or
pop
dec
mov
xor
cmp
xchg
push
push
sbb
xor
add
loopne
shl
scas
pop
imul
ins
fs
fs
(bad)
push
imul
pop
xor
pop
xchg
fsub
push
jp
ins
or
mov
gs
outs
pop
call
bound
cmp
ds
int
inc
cs
dec
xor
rol
sbb
inc
dec
mov
loopne
push
fadd
cmp
xor
outs
cmp
jb
mov
ja
mov
sub
inc
inc
pusha
popa
xchg
fidiv
imul
mov
sbb
dec
pop
dec
int3
not
test
push
(bad)
dec
xchg
or
shl
jne
inc
test
nop
jns
add
push
dec
push
cmp
jno
jp
adc
jo
xor
fistp
sahf
push
dec
sbb
mov
int3
push
repnz
push
adc
ret
imul
inc
aam
aaa
inc
loop
fs
shl
adc
outs
jo
or
dec
je
inc
nop
in
arpl
xchg
mov
ficom
aaa
jl
xor
xor
dec
imul
dec
or
cs
aaa
loop
adc
mov
or
es
jb
ins
add
dec
data16
xor
fs
call
test
pop
adc
es
and
pop
jns
pop
push
loope
fsub
imul
push
mov
mov
mov
or
xor
sbb
pop
mov
outs
dec
add
aaa
dec
mov
jns
(bad)
mov
xor
shr
cmp
inc
outs
ins
ss
mov
sub
xor
aaa
push
test
pop
push
jo
inc
jbe
ins
dec
bound
sbb
push
bound
push
adc
or
pop
push
outs
aaa
dec
jno
mov
and
dec
sub
bound
(bad)
xor
dec
dec
jno
out
jb
fucom
popa
push
dec
mov
jb
xor
push
add
push
cwde
mov
mov
dec
mov
add
xor
aaa
fs
push
or
arpl
data16
dec
shr
inc
and
or
lea
dec
jp
outs
add
ret
pop
ja
dec
ss
popa
push
dec
jp
dec
out
xchg
popa
mov
je
jo
push
test
aaa
ins
add
xor
mov
mov
mov
jb
dec
inc
adc
das
nop
push
ja
dec
xor
mov
(bad)
out
push
sbb
scas
outs
inc
xor
push
dec
dec
pop
inc
ins
xor
push
and
mov
dec
mov
inc
dec
aaa
dec
ss
dec
inc
ins
imul
call
cmp
inc
scas
mov
push
push
push
lock
fs
or
jp
retf
sbb
jbe
xor
retf
rol
inc
scas
out
add
int3
into
pop
and
test
push
fidivr
inc
imul
cmps
inc
cmps
jae
jns
mov
sar
bound
stos
push
xor
mov
(bad)
fdivr
dec
xor
sbb
aad
dec
cmps
xor
(bad)
push
dec
inc
or
cdq
or
inc
inc
pop
ss
js
jo
shl
mov
xchg
pop
mov
rcl
inc
cmps
push
dec
or
pop
inc
push
pop
or
test
sbb
or
das
push
xchg
inc
ss
push
mov
cld
push
push
push
push
add
popa
cli
pop
push
xor
and
mov
ss
add
sub
inc
jae
ret
inc
adc
inc
sbb
jns
es
add
test
adc
ja
jmp
es
sbb
enter
mov
push
xchg
es
xchg
call
push
inc
pop
jbe
(bad)
pop
cli
mov
xor
xor
mov
add
push
jno
inc
jle
fidiv
fisubr
xor
jae
test
mov
scas
call
dec
ror
push
ja
jns
xor
clc
lea
inc
js
ins
push
xor
inc
add
sub
sbb
push
cmp
fs
test
ins
cmp
sar
push
outs
inc
adc
arpl
inc
jns
pop
fs
inc
je
test
call
mov
pop
bound
dec
push
data16
imul
xor
addr16
imul
or
push
cmp
inc
aaa
xchg
fiadd
ja
js
jns
push
ins
add
lock
cli
outs
pop
xor
adc
outs
inc
es
jb
imul
jp
push
xor
push
dec
pop
call
pop
dec
add
jbe
ins
pusha
mov
sub
xchg
adc
push
add
dec
dec
dec
push
push
push
inc
xchg
hlt
inc
inc
dec
dec
dec
jo
xor
inc
loopne
xor
push
xor
imul
jb
pop
push
push
cli
mov
bound
sbb
add
outs
xor
push
mov
adc
ret
imul
lods
bnd
loope
inc
stos
ror
push
(bad)
mov
xchg
jno
popa
dec
outs
mov
ins
and
xor
push
jo
mov
push
inc
pusha
je
mov
push
jo
call
cmp
push
nop
xor
xor
je
jle
or
dec
sbb
xchg
je
cmp
cmp
inc
push
and
sbb
inc
mov
or
mov
jne
and
lods
call
arpl
arpl
(bad)
jb
sub
sbb
push
test
pusha
or
jne
xchg
addr16
nop
pop
test
or
js
fbld
(bad)
pop
ins
inc
inc
ins
inc
rcr
add
js
inc
inc
bound
ja
inc
arpl
gs
and
xor
sbb
movs
pusha
data16
leave
test
cld
popa
dec
pop
nop
les
retf
xor
jp
imul
ins
push
push
mov
in
xchg
add
jle
imul
add
jle
les
stos
imul
cmp
jae
mov
ret
push
inc
aaa
mov
or
ss
pop
push
sbb
bound
inc
inc
jmp
push
jo
inc
(bad)
cmp
js
call
mov
test
or
adc
pop
and
es
jb
push
test
or
mov
outs
call
xor
popa
and
pop
ss
xor
pushf
ret
js
jno
push
test
pop
and
scas
adc
xchg
and
push
outs
dec
jecxz
cmps
push
loopne
dec
sub
inc
inc
push
sbb
xchg
jmp
pop
(bad)
push
ins
je
out
call
cld
inc
mov
push
push
inc
xor
jp
je
arpl
xchg
push
sub
jb
data16
fidiv
les
das
loopne
jp
lods
cmp
sub
fcmovnb
pop
(bad)
ins
fbstp
je
jle
dec
inc
xor
dec
jp
adc
push
stos
inc
jns
dec
xor
retf
aaa
mov
mov
push
lods
mov
inc
enter
sub
inc
inc
cmp
data16
jp
adc
jne
or
mov
inc
xor
or
sub
mov
xchg
inc
inc
cmp
jb
xor
push
(bad)
aaa
leave
xor
dec
js
and
je
shl
inc
inc
push
sbb
shr
inc
outs
add
push
dec
dec
loopne
and
push
js
dec
fs
clc
jp
jl
inc
mov
ja
mov
mov
push
inc
dec
push
out
cmp
xor
and
leave
enter
dec
cli
cdq
mov
aaa
dec
dec
push
loop
stos
or
es
jb
cmp
push
xor
add
lods
dec
shr
add
fs
jp
xor
dec
add
inc
jo
push
dec
pop
and
inc
push
dec
fwait
fs
add
xor
add
mov
imul
inc
js
mov
adc
adc
cmp
xchg
jo
popa
dec
loop
and
push
js
pop
clc
inc
aaa
shl
xor
or
push
xor
add
aaa
jno
xor
push
xor
add
xor
sub
mov
ss
cmp
(bad)
push
popa
cli
ss
push
dec
dec
push
push
out
mov
sub
jo
mov
dec
data16
xchg
or
xchg
sbb
dec
add
add
adc
(bad)
jl
xor
xor
pop
div
ins
fdiv
js
xor
push
push
test
sub
sub
popa
(bad)
pushf
cmp
push
std
arpl
jns
push
and
dec
push
out
gs
pusha
xor
out
stos
in
or
push
je
inc
dec
and
or
or
enter
ins
cld
push
push
data16
pop
test
pop
arpl
ins
fsub
xchg
jmp
scas
jp
dec
ins
jo
add
ret
ss
addr16
mov
test
dec
dec
cmp
push
mov
mov
(bad)
mov
rcl
js
mov
push
out
inc
dec
gs
sbb
xor
xor
aam
adc
cld
ins
movs
push
push
repnz
push
xchg
add
aaa
push
rol
shl
ins
jno
cmp
push
aam
mov
inc
adc
mov
ja
inc
push
dec
inc
(bad)
popa
add
xor
and
outs
pop
test
jp
imul
sub
adc
inc
addr16
dec
push
ds
aaa
push
inc
pop
or
mov
mov
inc
dec
push
fdivr
mov
adc
inc
test
mov
mov
adc
les
mov
jae
jmp
ss
arpl
adc
pop
xor
ins
xor
mov
or
dec
push
inc
xchg
push
cmp
outs
cmp
inc
loope
or
data16
cmp
push
fsubr
imul
aam
and
push
inc
ret
popa
adc
push
lods
add
jns
inc
int3
inc
and
dec
xor
mov
jno
inc
or
cmp
push
es
ja
dec
dec
pop
call
jns
addr16
inc
ja
pop
push
arpl
dec
call
xchg
or
inc
sub
dec
or
xor
shr
jo
push
inc
lods
bound
hlt
inc
dec
dec
jp
bound
dec
ins
ss
scas
ja
js
fwait
out
xor
ja
(bad)
push
xor
pop
cmp
dec
rcl
xor
cmp
jno
cs
dec
ins
push
jb
lock
ja
mov
fs
dec
jbe
lods
and
inc
xor
ss
inc
sub
jns
xor
es
add
push
loop
dec
push
gs
es
sbb
dec
lods
mov
add
pop
jae
or
inc
mov
cmp
in
inc
ss
and
add
cmp
ror
hlt
push
and
inc
and
push
sbb
push
push
test
mov
dec
(bad)
outs
sub
(bad)
mov
or
add
ja
dec
retf
sub
inc
jb
and
scas
mov
inc
dec
push
imul
and
bound
and
test
pop
dec
xor
shl
arpl
test
xchg
push
dec
jl
jno
push
mov
or
pushw
inc
or
stos
retf
or
aam
dec
sub
push
dec
jo
xchg
dec
dec
dec
inc
xor
mov
mov
dec
push
push
test
and
inc
xchg
add
jbe
dec
sbb
xor
push
pop
shl
pop
shr
data16
out
xor
or
dec
out
pop
add
shr
icebp
dec
ins
dec
xor
bound
call
xor
inc
and
loop
test
push
cwde
ficom
dec
outs
inc
dec
push
jno
imul
ror
pop
imul
test
jl
mov
aas
add
aaa
and
xchg
pop
mov
jb
cmp
aam
push
retf
dec
inc
pop
sub
sub
jp
dec
test
(bad)
adc
pop
add
push
push
inc
push
bound
push
cmps
add
dec
and
ss
push
ins
sbb
push
ror
dec
sbb
dec
jmp
stos
pop
push
jmp
dec
je
dec
jecxz
adc
pop
push
add
retf
dec
loop
js
push
dec
imul
dec
dec
xor
shr
push
cli
push
(bad)
imul
inc
and
sahf
data16
sbb
push
mov
sub
inc
dec
cmp
popa
xor
push
dec
pusha
fadd
call
imul
or
rcr
xor
dec
push
or
(bad)
pop
xchg
jno
ins
mov
int3
out
jns
inc
es
and
pusha
inc
xor
cmp
cli
push
aaa
ins
fs
int3
xor
xchg
call
or
and
dec
jo
push
movs
push
xor
add
dec
pop
and
dec
imul
push
sar
push
mov
gs
bound
leave
in
jno
cmp
pop
stos
and
and
arpl
mov
jne
cmp
jmp
xor
xor
and
cmps
dec
sub
push
jae
mov
inc
int
mov
(bad)
xchg
adc
and
sub
or
(bad)
jns
cli
ins
xor
sub
imul
shr
jle
or
mov
adc
xor
inc
mov
outs
jb
push
push
xor
fcmove
ins
dec
jae
adc
call
addr16
dec
pop
xor
ss
add
xor
outs
add
les
mov
sub
push
pop
inc
jl
add
lods
xchg
lea
dec
arpl
push
bound
dec
xor
inc
jae
and
outs
arpl
stos
sub
fs
push
aaa
add
jbe
jp
xor
or
dec
stos
push
dec
push
pop
ret
cmp
sbb
and
ins
loop
or
xor
fdiv
cmp
add
ins
fs
daa
pop
cmps
push
xor
xor
push
xor
inc
or
retf
in
mov
jbe
ss
jmp
inc
xor
dec
inc
(bad)
call
xor
ss
push
imul
dec
js
push
data16
pop
fs
push
dec
mov
sub
mov
mov
or
pop
or
bnd
mov
or
inc
xor
sub
cs
inc
pop
test
outs
ss
pop
jbe
xor
inc
loopne
cmp
aam
xor
dec
outs
jo
dec
pop
idiv
inc
push
push
test
bound
fs
dec
test
rcl
sub
push
mov
dec
cmp
xchg
jmp
jp
gs
data16
inc
add
xor
jp
sub
bound
retf
pop
inc
mov
push
pop
int3
push
je
push
sub
pop
or
inc
xor
jmp
repnz
jno
push
and
inc
outs
pushf
scas
adc
icebp
adc
push
inc
clc
push
jo
pop
fs
push
add
push
sub
jle
or
xor
ins
and
mov
and
jo
repnz
outs
push
inc
into
and
outs
data16
add
and
imul
int3
pop
cmp
test
ret
call
hlt
xor
xchg
data16
push
shl
gs
cmp
add
pop
cli
cmp
fst
clc
repnz
js
ja
ins
mov
fcomp
shl
popa
push
mov
cmp
cmp
call
jno
dec
jne
lds
push
dec
push
push
bound
jbe
jne
inc
or
add
test
mov
sub
xchg
mov
fdiv
xchg
push
mov
dec
mov
mov
outs
push
xor
test
jno
mov
cmp
rol
bound
dec
jb
push
sub
mov
xor
push
test
add
push
cld
adc
mov
push
xor
das
es
dec
xor
ja
ret
std
fwait
rcl
push
ss
xor
xor
xor
pushf
ins
cwde
loopne
dec
inc
call
dec
mov
pop
adc
cmp
dec
hlt
dec
add
je
jbe
aaa
shl
and
xor
out
popa
in
and
in
clc
jno
call
cmp
inc
sub
dec
dec
gs
cmp
cmps
stos
add
sbb
xor
adc
ins
dec
add
add
(bad)
movs
dec
retf
icebp
int
xor
push
jbe
ja
xor
inc
lds
inc
dec
lock
or
push
push
cmp
lods
add
dec
jb
int3
xchg
bound
inc
sub
add
or
pop
jp
arpl
data16
or
jns
call
scas
not
js
arpl
inc
dec
das
adc
xor
sub
push
hlt
arpl
mov
push
movs
adc
fsubr
push
jns
inc
jne
cli
test
outs
fbld
inc
outs
inc
xor
push
inc
push
push
xor
mov
xor
cmp
pop
add
jb
dec
inc
test
or
sbb
sub
cmp
pop
adc
pop
inc
imul
add
pusha
clc
jns
or
jbe
ret
inc
arpl
cs
sbb
in
cmp
pop
jp
dec
adc
jo
push
mov
out
mov
or
xor
add
cwde
ja
aaa
inc
bound
inc
mov
pop
inc
and
call
inc
jle
xor
push
xchg
sub
jbe
adc
das
in
bound
inc
aaa
inc
dec
dec
arpl
popa
cmp
scas
xor
push
(bad)
rcr
and
into
push
imul
xchg
or
add
dec
push
cmp
xchg
xor
fidivr
loopne
dec
lea
pop
pusha
jo
pushf
ss
cmp
dec
xor
(bad)
adc
pusha
pop
popa
cmp
ins
inc
ss
inc
mov
dec
ja
or
clc
inc
xor
imul
mov
jo
ss
ret
rol
push
dec
or
data16
hlt
lea
ins
push
jns
and
inc
data16
sub
dec
loope
dec
inc
jo
jno
ja
xor
mov
dec
repnz
jns
aaa
mov
push
pop
push
add
jb
xchg
xor
test
stos
call
mov
stos
add
jbe
sbb
push
add
fisubr
jo
inc
sub
data16
sbb
aaa
imul
inc
xor
xor
cmp
push
enter
adc
dec
mov
mov
movs
add
in
jo
push
outs
xor
clc
cmps
inc
inc
xor
mov
loope
xor
push
inc
push
push
outs
xchg
add
or
push
ins
(bad)
push
push
or
xor
pusha
outs
xor
push
ja
fcomp
add
xchg
ss
xor
xchg
add
pop
xor
ret
xor
bound
std
sub
es
dec
push
gs
outs
mov
jo
popa
and
add
inc
rcl
xor
adc
call
(bad)
xor
dec
jo
test
add
adc
mov
cmp
push
add
push
sbb
ins
fwait
sub
xor
push
inc
push
dec
mov
dec
es
mov
dec
sbb
inc
jmp
lea
dec
js
rcl
xchg
gs
xor
push
scas
gs
add
ins
dec
push
or
adc
dec
pop
sbb
push
ins
cmp
addr16
dec
je
inc
xor
push
sub
(bad)
imul
jb
adc
xor
mov
icebp
popf
stos
xor
inc
ja
dec
push
xor
mov
jbe
pop
xchg
cs
jns
shr
dec
dec
jb
jae
imul
xchg
mov
popa
mov
inc
jp
inc
and
ins
push
push
dec
jbe
(bad)
and
xor
cmps
dec
add
or
loopne
push
sbb
adc
jb
test
push
or
dec
push
add
jae
dec
or
hlt
jg
bound
xor
js
data16
cmp
push
xor
add
add
pop
mov
cmp
fadd
push
push
cld
ss
pop
bound
sbb
xchg
fs
jns
and
and
xor
xor
mov
stos
push
jp
dec
dec
add
cli
stos
sub
mov
cmp
stos
push
inc
xor
pop
or
je
xchg
sub
push
bound
ins
xor
pop
pop
adc
stos
xor
inc
test
xor
cli
cbw
js
mov
pop
xor
call
jp
jnp
cmps
int3
jb
js
inc
push
data16
mov
pushf
inc
push
jno
jp
mov
add
icebp
xor
xor
fld
dec
ins
gs
inc
push
inc
dec
sbb
dec
sbb
push
fwait
add
(bad)
enter
inc
cmp
movs
rol
dec
dec
call
add
xor
push
inc
outs
js
add
jl
bound
mov
jmp
inc
imul
mov
and
ins
push
int3
inc
adc
xor
and
(bad)
bound
fst
xchg
inc
fs
outs
dec
loopne
and
mov
outs
add
sbb
sti
(bad)
jmp
inc
gs
je
dec
sbb
mov
ss
mov
cmp
loopne
push
inc
or
imul
and
mov
fmul
stos
leave
aad
push
aaa
jae
inc
mov
shl
jb
jp
jae
data16
push
mov
dec
jp
push
mov
enter
inc
push
jo
xchg
inc
cmp
cs
inc
inc
mov
push
dec
pop
dec
push
sbb
ins
bound
mov
jle
mov
jmp
fisub
fidiv
pop
pop
mov
movs
jbe
cmp
pusha
outs
scas
inc
arpl
fmul
js
inc
and
sahf
arpl
in
rol
ins
cs
clc
adc
xor
bound
xor
sbb
je
mov
aaa
dec
call
push
dec
inc
loop
inc
ss
dec
mov
mov
jno
pop
dec
push
ins
push
inc
jo
dec
js
fbld
pop
(bad)
je
arpl
push
push
xchg
push
xor
lahf
add
dec
out
jb
test
and
mov
shl
aam
movs
out
mov
sbb
hlt
xor
push
cdq
inc
aaa
push
(bad)
push
dec
imul
push
dec
push
call
enter
push
out
dec
xor
xor
push
cmp
sub
push
cmp
add
sbb
adc
jmp
shr
sub
jo
jno
ss
cmp
shl
je
xor
inc
add
or
jo
dec
inc
icebp
popa
jno
xor
mov
outs
sub
adc
dec
cmps
dec
push
ins
ficomp
rol
mov
outs
add
dec
add
fstp
jb
inc
cmp
sub
cmp
push
dec
sub
loopne
test
ins
jp
push
fcomp
dec
push
or
and
je
jp
xchg
cs
call
add
in
add
xchg
and
or
push
dec
add
push
loop
xchg
imul
ja
out
inc
and
xchg
inc
ds
mov
push
pop
ror
pop
inc
mov
xor
mov
sub
push
imul
push
push
inc
cmp
imul
adc
fs
inc
test
or
movs
push
mov
loopne
xor
fiadd
sub
pop
add
or
nop
int3
inc
cmp
jmp
or
dec
push
outs
xor
pop
pop
movs
or
fs
and
test
mov
loope
mov
bound
jns
jo
aas
pop
and
xor
arpl
push
ins
ja
test
xchg
mov
into
push
dec
fisttp
mov
aam
mov
mov
inc
mov
mov
scas
addr16
push
dec
inc
xor
sbb
xor
inc
push
inc
sbb
aaa
sub
adc
aaa
xor
sub
adc
dec
sbb
dec
pop
xor
cmp
outs
inc
xchg
stos
ss
jns
shr
dec
cmp
inc
ret
test
mov
pop
push
hlt
xor
dec
nop
and
mov
push
xchg
push
ja
data16
add
sub
imul
movs
outs
add
bound
cmp
adc
add
and
pop
(bad)
xor
dec
fs
fs
inc
and
push
inc
inc
push
(bad)
imul
je
outs
mov
int3
inc
je
xor
dec
dec
and
dec
dec
outs
ins
adc
sub
push
dec
inc
pop
jns
cmp
dec
pop
outs
imul
(bad)
xor
inc
aam
inc
movs
pusha
dec
push
dec
sub
out
sahf
ja
ins
push
mov
outs
dec
shr
push
mov
dec
popa
popa
push
fnsave
(bad)
push
dec
clc
inc
xor
adc
inc
rol
mov
push
jl
mov
pop
dec
mov
dec
outs
loopne
push
xor
rcr
cmp
push
push
outs
inc
dec
jp
es
inc
adc
dec
fiadd
jae
popa
adc
inc
dec
dec
cmp
jno
xchg
sbb
ficom
outs
push
bound
push
mov
xchg
leave
mov
ins
js
enter
dec
imul
adc
ss
dec
push
xor
mov
mov
pop
stos
sub
push
fs
or
cmp
fdiv
add
push
outs
xchg
push
ins
repnz
cmp
add
adc
pop
add
loop
inc
jo
nop
pusha
pop
mov
je
lock
mov
mov
imul
mov
pop
sbb
xor
or
push
and
xor
push
outs
into
ins
dec
sub
sub
data16
push
loopne
ja
inc
mov
jg
call
imul
push
mov
ins
and
sub
bound
ss
retf
fsub
sbb
inc
into
inc
popa
xor
adc
sub
dec
xor
push
mov
ret
ins
mov
rcl
mov
sbb
dec
shl
ret
and
ins
dec
ins
push
xor
ins
movs
pop
jne
hlt
adc
mov
ins
xor
clc
fidiv
js
pop
cmp
int
out
div
cmp
je
inc
loop
lods
movs
outs
push
adc
dec
repnz
push
or
push
mov
les
xor
inc
inc
ins
dec
dec
js
push
rol
ins
jl
push
xor
popa
cld
outs
push
js
dec
pusha
ds
imul
test
imul
cli
ins
push
jne
daa
or
jbe
jbe
mov
xor
and
or
inc
add
push
mov
mov
jns
mov
cmp
jmp
jbe
addr16
xor
pop
or
pop
imul
js
shl
(bad)
jo
ins
push
sbb
mov
xor
gs
jb
inc
inc
loopne
dec
jmp
js
pop
jae
addr16
inc
dec
ins
outs
jo
pop
js
movs
and
push
aam
outs
shl
mov
ja
inc
or
mov
push
xor
popa
cmp
sbb
adc
xor
fist
inc
dec
xchg
dec
outs
outs
dec
arpl
jae
push
mov
and
inc
cwde
hlt
jp
push
cmp
ins
enter
push
popa
ins
shl
sbb
pushf
inc
xor
mov
inc
ja
push
pop
into
les
jb
jg
(bad)
adc
pop
inc
cmp
and
popa
inc
dec
jno
rcl
clc
push
jp
bound
or
je
dec
sub
or
cwde
sbb
sbb
dec
fs
xchg
jp
adc
push
loop
push
push
adc
inc
outs
add
push
jb
es
inc
push
dec
inc
lods
dec
enter
fadd
inc
xor
push
adc
mov
dec
push
inc
inc
je
inc
adc
cwde
pop
ror
mov
dec
jo
cmp
retf
stos
cmps
dec
jae
inc
test
int3
dec
mov
and
test
dec
aam
data16
icebp
pop
sub
push
xor
push
outs
jp
xchg
ins
(bad)
jno
ret
adc
js
gs
dec
pop
mov
call
call
retf
or
mov
add
or
jbe
rol
adc
sub
fisttp
or
push
int3
push
dec
xor
pusha
adc
push
sbb
in
add
cmp
ds
xchg
inc
fisttp
xor
push
push
ret
or
mov
jbe
and
rcl
push
cs
inc
xchg
retf
fs
je
and
mov
push
in
cmp
test
dec
fdivr
xor
dec
xor
movs
adc
ret
dec
push
sbb
pop
aaa
inc
js
stos
aad
push
ins
dec
dec
dec
jb
inc
pop
(bad)
adc
and
ja
or
mov
cmp
icebp
push
push
jno
fs
xor
dec
push
dec
inc
dec
cmp
mov
gs
in
data16
(bad)
mov
xor
dec
xor
dec
ins
xor
stos
lods
inc
jo
fsubr
xor
inc
in
call
ins
cmp
retf
in
out
fmul
outs
jb
or
mov
and
hlt
fs
mov
push
gs
jbe
dec
pop
inc
loope
enter
pop
je
adc
mov
dec
sbb
shr
xor
or
lods
inc
sub
mov
cli
sub
imul
cli
ins
inc
mov
aad
push
inc
outs
push
xor
inc
and
sti
and
arpl
ins
xor
push
mov
pop
dec
mov
xchg
jecxz
jecxz
js
push
outs
jb
js
xor
fs
ja
jo
mov
jbe
inc
pop
aad
loope
pop
pop
out
sbb
inc
aam
dec
xor
jns
inc
(bad)
nop
ret
sbb
fs
inc
cmp
cmp
jmp
push
pop
inc
push
xchg
push
pop
pushf
retf
sub
jno
inc
sbb
jne
cmp
fs
or
cmp
outs
push
inc
outs
push
inc
loopne
popa
es
mov
test
outs
ja
push
add
add
push
dec
outs
jns
push
test
mov
ins
push
mov
jl
xchg
push
push
and
sub
scas
imul
push
add
fs
ja
cmc
and
outs
addr16
cmps
push
ja
push
mov
(bad)
cld
push
xchg
push
aam
jmp
or
imul
push
outs
mov
ins
imul
xor
push
imul
cmps
xor
inc
dec
ins
shr
push
push
js
dec
jb
jo
sub
mov
add
sbb
jae
push
adc
dec
call
mov
or
inc
nop
ss
cmp
push
sbb
inc
outs
inc
dec
dec
test
push
mov
jp
jo
pop
in
mov
jo
or
dec
jne
adc
mov
push
je
es
push
stos
je
hlt
xor
inc
mov
add
mov
push
not
sub
inc
shl
jo
dec
or
data16
cmp
and
cmp
outs
cmp
popaw
pop
xor
sub
ss
pop
jo
xchg
ss
push
mov
sahf
inc
js
mov
dec
call
xchg
push
and
xor
mov
(bad)
lods
inc
shl
test
push
xor
jae
push
sbb
and
or
xor
sbb
imul
test
inc
jmp
ins
je
sub
push
ror
outs
fmul
fldcw
fs
xor
ins
push
push
push
cli
adc
fadd
xor
adc
adc
push
or
xchg
cmp
sbb
xlat
add
jb
outs
mov
fiadd
leave
sub
xchg
shl
adc
stos
(bad)
push
xor
loope
or
inc
inc
mov
shr
mov
inc
or
retf
es
push
loop
push
push
fs
or
mov
inc
xor
fiadd
xor
cmp
push
jle
je
push
jp
jae
push
add
push
xor
cmp
stos
in
scas
dec
dec
out
xor
and
shl
jp
adc
xor
enter
call
aaa
dec
xor
je
inc
inc
loop
jae
adc
push
xor
push
adc
push
sub
ins
inc
jbe
inc
je
pusha
in
es
push
inc
dec
jne
fs
and
adc
ss
push
popa
dec
shl
loope
push
es
add
xchg
pop
inc
pop
cmp
dec
dec
inc
js
push
rcl
xchg
rcl
ins
out
data16
jp
push
call
push
xor
bound
jo
push
dec
rol
scas
inc
push
stos
nop
add
push
out
mov
aam
arpl
retf
adc
dec
jae
out
xor
repnz
je
xor
sbb
push
bound
mov
jp
ins
inc
sbb
sbb
adc
outs
add
ret
movs
push
and
ret
mov
sub
jns
outs
dec
mov
mov
xor
ins
test
dec
ja
aam
add
sbb
xor
dec
push
pop
sahf
cmp
adc
mov
inc
sub
mov
call
jmp
nop
dec
dec
pop
movs
adc
mov
mov
pop
outs
ins
push
jp
dec
push
jb
mov
push
push
outs
neg
fild
popa
inc
jb
jno
arpl
xchg
xchg
ret
xor
push
in
out
xchg
add
adc
mov
je
mov
push
add
sub
adc
pop
aaa
fisubr
xor
push
rcr
or
pop
aaa
inc
arpl
and
sahf
push
jbe
mov
pop
add
ss
jo
inc
movs
fwait
mov
data16
dec
jno
inc
outs
sub
push
ret
mov
cs
add
adc
pop
imul
inc
inc
xor
call
jo
adc
fs
inc
(bad)
xor
add
push
xor
imul
fwait
out
add
fsubr
inc
inc
cmp
test
popa
xor
add
(bad)
and
add
inc
add
xor
pusha
inc
and
adc
ins
add
cmp
ds
movs
fsubr
js
and
xor
ret
leave
inc
add
sub
mov
aaa
xor
je
push
push
and
jp
mov
inc
inc
arpl
or
dec
dec
leave
or
push
mov
push
ret
or
and
fidiv
push
xor
retf
rcr
(bad)
jp
push
push
sar
inc
push
es
outs
data16
and
add
int3
call
push
dec
sbb
or
pop
(bad)
data16
mov
je
repnz
imul
dec
sub
add
push
fs
inc
rcl
sbb
imul
or
inc
dec
push
or
js
push
push
jb
dec
in
je
push
mov
or
lea
xor
or
xchg
xor
pusha
add
lods
inc
push
nop
push
bound
mov
dec
xor
push
mov
push
or
xchg
adc
movs
push
mov
sub
mov
mov
push
addr16
call
fs
push
dec
jmp
fmul
cld
adc
jb
inc
sub
imul
mov
fcom
inc
enter
cmp
jo
dec
pop
cli
mov
jmp
mov
inc
popa
push
or
dec
xor
js
xlat
lea
jo
push
cmp
push
ins
dec
js
and
addr16
cmp
test
pop
retf
push
add
shl
dec
stos
dec
test
das
fimul
data16
ret
dec
xor
les
test
imul
xor
sbb
test
aaa
and
jmp
test
and
inc
dec
and
stos
and
dec
xchg
pop
inc
mov
bound
mov
xor
js
imul
ins
test
cmp
push
ja
cmp
dec
jp
xor
jo
jo
call
mov
test
cs
imul
inc
ins
ja
cmps
and
mov
adc
popa
mov
sbb
adc
bound
inc
add
push
add
add
inc
js
push
cmp
xor
fs
push
xor
inc
jne
adc
adc
outs
test
mov
imul
dec
ins
mov
push
and
mov
dec
dec
add
adc
retf
adc
push
jbe
pop
(bad)
cld
ins
add
push
mov
xor
loope
jbe
pop
jae
push
xchg
or
imul
inc
cmp
cmp
outs
jp
(bad)
push
push
dec
dec
data16
ss
dec
sbb
or
jbe
push
add
inc
push
mov
xor
nop
and
jb
aaa
xor
loope
cld
xchg
pop
fwait
adc
pop
xor
stos
push
jae
sbb
cld
push
dec
arpl
pop
dec
mov
shl
test
fs
cs
out
aaa
push
xchg
sar
jle
inc
jno
push
jns
aam
out
imul
or
bound
jp
ins
data16
lds
mov
dec
inc
add
mov
test
shl
pop
push
dec
inc
jno
sub
pop
(bad)
gs
inc
dec
imul
outs
je
dec
enter
(bad)
arpl
ins
mov
dec
inc
push
or
rcr
popa
hlt
dec
jne
jb
ja
ja
dec
loopne
fimul
lods
scas
add
push
jle
cmps
aam
or
ja
int3
adc
xor
pusha
jo
cmp
test
test
je
push
add
xor
jmp
aam
loope
pop
adc
loope
ins
xchg
shl
mov
aaa
jb
mov
jno
add
je
clc
outs
add
add
outs
push
dec
dec
mov
es
xchg
pusha
adc
and
push
call
ja
dec
add
ss
dec
nop
pusha
dec
jp
adc
outs
fs
adc
fs
xor
dec
dec
and
popa
add
je
inc
add
add
lds
hlt
aaa
add
or
imul
xor
imul
in
imul
sbb
pushf
add
retf
dec
outs
sbb
push
add
mov
sub
mov
out
imul
dec
xor
dec
push
ja
pop
fbld
dec
arpl
lods
mov
adc
popa
cmp
scas
fmul
dec
js
add
pop
xor
pop
cdq
test
les
push
pushf
push
ins
mov
pop
xor
cmps
jbe
xor
add
rol
js
popa
jp
xchg
pop
es
popa
inc
shr
sub
ror
jbe
xor
pushf
mov
call
xor
sub
inc
into
ror
ror
xor
popa
les
popa
outs
cmp
ins
push
push
xor
mov
outs
inc
cmp
dec
push
jno
shr
mov
cs
inc
mov
addr16
gs
jl
pop
fs
imul
inc
inc
dec
mov
cmp
and
or
or
ja
jo
pop
or
test
sbb
cs
jb
pop
push
push
cmp
add
leave
or
and
or
mov
xor
ret
mov
mov
ss
arpl
sub
push
test
pop
inc
or
imul
dec
mov
ins
fcom
(bad)
bound
inc
pop
(bad)
jb
or
jecxz
jp
movs
mov
cmp
and
pusha
and
pop
dec
(bad)
adc
out
shl
push
dec
cmp
cmp
xchg
test
add
mov
adc
push
sub
mov
mov
jo
outs
pop
icebp
sbb
xor
push
dec
jae
fs
bound
imul
aaa
pop
cmp
jbe
xor
jns
dec
imul
sar
mov
dec
ins
push
dec
js
jne
int
push
das
add
dec
je
adc
push
popa
inc
cli
dec
push
(bad)
and
movs
outs
in
jae
gs
mov
push
jb
push
int3
clc
inc
push
push
mov
jo
pop
test
sbb
jae
or
push
push
dec
sahf
cmp
push
add
xor
xchg
imul
xchg
call
dec
jne
jl
pop
dec
imul
(bad)
out
add
les
call
imul
mov
jne
and
je
push
sub
and
push
push
dec
or
xor
adc
imul
aam
mov
jp
or
add
imul
sbb
ds
push
xchg
cmp
xor
mov
add
int3
mov
xor
xor
add
es
in
ins
mov
ret
push
push
pop
sbb
mov
gs
jno
ja
inc
nop
imul
dec
test
push
xor
adc
push
rcl
inc
dec
imul
fs
xchg
push
adc
cmps
aaa
div
aaa
add
push
push
sub
outs
ja
imul
add
sub
in
inc
ja
adc
dec
rcl
stos
outs
sub
push
push
dec
adc
xchg
or
push
fnsave
add
cmps
push
cwde
push
or
jbe
imul
xor
imul
outs
out
dec
xor
js
sbb
xor
ins
cmps
pop
aad
enter
jbe
dec
cmp
mov
mov
jno
dec
(bad)
xchg
push
xor
push
push
and
shr
cld
pop
pop
xor
fs
cmp
add
je
sub
push
or
js
dec
jae
jns
out
xor
aaa
dec
js
cmp
gs
daa
test
mov
sbb
cwde
je
jbe
cmp
loop
pop
(bad)
ins
inc
ins
and
mov
shl
in
cmps
push
outs
push
je
out
je
jbe
addr16
pop
mov
or
inc
nop
dec
inc
test
jno
sbb
push
js
dec
aaa
cs
sub
push
sub
cmps
and
xchg
and
lds
dec
xor
jb
addr16
nop
add
jp
mov
xchg
icebp
and
push
cmp
dec
inc
arpl
call
rol
inc
inc
fst
or
push
push
push
add
inc
push
sub
add
xor
xor
push
data16
dec
ins
retf
mov
push
push
dec
xor
push
inc
adc
ds
inc
cmp
dec
jae
or
jbe
jl
aaa
add
js
push
bound
push
xor
push
jo
imul
jns
and
fld
shl
jp
mov
dec
jb
inc
jb
push
cmp
push
ss
mov
popa
out
jle
call
test
out
dec
push
lods
ret
mov
mov
arpl
sub
cmp
sbb
push
add
imul
add
cmc
ins
inc
jne
inc
or
xor
sub
data16
fs
rol
ja
jae
dec
(bad)
(bad)
inc
retw
(bad)
(bad)
push
and
push
movs
dec
fs
adc
shl
outs
push
popa
xchg
in
fs
popa
xor
cli
sub
dec
bound
and
xor
push
inc
pop
inc
icebp
out
pop
pop
push
jp
ins
push
dec
call
ss
mov
aam
or
arpl
cmp
cmp
sub
mov
shr
add
jne
mov
shl
adc
pushf
push
sub
inc
mov
or
outs
dec
test
stos
test
ss
(bad)
clc
dec
stos
ja
dec
xor
div
imul
fcom
jbe
jp
and
and
scas
pusha
cmp
xor
xor
lock
adc
imul
dec
add
inc
or
adc
gs
xor
add
push
mov
imul
dec
mov
push
push
sub
push
sbb
outs
xor
push
dec
push
push
fwait
clc
or
push
pop
inc
dec
dec
and
bound
sbb
mov
or
or
inc
push
cmp
fistp
add
cmp
mov
xor
mov
xor
push
xor
dec
and
push
shr
push
jb
and
xor
jbe
inc
dec
loopne
dec
inc
jno
adc
enter
sbb
ds
inc
xor
cmc
gs
js
inc
adc
js
inc
dec
xor
dec
sbb
push
mov
int3
push
jne
sub
dec
push
mov
mov
out
push
push
dec
or
jb
ins
jae
mov
inc
add
push
dec
call
(bad)
dec
into
dec
xor
push
sbb
mov
sbb
test
stos
clc
aam
inc
mov
jnp
arpl
pop
ja
dec
arpl
adc
imul
das
call
xor
push
inc
adc
or
add
arpl
inc
and
inc
stos
mov
call
ins
(bad)
bound
push
pop
movs
push
inc
fidivr
sbb
out
xchg
and
xor
sbb
and
arpl
jbe
add
and
dec
js
inc
inc
mov
jb
mov
dec
xor
push
das
xor
dec
push
ja
push
arpl
mov
add
call
sbb
jl
and
push
int3
inc
and
dec
sub
(bad)
xchg
fidiv
sbb
jae
pop
gs
dec
dec
dec
add
push
cdq
test
scas
adc
pop
fimul
mov
and
xor
dec
inc
xchg
inc
ins
rcr
or
adc
dec
inc
mov
pushf
dec
xor
mov
xor
push
int
test
fs
nop
dec
xor
test
xor
test
adc
ins
push
data16
sub
push
inc
adc
push
xor
sbb
call
aad
dec
imul
jno
dec
rcl
popa
rcl
push
sbb
je
call
outs
adc
nop
loopne
adc
dec
inc
push
inc
xor
jmp
dec
sbb
xchg
push
and
movs
add
ds
inc
dec
inc
mov
lock
xor
outs
push
jns
je
jns
push
fs
enter
xor
and
and
add
xor
xor
mov
fimul
scas
ins
cmps
jns
push
cmp
popa
push
inc
add
push
popa
sub
push
push
or
xchg
push
arpl
rcl
or
dec
(bad)
jns
stos
dec
adc
bound
leave
les
xchg
jne
jmp
and
dec
dec
jae
stos
dec
test
ss
dec
inc
push
xchg
call
inc
inc
not
xchg
call
xor
xor
adc
mov
imul
movs
cmp
and
mov
fsub
je
dec
push
outs
jmp
rol
xchg
fs
les
dec
cld
mov
cli
push
ins
mov
inc
inc
dec
loopne
inc
pop
mov
xchg
mov
inc
mov
rcr
sahf
push
inc
push
xchg
dec
push
data16
push
add
push
push
mov
dec
add
hlt
outs
imul
test
dec
clc
jb
and
mov
dec
popa
inc
jns
push
push
mov
stos
add
jns
and
and
xor
inc
push
imul
in
inc
push
inc
cmp
addr16
mov
adc
add
pop
inc
cmp
xor
jns
push
jbe
inc
adc
sub
cmp
js
mov
cmp
inc
inc
les
sbb
mov
jae
push
adc
add
jb
adc
push
push
imul
inc
add
pop
dec
inc
dec
push
push
ins
pop
jns
sub
sub
dec
jb
dec
or
test
push
hlt
push
rol
jne
ret
push
xor
imul
push
push
out
cmp
dec
sbb
xchg
call
shl
cdq
test
push
sbb
mov
push
xor
pusha
push
dec
jl
xchg
rol
pop
retf
ins
push
inc
dec
push
and
les
(bad)
pop
pop
push
mov
dec
jae
ret
jae
sar
cs
push
pusha
sahf
jb
add
xor
dec
ss
test
ja
outs
inc
push
mov
dec
inc
push
push
ins
push
ins
or
inc
push
push
bound
inc
push
jmp
ins
bound
inc
push
xor
cmp
and
push
idiv
push
cmp
sbb
mov
inc
xor
jne
dec
inc
pop
add
xchg
jb
xor
mov
xchg
inc
imul
ins
sahf
les
bound
cmp
dec
jl
dec
xor
push
ss
or
sub
cmp
(bad)
xor
add
adc
ins
fsubr
mov
push
xor
outs
add
and
cmp
push
sahf
or
(bad)
push
dec
xchg
imul
mov
jo
add
fisub
or
sub
ja
mov
push
xchg
mov
imul
xor
pop
inc
inc
add
jne
cld
mov
add
jne
cmp
or
pop
dec
call
sub
fidivr
pop
sbb
addr16
mov
cmp
push
popa
pop
outs
push
mov
stos
jae
pop
jo
nop
mov
mov
fisubr
jbe
aam
xchg
repnz
gs
mov
xor
push
cmp
or
ficom
push
inc
push
es
adc
data16
ret
or
push
dec
call
or
outs
js
jne
cmps
test
jo
jnp
js
dec
pusha
imul
sub
push
inc
sub
xor
imul
push
(bad)
jb
inc
retf
fwait
sub
imul
inc
imul
ins
cmp
inc
mov
add
dec
sbb
xor
mov
inc
xor
nop
retf
inc
dec
jge
add
mov
xor
xor
aaa
enter
xchg
test
mov
inc
enter
(bad)
aaa
outs
pop
xor
xor
sbb
jbe
pusha
add
push
pop
push
retf
push
inc
mov
pop
pusha
xchg
dec
nop
push
mov
inc
or
sbb
xchg
add
retf
in
push
push
jp
gs
inc
bnd
push
ficom
mov
mov
leave
sbb
jmp
and
xchg
adc
inc
fdiv
push
mov
inc
xor
jo
cwde
jno
mov
sub
inc
je
outs
jno
je
jno
push
pop
xor
jp
callw
push
inc
pushw
xor
xchg
push
xor
jmp
xor
or
popa
dec
aaa
fisub
jb
dec
addr16
loopne
xor
cli
outs
sub
inc
inc
ins
push
adc
dec
dec
clc
push
adc
lods
fsub
add
into
adc
sub
push
jb
sbb
or
dec
stos
jo
imul
dec
inc
movs
mov
and
movs
xor
pop
mov
pop
outs
jmp
push
dec
out
bound
xor
dec
cmps
arpl
es
push
pop
or
imul
jne
ss
add
cli
ss
or
sub
jle
push
pop
add
arpl
aad
es
mov
xor
push
mov
jno
mov
bound
inc
arpl
sahf
imul
push
push
push
dec
push
pop
jae
scas
xchg
call
ss
dec
xor
rcr
push
fs
push
push
ss
in
pusha
pushf
out
push
nop
inc
add
add
sbb
imul
and
shl
outs
pop
xor
pop
pop
push
and
xor
push
mov
sbb
out
mov
ja
inc
jbe
xchg
push
(bad)
xor
xor
push
xor
push
sbb
sub
enter
sbb
jp
xor
or
push
mov
push
push
pop
imul
mov
xor
dec
stos
test
out
push
mov
mov
dec
inc
or
push
mov
mov
jne
sahf
mov
fs
pop
cmp
xchg
test
imul
xchg
xchg
ss
adc
inc
mov
xor
lock
dec
xor
pusha
xchg
push
pop
cli
xor
add
inc
adc
xor
adc
jo
call
test
cmp
and
xor
jae
inc
sbb
inc
sbb
mov
out
ins
dec
cmps
push
mov
xchg
leave
inc
movs
je
xor
test
push
fs
arpl
shl
outs
mov
call
dec
jno
into
stos
push
adc
jne
push
cli
js
mov
cmp
xor
ja
call
add
data16
dec
aaa
mov
call
xor
shl
xor
xchg
inc
jl
dec
dec
and
dec
mov
xor
adc
add
mov
pop
push
fidiv
js
push
xor
xchg
in
xor
jns
pop
adc
fmul
sbb
or
dec
cmp
sub
dec
and
push
or
push
jbe
fs
jb
dec
test
or
cmp
cmps
loopne
or
retf
aaa
add
xor
push
xor
dec
lock
bound
ss
xor
dec
inc
jb
xor
mov
xchg
pop
adc
push
popa
dec
xor
int
imul
xchg
or
dec
test
xchg
push
dec
add
mov
dec
xor
pusha
push
rcr
or
and
and
outs
add
adc
clc
inc
xchg
jmp
cmp
cmp
dec
jns
xor
lea
push
test
sub
xor
dec
inc
mov
and
inc
loopne
dec
pop
pop
popa
pop
lods
jns
jno
loop
inc
xor
xor
inc
fidiv
inc
ss
inc
or
or
clc
cmp
shl
push
inc
dec
pop
and
push
add
inc
jne
ss
dec
and
add
and
push
xchg
push
jb
inc
jno
xor
fisub
imul
shr
push
dec
(bad)
lds
push
xchg
in
inc
imul
pop
test
sar
jne
inc
push
xor
xor
and
or
push
jae
jbe
sub
movs
fs
mov
xor
fiadd
adc
xor
pop
cs
push
shl
ds
or
sbb
data16
xor
neg
or
jae
addr16
or
sbb
dec
xor
xor
or
jl
or
lock
and
inc
leave
pop
and
into
and
ins
test
or
push
ins
add
popa
ins
je
jle
push
mov
in
push
mov
xor
push
push
add
add
jecxz
cmp
scas
push
xor
jne
les
pop
inc
jp
adc
pop
mov
ja
inc
xor
addr16
out
inc
jne
inc
pop
inc
and
inc
loopne
or
call
xor
cwde
outs
jp
inc
ins
push
push
or
and
rol
push
ins
push
push
fwait
ja
add
mov
add
add
out
js
out
add
and
mov
inc
push
dec
dec
movs
adc
push
lods
adc
xor
dec
xchg
gs
push
sub
outs
push
popa
addr16
mov
clc
push
jne
push
or
push
push
xor
adc
inc
push
lock
push
ins
in
aam
cmp
push
ja
add
push
jne
push
dec
jb
jbe
and
mov
cwde
jo
imul
inc
adc
data16
jb
jle
les
jbe
aaa
push
pushf
dec
fstp
or
pop
dec
ins
xor
lea
gs
loopne
cmp
push
pop
sbb
jle
jno
adc
dec
ret
bound
dec
shl
push
dec
xor
adc
and
and
dec
in
and
loopne
mov
imul
in
pop
push
sbb
mov
push
js
cld
xor
shl
add
(bad)
push
jp
pop
pop
push
lods
xchg
xor
push
sub
outs
jbe
inc
imul
ror
js
test
inc
enter
dec
in
movs
shl
fs
pop
jbe
ins
fsub
mov
push
mov
nop
xchg
inc
or
stos
mov
cli
xor
dec
in
mov
popa
cli
mov
jp
xchg
clc
in
inc
je
inc
jo
inc
add
jno
nop
xor
inc
push
inc
clc
push
mov
dec
push
push
push
xor
jp
aam
jl
xor
and
jo
push
xor
dec
mov
add
clc
cmp
outs
mov
push
dec
inc
ins
pop
call
jno
mov
imul
inc
loope
popa
aad
inc
loop
mov
in
jmp
popa
popa
xor
data16
or
fs
and
and
mov
xor
and
push
or
aaa
int3
jb
outs
ins
and
push
repnz
rol
dec
push
jne
push
retf
add
inc
inc
and
or
push
mov
add
adc
push
int
bound
dec
cs
jecxz
push
jp
bound
outs
enter
outs
out
nop
lock
mov
and
dec
dec
push
nop
hlt
outs
dec
or
aaa
push
(bad)
jp
xchg
mov
pop
out
push
push
inc
or
sub
imul
jle
adc
sbb
pushf
mov
cld
pop
dec
jbe
jb
dec
outs
pop
inc
xor
xor
test
push
mov
push
call
jae
jb
push
dec
push
mov
add
ret
dec
or
cmp
(bad)
jb
xchg
push
pusha
loopne
inc
dec
loop
cwde
stos
loopne
dec
imul
icebp
sbb
xor
xor
mov
and
lea
retf
popa
push
jno
xchg
push
or
push
push
cmp
inc
ss
mov
call
jb
retf
clc
int3
test
js
mov
ins
dec
add
and
or
dec
cmp
push
dec
leave
into
retf
addr16
push
fs
jmp
push
nop
dec
fs
inc
and
je
inc
inc
jbe
ds
adc
je
inc
movs
and
inc
ins
mov
push
les
or
jne
inc
push
push
push
xor
push
and
add
les
mov
adc
pusha
push
jae
arpl
push
push
jb
bound
test
popa
push
push
pop
or
and
xchg
and
scas
inc
dec
ja
mov
xor
cmp
or
outs
xor
push
mov
pusha
pop
adc
bound
test
pop
pop
inc
push
js
inc
popa
sub
or
cmp
mov
sub
xor
ret
fwait
cmp
gs
pop
cmp
mov
push
dec
sbb
add
sbb
ins
mov
push
ins
arpl
dec
push
and
xchg
push
xchg
xor
and
push
inc
mov
xchg
shl
push
jl
rol
xchg
aaa
pop
xor
sub
push
jae
dec
add
int
outs
inc
data16
dec
mov
inc
mov
pop
shl
bound
jno
bound
push
xchg
shr
data16
fisub
loopne
pop
jne
and
stos
mov
ins
outs
cld
inc
mov
inc
int3
ds
push
push
sbb
dec
xor
or
push
call
adc
dec
sub
sbb
mov
push
sub
mov
(bad)
dec
stos
xchg
inc
lods
push
push
out
loopne
imul
rol
push
ja
and
push
and
xor
mov
sbb
jp
cmp
push
sub
nop
mov
jle
dec
cmp
pop
pop
ins
ss
jg
test
sub
push
inc
jo
push
outs
inc
jo
xor
push
cmps
test
xor
inc
pop
push
or
test
adc
jo
mov
push
jne
(bad)
arpl
adc
xor
pop
add
xor
ds
ss
jne
ss
fisubr
scas
dec
dec
arpl
or
imul
xchg
sahf
jo
rcr
and
(bad)
sbb
or
push
inc
test
mov
ds
xor
bound
add
and
mov
dec
jle
mov
add
push
inc
mov
test
imul
push
fidiv
pushf
cmp
cs
fsubr
push
mov
imul
push
dec
je
adc
je
popa
inc
adc
out
pop
inc
outs
and
inc
sub
adc
xchg
outs
sahf
xor
ins
pop
inc
and
push
in
movs
push
rcr
xor
ret
mov
add
sub
es
dec
out
cmps
and
dec
xor
inc
and
into
xchg
jae
xlat
adc
jmp
in
or
or
inc
pop
mov
push
mov
xchg
push
inc
xor
movs
fdivr
push
jp
sub
sub
cmp
add
js
dec
cmp
or
push
mov
js
imul
push
xchg
xchg
dec
int3
xor
xchg
sahf
inc
mov
test
pop
gs
dec
dec
add
xchg
ret
mov
jp
push
sub
sbb
xchg
stos
call
xor
mov
call
stos
inc
push
dec
ins
lds
pop
push
shl
imul
fbstp
push
outs
push
inc
inc
imul
cmp
and
jbe
dec
pop
push
push
fs
imul
(bad)
adc
lea
lods
adc
rcr
inc
ins
shr
xor
inc
lods
loop
mov
xchg
test
push
jne
cmc
and
je
dec
jbe
dec
xor
imul
push
dec
push
xor
std
sub
xor
je
fld
es
inc
arpl
adc
push
push
add
test
inc
rcr
aaa
jp
push
sbb
inc
dec
mov
bound
pop
les
adc
arpl
sbb
dec
loop
push
xor
xor
int3
push
push
inc
dec
push
pop
and
push
pop
push
imul
xor
cdq
push
dec
push
clc
push
add
inc
ins
cmp
mov
inc
jp
sbb
push
push
pop
push
sub
fdivr
mov
add
xor
sub
cld
add
ja
push
push
jns
sub
xchg
mov
push
or
xor
push
loopne
pop
cld
popa
fimul
gs
push
inc
and
mov
xor
mov
inc
mov
push
outs
jno
cmp
retf
pushf
shl
push
xor
pusha
jmp
shl
gs
sub
push
push
xor
pop
aaa
or
inc
inc
push
xor
test
jbe
inc
dec
in
sub
push
dec
push
push
xor
les
mov
push
push
daa
mov
cmp
loope
push
adc
or
or
imul
test
arpl
sbb
sub
xor
test
xchg
scas
add
push
rcl
mov
or
dec
pop
add
mov
fdiv
cs
fcom
jns
outs
push
add
xor
ds
retf
adc
jb
mov
adc
inc
jns
or
jb
or
in
push
jae
cmc
sub
cmp
xor
push
add
jne
jo
push
push
mov
xor
data16
fs
shl
inc
ss
fadd
in
and
outs
stos
movs
addr16
mov
ja
cmp
xor
gs
ror
je
test
dec
push
push
dec
jne
push
ja
je
sar
mov
push
jbe
sub
sub
add
lock
push
aaa
push
dec
xor
xor
adc
xor
xor
clc
or
xchg
push
jbe
xor
dec
ja
add
out
push
loopne
dec
xor
(bad)
or
xor
rcl
pop
dec
inc
xchg
push
ss
push
xchg
ss
fcomp
mov
push
inc
xor
push
mov
push
sar
adc
sub
mov
js
add
test
inc
xor
push
cdq
push
(bad)
imul
sub
dec
fdiv
or
rol
mov
dec
push
and
data16
movs
cmps
out
inc
adc
loop
(bad)
xor
ins
imul
sbb
and
pop
outs
xor
popa
jp
push
add
push
cmps
fiadd
or
test
xor
pop
or
mov
scas
sub
and
mov
jno
pop
popa
xchg
jmp
adc
imul
sbb
or
ins
js
dec
cmp
addr16
jns
ror
pop
inc
pop
mov
push
inc
mov
ja
jb
jl
push
push
add
sbb
(bad)
test
dec
and
sub
jo
retf
adc
rcl
pop
rcr
es
dec
inc
imul
add
jb
dec
jb
jae
dec
dec
lock
adc
xchg
popa
mov
jne
dec
aaa
in
rol
xor
cmps
pop
add
jo
mov
je
dec
outs
add
movs
sub
dec
scas
push
push
add
push
fimul
sub
xchg
in
pop
mov
int3
and
dec
mov
inc
or
addr16
push
pusha
cmps
shl
push
and
test
retf
shl
dec
push
inc
push
imul
push
xor
outs
outs
dec
inc
je
sbb
ja
jp
bound
jne
jle
dec
adc
jne
dec
push
es
aaa
enter
outs
add
sbb
or
xor
outs
js
dec
or
and
inc
ds
push
popa
pop
push
ss
inc
inc
call
mov
add
test
and
sub
ja
stos
inc
test
cmp
ja
pop
pop
pop
xchg
push
arpl
xor
nop
and
sub
xchg
push
ss
ins
and
lods
outs
outs
jb
ins
mov
cmp
xor
xor
push
mov
ins
jb
push
test
jae
push
jo
imul
xchg
movs
inc
cmp
dec
cmp
pusha
adc
jle
cmp
sub
mov
push
mov
and
or
mov
test
xchg
push
mov
inc
loop
cmp
xor
add
jbe
inc
lock
push
xchg
stos
dec
push
jne
inc
hlt
or
fdiv
jno
push
test
and
outs
shr
push
outs
cmp
sub
and
push
call
pusha
inc
or
(bad)
test
xor
popa
push
dec
push
or
sbb
pop
cmp
push
push
loopne
dec
mov
push
sbb
inc
pushf
mov
lea
push
scas
jne
push
cdq
inc
test
loop
xlat
loopne
or
fsubr
mov
inc
cld
int3
pop
push
idiv
ins
inc
xor
mov
push
push
jo
outs
push
or
scas
fadd
(bad)
les
fisub
in
movs
cmp
jb
jne
xchg
data16
in
cs
pop
pop
jne
push
dec
outs
sahf
adc
call
adc
jbe
fwait
add
and
and
push
out
test
xor
aam
fadd
dec
and
cld
cmp
adc
les
push
nop
jmp
retf
ss
fsub
call
sbb
je
dec
jo
add
enter
or
inc
xor
dec
xchg
pop
pop
inc
pop
fsubrp
add
add
jo
loop
jae
or
inc
fdiv
imul
or
cmps
gs
xor
dec
ror
pop
push
loopne
pop
ss
jp
push
dec
lods
push
sub
jo
add
or
sbb
mov
ret
fstp
dec
pop
jne
mov
cmp
dec
mov
jns
jne
xchg
mov
xor
xor
dec
call
adc
push
jbe
out
sbb
inc
pop
jo
sbb
jae
outs
gs
xchg
lock
sub
dec
dec
ret
arpl
test
push
add
and
add
je
dec
push
lods
sbb
sar
jbe
and
cs
mov
and
jno
dec
outs
fdiv
xor
dec
ror
mov
mov
fs
gs
cld
jb
xor
cmp
jp
out
push
aad
ins
fidivr
mov
and
ss
push
mov
sbb
arpl
push
or
ins
jp
(bad)
outs
inc
inc
push
test
enter
mov
movs
int3
xchg
mov
pop
jo
or
aaa
and
push
adc
mov
inc
dec
ss
movs
gs
xor
add
xchg
push
or
xchg
test
or
test
and
dec
imul
addr16
gs
mov
mov
clc
pop
inc
out
in
jns
ja
call
pop
pop
add
loopne
push
test
and
ror
test
dec
jp
loope
push
and
inc
inc
mov
enter
bound
shl
rol
sub
jne
push
xchg
dec
inc
retf
cmp
xor
add
dec
push
or
push
aaa
push
sar
aaa
cwde
pop
jno
inc
bound
aaa
jb
cmc
sbb
xor
inc
inc
add
sub
stos
mov
cmp
dec
mov
dec
and
add
push
sbb
pop
clc
cmp
jae
push
fs
fisub
xchg
dec
dec
mov
add
mov
mov
inc
push
cmp
je
xor
je
mov
adc
or
xchg
or
mov
mov
add
push
call
stos
test
ret
lods
add
and
shl
jbe
xor
fs
js
push
stos
mov
rol
sbb
inc
xor
outs
push
inc
stos
ficom
sbb
xchg
pop
sbb
sbb
push
ret
ret
and
ins
jp
(bad)
and
push
fs
dec
or
push
(bad)
push
fcmovb
or
ins
loope
and
dec
push
push
push
xor
mov
outs
dec
cmps
push
je
repnz
in
or
jns
push
movs
jae
ins
scas
not
push
test
addr16
xor
inc
jp
xor
sub
pop
and
xor
sbb
mov
xor
test
bound
ss
mov
or
call
repnz
mov
or
dec
cs
popa
jb
mov
sub
add
dec
(bad)
cmps
ins
rol
fsubr
lods
push
adc
push
inc
test
bound
cmps
movs
les
js
retf
or
outs
push
inc
loopne
sbb
adc
arpl
push
inc
pop
lods
mov
arpl
inc
imul
push
test
call
popf
and
push
pop
push
xor
les
sub
and
stos
ja
and
mov
xor
ja
test
dec
inc
or
pop
pusha
xchg
and
scas
fsub
push
clc
ret
cmp
push
addr16
add
ins
push
pop
push
aad
mov
dec
or
imul
mov
js
sub
xor
push
add
xor
popa
bound
sub
push
or
ss
inc
or
push
jg
xor
into
xor
dec
pop
push
dec
push
call
test
ins
and
jae
and
push
hlt
push
mov
int3
or
or
xor
mov
add
ret
ins
cmp
push
mov
sub
addr16
push
or
ins
pop
or
(bad)
dec
dec
mov
dec
ret
push
rol
xor
adc
adc
mov
pop
push
cwde
xchg
push
cwde
inc
inc
aaa
sbb
mov
scas
or
(bad)
cmp
outs
xor
inc
cmp
pop
inc
xor
or
push
dec
aam
cld
sbb
pop
je
dec
outs
jno
dec
jae
sub
push
nop
xor
repz
stos
adc
js
ja
dec
xor
jb
shl
push
jo
xor
ret
inc
shr
xor
movs
data16
js
jo
cmps
push
pop
push
dec
push
push
and
inc
loopne
test
cmps
rcl
call
je
and
stos
xor
jae
jne
mov
inc
push
or
inc
or
clc
push
nop
cmp
fs
xor
inc
loop
inc
sub
sbb
inc
push
mov
imul
dec
mov
scas
dec
push
jno
inc
dec
dec
sub
cli
jb
fs
push
push
push
add
and
push
ret
sub
and
xor
jns
cwde
sar
add
inc
push
dec
push
push
pusha
push
mov
dec
mov
mov
call
push
or
xchg
inc
and
jle
and
jo
bound
jae
ins
dec
push
jp
xor
test
push
sub
xchg
or
popa
or
xor
mov
dec
cmp
pop
jbe
push
push
out
rol
retf
fdiv
pop
lds
clc
push
rcl
inc
jp
push
push
dec
popa
push
mov
je
cwde
inc
cs
ins
call
push
cdq
mov
stos
mov
je
mov
fs
outs
mov
xchg
xchg
mov
popa
test
push
xchg
mov
arpl
pop
bound
or
push
or
mov
inc
inc
jo
dec
je
jno
jns
jne
inc
dec
dec
sbb
pop
sub
pushf
jp
dec
data16
shl
inc
dec
cmp
pop
popa
test
jno
ins
dec
ja
xor
loopne
ins
dec
jno
xchg
or
fisub
cs
xor
pusha
cld
push
jo
cmp
pop
pop
xor
push
pop
adc
fs
or
lds
call
add
push
js
inc
inc
push
mov
rcl
or
outs
add
imul
xor
push
inc
and
data16
inc
pop
jne
pop
sub
mov
je
ins
push
les
add
push
push
outs
push
push
loop
in
pop
inc
inc
push
cmp
dec
mov
mov
dec
inc
adc
push
inc
es
push
call
test
mov
push
test
dec
add
pop
mov
sub
xor
inc
lock
lock
dec
gs
push
movs
push
xor
add
popa
adc
jmp
xor
push
adc
bound
inc
ss
jne
xchg
sbb
and
adc
jae
pop
dec
sbb
push
xor
xor
xor
jb
inc
inc
nop
inc
ins
push
dec
add
inc
xor
push
mov
push
aam
sub
mov
mov
cwde
mov
inc
dec
jne
dec
xchg
jl
dec
jb
push
mov
inc
fwait
mov
dec
jp
push
mov
push
dec
xor
inc
dec
xor
es
outs
fsub
xor
inc
mov
outs
dec
dec
cmp
or
pop
mov
xor
sub
sub
cmp
push
js
push
mov
dec
mov
adc
cmp
dec
sub
addr16
aam
loopne
shl
inc
ins
jbe
push
sbb
push
jo
sub
mov
ins
cli
jle
js
lods
sub
inc
dec
ja
push
jns
mov
mov
popa
xor
mov
jl
sbb
or
js
jp
push
cmps
fs
mov
dec
xchg
inc
or
ret
js
movs
xor
push
add
mov
pop
pop
jno
inc
gs
push
dec
outs
pop
and
jo
xor
push
cmp
sub
dec
xchg
or
mov
outs
dec
pusha
enter
dec
js
ror
dec
aaa
sub
pop
cmp
outs
je
jp
dec
push
and
mov
inc
ds
or
push
xor
pop
cmp
jo
cmp
das
clc
es
fs
cs
jae
push
movs
aas
lock
jno
push
arpl
push
pop
pop
cmps
dec
and
(bad)
and
add
dec
dec
jmp
cmps
popa
dec
sub
outs
outs
cmps
add
push
push
ret
das
ror
dec
push
dec
ss
dec
arpl
push
(bad)
aad
mov
cmps
push
and
sub
mov
popa
and
dec
pushf
mov
push
jb
mov
and
push
push
mov
jno
xor
lea
dec
test
ss
cmp
icebp
xchg
jb
dec
jbe
jo
shr
or
imul
sub
pop
jmp
push
xor
push
jns
push
sub
inc
ins
dec
sar
add
and
cmp
push
add
fs
ss
xor
sub
bound
movs
or
imul
xchg
js
or
dec
gs
push
loope
icebp
push
bound
jp
test
mov
aas
ficom
dec
data16
fs
retf
dec
inc
ins
push
cmp
addr16
push
in
fs
or
movs
mov
ins
ja
jne
test
outs
inc
aaa
sbb
xor
ss
pop
push
arpl
cmps
js
stos
adc
cmp
enter
sub
xchg
adc
imul
fcom
test
inc
mov
call
xor
push
loop
ins
inc
push
arpl
es
out
dec
js
je
adc
xor
inc
and
les
dec
xor
ss
les
xchg
push
xor
mov
add
inc
push
mov
add
push
inc
mov
mov
pop
or
ret
dec
xchg
cwde
ret
imul
xor
call
jns
shl
popf
xchg
sbb
xor
or
push
sbb
cmps
add
mov
xor
push
add
jb
xor
cmps
(bad)
add
outs
jl
fs
mov
les
js
shl
jns
jmp
and
push
push
sub
dec
cmp
add
popa
mov
je
inc
xor
mov
aam
jbe
test
mov
xor
push
(bad)
das
mov
arpl
inc
ins
inc
xor
ins
in
adc
adc
in
dec
arpl
(bad)
(bad)
dec
cmp
dec
mov
sbb
and
jecxz
add
xor
popa
outs
inc
xor
jbe
or
dec
(bad)
dec
ins
dec
bound
add
push
inc
xor
push
dec
push
jo
retf
add
lods
add
push
cmp
push
dec
cli
popa
ja
mov
and
sar
push
fs
into
mov
push
add
scas
push
mov
xor
dec
push
mov
ins
xor
mov
scas
push
jo
gs
inc
xor
je
dec
lods
add
xor
xor
push
push
or
retf
cmps
mov
mov
jno
push
push
mov
inc
rcr
fiadd
fidiv
push
cmps
cs
shl
js
push
xor
ret
mov
push
sub
dec
xchg
test
push
outs
dec
dec
jmp
imul
xor
dec
inc
dec
and
inc
inc
mov
ds
jp
add
xor
pop
xor
cmp
dec
call
ins
inc
xor
push
outs
dec
or
loopne
dec
mov
repnz
xor
movs
xor
in
fs
push
add
ja
les
rol
test
outs
xor
inc
jae
dec
movs
and
js
mov
dec
sub
sbb
ins
(bad)
retf
fnstenv
in
cs
jbe
call
inc
dec
ret
test
push
sub
mov
inc
inc
int3
sub
mov
inc
(bad)
cmp
xor
push
pop
push
and
scas
pop
nop
push
inc
and
ror
enter
push
ins
js
mov
add
push
push
js
pop
adc
outs
inc
js
xor
jbe
dec
je
push
add
xor
inc
pop
test
jae
sbb
jbe
enter
mov
leave
inc
mov
loope
rol
cli
push
xchg
cmp
push
mov
inc
inc
push
push
push
test
movs
and
ret
inc
inc
ss
and
adc
dec
pop
or
push
jno
sysenter
pusha
adc
xor
bound
sub
mov
push
cmp
test
push
inc
inc
int3
dec
push
inc
mov
inc
sub
outs
push
imul
push
shr
dec
dec
xor
and
jns
les
ins
sub
adc
or
jb
sub
inc
rol
sub
aam
xor
dec
pop
push
push
lahf
xor
movs
in
jne
push
mov
inc
or
xor
cmps
fdivp
push
dec
xor
xor
dec
inc
dec
cmp
imul
or
add
es
js
and
stos
add
fiadd
fadd
or
aam
aad
xchg
push
dec
cmp
or
aam
imul
jecxz
dec
pop
push
push
push
fs
xlat
cmps
and
ret
(bad)
cmp
jmp
outs
push
bound
push
je
sbb
pop
jl
push
mov
xor
dec
popa
mov
les
(bad)
or
jp
add
addr16
or
sub
mov
dec
push
jp
ret
inc
pop
adc
ja
shl
xor
or
pop
ss
push
add
dec
dec
clc
inc
shl
or
inc
scas
fwait
fs
js
inc
push
dec
dec
loopne
cmp
inc
inc
mov
gs
mov
fdiv
ds
push
scas
adc
enter
xor
call
mov
outs
ja
jmp
popa
inc
ins
xor
mov
ins
ja
ins
test
cmc
sub
push
inc
cmp
int3
inc
pop
xor
mov
ja
lods
ss
lea
mov
jle
dec
or
outs
push
adc
imul
inc
push
xor
fnstcw
dec
retf
dec
or
imul
mov
lods
pusha
and
jmp
test
test
dec
mov
jp
mov
ins
push
mov
xor
fimul
or
enter
adc
popa
dec
push
ja
push
pusha
hlt
gs
sbb
push
adc
inc
je
mov
outs
jb
jns
push
sub
aam
jge
pop
scas
outs
dec
arpl
out
jbe
fsub
ss
jno
jno
or
or
popa
cmp
inc
ret
(bad)
ins
bound
cs
xor
aaa
imul
xor
push
sbb
pop
int
test
push
pushf
sub
pop
imul
add
aam
gs
add
fdiv
enter
push
cmp
jne
xchg
mov
dec
pop
dec
lock
stos
sub
xor
inc
dec
pop
dec
xchg
shr
jo
xchg
outs
aam
ins
push
inc
imul
outs
pop
ins
mov
push
jno
push
mov
test
mov
mov
or
dec
lods
inc
stos
mov
stos
push
dec
jbe
push
mov
pusha
xor
and
es
jle
pop
outs
push
sub
xor
loopne
sub
push
push
mov
inc
add
add
fs
retf
mov
xor
push
or
and
es
mov
call
dec
add
popa
dec
dec
inc
cmp
jbe
adc
(bad)
fdiv
push
jns
adc
rol
xor
retf
arpl
add
in
mov
push
jp
push
mov
mov
ins
and
xor
mov
jo
sbb
mov
jb
pop
je
dec
and
pop
sbb
cwde
dec
push
xchg
je
loop
test
test
inc
or
je
cmps
adc
sub
adc
mov
push
or
es
dec
xor
or
fst
bound
mov
push
adc
adc
ror
scas
mov
dec
test
push
loopne
movs
lods
call
test
idiv
aaa
mov
dec
jns
pop
inc
ss
ins
imul
xchg
xor
push
push
cmp
and
add
xor
inc
adc
inc
aaa
inc
aaa
shl
imul
dec
pop
cwde
push
je
imul
or
cmp
mov
ja
jp
sub
cld
and
aaa
js
inc
push
add
fs
push
jo
adc
fidiv
ins
gs
ds
xchg
add
imul
mov
ss
in
arpl
push
cmps
movs
aaa
mov
push
push
sbb
arpl
add
push
ja
sbb
dec
dec
stos
or
ja
dec
and
push
add
and
xor
xchg
add
cmp
dec
add
inc
inc
inc
lock
(bad)
inc
inc
repnz
inc
dec
and
fs
push
xchg
test
or
inc
dec
sub
or
xor
(bad)
clc
sahf
xor
jns
jae
data16
sub
mov
dec
pop
mov
push
jne
jne
aaa
imul
les
mov
(bad)
aaa
je
push
jbe
push
mov
jp
jbe
dec
inc
mov
xor
push
imul
(bad)
push
dec
inc
add
push
mov
xchg
adc
sub
test
push
or
loop
pop
sbb
outs
jmp
push
xor
mov
(bad)
cmp
or
xor
fs
outs
popf
xchg
call
outs
fst
or
ins
outs
add
sbb
cs
adc
push
data16
movs
add
inc
push
jb
add
add
mov
xchg
dec
sbb
push
(bad)
sbb
pop
inc
dec
or
push
inc
loopne
push
inc
sbb
add
or
sub
fdivr
jbe
push
push
fsub
push
je
scas
jns
dec
jmp
xor
ins
xor
ss
jp
inc
dec
or
in
loopne
inc
rol
dec
js
mov
sbb
inc
dec
add
dec
dec
sub
push
aad
dec
dec
arpl
inc
or
push
xchg
xor
test
gs
data16
fmulp
dec
add
dec
stos
jns
dec
imul
call
jbe
gs
pop
and
jbe
pop
in
xor
pop
out
dec
push
xor
sub
jg
mov
imul
add
add
jb
clc
xor
add
push
hlt
retf
dec
fstp
push
inc
bound
xabort
xor
das
push
cmp
jno
xor
sub
xor
dec
out
mov
mov
inc
mov
fidiv
xchg
inc
cmps
fcom
cmp
or
ja
outs
pop
mov
mov
inc
ins
sbb
adc
or
std
aaa
cmp
inc
jp
sub
pop
mov
cld
arpl
xor
fdivr
dec
mov
movs
or
xor
xchg
cmp
inc
jl
sbb
bound
sub
fs
movs
or
pop
ins
adc
xor
jo
mov
cwde
adc
dec
inc
add
call
dec
enter
push
mov
jbe
int3
ror
hlt
pop
sub
popa
fild
jns
push
imul
ja
mov
in
push
pop
push
dec
dec
or
div
sbb
xor
push
sbb
xchg
mov
push
push
push
jl
xchg
dec
xor
dec
dec
jo
push
jbe
inc
mov
test
xchg
inc
inc
dec
sbb
stos
push
pop
mov
sahf
add
imul
push
pop
ins
push
je
jo
mov
mov
dec
xor
dec
add
pop
fmul
jo
loopne
push
push
dec
shr
imul
push
add
push
test
push
xchg
or
pusha
ss
int3
push
ins
aam
inc
pusha
ins
inc
jne
arpl
mov
jno
xchg
and
xor
add
jae
out
imul
xor
add
push
xor
dec
test
inc
jae
call
xor
xchg
push
bnd
dec
xor
lea
arpl
test
inc
pushf
ss
inc
push
imul
dec
fdivr
jo
mov
sbb
inc
pop
data16
xor
sbb
mov
sahf
repnz
je
ss
mov
ror
js
js
call
imul
xor
push
cmp
jae
add
xor
fs
(bad)
cld
push
mov
fs
jne
je
pop
mov
xchg
push
outs
into
dec
arpl
pop
xor
push
xchg
mov
push
add
pop
adc
mov
sbb
jbe
ss
mov
sbb
pusha
lds
cmp
xor
test
es
adc
js
lods
cwde
movs
test
adc
sbb
push
dec
aaa
xor
aam
dec
pop
fisub
and
push
push
je
and
pop
push
mov
xor
ins
cmp
aaa
jns
adc
pusha
arpl
mov
and
ror
bound
mov
pop
push
push
dec
cmp
js
dec
push
scas
push
add
or
and
pop
rol
dec
fs
add
bound
push
xchg
cwde
clc
inc
xor
arpl
push
push
popf
test
adc
test
call
xor
dec
xchg
hlt
into
mov
sub
adc
imul
sub
dec
jbe
xor
lods
inc
xchg
xor
ja
jbe
inc
inc
push
xchg
mov
push
add
push
stos
dec
jb
cmp
xchg
and
sbb
add
push
push
ins
jmp
dec
jo
aaa
cmp
adc
jns
jbe
test
cmp
and
xchg
mov
push
dec
ss
bound
jo
add
retf
aam
pop
push
push
inc
jbe
jno
xor
xor
add
sub
jb
xor
js
rcr
outs
aaa
xor
dec
push
xor
mov
hlt
push
inc
addr16
mov
pusha
jmp
and
adc
or
fwait
adc
cmp
and
xor
sbb
jb
push
aam
add
sub
gs
push
hlt
popa
dec
dec
loopne
xor
ds
(bad)
push
inc
jb
sub
mov
mov
(bad)
push
lods
inc
outs
or
push
inc
xchg
push
les
xchg
retf
rcl
es
add
or
test
push
sub
outs
cs
or
mov
test
outs
arpl
ins
inc
xchg
call
push
jno
dec
push
stos
jns
or
xchg
inc
imul
inc
fs
push
sbb
outs
pop
scas
xor
sbb
int
inc
jns
popa
xor
or
or
cmp
inc
push
mov
push
push
je
dec
dec
mov
mov
push
xor
bound
dec
outs
gs
ret
je
dec
scas
jp
shl
push
int3
mov
push
push
push
xor
jbe
movs
inc
js
inc
jbe
popa
pop
jns
push
xor
inc
xchg
adc
aaa
or
test
or
sar
es
or
push
ins
push
arpl
mov
jns
mov
retf
and
cld
dec
dec
mov
mov
inc
jno
or
push
or
dec
dec
jb
imul
xchg
inc
rol
cmp
push
inc
enter
sub
rcr
dec
cmp
arpl
call
test
test
jle
out
hlt
add
add
fsub
xor
mov
push
xchg
ins
imul
jle
fdiv
cmps
popa
jp
inc
popa
pop
push
fld
xor
push
shr
jl
sub
inc
or
push
ds
or
dec
ret
loope
je
jmp
inc
scas
jbe
inc
mov
mov
add
ins
ss
sub
push
mov
aaa
out
gs
aam
rol
cli
dec
dec
or
xor
jo
fcmovu
mov
inc
aaa
(bad)
or
push
inc
inc
dec
nop
inc
add
pop
push
xor
dec
sbb
jae
mov
adc
hlt
jo
jae
pop
jp
popf
xchg
push
add
pop
loope
stos
jecxz
dec
aaa
outs
outs
mov
rcl
cli
push
push
sbb
aam
movs
push
push
inc
push
outs
call
dec
dec
push
call
lock
mov
je
xchg
sub
jl
lods
inc
ins
jb
ins
dec
js
push
ret
dec
add
dec
gs
dec
inc
popa
push
ins
inc
mov
mov
dec
stos
push
add
sub
mov
dec
pop
and
cmp
dec
dec
xor
mov
cld
outs
push
xor
push
bound
inc
add
inc
push
push
adc
mov
xor
jo
sub
je
xor
push
or
ins
dec
inc
leave
and
cld
shr
dec
dec
and
dec
popa
mov
dec
inc
push
or
or
les
test
mov
xor
mov
mov
push
popa
aaa
cmp
(bad)
inc
jne
or
lock
cmp
outs
bound
adc
jns
dec
adc
mov
xor
add
push
and
push
jl
xor
inc
ins
jp
je
ins
scas
jae
jl
add
xchg
outs
aam
call
push
xor
push
inc
push
sbb
ficomp
mov
xor
outs
push
out
mov
mov
push
inc
dec
retf
xor
dec
test
mov
mov
xor
mov
jle
push
imul
sbb
arpl
sub
mov
sub
dec
jne
jo
or
cwde
(bad)
push
mov
mov
ja
ss
gs
push
add
mov
xchg
or
jb
push
arpl
push
shr
bound
push
add
inc
inc
jno
and
mov
adc
or
inc
pop
imul
sbb
ror
and
xor
movs
mov
std
ss
jb
outs
push
aaa
jo
movs
dec
push
and
mov
dec
stos
push
ins
jae
data16
jbe
dec
ror
cmp
fadd
or
xchg
dec
xor
mov
sbb
ins
jp
mov
cmps
xchg
ins
inc
ror
stos
pusha
fadd
inc
push
outs
dec
mov
jo
jno
dec
cmp
add
jb
push
inc
push
jmp
inc
bound
xchg
xor
bound
pop
sub
jns
call
jae
xchg
mov
sbb
loop
dec
xchg
xchg
or
and
ja
sub
xor
dec
inc
xor
mov
mov
mov
bound
dec
pop
xor
xor
mov
dec
inc
jo
pop
jne
bound
push
xor
jp
dec
xor
loope
push
add
push
ret
and
add
push
mov
out
popa
inc
gs
push
push
adc
add
inc
fs
hlt
push
cs
ds
dec
pop
adc
dec
ins
je
dec
mov
test
test
inc
push
shl
and
mov
xor
xor
outs
and
add
xor
mov
dec
jp
mov
sub
je
or
data16
je
outs
jb
mov
push
adc
and
aam
push
bound
push
loop
xor
(bad)
xor
add
cs
xor
push
inc
add
xchg
cs
aaa
imul
push
and
sbb
aam
ins
or
xor
push
int
jmp
sbb
push
push
jbe
xor
rcl
retf
ins
jb
push
push
aaa
arpl
jo
test
add
cmp
pop
add
ins
cmp
ins
push
mov
jae
rcl
ja
fadd
mov
sbb
inc
push
dec
outs
dec
jb
xor
nop
add
enter
outs
(bad)
aam
adc
inc
dec
sbb
add
xor
sub
push
int3
xor
xor
add
ins
pop
push
bound
xor
or
add
nop
mov
dec
dec
je
jb
out
or
popa
ss
jl
cmps
or
xor
push
xor
jns
adc
mov
pop
xor
sbb
xchg
(bad)
into
mov
xor
jo
jb
jb
add
push
push
xor
cmp
bound
mov
mov
je
dec
mov
mov
arpl
dec
sbb
push
mov
inc
rcl
ds
inc
js
mov
into
out
and
adc
outs
pusha
pop
xor
push
dec
ja
jne
xor
sbb
enter
jb
pop
nop
ret
cmps
push
xchg
inc
xchg
mov
dec
jno
mov
inc
cld
jns
fs
sub
xor
test
push
bound
cld
imul
add
retf
call
pop
pop
push
sub
push
push
xor
or
mov
push
stos
clc
aaa
out
outs
dec
popa
dec
push
pop
loopne
jecxz
popa
push
push
(bad)
xor
inc
and
stos
cs
xor
jno
loopne
rcr
sbb
lods
js
aaa
cli
xor
fild
in
ja
add
add
adc
test
xor
xor
xor
sub
cmp
rol
push
pop
ss
add
hlt
fsubrp
pop
sbb
shl
pushf
jne
push
test
loope
inc
dec
push
out
jns
pop
sbb
hlt
xor
inc
aam
test
fmul
retf
add
inc
dec
aaa
push
xor
out
inc
pop
push
add
cld
lods
push
jo
data16
outs
adc
bound
inc
je
add
mov
cli
test
imul
fidiv
push
or
and
ret
arpl
(bad)
add
pop
inc
inc
or
mov
push
es
pushf
movs
fadd
mov
xchg
push
xor
push
mov
inc
je
int3
cmp
popa
dec
aaa
jns
je
sub
adc
ins
adc
adc
inc
xor
mov
sbb
pop
mov
xor
pop
call
and
add
xchg
shl
sub
jl
dec
inc
jmp
mov
(bad)
push
addr16
inc
shl
test
xchg
leave
(bad)
dec
push
inc
dec
cmp
cmp
fs
gs
push
adc
outs
adc
mov
cs
ss
inc
mov
push
gs
fcom
fadd
js
jns
ss
add
and
mov
or
bound
ret
aad
cwde
js
outs
sub
dec
sbb
imul
push
inc
aaa
add
int3
mov
or
dec
push
pop
inc
outs
jae
outs
movs
addr16
rol
out
pop
(bad)
(bad)
jae
sub
cmp
movs
push
mov
stos
stos
into
dec
push
cmp
mov
out
arpl
dec
dec
(bad)
sahf
inc
or
sub
adc
sbb
outs
xor
add
xchg
clc
add
push
add
push
shr
mov
push
gs
inc
stos
push
test
jmp
mov
xor
fs
or
sbb
sub
pop
jae
xchg
adc
or
push
xor
rol
xor
push
cmp
xor
sub
inc
adc
dec
or
dec
inc
push
inc
in
xor
js
add
jbe
loopne
in
clc
jo
inc
and
ret
push
push
pusha
sub
sub
jbe
dec
test
fwait
jbe
jae
addr16
inc
pop
test
arpl
mov
adc
adc
dec
imul
sub
push
test
imul
push
jb
dec
aam
jbe
mov
rcl
and
and
push
fimul
mov
or
pop
inc
lods
and
xor
dec
mov
dec
pop
and
jae
push
push
fs
jns
inc
pop
cmps
and
sub
ss
sub
jno
jb
xchg
(bad)
aad
ficomp
outs
xchg
inc
retf
xor
push
mov
ja
xor
mov
call
test
and
popa
mov
cmp
add
adc
push
or
sahf
dec
jne
pop
cmp
mov
cmp
inc
adc
dec
pop
push
ret
stos
and
outs
pop
inc
inc
push
dec
aaa
imul
fwait
cwde
dec
jno
gs
movs
push
dec
pop
pusha
aam
inc
outs
cs
dec
ja
push
push
cwde
xchg
jl
bound
mov
lods
inc
movs
jle
mov
inc
push
dec
popa
push
adc
cmps
ror
push
push
jle
add
xor
inc
xor
ss
xor
inc
push
lahf
nop
mov
push
sbb
jp
dec
push
test
sahf
sahf
ins
mov
xor
xor
outs
call
push
mov
push
adc
sar
mov
xor
xchg
aam
ins
loop
pop
xchg
adc
adc
inc
jp
push
pop
dec
pushf
dec
pop
xor
pop
cmp
fwait
adc
xor
jbe
inc
push
xor
and
ds
pushf
gs
xor
add
jb
mov
popa
jl
mov
mov
mov
push
xor
loopne
push
or
adc
movs
call
xchg
jb
fs
cwde
dec
rcr
cs
dec
outs
add
repnz
arpl
ins
mov
stos
dec
fdiv
in
jo
pop
dec
dec
test
test
sbb
fs
rol
adc
retf
(bad)
out
mov
xchg
jp
xor
outs
sub
and
push
inc
je
fmul
dec
xor
jbe
ins
dec
lods
test
dec
test
inc
xor
sbb
movs
and
push
and
inc
imul
call
cmp
jns
dec
push
push
outs
inc
(bad)
shl
cmp
push
or
or
dec
mov
or
dec
ss
add
je
jle
or
ja
mov
jno
dec
in
rcl
sub
push
jp
inc
fdiv
add
cmp
sub
push
sub
call
je
dec
je
push
jp
popa
xchg
cmps
mov
dec
push
jb
outs
js
adc
pop
and
xor
cwde
push
pusha
data16
push
add
xor
push
jmp
ss
inc
imul
or
inc
js
sbb
inc
and
inc
xor
fs
cwde
dec
fs
push
jo
jo
pop
cdq
push
aam
inc
xor
xor
test
or
push
xor
xor
outs
xor
mov
in
je
gs
cmp
sar
and
adc
mov
popa
outs
push
xchg
push
and
xor
gs
and
inc
ret
ds
adc
ins
movs
fs
dec
(bad)
adc
imul
push
xor
data16
ss
or
push
push
fidiv
jo
push
jno
xor
xor
stos
mov
je
push
xchg
jbe
js
and
dec
cmp
es
and
gs
and
movs
pop
add
xor
dec
movs
nop
add
xor
push
pop
sub
adc
ja
xor
jb
mov
pop
cmp
sbb
pop
jne
stos
sar
sub
jns
and
gs
gs
push
xor
dec
push
jl
xor
retf
gs
retf
arpl
add
je
sbb
inc
mov
dec
inc
cld
push
je
fadd
or
lods
push
xchg
push
cmp
mov
jb
sbb
push
dec
call
sbb
inc
sub
add
add
inc
mov
les
addr16
inc
fdiv
dec
es
loopne
in
out
adc
xor
sub
cmps
lds
inc
fisubr
or
or
inc
and
sbb
or
sub
je
jne
je
inc
ret
add
cmp
fmul
fsub
jl
and
jp
rcl
pop
ret
adc
dec
aaa
push
shl
aam
in
adc
loop
push
pop
or
aas
xor
inc
push
ins
ret
push
push
je
push
ja
and
or
out
xor
rcr
pop
jae
dec
dec
add
xchg
sub
ins
sub
mov
stos
stos
aam
or
imul
mov
xor
outs
ja
sub
inc
nop
adc
add
cs
popa
adc
cwde
sub
xchg
stos
dec
sub
es
mov
push
adc
pop
dec
push
xor
adc
cwde
xchg
dec
adc
test
jbe
push
test
inc
xchg
push
call
mov
fs
pop
bound
movs
sbb
xchg
mov
mov
lds
mov
popa
sbb
push
inc
call
aaa
hlt
xor
scas
and
je
mov
and
bound
bound
gs
sub
add
adc
push
push
jp
inc
add
ins
shr
add
dec
loop
gs
aad
add
fdiv
dec
xchg
inc
push
data16
popa
mov
mov
adc
mov
les
cmp
sbb
call
dec
xor
dec
xchg
xor
push
adc
push
test
push
outs
pop
push
inc
cmp
mov
arpl
push
jo
jmp
and
inc
gs
mov
pop
mov
pushf
inc
xor
mov
xor
mov
mov
dec
ins
call
dec
sub
adc
xchg
inc
dec
or
mov
jo
(bad)
inc
lds
sahf
push
and
mov
jne
mov
cmps
test
push
test
dec
inc
push
push
xor
push
push
mov
mov
imul
dec
push
push
inc
inc
outs
test
xor
push
mov
je
fs
ja
and
inc
sub
mov
outs
add
inc
lock
jno
jae
jno
xchg
movs
sbb
inc
dec
cmp
xchg
fwait
inc
push
xor
or
or
push
push
mov
push
test
movs
push
pusha
adc
push
xchg
adc
push
inc
xor
inc
popa
push
mov
cmp
jbe
cmp
add
std
arpl
xor
inc
ds
jmp
loopne
daa
and
mov
stos
rcl
mov
mov
lods
mov
call
sbb
gs
jp
xor
je
fdiv
sub
and
in
push
or
xchg
mov
nop
ret
in
test
xlat
adc
push
dec
addr16
sbb
dec
mov
adc
xor
outs
jbe
jb
add
xor
mov
in
bound
jne
js
jbe
push
ins
or
adc
dec
jae
outs
popa
inc
and
push
scas
mov
ret
push
add
adc
outs
shr
dec
push
je
sub
les
gs
dec
adc
fadd
sub
and
push
or
inc
push
add
push
bound
inc
les
rcl
push
inc
push
jo
inc
inc
aad
outs
(bad)
outs
sbb
and
mov
add
sub
add
ins
mov
adc
dec
jbe
bound
add
fild
repnz
cld
dec
dec
stos
xor
mov
jae
(bad)
cli
cld
jnp
pop
pop
xchg
push
arpl
push
ds
dec
imul
jno
adc
es
jbe
push
push
movs
dec
mov
xchg
jbe
xor
outs
xchg
dec
jo
or
sub
xor
pushf
pop
ss
ins
fstp
push
or
ins
ret
dec
arpl
int3
xchg
ret
mov
sub
or
sub
dec
add
lock
inc
jbe
call
je
imul
in
xchg
jo
or
dec
pusha
lods
(bad)
fiadd
xor
ins
sbb
loopne
imul
pop
and
adc
and
mov
mov
jbe
inc
ins
test
loop
jbe
mov
mov
hlt
xor
jo
push
jp
outs
mov
stos
jo
sub
sbb
scas
push
push
mov
dec
ja
xor
cdq
ror
je
inc
add
inc
sbb
test
shl
inc
outs
aaa
dec
jmp
cmp
test
loopne
xor
xchg
xor
ja
cmp
adc
adc
push
or
mov
arpl
cli
pop
mov
mov
pusha
push
mov
cld
push
xchg
jo
mov
xchg
mov
iret
and
inc
xlat
fbstp
aaa
jno
ins
xor
push
dec
push
test
mov
jb
loopne
arpl
xchg
adc
sub
mov
push
lea
add
repnz
(bad)
jns
fcmovnbe
xchg
inc
addr16
mov
pusha
push
inc
inc
add
jne
push
cli
dec
jne
rol
inc
bound
scas
lds
inc
push
push
lods
inc
ss
sub
lock
js
jne
sub
jnp
call
lock
xchg
push
adc
bound
sub
and
out
inc
push
push
inc
in
push
xor
stos
add
mov
jbe
dec
dec
ss
ret
mov
push
dec
(bad)
dec
jae
push
add
bound
pop
imul
mov
lds
mov
push
jl
or
and
cld
mov
outs
cmps
push
push
inc
push
push
jp
lock
es
mov
clc
mov
inc
cmp
inc
imul
inc
sbb
cld
push
fisub
mov
outs
xchg
xor
jno
mov
inc
cmp
cmps
shl
loopne
pushw
ss
enter
dec
dec
xor
ja
ja
shl
xor
jae
and
cmp
loop
push
and
or
aam
dec
xor
dec
dec
inc
add
clc
inc
xchg
push
xor
dec
xchg
outs
dec
xchg
add
xor
cs
outs
jbe
dec
aaa
add
je
je
jmp
mov
loope
pop
xchg
jb
sbb
ins
adc
push
push
hlt
push
ins
push
mov
call
je
in
ins
mov
shl
js
adc
ror
xchg
add
push
add
jae
push
xor
pop
loop
inc
cmps
push
hlt
xor
imul
inc
aam
push
movs
popa
(bad)
push
jb
xor
xchg
xor
popf
nop
add
test
jb
or
add
push
aad
dec
push
loopne
ins
je
shl
fs
add
aad
or
mov
mov
in
cld
js
pop
aad
nop
mov
add
xor
sub
sbb
adc
xchg
xor
test
test
jno
jno
mov
ret
pop
sub
dec
cmp
inc
push
lds
or
xor
inc
xor
dec
inc
push
in
or
gs
push
mov
xor
dec
inc
ss
imul
movs
push
bound
or
mov
ss
dec
pop
jbe
stos
sub
les
pushf
cmp
inc
or
addr16
adc
and
call
sub
xchg
les
push
jae
add
jns
or
and
sub
adc
lock
movs
adc
dec
ret
loope
add
scas
outs
ins
dec
ins
adc
adc
pop
das
push
adc
pusha
inc
ja
inc
pop
js
test
xchg
push
dec
push
aaa
ss
push
test
inc
sbb
and
int3
mov
lock
dec
jp
fs
push
gs
push
push
clc
push
jns
mov
inc
and
test
xor
pop
inc
repnz
outs
shr
lods
in
shl
add
js
aaa
cwde
or
xchg
out
jp
xor
adc
dec
xchg
xchg
pop
je
push
xor
xor
push
call
xchg
frstor
mov
xor
sub
aad
jle
in
fcmovnu
sub
mov
ins
loop
adc
inc
inc
inc
push
ins
push
jae
xor
inc
push
dec
js
jl
(bad)
call
imul
push
js
xor
push
dec
dec
cmp
fsub
inc
inc
mov
push
pop
dec
dec
scas
jp
jne
xor
jp
push
dec
or
push
jbe
bound
lods
adc
popa
in
and
out
inc
dec
dec
jns
add
sbb
or
cmp
or
push
ss
es
inc
test
push
push
adc
mov
popa
and
push
sub
les
outs
mov
popa
push
je
dec
sbb
ds
jo
pusha
jb
push
pop
rcl
jno
js
and
jbe
xchg
pop
scas
and
out
sub
dec
addr16
cmp
pop
loop
xor
dec
mov
jp
xor
scas
push
sub
push
or
inc
test
mov
dec
pusha
sub
inc
xchg
push
or
sub
sub
push
mov
xchg
jno
je
push
mov
bound
ret
push
in
inc
inc
stos
add
fsub
inc
dec
(bad)
inc
and
retf
push
call
push
mov
fdiv
stos
or
dec
ja
dec
leave
mov
mov
outs
jne
dec
sbb
push
push
outs
das
inc
add
imul
gs
mov
les
adc
xor
call
add
push
fisub
jp
add
js
cli
imul
jns
ins
cmp
mov
imul
jbe
jbe
dec
sbb
mov
outs
push
jno
mov
movs
test
cld
test
push
add
and
imul
jp
adc
je
dec
jno
fcom
xchg
pop
push
jbe
cmp
bound
xor
inc
ins
dec
push
arpl
inc
dec
je
outs
push
xor
inc
add
lock
mov
inc
bnd
popa
xor
push
add
or
dec
cld
les
mov
enter
or
push
cmp
pop
lock
or
dec
dec
movs
sub
lods
pop
div
add
adc
cmp
mov
push
rcl
push
dec
js
jo
movs
push
xor
dec
jmp
dec
cwde
add
dec
push
mov
add
push
dec
cmp
popf
inc
data16
les
pop
dec
push
imul
add
jns
xor
push
js
inc
call
xor
push
ss
enter
shr
add
pusha
cwde
push
data16
fs
je
inc
adc
mov
pop
and
push
jbe
sub
and
outs
xor
inc
dec
push
xor
push
fsub
mov
xchg
fadd
lea
loop
push
inc
mov
xor
push
or
dec
sbb
mov
test
push
rol
aam
add
xor
push
push
rcl
call
ja
cs
mov
dec
dec
inc
xor
or
fidiv
xor
inc
inc
retf
xor
pop
jb
mov
popa
aam
xchg
ss
xor
add
jns
outs
jo
jo
push
jl
xor
adc
pusha
cwde
sub
fimul
mov
bound
pusha
push
push
pop
push
dec
outs
or
sbb
test
xor
rcl
cmp
dec
pusha
adc
les
xor
push
or
dec
and
add
scas
jle
ret
add
cmp
push
inc
push
out
inc
sar
dec
mov
bound
ja
sub
dec
push
test
push
mov
sub
dec
aaa
(bad)
cs
test
xor
inc
add
cwde
fmul
dec
sub
add
mov
adc
push
les
test
push
jle
es
dec
push
xor
outs
dec
jbe
xchg
jb
pushf
jne
sbb
je
sbb
xor
jns
push
rcl
jb
push
je
jae
or
retf
sbb
retf
inc
push
in
xor
push
imul
or
dec
jne
popa
int3
pop
aad
sbb
inc
imul
pusha
mov
jns
inc
push
bound
inc
pusha
adc
dec
jmp
push
push
dec
(bad)
mov
inc
xchg
sahf
xor
push
ret
sbb
inc
addr16
sbb
xchg
cs
test
dec
and
push
je
mov
shl
pushf
inc
push
dec
adc
int3
into
push
xor
mov
xchg
pusha
xor
fsub
inc
test
sub
test
cmc
es
push
push
push
push
xor
ins
mov
push
inc
xor
push
gs
sbb
jne
xchg
fsubr
inc
repnz
test
(bad)
sbb
call
imul
arpl
in
xor
xchg
push
mov
push
movs
test
sbb
enter
or
inc
dec
jb
gs
dec
mov
imul
push
dec
xor
sbb
xor
pop
lods
sbb
aaa
popa
xchg
popa
adc
sahf
retf
lods
push
dec
je
add
call
je
xor
push
cmp
push
ss
ror
and
xor
dec
addr16
inc
and
or
adc
dec
into
(bad)
push
xlat
xchg
push
fiadd
mov
mov
out
mov
pop
push
push
or
adc
push
inc
push
add
add
cmp
add
sub
inc
inc
cs
add
xor
and
dec
add
inc
inc
add
loopne
dec
sub
sub
push
mov
mov
xchg
clc
jbe
ins
xchg
popa
mov
inc
jne
aad
jmp
xor
ret
in
mov
cmp
push
rcl
(bad)
imul
and
fisubr
dec
les
imul
or
je
pop
xchg
sub
xor
dec
cmp
push
pop
cmp
inc
shl
add
inc
and
dec
add
stos
ins
push
js
popa
cld
sub
xor
pop
xor
add
bound
inc
mov
sbb
push
push
dec
inc
sub
sub
mov
dec
dec
outs
jae
dec
push
shr
and
fst
pushf
shl
inc
sbb
rcr
and
xor
push
popa
bound
sbb
inc
sub
dec
inc
loop
sti
push
xchg
cmps
aam
or
daa
push
dec
push
sub
push
outs
push
cld
push
lock
hlt
and
loopne
loop
test
xchg
pop
dec
mov
cmp
push
popa
inc
inc
adc
mov
xchg
fs
jo
xor
inc
test
mov
dec
mov
je
jne
inc
mov
je
test
push
add
data16
push
adc
add
pusha
add
ins
les
cmp
in
ss
dec
or
test
push
mov
jp
fs
mov
xor
dec
les
stos
pop
sub
dec
pop
push
xchg
test
es
push
inc
dec
jmp
dec
adc
adc
or
or
adc
xchg
mov
dec
jb
push
pop
sub
jne
jns
dec
push
je
and
push
inc
jae
nop
push
xchg
push
add
test
int3
jb
xor
or
inc
ret
xchg
cmp
inc
xor
cwde
call
call
into
ret
push
xchg
add
dec
bound
inc
dec
cmp
clc
mov
fimul
adc
daa
xchg
mov
adc
dec
push
ins
fisub
enter
mov
push
inc
sahf
xor
pop
inc
xor
inc
jb
ins
xchg
cwde
add
jne
dec
lock
mov
call
dec
xor
inc
bound
inc
aam
bound
data16
inc
sub
jle
add
jl
cld
pop
stos
or
jo
bound
push
cmp
rol
jno
push
xchg
es
mov
jmp
in
adc
ins
adc
sbb
push
adc
dec
sub
test
aad
or
outs
js
pusha
pop
sub
dec
xchg
ja
push
push
jp
mov
stos
sbb
push
stos
jl
push
addr16
sbb
dec
hlt
xor
test
sbb
jle
test
push
dec
add
lea
push
mov
jmp
aaa
scas
ja
(bad)
dec
add
int3
ins
sahf
jns
jb
sbb
xchg
bound
mov
cmp
sub
pop
pop
mov
or
bound
push
or
ss
inc
push
push
push
inc
dec
aaa
mov
xor
inc
push
pop
lods
dec
inc
ins
and
imul
xor
dec
adc
int
clc
movs
popa
mov
adc
pop
pop
cmp
sbb
push
dec
cdq
add
sub
dec
stos
or
movs
pop
sbb
dec
push
out
imul
xchg
and
inc
jp
popa
jp
and
dec
outs
inc
sub
or
in
push
and
xlat
sbb
bound
push
bound
lods
adc
push
jbe
mov
xor
sub
scas
jno
push
push
movs
dec
aam
hlt
jae
jbe
(bad)
jb
fimul
sahf
ss
movs
xor
mov
cmp
call
test
inc
lds
hlt
push
dec
outs
add
push
ss
push
inc
call
je
dec
les
dec
and
cmc
inc
mov
xchg
arpl
dec
inc
imul
xchg
mov
push
push
fidiv
sub
cli
sahf
enterw
and
pop
xor
xchg
ds
jns
je
push
xchg
call
popa
pop
push
into
dec
ror
movs
fimul
add
pop
adc
or
xchg
push
inc
addr16
xor
add
adc
and
or
add
fcom
push
xor
movs
ins
mov
xchg
rcr
data16
xor
inc
dec
sub
inc
ss
imul
inc
and
sbb
xor
push
stos
cmp
sbb
imul
fs
jno
test
rcl
adc
(bad)
pop
xor
mov
shl
push
imul
fwait
add
inc
jb
ss
jns
add
dec
pop
bound
pop
mov
and
arpl
mov
ja
gs
xor
xor
je
fidivr
je
or
adc
mov
popf
es
(bad)
retf
push
(bad)
(bad)
dec
inc
mov
xlat
add
mov
jbe
cmps
dec
xor
or
xor
push
pop
xor
xor
xor
xor
(bad)
shr
xor
push
cmp
stos
jo
stos
push
or
xchg
or
dec
sub
fdiv
enter
mov
push
push
movs
imul
repz
arpl
ins
add
imul
ins
inc
fadd
dec
inc
(bad)
ins
shl
push
xor
add
ss
outs
xchg
cwde
out
test
dec
in
mov
add
xor
jle
gs
push
sub
xor
xchg
mov
dec
pop
mov
inc
adc
cmp
gs
ss
sbb
scas
fsubr
ins
ror
js
and
cmp
bound
jbe
adc
ficom
add
and
mov
xor
nop
inc
add
fiadd
sbb
dec
call
dec
jp
jo
imul
popa
jb
jne
rol
dec
movq
jb
sahf
test
add
mov
pop
pop
out
aaa
scas
xchg
push
and
xchg
xor
gs
adc
outs
imul
outs
add
dec
mov
and
ins
outs
or
sub
xchg
sub
pop
or
outs
imul
jb
dec
push
adc
lds
mov
bound
mov
mov
sub
push
push
xor
dec
push
xchg
add
sbb
js
inc
mov
add
dec
push
pop
clc
or
lock
xchg
jmp
rcl
jp
pop
dec
inc
push
js
inc
pop
out
out
pusha
test
imul
sub
sub
sbb
ins
push
jo
mov
cmp
inc
push
imul
add
adc
je
pushw
dec
and
aam
xor
push
inc
xchg
inc
and
sbb
push
sbb
inc
mov
adc
add
xchg
pop
lock
shr
jns
jae
inc
xor
xchg
dec
sbb
dec
ss
scas
push
jo
push
pusha
ss
mov
fnstsw
je
in
imul
ror
arpl
jno
jle
dec
and
dec
push
xor
inc
and
sub
pop
xchg
push
cld
mov
bound
xor
pop
push
sub
xor
gs
or
ror
popa
ds
push
test
inc
ret
stos
sub
leave
push
fnsave
push
jbe
xchg
es
outs
mov
adc
test
dec
or
sub
and
arpl
jbe
jg
mov
imul
xor
xor
or
push
cmp
inc
dec
call
arpl
mov
dec
cmp
ss
ja
push
and
shr
aad
aaa
sbb
push
dec
mov
test
xchg
and
push
sbb
jo
cmp
push
push
sub
push
gs
test
mov
sbb
adc
lock
adc
cmp
adc
xor
push
adc
lods
(bad)
rol
imul
push
jmp
fwait
int3
jp
push
std
adc
jp
xor
pop
jbe
adc
or
sub
test
fsubp
xor
jns
push
pop
jo
jb
pusha
ins
push
cmp
push
mov
jbe
pop
push
dec
ins
xor
add
ds
es
loopne
jns
sbb
lods
inc
ret
mov
inc
sbb
cmp
or
inc
or
jns
add
addr16
(bad)
inc
push
mov
inc
cmps
add
pop
inc
inc
aaa
arpl
push
cmp
es
les
scas
add
and
inc
adc
popa
xor
ficomp
mov
mov
clc
es
cmp
xor
jb
pushf
test
push
add
shl
ins
fdiv
je
push
inc
stos
pop
int3
pop
fdivr
xor
mov
loop
loop
bound
sbb
clc
shr
inc
int3
and
sbb
out
push
or
ins
xor
push
xchg
movs
shl
dec
xor
es
inc
inc
adc
adc
cmp
inc
jbe
enter
add
push
xor
inc
js
pop
dec
je
push
cmp
or
test
dec
ins
or
push
ss
mov
push
add
fs
mov
jmp
mov
test
push
aam
push
movs
mov
fs
ret
outs
ja
push
jmp
inc
pop
push
je
mov
ss
xor
cmp
gs
or
and
adc
adc
nop
add
xor
jne
call
mov
es
mov
jb
inc
xor
aam
lods
mov
pop
sub
retf
cmp
or
test
or
xchg
sub
arpl
fimul
or
jl
push
adc
push
inc
cmps
pop
sub
popa
inc
inc
jp
sbb
dec
push
fidiv
cli
push
movs
sub
mov
bound
dec
les
ret
sub
cwde
add
enter
shl
addr16
les
xor
rol
and
push
jae
test
inc
push
adc
xor
in
ret
push
and
adc
cwde
cmc
fsubr
rcr
hlt
inc
stos
mov
inc
inc
add
add
dec
and
cmp
push
dec
push
call
push
pop
inc
mov
adc
gs
in
and
lock
mov
mov
pop
inc
shl
xor
xor
push
mov
jno
pop
pop
jb
pop
pusha
ficom
(bad)
jo
or
popa
push
cmp
cwde
rcl
push
jp
arpl
imul
out
push
adc
push
dec
inc
mov
jne
fmul
test
push
outs
xchg
add
pop
mov
fisub
fcomp
cmp
imul
stos
sbb
xor
cmp
or
xor
sbb
rol
push
xchg
call
add
inc
xor
inc
inc
inc
cmp
scas
data16
ins
jmp
data16
xor
rcl
jb
dec
lods
clc
test
dec
cmp
dec
add
jmp
mov
inc
pop
dec
xor
push
add
or
das
push
jp
dec
push
push
cmp
dec
push
push
movs
outs
sbb
cli
ins
push
adc
lods
stos
(bad)
pop
cmp
fsub
push
pushf
xor
shr
and
stos
push
js
or
and
call
pop
dec
aaa
jle
xor
aad
lods
or
push
push
outs
outs
push
pushaw
cmp
sub
call
cwde
xor
xor
add
push
sar
pop
cdq
fidivr
ins
jne
cmp
pop
fistp
es
pop
fidivr
cs
adc
dec
push
dec
rol
test
inc
sub
cs
xor
push
dec
fisub
add
jns
inc
fidiv
push
adc
mov
add
fdivr
pop
push
xor
cmp
sbb
sub
or
jb
or
jb
jb
cli
dec
mov
jbe
sbb
ss
mov
gs
xchg
inc
int3
mov
test
fsubr
or
dec
cmp
and
loopne
or
enter
mov
push
fs
push
xor
dec
mov
bound
adc
retf
dec
push
(bad)
mov
push
add
mov
shl
in
dec
es
or
or
push
jns
inc
push
inc
popa
and
pop
sub
aaa
lods
movs
and
and
ins
dec
push
ja
push
push
sub
push
inc
inc
push
adc
sahf
inc
dec
mov
sub
adc
arpl
dec
lock
add
addr16
inc
ja
jne
xchg
mov
xchg
cmp
(bad)
push
mov
dec
or
mov
adc
mov
cwde
inc
sbb
cmp
test
xor
ss
add
out
in
adc
ins
fdivr
push
dec
nop
scas
xor
and
loop
push
inc
adc
inc
outs
outs
arpl
push
dec
dec
sbb
pop
or
jno
addr16
xor
push
cmp
adc
xor
repnz
sub
dec
xchg
inc
xchg
adc
lods
and
dec
pusha
dec
sbb
and
bound
ins
ja
adc
cld
sbb
outs
dec
sub
jp
loopne
cmps
pop
mov
popa
cmp
xor
add
sbb
push
push
mov
or
push
pop
jbe
gs
sbb
arpl
fs
loopne
mov
popa
shl
je
stos
cli
jo
pop
dec
mov
lods
push
sub
ss
pop
mov
inc
jb
imul
sbb
dec
pop
sbb
or
les
mov
dec
jo
jl
sub
xor
outs
or
push
push
lea
push
dec
push
mov
scas
jns
cmp
test
pusha
push
push
cdq
test
add
add
es
push
adc
mov
xor
cdq
add
sbb
(bad)
into
cdq
jb
add
arpl
loopne
cdq
pop
pop
nop
jae
jp
retf
lea
loopne
popa
xor
ja
xor
sub
or
xor
pop
and
sub
imul
pop
or
es
jb
dec
ins
jl
and
sub
or
bound
inc
mov
dec
and
repnz
lea
rcl
push
ins
sbb
movs
cs
push
and
sub
dec
pop
vcvttpd2dq
loop
inc
mov
inc
mov
retf
cs
les
sbb
add
push
add
or
out
mov
sbb
bound
dec
sub
push
mov
inc
inc
loop
popa
mov
bound
sbb
push
push
push
dec
mov
lds
pop
jne
mov
ins
inc
cdq
adc
es
aam
mov
enter
and
ins
push
xor
push
and
aam
mov
inc
fs
mov
fstp
fistp
xor
jne
xor
xor
jo
xchg
mov
mov
jb
arpl
and
and
dec
and
add
dec
push
push
push
sbb
es
push
outs
pop
mov
test
sahf
outs
idiv
push
ss
mov
sbb
jbe
dec
dec
dec
push
mov
jae
test
cmc
int
xchg
jb
ss
mov
and
jo
out
push
xchg
inc
cli
inc
inc
add
mov
dec
inc
in
and
mov
xor
cld
ja
imul
sar
dec
adc
push
jb
dec
inc
dec
cmps
test
sub
jne
fisub
mov
cmp
lock
inc
push
mov
xor
ror
and
xchg
pop
inc
rol
push
inc
ja
push
fisub
inc
mov
aad
sbb
mov
cdq
adc
inc
sbb
fs
adc
imul
inc
or
inc
add
mov
mov
push
pushf
bound
js
rol
data16
pop
pop
inc
push
pop
mov
push
dec
dec
test
(bad)
cmp
ja
dec
xor
xor
and
aaa
fld
ss
inc
jo
data16
inc
dec
outs
cmp
fs
xor
movs
mov
ins
dec
jns
inc
les
push
sbb
dec
gs
xchg
push
data16
cld
loopne
adc
xor
push
jp
xor
cmp
inc
xor
jb
fs
xor
inc
ja
pusha
or
shr
xor
dec
in
js
pop
add
inc
movs
add
jo
mov
push
arpl
inc
push
xor
and
sub
and
shl
add
jo
ja
ja
mov
xchg
scas
inc
inc
xor
pusha
mov
push
cmps
or
(bad)
mov
or
les
cmp
sub
test
retf
xor
sub
cmp
cmp
imul
sbb
ret
dec
mov
jno
inc
cwde
cmp
xchg
scas
sahf
mov
ss
xlat
enter
xchg
mov
and
movs
sub
xor
dec
mov
ins
lock
ins
inc
add
xchg
fst
inc
xor
retfw
inc
(bad)
xchg
and
pusha
neg
push
add
and
jbe
and
add
xchg
inc
push
call
adc
push
xchg
sbb
xchg
stos
lock
arpl
push
inc
push
push
sub
(bad)
imul
mov
rcl
and
push
push
outs
fcom
add
ins
jns
in
sbb
call
je
dec
lods
mov
dec
cmps
ins
add
aaa
push
adc
inc
inc
adc
sbb
dec
pop
outs
(bad)
lds
push
cmovnp
les
cmps
pop
add
add
jnp
xor
push
and
or
loopne
nop
add
je
pusha
enter
popa
addr16
push
retf
pop
inc
bound
mov
jle
dec
sub
sbb
dec
js
xor
add
mov
les
call
and
ret
rcl
or
es
imul
add
scas
push
inc
xlat
dec
push
dec
xchg
push
and
add
push
add
pop
shl
bound
aad
sub
jo
sbb
inc
push
je
inc
jno
mov
mov
jb
jo
jbe
ja
jne
push
ins
xchg
mov
push
jae
xor
cmps
cmp
inc
dec
pop
inc
fidiv
jp
and
mov
je
cmp
stos
dec
sub
ja
inc
(bad)
jmp
push
pop
cli
loop
test
cmp
cmps
int
xchg
ja
mov
je
push
lds
cwde
adc
ficomp
xchg
push
push
outs
cmp
into
jno
push
sbb
es
jne
outs
jo
or
(bad)
int3
imul
add
ins
jb
clc
pop
mov
dec
jns
ins
ins
mov
mov
xchg
xor
inc
arpl
xor
push
inc
push
dec
xor
ins
jne
retf
inc
xor
js
outs
js
inc
inc
adc
cmp
add
dec
sbb
push
sub
outs
retf
es
inc
dec
dec
test
je
in
inc
and
(bad)
mov
push
outs
dec
ja
pusha
mov
jne
mov
call
dec
repnz
pop
xchg
mov
dec
inc
nop
mov
pop
push
jae
fs
push
int3
shl
push
push
shr
and
data16
push
sbb
jns
jbe
nop
or
ss
dec
dec
push
out
jp
and
ins
xor
push
les
imul
fld
dec
xor
xor
xor
fwait
push
push
data16
movs
ss
push
les
push
pop
movs
sbb
cwde
dec
jbe
add
adc
xchg
outs
jb
pop
inc
dec
pop
popa
sub
sub
mov
clc
or
inc
dec
inc
aaa
jp
jo
push
inc
stos
push
inc
mov
dec
je
pop
push
pushf
es
dec
clc
sbb
js
ss
xor
inc
test
push
pop
dec
add
adc
jb
mov
mov
shl
rcl
jns
push
fld
stos
sub
inc
imul
fs
cmp
loop
pop
push
fimul
xor
xor
sub
inc
jbe
sbb
mov
nop
retf
test
(bad)
and
data16
popa
ja
dec
fsub
loop
stos
fisub
jo
jbe
dec
xor
in
out
clc
push
mov
push
xor
jae
test
imul
jbe
push
jo
shl
xchg
push
loopne
pop
mov
into
dec
and
push
sub
sbb
es
popa
movs
or
push
dec
mov
mov
adc
sbb
add
test
(bad)
sub
push
jno
xchg
shl
inc
outs
outs
inc
lods
test
cmp
mov
pop
ins
call
dec
xchg
call
push
add
mov
aam
out
adc
xor
sub
outs
pusha
xor
inc
push
push
adc
adc
dec
add
pop
inc
pop
push
jbe
add
mov
bound
aaa
ss
cdq
xor
clc
push
aaa
xchg
jb
in
ins
dec
dec
adc
add
push
imul
lods
jb
push
lods
arpl
mov
or
pop
sahf
push
test
cdq
xor
xor
rol
cs
push
dec
scas
test
mov
or
dec
dec
push
adc
ins
dec
sahf
call
mov
rol
push
and
xor
fidiv
loop
add
pop
gs
inc
pushw
or
adc
movs
push
sub
xor
inc
xchg
fs
outs
mov
test
xchg
test
inc
xor
push
jne
fiadd
sub
xor
add
jns
lods
mov
pop
ja
push
ss
test
hlt
dec
fidiv
in
add
and
push
add
clc
push
dec
mov
xor
ss
xor
add
mov
or
push
xor
lea
pop
mov
mov
inc
jno
and
loopne
jne
mov
push
push
test
mov
pusha
ja
adc
inc
mov
push
mov
nop
inc
dec
cs
inc
xor
mov
sub
je
cmp
dec
and
mov
cmps
xchg
js
push
xor
push
add
inc
cmp
stos
push
dec
and
pop
push
pusha
or
mov
xchg
push
adc
add
pusha
popa
cmp
dec
test
push
mov
jp
ror
jns
jns
xor
add
shl
push
dec
jmp
inc
cld
outs
dec
popa
pop
movs
movs
mov
rcr
aaa
inc
mov
dec
imul
xchg
add
les
add
jl
adc
add
inc
jo
je
rol
xor
js
add
cs
xor
ins
mov
stos
add
push
loop
inc
ins
jbe
push
pop
bound
sbb
pop
outs
jb
or
mov
xchg
mov
cmps
or
bound
imul
(bad)
jns
add
xchg
test
out
sbb
fisub
push
jb
jne
ins
je
repnz
dec
or
pop
push
and
scas
mov
clc
mov
xor
add
xor
push
adc
(bad)
(bad)
nop
inc
je
adc
inc
dec
push
adc
add
movs
xor
add
data16
jno
bound
jle
data16
imul
adc
xor
jmp
inc
xor
mov
retf
or
add
nop
dec
jp
sbb
dec
js
in
lods
stos
adc
xor
xor
fiadd
call
push
jp
dec
or
xor
bound
sub
lea
mov
inc
xor
pop
xchg
inc
add
sbb
mov
dec
push
pop
es
push
ins
sub
dec
cmps
or
push
imul
sbb
xchg
nop
xchg
sbb
inc
js
dec
push
push
jae
adc
pop
mov
and
dec
ss
sub
clc
add
jbe
pop
gs
xor
call
lock
dec
mov
xchg
dec
cli
jbe
or
xchg
add
repnz
dec
shl
les
push
xchg
dec
mov
pusha
pop
shl
jl
inc
dec
jb
add
sub
xor
call
add
retf
fld
call
daa
gs
inc
sahf
mov
imul
mov
leave
or
arpl
inc
shl
push
add
in
jae
push
or
adc
outs
jb
dec
and
dec
jne
jno
retf
add
push
shl
xor
ins
adc
mov
or
adc
dec
dec
gs
test
adc
outs
fadd
sub
hlt
outs
jbe
inc
pop
pusha
push
xor
js
add
bound
push
xchg
pusha
(bad)
fs
aad
ss
inc
fidiv
mov
pusha
pop
js
inc
sbb
or
gs
je
jecxz
ret
dec
(bad)
push
inc
or
aaa
push
imul
outs
mov
ins
or
sub
xor
inc
call
jae
xor
sahf
inc
push
jo
or
jns
dec
dec
add
sbb
call
outs
lods
or
mov
push
xor
inc
jbe
fs
and
inc
cwde
push
pop
(bad)
push
inc
cmp
sahf
push
xor
dec
push
retf
xor
xor
cmp
mov
fs
and
jno
call
popa
pop
ja
mov
sub
repnz
push
inc
rol
movs
mov
xor
xchg
mov
loopne
jb
or
inc
xchg
sar
add
outs
and
inc
ins
fs
sbb
imul
jp
push
mov
sub
inc
push
pop
push
push
inc
repnz
push
xor
sub
xchg
adc
gs
je
or
das
gs
xor
mov
mov
adc
inc
cmp
push
bound
dec
or
daa
dec
push
mov
retf
fidiv
push
pusha
shr
ss
jne
pop
xor
xchg
and
arpl
or
call
push
cmps
jo
mov
mov
jae
dec
inc
push
inc
test
xchg
add
test
sbb
retf
xchg
add
push
pop
mov
inc
push
ficom
dec
cmp
stos
fbstp
je
jbe
push
xor
dec
push
push
push
mov
pusha
mov
mov
imul
sub
ficom
mov
ret
mov
outs
jae
push
pop
sub
shr
ss
dec
outs
inc
sub
pusha
mov
add
int
xor
sub
add
test
xor
test
push
adc
or
test
sbb
es
sub
scas
xor
ss
mov
jp
push
mov
sbb
jb
dec
adc
cdq
adc
adc
adc
jb
lods
xor
pop
jo
ja
jo
inc
add
cmp
je
push
lods
or
pop
lods
outs
jo
jno
adc
or
ret
sub
stos
sbb
push
xchg
fst
jle
movs
sub
push
dec
add
push
push
dec
dec
sbb
sub
mov
gs
dec
lods
or
or
stos
push
jmp
push
pop
jo
push
add
xor
push
cli
outs
add
push
mov
movs
xor
xchg
(bad)
xor
or
inc
retf
lock
or
mov
inc
push
jne
mov
ins
ins
pop
dec
pop
mov
cwde
xchg
ret
cmp
ror
xor
outs
add
pop
bound
shl
push
inc
mov
push
push
jb
es
loopne
push
push
fs
sub
bound
ja
dec
ss
add
and
jp
pop
xchg
cwde
and
push
mov
scas
imul
xor
add
pop
pusha
sub
push
bound
xor
push
sub
xchg
dec
data16
imul
inc
dec
test
jae
mov
xchg
bound
ss
mov
ins
and
arpl
xchg
push
inc
ins
loope
(bad)
adc
and
jns
push
dec
dec
xchg
or
ins
adc
fiadd
inc
call
add
add
xor
push
pop
imul
ds
xor
je
stos
or
jno
cmp
hlt
ins
dec
aaa
xchg
dec
add
push
add
dec
or
push
xor
push
arpl
sbb
je
dec
jns
test
push
aam
lods
rcr
popa
and
ins
xor
dec
les
in
sub
dec
dec
add
dec
cli
push
sbb
inc
aam
ret
lods
jmp
out
mov
push
pop
jl
cmp
xchg
popa
add
enter
cdq
retf
add
xor
jmp
enter
mov
jns
ins
data16
sbb
adc
cmp
bound
push
fs
xor
outs
(bad)
pop
jo
mov
arpl
push
sub
sub
dec
inc
push
cmp
jle
add
jns
dec
inc
mov
hlt
push
add
push
dec
or
ins
sub
or
push
cs
mul
push
push
push
sbb
(bad)
xchg
pop
dec
dec
test
dec
repnz
cs
int
gs
dec
in
or
xor
sbb
lds
mov
js
ins
stos
mov
and
pop
push
jbe
adc
sub
xchg
inc
mov
call
popa
outs
mov
adc
sbb
test
dec
in
ins
imul
ins
xor
xchg
nop
sbb
lods
cmps
fwait
repnz
outs
dec
cmps
inc
xor
xchg
pop
dec
jmp
sub
and
inc
movs
and
test
jbe
push
pushf
inc
jo
or
mov
dec
ja
inc
and
cmp
inc
push
ror
sahf
inc
dec
pop
bound
lock
cmp
fdiv
xor
pop
dec
js
push
push
inc
pusha
js
lock
les
push
mov
cs
or
jne
jmp
push
lods
pusha
push
dec
in
outs
dec
dec
xchg
outs
sub
mov
scas
jbe
mov
out
add
pop
jne
jbe
or
jb
or
addr16
into
xor
pop
scas
push
test
adc
ja
push
arpl
(bad)
fdiv
gs
jb
ins
jne
inc
pop
shl
push
inc
aaa
push
push
ins
xchg
jp
push
pop
mov
les
mov
imul
jno
lods
fisttp
loop
xor
imul
add
cli
inc
into
and
stos
mov
aam
mov
popa
shl
cld
aaa
push
frstor
aam
xor
push
retf
rol
dec
in
imul
loopne
dec
push
imul
outs
stos
test
out
(bad)
outs
dec
mov
cmc
jne
push
loopne
pop
dec
mov
fiadd
jo
mov
inc
inc
inc
dec
xor
movs
adc
pop
scas
and
and
push
or
add
movs
dec
adc
xor
mov
fisubr
fs
xor
and
mov
fadd
add
or
jno
dec
(bad)
sar
mov
fs
and
push
sbb
pushf
push
fs
push
ins
xor
sub
jb
cmps
mov
adc
(bad)
cwde
rcl
std
cmp
push
data16
xor
add
pushf
mov
xchg
or
dec
adc
mov
arpl
dec
dec
loope
movs
xor
inc
sub
mov
push
inc
imul
xor
add
in
loopne
or
sub
dec
pop
idiv
jbe
inc
push
push
push
xor
dec
hlt
add
mov
aaa
jo
jb
push
data16
dec
retf
add
in
clc
leave
push
int
adc
pop
les
ret
or
(bad)
and
push
or
fmul
je
push
aam
mov
fsubr
ss
or
pop
fild
dec
jbe
popa
mov
test
or
inc
push
xor
push
jle
cmp
adc
sbb
add
sbb
dec
and
push
push
pop
xor
mov
mov
cmps
inc
dec
cmp
or
push
xor
mov
mov
outs
jmp
fsub
outs
bound
je
cmp
cwde
sub
repnz
or
xor
sbb
cli
imul
sbb
xor
and
sub
daa
push
cmp
push
outs
push
add
xor
inc
jb
push
pop
mov
xor
adc
dec
and
xchg
rcl
test
or
fsub
push
and
mov
(bad)
xor
add
inc
push
(bad)
dec
in
adc
sar
inc
and
jb
and
push
lock
sbb
aaa
jno
jb
or
and
adc
xchg
mov
push
adc
outs
pop
cmp
push
mov
mov
ret
mov
push
loopne
or
pop
push
push
imul
and
cmps
dec
jbe
pop
xor
sbb
sbb
adc
cmp
arpl
pusha
jo
sbb
nop
or
les
push
dec
jbe
movs
push
xchg
push
nop
sub
xchg
inc
mov
jb
cs
cmps
add
inc
or
fiadd
adc
ja
dec
push
xor
pop
xchg
xchg
xchg
dec
push
inc
push
fs
retf
xchg
shl
inc
rcr
out
inc
adc
dec
test
push
arpl
data16
xchg
push
push
inc
outs
pop
ret
or
push
outs
mov
add
jbe
sbb
add
and
push
retf
sub
pop
push
jp
sbb
add
inc
cmp
jb
ss
dec
inc
ret
xor
or
mov
cmp
in
mov
mov
push
jo
shl
adc
or
sar
scas
adc
ret
movs
hlt
inc
xor
and
adc
pop
sbb
mov
xchg
fimul
inc
jmp
mov
(bad)
sbb
jae
jae
lds
mov
inc
ins
push
jo
mov
inc
inc
adc
fstp
fidiv
add
ss
cwde
les
pushf
mov
out
xchg
xor
xor
ss
and
ins
sub
add
mov
paddusw
xchg
popa
mov
inc
je
dec
or
mov
(bad)
int3
adc
xchg
shr
je
ins
pop
inc
repnz
pop
cs
ja
movs
out
push
push
inc
add
loop
add
and
je
sar
dec
xor
push
add
fld
mov
push
ret
inc
dec
dec
push
ss
clc
jbe
stos
fcom
push
adc
push
push
ja
push
jb
pop
mov
mov
gs
ins
mov
jg
test
push
dec
jae
push
ins
dec
outs
outs
dec
dec
addr16
retf
ret
or
(bad)
push
scas
xchg
push
(bad)
aaa
clc
outs
dec
outs
pop
mov
xor
add
xchg
mov
inc
mov
adc
inc
je
jns
cmp
push
mov
sub
xor
add
ret
in
and
jb
ror
mov
leave
gs
inc
dec
jbe
popa
test
jle
jo
imul
bound
ss
repnz
fs
sub
push
dec
ss
push
arpl
xor
jo
or
inc
add
mov
push
inc
dec
les
push
gs
cmps
dec
retf
and
push
jns
or
and
sub
mov
inc
dec
dec
fisub
sbb
jno
or
ins
sub
pop
mov
das
cmp
dec
xor
jo
ret
sub
scas
dec
aad
mov
loop
push
out
xor
jg
pop
push
dec
push
outs
inc
imul
or
popa
in
(bad)
fwait
test
inc
push
inc
xchg
rcl
jp
push
adc
test
fs
xchg
stos
shr
or
nop
mov
push
cli
mov
cmp
inc
mov
mov
test
add
push
dec
into
adc
inc
and
push
cwde
jb
jp
xor
outs
sub
xchg
jb
pop
adc
dec
sub
push
pop
outs
dec
pusha
xchg
mov
dec
push
pop
jb
xor
push
dec
cmp
es
sbb
hlt
push
jb
push
repnz
or
push
popa
aam
cmps
push
inc
inc
dec
dec
jo
outs
inc
and
pop
fcomp
gs
cmps
js
push
je
dec
push
ins
je
mov
xchg
xor
mov
xor
pop
jns
pop
(bad)
push
or
dec
xor
push
adc
add
dec
dec
add
dec
ror
mov
js
sub
test
nop
push
and
rol
cmp
clc
inc
inc
mov
xor
adc
mov
test
add
xchg
add
pop
cmp
inc
sbb
in
int
call
sbb
xor
or
adc
push
(bad)
push
xchg
push
les
shr
fild
fmul
inc
ja
cmp
fs
out
xchg
lock
arpl
mov
and
pop
out
mov
outs
js
aam
xor
xchg
rol
inc
push
les
test
dec
fiadd
push
xor
push
mov
imul
add
push
push
gs
adc
xchg
mov
jo
push
add
test
idiv
shr
jo
(bad)
add
and
nop
add
push
dec
push
ins
aam
dec
js
dec
jae
dec
cmp
outs
and
loopne
pop
xor
lds
sub
bound
or
add
pop
stos
xor
pusha
mov
dec
lods
mov
adc
jne
sahf
push
jns
nop
dec
xchg
call
out
mov
push
push
test
and
outs
inc
fs
lods
leave
shr
mov
mov
inc
adc
ss
mov
jno
xor
aad
test
jmp
push
push
or
push
jb
ins
dec
fwait
sbb
ret
cmp
dec
push
inc
jbe
inc
sti
add
add
ss
pop
adc
arpl
push
pop
pop
push
arpl
xor
jns
pop
loope
add
push
pushf
xor
push
xor
or
cmp
add
xor
cwde
dec
inc
scas
dec
bound
pop
or
dec
push
xchg
out
mov
adc
call
cs
retf
inc
adc
fs
popa
mov
dec
ja
bound
imul
xchg
push
push
mov
lods
push
cmps
add
int
add
inc
cli
push
shl
addr16
push
dec
xor
(bad)
data16
movs
jb
or
cld
inc
dec
imul
push
add
cdq
pop
int3
push
fdiv
sub
outs
imul
fidivr
fs
adc
ficom
xor
xchg
cmc
inc
jbe
and
cmp
inc
xchg
inc
mov
inc
and
gs
cmp
aam
test
test
xchg
jae
add
ins
jae
dec
dec
push
push
and
sub
lods
mov
push
dec
and
or
inc
adc
push
or
sbb
pop
test
fs
add
push
dec
push
ss
outs
mov
jo
add
lods
sbb
cmp
fcmovb
inc
dec
inc
je
out
ror
(bad)
adc
xchg
fwait
aam
push
jno
popa
and
jns
add
and
push
inc
push
or
stos
push
ss
jo
xor
dec
gs
test
loopne
ins
jle
pop
dec
add
and
ss
mov
dec
arpl
xchg
sbb
inc
dec
out
dec
test
(bad)
xor
push
pop
xchg
imul
test
mov
xor
scas
inc
clc
xchg
mov
pop
cli
arpl
loopne
mov
bound
push
imul
push
push
xor
inc
in
dec
bound
push
dec
jo
je
pop
imul
dec
dec
je
aaa
mov
push
xor
scas
jno
mov
cmp
dec
outs
mov
outs
dec
or
imul
pusha
mov
push
push
push
push
pop
inc
xor
in
arpl
(bad)
and
jp
cmp
inc
sub
add
dec
aam
out
mov
push
dec
dec
popa
test
push
or
cmps
jo
mov
push
pusha
jl
dec
push
jbe
push
fsubr
sbb
cmp
sub
or
rol
push
dec
movs
push
adc
or
sub
ret
gs
out
aaa
xor
inc
mov
jbe
push
xor
push
mov
jp
mov
popa
xor
and
jae
add
loopne
int3
or
cs
bound
push
pop
scas
xchg
add
fsub
imul
adc
cli
lods
cmps
push
xor
jo
xor
sbb
pop
fimul
mov
retf
inc
outs
(bad)
mov
inc
inc
push
jo
mov
xor
loop
xchg
adc
arpl
loopne
inc
push
add
xchg
xor
adc
fnsave
xor
sbb
in
xchg
les
sbb
push
inc
ja
jbe
jl
ror
bound
sbb
dec
inc
mov
inc
mov
xlat
mov
xchg
ins
mov
addr16
jmp
push
xor
xor
sbb
adc
outs
adc
jb
xor
pop
dec
mov
or
fimul
lahf
scas
stos
xchg
jno
inc
sub
adc
mov
int3
push
cld
data16
and
(bad)
cwde
pusha
ror
jp
int3
gs
arpl
push
push
mov
sub
xchg
dec
rol
dec
and
ficom
adc
mov
rcl
cwde
inc
jb
sahf
pop
or
(bad)
ja
or
push
inc
dec
inc
je
xor
push
adc
mov
jb
cmps
test
bound
sub
mov
sub
shr
jo
add
or
dec
gs
retf
scas
dec
ins
ss
outs
aaa
xor
adc
dec
cmp
mov
or
ins
jns
inc
xor
cmp
push
inc
inc
inc
out
and
inc
les
or
inc
dec
push
ret
add
pusha
outs
in
pop
adc
pusha
fs
xor
push
ja
adc
dec
xchg
stos
pop
and
xor
or
ror
inc
push
add
jmp
xor
inc
aaa
fs
xor
dec
push
or
mov
jb
jb
fmul
fs
dec
aam
mov
dec
push
aaa
cld
xor
adc
dec
sahf
stos
xor
ret
jno
fwait
dec
mov
dec
pop
cmp
aam
dec
shl
jp
mov
push
dec
dec
inc
loopne
or
pop
and
dec
inc
push
adc
adc
add
mov
pop
or
mov
arpl
inc
xchg
loopne
or
dec
cmp
test
(bad)
or
sub
cmp
dec
or
call
sub
push
aam
adc
pushf
inc
fidivr
test
outs
ins
dec
and
imul
sar
movs
xor
xor
enter
push
fbld
out
inc
scas
dec
dec
ins
ins
dec
cwde
push
jb
clc
mov
cmp
jb
aaa
inc
mov
sahf
ins
cmp
sbb
jb
jo
data16
pop
mov
outs
inc
dec
arpl
cwde
xor
test
lods
(bad)
loopne
les
inc
dec
stos
cli
test
pop
push
dec
push
ins
push
inc
adc
adc
jbe
jne
shl
pop
jmp
and
fcomp
push
fs
ins
bound
cmp
inc
adc
daa
and
inc
int
and
jbe
or
mov
ja
push
js
xor
add
adc
inc
fdivr
dec
inc
push
sub
xor
dec
add
inc
cmp
mov
xor
fidiv
mov
pop
xchg
aam
push
ja
sub
push
sbb
push
xor
jb
adc
inc
clc
pushf
xchg
jo
data16
inc
inc
cmp
mov
jbe
les
push
dec
and
push
fs
dec
jo
push
stos
rcl
mov
shl
adc
push
or
xor
gs
pop
adc
inc
push
xor
adc
jle
sub
inc
cli
inc
sub
inc
aam
xor
or
jne
(bad)
xor
sub
and
jbe
outs
stos
pop
stos
mov
dec
push
outs
pop
ss
sbb
add
call
inc
movs
xchg
pop
out
push
xor
ret
and
pop
int3
dec
push
dec
push
aam
xor
dec
hlt
and
pusha
movs
fdiv
fcom
les
ror
mov
adc
out
aaa
inc
jb
jp
and
jmp
and
inc
cmp
sbb
xchg
push
mov
cmp
dec
inc
cmp
repnz
or
or
rcl
xchg
stos
loopne
mov
xchg
push
inc
push
add
adc
push
xchg
inc
xchg
mov
aad
es
xor
mov
push
gs
mov
xor
imul
push
inc
add
xchg
xor
into
rcl
je
add
sub
jb
inc
push
or
cmp
lods
mov
jp
add
xor
or
dec
xchg
dec
push
pop
pop
les
loop
test
dec
xor
es
inc
stos
xchg
aaa
mov
lea
gs
popa
repnz
nop
outs
aaa
nop
pop
dec
xchg
pop
xchg
loopne
jmp
outs
push
push
push
rol
imul
outs
dec
push
outs
ret
aam
mov
xor
dec
cwde
ja
je
inc
and
gs
inc
jne
adc
mov
bound
jp
and
dec
inc
add
and
adc
mov
imul
dec
push
inc
test
push
xor
jp
cmp
xor
inc
dec
or
test
cmp
pop
mov
xor
dec
dec
shl
mov
or
inc
ja
push
outs
push
jle
jo
inc
ja
and
adc
inc
mov
push
inc
cs
or
jl
or
sbb
ficom
shl
mov
push
outs
(bad)
push
push
gs
adc
movs
dec
xor
pusha
test
xchg
mov
xchg
stos
test
inc
mov
push
cmps
xor
outs
inc
cmps
jno
push
cmp
pop
jle
xor
sbb
inc
mov
adc
fiadd
dec
dec
mov
ret
push
enter
ret
inc
pop
retf
ja
push
cwde
dec
push
cmp
sub
or
bound
pop
bound
adc
fidiv
jl
es
ret
sbb
xor
inc
or
xchg
push
push
test
add
test
movs
push
popa
ss
jb
or
mov
shl
push
xor
push
repnz
jno
push
data16
mov
jbe
cmp
push
and
jns
add
jb
ins
push
pushf
push
mov
inc
inc
mov
orps
jo
and
push
mov
push
inc
push
clc
test
mov
cmp
inc
cli
add
xor
cs
bound
dec
pop
or
add
or
mov
ins
or
ins
outs
addr16
or
push
outs
and
outs
retf
xchg
movs
add
je
inc
xchg
inc
pop
add
movs
inc
and
inc
or
pop
dec
cwde
cwde
ret
pop
or
dec
inc
clc
pop
or
or
in
les
push
ins
push
aam
les
outs
rol
aam
pushf
xor
mov
dec
shl
sbb
inc
push
dec
(bad)
enter
and
mov
lock
jae
loopne
ss
add
ror
push
push
mov
jne
mov
arpl
xor
dec
je
ins
ds
push
or
and
clc
movs
or
cmp
aaa
aaa
inc
test
dec
dec
xor
sahf
xor
mov
dec
ins
xor
movs
xchg
mov
sub
ins
jns
xor
mov
pop
push
inc
rol
pop
sbb
dec
jo
sar
ins
aaa
sbb
add
gs
rol
mov
dec
push
inc
inc
jne
push
ins
ins
jo
aaa
push
sbb
push
ficom
mov
fs
xor
cmp
les
popf
adc
and
imul
outs
jo
pop
dec
push
push
ss
popa
push
pop
adc
movs
mov
sbb
dec
pop
inc
out
mov
ficom
push
push
jmp
bound
mov
and
dec
mov
xor
pop
add
xchg
fiadd
retf
push
push
inc
ins
cmp
inc
dec
cmp
imul
push
fidiv
gs
push
shl
data16
pop
push
xor
js
retf
dec
outs
xor
mov
cmps
mov
push
addr16
cmp
or
sbb
ins
push
xor
fiadd
loopne
dec
mov
js
fst
push
popa
ja
js
pop
fsub
addr16
in
adc
cmp
add
and
nop
sbb
mov
dec
je
dec
imul
(bad)
push
inc
jmp
push
inc
ds
inc
loope
mov
xchg
inc
add
sbb
out
xor
push
push
jp
pop
bound
dec
mov
adc
call
add
inc
push
sbb
fstp
or
and
xchg
add
inc
adc
popa
lea
dec
mov
xchg
retf
cmp
inc
es
ret
aam
adc
push
xchg
mov
push
sub
es
pop
in
inc
cmps
add
aam
inc
inc
adc
bound
inc
jo
push
xor
test
add
sbb
dec
sbb
add
sub
test
ret
loopne
cmp
or
dec
cmp
push
add
jo
xor
jo
jns
ds
adc
addr16
psubusb
push
popa
jp
adc
xchg
jmp
mov
xor
pop
ds
inc
cmps
add
mov
aaa
js
ins
sbb
loope
cs
pop
ja
fs
xchg
cmp
adc
push
inc
push
loopne
push
aam
sub
push
xor
sub
dec
or
inc
push
cs
test
les
pusha
xor
or
je
inc
push
push
add
add
enter
loop
pusha
mov
pop
inc
xor
outs
inc
push
sub
and
dec
dec
sub
data16
push
push
movs
add
jle
shl
and
(bad)
pop
pop
stos
imul
mov
dec
xor
jne
sbb
ins
xor
push
or
ja
jbe
mov
je
push
push
inc
lds
mov
adc
out
push
pop
and
addr16
jns
sub
test
sbb
mov
push
sahf
adc
aam
inc
jb
push
adc
inc
jno
push
inc
inc
inc
dec
add
inc
sbb
dec
jne
or
clc
add
xor
and
dec
add
shl
sub
jg
push
pop
or
call
xor
xor
repnz
push
xor
or
add
jno
out
adc
adc
pusha
(bad)
jno
ss
adc
mov
jb
imul
imul
jno
dec
inc
clc
hlt
inc
dec
pop
cmp
add
loope
fisubr
xchg
jno
cmp
ja
ja
pop
adc
xor
xor
lock
jb
add
xchg
push
sbb
xor
mov
nop
sub
jb
pop
jne
rcr
jno
inc
out
cmp
loop
add
aaa
mov
ret
ss
pop
dec
inc
(bad)
in
gs
sbb
in
dec
je
pop
push
adc
or
mov
movs
mov
sbb
sub
sbb
sub
and
sbb
shl
pop
outs
push
outs
dec
push
aam
jns
(bad)
fcom
ins
add
mov
dec
push
js
xor
pushf
pop
pop
int
cld
gs
inc
arpl
mov
jp
pop
lock
xor
push
jle
stos
or
popa
mov
mov
mov
xor
sbb
inc
add
dec
fidivr
call
xchg
or
nop
push
(bad)
push
dec
ficomp
mov
push
clc
mov
sub
inc
sub
add
add
inc
pusha
add
retf
ins
push
jne
ss
dec
test
test
or
pop
cmps
inc
sbb
jne
jo
js
dec
push
mov
pop
cmp
push
or
sub
adc
mov
aaa
xchg
adc
push
pop
push
push
leave
in
out
ret
dec
pop
jno
push
outs
cld
rcl
push
xor
cwde
inc
push
sbb
pop
cmps
sbb
shr
push
xor
inc
jp
ror
xor
inc
jmp
fs
jp
dec
ja
jae
push
dec
lds
xor
pushf
mov
retf
test
cld
xchg
pop
sub
or
rcl
or
or
ins
xchg
or
cmp
nop
mov
shl
mov
or
xor
mov
xor
call
push
push
jbe
cmp
or
inc
fwait
add
push
or
dec
outs
popa
fmul
sbb
aaa
outs
xor
ret
cmp
and
inc
cs
sub
shl
bound
jmp
inc
push
sub
int
dec
push
sbb
xor
adc
xor
push
xchg
mov
push
mov
pop
or
je
xor
adc
dec
jo
fadd
mov
push
dec
fcom
test
and
fisubr
pop
ss
aam
mov
bound
sbb
movs
add
xor
clc
jbe
cmp
(bad)
xor
jp
xor
sub
sub
dec
jo
xchg
push
jo
jb
adc
xor
push
cmp
adc
je
cmp
test
jl
outs
push
jo
pop
or
add
cmp
inc
outs
dec
inc
retf
jb
mov
loopne
push
dec
outs
mov
adc
cmp
les
pop
test
ret
hlt
shl
jb
aaa
and
outs
dec
mov
xchg
dec
push
and
inc
push
cmp
adc
xor
push
int3
add
cdq
sbb
push
add
dec
bound
inc
adc
xchg
sbb
or
pop
dec
dec
pop
xchg
add
gs
jbe
and
imul
jb
leave
push
add
test
add
or
dec
xor
adc
adc
add
xor
mov
fsub
daa
mov
inc
dec
xor
aaa
or
div
inc
fs
xor
cmp
ret
dec
mov
xor
cmp
ds
jp
xor
nop
inc
add
loop
test
add
aad
jmp
je
sbb
addr16
les
or
es
mov
rcr
sub
dec
xor
sar
xchg
ins
cwde
addr16
pop
ret
inc
test
dec
inc
adc
xchg
and
ins
sar
push
push
add
push
outs
push
xor
dec
sub
jns
sbb
fs
pop
inc
dec
pop
aam
adc
clc
jbe
xor
shl
rcl
or
inc
dec
dec
and
arpl
cmps
stos
or
stos
and
loopne
aad
loopne
xor
in
ja
jne
ror
dec
gs
sub
arpl
jp
popa
scas
add
push
cmp
imul
retf
cmp
popa
es
test
sbb
xor
data16
mov
push
jns
dec
inc
push
pop
xor
jne
dec
push
sbb
dec
dec
rcl
add
mov
xchg
sbb
mov
xchg
jne
popa
ins
mov
popa
push
jno
aam
test
xchg
and
push
pop
sbb
add
sub
ret
push
inc
and
mov
xor
or
inc
and
fmul
adc
add
loopne
rol
je
mov
mov
sub
add
dec
jb
popa
stos
add
es
dec
pushf
inc
push
push
test
call
adc
sbb
and
push
mov
sbb
shr
cmp
mov
adc
inc
aaa
bound
bound
mov
mov
inc
xor
frstor
jle
cmp
and
mov
test
inc
xor
xor
mov
addr16
push
push
in
mov
repnz
add
adc
xor
mov
data16
mov
xor
xchg
mov
and
mov
adc
dec
adc
imul
(bad)
fisub
mov
aaa
add
fisub
mov
inc
dec
neg
rcl
cmp
xor
popf
rcl
push
push
fiadd
bound
or
jmp
pop
retf
std
add
cmp
jno
pop
push
cs
sub
push
bound
mov
xor
inc
dec
xor
popa
ins
xor
push
gs
and
adc
push
adc
shr
sbb
push
lock
xor
lods
aaa
fisubr
mov
loopne
aad
inc
jo
add
dec
add
pusha
xor
sub
inc
(bad)
rcl
test
pusha
push
rol
aaa
cld
cli
jbe
jo
mov
les
or
mov
data16
cwde
add
xor
add
and
ror
outs
nop
push
push
inc
dec
inc
imul
xor
pop
retf
xor
dec
gs
ins
add
sbb
jbe
gs
fs
loopne
arpl
rcl
push
inc
adc
cmc
push
outs
adc
jns
and
dec
test
adc
cmp
fs
mov
pop
push
jl
push
int3
js
or
xor
or
push
mov
retf
test
cwde
les
lods
cmp
fmul
or
jbe
fs
movs
cdq
mov
inc
lock
js
dec
jl
mov
repnz
jbe
push
test
inc
dec
add
mov
pop
push
push
dec
sub
xor
adc
in
(bad)
dec
inc
push
push
inc
stos
sbb
gs
inc
add
xor
adc
fimul
pop
add
or
mov
inc
jmp
cmp
icebp
dec
adc
outs
pop
push
jp
outs
xor
cmp
arpl
jns
arpl
dec
cwde
rol
hlt
cmp
ins
cdq
or
jns
adc
jo
jbe
pop
cmp
xchg
ss
push
add
xor
adc
xchg
and
push
jp
out
popw
fidivr
dec
lods
push
dec
push
pop
(bad)
mov
dec
sub
mov
outs
inc
sub
lods
stos
stos
shl
push
xor
mov
mov
and
movs
push
test
push
or
and
sbb
pop
das
xor
push
adc
adc
xchg
adc
jp
add
outs
mov
add
cmp
xor
pop
cmc
add
cmp
(bad)
dec
push
push
or
cmp
stos
inc
imul
dec
pop
mov
ins
inc
and
bound
mov
mov
mov
lods
push
add
xchg
add
(bad)
mov
dec
xor
push
inc
js
aam
call
movs
pop
inc
jbe
(bad)
adc
push
inc
inc
mov
or
enter
inc
add
add
fwait
sbb
(bad)
inc
stos
sbb
scas
popa
mov
dec
jbe
dec
das
adc
cmp
xor
shl
popa
jno
adc
je
sbb
xor
and
mov
frstor
fmul
push
pop
imul
xor
(bad)
mov
or
lahf
add
movs
push
push
add
fs
jbe
cmp
clc
dec
dec
sbb
int3
movs
pop
add
pop
inc
push
adc
add
jp
pop
or
data16
adc
scas
inc
test
dec
inc
push
stos
jmp
ja
dec
add
pop
or
jne
jp
push
adc
jle
dec
test
push
cld
call
les
inc
or
dec
mov
or
cld
gs
gs
xor
xchg
mov
push
and
outs
and
loop
dec
lods
mov
inc
push
cmps
dec
ss
pusha
stos
popa
test
push
jo
inc
or
xchg
ret
dec
cmp
sahf
or
push
mov
pop
xor
nop
popa
sub
in
bound
jp
push
popa
sub
mov
bound
outs
dec
imul
and
sbb
inc
adc
dec
inc
push
dec
xchg
sbb
scas
das
mov
ins
cmp
dec
outs
dec
je
push
fadd
mov
test
mov
xchg
popa
and
cmp
xchg
ret
test
sahf
cli
es
add
inc
dec
popa
dec
pusha
mov
fisttp
cli
bnd
push
inc
outs
xor
sbb
sbb
call
into
jl
xor
jne
push
push
mov
cmp
xor
retf
inc
dec
data16
bound
cmps
jno
test
xor
push
test
push
sbb
dec
push
ins
xchg
jbe
out
xor
je
xor
and
adc
imul
xchg
or
aam
ins
push
jo
adc
push
add
dec
adc
pushf
adc
fwait
shl
sub
add
adc
inc
mov
and
outs
push
fcomp
add
es
or
fmul
push
fsubr
test
adc
xor
fcmovnu
inc
and
imul
mov
out
pop
pop
jno
xor
aaa
inc
mov
adc
mov
mov
adc
jmp
add
push
push
stos
sbb
imul
xchg
xchg
or
imul
push
xchg
ja
mov
clc
cmp
jl
sub
lods
cmp
push
add
inc
jo
xor
xchg
bound
xchg
cmp
sahf
pop
lock
xor
xor
cmp
cld
push
sub
imul
outs
ja
xor
jbe
push
push
push
xor
xor
dec
jp
dec
or
jmp
push
jmp
mov
cmps
aaa
sub
adc
add
data16
push
push
or
jo
push
clc
and
ins
(bad)
dec
ins
dec
lods
cmp
dec
div
shl
inc
dec
add
push
push
jno
add
jne
xor
sub
xor
lods
inc
push
stos
ins
jbe
pusha
movs
test
ins
dec
adc
dec
(bad)
cwde
inc
and
inc
jno
dec
dec
jno
cwde
shr
jne
aad
push
stos
and
jne
dec
pop
xor
fidiv
mov
jbe
dec
push
push
fiadd
bound
mov
adc
and
push
lock
or
or
mul
sbb
xchg
push
jne
mov
sbb
add
fs
call
mov
xchg
pusha
jns
int3
xchg
mov
xchg
sub
and
adc
add
jns
dec
xor
xor
xor
xchg
add
push
dec
push
data16
push
adc
dec
sbb
ins
dec
gs
pop
add
js
adc
dec
cmp
sbb
fadd
xchg
xor
js
(bad)
ret
popa
push
dec
fidiv
xchg
dec
push
adc
push
jb
adc
push
cmp
fs
cmp
test
xor
outs
pop
push
mov
push
pop
push
imul
adc
ja
xchg
bound
rcl
and
pop
push
cmp
xor
dec
sub
xor
xor
fs
inc
loop
div
pop
cmp
cmps
add
inc
dec
in
push
in
jbe
dec
call
jb
push
aaa
clc
inc
test
xchg
aaa
mov
jb
into
inc
or
stos
jo
les
call
data16
push
lods
bound
aaa
gs
cmp
shr
push
mov
inc
add
fmul
rol
sahf
dec
push
js
dec
and
test
inc
mov
dec
es
jb
inc
push
xor
dec
push
jno
pop
aam
sub
sahf
inc
mov
add
pop
mov
ss
test
pop
and
jbe
or
dec
leave
and
int3
mov
aam
pop
xchg
test
dec
push
aam
stos
data16
enter
mov
add
xor
dec
imul
xor
fidiv
push
div
xor
fs
mov
imul
pop
mov
sub
outs
push
loopne
and
push
inc
or
dec
add
or
jo
adc
js
cmp
mov
xchg
xchg
ds
pushf
jno
fmul
dec
cmp
jo
jg
sbb
add
ds
aaa
dec
push
push
js
push
pop
int3
fadd
and
pusha
es
std
outs
add
mov
push
push
jp
mov
sub
push
push
add
cmp
add
jae
jl
cdq
xor
push
gs
cld
mov
and
jbe
add
mov
cmp
or
push
push
jo
test
push
push
xor
add
sbb
push
sub
or
push
pop
es
jmp
and
cmps
xor
stos
sbb
rcl
sub
(bad)
push
dec
dec
ss
(bad)
jp
push
mov
push
loop
clc
push
fadd
dec
pushf
sbb
outs
jp
mov
shl
jns
add
into
ss
inc
dec
push
sbb
fwait
or
inc
inc
xor
cs
stos
jmp
mov
adc
inc
push
xor
outs
pop
mov
inc
fs
inc
add
ins
ficomp
xchg
ret
movs
adc
add
inc
sub
xor
dec
pop
dec
ja
xchg
xchg
mov
pushf
xchg
jb
int
loopne
outs
fs
jo
xchg
inc
or
mov
ins
cmp
mov
inc
inc
not
sahf
push
arpl
out
pusha
xchg
test
ds
outs
mov
fs
cmp
imul
sbb
rol
jl
(bad)
call
adc
xor
mov
scas
add
xor
cmps
push
cmp
mov
or
ins
add
fisub
push
jp
jo
add
and
rcl
push
aaa
add
dec
push
inc
pop
xchg
ja
push
mov
and
test
dec
fs
rcr
push
mov
ins
dec
jmp
mov
dec
cmp
or
ss
rol
jbe
dec
jo
and
inc
push
inc
adc
fdiv
adc
xchg
adc
sbb
inc
push
adc
call
dec
scas
dec
ins
fs
dec
cwde
dec
xor
xor
stos
push
aaa
xor
push
mov
push
pushf
add
pop
inc
mov
and
pop
dec
push
dec
les
dec
push
xor
push
cwde
js
inc
add
adc
je
jnp
add
jns
xor
test
push
imul
xchg
add
push
ret
sub
stos
(bad)
cmp
js
es
push
mov
xchg
add
and
mov
sahf
sub
gs
push
push
or
dec
sub
adc
jmp
cmp
xchg
bound
inc
test
repnz
repnz
outs
sub
inc
mov
inc
jo
pop
add
mov
mov
cmp
push
fs
sbb
add
add
dec
inc
outs
aam
cmp
inc
xor
push
ins
(bad)
sbb
out
or
inc
add
and
dec
push
ret
xchg
and
pop
and
mov
xor
push
imul
lods
cwde
adc
pusha
push
or
mov
sub
ret
js
mov
push
dec
gs
push
retf
push
sbb
sub
and
push
xor
push
add
movs
adc
pop
add
or
xor
int
xchg
mov
sub
adc
shr
inc
add
and
dec
inc
lock
and
add
scas
scas
and
pop
or
xor
ds
xor
cld
dec
js
xchg
jp
mov
jns
pop
dec
xor
ins
xchg
pop
out
and
addr16
aaa
out
fidiv
loopne
jo
and
xor
fs
mov
add
xor
pop
movs
dec
movs
ins
inc
push
jne
fs
push
add
arpl
je
hlt
aaa
push
ins
push
into
mov
int
dec
and
jbe
add
sbb
inc
sbb
mov
xor
outs
adc
sbb
icebp
xor
ins
inc
dec
jp
inc
dec
mov
fs
sbb
ret
pop
dec
push
xor
inc
repnz
push
dec
xor
ins
push
xor
add
outs
mov
inc
xor
ja
pop
add
pop
xchg
enter
sub
arpl
dec
popf
and
adc
or
popa
je
push
jbe
lods
loope
adc
inc
inc
jb
push
mov
jae
pop
call
mov
xor
mov
push
cld
push
scas
pop
jbe
ss
sbb
cmp
enter
jmp
adc
xor
inc
dec
test
mov
xchg
jle
pop
xor
ins
push
sar
jne
sbb
xchg
lods
push
cs
jae
lds
pop
mov
xor
clc
cmp
pop
push
es
mov
add
bound
push
push
xor
dec
aam
imul
imul
dec
enter
pop
xor
cmp
(bad)
sub
push
push
pop
inc
dec
push
sbb
dec
mov
arpl
fisubr
ins
mov
push
mov
lock
or
cs
rcl
or
adc
xor
push
inc
inc
popa
movs
xor
inc
xor
add
enter
push
adc
add
ins
cmp
retf
xor
add
test
pop
xor
xchg
movs
push
jecxz
xor
enter
inc
mov
inc
imul
addr16
outs
jae
push
mov
jne
ja
xchg
nop
xor
push
adc
add
xchg
cld
dec
lods
xor
jp
aam
enter
test
aam
push
adc
test
add
add
inc
dec
bound
push
dec
sub
sub
sahf
sbb
xor
sub
outs
dec
xor
mov
sub
addr16
fsub
xor
inc
xor
je
jb
dec
lods
fadd
dec
push
sub
or
js
and
push
mov
push
repz
push
bound
xor
push
push
pop
add
xor
aaa
movs
add
xchg
lea
imul
lods
sbb
dec
out
dec
jo
js
pop
inc
ss
sub
and
jns
dec
mov
dec
fsubr
jno
ds
fdiv
dec
inc
ins
jo
jle
aam
inc
dec
adc
fidiv
jns
mov
test
sbb
push
nop
inc
push
push
jle
ret
and
dec
jp
pop
dec
imul
leave
push
xchg
fs
dec
dec
inc
mov
aaa
mov
jbe
or
aaa
or
mov
js
dec
sub
ret
mov
xchg
push
jp
jmp
dec
dec
xchg
ret
or
push
call
mov
or
adc
push
clc
cmp
fiadd
imul
xor
or
les
adc
and
sahf
and
pop
movs
mov
cmps
xor
xor
mov
data16
shr
mov
jmp
inc
sub
fst
(bad)
cmp
push
pop
retf
or
sub
test
dec
out
xor
xor
adc
lock
xchg
shl
xor
jo
jp
add
xor
ins
rcl
sub
add
pop
jno
imul
pop
inc
cmp
aad
adc
inc
dec
xor
push
ret
jmp
movs
movs
cmp
test
xor
aam
dec
mov
jne
or
aaa
jbe
push
inc
cwde
test
push
outs
inc
xchg
or
adc
jp
jns
jae
or
mov
or
jmp
ret
push
fistp
xor
xor
or
inc
jo
add
push
push
xchg
push
dec
inc
cmps
stos
inc
xchg
push
es
inc
cmp
xchg
sub
stos
hlt
dec
push
pop
add
xor
sbb
ss
pop
xor
push
mov
pop
in
adc
add
add
jo
push
push
pop
dec
test
push
call
es
jl
cli
xchg
jmp
push
ret
ror
add
js
es
aas
addr16
xor
je
xor
mov
push
xor
sbb
xor
add
fldcw
lds
dec
jmp
inc
xor
dec
dec
dec
ret
ret
test
(bad)
cli
ja
(bad)
popa
add
jp
mov
add
mov
adc
mov
inc
dec
ins
ror
mov
les
dec
imul
out
ss
jno
inc
je
fs
ja
add
xchg
dec
sbb
sub
dec
rcl
js
xor
jns
push
nop
mov
jp
imul
inc
ss
push
scas
add
popa
aam
push
ret
je
or
adc
in
repnz
outs
xchg
mov
dec
add
out
or
nop
test
les
adc
mov
jb
mov
ret
sbb
mov
fs
jo
adc
add
adc
xor
dec
or
popa
xor
loop
ds
xchg
push
imul
push
cmp
inc
addr16
in
xor
jo
test
xor
jbe
adc
jb
fdivr
pop
add
dec
dec
or
mov
and
mov
inc
jo
sahf
push
and
inc
inc
es
add
mov
pop
push
add
ins
pop
push
dec
sub
ss
add
ins
rcl
push
mov
push
(bad)
lock
inc
fwait
leave
sub
pusha
fdiv
push
jbe
outs
and
dec
dec
outs
push
mov
push
inc
fs
int
mov
dec
ins
dec
inc
xchg
push
popa
ret
(bad)
dec
mov
outs
xor
jl
rcl
stos
rcr
dec
movs
outs
dec
push
fs
mov
test
push
cmp
ror
out
xchg
ins
mov
dec
pop
or
ss
pop
xor
dec
add
or
and
or
cwde
dec
pop
mov
inc
dec
and
movs
dec
xor
xor
add
jb
sub
pop
sbb
dec
dec
push
and
jae
mov
jne
adc
aaa
and
mov
mov
dec
(bad)
in
nop
and
inc
xchg
sub
inc
inc
hlt
repnz
mov
and
or
aaa
call
pop
pop
dec
das
pusha
or
pop
and
stos
inc
jo
clc
or
stos
dec
pop
fs
mov
dec
inc
dec
dec
cmp
leave
xchg
push
fmul
push
test
repnz
xor
imul
sub
dec
xchg
add
lods
dec
bound
xor
inc
xor
mov
dec
cmp
pop
pop
inc
jo
push
sahf
cli
or
je
and
pushf
inc
dec
jb
daa
sub
mul
xchg
jb
enter
loope
ss
arpl
sahf
push
dec
push
and
dec
push
mov
pop
test
xchg
and
pusha
jo
inc
inc
popa
mov
adc
sub
mov
xchg
arpl
fdiv
aaa
xor
xor
arpl
dec
sub
call
lds
cs
or
lds
int3
inc
jne
outs
push
jbe
or
nop
adc
adc
cs
mov
and
hlt
outs
xchg
daa
mov
xchg
mov
jno
sub
dec
push
xchg
push
jb
mov
rcl
and
and
adc
stos
pop
je
cwde
pop
mov
je
mov
ins
inc
sbb
mov
pop
add
jmp
call
add
movs
xor
sub
add
xchg
mov
call
lock
cs
push
bound
sub
mov
inc
push
mov
adc
sahf
push
pop
push
ret
mov
retf
test
add
jmp
js
aad
sbb
outs
xor
mov
addr16
pusha
add
inc
jbe
or
dec
jb
outs
mov
int
push
and
dec
je
xchg
nop
shl
fsubr
dec
in
movs
cmp
test
lods
jmp
inc
call
dec
mov
cmp
test
jg
jmp
cld
jb
fs
fiadd
ins
ss
xchg
enter
mov
xchg
dec
nop
mov
cld
inc
dec
ins
dec
push
dec
or
arpl
and
lods
lods
pop
dec
aad
leave
dec
add
dec
push
xor
and
push
pop
jmp
jp
xor
mov
sub
xor
push
push
push
ja
jae
dec
or
outs
sbb
je
bound
mov
pop
push
sub
push
loopne
jmp
rol
mov
mov
push
adc
test
and
xor
dec
stos
lock
dec
int3
arpl
bound
pop
push
xchg
add
cmp
pop
mov
push
add
jecxz
push
ins
push
dec
outs
cmp
repnz
sbb
push
mov
xchg
or
add
or
push
dec
pushf
dec
inc
mov
aam
jb
xor
jo
pop
mov
fs
add
jmp
xor
push
sub
pop
inc
in
push
ins
bound
mov
dec
ret
mov
sbb
xor
ins
pop
je
jbe
sub
add
push
test
sub
push
push
hlt
add
xor
inc
inc
pop
dec
push
or
inc
aad
jb
popa
add
sbb
jae
cmp
xchg
jge
imul
inc
push
inc
xchg
push
js
mov
adc
jle
loop
push
nop
pop
div
push
outs
mov
adc
outs
sbb
pop
add
pop
push
xchg
push
jbe
xor
inc
xchg
inc
push
dec
mov
push
xchg
arpl
lock
and
push
push
xor
inc
jo
or
pcmpgtw
mov
les
dec
fwait
xor
push
bound
(bad)
xchg
push
mov
xor
push
inc
and
inc
sbb
fwait
mov
push
mov
nop
dec
jb
push
dec
push
ss
adc
cdq
or
call
push
js
mov
movs
push
and
jmp
fisub
dec
dec
loop
push
jne
xor
or
sub
shl
js
cmp
add
(bad)
or
push
inc
add
inc
add
mov
push
dec
bound
test
outs
mov
jns
dec
stos
inc
push
push
adc
xchg
cmp
jo
push
inc
jno
and
push
outs
or
lods
xor
ins
mov
fs
aaa
mov
pusha
dec
dec
rcl
bound
aad
add
imul
gs
pop
dec
add
push
adc
xor
dec
je
test
push
xor
ins
fcmovb
and
and
jge
adc
ss
dec
xor
xchg
dec
mov
dec
sbb
ss
dec
mov
dec
or
movs
loop
xor
add
push
mov
mov
in
stos
mov
je
inc
addr16
pop
adc
xchg
push
cli
data16
retf
mov
imul
jno
dec
fsub
xor
je
push
jb
out
xor
popa
les
pop
xor
sub
outs
call
mov
mov
shl
aad
add
ins
dec
bound
inc
test
aam
inc
push
ins
cmp
adc
sub
int
cs
jp
ins
inc
movs
push
xor
push
mov
or
add
dec
int3
mov
xor
call
sbb
mov
addr16
fs
sbb
push
imul
sub
ret
dec
dec
dec
adc
pop
call
and
sbb
cmp
push
test
add
test
je
push
mov
cmp
ss
les
cmp
sub
ins
xor
test
xchg
pop
pop
add
dec
inc
push
xchg
jbe
sub
popa
jo
pushf
fs
push
push
outs
sbb
les
add
push
inc
cwde
inc
xor
dec
rol
sub
bound
fcomp
add
mov
and
dec
lock
out
dec
jmp
aad
xor
je
inc
lea
xor
inc
xchg
lods
ins
ret
mov
retf
xchg
mov
fidiv
hlt
push
mov
xchg
sbb
xchg
push
jns
xor
addr16
js
sbb
mov
dec
dec
outs
jmp
mov
lods
stos
rcl
sub
mov
dec
sub
adc
inc
mov
dec
sub
push
mov
jo
cmp
add
retf
pushf
or
cwde
sar
imul
cwde
test
mov
or
and
ror
and
sub
adc
push
adc
mov
ins
adc
push
xor
loop
outs
pop
jb
jb
add
data16
xor
jo
push
or
loop
inc
xor
jp
sbb
or
fsub
shl
dec
dec
sub
sub
sbb
popa
bound
test
push
xor
push
imul
mov
add
or
add
cmp
or
dec
nop
aam
and
jo
enter
adc
sub
ins
xchg
mov
fsubr
es
mov
je
xor
push
fiadd
adc
push
ins
inc
in
add
cs
(bad)
div
sub
inc
cmp
inc
call
push
js
jo
nop
fiadd
adc
inc
adc
fsubr
test
fisub
push
jp
dec
xor
js
arpl
push
pop
inc
adc
dec
inc
pop
push
push
xchg
push
cdq
adc
ss
shr
loopne
mov
mov
and
shl
jo
jbe
out
(bad)
push
sub
cmp
dec
jae
xor
and
in
rol
in
and
xchg
cmp
jno
dec
mov
inc
sub
xchg
sub
add
xor
nop
inc
cmp
call
add
bound
cld
push
and
jl
ins
imul
xchg
jns
dec
gs
sub
push
sub
js
je
dec
sbb
inc
bound
sub
inc
inc
push
jb
out
or
inc
rol
add
xchg
sub
sbb
cld
push
dec
or
mov
hlt
fdiv
inc
mov
xor
push
ror
mov
push
adc
mov
sub
add
ret
jo
cmp
adc
dec
push
jo
add
and
dec
sbb
pusha
sbb
(bad)
push
pushf
jo
bound
je
jb
shl
or
mov
into
jb
jb
inc
icebp
dec
inc
push
aaa
dec
or
les
ins
jmp
ss
int3
or
or
fcomp
sbb
mov
sbb
test
cmp
or
adc
jae
aaa
mov
pop
adc
jns
dec
xchg
sub
sub
inc
ss
or
loope
ss
sbb
and
fnop
adc
dec
dec
ins
aaa
or
fs
imul
mov
(bad)
les
mov
enter
imul
pop
inc
jp
dec
dec
sub
push
ret
jo
sub
mov
sbb
outs
jl
xor
ss
xchg
inc
add
pop
movs
sbb
push
hlt
sub
ins
mov
cmp
fs
inc
ja
or
mov
xchg
inc
lea
out
pop
mov
xor
adc
fsub
jp
outs
rcl
dec
fadd
or
imul
pushf
inc
ret
inc
mov
push
dec
jns
mov
jae
shl
mov
lds
fdiv
push
clc
ins
mov
adc
add
add
jb
test
les
je
xor
push
xchg
sar
fcom
xor
dec
inc
mov
imul
rol
cmp
xchg
cmp
les
shl
adc
mov
xor
js
inc
jp
inc
xchg
nop
test
xor
nop
cwde
xchg
js
pop
aaa
test
xor
xor
ficomp
xor
inc
fidiv
stos
outs
dec
push
sbb
pushf
xchg
sbb
xor
push
aaa
loop
cmp
outs
stos
mov
movs
dec
ss
push
adc
bound
pusha
xchg
mov
hlt
fadd
pusha
sahf
adc
or
dec
popa
xor
push
fidiv
inc
pusha
jne
dec
test
inc
je
push
call
sub
imul
test
cmp
dec
push
loopne
ss
ss
xor
lods
dec
dec
loope
lock
dec
xchg
adc
jp
dec
push
dec
sbb
adc
ds
dec
ins
inc
int3
jbe
jbe
popf
and
cmp
dec
sub
es
mov
loope
jnp
add
nop
push
push
or
push
retf
ins
mov
mov
or
js
sub
in
push
push
inc
(bad)
jbe
jb
mov
add
xchg
(bad)
into
jbe
cmp
sub
fisubr
in
out
dec
push
mov
cmp
mov
outs
(bad)
jo
dec
or
xchg
sub
add
clc
mov
or
jb
xchg
xchg
pop
(bad)
adc
pusha
cmp
add
popa
ds
add
cmps
xor
adc
push
cmp
mov
adc
push
loop
leave
mov
mov
inc
dec
jle
imul
shl
pop
add
pusha
data16
clc
fwait
push
xor
imul
mov
inc
push
xchg
jmp
pop
push
inc
mov
push
push
sub
dec
inc
jo
jns
add
call
mov
jo
fadd
xor
jo
push
dec
ss
hlt
int
cwde
gs
cmp
test
(bad)
sub
cmp
arpl
stos
push
push
movs
mov
fdiv
aaa
adc
ss
push
pop
arpl
inc
push
adc
test
or
mov
icebp
lea
sub
fs
inc
addr16
dec
cmp
or
xchg
dec
add
or
jo
jno
pop
bound
mov
cwde
or
test
inc
addr16
push
inc
je
xor
enter
cmp
adc
and
add
sahf
push
pop
jo
xor
dec
pop
or
movs
inc
adc
xor
xchg
enter
push
ror
sub
jns
jno
ins
xor
mov
mov
adc
or
(bad)
mov
add
dec
push
in
loope
dec
mov
loop
pop
push
cmp
sub
xchg
adc
mov
dec
adc
xor
push
mov
scas
movs
adc
push
push
push
call
ss
jp
test
retf
jne
rcl
or
mov
jb
data16
bound
(bad)
ss
retf
xchg
mov
bound
sub
push
adc
inc
mov
inc
scas
jb
nop
ror
imul
push
lock
mov
adc
hlt
nop
xor
inc
nop
pop
push
push
sub
push
or
aam
lock
xchg
push
push
ins
jbe
jo
ret
inc
nop
or
cmps
and
repnz
cs
xor
outs
sub
imul
add
lods
xor
je
adc
rol
inc
pop
push
jp
fisub
fisub
dec
jp
or
test
stos
mov
and
mov
out
ds
xchg
ret
pusha
loopne
idiv
mov
xchg
xor
push
xchg
pusha
movs
push
aam
push
push
pop
push
mov
js
adc
icebp
dec
rcl
ja
dec
inc
jo
push
or
adc
out
push
inc
ret
cld
or
mov
push
push
and
xor
dec
push
sub
xchg
and
pop
clc
pop
adc
or
cdq
adc
jl
xchg
sbb
mov
inc
dec
stos
fsub
or
inc
pusha
jae
inc
pusha
xor
and
dec
lods
add
mov
push
int
(bad)
ds
call
aam
fiadd
mov
ins
xor
dec
push
push
mov
and
imul
mov
pusha
inc
ins
push
xor
xchg
push
sub
cli
lods
xor
adc
test
popa
or
outs
xor
and
arpl
loop
sbb
sbb
les
xor
sub
xor
aad
ja
mov
push
popaw
push
ss
bound
popa
push
xor
je
(bad)
fisub
fist
ds
or
xor
ins
push
jne
sar
ins
cwde
dec
fcomp
out
sbb
push
lods
mov
inc
dec
rol
sbb
or
outs
bound
inc
sbb
jo
add
mov
push
and
mov
jne
xchg
sub
or
sub
push
adc
dec
push
mov
xchg
test
xor
fsub
addr16
pusha
ins
add
adc
ja
lods
add
mov
cld
push
adc
(bad)
jb
push
(bad)
es
ins
jle
adc
sub
cmp
xchg
enter
call
ror
ss
xchg
or
not
and
xor
push
jmp
jbe
xor
out
xor
or
sbb
add
not
add
jo
ss
push
je
jb
add
dec
inc
add
pop
jl
push
or
or
adc
jp
imul
mov
inc
dec
push
dec
jp
xchg
or
ret
or
sbb
mov
ret
dec
cmp
dec
jno
xor
push
push
mov
add
pop
dec
push
jae
pusha
xchg
or
enter
and
dec
sub
(bad)
dec
test
jo
or
outs
add
inc
sbb
sbb
dec
mov
out
pushf
push
ins
add
dec
mov
jae
push
and
inc
xchg
jp
data16
jno
cmp
popa
retf
mov
add
int3
push
leave
sub
mov
addr16
fs
add
cli
ja
fst
fs
popa
and
sub
es
arpl
dec
fldenv
or
ja
push
mov
jb
xchg
push
lods
lea
push
add
xor
data16
push
adc
xchg
lock
push
test
or
xor
jns
addr16
add
mov
inc
into
dec
jmp
inc
xchg
ins
sahf
push
jo
es
and
data16
nop
adc
(bad)
or
inc
pusha
xchg
data16
xor
dec
nop
dec
cmp
push
xor
test
test
gs
and
sub
ret
mov
fsubr
imul
push
sub
data16
jne
(bad)
mov
and
scas
aaa
mov
add
sub
adc
push
push
mov
sar
or
xor
jle
mov
in
push
jae
sub
dec
xor
sub
pushf
inc
xchg
push
outs
xor
and
or
mov
shl
test
add
xor
movs
es
inc
gs
mov
xor
loop
popf
inc
adc
imul
inc
je
push
jp
xor
(bad)
cmp
stos
and
nop
cs
inc
dec
popa
lods
lock
inc
shr
fisub
nop
inc
jo
push
dec
sbb
movs
or
adc
cld
test
pop
lods
call
jno
inc
push
cmp
xor
mov
pop
jo
les
lods
mov
jne
push
test
push
push
inc
inc
dec
inc
and
cdq
pop
add
jo
xor
push
arpl
push
adc
ds
xor
dec
adc
and
dec
test
sub
xor
inc
push
(bad)
cdq
mov
imul
es
mov
inc
pop
dec
cmp
push
or
sahf
inc
ret
adc
popf
xchg
push
xor
mov
jp
js
dec
xor
dec
cmp
push
add
fisubr
dec
inc
popa
je
inc
push
popf
xor
xor
inc
mov
aad
enter
push
les
dec
pop
hlt
cmp
cmp
stos
mov
xor
movs
xor
or
mov
xor
sbb
xlat
adc
inc
mov
cld
lods
nop
adc
bnd
xchg
ja
add
mov
pop
popa
repnz
push
in
push
add
jp
outs
outs
inc
sub
inc
push
mov
xor
inc
test
not
xchg
add
adc
sbb
mov
data16
les
mov
pusha
or
push
xchg
call
xor
inc
inc
adc
mov
shl
xor
ss
inc
inc
adc
inc
inc
dec
cli
nop
pop
nop
enter
inc
mov
sub
nop
dec
push
or
sub
jae
xchg
push
sbb
shl
mov
lds
dec
jne
sbb
xchg
add
adc
mov
adc
cmp
nop
mov
push
cmps
add
lock
inc
push
push
adc
cmp
jae
and
clc
aam
mov
push
sub
or
mov
aam
inc
dec
lea
add
int3
push
adc
push
pop
dec
cmps
and
xor
aam
sbb
xchg
xchg
push
xchg
push
sbb
mov
movs
adc
mov
bound
cmp
pop
jo
push
adc
(bad)
mov
and
aam
retf
push
lock
ret
(bad)
js
js
mov
dec
jne
adc
mov
(bad)
call
test
dec
cdq
mov
fsub
sub
inc
shl
out
dec
fisubr
xor
add
dec
sub
dec
cs
xchg
mov
mov
mov
rcr
inc
arpl
push
nop
cmp
xor
add
int
dec
cmp
lock
add
bound
xor
nop
inc
xchg
sbb
test
mov
arpl
dec
outs
push
sub
add
dec
into
adc
or
push
adc
pop
and
mov
fsub
dec
push
inc
and
sub
test
dec
outs
push
xor
inc
push
ins
xor
xor
dec
jno
pop
jl
dec
or
sbb
add
call
xor
jns
push
dec
adc
pop
pop
cmp
jae
add
or
jbe
fadd
lds
jo
test
jo
xor
jp
aad
and
sub
jp
clc
jne
inc
outs
mov
les
dec
xor
adc
mov
dec
adc
push
dec
outs
ins
inc
adc
push
xchg
push
rcr
call
jbe
dec
push
dec
xor
xor
out
add
mov
outs
rcl
test
pop
and
adc
add
mov
inc
push
mov
and
sub
rcr
pusha
push
rol
push
aas
ins
ins
cmps
jbe
lock
push
add
mov
push
push
cwde
jmp
inc
and
call
leave
fs
mov
dec
mov
fdiv
lods
popa
or
add
jo
cmps
and
mov
dec
(bad)
sar
bound
popa
fs
inc
aam
inc
cli
je
push
push
add
or
push
sub
arpl
push
adc
cmp
outs
push
bound
cmp
scas
add
pop
pop
cmp
nop
and
push
hlt
fidiv
cmp
adc
out
and
outs
inc
jo
retf
imul
stos
pop
(bad)
retf
les
aad
enter
outs
lock
inc
mov
mov
push
jb
jo
leave
imul
and
imul
aam
dec
sub
jbe
xor
and
(bad)
jns
add
addr16
test
cs
and
xor
mov
jbe
ins
out
imul
xor
adc
call
mov
or
push
loop
les
ins
xchg
mov
sub
gs
dec
push
xor
sub
sub
pop
mov
push
inc
adc
test
(bad)
pop
push
je
call
outs
jmp
mov
ret
add
inc
pop
les
push
sbb
push
fs
ja
push
xor
test
cwde
outs
enter
ret
jb
push
xor
ins
dec
gs
adc
dec
xor
adc
and
dec
xor
ss
or
inc
addr16
push
outs
and
js
push
inc
dec
inc
cmp
fsub
jp
push
out
fs
ds
es
mov
mov
dec
push
out
push
imul
pop
outs
cli
test
popa
nop
push
loopne
rcl
and
js
jecxz
scas
scas
jo
dec
jmp
push
dec
jb
push
xchg
mov
lods
dec
add
push
mov
cs
data16
and
sub
retf
mov
xor
pop
mov
imul
test
ror
es
push
aam
ss
ffreep
dec
ja
push
int3
inc
dec
stos
test
inc
push
dec
inc
pop
call
jno
ja
xchg
(bad)
imul
jb
jb
xor
and
push
jo
dec
sub
xchg
inc
sub
mov
pop
cs
push
call
add
bound
adc
test
inc
xchg
stos
cli
dec
call
es
aam
aam
jne
aaa
add
add
xor
add
sbb
push
add
mov
mov
push
mov
or
inc
dec
popa
jns
mov
push
pop
or
mov
lods
push
jmp
in
call
inc
arpl
dec
cs
inc
inc
or
fnsave
out
jle
inc
sbb
scas
arpl
cmp
sbb
dec
cs
adc
sahf
inc
mov
(bad)
les
out
imul
push
sub
aaa
mov
and
inc
popa
pushf
mov
pop
js
jae
pop
ins
imul
or
out
stos
mov
inc
ins
cmp
je
sub
pusha
mov
push
cmp
bound
jmp
sub
xor
imul
cdq
shr
jno
sub
xchg
cdq
xchg
adc
sbb
ins
xor
xchg
jmp
or
adc
or
cs
ins
cs
pusha
mov
imul
nop
jne
xor
inc
sahf
js
add
jp
mov
xor
inc
and
mov
or
cmps
scas
sub
dec
dec
push
adc
aaa
jo
or
lds
call
xor
loope
fmul
fdiv
inc
mov
push
push
xor
test
jb
inc
outs
loop
movs
jmp
push
add
push
and
inc
dec
inc
cs
pop
aad
dec
push
in
outs
es
es
enter
(bad)
(bad)
ins
inc
ins
adc
push
xor
inc
dec
xor
add
pop
or
jo
mov
in
mov
ins
dec
ins
dec
inc
out
aad
ja
lods
or
gs
imul
inc
mov
adc
pushf
mov
ss
sub
jo
leave
adc
pop
pop
ins
outs
push
inc
test
les
sbb
push
hlt
jns
push
je
ror
(bad)
push
or
pusha
aaa
or
inc
push
push
xor
push
ins
adc
push
push
jno
je
popa
or
mov
xor
imul
cmp
cmp
push
add
push
pushf
jno
xchg
push
and
ins
arpl
(bad)
and
rcr
xor
push
add
jbe
ror
inc
sahf
js
adc
jp
(bad)
imul
call
sbb
xor
push
adc
add
push
dec
dec
inc
sub
cmps
or
cmps
pusha
push
mov
movs
adc
test
push
jmp
sub
push
in
inc
dec
jns
mov
dec
push
push
and
pop
inc
mov
mov
cmp
add
fs
push
jae
test
jo
arpl
mov
inc
mov
test
dec
push
push
xchg
mov
push
jae
jno
inc
or
and
jp
call
push
adc
inc
ds
add
dec
ins
sub
fisub
cs
imul
imul
sbb
xchg
ficom
cs
cli
ss
push
add
xor
push
ss
push
or
imul
mov
imul
inc
inc
xor
arpl
shr
add
bound
dec
(bad)
sub
jne
mov
(bad)
push
dec
lock
jo
lock
push
cli
dec
inc
inc
or
les
je
jb
adc
xchg
ja
loopne
pop
sub
dec
or
ret
cmp
mov
or
and
js
and
and
or
add
test
inc
outs
or
mov
addr16
lods
push
inc
adc
and
inc
rol
push
push
push
(bad)
push
dec
je
fidiv
or
test
inc
dec
movs
cmps
rcl
xor
push
mov
dec
jo
repnz
mov
xor
sub
aam
inc
pop
fadd
dec
or
add
adc
jo
inc
jbe
push
test
test
enter
pop
or
in
pusha
or
cld
adc
jne
adc
push
ror
push
dec
xor
je
int3
xchg
xor
mov
in
push
call
inc
adc
xchg
mov
sbb
loop
push
sub
mov
shl
inc
sbb
sbb
push
mov
push
and
push
adc
or
mov
repnz
sbb
dec
push
rol
cmps
dec
cmp
push
mov
inc
ins
sbb
inc
xchg
and
and
mul
je
dec
sub
aam
rol
inc
xor
fstp
dec
push
jp
pushf
cmp
xchg
xor
ja
adc
xchg
cmp
inc
gs
ss
add
je
jl
push
dec
sub
sub
dec
sub
add
ins
cmp
aam
sub
cmp
icebp
add
inc
test
or
or
mov
jae
shl
push
outs
or
push
nop
sub
xchg
cmp
mov
dec
sub
or
jp
ret
popa
dec
jbe
pop
push
xchg
inc
xchg
xor
push
jbe
jp
ret
(bad)
or
dec
pushf
and
cli
pusha
xchg
sub
ins
bound
push
push
arpl
ins
dec
push
out
dec
xchg
inc
inc
mov
out
inc
add
push
xor
ss
add
(bad)
outs
or
ret
popa
xor
push
mov
add
cwde
jno
inc
bound
dec
and
mov
pop
inc
adc
loopne
scas
dec
mov
push
add
dec
pop
and
adc
xor
(bad)
jo
inc
inc
test
xor
push
adc
xor
xor
dec
in
push
xchg
ror
ins
push
dec
sub
inc
es
int3
outs
add
(bad)
mov
add
gs
out
cs
xchg
xchg
jno
sub
add
nop
sahf
jns
push
xchg
push
ret
or
fadd
push
jne
into
dec
(bad)
loope
and
dec
pop
jae
outs
aam
push
xor
ins
mov
and
loope
push
into
push
mov
mov
imul
mov
sbb
dec
jae
je
cmp
shl
test
jle
call
inc
cld
push
jge
sbb
dec
mov
inc
bound
xchg
sub
ss
inc
jl
mov
in
ja
jne
mov
sub
add
jle
jp
mov
dec
data16
sub
mov
push
cmps
add
xchg
shr
imul
push
inc
add
inc
push
or
loop
inc
ins
ss
int3
cmp
popa
push
xchg
rcr
fs
movs
gs
and
pop
dec
inc
adc
pop
arpl
adc
xor
outs
mov
add
xchg
inc
jmp
popa
imul
jo
xchg
dec
addr16
inc
jo
js
push
sub
xor
pusha
cmp
sbb
or
inc
stos
loopne
ins
push
(bad)
popa
sbb
push
push
jns
push
and
jmp
push
or
pop
and
sub
adc
xor
sbb
dec
xor
js
pop
push
push
push
mov
pop
dec
imul
xchg
ins
jo
xchg
jne
add
nop
dec
xchg
jbe
push
mov
push
adc
in
outs
test
pop
outs
inc
call
cs
dec
xchg
pop
adc
dec
mov
int3
imul
gs
push
add
push
enter
inc
push
pop
add
jp
mov
add
jo
and
xor
gs
cwde
test
dec
retf
add
inc
or
ins
js
in
pop
push
push
mov
or
rol
jbe
retf
or
push
jb
or
addr16
popa
test
test
movs
push
inc
mov
mov
pusha
xchg
pop
ss
add
pop
sub
push
lock
add
sbb
cmps
bound
xor
add
xor
idiv
retf
add
in
dec
ins
and
sbb
gs
int3
add
bound
cmp
test
xor
dec
pop
data16
dec
push
xor
imul
jb
push
sub
mov
gs
mov
icebp
or
outs
jb
jmp
sar
push
xchg
inc
push
dec
pusha
adc
(bad)
jbe
mov
popa
mov
dec
pop
add
je
mov
sbb
jno
mov
sub
int3
inc
int
sub
dec
jp
adc
cmp
je
ja
rcl
cmp
push
lods
imul
call
sbb
xchg
mov
push
test
fsub
mov
ja
mov
sbb
push
push
push
dec
inc
pusha
cli
sub
int3
jo
jne
jno
inc
mov
inc
test
popa
and
rcr
inc
gs
mov
(bad)
jmp
sbb
and
shr
push
(bad)
inc
inc
push
(bad)
fisubr
xchg
add
inc
outs
pusha
ss
push
or
mov
dec
add
sub
inc
fs
adc
pop
pop
ja
sbb
sbb
fcom
test
rol
ss
xchg
mov
or
dec
jo
mov
in
ins
jae
mov
sub
adc
mov
inc
loop
dec
inc
sub
mov
test
dec
or
dec
cmp
sbb
shl
mov
mov
ds
add
(bad)
sbb
push
cmps
popa
mov
jp
aam
mov
test
push
adc
jbe
push
cmp
xor
test
xor
add
inc
mov
rol
dec
push
push
cmp
or
inc
mov
dec
dec
dec
lods
mov
pop
(bad)
idiv
jb
add
into
sahf
sbb
retf
pop
lea
outs
pop
es
imul
test
pop
inc
pop
sub
ins
inc
hlt
xor
js
sbb
ror
xor
inc
and
add
js
adc
ins
push
push
cmp
mov
dec
add
mov
sbb
fmul
nop
jmp
ins
movs
jae
and
adc
push
mov
rcr
push
dec
aad
jne
jb
push
dec
push
adc
test
sub
js
and
cmp
mov
inc
dec
and
cmps
pop
dec
mov
push
sbb
xchg
jb
arpl
rcl
or
outs
sub
fs
movs
adc
fsubr
mov
mov
push
ret
fmul
mov
add
mov
add
inc
ror
ss
inc
imul
or
add
ss
push
xor
xor
pusha
xor
retf
and
pop
inc
sub
xor
xor
or
div
push
or
cmp
sbb
sbb
aam
pop
and
sbb
jb
push
xor
inc
or
push
mov
mov
test
xor
dec
shl
data16
loopne
xchg
push
mov
push
pusha
xor
inc
sbb
rol
xor
test
mov
in
push
jle
imul
and
pusha
int3
push
gs
or
outs
dec
or
inc
mov
xchg
out
dec
mov
and
dec
jae
add
loopne
dec
dec
and
stos
leave
dec
rol
xchg
dec
dec
outs
push
sbb
jb
mov
mov
gs
sub
sub
in
lods
mov
cmp
imul
push
push
mov
data16
or
(bad)
out
adc
mov
adc
or
xor
sub
fs
push
push
mov
mov
push
xchg
jo
adc
gs
mov
sub
sbb
xor
push
int3
inc
mov
jns
inc
inc
jns
xor
push
or
push
ins
mov
clc
imul
ins
test
or
loopne
dec
dec
mov
shl
fild
pop
inc
mov
sub
or
adc
xor
xor
push
push
push
xchg
push
and
daa
or
mov
lahf
cmp
nop
ins
push
dec
jae
lods
mov
jne
xor
addr16
or
aam
loopne
pop
push
scas
dec
push
pop
aam
push
call
or
mov
call
sbb
cmp
and
imul
jp
test
xchg
fmul
push
dec
adc
bound
inc
ret
jmp
mov
gs
push
mov
or
mov
mov
outs
dec
xor
call
dec
or
aam
adc
je
add
imul
retf
or
pop
mov
sub
and
cmp
or
and
dec
cmp
mov
popa
push
xchg
imul
inc
xor
jp
inc
retf
or
in
mov
inc
or
sub
inc
and
add
push
adc
dec
ds
sub
pop
add
movs
jb
mov
cmps
mov
xor
and
pop
add
push
xlat
xchg
mov
inc
bound
xor
movs
push
sbb
cmp
fs
popa
add
mov
imul
push
ror
pushf
dec
dec
sbb
outs
les
lods
je
mov
dec
mov
popa
xchg
hlt
mov
js
push
mov
lods
fcom
aam
adc
movs
mov
dec
dec
or
retf
fs
mov
scas
ja
movs
xor
imul
movs
in
dec
inc
push
inc
imul
addr16
sub
jno
aam
adc
mov
xchg
sub
jns
data16
imul
push
inc
ins
adc
inc
sbb
pop
aam
adc
inc
xor
sub
sbb
cld
gs
push
jns
test
ins
add
nop
cmp
adc
es
dec
push
push
push
push
nop
cmp
or
pop
cmps
ss
xor
cmc
adc
jae
push
xor
dec
pop
push
les
popa
add
xor
cmp
loop
movs
push
mov
adc
push
and
rol
jmp
sbb
clc
cmc
or
ds
(bad)
loopne
test
aam
push
cwde
push
xor
pop
ss
push
div
mov
push
cmps
jo
jo
push
jno
mov
adc
ins
sub
mov
out
xor
pusha
sub
test
ret
pop
ins
sbb
add
mov
inc
dec
fs
dec
je
movs
cwde
pusha
hlt
jb
mov
jecxz
sub
ja
mov
cwde
mov
sub
and
sbb
dec
mov
and
cwde
sub
inc
xchg
(bad)
call
mov
inc
inc
je
xor
mov
and
xchg
fsubr
mov
bt
je
push
dec
push
stos
xchg
adc
fs
std
ins
push
xor
dec
cmps
xor
inc
js
inc
aad
fidivr
or
jns
fwait
push
xor
or
movs
xor
inc
gs
add
or
fdiv
add
xor
call
mov
mov
pop
cdq
pop
into
je
push
aaa
inc
ja
aaa
dec
sbb
dec
push
pop
cmp
xor
push
dec
in
aam
xor
xchg
xchg
sub
adc
outs
xor
data16
jbe
xor
dec
jl
jae
sub
outs
dec
dec
and
imul
scas
jle
push
dec
fs
push
jns
imul
mov
and
jno
ss
dec
jp
and
add
jmp
dec
loop
xchg
fnstsw
outs
adc
je
(bad)
gs
popa
jo
mov
dec
or
ss
stos
dec
sbb
inc
mov
popa
adc
dec
bound
mov
inc
ins
pop
xchg
dec
jae
loope
or
imul
outs
inc
shr
adc
inc
xchg
or
or
xor
or
and
jb
icebp
cmp
popa
mov
sbb
pop
ret
scas
pop
inc
dec
push
xor
inc
push
adc
push
push
(bad)
pusha
jo
inc
xchg
fimul
(bad)
push
dec
and
xor
or
xchg
mov
jae
ja
ja
js
fisttp
inc
or
dec
dec
inc
outs
test
inc
add
and
or
dec
xor
xchg
les
adc
aaa
cmp
sbb
dec
ins
ins
aaa
and
mov
jle
adc
jp
scas
push
inc
aaa
dec
dec
test
and
jns
dec
cmp
sbb
dec
mov
pop
dec
xor
push
push
push
xor
or
outs
and
mov
in
pop
cmp
push
sub
aad
add
fs
ret
dec
fs
push
stos
cdq
fisub
jle
addr16
rcl
sbb
outs
xchg
imul
push
dec
sub
dec
add
pusha
push
inc
add
and
mov
mov
xor
jno
clc
xchg
and
cmp
dec
cld
(bad)
push
add
jne
sub
xchg
push
push
test
xor
inc
and
mov
test
adc
dec
mov
mov
push
imul
(bad)
enter
jne
call
or
xor
jp
inc
js
test
push
je
outs
inc
lds
fdiv
inc
adc
inc
dec
stos
call
jne
inc
xor
inc
(bad)
sub
xor
dec
dec
sub
js
bound
push
xchg
call
xor
mov
mov
mov
and
sbb
sbb
and
xor
pop
ficom
mov
adc
mov
call
mov
bound
jb
adc
arpl
jae
mov
add
adc
bound
into
or
or
addr16
gs
mov
inc
cmps
sub
push
jo
inc
or
fisubr
inc
je
or
push
or
sub
mov
(bad)
sbb
and
not
push
inc
cdq
push
gs
imul
xchg
xor
xchg
jl
mov
jbe
push
je
sub
adc
fs
push
inc
push
adc
add
xchg
js
pop
ja
or
scas
xor
inc
inc
or
push
push
rol
cmp
cli
xor
add
ja
data16
mov
push
inc
sbb
xchg
ficom
add
xor
mov
data16
or
dec
fisub
jne
dec
push
push
or
mov
sub
call
cld
jns
shr
or
(bad)
jb
dec
hlt
fs
and
(bad)
pop
push
dec
mov
addr16
cmps
and
sub
mov
sbb
test
mov
or
js
pop
outs
add
int3
inc
js
add
pop
repz
jp
rcr
dec
add
dec
(bad)
push
add
mov
loope
xor
inc
daa
and
adc
sub
shl
jae
pop
xchg
push
les
mov
ins
inc
pop
push
stos
mov
pushf
outs
in
push
xchg
fidivr
xchg
pop
xor
test
and
lea
or
adc
or
adc
les
pusha
cwde
mov
jp
ds
into
inc
cs
lds
mov
sbb
pop
jb
test
outs
push
inc
xor
push
push
sub
(bad)
aam
dec
cmp
dec
pop
outs
and
and
push
adc
cmps
or
div
xor
cwde
add
retf
mov
cmp
sub
xor
int3
mov
arpl
bound
and
inc
sub
push
nop
inc
repnz
sbb
into
push
sbb
shl
jno
xor
pop
pop
test
ins
xchg
movs
outs
add
and
and
jns
fdecstp
adc
push
push
jne
scas
pop
dec
outs
push
inc
fs
mov
sbb
pop
push
in
and
ss
inc
adc
repnz
and
adc
cdq
or
push
jo
imul
ret
push
shr
add
loope
pushf
fidivr
sbb
mov
push
lods
sbb
cmp
cmp
int
in
cmps
mov
ja
scas
inc
dec
mov
push
ins
loope
test
push
adc
push
add
test
sbb
jle
dec
push
dec
jns
and
clc
dec
add
adc
bound
xchg
out
xor
dec
sub
mov
xor
and
dec
add
cdq
sub
pusha
gs
or
es
gs
mov
mov
sar
pushf
push
push
fwait
dec
in
cmp
je
nop
test
jl
ins
and
aam
ins
and
dec
push
or
(bad)
pop
push
inc
or
inc
mov
pop
cmp
xor
xchg
push
sub
jb
test
test
xchg
or
int3
jne
inc
jno
imul
dec
inc
aaa
int3
ja
mov
push
push
(bad)
inc
pop
inc
fadd
lock
push
outs
mov
scas
int
adc
xor
push
pop
mov
pop
push
add
push
pop
push
xchg
mov
outs
pop
xor
sub
icebp
sbb
push
push
ins
dec
dec
pop
add
es
fmul
fs
movs
xor
rol
bound
fmul
add
cli
or
sub
sbb
push
inc
mov
add
jns
jle
inc
or
push
fsubrp
push
inc
push
inc
or
push
mov
clc
enter
test
push
ficomp
pop
push
add
ins
jno
push
dec
jo
jo
dec
and
push
shl
aaa
dec
popa
jp
jbe
mov
inc
mov
ror
out
inc
loop
push
and
xchg
mov
inc
push
out
icebp
aad
sub
inc
jo
bound
ins
add
adc
xor
adc
inc
js
jbe
adc
pushf
push
cmp
aam
dec
xor
sub
rcr
dec
cwde
ins
mov
rcl
jb
cmps
retf
lods
push
inc
lock
dec
push
je
jmp
pop
cld
ins
jae
jo
dec
sbb
stos
push
jb
xor
cs
popa
push
xor
or
movs
add
push
add
js
push
jns
or
test
add
jne
test
outs
aam
enter
jle
dec
add
xchg
inc
push
je
jbe
pusha
(bad)
mov
jo
and
sahf
push
jae
push
dec
es
fidiv
fs
and
push
or
cli
inc
sbb
sbb
shr
or
ror
fs
test
nop
nop
inc
push
adc
cmp
stos
aam
pushf
pop
ins
or
popf
add
inc
mov
ja
jo
sub
dec
lock
ss
inc
add
gs
push
add
clc
fst
mov
mov
and
(bad)
xor
add
mov
pop
mov
and
jae
retf
adc
xor
sub
add
pushw
pop
cld
jo
cmp
scas
add
mov
and
rol
dec
lock
jae
mov
dec
mov
cmp
xor
fidiv
test
cli
ins
test
xchg
adc
retf
push
call
outs
push
dec
mov
or
add
cli
and
push
inc
ins
mov
outs
repnz
or
or
or
jo
cli
and
test
sysexit
jne
jno
adc
enter
js
or
and
or
and
movs
and
test
retf
push
inc
push
mov
je
xor
das
xchg
imul
sub
pop
mov
push
outs
push
cwde
or
jo
and
dec
dec
xor
xor
push
xor
popa
cmps
push
in
mov
add
aaa
je
mov
je
into
inc
push
adc
je
mov
xchg
in
xchg
cmp
sub
push
(bad)
not
inc
adc
dec
adc
js
add
test
mov
push
add
or
sub
movs
or
dec
cmp
outs
push
inc
bound
pop
bound
xor
out
les
out
add
dec
ins
neg
aam
sbb
fisubr
adc
call
adc
xor
adc
or
pushf
ins
xor
call
sbb
sub
push
or
pop
js
dec
push
ror
repz
dec
jno
xor
mov
jae
ficomp
push
xor
movs
add
dec
mov
push
in
hlt
cs
ror
or
dec
jae
inc
xchg
add
sar
pop
movs
push
frstor
xchg
jo
adc
loop
je
push
imul
jns
jmp
les
and
test
mov
and
fadd
sbb
dec
jns
xor
outs
hlt
loop
and
dec
cwde
push
jno
mov
in
movs
mov
retf
dec
sbb
mov
xchg
mov
adc
ins
xor
push
cmp
push
les
and
or
stos
inc
(bad)
aaa
sbb
(bad)
mov
jbe
xor
push
push
pop
mov
add
adc
adc
or
inc
data16
pop
add
outs
pop
test
dec
xor
jo
inc
cs
add
outs
or
js
sub
arpl
sbb
rcr
lock
shl
inc
xchg
sahf
outs
dec
mov
mov
ror
fdiv
jo
cmp
loopne
lock
shr
pop
fs
mov
dec
push
jne
dec
inc
dec
and
adc
and
push
xchg
inc
dec
push
push
push
fcomp
cmp
sbb
jo
or
loop
pop
jb
mov
addr16
dec
inc
pop
mov
dec
jo
stos
add
and
push
add
xor
inc
arpl
add
and
and
hlt
shl
push
adc
je
js
xor
mov
inc
push
or
in
push
call
js
and
bound
push
push
pushf
bound
xor
test
inc
sbb
cmp
cmp
mov
xor
cmp
outs
call
dec
add
push
dec
daa
and
jl
test
fsubr
adc
xor
add
sbb
nop
add
in
jp
mov
div
pop
dec
dec
adc
mov
push
rcr
xor
inc
dec
jle
and
imul
dec
push
loopne
add
call
and
or
mov
loopne
xchg
xor
in
sub
or
xchg
mov
in
pop
and
inc
push
jp
pop
and
test
cmp
dec
fsub
xor
dec
xchg
test
inc
jmp
adc
jmp
ret
je
fisub
push
xor
inc
sub
or
jbe
stos
ret
dec
not
jno
outs
jl
inc
movs
mov
push
sbb
add
mov
(bad)
es
dec
les
adc
jb
jns
or
jl
call
xor
aaa
dec
inc
sub
jae
cmovp
test
mov
jp
dec
js
push
and
adc
in
imul
test
je
dec
adc
mov
es
add
xor
inc
jp
fsub
push
push
pop
jp
fs
lea
dec
imul
mov
cwde
mov
mov
cmp
add
adc
push
push
xchg
jne
push
push
shr
outs
test
xor
data16
add
jno
cmp
jno
enter
adc
loop
mov
test
xor
(bad)
scas
xor
or
and
dec
inc
pusha
je
mov
hlt
imul
mov
or
adc
popa
or
arpl
cpuid
mov
cmp
jno
retf
sub
dec
fs
jns
dec
test
in
cmps
pop
bound
push
aaa
js
scas
fimul
cmps
or
or
stos
ja
inc
push
imul
mov
dec
jmp
add
gs
adc
dec
adc
pop
sub
outs
sbb
mov
xchg
push
pop
outs
mov
inc
add
xor
shl
test
xor
push
dec
push
mov
lods
rcr
aad
stos
imul
ins
add
xor
int
shl
adc
pop
sub
pop
push
movs
mov
add
into
xor
sub
sub
pop
test
jbe
inc
dec
mov
fwait
inc
cmp
push
je
sub
sbb
(bad)
lock
popf
hlt
ja
xor
mov
xchg
ret
jbe
es
aaa
dec
add
sub
or
push
je
mov
int
pop
jno
push
data16
es
mov
popa
inc
jp
loopne
adc
pop
popa
rcl
sub
cs
push
cwde
push
cmp
dec
test
mov
and
outs
adc
addr16
or
cs
aam
in
pop
push
xchg
sbb
mov
sub
xor
call
retf
xchg
leave
jo
dec
cld
sub
push
lods
xchg
(bad)
ss
pop
or
bound
call
ss
jne
dec
xchg
js
xchg
push
gs
push
push
jbe
inc
sbb
cmp
and
dec
push
call
aam
aaa
shr
cdq
test
mov
jb
clc
sub
dec
sub
push
dec
lock
and
aad
xor
jp
inc
imul
dec
or
repnz
add
push
js
test
mov
fsub
shl
adc
xor
push
fcmovb
sub
dec
popa
add
fsubr
dec
dec
push
repnz
jg
dec
outs
jb
push
outs
xor
xor
mov
mov
and
ins
inc
mov
push
sbb
shl
dec
inc
scas
xor
cmps
inc
icebp
fwait
pusha
mov
fs
ss
inc
dec
cmp
retf
xchg
inc
mov
mov
bound
fcmovb
test
dec
push
(bad)
lds
sbb
dec
add
dec
dec
dec
les
outs
imul
or
outs
xor
lods
push
cld
mov
shl
ins
inc
push
push
mov
je
ss
repnz
cmp
sbb
sbb
mov
or
mov
inc
push
push
gs
or
mov
clc
dec
push
cmp
cmp
push
push
push
sub
sub
bound
inc
mov
adc
push
(bad)
mov
ins
pop
ja
mov
je
xor
push
push
inc
ret
sar
and
mov
inc
xor
daa
add
addr16
pushw
lds
push
cmp
push
add
xor
addr16
or
xchg
push
jns
dec
adc
or
pop
ror
and
push
mov
push
js
ret
xchg
fs
sbb
data16
sub
jo
push
mov
cmp
hlt
test
dec
push
adc
add
add
outs
dec
push
dec
ja
or
dec
mov
dec
pop
popa
sbb
sahf
push
mov
xchg
mov
or
test
push
test
hlt
ins
ins
pop
inc
pop
and
add
jo
(bad)
xor
jle
xor
ins
gs
lods
jbe
adc
push
into
fwait
sbb
dec
xor
inc
ins
jae
je
jae
dec
rcl
ja
dec
mov
xor
sub
push
sub
xor
popa
push
dec
adc
inc
retf
rcl
mov
jb
pop
js
retf
push
adc
push
mov
clc
outs
inc
sbb
cs
mov
fs
shl
adc
add
or
es
and
outs
push
inc
gs
push
or
hlt
sub
xchg
(bad)
pushf
jmp
repnz
mov
adc
add
pop
pop
daa
dec
xor
push
outs
rcl
fist
mov
movs
dec
clc
mov
into
pop
xor
add
add
jmp
fadd
inc
xor
inc
test
mov
mov
pop
push
or
ja
lods
push
movs
pushf
aaa
add
cmps
xor
ss
push
adc
jp
shr
or
scas
push
in
add
push
rol
jbe
ret
cmp
add
mov
mov
add
jle
pop
dec
mov
es
or
xor
inc
push
push
cmp
adc
call
add
cmps
push
dec
mov
mov
ins
and
and
push
adc
dec
je
inc
xacquire
xchg
jno
cmp
xchg
fisub
lock
sub
ss
sub
call
or
fsub
xchg
fisub
dec
mov
pop
ja
outs
inc
push
jbe
xchg
push
xchg
rol
mov
cld
cs
out
pop
push
or
ror
outs
push
dec
xor
add
cmp
dec
or
xor
jno
popa
cmp
pop
pop
or
inc
add
mul
movs
inc
inc
outs
or
jns
and
push
add
loopne
inc
scas
pop
js
or
xor
jae
dec
xor
inc
xor
pop
pop
mov
popa
adc
add
push
dec
add
jge
and
push
pop
ss
inc
cwde
mov
dec
inc
add
fcomp
pop
ins
shr
arpl
add
add
movs
push
dec
dec
adc
dec
push
push
sbb
adc
pop
ja
xor
jmp
xor
mov
fs
test
bound
adc
push
mov
adc
or
add
dec
push
cwde
idiv
push
xchg
mov
call
sub
cdq
pop
mov
and
dec
and
clc
mov
jo
inc
imul
inc
or
stos
shl
aaa
cmp
movs
lods
jo
pop
inc
xchg
retf
inc
mov
addr16
es
dec
dec
int3
popa
jne
xor
dec
sbb
push
ins
popa
xor
push
sbb
cmp
cs
add
pop
mov
mov
xchg
xchg
xchg
mov
pop
je
or
inc
loope
add
loop
and
pusha
cmps
pushf
inc
sub
popa
leave
mov
dec
inc
movs
sahf
jbe
ret
scas
and
call
mov
mov
shl
in
mov
inc
mov
mov
sahf
je
dec
push
ficom
lods
inc
xchg
outs
movs
mov
xchg
inc
cs
stos
call
mov
data16
pop
push
sbb
inc
loop
adc
outs
jbe
retf
xor
mov
inc
ss
xor
pop
sub
inc
imul
xchg
xchg
push
inc
push
test
and
sbb
dec
enter
sub
fsubr
mov
test
ss
ins
sbb
dec
or
jbe
or
dec
xchg
mov
dec
dec
mov
aaa
add
mov
aaa
in
xor
push
ror
scas
dec
push
dec
stos
add
test
arpl
jno
push
push
xchg
ss
sar
cmp
or
xchg
xor
mov
pop
dec
ret
mov
ja
outs
jle
mov
jns
cwde
rcr
mov
mov
jo
adc
push
ret
jno
pop
xchg
retf
fs
call
jge
dec
jne
jp
in
inc
mov
mov
mov
dec
mov
sbb
pop
lea
in
scas
fisub
pop
or
inc
ret
sbb
pop
shr
dec
pusha
push
dec
popa
xor
inc
and
cmps
add
test
stos
push
imul
push
dec
inc
mov
ss
inc
imul
aam
pop
or
push
or
mov
imul
adc
jo
push
pusha
or
xor
sbb
call
addr16
and
pop
mov
int
add
pusha
outs
inc
dec
je
out
daa
mov
inc
ror
test
inc
mov
push
enter
bound
dec
imul
add
add
inc
pop
out
jmp
adc
cmp
push
and
xor
push
cmp
inc
xor
js
mov
inc
ss
ja
dec
mov
jo
mov
xor
(bad)
movs
xor
jns
je
mov
push
jo
jns
mov
sar
jns
and
or
cli
or
in
push
scas
pusha
jb
add
mov
and
int3
add
sahf
push
add
cmp
movs
inc
jle
pop
and
adc
ss
js
test
or
inc
add
add
das
and
xor
mov
clc
fiadd
test
mov
ror
push
outs
call
push
or
ins
ret
mov
mov
xchg
popa
dec
push
push
jp
inc
pop
cmp
xor
imul
pop
dec
inc
out
push
sub
jne
xor
mov
mov
jp
gs
mov
push
mov
lods
jl
add
outs
push
pusha
loop
dec
test
xor
(bad)
retf
push
ins
pop
aaa
xor
scas
xchg
mov
push
xor
fs
je
test
and
mov
jl
scas
dec
inc
je
cmps
imul
jae
les
sbb
push
mov
xor
cli
jmp
and
ins
inc
xchg
pop
ret
in
add
loopne
dec
dec
dec
xor
inc
adc
dec
jb
jmp
test
inc
ins
out
inc
bound
cmp
xchg
mov
push
cmp
loop
ins
mov
fmul
push
mov
mov
push
scas
inc
add
mov
jp
inc
jbe
adc
mov
popa
call
dec
sub
dec
ins
adc
mov
xor
outs
jp
xchg
add
push
mov
je
or
push
mov
xchg
xor
mov
xor
test
out
outs
push
sbb
xor
call
inc
imul
push
jne
(bad)
out
nop
inc
push
imul
sub
or
push
dec
pop
xor
cwde
(bad)
cmps
int
int3
xor
push
js
xchg
adc
push
xchg
retf
sbb
inc
push
mov
xchg
mov
fimul
pop
call
fadd
push
pop
push
add
dec
push
stos
leave
ss
imul
push
movs
shr
mov
sub
xchg
ror
dec
test
stos
ss
cmp
push
imul
inc
and
adc
cwde
dec
mov
push
adc
jb
les
ds
push
popa
inc
inc
add
ins
bound
push
ins
add
cmc
bound
jb
push
outs
xor
pop
and
rol
push
cs
or
es
push
test
imul
and
pop
xor
jae
cmp
add
inc
stos
fnop
lods
add
sub
dec
(bad)
(bad)
ss
inc
push
or
mov
lds
sbb
cmp
xor
daa
outs
mov
cmp
mov
ret
test
outs
stos
mov
and
dec
js
or
add
adc
inc
push
into
in
rcl
fs
or
pop
push
adc
add
fcmove
int3
ins
adc
ins
xor
imul
rol
jno
adc
movs
push
(bad)
bound
push
add
mov
dec
inc
and
mov
inc
fisubr
jp
call
cmp
int
or
push
push
cmp
sbb
bound
and
mov
inc
push
cmps
mov
dec
adc
data16
fidiv
push
jmp
sahf
fs
nop
(bad)
adc
add
(bad)
push
dec
div
push
fs
push
sbb
sub
lea
cmp
cmp
popa
js
sub
push
cs
enter
mov
ins
push
jb
callw
push
or
fsub
cmp
xor
popa
dec
or
xor
xchg
pop
inc
pop
jo
addr16
inc
daa
in
inc
cmp
aaa
pop
fs
jb
add
mov
and
jo
and
sbb
xor
jle
or
xor
loopne
retf
mov
aaa
push
dec
test
xchg
add
and
adc
js
sbb
xchg
fcom
data16
inc
mov
ss
push
sbb
test
sub
jns
mov
sub
inc
fwait
call
data16
mov
imul
ins
pop
outs
dec
sbb
cmp
sbb
push
jno
int3
or
push
aaa
push
jb
jb
cs
test
pushf
or
mov
stos
adc
mov
ins
push
call
adc
pop
mov
push
ins
mov
dec
push
xor
or
test
push
mov
push
scas
test
pop
(bad)
cmp
xor
pop
int
ja
pop
inc
mov
cmp
inc
add
ror
sub
aam
xor
aaa
mov
inc
bound
inc
addr16
inc
push
adc
push
cld
movs
enter
dec
dec
jo
xor
aad
xchg
fs
inc
inc
addr16
push
outs
mov
jno
jo
jbe
es
cs
pop
movs
sub
ja
jp
inc
sub
jo
ret
je
sub
gs
aam
jo
fidiv
movs
test
addr16
data16
inc
stos
xchg
test
je
popa
cmp
adc
and
popf
xchg
pusha
aam
addr16
push
dec
cs
or
lods
scas
xor
call
push
xor
push
fs
loope
sub
push
inc
add
push
push
mov
test
je
bound
je
pop
lea
and
inc
push
jp
fimul
dec
retf
sbb
push
ins
outs
push
je
and
xor
dec
add
aam
cmp
sub
push
rcr
dec
cmp
inc
cmp
push
mov
xchg
inc
call
mov
shl
push
fs
push
push
test
je
movs
xor
inc
dec
or
(bad)
sbb
gs
bound
enter
or
sub
cs
mov
loop
adc
int3
or
dec
lock
pop
sub
xchg
leave
push
mov
rcr
outs
mov
div
mov
or
dec
push
push
outs
push
pop
enter
arpl
ins
push
add
inc
mov
jno
mov
dec
jno
xor
inc
pop
push
pop
push
movs
push
je
arpl
(bad)
mov
inc
les
popa
jne
pop
shl
cmps
and
inc
inc
test
add
mov
ja
or
fs
inc
inc
dec
and
push
mov
mov
dec
data16
sub
sub
mov
sbb
out
push
stos
or
push
ins
xchg
push
dec
jp
push
inc
add
cmp
inc
fcomp
add
pop
shl
dec
xor
ss
xor
add
hlt
inc
test
jp
imul
call
aam
mov
mov
bound
xor
scas
(bad)
pop
ss
inc
inc
call
cmp
aaa
mov
inc
or
loopne
repnz
outs
ficom
xchg
lods
push
bound
cmp
nop
ret
imul
xor
dec
sbb
jbe
jb
sbb
or
rcl
clc
jl
xchg
and
fadd
stos
in
js
push
mov
push
push
dec
and
or
inc
fcom
gs
add
and
mov
(bad)
and
leave
pop
and
addr16
xchg
jne
cdq
sub
rcl
mov
xor
push
(bad)
shr
or
add
push
lock
mov
dec
sub
and
cld
clc
or
push
les
sbb
xor
add
dec
fs
rcl
sbb
stos
rcl
pop
rcl
les
outs
lock
ficomp
add
xchg
push
dec
hlt
xchg
mov
js
jl
push
xchg
push
jae
call
cmp
sub
inc
mov
ss
test
dec
push
dec
stos
inc
enter
xor
mov
js
pusha
mov
data16
mov
nop
shl
aam
(bad)
les
sub
push
xchg
ficom
jge
push
outs
inc
mov
aam
inc
sub
mov
dec
mov
xor
xor
mov
js
xor
adc
jo
clc
inc
mov
xor
mov
mov
add
adc
push
xchg
ret
mov
ss
outs
jno
push
ss
and
cmp
mov
push
test
loopne
cli
es
xchg
xor
shl
and
cmp
test
in
pusha
js
jbe
xor
loope
or
xor
cmp
push
jo
jns
ss
mov
xor
fidiv
arpl
and
cmp
dec
cmp
jp
enter
dec
jle
call
cmp
xor
xchg
inc
add
in
dec
adc
test
clc
arpl
or
or
fdivr
inc
xor
push
sbb
or
dec
and
push
pop
mov
push
push
movs
into
call
dec
mov
jae
arpl
retf
adc
inc
or
sbb
adc
(bad)
call
push
ret
inc
or
outs
dec
cld
dec
sub
fimul
jbe
ins
cwde
dec
ret
add
push
xchg
sub
dec
fbld
popaw
push
bound
dec
push
jb
push
xor
jl
inc
xchg
adc
shl
push
and
nop
or
dec
sub
pop
add
inc
xor
or
xor
mov
inc
pop
retf
push
gs
jb
call
ret
and
outs
push
push
dec
dec
mov
imul
sbb
mov
dec
mov
push
fwait
mov
add
int3
xchg
xor
or
(bad)
inc
push
xor
mov
ins
inc
mov
pop
fcmovb
test
cmp
outs
sbb
mov
mov
ds
add
inc
sbb
push
xor
mov
add
adc
push
or
push
or
out
mov
pop
dec
cwde
mov
shr
jbe
pop
data16
add
add
or
in
inc
out
dec
outs
mov
cs
and
fs
inc
pop
aad
pushf
add
dec
mov
mov
pop
add
push
inc
sbb
dec
ret
call
inc
or
sub
xor
jns
push
fcomi
push
push
dec
ss
inc
sbb
(bad)
movs
aam
inc
out
and
sub
jns
pop
xchg
adc
mov
pop
inc
pop
ret
imul
or
das
inc
dec
data16
dec
inc
das
or
dec
inc
sbb
inc
and
push
pushf
or
or
data16
add
mov
push
push
popa
dec
je
daa
mov
enter
push
adc
fidiv
loop
js
cmps
inc
shr
mov
jp
adc
rol
aam
push
jo
and
jo
sbb
add
aam
sbb
enter
mov
aad
or
dec
xchg
dec
pop
or
xor
add
mov
inc
dec
dec
dec
test
mov
adc
sbb
add
fisttp
cdq
es
pop
pop
frstor
fs
xor
popf
xor
push
outs
int3
adc
push
push
add
push
push
dec
es
fstp
dec
fs
gs
es
dec
xor
push
sbb
cmp
add
cs
add
mov
push
pop
and
les
adc
outs
scas
pop
out
inc
jne
test
jo
outs
xor
push
mov
push
add
popa
stos
or
out
dec
add
jecxz
mov
gs
inc
call
sub
add
pusha
dec
jp
cmp
mov
nop
push
xor
push
add
hlt
dec
adc
sub
in
push
aam
jp
adc
mov
ins
jo
xor
js
mov
add
cld
jno
outs
jbe
push
mov
inc
loop
add
mov
add
sahf
push
mov
sub
and
repnz
retf
adc
inc
bound
mov
ins
pop
push
and
inc
add
fldcw
xchg
fdiv
pop
jle
pusha
xor
mov
les
adc
adc
jae
push
cwde
add
mov
push
aaa
adc
adc
jp
jae
into
test
xchg
and
leave
pusha
retf
movs
(bad)
xor
in
push
inc
adc
loop
xchg
push
pop
adc
push
lods
add
sub
sbb
xor
cli
jbe
inc
sbb
mov
imul
dec
push
jns
push
push
add
out
fs
sti
mov
ret
xor
adc
push
lods
adc
jae
je
stos
or
inc
dec
jb
push
or
add
sbb
push
pop
add
dec
arpl
mov
add
inc
push
push
xor
ins
xchg
mov
aaa
imul
dec
in
adc
call
cmps
xor
shl
dec
xor
ret
ds
dec
pop
xchg
adc
jbe
rcl
push
jbe
inc
xor
jl
jo
adc
int3
repnz
lods
jp
jns
nop
add
or
sbb
inc
add
scas
popa
add
mov
or
lock
jmp
xor
push
inc
and
out
xor
fsub
into
mov
je
outs
inc
rol
dec
push
mov
pop
jp
dec
shl
xchg
xchg
lock
add
test
sbb
xor
push
outs
adc
outs
xor
cmp
add
aaa
ss
ins
arpl
xchg
leave
pop
cmc
cmp
inc
jo
jp
mov
add
bound
inc
idiv
fidivr
cmp
imul
sbb
test
inc
dec
jbe
inc
(bad)
fisubr
sbb
adc
jp
mov
xor
jo
jno
js
fs
test
xchg
popa
xor
xor
push
cmp
jae
add
dec
aaa
lea
dec
mov
adc
stos
dec
jo
jmp
xor
push
ins
mov
xor
xor
cld
xor
adc
dec
dec
ret
ss
adc
mov
aaa
mov
out
push
jo
aad
imul
je
mov
push
cwde
aam
and
add
mov
xchg
cmp
sbb
dec
mov
dec
add
call
push
dec
dec
add
rcl
push
xor
dec
nop
aam
scas
dec
inc
outs
mov
js
pop
scas
lods
cmp
adc
stos
or
mov
jno
es
inc
add
pop
rcr
imul
test
outs
dec
jno
inc
fs
pusha
add
sub
mov
xor
xor
bound
or
sub
dec
fiadd
jae
add
jno
or
adc
pop
fsubr
es
and
jmp
sar
pusha
test
fsin
xor
ret
xchg
rcl
cwde
dec
pop
mov
push
ss
lock
push
mov
js
dec
leave
push
adc
xor
push
adc
data16
and
or
js
dec
(bad)
addr16
cmp
push
xchg
sbb
sbb
add
mov
cmp
inc
mov
sbb
loopne
and
or
inc
enter
push
push
dec
xchg
or
xor
pop
imul
pushf
dec
mov
jno
inc
cs
dec
lods
push
cs
or
cli
mov
sub
sbb
push
fmul
xor
les
pop
or
xor
push
push
push
or
enter
xor
push
jb
adc
and
in
loop
loop
fld
inc
jb
dec
imul
add
mov
arpl
push
scas
push
adc
pop
outs
sbb
inc
sbb
dec
es
push
aad
pushf
xchg
jp
imul
ja
xor
add
dec
outs
xor
add
dec
inc
mov
aam
push
call
adc
adc
mov
js
in
sub
jne
fs
add
mov
inc
adc
push
call
xchg
ins
jp
fwait
jo
data16
push
add
movs
mov
arpl
sbb
adc
ins
outs
push
imul
lods
fld
stos
ficom
push
mov
inc
dec
push
pop
push
es
jle
nop
sbb
push
push
stos
xchg
adc
imul
or
and
fdivr
xor
inc
popa
pop
dec
dec
sub
shl
jno
xor
pushf
mov
cwde
xor
pop
add
cmp
push
add
pop
outs
rol
imul
sub
lods
add
call
xor
js
xor
inc
aaa
test
cmp
cmps
cmp
inc
push
jb
and
inc
aaa
push
shl
bound
sub
push
add
popa
loopne
ja
dec
test
cwde
adc
add
neg
push
push
shr
aaa
stos
dec
mov
inc
xor
inc
pusha
test
push
les
lds
ret
sub
dec
xor
xchg
sar
imul
sbb
mov
jl
xor
lea
push
and
jae
inc
mov
mov
and
and
test
or
inc
inc
and
inc
xor
aaa
test
test
push
retf
push
popa
or
xor
pusha
sub
mov
inc
jae
mov
jns
xor
mov
adc
xor
push
dec
inc
add
mov
xor
or
dec
pop
sbb
pop
inc
xor
dec
push
enter
dec
push
dec
adc
in
inc
xor
add
lock
data16
mov
sub
lea
push
xor
jl
xor
sahf
jbe
sub
xor
inc
in
mov
add
add
cmp
pop
mov
mov
mov
enter
mov
scas
lods
imul
push
ins
or
rcr
mov
mov
sub
jb
test
ret
mov
jno
inc
xchg
je
jmp
pop
cmp
movs
test
jl
ins
inc
xor
mov
and
inc
inc
mov
dec
xor
dec
adc
push
or
sub
lods
adc
fdiv
call
mov
jp
inc
dec
cmp
cmp
push
fdiv
mov
xchg
adc
inc
xchg
xchg
push
adc
xchg
xor
test
or
push
sub
ins
loopne
gs
or
je
jb
pushf
mov
xor
and
mov
mov
lods
scas
push
add
clc
push
add
inc
push
push
sub
or
sub
push
inc
add
sub
sub
sbb
pop
or
dec
mov
add
fwait
xor
into
hlt
pop
push
cwde
push
xchg
or
test
mov
adc
dec
ret
mov
dec
gs
ja
inc
retf
out
pop
cmp
outs
outs
popa
and
add
or
dec
mov
xchg
fdiv
or
adc
push
lods
mov
xor
adc
loopne
cmp
outs
jbe
popa
inc
imul
sbb
jne
adc
pop
inc
sub
mov
arpl
mov
jo
test
cdq
mov
dec
mov
dec
pusha
sbb
or
mov
loop
add
inc
inc
cmp
bound
cmp
mov
xchg
and
je
sub
add
push
pop
outs
ja
pop
inc
add
stos
aaa
gs
add
ss
cdq
lea
ds
push
pop
dec
pop
and
dec
rol
sub
and
push
pop
or
jbe
jp
ss
add
out
xor
pop
dec
push
mov
outs
data16
mov
push
cmps
mov
test
mov
xchg
ret
sub
push
jns
bnd
clc
data16
es
push
outs
cmp
jne
adc
es
or
mov
xor
push
fld
ja
ret
inc
add
aaa
fs
dec
dec
push
xor
xor
add
clc
xchg
adc
call
sub
inc
or
sub
stos
sbb
mov
rcl
add
pop
or
lods
dec
aaa
jne
inc
data16
and
dec
cmp
and
xor
dec
push
mov
push
jo
cmps
mov
imul
push
inc
inc
adc
push
xor
(bad)
push
lock
and
fs
inc
inc
(bad)
fisttp
cmp
ss
push
fst
in
add
jo
push
popa
jbe
call
cmp
mov
sbb
inc
mov
mov
xchg
ret
mov
ins
push
push
add
and
mov
cli
mov
outs
fs
rcl
or
xor
inc
js
xchg
adc
push
imul
or
dec
es
push
push
or
pusha
dec
xor
mov
shl
pop
xchg
push
dec
jo
sub
push
mov
push
retf
xor
ficomp
loope
mov
sub
jp
inc
stc
mov
xor
jns
push
push
inc
dec
dec
dec
inc
pop
mov
xchg
sub
jae
fwait
adc
imul
push
lods
sub
inc
out
es
xor
inc
sub
pop
push
es
ja
push
cmp
dec
ss
and
dec
test
outs
or
or
xor
jo
xor
mov
fsub
rol
dec
xor
or
and
adc
ror
xor
nop
inc
push
js
adc
movs
jo
jp
(bad)
shl
add
push
enter
inc
fs
cmps
or
push
sbb
xchg
cmc
gs
ja
pushw
push
ror
mov
and
outs
ret
pop
jle
add
sub
or
je
sub
mov
inc
dec
ja
mov
mov
add
and
cs
adc
test
push
or
inc
xchg
mov
fwait
xchg
mov
out
jb
mov
dec
or
imul
sub
sub
pop
les
bound
test
push
mov
xor
or
dec
and
xchg
and
push
dec
stos
sub
outs
dec
inc
push
test
dec
retf
popa
test
inc
cmp
or
ret
add
push
xor
add
adc
dec
ins
push
mov
sbb
jo
adc
int3
inc
jp
pop
mov
push
je
scas
push
aad
xor
jne
inc
inc
shl
jns
mov
push
add
ins
sub
out
xor
mov
jo
sbb
jp
xor
cmp
sbb
imul
add
push
xchg
xor
daa
or
addr16
cmp
pop
cmp
pop
push
or
adc
es
dec
sub
add
jo
xchg
mov
cmp
xor
popa
call
inc
xor
add
sub
mov
ins
pop
adc
jo
je
aas
add
xor
xor
jl
dec
popa
or
call
push
movs
push
arpl
into
jne
test
stos
bound
test
nop
cmp
add
jp
(bad)
fucomp
pop
pop
dec
repnz
push
fwait
mov
push
add
pop
gs
adc
push
inc
popa
and
movs
cli
fsub
es
aam
xor
fs
cmp
fcom
push
jle
inc
inc
xchg
fnstenv
dec
or
xor
push
cld
sar
outs
push
dec
dec
push
ja
pop
xchg
mov
pop
dec
enter
fist
inc
inc
ins
sbb
ins
xor
mov
outs
cwde
xchg
push
inc
xor
test
ins
loop
xor
xchg
push
xchg
repnz
pop
pop
add
xor
adc
pop
aam
outs
jle
xor
dec
out
jo
or
add
push
pushf
jno
ror
mov
add
jbe
adc
mov
lds
or
xor
and
or
(bad)
outs
popa
aaa
pop
and
add
and
mov
inc
and
arpl
cmps
jns
inc
pop
dec
adc
loopne
inc
push
retf
loopne
rcl
loope
je
add
add
sbb
and
push
sub
call
data16
dec
call
jp
add
cwde
(bad)
push
addr16
test
call
pop
and
xor
mov
nop
jb
in
popa
jp
stos
add
mov
dec
and
movs
lahf
enter
mov
or
gs
mov
inc
cwde
js
jne
bound
fs
inc
sar
push
inc
shl
push
push
push
movs
jmp
bound
bound
lods
sub
push
push
push
fimul
dec
cmp
pop
push
pop
test
stos
fimul
inc
xor
in
and
dec
sub
or
ins
adc
inc
push
dec
mov
and
gs
pop
rol
gs
push
add
push
mov
sub
xchg
dec
dec
adc
mov
add
push
inc
(bad)
dec
fs
pop
xchg
cs
and
push
push
pop
inc
inc
xchg
mov
mov
dec
xor
sbb
cwde
test
inc
adc
inc
add
cs
outs
inc
cwde
add
inc
xor
test
inc
dec
shr
push
xchg
dec
sub
pop
and
dec
xor
sub
sub
sbb
scas
xor
bound
cwde
adc
dec
pop
adc
push
bound
mov
mov
sbb
pop
push
jbe
dec
imul
test
push
cwde
into
dec
and
add
je
or
mov
out
jmp
jne
mov
xchg
push
sbb
lea
xor
inc
add
out
(bad)
push
mov
mov
push
inc
push
push
sub
add
nop
imul
adc
jle
push
mov
dec
pop
inc
inc
adc
gs
pop
push
sbb
repz
xor
ds
sub
mov
xor
ins
inc
ja
les
mov
mov
inc
mov
nop
xchg
int3
cmp
shl
mov
popa
xchg
aam
xor
inc
fimul
xor
and
push
dec
inc
inc
sub
and
pushf
data16
adc
movs
push
fmul
je
cmps
mov
xor
rol
mov
cs
jp
and
jo
vandnps
push
push
sub
mov
xor
dec
arpl
adc
push
jbe
lock
lods
add
dec
dec
dec
xchg
xchg
mov
outs
push
bound
je
outs
out
mov
imul
jne
or
jo
fs
mov
call
popa
xor
push
xor
adc
xor
jmp
jp
inc
adc
add
add
ret
mov
pushf
jbe
and
or
pop
sub
pop
sub
dec
jae
inc
fmul
test
or
inc
push
and
cs
mov
cmp
dec
push
dec
xor
jbe
sub
out
in
bound
xchg
movs
or
mov
xchg
add
rol
mov
enter
(bad)
outs
and
cwde
xor
inc
and
jl
xchg
imul
sub
jns
dec
cmp
and
dec
inc
jae
scas
add
fimul
add
fmul
dec
xor
mov
fisttp
sub
test
arpl
gs
mov
stos
jb
outs
inc
call
dec
mov
push
retf
ins
xchg
mov
outs
jp
arpl
or
dec
lds
jne
pop
push
mov
sbb
adc
dec
mov
xor
pushaw
xchg
and
sahf
les
mov
outs
js
dec
xor
aaa
sbb
mov
ins
jb
mov
fadd
jo
adc
mov
inc
xor
push
dec
xor
mov
xor
mov
xor
jo
inc
es
push
fs
in
les
push
sahf
je
adc
and
jo
mov
rcl
inc
push
push
xor
add
xor
jmp
loopne
sub
pop
outs
jb
loopne
sbb
sbb
xor
adc
push
mov
xchg
xchg
add
inc
sub
outs
add
jo
sbb
int3
xchg
push
shl
sub
or
push
dec
(bad)
dec
adc
(bad)
lock
or
and
xchg
inc
xchg
or
es
mov
ins
sbb
(bad)
outs
mov
inc
or
add
inc
pusha
shl
xor
je
xchg
jbe
jmp
xor
mov
ret
test
inc
inc
ficomp
xor
jne
lods
popa
mov
cmp
adc
xor
mov
or
inc
(bad)
hlt
not
push
dec
dec
loopne
ficomp
inc
jl
and
add
in
mov
adc
repnz
push
lock
add
sbb
xchg
jo
and
xchg
sbb
shr
or
or
inc
xor
xchg
dec
call
sbb
or
shl
fdiv
dec
push
mov
xor
ret
popa
cdq
(bad)
or
push
xchg
dec
dec
fsub
inc
rol
adc
mov
mov
inc
dec
outs
jmp
pop
inc
sub
gs
mov
dec
xchg
pop
nop
data16
jmp
popa
arpl
les
popa
xchg
lods
movs
push
sub
jbe
mov
xor
sbb
xchg
les
push
push
jo
ss
push
inc
add
push
push
popa
adc
adc
dec
push
adc
mov
jb
add
add
jbe
fdiv
mov
dec
mov
dec
sub
inc
outs
or
repnz
xor
dec
in
xchg
add
xor
mov
mov
xchg
les
lea
sub
sbb
pop
dec
push
loop
push
pop
mov
ja
jge
inc
ins
cmp
mov
ins
sub
movs
mov
enter
add
ds
cmp
add
popa
inc
xor
lea
fs
adc
call
test
mov
gs
jns
sub
stos
jp
xor
inc
aam
sub
pop
xor
add
and
push
jns
push
and
push
fs
push
dec
cmp
add
or
mov
mov
dec
dec
idiv
cs
dec
push
adc
cld
push
(bad)
xchg
pop
push
dec
sub
or
adc
into
jbe
inc
sub
es
fimul
int3
adc
ins
inc
xor
cmps
inc
or
dec
fwait
add
push
retf
inc
test
xor
mov
xor
data16
outs
sbb
mov
sbb
mov
nop
shl
jbe
jno
lock
and
jp
dec
dec
imul
cmp
push
mov
dec
xor
add
jae
jmp
jl
xchg
shr
push
ins
arpl
ss
dec
jp
xchg
cmp
jne
sbb
adc
call
add
push
add
ins
adc
jle
or
mov
ins
xor
outs
sbb
lods
out
lods
or
cmp
jo
jbe
add
fs
jl
xchg
add
outs
xchg
sub
xor
ss
adc
cwde
pop
inc
popa
test
fs
lods
push
xchg
cmp
push
movs
adc
adc
and
dec
ror
dec
aaa
test
mov
sub
cmp
js
mov
or
inc
je
sub
pop
aam
push
aaa
xor
add
js
push
and
and
push
ss
push
gs
dec
mov
pop
jo
sar
ins
imul
push
or
sbb
pushf
mov
push
cmp
pop
mov
jns
ss
mov
mov
movs
loopne
and
arpl
or
sub
les
stos
push
jns
inc
push
mov
(bad)
call
push
rol
xor
adc
ficom
and
mov
dec
jno
je
rcl
mov
push
outs
jae
push
mov
adc
adc
fcomp
ss
or
push
add
in
jb
xchg
xor
adc
push
or
lock
adc
call
xor
mov
push
inc
fadd
dec
inc
arpl
nop
dec
add
cld
repnz
and
or
or
or
inc
adc
push
adc
push
cs
pop
add
push
pop
or
inc
push
inc
imul
sbb
dec
push
pop
mov
loopne
movs
fs
stos
mov
ja
dec
bound
ror
data16
adc
aad
dec
test
push
movs
xor
inc
rol
push
push
mov
les
ret
bound
push
add
mov
inc
dec
and
dec
sbb
test
inc
(bad)
jo
or
fst
push
jo
inc
mov
inc
sbb
scas
outs
and
push
mov
stos
sub
sub
sub
data16
pusha
test
inc
xor
or
adc
in
push
lods
adc
xor
xchg
or
fidiv
xor
dec
fs
push
mov
call
es
inc
bound
call
or
call
xor
xchg
data16
je
xor
pop
test
scas
ds
ret
pusha
ret
ret
and
and
mov
dec
je
or
sub
jp
into
mov
push
mov
push
dec
xor
pop
push
sub
dec
dec
clc
sbb
dec
les
add
rol
dec
add
xor
or
je
movs
data16
pop
aaa
repnz
mov
sub
dec
dec
retf
dec
popa
cmp
mov
das
xchg
sub
aaa
jae
xor
adc
or
push
outs
gs
and
les
ja
xor
hlt
ja
or
and
dec
jp
jne
sub
ins
popf
outs
cli
inc
mov
adc
adc
dec
adc
add
push
push
jb
mov
cmp
jae
jl
(bad)
inc
inc
dec
xor
inc
int3
cmp
cmps
scas
(bad)
inc
inc
jno
loopne
xchg
cmp
cmp
add
add
cwde
dec
add
test
or
je
inc
xchg
cmps
sub
dec
ss
adc
je
rcl
xchg
arpl
bound
mov
popa
dec
sub
stos
or
movs
pushf
mov
dec
adc
addr16
test
and
sub
jbe
inc
inc
or
out
dec
xor
lods
jae
and
mov
inc
leave
popa
sub
shl
dec
cwde
xchg
cmp
scas
cli
or
ja
inc
outs
xor
inc
xor
lods
adc
je
inc
inc
xchg
imul
xor
out
push
jle
outs
xor
jo
xchg
inc
or
sub
adc
push
in
and
cdq
or
loopne
retf
cwde
push
push
cmp
push
and
add
xor
inc
push
inc
data16
sub
sub
call
xor
push
ss
ins
(bad)
dec
lods
xchg
popa
dec
push
imul
xchg
mov
and
xor
js
test
mov
into
pop
retf
rol
cmp
adc
xchg
mov
loop
xor
lods
or
hlt
gs
dec
movs
test
push
arpl
adc
xor
inc
gs
push
shl
or
pusha
and
fimul
and
pop
mov
cmp
cmp
outs
fdiv
ja
inc
xor
loop
inc
pop
jl
aaa
dec
loop
push
xor
dec
addr16
dec
dec
(bad)
gs
inc
pop
cmp
jb
imul
ror
adc
inc
gs
dec
jne
xchg
ss
pop
add
cmp
jo
push
and
pusha
test
push
pushf
jae
mov
nop
adc
aam
add
cmp
sbb
add
jbe
mov
sbb
mov
xchg
dec
mov
dec
mov
xor
or
mov
data16
mov
ins
xchg
mov
arpl
dec
inc
clc
dec
dec
dec
ja
dec
push
ins
jbe
jp
sbb
in
push
xor
xchg
xor
(bad)
ins
js
inc
dec
dec
add
pushf
gs
sub
inc
add
out
and
cs
(bad)
loopne
inc
push
jbe
pop
push
adc
sbb
mov
outs
cmp
push
xor
add
and
test
inc
cmp
cwde
(bad)
mov
addr16
loope
cs
dec
outs
xchg
dec
sbb
jmp
jbe
lods
dec
cmp
mov
push
cmp
xor
jo
data16
dec
shl
adc
xchg
bound
ins
inc
aaa
xor
xchg
popa
mov
call
mov
movs
adc
fs
(bad)
dec
bound
mov
or
mov
imul
mov
out
jnp
or
inc
jb
jbe
push
sub
(bad)
hlt
inc
pop
das
test
js
cmp
dec
push
cmp
inc
push
mov
jae
imul
test
inc
jno
sub
pop
sub
stos
aam
mov
dec
push
pusha
mov
popa
movs
cld
imul
dec
fwait
sar
ret
cmp
call
dec
cmp
gs
ja
leave
adc
shr
ss
jb
adc
ins
xchg
jbe
push
xor
inc
pop
outs
aam
xchg
adc
push
push
inc
ja
inc
push
xor
or
sub
add
jp
push
sub
lock
inc
push
adc
loopne
push
mov
mov
aam
sub
gs
scas
enter
retf
add
xor
dec
adc
outs
fsubr
shl
sbb
dec
js
xor
xor
sub
cmp
inc
inc
inc
addr16
inc
shl
ss
dec
adc
inc
adc
sub
xor
rol
aam
enter
pop
mov
imul
bound
xor
mov
cdq
push
int3
mov
outs
sbb
mov
dec
cld
jp
shr
add
js
dec
xor
cld
push
pop
shl
fs
stos
push
add
jl
push
dec
jne
jl
push
outs
cmp
add
mov
in
or
adc
push
and
add
test
inc
sub
dec
dec
mov
and
mov
xchg
jmp
mov
mov
lds
jle
dec
pop
push
call
sub
push
dec
loop
xor
or
dec
push
push
out
inc
cmp
rol
dec
push
pop
xchg
sub
cld
dec
ins
and
xor
dec
leave
pusha
adc
adc
aam
enter
adc
aaa
push
js
mov
in
ss
push
jae
bound
test
imul
cmp
imul
jno
push
mov
les
nop
sbb
or
test
dec
jmp
in
enter
enter
call
xchg
dec
mov
push
pop
jb
bound
mov
jmp
cmp
push
adc
jp
fisubr
ja
leave
loope
inc
jl
dec
bound
sbb
aaa
lea
cld
inc
xor
jle
adc
(bad)
imul
fisttp
sbb
arpl
adc
xchg
add
mov
pusha
add
movs
not
dec
stos
retf
adc
arpl
add
dec
jbe
push
mov
jae
mov
ret
pop
sub
data16
into
cmp
or
mov
cld
ins
imul
mov
sbb
imul
sub
push
or
xor
aaa
rol
inc
js
sub
aam
jno
bound
ins
je
je
fisubr
inc
cld
outs
or
jns
xor
sub
jne
fs
cmp
fcmovu
es
push
fsubr
dec
jns
xor
adc
pop
or
push
in
mov
and
add
jbe
mov
push
dec
push
sbb
dec
push
adc
or
sub
add
in
dec
jne
sbb
mov
lock
xor
sar
xchg
xor
or
xor
mov
add
int3
add
xor
and
add
jo
xor
adc
inc
push
xchg
shl
cmps
clc
cmp
dec
xchg
loope
imul
add
ins
pushf
sub
sub
fmul
push
sbb
inc
retf
push
xchg
or
cmp
fadd
add
xor
push
inc
jmp
jne
inc
jl
(bad)
jmp
sub
inc
add
or
add
ins
dec
jb
inc
dec
sbb
or
test
jb
push
inc
rcr
xor
or
push
jb
adc
jne
dec
(bad)
das
add
addr16
ss
inc
and
xchg
inc
push
in
push
or
inc
test
jbe
xor
or
pusha
rol
xchg
in
(bad)
aam
push
add
jp
into
movs
les
mov
pop
dec
inc
push
mov
sahf
inc
dec
push
dec
jae
adc
dec
cli
and
cmp
sbb
js
aaa
or
or
inc
dec
outs
inc
push
dec
and
aaa
pusha
push
fiadd
push
jo
cmp
dec
add
not
push
enter
xor
fs
inc
mov
jae
ret
mov
dec
inc
add
or
ins
mov
or
add
(bad)
jp
mov
jne
jae
push
dec
inc
loopne
jbe
pushf
rcl
fisub
xchg
rol
sbb
xor
popa
mov
bound
push
bound
dec
repnz
enter
fs
les
sbb
enter
sbb
or
sub
mov
enter
push
cli
shl
aam
pop
shl
xor
jno
jle
xchg
test
add
sbb
push
fild
xor
addr16
retf
scas
push
xor
push
inc
jmp
sbb
jb
out
add
nop
(bad)
data16
movs
xchg
add
into
jmp
xor
(bad)
in
mov
pop
push
(bad)
and
sbb
leave
cs
ja
cwde
call
fimul
(bad)
dec
dec
push
xchg
mov
jp
shr
add
aam
adc
cwde
popa
xor
shr
shl
push
bound
dec
cmp
imul
sub
dec
popa
cld
or
es
mov
mov
dec
xor
es
or
xchg
shl
push
push
mov
mov
mov
push
cmp
or
lock
cld
stos
and
test
inc
in
add
(bad)
dec
or
sbb
sbb
push
jne
fidiv
jbe
adc
test
imul
adc
in
or
gs
into
push
xchg
push
lock
add
dec
dec
xor
stos
ret
cwde
dec
adc
xor
xchg
xchg
xchg
push
add
mov
xor
push
xchg
dec
mov
push
inc
mov
mov
sbb
and
mov
xchg
mov
jo
cmp
mov
stos
or
xor
lds
add
xchg
cmp
push
or
push
jo
fs
aaa
dec
pusha
(bad)
(bad)
push
inc
xchg
ss
add
sbb
cwde
mov
mov
arpl
jp
pop
hlt
sub
push
outs
inc
dec
pusha
add
mov
add
or
ins
scas
sub
je
push
inc
push
addr16
add
add
gs
push
je
sbb
rcl
sbb
jb
inc
inc
inc
cmps
retf
push
ins
outs
xor
jne
push
push
nop
push
push
mov
in
cwde
push
movs
xor
in
scas
xchg
adc
ins
mov
adc
xor
dec
mov
mov
inc
mov
push
xor
mov
pushf
ins
inc
(bad)
sub
dec
or
call
pop
ja
push
int3
adc
cmp
cdq
sbb
jns
dec
ja
sahf
(bad)
cmps
xchg
or
push
inc
jecxz
or
xchg
adc
dec
pop
sub
xchg
stos
cmp
adc
(bad)
cmp
pushf
dec
mov
push
mov
ficom
xor
push
dec
cmp
cmp
add
fs
addr16
xchg
bound
adc
push
rcr
dec
in
xor
adc
shr
xchg
movs
mov
mov
push
add
xor
push
push
scas
ins
pushf
test
add
inc
pusha
cld
imul
and
xchg
push
les
bound
mov
test
arpl
inc
adc
dec
test
outs
xchg
jo
add
fs
dec
out
add
and
inc
imul
mov
mov
inc
dec
pop
cwde
push
inc
stos
or
aaa
jle
mov
sbb
ins
imul
xor
push
xor
mov
jne
or
ins
pusha
xor
xchg
ret
mov
sbb
mov
and
shl
out
movs
or
sub
adc
cld
mov
jl
repnz
rcr
dec
push
bound
sbb
js
xchg
add
pop
mov
push
jns
jns
pusha
dec
inc
jb
sub
adc
push
inc
retf
push
ins
xor
ja
push
inc
fisubr
push
inc
data16
ss
mov
mov
out
nop
xor
or
or
xchg
cmp
mov
pop
push
pop
push
push
push
fs
jae
mov
loopne
push
js
dec
mov
rol
xor
push
arpl
add
inc
imul
icebp
pop
mov
or
inc
add
adc
xor
add
push
nop
push
jl
xchg
cmps
fdivr
ret
xchg
mov
arpl
loope
mov
dec
addr16
mov
add
push
xchg
inc
jb
xor
inc
inc
and
enter
out
or
xchg
mov
push
xor
jns
pop
xchg
push
loope
push
xor
mov
ret
out
sahf
cmp
xor
fld
inc
mov
xchg
(bad)
mov
into
aaa
outs
jbe
jo
add
fisubr
je
xor
pop
dec
inc
sub
pop
fs
jne
inc
push
movs
xor
jmp
dec
inc
jns
push
rcl
push
idiv
lods
push
shl
dec
jo
add
aad
xchg
les
nop
imul
mov
mov
jb
(bad)
mov
dec
push
xor
and
pusha
jb
cs
mov
push
and
xchg
cli
gs
and
pusha
pop
mov
sbb
ss
ret
in
dec
xor
dec
or
adc
test
push
mov
inc
push
sbb
rcr
dec
adc
push
test
inc
pop
fdiv
aaa
cmp
cmp
dec
push
in
sbb
nop
jle
dec
push
sar
push
pop
push
cmp
js
jl
stos
ret
lock
add
les
push
data16
in
push
push
sbb
add
inc
outs
add
bound
push
sbb
cwde
(bad)
sbb
mov
and
inc
or
hlt
adc
rcl
clc
repnz
and
or
xchg
retf
xchg
and
and
sbb
cmps
or
cmp
rcl
or
dec
jp
sub
sub
cmp
(bad)
bound
mov
test
sahf
fidiv
cld
shr
dec
shl
mov
nop
adc
dec
mov
fsubr
ins
push
add
push
xchg
adc
mov
fmul
fimul
dec
scas
test
movs
mov
in
ret
xor
movs
inc
sub
mov
jle
push
arpl
js
imul
mov
test
dec
jno
jmp
and
outs
mov
dec
je
push
imul
adc
cmp
fisubr
jae
imul
add
sar
inc
xchg
push
or
mov
inc
xchg
stos
add
hlt
xor
mov
jb
inc
inc
jo
dec
les
test
pop
je
push
ss
rcl
push
in
sub
or
push
push
xor
adc
bound
scas
add
ins
ins
fs
jb
cmp
push
ficom
push
inc
hlt
push
pusha
cld
mov
pop
dec
dec
mov
add
jl
jbe
jne
out
mov
in
push
test
(bad)
bound
sbb
or
dec
sub
outs
jo
in
xchg
sub
and
mov
mov
inc
jo
push
dec
adc
push
mov
xchg
les
push
in
sub
retf
and
or
mov
push
mov
mov
add
or
xor
push
and
xchg
ror
dec
or
outs
lock
lds
add
outs
ja
popa
popa
dec
sub
push
sbb
retf
push
dec
test
dec
leave
sub
jbe
jno
add
add
dec
xor
jb
pushf
xchg
add
movs
inc
adc
cmps
outs
mov
mov
fsub
fcom
jae
cmp
fisub
inc
pop
push
jno
jae
cli
inc
pop
jno
inc
and
cmp
(bad)
aam
adc
or
push
movs
lea
into
jns
jae
je
popa
mov
adc
fmul
outs
retf
xor
add
aam
lock
ins
lods
xor
sub
pusha
dec
push
retf
push
inc
popa
and
xor
add
adc
push
outs
in
push
ret
int3
inc
mov
jge
or
inc
cli
bound
push
aaa
add
pusha
xchg
pop
mov
sahf
push
ss
adc
(bad)
repnz
inc
test
jbe
pop
hlt
ja
mov
call
ja
xchg
jb
imul
nop
enter
mov
jne
push
jp
out
mov
mov
ins
and
cwde
push
dec
mov
(bad)
cmp
add
inc
daa
or
xor
push
push
(bad)
les
add
scas
ret
mov
data16
hlt
push
ins
sub
adc
push
and
lock
enter
push
popa
pop
add
ins
add
mov
(bad)
bound
dec
xor
mov
(bad)
push
mov
loope
xor
mov
(bad)
cmp
push
inc
pop
xchg
add
inc
mov
inc
inc
ficom
mov
into
push
dec
out
add
cli
les
mov
movs
jne
mov
push
pop
dec
in
xor
les
shl
(bad)
stos
fcom
addr16
rol
pop
ja
jo
cmp
push
nop
clc
inc
xor
(bad)
push
dec
aaa
mov
inc
imul
xor
or
push
cmp
push
push
(bad)
push
popa
push
movs
mov
mov
js
dec
push
jae
push
je
loop
or
jo
sbb
or
leave
xchg
xchg
jp
fs
push
and
and
mov
adc
aam
add
jl
popa
and
jo
adc
push
and
jbe
loopne
dec
stos
add
(bad)
mov
sub
push
nop
xor
into
sahf
(bad)
mov
aaa
inc
cwde
call
cmp
xor
jo
out
out
ret
and
xchg
push
and
in
es
and
out
adc
mov
outs
inc
or
in
ja
jmp
mov
vmread
dec
push
xor
rcl
inc
ins
stos
xchg
sub
push
sub
mov
push
adc
or
cmp
and
pop
inc
mov
push
xchg
je
aaa
sbb
inc
je
popa
dec
dec
add
dec
cmps
add
sbb
retf
pop
dec
ins
dec
push
imul
sub
push
push
xor
cdq
loope
loopne
fisub
call
or
xor
call
jne
push
mov
xor
mov
xor
shl
nop
push
fdivr
bound
jb
push
and
or
inc
inc
inc
cs
shl
adc
nop
cmp
daa
or
fs
push
aaa
sub
and
xor
mov
adc
bound
pop
dec
dec
and
push
push
mov
mov
xor
sub
sub
in
pop
rol
and
lock
pop
pushf
retf
inc
inc
pusha
push
push
and
sub
inc
outs
clc
push
xor
shl
imul
pusha
or
outs
dec
mov
adc
inc
add
js
ins
jp
mov
mov
inc
popa
pop
jns
adc
inc
cmp
push
jne
push
sbb
jo
jo
dec
mov
bound
mov
pusha
imul
test
dec
and
mov
aam
retf
je
popa
or
push
bound
add
cdq
sbb
sbb
xor
dec
mov
adc
data16
mov
pop
scas
(bad)
in
sbb
fwait
push
dec
jb
dec
test
cmp
or
jp
test
dec
or
dec
push
push
inc
retf
xor
je
inc
xchg
xor
xor
dec
push
adc
ins
mov
aam
inc
add
dec
or
aaa
add
inc
xchg
adc
sub
push
or
xor
add
call
dec
mov
call
or
add
inc
imul
shr
into
popa
dec
cwde
mov
loop
fsubr
mov
sub
add
push
push
push
sub
js
sbb
xor
mov
sub
lods
in
push
leave
or
call
call
imul
dec
mov
in
mov
push
in
mov
js
and
(bad)
cmp
push
add
inc
push
xchg
push
inc
sub
xchg
sbb
test
retf
adc
push
push
adc
loop
adc
dec
loope
push
dec
dec
push
push
pop
xchg
dec
adc
xor
push
add
jle
dec
sub
cmp
jbe
test
xchg
lock
mov
xor
xor
jb
cwde
mov
and
mov
add
and
imul
dec
adc
push
xor
adc
inc
add
mov
test
cs
push
cmp
aaa
mov
gs
add
adc
and
in
or
jb
lock
jns
cmp
out
inc
add
and
fcom
jb
fmul
dec
dec
dec
push
inc
and
imul
dec
jbe
hlt
and
xor
add
out
and
dec
aad
inc
add
inc
imul
fs
mov
or
(bad)
out
or
or
movs
sub
ins
fs
push
adc
adc
adc
mov
xor
mov
mov
retf
mov
inc
inc
movs
sbb
add
add
dec
and
pop
stos
xchg
rol
inc
inc
mov
data16
cmp
dec
push
push
push
dec
adc
sbb
adc
inc
dec
aaa
sub
push
sub
inc
inc
and
and
xchg
lea
pusha
nop
mov
or
pusha
mov
fdiv
or
push
push
mov
js
dec
mov
cmp
push
ret
push
arpl
addr16
xor
jno
push
xor
push
jle
movs
pop
dec
mov
inc
cmp
dec
sub
and
add
or
test
sub
push
call
jb
push
repnz
les
mov
xor
mov
add
mov
bound
mov
mov
test
outs
mul
dec
add
inc
mov
sbb
cmp
or
jp
adc
sub
ficom
and
sub
add
xor
mov
adc
jns
push
dec
and
(bad)
xor
pop
cmp
add
test
mov
inc
add
and
cmps
jbe
out
xor
in
push
jo
cmp
outs
adc
gs
or
or
cmp
dec
call
fdiv
inc
je
inc
cmp
addr16
xchg
mov
mov
or
sbb
test
rol
test
or
sub
inc
adc
sbb
jbe
and
and
sub
ss
push
xor
xor
and
xor
cmp
mov
push
and
push
movs
adc
inc
pop
call
or
inc
mov
adc
jb
push
push
out
mov
jnp
outs
xor
sbb
and
popa
jb
dec
xor
inc
sbb
mov
lods
movs
lock
xor
xor
adc
dec
sub
dec
popa
xor
lock
push
xchg
cmp
js
cmp
js
dec
popf
mov
sbb
retf
bound
ret
loopne
pop
ds
pop
pop
sub
fimul
jbe
push
push
dec
add
or
lock
adc
adc
mov
jns
(bad)
push
cdq
in
pop
and
cwde
loop
call
dec
loop
shl
xchg
and
ins
mov
mov
dec
cmp
ins
imul
lods
retf
aad
enter
or
cmps
pop
inc
out
adc
test
inc
adc
cmp
and
inc
push
rcl
push
push
pop
into
movs
xor
sub
(bad)
rcl
xor
jmp
xor
xor
add
jne
cli
fbld
push
mov
inc
adc
xor
inc
add
pushf
ret
movs
in
cmp
dec
cmps
inc
xchg
sub
dec
mov
jns
fiadd
dec
jl
add
ss
mov
or
jp
or
popa
fidivr
jae
jbe
cwde
mov
add
cmp
push
imul
xor
mov
nop
dec
cmp
into
cdq
sub
xchg
scas
add
dec
ins
lods
adc
inc
inc
adc
adc
adc
xor
add
rol
sub
push
pop
shr
stos
dec
inc
call
sbb
(bad)
les
xor
ins
enter
outs
dec
dec
push
imul
mov
outs
(bad)
rcr
mov
dec
jae
outs
popa
cmps
ss
bound
push
dec
push
fdiv
push
(bad)
test
mov
cs
loopne
sub
xchg
shl
xor
add
xor
push
xchg
or
cmp
push
push
or
repnz
data16
dec
and
push
jb
push
mov
dec
adc
imul
push
inc
or
mov
je
cdq
jo
and
inc
sbb
loopne
sahf
ins
xchg
loopne
and
mov
data16
cwde
push
xor
nop
js
dec
nop
add
out
aaa
cmc
adc
mov
add
fs
js
test
je
ficom
mov
push
or
aaa
imul
clc
push
arpl
ins
mov
push
ror
mov
jp
test
mov
dec
cmp
jno
inc
bound
xor
xchg
xchg
push
bound
push
jne
gs
les
mov
adc
mov
ins
nop
pusha
jl
fs
mov
dec
mov
test
pop
cmp
push
shl
outs
inc
mov
push
push
and
adc
inc
daa
add
rcl
inc
push
ss
call
pop
ret
push
dec
jno
and
stos
enter
add
call
jne
xor
mov
add
xor
pop
ror
mov
push
dec
jne
outs
out
sub
xchg
fsubp
mov
xor
call
loopne
xor
fild
loope
push
outs
into
jbe
inc
and
enter
fsubr
loope
add
add
push
(bad)
jne
call
pop
sub
test
sbb
mov
shl
jo
mov
cmps
sub
rol
xchg
inc
mov
cs
bound
adc
add
adc
out
mov
sbb
jno
mov
push
push
sub
sub
dec
dec
push
mov
ins
mov
cmp
pop
inc
push
inc
cmp
aaa
sub
mov
jb
sub
mov
jp
inc
xor
dec
adc
dec
xchg
add
cs
xor
ins
or
and
arpl
add
rol
jle
inc
add
xor
xor
push
sub
jbe
dec
popa
dec
test
loopne
jo
jle
pop
push
and
jno
xchg
popa
in
mov
add
jo
test
dec
ret
sub
mov
enter
mov
call
lods
adc
inc
addr16
loope
inc
ins
ret
test
add
cld
cmp
sbb
inc
aam
push
ja
sub
push
inc
bound
dec
(bad)
push
jle
ins
xor
mov
gs
add
jo
push
addr16
leave
sub
imul
js
push
mov
cli
addr16
xchg
and
sub
or
imul
inc
stos
dec
push
mov
inc
xchg
cmp
dec
push
cs
sub
test
clc
push
outs
inc
xchg
nop
aam
add
push
pop
and
dec
and
xchg
adc
and
js
or
pushf
push
pop
ss
add
inc
mov
add
jb
fcom
or
sub
es
inc
cli
scas
clc
pop
mov
push
fsubr
popa
popa
xor
jbe
ror
jb
lods
adc
or
and
adc
mov
pop
inc
arpl
outs
js
shl
push
cmp
sub
mov
inc
inc
dec
xor
into
dec
fsubr
dec
imul
push
inc
sub
jns
push
(bad)
movs
arpl
push
cs
pusha
inc
ja
pop
mov
adc
mov
dec
xchg
push
loop
xor
inc
fidiv
ins
jb
and
add
shl
adc
movs
scas
add
stos
inc
and
lods
or
add
dec
add
or
loope
je
pop
hlt
or
sbb
xchg
sbb
or
jg
sbb
fcom
dec
dec
inc
push
inc
ror
or
push
outs
fs
xor
push
and
and
rol
jne
mov
push
push
adc
enter
ins
stos
and
inc
push
inc
xchg
sbb
test
jo
push
pop
jl
adc
jp
not
jnp
dec
inc
lahf
scas
jp
dec
pusha
push
cmps
jbe
inc
jo
sahf
add
outs
aaa
push
test
dec
mov
mov
daa
nop
cmp
(bad)
ret
ss
inc
dec
in
jns
xor
mov
aaa
jne
pushf
rol
sub
fs
push
test
push
dec
int3
fadd
test
test
and
mov
loopne
sub
xor
xor
mov
adc
pop
sub
rcl
mov
push
jbe
mov
push
pop
pop
(bad)
in
jb
test
adc
sub
adc
or
dec
sub
and
sbb
sub
xor
push
aam
fdivr
add
stos
adc
and
es
sbb
dec
inc
dec
add
ss
pop
xchg
int
inc
dec
cmp
inc
jne
pop
ins
jecxz
dec
push
mov
inc
sbb
sbb
and
ja
arpl
nop
cmps
add
and
dec
(bad)
push
es
xchg
and
std
mov
imul
je
inc
mov
inc
xchg
or
adc
dec
fcomp
cmps
data16
and
push
mov
test
je
popa
es
stos
and
fidiv
fidiv
push
or
ficomp
nop
sub
test
inc
adc
outs
and
push
or
bound
or
and
push
js
stos
inc
hlt
fdiv
lock
jl
push
inc
sbb
jo
adc
sub
push
cmp
pop
jo
call
lods
dec
push
dec
nop
mov
cmp
dec
mov
add
dec
movs
adc
mov
xchg
or
gs
push
mov
leave
imul
mov
fwait
jbe
push
push
je
xchg
fwait
xor
imul
dec
push
add
cmp
outs
call
push
(bad)
adc
dec
adc
dec
inc
scas
add
inc
pop
popa
push
adc
jge
pop
xchg
xor
inc
sub
inc
xor
loopne
inc
jo
jp
bound
add
mov
into
inc
push
add
mov
or
push
pop
dec
add
ins
push
adc
inc
jle
mov
mov
and
bnd
test
mov
jp
out
inc
dec
mov
xor
test
cmp
push
pusha
jb
dec
fiadd
popf
add
sbb
jmp
div
sahf
pusha
mov
inc
fisubr
dec
inc
push
xchg
push
mov
and
inc
stos
inc
(bad)
outs
rcl
push
cdq
xchg
fidivr
or
xor
je
dec
imul
xchg
je
mov
xor
inc
fsubr
je
inc
pop
mov
frstor
cli
inc
xor
jb
inc
adc
push
and
inc
ret
dec
inc
dec
test
push
xchg
pop
test
push
imul
sbb
test
ja
xchg
(bad)
jbe
dec
push
inc
je
xor
ficom
inc
div
push
popa
ss
movs
adc
(bad)
and
stos
les
push
jo
mov
and
dec
push
lods
fdiv
sub
sbb
pushf
inc
inc
add
stos
sub
xor
cmp
lods
jo
lock
push
adc
imul
pop
ins
loop
adc
sub
movs
dec
jmp
out
adc
jbe
inc
add
add
xlat
inc
fmul
loopne
or
ins
imul
mov
jo
stos
dec
mov
push
es
dec
pop
jmp
dec
jbe
lds
push
mov
inc
add
mov
mov
dec
je
nop
dec
add
push
sub
mov
or
push
mov
pop
out
out
xchg
inc
aaa
jp
les
jno
xor
push
inc
xchg
mov
(bad)
jb
push
lds
hlt
push
dec
dec
lods
add
inc
ins
push
mov
fs
imul
fcom
(bad)
fcom
push
rol
xchg
add
add
stos
hlt
mov
jae
movs
dec
inc
push
push
sbb
push
inc
aaa
rol
xor
outs
mov
xor
push
add
bound
rcr
xor
jb
push
dec
or
sub
inc
push
fs
pop
dec
jns
sub
scas
dec
sub
dec
dec
push
inc
je
add
dec
in
jbe
adc
push
ss
mov
in
push
je
mov
mov
outs
mov
push
(bad)
add
dec
data16
add
sbb
aam
enter
mov
(bad)
dec
ret
sub
add
dec
sbb
fcmove
inc
add
push
xchg
retf
push
cli
mov
into
mov
jmp
nop
dec
xchg
stos
lods
popa
in
cmps
mov
pop
sbb
xchg
jb
(bad)
adc
pop
adc
or
bound
test
int3
or
bnd
test
pushf
call
jbe
add
dec
push
jle
loope
and
sub
and
outs
and
test
inc
retf
mov
test
xchg
sub
dec
jae
sub
push
jne
pop
push
inc
or
push
or
mov
ret
popa
add
push
push
test
jns
xchg
loopne
nop
adc
xchg
or
fisubr
mov
dec
js
push
dec
inc
test
cmp
push
and
sub
mov
add
or
adc
movs
add
dec
pop
push
sbb
js
pop
inc
push
push
push
cmp
jo
adc
outs
mov
adc
xchg
inc
sbb
aad
push
push
jp
ss
popa
inc
sub
fcom
and
sbb
jo
test
rcr
sbb
or
push
lods
jp
sbb
or
mov
outs
popa
jo
jbe
dec
xor
pop
pushf
imul
nop
inc
imul
rol
mov
test
fs
jb
int3
xchg
(bad)
sbb
ins
dec
jno
aaa
or
xor
push
dec
add
inc
mov
dec
test
xchg
rcl
test
inc
pop
mov
push
dec
test
imul
pop
shl
ss
dec
or
je
ja
bound
or
enter
dec
inc
mov
lods
push
arpl
and
xor
sub
aad
adc
arpl
and
cmps
fcom
dec
dec
bound
test
push
and
push
cmp
and
and
dec
imul
and
mov
call
push
xchg
cmps
test
rcr
dec
pop
sub
jo
pop
pop
add
cli
pop
push
inc
dec
cmps
dec
dec
dec
sar
or
cmp
push
xchg
adc
arpl
inc
inc
xchg
bound
push
dec
mov
outs
inc
in
mov
sub
push
dec
popa
xchg
xchg
dec
int
push
scas
rol
xchg
xchg
adc
js
fdiv
mov
inc
mov
push
and
add
jb
pop
ins
dec
mov
jbe
cmps
and
add
js
int3
mov
ins
call
dec
dec
inc
arpl
dec
js
dec
mov
je
ret
push
push
in
es
xor
mov
clc
push
dec
leave
add
ins
xchg
hlt
jp
xor
xor
fwait
test
push
jno
push
dec
xor
shr
rcr
add
dec
inc
sub
push
or
xchg
or
inc
push
push
loopne
pop
dec
hlt
dec
or
jns
inc
inc
dec
rol
bound
push
aaa
push
push
push
imul
daa
mov
mov
jb
or
jl
fidiv
call
dec
push
add
xchg
push
dec
inc
and
int3
inc
push
into
loopne
ins
ss
xchg
and
push
xor
mov
out
fst
and
xor
ret
mov
jne
data16
in
js
out
js
jb
pop
jo
into
pop
je
xor
add
and
cdq
mov
xor
sbb
test
sub
es
cmp
ins
call
movs
pop
push
push
mov
xchg
dec
jns
test
push
and
push
inc
push
xchg
mov
adc
push
mov
aaa
push
dec
xor
cmp
inc
jp
add
cmp
push
add
mov
inc
push
arpl
inc
cmps
mov
add
test
xor
add
push
push
push
dec
sbb
dec
loopne
arpl
xchg
cli
pop
jns
mov
push
or
outs
dec
les
mov
jb
push
popf
in
adc
sub
add
pushf
cs
test
call
fiadd
mov
jno
outs
test
inc
push
jecxz
jecxz
movs
push
jns
and
push
jo
or
imul
mov
pop
lods
int3
add
lods
out
hlt
inc
fdivr
and
mov
dec
push
mov
dec
mov
xchg
jp
jb
or
(bad)
sub
in
xor
call
inc
leave
and
sub
sub
int3
adc
add
je
pop
adc
ficom
cmps
pusha
push
add
push
jle
and
adc
sahf
test
push
outs
adc
fidiv
xor
push
jb
push
add
bound
data16
mov
inc
pop
or
scas
lds
push
pop
scas
adc
enter
jb
xor
add
and
adc
push
xchg
pushf
mov
adc
sbb
xor
push
jmp
jae
pusha
je
push
push
in
xchg
push
(bad)
call
nop
out
mov
or
lock
out
push
fs
sar
jne
add
pusha
ret
xor
outs
retf
je
sbb
jno
inc
or
adc
int3
xchg
shr
rcl
aaa
outs
dec
test
adc
pop
bound
sbb
mov
enter
inc
test
cwde
inc
mov
xor
xor
ins
xchg
or
push
es
mov
ds
adc
pop
clc
int3
mov
adc
push
or
fs
push
call
push
lods
loopne
inc
popa
sahf
mov
xor
add
loopne
and
outs
xchg
mov
cld
xor
fcom
pop
push
and
sbb
push
inc
push
stos
xor
xor
dec
xor
in
add
push
ins
inc
inc
jle
jmp
addr16
sbb
mov
js
push
jne
mov
shl
xchg
push
sbb
adc
push
push
sub
jb
cmps
xor
frstor
jmp
ret
loop
in
mov
adc
push
push
xor
outs
sub
and
mov
push
arpl
xchg
dec
xchg
mov
mov
and
call
push
push
(bad)
addr16
not
ss
mov
dec
inc
push
inc
cmp
movs
jbe
pop
inc
or
pop
aad
sub
mov
push
push
fst
push
mov
jb
push
push
push
popa
mov
or
pusha
sbb
xchg
test
add
imul
neg
dec
or
or
stos
xchg
lods
js
je
xor
xor
push
push
js
or
jp
push
push
sub
shl
push
and
inc
add
sbb
cmps
pop
sbb
into
cld
out
add
dec
sbb
dec
cmp
inc
cmps
dec
cmp
or
pushf
or
adc
pusha
cmp
add
pop
dec
add
mov
inc
inc
(bad)
fs
nop
or
add
dec
sbb
dec
pop
dec
bound
dec
stos
lods
push
sub
aaa
cmp
ins
mov
mov
(bad)
dec
mov
dec
push
mov
ss
je
pushf
xor
dec
and
dec
push
jl
fcom
sub
addr16
or
add
movs
and
sar
(bad)
mov
and
or
xor
repnz
pop
add
in
or
push
or
ja
sub
xchg
add
push
adc
push
adc
test
xchg
pop
jmp
dec
je
pop
or
add
push
in
xor
sbb
xchg
test
je
scas
jb
push
gs
retf
arpl
movs
xor
adc
outs
test
pop
cs
sub
add
cmps
push
adc
push
pop
mov
dec
jno
pop
dec
push
sar
jmp
bound
add
mov
jmp
mov
sbb
add
mov
jo
sub
cmp
dec
rcl
bound
jp
xor
mov
dec
es
ja
xchg
cmp
add
pop
inc
push
sub
data16
xchg
pusha
movs
and
and
push
add
test
adc
adc
add
mov
xchg
xchg
mov
push
cs
xchg
xchg
stos
jbe
stos
cmp
arpl
sbb
in
push
ret
and
loop
cmp
pop
and
ficom
fmul
ins
cmp
dec
shr
scas
test
pop
inc
add
push
pop
out
jl
sbb
pop
sub
xor
and
test
pop
mov
push
pusha
shl
loop
and
adc
cmp
pop
push
in
out
mov
test
jns
xchg
and
add
pushf
loop
lods
dec
adc
jbe
dec
inc
xor
push
or
lea
les
dec
(bad)
in
inc
leave
and
mov
inc
inc
enter
test
pop
fidiv
cmp
fs
sbb
jb
jmp
in
inc
dec
add
shl
dec
mov
mov
sub
jo
sub
jbe
inc
jae
ja
inc
inc
inc
es
adc
xor
fwait
mov
imul
mov
rol
mov
sbb
push
inc
jbe
jb
pop
sahf
sub
enter
jmp
shr
nop
ins
fisub
call
sbb
inc
adc
cmp
loopne
dec
or
or
add
dec
mov
xchg
ins
pop
not
popa
push
push
xor
adc
dec
sub
inc
(bad)
and
push
push
mov
xor
ins
xor
inc
and
or
push
add
push
fld
cs
push
sbb
into
mov
xchg
aam
push
retf
aaa
push
xor
loopne
inc
scas
test
imul
ret
dec
inc
xor
push
call
dec
inc
xchg
xor
hlt
mov
add
shr
adc
push
call
pop
cli
outs
ds
movs
mov
fcom
int3
inc
add
dec
add
xor
mov
movs
xlat
or
xor
dec
ss
mov
xor
ror
or
les
push
xor
cld
scas
mov
adc
cwde
ins
shl
ins
inc
add
sub
push
push
je
mov
cmp
ins
add
je
ss
add
rol
or
js
pop
inc
mov
mov
push
rcr
nop
dec
push
lods
out
arpl
data16
push
push
push
push
inc
xor
dec
je
fst
push
cli
sub
jno
scas
jo
mov
and
xor
inc
jno
push
fsubr
xor
adc
adc
out
jp
dec
adc
or
stos
jmp
add
inc
outs
jp
(bad)
mov
jbe
add
push
out
arpl
ins
shr
test
push
shl
xor
mov
jbe
inc
add
leave
push
jns
mov
inc
arpl
ss
loopne
cli
repnz
mov
mov
outs
dec
xor
xchg
call
adc
rol
mov
(bad)
not
adc
ds
dec
ret
sbb
fimul
inc
or
xchg
cmp
cmp
mov
fdiv
push
test
cmp
xchg
add
fmul
xchg
inc
imul
push
fs
cmp
out
mov
push
dec
fmul
js
jb
inc
xchg
pop
dec
je
jbe
add
mov
inc
fs
idiv
test
inc
jbe
dec
jne
jbe
mov
sub
add
push
push
jne
and
xor
jle
add
xchg
inc
inc
pop
popa
sub
sub
mov
push
mov
and
into
outs
push
inc
add
cwde
loopne
push
stos
fsub
sbb
cwde
push
jns
rol
cmps
push
aaa
ja
or
mov
dec
sub
dec
jp
dec
ins
push
pop
or
dec
xchg
jle
jb
test
pop
test
cmp
adc
mov
push
mov
ins
dec
push
xor
mov
jbe
push
dec
outs
xor
int
xchg
dec
push
mov
adc
jp
movs
popa
mov
xor
cdq
cld
push
hlt
popa
outs
inc
jmp
(bad)
fcom
jne
sbb
imul
sub
add
add
dec
or
jle
adc
sub
push
jno
nop
push
jne
dec
inc
jno
es
pop
push
imul
jo
or
add
dec
xor
adc
mov
fisubr
jp
sahf
xor
adc
and
jge
and
ins
jp
mov
imul
test
call
mov
push
jb
test
jb
bound
cmp
or
push
dec
sub
dec
mov
test
mov
test
dec
adc
arpl
push
push
xchg
mov
jl
pop
bound
enter
mov
pop
outs
js
es
jbe
cli
push
push
mov
or
add
aam
int3
push
les
dec
inc
enter
inc
cmps
pop
jle
rol
stos
or
dec
xor
push
or
inc
scas
xor
dec
arpl
pop
stos
xor
je
and
push
jl
sbb
push
pop
inc
push
jno
call
dec
inc
pop
arpl
dec
mov
sub
jbe
inc
scas
cmp
test
pop
imul
test
inc
dec
outs
xor
data16
shr
movs
mov
push
cmp
aam
pop
push
add
outs
pop
adc
add
push
adc
inc
xchg
popa
inc
push
sub
sub
xor
jns
or
xchg
(bad)
iret
add
imul
jp
mov
jbe
pusha
inc
mov
xor
push
jo
xor
xor
sbb
mov
jp
outs
enter
inc
mov
mov
add
retf
dec
xor
dec
call
sub
nop
fist
add
int3
add
mov
and
js
imul
xor
sbb
jne
push
mov
test
inc
mov
sbb
or
or
pop
inc
add
cdq
and
push
and
dec
test
inc
pop
(bad)
jo
js
imul
inc
inc
(bad)
pop
cmp
mov
mov
dec
mov
inc
cmp
xor
dec
jbe
ss
jno
imul
push
pop
js
sub
jp
popa
xchg
push
mov
xor
fisubr
xchg
sbb
inc
bound
jbe
sub
adc
in
mov
mov
inc
outs
inc
push
pop
push
shr
(bad)
fcom
and
pushf
push
sbb
add
rcr
jbe
in
push
sbb
push
inc
jo
xor
nop
inc
ss
retf
jbe
xor
pushf
in
dec
test
push
test
jb
popa
ret
cmp
add
cwde
xor
inc
bound
adc
jb
pop
aaa
inc
push
fcom
adc
jb
xor
adc
jb
cmp
jl
ss
xor
or
push
add
inc
inc
and
sbb
jb
pop
dec
movs
nop
add
fs
or
adc
inc
jbe
dec
pop
add
fld
jns
mov
xchg
inc
into
xor
push
inc
call
sbb
ins
pop
data16
movs
sbb
or
push
or
retf
mov
xor
popa
fadd
addr16
retf
push
dec
ss
mov
shl
aaa
push
dec
jbe
add
or
loope
test
mov
pop
mov
mov
cmp
mov
test
mov
jp
or
neg
add
loopne
pop
add
mov
aam
ss
push
ss
and
adc
dec
mov
outs
push
push
add
jmp
push
xor
push
(bad)
popa
add
les
dec
sub
test
cli
mov
and
adc
fld
ins
aaa
popa
and
div
push
xchg
inc
push
cmp
dec
and
dec
xor
or
dec
push
add
push
pop
mov
mov
ja
xor
sub
js
sbb
mov
push
and
dec
push
push
ret
push
mov
add
jb
pop
inc
cdq
dec
idiv
jae
adc
adc
je
ds
in
xor
mov
dec
bound
imul
mov
je
xor
dec
inc
xchg
dec
out
push
push
push
fimul
sbb
jp
xor
inc
add
js
jbe
pop
dec
inc
push
push
(bad)
nop
push
add
or
ficom
jnp
and
dec
xor
(bad)
or
aam
ja
push
dec
mov
fdiv
sbb
pop
or
and
and
mov
jge
xchg
lock
js
push
cmp
dec
push
xor
adc
mov
pop
in
jge
xchg
dec
mov
imul
jne
xor
inc
ins
mov
data16
xor
push
loopne
dec
jbe
pop
xor
or
js
add
mov
or
or
cmps
pusha
adc
les
imul
call
movs
in
cmps
jns
aaa
mov
jp
mov
and
push
popa
inc
or
push
adc
mov
and
or
cmp
push
mov
push
js
xchg
mov
and
fs
add
dec
stos
xchg
nop
inc
outs
xchg
push
inc
in
adc
jbe
push
sub
outs
xor
fsubp
push
sub
push
adc
dec
inc
push
add
test
sbb
test
jno
(bad)
push
pop
xchg
xor
dec
mov
xchg
ins
enter
ret
or
ins
push
push
inc
(bad)
add
push
lods
push
cmp
add
imul
hlt
or
mov
jl
cmp
data16
push
cmp
pusha
jns
cmp
aam
in
push
mov
pushf
push
and
outs
xor
mov
xchg
gs
aam
push
cmp
jo
cmp
xchg
jno
jb
lock
push
loop
adc
push
jp
jae
inc
daa
and
push
arpl
cs
cmp
js
fst
fsubr
push
aaa
repnz
adc
js
sub
movs
dec
mov
cmps
dec
mov
dec
ficomp
sahf
mov
jns
add
(bad)
cdq
push
dec
adc
xor
ret
add
inc
pop
push
jmp
ror
jbe
movs
dec
je
sbb
sub
pop
and
push
cmp
arpl
cs
adc
jns
push
cld
jno
xchg
fdiv
pop
or
or
test
dec
sub
dec
sub
sub
cwde
sar
sbb
sub
add
nop
adc
mov
and
xchg
mov
add
mov
xor
bound
adc
aaa
js
push
jle
xchg
or
mov
pusha
je
adc
adc
dec
cmp
add
jae
cld
mov
shr
adc
pop
inc
fdivr
inc
and
ins
es
push
sbb
jmp
inc
xor
or
mov
adc
ja
dec
xor
cmp
ss
add
and
adc
xchg
mov
clc
ss
cmp
cmp
push
push
mov
dec
sbb
ins
lods
jns
lea
ja
xchg
add
sub
sbb
jle
outs
adc
xor
shl
xor
jb
fsub
xchg
push
nop
rol
call
popa
rcl
(bad)
jns
inc
and
cmp
mov
inc
sbb
inc
xor
cmp
push
shl
xor
loope
es
xor
inc
pop
dec
inc
cwde
jb
outs
jl
or
stos
sbb
retf
pop
stos
and
cli
outs
dec
add
push
inc
xor
js
inc
mov
or
ins
xor
inc
cs
adc
sub
lods
retf
xor
xor
out
clc
in
add
or
inc
aaa
lods
test
xor
mov
inc
cmp
dec
push
movs
nop
in
xchg
repnz
mov
and
add
data16
sub
add
xchg
xor
push
or
mov
inc
xor
mov
inc
bound
push
jp
cmp
or
hlt
and
sbb
push
jle
js
mov
jb
ret
sbb
add
jbe
nop
test
pop
mov
addr16
mov
pop
fsubr
cdq
sbb
add
inc
dec
add
mov
mov
cmp
(bad)
and
sbb
xchg
adc
cmp
aad
sbb
pop
fcom
outs
adc
add
mov
xchg
add
cdq
mov
jle
dec
and
xchg
mov
jl
sbb
push
inc
sub
xor
dec
ds
loopne
or
push
mov
push
adc
or
push
cmc
rol
adc
cmp
mov
mov
push
cwde
ss
add
xchg
cwde
xchg
adc
clc
fdiv
adc
xor
push
push
push
dec
(bad)
jmp
xchg
push
push
nop
dec
mov
out
push
pop
and
outs
or
in
xchg
mov
ins
adc
call
bound
xor
fmul
or
cmp
or
xor
inc
and
lock
xchg
pop
loop
imul
test
pop
fsub
jmp
dec
adc
test
lods
es
or
dec
in
jmp
push
les
shl
adc
jae
cmp
pop
and
push
inc
cmp
fs
push
call
mov
inc
sbb
test
add
push
xor
dec
inc
adc
imul
xchg
dec
dec
cdq
(bad)
iret
mov
push
call
lds
ss
push
adc
xor
and
inc
dec
xchg
pushf
push
test
dec
mov
jne
mov
xor
je
mov
je
shl
inc
test
jno
repnz
imul
dec
div
push
xor
or
lock
inc
mov
add
mov
outs
or
rcl
push
inc
jae
shl
or
inc
xor
mov
push
pop
test
adc
pop
mov
push
sbb
jne
mov
aaa
push
xchg
dec
add
push
stos
loope
push
gs
or
mov
fs
sub
les
call
xor
and
adc
cmp
cmp
or
push
dec
lods
fwait
xchg
ret
fs
xchg
xchg
add
mov
add
push
inc
and
test
push
and
xor
jbe
sub
sbb
ja
adc
or
pop
inc
sub
xor
pop
inc
in
or
dec
mov
jbe
fimul
inc
dec
(bad)
imul
in
sbb
call
xor
dec
push
aam
data16
xchg
push
dec
pop
sbb
sbb
dec
test
cmp
and
les
je
and
je
dec
imul
add
test
inc
movs
xchg
sub
inc
push
mov
mov
jbe
jle
loop
imul
pushf
js
mov
or
xchg
mov
add
adc
aam
shr
jb
xchg
push
and
sbb
nop
pop
mov
pop
aaa
into
dec
push
xchg
out
out
js
ins
mov
add
jbe
mov
mov
adc
cmp
dec
dec
add
mov
scas
pop
mov
dec
dec
jns
ins
jns
aaa
addr16
dec
jb
pop
test
mov
test
pop
outs
mov
mov
jp
push
push
scas
xor
aam
ss
fdivr
add
adc
adc
or
test
mov
push
enter
push
mov
mov
mov
je
xor
cmps
inc
ins
data16
xor
mov
sub
push
jno
jo
in
push
cmp
jns
and
dec
jo
movs
xor
push
xor
ins
dec
clc
and
mov
gs
push
pusha
retf
pusha
mov
pop
mov
pusha
mov
fs
push
loopne
cmp
push
sbb
fs
adc
pop
xor
test
or
popa
retf
or
lea
pop
dec
fisubr
jo
ss
shr
ins
jb
ja
imul
inc
mov
push
mov
mov
fs
ja
mov
stos
pop
mov
xchg
and
push
dec
or
dec
ins
xor
or
out
inc
lds
cmp
jae
dec
ret
or
inc
sub
push
jmp
pop
aaa
dec
push
inc
mov
loop
jle
mov
ins
adc
into
je
mov
push
mov
push
jb
dec
rcl
or
mov
cmp
inc
sub
fst
add
mov
jl
ins
push
inc
xor
in
and
icebp
sub
push
and
aaa
xchg
xchg
adc
test
mov
jbe
daa
add
xchg
inc
push
push
push
ds
xchg
push
call
dec
inc
jae
jno
mov
lods
(bad)
bound
xor
dec
and
ins
mov
inc
mov
fisub
and
pushf
lock
shl
xor
xor
mov
mov
or
push
push
and
jno
ret
jo
dec
jl
push
inc
inc
xchg
sbb
sub
addr16
jns
ins
test
push
movs
jo
ja
dec
jne
push
or
sbb
sub
push
jbe
xor
xchg
xor
dec
and
loopne
add
call
add
jb
inc
dec
inc
shl
movs
test
xor
fs
push
je
and
sub
pop
cs
dec
add
int3
pop
fcom
cmps
dec
sub
test
test
call
jne
inc
dec
nop
and
mov
and
cmp
jno
xchg
or
inc
mov
bound
and
jb
mov
xchg
scas
adc
ins
jno
cdq
xor
or
push
data16
fadd
mov
inc
push
imul
or
(bad)
mov
pop
mov
retf
pop
stos
inc
inc
mov
or
dec
shl
jmp
push
xchg
call
add
inc
push
retf
xor
adc
js
or
(bad)
or
dec
sub
mov
push
jo
dec
inc
ret
daa
mov
lock
popa
push
mov
jo
add
test
js
mov
ss
cmp
or
push
clc
inc
pushf
xor
cmp
inc
inc
pop
arpl
dec
inc
mov
dec
lea
push
fdiv
ret
outs
push
mov
dec
sub
pop
sbb
clc
or
xor
aaa
lea
xchg
les
cmp
jno
int3
dec
adc
fcom
push
fwait
sub
jecxz
xor
inc
mov
adc
push
es
leave
adc
fcom
je
sbb
fs
xchg
(bad)
add
pop
fmul
dec
aaa
sub
call
fmul
es
xor
cwde
push
ficomp
fisub
jmp
jae
cmp
bound
pusha
push
cli
cmp
or
and
sbb
xor
dec
pusha
movs
shl
cmp
js
mov
xchg
dec
test
test
imul
or
add
iret
fbld
push
add
dec
inc
jp
push
pop
inc
mov
test
dec
push
sub
push
push
push
sub
mov
sub
xchg
adc
mov
xor
push
jbe
push
mov
mov
in
aaa
jp
mov
push
addr16
bound
sbb
retf
cld
sbb
inc
xchg
push
fcomp
inc
leave
xor
pop
xchg
frstor
mov
inc
fs
add
and
xchg
fimul
or
sahf
mov
mov
jb
cmp
adc
jle
xor
rol
and
fimul
inc
out
sub
test
mov
sub
cs
push
repnz
imul
js
add
retf
push
mov
jne
test
mov
fs
adc
lods
xor
push
sbb
push
dec
xor
ret
push
xchg
push
push
xor
inc
rcr
repnz
mov
and
xor
xchg
outs
push
mov
push
test
inc
inc
xor
loope
xor
or
mov
push
inc
loop
movs
cwde
push
arpl
addr16
pushaw
fisubr
inc
adc
sbb
inc
cmp
mov
pop
sub
shr
inc
cmp
dec
loopne
or
sbb
inc
add
jmp
xchg
loop
push
outs
fimul
icebp
out
mov
push
dec
cmps
inc
jne
inc
dec
mov
inc
jmp
add
mov
or
inc
rcl
lods
push
xchg
and
dec
sub
scas
push
or
push
cmps
and
jb
or
js
dec
jb
xor
fs
retf
xchg
(bad)
push
ins
in
sbb
xor
xchg
add
js
ror
dec
push
es
gs
ins
inc
sbb
xor
ror
stos
fwait
mov
xchg
loopne
or
xor
push
push
ins
fnstsw
int3
and
pop
jne
and
je
je
xor
bound
xor
push
cmp
ss
dec
rcl
adc
adc
test
mul
shl
es
or
add
add
mov
movs
test
mov
cmp
dec
mov
push
jae
push
in
adc
ror
dec
sub
inc
sub
dec
dec
sahf
mov
jbe
inc
jmpw
xchg
fisubr
xor
nop
xor
ret
cli
js
push
mov
data16
sub
dec
add
jbe
xor
add
add
(bad)
ss
mov
fld
push
push
pop
pop
outs
mov
data16
test
ss
mov
push
inc
ror
dec
ret
xchg
push
inc
call
push
mov
ja
and
popa
push
mov
push
ins
pop
into
mov
aaa
push
push
and
inc
data16
add
or
or
retf
into
push
xchg
leave
clc
dec
cmp
pop
push
mov
cmp
mov
dec
push
sub
dec
xor
jp
pop
push
outs
xor
adc
cwde
push
daa
shr
xor
(bad)
and
inc
inc
xor
jo
inc
xor
cmp
or
xchg
push
inc
xor
icebp
or
out
lock
inc
imul
into
cmp
sub
mov
xor
fcom
add
push
ror
gs
mov
xor
add
dec
add
mov
xchg
in
adc
inc
add
cmps
fs
jo
sub
dec
and
sbb
jle
inc
pusha
xor
add
adc
and
cs
cdq
aam
call
xor
adc
jp
inc
mov
dec
sub
adc
add
enter
pop
xor
and
sub
sbb
inc
cmp
push
dec
xchg
inc
pop
or
jb
xor
xor
add
ret
mov
movs
rcl
inc
retf
xlat
jno
icebp
das
daa
push
arpl
int3
push
cmp
test
adc
push
and
and
mov
lock
or
stos
inc
xchg
ror
push
bound
sbb
push
xor
or
xchg
addr16
inc
and
bound
gs
push
loop
dec
les
push
popa
sahf
push
xor
sbb
add
(bad)
(bad)
bound
inc
fisubr
add
inc
bound
add
adc
ror
cmp
loop
or
adc
xchg
sub
retf
fs
or
adc
adc
dec
add
out
jae
dec
shl
test
or
xor
ds
add
fcom
cli
ins
fdiv
loopne
and
cmps
push
in
xor
mov
ins
mov
je
gs
ins
dec
call
imul
inc
adc
sub
dec
dec
add
pop
mov
mov
sub
nop
aad
inc
popa
xchg
inc
push
inc
mov
mov
xchg
jno
dec
stos
or
mov
test
imul
xor
jne
mov
addr16
dec
dec
enter
xchg
inc
xchg
push
call
in
fisttp
or
je
mov
enter
inc
test
jbe
popa
ja
and
dec
data16
pop
and
jo
push
test
dec
pushf
inc
aam
pop
inc
mov
xor
inc
sti
xor
addr16
out
shr
nop
mov
or
js
sbb
adc
mov
sbb
dec
adc
xor
cmp
cs
es
push
add
dec
rcl
and
xchg
mov
cs
inc
fs
jbe
es
mov
adc
and
sbb
add
loopne
ins
jae
xor
mov
xor
xchg
aam
js
cmp
inc
mov
jbe
push
test
and
rol
or
sub
pusha
mov
test
je
xchg
pop
shl
adc
and
push
stos
inc
pop
in
jmp
adc
xchg
mov
imul
sbb
jb
movs
js
sahf
les
sub
adc
ins
and
and
jmp
scas
add
mov
pop
mov
leave
fcom
sbb
xchg
dec
jo
popf
xchg
push
(bad)
outs
adc
jb
and
sub
addr16
pop
inc
in
ss
data16
xchg
sub
nop
test
mov
je
push
inc
repnz
dec
and
jo
add
cli
lea
pop
hlt
jb
jo
ins
popa
xor
adc
xor
and
ret
fwait
cdq
sahf
sub
popa
jo
test
xor
push
fadd
pop
dec
push
xor
or
cmp
retf
xchg
enter
fwait
add
ins
dec
pushw
ss
or
xor
sub
inc
push
or
mov
xor
in
movs
nop
and
in
adc
mov
cmp
push
sbb
mov
je
dec
repnz
add
add
push
or
sub
dec
aaa
add
push
dec
(bad)
push
dec
xor
fidiv
adc
dec
inc
push
arpl
mov
jb
cmp
push
cmp
or
inc
es
inc
mov
push
jb
add
push
jp
jle
push
push
mov
or
arpl
add
mov
scas
add
or
jp
mov
jp
push
ins
call
mov
sbb
mov
xor
test
popa
sub
ins
test
mov
xor
dec
push
das
(bad)
pop
xchg
jns
ins
dec
inc
xor
lods
(bad)
pop
cld
imul
imul
inc
xor
add
xchg
popa
xchg
rcl
ret
mov
xor
add
inc
mov
lods
test
ins
shl
inc
sub
sub
call
inc
cld
imul
ds
sub
test
and
cdq
adc
mov
push
dec
fs
xor
aam
pusha
push
out
or
push
adc
clc
add
pusha
dec
lods
bound
in
adc
xor
xchg
push
inc
pop
inc
push
rol
inc
out
add
adc
sub
inc
add
jb
test
dec
cmps
pop
and
sub
xor
and
retf
and
enter
enter
bound
dec
xor
or
jo
call
cs
enter
inc
jb
sub
push
push
pop
inc
jae
call
js
add
or
je
add
mov
dec
movs
xchg
mov
mov
sbb
loop
imul
xchg
loopne
arpl
pop
add
adc
je
jle
adc
in
and
xor
mov
mov
call
scas
rcl
push
sbb
rcl
xor
aaa
dec
aaa
shl
cmp
in
jne
frstor
pusha
inc
mov
jne
sbb
ret
shl
dec
sub
mov
in
push
add
add
xor
mov
int3
push
push
ret
cmp
inc
movs
sbb
add
add
and
inc
xchg
jbe
inc
dec
imul
dec
and
sub
inc
lock
mov
adc
sbb
loope
push
fidiv
mov
xor
idiv
dec
xor
and
inc
sbb
test
add
xor
add
dec
xor
mov
sub
mov
add
es
dec
bound
sub
mov
aam
xor
xchg
jo
movs
push
xchg
inc
jo
jo
add
aad
add
in
dec
push
sub
push
pop
fadd
ret
sub
sbb
ja
(bad)
dec
ja
out
lock
and
mov
inc
cmp
push
dec
jne
mov
or
xchg
mov
xchg
mov
into
dec
cmp
add
js
aad
stos
xor
xor
push
ins
inc
push
loope
add
adc
popa
out
add
loope
mov
cwde
jb
cmp
push
or
cmp
push
adc
sbb
cwde
mov
sub
dec
cs
movs
xor
push
or
xor
ror
or
ja
add
push
dec
adc
loopne
mov
arpl
jne
cld
fadd
xchg
or
into
test
and
test
fs
mov
or
pop
into
addr16
outs
shl
cmp
out
inc
aam
js
data16
sbb
push
cmp
imul
xchg
pop
test
movs
sbb
inc
(bad)
cli
scas
jb
adc
jo
xchg
xchg
adc
imul
pop
xor
xchg
push
sub
adc
push
jae
ss
inc
test
or
outs
retf
or
push
jle
ss
retf
and
hlt
aad
mov
jl
hlt
mov
js
dec
mov
mov
xor
shl
je
push
dec
lods
and
inc
mov
dec
inc
inc
inc
shl
jb
inc
les
mov
xchg
rcl
xor
jl
mov
push
adc
fcom
mov
lods
push
sub
dec
rcl
mov
jb
xchg
or
and
and
es
adc
xor
push
inc
nop
pop
or
pop
mov
add
and
xor
ins
loop
pop
push
call
mov
dec
ja
scas
add
cmp
inc
jno
add
mov
mov
push
jp
cmps
test
(bad)
pop
mov
retf
add
cld
xor
loop
xchg
inc
ins
in
mov
lods
js
inc
push
push
dec
dec
pop
in
cmp
add
into
push
or
or
add
cwde
sbb
pop
and
and
or
mov
xor
xchg
mov
mov
inc
ins
push
or
je
test
leave
sub
pop
retf
adc
push
call
inc
or
cwde
sub
xor
mov
add
inc
dec
scas
sbb
xor
je
push
shl
popa
jbe
popa
push
cld
push
sbb
sbb
or
push
rcl
(bad)
mov
or
cmp
push
inc
xchg
pusha
push
pushf
scas
shr
mov
inc
dec
imul
and
pusha
shl
stos
inc
retf
adc
or
or
sbb
ins
mov
test
les
imul
ret
test
inc
push
stos
xchg
or
xor
mov
adc
jb
inc
arpl
mov
push
out
test
rol
xor
or
sub
fimul
aam
jbe
and
hlt
xchg
mov
mov
(bad)
scas
push
dec
ins
cs
push
pop
cmp
sbb
push
inc
push
mov
sar
(bad)
dec
dec
rol
jae
jl
mov
(bad)
xor
pop
repnz
xor
js
outs
into
dec
dec
imul
mov
dec
(bad)
ficom
imul
dec
cmp
adc
inc
and
add
mov
ds
add
sbb
xchg
mov
dec
pusha
or
and
(bad)
mov
and
and
inc
mov
loop
xchg
dec
popa
sbb
adc
sar
mov
es
cmp
and
adc
mov
adc
cmps
sbb
cdq
and
je
adc
test
in
add
inc
push
jno
cmp
dec
push
add
inc
popa
outs
jmp
xor
xor
add
rcl
pop
fwait
imul
jbe
test
aaa
or
shl
test
enter
xor
add
jae
dec
pop
movs
add
cmp
fs
push
dec
pop
in
jae
test
dec
add
inc
xchg
adc
dec
sub
xor
imul
in
in
push
push
inc
inc
or
inc
adc
pusha
ins
push
sub
xor
inc
and
loop
adc
sub
dec
sub
inc
add
(bad)
movs
test
outs
pop
or
pop
xor
stos
ins
mov
mov
cmp
jb
ins
and
(bad)
xor
movs
dec
xor
and
cld
dec
dec
dec
jp
sub
mov
push
push
je
push
pop
imul
push
adc
cmp
pop
dec
ss
jle
in
pop
jne
push
push
xor
rcl
mov
fcom
adc
inc
fs
test
test
js
xor
les
cmp
cs
xchg
mov
stos
push
test
shl
sbb
ret
xor
pop
adc
loope
repnz
push
inc
inc
test
and
adc
mov
mov
cmp
jb
cmps
sub
jl
lea
or
jb
inc
imul
xor
inc
inc
push
fiadd
addr16
daa
lods
jb
dec
jns
call
sbb
loopne
pushf
ret
push
loopne
mov
dec
add
or
je
enter
movs
movs
cs
mov
cmp
movs
aaa
xchg
dec
mov
push
push
shr
mov
mov
retf
dec
mov
retf
dec
pusha
inc
data16
cwde
ror
arpl
push
push
adc
pusha
mov
rol
push
fs
push
ins
cmp
push
fs
pop
data16
inc
inc
or
sbb
js
(bad)
sbb
mov
push
fisub
push
ror
shl
push
xor
es
mov
div
ins
mov
lds
addr16
ror
cdq
add
inc
xor
or
dec
sbb
dec
or
jmp
dec
push
push
and
aad
shl
movs
dec
inc
or
repnz
xor
push
test
dec
ins
leave
mov
inc
test
jle
mov
xchg
outs
dec
mov
inc
push
fmul
in
into
push
repnz
aam
pop
dec
inc
aad
ss
outs
inc
jno
and
adc
mov
jns
inc
push
xchg
inc
outs
scas
adc
sbb
shl
push
in
call
movs
out
sub
mov
adc
sub
(bad)
or
xchg
cwde
jp
cmp
ja
aam
data16
ja
push
movs
xchg
ins
push
inc
xchg
rcl
stos
fs
aaa
fidiv
mov
and
or
pop
fidivr
ins
xor
adc
push
inc
test
sbb
cwde
inc
xor
fcom
sub
inc
and
adc
shl
push
inc
mov
adc
xor
pop
cmps
sbb
lods
mov
cli
push
push
arpl
rol
xchg
push
ins
or
push
and
inc
adc
jo
dec
popa
add
fs
or
push
push
inc
push
ret
xor
push
stos
enter
push
mov
rol
dec
dec
cmp
adc
dec
fcom
mov
pushf
fisub
xor
push
add
xor
fsubr
sub
push
dec
mov
cmp
and
inc
test
or
inc
pop
xchg
push
fadd
adc
pop
mov
pop
ret
fidiv
adc
outs
push
dec
mov
add
pusha
cmp
out
add
adc
xor
inc
cmps
inc
test
jl
sub
push
inc
ret
jb
jp
(bad)
hlt
jb
jg
and
sbb
push
xor
inc
jmp
adc
sbb
inc
dec
add
xor
dec
push
(bad)
fidiv
xor
adc
push
aam
imul
cmp
arpl
data16
sub
xor
push
inc
push
sub
adc
sbb
shl
rcl
xor
and
sar
mov
inc
ret
push
jo
es
jo
push
add
pusha
dec
sbb
jmp
cmp
fdiv
cmp
lock
xor
clc
test
sbb
dec
xor
(bad)
nop
popa
adc
xchg
cwde
fsubr
mov
jbe
lock
ins
retf
cmp
test
sbb
add
cmp
dec
or
ins
dec
cs
dec
mov
enter
aam
lock
out
movs
and
dec
pop
sub
aaa
adc
mov
xor
push
push
jno
fdiv
pop
cmp
cmp
push
bound
sub
retf
sub
pop
mov
test
ins
mov
inc
lock
push
aad
dec
jo
add
push
xchg
xor
call
test
es
outs
and
es
bound
stos
cmp
pop
xchg
mov
shl
data16
mov
je
pushf
push
mov
call
call
es
test
xchg
jl
push
inc
sbb
dec
push
inc
in
push
mov
arpl
mov
or
dec
push
jbe
dec
fs
xor
shl
pop
test
loopne
sahf
cs
mov
fs
push
out
cmp
sbb
ins
cwde
scas
push
push
inc
jo
loopne
je
pusha
cs
xor
imul
pop
dec
xor
movs
cli
addr16
inc
out
ins
mov
xor
pop
ficom
inc
sbb
push
(bad)
xor
adc
inc
movs
jle
xchg
rcr
or
xchg
mov
dec
jp
jns
and
inc
push
and
push
mov
in
or
xchg
enter
mov
inc
push
test
cmp
mov
add
sub
inc
push
scas
sbb
jno
push
adc
scas
jae
div
ins
lods
xchg
sbb
sub
adc
and
jo
push
push
adc
jle
inc
adc
xchg
sahf
ds
retf
or
or
test
or
add
and
push
inc
add
inc
cmps
outs
outs
in
mov
jno
push
retf
xchg
push
stos
rcl
add
and
xchg
push
xor
dec
jb
add
data16
jae
push
xchg
inc
or
push
inc
jle
inc
movs
ret
xor
cmp
mov
and
add
mov
and
add
add
(bad)
arpl
ds
adc
and
jp
dec
or
or
and
xor
adc
nop
mov
inc
inc
sbb
push
sub
inc
push
out
mov
test
mov
jle
inc
fimul
mov
mov
pop
jmp
and
mov
and
and
test
push
dec
aaa
and
outs
je
jb
stos
jo
or
mov
or
jns
cmps
leave
add
xor
push
sub
stos
push
arpl
pop
or
push
aam
or
sub
dec
push
or
xchg
xor
cld
add
(bad)
mov
mov
cmps
or
and
or
and
push
xor
inc
or
sbb
inc
dec
stos
mov
mov
jo
fs
je
push
jp
rcl
popa
xchg
push
adc
xchg
retf
inc
pusha
xchg
es
pop
pushf
jb
add
outs
xor
dec
push
push
enter
add
inc
add
outs
in
bound
shr
or
mov
clc
push
cld
dec
rol
and
nop
stos
sub
push
aam
xchg
outs
sahf
xor
add
cmp
in
cmps
push
or
lock
outs
popa
add
bound
jl
fs
adc
jo
rcl
inc
imul
push
clc
dec
imul
or
cmp
dec
fcmovbe
mov
xchg
xor
mov
jbe
sub
xor
push
sub
or
test
inc
jbe
jne
inc
dec
sub
inc
loopne
add
ret
sahf
and
mov
les
mov
pop
pop
dec
ret
sbb
push
and
inc
jae
inc
hlt
bound
jno
xor
and
fwait
loop
mov
data16
sbb
ss
push
adc
outs
add
add
adc
and
xor
mov
xor
xor
xor
push
mov
dec
retf
push
hlt
dec
ins
es
inc
pop
(bad)
jb
cwde
test
or
imul
(bad)
stos
add
ror
imul
pop
repnz
dec
aaa
push
imul
push
nop
movs
push
or
sbb
cmp
call
mov
or
test
cmp
push
pop
sub
and
call
cmp
dec
xchg
mov
sub
pop
data16
mov
fimul
push
ds
push
mov
xor
test
or
xor
dec
inc
add
push
daa
sub
mov
int3
(bad)
fstp
outs
ss
mov
test
add
push
push
or
push
mov
xor
push
loopne
sbb
sbb
xor
add
dec
push
push
inc
jne
sub
je
push
push
mov
pop
pusha
outs
mov
ficom
bound
sahf
push
xchg
pop
dec
mov
rcl
inc
and
push
sub
imul
sbb
xchg
add
push
add
bound
xchg
jne
dec
es
shr
ror
push
fadd
pushf
jo
adc
sbb
call
ins
fs
lods
inc
shl
sbb
inc
(bad)
(bad)
ss
and
ret
inc
and
cmp
add
cmp
pop
or
mov
aaa
inc
mov
push
inc
bound
ja
push
add
inc
adc
push
sbb
xor
movs
stos
outs
pop
je
adc
add
dec
fs
or
es
adc
sub
movs
adc
xor
push
mov
gs
pop
xor
(bad)
loopne
sbb
mov
adc
add
push
dec
ins
or
xchg
push
loop
fidiv
(bad)
mov
pop
or
data16
imul
test
mov
push
push
jb
xchg
adc
add
pop
sbb
add
inc
mov
mov
add
jae
dec
xor
and
movs
inc
jne
mov
jp
call
shl
xchg
les
hlt
dec
push
loope
adc
fmul
inc
mov
stos
mul
dec
popa
nop
inc
add
and
mov
pop
jl
push
add
xor
and
sbb
ins
mov
inc
mov
and
movs
and
ins
bound
push
icebp
add
jne
inc
pop
jae
or
xor
loopne
add
dec
test
push
add
pop
call
push
test
imul
sub
dec
sbb
add
xchg
add
hlt
mov
cmps
sub
aam
mov
fs
call
add
dec
sub
inc
pop
imul
js
add
xor
call
dec
test
out
dec
mov
xor
jmp
push
push
push
imul
inc
mul
loopne
xchg
ret
or
xor
add
xchg
inc
ins
jl
dec
xchg
or
push
cwde
add
cmp
sbb
xor
gs
xor
or
in
pop
push
rcl
ret
les
and
inc
or
or
aam
xor
xor
shr
and
mov
xchg
dec
mov
(bad)
dec
fsubr
cwde
or
sbb
outs
inc
fsub
cmp
aad
push
(bad)
push
push
dec
sbb
pop
add
add
sbb
dec
pusha
mov
push
or
mov
js
xor
je
mov
xchg
fmul
out
push
les
push
inc
cmp
push
add
xor
inc
push
inc
(bad)
pop
push
sbb
sbb
xor
cmp
sbb
dec
test
xor
xor
ret
data16
(bad)
cmp
into
push
jo
push
cmp
add
movs
xor
add
sub
xchg
or
pop
scas
push
jbe
loopne
inc
leave
ror
cwde
outs
and
adc
adc
cmp
mov
in
fcom
jae
jne
adc
cmp
push
adc
sub
inc
xor
mov
dec
cmps
jno
ins
jne
mov
je
sub
xor
test
push
xchg
jo
inc
dec
sub
dec
jb
jb
mov
and
push
cmp
push
add
arpl
jb
jns
mov
mov
ins
leave
movs
gs
sub
push
retf
pop
push
gs
dec
jne
cmp
adc
and
dec
mov
ds
ds
inc
ins
sub
mov
and
cmp
dec
adc
rcl
add
xchg
xor
shl
js
xor
push
inc
mov
jle
push
add
jp
test
inc
enter
pop
mov
mov
push
inc
cmp
out
imul
jae
mul
pop
add
pop
jb
sub
cmp
mov
aad
xchg
(bad)
add
gs
or
ins
mov
push
adc
jno
inc
sub
xor
xchg
push
dec
push
push
and
aaa
push
les
clc
cmp
add
xor
jmp
inc
ins
xor
rcl
mov
adc
in
repnz
enter
mov
inc
push
pop
mov
push
sbb
mov
dec
imul
shl
ret
xchg
pop
push
push
and
push
adc
scas
push
push
ins
call
cmp
es
adc
ss
push
xchg
stos
push
jo
adc
xor
push
inc
ror
sub
xor
popa
push
sub
mov
mov
aaa
loop
mov
ja
pusha
push
jp
cmp
push
and
mov
inc
fs
sbb
push
ja
dec
frstor
dec
aam
addr16
mov
mov
cmp
int3
jmp
cmp
mov
bound
adc
dec
mov
add
mov
addr16
cwde
and
and
inc
pop
cmp
push
jo
aad
imul
push
dec
cmp
add
add
mov
call
and
xor
cwde
push
stos
xchg
cmp
pushf
bound
or
cmp
xchg
enter
test
into
push
les
xor
jle
adc
scas
push
ret
call
cdq
sbb
sbb
out
jo
add
mov
rcl
sbb
sub
ins
adc
imul
ins
adc
jae
push
xor
xor
push
jns
pusha
push
cmp
pop
ret
xor
nop
mov
adc
mov
pop
dec
ins
call
ja
pop
popa
pop
inc
push
jns
jle
jae
cld
push
sub
sbb
es
cmp
dec
je
int
inc
bnd
call
or
jb
cs
mov
cmps
mov
adc
dec
mov
mov
dec
and
inc
fcom
out
jmp
adc
mov
dec
jb
inc
add
mov
pop
push
fadd
add
mov
es
xchg
call
jo
test
fcomp
es
inc
aaa
jne
je
es
or
xor
imul
dec
aaa
mov
and
push
add
addr16
inc
cwde
xor
dec
jl
mov
add
je
dec
dec
sbb
push
adc
or
aad
and
mov
fdiv
scas
inc
push
mov
icebp
sub
xor
shl
adc
leave
scas
sub
cmp
xor
out
std
jb
pop
jp
xor
inc
push
dec
or
pusha
clc
push
enter
inc
add
ds
xor
or
or
jl
sbb
inc
leave
movs
cmp
ret
inc
adc
or
sub
sub
inc
or
sub
cld
sar
dec
push
dec
js
inc
add
xor
dec
pop
sub
cdq
rol
fs
aad
fidiv
ins
sahf
jne
xor
push
xor
fisttp
dec
jp
pop
xor
add
arpl
enter
dec
fs
popa
inc
push
aad
in
xor
xor
scas
add
ss
mov
jb
or
xor
push
sahf
ja
adc
xor
mov
ins
mov
or
aaa
lock
push
jp
mov
inc
gs
add
out
popa
mov
dec
inc
jb
cdq
or
mov
test
lods
ficom
retf
dec
fmul
je
push
les
stos
dec
or
xor
cmp
shr
ins
xor
shr
dec
dec
ret
inc
or
mov
inc
outs
push
or
xor
adc
add
push
and
or
cli
arpl
in
add
fadd
push
dec
dec
dec
mov
adc
push
push
adc
push
adc
in
(bad)
jp
lock
adc
loopne
xor
mov
cmp
out
mov
fmul
and
outs
xor
inc
xchg
in
sub
push
pushf
sahf
push
xchg
pop
inc
mov
push
arpl
cmp
sub
(bad)
ins
push
adc
or
fisubr
push
retf
jb
sub
pop
push
dec
fisub
mov
inc
mov
push
imul
inc
aad
add
dec
push
les
push
add
je
or
ins
cmp
sbb
add
lock
ror
aad
dec
and
and
loope
pop
jbe
lods
fidiv
push
or
xchg
sbb
sub
dec
jl
push
stos
adc
adc
jp
mov
cld
cmp
rol
dec
cmp
add
xchg
or
and
cmp
push
add
data16
push
call
test
aam
les
dec
in
push
fwait
fs
outs
push
adc
scas
push
cwde
cmp
jae
mov
add
push
inc
push
mov
ret
xor
dec
or
or
dec
test
enter
sbb
sub
aam
mov
sahf
jae
inc
dec
xor
and
js
inc
inc
rol
add
sub
sub
mov
aam
loop
inc
imul
inc
sbb
cld
xor
and
in
jb
test
aam
add
sbb
dec
lods
dec
or
daa
js
push
inc
adc
adc
mov
push
cmp
inc
fs
inc
jno
dec
add
xor
inc
je
fdiv
push
sbb
cmp
shl
sub
repnz
inc
push
xor
sub
xor
jo
ret
and
je
je
push
xchg
fmul
fidivr
and
push
sub
jbe
inc
dec
push
mov
push
and
or
dec
dec
xchg
xchg
dec
pusha
lods
xchg
dec
dec
es
shl
push
push
or
enter
pop
les
push
inc
dec
sub
pop
adc
jbe
xor
jne
je
xor
mov
test
push
xchg
and
mov
adc
add
inc
mov
xor
in
popa
jb
mov
pop
mov
add
jo
sbb
stos
and
dec
in
and
xor
sbb
pop
push
xor
jb
mov
adc
push
inc
dec
inc
jbe
add
and
mov
add
call
add
mov
jp
dec
popa
push
cdq
and
mov
lods
rcl
outs
jmp
adc
push
and
aad
add
dec
push
pop
mov
movs
(bad)
jae
mov
add
push
and
bound
inc
inc
cmp
fwait
mov
adc
ret
jne
ret
imul
dec
inc
pop
bound
sahf
push
sub
add
into
inc
call
pop
push
ja
into
xor
jb
inc
and
aam
inc
inc
mov
push
inc
cli
rcl
jns
push
je
fwait
pop
mov
dec
inc
dec
inc
movs
pop
add
jb
dec
jns
inc
dec
pusha
jge
js
arpl
cmp
fwait
inc
inc
pop
mov
aaa
add
adc
push
outs
add
or
push
nop
rcl
fisub
inc
adc
scas
push
call
add
dec
dec
push
push
dec
cmp
mov
fiadd
ret
ret
cmp
xchg
mov
inc
test
xor
mov
js
lods
dec
xor
push
inc
in
or
popa
add
jbe
je
mov
jmp
adc
and
je
inc
sub
ins
xor
sub
out
push
push
adc
dec
jp
mov
in
aaa
xor
xchg
jns
push
inc
and
cmp
mov
lods
or
fcom
sar
or
adc
js
les
pop
sub
mov
bound
or
and
ret
loopne
and
dec
xchg
sbb
push
add
xor
addr16
(bad)
test
jmp
mov
pusha
xor
cmp
cli
ror
inc
inc
cmps
xchg
or
jecxz
test
push
jge
inc
cmp
push
jo
arpl
sub
les
aaa
inc
jns
lods
rol
pop
dec
bound
add
sbb
(bad)
arpl
dec
loop
js
test
inc
mov
or
push
pop
xchg
inc
adc
in
outs
test
pop
cwde
mov
fs
sbb
sbb
lock
and
stos
outs
mov
xchg
add
clc
dec
aad
pusha
xor
repnz
dec
or
nop
add
pop
data16
jp
cmp
sub
add
inc
sbb
mov
inc
sbb
sbb
xchg
xchg
stos
mov
adc
cmp
je
popa
jo
xor
mov
add
add
sbb
add
ins
or
mov
sub
sbb
xor
rcr
inc
lods
retf
dec
push
jae
popa
movs
mov
out
ins
ss
mov
dec
adc
jbe
xor
mov
push
mov
adc
adc
jb
push
ss
and
mov
js
fadd
gs
mov
ja
push
test
push
outs
xor
jae
mov
pop
jbe
or
cmp
fcom
gs
push
xchg
pop
fs
fdiv
or
cmps
or
int3
push
inc
imul
jmp
int3
adc
mov
dec
jno
inc
adc
or
adc
add
scas
ins
inc
pop
pushw
cwde
push
and
aad
xor
mov
pushf
aam
push
lock
gs
push
jo
test
mov
stos
outs
jbe
int3
or
push
mov
mov
ret
jle
xchg
add
jne
data16
push
dec
popf
adc
mov
test
push
pop
les
mov
dec
jo
adc
call
xor
push
cmp
scas
push
ss
pusha
inc
add
and
movs
(bad)
dec
pop
and
add
test
dec
xchg
inc
and
sbb
arpl
adc
or
adc
ss
ins
cmp
jle
dec
loopne
xchg
adc
or
and
sub
push
(bad)
xor
xchg
or
mov
add
and
mov
push
push
xchg
pop
fs
mov
ret
enter
imul
call
mov
and
push
pop
lds
dec
mov
push
loopne
inc
inc
sbb
or
dec
add
push
inc
cwde
ret
ficomp
xor
adc
cs
jo
ret
out
addr16
push
sub
test
dec
lods
(bad)
push
popa
dec
jbe
call
cs
mov
cmp
push
inc
jno
sub
mov
push
push
es
aam
add
dec
push
pusha
adc
or
add
push
inc
inc
retf
mov
add
jae
or
push
adc
xor
push
test
inc
push
ficom
xchg
xor
jo
xchg
int3
add
dec
arpl
or
push
xchg
add
imul
xor
add
mov
jb
mov
or
ret
push
dec
push
sar
sbb
lods
js
mov
mov
push
ret
mov
inc
xor
adc
xor
push
add
mov
adc
imul
les
jns
je
rcl
adc
push
call
rcl
add
ss
add
jbe
sub
loop
lods
and
and
adc
inc
mov
popa
pop
scas
sub
mov
inc
nop
push
xor
jb
dec
popa
repz
xor
cmp
outs
ins
inc
fs
or
sbb
jne
lods
dec
pushf
jbe
nop
push
inc
jne
adc
or
mov
xor
or
xchg
adc
jmp
mov
pusha
xor
in
(bad)
mov
aam
sub
jbe
in
push
or
les
imul
add
enter
adc
or
imul
push
fcom
dec
popa
add
into
push
xchg
pusha
and
dec
ficomp
push
pop
inc
out
push
or
or
rcl
dec
push
xchg
and
xchg
sbb
add
pop
xor
sar
movs
add
dec
fs
cli
dec
cli
xchg
xchg
test
es
pop
data16
aam
inc
inc
in
dec
adc
dec
push
loop
push
and
lock
dec
imul
popa
ins
xor
jb
add
mov
fs
aam
ss
push
push
cwde
sbb
push
push
inc
adc
jbe
push
push
jmp
retf
jb
dec
adc
add
sub
je
inc
push
push
fs
pusha
pop
in
int3
xor
les
pop
add
inc
aam
loope
add
inc
inc
pop
movs
ss
push
xor
dec
inc
jmp
adc
mov
jl
push
push
inc
inc
adc
test
dec
xchg
ret
and
push
or
xchg
adc
mov
cwde
mov
inc
add
mov
jb
adc
and
or
dec
sub
or
inc
xor
repnz
pushf
idiv
call
les
aas
sub
js
arpl
test
dec
data16
sub
mov
enter
fs
pusha
and
ins
push
xchg
and
mov
test
fsub
sbb
dec
into
add
sub
push
out
inc
jne
mov
rol
mov
cmps
xor
sub
les
mov
jo
xor
or
(bad)
outs
inc
mov
add
test
or
xchg
fiadd
les
push
xor
ja
mov
adc
repnz
das
pop
sbb
adc
je
add
sbb
inc
shl
aaa
ret
pop
adc
rcr
popa
fs
sbb
cmp
inc
push
xchg
inc
dec
push
or
in
add
jle
ret
push
outs
movs
cs
inc
sub
push
push
or
add
lods
adc
imul
mov
dec
or
fs
xor
inc
fimul
push
dec
jmp
mov
xor
bound
jae
and
adc
cmps
dec
sbb
fisubr
outs
sbb
or
sbb
pushf
pop
xchg
xor
dec
cmps
cld
sub
div
xor
mov
add
cmp
retf
push
shr
jp
cmps
mov
js
dec
push
or
push
xor
xor
mov
lods
push
pusha
or
push
xchg
push
dec
mov
jb
bound
retf
test
jb
daa
inc
fsub
enter
push
inc
mov
xor
inc
and
inc
outs
test
jbe
xor
inc
pop
jne
cwde
(bad)
sub
ins
dec
sbb
int3
and
mov
and
and
xchg
movs
pushf
nop
xchg
test
add
xor
xor
data16
inc
and
xchg
add
cwde
stos
pushw
or
mov
push
push
sub
(bad)
int3
inc
ins
mov
push
and
dec
shl
xor
add
and
and
add
push
adc
and
mov
je
imul
push
popf
ds
ins
bound
imul
sub
xchg
jno
push
loopne
mov
dec
inc
lock
push
xchg
je
dec
xor
push
and
cmc
xchg
xchg
cmps
inc
inc
jns
jo
dec
inc
adc
dec
and
hlt
dec
jbe
lods
sbb
test
ss
test
sub
es
pop
js
push
hlt
add
dec
push
jb
pop
sbb
add
pop
inc
popa
pop
inc
outs
xor
and
test
mov
push
outs
inc
xchg
or
bound
jmp
loopne
into
addr16
ja
push
inc
imul
imul
xor
mov
xor
xor
xchg
fld
cwde
imul
shl
popa
test
lods
mov
xchg
xor
gs
push
ja
(bad)
call
push
and
inc
push
test
rcr
xor
push
ss
dec
(bad)
mov
xor
and
push
(bad)
mov
and
xor
xor
cli
push
js
lea
inc
push
push
stos
test
xor
pop
outs
push
or
push
inc
mov
inc
push
add
add
sbb
xor
or
mov
push
in
outs
inc
jp
lods
das
cmp
dec
js
pop
add
nop
inc
and
imul
add
lods
xchg
inc
ins
imul
mov
sbb
xor
or
inc
dec
xor
lods
dec
add
icebp
add
dec
dec
jns
jp
mov
outs
sub
xchg
dec
xchg
mov
retf
sub
arpl
cmp
bound
dec
xor
bound
sahf
popa
(bad)
and
mov
jb
pop
imul
inc
add
je
bound
jb
gs
add
mov
jb
sub
arpl
dec
outs
push
add
ret
pop
imul
and
sub
loopne
xchg
sub
push
jl
xor
sbb
sbb
lods
rcl
pushf
ss
or
(bad)
adc
fimul
mov
push
je
pusha
dec
inc
mov
(bad)
push
xchg
and
fidiv
es
dec
imul
sbb
jbe
call
inc
push
imul
dec
sbb
jbe
movs
ins
dec
mov
inc
add
push
in
addr16
inc
dec
imul
sbb
ja
adc
xchg
mov
addr16
fs
sbb
dec
or
adc
dec
lods
cmp
dec
cdq
dec
jp
adc
sbb
cmp
push
mov
cmp
and
mov
jp
inc
mov
inc
cmp
jne
push
cld
inc
cmp
inc
or
adc
inc
push
jb
dec
lea
or
adc
movs
xor
xor
dec
adc
(bad)
push
and
ja
(bad)
daa
sub
push
jbe
dec
popa
and
push
outs
adc
pop
pushf
push
jb
push
adc
push
push
inc
or
add
rcr
in
in
ins
xchg
(bad)
add
push
add
sub
and
test
xor
cld
pop
push
dec
xor
xchg
ror
call
in
scas
(bad)
popa
and
pop
cli
out
ins
jae
dec
in
mov
adc
push
push
mov
jo
cmp
inc
outs
inc
jo
xor
pushf
ficom
inc
xchg
xchg
jae
shl
xchg
shl
popf
inc
ret
dec
dec
adc
movs
fdiv
in
nop
int3
jno
push
pushf
dec
sub
mov
dec
xor
push
jne
xchg
test
push
jno
rcl
stos
mov
adc
sub
cmp
adc
or
or
fisubr
push
xor
test
outs
mov
lea
aam
fsub
cmp
push
bound
cmp
je
push
sub
lock
clc
stos
push
arpl
cld
mov
inc
adc
popa
mov
inc
push
cli
xor
cs
cld
in
jo
adc
nop
push
xor
and
jno
bound
scas
add
adc
dec
dec
xor
mov
call
pop
enter
pop
imul
xchg
push
and
adc
cmp
push
and
dec
push
ret
sub
xor
inc
or
add
dec
jbe
add
xchg
or
inc
sub
in
or
sbb
test
cmps
addr16
push
mov
ss
xor
cdq
retf
push
es
push
jo
cdq
stos
shr
mov
mov
sbb
adc
int3
stos
and
loope
es
adc
adc
dec
push
mov
dec
gs
or
test
jl
or
stos
outs
ret
aam
dec
test
(bad)
call
push
and
and
push
ret
sbb
inc
pop
mov
adc
add
adc
push
mov
dec
xor
xchg
ret
pop
pop
mov
xchg
sbb
ins
cwde
retf
mov
sahf
and
sub
push
sub
sbb
call
xchg
mov
push
pusha
retf
push
xor
add
jb
jle
and
or
pop
xchg
adc
xchg
inc
repnz
jb
dec
sbb
(bad)
ja
sbb
xor
test
in
xor
xchg
jp
add
aaa
inc
and
xchg
or
addr16
and
adc
or
dec
ss
push
inc
or
push
outs
xor
inc
dec
outs
cmp
pop
shl
mov
push
push
cmp
mov
fdiv
inc
outs
pop
sub
out
xor
inc
xor
inc
bound
pushf
ins
add
xor
dec
sbb
call
ja
ins
adc
xor
and
add
jns
sub
nop
aam
cwde
jmp
or
adc
and
ja
mov
ret
add
mov
dec
xchg
dec
idiv
sbb
out
xor
popf
xchg
cmp
push
inc
cmp
xchg
xchg
or
out
outs
pop
or
into
adc
dec
push
jb
lods
push
add
loop
add
scas
retf
es
dec
out
jp
jae
adc
mov
fs
adc
dec
sub
cmps
es
adc
aaa
or
pop
push
adc
je
and
xor
xor
push
push
fwait
cdq
xchg
jae
mov
cld
inc
rol
pop
xor
adc
and
mov
fimul
inc
ja
div
add
ss
retf
call
push
dec
out
inc
xchg
cwde
inc
xor
jne
js
push
imul
xor
retf
cmp
push
jbe
push
loop
and
mov
dec
adc
and
xor
ins
pop
je
inc
popa
dec
test
xor
pop
lods
pop
cmp
and
push
push
push
(bad)
dec
outs
push
and
xor
pop
aam
jmp
dec
mov
mov
ficomp
js
and
ins
add
xor
loop
ins
inc
add
cmps
test
push
test
sahf
out
inc
mov
xor
dec
mov
mov
inc
clc
dec
loopne
push
sub
jl
push
sbb
pop
push
inc
dec
mov
ss
sbb
popw
and
fs
nop
and
lock
ds
sub
mov
sbb
dec
or
mov
mov
pushf
and
xor
inc
mov
push
fidivr
dec
add
xchg
jo
cli
js
ins
sar
adc
sub
add
add
and
mov
or
mov
push
cdq
pop
test
dec
xor
adc
popa
nop
jno
push
inc
mov
push
add
push
xor
pop
cmps
and
push
mov
cmp
push
add
arpl
push
add
enter
aam
stos
sbb
mov
cmp
inc
outs
lods
mov
xchg
gs
mov
dec
mov
xchg
cmps
push
dec
dec
add
jo
inc
push
shl
inc
xor
push
daa
sbb
push
shl
mov
sbb
pusha
add
add
dec
loopne
(bad)
inc
mov
test
push
nop
sbb
shl
out
push
add
or
dec
js
inc
jo
es
inc
and
aam
and
add
push
and
dec
and
mov
sar
push
and
or
or
push
jne
ins
xor
xor
and
nop
fs
jb
or
xor
and
ins
test
dec
adc
ror
inc
push
dec
dec
push
(bad)
cs
push
dec
(bad)
inc
xor
dec
inc
int3
inc
test
hlt
cmps
stos
push
adc
adc
or
inc
push
jl
inc
xor
mov
dec
push
cwde
mov
pushf
push
push
sbb
push
xor
push
jo
mov
or
hlt
and
(bad)
stos
mov
add
and
in
arpl
push
cs
and
adc
bound
cmp
fs
movs
sbb
xchg
adc
inc
push
mov
es
dec
xor
dec
mov
push
mov
cmp
in
jp
and
sub
sbb
adc
and
pop
push
add
je
inc
add
sbb
ds
adc
dec
test
adc
jl
xor
adc
jno
(bad)
test
dec
jmp
xor
dec
popa
les
jp
cmp
fmul
push
sbb
jp
and
outs
mov
imul
popa
fisttp
dec
sbb
xor
dec
mov
outs
ins
push
inc
add
dec
xor
inc
xchg
es
xchg
lods
add
outs
pop
ins
sbb
mov
dec
xchg
mov
and
dec
dec
jo
rcl
jo
push
xor
jb
xor
add
mov
push
mov
and
cmp
fimul
inc
jbe
ja
xor
imul
arpl
jmp
inc
xor
inc
jae
inc
and
jno
inc
retw
or
enter
inc
stos
adc
dec
mov
inc
mov
test
ins
or
retf
sub
in
cmps
push
sar
fs
and
es
gs
jb
pop
push
mov
dec
add
push
ins
ins
test
(bad)
xor
mov
push
ret
push
push
add
add
inc
mov
push
adc
ret
fmul
ret
dec
dec
push
and
addr16
cwde
shl
fs
push
sub
outs
or
xchg
rcl
imul
push
popa
dec
jbe
rol
inc
repnz
push
jmp
inc
js
push
adc
xchg
cmps
jbe
mov
mov
or
inc
adc
inc
inc
pop
fs
imul
fbld
jns
dec
push
dec
outs
rcr
add
and
add
mov
push
enter
push
cmp
mov
push
aaa
sbb
js
outs
mov
aam
xor
jbe
xchg
mov
adc
arpl
les
data16
and
xor
xchg
add
fs
dec
jb
push
add
mov
sub
xor
mov
mov
cmp
xor
scas
movs
imul
jns
int3
inc
and
push
fs
sbb
jbe
jae
ret
movs
and
cmp
popa
pop
fiadd
adc
outs
sbb
or
pushf
mov
cmp
addr16
push
stos
fldenv
add
dec
cmps
sub
cli
outs
or
mov
push
push
ds
xor
jbe
xor
cs
movs
and
sub
adc
pop
mov
xchg
ss
daa
mov
or
mov
add
lods
jns
dec
fsubr
rol
cli
dec
popa
adc
dec
mov
dec
inc
sbb
out
xor
gs
je
push
mov
or
mov
test
fmul
pop
dec
ss
ss
lock
ss
and
pop
inc
fiadd
mov
jae
jns
adc
clc
xor
mov
and
add
retf
sbb
mov
sub
outs
inc
push
add
les
push
jne
fwait
nop
ret
jb
cmp
fs
imul
inc
and
leave
aad
jb
rcl
xchg
call
lods
fcomi
pop
pusha
inc
jbe
jbe
inc
sbb
dec
js
ror
adc
push
jns
push
inc
push
push
fsubr
jb
int3
cmp
ss
rol
jo
inc
inc
jb
mov
push
fidiv
arpl
xor
retf
or
dec
adc
pop
addr16
xor
cmp
aaa
rcl
inc
push
aaa
outs
imul
mov
adc
inc
dec
bound
pop
mov
xor
inc
cli
in
push
mov
dec
aam
and
push
adc
mov
jo
pop
xchg
add
mov
dec
hlt
add
adc
sbb
pop
or
or
cmp
dec
fmul
and
lds
adc
dec
adc
inc
movs
in
push
ja
or
inc
dec
push
ror
dec
mov
cmp
inc
(bad)
pop
dec
inc
mov
outs
enter
mov
xchg
ins
dec
outs
push
sub
mov
inc
idiv
add
xchg
xor
sbb
mov
or
push
in
gs
and
cld
push
mov
xchg
dec
dec
inc
jne
aaa
mov
pop
dec
jl
inc
sub
jb
cmp
jae
enter
dec
mov
bound
push
fdivp
scas
push
jae
stos
xchg
dec
je
xor
je
jmp
and
mov
adc
pop
retf
imul
mov
test
ror
arpl
and
push
jbe
popa
adc
into
dec
nop
inc
push
lock
pop
or
xchg
cmp
add
fiadd
push
pop
sub
or
xor
dec
jns
push
je
add
sbb
pop
adc
out
adc
cmp
dec
cmp
fiadd
push
cs
mov
xchg
inc
push
data16
sub
inc
dec
ins
xchg
inc
inc
add
ret
jmp
adc
or
xchg
fs
addr16
jb
inc
adc
arpl
cs
inc
push
cli
and
push
push
mov
xor
int3
data16
fisub
xor
loopne
mov
sbb
jo
pushf
popa
cs
push
push
add
aam
pop
mov
fdiv
aaa
adc
scas
jp
push
ja
adc
cmps
jo
je
and
push
cld
xor
mov
add
inc
push
add
inc
sub
or
xor
push
pusha
sbb
mov
add
pop
push
data16
dec
inc
or
add
push
inc
or
popa
and
sub
add
cmp
fsub
cmp
adc
xchg
scas
dec
xor
es
es
xor
arpl
dec
shl
fwait
add
outs
inc
inc
dec
or
sbb
push
xor
cs
or
inc
bound
push
push
dec
push
push
loope
mov
cmp
sbb
je
push
dec
aam
dec
adc
push
and
pusha
add
or
jbe
bound
inc
adc
jbe
ins
xchg
stos
xor
bound
push
mov
and
inc
cmps
dec
dec
add
adc
cmp
dec
enter
add
or
inc
sub
retf
push
xchg
inc
cmps
xor
je
mov
and
dec
push
or
dec
pop
mov
push
jb
push
add
push
mov
aam
dec
push
pop
es
sub
xor
jo
fwait
mov
fimul
mov
nop
xor
pusha
dec
push
sbb
sbb
jl
stos
dec
cmp
(bad)
ins
pop
bound
push
xchg
mov
push
call
jle
and
cmps
adc
mov
nop
daa
sbb
pop
ret
mov
mov
cmp
inc
cmp
or
mov
sahf
or
call
push
mov
inc
dec
mov
or
inc
push
jp
pop
loope
jle
push
push
lea
mov
push
xchg
cmp
sub
dec
adc
dec
dec
sbb
mov
adc
test
inc
sub
fsubr
xchg
jo
addr16
imul
dec
xor
fisub
sub
or
loop
add
xchg
push
outs
ins
or
adc
dec
mov
dec
jmp
test
or
dec
or
cmp
mov
add
jb
ins
pop
inc
bound
xor
popa
ret
sub
hlt
push
fwait
pop
inc
xchg
inc
add
pop
in
data16
push
sub
push
mov
dec
ret
mov
or
adc
movs
adc
push
push
sbb
in
and
neg
and
pop
or
popa
cmp
jns
je
je
imul
xor
cmp
inc
sbb
mov
(bad)
stos
js
adc
jl
adc
lea
outs
inc
jle
xor
sbb
call
sahf
repnz
popa
xchg
ds
add
push
push
ja
push
mov
mov
sbb
push
and
test
ds
add
push
aad
add
dec
jmp
add
test
dec
adc
into
jo
inc
and
test
js
cmp
xchg
adc
jne
call
push
pop
dec
imul
xchg
cmps
mov
pop
dec
outs
sub
imul
and
fisub
cwde
rol
pop
xor
adc
mov
dec
fadd
xor
mov
loop
sub
enter
push
dec
push
les
mov
enter
inc
dec
xor
jae
test
inc
adc
rcl
or
xor
fs
fwait
adc
xor
loopne
adc
ret
push
add
push
ror
pop
mov
push
popa
cwde
add
ss
dec
imul
or
mov
cld
jmp
cmp
or
pop
data16
and
mov
inc
inc
dec
xchg
test
pop
push
lods
ret
or
outs
and
sub
loopne
add
sbb
clc
je
test
les
ret
imul
inc
add
jl
popa
jns
dec
push
add
(bad)
push
push
jno
ins
int3
xchg
aam
lods
and
xchg
jp
sbb
add
push
jo
test
inc
inc
je
aaa
mov
jno
pop
outs
cmp
(bad)
aam
imul
and
data16
add
jne
in
cmps
icebp
pop
sub
pop
push
arpl
inc
or
bound
dec
or
cmps
adc
sub
add
(bad)
retf
shl
xor
retf
xor
inc
pop
bound
push
xor
and
adc
data16
mov
or
mov
sub
push
clc
movs
dec
jo
or
add
pop
add
xor
ret
pusha
enter
inc
jo
dec
inc
push
push
ins
xor
loop
fst
push
add
imul
inc
test
xchg
mov
test
js
adc
dec
push
sub
xor
cmp
adc
bound
fs
mov
pushf
lock
xor
outs
shr
pop
dec
xchg
shl
imul
jae
test
pop
add
dec
ins
jb
push
pop
xor
test
sbb
dec
mov
ret
or
scas
(bad)
push
inc
mov
xchg
sbb
dec
movs
mov
shl
cmp
cmp
mov
rcl
(bad)
push
inc
loopne
or
or
adc
inc
sub
mov
test
xor
popa
adc
inc
sub
xchg
rol
cs
pop
inc
and
rcr
add
inc
push
dec
push
xchg
xor
ins
mov
jbe
repnz
add
dec
loopne
push
inc
rol
jns
xor
jbe
push
jo
mov
arpl
loopne
push
les
es
dec
pop
xor
mov
add
push
cmp
rol
push
mov
aam
dec
xor
mov
je
push
jae
cdq
(bad)
dec
mov
or
adc
outs
ss
adc
ins
inc
loopne
xchg
mov
or
outs
jmp
cs
fsubr
pop
fs
les
dec
and
fadd
cmp
jl
lea
dec
dec
push
pop
imul
mov
add
mov
or
and
inc
jbe
jbe
imul
adc
dec
jo
outs
push
mov
(bad)
cli
pop
and
xor
pop
adc
and
xor
popa
jbe
dec
ret
lods
mov
ret
pushf
push
dec
pusha
push
inc
add
ror
add
dec
or
sub
fidiv
dec
jge
mov
inc
xor
arpl
add
push
cmp
or
add
stos
mov
je
inc
push
mov
push
push
mov
cmp
push
xlat
es
dec
mov
loope
jb
or
inc
mov
mov
push
xor
xchg
pop
or
dec
push
je
jb
inc
sbb
mov
pop
dec
jns
loop
jb
test
lods
sub
jbe
sub
jno
mov
fisubr
hlt
or
sub
jp
adc
int
pop
repnz
dec
push
push
ins
ins
sbb
enter
scas
adc
ss
push
add
rol
ret
push
dec
imul
stos
inc
push
popa
jne
bound
dec
dec
and
and
les
test
push
xor
pop
imul
sub
aam
aaa
xor
js
xor
pop
or
mov
dec
ins
movs
push
xchg
sub
enter
xor
push
cmps
lea
xor
push
add
xchg
retf
pusha
es
add
xchg
aam
xchg
adc
dec
cs
add
or
xchg
dec
xor
jo
test
dec
add
mov
test
mov
sub
add
mov
sar
jb
(bad)
dec
mov
adc
ins
adc
mov
or
cmp
or
dec
or
into
jb
inc
add
adc
xchg
mov
push
xor
dec
movs
jb
push
bound
add
sbb
push
sub
sbb
outs
adc
or
bound
je
xor
arpl
pushf
bound
add
or
mov
and
shr
inc
mov
adc
in
and
and
push
adc
inc
add
sub
inc
enter
xor
clc
push
push
push
dec
mov
or
pop
dec
sub
push
push
inc
add
dec
jl
imul
inc
repnz
into
cmp
dec
test
sub
and
shl
xor
xchg
bound
add
stos
pop
push
pop
int3
ins
dec
rol
inc
je
dec
sbb
jp
mov
add
inc
gs
adc
dec
jbe
push
loopne
sub
add
cwde
popa
mov
push
sub
or
push
sub
pop
dec
loope
xor
cmp
add
push
mov
js
push
add
push
in
and
call
pusha
mov
jo
inc
fiadd
js
pushf
adc
into
nop
xchg
add
or
sahf
cmp
jo
imul
pusha
pop
xor
aam
adc
jo
mov
aam
cs
dec
push
xor
(bad)
xor
mov
fs
mov
jp
mov
inc
mov
js
adc
cs
imul
cmps
in
sub
adc
or
pop
add
mov
bound
xor
push
inc
and
stos
sbb
sub
jp
jmp
arpl
push
test
aam
push
shl
push
and
xchg
dec
and
jb
inc
or
adc
stos
fs
xor
cwde
jo
pop
inc
pop
pop
dec
mov
push
mov
les
out
test
retf
mov
jl
jns
jb
aaa
aam
pop
inc
ins
addr16
and
and
jo
loopne
ins
push
rcr
xor
mov
sub
addr16
dec
and
movs
hlt
inc
outs
sub
mov
dec
pop
gs
lods
rol
pop
test
pop
xchg
xor
movs
sbb
fs
cmp
scas
jbe
inc
inc
cmp
mov
mov
in
sub
xchg
adc
xor
mov
jno
dec
xor
cmp
adc
dec
xchg
jbe
dec
je
mov
xor
int3
lods
push
push
es
jp
xor
or
pop
or
loopne
push
dec
and
mov
add
dec
jno
push
xor
stos
xchg
adc
loopne
je
push
xor
(bad)
addr16
cmp
sub
or
add
adc
rol
mov
jle
sbb
adc
and
data16
(bad)
inc
jne
add
and
ss
xor
jne
stos
hlt
popa
je
data16
pop
fidiv
push
push
inc
xor
not
inc
outs
pop
sub
cmp
sbb
adc
jo
imul
mov
das
loopne
cmp
inc
xor
es
add
xchg
retf
and
and
and
xchg
or
cmp
jp
inc
mov
repnz
mov
push
adc
jl
rcl
push
inc
bound
or
or
call
mov
xor
gs
mov
jo
and
aam
mov
ins
into
dec
test
rcr
cs
xchg
or
nop
sbb
mov
inc
fs
add
mov
xchg
push
and
push
push
push
xor
arpl
outs
clc
adc
inc
and
clc
xor
inc
add
or
pop
outs
adc
stos
and
in
jbe
xor
sbb
mov
add
adc
pop
inc
or
pop
test
dec
jp
and
push
or
and
je
jno
push
rcl
xchg
xchg
xchg
or
data16
xchg
add
or
clc
inc
and
mov
adc
sbb
sub
test
mov
jae
leave
sub
cld
dec
xor
push
loope
rol
ins
dec
mov
or
add
inc
jb
cs
es
ins
mov
push
sub
pop
jmp
adc
arpl
outs
jl
inc
and
add
sub
cwde
mov
sar
push
cdq
inc
cmp
int3
pop
ret
les
mov
aam
int3
adc
dec
sbb
jp
add
push
cli
add
test
jae
cmp
add
push
push
loopne
inc
dec
adc
xor
add
add
movs
xor
dec
or
and
push
jo
or
xor
add
sub
es
cmp
mov
sub
test
imul
or
outs
aaa
or
retf
inc
(bad)
dec
mov
sbb
(bad)
nop
in
movs
mov
push
push
test
and
mov
les
enter
fs
sub
pop
mov
cmp
push
cmp
jns
xor
pop
loop
push
and
outs
mov
cmp
mov
bound
mov
pushf
jl
sub
xchg
or
mov
inc
mov
push
jno
(bad)
fimul
add
push
push
shl
xor
adc
xor
pop
push
shl
outs
mov
xchg
or
add
fadd
mov
push
mov
inc
jp
or
jmp
ret
jmp
dec
push
in
in
push
imul
ss
push
gs
sub
pop
stos
adc
addr16
sbb
shl
jp
and
jle
jbe
into
outs
inc
mov
xor
adc
push
pusha
xchg
js
enter
clc
ss
jmp
mov
or
jne
dec
push
cs
pop
push
pusha
dec
imul
add
sub
push
loopne
mov
mov
clc
or
leave
inc
inc
adc
push
ds
ret
pop
mov
int3
addr16
mov
call
xor
xor
js
inc
je
dec
cmp
dec
jns
inc
jno
or
push
jo
pop
ins
movs
popa
bound
loopne
push
inc
cwde
inc
cwde
popa
cmp
add
xor
xor
(bad)
aam
add
popa
(bad)
enter
mov
cli
outs
jbe
inc
adc
xor
adc
add
scas
hlt
mov
dec
push
int3
or
adc
adc
push
add
ret
mov
and
sbb
xor
mov
sbb
add
push
mov
data16
dec
inc
cmp
in
ins
out
outs
xor
xor
loopne
push
mov
mov
(bad)
aaa
je
inc
xchg
inc
cdq
cld
out
pop
or
mov
sub
add
aaa
outs
cmp
fdivr
push
pop
loop
adc
cld
xor
les
add
push
mov
push
call
into
dec
outs
add
xchg
xchg
dec
cmp
mov
ins
mov
gs
jb
pop
or
or
inc
push
inc
adc
sbb
mov
dec
cs
mov
mov
lock
and
jp
add
stos
movs
add
stos
fdivr
cld
add
imul
inc
out
and
cli
ret
dec
dec
lods
dec
push
sub
dec
push
inc
add
add
and
jo
sbb
sub
push
ret
loope
mov
lods
cmps
push
dec
or
call
call
add
adc
adc
sbb
or
sbb
add
pop
inc
inc
and
push
and
or
cmp
out
inc
xchg
add
push
fcmovu
push
xchg
clc
outs
js
pop
jb
dec
or
or
fadd
outs
sub
jl
xchg
xor
cli
mov
xor
dec
aaa
mov
inc
xor
int3
push
sbb
call
and
cmps
fiadd
inc
dec
dec
arpl
ins
je
inc
dec
call
xchg
inc
mov
jo
push
or
mov
push
ins
cmp
xor
cmp
dec
aad
pop
dec
repnz
add
aaa
and
sbb
inc
add
ins
inc
test
push
cmp
test
ret
repnz
test
cmp
addr16
fsubr
je
inc
ins
xor
ret
stos
dec
dec
inc
leave
rcr
add
inc
popa
inc
enter
pop
or
lods
ins
ds
mov
rcl
cmp
jle
mov
(bad)
adc
mov
jp
sub
ret
sbb
inc
add
sbb
dec
push
or
call
or
popa
gs
push
cmp
add
clc
push
xor
xchg
ret
mov
movs
push
push
nop
push
popf
mov
and
inc
fs
sub
or
or
scas
sahf
sbb
fld
test
cmp
xchg
mov
outs
dec
shl
jmp
and
mov
jbe
xor
outs
mov
test
inc
jo
push
mov
into
lock
mov
jb
push
jmp
push
js
or
mov
add
push
or
jp
ja
scas
outs
shl
test
sub
inc
jecxz
aaa
push
pop
push
or
dec
push
rol
sbb
addr16
inc
mov
xchg
add
lea
mov
mov
loopne
xor
sahf
imul
xchg
push
and
je
add
adc
and
jo
outs
mov
jb
push
xor
imul
mov
dec
sub
popf
test
jo
ret
and
sbb
test
lock
mov
push
inc
fiadd
inc
mov
mov
adc
retf
pop
xchg
cmp
pop
cmp
xchg
int3
mov
loopne
int
adc
out
ds
aad
inc
push
push
or
push
adc
pusha
xor
in
push
inc
call
outs
xor
pushf
adc
sbb
movs
xor
xchg
push
popa
and
js
xor
push
imul
push
jbe
test
jp
add
add
mov
mov
frstor
inc
jno
inc
mov
ror
and
(bad)
push
ficom
stos
retf
or
xor
pop
xchg
dec
inc
xchg
mov
jle
xor
dec
dec
adc
xor
jb
dec
loop
popa
jb
les
jmp
inc
sub
push
inc
dec
pusha
jo
scas
cld
mov
xchg
pushf
test
xchg
xchg
dec
or
push
js
je
and
mov
add
cmps
push
dec
inc
leave
enter
dec
mov
arpl
rol
dec
pop
inc
dec
or
shr
push
mov
inc
or
jl
dec
sub
rcl
les
push
popa
enter
je
outs
pop
imul
push
jmp
jo
stos
mov
out
xor
adc
or
outs
inc
repnz
or
mov
pushf
and
pushf
(bad)
inc
pop
jle
jne
call
push
adc
sar
adc
mov
in
jo
pop
add
rol
test
jecxz
jns
js
dec
lods
adc
cmps
pop
jp
push
adc
add
mov
das
jbe
outs
lods
leave
inc
loope
data16
xor
adc
push
jae
imul
js
stos
leave
imul
push
rol
bound
push
dec
and
out
les
in
inc
push
nop
pusha
movs
call
lea
xor
adc
rol
pusha
and
or
push
dec
je
fistp
adc
test
enter
mov
inc
push
pusha
add
push
sub
call
or
mov
xchg
jbe
ins
movs
pop
adc
(bad)
push
into
xor
push
adc
push
pop
adc
add
adc
sub
outs
dec
es
adc
test
mov
movs
and
dec
xchg
imul
arpl
cmp
leave
mov
and
xor
push
mov
je
push
xor
mov
sbb
dec
push
leave
pop
mov
js
push
add
inc
mov
dec
push
ror
and
adc
and
or
fisub
lock
inc
sub
cmp
xor
xchg
jo
sbb
xchg
inc
pop
xor
jo
mov
cwde
aaa
cmp
dec
dec
inc
test
movs
fsub
xor
in
adc
dec
pop
push
add
add
mov
dec
push
sbb
popa
inc
mov
imul
sbb
pop
xor
aam
adc
adc
push
outs
jb
out
xor
push
enter
and
ins
push
mov
bound
or
dec
int
inc
hlt
fadd
dec
or
pop
push
test
pop
mov
pop
sub
(bad)
popa
push
inc
je
push
dec
sbb
mov
fadd
fwait
shl
pop
stos
sub
push
xor
sub
mov
add
xor
fisub
pusha
sub
pop
xchg
bound
xchg
inc
push
dec
fdiv
push
cmp
push
inc
repnz
push
sub
imul
dec
dec
ss
mov
fsub
inc
jecxz
ins
cmp
xor
adc
push
push
sub
xor
mov
ret
xor
mov
mov
bound
inc
or
pop
xor
push
xchg
cmps
sbb
pusha
call
xor
dec
imul
cmp
add
test
pop
stos
loop
cmp
ret
aam
adc
mov
imul
popa
jae
push
aaa
xor
xchg
ds
add
cwde
sbb
xor
or
add
dec
bound
mov
test
adc
lods
rol
aad
sbb
shl
ret
loopne
push
lods
dec
movs
push
fmulp
push
push
dec
and
out
call
ins
inc
cmp
sbb
shl
push
push
cmp
nop
push
into
lea
jae
and
or
pop
jl
xchg
pusha
jb
adc
scas
cwde
arpl
push
(bad)
fs
mov
fs
je
popa
dec
adc
lds
jae
mov
dec
xchg
or
loopne
push
push
push
out
movs
fwait
gs
jp
jae
add
adc
dec
cmp
in
(bad)
ss
adc
push
push
inc
push
ins
add
or
adc
mov
out
pusha
xchg
mov
pusha
xor
and
je
(bad)
test
sbb
push
loop
push
push
fsub
ja
jp
xor
fidiv
xchg
stos
sbb
ds
xchg
jo
int3
add
retf
push
push
adc
inc
aaa
xor
jbe
shr
mov
(bad)
dec
outs
into
xchg
dec
mov
inc
push
stos
add
inc
xor
push
add
fst
and
add
mov
pushf
test
movs
push
add
ins
(bad)
ins
retf
xor
ror
gs
xchg
ss
out
mov
bound
dec
mov
sbb
imul
cmp
push
in
and
sub
imul
les
outs
je
lods
push
jb
push
cmp
jbe
popf
fsubr
shr
push
stos
add
and
xor
pop
ins
xchg
or
dec
or
movs
js
hlt
push
ret
push
inc
xor
pop
dec
lods
cli
ins
inc
ret
push
xchg
mov
push
cld
push
or
add
adc
pop
clc
jo
ins
pop
mov
sbb
jb
push
dec
outs
xor
or
jb
int3
add
fist
test
dec
and
stos
adc
in
ja
pop
mov
dec
fsub
mov
cs
inc
neg
jbe
dec
sub
push
jmp
mov
xor
(bad)
push
add
aam
repnz
mov
sbb
cmps
inc
cmp
cdq
mov
pusha
fwait
add
rcr
push
arpl
or
xchg
repnz
add
in
xchg
mov
pushf
or
pop
push
xor
xor
push
dec
add
call
add
xchg
in
(bad)
jmp
lods
dec
push
rcl
jbe
inc
dec
cmp
or
sbb
and
jb
cmp
inc
mov
es
jp
add
add
movs
ror
jmp
push
inc
les
mov
push
push
movs
add
inc
push
mov
adc
ds
jo
inc
pushf
sub
imul
add
lea
jno
adc
js
dec
in
jp
pop
sub
push
push
push
xor
adc
popf
or
inc
xor
pop
push
mov
retf
push
imul
ficom
int3
fidiv
shl
mov
pop
in
ss
push
jo
jae
gs
loope
fs
stos
xchg
inc
movs
fs
push
ds
add
and
dec
mov
cmp
push
or
mov
repnz
adc
mov
xor
nop
inc
mov
lods
jo
js
jbe
inc
test
ret
cmp
or
and
jl
aad
push
stos
arpl
cmp
dec
push
sbb
idiv
add
nop
popa
pop
push
sbb
or
pop
adc
inc
dec
mov
cmp
add
mov
inc
icebp
mov
jne
scas
dec
or
retf
mov
push
rcr
adc
adc
push
push
add
xchg
xor
xchg
cdq
sub
pop
rcl
xor
mov
inc
mov
push
clc
inc
pushf
cwde
outs
jo
adc
je
dec
adc
sub
dec
sbb
scas
inc
ror
in
pop
jns
or
outs
test
pop
addr16
push
xchg
mov
dec
(bad)
or
int3
dec
enter
mov
pop
or
inc
jne
inc
xor
mov
sbb
jo
xor
nop
mov
or
sbb
pop
into
sub
mov
shl
mov
ss
gs
(bad)
rol
mov
sub
test
and
sbb
hlt
inc
sbb
sub
popa
xor
movs
sub
adc
adc
lock
inc
add
xor
cwde
dec
loop
call
cmps
dec
push
adc
inc
fcomp
jb
outs
ret
jbe
push
das
test
dec
and
xor
jns
or
jbe
fmul
arpl
pop
inc
push
xor
inc
ret
popa
out
cmp
xor
adc
sbb
pop
jne
push
dec
ss
pop
xchg
adc
dec
outs
mov
push
push
mov
inc
cwde
pop
push
sub
pop
and
jb
aaa
dec
push
mov
dec
cmp
xor
sub
icebp
pop
push
sub
dec
push
outs
push
inc
dec
test
stos
cmps
addr16
inc
ret
inc
xor
inc
mov
dec
loop
popa
jns
addr16
sub
ret
and
cdq
test
push
dec
push
imul
jns
inc
in
push
mov
in
mov
je
ss
les
gs
lds
xor
ss
or
push
or
js
test
pusha
test
call
dec
xor
inc
inc
push
fimul
pop
mov
addr16
mov
mov
jo
mov
je
xchg
addr16
(bad)
mov
or
add
sbb
inc
push
mov
jp
add
mov
sbb
cmp
int3
push
jne
xor
or
pop
pusha
push
sbb
inc
adc
inc
or
or
xchg
inc
or
mov
sbb
pop
dec
xor
xor
and
ss
push
cmp
push
add
gs
shl
nop
push
mov
mov
sub
pcmpgtb
inc
or
push
bound
sbb
sbb
inc
sub
jp
xor
sbb
or
pop
inc
or
sub
ins
inc
push
fs
jp
dec
retf
ret
(bad)
jae
inc
and
dec
repnz
loopne
ss
jns
rol
xor
dec
cmp
mov
ins
mov
and
lock
inc
xchg
xor
inc
mov
sbb
sub
add
js
xor
aam
dec
loop
push
xchg
adc
or
xor
xor
ret
out
inc
add
or
sub
arpl
hlt
xor
or
cmp
mov
jl
fs
jb
sub
ja
adc
leave
xchg
int3
into
inc
aaa
hlt
add
nop
add
scas
mov
test
ds
mov
dec
sub
sub
and
push
inc
enter
inc
mov
dec
adc
xchg
ins
lods
mov
popa
scas
cld
push
xchg
dec
dec
xchg
push
and
push
xor
nop
push
push
and
xor
xor
dec
movs
push
pop
xor
fimul
shl
popa
push
bound
jmp
arpl
jns
int3
inc
sbb
sub
mov
mov
push
cmps
scas
push
popa
mov
gs
dec
xor
or
into
ins
sbb
sub
lods
mov
ret
inc
jno
ss
bound
stos
dec
movs
cli
adc
fiadd
mov
cmps
pop
dec
adc
inc
inc
xor
push
movs
aad
mov
imul
adc
mov
clc
inc
ja
imul
or
mov
and
xchg
dec
inc
xor
lods
rol
xor
outs
bound
(bad)
out
mov
jae
inc
jne
xor
mov
xor
push
ins
pusha
push
jmp
arpl
ins
mov
dec
pop
push
push
dec
mov
shl
sub
inc
(bad)
arpl
mov
dec
outs
aaa
mov
aam
cmp
push
push
rol
inc
jno
call
inc
dec
dec
pop
jb
add
mov
push
adc
ret
xchg
add
push
dec
sbb
push
popa
sub
ins
push
push
in
or
cmp
in
sub
js
ja
inc
daa
or
dec
arpl
dec
enter
xor
adc
data16
mov
cmp
sub
xor
cmp
loopne
jl
jne
rol
lock
jns
add
push
cs
call
mov
call
push
js
xchg
add
cs
inc
mov
and
pusha
clc
push
pop
add
hlt
popa
sbb
adc
mov
dec
cdq
add
push
test
adc
inc
and
inc
dec
mov
mov
mov
xor
(bad)
dec
dec
dec
pusha
call
loopne
dec
add
adc
xor
push
imul
gs
jl
mov
adc
jp
sub
xchg
push
dec
(bad)
call
dec
dec
xor
ins
cmp
sbb
inc
mov
addr16
mov
mov
xchg
les
fiadd
sub
test
adc
push
jecxz
aaa
pop
or
adc
mov
lods
dec
ja
repnz
pop
les
sbb
and
push
and
sub
add
inc
dec
stos
inc
pop
add
fimul
add
and
arpl
pop
xchg
push
enter
add
fs
fs
inc
adc
test
cmps
call
inc
dec
fdiv
and
inc
push
dec
jmp
push
outs
inc
sub
jb
xor
dec
push
inc
clc
xor
and
push
js
adc
aam
inc
popa
sbb
pop
cmp
in
mov
xor
dec
or
nop
cld
popa
inc
sub
aad
imul
cmp
pop
adc
inc
inc
cmps
test
inc
sub
lods
popa
sbb
mov
enter
cmp
adc
push
push
jb
loopne
and
push
sbb
cs
push
push
pop
cmp
mov
push
add
push
je
or
and
xor
add
push
add
xchg
ja
bound
je
push
dec
or
push
xor
cwde
sub
cmp
push
inc
add
(bad)
mov
out
jo
les
mov
add
call
int3
dec
xor
jne
stos
adc
xchg
bound
xchg
push
mov
mov
jo
push
popa
cmp
inc
jbe
jp
test
add
push
xor
mov
or
in
js
inc
es
rcr
gs
imul
and
jl
adc
scas
xor
hlt
add
push
das
nop
push
xor
cmps
inc
int
mov
js
nop
adc
and
inc
popa
or
push
ret
sahf
and
push
mov
fs
and
ror
jo
lock
outs
loop
or
jne
and
add
pop
int
dec
adc
xor
int3
add
inc
push
sbb
mov
push
rol
pushf
test
sbb
and
dec
dec
jb
inc
adc
aam
sbb
mov
add
adc
mov
push
jae
cs
in
mov
or
jp
ss
adc
outs
inc
jno
dec
push
fadd
lods
push
stos
xor
jns
mov
inc
pop
xor
bound
push
inc
push
xor
imul
add
popa
mov
inc
ins
je
sub
jo
cmp
mov
dec
cwde
in
and
push
or
and
or
jp
cmp
mov
loopne
mov
add
repnz
jp
adc
scas
push
adc
mov
push
bound
ret
sub
xor
dec
ja
xchg
mov
push
sbb
inc
xor
inc
and
mov
test
push
mov
add
outs
pop
ret
loopne
adc
loopne
rol
dec
cmp
push
call
dec
cmp
adc
lods
adc
dec
jle
inc
sbb
lods
inc
xchg
dec
jp
inc
cs
mov
pop
mov
ins
xor
mov
cmp
jp
push
call
test
jp
inc
inc
and
mov
fcom
imul
imul
mov
adc
inc
(bad)
inc
dec
fs
rol
mov
aas
test
sar
scas
xor
sbb
push
sbb
push
je
add
popa
sub
xor
add
inc
inc
mov
add
push
push
push
ror
dec
or
push
or
sahf
sbb
test
dec
jns
es
or
lods
mov
aaa
jmp
add
mov
push
xor
test
jne
xchg
inc
rol
mov
cwde
loop
jb
add
in
add
or
mov
push
es
in
cli
xor
(bad)
xchg
adc
mov
outs
imul
push
xchg
inc
jbe
dec
cbw
jno
or
xor
add
retf
daa
int3
cs
js
enter
enter
cmp
(bad)
loopne
or
sub
loopne
mov
pop
xchg
loope
and
push
cmp
jge
imul
mov
adc
(bad)
push
mov
xchg
ss
push
dec
ins
xchg
add
mov
add
sbb
lds
ja
out
push
nop
push
into
arpl
inc
popa
jne
bound
fs
sub
bound
xchg
and
jo
adc
ds
dec
sub
xchg
push
jo
stos
xor
sub
icebp
sub
dec
adc
les
mov
push
imul
js
ficom
add
retf
xchg
and
mov
loopne
fs
into
stos
outs
dec
add
add
sub
or
ins
push
xchg
lock
dec
push
push
pusha
stos
scas
push
pop
push
in
jbe
fadd
mov
adc
ins
sbb
adc
push
in
inc
xor
cmp
fadd
mov
add
(bad)
out
jp
imul
pop
inc
xor
add
cmp
outs
inc
inc
(bad)
fisub
ins
cs
adc
test
add
cmps
fs
sub
(bad)
xor
bound
xor
push
rol
xor
stos
sar
cwde
jb
popa
push
jno
gs
lahf
sub
or
pop
dec
cdq
sahf
cmps
shl
mov
ss
gs
adc
mov
mov
jno
push
push
inc
ret
clc
push
cmp
and
add
mov
xor
(bad)
addr16
and
push
add
aad
cmp
sbb
push
gs
pop
fs
push
rol
fsub
mov
xchg
inc
dec
dec
loopne
pusha
les
xor
sbb
inc
adc
movs
mov
popa
push
mov
pop
pop
inc
jae
xor
dec
or
push
stos
ja
cld
inc
dec
xor
mov
push
nop
pop
lock
push
leavew
loop
nop
inc
dec
test
xchg
mov
data16
mov
mov
mov
data16
dec
xor
push
and
add
xor
ret
and
inc
in
dec
push
xor
and
pop
out
xchg
loopne
mov
ror
push
push
inc
inc
sub
or
cli
sbb
cs
push
or
dec
sub
add
inc
inc
dec
push
mov
adc
jbe
nop
xchg
pusha
add
inc
dec
mov
cmp
div
inc
or
xchg
push
push
jb
pop
xor
adc
outs
jae
pop
sahf
fsubr
or
and
dec
adc
push
add
fsub
ins
push
jno
jb
leave
clc
dec
dec
into
inc
inc
xor
fdiv
add
cmp
aam
or
mov
push
add
or
pop
mov
inc
jno
stos
push
xor
movs
xor
jp
jp
ss
and
push
dec
stos
inc
or
cmp
inc
gs
xor
push
push
js
xchg
xor
mov
push
cdq
loop
movs
xor
pop
rol
or
enter
dec
dec
data16
or
pusha
dec
shl
xor
push
ret
xor
popa
dec
fs
js
mov
arpl
ja
fild
adc
popa
push
dec
dec
inc
add
dec
test
adc
xor
or
xor
popa
mov
or
pushf
loope
dec
gs
dec
dec
add
jo
sbb
imul
push
add
(bad)
data16
push
dec
mov
and
push
xor
pop
push
fld
jbe
dec
add
push
mov
xchg
inc
push
cs
outs
ss
test
push
adc
dec
cmp
cli
inc
(bad)
cdq
pusha
mov
xor
xchg
sbb
jno
mov
adc
inc
arpl
or
rol
jo
adc
pushf
push
jo
xor
hlt
adc
es
or
sub
neg
sub
push
cmp
inc
add
sbb
retf
push
and
add
and
loopne
mov
jne
push
xor
mov
je
xor
into
jne
gs
pusha
test
xor
fs
dec
or
cmp
add
mov
dec
inc
out
inc
jbe
or
inc
xor
ins
aad
push
fidiv
pop
adc
fs
inc
adc
ins
sub
push
add
push
pop
fsubr
xor
nop
adc
dec
add
sub
mov
ja
dec
fwait
or
ss
imul
fsubr
push
inc
or
and
inc
ror
adc
and
ss
add
pop
sub
mov
mov
loopne
es
dec
sbb
or
es
pusha
xor
mov
push
ins
jo
push
and
and
xor
shl
inc
js
push
mov
inc
jbe
push
add
add
mov
outs
adc
and
cmp
test
add
ror
cmps
or
sar
lods
push
outs
jo
xchg
sbb
ins
dec
enter
xor
les
shl
or
inc
fsubr
inc
outs
xchg
jb
push
ins
pop
bound
sbb
mov
push
nop
dec
bound
cmp
or
dec
cld
call
into
add
jne
add
mov
jp
and
xor
adc
dec
je
inc
pop
aam
push
out
jno
pop
pop
jb
inc
dec
sub
mov
shl
or
add
outs
mov
mov
xor
aad
fisub
dec
push
sub
or
enter
dec
xor
fld
inc
xor
shr
dec
outs
push
sbb
hlt
bound
(bad)
out
into
push
test
mov
adc
cmp
adc
(bad)
enter
adc
push
mov
or
push
mov
sbb
dec
xor
sub
mov
dec
popa
ins
dec
je
and
leave
hlt
xchg
and
nop
inc
adc
js
inc
cmp
sub
ss
push
loopne
inc
dec
inc
cmps
mov
shl
mov
popa
push
push
jp
mov
xchg
push
bound
ss
imul
scas
xor
xor
sbb
mov
mov
pop
shl
add
js
and
adc
adc
in
jb
mov
into
bound
enter
add
add
mov
nop
mov
aad
dec
push
jns
data16
mov
cs
xor
mov
push
cs
push
or
hlt
or
outs
mov
aaa
sub
dec
push
xor
and
jns
cwde
pop
dec
mov
push
ins
add
js
sub
pushf
jo
push
sbb
jae
test
push
sbb
jmp
and
push
push
mov
sbb
and
ins
lods
xor
pop
js
test
fs
lock
bound
hlt
ror
push
push
mov
xchg
sub
fs
xor
clc
pushf
data16
adc
cmp
mov
les
aaa
push
adc
mov
shr
in
and
ret
sbb
stos
call
call
sbb
ss
ds
add
sub
ins
sub
mov
fidiv
inc
out
push
adc
jl
jp
sbb
mov
jns
inc
jo
add
inc
je
mov
fwait
and
imul
test
jb
or
sub
and
aaa
cmps
add
(bad)
jb
or
ins
or
cmp
sub
inc
adc
out
dec
shl
xor
jmp
scas
dec
jb
int
push
adc
fimul
mov
add
inc
and
test
stos
jb
dec
adc
into
ror
adc
jo
ss
xchg
inc
cmp
and
xchg
ins
imul
pop
sub
stos
push
test
jo
gs
je
adc
jb
pusha
push
addr16
mov
addr16
inc
inc
push
adc
test
dec
inc
sar
fmul
or
sub
xor
inc
pop
adc
or
inc
je
xor
pop
lods
outs
xor
push
dec
jne
cmp
inc
in
inc
xchg
and
cmp
pop
mov
or
ss
mov
push
gs
sbb
inc
inc
inc
loop
inc
adc
adc
fdiv
call
lods
inc
push
or
cmps
xor
sbb
sub
push
jbe
nop
pop
fs
add
ins
or
popa
je
jp
dec
inc
push
or
ror
ss
ins
ins
push
ja
rcr
gs
or
push
adc
inc
into
enter
call
jne
shl
sbb
adc
movs
add
repnz
xor
inc
adc
adc
xor
add
repnz
or
dec
(bad)
adc
xor
retf
mov
sahf
or
ins
ins
ss
xchg
push
shl
movs
popa
dec
and
adc
aad
out
call
add
fs
inc
xor
stos
cdq
or
mov
movs
sub
loop
fadd
add
outs
sub
xchg
add
shr
adc
pushf
je
(bad)
xor
inc
into
dec
pop
push
xor
or
xchg
cmp
jae
data16
or
push
inc
jp
push
sub
sub
inc
xchg
push
mov
stos
add
stos
jb
push
push
add
adc
xchg
and
dec
mov
push
push
ss
(bad)
fs
popa
ss
or
push
xchg
jb
les
push
je
or
mov
retf
xchg
arpl
arpl
pop
sbb
push
cli
(bad)
or
push
pop
jo
inc
aaa
or
xor
pop
inc
pop
fs
cmp
or
(bad)
mov
mov
xor
out
pop
push
xchg
or
and
gs
inc
dec
push
retf
inc
hlt
add
jb
add
push
fisub
push
sbb
or
xchg
push
add
fimul
dec
sub
add
je
add
bound
inc
or
clc
shr
xor
mov
push
hlt
adc
mov
push
gs
(bad)
shl
and
cmp
(bad)
inc
xor
or
jo
sbb
or
or
jo
dec
into
inc
pop
adc
pushf
xor
inc
jbe
push
je
stos
loop
stos
nop
popa
or
adc
push
push
dec
outs
inc
outs
ins
xor
or
dec
push
stos
xor
aam
mov
test
lods
or
jb
inc
loop
push
push
mov
fsub
(bad)
pop
dec
mov
mov
mov
mov
(bad)
push
pop
mov
pop
or
inc
push
sahf
push
inc
cwde
jo
shl
imul
pusha
out
sbb
mov
jl
push
and
sub
lea
or
or
pushf
push
xor
push
mov
or
xchg
rcl
pop
push
pop
pop
add
jmp
mov
mov
rol
stos
test
mov
jns
add
shl
push
add
ret
inc
push
scas
dec
jbe
xor
out
jb
rol
sub
enter
adc
push
and
jae
js
or
inc
adc
push
test
icebp
push
sub
dec
or
ret
test
dec
or
dec
or
adc
adc
xor
or
push
xor
mov
mov
mov
xor
jbe
jae
push
sbb
inc
and
or
add
or
and
stos
dec
test
adc
shr
cmps
loopne
xor
scas
aaa
mov
jbe
xor
fsubr
xchg
add
or
nop
inc
jo
mov
fiadd
jne
mov
or
or
or
lea
lods
and
int3
mov
add
mov
inc
and
inc
cmps
push
push
add
sub
adc
push
lock
jbe
push
sub
fs
push
test
fisubr
nop
push
cdq
nop
out
imul
push
sub
xor
sub
xchg
movs
push
xchg
jp
xor
inc
arpl
push
adc
cld
push
pop
or
stos
mov
je
ins
dec
mov
pop
mov
jbe
arpl
dec
jo
xor
jp
add
lea
add
fdiv
add
inc
js
inc
and
mov
loop
and
push
inc
push
sub
sub
pop
add
(bad)
push
mov
push
js
and
test
add
ins
add
and
dec
inc
sub
test
xor
and
sub
push
or
adc
cs
fcom
mov
adc
ss
dec
push
add
mov
dec
push
aaa
daa
or
xor
inc
cmp
dec
dec
dec
fs
xor
or
js
push
jbe
sub
pop
xor
push
lock
xor
push
xor
stos
or
mov
mov
push
xchg
pop
inc
nop
test
cmp
ins
repnz
iret
popa
mov
out
xchg
inc
jg
ret
pop
dec
imul
inc
push
mov
sbb
lods
push
into
dec
jae
bound
or
dec
xor
jbe
pop
cs
sar
jbe
adc
call
stos
cmps
xor
scas
mov
jne
push
mov
push
pop
fadd
movs
lock
sub
mov
dec
push
dec
mov
popa
loopne
scas
cwde
jbe
dec
jbe
jp
jbe
in
xor
push
dec
dec
push
add
sub
and
dec
mov
outs
xor
nop
push
add
repnz
add
fiadd
call
mov
imul
or
es
xchg
push
sbb
clc
push
adc
mov
sar
or
test
jp
or
push
movs
mov
adc
mov
push
dec
push
cwde
pop
enter
add
js
mov
xchg
int3
mov
fs
inc
or
or
xor
add
jmp
stos
and
push
pop
dec
jmp
add
or
call
repnz
pop
adc
push
jno
push
mov
dec
or
shl
inc
pushf
js
jo
add
xor
jp
ins
fadd
and
mov
push
data16
push
add
jo
leave
mov
xor
push
xor
or
xor
adc
add
cs
xor
bound
out
xchg
mov
mov
xor
inc
rol
enter
add
xor
es
xor
dec
sub
inc
clc
fs
mov
ja
inc
inc
dec
pop
jne
sahf
cmp
dec
sub
sbb
jne
pushf
push
imul
popa
and
outs
push
mov
cmp
shr
popa
cmp
call
push
and
fadd
dec
inc
aaa
and
push
cld
xor
push
xor
rcl
add
mov
mov
inc
ins
xchg
inc
sbb
xchg
sub
mov
or
clc
jbe
(bad)
call
pusha
and
pop
imul
shr
add
mov
popa
popf
or
sub
imul
push
adc
dec
pop
shl
inc
inc
popa
pop
movs
push
xor
dec
cmp
test
in
inc
and
retf
sbb
inc
dec
push
ins
and
push
popa
into
xor
sub
test
mov
inc
popa
adc
push
pusha
jno
stos
and
push
rcl
mov
rol
or
mov
bound
mov
dec
xor
arpl
or
inc
jbe
or
call
aad
inc
xchg
mov
push
(bad)
xchg
adc
inc
inc
test
mov
cmp
outs
pop
out
dec
jp
dec
sub
out
outs
dec
nop
es
push
push
ins
mov
adc
dec
adc
add
adc
jo
push
shl
xchg
loopne
pop
cmp
cmp
xchg
enter
inc
ret
in
dec
or
ins
mov
xchg
adc
pop
mov
mov
push
dec
mov
xchg
or
rcl
cmp
outs
or
xchg
or
out
or
gs
imul
mov
xor
and
mov
jmp
ss
stos
imul
push
(bad)
sahf
push
push
bound
mov
jae
inc
arpl
xor
and
ficom
and
mov
jecxz
xchg
xor
dec
cmp
ss
add
inc
jb
loopne
or
inc
pop
push
mov
stos
xchg
xchg
and
or
aaa
xor
ret
aam
in
pushf
js
ins
xchg
pusha
nop
bound
int3
mov
push
xor
bound
inc
jb
popa
imul
inc
ins
push
push
dec
pop
pop
ja
ja
enter
ds
inc
mov
pusha
enter
movs
push
adc
dec
push
cli
outs
jne
push
loope
pop
je
sbb
mov
mov
or
sbb
xchg
add
dec
inc
hlt
jbe
xchg
aam
xor
or
push
fadd
mov
loopne
push
push
test
jle
gs
xor
add
and
shr
ins
bound
push
jbe
push
pop
or
outs
push
or
sub
fst
dec
hlt
xor
xchg
add
clc
cmp
cwde
leave
es
adc
ins
adc
and
add
ss
or
ins
pop
adc
dec
and
mov
es
ror
loopne
jl
cmp
cwde
mov
sbb
push
popa
loopne
aaa
lock
pop
sub
add
xchg
mov
mov
repnz
sbb
jne
mov
adc
dec
fadd
mov
inc
adc
push
sub
cwde
sbb
sbb
dec
mov
dec
push
cmp
jmp
add
jbe
push
xor
and
ins
dec
xor
sbb
inc
push
data16
sbb
add
mov
adc
sub
mov
imul
les
test
data16
dec
push
bound
push
inc
test
dec
ja
sbb
in
xchg
xor
pusha
push
xor
and
xor
addr16
cmp
jbe
add
and
scas
mov
cmp
loop
aad
je
xor
jb
jae
pop
sub
pop
dec
ins
dec
pop
jle
imul
and
ss
adc
ja
mov
inc
das
push
mov
dec
js
into
or
pusha
xor
sub
jb
jbe
and
dec
and
out
arpl
bound
pop
mov
ins
jp
mov
push
sub
dec
adc
or
inc
inc
ss
shr
pop
inc
stos
xor
mov
push
cmp
sub
aam
scas
dec
push
test
push
push
jb
add
adc
sbb
loope
test
imul
inc
add
jae
mov
xchg
(bad)
sbb
and
fadd
adc
or
in
inc
dec
cdq
or
ins
cs
inc
push
fs
jb
push
push
loopne
pop
inc
pop
mov
xor
inc
dec
add
mov
jne
jb
dec
nop
jp
cmps
or
push
inc
cmp
call
push
bound
push
add
ret
xchg
and
push
fimul
inc
data16
push
xlat
push
push
jo
dec
inc
pop
push
pop
sub
push
jns
dec
inc
test
cmp
je
popa
dec
ss
jne
mov
and
add
xor
push
sub
and
inc
gs
popa
inc
dec
push
sub
scas
js
jns
test
jp
les
imul
ins
popa
mov
pop
push
add
add
mov
push
stos
hlt
xor
add
dec
dec
dec
mov
inc
push
movs
outs
dec
outs
jp
pop
gs
jns
jb
js
shr
imul
aaa
lods
mov
loop
dec
jbe
xor
or
dec
mov
loopne
rcr
add
push
cmp
ficom
xor
inc
popa
cmp
sub
xor
push
sbb
jmp
movs
xor
popa
mov
dec
inc
or
cmp
mov
sbb
addr16
movs
es
xor
mov
push
pop
inc
push
pop
je
dec
and
xchg
test
adc
arpl
js
popa
push
pop
cs
xor
cwde
jp
imul
sbb
sub
ficom
bound
push
cmp
inc
inc
mov
pushw
add
adc
inc
adc
test
dec
or
js
xor
call
aam
leave
(bad)
fs
movs
push
xchg
imul
push
adc
pusha
xor
inc
js
xchg
gs
call
nop
push
push
jmp
test
mov
nop
xor
lds
inc
jb
call
jo
xor
sub
sub
retf
dec
cwde
add
sbb
add
xor
imul
or
push
jle
adc
and
call
push
data16
pop
test
xchg
push
dec
inc
call
lods
dec
dec
mov
loopne
mov
xchg
sahf
inc
(bad)
mov
shr
inc
das
mov
add
mov
xchg
mov
outs
push
dec
add
adc
in
push
mov
fdivr
dec
xor
hlt
js
ds
cmps
push
lods
mov
test
es
mov
bound
or
imul
xlat
xor
nop
ret
add
ins
outs
push
sub
pop
or
add
mov
push
retf
lods
es
jo
push
sbb
xchg
push
outs
dec
mov
inc
mov
imul
push
sub
inc
or
xor
aam
call
mov
jbe
sub
aam
push
mov
xchg
push
mov
loope
or
sub
mov
inc
push
mov
shl
dec
fwait
add
dec
addr16
dec
and
dec
adc
dec
add
cmps
push
dec
pop
add
cmp
dec
jmp
xor
fdiv
retf
popa
hlt
fcom
sub
aaa
add
adc
push
pop
data16
push
push
adc
ss
adc
test
xor
jmp
cmp
imul
xor
xchg
repnz
shl
ins
inc
and
mov
pop
or
add
mov
aam
dec
add
or
stos
scas
jno
outs
pop
and
push
dec
js
cwde
adc
pusha
loopne
push
mov
ror
xor
inc
push
dec
mov
dec
inc
cmp
cmps
pop
(bad)
dec
inc
or
pushf
adc
cmp
xchg
sub
mov
mov
dec
es
xor
sbb
xor
pop
push
jno
inc
dec
mov
adc
call
mov
xchg
or
xor
push
push
push
inc
jp
inc
inc
sub
call
jb
movs
push
pop
nop
aam
push
in
and
(bad)
jb
ins
mov
jo
adc
inc
xor
test
mov
xchg
mov
or
jno
dec
dec
dec
sub
xchg
xchg
mov
jne
mov
jae
xchg
retf
or
xor
int3
xor
xor
mov
test
inc
inc
scas
inc
pop
retf
jl
in
inc
push
push
and
cmp
sbb
jb
movs
ds
adc
cld
inc
jbe
cli
jp
inc
ins
shr
inc
add
and
sub
or
adc
xlat
outs
inc
ss
clc
sub
or
cli
push
xor
cmp
retf
dec
push
inc
fidiv
adc
cmp
push
cmp
pop
and
push
fdivr
xchg
mov
mov
xor
cs
xor
push
test
jb
inc
cmp
data16
adc
push
(bad)
aaa
push
cmp
jle
outs
adc
or
cmp
xor
shr
inc
fs
push
jns
push
cmp
or
cmp
push
add
fs
or
pop
xor
add
aaa
mov
jne
or
sub
sub
fisub
aam
add
mov
xor
push
lock
push
push
sbb
popa
push
dec
imul
outs
jp
dec
cs
mov
xor
push
xor
adc
test
pop
push
popa
push
ins
sbb
push
push
mov
adc
js
mov
xchg
sahf
dec
and
jo
pop
es
cmps
rcl
jo
inc
adc
mov
inc
add
or
pusha
(bad)
adc
push
xchg
inc
cwde
mov
add
mov
or
fld
mov
sub
dec
in
xor
cli
and
sub
es
cwde
xor
(bad)
xor
sahf
dec
bound
dec
jo
test
pushaw
mov
ins
pop
ins
or
popa
nop
ss
push
fs
cdq
inc
lods
(bad)
push
dec
xchg
inc
add
aad
ret
mov
mov
jae
ins
cmp
sbb
sub
popa
arpl
add
cmp
lock
mov
push
mov
and
mov
push
sub
in
imul
shl
jb
jb
sbb
pusha
rcl
inc
xor
dec
sbb
cld
mov
pop
pop
push
ins
sub
mov
pop
cwde
les
adc
dec
jmp
imul
outs
into
ja
sbb
cmp
and
ins
dec
xor
ds
add
or
add
jb
push
or
test
add
or
adc
pusha
sub
sub
pop
xchg
xor
ret
or
jne
dec
inc
rcl
call
push
add
dec
jo
ins
pushf
(bad)
dec
test
movs
fdivr
ins
dec
bound
(bad)
fcom
mov
or
je
inc
xchg
in
push
addr16
push
mov
cmp
arpl
cmp
mov
ss
mov
or
jae
and
push
jne
mov
mov
inc
push
mov
mov
dec
dec
xor
pop
sbb
aam
push
adc
xor
inc
js
fs
mov
daa
add
int3
push
(bad)
cs
dec
sub
or
ror
dec
jno
cld
les
adc
xchg
imul
sbb
push
inc
ror
and
mov
push
popa
and
mov
movs
or
popa
shl
ficom
push
adc
or
fmul
gs
push
and
xor
mov
pop
pop
or
jp
dec
cmp
xchg
ret
in
push
pop
or
mov
xor
mov
xor
xor
stos
jmp
jle
test
adc
pushf
adc
jb
jb
mov
ret
movs
ficom
or
jb
ret
arpl
xchg
cwde
xor
ret
push
cs
in
add
js
jns
ror
dec
out
in
xor
xor
or
int3
test
mov
cmps
and
mov
test
cmp
inc
mov
adc
xor
mov
sbb
mov
mov
fidiv
or
add
and
in
imul
inc
fld
push
push
push
pop
je
movs
mov
dec
jb
imul
adc
fs
or
aaa
test
retf
pushf
xchg
add
pop
into
xor
nop
in
xor
test
jo
cdq
mov
push
int3
add
add
dec
and
data16
or
outs
ss
add
(bad)
push
shl
and
mov
sub
jbe
push
call
data16
jp
xchg
and
or
add
push
and
test
xor
scas
and
push
mov
outs
inc
mov
xchg
fstp
mov
push
shl
ret
les
ins
rol
xchg
xor
es
adc
jb
test
mov
jno
and
sub
inc
ret
inc
inc
push
fidivr
call
gs
inc
int3
sub
xor
test
ficom
ins
jne
ficomp
push
fild
(bad)
sub
push
popa
inc
jb
pop
or
call
cli
addr16
fs
pop
xor
dec
mov
xor
adc
adc
bound
xchg
pop
repnz
movs
add
ret
or
bound
push
les
rcr
or
dec
dec
xchg
push
pop
adc
sbb
popa
mov
inc
imul
ds
inc
jbe
mov
jno
js
sbb
xor
cli
inc
mov
dec
sub
xor
mov
bound
loopne
inc
bound
lods
adc
bound
sbb
ins
loop
(bad)
xor
aam
sbb
mov
and
add
lahf
movs
inc
test
inc
inc
(bad)
xor
pop
and
shr
push
je
mov
retf
movs
push
xchg
or
add
ins
enter
jbe
pusha
jb
aaa
adc
mov
push
cdq
test
mov
(bad)
push
xor
push
push
mov
xchg
ret
scas
imul
sub
push
lock
pop
(bad)
aad
push
jae
or
cmp
dec
or
xor
in
lock
push
xor
or
data16
out
mov
jno
data16
push
inc
xor
movs
sbb
test
clc
imul
mov
imul
add
push
push
fmul
bound
or
mov
mov
gs
adc
pop
cli
ss
pop
lods
mov
dec
loop
retf
lods
cmp
push
jbe
push
out
xor
(bad)
lock
add
inc
or
js
add
enter
cmp
mov
or
adc
gs
ret
pusha
test
xchg
push
ja
push
adc
sbb
cmp
add
stos
sub
mov
push
int3
jmp
pusha
ret
push
cdq
inc
mov
pop
gs
movs
jp
pusha
add
xor
xor
(bad)
mov
add
pop
(bad)
inc
aaa
movs
mov
cmp
cmp
inc
je
cdq
push
mov
nop
dec
(bad)
fidivr
sub
or
mov
push
aad
ja
push
or
dec
ret
inc
push
mov
lods
shr
jp
push
adc
add
adc
jb
shr
pop
fisub
jbe
add
int3
cld
call
int3
gs
inc
and
fisub
pop
jne
xor
sub
in
hlt
fdiv
dec
nop
push
and
test
in
jae
mov
movs
add
movs
addr16
inc
inc
and
and
adc
inc
movs
popa
dec
mov
div
mov
sub
in
jmp
lock
push
inc
inc
outs
outs
push
xor
cli
cmp
sbb
dec
ficom
and
inc
pop
or
loope
xchg
rcl
add
push
mov
sub
or
add
xor
gs
pop
mov
ja
popa
fcom
push
or
ja
sbb
cmp
mov
int
or
stos
addr16
ins
inc
pushw
sbb
mov
gs
add
ins
xchg
push
bound
js
call
mov
or
test
mov
dec
aad
push
outs
dec
retf
sbb
adc
call
pop
or
push
pusha
cwde
les
outs
popa
cwde
add
loop
inc
add
pop
mov
clc
jns
cmp
mov
push
add
or
inc
sbb
xor
mov
jne
jo
jmp
xchg
sub
addr16
retf
inc
fcom
dec
mov
push
add
xchg
ss
adc
cmp
ret
or
and
cli
retf
or
es
(bad)
int3
fst
test
cmc
push
sbb
int3
inc
adc
jp
test
xchg
enter
push
mov
add
xor
xchg
leave
rcr
adc
push
fs
ret
and
dec
loope
adc
js
add
jmp
push
xchg
or
jo
dec
xchg
bnd
mov
sbb
xor
xchg
inc
dec
clc
outs
dec
and
mov
add
push
fimul
sbb
nop
cmps
add
push
ficom
pop
fwait
xor
arpl
fsub
adc
push
dec
xchg
ret
outs
jno
pop
int3
xchg
popa
jne
ins
or
add
frstor
inc
sub
and
or
jo
jb
mov
mov
clc
fs
xor
add
stos
push
gs
jmp
add
call
ja
imul
dec
inc
repnz
into
and
ficom
inc
and
movs
pop
xchg
inc
lods
(bad)
jns
fsub
mov
ss
push
mov
sbb
pushf
push
and
jo
rcr
sub
mov
ins
add
adc
imul
popa
and
push
pop
inc
into
fmul
mov
and
xor
or
push
jle
xchg
push
add
ins
dec
push
add
add
xor
cmp
je
hlt
jp
inc
or
dec
mov
sbb
ins
jo
call
nop
sar
push
mov
cmps
popa
lods
sbb
mov
push
mov
js
sbb
and
inc
cmp
xchg
(bad)
cmps
pop
dec
retf
adc
cmp
pop
or
sbb
or
movs
push
enter
sbb
xor
test
mov
bnd
xchg
mov
pushf
pop
sub
add
inc
cmp
test
and
push
or
or
mov
dec
and
pop
movs
mov
xor
sub
call
je
cwde
mov
int3
inc
jb
retf
mov
aaa
mov
push
cmp
mov
mov
mov
xor
shr
test
xchg
sub
inc
into
js
xchg
sub
call
addr16
push
xor
ror
ins
add
sub
mov
fs
adc
mov
dec
xor
or
push
push
sub
sar
push
outs
sub
sub
adc
push
pushf
call
add
inc
push
or
das
test
add
xor
push
mov
inc
dec
xchg
xchg
mov
cmp
sub
lods
inc
inc
dec
push
aam
rcr
fdiv
cwde
and
fimul
into
mov
call
xor
pop
add
sub
dec
push
push
sub
xchg
or
inc
dec
mov
push
enter
mov
jne
push
shl
clc
sub
jb
push
shl
push
mov
sub
add
mov
push
lods
jb
imul
fisub
push
imul
jo
add
dec
push
aaa
sbb
int3
sub
dec
stos
inc
inc
adc
test
ret
add
mov
pop
sbb
add
bound
cmp
mov
test
or
mov
es
cmps
xor
icebp
or
imul
sub
ss
ss
inc
pop
gs
dec
jae
dec
ins
dec
ja
jo
out
jno
xchg
push
adc
ficom
scas
mov
or
sbb
sbb
xor
xchg
stos
add
gs
rol
cs
dec
inc
jl
push
test
add
sub
adc
mov
adc
dec
cmps
xchg
stos
ins
or
je
push
add
lock
bound
test
add
out
dec
arpl
dec
xchg
push
call
pop
jl
fs
aam
ror
cmp
mov
cs
loop
or
add
mov
cmp
push
dec
cmps
or
or
jno
sahf
aaa
mov
mov
jbe
arpl
jne
imul
or
scas
jo
sub
push
inc
loopne
adc
push
inc
xchg
xchg
imul
xor
add
stos
cs
add
and
dec
or
add
cmps
div
movs
enter
jbe
dec
jae
xor
push
imul
xchg
sub
cdq
add
cmps
bound
cwde
mov
ins
add
or
hlt
mov
add
outs
mov
pop
mov
pop
jb
shr
jp
imul
jae
xor
sub
push
mov
loop
outs
xchg
mov
or
or
dec
add
mov
shl
dec
and
jne
push
rcl
or
jno
cld
adc
push
push
jbe
mov
push
push
sub
inc
ja
dec
push
js
mov
push
scas
sub
and
push
add
jp
rcr
(bad)
and
inc
mov
in
ja
add
aaa
adc
cmp
xor
mov
adc
xchg
pusha
js
inc
xchg
add
adc
pop
jns
push
je
xchg
js
cmp
jne
push
pop
add
js
xor
(bad)
push
jb
mov
shl
xchg
bound
mov
cli
inc
push
bound
push
or
mov
or
rol
push
jp
lods
es
mov
inc
dec
cs
add
sub
imul
mov
es
into
mov
inc
inc
(bad)
mov
cwde
fmul
xor
js
ins
pop
aaa
push
jmp
dec
and
arpl
and
push
in
push
push
and
aad
inc
outs
push
push
push
lods
ss
popa
xchg
dec
jb
out
dec
stos
mov
mov
cld
xor
or
je
ins
add
mov
inc
jo
gs
push
xchg
push
bound
cmp
test
dec
ins
push
cmps
adc
sbb
dec
sub
add
cwde
adc
inc
outs
lods
push
and
and
ss
dec
test
pop
aam
test
inc
push
ja
push
push
mov
inc
cmp
adc
mov
mov
inc
js
adc
dec
ss
pop
and
sbb
gs
push
and
pop
dec
add
add
jl
outs
fcom
jae
inc
(bad)
inc
inc
inc
ret
cmp
or
xor
and
es
push
ret
xor
sbb
inc
inc
imul
xor
push
push
ror
or
push
inc
sub
or
pop
test
nop
adc
xchg
ret
or
add
add
mov
pop
adc
sbb
adc
popa
mov
aam
and
scas
and
jns
push
push
dec
cwde
add
enter
sub
inc
adc
cwde
or
mov
in
and
pop
push
jp
xor
cs
pop
fdiv
jp
in
and
pop
sub
add
scas
push
add
cmp
ds
ror
push
adc
mov
jb
mov
into
aaa
mov
push
sub
inc
push
sbb
scas
outs
push
sahf
push
push
scas
fucom
inc
dec
mov
and
outs
int3
aam
push
dec
cmp
arpl
out
adc
xor
push
push
push
in
ds
rol
cwde
and
fadd
test
push
inc
stos
cmp
mov
out
inc
or
arpl
leave
gs
cs
jo
adc
data16
adc
xchg
pop
(bad)
cmp
mov
jo
adc
sub
push
xor
inc
mov
scas
int3
xor
es
inc
jo
push
adc
mov
sub
data16
and
mov
and
call
push
push
aam
push
push
inc
dec
dec
adc
in
cwde
jmp
and
test
aaa
sub
call
ins
add
mov
jl
ins
clc
ret
xchg
loopne
sbb
inc
ror
je
je
jo
aad
gs
push
jo
mov
xchg
dec
pop
mov
push
inc
adc
mov
sbb
arpl
dec
xor
push
clc
aam
push
sbb
push
mov
inc
sub
inc
imul
dec
jb
push
stos
xchg
push
jne
sahf
inc
call
sbb
les
inc
adc
push
add
dec
add
repnz
mov
outs
ds
ret
xor
dec
retf
test
test
mov
stos
lds
add
jp
dec
es
push
outs
adc
sahf
mov
and
xchg
call
pushf
dec
push
les
xchg
jmp
sub
jp
rcr
lahf
movs
inc
inc
xchg
jbe
outs
cwde
fs
mov
lods
mov
dec
(bad)
cmp
addr16
sub
out
gs
ins
cmps
pushf
mov
add
pop
cmp
sub
add
add
xor
inc
dec
sbb
cli
dec
dec
les
in
push
dec
cmps
ret
push
gs
or
hlt
pushf
add
xor
pop
mov
pusha
inc
aaa
fimul
gs
test
addr16
or
push
je
inc
sub
sub
add
cs
xchg
sbb
inc
jo
lods
add
mov
and
call
or
je
dec
or
call
sbb
dec
dec
push
push
rcl
dec
inc
push
dec
inc
lea
cld
push
mov
mov
pop
xor
add
mov
inc
mov
cmp
jo
push
sub
mov
and
pop
nop
inc
jns
aaa
fs
add
mov
sbb
popa
xor
jo
cpuid
or
bound
test
test
or
jno
push
dec
add
push
call
mov
dec
pop
es
and
pusha
in
cmp
jp
imul
adc
dec
adc
mov
arpl
aad
jmp
xchg
dec
or
and
shl
jp
xchg
adc
fmul
push
(bad)
pusha
test
mov
push
xchg
pop
add
add
push
inc
fst
xor
xchg
push
add
add
in
and
ds
xor
push
test
ret
add
push
add
call
jbe
xor
sbb
enter
push
fs
jp
fcom
jo
shl
lods
cmp
xor
loopne
mov
add
ret
adc
or
mov
stos
jl
jp
jo
push
add
cmp
imul
xor
fist
inc
arpl
and
sbb
mov
ret
push
push
test
or
jo
sub
jno
mov
push
jb
adc
adc
bound
pop
mov
dec
pop
xor
xor
movs
add
push
pop
xchg
gs
ja
movs
mov
(bad)
cmp
push
(bad)
push
xor
push
mov
pop
or
inc
and
push
pop
mov
aam
bound
clc
popa
ja
mov
or
or
push
imul
cmp
rcl
and
pop
retf
or
push
push
push
stos
push
sub
popa
jo
shl
and
mov
nop
dec
push
push
mov
jmp
mov
dec
in
sbb
stos
popa
inc
xor
xor
in
jo
adc
pop
jns
dec
jno
mov
les
add
xor
add
ret
es
jp
outs
lods
enter
jae
inc
js
ret
sbb
fcom
jne
and
or
sub
mov
sub
xor
add
(bad)
add
mov
adc
stos
push
nop
inc
movs
xor
adc
in
xor
xor
(bad)
dec
fstp
cwde
ret
dec
ins
jle
pop
push
clc
push
adc
xor
mov
and
push
movs
adc
mov
mov
ins
fmul
mov
inc
ins
inc
dec
sub
in
mov
xchg
jbe
jne
xor
dec
sub
and
push
jl
xor
xchg
inc
and
test
popf
xor
dec
dec
inc
xor
and
movs
push
xchg
add
daa
loopne
call
jbe
jbe
les
inc
test
add
xor
mov
inc
scas
pop
sub
xor
inc
push
nop
and
test
rol
cmps
aad
outs
pop
lods
xor
xchg
xchg
jb
push
sbb
jo
loopne
int3
or
sbb
add
scas
addr16
add
loop
add
inc
inc
pop
ret
push
or
sahf
dec
push
sbb
call
inc
dec
jbe
fldenv
xchg
inc
inc
add
sbb
sub
push
gs
outs
jne
sbb
(bad)
cmp
dec
push
adc
mov
cs
adc
push
add
ss
mov
push
enter
outs
dec
mov
inc
sub
sub
bound
mov
imul
bnd
xor
sub
adc
pop
bound
(bad)
ds
and
aam
jns
push
outs
xor
lea
retf
dec
jle
dec
inc
arpl
test
shr
dec
add
ins
mov
rcl
dec
cs
data16
shr
push
lods
jae
jae
add
mul
or
sbb
ss
je
and
jle
add
sub
xor
lock
cdq
inc
or
les
aam
mov
adc
fiadd
inc
(bad)
push
dec
and
xor
push
sbb
mov
fisub
jno
adc
push
shr
outs
fiadd
adc
add
mov
shl
dec
call
jns
jl
cmp
es
fidiv
or
test
sahf
ret
and
test
adc
fs
push
xor
arpl
(bad)
xchg
and
cmp
mov
jo
mov
or
ins
adc
dec
outs
outs
and
mov
push
mov
mov
outs
imul
aaa
add
mov
mov
dec
test
dec
ret
outs
sahf
push
loopne
dec
rcl
add
adc
dec
rol
cmps
das
ror
dec
sub
mov
movs
sub
mov
movs
stos
and
and
adc
inc
out
aad
loopne
push
in
dec
je
loope
sbb
scas
jmp
push
pop
push
push
ss
dec
add
ins
fmulp
mov
jno
xor
cwde
sub
pop
fs
add
adc
dec
push
inc
fs
stos
cmp
push
push
or
bound
or
dec
pop
push
push
movs
movs
mov
inc
cdq
push
and
push
pusha
inc
jbe
jp
sub
movs
xchg
xor
cmps
cmp
jns
mov
clc
scas
add
movs
movs
push
add
fisub
in
les
push
inc
lock
jno
adc
or
cmp
ins
inc
jne
push
mov
xchg
js
adc
popa
mov
ficom
mov
cmp
dec
xor
js
and
fisubr
or
outs
sbb
and
jl
sahf
dec
or
retf
and
inc
jl
xor
add
addr16
push
sub
jbe
ss
or
shl
push
xor
dec
pusha
ret
inc
sbb
add
push
bound
or
inc
dec
shl
ret
fcom
xor
mov
xchg
xor
push
cmps
push
lds
cli
mov
cmp
or
and
pop
jo
mov
pop
cld
add
and
cmp
sub
push
sub
fadd
popa
int3
adc
or
jle
test
mov
push
rcl
mov
js
add
push
mov
aad
and
add
push
cmp
and
inc
(bad)
aaa
and
and
mov
rol
cmp
retf
cmc
test
dec
lods
xor
sbb
repnz
mov
sbb
sub
les
adc
dec
xchg
add
inc
clc
inc
inc
mov
push
and
or
push
dec
arpl
xor
ds
imul
pushf
mov
xor
sub
loopne
adc
rcr
(bad)
xor
mov
add
adc
cdq
adc
xchg
daa
test
pop
inc
enter
mov
dec
dec
and
cmp
outs
dec
dec
movs
push
ins
loopne
adc
int3
ss
lock
mov
dec
jbe
push
add
les
mov
xor
or
dec
(bad)
les
pop
cs
int3
push
jmp
push
cdq
test
movs
shl
inc
mov
mov
leave
push
sub
push
fst
add
and
sub
jbe
jge
inc
movs
enter
add
push
and
dec
push
push
fiadd
div
dec
push
je
or
arpl
fsubr
pop
jo
mov
imul
add
js
jo
xor
fwait
dec
mov
cmp
sbb
in
es
push
shl
adc
mov
dec
and
popa
and
sub
or
xor
lea
inc
sbb
cmps
outs
sbb
xor
and
in
loope
sub
and
xor
adc
and
sub
mov
sub
or
ret
add
adc
cli
cmp
inc
fisttp
and
in
ss
mov
push
mov
or
inc
cdq
(bad)
or
dec
fs
aaa
aaa
popa
dec
rol
ret
sub
xchg
mov
and
pop
xor
inc
out
adc
and
jbe
mov
outs
dec
cmp
mov
xor
js
sbb
adc
mov
push
test
xchg
push
push
push
xor
and
sahf
aam
jp
push
lods
jo
pushf
jb
xor
mov
ins
cld
imul
arpl
or
rol
push
adc
inc
dec
popa
xchg
inc
jb
imul
sbb
(bad)
push
bound
add
jbe
bound
sbb
mov
xchg
pop
enter
add
add
outs
mov
adc
mov
xchg
sub
cli
push
xor
push
cmp
xor
inc
adc
stos
add
arpl
test
dec
test
mov
ror
inc
add
inc
mov
mov
jbe
fld
dec
jle
inc
push
sub
jle
jbe
jp
add
stos
dec
ins
xor
inc
jp
imul
mov
(bad)
xchg
cwde
es
adc
pop
sbb
pop
aam
cli
dec
adc
sub
mov
xchg
jo
push
dec
jb
lods
jo
retf
add
pop
push
sbb
dec
push
dec
inc
int3
ror
pop
mov
dec
repnz
js
inc
and
pop
(bad)
popa
dec
mov
and
arpl
lods
push
pusha
pusha
xor
or
push
and
call
data16
outs
inc
mov
loopne
xchg
mov
call
popa
cmp
mov
push
add
mov
pop
xchg
push
sub
xchg
xchg
or
push
jo
stos
call
jo
lock
push
mov
push
jae
out
or
xchg
pusha
xchg
and
inc
test
test
push
arpl
cmp
aaa
cmp
test
and
xor
inc
xchg
pop
push
push
sub
mov
sub
inc
loop
repnz
push
inc
test
sbb
or
mov
xchg
stos
call
pop
dec
dec
and
mov
inc
xor
jbe
dec
imul
dec
sub
sub
fist
ret
jbe
test
sbb
push
ins
and
and
mov
xchg
in
pop
cs
sub
add
loope
add
xchg
sbb
gs
js
shl
call
pusha
dec
and
fimul
fs
jmp
and
add
jno
dec
aam
mov
inc
dec
push
dec
(bad)
push
imul
cmp
xchg
xchg
into
mov
dec
dec
fwait
shr
push
and
pop
popa
sub
jmp
ja
aaa
or
ss
call
cmps
or
and
shl
or
int3
cmp
in
loopne
adc
dec
bound
cwde
push
inc
outs
inc
or
cli
jb
mov
popa
outs
push
add
sub
adc
add
and
cmp
xor
dec
and
mov
xchg
arpl
call
ins
fidivr
and
mov
popa
je
ins
cmp
or
mov
push
add
or
inc
jp
dec
push
and
(bad)
push
add
push
push
retf
sub
loopne
xchg
retf
add
mov
jbe
or
push
and
add
push
and
fadd
cmp
inc
or
dec
js
xchg
mov
lock
push
shl
xchg
jno
popa
cs
adc
mov
dec
test
and
jp
xor
dec
jl
mov
fadd
retf
push
ins
bound
add
test
adc
push
pusha
push
bound
push
add
fnstsw
sbb
ss
nop
cmp
sub
test
push
call
mov
(bad)
cs
ret
cwde
inc
add
push
push
arpl
ret
push
shl
test
ret
into
inc
fist
jb
cs
mov
or
and
sub
enter
inc
sub
push
and
sub
movs
and
cmp
test
mov
jl
ins
sub
bound
int3
xchg
inc
sub
xor
pop
sub
push
push
lea
imul
bound
sub
mov
inc
nop
dec
data16
adc
es
dec
outs
mov
inc
ficom
jne
dec
(bad)
push
ror
dec
push
rol
add
ins
mov
inc
xchg
fs
or
push
jae
lock
mov
mov
push
xor
xor
imul
and
jb
shl
cmp
xor
into
dec
test
inc
push
sbb
push
lods
sub
pusha
lods
xor
inc
inc
push
push
bound
dec
add
bound
xor
jae
mov
xor
and
fcom
cmp
mov
pop
inc
push
sbb
arpl
rcl
adc
nop
cdq
add
or
in
sahf
arpl
mov
in
push
enter
outs
jno
add
inc
pop
dec
cwde
dec
in
jmp
cmps
dec
mov
fdiv
or
push
jle
add
push
call
inc
inc
mov
or
push
fs
adc
test
pusha
cmp
ret
add
jb
and
add
add
add
ficom
cs
call
lods
or
jns
in
push
inc
ja
jb
enter
jp
inc
push
jb
stos
ror
jp
ret
sbb
jmp
adc
push
pop
and
in
ja
jbe
jp
xor
inc
aas
fcomp
xor
xor
fs
dec
xchg
inc
inc
adc
push
out
loopne
adc
inc
xchg
ins
push
inc
pop
pusha
and
inc
cmp
cli
add
pusha
mov
mov
push
loopne
xchg
cli
ficomp
pop
xor
jbe
enter
adc
rcl
and
push
pop
jb
(bad)
les
sub
cmp
mov
inc
push
retf
(bad)
inc
xor
xor
mov
mov
fdiv
sub
outs
sbb
or
imul
cmp
ror
cmp
xchg
loopne
jmp
test
cmp
ss
aad
pop
inc
scas
jp
xchg
mov
les
push
sbb
xchg
js
xor
inc
dec
dec
add
cmps
and
dec
js
sub
or
sub
adc
push
add
cmp
shl
adc
ss
adc
cmp
scas
es
outs
inc
mov
enter
jo
loop
push
add
ficom
loopne
dec
bound
or
jne
pushf
or
outs
dec
or
pop
ins
dec
clc
cmp
push
xor
popa
push
mov
adc
pop
adc
mov
push
outs
or
inc
or
fisubr
inc
adc
test
xchg
adc
ss
push
ins
adc
aam
add
jp
xor
or
inc
or
adc
push
ins
cmp
inc
xor
add
inc
enter
add
test
popf
in
outs
jns
jp
dec
call
or
outs
out
loope
popa
push
push
mov
inc
push
adc
add
or
add
push
sub
adc
loop
push
fcmovnb
dec
ins
into
push
mov
les
es
imul
sub
in
movs
mov
cmp
outs
addr16
daa
or
pop
adc
dec
pop
mov
push
pop
push
sbb
cmp
sub
popa
xor
push
sbb
mov
mov
cwde
inc
or
push
adc
mov
add
add
imul
inc
cmps
mov
adc
fadd
dec
lods
shr
and
or
pop
push
or
adc
fs
mov
xchg
cmp
inc
and
in
nop
jp
adc
fisubr
fs
shl
push
inc
es
sub
or
dec
xchg
js
jb
push
dec
ror
adc
sbb
ss
cwde
mov
test
sbb
cmps
inc
ins
add
cmp
dec
dec
fs
xor
fsubr
inc
movs
scas
dec
fwait
dec
shr
or
adc
push
ret
cwde
dec
or
push
xchg
xor
jbe
dec
push
adc
dec
xor
push
and
xor
cmp
adc
mov
pop
retf
xchg
inc
mov
jbe
inc
dec
pop
aad
xor
xor
popa
sub
sbb
movs
push
stos
outs
pop
push
int3
jno
or
sub
and
sahf
push
xchg
gs
cmp
and
add
dec
js
int
mov
call
push
push
pushf
push
inc
and
mov
push
add
cmps
rol
or
ins
jmp
popa
dec
add
xchg
adc
test
xor
dec
ins
sbb
movs
pop
xchg
sub
sub
fimul
inc
inc
aam
js
xchg
movs
pusha
fwait
cmp
push
sbb
sub
mov
push
idiv
dec
cmp
dec
(bad)
xor
xchg
add
pop
adc
xchg
mov
xor
scas
xor
jbe
addr16
dec
xor
adc
adc
xor
push
nop
mov
cmp
push
xor
dec
add
mov
or
push
pop
jp
and
push
pop
ins
jp
and
pusha
xor
push
add
push
inc
pop
fld
imul
dec
pop
dec
dec
jno
or
push
xchg
add
xor
and
jle
xor
pop
inc
xor
cmp
push
add
push
dec
inc
or
push
ins
sub
or
add
fdivr
lods
xor
sub
je
cdq
pop
inc
inc
sbb
jbe
adc
push
mov
xchg
pop
inc
bound
jo
adc
push
add
pushf
dec
test
add
xor
test
lds
ror
cwde
push
sbb
mov
xor
jp
push
or
cmps
inc
jmp
mov
test
jae
add
add
dec
inc
jle
inc
cmp
mov
xor
cmp
jb
push
xchg
and
arpl
retf
jno
inc
sbb
pop
bound
bound
pop
add
in
xchg
les
dec
push
aaa
push
lds
jmp
push
stos
or
pushf
push
into
into
jae
sbb
push
ins
or
sub
test
add
sub
inc
scas
call
adc
cmp
pop
nop
push
sbb
and
mov
je
sbb
fidiv
sahf
addr16
push
pusha
test
retf
daa
movs
pushf
pushf
sbb
push
mov
inc
dec
gs
imul
push
inc
adc
or
xor
sbb
je
inc
(bad)
cld
add
adc
dec
sub
push
(bad)
loop
data16
sbb
cmps
sbb
cld
push
mov
xor
js
dec
sub
jae
and
bound
adc
dec
push
je
loope
add
jno
add
and
ret
add
ins
jb
and
add
xor
(bad)
pop
shr
jo
dec
fs
shl
xor
dec
and
and
sbb
inc
xchg
jbe
imul
test
ins
aaa
aam
and
push
mov
sub
and
xor
ret
add
push
ficomp
mov
jae
inc
push
je
xor
jbe
xor
jbe
mov
add
inc
daa
loopne
fdivr
pop
stos
pushf
and
inc
shl
mov
push
push
hlt
leave
xor
adc
adc
stos
push
ror
push
xor
xor
sub
call
push
jp
add
xchg
adc
add
movs
mov
test
cdq
in
shr
dec
mov
mov
inc
ins
or
or
pop
mov
cmps
aam
sub
outs
test
pop
mov
fisubr
jb
je
and
dec
into
add
add
dec
cmp
ins
retf
adc
sar
dec
cld
pop
ins
jbe
ret
add
cmp
aam
enter
inc
mov
dec
jmp
dec
pop
nop
inc
push
jl
sub
sub
dec
cmp
sub
cmp
or
fs
mov
leave
popa
retf
cwde
adc
into
mov
sbb
js
add
sub
xchg
cs
mov
nop
ss
and
xchg
push
imul
rol
push
inc
xchg
adc
bound
xor
push
cwde
pop
add
xor
mov
gs
inc
ror
push
stos
ret
shr
dec
jb
cmp
inc
rcl
jo
mov
fwait
push
scas
fs
stos
test
pusha
or
mov
pop
adc
push
cmp
enter
or
jns
sub
mov
mov
lods
cmp
retf
cmps
and
sub
push
xchg
jp
dec
push
outs
mov
push
push
push
dec
xchg
and
xor
ds
cmps
add
out
sbb
xor
or
xor
arpl
sub
inc
push
dec
test
push
sbb
push
(bad)
xor
mov
hlt
push
loopne
sub
add
(bad)
jno
ins
sub
dec
add
sub
pop
bound
add
pop
hlt
sub
push
mov
dec
je
adc
outs
call
and
xchg
out
cmp
out
or
adc
bound
fs
push
and
ins
xchg
retf
enter
outs
xchg
repnz
adc
jo
pop
rol
fs
sbb
dec
in
xor
adc
fld
xchg
mov
push
stos
jne
int3
and
or
mov
inc
mov
sub
mov
js
call
popa
xor
xchg
or
gs
dec
jns
enter
and
or
rcl
adc
dec
shl
adc
mov
or
popa
xor
dec
cmp
or
add
movs
mov
(bad)
sub
test
jns
push
add
imul
dec
or
ret
retf
and
outs
lods
adc
cmps
aam
dec
push
sbb
inc
dec
retf
push
pop
cmp
fsub
je
pop
ss
stos
sbb
test
xchg
push
mov
mov
push
mov
cmp
dec
dec
test
inc
scas
cli
mov
sub
jno
add
stos
inc
cdq
arpl
dec
dec
mov
lds
aam
jbe
inc
and
mov
dec
push
mov
inc
inc
stos
sbb
cli
dec
cmp
dec
nop
mov
pop
jns
mov
cmp
push
dec
hlt
adc
pop
arpl
add
mov
pop
jbe
and
nop
adc
dec
sub
repnz
and
popa
jle
pop
inc
inc
enter
out
ss
mov
dec
outs
les
mov
adc
pop
test
retf
push
push
push
adc
out
call
push
jo
xor
data16
jb
cmc
push
adc
adc
inc
ins
rol
in
call
pushf
ins
inc
push
ins
sbb
imul
add
stos
ins
fisubr
inc
pop
jo
call
clc
pop
mov
inc
and
or
pop
call
cld
jns
adc
inc
pop
or
sub
rcl
sub
dec
or
push
xor
stos
sub
les
or
cmp
dec
ret
add
mov
cld
xchg
push
mov
js
pop
or
jbe
adc
push
ja
dec
jb
js
inc
sbb
sar
jb
add
clc
xor
inc
sub
and
dec
xor
mov
loop
outs
in
lods
mov
dec
movs
jno
lock
and
push
push
and
push
mov
jo
inc
jae
fiadd
push
xor
outs
push
outs
cmp
rol
dec
adc
push
or
jmp
retf
push
repnz
mov
mov
pop
inc
xor
imul
xchg
cmp
imul
xchg
pop
jno
data16
push
jp
sub
add
ins
inc
nop
jae
inc
ret
ss
rol
fst
xor
loopne
sub
push
and
stos
scas
addr16
push
xor
mov
pop
adc
cmps
add
sbb
add
cmps
xchg
and
ret
push
out
xchg
test
enter
cmp
add
pop
push
ins
xchg
int
test
or
push
cmp
dec
sbb
xor
mov
and
gs
rcr
xor
xor
push
add
xchg
or
movs
movs
xchg
fwait
sub
popa
sub
sub
sbb
jp
push
push
scas
and
xchg
and
mov
(bad)
and
inc
push
es
add
jmp
addr16
mov
imul
call
shl
push
je
sub
pusha
mov
cmp
fsubr
mov
and
stos
mov
call
js
xor
dec
pusha
mov
xchg
adc
xor
inc
movs
test
mov
test
test
dec
je
ficom
dec
popa
imul
fmul
mov
adc
test
adc
pop
push
adc
clc
push
nop
jno
push
push
pop
(bad)
pushf
push
inc
push
ret
mov
int3
push
push
outs
sub
xor
mov
pop
shl
pop
add
jb
add
pop
mov
inc
xchg
jns
xor
mov
sbb
dec
inc
cs
adc
xor
arpl
jae
mov
or
and
outs
mov
add
dec
call
(bad)
fwait
sahf
pop
dec
jl
jbe
dec
jp
and
inc
or
push
pop
and
add
cmp
aaa
outs
push
sbb
xor
fdiv
sub
dec
and
and
xor
mov
in
(bad)
and
pop
inc
arpl
inc
pop
les
inc
and
push
jae
push
sbb
test
mov
xor
test
adc
adc
inc
push
ror
dec
push
and
inc
dec
cmp
sub
dec
fcomp
jno
int
in
push
stos
inc
xor
jae
mov
dec
dec
jae
xchg
inc
xor
mov
dec
sub
pop
dec
int3
xor
add
pop
adc
dec
aad
xor
lods
or
addr16
dec
dec
xchg
dec
xchg
adc
mov
push
push
mov
sub
push
mov
shr
into
inc
push
test
inc
or
dec
adc
je
push
xchg
or
test
fs
cmp
sub
inc
adc
fadd
jp
push
ins
push
or
xchg
cmp
or
fsub
data16
xor
push
pusha
adc
es
call
push
mov
bound
adc
inc
cmp
or
scas
jmp
xor
fldenv
inc
ja
gs
jg
pop
sub
outs
push
add
jae
mov
pop
mov
mov
(bad)
mov
arpl
es
and
in
mov
dec
or
js
fadd
inc
and
dec
push
jns
jns
or
push
push
bnd
mov
call
shl
dec
out
or
and
es
dec
push
fisub
jp
sbb
push
push
sbb
push
xor
mov
test
xor
ins
inc
and
push
push
jl
push
rol
or
(bad)
movs
pusha
or
xor
popa
inc
adc
push
and
dec
mov
jbe
add
mov
pop
sub
pop
push
imul
cmp
adc
dec
push
mov
sbb
cmp
cmp
outs
stos
add
push
adc
push
cmp
dec
je
push
cwde
push
mov
push
pusha
mov
bound
add
dec
cmp
push
mov
push
call
xor
dec
inc
(bad)
xor
jle
inc
js
inc
jo
and
inc
inc
xor
cdq
test
popa
jae
add
dec
push
mov
or
pusha
mov
dec
lods
cwde
je
gs
mov
dec
addr16
sbb
sar
fadd
sbb
adc
mov
lds
inc
pop
mov
inc
aam
inc
jle
push
or
jo
int
inc
xchg
ja
mov
mov
stos
push
push
jl
adc
and
ins
adc
push
jmp
into
aaa
adc
or
mov
sar
and
dec
mov
push
enter
mov
loopne
shr
retf
jb
mov
push
imul
pop
xchg
jl
jo
ret
inc
adc
inc
fs
push
ss
imul
mov
push
jb
xor
push
cdq
clc
test
jo
outs
popa
mov
in
cmps
xor
push
inc
adc
and
enter
pop
fwait
leave
mov
imul
cwde
inc
stos
pop
add
dec
mov
es
mov
fs
pop
sub
test
mov
cmps
fcmovbe
fs
and
sahf
push
movs
jecxz
rol
inc
inc
and
xor
ss
xor
mov
test
sbb
push
add
fs
ficom
dec
or
mov
rcr
ret
in
ret
clc
and
push
xchg
xor
dec
stos
jo
adc
mov
mov
sub
adc
push
mov
mov
push
imul
xor
sub
sub
and
loopne
xor
dec
mov
mov
adc
push
adc
add
ret
int
xor
add
xor
retf
push
pop
and
jp
jp
pop
ins
add
jo
dec
mov
xchg
or
adc
popa
push
sub
pusha
add
(bad)
mov
sbb
xchg
bound
movs
and
mov
mov
pop
sub
movs
loopne
call
mov
mov
sbb
dec
push
sbb
jns
mov
bound
in
jmp
clc
(bad)
xor
call
test
jo
test
inc
scas
retf
pop
fst
push
mov
cmps
push
push
add
dec
stos
or
dec
imul
test
sub
or
mov
sub
mov
pop
pop
jp
popa
bnd
and
adc
imul
adc
cmp
inc
mov
enter
or
in
inc
jb
and
fwait
inc
mov
push
inc
fcom
mov
xchg
or
loopne
lods
cmp
dec
and
xor
push
dec
xor
rol
lds
fs
inc
in
add
or
sbb
shr
jb
jo
inc
mov
mov
jmp
fcom
push
inc
xchg
test
sbb
loopne
xor
xchg
push
in
push
or
add
sar
mov
dec
adc
or
add
bound
mov
add
aam
fcom
dec
push
add
dec
sbb
ja
push
cs
mov
pop
arpl
gs
movs
mov
xor
mov
int3
sub
dec
mov
adc
or
pusha
or
mov
xor
pop
push
cmp
loopne
je
or
outs
addr16
addr16
push
and
pop
test
(bad)
in
and
test
adc
mov
retf
loopne
outs
pop
jae
push
ins
mov
jno
add
shl
sbb
out
fisubr
loopne
xor
inc
imul
push
inc
jae
push
ret
addr16
inc
push
push
add
push
jp
or
rol
inc
stos
dec
push
sbb
cmp
xor
fisubr
push
dec
add
loope
push
or
add
dec
push
ret
push
sbb
push
xor
and
and
add
out
adc
imul
push
add
je
xchg
sub
or
sbb
cli
or
and
imul
and
push
ret
pop
js
addr16
hlt
pop
and
sub
mov
push
jp
and
shr
jp
xor
test
ret
mov
fstp
dec
cdq
out
push
dec
push
xor
enter
ja
cli
dec
shl
push
xor
loop
add
jo
mov
call
stos
push
and
ins
xor
inc
jo
sub
and
xor
pop
ss
nop
adc
add
xchg
adc
xor
inc
dec
mov
push
ror
out
push
and
push
bnd
enter
sub
outs
xchg
mov
data16
lock
push
(bad)
les
add
mov
bound
sbb
push
pop
inc
cmps
in
(bad)
loopne
jbe
dec
xor
movs
add
mov
mov
mov
pop
lds
push
cmps
jp
cs
jbe
xor
mov
mov
sbb
and
int3
cmp
and
or
loopne
scas
or
xor
mov
and
push
push
add
sbb
pusha
push
inc
xchg
lock
push
cli
add
arpl
push
call
jp
sub
mov
sbb
movs
mov
push
push
mov
adc
xor
mov
and
adc
push
addr16
jbe
inc
dec
and
jbe
pop
push
inc
int
inc
cmp
scas
les
adc
pusha
test
mov
xchg
test
sbb
test
push
inc
(bad)
cli
xchg
sbb
mov
dec
xor
and
test
add
add
(bad)
dec
sub
push
data16
xchg
xor
and
dec
test
push
xor
xor
adc
sbb
test
ins
inc
in
xor
inc
and
push
push
jl
mov
inc
dec
dec
dec
pushf
adc
rol
xor
xchg
xor
dec
inc
stos
jmp
jbe
inc
dec
or
enter
ret
xor
pushf
fwait
pop
and
mov
mov
add
call
push
outs
sar
mov
push
dec
stos
pop
dec
enter
test
sbb
jbe
ja
xor
movs
pop
ss
xor
loop
sub
mov
add
jb
push
mov
push
mov
push
ins
outs
sub
add
adc
sbb
dec
cs
xor
inc
add
or
add
inc
dec
xchg
inc
rcl
shr
or
int3
push
add
and
add
fisub
or
ds
jns
aaa
out
push
jb
push
pop
push
dec
addr16
dec
bound
ins
dec
clc
push
out
push
xor
inc
pop
xor
dec
inc
xor
mov
sbb
push
sub
push
(bad)
push
in
pusha
sub
sbb
sbb
sub
or
retf
mov
je
call
and
in
test
call
jae
jbe
sub
dec
xor
adc
outs
bound
test
xor
test
sub
jb
pusha
mov
xor
xchg
or
and
inc
je
push
in
mov
hlt
aaa
inc
and
mov
adc
adc
dec
imul
xor
test
sub
inc
xor
dec
jo
sub
pop
sahf
les
xchg
test
ficomp
mov
pop
jne
retf
or
or
les
data16
test
dec
sbb
test
push
nop
push
sbb
dec
inc
add
aad
dec
retf
rol
ins
mov
push
jb
in
mov
push
dec
ss
adc
mov
cmp
or
inc
mov
in
test
test
ja
jp
cli
lods
popa
pop
imul
push
add
mov
movs
adc
into
arpl
sub
push
cmp
push
and
inc
mov
data16
or
rcr
or
or
adc
inc
test
push
jbe
xor
sub
jo
push
mov
inc
ret
movs
cmp
or
inc
mov
dec
lods
add
rcl
inc
xor
inc
data16
sub
mov
mov
or
mov
adc
xchg
fadd
stos
xor
sub
popa
movs
pop
add
push
mov
xchg
imul
push
test
xor
pushf
xchg
aam
(bad)
adc
cmp
sbb
push
sub
mov
sub
aad
pop
mov
fs
lds
pusha
repnz
inc
sub
fcom
scas
imul
js
imul
into
cmp
add
aam
pop
inc
pop
and
push
or
push
dec
and
xchg
ja
inc
or
add
push
call
push
jne
and
mov
adc
loope
clc
jb
mov
les
xor
in
push
inc
xchg
rcr
push
sbb
(bad)
in
add
aas
ror
xor
push
dec
ror
pop
add
outs
clc
fimul
dec
adc
mov
pop
ins
dec
pusha
and
js
or
dec
enter
cmp
add
fsub
dec
aaa
xor
test
jo
sub
and
lods
dec
mov
mov
jns
adc
pusha
add
arpl
adc
sub
and
xor
inc
mov
ins
xor
push
push
outs
pop
inc
and
pop
js
dec
mul
jne
aaa
add
ja
xor
jo
xor
ss
mov
xor
jo
mov
push
out
ins
sub
push
xor
test
jo
mov
movs
and
movs
sub
dec
ins
xor
dec
je
pop
xor
push
and
mov
int
or
pushf
dec
pusha
mov
xchg
push
jmp
dec
bound
adc
bound
xor
xor
aam
adc
inc
out
jne
stos
or
test
jo
into
push
and
in
add
ins
out
cmp
and
jbe
push
jns
sbb
mov
ins
outs
jns
in
ins
adc
dec
ins
sub
in
inc
sub
mov
sbb
cmps
add
retf
int3
lock
or
ret
dec
dec
dec
and
inc
outs
dec
sub
(bad)
js
fs
xchg
cmp
push
ins
dec
ins
mov
fisub
aaa
jo
adc
imul
out
je
push
add
mov
imul
xor
push
out
movs
add
adc
inc
inc
cmp
call
push
and
cmp
ret
sub
outs
dec
pop
int3
xchg
test
test
mov
sbb
js
add
push
mov
pop
push
test
jo
popa
fmul
or
mov
aad
or
inc
inc
push
inc
adc
rcr
add
push
add
xchg
inc
jp
cmp
scas
push
adc
in
xchg
sub
push
test
mov
cmp
lock
push
and
add
scas
add
sbb
ds
pop
movs
add
ds
pusha
push
xor
xor
or
stos
ins
ret
(bad)
(bad)
inc
enter
shl
mov
mov
or
xchg
mov
ret
test
shl
ins
call
pop
push
xchg
adc
gs
push
ret
mov
arpl
ins
cli
jbe
jle
movs
mov
cmp
(bad)
xor
xchg
rcl
pop
bound
outs
adc
je
lea
xor
ins
push
ret
jo
sbb
fadd
push
mov
dec
pop
add
js
dec
adc
dec
xor
lods
retf
or
stos
or
dec
dec
pop
arpl
adc
test
loopne
(bad)
jp
bound
push
je
jno
push
xchg
push
jmp
cmp
mov
mov
cli
push
dec
inc
xor
adc
out
les
outs
bound
nop
or
ret
test
mov
or
push
lods
mov
mov
pusha
adc
jbe
push
push
and
push
or
pop
inc
add
inc
loop
push
inc
popa
pop
add
js
jle
loope
mov
inc
pop
dec
mov
mov
push
fs
inc
call
jle
jno
xlat
bound
ins
mov
add
mov
sbb
xchg
jne
xchg
rol
inc
xchg
sbb
cmp
data16
add
xchg
dec
sub
test
cwde
ins
shr
sub
out
lods
inc
pop
fnsave
sub
or
dec
dec
adc
add
call
addr16
inc
xor
adc
fadd
imul
or
test
dec
xor
push
and
pushf
xor
add
dec
pop
je
call
lods
pusha
xor
outs
jns
stos
dec
inc
inc
adc
push
and
xor
je
sbb
pop
and
push
add
add
test
(bad)
sti
es
jp
data16
push
mov
add
dec
bound
jp
fwait
and
(bad)
or
bound
add
adc
jae
jbe
xor
push
add
sbb
cmp
mov
adc
jno
inc
inc
outs
push
add
mov
dec
outs
imul
xor
mov
mov
and
cmc
or
data16
adc
ja
xor
push
rcr
fsub
inc
dec
ss
les
xor
dec
push
push
movs
shl
dec
jb
jo
sub
dec
jo
add
dec
pop
xor
or
pop
push
and
dec
xchg
pusha
jns
mov
fimul
xchg
dec
es
dec
jne
and
push
ficom
jo
add
ss
or
rcl
dec
ins
mov
adc
sub
sub
dec
dec
push
or
add
cwde
call
mov
movs
add
movs
push
inc
and
mov
or
inc
jo
out
push
mov
cmp
call
push
mov
es
push
or
outs
adc
and
inc
push
xor
push
pop
add
xchg
mov
cs
xor
add
mov
dec
dec
jbe
dec
xor
jo
xor
data16
push
xor
(bad)
js
aam
cs
push
ss
or
push
xchg
xor
mov
adc
shr
or
jb
inc
xchg
adc
inc
sbb
int
dec
jp
jne
call
bound
dec
sar
sub
retf
push
outs
adc
ins
jb
nop
push
pop
out
popa
sbb
js
xor
push
je
dec
imul
test
enter
dec
sbb
clc
repnz
push
cmp
push
cmps
inc
shr
push
stos
adc
cmp
(bad)
imul
xchg
adc
ret
hlt
data16
outs
out
movs
dec
mov
push
add
fadd
or
push
push
sbb
rol
add
push
adc
test
mov
xchg
fs
ss
xchg
outs
push
add
pop
cwde
push
mul
test
add
rol
inc
dec
cs
inc
inc
(bad)
pop
or
pop
call
mov
cmp
aaa
clc
ss
cmp
cs
(bad)
out
sub
(bad)
div
rcl
xchg
push
loopne
xchg
dec
cld
push
fs
adc
and
xchg
stos
sub
push
add
push
mov
push
jp
xchg
aaa
inc
sub
xor
push
call
je
xor
mov
jb
jo
mov
xor
scas
pop
fs
add
push
add
jne
cmp
data16
les
pusha
inc
adc
and
fadd
push
pop
xlat
add
sbb
xor
loope
add
dec
xchg
push
or
arpl
ror
dec
pop
push
mov
push
inc
sbb
inc
xor
mov
xor
je
inc
popa
or
fidivr
add
pop
les
rol
and
pusha
mov
xor
sub
add
js
xchg
push
sub
ja
cmp
mov
inc
pop
mov
jne
les
nop
popa
push
dec
sahf
push
nop
inc
in
in
cli
sub
push
or
dec
and
dec
enter
adc
dec
dec
add
or
add
jo
stos
adc
shl
inc
out
arpl
test
inc
loop
pop
dec
sub
sbb
xchg
inc
dec
ds
cs
push
dec
push
dec
popa
cmp
inc
adc
pushw
sbb
inc
call
popf
stos
outs
arpl
aaa
inc
sbb
stos
inc
dec
inc
xor
sbb
or
gs
mov
(bad)
stos
lock
xor
mov
cmps
sub
push
pop
loop
dec
jo
enter
push
add
xchg
rcr
pop
adc
sbb
jns
lods
and
inc
jp
xor
inc
adc
out
lock
mov
inc
pop
sbb
push
xor
push
cmp
add
dec
inc
shl
inc
imul
int3
jbe
push
or
mov
or
push
adc
inc
or
adc
ss
push
mov
out
fst
sbb
ror
push
mov
inc
jne
or
out
movs
add
ja
jl
add
xchg
mov
dec
dec
jb
bound
test
in
cld
dec
jle
xchg
outs
pop
or
push
fs
sub
pop
hlt
cmp
cld
xor
add
mov
xchg
repnz
push
add
ins
cmps
jp
mov
and
call
or
inc
sub
xor
add
int3
outs
push
push
out
adc
xor
out
sbb
push
sbb
inc
inc
shl
lods
int
cli
test
addr16
outs
jp
pop
shr
xor
mov
pop
imul
jp
push
dec
inc
in
sub
pusha
test
jbe
push
push
xchg
je
ins
stos
arpl
mov
dec
jne
and
push
popa
stos
dec
jae
add
pop
mov
fst
inc
xchg
mov
or
or
add
popa
jb
jb
push
es
retf
pop
or
sub
mov
into
aaa
sbb
mov
dec
or
push
push
mov
jns
jmp
cli
inc
addr16
cli
xchg
fmul
and
pop
and
xchg
inc
or
add
mov
sbb
and
mov
inc
push
dec
adc
xor
mov
pusha
sub
add
ins
inc
inc
ss
push
inc
rcr
mov
xor
cdq
inc
mov
dec
push
ins
bound
mov
nop
test
push
or
gs
fisubr
push
push
mov
and
cli
dec
or
gs
sub
pop
je
xor
xchg
jle
xor
sub
mov
xchg
call
dec
nop
ret
call
push
ss
inc
popa
and
mov
and
push
and
enter
data16
sub
jo
inc
outs
add
outs
dec
rcr
xchg
enter
test
mov
mov
xor
xor
out
xchg
or
xor
jns
and
lock
cmp
push
dec
pop
adc
shr
mov
enter
add
call
sbb
xchg
add
aam
and
inc
or
cmp
outs
into
jmp
call
adc
pop
mov
mov
fsubr
xchg
mov
mov
movs
push
les
push
dec
mov
bound
ss
mov
and
ins
imul
ss
out
in
call
mov
ret
or
push
les
inc
pop
ins
js
pusha
jne
push
add
in
ficomp
mov
push
xor
fs
or
scas
hlt
mov
or
fwait
(bad)
push
push
inc
inc
add
adc
js
outs
nop
shl
push
shr
mov
dec
push
xchg
mov
inc
fiadd
or
inc
push
mov
adc
add
xchg
jl
and
push
or
pushw
push
aaa
add
js
or
mov
je
push
lods
adc
push
movs
aaa
xchg
je
dec
sub
jo
cwde
xor
js
push
xor
push
and
inc
scas
push
dec
pusha
shr
xor
test
ss
push
xor
add
push
xor
inc
add
mov
dec
adc
inc
jno
and
xor
sbb
cli
outs
call
jbe
inc
inc
rcl
inc
loopne
jno
and
push
je
aam
out
mov
ss
rol
mov
inc
mov
dec
arpl
or
sbb
call
sbb
and
push
add
xchg
push
(bad)
pop
push
ins
test
or
shl
jo
test
ins
sub
dec
sub
mov
mov
cli
sub
ins
fiadd
xor
and
call
or
inc
push
dec
xchg
fnsave
imul
fimul
dec
sub
xor
stos
fs
js
pusha
xchg
inc
lock
inc
push
cmps
inc
and
push
jb
push
add
popa
pop
retf
rol
inc
js
sbb
adc
jo
lock
push
add
loopne
adc
pop
jns
push
test
push
xchg
add
jne
ret
int3
dec
or
or
int3
inc
xchg
xchg
outs
clc
(bad)
test
mov
into
mov
cmps
pusha
sbb
les
push
adc
or
push
mov
cmp
outs
mov
into
ins
sbb
add
mov
jle
sbb
pusha
ja
pop
mov
inc
popa
push
cli
inc
pop
ins
add
add
test
jae
cmp
sbb
push
imul
ins
in
movs
mov
dec
dec
dec
sub
out
adc
mov
push
shl
sub
dec
jo
xchg
push
shr
aaa
scas
dec
add
and
sbb
adc
xchg
xor
dec
push
sub
outs
cmps
jp
xor
or
push
sub
adc
dec
push
push
push
mov
jne
add
inc
movs
xchg
or
xor
sbb
imul
mov
fadd
push
add
or
xor
push
arpl
fadd
and
mov
les
dec
jnp
push
push
xchg
jo
dec
cs
imul
aaa
mov
ins
xor
je
cli
pop
xor
retf
xor
stos
sbb
test
xor
push
mov
addr16
xchg
and
mov
or
ins
ss
push
push
ins
arpl
pop
and
js
jb
and
inc
(bad)
rol
xor
test
push
hlt
or
inc
xor
cld
nop
adc
push
push
push
xchg
xor
call
xor
ins
mov
mov
les
or
mov
push
push
loopne
mov
out
jbe
adc
pop
or
ror
dec
hlt
push
adc
mov
shl
dec
and
mov
mov
inc
and
add
inc
inc
popa
jl
add
jns
jp
dec
push
mov
mov
push
ss
ror
inc
xor
jl
dec
inc
jo
push
push
adc
je
shr
jbe
adc
ret
add
sub
test
jae
je
jo
in
jbe
cmp
inc
es
push
outs
push
add
cmps
test
dec
and
fidivr
mov
inc
mov
or
dec
and
retf
data16
cld
xor
adc
adc
push
into
or
xchg
and
sbb
sahf
mov
xchg
ss
or
or
outs
ss
dec
push
in
dec
or
dec
add
mov
sub
push
outs
dec
mov
push
dec
es
lods
xchg
sbb
loop
add
pop
jp
cmp
jp
xor
bound
sub
or
loopne
xor
inc
jecxz
dec
mov
xor
mov
(bad)
mov
xchg
stos
(bad)
leave
test
xor
imul
jl
push
ret
fsub
outs
stos
add
adc
nop
xor
nop
push
gs
addr16
nop
int3
mov
cmp
sar
push
xor
cmp
jo
sbb
sub
xchg
out
movs
stos
or
es
dec
and
test
test
jbe
add
sub
mov
or
enter
add
adc
and
pop
push
jle
fimul
scas
sub
xchg
or
dec
add
test
push
add
push
push
imul
add
add
sbb
inc
and
push
jl
fdiv
cmp
push
mov
push
dec
div
popa
cmps
cmp
xlat
rcl
mov
jbe
inc
xchg
and
and
mov
xor
call
ret
push
imul
in
les
or
sbb
xor
and
ret
inc
je
and
ss
arpl
shl
mov
push
push
jae
loop
sub
mov
cmp
cli
cmp
and
test
pusha
sbb
imul
jp
xchg
dec
nop
cmp
retf
test
dec
xor
xor
mov
clc
fdiv
push
dec
inc
inc
mov
dec
call
loop
test
mov
cs
adc
inc
ss
out
cmp
sub
jno
adc
sbb
fmul
pop
shr
mov
aaa
hlt
jno
bound
(bad)
jns
js
cmp
push
and
inc
rcl
xor
mov
cmp
inc
pop
or
cmp
mov
or
cmp
sbb
xor
jne
pop
and
sub
mov
cwde
outs
pop
dec
mov
cwde
imul
cwde
push
loope
or
inc
leave
nop
sbb
sbb
or
xor
xor
mov
xor
test
push
popa
mov
mov
retf
movs
movs
scas
mov
les
jns
push
cwde
jb
inc
inc
add
dec
dec
mov
je
xor
out
push
(bad)
test
xor
mov
cld
mov
inc
push
cmps
or
dec
cmp
fs
or
(bad)
popa
scas
test
es
or
inc
hlt
imul
push
add
pop
and
adc
movs
call
push
cwde
cmp
(bad)
gs
ins
ret
push
dec
add
add
dec
mov
and
imul
or
add
or
dec
or
gs
adc
sbb
cmp
mov
inc
mov
adc
add
push
test
mov
loop
call
jo
sbb
ins
push
inc
inc
sahf
sbb
imul
test
ins
ins
dec
push
dec
fs
test
jb
data16
add
cmp
sub
ss
and
inc
dec
mov
or
xor
fs
mov
and
popa
loop
and
shr
inc
bound
mov
jp
inc
xor
fdiv
fiadd
xor
loope
add
jbe
sub
jne
(bad)
jbe
pop
or
pop
xor
test
or
sub
pop
mov
call
addr16
sub
dec
call
fs
les
inc
push
mov
aad
xor
mov
(bad)
push
pop
push
fs
dec
jns
xor
add
hlt
push
or
mov
ss
aam
cmps
inc
(bad)
dec
mov
adc
fs
and
and
or
mov
inc
or
pusha
cmp
inc
cld
ja
out
rol
mov
mov
aaa
xor
xor
xchg
push
xchg
test
cmp
test
retf
push
sbb
test
test
inc
sub
push
xor
ror
js
movs
or
push
dec
and
mov
aam
dec
mov
cmps
mov
jo
js
outs
pop
outs
or
lods
dec
xchg
dec
adc
es
cdq
add
loopne
in
push
inc
mov
and
xor
adc
test
push
dec
aaa
outs
inc
add
and
add
add
xchg
push
cmp
inc
cdq
dec
push
mov
sahf
inc
dec
int3
dec
enter
bnd
sub
lods
fmul
mov
js
dec
sub
adc
rol
jae
inc
xor
cmps
(bad)
inc
xor
je
xor
push
mov
test
aaa
sub
js
pusha
es
outs
fs
pop
or
inc
inc
inc
outs
rcl
xchg
add
inc
pushf
pop
je
pop
mov
nop
int3
data16
pop
mov
bound
test
bound
arpl
and
sub
inc
mov
dec
stos
mov
inc
inc
push
push
dec
shl
cld
loop
xchg
rcl
arpl
sub
lods
and
jne
push
push
inc
push
adc
test
adc
dec
dec
inc
and
inc
mov
sbb
ja
mov
pop
xchg
jns
fs
dec
ret
adc
sub
ins
push
add
sub
inc
ret
mov
push
inc
xor
pop
ret
test
outs
xor
or
test
xchg
imul
pusha
shl
sahf
loop
and
dec
inc
inc
ret
mov
cmp
pop
adc
pop
or
jmp
pop
xchg
inc
jbe
inc
mov
sbb
add
or
mov
je
ins
push
dec
retf
pop
sub
push
or
ficom
fiadd
rcl
sub
push
push
inc
dec
push
or
push
lods
addr16
jno
xchg
retf
and
ret
stos
pop
dec
push
ins
adc
cmp
mov
mov
enter
dec
mov
adc
or
or
int3
(bad)
ss
dec
or
sbb
ja
aaa
jl
inc
and
data16
push
cdq
or
dec
pop
mov
xchg
mov
cmp
sub
imul
add
add
lods
cdq
sub
cmp
and
dec
jb
inc
xor
mov
dec
xor
pop
sub
sbb
xor
fs
or
and
mov
inc
and
shr
or
inc
inc
ss
aad
mov
push
mov
inc
xor
fild
mov
in
adc
js
dec
push
push
and
inc
push
(bad)
or
mov
dec
push
imul
imul
jmp
and
jae
bound
into
dec
cmp
add
lods
cwde
imul
dec
data16
adc
mov
adc
add
(bad)
cmp
and
jl
cmp
imul
inc
imul
pop
popa
cmp
dec
sbb
dec
pop
inc
adc
dec
or
leave
(bad)
dec
inc
dec
fs
push
mov
repnz
push
dec
or
ret
rcl
mov
push
push
push
push
inc
cmp
push
add
inc
jb
jmp
dec
and
ret
in
xor
sbb
sbb
mov
pop
or
ret
pop
mov
loope
or
enter
xor
inc
mov
call
cmp
ins
dec
add
xchg
xor
or
adc
fadd
adc
push
cs
sub
icebp
int
xchg
xchg
je
outs
pop
mov
test
and
jno
push
inc
push
jne
dec
mov
push
push
or
mov
scas
mov
or
aad
mov
or
mov
push
sbb
add
dec
sahf
je
push
(bad)
rol
xchg
inc
push
push
push
(bad)
push
adc
mov
jno
jno
xchg
ret
imul
mov
or
shr
les
jae
xor
inc
pop
push
push
fnstenv
cmp
test
xchg
push
imul
xor
mov
imul
adc
loop
dec
retf
push
jmp
fwait
test
jne
rol
mov
pop
xchg
shr
data16
inc
jno
jo
push
sbb
inc
push
cmp
imul
xor
pop
or
jmp
adc
or
mov
outs
mov
and
xchg
cld
int3
dec
push
sbb
push
loop
add
test
xor
in
pusha
push
mov
inc
cmp
or
cmps
fimul
push
addr16
js
xor
dec
clc
adc
inc
sbb
mov
and
loopne
fmul
repnz
(bad)
out
xchg
mov
sbb
sbb
push
add
ret
data16
pop
inc
cmp
push
es
clc
push
jmp
dec
mov
add
ins
sbb
xor
add
add
shr
mov
mov
and
adc
jle
adc
fld
pop
nop
sub
jo
pop
push
imul
push
or
je
jb
add
add
jb
ror
pop
inc
and
sub
adc
pusha
xor
int3
scas
sub
sbb
es
xor
movs
mov
and
dec
ins
and
add
add
or
in
cmp
push
mov
daa
lea
dec
pop
cmp
add
shl
es
push
inc
(bad)
xor
test
dec
ficomp
xor
mov
aad
pusha
xchg
repnz
push
in
inc
int
mov
aam
xchg
inc
pop
push
add
jb
in
mov
je
inc
outs
loopne
push
call
dec
call
pop
mov
test
out
mov
dec
push
int3
inc
loopne
push
sub
push
inc
call
xor
inc
data16
(bad)
bound
or
xchg
sbb
test
jb
xor
dec
add
sbb
dec
xchg
cmp
and
stos
test
mov
sbb
push
shl
push
add
adc
push
clc
jl
(bad)
ror
adc
nop
and
inc
mov
shl
xchg
sbb
test
and
and
dec
dec
adc
push
ret
add
arpl
push
dec
(bad)
inc
push
add
and
add
or
arpl
sbb
adc
stos
mov
je
xor
mov
sbb
test
jno
pop
ins
data16
sbb
push
mov
ret
bound
and
mov
in
and
out
xor
inc
and
push
fsub
or
ins
push
xchg
ret
xor
fld
push
xor
arpl
mov
data16
mul
inc
dec
into
cmp
lods
adc
imul
dec
adc
xchg
push
ja
shl
mov
nop
or
push
xchg
mov
push
push
push
dec
push
inc
cmp
bound
pop
ss
xchg
cli
jo
mov
push
fadd
xchg
mov
sbb
pop
push
jp
ret
push
bound
jne
inc
push
fisubr
mov
and
inc
test
jg
jne
addr16
mov
call
adc
lock
les
enter
es
push
jbe
cs
and
dec
pop
adc
or
outs
add
dec
push
repnz
or
aam
add
fs
fisubr
imul
jae
xor
cdq
nop
xor
(bad)
(bad)
or
jb
xor
shr
jp
les
data16
adc
jl
xor
loopne
xor
bound
pop
pop
xor
dec
push
jmp
push
mov
push
dec
lods
adc
cwde
mov
jb
or
mov
mov
fiadd
push
inc
sub
les
dec
xor
inc
mov
movs
in
shl
sub
pop
or
jno
mov
cwde
dec
inc
lock
push
add
xchg
ret
in
bound
push
fcomp
cwde
scas
pop
sub
inc
dec
call
mov
inc
jbe
pop
push
cli
xchg
leave
ss
mov
push
cmps
sub
inc
js
jo
aaa
push
imul
and
pop
mov
ins
int
dec
(bad)
loopne
inc
pop
and
push
add
xchg
movs
push
push
push
and
add
xor
outs
dec
data16
add
inc
and
fs
push
jae
inc
adc
cwde
movs
add
mov
push
inc
mov
jae
pop
inc
push
cs
cli
push
add
add
aaa
ret
int
outs
in
jns
dec
out
inc
dec
in
mov
jg
addr16
ja
cmp
jbe
dec
bound
xor
gs
jbe
test
sbb
or
xor
dec
pushf
dec
add
xor
dec
stos
push
repnz
in
ss
dec
sbb
ins
and
mov
push
jae
cs
fmul
xor
inc
push
sub
aaa
dec
call
adc
dec
inc
or
movs
int3
mov
je
mov
(bad)
dec
pop
push
hlt
and
rcl
and
ins
pop
inc
ret
add
popa
sub
and
cs
mov
outs
mov
pop
(bad)
int
mov
and
sbb
and
xor
shl
and
sysenter
popa
sub
push
mov
pop
test
xchg
push
dec
push
imul
pushf
xchg
or
imul
mov
sub
call
inc
xchg
ins
cmps
jno
sbb
mov
jp
inc
sti
and
bound
push
stos
push
jo
loopne
push
cmp
retf
out
and
fs
push
nop
dec
xor
mov
(bad)
inc
fs
xchg
mov
fcom
jbe
sbb
push
test
push
inc
xchg
dec
add
test
fidiv
ss
and
sbb
cmp
add
and
jp
sbb
jo
or
imul
data16
push
or
test
xchg
loope
push
xor
pushf
out
ss
xchg
or
mov
outs
ss
push
sbb
jbe
jo
push
int3
or
scas
inc
push
dec
shl
pop
lods
outs
inc
jo
int3
push
push
pop
xchg
push
push
xor
sub
dec
loop
test
push
pusha
sbb
sub
dec
or
mov
and
sub
xchg
or
nop
loope
or
xchg
and
add
inc
and
mov
ja
js
dec
push
push
aam
retf
ja
inc
cmp
and
adc
inc
add
adc
add
data16
addr16
pop
push
xor
xchg
xor
sar
xchg
or
cli
fs
inc
push
push
test
mov
sub
inc
mov
push
push
aaa
push
dec
aaa
popf
cs
xor
popa
push
shr
inc
int3
scas
ja
dec
xor
push
outs
inc
xchg
xor
dec
clc
aad
movs
add
loopne
and
dec
jo
ja
lods
test
cmps
pushf
jae
xor
mov
jl
inc
push
cmp
dec
pop
xor
std
xor
mov
adc
ret
push
inc
scas
cmps
mov
shl
inc
push
dec
imul
lods
pop
js
pop
xor
xor
adc
push
xor
into
xchg
and
ins
mov
push
pop
sbb
cmp
jbe
sub
xor
xchg
jmp
js
inc
adc
loopne
push
jo
pop
cmp
adc
add
in
dec
sub
xchg
inc
and
jl
enter
cmp
inc
fidiv
test
mov
add
hlt
push
dec
rol
cmps
mov
xchg
shr
jns
jne
jae
mov
pop
nop
addr16
push
add
xchg
dec
dec
mov
sub
lea
outs
outs
push
jbe
outs
bound
xor
mov
adc
ret
pop
adc
mov
sub
sbb
cmp
adc
pusha
mov
push
jne
dec
jbe
mov
dec
jo
jae
mov
pop
pushf
mov
mov
pop
ins
aaa
inc
in
sub
push
xor
dec
add
outs
inc
je
or
add
pushf
pop
jp
aam
loope
into
push
dec
aaa
sbb
inc
loope
and
test
jo
xor
dec
add
je
fst
or
jbe
nop
mov
push
gs
inc
inc
repnz
push
cmps
pop
loop
xchg
nop
or
cs
push
adc
or
jbe
arpl
pop
add
data16
push
movs
outs
xchg
xor
cmp
or
push
and
xchg
leave
adc
jp
adc
add
les
mov
aad
loop
push
dec
rol
dec
xor
pop
xor
imul
xchg
test
retf
and
sub
xor
aam
mov
xchg
push
mov
xor
dec
daa
xor
and
add
call
adc
stos
push
jo
xor
aaa
xor
bound
push
pop
dec
enter
sbb
or
or
pusha
rcl
xchg
cs
push
jb
shr
push
sbb
aaa
rcl
or
mov
adc
dec
dec
xor
push
jl
inc
push
retf
or
dec
or
add
nop
add
cs
xor
outs
xchg
xor
(bad)
dec
sbb
push
add
aaa
sbb
ja
hlt
push
cmp
and
adc
fadd
(bad)
inc
inc
lds
xor
or
push
and
xor
nop
cdq
push
in
sahf
dec
call
gs
jo
push
mov
je
cmp
shl
mov
cmp
xor
mov
adc
and
push
cdq
sub
push
sbb
lds
and
sbb
rol
arpl
or
or
mov
fsub
xor
pusha
add
xchg
sub
add
inc
and
fs
dec
or
pop
mov
and
les
sub
or
xor
and
pop
xor
js
push
sub
out
mov
outs
cmp
dec
add
pusha
inc
and
test
(bad)
mov
imul
jbe
ss
push
push
aaa
cs
ja
mov
add
outs
push
or
inc
mov
es
bound
push
dec
push
fsubr
jp
xor
xchg
cmps
push
jo
nop
clc
add
pop
and
(bad)
in
test
add
mov
adc
outs
ins
sub
sbb
xchg
pop
movs
movs
dec
popa
pop
scas
repnz
mov
or
xchg
fs
lods
mov
inc
ins
and
js
pop
jns
inc
adc
call
es
mov
mov
in
inc
xor
loopne
pop
outs
mov
or
sub
mov
jae
fmulp
inc
push
aam
dec
adc
xor
inc
inc
adc
or
js
adc
add
jmp
xchg
(bad)
mov
call
ins
or
je
inc
push
movs
aam
out
call
lock
call
imul
mov
les
sbb
shl
cli
out
or
xor
lock
and
push
dec
dec
mov
dec
nop
inc
or
es
push
mov
mov
xor
call
xor
sbb
sbb
aam
sub
lea
xor
or
add
leave
and
push
add
add
shl
dec
pop
and
dec
or
and
add
mov
or
jno
mov
enter
mov
pusha
dec
jns
jo
adc
cmp
cmp
or
adc
adc
add
sub
cmp
inc
cmp
dec
inc
ja
int3
mov
or
hlt
inc
movs
dec
sub
sub
jp
and
add
lock
je
inc
xchg
daa
add
mov
push
and
adc
push
sbb
jae
lods
jo
pop
push
or
xchg
push
xchg
stos
mov
and
shl
push
and
xchg
adc
jbe
add
pop
(bad)
push
or
leave
and
jb
sub
xchg
adc
cmps
xor
xor
jb
js
add
or
mov
or
pop
mov
aam
pusha
in
inc
imul
and
push
(bad)
addr16
xor
push
pop
cmps
push
fcomp
add
adc
mov
sbb
xor
jbe
int3
push
push
test
ins
mov
mov
ret
dec
dec
dec
js
pop
fsubr
xor
inc
xor
dec
jl
cwde
inc
loopne
add
js
faddp
dec
loopne
cli
bound
out
das
cmp
or
jmp
cmp
push
sub
enter
dec
push
cwde
sub
xor
push
push
and
popa
push
jl
push
loope
mov
add
je
push
ins
pop
inc
push
add
adc
or
ss
hlt
xchg
int
call
or
sbb
ret
ins
popf
ds
dec
push
and
lock
je
inc
push
add
rcr
mov
and
lock
jbe
hlt
and
mov
add
pushw
cmp
stos
cmp
add
add
push
bound
loopne
aam
xor
inc
or
mov
xor
mov
lea
cmps
imul
inc
pop
add
inc
inc
inc
rol
xor
inc
add
les
mov
repnz
or
aaa
pop
dec
dec
jbe
mov
and
xor
ss
data16
sbb
enter
inc
mov
ss
sahf
dec
mov
dec
into
sbb
sbb
push
(bad)
push
imul
inc
mov
jo
es
dec
sub
lock
aam
inc
inc
mov
inc
fidivr
les
ds
jne
jp
cmp
popa
xchg
xor
adc
mov
push
lods
inc
and
mov
pusha
sbb
add
cdq
and
inc
jne
push
cmp
test
mov
jle
scas
mov
outs
pop
mov
xor
outs
inc
xor
dec
mov
adc
inc
mov
arpl
sub
es
data16
clc
mov
and
inc
or
dec
inc
test
push
push
js
jbe
hlt
cld
xchg
int3
test
inc
mov
lds
pop
ja
xchg
inc
adc
mov
xchg
cwde
push
ficom
mov
sub
or
xor
xor
or
inc
mov
les
push
ret
push
jae
push
mov
push
jle
test
jne
push
push
push
pop
inc
aaa
ret
inc
xchg
push
rcl
dec
pop
inc
enter
adc
and
push
or
lea
ins
jns
dec
imul
cwde
mov
push
sub
sub
fdivrp
cwde
pop
push
inc
addr16
stos
or
push
xor
movs
es
mov
pop
jo
mov
outs
dec
add
push
imul
outs
push
dec
dec
jb
add
mov
cli
pop
xor
dec
push
dec
adc
push
mov
mov
jmp
test
dec
or
es
push
loopne
xchg
arpl
xchg
and
inc
sub
xor
in
je
xchg
icebp
add
lods
xor
push
pop
es
mov
sbb
push
dec
inc
outs
sub
push
mov
inc
sub
adc
cmps
jne
xor
sub
sub
or
in
xor
push
enter
mov
adc
mov
mov
pop
dec
push
pop
ss
xor
xor
test
dec
pusha
and
pop
inc
xor
xor
lods
push
dec
dec
sub
push
or
push
bnd
outs
loope
adc
xor
pop
adc
mov
add
adc
mov
loopne
push
enter
fidiv
or
and
xchg
xchg
push
jo
xchg
inc
mov
xor
call
mov
xor
sub
loop
outs
(bad)
retf
or
cmps
pop
outs
cmps
xor
fiadd
test
bound
gs
cmp
mov
sbb
inc
pusha
push
adc
and
jbe
push
inc
push
js
enter
retf
popa
jno
xor
add
nop
xchg
sub
test
xchg
mov
jns
xor
mov
ret
xchg
xor
push
push
or
mov
push
outs
or
ins
add
xor
push
push
xor
push
or
xchg
mov
xor
cmp
cmps
mov
loop
xor
add
and
fcmovb
mov
nop
int3
lods
jbe
dec
push
inc
call
lods
xchg
ins
mov
mov
sub
xor
xor
jl
dec
mov
adc
xor
push
movs
jo
and
ss
je
add
inc
sbb
fadd
push
imul
xchg
push
adc
xchg
sub
add
dec
xor
cwde
and
call
bnd
ja
mov
fs
stos
xchg
out
mov
jb
shl
or
xor
push
and
aaa
push
inc
dec
nop
xor
dec
arpl
loope
jmp
dec
fs
test
jbe
hlt
dec
test
and
fidiv
inc
cmp
cmp
push
ror
cmp
ins
sub
pop
push
inc
js
movs
int3
adc
lock
xchg
push
adc
frstor
les
scas
push
dec
pop
jno
outs
stos
imul
adc
xor
jb
rcl
add
or
jb
sub
sbb
mov
dec
or
cmp
push
xchg
ror
inc
adc
fwait
sbb
mov
scas
xor
jl
dec
inc
shr
mov
xor
ins
sbb
scas
add
or
scas
jb
loopne
mov
gs
push
mov
add
sub
or
inc
inc
or
pop
and
inc
sbb
or
dec
arpl
add
pusha
mov
retf
adc
sbb
test
adc
jns
fs
add
pusha
nop
ret
test
es
pusha
fsubr
rcl
pop
inc
sub
jo
jmp
jb
pushf
push
call
sbb
dec
add
ja
sbb
leave
cwde
into
mov
adc
add
loope
in
ror
xchg
add
or
push
sbb
xor
push
push
push
js
in
mov
push
mov
push
cmps
jb
imul
popf
xchg
dec
ins
hlt
cld
xor
(bad)
inc
fldenv
mov
dec
pop
pop
xor
rol
inc
in
ins
addr16
mov
push
rcr
inc
aad
je
push
les
mov
jmp
out
jne
(bad)
and
dec
hlt
mov
fwait
inc
mov
jb
cmp
cmps
xchg
mov
dec
dec
sbb
push
sub
mov
jo
xor
inc
push
js
dec
mov
adc
pop
mov
pusha
shl
dec
push
das
pop
cmp
inc
push
sbb
cmp
in
test
mov
mov
clc
mov
sub
inc
and
cmps
jbe
pop
and
out
sbb
loopne
sub
cmp
mov
imul
dec
xor
adc
imul
je
pop
add
push
push
and
push
cmp
xor
fsub
dec
(bad)
xor
loopne
retf
or
and
jmp
dec
je
inc
xor
inc
jae
mov
inc
mov
mov
popa
es
cwde
inc
inc
mov
or
xor
ja
or
add
ins
ins
pop
push
dec
mov
sbb
hlt
fs
xor
pop
jo
outs
adc
push
xor
outs
inc
inc
jb
inc
popa
add
pop
rcl
push
and
loopne
arpl
xchg
sbb
mov
or
or
jo
pop
xchg
ins
jo
push
inc
dec
js
xor
push
xor
dec
mov
adc
push
sub
push
aad
ss
int3
cmps
ss
mov
jl
mov
outs
shl
xchg
push
in
mov
jb
inc
js
ror
cld
stos
dec
push
and
mov
xchg
enter
ds
mov
cs
loopne
jb
push
ins
cmp
xor
mov
adc
mov
pop
aaa
mov
ss
ins
mov
(bad)
jmp
inc
and
data16
xor
mov
imul
push
ins
dec
xor
sub
dec
ins
push
push
jbe
dec
and
dec
enter
test
mov
mov
test
inc
movs
adc
push
inc
cmp
sbb
sbb
outs
inc
popf
jo
sub
dec
dec
push
dec
add
or
inc
inc
rcl
(bad)
push
xchg
retf
je
bound
xchg
js
jo
shl
pop
mov
aad
mov
arpl
loopne
popa
test
in
bound
inc
lock
push
sbb
arpl
cmp
adc
or
aaa
or
inc
loopne
sub
push
loopne
add
jb
add
push
pop
jl
test
jp
push
lods
cmp
dec
mov
cmp
jns
add
dec
add
sub
push
je
dec
adc
lock
ret
arpl
nop
shl
(bad)
bound
or
ror
sbb
mov
cmp
pop
push
sub
add
dec
fisub
add
mov
nop
cmp
mov
(bad)
push
push
pop
xor
shr
mov
and
adc
and
push
jne
fimul
xor
inc
adc
inc
and
or
mov
or
inc
inc
and
mov
(bad)
sbb
jb
retf
cmps
mov
ss
into
test
adc
push
mov
push
mov
inc
aad
imul
or
mov
xchg
fiadd
add
adc
call
xor
push
xor
add
mov
sbb
pop
xchg
loopne
or
arpl
inc
xchg
and
stos
add
xchg
and
sub
add
mov
call
xchg
cmps
dec
adc
xor
or
dec
push
adc
mov
cld
inc
push
mov
push
bound
loop
mov
mov
js
push
adc
retf
mov
and
pop
jp
or
or
mov
les
sbb
or
sub
test
dec
inc
and
outs
retf
fsub
push
jo
sbb
mov
mov
dec
call
clc
dec
adc
in
adc
ror
mov
adc
inc
inc
dec
mov
push
sbb
dec
mov
add
bound
xchg
adc
push
inc
bound
pop
adc
inc
dec
sahf
fbstp
popa
push
and
outs
inc
dec
ins
pop
dec
into
xchg
ror
push
ins
inc
ins
gs
push
dec
pop
mov
add
jo
xchg
add
or
ja
retf
test
sub
mov
inc
adc
nop
jne
or
mov
add
pop
inc
adc
call
in
aam
ja
mov
mov
test
xor
bound
movs
cwde
xor
dec
cmp
and
pusha
lods
stos
xor
push
pop
fadd
ficom
pusha
xor
xor
mov
xor
dec
jne
adc
and
inc
push
mov
jae
fimul
test
and
xchg
popw
add
or
rcr
shl
dec
jbe
xor
and
fiadd
push
ins
jne
sbb
push
inc
sub
sub
sub
aam
inc
loopne
dec
jbe
or
retf
jo
(bad)
loope
push
gs
test
xchg
or
sbb
in
dec
adc
mov
test
clc
popa
mov
inc
fs
inc
ins
stos
dec
adc
or
aam
ins
bound
inc
or
sbb
jbe
sub
xor
push
add
or
cld
jns
jo
xor
xchg
test
and
xor
sub
lock
adc
cli
and
mov
and
mov
and
push
push
jb
xchg
xor
fld
or
pop
push
adc
cmp
mov
popa
out
outs
pop
sbb
inc
inc
inc
push
ror
aaa
test
movs
and
push
rcl
jl
bound
jns
movs
int
leave
scas
cld
es
pop
inc
loope
or
stos
je
mov
mov
xor
ror
or
js
push
push
jae
inc
pop
test
push
add
or
rcr
dec
in
mov
imul
adc
push
popf
test
bound
les
push
cmp
jp
mov
inc
mov
or
add
or
mov
outs
scas
push
dec
pop
ficomp
add
and
push
mov
gs
or
jns
call
sub
add
and
dec
into
mov
inc
push
push
jb
or
xchg
enter
push
sub
mov
fs
jbe
sub
mov
jno
adc
bound
dec
pushf
jns
push
pop
xor
cmps
imul
xor
jb
inc
mov
xchg
adc
fdivr
or
add
adc
pop
ins
int3
aad
add
sbb
push
and
imul
test
and
addr16
mul
pop
add
dec
inc
test
adc
or
test
inc
add
pop
mov
pop
inc
jb
adc
movs
mov
shl
repnz
and
jbe
inc
sahf
or
sbb
mov
test
inc
and
adc
mov
cmp
mov
test
data16
push
and
push
into
pusha
inc
jbe
inc
in
mov
sbb
xor
imul
pop
loop
ss
adc
mov
je
mov
or
mov
or
outs
sbb
push
nop
nop
mov
adc
into
inc
or
pop
push
inc
xchg
xor
or
fs
je
xchg
les
and
pop
push
or
test
pop
xor
mov
fs
push
sub
inc
add
retf
jne
inc
daa
gs
push
outs
or
or
inc
or
mov
mov
bound
xor
adc
lds
pop
retf
inc
je
add
outs
cmp
mov
js
je
adc
data16
sub
sub
add
arpl
sbb
push
add
mov
and
adc
dec
fcom
push
add
pop
shr
enter
push
dec
add
in
or
pop
inc
ror
imul
bound
in
dec
xchg
sbb
add
cmp
sbb
jle
or
fwait
sahf
shl
push
call
dec
movs
popa
mov
ins
push
pop
retf
push
dec
adc
xor
dec
push
xchg
mov
push
lock
cmp
js
mov
push
dec
clc
inc
bound
popa
dec
ins
or
add
sbb
enterw
adc
xchg
cld
or
and
pop
cs
push
pop
push
push
dec
lock
inc
ficom
lods
push
add
or
cwde
inc
inc
push
mov
xor
xchg
add
jae
bound
mov
jb
or
cmp
pop
pop
jb
xchg
mov
test
add
ret
adc
pop
sbb
jp
mov
test
les
xor
dec
or
push
inc
stos
inc
sbb
repnz
in
inc
sbb
inc
test
mov
xor
dec
inc
cmp
add
xchg
outs
repnz
xor
js
or
push
mov
push
inc
xor
inc
(bad)
js
js
fcom
dec
sub
jp
ins
xchg
gs
mov
and
sub
xchg
pushf
xor
test
or
inc
push
or
cmps
add
or
mov
dec
pop
addr16
popa
inc
popa
fiadd
ret
or
int3
add
movs
xchg
xchg
pop
rcl
xchg
mov
repnz
mov
inc
mov
jp
ror
push
push
sbb
pop
pop
ins
dec
in
ins
es
les
inc
inc
pop
xor
ror
inc
shr
and
sub
shr
or
inc
xor
test
and
fs
rol
or
(bad)
call
and
xor
push
sub
push
mov
adc
add
inc
ret
push
pop
ins
ret
popa
inc
jbe
ret
shr
bound
adc
test
push
loop
xchg
lea
push
xchg
xor
inc
sbb
hlt
dec
push
adc
push
cwde
adc
ins
push
inc
imul
sbb
push
test
ins
ret
adc
xor
adc
inc
and
out
cs
jl
pusha
adc
call
cmp
inc
push
fidiv
inc
push
add
sahf
pushf
sbb
cs
mov
loopne
xchg
xor
test
xchg
call
fisubr
dec
sub
cs
bound
and
push
outs
cld
movs
popf
es
push
sbb
dec
jb
dec
xchg
dec
cmps
add
cld
mov
(bad)
mov
pusha
mov
inc
outs
mov
push
xchg
mov
shr
popa
dec
mov
cmps
cmps
dec
xor
push
or
ins
xor
loop
mov
cwde
and
mov
xchg
inc
jb
xor
push
stos
test
jae
push
adc
push
mov
imul
and
int3
sub
mov
inc
dec
outs
push
xor
jmp
jb
jbe
adc
sbb
dec
pusha
jb
xchg
push
adc
add
jle
movs
and
mov
add
test
dec
dec
mov
push
hlt
cmps
and
and
ss
push
push
mov
add
ss
push
inc
nop
push
gs
xchg
push
ins
sub
ins
push
imul
push
pop
dec
xchg
add
je
int3
xor
inc
sub
into
add
movs
push
dec
mov
and
shr
aaa
popa
inc
add
mov
adc
push
out
and
adc
pop
test
int3
jmp
es
push
cli
fs
push
ss
nop
int3
add
inc
push
sbb
je
and
dec
out
dec
shl
dec
out
ret
jmp
sbb
push
dec
mov
sbb
sub
inc
fisub
push
inc
push
imul
fild
pop
or
jo
jb
inc
push
bound
jb
in
and
add
inc
enter
aaa
retf
adc
or
inc
push
push
pop
popa
imul
dec
fadd
ss
rcl
ins
mov
fcom
jo
imul
adc
mov
mov
and
dec
sub
sub
jmp
push
hlt
adc
and
mov
pusha
mov
mov
cmp
or
mov
cmp
and
mov
dec
add
outs
dec
add
je
adc
push
adc
push
mov
xor
dec
in
pusha
cwde
add
movs
in
inc
cmp
push
fdivr
adc
cmp
ins
dec
push
rcl
sbb
or
retf
mov
popa
pop
add
(bad)
xor
mov
ins
adc
xor
sahf
dec
rol
and
xor
ror
and
aam
mov
sbb
and
push
rol
out
or
dec
sub
push
retf
arpl
test
sub
mov
jo
xor
fdiv
dec
fs
xor
inc
jmp
inc
pop
inc
clc
push
mov
dec
leave
(bad)
cmp
xor
push
push
mov
outs
push
xor
imul
ficomp
jns
add
shl
outs
data16
and
rcr
repnz
and
sbb
or
les
test
call
ret
add
loopne
nop
push
nop
push
movs
aam
adc
call
push
mov
mov
inc
mov
or
xor
xor
retf
je
fs
mov
dec
dec
add
add
into
inc
adc
int3
xchg
mov
xchg
jmp
push
mov
xor
mov
sub
mov
lods
cmp
js
sub
sub
scas
push
inc
test
ror
es
mov
sbb
pop
imul
stos
stos
adc
adc
fidiv
inc
dec
push
mov
inc
adc
mov
add
push
enter
push
inc
xor
add
xor
pop
jb
sub
loopne
xor
jb
pop
call
gs
sub
call
add
hlt
pop
sbb
fwait
push
inc
dec
pop
test
gs
cmp
retf
add
bound
fs
push
dec
mov
pop
lds
pop
lods
test
add
es
xor
sbb
add
xor
pop
add
imul
mov
dec
addr16
dec
outs
shr
mov
inc
mov
mov
aaa
inc
add
outs
into
add
xchg
lea
dec
scas
cli
push
pop
inc
adc
mov
in
inc
xchg
sbb
adc
or
add
adc
call
imul
adc
or
outs
movs
push
jno
mov
das
ficom
js
out
push
push
xor
mov
inc
js
dec
ror
fiadd
inc
cmp
jns
data16
cmp
mov
cmp
test
leave
mov
add
jne
ins
mov
push
test
into
push
jmp
sbb
test
int3
ss
push
loop
mov
push
sub
or
adc
in
dec
add
shl
add
inc
xchg
rcl
arpl
inc
xor
(bad)
pop
rol
inc
sub
ins
xchg
sub
push
ss
adc
mov
pop
shl
addr16
call
(bad)
ins
jp
movs
fisub
cmps
lods
inc
dec
fisub
sbb
les
or
pusha
pusha
xchg
push
retf
pop
cmp
or
pop
dec
sbb
(bad)
push
or
jb
push
xor
push
xchg
call
mov
xchg
add
sub
mov
int3
pop
movs
jmp
test
add
imul
xchg
and
sahf
inc
data16
clc
ins
jbe
push
pop
jo
int3
arpl
sbb
ret
push
cs
jbe
aaa
data16
les
or
mov
aaa
nop
adc
jbe
or
cdq
add
and
rcl
mov
addr16
xchg
das
imul
add
cmp
fmul
outs
ja
ins
rol
xor
jno
xchg
cwde
push
int3
mov
leave
mov
lea
xor
mov
imul
and
dec
enter
adc
fs
dec
nop
and
inc
push
xor
pop
inc
mov
add
cmp
call
lock
push
inc
lds
adc
mov
add
(bad)
jl
mov
or
out
lods
sub
addr16
dec
xchg
rol
stos
shl
jp
mov
jl
or
or
push
jp
push
push
or
cmp
mov
xchg
mov
add
ins
jb
or
push
adc
lods
rol
je
and
sub
cmp
inc
imul
outs
adc
jo
data16
js
jp
lock
in
movs
(bad)
test
pop
inc
lea
or
push
jle
mov
inc
mov
or
adc
dec
fs
addr16
out
dec
and
push
aaa
and
push
mov
imul
shl
mov
inc
cmps
sbb
frstor
inc
cmp
push
cwde
inc
rcl
pop
imul
add
call
popa
push
mov
test
or
sub
and
push
sbb
push
je
add
clc
xchg
mov
push
es
pop
sahf
dec
or
and
jbe
adc
add
cs
je
jbe
in
sub
or
and
inc
push
or
jo
mov
inc
mov
xchg
loopne
push
fsubr
add
push
fisub
mov
adc
jo
sahf
adc
xor
mov
int3
fisub
je
inc
ins
jmp
imul
mov
xor
add
jne
or
dec
sar
jae
xor
or
aaa
ds
rol
inc
adc
jecxz
or
add
xor
pop
inc
lods
push
arpl
push
mov
sahf
dec
and
jno
adc
test
inc
pusha
inc
and
data16
and
xchg
dec
add
leave
shr
sbb
cli
push
in
inc
cmp
jbe
cli
inc
push
dec
push
push
sub
sub
ins
push
xchg
int3
je
xor
cmp
push
movs
int
pop
dec
pop
jne
or
push
push
push
mov
loope
jle
push
ret
xor
sahf
inc
add
pusha
ja
pop
ins
xor
pop
ins
imul
test
ror
inc
sub
mov
call
int3
and
jp
pop
dec
cwde
inc
shr
dec
inc
ds
push
sub
out
jne
push
call
and
add
rcr
push
push
call
ins
add
outs
mov
xor
pop
xchg
cmp
push
shl
daa
xchg
retf
fs
dec
cs
dec
push
call
stos
ins
or
xor
and
xor
inc
mov
add
and
xchg
sub
jne
push
adc
inc
call
test
rol
push
dec
enter
inc
mov
jmp
dec
and
je
inc
add
xchg
movs
xchg
fs
repnz
xor
test
or
dec
xor
test
ret
adc
stos
outs
xchg
mov
les
cld
ins
xchg
and
add
mov
push
loopne
xor
push
les
dec
sub
sbb
xor
fs
push
aaa
ret
mov
xchg
xor
dec
or
push
xor
sub
es
mov
mov
mov
ins
inc
fcmove
shr
neg
jecxz
add
jbe
push
jns
xchg
sbb
adc
imul
xor
push
call
dec
mov
cli
dec
cmp
push
adc
int3
pushf
dec
adc
add
adc
ret
out
out
push
imul
popa
int3
stos
leave
jo
hlt
xor
loop
and
or
inc
or
mov
push
inc
push
ja
in
adc
and
jno
es
retf
cs
mov
push
xchg
push
shr
sbb
xchg
push
dec
fwait
add
inc
mov
xor
jl
inc
push
inc
inc
dec
xchg
add
push
lock
inc
fsubr
or
js
outs
adc
jb
jae
test
jae
jb
jno
push
push
jo
gs
dec
pop
inc
fs
cmp
or
push
cmps
mov
or
add
mov
and
push
xchg
and
sahf
outs
jno
add
arpl
sub
pushf
dec
cli
inc
inc
xor
cld
mov
sbb
dec
inc
cwde
sbb
into
mov
push
sbb
dec
mov
xor
fdivr
cmp
retf
and
jle
push
dec
or
inc
div
cmp
jb
push
outs
push
or
push
push
or
or
and
mov
mov
ja
je
enter
cdq
adc
es
mov
adc
je
mov
(bad)
gs
inc
fsubr
push
xor
in
adc
and
and
rcl
sbb
ror
sbb
xchg
stos
push
ins
shl
push
mov
dec
outs
xchg
xor
adc
outs
push
xor
test
mov
popa
xor
cmp
and
mul
inc
and
xchg
or
pusha
inc
test
sahf
sub
retf
push
ins
push
xor
stos
test
and
cmp
mov
mov
xchg
dec
add
or
or
jne
mov
push
inc
out
push
dec
and
mov
add
adc
rcr
mov
add
sbb
adc
push
push
loop
sub
inc
outs
ret
dec
aad
cmps
dec
adc
mov
push
xor
pop
shr
call
add
inc
inc
shl
dec
nop
inc
out
idiv
adc
xor
inc
and
inc
ds
add
adc
push
es
xor
test
inc
add
push
or
inc
ss
imul
lock
push
xor
and
cld
xchg
je
xor
sbb
mov
jno
test
or
(bad)
fs
dec
xchg
popa
sbb
inc
push
pop
adc
dec
cmp
lods
call
dec
xor
ins
sub
mov
fs
mov
mov
cmp
rcr
jbe
out
mov
mov
mov
test
add
xchg
bound
in
movs
push
mov
cs
mov
push
push
sub
and
or
adc
shl
mov
or
popa
hlt
sbb
sbb
in
cmp
outs
(bad)
call
mov
inc
inc
lds
xchg
dec
test
push
in
mov
stos
sahf
xor
mov
js
cmp
imul
xchg
add
add
mov
xchg
dec
jl
jne
pop
dec
mov
ins
or
mov
cmps
or
popa
call
leave
pushw
fs
cmp
mov
xchg
ds
adc
or
enter
fadd
popa
mov
test
or
push
xchg
cmp
mov
mov
jo
add
add
xor
ror
xor
fdiv
push
push
xchg
mov
ror
push
inc
in
movs
mov
jb
inc
imul
pop
xchg
je
mov
test
push
push
dec
scas
sub
add
gs
xor
ins
xchg
retf
test
fcmove
outs
pop
sbb
es
shl
sub
push
stos
xor
outs
jae
sbb
mov
into
inc
sub
pop
arpl
cmp
jl
inc
and
(bad)
cld
jp
dec
or
cmp
sbb
out
bound
cdq
in
cmps
aam
outs
jns
dec
jp
mov
sbb
sbb
xchg
push
hlt
jmp
push
or
data16
mov
pop
scas
cld
add
xchg
dec
fadd
call
inc
rol
push
push
push
jns
and
ret
mov
push
test
cmp
push
cmps
sahf
push
xor
cmp
pop
mov
push
inc
test
push
add
sub
or
push
adc
ins
or
jo
mov
push
xor
inc
ret
gs
push
add
imul
aaa
jb
loop
or
ror
or
popa
adc
les
adc
jbe
jns
inc
add
or
jmp
cmp
ins
dec
sub
adc
call
adc
neg
dec
pushf
inc
xchg
push
push
or
and
push
xor
add
jbe
test
ins
rcl
sub
push
adc
sbb
pop
and
fmul
xor
push
and
inc
clc
adc
push
xor
ins
dec
xor
add
xor
movs
xchg
inc
imul
inc
push
cmp
arpl
cmp
dec
aam
aam
(bad)
lock
add
mov
xchg
enter
mov
sub
push
xor
jne
xchg
enter
cld
add
mov
push
jo
in
retf
scas
pop
cmp
mov
mov
sub
inc
gs
push
pop
jo
and
cmp
test
pop
add
mov
mov
or
lods
nop
or
fsub
sbb
jo
es
movs
movs
test
pushf
jne
fs
push
fdiv
sbb
mov
les
sub
add
dec
push
int3
jb
stos
cli
dec
or
and
jns
ret
movs
xor
test
or
pop
mov
dec
popa
inc
gs
shl
clc
outs
(bad)
mov
push
ret
inc
test
xchg
add
push
pusha
add
lock
inc
mov
loopne
call
and
js
dec
int3
jne
and
jo
dec
call
add
dec
push
push
add
push
or
sub
add
add
mov
int3
mov
pop
and
xchg
test
inc
add
bound
loop
in
or
dec
cmp
mov
adc
and
push
jmp
xor
les
inc
xor
xor
dec
call
dec
adc
add
adc
dec
popa
inc
jl
push
adc
cmp
ss
das
inc
mov
xor
add
dec
jns
mov
and
stos
loope
aad
inc
cmp
dec
rcr
or
pop
push
sub
ret
les
inc
or
rcr
jp
and
mov
xchg
push
imul
sub
inc
mov
ss
sub
inc
jbe
(bad)
jmp
bound
push
outs
and
xlat
dec
inc
clc
jl
dec
push
adc
js
leave
ss
addr16
and
js
mov
add
dec
dec
cmps
les
mov
mov
dec
mov
(bad)
js
add
push
rcl
push
push
xor
jo
xchg
mov
or
ins
imul
jno
imul
hlt
jbe
push
je
or
inc
add
jecxz
and
push
and
cmp
ss
xor
out
test
ss
add
ja
adc
push
enter
div
inc
push
dec
push
xchg
test
pop
outs
push
or
js
scas
xor
inc
xor
adc
and
mov
popa
aad
sub
or
add
add
and
and
xor
push
in
adc
add
dec
test
and
adc
mov
fidiv
push
ins
call
cmps
mov
add
ss
xor
mov
pop
or
or
jp
jbe
sbb
or
shl
jbe
cmps
ins
je
dec
or
mov
cmp
ror
push
push
push
test
jne
dec
hlt
(bad)
(bad)
xor
into
add
pusha
mov
push
or
add
jp
ret
out
sub
or
aaa
imul
ja
sub
push
xchg
lock
arpl
fdivr
inc
mov
xor
mov
sub
mov
xchg
cli
aam
ds
shr
adc
sub
jbe
bnd
jo
inc
jbe
and
inc
imul
ret
and
sbb
stos
retf
ins
enterw
push
dec
lds
xor
dec
and
test
mov
je
dec
and
cwde
sub
fdiv
push
mov
arpl
leave
je
cmps
jle
rol
adc
sub
cmp
ins
xor
cmp
push
dec
xchg
dec
ret
inc
mov
ret
inc
inc
inc
inc
fisub
dec
aam
inc
movs
int3
jp
les
pop
pusha
adc
nop
dec
dec
jb
loopne
mov
call
adc
adc
dec
dec
outs
or
or
ret
nop
or
sbb
dec
data16
outs
inc
fsub
inc
cmps
outs
inc
push
jb
and
cwde
mov
add
xor
test
stos
pop
dec
push
mov
dec
dec
add
or
dec
dec
hlt
sub
je
sub
add
inc
ss
dec
test
sub
or
retf
or
jo
jae
(bad)
pushf
sbb
jns
gs
jmp
push
dec
inc
retf
xor
sbb
bound
aad
leave
sub
inc
push
cld
test
cmp
test
dec
ins
call
(bad)
ins
mov
lock
(bad)
aaa
call
in
adc
stos
call
imul
lds
sub
addr16
add
inc
test
mov
mov
pop
addr16
add
pusha
add
push
(bad)
jle
nop
int3
xor
cmp
mov
inc
sbb
retf
outs
popa
push
pop
xchg
push
cmp
sub
xor
ins
inc
mov
ret
push
dec
inc
or
sub
dec
les
add
xor
sub
dec
push
add
sbb
and
pop
or
or
jp
mov
xor
aam
adc
add
push
leave
les
hlt
data16
shl
xor
aam
add
push
jo
xchg
aaa
sub
push
es
movs
mov
push
cmp
pushf
call
imul
popaw
mov
xor
ss
push
sbb
dec
push
and
fs
test
sbb
xor
dec
adc
ins
dec
test
adc
inc
fcmovbe
dec
sbb
shl
cli
xor
inc
add
sbb
pusha
add
jo
adc
es
xor
imul
sub
cmps
les
popa
jb
or
dec
inc
and
push
pop
push
jbe
lea
sbb
inc
sub
sub
dec
xor
test
les
gs
mov
or
mov
inc
mov
inc
push
in
aam
pop
mov
jae
in
dec
fs
aam
aaa
or
push
add
and
inc
sbb
dec
ja
and
fwait
mov
ins
adc
data16
loop
sbb
inc
add
dec
outs
pop
scas
imul
arpl
xor
(bad)
push
gs
push
pop
push
cs
ins
cmp
add
pusha
sub
jne
xor
xchg
shl
imul
push
xchg
js
adc
inc
(bad)
inc
xchg
or
cli
dec
push
adc
ss
inc
mov
dec
dec
dec
inc
xchg
test
jno
sbb
cmp
ror
data16
jmp
push
shr
frstor
dec
sub
jb
inc
pop
push
ins
retf
inc
push
push
jp
pop
or
xor
sbb
inc
and
inc
xchg
pop
and
ins
push
test
out
bound
ja
js
inc
push
adc
xor
xor
mov
inc
xchg
dec
pop
fs
adc
dec
dec
pushw
inc
xor
add
jmp
bound
jle
test
inc
cmp
test
push
scas
mov
pop
mov
xor
dec
xor
dec
xchg
ficom
or
mov
pop
dec
inc
push
xor
nop
sbb
mov
mov
add
add
ins
sbb
xchg
dec
dec
xor
imul
and
and
mov
add
inc
fisub
sub
rcl
inc
cdq
push
push
xchg
pop
xlat
push
xchg
lods
cmps
dec
jb
outs
or
mov
loop
aaa
cmp
xchg
mov
push
jmp
push
sub
movs
sbb
mov
and
js
ret
mov
mov
inc
stos
inc
loop
stos
xor
and
dec
xor
mov
cmp
jns
and
dec
aam
or
mov
mov
push
push
mov
xchg
xchg
cmps
mov
xor
ret
stos
cmp
jp
aam
sbb
inc
cld
jl
fs
mov
add
les
dec
cwde
mov
push
cmp
dec
lods
xor
push
test
dec
aam
add
jns
es
test
(bad)
sbb
mov
dec
push
xor
ins
push
cmp
add
add
aaa
and
push
imul
sub
loopne
push
mov
loope
cmp
pop
cmp
dec
and
aaa
clc
push
mov
and
push
and
and
sub
cmp
les
push
sahf
je
js
push
mov
sar
in
fs
dec
leave
retf
adc
inc
scas
bound
or
push
fs
sbb
ja
in
inc
inc
xor
cmps
add
add
sbb
fs
repnz
mov
je
jo
inc
mov
bound
inc
or
sbb
adc
mov
cmp
mov
push
push
push
aam
test
push
aad
inc
xor
jbe
and
and
call
call
arpl
outs
sahf
and
add
jns
push
add
mov
mov
adc
or
jmp
inc
mul
fs
add
ret
enter
sub
mov
adc
outs
dec
add
call
dec
inc
cmp
inc
dec
and
adc
retf
sub
or
and
jo
add
and
pusha
js
sbb
dec
out
ins
inc
lock
imul
inc
sbb
add
dec
ja
jp
push
push
lock
sub
test
dec
dec
aad
add
push
inc
cdq
xchg
(bad)
bound
dec
ret
xor
xchg
or
int3
sub
and
jb
jo
push
sbb
xor
push
inc
mov
xor
xor
mov
pop
repnz
ss
or
push
pop
dec
addr16
add
mov
dec
push
sub
xor
gs
test
add
mov
sub
add
xor
ret
push
push
add
xchg
push
pusha
lds
pop
js
pusha
inc
inc
mov
call
adc
stos
dec
sub
in
dec
add
dec
push
fs
sub
jo
and
xchg
add
fs
inc
(bad)
dec
inc
xor
cld
push
jp
icebp
cmps
mov
sbb
push
push
test
jo
popa
or
push
cmps
int3
inc
mov
inc
and
sar
or
fist
in
dec
rcl
or
popa
add
ds
push
dec
je
xor
cmp
pusha
clc
mov
shl
add
and
ss
dec
popa
dec
adc
xchg
fiadd
imul
loop
dec
mov
enter
sub
add
or
fadd
sub
pushf
popa
mov
xchg
sbb
int3
xor
inc
pop
mov
or
sub
or
ins
and
jbe
ret
push
pushf
and
mov
jne
cmp
clc
inc
sbb
pop
pop
aaa
cwde
arpl
dec
pop
sbb
xchg
imul
sub
or
xor
popa
ja
push
inc
jae
fiadd
sub
enter
mov
lods
add
cmc
lods
and
push
adc
outs
js
add
cmp
xor
add
js
adc
jbe
fs
add
and
mov
mov
outs
(bad)
jo
inc
add
dec
mov
cwde
gs
aam
jb
mov
xchg
cmp
push
xchg
test
dec
shl
push
pop
inc
xor
mov
sub
dec
dec
inc
mov
jp
inc
loop
xchg
xchg
shr
xchg
bound
in
fdiv
push
or
hlt
pusha
cmp
push
stos
ds
dec
sub
jno
sbb
sar
leave
adc
outs
rol
popa
mov
fs
mov
aam
pop
push
js
push
xor
pop
cli
add
and
add
clc
jb
dec
xchg
test
push
or
xor
lods
je
retf
nop
push
jae
ret
enter
sub
ficomp
ss
rcr
adc
push
xchg
call
inc
dec
pop
ins
pop
push
hlt
je
ins
or
dec
test
movs
inc
jbe
inc
dec
loopne
xchg
adc
xchg
pop
dec
add
pusha
xor
or
push
stos
sub
add
js
pop
mov
inc
out
shl
data16
xor
ins
pop
hlt
js
jo
cmp
push
sub
imul
ins
xor
or
mov
jo
aaa
lods
loop
and
and
sbb
in
pop
push
inc
cmps
or
movs
les
dec
adc
test
dec
adc
or
add
cmp
sbb
push
movs
cs
jae
xor
pop
stos
sub
in
inc
ret
mov
adc
dec
cmp
and
push
mov
nop
jne
or
mov
imul
or
jle
adc
call
sub
xchg
movs
push
ja
push
jbe
or
push
dec
loopne
mov
cli
sub
outs
mov
inc
push
imul
rcr
jne
xor
push
and
or
and
fcom
dec
pusha
sbb
jbe
inc
(bad)
push
add
or
add
push
mov
inc
jno
(bad)
adc
push
xor
aam
inc
xor
leave
je
push
jb
dec
or
jo
inc
test
dec
pop
push
jo
inc
imul
in
fadd
into
inc
inc
add
dec
push
call
push
dec
push
(bad)
mov
fs
arpl
and
dec
(bad)
js
data16
and
inc
es
aaa
push
inc
enter
movs
cmp
fcomp
push
or
inc
and
jo
fs
ins
adc
nop
xor
jle
push
pop
dec
fdiv
push
cld
dec
jle
and
add
or
or
loopne
inc
es
ret
pusha
cwde
pop
into
js
inc
mov
inc
pusha
jne
popa
popa
mov
or
inc
dec
stos
jbe
or
imul
inc
out
popa
and
inc
pop
inc
mov
stos
jbe
outs
aad
shl
push
push
adc
pusha
mov
outs
lods
xchg
adc
lods
cwde
xor
add
sub
and
sub
outs
jno
add
adc
outs
gs
cmp
and
mov
cdq
call
add
shl
retf
(bad)
popa
nop
xor
jb
bound
test
shr
inc
cli
in
ss
bound
push
adc
lea
inc
test
sbb
add
mov
push
inc
mov
lods
and
pop
push
inc
inc
call
adc
dec
dec
xor
loope
adc
data16
popa
dec
dec
int
sbb
dec
push
sbb
xchg
movs
xor
push
jmp
imul
xor
lock
rcl
inc
mov
adc
mov
and
dec
fiadd
or
arpl
hlt
sub
or
aam
lods
push
xor
ret
add
xor
or
dec
inc
fadd
dec
dec
push
jp
pop
sub
mov
sbb
and
mov
shr
rcl
xor
int3
dec
je
sub
pop
cmp
mov
add
popa
repnz
adc
outs
in
bound
mov
push
adc
es
push
fs
js
loopne
mov
call
xor
or
xor
ins
pusha
pop
mov
imul
les
adc
push
dec
and
jo
push
ins
dec
sub
xchg
inc
inc
or
pop
xchg
xor
push
cmp
push
ror
push
lock
sub
sbb
push
add
dec
jo
mov
imul
mov
loopne
div
pop
xchg
jb
adc
call
cs
or
adc
xor
add
nop
pop
inc
dec
or
inc
xor
pusha
pop
dec
push
cmp
pop
sub
shr
pop
or
fiadd
xor
or
adc
mov
mov
mov
sar
or
or
cwde
inc
sbb
mov
and
jle
dec
pusha
sub
les
add
pop
sbb
sub
sub
push
or
mov
or
or
pop
push
cmp
jbe
push
lock
push
les
inc
add
dec
push
pusha
and
adc
into
inc
test
nop
hlt
inc
jle
mov
adc
imul
inc
push
xor
inc
outs
call
cmp
cli
ja
xor
pushf
mov
ds
xor
clc
je
add
and
push
ins
lods
push
ror
mov
push
inc
xchg
xor
xor
sbb
cwde
les
call
push
inc
inc
xchg
retf
adc
inc
cld
mov
xchg
push
dec
jo
xor
add
inc
dec
test
add
inc
out
xchg
sub
mov
inc
mov
sbb
ss
push
mov
fs
ins
dec
bound
test
out
xchg
jp
rcr
jo
or
movs
push
push
int3
xor
call
pop
nop
inc
mov
pushaw
hlt
cmps
in
or
and
dec
and
in
add
test
cmps
add
pop
test
adc
or
add
movs
push
or
add
inc
(bad)
push
dec
sahf
arpl
hlt
scas
lea
xor
imul
push
push
adc
xchg
push
dec
rcr
sbb
mov
push
pop
xchg
ret
in
inc
(bad)
pop
and
adc
add
push
push
add
xor
add
cli
mov
xchg
pop
add
fadd
frstor
inc
dec
gs
repnz
pop
push
enter
and
dec
aaa
push
jecxz
ret
in
dec
dec
xchg
sbb
push
test
sub
lds
jbe
push
rcl
push
aam
mov
push
xor
xor
into
cmp
cwde
and
sar
sahf
inc
ins
leave
sub
ja
and
jne
inc
mov
outs
inc
add
mov
ds
test
inc
add
and
cmp
fdiv
dec
jno
ins
lods
js
movs
and
hlt
sub
pop
adc
and
dec
push
push
push
push
mov
push
inc
imul
mov
call
inc
and
test
call
and
into
xor
ins
inc
fcom
test
push
shl
mov
mov
ins
outs
xor
xor
adc
test
test
aam
imul
bound
push
cmp
inc
xchg
dec
add
into
adc
cmp
pop
inc
dec
dec
xor
jmp
or
dec
push
cmp
add
or
data16
jmp
fadd
inc
int3
movs
push
dec
cli
sbb
mov
pop
or
test
movs
fiadd
inc
and
add
popa
mov
xor
cld
xchg
inc
xchg
inc
jmp
jle
aaa
adc
inc
rol
xor
int
jo
pop
call
retf
or
lock
loope
push
mov
shl
adc
(bad)
sub
cmps
movs
ins
outs
cmp
cmp
fmulp
dec
dec
add
fisubr
jno
(bad)
pop
xor
pop
jns
daa
add
sub
lods
mov
push
mov
arpl
pop
ins
adc
or
pop
fs
popa
in
cmp
outs
test
inc
enter
inc
cli
adc
jae
pop
add
test
adc
dec
fcmove
xchg
dec
push
data16
inc
mov
shl
pushf
adc
jecxz
xor
mov
mov
into
ins
cli
dec
mov
jp
es
push
sbb
out
dec
cdq
mov
jb
mov
sub
push
jp
push
scas
add
cs
dec
push
adc
cmp
mov
je
ja
push
inc
xor
inc
dec
fs
add
push
in
loope
add
cld
inc
pop
push
or
sub
fdiv
inc
pop
inc
daa
and
sub
add
retf
sub
push
mov
add
add
mov
fwait
add
mov
push
je
or
cmps
bound
dec
bound
xchg
adc
add
add
push
push
aaa
push
jbe
xchg
cli
dec
jne
das
mov
loop
xor
xchg
add
cmp
dec
addr16
jb
xchg
add
adc
mov
or
fwait
and
pop
mov
test
test
or
nop
inc
mov
push
(bad)
push
and
lock
adc
push
xchg
jae
ins
inc
add
dec
lods
adc
cmp
or
ret
cmp
adc
outs
je
dec
adc
add
push
bound
push
inc
pop
or
imul
ins
xor
dec
out
dec
push
cld
ins
pop
dec
popa
cs
mov
in
mov
add
pop
xor
cld
cmp
jo
mov
into
push
push
and
jb
cmp
dec
bound
shr
or
loopne
adc
int3
or
sbb
xchg
retf
push
mov
or
inc
clc
bound
pusha
push
add
push
mov
call
cmp
hlt
xchg
and
xor
scas
aam
mov
dec
dec
adc
xor
push
je
add
outs
imul
(bad)
push
push
cld
pop
fcom
or
add
pop
cmp
inc
leave
ror
inc
sub
retf
add
mov
add
xor
sbb
mov
jno
ins
jecxz
sub
jbe
fisttp
mov
push
cs
test
dec
add
push
test
or
pop
fwait
outs
dec
jne
push
je
adc
or
and
and
pop
xchg
ror
cli
ja
inc
add
nop
jbe
bound
push
cmp
popa
push
fsub
ret
inc
push
xor
jp
imul
add
jmp
pop
or
loope
pushf
int3
inc
pusha
or
aam
test
cmp
add
sbb
mov
aam
test
or
cld
rol
cmp
jp
das
inc
mov
xor
aaa
adc
jmp
xchg
add
inc
ins
pop
addr16
jno
add
and
xchg
ret
ret
pusha
(bad)
mov
sbb
and
jmp
push
and
sahf
mov
sbb
cwde
fdiv
push
xor
ror
push
ficom
and
jo
push
jbe
xchg
cmps
or
out
push
xor
push
mov
dec
shl
sub
scas
nop
fs
cmps
and
jo
es
inc
and
inc
and
adc
inc
inc
push
shl
ss
inc
xor
push
adc
adc
(bad)
xor
ins
nop
dec
cld
shr
push
cmp
sbb
pusha
add
fs
or
inc
sbb
add
popa
outs
jo
inc
test
inc
loop
or
sbb
jbe
imul
or
sub
jbe
or
add
nop
push
sub
enter
inc
and
sub
pop
add
dec
aaa
push
sub
push
movs
mov
nop
cmp
mov
xchg
js
and
lds
inc
dec
arpl
arpl
inc
add
out
cmp
shr
dec
xchg
dec
xor
inc
push
in
bound
ins
ror
pushf
xchg
dec
and
jp
xchg
add
or
repnz
retf
jb
lods
test
adc
rcl
adc
or
xor
retf
adc
inc
inc
cmp
push
sar
imul
mov
and
inc
inc
mov
push
fdiv
fwait
jb
and
pop
dec
ss
add
jne
inc
push
adc
inc
sub
je
jmp
stos
cdq
bound
xchg
push
push
leave
mov
cmp
or
add
dec
popa
cmps
mov
ins
push
fmul
adc
inc
arpl
rcr
jo
fs
ja
les
fdiv
dec
pop
les
add
leave
mov
sub
nop
dec
and
call
mov
stos
aaa
adc
dec
xchg
ror
xchg
sbb
inc
and
and
or
sbb
aaa
push
nop
inc
mov
push
xchg
and
sub
or
inc
dec
xor
dec
add
dec
mov
inc
inc
inc
movs
ins
call
add
dec
dec
ins
xchg
ret
movs
outs
dec
mov
inc
xor
jmp
sahf
popa
xor
enter
xor
add
or
cs
adc
xchg
shr
ss
mov
push
push
fsub
xor
or
mov
cmp
int3
les
rcl
sbb
dec
sbb
cwde
add
nop
dec
or
(bad)
sub
mov
jmp
pushf
les
jmp
add
pusha
add
div
push
movs
loopne
cmp
push
adc
addr16
inc
or
xor
inc
cmp
inc
xchg
shr
aad
adc
dec
dec
dec
sbb
test
mov
ss
jns
popa
adc
sbb
xchg
cmp
xor
sub
and
fidiv
sbb
add
add
push
mov
inc
xchg
ja
cmp
sbb
xor
add
add
inc
nop
pop
add
xor
jb
rcr
add
dec
inc
int3
xor
sbb
inc
call
inc
cs
adc
loop
mov
pop
inc
jo
jno
push
popf
sub
or
mov
daa
xor
sbb
push
push
pushf
arpl
outs
pusha
inc
adc
jle
and
nop
jle
or
push
dec
xchg
shl
push
mov
xchg
mov
dec
popa
and
cmp
and
mov
jle
clc
xchg
sbb
mov
imul
lock
and
fsubrp
sub
sub
inc
jbe
jl
adc
out
addr16
xor
or
cli
mov
sub
sub
or
dec
imul
xor
dec
or
push
add
inc
push
push
rcl
aam
pop
data16
inc
sbb
xchg
adc
xor
or
push
or
jbe
and
mov
push
adc
mov
xchg
dec
inc
popf
sbb
fidiv
pop
sbb
movs
push
hlt
xor
jo
inc
mov
or
cs
inc
dec
push
aad
bound
push
fdiv
pop
xchg
inc
gs
pop
lds
add
rcl
adc
dec
xor
or
xchg
or
sbb
test
mov
popa
inc
inc
rcr
push
adc
xor
sub
push
or
dec
sub
add
xor
js
dec
sub
xor
cli
mov
xchg
pop
je
mov
loopne
je
pusha
bound
sub
fadd
scas
clc
dec
aam
inc
mov
inc
inc
add
push
push
inc
xor
fisttp
push
aam
fiadd
dec
gs
jno
jo
mov
adc
mov
mov
into
xchg
dec
addr16
adc
xor
and
outs
sbb
ins
jne
adc
xchg
dec
aam
ror
stos
cld
push
mov
out
mov
fisubr
push
xor
mov
call
adc
call
mov
scas
sbb
or
and
adc
push
jno
or
adc
fdivr
stos
or
ror
out
add
fcmovbe
sbb
xchg
dec
mov
xor
bnd
or
push
xchg
ret
cs
jae
jbe
push
sub
ret
jbe
sbb
or
dec
cs
push
xor
push
mov
sbb
outs
stos
shr
jl
enter
ins
push
shl
xor
inc
fs
pop
ins
mov
jae
stos
imul
sbb
inc
(bad)
mov
cs
es
dec
(bad)
xor
dec
push
je
sbb
clc
adc
or
push
loopne
xchg
inc
test
cmp
mov
cmp
mov
nop
mov
dec
mov
(bad)
popa
mov
cli
dec
inc
and
mov
mov
push
adc
add
in
add
cwde
push
shl
adc
push
jmp
test
outs
and
cmp
rcr
rcl
inc
add
inc
or
push
lods
inc
cld
jno
loopne
outs
sbb
aaa
or
push
test
dec
jb
pop
push
pop
dec
adc
push
xor
test
push
xor
dec
xchg
retf
aaa
arpl
jo
xlat
dec
or
dec
cs
jp
jns
jmp
test
jbe
inc
sbb
cmp
ret
push
loopne
lods
movs
add
jp
push
loopne
fiadd
lods
inc
sbb
adc
rcl
movs
test
push
test
inc
scas
xchg
add
dec
ss
mov
test
shr
loop
mov
loopne
movs
outs
aam
(bad)
test
and
inc
scas
nop
cwde
nop
shl
jb
push
jbe
xor
movs
sub
jmp
loopne
mov
aam
and
or
push
xchg
xor
push
inc
call
push
js
les
xor
inc
xor
js
call
push
ins
(bad)
aaa
push
dec
cmp
mov
sub
xor
js
and
dec
mov
or
daa
adc
pop
aaa
inc
dec
cmp
popa
or
inc
pusha
sub
(bad)
call
test
test
xchg
mov
and
push
mov
xchg
and
or
js
sub
bound
xor
mov
mov
mov
mov
pop
test
js
or
retf
jl
sub
push
add
mov
mov
inc
inc
and
es
pop
movs
and
xor
mov
ret
inc
les
push
push
add
xor
imul
popa
inc
je
test
push
shl
sub
mov
or
fs
pop
outs
js
push
bnd
xchg
jmp
mov
or
add
inc
xchg
push
or
bound
push
dec
mov
push
dec
push
pusha
xchg
mov
and
or
or
or
xor
mov
xchg
xchg
pusha
pushf
addr16
mov
nop
dec
(bad)
push
ja
mov
mov
sbb
dec
sub
jp
out
adc
and
and
or
retf
adc
push
and
push
push
movs
cmp
sbb
mov
inc
jp
inc
je
jbe
push
dec
movs
pushf
xor
and
adc
in
jae
les
sbb
add
and
dec
outs
lock
shl
dec
imul
div
ins
cmp
stos
push
jae
add
mov
jbe
jb
out
pop
aam
xchg
mov
xor
ret
inc
jno
inc
mov
test
or
inc
arpl
in
inc
xor
ja
ret
or
mov
pop
or
jb
xor
test
inc
ja
ret
sub
mov
rcr
add
dec
xor
int3
mov
or
imul
mov
xchg
ret
fdivr
inc
jb
repnz
adc
adc
scas
xor
inc
js
push
dec
test
popa
and
je
xor
inc
movs
push
sub
and
mov
push
mov
dec
add
rcl
imul
mov
sub
pop
test
inc
pop
imul
push
ja
fisubr
bound
jbe
cmp
add
in
jno
push
ss
add
movs
movs
and
mov
push
sahf
inc
mov
sub
mov
nop
inc
xchg
inc
push
adc
cdq
xor
mov
mov
inc
lock
mul
xchg
call
push
push
pusha
push
shr
sub
push
add
lock
sub
mov
adc
test
int3
push
aaa
add
xchg
je
mov
or
push
dec
push
fwait
and
push
ins
add
mov
push
add
add
mov
dec
xor
shr
stos
cwde
ins
push
popa
bound
mov
push
push
fs
ins
jl
and
shl
cmp
imul
cwde
arpl
sub
sub
adc
mov
inc
scas
cld
adc
inc
xor
sbb
and
xor
or
adc
sub
sub
sbb
xchg
add
fsub
mov
sar
pop
or
add
add
fmul
push
add
mov
dec
data16
popa
mov
push
xchg
and
mov
jmp
rol
pop
imul
mov
dec
push
mov
xor
inc
xor
mov
js
(bad)
xor
mov
bound
mov
push
fs
gs
sub
inc
fs
and
jbe
jb
fidiv
cmp
dec
mov
cmp
push
dec
adc
shl
dec
movs
outs
jbe
imul
push
in
mov
and
jl
push
or
dec
xor
ss
inc
adc
mov
push
dec
xchg
outs
dec
xchg
add
and
loop
addr16
mov
test
test
call
test
xchg
fcom
mov
cli
adc
inc
dec
ret
(bad)
dec
push
adc
add
or
pop
outs
pop
cdq
xor
cwde
shr
adc
outs
push
mov
dec
jo
bound
imul
or
sbb
cwde
adc
or
fs
cmp
ret
sbb
js
mov
push
and
test
pop
pop
adc
gs
xor
jo
aaa
fisub
adc
xchg
ret
dec
test
inc
mov
test
ret
add
adc
push
push
pop
xchg
rcl
sub
mov
dec
and
je
ret
int3
inc
pop
rol
push
data16
push
into
inc
mov
dec
push
mov
imul
test
inc
jbe
arpl
inc
test
adc
jp
popa
dec
cmp
lods
outs
xor
sub
gs
(bad)
mov
sbb
xor
aaa
outs
ja
add
dec
add
inc
dec
ret
push
inc
movs
jae
push
call
(bad)
jno
mov
push
inc
outs
arpl
ja
inc
add
ret
pop
push
adc
push
push
or
ss
mov
xchg
mov
add
in
push
cmp
shl
and
cmp
xchg
pushf
bound
sbb
sub
aaa
add
cld
jo
or
call
and
inc
xor
jne
stos
fst
hlt
and
test
pop
ret
jl
imul
ins
sbb
test
jbe
shl
mov
xor
loopne
lods
dec
xor
pop
(bad)
mov
push
js
dec
jae
je
jae
or
mov
mov
or
aam
enter
jne
add
in
jbe
and
lods
je
fimul
mov
mov
adc
test
and
and
add
push
or
adc
pusha
adc
fs
loopne
dec
ret
movs
retf
adc
jb
push
mov
ja
jno
test
outs
and
adc
dec
movs
cwde
add
inc
jae
sub
inc
mov
popa
xchg
sbb
push
ins
pop
or
inc
test
fs
push
lea
jo
pop
rcl
add
adc
xchg
dec
add
xor
sbb
add
sub
cmp
jb
rcl
add
mov
mov
test
inc
outs
sbb
add
push
pop
push
and
push
test
cmps
ret
mov
xor
xor
lock
inc
and
adc
mov
les
and
aam
push
sbb
jl
add
push
push
inc
mov
imul
ror
ins
int3
push
fs
cmp
loopne
jo
push
cmps
lahf
cwde
mov
inc
jbe
outs
out
mov
repnz
mov
and
inc
mov
les
push
xchg
mov
dec
dec
or
into
sahf
retf
pop
or
adc
add
retf
mov
xchg
sar
cld
je
push
or
push
add
cmp
inc
jmp
dec
ins
sub
push
nop
mov
sbb
cmp
adc
xchg
test
in
(bad)
in
and
and
mov
or
aaa
inc
cmp
xor
sub
ins
jae
push
or
xor
je
ss
push
sbb
je
outs
mov
xor
nop
gs
sbb
adc
hlt
pushf
scas
cwde
retf
xor
jno
add
fs
rcl
adc
cmp
sub
out
mov
cld
jno
mov
sub
and
test
lds
sbb
jo
cmp
xor
gs
adc
sub
pop
inc
sbb
or
call
stos
dec
xor
ins
or
jb
add
xchg
inc
push
push
add
xor
and
or
dec
mov
ins
enter
adc
fs
mov
adc
inc
pop
call
fwait
adc
push
add
dec
inc
adc
push
xor
jb
outs
push
in
mov
outs
dec
pop
jo
and
(bad)
enter
or
test
pop
ret
xchg
mov
mov
push
jne
dec
push
add
int3
adc
add
dec
movs
aad
add
js
dec
add
push
jo
ja
inc
pop
inc
je
push
adc
inc
jns
inc
jl
loopne
pusha
mov
mov
fs
bound
adc
mov
pushf
add
fadd
dec
sbb
ret
cmp
ss
mov
sub
out
xchg
jo
or
shr
dec
outs
cmps
add
and
mov
push
dec
jbe
ret
push
fnstenv
push
xor
adc
fs
rol
test
mov
imul
js
pop
movs
mov
cmps
dec
or
xor
cs
dec
shl
arpl
adc
add
adc
mov
fisub
and
inc
dec
je
data16
ss
mov
gs
mov
jns
bound
pusha
les
inc
ror
pop
inc
xor
addr16
imul
add
mov
pusha
mov
ins
jbe
mov
pop
gs
(bad)
mov
push
dec
add
dec
dec
push
jns
sub
es
inc
shl
popa
mov
push
push
popa
and
ins
mov
mov
mov
add
cmp
cmp
mov
or
arpl
popa
adc
jbe
cmp
scas
outs
xor
(bad)
dec
pop
dec
or
jo
sub
jb
jmp
xor
bound
push
push
inc
push
inc
xchg
retf
cmp
push
push
cdq
inc
xor
inc
add
cmp
and
xchg
(bad)
pusha
push
stos
mov
test
push
xor
add
mov
inc
and
xchg
sub
lods
mov
or
mov
dec
xor
and
imul
mov
inc
push
and
inc
pushf
mov
jmp
push
mov
dec
cwde
call
jb
test
push
inc
jp
xor
add
imul
js
cmp
bound
in
adc
inc
fsubr
push
ss
push
add
push
mov
sub
js
adc
push
pushf
push
nop
cmps
in
scas
add
cs
push
retf
mov
jp
es
or
es
push
xchg
mov
jl
push
or
xor
sub
and
push
cld
add
je
(bad)
adc
stos
jb
cmp
sub
nop
enter
inc
pop
jmp
pushf
xor
gs
adc
cmp
or
inc
das
cmc
add
inc
inc
bound
xchg
adc
push
fs
gs
and
dec
je
dec
rol
arpl
popa
mov
jb
add
adc
add
mov
mov
cwde
sub
es
dec
enter
add
call
fmul
cmp
mov
ja
push
push
jno
jo
inc
xchg
loopne
ins
mov
sbb
xor
ficom
and
add
or
lods
push
xor
rcr
adc
mov
call
mov
mov
cmp
je
or
mov
xor
in
push
or
adc
inc
or
xor
mov
xchg
out
push
sub
pop
and
push
jp
pusha
xchg
cmp
movs
pusha
mov
and
movs
and
mov
and
repnz
or
outs
aad
xchg
mov
dec
gs
xor
add
movs
xor
mov
enter
push
pusha
jmp
or
xor
sbb
add
jb
cmp
push
inc
dec
sub
cld
adc
adc
call
dec
or
push
je
mov
cmp
mov
add
sahf
cmp
mov
jbe
xor
in
mov
ins
ja
sub
fs
fld
jno
add
adc
xor
dec
and
or
adc
push
adc
and
test
dec
dec
shl
mov
jne
push
push
jmp
clc
adc
inc
mov
xor
retf
aam
movs
push
fdivr
push
pop
arpl
xor
inc
cwde
sub
inc
data16
xor
inc
into
xor
push
je
jno
or
inc
pop
sbb
nop
ss
shr
cmp
push
in
cld
cli
jb
dec
ret
add
pop
and
ss
and
sub
clc
into
arpl
repz
and
cmp
jb
inc
or
pusha
xor
push
inc
pop
fs
push
mov
jp
dec
enter
test
xchg
cs
add
sub
pop
fdivr
inc
je
inc
push
pop
cld
xor
dec
pop
and
pop
push
fsub
push
dec
push
dec
push
gs
sar
dec
xor
push
dec
ss
or
sbb
dec
cmp
jne
push
dec
xor
sbb
mov
push
movs
adc
mov
dec
ss
cmps
and
mov
mov
call
pop
push
add
mov
(bad)
fdiv
clc
xor
aad
call
mov
dec
fimul
es
push
xor
or
mov
xor
or
pop
jne
call
aam
arpl
leave
push
or
and
push
test
sub
mov
dec
adc
inc
xor
jmp
push
shl
jb
nop
push
sbb
xor
popa
xor
inc
or
shr
push
inc
sub
inc
dec
gs
push
push
inc
mov
ret
outs
or
sbb
xor
jo
xchg
(bad)
push
pushf
mov
push
push
pop
and
push
sub
jbe
jbe
shl
add
call
inc
ror
call
adc
push
fs
inc
fdiv
mov
out
jb
rcl
add
push
xchg
ret
dec
aaa
cmp
mov
stos
push
push
pop
add
sub
test
pusha
xor
aaa
cmp
outs
gs
or
ss
ret
add
push
xchg
or
or
lods
xor
mov
rcl
adc
cmp
push
mov
aaa
xor
sub
sahf
ins
cmps
inc
jp
push
call
dec
fs
add
or
or
inc
push
mov
jbe
adc
jmp
fcomp
xor
add
or
sar
movs
add
inc
outs
push
mov
jae
xor
jne
cld
call
adc
push
add
push
mov
dec
and
inc
lock
retf
or
push
jne
adc
lods
jae
out
clc
add
gs
cmp
or
mov
push
popa
repnz
call
jno
add
and
adc
and
dec
loopne
test
aas
aaa
jle
dec
xor
and
or
mov
jle
add
sbb
ins
test
sbb
push
ins
or
ins
push
pusha
add
les
jns
push
lds
pop
ins
js
jno
or
lods
cmp
sbb
dec
mov
and
inc
imul
movs
sbb
add
jns
sbb
dec
aam
test
fadd
push
inc
fidiv
sbb
push
shl
inc
xor
adc
and
(bad)
bound
pop
rol
jae
ss
inc
xor
adc
dec
jp
imul
(bad)
call
repnz
add
mov
dec
out
test
xor
jns
mov
mov
jno
adc
push
jo
push
loop
mov
inc
dec
leave
push
call
addr16
push
xor
push
add
mov
fidiv
mov
jo
loop
xchg
adc
jno
mov
arpl
xor
inc
jo
inc
loopne
into
xchg
push
and
mov
xchg
add
adc
inc
inc
jo
sbb
mov
inc
cmp
aaa
jae
adc
add
call
adc
daa
mov
or
cmp
dec
cmp
xchg
dec
xchg
ret
mov
push
xor
push
sbb
push
add
push
adc
and
xchg
mov
rol
test
shl
and
mov
or
jle
xor
xor
push
add
jo
nop
rol
or
inc
dec
dec
imul
push
pop
push
dec
ror
mov
dec
adc
sar
inc
dec
or
test
shl
dec
dec
jo
push
dec
add
enter
cmp
mov
sbb
(bad)
(bad)
and
xor
sbb
out
test
dec
cmp
add
jbe
call
in
xchg
gs
push
cs
adc
mov
and
mov
fcomp
pop
aaa
mov
dec
xor
cwde
imul
pop
add
add
adc
mov
inc
test
pusha
outs
xor
inc
test
xor
dec
or
push
test
mov
test
jmp
jae
inc
dec
in
dec
stos
jno
dec
ret
mov
fidivr
jo
xor
test
ret
push
movs
adc
and
xor
ss
push
ja
push
pop
sub
jno
inc
fs
ins
push
xor
jae
imul
mov
push
imul
outs
cmp
(bad)
call
xchg
ja
dec
sub
outs
popa
xor
int
call
mov
mov
jae
push
adc
mov
add
adc
into
jns
jo
movs
add
push
jge
and
data16
and
push
jle
ss
sub
arpl
push
sub
add
outs
push
or
lods
dec
dec
dec
out
jo
push
test
mov
add
xchg
adc
or
or
and
xchg
dec
mov
add
xor
xchg
add
mov
mov
popa
push
dec
(bad)
dec
inc
ret
push
retf
pop
push
push
fst
dec
xor
jo
push
and
shr
add
enter
adc
push
cli
dec
inc
xor
sub
dec
push
aam
in
and
data16
or
push
js
loopne
add
fiadd
clc
add
aam
mov
push
les
clc
sub
ss
ret
push
stos
dec
loope
cdq
js
inc
push
dec
dec
xor
or
or
rcl
es
and
inc
or
data16
mov
add
adc
adc
ss
and
inc
sub
pop
push
xchg
adc
inc
out
into
push
or
test
xchg
and
pusha
aaa
mov
xchg
xchg
pop
jns
push
and
mov
mov
mov
pop
or
jns
fs
sub
xor
cmp
cmp
test
popa
mov
or
dec
and
and
les
ins
enter
js
sub
adc
inc
inc
xor
ficom
push
xor
je
and
dec
push
or
xor
jb
ins
shl
add
jp
and
add
xor
imul
or
and
dec
dec
pusha
dec
or
cs
je
imul
add
and
test
loop
mov
dec
mov
add
dec
push
xchg
ins
imul
popa
bnd
mov
pop
jno
push
rcl
pusha
ret
scas
cs
or
sub
adc
push
adc
dec
retf
add
inc
sbb
add
leave
xchg
mov
or
add
pop
mov
add
inc
push
adc
sub
popa
jmp
jo
mov
adc
aam
ss
fsub
push
mov
lock
cmp
bound
bound
leave
test
and
xor
test
es
aam
movs
test
sbb
xchg
rcl
(bad)
cmp
add
jp
xchg
adc
push
push
pusha
and
fs
mov
or
add
add
outs
mov
imul
sbb
ins
add
xor
push
dec
pusha
push
sahf
xor
adc
add
jo
xor
xor
pop
ins
ss
loop
or
pusha
ret
aam
inc
xor
test
add
adc
inc
xor
or
adc
test
sub
mov
inc
jns
xor
nop
jle
imul
cmp
fcom
jmp
cdq
inc
inc
ss
adc
jns
ins
xor
dec
retf
fcmovu
xor
push
mov
mov
enter
push
push
popa
mov
dec
add
ss
fimul
and
outs
into
shl
dec
adc
jo
cs
cmps
out
aam
push
popa
hlt
movs
mov
or
loopne
and
push
push
and
rcr
and
adc
sub
add
or
sub
imul
push
call
inc
add
cmp
call
push
or
outs
in
mov
ss
or
xor
out
dec
push
xor
add
loope
xchg
test
jle
adc
div
sub
xor
dec
push
out
xor
mov
add
arpl
data16
mov
inc
sub
inc
xchg
adc
add
pop
push
push
mov
retf
sub
dec
adc
push
inc
or
push
push
popa
sub
stos
dec
jo
sbb
js
or
ss
jb
xor
xchg
sbb
mov
sbb
mov
sbb
enter
or
xchg
cmp
push
outs
stos
retf
jo
push
inc
mov
fcmovbe
sbb
pusha
sbb
push
fadd
sbb
dec
lea
int3
fisub
dec
mov
push
xchg
ficom
and
add
test
or
push
xor
add
sbb
mov
movs
xor
xchg
xchg
out
xchg
pop
cmp
inc
aam
xor
dec
ret
dec
ror
add
fimul
add
lea
dec
and
add
sar
push
les
mov
test
and
pusha
cs
inc
dec
mov
or
mov
pusha
inc
out
adc
inc
jb
xor
add
or
push
jbe
inc
dec
adc
jl
xor
xor
xor
cmp
cmp
aam
es
push
arpl
add
outs
sub
sub
xchg
mov
mov
dec
or
mov
mov
or
jne
inc
add
sbb
js
push
ins
push
xor
loop
push
pop
outs
ins
ins
jbe
add
push
ret
add
sbb
mov
mov
push
sub
jbe
inc
xchg
jne
inc
dec
mov
push
cmp
cmp
push
push
mov
sbb
mov
and
and
lods
adc
push
inc
mov
sbb
rol
inc
sbb
add
rcl
adc
or
cmp
push
mov
add
push
mov
push
xor
push
gs
fs
dec
mov
push
add
inc
push
mov
bound
mov
mov
call
cwde
aam
cmp
mov
ret
and
dec
push
inc
add
xor
pushf
jle
dec
mov
add
sub
jge
data16
sbb
inc
push
mov
add
repnz
xchg
enter
inc
xor
push
out
jb
dec
xchg
pop
outs
xor
test
mov
mov
mov
mov
dec
cmp
adc
sar
(bad)
jne
outs
mov
push
in
sbb
jo
pop
adc
cwde
mov
fs
dec
out
xor
dec
mov
push
outs
dec
xor
bound
push
dec
mov
or
bound
dec
mov
xor
inc
push
sub
and
xchg
mov
or
loopne
inc
add
xchg
inc
fisub
adc
pusha
dec
nop
cwde
sub
push
xchg
mov
jo
sub
cli
cmp
into
push
dec
dec
adc
and
aaa
es
popa
or
inc
ins
in
mov
pop
lods
je
ss
push
push
cdq
stos
push
xor
dec
mov
xor
outs
adc
xor
js
pop
cwde
inc
gs
sbb
bound
jmp
mov
sub
out
cmp
xor
es
icebp
add
cld
sub
sbb
pop
and
aaa
mov
hlt
inc
call
xchg
sbb
jbe
popa
mov
push
in
push
add
fmul
or
sahf
dec
in
pushf
or
lock
add
mov
ror
hlt
inc
xor
loop
xor
fs
mov
ins
sbb
outs
outs
push
imul
push
and
ja
fcom
sbb
push
jbe
and
rol
mov
retf
or
outs
push
fiadd
add
xor
rcl
sub
xor
xchg
test
ss
dec
push
data16
and
add
bound
sub
aam
addr16
add
dec
je
xor
cmp
scas
push
fsubr
xchg
adc
dec
gs
and
inc
scas
rol
ret
mov
adc
dec
push
adc
inc
sbb
push
adc
push
mov
or
or
sbb
sub
call
xor
inc
jno
leave
jno
pusha
dec
mov
stos
sbb
cld
cmp
ins
sbb
xor
sub
or
dec
mov
retf
stos
mov
mov
cs
ss
daa
or
movs
or
cmp
dec
add
mov
sub
mov
mov
sub
cmp
adc
pop
enter
and
cmps
mov
outs
xor
or
je
dec
rcl
in
push
sub
mov
(bad)
dec
scas
outs
nop
ins
jl
mov
pop
imul
xor
jo
push
dec
test
call
fnstenv
ror
pusha
dec
adc
popa
dec
push
cdq
sub
movs
push
or
cs
and
sub
and
and
mov
fiadd
test
aaa
mov
push
call
arpl
push
xor
(bad)
xchg
mov
inc
aad
sub
sbb
push
adc
ss
dec
rol
fadd
mov
xchg
sbb
adc
sbb
pushf
push
inc
dec
jae
in
push
mov
adc
pusha
dec
retf
and
xor
xchg
mov
add
or
(bad)
push
xchg
test
adc
pop
(bad)
mov
mov
push
inc
push
dec
sbb
dec
or
sbb
mov
stos
dec
mov
jmp
call
adc
bound
lock
jo
xor
push
test
add
and
mov
mov
pusha
jb
int
and
aam
jbe
retf
dec
add
pop
push
push
mov
data16
lock
stos
push
shr
fsubr
shr
inc
cmp
ins
adc
inc
adc
push
dec
scas
and
mov
dec
dec
pusha
test
push
loop
mov
retf
xchg
rcl
mov
in
cmps
mov
adc
push
inc
aam
mov
or
jp
sbb
sbb
xor
push
xor
cdq
inc
or
xor
popa
xor
call
add
xor
loope
mov
aaa
pop
imul
mov
sar
mov
cmp
mov
push
sub
dec
ds
xor
mov
sub
enter
shl
mov
rcl
and
adc
sbb
ja
lods
scas
sub
mov
sbb
je
and
xchg
ss
inc
gs
(bad)
adc
fidiv
dec
dec
ins
mov
adc
fs
data16
js
and
add
jbe
sub
dec
mov
inc
adc
add
and
push
sub
mov
or
adc
mov
or
adc
push
push
sbb
ss
or
outs
jmp
xchg
ins
inc
push
ins
loop
mov
test
inc
retf
or
test
mov
dec
cmp
ror
loopne
sbb
jo
fld
xor
call
cwde
rcr
cmp
xor
js
dec
xor
push
sahf
push
into
fs
push
dec
mov
movs
call
push
xor
mov
jne
ret
inc
push
aam
cmps
push
or
or
jo
in
mov
xor
test
jno
sub
push
retf
fmul
addr16
jns
pop
(bad)
shl
inc
xor
push
and
lods
sub
inc
xor
or
push
jbe
cmps
xchg
add
mov
or
pop
add
imul
movs
xsha1
cmps
dec
movs
pop
inc
popa
mov
xchg
movs
add
inc
pop
mov
or
mov
ins
push
outs
add
mov
jbe
xchg
sbb
fdivr
push
pop
push
cmp
js
sbb
jo
imul
xchg
xchg
ret
dec
(bad)
enter
fs
inc
imul
adc
sahf
cmp
imul
outs
push
xchg
or
cmps
out
rol
or
aaa
retf
inc
add
adc
out
dec
in
inc
inc
pusha
enter
mov
dec
mov
leave
xchg
xchg
popa
pop
push
mov
loopne
cmps
mov
dec
in
aaa
enter
or
mov
mov
or
cld
movs
mov
test
xor
push
aam
or
outs
push
pop
push
xchg
sbb
inc
in
dec
and
es
adc
sbb
dec
es
(bad)
sub
jbe
push
ja
shr
jle
inc
sbb
adc
ins
mov
mov
(bad)
push
dec
js
and
les
shl
retf
cli
ss
nop
popa
push
mov
or
pop
pop
xchg
repnz
dec
dec
fs
dec
sahf
add
test
mov
fsubr
adc
xor
pusha
xchg
dec
loope
adc
push
inc
or
add
or
fsub
dec
je
and
mov
xor
adc
or
lea
sbb
mov
and
xor
and
push
push
sbb
in
mov
mov
ss
inc
inc
xor
repnz
add
xor
xor
ja
and
mov
xor
sub
cmp
rol
retf
or
push
push
mov
xor
sub
ret
aad
imul
int
mov
push
xchg
shl
enter
mov
add
push
adc
mov
sub
outs
push
add
or
sbb
sub
dec
add
push
pop
inc
mov
rol
enter
sbb
shl
jne
inc
cmp
es
sbb
dec
cmp
or
test
jo
pop
sub
mov
gs
sbb
inc
dec
push
fild
or
mov
stos
add
hlt
jbe
sbb
push
jne
arpl
inc
xor
and
out
mov
adc
not
xor
xchg
loopne
movs
mov
adc
add
mov
inc
or
push
cld
push
pusha
xchg
push
pop
fdiv
inc
push
dec
push
pop
ss
lds
or
bound
pusha
add
sub
aad
or
mov
(bad)
xlat
push
sbb
add
or
cmps
es
inc
movs
inc
or
inc
or
fcom
sub
adc
xor
mov
test
cdq
inc
sbb
repnz
and
xor
xchg
adc
xor
shr
pop
test
push
adc
jl
dec
dec
xor
inc
sub
test
dec
sbb
push
push
call
add
lods
inc
mov
push
add
xor
nop
xchg
loopne
pop
inc
push
pop
push
cmp
xor
(bad)
popa
aam
cmps
adc
out
test
sbb
aam
and
xchg
xchg
sub
popa
shr
call
imul
(bad)
mov
push
jmp
ins
mov
arpl
push
cmp
retf
sbb
sub
pop
fmul
jns
pop
push
add
dec
dec
ins
sbb
push
movs
cmps
add
push
leave
and
xchg
fsub
push
dec
cmp
mov
jmp
or
sub
add
sub
dec
or
fsub
fld
mov
jb
ds
dec
inc
push
xor
add
fisub
or
mov
cli
popa
push
push
push
repnz
and
or
jo
sub
pusha
xchg
not
adc
lods
and
inc
outs
pusha
stos
sub
fcmovbe
push
push
daa
or
sub
je
pop
adc
fsubr
mov
xor
clc
xor
ins
inc
adc
sbb
push
fiadd
fs
push
outs
inc
mov
rcr
dec
(bad)
push
outs
shl
call
xor
jo
pushf
pop
inc
sahf
outs
add
push
dec
push
push
pop
or
mov
mov
or
add
sbb
sbb
dec
inc
jle
mov
push
inc
inc
lods
xor
inc
ins
int3
cmps
pop
add
pop
scas
fisub
bound
int3
aaa
rol
push
inc
push
adc
push
inc
pushf
xor
adc
fsubr
int3
mov
push
jp
add
add
push
mov
bound
or
mov
jp
inc
fdivr
rcr
push
dec
js
xor
sbb
sub
outs
push
stos
int
push
sub
mov
pop
push
ins
push
cmp
test
mov
push
dec
push
fisub
hlt
or
push
dec
inc
xchg
popa
sub
inc
pop
(bad)
imul
ret
mov
xchg
cmps
mov
inc
jp
mov
push
lods
ret
aam
xor
and
lods
push
adc
dec
adc
or
int3
jne
pop
inc
jns
sbb
nop
or
je
sub
inc
push
jno
adc
xchg
push
xchg
in
xor
sub
xchg
call
out
push
add
jp
inc
add
mov
ins
add
cs
fs
push
call
xchg
call
gs
xchg
cli
push
test
ins
jae
les
dec
push
fidiv
push
push
test
imul
cmps
xor
mov
test
xor
movs
out
pop
mul
and
outs
xchg
dec
pop
or
push
adc
inc
xchg
adc
test
es
hlt
and
inc
arpl
push
cmps
cmps
or
ins
push
adc
call
or
cmp
jp
fmul
and
fisubr
mov
nop
pusha
pop
mov
sub
fs
push
push
sbb
xchg
js
movs
bound
push
inc
adc
xor
retf
add
ss
je
or
cmp
(bad)
xor
xor
xchg
mov
rcl
jp
leavew
gs
and
inc
ins
dec
or
(bad)
dec
enter
dec
inc
xor
out
and
inc
adc
pop
scas
jp
mov
rol
ins
int3
dec
adc
jp
and
ja
mov
add
fadd
push
jno
or
xor
pop
xor
add
adc
fs
jno
fadd
test
push
dec
adc
push
inc
and
popa
sbb
mov
popa
aaa
popa
lock
adc
outs
(bad)
push
inc
ss
inc
inc
test
shl
cld
xor
add
and
xor
push
ins
push
push
pop
push
and
pusha
xchg
movs
jb
xchg
ret
xor
out
sub
add
mov
push
sub
xchg
push
push
nop
call
inc
mov
push
mov
adc
fisubr
pusha
sub
cmp
mov
xor
jbe
jbe
xchg
adc
push
ss
and
jo
xor
add
jmp
and
or
jo
ror
push
dec
mov
int3
jno
sub
push
push
outs
push
or
mov
xchg
add
in
aad
push
push
dec
and
scas
add
xor
push
les
cld
jb
sbb
mov
imul
pop
je
inc
xchg
xor
nop
sbb
jb
sahf
mov
push
xchg
dec
adc
add
jl
ins
add
pop
bound
sbb
inc
ret
fucomi
adc
data16
mov
cmp
sub
xchg
inc
adc
(bad)
dec
dec
push
mov
outs
add
sub
xchg
add
xor
inc
sahf
dec
push
outs
pop
test
mov
test
inc
mov
add
daa
movs
xor
pop
dec
push
push
inc
or
pop
inc
pop
inc
or
xor
es
and
inc
jb
lock
or
cs
movs
push
enter
mov
pop
jmp
adc
push
jp
ds
retf
jp
inc
mov
and
pop
and
push
add
adc
movs
push
add
xor
xor
xor
aam
or
out
add
bound
mov
call
jne
sbb
not
add
push
push
rol
xchg
jo
inc
stos
sub
adc
outs
js
movs
nop
adc
push
push
xor
push
mov
cs
mov
adc
push
mov
xor
push
loopne
and
push
stos
dec
xor
push
mov
push
outs
ret
test
bound
adc
jo
inc
or
imul
add
push
mov
jae
pop
cmps
push
mov
or
mov
cld
xor
ss
push
sbb
rcl
push
add
popa
add
add
xchg
jbe
jp
jle
push
mov
mov
add
push
or
adc
dec
enter
push
adc
push
push
pop
test
cld
jb
jo
xchg
jno
inc
ror
sub
add
ss
inc
and
sub
and
xor
inc
and
xchg
arpl
in
mov
add
pop
jmp
into
pushf
pop
or
cs
and
out
in
dec
push
and
outs
jbe
test
pop
dec
inc
call
inc
push
sub
sub
push
ins
push
and
je
push
bound
addr16
bound
dec
aaa
jo
inc
dec
xor
mov
movs
push
fs
adc
mov
pop
push
xchg
xchg
adc
fcomp
test
xor
and
mov
add
call
xor
push
jo
xor
adc
fisubr
lea
xor
sbb
push
dec
dec
push
sub
pop
mov
push
dec
ret
push
mov
push
and
fidiv
sub
ret
or
inc
or
push
add
inc
enter
mov
sub
ss
pop
data16
lods
pop
data16
push
push
add
inc
xchg
dec
and
ins
dec
adc
add
and
dec
inc
mov
jo
dec
mov
scas
push
arpl
xor
movs
mov
pop
xchg
ja
mov
or
inc
sbb
mov
push
sub
je
mov
sub
adc
add
push
test
gs
inc
retf
mov
mov
mov
push
ds
rcr
xchg
inc
int3
jo
inc
aaa
jmp
adc
push
dec
int3
arpl
sbb
jbe
cli
test
call
push
ror
and
call
push
push
inc
js
push
inc
mov
mov
inc
ins
xor
aaa
or
pusha
dec
aam
sbb
popa
ss
xor
sub
popa
xor
and
mov
xchg
popa
dec
push
nop
push
mov
or
outs
jl
adc
inc
push
push
xchg
cwde
sbb
sub
push
popa
sbb
push
xor
inc
mov
adc
aaa
inc
add
arpl
dec
inc
fs
mov
mov
push
pop
push
jp
or
sub
scas
es
popa
je
or
mov
sub
aam
or
pop
mov
hlt
dec
push
push
inc
or
cmp
or
xchg
les
sub
gs
aam
sbb
pusha
stos
and
inc
adc
sbb
add
mov
mov
mov
inc
ins
dec
push
cdq
shl
je
pop
data16
inc
inc
sub
dec
dec
or
mov
dec
sbb
fsubr
(bad)
shl
add
push
cmp
adc
push
repnz
xor
test
adc
dec
mov
inc
ins
push
adc
nop
push
mov
fwait
push
and
inc
inc
mov
dec
push
std
ror
jb
inc
loopne
cmp
mov
mov
lea
dec
jl
push
movs
push
add
bnd
loopne
push
aam
xchg
ret
shr
mov
rcl
and
xor
dec
push
mov
pop
fsubr
mov
add
fs
test
push
cwde
push
inc
fsubr
fsubr
ja
adc
xchg
sbb
test
ins
or
inc
mov
ss
dec
clc
test
rcl
jp
pop
or
(bad)
xor
jo
push
ins
xchg
add
mov
xor
xor
sbb
div
int3
jne
imul
loop
adc
adc
adc
jae
add
fidivr
out
dec
sub
mov
push
les
push
fmul
shr
jae
pushf
xor
inc
lods
xor
je
call
mov
add
cmp
push
jb
push
es
loope
rcl
push
add
ret
dec
ret
mov
(bad)
push
dec
add
push
or
lods
mov
ss
mov
test
add
(bad)
push
sub
dec
cld
push
cmps
add
dec
mov
cmp
dec
data16
jp
sbb
xor
push
push
popa
dec
sub
sbb
js
or
mov
mov
(bad)
shl
sub
sbb
pop
push
pop
inc
cmp
fs
inc
ficom
mov
push
shr
mov
inc
and
sub
pop
or
jb
sbb
cmp
xchg
cmps
xor
retf
test
les
cmp
xor
imul
and
push
lods
push
xchg
push
fimul
lods
scas
xor
mov
data16
aaa
loopne
lods
xchg
xor
in
mov
sbb
mov
data16
add
outs
xchg
lods
popa
push
(bad)
push
mov
loope
mov
dec
push
jo
pop
aam
cwde
call
mov
sub
xor
xor
popa
stos
mov
push
add
and
push
or
or
xor
xor
push
in
shl
xor
outs
inc
bound
jbe
push
addr16
push
push
sub
imul
add
dec
test
es
dec
inc
lods
xor
sbb
add
inc
mov
aas
inc
arpl
push
outs
xor
cs
mov
cli
rol
(bad)
arpl
inc
jno
nop
stos
inc
loopne
test
jne
xor
mov
neg
mov
ret
inc
sbb
mov
jmp
push
xor
xor
fs
mov
nop
dec
mov
sbb
inc
adc
push
ss
sub
sub
push
addr16
add
jb
xchg
dec
je
fcomp
pop
or
rol
pop
push
adc
pop
stos
test
dec
ficom
imul
jle
mov
dec
lods
push
xchg
(bad)
sahf
imul
imul
push
jbe
test
adc
or
xor
push
pop
push
sub
sbb
dec
in
outs
xor
cmps
jne
dec
cmp
ret
or
sbb
xor
sub
push
xchg
fdivr
xchg
xchg
test
pop
inc
xchg
or
dec
sar
inc
pusha
inc
xor
dec
mov
xor
dec
adc
dec
pop
pop
push
xor
dec
dec
sbb
inc
lods
mov
adc
sbb
cmp
pop
push
and
dec
pop
jo
cmp
sub
and
fwait
adc
cs
add
adc
push
xor
pop
inc
inc
add
es
push
fisub
aaa
add
adc
nop
es
sbb
xchg
dec
loop
push
inc
push
inc
es
enter
add
mov
sub
gs
add
ja
dec
jb
dec
popa
push
addr16
xor
xor
sbb
add
push
(bad)
xor
dec
push
dec
inc
enter
sbb
dec
push
or
ror
add
inc
test
ins
xor
mov
cwde
add
cwde
pop
adc
and
or
xor
push
loopne
or
cmp
mov
jo
mov
dec
jae
or
adc
push
sbb
mov
inc
jl
push
pusha
dec
mov
dec
push
xchg
add
je
push
xor
add
dec
cmp
jbe
pop
xor
mov
xor
aam
nop
fcom
or
sub
ja
xchg
xor
pop
mov
enter
or
add
js
and
xor
cmp
or
push
push
jns
or
les
cmps
and
lock
sbb
dec
add
sub
pop
adc
scas
mov
push
mov
jp
push
sub
add
nop
mov
add
div
ins
mov
cmp
aaa
sub
jae
dec
jo
push
shl
stos
jp
inc
push
or
jne
cdq
add
jo
pop
xchg
inc
mov
test
cmp
sub
bound
pop
stos
push
xor
cmps
push
sub
dec
mov
test
cmp
push
push
bound
call
in
dec
jp
popa
inc
xchg
mov
dec
dec
dec
add
or
jle
and
adc
inc
(bad)
xor
inc
int3
jbe
push
rcl
sbb
shr
jmp
push
push
repnz
mov
and
mov
push
or
adc
retf
cmp
xor
xor
push
adc
sub
and
inc
xor
push
ins
push
(bad)
inc
sbb
pop
mov
cmps
or
cdq
and
and
xchg
out
or
dec
pop
push
stos
dec
add
jp
test
xor
inc
and
dec
mov
inc
dec
push
lock
push
js
test
xor
ja
in
shl
push
pop
push
add
cmp
mov
xor
xchg
mov
mov
mov
cmp
pop
jns
cmps
fsub
les
and
push
dec
popa
sar
mov
icebp
aad
adc
sub
bound
push
and
dec
adc
mov
ret
push
fs
ret
add
outs
jmp
mov
inc
call
cmp
hlt
outs
lods
mov
fdiv
inc
inc
dec
xor
scas
push
xor
push
push
add
call
add
and
xor
sbb
enter
jp
retf
push
sbb
data16
xor
or
inc
inc
nop
or
test
sbb
xor
add
push
jmp
push
xchg
sbb
call
mov
pusha
inc
xchg
or
push
push
arpl
dec
cmp
sub
pusha
inc
hlt
ins
test
add
or
or
shr
mov
mov
ja
jb
inc
lods
fadd
push
mov
inc
push
add
cld
repnz
mov
push
sbb
push
stos
push
xor
fwait
xor
xor
mov
adc
and
jp
sbb
(bad)
and
fiadd
imul
fstp
cmp
sbb
imul
adc
je
sub
mov
es
dec
inc
cmp
xor
sub
inc
dec
rol
sub
ins
add
jb
jo
jo
(bad)
lea
adc
push
inc
jmp
fcom
fdecstp
fdiv
dec
dec
les
xor
sub
pop
or
sub
or
sbb
sub
mov
add
ss
push
je
adc
and
pop
mov
push
xchg
inc
popa
ss
(bad)
pop
push
add
sub
push
xor
mov
inc
aaa
jbe
ret
adc
sub
movs
or
sub
mov
or
sahf
popa
cmp
js
or
jmp
stos
sub
je
mov
lea
arpl
nop
xor
sub
sbb
push
fs
adc
sbb
mov
je
fimul
push
inc
aaa
inc
or
imul
mov
test
aaa
test
je
dec
nop
and
add
xor
popf
dec
test
push
int3
and
sbb
or
inc
or
retf
inc
or
inc
or
or
pop
pop
or
arpl
shl
add
sbb
push
cwde
sbb
enter
jb
xchg
and
adc
and
push
sahf
test
test
push
jp
icebp
int
cld
push
inc
dec
dec
adc
stos
xchg
ds
bound
inc
pusha
test
or
movs
fiadd
popa
ror
outs
inc
and
and
shl
adc
xor
aam
sub
push
xor
shl
or
jbe
and
cmp
mov
push
push
mov
ds
jl
mov
xor
jecxz
add
pop
ins
push
ins
push
mov
add
imul
add
mov
adc
mov
or
or
in
mov
sub
pop
dec
test
test
push
jbe
push
and
xor
sub
jle
or
push
adc
add
push
ret
add
retf
dec
cmp
inc
sbb
push
and
inc
xchg
mov
and
or
xor
pop
dec
mov
dec
imul
repnz
push
add
adc
cmp
nop
retf
pop
push
and
out
inc
adc
cmp
add
mov
xor
inc
xchg
call
imul
push
sub
outs
dec
jbe
xor
mov
sbb
pop
pop
or
test
fs
loopne
xchg
push
and
mov
push
xor
mov
push
cwde
stos
ss
adc
inc
jb
cmps
fdiv
xor
xor
aam
je
cmp
popa
or
adc
outs
dec
dec
cmp
push
ss
add
pop
js
and
test
dec
pop
scas
xchg
and
push
ins
ficom
fld
dec
int3
or
xor
sbb
sbb
add
mov
ss
or
mov
dec
mov
push
arpl
movs
cmc
sub
sub
sahf
add
jns
xchg
xchg
and
and
add
push
push
add
pop
add
outs
outs
cli
popa
add
sbb
jle
and
add
and
add
inc
rcl
ret
and
push
add
jne
cmp
and
adc
add
(bad)
lock
xchg
movs
adc
push
mov
arpl
jns
arpl
cdq
dec
mov
mov
sbb
repnz
imul
push
mov
sub
rcr
inc
bound
sar
call
ins
popa
inc
and
out
movs
and
gs
ret
inc
in
pop
popa
callw
xor
sub
and
fsub
xchg
pop
xchg
and
sub
or
or
push
and
fsubr
bound
retf
and
dec
adc
into
inc
ja
stos
lea
fs
or
cmps
aaa
cs
fmul
add
sub
jb
xchg
mov
movs
or
les
fiadd
sub
cld
dec
mov
mov
or
inc
retf
movs
xor
sbb
pusha
mov
enter
mov
push
inc
ins
add
bound
pusha
loopne
push
push
lock
mov
inc
inc
addr16
rol
and
or
sub
jmp
add
inc
xor
adc
push
inc
movs
data16
ret
adc
push
movs
data16
adc
es
push
add
or
or
push
pop
push
dec
jle
outs
fld
push
repnz
jbe
outs
mov
and
and
sbb
js
push
es
jo
fs
rol
add
ds
ss
mov
aam
add
(bad)
inc
pop
inc
fidiv
inc
popa
xor
jb
cli
call
stos
ins
test
push
ss
popa
adc
int3
add
and
add
dec
js
loop
mov
xchg
fisubr
xor
inc
mov
adc
(bad)
ss
adc
inc
adc
sub
sub
inc
loopne
sub
push
or
jmp
dec
inc
push
mov
or
push
pop
push
sbb
dec
push
sub
mov
sbb
push
mov
call
and
imul
xor
push
mov
mov
test
mov
inc
inc
outs
clc
dec
cmp
loopne
je
push
pop
ins
retf
scas
jo
sbb
ss
bound
cli
add
int3
push
jns
sbb
push
ins
loop
cdq
aam
mov
add
stos
xor
or
cs
call
xchg
sub
pop
xor
sbb
ret
cmp
dec
pop
push
inc
push
stos
imul
fild
sbb
pop
inc
push
and
cmp
fsub
imul
push
dec
pop
push
or
pop
es
xchg
add
push
add
popa
mov
xchg
shr
dec
pop
sbb
xchg
push
shr
sub
mov
pop
dec
ins
mov
test
add
sbb
adc
add
addr16
clc
clc
push
inc
xlat
sub
inc
xchg
push
loope
jo
scas
dec
jp
and
sub
je
in
es
call
add
into
adc
lods
add
bound
push
mov
data16
mov
adc
dec
lds
repnz
js
dec
inc
inc
inc
dec
xchg
push
adc
outs
test
push
or
data16
jbe
dec
adc
outs
add
ins
outs
mov
cs
jmp
lock
xor
mov
clc
popa
ror
and
rol
ins
inc
mov
in
push
cmps
jae
xchg
call
push
adc
adc
jp
mov
mov
xor
dec
or
xchg
push
mov
mov
push
jl
add
pusha
pop
xor
gs
adc
or
pop
add
test
jo
dec
or
sub
push
gs
mov
inc
retf
sub
inc
jbe
xchg
pop
aaa
mov
aam
aad
nop
adc
gs
cmp
inc
mov
dec
cmp
xor
stos
gs
or
enter
sub
dec
inc
movs
int3
(bad)
cmp
push
jb
inc
xor
inc
gs
fs
inc
xchg
fcom
mov
and
outs
jmp
dec
retfw
add
(bad)
call
push
imul
push
push
adc
inc
inc
mov
popa
and
add
je
or
sub
sahf
push
imul
push
popa
add
inc
jo
inc
enter
mov
aad
je
cmp
xchg
sbb
xchg
inc
xchg
retf
test
xor
xor
xor
fcomp
adc
mov
jo
and
push
push
in
shl
cld
sahf
dec
and
and
pop
(bad)
sub
ds
(bad)
retf
dec
test
sub
mov
stos
xor
test
push
and
ins
movs
or
sbb
gs
add
adc
imul
or
push
cmp
ins
adc
ss
xor
push
cmps
fwait
pop
pusha
lods
inc
xor
mov
add
push
xor
jb
or
or
push
pop
mov
xor
xor
push
shr
lock
xchg
fadd
inc
push
push
xchg
sbb
adc
add
dec
inc
ds
push
add
inc
mov
push
push
popf
xchg
pop
lods
bound
data16
data16
enter
les
inc
inc
inc
in
ds
inc
scas
add
dec
push
push
imul
and
rol
fist
or
push
or
outs
sbb
ror
push
ins
cmp
adc
loop
jb
xchg
ret
inc
jbe
pop
mov
xchg
sahf
jae
js
push
sub
test
push
hlt
inc
aaa
add
jmp
test
sub
push
arpl
mov
push
dec
(bad)
pop
or
sub
add
inc
fiadd
je
push
daa
ret
mov
retf
dec
adc
mov
xchg
outs
mov
call
es
sub
xor
ficomp
xor
imul
jo
jb
mov
pop
popa
jbe
push
shr
dec
or
test
nop
idiv
dec
cmp
add
pushf
push
mov
aaa
popa
mov
jno
ins
dec
sub
adc
imul
call
inc
mov
push
add
jo
clc
xchg
add
xchg
add
jbe
adc
push
pop
fistp
inc
gs
jno
mov
xor
rcl
adc
out
inc
push
and
div
inc
cmp
xchg
jp
push
sub
add
sub
inc
add
cmp
pusha
sub
or
fmul
and
shr
push
and
push
sub
stos
test
fs
push
xchg
sub
arpl
mov
add
xor
mov
cld
mov
sub
xor
jne
mov
or
ror
mov
push
dec
aam
adc
jle
inc
adc
push
sbb
dec
stos
mov
push
xchg
aam
push
add
rol
les
xchg
xchg
and
xor
jno
jae
cmps
int
or
push
and
adc
loopne
jo
popa
imul
mov
cwde
xor
je
xor
mov
or
cwde
xchg
imul
gs
je
xor
dec
push
xor
pop
push
adc
jp
dec
int3
mov
push
jb
int3
leave
push
cmp
xor
push
inc
inc
xor
rol
div
xor
sbb
mov
xor
clc
les
dec
sar
xchg
inc
aad
push
add
shl
stos
loope
inc
sbb
cmp
outs
lods
sbb
es
sub
outs
dec
xchg
or
fisubr
mov
aam
sub
sub
add
fdivr
inc
push
mov
xor
test
or
pusha
dec
rcl
xchg
xor
mov
retf
and
add
push
fs
cmp
inc
mov
aaa
cmp
cmp
push
push
mov
jbe
dec
xor
sub
cmps
outs
inc
ret
gs
cli
(bad)
push
sbb
add
jp
enter
add
jbe
or
pop
adc
loope
add
xchg
xchg
pop
sbb
test
ins
add
shl
lock
bound
push
push
shr
mov
fsub
add
ret
sbb
data16
sbb
mov
bound
mov
retf
jo
xor
inc
inc
mov
push
dec
dec
scas
outs
mov
add
pop
dec
shl
pop
int3
xor
popa
dec
hlt
dec
dec
inc
mov
sub
xchg
mov
cmp
xchg
xor
inc
enter
dec
and
or
mov
mov
inc
popa
ret
popa
loopne
sub
jmp
jbe
adc
movs
and
mov
test
cmps
mov
mov
add
add
ss
jb
push
inc
ret
inc
add
ret
push
ret
fcom
dec
adc
push
add
sub
inc
adc
xchg
push
or
mov
adc
xor
shl
mov
and
dec
ins
dec
mov
jmp
ss
xchg
imul
add
sbb
mov
and
jbe
xchg
or
push
add
inc
or
cmp
sbb
and
and
ins
adc
jbe
xor
sub
movs
loop
jl
add
jbe
cmp
add
cmps
pushf
mov
dec
xchg
jo
push
cmps
adc
stos
adc
outs
mov
ins
sub
mov
hlt
(bad)
push
push
push
in
pop
ins
pop
mov
push
push
cmps
data16
ss
nop
popa
push
cmp
cs
push
and
jbe
jbe
sbb
push
xor
push
xor
add
test
les
or
adc
imul
nop
adc
jl
and
mov
and
and
arpl
test
mov
push
bound
jl
and
mov
xchg
pop
add
jbe
aam
xchg
loopne
outs
adc
ins
test
jp
test
add
sub
js
data16
mov
gs
scas
inc
dec
ins
add
sbb
inc
ss
add
enter
inc
xchg
enter
xor
retf
shr
imul
sub
dec
push
ins
inc
xor
sub
jns
dec
cmps
mov
push
sbb
jno
fiadd
xor
lods
outs
outs
jb
xor
mov
mov
xchg
imul
push
ins
ret
and
and
add
and
or
inc
add
imul
bound
in
dec
dec
xor
xchg
int3
ins
inc
adc
adc
call
sub
jno
es
nop
ret
push
and
dec
sub
outs
push
adc
dec
jb
sbb
xor
fimul
sub
mov
outs
ja
loopne
push
inc
div
js
xor
sub
xchg
add
and
in
cmp
sbb
cmp
push
or
and
pop
hlt
sub
push
mov
pusha
or
outs
mov
push
or
jl
add
sub
movs
pusha
push
in
pop
mov
cmp
lods
adc
not
dec
fcom
ins
xchg
add
dec
push
inc
add
mov
add
jbe
retf
xchg
xchg
mov
clc
push
xchg
fst
adc
test
outs
or
push
je
push
arpl
pushf
sbb
push
push
dec
sbb
inc
or
add
sbb
hlt
push
or
or
(bad)
in
mov
jp
bound
push
mov
jo
cmp
arpl
and
mov
mov
adc
jb
(bad)
push
inc
rol
(bad)
push
jbe
inc
inc
loope
inc
ins
dec
add
hlt
pop
push
fisttp
or
into
inc
bound
inc
ret
pusha
pop
nop
inc
popa
xchg
stos
dec
mov
adc
outs
cmp
sub
rcl
je
inc
inc
jp
push
pop
push
adc
data16
gs
outs
cmp
aad
ret
fadd
push
mov
push
sub
add
nop
movs
cld
xchg
mov
pusha
dec
js
add
pusha
jl
push
aaa
sbb
mov
pop
sbb
nop
arpl
es
push
push
or
push
popa
dec
mov
xchg
jno
add
retf
inc
or
jo
xor
fadd
retf
sbb
mov
push
inc
jbe
loopne
ss
test
xchg
ror
cmps
aad
mov
or
lods
xor
pusha
ins
scas
addr16
inc
adc
dec
push
ins
fnsave
cli
xor
jmp
dec
xor
jbe
xchg
push
and
lock
cwde
jo
dec
jb
dec
gs
sbb
jmp
sbb
sub
pop
jle
push
cmp
test
inc
and
sub
pop
push
xchg
popa
inc
xor
dec
jmpw
mov
scas
inc
and
jne
inc
sub
mov
pusha
leave
mov
jne
enter
add
inc
lods
je
cmp
dec
shl
or
inc
sub
adc
test
sub
inc
adc
out
fs
push
push
pop
or
popa
sbb
xor
ins
dec
cli
popa
ret
sbb
mov
dec
sub
lods
outs
nop
jns
pop
js
inc
cwde
lods
inc
add
jb
xor
adc
pop
stos
cli
dec
xchg
dec
outs
pop
push
pop
frstor
push
adc
out
ret
push
push
xor
ja
ret
push
mov
ins
lds
inc
shl
loope
push
je
ins
dec
push
imul
inc
push
adc
aam
dec
inc
test
adc
test
dec
inc
out
xchg
inc
adc
and
mov
mov
sub
add
inc
push
mov
mov
jo
fadd
push
cmp
and
inc
rcr
enter
pushf
js
int
mov
push
dec
push
sbb
in
pop
dec
and
call
adc
mov
xchg
add
shr
jecxz
dec
fs
adc
fwait
push
cli
and
jo
inc
mov
fidiv
push
inc
inc
fs
clc
dec
test
inc
or
mov
test
xor
xchg
push
jp
inc
iret
xor
aaa
jp
rol
jne
push
retf
adc
les
pop
mov
pop
cmp
or
inc
xchg
lock
inc
inc
sub
es
loopne
mov
ins
jns
and
and
into
popa
sub
push
inc
xor
sub
dec
enter
ins
je
dec
or
xchg
jbe
mov
add
mov
add
inc
bound
or
or
push
in
sub
in
inc
add
sbb
inc
inc
jbe
mov
push
pusha
cmp
mov
adc
mov
dec
sbb
hlt
inc
add
adc
test
push
retf
or
outs
sbb
xchg
and
push
inc
mov
push
je
fisub
adc
or
push
fisub
imul
div
test
push
inc
hlt
pop
retf
and
xchg
push
pop
aaa
ins
test
lock
loopne
imul
push
dec
mov
pop
je
cdq
dec
cmp
mov
adc
push
mov
jo
push
repnz
pusha
nop
mov
push
sub
dec
mov
add
inc
ins
aaa
and
sahf
inc
xor
mov
and
jp
dec
js
rol
cld
sbb
aad
pushf
test
out
add
int3
es
inc
js
outs
jbe
jle
sub
sub
sbb
add
arpl
sub
inc
mov
stos
add
adc
mov
loope
push
xchg
sbb
xor
add
dec
mov
add
or
loope
pusha
xor
push
ins
pop
push
je
ins
gs
stos
xchg
pusha
inc
jbe
mov
inc
aaa
add
fsubr
jbe
mov
mov
and
retf
sub
mov
lock
mov
sub
push
xor
dec
push
dec
add
cmp
xchg
and
mov
dec
fs
add
push
and
inc
es
jb
retf
push
sub
popa
and
push
(bad)
enter
cs
add
gs
mov
adc
cmp
jb
xor
mov
dec
mov
inc
dec
in
cmp
(bad)
and
ins
sbb
mov
xor
inc
sbb
pop
jae
in
jno
sub
je
sub
shl
xor
jno
adc
adc
sbb
lods
push
jb
sbb
ret
pushf
mov
outs
jo
hlt
mov
cmp
mov
jb
push
repnz
sbb
test
or
mov
pop
shr
cmp
push
xchg
mov
add
jp
pusha
rcl
imul
lds
in
cld
outs
dec
nop
rol
call
jne
pop
push
or
mov
bound
(bad)
adc
and
mov
sub
sahf
(bad)
push
bound
outs
push
push
test
rcl
fcomp
pop
push
aaa
rcl
or
sbb
or
mov
push
aam
xor
cmovno
cmp
dec
pop
jb
aaa
(bad)
loope
ins
ss
or
push
js
mov
mov
les
test
(bad)
int3
es
adc
pushf
mov
test
sbb
push
push
(bad)
pop
ds
or
dec
pop
sub
cld
cmp
push
adc
mov
and
dec
xchg
arpl
shl
xor
push
in
pop
scas
ins
mov
and
ret
push
and
ret
rol
ficom
adc
rcl
adc
push
test
push
pop
mov
push
push
rcl
sbb
and
inc
test
adc
push
push
add
inc
dec
cmps
ss
push
or
push
(bad)
xchg
shl
enter
pop
or
jne
cmp
jb
sub
and
test
sahf
fs
ja
xor
dec
push
and
bound
push
or
je
dec
ins
test
(bad)
lods
mov
dec
cdq
enter
fs
push
add
mov
dec
int3
inc
push
sub
push
mov
and
movs
movs
movs
data16
movs
and
cwde
adc
pushf
call
shr
retf
dec
or
test
jne
es
(bad)
and
dec
(bad)
inc
xor
js
push
or
or
pusha
jno
jbe
pop
adc
or
fcom
lods
loopne
inc
sub
inc
retf
loopne
push
and
add
push
or
cmp
inc
mov
es
or
ret
or
ret
cli
jns
retf
data16
push
dec
pushf
xchg
adc
mov
add
adc
push
fs
dec
adc
inc
push
lock
push
inc
jo
add
push
nop
test
sub
bound
stos
nop
push
bound
xchg
rcl
xor
fidiv
sbb
mov
sub
fisubr
sbb
ret
inc
inc
sub
mov
dec
dec
sub
lock
sub
pop
push
jne
sub
outs
inc
shl
fdiv
ins
adc
je
push
gs
fs
cld
ja
xchg
or
add
push
mov
aaa
cwde
cwde
dec
jp
push
and
and
adc
adc
xor
and
clc
push
pushw
les
or
mov
push
or
jb
or
gs
push
add
out
addr16
dec
sbb
dec
pop
sub
and
jp
adc
inc
jb
shr
je
arpl
addr16
scas
sub
or
pop
or
ds
xchg
pop
into
arpl
add
sbb
mov
bound
ret
add
and
mov
inc
jb
jp
push
pop
ins
jne
push
data16
or
lods
push
sbb
or
xor
imul
push
dec
mov
je
push
xor
or
enter
adc
test
xor
inc
xor
loopne
sub
inc
dec
repnz
imul
int3
add
push
call
push
popaw
cmp
jle
xchg
fnstsw
dec
or
fwait
sub
ss
inc
test
fcom
dec
aaa
dec
retf
nop
add
jb
dec
nop
pop
dec
call
cdq
sbb
sbb
dec
sbb
add
xchg
or
dec
not
popa
push
mov
cmp
movs
mov
fs
push
inc
push
push
mov
add
sbb
adc
jge
clc
xor
push
cmp
mov
pop
push
inc
cmp
sub
loop
imul
mov
adc
inc
mov
outs
cli
xchg
into
sub
add
bound
cmps
mov
cmps
data16
inc
imul
fidivr
xor
data16
xchg
ins
inc
addr16
lods
sub
shr
dec
popa
push
sbb
mov
inc
cs
add
lar
jle
push
jo
rcl
clc
xor
mov
inc
shl
call
mov
mov
push
pop
and
mov
ss
test
sbb
dec
add
or
nop
ins
cmps
sub
inc
or
ror
dec
dec
add
add
inc
push
movs
enter
and
jo
and
je
mov
push
inc
lock
jne
push
js
pusha
add
dec
sahf
inc
xor
loopne
inc
aad
cmp
idiv
(bad)
shl
popa
mov
bound
and
mov
mov
bound
push
outs
rcl
xchg
mov
into
jb
sbb
sbb
push
dec
(bad)
or
dec
shl
push
mov
and
pop
dec
dec
xor
cld
lods
push
xor
inc
jo
and
sub
xor
ret
sub
in
ror
fadd
int3
sub
mov
inc
or
je
mov
fadd
xor
push
jbe
fisttp
pusha
and
ins
dec
mov
and
jp
popa
mov
dec
pop
jo
add
xchg
shl
sub
xchg
fsub
inc
sbb
xchg
inc
push
movs
jbe
mov
cmp
mov
outs
push
outs
loop
sbb
cs
mov
mov
ins
cmps
jo
ss
es
push
into
clc
and
dec
aam
push
fwait
sub
ss
dec
aam
rcl
xchg
or
pusha
popf
test
ss
or
pop
rol
jns
ins
push
sbb
inc
xor
repnz
mov
movs
dec
inc
pop
cdq
cwde
xor
push
xor
pusha
add
ins
push
and
sahf
sub
fdiv
dec
fsub
mov
js
or
cmp
js
adc
inc
xor
gs
inc
mov
retf
imul
sub
jbe
xor
dec
inc
or
xchg
jle
push
cmp
sub
lods
ds
push
stos
int3
nop
popa
dec
aaa
les
sub
sbb
push
xchg
sbb
jle
sub
mov
ret
pop
mov
or
retf
mov
outs
cmp
es
and
adc
and
push
add
mov
int3
pop
add
inc
int3
loopne
and
lods
ins
outs
push
ja
nop
test
cmp
fiadd
and
pop
adc
xchg
mov
dec
ror
pop
pushf
pushf
inc
sar
sub
inc
cwde
outs
loopne
and
add
aam
je
data16
pop
or
(bad)
(bad)
and
not
leave
or
sbb
pop
mov
xor
jo
push
sbb
adc
ror
repnz
retf
pusha
sub
clc
pop
inc
push
push
shl
push
ins
retf
movs
or
xor
ins
push
xor
jo
and
add
js
dec
movs
test
jno
jp
jo
jp
pop
inc
je
mov
mov
imul
or
test
or
cdq
and
jo
clc
inc
push
xchg
call
sub
push
xchg
xor
or
js
push
or
mov
sub
dec
sbb
or
dec
xchg
push
mov
(bad)
xor
and
test
adc
outs
push
or
push
imul
outs
inc
and
xchg
xchg
les
and
push
aam
jle
sbb
data16
inc
add
sub
push
or
xor
and
inc
popa
or
mov
aaa
ss
stos
ret
jp
xor
outs
js
movs
push
adc
and
jo
dec
shl
fsubr
mov
push
adc
push
sbb
sub
lods
xor
cs
dec
jbe
sub
adc
add
bound
adc
mov
lods
jne
inc
cmp
sbb
adc
cmp
xchg
add
fdiv
xchg
dec
mov
push
ins
shl
push
cmp
jns
(bad)
adc
inc
inc
ja
je
mov
scas
inc
dec
ins
call
and
rol
fwait
test
push
lods
or
push
add
push
add
xor
imul
outs
adc
mov
(bad)
xchg
jo
sbb
sub
fs
bound
inc
and
gs
jne
imul
and
add
sub
inc
inc
ret
and
and
div
sbb
push
loopne
loop
push
and
mov
mov
hlt
pusha
(bad)
ja
loopne
jo
js
cld
dec
sbb
fisubr
xor
mov
jbe
adc
fs
pusha
push
cmp
adc
inc
and
push
sbb
mov
xchg
leave
add
test
inc
push
adc
dec
jbe
in
movs
pusha
inc
ss
xchg
dec
inc
push
mov
test
mov
(bad)
xor
mov
or
stos
dec
pop
jbe
push
jp
add
add
jmp
pop
ja
loopne
cmps
inc
fisubr
ins
dec
add
fs
add
mov
inc
add
push
mov
test
xchg
enter
pop
ins
fld
or
sub
dec
in
xchg
jo
cmp
push
and
shl
or
adc
aam
xchg
add
test
enter
dec
fcmove
test
mov
mov
es
fmul
in
push
adc
in
and
or
dec
mov
sub
nop
ss
ss
cmp
dec
jae
lock
jmp
add
in
push
pop
dec
nop
int3
add
pop
dec
xchg
je
test
jns
mov
xchg
pop
sub
inc
inc
add
mov
add
pop
mov
and
push
dec
add
retf
pop
fs
sub
inc
outs
push
push
inc
outs
or
xchg
dec
sub
retf
xor
mov
push
mul
sbb
aad
pop
shl
inc
dec
push
jae
jb
mov
and
je
dec
je
adc
cdq
dec
sbb
mov
push
inc
xchg
dec
les
mov
cli
inc
pop
dec
dec
push
push
mov
pop
rcr
ret
call
imul
bound
jo
mov
dec
(bad)
nop
popa
push
push
rcl
or
(bad)
push
xor
es
dec
stos
adc
inc
and
(bad)
jb
jb
mov
sbb
xchg
shr
dec
dec
ins
xchg
stos
retf
test
js
imul
xor
mov
(bad)
push
mov
push
or
cmp
cmp
dec
and
add
mov
fs
les
sahf
pop
inc
jp
imul
ret
dec
pushf
sbb
mov
outs
sbb
pop
xchg
mov
jb
push
xor
inc
and
mov
mov
xor
shr
and
xor
popa
cmps
rol
pop
sub
movs
mov
jbe
add
sub
ror
push
jo
jp
cmp
inc
push
or
out
sub
mov
xchg
ficom
nop
clc
sahf
and
inc
adc
push
lock
xor
cmp
or
push
pop
or
sub
imul
mov
aaa
clc
mov
cmp
inc
inc
ficomp
dec
push
add
sahf
and
in
aam
adc
cwde
dec
(bad)
mov
xor
cmps
test
dec
mov
inc
dec
add
retf
loopne
data16
aam
stos
fcom
and
lods
push
jbe
push
imul
xor
ja
push
or
sbb
xor
xor
loopne
jae
cmps
ror
dec
push
inc
dec
or
sbb
inc
ins
test
aam
cmps
in
icebp
cmp
sub
arpl
dec
push
pop
enter
add
inc
cmp
nop
into
fwait
mov
and
ins
in
dec
push
inc
sub
and
or
mov
jb
sub
cmp
ins
push
ss
push
mov
ja
xor
push
call
mov
cmp
add
mov
retf
out
arpl
es
inc
js
dec
xor
add
xor
push
inc
pop
push
dec
mov
mov
inc
push
cli
sbb
cmp
sbb
push
dec
int
inc
jbe
add
push
sbb
push
xor
push
xor
inc
xchg
shr
mov
xchg
arpl
sub
and
jae
mov
movs
icebp
add
push
inc
fsub
add
push
or
dec
stos
in
fist
or
dec
inc
mov
dec
rol
lock
xchg
push
pop
push
movs
add
sub
retf
inc
mov
stos
cmp
pusha
sbb
dec
cmp
xor
clc
fidiv
popa
(bad)
dec
dec
push
xchg
loop
nop
push
fdiv
sub
add
test
mov
and
dec
push
or
mov
imul
xor
push
je
cld
outs
inc
or
inc
cmp
fs
dec
add
aam
aaa
push
push
mov
xchg
mov
loop
xchg
xor
test
push
pop
dec
dec
xor
and
outs
jb
xchg
push
sub
mov
jp
test
pusha
and
cld
inc
aad
movs
mov
sub
cmps
pop
xor
add
repnz
add
mul
jno
dec
mov
bound
ror
outs
jb
dec
mov
dec
or
test
pusha
in
ror
jne
inc
js
mov
push
add
je
mov
jo
test
push
ja
push
jo
jo
(bad)
jmp
hlt
cmp
mov
pop
ret
jbe
test
dec
fidiv
dec
add
xor
inc
sub
or
xor
ins
xchg
add
sub
add
cmp
cmp
pop
inc
fld
nop
add
(bad)
pop
xor
imul
pop
fs
jne
inc
bound
inc
push
ins
and
ins
inc
sub
dec
add
push
push
or
and
push
push
shl
jbe
inc
cmp
xchg
xor
inc
mov
push
mov
and
inc
js
bound
das
pop
sub
dec
sbb
je
bound
push
inc
push
xor
mov
jbe
inc
jbe
mov
xchg
mov
push
adc
ins
push
cli
push
sub
shl
call
or
add
inc
outs
pop
fadd
ja
enter
stos
sub
outs
dec
test
arpl
push
dec
mov
and
jno
or
add
out
or
cwde
test
or
xor
inc
call
add
xchg
dec
add
or
mov
cwde
xor
ja
dec
(bad)
fld
adc
or
stos
sbb
dec
push
push
xor
jle
adc
add
mov
outs
enter
mov
jae
dec
inc
mov
nop
push
xchg
inc
pop
dec
shl
or
and
push
or
sub
xor
dec
lea
dec
imul
push
test
and
push
test
nop
rol
aam
add
pop
xchg
call
add
int
outs
enter
push
adc
ins
add
fld
sub
dec
push
fidiv
or
pop
xor
xchg
test
adc
ins
adc
push
jne
or
ins
(bad)
sbb
mov
retf
push
in
sub
arpl
or
(bad)
pop
nop
pushf
call
jbe
dec
inc
aad
push
sbb
les
sub
dec
pop
jb
and
xor
push
or
xchg
sub
xchg
mov
push
in
loopne
js
jp
adc
push
retf
mov
xor
loopne
add
dec
xor
or
inc
and
mov
outs
inc
dec
inc
nop
ret
push
mov
pop
xchg
inc
xor
xor
add
lock
push
xor
push
jae
jb
mov
in
xor
and
push
pop
call
hlt
gs
cmp
ins
or
stos
add
xor
sub
add
xor
sub
cmp
push
int3
sbb
test
inc
xor
sbb
xchg
mov
pop
add
xchg
outs
inc
add
xor
adc
jbe
adc
fld
dec
mov
cwde
popa
lea
sub
test
popa
not
add
test
push
jp
pop
push
ins
enter
inc
dec
or
in
add
xor
test
mov
sub
adc
dec
addr16
ss
jp
jo
arpl
dec
push
stos
mov
jl
inc
dec
bound
es
push
dec
data16
xchg
adc
xor
lock
xor
xor
xchg
push
arpl
stos
push
xor
fadd
test
push
inc
sub
cmp
je
jb
sub
xchg
adc
mov
jp
adc
xchg
push
xor
push
enter
add
push
pop
or
inc
hlt
mov
lods
push
adc
arpl
pusha
mov
shl
xor
inc
inc
jb
adc
and
call
adc
inc
inc
add
fsubr
dec
inc
add
dec
rol
and
push
adc
test
adc
and
leave
pusha
or
pusha
xchg
popa
adc
sbb
add
dec
dec
pusha
and
dec
xchg
aam
loopne
loop
fs
and
inc
add
push
inc
outs
dec
in
adc
test
push
les
xchg
inc
push
cdq
clc
or
clc
call
inc
mov
and
jl
bound
jo
cmp
xchg
jp
mov
dec
cmp
dec
test
lods
outs
cmp
(bad)
mov
xor
adc
inc
dec
and
and
ss
push
fwait
aam
nop
push
int
aam
mov
test
dec
push
jno
mov
mov
test
out
outs
dec
popa
push
fidivr
push
add
or
push
cld
xchg
xchg
mov
dec
xchg
adc
and
jne
dec
and
aaa
cmp
mov
jb
dec
xor
in
movs
dec
add
fidivr
bound
add
xor
(bad)
fmul
mov
aam
cwde
imul
inc
stos
rcl
mov
ins
int
int3
ins
sahf
shl
sbb
mov
and
and
push
push
nop
ret
rcr
dec
push
push
push
aad
adc
sub
inc
jp
out
mov
dec
add
ins
retf
retf
and
(bad)
test
xchg
dec
test
arpl
sbb
or
jp
inc
xchg
push
xchg
push
es
inc
cmp
push
jl
cmp
push
sbb
adc
dec
sar
jp
xchg
sub
inc
out
dec
dec
cdq
pop
adc
ins
sbb
cmp
jo
test
les
or
mov
dec
dec
sub
push
inc
mov
dec
push
push
dec
xchg
mov
dec
add
push
lods
outs
inc
pop
and
retf
sub
or
mov
js
push
js
fwait
or
ja
jb
dec
test
push
repnz
ret
inc
xchg
push
or
sbb
push
cmps
movs
adc
dec
push
int3
jno
fsub
mov
jae
mov
push
xchg
fdivr
or
sbb
push
xor
call
scas
dec
popa
ss
adc
popa
fwait
mov
mov
sub
xchg
push
dec
bound
add
or
adc
xor
fiadd
cdq
push
or
push
(bad)
sub
and
scas
dec
test
in
loopne
sub
loopne
add
mov
out
push
add
sub
adc
adc
and
xor
(bad)
inc
pusha
add
jbe
lds
mov
push
fadd
loop
loopne
add
cmp
xor
popa
push
pop
push
popa
jne
adc
dec
and
adc
jbe
inc
imul
xchg
push
test
add
sbb
test
jle
and
dec
mov
fiadd
and
push
aad
and
repnz
cmps
or
xor
xor
xchg
mov
sbb
adc
pop
or
push
adc
xchg
adc
xchg
inc
pop
dec
adc
jns
ret
xlat
mov
xor
jo
xor
and
imul
arpl
adc
xor
pusha
add
sub
fadd
mov
jae
call
imul
cli
sbb
or
sub
jne
sahf
dec
jb
jmp
and
push
push
loopne
inc
sbb
hlt
mov
js
scas
jo
ret
or
adc
mov
dec
jo
push
inc
xor
and
pop
enter
scas
cmps
pop
push
mov
push
and
data16
dec
outs
push
pop
test
inc
and
pop
and
or
adc
loopne
add
adc
adc
xchg
rcl
dec
add
and
push
xchg
inc
adc
mov
xchg
add
dec
je
or
fs
push
loopne
fs
push
jno
call
outs
outs
or
imul
push
pop
cmps
fwait
push
mov
or
enter
pop
cli
jo
mov
xor
dec
sub
cs
push
add
in
ds
xor
inc
add
retf
add
jns
ss
inc
neg
stos
mov
nop
push
xor
js
xchg
add
ss
leave
ret
dec
push
xchg
call
push
mov
pop
ins
dec
fiadd
xor
inc
mov
dec
cmp
inc
adc
ror
mov
adc
inc
sbb
adc
retf
xor
push
sub
push
inc
popf
xchg
cld
cmp
jmp
inc
xor
xor
push
outs
ds
xor
adc
mov
jle
and
or
push
xor
pop
push
adc
and
dec
or
inc
and
popa
dec
xchg
ss
ja
cld
ins
fmul
addr16
sbb
mov
cmp
or
inc
xchg
adc
jo
into
push
sub
jno
mov
pushf
ror
cwde
or
xchg
addr16
movs
adc
test
inc
nop
hlt
ins
je
push
sahf
and
sub
(bad)
push
test
test
mov
test
data16
fidivr
push
and
inc
or
dec
push
mov
add
xchg
gs
lea
in
inc
outs
inc
mov
dec
add
inc
mov
pushf
sar
dec
int
test
fmul
mov
xor
dec
(bad)
retf
adc
push
xchg
push
or
dec
pusha
and
inc
and
fiadd
in
add
dec
bound
fs
sub
inc
and
retf
in
push
adc
mov
mov
and
mov
jl
and
jmp
mov
pusha
cmp
push
test
push
jo
ss
stos
dec
jns
or
leave
xor
sub
add
ins
adc
add
hlt
or
push
cmp
push
or
dec
outs
dec
mov
mov
inc
scas
or
hlt
pop
xchg
cs
and
dec
push
in
mov
fs
pop
jns
scas
mov
mov
jo
scas
xchg
cmp
dec
dec
or
inc
add
fsub
cwde
adc
mov
add
cs
loope
push
push
xchg
push
inc
dec
cdq
push
inc
dec
call
movs
inc
ins
retf
dec
inc
or
(bad)
push
jo
ss
rcl
jp
cmp
dec
movs
jo
fdiv
or
es
push
and
adc
adc
and
aam
jns
xchg
xor
adc
push
es
loopne
and
push
push
leave
xor
out
or
adc
fs
inc
ins
or
in
push
or
sbb
cwde
loop
push
dec
sar
push
stos
lock
add
sub
xchg
push
repnz
pop
mov
mov
dec
mov
scas
stos
pop
ins
int3
xchg
inc
or
test
mov
fisubr
and
or
push
dec
outs
js
loope
or
add
inc
inc
jno
xchg
dec
test
rcr
jo
adc
dec
lods
stos
enter
dec
inc
cli
imul
mov
xchg
add
ds
xchg
test
push
and
push
sbb
cs
sar
or
xchg
cmp
xor
addr16
popa
nop
sub
lods
push
shr
adc
shl
add
lea
xor
jmp
rcr
test
lock
das
or
dec
sbb
inc
sbb
mov
push
mov
inc
pushf
jp
xor
xchg
shl
jl
inc
bound
mov
xor
jo
cmps
cmp
(bad)
data16
jle
dec
jp
push
xchg
push
adc
and
or
fs
call
je
je
mov
mov
and
sbb
adc
xchg
mov
stos
shl
es
test
es
ret
adc
dec
cmps
xchg
fsub
sub
popa
bound
dec
ins
adc
imul
mov
in
push
sub
rol
lds
xor
mov
jne
adc
popa
lock
ja
xor
xchg
push
movs
sbb
push
mov
sbb
push
cld
scas
data16
mov
inc
xchg
adc
adc
inc
inc
adc
push
ror
dec
push
sub
push
data16
add
inc
lods
inc
cmp
add
adc
or
push
mov
aaa
mov
inc
push
pushf
inc
in
add
add
sbb
push
cmp
js
mov
mov
les
and
sar
cmp
loopne
out
and
ins
push
sub
mov
push
adc
inc
adc
dec
(bad)
dec
mov
push
nop
sbb
es
xor
aaa
inc
cmp
outs
enter
or
das
ds
jns
push
push
adc
aas
and
inc
je
xchg
adc
mov
push
mov
push
and
ins
shr
inc
push
jne
dec
adc
(bad)
jo
lock
push
inc
nop
push
retf
adc
jo
jmp
cmp
je
xor
sbb
inc
push
mov
shr
push
xor
arpl
hlt
ins
adc
or
xchg
scas
sbb
daa
mov
sbb
jecxz
ins
xor
mov
add
or
add
je
ret
es
inc
xchg
or
aaa
imul
adc
adc
mov
mov
je
nop
inc
cmps
int3
push
lahf
dec
pusha
cdq
add
ss
xchg
cmp
xor
mov
and
cmp
push
push
push
lods
or
jbe
pop
push
inc
sub
fs
callw
jo
or
xchg
sbb
nop
(bad)
xchg
jo
adc
or
cs
sub
es
aad
pop
cld
push
xor
sahf
jns
jo
add
repnz
dec
xor
add
push
call
(bad)
jbe
jno
ins
xor
push
add
imul
add
enter
test
mov
movs
or
and
xor
pop
aaa
and
ret
inc
xor
rol
inc
aaa
out
push
push
push
add
lea
jae
sub
mov
dec
xor
popa
outs
inc
push
sbb
pop
test
push
ret
dec
out
xor
call
js
dec
cmp
push
cs
and
inc
inc
call
mov
xchg
push
push
jne
push
inc
mov
aaa
movs
in
ins
adc
xor
jl
jae
mov
and
loop
cmps
mov
push
inc
add
mov
jo
or
cmp
fs
cld
inc
xchg
leave
imul
je
sub
inc
jl
sbb
int3
fisub
push
je
add
dec
mov
mov
dec
cdq
push
cmp
data16
xchg
or
mov
ror
adc
scas
mov
shl
nop
dec
ins
jb
data16
or
bound
add
push
inc
imul
dec
or
pop
popa
inc
sub
aad
shr
fs
or
ins
xchg
or
xchg
gs
inc
add
adc
stos
sub
cwde
or
movs
dec
dec
or
push
imul
push
inc
adc
or
mov
xchg
dec
leave
and
pop
adc
xor
inc
jb
call
or
add
pop
ins
lds
repnz
mov
dec
inc
js
push
adc
pop
dec
inc
add
cmps
or
push
fsub
push
pop
mov
inc
or
push
sub
add
mov
retf
add
add
cmp
imul
fdiv
fsubr
push
ds
sub
ins
cwde
xor
push
jns
dec
inc
inc
imul
inc
js
test
mov
gs
jo
imul
out
inc
mov
fist
or
ins
add
push
lea
pop
fs
jo
add
xchg
mov
movs
push
bound
test
and
mov
loop
movs
mov
inc
stos
rcl
cmps
arpl
ud2
push
bound
xchg
cdq
rcl
push
ins
xor
cmp
mov
inc
pop
add
movs
aaa
jne
js
js
popa
adc
push
dec
push
add
lea
arpl
arpl
dec
push
mov
xor
aaa
imul
cmp
ins
test
adc
pop
retf
and
pop
inc
dec
idiv
push
xor
push
push
push
ja
ins
inc
gs
dec
push
lods
test
mov
retf
stos
and
js
inc
inc
sub
sbb
aad
xor
jp
sub
jae
push
inc
inc
jbe
loopne
movs
push
xor
xchg
or
jae
xor
cmc
jo
push
jp
dec
mov
sub
add
jecxz
dec
inc
push
sbb
and
pushf
jmp
dec
adc
rcl
push
adc
add
cwde
retf
jbe
jne
xor
mov
xchg
push
pusha
jl
ror
inc
push
sbb
scas
outs
push
xor
xchg
shl
jb
pop
push
(bad)
in
ret
jo
popa
je
(bad)
sub
aaa
cmp
push
mov
dec
mov
push
pop
les
js
push
movs
push
xchg
test
dec
lea
scas
xor
mov
adc
bound
pop
aam
test
aam
dec
push
push
js
add
jp
cli
call
sbb
or
dec
pop
adc
test
rcl
add
je
pop
sub
lods
mov
dec
sub
in
fiadd
sbb
test
xchg
cmc
test
push
push
lods
inc
pop
cwde
push
ret
adc
xor
addr16
ins
xor
dec
jno
outs
xor
or
jae
push
mov
mov
and
ds
cmp
cmps
inc
mov
push
mov
retf
inc
push
sub
aad
fs
push
or
push
push
(bad)
cmps
push
test
jb
mov
movs
aaa
into
sub
mov
je
add
inc
loopne
add
nop
xor
mov
add
inc
pusha
movs
in
inc
xchg
lea
xor
mov
push
mov
push
jbe
cmp
mov
je
sbb
xchg
sub
push
mov
dec
cmp
nop
push
or
mov
xor
test
adc
mov
push
cmp
ins
add
(bad)
(bad)
cmps
test
cld
jb
sbb
dec
ins
xor
xchg
xor
ret
xor
push
dec
jp
aaa
jl
int3
and
and
stos
xchg
jp
inc
sbb
xchg
pop
fs
push
push
inc
sbb
inc
sbb
push
rol
leave
imul
jp
inc
push
imul
dec
add
jle
dec
adc
dec
adc
dec
out
push
or
loopne
gs
inc
aaa
xchg
sub
dec
stos
xchg
rol
mov
add
mov
cmp
mov
popa
lds
loopne
jo
bound
xor
xchg
inc
pop
retf
push
nop
jbe
cmp
sbb
push
or
aam
pusha
dec
or
jle
adc
cwde
retf
sahf
ins
mov
jae
or
gs
ins
and
add
sub
or
mov
rcl
xchg
aaa
push
or
clc
xor
jmp
test
pop
popa
inc
arpl
dec
or
retf
jae
xor
dec
add
xchg
add
adc
pop
sar
dec
xor
mov
sbb
xchg
jo
outs
inc
ins
inc
popa
js
xchg
sbb
sbb
or
xchg
push
add
and
arpl
sub
xchg
dec
push
cmp
mov
dec
push
sbb
adc
adc
and
dec
nop
xor
xchg
mov
xor
adc
repnz
scas
add
loopne
imul
outs
inc
xor
jo
push
mov
jb
dec
push
fidiv
mov
inc
xchg
sbb
out
mov
not
nop
or
call
push
rol
mov
nop
inc
push
addr16
or
sub
imul
inc
push
mov
or
sahf
retf
aam
dec
pop
rcl
add
cs
retf
mov
xor
lods
(bad)
mov
sbb
mov
out
dec
ja
stos
push
inc
test
enter
push
or
bound
adc
add
js
rcl
dec
dec
xor
mov
inc
popa
fcomp
dec
pop
es
sbb
adc
sub
test
jb
in
mov
mov
popa
dec
inc
or
aam
add
mov
push
mov
dec
mov
push
xor
add
lea
or
inc
dec
leave
pop
ret
call
out
ja
sub
out
mov
sbb
mov
test
xor
cmp
adc
cmp
push
push
push
(bad)
push
loope
inc
push
into
in
rol
call
xchg
pusha
fiadd
xchg
xchg
mov
and
mov
inc
push
push
pop
test
ins
fs
mov
or
dec
stos
add
outs
cmps
mov
push
ins
ins
arpl
je
add
or
retf
sub
push
dec
push
dec
inc
mov
test
dec
dec
dec
jae
cwde
and
fisub
(bad)
add
jo
xor
inc
ret
inc
int3
mov
xor
test
jb
outs
jne
adc
xor
jo
adc
push
push
inc
xchg
dec
rcl
sub
cmps
jns
xchg
or
es
aam
add
sub
sub
sub
push
mov
dec
dec
sbb
mov
dec
or
and
push
or
(bad)
xchg
add
ret
mov
mov
lock
mov
jp
sbb
adc
les
and
and
jb
sub
jmp
repnz
addr16
add
popa
jne
enter
ins
push
add
(bad)
pop
adc
dec
jae
inc
imul
add
push
sbb
lea
jle
jbe
pop
adc
imul
inc
push
sbb
stos
mov
mov
push
dec
sub
inc
(bad)
jns
cdq
add
mov
in
sub
push
test
push
push
js
mov
xor
push
mov
push
popa
sbb
or
loop
shl
ret
adc
jo
sbb
sahf
inc
bound
sub
nop
gs
call
push
xor
cwde
inc
push
sahf
xor
cdq
sub
jo
jle
lods
jae
sub
sahf
xchg
loopne
and
and
js
cmps
push
cmp
push
jae
(bad)
hlt
loope
add
ins
xor
gs
add
fadd
shl
or
mov
dec
cmp
inc
sbb
adc
dec
push
dec
rol
movs
or
push
fiadd
and
push
or
les
cwde
mov
sbb
xchg
aad
adc
cmps
js
ins
dec
sub
adc
cmp
in
fld
xor
inc
pop
ss
push
sar
push
pop
jp
and
lods
xor
pushf
xchg
test
or
test
dec
xchg
push
push
cdq
add
add
jmp
fsubr
add
jns
sub
or
movs
gs
test
mov
mov
or
and
sbb
dec
and
js
bound
dec
inc
pusha
nop
nop
cmp
rcr
xor
dec
xor
push
push
in
xor
mov
mov
cmps
add
mov
cmps
call
aas
pop
je
push
inc
pop
push
mov
inc
es
dec
scas
fld
push
lods
jns
arpl
mov
pop
pusha
test
dec
bound
stos
dec
push
or
ret
test
popa
cdq
adc
push
inc
gs
and
movs
xor
mov
xor
enter
xor
jb
(bad)
mov
push
push
enter
sub
scas
add
ss
dec
ins
adc
ss
rcl
gs
add
push
test
push
ret
and
sub
adc
sub
jbe
sub
test
xchg
mov
outs
adc
lods
fs
fadd
mov
push
ins
jne
xor
fsub
push
mov
or
and
scas
dec
push
add
ret
scas
imul
retf
jmp
mov
ins
aaa
push
push
lea
xor
inc
add
jo
sbb
(bad)
cmp
inc
and
test
pop
or
dec
inc
sar
sbb
test
adc
sub
or
add
cmp
dec
push
push
sub
cs
jne
xor
add
sub
ss
hlt
xor
je
ins
xor
push
retf
xchg
scas
xor
in
sub
xchg
xchg
pop
pusha
loop
cwde
or
pop
sub
ret
loop
ss
inc
xor
ja
(bad)
jns
cli
ins
inc
push
mov
inc
or
sub
inc
dec
push
inc
dec
jo
xor
add
mov
cmp
nop
or
and
push
ret
test
dec
or
ficom
mov
and
popf
adc
sub
in
ss
mov
fadd
sbb
dec
lods
dec
push
dec
or
xor
xchg
jne
jo
or
or
push
movs
and
pusha
cmp
xor
or
sbb
fs
xchg
shl
add
hlt
ret
adc
gs
jns
dec
pop
inc
popf
sub
and
fcomp
lods
retf
or
out
out
push
aam
test
nop
call
pop
pop
adc
or
mov
fsub
cmp
cdq
das
test
data16
pusha
dec
fs
sbb
push
ja
rol
push
mov
cdq
jb
dec
arpl
add
push
imul
ret
outs
ins
dec
inc
lods
test
dec
mov
add
jno
and
stos
inc
sub
pusha
mov
push
adc
pop
jb
push
xchg
mov
and
jp
xchg
add
jo
sub
popa
add
jbe
or
xor
push
mov
fcom
dec
xor
add
jo
mov
mov
or
lds
mov
into
adc
scas
dec
adc
xor
dec
xor
les
xor
sub
js
xor
test
nop
pop
or
push
mov
shr
add
and
or
dec
cmp
inc
push
mov
and
add
add
sub
adc
pop
sbb
push
les
push
imul
xchg
pop
mov
add
push
dec
xor
push
les
cmp
dec
sbb
add
mov
call
xor
cmp
fcom
ror
adc
fs
and
call
inc
aaa
mov
add
push
pop
push
ret
call
test
js
cs
add
inc
mov
dec
mov
dec
cwde
les
jb
adc
test
sbb
pusha
test
inc
dec
add
sub
leave
and
jns
imul
inc
rol
(bad)
and
add
mov
pop
outs
data16
inc
xor
nop
test
adc
jbe
mov
and
adc
push
dec
add
nop
push
xor
dec
sub
shl
and
xchg
arpl
les
imul
add
cdq
xor
fadd
push
jp
dec
test
es
pop
xor
and
sbb
or
add
add
mov
and
cs
rol
outs
inc
cmp
cmp
and
push
push
cwde
add
sahf
push
cmp
je
xor
jecxz
(bad)
(bad)
dec
jno
jae
or
es
fs
inc
push
cli
mov
add
jbe
dec
add
sbb
mov
xor
adc
adc
test
add
sbb
clc
jo
mov
inc
mov
dec
addr16
add
jbe
and
fwait
and
inc
inc
in
and
adc
js
pop
jae
test
or
mov
ss
or
test
outs
adc
jmp
mov
inc
movs
push
ss
push
es
push
adc
and
sub
sub
sub
push
jo
inc
add
or
mov
es
jne
or
fwait
xor
outs
outs
push
call
shl
and
loop
or
jb
lods
jb
xor
fiadd
ret
sub
push
aad
push
pop
int3
and
and
es
inc
sub
cmps
inc
imul
ret
add
xchg
mov
ins
jl
jae
xor
sub
sub
push
inc
push
sbb
push
xchg
xor
les
add
sahf
in
cmps
or
call
shl
in
ror
dec
inc
inc
cmp
mov
cwde
call
jo
inc
add
push
push
js
add
jns
add
pusha
push
cmp
dec
xchg
jo
outs
fcom
stos
add
jbe
test
dec
mov
and
popf
mov
cmp
cld
es
or
and
xchg
jb
jne
shl
sbb
outs
ins
int
pop
xchg
outs
ins
jp
cmp
push
into
cmp
push
add
add
dec
or
rcl
add
test
mov
push
push
inc
retf
mov
ror
dec
adc
(bad)
hlt
inc
sub
mov
data16
mov
les
dec
xchg
or
adc
adc
pusha
jae
or
call
jp
adc
jne
mov
xor
dec
push
inc
add
sbb
shr
xor
xor
jmp
cmp
es
movs
inc
or
arpl
ds
jne
pusha
mov
or
push
adc
out
push
xchg
mov
xchg
add
jo
test
cmp
push
add
sub
xchg
fwait
call
jno
xchg
xor
sub
mov
mov
pop
push
xor
dec
jbe
push
les
and
fisubr
pop
or
fs
dec
aaa
add
mov
nop
adc
inc
push
(bad)
push
add
inc
dec
rol
cmp
sbb
inc
pusha
mov
aam
and
into
dec
dec
inc
je
cmps
test
add
inc
or
cli
ror
dec
dec
and
mov
test
cmp
jb
sbb
dec
lea
and
inc
push
int3
or
sub
scas
dec
dec
add
add
mov
add
ret
or
test
js
push
inc
ja
je
out
cmp
adc
push
nop
stos
cmp
or
and
add
addr16
nop
sub
(bad)
mov
sbb
jp
inc
dec
enter
sub
cmp
xor
gs
adc
adc
nop
sub
pusha
sub
mov
fcom
jp
adc
mov
jo
pop
sub
inc
jp
ins
sub
sahf
xor
xor
and
push
and
or
push
jb
nop
add
xor
xchg
xchg
mov
in
push
sbb
push
adc
add
push
movs
xor
xor
push
sub
sbb
inc
sahf
add
mov
add
jns
jne
inc
ret
xor
sub
inc
mov
adc
adc
or
inc
js
jne
test
and
nop
pushf
dec
pop
js
frstor
dec
fadd
mov
(bad)
rol
cdq
or
mov
call
dec
sub
retf
mov
rol
sbb
hlt
push
in
in
inc
mov
mov
xchg
sbb
push
dec
mov
arpl
dec
sbb
dec
inc
popa
xchg
sub
adc
jle
xor
lea
gs
push
xor
adc
lock
and
push
mov
add
rol
jb
and
loope
xchg
add
mov
and
je
pushf
adc
mov
pop
int
gs
enter
rcl
sub
sbb
(bad)
rcl
and
inc
push
mov
dec
push
adc
fidiv
push
push
fdiv
or
or
test
inc
call
retf
push
mov
push
push
pop
mov
push
rol
adc
push
push
call
lock
cmp
xchg
into
test
adc
inc
js
xor
mov
add
inc
popa
mov
les
and
pop
sub
imul
(bad)
repnz
imul
inc
adc
or
pusha
mov
push
enter
push
adc
add
jecxz
rol
mov
popa
(bad)
in
jo
sub
inc
dec
push
or
jne
out
push
push
mov
sbb
sub
dec
movs
xchg
dec
add
jb
push
lods
xor
xor
push
popa
xchg
shr
or
js
cwde
sub
and
add
add
inc
test
ins
jbe
bound
push
dec
and
jo
cmp
rol
sub
pop
cmp
jp
or
ret
shl
or
ins
fwait
add
xor
jle
dec
inc
add
sbb
mov
dec
add
imul
inc
cwde
ja
rol
sbb
(bad)
clc
inc
xor
cmp
dec
push
xor
push
dec
xor
xchg
xor
mov
mov
and
add
mov
xchg
ret
clc
sub
jb
dec
sar
sbb
lock
or
jle
mov
clc
dec
call
jb
movs
or
cmp
adc
shl
ror
in
and
or
mov
outs
push
push
bound
push
xor
or
inc
and
aam
(bad)
push
dec
sub
imul
xchg
jp
inc
loop
rcl
push
bound
test
inc
or
push
xchg
ror
stos
or
push
jle
sbb
in
cld
cmp
jno
xor
gs
push
inc
jl
xor
push
sbb
add
cmp
sub
dec
sbb
shl
add
and
add
js
mov
xor
inc
inc
mov
mov
add
nop
sbb
adc
jge
ret
inc
xor
xor
push
loop
dec
inc
cmp
xor
mov
add
cmps
xchg
mov
push
mov
fidiv
add
cmp
test
xchg
lods
cmp
mov
es
push
inc
cmp
push
int3
aad
adc
push
jb
(bad)
mov
add
dec
test
lods
cmp
and
jb
mov
and
and
pop
and
dec
(bad)
outs
aaa
dec
dec
loope
push
gs
dec
push
es
push
cmps
mov
les
lock
ss
ja
mov
inc
xor
push
push
dec
push
dec
push
(bad)
xor
and
jbe
jno
xor
mov
in
pop
xor
imul
fs
inc
hlt
cmp
inc
aad
fmul
xor
dec
movs
push
loop
je
dec
cwde
dec
sub
dec
imul
data16
push
adc
mov
or
gs
xchg
test
push
xchg
call
push
sub
outs
dec
gs
sub
xchg
test
dec
rcr
pop
sub
popa
push
pop
les
and
mov
mov
sbb
xor
cmp
leave
and
adc
mov
mov
popa
xor
jae
data16
int
retf
fs
push
dec
and
adc
and
xor
or
jl
push
xchg
cmp
aad
push
data16
ins
or
ja
out
jo
adc
gs
inc
aam
dec
adc
sbb
inc
cdq
sub
aaa
pop
push
ins
adc
inc
adc
test
mov
mov
sub
loopne
dec
sar
ja
xchg
xor
sbb
cmps
shl
add
add
fsub
add
xchg
bound
jbe
test
adc
cwde
sar
inc
test
push
call
inc
inc
stos
xchg
push
or
jbe
sub
push
mov
adc
shl
shl
ins
adc
jo
xor
sub
xchg
jp
add
jo
test
inc
cwde
pop
jae
mov
cwde
or
cdq
adc
inc
or
pop
lods
dec
inc
pop
bound
and
add
movs
sbb
inc
in
dec
inc
jbe
add
gs
je
sbb
les
adc
cld
xchg
outs
inc
or
popa
popa
adc
push
jbe
mov
mov
fs
test
movs
or
push
scas
ds
or
sub
gs
fsub
pop
push
adc
adc
mov
pushf
and
dec
sub
jp
and
test
push
(bad)
push
arpl
dec
cdq
sub
xor
xchg
push
shl
hlt
push
and
push
inc
(bad)
dec
jge
bound
adc
out
in
sbb
mov
dec
aam
fs
sbb
mov
or
sub
clc
shl
movd
sub
adc
inc
push
sbb
and
and
ja
jns
aam
and
ins
xchg
dec
outs
inc
push
call
imul
sbb
enter
clc
xchg
shl
cmp
add
xchg
mov
aam
add
mov
inc
adc
add
lods
or
sub
add
js
pusha
jmp
sbb
data16
enter
mov
dec
mov
cmp
cmp
xchg
xor
mov
or
jb
xchg
inc
and
call
retf
mov
enter
mov
and
imul
push
sbb
xor
jb
cmp
mov
pop
xchg
fs
add
mov
repnz
sub
inc
push
out
push
dec
adc
dec
mov
push
xchg
add
call
imul
cwde
adc
fs
inc
push
sbb
add
cwde
mov
dec
int
sub
inc
add
movs
les
shl
addr16
pop
adc
outs
jp
mov
pop
inc
dec
push
jno
dec
popa
jno
inc
nop
mov
aaa
retf
nop
inc
ins
cld
div
je
loop
shr
aam
adc
mov
push
outs
es
push
add
shr
(bad)
mov
pushf
jb
adc
adc
inc
sbb
gs
inc
push
jle
sub
mov
inc
push
adc
sub
enter
sub
adc
sub
or
push
sbb
popa
mov
xor
adc
jle
shl
and
and
push
pop
jno
sbb
fwait
push
push
dec
jb
ss
jbe
or
mov
bound
push
mov
push
xchg
pusha
mov
test
fs
jge
cmp
mov
scas
aad
loope
add
dec
sub
mov
int3
dec
dec
adc
movs
and
add
mov
push
cs
and
sar
or
loopne
push
fdivr
pop
ret
je
test
jp
pop
push
inc
cmp
ror
mov
adc
jo
xchg
sar
adc
add
pop
les
inc
xor
aaa
add
sub
cmps
(bad)
push
es
movs
movs
pop
call
(bad)
jb
mov
or
into
pop
push
loope
push
cmp
inc
xor
adc
ret
clc
push
mov
gs
pop
retf
lods
dec
jp
outs
pop
mov
cdq
lea
jb
cs
cmps
ss
enter
or
retf
inc
add
stos
mov
nop
or
add
xchg
or
add
les
fsubr
sub
add
xor
xor
push
mov
adc
loop
dec
mov
jmp
cdq
fwait
shl
cmp
mov
cmp
push
push
dec
test
add
sbb
push
or
inc
sbb
shl
inc
ss
loopne
inc
inc
mov
dec
xor
push
push
dec
inc
push
dec
or
out
dec
jl
sub
rol
mov
out
clc
and
das
scas
inc
dec
push
adc
xchg
add
inc
sbb
push
pop
or
add
(bad)
les
mov
add
enter
xor
xor
aam
sub
sub
xor
add
add
je
dec
jb
call
cmps
pop
sub
sbb
mov
data16
xor
dec
push
jno
test
dec
outs
loop
push
sbb
shl
xchg
shl
jle
inc
add
xchg
pop
data16
dec
loopne
aam
push
jp
outs
mov
addr16
hlt
and
add
add
push
pushf
test
jl
xchg
add
stos
into
mov
jb
jno
cs
xor
mov
adc
mov
pop
stos
push
cmp
je
sbb
outs
sbb
dec
call
push
test
(bad)
nop
scas
inc
inc
mov
push
pop
xor
retf
push
inc
pushf
and
and
mov
dec
sub
mov
sbb
push
clc
xchg
imul
aam
ret
dec
mov
mov
adc
push
jmp
push
add
clc
aaa
push
xchg
cwde
mov
add
mov
pop
ss
push
add
pusha
xor
call
dec
cld
gs
sbb
mov
inc
xor
fsub
aaa
aam
shl
or
loop
cld
push
jae
shl
imul
enter
inc
mov
push
mov
sbb
mov
dec
push
lock
jno
pop
and
stos
xor
adc
add
adc
dec
or
and
sub
xor
xor
mov
inc
rcl
(bad)
sub
and
ins
test
test
xor
and
cmps
xchg
inc
in
in
bound
lods
push
test
dec
in
adc
adc
cmps
dec
ret
adc
push
ret
dec
or
je
dec
dec
add
xor
lock
jns
mov
jbe
or
adc
dec
or
pop
test
inc
inc
jno
sbb
and
outs
aam
test
push
js
or
mov
dec
adc
xor
sub
mov
adc
es
push
dec
shr
cmp
dec
nop
jp
and
arpl
dec
inc
cli
(bad)
je
aad
dec
ret
add
inc
cmp
inc
sub
push
and
fisub
xor
ror
push
rcl
scas
fs
xor
ds
dec
pusha
dec
inc
je
and
sub
sub
add
and
mov
jbe
mov
dec
outs
push
popf
xchg
inc
in
jle
xor
jb
sbb
mov
dec
pop
popa
xchg
or
jmp
call
and
pop
push
push
(bad)
call
sub
or
push
xchg
mov
jp
mov
and
inc
inc
dec
dec
inc
mov
mov
ret
stos
jae
ret
loop
js
inc
xor
cwde
xor
rol
cld
xor
jbe
test
add
(bad)
scas
sbb
inc
xor
xor
inc
cmps
test
je
dec
inc
mov
loopne
sub
cmp
push
rcl
dec
add
ss
jbe
cwde
inc
(bad)
mov
inc
pop
mov
or
push
je
mov
push
xor
xor
xchg
(bad)
imul
xchg
inc
xchg
sbb
ds
mov
add
add
pop
bound
inc
mov
dec
cmp
dec
or
ss
fs
add
inc
mov
nop
mov
inc
pop
stos
push
or
addr16
jne
push
push
dec
jbe
mov
add
sub
popa
push
ret
mov
ins
arpl
or
sbb
push
sub
and
add
fcom
and
mov
pushf
or
mov
adc
add
dec
sbb
jle
xchg
cmp
jo
pop
adc
jp
arpl
mov
mov
dec
test
inc
or
sub
cmp
imul
push
push
movs
sbb
xor
loope
sbb
dec
outs
push
add
and
aad
push
outs
popa
ss
enter
aad
add
and
xor
fdiv
inc
sub
mov
fs
pop
add
imul
inc
popf
adc
adc
imul
sbb
scas
mov
inc
adc
inc
inc
call
xor
inc
mov
mov
and
fs
cmp
test
pushf
lock
push
adc
daa
jl
push
bound
mov
js
inc
add
shl
retf
pop
ins
cwde
dec
or
push
xor
xchg
sbb
push
mov
dec
shl
dec
dec
dec
push
or
inc
ja
aad
cmp
ja
pop
inc
outs
out
in
or
xchg
arpl
xor
je
mov
push
xchg
mov
js
ss
bound
(bad)
int3
add
jp
push
or
pop
cmp
loop
push
inc
ss
ror
mov
les
push
inc
data16
inc
mov
inc
push
call
jo
jne
mov
ins
cmps
push
sub
loop
add
rol
and
or
inc
sub
adc
fdivrp
js
add
jb
jmp
test
xchg
xchg
sbb
xchg
arpl
push
jne
cmps
inc
ret
test
scas
push
xor
push
ja
sub
inc
and
push
and
pop
add
sbb
test
test
inc
add
inc
pushf
adc
xor
mov
mov
mov
cmp
jns
inc
outs
retf
test
mov
push
mov
mov
mov
or
fadd
bound
retf
ror
cs
outs
or
push
dec
dec
je
jo
inc
inc
inc
pop
mov
sub
xor
xchg
retf
and
into
repnz
loopne
test
push
xor
xchg
push
push
fld
inc
jbe
mov
mov
nop
xchg
nop
dec
inc
sbb
and
pop
and
js
(bad)
push
jno
add
xor
push
push
inc
xor
sub
(bad)
jb
loopne
inc
or
adc
fidiv
push
pop
(bad)
push
mov
push
ret
nop
pusha
es
ror
adc
xchg
push
adc
inc
and
fcomp
test
pop
rol
ins
mov
push
push
fidiv
mov
adc
push
mov
xor
ss
inc
fadd
fdiv
outs
and
sub
xor
lods
sbb
push
push
xchg
dec
or
popa
retf
xor
pop
push
or
outs
push
cwde
push
dec
cmp
dec
imul
jne
fadd
or
or
mov
inc
jbe
dec
adc
gs
outs
sbb
xchg
mov
mov
push
ins
bound
shl
mov
xor
xchg
add
pop
test
dec
es
xor
fs
push
daa
aad
and
xor
add
and
jmp
rcl
cmp
or
out
jo
jmp
or
cmp
popa
bound
or
ds
mov
inc
mov
in
cld
push
and
or
nop
push
movs
and
push
adc
popa
ins
xor
arpl
or
pop
dec
push
int3
enter
dec
push
or
int3
and
push
fsub
call
adc
adc
add
and
ds
inc
inc
rcl
sub
dec
addr16
add
sub
mov
ins
jbe
fld
movs
jo
imul
push
add
adc
dec
inc
push
sbb
inc
arpl
xor
sub
mov
push
or
dec
dec
cld
mov
pop
dec
jmp
ret
movs
stos
sub
and
adc
sbb
sub
mov
add
data16
push
add
cmps
dec
rol
dec
jp
and
add
or
sub
or
pusha
or
xor
test
in
xor
and
xchg
je
and
in
shl
add
or
xchg
add
sahf
dec
pushf
pop
push
inc
shr
test
jp
dec
pop
dec
dec
out
pop
ss
jno
sbb
xor
inc
fcom
adc
sub
and
out
jb
imul
inc
push
push
arpl
jno
ret
and
push
mov
lods
mov
push
outs
fst
sar
inc
dec
xchg
popa
xchg
rcl
jb
xor
inc
mov
add
or
cli
adc
pop
xchg
sub
inc
sar
pop
push
add
mov
ds
add
fisub
or
adc
ss
je
imul
lock
jbe
jecxz
inc
loop
int3
mov
(bad)
push
je
dec
push
sub
sbb
pop
ss
dec
push
outs
inc
bound
push
jle
inc
and
jp
les
pop
inc
sub
mov
inc
ret
call
jbe
jp
sbb
dec
call
push
mov
mov
gs
fstp
push
sbb
enter
ds
add
dec
cmps
push
adc
xchg
fadd
add
push
imul
push
add
sub
mov
mov
jmp
out
addr16
jne
jne
adc
or
dec
call
add
jno
in
jo
xor
push
bound
dec
and
dec
inc
xor
in
pop
cwde
dec
pop
adc
push
or
cmp
icebp
inc
push
es
imul
adc
pusha
shl
xchg
and
adc
sub
dec
loop
adc
jbe
test
push
push
cmp
inc
aaa
jo
xchg
mov
adc
outs
push
dec
mov
push
sbb
push
jns
dec
add
bound
stos
stos
add
les
add
or
dec
test
pushf
adc
sbb
pop
mov
jle
sbb
and
lock
sbb
mov
push
or
push
add
inc
dec
and
inc
xor
mov
lods
jb
test
into
data16
jnp
mov
dec
xor
js
mov
jae
int3
dec
and
or
fiadd
push
mov
shl
cs
shl
inc
ja
stos
adc
or
push
(bad)
(bad)
add
adc
dec
push
jbe
adc
add
xchg
ss
ins
inc
ja
stos
add
test
or
add
push
inc
les
dec
imul
add
add
jb
dec
jl
mov
arpl
or
lods
imul
xor
xor
addps
jo
push
test
or
ins
js
rol
stos
mov
xor
enter
call
ret
adc
xchg
push
jo
or
jns
dec
bound
adc
or
mov
sbb
enterw
push
cdq
test
adc
mov
pop
mov
adc
mov
inc
push
dec
cwde
imul
mov
addr16
jne
and
mov
dec
add
fadd
mov
xor
dec
stos
mov
xor
or
dec
jmp
(bad)
push
js
pop
sbb
push
dec
add
push
xchg
ss
ret
and
rcr
mov
and
jle
outs
or
int
out
push
sub
xor
ret
push
loope
pop
inc
push
js
cwde
test
movs
mov
jmp
push
shr
inc
push
mov
movs
xor
fidiv
ss
dec
mov
push
sbb
inc
push
xor
sub
outs
adc
sub
fiadd
and
push
test
pop
movs
push
cmps
dec
jae
xchg
loope
or
mov
js
imul
xor
mov
and
mov
xor
dec
mov
jb
inc
jp
scas
pop
js
mov
cmp
push
dec
dec
jmp
inc
adc
jbe
xchg
call
jp
inc
inc
dec
add
xor
xchg
jno
mov
add
mov
movs
and
ja
inc
dec
jmp
jp
push
pusha
mov
push
mov
dec
add
ss
add
add
mov
adc
push
add
xchg
mov
data16
push
and
or
inc
ret
enter
add
xchg
cmps
and
mov
add
cmp
xor
pusha
pop
mov
test
add
jl
inc
ss
(bad)
push
adc
popf
or
push
lods
add
xchg
push
je
push
push
adc
jbe
pop
pop
into
xor
push
ror
push
(bad)
data16
adc
adc
xchg
bound
and
call
or
jae
adc
jmp
xor
test
ret
inc
inc
and
(bad)
jno
or
push
sub
jo
and
or
or
nop
fmul
pop
inc
ret
or
cmp
je
stos
or
sub
call
inc
sub
and
cmps
push
mov
dec
cs
dec
cmp
leave
add
push
jo
sahf
push
gs
ins
ds
dec
or
mov
push
mov
aam
dec
or
or
addr16
sbb
lds
sbb
xor
nop
or
sbb
dec
inc
dec
stos
sbb
dec
sub
push
xchg
mov
sub
sbb
dec
xchg
add
sub
mov
inc
in
fisubr
inc
jb
or
dec
mov
sub
inc
mov
outs
push
dec
data16
or
xor
mov
and
pop
add
inc
leave
and
bound
adc
sbb
push
mov
jb
dec
imul
in
xor
pushf
ins
and
and
sub
sbb
sbb
xor
dec
stos
movs
adc
mov
inc
cmp
xor
arpl
pop
jae
mov
xor
aam
mov
aad
mov
ins
and
cmps
jb
add
mov
jo
xchg
int3
or
adc
add
pop
inc
pusha
push
ss
in
and
sbb
retf
ins
rcl
gs
out
imul
mov
xor
aaa
inc
push
mov
fcom
imul
fdivr
xor
sub
out
inc
add
cmp
add
int3
adc
push
xchg
sub
add
mov
popa
jp
je
shl
enter
xor
jb
mov
cmps
ja
les
and
in
push
rcl
shr
xor
add
mov
inc
imul
fistp
mov
add
jb
xchg
dec
inc
dec
inc
inc
sbb
lods
jb
mov
mov
mov
xchg
inc
xchg
cmp
mov
and
inc
ins
adc
push
push
xchg
aaa
mov
sbb
jne
movs
cmps
pusha
adc
adc
push
push
shl
and
loopne
mov
data16
sub
xchg
and
add
xchg
dec
cmp
sub
push
fst
test
dec
and
dec
mov
push
dec
sub
pop
dec
jo
dec
inc
mov
or
gs
and
or
mov
or
rcl
je
add
inc
inc
inc
cmps
mov
mov
jbe
inc
or
push
dec
or
loope
jo
clc
loop
mov
and
sub
xchg
int3
inc
fs
sbb
dec
sub
addr16
pop
aad
inc
sbb
xor
inc
loopne
(bad)
in
test
push
or
pusha
test
ins
jno
cmps
adc
mov
inc
cld
dec
mov
push
ds
and
je
mov
or
add
adc
xor
movs
pop
push
jp
push
or
push
cmps
add
call
xor
mov
push
mov
pop
xor
push
push
push
xor
mov
add
nop
mov
imul
jno
call
dec
fcomp
push
shl
js
ins
jns
aad
sbb
push
fs
es
in
mov
cs
aam
bound
jp
xor
cli
or
mov
dec
jno
push
rcr
ret
add
xchg
mov
bound
jp
ins
imul
rcl
push
movs
and
mov
add
mov
and
popf
fisubr
imul
inc
add
xor
sbb
test
mov
dec
dec
test
mov
jno
ins
push
sbb
rcl
dec
or
jne
push
in
push
scas
push
and
and
dec
push
push
xchg
test
jle
cmps
dec
xchg
test
inc
xchg
mov
mov
xor
imul
push
push
sub
mov
sbb
mov
mov
mov
cs
sub
push
mov
adc
push
add
push
and
in
sub
int3
inc
enter
inc
daa
mov
bound
(bad)
cmp
push
push
inc
cmp
or
loope
push
jae
or
and
inc
add
je
xor
or
sub
adc
lods
sbb
or
xor
pop
push
cmp
add
adc
mul
aad
push
enter
xor
imul
ss
daa
and
mov
adc
push
sahf
ss
inc
test
xor
int3
mov
inc
(bad)
inc
dec
bound
push
dec
mov
xor
call
inc
sbb
xor
xchg
inc
adc
add
xor
pop
fs
inc
data16
and
pusha
adc
pop
fdiv
fcom
inc
push
mov
inc
dec
inc
hlt
mov
inc
dec
inc
sahf
jmp
in
jb
fistp
ins
cmp
je
adc
and
fdiv
push
push
push
pop
mov
mov
bound
and
push
rol
add
mov
inc
into
repnz
out
lock
xchg
es
pop
or
add
clc
jb
mov
dec
pop
xchg
mov
dec
cs
test
int3
mov
pusha
adc
je
add
shr
inc
sbb
sub
fadd
cmp
jne
test
dec
jo
hlt
dec
fwait
rol
jne
test
gs
rcl
add
jno
and
and
push
ins
or
lock
enter
add
jb
push
xor
mov
test
dec
adc
add
and
dec
fisubr
fisub
lods
cwde
mov
push
xchg
in
cmp
imul
and
and
sub
sub
sar
sub
add
out
dec
leave
inc
enter
push
loope
mov
push
ins
dec
add
push
jne
pop
fsub
inc
mov
jle
jne
inc
test
sbb
add
(bad)
sbb
mov
xor
test
jp
add
mov
mov
xor
je
push
dec
sbb
cmp
fmul
inc
fld
push
cmp
pushw
or
arpl
inc
push
pop
lock
sub
mov
sub
sub
push
inc
mov
rcr
push
and
sub
pop
push
bound
sbb
or
ins
inc
pop
test
xchg
push
movs
mov
push
dec
mov
ja
xor
jns
cwde
sub
fiadd
sbb
jbe
xchg
test
mov
or
add
bound
push
xchg
sub
dec
and
jp
push
test
dec
movs
and
mov
mov
inc
mov
or
int3
inc
fiadd
jb
or
mov
xor
mov
ds
push
or
sbb
and
stos
jo
(bad)
into
jae
call
cmp
sbb
test
aad
add
pop
and
adc
and
add
fadd
push
cmps
jno
outs
dec
dec
pop
outs
cmp
dec
or
push
cli
or
or
or
push
push
sbb
loopne
test
loopne
inc
outs
or
(bad)
outs
pop
pop
nop
pop
rcl
xor
mov
ret
xchg
shl
inc
mov
inc
inc
push
push
jle
in
rol
adc
ja
adc
mov
inc
xchg
dec
and
sub
xor
sub
add
and
mov
repnz
cli
xchg
test
cmp
rcr
add
cs
and
stos
xchg
dec
ss
imul
jp
jo
push
jbe
out
test
test
ret
push
xor
jp
push
addr16
add
cmp
js
or
push
int3
and
inc
mov
je
inc
inc
inc
loop
push
add
repnz
add
cmp
xchg
or
dec
push
jmp
ja
ins
add
push
sbb
push
sbb
pop
mov
dec
jb
xor
add
lock
dec
jne
jae
fsubr
bound
adc
adc
add
xchg
mov
aam
outs
cmps
inc
js
mov
sub
adc
inc
mov
xor
inc
shr
inc
add
or
cmp
inc
pop
retf
(bad)
sub
arpl
push
arpl
rol
mov
jecxz
mov
xor
inc
hlt
jo
inc
lods
dec
test
cmp
pop
add
je
adc
push
xchg
movs
xor
mov
ret
inc
xor
movs
push
pop
ins
xchg
xor
xchg
xchg
inc
push
xchg
ret
sub
jbe
pop
outs
dec
jo
retf
or
pop
mov
pop
mov
aaa
(bad)
xor
add
push
nop
pushf
jo
xchg
cmps
push
adc
push
inc
arpl
ret
(bad)
push
xor
popa
jae
jae
pop
sub
xor
(bad)
inc
add
cwde
popa
xor
jo
fs
stos
pop
and
popa
jb
inc
jp
and
sub
mov
xor
sar
es
jno
and
sbb
rol
dec
cs
sub
pusha
add
xchg
fs
data16
or
xor
sbb
jb
cbw
ss
adc
dec
xor
or
ins
push
or
jno
adc
test
mov
push
xor
push
inc
pushf
sub
or
or
sbb
cdq
(bad)
clc
xchg
sub
stos
add
inc
addr16
sub
adc
add
mov
push
cwde
clc
fsub
ror
ins
shl
push
jb
test
fcom
cmp
xchg
je
push
xor
cld
inc
inc
push
adc
inc
test
nop
sbb
stos
rol
into
adc
iret
and
push
sub
call
mov
xchg
mov
dec
mov
add
add
int3
sbb
retf
es
mov
fs
sub
pop
scas
pop
or
icebp
add
bound
push
data16
ins
cmp
xchg
fisubr
mov
inc
adc
inc
mov
or
mov
ins
pop
sbb
sub
pop
mov
sub
dec
test
pop
mov
imul
push
shr
push
sub
es
pop
adc
outs
bound
ins
frstor
and
push
jp
loopne
xchg
cwde
adc
sub
push
lea
xor
dec
ja
push
mov
xor
dec
inc
ret
mov
dec
popa
cli
xor
xchg
push
jbe
dec
xchg
xor
clc
adc
mov
push
inc
push
test
fadd
dec
lods
xchg
or
or
inc
(bad)
mov
ss
inc
xchg
ficom
dec
xor
inc
imul
xor
xor
dec
dec
add
add
int3
test
and
adc
pop
lods
(bad)
sub
push
out
int3
sub
add
push
push
sbb
push
rol
ret
adc
adc
cmp
push
into
jb
sub
(bad)
addr16
adc
inc
inc
push
rcr
or
inc
jbe
mov
xor
popa
ins
les
or
xchg
fidiv
sbb
push
xchg
push
mov
jno
dec
mov
adc
adc
jmp
add
push
sub
xor
aam
outs
sahf
(bad)
dec
leave
jo
xchg
jno
ss
movs
loopne
mov
push
mov
xchg
adc
movs
pop
push
rol
push
scas
outs
enter
xchg
xchg
or
retf
xchg
mov
popa
test
push
sahf
push
fcom
add
and
fadd
dec
inc
bound
dec
dec
mov
sub
or
mov
xor
sub
add
sub
push
push
in
jb
adc
xchg
adc
and
adc
inc
add
repnz
mov
sub
pop
fmul
sub
sub
push
mov
out
ins
cwde
call
inc
test
sub
xor
jae
or
sub
inc
retf
test
mov
pusha
ret
test
and
push
push
inc
cs
jb
movs
push
xchg
sbb
cmp
aaa
pop
pop
imul
test
shl
int3
sbb
add
dec
js
or
cs
imul
bound
(bad)
mov
outs
inc
add
inc
add
dec
and
inc
dec
xchg
sub
inc
sub
xchg
data16
aam
mov
jbe
add
loop
inc
lea
fadd
push
or
sub
xchg
dec
mov
xchg
inc
cld
sub
pop
pop
inc
jb
mov
jo
xor
ror
enter
inc
or
enter
jmp
inc
pop
push
xor
sbb
xchg
mov
inc
and
jl
aaa
call
push
repnz
mov
pushf
bound
sub
xor
xor
push
sub
dec
adc
and
add
sbb
add
rcl
adc
mov
adc
jne
dec
mov
cmp
(bad)
jo
ins
or
push
and
push
or
jb
xor
stos
pop
loope
sub
jo
xor
dec
es
loopne
ins
outs
pop
and
cmp
and
and
dec
pop
loop
cli
xchg
enter
add
dec
sbb
es
ficom
imul
xor
push
movs
sbb
push
adc
pop
mov
xchg
ret
enter
mov
rol
data16
enter
push
push
mov
sbb
push
push
inc
inc
dec
jno
fst
bound
push
movs
push
pusha
or
inc
sub
ins
push
cld
mov
xchg
(bad)
sbb
sub
xor
xchg
xor
push
dec
ins
push
data16
and
push
add
into
sbb
inc
pop
adc
dec
loop
adc
push
inc
ins
push
jb
mov
bound
dec
pop
xchg
mov
pop
sahf
xor
jne
jecxz
in
inc
ja
push
xor
push
xchg
inc
scas
mov
gs
out
hlt
dec
imul
je
sub
cwde
imul
bound
clc
inc
add
cmp
arpl
inc
jo
pushf
rcl
jno
xor
inc
in
aam
dec
nop
mov
and
cwde
adc
mov
and
mov
dec
dec
enter
repnz
mov
mov
cmp
scas
and
je
mov
or
sbb
mov
push
mov
out
jo
mov
xor
ss
jno
es
leave
push
pop
movs
dec
push
dec
and
ins
ins
jo
pop
ds
push
pusha
jp
mov
cmps
sub
pop
and
xor
xchg
mov
inc
loopne
dec
mov
xor
fdiv
xor
inc
push
(bad)
or
call
inc
inc
sub
jne
push
adc
push
bound
jbe
xor
push
rol
push
ja
push
sbb
push
xchg
mov
xor
pop
mov
and
mov
add
mov
inc
xor
dec
push
cmps
mov
inc
mov
outs
lods
data16
ret
sub
dec
arpl
int3
push
ss
inc
add
test
dec
mov
and
dec
outs
xchg
mov
push
xchg
inc
push
aam
test
ss
retf
test
sub
(bad)
(bad)
xchg
test
adc
push
dec
and
jo
sbb
and
cmps
adc
add
bound
xor
es
cmp
addr16
add
sub
outs
jl
push
mov
aam
les
push
push
push
pop
(bad)
dec
jns
ins
pop
or
cmp
jne
aaa
or
xor
out
adc
and
push
loopne
xor
adc
push
xchg
sbb
adc
test
fadd
rcl
add
(bad)
cmps
push
outs
push
xchg
cs
push
ins
dec
xor
add
lods
imul
adc
mov
fimul
or
mov
xchg
inc
dec
cmps
mov
dec
push
inc
jb
jo
mov
push
and
call
mov
mov
sub
jbe
pop
jb
xchg
or
push
int3
push
je
(bad)
cmp
adc
sub
jl
push
push
push
mov
add
xor
inc
adc
mov
jl
inc
push
imul
cmp
inc
or
add
push
or
dec
or
xor
je
gs
dec
jp
mov
lods
ins
in
dec
adc
nop
test
gs
add
ret
adc
out
xor
je
shl
fsub
inc
fst
or
movs
dec
sub
add
imul
sbb
les
xor
fs
pop
mov
sbb
cmp
push
movs
jmp
or
jns
fsub
mov
dec
sbb
mov
dec
call
xor
aam
mov
shl
and
nop
sbb
je
xor
retf
sub
mov
ret
add
push
fild
cmc
xchg
push
inc
pushf
jo
ja
dec
dec
add
mov
cmp
inc
cld
xor
jae
imul
daa
sbb
call
add
xor
hlt
sub
push
xchg
adc
push
push
retf
call
xchg
sbb
ss
add
add
inc
imul
adc
shl
or
sub
push
inc
int3
sub
pop
mov
into
sub
in
inc
cmp
adc
adc
mov
lods
retf
sub
clc
jns
addr16
es
data16
test
or
dec
fs
xor
push
movs
adc
or
and
test
(bad)
call
call
mov
or
cmp
xchg
rol
add
push
push
in
cs
fcom
je
xor
dec
cmp
cdq
inc
inc
add
jns
adc
xchg
dec
pop
dec
or
js
shl
push
out
sub
inc
push
or
ins
dec
mov
mov
pop
ss
cmp
push
movs
inc
(bad)
fmul
test
addr16
xlat
push
xor
dec
push
or
sub
sub
aam
xchg
nop
inc
or
cmp
mov
test
dec
(bad)
pop
inc
dec
ins
dec
dec
mov
push
push
hlt
xchg
call
jo
in
adc
xchg
fist
loopne
clc
sub
sub
addr16
mov
enter
ins
xchg
and
adc
add
jo
mov
and
push
ins
mov
cli
inc
inc
inc
shl
pusha
mov
or
or
dec
push
dec
sub
jne
mov
retf
test
movs
outs
and
(bad)
cs
cmp
push
ins
jne
dec
retf
sahf
sub
adc
xor
mul
dec
adc
sbb
jbe
or
fwait
xor
and
jae
outs
jae
movs
imul
jno
in
out
add
aaa
outs
adc
adc
cmp
pop
lods
xchg
or
fs
or
(bad)
dec
or
and
sub
push
adc
int3
mov
fs
jo
add
pop
mov
popa
es
dec
xchg
in
and
inc
adc
inc
retf
adc
mov
movs
ror
or
call
push
inc
ret
push
inc
outs
push
inc
mov
pop
shl
xor
mov
sub
dec
xor
lods
inc
or
ss
and
or
or
or
add
cmps
test
xor
mov
adc
jne
add
xor
ins
pop
jle
adc
xchg
and
xor
push
jb
xor
xchg
push
add
or
callw
add
(bad)
fiadd
rcl
xor
adc
ja
test
imul
and
push
je
dec
js
mov
test
xor
mov
add
sub
adc
test
test
outs
cwde
push
imul
sbb
nop
inc
loop
push
adc
cli
pop
mov
mov
xor
or
rcr
and
mov
mov
push
adc
dec
mov
mov
je
or
adc
cwde
gs
add
xor
fadd
fcomp
call
cmp
add
arpl
push
jo
xchg
outs
push
dec
cli
and
xchg
call
jl
mov
fisubr
je
popa
mov
fs
xor
or
add
test
adc
xor
lods
push
xchg
shl
push
push
xor
aam
mov
add
xchg
add
push
add
xchg
add
nop
xor
xchg
inc
add
es
aaa
adc
test
jb
xor
test
rol
pop
adc
ss
sbb
shl
push
dec
push
push
pop
push
push
jne
push
call
jp
inc
leave
push
sbb
mov
lods
add
jp
or
adc
mov
scas
imul
inc
pop
sbb
xor
movs
ins
ins
mov
xor
xor
cdq
inc
mov
add
adc
jo
lods
not
ret
adc
call
jbe
cmp
(bad)
xor
xor
inc
arpl
inc
pop
push
and
ds
bound
or
ror
jo
inc
xor
xor
int3
xchg
inc
imul
cmp
sbb
ss
sbb
test
int3
or
sbb
fs
xor
mov
fstp
xor
aaa
push
sbb
bound
mov
add
dec
add
pusha
dec
xor
xchg
mov
inc
xor
retf
push
dec
jle
ins
outs
sbb
test
mov
dec
imul
jo
mov
sbb
mov
dec
and
clc
int
mov
dec
dec
push
inc
xor
jns
retf
push
enter
mov
mov
push
ret
out
cmps
aad
jno
jne
jp
dec
cmp
int3
sar
mov
sub
(bad)
add
push
nop
sbb
ins
push
push
and
div
dec
loopne
jno
xchg
add
pop
lods
dec
jbe
cld
cmps
inc
pop
dec
jbe
push
(bad)
enter
ins
push
dec
xor
and
sahf
push
lds
ins
dec
mov
inc
dec
adc
fs
or
sbb
sub
dec
ja
xchg
xchg
pop
adc
cmps
dec
cmp
inc
push
lods
call
push
push
dec
sub
jno
mov
push
xor
mov
or
fsub
adc
add
idiv
arpl
adc
sub
cmp
(bad)
imul
inc
push
sub
imul
jo
xchg
stos
in
call
imul
bound
inc
push
push
inc
sub
test
xor
jb
mov
nop
fmul
fdiv
push
cmps
dec
(bad)
or
fisub
hlt
dec
xor
or
test
inc
aaa
mov
xor
push
dec
push
dec
ds
leave
or
cmps
outs
ret
add
repnz
ret
rol
jns
pop
sub
and
add
dec
cmp
mov
xor
fidiv
inc
daa
nop
dec
(bad)
nop
data16
repnz
pop
jae
pop
or
push
dec
arpl
movs
and
inc
add
and
dec
push
repnz
push
dec
sub
clc
jns
ss
imul
xchg
test
enter
xchg
sub
dec
loopne
loope
(bad)
not
add
les
and
ins
mov
ins
inc
inc
or
push
jp
sub
movs
outs
int3
push
push
add
dec
push
cmp
cmp
push
stos
xor
dec
pop
xchg
or
fdiv
push
push
pushf
nop
and
or
adc
ins
dec
inc
push
enter
gs
lods
jbe
(bad)
je
adc
mov
or
and
jle
test
dec
fs
xchg
inc
inc
dec
je
test
inc
ins
sbb
ins
es
bound
sub
adc
out
sbb
dec
sbb
cwde
xor
test
push
add
adc
inc
mov
sub
jo
and
add
inc
imul
cwde
adc
sub
inc
push
xor
adc
adc
inc
je
push
clc
call
inc
rcr
adc
ins
push
mov
nop
or
jns
and
sub
jp
sbb
adc
test
movs
and
add
nop
mov
pop
dec
dec
jbe
xor
and
stos
mov
nop
xchg
cmp
cs
dec
fimul
push
int3
inc
push
push
adc
hlt
adc
mov
loopne
add
loopne
ins
sbb
aam
outs
xor
sbb
pusha
popa
into
imul
push
ss
cwd
xor
js
push
inc
cs
ret
add
inc
aam
ins
adc
fs
fmul
stos
rol
push
push
inc
push
mov
sahf
adc
and
inc
repnz
imul
adc
sbb
dec
jmp
inc
popa
jo
jo
adc
mov
inc
sub
test
cld
test
dec
or
push
cmps
mov
inc
pop
ins
mov
push
jne
cs
mov
push
inc
and
dec
push
aam
and
sub
push
loop
dec
sbb
and
inc
sub
push
jno
and
ins
push
outs
dec
aaa
jp
add
add
clc
dec
cli
int
je
retf
retf
push
ss
jb
mov
add
push
stos
lods
inc
fs
inc
cmp
push
mov
nop
dec
push
push
dec
dec
lds
movs
adc
push
xor
lock
xor
lds
stos
ror
jns
inc
and
cmp
inc
or
sub
ins
ins
xor
push
test
aaa
push
push
adc
ds
sub
pusha
aaa
sub
xor
stos
arpl
mov
sbb
sub
adc
cmp
pop
xor
rol
xor
mov
and
dec
xor
mov
mov
inc
cmps
or
retf
mov
test
inc
push
push
add
(bad)
xor
add
pushf
push
mov
push
ins
aam
popa
test
cmp
inc
push
push
mov
push
mov
dec
es
xchg
sbb
mov
imul
xchg
push
cmp
js
shl
fmul
push
ins
aaa
lock
nop
add
jb
or
aam
(bad)
sub
leave
inc
mov
scas
gs
jae
call
mov
aam
adc
jno
inc
add
sbb
xchg
rcl
cmp
xor
test
and
mov
out
and
test
retf
adc
push
cdq
cld
bound
add
mov
adc
ja
push
jne
push
inc
adc
popa
rcl
pop
dec
xchg
and
and
jo
inc
and
cwde
jae
call
aam
or
nop
adc
xor
dec
sbb
aad
cs
enter
xor
into
aaa
mov
dec
ret
bound
inc
je
adc
sahf
inc
inc
xor
push
push
mov
jbe
sub
and
inc
mov
hlt
dec
adc
or
ins
cdq
mov
retf
pusha
ret
int3
mov
mov
push
fs
fcom
popa
sahf
mov
aad
add
dec
inc
mov
or
test
jno
mov
inc
fs
inc
ins
sub
sbb
ror
gs
and
fiadd
sub
cmp
jae
mov
xchg
shr
test
and
push
sub
mov
mov
jle
xor
fidiv
dec
imul
push
adc
fisubr
es
xor
dec
inc
stos
retf
cmc
jle
inc
inc
lods
inc
xchg
jbe
push
inc
inc
les
inc
mov
or
inc
pushw
or
jns
int
sbb
sub
pushf
jp
ja
xor
jo
or
xor
popf
ss
ds
inc
sub
inc
jb
or
sub
add
dec
inc
xor
push
je
xor
adc
pop
ins
xchg
push
stos
rol
enter
arpl
mov
fimul
inc
adc
dec
and
ds
ret
push
xor
aaa
in
out
push
and
dec
ins
add
es
add
xchg
in
mov
inc
push
lods
in
push
les
xchg
shr
push
xor
es
mov
les
cwde
sbb
fisubr
mov
and
out
call
mov
xor
push
or
mov
inc
xchg
fs
inc
mov
cmps
pushf
xor
sbb
enter
and
pusha
sub
push
cs
jae
push
leave
call
daa
pusha
jb
fisub
adc
lea
add
pushf
dec
xchg
rcr
cmp
push
push
test
add
inc
add
sbb
sbb
outs
dec
js
and
test
or
or
neg
not
and
adc
and
movs
add
push
and
inc
mov
jmp
ror
stos
add
add
test
push
and
fisubr
add
xchg
inc
fs
arpl
xchg
ret
bound
in
dec
jle
lods
add
mov
add
fs
loope
fdivrp
xor
ins
adc
push
pop
adc
ins
inc
add
jo
ds
stos
test
imul
push
pusha
pushw
data16
push
popf
dec
xor
dec
bound
mov
sub
push
sub
adc
dec
sbb
lds
or
inc
push
outs
cmp
rol
dec
push
(bad)
jno
and
xor
inc
push
xor
xor
inc
nop
enter
hlt
retf
xchg
(bad)
push
inc
xor
adc
adc
sbb
push
add
push
xor
xor
adc
sub
inc
push
hlt
test
add
push
push
or
mov
push
dec
stos
mov
xor
add
and
int3
jo
add
frstor
test
mov
adc
in
rol
inc
dec
je
push
mov
nop
rol
loop
dec
mov
lock
pusha
cmp
(bad)
or
dec
bound
shl
or
xor
xor
sbb
dec
enter
jo
adc
push
push
dec
test
(bad)
cli
push
jb
bound
add
(bad)
push
lods
xor
aaa
lods
xchg
stos
push
stos
fadd
imul
push
jo
pop
push
and
dec
sbb
bound
or
adc
mov
nop
out
arpl
bound
stos
push
push
push
sub
stos
or
ins
inc
(bad)
and
or
sbb
ds
xor
add
je
stos
adc
fstp
mov
and
mov
xor
in
jo
push
gs
aad
xor
adc
adc
jns
pop
sbb
push
add
push
add
loop
mov
scas
movs
and
push
sbb
outs
cwde
sbb
xchg
sub
or
sbb
add
cs
aam
and
and
push
es
or
sbb
add
popa
and
cmp
bound
add
bound
loopne
fcom
lods
or
or
lods
adc
sub
mov
or
inc
xor
pop
test
mov
outs
adc
xor
bound
pop
dec
push
add
ret
sub
jo
dec
inc
(bad)
sbb
cmp
popa
pushf
mov
mov
or
inc
bound
dec
and
pusha
jp
add
add
test
mov
mov
add
mov
in
ins
shl
pusha
aam
push
jb
ficomp
push
push
jo
sub
jo
sbb
adc
inc
or
ins
mov
and
inc
stos
inc
adc
push
inc
sub
add
mov
or
mov
call
ret
mov
pop
inc
add
sub
outs
cwde
inc
dec
lods
sub
jno
dec
mov
popa
or
add
push
jmp
stos
xchg
movs
cmps
je
inc
mov
sbb
and
or
adc
shl
fsub
pop
lods
dec
dec
sbb
adc
push
(bad)
push
loopne
rol
xor
je
sbb
dec
xchg
in
cdq
xor
dec
push
imul
and
inc
je
jb
sub
call
mul
sub
and
inc
fwait
or
sahf
ja
dec
jb
adc
jb
dec
arpl
les
sbb
popa
or
mov
adc
fs
inc
inc
inc
ins
mov
ins
cs
loope
xor
xor
outs
pop
data16
adc
ss
push
xor
loop
push
dec
sub
jp
clc
data16
jl
mov
adc
dec
or
sbb
adc
and
or
or
(bad)
xchg
inc
lds
pop
push
add
es
ins
nop
add
aaa
push
add
xor
xchg
inc
push
pop
sub
and
adc
jb
cmp
imul
pusha
xchg
xor
xchg
dec
add
push
xchg
ins
test
dec
push
add
pusha
adc
push
jp
dec
push
xchg
inc
outs
xor
inc
les
ret
jb
sub
dec
adc
pop
mov
jns
push
popa
mov
dec
je
mov
imul
jl
or
xor
adc
or
jbe
inc
add
mov
mov
ins
inc
call
xor
pop
xor
ds
je
inc
inc
xchg
into
cli
outs
jle
in
arpl
js
xor
inc
or
js
push
xor
jae
enter
xor
xor
test
pop
repnz
xchg
fmul
jb
adc
sbb
(bad)
(bad)
gs
add
cld
imul
inc
push
jp
xor
dec
sahf
inc
fs
imul
retf
mov
jbe
push
sbb
inc
inc
in
mov
cdq
push
inc
es
and
sub
outs
cmp
out
mov
xor
push
jae
inc
leave
dec
xor
inc
xor
and
and
and
sbb
fs
push
or
mov
xor
lds
xchg
xchg
outs
rcl
cdq
pusha
ds
mov
inc
fld
inc
jb
je
adc
add
xchg
in
jno
popa
dec
ins
add
push
push
pop
add
adc
cli
adc
bound
aaa
js
pop
jb
pop
je
inc
add
dec
push
outs
adc
inc
dec
dec
push
xchg
add
mov
push
xchg
pop
or
jbe
jb
sub
sahf
jl
(bad)
and
sbb
inc
inc
xor
mov
cmp
xchg
call
cmp
dec
xor
xor
add
call
mov
inc
push
lods
dec
dec
mov
or
jo
dec
add
sub
sbb
outs
test
add
pop
fs
popa
inc
dec
inc
xchg
jo
mov
inc
cmp
cdq
inc
daa
cli
jb
adc
adc
nop
mov
sub
or
push
add
adc
addr16
movs
xor
arpl
mov
adc
dec
out
xor
or
mov
cmp
inc
in
xor
inc
adc
js
rcl
sbb
or
cmp
inc
inc
or
sub
inc
push
cdq
add
mov
mov
pop
jo
call
lods
sub
and
and
add
adc
and
and
enter
pop
dec
aad
test
push
lods
adc
int3
push
xor
test
movs
mov
je
scas
bound
pushf
or
xor
mov
push
jp
inc
outs
inc
or
push
inc
jns
sbb
push
outs
sub
push
outs
int3
ret
xchg
and
mov
bound
xor
inc
cmp
mov
or
ret
popa
sub
inc
mov
pop
jp
xor
sub
sbb
xchg
add
mov
mov
and
jne
pop
inc
imul
test
into
inc
out
ret
push
pop
or
xchg
push
or
fst
bound
push
xchg
rcr
push
xchg
nop
xchg
sahf
or
adc
add
ss
push
and
push
adc
jo
or
mov
dec
add
add
adc
dec
ss
movs
pop
callw
js
retf
mov
call
cmp
or
and
jbe
push
sbb
pop
dec
add
cli
sub
data16
and
shr
and
push
mov
and
adc
push
jno
jne
adc
add
loopne
push
(bad)
push
imul
call
and
inc
lods
mov
data16
inc
xor
add
(bad)
or
shl
je
jl
push
sub
mov
mov
adc
push
sub
jmp
add
xor
mov
inc
test
aaa
jbe
imul
push
loopne
jae
xchg
mov
or
fs
push
shl
dec
push
push
xor
push
adc
add
fs
inc
dec
sbb
add
in
inc
adc
fadd
inc
or
fdiv
gs
mov
dec
and
add
dec
outs
pop
nop
int3
enter
xor
add
sbb
push
jmp
add
mov
mov
lods
ret
push
xor
jns
loopne
or
xchg
xor
mov
push
je
adc
and
push
add
aam
fldcw
cmps
push
dec
jp
mov
xchg
add
mov
add
cmp
inc
push
outs
or
inc
lods
cmps
mov
dec
inc
pop
mov
test
push
xor
dec
and
js
add
je
aaa
jno
cmps
sub
dec
cmps
(bad)
in
mov
int3
and
add
mov
mov
inc
and
xchg
sub
cmp
test
adc
xor
xchg
sub
inc
xor
js
inc
xchg
xchg
ficom
push
mov
js
rcl
or
ror
and
shr
xor
add
mov
dec
test
repnz
or
dec
adc
call
or
sub
mov
or
es
mov
mov
jp
inc
mov
push
add
loopne
sub
mov
ss
enter
pop
fmulp
push
dec
inc
ins
sbb
or
mov
aaa
dec
inc
adc
hlt
dec
lea
bound
or
jb
xchg
pop
mov
push
adc
dec
add
fcom
push
push
push
adc
adc
into
dec
mov
jp
or
aam
and
add
stos
jmp
sub
dec
test
inc
ret
fdiv
in
aad
clc
fs
sub
mov
or
push
adc
push
xchg
shr
addr16
mov
jp
pop
inc
sub
cmp
dec
add
and
or
repnz
popa
cmp
mov
inc
push
xor
cmp
pop
jo
ins
test
dec
outs
pop
data16
inc
add
add
retf
push
(bad)
cmp
add
bound
lods
fld
inc
arpl
ficom
push
pusha
sbb
hlt
in
push
das
or
xchg
ins
sub
dec
dec
outs
add
mov
mov
ret
ss
fs
mov
(bad)
scas
dec
fmul
int3
bound
or
adc
inc
xor
pop
or
dec
cld
sbb
inc
add
arpl
fimul
jns
xchg
inc
data16
gs
cwde
(bad)
xchg
inc
popa
dec
je
lea
js
xor
jns
inc
dec
add
or
or
in
mov
ins
ins
je
es
ss
(bad)
xor
addr16
sub
cmp
dec
jmp
jae
cmp
push
or
adc
hlt
inc
sbb
sbb
jl
inc
inc
outs
js
push
nop
mov
cmps
adc
inc
dec
push
inc
jno
xor
mov
inc
and
push
adc
jle
or
inc
scas
in
add
loope
js
mov
ret
sar
gs
xor
xchg
or
pop
push
sub
mov
adc
inc
dec
jbe
adc
sub
xchg
stos
cmp
inc
mov
fs
pop
pop
inc
inc
push
jmp
sub
cmp
inc
inc
push
xchg
add
lea
dec
sbb
and
pop
mov
pushf
fdivr
push
xor
call
and
xor
adc
mov
push
test
pop
sub
sbb
dec
dec
push
dec
outs
pop
loopne
sbb
xor
mov
ror
pop
jb
cmp
les
pop
shr
sub
pop
js
mov
and
retf
and
add
mov
fmul
xor
out
push
and
bound
cmp
pushf
cmp
jp
push
or
jae
xor
mov
adc
cmp
mov
xor
sbb
add
lods
inc
retf
and
inc
mov
shl
addr16
adc
or
xor
gs
jp
adc
xor
clc
imul
cmps
dec
add
mov
enter
add
into
adc
xor
lods
xor
je
and
jo
mov
cmp
xchg
jb
pop
xor
xor
stos
les
gs
xor
inc
rcl
xor
xchg
jo
cmp
sbb
call
rcl
sub
pushf
inc
add
jp
inc
and
dec
mov
xor
test
add
add
xor
(bad)
cmp
movs
shl
jle
add
cmp
sub
mov
cs
pop
mov
xchg
xor
and
mov
shl
outs
call
popa
arpl
xchg
rcl
fcmove
sub
jle
js
dec
add
js
xor
and
and
sub
es
rol
xchg
xchg
loope
call
sub
(bad)
add
add
pop
loop
ss
retf
mov
and
dec
push
push
leave
or
add
sub
dec
(bad)
jb
push
and
ja
rcl
push
mov
pop
push
adc
xor
adc
int3
push
loopne
mov
dec
sub
jbe
inc
dec
shl
xor
add
dec
jp
sub
ds
dec
xor
or
push
add
stos
and
cmp
call
scas
dec
jae
outs
cmp
shl
inc
dec
les
je
inc
movs
mov
pop
push
adc
test
pop
pop
bound
ins
push
pusha
mov
xchg
push
xchg
retf
xchg
inc
test
jg
mov
pop
jo
inc
pop
jns
imul
fsub
xor
imul
ins
jb
fld
xor
sbb
cmp
push
add
jl
push
or
xchg
je
jb
xchg
pop
inc
or
outs
push
inc
push
and
ja
dec
les
push
push
add
adc
and
dec
xor
pop
lock
xchg
sub
imul
push
clc
adc
cli
jp
js
push
jmp
jp
sub
mov
pop
ins
push
sbb
dec
push
data16
retf
lods
dec
inc
and
xchg
pop
cmp
add
pushf
pop
lds
add
bnd
xor
inc
mov
xchg
push
nop
aam
sub
push
or
ins
aam
fs
add
inc
push
mov
inc
(bad)
mov
mov
push
mov
inc
jae
test
test
xchg
popa
xor
push
popa
jmp
out
add
call
lea
jp
cmps
jbe
cmp
mov
push
dec
sub
inc
mov
cwde
clc
xor
inc
add
mov
outs
inc
ins
enter
sbb
push
pop
push
xchg
push
jns
in
or
in
movs
in
in
xchg
dec
jno
push
push
push
xor
shl
clc
xchg
data16
jne
inc
ss
jb
imul
sbb
inc
pop
jl
mov
mov
pop
push
xor
mov
jmp
push
inc
pop
inc
push
add
lods
jl
jne
fwait
test
cwde
pop
ja
dec
mov
push
adc
shr
or
xchg
lods
cwde
je
jbe
add
xor
out
pusha
jne
inc
in
mov
les
sbb
dec
dec
push
into
jmp
xor
dec
and
cmp
jb
in
dec
outs
xor
cmp
add
aaa
push
mov
dec
ret
add
dec
adc
call
int3
sbb
ins
movs
dec
test
mov
push
test
sub
xchg
jns
fcom
pusha
xchg
or
mov
sub
mov
push
inc
imul
adc
test
mov
inc
ins
fs
retf
mov
sar
loope
mov
inc
movs
push
xchg
and
cmps
mov
loopne
xor
add
sbb
push
push
je
dec
jb
pop
repnz
adc
push
xor
stos
add
lds
push
cld
inc
jbe
push
rol
jmp
mov
cmp
pop
cmp
mov
or
leave
les
mov
out
jbe
add
aam
inc
and
aad
inc
jno
dec
push
mov
and
xchg
jae
cmp
push
dec
cmp
lock
imul
mov
add
dec
adc
fdiv
xor
inc
jb
pop
xchg
clc
xor
cmp
movs
cwde
mov
sub
call
jo
mov
rol
adc
cmp
cmps
mov
cmp
js
sub
hlt
push
pusha
mov
movs
push
(bad)
add
outs
sub
or
push
or
cmp
push
push
adc
and
push
cwde
jae
nop
pop
nop
mov
adc
push
xor
mov
call
xor
(bad)
test
dec
adc
push
les
push
stos
xchg
push
push
or
adc
mov
xor
mov
pusha
and
or
and
add
(bad)
jp
cmp
rol
push
ret
out
int3
popa
mov
push
mov
jo
and
push
push
test
push
inc
ror
push
push
xchg
lods
mov
shl
mov
inc
ds
push
and
dec
cmp
dec
xor
hlt
sub
cmp
jo
adc
jb
ins
adc
jo
mov
inc
jae
add
les
add
or
pusha
inc
mov
push
jbe
adc
mov
js
in
ins
loop
aam
gs
dec
cwde
add
inc
adc
inc
cmp
test
sar
push
xor
pop
or
jo
sbb
xchg
outs
xor
adc
(bad)
imul
int3
dec
push
sub
cmp
jo
mov
push
and
loopne
jne
xor
pusha
xor
add
fs
xchg
shl
fidiv
sub
sub
dec
lea
ins
aaa
mov
xchg
adc
data16
jmp
inc
push
inc
push
mov
inc
inc
push
gs
adc
push
sbb
add
outs
addr16
push
adc
push
and
adc
xchg
neg
pusha
dec
jb
int3
dec
je
lods
jo
(bad)
dec
or
xor
add
push
and
inc
int3
push
test
ja
aaa
xor
push
mov
inc
jns
inc
push
js
dec
jb
cmp
jns
adc
or
mov
scas
adc
bound
loop
bound
push
mov
test
enter
lods
call
imul
cld
ins
dec
jp
dec
add
mov
dec
test
or
push
(bad)
bound
imul
xchg
adc
rcl
dec
arpl
inc
pop
mov
sub
pop
(bad)
push
push
sub
push
push
dec
pop
and
xor
push
mov
sub
ds
xor
mov
gs
pop
scas
push
enter
jle
lds
add
scas
dec
imul
ins
add
mov
mov
lods
aaa
cmp
mov
mov
pop
sbb
data16
cmp
jp
dec
pop
add
push
call
push
data16
or
cmp
imul
push
int3
gs
arpl
mov
add
jp
mov
push
loop
popf
xchg
sbb
pop
push
jl
sub
add
mov
push
jne
ja
dec
sub
mov
and
push
jbe
xor
sub
or
inc
inc
dec
push
dec
bound
enter
imul
fs
popa
mov
add
pop
jae
or
push
sub
xor
adc
push
xchg
inc
xor
rol
cmp
test
test
fwait
outs
xor
fidivr
jbe
jp
inc
inc
mov
xor
arpl
pop
mov
in
adc
jns
movs
sbb
xor
xchg
xor
outs
gs
xchg
sbb
div
and
shr
inc
push
ss
jae
mov
and
fcmovbe
sbb
cmps
loopne
mov
scas
outs
jp
jle
push
and
in
xor
and
xor
xor
leave
fs
into
and
jo
mov
addr16
mov
push
mov
sbb
mov
adc
es
push
pusha
jb
dec
mov
inc
or
dec
dec
test
xor
inc
jno
mov
dec
inc
inc
and
inc
js
xchg
les
xor
or
mov
push
pusha
shl
test
ja
xor
ror
gs
fidiv
adc
jb
inc
aaa
rol
movs
es
mov
and
push
dec
ret
push
inc
ret
xor
dec
adc
fadd
and
dec
or
inc
ret
call
and
mov
and
xor
add
pusha
and
fwait
rcr
add
push
cs
jo
dec
sub
add
push
outs
test
cmp
ins
scas
pushf
test
push
dec
jbe
and
les
xchg
push
add
into
or
xor
or
call
sub
imul
and
xchg
sbb
adc
and
sbb
inc
stos
outs
bound
repnz
outs
js
push
xor
and
mov
and
or
dec
push
cmps
dec
mov
sbb
pop
jo
in
and
xchg
inc
xor
test
or
mov
xchg
dec
inc
je
adc
test
dec
jbe
inc
or
and
xor
nop
sbb
cmp
add
mov
movs
lods
or
add
pusha
xor
lods
dec
mov
and
xor
cmp
inc
inc
test
je
bound
nop
leave
mov
push
in
imul
test
imul
push
push
dec
aam
sar
call
cmp
push
rol
jp
stos
call
xor
pop
or
pop
fs
push
or
jmp
sbb
sahf
cld
add
ss
or
xor
mov
inc
ins
xor
push
mov
jb
push
xor
mov
mov
push
dec
ret
je
xchg
adc
add
ja
js
add
lea
movs
add
or
add
aaa
xchg
into
ret
sub
jbe
outs
fs
pop
sbb
sbb
or
or
test
jns
shr
ins
inc
ins
outs
cs
adc
sbb
jne
test
in
in
push
adc
add
and
loopne
dec
mov
lods
loopne
adc
mov
adc
in
pop
inc
pusha
xor
add
push
in
bound
sub
test
push
outs
pushf
adc
xchg
scas
ins
adc
inc
sub
ins
pusha
in
xor
fdiv
sub
push
xor
mov
test
add
(bad)
sub
xor
jp
sbb
fdiv
gs
fimul
and
dec
sbb
cld
int3
test
pop
mov
xchg
xor
push
jb
xor
popa
or
dec
mov
mov
or
or
or
mov
stos
add
mov
dec
icebp
les
push
pop
enter
pusha
mov
pop
dec
cdq
test
adc
inc
retf
gs
sub
dec
sbb
jmp
in
push
mov
add
xor
mov
jb
jmp
jp
or
adc
loop
dec
gs
jb
inc
inc
or
add
je
aad
xor
addr16
(bad)
dec
imul
ins
sub
pusha
pop
dec
jl
dec
push
push
cmp
aaa
and
pop
adc
ins
inc
enter
bound
gs
lods
(bad)
leave
adc
inc
xchg
add
or
cmp
dec
dec
dec
call
mov
mov
call
xor
(bad)
push
xchg
mov
xor
sub
add
push
xor
fcom
pop
movs
xor
data16
dec
ins
call
xor
ss
push
xor
or
and
data16
push
cmp
add
je
jo
aam
inc
inc
cs
jo
inc
mov
dec
jb
(bad)
jno
pusha
xor
in
cmp
mov
ins
sbb
push
cld
sub
or
mov
fcom
ss
jne
ret
push
push
jmp
mov
sub
push
imul
test
test
outs
inc
add
sbb
mov
je
gs
enter
inc
jo
push
push
aad
sbb
sub
push
(bad)
repnz
mov
mov
inc
out
dec
fs
cmp
pusha
inc
ror
sbb
and
cmp
mov
jae
jae
enter
adc
push
add
dec
pusha
leave
xchg
sbb
push
xchg
les
in
mov
nop
push
push
mov
imul
test
scas
outs
jne
mov
mov
sub
(bad)
addr16
fiadd
rol
add
pop
dec
pusha
inc
add
push
push
dec
ins
test
xor
push
adc
int3
inc
jne
xchg
adc
ins
and
lods
mov
dec
xchg
and
adc
test
inc
je
adc
xchg
pushf
mov
mov
cmp
add
add
fisub
inc
and
xor
mov
push
addr16
or
jmp
push
in
push
inc
inc
mov
adc
xor
or
fcom
lock
mov
and
push
push
push
fidivr
xchg
movs
push
dec
xchg
or
mov
or
shl
pop
pushf
add
or
dec
mov
mov
(bad)
xor
imul
xor
cmp
in
xchg
fwait
rcr
pop
adc
outs
dec
cmp
loopne
add
sbb
xchg
xor
or
mov
dec
pushf
push
pop
cdq
dec
and
push
dec
jb
ss
or
test
mov
push
cmp
sbb
adc
xor
test
push
mov
add
jb
cmp
retf
push
jmp
add
test
mov
xor
in
mov
call
mov
sahf
mov
pusha
sub
mov
nop
adc
add
aam
pushf
and
es
fst
and
cmp
adc
add
pushf
adc
inc
inc
int3
shl
xor
or
call
out
push
ror
inc
ficom
test
dec
adc
or
and
xor
push
movs
int3
call
je
add
mov
and
outs
inc
or
push
shl
xor
je
dec
and
outs
mov
dec
dec
mov
mov
nop
adc
and
pop
sub
cmp
scas
cmp
mov
gs
sub
push
or
and
xor
call
aam
add
sub
cld
adc
push
sub
es
pop
cmp
xchg
retf
bnd
xor
or
and
aaa
outs
add
and
sbb
arpl
pusha
pop
ins
cwde
push
or
js
fcom
push
mov
test
test
test
push
push
pop
and
jns
inc
add
test
push
sub
push
hlt
inc
dec
jp
shl
xor
xor
dec
movs
pop
gs
add
dec
cld
xchg
xchg
xchg
and
fild
mov
push
enter
push
add
hlt
mov
fidiv
ret
push
push
or
mov
mov
dec
mov
or
arpl
push
ins
lods
add
or
inc
dec
ds
mov
fld
aam
fiadd
or
dec
jae
in
xor
dec
inc
dec
mov
mov
sub
outs
push
loop
sub
xchg
push
xchg
and
mov
push
sahf
add
and
dec
loopne
aad
and
dec
dec
lock
adc
adc
ret
aaa
xor
add
inc
and
jbe
or
xor
aaa
and
dec
mov
pop
push
lods
test
push
les
xor
push
outs
pop
xchg
or
mov
adc
cs
imul
mov
push
bound
push
add
and
add
xor
push
out
stos
dec
push
sbb
fmul
repnz
xor
mov
outs
xor
add
add
mov
dec
push
mov
mov
push
push
dec
cmp
mov
dec
mov
mov
sbb
fwait
mov
imul
ret
sub
or
retfw
jo
lock
fs
sbb
js
jo
push
in
mov
pop
sub
mov
inc
(bad)
push
add
xor
test
push
jo
sub
cmp
je
and
fs
jno
sub
cmp
bound
es
push
cli
add
lock
cmp
sub
sub
dec
or
push
sub
xor
and
add
(bad)
jne
push
shl
adc
test
xchg
push
(bad)
push
push
add
mov
push
adc
mov
scas
mov
inc
test
push
mov
rol
stos
cmp
adc
and
jp
add
jb
ss
cwde
mov
inc
dec
inc
adc
and
push
xor
dec
(bad)
pop
mov
sub
push
rol
push
push
nop
and
mov
mov
add
dec
mov
inc
mov
sbb
adc
dec
shl
mov
xor
mov
rcl
dec
jmp
push
add
sub
dec
aam
and
and
loopne
cmps
je
fsubr
push
inc
loop
push
xchg
enter
adc
stos
sbb
nop
out
(bad)
fs
add
(bad)
je
or
dec
jp
push
add
push
push
xchg
sbb
adc
and
popa
or
rcl
xchg
scas
push
push
add
and
adc
push
cmp
mov
adc
adc
mov
mov
adc
jo
push
pop
jo
sub
add
shr
ins
mov
pop
fsubr
imul
pusha
mov
mov
adc
jle
inc
stos
jo
ins
addr16
sub
mov
inc
popa
add
xor
mov
popa
xchg
push
cmp
dec
and
adc
fcom
movs
adc
cmp
jle
adc
push
jl
sub
js
test
jbe
add
and
mov
xchg
in
xor
sub
imul
or
push
and
push
sar
xor
xor
push
adc
jbe
and
popa
push
or
ss
push
repnz
or
xchg
add
push
inc
jne
shl
push
cmp
dec
mov
push
cli
mov
xchg
clc
arpl
xchg
and
inc
in
push
sub
jmp
jo
sbb
dec
sbb
inc
arpl
xchg
xchg
or
push
push
and
add
xchg
jo
inc
xor
add
cmp
pop
xor
stos
scas
xor
and
pop
adc
icebp
xchg
mov
jle
jae
out
movs
push
stos
scas
ins
(bad)
rol
dec
pop
xchg
pusha
adc
outs
mov
sub
ds
nop
rol
pop
mov
adc
loopne
mov
mov
int3
inc
data16
pop
push
inc
mov
js
push
xor
adc
mov
les
add
mov
pop
ret
push
ror
gs
mov
pop
push
push
xor
gs
fs
dec
adc
nop
add
out
push
test
pop
and
movs
fdiv
pop
retf
xchg
push
cld
cmp
push
cmp
daa
ror
pop
push
dec
aam
popa
mov
aam
inc
add
fdiv
add
movs
xchg
jl
xor
inc
js
arpl
sbb
inc
(bad)
loop
pop
add
xor
ja
cmps
pop
stos
and
xor
jns
scas
or
sbb
pop
mov
inc
loop
xchg
mov
bound
xor
outs
js
aad
test
shl
jo
push
add
aaa
mov
mov
and
sub
add
mov
sbb
xchg
xchg
shl
stos
fwait
jbe
rcr
push
push
inc
dec
and
push
add
data16
mov
mov
clc
mov
mov
adc
inc
adc
mov
gs
movs
push
nop
jl
xchg
outs
mov
xchg
add
jo
sub
xor
dec
or
and
sar
inc
inc
cmp
push
dec
push
mov
sbb
jo
outs
enter
pop
xor
or
sbb
shr
jp
imul
dec
dec
push
imul
clc
ins
ins
pushf
add
add
and
and
loopne
adc
push
movs
inc
add
bound
cdq
(bad)
cli
int3
dec
ins
fs
sub
add
fs
or
gs
xchg
fcmovu
or
xor
cwde
xor
mov
xor
push
mov
push
dec
add
or
and
sar
pop
dec
enter
mov
jmp
inc
xor
pusha
xchg
push
xor
and
add
xor
add
bound
dec
int3
js
stos
push
or
or
or
pop
fisubr
into
push
ss
and
jmp
xchg
xor
xor
jbe
dec
stos
pusha
xor
jns
and
dec
adc
inc
xchg
add
ss
sub
xchg
dec
inc
retf
jmp
sub
call
pop
test
mov
jo
out
mov
fst
push
inc
test
in
mov
(bad)
add
push
aaa
adc
mov
outs
retf
sbb
push
in
xchg
push
xchg
inc
cmp
push
push
cmp
xor
inc
mov
inc
inc
and
imul
inc
cli
xor
inc
sahf
js
mov
jl
push
cmp
push
dec
rcr
inc
pusha
mov
rcl
pop
cmp
jp
les
mov
adc
nop
or
add
shl
or
and
fadd
push
push
mov
add
adc
xor
fdiv
add
call
mov
add
pop
arpl
cs
adc
xchg
cmp
gs
and
and
or
adc
add
and
add
push
push
mov
inc
adc
or
(bad)
pusha
shr
dec
inc
push
dec
pop
data16
xor
sbb
fisub
jae
cmp
xchg
test
and
add
repnz
enter
mov
xor
ss
mov
cmp
add
js
xchg
shl
dec
push
ja
or
push
inc
sbb
loopne
push
inc
mov
push
xchg
mov
gs
jbe
dec
call
and
or
lock
nop
cmp
mov
cmp
dec
adc
and
push
jo
es
adc
cmps
xchg
test
bound
and
adc
ja
retf
add
dec
jns
jbe
loope
add
pop
push
addr16
dec
sub
push
inc
xor
add
aaa
dec
scas
inc
rcr
js
xchg
adc
xchg
mov
mov
cmp
dec
fs
ins
ss
shl
add
or
inc
or
les
sub
pusha
ins
add
fs
inc
es
test
(bad)
aam
sbb
or
cli
pushf
sbb
jp
pop
outs
mov
mov
jo
add
or
add
jo
inc
dec
test
fdiv
ins
stos
or
push
xor
xchg
scas
mov
fs
and
cs
push
mov
adc
sbb
call
sub
loop
jae
inc
or
dec
add
dec
mov
pusha
sub
jp
push
add
call
dec
mov
nop
(bad)
data16
xor
outs
movs
bound
pop
test
(bad)
fsub
bound
add
push
jp
xor
mov
ins
fs
cwde
pop
aaa
xchg
dec
push
and
xchg
or
data16
ss
push
push
dec
mov
or
dec
jb
adc
add
inc
or
inc
sbb
in
adc
or
xor
cmp
inc
xchg
in
add
int3
clc
mov
in
xchg
fidiv
adc
inc
in
and
mov
push
aaa
lods
popf
mov
inc
call
xchg
dec
add
push
dec
adc
dec
sbb
add
sub
data16
leave
cmps
add
inc
dec
xchg
js
lock
rcl
add
jae
cwde
mov
push
scas
stos
ins
cmp
xchg
outs
jp
inc
pop
xchg
adc
add
push
ret
mov
jl
mov
enter
adc
dec
add
adc
pusha
xchg
es
outs
sub
push
xor
inc
adc
add
mov
xor
xor
xor
xor
jp
ins
mov
movs
test
rol
dec
outs
fdiv
sub
lods
jp
data16
dec
js
adc
jne
adc
or
ret
dec
test
sub
add
push
or
out
push
dec
ins
or
nop
retf
js
push
mov
rcl
xchg
mov
cmp
or
sbb
hlt
push
add
and
ins
push
call
shl
jns
and
mov
ret
mov
loopne
(bad)
dec
jo
nop
outs
aaa
jae
stos
imul
mov
rol
test
imul
test
jo
fdivr
dec
fs
add
les
sub
sub
mov
xor
jno
sbb
inc
dec
push
dec
adc
or
stos
outs
push
and
jbe
pop
xchg
mov
dec
adc
in
lock
cmp
sub
jne
dec
inc
push
rol
push
les
cmp
dec
xchg
or
out
repnz
sub
or
dec
outs
push
push
dec
mov
outs
add
mov
mov
dec
dec
(bad)
out
outs
sbb
cmp
ds
and
push
or
add
int3
mov
ins
sahf
adc
and
popa
enter
and
loop
mov
inc
push
jo
push
outs
int3
push
ror
dec
ins
(bad)
add
outs
or
push
push
inc
xor
add
push
dec
test
inc
pop
out
aam
in
cmp
adc
xor
xchg
and
pop
into
leave
cli
xor
nop
jp
sub
adc
inc
xor
push
sub
scas
mov
adc
inc
enter
test
loop
loop
push
xchg
push
ss
nop
out
ja
mov
rol
rol
xor
pushf
push
xchg
add
stos
inc
test
lock
iret
add
arpl
xchg
or
and
es
xor
shl
push
sub
cs
push
jp
mov
xor
inc
test
es
or
inc
and
add
pusha
mov
mov
dec
push
xor
mov
mov
arpl
aam
or
adc
mov
sbb
xor
div
js
or
push
mov
bound
or
xor
push
jb
or
in
imul
imul
dec
in
jo
sub
jno
push
mov
push
push
xor
jp
nop
dec
mov
add
imul
inc
imul
push
test
test
add
add
push
sub
and
into
nop
push
jl
adc
mov
popa
dec
(bad)
mov
jp
xor
dec
and
and
and
or
(bad)
retf
jb
inc
pop
jp
push
push
rcl
lods
and
inc
xchg
addr16
and
rcr
sbb
addr16
ins
cs
aam
fsub
fs
addr16
adc
mov
sbb
or
ror
call
adc
push
mov
xor
xor
and
pushf
sub
ins
cmp
xchg
pop
add
stos
dec
ins
jle
adc
push
es
adc
(bad)
out
sub
add
or
pop
pusha
xor
adc
and
ret
inc
xor
or
test
push
call
xchg
push
fisub
push
mov
sub
or
mov
mov
dec
int3
cld
data16
hlt
xor
je
jne
mov
xchg
or
dec
inc
out
dec
or
sub
dec
inc
sbb
mov
pop
pop
jmp
retf
pusha
test
inc
jle
rol
and
sub
add
fdivr
clc
add
(bad)
push
jo
das
rcl
mov
rcr
inc
adc
je
push
es
push
test
call
adc
dec
aaa
sub
dec
adc
push
pop
cs
inc
adc
inc
jbe
loope
cmp
cmp
push
sub
or
sub
int3
sub
jbe
push
or
jns
cmp
es
mov
ins
cwde
lock
ja
mov
mov
push
mov
push
in
je
jo
pop
jne
mov
call
ins
sbb
mov
neg
scas
add
adc
mov
push
sub
sub
dec
lods
dec
or
es
inc
ret
mov
or
int3
stos
stos
dec
push
and
fsubr
sahf
adc
sahf
adc
jbe
xor
or
and
call
jo
inc
sbb
data16
popf
sbb
mov
jb
call
or
in
pop
and
pop
add
push
pop
dec
loopne
jb
(bad)
js
mov
jne
jns
add
data16
sub
inc
jo
sbb
mov
mov
push
arpl
push
or
pushf
scas
push
add
fsub
add
push
mov
data16
data16
xor
mov
ss
push
mov
bound
inc
mov
movs
mov
call
rcr
or
inc
xor
add
ins
jne
dec
mov
sbb
mov
nop
pop
mov
cwde
cmp
dec
adc
inc
inc
add
pop
or
cli
lock
xor
mov
dec
mov
mov
not
fdiv
or
je
ss
and
dec
ins
push
data16
inc
and
ret
cmp
sbb
dec
push
cmp
or
sub
sub
adc
sbb
sbb
movs
add
push
enter
add
inc
stos
inc
push
xchg
bound
cwde
and
xchg
pop
scas
cs
ins
aam
xchg
nop
xor
or
push
fadd
push
lds
inc
into
mov
pop
ret
fs
add
xchg
pop
je
xchg
adc
xchg
push
test
or
js
or
or
jne
xor
xor
ins
or
repnz
add
(bad)
pop
push
dec
xchg
fist
mov
pop
mov
push
fs
sbb
imul
movs
and
dec
bound
add
dec
call
jb
mov
push
push
inc
mov
ss
adc
sub
or
add
cli
xor
add
or
js
inc
stos
inc
mov
movs
aam
inc
or
sub
dec
cmp
inc
or
dec
mov
mov
(bad)
ds
test
push
push
dec
mov
test
jae
out
mov
or
les
mov
dec
pop
mov
sbb
aam
add
popa
test
sbb
popa
je
jp
add
cmps
mov
ins
outs
lock
cmp
and
xor
mov
push
and
inc
inc
mov
xchg
movs
nop
adc
sub
inc
arpl
inc
movs
mov
mov
dec
nop
cwde
mov
sub
imul
pop
xchg
and
inc
push
jne
mov
add
data16
ins
push
dec
sub
push
leave
push
gs
adc
movs
push
pusha
dec
outs
or
sbb
jns
cmp
xchg
push
les
dec
test
mov
jl
inc
push
add
xor
adc
pop
or
push
nop
add
xchg
xchg
add
inc
xor
xchg
xor
or
test
inc
add
xor
push
movs
mov
cmp
sbb
inc
xchg
xor
shr
pop
clc
xchg
jns
loop
cmp
xor
fsub
add
or
or
add
ror
add
fcom
dec
and
add
ss
and
retw
or
push
dec
jo
xor
sbb
inc
xchg
mov
push
leave
mov
and
or
adc
mov
jl
outs
adc
inc
dec
popa
aaa
lea
xor
cmp
inc
or
fs
add
sub
or
inc
les
or
adc
out
add
inc
inc
js
adc
retf
push
sub
push
xchg
jns
or
or
call
sub
mov
push
inc
stos
inc
and
ins
inc
or
add
inc
sub
js
or
cmp
enter
dec
xchg
loope
enter
popa
push
xchg
inc
sub
add
add
pop
int3
adc
xor
push
push
es
sbb
cli
dec
pushf
inc
shl
xor
xchg
or
push
push
push
movs
pop
fadd
push
or
fcomp
lods
inc
shr
inc
pop
outs
sbb
and
push
adc
pop
push
xchg
enter
cmp
bound
rol
je
not
inc
sbb
push
sbb
push
or
jl
fs
mov
adc
inc
es
mov
jne
mov
test
cmp
dec
add
retf
inc
xor
lods
xchg
ja
push
or
and
jb
fld
mov
popa
js
adc
cli
push
clc
jb
sub
xor
push
mov
adc
sub
int3
cwde
dec
dec
push
push
sahf
stos
xor
fld
xor
push
mov
xchg
push
xor
dec
ins
nop
call
add
dec
out
cmp
or
test
adc
imul
rcr
mov
dec
xor
pop
dec
or
jae
xchg
sub
add
adc
xchg
pop
pop
add
push
push
and
add
test
or
add
ins
rcl
mov
fisubr
rol
scas
xor
inc
lahf
add
xor
or
adc
or
dec
fs
add
push
dec
and
inc
ins
jno
or
cmp
and
mov
test
jno
ins
adc
sub
jp
xor
dec
cmp
add
outs
cmp
repnz
push
jo
dec
and
and
aaa
xor
dec
push
dec
inc
aaa
loopne
outs
mov
dec
sub
jmp
and
push
les
inc
inc
or
inc
push
push
push
ins
(bad)
ins
inc
jne
xor
or
sbb
xor
sbb
enter
lds
xor
push
jl
ja
aaa
pop
mov
sub
dec
ror
ret
xchg
mov
adc
pop
mov
mov
push
xor
mov
and
dec
out
jp
mov
pop
jb
aaa
push
jb
ins
push
jb
retf
in
ror
dec
xor
dec
and
jo
stos
mov
or
mov
jo
retf
fsubr
loopne
sub
outs
leave
push
js
test
adc
push
pop
adc
pop
pusha
int3
imul
mov
and
fmul
fs
xchg
ret
popa
es
pop
popa
je
or
dec
sub
mov
test
and
nop
shr
jecxz
dec
or
and
pop
mov
ja
or
jp
push
jp
test
or
imul
xor
push
xor
cwde
push
pop
push
jae
push
sub
aaa
dec
dec
dec
sub
add
push
adc
and
push
cmps
out
pusha
sub
adc
xor
jbe
add
nop
pop
and
leave
or
adc
xchg
push
aam
sbb
dec
and
repnz
push
mov
sub
and
or
mov
push
xchg
addr16
and
loopne
fdivr
push
scas
and
fwait
xor
xchg
or
out
aaa
or
lods
jae
inc
inc
xor
mov
add
push
xor
mov
movs
push
add
popf
and
xor
mov
sub
push
popa
shl
push
mov
push
test
aam
aaa
cmps
pusha
push
mov
inc
sub
pop
retf
fist
and
aam
imul
adc
js
inc
adc
or
shl
push
or
or
push
inc
adc
mov
xchg
inc
or
out
repnz
test
rol
outs
cmp
sub
sub
adc
adc
aad
dec
adc
ret
movs
test
cs
sub
aaa
push
add
add
sub
dec
push
and
ret
popa
adc
pop
inc
es
mov
cwde
arpl
js
mov
add
add
jo
sbb
jp
test
cwde
out
mov
push
jo
leave
dec
cwde
rol
mov
inc
sub
push
push
push
mov
sub
and
call
or
inc
adc
and
ds
jbe
jns
mov
push
fcom
dec
ss
xor
or
push
mov
dec
imul
push
push
adc
and
inc
ins
cmps
xor
test
inc
out
xchg
push
add
test
pop
ins
sbb
and
and
ins
add
add
sub
ins
dec
popf
leave
rcl
cmp
mov
jmp
jbe
sub
cmp
into
dec
add
mov
add
popa
push
dec
retf
and
and
pushf
xchg
dec
push
add
dec
push
test
mov
cmps
movs
mov
jne
xor
push
mov
shl
cmp
cmp
add
pusha
jmp
popa
jbe
add
shr
imul
leave
or
sbb
cmp
pop
jb
shl
dec
jl
stos
or
loop
test
les
dec
popa
outs
pusha
popa
cmp
xchg
mov
add
push
rol
xchg
ret
xchg
inc
pusha
dec
add
inc
cmp
mov
jbe
repnz
pop
aaa
sbb
inc
xor
mov
addr16
xor
sub
cmp
gs
push
and
jns
rol
sbb
sub
js
fnsave
add
push
jne
jb
add
sbb
ins
adc
adc
mov
push
xor
mov
ins
push
mov
mov
and
add
mov
aam
jbe
push
js
call
and
sbb
inc
push
xor
add
jmp
xchg
dec
ins
jecxz
push
push
cdq
or
dec
sub
fcom
fisub
push
push
mov
push
pop
cli
push
cmp
mov
jb
mov
stos
fmul
add
dec
push
or
je
cwde
and
ss
xor
fisttp
mov
ja
mov
dec
ins
dec
lock
dec
adc
in
xor
and
pusha
mov
xor
test
in
sahf
cli
leave
push
mov
mov
cmp
adc
or
loope
push
or
xchg
mul
adc
lods
jno
xor
in
inc
lods
(bad)
retf
xor
cli
mov
inc
adc
and
sbb
xor
lock
cld
adc
cmp
addr16
int3
or
test
mov
loopne
test
mov
dec
add
sahf
mov
pusha
mov
mov
and
xor
inc
push
je
jbe
add
addr16
jo
push
rol
pop
pusha
mov
dec
sahf
inc
inc
pop
adc
pop
aam
stos
cmp
lds
dec
pop
dec
mov
or
sub
add
movs
mov
js
push
sahf
stos
adc
and
and
out
retf
mov
jne
cmp
add
js
push
jmp
inc
js
mov
je
bound
inc
push
cmp
mov
push
stos
cmps
ficomp
or
xor
aad
int3
push
test
sbb
and
ret
xor
out
test
inc
push
ins
mov
jp
dec
mov
aad
push
mov
xor
pop
add
and
xchg
cld
dec
adc
fs
or
dec
sub
imul
push
ja
mov
push
outs
and
adc
adc
xor
adc
cs
mov
jo
out
add
cmp
mov
mov
arpl
js
das
dec
rol
ins
add
inc
adc
xchg
add
cmp
inc
cs
test
(bad)
aam
xchg
inc
loope
xchg
scas
cli
dec
xchg
and
cs
adc
mov
dec
push
movs
es
dec
or
push
in
xchg
imul
sbb
mov
int3
shr
int3
inc
into
xor
test
je
mov
imul
sbb
dec
cs
in
dec
sub
sbb
test
jbe
push
gs
js
mov
jo
add
push
xor
push
imul
fwait
sub
out
rcl
and
sub
xchg
shl
bound
xchg
add
sub
push
add
or
in
xor
jbe
loope
mov
jl
pushf
xchg
and
scas
call
or
adc
ins
imul
int3
dec
push
test
inc
scas
into
jb
add
and
add
loopne
in
xor
add
test
fidiv
js
movs
push
imul
inc
sbb
inc
jmp
sub
or
mov
sub
xchg
lods
or
or
xchg
inc
cmp
test
lea
js
pop
in
inc
add
imul
adc
cld
imul
rcl
dec
xor
call
popa
cmp
je
add
or
pop
retf
adc
add
xchg
add
jae
sub
inc
dec
push
dec
push
add
jne
stos
mov
mov
sub
adc
test
add
xchg
pusha
push
test
add
dec
mov
imul
pop
imul
jp
jl
jmp
popa
sub
xor
xor
aam
mov
sub
fidiv
fdiv
mov
and
outs
xchg
fld
push
dec
inc
jbe
dec
ss
xor
jne
cmp
or
push
out
jb
jle
push
fdivr
cmp
inc
xor
ss
xchg
xchg
adc
stos
jbe
xor
add
inc
xchg
pusha
xchg
inc
jb
outs
xchg
sub
inc
scas
ss
shl
add
fs
dec
sub
and
ds
sub
xchg
xchg
add
call
mov
dec
fs
mov
or
push
push
inc
sub
rcl
cmp
and
int3
js
bound
and
xchg
cmovb
cmp
outs
add
pop
xchg
fdiv
or
or
pop
mov
ins
ins
nop
pusha
je
je
cmp
test
mov
pop
push
push
adc
push
pushf
inc
cmps
mov
cmp
data16
xor
test
mov
mov
mov
cmp
xor
jo
fidiv
movs
pop
fdiv
dec
dec
push
vorps
add
jl
mov
mov
inc
push
ins
hlt
push
sbb
(bad)
pop
inc
in
fwait
inc
jae
push
and
movs
push
ror
xor
adc
jb
push
dec
adc
scas
mov
fild
gs
jns
cmp
loope
xchg
fisttp
add
and
push
push
(bad)
hlt
add
mov
in
or
push
xor
mov
jns
outs
pop
rol
inc
pop
dec
cld
xor
shl
xor
ins
xchg
adc
test
inc
mov
pop
pusha
pop
jb
add
push
push
sbb
or
xor
sub
push
test
je
jns
push
xor
xor
test
pop
xchg
jne
mov
inc
and
fld
rol
or
adc
push
dec
mov
movs
adc
dec
or
push
into
dec
frstor
adc
inc
add
fs
mov
and
sbb
int
bound
out
je
fs
popa
out
mov
add
and
js
or
and
dec
and
push
mov
(bad)
jo
arpl
xor
ins
push
inc
jp
pop
push
aaa
push
mov
daa
cwde
retf
sbb
mov
cli
xor
add
(bad)
imul
xor
popa
or
cli
in
rol
or
nop
jne
pop
mov
xchg
adc
fld
or
xor
push
cmp
imul
push
or
sub
sahf
and
xor
pop
xchg
js
dec
int3
ret
adc
in
ss
shl
mov
sbb
xchg
jo
bound
push
dec
adc
adc
fiadd
adc
dec
jl
xor
sbb
mov
enter
mov
call
cli
mov
add
xor
adc
mov
mov
xor
jb
outs
push
xor
aam
dec
gs
adc
pop
ficom
adc
pushf
push
xor
or
and
and
enter
xchg
push
loopne
aad
xor
xor
dec
fwait
es
dec
jae
and
inc
fs
xchg
ret
sub
push
jl
retf
adc
push
retf
pop
xchg
inc
mov
dec
retf
add
inc
mov
push
and
icebp
mov
cmps
push
push
jb
push
mov
scas
and
or
pop
push
mov
popa
push
fdiv
pushf
mov
fmul
xor
push
mov
cmp
or
mul
stos
cwde
inc
adc
xchg
mov
fimul
mov
or
inc
xchg
retf
add
outs
shl
jbe
push
adc
push
arpl
nop
xor
mov
dec
jbe
sbb
adc
pop
xor
xchg
pop
push
sbb
jl
and
mov
dec
and
jmp
inc
dec
push
imul
fimul
pop
or
jne
mov
mov
xor
jns
push
xor
xchg
sbb
js
and
popa
push
and
push
adc
inc
xlat
and
push
rol
cmp
cwde
xchg
jge
adc
imul
dec
cwde
(bad)
jbe
je
sbb
mov
inc
and
adc
mov
in
js
mov
push
xor
mov
pop
sub
push
cmps
gs
enter
and
or
or
push
cwde
popa
adc
mov
push
cmp
pusha
jbe
ins
outs
pusha
mov
cmps
push
push
fcomp
int
cmps
and
ins
in
adc
xchg
push
addr16
shr
les
test
mov
ss
int3
push
adc
mov
mov
mov
fidiv
or
jae
xchg
pop
push
ins
push
inc
mov
aaa
xor
inc
cmp
inc
test
xor
dec
loop
pop
es
out
test
push
dec
(bad)
xor
sub
pusha
ins
pusha
or
xor
inc
fbstp
push
inc
add
and
dec
and
sub
data16
inc
jmp
adc
or
bound
in
inc
in
test
inc
cld
inc
inc
inc
outs
jo
push
push
cld
bound
ins
loopne
cmp
xchg
call
js
je
jp
mov
dec
sub
inc
add
loope
push
aaa
xor
add
test
push
or
and
jo
cmp
xchg
adc
(bad)
jp
jo
xchg
sub
(bad)
ja
mov
retf
or
mov
ins
jns
adc
in
test
adc
jmp
test
jb
aad
pushf
cs
gs
jo
or
test
adc
gs
(bad)
icebp
bound
and
inc
ins
push
addr16
sbb
mov
imul
xor
add
or
mov
xchg
adc
adc
cmp
neg
ins
or
mov
sbb
mov
jp
cwde
xchg
jo
push
mov
pushf
push
es
add
call
je
jno
loopne
push
test
cmp
or
and
jmp
adc
xor
or
mov
xor
xor
aam
mov
stos
and
push
test
adc
adc
ins
push
movs
add
pushf
mov
fs
sahf
dec
inc
ret
inc
push
jae
mov
test
add
imul
or
xchg
add
inc
mov
or
jo
jae
inc
aad
shl
aaa
and
add
jle
jbe
jno
dec
gs
push
sub
dec
pop
loop
mov
xor
bound
push
nop
jo
lods
aam
push
pop
lds
in
dec
repnz
and
je
inc
movs
add
into
arpl
ret
sub
mov
dec
aam
mov
push
jmp
adc
dec
or
push
adc
leave
imul
add
aam
adc
xchg
cmp
add
les
sbb
or
shl
push
out
xchg
mov
jbe
push
dec
and
add
dec
dec
call
push
dec
adc
push
call
add
fs
add
ret
and
or
fsubr
scas
retf
add
pop
sbb
sub
hlt
sbb
cmp
adc
push
adc
mov
mov
popa
inc
data16
cwde
sbb
ins
fadd
push
push
push
cmp
pushf
(bad)
bound
sbb
or
lods
mov
pop
jo
popa
inc
xchg
inc
test
loopne
push
jno
or
mov
push
mov
scas
ss
push
mov
loop
(bad)
mov
or
push
mov
push
add
es
sub
dec
mov
sar
arpl
add
sub
loop
dec
or
sbb
add
cli
dec
xor
sub
xor
xor
loopne
stos
pop
adc
pop
call
sbb
inc
and
cmp
aas
or
shl
dec
jbe
dec
jb
mov
inc
xchg
jno
dec
jns
xchg
push
mov
js
push
lds
xor
mov
inc
jp
fisub
(bad)
pop
js
or
inc
sar
movs
mov
mov
xchg
sub
js
add
adc
outs
inc
adc
loope
mov
xor
mov
xor
xchg
sub
ret
dec
dec
add
add
push
es
lods
or
sbb
ds
cdq
xchg
push
sub
add
aam
ins
push
mov
push
pusha
ss
and
add
sub
sbb
pusha
bound
test
movs
popa
dec
dec
inc
cmp
xor
cld
add
jo
inc
cs
or
mov
outs
bound
xor
fstp
add
retf
inc
add
sbb
mov
mov
jo
or
mov
adc
dec
add
test
fs
push
adc
(bad)
push
xor
sbb
daa
mov
or
sbb
imul
and
jp
cmp
shr
sub
and
xor
jb
cs
repz
push
xor
add
dec
dec
leave
sub
test
sbb
int3
pop
movs
xor
xchg
inc
push
test
aaa
lock
inc
and
push
stos
lods
cld
xor
dec
push
scas
push
aaa
movs
and
inc
xchg
push
test
pop
add
inc
pop
xor
push
out
jae
mov
fimul
js
int3
mov
inc
mov
adc
(bad)
add
or
jb
xor
xor
sub
int3
mov
gs
cld
cs
add
test
mov
jb
push
add
mov
xor
call
mov
adc
dec
push
adc
adc
dec
mov
push
fadd
cmp
xor
adc
or
adc
jo
and
and
dec
dec
jns
and
test
arpl
and
adc
sub
pushf
xor
pop
fsubr
outs
enter
nop
sbb
outs
ret
dec
push
add
mov
mov
jb
dec
cmp
mov
cmp
push
shl
xchg
cmp
dec
(bad)
dec
push
hlt
bound
dec
sub
jb
xor
adc
add
inc
cwde
rol
add
sub
or
imul
push
outs
ret
nop
repnz
sub
(bad)
jns
sbb
add
sub
and
js
sbb
push
jp
pop
pop
pusha
aaa
or
dec
inc
inc
and
inc
scas
adc
dec
dec
jbe
sbb
les
push
ficom
lock
push
pop
clc
mov
pop
sub
lea
dec
ror
xchg
movs
push
cwde
and
gs
add
inc
push
fcom
addr16
rcl
inc
and
in
mov
jo
js
ins
add
adc
jo
ins
mov
dec
sbb
sbb
adc
and
xor
dec
mov
push
and
jp
outs
jo
adc
push
adc
dec
nop
inc
cwde
and
pushf
xor
and
mov
and
movs
nop
dec
cmp
xchg
xor
sbb
pop
add
mov
jp
xchg
and
push
adc
or
mov
sbb
sub
inc
add
sub
add
mov
add
mov
mov
dec
inc
ins
movs
(bad)
xor
mov
inc
add
loopne
dec
adc
retf
mov
out
push
dec
push
or
push
and
adc
jno
stos
adc
push
aam
and
adc
add
ror
add
cmp
push
sub
and
mov
sub
sbb
or
and
mov
clc
pop
mov
push
jle
cmp
mov
pop
push
add
jne
dec
jo
sub
clc
add
ret
fs
jb
xchg
or
add
es
aad
mov
push
jne
popa
inc
mov
pop
test
mov
pop
and
dec
imul
stos
add
or
mov
or
clc
mov
dec
cwde
dec
pusha
adc
add
or
push
and
or
into
push
popa
cmp
and
xchg
inc
dec
ja
push
outs
shr
dec
xor
jae
ret
add
push
dec
jbe
push
jo
mov
ins
lods
outs
add
sbb
inc
inc
inc
mov
or
movs
inc
gs
in
aas
ror
mov
sbb
mov
jl
dec
xor
cmps
inc
rcl
je
push
(bad)
dec
add
sbb
inc
pusha
dec
or
out
rol
jbe
and
and
and
imul
dec
add
mov
repnz
add
ins
jne
inc
imul
or
or
call
loopne
cmps
or
sub
push
outs
jne
adc
dec
into
ret
mov
pop
pop
jae
or
xchg
xor
push
cmp
push
and
xor
fsub
ret
push
add
fmul
add
jbe
test
sub
dec
cdq
xchg
call
outs
push
into
push
jbe
into
jb
shl
xor
dec
inc
xor
and
adc
outs
sbb
mov
mov
cmp
xor
sbb
sub
dec
mov
aam
ficomp
push
popa
inc
ja
add
add
aaa
sub
push
adc
inc
inc
push
dec
mov
pushf
outs
xor
sub
inc
jmp
imul
test
push
test
fmul
push
push
push
enter
pushf
dec
dec
or
or
adc
and
jb
hlt
push
pop
imul
dec
jns
xchg
sbb
test
adc
inc
inc
or
sub
push
jle
dec
push
sbb
inc
or
cwde
sub
jb
xchg
sahf
enter
add
ins
xor
push
dec
dec
xor
dec
dec
sbb
mov
cmp
push
push
or
inc
push
(bad)
push
and
add
push
fs
pop
scas
test
fs
pop
arpl
xor
sub
repnz
pop
add
sub
test
pop
push
push
retf
push
or
in
ror
inc
dec
push
or
test
sub
sub
add
shl
sahf
or
add
sub
lock
or
enter
ins
add
es
or
pop
xchg
pop
push
sub
pop
or
or
fwait
popa
cmp
inc
inc
add
popa
adc
inc
sub
push
pop
dec
inc
in
dec
mov
and
xor
xchg
inc
mov
and
inc
sbb
je
jo
and
dec
push
pop
dec
pop
ja
rcr
xchg
dec
mov
adc
adc
xchg
mov
cmps
add
loopne
inc
inc
lea
pop
xor
push
je
lods
inc
pop
or
mov
mov
inc
outs
xor
js
shl
add
xchg
xchg
sub
daa
test
xchg
mov
je
loop
xor
xor
xor
jecxz
add
xor
push
jno
push
mov
je
sbb
fdiv
test
(bad)
ror
outs
push
sub
or
jns
adc
xchg
xchg
rcl
popa
ins
es
arpl
fisubr
out
mov
adc
mov
dec
and
inc
inc
mov
sub
fwait
pop
cmps
cmp
xor
jp
stos
inc
pusha
adc
test
xor
ret
xchg
push
pop
adc
stos
ss
movs
inc
hlt
or
fwait
cmp
loopne
push
mov
test
xor
jb
sub
or
pusha
enter
mov
cmp
jo
cmp
jo
cmp
gs
lock
sub
push
rol
imul
xchg
retf
xor
shl
push
dec
push
xor
sar
inc
push
pop
or
movs
not
je
and
les
xor
mov
xor
add
jo
int3
or
push
push
movs
adc
push
bound
dec
pop
shr
sbb
push
dec
xor
mov
jb
outs
imul
pop
dec
mov
adc
adc
out
push
or
aam
and
or
mov
imul
push
push
dec
sbb
xchg
xor
and
out
ja
pop
ins
or
and
jno
push
and
imul
dec
jp
fisub
push
in
add
lock
pop
xchg
dec
add
ret
movs
int
jb
out
retf
inc
dec
dec
(bad)
mov
test
inc
ror
mov
fs
movs
cmps
push
cmp
test
ror
(bad)
fisubr
or
dec
dec
sbb
mov
dec
and
xchg
add
aam
adc
ds
fidiv
dec
inc
mov
js
ins
add
push
cmp
ror
push
gs
sbb
mov
sub
test
inc
sub
cli
aaa
dec
mov
xchg
arpl
adc
jo
pusha
sbb
mov
stos
ins
popa
xor
jb
enter
add
push
dec
nop
stos
inc
jl
aaa
push
inc
and
test
in
ror
xchg
test
or
retf
or
jno
bound
or
addr16
pop
or
dec
adc
push
mov
add
(bad)
ins
lods
adc
addr16
mov
dec
ret
es
adc
shr
add
cmp
sub
push
jbe
sub
and
cmp
mov
data16
dec
inc
mov
fs
jb
add
rcl
pusha
inc
pop
outs
push
jp
arpl
mov
inc
cmp
fsubr
sub
cs
fdivrp
shl
dec
sub
sub
push
popa
daa
and
xor
imul
adc
pop
int
xor
mov
gs
shl
je
push
in
lods
mov
dec
and
loop
mov
mov
mov
xor
in
xor
inc
add
push
adc
test
fsub
test
sbb
sbb
and
add
jle
push
in
xchg
ror
imul
mov
mov
push
dec
or
stos
cmp
xor
je
jmp
jae
xchg
push
adc
aad
cmp
inc
xor
xchg
in
rol
inc
int
nop
ss
xor
pusha
test
ins
dec
xor
add
lock
or
inc
data16
pop
or
jmp
dec
mov
aaa
movs
fwait
or
dec
jnp
or
out
dec
jle
sub
add
adc
xor
and
dec
and
hlt
arpl
test
sbb
cli
cli
xor
mov
xor
pop
and
retf
add
push
dec
push
push
xor
dec
or
test
adc
nop
test
jmp
mov
and
cdq
test
inc
pop
sub
les
js
mov
imul
inc
dec
dec
and
xchg
push
loopne
fdiv
mov
inc
nop
adc
push
inc
popa
sahf
push
add
mov
pop
sbb
jbe
xor
or
push
pusha
and
test
sub
aam
add
rol
arpl
mov
ja
sbb
and
pop
call
jo
mov
loopne
nop
push
push
sub
mov
xor
int3
data16
fs
xchg
push
in
adc
sub
jo
sbb
cmp
sbb
add
cwde
test
add
cmp
push
xor
and
and
xor
mov
inc
xor
popa
sbb
mov
or
pop
movs
inc
dec
adc
push
cmp
imul
sbb
dec
nop
scas
xor
loop
popa
addr16
inc
cmp
jno
and
inc
mov
sub
scas
xor
imul
mov
and
inc
not
adc
sub
test
add
push
ret
ror
xchg
stos
push
pop
xor
sub
push
test
push
xor
or
(bad)
hlt
mov
add
pop
sub
retf
and
sbb
aam
sbb
cld
jno
sub
int
and
push
dec
dec
sub
dec
or
mov
push
(bad)
push
mov
js
sbb
sbb
pusha
inc
inc
dec
dec
dec
jmp
jbe
adc
xor
xor
outs
cwde
inc
xor
lods
inc
out
push
dec
sbb
or
or
rcl
cli
outs
popa
adc
outs
je
sbb
inc
xor
outs
add
inc
adc
inc
(bad)
loopne
mov
mov
int
test
mov
pop
leave
pop
mov
push
inc
outs
ja
jbe
daa
mov
sub
dec
ins
dec
jo
jo
inc
xor
test
jne
mov
mov
inc
dec
mov
sub
inc
je
pop
sub
inc
adc
add
in
sahf
xchg
sbb
push
adc
leave
jb
dec
sbb
enter
mov
scas
arpl
lods
jbe
lods
push
xchg
cmp
les
rol
xor
retf
in
mov
add
ins
es
inc
adc
push
or
retf
imul
xor
xchg
push
dec
outs
add
xchg
fsub
sbb
data16
sub
inc
loop
imul
data16
xchg
addr16
pop
gs
and
dec
lods
or
cmp
and
push
inc
fst
sbb
je
dec
mov
cmp
dec
jl
sar
xor
inc
test
jo
jmp
dec
addr16
push
or
cmp
inc
rol
or
test
loopne
pop
mov
xchg
cld
mov
sub
(bad)
popa
into
inc
and
mov
or
push
ins
add
dec
sbb
add
ret
mov
dec
inc
mov
and
je
or
jb
hlt
pop
mov
or
int3
in
inc
push
pusha
add
push
lods
popa
xor
cmp
inc
clc
mov
rol
dec
dec
inc
hlt
jbe
push
jp
adc
movs
bound
test
xor
jp
xor
adc
push
(bad)
dec
jno
dec
xchg
dec
sub
sbb
push
or
es
add
xor
push
xor
outs
add
in
sub
pop
mov
fs
imul
push
inc
cmps
push
shl
fs
or
cmp
fmul
or
or
ret
adc
icebp
adc
xchg
ret
inc
stos
mov
mov
mov
inc
or
mov
mov
and
data16
lods
and
in
jle
dec
loope
dec
jb
xchg
fcomp
add
xor
ins
pushf
into
cmps
shr
lea
js
ss
adc
in
ins
jns
pop
jo
div
xor
adc
push
push
cmp
inc
push
jb
fcom
fld
fsub
mov
sub
icebp
cmps
mov
and
mov
fisubr
mov
push
ret
ret
sub
fadd
loopne
inc
push
lods
jne
push
jmp
loope
jo
and
cmp
mov
sar
xor
mov
mov
pop
addr16
add
stos
mul
rcl
push
sbb
dec
xor
fidiv
jb
cmps
xor
shr
or
adc
add
test
dec
push
inc
pop
dec
and
cmp
sbb
add
push
jno
mov
push
xor
adc
mov
inc
cmp
sbb
push
dec
ret
movs
push
and
mov
mov
push
fs
adc
shl
jb
xor
cmp
xor
addr16
jl
call
dec
les
mov
imul
cmp
sub
and
shl
add
sub
fsubr
push
cli
push
(bad)
dec
test
xor
int3
ss
mul
mov
mov
inc
sub
cmp
movs
adc
ins
enter
clc
sbb
es
dec
outs
loope
adc
outs
or
xchg
loop
jb
push
outs
dec
adc
cmps
movs
add
mov
inc
enter
or
pop
push
gs
pop
add
jno
xchg
xchg
push
adc
xor
(bad)
jp
dec
ret
mov
push
ins
mov
xchg
sub
dec
or
sbb
mov
and
and
sub
xchg
add
call
xor
outs
dec
or
push
adc
loopne
add
pop
es
xor
add
push
and
or
mov
mov
inc
mov
pop
mov
inc
push
and
or
dec
push
inc
cs
push
enter
popa
shl
call
test
xchg
add
outs
arpl
push
ds
popa
sbb
ret
jmp
(bad)
mov
imul
sub
or
xchg
push
ins
leave
mov
cmps
in
push
call
cmp
out
dec
adc
adc
adc
add
xchg
push
xor
or
xor
aad
sub
cmp
mov
mov
outs
or
dec
push
inc
or
sbb
bound
mov
sbb
jbe
je
test
add
out
adc
inc
jnp
jbe
inc
mov
sub
out
push
gs
retf
xor
add
es
popa
sub
xor
adc
(bad)
mov
imul
cmp
push
and
loopne
pop
pusha
fnsave
call
push
shl
mov
xor
or
sub
scas
adc
popf
push
inc
aam
outs
fcom
out
and
or
or
sub
cmp
push
and
ins
sub
adc
pop
cmp
into
push
bnd
cmp
adc
mov
in
jmp
loop
or
sbb
jl
retf
shr
push
scas
adc
or
loop
add
nop
push
xor
and
pop
fs
mov
push
cs
push
movs
int3
scas
xor
popa
cmp
inc
mov
call
or
int3
inc
cmp
inc
mov
(bad)
sar
adc
test
pusha
and
pop
dec
pop
out
pushf
mov
aam
inc
sub
mov
je
pop
dec
xor
inc
xor
and
and
retf
sub
add
and
or
addr16
inc
pusha
sub
pop
sub
imul
sbb
mov
mov
scas
bound
mov
mov
arpl
jo
or
fs
clc
outs
imul
or
push
bound
sub
or
ss
fld
pop
mov
ss
push
push
push
and
sbb
mov
es
int3
push
push
add
rcl
and
dec
xchg
call
push
loopne
mov
cmp
or
sub
ss
cmp
(bad)
fs
icebp
inc
cmp
xor
inc
pop
pop
stos
cmp
into
mov
cmp
repnz
dec
push
push
ins
nop
and
or
push
cli
pop
mov
or
rol
or
push
xchg
jb
xchg
fwait
adc
sbb
inc
xchg
push
dec
and
mov
sub
push
cmps
inc
inc
xor
mov
imul
sub
mov
cmps
add
or
sbb
pop
or
pop
sbb
ret
ins
test
dec
xor
adc
pop
(bad)
scas
and
dec
xchg
xor
imul
(bad)
dec
mov
js
mov
mov
push
inc
xchg
add
mov
or
je
xor
mov
dec
jbe
out
fcom
mov
test
push
inc
inc
add
sub
adc
je
cld
adc
push
xor
aaa
xchg
rcr
test
aam
dec
cmp
cmp
mov
inc
repnz
ss
mov
loope
or
mov
cdq
sub
(bad)
mov
xchg
push
outs
push
add
addr16
nop
sbb
out
sbb
les
dec
push
pop
dec
inc
retf
aaa
pop
ficom
or
cmp
js
push
push
ret
imul
push
outs
into
inc
loopne
(bad)
leave
mov
je
test
and
mov
and
add
push
mov
pop
xchg
xor
xor
dec
cdq
push
hlt
popa
dec
push
mov
stos
aam
fld
cmp
loop
xor
inc
ss
call
mov
and
xchg
js
push
cli
add
inc
retf
aaa
je
dec
add
mov
and
cmp
sbb
jo
inc
inc
lds
loopne
sahf
inc
xchg
sub
xchg
adc
ins
sub
(bad)
push
add
sbb
arpl
inc
lods
sub
sub
pusha
addr16
(bad)
push
outs
(bad)
data16
movs
pop
pop
sbb
data16
cmp
mov
xor
adc
adc
std
mov
ins
test
js
imul
rol
dec
dec
adc
(bad)
(bad)
adc
xchg
sbb
ret
jb
ja
lods
scas
outs
push
jo
dec
mov
lea
aam
cld
inc
cmps
ins
cwde
push
mov
inc
and
cmps
or
and
pop
dec
sub
jle
or
xor
and
cmp
jmp
xor
sub
dec
imul
sbb
cmp
pusha
inc
add
sbb
push
ins
jo
dec
add
jl
push
adc
ss
jo
inc
test
stos
pop
repnz
gs
mov
ja
dec
dec
or
xchg
inc
repnz
nop
xor
or
pusha
bound
imul
scas
mov
push
dec
jbe
push
lock
push
mov
imul
jo
inc
dec
loopne
push
in
data16
ret
push
push
mov
add
add
jo
bound
stos
aam
xor
push
inc
add
sub
add
loop
push
clc
push
ja
rol
and
push
sub
scas
repnz
arpl
data16
sbb
push
ss
call
dec
push
outs
pop
sub
sub
sub
push
retf
rol
mov
add
call
adc
outs
add
dec
test
pusha
sub
and
bound
loop
push
xor
sbb
data16
add
xor
adc
(bad)
and
lods
push
js
mov
add
mov
dec
jb
xor
or
or
imul
sub
into
outs
jae
dec
or
ins
lock
into
xor
jp
add
loop
or
mov
dec
push
ss
push
sub
aam
or
xchg
movs
rcl
push
inc
mov
push
in
pushf
cli
sub
retf
and
mov
pop
xor
or
inc
ins
xchg
inc
adc
jo
push
push
adc
lods
pop
ja
jns
sbb
call
jb
inc
aaa
or
add
or
sub
push
push
add
and
addr16
dec
or
xor
jae
ins
xor
or
and
xor
or
call
retf
push
add
push
bound
es
sub
fcom
mov
or
sbb
ss
xor
push
jae
xor
adc
dec
dec
cmp
and
xor
or
and
arpl
add
mov
jae
call
loop
inc
xchg
push
loopne
sub
outs
xchg
ror
lods
mov
(bad)
loopne
fs
jb
xor
dec
mov
push
xchg
dec
add
mov
mov
xor
inc
cli
inc
jmp
push
je
dec
dec
test
dec
ins
push
inc
inc
or
push
or
mov
inc
add
sbb
xchg
adc
dec
sub
or
loopne
mov
push
fwait
dec
popf
add
ss
cwde
jbe
inc
or
add
scas
loopne
add
or
mov
sub
jmp
adc
dec
inc
xor
and
sbb
add
mov
dec
test
mov
arpl
push
sub
cmp
movs
and
mov
xchg
add
sbb
int
xor
cmp
inc
xor
and
(bad)
lds
add
xor
add
repnz
jp
jns
xor
call
popf
nop
adc
lods
imul
or
pop
add
imul
mov
cs
ins
jb
out
push
test
xor
push
jb
loopne
fs
xor
outs
into
xchg
es
sub
fs
inc
bound
and
or
xor
adc
cmp
xchg
mov
inc
and
lods
inc
push
cmp
shl
fs
jo
xchg
adc
push
ret
sub
in
push
inc
push
sub
or
pop
js
adc
int3
mov
repnz
xor
xor
or
je
push
mov
sbb
mov
push
aam
sahf
bound
pop
jl
mov
xor
lea
outs
push
shl
movs
adc
mov
loop
dec
and
cmps
ins
xor
inc
jo
bound
ret
xchg
loop
addr16
arpl
lods
or
push
ins
add
dec
xor
cwde
(bad)
or
and
xchg
jns
jb
xchg
sub
lods
push
retf
ror
dec
add
add
adc
mov
movs
xor
mov
jb
pop
ror
dec
mov
dec
add
fadd
loope
dec
push
inc
push
push
sub
add
cmps
push
lock
xchg
(bad)
mov
adc
dec
push
cmps
stos
xchg
sbb
int
inc
push
jle
jbe
test
enter
inc
push
ds
ret
xor
mov
push
mov
and
les
add
call
push
leave
add
mov
rol
rcl
jp
ror
or
xchg
push
sbb
sbb
sub
push
or
test
mov
outs
add
sub
jb
dec
sub
dec
mov
and
leave
cmp
sub
je
sub
and
push
inc
adc
clc
add
jns
and
out
aas
mov
ja
aad
push
and
mov
inc
loop
push
push
dec
ret
fiadd
xor
sbb
outs
sub
and
sub
adc
mov
and
adc
inc
shr
pop
test
and
jno
shl
enter
adc
nop
sbb
sub
push
ret
inc
and
add
xchg
aam
mov
mov
adc
xor
mov
adc
ret
xchg
dec
or
xor
nop
dec
fisubr
inc
adc
and
test
jns
xchg
nop
pop
bound
adc
add
out
add
mov
pushw
je
aam
and
fs
ss
dec
arpl
mov
inc
push
cli
add
mov
add
je
mov
xor
push
push
mov
or
or
inc
jp
mov
les
scas
sbb
pop
mov
xchg
ret
pushf
es
movs
in
sub
popa
test
inc
mov
push
push
cld
test
adc
xchg
js
add
enter
mov
push
inc
inc
pop
push
inc
sbb
or
(bad)
mov
add
dec
inc
pop
int3
cwde
add
dec
jns
movs
outs
jecxz
ja
gs
cs
adc
mov
in
(bad)
imul
inc
pushw
mov
xor
mov
test
jne
dec
gs
or
push
mov
xor
mov
add
push
push
and
cmp
shr
push
ja
test
xor
pop
sub
imul
jecxz
mov
test
dec
mov
xor
push
or
adc
rcr
pop
jp
jb
add
shl
pusha
adc
add
(bad)
mov
mov
jne
dec
call
mov
ret
sub
mov
inc
pop
adc
or
xor
xchg
push
xchg
gs
mov
loop
jo
jb
add
xor
jle
add
push
pop
sub
or
cmps
(bad)
cmp
sbb
ins
sub
sub
and
jp
dec
sub
sub
add
or
ds
movs
push
jl
out
aaa
mov
loop
xor
fadd
push
inc
adc
fs
bound
inc
mov
sub
or
(bad)
pusha
mov
cmp
xchg
leave
adc
mov
dec
cmp
jae
xchg
xchg
inc
test
xor
adc
mov
push
xor
mov
push
push
(bad)
dec
inc
rcr
rol
inc
and
test
jae
sub
mov
(bad)
je
mov
enter
mov
inc
fs
cmp
and
cmp
sub
dec
in
(bad)
leave
push
adc
sbb
fadd
or
popa
ss
push
and
pop
mov
dec
push
jp
fst
jb
push
or
push
and
push
clc
mov
bound
test
inc
add
loop
aam
dec
dec
out
bound
cmp
dec
inc
xor
lea
test
call
cdq
mov
mov
fsub
ret
xchg
xchg
mov
pusha
je
int3
and
dec
ror
pop
sub
sub
cmp
or
arpl
jo
mov
dec
pusha
adc
mov
sbb
xor
mov
dec
retf
dec
cmp
adc
mov
inc
xchg
fstp
cmp
push
cwde
sbb
popa
sub
(bad)
enter
cmp
pop
ret
fs
cld
arpl
push
leave
adc
jb
mov
inc
inc
sub
popa
in
xor
add
mov
rcl
or
push
mov
jae
dec
bound
or
mov
push
push
lods
push
test
jb
js
add
ficomp
dec
adc
inc
repnz
stos
push
or
push
fs
xor
xchg
fs
sub
inc
mov
(bad)
xor
push
inc
push
pop
loopne
shr
retf
sbb
mov
inc
cmps
xchg
cdq
adc
or
inc
test
(bad)
pop
mov
fs
fimul
dec
scas
add
es
adc
(bad)
call
and
push
cwde
cmp
pop
sbb
mov
(bad)
push
pop
mov
xor
test
push
push
and
and
adc
push
cmp
or
xchg
jbe
sub
push
adc
xchg
xor
mov
pop
icebp
xor
jo
cmps
inc
push
scas
in
dec
fisubr
inc
sub
push
jp
add
inc
loope
add
mov
ret
xor
add
dec
sub
xor
jno
mov
hlt
xor
fdiv
and
mov
or
imul
dec
push
dec
push
xchg
sbb
inc
or
dec
inc
dec
inc
adc
push
sbb
pop
xchg
dec
sbb
add
scas
or
mov
pop
and
fs
or
nop
int3
and
int3
test
xchg
pushf
push
pop
sahf
popa
or
dec
mov
push
test
dec
js
add
fadd
xor
mov
ins
leave
inc
cmps
mov
aaa
gs
add
xchg
adc
or
push
xor
(bad)
cli
dec
mov
push
cmps
gs
and
imul
xchg
in
js
dec
dec
cdq
and
dec
leave
jbe
add
sub
stos
xor
or
sbb
shl
xchg
jbe
je
das
push
jb
inc
test
adc
xor
dec
inc
pop
fisub
shl
les
pop
or
int
sbb
(bad)
ss
stos
mov
sub
xor
sbb
mov
in
clc
sub
dec
lock
mov
xchg
xor
push
add
les
xor
push
inc
push
and
or
mov
(bad)
push
inc
aaa
cmp
inc
push
push
cwde
jns
add
push
push
adc
and
or
data16
sbb
adc
mov
jne
sub
xchg
ss
inc
sub
sub
sub
add
or
mov
jno
cmp
xchg
adc
pop
xor
adc
mov
(bad)
push
jns
dec
ror
xor
cmp
popa
jns
or
mov
dec
xchg
push
test
dec
or
push
push
ja
jo
mov
call
int3
call
adc
push
test
ins
test
sub
mov
cmp
in
push
outs
call
xchg
inc
adc
fcom
outs
push
icebp
inc
mov
push
push
cwde
push
dec
add
arpl
dec
push
xchg
adc
or
imul
push
movs
sbb
xchg
pop
es
push
adc
pop
and
mov
dec
mov
(bad)
jb
sub
and
mov
xchg
mov
aad
popa
pusha
shr
and
jo
push
xor
ja
adc
call
xchg
inc
or
cmp
push
xchg
inc
ret
fs
movs
stos
add
inc
xor
push
data16
add
repnz
sub
push
fdiv
and
int3
pop
cmp
sbb
sub
inc
je
xchg
mov
sbb
fs
fsub
aam
adc
ss
stos
adc
xor
fisub
sub
inc
cmp
aam
dec
sub
repnz
xor
imul
inc
jo
inc
aad
popa
add
xor
xchg
push
jle
push
xchg
xchg
rcr
ins
ins
or
jne
inc
push
add
mov
outs
bound
dec
dec
and
loop
movs
inc
xchg
ss
xor
addr16
sbb
xchg
inc
in
cwde
ds
jae
adc
add
adc
pop
aad
inc
imul
fcom
shl
xchg
adc
jmp
sbb
rol
ins
dec
add
mov
adc
push
stos
inc
or
cmp
dec
pushf
jns
and
push
push
inc
je
out
pop
push
cmps
mov
mov
dec
je
aaa
mov
xor
inc
or
imul
dec
inc
ins
test
sbb
dec
inc
push
jp
xchg
push
es
inc
in
mov
sub
xchg
and
xchg
and
mov
xor
xchg
shl
jle
xchg
xor
push
or
pushf
push
sbb
add
mov
or
test
inc
sub
or
sub
jo
push
cmp
sub
mov
imul
mov
stos
mov
push
dec
push
dec
aas
call
ins
and
xor
ins
ret
scas
bound
mov
push
pop
push
outs
jp
dec
xor
rol
sub
cmp
gs
sub
(bad)
jo
sub
adc
retf
shl
outs
hlt
jo
jo
imul
into
xor
rol
test
add
mov
popa
push
xchg
(bad)
jb
dec
fidiv
inc
pop
cld
push
aaa
xor
stos
pop
inc
pop
add
mov
fs
or
add
ja
inc
xor
inc
dec
cwde
inc
sahf
or
inc
dec
add
fs
add
dec
cmp
dec
dec
add
xchg
es
retf
pop
cmp
jb
pusha
inc
pop
add
push
sahf
inc
data16
adc
mov
inc
pop
fs
add
(bad)
ss
add
pop
les
dec
shl
adc
(bad)
sub
pop
int3
mov
xor
ds
jo
popa
jo
add
dec
bound
mov
dec
mov
mov
inc
xchg
push
xor
lods
sbb
inc
ins
adc
inc
inc
fdiv
pop
and
fadd
dec
or
inc
movs
mov
jne
push
shl
dec
push
mov
pop
or
xchg
outs
cmp
inc
dec
popa
push
rcl
push
and
jb
inc
mov
jl
imul
ficom
pop
mov
dec
sub
xchg
xor
jl
jo
rcr
dec
outs
inc
ds
fiadd
aam
sub
pop
dec
add
cld
inc
mov
cmp
pop
dec
xchg
inc
adc
stos
imul
push
add
jno
int
retf
mov
inc
dec
loopne
movs
push
sbb
cld
add
xchg
js
pushf
and
ins
fidivr
add
fs
add
gs
or
cmp
nop
and
push
stos
inc
and
xor
sbb
or
add
shl
cmp
cld
les
or
adc
dec
repnz
addr16
push
outs
sbb
push
imul
out
inc
popa
dec
push
fsubr
nop
sbb
adc
add
sub
jb
hlt
inc
call
xor
push
and
xchg
xor
ja
pop
mov
loopne
inc
fs
dec
ins
dec
shl
xchg
jle
outs
push
jl
ins
mov
push
mov
nop
sbb
clc
jbe
mov
push
dec
jb
push
sbb
ins
cmp
pusha
adc
adc
jae
mov
outs
pop
inc
outs
xchg
ret
data16
jl
xchg
dec
push
js
pushf
jo
shl
push
fdiv
xor
push
adc
pop
outs
push
mov
or
sahf
sub
push
xchg
enter
dec
xor
xchg
leave
inc
jne
xor
or
adc
lods
inc
mov
push
imul
mov
mov
retf
ja
jb
push
in
push
xor
sub
xor
adc
xchg
out
into
cmp
add
outs
mov
inc
xor
add
adc
fdivr
fsubr
push
cdq
movs
pusha
push
dec
push
jp
dec
pop
pusha
mov
xor
mov
mov
ficom
or
fs
sbb
adc
add
loop
adc
mov
push
inc
cwde
int3
xchg
or
dec
mov
lea
add
xchg
pusha
jmp
rcr
sub
push
pop
sbb
jl
sbb
nop
dec
loope
ror
dec
push
call
xor
adc
movs
dec
add
call
inc
xor
jo
jbe
inc
dec
adc
jl
rol
sub
addr16
and
cmps
mov
dec
stos
pop
test
arpl
push
add
add
xchg
dec
pusha
push
xor
or
leave
xor
in
and
jo
fisubr
dec
jno
bound
in
xor
cmp
fmul
or
xchg
adc
inc
jo
push
repnz
je
dec
and
push
(bad)
call
dec
cmp
mov
inc
dec
add
rcl
shl
inc
mov
push
inc
add
and
and
bound
bound
sbb
xor
cmp
jb
or
gs
inc
and
mov
dec
jae
movs
fs
dec
dec
and
push
ss
mov
je
inc
add
or
sub
js
dec
movs
xor
int3
popa
inc
mov
mov
push
add
xor
cmp
push
int3
mov
adc
push
or
test
xor
and
mov
(bad)
sbb
imul
push
add
sub
dec
lds
mov
xor
fs
add
sahf
call
mov
ja
jb
retf
mov
push
(bad)
dec
add
xchg
adc
sub
into
mov
push
mov
test
dec
sbb
movs
mov
dec
es
add
inc
push
in
push
inc
repnz
test
inc
inc
scas
sahf
xor
dec
inc
add
jae
ret
data16
dec
aam
or
cmp
or
adc
sbb
sub
ror
xchg
mov
pop
bound
inc
fnsave
ss
jne
fs
adc
jbe
ins
xor
jo
cmp
cmp
pop
test
adc
or
push
sahf
test
fsubr
int3
mov
stos
push
les
mov
jle
neg
cli
pop
dec
pusha
mov
shl
xchg
fs
ror
lods
fbstp
push
push
sbb
or
sbb
and
or
adc
xor
es
cli
out
stos
pop
or
xor
loop
add
test
push
inc
dec
jle
jae
adc
bound
dec
or
call
jle
outs
inc
shr
and
(bad)
inc
add
sub
pop
mov
inc
dec
cs
inc
xchg
(bad)
cmps
int3
fdiv
inc
xchg
hlt
xor
jb
add
retf
inc
(bad)
jne
pop
inc
pop
add
jb
sbb
ins
add
xchg
push
stos
js
(bad)
push
call
jl
sbb
mov
ins
push
dec
cmp
dec
inc
push
sub
dec
scas
cmps
or
mov
adc
les
inc
jp
or
push
xchg
push
shr
push
pop
add
test
push
dec
aam
push
adc
loop
inc
pusha
or
xor
repnz
inc
push
popa
js
ja
mov
mov
ss
dec
or
js
xchg
or
ror
imul
rol
push
popa
dec
add
and
aam
mov
cmp
cs
dec
rol
mov
xor
pop
or
mov
ror
cmp
adc
sbb
adc
pushf
out
inc
push
and
sub
ficomp
movs
adc
out
cmp
dec
ret
dec
data16
mov
add
mov
adc
add
pop
push
rcl
ret
push
push
xchg
inc
mov
or
imul
add
dec
cmp
js
inc
gs
or
fs
adc
imul
fimul
cmp
dec
rcr
ficom
ss
xor
outs
push
push
pusha
and
inc
sbb
mov
sbb
push
jmp
push
ret
xor
and
and
inc
mov
xor
jp
test
sub
and
shr
push
sbb
je
arpl
inc
in
or
je
push
popa
sbb
push
dec
fcmovbe
and
inc
les
push
aam
rol
xor
mov
mov
xor
push
cli
loopne
pop
stos
sbb
or
test
bound
adc
gs
adc
imul
shr
jo
out
ret
jbe
push
fcom
rol
adc
dec
rol
rcl
mov
int3
ror
ins
nop
bound
out
fs
inc
push
add
loopne
movs
xor
push
sbb
sahf
mov
xchg
cmp
repnz
ins
mov
enter
adc
jbe
fidiv
ss
xor
inc
jne
add
test
xchg
push
mov
mov
stos
ins
ret
dec
jmp
nop
adc
ja
xchg
test
push
imul
adc
mov
or
sbb
inc
sub
push
dec
jbe
jns
pop
push
xor
inc
sahf
xchg
out
data16
push
daa
and
call
xchg
sub
sahf
cwde
inc
sbb
stos
lock
push
push
add
add
xchg
xchg
sub
inc
bound
push
mov
lods
enter
adc
push
aam
inc
pusha
mov
in
fmul
stos
inc
xor
inc
push
mov
mov
sbb
push
push
fs
adc
push
mov
pop
sub
push
dec
sbb
outs
mov
data16
push
and
sbb
push
mov
fadd
inc
inc
mov
push
movs
jb
bound
inc
inc
pusha
xor
pop
push
les
jb
xor
push
xchg
mov
push
sub
retf
jle
push
inc
jo
or
bound
pop
or
hlt
sbb
or
test
data16
ret
hlt
mov
push
cs
xor
push
fs
adc
stos
and
push
push
js
shl
cmps
mov
push
mov
sbb
push
sub
call
inc
cli
imul
xchg
push
add
dec
xchg
imul
push
inc
pop
lea
inc
or
ins
out
and
addr16
push
xor
mov
call
ins
inc
cdq
adc
adc
ds
adc
outs
cli
pushf
inc
add
ss
adc
fidivr
adc
dec
mov
mov
pop
imul
add
inc
push
push
or
mov
jb
inc
inc
push
sbb
xchg
mov
adc
ss
push
push
adc
xor
push
mov
mov
bound
inc
out
cmps
imul
mov
and
imul
xor
and
ret
aam
bound
ins
add
cmp
xchg
es
push
jo
sbb
adc
shr
pop
es
adc
dec
retf
arpl
push
mov
xor
xchg
push
xor
fidiv
or
or
and
movs
data16
xor
cmps
add
dec
and
and
pushf
and
bound
adc
xor
add
fimul
jb
jp
adc
movs
push
aaa
mov
mov
dec
ret
mov
push
inc
push
loope
jae
mov
and
sub
dec
mov
rcr
xor
or
bound
int3
inc
push
sbb
push
inc
adc
jle
cmp
adc
lea
jae
addr16
xor
xchg
scas
dec
inc
cmp
push
and
lea
push
inc
dec
push
lods
dec
inc
loopne
les
pushf
jno
test
push
mov
popa
mov
lods
jae
jo
jno
pusha
inc
or
inc
mov
rcl
push
dec
int
dec
mov
je
hlt
(bad)
nop
imul
xchg
mov
jecxz
movs
popa
lods
gs
add
push
sbb
enter
push
xchg
push
add
mov
push
xor
adc
jle
and
add
cwde
mov
cmp
xor
ss
mov
push
pop
les
and
push
stos
dec
dec
bound
js
fadd
add
rol
retf
inc
enter
dec
inc
push
adc
adc
sub
add
sub
(bad)
jb
nop
xor
lock
push
inc
add
dec
push
cdq
push
fimul
mov
rcl
and
les
ins
je
mov
cmp
inc
popf
test
data16
aam
pop
inc
adc
xor
stos
inc
push
fwait
push
xor
xor
and
or
mov
ss
dec
dec
adc
and
mov
sbb
push
pop
jbe
inc
ss
aaa
adc
inc
pop
sbb
pop
pop
or
jp
and
sub
(bad)
add
xchg
sbb
xchg
aam
xor
dec
dec
dec
add
test
push
inc
inc
dec
int3
xor
ficomp
push
cli
jb
mov
mov
ss
jo
xchg
pop
ss
jns
jns
add
sbb
mov
mov
sbb
dec
and
jp
mov
test
imul
ret
mov
test
inc
ins
jo
stos
add
push
mov
or
call
xor
mov
and
es
add
jo
bound
push
pop
ss
and
inc
sub
xor
sbb
test
mov
call
dec
inc
sbb
xor
push
mov
pusha
addr16
push
push
add
push
xor
mov
mov
pusha
dec
jne
jno
push
jae
add
add
mov
dec
cmp
or
push
or
pushf
dec
push
es
dec
push
jo
inc
call
out
add
adc
fs
int
or
jp
test
(bad)
mov
xchg
mov
inc
and
sbb
push
mov
push
and
inc
sbb
aaa
popf
add
mov
dec
mov
pop
adc
stos
pop
xor
xor
movs
es
ret
cmp
mov
mov
and
scas
pop
mov
add
mov
cmp
imul
and
push
or
add
retf
push
cld
jne
adc
jp
outs
enter
cmp
add
imul
mov
xchg
push
sbb
(bad)
sub
jb
enter
mov
push
nop
ins
(bad)
sub
in
and
sbb
mov
popa
inc
dec
push
mov
and
mov
and
push
inc
cmp
loopne
pop
aaa
int3
pop
(bad)
lods
ficom
inc
push
pop
mov
mov
push
cwde
gs
(bad)
xchg
add
int3
dec
ror
add
xor
mov
pop
adc
xchg
aaa
dec
xchg
int
enter
ficom
popa
xchg
push
inc
pop
mov
pop
cmp
or
and
ds
sahf
nop
or
xchg
adc
nop
into
add
or
or
test
jo
jp
add
pop
mov
push
add
pusha
jne
shl
in
aad
dec
jno
or
xchg
dec
xchg
lods
sbb
mov
mov
lea
aaa
push
cmp
cmps
cmps
push
and
xor
add
adc
inc
ret
ret
add
fs
mov
xor
inc
add
fwait
adc
push
push
test
sbb
push
push
out
xor
dec
push
mov
addr16
xchg
xor
xchg
dec
imul
and
inc
in
cmp
jp
movs
mov
sahf
sbb
xor
jl
adc
call
sub
push
push
and
jno
test
or
push
rol
sub
add
inc
add
jb
nop
and
(bad)
mov
add
inc
dec
(bad)
xchg
aad
arpl
imul
mov
push
inc
(bad)
imul
sub
dec
pushf
aaa
inc
xor
cmp
js
jno
adc
jo
jp
mov
xor
sbb
or
pop
inc
fst
lock
jbe
add
mov
cmps
sub
xchg
dec
test
push
xchg
add
jle
adc
or
or
mov
lods
or
ja
cmp
shl
jo
cs
push
cli
mov
add
xchg
push
cmp
mov
sahf
outs
pop
fcom
aaa
jne
imul
adc
cdq
add
xchg
sbb
jmp
xor
push
adc
pusha
push
inc
dec
inc
xchg
push
xchg
sar
sbb
jb
rol
sahf
mov
mov
and
xchg
or
add
dec
loopne
pop
push
jle
cld
push
int3
cs
dec
push
push
xchg
inc
xor
and
jp
call
rol
inc
aam
cs
repnz
mov
fadd
ficomp
sub
xchg
jno
add
mov
mov
inc
add
cwde
adc
xchg
sbb
retf
inc
jo
sbb
jl
ins
ja
ret
pusha
xor
popa
(bad)
adc
inc
call
mov
add
push
call
push
inc
rcl
xchg
repnz
add
sub
or
aam
push
fs
xor
push
popa
sbb
outs
ja
or
icebp
cmp
dec
bound
push
cwde
lods
dec
bound
mov
pop
xor
adc
push
(bad)
push
cmp
inc
xor
stos
inc
ficom
xor
cld
inc
push
add
cs
and
mov
in
leave
push
and
call
sbb
retf
sub
push
xchg
in
loop
xchg
sub
xor
aam
rcr
imul
mov
xor
mov
es
pusha
imul
stos
and
aaa
dec
pusha
xchg
lea
sub
mov
stos
lods
cmps
in
sbb
dec
rol
stos
and
add
sar
adc
and
fdiv
xchg
and
push
dec
mov
xor
rcl
dec
inc
xchg
adc
fcom
push
sub
xchg
js
sahf
xor
mov
clc
fs
movs
mov
mov
call
dec
enterw
call
pushf
xchg
aad
ins
xchg
cmp
data16
push
xor
dec
mov
sbb
and
shl
xchg
adc
and
add
popa
sub
in
add
aaa
leave
pusha
cmp
div
adc
dec
movs
dec
cs
sub
jle
cwde
dec
jae
inc
dec
adc
mov
popa
test
xchg
pop
fimul
cmp
add
xor
je
mov
push
xor
xchg
and
mov
push
enter
aaa
cli
ins
aaa
push
cli
fisub
sub
add
adc
ret
push
xor
and
inc
test
inc
xchg
xor
sub
and
sbb
imul
adc
inc
adc
mov
sub
imul
dec
cmp
and
clc
cs
push
test
inc
xor
mov
dec
sbb
jno
xchg
and
mov
mov
mov
(bad)
out
fsubr
jns
nop
adc
sub
adc
push
pop
(bad)
push
xor
inc
test
jo
dec
imul
mov
popa
adc
and
jmp
push
push
and
inc
push
inc
push
jmp
mov
ret
add
fiadd
push
nop
ret
mov
add
inc
les
mov
in
ss
inc
push
and
cmp
js
fsubr
adc
xchg
inc
dec
fld
or
cmp
(bad)
sub
or
push
xchg
add
sbb
data16
add
ss
cwde
or
lea
sbb
or
push
xor
es
inc
gs
dec
cwde
shl
inc
stos
adc
inc
inc
adc
pusha
out
push
mov
lods
push
cld
pushf
jo
js
and
inc
mov
popa
mov
bound
ficom
push
jb
js
cmp
adc
mov
mov
and
add
and
mov
jp
cmp
cmp
cmp
cmps
push
test
push
push
or
add
dec
dec
inc
sbb
rcr
push
mov
(bad)
out
xchg
shl
sub
es
xchg
xchg
mov
inc
and
mov
jle
xor
sub
push
cmp
jbe
lock
add
and
and
test
inc
test
inc
aam
imul
test
xchg
adc
jb
rol
xchg
jmp
movs
js
push
das
mov
xchg
cmp
mov
xchg
xchg
xor
sbb
je
in
xor
mov
outs
out
adc
cwde
pushf
imul
xchg
adc
ins
cmps
mov
dec
fs
dec
jo
shl
xchg
jbe
push
inc
and
dec
or
add
push
xor
fs
or
loopne
xor
call
add
xor
add
outs
cdq
sbb
push
xchg
ins
or
adc
sub
add
sub
(bad)
test
adc
dec
inc
jb
inc
and
pop
dec
stos
xor
and
pusha
pop
jb
pop
and
fadd
or
inc
dec
inc
mov
xchg
popa
gs
inc
test
and
pop
sub
shl
add
fs
sub
pop
xchg
outs
adc
xor
xor
jb
fdiv
sbb
es
dec
xor
dec
nop
mov
adc
fs
cmp
imul
cwde
aam
sub
sub
inc
push
int3
push
int3
(bad)
jbe
inc
retf
inc
bound
pop
mov
jo
rcl
jae
push
in
ss
dec
int3
jl
dec
dec
sub
add
mov
outs
data16
push
xchg
add
cli
push
imul
cmp
dec
sbb
inc
sbb
ret
push
xor
jl
je
stos
movs
mov
or
jns
test
push
clc
es
bound
xor
ins
ret
popa
push
hlt
(bad)
cdq
stos
mov
push
push
sbb
cmp
hlt
dec
mov
cmp
jl
xchg
pop
test
dec
add
lods
mov
inc
or
dec
fs
retf
imul
mov
or
cmp
dec
and
mov
mov
add
addr16
stos
or
or
push
adc
mov
dec
xor
mov
add
pop
adc
jo
add
inc
sbb
push
inc
dec
pop
dec
pop
xchg
rol
add
or
js
idiv
push
popa
fimul
inc
rol
mov
cld
aam
xor
cwde
sub
lods
dec
dec
adc
mov
mov
loopne
out
mov
popa
pop
clc
mov
test
mov
data16
dec
dec
dec
gs
and
adc
(bad)
jb
sub
mov
arpl
sbb
sbb
nop
push
inc
push
mov
shr
push
cmp
sub
fiadd
mov
test
es
xor
add
and
cmp
adc
(bad)
arpl
stos
xor
or
movs
cmps
and
push
and
push
or
js
xchg
movs
dec
retf
fdivr
ja
mov
adc
xchg
add
and
push
xchg
cmp
adc
fcom
mov
sub
xor
test
xor
xor
adc
push
add
outs
loopne
jbe
jbe
popa
mov
xchg
adc
popa
push
inc
(bad)
sbb
add
or
xor
(bad)
ret
push
xor
push
xor
ss
xor
ins
ror
retf
adc
sub
or
push
jp
push
cmps
push
ja
ret
xor
cld
adc
nop
and
xor
jno
sub
adc
mov
jmp
sbb
fimul
call
dec
cs
addr16
inc
movs
add
pop
push
in
lods
loopne
les
push
inc
dec
add
add
sub
push
xchg
lods
sub
xor
pusha
adc
dec
push
sub
bound
call
cwde
mov
retf
push
test
push
mov
and
sub
call
push
pop
inc
outs
mov
movs
xor
inc
inc
gs
inc
and
cld
les
loop
inc
or
push
int
ret
inc
shl
adc
enter
add
or
aam
pop
or
mov
mov
ret
stos
jmp
jo
ss
mov
popa
mov
jne
mov
or
scas
lahf
xchg
aam
arpl
push
js
sub
push
popa
imul
sub
dec
pop
push
push
xchg
xchg
(bad)
aad
push
mov
cmp
mov
ror
cmp
dec
mov
and
imul
adc
out
outs
shr
fs
jae
push
push
xor
dec
add
outs
add
adc
clc
dec
and
sbb
xchg
adc
or
or
js
inc
adc
dec
aaa
mov
push
stos
or
xor
shl
jl
je
sub
xor
fsubr
shl
add
inc
or
or
sub
xchg
push
les
inc
sub
jno
nop
stos
pop
inc
pushw
or
adc
cwde
(bad)
dec
movs
les
shl
fsubr
in
and
xchg
cli
xchg
push
dec
pop
or
dec
aam
mov
inc
xor
xchg
aam
retf
mov
je
outs
dec
sub
dec
ins
mov
pop
and
clc
(bad)
in
xor
or
cs
push
mov
xor
outs
or
xchg
pusha
push
ss
add
les
xor
imul
mov
inc
jb
sub
ror
pop
push
pusha
add
bound
jo
push
sub
dec
movs
adc
cmps
add
cli
dec
mov
stos
or
push
and
add
fsubr
push
sub
lock
pusha
dec
add
mov
pop
xchg
fsub
jno
je
dec
cwde
adc
nop
pop
inc
adc
dec
ds
jo
dec
nop
repnz
pop
jo
add
or
xor
nop
dec
adc
movs
add
add
in
push
enter
push
adc
or
in
adc
dec
gs
lock
or
shl
xchg
and
and
call
xor
inc
dec
int3
push
xor
and
fst
bound
inc
rcl
xor
test
inc
inc
or
add
mov
jp
dec
cmp
ja
xchg
or
and
add
and
mov
push
push
inc
and
enter
call
sbb
in
cs
dec
sbb
inc
push
push
stos
xchg
test
out
mov
call
test
mov
or
test
cmp
fsub
clc
test
cli
dec
xor
arpl
inc
lock
xor
mov
test
outs
dec
xchg
push
outs
or
pop
jae
out
xor
dec
cs
jbe
cmps
je
push
sbb
(bad)
movs
mov
push
cmp
xchg
add
pop
fwait
inc
data16
add
mov
mov
push
xchg
xchg
pop
fsub
push
push
add
xchg
adc
push
sbb
dec
sbb
dec
bound
mov
pop
push
test
inc
push
add
mov
push
xor
push
test
inc
int3
inc
and
and
mov
adc
push
test
cwde
mov
xchg
cwde
stos
rcr
jbe
test
ins
xchg
pushf
ins
inc
mov
and
xor
aad
dec
dec
inc
inc
mov
xor
push
fdiv
jb
inc
xor
and
repnz
sub
push
nop
js
mov
mov
inc
mov
fidivr
push
and
xchg
sbb
inc
les
data16
dec
add
ret
dec
retf
data16
dec
dec
and
push
nop
test
inc
xor
imul
push
ret
mov
push
xchg
(bad)
lods
adc
in
push
add
jecxz
jb
cmp
nop
cdq
movs
sbb
dec
mov
sub
mov
inc
push
add
mov
call
or
push
jp
retf
dec
movs
or
test
out
ss
add
push
ss
rol
pop
push
or
dec
xchg
ret
gs
or
sub
pop
or
adc
sub
bound
dec
fadd
sub
jb
outs
ret
xor
xor
bound
cs
push
sbb
imul
cmps
xor
dec
push
repz
or
jle
ins
xor
shl
aaa
test
mov
fsubr
scas
push
inc
nop
xor
test
jbe
les
inc
lods
nop
dec
ja
cmp
sub
mov
sub
push
pop
ins
cmp
pop
push
xchg
inc
sub
adc
pop
jo
sbb
dec
fistp
outs
jbe
outs
jbe
mov
loopne
ins
push
es
push
mov
jle
ds
or
push
push
movs
and
js
mov
push
sbb
mov
push
inc
add
jp
inc
xchg
call
push
xor
fidiv
sbb
xchg
mov
retf
inc
push
xchg
bound
push
cmp
xchg
dec
mov
or
and
dec
pusha
pop
fsubr
in
cmp
stos
adc
hlt
inc
inc
mov
xor
cmps
xchg
dec
fimul
pusha
ret
bound
xchg
inc
lods
xor
test
and
inc
pop
lods
add
push
jns
es
dec
ins
out
push
adc
push
nop
mov
push
adc
pushf
push
retf
popa
xchg
pusha
or
pusha
or
aaa
inc
mov
and
push
xchg
mov
outs
rol
cmp
xor
inc
ss
imul
aaa
cmp
dec
sbb
push
test
xor
test
pushf
sub
sub
push
inc
cs
cwde
mov
and
or
lods
xadd
mov
and
lea
xor
dec
or
stos
popa
or
sub
test
shl
add
lods
outs
inc
pusha
das
mov
and
pop
sub
cmp
enter
cmp
outs
repnz
inc
and
rcl
jb
cmp
xor
ins
gs
or
cld
sub
or
or
inc
sub
jno
dec
jo
ss
cmps
push
sub
inc
ja
jbe
(bad)
popa
or
pop
jmp
or
outs
pop
cmp
push
pop
xchg
cmp
add
sub
xchg
push
lods
inc
aaa
mov
add
push
dec
jmp
enter
sub
or
mov
dec
pop
sub
or
xchg
push
bound
xchg
adc
ficom
push
mov
js
retf
mov
js
icebp
sub
push
or
and
push
sbb
dec
push
(bad)
cmp
and
in
dec
sub
xor
mov
movs
dec
hlt
int
nop
sbb
and
and
fiadd
outs
inc
pusha
xchg
test
ins
inc
pop
fdiv
jp
bound
and
or
mov
mov
fdiv
cmps
or
scas
scas
outs
jecxz
mov
(bad)
addr16
jbe
or
je
adc
imul
inc
push
mov
(bad)
cmp
adc
idiv
adc
push
push
sbb
dec
push
js
dec
inc
and
mov
and
sub
jl
inc
call
jp
xor
ins
add
test
sub
jle
jno
pusha
cwde
sub
bound
dec
inc
outs
out
xor
and
add
(bad)
adc
dec
pop
push
add
outs
pop
data16
push
pushw
fs
push
dec
leave
pop
mov
or
imul
add
sbb
add
cwde
nop
ror
addr16
outs
xchg
adc
dec
enter
add
xor
inc
sbb
jo
mov
jo
cmp
push
ja
fsub
push
and
add
ret
mov
dec
mov
inc
test
scas
jp
push
pop
xchg
add
popa
inc
in
pusha
outs
inc
add
cli
jo
es
call
in
ss
inc
in
cwde
ins
ins
enter
repnz
mov
jo
ins
data16
xor
xchg
ret
sbb
xor
sbb
outs
push
outs
xor
or
ret
dec
jae
adc
mov
daa
movs
dec
les
ret
xor
sub
and
rol
ins
cmp
inc
movs
mov
sbb
fs
jb
dec
cmps
jb
movs
dec
push
mov
ss
xchg
push
ss
mov
imul
lea
sub
push
addr16
inc
adc
dec
add
mov
mov
pop
aad
dec
push
mov
or
leave
call
inc
inc
and
jo
cmp
in
xor
fwait
push
and
sub
xor
inc
mov
ins
push
mov
push
or
and
add
xor
and
gs
inc
and
pushf
(bad)
push
push
fwait
or
adc
jl
les
shl
rol
addr16
popa
mov
adc
xchg
jp
pop
or
fiadd
push
test
int3
mov
add
dec
xor
test
test
jo
sub
test
and
dec
test
xchg
add
push
push
xor
push
ds
sub
push
xor
les
mov
push
sub
imul
push
aas
or
inc
push
adc
or
jecxz
clc
cs
pop
pop
add
jno
rol
sbb
inc
je
outs
int3
ret
push
push
add
dec
or
test
or
add
fimul
xor
and
inc
push
add
add
fcmovnbe
dec
push
repnz
cmp
hlt
inc
jp
mov
adc
cmp
dec
dec
push
push
and
mov
mov
enter
add
dec
sahf
test
xchg
xchg
test
and
rcr
movs
ins
add
push
mov
cmp
leave
enter
loop
push
xor
inc
push
test
inc
jle
mov
xchg
inc
es
push
cwde
xchg
cmp
data16
xchg
mov
test
ins
add
cmps
add
js
enter
pusha
loop
jae
test
mov
or
xor
adc
dec
sub
iret
push
jae
push
fwait
shl
retf
adc
retf
loopne
clc
cmp
movs
sub
imul
sbb
outs
rcl
mov
cmp
cwde
xchg
fcomp
mov
add
enter
inc
rol
rcr
add
adc
pop
outs
push
xchg
fs
inc
push
xchg
mov
or
popa
inc
or
cdq
add
outs
push
mov
jo
mov
and
mov
push
dec
fiadd
popa
(bad)
popa
pop
add
inc
lock
push
mov
sub
ficom
lock
push
jb
jno
xchg
xor
add
inc
sub
push
dec
dec
jl
and
sbb
pop
inc
and
clc
xor
mov
aam
and
sub
or
(bad)
rcl
arpl
pop
sbb
push
mov
lods
add
mov
xchg
icebp
mov
inc
ins
adc
dec
sub
mov
je
add
adc
ins
push
dec
sbb
xor
inc
test
test
xor
inc
loopne
ins
sub
adc
push
inc
adc
jb
push
je
ins
fdiv
enter
or
movs
or
inc
adc
imul
ds
bound
adc
imul
pushf
es
xor
or
ror
retf
add
and
add
pop
inc
shl
int
es
inc
es
ins
xor
push
pop
adc
test
pop
rcl
xchg
xor
pushf
js
call
ins
mov
xchg
ret
inc
jbe
or
push
bound
retf
pop
arpl
add
sbb
xor
mov
adc
xchg
mov
adc
xchg
adc
ins
or
add
mov
jno
data16
inc
test
inc
rcl
mov
js
stos
mov
adc
fist
jp
mov
xor
into
lock
xor
outs
js
fsub
xor
adc
mov
xchg
push
loop
bound
push
inc
sbb
sar
inc
sbb
shl
fidiv
gs
sbb
pop
jo
in
xor
pusha
sbb
adc
add
inc
ss
jb
xchg
push
dec
mov
and
push
adc
jb
pop
add
mov
xor
or
jno
inc
and
jb
pop
jne
ins
or
push
cmps
das
xor
xchg
out
sbb
xchg
addr16
add
cwde
xchg
jl
aam
xor
int3
test
sub
push
push
and
dec
sub
pop
pop
or
ret
adc
push
es
dec
je
rcl
pusha
outs
shl
cld
je
mov
(bad)
jmp
mov
ror
ret
add
or
fs
push
hlt
xor
sbb
mov
dec
adc
dec
add
adc
push
and
dec
xor
and
add
dec
call
ins
push
jp
je
fwait
sbb
push
sub
push
(bad)
dec
adc
movs
xchg
nop
pop
xor
je
rcr
dec
ss
mov
sub
inc
or
pop
add
ret
push
or
pusha
push
dec
test
enter
test
xor
jo
inc
sbb
xor
xchg
test
mov
xor
je
mov
dec
test
add
adc
mov
data16
ss
xchg
dec
aad
xor
bound
js
and
or
push
xchg
or
adc
sbb
cli
pop
push
push
push
mov
fsubr
clc
sbb
sub
push
or
xor
loop
add
gs
loopne
cmp
or
mov
movs
mov
jle
xor
ss
xor
ret
outs
add
dec
dec
or
and
in
push
cmp
adc
inc
inc
push
test
ficom
fdiv
addr16
ins
rcl
add
hlt
inc
jne
add
xchg
inc
sbb
dec
and
cli
inc
push
test
push
cmps
push
and
jne
push
fs
ret
mov
inc
fsub
mov
dec
jmp
cmp
push
pop
mov
inc
xor
outs
cmp
or
mov
inc
xchg
xchg
adc
fs
jle
xor
jo
hlt
xor
adc
ja
bound
add
inc
dec
mov
push
push
imul
dec
jl
out
ins
dec
or
enter
add
dec
cs
test
push
js
test
push
aaa
mov
xor
sbb
push
js
aaa
in
add
dec
push
push
shr
outs
sub
xor
push
adc
push
scas
cwde
add
mov
sbb
loop
stos
pop
scas
add
add
inc
inc
pop
xchg
sbb
adc
push
and
stos
retf
or
mov
push
xchg
stos
shr
ins
xchg
aam
lds
outs
dec
inc
push
cmp
sbb
push
adc
pop
mov
pop
into
rcl
mov
sbb
or
jmp
inc
sbb
pop
adc
ds
ins
mov
push
xor
repnz
sbb
pop
inc
jbe
jo
jo
xor
adc
inc
xor
xor
pop
bound
or
xchg
add
gs
nop
xor
push
xor
inc
jb
call
xor
xchg
xchg
add
dec
fdiv
pop
and
sub
cwde
pop
or
adc
add
mov
add
and
adc
dec
dec
ror
mov
add
imul
jmp
jne
xor
mov
fwait
or
imul
ss
pop
dec
outs
data16
cmp
xor
sbb
inc
pop
fld
add
aam
and
jp
(bad)
cmp
hlt
cwde
xor
or
rcr
cli
pusha
inc
test
jo
cwde
movs
and
pop
shl
push
gs
mov
outs
dec
cli
inc
pop
inc
sub
push
and
data16
fs
pusha
sub
xor
movs
mov
xchg
ror
push
sub
mov
pop
inc
push
aaa
call
mov
movs
or
inc
push
xor
cli
mov
push
xor
push
loopne
sub
xor
add
push
sub
push
imul
dec
xchg
test
loop
jne
test
imul
shl
adc
scas
inc
add
dec
or
or
ret
push
fist
push
pop
add
xchg
xor
push
je
add
or
fnsave
or
inc
dec
adc
je
imul
adc
jp
scas
imul
or
dec
mov
cwde
test
add
xor
inc
jo
loopne
dec
add
sbb
xor
sub
and
jne
ins
in
jne
cmp
fsubr
add
(bad)
xchg
xchg
or
push
inc
or
xor
mov
xor
mov
rcl
xchg
mov
mov
xor
or
inc
jp
call
aaa
mov
xor
push
inc
push
push
in
or
xor
push
popa
jp
or
sbb
push
mov
cwde
cli
inc
inc
movs
les
or
or
adc
push
jo
xor
or
inc
inc
pop
mov
shl
sahf
xor
in
adc
add
mov
push
push
cli
pusha
ror
int3
je
pop
push
rcr
dec
bound
adc
sbb
add
rcl
dec
xor
add
fs
pusha
adc
inc
xchg
sbb
xchg
nop
(bad)
shl
aam
add
push
and
mov
or
xor
ret
add
ins
enter
jb
or
pusha
and
add
dec
mov
xor
and
add
mov
ss
xor
test
xchg
int3
pushf
jne
cwde
movs
call
add
call
popa
add
mov
xor
add
ficom
push
fs
cs
pop
and
jl
mov
or
add
test
xchg
sbb
retf
sbb
cmp
mov
mov
adc
lods
inc
(bad)
inc
xchg
push
paddsb
mov
xchg
xchg
retf
xchg
or
xor
fist
inc
sahf
push
pop
jb
in
mov
dec
sub
ja
es
adc
inc
loop
dec
bound
je
pop
outs
cld
je
xor
ret
in
cmp
add
inc
inc
or
jno
or
adc
push
add
lods
jbe
mov
and
add
cmp
xor
mov
add
and
or
test
sbb
movs
push
call
test
in
out
movs
leave
(bad)
outs
sbb
xor
add
xchg
and
je
jo
add
in
xor
nop
adc
push
sub
add
jb
(bad)
call
mov
js
add
ds
mov
xchg
sbb
mov
pushf
clc
xchg
dec
sbb
js
arpl
xchg
ins
imul
adc
sbb
inc
dec
dec
or
cmp
push
ins
mov
popa
xor
push
leave
or
(bad)
outs
stos
or
ins
pop
jo
dec
sub
jb
jns
xchg
lock
pop
mov
inc
shr
mov
inc
dec
mov
rcr
fdivp
out
dec
sub
cmp
stos
xor
(bad)
dec
inc
sbb
pop
xor
or
test
or
lock
fs
or
push
mov
sub
test
push
inc
loope
mov
enter
in
js
inc
out
xchg
adc
test
and
push
mov
repnz
xchg
adc
pop
dec
mov
push
pop
xor
jecxz
mov
xchg
xchg
shl
popa
inc
and
sbb
inc
or
popa
add
jo
dec
dec
sbb
mov
inc
bound
cmp
ss
add
pusha
xor
bound
dec
jl
xchg
xor
lock
sbb
xchg
add
sub
sub
in
push
sub
mov
jne
mov
or
cmp
outs
and
dec
push
cwde
fs
push
sub
add
loopne
or
add
outs
out
mov
ret
push
and
push
push
jbe
inc
inc
gs
enter
sbb
loop
xor
adc
and
pusha
imul
mov
int3
xor
inc
aaa
(bad)
mov
and
mov
test
push
push
push
sub
mov
xchg
add
je
mov
jae
ja
mov
movs
push
xchg
in
mov
ss
addr16
test
sbb
dec
(bad)
pop
or
mov
pop
inc
and
push
inc
add
jo
push
test
mov
push
jecxz
in
jo
xor
loopne
push
dec
mov
or
pushf
cld
and
sub
add
or
sbb
outs
adc
and
ins
ins
fimul
dec
ins
mov
mov
jb
call
add
imul
js
shr
add
es
add
cwde
adc
dec
mov
or
bound
pusha
es
add
dec
rcl
push
or
push
pop
add
and
cmp
adc
adc
xor
bound
dec
push
xchg
fisub
mov
mov
or
stos
push
pop
in
clc
add
mov
ins
sbb
and
ret
mov
push
cmp
mov
call
add
inc
enter
popa
xchg
bound
inc
js
xchg
pop
xor
js
mov
test
out
test
jp
mov
dec
and
and
sbb
mov
hlt
cmp
push
outs
data16
adc
loopne
or
enter
xchg
push
or
add
adc
inc
bound
pop
adc
cmps
int3
cmp
movs
sbb
in
or
xchg
gs
adc
push
call
inc
ins
xchg
pusha
add
movs
jne
call
cs
xor
ret
outs
outs
push
enter
add
call
sub
aaa
cld
push
push
sbb
test
stos
jns
adc
es
retf
in
xor
mov
mov
mov
xchg
stos
cmp
push
or
jo
scas
xor
push
dec
inc
sbb
imul
xor
ror
push
scas
inc
push
push
adc
dec
push
lods
xchg
push
je
inc
inc
push
addr16
and
outs
cmp
cmp
xor
dec
nop
push
ja
dec
push
inc
aam
xchg
stos
fimul
rcl
push
xchg
push
adc
xor
adc
mov
adc
ss
dec
dec
push
cmp
bound
test
mov
push
rcr
xchg
call
and
inc
and
jo
mov
sbb
outs
xchg
dec
mov
and
nop
fst
mov
jl
push
mov
push
aad
pop
aam
fs
je
push
sbb
jb
ins
mov
fcom
and
jo
fsubr
mov
inc
inc
mov
out
mov
fadd
outs
xor
pop
mov
sub
fsub
push
jno
dec
dec
dec
add
cmps
pop
imul
rol
mov
mov
adc
ret
and
inc
movs
outs
push
add
imul
add
add
push
jle
nop
add
sbb
inc
aam
das
xor
outs
int3
push
push
xor
xchg
xchg
mov
jae
xchg
push
adc
mov
je
mov
push
popa
es
into
jne
push
cdq
adc
ss
adc
sub
adc
call
daa
adc
lods
repnz
add
or
adc
stos
dec
ss
cmp
nop
shl
and
loope
and
adc
xor
lds
cdq
and
inc
cmp
adc
jo
pop
sbb
xchg
sub
loope
mov
xchg
add
inc
scas
add
jne
mov
js
fadd
inc
pop
scas
fs
push
xor
xchg
(bad)
les
push
inc
jne
pop
mov
popa
inc
pop
push
pop
fcomp
cmp
fs
hlt
or
test
push
push
ret
sub
cmp
ja
and
adc
xor
dec
push
dec
js
dec
xor
data16
push
add
es
and
ss
dec
pushf
push
or
inc
inc
dec
pop
and
sub
jne
xchg
or
pusha
call
adc
or
jbe
push
dec
push
inc
call
push
pusha
inc
add
mov
jp
push
add
xor
push
in
and
fsub
xor
out
inc
sub
dec
rol
aaa
imul
pop
inc
inc
test
jae
add
jo
shr
enter
adc
push
retf
push
popa
cmp
push
imul
or
test
ins
and
mov
leave
ret
push
dec
and
jno
loopne
xor
add
adc
stos
add
or
fs
add
bound
xor
or
ins
xor
cmps
ja
xor
xor
sbb
add
ss
out
mov
test
xchg
mov
sbb
sbb
in
jbe
jo
mov
outs
outs
sub
les
test
lods
xchg
inc
xchg
loope
dec
or
movs
in
adc
add
xchg
adc
or
pop
test
and
sub
mov
add
loopne
push
fadd
push
mov
push
je
test
div
nop
dec
or
and
add
dec
jo
in
nop
xchg
adc
inc
jo
sahf
cmps
pop
sbb
add
call
les
gs
pop
add
ins
and
mov
sub
dec
popa
mov
ins
adc
pusha
xchg
add
es
ror
mov
and
push
bound
ja
and
dec
pop
push
test
push
cwde
mov
mov
out
jp
nop
ss
push
popf
push
pop
jle
and
adc
inc
ins
inc
add
and
retf
rcr
outs
push
dec
and
dec
or
sub
js
je
test
dec
cmp
push
fadd
lods
or
ss
rcl
in
mov
imul
add
xchg
cmps
xor
jb
pop
and
mov
inc
rol
mov
mov
fcom
sub
xor
cwde
or
add
ss
ss
push
and
or
popa
ins
retf
mov
add
(bad)
mov
xor
or
ret
jo
pusha
inc
sbb
adc
cmps
les
or
jno
xor
cmp
dec
dec
inc
pop
cmps
fs
sub
mov
push
ins
inc
adc
mov
sbb
adc
adc
cld
les
sub
jmp
inc
push
test
mov
add
xor
sahf
not
ins
enter
dec
push
sub
push
jp
enter
into
and
cmp
jp
xchg
and
add
jb
push
sub
inc
xchg
mov
xor
clc
out
popa
jb
pop
cmp
loop
lods
mov
jae
pop
jmp
je
push
cli
xchg
push
(bad)
dec
push
data16
and
inc
pop
rcl
aaa
push
popf
movs
mov
int3
inc
push
mov
fcom
je
aad
call
adc
and
inc
jge
outs
xor
cs
pop
outs
shl
fisubr
dec
mov
dec
cmp
pop
or
push
jle
aad
adc
jne
dec
push
xchg
test
dec
push
inc
push
xchg
test
sbb
mov
adc
add
or
inc
inc
push
add
jb
pusha
push
xchg
shl
mov
in
or
call
xchg
inc
movs
call
jo
cmps
push
movs
xchg
or
mov
adc
and
bound
in
jno
inc
xor
aaa
sub
or
xor
call
push
ins
jno
ror
sub
inc
arpl
fcom
inc
rcl
cmp
add
ds
jae
cli
push
pop
or
xchg
dec
mov
xchg
enter
and
or
xchg
push
nop
rol
inc
fisub
mov
and
dec
mov
mov
ins
push
leave
nop
cld
add
jne
adc
adc
pop
popa
inc
outs
bound
pop
popa
or
pushf
imul
shl
adc
xchg
test
push
aam
jnp
mov
mov
inc
push
dec
push
inc
push
or
mov
push
into
je
test
test
or
pop
or
movs
adc
push
jp
push
inc
push
jns
add
dec
xchg
jp
ins
inc
xchg
mov
dec
inc
mov
and
mov
xchg
sub
xor
inc
mov
push
push
daa
pusha
fsubr
movs
gs
hlt
(bad)
into
pop
add
fs
ds
or
xor
xchg
add
pop
mov
mov
push
into
imul
and
pop
inc
xor
stos
rcl
dec
test
push
dec
push
je
fsubp
lods
push
test
je
repnz
test
js
or
cwde
les
sub
add
push
dec
xor
rol
mov
push
aaa
add
and
out
mov
popa
inc
xor
or
js
test
inc
push
rcl
inc
or
or
jno
push
ror
push
xchg
cli
jae
xchg
add
add
jo
or
xchg
cwde
mov
or
test
dec
dec
out
sub
dec
sbb
adc
xor
cmp
(bad)
ficom
xor
test
test
fwait
xchg
add
push
push
bound
mov
push
aaa
cld
pop
sub
pop
mov
inc
sub
xchg
cmp
sahf
gs
lea
adc
fld
aaa
mov
xor
ss
and
xor
repnz
dec
lsl
push
push
mov
fmul
lods
dec
ret
or
pop
and
pop
rcr
fs
push
rol
aas
push
jbe
push
sbb
pop
xor
add
mov
sbb
push
test
xor
inc
mov
mov
mov
and
sbb
adc
sub
inc
add
push
ins
cmps
add
xchg
cli
xchg
sbb
aam
inc
sub
outs
and
adc
rol
(bad)
movs
and
lods
inc
inc
xor
dec
sahf
xor
mov
bound
mov
or
add
mov
jbe
retf
inc
sub
jl
(bad)
jne
jmp
gs
movs
push
sub
out
push
and
(bad)
arpl
mov
push
push
push
dec
dec
sbb
pop
jne
lods
mov
dec
jb
bound
ins
retf
inc
adc
xchg
call
pop
(bad)
fwait
arpl
lods
dec
dec
xor
xor
jmp
jbe
xor
mov
xor
pusha
sbb
add
push
push
add
push
test
push
add
cmp
stos
mov
push
fwait
test
cli
dec
js
push
push
add
adc
mov
adc
pusha
add
enter
inc
jp
push
push
pop
xchg
or
push
xchg
push
fmul
sbb
sbb
jae
ret
push
sbb
test
ins
push
dec
clc
adc
xchg
popa
add
mov
pop
mov
es
repnz
mov
es
loopne
push
cmp
ins
push
gs
gs
gs
ret
mov
sbb
rol
nop
adc
and
inc
popa
(bad)
mov
xchg
mul
nop
push
inc
imul
test
or
mov
xor
inc
ret
mov
xor
dec
add
dec
bound
hlt
mov
xchg
stos
or
adc
inc
push
xor
push
dec
ror
inc
inc
loopne
add
dec
sub
inc
data16
inc
mov
push
add
adc
xchg
cmp
es
dec
mov
dec
sub
popa
inc
mov
dec
cs
adc
pusha
gs
sub
fisub
jno
add
dec
inc
sbb
aam
inc
pop
inc
xchg
ja
jo
popf
jl
cwde
inc
push
aaa
dec
ret
dec
xchg
or
ins
jb
push
xchg
jl
jb
add
daa
mov
mov
adc
mov
fs
and
(bad)
call
shl
js
mov
arpl
or
gs
test
push
imul
bound
(bad)
jo
xchg
inc
inc
out
rcl
es
lods
mov
popa
enter
shl
push
bound
sub
adc
push
dec
outs
sub
push
(bad)
sbb
sub
jb
push
xchg
or
test
loopne
add
pusha
stos
or
or
inc
dec
xor
ins
adc
push
dec
jb
in
inc
sar
je
inc
push
mov
mov
or
inc
in
pop
ss
push
fs
dec
(bad)
mov
xchg
push
aam
jmp
int3
xor
add
fadd
nop
shr
(bad)
int3
xchg
push
xchg
ret
idiv
inc
xor
and
dec
inc
xor
add
pop
dec
push
pop
outs
push
dec
ss
arpl
or
call
mov
cmp
aam
push
inc
adc
mov
mov
jb
movs
mov
(bad)
sub
cmp
ds
jecxz
add
je
aam
push
push
inc
shl
dec
mov
push
inc
mov
push
mov
dec
push
push
add
jb
or
inc
jmp
into
jb
pop
xor
xor
inc
jle
gs
adc
pop
sub
jo
and
fisub
mov
push
retf
inc
sub
xchg
mov
jo
in
adc
pop
or
xor
pop
xor
adc
nop
ret
test
add
dec
push
mov
test
xor
js
add
inc
mov
repnz
sub
sbb
push
je
jbe
or
nop
and
push
lock
ficom
pop
push
aam
shr
xor
mov
inc
push
je
aam
ins
and
mov
pop
xor
add
inc
xor
push
add
mov
sub
nop
mov
sub
pop
ins
xor
jo
dec
movs
into
adc
sub
fdivr
mov
inc
int3
xor
stos
push
mov
push
inc
ret
aaa
inc
xchg
or
fs
xchg
dec
xor
add
popa
push
imul
movs
xchg
mov
hlt
mov
bound
mov
mov
js
outs
rcl
dec
es
mov
dec
xchg
call
or
cld
or
push
into
push
mov
push
imul
cmp
cmp
xchg
ret
push
fs
in
aam
sub
inc
gs
mov
push
(bad)
add
dec
dec
ja
retf
outs
xchg
es
push
nop
ss
dec
les
outs
jo
dec
dec
sbb
sub
push
dec
push
xor
arpl
imul
ror
aam
sub
call
adc
pop
pop
fcomp
xor
retf
and
xor
sub
pop
add
outs
cli
imul
inc
jo
hlt
dec
lods
mov
xor
mov
ror
gs
inc
test
fsubr
imul
dec
or
test
ins
add
in
adc
bound
shl
call
adc
inc
xchg
(bad)
jmp
mov
inc
mov
xor
es
ret
add
or
pushf
cmp
jp
adc
bound
xchg
dec
mov
pop
call
xadd
mov
mov
xor
inc
xchg
and
adc
pop
lods
jb
cmp
inc
aaa
sahf
cmps
inc
addr16
mov
mov
stos
(bad)
cmp
add
lods
call
pop
sar
push
push
xor
xor
and
sbb
push
push
mov
push
dec
adc
push
fwait
cmp
and
ins
jo
out
push
in
xor
sub
int3
xor
xor
xor
xor
je
bound
pusha
inc
mov
sbb
inc
fsub
inc
push
and
aaa
in
add
(bad)
adc
or
int3
push
xchg
mov
xchg
push
push
sbb
addr16
cs
test
stos
pop
jp
fcom
xchg
or
sahf
adc
inc
stos
test
ss
add
or
adc
inc
and
cwde
inc
test
add
adc
(bad)
push
and
sbb
adc
push
xor
(bad)
es
arpl
ins
dec
inc
addr16
enter
and
dec
add
test
adc
repnz
push
sbb
adc
repnz
xor
xchg
test
mov
and
scas
xchg
mov
je
xor
xor
adc
movs
add
push
xchg
xor
jb
ret
xchg
mov
push
ins
dec
ja
out
rcl
pop
dec
cmps
push
jl
sub
adc
jno
test
xchg
push
add
jp
push
jecxz
add
sub
or
inc
dec
aam
popa
fwait
rcl
movs
cmp
inc
mov
dec
and
push
pop
jbe
sbb
or
je
pop
test
push
outs
add
(bad)
cmp
add
or
jl
or
xor
add
cmp
push
je
movs
shr
xchg
and
jno
mov
ds
inc
mov
pushf
jbe
push
shl
cmp
push
xchg
mov
jbe
in
add
dec
inc
cmps
dec
mov
inc
xchg
mov
push
and
or
fisub
imul
ret
and
push
xor
call
jp
push
mov
adc
pushw
mov
int3
push
inc
adc
pop
inc
push
mov
data16
fsub
loope
stos
loopne
bnd
adc
adc
outs
mov
sub
and
cld
jne
push
sbb
or
mov
adc
sub
push
add
add
push
xchg
inc
dec
push
cmps
inc
mov
add
pusha
push
adc
and
push
inc
push
shr
push
nop
aam
push
stos
jo
mov
leave
cmp
mov
fsubr
fimul
push
and
test
sub
sub
mov
add
jns
sbb
add
dec
imul
nop
shl
(bad)
jo
pusha
pop
push
mov
push
inc
dec
and
add
and
jp
push
cdq
xchg
sub
adc
jbe
dec
inc
add
cs
push
clc
dec
inc
daa
lea
push
push
popa
sub
push
adc
push
test
rol
sbb
push
and
clc
outs
dec
ja
push
jmp
xor
int3
cmp
push
mov
lods
or
cmp
dec
retf
inc
or
ret
lea
push
ja
shl
sahf
push
outs
adc
dec
dec
imul
lods
lds
dec
cmp
repnz
xchg
push
adc
adc
and
jb
int
cmp
mov
jp
add
adc
dec
push
ins
mov
inc
xchg
adc
inc
and
add
mov
loop
xchg
adc
push
dec
mov
dec
xor
push
jo
jns
ror
retf
mov
mov
add
push
pusha
xchg
mov
test
dec
aam
and
fidiv
test
push
or
xor
push
jb
xchg
push
xchg
push
push
test
ret
ins
xor
popf
test
js
mov
fsub
sub
loopne
inc
push
mov
inc
sbb
push
push
movs
test
push
mov
cwde
rol
dec
sbb
mov
ins
adc
aam
dec
xor
push
data16
adc
and
or
hlt
sub
or
push
mov
pushf
sub
stos
jb
sub
dec
push
inc
sub
and
mov
and
push
xchg
test
push
add
xchg
lods
scas
lock
xchg
mov
mov
jae
sub
fiadd
je
xchg
xchg
mov
push
lock
adc
or
sbb
push
dec
push
imul
adc
js
dec
dec
dec
and
imul
sbb
les
retf
push
js
sbb
xchg
pop
xor
sub
adc
loope
xchg
cmp
gs
popa
push
push
xchg
dec
in
jne
ret
xor
and
adc
dec
data16
dec
fisubr
pop
dec
je
push
je
add
add
push
test
jae
xchg
xchg
push
lods
mov
or
add
sub
xchg
aad
(bad)
dec
mov
and
jne
xor
sub
movs
push
push
inc
jns
pop
outs
js
xor
jb
mov
inc
mov
xchg
dec
fwait
aam
push
nop
mov
mov
add
or
mov
pushf
nop
jp
jo
fmulp
nop
pop
and
pop
test
push
or
mov
lods
inc
popa
cmp
and
loop
cmps
fs
dec
and
pop
xchg
jb
inc
mov
jp
fsubr
add
pop
push
dec
imul
add
out
test
cmps
test
inc
push
mov
add
loopne
call
mov
stos
adc
dec
push
push
add
mov
mov
je
push
test
xchg
push
xor
inc
and
xor
push
jne
and
pop
mov
adc
sub
push
hlt
inc
xchg
es
inc
mov
dec
leave
add
add
xor
inc
dec
or
sbb
jo
mov
mov
fmul
jo
xchg
push
pop
mov
xor
pusha
and
gs
and
test
pop
push
inc
int
or
adc
shl
push
popa
jb
les
dec
(bad)
xchg
cli
in
bound
inc
ins
sbb
(bad)
dec
adc
jbe
jae
or
xchg
push
je
push
xor
les
ror
xor
and
add
adc
js
push
cwde
(bad)
test
cwde
cmp
mov
jl
dec
dec
or
pusha
adc
dec
popa
jo
ja
add
jne
inc
bound
ins
ret
aad
add
add
mov
or
enter
push
inc
pop
xchg
mov
push
shr
mov
sub
and
dec
inc
jp
and
add
or
xor
xchg
dec
add
leave
jo
cmp
rcl
call
adc
rol
xor
in
dec
push
or
arpl
sub
sub
xor
dec
push
mov
push
jo
jbe
and
or
stos
push
push
jb
test
cmp
adc
adc
ins
out
int3
jo
and
inc
mov
push
push
ins
inc
push
add
push
push
call
jne
push
adc
sbb
push
dec
stos
add
into
xor
fs
aam
add
and
cwde
data16
test
int3
cmp
mov
popa
and
(bad)
rol
add
xor
add
mov
rcl
push
movs
or
mov
mov
push
bound
inc
jle
and
sbb
pusha
ins
test
inc
cmp
nop
popa
sub
mov
mov
mov
mov
ins
push
gs
and
mov
and
movs
test
lock
inc
nop
push
and
xor
ror
xor
add
pop
pop
in
sub
mov
mov
js
in
ins
jne
push
adc
(bad)
xor
xchg
dec
loope
(bad)
dec
xchg
xor
mov
mov
inc
adc
pusha
arpl
pop
add
push
pop
mov
mov
aam
fidiv
cs
bound
jno
test
jecxz
pusha
xor
dec
sbb
push
cli
pop
sahf
jno
or
jmp
nop
xor
add
cli
xchg
retf
add
inc
mov
shr
or
jo
rcl
dec
sub
or
xchg
test
jle
loopne
sbb
lods
xchg
push
pop
jp
jp
jbe
loope
add
jne
adc
inc
add
mov
xor
sub
mov
xchg
push
push
cwde
jb
xor
retf
jbe
cmp
dec
stos
jne
rcl
add
in
mov
push
xor
sub
ror
xor
inc
in
hlt
dec
inc
and
adc
cs
mov
xchg
inc
ins
or
mov
add
mov
pusha
ins
mul
inc
inc
add
add
les
push
cwde
pushf
ins
mov
pop
push
push
add
out
push
and
xchg
movs
es
imul
popa
rol
xor
jbe
push
ins
arpl
arpl
outs
pop
test
push
ins
and
sbb
cmp
fidiv
adc
outs
xor
mov
mov
loop
sbb
push
call
cwde
xchg
sub
push
fnstenv
mov
jb
add
mov
push
inc
cdq
sbb
inc
dec
pop
adc
xor
xor
xor
fmul
dec
inc
push
add
sub
dec
mov
inc
push
enter
push
data16
hlt
jne
add
push
scas
leave
add
test
jo
enter
add
call
test
jae
dec
add
ds
ins
inc
popa
stos
fimul
and
ja
fs
add
gs
js
add
cmps
loop
movs
in
add
popa
add
test
mov
mov
les
cmp
and
sub
push
outs
and
call
xor
or
out
jbe
add
fs
add
xchg
xchg
xchg
push
(bad)
dec
add
sbb
int
mov
mov
enter
cmp
push
sub
cmp
cmp
sbb
jbe
lods
add
inc
test
sbb
xchg
or
xor
mov
or
inc
ficom
pop
les
push
cmps
xor
cwde
test
dec
aaa
bound
test
inc
clc
push
sub
inc
jb
sub
cwde
xor
or
mov
ss
sbb
xchg
(bad)
mov
or
sub
in
xor
sub
inc
(bad)
dec
dec
aaa
je
fwait
pop
push
and
adc
jb
adc
es
mov
ror
enter
lods
and
ja
mov
jno
in
add
push
or
push
dec
test
push
xor
inc
dec
xor
or
popa
xor
test
cmp
jno
push
add
and
dec
fsub
add
xchg
je
inc
sub
add
inc
add
shr
add
cmp
out
xor
pop
xchg
push
scas
push
lods
fiadd
lahf
outs
mov
add
jl
push
cwde
and
test
adc
xchg
mov
and
test
mov
data16
mov
dec
sub
arpl
js
inc
in
test
push
pusha
or
movs
adc
dec
xor
pop
jb
jmp
cmp
int
push
cmp
jl
add
jns
mov
ret
in
push
arpl
mov
pushf
push
cs
and
inc
sahf
imul
fs
and
or
or
mov
rcr
and
aad
xchg
adc
pop
mov
out
sub
jbe
scas
jp
and
test
pop
sbb
push
and
imul
adc
jbe
fisub
xor
aad
push
dec
dec
aam
mov
push
xchg
sub
outs
sub
test
fdiv
sbb
jle
inc
inc
stos
test
push
(bad)
push
mov
pusha
mov
inc
dec
popa
and
xor
pop
xchg
inc
pusha
or
jle
pop
mov
adc
rol
lock
(bad)
cmp
stos
nop
xchg
mov
cmp
push
mov
in
dec
ret
sbb
in
cmp
(bad)
dec
jbe
push
aaa
sbb
or
and
xor
push
push
ins
push
fs
ins
jp
cs
aam
inc
int3
push
inc
or
enter
sub
or
inc
mov
jbe
xchg
sbb
cmp
ins
inc
inc
movs
pusha
and
cmp
outs
test
xchg
ds
or
ret
xchg
pop
in
mov
pop
or
inc
mov
dec
jo
cs
dec
jbe
xor
js
ins
rcl
push
xchg
dec
jb
dec
dec
inc
sub
mov
cmp
retf
sbb
cmp
push
xchg
inc
adc
dec
push
xor
push
imul
es
or
stos
test
fs
in
or
mov
fcom
pusha
sbb
xchg
test
retf
sbb
hlt
in
add
mov
pop
jp
int3
sub
addr16
mov
push
pop
test
shr
jb
les
inc
or
popa
sbb
xor
pop
push
xchg
js
xor
xor
dec
(bad)
push
xor
test
data16
outs
mov
push
jp
fsub
xchg
or
test
aam
dec
sbb
rcl
xor
xchg
xchg
or
data16
inc
ja
dec
cmp
ins
imul
ins
xchg
test
loop
call
int
popa
mov
inc
js
jmp
jbe
jne
cs
push
xchg
mov
sub
mov
mov
inc
fs
xchg
push
imul
push
loop
les
jo
or
les
bound
push
sub
mov
add
out
add
push
sbb
mov
ror
xchg
ret
push
push
cmp
sbb
adc
add
test
lock
dec
add
bound
xchg
out
inc
dec
imul
out
mov
adc
push
push
(bad)
inc
cwde
and
or
xchg
push
pushf
add
sbb
inc
mov
pusha
push
rcl
mov
data16
add
mov
dec
int3
es
xor
es
adc
adc
and
dec
xor
push
add
inc
xchg
add
sub
mov
rcl
jle
pop
push
and
mov
jbe
sub
push
mov
inc
xor
or
adc
adc
push
jb
add
xor
inc
xor
pop
ins
gs
inc
dec
push
popa
inc
pop
sub
mov
mov
sub
add
xor
ret
sbb
out
or
fs
push
stos
sub
adc
cwde
sub
cs
shr
shl
and
and
inc
and
jae
xor
jo
sub
ret
fs
ss
mov
sub
or
and
lock
inc
push
pop
or
cmps
(bad)
fld
arpl
add
int3
clc
push
and
add
and
out
mov
xor
or
fs
mov
test
adc
cmps
jne
xor
adc
inc
gs
xchg
dec
jo
push
push
je
aam
push
push
imul
add
xor
push
mov
sbb
mov
add
pushf
push
inc
in
bound
inc
or
inc
jo
jp
mov
outs
jp
add
mov
jb
ins
dec
mov
xchg
(bad)
je
movs
mov
inc
push
(bad)
jle
adc
loopne
dec
fldenv
js
jp
sub
sbb
dec
push
inc
test
or
push
inc
add
lods
mov
push
cmp
mov
push
ret
mov
push
inc
dec
shl
push
inc
jp
pop
mov
sub
dec
or
or
jmp
(bad)
jle
jmp
cmps
test
push
jns
inc
sub
and
mov
add
and
mov
push
and
or
jno
js
test
aam
fcom
clc
ret
jmp
jbe
dec
mov
test
(bad)
sbb
out
add
test
add
js
add
inc
rol
ins
sbb
xor
sbb
sub
sub
xchg
add
jo
sbb
add
rol
add
jp
stos
call
xor
mov
inc
adc
push
push
loop
adc
ins
jmp
test
out
push
xchg
pop
jo
jo
je
or
dec
mov
sbb
pusha
push
fimul
test
or
shl
dec
je
leave
jne
mov
movs
gs
dec
add
dec
sbb
test
add
and
xchg
dec
cmps
dec
dec
mov
adc
js
ja
xor
ins
xor
inc
jb
xchg
dec
inc
xor
sub
mov
out
adc
xchg
ja
dec
cwde
sub
imul
or
xor
xor
or
movs
push
push
xchg
fdivr
test
xor
pusha
ficom
mov
jne
test
push
dec
inc
or
push
xor
aam
jns
inc
mov
dec
test
mov
ss
movs
inc
inc
pop
xor
xor
aam
ret
xor
rcl
test
sbb
test
pop
xor
add
mov
and
jo
add
fcmovbe
retf
add
test
mov
and
xor
sub
inc
sbb
add
xor
or
sub
jp
dec
mov
mov
test
(bad)
dec
and
mov
jecxz
dec
push
mov
adc
jns
inc
or
push
bound
mov
data16
push
lods
inc
movs
push
push
adc
rcl
test
mov
mov
push
xor
push
into
add
clc
bound
int
push
add
cs
test
jbe
cdq
sub
or
inc
push
xor
or
xchg
mov
cmp
inc
push
pop
sbb
mov
xchg
xchg
inc
aaa
xchg
arpl
call
data16
les
add
jo
xchg
or
xchg
mov
dec
add
stos
gs
push
cwde
mov
xchg
add
adc
mov
in
shl
or
jno
sbb
jo
in
xchg
inc
add
cmp
in
mov
jo
sub
push
test
inc
jb
les
pusha
outs
dec
inc
sbb
push
inc
inc
xor
xor
mov
adc
outs
dec
inc
(bad)
bound
pop
jo
pop
push
or
and
movs
add
adc
add
js
cmp
or
xchg
aaa
push
pop
push
inc
and
adc
or
clc
jbe
inc
mov
and
bound
sub
fiadd
inc
or
push
pusha
test
xor
xor
shl
push
add
jbe
mov
out
or
cmp
or
xchg
or
inc
and
push
sub
ss
push
daa
sbb
gs
mov
scas
movs
jne
mov
mov
popa
push
sub
mov
lock
fadd
out
fs
mov
inc
and
test
ins
ins
bound
cs
push
sub
inc
inc
cwde
push
xor
outs
shl
es
js
xchg
aad
add
push
js
inc
ins
push
imul
dec
add
scas
js
dec
or
mov
es
inc
inc
and
inc
adc
fs
jae
adc
xor
push
mov
push
xchg
fdiv
or
pop
ins
and
mov
add
mov
out
repnz
inc
aad
dec
enter
xor
add
sbb
jns
aam
or
pop
or
jo
dec
sar
and
sub
and
fnsave
or
dec
and
stos
dec
mov
or
bound
push
enter
dec
xor
mov
data16
push
adc
jmp
mov
dec
pushf
popa
inc
popa
sbb
scas
sub
hlt
mov
sub
fdiv
and
push
je
call
dec
inc
sbb
mov
mov
jbe
push
push
jl
sbb
cli
mov
add
test
sub
and
mov
push
movs
sub
stos
jb
data16
jne
in
fs
inc
xor
les
or
add
mov
(bad)
push
ret
adc
adc
mov
or
and
ins
loop
cwde
les
or
xor
add
inc
xchg
add
or
push
sbb
inc
cwde
ja
fdiv
jo
xor
sub
loopne
js
inc
push
push
and
add
mov
pusha
nop
pop
sbb
or
mov
lea
cmp
inc
inc
push
add
nop
jmp
pop
push
xor
inc
xor
mov
add
sbb
inc
inc
xor
and
pop
outs
xor
add
dec
mov
xchg
fidiv
ret
xor
fimul
jns
xchg
push
loope
sbb
js
xor
mov
xchg
and
loopne
movs
and
jno
push
adc
mov
adc
push
xor
push
fisub
or
and
or
jmp
dec
add
and
push
xor
push
retf
adc
arpl
adc
adc
jle
mov
inc
xor
or
inc
dec
fsub
xor
xor
out
or
in
stos
imul
inc
nop
in
mov
dec
cmp
dec
imul
adc
pushf
cld
mov
stos
xor
mov
sub
add
and
xor
inc
and
cmps
mov
xor
push
jb
adc
outs
jo
dec
rcl
cdq
adc
cmps
pop
mov
jb
sub
sub
xor
xchg
and
xor
xor
or
or
or
scas
movs
add
imul
mov
adc
adc
pusha
sub
xor
sub
xor
cmp
mov
xchg
jb
adc
mov
mov
or
xchg
aaa
dec
inc
cli
add
cmp
jp
sbb
mov
push
inc
mov
push
in
sub
sub
push
mov
dec
or
mov
fs
int
mov
sub
or
test
push
sub
and
inc
cmps
repnz
sub
movs
add
add
pop
mov
and
push
dec
mov
int3
sbb
inc
sub
inc
jb
pop
cwde
push
mov
xor
test
lods
ins
test
xor
mov
imul
mov
xchg
mov
dec
in
adc
dec
or
adc
pop
push
inc
inc
in
and
sbb
je
push
in
mov
sbb
movs
dec
js
scas
and
and
jp
retf
pushf
or
dec
js
pop
in
gs
mov
dec
rcr
dec
inc
add
outs
test
dec
push
push
inc
loop
cmp
ins
mov
pushf
xor
push
xchg
push
sub
inc
sbb
xchg
scas
lock
ins
push
fiadd
sub
es
test
inc
outs
(bad)
nop
xor
mov
xor
mov
dec
ds
call
xor
retf
dec
sub
xor
adc
push
jo
xchg
push
shl
imul
mov
jbe
mov
ds
inc
rcl
dec
stos
test
push
push
dec
fs
pushf
and
or
xor
jo
and
js
mov
lea
jo
lea
mov
xor
movs
sbb
dec
ret
xchg
jo
jb
ficom
ficomp
retfw
fcom
xor
sub
or
inc
je
retfw
or
mov
ss
and
(bad)
and
mov
adc
fcom
sar
xor
mov
inc
pushf
or
xchg
inc
dec
loopne
lods
je
push
rol
inc
adc
dec
call
push
xchg
push
cwde
jmp
xor
dec
and
test
pushf
call
add
inc
inc
push
add
cmps
pop
add
out
dec
jp
int3
push
xchg
icebp
pusha
(bad)
retf
push
ficomp
and
dec
cld
and
jo
sub
add
ins
rcl
xchg
sub
les
push
sub
push
xchg
adc
jmp
js
mov
popa
inc
inc
mov
sbb
mov
(bad)
dec
outs
mov
or
jmp
(bad)
push
fdiv
ins
mov
clc
jbe
dec
lods
sub
add
loope
or
clc
inc
cmps
pusha
mov
and
mov
inc
(bad)
or
inc
xchg
retf
inc
push
rcl
add
adc
and
sahf
(bad)
pop
mov
inc
push
test
dec
adc
sbb
or
xor
or
sub
retf
and
shr
rol
xchg
dec
adc
push
retf
jmp
add
sahf
jo
push
sub
stos
cmp
mov
shr
add
push
push
xchg
sub
push
outs
xchg
adc
dec
test
push
mov
or
in
jb
or
pushw
inc
outs
dec
cmps
pop
sub
stos
push
mov
push
mov
call
dec
mov
mov
ds
xchg
push
rol
jno
xor
adc
jb
nop
ret
ss
xor
push
out
inc
inc
or
repnz
lods
sub
sbb
out
push
mov
and
add
test
shl
fsubr
add
add
push
push
or
xor
pop
xor
aam
or
sub
dec
repnz
ret
sub
inc
inc
cmp
inc
mov
bound
rcl
dec
jo
push
push
add
dec
inc
push
cmp
mov
inc
push
arpl
adc
inc
jp
mov
sub
sbb
inc
mov
xor
sbb
or
sub
mov
ss
and
dec
cmp
loopne
push
xchg
outs
dec
fs
mov
js
sub
test
mov
dec
outs
hlt
fdiv
cmp
jmp
push
or
ins
movs
dec
cmps
add
pop
push
call
cli
dec
push
and
mov
repnz
retf
mov
push
xor
call
jl
add
inc
push
in
mov
jb
in
push
rcl
inc
xor
(bad)
in
gs
jbe
pop
inc
out
popa
dec
dec
addr16
cmp
dec
ja
cmp
js
adc
add
nop
push
xchg
nop
xchg
sbb
mov
push
mov
leave
xchg
mov
and
dec
outs
dec
or
dec
inc
add
and
and
ja
xchg
inc
inc
test
sub
mov
rol
or
inc
pop
inc
or
(bad)
push
inc
jb
call
xor
dec
pop
mov
loopne
aad
imul
mov
dec
js
sub
push
push
ja
adc
shr
out
clc
or
and
pop
add
cs
push
add
fmul
inc
add
out
jp
fwait
pop
push
mov
mov
js
data16
jo
enter
xor
cmps
aam
ret
rol
mov
int3
or
cli
data16
xchg
mov
imul
cmp
and
mov
sub
aaa
movs
add
and
cld
push
add
inc
cwde
and
cmp
fsubr
xchg
test
test
cmp
test
or
imul
mov
inc
mov
ss
xor
xchg
mov
inc
push
adc
xor
xchg
adc
sbb
inc
mov
and
mov
xchg
sub
bound
call
and
cmp
adc
nop
xor
push
sahf
into
or
sbb
fidivr
sub
pusha
retf
aaa
aaa
leave
or
push
sub
or
shl
add
inc
sbb
inc
sbb
popa
jo
or
mov
adc
dec
fwait
add
add
xchg
xor
add
push
dec
test
(bad)
js
imul
adc
imul
push
scas
push
aaa
jbe
dec
inc
adc
ret
inc
leave
js
xor
dec
dec
add
shl
xor
add
mov
ror
dec
push
sbb
sub
mov
push
cmp
xchg
rcl
ja
retf
mov
adc
inc
test
xor
cmp
mov
movs
xor
add
push
cmps
add
ficomp
cwde
push
inc
and
add
push
dec
mov
je
add
(bad)
mov
inc
push
je
or
dec
add
xor
xor
pop
push
lock
in
lods
jae
data16
popa
add
sbb
xor
sub
xchg
pop
lods
xor
fsub
push
mov
shl
xor
push
or
and
xor
ss
pop
xor
mov
xor
push
outs
cli
cld
push
mov
test
inc
inc
cmp
and
js
gs
jno
inc
movs
jno
dec
dec
and
push
and
fs
mov
lds
bound
push
rol
mov
mov
arpl
in
dec
or
mov
addr16
pop
fisttp
adc
fs
and
cs
push
loop
sub
inc
dec
inc
pop
or
data16
cs
add
movs
xor
jle
dec
(bad)
jp
and
xor
cmps
shr
push
push
es
mov
out
popa
fisub
and
xor
cmps
loope
into
rcl
jbe
mov
adc
mov
jmp
and
into
into
imul
pop
push
cmc
add
sub
dec
aaa
add
xor
add
ins
push
mov
push
retf
es
out
bnd
mov
push
cmp
(bad)
es
inc
add
add
pop
les
push
inc
cmp
and
popa
cmp
dec
inc
add
adc
ins
pop
sub
jbe
adc
dec
push
or
mov
js
stos
adc
or
push
xor
or
and
jns
push
xchg
sbb
fmul
dec
xor
mov
push
dec
xor
jge
or
sub
loop
rcr
sbb
and
dec
retf
sbb
(bad)
mov
push
int
rcl
jo
pop
adc
and
adc
jns
or
add
imul
sbb
outs
stos
and
inc
js
jo
sub
xor
movs
nop
dec
imul
push
loopne
dec
add
pop
mov
lock
mov
inc
ins
push
data16
push
push
test
jp
inc
xor
adc
jo
fcomp
xor
jmp
mov
push
js
push
adc
outs
inc
popa
dec
add
dec
push
aaa
repnz
xor
jae
push
add
ins
jae
(bad)
call
adc
mov
adc
pop
repnz
jb
dec
xchg
push
mov
hlt
jle
nop
or
aaa
js
cmps
inc
test
out
add
add
adc
jl
jl
in
mov
test
aaa
push
fsubr
dec
or
int
sub
sub
inc
add
push
int3
sub
sub
data16
xor
add
ins
mov
(bad)
bound
bound
or
ror
xchg
mov
je
inc
xchg
adc
push
xor
add
or
or
inc
jb
push
mov
ins
inc
popa
adc
cmps
or
pop
push
mov
xor
movs
jns
jns
outs
fadd
push
push
or
fadd
cmp
lods
lods
xor
cmps
inc
inc
push
inc
sbb
push
jle
les
push
xor
sub
aam
mov
pusha
push
push
mov
sub
cwde
out
addr16
mov
push
push
test
div
mov
inc
push
or
cmp
lea
jae
sbb
xchg
mov
add
inc
mov
in
je
push
je
shl
inc
loop
mov
pop
and
adc
add
xor
adc
and
loope
pusha
shl
xchg
ins
stos
pop
mov
pop
xor
pusha
jo
and
mov
test
cs
xor
xchg
add
add
add
and
xchg
dec
(bad)
shr
mov
test
jbe
cld
sub
xor
and
jp
movs
add
jl
jb
es
pop
(bad)
imul
loopne
or
pop
push
sub
push
xchg
enter
inc
sbb
push
dec
mov
test
pusha
xor
ja
cwde
sbb
mov
push
ins
mov
jb
adc
or
push
lods
xor
adc
clc
push
dec
pop
ss
retf
aam
and
retf
rcr
inc
pop
adc
inc
call
xor
xchg
loope
fmul
shl
and
push
and
inc
movs
or
mov
and
and
or
retf
imul
push
sar
imul
mov
adc
ror
nop
cmp
and
fs
add
out
or
jb
push
or
sbb
mov
inc
popa
xor
adc
inc
inc
pop
and
inc
and
push
jmp
in
cmc
imul
xor
arpl
xchg
adc
hlt
push
(bad)
jo
pushf
inc
in
push
inc
pop
aaa
je
enter
mov
push
mov
bound
push
inc
dec
rcl
cmp
inc
clc
pop
inc
aaa
inc
in
push
jo
inc
cmp
xor
or
test
sub
ss
push
inc
test
mov
push
into
or
push
inc
out
adc
test
ds
jo
or
mov
jle
call
xor
inc
rcr
and
and
dec
cmp
lods
jo
sub
push
in
cdq
rol
and
push
test
and
add
push
push
dec
dec
xor
inc
push
sbb
popa
push
stos
pop
push
dec
fsubr
adc
push
pop
outs
or
inc
sub
pop
add
mov
outs
imul
adc
fsub
sub
je
inc
inc
mov
sbb
xor
data16
add
mov
jl
sbb
push
in
clc
and
push
mov
add
in
adc
dec
bound
dec
mov
fs
test
popa
and
test
ss
lods
inc
adc
push
ins
ins
and
jl
mov
shr
pop
inc
or
inc
inc
sahf
adc
scas
push
push
push
and
or
push
lods
and
inc
bound
push
mov
cmp
jne
adc
adc
(bad)
ret
xchg
pushf
jae
pop
xor
ins
or
mov
xchg
leave
and
sub
cmp
xor
sub
inc
sub
or
add
ss
pop
add
inc
push
adc
ins
push
dec
or
adc
dec
dec
cdq
jb
mov
pop
addr16
pop
sub
and
xor
aad
test
adc
add
push
push
push
inc
cwde
dec
xor
and
or
nop
cli
pop
or
xchg
outs
cs
add
inc
push
cmp
inc
xor
inc
test
and
jns
xor
retf
jb
add
bound
cs
push
ss
sub
push
mov
sbb
push
pop
call
and
or
mov
xchg
mov
sub
sub
and
repnz
push
loope
in
loop
retf
loop
add
sub
sub
sbb
mov
dec
push
pop
mov
cs
inc
add
data16
push
sbb
jbe
cmp
dec
push
inc
jle
scas
add
bound
fwait
sub
aaa
bound
hlt
lods
stos
inc
cwde
xor
fs
pop
adc
(bad)
add
push
push
sub
data16
je
xchg
xchg
and
fcom
add
adc
add
enter
test
cs
add
push
fcom
shr
push
push
aam
push
cwde
nop
leave
push
sar
(bad)
push
mov
dec
nop
push
fisubr
adc
mov
mov
popa
add
inc
call
sbb
jnp
jo
ins
bound
pop
mov
push
push
es
push
data16
xor
jb
inc
sub
dec
jge
fs
or
jne
call
stos
dec
dec
movs
xor
sahf
dec
dec
push
add
enter
push
jbe
stos
les
mov
dec
pop
add
loopne
adc
(bad)
(bad)
inc
pop
dec
xor
dec
or
mov
popa
xchg
dec
ins
mov
push
call
popa
dec
daa
movs
xchg
pop
and
aam
mov
push
adc
clc
jp
ss
inc
mov
add
sub
mov
arpl
inc
xchg
cmp
int
sub
mov
push
adc
ins
sbb
xchg
and
ficomp
xor
shr
or
dec
mov
mov
mov
pop
add
rol
mov
xchg
add
push
and
add
les
xor
cmp
xchg
adc
ds
push
push
inc
and
xor
add
sbb
ret
adc
sar
mov
stos
push
adc
xchg
mov
xor
test
ret
inc
stos
rcl
mov
cmps
jns
arpl
inc
inc
pop
test
or
and
push
test
push
cdq
inc
push
jle
inc
inc
shl
arpl
retf
pop
mov
cwde
js
add
outs
imul
jl
push
push
fiadd
lods
or
jp
aaa
ss
and
xchg
sub
je
or
adc
jle
ficom
sub
inc
and
or
hlt
or
mov
dec
and
xchg
or
or
inc
cmp
push
sbb
jbe
push
imul
inc
ret
or
xor
push
mov
and
and
xor
and
dec
or
out
fs
pushf
mov
in
cmp
mov
inc
or
out
mov
or
inc
imul
dec
add
push
sub
(bad)
pop
push
inc
xchg
mov
fmul
push
xor
fs
push
adc
inc
push
push
jb
pusha
adc
adc
repnz
push
push
ins
inc
je
sub
jo
pushf
out
jp
movs
rol
aam
or
loope
and
adc
loopne
inc
xchg
and
fs
or
inc
sub
add
push
dec
or
mov
call
dec
dec
and
dec
loopne
or
sbb
dec
inc
adc
push
dec
push
and
fdiv
xchg
pop
sub
popa
sub
or
push
fcmovb
dec
or
call
sbb
push
or
or
add
inc
push
rol
aaa
push
jle
xchg
add
pop
mov
bound
dec
inc
ficom
sbb
lods
push
sbb
xor
xor
dec
outs
xor
popa
cdq
xor
call
cs
dec
arpl
inc
and
inc
sub
jb
fidiv
ins
sbb
or
arpl
sbb
and
push
push
push
je
jbe
inc
in
pop
inc
fwait
push
mov
sub
not
test
adc
xchg
push
mov
and
ja
scas
push
ins
push
test
adc
or
ins
inc
imul
xor
popa
inc
pop
xchg
inc
jno
dec
sbb
push
mov
push
js
fs
mov
repnz
push
inc
pusha
jb
stos
and
pop
xchg
add
jp
(bad)
ror
mov
adc
mov
in
adc
inc
cwde
popa
es
xor
aam
out
jp
dec
push
ret
add
pop
push
popa
mov
push
pop
and
mov
mov
dec
test
nop
push
push
mov
or
js
popa
imul
inc
dec
mov
inc
bound
test
push
bound
mov
jo
inc
ss
ror
hlt
dec
or
sub
outs
dec
jb
adc
push
pop
ja
push
xchg
dec
inc
push
(bad)
pusha
sub
inc
add
imul
inc
adc
xor
jne
aam
push
pop
xor
je
rcl
pop
xor
sub
xor
popa
add
dec
ret
enter
mov
mov
les
push
push
pop
or
sahf
sbb
cs
imul
nop
and
and
xchg
and
add
dec
cld
push
xchg
nop
push
xor
and
dec
jns
lods
outs
retf
or
fisub
xor
mov
sub
int3
mov
xchg
pop
rol
and
jne
dec
ins
mov
inc
inc
inc
shl
ret
mov
push
xchg
xchg
mov
and
push
aam
dec
rol
xchg
test
dec
popa
sub
pusha
dec
or
xor
test
ins
shl
push
cmp
jne
dec
shr
push
es
and
rol
test
push
add
popa
or
mov
lock
inc
fidiv
test
push
mov
shl
es
jle
dec
gs
shl
xor
ror
cmps
push
xchg
popa
push
push
inc
fiadd
pop
scas
dec
enter
movs
jb
push
adc
aam
push
xchg
stos
mov
sub
or
and
dec
pop
rcl
cmp
mov
call
adc
xchg
ret
mov
mov
xchg
pop
test
ins
mov
mov
nop
adc
adc
adc
push
gs
sub
dec
ret
add
add
lods
mov
in
jb
xor
inc
sbb
sbb
push
jns
or
mov
and
add
inc
dec
inc
xor
push
jl
or
or
(bad)
test
mov
xor
out
loopne
xor
pushf
or
adc
push
pop
or
adc
add
(bad)
pop
stos
push
jb
outs
dec
push
sbb
push
dec
or
cld
sub
dec
mov
mov
fs
pop
push
dec
cmp
xchg
jno
cmp
mov
mov
dec
xchg
or
adc
add
ret
push
inc
in
adc
sbb
mov
dec
dec
jae
sub
hlt
aaa
dec
fisubr
and
ins
lock
inc
inc
jo
ret
mov
push
push
push
hlt
sub
adc
add
adc
adc
push
lock
sub
mov
test
cmp
or
mov
xor
ins
lock
push
adc
push
data16
pusha
mov
js
cli
out
pusha
sub
sbb
cmp
add
loope
add
cmps
ins
arpl
inc
ins
into
mov
sub
or
pop
mov
jp
adc
add
and
fisub
dec
or
sub
or
dec
pop
loopne
or
inc
cwde
push
jl
mov
add
aaa
xor
and
inc
add
adc
mov
cmps
sbb
(bad)
pop
or
in
xchg
adc
cs
xor
and
xchg
xor
lea
adc
xor
adc
cmp
jns
adc
sbb
mov
inc
dec
adc
dec
jo
inc
dec
push
xchg
jo
dec
or
dec
and
ins
je
test
sbb
push
inc
push
mov
and
pusha
push
xchg
shl
jbe
xor
test
push
mov
stos
jne
push
es
(bad)
dec
adc
inc
mov
mov
bound
and
pop
inc
pusha
jb
mov
bound
sbb
movs
ins
leave
test
test
or
ins
pusha
mov
pop
mov
mov
popa
and
out
cmp
xchg
push
inc
cmp
retf
ins
inc
dec
inc
push
jp
or
inc
or
xchg
and
add
jb
xor
mov
mov
aam
mov
jl
or
cmp
lods
pop
ins
dec
and
test
ins
or
pop
out
add
push
inc
call
mov
inc
jle
xor
lds
jb
out
mov
fsubr
xor
stos
push
mov
into
mov
js
sahf
add
adc
jns
mov
sub
xchg
sub
mov
imul
add
cmps
and
sub
push
pop
or
or
add
jne
push
add
xchg
push
(bad)
pop
adc
test
pop
mov
pop
push
sbb
ror
or
push
out
dec
xor
movs
mov
mov
xor
mov
scas
add
bound
fcmovne
adc
js
xor
dec
inc
sbb
push
outs
call
mov
inc
inc
mov
dec
adc
xchg
pop
mov
ins
inc
bound
bound
sub
mov
inc
add
pop
and
sbb
outs
mov
inc
loope
push
and
fst
push
dec
xor
dec
mov
stos
xor
sub
fnstsw
es
(bad)
add
jbe
jo
mov
js
lea
pusha
fidiv
mov
adc
inc
and
add
popa
sub
outs
inc
out
push
aam
ret
sbb
bound
sbb
dec
mov
out
push
retf
mov
bound
rcr
inc
dec
or
dec
inc
cmp
mov
jp
cli
or
inc
bound
adc
bound
adc
and
sbb
jmp
and
inc
or
out
dec
(bad)
call
add
int3
adc
xchg
push
xchg
jb
cmp
pop
inc
fldcw
int3
push
rcl
dec
push
add
lds
add
into
ins
sbb
test
inc
push
in
dec
sbb
cmps
push
jp
sub
mov
(bad)
add
jb
mov
dec
adc
xchg
inc
push
add
retf
shl
jl
retf
push
sub
fadd
mov
inc
xor
jo
nop
or
mov
inc
sub
pop
sub
in
push
xor
and
shl
jbe
add
mov
dec
(bad)
cli
xor
cmp
dec
add
mov
sub
jle
call
or
or
jl
outs
adc
pop
ss
add
xchg
add
push
je
dec
outs
pop
inc
outs
sbb
inc
dec
outs
retf
fcom
call
loop
add
xor
call
fidiv
mov
cmp
shl
cwde
push
gs
bound
push
push
jo
mov
push
jns
mov
call
loop
inc
dec
add
dec
and
inc
cmp
xor
jp
rcl
adc
mov
push
xor
dec
imul
adc
and
sub
and
test
ss
in
adc
xor
cmp
dec
stos
bound
ret
leave
add
add
mul
mov
dec
sub
addr16
into
add
or
push
adc
loope
push
add
ja
jb
dec
inc
arpl
dec
add
pop
ss
xor
xchg
dec
and
pop
or
push
push
(bad)
outs
push
je
pop
movs
push
loopne
xor
inc
inc
jp
rcl
push
js
stos
add
dec
cmps
push
adc
push
xor
test
call
mov
sub
dec
aaa
adc
push
xor
out
jbe
jns
mov
sub
sbb
mov
repnz
pop
push
fs
add
inc
sub
inc
lods
xor
arpl
push
xor
adc
adc
push
mov
adc
outs
jmp
aaa
fimul
movs
jo
xchg
ror
pusha
sub
and
or
add
add
adc
cmp
arpl
shr
inc
inc
jp
dec
cmp
or
or
mov
ins
mov
and
push
pop
inc
pop
xor
push
fiadd
fiadd
cli
call
push
xor
inc
mov
ins
inc
or
jns
cmp
inc
inc
dec
inc
inc
ins
push
dec
xchg
add
ret
sub
pop
clc
dec
jb
mov
dec
fisub
sub
push
sub
cmp
ins
add
and
outs
ins
add
jmp
in
fs
xchg
ret
pushw
adc
xor
fwait
mov
es
cmps
out
or
inc
inc
lods
adc
test
add
mov
popa
add
dec
dec
(bad)
adc
imul
gs
xor
pop
(bad)
xor
and
cli
mov
cmp
mov
add
call
push
fnstenv
dec
movs
push
jne
or
pop
inc
aaa
and
cmps
push
ins
push
xchg
pop
ins
imul
mov
xor
data16
cli
xor
rol
bound
imul
mov
dec
jb
sbb
and
pop
fsub
or
jbe
dec
and
daa
(bad)
xchg
adc
mov
dec
jo
(bad)
and
adc
dec
test
sbb
ins
int
add
dec
mov
call
push
rol
inc
adc
dec
or
mov
jne
dec
enter
dec
xchg
add
pop
inc
inc
cmp
dec
inc
add
dec
ret
rol
xor
push
adc
adc
les
push
inc
popa
xchg
mov
fcom
inc
xor
dec
inc
repnz
or
add
add
push
inc
xor
jns
mov
shl
movs
add
inc
push
xor
ret
sbb
and
adc
dec
nop
test
inc
xor
xor
push
outs
sbb
add
aaa
int3
je
sbb
cmp
inc
adc
push
and
inc
dec
inc
and
aam
add
add
xor
inc
jle
or
add
cli
test
add
dec
clc
mov
cmp
dec
jne
not
call
call
retf
sbb
push
or
ss
fsubr
cmp
adc
xchg
fmul
push
dec
adc
push
xor
test
xor
add
mov
test
push
or
xor
inc
adc
cli
adc
mov
inc
mov
or
ss
adc
inc
stos
and
(bad)
je
popaw
in
adc
or
pop
xchg
adc
mov
dec
jmp
and
arpl
xor
push
add
push
pop
adc
shl
(bad)
je
ret
arpl
outs
dec
outs
stos
pop
aam
stos
call
and
push
pop
pop
loopne
cs
push
dec
mov
xchg
movs
mov
les
or
popa
inc
pop
push
xchg
ds
mov
movs
aam
xor
sbb
inc
js
dec
mov
shl
push
fmul
inc
add
add
bound
ins
add
hlt
and
test
rcr
xchg
enter
imul
and
(bad)
clc
dec
test
test
sub
jmp
sub
adc
cli
xchg
fsub
or
pop
gs
pop
xor
add
push
adc
nop
test
or
push
imul
imul
inc
sbb
retf
shl
mov
popa
push
dec
adc
loop
and
dec
push
xor
mov
lods
pop
outs
cmp
mov
and
mov
test
inc
movs
sub
adc
sub
and
add
fsubr
sbb
loop
add
mov
or
mov
mov
inc
and
inc
xchg
es
cmp
pop
enter
ret
add
xor
sbb
stos
sub
add
ss
(bad)
sub
push
xor
dec
pop
sub
add
out
and
mov
cs
or
adc
xchg
ret
and
and
(bad)
call
pop
arpl
push
sub
push
and
xor
mov
jae
nop
mov
into
js
jmp
inc
and
cmp
loopne
inc
mov
push
mov
add
ret
jecxz
push
sub
aad
sub
arpl
add
cwde
fs
sub
mov
ins
shl
(bad)
data16
inc
push
dec
je
or
inc
dec
xor
xor
jns
lods
sub
xor
bound
rcr
push
cli
xchg
movs
and
pop
dec
mov
adc
bound
push
adc
xor
lock
adc
call
or
add
mov
imul
repnz
xor
cmp
adc
add
gs
xor
movs
mov
movs
nop
stos
mov
inc
xchg
fidiv
mov
push
addr16
mov
inc
stos
xor
inc
and
mov
arpl
sbb
dec
ins
fcmovb
mov
ins
adc
cmp
outs
jo
cmp
cwde
ins
dec
ins
ins
cs
ins
out
inc
push
fcomp
js
imul
pusha
adc
popaw
js
sub
add
call
(bad)
sbb
pop
xor
lods
inc
mov
sahf
inc
inc
inc
bound
adc
call
or
rcr
and
push
outs
jb
add
add
pop
ins
sub
xchg
lods
sbb
or
ret
sub
adc
add
pop
inc
inc
dec
js
push
sub
rol
pushf
and
scas
cmp
push
xor
jp
ins
pop
aaa
in
xor
jo
mov
mov
adc
jno
inc
popa
push
test
not
imul
arpl
push
popa
test
push
arpl
bound
jbe
push
inc
or
mov
mov
sub
movs
xchg
call
popa
shl
in
adc
outs
shl
jb
sbb
or
fwait
sbb
data16
inc
push
stos
xchg
xor
adc
fsub
dec
dec
push
imul
or
test
bound
mov
imul
or
inc
add
add
movs
rcl
pop
pop
lods
inc
sahf
xchg
or
mov
ins
xor
mov
ror
je
push
push
push
push
push
fs
push
lock
inc
int3
loop
adc
aaa
test
pop
bound
mov
push
push
mov
inc
retf
adc
push
pop
xchg
sbb
pop
adc
retf
imul
dec
or
xor
add
xor
mov
cmc
xchg
mov
es
xchg
test
rol
es
test
aad
and
fmul
dec
xor
pop
test
adc
ins
pop
ret
push
(bad)
jbe
pop
les
add
push
dec
xor
fnstsw
and
nop
mov
stos
shl
repnz
dec
test
and
xor
loope
adc
(bad)
cmp
adc
cmp
inc
sbb
dec
dec
xchg
add
xchg
push
push
gs
mov
and
adc
mov
jae
push
addr16
inc
jo
or
cmps
movs
sub
pushf
push
cmp
out
xchg
fwait
nop
sub
pushw
aam
inc
js
and
xor
es
inc
add
leave
fs
fisub
fsub
mov
ins
mov
sub
aaa
ja
or
cmp
or
hlt
popa
outs
xchg
adc
inc
and
and
sub
gs
add
(bad)
je
dec
cwde
sub
inc
sbb
add
and
mov
jae
xchg
enter
push
aaa
push
lods
cld
ret
add
inc
mov
test
fadd
inc
test
cwde
mov
cmp
add
fs
push
push
push
sub
gs
push
dec
arpl
add
push
cs
les
gs
test
mov
dec
test
dec
jo
test
in
rcr
in
push
pop
adc
jbe
push
mov
ja
add
inc
xchg
or
dec
inc
pusha
call
retf
bound
push
retf
and
inc
add
mov
xor
arpl
dec
inc
scas
dec
neg
dec
cdq
ins
lock
pop
sub
dec
mov
stos
add
add
mov
sub
outs
dec
cmp
mov
inc
pop
dec
push
pusha
xor
cmp
shl
pusha
retf
mov
add
push
jne
mov
dec
pop
bound
or
enter
and
pop
push
pop
inc
daa
add
mov
inc
sbb
dec
inc
jp
xor
movs
xchg
fs
ret
and
and
mov
jl
add
outs
xor
jne
jbe
dec
and
or
mov
or
mov
push
xor
pop
pop
les
sub
push
add
or
cs
mov
rol
mov
xor
dec
ja
add
fwait
aam
nop
xor
push
pop
and
or
inc
inc
jo
and
fiadd
sbb
adc
mov
add
movs
imul
push
ss
add
push
shl
jb
adc
add
or
push
push
xor
xor
outs
sub
or
or
pop
push
xchg
fcom
adc
sub
aaa
addr16
mov
data16
dec
loopne
inc
sub
sub
ret
sub
adc
add
push
dec
push
in
and
aaa
hlt
aaa
cmps
in
sbb
call
push
add
lock
mov
pop
arpl
push
test
js
push
add
pushf
xchg
inc
fwait
aad
xor
push
or
xchg
or
sub
dec
jmp
nop
(bad)
test
jl
or
imul
push
loopne
sbb
push
mov
pop
jp
cmp
inc
xchg
shl
nop
shr
fsub
ror
mov
outs
jbe
add
enter
sub
pop
ds
je
inc
(bad)
sbb
inc
cmps
test
inc
xchg
inc
push
(bad)
rol
mov
ja
arpl
mov
les
push
dec
ss
inc
pop
push
ins
jb
and
add
call
test
ja
sbb
xchg
add
mov
and
inc
popf
or
fadd
push
lds
cmp
push
add
test
cmps
test
sub
ins
xor
inc
cs
cmp
inc
popa
inc
add
fmul
test
xor
scas
and
add
sbb
push
and
push
xor
jae
xor
dec
push
dec
and
or
or
adc
ja
mov
push
push
in
fwait
sub
sbb
xchg
inc
xor
jo
fdiv
adc
or
adc
or
ins
add
inc
ror
xchg
mov
js
loopne
xor
xor
test
test
mov
(bad)
jns
js
sub
into
inc
dec
and
xor
xor
add
mov
mov
into
add
xchg
or
inc
xor
mov
dec
push
icebp
xor
inc
dec
mov
push
push
xor
pusha
nop
add
pop
inc
shl
push
ins
push
dec
jl
mov
inc
xor
dec
fdivr
mov
inc
(bad)
call
add
dec
ficomp
mov
cs
xor
arpl
scas
push
ins
push
or
jbe
sub
aam
sbb
ins
and
xor
mov
outs
inc
cmps
fsub
mov
mov
int3
jno
add
dec
call
stos
push
dec
dec
sbb
mov
aad
adc
outs
pushf
inc
sub
dec
call
add
push
add
stos
xor
add
push
(bad)
call
inc
or
inc
inc
inc
ret
test
lock
aaa
add
cmp
aam
outs
outs
ds
xor
dec
bound
push
inc
add
xchg
test
and
add
push
sbb
les
enter
dec
dec
xchg
pop
inc
and
push
inc
les
mov
xchg
add
lods
inc
or
addr16
or
js
xchg
sub
(bad)
(bad)
sub
or
inc
daa
sub
adc
cmp
inc
mov
mov
ins
pop
add
dec
fsub
push
ficom
data16
mov
bound
jb
dec
rol
fwait
cmp
hlt
xchg
and
xor
and
cmps
pop
dec
je
into
push
push
xor
dec
jne
inc
jo
or
pop
mov
ficom
jo
xchg
xor
repnz
cmp
mov
test
jb
pop
xchg
aam
or
into
pop
lock
inc
push
inc
rol
and
xchg
icebp
imul
add
inc
sbb
outs
push
int3
movs
xchg
xchg
push
nop
stos
xor
popa
add
push
movs
and
mov
popa
ins
xchg
fisub
jo
ss
int3
cli
jne
push
push
fadd
adc
add
ss
outs
xchg
ret
cmp
mov
jb
sub
xor
inc
pusha
shl
cmp
movs
add
push
ss
or
or
dec
inc
inc
cmp
test
add
push
add
les
dec
dec
call
pop
mov
xchg
add
xor
or
retf
int3
dec
dec
xor
gs
jns
push
push
dec
mov
jmp
or
pop
push
push
add
nop
mov
shl
inc
add
loopne
sbb
inc
lods
add
sahf
ins
dec
hlt
inc
adc
push
lock
je
and
mov
mov
scas
xor
stos
mov
or
xor
ss
mov
imul
fs
pop
nop
test
sbb
inc
jo
sub
popa
dec
aaa
rol
pop
dec
mov
dec
test
sbb
ret
add
dec
test
pusha
fsub
mov
arpl
push
sbb
push
cs
push
ins
sub
aam
jp
or
repnz
clc
jb
add
and
das
and
shr
jl
xor
ss
push
ds
jmp
mov
inc
mov
stos
inc
push
xchg
adc
xor
jb
mov
movs
sub
or
inc
xor
mov
idiv
add
cmp
xor
add
push
fcmovb
in
or
cld
or
fs
mov
dec
xor
stos
sub
les
push
in
dec
and
sbb
mov
jp
push
xchg
mov
push
jo
xor
dec
fdiv
sbb
gs
movs
lods
xor
push
dec
xchg
sbb
mov
popa
dec
sahf
sbb
add
jle
jb
push
sbb
and
xor
xchg
push
adc
push
jle
pop
push
(bad)
mov
daa
and
inc
call
add
sbb
arpl
push
jno
jo
ins
xchg
in
and
or
push
pop
and
test
dec
call
(bad)
aam
cmp
mov
cmp
add
shl
xor
jp
pop
jp
adc
mov
rcl
pusha
mov
sbb
test
push
mov
adc
ss
ret
sub
fs
cmp
(bad)
jo
dec
int3
mov
xor
les
shl
pop
mov
dec
les
lock
xor
jb
sbb
add
fs
xor
jb
mov
pop
mov
and
test
push
pushw
int
fcmovnu
push
sub
xor
jp
cs
push
shr
mov
or
sahf
sub
gs
xchg
nop
adc
inc
xor
inc
inc
sub
adc
push
sbb
(bad)
test
cmp
xchg
xor
xchg
dec
inc
es
dec
pusha
nop
mov
jb
dec
mov
inc
add
adc
pusha
xor
dec
adc
and
or
les
in
mov
bound
inc
mov
or
push
push
data16
or
mov
fdivrp
add
inc
fs
mov
mov
push
mov
push
sahf
add
shl
dec
or
or
sbb
add
mov
inc
add
and
add
add
inc
dec
ret
mov
or
loopne
sbb
xor
sub
jmp
xor
nop
pop
jle
mov
adc
dec
cmp
test
dec
ins
ret
and
and
push
test
aad
xor
clc
aam
ret
push
inc
rcl
pop
xchg
dec
and
xor
sub
push
adc
nop
xor
push
add
dec
jle
ret
dec
cmp
popa
pop
mov
movs
test
adc
outs
push
inc
xor
dec
cwde
popa
or
cmp
dec
cmp
jmp
nop
jne
imul
jp
lock
xor
mov
bound
add
jp
dec
stos
retf
push
xchg
inc
push
inc
or
lods
xor
jbe
inc
xchg
popa
je
dec
clc
lock
mov
and
mov
sub
sub
sbb
pop
add
imul
sbb
dec
or
jl
or
loop
pop
xor
cmp
xor
add
dec
add
adc
jno
cwde
pop
cwde
push
cdq
push
dec
or
mov
add
push
xchg
push
or
xor
cs
aam
mov
mov
sub
pushf
xor
and
or
cmp
ror
adc
cmps
je
test
xor
sub
psubusb
add
dec
pop
bound
popa
cld
popa
adc
idiv
xchg
and
push
loopne
stos
and
and
lods
xor
inc
xor
fiadd
dec
js
je
adc
sbb
push
or
and
push
push
mov
or
sub
and
mov
mov
or
les
pop
xchg
xchg
push
inc
adc
inc
mov
and
jl
loop
sub
mov
xchg
dec
test
(bad)
stos
out
push
test
sub
dec
inc
mov
xor
gs
call
pushf
and
cmps
repnz
cmp
inc
movs
inc
xchg
ficomp
add
cdq
inc
dec
movs
push
sbb
adc
and
push
ss
xor
fsubp
addr16
inc
xchg
push
ins
not
adc
pop
push
mov
and
aam
sub
jb
add
xor
sub
dec
jne
push
jne
cmp
pop
lock
xchg
push
pop
mov
and
xchg
or
inc
mov
push
enter
xor
fidiv
mov
inc
inc
cmp
es
fistp
(bad)
mov
dec
sbb
push
shl
dec
fstp
ror
(bad)
mov
add
mov
dec
mov
movs
push
outs
mov
inc
jb
int3
push
ret
test
fs
adc
dec
add
push
pop
rcl
retf
xor
sub
push
enter
adc
outs
sub
push
dec
push
aaa
ss
mov
pusha
dec
and
movs
push
pop
pushf
push
xor
cmp
stos
or
inc
dec
mov
sub
push
nop
inc
je
data16
push
inc
sub
or
push
je
xchg
push
add
repnz
popa
jp
xchg
rcl
add
into
jb
fidiv
fwait
mov
jb
mov
ins
dec
dec
jns
add
push
adc
jo
jb
es
pop
dec
mov
movs
mov
and
jo
fsub
push
es
fs
ins
inc
xor
mov
ret
ss
sub
out
add
adc
pop
retf
lods
dec
inc
push
mov
mov
sbb
repnz
or
jae
add
(bad)
jbe
and
adc
mov
dec
inc
hlt
push
inc
dec
add
loopne
xchg
movs
jb
cs
fcomp
mov
inc
push
out
dec
xor
jle
aaa
bound
sar
add
stos
xor
xchg
rcl
shl
dec
bound
aaa
mov
aam
push
pop
aaa
push
je
sub
enter
ins
bound
xchg
inc
inc
sub
and
cmps
test
outs
xor
add
and
sub
inc
fs
sbb
ins
mov
xchg
xchg
dec
xor
test
mov
and
dec
pop
jl
and
inc
or
add
or
sbb
clc
mov
xor
je
inc
sbb
mov
in
test
out
jb
cmp
fisubr
lea
jne
test
dec
aam
ins
stos
dec
push
inc
mov
pop
or
add
dec
inc
adc
les
add
and
es
fsub
push
test
neg
test
push
push
xchg
xor
push
dec
or
rcl
mov
je
or
inc
ins
push
test
les
add
or
pop
add
xor
inc
aam
xor
ror
add
test
push
outs
js
test
jae
loop
adc
or
or
mov
gs
add
mov
and
dec
inc
mov
stos
add
dec
adc
lock
movs
mov
lods
outs
ins
bound
test
inc
shl
pop
dec
push
dec
push
push
push
cwde
loopne
jl
push
xor
jb
fild
add
aam
jo
cmp
mov
pop
fld
loopne
ss
push
sbb
ins
jbe
cmp
or
and
sub
dec
push
push
imul
pop
gs
fidiv
pusha
je
add
imul
adc
inc
or
adc
jmp
xor
rcl
jbe
in
xor
mov
push
pop
sbb
sub
ficomp
adc
movs
fdivr
mov
loopne
rcr
inc
dec
cmp
xor
mov
pop
push
inc
push
mov
add
call
inc
add
ins
call
retf
adc
cld
inc
adc
arpl
and
push
adc
push
cmps
inc
pop
jbe
and
ins
or
gs
mov
cs
push
test
jmp
(bad)
cld
dec
ins
outs
ret
xchg
fcom
mov
int3
push
hlt
xor
jl
leave
mov
push
mov
inc
xchg
dec
push
ja
add
das
xchg
ds
bound
push
xor
mov
pop
push
call
cli
xor
sbb
call
ins
cld
pop
xchg
adc
cs
dec
or
dec
lods
push
dec
loop
cmps
xchg
js
jp
sub
mov
or
in
ins
push
mov
je
dec
aaa
mov
inc
xchg
(bad)
or
push
push
push
xor
ins
arpl
inc
dec
add
mov
jb
sub
lea
scas
dec
and
jl
cmps
es
ss
ret
push
inc
adc
dec
(bad)
ins
adc
adc
mov
pop
or
adc
push
scas
outs
cmps
ret
es
dec
push
push
xchg
mov
call
data16
xchg
sbb
xor
adc
lock
push
pop
nop
inc
and
pop
push
adc
push
inc
or
mov
jne
jne
popa
inc
leave
xor
int
cmp
jbe
push
inc
movs
mov
outs
cli
dec
mov
fwait
out
jae
mov
adc
es
cmp
and
add
in
dec
push
es
xor
or
add
or
push
scas
cld
inc
mov
pop
jo
add
or
and
inc
sbb
mov
jns
xor
sbb
inc
dec
movs
and
inc
test
and
add
mov
cmp
inc
dec
pop
sub
or
push
adc
xchg
adc
fsub
inc
dec
dec
ret
xchg
rcr
dec
add
hlt
sbb
pop
stos
xchg
jbe
call
movs
sbb
xor
add
dec
add
call
shl
and
push
hlt
dec
clc
es
or
xchg
or
cwde
or
or
fisub
mov
adc
sub
rol
xchg
mov
cmp
add
xchg
nop
in
inc
jb
or
jo
es
dec
(bad)
inc
fucomp
dec
hlt
jp
imul
pop
int3
ins
push
xchg
test
aaa
xchg
inc
xor
ret
popa
ss
add
adc
fmul
add
stos
add
push
sahf
dec
add
jbe
pushf
sbb
pop
mov
inc
cli
sub
push
rcl
push
loope
gs
jo
rcr
inc
call
sub
adc
nop
bound
xchg
push
and
mov
sub
(bad)
push
jo
or
ins
aam
xor
nop
adc
lods
dec
xor
movs
pushf
xchg
jp
pop
ret
hlt
inc
adc
push
xor
jo
mov
cwde
inc
mov
mov
push
add
fcom
shl
and
mov
or
call
jo
xor
out
mov
sbb
xor
mov
dec
fcom
adc
mov
je
fsub
add
ficomp
add
ret
push
mov
ins
cwde
jo
xor
mov
ds
push
in
mov
retf
push
mov
retf
push
push
sbb
aaa
sub
je
add
hlt
inc
jp
xor
sub
scas
inc
adc
fst
jp
gs
push
xor
ins
pop
in
jbe
pop
push
aam
loopne
dec
add
cmp
ja
mov
adc
sbb
shl
add
mov
and
(bad)
mov
data16
adc
adc
inc
ja
sub
lock
and
adc
xchg
in
ss
dec
push
mov
or
push
mov
cmp
movs
call
jno
xor
stos
push
pop
sbb
add
push
sub
les
and
ret
and
sub
sub
cmp
push
sub
xchg
bound
aaa
cmps
jne
gs
inc
pop
push
add
xor
cmp
(bad)
imul
xchg
scas
sub
int3
add
ins
loope
dec
xchg
mov
push
add
popa
or
scas
xchg
loopne
enter
dec
push
xor
push
dec
jno
push
or
mov
sbb
movs
mov
lds
jmp
fs
add
je
inc
nop
test
push
imul
pusha
xchg
push
inc
jne
mov
fs
inc
aam
cmp
pop
jo
cmp
jb
jne
push
call
int3
sbb
je
push
push
xor
push
js
xor
xchg
(bad)
dec
and
xchg
push
mov
push
mov
loop
fsub
push
sbb
inc
shl
aad
dec
pushf
sub
add
mov
sub
push
dec
and
push
shl
je
mov
cdq
adc
or
dec
rol
xchg
or
inc
inc
and
test
mov
xor
and
sub
sub
add
stos
ins
inc
inc
push
push
bound
ja
and
stos
dec
ret
gs
sbb
push
imul
frstor
mov
xchg
or
add
pop
and
dec
je
in
xor
inc
mov
pop
je
movs
or
xchg
push
pop
jmp
and
push
and
popa
sub
sar
je
cmp
sbb
mov
fadd
xor
pusha
stos
mov
sbb
ror
ret
inc
add
mov
dec
xor
push
add
enter
ins
lock
and
push
fadd
mov
sub
inc
fiadd
cmp
aam
jne
xchg
xor
xor
add
or
aad
loopne
outs
mov
leave
adc
adc
push
sbb
aam
push
pop
or
scas
inc
adc
sbb
sub
mov
pop
adc
inc
xor
test
je
les
dec
or
in
sub
fs
test
mov
sbb
dec
or
ins
add
inc
clc
adc
mov
aam
ins
sub
pop
add
push
movs
inc
addr16
test
push
scas
je
inc
inc
jae
xchg
add
jno
or
push
dec
cs
ret
and
fdiv
dec
add
mov
fs
lods
test
inc
dec
and
ret
mov
push
retf
inc
pusha
addr16
jne
pushf
jo
jno
aad
jb
lods
cmp
sbb
inc
adc
test
addr16
xor
xor
sbb
push
push
rcl
ins
pop
push
cwde
pop
push
adc
es
sbb
sub
push
push
fiadd
dec
mov
push
hlt
xchg
mov
push
sbb
lock
inc
xchg
pop
push
ror
test
push
cmps
cmps
or
dec
je
inc
jnp
popa
push
mov
sbb
push
add
test
xchg
dec
jb
xchg
loope
mov
stos
dec
mov
loopne
jo
push
push
sbb
test
call
add
fcom
fs
inc
and
fsub
mov
sbb
js
mov
jne
fwait
xor
bound
mov
xor
mov
mov
jecxz
adc
inc
cmps
scas
xchg
dec
push
outs
push
rol
inc
jb
adc
sbb
xchg
mov
sub
fs
out
mov
xor
pop
imul
dec
inc
dec
xor
sbb
dec
inc
test
into
cmp
pusha
pop
xor
dec
sub
push
push
dec
or
sub
ins
inc
xor
leave
xchg
popa
adc
inc
inc
inc
sub
push
xor
bnd
mov
push
loop
bound
pop
js
or
xchg
inc
pop
and
dec
mov
or
push
adc
and
arpl
jl
xor
sbb
cs
inc
pushf
les
add
sbb
dec
movs
pushf
jle
push
mov
arpl
cmc
adc
add
loopne
cwde
sbb
add
jl
or
mov
movs
mov
aad
nop
call
add
mov
mov
cmps
dec
outs
fimul
xor
push
push
sbb
call
push
ins
mov
je
test
sub
sub
push
mov
or
ins
xchg
add
xor
mov
dec
dec
and
cmps
mov
jbe
jne
ror
mov
inc
mov
add
push
sbb
and
jb
test
mov
jne
push
es
inc
xchg
and
mov
or
add
jae
adc
mov
cli
jb
add
pop
xor
movs
mov
mov
(bad)
adc
sbb
sbb
push
adc
es
mov
dec
inc
inc
mov
and
xor
imul
jo
sbb
inc
es
dec
mov
cmps
and
xor
add
xor
adc
or
or
inc
jno
popa
adc
enter
add
ror
test
adc
mov
data16
mov
mov
movs
(bad)
lock
xchg
mov
or
add
sbb
xor
inc
cmp
or
enter
out
xchg
and
mov
inc
push
inc
sbb
jb
mov
pushf
jbe
popa
loope
jp
pop
inc
add
xor
xor
lock
xor
fcom
dec
popa
sub
adc
or
xor
dec
cmps
and
pop
mov
add
sar
sbb
in
add
cmp
movs
mov
adc
xchg
xor
loopne
inc
cli
gs
arpl
pusha
cmp
or
popa
jne
fidiv
outs
xchg
push
lock
inc
movs
dec
add
imul
cmps
add
adc
outs
push
push
lock
push
shl
ds
jae
mov
leave
mov
rcl
jle
xor
cmp
add
mov
in
nop
xor
(bad)
mov
neg
div
pop
daa
sbb
popf
dec
movs
pop
add
sahf
div
mov
push
add
mov
sbb
in
in
or
adc
pop
jbe
mov
and
mov
pushf
push
scas
add
and
inc
adc
aaa
xchg
xor
ins
(bad)
push
gs
and
push
cmp
jo
ins
fadd
jae
ins
jnp
in
pop
jne
ss
mov
pop
push
inc
cmps
cmp
inc
retf
push
xor
add
rol
push
ret
repz
pusha
lds
mov
mov
jle
sahf
pop
mov
pusha
mov
sti
sahf
jo
adc
push
nop
mov
(bad)
shl
movs
mov
loopne
cmp
(bad)
mov
xor
sub
add
mov
(bad)
clc
mov
xchg
stos
cmp
loopne
mov
or
sar
push
jo
fiadd
jo
jp
fist
add
mov
sahf
add
inc
call
dec
outs
iret
test
xchg
sbb
call
and
in
cmp
mov
adc
push
inc
mov
jns
mov
lahf
pop
je
in
sahf
test
je
(bad)
aam
fs
int3
mov
mov
loop
mov
inc
and
sub
aas
add
add
movs
adc
clc
jo
or
and
mov
or
imul
out
push
jae
sahf
int3
fadd
cmp
cmps
std
outs
push
mov
sub
in
repz
mov
adc
addr16
leave
jnp
movs
fimul
push
jo
add
dec
sti
pop
aam
stc
outs
add
mov
cmps
ror
mov
out
or
das
and
and
pop
or
sub
add
in
rcr
dec
jnp
iret
leave
and
in
clc
es
es
cli
scas
in
add
ss
mov
push
jg
cs
pop
pop
mov
pop
test
mov
mov
ss
out
push
mov
jle
xor
or
daa
add
movs
je
fwait
xchg
int
loopne
and
adc
mov
xchg
cmp
pushf
int3
add
fild
shl
mov
loopne
lock
add
pop
test
mov
loop
mov
adc
pop
lods
fadd
fidiv
daa
mov
sahf
add
cmps
(bad)
dec
les
add
in
dec
int3
inc
clc
pop
in
mov
xchg
dec
mov
xchg
jl
sub
out
jge
int3
(bad)
xchg
jo
ja
mov
push
adc
mov
push
mov
cmps
or
xchg
int
sar
cli
cmps
nop
mov
jns
ja
push
ss
add
push
or
jl
cli
xlat
push
jo
mov
inc
test
dec
add
daa
sbb
ds
fistp
imul
mov
test
push
pop
inc
inc
mov
sub
jg
jg
ficom
inc
and
adc
lock
xchg
jo
dec
test
outs
mov
loope
lds
js
adc
je
xlat
xchg
test
pusha
js
mov
hlt
pop
shl
outs
and
sti
pop
shl
fs
and
xchg
loopne
lock
dec
leave
repz
ds
dec
lods
pop
ret
and
add
pop
in
cld
iret
les
sbb
(bad)
daa
hlt
rol
popa
and
fidiv
daa
daa
out
in
fs
mov
lock
scas
sub
and
cld
mov
jmp
movs
stos
sar
lahf
add
fcomp
(bad)
add
rol
mov
pop
mov
fild
ja
daa
(bad)
jl
bsf
in
push
loopne
add
add
pop
sahf
out
or
cmp
repz
daa
scas
ins
lods
idiv
stc
sub
mov
cmp
rcr
mov
add
cmp
out
cmp
pusha
mov
clc
and
js
fmul
mov
repz
repz
loop
mov
push
js
imul
mov
pusha
iret
repz
int
mov
lahf
out
sub
mov
xor
mov
repz
mov
out
not
mov
clc
sub
pop
mov
clc
push
sti
add
inc
inc
lock
bound
inc
cld
push
in
scas
aad
mov
repz
mov
sub
outs
push
push
sbb
mov
cmp
push
sub
pop
mov
cld
popf
inc
pop
scas
inc
add
mov
jne
fild
jnp
inc
pop
shl
cmps
push
jns
popf
cs
fsubr
fst
mov
in
addr16
jg
scas
dec
dec
scas
outs
mov
dec
mov
lock
dec
cdq
fdiv
ss
aas
aam
inc
fld
fwait
bound
daa
xchg
adc
aas
addr16
pushf
dec
dec
mov
imul
bound
xchg
shr
aas
and
pop
fs
pop
jg
pop
enter
jo
imul
fs
fcomp
dec
aad
call
mov
push
push
adc
mov
rcr
lea
cmp
call
add
inc
(bad)
xchg
jb
push
mov
mov
pop
adc
pop
mov
(bad)
mov
push
cmps
inc
test
mov
cmps
in
jg
out
test
sub
adc
xchg
aas
repnz
aas
(bad)
into
mov
mov
enter
js
xchg
pushf
test
jl
mov
leave
xchg
lods
int
pop
push
leave
aas
inc
outs
pop
enter
(bad)
enter
mov
mov
cmp
mov
push
jge
fdivr
loop
rol
scas
jecxz
dec
dec
dec
jmp
jo
pcmpeqw
outs
enter
popf
sub
dec
cld
aas
mov
and
adc
inc
jg
adc
rcl
test
out
fldenv
push
out
xor
dec
cmp
cmp
mov
or
movs
cmp
daa
stc
jmp
mov
imul
addps
in
add
outs
pop
test
je
aam
pop
ficom
push
push
aaa
stc
pop
enter
or
push
fisubr
sbb
out
add
push
sbb
out
lods
push
xchg
loopne
mov
mov
jg
shr
inc
inc
add
adc
jp
xchg
lahf
mov
outs
pop
mov
lar
add
xchg
aam
inc
lea
pop
sti
dec
add
pop
in
and
or
inc
fwait
xor
shl
and
jb
mov
in
add
nop
mov
iret
xor
push
pop
push
xlat
pop
and
es
mov
out
sahf
add
outs
add
sahf
out
add
add
inc
bnd
push
test
leave
and
repnz
mov
mov
pop
aaa
addr16
fmul
inc
out
scas
jo
out
jno
jo
add
add
cs
xchg
mov
or
sbb
out
scas
inc
push
inc
and
cs
add
int
out
xchg
jb
leave
inc
shr
fdivr
mov
pop
add
cmp
or
and
pop
inc
enter
mov
cmps
cmp
in
inc
xlat
ins
mov
dec
test
adc
call
in
push
push
sbb
aaa
aad
in
mov
push
inc
jo
xchg
add
xchg
add
pusha
mov
xchg
xchg
xchg
mov
mov
sbb
cld
pushf
nop
push
and
mov
xchg
xchg
inc
mov
pop
enter
pushf
cmp
jmp
sub
cs
out
add
add
add
rcl
fmul
inc
call
sub
leave
or
and
mov
dec
mov
fs
adc
adc
shl
push
stos
or
mov
jl
sbb
pop
pop
and
ror
xchg
mov
cmps
loope
shl
enter
cwde
mov
das
xchg
lahf
int3
mov
xchg
inc
adc
and
inc
jo
idiv
or
add
pop
fcom
shr
iret
mov
push
mov
shl
in
xchg
inc
fcom
add
inc
mov
data16
xchg
imul
mov
dec
dec
cs
dec
inc
dec
push
pop
ins
cmp
divps
sar
out
aas
or
dec
jnp
mov
and
stos
pop
sbb
pop
xor
dec
push
mov
aam
mov
push
daa
xlat
ja
ja
and
xor
dec
cs
dec
fsub
inc
aad
dec
xchg
ret
not
inc
cmp
push
add
or
enter
ret
mov
stos
inc
push
mov
cmp
sbb
mov
pop
adc
cmp
add
cmp
lods
sbb
mov
ror
dec
dec
scas
ret
mov
push
daa
push
add
enter
mov
inc
add
dec
jle
dec
test
pop
loopne
iret
jae
cmp
mov
call
lock
pop
xchg
lock
les
mov
sub
push
lds
test
mov
out
mov
adc
add
add
lods
cwde
fbstp
and
sahf
dec
shl
lahf
clc
and
lahf
cs
sub
mov
adc
add
lahf
xor
test
enter
test
mov
or
mov
pop
pushf
(bad)
push
xor
ins
xchg
pop
ror
repz
adc
or
inc
and
scas
and
daa
cmp
es
push
js
mov
dec
mov
repnz
lahf
add
adc
xchg
pushf
nop
push
sub
dec
sahf
pop
and
daa
ins
add
jns
popf
mov
dec
repnz
scas
fcomp
or
nop
push
and
leave
xor
and
xchg
pushf
int
fs
jns
push
mov
cdq
add
inc
sahf
out
add
add
or
(bad)
retf
add
aas
aas
mul
cmp
sbb
or
popf
mov
retf
dec
mov
lock
push
push
pop
retf
pop
out
int
or
or
xchg
das
aas
mov
add
xor
cs
daa
mov
repz
lods
or
and
xchg
inc
pop
mov
and
xchg
dec
pop
xor
adc
and
nop
inc
pop
pushf
retf
mov
inc
push
enter
(bad)
mov
mov
leave
and
mov
mov
mov
repnz
das
add
ror
rol
add
int3
and
sub
test
int
adc
in
cs
inc
push
add
sub
je
inc
inc
add
jbe
xchg
fisubr
imul
bound
push
pop
aas
pop
in
mov
pop
aas
add
push
dec
cmps
pusha
in
enter
nop
sbb
add
sbb
dec
sbb
retf
arpl
and
pop
pop
push
cld
xor
outs
jmp
bound
push
cs
or
ret
and
sub
adc
xor
pop
adc
mov
push
cs
mov
mov
ins
cwde
sbb
add
les
leave
add
imul
jbe
or
aas
inc
iret
sbb
dec
jbe
lock
aas
add
cmp
inc
ds
adc
aas
inc
add
or
mov
xchg
pop
loop
ss
add
xchg
out
or
add
pop
frstor
xchg
xor
mov
dec
mov
pop
in
dec
or
adc
add
inc
xor
movsx
and
mov
fisubr
cs
push
hlt
inc
imul
pop
clc
inc
mov
comiss
pop
aas
sar
push
adc
inc
add
jmp
scas
ja
test
out
outs
dec
(bad)
sbb
or
or
or
or
in
jbe
scas
or
daa
adc
adc
jbe
dec
das
and
in
in
push
addr16
das
push
xorps
mov
imul
push
and
dec
sahf
out
sbb
push
pop
sbb
cmp
test
cmp
pop
xchg
sub
jbe
fbld
sub
js
xlat
sbb
data16
fadd
push
(bad)
mov
mov
mov
jae
addr16
pop
rol
into
cmp
adc
sbb
or
loope
iret
repz
lods
mov
(bad)
out
pop
(bad)
xor
or
push
cmp
inc
sahf
out
sahf
dec
dec
push
pop
pusha
push
je
pop
mov
pushf
mov
cmp
repz
mov
daa
iret
repz
fsub
call
int
clc
add
or
and
repz
sub
xor
push
iret
cmp
push
jo
cmp
repz
mov
iret
repz
add
cmp
repz
xor
repz
repz
dec
push
pop
fs
out
fisubr
test
mov
fsubr
scas
cld
iret
repz
sub
dec
jo
jo
ds
jmp
fsubr
dec
pop
pop
push
pop
mov
jmp
cmp
adc
dec
into
cmc
mov
jmp
add
jnp
in
or
and
fisttp
mov
pop
sbb
mov
pop
mov
fild
(bad)
cmp
mov
sbb
in
out
adc
mov
mov
ficomp
dec
leave
mov
mov
xor
fcomp
loopne
jb
jle
mov
and
enter
add
and
xor
push
xor
inc
and
add
add
inc
dec
clc
push
push
pusha
xchg
dec
adc
jns
out
pop
and
sbb
out
sahf
out
pop
jo
js
sahf
out
and
push
mov
out
cwde
adc
sahf
test
mov
mov
jns
out
mov
out
sahf
out
int3
sbb
sbb
adc
sbb
push
jl
out
hlt
pop
cld
and
repz
shl
or
and
adc
sbb
xor
push
add
or
inc
pop
pop
pop
and
xchg
cdq
arpl
adc
das
push
xchg
jl
test
repz
inc
push
pop
xchg
or
dec
mov
and
inc
add
add
leave
test
jns
jno
mov
xchg
es
out
inc
push
cmp
pop
ja
xor
out
mov
repnz
das
sahf
aaa
in
repz
ins
add
push
pop
js
sahf
out
xchg
mov
repz
and
(bad)
shl
dec
push
ins
call
add
xor
scas
or
add
push
sbb
and
leave
arpl
mov
add
nop
cmovo
hlt
in
jl
adc
mov
sub
mov
mov
ret
inc
and
sahf
mov
sub
(bad)
call
std
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
outs
(bad)
inc
mov
cmps
iret
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
(bad)
(bad)
inc
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
(bad)
(bad)
jmp
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
mov
cmps
scas
mov
or
add
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
inc
push
movs
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
mov
(bad)
call
push
pusha
les
add
add
or
mov
(bad)
(bad)
clc
aas
pop
fs
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
inc
lds
mov
ins
scas
add
aas
xor
aad
mov
std
(bad)
(bad)
(bad)
(bad)
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
jmp
xchg
cmp
push
mov
xchg
aas
and
(bad)
loop
mov
jp
std
(bad)
mov
mov
jl
mov
das
lea
mov
inc
(bad)
(bad)
(bad)
mov
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
(bad)
(bad)
inc
xchg
cli
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
(bad)
(bad)
dec
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
clc
(bad)
(bad)
(bad)
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
(bad)
inc
cli
push
scas
into
imul
faddp
jge
call
call
sahf
out
pop
push
xchg
cmp
push
and
ret
cmp
push
xchg
jge
pop
ficomp
frstor
or
mov
xor
xchg
push
sti
xor
arpl
lods
fs
sbb
push
push
and
test
in
outs
jb
xor
lahf
int3
and
cmp
ror
push
aas
imul
aas
push
mov
dec
push
add
push
lock
out
add
dec
je
lds
jae
add
sbb
pop
dec
pop
xor
dec
ror
test
push
mov
pusha
or
add
test
pusha
mov
adc
outs
scas
mov
imul
imul
dec
movs
out
aaa
bound
mov
jno
add
pop
ins
lds
aas
mov
inc
add
mov
les
push
ja
sbb
sub
lock
jmp
mov
and
add
fsub
je
mov
lods
mov
add
dec
dec
cmp
lahf
outs
jne
jo
add
mov
push
outs
or
gs
or
xor
ja
push
xor
bound
push
idiv
sbb
cmp
jo
inc
jne
mov
push
pop
les
add
push
push
add
push
xchg
or
add
jne
mov
add
add
sub
enter
inc
aaa
inc
and
sahf
fild
add
push
add
lea
nop
inc
jns
jne
mov
pop
outs
push
fwait
call
add
dec
fdiv
lmsw
mov
adc
retf
fwait
aam
jbe
or
outs
cmp
pop
xor
push
xor
add
push
dec
push
push
mov
add
inc
in
mov
lahf
push
push
add
adc
cmp
or
inc
add
ins
mov
jb
inc
sti
sub
and
js
jbe
repz
sub
cmps
fiadd
inc
xchg
neg
jnp
outs
scas
je
sub
sub
scas
dec
inc
xor
mov
add
xor
mov
out
adc
cmp
je
push
xor
push
dec
je
push
add
int3
mov
push
push
push
adc
dec
add
push
inc
inc
nop
dec
dec
std
lods
jg
(bad)
aas
push
mov
adc
inc
sbb
cmp
and
pop
sub
xor
in
(bad)
dec
call
adc
dec
sub
and
xor
cmp
or
sar
dec
gs
sub
movs
pop
xor
hlt
and
(bad)
std
(bad)
mov
dec
add
mov
push
es
lea
les
sbb
push
dec
stc
out
outs
dec
push
dec
movs
hlt
inc
push
sub
les
mov
ret
inc
jl
mov
aaa
imul
push
add
pusha
fisttp
ror
pop
adc
push
ins
inc
daa
push
ss
cmp
pop
cmp
pop
jb
cmp
push
adc
inc
xor
dec
mov
mov
loope
cmps
es
push
inc
mov
mov
inc
mov
xchg
jmp
xchg
inc
cld
dec
push
xchg
mov
push
pop
adc
xor
add
push
cmp
adc
or
adc
jg
retf
push
dec
dec
fdivr
int
addr16
push
cmp
sub
jp
enter
jno
mov
out
lahf
idiv
inc
sub
and
lods
jle
dec
cmp
ins
push
ds
cmp
pushf
cld
xchg
jl
dec
in
xor
cmp
and
xor
loop
aad
ds
and
xchg
adc
imul
sub
clc
int3
xor
bound
inc
or
js
inc
inc
lods
push
int
(bad)
iret
(bad)
scas
hlt
(bad)
(bad)
push
retf
loope
dec
fiadd
inc
push
repz
push
inc
xchg
(bad)
stc
sub
cmps
cdq
and
in
(bad)
fist
push
fld
(bad)
int3
and
fldenv
jge
xchg
mov
sbb
jmp
scas
int3
jl
mov
fcmovne
mov
or
pop
dec
xor
push
xchg
popa
push
xor
or
mov
add
cli
(bad)
addr16
nop
fs
pop
add
push
jne
sbb
mov
pop
cld
jg
loopne
(bad)
es
dec
inc
add
(bad)
mov
clc
dec
into
and
nop
rol
dec
xlat
lds
(bad)
jmp
lock
mov
or
scas
xor
mov
add
cmc
inc
pop
cld
(bad)
(bad)
(bad)
mov
adc
mov
jge
lds
ja
test
mov
cmp
aaa
into
and
call
ds
push
inc
mov
call
add
arpl
(bad)
dec
je
add
mov
sti
mov
adc
repz
call
pop
scas
es
js
neg
adc
mov
bound
adc
call
push
adc
gs
je
mov
(bad)
push
pop
cld
add
ficom
mov
rcr
inc
mov
leave
rcl
dec
fisttp
or
(bad)
(bad)
inc
dec
dec
into
xchg
pop
popa
(bad)
pop
arpl
sbb
(bad)
xchg
and
iret
icebp
or
movs
imul
ins
lds
mov
push
add
std
call
pop
adc
fistp
dec
mov
dec
push
int3
or
cld
ret
jg
add
mov
icebp
and
cs
rol
sub
mov
(bad)
push
push
ss
inc
jl
int
aaa
push
int3
and
sbb
push
mov
adc
dec
jg
(bad)
(bad)
mov
xor
cmc
push
lods
xor
ja
dec
jo
fild
(bad)
(bad)
inc
cwde
xor
addr16
jge
push
push
clc
xchg
xor
(bad)
leave
push
jb
and
ror
xor
mov
jp
cmps
js
push
retf
push
nop
sbb
lock
xchg
jae
popa
and
scas
jge
lock
add
cmps
push
mov
xchg
inc
repnz
adc
mov
lea
sub
jl
data16
test
retf
cli
add
fild
sbb
imul
dec
inc
into
add
sti
mov
lds
sub
mov
fdiv
push
mov
dec
mov
loop
hlt
call
dec
mov
push
inc
fidiv
dec
add
(bad)
mov
(bad)
mov
mov
dec
mov
mov
adc
loope
out
repz
(bad)
iret
lods
inc
cmps
and
cwde
dec
cld
jmp
jg
les
add
inc
movs
ins
idiv
ja
sub
mov
rol
(bad)
jle
cmp
xchg
dec
inc
pop
icebp
push
sahf
jle
cmp
(bad)
sub
ins
xchg
add
lock
repz
fs
inc
retf
and
jle
xor
repz
mov
cli
sbb
data16
xor
adc
mov
mov
xchg
(bad)
(bad)
jg
lds
int3
push
inc
mov
mov
push
pop
pop
mov
jg
mov
(bad)
adc
(bad)
mov
pusha
pop
mov
stos
out
jmp
aaa
cmps
inc
rol
dec
outs
mov
imul
(bad)
sub
stos
pop
and
mov
adc
nop
cdq
pop
or
into
popf
scas
push
cld
jl
jmp
inc
popa
mov
(bad)
pop
inc
mov
ret
sub
pop
outs
mov
mov
lock
jge
inc
frndint
push
(bad)
lds
mov
inc
mov
push
mov
(bad)
(bad)
dec
xor
cmc
inc
push
fild
cs
adc
bound
fwait
(bad)
call
add
mov
scas
and
or
jp
leave
(bad)
pop
std
rol
(bad)
inc
dec
sbb
mov
mov
sahf
jne
int
loope
adc
and
or
fidivr
pop
call
fs
add
adc
and
add
mov
mov
adc
ja
lods
mov
stos
mov
mov
dec
mov
mov
scas
mov
jmp
pop
push
sbb
dec
(bad)
(bad)
(bad)
out
int3
adc
mov
jae
or
mov
and
inc
ficomp
push
mov
(bad)
(bad)
call
and
je
in
dec
sbb
bound
sub
push
lods
xlat
mov
or
mov
add
mov
dec
rcr
retf
inc
imul
sbb
shr
(bad)
push
pop
adc
into
dec
jp
mov
dec
sar
cli
pop
loopne
cmp
fisttp
pop
dec
xchg
je
add
mov
mov
or
xchg
inc
push
mov
dec
pop
jp
retf
sbb
(bad)
out
xor
iret
mov
jl
push
movs
mov
add
loopne
pop
inc
sub
jle
lods
inc
fimul
jmp
mov
dec
xchg
cmp
fbstp
daa
data16
xchg
icebp
call
push
push
lods
xor
inc
jl
inc
adc
xchg
push
add
mul
mov
adc
sub
clc
(bad)
stc
icebp
sahf
scas
mov
jmp
cmp
(bad)
mov
jg
shl
adc
xchg
add
add
and
sbb
xor
push
inc
std
in
jmp
or
movs
clc
call
repz
xchg
je
mov
push
mov
test
mov
xor
retf
test
add
jo
jnp
(bad)
es
adc
stos
into
cmps
mov
cmc
adc
fmul
xchg
hlt
inc
sub
enter
xor
mov
jmp
mov
jb
or
fdivrp
fisttp
add
pop
pusha
sbb
fsub
sar
(bad)
cmc
cmc
fmul
mov
sbb
bound
jmp
adc
xor
outs
cli
or
mov
push
(bad)
ficom
mov
scas
loopne
inc
into
sub
std
frstor
mov
loope
std
jns
int
mov
dec
push
mov
loopne
(bad)
inc
adc
add
call
int3
jg
add
xor
push
ins
mov
mov
pop
fimul
mov
xor
mov
clc
das
fidivr
sbb
cdq
add
pop
outs
push
(bad)
fisttp
mov
inc
sub
jmp
xlat
(bad)
(bad)
in
fs
and
xchg
or
push
mov
jno
dec
cmp
cmc
push
inc
inc
js
dec
mov
pop
add
dec
cli
lds
mov
xor
out
in
rcl
and
sbb
nop
pop
iret
push
or
imul
or
call
xor
add
xor
jbe
mov
mov
int3
inc
pop
test
outs
aas
jae
(bad)
mov
and
scas
sub
xor
inc
inc
mov
(bad)
dec
scas
ss
add
lds
inc
bound
pop
mov
inc
mov
mov
jle
dec
scas
ret
(bad)
mov
sbb
aaa
pop
test
into
sub
add
jl
xchg
test
sbb
daa
push
mov
clc
jmp
push
cmp
iret
jmp
mov
retf
aas
inc
fiadd
fild
mov
xchg
cmp
into
lahf
scas
xlat
scas
jge
ja
adc
outs
mov
sbb
jle
cmp
pop
inc
or
cvtps2pd
dec
jp
or
or
cmp
mov
mov
int3
dec
mov
scas
lock
cli
into
call
cmp
mov
outs
es
enter
mov
lds
(bad)
test
pop
or
mov
dec
fmul
adc
add
push
loopne
sbb
or
sti
jbe
jmp
into
xchg
sbb
xchg
or
test
mov
pop
mov
xor
sub
das
(bad)
test
fcmovbe
ror
xor
xchg
mov
jl
xor
add
sub
mov
dec
stos
(bad)
xchg
je
dec
push
jmp
xchg
xor
or
pusha
xchg
push
jmp
cmp
nop
in
fidiv
je
lds
mov
clc
test
into
cmps
outs
mov
push
pop
cmc
out
movd
mov
es
xrelease
xchg
fucomip
cs
mov
jle
mov
js
mul
push
aas
xor
pop
push
adc
xchg
jle
mov
jp
fldl2e
dec
or
pop
or
pop
into
sub
test
(bad)
pop
dec
fild
and
mov
push
sub
xor
inc
or
je
xor
xchg
xor
push
mov
(bad)
mov
stc
mov
cmc
outs
bound
pop
fidivr
lds
mov
sub
dec
into
and
data16
fistp
cmps
inc
bound
mov
repz
cmp
inc
jne
dec
scas
push
jl
mov
int
cwde
cld
popf
dec
(bad)
xor
ret
jl
mov
(bad)
mov
es
lods
xlat
and
je
(bad)
fcomip
pop
outs
push
dec
jl
mov
mov
icebp
pop
xchg
xor
out
(bad)
push
xor
mov
push
int3
xor
dec
push
test
mov
push
(bad)
mov
jg
mov
sub
inc
fimul
and
es
(bad)
push
(bad)
push
add
sbb
push
lds
or
mov
or
jmp
sti
mov
mov
jno
into
mov
push
add
loopne
daa
fstp
dec
jl
stos
inc
lahf
jmp
jle
add
mov
out
pop
inc
jl
jbe
into
pop
push
sbb
or
xor
fs
dec
mov
xor
mov
xchg
sahf
dec
dec
jbe
xchg
fisttp
test
(bad)
mov
es
dec
frstor
pop
cmp
adc
adc
repz
jne
mov
ja
mov
inc
mov
es
jnp
dec
lock
add
push
(bad)
push
sti
aas
pop
sbb
dec
adc
inc
mov
jg
out
(bad)
ficomp
imul
ror
cmp
ret
add
sub
mov
cld
(bad)
dec
aas
jg
nop
mov
add
inc
inc
add
inc
push
fiadd
fs
aaa
sub
mov
or
add
fdiv
pop
dec
mov
pop
enter
adc
das
add
repnz
sbb
shl
xchg
pop
push
add
sbb
mov
jmp
mov
rcl
das
loop
xor
jne
retf
xor
add
pop
dec
xor
call
retf
repz
retf
(bad)
fcmovnb
ja
add
jmp
jle
aas
push
mov
das
sub
or
cmp
pop
rcr
jg
fld
add
mov
push
repz
(bad)
call
push
addr16
adc
lds
pop
scas
aad
(bad)
mov
add
mov
push
scas
xchg
popa
push
movs
xor
push
sar
adc
adc
cmovge
lds
inc
je
adc
add
cmc
add
sahf
mov
add
xchg
fidivr
xor
movs
adc
pop
int3
or
nop
int
push
push
adc
lock
mov
fcompp
test
mov
push
pop
dec
fst
inc
pop
mov
xchg
arpl
or
scas
sub
fisub
rol
pop
mov
(bad)
(bad)
jmp
lods
pop
or
dec
inc
cdq
int3
jo
and
(bad)
xchg
dec
(bad)
mov
mov
jmp
leave
test
mov
xchg
es
enter
test
outs
(bad)
(bad)
data16
ret
jle
lods
(bad)
push
retf
outs
scas
jb
dec
or
mov
jbe
inc
push
mov
aam
inc
fimul
mov
dec
cmc
in
(bad)
dec
sbb
(bad)
cmp
pop
retf
bound
mov
retf
lds
cmc
or
sbb
mov
dec
jg
inc
dec
sti
mov
int
inc
mov
pop
mul
in
push
mov
stc
enter
mov
cmps
js
retf
pop
mov
jmp
ror
mov
shl
(bad)
sbb
out
sbb
movs
lock
or
adc
cmps
cli
or
fiadd
stc
jg
fchs
fild
mov
inc
mov
jg
out
arpl
stc
fild
inc
stos
fisubr
clc
sti
mov
adc
inc
xor
sbb
scas
fidivr
fstp
test
es
mov
mov
and
sbb
(bad)
jg
(bad)
fisub
(bad)
(bad)
fldenv
das
repnz
hlt
aaa
pop
std
add
inc
sahf
or
add
test
dec
movs
xchg
loop
cmp
sbb
mov
add
pop
cmps
sub
jp
xor
aaa
inc
cmp
adc
pusha
loop
lods
sub
pop
xchg
jmp
pop
dec
inc
test
lods
push
inc
cmp
cmp
dec
sbb
add
mov
xchg
mov
or
(bad)
cmp
lods
xor
cmp
movs
(bad)
dec
cs
mov
cld
add
cdq
push
push
out
fcmove
cmp
icebp
or
dec
inc
pop
mov
pop
cld
in
jl
retf
rcl
fld
jmp
into
sbb
pushf
mov
inc
pop
dec
dec
out
xchg
sub
mov
fcmovu
sahf
addr16
icebp
add
push
dec
mov
jne
sub
lock
mov
mov
jg
les
adc
fld
inc
scas
xchg
outs
inc
clc
out
cmp
mov
cmp
clc
and
das
pop
mov
and
bound
jbe
mov
inc
clc
stos
inc
pop
inc
xchg
push
mov
retf
repz
inc
int3
push
xchg
fimul
xor
cs
inc
mov
inc
dec
cmp
mul
mov
xor
fadd
and
les
sub
pop
les
(bad)
pop
push
dec
ret
jg
sub
es
scas
xor
dec
and
aas
es
std
ds
aam
and
in
adc
sbb
fisub
into
popf
mov
inc
outs
(bad)
sub
and
inc
movs
cmp
xor
inc
add
(bad)
push
pop
into
cmps
call
pop
arpl
cwde
outs
pop
mov
rep
mov
bound
mov
push
mov
mov
mov
sub
out
enter
nop
outs
sub
test
cmps
dec
sub
mov
inc
je
das
push
sub
dec
lahf
lock
pop
mov
pop
push
dec
call
enter
lock
adc
ret
add
adc
int
jg
inc
ins
repz
stc
jp
mov
inc
push
xor
pop
dec
cwde
and
retf
sbb
xchg
mov
inc
and
into
add
jl
outs
or
adc
cmp
inc
mov
in
cmps
xchg
sahf
adc
mov
adc
mov
pop
idiv
sbb
cdq
push
fcmovb
(bad)
fcomip
push
mov
addr16
pop
rcl
pusha
fs
mov
scas
loope
call
loope
add
into
jo
mov
jb
int3
inc
jle
adc
je
test
out
aas
add
cmp
push
nop
cmps
xor
pop
dec
inc
adc
add
push
push
inc
adc
sub
pop
add
pop
add
outs
clc
fcmovnu
or
or
shl
xlat
jl
dec
inc
mov
aas
mov
and
push
lea
adc
nop
test
les
push
xor
pop
int3
fmul
push
nop
sub
pop
popa
rcl
or
push
fucomi
movs
cmps
mov
out
sbb
pop
mov
and
mov
into
test
fst
ins
test
nop
inc
dec
stos
mov
and
inc
dec
mov
bound
sbb
push
cs
jnp
xor
(bad)
inc
movs
push
arpl
xlat
test
jb
and
into
push
and
add
in
gs
or
xchg
loopne
dec
mov
xor
add
xor
mov
fistp
call
sub
out
mov
scas
and
lahf
fiadd
sbb
xchg
inc
push
mov
adc
ret
jle
lods
dec
push
int
push
aaa
(bad)
ins
iret
add
adc
mov
adc
mov
fistp
mov
lds
xchg
xor
mov
and
mov
push
mov
xchg
dec
test
push
add
pop
rcr
into
xchg
sbb
or
mov
pusha
shl
lock
pusha
push
(bad)
xor
mov
nop
add
dec
xchg
push
jmp
cmps
push
outs
mov
std
cmc
cs
dec
into
pop
xchg
adc
ret
pop
cmp
push
scas
call
or
cmp
or
jle
test
mov
aam
push
push
std
fild
jge
push
jl
pop
jb
jae
push
test
adc
idiv
test
loopne
aaa
sub
adc
fild
xchg
in
popa
add
mov
inc
mov
sbb
push
das
cwde
(bad)
push
test
mov
sub
call
movs
jmp
std
xor
jbe
jmp
adc
or
xchg
add
mov
in
movs
dec
sahf
adc
sub
fild
mov
sbb
and
sar
mov
(bad)
(bad)
(bad)
(bad)
cmp
cmp
or
cmc
jmp
shl
pop
shl
rcl
mov
add
std
stos
sti
sub
fcomi
adc
jns
inc
cli
xor
mov
(bad)
jns
sub
cs
mov
inc
fcomp
lea
pop
cmc
stos
out
mov
dec
sbb
inc
ins
add
pop
sub
sbb
(bad)
not
or
sub
mov
xchg
mov
pusha
clc
push
fsub
jbe
movs
and
or
test
mov
mov
cmp
inc
je
ret
fist
sub
mov
or
enter
pop
ja
mov
lahf
dec
push
mov
cmp
call
mov
dec
rdtsc
mov
popa
pop
push
mov
(bad)
call
je
rcr
add
add
loop
movs
push
pop
fiadd
out
int3
jo
mov
dec
hlt
fnstenv
dec
dec
lods
jae
sbb
into
adc
adc
mov
aam
cs
inc
inc
call
(bad)
lods
test
mov
cld
inc
lahf
pop
repz
jbe
sbb
inc
(bad)
imul
das
ss
es
or
int3
add
or
dec
cmps
xchg
push
pop
sbb
fstp
sbb
push
mov
jle
push
push
(bad)
fist
push
push
int
add
repnz
mov
jmp
xor
pop
sub
mov
sbb
pop
jle
sbb
mov
dec
inc
adc
dec
jbe
int3
(bad)
fld
mov
pop
mov
arpl
or
xor
jle
ror
mov
xchg
fiadd
mov
adc
lods
push
jl
xchg
pop
add
aaa
jb
jnp
push
(bad)
push
jl
and
mov
xchg
jg
jl
repnz
nop
inc
aam
sub
or
mov
loop
movs
dec
clc
out
aas
sbb
int
or
dec
jle
add
jl
imul
add
add
scas
out
pop
aas
push
repz
dec
out
cmp
and
loop
xchg
dec
jl
dec
add
and
jl
xchg
xacquire
inc
fisub
jne
inc
sub
add
les
test
mov
cmp
push
ret
ds
inc
xchg
push
push
jae
dec
dec
adc
dec
mov
add
xchg
add
add
pop
xor
dec
dec
fs
test
(bad)
jno
add
cld
call
xor
add
test
or
mov
test
rol
push
add
sub
fist
mov
push
dec
mov
pop
inc
pop
jbe
popa
(bad)
call
jp
fistp
pop
cli
jmp
pop
retf
mov
sbb
std
mov
stos
pop
fdiv
inc
mov
mov
scas
clc
jg
sub
add
test
cmc
adc
into
and
bound
mov
push
sbb
dec
and
mov
or
enter
lock
je
fnstcw
int3
cmp
inc
fcomip
dec
sub
push
int3
dec
pop
mov
outs
aam
nop
and
cmp
daa
(bad)
(bad)
call
(bad)
cmp
inc
cmc
jmp
dec
mov
lods
xor
aam
jo
cmp
dec
pop
clc
outs
clc
add
push
sbb
pop
lods
cmp
mov
out
loop
push
and
js
xor
cmp
dec
in
dec
adc
sbb
loopne
pop
scas
lock
jne
sbb
mov
dec
xchg
mov
test
xchg
or
inc
or
inc
outs
data16
ins
add
dec
ds
das
push
cmc
sbb
mov
cmp
stos
ret
ret
mov
add
ret
pop
retf
sbb
into
push
adc
mov
inc
and
shr
push
xor
xchg
sbb
aad
ret
add
xchg
adc
bound
mov
aam
mov
push
add
or
dec
sub
out
mov
(bad)
fwait
mov
xor
inc
cmp
scas
cld
mov
int3
push
nop
retf
or
cmp
(bad)
into
pop
pop
jbe
cmp
mov
dec
push
xor
jnp
movs
xlat
mov
loopne
cmps
sub
pop
test
mov
xor
adc
push
fisub
sub
not
dec
jg
repz
add
(bad)
cmps
mov
inc
mov
xchg
push
mov
mov
sbb
jg
jg
xor
fs
call
addr16
add
les
push
dec
lds
inc
cld
jmp
sar
pushf
dec
add
xchg
dec
mov
sub
push
pop
xchg
and
jmp
pop
shl
mov
xor
mov
outs
clc
inc
add
adc
stos
jnp
int3
pop
je
fisttp
xor
or
inc
int3
sbb
adc
scas
cli
stos
jo
mov
mov
lds
sbb
xchg
mov
mov
push
mov
fisttp
and
cmps
fistp
das
mov
fnstenv
jb
mov
push
dec
mov
sbb
mov
fidivr
inc
pop
scas
call
aaa
pusha
xchg
ja
mov
daa
sbb
push
inc
(bad)
sbb
imul
or
inc
or
cmp
ficomp
mov
popa
xor
add
les
lods
mov
xor
inc
loop
or
inc
jl
inc
jb
mov
ins
inc
cmps
mov
sub
sbb
dec
jecxz
jne
ss
add
dec
(bad)
rcl
jg
sbb
repz
iret
jge
xor
fild
lds
test
(bad)
dec
mov
jg
or
js
fsubr
dec
int3
inc
not
inc
pop
int
push
xor
outs
mov
add
mov
push
dec
mov
jp
(bad)
adc
pop
mov
in
pushf
dec
cmc
mov
out
mov
fadd
mov
pop
push
popa
inc
mov
add
xor
xchg
inc
icebp
jae
nop
es
or
adc
mov
sub
aas
mov
aaa
or
imul
cmp
rol
retf
stos
loope
pop
inc
cmps
arpl
adc
or
(bad)
xlat
push
inc
dec
xchg
mov
and
into
xchg
lods
ss
push
sub
test
(bad)
jge
xchg
shl
push
inc
ins
(bad)
into
or
rcr
sbb
(bad)
fwait
push
jl
dec
fadd
mov
pop
xor
pop
(bad)
jae
mov
jo
(bad)
cmp
jne
ins
xor
mov
cmp
int3
add
inc
gs
lds
aaa
mov
fild
shr
call
pop
jmp
adc
jl
jnp
push
mov
jb
cld
into
test
or
adc
add
cld
fst
arpl
std
mov
enter
loop
(bad)
xlat
jl
rcr
mov
xor
add
pop
xcrypt-ecb
cmps
dec
sar
(bad)
add
xor
and
mov
push
into
xor
cmc
add
cmps
jmp
jnp
pop
add
sar
sbb
ins
jmp
mov
fwait
inc
mov
pop
bound
mov
add
jg
inc
add
mov
jo
(bad)
retf
call
fcomip
mov
jae
push
add
gs
fld
xchg
and
mov
adc
sub
stos
das
xchg
dec
jbe
jmp
fild
dec
movs
jbe
dec
es
(bad)
cmp
(bad)
pop
add
pop
ret
pop
xchg
repnz
or
in
sub
mov
out
clc
mov
push
mov
repz
aam
outs
clc
mov
cwde
into
add
mov
inc
mov
pavgw
inc
mov
pop
mov
push
mov
pushw
sahf
xor
pusha
push
jo
ins
ja
mov
push
ficomp
cmp
into
nop
xchg
xchg
adc
inc
or
inc
shl
stos
sbb
shr
popa
ficomp
(bad)
jne
jb
into
imul
lock
push
add
fdivr
xor
sub
pop
out
pop
call
ds
or
adc
inc
dec
pop
cs
add
dec
data16
sbb
xchg
inc
mov
jb
mov
inc
or
lds
ret
out
cld
and
jg
mov
mov
adc
repz
leave
das
clc
(bad)
fistp
sbb
inc
mov
adc
dec
mov
cld
div
pop
fisub
(bad)
adc
cmp
and
add
js
pop
push
mov
dec
sub
in
mov
or
inc
xchg
ja
idiv
ins
stc
outs
retf
loop
mov
pop
ret
dec
mov
lods
add
adc
lds
lods
scas
xchg
call
int3
and
leave
sahf
daa
push
bound
dec
(bad)
and
push
add
xor
fidivr
jmp
cs
das
jnp
ins
mov
push
call
ja
jg
lds
add
pop
cmp
fiadd
add
jg
scas
xor
jg
mov
data16
inc
clc
mov
in
xchg
xor
xor
jg
jnp
adc
push
loop
gs
cmp
shr
pop
fidiv
adc
bound
repnz
and
dec
adc
test
xchg
mov
cmp
mov
fimul
mov
sub
stc
pop
clc
xor
jb
jo
jbe
jb
rcl
mov
mov
mov
lea
jl
ret
push
in
daa
ret
cmp
dec
je
ins
inc
je
aas
mov
sar
ret
(bad)
(bad)
mov
into
or
les
sub
sub
dec
int3
sub
add
rol
xor
js
fistp
fwait
scas
mov
pop
retf
adc
dec
fnsave
inc
push
push
icebp
or
cmp
and
cmp
lds
stos
mov
jae
add
jmp
and
mov
pushf
mov
jp
xchg
pop
push
mov
inc
dec
inc
pop
imul
(bad)
rol
pop
or
add
pop
(bad)
mov
test
int3
addr16
mov
dec
mov
push
and
pop
jmp
scas
rol
sar
out
mov
inc
push
and
fnsave
icebp
adc
add
xchg
jo
adc
xchg
mov
lods
inc
cmp
push
int3
cmp
mov
pop
mov
sub
sub
dec
cli
aad
xor
out
or
push
ror
push
inc
int
and
or
push
into
ja
mov
inc
(bad)
mov
xor
adc
mov
retf
idiv
outs
in
adc
push
push
mov
mov
sbb
rcl
or
mov
add
xchg
mov
cli
div
and
mov
xor
call
mov
fst
adc
sbb
fdivr
adc
ret
jo
inc
lea
xor
(bad)
pop
sar
fadd
les
jg
jo
add
cmc
dec
jno
mov
mov
jbe
or
inc
and
or
inc
dec
iret
push
inc
ficomp
call
mov
sahf
pop
xchg
adc
xor
jg
loopne
mov
or
dec
int3
cmp
(bad)
(bad)
call
retf
cmp
add
pop
inc
xor
lds
adc
jl
call
(bad)
push
xor
(bad)
jecxz
lock
pop
or
adc
jmp
mov
lds
mov
rcl
push
mov
sbb
ret
clc
(bad)
push
xor
shl
fidiv
adc
fld
push
cmp
inc
xor
cmp
xchg
push
jmp
pop
push
inc
cmc
dec
enter
inc
sub
hlt
cmps
jo
or
(bad)
iret
test
mov
int3
and
fldcw
sub
jbe
into
outs
stos
es
and
push
loopne
pop
out
inc
pushf
push
inc
mov
jle
jg
fistp
into
add
lds
pop
retf
push
sub
movs
sahf
mov
outs
sub
mov
mov
cmps
int
dec
add
mov
cmp
push
mov
inc
(bad)
pop
push
ficom
add
dec
imul
in
jg
out
cmp
add
jbe
sub
pop
scas
mov
xchg
cli
dec
cmp
push
add
adc
inc
icebp
jp
xchg
adc
lods
add
xchg
push
cwde
push
adc
jg
xor
inc
lods
(bad)
sub
mov
inc
xchg
inc
xor
adc
mov
mov
dec
mov
jbe
mov
jne
(bad)
xor
xor
pop
ret
xor
inc
jns
sbb
int
pop
ret
ds
movs
xor
ss
push
jmp
cmps
test
icebp
mov
stos
pop
sar
call
or
sub
rol
iret
inc
jp
mov
cwde
scas
jl
enter
add
inc
lds
adc
jecxz
or
cmps
mov
inc
cmp
std
inc
ret
mov
inc
pop
pop
lea
outs
(bad)
mov
jbe
jle
and
or
sar
fild
adc
jp
add
adc
xor
stos
inc
fwait
test
mul
mov
lods
jo
icebp
mov
sbb
xchg
stos
mov
pusha
pop
add
lods
(bad)
add
cli
jg
sbb
inc
push
ja
xchg
leave
mov
ins
cmp
xchg
fild
out
(bad)
or
sahf
adc
push
jle
or
and
ss
jge
xchg
inc
pop
mov
inc
fist
or
mov
or
dec
outs
jp
xchg
mov
pop
jle
push
push
cld
aas
pusha
dec
sub
inc
and
inc
rol
ret
sub
aas
loop
inc
(bad)
push
scas
loop
sbb
and
or
gs
add
inc
inc
mov
(bad)
inc
xchg
push
xor
inc
repz
int3
es
mov
popa
and
add
xchg
iret
mov
pop
jle
add
mov
in
ins
pop
into
adc
adc
add
add
pop
push
icebp
dec
add
popa
dec
imul
mov
iret
nop
jmp
cmp
cmps
xor
add
mov
add
call
sub
inc
fadd
jno
mov
cdq
cdq
mov
jg
mov
mov
push
sub
push
mov
jo
push
and
jo
or
dec
dec
adc
push
daa
cli
aas
cmc
ss
mov
clc
cmps
mov
push
push
push
adc
inc
(bad)
aad
mov
test
fucomi
push
sub
xor
test
mov
je
mov
dec
mov
mov
test
mov
das
cs
add
imul
xchg
int3
pop
test
xlat
jl
push
test
sub
jle
mov
mov
int
add
or
sub
xor
jmp
mov
pop
mov
pop
mov
xor
cld
inc
cs
mov
pop
fist
add
sbb
add
mov
or
daa
cli
cli
outs
fimul
neg
(bad)
mov
enter
pop
test
or
nop
cmps
fidiv
jo
cmp
out
lock
into
jns
outs
(bad)
fld
das
loopne
sahf
sub
imul
sbb
or
ss
outs
xchg
call
xchg
mov
sbb
fldcw
mov
sbb
add
clc
fistp
dec
mov
adc
dec
pop
lock
adc
mov
push
xor
inc
mov
js
inc
xchg
mov
retf
sbb
dec
or
add
inc
jl
and
test
mov
pop
adc
cmp
xor
fsub
or
pusha
dec
pushf
ret
cmps
or
cmc
adc
jno
pop
lock
fwait
adc
mov
inc
sbb
cmps
call
pop
test
mov
inc
add
cmp
movs
xchg
xor
pop
add
and
push
getsec
sbb
loop
mov
cmp
jg
test
cmp
inc
pusha
fistp
sti
dec
sbb
aas
lahf
pop
inc
and
push
test
clc
xchg
push
(bad)
sub
fiadd
cmp
icebp
inc
fimul
rcr
jae
popa
sub
fidivr
fidiv
(bad)
mov
ja
stos
dec
test
mov
out
xor
or
pop
inc
push
ret
sub
pop
das
mov
inc
ret
loopne
faddp
icebp
and
or
add
adc
fldenv
dec
loop
mov
add
jbe
inc
inc
push
or
sti
loop
pop
mov
or
loope
xchg
pop
pop
into
rcpps
or
inc
lds
xor
stos
cld
dec
push
into
pop
pop
mov
cmp
mov
inc
ficom
or
xchg
pop
and
jb
mov
arpl
add
push
stos
hlt
add
out
add
or
mov
add
icebp
xchg
js
call
ret
xchg
inc
fs
inc
inc
jmp
fisubr
sbb
push
movs
add
aas
or
(bad)
cs
add
push
inc
retf
test
aas
jg
mov
and
daa
addr16
sbb
cmp
xor
pushf
(bad)
push
or
ja
daa
pop
(bad)
(bad)
(bad)
call
adc
lea
inc
fldcw
jg
mov
xor
int3
ja
add
mov
pop
jmp
xlat
jle
pop
inc
data16
lock
cs
ficom
mov
retf
fadd
pop
lds
mov
xor
dec
(bad)
dec
es
add
add
out
ins
cmps
xlat
jmp
xchg
xchg
(bad)
pop
movs
mov
sbb
push
jmp
imul
out
cwde
cmp
shrd
mov
sub
sub
ss
mov
(bad)
imul
mov
pop
enter
xchg
out
cmp
dec
(bad)
and
les
adc
mov
adc
mov
call
add
lock
push
mov
mov
jnp
data16
add
mov
outs
add
enter
mov
jns
sbb
mov
out
dec
sub
sbb
lods
movs
push
add
ror
scas
xor
sub
hlt
or
inc
fmul
adc
pop
pop
inc
mov
enter
mov
push
fld
ret
adc
call
adc
stc
lock
das
push
inc
push
imul
ret
xlat
mov
cmp
jmp
lahf
xchg
pusha
faddp
stos
jg
fld
shl
retf
fwait
bound
xor
jb
enter
addr16
dec
ret
mov
dec
jl
push
lahf
popa
jne
push
jecxz
sub
push
xchg
ror
pop
sub
jge
fld
cli
cs
cld
add
ss
jo
dec
in
or
stc
iret
dec
ss
jmp
div
add
imul
fwait
or
xchg
pop
(bad)
clc
out
mov
inc
adc
adc
sbb
xchg
adc
out
mov
clc
das
cli
mov
inc
xchg
pop
inc
popa
pop
adc
ss
mov
jmp
pop
adc
(bad)
out
push
push
jecxz
xchg
daa
fs
sub
jecxz
(bad)
das
pop
out
or
and
gs
sbb
pop
aam
sar
cdq
jmp
xchg
xor
add
sub
cdq
scas
loopne
scas
xchg
dec
shl
sub
dec
aaa
mov
mov
xor
add
pop
mov
rol
or
mov
xor
pop
or
(bad)
sbb
repz
mov
mov
fst
sahf
mov
push
dec
(bad)
test
adc
outs
or
sub
inc
out
mov
mov
rcr
jge
cmp
mov
retf
sbb
xor
xor
(bad)
or
sbb
push
xchg
lahf
mov
mov
pop
mov
mov
push
stos
ror
clc
mov
adc
scas
ins
movs
mov
push
gs
(bad)
cmp
cmp
push
add
dec
into
xchg
int3
js
cmp
repnz
fmul
in
jo
jg
pop
into
inc
outs
lahf
inc
or
movs
pusha
jbe
xor
fbld
cs
pop
ja
cmp
add
xchg
and
push
jecxz
enter
push
sub
jle
lods
push
jl
fild
pop
mov
xchg
imul
adc
xor
cmp
adc
popa
das
xor
push
pusha
sbb
sbb
push
mov
xchg
fst
or
inc
(bad)
mov
arpl
pop
lahf
push
xchg
call
movs
jg
jecxz
mov
loope
jb
or
xor
mov
shl
int
test
mov
pop
mov
test
fs
fdivr
int
bound
add
mov
mov
sub
sub
test
push
call
pop
mov
add
popf
adc
xchg
push
sub
cmp
push
mov
test
fstp
(bad)
mov
icebp
mov
clc
jmp
fbstp
lds
int3
and
sbb
push
daa
(bad)
adc
sbb
mov
push
dec
adc
clc
stos
enter
add
jle
mov
cmps
enter
popa
adc
inc
(bad)
(bad)
adc
xor
dec
xor
fld
xor
pop
out
(bad)
clc
ret
clc
addr16
inc
and
sbb
enter
into
out
daa
adc
js
add
outs
adc
fmul
dec
dec
repnz
push
jle
pop
sahf
lods
add
xor
mov
pop
das
repnz
mov
out
jle
dec
enter
sub
std
mov
inc
scas
stc
add
iret
test
bound
inc
and
dec
push
mov
jg
add
cmps
adc
mov
push
clc
pop
push
iret
pop
test
into
jl
dec
mov
ficomp
lods
loope
xor
mov
lods
sub
cmp
(bad)
or
cmp
xor
push
push
cmps
xchg
cmp
push
add
pop
and
les
rcl
lock
add
out
xchg
icebp
dec
mov
shl
xchg
js
pop
mov
xor
mov
inc
push
(bad)
cli
in
adc
retf
cmp
or
in
xor
jg
ret
arpl
jmp
test
call
cmp
or
sbb
(bad)
into
mov
or
jb
adc
dec
cmp
inc
js
sar
stos
(bad)
movq
(bad)
call
jmp
je
xor
push
cld
out
mov
jb
add
push
xchg
(bad)
test
std
mov
bound
jbe
adc
dec
adc
mov
pop
inc
sbb
inc
pop
adc
mov
push
or
stos
shl
pusha
into
clc
fisttp
fwait
mov
mov
bound
cmps
lea
push
push
or
pop
retf
mov
mov
xchg
sti
inc
pop
sub
mov
pop
mov
retf
sub
sar
jo
cmp
jmp
sub
pop
sti
mov
sbb
cmp
out
sbb
jne
push
xchg
push
call
pop
cmp
cmps
js
retf
mov
mov
sbb
iret
and
js
push
(bad)
lods
nop
loopne
adc
mov
sbb
xor
cmps
sahf
enter
and
mov
inc
mov
mov
add
sbb
ins
aaa
xchg
cmp
pusha
cmp
(bad)
lods
stos
push
cmp
cli
pop
jns
push
rcr
rcr
push
cmc
mov
inc
das
bound
adc
popa
dec
mov
out
mov
pop
xchg
push
mov
mov
cmp
jb
xchg
fcmovu
aas
or
es
je
add
loop
mov
jne
xchg
jmp
call
and
movs
data16
xor
inc
daa
icebp
cmp
je
dec
ss
xchg
mov
push
xor
cmc
test
jecxz
loop
fstp
ret
jp
pop
push
push
inc
dec
mov
or
adc
push
mov
mov
adc
xor
push
das
fisttp
fsub
xchg
nop
push
loop
test
push
jle
or
das
push
pop
outs
rcr
(bad)
repnz
out
push
sbb
pop
lock
adc
pop
lds
jle
dec
mov
add
int3
loope
repnz
xor
and
movs
push
test
add
daa
(bad)
mov
cmp
fld
and
sub
mov
jp
dec
gs
repnz
add
int3
push
inc
int3
test
cmp
fld
mov
mov
sub
into
ror
mov
aaa
cld
jg
rcr
cmp
and
add
movs
dec
cwde
sub
push
rsqrtps
sbb
push
loope
pop
dec
cmp
mov
xor
stos
mov
mov
mov
mov
pushf
test
loope
xor
push
scas
(bad)
fmul
cmp
loop
lea
xor
into
mov
movs
xchg
ds
pop
jne
ins
inc
mov
and
cmp
add
push
ja
movs
rol
cld
sbb
fidiv
fnstsw
dec
(bad)
xchg
sbb
and
pop
popw
jnp
jmp
rcr
sub
out
adc
int
adc
or
sbb
nop
lahf
(bad)
cmp
and
addr16
jbe
mov
mov
lods
jbe
aas
iret
test
bound
or
dec
adc
inc
bound
jmp
sahf
imul
imul
pop
js
mov
(bad)
fld
(bad)
inc
mov
xor
(bad)
add
retf
fsubr
aad
xor
cmp
pop
or
dec
mov
jbe
xchg
mov
push
pop
inc
(bad)
dec
jg
rcr
add
xchg
dec
dec
or
shl
cmp
into
retf
jl
pop
js
inc
push
icebp
mov
jnp
adc
xchg
jae
(bad)
mov
scas
adc
dec
int3
das
(bad)
mov
mov
adc
adc
aaa
sbb
push
rcl
fistp
sub
nop
mov
mov
hlt
retf
(bad)
jg
ja
and
sbb
push
je
or
mov
sub
add
(bad)
push
dec
arpl
xor
fiadd
and
in
push
push
ins
idiv
sbb
jle
cmp
push
scas
inc
push
popaw
xor
jg
add
xor
sub
lods
ss
xor
aaa
lock
outs
xchg
sbb
adc
stos
into
stos
sbb
(bad)
and
int3
pop
dec
mov
cli
push
mov
and
add
js
sahf
fcom
mov
push
scas
sbb
dec
push
mov
pop
sbb
adc
adc
inc
outs
out
add
cmp
push
xor
mov
cli
es
(bad)
out
sti
in
cmp
add
adc
adc
cs
outs
fisubr
pop
mov
push
mov
sbb
cmp
jae
mov
loop
pop
push
(bad)
pop
les
bound
(bad)
jle
inc
sar
ja
mov
mov
or
test
popf
outs
cmp
(bad)
mov
push
cmp
cli
mov
(bad)
jmp
or
test
in
js
xor
mov
add
jbe
das
outs
mov
shr
and
mov
mov
push
retf
sub
cmps
mov
jmp
dec
push
cmp
mov
out
push
fisttp
loopne
dec
mov
cmp
adc
ror
and
je
or
cmp
(bad)
(bad)
cs
push
xchg
push
scas
rol
jne
(bad)
int
push
inc
xchg
ret
aaa
icebp
sbb
mov
pop
scas
lea
or
ret
xor
or
jbe
out
lds
outs
nop
and
cmp
into
cmp
fist
hlt
lea
push
pusha
sbb
push
mov
sar
mov
rcr
fimul
mov
addr16
pop
cmp
pop
mov
loop
daa
jg
vxorps
mov
push
mov
or
pop
jo
mov
movs
lods
or
push
push
sbb
adc
jle
mov
or
xor
xchg
cmps
pop
lea
scas
jp
mov
pop
inc
outs
push
add
xchg
xchg
cli
mov
scas
lods
push
xchg
stos
loope
inc
push
das
add
mov
adc
les
mov
xchg
clc
scas
adc
stos
mov
cmp
(bad)
mov
adc
call
or
das
mov
scas
outs
aam
add
imul
cmps
jbe
dec
mov
cmp
pop
lds
popf
xchg
bound
fbstp
add
cmc
add
movs
dec
push
inc
cmp
jle
scas
std
retf
aaa
jnp
push
pusha
(bad)
mov
jae
inc
stos
jmp
jae
jo
int3
jnp
mov
cmp
jg
sub
push
or
loope
xchg
push
add
jne
(bad)
add
xor
push
adc
sub
scas
fistp
sub
(bad)
mov
cmp
out
(bad)
(bad)
dec
mov
jl
fld
bound
call
mov
(bad)
jo
punpckhwd
rcl
jecxz
ret
pop
inc
sub
add
jl
lds
mov
mov
test
push
ins
cmps
sbb
mov
inc
das
cmps
cmps
ficomp
mov
inc
outs
(bad)
into
inc
ficomp
repz
dec
sbb
xchg
mov
inc
sti
pop
dec
mov
xor
sahf
int
mov
out
movs
dec
xor
adc
lds
mov
jmp
adc
movs
movs
test
js
cmp
add
pop
pop
adc
or
arpl
dec
inc
loope
(bad)
sub
jg
push
push
fs
mov
xor
fnstenv
add
sub
ja
das
cmps
inc
call
xchg
gs
pushaw
shr
fmulp
xchg
jmp
pop
mov
repnz
test
or
sub
add
sub
test
jle
jl
int3
cmps
pop
inc
sbb
nop
or
test
leave
cli
sub
xchg
dec
rcl
out
sub
sub
push
inc
or
cmp
je
icebp
jl
fwait
push
dec
fdiv
add
sub
pop
cli
inc
sbb
mov
movs
sahf
test
cli
jmp
and
adc
rcr
inc
dec
push
into
sbb
and
das
mov
sbb
(bad)
sub
pop
mov
arpl
push
fdivr
ror
scas
add
and
mov
sub
call
test
mov
push
into
dec
push
movs
scas
rcr
jg
fcom
ds
and
std
fistp
jnp
int3
pop
adc
sub
inc
fcmovb
xchg
retf
inc
lea
jle
or
dec
fiadd
sub
cmps
icebp
sub
out
repz
leave
adc
pop
sbb
push
lock
add
adc
adc
inc
icebp
cmps
dec
fdivr
adc
add
rcr
xor
dec
lods
and
nop
dec
ucomiss
arpl
push
repnz
xchg
push
or
mov
jno
mov
pop
test
ja
mov
mov
jnp
jmp
adc
xlat
pusha
mov
push
push
es
int
adc
mov
repz
ss
mov
nop
xor
test
mov
mov
(bad)
push
mov
or
mov
xor
in
shl
popa
jmp
dec
cld
dec
into
lahf
mov
les
mov
je
(bad)
dec
test
mov
or
outs
mov
xchg
mov
xchg
or
mov
repz
ja
jne
inc
pop
xor
ret
and
repz
cmp
inc
xor
xchg
imul
lods
inc
add
mov
add
outs
ret
shr
mov
jmp
push
jecxz
jle
retf
into
in
js
or
aas
inc
not
mov
or
sbb
mov
cmp
jne
sbb
and
cmps
ret
lods
adc
pop
pop
scas
mov
cmps
shl
adc
inc
scas
jo
or
cmps
adc
mov
mov
pop
xchg
adc
mov
and
sahf
and
mov
cmp
adc
push
mov
(bad)
mov
push
xchg
call
fcomp
sbb
jl
pop
mov
cmp
adc
add
pop
inc
ror
dec
and
sbb
rol
out
(bad)
jmp
outs
sbb
ds
jp
pop
push
push
fisub
mov
inc
jns
or
or
pop
inc
xor
push
lea
cmps
inc
fiadd
loope
pop
push
(bad)
jbe
out
hlt
(bad)
mov
dec
test
sbb
es
cmp
outs
leave
push
dec
sbb
ficom
and
ss
mov
sub
mov
inc
or
fld
outs
jmp
xor
mov
arpl
lods
(bad)
outs
mov
xchg
pop
add
add
(bad)
fisttp
in
or
fisttp
push
dec
repz
scas
mov
dec
or
cmp
adc
stos
dec
or
add
mov
mov
xchg
scas
mov
outs
xchg
pop
mov
arpl
jmp
mov
fdiv
pop
(bad)
inc
or
inc
push
dec
jbe
adc
pop
cmp
inc
jo
cmp
mov
fiadd
nop
xor
inc
fld
adc
in
pop
std
comiss
sbb
inc
cmps
inc
inc
or
or
icebp
add
mov
cmc
out
mov
mov
adc
lahf
or
jle
mov
add
leavew
jae
pop
enter
mov
shr
mov
mov
mov
cmp
jl
fidivr
std
mov
sub
js
ss
push
dec
psrlq
add
adc
mov
dec
and
fiadd
pop
fs
cmp
dec
cmps
retf
mov
pusha
shl
sbb
in
popa
adc
xchg
cmp
into
add
cmovb
(bad)
int3
fs
mov
and
das
ret
inc
lds
inc
adc
sbb
stos
and
jge
dec
pusha
xchg
scas
push
shl
in
ret
sub
pushf
ret
xchg
movs
cwde
jmp
lds
pop
mov
ja
cmps
int
adc
inc
lds
push
into
adc
xchg
(bad)
cli
jmp
(bad)
mov
sahf
push
fldenv
mov
shl
out
xor
aaa
dec
sub
dec
pop
les
bound
jo
and
add
push
fild
xor
dec
mov
jns
dec
unpcklps
pop
stos
add
clc
push
jmp
pop
mov
fwait
push
mov
iret
cmp
pop
or
pop
fimul
add
ja
cmp
cmc
fbld
movs
jae
test
add
mov
xchg
sub
cli
pop
inc
pop
push
push
jmp
call
fadd
push
nop
stc
adc
daa
stos
inc
xchg
adc
add
sar
sbb
sub
mov
mov
add
imul
jne
xor
pop
mov
jg
xchg
and
add
jae
adc
sub
aas
mov
or
sub
or
movs
or
xchg
push
adc
daa
not
addr16
mov
shl
dec
ins
push
mov
fwait
test
into
sub
shl
loope
jne
dec
xchg
aaa
out
ja
adc
nop
xchg
loopne
je
jbe
dec
jb
jmp
xor
dec
push
xchg
sbb
(bad)
lds
hlt
adc
inc
ss
shl
imul
(bad)
ds
scas
adc
(bad)
rol
xchg
push
data16
xchg
xchg
push
ds
pop
(bad)
add
outs
js
and
or
hlt
sbb
std
or
add
icebp
add
or
scas
inc
xor
or
jo
ficom
adc
jg
mov
loope
ja
test
sbb
aas
add
push
cmps
lds
loop
and
add
adc
(bad)
retf
fcomi
inc
movs
icebp
stos
jg
inc
push
pusha
retf
adc
cmp
mov
sti
ja
loop
adc
push
adc
and
xor
fidivr
push
pusha
scas
retf
push
cmp
or
(bad)
fisub
sahf
dec
clc
inc
inc
mov
and
and
aas
inc
inc
mov
cmp
xchg
push
das
fdivr
icebp
xor
sub
mov
cmp
loope
mov
xchg
retw
mov
shr
retf
pop
pop
fiadd
jmp
cmp
sbb
lds
scas
pop
mov
cmps
aas
sbb
dec
sub
inc
xchg
xor
mov
ins
ret
fucomip
cmp
iret
sub
jmp
mov
stos
inc
inc
cmps
pop
and
mov
mov
xchg
dec
inc
xor
data16
xchg
mov
js
push
mov
movs
lock
dec
sbb
inc
adc
adc
retf
push
or
pop
in
(bad)
inc
adc
pop
mov
jae
enter
adc
(bad)
mov
pop
pop
ja
and
or
dec
pop
ret
das
rcr
out
in
int3
jge
adc
repz
or
mov
outs
push
ficom
mov
sbb
(bad)
mov
jae
lods
add
push
repnz
sbb
nop
mov
clc
inc
add
aaa
jmp
push
mov
stos
mov
mov
mov
push
push
jns
(bad)
scas
data16
inc
jl
jg
ins
mov
inc
sbb
jnp
scas
cmp
inc
cmps
imul
ins
or
xchg
sbb
inc
aad
jmp
cmp
mov
push
ds
call
je
rol
pop
adc
or
out
mov
adc
cmp
int3
enter
mov
hlt
test
xlat
jmp
inc
inc
imul
push
lods
sub
ret
iret
push
mov
pop
xchg
mov
test
dec
inc
or
fs
fwait
aam
ins
inc
push
xchg
push
mov
push
push
retf
jo
cmp
mov
bound
daa
sbb
mov
dec
cld
mov
pop
cmp
push
data16
add
sbb
repz
xor
mov
pop
cmp
nop
mov
ret
hlt
mov
mov
mov
add
repnz
inc
sbb
mov
sub
jno
(bad)
ds
xor
outs
aam
xor
cmp
test
fwait
dec
xchg
aaa
jmp
mov
push
push
sbb
int
inc
adc
cwde
cmp
mov
cmp
add
fld
(bad)
inc
mov
in
xor
fiadd
scas
push
mov
hlt
adc
or
mov
mov
fwait
sbb
adc
pop
adc
cdq
xor
ja
add
je
push
sub
mov
xor
mov
ror
loope
sbb
(bad)
ins
push
jmp
jmp
jne
push
xor
adc
push
jno
pusha
std
lods
push
das
cmps
in
cwde
rcl
mov
add
mov
push
mov
movs
pop
xchg
fldcw
dec
retf
add
xchg
jae
mov
push
ins
into
test
ins
xchg
pop
jp
push
adc
push
sub
add
and
ja
push
or
sub
jbe
mov
ds
xchg
jmp
pop
call
cmps
xchg
push
gs
xor
push
sbb
(bad)
mov
data16
push
push
out
adc
popa
bound
clc
stos
sub
and
sbb
sahf
dec
mov
jbe
addr16
mov
jne
clc
or
xchg
push
mov
js
jmp
mov
pop
add
push
and
dec
inc
rcl
dec
jle
loop
jne
or
hlt
dec
xor
or
cmp
aad
js
add
clc
sub
or
or
add
jg
ss
cli
xchg
lods
mov
lds
call
lds
popf
(bad)
cmp
mov
mov
call
(bad)
and
or
jbe
mov
call
sbb
dec
mov
mov
idiv
movs
clc
mov
mov
mov
xchg
jmp
inc
mov
sti
mov
icebp
push
cwde
push
ja
mov
xchg
mov
(bad)
and
cli
out
jg
dec
sbb
cmps
cwde
sar
es
fsub
in
dec
and
jbe
dec
push
or
(bad)
movs
enter
test
popaw
mov
or
inc
mov
dec
adc
or
mov
inc
pop
dec
ja
retf
dec
cmp
add
jmp
add
sbb
(bad)
test
inc
xor
(bad)
mov
(bad)
popa
or
push
xor
lds
movs
int3
jg
sub
pop
cmc
jnp
jg
lahf
mov
inc
popa
outs
shl
mov
push
mov
loop
sub
(bad)
call
xor
xchg
xchg
cmp
fcom
xor
ret
out
cmp
dec
dec
scas
mov
pop
cmp
sbb
(bad)
enter
push
dec
mov
pushf
icebp
lahf
div
or
jmp
call
mov
ja
mov
retf
sub
dec
call
xor
aas
mov
xchg
pop
jne
mov
add
mov
xor
mov
call
push
stc
sub
push
adc
mov
sub
out
jne
das
bound
cwde
call
push
xchg
or
scas
sub
dec
cmp
arpl
cmp
dec
push
(bad)
fbld
(bad)
jl
cwde
test
push
mov
pop
imul
xor
adc
test
xor
xchg
scas
jnp
mov
dec
mov
mov
neg
mov
add
popa
inc
push
sbb
xor
xchg
mov
or
sub
or
ins
pop
sbb
(bad)
aas
or
pop
mov
fnstcw
jmp
or
add
pop
dec
pop
(bad)
mov
bound
or
jnp
stos
mov
lods
cs
loop
adc
outs
or
ret
retf
inc
sbb
xchg
aaa
mov
mov
div
ret
add
nop
adc
add
popa
pop
inc
jmp
add
xchg
dec
inc
mov
dec
pop
or
adc
or
aad
dec
jle
xrelease
cmp
jmp
mov
pop
or
or
mov
daa
dec
mov
mov
sbb
cmps
(bad)
fwait
outs
sub
into
lahf
outs
mov
cmps
or
add
xchg
lock
in
dec
jp
push
inc
mov
aam
adc
pop
sub
mov
xchg
cmpxchg
test
pop
lods
in
pop
cdq
loop
fnstenv
pop
xchg
push
repnz
xchg
cmp
ds
push
inc
add
xor
fldenv
mov
push
int3
aas
mov
push
pusha
push
mov
test
(bad)
popa
pop
and
jge
lds
mov
adc
dec
int
pop
movs
inc
mov
ficom
in
cli
aam
or
jle
(bad)
aas
jbe
xchg
in
xchg
push
xchg
adc
stos
adc
sti
(bad)
jp
cmp
(bad)
mov
adc
iret
fs
xor
adc
cmp
test
pop
(bad)
jle
jne
mov
aas
cs
mov
xlat
leave
idiv
pop
clc
jl
fucomi
mov
add
mov
test
mov
(bad)
or
sub
mov
dec
add
ins
adc
clc
popa
fldlg2
xchg
jo
push
push
pusha
stc
dec
jmp
cmp
inc
repz
push
repnz
push
pusha
and
mov
mov
dec
mov
inc
hlt
dec
sub
mov
mov
cli
mov
adc
mov
outs
test
outs
jbe
jl
ret
jne
into
jmp
fsub
dec
gs
or
js
cwde
xor
aaa
dec
or
dec
cmp
adc
sub
or
jmp
cli
out
pop
fist
adc
xor
mov
dec
sti
aaa
daa
jne
mov
(bad)
dec
mov
ja
xchg
jbe
test
scas
add
mov
repnz
cli
mov
mov
cmp
sub
push
outs
mov
inc
dec
mov
adc
mov
cmps
addr16
inc
(bad)
cmp
jo
inc
xor
fild
fcomi
add
add
int
dec
(bad)
fst
sub
add
sahf
lea
xchg
mov
loop
fwait
(bad)
popf
outs
pop
add
cmp
mov
adc
jl
xor
adc
lods
idiv
dec
sbb
pushf
lods
mov
lods
or
sbb
push
adc
push
fcmovbe
mov
addr16
inc
dec
pop
dec
pop
add
(bad)
fwait
inc
inc
ss
xor
sbb
jle
ja
das
dec
or
lds
out
fdiv
add
sbb
cdq
mov
aaa
aad
je
mov
cmp
xor
(bad)
ret
pop
or
imul
cmp
jne
cmp
push
dec
sbb
add
pushf
lds
stos
mov
ins
push
pop
out
popa
mov
sub
jg
jg
or
mov
jno
mul
sbb
ret
push
xor
pop
mov
xchg
adc
in
or
push
test
xor
ins
inc
inc
ret
add
inc
cs
mov
mov
inc
pop
mov
xchg
inc
popf
mov
scas
mov
into
adc
xor
xlat
leave
mov
mov
das
adc
fisub
lea
lods
les
xchg
mov
lea
sbb
sbb
rol
mov
dec
ja
sar
out
repz
add
add
inc
cmps
aad
xchg
lock
push
cli
inc
jp
into
cs
pop
test
adc
push
(bad)
pop
push
ins
jle
(bad)
fmul
mov
fld
repz
cli
call
add
pop
outs
nop
sub
mov
xchg
jl
jmp
dec
inc
jp
xchg
and
mov
inc
mov
inc
xchg
push
nop
jg
inc
add
jg
sti
jg
out
and
pop
xchg
sbb
sub
or
dec
es
fidiv
jg
adc
inc
jmp
add
inc
mov
lahf
pop
(bad)
xlat
js
ficomp
scas
ds
xor
(bad)
fist
jbe
push
push
mov
int3
inc
sub
xchg
xor
je
jmp
out
sbb
xchg
mov
imul
sti
rcr
outs
pop
inc
retf
mov
aam
nop
xor
addr16
xchg
mov
mov
shl
out
sub
inc
adc
cmc
or
aaa
xor
pop
iret
data16
xchg
imul
cli
adc
out
iret
scas
enter
mov
xor
push
ret
add
sahf
mov
cld
scas
into
xor
(bad)
mov
or
push
push
mov
cld
xchg
cmp
fbld
pop
mov
inc
mov
arpl
das
inc
mov
imul
mov
leave
push
cmp
push
aad
xor
mov
mov
push
(bad)
outs
mov
retf
sbb
dec
cmp
cs
mov
push
sub
sub
sbb
es
es
jle
jg
xor
and
mov
ret
aaa
fcomip
add
sub
fimul
mov
and
shl
push
pop
and
lods
lods
loop
(bad)
out
push
pop
shr
cli
outs
outs
mov
cmp
cld
sbb
adc
enter
jecxz
xchg
inc
lock
xor
xor
out
mov
add
xchg
mov
test
std
scas
push
inc
jmp
fldcw
das
push
adc
mov
test
pop
xor
aas
mov
(bad)
pop
or
pop
sbb
xchg
pop
xor
in
je
test
shl
mov
test
fld
and
xchg
movs
inc
pushf
dec
hlt
daa
test
je
push
xchg
and
outs
clc
imul
test
dec
dec
pop
ret
adc
dec
sbb
or
sahf
lods
sbb
xchg
jmp
mov
add
int3
push
inc
test
(bad)
dec
and
sti
xor
dec
cmp
idiv
shl
call
jb
cmps
iret
cmps
lock
add
nop
xor
cli
and
pop
inc
cmp
mov
push
je
clc
es
pop
ficomp
movs
scas
test
push
das
cmps
sub
xchg
jmp
push
ret
jle
outs
mov
push
mov
xchg
jle
sub
dec
xchg
mov
stc
jg
push
xchg
add
ror
sbb
pusha
scas
xlat
div
or
push
mov
pop
jge
dec
div
or
addr16
jp
add
inc
in
shl
xor
xchg
add
icebp
aaa
or
sbb
pusha
mov
das
jmp
movs
sbb
pusha
dec
test
aad
mov
jmp
fwait
stos
ins
inc
sub
push
mov
jmp
pop
lods
push
(bad)
stos
push
sub
neg
out
sub
retf
jmp
xor
les
cmps
or
js
pop
fdivr
retf
sub
xor
or
jmp
inc
jmp
lock
mov
test
outs
jecxz
gs
jns
test
(bad)
pop
jmp
test
icebp
mov
xor
jmp
push
std
add
(bad)
dec
push
push
adc
add
movs
xor
inc
push
test
add
inc
out
outs
jmp
mov
into
push
fild
lds
mov
outs
shl
and
cs
iret
add
push
dec
mov
fwait
retf
xchg
loopne
mov
dec
ror
inc
enter
xlat
sub
fsubr
lods
cmp
mov
add
cmp
lock
adc
call
xchg
dec
fcomip
and
loop
cmc
push
jle
inc
mov
ror
mov
(bad)
repnz
mov
add
frstorw
out
fidivr
push
pop
outs
or
dec
jmp
pop
ret
jbe
into
mov
or
push
mov
mov
inc
mov
cmps
xchg
test
fild
es
mov
jg
dec
pop
and
sbb
je
adc
jg
push
inc
les
repz
iret
stos
dec
adc
imul
into
and
cmp
cld
jg
push
addr16
iret
out
std
fmulp
add
xchg
sar
mov
cs
fist
mov
jbe
retf
stos
cmp
inc
mov
mov
dec
sbb
aam
aaa
dec
(bad)
dec
dec
xchg
pop
ins
je
jmp
pop
or
or
sar
cs
pop
sbb
xchg
push
mov
add
dec
cmp
cld
xor
inc
add
pop
rol
repnz
push
dec
push
int
aas
mov
push
jb
scas
je
int3
add
push
jle
imul
xlat
into
out
aas
movs
xor
push
mov
and
mov
js
lock
add
cld
nop
addr16
out
pushf
je
cmps
fnstenv
sbb
push
mov
push
cld
jbe
scas
int
jbe
jg
mov
sbb
loope
rol
add
mov
sti
push
add
(bad)
mov
mov
aas
inc
bound
jmp
out
and
mov
mov
mov
add
sub
mov
sub
out
sub
pop
xchg
sbb
fistp
xchg
pusha
xchg
xchg
daa
sub
xor
xor
inc
xchg
jb
(bad)
sub
add
mov
cmpps
cmp
mov
lock
dec
lock
pusha
xor
int3
ja
jle
mov
pop
mov
sahf
fnstenv
into
cld
(bad)
jg
mul
sahf
dec
int3
je
add
scas
pop
xor
pop
inc
push
in
xor
cmp
iret
cmp
push
push
(bad)
and
stos
popa
push
lds
ins
xchg
inc
mov
dec
jbe
add
aas
test
sar
jmp
sbb
fnstsw
sub
cmp
inc
pop
(bad)
push
or
ficom
inc
(bad)
mov
push
pop
fmul
add
xchg
call
dec
ss
add
pop
inc
leave
sub
inc
fdivr
pop
sub
fs
or
aas
inc
jns
push
(bad)
es
ret
mov
gs
xchg
scas
mov
rcl
mov
jecxz
cld
jmp
push
shr
lds
inc
xchg
pop
fldenv
cld
xchg
push
scas
push
inc
push
mov
sbb
mov
inc
into
dec
mov
add
loop
mov
rcl
mov
shl
call
push
mov
jle
mov
stos
fmul
stc
mov
dec
push
ja
add
inc
xchg
add
ins
ins
cmp
sbb
adc
mov
nop
jl
call
mov
out
sbb
lea
dec
fisubr
(bad)
std
mov
outs
and
push
jp
dec
inc
xor
aas
or
dec
mov
mov
xchg
push
clc
add
inc
xlat
sbb
add
loopne
mov
lods
mov
outs
or
sbb
(bad)
js
shl
mov
scas
adc
scas
and
mov
jle
loope
call
es
push
scas
sub
ror
mov
adc
sbb
dec
(bad)
fisubr
push
mov
jo
jno
push
cmps
ficomp
mov
js
std
sub
out
inc
mov
das
fimul
push
pop
push
push
das
(bad)
jo
pop
or
inc
cmp
stos
dec
scas
int3
push
jb
popf
mov
xor
cmp
lea
cmp
and
into
dec
inc
fwait
dec
push
add
lahf
ja
dec
sub
mov
dec
fwait
mov
outs
add
cmc
mov
push
jbe
add
inc
pop
sbb
push
inc
jl
call
fiadd
and
pop
xchg
push
test
arpl
hlt
mov
mov
repnz
and
cld
dec
bound
or
movs
iret
or
mov
cmps
jl
mov
inc
mov
adc
aas
std
and
mov
mov
out
mov
stos
adc
cmp
jmp
hlt
xor
lods
in
mov
aas
ja
imul
jbe
xchg
ror
(bad)
stos
enter
ror
mov
call
push
add
cmp
out
inc
pusha
movs
repnz
mov
adc
dec
xor
out
setb
(bad)
int3
jle
daa
dec
add
mov
jns
call
pop
xchg
or
fistp
stos
mov
(bad)
inc
push
xor
scas
(bad)
fidiv
mov
mov
jbe
xor
mov
test
sbb
jp
jbe
or
lock
outs
es
cmp
fdiv
stos
pop
(bad)
ds
mov
adc
mov
es
xor
adc
mov
test
push
ret
dec
fs
mov
dec
mov
in
cld
adc
ja
and
stos
imul
loop
push
(bad)
jbe
scas
idiv
call
bnd
inc
test
and
fldenv
jp
mov
dec
(bad)
mov
ror
(bad)
sbb
into
or
xchg
cmps
mov
std
ja
mov
push
jp
dec
je
or
cwde
dec
mov
and
and
pop
cld
pop
cmps
sbb
fld
and
fild
test
mov
sub
rol
or
rcr
push
pop
stos
and
add
inc
cwde
movs
xor
mov
shl
popa
cmps
mov
test
jl
and
adc
push
inc
jbe
push
cld
cmps
into
pop
pop
gs
adc
jnp
jne
ret
jmp
or
push
xchg
inc
shr
sbb
test
fs
push
push
loopne
mov
jmp
fbstp
inc
dec
mov
lods
mov
(bad)
cmp
jmp
inc
inc
mov
adc
or
push
cwde
das
xchg
movs
mov
(bad)
or
fincstp
or
xchg
das
inc
sbb
xchg
daa
push
inc
ds
cmp
inc
(bad)
push
dec
mov
add
or
add
ss
es
add
mov
mov
aaa
inc
push
mov
lods
add
push
pop
add
inc
push
arpl
jg
mov
cmps
mov
jbe
mov
mov
push
adc
and
stos
jo
mov
and
or
mov
push
pop
sbb
sahf
stc
push
inc
das
push
ficomp
sub
(bad)
jg
jg
xchg
add
push
cmp
addr16
fisubr
cmp
sub
cmp
mov
xor
mov
out
loope
xor
addr16
popa
jp
shr
mov
and
retf
sti
jbe
inc
sar
sub
stos
jmp
nop
bound
mov
cmp
push
or
shl
push
loop
das
inc
clc
movs
enter
pusha
mov
outs
loop
fwait
jle
lods
jbe
adc
push
lahf
dec
loop
and
jle
mov
mov
(bad)
(bad)
mov
ret
adc
mov
push
stos
je
(bad)
lods
xchg
(bad)
dec
add
scas
add
fistp
retf
dec
jl
fwait
ds
out
(bad)
pusha
test
sub
adc
push
dec
or
mov
add
add
adc
jp
stos
js
pop
repnz
add
mov
cld
(bad)
repz
mov
scas
inc
test
sbb
call
cdq
shl
call
add
mov
and
sbb
arpl
push
sbb
loope
push
push
mov
sbb
mov
mov
fwait
clc
or
push
add
add
add
pop
(bad)
jo
inc
or
out
ja
or
repnz
iret
hlt
push
jbe
ds
push
rcl
pop
and
jp
jle
test
stos
jmp
stos
pop
add
in
xchg
mov
sbb
add
push
lock
inc
push
adc
or
and
inc
test
mov
mov
loope
jno
and
retf
dec
jecxz
add
pop
enter
lods
das
jp
inc
inc
enter
sahf
enter
(bad)
das
mov
adc
js
cld
mov
inc
mov
adc
jo
(bad)
mov
repnz
xor
mov
cs
cmp
movs
jmp
pop
inc
neg
test
cmps
sbb
mov
stos
lea
xor
inc
(bad)
xchg
inc
js
clc
call
push
mov
daa
les
mov
gs
ds
dec
or
mov
test
rol
das
sbb
jle
mov
push
xor
adc
adc
cld
hlt
mov
mov
scas
xor
or
pop
setno
adc
jno
push
outs
inc
push
ret
sub
rcr
mov
xchg
add
add
dec
mov
fidiv
mov
cli
jne
repz
in
out
shr
sbb
push
cmps
inc
xchg
arpl
ins
and
clc
add
je
mov
xor
les
mov
(bad)
iret
push
je
les
test
or
mov
inc
xchg
cmps
xor
aaa
dec
test
or
fadd
lock
call
(bad)
inc
add
inc
(bad)
jbe
jbe
dec
xchg
into
sbb
add
mov
in
xlat
es
pop
lock
mov
int
dec
cmp
stc
push
lds
nop
scas
(bad)
in
(bad)
scas
clc
(bad)
fld
cwde
imul
adc
add
push
sub
adc
int
movs
(bad)
mov
icebp
mov
rol
fisttp
(bad)
(bad)
(bad)
(bad)
inc
mov
rol
cdq
xchg
push
rcl
test
dec
mov
dec
jae
movs
(bad)
dec
into
or
mov
push
add
fist
or
inc
jg
inc
xor
cmp
add
jne
mov
mov
fwait
out
inc
lods
retf
cli
push
dec
or
imul
jp
jle
into
push
pop
add
or
mov
dec
xchg
aas
bound
fiadd
sbb
or
mov
or
sub
jo
sbb
dec
jl
lds
add
push
cs
xor
sbb
pop
fld
xor
mov
fcom
sbb
fisub
push
dec
xchg
les
mov
aaa
or
fst
test
mov
shl
mov
retf
sahf
nop
loop
jmp
adc
sar
mov
fcmovu
sub
fist
popf
dec
sbb
mov
clc
push
sahf
rcr
retf
or
mov
movs
add
inc
lods
adc
imul
xchg
shl
xchg
aaa
jecxz
retf
sub
cdq
int
mov
or
(bad)
sbb
xor
jecxz
xlat
(bad)
mov
push
mov
cs
sbb
jbe
adc
add
and
mov
mov
xchg
loope
push
(bad)
bound
lods
(bad)
sbb
add
adc
(bad)
push
scas
pop
push
push
outs
enter
cli
inc
repnz
punpcklbw
inc
cld
ds
push
int
dec
sub
push
es
push
popw
fldenv
push
mov
push
ja
and
pusha
or
dec
call
(bad)
dec
jl
and
repz
movs
inc
pop
lock
aam
cmp
sar
xor
xor
jae
xchg
icebp
add
(bad)
call
ins
js
fcmovnbe
dec
mov
in
fcmovnb
xor
jne
cmp
stc
xor
dec
fcmovb
push
pop
clc
movs
adc
dec
mov
add
int
mov
fdiv
scas
bound
xchg
inc
jp
cmp
mov
jmp
ins
sbb
arpl
mov
mov
dec
xchg
jg
cmp
xchg
rcl
dec
push
dec
sti
xchg
or
lahf
xchg
push
add
iret
ror
xchg
or
aad
inc
data16
cmp
mov
call
dec
sahf
sar
loopne
repz
test
sbb
sbb
and
dec
call
push
sbb
jp
es
and
(bad)
mov
mov
movs
push
dec
cmp
jnp
lea
jp
les
xchg
push
mov
add
iret
shr
dec
sti
test
push
inc
cmp
mov
out
pop
imul
xor
movs
push
int
into
sub
cmc
add
lea
clc
aaa
ss
inc
jno
iret
mov
mov
shl
xchg
xlat
sub
fadd
scas
jg
int
mov
push
xchg
mov
sub
mov
test
push
sub
iret
scas
push
adc
bound
mov
inc
mov
sub
shr
push
into
repnz
sbb
pop
mov
adc
inc
mov
xchg
jae
lock
(bad)
xor
add
js
mov
adc
sub
push
pop
mov
(bad)
call
ret
adc
mov
xor
mov
dec
mov
sti
sbb
(bad)
jg
or
mov
or
dec
rcr
push
adc
gs
pop
adc
inc
xchg
ficomp
push
adc
cmp
(bad)
arpl
or
rcr
test
or
addr16
jecxz
or
fcom
or
xchg
mov
cs
and
ds
xchg
leave
fcmovne
mov
pslld
lea
fnsave
sub
push
(bad)
fnop
pop
xor
scas
pushf
cmp
pop
aaa
xor
or
(bad)
(bad)
scas
mov
cmp
mov
call
dec
jns
jle
enter
rol
aaa
sbb
xor
push
sub
pusha
pop
outs
shl
stos
or
cdq
add
push
test
adc
jmp
cmp
cmp
mov
add
mov
loopne
jbe
mov
rcl
rol
sar
loopne
js
or
sub
jle
ret
push
inc
call
pop
rcr
mov
mov
lahf
lahf
pop
xor
das
mov
push
fadd
sti
or
enter
mov
cmp
popa
lock
retf
pop
cli
or
pop
dec
mov
dec
call
and
into
in
xor
sub
mov
retf
or
add
int
test
or
dec
data16
or
dec
xor
jbe
add
add
ret
jo
loop
ins
out
scas
cmp
inc
mov
aam
and
aaa
rcl
ffree
push
adc
xor
or
jge
scas
icebp
sbb
mov
jne
mov
add
(bad)
mov
xchg
aam
lahf
in
dec
dec
das
das
shl
loopne
ret
icebp
pop
test
sbb
push
sub
rol
mov
hlt
dec
mov
fbld
rol
jl
ins
aam
daa
cmp
xor
mov
aaa
push
cmp
cli
adc
xchg
or
popa
mov
adc
aad
dec
fcmovbe
dec
lods
loop
test
pop
loop
add
mov
jmp
xchg
push
dec
sar
int
inc
fidiv
fsubp
dec
imul
add
add
shr
bound
out
stos
in
nop
cs
pop
movs
arpl
addr16
mov
push
cld
sbb
cwde
mov
or
adc
ins
cmc
add
inc
xor
inc
sbb
int3
jmp
mov
rcr
sub
outs
leave
push
fwait
xchg
dec
inc
loopne
push
mov
or
cmp
jmp
or
xor
dec
or
addr16
add
pop
outs
cmc
retf
pop
mov
dec
ret
mov
inc
dec
jle
in
ret
cmc
bound
or
stos
inc
call
mov
mov
pop
test
out
fs
(bad)
push
es
adc
sub
stos
adc
sub
or
icebp
and
mov
cmp
mov
mov
cmp
dec
and
inc
cmp
shr
in
or
inc
arpl
push
ds
jl
mov
pop
out
fld
add
cmp
xor
cmp
mov
xchg
sbb
mov
daa
scas
retf
push
dec
adc
push
add
addr16
jcxz
cwde
dec
cmp
add
mov
push
sbb
nop
push
lea
test
sti
cmp
or
jle
call
outs
xor
pop
xor
add
jo
pop
sahf
lea
stos
adc
push
outs
cwde
dec
mov
or
adc
movs
and
push
mov
retf
mov
cmps
(bad)
add
(bad)
or
stc
scas
sbb
ss
enter
in
imul
das
add
retf
test
js
push
imul
in
mov
sar
test
test
pop
scas
mov
cwde
cwde
daa
adc
out
dec
dec
mov
mov
cld
sub
xor
inc
mov
in
sbb
arpl
gs
xchg
scas
pop
rcl
xchg
pop
fsubr
mov
nop
sub
inc
fnclex
shl
movs
das
jp
mov
mov
mov
sub
jbe
xchg
pop
ficom
outs
push
jle
cmp
pop
xchg
test
das
movs
mov
les
lods
sub
iret
push
ret
pop
dec
(bad)
outs
add
push
pop
mov
scas
shl
inc
ret
add
(bad)
fmul
neg
int3
sbb
cmp
dec
pop
add
pop
(bad)
cli
inc
xor
retf
add
xor
rol
cmp
push
sar
rol
push
fadd
sar
pop
jo
aaa
cld
inc
mov
(bad)
dec
or
ficom
das
ror
dec
inc
xchg
(bad)
or
mov
or
ret
pop
and
(bad)
sbb
add
ret
cwde
mov
or
daa
sahf
inc
test
sbb
dec
out
inc
add
dec
push
fstp
(bad)
int
enter
scas
mov
cmp
and
or
pop
add
lods
mov
(bad)
fcomip
adc
or
mov
ins
or
jmp
aaa
ds
mov
adc
psubq
inc
push
dec
jmp
push
les
push
(bad)
fisttp
jbe
push
daa
dec
test
xor
cmp
xor
sbb
xchg
sbb
mov
(bad)
call
mov
cmp
adc
ss
push
mov
xor
and
das
or
dec
pushf
jno
adc
ret
mov
inc
(bad)
nop
inc
mov
outs
(bad)
dec
adc
push
xor
sub
inc
sahf
mov
push
hlt
out
mov
outs
mov
inc
dec
bound
lock
jp
adc
in
sar
(bad)
mov
ret
inc
add
dec
das
ss
sbb
jg
into
pop
lods
xor
test
(bad)
cmp
push
sbb
add
dec
mov
xor
mov
cld
push
or
fild
cmp
rcl
jmp
test
mov
sbb
adc
pop
cwde
sub
addr16
pop
jb
mov
test
cmovnp
jbe
fiadd
mov
jmp
call
ss
daa
iret
adc
jg
mov
pusha
mov
push
inc
popa
loopne
ret
push
pop
push
(bad)
dec
add
jmp
sub
mov
xchg
add
retf
rcl
cmp
das
xor
and
inc
gs
es
xor
mov
fild
cmp
inc
add
jp
pusha
add
jmp
popa
mov
or
or
mov
(bad)
inc
jns
mov
ins
into
nop
push
test
mov
ficom
leave
add
cmps
aas
pop
xchg
sbb
cmps
cdq
xchg
retf
inc
aam
retf
mov
push
fidivr
jmp
sahf
sub
jb
push
addr16
dec
cld
mov
ja
icebp
sub
pop
ja
jmp
cmp
mov
fs
dec
sbb
aas
pusha
add
jle
pop
push
test
movs
mov
mov
inc
and
jle
inc
sbb
(bad)
pop
pop
(bad)
fst
int
inc
int3
sub
add
loopne
pop
jo
fcmovb
syscall
cld
enter
lds
inc
repnz
sub
add
fld
mov
leave
ins
mov
sub
test
ficom
sbb
pop
or
stos
ror
icebp
jl
retf
cmp
mov
mov
jns
loope
dec
xor
clc
jg
xadd
cmp
or
inc
ret
add
or
sub
adc
dec
lods
sbb
sbb
mov
jb
push
xor
mov
or
pop
les
idiv
(bad)
inc
xchg
stos
sbb
pop
push
cmp
out
add
or
mov
and
and
sub
push
push
cmps
test
orps
push
dec
cmp
jbe
mov
xchg
mov
mov
loop
scas
push
adc
fldenv
cld
sbb
pop
and
enter
ds
aas
(bad)
mov
cmp
and
cld
movs
mov
out
and
call
cmp
add
or
inc
dec
xor
or
pop
inc
fmul
ret
inc
enter
in
call
dec
push
mov
sar
ficom
fdiv
jge
jecxz
clc
or
push
mov
xor
mov
lock
loop
and
jmp
cmp
pop
push
hlt
mov
jg
sub
es
push
add
sub
je
aas
dec
scas
xor
bound
(bad)
loop
xchg
scas
dec
inc
inc
or
jmp
lock
std
movs
xor
xlat
inc
shl
cs
cli
ret
xchg
adc
xor
mov
pusha
les
or
ficomp
ficomp
add
cmc
icebp
add
xor
adc
pop
lock
cmp
push
outs
ins
push
fcmovnb
pop
add
popf
jmp
or
cmp
jl
call
outs
test
(bad)
xor
into
sbb
cmps
imul
pop
ds
push
imul
cmp
outs
or
imul
add
lock
scas
mov
pop
adc
ret
mov
stos
mov
dec
dec
loopne
cmc
sbb
mov
iret
rcr
mov
call
adc
xor
adc
and
jle
mov
mov
inc
cmp
fidiv
retf
cli
dec
inc
xchg
inc
push
das
scas
inc
rol
es
lahf
imul
push
dec
es
jne
add
cmps
dec
mov
add
xor
inc
dec
cmps
add
hlt
dec
into
sbb
lods
or
movhps
enter
mov
adc
lea
add
ins
mov
aas
sub
ja
xor
icebp
movs
pop
(bad)
xchg
xchg
fisub
and
loop
stc
pusha
dec
mov
or
sar
mov
mov
mov
mov
or
cmps
int3
addr16
push
pop
pop
pop
arpl
or
and
mov
arpl
mov
outs
(bad)
xchg
dec
fld
aam
push
pop
jg
out
into
movs
retf
repz
mov
sbb
mov
retf
inc
sub
cmp
pop
push
fistp
mov
mov
add
loopne
jg
or
mov
add
push
jp
js
fld
scas
adc
jmp
lods
pop
fdivrp
ficomp
dec
mov
push
inc
test
xor
scas
sbb
xchg
mov
mov
adc
xor
xor
push
inc
pop
sbb
cli
imul
std
sbb
sbb
aaa
mov
xchg
inc
push
sar
push
jb
and
(bad)
sub
mov
cmp
sbb
mov
sub
cmps
cli
ins
add
ret
aad
push
xchg
add
mov
ficom
xor
inc
or
into
call
arpl
or
and
push
pop
adc
fst
lea
repz
clc
dec
mov
push
dec
add
scas
mov
dec
cmp
into
mov
mov
lods
or
out
sbb
mov
icebp
xchg
xchg
push
dec
js
int
shl
je
data16
mov
mov
test
and
dec
fistp
jl
movs
hlt
fwait
pop
add
or
push
test
fbstp
add
dec
sbb
jo
inc
sar
dec
fdivrp
(bad)
jle
add
test
outs
mov
push
fnsave
popf
(bad)
add
dec
push
dec
icebp
xor
(bad)
es
cmps
mov
mov
call
xor
cmp
inc
ror
mov
mov
out
jbe
cli
inc
inc
sbb
push
into
sbb
outs
pop
or
punpckldq
nop
dec
mov
xchg
aaa
and
(bad)
add
pop
pop
outs
dec
or
sub
ret
repnz
add
push
(bad)
sbb
mov
and
inc
jmp
les
adc
dec
data16
dec
mov
shr
hlt
jb
aad
mov
sar
jmp
mov
push
cmc
xchg
inc
mov
or
adc
std
mov
add
push
add
fs
dec
mov
dec
dec
add
pop
dec
cli
add
(bad)
pop
push
nop
mov
or
aaa
sti
(bad)
fiadd
sub
js
mov
inc
cmp
push
push
aas
lea
push
(bad)
enter
int
mov
clc
jae
and
cmc
shl
sub
jl
rep
in
mov
vmovddup
mov
dec
(bad)
out
xor
dec
mov
dec
push
scas
inc
dec
xor
jp
or
test
lock
push
xor
lods
mov
cmp
je
jge
mov
arpl
(bad)
jnp
fimul
into
adc
adc
pop
fidivr
xor
push
into
push
push
push
cld
xor
sbb
movs
jb
inc
push
(bad)
rol
test
mov
cld
(bad)
dec
push
cli
movs
int
dec
mov
test
lock
aad
xor
stos
(bad)
xchg
sbb
mov
call
mov
and
sub
mov
mov
mov
mov
push
adc
add
daa
xor
push
jp
test
popa
call
out
outs
push
push
sbb
pop
or
scas
cmp
test
inc
loop
push
xchg
xchg
shr
sbb
sub
int
inc
ins
adc
xor
adc
clc
and
or
call
mov
and
push
test
and
push
(bad)
cmps
out
adc
xor
mov
pop
adc
mov
stos
push
dec
clc
into
add
pop
out
fcom
adc
add
imul
nop
repnz
inc
mov
or
mov
pushf
mov
pushw
mov
mov
adc
cmps
das
neg
jle
adc
stos
hlt
outs
loopne
xchg
dec
mov
xchg
and
add
adc
mov
retf
mov
pop
xchg
call
xchg
mov
mov
int3
rol
nop
ja
dec
in
push
push
inc
mov
ret
push
cmp
das
sbb
ret
or
or
jbe
adc
outs
test
cmp
adc
pop
push
adc
or
mov
rep
stos
sahf
pop
and
push
sbb
pop
add
inc
loope
inc
movzx
loop
pop
mov
inc
dec
scas
sbb
sbb
adc
(bad)
sub
cmps
inc
push
adc
xchg
xchg
cmps
jbe
jns
outs
adc
fistp
mov
(bad)
jmp
loope
fidivr
cmps
data16
mov
xor
or
push
sbb
fcom
movs
call
jp
mov
add
inc
aad
mov
(bad)
sti
pop
aas
clc
(bad)
ret
addr16
pop
jne
sub
rcr
icebp
outs
dec
loopne
xchg
lock
ja
or
ds
cld
push
jbe
imul
and
push
stos
adc
pop
jnp
mov
sbb
dec
pop
out
shl
jbe
lock
add
cmp
jmp
sbb
nop
(bad)
jb
test
loopne
mov
fadd
fnstsw
dec
xor
addr16
mov
cmp
inc
stos
les
dec
cld
pop
mov
lods
push
jbe
xchg
clc
adc
aaa
mov
es
pop
imul
shufps
out
dec
pop
stos
or
dec
push
(bad)
fcom
test
call
inc
push
ja
lock
and
dec
jecxz
and
push
mov
scas
out
and
stos
cmp
test
call
adc
jae
mov
das
fmul
movs
mov
inc
adc
stos
jmp
pop
inc
imul
sub
or
bound
fist
pop
iret
cmp
mov
fmul
and
add
mov
push
fwait
add
out
nop
imul
inc
dec
add
call
ds
arpl
pop
push
pop
push
pusha
mov
fild
sub
cmp
data16
add
push
push
sub
adc
out
add
inc
jmp
mov
or
(bad)
mov
push
push
outs
movs
cmp
ret
sbb
add
mov
test
dec
js
scas
jmp
lds
leave
mov
sbb
mov
clc
or
daa
adc
aas
sbb
mov
ins
std
jecxz
pop
mov
or
adc
aam
rol
push
jp
adc
ins
pusha
push
bound
sub
bound
ret
test
add
lea
dec
aam
mov
pop
std
repz
movs
jb
(bad)
cmp
addr16
mov
das
ss
pop
repnz
sbb
push
xchg
mov
xor
repnz
or
inc
repz
or
inc
push
push
add
pop
mov
ret
pop
jne
mov
(bad)
mov
mov
xchg
(bad)
cmp
sub
js
or
xor
pop
xchg
or
xor
enter
add
repnz
jl
xchg
push
jo
cmp
retf
frstor
lahf
jno
ins
movs
cs
int3
adc
xchg
(bad)
pop
push
inc
loop
adc
dec
pushf
(bad)
outs
mov
outs
fcmove
aam
push
mov
inc
mov
push
or
cmp
dec
and
pushf
jle
xor
or
xchg
sub
cmc
inc
test
add
cmp
jae
pop
(bad)
int3
or
pusha
adc
mov
aad
mov
push
mov
mov
clc
add
fisttp
cdq
sbb
ror
stos
cmp
push
adc
aaa
xchg
mov
cmp
mov
push
cs
(bad)
sbb
not
in
or
loope
mov
adc
pop
push
sahf
cs
icebp
push
xchg
ja
mov
stos
es
xchg
mov
loopne
clc
jle
dec
shl
push
pop
dec
fcomp
repnz
hlt
sar
inc
aam
rcl
icebp
mov
mov
pop
mov
fisttp
cmp
loopne
(bad)
aad
push
stos
jns
cmps
cmp
stos
mov
jbe
lods
lods
call
xchg
jle
jmp
adc
xor
adc
sbb
clc
es
test
mov
and
inc
into
sbb
sbb
dec
sbb
jg
mov
fmul
adc
xor
dec
jl
ret
jp
or
fidivr
jbe
sub
sbb
mov
jo
mov
cmc
sbb
and
mov
push
fadd
inc
fist
cmp
out
aam
xor
ret
and
xor
add
seto
push
pop
ficomp
jb
sti
stc
std
push
dec
(bad)
std
pop
rcl
xor
xor
dec
dec
aad
adc
call
cmp
cmp
daa
loopne
adc
add
or
dec
loope
rcr
pop
cmp
je
mov
ret
aas
mov
fild
ins
jp
mov
not
or
fidivr
add
out
and
enter
xchg
fimul
fimul
movs
nop
mov
pop
gs
ficomp
add
je
mov
push
int3
xor
jmp
inc
(bad)
out
les
repz
sbb
outs
pop
jo
lods
pop
fwait
neg
mov
cmps
shl
sub
repnz
jle
mov
cmp
xchg
jae
cmp
jge
push
mov
sahf
jno
test
xchg
test
inc
mov
faddp
jb
pop
push
cmps
loope
push
or
out
xchg
stc
das
out
mov
pop
into
je
jmp
fld
mov
cli
xor
push
sbb
jl
jmp
mov
xor
add
push
fcmovnb
test
inc
add
mov
int3
je
push
cmps
xchg
out
shl
aam
sbb
jbe
rol
inc
fistp
push
cli
icebp
xor
movs
sbb
loopne
mov
mov
setl
ss
fs
sbb
(bad)
sar
es
fbld
ret
retf
pop
mov
mov
or
aam
ins
sub
mov
and
inc
sbb
inc
dec
fmulp
popa
jl
adc
xchg
int
loope
push
into
adc
push
bound
js
add
cmp
nop
lods
stos
outs
jg
stc
cdq
sbb
fild
xchg
mov
push
das
pop
jecxz
rcl
pop
adc
retf
out
lock
sahf
cmp
out
stos
stc
test
dec
stc
nop
pop
icebp
jmp
pop
pop
push
into
mov
data16
je
mov
xor
dec
loope
lea
rcl
out
fld
cmp
clc
jg
pop
mov
add
xchg
jecxz
test
and
sbb
adc
scas
sahf
jae
add
dec
mov
(bad)
push
add
shl
sbb
scas
push
add
data16
mov
xor
(bad)
scas
xchg
or
mov
jmp
fild
mov
push
dec
cmp
test
inc
repz
fsincos
mov
jle
adc
mov
mov
mov
ds
bound
je
lahf
push
xchg
fcomp
dec
out
(bad)
scas
jp
shl
pop
dec
jbe
jne
movs
add
push
pusha
jbe
mov
xchg
pop
fistp
jmp
dec
push
sub
sti
pop
jle
icebp
pop
sahf
mov
jmp
jne
inc
sub
div
jp
pusha
mov
stc
xor
arpl
xchg
inc
call
mov
mov
xor
subps
push
push
sbb
cli
inc
pop
push
pushf
mov
arpl
jmp
xchg
aas
ror
test
jns
ds
shufps
xor
inc
push
cmp
iret
and
xchg
int3
mov
and
cmps
ss
push
inc
push
repz
jmp
ret
mov
or
arpl
or
lds
add
mov
cli
outs
stc
ja
push
neg
pop
es
test
inc
lods
or
stos
push
pop
rol
pavgw
pmuludq
push
add
dec
xchg
pusha
lds
test
shl
das
sub
add
xchg
jmp
imul
inc
push
lahf
call
sub
xchg
jbe
or
push
adc
mov
sub
mov
hlt
mov
es
mov
(bad)
dec
inc
fst
xlat
or
mov
cli
inc
adc
xor
sbb
or
mov
push
sbb
out
enter
push
sub
rcl
cmps
mov
ds
test
push
push
dec
jne
xchg
xor
dec
int3
push
cli
sub
stos
inc
pop
adc
xor
add
and
inc
jl
sub
jbe
shl
mov
cli
jbe
scas
inc
add
test
and
inc
stos
icebp
xor
xchg
ja
daa
push
lea
xchg
jmp
sub
mov
fild
cmp
(bad)
(bad)
pop
test
jmp
xchg
stos
push
mov
pop
xchg
pop
aaa
xor
iret
call
dec
and
int3
push
mov
push
sti
loopne
jp
push
mov
or
lods
cdq
xchg
mov
xchg
sbb
mov
cmp
(bad)
leave
xchg
lea
lods
scas
add
movs
push
nop
add
inc
addr16
cdq
or
mov
es
mov
mov
clc
push
cmps
enter
call
shl
push
push
sub
adc
lds
push
test
sbb
dec
mov
jo
push
lods
pop
es
dec
and
xchg
cmp
jp
add
add
(bad)
sbb
js
xchg
push
fist
in
cmp
mov
and
fbld
icebp
xchg
(bad)
jbe
inc
pavgw
push
push
int
(bad)
addr16
pop
adc
rcl
push
mov
mov
add
cmp
lahf
inc
mov
es
(bad)
int3
jo
pop
pusha
sub
mov
movs
repz
or
mov
ret
dec
push
int3
sar
inc
jg
cli
inc
xor
nop
push
jmp
push
(bad)
jle
adc
cmp
outs
ss
clc
das
push
or
nop
push
jp
je
in
je
xchg
mov
xor
jp
push
push
mov
jmp
inc
push
push
add
adc
ds
cli
sbb
ret
pop
fnsave
mov
mov
adc
sar
iret
sub
fidivr
push
and
sub
scas
scas
adc
pop
jl
(bad)
(bad)
sub
push
sbb
es
fbstp
sahf
ror
sbb
cmp
ins
inc
loope
test
sbb
and
clc
stos
inc
adc
fcmovu
or
mov
xchg
push
adc
imul
(bad)
cs
pusha
sbb
push
mov
dec
into
pusha
push
adc
push
(bad)
jnp
adc
sahf
add
rcl
mov
push
inc
adc
adc
stos
add
adc
sar
cmp
scas
inc
inc
in
dec
xor
jle
div
dec
bound
add
in
das
pop
js
xchg
mov
icebp
cmc
ret
cmp
call
ja
jnp
das
mov
push
add
and
and
dec
mov
jge
loope
inc
sub
adc
mov
pop
push
jo
js
push
push
xchg
sub
or
mov
mov
xchg
inc
out
arpl
ds
push
cs
sbb
mov
inc
mov
shl
loop
rcr
je
xchg
xchg
out
jl
cld
cmps
stc
dec
push
cmp
pop
sbb
pop
repnz
lahf
xor
add
mov
push
nop
std
xchg
mov
mov
ss
push
jecxz
sub
mov
test
int
mov
or
stos
movs
push
mov
or
cdq
call
xchg
jg
bnd
xor
dec
inc
shr
std
xlat
ret
mov
pop
(bad)
cmps
mov
xsha256
cmps
pop
fmul
rol
ds
stos
in
aaa
ror
adc
sub
push
adc
mov
and
mov
into
popa
push
and
xor
cs
sub
dec
xor
mov
or
or
rcl
push
mov
xor
and
iret
inc
pop
cmps
pop
fs
aaa
ins
push
(bad)
push
pop
inc
xchg
xor
sub
sub
shl
pop
ficom
scas
xchg
and
pushf
aam
cli
push
or
aaa
std
loopne
or
push
cmps
cwde
sub
jmp
rcr
dec
mov
sar
(bad)
mov
mov
xor
cmp
lock
les
xchg
mov
mov
jg
cmp
or
movs
dec
jae
mov
adc
inc
sub
inc
jl
cmc
retf
fbstp
pusha
cli
fwait
stc
inc
cmp
stos
adc
pop
data16
dec
and
movs
and
inc
ror
or
dec
sub
dec
mov
mov
mov
lock
jp
dec
iret
xor
sbb
outs
add
mov
cmc
adc
dec
mov
fwait
xchg
pop
mov
mov
outs
pop
pop
pop
mov
or
in
xchg
inc
ret
cmc
test
jp
pop
cmp
mov
outs
imul
into
jl
imul
stos
jmp
xor
stos
sbb
mov
jnp
(bad)
mul
daa
psubq
lahf
dec
xor
les
aas
pop
add
mov
movs
push
inc
cmps
imul
cld
sar
add
xchg
pop
mov
cmp
inc
addr16
push
push
cli
and
sub
out
ss
retf
dec
(bad)
jecxz
pop
sar
clc
icebp
scas
inc
push
scas
fld
aaa
pop
es
cmp
lahf
cmp
dec
mov
jmp
push
xchg
mov
fsub
lea
jecxz
mov
cmp
retf
mov
mov
fldenv
repnz
inc
cwde
cdq
and
dec
pop
mov
inc
daa
adc
pop
adc
pop
out
mov
in
lahf
and
mov
cmp
cmp
pop
ret
pop
adc
jb
pushf
iret
bnd
pop
in
jnp
hlt
dec
adc
fcomp
push
mov
mov
cmp
push
fimul
(bad)
call
pusha
es
push
sti
sub
mov
ret
sub
jbe
test
lahf
cmps
push
mov
sahf
and
pop
call
xchg
pop
add
fst
or
push
(bad)
icebp
rol
fadd
add
repnz
clc
(bad)
pop
add
jl
pop
inc
push
adc
sar
fs
es
aam
iret
stos
inc
add
retf
ret
sbb
shl
mov
sbb
sub
sbb
jl
jns
inc
xor
nop
cmps
pop
das
fiadd
clc
hlt
dec
or
add
jns
mov
aaa
mov
pop
ret
pminub
xchg
cli
pop
retf
cmp
push
push
pop
ins
cli
test
(bad)
push
bound
push
fld
pop
mov
daa
and
adc
aad
or
ins
ds
popa
jnp
es
(bad)
mov
dec
sub
sub
mov
pop
or
lods
add
loopne
mov
push
mov
ror
ret
dec
test
pusha
or
(bad)
mov
push
div
ud1
cmp
out
ret
cld
dec
jmp
ins
xchg
out
retf
adc
rcl
add
jmp
sub
(bad)
iret
push
mov
pop
cmp
(bad)
sub
sub
or
sbb
pop
mov
iret
adc
idiv
push
mov
jg
adc
inc
mov
mov
mov
sub
sub
xor
bound
das
fisttp
test
or
jo
xchg
stc
cld
and
pop
ret
and
dec
jmp
fimul
inc
test
cmps
loopne
adc
pop
add
loopne
pop
xabort
dec
push
scas
or
cmp
sbb
cmp
mov
fcmove
(bad)
adc
cmp
arpl
je
jne
jecxz
xor
and
repnz
es
sbb
jl
das
ret
xor
scas
jge
cmp
sub
mov
adc
inc
fidiv
inc
pop
shr
cmp
sub
lock
cmp
xchg
xchg
jg
ret
adc
ins
test
dec
xor
push
mov
xor
loop
mov
pusha
cli
retf
fcomp
add
sub
mov
mov
fcomp
into
xor
(bad)
jge
or
dec
popa
xchg
lock
mov
mov
loop
xchg
push
sar
arpl
(bad)
mov
cmp
pop
icebp
call
rcl
mov
lods
push
sub
movlps
repnz
adc
or
(bad)
mov
sub
xor
xor
or
push
mov
mov
ja
pusha
int3
jbe
lods
xchg
and
xchg
retf
lds
(bad)
fmul
clc
xchg
sub
mov
inc
mov
sub
adc
dec
retf
mov
sub
sbb
mov
dec
sti
mov
pop
or
adc
inc
push
(bad)
aam
inc
fsubr
nop
js
and
dec
add
test
inc
inc
lahf
dec
dec
std
push
inc
ss
mov
mov
(bad)
into
xor
and
cmp
sbb
(bad)
fist
ficomp
lock
mov
mov
pop
movs
jno
loopne
lock
adc
rcl
sub
inc
mov
jmp
mov
stos
push
aam
retf
pop
sbb
push
fdiv
addr16
ins
(bad)
and
or
cmp
fsubr
lea
jle
div
cmps
loopne
cmp
pop
mov
ret
inc
sbb
sub
scas
clc
mov
movs
jae
xchg
cmps
dec
pop
lock
mov
cld
iret
imul
pop
ds
adc
mov
and
adc
(bad)
push
sbb
push
pusha
or
inc
cmp
(bad)
mov
mov
popa
add
(bad)
and
mov
data16
test
ins
jbe
fsubrp
add
xor
int
lahf
dec
adc
popa
push
mov
mov
stos
call
push
pop
or
push
mov
push
(bad)
outs
pop
mov
dec
or
sti
xor
mov
xor
xor
clc
cmps
movs
adc
test
push
fstp
mov
push
sub
xor
jl
dec
push
stos
into
push
(bad)
lock
cmp
stc
sbb
test
fs
adc
std
inc
les
cli
sbb
cwde
sbb
dec
mov
jne
jg
mov
inc
mov
dec
mov
jne
addr16
jmp
fs
inc
shr
mov
sub
aas
cmc
inc
or
mov
inc
cld
xor
(bad)
int3
jp
pop
sbb
stos
ins
push
pop
ret
inc
lods
cmp
out
adc
aas
movs
pusha
ss
fidivr
fld
add
dec
cld
adc
aam
inc
pop
imul
xchg
xor
dec
test
lock
cli
xchg
fcmovnb
inc
into
jp
xor
push
popa
mov
ret
jbe
and
adc
dec
lds
mov
setnp
mov
adc
dec
and
bound
loope
pop
push
fsubr
xchg
jl
xchg
ret
rol
into
jecxz
mov
mov
mov
or
jg
(bad)
outs
inc
aam
dec
dec
mov
jnp
cmp
jl
arpl
lahf
jecxz
xchg
leave
ret
sub
xchg
add
hlt
lock
sub
cmp
ins
retf
mov
dec
push
mov
add
xchg
xor
push
xor
rol
adc
inc
pop
arpl
add
sbb
aaa
adc
push
mov
xchg
icebp
bound
xor
pop
cmp
cld
inc
cli
stc
aas
es
ja
mov
add
fpatan
jns
push
bound
js
push
push
imul
jmp
arpl
loop
icebp
(bad)
leave
clc
cmps
jmp
xchg
iret
mov
pop
sbb
sbb
mov
lahf
int3
adc
xor
into
push
xchg
cmps
mov
adc
inc
pop
adc
(bad)
mov
mov
sub
mov
mov
aaa
cmp
(bad)
mov
call
ficomp
cs
jecxz
push
inc
inc
mov
mov
nop
add
shr
xchg
jle
loope
sbb
and
jg
push
dec
pop
ds
mov
inc
(bad)
adc
data16
bound
int
inc
cmp
mov
push
push
jns
and
mov
repz
shr
bound
stos
fld
xchg
mov
xchg
mov
pop
jno
js
cli
ds
mov
outs
sub
add
aaa
mov
xchg
xchg
mov
loope
mov
lahf
stos
loop
push
aam
sbb
dec
stos
jnp
mov
lods
and
mov
cmp
cmp
(bad)
sbb
scas
out
sbb
cdq
adc
mov
lds
adc
xchg
push
mov
or
es
xchg
inc
daa
cli
xchg
jmp
ss
scas
mov
adc
add
iret
push
stos
inc
shl
mov
ja
cmp
addr16
mov
(bad)
mov
adc
push
adc
aas
add
or
push
int
adc
fwait
into
cmp
shl
mov
fwait
or
push
and
mov
and
or
cmp
and
dec
inc
into
sahf
jno
sub
cmp
data16
ja
cmp
inc
mov
movs
or
push
ss
js
nop
mov
push
push
(bad)
mov
add
aaa
adc
movs
or
(bad)
mov
clc
(bad)
push
sub
pop
dec
cwde
int
dec
jbe
iret
mov
cs
mov
cmp
jbe
in
xor
mov
adc
mov
jb
cmc
push
jb
(bad)
mov
enter
adc
inc
jl
das
dec
xor
push
repz
or
dec
push
call
dec
adc
mov
jmp
adc
ja
xchg
pminsw
inc
fcomp
int3
fs
add
or
cmp
popf
repnz
mov
outs
stos
nop
jmp
rcr
mov
pop
push
movhps
into
mov
movs
iret
ss
lods
cmp
and
arpl
jg
mov
xor
or
mov
sti
inc
or
inc
or
fsubr
push
fimul
(bad)
or
xchg
cmp
movs
dec
xor
test
jmp
sahf
dec
pushf
iret
xchg
mov
push
bound
iret
xchg
inc
jl
add
pop
push
lock
add
and
adc
add
mov
adc
mov
inc
fs
xor
sub
jb
inc
mov
aaa
mov
push
sbb
jp
fwait
xor
push
pop
mov
shl
cmp
push
into
mov
loope
hlt
dec
pop
mov
imul
out
out
movs
mov
and
mov
adc
in
imul
into
xor
sub
mov
pop
clc
aas
inc
or
daa
addr16
inc
in
retf
pop
popa
(bad)
test
jl
pop
jmp
test
mov
sub
sbb
repnz
ss
int3
cli
mov
push
pop
movs
or
ret
jnp
in
mov
jb
or
clc
loop
fwait
cli
daa
push
xor
adc
repz
push
pop
or
retf
jmp
mov
pop
inc
scas
xor
mov
adc
and
mov
jl
jno
mov
outs
cmps
jne
push
dec
arpl
or
xlat
sbb
or
jbe
out
adc
fwait
dec
enter
pop
adc
mov
adc
cmp
clc
mov
push
pop
mov
mov
xchg
adc
lds
mov
adc
add
sub
cld
pop
inc
mov
push
int3
cmp
push
aad
pop
clc
fild
jbe
outs
adc
sbb
in
cmp
loopne
adc
cdq
xchg
enter
cwde
fsubp
fild
test
ret
test
adc
dec
inc
mov
inc
inc
(bad)
outs
mov
and
int
mov
(bad)
out
rcl
pop
int3
js
jle
or
sbb
adc
sbb
jle
pop
jecxz
imul
push
fst
mov
push
pop
dec
outs
jno
in
pop
sbb
dec
mov
push
xchg
hlt
aaa
out
pop
mov
xchg
and
mov
clc
xor
call
adc
std
dec
mov
fiadd
gs
imul
sub
aam
jmp
push
push
aas
out
fdiv
xchg
aaa
push
ror
sub
ds
pop
imul
xor
sub
jecxz
inc
(bad)
das
and
push
shl
and
movs
pusha
movups
jno
inc
pop
sahf
aad
xor
pop
adc
mov
idiv
jmp
es
mov
cmp
das
inc
mov
jl
adc
jo
sahf
cmp
(bad)
ja
add
into
jmp
bound
je
and
stos
adc
pusha
xor
fwait
xchg
es
dec
mov
push
dec
(bad)
loopne
push
xchg
pop
mov
test
scas
stos
sbb
pop
mov
in
sbb
test
push
jmp
xchg
mov
lea
sti
push
jle
mov
cmp
push
fbld
pop
xor
xchg
dec
outs
fisub
add
cmps
push
adc
cld
out
(bad)
lahf
jns
lds
or
or
fnstcw
fwait
clc
jle
dec
mov
out
gs
ret
mov
jbe
sbb
adc
cmp
inc
and
sbb
xor
sub
push
mov
and
push
movs
das
push
sub
(bad)
mov
add
repz
outs
ret
aaa
adc
jmp
sub
cs
jnp
cdq
jp
hlt
mov
push
cmps
jmp
(bad)
into
and
xchg
jecxz
imul
dec
lods
sbb
xor
add
and
sbb
in
jp
dec
mov
daa
in
sbb
xor
and
sbb
add
pop
stc
dec
lods
popf
sbb
xchg
daa
pcmpgtb
mov
fild
push
push
je
and
(bad)
mov
xor
addr16
push
cmps
repz
add
fcmovnu
and
jp
je
loope
cs
pop
test
mul
enter
push
ss
adc
fst
jmp
ret
pop
mov
mov
xor
jae
or
in
es
and
enter
daa
cmc
sbb
and
popa
or
ret
sbb
or
imul
das
pusha
or
inc
add
pop
out
add
mov
sub
mov
pop
pop
repnz
push
hlt
(bad)
cli
cmps
xchg
and
push
shl
out
add
sahf
xchg
ret
cmp
push
add
pop
push
dec
call
dec
sub
int
push
sti
sbb
dec
fisttp
rol
sub
dec
cdq
mov
ror
arpl
movs
sub
mov
mov
cmp
mov
mov
push
cmc
rol
into
in
imul
mov
adc
add
fstp
shr
nop
adc
pop
jg
add
(bad)
jg
hlt
divps
inc
and
pop
xchg
out
inc
divps
and
pop
pop
(bad)
ins
dec
and
push
fist
imul
cld
test
push
mov
cmp
stc
shl
dec
retf
cmp
jge
and
jne
xchg
sbb
push
sub
mov
stc
cld
adc
das
cmc
push
test
jle
and
add
inc
dec
ret
xor
push
cmp
sbb
add
add
sub
adc
ins
fiadd
imul
cmp
sub
cmp
retf
movs
retf
or
test
das
pusha
shl
pop
fidiv
js
iret
shl
add
sbb
iret
mov
jl
mov
clc
bound
sbb
retf
test
jmp
xor
das
push
int3
cmp
(bad)
dec
push
inc
pop
(bad)
popa
mov
adc
gs
not
sbb
push
repnz
jmp
adc
rcl
movs
test
fsubr
sub
imul
cs
mov
pop
cmp
jecxz
daa
add
or
sub
jmp
or
loop
and
outs
dec
outs
jbe
xchg
outs
scas
cs
adc
int3
cmp
xchg
imul
jmp
jo
ret
aas
push
push
sub
pop
sub
popf
pop
mov
inc
das
ret
sbb
enter
in
or
mov
dec
xor
and
aaa
sti
das
and
enter
mov
int3
iret
dec
loope
pop
mov
icebp
pop
js
dec
adc
push
push
sub
add
and
jl
std
hlt
(bad)
inc
xor
je
mov
push
das
xchg
es
fwait
adc
inc
mov
fild
in
inc
sub
cmps
xchg
xchg
xchg
xcrypt-ctr
cmps
pop
cwde
(bad)
adc
push
mov
fucomp
adc
imul
cmp
fimul
dec
mov
fs
dec
mov
pop
fist
movsx
sub
loop
sbb
dec
adc
sub
cmp
fwait
add
shl
pusha
cmp
jl
or
outs
xchg
mov
and
(bad)
mov
sbb
mov
rcr
sub
popa
rep
push
or
sbb
stos
iret
add
and
add
and
out
pop
dec
mov
push
xor
dec
inc
or
frstor
jg
pop
test
fidivr
(bad)
nop
push
and
imul
clts
mov
aad
lods
mov
(bad)
jle
mov
jle
xor
sbb
xor
and
xchg
les
xor
add
cmp
mov
imul
add
jbe
pop
sub
mov
pop
adc
xor
inc
stos
xor
ret
ja
imul
inc
jge
or
test
jg
clc
xchg
sbb
dec
mov
repz
cmp
cmc
cmp
mov
mov
std
jle
mov
add
sbb
arpl
xchg
sub
push
aas
sub
inc
mov
push
adc
xor
repnz
inc
xchg
sahf
mov
arpl
sbb
jb
in
fistp
ss
xchg
xchg
rcr
mov
pop
loope
add
xchg
add
cmp
(bad)
pop
and
and
jno
xor
or
(bad)
ins
push
repnz
ficom
inc
xchg
or
and
into
cmp
pop
mov
inc
xor
mov
cmp
lds
dec
outs
daa
mov
xchg
inc
leave
add
cmp
inc
push
cmp
jle
sbb
sbb
mov
gs
jle
sbb
mov
jle
xchg
xchg
cld
inc
mov
mov
bnd
mov
(bad)
(bad)
jg
jo
mov
js
test
ds
jl
into
shl
fidiv
inc
jb
cmp
pop
push
fild
jne
inc
mov
mov
xor
out
mov
mov
test
pop
jbe
ja
or
pop
mov
mov
mov
test
loopne
push
push
adc
xchg
dec
xchg
or
fisub
sar
test
arpl
fs
jno
cli
or
inc
lahf
jmp
cmp
aaa
aas
dec
push
sub
push
stos
mov
fadd
dec
mov
(bad)
push
neg
daa
scas
rcl
imul
(bad)
or
movs
daa
sbb
add
rcl
dec
movs
scas
xor
scas
adc
test
push
in
lods
mov
jnp
push
fist
or
sub
test
add
dec
push
add
cmps
dec
iret
lahf
add
aas
test
stos
add
ret
test
stos
cmp
imul
xor
sub
sbb
mov
cs
pop
add
xor
aas
stos
lock
push
mov
in
pop
cmp
and
jle
mov
push
ror
sahf
add
xor
out
cmps
loope
gs
(bad)
ret
test
jns
nop
retf
ss
sbb
loope
jnp
mov
dec
sti
inc
aas
aaa
xchg
outs
ss
clc
data16
or
or
sub
inc
push
sbb
jg
call
movs
jge
xor
fdivr
int
pop
cld
xor
pop
test
pop
xor
das
dec
push
in
inc
xchg
inc
push
(bad)
retf
jp
xchg
ror
popf
(bad)
dec
and
shl
dec
in
add
and
inc
shl
cs
inc
cmp
push
mov
pop
push
dec
pop
adc
pop
jg
sahf
pop
imul
jp
test
loop
fstp
pop
fwait
sbb
adc
daa
dec
clc
pop
mov
and
(bad)
ficomp
ret
lods
nop
inc
data16
retf
add
push
cmp
je
jmp
repz
fmul
inc
mov
mov
add
jo
lods
xchg
and
xor
xor
push
xor
mov
dec
jmpw
adc
push
add
call
jbe
jmp
aad
loopne
stos
lds
mov
loop
pushf
out
or
cmp
inc
stc
jne
(bad)
cmps
xor
pop
cmp
ss
outs
push
push
not
call
inc
(bad)
mov
das
xlat
sbb
cmp
call
sbb
jmp
pop
xor
mov
xor
push
cmp
test
in
lock
push
sti
cmp
inc
push
(bad)
cmp
mov
cmp
adc
pop
sub
mov
cmp
enter
push
mov
mov
ficomp
mov
inc
hlt
mov
stos
das
jle
mov
xor
div
add
cmp
scas
mov
push
iret
add
push
xor
and
xchg
and
adc
ja
stc
movs
aam
dec
je
lahf
sbb
dec
mov
mov
pop
add
je
mov
pavgb
scas
cmp
mov
xchg
pusha
retf
inc
pop
inc
sub
cwde
je
stos
mov
dec
in
push
jo
add
inc
or
cmp
fnstcw
addr16
retf
xchg
add
mov
mov
xor
lds
nop
jg
cmp
add
loope
pop
xor
add
arpl
adc
push
jmp
add
jbe
ds
imul
retf
inc
pop
into
les
enter
fdiv
xchg
dec
das
add
lock
jecxz
cld
push
mov
outs
mov
aad
adc
data16
mov
cs
mov
movs
pop
sbb
sbb
jb
jp
popf
scas
ror
movs
jg
fcomp
lods
aas
add
dec
pop
stc
xchg
dec
mov
jle
popf
mov
stc
push
jle
jp
es
push
pop
stos
jbe
push
add
ret
sub
(bad)
loopne
dec
lahf
xor
pop
xor
push
icebp
mov
adc
mov
repz
retf
jne
adc
dec
jmp
sti
fs
mov
cmp
fdiv
and
clc
xor
ret
clc
jmp
xchg
into
addr16
mov
dec
mov
sub
cmp
push
clc
inc
int3
adc
pop
mov
dec
or
cmc
aaa
push
xchg
mov
add
push
add
cmp
into
sbb
sub
bound
(bad)
jo
xor
test
daa
(bad)
cmp
cmp
push
mov
jp
sbb
repz
mov
movs
dec
mov
push
sbb
adc
adc
jnp
adc
pop
and
pop
jmp
push
or
cmp
or
call
(bad)
sidtd
test
adc
addr16
popa
call
and
mov
and
sar
jno
and
adc
mov
dec
sti
jecxz
sahf
adc
xchg
icebp
push
mov
mov
shl
pop
and
dec
femms
push
pop
clc
imul
fisubr
test
shr
cmp
inc
xchg
and
push
lods
xchg
lock
sbb
(bad)
aas
out
cvtps2pi
pop
mov
pop
leave
cmp
ret
cmps
in
dec
or
retf
pop
push
add
test
icebp
(bad)
pop
push
retf
sub
icebp
lea
xchg
lods
push
or
mov
push
inc
das
ret
jbe
xor
jg
out
pop
or
es
adc
call
fs
push
cs
sub
aas
pop
mov
xchg
mul
ins
out
mov
pusha
(bad)
adc
adc
and
psubusw
into
dec
out
dec
inc
jbe
push
xlat
sub
cmp
les
xor
cmp
inc
jmp
inc
ftst
mov
loopne
add
adc
jp
aam
dec
and
ror
test
js
sbb
push
cmp
push
call
push
jle
inc
jecxz
jecxz
sbb
jp
sar
xchg
pop
push
adc
sub
inc
pusha
lds
sbb
dec
sub
and
repz
(bad)
push
push
mov
jg
cmp
add
repz
out
popa
loop
dec
mov
mov
push
outs
dec
pusha
lock
cmp
movs
xchg
push
dec
int
inc
sbb
mov
dec
push
push
adc
fcomip
add
jae
lds
int3
cmp
push
mov
ds
fdiv
xor
fiadd
xchg
inc
mov
mov
inc
push
mov
or
add
inc
jl
jg
dec
sub
repz
xchg
je
inc
clc
ja
clc
xor
fild
cmp
push
inc
pusha
pop
and
imul
sbb
in
xchg
jge
xchg
push
mov
fimul
imul
cmp
inc
xor
fcmovbe
or
mov
pop
xchg
xchg
pop
lods
dec
into
dec
or
jmp
add
outs
psubsb
into
or
sar
ret
cli
or
dec
jle
lahf
(bad)
add
in
icebp
stos
push
retf
xor
push
sahf
inc
pop
pop
and
(bad)
hlt
adc
clc
pop
cmp
scas
je
mov
les
cmp
or
or
inc
sbb
scas
out
(bad)
sub
es
adc
popa
fisub
ret
and
je
cmps
repnz
xor
psubd
ja
bound
xchg
pop
sub
push
ins
aas
lds
xchg
(bad)
repz
push
ret
data16
mov
into
addr16
add
dec
mov
inc
cmp
popf
xchg
push
call
bound
pop
push
std
add
mov
int3
cmp
mov
dec
stos
dec
mov
sbb
js
push
mov
not
lds
pop
add
sahf
arpl
inc
adc
mov
add
mov
aaa
cli
(bad)
jg
sub
or
add
push
mov
inc
push
mov
xchg
pop
and
push
mov
pop
dec
adc
nop
pop
les
jmp
pop
push
nop
adc
(bad)
jmp
arpl
nop
aas
and
and
jb
movs
inc
xor
fimul
mov
mov
imul
outs
retf
lahf
and
sbb
(bad)
daa
inc
and
jle
jbe
sahf
add
add
idiv
hlt
push
fsub
push
fst
mov
cmp
fsubrp
or
test
mov
imul
add
jne
loop
rol
into
aaa
adc
sub
push
pop
mov
dec
sub
or
adc
int3
arpl
adc
push
jno
js
sub
ret
aaa
inc
scas
adc
lods
lea
sub
mov
or
push
sbb
push
nop
movs
mov
pop
xchg
sbb
add
(bad)
lods
cmp
inc
cwde
js
loopne
(bad)
and
std
mov
mov
xor
inc
fadd
ja
out
int3
sbb
xor
pop
xchg
repnz
add
daa
pusha
or
inc
popf
enter
fist
icebp
das
inc
mov
(bad)
lock
xchg
and
xchg
mov
pmaxub
mov
inc
mov
mov
mov
sbb
xor
jl
or
inc
(bad)
xchg
push
repz
jle
mov
js
inc
ret
data16
test
mov
mov
leave
jecxz
mov
inc
add
pop
inc
pop
mov
mov
sahf
add
fild
iret
ss
mov
mov
icebp
and
shr
push
sub
push
jbe
ss
inc
cmp
inc
out
mov
mov
and
(bad)
(bad)
in
mov
das
jmp
adc
int
lock
dec
xor
push
adc
cmps
or
ds
xor
xchg
or
inc
push
mov
jmp
(bad)
sub
sbb
inc
pop
dec
or
dec
inc
out
inc
inc
mov
outs
or
or
pop
retf
sub
sub
nop
mov
push
movs
add
aaa
out
push
mov
(bad)
cs
sbb
push
adc
mov
data16
mov
sbb
nop
cmp
xchg
(bad)
push
xchg
jp
imul
pushf
es
and
push
mov
inc
inc
and
or
mov
ret
and
xlat
add
mov
pusha
shl
dec
aas
mov
jp
mov
xor
arpl
lahf
or
mov
jmp
icebp
mov
push
xchg
push
inc
mov
arpl
(bad)
add
shl
pop
push
or
push
aaa
adc
sub
inc
pusha
movs
sub
mov
mov
je
jle
xor
fstp
xchg
or
dec
fiadd
sub
ja
inc
fidivr
xor
sbb
jl
adc
cmp
jl
inc
clc
pop
lods
jge
adc
or
cld
jnp
and
pop
mov
push
cwde
lods
dec
sub
or
push
int3
inc
pushf
scas
cmp
adc
jg
lods
sub
shl
int3
aas
inc
inc
cli
imul
xor
dec
or
xor
jno
movs
pop
ja
and
cs
hlt
pop
(bad)
push
mov
add
inc
repz
je
adc
add
inc
xor
xor
or
push
sbb
add
movs
iret
and
mov
scas
sub
pop
mov
jmp
jl
fsub
frstor
jmp
jne
imul
inc
loopne
inc
iret
push
pop
mov
push
push
test
div
shl
mov
addr16
je
fisubr
sub
push
lods
mov
popf
add
pop
in
aaa
dec
adc
stc
push
pop
lds
push
xor
adc
cmps
pop
into
xchg
jns
ss
scas
fisub
lods
cmp
dec
jl
and
clc
xor
or
call
ins
jns
cmp
push
push
lods
cmp
or
mov
inc
mov
push
or
dec
inc
add
mov
cmc
scas
clc
jmp
pusha
dec
mov
jb
jl
inc
das
add
push
fiadd
jae
rcl
loope
push
mov
push
mov
repz
sbb
adc
push
dec
outs
mov
stos
fisubr
xor
inc
fdiv
add
pop
mov
add
mov
sub
mov
es
into
push
inc
or
jl
xor
pusha
fsub
test
push
push
pusha
xlat
shr
xchg
or
out
xor
mov
add
ret
fdivrp
mov
adc
lock
(bad)
fist
mov
pop
(bad)
dec
inc
add
adc
cmps
mov
(bad)
ja
into
xor
clc
xor
xor
popa
pop
add
jb
sub
inc
pop
into
inc
xor
mov
inc
mov
cmp
inc
in
pslld
addr16
mov
sahf
or
jno
push
xchg
fdivrp
mov
add
dec
dec
and
not
sbb
sub
cmps
sub
cmps
add
mov
and
rol
dec
sub
cmp
pop
adc
icebp
fidiv
xor
inc
mov
jp
pop
adc
mov
cli
and
repz
cmp
cs
clc
aas
or
mov
fst
and
scas
loopne
call
lock
mov
pushf
das
jmp
sahf
fs
xchg
mov
xchg
push
cdq
jecxz
adc
dec
mov
xchg
xor
inc
sti
call
das
mov
inc
adc
mov
retf
mul
cmp
sub
pusha
xor
push
stc
ins
sbb
enter
pop
les
stos
sbb
dec
retf
xchg
iret
adc
mov
xor
test
sahf
enter
daa
pop
repz
and
adc
jg
clc
xor
mov
inc
dec
mov
push
xor
into
test
fs
xor
dec
ss
mov
cmp
lock
mov
das
xchg
fist
add
fld
addr16
fisttp
jle
xchg
push
sub
jecxz
and
outs
lahf
mov
cdq
inc
sbb
cmps
imul
adc
mov
stos
movs
dec
xchg
out
fadd
jle
ss
push
jmp
jle
mov
inc
push
and
or
mov
sahf
data16
dec
test
push
shl
mov
mov
push
outs
inc
ret
xchg
out
xor
or
adc
adc
inc
mov
push
loop
xchg
hlt
adc
xchg
lahf
pop
or
enter
je
int3
fbld
cs
mov
aas
inc
in
call
adc
cmp
lods
xchg
sahf
pop
pop
scas
jecxz
nop
push
sbb
push
cmp
mov
adc
add
mov
in
aaa
add
sbb
mov
push
inc
push
pop
fcmovb
ror
mov
fmul
jle
mov
push
mov
fisttp
and
or
or
sbb
in
out
shl
iret
cmp
aam
dec
mov
dec
imul
inc
jmp
xor
jmp
mov
add
jbe
mov
pop
dec
bound
or
ins
inc
mov
add
fwait
aam
sub
mov
retf
dec
fisubr
dec
adc
sbb
push
push
xchg
pop
sbb
mov
bound
inc
dec
mov
and
dec
fcmovb
loop
and
jbe
pop
jmp
add
mov
push
and
jle
es
sbb
push
xor
inc
xor
sahf
and
adc
adc
push
or
push
mov
add
mov
dec
jmp
mov
push
cli
add
ret
jp
jo
mov
mov
int
pop
push
stos
jmp
scas
test
or
mov
(bad)
mov
mov
jp
mov
sti
sub
dec
les
pop
xor
cld
outs
add
popa
(bad)
nop
ffreep
shr
sub
push
mov
mul
adc
(bad)
(bad)
ror
add
and
cmps
aaa
enter
(bad)
dec
mov
push
test
xor
add
pop
mov
xor
cmp
sbb
or
hlt
rol
fs
push
and
mov
stos
fidiv
add
pusha
mov
sub
mov
jle
(bad)
outs
mov
loopne
shl
rcl
int
mov
retf
sub
adc
inc
dec
je
(bad)
cmps
jbe
lock
test
dec
inc
cmps
mov
mov
inc
div
and
inc
add
clc
and
ret
bound
add
inc
aas
(bad)
fimul
int
mov
scas
dec
cmp
fnstsw
loope
jge
lahf
js
mov
mov
mov
inc
lods
cmp
add
mov
xor
cld
pop
xor
rcr
retf
sbb
arpl
sbb
repnz
str
sahf
int3
inc
into
loop
fcmove
(bad)
lea
or
(bad)
xchg
add
scas
mov
and
adc
movs
mov
push
add
(bad)
(bad)
adc
adc
repz
sbb
test
mov
mov
mov
cmps
jb
mov
(bad)
xchg
jecxz
xor
dec
xor
add
jno
inc
push
adc
mov
ins
mov
xchg
or
retf
sahf
clc
add
call
bound
les
jb
imul
mov
mov
scas
mov
mov
xor
push
aaa
push
adc
jle
nop
inc
shr
xchg
bswap
mov
mov
xchg
add
push
mov
cli
or
dec
inc
inc
into
or
xchg
ret
mov
or
fbstp
je
enter
mov
mov
outs
add
jb
retf
jnp
les
or
out
xchg
mov
sar
dec
add
jmp
mov
cs
and
bound
outs
gs
mov
pusha
(bad)
aam
mov
dec
inc
add
cmps
(bad)
ds
rcr
in
add
xchg
ror
daa
dec
std
xchg
leave
int
call
pop
cmp
mov
push
retf
mov
shr
cmc
loope
pushf
mov
mov
cli
mov
jb
jg
xchg
dec
xchg
mov
movs
addr16
dec
mov
push
ficom
or
xchg
mov
push
or
popa
mov
pop
(bad)
aas
lahf
sbb
mov
movs
retf
mov
add
iret
cmp
mov
bound
xchg
pop
into
(bad)
(bad)
fiadd
sub
fiadd
imul
imul
adc
pop
cmp
cld
xlat
in
push
arpl
inc
mov
and
or
fistp
jno
hlt
mov
pop
push
mov
cmp
les
or
imul
scas
and
jo
push
cmps
inc
(bad)
out
cmps
jl
nop
inc
or
cs
add
outs
js
pop
hlt
and
mov
fcmove
jle
(bad)
movs
outs
jnp
mov
shr
icebp
js
ins
and
(bad)
es
call
mov
jb
lahf
adc
pop
leave
sub
and
mov
ror
xchg
and
sub
inc
sar
inc
(bad)
and
out
jl
inc
int
jmp
fisub
or
lahf
loope
mov
lods
dec
stc
xor
adc
iret
inc
pusha
adc
jbe
movs
or
cmp
add
sub
jg
cmp
(bad)
repnz
out
pusha
adc
jmp
xchg
push
imul
push
fld
dec
in
pop
imul
or
adc
pop
xchg
push
stos
pop
push
inc
push
jb
push
or
push
jl
inc
ret
retf
addr16
leave
xchg
xchg
jge
dec
cmc
cmps
(bad)
dec
sub
adc
xchg
cmps
(bad)
pop
punpckhwd
js
inc
(bad)
shl
imul
nop
push
gs
int3
stc
adc
add
cli
fprem
dec
sahf
pop
jmp
inc
mov
xchg
bound
into
add
jmp
xor
retf
dec
xchg
mov
test
in
xchg
nop
xchg
jae
mov
sbb
les
adc
jns
imul
js
mov
or
add
add
jmp
lea
pop
xlat
(bad)
fbstp
dec
les
jbe
sub
shr
or
add
ss
ins
pop
fidivr
and
xor
xchg
ss
test
sar
(bad)
sub
sbb
ins
and
aaa
int3
lods
test
jmp
stos
mov
fdivr
fnstcw
inc
imul
adc
into
jo
(bad)
(bad)
scas
(bad)
jbe
sub
dec
ds
sub
pushf
sub
(bad)
cwde
int3
sub
mov
cmp
push
push
adc
test
imul
adc
push
push
loope
mov
xchg
or
jo
int3
sbb
mov
cmc
sbb
push
adc
mov
cs
lea
jbe
sbb
mov
xor
push
xor
popf
jge
jg
test
add
mov
bound
imul
and
push
gs
fneni(8087
mov
sub
(bad)
and
(bad)
idiv
push
retf
adc
adc
mov
sbb
add
sub
mov
mov
int3
mov
out
movs
adc
push
fdiv
adc
iret
jmp
push
mov
add
add
and
mov
mov
movs
jns
out
icebp
movs
fucomp
dec
mov
ret
cmp
mov
sbb
add
lods
inc
ins
xor
stos
ss
repz
or
mov
push
call
jl
jmp
mov
mov
sbb
shl
dec
mov
dec
jle
inc
inc
sub
je
dec
jbe
fidivr
cmc
imul
popf
or
dec
xor
mov
jo
dec
xchg
push
sub
lods
cld
and
mov
sub
add
inc
clc
mov
adc
rcr
inc
add
push
cmp
(bad)
dec
test
lds
loope
into
movs
hlt
clc
out
mov
cmp
scas
cld
cmp
call
ss
lahf
mov
inc
ss
mov
inc
add
sub
mov
or
and
ins
iret
dec
retf
cld
mov
cmps
jmp
pop
mov
fxch
sar
xlat
enter
add
mov
xchg
into
xchg
mov
retf
add
retf
hlt
and
or
fidiv
hlt
ins
ret
mov
or
sub
ds
add
imul
cli
lahf
and
lods
sbb
dec
adc
test
pop
les
xlat
outs
ret
leave
inc
inc
cmp
lods
push
mov
mov
add
fisub
pop
mov
lods
adc
loopne
pop
mov
jmp
outs
mov
cmp
jle
xor
dec
gs
dec
mov
imul
lock
pop
inc
sub
jbe
nop
aaa
xchg
int
or
push
dec
xor
repz
xor
ds
adc
ins
xchg
dec
repnz
inc
adc
jo
xor
and
inc
test
add
xchg
rcr
inc
xchg
pop
push
sub
push
jnp
mov
sub
sub
bound
pop
cld
mov
rol
pop
and
xor
xchg
sub
les
stos
arpl
fwait
adc
and
xchg
ins
ds
and
imul
mov
int3
pop
adc
and
mov
imul
pop
rcr
inc
loop
inc
pop
cs
add
sub
add
dec
test
adc
je
gs
xor
jb
add
pop
mov
push
cmps
pop
cld
cmp
retf
dec
ss
pusha
adc
and
repnz
test
mov
or
mov
ret
out
jmp
sti
add
test
es
ffreep
addr16
xchg
add
ret
movs
push
or
sub
cli
add
fst
sub
jle
nop
push
mov
mov
inc
inc
adc
repz
sbb
mov
dec
movs
dec
xor
push
cmp
and
js
pop
bound
push
leave
jo
lahf
pop
ds
imul
xchg
jbe
sub
js
push
xor
outs
inc
in
mov
push
or
pusha
pop
push
test
pop
data16
xor
sub
jmp
in
push
(bad)
(bad)
jbe
add
adc
push
add
lea
xchg
add
(bad)
fprem
mov
into
popa
inc
ds
jmp
cwde
inc
mov
mov
jp
mov
jmp
push
and
jmp
iret
add
xchg
pop
aad
jmp
les
call
cdq
outs
cli
shr
dec
cmp
xchg
xchg
retf
pushf
data16
jmp
xchg
retf
xchg
xchg
xor
in
in
jmp
inc
push
cmps
ds
outs
cmp
mov
pop
mov
mov
add
imul
out
inc
das
iret
lock
sbb
dec
mov
dec
ret
imul
pop
push
inc
dec
jo
pusha
mov
into
fs
sbb
imul
sahf
int
call
push
pop
adc
mov
mov
adc
cmp
adc
xor
mov
fwait
test
dec
and
inc
lahf
inc
cdq
mov
sbb
sbb
fidivr
add
das
retf
mov
mov
sub
mov
repnz
test
inc
push
lods
fisubr
dec
mov
sub
fadd
movs
rcl
xchg
jbe
or
pop
jb
inc
sub
dec
sbb
and
push
or
add
mov
mov
sbb
mov
or
or
push
outs
shl
adc
fidivr
rcr
clc
ds
dec
sti
pop
jmp
or
pop
lea
lods
xor
push
xchg
inc
cmp
pop
(bad)
jmp
(bad)
sbb
repz
sub
or
xchg
das
mov
mov
jo
and
repz
or
scas
pop
add
mov
ror
mov
jb
inc
xlat
repnz
push
jno
push
pushf
add
fiadd
jb
enter
dec
jne
retf
dec
sahf
sbb
sbb
ds
xchg
inc
les
sbb
xchg
jmp
and
inc
xacquire
push
test
push
push
fisttp
jns
retf
addr16
lahf
scas
je
pop
dec
dec
push
loope
jle
cli
push
ret
ins
loopne
idiv
loop
inc
jo
hlt
inc
add
sub
pop
and
mov
imul
push
dec
add
jmp
inc
sbb
sbb
sub
movs
inc
dec
sub
and
mov
xchg
retf
ja
pop
xor
and
hlt
sbb
repz
or
das
iret
add
aad
mov
scas
cmp
(bad)
jmp
int3
sub
mov
push
dec
call
ins
shl
in
jge
pop
iret
nop
push
es
mov
ins
das
cli
push
dec
mov
push
jp
inc
loop
mov
inc
sub
ins
push
xor
mov
push
pop
shr
dec
fst
out
or
fidiv
hlt
inc
add
(bad)
imul
lds
js
popaw
in
mov
pop
aas
movs
and
push
jecxz
inc
mov
inc
add
push
mov
and
es
leave
or
ins
rol
adc
iret
adc
inc
and
mov
jge
fisttp
shr
adc
dec
xor
sbb
jl
test
xchg
push
(bad)
mov
xchg
ins
add
add
les
test
arpl
movs
es
cli
(bad)
fcomi
faddp
fild
mov
mov
mov
sbb
fwait
mov
inc
mov
mov
jp
das
test
out
and
sub
shr
inc
inc
pop
shl
sbb
push
inc
pop
pop
inc
fldenv
fnsetpm(287
ins
mov
les
les
push
popa
enter
std
hlt
nop
push
les
xlat
scas
and
mov
arpl
into
stos
mov
fadd
push
pusha
cmp
ins
pusha
and
pop
jno
adc
adc
(bad)
adc
sub
clc
dec
mov
mov
dec
ret
out
mov
push
cmps
ffreep
fcomp
inc
dec
mov
daa
pusha
cld
and
push
ja
or
add
scas
or
lds
push
cmp
sbb
ss
pop
outs
adc
fadd
push
add
add
daa
pop
dec
xor
adc
gs
sub
rol
dec
arpl
pop
sbb
repnz
and
mov
ret
push
adc
push
push
jp
inc
xchg
out
jo
add
push
mov
or
iret
adc
mov
mov
sub
sahf
cmp
pop
inc
add
mov
xchg
imul
push
sbb
shl
fidiv
(bad)
xor
mov
push
daa
(bad)
inc
inc
mov
or
fstp
inc
cwde
ret
mov
push
adc
add
mov
test
repz
aaa
cwde
xchg
pop
int
push
or
shr
ret
ja
xchg
push
or
and
and
(bad)
lahf
mov
pop
push
cmp
adc
cli
jno
sbb
loop
sbb
jp
cmps
adc
and
mov
pop
lods
cmp
sub
loopne
and
dec
sbb
mov
ret
mov
xchg
loope
(bad)
or
ret
or
(bad)
add
aaa
adc
test
bound
rol
test
jmp
stos
(bad)
fild
fdivp
or
cmps
shl
shl
mov
into
mov
sbb
cmp
sub
inc
aas
cli
xchg
fistp
cmp
push
call
cmp
inc
fdivr
loope
push
fneni(8087
cmp
adc
pop
mov
inc
push
push
sub
add
mov
fwait
sar
std
mov
jl
int3
dec
int3
jbe
jmp
into
and
or
into
sub
test
jmp
jnp
imul
jb
call
mov
ds
push
cmp
or
pop
pop
(bad)
dec
inc
add
or
in
ret
jnp
nop
movs
lock
aam
xchg
call
call
adc
pop
dec
cmovae
cld
jg
int3
inc
push
jmp
or
add
cs
add
retf
fiadd
adc
dec
repz
scas
aaa
xor
fisttp
clc
aaa
jbe
lea
push
fisubr
pop
push
cli
sub
inc
mov
sub
into
daa
pop
repnz
test
sar
out
ins
mov
fs
pop
adc
pop
and
sub
mov
idiv
imul
and
std
or
push
gs
cmp
or
(bad)
aas
push
xchg
push
pop
or
xor
dec
cmps
fcom
sub
xor
or
push
pop
dec
xchg
sbb
mov
sub
clc
movs
cmp
cmp
xchg
popa
int3
or
cmps
mov
dec
ficomp
mov
dec
sub
imul
jno
xor
ss
pop
es
and
loop
push
les
repz
dec
add
je
inc
data16
fwait
mov
pop
xor
sbb
dec
adc
xor
mov
push
lock
mov
pusha
xor
fcomip
retf
jge
jo
fwait
push
into
fild
cdq
test
adc
cmp
add
in
dec
fld
cmp
cmp
shl
idiv
inc
fs
adc
or
and
inc
cmps
jb
cs
pop
xchg
add
pop
lock
and
das
xchg
xor
rcl
mov
ins
into
dec
cld
test
jns
jmp
popf
xchg
pushf
inc
pop
mov
cmp
in
cdq
scas
xchg
sub
jp
xor
mov
cli
mov
mov
sbb
inc
jns
inc
lds
push
movs
out
loope
cli
ror
mul
mov
(bad)
xor
mov
mov
dec
pop
inc
jle
sub
sar
ret
push
retf
fwait
jecxz
or
loopne
jg
mov
lock
jmp
mov
mov
test
ror
mov
jl
mov
push
ss
repnz
mov
inc
ret
cmc
push
xchg
pop
into
aas
ss
xchg
jae
stos
fnsave
(bad)
das
ss
sub
inc
adc
mov
dec
or
sub
or
pop
sar
(bad)
fistp
mov
dec
add
and
lea
sub
add
movntps
cwde
clc
(bad)
sbb
pop
jmp
jo
(bad)
push
pusha
(bad)
jno
scas
push
into
jae
fbld
(bad)
outs
(bad)
and
dec
loop
xchg
push
mov
push
cld
pop
push
loopne
inc
dec
int3
scas
pop
mov
jl
retf
imul
or
xor
(bad)
xor
mov
jle
and
sbb
mov
inc
aaa
ror
push
mov
adc
loop
pusha
sub
ret
cmps
xchg
xor
jb
retf
ficomp
loop
mov
(bad)
and
jmp
or
inc
cld
cmp
pop
ret
dec
idiv
cmp
into
add
sub
cs
rcl
std
shl
lods
or
fist
and
pop
mov
cmp
call
in
push
inc
jp
ss
xor
jno
mov
loopne
icebp
outs
cli
pop
mov
and
jne
icebp
ins
lds
ret
push
repz
mov
es
xchg
into
dec
pop
sbb
mov
mov
ds
std
inc
mov
inc
cmc
push
jp
not
sbb
aaa
add
jmp
int
push
mov
ret
popf
xor
mov
push
bound
mov
cli
test
cmps
add
adc
dec
cmp
pop
jo
je
mov
(bad)
test
inc
es
push
imul
push
adc
shr
mov
inc
adc
hlt
xor
jp
push
outs
mov
inc
call
jle
push
add
jmp
int3
popf
inc
jecxz
cmp
mov
ds
mov
nop
scas
push
jno
mov
push
sub
mov
es
jb
rol
dec
es
test
mov
imul
stos
xchg
push
mov
cmps
cmps
jle
add
aaa
outs
out
inc
test
inc
sahf
cli
inc
mov
mov
in
add
in
test
jl
adc
sar
add
(bad)
aad
out
call
mov
xor
xor
nop
or
loopne
les
(bad)
mov
mov
jecxz
fdivr
arpl
mov
sbb
inc
and
out
xor
outs
jp
fdiv
mov
icebp
inc
ss
cmp
sub
aaa
xchg
inc
adc
mov
inc
mov
jbe
fist
ds
mov
addr16
mov
ja
into
dec
adc
das
xchg
xchg
mov
sub
inc
mov
(bad)
fwait
jmp
sub
daa
lds
es
fwait
jmp
inc
jo
jbe
jb
adc
inc
xor
sub
test
jae
mov
inc
add
test
jmp
pop
pop
stos
test
pop
mov
fnstenv
loope
int3
push
push
sbb
xor
inc
test
mov
outs
frstor
lock
int3
ja
xor
add
das
dec
fisttp
push
pop
ret
or
loope
comiss
pop
ret
ret
sub
xchg
jecxz
(bad)
call
imul
or
xor
rol
loope
jbe
pop
bound
mov
mov
neg
pushf
dec
jmp
jp
or
and
or
out
push
xlat
shl
ret
js
inc
mov
pusha
sbb
fbld
add
jle
call
div
cli
sbb
lods
mov
ins
imul
or
cmp
mov
jb
loop
jge
pusha
mov
iret
les
aaa
add
sub
xchg
and
scas
rol
pop
jo
outs
out
xchg
jne
jb
pop
ins
push
jle
shl
enter
pop
add
test
mov
mov
stc
nop
jo
int
out
psrlw
fwait
dec
add
icebp
xchg
adc
or
cmp
sbb
xchg
imul
ds
jbe
mov
adc
daa
es
mov
sub
cmp
adc
sub
in
outs
and
mov
mov
daa
push
xchg
enter
adc
mov
outs
jmp
mov
into
sub
push
clc
stos
imul
bound
movs
inc
adc
pop
je
add
mov
ret
aam
adc
add
pop
xor
push
xchg
xor
mov
ret
inc
fcomp
cld
xchg
fiadd
sub
pop
push
mov
fcmovb
xchg
dec
add
and
xor
or
cmp
shr
repz
test
clc
(bad)
push
cmp
push
pop
and
bound
inc
mov
inc
ficomp
call
fidivr
xchg
mov
dec
bt
push
pop
fldcw
xchg
jle
or
int3
adc
or
push
jnp
mov
ret
push
imul
mov
mov
fild
out
jp
lods
jmp
dec
pop
adc
push
xchg
dec
(bad)
and
cwde
and
(bad)
pop
or
jmp
cli
mov
xor
ret
inc
lds
and
aad
into
les
cs
retf
retf
cmp
pop
inc
aaa
iret
sub
mov
stc
pop
lods
inc
jnp
adc
add
cmp
sbb
in
shl
xchg
add
push
(bad)
pop
inc
adc
push
pop
ds
jbe
or
sbb
fiadd
mov
mov
mov
mov
and
loopne
dec
pop
dec
popf
das
ficom
cmp
push
and
xor
lahf
add
push
cmp
push
xchg
js
lahf
ins
cmps
and
and
push
sbb
add
loopne
mov
push
mov
or
pop
fisub
ss
adc
dec
mov
dec
and
data16
mov
add
mov
mov
xchg
outs
cvtps2pd
loope
sti
xchg
pop
xor
bnd
push
add
dec
pop
adc
xor
cmps
test
out
jmp
xchg
in
nop
and
xchg
adc
jno
mov
push
pop
enter
fcmovb
(bad)
outs
call
push
ss
pop
mov
dec
xchg
(bad)
rol
sbb
and
scas
jnp
addr16
sub
mov
xchg
mov
cmc
mov
push
dec
cmp
ror
loop
ss
mov
sbb
stos
arpl
push
add
rcr
sub
aad
cmp
les
scas
mov
xor
nop
push
cmp
pop
mov
pop
sahf
dec
mov
push
ss
inc
lahf
mov
mov
movs
jae
adc
xchg
gs
dec
jno
mov
fcomp
push
jns
xlat
adc
sub
adc
mov
xor
jbe
cld
adc
pop
les
daa
rcr
inc
movs
xchg
fisub
mov
pop
sbb
mov
(bad)
test
cmps
mov
inc
movs
aas
pusha
inc
ds
jecxz
pusha
pop
push
push
outs
sti
test
add
jae
sub
adc
mov
push
(bad)
add
jmp
(bad)
and
jmp
fldcw
mov
les
add
adc
loopne
call
outs
sbb
ror
mov
ret
jl
sbb
test
dec
pop
jmp
jnp
add
add
ret
in
loop
jb
jl
mov
jb
movs
adc
dec
repnz
movs
mov
push
in
repz
push
rol
popa
xor
mov
add
cwde
(bad)
mov
xor
leave
pop
cmp
imul
lahf
jo
js
fistp
or
fwait
mov
push
jo
xor
inc
adc
pop
xor
scas
cs
(bad)
lock
rcr
or
shl
in
jle
or
jno
repnz
cli
sub
pop
jno
xchg
pusha
scas
xor
mov
and
xchg
adc
repnz
and
sub
fidivr
(bad)
outs
add
into
lods
xchg
xor
fld
mov
adc
es
inc
pop
cmp
fadd
int3
mov
add
test
aas
jecxz
add
add
mov
js
ud2
lods
das
add
xor
movs
sbb
ss
sub
dec
sar
push
sbb
xchg
fsub
push
pop
adc
mov
js
add
out
scas
add
(bad)
out
and
sbb
pop
arpl
pop
inc
mov
push
jmp
movs
out
push
sub
jmp
mov
xchg
mov
pusha
mov
sub
pop
data16
fwait
or
inc
sti
repnz
aam
mov
mov
dec
jecxz
int
jmp
sbb
jnp
xchg
imul
out
mov
(bad)
xchg
cmps
sub
mov
ja
imul
ret
jmp
pop
fcmovnb
mov
addr16
inc
cmps
ins
pop
(bad)
jnp
sbb
(bad)
cmp
pop
or
ds
imul
cmps
arpl
xchg
jnp
add
mov
mov
jmp
pop
imul
mov
nop
push
add
pushf
inc
mov
ror
mov
jno
inc
pop
and
or
pop
pop
dec
repnz
scas
arpl
add
adc
into
and
test
sub
inc
jb
shl
in
xor
sub
mov
nop
daa
pop
push
lahf
inc
clc
jae
(bad)
jl
adc
lock
clc
push
push
lock
les
into
jns
int3
aad
xchg
jle
stc
aam
clc
xor
lock
(bad)
sub
xchg
mov
add
cwde
stos
cld
adc
(bad)
dec
jecxz
shl
pop
push
mov
shl
pop
inc
xor
ret
ja
pop
add
ror
inc
pop
dec
jbe
sbb
push
mov
test
push
mov
mov
scas
add
xchg
lods
jno
test
frndint
add
(bad)
and
cmp
inc
and
mov
das
loop
lock
lock
das
shl
outs
lahf
retf
adc
retf
repz
ror
jae
xchg
hlt
pop
(bad)
test
(bad)
cmp
inc
mov
xor
sbb
or
lahf
js
or
mov
adc
retf
mov
push
stos
mov
lahf
and
nop
dec
test
cli
cmps
add
popa
push
and
push
xchg
add
data16
and
out
fxch
adc
mov
jne
jne
jns
cli
(bad)
in
out
std
mov
pusha
int
xchg
inc
dec
sbb
jmp
scas
sub
idiv
shl
scas
sahf
or
int3
stc
or
ret
adc
pop
adc
mov
add
nop
dec
push
dec
loop
mov
cmp
pop
clc
and
cmp
jg
adc
mov
sbb
mov
sbb
jl
push
mul
packuswb
cs
(bad)
(bad)
bound
or
jno
aaa
or
out
mov
(bad)
(bad)
fnstsw
mov
lea
pop
xchg
add
or
retf
xchg
cmp
lds
into
enter
xchg
mov
and
cmp
outs
rol
aas
test
ret
sub
jl
push
or
push
push
sahf
xchg
(bad)
sbb
dec
xchg
add
enter
js
push
jecxz
icebp
sub
jge
sub
retf
push
adc
mov
xchg
fdiv
stos
jmp
arpl
lds
loopne
bound
(bad)
rcl
pop
cmps
daa
addr16
aas
ja
or
or
pop
xor
jne
std
xor
fisubr
push
or
dec
loop
repz
pop
jl
out
xchg
xchg
out
cmp
xchg
sub
test
(bad)
xchg
retf
(bad)
cmp
ror
mov
xor
pop
adc
cs
push
sub
cmp
inc
mov
add
sub
push
inc
jbe
xor
or
or
(bad)
sahf
adc
out
icebp
push
push
push
sbb
mov
ss
pop
inc
dec
jb
retf
add
loop
or
lea
add
add
(bad)
push
pop
xor
gs
pop
cmps
and
push
xor
add
into
sahf
imul
push
outs
ffreep
bound
test
(bad)
icebp
pop
adc
push
sahf
push
into
pop
lahf
les
(bad)
pop
xor
dec
pop
int3
in
mov
clc
data16
imul
jae
mov
mov
clc
pop
fstp
aam
add
arpl
into
push
adc
inc
imul
mov
lock
ja
mov
stc
dec
push
sub
outs
add
es
in
add
pop
ret
mov
jo
xor
out
jecxz
sbb
outs
push
push
cmp
es
jecxz
mov
enter
stos
scas
push
dec
pop
cs
inc
and
or
jmp
out
push
xor
or
push
add
stc
cwde
mov
pop
stos
push
iret
xchg
mov
cs
jmp
cs
push
adc
xchg
xor
inc
or
das
push
mov
push
retf
cmps
mov
repz
out
push
jbe
push
fldcw
xchg
jb
jmp
pop
push
push
repnz
das
movs
pop
cmps
mov
push
pop
sub
push
rol
or
sub
cmp
xlat
pop
add
movs
ret
xor
test
in
sbb
add
mov
popf
add
das
pop
dec
push
shl
imul
arpl
xchg
push
push
and
pop
ret
out
int
push
icebp
iret
ffreep
test
(bad)
std
xchg
add
mov
ds
xor
in
data16
inc
dec
dec
xor
ret
or
call
adc
and
bound
sub
pop
jl
cmps
add
push
mov
test
pop
xor
mov
addr16
fcmovb
push
cmp
sbb
mov
into
(bad)
fstp
push
mov
leave
int
and
pop
push
out
sub
mov
jp
push
mov
in
icebp
or
push
mov
test
dec
dec
rol
scas
test
dec
hlt
mov
in
pop
clc
es
mov
push
mov
add
movs
adc
cmps
adc
daa
jl
test
fisub
mov
dec
add
fisubr
jl
jmp
sbb
cmp
out
nop
je
shl
adc
outs
out
lock
mov
inc
data16
and
js
fild
adc
push
adc
stos
push
add
add
js
ret
pop
jns
(bad)
ss
fsubr
sbb
mov
pop
dec
mov
ret
cli
xlat
or
retf
aas
repnz
imul
lock
bound
fist
rcr
cmps
out
jg
mov
ins
mov
or
inc
push
xchg
or
jmp
mov
outs
clc
imul
adc
mov
and
push
dec
test
xor
sub
push
pusha
mov
mov
std
mov
std
pop
or
in
ins
pop
rdpmc
(bad)
dec
bound
aas
mov
jno
cmc
adc
adc
cs
xchg
loop
pop
mov
test
inc
addr16
std
or
inc
out
jg
mov
pop
cmp
pop
dec
sti
pop
jp
pusha
jl
fnsave
out
mov
jle
out
ja
dec
mov
shl
dec
outs
push
jp
xor
cmp
cmp
sbb
icebp
xlat
iret
adc
sar
fcom
fwait
aas
mov
inc
(bad)
xor
iret
xchg
mov
add
pop
sbb
sbb
imul
(bad)
cmp
ds
out
push
mov
sub
adc
and
add
push
arpl
fwait
cld
push
inc
js
cmp
es
add
adc
mov
cmp
jns
pop
and
(bad)
and
outs
movs
sbb
sahf
nop
add
add
daa
xchg
push
inc
or
iret
mov
test
dec
daa
jecxz
movs
imul
das
and
mov
jle
push
jae
imul
les
dec
xor
mov
scas
dec
dec
mov
add
push
sbb
adc
cmp
mov
dec
push
jmp
jo
push
repnz
retf
sub
aad
xor
movs
inc
test
inc
aaa
or
push
arpl
pop
add
mov
aaa
cmp
outs
mov
jbe
xchg
mov
add
cmp
lock
xor
cmp
cmp
mov
shl
mov
push
fdivr
rcr
add
ficomp
fiadd
push
test
sub
enter
dec
clc
clc
arpl
jle
cs
mov
loope
cld
shl
fisub
iret
cmp
cmp
cmp
mov
aas
jnp
push
loope
or
(bad)
clc
cmps
inc
mov
and
pop
cmp
loope
push
cmp
outs
sub
in
fmul
cmp
jl
aam
cmc
or
and
retf
add
add
push
sub
xchg
add
shl
pop
jmp
shr
sub
sub
push
retf
pop
popa
add
pop
les
push
out
or
retf
stos
dec
or
cmp
dec
inc
repz
cmp
dec
and
or
xor
dec
mov
enter
inc
inc
push
cs
test
jb
pop
sahf
mov
(bad)
aas
les
push
js
jnp
xchg
ds
jbe
mov
fistp
mov
sub
sbb
fnstenv
inc
dec
(bad)
mov
sbb
jmp
test
fwait
in
mov
repz
jp
jno
mov
mov
je
sbb
(bad)
shl
dec
push
fwait
dec
cmp
shr
ins
popa
test
and
cmps
push
inc
adc
sar
les
inc
mov
rol
cmp
cs
popa
jns
daa
rcr
cmp
bound
dec
fwait
mov
ret
xchg
aaa
(bad)
leave
das
je
es
or
mov
ficom
sahf
xlat
adc
add
xchg
cli
bound
mov
test
adc
push
mov
add
mov
pop
mov
pop
mov
xchg
mov
daa
jge
or
ffree
push
iret
mov
stos
ja
cmps
mov
sahf
fistp
mov
xor
or
mov
adc
xchg
push
jmp
outs
xchg
cs
test
(bad)
pop
movs
punpckhbw
mov
mov
pop
jmp
pop
mov
call
jne
jns
loop
outs
(bad)
out
jecxz
mov
and
mov
in
fstp
mov
push
dec
pop
adc
fs
sbb
push
or
push
add
push
out
(bad)
je
mov
lahf
stc
mov
loope
cmp
stc
repz
hlt
(bad)
sub
jmp
xor
push
in
cmp
pop
int3
or
cli
stos
push
jl
inc
cmp
dec
es
mov
adc
push
pop
ficomp
addr16
add
sbb
(bad)
or
pop
movs
and
push
pop
fld
in
jno
cmc
pop
rcl
pop
and
jp
add
in
aam
or
iret
pop
xor
rcr
push
cmp
int3
sbb
pop
sbb
xor
or
dec
aaa
rcl
daa
das
pop
push
mov
cmp
adc
mov
adc
inc
scas
sahf
scas
mov
scas
pop
cli
push
je
mov
add
push
pop
lods
mov
push
mov
scas
es
and
mov
(bad)
std
in
call
cmp
pop
inc
repz
and
jmp
jmp
dec
in
xchg
push
dec
data16
pop
jmp
pop
pop
push
repz
scas
fadd
xor
in
fisttp
xor
call
mov
ss
mov
jg
dec
std
loope
push
sub
dec
in
mov
mov
movs
stc
push
push
adc
push
stc
cmp
test
lods
sub
pop
call
aas
dec
iret
cmp
stc
push
push
jp
jge
lods
fs
stc
cmp
div
ret
inc
xchg
xchg
retf
cmc
add
movs
mov
inc
and
ds
xchg
inc
jecxz
(bad)
sbb
retf
retf
xchg
inc
out
ds
jns
inc
in
pop
pop
scas
fs
aaa
inc
dec
sub
cmp
add
mov
inc
(bad)
sub
mov
adc
dec
or
leave
push
mov
inc
out
pop
das
pop
(bad)
lock
xchg
mov
cdq
outs
add
push
daa
std
pop
push
mov
or
lea
jge
sbb
nop
cmps
xchg
test
movs
das
lea
and
mov
fisttp
inc
retf
dec
fimul
iret
cmp
cmp
and
scas
in
outs
mov
ficomp
pusha
es
add
fisttp
outs
stos
arpl
pmaxub
or
push
call
dec
jle
loop
cmps
add
mov
dec
pop
aaa
gs
pop
fimul
add
xchg
sete
stos
imul
outs
cmp
push
xchg
idiv
pop
mov
retf
sbb
add
fild
movs
mov
lods
in
sbb
pop
dec
adc
cmps
push
ret
sbb
stos
and
(bad)
xchg
imul
xchg
iret
dec
pop
div
jbe
lods
ins
ds
jns
add
jp
add
cmp
pop
aas
dec
dec
and
push
or
icebp
test
mov
xlat
mov
or
mov
jg
xor
dec
jl
mov
retf
mov
out
(bad)
xchg
scas
adc
adc
wrmsr
pop
add
cld
ja
loope
or
push
jle
xor
das
popa
and
sbb
mov
gs
ret
hlt
mov
ss
rcr
enter
xchg
mov
inc
jecxz
mov
push
dec
sar
fdivr
movs
cmp
test
pop
mov
pop
loopne
lock
inc
adc
cmc
pop
adc
test
dec
mov
add
xor
adc
jns
sub
pop
adc
xchg
bound
dec
sub
mov
mov
loop
scas
aam
dec
mov
pop
mov
push
lock
push
or
dec
jmp
and
test
jne
pop
ss
clc
out
push
ret
cmp
mov
cmps
push
jmp
xor
dec
outs
sub
jmp
cmp
dec
cmp
sub
xor
push
rcr
xchg
adc
sbb
jl
xor
outs
fbstp
bound
mov
inc
fild
inc
(bad)
inc
jo
sbb
add
mov
add
adc
or
xor
inc
test
test
or
shl
inc
retf
hlt
mov
fild
mov
(bad)
aas
adc
aas
fbstp
sbb
sbb
xchg
icebp
int3
push
mov
aam
xchg
inc
repz
mov
xor
add
fistp
mov
mov
movs
mov
jg
xchg
je
sub
(bad)
jecxz
(bad)
or
adc
test
mov
int3
lock
add
jno
xchg
sub
push
push
jmp
mov
out
push
call
add
jnp
adc
adc
and
dec
cld
pop
jbe
inc
jo
jbe
int3
or
mov
push
inc
shr
mul
or
fdivr
pop
add
sbb
mov
mov
ds
lock
sti
(bad)
into
sbb
cmp
adc
shr
push
jp
sub
mov
and
mov
rol
fnsave
inc
fistp
cs
mov
fs
jbe
mov
bound
xor
rol
add
pop
xchg
sbb
pop
push
and
sbb
movs
jb
inc
scas
push
jns
add
or
loop
stos
adc
mov
and
scas
je
es
pop
cld
fistp
pop
jecxz
sub
shr
imul
int3
pop
pop
bound
xor
push
loope
sbb
push
enter
and
add
cmp
jb
js
mov
jle
inc
int
and
jnp
adc
test
or
fisttp
add
out
adc
clc
jg
lock
adc
sbb
je
fnsave
pusha
(bad)
aaa
rcr
mov
push
lahf
inc
jecxz
nop
inc
outs
inc
pop
rcl
fcmovb
xlat
rcr
adc
adc
sbb
dec
jbe
sub
jo
cmp
cmp
rol
mov
mov
lea
call
xchg
jo
push
xchg
add
mov
das
mov
outs
rdtsc
cmp
les
add
in
popa
mov
push
xor
pop
mov
push
ins
or
and
add
leave
neg
jmp
int
fmul
cs
add
add
xlat
fs
dec
adc
retf
dec
sbb
shr
jecxz
push
leave
fcom
push
shl
mov
sbb
cmc
adc
sbb
outs
mov
pop
mov
outs
iret
mov
ror
mov
push
(bad)
push
aaa
xchg
movs
pop
mov
mov
movs
mov
cmp
pop
(bad)
(bad)
arpl
js
fisttp
je
es
loopne
ret
sbb
std
push
jl
cmp
jno
sub
cmp
push
push
add
inc
call
cmp
fisttp
retf
(bad)
dec
(bad)
xlat
jg
xchg
hlt
ja
out
ficom
fsub
xor
(bad)
movs
or
mov
jb
mov
push
or
sbb
daa
cmp
js
retf
adc
jae
add
fld
test
scas
pop
pushf
ficomp
xchg
push
sbb
add
jo
inc
arpl
call
xchg
popa
mov
ret
xchg
dec
test
mov
sub
push
inc
push
inc
scas
pop
xchg
aam
leave
xchg
push
dec
add
mov
and
adc
in
sub
cmps
and
stos
sbb
push
inc
xor
or
sub
pop
jp
inc
and
das
mov
fist
ret
leave
rcr
xor
(bad)
sbb
mov
inc
loope
jmp
movs
enter
iret
adc
fbld
outs
stc
cld
repz
enter
adc
ret
out
adc
pop
inc
or
sub
leave
fdiv
imul
inc
bound
stos
daa
sbb
push
sub
iret
and
push
pop
cli
sub
retf
out
adc
fcmovne
shr
scas
fnsave
pop
sbb
call
bound
mov
jmp
mov
jle
pushf
shl
or
add
pop
test
jp
push
(bad)
and
lahf
call
pop
sbb
rcl
dec
arpl
jae
jge
push
in
scas
fistp
lods
dec
ja
loopne
daa
sbb
not
mov
adc
inc
inc
jmp
retf
test
(bad)
repz
and
pop
jb
lods
cmps
xchg
nop
mov
(bad)
add
sbb
add
ja
sbb
or
mov
call
sbb
rol
(bad)
or
scas
cmc
js
add
xchg
push
xchg
sub
push
mov
adc
(bad)
or
test
movs
test
cs
call
loope
aam
repz
sbb
lahf
retf
jmp
or
(bad)
nop
pop
in
mov
iret
call
cmp
cmp
lock
scas
inc
fwait
cmovb
jp
in
cld
stos
ins
fidivr
mov
add
mov
pop
shl
stc
fldcw
daa
hlt
mov
cmp
add
lock
in
fistp
(bad)
xor
inc
fucomi
sub
test
mov
add
sub
pop
rcr
nop
adc
mul
cmps
iret
inc
push
xchg
cmps
fbstp
mov
mov
(bad)
(bad)
(bad)
aas
mov
sbb
xor
or
pop
sahf
ins
pop
rcl
cli
inc
adc
mov
mov
mov
cmp
jns
cmc
imul
movs
fwait
mov
outs
arpl
retf
and
sbb
inc
xchg
movs
dec
js
dec
arpl
sub
xor
pop
and
cmovp
lds
adc
push
pop
into
inc
cmp
stos
(bad)
into
nop
test
sbb
dec
ja
mov
or
into
and
lds
scas
ret
adc
inc
xor
pop
jle
test
sub
stos
outs
jmp
push
lods
(bad)
sar
mov
mov
adc
add
sub
cwde
and
hlt
outs
(bad)
xor
xor
sub
mov
stos
pop
dec
pop
dec
scas
pop
das
popf
(bad)
sbb
daa
or
sbb
xor
pop
and
jmp
jmp
test
cmps
enter
ins
jg
popa
cld
sti
dec
jo
cmp
sub
bound
fcom
(bad)
dec
xchg
pop
or
fs
fadd
or
int3
dec
pop
and
dec
and
test
mov
inc
add
xchg
outs
retf
mov
cmp
data16
adc
shl
mov
push
dec
add
(bad)
outs
sbb
inc
outs
es
sbb
xor
push
scas
push
xor
add
ror
shl
or
int3
cli
loop
jmp
jmp
movs
xchg
ja
and
icebp
pop
cmp
add
adc
jecxz
fsub
hlt
ja
inc
pusha
dec
mov
push
add
push
add
jne
inc
(bad)
mov
cmp
daa
imul
inc
dec
out
cmp
push
retf
icebp
inc
cmp
jg
lods
imul
pop
or
das
mov
sahf
enter
sbb
xor
call
ror
mov
add
pop
mov
inc
fcos
mov
test
or
sbb
clc
call
inc
je
mov
dec
adc
adc
mov
cmc
or
pop
jbe
int3
pop
or
push
add
pushf
ficom
sub
push
dec
scas
ja
and
or
add
aaa
fwait
outs
stc
test
(bad)
fild
push
sub
es
and
syscall
cld
bound
push
adc
je
(bad)
ins
jle
and
jg
mov
xor
sahf
jl
and
add
inc
mov
shl
into
mov
sub
add
jge
jb
mov
ds
dec
(bad)
jmp
scas
pop
jnp
xchg
jg
jne
lods
ss
adc
or
out
mov
and
and
sbb
int
cmp
pop
arpl
pop
mov
jns
dec
into
ins
inc
adc
(bad)
mov
mov
sbb
dec
fcomp
jno
loop
dec
push
or
mov
mov
mov
xor
movs
mov
jnp
das
jno
mov
aaa
inc
das
mov
pop
jp
mov
out
dec
pop
pop
gs
loope
sti
movs
pop
scas
inc
stos
pop
push
shr
dec
cli
pop
sub
mov
inc
(bad)
aad
cmps
(bad)
popa
mov
xor
jl
adc
dec
daa
mov
xor
(bad)
(bad)
xchg
test
push
and
cmp
inc
sub
mov
cld
(bad)
enter
ja
pop
int3
inc
sti
inc
adc
cmps
mov
fsub
loopne
jnp
xor
lock
adc
movs
mov
loop
jmp
stos
xor
les
mov
lds
mov
or
cmps
sub
das
xchg
adc
ss
retf
or
cmp
outs
jb
cld
xor
int3
cmp
ficom
stos
hlt
pop
cs
jbe
push
add
add
mov
adc
je
loop
jbe
sub
sbb
push
xchg
mov
dec
cdq
push
jp
out
xor
fisub
pop
cld
sbb
inc
or
repnz
mov
adc
bound
clc
push
xchg
mov
pusha
(bad)
pop
mov
dec
cmps
mov
pop
mov
sbb
out
dec
dec
sub
push
mov
lahf
adc
xchg
popa
or
cwde
add
pop
jecxz
icebp
mov
call
outs
and
adc
pop
adc
out
stos
lds
mov
inc
cwde
mov
fdiv
aad
mov
shl
mov
not
int3
add
adc
mov
xlat
aad
lahf
xor
xchg
pop
push
or
jle
xchg
push
xchg
fisub
sbb
inc
pop
lock
or
call
sbb
or
and
and
cdq
inc
cld
mov
inc
outs
sub
sub
ja
test
leave
push
out
nop
imul
and
jnp
fsub
outs
xchg
xchg
xchg
add
dec
clc
and
cmps
or
ret
or
inc
outs
xor
xchg
aaa
into
mov
mov
jno
jl
cmp
enter
jle
std
ja
(bad)
mov
and
or
scas
cmp
aaa
(bad)
pop
sbb
pop
sub
int3
adc
mov
add
and
inc
jno
sahf
jl
xor
pop
(bad)
mov
add
mov
xor
fld
into
push
jl
leave
mov
mov
fdivr
rcl
jbe
je
cmc
dec
and
jns
test
lods
cmp
and
pop
add
mov
retf
sub
or
pop
gs
aaa
fdivr
scas
movaps
iret
mov
pop
and
jecxz
fsub
xor
dec
jl
jbe
pop
pop
pusha
jo
xchg
push
pushf
mov
inc
mov
inc
inc
inc
xchg
jne
inc
and
addr16
lods
push
xchg
mov
enter
das
xor
adc
lea
aas
jl
mov
jnp
adc
aam
fs
and
cmp
mov
rol
es
arpl
jne
dec
mov
add
sbb
sub
out
xor
(bad)
sub
sbb
scas
fisubr
push
dec
fadd
sahf
(bad)
and
icebp
fisub
push
inc
and
movs
sub
add
ins
clc
dec
std
adc
rol
es
inc
sub
xchg
xchg
mov
pop
test
dec
cmps
and
(bad)
sub
push
std
add
mov
adc
sbb
add
push
ret
das
clc
sbb
retf
ds
js
add
push
add
or
addr16
aad
rcl
movs
mov
adc
xchg
test
icebp
push
ja
mov
mov
add
adc
jns
add
repnz
jg
pop
clc
inc
jae
push
or
mov
cmp
(bad)
sub
push
and
push
test
and
and
or
pop
(bad)
hlt
js
mov
push
scas
fisubr
test
jo
dec
inc
rcl
xor
mov
adc
loop
or
mov
mov
adc
xchg
jge
push
push
into
aas
and
jmp
es
mov
sub
jmp
push
out
cld
shl
cmc
add
sbb
sub
and
adc
ins
bound
dec
mul
out
ja
fimul
sub
jge
(bad)
xlat
push
push
add
mov
or
icebp
mov
jo
arpl
or
pop
xchg
cli
dec
dec
jmp
jne
or
arpl
in
nop
nop
inc
jp
sub
adc
stos
cmps
mov
push
inc
xor
add
cmp
fs
sbb
lods
arpl
jmp
(bad)
cwde
in
inc
xor
push
dec
imul
push
cmps
push
lods
aas
push
lods
add
mov
movs
add
push
jp
or
(bad)
int
push
mov
inc
push
pop
sub
xor
fs
dec
push
sbb
pop
or
dec
fbld
or
xchg
dec
xchg
ror
push
push
cmp
scas
mov
les
jp
fwait
in
cmps
jecxz
loope
inc
dec
jmp
mov
rcr
mov
mov
jns
cmp
cmp
mov
cmp
add
jno
mov
(bad)
loope
js
mov
call
les
push
inc
lea
or
cdq
jbe
test
xor
push
ja
imul
retf
or
push
and
dec
stos
xor
loop
adc
(bad)
pop
pop
mov
enter
stc
mov
ret
sub
xchg
xor
push
and
pop
lock
movzx
scas
jne
sbb
pop
lock
aam
popa
jae
and
jns
jo
dec
cmp
daa
dec
inc
push
and
scas
out
or
cmp
push
(bad)
repz
jbe
arpl
dec
jle
xchg
or
inc
push
mov
xor
sbb
push
sbb
ins
pop
mov
pop
pop
ja
aaa
push
scas
shl
xchg
mov
pop
pusha
cmp
arpl
or
and
push
or
cmp
mov
pop
loop
dec
or
or
ins
sbb
pop
push
dec
ror
adc
aas
(bad)
jmp
sar
xchg
loopne
xor
mov
pop
dec
and
in
cmp
xchg
jl
xor
adc
pusha
mov
outs
ret
xchg
icebp
ja
ror
push
add
leave
cwde
pop
add
adc
dec
inc
inc
cld
repz
xor
rcr
mov
cmp
(bad)
jnp
das
dec
lea
dec
sbb
retf
pop
adc
adc
nop
cmp
mov
repnz
pop
xor
mov
adc
inc
mov
dec
mov
or
in
adc
xlat
sahf
mov
fwait
pop
push
ins
push
sub
xchg
push
mov
test
or
sahf
dec
(bad)
fisttp
pop
fldenv
dec
nop
jp
fistp
xor
ja
dec
jl
inc
adc
and
movs
rcl
pavgw
jl
shr
xor
add
ret
loopne
aaa
lahf
mov
into
jg
xor
lahf
cmp
sub
ja
mov
test
(bad)
dec
add
cmp
rol
test
into
std
ret
sub
lss
dec
fild
mov
mov
mov
xchg
outs
lds
fsubr
add
cmp
shl
pusha
jecxz
(bad)
adc
retf
push
xor
inc
jle
(bad)
lahf
inc
rol
ja
jl
inc
pop
cs
int
add
jb
(bad)
leave
xchg
xchg
retf
out
add
add
mov
and
pop
or
vmwrite
leave
in
mov
push
xor
inc
adc
retf
out
jo
jge
sti
cmp
retf
and
add
jl
and
jmp
add
adc
bnd
mov
lods
and
push
pop
sub
pop
mov
or
mov
mov
mov
das
cwde
mov
inc
scas
push
dec
or
int3
cmps
inc
push
fs
dec
sub
dec
sub
push
ret
push
aas
add
cs
retf
and
mov
fidivr
and
(bad)
push
inc
cmps
fmul
ins
mov
adc
mov
mov
sub
mov
lods
inc
push
jmp
ja
cmp
mov
popa
pop
add
xchg
loop
sti
mov
or
adc
aaa
jp
(bad)
jg
sahf
and
jp
data16
jl
arpl
inc
arpl
dec
add
add
or
add
sar
xor
mov
mov
hlt
and
inc
mov
int
(bad)
lods
ja
addr16
dec
jecxz
sbb
aaa
fdivr
bound
lods
cmps
add
add
imul
test
pop
and
push
xchg
push
pop
scas
add
sbb
ficomp
push
jecxz
dec
nop
ret
xchg
lods
jl
push
sbb
adc
fs
jg
test
cmp
ins
pop
cmp
dec
mov
sub
addr16
add
fcmovbe
mov
mov
mov
rcl
cli
fisub
aaa
jne
pop
or
shl
ret
ret
sbb
or
push
pop
scas
pop
sub
call
std
jecxz
add
(bad)
jle
je
mov
not
call
inc
retf
pop
xchg
(bad)
adc
add
(bad)
popf
dec
call
loope
sahf
cmp
xor
dec
pop
mov
xor
add
mov
or
mov
push
js
nop
(bad)
add
ds
repnz
add
std
xchg
popf
pop
add
sbb
addr16
and
imul
icebp
sub
add
cs
mov
mov
jl
xor
sub
push
mov
scas
sub
pop
scas
call
fidiv
es
mov
add
dec
loop
xchg
(bad)
retf
or
cwde
cmp
push
mov
inc
cmp
shr
retf
inc
outs
push
sub
sbb
and
in
xchg
mov
(bad)
mov
sub
enter
lods
dec
mov
dec
das
pop
scas
lods
mov
fild
or
jb
sahf
mov
jp
adc
cmps
jnp
emms
retf
inc
(bad)
outs
mov
scas
das
jmp
dec
mov
inc
and
inc
pop
pushf
loope
loopne
call
or
sbb
movs
xchg
ss
xor
fdivr
jmp
pop
loopne
and
fistp
xchg
daa
out
cmps
xchg
mov
xchg
in
stos
push
mov
in
shl
pushf
push
ds
test
inc
nop
xchg
retf
fcom
and
(bad)
push
jns
cmps
sbb
adc
mov
sub
sub
call
enter
sub
sahf
lahf
cmp
mov
ins
stos
fmul
xchg
out
cmps
test
repnz
pop
mov
xchg
dec
call
lods
mov
movs
sub
pop
jns
xchg
xor
xchg
xchg
pop
sbb
pop
cmps
or
sbb
add
mov
and
xchg
pop
ja
ja
imul
movs
mov
lods
cmp
fmul
cmp
mov
movs
sub
mov
arpl
cmps
pop
test
into
sub
adc
fdivr
xchg
dec
sahf
cmp
dec
dec
sub
jp
mov
sub
cmp
inc
cld
add
js
sbb
adc
das
adc
push
lods
je
leave
rep
mov
xchg
pop
ret
xor
es
add
bound
ret
pop
push
pop
movs
or
cmps
in
out
inc
ds
mov
retf
in
mov
xchg
jnp
fbstp
addr16
lods
add
repnz
in
mov
aam
ret
fiadd
cmp
mov
and
xchg
add
pop
arpl
push
je
in
cmp
xor
lods
adc
fistp
jle
mov
sub
ins
fsub
add
cmp
mov
pop
cmp
push
xchg
div
aas
inc
dec
sbb
push
xor
mov
fwait
mov
push
mov
sub
jmp
add
cs
sub
dec
int3
adc
mov
adc
sub
data16
lods
jmp
xor
sbb
and
and
jecxz
divps
pop
and
xor
enter
out
(bad)
movs
sbb
push
bound
les
jae
mov
xchg
test
mov
mov
mov
ror
xchg
(bad)
fbld
pop
hlt
aaa
mov
add
inc
pop
movs
lods
inc
jmp
adc
ret
int
mov
add
xor
add
rcl
repz
push
test
push
sbb
add
fcomip
dec
mov
mov
or
mov
cmp
imul
mov
mov
dec
push
dec
push
or
cmp
xor
fisub
adc
cmp
jmp
mov
mov
mov
stos
enter
es
jcxz
xor
inc
dec
mov
fwait
add
xlat
jl
or
aaa
push
test
cli
add
dec
test
cmc
nop
pop
mov
pushf
lds
push
mov
inc
jb
ins
jbe
dec
add
adc
clc
jmp
movs
sbb
add
cmp
adc
scas
push
sar
mov
mov
pop
lods
jecxz
retf
(bad)
push
fmul
cli
xor
inc
dec
pop
int
icebp
dec
scas
sub
add
jb
mov
outs
adc
sub
popw
jmp
clc
push
data16
mov
ja
sub
iret
xchg
and
fmul
not
pop
or
dec
stos
fsubr
dec
(bad)
cmp
or
scas
fst
sbb
fist
mov
sbb
fldcw
call
aaa
push
out
cmp
adc
repnz
mov
or
test
std
adc
sti
movs
mov
(bad)
jbe
lods
popa
and
adc
jp
sub
jg
cmc
ss
dec
cmp
xlat
js
inc
pop
retf
adc
aas
cmps
lahf
bound
ds
dec
or
fwait
xchg
(bad)
and
loop
lea
adc
rol
imul
cmove
scas
dec
int3
jl
mov
dec
adc
rol
jb
inc
mov
add
arpl
test
or
(bad)
adc
xor
sbb
inc
in
fnop
mov
push
dec
fisubr
push
mov
xchg
(bad)
lock
cmp
pop
sbb
pmulhuw
and
mov
dec
sbb
and
retf
sbb
xor
test
pop
aam
fisubr
popf
add
adc
loop
sub
test
jns
push
inc
test
aaa
cs
cmp
mov
mov
mov
sub
or
and
nop
mov
inc
xor
sbb
sahf
xchg
fst
mul
int3
xor
add
xchg
int
in
repnz
and
cs
inc
not
cmp
xor
jl
and
sbb
loop
push
mov
std
(bad)
test
inc
add
daa
data16
or
fidiv
imul
das
aas
out
inc
scas
fstp
std
pop
dec
inc
int
adc
aam
aaa
push
push
mov
cmp
out
iret
sbb
push
pop
inc
cmp
or
inc
sahf
iret
xor
add
xchg
dec
lock
fstp
push
stos
add
sti
popf
add
lea
add
repz
adc
loopne
cmps
inc
cli
jne
mov
adc
jmp
sbb
push
mov
arpl
add
into
push
das
xlat
pusha
jecxz
pop
jle
les
cmp
xor
xchg
mov
repnz
dec
pop
or
xchg
add
lea
fcmovnu
sbb
(bad)
xchg
sahf
jno
and
jo
ret
push
js
sbb
sbb
push
and
adc
jns
jbe
aas
test
jmp
lahf
jl
inc
lds
mov
mov
xchg
das
es
pop
sub
ins
push
xor
lods
daa
test
mov
pop
imul
cmp
repnz
sbb
pop
cmp
mov
sbb
dec
outs
sbb
(bad)
sub
pop
or
sbb
dec
dec
pop
test
inc
inc
inc
mov
mov
push
sub
xchg
fisubr
into
push
das
cmp
ret
cmp
jmp
or
xchg
xchg
dec
nop
mov
sbb
mov
lds
push
sti
mov
xor
inc
loopne
jge
repnz
rcl
fld
mov
iret
dec
mov
xchg
xor
(bad)
cmp
loop
and
push
outs
nop
jmp
ja
sbb
and
xchg
into
fwait
xchg
call
shl
leave
jmp
fst
pop
sub
fimul
sub
mov
adc
scas
mov
jl
sti
inc
imul
mov
arpl
xor
clc
sbb
loop
outs
es
or
jle
cld
ss
push
sahf
lds
push
scas
inc
xor
xchg
jmp
push
cld
ret
clc
sub
push
add
jne
sbb
dec
push
cmc
sub
inc
jl
jmp
(bad)
jge
not
mov
movs
(bad)
cmp
jbe
lds
clc
sbb
or
test
push
in
jmp
sbb
sahf
xchg
rol
pop
es
leave
cmps
mov
fldcw
lods
ds
test
mov
xchg
mov
mov
xchg
and
push
cmp
or
rcl
push
pop
adc
or
or
imul
ins
dec
inc
xchg
pop
or
or
sbb
push
jnp
inc
sub
pop
in
fprem
aas
mov
dec
mov
mov
ds
and
aas
out
xor
(bad)
dec
das
shl
inc
xchg
bound
addr16
pop
rcl
cmp
cld
adc
fist
cld
jb
mov
mov
inc
int
jae
loop
sar
mov
(bad)
push
sub
jg
add
lods
mov
dec
cmps
xchg
push
sbb
jmp
mov
shr
mov
inc
call
adc
ja
sbb
inc
mov
(bad)
push
push
adc
add
push
daa
stos
mov
add
mov
sub
lods
jp
jb
xchg
xchg
loope
or
mov
aad
test
fimul
aas
cli
jle
std
cmps
lods
add
or
fwait
sub
stc
int3
repnz
lods
lods
jge
sbb
pop
inc
inc
cmp
jl
fs
cwde
mov
rol
aas
into
mov
test
(bad)
cmp
sbb
clc
bound
scas
pop
popa
add
pop
mov
inc
fcmovnu
out
adc
enter
aaa
je
cmp
xor
or
pop
ret
xchg
retf
call
mov
pop
add
sub
push
pusha
jge
imul
cli
pop
std
add
add
mov
push
lods
add
sub
stos
rcl
fist
adc
cmps
xchg
dec
xchg
rcl
loop
les
sti
inc
mov
adc
mov
xchg
shl
mov
jmp
enter
inc
mov
pop
cs
enter
dec
jecxz
out
ds
dec
push
test
fcmovu
jle
or
mov
jbe
push
rol
add
fisttp
in
pop
add
xor
pop
mov
cmp
outs
dec
test
mov
int3
retf
xor
sti
sti
sub
popa
lea
jp
iret
lock
fstp
ins
push
sub
jbe
adc
pop
out
jb
pop
nop
fiadd
into
mov
retf
xor
sbb
xor
out
pusha
mov
call
adc
mov
add
mov
pop
les
scas
int
jmp
nop
in
sahf
rcl
into
jg
push
lods
aas
(bad)
xchg
data16
bound
add
jo
or
mov
adc
jb
push
cli
loopne
mov
jne
or
jp
push
or
sub
repz
xchg
or
jnp
clc
cli
movs
mov
jp
add
sub
mov
shl
push
inc
or
xor
jecxz
mov
cmps
mov
outs
adc
or
int
leave
xchg
dec
mov
idiv
enter
cmps
jmp
fisttp
push
js
(bad)
cmp
clc
ins
jle
stc
repnz
dec
arpl
into
push
inc
mov
mov
mov
test
imul
into
test
or
push
mov
std
push
ret
ss
imul
xor
mov
popa
es
test
adc
push
or
push
add
sbb
sub
sub
sub
mov
push
jmp
add
jmp
dec
mov
fnstcw
jg
jmp
xchg
stos
adc
loop
xor
sahf
push
ins
push
cmps
add
jae
retf
scas
xchg
jl
or
cld
jne
nop
pop
inc
pop
adc
scas
(bad)
hlt
cwde
lods
out
test
dec
es
jne
dec
hlt
loope
xor
push
mov
jle
data16
push
out
sahf
sub
pop
push
cli
mov
and
and
lods
cmp
ins
cld
rcr
inc
mov
ja
pop
sub
dec
loope
clc
add
sbb
push
pop
add
stos
xor
sub
dec
ins
loopne
pop
or
pushfw
or
or
fstp
ror
mov
or
push
loope
les
dec
popf
adc
scas
ja
jnp
adc
pop
(bad)
int3
jl
lds
jg
rol
fistp
inc
jp
mov
out
jp
cmc
mov
mov
popa
or
sbb
add
or
(bad)
arpl
mov
loope
scas
aas
neg
or
xchg
mov
and
dec
push
fsqrt
sub
jb
pop
adc
jp
cdq
hlt
pop
loope
movs
cmp
repz
lahf
cmp
loopne
stc
ins
call
sub
pushf
(bad)
pop
adc
adc
popa
ror
imul
outs
cmp
and
leave
mov
dec
cs
mov
loopne
addr16
xchg
imul
shl
(bad)
push
out
call
mov
dec
sbb
adc
ret
inc
lock
cdq
mov
fnstcw
jno
push
push
jmp
scas
aaa
ficom
pop
pop
ja
push
dec
dec
icebp
int3
pop
mov
les
mov
out
add
adc
xchg
scas
or
movs
scas
les
xchg
(bad)
cmc
dec
fwait
add
dec
fdiv
and
(bad)
jmp
mov
mov
jbe
adc
pop
sar
adc
jg
sub
fdivr
les
and
sub
shl
mov
gs
jnp
adc
leave
scas
imul
push
inc
dec
cmp
push
adc
xchg
mov
adc
fist
or
and
mov
jp
shr
inc
cmp
(bad)
into
(bad)
movs
jp
sbb
mov
(bad)
and
push
or
xor
sar
outs
outs
cdq
scas
or
sbb
add
mov
dec
add
dec
clc
adc
push
ret
rol
mov
xor
push
inc
sbb
dec
xor
push
add
js
cwde
aas
jae
push
inc
xchg
mov
xchg
sbb
sar
outs
popf
cs
out
inc
out
imul
add
mov
loop
dec
xor
les
add
sub
pop
aas
sar
sbb
mov
adc
adc
out
gs
xchg
fisubr
cmp
enter
cli
adc
jecxz
xor
jb
sbb
xor
std
sbb
inc
ret
push
loopne
or
das
cmp
xchg
inc
push
imul
outs
inc
push
out
mov
cmp
jmp
clc
js
pop
cli
scas
jg
rcr
mov
sub
push
pop
add
push
adc
ret
mov
push
or
mov
cmp
pop
push
bound
outs
ret
das
or
inc
cli
push
out
and
lods
out
jno
xor
dec
fld
aas
test
adc
stos
add
mov
aaa
loopne
gs
sbb
mov
pushf
sbb
jno
push
je
test
mov
sub
xchg
arpl
add
data16
push
push
test
sbb
cli
shl
inc
jecxz
jp
fcom
push
(bad)
push
jle
jo
fldenv
jno
xchg
loope
jl
not
xor
push
cmp
jmp
scas
repnz
push
outs
fs
pop
pop
push
adc
popf
lods
jbe
pop
dec
mov
mov
les
mov
cmp
lds
mov
pop
out
inc
inc
pop
test
push
jbe
sti
(bad)
xchg
xor
cmc
jp
mov
dec
or
adc
sbb
inc
dec
sub
cmp
sub
dec
inc
mov
(bad)
fnstcw
dec
adc
popa
xor
mov
les
mov
mov
es
cmc
fdivrp
adc
jle
add
add
call
push
into
sbb
call
mov
push
mov
push
dec
in
fcomp
(bad)
adc
test
xchg
dec
inc
jmp
cmps
imul
pop
jo
sub
jp
mov
les
adc
aam
jmp
ins
cmp
ficom
mov
adc
jo
mov
pop
push
dec
pop
fadd
das
xchg
jg
jg
sbb
add
jle
push
shl
sub
sub
xor
sbb
jge
sub
add
push
lahf
cdq
aas
popa
aaa
popa
sahf
outs
lods
leave
jmp
mov
jp
jo
adc
stos
or
fsub
and
pop
dec
fst
data16
xchg
mov
dec
out
ja
mov
(bad)
sbb
fcmovu
lea
add
stos
inc
fcmovnbe
test
sub
clc
mov
lods
sub
adc
into
fimul
test
jb
xor
jmp
scas
jnp
cmps
in
xchg
xor
inc
or
neg
jl
fcmovnb
(bad)
push
aad
mov
adc
xchg
push
into
sbb
ins
adc
repz
cmp
mov
repnz
fnsave
cs
push
pop
call
inc
gs
sub
jmp
(bad)
fdivr
push
fidiv
mov
ss
xchg
sbb
test
pushf
sub
jb
inc
dec
pushf
fstp
mov
lods
pop
adc
xchg
scas
ds
add
lods
lock
mov
test
sub
mov
and
(bad)
inc
das
sbb
sub
xor
mov
or
xor
ins
inc
(bad)
aad
sub
push
ficomp
in
cmp
loop
mov
lods
sbb
push
jl
xchg
ja
div
mov
sub
mov
shl
sbb
retf
mov
call
sbb
push
iret
dec
popa
dec
aas
ret
nop
jle
and
dec
pop
push
inc
fiadd
retf
das
mov
jmp
(bad)
push
and
xor
dec
add
and
mov
mov
das
sub
call
sub
dec
ret
lock
jmp
bound
push
and
scas
cmp
lock
inc
std
jecxz
adc
mov
ins
stos
shl
pop
(bad)
es
inc
add
mov
dec
cmps
aad
and
push
pop
fstp
ins
jmp
cmps
out
lds
sub
jl
fadd
adc
(bad)
jb
aad
mov
ret
xor
das
sbb
popa
and
inc
push
(bad)
aad
ins
fdiv
adc
add
mov
pop
int
jl
inc
or
adc
sahf
into
and
inc
jecxz
cmp
into
xchg
lods
mov
adc
mov
rol
repnz
out
jb
dec
(bad)
sub
sub
jg
aad
enter
mov
ja
inc
inc
out
mov
mov
pop
adc
inc
loope
adc
mov
adc
sar
add
cmp
fisttp
out
cli
xchg
(bad)
pop
(bad)
adc
ret
rcl
ja
ins
mov
add
mov
pop
int
push
add
sbb
push
sub
repz
leave
xchg
and
aaa
(bad)
pop
pop
into
jae
mov
push
adc
push
repnz
push
inc
pushf
xchg
inc
add
push
fidiv
loop
ret
js
pusha
xor
retf
int3
cmp
fstp
add
dec
fcmove
mov
dec
jo
clc
adc
faddp
pop
mov
sub
xor
aaa
xor
xor
fdivp
dec
mov
lds
idiv
aam
xchg
mov
and
jne
xor
mov
xchg
inc
xchg
cmp
cmp
dec
fdivr
gs
dec
outs
fimul
pop
xor
or
push
cmp
mov
daa
or
retf
fucomp
add
shl
xchg
jne
add
lds
pop
ret
push
pop
add
inc
mov
jno
loopne
mov
fstp
rol
xor
adc
dec
push
bound
ret
int3
xor
mov
add
or
lock
mov
dec
cwde
adc
dec
add
inc
loop
xor
and
push
fisubr
pop
aas
(bad)
mov
loop
fnsave
inc
or
hlt
xor
ret
mov
std
mov
sub
bnd
adc
adc
or
je
mov
and
mov
mov
xor
retf
pop
jle
jne
mov
mov
sub
sahf
adc
cmps
fist
cmp
push
sti
mov
jnp
(bad)
jg
rol
push
jns
xor
(bad)
cmp
cmove
fdiv
lods
add
(bad)
mov
inc
sbb
mov
movs
xor
(bad)
jg
mov
xchg
inc
adc
xor
or
sub
mov
test
cmp
mov
and
and
mov
pop
mov
not
sub
inc
aaa
ret
xor
xchg
mov
jo
inc
pop
cli
arpl
pop
out
push
stc
daa
sub
lahf
pop
mov
jl
jle
mov
mov
mov
sahf
inc
imul
jbe
add
jmp
cmp
hlt
dec
dec
push
mov
adc
xchg
outs
or
cmp
push
outs
pop
cwde
inc
lods
inc
push
xor
add
add
(bad)
jg
test
aaa
xacquire
xor
sbb
repz
lods
push
lods
push
fdivrp
mov
cmps
add
mov
fstp
int
aam
bound
retf
(bad)
xchg
adc
mov
mov
shl
montmul
cmps
push
add
test
fisttp
xchg
mov
sahf
(bad)
mov
jae
jmp
jnp
aaa
jl
mov
rcl
and
lods
ja
mov
and
xor
js
push
pop
add
xchg
or
ins
add
and
loopne
push
addr16
mov
cmp
loopne
cld
dec
xchg
xchg
ja
mov
xor
or
lds
cmps
pop
jb
je
movs
mov
sbb
in
xchg
and
add
and
bound
inc
and
sbb
je
inc
jns
mov
push
cmps
inc
rcl
retf
sub
push
pop
pop
fwait
jo
and
out
mov
adc
mov
dec
mov
ja
pop
sbb
bnd
jbe
push
sar
xor
stos
and
inc
pop
push
(bad)
jle
inc
pop
sar
xchg
shl
call
and
(bad)
xor
xor
ss
dec
gs
or
out
cmc
nop
daa
and
imul
add
xchg
mov
mov
mov
push
or
xor
jno
dec
(bad)
push
mov
retf
mov
mov
movs
mov
jno
or
mov
mov
cdq
mov
push
xchg
or
movs
xchg
rcr
loope
dec
mov
fst
test
sub
out
adc
mov
pop
call
movs
(bad)
js
jle
pop
xor
cmp
mov
pop
xor
cmps
jns
aas
pop
xor
jmp
push
aaa
pop
mov
cmp
(bad)
hlt
dec
sbb
xacquire
or
pop
lock
aaa
cmp
cmps
push
(bad)
mov
repz
pop
xor
arpl
mov
(bad)
push
call
not
adc
dec
xor
adc
sbb
aas
pop
addr16
aam
js
inc
inc
(bad)
cmp
out
pop
add
pusha
or
cmps
mov
sub
ror
add
mov
push
sbb
cmps
sahf
sub
adc
test
push
sbb
arpl
dec
loope
jno
inc
and
pop
rcr
push
fmul
scas
mov
push
xchg
mov
and
or
fdiv
iret
jns
adc
int
xchg
ins
adc
mov
jg
mov
xchg
lods
xchg
lods
cmp
aaa
pop
or
test
fwait
outs
adc
push
cmc
dec
lea
inc
jg
fidiv
(bad)
and
add
add
into
(bad)
sbb
pop
call
push
cmp
cmp
cli
imul
mov
mov
cmps
cmp
mov
and
mov
push
pop
inc
inc
das
sbb
jmp
mov
sahf
(bad)
xchg
mov
pop
add
and
test
adc
xor
mov
jle
popa
and
jb
fstp
pusha
push
inc
daa
or
icebp
(bad)
pop
rol
jg
lea
add
and
(bad)
std
rol
xchg
or
in
test
out
pop
pop
imul
jmp
dec
loop
add
mov
jg
cmp
pop
out
bound
push
inc
add
fwait
outs
cmps
mov
jo
nop
mov
(bad)
fst
or
xchg
leave
xchg
mov
xor
jmp
(bad)
pusha
fiadd
(bad)
lds
add
ror
mov
aas
sbb
or
or
bound
inc
inc
movs
sbb
sbb
add
and
mov
lds
mov
xchg
add
ds
dec
retf
mov
test
dec
cmp
xor
je
and
das
int
inc
push
mov
into
adc
sbb
inc
add
adc
sbb
scas
adc
inc
cli
ds
inc
imul
push
loopne
aaa
sub
inc
enter
jb
inc
int3
leave
es
in
mov
xor
or
mov
arpl
and
int
das
pop
mov
call
lahf
fcom
mov
cmp
pop
fsqrt
sbb
push
int3
aas
push
jne
outs
sbb
data16
pop
nop
pop
jmp
sbb
stc
(bad)
mov
or
mov
dec
fistp
out
jo
stos
or
mov
mov
cmp
inc
es
mov
fs
(bad)
dec
xor
repnz
rcl
test
sar
mov
cmp
dec
add
cmp
rcl
push
sub
and
sub
(bad)
cmp
movs
cwde
jae
adc
push
jmp
je
sbb
and
add
add
cvtpi2ps
dec
push
scas
xor
cmp
or
sbb
adc
sub
bound
pop
xor
and
and
or
inc
push
xor
dec
push
pop
add
jl
mov
out
dec
mov
dec
add
xor
add
and
aad
adc
or
addr16
inc
cli
in
adc
mov
dec
add
aaa
sbb
jmp
inc
lods
push
cmps
xchg
lods
xchg
jg
push
clc
call
inc
pop
mov
push
push
es
dec
adc
or
ins
sahf
pushf
xor
add
jo
in
pop
push
adc
and
sub
xchg
adc
xlat
cmps
jae
sbb
or
out
(bad)
jge
loopne
or
dec
repnz
dec
clc
xchg
ror
call
jmp
jle
push
test
and
fcom
lock
mov
es
test
rcr
aaa
push
add
mov
mov
push
cmp
cli
mov
cmp
mov
pop
shl
(bad)
dec
scas
(bad)
popf
add
pop
in
inc
dec
adc
jmp
cld
(bad)
out
mov
pop
or
sub
pop
mov
icebp
cmp
aad
xor
or
sbb
(bad)
and
repnz
push
jp
fcomi
mov
fldenv
push
mov
loope
add
es
sti
or
inc
dec
jo
jo
bound
pop
or
sub
pop
pop
push
(bad)
das
mov
je
pop
cmp
dec
call
xor
xchg
inc
cmp
mov
pusha
adc
mov
dec
xchg
xchg
dec
or
fdiv
dec
repnz
jl
xor
(bad)
add
movs
in
mov
push
daa
cmp
std
ins
les
push
adc
xchg
call
enter
add
xchg
push
ins
mov
inc
adc
bound
(bad)
inc
fcmovnu
xor
mov
movs
into
sti
cdq
mov
ds
pop
mov
pop
loop
das
add
nop
jmp
adc
loopne
push
js
mov
pop
mov
and
rcl
sbb
pop
(bad)
repnz
dec
fisttp
push
sbb
jecxz
add
sbb
jmp
pusha
(bad)
fnsave
gs
dec
add
push
or
and
rcr
sbb
pop
sub
pop
adc
pop
mov
imul
add
test
or
fstp
push
sbb
add
or
ins
pop
aaa
out
sar
es
imul
cli
fwait
(bad)
jns
shl
xchg
adc
xchg
push
ficom
dec
pop
add
add
pop
adc
cmp
loop
icebp
xchg
or
aas
out
std
addr16
inc
inc
cmp
pop
xor
pop
(bad)
aad
jp
add
or
pop
jmp
adc
mov
dec
push
and
test
xchg
dec
mov
dec
es
cmp
aas
push
retf
dec
jmp
mov
adc
out
xchg
xor
outs
jl
cmp
scas
adc
and
inc
fist
cs
sub
and
gs
(bad)
push
adc
add
dec
dec
test
movs
hlt
xor
jmp
jl
xor
mov
ss
dec
jp
jmp
pop
inc
stos
outs
aas
shl
mov
lahf
dec
sar
sbb
push
test
cmp
jle
push
rcr
(bad)
jmp
add
cmps
outs
clc
xor
mov
sti
enter
fimul
sub
add
mov
sub
push
or
jmp
lea
aad
in
ds
pop
rcl
rol
clc
inc
jne
iret
add
mov
aaa
pop
fsub
jmp
xchg
int3
mov
inc
or
inc
pop
ds
jb
shl
xchg
jne
and
dec
loopne
or
mov
lahf
fstp
add
cmps
add
xchg
rcr
or
outs
ins
pop
xchg
mov
dec
inc
loopne
add
dec
push
(bad)
mov
add
cmc
ret
clc
and
sbb
sub
mov
das
xor
and
mov
aaa
jle
icebp
hlt
dec
xchg
into
dec
int3
sbb
sub
xor
loope
or
cmps
mov
pusha
imul
(bad)
jg
into
ja
mov
push
mov
adc
mov
push
ins
jbe
js
mov
enter
loope
dec
inc
pop
fnstenv
or
fild
or
out
xchg
pop
rcr
jle
mov
cmp
and
call
xchg
fwait
shr
push
add
jl
pop
mov
pop
pushf
or
fisttp
jae
sub
pop
sub
dec
push
aaa
adc
and
jp
call
in
outs
inc
dec
les
cmps
mov
add
ss
mov
mov
or
lock
and
outs
and
mov
push
mov
add
push
into
inc
mov
and
aas
into
or
not
mov
mov
jo
dec
lds
sub
scas
stos
pushf
or
ret
call
lahf
push
out
sub
cs
fwait
scas
lods
dec
jle
ja
add
cmp
cmps
adc
add
stos
loop
fcom
pop
pop
mov
fiadd
fimul
loope
sahf
lock
pop
pop
fstp
jmp
enter
or
jge
jl
jl
pop
jmp
fimul
dec
sub
ins
mov
pop
jecxz
lock
mov
add
push
xchg
push
pop
sahf
ret
mov
test
imul
push
sub
xchg
xor
sbb
jg
fiadd
adc
and
scas
pop
inc
cs
mov
pop
test
xor
shr
jg
and
mov
mov
data16
xor
mov
push
or
jecxz
call
xchg
retf
xchg
mov
outs
repnz
stos
sti
push
add
add
je
mov
or
pop
mov
inc
dec
arpl
scas
jns
sub
test
push
xchg
sub
mov
inc
push
adc
aam
sub
add
lahf
sub
inc
cmps
mov
fld
jns
inc
cmp
fcmovnbe
in
mov
clc
ja
pusha
add
bound
xchg
xor
out
push
sbb
sbb
push
pop
rcr
das
dec
call
push
cs
inc
shl
or
cld
sub
loope
push
ins
scas
jns
jle
add
pop
pop
push
xchg
int
dec
ret
mov
sbb
sbb
sti
jo
dec
pushf
cmp
cmp
iret
mov
aam
fcmovb
inc
sbb
out
and
or
pop
or
jo
or
or
in
jge
rcl
mov
mov
add
fadd
adc
sbb
push
push
adc
ficom
mov
sbb
dec
subps
int
inc
inc
daa
loopne
push
jle
ret
ror
push
inc
(bad)
inc
add
add
not
retf
(bad)
pop
rcr
(bad)
(bad)
movs
data16
sbb
jo
xor
lock
out
adc
das
(bad)
ins
ss
and
nop
pushw
scas
fidivr
xchg
cmps
jno
inc
inc
inc
scas
add
aad
clc
xchg
retf
sbb
push
push
adc
pop
or
dec
out
pop
dec
rcl
retf
dec
call
ss
or
fiadd
xor
setnp
(bad)
ja
and
push
mov
fcmovnbe
shr
add
loop
or
add
inc
pop
mov
pop
mov
inc
jmp
rcl
mov
aaa
sbb
pop
jl
pop
push
inc
cmp
add
mov
push
scas
push
add
and
or
jne
adc
fild
arpl
mov
movs
mov
sar
mov
lea
iret
push
ds
push
ret
(bad)
out
mov
xchg
mov
frstor
into
addr16
mov
mov
and
call
repz
mov
inc
enter
mov
retf
out
add
add
push
ins
arpl
jno
cli
mov
clc
inc
push
sub
dec
push
rcr
nop
sbb
inc
pop
(bad)
ss
fild
mov
pop
cmp
sbb
add
push
aam
push
cmp
sub
lahf
and
mov
add
ss
xor
mov
ins
(bad)
clc
jbe
mov
aaa
int3
jge
xor
sar
stc
dec
xchg
sahf
pop
inc
test
outs
push
inc
jne
das
xor
mov
std
(bad)
aas
nop
clc
jg
outs
sub
jo
cmp
(bad)
fistp
jle
mov
sub
pop
and
jl
shl
add
inc
mov
ja
(bad)
ret
repnz
sbb
inc
xor
adc
nop
ret
inc
dec
sbb
mov
std
hlt
fistp
xchg
mov
and
inc
dec
adc
push
lahf
sbb
jp
bound
fadd
sub
sbb
cs
pop
pop
enter
rcr
js
lock
mov
comiss
inc
scas
loop
mov
dec
cmp
dec
xchg
and
jg
cmc
test
mov
das
xor
mov
jge
js
add
sahf
cld
jl
cmp
in
add
jb
ret
push
aaa
(bad)
loope
xchg
xor
das
push
scas
(bad)
xchg
ss
inc
mov
jne
test
stos
jle
call
xchg
dec
cli
dec
push
pop
xchg
xor
mov
dec
gs
mov
mov
or
ja
and
loopne
shl
adc
dec
clc
push
rcl
push
mov
push
xor
nop
in
stc
adc
lahf
mov
mov
in
inc
shr
mov
xor
out
push
add
sub
add
ds
fs
daa
mov
es
sti
cmp
sub
mov
adc
or
mov
lds
into
add
push
add
push
xchg
rcr
sbb
cmp
pop
mov
add
jp
or
sbb
out
adc
or
pop
sar
daa
je
outs
ror
inc
sbb
xchg
pop
ficom
cmps
test
out
xchg
push
push
lods
xchg
hlt
adc
push
loope
arpl
add
scas
jl
push
call
xchg
xchg
mov
lods
push
nop
inc
js
ds
jbe
or
dec
(bad)
into
movs
in
add
outs
adc
test
add
test
adc
sub
pop
inc
pop
adc
mov
test
out
push
xchg
lds
movs
inc
mov
mov
aas
pop
xor
(bad)
mov
les
push
sub
cwde
jmp
fadd
xchg
es
movs
stos
and
cmp
xchg
jne
dec
aaa
call
outs
push
mov
das
push
dec
jg
jmp
movs
cmp
inc
pop
pop
dec
mov
push
leave
mov
xchg
pop
jle
ret
mov
push
dec
ficomp
ins
cmp
jg
test
push
jmp
sub
into
out
jl
cli
cmp
test
mov
pop
cmp
call
pop
mov
(bad)
into
scas
sub
scas
loope
dec
lods
push
sti
xchg
pop
dec
push
sub
shr
cli
ret
mov
sub
sbb
sbb
sar
or
mov
and
xor
inc
sti
pop
aas
dec
push
into
fisub
nop
pop
bound
jbe
shl
mov
nop
mov
push
int3
movs
es
add
mov
rcr
aas
sar
xor
add
mov
pop
xor
ffreep
cmp
jb
aas
mov
cmp
sbb
retf
gs
rcr
(bad)
and
popa
mov
or
mov
mov
fld
push
jecxz
aaa
jmp
mov
jne
into
pop
ret
adc
sbb
push
xor
(bad)
pop
cld
test
mov
sbb
fild
das
cmps
inc
add
sbb
jne
cmp
inc
add
pop
pop
bound
add
sbb
int
add
push
imul
inc
dec
fs
xchg
and
dec
and
str
rcl
push
adc
mov
add
jbe
jle
pop
clc
test
cld
xor
xor
jno
loop
fnstcw
divps
inc
cmp
sub
jbe
imul
inc
inc
cli
out
adc
pusha
ficomp
fldcw
out
bound
aas
dec
mov
dec
mov
add
es
push
(bad)
bnd
mov
push
fsub
lods
jno
xchg
je
push
xchg
scas
dec
and
int
push
dec
push
add
pop
dec
adc
int
inc
stc
dec
mov
mov
bound
and
cmp
mov
pop
mov
dec
cdq
xor
mov
inc
das
lock
out
ss
mov
daa
mov
xor
pusha
call
mov
cdq
jne
sub
inc
sub
or
shr
or
enter
mov
add
lods
and
or
retf
dec
sub
sbb
push
pushf
bound
loope
jb
jge
mov
jmp
mov
or
out
inc
mov
mov
push
add
movs
cmp
ds
jnp
add
pop
mov
or
pop
stc
ja
add
(bad)
push
add
and
push
inc
rol
jbe
push
mul
push
pop
jb
ds
adc
mov
cmp
dec
loop
dec
mov
fmul
adc
inc
sub
pop
sar
in
out
jge
lods
arpl
lahf
mov
push
ficomp
ds
sti
ja
rcl
cmc
es
adc
mov
push
cli
ds
inc
aam
add
jbe
ret
shl
out
or
data16
mov
or
mov
jl
pop
jg
jecxz
cwde
(bad)
add
pop
xlat
jmp
(bad)
inc
add
and
or
jnp
dec
sbb
gs
pop
fmul
loop
sti
(bad)
jle
mov
dec
inc
inc
imul
mov
adc
cmp
out
mov
dec
jp
or
repnz
pop
xor
add
jle
fiadd
lds
sbb
push
inc
add
and
push
cmc
or
sbb
clc
inc
xor
inc
mov
mov
cli
or
lods
xchg
fimul
test
mov
jo
dec
pusha
fsubr
ins
movs
test
aaa
loopne
push
ss
test
mov
and
aaa
test
cli
inc
inc
imul
add
lods
sbb
stos
out
add
add
or
aas
or
push
and
out
inc
mov
push
pop
icebp
adc
push
add
push
js
pop
inc
or
sub
mov
bound
mov
push
iret
mov
push
movs
hlt
sub
or
out
mov
cmp
cmp
imul
in
and
inc
cmp
pushw
(bad)
in
out
call
adc
inc
(bad)
mov
or
and
fidivr
adc
add
xchg
add
inc
add
out
ss
scas
or
(bad)
clc
dec
lods
fcomp
dec
inc
jmp
cwde
scas
outs
scas
push
scas
call
mov
add
xor
or
cmps
repz
lods
in
cdq
into
stos
inc
push
and
or
push
and
cmp
inc
cdq
and
mov
mov
xchg
pop
outs
cld
sub
and
je
dec
ret
push
call
es
mov
movs
retf
inc
retf
xor
xor
sbb
inc
mov
jmp
retf
mov
xchg
shl
mov
sbb
ret
sar
jmp
dec
adc
pusha
add
or
mov
dec
pavgb
aaa
ja
and
(bad)
dec
dec
xor
xchg
mov
shl
push
sub
repz
cmp
add
arpl
push
jmp
scas
mov
mov
xchg
dec
mov
cmps
mov
adc
and
pop
cmps
iret
mov
xor
int
add
cmp
jbe
popf
or
and
mov
(bad)
mov
fwait
pop
dec
loope
mov
and
or
or
ds
inc
jge
jle
pop
mov
or
lahf
sub
push
push
jmp
mov
dec
addr16
dec
or
mov
mov
lods
add
out
out
jg
inc
jmp
out
leave
fistp
dec
les
jbe
cli
mov
cmp
frstor
rcl
sub
stos
fdivr
mov
add
lds
mov
neg
loope
push
int3
ins
shl
dec
pop
(bad)
adc
jbe
xor
mov
add
or
cmp
push
inc
(bad)
call
movs
sub
fcom
push
push
sub
adc
fisttp
popf
cli
fiadd
add
or
int3
je
(bad)
aas
cwde
inc
xor
add
es
ret
push
or
retf
iret
cmp
outs
adc
and
sub
pop
push
or
ret
ja
inc
mov
outs
inc
cwde
inc
mov
daa
(bad)
cmps
mov
push
pop
lods
inc
mov
cmp
sub
enter
add
sbb
shr
push
popa
sar
(bad)
dec
jno
das
add
or
pop
jg
int3
int
aaa
(bad)
(bad)
movs
mov
ret
cmp
sub
add
mov
mov
mov
sbb
push
enter
and
dec
nop
mov
nop
xchg
addr16
not
(bad)
cli
dec
dec
mov
daa
sub
dec
fdiv
pop
imul
(bad)
pop
pop
and
mov
dec
(bad)
fisubr
popa
inc
loope
push
mov
or
not
and
shl
xchg
lock
xor
adc
adc
mov
or
es
add
cmps
xchg
fsub
adc
(bad)
xor
inc
loope
jmp
or
and
sbb
in
ins
inc
movs
mov
std
dec
jecxz
leave
inc
and
movs
xor
fucompp
daa
data16
or
push
sub
cmp
adc
push
sub
cs
ficom
push
adc
mov
icebp
cmp
mov
push
jl
pop
inc
inc
xchg
int3
push
lahf
jo
cmps
(bad)
jb
jo
inc
cmp
shl
inc
je
mov
sbb
push
push
and
jg
shl
add
mov
test
dec
je
push
pop
fld
call
cmps
jne
lods
in
movs
xchg
mov
sysret
mov
and
cmp
out
pop
add
std
push
loop
jmp
outs
js
sub
add
mov
fmul
inc
cmps
popa
push
je
add
and
ror
push
data16
mov
clc
shl
mov
mov
retf
jo
sbb
sbb
jmp
repnz
jno
jne
(bad)
xchg
dec
mov
or
pusha
test
aad
pop
daa
push
pop
pushf
sbb
jp
ins
(bad)
jbe
adc
pop
call
or
pop
mov
pusha
dec
xor
push
repnz
hlt
test
push
jb
add
dec
adc
pop
jp
(bad)
es
or
rol
jmp
(bad)
cmp
fistp
and
cmp
or
inc
retf
dec
pusha
and
jns
mov
mov
pop
sar
add
pop
sbb
lods
dec
mov
mov
cmc
cmp
add
(bad)
icebp
inc
push
sub
mov
enter
cmp
lahf
mov
or
sub
xor
cs
pop
int
mov
inc
sub
pop
imul
sbb
add
sahf
pop
inc
stc
mov
sbb
inc
aam
and
add
fmul
loop
sub
jbe
or
or
aaa
mov
pop
mov
scas
dec
cmps
push
fistp
and
movs
clc
pop
push
jmp
add
xchg
xchg
inc
shl
dec
stos
sbb
cli
or
movs
xchg
adc
std
fstp
dec
pop
or
jle
icebp
jbe
jmp
sub
mov
jmp
xchg
test
pop
mov
ret
xchg
ins
es
ds
adc
aas
xor
jp
adc
(bad)
out
test
xchg
mov
or
add
xor
test
xor
xor
sub
cmp
es
ror
sbb
fld
push
adc
xor
ret
push
xor
pushw
xlat
(bad)
sub
xor
cmp
mov
aad
dec
sahf
lods
mov
iret
xor
jle
(bad)
mov
stos
sub
fiadd
pop
cmps
mov
clc
cmp
mov
mov
aam
daa
fcom
(bad)
adc
push
mov
cmp
adc
jbe
adc
fild
scas
test
cmp
out
in
dec
call
ja
mov
lock
dec
adc
inc
cmp
pop
xchg
(bad)
mov
xchg
call
mov
add
sbb
adc
repnz
lea
push
iret
mov
xchg
jo
lods
add
cmp
mov
xchg
retf
xor
cmp
test
dec
sbb
mov
cmps
xchg
xchg
lods
or
sbb
pop
pop
mov
arpl
inc
push
(bad)
stos
and
or
cmps
inc
cli
repz
(bad)
(bad)
mov
or
(bad)
aad
call
mov
adc
test
movs
call
push
sbb
dec
push
lahf
inc
sti
(bad)
cld
mov
sar
jo
adc
or
add
push
cmp
cmp
mov
das
mov
retf
stos
loope
outs
idiv
enter
dec
or
push
xchg
mov
inc
stos
adc
or
sbb
add
add
jnp
pop
sbb
inc
sub
mov
push
mov
mov
mov
cmc
or
xchg
add
nop
and
cmc
(bad)
ret
mov
fnstsw
or
ret
(bad)
sub
in
mov
push
frstor
push
xor
lea
and
jp
faddp
into
pop
test
(bad)
sbb
mov
(bad)
adc
aas
dec
test
add
or
adc
pop
add
xchg
pop
xchg
enter
jl
inc
push
aad
push
test
nop
cmp
imul
jmp
sbb
test
loope
jg
sub
mov
pusha
in
add
sbb
adc
inc
and
into
dec
test
or
add
push
xchg
mov
dec
dec
mov
jecxz
loope
push
xchg
cmps
adc
mov
addr16
in
stos
mov
xchg
xor
int
out
fst
push
pop
loop
sbb
rcl
jle
cmp
mov
sub
and
fwait
fs
inc
jmp
ins
dec
retf
jbe
adc
inc
loop
push
dec
jmp
(bad)
(bad)
movs
scas
ss
rcr
pop
mov
and
jmp
mov
sub
and
mov
shl
cmp
inc
mov
add
mov
mov
pop
lea
push
xchg
nop
cli
and
iret
pop
adc
or
fidivr
push
xor
mul
data16
inc
pusha
enter
dec
mov
stc
aas
add
mov
push
mov
add
ja
xchg
xchg
or
fist
add
pop
sbb
cmp
cli
mov
loopne
imul
test
or
fistp
call
sahf
sub
mov
scas
enter
sub
nop
dec
enter
add
cld
rol
pop
enter
popf
clc
jl
mov
mov
fdivr
xor
dec
loope
(bad)
and
lods
in
sbb
ins
jne
add
xor
inc
jae
cmp
sbb
retf
inc
rol
mov
ficom
je
push
std
rol
mov
not
aas
ror
stos
ds
aas
ins
sahf
fldcw
addr16
aaa
int3
dec
in
icebp
repnz
dec
retf
lock
icebp
or
push
data16
pop
ficom
rcl
repz
sbb
adc
push
mov
xor
adc
test
dec
cs
and
leave
push
je
jle
mov
pop
pop
xor
xlat
iret
xchg
and
xor
sahf
ret
mov
xor
inc
pop
sbb
or
jg
jno
or
or
sbb
jne
xchg
adc
nop
dec
xchg
clc
int
(bad)
(bad)
sub
xor
adc
cmp
aaa
sbb
cmp
aam
mov
call
ss
adc
xor
ins
ret
jp
xor
inc
mov
mov
enter
call
gs
mov
jo
adc
mov
mov
xchg
cli
aaa
mov
pusha
(bad)
jnp
scas
inc
lock
(bad)
(bad)
or
or
push
aas
lds
and
jmp
push
pop
lea
outs
adc
dec
data16
rcl
fadd
adc
rcl
jmp
sbb
mov
(bad)
(bad)
fisttp
(bad)
or
adc
sbb
popa
test
mov
jp
adc
dec
mov
or
jmp
sbb
dec
mov
pusha
ret
jmp
lea
aam
nop
ds
retf
lds
icebp
out
test
add
pop
mov
pop
fimul
mov
cmp
into
imul
push
call
jg
push
cli
ins
pop
xor
sub
sub
or
arpl
loop
inc
add
hlt
mov
add
clts
fnstcw
mov
jle
lock
or
into
outs
push
rol
add
movs
jae
xchg
(bad)
popa
loopne
jg
sbb
mov
pop
push
(bad)
ds
cmp
shl
loop
es
mov
lahf
test
inc
cmps
mov
add
loop
sbb
jmp
push
(bad)
call
mov
int3
dec
jge
jge
cmps
jge
ds
cmp
push
cmova
(bad)
xchg
pop
movs
mov
outs
sub
mov
ins
loope
ret
xor
sub
sbb
pop
iret
out
mov
pop
std
cli
sub
out
ret
mov
add
adc
hlt
add
sbb
daa
inc
ret
and
sub
mov
pop
retf
push
dec
or
add
mov
mov
push
or
js
repnz
sub
inc
cmp
push
js
push
push
jmp
adc
mov
push
and
fld
xor
mov
jnp
push
mov
mov
cmp
inc
out
cmp
add
mov
jo
rcr
xor
or
sub
dec
out
pusha
call
aam
sbb
jne
mov
outs
mov
push
es
add
stc
movups
mov
idiv
int
(bad)
fldenv
cmc
mov
or
xor
nop
push
dec
inc
xchg
into
jo
pop
cs
das
loopne
aaa
inc
ret
dec
lds
push
dec
mov
add
or
mov
cmps
call
and
dec
mov
jbe
ficomp
push
adc
arpl
fcomp
mov
adc
jmp
shufps
outs
mov
ret
movs
ror
(bad)
add
dec
inc
mov
jbe
(bad)
stos
out
add
outs
inc
inc
inc
std
loope
lods
int
aad
movs
inc
jg
add
(bad)
je
ins
jmp
call
pop
add
retf
addr16
adc
cmps
loopne
fisub
test
call
push
mov
dec
ja
out
in
sti
or
push
inc
dec
jmp
cs
mov
cwde
jo
mov
int
movs
inc
xchg
sub
lods
repz
cli
jmp
pop
push
repz
mov
jb
push
mov
dec
or
jmp
mov
xchg
sub
je
loop
pop
femms
aas
jmp
xchg
out
call
jg
add
(bad)
sub
cmp
mov
xchg
push
(bad)
mov
mov
pop
gs
outs
mov
sbb
xchg
mov
inc
dec
lods
in
(bad)
push
ins
add
mov
xor
call
adc
rol
inc
(bad)
xor
fdivr
into
test
imul
retf
sahf
jg
test
xchg
cmp
mov
cmp
or
dec
lds
xchg
add
xchg
ret
test
fstp
dec
gs
mov
shl
(bad)
lods
push
hlt
or
out
(bad)
cs
dec
mov
mov
(bad)
push
sub
dec
lds
outs
nop
ficomp
or
dec
push
lds
mov
(bad)
aas
mov
cmp
pop
scas
cs
mov
add
push
cs
(bad)
stc
icebp
xor
inc
rcr
push
cmps
and
ret
js
add
(bad)
lea
add
into
fnstcw
cmc
sub
inc
sbb
xchg
test
inc
adc
cmps
ds
aas
dec
std
cmc
pop
xor
mov
push
inc
scas
repz
ja
dec
dec
sub
push
gs
sbb
sbb
push
call
or
push
ins
out
pop
ficomp
xchg
jge
movq
pop
mov
sbb
xlat
or
mov
cmp
clc
push
mov
data16
fwait
mul
call
add
aaa
call
add
lods
mov
xor
lods
mov
sahf
dec
push
leave
enter
out
aad
and
sahf
inc
shr
xchg
add
es
jmp
dec
das
mov
dec
adc
mov
aad
xchg
pop
pop
ret
stc
stos
push
call
(bad)
jmp
icebp
nop
icebp
dec
push
faddp
and
add
ror
push
xor
jnp
mov
fiadd
cmp
sub
add
inc
or
psrlq
stos
sahf
xchg
call
and
ret
adc
(bad)
xor
jg
cmp
sub
sub
sbb
scas
jmp
(bad)
jmp
or
aam
inc
dec
mov
add
bound
pop
jnp
and
adc
jns
or
lds
jge
jo
adc
adc
and
(bad)
(bad)
xor
fdivrp
inc
(bad)
loopne
cmp
inc
ja
push
cmp
jp
int3
adc
and
jg
mov
and
xchg
cmp
mov
jmp
call
jnp
and
and
int3
push
mov
push
fistp
pop
dec
leave
jle
jp
repz
ror
inc
push
push
mov
int3
mov
(bad)
mov
mov
adc
push
test
out
es
lahf
dec
add
mov
ret
pop
xchg
xchg
inc
or
add
mov
mov
call
add
add
inc
ss
push
sbb
in
retf
fmul
call
je
fisub
fs
(bad)
ret
jae
push
fild
jne
dec
cli
aaa
xchg
sbb
(bad)
push
sbb
sbb
pop
repnz
sub
scas
cmp
or
out
call
push
lahf
mov
xlat
sahf
fimul
mov
(bad)
push
sahf
or
mov
push
int3
ret
mov
jmp
push
daa
or
push
inc
add
lahf
and
inc
rcl
out
fisttp
int
xchg
mov
mov
add
add
add
add
mov
retf
js
adc
mov
jo
mov
shl
sbb
mov
jecxz
call
nop
in
push
push
sbb
movs
in
(bad)
clc
mov
push
stos
or
dec
adc
dec
test
bound
inc
or
iret
push
cmp
bndstx
aas
push
(bad)
cmps
out
stos
aas
fcompp
nop
mov
push
in
(bad)
ins
mov
call
xchg
mov
and
ret
cmp
jp
mov
adc
ficom
mov
mov
add
mov
jp
jg
xor
lods
es
mov
push
sahf
sbb
enter
sti
ror
test
mov
xor
mov
push
lds
mov
fcom
push
rcl
mov
enter
shl
or
(bad)
sub
push
pusha
arpl
fcomp
push
dec
cmp
jns
dec
pop
test
push
dec
dec
mov
sbb
cli
aas
stos
into
mov
pusha
mov
daa
jne
fisubr
stc
push
cli
or
cwde
xor
mov
push
adc
mov
sub
inc
or
pop
pop
fiadd
sbb
cmp
push
jg
(bad)
pop
lock
add
mulps
push
pop
cmps
(bad)
push
int3
outs
inc
sub
push
inc
pop
mov
or
pop
sar
cmps
cmc
dec
or
pop
les
shl
ror
fadd
ret
jg
sub
sub
xchg
sahf
push
nop
jnp
mov
popa
jg
fwait
sbb
jg
push
ins
fldenv
or
inc
cmp
cmp
cwde
test
inc
aaa
push
jg
mov
cwde
add
mov
push
pop
xchg
adc
xor
push
fild
or
cmp
inc
mov
pop
scas
inc
into
sahf
push
js
add
push
ja
inc
jmp
mov
add
pop
mov
fsubr
cld
cmp
pop
inc
stos
push
fsubrp
(bad)
fdiv
add
ret
or
cmps
jle
es
fwait
movs
push
and
jbe
push
inc
cld
fidiv
mov
(bad)
pop
add
or
adc
test
ror
cmp
sbb
xchg
sar
or
jmp
(bad)
jbe
or
fnstsw
dec
not
into
mov
in
div
jne
scas
das
pop
or
(bad)
xor
push
lock
and
inc
jmp
or
jle
aaa
push
xor
sbb
into
inc
mov
dec
adc
push
jne
mov
sbb
mov
adc
and
inc
add
repnz
push
mov
div
ret
mov
add
loop
lahf
fstp
xor
pusha
add
fidiv
push
dec
cs
xor
and
repz
xor
pop
sbb
lods
(bad)
sbb
pop
ret
into
sub
or
jmp
sub
scas
ja
add
mov
cmp
cli
ins
ss
push
pop
or
das
aaa
sar
mov
mov
bound
or
or
add
push
or
and
outs
ss
mov
stos
fcom
xchg
ss
nop
push
inc
push
das
dec
icebp
inc
cs
pop
fcomp
fisubr
inc
aam
(bad)
out
pop
sub
iret
shl
xchg
scas
add
lock
mov
mov
add
pop
mov
retf
cmp
sub
dec
cmp
popf
fs
pop
mov
pop
or
popa
lods
dec
mov
cmps
fild
adc
outs
and
push
or
mov
clc
or
jle
add
mov
jo
and
test
stos
mov
std
fsubr
or
xor
add
sbb
aad
pop
cmp
mov
repnz
dec
dec
mov
cmovp
and
(bad)
cli
jno
test
cmp
inc
enter
(bad)
cmp
fsubr
dec
mov
and
sar
bound
pop
arpl
xchg
push
sub
repz
or
es
loopne
cli
add
sbb
push
call
int
(bad)
in
mov
xor
emms
clc
jne
inc
mov
pop
adc
pop
xor
xchg
cmp
cmps
mov
les
inc
pop
jle
xor
ja
aaa
scas
push
mov
add
retf
fistp
add
int3
jg
imul
xor
scas
(bad)
clc
outs
cmp
cmp
lock
jmp
xor
rol
push
mov
imul
mov
sub
das
test
es
push
or
pop
inc
cld
pop
test
pop
push
rol
shl
mov
push
jmp
push
push
push
js
sbb
push
adc
jo
dec
std
or
or
dec
or
adc
loope
add
sbb
dec
ins
(bad)
dec
pop
mov
push
dec
loop
inc
push
push
xchg
and
and
mov
sbb
push
add
jne
mov
fild
loop
loope
xchg
adc
push
sub
jmp
not
fbld
push
pop
ficom
adc
dec
out
fsub
movs
ds
mov
dec
call
xchg
dec
out
bound
outs
fld
ja
ret
push
and
mov
(bad)
stos
cmp
ds
inc
(bad)
out
dec
add
pop
inc
pop
xor
xchg
retf
js
sub
stos
nop
dec
lahf
pop
movs
mov
xor
sub
xchg
jnp
mov
imul
and
dec
cmps
dec
or
sbb
adc
jo
push
mov
fisubr
push
cs
cld
sbb
push
mov
push
sub
push
mov
or
fisubr
xor
push
xchg
fucomi
jns
jmp
iret
hlt
aam
mov
int
int
out
adc
sahf
jmp
shl
mov
(bad)
aaa
(bad)
pushf
stos
mov
pop
sub
ss
test
cmp
jo
push
mov
add
adc
inc
push
mov
add
push
not
dec
sub
inc
adc
daa
mov
xlat
sub
nop
cs
inc
cdq
popf
int
xchg
cmp
sar
jne
fisubr
outs
push
stos
sub
inc
nop
cmp
sbb
push
cdq
jno
(bad)
mov
mov
cmp
cmp
int3
jnp
mov
popa
push
sbb
mov
inc
cmp
fwait
ins
lea
mov
sub
cmp
repnz
jg
push
mov
sahf
mov
sub
jecxz
in
or
mov
imul
aaa
xchg
scas
or
jecxz
dec
aaa
add
sbb
and
and
adc
ds
stos
es
and
jmp
add
aam
scas
xchg
hlt
or
push
fldenv
cmps
or
push
dec
(bad)
outs
imul
or
ret
dec
and
pop
pushf
scas
xor
add
and
sbb
nop
iret
mov
(bad)
repnz
std
shr
push
fmul
push
add
movs
xchg
out
sub
aam
out
into
iret
add
arpl
sbb
clc
inc
or
ss
xor
add
push
ins
rol
data16
add
xchg
jns
test
movs
call
jbe
adc
retf
dec
mov
xchg
jnp
push
icebp
sti
test
les
retf
lods
mov
xor
xchg
ror
or
scas
jmp
inc
pop
mov
pop
mov
push
(bad)
pop
(bad)
fiadd
push
les
or
lods
cmps
push
add
mov
mov
sbb
pop
push
loop
pop
mov
shr
mov
mov
(bad)
cs
shr
add
loopne
mov
mov
inc
test
dec
popa
add
push
fcmovnbe
mov
xchg
sub
push
in
data16
xchg
aaa
bound
into
jg
add
push
scas
int3
stos
sbb
jmp
xor
ds
(bad)
repnz
enter
adc
add
cmp
test
add
dec
cwde
mov
mov
sbb
retw
cmp
or
inc
out
shl
(bad)
push
push
fld
ficomp
or
cmp
sub
add
pop
or
sbb
dec
jle
popa
mov
mov
pop
mov
xor
xor
and
jmp
push
or
(bad)
arpl
jae
jmp
mov
pop
scas
(bad)
out
push
mov
movs
add
jno
loope
xor
add
push
call
fimul
(bad)
stos
scas
loop
mov
stos
push
jmp
mov
mov
xor
add
push
mov
(bad)
sub
lds
inc
jmp
jbe
push
fdivr
sub
test
jnp
mov
add
adc
add
jbe
push
pusha
std
lods
icebp
mov
aaa
loopne
adc
je
test
stos
daa
ficom
add
cmps
ja
jl
jmp
jmp
imul
xchg
fild
adc
ss
push
xchg
(bad)
daa
cmp
dec
cli
sub
into
xchg
sub
pop
mov
jle
adc
xor
retf
dec
mov
mov
je
mov
xor
mov
inc
not
lods
mov
inc
test
or
pushf
(bad)
add
cmps
inc
jmp
or
push
xchg
sub
sbb
sbb
out
arpl
(bad)
fstp
int
xor
aad
xor
mov
sub
pushf
retf
das
xor
out
mov
pop
mov
sar
iret
jl
lahf
ret
mov
add
stos
adc
mov
pop
(bad)
sar
fwait
aaa
out
js
ds
fadd
or
inc
inc
mov
xchg
mov
pop
push
jecxz
aaa
and
pop
inc
and
push
push
clc
sub
repz
sub
add
das
fistp
iret
mov
(bad)
sub
cs
inc
xor
loope
into
inc
adc
jmp
dec
popa
call
nop
or
or
push
xor
ja
dec
push
jb
vmsave
xchg
cmp
sub
push
jge
mov
clc
mov
ins
inc
sub
js
inc
mov
or
mov
retf
stos
ret
clc
push
fiadd
imul
lods
adc
xor
dec
out
jns
xchg
xchg
clc
out
fsubr
pop
or
and
fwait
cli
lahf
xchg
xor
ds
nop
in
xchg
sub
mov
push
mov
or
cmp
cli
div
sub
pop
inc
daa
icebp
push
jmp
sbb
shl
dec
pop
repz
mov
cmp
(bad)
jae
cmp
repz
lods
bound
xchg
mov
dec
mov
aas
jl
cs
rcr
into
test
and
mov
dec
jmp
pop
sbb
sbb
adc
add
jae
inc
cmp
push
aaa
cmps
xchg
mov
shl
addr16
sahf
sub
xchg
cs
pop
arpl
imul
dec
aas
xchg
outs
or
inc
pop
xor
pminub
jno
and
stos
inc
sbb
or
iret
test
hlt
nop
jns
push
pop
push
lahf
or
and
push
push
or
inc
adc
clc
xor
xor
ins
or
icebp
push
movs
push
fdivr
and
push
inc
sbb
xchg
jo
dec
scas
pop
fwait
jno
imul
jnp
fsubr
and
xchg
jle
cmps
adc
scas
aad
mov
clc
adc
mov
and
(bad)
fimul
mov
add
daa
dec
lahf
imul
pop
pmulhuw
gs
or
mov
dec
mov
and
test
aas
pop
lock
inc
call
mov
dec
add
(bad)
in
push
loopne
or
sahf
scas
mov
add
pop
and
inc
aaa
mov
mov
(bad)
mov
scas
mov
std
add
xor
scas
xor
bound
mov
retf
daa
add
fwait
lea
xchg
mov
cmp
stos
xchg
sbb
cmp
(bad)
stos
aaa
pop
or
adc
xchg
inc
sub
push
lock
mov
jb
retf
push
ss
scas
mov
dec
sar
push
add
dec
jp
jl
fld
adc
(bad)
and
call
cmp
popf
mov
xchg
push
(bad)
dec
mov
push
ror
clc
enter
(bad)
outs
ret
mov
loopne
cmp
jnp
jmp
ret
cld
ins
std
pop
ds
xor
cmp
or
pop
pusha
or
iret
cmp
lods
sub
xchg
dec
pop
dec
adc
adc
rcl
loope
xchg
hlt
dec
inc
mov
aaa
and
data16
dec
xchg
pop
das
add
sbb
ss
push
into
add
xchg
push
lock
dec
lea
fst
xchg
rcl
repz
aaa
or
aad
inc
call
shr
push
mov
repnz
jl
bnd
test
pop
bound
fimul
add
das
mov
push
jl
inc
pop
inc
xchg
das
pop
and
retf
scas
scas
repz
in
sahf
cmp
mov
stos
cmp
push
les
mov
mov
add
cli
out
test
cs
jno
je
push
ins
jmp
outs
popa
add
imul
or
cmps
add
lock
addr16
shl
cdq
call
les
push
call
pop
into
clc
xor
inc
add
das
mov
popf
push
jg
xchg
pop
js
scas
cmps
rol
popa
popf
add
jo
loopne
stc
bound
jp
mov
iret
std
cli
loope
mov
push
mov
mov
sbb
int
test
or
int
cwde
retf
xchg
pop
xchg
jp
jbe
(bad)
mov
sub
cmps
and
ds
xchg
fmul
push
add
loop
jp
push
add
es
(bad)
lea
cmp
test
xor
ins
jns
inc
mov
mov
cmp
mov
pop
nop
lods
les
(bad)
jp
shl
mov
mov
pusha
add
aam
and
sahf
jg
jp
mov
or
fstp
jae
dec
out
scas
cmp
mov
add
sub
jno
test
jns
push
cmp
dec
or
or
test
add
lods
rcl
inc
pop
push
xchg
and
(bad)
cmps
cmp
jle
xchg
xchg
pop
icebp
ja
push
cmp
into
inc
push
inc
mov
test
cli
fdivr
clc
lea
mov
add
or
je
adc
daa
mov
not
lock
or
push
mov
nop
(bad)
in
add
mov
daa
cmp
pop
icebp
pop
add
and
push
cmp
(bad)
mov
jp
test
xor
jp
pop
mov
mov
lods
add
or
xor
xchg
push
jbe
sbb
test
mov
stc
add
push
push
push
je
or
test
mov
movs
mov
pop
inc
gs
arpl
idiv
fidivr
lods
test
scas
jp
sub
add
fld
lea
fcmovnb
out
and
mov
pusha
sub
mov
mov
rol
adc
cmps
mov
js
in
xor
ds
lods
pop
ss
mov
mov
mov
rcl
test
lea
jp
add
jb
jg
lods
lds
cdq
jmp
inc
push
mov
mov
cmc
xor
stos
fwait
pop
lea
pop
enter
cmps
mov
jl
jmp
or
mov
jns
cmps
mov
cli
push
jnp
in
test
cmps
neg
add
mov
addr16
call
idiv
js
add
mov
es
pop
mov
loopne
add
cmovbe
bound
out
pop
clc
cmc
and
popa
add
cs
sub
push
ja
sbb
pop
push
sub
lock
(bad)
xchg
outs
aaa
ret
mov
(bad)
jmp
sbb
sbb
rol
aaa
and
xchg
push
jmp
jge
adc
(bad)
test
jbe
or
les
(bad)
sbb
mov
fidiv
mov
dec
dec
repnz
pop
xor
mov
gs
aas
or
and
adc
movs
mov
adc
and
sub
test
xchg
push
and
and
xchg
test
sbb
movs
lock
push
xor
cmp
ja
pop
ret
and
scas
push
jbe
add
jecxz
psubw
jmp
lods
pop
or
mov
fnstenv
mov
outs
fiadd
lock
rol
push
mov
add
sbb
popa
sbb
mov
jbe
xchg
jl
and
movs
or
shl
mov
repnz
dec
mov
bound
xchg
mov
cmps
inc
pop
stc
mov
popa
push
adc
loop
add
xor
sar
push
shr
push
inc
dec
jg
sqrtps
fisttp
(bad)
xor
jp
lock
iret
cmp
jno
inc
(bad)
mov
add
fidiv
repnz
push
inc
nop
jb
fidiv
pop
inc
jg
or
push
xchg
and
add
rcr
mov
push
into
push
outs
push
arpl
mov
clc
shl
mov
jecxz
adc
adc
(bad)
repz
iret
movs
push
loopne
ret
cli
jge
and
mov
push
fisubr
fimul
call
cmp
push
inc
int3
shr
pop
xchg
jo
add
not
push
cli
mov
popa
push
add
push
inc
push
mov
mov
adc
push
mov
test
movs
ret
cli
cld
mov
int
pusha
adc
mov
lahf
(bad)
(bad)
sbb
das
bound
cld
lods
add
push
and
bound
mov
sbb
pop
cmps
ds
dec
or
mov
adc
and
ins
cli
(bad)
aas
retf
mov
cdq
dec
or
push
out
arpl
push
pop
cmp
hlt
daa
cmps
mov
jl
int
add
int3
adc
int3
add
sbb
or
std
mov
test
(bad)
xchg
aam
push
add
int3
or
(bad)
(bad)
ss
ficom
cmp
xor
xchg
adc
add
xor
cmovne
dec
ja
loop
(bad)
shr
push
lods
push
dec
mov
jb
cmp
xor
ffreep
cmps
std
bound
mov
pop
movs
ins
jl
daa
sbb
lock
fnstcw
mov
inc
push
div
lods
fwait
neg
daa
dec
sub
or
fcmove
push
mov
mov
mov
mov
pop
cs
mov
ror
js
cmp
ins
mov
(bad)
int3
adc
mov
es
xor
add
sbb
outs
add
adc
movs
xor
xchg
test
push
nop
enter
jnp
or
fimul
add
mov
jo
jns
cmp
xor
pop
sbb
sbb
es
aam
pop
add
fstp
push
push
add
popa
mov
sub
clc
dec
fs
push
jnp
arpl
push
push
mov
add
lds
or
mov
lock
leave
and
sbb
jp
(bad)
iret
repnz
fld
fld
push
sbb
imul
ss
and
lock
push
bound
add
mov
in
arpl
fimul
sahf
loopne
je
inc
rcr
lods
and
cmp
pop
dec
mov
ret
retf
ret
jp
mov
inc
out
cli
cwde
ret
lds
mov
mov
mov
mov
or
cmp
ror
dec
sub
std
add
mov
inc
push
or
dec
nop
mov
inc
xor
cmp
push
lods
pop
mov
jne
(bad)
mov
add
pop
xor
or
mov
push
(bad)
xor
cld
out
aas
add
mov
adc
sti
or
xchg
push
add
adc
mov
or
mov
and
xchg
loopne
sub
mov
adc
ficomp
das
lds
mov
scas
(bad)
enter
mov
outs
scas
arpl
mov
stos
add
scas
xor
push
push
cld
cwde
loopne
adc
idiv
cmps
or
rcl
adc
sbb
xchg
push
aam
xchg
add
mov
xor
push
repz
or
push
mov
pop
faddp
imul
addr16
dec
inc
fmul
lahf
(bad)
cld
outs
jle
jecxz
or
inc
jle
lahf
or
fwait
inc
xor
sub
loope
or
adc
mov
in
mov
sub
jbe
mov
mov
leave
ja
repz
pop
(bad)
rcl
mov
(bad)
clc
inc
call
jo
retf
faddp
enter
push
out
inc
push
fcmovbe
inc
into
xlat
and
nop
(bad)
aas
or
xchg
fucom
sti
push
mov
ins
bound
scas
lea
push
mov
mov
outs
push
jle
pop
dec
dec
mov
push
jl
push
xchg
(bad)
sbb
inc
push
inc
pop
mov
and
lock
sub
jmp
stc
jae
jo
int3
mov
(bad)
push
pop
lods
dec
inc
cmps
or
add
std
push
icebp
ret
mov
xor
cmps
lea
or
mov
int3
push
scas
ja
push
movs
sbb
or
mov
sar
sbb
push
and
mov
adc
xor
sbb
dec
scas
(bad)
lahf
cmps
fimul
(bad)
lds
xchg
dec
fcomp
dec
push
jbe
add
xchg
std
or
push
mov
aas
xchg
sub
dec
inc
ror
ret
stc
lods
pop
jmp
dec
movs
xchg
push
into
pushf
popa
mov
mov
jmp
daa
clc
add
adc
and
pop
ds
ja
mov
cmps
ins
xchg
xor
int
xchg
inc
xchg
add
imul
out
aas
cmp
sbb
lods
out
fild
nop
stos
cmps
push
rcr
add
outs
add
fs
scas
inc
sub
inc
cli
dec
std
(bad)
jle
and
pop
cmc
or
push
lods
push
jno
icebp
jecxz
pop
or
int
call
cmp
test
xchg
inc
inc
push
(bad)
cmp
pop
sub
and
in
or
ret
out
xchg
push
cmp
adc
or
push
mov
mov
(bad)
cmp
dec
jo
xor
and
mov
or
stos
(bad)
jbe
sbb
icebp
in
mov
add
jl
es
lock
les
mov
retf
sub
push
mov
add
push
repnz
or
push
or
movs
dec
xor
jo
dec
jmp
pushfw
xchg
lahf
sti
adc
ja
dec
push
call
cld
fldcw
int
addr16
fadd
data16
or
popa
lods
xor
xor
shr
cdq
in
(bad)
ficom
cli
push
inc
dec
scas
push
adc
adc
mov
inc
int3
call
ds
(bad)
and
loopne
inc
or
jl
pop
add
sbb
jg
inc
ss
add
test
cmp
cmp
movs
int3
adc
adc
pop
or
cli
outs
jbe
mov
mov
sbb
ret
push
mov
add
(bad)
shr
inc
pop
mov
mov
push
dec
jmp
lds
sbb
int
push
adc
int
sbb
pop
or
mov
cmps
movs
inc
and
popf
sub
lahf
movs
push
push
pop
mov
xchg
dec
outs
loope
sbb
dec
mov
aas
aas
(bad)
mov
in
mov
es
inc
mulps
enter
dec
mov
mov
add
and
mov
repnz
addr16
sub
adc
dec
in
mov
fcmovb
or
(bad)
push
pop
movs
xchg
hlt
aaa
das
adc
int3
movsx
mov
cmps
pop
rcr
push
mov
ficom
lea
outs
jle
xchg
test
mov
es
inc
cs
cmps
ret
jbe
push
shl
jnp
popa
mov
xor
jle
xchg
or
and
add
xchg
lods
inc
jecxz
push
retf
int3
pop
stos
jns
mov
fldcw
loopne
pop
jmp
sub
or
iret
call
movs
mov
inc
push
mul
inc
stos
ss
add
call
jmp
pop
ins
add
popa
inc
cmp
sti
sub
mov
stos
mov
mov
add
xlat
(bad)
dec
mov
je
add
repnz
pop
mov
ret
popa
cmps
(bad)
(bad)
data16
pop
push
jg
scas
into
lods
nop
test
xor
push
fcomp
xor
and
pop
pop
add
lock
ficom
mov
xchg
rol
bound
out
stos
sub
clc
leave
ret
ror
(bad)
xchg
xchg
cmps
sub
pop
jbe
inc
cld
sub
mov
or
push
inc
clc
movs
aam
retf
out
pop
out
cmps
outs
mov
pop
cmp
push
(bad)
psubsw
fist
lds
add
scas
ret
adc
push
stos
mov
inc
dec
xlat
jg
data16
mov
fs
add
xor
out
mov
pop
dec
mov
test
add
(bad)
out
out
dec
pop
dec
into
call
xor
bound
xlat
(bad)
sub
mov
(bad)
add
ins
sbb
clc
jmp
std
arpl
dec
(bad)
das
int
adc
xor
rol
jbe
in
cmovnp
mov
aad
sub
out
or
inc
adc
pop
es
aaa
xor
ret
xchg
inc
xor
pop
lock
into
aas
jbe
mov
adc
and
jae
sbb
sbb
add
loopne
or
jmp
mov
cmp
in
fnsave
js
dec
adc
or
pop
pop
scas
mov
add
cli
jb
add
call
sbb
mov
xor
lods
pop
add
and
inc
call
lds
sbb
add
mov
test
out
mov
das
pop
inc
dec
call
jb
rep
repz
cli
int3
dec
pop
dec
pop
mov
jno
pop
and
pusha
(bad)
outs
pop
adc
cmp
xchg
or
cmp
mov
clc
and
push
mov
sbb
sbb
les
into
mov
outs
xor
fimul
jp
into
mov
das
push
es
inc
retf
inc
add
sub
test
dec
mov
daa
xchg
pop
push
and
pop
inc
xchg
pop
or
cs
sbb
jmp
mov
int3
jbe
fs
es
push
and
sbb
pop
xchg
and
xor
xchg
cld
mov
xor
test
fisub
sar
jns
je
dec
push
push
dec
mov
dec
(bad)
iret
pop
mov
xor
sbb
cs
xlat
movs
cs
int
sbb
mov
push
pop
sar
scas
adc
mov
out
out
add
cmp
cmovae
psrlq
ficomp
test
xor
out
mov
add
out
or
outs
rol
lods
pop
int
loope
add
adc
inc
clc
or
dec
cli
cmp
bound
mov
out
aad
or
and
add
xchg
pop
loop
xor
pop
add
adc
aad
cmps
jmp
add
inc
mov
jne
push
push
adc
mov
inc
hlt
es
add
push
dec
sar
in
push
inc
adc
pop
adc
add
push
ins
cli
add
mov
add
(bad)
ins
dec
outs
or
jno
scas
xchg
(bad)
(bad)
rcl
mov
mov
push
(bad)
jmp
mov
mov
jge
retf
jge
add
dec
push
mul
retf
dec
sbb
call
push
cld
pop
sub
lods
js
add
(bad)
add
retf
jmp
out
cmps
cmp
jmp
imul
aam
xor
push
leave
inc
and
movs
stos
sar
cmp
jb
adc
jl
xor
cmps
mov
mov
inc
mov
mov
loopne
xor
mov
jbe
(bad)
mov
scas
ds
std
call
jl
dec
(bad)
test
inc
dec
test
addr16
rol
cmp
mov
adc
jp
or
aaa
bound
test
jbe
pop
add
popa
add
outs
and
jo
(bad)
fcom
jp
jle
or
cmp
mov
push
or
adc
sub
das
pop
mov
(bad)
fnstenv
mov
and
scas
aam
sahf
mov
mov
mov
mov
pushf
(bad)
sbb
push
fcompp
fcmove
inc
rol
or
rsm
rol
bound
mov
xchg
jo
sbb
cmc
xor
out
psraw
mov
je
inc
and
rcl
iret
fwait
pop
scas
imul
mov
int3
cmp
jmp
ja
and
sbb
xchg
pop
mov
lods
fwait
mov
sub
test
adc
lods
lea
sbb
jp
dec
movs
add
dec
push
add
addr16
loop
cli
pop
mov
clc
icebp
iret
cmp
dec
mov
xor
inc
jmp
inc
adc
ss
jb
dec
int
or
mov
out
pop
mov
cdq
dec
push
sbb
rcl
sbb
cmp
retf
mov
call
pop
fxch
mov
out
add
addr16
sub
into
cmps
push
xor
out
cmp
test
pop
mov
and
(bad)
mov
mov
ret
fdiv
jo
lds
xor
mov
aas
or
scas
pusha
adc
mov
fwait
test
lahf
cmp
adc
sub
sbb
retf
repz
sub
bound
aaa
sub
dec
jns
pop
or
jnp
daa
xor
cmp
scas
and
or
push
xor
mov
lea
sbb
ds
cmps
lahf
retf
les
xor
inc
jg
add
dec
mov
jmp
cmp
and
jne
and
sub
ja
test
or
pop
jnp
scas
jmp
cmp
jmp
pop
or
fistp
sub
repnz
out
pop
arpl
inc
xchg
ss
mov
jp
stos
sub
push
sub
xchg
xor
sub
sub
or
xchg
jae
inc
or
jbe
and
cmp
cli
or
jmp
jp
jns
inc
fidivr
aaa
ja
or
bsr
inc
repnz
repnz
mov
mov
arpl
test
repz
dec
jmp
sbb
xor
jb
mov
loope
push
xor
push
xor
gs
test
jb
call
int
pop
add
inc
jp
xor
mov
adc
fwait
add
sahf
test
dec
xchg
pop
inc
gs
gs
ja
repnz
cmp
push
ror
fisttp
xor
shl
or
add
inc
cwde
push
mov
scas
inc
dec
and
push
xchg
add
sub
pop
or
stos
push
je
das
std
adc
or
repnz
fst
jp
ins
xchg
xchg
jnp
jg
xchg
jbe
das
pop
or
sbb
sbb
xchg
lock
push
and
sbb
inc
and
and
cli
pop
jnp
add
push
adc
mov
mov
jl
in
jmp
push
stos
cmps
xlat
xchg
jno
std
dec
fs
lahf
cld
nop
mov
popf
mov
sub
in
out
pop
pop
cmp
adc
(bad)
jge
lock
inc
outs
lods
pop
aas
retf
into
cdq
xor
clc
orps
cmps
fadd
inc
or
cmp
or
and
pop
push
push
mov
(bad)
mov
xabort
pop
and
je
jle
dec
jbe
mov
test
fidivr
push
lods
ins
cdq
cmp
loope
mov
or
test
push
jge
xor
jnp
out
mov
(bad)
outs
int3
cmp
clc
adc
or
pop
or
ret
jp
daa
call
imul
ins
lods
inc
mov
loope
jb
inc
pusha
shl
fldcw
adc
repnz
imul
mov
or
jo
mov
(bad)
jecxz
push
push
dec
dec
jns
repz
test
dec
rsm
inc
sbb
repnz
mov
inc
add
dec
cld
and
dec
in
mov
cpuid
adc
adc
and
ds
sti
push
sbb
mov
(bad)
cmp
lea
sbb
scas
mov
jle
inc
sub
lahf
dec
pop
mov
cmp
dec
in
inc
inc
xchg
xchg
cmp
mov
dec
mov
sbb
dec
sbb
pop
push
mov
jg
inc
mov
push
cmp
mov
or
xchg
je
or
and
fild
(bad)
iret
inc
rcr
in
push
(bad)
out
dec
into
sub
add
test
mov
cmp
shl
movs
xor
lods
pop
gs
cdq
scas
xchg
inc
mov
push
ret
repz
mov
dec
and
repnz
nop
pop
je
add
leave
cld
mov
test
adc
fild
cdq
cs
inc
fwait
mov
imul
arpl
cs
mov
cmp
or
(bad)
mov
dec
jb
dec
fldlg2
xor
adc
xlat
in
cmp
scas
jnp
inc
sahf
pavgw
lods
outs
in
hlt
mov
(bad)
or
cmps
ss
hlt
aaa
push
loop
mov
mov
hlt
adc
jle
pusha
sbb
sbb
ds
sar
in
dec
es
cmp
cld
int3
adc
in
iret
or
or
xor
imul
jge
jl
pop
mov
call
fdivrp
nop
outs
sbb
push
ret
mov
pop
or
xor
fwait
pop
ds
js
jnp
mov
adc
inc
xchg
and
cmp
jg
outs
mov
xor
mov
xchg
out
xchg
sbb
addr16
jno
mov
jne
push
test
stos
sbb
lods
retf
push
push
add
in
xor
adc
jl
pop
mov
and
(bad)
jge
imul
and
call
xor
imul
enter
mov
call
add
adc
jmp
inc
fadd
inc
std
mov
add
inc
aaa
cmp
aaa
xchg
fisubr
xlat
inc
sahf
jecxz
ins
push
mov
nop
push
jb
pop
stc
mov
xchg
inc
mov
out
ss
jl
add
leave
mov
lea
add
jmp
data16
push
fnstcw
mov
mov
push
stc
push
jbe
fisub
test
jl
loope
push
jle
mov
popf
arpl
fs
jno
enter
add
movs
sbb
inc
ss
add
and
imul
xor
dec
xchg
fimul
inc
loope
imul
div
pop
pop
loopne
push
cmp
jns
lods
cmp
xchg
dec
mov
lahf
int
cmps
or
push
xchg
jo
pop
in
jp
inc
dec
xchg
ret
vmwrite
sbb
xor
mov
add
sub
gs
push
xor
gs
xchg
dec
or
vpcmpgtd
das
sub
push
dec
sub
and
mov
dec
loope
out
fild
scas
pop
popa
sub
fmul
sub
pop
add
pop
or
(bad)
pop
je
mov
mov
addr16
ret
or
shl
push
adc
retf
outs
lock
repz
(bad)
repnz
and
outs
cmp
cwde
adc
shl
push
cmps
addr16
adc
dec
or
and
popf
dec
jmp
push
out
sbb
mov
dec
call
jbe
ss
sti
jb
dec
in
jnp
es
scas
xor
push
sbb
retf
leave
int
cmps
nop
sub
int
stc
pop
sbb
sbb
out
jecxz
imul
jno
jne
inc
(bad)
cmps
push
push
jecxz
jge
(bad)
xor
or
stos
xor
fmul
and
pop
call
clc
movs
pop
push
push
mov
jle
icebp
add
loope
mov
(bad)
icebp
mov
mov
fst
xor
xor
bound
test
adc
pop
test
loopne
pop
jle
fld
sbb
int
mov
sbb
adc
cmp
add
xchg
aaa
push
pop
pop
inc
clc
retf
xor
cmps
xchg
sub
dec
pop
scas
inc
sbb
inc
xchg
dec
xchg
loop
fs
arpl
pop
push
outs
ds
daa
addr16
ret
mov
pop
pop
sub
dec
adc
pop
rcl
or
retf
pop
jae
cmp
popa
inc
push
sbb
iret
xchg
push
xchg
(bad)
movs
mov
sbb
bound
adc
pushf
add
or
pop
out
and
dec
xchg
inc
push
sub
(bad)
repz
sub
mov
pop
movs
inc
inc
fwait
add
pop
dec
push
xchg
out
xor
fs
push
(bad)
push
xchg
scas
je
scas
pop
pusha
xchg
test
dec
push
fidiv
jae
ins
cmps
clc
je
mov
mov
and
xchg
retf
add
cli
sub
adc
push
xchg
push
jbe
jns
mov
(bad)
stos
push
shl
and
ficom
movs
dec
xor
xor
mov
mov
retf
mov
adc
xchg
into
ss
jp
(bad)
cmps
cmp
sub
rcr
stos
dec
cdq
push
sbb
jnp
pop
hlt
outs
les
cmp
jecxz
xor
clc
sahf
lods
rol
aas
enter
xor
xchg
iret
loope
sub
inc
pop
push
sbb
push
sahf
ss
das
jp
mov
dec
or
xor
inc
xchg
imul
test
jmp
sbb
sub
or
and
int3
add
add
push
leave
sub
push
or
add
out
push
test
cmp
shr
outs
sbb
xor
sbb
dec
popa
mov
fbstp
(bad)
jmp
jle
push
lods
unpckhps
jl
je
jmp
dec
fldenv
mov
ret
adc
xchg
push
push
addr16
data16
xor
mov
stc
jo
loope
aas
movs
cmp
lds
lahf
add
add
dec
push
in
inc
test
or
xor
inc
in
das
add
cwde
dec
mov
lods
jl
mov
sub
aaa
push
icebp
push
pusha
es
pop
pop
jl
(bad)
movs
and
js
mov
jecxz
cli
mov
push
or
xchg
inc
and
scas
sbb
inc
sub
pop
and
in
cmps
mov
inc
test
bound
or
inc
add
add
mov
arpl
jb
sbb
fwait
sahf
ret
outs
loope
jle
jge
das
mov
inc
enter
jmp
pop
pop
shl
cmp
add
stos
push
mov
clc
inc
sbb
lods
or
jmp
add
gs
push
fcmovnb
imul
jo
inc
mov
push
or
mov
cmps
push
and
movs
test
pop
xor
(bad)
xor
pop
or
int
jmp
mov
inc
in
or
aaa
jnp
pop
adc
push
fild
inc
jne
pop
add
addr16
fwait
setb
sbb
movs
inc
push
cld
nop
fwait
mov
xor
pop
sub
ins
jge
std
sti
(bad)
aaa
movs
cmp
sub
loopne
into
or
cmp
addr16
and
shl
and
jo
leave
sbb
jmp
je
es
jmp
scas
jmp
pop
mov
adc
or
add
stos
add
and
push
(bad)
mov
loop
repnz
mov
(bad)
pop
dec
sti
popa
stos
ja
lods
dec
aad
push
rcl
or
outs
or
fcomi
retf
sub
lock
fisub
mov
out
mov
mov
inc
mov
xchg
inc
lahf
pop
cmp
retf
dec
gs
imul
imul
test
jp
jle
jmp
mov
stos
mov
fidivr
or
pop
jg
das
ins
repnz
cmp
mov
fstp
rcr
dec
xchg
pop
push
dec
in
jg
in
sbb
aam
das
jg
cmps
iret
fs
ds
adc
dec
test
mov
lahf
mov
jmp
adc
retf
(bad)
pop
sbb
ret
add
dec
xchg
pusha
in
fwait
add
cs
es
ret
aas
xor
les
pop
out
imul
out
sub
adc
xchg
and
inc
mov
sub
and
push
and
and
fldl2t
xor
fsubr
popf
xlat
mov
fimul
jns
outs
int
pop
inc
ret
dec
scas
popa
inc
fimul
push
fisttp
adc
jbe
jp
clc
(bad)
xor
pusha
retf
repnz
mov
cmp
push
fistp
das
mov
pusha
mov
or
enter
xor
les
nop
nop
add
cmp
in
lock
loopne
and
dec
pop
xor
sbb
dec
lea
(bad)
add
ret
adc
mov
inc
mov
jae
mov
lahf
xor
stos
sbb
push
mov
sbb
dec
pslld
(bad)
cmp
icebp
cmp
pop
mov
into
icebp
ins
mov
test
add
movs
pop
add
dec
lahf
sbb
xchg
push
pop
dec
enter
outs
cmps
xchg
xchg
xchg
retf
xor
add
mov
sbb
xchg
push
and
dec
dec
repz
mov
jmp
lods
bound
shr
ret
cdq
xchg
cmp
cmp
repnz
add
inc
jb
into
sbb
sub
shl
xor
adc
pop
or
sub
pop
sub
addr16
xor
or
cld
mov
int
mov
cmp
dec
pop
cmps
jp
inc
aad
adc
jp
xchg
add
in
or
and
dec
xchg
and
sbb
push
sbb
push
cmp
cdq
gs
inc
pop
test
pop
sub
inc
push
fs
das
lods
dec
inc
mov
mov
ja
js
mov
inc
icebp
jmp
rcr
pushf
pop
cmp
sub
push
icebp
inc
cmps
fst
inc
adc
inc
ret
jecxz
rol
cmp
cmp
in
sub
dec
mov
jmp
sub
add
cmp
sub
push
push
adc
xchg
pop
(bad)
mov
(bad)
outs
and
test
pop
mov
pop
jmp
outs
ret
call
mov
mov
add
mov
mov
jl
jecxz
retfw
cmp
out
sbb
mov
test
fistp
icebp
and
push
lds
(bad)
mov
(bad)
or
mov
pop
sub
inc
sar
xor
jl
pop
push
pushaw
mov
sar
inc
inc
es
pop
pop
jmp
mov
add
clc
mov
cmp
cmps
mov
sar
aaa
add
into
stos
and
test
xor
mov
pop
xlat
ds
mov
push
outs
in
arpl
pop
pop
mov
call
in
sub
into
inc
aaa
add
out
or
jb
and
mov
arpl
inc
inc
sub
and
in
push
xor
inc
push
enter
test
loopne
adc
sub
mov
push
lods
bound
fcomp
xchg
stos
call
cli
test
inc
xchg
and
sar
inc
repz
dec
pop
fadd
mov
sub
lahf
scas
iret
xlat
inc
jg
retf
adc
imul
cmp
cli
cmp
pop
fmul
call
jb
loopne
adc
cmp
xchg
mov
(bad)
push
inc
xor
xchg
xchg
jge
sub
lea
shl
cmp
enter
dec
and
jle
pop
xor
icebp
and
pop
xchg
into
je
fstp
adc
mov
(bad)
ss
jo
xor
adc
lock
shr
(bad)
push
mov
fisub
adc
in
jmp
add
outs
pop
inc
shr
xchg
neg
and
cli
cmps
jle
dec
jl
add
in
fst
sub
ror
fsubr
xchg
js
addr16
into
dec
pop
mov
and
es
sbb
inc
div
xchg
xor
ret
shl
push
push
std
mov
jae
movs
out
adc
fisttp
out
adc
fnsave
push
mov
(bad)
sbb
mov
cmps
push
add
test
sbb
add
and
mov
and
call
mov
jge
into
dec
cmps
inc
and
cmp
and
rcr
mov
rcl
cmp
push
push
call
aas
movs
mov
adc
cvtps2pd
jnp
pop
imul
aas
rol
xchg
retf
or
cmc
(bad)
outs
inc
push
push
sub
mov
enter
and
rcr
imul
cmp
pop
int
xchg
ret
and
cmps
je
aaa
mov
dec
fsub
jmp
popf
mov
cmc
or
jmp
ja
xchg
adc
cmp
in
(bad)
(bad)
icebp
or
push
cmovno
dec
jl
sub
cmp
inc
test
leave
mov
push
xor
adc
adc
clc
mov
push
fistp
retf
cmp
(bad)
and
dec
rol
stos
push
into
mov
aad
repnz
add
or
mov
jg
xor
dec
dec
aam
adc
adc
mov
mov
das
sub
xchg
movs
loope
push
ficomp
xchg
mov
gs
inc
jne
xchg
jo
mov
dec
dec
out
outs
sbb
clc
adc
sub
jae
push
pop
jg
pop
retf
gs
pop
jmp
xchg
sbb
ret
mov
out
jno
test
xor
xor
jo
pop
dec
jno
pop
and
jmp
add
xchg
rcl
push
jo
xor
mov
jg
mov
fsubr
sbb
ins
iret
stc
(bad)
sbb
jmp
mov
(bad)
mov
and
ror
or
ja
sbb
out
push
adc
or
arpl
repz
sub
jns
outs
scas
jo
xchg
adc
jmp
xchg
outs
int
fisttp
inc
xchg
mov
mov
and
dec
xor
stos
inc
imul
sbb
movs
jmp
jo
xchg
sbb
ja
aad
pushf
je
data16
fstp
add
ins
loope
dec
jmp
cwde
inc
sahf
sub
clc
pop
test
cmc
mov
inc
es
cmp
add
inc
pop
adc
add
sub
pop
add
movs
jl
push
add
imul
outs
xor
mov
mov
inc
mov
or
xchg
je
int
mov
stos
es
shl
rcl
adc
pushf
daa
pop
cmpxchg
ins
shl
dec
cmps
and
daa
pop
mov
aaa
bound
xor
int3
dec
sub
test
xor
(bad)
jl
mov
inc
xor
mov
inc
dec
mov
les
adc
adc
and
mov
jmp
sbb
dec
sub
inc
jae
xchg
mov
repz
sub
cs
lock
retf
outs
add
scas
push
movs
lock
cs
xchg
lock
and
lds
add
add
pop
fnstenv
in
add
jns
stc
and
sbb
std
xchg
push
mov
pop
mov
mov
mov
push
cmp
jne
(bad)
(bad)
add
popa
mov
call
sbb
push
and
pop
jl
add
push
dec
ror
daa
sub
and
fidiv
push
dec
inc
jmp
jbe
in
mov
dec
ficomp
enter
jle
jmp
sahf
pop
enter
dec
add
bound
test
xchg
fisub
les
or
mov
das
mov
clc
or
add
div
ds
pop
retf
push
jbe
enter
jmp
mov
leave
xchg
and
adc
or
mov
dec
jmp
jnp
fcmovu
icebp
(bad)
bound
dec
scas
test
push
scas
pushf
jmp
push
test
push
retf
push
popa
xchg
jmp
pop
(bad)
mov
add
out
sbb
adc
clc
scas
sahf
nop
retf
cdq
scas
cmp
nop
je
dec
xor
dec
repnz
xor
in
and
mov
clc
je
out
pushf
jp
int
inc
stos
adc
pop
push
cmp
add
addr16
jbe
jecxz
mov
aad
fsubrp
push
outs
aas
push
ss
inc
mov
mov
sub
sbb
push
cmp
bound
jle
inc
add
inc
(bad)
scas
mov
cmp
and
mov
and
xor
pop
es
dec
inc
rol
(bad)
in
icebp
inc
jmp
cmps
mov
sbb
or
adc
mov
push
cli
dec
in
imul
push
and
test
cli
int
iret
push
(bad)
xor
jne
out
(bad)
pushf
and
sbb
cs
ret
jbe
mov
ror
test
sbb
adc
cwde
stos
arpl
pop
imul
mov
mov
cld
iret
adc
cmc
mov
les
and
das
and
neg
mov
outs
adc
lea
adc
inc
adc
push
xor
pop
inc
jmp
jns
addr16
mov
aad
ss
ss
xchg
imul
icebp
adc
bound
sub
sbb
push
iret
cmp
push
xor
loope
xchg
cmp
jle
pop
pop
inc
mov
pop
movs
push
pop
aas
pop
or
pop
inc
sub
outs
loopne
inc
pop
retf
push
mov
mov
dec
pop
repnz
lods
aad
jg
retf
(bad)
cmp
mov
rcr
ds
lds
jmp
mov
mov
adc
mov
ins
retf
jbe
cmp
or
bound
mov
adc
pop
loopne
jns
movs
ins
mov
add
(bad)
mov
or
aad
cmp
dec
mov
xor
mov
stos
inc
jecxz
push
inc
popf
fst
push
and
ins
pop
jle
mov
sbb
pop
or
fcom
or
arpl
push
retf
add
pop
imul
das
push
fnstenv
push
sbb
inc
loope
cmp
push
out
outs
xchg
dec
and
xor
pop
jns
popa
inc
pop
mov
daa
cmp
jp
mov
fisubr
sbb
jmp
sub
dec
add
(bad)
push
push
sub
retf
mov
cli
nop
bound
retf
data16
jo
jecxz
rol
imul
dec
lods
sbb
iret
inc
ja
dec
in
test
inc
fsincos
repnz
shr
pop
pop
pop
sub
mov
mov
pop
test
push
pop
jp
mov
je
dec
dec
pop
push
arpl
dec
add
and
adc
nop
mov
mov
mov
pop
aas
jo
xchg
add
add
push
and
jcxz
scas
pusha
aas
and
popa
inc
jg
addr16
lahf
sbb
cmp
jmp
mov
lahf
cmp
xchg
inc
call
pusha
movs
mov
sub
pop
movs
cmp
clc
add
jmp
sub
retf
mov
inc
movs
xor
lods
xchg
cli
and
cmp
cmp
neg
inc
loope
fist
mov
and
sbb
gs
mov
repz
cli
pop
adc
out
sbb
inc
sahf
mov
inc
data16
cmps
mul
outs
test
call
mov
cmp
nop
mov
cmp
or
push
jmp
sbb
jb
mov
mov
jmp
sub
and
sub
ins
inc
call
outs
mov
sub
jno
jle
dec
les
sub
and
jmp
xor
inc
pop
push
and
cs
jg
out
push
jno
(bad)
xchg
adc
rcl
fstp
popf
xor
dec
dec
loope
cmc
cs
jp
adc
push
xchg
das
jns
mov
in
lods
xor
add
pop
mov
mov
push
mov
test
add
dec
fucomi
std
pop
or
(bad)
dec
addr16
sti
mov
hlt
mov
xlat
xor
sbb
dec
les
outs
dec
fsub
les
xchg
push
cmp
or
arpl
pop
mov
neg
retf
push
xchg
sbb
adc
jl
jns
xchg
popa
pop
mov
ret
mov
mov
or
js
adc
or
popf
cli
cmp
into
popa
imul
and
add
and
xor
daa
dec
scas
pslld
dec
dec
mov
sbb
dec
clc
fwait
push
pop
rcr
cmpxchg
mov
int3
lock
jg
lahf
test
mov
jno
sub
inc
sub
(bad)
and
retf
cli
mov
repz
push
fwait
xchg
pop
movs
repnz
daa
pop
mov
mov
shr
dec
loopne
in
sti
movs
das
mov
sub
push
adc
adc
les
fiadd
cmp
dec
or
dec
outs
mov
sbb
push
mov
and
fimul
scas
sbb
mul
daa
inc
scas
ins
push
push
jns
push
ins
in
outs
push
push
jns
test
push
imul
xchg
jg
adc
fstp
repnz
jmp
xchg
lods
or
lock
std
inc
cmc
lods
ret
hlt
in
fidiv
aaa
adc
adc
inc
mov
pop
sub
add
mov
mov
mov
(bad)
push
sub
lahf
sub
pop
ret
xchg
inc
and
dec
movs
enter
ret
jmp
dec
or
push
dec
scas
fiadd
bound
inc
dec
iret
cli
dec
add
fs
sahf
aad
fwait
xor
(bad)
dec
dec
cmp
sub
xchg
pop
sub
xor
push
ror
jmp
inc
jno
dec
shr
or
movs
dec
in
pusha
das
mov
or
data16
pop
mov
mov
inc
push
pop
adc
ror
push
outs
lea
aad
(bad)
out
push
inc
sbb
adc
cmp
loopne
iret
retf
mov
stos
mov
or
rol
mov
mov
and
icebp
adc
test
cmp
inc
lahf
ret
mov
mov
push
push
out
retf
pop
sahf
mov
shr
pop
les
loopne
jl
xchg
mov
jbe
dec
adc
xor
cmp
mov
(bad)
mov
sbb
fs
(bad)
or
gs
adc
rol
pushf
int
jo
cld
jl
fisub
pop
adc
sti
movs
rol
or
into
sub
int3
dec
scas
loope
div
sbb
movs
mov
dec
mov
pop
clc
dec
loopne
imul
es
add
mov
mov
ds
mov
cmps
cmps
xor
push
pop
imul
xor
sti
xchg
push
jbe
dec
in
nop
xchg
push
cmp
fst
adc
ds
jle
inc
jno
loope
fs
xlat
sbb
ret
movs
mov
sti
fisub
add
xor
rcr
pop
daa
out
out
xchg
lock
stos
fldcw
xchg
mov
lods
lods
ret
add
sbb
into
or
inc
sub
imul
mov
mov
pusha
inc
das
pop
push
inc
inc
add
jp
int
mov
imul
cmc
add
aaa
adc
cdq
cli
test
adc
pop
mov
in
inc
retf
retf
xchg
daa
vmwrite
add
jmp
sbb
inc
bound
mov
mov
arpl
dec
xchg
jp
jno
inc
stos
cmp
jl
dec
rcr
cld
or
jg
xchg
loopne
mov
inc
sub
sbb
jl
inc
loopne
inc
(bad)
call
stos
scas
inc
int
add
mov
ret
arpl
in
imul
push
mov
addr16
adc
jle
dec
mov
cmp
lods
ret
outs
scas
mov
jo
pop
cs
and
test
pop
pop
test
push
lea
jle
pop
cwde
cmp
mov
outs
inc
retf
test
bound
jbe
inc
js
shl
cmps
cwde
test
stos
mov
sbb
cmp
xor
mov
sbb
mov
dec
dec
int
sbb
sub
idiv
dec
ret
mov
cmp
add
aas
imul
retf
test
and
fwait
xchg
(bad)
cmp
mov
test
pop
lock
cli
fwait
mov
ficom
xchg
int3
stos
and
sti
mov
aad
xor
jbe
dec
xlat
fs
push
outs
lahf
and
inc
sahf
ds
jp
(bad)
fild
mov
xor
push
cli
pop
mov
movs
cs
mov
adc
push
push
into
xor
cmps
mov
xor
adc
iret
and
add
ins
cmps
lahf
or
cmp
xor
sbb
or
movs
sub
movs
repnz
ds
adc
and
lods
xlat
push
retf
adc
out
ss
out
pop
test
and
mov
mov
scas
or
or
xchg
sub
lods
and
mov
xor
mov
pushf
jle
push
daa
loop
fs
xchg
fisttp
dec
imul
push
rcr
into
call
cwde
shr
icebp
cmp
rol
jmp
(bad)
cmp
ins
mov
rcl
inc
cmp
mov
cmps
data16
adc
dec
sub
sub
mov
call
mov
jg
xchg
inc
cmp
fadd
cmc
sbb
cmp
jns
rol
or
lods
fld
fsubr
cmp
jo
bound
adc
or
mov
mov
inc
xchg
mov
pusha
xchg
ja
sahf
loop
jecxz
(bad)
fstp
jmp
xor
xlat
push
retf
push
push
jmp
push
ss
xchg
mov
inc
cmp
cmp
sbb
cmp
pop
add
pop
das
xor
pop
test
rol
shl
imul
mov
inc
test
adc
cmp
loop
loope
push
cdq
aaa
mov
sub
fimul
or
xchg
inc
mov
or
rcl
(bad)
jecxz
fild
call
add
push
retf
and
or
fisub
mov
adc
pop
(bad)
sahf
adc
cmp
loope
and
xor
inc
outs
mov
stos
fwait
add
adc
xor
pop
sub
aaa
arpl
xchg
lock
ss
pop
xor
push
nop
push
pop
gs
enter
xor
daa
dec
jecxz
dec
cmp
in
jge
mov
mov
into
inc
dec
or
sti
jl
daa
test
inc
mov
pop
push
shr
ds
add
pop
pop
test
cmps
pusha
dec
mov
jp
push
or
in
mov
dec
inc
pop
scas
and
jns
cmp
jnp
icebp
sahf
outs
pop
jl
sbb
push
inc
jmp
sub
lds
inc
or
aaa
movs
scas
push
mov
daa
test
cs
mov
mov
jp
add
movs
xor
add
mov
(bad)
add
lds
dec
test
or
outs
adc
cmp
mov
pop
cmp
pop
jp
test
pop
sbb
int3
dec
ss
das
fs
inc
mov
ret
hlt
es
xchg
mov
dec
mov
xchg
push
xor
and
test
dec
mov
ins
adc
aas
fdiv
mov
shl
push
repnz
jecxz
hlt
pop
xor
xchg
jns
add
scas
ret
je
adc
xor
jg
bound
cmps
stos
push
inc
mov
repnz
mov
pop
data16
sar
cmp
or
das
dec
sub
or
add
movs
sbb
inc
jns
imul
xor
arpl
repnz
mov
pop
movs
cmps
sub
(bad)
les
fwait
shl
icebp
sub
ins
jnp
sub
(bad)
jg
les
mov
scas
je
cmp
add
push
mov
xor
xchg
js
sbb
movs
add
fwait
or
sbb
or
adc
outs
mov
clc
jmp
scas
mov
fidivr
jbe
and
inc
mov
outs
jbe
outs
adc
out
adc
cmp
inc
push
mov
fidivr
or
imul
mov
inc
(bad)
ds
and
xor
scas
jg
push
jle
ret
ja
jbe
jg
pop
inc
adc
aas
inc
sbb
or
data16
cmp
push
mov
dec
sahf
bound
lock
ret
adc
mov
xchg
shl
sub
lock
cmp
pop
loop
jl
inc
outs
add
mov
inc
adc
inc
push
ss
xor
bound
add
movs
enter
nop
jb
cmps
xchg
sub
push
fld
nop
pop
enter
pusha
inc
jg
sub
and
mov
repnz
jb
and
cmp
jns
retf
and
aas
lock
xchg
inc
repnz
ins
push
repnz
sub
mov
and
aad
ror
mov
stos
sub
ret
mov
lock
lock
and
les
mov
js
cmp
inc
bound
retf
pop
pop
jb
add
or
mov
push
fld
pop
dec
sub
sub
push
jnp
and
lods
adc
popf
nop
mov
inc
jbe
pop
add
scas
es
movs
push
cmp
pusha
sbb
mov
stos
sub
dec
add
mov
inc
inc
mov
lods
dec
aam
mov
jno
cdq
stos
(bad)
mov
addr16
cmp
pusha
dec
dec
pop
pop
scas
fwait
inc
cmps
lock
(bad)
inc
jle
adc
xor
or
(bad)
xor
div
mov
sti
xor
sub
jae
jmp
pop
test
lock
xor
xlat
jl
pop
push
jg
popf
add
(bad)
(bad)
ins
ss
(bad)
sub
or
sahf
adc
and
mov
loopne
adc
push
xlat
loope
int
pop
int3
adc
and
stos
fs
add
xor
jbe
push
js
in
add
push
mov
sub
sbb
mov
and
add
iret
xor
ror
into
push
pop
aam
out
test
adc
xor
add
aam
pop
sub
cmp
xchg
sbb
jb
jle
inc
dec
nop
sbb
jge
jmp
ja
(bad)
pop
out
or
cli
loopne
push
int
scas
dec
push
sub
and
clc
xor
imul
loopne
xor
mov
add
sbb
push
aas
cmp
sbb
fcmovnb
cmp
cmp
push
mov
loop
mov
sbb
das
fsub
push
lods
xor
neg
inc
clc
pop
jbe
jmp
sar
aad
xor
jae
and
(bad)
jns
xor
cmp
jl
inc
jg
xor
loopne
(bad)
sub
inc
fs
add
cmp
(bad)
cmp
add
lahf
(bad)
mov
fsubp
mov
jl
push
inc
inc
mov
xchg
sbb
rol
adc
adc
fwait
mov
mov
retf
add
xchg
pop
mov
cmps
scas
mov
dec
test
scas
sub
adc
add
push
push
xchg
cwde
cmps
inc
imul
add
jle
stc
cmp
int
fstp
ret
mov
repnz
dec
sub
les
and
add
add
ds
cmp
ins
mov
pop
mov
push
pop
push
cmp
mov
es
add
dec
mov
arpl
call
mov
ins
mov
jae
jmp
nop
dec
dec
mov
(bad)
(bad)
out
push
jb
(bad)
jne
out
cmp
xor
jo
or
pop
mov
xor
inc
sub
ds
mov
xor
cmp
sbb
test
mov
sub
clc
jbe
int
adc
test
mov
(bad)
sub
test
adc
pop
out
fldcw
sbb
adc
mov
int
add
fwait
inc
inc
or
cmp
shl
and
add
out
sahf
nop
push
std
push
addr16
ror
push
bound
push
inc
jg
or
mov
push
inc
lahf
xor
leave
adc
into
outs
push
pop
and
xchg
(bad)
outs
loopne
mov
mov
sub
sahf
and
mov
and
outs
or
jb
int
ret
std
sub
repz
mov
mov
test
nop
sahf
dec
xchg
xor
xor
cs
test
inc
je
dec
(bad)
push
lods
bound
outs
push
pushf
test
pusha
xchg
mov
loopne
sbb
repz
mov
add
jle
lods
in
pop
add
mul
sub
push
pop
xor
sub
mov
pop
aaa
mov
(bad)
cmc
dec
jne
aaa
xor
sub
(bad)
mov
repnz
fisttp
mov
xchg
je
cmps
lods
fld
mov
xchg
les
sub
nop
sbb
cmp
and
stos
fidivr
cs
jle
cmp
sbb
and
push
jmp
scas
fild
add
popf
cli
in
add
cmp
data16
xchg
iret
in
cmps
jno
mov
into
or
xor
les
fsub
jle
dec
fist
into
bound
xor
mov
inc
dec
aad
das
fcmovne
aas
mov
xchg
jmp
fstp
xchg
cmp
add
cmp
inc
jle
adc
cmc
sub
and
mov
inc
ins
out
outs
pop
lahf
push
cmps
je
jo
and
mov
add
or
scas
adc
xor
mov
pop
aas
and
push
inc
push
jbe
add
(bad)
push
dec
fcom
js
in
aam
mov
mov
dec
cmp
push
ja
xor
int
sub
lahf
cmp
gs
int
daa
add
xchg
jbe
add
add
inc
fnstenv
push
push
add
outs
cli
cld
or
jb
push
je
into
dec
data16
mov
xor
(bad)
test
out
lods
and
leave
push
es
mov
in
loop
fldenv
sti
add
xor
jbe
pusha
or
add
pop
add
cs
test
mov
pop
jbe
lds
ins
nop
push
aam
or
add
or
neg
bound
mov
call
mov
cmp
cwde
loopne
aas
(bad)
popf
mov
adc
mov
push
in
fs
sub
mov
pop
mov
and
adc
sbb
push
outs
jmp
test
mov
je
cmps
movs
xor
xor
pop
jp
ds
push
sub
jp
or
adc
add
clc
test
mov
mov
pusha
or
aaa
data16
add
xchg
sar
jl
push
cmp
ret
sbb
shl
sub
lock
mov
cmc
and
and
stos
pop
cmp
sbb
adc
mov
and
adc
iret
sub
test
dec
push
(bad)
rcr
(bad)
aad
fs
push
xchg
and
stos
mov
bound
sbb
xchg
cmp
mov
movs
mov
aaa
loopne
dec
cmps
sbb
cmp
jns
ror
mov
sub
jle
cmp
repz
inc
inc
fadd
mov
push
add
hlt
retf
push
dec
xchg
xchg
cmp
or
xchg
and
stc
add
xor
data16
mov
dec
mov
pop
jo
icebp
jle
sub
inc
mov
xor
gs
push
xor
je
jg
push
add
push
sub
dec
dec
into
add
cmc
jmp
mov
fiadd
loopne
cmp
js
icebp
xor
inc
push
ds
add
clc
pop
dec
ret
cmc
xor
cmp
mov
out
gs
dec
popa
and
and
lock
clc
fild
inc
mov
add
fistp
pop
rol
sub
ret
(bad)
fnsave
pop
mov
adc
mov
push
sar
not
ret
clc
(bad)
or
mov
dec
std
jno
js
push
adc
jmp
sahf
dec
mov
sbb
inc
push
xor
je
xor
ss
daa
les
inc
stos
fstp
mov
mov
add
sub
mov
and
pop
cmp
iret
dec
mov
cmp
pop
xchg
rol
ds
call
outs
jnp
or
add
ins
cli
shr
stc
outs
adc
push
sbb
out
(bad)
pop
fidivr
cmp
scas
cwde
pop
ret
cmp
pop
sub
pusha
loopne
inc
sub
cmp
jp
mov
jmp
(bad)
dec
sbb
mov
pop
xor
jle
pop
or
push
xor
or
and
xor
mov
mov
mov
add
cmp
(bad)
fist
sbb
jns
push
push
pop
arpl
movs
xchg
push
dec
mov
stos
cmc
push
mov
and
in
or
inc
aaa
adc
cli
and
xor
xchg
and
pop
test
adc
and
dec
xor
xor
and
imul
mov
xchg
mov
arpl
pop
or
xchg
std
sbb
mov
mov
rcl
nop
xor
mov
jno
xor
or
inc
xor
ja
adc
sub
loope
sbb
xchg
lods
ss
loopne
addr16
and
stos
loope
inc
inc
xor
xor
pop
mov
mov
fmul
xor
mov
or
lods
sahf
fstp
mov
test
inc
fild
inc
push
pop
mov
cwde
(bad)
dec
pushf
or
mov
jmp
movs
ja
mov
push
cli
je
or
(bad)
push
inc
fs
ins
dec
xchg
cmp
(bad)
sbb
or
inc
pop
fdivr
pop
ficomp
adc
(bad)
dec
mov
and
mov
pop
jp
ret
fldcw
mov
fild
es
cld
jg
pushf
mov
mov
or
mov
enter
fist
lds
(bad)
cld
cli
movs
jmp
add
jb
jbe
inc
in
dec
push
and
xor
movs
lock
sbb
mov
adc
xchg
sub
pusha
xchg
pop
outs
jbe
inc
push
data16
sub
xchg
jnp
movs
push
adc
add
xor
cmovl
(bad)
adc
loop
add
hlt
xchg
push
cmp
xchg
add
repnz
fcom
pusha
inc
push
cs
sbb
cmp
or
sub
xor
or
sbb
and
outs
(bad)
add
loopne
stos
lods
add
es
cld
lahf
int
or
nop
jge
cmps
cmp
mov
(bad)
fcomip
cmp
inc
lods
add
add
int
xchg
xor
jg
dec
in
and
cmc
xor
pusha
sbb
or
aas
jp
inc
jb
imul
inc
pusha
sub
call
push
xor
(bad)
imul
or
adc
retf
outs
cwde
or
into
inc
jg
mov
in
xchg
mov
or
outs
ret
dec
ja
icebp
les
mov
cmps
popa
sub
mov
adc
lods
push
mov
sub
adc
iret
lea
xor
sbb
add
xor
add
jb
jbe
test
ins
push
xor
and
xchg
sbb
jl
out
pop
jg
fistp
pop
int3
sbb
scas
or
mov
dec
cmp
daa
inc
sbb
add
sub
addr16
std
xchg
mov
add
mov
pop
push
call
adc
bound
xor
cmp
outs
ins
add
jnp
mov
add
xchg
adc
and
inc
jnp
repz
loope
scas
les
call
push
pushf
ret
lock
call
ins
add
int
cli
(bad)
jbe
push
xchg
ins
dec
int
imul
inc
pop
mov
push
push
jae
(bad)
aas
push
mov
cmp
jle
or
mov
std
bound
jbe
xchg
(bad)
pop
mov
push
fdiv
add
xchg
(bad)
mov
jns
xor
retf
push
(bad)
aaa
or
lahf
fnstcw
xchg
pop
sub
jmp
mov
in
mov
das
or
xchg
in
sub
pusha
repnz
add
retf
xor
cmp
dec
add
jg
dec
pop
das
aad
imul
shl
pop
jle
cmp
inc
retf
cmc
cmps
cs
(bad)
xchg
inc
adc
sbb
push
adc
fistp
out
sub
cmp
nop
push
movs
cld
inc
add
add
xor
rol
ja
lock
fdivr
aaa
add
ins
adc
int
enter
rol
lods
jbe
sbb
sub
ins
ret
cli
imul
ins
push
mov
mov
inc
cmc
cmp
xor
movs
add
jecxz
inc
pop
adc
popa
push
sub
push
and
ins
ins
and
hlt
divps
es
stos
rol
dec
jmp
mov
jmp
mov
mov
jmp
sub
retf
jp
outs
adc
(bad)
mov
mov
gs
movs
mov
je
call
mul
jecxz
cli
push
or
add
pop
mov
aad
and
push
mov
xchg
hlt
xor
xchg
xor
retf
sbb
icebp
and
adc
pusha
xor
sub
into
gs
sbb
xor
stos
es
mov
push
cmps
push
add
in
mov
lods
jno
(bad)
jge
pusha
and
std
mov
fnstenv
sbb
add
push
mov
pop
cli
xor
scas
repz
adc
test
ret
add
test
dec
add
or
inc
lock
test
jmp
inc
pop
sub
pusha
add
xor
lods
xlat
xchg
push
lea
loop
(bad)
lds
ret
mov
test
push
icebp
sub
mov
daa
and
(bad)
push
adc
sbb
test
sub
scas
cmp
xor
mov
mov
inc
add
mov
ret
and
fwait
retf
pop
pop
ss
cmp
gs
inc
movs
cld
daa
mov
mov
jmp
mov
cmps
lock
dec
shl
repnz
call
jo
fs
mov
and
lds
(bad)
push
ficomp
mov
mov
dec
pop
mov
xor
retf
and
das
popa
or
mov
mov
loope
pop
scas
mov
cmp
data16
int3
aaa
js
and
jno
xchg
or
xchg
sub
ja
sti
xor
scas
add
cmp
inc
ret
ret
mov
jb
in
test
add
pop
xchg
jo
dec
leave
or
js
inc
add
lock
add
sbb
xchg
add
pop
scas
push
mov
sbb
mov
or
push
add
mov
es
arpl
loope
or
outs
mov
sbb
jo
jmp
outs
(bad)
ja
cmc
fidiv
push
push
dec
daa
dec
xor
xchg
lock
jbe
mov
(bad)
jbe
out
gs
jno
jnp
dec
(bad)
ss
retf
inc
leave
stos
and
pop
fnstcw
and
test
xchg
pop
repnz
scas
dec
ja
out
enter
xchg
xchg
aam
xor
mov
mov
cs
scas
dec
adc
mov
adc
stos
call
out
pop
into
add
or
pop
fs
call
adc
mov
les
lea
aad
push
inc
mov
jg
cmp
and
jb
mov
ret
adc
sub
lea
mov
dec
gs
stc
das
xlat
mov
xchg
out
mov
enter
add
icebp
mov
adc
sub
push
dec
inc
std
aaa
cmps
mov
mov
retf
inc
inc
inc
std
xor
push
xchg
cmp
cmp
stos
adc
pop
jnp
mov
stos
mov
dec
sar
lock
cmps
xor
arpl
push
rcr
lea
fadd
xchg
push
inc
mov
icebp
mov
mov
cdq
scas
push
sbb
mov
out
and
fxch
xor
mov
pushf
adc
sahf
mov
dec
add
hlt
adc
and
jbe
je
lock
mov
jnp
test
cmps
popa
mov
retf
mov
adc
call
pop
(bad)
mov
jmp
pop
imul
mov
cmp
jg
icebp
cld
cmp
nop
sub
mov
fistp
call
adc
fmul
cmc
cli
sub
in
and
stos
outs
pop
add
jbe
mov
into
ja
movs
add
mov
pop
cli
ins
jmp
js
retf
add
push
xchg
pop
sub
je
or
sub
loop
push
cs
fimul
jl
mov
cmc
gs
cmp
or
pusha
test
sahf
(bad)
fld
clc
xor
mov
dec
inc
push
add
jmp
fisttp
mov
sahf
inc
popa
xor
sub
pop
inc
test
xchg
jmp
je
mov
pop
push
into
lds
ret
into
pop
clc
add
sbb
or
xchg
cmp
dec
cmp
push
sub
pushf
cmps
repnz
adc
push
xchg
jbe
mov
and
and
ja
nop
dec
push
sub
rol
or
dec
and
push
fisub
xor
cs
push
push
ficomp
fst
jno
shl
sar
fucomi
cmps
lods
xchg
inc
daa
sahf
mov
shl
inc
fcmovb
stc
wbinvd
add
mov
hlt
aam
ficom
mov
mov
lea
cld
xchg
pop
cwde
cmps
cmp
add
mov
adc
movs
mov
ds
or
lahf
ins
sub
mov
cmp
jl
xchg
add
jle
jle
adc
jmp
pusha
mov
xchg
mov
pop
scas
xchg
mov
out
dec
or
icebp
idiv
add
lahf
inc
and
jo
ficom
aaa
xchg
test
inc
mov
adc
iret
pop
sub
cmps
push
pop
adc
push
loope
rol
pop
push
pop
push
sub
(bad)
call
mov
sahf
inc
call
mov
movs
sbb
push
jle
jmp
(bad)
je
sub
cmp
xor
(bad)
dec
pop
adc
std
mov
in
cdq
fimul
and
and
stos
or
retf
js
or
in
jb
mov
cli
mov
cmp
jge
or
neg
dec
inc
imul
mov
arpl
inc
ror
mov
push
xchg
jmp
ins
aas
cli
push
(bad)
mov
dec
push
fimul
(bad)
mov
adc
jmp
sub
jnp
test
(bad)
jge
fs
adc
add
(bad)
scas
jp
fiadd
(bad)
cmps
pop
cmp
jg
aam
iret
stos
sub
push
outs
push
(bad)
mov
push
daa
ret
(bad)
pop
repnz
dec
mov
ret
mov
pop
sbb
push
or
cli
jno
(bad)
pop
push
push
dec
call
jg
es
and
jle
mov
out
inc
xor
mov
push
inc
loopne
and
push
scas
dec
sbb
mov
mov
xlat
in
test
ret
fld
das
pushf
stc
inc
sahf
fwait
pop
cld
mov
int3
add
out
xor
adc
xlat
in
mov
lods
dec
ss
inc
icebp
and
push
ficomp
in
sub
or
and
or
retf
add
pop
and
loope
fimul
push
jmp
push
jbe
jle
inc
out
(bad)
or
add
and
gs
cmp
cmp
adc
and
dec
mov
jmp
into
pand
ret
jle
push
inc
(bad)
xor
add
push
(bad)
mov
mov
das
adc
stos
ficom
cmp
sub
fisubr
sti
into
push
add
xchg
or
xchg
xchg
adc
jae
stc
out
add
jno
jo
xchg
popa
(bad)
sub
add
sub
mov
sub
inc
xlat
movs
movs
push
mov
adc
div
les
mov
clc
cmps
dec
data16
mov
ror
sar
ds
add
pop
repnz
sbb
or
sub
sar
mov
and
jbe
ins
push
push
lods
inc
je
mov
push
jmp
xor
and
or
push
movs
mov
add
xor
imul
add
push
fcmovbe
adc
scas
pop
or
dec
and
das
and
cmps
data16
dec
inc
or
mov
mov
retf
mov
inc
sar
pop
xchg
mov
xor
adc
cmp
mov
mov
jo
gs
pop
sti
rol
cmp
xchg
sub
imul
xor
cwde
and
shl
mov
mov
inc
xchg
(bad)
mov
mov
clc
jb
xor
and
or
or
xchg
mov
xchg
lds
push
std
mov
push
push
jb
pop
or
fild
test
dec
inc
inc
pop
sub
or
adc
(bad)
jle
mov
pop
xchg
xchg
mov
inc
sbb
cwde
inc
jp
xchg
pop
dec
sbb
bound
mov
dec
test
push
pop
dec
mov
not
pushf
fdivr
jl
xor
bound
push
jg
pop
or
cmp
xor
dec
push
fmulp
popa
push
fimul
mov
scas
aad
dec
xchg
inc
pop
loopne
cmp
lock
xor
push
mov
push
dec
hlt
or
out
lods
push
jb
jecxz
or
add
inc
pop
(bad)
call
add
xchg
push
out
daa
movs
enter
dec
lahf
mov
cmps
bound
cmp
int
inc
inc
mov
mov
sbb
sbb
int3
jns
fisttp
xchg
xchg
xor
mov
pop
push
add
xor
xchg
lock
pop
push
xor
xor
inc
sub
add
push
push
retf
sub
xchg
retf
shl
sub
repnz
mov
dec
mov
dec
push
cmp
mov
in
cmp
dec
sub
fisttp
cs
pop
xchg
add
hlt
movs
mov
push
cmp
cmp
mov
lahf
mov
push
gs
mov
sub
shl
nop
aaa
sub
push
dec
retf
or
mov
cwde
xor
sub
cmp
gs
inc
dec
mov
mov
and
push
pop
sbb
dec
mov
jp
les
imul
popa
das
int
dec
fstp
cmp
inc
ss
neg
cmp
sub
ja
inc
movs
data16
jp
dec
pop
imul
stos
adc
aas
add
cmps
adc
push
js
mov
sbb
sub
jmp
adc
fwait
pusha
stos
stos
dec
fs
mov
mov
sbb
dec
test
mov
mov
xor
clc
cwde
dec
test
je
mov
jecxz
(bad)
xchg
mov
leave
xchg
inc
jb
rol
xor
jp
push
push
jg
mov
dec
add
ficomp
cmp
jmp
mov
mov
dec
dec
int3
cmps
or
or
lds
adc
test
or
and
adc
(bad)
sub
nop
stos
in
scas
lea
push
push
adc
add
adc
or
inc
and
dec
cmp
nop
mov
or
push
mov
aaa
shl
pop
jecxz
out
(bad)
lea
add
mov
inc
dec
push
jg
in
int3
stos
or
mov
push
cmp
adc
mov
imul
add
mov
lock
out
xchg
fcom
test
cmps
add
jns
clc
out
mov
cmp
dec
addr16
rol
es
jmp
add
hlt
push
jno
aas
icebp
lahf
mov
pop
dec
stos
mov
dec
sub
aaa
add
and
inc
add
adc
pop
mov
fild
fs
(bad)
or
pmaxub
push
into
aam
gs
cmp
push
fld
cmp
xor
mov
pusha
cmps
(bad)
repnz
out
dec
add
cld
cmp
movs
(bad)
pushf
lahf
add
push
dec
or
mov
pop
xor
cmovae
adc
mov
sahf
stos
add
cwde
inc
jbe
push
jle
es
mov
add
into
dec
and
loope
adc
jmp
cmps
cs
test
push
sub
or
repnz
test
jmp
mov
stos
mov
nop
xchg
push
push
pop
je
popa
fisub
add
inc
cmp
push
mov
aam
(bad)
inc
pop
addr16
adc
jp
cmp
pop
pop
push
lock
sub
inc
mov
or
sub
sub
cmp
push
mov
retf
or
aaa
mov
xchg
mov
cmp
das
rol
fcomp
pusha
sub
fild
mov
pop
add
or
push
fimul
mov
xchg
sub
inc
call
cmp
xor
cmp
cli
imul
fstp
pop
addr16
pop
sbb
pop
push
fld
imul
xchg
dec
dec
lock
inc
ss
add
xchg
inc
bound
sbb
push
mov
mov
inc
inc
jbe
inc
je
call
arpl
inc
retf
shr
inc
rol
add
pusha
outs
push
pmulhw
clc
lahf
xlat
mov
cmps
jle
xor
ins
retf
jge
cmp
pop
das
rcr
fstp
aaa
int
dec
stos
pop
sub
jmp
fwait
data16
in
sub
cs
rol
repz
test
sub
(bad)
stc
adc
mov
enter
popa
or
enter
(bad)
je
lahf
xchg
push
cmp
sub
mov
(bad)
dec
add
movs
retf
das
es
sbb
repnz
loop
sub
inc
dec
cmp
sub
add
outs
push
push
lds
in
jns
mov
or
xchg
retf
in
out
in
adc
addr16
adc
(bad)
push
lods
fs
ficom
hlt
sbb
and
or
inc
int3
mov
lds
pop
ffreep
push
dec
mov
or
pop
aas
or
jmp
push
pop
rcr
and
in
(bad)
jno
retf
sub
fwait
stos
pop
fxch
mov
sub
mov
popa
out
add
inc
ja
(bad)
dec
or
fisubr
jae
push
stc
sbb
fistp
pop
sub
jg
gs
out
shr
cwde
sbb
xrelease
scas
mov
dec
jae
dec
push
dec
push
xlat
jg
push
add
repnz
cmp
mov
jl
jmp
popf
xchg
xchg
add
shld
sbb
mov
mov
ss
ss
dec
adc
pusha
repz
jecxz
movhps
icebp
loop
das
sbb
or
scas
fidivr
fs
ja
inc
and
or
pop
loopne
jp
jbe
mov
adc
aas
sbb
cmp
jb
jae
push
xchg
mov
pusha
push
sbb
xchg
imul
call
test
cs
(bad)
aaa
std
mov
sub
cmp
inc
pop
inc
ror
cmp
(bad)
sub
mov
inc
shr
mov
push
adc
sub
ror
or
push
sub
and
mov
jmp
cmp
push
js
test
inc
pop
das
add
mov
cmp
xor
daa
or
or
gs
movs
inc
sbb
or
(bad)
push
out
mov
inc
push
add
and
mov
retf
push
arpl
call
push
iret
shl
mov
sbb
cmp
add
cmp
and
rcl
inc
mov
in
dec
jle
xchg
cmc
jo
mov
imul
ss
dec
mov
fcom
push
jmp
mov
dec
inc
jg
repz
or
cld
rol
test
jg
mov
in
dec
xchg
add
das
fiadd
sub
arpl
xor
fidivr
adc
push
jg
and
or
cmps
call
es
cmp
out
je
sub
jno
out
sub
adc
jns
mov
sub
push
sbb
xchg
xchg
push
xchg
pop
mov
sub
sub
ins
mov
loopne
add
inc
cmps
arpl
xchg
inc
pop
mov
inc
cmp
in
xchg
scas
imul
jno
in
jl
shl
mov
hlt
ret
test
lahf
iret
jae
pop
rcl
inc
arpl
and
call
or
sub
jo
pushf
retf
mov
sahf
ss
xchg
jg
(bad)
addr16
mov
pop
sbb
(bad)
pop
pop
cmp
lods
or
lock
aaa
test
inc
lods
push
inc
repnz
repz
pop
push
inc
or
test
sub
loope
and
call
push
ret
jle
lods
sbb
mov
or
or
dec
mov
sar
cmp
jae
push
(bad)
loopne
mov
xchg
cmp
ins
call
daa
xchg
push
js
dec
inc
scas
add
sbb
mov
and
inc
inc
(bad)
jle
imul
mov
add
adc
je
dec
cmps
loop
xchg
ret
jae
(bad)
jo
adc
xchg
xor
inc
adc
inc
dec
cmps
pop
pop
sub
ret
jg
bound
adc
test
aas
pushf
lods
loop
or
or
pop
push
push
xor
outs
repnz
test
adc
push
and
sbb
sbb
test
pop
mov
sbb
cmp
mov
mov
push
shl
xchg
iret
add
pop
mov
push
bound
mov
dec
dec
daa
mov
inc
pop
mov
sbb
cwde
add
fisub
aad
xor
ror
mov
pop
xor
cmps
mov
and
repnz
lock
mov
into
rol
test
mov
add
jmp
into
mov
mov
inc
cmp
jp
jns
out
and
xchg
push
in
call
mov
sbb
push
iret
push
sub
cmps
sbb
js
pop
push
dec
adc
loopne
xor
or
fwait
retf
xor
xor
sub
call
cmp
dec
pusha
(bad)
jle
pop
outs
jbe
loope
call
inc
cmp
jg
mov
es
or
push
add
cmp
out
jl
je
or
js
add
push
(bad)
adc
mov
lds
repnz
sub
or
dec
ret
adc
ret
push
xor
call
cmp
xchg
and
sub
mov
jmp
repz
sbb
jo
push
mov
js
and
aas
es
xor
pop
xchg
inc
inc
xor
or
nop
dec
(bad)
imul
jg
xor
or
cmp
pop
pop
sub
sub
jae
xor
call
mov
(bad)
jle
loope
mov
inc
fidivr
das
out
cmp
add
sbb
popa
shl
push
mov
xor
loop
jp
mov
xchg
cmp
inc
or
test
je
cmc
loop
out
(bad)
jne
xor
adc
mov
test
repz
adc
pusha
pop
out
enter
lods
push
je
mov
enter
push
fs
adc
out
stc
aas
and
jno
cmps
int3
sahf
mov
(bad)
sbb
mov
dec
jl
pop
(bad)
sti
sbb
push
add
add
sub
dec
dec
pop
data16
ins
imul
cmp
ins
mov
adc
cmp
mov
mov
inc
or
aas
fwait
in
enter
sahf
add
push
es
dec
mov
mov
ins
ss
sbb
inc
ss
int
data16
jo
add
sbb
adc
adc
enter
nop
mov
jg
das
bound
and
jns
and
adc
scas
push
(bad)
xlat
inc
loope
jmp
mov
outs
enter
add
jbe
push
fst
fdivr
pop
into
xor
bound
add
xchg
mov
fisttp
sar
pop
sbb
out
adc
xchg
lock
mov
int3
add
mov
mov
or
lock
retf
(bad)
int3
js
mov
push
daa
test
cmp
add
fs
cs
add
mov
xchg
cli
add
sbb
mov
bound
adc
(bad)
xor
sbb
icebp
sub
sub
or
out
add
push
mov
add
stos
jo
sbb
or
movs
cld
mov
pop
dec
mov
gs
or
pop
add
pop
xor
repz
add
fistp
ror
loop
inc
outs
push
xor
clc
add
dec
pop
dec
xor
lods
jecxz
std
adc
les
pop
push
sbb
adc
jmp
outs
xchg
mov
mov
jns
pop
call
cmps
add
adc
pop
adc
push
mov
add
sub
(bad)
cdq
clc
cmps
aad
push
and
loop
dec
mov
test
inc
cli
and
cli
mov
push
nop
push
js
jle
and
mov
test
repnz
test
int3
push
or
sbb
test
ret
movs
inc
add
lea
mov
mov
xor
and
pop
pop
dec
je
inc
daa
retf
lock
shr
adc
add
retf
sub
xchg
jg
cmp
iret
mov
(bad)
ins
mov
int3
das
sbb
dec
fmul
loope
bound
cmp
or
dec
add
and
pop
mov
inc
test
jmp
in
outs
test
sahf
sub
pop
inc
cmc
cmp
mov
xor
sub
push
adc
pop
or
(bad)
push
adc
xchg
jbe
repz
mov
jge
loop
(bad)
fild
dec
retf
movs
adc
ins
add
jle
movs
lds
or
xor
push
aas
and
or
mov
sub
rol
movs
and
add
(bad)
push
xchg
das
or
mov
pop
ret
cmps
or
pop
rcr
in
dec
add
mov
and
cmp
scas
sub
les
add
bnd
jbe
inc
push
adc
mul
mov
mov
clc
mov
movs
xor
dec
sub
(bad)
push
sbb
out
cvtps2pd
ror
push
push
outs
jmp
sbb
sbb
pusha
lods
mov
mov
leave
popf
hlt
pop
cli
pop
cmp
add
scas
mov
xlat
sar
sbb
sbb
mov
call
ror
xchg
push
mov
clc
pop
inc
aaa
popf
repz
xor
fwait
cmp
and
or
dec
fnsave
js
cmp
mov
jp
push
out
ror
ss
and
or
push
pop
aad
loop
push
lock
fsub
daa
out
add
xor
into
nop
cld
lds
ss
pop
pusha
mov
mov
cmp
add
test
jbe
dec
shr
pop
mul
fcmovnb
test
mov
inc
pop
movntps
add
sti
pop
inc
sbb
adc
pop
mov
mov
jns
scas
scas
mov
fadd
xor
push
retf
adc
xchg
push
fiadd
xor
cmp
or
add
and
jecxz
mov
jle
mov
cmp
jg
jo
push
or
retf
call
not
addr16
scas
stos
(bad)
jg
pop
outs
inc
inc
cmps
retf
push
cmc
pop
arpl
enter
aad
mov
add
pop
push
scas
mov
dec
cli
mov
movs
shr
mov
pop
hlt
inc
enter
xchg
call
pop
adc
movs
push
xor
test
sbb
mov
or
pop
mov
sbb
push
jp
and
sti
xor
fidiv
sub
xchg
call
nop
ja
xchg
cld
xchg
mov
icebp
sbb
sub
(bad)
gs
(bad)
lock
nop
retf
pop
mov
push
sub
mov
lods
retf
daa
jns
add
mov
inc
and
clc
das
mov
jl
int3
cmp
mov
test
cmp
dec
neg
test
cwde
and
call
das
gs
(bad)
ret
push
imul
pop
das
test
mov
cmp
cs
es
test
mov
shl
in
inc
je
jle
sbb
rol
int3
add
aam
xor
ss
scas
xor
xor
adc
dec
inc
clc
push
jae
pop
mov
aam
loopne
cld
stos
jp
mov
into
mov
adc
rcl
sbb
push
ins
xor
add
mov
sub
out
add
push
scas
lock
int3
jmp
pop
xchg
cmps
xor
xchg
sbb
dec
clc
fnsave
or
sub
cli
(bad)
(bad)
cmp
mov
dec
and
sti
cmps
cmp
push
sbb
cmp
jmp
in
push
cmc
fsub
sbb
cmps
mov
push
js
test
pop
je
jbe
imul
dec
daa
dec
adc
jp
out
rep
inc
mov
lods
fs
push
mov
pop
add
xor
jnp
push
and
cmp
vmread
push
outs
adc
and
inc
add
ficomp
das
jns
xor
and
push
adc
int3
arpl
mov
nop
test
fwait
ins
mov
movs
inc
push
jo
add
addr16
mov
stos
test
add
ins
ret
jb
pop
mov
dec
pop
(bad)
addr16
shl
xor
add
sar
push
imul
fs
aam
mov
jmp
aas
mov
sbb
push
lods
pop
and
imul
(bad)
and
xor
cmp
pop
test
push
ret
cmp
fild
sub
mov
add
mov
xchg
pushw
inc
mov
mov
mov
cmp
jmp
add
add
sahf
repnz
add
add
loop
fwait
or
and
push
jle
fimul
stos
scas
mov
rol
push
mov
dec
cli
mov
pop
or
jbe
fiadd
pop
xor
daa
js
push
xchg
rol
jbe
pop
xor
xchg
loop
or
pop
and
mov
nop
jno
ss
icebp
(bad)
movs
fs
out
jo
cli
adc
push
pop
pop
loop
sbb
cmp
lock
inc
mov
shl
add
push
adc
pop
mov
(bad)
mov
or
es
jb
jmp
add
mov
inc
xchg
stos
add
loop
sub
adc
mov
(bad)
outs
lahf
call
and
test
retf
cmps
cmp
mov
mov
mov
jp
jl
inc
mov
sbb
inc
xor
out
int
in
push
out
mov
jg
push
mov
push
push
adc
push
or
mov
ror
mov
out
pop
int
add
in
es
test
ror
ds
cs
add
and
mov
jb
or
add
adc
sbb
dec
shl
inc
adc
push
clc
pop
(bad)
pop
aas
test
repnz
loope
inc
mov
das
cmovg
iret
mov
les
adc
mov
ss
lods
pop
test
pop
das
push
add
dec
jecxz
lods
dec
push
push
pop
pop
dec
or
addr16
inc
movs
nop
bound
mov
inc
add
add
cmps
and
push
xchg
xchg
and
push
jne
stos
jmp
bound
pop
out
pop
rcr
push
(bad)
cmps
cdq
fidiv
outs
adc
pop
dec
xor
jle
imul
and
scas
sbb
test
add
jmp
das
jae
pop
dec
sub
xor
pop
add
push
or
or
movs
mov
ret
or
mov
adc
data16
inc
xchg
sbb
sbb
push
mov
ror
stos
and
xchg
lock
xchg
ret
or
xchg
test
fcomp
lds
shl
int
inc
jnp
ds
loope
jo
shl
les
repnz
icebp
pop
mov
mov
mov
sbb
add
or
pop
int
es
ds
std
jmp
or
leave
hlt
retf
into
and
dec
jl
pop
add
xor
shr
inc
adc
xor
push
xchg
lods
sub
inc
call
cmp
mov
mov
aam
imul
mov
jle
or
xchg
je
in
adc
add
xchg
imul
js
jmp
mov
pop
fistp
lock
aaa
add
test
ss
retf
pusha
lods
xor
outs
arpl
mov
inc
aam
(bad)
dec
bound
adc
pop
adc
or
inc
mov
push
jp
gs
jl
jg
stos
xchg
into
mov
xchg
xor
ins
push
or
sbb
movs
jl
inc
(bad)
fnstenv
cmps
das
jo
dec
pop
mov
in
mov
pop
cli
hlt
sub
push
xlat
ret
add
push
dec
lea
or
addr16
cmp
jno
mov
xchg
mov
mov
daa
jmp
pop
test
rcr
adc
retf
ins
jp
inc
cmp
mov
sub
stc
dec
loop
ret
adc
jg
ret
out
aam
scas
pop
and
aas
xchg
lods
cmp
ja
ds
das
push
sbb
pop
out
stos
cmp
cmp
and
fwait
pusha
push
or
outs
xor
push
pop
jo
addr16
and
add
and
mov
out
xor
mov
and
push
adc
cmps
pop
sti
pop
sbb
xor
pushf
cmp
repnz
push
jb
jge
cmp
test
in
push
and
pop
pop
mov
mov
push
xchg
add
test
ins
je
add
cwde
imul
bound
sub
or
mov
push
and
adc
dec
sbb
popf
jne
mov
xchg
ficom
xchg
dec
mov
repnz
scas
jmp
push
jo
or
pop
stc
ins
ror
stc
in
scas
mov
popf
loope
cmps
xchg
and
dec
lock
dec
sbb
scas
cmp
mov
push
jb
sbb
aaa
sbb
sbb
fwait
stos
dec
retf
push
dec
jp
add
lock
sbb
call
scas
sub
sbb
pop
into
or
pop
lods
add
push
push
repz
add
jp
push
add
push
clc
jmp
sbb
mov
scas
pop
cli
mov
push
loope
xchg
xchg
fcomp
fnstenv
iret
sub
das
dec
jne
push
psubw
pop
inc
xchg
ds
sub
es
enter
jnp
scas
pop
inc
fisttp
lock
sti
xchg
mov
mov
xchg
aam
inc
out
retf
add
xchg
outs
(bad)
jmp
call
adc
stc
das
cmp
out
push
push
xchg
pop
pop
mov
mov
outs
dec
loope
cs
test
xchg
mov
pop
or
out
inc
stos
mov
shl
dec
ficom
sub
or
call
retf
xor
inc
das
pop
mov
pop
loop
xor
call
mov
adc
sbb
xor
jle
sub
(bad)
hlt
cmps
mov
lock
aad
aas
sbb
mov
gs
add
dec
cmp
les
mov
bound
jmp
in
jae
dec
or
lea
xor
out
fisttp
or
inc
popf
mov
adc
push
ss
and
gs
(bad)
stos
aam
pop
inc
ret
loopne
cmp
adc
sub
mov
repnz
or
pop
sbb
and
add
mov
dec
cmp
push
nop
adc
out
lea
fistp
das
push
in
xchg
xchg
retf
mov
call
inc
das
xlat
hlt
imul
sub
sbb
cmps
push
dec
scas
gs
sbb
int
xchg
jle
dec
and
popa
push
sub
mov
sub
mov
pop
push
popf
jmp
fwait
mov
sbb
retf
push
bound
imul
sub
xor
repz
mov
bound
push
enter
dec
test
test
or
mov
daa
scas
xor
or
inc
jnp
or
inc
pop
test
stos
add
xor
pop
stc
pushf
loop
out
test
jle
jl
or
xor
and
lahf
xchg
into
or
aas
xor
test
xor
(bad)
(bad)
xchg
inc
test
clc
hlt
push
fstp
mov
adc
inc
mov
mov
jge
xacquire
into
mov
outs
lods
lods
stc
stc
hlt
add
bound
mov
hlt
cmp
in
add
lods
inc
lods
pusha
test
xchg
push
xor
push
xor
mov
cli
fisttp
and
mov
scas
sbb
xor
pop
adc
and
mov
and
or
pop
mov
mov
and
adc
jbe
push
and
aaa
ficomp
sub
mov
arpl
sbb
sbb
add
or
(bad)
mov
jle
(bad)
sar
sub
push
lds
mov
xor
push
mov
sbb
sahf
bound
mov
push
or
rcr
ja
mov
mov
clc
cmp
cmc
xor
jnp
pop
mov
jg
dec
mov
les
clc
shl
xlat
dec
lahf
adc
or
nop
xchg
dec
add
add
sbb
push
sub
and
ret
ret
int3
sub
push
in
in
clc
jno
dec
jg
iret
push
jmp
mov
pop
pushf
mov
lock
mov
loopne
arpl
dec
fs
mov
jl
and
psubq
mov
cmps
dec
int3
in
rcl
ror
and
push
scas
adc
cmps
lods
mov
or
sbb
pop
pop
inc
sbb
fdivp
and
add
(bad)
loopne
es
test
xchg
mov
pop
push
jmp
inc
dec
pop
and
pop
adc
cmp
inc
aas
or
js
dec
pop
(bad)
out
retf
push
adc
scas
jne
(bad)
cdq
aas
push
add
add
dec
scas
ja
adc
or
pop
outs
mov
inc
outs
ret
popf
aad
inc
sub
pop
push
outs
por
jnp
or
pop
les
and
push
xchg
push
and
pslld
xchg
cmp
jbe
push
(bad)
push
test
retf
leave
pop
inc
jmp
xor
add
mov
inc
jmp
in
mov
retf
push
rcr
pop
adc
jmp
jmp
test
movs
ds
push
mov
jnp
aaa
iret
or
leave
shl
inc
push
push
add
nop
xchg
test
xor
cmp
xchg
dec
ja
shr
inc
cmp
adc
mov
fwait
retf
and
add
dec
mov
jle
sbb
jle
cmp
ret
or
jae
stc
dec
xchg
stos
je
je
cwde
push
les
pop
aad
push
sbb
pop
out
mov
adc
push
cld
mov
dec
xchg
pop
mov
es
int3
cmp
inc
inc
push
test
push
xor
fs
xchg
inc
dec
popa
mov
call
repnz
shl
ins
mov
into
mov
cmp
loop
ror
cmp
sbb
mov
add
jno
mov
push
mov
xchg
(bad)
rcl
pop
aad
cmps
xor
pop
js
fst
inc
jl
loop
push
scas
ja
out
xor
scas
jo
inc
or
push
ds
sbb
inc
sub
adc
jp
adc
and
es
mov
add
fild
cmps
add
mov
loope
add
push
pop
lahf
mov
pusha
movs
jno
out
mov
rcr
imul
push
adc
add
add
xchg
dec
cli
popf
cmps
pushf
sub
mov
mov
sahf
and
cmc
jmp
cmps
sysret
or
ds
jbe
shl
jmp
mov
daa
(bad)
stc
add
call
fdivp
or
in
push
mov
inc
arpl
xor
push
push
mov
mov
xchg
fwait
cli
mov
add
add
test
add
ret
jbe
sar
sar
out
sbb
imul
cs
cwde
cmp
dec
sub
xchg
inc
rcr
adc
or
scas
adc
inc
pop
mov
ret
jp
lods
jne
js
and
push
sbb
mov
push
jne
enter
inc
ds
loopne
mov
add
fld
nop
ficomp
in
dec
jmp
nop
xchg
pop
pop
out
dec
out
retf
popa
dec
cmp
add
mov
std
jmp
cs
ins
xor
cwde
ja
cmp
and
dec
add
pop
pop
pop
in
mov
into
ret
push
pop
call
xchg
mov
dec
test
mov
pusha
or
mov
leave
adc
push
ss
shr
jae
popa
inc
jmp
push
sbb
fmul
push
je
rcr
inc
out
das
adc
hlt
ds
out
pop
loopne
and
jg
adc
jmp
scas
imul
inc
add
pop
(bad)
cmp
retf
adc
add
or
inc
int
push
jl
outs
les
into
popf
dec
imul
sahf
pop
adc
xor
jg
addr16
retf
add
retf
xor
mov
and
xchg
loop
jmp
or
jmp
jne
sub
mov
shl
mov
and
adc
or
sbb
dec
mov
jnp
cli
rcl
scas
mov
add
aaa
inc
aaa
push
aas
lods
push
fdiv
pop
or
imul
add
jmp
jmp
into
jle
es
imul
mov
aaa
mov
loope
lahf
rol
push
mov
sub
int
imul
mul
fist
jl
jb
in
lods
dec
jae
pop
lock
scas
loope
mov
cmp
(bad)
push
fsin
mov
adc
ja
loop
nop
inc
mov
push
mov
pop
jo
dec
jecxz
call
xchg
mov
push
nop
pop
push
fs
jecxz
pop
dec
push
shr
sbb
push
(bad)
popf
push
xor
push
push
cld
xchg
(bad)
(bad)
add
dec
movs
scas
or
movs
dec
sbb
sub
adc
mov
or
push
dec
into
dec
push
repnz
sbb
xchg
cli
fisub
mov
cmp
out
inc
jmp
les
pop
stos
push
scas
mov
push
cs
div
adc
jp
dec
add
cwde
cmps
fwait
jmp
faddp
xchg
sub
dec
jmp
jae
lahf
or
push
jl
sub
arpl
sbb
js
dec
xlat
add
std
(bad)
loopne
into
je
ret
ja
adc
(bad)
ret
inc
sbb
and
daa
sub
cmp
ret
add
loope
pop
or
add
ficom
add
nop
lock
fwait
xor
or
(bad)
add
mov
jle
sbb
and
pop
inc
loope
adc
sbb
mov
mov
dec
mov
sahf
mov
ss
mov
inc
ins
pop
adc
fcomip
jmp
pop
rol
fwait
add
mov
nop
inc
ret
cmp
sub
ds
in
out
and
cmps
stc
xchg
pop
(bad)
sub
xchg
add
fnstsw
call
push
dec
imul
dec
cwde
inc
or
xor
and
or
cmps
sub
or
popa
mov
sbb
and
jmp
sbb
out
fwait
out
sbb
jbe
test
xchg
movs
mov
ret
pop
add
pusha
dec
loopne
jp
imul
or
cmp
cmp
jp
je
out
jle
add
pop
pop
push
pop
and
pop
test
stos
mov
shr
outs
retf
ret
movs
rol
lods
add
inc
xchg
or
scas
sbb
cmc
xchg
xor
jl
test
sbb
popa
pusha
pop
xor
sub
sub
ds
retf
mov
shl
lahf
fidiv
retf
mov
fidiv
lock
sbb
ss
test
push
xor
fwait
imul
cmp
sbb
jmp
repnz
icebp
shl
or
cmp
int3
stos
das
cmp
imul
or
sub
xor
xchg
pop
jp
mov
fcmovu
push
xchg
push
out
push
ja
xchg
add
mov
fldcw
pop
fdivr
movs
enter
dec
inc
inc
push
pop
adc
or
jg
aaa
mov
xor
mov
ds
bound
xchg
mov
ret
cmp
test
lahf
add
pop
jmp
repz
add
push
xchg
aas
aas
pop
xor
cmp
xchg
and
jae
mov
and
sbb
cmps
mov
mov
fisub
pusha
or
add
repz
call
rcr
aam
out
cmp
jg
dec
jne
loopne
(bad)
push
cmp
pusha
scas
cmp
mov
sub
xor
fstp
clc
xor
sbb
clc
ss
mov
add
cmp
push
loop
adc
jmp
push
aaa
xor
ret
sbb
aam
(bad)
ficom
(bad)
iret
cmp
aas
gs
call
rcr
ror
mov
mov
cmc
fld
ja
cs
scas
adc
or
sbb
shl
dec
xchg
cmp
fistp
add
sahf
mov
adc
sub
into
pop
inc
outs
movs
push
fwait
js
lods
lock
jae
adc
les
jmp
pop
xlat
adc
(bad)
mov
and
es
ins
xchg
xor
or
inc
jge
inc
imul
pop
mov
ins
imul
test
cmps
push
aaa
shl
pop
jecxz
ror
pop
(bad)
jge
inc
scas
inc
(bad)
outs
or
lea
xor
add
pusha
mov
pop
xchg
hlt
mov
dec
cmp
pop
or
xlat
jns
sub
xor
test
add
fcom
mov
js
outs
hlt
repnz
adc
jb
sar
fst
cmp
dec
(bad)
pop
dec
jne
jne
or
dec
or
and
fidivr
test
ss
jnp
dec
push
scas
mov
and
jne
outs
push
inc
outs
test
adc
cmps
scas
inc
ins
mov
adc
popa
test
lock
pop
out
retf
add
and
jb
and
fist
sub
test
fiadd
add
fcmovb
(bad)
pop
sbb
test
pop
test
pusha
xchg
push
cmp
ds
dec
out
mov
jp
mov
jl
into
nop
ins
test
and
or
pop
cmp
lock
rcr
sub
sbb
and
pop
mov
lea
lea
bound
es
mov
mov
inc
repnz
sbb
cmp
sbb
inc
sub
mov
dec
aad
jb
sub
test
mov
sub
dec
clc
or
add
js
cmps
dec
mov
or
mov
xchg
retf
push
jo
and
dec
imul
dec
packsswb
call
push
inc
test
jo
inc
rcr
jle
jl
push
sub
and
mov
jmp
or
retf
or
sub
dec
or
add
inc
fcom
and
cld
outs
cs
ins
sbb
and
jmp
xor
je
cmp
ret
mov
push
add
cwde
cli
sbb
int
mov
jp
xor
icebp
repnz
inc
ret
or
std
or
jbe
mov
push
aaa
add
jb
sub
xchg
push
add
push
dec
mov
mov
pop
dec
sub
outs
xchg
pop
mov
jb
mov
bound
dec
aas
push
xchg
sar
movs
sbb
xlat
stc
push
nop
loope
or
jb
fcom
jg
sub
dec
xor
loope
jnp
jnp
or
cmp
and
inc
or
leave
mov
vdivss
push
aaa
push
outs
push
pop
jbe
inc
bound
(bad)
and
sub
pop
adc
xor
(bad)
mov
call
outs
adc
inc
call
or
or
sub
es
and
sbb
cmp
out
add
jl
mov
inc
pusha
ja
xchg
das
pop
add
mov
push
adc
xchg
pop
clc
push
add
inc
stc
or
sub
mov
call
sub
push
add
push
pusha
dec
repnz
push
or
mov
mov
mov
cmp
in
sbb
dec
dec
mov
adc
adc
das
lds
xor
ins
dec
adc
std
inc
pusha
cmp
es
adc
dec
ret
dec
dec
pop
sub
cwde
or
cmps
mov
jo
push
and
and
sub
gs
sub
xchg
or
jns
sbb
pop
mov
adc
add
es
push
and
ja
jno
mov
out
jmp
fdivr
sbb
xor
inc
xor
mov
mov
sti
push
aaa
test
sbb
repnz
test
push
dec
push
inc
std
jg
dec
aam
dec
pop
ret
jmp
stos
inc
(bad)
xor
fbld
je
or
mov
clc
inc
sub
jne
fistp
sub
daa
nop
icebp
and
push
cs
and
push
cmp
test
inc
add
sahf
sub
or
lahf
dec
loope
adc
xor
inc
loop
mov
xchg
cli
sub
icebp
mov
add
scas
sahf
jbe
dec
jecxz
mov
fisttp
adc
icebp
add
add
add
cmps
mov
inc
mul
mov
mov
ins
rcl
pop
shr
sahf
add
inc
std
repnz
stc
test
mov
and
ja
test
fild
bound
sub
dec
fild
aaa
sub
push
sub
cmp
movs
scas
pop
test
test
addr16
jo
scas
and
inc
xchg
xchg
sub
loopne
push
popa
push
sahf
push
adc
test
dec
adc
xlat
mov
aaa
cmps
(bad)
ror
adc
add
adc
popf
mov
cld
(bad)
push
mov
and
mov
adc
add
inc
jo
dec
sub
xor
adc
call
mov
jmp
or
sub
push
mov
ins
(bad)
sub
mov
adc
inc
push
icebp
or
imul
push
ret
ret
pop
mov
mov
jp
pop
xchg
outs
add
mov
add
adc
mov
pop
dec
cmp
(bad)
scas
push
pop
mov
sbb
mov
sahf
push
pop
hlt
add
cmps
lahf
inc
sbb
jmp
in
mov
repz
aam
inc
test
add
les
push
repnz
mov
cmps
pop
jecxz
pushf
sub
das
repz
dec
xor
or
xchg
push
mov
xchg
pop
sub
or
dec
(bad)
cmp
jbe
daa
and
add
rcl
and
mov
ins
lahf
push
cs
mov
xor
cs
dec
movs
dec
pop
jnp
movs
fwait
add
and
mov
dec
jnp
or
int
dec
adc
or
mov
and
xor
call
inc
popa
mov
inc
inc
(bad)
fisttp
sbb
adc
nop
xchg
nop
int
lock
xor
lock
dec
or
cdq
mov
jg
mov
jno
jbe
inc
xchg
jp
push
mov
jle
retf
inc
or
mov
nop
cmps
in
xor
cwde
mov
push
sbb
cmp
rcl
mov
push
rcr
cs
rcl
mov
mov
xchg
inc
sub
xor
out
mov
jle
jne
push
es
mov
or
mov
sbb
mov
sub
dec
and
scas
ins
jbe
(bad)
repnz
jg
push
adc
and
and
adc
jecxz
std
or
outs
mov
es
ja
fimul
push
inc
cli
pop
add
mov
xchg
jg
jmp
in
or
push
mov
mov
push
dec
xor
sub
clc
ror
nop
add
ret
or
inc
scas
xchg
rcl
cmp
xchg
xchg
mov
sub
imul
pop
scas
ja
inc
ins
js
or
push
imul
or
mov
nop
outs
aaa
sbb
popf
xor
cld
cwde
mov
sahf
push
sbb
pop
jg
and
jp
sbb
fstp
ins
push
inc
inc
jl
lock
inc
xor
(bad)
shl
popf
les
imul
pop
es
sub
mov
inc
repz
mov
lahf
adc
repz
pop
push
sbb
cmp
repnz
lods
fsubr
jmp
push
sbb
push
int
mov
(bad)
pop
jne
adc
inc
xor
out
scas
jl
cmps
mov
sub
cmp
imul
ss
xor
pusha
xor
add
mov
pop
adc
sbb
dec
mov
fild
add
inc
push
and
inc
mov
aas
fwait
stos
cmp
sti
inc
dec
icebp
mov
push
movs
push
mov
pop
push
test
or
push
(bad)
jbe
inc
add
inc
or
inc
cli
sbb
repz
ds
push
mov
clc
shl
mov
mov
sbb
mov
outs
fsubrp
and
xor
adc
mov
gs
or
fmul
push
add
inc
mov
imul
int3
fbstp
cmp
int
push
jge
mov
rol
out
es
jg
test
add
inc
adc
mov
or
dec
popa
loope
and
outs
out
cmp
adc
push
push
and
test
stos
xor
sbb
add
ds
inc
mov
sbb
and
lea
xor
mov
dec
loope
jle
sbb
mov
cmp
jae
ret
pop
or
les
loop
adc
stos
jno
jp
pop
push
add
clc
or
xor
xor
test
popa
not
inc
inc
or
mov
stos
into
jb
aad
fdivr
pop
movs
mov
dec
adc
xor
jle
rcr
add
cmp
nop
test
xchg
retf
mov
jne
cmc
in
add
bound
repz
xchg
fadd
pop
xchg
mov
sbb
test
pop
push
push
mov
and
ret
daa
bound
inc
es
add
add
movs
xchg
inc
push
shr
pop
push
mov
xchg
xchg
aas
pop
retf
lahf
ror
retf
jmp
add
sub
inc
daa
xchg
clc
and
adc
iret
stos
adc
(bad)
addr16
fisttp
xor
add
push
aam
xchg
and
mov
push
pop
clc
and
adc
pop
aam
daa
xor
pop
jg
dec
std
in
ss
mov
pop
push
add
add
in
js
mov
or
popa
sub
(bad)
adc
sub
out
dec
or
mov
stos
or
push
imul
aas
sbb
lock
mov
push
adc
mov
push
ror
adc
mov
push
test
push
sbb
cmp
add
shl
das
push
push
(bad)
pop
leave
repnz
sbb
xor
push
pop
(bad)
sub
and
push
or
push
inc
mov
and
jo
std
mov
popa
ds
xor
inc
clc
sub
cmps
mov
and
ins
mov
mov
fidivr
cmp
add
and
or
test
cli
pop
jb
mov
rcl
sub
out
xor
xor
popa
sub
mov
cli
adc
push
cmp
inc
bound
or
and
push
int3
jb
mov
cli
aas
mov
out
stos
loope
movs
or
inc
jle
push
ret
dec
fisubr
push
loopne
leave
xchg
adc
mov
jg
jg
fild
ret
jmp
dec
jl
scas
jg
retf
imul
js
pop
fist
ror
inc
xchg
jno
fstp
repz
aaa
add
loopne
sahf
repnz
(bad)
xchg
mov
push
data16
das
aaa
adc
adc
add
mov
das
popf
daa
xchg
inc
jb
mov
add
call
outs
jb
sub
fsub
mov
mov
mov
inc
inc
and
sbb
pop
into
sbb
data16
not
pop
mov
mov
inc
daa
jae
data16
push
and
pmovmskb
pop
aam
mov
jae
ins
loope
adc
cmp
adc
call
retf
sub
cmp
es
mov
(bad)
fbstp
jbe
scas
xchg
dec
jb
push
cmp
iret
test
bnd
call
adc
sbb
dec
jmp
aaa
ins
lods
xchg
hlt
mov
retf
cmp
loopne
mov
dec
push
sub
icebp
push
add
bound
jbe
cmp
pop
pop
call
stos
xor
faddp
test
fnstcw
js
inc
ret
repnz
(bad)
add
loop
shl
jns
add
es
mov
xchg
cmp
ror
pop
and
stos
push
std
mov
mov
mov
add
dec
movs
mov
stos
jp
dec
and
add
adc
jb
pushf
imul
pop
add
cmp
mov
arpl
add
mov
clc
push
xlat
mov
dec
pop
or
or
into
repnz
test
cmp
add
sahf
int3
or
fbld
add
mov
add
mov
jns
loop
aas
dec
ret
mov
or
dec
or
sti
movs
and
inc
add
loopne
repz
mov
adc
jg
sbb
dec
xor
loopne
fsin
or
xor
inc
push
push
mov
jl
sbb
pop
ds
jg
test
call
xor
or
ss
push
in
ds
add
adc
mov
dec
adc
push
adc
sub
aaa
pop
dec
fmul
and
cli
icebp
stos
xor
in
push
call
out
mov
and
mov
mov
and
push
sbb
inc
push
jb
pushf
mov
sar
or
mov
mov
cmp
pop
into
jg
or
mov
ss
dec
fmul
push
inc
call
rol
pop
(bad)
mov
fild
cld
jnp
inc
sub
inc
xchg
ror
loopne
dec
mov
jae
dec
add
xor
xchg
or
add
push
jp
js
int3
retf
mov
stos
add
gs
push
mov
pop
bound
mov
or
jle
inc
pusha
cli
adc
clc
outs
jbe
nop
(bad)
xchg
push
adc
mov
test
sub
mov
rcl
ficomp
fnstenv
imul
inc
cli
call
push
mov
sub
push
retf
leave
ret
call
pop
ret
pop
pushf
mov
dec
mov
retf
fwait
sub
xor
imul
push
ret
je
dec
arpl
add
jle
lods
ins
mov
and
nop
(bad)
dec
xchg
int3
lods
push
(bad)
sbb
(bad)
fnstenv
mov
mov
xchg
push
mov
(bad)
aaa
adc
(bad)
push
test
mov
and
hlt
jb
push
add
or
lock
or
std
xor
ds
loopne
push
es
add
xchg
jp
lds
jle
ret
jp
sbb
or
push
sbb
sbb
xchg
cmps
or
shl
push
cmp
cmp
movs
or
push
sub
jnp
pusha
pop
cmp
popa
aaa
dec
stos
inc
or
loop
add
movs
cmp
ins
push
or
pop
sub
push
int
pop
jmp
cli
mov
(bad)
cmc
punpcklbw
loope
mov
dec
inc
push
nop
mov
js
push
outs
popf
and
jge
out
inc
clc
cmps
jecxz
adc
jb
ror
jo
rcl
mov
mov
call
rcl
aam
retf
cmps
inc
mov
neg
mov
adc
push
jnp
lods
xchg
outs
lock
or
in
in
sbb
jno
into
pop
jns
mov
pop
xor
pop
ret
mul
add
add
mov
bound
data16
add
sub
out
jnp
jmp
inc
push
jecxz
or
mov
mov
loope
cmp
sar
fidivr
ret
test
imul
mov
(bad)
cli
mov
out
cmp
dec
mov
push
call
and
adc
mov
inc
jns
inc
add
rcr
call
rcl
ret
and
(bad)
rcl
je
mov
mov
dec
(bad)
cmps
arpl
cmp
push
dec
cmpxchg
fcmovnbe
or
je
out
pop
inc
push
fadd
xor
mov
ret
pop
fcomp
add
cmp
pop
jmp
(bad)
mov
pushf
fxch
xor
sub
cmp
lds
fst
jne
pop
mov
mov
push
jmp
(bad)
dec
xor
jns
into
mov
shr
popf
dec
into
ret
pop
loop
jnp
das
int
pop
test
js
iret
ds
lock
push
push
sbb
aas
xlat
xor
outs
xchg
(bad)
jne
mov
xor
jb
movs
mov
test
adc
xor
xor
(bad)
repz
push
dec
xsavec
bound
nop
rcr
in
and
fist
lock
loop
sub
ja
mov
(bad)
repz
stos
xchg
or
(bad)
jbe
push
sub
push
sahf
scas
add
pop
jb
cmp
pop
cmps
je
or
bound
xor
pop
mov
jle
dec
push
sub
add
not
repz
add
bound
mov
push
sub
movs
sbb
pop
test
push
stos
movs
and
mov
inc
mov
js
cmp
mov
int3
sub
adc
and
loope
les
fisubr
adc
jecxz
xor
int3
repz
cs
sbb
cmp
cli
(bad)
inc
and
cmp
dec
ficomp
jg
xchg
inc
not
icebp
pop
pop
sbb
inc
mov
add
out
das
inc
lahf
ret
push
mov
inc
es
fild
cmp
popa
enter
cmp
push
jns
(bad)
lods
cmps
or
ds
ja
push
pop
mov
sbb
mov
mov
stos
jno
mov
loop
mov
cld
pop
loope
fistp
or
fcom
cld
adc
cmps
cmp
xor
jbe
xchg
js
add
dec
or
adc
pop
mov
mov
mov
adc
clc
cmp
mov
inc
je
ins
pop
mov
mov
dec
cdq
scas
xor
sahf
cmp
retf
jle
sbb
pop
pusha
neg
mov
ret
mov
mov
pop
and
je
pop
inc
mov
xor
jmp
sub
rol
test
jp
mov
add
mov
push
xor
sahf
add
imul
loopne
jmp
fldcw
adc
jb
pop
mov
clc
test
push
popa
xchg
mov
es
adc
fimul
inc
stos
ret
dec
repnz
sub
ds
sub
test
into
push
xchg
outs
ret
push
movs
hlt
xlat
inc
retf
rcl
das
mov
aas
shl
and
fistp
into
(bad)
jmp
fmul
cmp
movs
or
xchg
mov
inc
popfw
retf
sub
push
lods
fs
shl
pop
mov
dec
aaa
dec
aas
push
inc
mov
(bad)
jl
or
jnp
movs
mov
js
sub
cld
or
out
inc
scas
aad
xchg
(bad)
sub
rol
add
mov
(bad)
and
aam
and
dec
cmp
or
add
xrelease
shl
lahf
aad
add
xor
pop
jo
cmps
sub
add
jno
in
xchg
fiadd
push
mov
add
sbb
cs
ins
ss
and
sbb
xor
dec
adc
sub
or
mov
add
mov
das
ja
mov
xor
push
sbb
pop
adc
push
ret
cmp
cmp
movs
inc
js
add
jmp
add
pop
scas
fstp
loope
mov
pop
jmp
outs
xchg
cld
jl
pop
cwde
js
addr16
jecxz
fwait
mov
dec
pop
mov
push
clc
retf
inc
adc
mov
dec
movs
lock
sub
test
dec
dec
cld
inc
jle
xor
clc
dec
call
mov
test
mov
adc
xor
(bad)
repz
and
xchg
(bad)
mov
in
movs
retf
and
sub
dec
xor
jae
push
xor
xor
push
push
dec
adc
cld
test
xchg
ds
call
(bad)
movs
mov
and
inc
push
mov
or
stos
jo
jns
xchg
xchg
sub
jbe
cmps
jl
pop
test
mov
inc
add
inc
test
inc
jg
test
mov
inc
add
fdivr
lea
mov
mov
les
scas
jle
inc
scas
inc
(bad)
sub
inc
call
mov
add
cs
push
dec
pop
sbb
sub
cdq
sahf
loopne
cmp
mov
cli
and
(bad)
aas
es
cmp
(bad)
push
ss
add
mov
js
push
mov
shl
lds
es
lock
lods
mov
mov
pop
pop
in
or
jnp
jns
sub
aad
push
lods
mov
add
xchg
sub
xor
push
mov
jg
rcr
test
mov
add
cmp
dec
pop
pop
daa
xchg
fiadd
es
push
cmp
jle
xor
jnp
sbb
mov
cmp
pop
cmp
int3
push
jae
test
jbe
dec
movs
(bad)
pop
stos
ret
pop
inc
jg
pusha
jmp
or
push
xchg
cmp
loop
pop
sub
hlt
ja
cwde
dec
add
xchg
js
xor
or
cmp
cld
pop
pop
sbb
rcl
xor
and
mov
cmp
and
cmps
and
loope
mov
loop
mov
xor
xor
mov
push
sub
or
cmp
test
outs
(bad)
rol
faddp
ss
sbb
jo
push
adc
xchg
sbb
push
fild
jl
adc
or
xor
mov
add
ins
dec
mov
sar
and
cmp
xor
push
nop
dec
das
mov
push
imul
add
bnd
repnz
mov
not
js
mov
nop
ret
into
ins
sub
inc
loop
(bad)
mov
jp
inc
pop
xchg
xor
inc
jle
cmps
int3
and
call
adc
lahf
jae
es
xchg
add
pop
xchg
adc
ficomp
lods
inc
xchg
dec
popf
dec
or
mov
or
movs
push
pop
sub
cs
jecxz
push
rol
xor
(bad)
mov
arpl
dec
or
aas
pop
pop
dec
adc
jmp
jae
push
and
sahf
mov
jno
push
adc
out
inc
jmp
outs
add
push
punpcklwd
xor
ja
scas
xor
xlat
bound
push
aad
mov
fistp
scas
ror
push
fsub
inc
pop
adc
fucomp
ror
push
fnstsw
xchg
fimul
ret
cmp
rcl
xor
aas
stc
mov
movs
push
sub
pop
iret
retf
dec
shr
xchg
inc
dec
xchg
inc
pop
sub
sub
cmps
jne
xor
ds
fld
out
movs
push
dec
cmp
adc
mov
test
push
into
pop
xchg
or
shl
popf
xor
or
pop
xchg
test
mov
fcmovb
and
jge
sti
and
mov
pusha
std
mov
.byte
.byte
