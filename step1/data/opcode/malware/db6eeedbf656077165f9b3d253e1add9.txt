(bad)
(bad)
(bad)
call
in
sub
mov
push
movzx
push
mov
push
call
mov
cmp
imul
enter
inc
cld
push
mov
push
aaa
clc
hlt
push
dec
imul
push
and
clc
cmp
sti
fbstp
push
mov
call
add
call
add
in
push
push
pop
hlt
aam
cmp
or
sub
add
in
jg
xor
mov
pop
ret
int3
add
cmp
add
xor
imul
out
call
mov
pcmpgtd
inc
push
mov
push
or
dec
dec
dec
or
or
rcl
mov
add
add
outs
shl
sti
mov
cmp
add
inc
add
lds
mov
push
push
lea
jg
mov
xor
xor
mov
gs
iret
jle
push
xchg
data16
push
add
(bad)
mov
cmp
add
and
mov
ins
pop
mov
dec
aaa
lea
mov
data16
push
pop
mul
xchg
mov
call
push
test
je
pmaxsw
loopne
jmp
test
jmp
mov
test
sbb
rcr
shl
xor
pop
mov
mov
jne
jmp
lods
fimul
jge
fadd
scas
pop
xor
test
xor
and
add
push
jo
cmp
sub
xchg
sbb
push
mov
dec
call
ins
in
push
out
je
jmp
or
mov
push
lea
arpl
cs
leave
leave
bound
cmc
and
mov
cmp
and
sbb
mov
out
add
call
add
(bad)
pusha
cmp
ja
xor
mov
cmps
repz
mov
cli
enter
or
shr
dec
hlt
hlt
outs
jne
push
fdivr
in
dec
xor
call
adc
jne
xchg
mov
out
cmp
cwde
cwde
adc
xchg
xor
and
push
inc
xchg
xchg
xchg
test
xchg
inc
push
mov
sub
push
daa
loop
lahf
scas
rcl
add
add
je
sub
ficom
xor
in
imul
retf
adc
pop
fadd
jns
in
jmp
or
je
rcr
add
(bad)
mov
cmp
xchg
mov
mov
adc
push
call
scas
cli
or
out
sbb
push
add
data16
pusha
add
out
jmp
hlt
sbb
adc
push
jge
sub
push
inc
push
and
fimul
jne
lock
int
add
push
shr
mov
sub
mov
push
int3
loopne
ja
mov
loope
sahf
loopne
rcl
icebp
je
loopne
add
cwde
mov
mov
or
in
sbb
jle
fcom
sbb
inc
js
and
mov
inc
fisttp
mov
imul
push
pusha
icebp
rcl
cmp
lods
fdivr
and
push
pushf
adc
outs
xchg
xchg
in
push
push
push
(bad)
pushf
mov
loopne
gs
inc
add
emms
lock
add
push
fst
popf
(bad)
push
in
(bad)
jne
or
stc
add
ins
mov
(bad)
xor
ins
jmp
xor
sbb
pushf
loopne
pcmpeqb
push
fucomip
in
(bad)
test
or
pop
fsubr
or
mov
sub
inc
jb
cdq
call
jne
push
xor
inc
adc
jl
sub
rcl
sbb
mov
push
xchg
rol
test
mov
xor
push
add
dec
adc
in
and
enter
sub
inc
cmp
mov
jne
push
in
sbb
fisttp
sub
pop
mov
jmp
sbb
(bad)
add
test
or
les
fucomi
ror
add
adc
or
stos
nop
pop
retf
cmp
or
fcomp
aas
adc
hlt
xchg
jne
out
add
or
pop
cmp
ja
cmp
pop
fmul
loopne
data16
inc
inc
adc
sbb
adc
push
adc
inc
ret
cmp
xchg
add
sub
fild
sti
fnsave
dec
aam
fadd
jb
jmp
push
and
rol
inc
pushf
inc
mov
add
push
sub
push
inc
hlt
push
push
sub
cmp
or
je
sar
clc
test
pop
adc
call
sahf
ins
pop
and
retf
dec
mov
mov
jne
js
repz
je
sbb
sbb
sbb
adc
inc
or
jg
fsub
adc
adc
cmp
inc
cmp
xor
sub
aas
pushf
or
dec
cmp
adc
add
cmp
push
xor
jmp
jmp
mov
mov
bound
lahf
add
adc
mov
push
ins
adc
jp
jnp
leave
or
mov
out
popf
int3
xchg
mov
adc
das
push
adc
push
cmp
inc
mov
cmp
neg
shl
dec
cmp
jnp
inc
je
lods
jecxz
mov
mov
dec
clc
mov
pusha
mov
call
pop
fidiv
sub
sbb
sahf
out
into
ja
push
xor
mov
xchg
jecxz
inc
adc
loop
mov
lahf
pop
inc
or
or
xor
out
loope
mov
rol
aad
jge
and
xchg
jae
xchg
mov
cmp
push
inc
pusha
popf
rol
stos
cmp
and
jmp
push
ins
fisubr
retf
xor
sbb
jl
ret
dec
push
aas
sbb
and
dec
jecxz
jns
in
jg
ins
shr
jle
xor
in
pop
test
or
into
jl
imul
pushf
lods
pop
cmps
or
jmp
ja
push
xor
shl
lahf
test
cdq
jns
xchg
or
jno
or
jp
iret
sbb
mov
adc
scas
jecxz
and
mov
mov
(bad)
sbb
mov
and
je
push
and
rol
sbb
test
loope
add
add
mov
xor
add
cmps
outs
mov
cmp
int
in
aaa
xchg
xlat
or
or
cmp
gs
mov
push
fndisi(8087
nop
push
test
mov
xchg
push
or
aas
ins
(bad)
arpl
jp
adc
push
cwde
jno
or
ss
mov
cli
pop
div
dec
pop
dec
sbb
jmp
mov
out
mov
sub
adc
ret
bound
test
xor
mov
aaa
or
push
fadd
push
adc
bound
(bad)
nop
add
ret
and
inc
pushf
xor
lods
test
(bad)
movs
or
add
cld
ret
sbb
lock
jno
adc
cmps
or
in
rcl
adc
or
rol
dec
add
jbe
loopne
mov
mov
loope
push
aas
data16
add
or
cld
mov
or
cwde
cmc
dec
push
cld
jmp
out
(bad)
push
pop
adc
pop
cmp
add
adc
push
push
and
les
and
adc
imul
and
jmp
into
jbe
jg
or
adc
and
sti
add
push
mov
lahf
lea
inc
mov
mov
retf
sub
mov
fsub
or
pop
mov
gs
call
xor
cld
mov
mov
and
mov
xor
push
ret
mov
sbb
sbb
push
aas
mov
adc
pop
add
daa
adc
imul
or
(bad)
fistp
jp
lea
jl
pop
dec
pop
push
popa
ret
fistp
or
xchg
cmp
mov
sbb
fcomp
pop
imul
mov
mov
lahf
(bad)
js
aad
mov
clc
xchg
inc
lea
push
pop
add
aad
pop
push
push
imul
inc
jo
pop
test
cmp
ins
add
loope
mov
and
loope
push
into
stos
sbb
test
push
mov
or
lds
push
cmp
pop
and
adc
lods
mov
dec
scas
xchg
js
push
ins
mov
push
jg
shl
mov
add
mov
mov
test
adc
cs
or
or
add
fiadd
stc
mov
std
popf
mov
add
jg
inc
or
push
ins
call
ret
inc
adc
inc
mov
add
sbb
adc
adc
mov
pop
(bad)
dec
movs
inc
int3
mov
and
mov
lahf
mov
mov
mov
sbb
push
punpckhbw
mov
mov
sti
add
shr
pusha
(bad)
cdq
test
or
adc
test
add
pop
pop
add
xlat
lahf
sbb
pop
xor
(bad)
jecxz
pop
mov
mov
lea
push
push
dec
inc
add
or
adc
mov
sub
dec
cmp
push
dec
jb
sbb
fisub
jbe
mov
xchg
inc
adc
test
int3
mov
cdq
data16
enter
(bad)
adc
sbb
fild
stos
ins
sbb
or
jne
lds
jg
cmp
jp
inc
adc
mov
or
fwait
sub
enter
in
jmp
leave
add
loopne
stos
inc
jl
call
fsub
ja
mov
test
sbb
loope
mov
shr
(bad)
(bad)
inc
aam
mov
neg
test
add
in
or
or
xlat
loopne
int
pop
lahf
xor
popa
fisttp
adc
cmp
or
test
iret
adc
call
stos
cmp
and
fdiv
xchg
xchg
pop
hlt
add
xor
adc
push
(bad)
sbb
inc
sbb
movs
inc
jg
in
fcomp
xchg
sbb
(bad)
dec
mov
push
cwde
dec
aad
jne
push
scas
ja
jmp
or
pop
or
adc
and
pop
push
xchg
adc
sub
or
mov
pop
fld
lea
sbb
mov
jno
aas
mov
dec
aas
sbb
push
in
sbb
clc
or
movs
push
cmp
test
sub
call
dec
jb
mov
int3
adc
jb
sub
loopne
xor
add
mov
and
lahf
add
push
add
rol
push
pushf
cdq
mov
mov
(bad)
repnz
push
push
push
push
aam
dec
pop
stc
std
sbb
jg
jl
sub
jg
cmps
dec
stos
jae
mov
jmp
mov
adc
jno
jnp
imul
ja
push
imul
sahf
jbe
(bad)
ss
pop
mov
cmp
xor
fdiv
jge
out
rcl
or
jae
cmp
adc
mov
xchg
pop
clc
hlt
pop
leave
mov
dec
jo
sbb
or
fmul
in
mov
mov
adc
test
out
aaa
fmul
push
push
ss
or
pop
loopne
push
pop
add
mov
fsubr
and
add
js
or
mov
sub
sub
in
add
adc
xor
std
pushf
ror
mov
mov
ret
mov
or
loop
mov
ror
jo
gs
dec
leave
aam
xor
hlt
sub
or
add
in
sub
push
adc
pop
out
or
push
dec
int3
cdq
sub
mov
dec
dec
fwait
je
and
shl
pop
popf
sbb
(bad)
add
sbb
xor
scas
cmp
sub
sub
lock
and
push
mov
test
push
or
inc
add
add
cdq
fdiv
fwait
add
add
adc
outs
in
add
push
add
lods
mov
and
ins
and
mov
inc
mov
push
inc
pop
and
or
add
sub
sbb
in
mov
mov
aas
dec
add
mov
mov
mov
hlt
call
loopne
cmp
ins
push
xchg
push
jmp
adc
inc
fwait
clc
and
lods
or
sub
lea
ins
pop
adc
push
js
inc
add
jmp
dec
cmp
sub
mov
inc
fld
mov
cmps
imul
mov
pop
fs
sahf
dec
add
in
dec
mov
jno
or
push
outs
xchg
mov
inc
or
cwde
push
int3
aaa
or
shl
mov
dec
cld
dec
pop
adc
enter
add
leave
or
sbb
xchg
call
or
(bad)
adc
xor
movs
sbb
and
dec
jbe
outs
movs
cmp
int3
push
push
dec
jp
pop
add
pop
out
sub
sar
or
shl
mov
cmp
adc
add
and
mov
pop
push
in
and
cmp
fnstsw
and
sbb
or
nop
mov
lods
jmp
push
shl
dec
cdq
cmps
sub
out
lods
adc
jp
test
xchg
call
test
rol
popa
or
jp
loope
movs
mov
adc
(bad)
mov
arpl
ins
jnp
add
add
or
mov
sub
adc
cmp
mov
add
aad
fiadd
dec
and
inc
shl
imul
clc
daa
jne
mov
call
iret
xor
int3
adc
out
add
jns
jmp
mov
ss
mov
sub
or
push
ins
mov
repnz
pop
mov
push
ja
in
cld
ret
call
jge
mov
jg
cmp
adc
mov
pop
pop
pop
aas
fadd
mov
jb
shl
test
jmp
mov
sbb
inc
in
jo
add
pop
cmp
mov
arpl
mov
sub
rol
rsm
sbb
mov
and
loopne
inc
ja
not
xor
mov
in
stc
call
lea
fucomi
rol
add
xchg
aaa
jmp
and
adc
jg
and
or
xchg
shl
movs
sahf
mov
adc
lea
jo
sbb
and
or
and
and
add
and
hlt
cs
adc
(bad)
lock
mov
add
sbb
cmp
setne
mov
icebp
mov
movs
jmp
inc
jecxz
jmp
mov
xor
cmp
xchg
mov
dec
in
lock
test
int3
retf
pusha
pop
or
pop
clc
add
ficom
jl
cld
add
jmp
add
xor
xor
pop
adc
pop
pop
imul
jne
lahf
sub
jne
inc
pop
(bad)
(bad)
(bad)
call
std
out
mov
or
mov
adc
repnz
push
fsub
fsub
fmul
loopne
ret
and
sub
cs
xchg
daa
loop
inc
add
jno
movs
scas
nop
xchg
aam
jmp
and
sub
lea
sbb
sub
outs
outs
mov
jmp
xor
lea
pop
sub
mov
fadd
loopne
mov
loope
cmp
jmp
xor
jg
push
aas
xor
scas
outs
mov
(bad)
(bad)
adc
mov
sub
sub
loopne
fsubr
inc
and
dec
movs
or
call
jo
out
loopne
jl
jae
pop
pop
mov
in
into
jle
jb
sbb
scas
aam
and
jae
test
push
jl
int3
hlt
adc
fadd
and
cmp
(bad)
(bad)
(bad)
cmp
jp
mul
seto
neg
or
out
fcmovne
mov
scas
out
ret
sbb
outs
imul
push
pop
loopne
xor
sbb
fmul
into
mov
cmps
xlat
fsubrp
dec
ds
and
sub
outs
es
xchg
call
out
das
lea
or
ret
call
in
cld
jmp
das
setge
or
enter
add
loope
inc
sbb
mov
mov
and
adc
cmp
mov
jno
adc
fimul
mov
cmp
and
hlt
jmp
xor
or
sar
dec
add
cmp
jne
call
adc
add
stos
popa
or
jo
pop
fs
or
add
push
dec
add
push
add
test
add
jbe
push
loopne
mov
sbb
inc
or
mov
xchg
ror
jo
xor
outs
adc
and
push
cs
int3
or
ror
fld
cmp
jle
pop
mov
test
dec
xor
jl
pop
xor
add
adc
lock
fldcw
repz
cmp
loope
imul
rol
popf
push
sbb
and
mov
clc
loop
mov
jl
and
cmp
jge
sbb
sub
mov
pop
jnp
cmp
jle
dec
adc
pop
mov
adc
adc
ins
dec
mov
pop
jle
inc
jmp
add
inc
push
cmps
or
test
jmp
dec
xor
stos
or
pop
cmp
cmp
dec
int3
mov
clc
loope
pop
xor
ss
mov
loopne
(bad)
jo
mov
or
pop
ret
jl
lock
jnp
in
cmp
mov
xchg
in
mov
mov
push
retf
push
cmp
enter
xchg
movzx
cld
test
out
sub
test
out
add
outs
lods
and
jmp
push
mov
add
popa
push
xchg
mov
ins
xor
mov
sbb
aam
sub
pop
sbb
ins
int3
inc
clc
ror
pop
ror
mov
push
aas
jmp
push
jns
stos
or
add
xor
arpl
sbb
pop
push
cmp
in
inc
dec
ins
shl
or
adc
sbb
and
in
mov
and
or
test
xor
stos
aas
aam
pop
shl
xchg
mov
(bad)
call
aaa
lahf
or
jl
scas
in
popa
or
das
test
adc
fcom
test
push
xor
push
loope
cmp
retf
(bad)
in
xor
and
leave
and
add
stos
fwait
int3
pop
adc
in
xchg
pop
mov
add
jecxz
cdq
ror
int
sbb
push
push
inc
sbb
ret
dec
pop
js
jne
adc
in
(bad)
test
in
pop
lds
push
mov
pop
or
xchg
stc
dec
jae
fs
mov
push
push
pop
mov
jbe
movs
add
pop
add
push
loope
jmp
arpl
daa
xor
ja
mov
mov
jp
cwde
pop
pusha
dec
mov
stos
jne
add
test
aad
lock
dec
das
les
sahf
and
cmp
mov
call
loopne
addr16
mov
mov
dec
mov
sbb
cmp
jae
lea
data16
pop
hlt
lods
inc
outs
sbb
dec
loopne
mov
or
xchg
cmp
jae
movs
and
sub
adc
dec
loop
inc
stos
cmp
sub
ins
inc
pushf
repnz
mov
cmp
jmp
scas
aam
(bad)
pushf
xlat
xchg
ss
jae
push
mov
push
adc
cmp
je
loope
mov
mov
mov
jno
inc
lea
sbb
xchg
dec
mov
push
aas
xor
jns
leave
adc
cmp
adc
sbb
enter
or
mov
dec
ror
add
lods
or
mov
mov
pop
sbb
movs
push
push
and
mov
adc
es
push
push
aaa
int3
mov
ret
mov
jb
shl
fsub
adc
sbb
fmul
and
ds
cdq
adc
inc
call
in
jb
dec
gs
fadd
xor
fdivr
dec
jae
mov
mov
adc
mov
das
jl
sbb
(bad)
push
sub
mov
ins
sbb
and
mov
and
test
push
enter
or
lods
test
dec
push
int
js
test
psubsw
test
xor
mov
mov
sub
lock
jno
push
test
jmp
cli
loopne
fst
pop
sub
nop
mov
outs
movs
ror
jns
push
pop
aas
sahf
sbb
nop
stos
add
or
cmp
push
enter
bound
sub
add
xor
dec
rcr
in
xchg
adc
mov
clc
xchg
mov
enter
clc
jg
sub
pop
mov
mov
add
mov
pop
jp
lock
fbstp
ficomp
lods
push
clc
mov
cld
mov
jae
inc
pop
add
add
mov
pop
or
sbb
jne
cmp
jecxz
add
xor
add
inc
sbb
mov
sbb
bswap
cmp
stc
pop
movsx
test
xor
ss
idiv
inc
cmp
and
or
dec
add
jge
call
aaa
jmp
push
lahf
out
mov
mov
or
adc
add
xchg
xchg
arpl
add
add
aas
push
jmp
push
push
inc
push
jae
sub
add
sbb
xor
add
or
jbe
lahf
movs
push
sar
lods
xchg
or
add
shl
cli
ins
push
cld
mov
test
(bad)
aad
push
add
inc
mov
push
sbb
data16
clc
clc
or
icebp
repnz
inc
cwde
inc
nop
jp
sbb
cwde
nop
add
mov
xor
add
sbb
adc
inc
dec
dec
adc
rol
fdivr
aam
add
jno
xor
or
add
loopne
jo
push
dec
test
std
or
adc
jg
jne
rcl
jecxz
and
add
je
sbb
adc
div
aas
cmp
jne
sbb
cmp
adc
pop
lods
sub
std
(bad)
mov
or
rol
or
test
cmp
popa
mov
cwde
movs
hlt
cmc
jecxz
pop
lods
or
sbb
add
cmp
jge
xor
jno
js
inc
sbb
shr
sti
add
sbb
mov
inc
dec
test
sub
dec
xor
call
add
inc
shl
in
out
jb
in
in
xor
call
in
xchg
inc
jb
sbb
out
pop
shl
jl
mov
mov
lods
mov
in
or
data16
xor
cmp
push
mov
add
out
mov
fadd
sub
and
adc
lea
nop
mov
push
pop
fwait
outs
add
lods
mov
jmp
mov
xchg
jl
push
mov
inc
xor
outs
and
mov
jne
and
int3
je
and
inc
fsubr
sbb
lea
push
sti
mov
sbb
mov
or
imul
sahf
mov
pop
dec
call
xor
and
neg
xor
(bad)
scas
out
xchg
jnp
xchg
pop
pop
outs
out
and
jbe
scas
xor
inc
cmps
outs
or
mov
daa
sbb
jne
mov
into
jge
(bad)
outs
adc
ret
push
lea
mov
cdq
inc
mov
iret
jl
and
adc
gs
push
xchg
(bad)
mov
mov
int3
mov
jl
adc
dec
sar
add
or
xor
fist
js
fcom
dec
and
js
mov
push
add
sbb
adc
mov
mov
jo
popf
xor
dec
aas
or
daa
into
sbb
xchg
jnp
cvttps2pi
jns
je
xor
pop
into
jp
cmp
mov
and
pop
or
jmp
outs
sbb
out
ins
xor
mov
daa
icebp
cs
cmp
xor
xchg
sbb
mov
or
xchg
mov
lods
adc
out
jmp
test
xchg
dec
mov
pop
mov
lods
lock
cmp
movs
xchg
icebp
xchg
daa
adc
add
aad
and
mov
or
cdq
in
jmp
in
add
jb
sbb
push
imul
sbb
fiadd
fsub
mov
dec
loop
int3
mov
push
cmp
xchg
imul
fist
mov
jns
lds
(bad)
enter
or
test
mov
mov
jmp
enter
shl
mov
add
ret
adc
dec
xchg
dec
mov
test
shl
jno
in
test
je
push
adc
sbb
outs
call
pop
or
push
loopne
jne
add
(bad)
sbb
fdiv
lahf
enter
mov
sar
rcr
outs
and
push
sti
adc
inc
jmp
out
je
xor
cmp
or
mov
fistp
sbb
hlt
cs
sbb
gs
or
daa
xor
shr
and
les
das
cmp
ror
add
fbld
sbb
jo
jo
sar
dec
test
push
loopne
adc
mov
dec
and
mov
repnz
xor
in
nop
push
sub
inc
xor
nop
popf
test
jmp
call
cwde
imul
(bad)
pop
push
pushw
mov
pop
jb
fild
jmp
mov
xor
or
mov
(bad)
shld
das
mov
add
mov
das
mov
sub
stc
dec
mov
sub
jbe
clc
pop
rcl
push
les
push
les
adc
inc
jnp
xor
mov
and
inc
daa
js
push
xchg
xor
rol
mov
fild
or
push
jmp
mov
mov
jmp
xor
je
xor
mov
outs
out
and
pop
mov
jne
jns
lock
int3
cmp
hlt
cmp
jne
ins
jmp
dec
or
cmp
jne
test
add
or
pop
ror
jne
addr16
sub
ss
int3
sbb
mov
iret
jecxz
jae
imul
sbb
fistp
xchg
sub
or
inc
xchg
push
icebp
std
sbb
fld
hlt
pushf
push
xor
pmullw
add
rol
shl
adc
jmp
jl
sub
or
xchg
test
lods
cmp
dec
out
jmp
(bad)
push
rcr
fnsave
fucomi
shr
push
fst
jl
popa
daa
(bad)
xor
sub
xchg
cmp
leave
add
cmp
repz
adc
mov
mov
jns
loopne
call
fcomp
jecxz
ficomp
dec
idiv
jg
out
push
cmp
and
inc
in
add
clc
cmp
lahf
jl
test
out
in
fsub
pop
movs
or
sbb
ja
mov
imul
xor
in
lods
je
or
pop
gs
or
in
add
call
inc
push
lods
push
leave
push
int3
sub
out
xchg
mov
cmp
mov
data16
jmp
push
add
jmp
mov
lods
dec
push
push
jo
push
pop
push
dec
xchg
hlt
push
cdq
mov
js
push
adc
sub
push
sub
call
mov
icebp
jns
ins
mov
xchg
call
sub
retf
js
fimul
mov
and
mov
mov
aam
jmp
pop
popa
arpl
xor
rcr
jno
add
icebp
add
in
loopne
push
(bad)
enter
pop
(bad)
clc
test
xchg
popa
test
push
loopne
fld
cwde
adc
jne
mov
nop
mov
neg
adc
dec
mov
sub
sbb
lahf
je
push
rcl
adc
mov
out
dec
pop
push
xchg
mov
enter
test
push
dec
mov
test
test
xchg
bound
pushf
inc
cmp
or
or
xor
and
add
add
add
sbb
jecxz
push
xor
sub
lds
or
add
dec
add
xchg
mov
dec
ins
iret
xor
xor
jnp
fs
xor
add
in
int
adc
(bad)
fisub
mov
imul
push
dec
pop
or
mov
leave
xor
mov
test
or
pop
ja
in
loope
scas
pop
je
push
cmp
js
pop
push
add
sbb
in
sbb
sub
add
mov
out
arpl
inc
call
adc
sbb
sbb
je
dec
sbb
pop
push
loope
add
test
and
int3
(bad)
aaa
cmp
mov
ins
clc
fnsave
dec
and
xor
or
int3
or
pavgb
push
mov
and
jmp
pop
mov
inc
dec
xor
mov
je
(bad)
sbb
and
fsub
jge
fdivr
loop
(bad)
out
test
loopne
and
in
xor
and
loopne
cmp
sbb
mov
xor
aaa
int
sbb
cmp
mov
(bad)
pop
je
pop
add
dec
loop
adc
push
push
jl
mov
rol
sub
add
movaps
jg
push
loopne
xor
fsubr
jmp
jo
push
sub
ror
xor
mov
sub
pop
ins
mov
mov
das
jmp
dec
add
dec
nop
inc
push
xor
jno
dec
mov
hlt
popf
ss
shr
jmp
dec
in
add
ins
xchg
call
sti
lea
sbb
loopne
outs
mov
repnz
add
cmps
sbb
in
loop
add
(bad)
cmp
mov
lahf
add
push
fs
jmp
add
jp
xchg
push
sub
or
(bad)
xor
dec
arpl
add
jns
rcr
sar
jno
dec
jns
dec
cmp
idiv
lock
pop
mov
mov
loopne
ja
mov
jo
or
retf
stos
sub
sar
int3
(bad)
cli
cmp
mov
shr
out
add
adc
into
or
xor
in
jmp
stos
xchg
sub
mov
or
mov
fstp
push
cld
sbb
lock
mov
xchg
test
loope
jns
jp
data16
cld
jl
add
sub
out
sbb
scas
mov
out
pusha
mov
xor
inc
call
lea
test
lea
push
mov
or
adc
push
ret
aas
mov
dec
imul
nop
cmp
sub
inc
idiv
sbb
ret
test
xchg
dec
inc
xchg
mov
mov
out
gs
sub
sbb
mov
mov
and
and
push
or
test
inc
cmp
pop
js
jmp
mov
or
push
sub
and
stos
or
dec
adc
leave
mov
adc
add
sub
lea
xor
push
sbb
(bad)
imul
(bad)
or
sub
mov
xchg
cld
dec
movs
mov
xor
push
int3
dec
push
adc
loopne
pop
push
enter
pop
in
push
sbb
add
call
nop
pop
imul
enter
(bad)
cmp
mov
pop
and
and
xor
cdq
movs
mov
xor
dec
movs
push
xor
cmp
and
pop
call
dec
imul
add
jb
jb
mov
js
cmp
sub
das
adc
xor
mov
pop
xchg
mov
movs
and
sub
cs
or
mov
ud2
push
sbb
jg
adc
test
inc
adc
popa
ror
mov
rcl
dec
and
or
ret
pop
hlt
push
es
xchg
dec
inc
xchg
jp
sub
sbb
ret
xchg
cmps
test
and
inc
loop
push
(bad)
loop
shl
and
test
inc
jae
mov
or
outs
push
test
in
mov
shr
(bad)
adc
call
call
pop
inc
adc
aam
cmp
inc
sbb
sub
push
or
push
push
or
push
rol
and
pop
and
sub
pop
aam
mov
aas
and
test
jle
clc
shl
popf
add
mov
or
mov
call
or
inc
inc
jge
jmp
dec
cmp
xchg
les
fcom
hlt
xor
or
or
jmp
adc
imul
cmp
inc
inc
loopne
fsub
scas
fnstsw
js
cmc
in
cdq
in
pop
cmp
jbe
sbb
xor
sti
xor
cmp
adc
mov
loope
test
sub
push
call
add
sbb
sub
fild
or
ins
add
inc
sub
sub
push
into
add
or
adc
movs
mov
sbb
pop
jp
cmp
mov
add
sar
inc
lea
xchg
and
push
scas
sub
push
hlt
fsubr
lods
aad
or
inc
or
sub
jno
fbld
or
aad
inc
ror
pop
scas
add
jp
add
or
adc
adc
adc
pop
rol
popf
and
cmp
cmps
dec
cmp
jae
dec
push
arpl
and
or
movs
jo
(bad)
lea
cmp
cmp
add
jge
add
push
inc
jae
sbb
and
mov
repnz
mov
sbb
push
rol
cmp
or
jl
mov
les
lea
gs
or
jg
add
inc
dec
or
add
test
aam
lods
sbb
inc
int3
mov
fcom
mov
jnp
inc
dec
cmp
lahf
idiv
popa
lock
mov
pop
mov
inc
into
push
jo
pop
xor
into
mov
jg
push
aam
ins
adc
enter
dec
sub
test
jmp
add
mov
push
(bad)
pop
pusha
shl
das
pop
adc
cld
and
in
push
jne
inc
pop
inc
fdiv
cdq
(bad)
outs
add
xchg
sahf
retf
in
in
in
in
mov
fcomp
call
push
aas
rcl
xor
clc
je
pop
lahf
sub
adc
xchg
jne
jmp
cmps
add
sub
jp
or
test
out
mov
add
call
mov
cmp
bound
pop
mov
jg
cmp
mov
sbb
aas
push
test
inc
adc
je
jo
pop
adc
adc
pop
call
or
es
jg
inc
enter
js
pusha
sbb
push
lahf
sahf
xchg
popf
dec
pop
mov
jbe
xchg
cs
mov
mov
repnz
mov
ss
push
lea
xchg
dec
xchg
and
out
leave
push
pop
or
add
jp
movs
push
pop
test
rcl
ins
sar
ror
jbe
or
ror
lods
sub
inc
lea
xor
shl
in
mov
movs
jmp
jo
push
cmp
push
stc
icebp
outs
pop
or
add
pop
and
push
pop
push
and
sbb
pop
jl
pop
mov
pop
ret
pop
or
xor
jmp
faddp
leave
idiv
add
mov
mov
jge
imul
add
pop
push
inc
fadd
pop
inc
mov
popf
popf
mov
pop
jge
jne
mov
mov
test
fidivr
cwde
mov
or
mov
bound
or
adc
or
pop
out
add
fdiv
push
lea
and
lock
je
inc
pop
aad
jle
adc
push
mov
pop
pop
test
or
jl
cmp
mov
cmp
push
mov
icebp
dec
loope
hlt
xchg
pop
and
(bad)
jmp
frstor
or
add
ret
fsubr
outs
ret
mov
out
mov
push
xor
cmp
jmp
cmp
sbb
add
push
add
xchg
adc
cmc
test
inc
adc
out
adc
adc
jl
(bad)
lods
mov
jmp
sbb
and
out
sbb
mov
push
popf
and
in
push
shl
jmp
scas
pop
ins
fld
(bad)
or
sub
or
inc
jp
mov
int3
jne
jnp
popf
mov
into
cmp
nop
not
loope
or
adc
or
cdq
ror
jns
scas
mov
daa
pop
push
mov
stc
imul
inc
and
sub
fs
inc
xor
mov
mov
stc
mov
mov
jnp
es
dec
es
push
std
mov
clc
adc
xor
push
jmp
and
inc
or
(bad)
jbe
icebp
mov
lods
std
shl
dec
sbb
ja
or
call
add
cmp
mov
inc
or
push
je
hlt
daa
ds
and
xor
ret
fstp
data16
ss
jl
in
mov
je
push
loop
sbb
jp
add
cmps
aaa
std
mov
stc
fcomi
inc
add
sub
jnp
cmc
call
xchg
adc
dec
pop
fwait
adc
and
ja
ror
ror
outs
int3
sub
cmp
icebp
fiadd
adc
ffreep
je
xlat
push
leave
cmp
cmp
push
sbb
repz
mov
lahf
in
clc
fs
push
ja
idiv
mov
mov
pop
xchg
mov
ror
add
jbe
jnp
shr
jb
jmp
icebp
dec
push
mov
loope
jae
inc
pusha
adc
xchg
sub
rol
push
jb
loop
mov
jle
lods
sbb
sti
push
lea
sub
sar
mov
cwde
rcl
or
push
lea
dec
sbb
add
xor
cmps
xor
sub
call
adc
and
jmp
inc
lods
sbb
call
xor
mov
(bad)
sub
inc
cmp
sbb
shl
jnp
pop
call
and
inc
sub
hlt
les
ret
push
cmp
pop
sub
pop
movs
adc
sar
js
xchg
outs
lahf
sar
in
notrack
mov
push
mov
loopne
add
pop
mov
aaa
or
lds
addr16
push
adc
mov
push
mov
inc
adc
pop
fisttp
sub
inc
es
in
mov
rcr
jge
xchg
xchg
adc
adc
or
jge
daa
cmp
mov
jb
cmp
imul
sar
jne
or
dec
adc
int
jns
jne
cmp
mov
loop
push
adc
mov
or
div
cld
cmp
jne
test
xchg
pushf
repnz
cmc
sub
lods
or
mov
dec
pusha
enter
jle
fwait
xor
test
lods
int3
mov
cmps
popa
rcr
outs
or
shr
or
and
pop
outs
push
pop
or
mov
psubd
scas
iret
je
jnp
xchg
retf
xchg
push
adc
mov
clc
test
inc
or
int3
add
inc
pop
es
pop
inc
push
inc
add
sti
push
js
das
push
test
je
and
jmp
das
mov
sub
mov
jb
clc
shl
cmps
push
or
movaps
add
push
mov
in
dec
cmp
jb
jmp
aad
ja
idiv
je
mov
and
sub
jge
outs
scas
lahf
aas
push
pop
arpl
cmp
pop
ror
popa
mov
enter
add
(bad)
push
outs
hlt
sub
imul
mov
add
cdq
lock
sub
es
js
jg
push
add
jne
fmul
jmp
and
rcr
mov
cmps
jmp
test
push
adc
data16
jne
rol
or
(bad)
and
add
je
lahf
xchg
sbb
mov
cmps
std
add
(bad)
addr16
push
inc
outs
stos
push
or
or
pop
adc
jmp
div
je
lods
outs
xchg
inc
mov
xlat
sbb
add
sbb
clc
push
add
or
cmp
sbb
cmp
add
ret
inc
ret
xor
lock
cmps
inc
dec
in
adc
dec
outs
jmp
out
add
or
inc
je
cwde
mov
push
add
or
xor
in
stos
imul
pop
cmp
xlat
jecxz
sub
stos
ja
push
cmp
retf
je
push
push
ins
loopne
popf
push
mov
enter
push
int
je
lea
push
push
loopne
rcr
test
jne
add
ins
mov
pop
xchg
fdiv
cmps
je
call
cmp
rol
mov
mov
push
ret
jo
ror
fwait
leave
pop
call
push
pop
mov
movs
or
(bad)
mov
lods
adc
mov
jmp
mov
mov
mov
inc
inc
and
dec
jne
jo
sub
dec
or
push
shl
or
add
xchg
out
add
lock
fcom
es
or
or
pusha
rol
mov
retf
mov
or
(bad)
leave
pop
push
daa
push
out
inc
and
das
add
in
mov
push
pop
mov
icebp
push
mov
fisttp
push
add
mov
in
xor
aad
fldenv
movs
je
sub
sbb
adc
sbb
jge
jecxz
add
or
pop
je
(bad)
fstp
repnz
ret
push
in
or
retf
mov
inc
sub
jle
stc
xor
iret
inc
add
out
(bad)
jle
xor
je
mov
pop
and
jmp
sbb
jmp
ins
idiv
add
enter
(bad)
jp
(bad)
pop
or
push
mov
out
push
mov
add
mov
jl
adc
add
xor
jg
adc
pop
add
cmp
je
test
xor
int3
dec
push
sbb
push
sub
call
(bad)
jne
lea
mov
test
je
add
or
(bad)
cmp
jne
mov
push
mov
and
addr16
mov
push
test
lea
xchg
or
sbb
or
ror
xchg
mov
add
adc
(bad)
push
inc
jne
mov
lock
add
fsub
sti
mov
mov
das
push
jne
imul
jne
and
je
dec
inc
aaa
sub
mov
sbb
out
test
popa
mov
cwde
sub
ss
ins
mul
ins
mov
mov
bound
adc
lock
pop
adc
ret
sahf
test
adc
push
into
xchg
cmps
or
jp
jo
js
jbe
sbb
retf
repz
add
shr
loope
jbe
pop
(bad)
jmp
ja
imul
adc
pop
mov
and
jp
mov
mov
shl
aaa
aas
out
xor
iret
test
jge
jl
je
imul
or
lock
loop
push
lea
xchg
stos
cmps
sub
sbb
clc
fdivr
xor
sar
and
or
cmp
movs
(bad)
clc
xchg
mov
(bad)
out
cmp
je
push
out
call
jns
adc
xchg
pop
sbb
or
cld
adc
adc
sub
movs
call
push
js
mov
cld
cmp
jo
and
(bad)
adc
sbb
jbe
and
jle
or
sub
loopne
fcom
gs
aam
sar
clc
or
(bad)
in
popf
enter
ror
repz
mov
dec
pop
aaa
fisub
fiadd
ror
enter
fistp
aaa
dec
cld
adc
cmp
cmps
sub
add
(bad)
push
add
adc
pushf
sahf
fcom
mov
jno
test
pusha
ret
add
test
xor
mov
fstp
inc
or
inc
dec
leave
mov
mov
imul
xlat
pop
scas
jmp
jge
sbb
and
lahf
pop
call
or
popw
sub
ja
popa
pop
pmulhuw
(bad)
adc
hlt
jae
xor
push
jmp
sbb
js
mov
ja
ss
test
cmp
inc
mov
mul
push
or
mov
ret
pop
add
pop
pop
mov
stos
je
push
retf
add
inc
push
jmp
add
scas
in
mov
in
add
jae
xor
ds
xor
xor
and
and
adc
pop
add
and
mov
das
mov
or
adc
dec
ret
sub
sub
pop
enter
jne
push
or
inc
xor
xchg
or
add
les
dec
mov
and
or
pusha
or
jne
sub
or
lock
ret
adc
(bad)
mov
shl
movhps
lock
inc
sub
adc
pop
pop
and
or
push
cmp
jge
pop
mov
jne
push
pop
pop
fwait
pop
dec
push
or
push
mov
mov
scas
jmp
mov
mov
shl
stc
repz
pop
dec
xchg
sar
mov
cmp
(bad)
cli
and
shl
sbb
int3
pop
(bad)
push
mov
add
icebp
and
loop
nop
push
and
(bad)
rol
je
icebp
mov
push
ins
jmp
pop
mov
dec
test
sbb
add
xlat
or
inc
pop
test
and
mov
xchg
adc
push
add
push
pop
ins
jbe
outs
inc
or
push
mov
nop
xchg
gs
mov
cmp
or
jg
sub
shl
(bad)
ins
mov
dec
pop
ja
shl
movs
push
adc
jge
addr16
loopne
mov
pop
inc
xchg
mov
ret
inc
arpl
mov
push
shr
ins
mov
or
dec
ror
adc
clc
je
push
lds
dec
jo
dec
lods
xor
add
push
adc
aas
lahf
push
and
test
scas
stc
jo
jne
add
add
inc
in
sar
inc
add
push
ror
mov
loopne
adc
pushf
call
scas
sub
dec
mov
out
add
jo
mov
push
jge
ret
adc
stos
or
jl
or
sahf
lock
add
jle
lea
sub
movzx
or
push
mov
(bad)
out
xchg
jmp
movzx
and
add
mov
or
adc
jne
sub
mov
mov
cmp
(bad)
xor
test
and
(bad)
cmp
sbb
ss
xor
pop
cmp
je
lods
repnz
cmp
and
or
out
fnsave
pop
mov
inc
lds
or
mov
cmp
adc
(bad)
outs
or
retf
or
test
je
retf
mov
jmp
test
retf
cmp
in
sti
jmp
cs
xor
leave
cmp
jae
fidiv
cmp
mov
movs
cmp
jbe
fnstenv
add
sbb
xlat
xor
cmp
jne
je
ss
hlt
jg
gs
mov
imul
add
fs
sbb
cmc
mov
sbb
inc
cmp
cld
mov
jmp
ja
retf
jne
jbe
inc
mul
push
and
mov
add
xor
(bad)
int
fsub
das
in
inc
rol
or
pop
pop
pop
outs
pop
test
sub
pop
rol
ror
pusha
es
push
push
push
loope
xor
rol
sar
lock
or
(bad)
jbe
clc
jb
jmp
sbb
enter
int3
mov
aam
js
mov
ret
cld
mov
or
pop
ret
inc
int3
mov
in
loopne
loop
std
fiadd
stc
or
rep
and
mov
cmp
add
jl
add
enter
jbe
mov
(bad)
es
jnp
hlt
sbb
and
mov
or
xlat
xor
add
mov
jge
dec
add
add
retf
retf
cmps
inc
add
add
xchg
mov
push
cmp
repz
jo
pusha
cmp
repz
inc
mov
mov
call
iret
repz
lock
hlt
mov
clc
cld
pushf
add
mov
fdiv
cmp
pushf
out
jmp
test
cwde
adc
popa
mov
pop
sti
and
ret
push
and
push
lea
into
jl
cld
or
scas
(bad)
cld
out
xchg
inc
neg
rcl
sub
stc
sub
ficomp
push
push
push
js
fiadd
movs
mov
int3
jl
mov
add
sahf
inc
push
out
push
(bad)
and
dec
dec
mov
mov
addr16
add
jmp
mov
hlt
push
cld
out
sahf
neg
push
or
sbb
out
sahf
mov
ss
sbb
sahf
out
sahf
adc
adc
or
dec
sahf
out
or
add
iret
repz
inc
inc
or
pop
push
or
push
add
add
sub
pop
(bad)
push
bound
ja
push
cmp
mov
ss
xchg
add
les
bts
jmp
sub
cs
in
or
(bad)
mov
and
and
xchg
mov
pop
das
mov
movs
inc
clc
cli
push
lea
add
xchg
push
int
mov
pop
mov
(bad)
push
cmc
or
jo
mov
xchg
inc
xor
(bad)
jne
and
sub
ret
ud2
outs
xor
pop
mov
jne
xchg
sub
and
xchg
adc
or
mov
fs
lea
shl
fdivr
sbb
push
add
xchg
aas
cmp
scas
fmul
mov
imul
jb
loopne
pushf
push
cs
sbb
nop
mov
and
test
push
mov
sbb
(bad)
popa
repnz
dec
hlt
cs
call
or
mov
inc
pop
pop
cmp
push
cli
test
or
popa
jo
adc
push
push
sub
data16
bound
sbb
mov
das
or
add
push
sub
and
cld
dec
mov
pop
adc
adc
je
sub
(bad)
(bad)
cmp
ja
mov
inc
mov
cmp
je
mov
or
adc
jne
inc
jne
push
inc
cmp
cmp
repnz
lock
and
inc
inc
push
add
pop
push
adc
and
leave
pop
cmp
xchg
in
lock
sub
pop
cmp
jbe
push
xor
pop
div
and
sbb
or
pop
lock
mov
cmp
je
js
mov
mov
imul
icebp
aas
mov
cmp
jae
mov
mov
test
in
movs
adc
loopne
popa
or
enter
retf
mov
test
and
mov
pop
or
push
clc
adc
mov
hlt
jmp
push
movs
jle
ds
mov
add
test
je
inc
lds
add
jne
lea
sub
add
into
or
lods
mov
(bad)
cld
inc
dec
jne
pop
loope
and
fwait
xchg
rol
pop
add
test
pop
fs
xchg
sub
push
cwde
jno
(bad)
pop
cmc
nop
push
pop
ds
js
mov
(bad)
cmp
or
cmp
cmp
mov
jp
je
jbe
outs
std
fisttp
setne
je
lahf
adc
mov
push
sub
pop
or
cmp
xchg
pop
mov
in
adc
add
repnz
mov
jge
fild
pop
sub
mov
or
dec
or
adc
or
mov
shl
inc
sub
inc
adc
push
pop
push
push
push
push
jge
pop
ins
add
in
inc
clc
shr
pop
ret
xor
pusha
push
jmp
mov
push
fcom
add
sub
pop
stos
fcom
cmp
gs
outs
mov
push
adc
dec
pusha
(bad)
and
lds
add
ds
xchg
mov
outs
cmp
and
add
mov
push
(bad)
sbb
inc
xchg
jns
mov
movs
or
jb
pop
popf
sub
jmp
lea
xor
out
push
aad
push
mov
rol
xchg
adc
std
cld
xchg
ins
add
ret
pop
mov
loopne
movs
outs
ror
out
cmp
or
add
cmp
aaa
inc
sub
add
add
add
lock
loopne
sbb
or
leave
dec
push
push
mov
paddd
add
jnp
push
cmc
inc
sbb
pop
pop
sbb
hlt
cmp
push
adc
pop
arpl
imul
jno
fs
inc
lods
cwde
mov
push
call
push
sub
mov
or
cmp
test
add
cmps
movs
adc
or
test
xor
mov
jno
pop
jecxz
cmc
cld
jbe
or
into
adc
into
jbe
jbe
pop
mov
mov
mov
lds
cmp
and
adc
adc
mov
add
jmp
inc
fsub
xchg
sar
sbb
sbb
ror
sub
adc
xor
repnz
popa
mov
movs
push
pushf
and
add
cmp
jns
jl
push
inc
xor
(bad)
mov
test
fcmovne
push
cmp
xor
mov
add
sub
push
mov
les
mov
cwde
adc
mov
call
std
data16
cmps
inc
and
xchg
icebp
adc
ins
jmp
fdiv
jo
or
shr
mov
pusha
cmps
jbe
xchg
add
cwde
pop
jg
call
sbb
cld
movs
loopne
push
arpl
imul
cmp
mov
call
fsubrp
sub
das
sar
mov
rcl
adc
dec
add
or
mov
or
mov
cmps
jb
test
retf
mov
mov
sbb
pop
or
add
repz
pusha
or
jnp
mov
inc
sar
push
fistp
lods
sbb
ret
inc
add
not
dec
je
inc
cs
inc
xchg
mov
dec
sar
adc
dec
add
mov
mov
push
xchg
cmp
jl
fistp
cmp
push
pop
xor
rcl
mov
ja
jmp
hlt
lods
shl
shl
hlt
fadd
in
cmp
mov
call
sbb
lods
push
pop
jb
fdiv
fnsave
sub
push
inc
clc
test
push
push
mov
mov
cmp
pushf
imul
sub
push
adc
repnz
out
push
push
dec
test
lock
mov
ret
fisttp
mov
dec
jecxz
test
push
or
add
(bad)
pop
mov
stos
clc
dec
popa
gs
push
add
pop
jb
fsubp
mov
or
test
pop
cmp
or
and
inc
daa
push
ret
cmp
je
cmp
call
nop
inc
mov
gs
sbb
jp
mov
push
jge
inc
clc
lods
ds
cmp
mov
add
push
or
ins
mov
lock
cmp
cmp
jbe
mov
jnp
loopne
dec
or
push
adc
test
xchg
pop
xchg
or
test
mov
add
adc
cmp
ins
movs
sbb
and
and
or
xchg
mov
xor
xlat
sahf
fild
in
inc
add
jne
adc
jne
xor
imul
cmp
je
push
and
and
rcpps
jne
inc
sbb
xor
inc
movs
loope
xchg
mov
sti
adc
dec
js
outs
sub
pop
cld
and
shl
jle
jno
retf
push
xor
hlt
(bad)
xlat
mov
push
inc
mov
push
xor
sbb
aas
and
mov
mov
lds
(bad)
push
jl
jp
inc
xchg
jo
cmps
xor
or
add
push
loop
loopne
jmp
mov
gs
add
jle
enter
mov
sbb
xor
rcr
sub
push
daa
aas
adc
and
push
push
adc
int
ret
or
dec
or
(bad)
pop
jg
jmp
nop
pop
add
in
add
fs
pop
jl
add
popa
add
adc
or
add
icebp
push
call
jo
mov
push
bound
lock
jo
rcl
or
loopne
xor
inc
push
push
inc
les
jo
jl
fwait
add
mov
mov
mov
call
loope
fdiv
aaa
lods
or
cmp
mov
sbb
cwde
dec
ret
adc
fwait
test
add
outs
mov
dec
fsub
mov
gs
pop
aaa
in
push
cmp
mov
rcr
push
inc
or
sbb
je
aam
inc
into
jg
push
pop
cmp
dec
shl
cmp
popf
push
in
aam
ins
fmul
xor
mov
loopne
sbb
repnz
outs
stc
push
pusha
cs
aam
sar
adc
stos
ds
cmp
(bad)
ds
push
cmp
and
sbb
cmp
fstp
pop
call
xor
or
out
add
sahf
nop
iret
leave
sbb
imul
in
retf
pop
data16
adc
sub
test
mov
pop
arpl
inc
cmp
test
jnp
add
out
push
add
sub
xlat
inc
out
js
dec
and
add
sbb
dec
sbb
fld
adc
sahf
in
push
push
popa
aam
adc
rol
dec
(bad)
neg
inc
fcomp
repz
jne
inc
fdivr
or
pushf
cmp
or
enter
je
xchg
je
mov
enter
sbb
jmp
outs
sub
adc
test
push
pop
add
outs
gs
push
dec
outs
in
push
jg
push
mov
mov
cmp
mov
mov
ret
or
mov
push
out
mov
mov
outs
dec
je
dec
jne
push
pop
mov
jno
push
add
add
jmp
xor
inc
xor
jl
cmp
mov
loope
sbb
add
push
arpl
push
and
sub
mov
push
cs
cli
inc
shl
bswap
fisttp
mov
xchg
push
mov
aas
push
or
or
mov
shl
out
fild
or
fist
sub
mov
xor
and
in
mov
ror
add
mov
call
and
push
jb
imul
call
jae
shl
pop
push
cmp
jl
mov
inc
sahf
jp
sub
dec
adc
jg
mov
push
add
add
sub
je
and
mov
add
xor
fisttp
into
mov
add
mov
ret
mov
rol
scas
cmp
fwait
shr
in
dec
or
push
aad
jl
enter
mov
or
mov
das
mov
repz
add
mov
jae
in
adc
or
add
cwde
push
sbb
cmc
lods
mov
sub
mov
shl
jne
stos
push
xchg
imul
and
jns
jne
out
scas
imul
and
in
rcl
ins
loopne
arpl
jl
shl
adc
lahf
push
pop
(bad)
mov
stos
dec
jmp
shl
mov
repz
xor
inc
add
and
xor
into
je
or
mov
xchg
push
mov
cdq
sbb
pop
xchg
add
loop
sbb
add
xchg
daa
add
ret
sbb
dec
inc
or
xor
sub
jg
sbb
jmp
push
ins
aam
pop
inc
repz
cmps
add
in
and
jbe
push
add
sbb
shl
and
sub
ror
jecxz
mov
adc
or
sub
lods
jo
retf
pop
hlt
dec
adc
hlt
xlat
mov
(bad)
retf
or
rol
js
cmp
or
push
dec
scas
addr16
and
jbe
std
jb
scas
xchg
loop
mov
add
or
cmp
not
repnz
das
pop
jp
and
sbb
push
dec
push
aaa
fadd
out
shr
cmp
inc
retf
sub
mov
push
mov
clc
cmp
ret
imul
imul
(bad)
cmp
scas
adc
sbb
and
nop
adc
xlat
je
mov
cli
es
mov
and
cmp
jb
test
cmp
cmc
xlat
xchg
ins
test
int3
add
enter
cmp
out
aad
movs
mov
mov
and
cmp
jne
mov
jg
add
jb
cmp
jbe
mov
push
or
or
and
sbb
out
sbb
cmp
call
call
mov
(bad)
movs
loope
adc
dec
adc
pop
test
sub
je
push
inc
inc
or
jnp
cmc
les
push
adc
add
add
adc
cmps
sahf
retf
cmp
add
hlt
cmp
call
push
loopne
pop
call
pusha
imul
sbb
cmp
lods
loopne
pop
adc
ret
dec
jg
dec
mov
popa
int3
ins
stos
jmp
cmp
push
cmp
daa
loope
outs
shl
push
movs
std
pop
cmp
jne
sbb
mov
imul
inc
pushf
cdq
push
dec
mov
iret
sbb
das
adc
cmps
imul
les
int3
lods
or
sub
and
adc
or
mov
adc
cwde
sub
fidivr
cmp
aaa
out
jle
ret
les
push
inc
jg
pop
sbb
pop
add
pop
es
aad
pop
cld
int3
push
sub
jb
or
push
rcl
xor
(bad)
sahf
push
call
mov
fstp
dec
push
fs
lea
jb
(bad)
sbb
or
cwde
or
ret
or
cmp
add
xor
inc
or
sub
cs
mov
(bad)
pop
xor
aaa
dec
xor
push
adc
je
push
mov
stos
mov
sbb
add
cli
sub
pop
mov
inc
(bad)
inc
xchg
test
dec
lock
rol
je
cmp
sub
jo
mov
adc
icebp
rol
fcomp
lea
fdivr
clc
jmp
mov
lods
pop
jmp
push
dec
cwde
in
dec
push
shl
outs
popa
mov
movs
(bad)
clc
xor
scas
in
or
add
cmps
jne
and
lock
mov
sar
push
std
outs
nop
pop
jecxz
adc
movs
jne
cmp
pop
push
and
mov
test
or
es
add
(bad)
imul
jmp
fld
mov
loopne
adc
jmp
int
sar
fsub
push
push
xor
inc
add
xchg
and
iret
inc
in
ds
push
mov
mov
clc
js
or
add
pop
adc
and
aad
pusha
dec
cmp
pop
inc
das
xchg
inc
test
imul
fsubr
ror
ja
ins
or
add
pop
je
push
add
push
movs
inc
jnp
pushf
pop
nop
and
pop
cmp
pop
inc
and
out
sub
or
pcmpeqb
or
push
sbb
rcr
mov
and
mov
fbld
idiv
aas
or
ret
sbb
mov
mov
push
or
cwde
ja
and
inc
push
lock
(bad)
inc
add
pop
test
hlt
mov
mov
ja
mov
add
add
rol
jbe
adc
inc
or
je
addr16
rcl
(bad)
cmps
test
in
dec
or
mov
xchg
or
jge
cmp
mov
hlt
cmp
je
mov
sbb
add
lods
or
ins
push
(bad)
fcomp
or
jne
or
push
add
shl
outs
pand
in
sub
adc
push
cvtpi2ps
xor
lock
or
cmc
pop
xor
int3
push
in
cmp
outs
push
xor
fistp
loopne
scas
outs
push
pop
adc
dec
out
aam
or
mov
xor
shr
xor
loopne
cmp
jb
jbe
je
mov
adc
call
cwde
push
jnp
push
or
jecxz
inc
aaa
adc
and
add
and
mov
or
pop
push
ficomp
mul
jl
jmp
jecxz
mov
xchg
inc
rcr
jne
dec
jno
sbb
aad
pop
and
loopne
cmp
aaa
lock
adc
fild
call
or
push
cli
mov
and
ror
mov
add
stc
inc
js
wbinvd
adc
mov
dec
and
mov
mov
call
into
inc
mov
mov
pop
add
mov
jb
cmp
mov
js
sti
mov
inc
mov
nop
or
test
pop
mov
neg
or
xor
or
push
iret
out
sahf
sbb
or
mov
lock
inc
inc
cmp
pop
jns
add
dec
pop
mov
pop
mov
xchg
xor
fidivr
in
or
xor
inc
pop
sbb
out
sub
mov
movs
lods
mov
sahf
ret
add
pop
inc
or
or
clc
mov
pop
or
dec
je
sub
mov
cmp
push
push
jle
sub
xchg
cmp
js
sub
ss
retf
pop
or
in
gs
xabort
cmp
ret
xchg
lods
push
js
push
jne
in
fwait
clc
pusha
leave
add
cmp
scas
jg
stos
hlt
adc
stc
sub
in
ffree
mov
push
push
pop
dec
aaa
add
ret
pop
cmp
sbb
and
add
push
bound
mov
repnz
les
ret
es
jmp
sahf
mov
adc
shl
cmp
sbb
or
or
or
jo
sbb
mov
data16
nop
or
test
dec
repz
sub
fisub
test
push
pushf
(bad)
jl
add
call
inc
or
mul
mov
cs
jl
jo
je
repz
xrelease
pop
or
imul
push
jecxz
lock
xor
or
test
or
inc
les
dec
inc
mov
pop
lods
arpl
push
cmp
stos
push
add
mov
cli
push
xor
loope
je
int
jecxz
sub
xchg
jmp
outs
test
retf
sti
aad
jo
push
rep
mov
dec
jmp
add
es
sar
or
pop
mov
mov
adc
inc
sbb
mov
sbb
in
dec
mov
add
push
adc
mov
xchg
cmp
push
sub
xchg
je
ins
push
sbb
mov
sahf
cmp
es
mov
(bad)
xchg
cmove
inc
pusha
push
add
lods
cs
pop
sub
cmp
and
dec
cmp
jne
sub
add
jmp
jne
call
shl
and
mov
mov
xchg
xchg
sbb
imul
add
fnsave
mov
ds
or
jmp
push
xor
mov
je
popa
mov
mov
push
cmp
icebp
xor
sbb
mov
lahf
xchg
push
dec
ins
cwde
cs
mov
sbb
pushf
cmp
dec
cmp
gs
push
test
dec
inc
mov
cmc
fs
sub
fs
gs
out
cld
clc
xor
jg
jne
imul
repnz
push
lods
mov
mov
movs
push
scas
out
push
jmp
(bad)
in
pop
jge
enter
and
cld
mov
jle
cwde
and
sbb
outs
sub
hlt
push
cld
fldcw
jno
push
jo
xchg
dec
add
xchg
fimul
cmp
dec
rol
mov
je
inc
cs
xchg
or
clc
je
dec
in
push
bound
cdq
sar
xor
mov
div
nop
sbb
icebp
fidiv
jbe
mov
mov
rcl
call
mov
test
push
push
movs
test
mov
adc
push
aad
dec
mov
aam
or
mov
rcl
movs
mov
xchg
into
adc
ret
je
fwait
retf
popa
stos
fs
and
cmp
xor
add
nop
add
lea
nop
dec
pop
cmp
pop
cmp
push
das
in
sbb
(bad)
jge
mov
dec
jae
ins
and
fist
jg
stos
je
jle
pop
xchg
lock
clc
jne
stos
inc
shr
sbb
add
add
sub
cwde
mov
lea
xor
xchg
ror
enter
push
cld
mov
xlat
test
cmp
sti
imul
push
movs
inc
or
adc
daa
cmp
out
test
push
mov
ja
mov
add
adc
mov
mov
fld
pop
lahf
movs
pop
cmp
xchg
retf
mov
daa
add
test
gs
push
sub
xchg
fld
test
rcl
jbe
dec
aam
adc
dec
rcl
cmp
rcl
cmp
loopne
js
cld
sub
int
sbb
jmp
cmp
jne
test
cdq
add
or
xchg
icebp
loopne
test
icebp
push
mov
pop
in
out
cwde
add
push
es
loope
pop
ficomp
and
inc
pusha
dec
inc
aaa
xor
push
addr16
add
xor
add
pop
add
pop
push
lahf
jl
hlt
stc
jge
inc
scas
push
or
jmp
xor
(bad)
mov
jb
pop
inc
cmp
or
jmp
push
adc
xchg
out
mov
or
ror
in
mov
in
adc
mov
pop
pop
push
or
lahf
aam
shl
xchg
mov
jo
mov
pop
push
or
stos
inc
rcl
sbb
stos
icebp
push
xchg
neg
mov
sbb
pop
test
xor
cmp
scas
add
sub
jne
and
or
imul
lds
fmul
cmp
cs
jmp
call
inc
rcr
in
jecxz
add
inc
add
fcmovu
in
aas
test
push
je
cmp
dec
push
push
lods
push
add
jp
and
test
sub
cmp
aaa
mov
cmps
fadd
ret
mov
lahf
mov
pusha
mov
push
fs
pop
or
adc
sub
push
cmps
in
rcr
xchg
or
mov
mov
ret
sub
pop
cwde
mov
sbb
pop
sbb
and
icebp
and
mov
pop
xchg
or
cmp
(bad)
cmp
xlat
pop
mov
and
test
loop
test
movs
jle
ins
push
lea
loopne
mov
adc
xor
fidiv
adc
pop
and
cmp
or
iret
ret
les
jge
push
fs
cmps
jae
cmps
push
xor
in
xchg
bound
lea
jo
je
ficomp
xchg
clc
add
xor
mov
call
nop
add
je
add
push
fs
mov
mov
sub
sti
sbb
add
push
mov
lea
enter
pop
dec
aas
js
mov
pop
inc
ja
mov
inc
jg
enter
add
ret
jmp
add
add
cmp
cs
fsub
sub
xchg
and
packssdw
mov
adc
cs
xor
call
xor
cmp
je
push
sub
(bad)
dec
or
lock
xor
cmp
mov
adc
aam
inc
loopne
add
xchg
jno
sbb
push
sub
mov
test
int3
or
add
outs
xchg
test
sub
lahf
push
aas
(bad)
lds
push
mov
adc
cmp
sub
clc
jecxz
call
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
pop
add
dec
inc
int
adc
or
add
repnz
shl
or
push
add
pusha
jmp
jp
call
fimul
inc
fcmove
push
cs
rcr
movsx
out
push
jg
scas
ins
lahf
mov
and
or
or
je
push
sbb
or
add
mov
cmp
fstp
adc
adc
add
or
test
test
inc
mov
and
xchg
lock
idiv
cmps
fst
stos
inc
inc
inc
push
cld
leave
sti
fsubp
cld
or
and
jne
ret
cs
push
je
cs
je
xor
pop
or
nop
push
add
rol
mov
jge
dec
push
adc
mov
cmp
ret
push
aaa
sub
cmp
and
adc
adc
call
pop
aas
sbb
sub
jl
test
(bad)
fcomp
pop
loope
lock
ja
push
push
sub
leave
ret
das
lock
or
push
sub
outs
ja
test
cmp
pop
int3
push
pop
add
push
add
ss
inc
int3
ds
add
push
loopne
adc
pop
add
rol
jmp
push
lea
dec
fmul
fs
ss
stos
push
mov
dec
adc
call
jno
pop
add
sbb
or
xor
sbb
adc
dec
in
cdq
test
enter
inc
jmp
dec
mov
(bad)
iret
(bad)
je
push
shl
add
push
pop
sub
test
jne
test
push
inc
std
sbb
push
ins
adc
inc
int
xchg
imul
pop
cmc
push
sbb
int
lods
stc
mov
or
sub
jmp
ret
mov
out
push
mov
pop
mov
mov
imul
mov
and
sti
mov
cmp
aam
dec
mov
jmp
rol
dec
cmp
xchg
push
cmc
cmp
cwde
pop
jge
push
push
movs
out
and
sbb
xor
or
dec
adc
std
mov
adc
retf
(bad)
sbb
push
sub
push
and
or
adc
cmp
adc
sbb
push
push
push
cs
inc
fs
les
(bad)
mov
pop
fistp
clc
sub
sbb
je
xchg
cli
adc
bnd
xchg
icebp
mov
lea
or
jnp
scas
cmc
sub
clc
xor
dec
lods
btc
mov
fadd
lea
mov
add
daa
inc
(bad)
jmp
int3
hlt
enter
add
pusha
push
or
pop
inc
mov
es
mov
dec
lods
imul
sbb
push
mov
loop
mov
mov
dec
shl
push
call
pop
aaa
jo
fidiv
shl
cmp
iret
ret
xor
out
rcr
add
retf
mov
mov
ins
push
push
inc
sar
scas
arpl
xchg
mov
test
jne
(bad)
xchg
cdq
sbb
nop
ret
xor
test
je
push
loopne
pop
and
push
or
jb
xor
clc
xchg
dec
popf
add
lahf
or
dec
out
jmp
inc
shr
dec
mov
rol
cmps
int
jne
mov
xor
pop
add
cmps
xchg
add
loope
nop
stos
jle
js
push
mov
dec
add
into
sbb
clc
dec
mov
(bad)
rcr
test
jmp
jns
stc
neg
or
fild
in
push
or
pop
mov
sar
shl
add
adc
push
mov
push
clc
jne
pop
sbb
xor
and
movs
pop
and
mov
or
push
rol
movs
outs
clc
mov
cmp
je
dec
jmp
fild
(bad)
and
mov
or
mov
fiadd
or
or
jne
adc
(bad)
aam
xor
fcom
retf
aaa
push
test
push
dec
(bad)
call
xor
add
mov
add
sar
inc
jecxz
imul
pop
outs
or
jne
adc
rcl
call
and
iret
sbb
push
ret
jl
adc
inc
push
jno
sbb
popf
test
(bad)
xchg
call
add
sbb
xor
xor
test
mov
xlat
inc
imul
jl
mov
jns
imul
dec
pusha
dec
sub
(bad)
push
or
mov
pop
add
pop
inc
lock
sbb
or
inc
inc
mov
addr16
aas
push
or
or
fs
push
aas
je
mov
cmp
push
xor
inc
nop
sar
hlt
mov
and
dec
jmp
mov
ror
mov
sbb
sub
xchg
xor
mov
movs
mov
mov
push
push
imul
or
mov
sahf
dec
jmp
inc
push
dec
inc
inc
icebp
add
mov
jmp
cmp
jnp
mov
pusha
pop
fcomp
inc
movs
xchg
cmp
inc
loope
mov
jl
pop
jg
fcompp
jmp
add
xor
sar
iret
out
dec
(bad)
cmp
test
mov
add
int
push
test
(bad)
push
or
push
add
jo
inc
mov
outs
cmp
icebp
fwait
movs
add
add
movzx
je
cmp
push
cmp
aam
inc
sub
add
inc
(bad)
jnp
jno
push
push
jmp
arpl
push
cmp
mov
cmp
push
lock
je
dec
pop
sahf
stos
cmp
pop
cmp
lock
sar
sbb
cmp
jb
fnstcw
shr
inc
mov
sbb
inc
inc
push
or
sbb
cs
sub
adc
test
cld
js
lahf
mov
ds
push
xchg
mov
and
add
aaa
mov
cmp
sub
cmp
jne
adc
cli
or
mov
inc
mov
adc
cmp
mov
mov
fmul
sub
and
loope
cmp
mov
call
cmp
jmp
add
dec
push
cmovle
sub
mov
movs
dec
add
nop
add
dec
icebp
int3
inc
cmp
mov
push
or
pop
mov
inc
pusha
fisub
or
retf
cmp
mov
push
dec
leave
bound
pop
add
and
aas
mov
push
stc
pop
xchg
cmp
fdivr
adc
into
xchg
push
rdmsr
in
xchg
mov
or
lahf
and
push
push
push
or
sub
pop
add
or
arpl
cmp
std
jno
cmp
jecxz
idiv
sbb
ret
sub
push
lea
inc
lods
jb
mov
jo
retf
jmp
loopne
cmp
das
repz
push
lods
sti
mov
mov
lea
(bad)
jbe
mov
push
lods
adc
cvtpi2ps
mov
fdivr
jne
jmp
xor
cmp
adc
fild
dec
test
fidivr
push
(bad)
jmp
mov
inc
mov
or
add
cmp
jne
jg
ins
cmp
add
mov
pop
cmps
ss
adc
fcom
(bad)
sbb
inc
pop
inc
sbb
das
test
jl
or
cmp
and
mov
loope
cld
dec
test
lea
sub
out
shl
sub
or
add
loope
mov
les
xor
mov
int
in
jmp
add
push
xchg
cmp
or
or
in
or
mov
push
mov
adc
mov
add
inc
enter
xor
cmp
jne
test
imul
inc
sub
jle
push
push
xlat
and
xor
test
jns
mov
and
pop
dec
retf
pusha
std
or
mov
pop
or
or
loope
clc
(bad)
clc
mov
lahf
movs
inc
add
pop
sbb
adc
cmp
rcr
scas
pop
or
jmp
jecxz
retf
or
call
sub
add
inc
push
push
jae
rol
inc
or
jg
dec
or
sar
fmul
aad
add
sbb
inc
push
call
sbb
mov
loopne
add
dec
inc
fsubr
sbb
inc
out
cli
cmp
mov
addr16
adc
je
js
dec
ret
and
adc
push
push
out
icebp
shl
(bad)
or
mov
imul
mov
or
dec
sahf
add
xchg
push
adc
sub
mov
and
pop
sbb
aaa
pop
adc
xor
stos
jmp
push
(bad)
imul
sbb
push
jne
push
or
outs
cmp
xor
sub
fdiv
ins
(bad)
fisttp
imul
enter
test
push
add
jo
and
data16
sti
mov
fs
lahf
aam
ficomp
(bad)
xchg
ret
xchg
js
stos
push
push
or
adc
lea
popf
mov
test
lock
call
retf
ror
mov
lock
xor
xchg
xchg
aad
mov
popa
sub
lods
adc
push
scas
add
pop
dec
adc
icebp
(bad)
mov
dec
(bad)
dec
and
mov
sar
shl
add
inc
and
jne
lock
mov
loopne
stc
sbb
outs
movq
sbb
test
je
rol
outs
add
add
loopne
(bad)
out
mov
pop
or
push
mov
cmp
inc
or
test
es
sub
cmp
ja
ret
ret
mov
sbb
add
enter
sar
sub
dec
add
sub
and
cmp
ja
push
mov
lea
(bad)
mov
leave
ror
sar
jo
cs
daa
lahf
into
or
lods
jbe
dec
or
je
les
mov
dec
je
sbb
jb
not
add
cmp
add
cld
adc
add
iret
mov
cmp
pand
push
mov
cld
loop
and
ror
retf
sbb
rcr
dec
mov
and
mov
mov
or
inc
ins
je
ja
leave
or
add
cmp
jne
inc
add
mov
aad
jg
jbe
pop
and
sbb
jne
inc
repnz
cmp
inc
xor
or
mov
mov
pop
cmp
push
int
imul
mov
dec
push
pop
lods
cmp
mov
jb
fnstsw
add
dec
leave
clc
test
pop
call
mov
mov
pop
call
cs
inc
in
ins
test
inc
push
aad
pusha
sar
(bad)
jns
pop
xor
cmp
js
je
pop
push
or
xchg
sub
ret
test
dec
sti
push
inc
cmp
popf
hlt
or
in
jbe
pop
iret
mov
inc
push
adc
jae
fistp
test
xor
push
sub
dec
fnstsw
or
retf
xor
add
push
(bad)
push
adc
xchg
xchg
jge
sbb
or
mov
loopne
mov
(bad)
loope
(bad)
xlat
xor
jmp
push
daa
mov
push
mov
lds
mov
xchg
or
mov
iret
inc
hlt
shr
adc
daa
ins
add
enter
mov
fs
not
loopne
sub
loop
mov
pop
cdq
loope
test
cmp
into
je
dec
add
mov
push
mov
dec
add
adc
adc
dec
lods
das
pop
sub
loopne
sti
jecxz
gs
mov
adc
mov
adc
in
imul
outs
jne
mov
pop
adc
xor
sbb
mov
pop
call
stos
adc
sbb
icebp
data16
adc
adc
ret
add
or
and
rol
test
add
nop
jecxz
aaa
jno
loop
adc
mov
pop
cmp
jle
sbb
jg
push
jle
mov
push
xor
test
sub
(bad)
in
ret
adc
mov
scas
popf
std
fsubrp
or
jmp
adc
adc
leave
daa
mov
lds
sub
lea
pop
add
clc
mov
and
out
in
cmp
je
imul
add
inc
and
mov
mov
sbb
dec
add
sub
and
add
push
fidivr
xchg
or
cli
je
mov
mov
pop
mov
mov
push
jle
adc
inc
daa
add
adc
imul
inc
add
mov
call
add
out
push
pop
out
dec
xor
rol
ins
call
sbb
mov
add
addr16
add
(bad)
dec
sbb
(bad)
jg
ret
sar
jae
neg
adc
neg
mov
fstp
and
mov
jne
fild
jno
(bad)
scas
sbb
pavgb
inc
xor
jne
and
jne
or
mov
test
and
cmp
add
aaa
sub
push
push
and
outs
mov
cmp
add
push
cld
call
mov
mov
ffreep
stos
movs
call
fist
xor
dec
mov
inc
jmp
dec
push
inc
push
std
cs
inc
inc
int3
jne
sub
test
and
sub
jmp
dec
or
pop
mov
add
shr
inc
dec
test
push
cmp
je
push
inc
(bad)
popa
aas
sub
sbb
jmp
test
je
outs
test
imul
loopne
hlt
push
test
pop
cmps
mov
sbb
fsubr
(bad)
popa
mov
or
add
aas
enter
jns
mov
jge
movs
adc
dec
adc
xchg
cmp
je
dec
pop
push
fst
bound
mov
ror
into
movs
adc
sti
sbb
inc
push
inc
retf
jne
cmp
xchg
jo
jae
sbb
mov
cmp
mov
pop
cmp
inc
data16
in
add
push
loop
push
dec
pop
jno
push
jp
movs
xor
inc
enter
rcl
pop
xor
test
movs
daa
pop
mov
mov
and
lock
pop
out
xchg
aaa
fsubr
push
mov
cmp
xchg
add
pop
pop
data16
outs
dec
mov
std
fwait
idiv
fisubr
sub
push
nop
pop
inc
add
adc
and
in
mov
cmp
and
inc
clc
ja
fisubr
movs
add
pavgb
xor
in
or
out
ss
push
adc
xor
ret
jl
dec
mov
and
adc
sahf
test
pop
mov
pop
in
(bad)
or
fist
pop
shr
pop
xchg
push
or
ins
adc
movs
out
xor
cmp
in
mov
pop
mov
mov
ins
and
mov
out
push
and
pop
cmp
and
or
or
mov
icebp
mov
adc
shr
cmp
sub
push
daa
shr
fstp
call
fcmovnbe
jmp
mov
jle
(bad)
out
inc
mul
add
jb
cmp
or
cmp
add
popa
sub
cwde
sub
push
add
lods
fbstp
cmp
sar
or
sete
mov
pop
ss
movs
cmc
dec
(bad)
enter
fisttp
push
push
inc
sbb
loopne
push
xchg
dec
or
stc
jb
sbb
mov
inc
add
(bad)
jb
xchg
mov
jns
popf
lahf
and
cmp
(bad)
sub
mov
(bad)
ror
fcom
push
cs
xchg
xor
sbb
xor
cmc
cmp
pop
not
fmul
pop
inc
sub
gs
add
dec
cmc
mov
jbe
ja
or
xor
lds
xor
int3
scas
retf
cmp
cli
idiv
ror
cmp
jb
imul
ret
jae
and
dec
xor
rol
data16
scas
pop
rol
pushf
mov
test
or
and
and
xchg
or
mov
add
not
push
ret
rol
mov
or
imul
inc
hlt
stc
cmp
jge
imul
jle
and
cmc
sub
cmp
and
sar
outs
sub
cmp
std
ins
rol
adc
cmp
in
or
xchg
gs
sub
adc
push
cmp
xchg
pop
pop
imul
mov
call
pop
mov
jge
fld
dec
pop
cmp
push
and
mov
sbb
and
xchg
fisubr
mov
sub
icebp
push
lahf
hlt
mov
lea
xchg
push
push
xor
or
push
and
xor
ret
dec
xchg
inc
adc
je
sub
mov
mov
add
xchg
cmp
cmp
and
jl
mov
pushf
mov
pop
sbb
mov
loopne
or
sbb
sub
jo
lea
pusha
rcr
shl
mov
movups
(bad)
cmp
jb
dec
cmp
sar
and
aam
jb
ins
in
adc
dec
push
push
mov
cli
dec
iret
and
adc
je
in
cmp
add
pop
ret
inc
add
lea
ds
test
dec
mov
inc
or
xchg
inc
sti
hlt
inc
adc
xchg
xor
mov
xor
mov
test
sub
push
or
push
xchg
sbb
push
pop
jp
dec
test
sub
cmc
cmp
lods
es
cli
aas
push
aaa
push
ss
loope
mov
in
add
jmp
jo
js
adc
jne
or
je
pop
js
ins
and
sti
add
mov
test
js
loope
arpl
adc
jp
adc
xchg
loope
(bad)
movs
inc
and
mov
lock
not
jne
mov
adc
sub
or
cmp
jl
cmc
xchg
rcr
xlat
mov
add
icebp
xchg
push
outs
unpcklps
daa
cmps
les
adc
lods
jle
or
dec
sbb
scas
es
mov
daa
icebp
mov
fcom
cmp
push
add
push
aas
out
xchg
add
jo
push
movs
sub
or
inc
jo
mov
mov
bound
mov
lea
pop
rol
cmp
mov
jmp
push
lock
cli
adc
mov
and
imul
push
push
xor
scas
pop
jne
sbb
aam
push
jecxz
pop
ja
cmp
xchg
jmp
movs
pop
outs
cmp
dec
dec
lock
lea
outs
jne
adc
adc
add
sub
inc
and
rcr
add
enter
fdiv
sub
cld
adc
adc
jo
mov
ins
arpl
hlt
fild
jns
cld
shr
mov
imul
lahf
pushf
mov
inc
add
push
leave
or
push
lea
je
loope
mov
call
xor
adc
test
je
jne
inc
cli
add
cmp
jbe
push
pop
mov
dec
rol
push
popa
push
sub
jae
mov
shr
lea
not
and
out
imul
and
jmp
lea
xor
pop
jp
mov
add
sub
mov
push
dec
pop
add
iret
mov
xor
push
or
mov
pop
jmp
(bad)
shr
pop
mov
sub
adc
jmp
jnp
jne
and
sti
add
mov
dec
pop
cmp
jbe
das
imul
jl
(bad)
and
cmp
pop
fidiv
jno
jmp
mov
mov
shr
not
and
or
and
xor
sbb
xchg
out
loopne
pop
xor
int
add
dec
pop
add
and
cmp
(bad)
outs
jbe
jmp
ja
fidiv
cld
lock
mov
xchg
pop
dec
pop
ss
dec
pusha
mov
mov
hlt
push
test
mov
sti
or
push
xchg
lods
push
or
pop
lock
dec
or
jmp
dec
adc
repnz
in
lods
dec
(bad)
push
mov
sbb
cmp
or
add
popa
fmul
inc
xor
ror
push
inc
(bad)
fsubr
gs
cmp
aas
mov
or
lsl
scas
jp
push
call
xor
mov
push
or
int3
cmp
sub
dec
inc
shl
adc
inc
js
jecxz
add
push
push
fidiv
add
(bad)
and
into
pop
int
sbb
push
inc
mov
adc
cli
in
push
lea
push
mov
mov
push
cmp
or
jmp
js
add
das
mov
inc
mov
or
lock
shl
lods
adc
xchg
sbb
(bad)
vmread
lea
stc
neg
lock
push
imul
or
sub
add
and
add
loopne
test
stos
int
jmp
or
mov
adc
jle
call
scas
and
mov
(bad)
pusha
ror
shl
cmp
fadd
add
inc
and
mov
imul
mov
mov
add
cmp
(bad)
sti
add
out
mov
push
xlat
int
icebp
lea
mov
cli
ja
(bad)
sub
shr
jg
test
inc
or
or
adc
adc
push
out
mov
lock
call
dec
jne
adc
dec
adc
clc
add
rep
dec
outs
or
and
adc
fs
inc
add
mov
inc
mov
lock
lock
in
add
jo
jmp
int3
les
sbb
jno
adc
add
jns
into
xlat
sub
add
shr
jb
xor
inc
dec
cmp
xchg
loopne
add
mov
and
pushf
jle
jne
(bad)
sbb
repz
push
cld
hlt
sar
push
mov
int3
push
push
or
mov
dec
int
inc
stc
sbb
clc
sti
dec
in
rol
es
add
cmp
add
or
mov
add
push
jns
push
es
sub
add
add
push
stos
movs
adc
pushf
sar
dec
mov
cs
aas
inc
(bad)
fstp
pop
hlt
lea
add
jg
or
mov
cmps
imul
rcl
sbb
iret
ins
add
js
and
and
movs
jmp
js
test
add
adc
inc
add
push
xor
mov
and
add
(bad)
movups
imul
lgs
ret
lea
mov
dec
cwde
add
cld
push
sar
dec
jp
ret
adc
(bad)
pop
test
cmps
mov
imul
int
sbb
cmp
dec
mov
sbb
xchg
fisttp
mov
mov
ja
add
dec
ficom
out
sbb
fiadd
fimul
or
mov
stc
popa
xchg
mov
dec
add
or
mov
push
cmp
xchg
retf
retf
dec
into
mov
push
cs
rdmsr
cmp
mov
jns
dec
mov
add
mov
cmpxchg
ins
ret
inc
scas
sbb
pop
and
inc
pop
mov
cmp
push
push
push
aam
pop
ja
into
call
out
adc
jmp
in
or
xor
stos
pop
push
loopne
dec
or
jmp
push
nop
cmp
and
dec
xlat
jne
add
add
and
call
loop
add
fnstenv
jmp
out
dec
test
add
xor
aaa
arpl
adc
test
fimul
icebp
add
mov
fadd
mov
cmp
in
mov
xchg
jle
add
and
ror
call
dec
pop
iret
jne
jnp
mov
mov
push
cmp
jp
dec
jmp
(bad)
dec
mov
jle
mov
adc
outs
mov
sahf
jns
inc
test
inc
push
pushf
mov
sub
mov
sbb
dec
adc
mov
add
xchg
sbb
dec
leave
test
cmp
(bad)
sti
add
mov
dec
jne
int3
dec
das
js
repnz
jmp
jp
mov
pop
pusha
dec
bound
fwait
or
mov
imul
push
sub
or
jns
or
das
pop
xor
sub
jge
inc
inc
aas
jge
or
ret
out
or
dec
hlt
pop
adc
jl
push
inc
push
inc
or
push
mov
lock
out
or
nop
cmp
scas
mov
call
push
push
add
scas
and
sahf
jno
mov
lea
dec
jne
cmp
inc
ret
or
(bad)
pop
mov
int3
and
jo
inc
push
lods
xor
pop
sub
add
mov
or
xor
psubsw
push
hlt
enter
ja
call
sbb
ja
aam
inc
cmp
inc
pop
jb
or
push
loope
xor
inc
or
dec
dec
xor
scas
dec
pop
jmp
or
in
test
jle
inc
(bad)
mov
cmps
mov
dec
push
sbb
ins
nop
jge
add
stos
and
mov
popa
int3
dec
or
ins
out
gs
out
pop
shl
push
or
fdiv
or
xchg
mov
push
dec
inc
inc
cmp
cmp
sub
add
push
mov
push
push
mov
push
xchg
adc
xor
call
dec
pusha
pop
sbb
add
imul
dec
fidivr
and
std
cmp
loopne
inc
cli
mov
push
push
adc
or
cli
sti
cmp
fadd
jbe
add
std
lahf
push
mov
xchg
cmp
pop
mov
xor
adc
in
jne
push
or
pop
jmp
push
cmps
mov
loopne
cmp
clc
jge
mov
(bad)
mov
xor
call
add
jl
dec
sub
fwait
push
in
jmp
push
cli
add
sbb
fs
inc
pop
mov
push
xor
nop
fadd
pop
aaa
dec
dec
movs
pop
mov
daa
xchg
cmp
leave
aam
fst
push
lea
pop
imul
daa
pop
(bad)
mov
retf
rcr
shr
jmp
cmp
push
mov
mov
xchg
pop
inc
or
aaa
mov
add
pop
ins
cld
rcl
mov
out
dec
push
pop
je
dec
sub
cs
not
dec
sbb
neg
cmp
push
add
jl
(bad)
stos
inc
ret
cmp
jmp
push
shr
movs
fadd
jbe
xchg
cmp
push
adc
ret
jne
xor
cmp
enter
cmp
add
sub
(bad)
adc
into
fimul
mov
clc
je
mov
bnd
pop
out
ins
jnp
mov
xor
fisub
fbld
or
pop
(bad)
je
sub
dec
push
and
mov
inc
sar
add
dec
sub
mul
movs
sbb
int
xchg
add
or
(bad)
hlt
xor
push
mov
sbb
jnp
mov
mov
mov
cmp
xchg
pop
add
inc
push
inc
outs
out
in
cld
or
test
pop
fimul
adc
or
or
push
loop
loop
and
xchg
mov
ret
call
jo
(bad)
scas
std
mov
mov
cmp
ins
scas
sbb
inc
inc
add
ds
pop
std
sbb
fist
pusha
pop
lea
cmp
or
jne
mov
pop
out
jmp
dec
aas
call
adc
outs
and
adc
aas
cmp
push
pop
aam
pop
mov
sbb
or
jle
jmp
cmp
push
xor
pop
call
jae
sbb
cmp
adc
adc
inc
(bad)
ins
ret
add
jbe
or
cmps
test
lock
and
push
dec
mov
test
js
inc
mov
in
ror
mov
jmp
clc
add
adc
icebp
jp
clc
jb
dec
push
or
mov
out
mov
mov
sbb
movsx
add
sub
es
add
jmp
popa
and
test
in
lods
sbb
xchg
and
or
pop
adc
fcomp
scas
push
mov
sub
cwde
dec
sbb
call
cmp
(bad)
arpl
call
and
or
test
outs
fs
jb
mov
inc
add
nop
call
dec
push
xor
(bad)
sub
sub
int3
mov
push
stc
xor
jg
popf
xlat
adc
pcmpgtd
sbb
int
in
(bad)
sub
jmp
test
or
mov
(bad)
call
and
push
add
xchg
and
adc
sub
repnz
sub
pop
clc
adc
jp
call
jns
dec
jle
pop
test
mov
jle
cmp
test
sbb
fiadd
push
imul
dec
or
sub
push
xchg
(bad)
and
mov
lock
push
ror
add
xchg
cmps
inc
pop
xchg
push
push
mov
adc
mov
mov
fisubr
adc
or
dec
pop
call
xchg
ret
mov
push
xor
xchg
add
je
call
adc
ror
clc
sbb
pop
adc
into
mov
repz
aaa
push
dec
jne
lea
push
les
sbb
adc
nop
add
mov
fsubr
js
outs
inc
mov
sub
inc
(bad)
inc
or
hlt
mov
and
xchg
jno
test
je
lea
jg
test
mov
push
lea
sbb
dec
cmp
xor
pop
nop
enter
mov
fdivr
ficom
push
push
imul
pop
or
fist
sub
push
cmp
push
push
inc
inc
cld
pop
mov
and
inc
jo
imul
and
pusha
sbb
adc
movs
cmp
ficom
mov
or
add
test
add
mov
jmp
mov
test
mov
pop
sub
mov
cmp
and
pop
push
loop
retf
js
cli
xchg
loop
imul
add
js
ja
(bad)
push
jbe
jb
push
sbb
add
outs
(bad)
gs
sar
inc
jo
sbb
ja
sub
or
(bad)
fild
jmp
ss
fst
sbb
(bad)
push
test
(bad)
push
add
mov
push
movs
lahf
cmp
add
pop
mov
and
adc
cs
adc
cmp
adc
jg
sbb
pop
cld
je
lahf
jmp
inc
ficom
jb
jne
sbb
fld
fsubr
imul
cmp
les
push
cs
clc
(bad)
aas
and
push
sub
or
xchg
pop
cmp
and
sbb
cld
stos
xor
inc
add
add
mov
mov
(bad)
and
inc
shl
lock
out
into
std
adc
pushf
dec
xor
jmp
test
outs
xor
push
push
cmps
repnz
mov
dec
sub
sbb
inc
rol
mov
or
push
call
out
movs
iret
call
mov
test
arpl
stc
bound
xchg
lea
dec
clc
imul
jmp
adc
add
test
shr
loopne
cmp
or
call
cmp
jbe
fiadd
daa
mov
and
jne
outs
outs
(bad)
sub
sahf
mov
jb
mov
pop
dec
or
xor
inc
adc
lock
push
mov
out
adc
in
xor
push
mov
inc
inc
dec
push
repz
mov
jl
add
add
add
or
shl
jle
xor
jo
shr
mov
inc
dec
jne
inc
es
dec
test
add
gs
test
xor
push
clc
push
pusha
enter
push
sbb
lock
xchg
mov
loopne
adc
jo
mov
push
mov
and
add
xchg
xor
push
out
fs
add
mov
rep
push
aam
loop
and
fld
adc
test
cld
stc
fsub
sbb
push
mov
int3
cmp
(bad)
xchg
mov
jo
mov
add
cmps
sbb
push
imul
jo
or
mov
call
xchg
inc
ins
dec
loopne
or
cmp
fs
jmp
xor
dec
sbb
mov
retf
mov
adc
jmp
jmp
sbb
aaa
cld
sbb
jmp
mov
xchg
jno
push
add
xlat
fwait
sub
mov
xchg
test
cdq
mov
imul
pop
mov
or
dec
sbb
xchg
add
pop
pop
and
test
or
ja
mov
daa
mov
pop
jo
cmp
or
loope
aad
aaa
inc
push
jmp
clc
mov
test
sbb
cli
loop
je
in
xor
push
clc
stc
add
cwde
mov
adc
add
push
pusha
repnz
out
daa
push
jno
add
cmp
adc
mov
and
sbb
cmps
test
imul
cs
les
shr
jmp
lea
ds
outs
push
push
dec
adc
push
and
jg
out
mov
jg
jg
outs
inc
or
idiv
lahf
push
jbe
jle
xor
jg
jg
jmp
lahf
ja
jg
lea
bound
mov
pop
mov
mov
hlt
jmp
clc
loope
mov
retf
prefetch
imul
prefetchw
sbb
outs
mov
mov
icebp
je
sub
push
lea
cmp
pop
push
retf
ja
mov
inc
cld
xchg
movs
shr
in
add
sub
stos
jmp
scas
imul
movs
push
jmp
cmp
jne
outs
sbb
sub
adc
ror
and
sub
shr
adc
push
push
ret
out
jmp
movs
mov
arpl
jle
test
(bad)
mov
test
sbb
hlt
mov
popa
xor
add
dec
fs
clc
in
mov
jmp
jb
inc
inc
xor
aam
jecxz
push
xchg
xchg
fs
pop
push
inc
and
je
push
popf
push
adc
sbb
cmp
test
and
data16
pop
idiv
push
xor
test
mov
test
retf
mov
push
(bad)
dec
ja
scas
cmc
adc
jnp
dec
mov
int3
push
add
aaa
fnstcw
push
rol
imul
sbb
cmp
jb
and
scas
sbb
cmp
pop
pop
rcl
mov
and
imul
int3
xor
pop
sti
or
cmp
aaa
adc
add
shl
fs
pop
fdiv
pop
int
cmp
lods
mov
call
push
mov
scas
mov
push
add
pcmpeqb
xchg
(bad)
pop
movs
je
dec
je
xor
scas
je
mov
jmp
pop
lods
lods
jmp
push
scas
test
mov
mov
push
add
pop
pop
sbb
leave
cs
loopne
sub
push
adc
dec
cmp
scas
dec
xor
pop
mov
adc
mov
imul
inc
sbb
inc
mov
cs
sub
adc
mov
jbe
retf
jge
mov
ficom
mov
sbb
(bad)
je
add
or
pop
sbb
push
jo
push
sub
sbb
das
retf
ins
dec
lods
inc
and
add
xor
sub
adc
and
and
dec
into
jl
cmp
jle
std
out
and
add
or
adc
sbb
jae
adc
sbb
dec
add
es
adc
jmp
inc
ins
ror
or
inc
jnp
fadd
int3
in
sbb
nop
add
and
add
cmp
imul
sbb
add
cld
mov
mov
enter
das
push
cld
mov
shl
clc
jmp
push
sbb
pop
cmp
xor
xchg
xchg
jmp
xor
dec
stc
outs
rcl
(bad)
or
adc
ja
xchg
xchg
add
add
std
jp
pusha
fld
repnz
enter
sbb
mov
and
aaa
or
jb
mov
pop
xchg
cli
add
ret
sub
cmps
out
pop
cmp
lahf
test
or
adc
adc
mov
and
mov
push
push
mov
dec
mov
adc
ja
mov
jmp
adc
mov
bt
pop
sbb
sbb
sbb
lock
ins
ret
outs
or
adc
add
clc
jg
and
jne
mov
mov
inc
inc
cmc
fmul
mov
sbb
pop
sbb
add
cmp
test
cmps
or
add
jle
jne
lea
(bad)
jb
or
imul
dec
pushf
push
xor
test
ss
ficomp
jne
push
inc
sahf
imul
pop
jbe
lea
xchg
adc
popf
out
adc
mov
and
cs
sub
(bad)
and
jmp
rcl
loope
push
(bad)
in
push
pop
mov
dec
xchg
frstor
adc
and
sub
and
or
mov
push
jnp
cmp
cld
sbb
or
jl
sub
add
adc
retf
iret
sahf
inc
movs
cmps
aaa
int3
stos
or
mov
and
fs
ret
jae
test
fs
pop
fbld
add
les
mov
mov
inc
mov
daa
loopne
cwde
jecxz
add
or
ret
xor
xor
dec
test
adc
in
ja
mov
in
les
pop
pushw
push
dec
mul
push
or
dec
and
push
ret
pop
adc
imul
jbe
cmps
and
loopne
mov
sbb
jne
retf
sub
dec
push
add
mov
xchg
cmp
paddsb
adc
pop
test
xlat
dec
in
sbb
mov
mov
jmp
pop
ja
dec
jo
add
jmp
adc
fld
add
popa
sbb
jbe
loop
pusha
jne
lea
nop
lock
js
mov
pop
aam
push
fisttp
adc
out
add
in
std
sbb
retf
push
mov
leave
xor
sub
cmp
mov
mov
and
test
jne
loopne
mov
pop
mov
adc
push
or
or
into
cmc
cmp
test
xor
dec
in
pusha
shr
ja
inc
inc
div
adc
cmp
jne
xor
adc
xchg
cmps
inc
push
stc
pop
shl
xchg
rcl
xor
cmc
fsubr
cdq
lea
push
add
jg
mov
cmp
jbe
(bad)
cld
xchg
pop
dec
add
out
shl
inc
push
aas
clc
loop
iret
fidiv
adc
popa
mov
test
push
pop
je
test
jo
js
pop
sbb
xchg
lea
add
jo
mov
retf
lahf
mov
mov
xor
or
adc
(bad)
in
or
pop
xor
push
out
mov
mov
outs
shr
outs
inc
je
push
adc
jbe
push
add
adc
fdiv
call
and
jo
jl
cmp
push
ror
ss
fdivr
jge
jb
push
sahf
push
inc
mov
in
sbb
add
sbb
in
mov
cmp
(bad)
rcr
(bad)
pop
aam
jnp
cmp
xchg
or
xchg
add
scas
rol
inc
mov
pop
pushf
jmp
adc
dec
jmp
xor
push
in
xchg
xchg
inc
inc
pop
out
cmps
mov
sub
inc
inc
and
fdivrp
pop
es
aad
or
pop
int
pop
cmp
add
xchg
or
cmp
mov
dec
stc
add
add
pop
cld
pop
retf
fcomp
js
je
inc
or
je
test
cmp
leave
mov
add
or
mov
into
inc
add
xor
cmp
inc
inc
pop
adc
(bad)
pop
add
add
shl
xchg
push
rcl
push
movs
cmp
mov
mov
inc
clc
xor
aam
mov
add
cmp
ret
and
sub
dec
adc
sub
inc
dec
hlt
imul
sbb
cmp
lock
jge
stc
push
clc
shl
lea
call
scas
and
jge
(bad)
push
push
or
mov
xor
cmp
xchg
test
sbb
fdiv
and
inc
xor
mov
sub
mov
and
add
sti
mov
cwde
es
jbe
jmp
cmp
or
jne
add
jne
push
in
sahf
cmp
dec
inc
inc
or
jne
sti
aaa
popa
aaa
repnz
push
sar
inc
push
push
adc
inc
and
shl
lock
mov
sbb
and
fmul
sar
dec
mov
dec
cld
jnp
sbb
dec
or
fild
xchg
fadd
jmp
mov
sbb
mov
push
jb
popa
test
lock
sti
or
sub
out
cmp
jae
arpl
push
sbb
push
mov
dec
sub
or
adc
push
rol
cld
pop
push
popa
cmc
push
push
dec
gs
dec
dec
hlt
hlt
test
push
push
jmp
push
push
mov
mov
ds
test
mov
sub
(bad)
pcmpeqb
dec
shr
fdiv
lock
cwde
xchg
js
mov
and
and
div
les
mov
test
adc
(bad)
dec
or
or
cs
(bad)
je
mov
aas
adc
or
add
push
jae
daa
sbb
push
outs
test
popa
test
inc
rcr
or
pop
jmp
fbstp
pusha
xchg
xchg
push
inc
pop
push
jo
mov
mov
cwde
lahf
inc
mov
dec
adc
movs
sub
or
in
in
adc
xchg
xchg
fld
sbb
xchg
xchg
xchg
xchg
sub
xor
test
inc
and
daa
mov
inc
inc
cmovs
add
add
leave
pusha
fs
leave
jo
js
and
cmp
sbb
xchg
dec
xor
mov
and
pushf
mov
movs
test
sub
test
xor
sub
push
fld
jle
sahf
repz
js
leave
aaa
add
cmp
cmp
or
jle
pop
repnz
inc
pop
cs
dec
in
pop
xchg
sbb
push
and
and
dec
jle
sbb
ret
out
mov
sar
sbb
inc
cld
add
out
mov
mov
add
dec
sbb
mov
push
cmp
fist
inc
push
adc
jge
test
aaa
retf
rcl
pop
mov
or
dec
xor
stos
dec
cmp
inc
xor
inc
dec
mov
psadbw
ins
push
test
sbb
cwde
enter
ja
test
mov
js
loopne
or
mov
sub
mov
je
jmp
add
fdiv
gs
scas
iret
add
add
add
nop
dec
xor
pop
sbb
ret
xchg
adc
stos
rol
xchg
cmps
jle
cmp
xor
mov
or
dec
sub
popf
sbb
ficomp
rcr
pop
or
fnsave
or
fwait
sti
jmp
sbb
shl
push
add
add
inc
in
mov
mov
cmp
pop
add
fcom
push
(bad)
cdq
jge
xchg
call
add
cmp
or
mov
stos
in
add
(bad)
lea
mov
daa
add
retf
add
pop
leave
les
sti
sub
sub
push
mov
cld
dec
cwde
jb
lea
test
xchg
jo
ret
adc
inc
mov
cmp
repz
push
cld
jne
mov
push
cmp
jne
(bad)
es
jne
call
out
or
ins
mov
jb
jmp
mov
mov
push
inc
jmp
adc
iret
repz
(bad)
jmp
std
std
jmp
cld
cld
sub
(bad)
jmp
fucomi
pmaxub
inc
inc
push
cwde
inc
dec
mov
data16
push
mov
sub
jmp
or
pop
(bad)
loope
or
lea
push
or
pop
shr
push
mov
ret
sbb
or
(bad)
jp
pop
xor
push
test
adc
div
movs
add
test
or
dec
inc
je
aam
or
rcl
cmp
frstor
add
sub
mov
and
inc
push
sbb
clc
rol
pop
pushf
xor
inc
idiv
cmp
pushf
test
(bad)
je
sub
pusha
or
mov
pop
ret
or
mov
(bad)
imul
rcl
rcr
mov
jl
fmul
xchg
jno
fmul
jg
in
fbstp
sbb
push
scas
mul
cmp
adc
jmp
(bad)
into
test
aam
add
enter
(bad)
push
pushf
sti
movs
mov
inc
push
dec
fcomp
xor
mov
mov
dec
jne
mov
shl
sar
inc
sub
mov
fadd
add
sbb
or
dec
or
clc
add
jle
jbe
iretw
jbe
push
pop
xor
mov
mov
rol
ror
popa
and
aam
mov
icebp
mov
add
or
scas
movs
push
test
push
dec
ins
cmp
(bad)
out
aaa
or
nop
dec
cmp
aad
and
shl
adc
mov
and
push
std
fs
mov
dec
(bad)
xor
(bad)
push
pushf
aam
jo
test
mov
test
jl
dec
and
cmp
imul
or
push
or
pop
and
outs
and
shr
inc
jl
push
dec
add
adc
ins
push
test
push
jbe
dec
sub
repz
xor
and
fist
or
fiadd
inc
movs
dec
fisubr
retf
movs
scas
sahf
fxch
pop
mov
xchg
or
pxor
sbb
cmps
nop
dec
movs
rcr
and
inc
outs
push
sub
shl
adc
(bad)
cmp
cld
push
call
jg
cmp
je
sub
retf
dec
imul
loop
fsub
cmp
sub
inc
add
nop
jo
push
shr
add
inc
rep
std
cs
add
sub
mov
sub
xor
sbb
enter
aam
in
int3
and
sbb
fisttp
sub
xor
cmp
jb
in
jmp
inc
hlt
das
adc
sbb
push
adc
and
out
das
and
or
mov
jmp
pop
xchg
fs
test
imul
sub
mov
cmp
add
cmc
or
ror
fadd
adc
inc
jmp
(bad)
jp
dec
or
pop
shr
mov
adc
das
add
add
add
dec
inc
xor
ret
cmps
inc
sti
push
mov
je
dec
je
add
mov
xlat
xchg
ja
push
std
and
sub
sahf
sbb
ror
or
mov
out
mov
cmp
clc
movs
pop
pop
aas
iret
cmp
aaa
push
sub
mov
cmp
jge
jmp
jne
adc
add
pop
clc
jnp
xchg
mov
mov
or
cmp
sub
push
pop
cmp
mov
jne
int3
adc
dec
inc
cwde
in
neg
add
iret
sbb
mov
or
clts
pusha
cmp
pusha
punpckhbw
adc
test
call
push
or
not
and
in
dec
or
pop
in
or
in
or
mov
or
add
scas
sub
test
test
aas
dec
adc
add
cmps
test
je
sub
sub
jecxz
adc
(bad)
sbb
shr
xlat
movs
sbb
shr
mov
mov
mov
adc
cmps
cmp
je
push
not
call
call
enter
je
addr16
jmp
jge
jbe
fs
jno
mov
rol
and
arpl
loopne
or
xor
inc
sub
test
push
push
jecxz
sub
mov
xchg
shld
test
jnp
or
iretw
ins
pop
push
adc
out
enter
mov
stos
pop
neg
jl
add
aas
cmp
add
std
fwait
and
mov
and
or
push
js
adc
imul
je
push
or
push
int
rcl
js
call
cmp
retf
pop
je
cmp
mov
push
sub
or
out
or
adc
call
js
cdq
dec
es
ret
bound
pop
(bad)
jmp
or
jge
imul
repnz
dec
cli
data16
(bad)
add
je
or
sbb
inc
and
add
add
or
jne
nop
add
pop
in
std
xor
add
wbinvd
add
jl
sahf
aas
div
adc
std
test
cmp
shr
xor
pushf
xchg
nop
mov
ja
inc
xchg
add
in
xchg
or
push
fdiv
int
inc
xor
cmp
retf
in
or
or
push
mov
(bad)
dec
jbe
mov
ss
sbb
sbb
fadd
push
and
xchg
fadd
xchg
ss
repz
xor
imul
push
in
inc
(bad)
lods
cli
jge
out
mov
je
pop
lds
rol
lods
lock
aam
(bad)
cld
push
ja
mov
push
sub
imul
ret
push
not
jne
daa
ror
pop
adc
xlat
je
fist
sub
and
pop
or
pop
mov
jmp
cmp
dec
ret
and
xchg
pop
bound
cmp
sar
add
cmp
jg
enter
(bad)
aas
sbb
fmul
add
or
dec
inc
ret
or
(bad)
dec
and
shl
and
or
mov
cmp
jne
add
je
pop
fidivr
imul
test
fsub
mov
mov
and
out
ins
mov
jg
cmps
(bad)
(bad)
xlat
dec
ss
pop
ret
inc
scas
mov
call
push
sbb
mov
adc
dec
popa
pop
mov
mov
or
pop
or
aas
ins
sub
loopne
je
adc
out
and
push
lods
rol
cmp
int3
mov
jb
push
cmp
xchg
and
mov
push
sub
pop
mov
stos
outs
and
rcr
test
mov
stos
pop
adc
inc
xchg
(bad)
adc
sbb
and
push
in
cmps
icebp
mov
lock
bound
add
push
xchg
es
add
sbb
les
and
repz
gs
sub
push
sbb
popf
sub
xor
push
shl
inc
add
push
je
cdq
sbb
pminsw
xor
cmp
jle
dec
mov
jge
sti
stos
add
add
loope
out
mov
or
dec
icebp
mov
jo
jb
or
jle
jle
ja
add
jmp
and
jb
sbb
sbb
and
idiv
fistp
clc
lea
test
je
xchg
or
inc
mov
cmovno
cmps
jl
inc
inc
cld
je
clc
cld
jmp
mov
sub
add
xchg
repnz
xchg
cmp
dec
add
dec
xor
pop
dec
dec
dec
cld
stos
jmp
dec
retf
mov
add
pop
rcr
sub
xor
mov
test
fcomip
sub
push
dec
lods
pusha
pop
fucom
(bad)
adc
test
das
jne
cmps
lock
sbb
mov
(bad)
jns
fstp
add
das
je
xor
push
sub
cld
clc
bound
push
std
gs
ret
push
cmp
gs
mov
cmp
inc
adc
in
(bad)
test
sbb
xor
and
xchg
cmp
xchg
data16
enter
jbe
or
or
inc
movs
cmp
sub
clc
pop
push
pop
mov
mov
es
and
push
sub
jne
clc
xor
aaa
retf
je
pusha
fimul
pop
cld
je
clc
add
js
xchg
add
add
sub
push
cmp
sbb
xchg
xor
dec
cld
ins
shl
xchg
mov
push
push
and
cmp
jno
rol
xchg
ret
test
adc
xor
pop
push
pop
das
mov
int3
sbb
das
sub
fdivr
push
and
je
cmp
push
cmp
mov
mov
loope
add
jle
jl
add
je
pop
mov
mov
lock
sub
inc
jmp
ins
mov
shl
fist
jns
pop
add
mov
cmp
add
and
outs
jp
fimul
imul
push
pop
pop
xor
sar
inc
lods
test
call
adc
cld
push
dec
js
imul
movs
mov
jne
xchg
mov
mov
jmp
int
cwde
cmc
mov
mov
les
sub
adc
les
add
movs
push
jmp
fs
daa
add
jne
ds
sub
(bad)
push
xor
leave
inc
pushf
add
push
cmp
push
or
adc
pop
add
cmps
rcl
loopne
les
xchg
jmp
xlat
inc
or
mov
pop
mov
xor
or
fsubrp
fiadd
or
fstp
dec
and
xor
lea
xor
int3
cwde
ret
adc
xchg
sbb
add
add
nop
mov
cmp
dec
mov
jno
les
or
loope
jmp
data16
inc
pop
cmova
lea
mov
add
je
stos
add
clc
add
cmp
sbb
pop
jbe
push
sbb
or
pusha
shr
xchg
jne
mov
cmp
mov
cmc
lea
cld
pop
or
test
mov
xlat
imul
cmp
cmp
pop
push
aaa
jp
pushw
mov
or
retf
or
test
inc
aas
mov
adc
push
shl
or
call
inc
les
jo
lds
adc
mov
fnstenv
dec
mov
push
cmp
xor
push
jge
jnp
clc
mov
jle
fisttp
jnp
sar
shr
mov
push
rcr
push
or
sbb
pop
pop
or
sub
gs
cmp
push
sbb
icebp
nop
neg
xor
jmp
sbb
cmp
rol
push
mov
add
jne
test
sti
xor
mov
mov
mov
and
stos
jmp
ret
push
lock
jmp
imul
call
xor
imul
jl
adc
add
or
push
jmp
or
jmp
xchg
cli
inc
not
sbb
push
test
das
push
xchg
cmp
push
jecxz
sub
test
pop
xor
adc
cmp
retf
or
call
or
call
loope
xor
and
movs
stos
or
xchg
sub
lods
jne
mov
and
and
lock
scas
iret
mov
adc
cmp
pop
outs
int
ss
push
sbb
jne
in
ror
push
shr
fcom
je
mov
jno
jae
jo
push
mov
add
test
(bad)
ss
xor
mov
sbb
adc
cmps
add
or
popf
push
lahf
daa
lds
mov
xchg
push
cmp
bsf
jnp
or
test
add
mov
xchg
test
and
jle
cmp
xchg
loopne
mov
loopne
push
sbb
jmp
out
pop
sub
pop
lea
push
icebp
test
sbb
pusha
je
mov
(bad)
and
jle
and
push
sar
call
add
xchg
sub
(bad)
jns
jmp
mov
mov
je
lea
jl
adc
pop
retf
sub
xchg
xchg
mov
test
cmps
pop
iret
and
loope
test
or
adc
sub
enter
mov
mov
sub
adc
hlt
inc
and
test
imul
jnp
adc
adc
sub
or
sbb
inc
and
fsubr
int
sbb
cmp
or
add
scas
mov
xchg
pop
dec
leave
pop
add
test
adc
xchg
enter
adc
xchg
cmp
sub
adc
adc
or
hlt
cmp
imul
dec
jbe
inc
movs
inc
or
jmp
mov
test
in
mov
adc
shl
dec
sar
push
cli
pop
ds
pop
jmp
repz
or
pop
cmp
mov
sbb
test
push
jnp
mov
pop
dec
enter
or
push
push
jo
cmps
cdq
mov
adc
and
sbb
inc
lahf
xor
mov
mov
cmp
pushf
psubq
xchg
sbb
pusha
(bad)
retf
cmp
sub
je
dec
fisttp
jp
js
dec
lock
mov
(bad)
or
mov
cmp
push
rol
fwait
sar
(bad)
jl
sbb
ins
test
push
mov
add
push
dec
push
push
lods
pop
and
sub
inc
pop
add
jo
cmp
and
mov
add
rcl
sti
jb
sub
and
mov
mov
in
dec
sar
test
shl
pushf
sbb
or
retf
adc
add
jmp
ja
into
mov
clc
(bad)
dec
or
imul
sti
mov
mov
or
call
(bad)
mov
in
pop
pop
out
shr
lock
xor
ds
xchg
int3
(bad)
push
shl
lock
adc
xor
(bad)
jmp
mov
lods
or
or
out
add
mov
inc
mov
in
out
sbb
jecxz
out
add
adc
xchg
es
mov
or
jmp
jns
scas
bound
dec
adc
sbb
and
je
jmp
mov
add
aam
(bad)
mov
cmps
ror
test
stc
in
mov
mov
jle
fcom
jmp
sbb
xchg
gs
and
inc
add
add
dec
ss
and
xchg
push
sahf
add
aad
call
and
mov
leave
je
xor
pop
xchg
retf
icebp
add
cmc
loope
and
daa
mov
ins
and
cmp
test
xchg
sbb
jmp
and
add
cmps
outs
add
jg
dec
cld
pop
inc
push
jmp
pop
inc
fld
ss
lods
push
in
or
jb
pop
repz
xor
xchg
shl
inc
and
in
mov
pop
loop
lock
in
add
or
shl
retf
mov
nop
push
mov
add
jl
xchg
pushf
dec
test
test
add
adc
add
leave
pushf
movs
bound
hlt
nop
sbb
aas
dec
and
push
mov
out
leave
jne
pop
enter
inc
push
test
sbb
xor
push
jo
sbb
or
fild
or
std
inc
pusha
cvtdq2ps
pop
je
mov
push
dec
cmp
push
add
sahf
in
rol
mov
inc
jb
ds
js
mov
(bad)
aas
dec
push
popf
ss
pop
mov
lahf
xchg
loop
jno
adc
enter
push
add
loope
mov
sub
les
adc
add
pop
xor
pop
test
push
fistp
adc
fmul
mov
sub
lods
pushf
xchg
cmp
lock
cli
xchg
ret
stc
adc
fdivr
push
cwde
fist
enter
add
mov
or
retf
lods
je
pop
sbb
add
mov
pop
and
cmp
sbb
pop
jl
ins
lea
mov
dec
adc
xor
into
adc
repnz
jp
add
xlat
and
or
or
dec
adc
jnp
xchg
scas
xor
lahf
ficom
mov
adc
xor
fmul
sbb
repz
adc
inc
add
add
pop
or
mov
test
mov
cwde
adc
sahf
xor
sub
mov
mov
add
dec
xor
pop
pop
inc
imul
adc
pusha
mov
aad
push
inc
dec
mov
add
add
je
mov
jge
shl
cld
imul
add
xchg
imul
inc
cmp
inc
xchg
daa
fisttp
xchg
nop
movs
and
mov
in
mov
add
and
lock
fs
ins
sub
and
xor
or
jno
cmp
xlat
mov
adc
pop
es
xor
sbb
int
add
je
call
test
dec
mov
push
mov
sub
push
xor
and
pop
outs
jmp
enter
xchg
inc
xor
adc
(bad)
jmp
imul
push
jmp
and
cmp
loopne
mov
or
cmc
lods
jne
or
inc
in
mov
jbe
or
movs
jb
nop
or
fisubr
xor
push
jg
jle
iret
jecxz
mov
adc
add
lods
je
inc
test
add
(bad)
popf
or
jg
jl
jne
and
pop
xor
jmp
lock
out
(bad)
mov
dec
cdq
mov
adc
mov
mov
push
and
int3
mov
cmp
idiv
aam
call
fnstcw
pop
dec
mov
and
mov
jo
ds
jmp
push
es
add
or
or
fstp
stos
in
aaa
and
add
sbb
add
inc
sbb
fst
adc
lods
fild
add
xor
adc
adc
mov
add
sar
cmp
gs
push
add
test
push
into
mov
or
or
mov
and
outs
es
or
mov
test
add
call
shl
fmul
inc
rol
cld
jbe
pop
mov
mov
cmc
pop
pop
add
inc
in
push
loop
xor
add
mov
icebp
jp
push
add
cmp
mov
sub
and
test
or
sar
pop
fisubr
or
je
push
adc
inc
mov
mov
xor
or
mov
je
adc
out
mov
jb
cmp
ja
add
cmp
adc
sti
or
push
shl
leave
adc
loop
je
or
(bad)
ss
mov
das
or
aam
fwait
pop
out
push
or
pop
cmp
push
retf
js
sub
xor
sbb
push
adc
jp
cmp
dec
sub
(bad)
std
das
clc
jns
clc
fcom
sar
push
cmp
mov
mov
imul
lods
add
mov
ja
lock
cmp
or
and
cmp
adc
adc
in
popa
pop
sub
cmps
jle
jb
pop
or
jle
or
bound
in
push
je
adc
add
hlt
or
test
and
and
cwde
gs
es
stc
sbb
(bad)
rol
imul
out
scas
xor
test
or
jno
scas
jb
cwde
outs
and
inc
cmp
pop
adc
pop
lea
or
or
sbb
pusha
push
or
dec
dec
loop
jg
sbb
or
push
pop
shr
or
mov
xor
add
pop
in
repnz
sahf
call
pop
push
jae
jl
scas
hlt
xor
pop
jmp
adc
adc
popa
push
mov
ins
popf
adc
pusha
je
inc
test
loop
push
adc
gs
call
adc
jmp
inc
dec
(bad)
out
xchg
icebp
add
cmp
adc
or
add
adc
add
or
push
inc
cmp
shr
xchg
dec
mov
leave
in
or
pop
push
xchg
xchg
adc
pop
jmp
adc
ins
inc
cs
or
mov
jg
ss
cmp
je
or
out
mov
dec
cmp
das
ror
cli
mov
cmp
xor
dec
mov
push
lock
inc
inc
mov
sbb
pushf
and
out
fldz
call
test
jp
add
pop
push
sbb
outs
fistp
ret
or
jmp
adc
or
cmp
ja
sub
in
and
repnz
lods
push
inc
add
push
push
add
pop
repnz
pop
dec
or
dec
pusha
repnz
pop
fiadd
or
add
fidiv
and
sbb
test
jne
cmps
mov
lea
pop
mov
test
jl
fsubr
sbb
retf
or
popf
adc
jmp
push
pop
add
jae
fdiv
dec
setg
push
lock
xchg
clc
add
rcl
and
aas
sub
lock
add
jle
mov
adc
jp
push
mov
icebp
mov
jae
xor
mov
es
xchg
icebp
add
add
mov
sub
sub
add
lods
and
sar
or
xor
mov
icebp
inc
loope
dec
add
add
push
inc
ins
mov
out
adc
jns
neg
es
add
or
inc
push
mov
add
or
add
fsub
and
clc
jne
fwait
dec
mov
push
push
popa
sbb
sbb
push
push
add
enter
pop
test
lea
aam
js
and
add
pusha
out
ins
push
jo
sbb
mov
adc
ret
jbe
xor
xchg
mov
mov
aam
loopne
adc
lahf
adc
je
push
xor
shl
mov
jae
adc
cmp
inc
sbb
inc
sbb
test
cmps
ret
cmps
push
sbb
add
xchg
sub
or
and
pushf
test
mov
sub
imul
mov
loopne
(bad)
test
pop
inc
fnstcw
xchg
pop
jmp
cmp
ret
or
or
add
adc
pop
cwde
mov
jl
adc
inc
xchg
and
or
imul
mov
daa
je
xchg
or
sar
xor
xor
not
jg
mov
test
sbb
in
xor
push
cmp
push
mov
pop
hlt
and
add
inc
inc
push
imul
cmp
xchg
xor
leave
and
add
cmp
scas
jo
mov
es
ins
sub
enter
imul
fcomp
icebp
outs
mov
fistp
sub
loopne
loope
lock
pop
call
jne
pop
cmp
or
out
test
and
cmps
movs
mov
out
sub
xor
and
add
jb
or
add
adc
xlat
ss
dec
xor
adc
push
ja
popa
(bad)
sub
cmp
push
cdq
mov
sub
adc
pushw
mov
pop
outs
inc
(bad)
movsx
les
xchg
out
push
aas
call
add
ret
mov
inc
adc
fimul
lods
enter
fisttp
cdq
mov
sar
sbb
or
mov
or
(bad)
fiadd
cmp
pop
stc
inc
add
dec
jmp
fdiv
sub
adc
mov
sbb
or
pop
ja
clc
inc
push
pop
popa
adc
push
xchg
imul
jne
cmp
mov
call
jecxz
inc
call
call
and
clc
push
pop
sbb
js
pop
push
fist
add
in
push
sub
or
pop
(bad)
shl
fidivr
ror
mov
mov
push
push
push
nop
popa
mov
(bad)
test
arpl
(bad)
rcl
or
add
fs
pop
jnp
dec
dec
inc
dec
pop
or
pushf
inc
and
rcr
sbb
add
daa
inc
pop
xor
push
or
xor
es
xor
adc
test
jbe
xor
sbb
mov
adc
loopne
mov
jb
jp
push
add
and
sub
add
add
pop
rol
inc
sub
sub
shl
jl
or
popa
push
mov
add
mov
xor
or
leave
cdq
mov
into
mov
and
adc
and
jo
push
pop
cmp
push
cmp
sbb
je
push
pop
repnz
mov
repz
cmp
loop
xchg
pop
xlat
mov
ficomp
rol
sbb
ror
cs
sub
sbb
push
push
ins
push
jmp
ins
cmp
pushf
je
loop
sar
jl
call
or
mov
rol
add
into
add
pusha
mov
inc
mov
ds
outs
outs
mov
pop
or
pop
data16
in
or
rol
aaa
inc
popa
je
inc
je
dec
repnz
fidiv
xor
jmp
inc
pop
adc
lea
push
test
pop
out
cmps
jb
adc
mov
or
add
loopne
xchg
mov
mov
jl
fwait
xor
sahf
lods
xor
pop
adc
data16
fucomip
fld
fdiv
fmul
ins
push
pop
clc
fstp
or
dec
in
fs
fldenv
push
lods
push
nop
loopne
cmp
sbb
pop
mov
ins
sub
imul
xchg
inc
nop
fld
inc
ins
jg
mov
pop
in
push
push
sbb
and
mov
jne
adc
cmp
add
test
das
scas
fld
jnp
sbb
add
call
inc
mov
shl
into
push
mov
dec
push
push
es
or
loop
call
js
pusha
sub
pop
xor
fwait
ins
jle
xchg
nop
fadd
les
dec
stos
sbb
or
jle
int
xor
nop
dec
mov
fstp
cmp
lock
jl
test
aas
xor
cmp
je
inc
xor
lea
mov
fst
add
mov
in
push
push
mov
hlt
test
test
fdivr
push
adc
fld
and
mov
cld
pop
adc
jmp
inc
mov
jne
test
mov
push
dec
fisttp
pop
jmp
dec
add
in
inc
mov
adc
enter
rcr
adc
fwait
pop
out
push
fcmovu
add
shr
or
add
mov
(bad)
fisubr
and
or
pop
or
or
pop
or
adc
retf
fs
shl
pop
in
or
pop
pop
mov
cmp
call
out
movs
movs
xor
jne
mov
xor
ja
inc
(bad)
mov
movsx
xor
push
xchg
and
add
or
adc
pop
and
inc
mov
push
in
loopne
sbb
jmp
adc
fdiv
fiadd
sahf
sahf
sub
inc
sbb
xchg
hlt
dec
sbb
push
sbb
push
adc
cdq
movs
push
sbb
fcom
xor
movs
int
and
fst
icebp
mov
test
push
xchg
mov
imul
jne
mov
nop
lock
pop
pop
sub
stc
inc
jae
or
jae
inc
lds
jmp
shr
mov
pusha
add
adc
bound
(bad)
pop
fs
and
je
add
push
(bad)
push
(bad)
pop
cwde
mov
jle
jp
add
or
sbb
mov
dec
imul
add
pop
popa
mov
sbb
pop
scas
or
int3
fisub
and
int3
ins
je
add
add
(bad)
aas
inc
inc
imul
add
rol
add
mov
jne
inc
fidivr
inc
and
lods
jecxz
(bad)
stos
stos
push
stos
pop
pop
and
push
and
aam
cli
shl
mov
mov
cdq
and
add
rol
jno
in
jns
dec
or
inc
lea
push
mov
retf
loopne
xor
pop
test
retf
loop
mov
test
push
ja
clc
cmp
ins
pop
and
mov
sub
dec
or
inc
clc
sub
mov
jbe
dec
mov
add
popa
xchg
dec
sub
or
jb
scas
push
pop
popa
pop
jmp
sub
(bad)
movs
jg
adc
jb
inc
jae
call
dec
fmul
jns
push
loopne
loopne
cs
and
add
pop
ja
pop
(bad)
sub
rep
add
inc
add
ins
sti
cmp
dec
dec
stos
inc
xchg
je
stos
mov
in
enter
clc
push
aam
xor
cmp
push
movs
xor
sahf
imul
sub
sub
clc
and
cld
not
adc
popf
je
mov
mov
movs
add
retf
or
iret
push
or
and
adc
shl
mov
or
into
getsec
adc
push
sub
sar
dec
xor
ret
je
mov
sub
adc
popa
pop
(bad)
or
ret
in
mov
mov
push
jl
test
pop
adc
and
pop
pop
test
add
cli
pusha
inc
add
btr
test
mov
pop
add
xor
iret
dec
jns
inc
lock
inc
mov
mov
mov
jecxz
sbb
loope
mov
xchg
or
xchg
and
imul
mov
mov
adc
dec
xchg
lea
js
clc
cmp
gs
jb
lock
fcom
out
cli
pop
mov
loopne
rcr
and
add
add
or
shl
adc
jecxz
mov
mov
or
xchg
adc
jg
nop
or
cmp
mov
or
nop
test
jmp
and
jne
inc
sbb
mov
xor
xchg
pop
ins
cmp
pushf
nop
xchg
add
push
and
sub
add
push
lods
ins
cmp
test
push
movs
mov
mov
inc
mov
sub
mov
mov
imul
pushf
mov
bound
clc
push
cmp
aaa
jbe
push
lods
mov
sbb
xor
enter
jge
std
pop
(bad)
cmp
jne
inc
jmp
mov
sub
stc
or
xchg
jg
ret
mov
mov
sub
cmp
stc
adc
dec
jmp
es
add
fs
or
out
add
mov
and
mov
add
xor
inc
movlps
cs
out
xor
push
jmp
cmps
mov
(bad)
cmp
sub
mov
inc
jle
std
cmp
jle
cmp
push
xor
sub
sbb
pop
jmp
jmp
dec
push
mov
cmp
jbe
push
lods
jle
cmp
jno
cmp
pop
icebp
(bad)
fs
push
jmp
cmp
jg
call
inc
xor
sub
mov
ret
mov
push
adc
mov
jge
(bad)
pop
cmp
jecxz
scas
jnp
out
fwait
jbe
nop
add
jne
in
push
and
dec
jae
imul
sbb
enter
inc
jno
mov
outs
mov
call
(bad)
lods
out
jae
sti
pop
push
sub
(bad)
btc
or
or
and
test
ret
sub
ds
sub
cmp
mov
mov
mov
stos
sub
mov
dec
out
shr
push
mov
xor
sub
ret
jg
add
inc
push
mov
jmp
fmulp
or
or
pop
cli
rol
(bad)
movs
fndisi(8087
jmp
cld
call
or
rol
mov
jecxz
or
fnstsw
jmp
push
cwde
pop
mov
xor
push
mov
dec
cmp
push
inc
or
les
cmps
imul
cwde
jge
xor
aam
neg
add
mov
jecxz
out
sub
cmp
cmp
mov
mov
add
rol
enter
sub
adc
xor
dec
sbb
adc
inc
mov
push
inc
(bad)
sbb
jmp
lods
sar
add
and
mov
sbb
ror
xchg
cmp
jb
mov
dec
mov
pop
cmp
dec
or
imul
into
mov
mov
push
xor
and
and
and
nop
shl
mov
gs
adc
repnz
and
mov
ja
jmp
mov
mov
pop
push
mov
add
inc
int3
dec
jne
cmp
out
shr
jne
or
jne
test
jl
lods
jno
inc
or
cmp
imul
jne
hlt
int3
add
jne
mov
xchg
loopne
mov
sbb
es
rcr
inc
inc
add
or
mov
repnz
xchg
sub
xor
cmp
les
mov
ja
je
add
push
js
sub
call
inc
clc
cmp
(bad)
stc
jg
add
add
mov
jge
test
js
mov
fbld
gs
lods
add
or
rcl
shr
call
fucom
ror
jne
bound
or
das
test
lock
inc
mov
(bad)
mul
je
dec
loopne
mov
shr
shl
shr
or
mov
sahf
dec
mov
dec
outs
mov
mov
add
mov
mov
int3
inc
xor
mov
mov
(bad)
cmp
push
add
ficomp
sar
fwait
loopne
mov
fidiv
in
fiadd
push
call
sub
push
fidiv
shl
push
pushf
lods
push
loop
push
fmul
rcl
gs
or
cmp
push
or
sub
or
push
into
jmp
scas
add
mov
add
mov
mov
pusha
je
adc
xor
cmp
sbb
pop
xor
jne
push
retf
out
jl
rcl
mov
add
adc
das
push
cmp
sub
shl
mov
(bad)
inc
or
push
push
jmp
pop
push
mov
sbb
iret
jno
cli
outs
aas
ja
mov
sahf
mov
shl
inc
push
hlt
add
aas
sbb
(bad)
dec
loop
push
lea
lock
retf
enter
iret
rcr
loop
inc
ror
push
rcl
sar
repz
aad
xlat
fsub
ret
(bad)
sti
fstp
add
ss
retf
dec
mov
inc
add
cmps
into
add
das
mov
test
mov
push
xchg
dec
or
or
adc
push
or
xchg
or
and
test
popa
mov
sub
mov
or
add
maskmovq
idiv
inc
sub
rcr
icebp
adc
cmp
mov
mov
pop
xor
push
add
push
psubsb
inc
test
adc
jmp
push
std
sub
fldcw
adc
jmp
add
sbb
sbb
je
lea
and
mov
inc
adc
mov
cmp
push
neg
push
mov
jmp
sub
cli
cmp
outs
mov
clc
into
call
push
mov
add
add
es
jp
cmp
pushf
shl
add
mov
mov
lock
les
mov
cmp
lock
enter
jmp
mov
cmp
and
and
mov
add
shr
sbb
dec
xchg
sar
dec
xchg
ret
ja
ds
jmp
out
push
js
into
jne
inc
idiv
iret
leave
inc
call
lods
xchg
xchg
in
jne
inc
inc
or
cmp
mov
sub
in
mov
jne
inc
inc
rol
clc
add
bound
js
mov
push
lea
loope
add
push
xor
sahf
or
stos
xchg
dec
xor
or
ret
movs
movs
add
inc
push
add
mov
jge
fwait
cmps
jne
jl
inc
inc
push
and
ror
(bad)
aas
(bad)
jle
jle
aaa
movs
lods
in
sub
add
sar
jle
dec
xchg
std
shr
push
or
sar
sbb
push
retf
dec
jae
inc
(bad)
inc
rol
test
xor
add
adc
ins
clc
xor
or
mov
sbb
dec
pushf
dec
inc
inc
lods
inc
sahf
dec
sub
lock
sub
repnz
hlt
cmp
xchg
cli
cli
inc
cli
div
mov
clc
jb
inc
in
test
test
jmp
(bad)
jnp
jl
into
xchg
aaa
test
dec
dec
shl
xchg
push
fcmove
mov
xor
mov
rol
jecxz
clc
mov
stc
ror
stc
dec
mov
call
lock
dec
mov
jnp
pop
shl
mov
loop
cdq
or
test
rcl
push
jns
stc
mov
cmp
xor
jne
inc
mov
inc
push
cmp
sub
jnp
inc
shl
fdivr
aam
movs
enter
inc
test
dec
ss
add
jo
adc
xor
mov
pop
loopne
xor
or
sahf
out
or
push
cld
lea
cmp
fnstcw
add
inc
inc
dec
cmps
jg
pusha
and
iret
sub
clc
sbb
push
data16
enter
mul
sbb
retf
iret
test
mov
add
xchg
jge
or
jge
sbb
fs
adc
push
loope
popa
movs
adc
arpl
jne
push
jns
jmp
sub
rol
add
cmps
mov
fcomp
fisub
je
cwde
sub
ins
sbb
pop
mov
inc
ret
jnp
inc
add
add
push
nop
cmp
call
mov
out
adc
pusha
fst
cs
in
inc
pop
mov
shr
sahf
add
or
push
shl
cli
xor
sbb
neg
and
add
sub
call
fucomp
imul
addr16
cmc
fs
fmul
cmp
mov
mov
fimul
xor
loopne
push
cwde
sub
or
xchg
mov
out
mov
aad
add
or
mov
add
sub
adc
jmp
sub
shr
enter
lea
sbb
ds
lahf
dec
xor
rol
(bad)
popa
ins
add
add
adc
add
push
mov
cmp
push
shl
add
add
les
jg
cld
pop
cmp
shl
into
or
mov
movs
pop
enter
(bad)
in
call
iret
jl
(bad)
dec
nop
dec
mov
dec
cmp
jge
add
pop
cmc
jmp
cmp
or
add
dec
cmp
arpl
out
add
dec
add
add
fadd
xor
mov
test
mov
add
or
mov
lods
pushf
adc
retf
or
add
push
add
sub
ret
adc
call
add
add
ja
mov
ret
call
jp
pusha
mov
retf
leave
js
mov
sub
fimul
imul
or
or
cdq
adc
add
stos
cli
out
je
push
add
or
jmp
pop
pop
scas
inc
movs
jno
add
ss
sbb
sub
adc
sub
pop
push
and
push
ret
or
movs
add
xchg
adc
or
sbb
add
xlat
ret
or
ficomp
mov
mov
iret
xor
into
pusha
inc
and
pop
and
pop
pop
add
mov
ret
fmul
dec
shl
and
ret
or
test
jge
clc
and
(bad)
inc
push
pop
jae
or
or
add
add
push
or
inc
add
(bad)
mov
push
je
in
pop
mov
or
adc
xlat
dec
inc
inc
not
pop
dec
ins
add
popf
jmp
or
jne
and
cmp
xor
mov
mov
inc
jge
in
shr
mov
cmp
add
dec
fmul
jge
xor
aaa
ret
add
fldcw
mov
cld
adc
xchg
xor
add
and
inc
stos
jg
cmp
sub
mov
in
sbb
jge
(bad)
jp
pinsrw
scas
pop
js
movs
cmp
test
adc
call
add
sub
idiv
shl
retf
je
and
cmp
mov
retf
into
into
add
push
cmp
mov
fnstsw
sar
push
pop
shl
ficom
mov
inc
cli
add
not
and
or
xchg
retf
cmp
adc
mov
or
add
leave
lahf
pop
test
out
adc
add
inc
sbb
add
add
and
xchg
je
jb
movs
and
jne
or
imul
sbb
sub
(bad)
jmp
sub
ret
mov
xchg
(bad)
push
scas
mov
sub
dec
sbb
push
lods
push
cmovbe
push
test
cld
mov
mov
add
inc
xchg
js
adc
ds
daa
cmp
cmp
lea
or
clc
add
xor
repz
leave
or
add
mov
mov
sbb
fadd
jmp
dec
(bad)
call
lods
add
push
bound
jmp
loope
xor
dec
je
shr
lea
std
xor
xchg
imul
push
gs
adc
in
inc
repz
neg
inc
or
dec
cs
shl
or
mov
xchg
cli
mov
out
add
or
fiadd
js
push
jp
xchg
xor
out
repnz
dec
dec
rcl
pusha
lea
iret
stc
add
jmp
dec
sbb
mov
inc
xchg
scas
adc
outs
imul
push
cli
sub
sbb
not
or
shl
mov
lock
cmp
outs
or
sub
inc
stos
mul
mov
popa
stos
aam
bound
push
adc
mov
or
(bad)
push
push
mov
cmp
repz
dec
push
dec
or
test
pop
mov
cs
and
sbb
sub
in
sub
or
sub
mov
xor
push
(bad)
adc
sbb
adc
mov
popa
cmp
adc
outs
add
jmp
inc
mov
sbb
add
dec
lods
xor
stc
push
(bad)
mov
test
enter
xchg
push
dec
call
ficomp
sub
jb
popa
lahf
loopne
sar
jbe
add
jmp
dec
cs
add
fmul
mov
iret
sub
fsubr
lea
fmul
push
mov
(bad)
rcr
nop
iret
push
sbb
in
sbb
fistp
sub
xchg
mov
out
rcr
pop
sbb
mov
gs
jo
or
inc
add
and
pop
cwde
inc
xchg
enter
pop
sub
and
fistp
mov
ss
jns
and
adc
dec
test
(bad)
fistp
jl
nop
in
xchg
fs
mov
les
push
and
fild
mov
clc
add
dec
fild
cmp
ins
xor
cmp
add
xchg
fsubr
ror
sahf
call
test
xchg
sbb
mov
jb
out
(bad)
push
ror
add
jmp
sbb
lock
lahf
dec
adc
loopne
aam
pop
push
ins
dec
(bad)
adc
mov
les
jbe
and
leave
and
dec
push
cmp
xor
enter
xchg
aam
add
in
sti
int3
jnp
cmp
rol
lock
dec
sar
inc
cmps
loopne
pushf
lahf
fdiv
jb
enter
or
jge
cmp
dec
push
lods
jnp
xor
in
sub
sbb
xchg
dec
push
call
arpl
mov
add
inc
sub
pop
pop
jl
pop
mov
xchg
inc
pusha
lds
cmp
aas
jl
adc
adc
mov
push
adc
or
adc
xchg
nop
retf
mov
sub
movs
xor
push
push
sub
xchg
cld
shl
pop
xor
movs
jnp
fistp
pop
jmp
jb
and
std
adc
pushf
in
nop
push
push
sub
pusha
push
test
inc
rol
xor
sbb
pop
lea
clc
push
adc
jnp
dec
lahf
outs
mov
ret
sbb
xor
sub
add
jae
mov
pop
cmp
sub
or
jl
out
fist
mov
ret
repz
movs
xor
xchg
out
inc
inc
mov
or
xor
add
push
fdivp
in
lea
jnp
ins
(bad)
push
xor
push
loopne
out
add
and
push
jo
adc
jl
fcomp
add
mov
retf
dec
imul
dec
and
xadd
jl
out
jmp
popa
ins
ins
outs
arpl
imul
adc
(bad)
fcom
les
push
inc
pop
adc
loopne
loopne
push
ss
les
jae
jb
outs
and
outs
and
lods
mov
mov
add
jbe
imul
imul
jg
jnp
push
outs
imul
outs
and
arpl
std
ds
lahf
int3
xor
add
sbb
cs
das
clc
add
push
je
arpl
jne
jb
outs
je
sti
ja
gs
push
jb
outs
or
add
push
adc
xchg
lock
add
ror
and
xchg
es
adc
lahf
push
(bad)
(bad)
jg
pop
add
add
or
or
push
movups
adc
adc
(bad)
(bad)
(bad)
call
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
(bad)
(bad)
(bad)
push
aaa
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
movs
icebp
test
pop
pop
pop
pop
pop
and
sbb
jg
popa
bound
gs
imul
jno
jb
dec
loopne
jne
ja
jns
jnp
jge
jg
add
pop
add
sub
dec
add
jb
push
jb
adc
add
xor
leave
add
(bad)
and
push
add
add
add
add
ins
or
mov
test
inc
adc
fisub
jbe
aaa
add
pop
lods
and
shr
(bad)
aas
pusha
mov
add
(bad)
(bad)
dec
(bad)
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
(bad)
(bad)
(bad)
jmp
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
(bad)
dec
retf
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
(bad)
jmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
inc
adc
loope
test
popa
push
xor
and
xchg
aas
(bad)
(bad)
mov
enter
outs
adc
mov
dec
push
outs
imul
aas
rol
inc
add
dec
or
adc
dec
ins
add
inc
gs
inc
ins
jae
jb
mov
movs
push
popa
ins
jne
inc
push
pop
inc
and
inc
outs
jb
js
je
jb
arpl
(bad)
gs
ins
add
xor
gs
push
ret
arpl
push
push
inc
sub
out
rdtsc
ss
adc
dec
dec
inc
dec
inc
adc
mov
jl
ds
sub
sub
les
push
lods
fadd
add
push
add
add
sub
mov
xor
push
push
and
push
pop
fadd
aaa
repz
push
pop
or
push
add
pusha
push
mov
jo
add
pop
sub
add
mov
add
xchg
pushf
cmp
or
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
xor
imul
push
push
nop
push
dec
dec
push
push
adc
sbb
inc
dec
dec
es
lods
(bad)
and
add
xor
(bad)
inc
and
jo
imul
ins
popa
cmps
test
lds
sub
je
ins
jo
add
mov
push
es
push
out
mov
fbld
popa
jb
and
scas
adc
cs
data16
ins
xor
outs
je
arpl
daa
mov
jne
pop
xor
and
jnp
push
sub
xchg
fwait
cmp
or
pop
ror
rol
jecxz
int
les
out
ins
bound
and
fdivr
jp
outs
xchg
jbe
dec
mov
sar
or
fs
gs
bound
push
and
je
fwait
adc
dec
in
ds
sub
ins
push
imul
jb
mov
push
daa
nop
mov
sub
dec
imul
ins
jb
jo
sub
push
arpl
push
jne
clc
rol
mov
dec
popa
imul
in
outs
outs
int3
or
push
hlt
rcl
push
call
xor
popa
pop
xor
and
gs
push
or
push
neg
sbb
cmps
cs
ficomp
adc
xchg
push
fisubr
aas
xor
shl
sub
popa
sbb
add
xor
fisub
outs
ss
sub
and
fs
xor
imul
sar
xor
fld
ficomp
bound
mov
mov
lds
call
jle
outs
push
or
arpl
jmp
call
xchg
cmp
popa
and
pop
ins
in
jmp
imul
lds
mov
pop
or
fadd
jno
(bad)
rcl
add
mov
imul
call
push
cmp
in
adc
pusha
xchg
cmp
jmp
push
and
pop
push
cmp
sub
jne
jae
xchg
into
push
cmp
pushw
je
lea
pop
sub
cmp
shl
cld
pusha
stos
push
sub
retf
inc
sub
pop
dec
das
and
or
push
lods
fld
add
pop
sub
inc
jne
loop
mov
inc
dec
and
ret
push
dec
cmp
and
push
hlt
pop
in
jp
sar
adc
dec
cwde
je
arpl
fst
cmp
pusha
sub
(bad)
idiv
sub
dec
and
jns
add
test
pop
fwait
das
das
jns
push
dec
inc
dec
outs
sub
pusha
dec
ds
push
dec
outs
jbe
outs
add
adc
dec
sub
inc
cwde
mov
retf
fiadd
into
popa
add
xor
adc
inc
out
mov
mov
jae
cmp
jg
out
stos
add
addr16
in
and
jno
mov
and
daa
push
xor
fimul
sbb
dec
dec
and
fdecstp
push
jne
xchg
pop
dec
sub
add
push
pushf
adc
jbe
bound
jle
ror
(bad)
sbb
jb
ss
ins
and
in
push
sub
jns
inc
mov
push
fadd
ds
lods
dec
inc
xchg
call
push
and
push
jns
mov
sub
mov
div
addr16
cmp
bound
movaps
sbb
xor
rol
outs
shr
in
pusha
inc
jbe
(bad)
push
push
xor
popf
push
fs
and
mov
dec
xor
add
jmp
push
xor
push
add
pop
ins
es
dec
lahf
cmp
sete
ret
pop
pop
push
push
jae
cmp
jno
mov
cmp
xor
sub
jae
addr16
xor
push
in
and
mov
data16
or
std
and
dec
test
xchg
loopne
dec
add
cmp
popa
mov
fild
dec
jge
int3
test
test
or
jo
push
adc
pandn
or
test
fs
enter
xor
push
mov
push
pop
sub
stos
outs
bound
pusha
push
or
stos
pop
xor
outs
xchg
daa
xchg
mov
data16
repz
pop
pop
cmp
cmp
add
ds
jns
imul
sub
sbb
sahf
jl
push
addr16
push
fstp
popf
out
sub
push
push
jl
cmp
dec
mov
sub
pop
cmps
cmp
sub
sub
popf
sbb
pop
inc
and
test
and
add
(bad)
dec
pop
pop
push
mov
jb
imul
jo
ss
call
hlt
sbb
push
xor
in
hlt
pop
test
jo
push
out
mov
jl
out
add
jg
mov
test
ins
pusha
push
dec
inc
sahf
int
jns
sub
push
mov
add
push
stos
sbb
adc
adc
add
(bad)
lock
xchg
in
pop
out
sahf
cmps
call
sahf
out
sahf
aam
int3
enter
sahf
out
mov
out
sahf
out
movs
mov
jns
xchg
nop
mov
out
jl
fs
push
rep
sahf
out
sub
test
fmul
repz
mov
adc
out
cmps
hlt
int3
mov
pushf
jns
out
xchg
test
dec
rep
sahf
out
and
cmps
fdiv
mov
movs
clc
hlt
ja
sahf
int3
mov
add
fistp
add
test
sub
mov
adc
daa
cmp
sti
mov
push
pop
cmp
and
sti
fwait
xor
add
or
pop
js
jo
add
and
and
push
push
into
cmp
inc
jb
dec
ret
inc
pop
add
pop
outs
fisubr
outs
js
lods
lock
push
xor
cs
dec
dec
(bad)
pop
push
push
inc
add
popa
add
loopne
or
dec
pop
push
jbe
xchg
or
mov
lock
mov
dec
push
push
and
push
pop
pushf
pop
das
mov
rcl
xchg
adc
clc
push
or
cmp
rcl
cmp
loope
jns
fcom
push
push
xchg
dec
or
xchg
ss
add
add
and
(bad)
inc
dec
jae
add
ds
sbb
cs
push
push
ins
dec
inc
dec
jb
enter
xor
push
dec
inc
dec
cmovns
add
sti
hlt
dec
sub
ins
ins
cs
fs
pop
loopne
or
ja
inc
dec
jne
popa
bound
push
into
or
dec
inc
sbb
ss
sub
and
xlat
lock
push
sub
fidivr
cmp
rcl
ins
sub
dec
pop
push
js
out
jo
pop
enter
pop
xor
fs
xor
xor
push
or
cmp
xor
iret
pop
push
inc
inc
push
inc
inc
daa
les
gs
and
mov
loopne
adc
add
xor
movs
in
sbb
aaa
sti
scas
outs
jb
push
pop
push
push
inc
nop
es
inc
push
push
dec
push
pop
call
dec
fcom
dec
loope
ret
adc
push
dec
mov
adc
das
jg
and
out
inc
outs
jb
pop
arpl
xor
dec
push
dec
inc
xlat
jo
int3
inc
or
mov
(bad)
pop
xor
sub
push
cmc
mov
cs
push
fs
adc
(bad)
iret
cs
pop
int3
psubusw
addr16
scas
mov
in
test
mov
mov
xchg
inc
pop
enter
xchg
fcom
call
sbb
cs
cs
inc
adc
xor
jae
or
aaa
daa
dec
inc
push
push
inc
push
inc
pop
rcr
push
mov
stos
inc
xchg
ins
test
pop
(bad)
sbb
sbb
push
ins
sbb
clc
cli
test
push
outs
pop
inc
push
dec
push
outs
pop
cwde
push
dec
mov
data16
dec
dec
push
cmps
scas
xchg
mov
mov
je
je
popa
jae
and
sub
fst
adc
js
dec
dec
push
push
daa
ret
call
jae
dec
push
and
pop
ins
sub
das
or
add
cmp
dec
pop
in
xor
or
and
adc
out
test
js
xor
fs
ret
add
jae
push
ss
adc
mov
and
out
push
ja
outs
mov
fisttp
push
jmp
test
je
test
inc
dec
das
dec
pop
cs
jo
jb
out
xor
add
je
popa
(bad)
add
pushw
imul
xchg
and
fs
(bad)
mov
inc
and
inc
hlt
pop
adc
xor
dec
popa
jbe
push
xor
mov
inc
mov
or
ja
cs
fild
ins
mov
sub
dec
or
fmul
(bad)
push
dec
adc
push
ret
jb
push
inc
pop
pop
fcmovnb
gs
pop
imul
fcomp
cmp
mov
inc
(bad)
pop
fild
aas
and
pop
add
and
add
into
push
outs
mov
add
add
push
push
addr16
lods
or
inc
xor
sub
add
push
daa
aaa
outs
div
dec
popa
js
aas
jo
and
push
lods
jns
shl
push
gs
or
mov
cmp
ja
xor
lods
loope
pop
push
imul
inc
pop
inc
jbe
aam
iret
fbld
push
iret
int
or
int
mov
repnz
adc
in
sbb
dec
mov
(bad)
in
sti
jge
(bad)
mov
dec
dec
push
dec
push
shr
pop
mov
push
(bad)
(bad)
int
adc
je
out
dec
mov
es
data16
xor
xor
and
jae
add
in
lahf
mov
lock
xor
(bad)
lds
push
push
lahf
inc
fs
inc
and
sbb
jl
push
das
xor
and
or
fidivr
jbe
mov
les
in
or
or
adc
mov
cmp
das
sub
xor
inc
cwde
pop
sub
sub
inc
push
jl
dec
dec
loopne
pop
in
popa
jmp
rol
adc
aam
jmp
ds
adc
sub
dec
outs
jp
test
loopne
sbb
and
(bad)
mov
cmp
inc
and
sub
rcr
or
adc
xor
xchg
shr
out
cwde
movs
jmp
je
dec
std
movs
pop
fdivr
shl
mov
sub
xchg
mov
push
outs
imul
dec
sub
sub
cs
mov
dec
push
and
lock
test
add
sbb
rcl
push
sbb
cwde
mov
cvtps2pi
mov
and
mov
push
dec
loope
dec
and
pusha
ret
(bad)
fidiv
(bad)
mov
fdiv
ins
rcr
fwait
adc
xor
inc
cld
popa
xor
push
pop
xchg
sti
and
cmp
add
pop
xor
repnz
and
mov
adc
add
push
pop
inc
inc
push
je
fadd
outs
add
dec
or
iret
jmp
mov
into
repz
out
je
xchg
sbb
bound
lahf
jo
mul
xor
pop
sub
(bad)
ss
icebp
push
ins
clc
imul
xor
inc
pop
pop
push
push
inc
xchg
sbb
addr16
push
repnz
add
loopne
push
icebp
sbb
adc
aas
(bad)
out
jp
mov
push
imul
adc
cmp
push
call
pop
imul
xor
or
das
lods
ret
inc
addr16
adc
fist
sar
repnz
or
fcmovne
(bad)
leave
push
adc
ins
sub
add
xchg
sub
push
ja
pop
jae
sbb
cmc
pop
js
bound
push
push
pop
push
inc
xchg
cmps
ret
aad
push
inc
inc
dec
mov
pusha
shl
inc
xor
pop
xor
xor
ss
pop
rcl
imul
arpl
jne
push
add
jo
cmp
jae
jp
xor
sub
sub
inc
or
out
xor
cmp
inc
aaa
inc
or
xor
cmps
inc
cmp
push
pop
push
push
pop
jl
push
cmp
pop
dec
push
and
and
sahf
out
jg
mov
or
lods
mov
pop
jg
out
shl
inc
pop
pop
jl
mov
push
add
and
inc
daa
inc
idiv
mov
pop
dec
push
inc
push
inc
inc
push
inc
push
inc
dec
push
dec
inc
dec
inc
inc
das
stc
mov
or
dec
inc
inc
dec
pop
int3
sub
dec
inc
mov
fild
mov
sbb
pop
push
dec
dec
push
daa
mov
xor
inc
inc
push
push
push
dec
dec
mov
mov
adc
addr16
out
inc
inc
xlat
gs
inc
ffreep
sbb
adc
or
or
ss
retf
add
clc
push
lock
cmp
enter
test
nop
inc
push
dec
dec
sub
add
inc
jnp
jne
xlat
add
(bad)
outs
pop
ja
mov
sub
or
call
add
jge
js
in
ud2
into
xchg
fmul
dec
xchg
pop
pop
jmp
adc
jb
or
push
push
pop
daa
or
dec
ins
das
data16
inc
pop
vcvtsi2ss
push
shl
fwait
addr16
adc
outs
pusha
sub
mov
rcl
xor
fdivr
ds
inc
push
pop
and
outs
outs
pusha
inc
add
add
pop
add
lods
lock
sbb
out
loopne
mov
pop
sbb
test
aas
mov
inc
mov
bound
loopne
repz
sub
ss
jns
daa
ret
cmp
inc
nop
inc
add
outs
dec
pop
xchg
je
es
test
pusha
xchg
lods
xchg
mov
mov
pop
push
sbb
cwde
hlt
pop
repnz
sbb
lahf
cwde
add
pop
enter
outs
inc
enter
lahf
xchg
push
js
loopne
nop
pop
les
in
sahf
mov
mov
jo
jbe
fadd
jns
in
call
fimul
fnstcw
push
adc
adc
and
sub
mov
addr16
out
or
ins
push
mov
sub
xor
cwde
loopne
mov
cmps
outs
test
add
cs
in
in
addr16
or
(bad)
int3
or
jb
jl
mov
and
sub
(bad)
jbe
nop
(bad)
or
pusha
outs
jo
test
outs
cwde
pop
sbb
mov
popa
cmp
add
jecxz
movs
pop
ja
test
inc
push
ins
lock
add
(bad)
aam
pop
pcmpgtb
push
repnz
int3
jge
xchg
mov
jnp
pop
jg
mov
jle
add
ja
aaa
mov
add
nop
pusha
mov
sbb
into
pop
xchg
jmp
dec
fstp
push
cli
dec
fmul
xlat
loopne
xchg
sub
pop
in
mov
mov
enter
pop
movs
daa
mov
and
adc
pmaxub
xchg
push
outs
pop
mov
imul
fcomp
jg
jbe
jp
pushf
shl
xchg
icebp
leave
fs
add
push
sub
adc
xchg
lods
pop
out
add
imul
fistp
mov
mov
xlat
pop
pop
out
rol
enter
popf
(bad)
out
(bad)
loopne
(bad)
sub
adc
adc
push
dec
inc
aas
aad
jbe
stos
adc
(bad)
int
pop
sub
fdivr
dec
pop
xor
(bad)
sti
ds
mov
or
mov
in
pop
(bad)
daa
cli
push
jg
add
sgdtd
pop
jg
or
or
add
or
adc
pop
add
enter
daa
xchg
add
jle
adc
bnd
popf
push
aaa
jecxz
je
push
dec
add
test
jb
mov
cmp
add
nop
pop
lea
add
loop
shl
outs
add
popf
mov
xor
xor
xlat
sub
xor
int
and
daa
fsubr
scas
in
xor
adc
aaa
cwde
xor
not
pop
into
adc
clc
adc
xchg
push
jb
into
xor
sbb
pushf
pushf
pushf
nop
push
pop
mov
ret
bswap
(bad)
xchg
add
pop
test
push
test
dec
jo
cmp
bswap
out
add
test
add
test
mov
and
and
push
daa
out
outs
out
rol
aas
and
arpl
shl
lock
in
adc
mov
jb
mov
adc
inc
jb
cmp
leave
inc
jb
loopne
and
shl
mov
or
pushf
rcr
mov
mov
movzx
pushf
fmul
pop
dec
daa
mov
add
push
pusha
jbe
ror
out
rol
addr16
dec
jb
loope
pop
mov
rcr
add
psrlq
mov
iret
les
push
sar
dec
add
mov
pop
test
add
sbb
(bad)
shl
lahf
aam
hlt
dec
cmp
sbb
push
mov
ret
into
fstp
rcr
add
shr
mov
lds
lods
pop
ucomiss
xor
outs
pop
loop
rol
sar
cmp
ja
daa
mov
xchg
push
js
ror
iret
dec
cmps
loope
mov
dec
aaa
aam
pop
and
adc
mov
pop
jb
mov
test
popa
xchg
pop
push
cmp
push
je
pop
cmp
aas
aad
imul
clc
daa
sub
test
add
jge
and
add
pusha
mov
pop
mov
dec
pop
push
shr
mov
out
xchg
aas
or
(bad)
sbb
xchg
xchg
mov
dec
add
mul
add
and
add
add
mov
outs
pop
or
jns
imul
xchg
and
cmp
xor
sbb
push
cs
or
addr16
or
(bad)
fild
test
mov
inc
imul
mov
je
dec
inc
dec
dec
and
inc
dec
push
push
or
mov
push
inc
inc
fild
xchg
sahf
test
push
(bad)
cs
inc
push
xchg
pop
cmps
mov
mov
inc
and
sbb
shl
or
inc
dec
xchg
or
jb
pop
add
add
mov
or
pop
jg
pop
rcl
pop
jb
sbb
push
sti
outs
add
mov
popa
push
retf
cmp
and
inc
sub
sub
ins
outs
repz
lods
ins
push
das
pop
and
and
mov
and
sahf
pop
inc
(bad)
sahf
mov
xchg
add
sub
sub
xchg
cmp
shr
aaa
add
add
add
add
out
or
or
or
xchg
fmul
aaa
or
in
jbe
scas
adc
adc
adc
in
shr
and
mov
in
push
addr16
das
push
xorps
(bad)
ins
das
ins
push
and
fmul
sbb
push
pop
and
pushf
fsubr
cmp
test
xchg
jbe
repnz
sahf
mov
loopne
cmps
mov
into
aas
xlat
add
imul
sbb
mov
ins
out
out
ss
dec
or
ret
clc
push
pop
add
js
or
jb
test
add
add
fld
aas
pop
lahf
test
inc
(bad)
push
test
mov
fmul
mov
in
xchg
and
adc
mov
jb
adc
sbb
enter
mov
je
jl
repnz
pop
lahf
lock
xchg
das
inc
mov
js
jns
cld
jp
jbe
enter
(bad)
fadd
add
mov
ins
add
cmp
inc
add
add
dec
add
cmps
push
sbb
pop
add
lods
stos
adc
push
cwde
add
movs
enter
jb
cmp
cmps
fisttp
mov
stc
sbb
mov
mov
inc
ja
add
mov
inc
mov
fild
in
iret
mov
in
call
adc
xchg
outs
mov
fidivr
xor
fcomp
loopne
fs
mov
jb
jle
inc
mov
sub
imul
sbb
cmps
clc
pop
add
sbb
out
xlat
cdq
outs
ins
imul
fwait
xor
mov
push
xlat
dec
movs
push
movs
cld
cmp
repz
hlt
lock
call
loopne
rol
mov
mov
movs
mov
sahf
out
nop
mov
sahf
out
js
ins
pusha
iret
repz
sahf
pop
push
dec
push
inc
cmp
iret
repz
sbb
add
loopne
fldenv
add
in
mov
sidtd
push
add
jo
lock
das
mov
adc
jle
(bad)
cmp
xor
push
jo
or
adc
iret
repz
icebp
add
push
pop
js
call
adc
xor
cmp
cmp
repz
mov
repnz
pop
xchg
das
push
dec
ins
or
mov
sub
push
popf
shl
cmp
inc
cmp
jae
jb
mov
xchg
out
xor
jmp
hlt
retf
dec
aas
jg
xchg
cmp
mov
add
psubw
or
ret
mov
adc
enter
cwde
push
and
(bad)
mov
xor
in
int3
into
sbb
ror
and
sahf
mov
sub
inc
sar
(bad)
(bad)
call
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
inc
aad
iret
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
(bad)
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
inc
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
(bad)
(bad)
(bad)
jmp
or
add
cmps
xchg
cmp
xor
dec
cmps
in
(bad)
(bad)
call
lds
mov
cmps
lock
mov
popa
sar
mov
fsub
cmp
jmp
xchg
clc
repz
mov
sub
fwait
xchg
and
and
or
int3
aad
aas
jno
or
mov
(bad)
mov
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
sbb
lds
mov
ins
scas
add
aas
xor
aad
mov
(bad)
(bad)
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
(bad)
(bad)
(bad)
(bad)
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
(bad)
(bad)
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movs
jmp
jg
(bad)
(bad)
(bad)
jmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
inc
xor
lods
cmp
mov
cmp
xlat
cmp
mov
sbb
call
cmp
test
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
(bad)
mov
and
mov
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
(bad)
(bad)
(bad)
jmp
(bad)
pop
add
rcr
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
add
push
xchg
jge
pop
ficomp
frstor
enter
inc
cmps
pop
call
nop
inc
inc
aaa
dec
inc
inc
inc
addr16
pop
mov
aas
and
das
inc
inc
dec
inc
icebp
push
add
inc
inc
cmps
dec
inc
inc
push
push
nop
add
xor
push
test
iret
inc
push
push
cmp
aaa
sub
arpl
xor
mov
daa
inc
inc
jmp
pop
outs
pop
jb
sub
push
dec
jno
and
ror
inc
je
inc
addr16
push
dec
mov
mov
jl
gs
test
sahf
shl
sbb
mov
repz
push
inc
rcr
and
ins
push
pop
sub
aaa
xor
stos
(bad)
aas
dec
outs
fs
jg
ror
or
inc
pop
inc
outs
ins
ins
sub
dec
stos
mov
or
in
add
cmp
push
add
dec
add
ret
dec
pop
nop
add
stos
in
add
cwde
(bad)
mov
mov
int
mov
push
mov
xor
outs
mov
gs
test
push
or
gs
mov
loope
int3
lods
(bad)
loop
stc
repnz
sbb
sbb
or
(bad)
jmp
hlt
stos
fist
stos
aas
das
add
stos
int
movs
sub
push
push
push
imul
and
add
inc
fcomp
push
pushf
rcr
loopne
add
or
loop
lea
cmp
add
mov
pop
and
cmp
mov
nop
aas
jns
mov
cmp
add
punpckhbw
mov
js
enter
ja
mov
cmp
test
sub
add
adc
je
call
js
or
adc
add
pop
clc
inc
and
pusha
cs
adc
idiv
sahf
in
mov
inc
mov
(bad)
in
shr
jae
arpl
icebp
push
and
sahf
clc
lahf
jb
and
test
cs
xor
cmp
pop
adc
xchg
cld
adc
add
push
(bad)
fldpi
jg
int3
inc
push
mov
add
mov
sub
add
jg
stc
cmp
(bad)
dec
add
mov
pop
adc
xchg
inc
mov
(bad)
push
and
or
and
aas
shr
xor
or
fdivrp
or
gs
imul
fistp
pop
jnp
lea
dec
cmp
mov
rol
pop
lods
jnp
leave
sahf
clc
mov
mov
sbb
add
in
repnz
mov
add
pop
retf
ins
loopne
mov
xor
sbb
mov
iret
jg
fs
ror
ror
imul
pop
dec
cs
jmp
mov
pop
(bad)
std
(bad)
(bad)
call
pop
and
xchg
jb
int3
fist
out
leave
pop
adc
dec
add
mov
loopne
lahf
push
or
pop
ret
adc
or
out
inc
push
push
cdq
push
out
adc
xor
mov
lahf
in
movs
fisubr
mov
mov
jnp
push
hlt
cmps
lahf
push
in
test
add
xchg
sbb
xchg
ret
mov
clc
mov
call
or
cmp
jge
xchg
and
les
int
or
push
nop
jo
icebp
mov
lahf
add
cmp
push
jmp
lock
out
cmp
xor
or
iret
dec
cmp
out
cmp
xor
loop
add
(bad)
dec
dec
mov
xor
adc
(bad)
cmps
das
pop
sub
popa
mov
out
test
xor
xchg
aad
push
pusha
sar
jne
mov
ja
sbb
sub
mov
jl
in
push
call
bound
xchg
pop
cli
cld
test
mov
pop
pop
(bad)
rcl
mov
shl
push
sub
mov
xchg
jmp
push
jmp
mov
retf
enter
mov
xchg
mov
push
sub
mov
mov
push
xchg
mov
inc
aas
pop
mov
pop
inc
mov
mov
add
pushf
cld
jge
pop
pop
push
xchg
fs
test
lahf
sub
or
stos
add
(bad)
cmp
ins
pop
enter
cmp
xor
or
test
(bad)
pusha
ret
sbb
in
xchg
mov
xchg
xor
inc
add
inc
push
pop
daa
push
add
pop
popf
jbe
dec
xor
sbb
cmp
loope
sbb
sub
xor
cli
loopne
xchg
push
or
leave
in
out
and
and
sbb
nop
retf
pop
and
and
inc
das
and
push
sbb
mov
adc
push
data16
scas
or
and
daa
push
mov
ins
mov
fcom
js
add
sub
ins
sbb
enter
inc
add
xor
jb
push
lea
cli
test
sbb
mov
add
lea
push
xchg
adc
sub
sub
mov
xchg
adc
push
sub
xor
ja
push
(bad)
fild
jl
cld
stc
or
stc
test
cld
stc
sti
stc
cld
stc
add
xchg
push
jb
test
hlt
stc
and
(bad)
hlt
stc
repz
hlt
repz
xchg
jle
push
lods
sub
dec
cmp
stc
or
mov
mov
out
push
sub
outs
xor
or
in
and
fcom
mov
xor
xlat
fdivr
adc
dec
mov
enter
sti
rol
shl
xor
int3
std
jle
in
cmp
pusha
lods
call
mov
cmp
and
sub
jbe
mov
fstp
adc
mov
and
jl
rcl
cmps
mov
fmul
push
rcr
add
inc
ror
fst
fidiv
pop
sub
les
push
push
loopne
mov
(bad)
mov
inc
jmp
or
retf
xchg
mov
jne
jnp
pop
mov
push
mov
adc
push
call
stos
ret
out
cmp
inc
push
push
pop
mov
imul
jne
add
stos
mov
xchg
lods
jp
shr
jbe
cmc
sbb
mov
bound
mov
nop
adc
cs
or
mov
sub
mov
pop
jmp
and
push
adc
outs
or
dec
je
in
es
cmp
cmc
les
pop
mov
add
outs
and
inc
pop
adc
xlat
ret
push
pop
cwde
mov
sub
cmps
jnp
sub
adc
adc
jg
mov
aas
add
jge
push
call
dec
(bad)
(bad)
pop
mov
outs
pop
repz
int
xor
imul
mov
arpl
push
jle
add
pushw
icebp
mov
and
add
jbe
sbb
push
dec
in
dec
out
pop
loop
pushf
call
pop
jnp
dec
ret
sbb
cld
or
(bad)
retf
fsubr
mov
mov
in
push
adc
stc
jae
or
fistp
fcomp
pop
call
add
push
jge
mov
push
ins
call
inc
fdiv
adc
or
mov
push
sub
adc
sti
aam
adc
push
cmps
clc
push
call
call
not
push
push
scas
push
rcl
call
mov
and
mov
sbb
mov
pop
jbe
inc
push
movs
pop
inc
mov
je
stos
fadd
loopne
xchg
mov
fist
cwde
mov
rol
out
push
scas
push
xchg
in
shl
jno
jmp
ins
dec
retf
dec
dec
aam
arpl
out
jno
or
jp
sti
outs
(bad)
scas
mov
test
sub
push
adc
and
cmc
and
hlt
sysenter
xchg
jl
mov
push
push
push
idiv
and
mov
jbe
loope
rol
sub
jmp
in
movs
mov
mov
add
cmps
cmp
or
push
movs
bound
jbe
pusha
sti
dec
or
shl
add
ja
inc
mov
sub
shl
jbe
add
stos
out
xor
scas
(bad)
(bad)
push
movs
jmp
rcr
les
aad
ret
or
clc
call
mov
jo
arpl
ins
dec
sar
xchg
lods
and
add
jbe
xchg
or
jp
push
pop
out
xor
mov
sti
fsub
dec
sub
mov
enter
mov
mov
jle
sub
push
enter
sbb
repnz
imul
sbb
cld
(bad)
sbb
call
pop
stc
stc
sbb
mov
mov
and
xor
icebp
ret
lea
xchg
in
in
push
popa
call
ret
dec
sti
xchg
jne
lock
mov
add
pop
lds
mov
(bad)
xor
div
inc
pop
xchg
push
pop
dec
mov
or
ror
jecxz
inc
test
mov
imul
adc
iret
xlat
mov
(bad)
mov
push
adc
mov
push
retf
in
ss
or
daa
jg
sbb
(bad)
sub
mov
add
push
add
sub
sub
pop
clc
sar
frstor
test
xor
scas
xchg
sub
sub
cmp
xchg
jo
push
xchg
sbb
sti
std
and
pop
mov
sbb
fadd
dec
jae
pusha
rol
sahf
cli
add
push
xchg
and
sub
stc
add
sub
aas
aaa
add
mov
pop
retf
pop
add
xchg
daa
pop
dec
pop
movntq
dec
jbe
sub
inc
mov
jae
inc
jo
pop
icebp
pop
or
add
cmp
add
jmp
jg
push
mov
and
aad
or
pop
and
imul
sub
fistp
xchg
call
call
jle
adc
add
dec
adc
pop
imul
ja
outs
fld
add
adc
or
mov
jne
stc
sahf
pop
mov
add
pop
and
retf
sbb
add
sbb
aas
sbb
fs
sub
call
shl
xor
cmp
fidiv
sub
mov
and
mov
and
mov
mov
hlt
push
jle
cmp
pop
xchg
ins
inc
test
mov
pop
fistp
and
ds
add
das
aas
push
fisttp
(bad)
call
test
and
pop
sbb
add
scas
add
inc
jle
add
jle
add
jmp
add
ror
test
add
pop
jmp
add
leave
cmps
lahf
and
(bad)
jmp
rol
inc
repnz
adc
add
or
add
and
sub
xchg
mov
(bad)
push
mov
fcomip
pop
dec
or
or
inc
adc
inc
not
inc
cs
jg
dec
push
jl
or
ficomp
clc
adc
outs
ja
je
in
sbb
xor
mov
xor
aas
mov
test
into
(bad)
dec
outs
add
pop
in
daa
fiadd
push
or
or
adc
or
inc
or
adc
xchg
mov
mov
add
mov
out
pop
call
fidiv
xor
int3
push
shr
sub
dec
sub
ins
call
cmp
or
(bad)
(bad)
push
mov
je
imul
outs
xchg
dec
hlt
sub
sbb
jo
push
cmc
ror
jnp
popf
data16
inc
inc
cwde
dec
popa
push
fwait
mov
or
or
add
add
push
or
jmp
cmp
out
call
test
mov
cmps
mov
aas
add
fcmovnb
xor
push
and
fdiv
add
push
mov
and
retf
cs
cmp
retf
inc
das
stc
dec
sti
(bad)
jmp
add
add
jle
fs
mov
inc
or
jle
retf
ret
mov
add
enter
cld
(bad)
(bad)
stc
pop
cwde
adc
sti
xor
push
and
cmps
outs
lahf
adc
pop
pop
jg
js
mov
mov
in
in
enter
outs
pop
add
nop
cld
or
cmc
scas
add
xchg
add
and
cli
(bad)
(bad)
cmp
(bad)
inc
out
pop
fisttp
add
pop
gs
dec
popa
inc
dec
pop
in
inc
or
and
ret
and
pop
and
icebp
or
adc
int3
pushf
call
sub
xor
ret
sub
call
sub
sbb
call
and
mov
cmp
sbb
sbb
movs
sti
jne
shr
arpl
jae
cwde
rol
call
pop
sub
inc
cwde
inc
or
jmp
cmp
jbe
pushf
add
das
data16
push
pop
or
sub
add
push
xchg
or
or
imul
xor
jg
xchg
and
sbb
rcr
dec
push
adc
in
jge
add
or
jmp
movs
add
adc
or
pop
sbb
and
add
mov
ret
sbb
faddp
push
sar
mov
sbb
xchg
rcl
add
ret
cmp
sub
lea
dec
(bad)
or
sub
imul
loope
mov
sub
dec
adc
adc
sub
test
mov
cdq
pop
ret
cmp
push
icebp
sbb
in
loope
lea
and
lock
into
aad
or
pop
loope
pusha
sub
mov
pop
ror
fbld
push
nop
adc
fcmovnu
sub
dec
aam
mov
in
cmp
push
xchg
and
dec
pushf
rcl
jecxz
js
les
or
sbb
or
and
pusha
jns
mov
jbe
outs
or
sar
sub
ins
sbb
adc
jg
pop
ins
cmp
lahf
call
mov
push
test
add
and
lahf
add
stos
in
mov
jecxz
pop
xor
cmovno
jmp
mov
pop
ins
inc
sti
loope
call
adc
push
call
scas
mov
or
inc
fwait
adc
mov
mov
jp
push
add
mov
and
(bad)
cld
lods
dec
and
sbb
push
ret
addr16
loopne
add
ret
dec
inc
adc
in
sbb
or
push
rcr
scas
push
add
xchg
pop
mov
pop
aas
scas
add
or
add
repnz
cmp
fistp
push
and
push
or
imul
movsx
xor
popf
adc
std
ret
adc
push
and
lods
push
cmp
test
rol
sub
int
push
repnz
loopne
repnz
add
shl
lock
push
fild
test
and
in
dec
or
pop
outs
mov
lock
jb
push
ds
adc
call
pop
ficom
inc
popf
add
imul
ret
sbb
sub
add
dec
fmul
lock
movs
ja
repnz
iret
ja
xor
adc
xor
pop
add
idiv
xchg
push
sar
int3
adc
mov
repnz
sbb
loope
(bad)
scas
popf
xlat
(bad)
mov
jnp
xchg
neg
sub
and
repnz
call
repnz
call
push
pop
or
dec
xchg
and
fs
dec
and
inc
sub
std
add
sub
push
pop
sbb
ja
repz
sbb
jbe
inc
adc
xchg
stos
leave
mov
mov
mov
mov
push
add
adc
aaa
pushf
aas
mov
xchg
lahf
loopne
push
xchg
shl
or
jle
mov
test
ret
aas
xor
fisub
jo
ja
xor
push
xor
rcl
jge
sub
test
sub
enter
jg
add
add
inc
out
retf
(bad)
fcom
or
or
push
mov
jg
dec
sbb
push
mov
(bad)
ja
repnz
sub
lea
add
or
call
mov
ins
arpl
pop
lods
lea
aam
call
xor
pop
inc
sub
ins
dec
test
pop
mov
aas
adc
add
adc
(bad)
push
xor
pop
movs
js
xor
jmp
push
fcmovnu
add
(bad)
ds
add
call
xlat
int3
and
mov
leave
xor
pop
cmp
ret
add
lahf
add
(bad)
inc
dec
repz
retf
add
pop
xor
add
jne
fstp
mov
pop
xchg
inc
ds
lahf
call
xor
push
mov
ret
std
popa
lahf
pusha
loope
adc
mov
pop
sbb
or
add
push
(bad)
jmp
sbb
in
aaa
jmp
dec
in
cmp
hlt
fisubr
inc
in
fsub
sub
ins
leave
sar
int
mov
sbb
push
mov
or
adc
call
pop
sti
mov
push
push
and
sbb
pop
adc
inc
add
iret
sub
clc
pop
and
and
aas
pop
and
dec
xor
sti
and
pop
arpl
into
out
pop
cmp
inc
sti
push
and
lock
cli
call
mov
pop
push
add
dec
adc
aam
pop
call
dec
mov
jae
cmp
(bad)
or
inc
mov
pop
sub
nop
sub
cmp
out
jns
je
stos
popa
adc
aaa
movs
adc
dec
xor
mov
sub
dec
jae
mov
mov
test
test
mov
test
cmp
fidiv
push
inc
out
and
push
test
(bad)
or
mov
pop
ins
and
sbb
int3
cmp
sub
jo
cmp
enter
and
pop
xchg
dec
push
adc
aam
mov
rcl
call
lahf
xor
cwde
dec
pop
sub
in
push
fsubr
es
xor
mov
repnz
fs
mov
adc
dec
aas
fisttp
sub
cmp
stos
rcr
fld
push
push
mov
inc
mov
mov
addr16
xor
xor
je
or
xchg
mov
fisub
or
sbb
outs
cmp
add
addr16
or
inc
add
inc
add
inc
stos
dec
push
jg
popa
ffreep
enter
loopne
(bad)
pop
test
fnstcw
dec
call
ror
out
push
pop
inc
adc
lock
adc
shr
fmul
sar
dec
sbb
jmp
push
or
mov
mov
push
mov
fdivr
and
fstp
jecxz
mov
out
fwait
add
mov
xchg
sub
pop
jle
aam
cld
jns
mov
ror
inc
aam
add
sub
xor
enter
push
cmc
mov
call
ja
lea
dec
adc
push
or
jmp
jb
and
add
fwait
sti
sub
imul
jmp
add
or
add
push
and
mov
movsx
or
adc
in
(bad)
fstp
inc
dec
mov
jne
sub
call
mov
mov
sbb
jmp
push
ja
add
cmp
inc
stos
mov
arpl
pusha
push
inc
fidiv
int
adc
add
mov
js
test
inc
push
inc
add
mov
xor
pusha
push
dec
ins
dec
pop
(bad)
out
fidivr
add
jmp
fwait
dec
repz
cs
cmp
ror
push
adc
fadd
repz
hlt
hlt
jmp
and
add
push
xchg
int
or
cld
ror
je
shl
dec
pop
push
add
pushf
movs
and
mov
(bad)
std
test
das
das
sbb
(bad)
fcomp
xchg
xchg
movs
sub
lahf
sub
push
pop
(bad)
cld
push
jge
loopne
or
popa
pop
mov
movs
sub
out
mov
das
jne
cwde
pop
inc
or
repz
push
test
loopne
adc
(bad)
add
adc
stos
inc
ds
pop
call
and
test
mov
jp
dec
and
jae
add
popa
xchg
sbb
les
iret
mov
dec
add
adc
mov
mov
or
dec
int3
jecxz
fmul
and
xor
and
sbb
add
mov
fs
sbb
jecxz
shl
inc
repnz
jmp
dec
ret
inc
push
mov
lds
or
int3
rcr
mov
pop
xchg
loope
sbb
sub
in
hlt
jmp
in
adc
xchg
jmp
hlt
movd
pop
dec
fsubr
gs
and
pop
dec
add
in
pop
dec
loopne
in
push
ficom
sbb
fnsetpm(287
in
cmps
test
xchg
int3
fucomi
push
ficom
pop
inc
add
retf
test
(bad)
and
adc
adc
pop
sub
popa
xchg
test
int3
fidiv
loope
pop
int3
adc
push
mov
call
enter
pop
or
xchg
(bad)
add
jae
sub
rcl
aad
test
mov
xchg
adc
jge
add
xchg
or
or
mov
adc
xor
and
dec
ret
and
test
lea
xchg
repnz
int3
adc
sub
or
mov
push
call
xor
adc
pop
cwde
cmp
arpl
retf
pop
(bad)
(bad)
outs
xchg
mov
and
push
mov
xor
jp
call
out
jb
cmp
ss
hlt
lock
xor
xchg
xchg
outs
out
cdq
aas
stc
xchg
aad
movs
out
(bad)
push
sub
pop
sbb
or
ja
jnp
sbb
lods
or
fist
push
mov
dec
mov
mov
(bad)
enter
adc
clc
jg
es
sbb
xor
dec
mov
icebp
adc
xchg
sub
push
inc
aas
sar
and
xor
ror
push
mov
xchg
adc
jge
(bad)
movs
cmp
push
mov
mov
push
add
mov
(bad)
mov
or
pushf
adc
sbb
mov
xchg
je
nop
cmps
stc
cs
sbb
cmp
shl
jmp
stc
hlt
retf
imul
and
and
inc
or
cmp
rcr
push
and
pop
jle
jae
adc
cwde
pushf
inc
pop
test
sar
shl
push
ds
(bad)
outs
test
xor
int3
dec
pushf
xor
jo
ss
and
inc
jmp
push
movs
mov
retf
jmp
jne
jge
add
sub
(bad)
loopne
jo
inc
popa
cwde
pop
push
cmp
pop
cmp
ror
cmps
sbb
mov
xchg
pop
push
dec
push
and
mov
mov
fadd
xchg
div
sbb
sbb
shr
push
push
xor
adc
mov
movs
add
lods
dec
xchg
adc
pop
(bad)
pop
xor
dec
sub
cwde
cmp
xor
inc
mov
pop
popf
cmp
mov
movs
push
sbb
xchg
retf
into
test
sti
xor
mov
pop
push
cld
push
xchg
fist
jb
mov
add
in
xchg
add
mov
cs
or
push
pop
adc
pop
sub
gs
adc
and
adc
adc
stos
push
sub
sbb
mov
pop
es
dec
or
mov
adc
xor
pop
shr
mov
adc
fist
adc
pop
(bad)
mov
mov
arpl
push
in
lds
mov
sub
add
adc
prefetchnta
aaa
xchg
dec
aam
jle
cmp
imul
sbb
lock
mov
int3
pop
cmp
pop
mov
or
mov
call
pushf
inc
adc
mov
loop
mov
imul
sub
leave
aad
xchg
and
enter
sbb
outs
loop
fwait
aas
xchg
add
push
dec
pushw
lahf
pusha
xchg
mov
test
mov
and
in
lock
adc
clc
mov
sbb
loopne
fisub
jmp
push
adc
icebp
popa
movs
mov
call
movs
mov
ins
xor
add
add
pop
fcmovne
push
cdq
mov
icebp
shl
or
es
or
add
jle
inc
add
add
mov
dec
cmp
ds
and
aam
jmp
ret
outs
push
or
push
inc
test
shl
arpl
push
div
jmp
clc
cwde
stos
sar
add
(bad)
dec
fmul
movs
fidiv
sub
pop
lods
mov
mov
add
mov
hlt
and
pop
call
xchg
push
and
mov
aam
dec
stos
aad
(bad)
loope
shr
adc
pop
mov
add
add
xor
mov
push
or
imul
dec
or
lods
mov
xchg
movs
(bad)
mov
repnz
dec
add
test
push
(bad)
or
xor
nop
aad
sub
pop
pop
test
xor
arpl
sbb
and
cmps
loope
fucomp
test
shr
and
sub
fwait
xchg
push
push
push
fs
mov
hlt
push
mov
pop
outs
jo
add
movs
cmp
test
ret
mov
addr16
ja
push
jbe
mov
and
pop
xchg
out
push
sbb
hlt
shl
sbb
ins
out
sar
dec
test
fisubr
jmp
xor
fistp
mov
mov
cmp
sub
leave
clc
push
ss
inc
jb
hlt
dec
mov
add
mov
enter
mov
add
les
push
or
lock
mov
rol
(bad)
xchg
mov
xchg
fidiv
inc
push
mov
xor
bound
sub
aad
pop
nop
cmp
cmp
frstor
sub
pop
cmp
(bad)
cs
mov
push
outs
loopne
pop
imul
dec
add
xor
add
lock
jmp
mov
cmps
or
call
cmp
fucom
or
xchg
jmp
pop
xchg
sub
sbb
xchg
mov
popa
test
call
rcr
jno
or
enter
push
es
jbe
and
or
data16
mov
pop
fs
nop
pop
adc
lahf
ins
retf
xor
nop
inc
mov
std
sub
mov
sub
fisubr
gs
cmps
fcom
loopne
jb
ins
add
push
push
enter
(bad)
out
jns
or
cdq
dec
lock
jp
ja
add
xchg
pop
mov
mov
dec
stos
movs
call
mov
loop
scas
imul
std
jp
add
cli
mov
icebp
inc
mov
sbb
fsubr
fucomp
lods
sub
lock
nop
shl
dec
pop
add
rol
fs
push
les
dec
pop
lock
push
push
das
popa
(bad)
or
cmp
lock
sub
push
(bad)
int3
daa
shr
out
and
push
sub
xchg
test
cmps
arpl
movs
loopne
pop
sub
lods
ins
mov
fadd
jg
inc
(bad)
jnp
dec
ret
cdq
popf
in
outs
rol
imul
mov
inc
push
fimul
jne
frstor
mov
ficomp
loop
test
ret
cmps
xor
rcl
pushf
stc
je
mov
cmc
cmp
(bad)
sti
push
adc
push
xor
pop
and
cli
add
int3
popf
push
sar
cwde
adc
xor
cmp
xor
cmp
pop
sub
xchg
dec
sub
or
cmp
stos
test
xor
and
fbld
and
shl
daa
and
sbb
sbb
xchg
das
adc
adc
in
adc
adc
xchg
(bad)
call
sbb
xchg
xor
shl
(bad)
call
xchg
aad
dec
jmp
sbb
mov
pop
adc
and
xchg
mov
xor
pop
mov
push
fsubr
add
mov
addr16
fwait
daa
hlt
mov
add
xor
pop
xor
loop
mov
sub
push
add
test
cmp
push
clc
movs
xor
sbb
adc
inc
add
int
in
inc
movs
lea
xchg
or
xor
outs
cld
ror
xor
mov
in
jmp
aas
cmp
cld
popf
mov
arpl
adc
ds
fcmovb
popa
sbb
int3
fadd
inc
das
pop
rol
and
adc
push
and
mov
xchg
and
ins
sub
add
das
fsub
sub
and
mov
outs
inc
jbe
sbb
adc
test
sbb
hlt
or
mov
pushf
jge
shl
and
in
ds
js
(bad)
and
not
loopne
je
shr
mov
jmp
add
add
outs
pop
mov
rol
pop
dec
cmps
or
dec
aam
mov
jno
jle
pop
mov
jne
push
push
mov
mov
add
hlt
pop
std
add
jge
es
mov
shl
js
pop
sbb
adc
ret
retf
push
dec
mov
mov
rcr
fldcw
inc
jne
js
jno
arpl
(bad)
imul
cmp
es
push
in
or
mov
cmps
add
sub
pop
fist
iret
mov
xor
ret
push
js
xchg
adc
enter
xchg
mov
adc
je
mov
add
cmp
add
mov
mov
loopne
in
int
lods
xchg
inc
fisubr
jle
dec
mov
fbstp
or
js
adc
aaa
push
dec
nop
lods
jns
in
cmp
enter
cdq
push
push
mov
cwde
inc
ja
xchg
mov
jg
sbb
clc
nop
pop
mov
mov
mov
mov
add
fnop
dec
out
add
cld
push
fmul
(bad)
mov
imul
push
jmp
pop
jle
cmp
xchg
xchg
test
cmp
jle
or
out
cmps
es
popa
fsubr
inc
mov
in
out
sti
jbe
outs
push
sbb
adc
sbb
or
cmp
inc
inc
add
sub
into
dec
dec
aam
(bad)
ficom
icebp
add
js
ret
(bad)
sbb
inc
or
sub
lock
icebp
mov
push
push
cmp
sub
nop
or
add
das
loope
or
hlt
adc
mov
scas
add
out
sbb
inc
or
sub
add
dec
jmp
pop
push
adc
push
cwde
ins
adc
je
in
or
push
cmp
jmp
dec
lds
and
cmp
in
(bad)
xor
mov
xor
aam
retf
cld
cmps
daa
mov
fsub
out
jp
lods
xor
xchg
adc
cmp
fiadd
or
loopne
pop
cmp
inc
xor
sbb
inc
xor
inc
inc
loopne
cmp
shr
adc
or
rcr
sub
fild
pushf
lods
mov
push
test
rcl
push
sub
add
pop
inc
add
adc
loop
shr
xor
std
xchg
push
inc
aaa
mov
mov
or
jmp
jnp
add
fstp
sub
jg
mov
(bad)
push
scas
mov
out
jo
push
in
sbb
stos
fidiv
aaa
inc
cld
xchg
(bad)
pop
mov
jne
lahf
sub
add
aam
add
dec
cld
int3
push
jb
pusha
push
inc
cmc
push
das
rcl
fadd
frstor
loope
jmp
shl
push
cld
addr16
fsub
and
xchg
fdivr
add
or
nop
xchg
(bad)
mov
pop
push
bound
xchg
mov
inc
pop
fadd
cdq
and
or
sar
xchg
fistp
push
pop
add
or
cmp
push
sbb
es
inc
sub
inc
aam
dec
push
add
mov
icebp
je
in
push
cmp
push
add
stc
xor
es
or
jo
(bad)
jo
add
xchg
jo
mov
or
jo
pop
and
jmp
sub
dec
es
in
cmp
cmp
hlt
call
push
sub
les
mov
sbb
and
cmp
psllw
pop
cmp
sub
movs
sbb
mov
push
test
adc
push
jg
mov
cmp
sub
inc
jl
es
or
dec
imul
lock
dec
add
sbb
adc
cld
enter
pushf
lds
push
jl
push
imul
sub
cmps
hlt
sar
pop
cs
js
pop
daa
dec
fwait
add
into
ins
or
push
xchg
xor
jno
imul
int
lock
test
loop
or
jge
clc
jbe
push
push
call
or
xchg
jnp
mov
dec
pop
xor
or
imul
push
dec
js
dec
xchg
repnz
or
ret
stos
pop
popa
add
or
nop
jne
mov
(bad)
in
xchg
push
or
mov
test
adc
fcomip
jnp
sub
push
jecxz
fisubr
lods
or
mov
mov
fild
imul
scas
lea
cmp
cmp
push
ja
lds
push
gs
js
mov
shr
(bad)
iret
int
bound
jmp
jmp
push
clc
adc
ret
les
mov
rcr
ja
mov
in
inc
push
sub
lea
fist
or
jmp
mov
pop
aas
pop
test
ret
adc
inc
mov
adc
sub
clc
xchg
je
es
sar
push
lahf
mov
pop
inc
dec
push
dec
addr16
jno
add
gs
pop
scas
xchg
sbb
std
cmps
leave
dec
mov
pushf
loopne
or
test
fistp
jg
cpuid
jo
pop
sbb
sbb
adc
out
std
mov
retf
cld
clc
lods
sbb
cmp
mov
jg
(bad)
push
xchg
xor
hlt
cmp
jge
xor
in
pop
or
cs
out
repnz
(bad)
adc
or
mov
pop
iret
cmp
cmp
pop
adc
inc
loopne
jo
loop
jmp
adc
mov
jg
mov
jp
or
mov
inc
(bad)
jae
lahf
aaa
lock
cmp
mov
imul
cmp
imul
jmp
adc
inc
xchg
(bad)
cmp
or
fcomp
push
adc
cmp
imul
in
jo
add
js
mov
shl
cmps
test
push
inc
jns
add
mov
sar
add
mov
push
out
loope
retf
jecxz
nop
sub
push
cld
mov
cmps
in
xor
mov
lods
pop
adc
jle
fiadd
push
dec
add
mov
jnp
dec
adc
push
mov
mov
addr16
imul
add
cmp
in
sbb
mov
jge
sub
add
and
aad
jmp
push
das
add
adc
sti
sti
loopne
dec
lock
mov
inc
retf
rol
mov
movs
inc
out
call
mov
ins
sub
xor
add
or
hlt
cmps
fidivr
stos
xchg
and
push
ret
fimul
dec
(bad)
jmp
nop
ins
or
inc
inc
inc
imul
push
pushf
mov
inc
mov
xchg
mov
xor
adc
push
xchg
call
sub
adc
outs
and
hlt
imul
add
lods
sub
leave
dec
pop
and
jl
clc
imul
rol
inc
mov
mov
adc
dec
pop
xchg
or
mul
or
inc
inc
stc
xchg
xchg
adc
je
mov
sub
daa
dec
dec
addr16
pmuludq
loopne
pop
xchg
call
rcl
fimul
dec
movs
popa
push
ret
ja
cmp
jp
or
movs
add
jp
xchg
cmp
nop
add
test
xchg
movs
add
clc
and
mov
inc
outs
rol
call
ror
ins
inc
cmp
cmp
(bad)
in
repz
repz
hlt
addr16
jecxz
cmp
pop
xchg
or
add
jbe
daa
xor
jno
mov
ja
in
movs
outs
add
and
mov
add
sub
jg
mov
push
xchg
comiss
push
xor
icebp
mov
push
scas
inc
push
outs
sbb
and
pop
mov
sub
and
xor
mov
emms
inc
sub
mov
add
jb
lds
stos
or
and
push
push
cs
stos
add
dec
psllw
inc
rcr
retf
jg
pop
or
pop
js
pop
mov
fadd
iret
add
stos
cmp
cmp
mov
ja
pop
inc
pop
jge
or
ret
xor
or
not
fistp
jle
and
and
ins
mov
sahf
inc
(bad)
std
(bad)
mov
pop
xchg
pop
xor
invd
mov
xor
pop
enter
inc
or
push
jl
retf
rcl
hlt
out
hlt
out
cmp
and
(bad)
test
inc
stos
outs
pop
mov
xor
out
stos
pop
pop
sbb
xchg
stc
mul
sbb
popa
imul
out
and
cmp
cmp
inc
pusha
xchg
push
sbb
cs
sbb
jl
lock
mov
test
jg
or
or
jb
aaa
sbb
mov
xchg
sbb
out
ins
or
icebp
mov
pop
jmp
pop
das
inc
inc
fs
jge
xor
sbb
aas
push
jo
and
inc
mov
aaa
fistp
popa
mov
dec
fist
enter
mov
xor
sbb
jg
stc
in
mov
add
push
icebp
push
push
in
loopne
in
dec
mov
fsub
fneni(8087
pop
mov
fsubr
jge
pop
int3
xchg
cmps
test
retf
rol
xor
les
(bad)
(bad)
je
int
pushf
popa
mov
sbb
jge
div
add
cmc
cmp
xchg
fimul
(bad)
jae
imul
add
jnp
mov
cdq
outs
clc
mov
hlt
dec
dec
(bad)
mov
jnp
fisttp
imul
xor
cmp
pop
jp
inc
adc
xor
sbb
loop
lock
aaa
mov
cmp
jb
add
inc
add
add
mov
adc
pusha
(bad)
sti
hlt
push
cli
std
mov
jo
xchg
pushf
in
xor
adc
lahf
dec
xchg
test
cmp
adc
xor
xchg
push
sub
stc
and
xchg
cmp
sbb
ja
adc
mov
(bad)
and
mov
in
mov
add
or
jbe
add
push
cmpps
into
push
(bad)
(bad)
sbb
js
mov
push
pop
js
mov
addr16
test
push
cwde
add
mov
daa
inc
(bad)
or
(bad)
popf
fadd
shl
mov
fwait
inc
stos
and
(bad)
outs
pusha
adc
sub
xor
(bad)
xor
sub
push
dec
mov
cmp
iret
sbb
clc
ds
inc
clc
add
clc
adc
inc
test
cld
fist
ror
sub
or
mov
mov
add
xor
add
jnp
xor
inc
clc
inc
adc
sub
ror
mov
nop
mov
adc
pop
shl
add
imul
stos
adc
mov
test
in
es
xchg
add
dec
clc
pop
aaa
pcmpeqb
pop
and
inc
and
xlat
add
push
inc
push
inc
in
add
xor
pusha
jmp
inc
inc
xchg
pop
adc
inc
jae
and
adc
or
and
xchg
out
lds
push
cwde
pop
scas
cmp
in
or
push
shl
les
add
adc
sub
or
mov
add
dec
jge
mov
push
jbe
stos
pop
inc
dec
(bad)
data16
inc
inc
or
repz
sbb
adc
adc
outs
aas
or
mov
mov
and
scas
push
sbb
jg
sub
or
lea
mov
dec
hlt
stos
stc
jl
inc
mov
sub
retf
add
mov
sub
imul
ret
cmp
jne
fnsave
loope
jbe
pop
sub
jmp
add
and
mov
cmp
pop
(bad)
outs
stos
add
jns
or
fst
fdivr
pop
adc
jo
jmp
hlt
cmp
sub
pop
push
mov
mov
ja
sbb
dec
cmp
adc
lock
jg
push
call
and
xor
add
sub
jmp
fwait
enter
cmp
das
ja
xor
arpl
js
fdivr
mov
mov
adc
(bad)
in
xchg
pop
sub
or
stos
add
(bad)
jg
add
mov
shl
out
out
jl
push
add
aam
rol
fild
lock
mov
sub
adc
add
mov
in
mov
lods
add
push
jno
push
ret
out
fild
mov
rol
cld
add
retf
std
test
pop
imul
mov
or
pop
ret
inc
ds
or
dec
jecxz
fisttp
test
add
sbb
sbb
and
cwde
pop
test
mov
inc
xchg
jae
repnz
in
jmp
add
xor
sbb
test
jmp
aam
add
inc
popf
ss
xor
movs
mov
cmps
adc
pop
scas
repz
out
or
adc
sbb
add
dec
mov
stc
cs
mov
and
cdq
fs
add
pop
mov
dec
add
xchg
xchg
xor
fdivrp
adc
adc
ins
xchg
stos
mov
push
or
test
(bad)
add
xchg
inc
or
leave
adc
fimul
jg
repz
dec
sub
push
and
mov
fdiv
or
jno
aam
push
push
std
mov
sti
add
fist
clc
push
add
push
(bad)
loop
or
jg
adc
lea
pusha
daa
sub
test
clc
out
or
mov
xor
aam
into
jmp
push
rcl
dec
push
cmp
pop
xchg
jmp
push
ret
adc
test
inc
inc
aad
push
jmp
xor
jle
xor
xchg
sti
jmp
cmps
jno
(bad)
in
pop
and
adc
jl
sub
adc
(bad)
out
add
lds
add
test
test
inc
sbb
mov
ret
stos
push
hlt
lock
jmp
or
jp
pop
nop
add
in
xchg
push
sti
test
sbb
sub
jbe
ins
push
test
imul
call
cmps
fnstcw
inc
test
retf
sub
das
lahf
je
pop
and
push
cli
adc
adc
shl
add
imul
stos
fst
xor
dec
or
inc
add
xor
push
ja
or
das
add
and
cld
cdq
adc
pop
jecxz
dec
jmp
call
popa
adc
inc
pushf
hlt
test
pushf
jge
dec
(bad)
add
push
pop
xor
int3
or
sub
aam
adc
test
and
push
push
mov
adc
das
or
mov
jns
sub
call
push
(bad)
stc
nop
xor
dec
push
adc
mov
pop
push
cmps
and
xchg
lods
xor
or
cld
push
(bad)
retf
(bad)
and
xchg
test
or
jne
leave
mov
popa
inc
inc
or
mov
mov
xchg
xchg
cmp
test
adc
dec
leave
std
sbb
jmp
and
xorps
sti
sub
pop
dec
inc
lea
mov
mov
add
mov
loope
or
push
in
in
lock
arpl
push
nop
cmp
mov
imul
push
add
out
push
mov
dec
hlt
out
call
in
dec
add
retf
push
fwait
sbb
mov
mov
frstor
aaa
sbb
pop
ins
mov
jae
ror
dec
out
clc
mov
and
popa
out
jmp
fisub
pop
test
inc
fild
inc
in
dec
pop
jg
stc
(bad)
aaa
loope
inc
mov
or
sub
fisttp
pop
clc
adc
jge
push
ja
or
lahf
add
push
jmp
xor
xlat
sti
add
repz
lods
inc
jo
cwde
add
jmp
cs
scas
add
mov
jmp
add
cmp
stos
jmp
(bad)
ss
xor
or
(bad)
ss
iret
pop
std
addr16
stc
into
fs
pop
pop
adc
retf
dec
test
ror
pop
sub
lods
inc
cmp
ins
push
add
and
js
mov
xor
sub
fidiv
inc
hlt
jge
push
out
xchg
jae
mov
pop
cld
add
movs
jmp
push
push
cmps
jle
std
js
lock
push
jmp
ret
into
push
nop
jmp
jae
dec
push
adc
jg
ds
and
and
mov
pop
push
fs
pop
rcr
mov
ficom
push
jecxz
in
cmp
mov
je
imul
loop
cmps
mov
push
out
and
push
mov
mov
mov
jmp
cwde
repz
or
jmp
jmp
fstp
out
test
pop
and
pop
inc
pop
sti
pop
sub
or
je
jo
mov
hlt
add
je
xlat
shl
test
pushf
sahf
sbb
sbb
retf
push
dec
dec
xchg
in
out
out
push
add
cmp
mov
cmps
adc
(bad)
pop
dec
cs
xlat
fcomp
mov
(bad)
rcr
push
imul
xlat
sbb
mov
mov
mov
jae
mov
or
push
fild
(bad)
lea
sub
ja
cs
(bad)
int3
(bad)
int3
push
imul
add
mov
mov
mov
mov
imul
and
nop
popf
ins
mov
mov
int
add
dec
shr
es
xor
ror
imul
call
xor
jne
jmp
mov
jne
popf
pop
push
rcl
xchg
push
dec
fimul
std
sbb
je
ret
jmp
lods
hlt
or
stos
push
retf
clc
dec
push
or
inc
lods
lods
enter
test
cmps
lods
fsubp
xor
cmps
lods
test
pop
pop
rcl
in
das
mov
push
jge
sub
and
gs
mov
mov
pop
lea
lea
adc
or
test
pushf
or
jb
xchg
pushf
xchg
pushf
mov
mov
fsub
and
pop
xor
jbe
or
jge
jne
push
dec
jmp
in
outs
sbb
sti
jmp
xor
inc
jle
loopne
jmp
cmp
mov
mov
sar
adc
mov
in
shr
sbb
cwde
daa
call
pusha
test
sbb
clc
push
call
call
xor
lahf
loope
sbb
push
arpl
add
cmps
jne
xor
daa
push
inc
clc
std
sbb
gs
sbb
xchg
scas
mov
or
fist
add
jmp
jnp
(bad)
xor
jae
adc
sub
leave
jbe
movs
in
fdivrp
loopne
lahf
add
lock
out
sub
fild
sub
fwait
jns
clc
and
mov
push
call
mov
(bad)
loope
je
(bad)
fild
dec
cwde
jge
aas
mov
repnz
js
call
cmp
jb
sbb
dec
jl
xor
and
fild
push
sub
and
lods
cwde
sbb
enter
test
into
xchg
xchg
cmp
test
or
mov
loope
ja
or
mov
sub
xchg
pop
sub
sub
jge
add
(bad)
movs
rol
icebp
add
jge
xchg
and
mov
lock
(bad)
jmp
mov
or
push
frstor
icebp
and
bound
xchg
pop
pop
pop
jge
inc
adc
sub
adc
sub
stc
mov
lahf
or
ins
loopne
lahf
cdq
add
ja
punpckldq
jne
pop
test
fwait
stos
enter
(bad)
inc
pop
or
mov
movs
mov
cwde
push
call
add
call
inc
fbld
sbb
ss
add
lock
out
dec
ss
(bad)
and
stos
sbb
cmp
lea
pop
(bad)
movs
inc
sub
sar
and
and
(bad)
sbb
xchg
cmp
pop
jl
sub
rcl
sar
mov
sbb
into
inc
sub
inc
fst
aam
enter
adc
or
add
or
push
lods
movs
fdiv
ret
push
lea
dec
or
loop
jnp
or
xlat
add
mov
rcr
scas
fmul
add
ins
pushf
rcl
(bad)
test
dec
mov
mov
mov
xor
xchg
mov
jp
or
inc
cmp
std
movs
cmc
jp
mov
rol
fwait
std
lods
push
imul
cmps
shl
test
cmps
lods
mov
test
sub
jo
xchg
out
cmps
mov
push
jbe
dec
jne
popf
add
jmp
clc
fstp
xchg
xchg
sub
mov
xchg
xchg
xchg
mov
cwde
xchg
cwde
xchg
mov
call
mov
push
outs
ds
popa
in
mov
mov
push
ret
xor
cmp
xor
sahf
cmps
popf
mov
jle
repnz
mov
sub
rol
or
cmp
push
mov
xlat
add
das
dec
retf
lock
jo
fnsave
pop
dec
jo
sub
jmp
inc
sahf
imul
jmp
gs
or
jmp
jb
push
jmp
mov
xchg
retf
add
pusha
add
stos
pushf
loopne
fild
add
outs
imul
movs
push
fchs
pushf
push
inc
xchg
pop
or
movs
sub
push
dec
or
push
cmp
mov
and
push
mov
dec
dec
add
or
xchg
pop
inc
out
dec
ins
lods
sub
or
rol
inc
inc
and
cmps
mov
inc
inc
dec
inc
lds
and
xlat
cmp
mov
cmp
fiadd
xor
in
jb
xor
das
xor
inc
push
cmp
xor
inc
fs
xor
cs
and
sub
sub
mov
rcr
add
je
sbb
sbb
cmp
and
sbb
inc
fisub
sbb
sbb
or
xor
sbb
cs
retf
adc
adc
push
push
nop
cvttps2pi
sbb
sub
jb
fchs
scas
loopne
pop
and
and
shl
shl
cmp
jle
jb
test
cmc
inc
je
test
inc
fdivr
adc
sub
daa
adc
inc
fmul
fld
call
int
xchg
clc
fimul
aad
jg
add
test
rcl
or
mov
xlat
or
sbb
es
mov
(bad)
call
arpl
pop
add
fild
dec
add
sub
cmp
icebp
ret
push
dec
push
mov
loope
sbb
(bad)
int3
aam
loopne
sub
hlt
inc
add
and
cmps
push
add
adc
arpl
nop
cwde
cmp
jp
inc
aas
movs
or
mov
test
cs
call
repnz
popf
aam
mov
in
mov
ret
cmp
dec
mov
or
mov
cmp
fiadd
xchg
fnstsw
jge
call
mov
dec
lods
push
push
clc
in
ja
fcomp
je
xor
mov
sub
sub
fsub
fcmovbe
xchg
test
pop
stos
dec
xlat
or
sub
jge
call
push
or
in
add
sub
adc
movs
jnp
retf
cld
(bad)
inc
xor
xor
mov
call
in
lea
cmp
and
(bad)
sti
rcr
mov
and
sbb
ret
xor
sub
xchg
xchg
cmps
(bad)
int3
(bad)
enter
mov
int3
mov
push
mov
gs
sahf
ins
adc
repnz
call
lock
in
cmp
ins
mov
dec
mov
xchg
mov
sub
mov
mov
lods
jbe
inc
cmp
xor
pop
out
xlat
jne
frstor
loop
shr
movs
inc
mov
sahf
sub
test
sahf
cwde
inc
mov
or
ins
xor
xchg
xlat
mov
imul
nop
mov
mov
mov
jb
mov
rol
loop
add
jl
pushf
cmps
movs
jb
adc
dec
cmp
sbb
jbe
dec
cs
xchg
js
jbe
xchg
dec
in
jo
ins
ins
ss
cld
and
push
call
pushf
inc
pop
and
adc
inc
sub
fs
mov
push
cs
bound
leave
pop
push
test
call
bound
or
mov
dec
push
dec
xchg
cmp
inc
aaa
inc
dec
cs
push
push
dec
dec
and
inc
inc
and
xchg
cld
adc
cmp
inc
(bad)
or
xchg
xchg
retf
cmp
cmp
or
cmp
and
push
xlat
cmp
cmp
or
xor
xor
adc
push
xchg
aam
in
enter
adc
sub
enter
daa
sub
adc
es
aaa
sub
in
and
lds
xlat
dec
xor
lock
shr
inc
gs
lahf
mov
enter
pop
pop
rol
pop
push
and
add
jne
fs
aam
jns
rcr
adc
sbb
push
nop
xchg
or
pop
xchg
jmp
xchg
cld
cld
pop
push
sbb
cmp
or
push
test
sbb
and
push
push
movs
sub
pop
rol
leave
js
mov
cmp
xchg
add
inc
or
jo
pop
dec
in
cmp
pusha
les
addr16
fild
iret
add
inc
sbb
pop
adc
cwde
pusha
xchg
jo
scas
and
xchg
outs
lods
fiadd
add
pop
in
lahf
(bad)
pop
push
mov
je
cmp
dec
push
(bad)
fsub
cmp
push
adc
mov
sub
fild
mov
mov
mov
lods
sub
mov
inc
in
or
add
sbb
xchg
into
sbb
adc
stc
aas
movs
fisttp
lock
xor
or
mov
jg
in
adc
popa
jne
sub
dec
sub
and
dec
mov
leave
xchg
cmp
jnp
dec
rol
jno
pop
aas
push
add
les
pusha
and
add
lock
push
or
sbb
cmp
mov
lock
in
scas
inc
or
(bad)
aas
dec
sub
ins
test
push
and
xor
push
jg
mov
cmps
cdq
call
aaa
or
jns
push
jo
sbb
mov
and
mov
dec
leave
mov
in
fst
or
test
mov
hlt
rcr
push
dec
sbb
dec
enter
and
push
cdq
sub
loopne
aad
mov
or
icebp
test
cld
idiv
mov
mov
mov
icebp
les
call
cmp
xchg
loope
fdivr
push
sbb
jmp
lods
xor
pop
sub
mov
cli
shr
xchg
jo
pop
cwde
mov
hlt
jge
cmp
add
add
add
ins
lock
push
or
jl
pop
mov
sbb
outs
mov
mov
xchg
cs
inc
push
or
inc
dec
xor
push
cmp
mov
dec
and
aas
gs
shr
inc
sbb
scas
fwait
mov
cmp
les
add
mov
mov
mov
mov
out
xor
mov
div
daa
push
sbb
sar
adc
repnz
sbb
push
pop
fdivr
lock
shl
or
and
jg
retf
add
sar
or
mov
into
aas
cmps
or
stc
jae
test
rol
jmp
sbb
sbb
inc
add
add
dec
lock
stc
add
mov
nop
xor
xor
add
add
dec
add
mov
cmc
cmp
sbb
add
dec
imul
push
addr16
or
add
adc
xor
xchg
icebp
adc
test
push
xor
inc
fbstp
xchg
je
bound
xor
clc
dec
adc
mov
sub
or
push
dec
add
jmp
sub
mov
js
cmp
in
jne
xor
movs
out
rcr
jmp
test
add
fstp
mov
add
leave
mov
(bad)
jp
in
add
out
mov
or
cmp
xor
retf
push
test
rcr
ja
cmp
iretw
xchg
clc
or
or
xchg
jns
push
sbb
ja
lock
es
(bad)
add
imul
mul
aas
and
cmp
inc
out
das
jmp
pop
les
mov
mov
clc
and
jae
push
xchg
jne
pop
jl
sbb
clc
stc
push
mov
xlat
mov
adc
adc
test
(bad)
icebp
std
test
or
sub
mov
and
add
retf
adc
xor
pop
sahf
mov
cmp
mov
ss
loop
clc
add
addr16
call
fld
loope
ins
push
aam
aaa
jp
add
sbb
sub
adc
test
push
movs
lea
add
pop
xor
mov
sahf
inc
das
fdivp
adc
pop
lahf
adc
fsubr
adc
xor
sbb
test
mov
jo
imul
outs
mov
sbb
inc
or
jo
dec
test
test
adc
mov
sub
test
adc
invd
rol
mov
in
lock
int3
sub
nop
scas
sbb
push
mov
push
xchg
jmp
je
jmp
or
daa
cmp
sti
add
fld
arpl
mov
test
xchg
xchg
lahf
pop
adc
cwde
data16
pop
call
mov
push
cmp
fwait
jecxz
jmp
mov
jne
ret
call
and
adc
jne
les
adc
dec
xchg
test
mov
lea
int
aas
into
add
and
(bad)
adc
dec
sahf
dec
mov
add
add
cmp
inc
in
std
call
pop
xchg
js
std
fbstp
out
std
std
push
sub
pop
dec
loopne
jle
std
fdivr
jnp
jnp
fsubr
das
or
sbb
sbb
ds
std
loopne
fdivr
popw
ret
or
imul
xchg
jg
cmp
sbb
push
push
ds
sar
add
inc
xor
xchg
sbb
inc
clc
mov
sub
or
jb
test
rcr
jbe
push
hlt
adc
sub
je
xchg
clc
jnp
inc
or
dec
adc
sub
add
sub
sub
mov
jl
jae
es
call
adc
sbb
repz
add
mov
add
test
cmps
add
cwde
or
nop
mov
icebp
xor
add
dec
add
cwde
icebp
pop
jecxz
cmp
movs
cmc
in
in
pop
sbb
push
fs
jmp
nop
inc
xchg
fistp
or
mov
mov
xchg
pushf
xor
mov
call
arpl
mov
or
mov
call
sub
neg
xchg
mov
cmp
cmp
cwde
gs
repnz
mov
retf
pop
xchg
mov
jle
jge
out
mov
xchg
aaa
mov
test
mov
adc
out
xor
push
sbb
dec
xchg
jo
cmp
das
dec
clc
inc
add
clc
pop
mov
lock
popa
mov
aas
pop
loop
jae
(bad)
xor
(bad)
xor
inc
mov
inc
ja
loope
dec
inc
(bad)
cmc
pop
fisttp
jne
jne
mov
test
xchg
test
jb
leave
out
(bad)
mov
(bad)
xchg
(bad)
xchg
ss
enter
call
adc
ret
test
xor
pop
mov
jb
mov
inc
push
mov
fs
and
loope
lock
pop
pop
hlt
push
pop
add
call
mov
imul
adc
test
jnp
mov
xchg
or
add
movs
jne
pop
pop
mov
adc
mov
sbb
imul
ins
(bad)
mov
pop
xor
sbb
aaa
out
in
add
sub
add
stos
cmp
mov
shl
outs
loope
and
jae
in
loopne
adc
test
and
rol
fwait
xlat
push
xlat
and
xor
jnp
and
add
inc
sub
pusha
mov
inc
jbe
shl
pusha
mov
dec
and
mov
mov
ss
fs
add
sub
jns
jl
push
and
push
adc
cld
lock
(bad)
and
adc
arpl
xchg
hlt
lods
mov
pop
adc
and
mov
dec
cmp
js
addr16
push
retf
sbb
clc
push
mov
cmc
repz
popf
jmp
inc
cmp
cmp
add
sub
scas
xchg
cmc
adc
or
pop
fist
mov
sub
mov
sbb
sbb
shr
jl
inc
lock
jno
sahf
cmp
mov
xchg
cmp
xor
mov
xchg
xchg
jmp
sbb
jae
dec
inc
push
ret
and
adc
cmp
loopne
in
data16
push
lahf
jne
neg
in
imul
rcl
inc
xor
imul
mov
test
iret
xchg
inc
movs
add
aad
(bad)
int
push
adc
xchg
test
inc
xor
test
dec
test
jle
int
inc
inc
mov
add
jb
xchg
and
dec
jmp
rol
xor
clc
or
sub
loop
rcl
or
adc
cmp
jae
or
inc
or
jmp
loop
or
test
inc
jo
ror
xor
mov
pop
icebp
call
add
lds
xor
not
sub
and
pop
in
mov
popf
sub
sub
jb
sbb
add
pop
enter
add
sbb
or
pop
enter
enter
or
xchg
sbb
pop
push
ltr
movs
in
adc
mov
frstor
inc
jnp
push
xchg
jecxz
add
jbe
xchg
jmp
ror
dec
aam
inc
aas
pop
or
sub
push
cmp
cmps
jns
aam
cmp
mov
mov
sti
xchg
addr16
xchg
aam
cli
push
push
push
(bad)
push
and
and
out
in
pop
rol
mov
jmp
mov
int3
adc
or
mov
je
lods
xchg
pop
or
dec
shr
rcr
push
sbb
shr
inc
adc
xchg
fmul
out
mov
pop
test
sbb
inc
sbb
pop
fdivr
stc
jb
mov
jnp
shr
adc
jmp
or
xor
push
adc
dec
xchg
inc
jmp
mov
cld
adc
retf
outs
jge
or
pop
jmp
jns
sbb
and
jl
repnz
add
or
add
ficomp
lea
arpl
int
dec
adc
push
loop
pushf
xadd
rcl
(bad)
xor
lods
arpl
push
ret
dec
or
addr16
add
mov
adc
add
xor
sar
mov
push
test
adc
movs
not
(bad)
cdq
mov
add
cmps
fs
jmp
mov
adc
add
dec
pushf
or
jbe
js
ja
mov
pusha
and
outs
mov
repz
and
test
xor
fstp
xchg
(bad)
mov
(bad)
or
or
scas
or
adc
xor
(bad)
loop
xor
sbb
jae
mov
add
dec
mov
leave
shl
push
aas
mov
xor
sbb
clc
adc
ret
and
add
scas
rol
fld
pop
mov
sahf
mov
fisubr
rcr
push
(bad)
clc
repz
in
cmp
pusha
iret
out
or
ret
shl
ss
mov
stc
loopne
xor
cs
popa
loop
jmp
mov
xlat
jae
cmps
inc
cs
iret
sti
jae
dec
push
fs
jnp
adc
mov
cdq
sar
sbb
enter
pop
shl
sub
sbb
and
mov
jg
xor
xlat
mov
lahf
and
xlat
add
xchg
add
pop
imul
dec
xor
das
cmp
scas
xchg
ror
outs
jae
dec
jae
add
inc
mul
shl
movs
rcl
dec
clc
movs
and
lea
rcr
pop
call
clts
imul
jg
(bad)
dec
imul
add
fcomp
adc
adc
scas
and
inc
outs
jmp
ror
rcr
repz
inc
inc
dec
leave
sar
xchg
and
pop
and
and
out
push
stc
cmp
and
cmp
add
jne
jecxz
jmp
aad
adc
adc
jl
out
inc
and
jmp
sub
jle
add
add
add
jg
aam
neg
cli
jne
dec
or
jg
imul
lea
or
or
sbb
or
fdivr
aas
pop
repz
arpl
mov
pop
add
jb
push
and
rcr
inc
movs
push
(bad)
add
sbb
dec
repz
push
dec
sbb
adc
mov
add
shl
sbb
mov
lahf
sub
sbb
cmp
push
pop
push
dec
adc
or
inc
push
lods
je
xchg
lods
pusha
xor
cmp
retf
ins
sub
in
sbb
test
push
fidiv
sub
rol
leave
ja
inc
dec
inc
rcr
dec
add
gs
imul
aas
sbb
repnz
clc
or
mov
push
mov
movs
inc
inc
mov
fs
je
jge
dec
jecxz
sub
inc
lds
sbb
movs
adc
dec
adc
imul
bound
inc
jo
cld
repnz
inc
movs
inc
je
icebp
adc
jbe
xchg
in
cmp
cwde
jmp
lock
cdq
sti
imul
rcr
mov
ret
sbb
sbb
or
je
and
ret
addr16
daa
adc
(bad)
adc
jns
sub
sbb
cld
mov
mov
mov
sub
and
sbb
jnp
push
dec
sbb
mov
dec
jno
aas
add
sbb
(bad)
mov
pop
inc
xchg
adc
nop
jmp
clc
xor
rcr
stos
jae
repnz
pop
test
inc
and
movq
les
inc
cmp
xor
lods
sub
dec
dec
adc
add
fldenv
jl
or
mov
cmps
imul
adc
imul
add
cmc
push
adc
sbb
aad
es
enter
add
test
cmps
or
adc
jmp
xor
outs
pop
mov
push
push
jnp
and
inc
cmovnp
xchg
clc
sbb
adc
cmp
pop
adc
adc
dec
pop
adc
adc
adc
or
dec
movs
rcr
(bad)
pop
push
adc
mov
push
and
lea
pop
iret
add
adc
adc
jge
js
jne
push
je
int3
push
cmp
imul
loopne
cmp
jb
push
dec
xchg
shl
sbb
and
mov
add
jne
mov
or
sbb
add
or
mov
xor
sbb
pop
lea
cld
pop
dec
sbb
xor
cmp
push
or
fiadd
dec
cmp
push
push
cmps
add
adc
xchg
pop
int3
ins
cli
sub
or
add
xlat
test
mov
mov
add
jecxz
sbb
jge
cmp
push
rol
rol
inc
pop
xchg
add
aam
mov
fs
inc
or
jno
imul
rcl
jbe
cmp
mov
ins
add
pusha
repz
int
dec
adc
xor
(bad)
jle
loope
add
inc
sbb
mov
adc
mov
xor
or
cld
sti
cld
mov
mov
inc
lds
mov
pop
or
jge
add
add
pop
bound
mov
sbb
aas
or
movs
sbb
enter
pop
pop
loopne
shr
push
mov
test
add
or
sbb
adc
adc
and
fidiv
aam
cld
inc
(bad)
sub
xor
ins
inc
pop
adc
xor
xor
inc
inc
cmp
xor
fwait
mov
loop
or
mov
or
jl
jo
hlt
xor
push
sub
dec
pushf
arpl
pop
or
pop
je
or
or
push
mov
dec
ret
ds
adc
and
push
inc
sbb
sahf
lahf
ret
mov
and
inc
push
outs
and
mov
(bad)
into
rcr
add
cmp
inc
data16
pop
adc
add
adc
mov
in
icebp
adc
mov
jmp
mov
ins
mov
jne
arpl
dec
adc
sahf
jns
imul
sub
push
in
dec
add
jb
imul
arpl
xor
iret
sub
adc
dec
inc
sbb
dec
ins
ins
stc
sti
and
push
sbb
clc
fadd
mov
sbb
aad
mov
push
dec
inc
in
daa
push
adc
xchg
in
push
pusha
ret
xor
sub
adc
cmp
mov
call
test
fadd
sti
loope
addr16
dec
daa
aas
mov
or
js
cmp
add
call
push
and
jb
call
and
test
sbb
mov
sbb
sbb
fadd
dec
imul
xor
in
push
add
xor
pop
pushf
xor
adc
or
enter
daa
xor
out
push
outs
add
sar
mov
popf
test
pop
stos
jns
imul
imul
inc
fs
stos
inc
cmc
loopne
mov
out
xchg
shr
lods
sbb
jno
add
pop
xchg
stos
fmul
enter
and
stos
adc
pop
fcomp
in
ror
xor
fsub
nop
inc
es
rol
lock
stos
(bad)
fwait
inc
cs
addr16
and
mov
clc
pop
sub
push
or
or
cmc
fwait
into
sbb
sbb
mov
not
or
jge
in
in
and
jno
ror
inc
adc
dec
shl
imul
imul
add
jne
xchg
pop
scas
or
loope
inc
setle
(bad)
xchg
mov
retf
loopne
clc
push
jg
arpl
dec
jp
out
inc
movs
lods
into
cmp
dec
xchg
scas
jns
fadd
mov
xor
fimul
add
ja
lea
addr16
mov
jne
or
call
dec
inc
add
sbb
pushf
cmp
add
push
or
rol
js
mov
ins
xor
xlat
pushf
lds
sub
or
ret
nop
arpl
pop
add
dec
add
aas
mov
sti
call
mov
je
lods
dec
dec
in
sub
addr16
(bad)
pop
pop
adc
jecxz
pop
inc
adc
or
and
jbe
pop
cmp
xor
jp
sub
sbb
push
enter
repnz
outs
js
cs
(bad)
js
je
pushf
ret
mov
mov
test
inc
scas
inc
xchg
sbb
sbb
xchg
push
pop
inc
scas
inc
scas
or
nop
pop
and
jmp
push
lock
inc
fmul
cmp
in
lock
fild
imul
sbb
(bad)
sbb
movs
add
sbb
push
or
mov
sbb
adc
dec
das
mov
je
or
out
out
je
dec
je
pop
je
addr16
enter
jno
adc
add
xchg
sahf
sub
sbb
loopne
js
cdq
adc
push
and
rcl
dec
inc
inc
leave
adc
cmp
adc
xor
sbb
mov
mov
movs
int3
add
add
jecxz
jns
adc
gs
add
pop
inc
xor
cld
es
rcl
enter
les
sbb
sub
xor
mov
pop
pop
popa
ins
adc
push
lahf
xchg
mov
pop
retf
add
rcl
inc
add
loope
xchg
push
adc
or
or
or
or
test
in
sub
mov
mov
xchg
mov
mov
repz
xchg
aaa
rol
xchg
mov
jl
and
je
pushf
sub
js
pusha
ss
push
pop
pop
xor
ror
inc
cmp
inc
pusha
ror
js
aas
pushf
test
jge
mov
sub
push
inc
cmp
jbe
daa
push
sub
add
pop
pop
pop
int3
mov
sub
xchg
sar
arpl
cmp
add
add
jno
rcl
aas
retf
push
js
xchg
movs
jb
mov
pop
inc
aam
push
push
addr16
push
je
mov
inc
adc
cmp
mov
xchg
cmp
push
call
imul
mov
or
mov
test
push
push
clc
inc
add
enter
in
lods
xor
(bad)
jns
in
jb
pop
rcr
push
mov
add
push
jnp
dec
loopne
stos
in
fs
fidiv
inc
push
cs
out
or
jb
jp
out
dec
xchg
(bad)
fnsave
sub
jle
call
jne
xor
out
jo
cmc
call
sbb
dec
(bad)
jmp
pusha
xchg
push
fs
jmp
and
lock
add
add
and
mov
jmp
je
bound
jle
inc
dec
je
mov
push
lahf
scas
or
cmp
ret
sbb
sub
sub
cmp
das
push
sbb
sbb
dec
pop
lock
pop
test
jne
xor
hlt
iret
sub
adc
mov
xchg
add
lea
push
push
pop
push
xchg
mov
pop
lock
cmp
xor
fnsave
dec
lock
xor
ins
pop
pop
aas
or
jns
dec
push
lea
sub
sbb
adc
lock
stos
add
cmp
mov
mov
sar
data16
xchg
mov
scas
test
inc
lds
add
stos
mov
movs
jmp
push
arpl
stos
fadd
inc
(bad)
call
sbb
pop
leave
ins
clc
aam
mov
andps
sar
and
bt
push
pop
jmp
gs
inc
push
cli
add
stc
cmp
sbb
imul
xor
mov
push
scas
emms
dec
mov
loop
inc
js
aad
dec
add
lods
or
jo
mov
push
push
push
dec
xlat
mov
xchg
fbstp
ja
lds
dec
stc
inc
or
and
xchg
inc
cmp
adc
addr16
mov
es
call
cmp
repz
dec
add
idiv
xchg
je
push
cmp
cmps
sbb
inc
aas
add
daa
add
out
jge
or
cdq
dec
(bad)
inc
push
jae
cmovs
ins
ret
mov
ret
sbb
mov
adc
mov
hlt
xor
sbb
add
daa
out
clc
add
xor
pop
jae
add
hlt
cmp
cmp
jbe
daa
mov
mov
add
je
push
add
daa
xchg
jbe
mov
xchg
xor
pop
sbb
sub
add
mov
sar
ja
adc
(bad)
cmc
xlat
sti
sbb
or
ss
push
xchg
push
sbb
je
mov
pop
popf
inc
retf
pop
inc
jo
push
popa
mov
ins
cmp
and
loopne
sbb
lock
lea
repz
into
mov
sub
pusha
enter
aaa
mov
mov
lods
and
stos
pop
adc
mov
shl
test
lock
and
add
pop
or
jbe
add
jbe
pop
sub
inc
mov
inc
in
in
aam
jo
add
dec
pop
or
adc
ss
jg
pop
cdq
sub
jno
dec
mov
paddusw
or
jmp
movs
jmp
retf
out
jle
psubsb
inc
push
nop
call
ret
xchg
jecxz
movs
or
pop
fs
lea
xor
jp
jmp
inc
sub
jne
add
sub
push
mov
adc
fld
or
dec
push
mov
mov
ins
or
xor
and
jbe
add
push
in
movzx
mov
sbb
or
push
ins
popa
push
pop
dec
sbb
add
test
scas
xchg
popf
call
sbb
adc
outs
add
push
(bad)
push
loope
add
mov
add
movs
in
sub
or
add
sbb
jl
inc
fcomp
arpl
mov
imul
xchg
fcomp
xor
xor
dec
mov
test
adc
xchg
jge
push
xor
ret
je
dec
ins
adc
sar
and
outs
or
or
inc
outs
xchg
or
mov
adc
jecxz
cmp
xchg
add
mov
cmc
xor
add
pusha
dec
je
ds
inc
clc
pusha
cmp
jns
xchg
adc
jl
add
movs
and
ins
test
adc
sub
push
lahf
pop
or
bnd
ins
jmp
sar
push
test
or
shl
dec
add
(bad)
jmp
mov
(bad)
mov
leave
bnd
add
add
das
cwde
in
sub
or
pop
dec
pop
mov
mov
ss
add
adc
add
mov
adc
sub
add
in
enter
in
fs
es
dec
mov
dec
jl
or
pop
shr
or
dec
fs
xchg
sti
and
nop
out
(bad)
sahf
arpl
mov
(bad)
dec
dec
or
int
je
mov
inc
mov
dec
daa
scas
mov
push
movzx
fcomp
into
out
lods
adc
loop
inc
mov
add
pop
cmp
mov
mov
das
jns
xor
pop
add
sub
call
fs
xchg
xor
mov
push
js
adc
xchg
sub
ja
repnz
loopne
cmp
out
daa
add
push
daa
test
je
sbb
jne
mov
cmp
nop
fnstsw
nop
js
scas
add
cmp
ja
add
js
push
or
test
int3
retf
repz
mov
scas
push
sbb
inc
fs
out
in
or
xchg
xchg
inc
es
in
in
push
or
and
inc
xchg
idiv
bound
sub
lea
and
js
cmp
mov
push
xchg
xchg
push
mov
js
js
ds
inc
repnz
shl
or
loopne
sbb
fcomp
fst
into
add
add
(bad)
adc
adc
mov
adc
jmp
xchg
dec
and
jmp
rol
repnz
add
in
fdiv
adc
cmp
cli
dec
mov
lds
mov
ja
push
inc
cmps
lds
jo
les
jmp
(bad)
cmp
pop
cmc
mov
push
inc
pop
jmp
sbb
nop
dec
les
xchg
inc
xchg
rol
cmp
cmp
or
dec
call
push
call
jmp
add
aam
jb
cmp
sub
in
adc
jmp
enter
cmps
rcl
pop
and
add
cmps
pop
cmp
inc
pop
jg
xchg
xchg
out
fld
ja
jmp
push
adc
(bad)
add
adc
jmp
and
mov
pop
add
cmp
daa
cmp
sbb
loopne
shl
rcr
push
sbb
sub
jb
das
maskmovq
add
pop
lea
test
inc
pushf
seto
jo
scas
in
daa
pop
dec
out
scas
in
and
cmp
mov
mov
push
ret
sub
xlat
je
and
push
xor
out
fld
sub
aam
out
add
xchg
imul
stos
jo
shr
inc
push
mov
data16
mov
jl
(bad)
ins
test
call
mov
inc
push
loopne
mov
dec
outs
inc
outs
and
in
cld
leave
cmp
ret
popa
dec
je
or
ins
(bad)
call
push
mov
nop
add
(bad)
out
dec
cmps
nop
out
out
mov
hlt
or
or
je
(bad)
retf
xor
(bad)
inc
add
or
jno
or
iret
fcomp
fdiv
push
mov
jns
xchg
xchg
test
aam
dec
and
rcr
pop
movs
fwait
lahf
sbb
fmul
mov
out
cmp
dec
mov
lock
push
fcom
mov
cmps
nop
sub
or
dec
sti
mov
mov
in
hlt
stc
push
jmp
pop
dec
inc
arpl
hlt
add
add
adc
jne
icebp
or
or
cmc
inc
mov
pop
add
push
mov
cmc
dec
xchg
mov
sar
lods
jne
popa
mov
cmp
or
shl
ss
or
add
mov
ret
lea
sahf
cmc
leave
inc
inc
mov
fstp
sub
adc
xor
out
pop
call
mov
int3
push
in
into
shl
jmp
shl
adc
leave
mov
and
pop
and
mov
pop
xor
mov
add
inc
mov
adc
retf
movs
inc
add
add
movs
test
adc
les
enter
clts
or
repz
stc
repz
out
xchg
inc
mov
call
xchg
out
mov
add
mov
push
shl
mov
cli
mov
jmp
shr
enter
cli
sbb
(bad)
push
sub
pushf
pusha
push
mov
jae
sub
dec
mov
and
sub
ss
loopne
xchg
cmp
dec
leave
push
adc
add
or
in
pusha
enter
call
fisttp
xor
sbb
mov
sub
inc
enter
jmp
xchg
enter
lock
aad
cmp
rcr
aad
dec
(bad)
sbb
neg
mov
sub
dec
jmp
sbb
mov
mov
cmp
sub
lods
or
fucom
lds
call
mov
fld
add
fmul
js
loop
or
shl
in
mov
sub
and
inc
sbb
pop
dec
inc
rcr
cs
sbb
loopne
sub
stos
sub
add
mov
enter
sub
fbld
dec
mov
add
jb
mov
pop
test
scas
xchg
xchg
sub
loopne
jbe
xchg
mov
jns
mov
jle
enter
pop
add
pop
or
jbe
jmp
shr
inc
mov
daa
ja
imul
inc
dec
inc
jne
jp
mov
cmp
sub
jbe
jle
stos
fcom
cmp
cld
cmps
(bad)
leave
mov
sub
add
outs
jmp
scas
mov
ror
mov
sub
je
test
sub
mov
mov
add
nop
jae
xor
mov
jb
shr
in
jmp
dec
movs
mov
adc
imul
and
or
arpl
loop
inc
jne
mov
sub
or
push
inc
in
(bad)
test
inc
add
or
jecxz
mov
int
xchg
aad
test
mov
shl
shl
mov
push
out
fst
mov
inc
push
xchg
push
mov
or
mov
shl
imul
movs
inc
cmp
sbb
aam
add
leave
adc
scas
or
cmp
push
cmp
and
cmp
add
inc
inc
popf
ins
aaa
aam
cmp
push
pop
push
dec
out
mov
rcr
add
pop
or
cwde
sbb
sub
push
xor
pusha
and
sub
sub
jb
mov
imul
ffreep
and
jno
test
out
cwde
cld
or
jmp
mov
stc
add
inc
xor
push
cmp
(bad)
or
call
jl
jle
loop
xor
push
int3
clc
xor
js
jo
sahf
and
and
xor
sub
inc
addr16
mov
outs
pop
shl
sbb
mov
sub
or
cmp
leave
cmc
adc
add
add
sbb
pop
es
jbe
push
add
dec
sbb
rcr
pusha
iret
jo
je
imul
shr
sbb
inc
add
mov
bts
adc
sub
mov
add
push
or
stc
inc
push
enter
pop
scas
arpl
or
mov
jp
cmp
clc
mov
call
clc
xor
mov
fisub
sbb
repz
xor
mov
mov
ffreep
sbb
sub
jb
sub
clc
push
(bad)
icebp
jo
das
outs
call
in
sbb
mov
jmp
xor
or
fwait
jbe
mov
sub
xor
aad
jmp
call
or
test
or
dec
ror
js
mov
inc
xor
cmp
loopne
and
dec
xor
and
data16
into
pop
mov
push
mov
(bad)
mov
jo
fist
stos
popf
(bad)
sbb
adc
clc
ret
dec
repnz
push
cmp
inc
push
clc
mov
add
out
adc
push
sub
adc
add
adc
jp
push
out
aam
out
in
mov
adc
pushf
mov
inc
fdivr
call
push
ja
shr
jmp
ror
inc
push
mov
cmps
mov
pop
xor
add
or
jae
or
mov
jecxz
stc
aaa
je
push
ret
fcmovbe
ins
jae
xchg
test
push
or
je
and
mov
jmp
mov
icebp
lds
jge
pop
mov
imul
mov
sar
mov
das
xor
mov
push
cwde
add
neg
sbb
push
or
jne
(bad)
rcr
dec
(bad)
ins
xchg
jae
xchg
inc
adc
shl
push
pop
call
jge
ret
or
and
push
xchg
in
jp
dec
dec
inc
xor
scas
lock
xor
sahf
cmc
rol
dec
aam
bswap
xor
jo
pop
push
in
sbb
not
mov
jmp
sbb
imul
fld
cwde
sbb
jmp
es
cmp
rcl
and
outs
sbb
xchg
push
stos
dec
cmp
sbb
in
inc
xor
xor
xor
add
call
(bad)
xchg
outs
add
shr
ss
sub
fcomip
dec
sub
aam
push
aam
cmp
mov
add
sar
cmc
and
repz
scas
and
mov
sbb
cs
add
dec
mov
(bad)
dec
xchg
addr16
ret
and
mov
rol
sbb
mov
nop
scas
xchg
pop
and
ret
xor
sbb
ret
push
xchg
jmp
pop
aas
sbb
pop
cmp
push
adc
arpl
dec
inc
or
(bad)
out
je
adc
(bad)
sbb
loopne
lahf
add
rcl
sbb
loopne
mov
rol
ins
pop
cmps
push
lods
dec
push
push
sbb
or
and
mov
push
jns
or
adc
fs
adc
shl
lods
test
stos
jns
loopne
or
add
pop
sub
inc
dec
sub
add
lods
inc
adc
imul
push
(bad)
or
sbb
mov
mov
icebp
add
lock
mov
and
mov
adc
push
adc
jge
dec
mul
add
sub
jbe
pop
jo
add
je
test
sti
push
or
inc
cmp
push
ins
lods
sub
fwait
(bad)
xchg
dec
inc
push
inc
int3
fdivr
stos
pop
xchg
test
lock
xchg
sub
fst
test
loop
les
addr16
jo
jnp
sub
add
or
ja
jmp
pop
ds
icebp
jbe
mov
push
mov
inc
ja
shl
sbb
lahf
das
inc
cmp
and
movs
and
dec
sar
or
das
mov
or
or
sub
ja
xchg
jbe
adc
or
adc
pop
in
pop
imul
adc
das
loop
pop
int3
xor
int3
mov
sub
xor
push
push
push
sub
pop
add
adc
or
dec
pop
dec
sbb
sbb
push
and
je
add
add
add
dec
mov
aad
inc
or
lock
add
adc
adc
pusha
lahf
cmp
push
ror
sub
mov
sbb
xor
cli
or
cmp
add
sub
xor
sbb
ret
test
sub
cmovno
sbb
(bad)
mov
lods
pop
inc
push
aas
push
mov
xchg
fwait
adc
retf
add
add
jnp
pop
cs
shl
xor
dec
(bad)
or
cwde
icebp
cmp
xchg
mov
lahf
mov
dec
fsub
ror
inc
mov
fadd
add
cmp
cli
cmp
(bad)
nop
adc
lock
nop
mov
call
mov
loope
and
push
cmp
mov
jmp
push
loope
inc
ins
(bad)
setle
jmp
mov
loopne
sbb
pop
adc
add
aam
sbb
in
jecxz
shr
adc
pop
lds
jmp
and
cli
or
dec
cmp
cs
or
adc
add
ds
bswap
mov
jmp
adc
test
adc
pushf
jne
add
fcom
call
inc
xor
shr
add
mov
cmp
mov
je
mov
cmp
ror
xor
jno
lods
es
push
shl
adc
cdq
adc
sub
or
sbb
lock
cld
pop
add
inc
sahf
loopne
jl
cmp
sbb
rol
idiv
rol
lods
and
int3
mov
add
retf
retf
dec
inc
jmp
sti
pcmpeqw
nop
push
out
nop
sbb
scas
dec
int
xchg
add
add
cmps
fwait
or
stc
add
cmp
sub
dec
pop
dec
dec
leave
stos
arpl
in
add
lds
and
fs
std
rcl
and
mov
adc
dec
push
sbb
add
inc
mov
iret
push
pop
inc
dec
pop
imul
push
jo
sbb
ret
dec
push
idiv
cmps
xor
pop
push
retf
mov
xchg
or
xchg
push
dec
movq
jmp
and
adc
inc
dec
dec
std
jnp
jl
push
pop
dec
lock
inc
push
or
ins
push
push
loope
jo
add
ss
imul
pop
fs
ror
dec
add
pusha
mov
aaa
lock
sbb
shl
dec
and
dec
pop
push
and
fcomi
ret
in
add
jo
jb
adc
cdq
test
jle
in
test
cmc
cwde
push
mov
in
shl
cmp
push
dec
push
fimul
xchg
ds
jne
sub
into
add
xor
and
mov
mov
aaa
dec
jne
in
mov
add
mov
sar
outs
jns
rol
int3
push
add
or
add
jns
imul
adc
pushf
leave
mov
lahf
pop
ja
xor
loop
in
dec
dec
nop
fidiv
in
pusha
adc
or
sar
xor
fs
pop
xor
fwait
mov
scas
inc
dec
fs
jbe
push
loopne
dec
cmp
jns
cmp
xchg
jmp
pop
jae
gs
inc
jo
push
or
jmp
test
sbb
push
dec
dec
push
and
in
adc
mov
dec
mul
dec
push
(bad)
ret
inc
loope
ins
cmp
push
dec
push
sub
xlat
leave
aad
jp
push
push
lds
push
loope
pop
nop
(bad)
call
xchg
xchg
imul
mov
lock
cdq
pop
fs
fadd
call
add
arpl
pop
jb
popa
loop
sbb
lea
rcl
push
xor
mov
mov
popf
fcomp
pushf
jmp
sub
daa
loopne
movs
test
push
rcl
xor
jg
pop
jg
jo
fwait
in
push
cmp
(bad)
and
lahf
or
inc
or
int3
sub
(bad)
lock
sahf
cmp
test
clc
cmp
jne
push
sub
mov
inc
rol
jns
add
push
or
add
adc
hlt
inc
inc
bound
mov
adc
fcom
clc
push
dec
stc
loop
mov
nop
es
ret
loopne
add
aam
shr
add
mov
scas
or
push
cmc
sub
push
and
adc
pop
adc
stos
jb
dec
stc
pop
retf
add
and
push
lods
and
int
gs
sbb
inc
mov
adc
sub
sti
mov
or
int3
add
mov
sub
sbb
arpl
inc
sub
or
inc
je
stos
arpl
jb
mov
nop
mov
adc
or
dec
mov
add
xchg
jmp
rol
adc
dec
dec
dec
iret
ss
cmp
push
dec
dec
loop
xchg
inc
aas
icebp
sahf
shl
imul
dec
jo
enter
jno
enter
push
push
test
add
cmp
push
push
inc
push
retf
jle
pusha
or
push
inc
pop
dec
adc
hlt
push
cmp
adc
dec
push
add
sub
lods
in
jmp
jecxz
jp
mov
add
or
rcr
xor
std
test
leave
push
and
add
inc
mov
mov
sub
cmp
jge
jne
sub
inc
cmp
mov
mov
rol
cmp
dec
and
dec
rol
inc
push
and
jbe
mov
sub
fwait
mov
daa
inc
sub
rol
inc
push
enter
inc
mov
inc
jbe
sar
xchg
jmp
(bad)
cld
inc
push
pop
mov
lods
mov
sahf
loopne
adc
pop
inc
repnz
mov
xor
mov
mov
je
out
enter
jne
mov
jne
retf
jmp
out
or
push
cmp
imul
test
shl
imul
loop
and
mov
inc
jb
xchg
push
or
dec
mov
les
adc
dec
les
sbb
shl
xor
int3
lock
lods
pop
mov
ins
xchg
push
mov
add
adc
mov
cmp
xchg
cmp
aam
(bad)
sahf
adc
mov
sub
sub
push
push
fst
cmp
sbb
(bad)
fisub
loopne
add
or
pop
xlat
xlat
jge
jns
inc
mov
sbb
jmp
push
sbb
or
adc
inc
icebp
cmp
daa
xchg
adc
inc
loop
std
mov
pop
ret
int
xchg
call
sub
clc
and
js
stc
jno
cmp
cmp
inc
sub
imul
add
jae
push
sahf
test
cmp
mov
outs
push
dec
daa
inc
push
int3
ja
in
inc
addr16
in
add
in
fld
sar
in
sbb
rcr
cmps
pop
retf
or
pop
cmp
and
imul
jmp
les
in
inc
je
ins
test
add
adc
adc
mov
adc
push
je
dec
or
fisub
push
out
add
inc
arpl
les
pop
cdq
or
xor
inc
cmps
push
movs
push
jo
jge
jns
jne
push
ret
jmp
adc
sub
ins
mov
inc
fisttp
add
in
adc
cld
adc
adc
mov
adc
adc
pusha
sbb
out
or
jle
ret
sbb
sbb
jne
ins
ss
data16
fiadd
daa
mov
sub
sub
fs
push
repz
out
sub
inc
sbb
arpl
push
into
xchg
fist
pop
cmp
lods
sbb
leave
js
xchg
push
retf
lds
pop
inc
xor
je
xor
add
ret
mov
inc
and
jmp
pop
add
pop
xchg
add
or
lds
lods
xchg
xchg
push
jl
emms
or
mov
scas
ds
fsubr
in
js
jge
mov
push
adc
call
sub
jecxz
cs
mov
push
pop
sub
add
loopne
jmp
daa
dec
sti
inc
sbb
jo
jo
fnsave
call
jb
ror
test
or
clc
aad
dec
retf
adc
cmp
fist
add
fld
adc
dec
fcom
or
inc
in
adc
or
icebp
jno
add
test
cmp
inc
jae
enter
leave
imul
push
cmp
enter
call
or
mov
loop
repz
push
sub
jns
(bad)
fild
mov
int
ret
pop
icebp
push
jle
jns
je
mov
add
ins
add
xchg
jae
lods
inc
push
test
cmp
inc
dec
xchg
aad
pop
call
movs
push
xchg
mov
dec
shl
xchg
and
jns
mov
sbb
arpl
icebp
cmp
rcl
daa
adc
or
jmp
push
lds
loopne
je
adc
sahf
pusha
sbb
shr
test
mov
enter
ficomp
scas
sub
add
xor
or
aam
jmp
iret
repz
add
adc
or
push
fxch
stc
mov
add
lods
std
movs
test
ins
dec
shl
inc
jbe
inc
inc
mov
fcom
je
dec
les
cmc
xor
jne
and
stc
ins
mov
jne
push
sub
mov
and
mov
push
fstp
sbb
inc
pusha
enter
test
pop
bound
sub
popa
mov
(bad)
dec
push
jle
and
dec
aaa
push
test
in
sbb
fstp
inc
loop
sub
fiadd
sub
in
movs
scas
inc
fisub
into
mov
sub
addr16
mov
adc
jnp
jmp
pop
fisttp
or
movs
shl
dec
movs
push
mov
ins
outs
shr
or
dec
movs
aas
ror
xor
je
inc
mov
adc
fstp
mov
daa
xor
jecxz
xor
or
fsubr
imul
dec
xchg
xchg
fld
cmp
scas
pop
adc
mov
mov
sub
mov
cmp
pop
data16
jae
inc
sbb
cs
mov
mov
in
xor
test
out
push
pushf
jae
les
sbb
(bad)
xor
xchg
add
jbe
sbb
(bad)
or
out
sub
outs
and
mov
push
test
inc
xchg
or
pop
in
adc
xchg
nop
nop
add
test
call
pop
cs
mov
mov
sub
push
mov
ret
lods
je
xor
lea
movs
mov
sub
cmps
add
sub
inc
jmp
int3
fild
shl
adc
sbb
or
inc
dec
sahf
cmp
jl
xor
in
jnp
add
jg
mov
(bad)
mov
pop
mov
adc
inc
jge
(bad)
cld
cdq
call
inc
fsub
sbb
jp
rol
cmp
jne
fild
push
pop
ror
mov
addr16
mov
add
pop
and
mov
icebp
xor
dec
mov
aad
test
or
jno
repnz
cld
push
adc
jae
or
lods
cmps
stc
and
mov
pusha
jbe
addr16
mov
mov
mov
or
cmp
jl
push
jne
in
outs
mov
mov
pop
and
pop
mov
or
mov
das
sub
clc
test
inc
shl
adc
shr
pop
popa
stos
push
int
jmp
sub
retf
inc
jne
add
dec
shl
clc
sahf
adc
jmp
adc
inc
test
dec
sbb
push
xchg
les
pop
mov
add
or
sub
or
sbb
inc
bound
loopne
enter
loopne
loopne
jg
add
fist
shl
sbb
xchg
add
fst
mov
add
idiv
jnp
data16
div
out
std
scas
in
nop
or
mov
xor
mov
jle
out
sbb
inc
or
loop
jmp
aam
xchg
aam
fst
or
lods
xchg
and
in
jl
pop
mov
hlt
push
mov
or
mov
xor
xchg
push
inc
scas
rcr
xchg
push
push
rcr
and
jns
nop
add
push
gs
sbb
pop
ret
lods
xchg
sar
add
add
or
pop
xor
ror
dec
cmp
sbb
ins
and
jmp
fwait
jmp
cmp
or
add
mov
sub
mov
xor
imul
cmp
cdq
arpl
sub
jmp
data16
call
jmp
rcr
xchg
cmp
xlat
sub
stos
and
ins
adc
lock
icebp
inc
enter
nop
ja
mov
and
cli
fmul
aaa
lea
inc
sub
shr
push
jecxz
mov
mov
push
clc
aaa
mov
hlt
and
sbb
adc
add
dec
out
(bad)
loop
and
sar
daa
sbb
pop
int3
sti
or
pop
ret
push
and
inc
test
shl
arpl
or
popa
inc
or
cmp
jp
test
xlat
add
mov
or
pop
shl
in
daa
push
mov
jl
popf
lods
xchg
ins
scas
push
adc
loopne
nop
mov
push
es
rcl
adc
sbb
clc
push
adc
sub
push
movs
add
ins
in
aad
lock
(bad)
jecxz
or
call
xchg
mov
add
inc
loop
cmp
mov
fild
adc
sub
cmp
add
fnsave
cmp
xchg
loopne
imul
adc
aam
dec
test
add
adc
pop
js
arpl
lods
sub
dec
inc
dec
pop
or
pop
das
inc
in
(bad)
sub
jl
sbb
lahf
fucomp
adc
add
fild
jnp
xor
or
sub
shr
inc
dec
aad
pop
retf
push
jle
popf
call
mov
push
push
push
and
clc
pop
call
inc
pop
cmp
ins
gs
lea
inc
sbb
je
mov
sbb
leave
dec
jo
xchg
dec
mov
adc
clc
pusha
repnz
call
sbb
imul
mov
mov
sbb
mov
movs
and
jno
imul
sar
pushf
jecxz
mov
mov
xchg
test
je
xchg
lods
aas
add
(bad)
ss
xor
bound
in
dec
jnp
mov
dec
add
pop
or
call
mov
cmp
sahf
add
js
mov
push
push
pop
dec
add
inc
sbb
(bad)
xor
aam
dec
rol
cmp
adc
mov
int
add
and
cdq
adc
loopne
push
and
inc
retf
in
and
(bad)
adc
sbb
js
pop
cmp
in
sbb
cmp
jg
aas
rcl
xor
int3
rol
sbb
mov
cmp
pop
pop
adc
es
dec
xor
add
mov
inc
repnz
pop
pop
add
or
adc
daa
scas
mov
pushf
jle
mov
mov
jle
lock
test
in
hlt
nop
jl
fdiv
jmp
imul
shl
or
cmp
or
xor
sar
push
dec
jo
dec
stc
mov
into
dec
pop
daa
xchg
mov
inc
add
inc
out
pop
nop
pop
hlt
int
inc
mov
jnp
mov
loopne
loope
sbb
and
push
jmp
sbb
icebp
or
(bad)
jmp
jnp
xlat
in
punpckhwd
mov
mov
in
fdivr
rcl
xchg
pop
mov
in
fcomp
in
pop
sub
xchg
mov
mov
add
int3
int3
int3
or
in
rol
jo
adc
add
mov
add
and
sbb
push
mov
add
mov
jl
aaa
add
sbb
jmp
sbb
adc
(bad)
ret
je
xchg
sbb
mov
push
ds
dec
mov
push
mov
cmp
sar
mov
add
add
mov
(bad)
pop
mov
push
leave
jae
les
lods
mov
leave
inc
enter
pop
cmps
sbb
test
movs
add
movs
movs
mov
scas
adc
test
out
push
lods
dec
push
pop
sub
lock
aaa
js
lea
pop
shr
sub
sha1nexte
div
cli
out
imul
in
or
jl
add
jmp
sbb
adc
cld
call
adc
out
mov
pop
or
add
icebp
clc
lds
sub
ins
aad
xlat
sub
cmp
or
sahf
ss
outs
pop
sar
arpl
retf
xchg
movs
arpl
pop
retf
std
xchg
xchg
es
mov
lea
(bad)
(bad)
lock
in
enter
(bad)
in
in
xor
leave
add
jge
mov
std
call
dec
call
or
repnz
and
xchg
sbb
adc
inc
and
call
cmc
adc
xchg
mov
loopne
xchg
sub
fimul
call
adc
and
and
jne
loopne
in
pusha
mov
push
inc
stos
xchg
add
mov
cmp
jge
xor
sub
(bad)
cld
xchg
cmps
add
jge
adc
clc
clc
in
in
clc
cld
sbb
adc
mov
(bad)
nop
cld
lock
loopne
movs
add
or
dec
add
movs
cwde
lahf
mov
inc
out
cmps
clc
xor
xchg
cmp
jno
sub
das
loop
and
cmps
cli
retf
inc
fadd
xchg
retf
not
add
mov
lock
in
hlt
cmp
loop
stc
hlt
and
sbb
cmp
fiadd
or
dec
xchg
js
jo
(bad)
jmp
xor
sub
daa
pop
icebp
cmps
addr16
sub
sbb
xchg
ins
adc
and
sub
out
push
aam
and
clc
pop
pop
xchg
mov
fisttp
ret
test
hlt
ja
adc
xor
xchg
mov
xor
or
mov
jno
push
aas
push
sbb
push
dec
inc
cld
ins
jne
adc
movs
sub
add
jge
inc
add
and
jp
dec
nop
inc
jmp
inc
imul
gs
test
push
mov
in
adc
add
inc
add
push
rcr
call
dec
push
push
test
pushf
mov
adc
xor
nop
push
les
div
fsubr
clc
or
pusha
dec
repz
arpl
xor
mov
push
sub
xlat
test
inc
mov
cwde
jmp
push
cmp
test
or
cmp
outs
data16
mov
call
(bad)
fcomi
add
cmc
inc
aad
nop
sub
or
jno
adc
adc
nop
pop
das
or
adc
add
loopne
jns
test
add
or
and
dec
pop
push
dec
call
bound
add
sub
xchg
add
mov
rol
mov
scas
mov
and
(bad)
lock
loop
fsubr
outs
add
js
and
mov
shl
das
leave
inc
adc
rol
ret
sub
imul
adc
shl
repnz
enter
or
cmps
add
popf
ja
fidivr
xor
mov
add
inc
xor
rol
add
mov
or
add
lea
call
sar
sub
adc
add
pop
jg
sar
cmp
add
add
xchg
add
imul
mov
sbb
mov
dec
or
jnp
enter
cmp
and
sbb
mov
mov
(bad)
rol
push
loopne
aas
add
arpl
fisttp
mov
(bad)
call
mov
mov
pop
mov
popf
push
cli
or
leave
lock
jns
adc
sbb
leave
(bad)
popf
mov
sbb
test
movs
adc
mov
in
iret
mov
adc
sub
fld
or
and
shl
xor
xor
push
scas
dec
nop
push
xchg
out
add
sub
xor
and
mov
mov
ret
aad
mov
cmps
fcmovnbe
imul
pop
push
cmp
add
pushf
adc
xlat
jmp
add
xchg
(bad)
aas
cmp
add
lods
sub
adc
fcomp
dec
in
ret
or
and
xchg
mov
mov
pop
sub
sub
add
xor
nop
dec
pop
lock
push
in
dec
sub
leave
(bad)
inc
je
or
sbb
std
inc
enter
sbb
jno
arpl
push
jge
xchg
(bad)
pop
pop
adc
pop
les
add
bound
icebp
std
scas
or
mov
mov
adc
mov
mov
nop
pop
rol
xor
cld
jge
adc
fld
imul
or
push
add
xor
or
jp
or
outs
xchg
cwde
stos
xor
dec
pop
adc
cmp
or
add
test
movs
lea
or
call
and
sbb
sti
cld
xchg
int
imul
mov
sbb
sahf
push
les
xor
int3
and
mov
gs
popa
adc
mov
sbb
adc
loopne
iret
mov
pop
pop
loop
dec
add
xchg
call
or
jae
(bad)
jae
rcr
fsubr
add
mov
push
jle
adc
sub
mov
lock
jge
xor
fistp
or
hlt
lods
mov
xchg
(bad)
repz
push
and
pop
mov
or
xlat
ret
or
and
clc
mov
mov
push
cmp
test
and
pop
adc
cmp
daa
lods
jmp
or
pop
adc
imul
push
ins
dec
imul
cmp
pop
xor
adc
rcr
mov
jle
or
retf
js
test
pop
dec
sbb
aas
jge
xchg
scas
fcmovnbe
jle
inc
adc
cmp
and
mov
rol
pop
ins
mov
xchg
aaa
xchg
or
dec
add
sti
mov
mov
push
ret
inc
lds
xchg
pop
shr
pop
pop
xor
ds
and
scas
fs
leave
pop
push
ins
push
inc
call
sub
jecxz
test
repz
inc
add
das
cmp
ins
lock
inc
aam
inc
add
cmp
push
cmc
or
daa
mov
push
jae
(bad)
std
sbb
jne
dec
std
inc
jmp
mov
and
ds
mov
push
and
fimul
push
cmp
rol
mov
gs
cmp
pusha
mov
fstp
and
dec
push
push
mov
aam
xchg
cmp
pop
inc
pop
add
add
fsubr
mov
or
loope
pop
pop
add
and
pop
out
scas
stos
test
das
fbstp
sbb
repnz
in
arpl
dec
movs
fidiv
aad
rcl
out
test
xchg
push
jnp
push
in
xchg
leave
push
fadd
or
push
xor
pusha
lock
xor
push
add
inc
push
add
and
mov
push
stc
jbe
cmc
fwait
in
push
mov
adc
test
add
pop
daa
hlt
adc
retf
sar
push
into
mov
mov
mov
fwait
mov
jge
cmp
adc
call
(bad)
cmp
mov
mov
jne
push
inc
jge
jae
clc
sbb
cmp
cmp
jno
add
cmp
adc
in
xchg
cmps
test
fmul
(bad)
sbb
adc
js
(bad)
aas
xchg
aaa
gs
mov
sbb
and
sbb
in
fcom
adc
adc
or
call
jl
adc
mov
shr
and
lods
daa
xchg
cwde
movs
rol
ins
je
jg
lea
cmp
test
or
call
lods
and
jecxz
je
inc
retf
imul
push
mov
xchg
or
int3
leave
xchg
gs
cmp
mov
lahf
(bad)
fstp
imul
movs
fdiv
test
out
add
fwait
or
jnp
pop
pop
out
nop
jbe
(bad)
sub
cld
fnstcw
xchg
mov
push
arpl
dec
xchg
movs
rcr
add
mov
jle
adc
movs
inc
add
push
push
rol
add
popf
push
iret
jmp
add
cli
(bad)
jnp
add
add
add
fbstp
scas
jecxz
mov
retf
jecxz
in
in
xchg
sub
adc
mov
and
test
mov
sbb
cmc
push
addr16
test
inc
sbb
add
sbb
jg
int
pop
jg
add
test
lds
mov
retf
aaa
add
mov
not
rol
es
adc
aas
jb
jle
add
rcr
push
jo
jae
pushf
or
sbb
mov
into
or
cmp
dec
cmp
sbb
stc
or
adc
and
cmp
pop
sahf
inc
xchg
test
movs
cmp
nop
loopne
daa
cdq
mov
mov
pop
out
or
pusha
xchg
mov
nop
or
pop
(bad)
in
fst
mov
cmp
cld
push
sub
ror
test
mov
cld
mov
stc
pop
ret
inc
jnp
jl
stc
jl
add
jl
test
mov
cld
mov
not
or
fwait
je
shr
jae
mov
xor
mov
mov
push
ds
test
mov
pusha
(bad)
ins
rcl
and
push
test
imul
inc
adc
fs
cmps
push
ins
fs
dec
clc
or
push
addr16
outs
add
push
and
mov
pop
and
adc
ret
push
ror
rcr
daa
fst
(bad)
out
xor
test
sub
sub
mov
pop
inc
in
rol
dec
and
inc
es
(bad)
in
dec
cmp
xor
sar
jno
loopne
xor
pop
jge
jnp
movs
imul
stos
cmp
add
pop
jge
imul
in
add
lods
cmc
dec
push
sbb
lock
(bad)
ror
lea
cmp
xchg
xor
ret
add
packsswb
sub
adc
push
in
or
fs
test
sub
rol
inc
jbe
rol
fisub
cmp
movs
add
loope
ds
xor
mov
imul
pushf
(bad)
mov
fmulp
test
mov
mov
sbb
push
call
popa
addr16
push
push
mov
gs
out
mov
cmp
(bad)
pop
xchg
out
push
xor
and
nop
mov
add
ins
xor
mov
retf
inc
sbb
pop
inc
push
dec
test
rol
sub
aam
sub
in
imul
add
dec
push
jne
clc
xchg
pushw
jp
xor
dec
xor
cmps
xor
sti
dec
jae
mov
loopne
mov
dec
inc
xchg
rcl
aam
add
push
add
retf
add
ror
shr
mov
dec
ror
shr
popf
aaa
ret
int3
cmp
adc
das
retf
add
xchg
cmps
mov
shl
mov
mov
shl
sub
clc
and
imul
fs
xor
sbb
xor
add
lock
test
add
mov
loopne
mov
hlt
mov
scas
sar
shl
mov
xor
push
mov
scas
out
mov
xchg
int
scas
mov
and
push
test
or
adc
call
aaa
(bad)
xlat
or
xchg
test
aam
test
push
or
movs
sbb
xor
sub
pushf
outs
cmp
mov
popa
jecxz
retf
lahf
jb
inc
push
loopne
sbb
xchg
mov
dec
clc
add
test
pop
pushf
sub
xor
cmp
adc
ror
cld
retf
and
pop
aad
fsubr
sub
or
add
fadd
inc
lahf
out
add
dec
inc
imul
or
cmp
jmp
jmp
nop
out
pop
inc
push
jae
call
cmps
inc
mov
lahf
xor
push
xchg
fchs
adc
sbb
ins
jle
js
push
in
inc
jge
inc
xchg
mov
push
xchg
cmp
jae
add
and
push
loopne
call
push
push
jno
dec
add
and
add
mov
dec
jmp
scas
pop
jmp
dec
imul
loope
jnp
push
jge
cmps
dec
mov
pop
mov
mov
pop
jmp
daa
stc
pop
lahf
xor
adc
dec
sub
shr
and
add
or
aam
(bad)
sub
call
call
bound
call
ror
mov
push
call
rol
push
sub
test
jns
pop
arpl
adc
and
xchg
out
or
and
and
in
pop
imul
in
rol
sub
inc
rcl
or
ret
pop
not
mov
sti
mov
outs
test
jbe
pop
inc
or
mov
imul
mov
mov
jb
mov
daa
sbb
pop
sub
inc
cmps
ret
cdq
arpl
shr
int
ret
ror
dec
push
sbb
push
push
add
xchg
daa
mov
sub
add
fistp
test
xchg
fcmove
loop
mov
mov
mov
sub
xor
inc
je
mov
sub
jbe
and
add
push
enter
stc
dec
push
add
cld
call
mov
push
ret
cmp
in
or
(bad)
(bad)
repnz
call
xchg
repz
jb
mov
jg
std
and
mov
ins
dec
call
test
aad
pop
rcr
fstp
data16
xchg
test
add
movs
add
loopne
nop
outs
in
movs
loope
test
test
mov
ins
in
mov
repz
cld
outs
das
sub
xchg
sti
adc
cmps
adc
mov
test
test
jns
jecxz
dec
cld
mov
ins
inc
push
dec
mov
mov
fisub
mov
or
pop
and
out
fidivr
and
and
adc
adc
push
add
daa
adc
mov
stc
jmp
dec
or
jb
pop
or
mov
add
cmp
lea
add
aam
je
jns
fisubr
or
inc
shufps
fst
pop
paddusw
dec
sbb
or
and
push
dec
mov
imul
gs
or
xchg
int
shr
sbb
rol
sub
pop
add
cmp
leave
(bad)
icebp
test
pop
jmp
fsubp
sbb
push
inc
sbb
pop
adc
or
xchg
add
dec
cdq
and
push
ds
sub
jo
scas
mov
sbb
jae
inc
les
les
and
pop
cs
jmp
lea
sar
loopne
jmp
cmp
aad
into
sbb
mov
loop
add
adc
movs
jmp
add
mov
xor
test
lods
sbb
cmp
les
jle
cmp
bound
inc
sub
and
cwde
add
rcr
sbb
adc
fidiv
push
pop
pop
es
xor
push
add
pop
sbb
cmp
push
pop
push
mov
and
mov
cs
lahf
dec
shl
ror
in
mov
jne
int
mov
jmp
adc
xor
cmp
aad
call
loope
(bad)
push
fcmovb
jl
sbb
out
sub
je
xchg
add
(bad)
sti
std
dec
mov
sti
dec
or
in
pop
inc
inc
cmps
mov
and
inc
inc
mov
lock
and
in
dec
inc
test
and
xor
mov
push
ja
jmp
mov
(bad)
xlat
cmps
lea
gs
sbb
and
pop
dec
xchg
push
lods
or
pop
fld
dec
mov
and
adc
clc
sti
clc
sti
idiv
clc
sti
neg
or
test
inc
ret
or
fwait
add
test
cs
imul
xchg
enter
and
lock
xor
or
lahf
mov
(bad)
in
sbb
push
jb
daa
lock
mul
jmp
pop
sub
in
loopne
sti
fwait
lea
mov
(bad)
mov
add
mov
iret
xchg
stos
out
sub
pop
sbb
jne
loop
cs
add
mov
ss
push
inc
and
retf
pop
jns
add
push
rcr
or
jne
cld
add
mov
jmp
daa
fs
and
cmp
sahf
and
shl
mov
or
adc
popa
(bad)
cs
adc
mov
jmp
and
jp
and
pop
dec
xor
test
xor
push
sub
aam
add
inc
call
or
mov
cmp
call
xchg
lods
loope
dec
xchg
add
sti
or
rcl
jmp
dec
repnz
int3
out
adc
add
enter
je
push
cmps
in
push
sbb
push
or
inc
sub
leave
data16
and
in
and
in
mov
xor
or
xor
jmp
xchg
pop
scas
dec
leave
xchg
dec
in
cmp
add
xchg
out
fs
xlat
add
cwde
ret
lea
inc
inc
in
xchg
add
lahf
ja
mov
pop
sbb
scas
push
test
cld
stc
pusha
add
add
sub
jmp
shr
and
sbb
in
pusha
xchg
ja
xchg
push
jg
repnz
cmp
cs
retf
out
adc
pusha
mov
mov
cld
cld
inc
sub
in
mov
js
or
add
sbb
mov
iret
xlat
or
je
cmp
jbe
stc
add
mov
sbb
out
dec
dec
cmp
les
push
imul
nop
js
jge
pop
jnp
rcl
inc
and
sbb
mov
sub
sub
sahf
out
xor
cmp
push
pop
xchg
cli
rdmsr
lock
cmp
sub
mov
xchg
cmp
popa
in
cmp
lock
cmp
fild
out
mov
xor
dec
mov
frstor
cmps
sar
pushf
and
imul
sub
call
inc
sbb
push
cli
cmp
jl
nop
inc
lea
adc
push
inc
call
xchg
sar
enter
push
mov
imul
(bad)
nop
mov
mov
push
push
push
push
test
and
mov
out
lea
jns
push
jo
add
and
jl
scas
(bad)
add
push
mov
shr
and
ins
fcomi
add
gs
push
call
in
add
fwait
aaa
enter
pop
cmps
movs
jg
add
pop
push
lods
arpl
mov
je
lahf
mov
das
das
pusha
xchg
les
das
fs
xchg
fisttp
int3
jmp
sbb
in
out
sbb
imul
jne
in
lock
aad
cmps
push
ins
push
aad
push
pop
test
movs
je
fsubp
and
adc
(bad)
jns
mul
sub
cmp
cmc
mov
test
jae
push
or
cs
js
shr
push
mov
push
mov
std
pop
pop
and
xor
inc
mov
inc
sbb
leave
push
push
mov
fld
xor
call
push
and
outs
mov
lock
add
add
adc
mov
jle
stc
sub
push
push
dec
pop
arpl
std
or
adc
inc
call
jl
in
loopne
pusha
xchg
ret
pop
push
push
in
scas
sar
pop
sbb
cmp
test
mov
enter
dec
cmp
add
and
out
repz
add
lea
rcr
adc
sar
and
jnp
mov
ror
add
push
mov
jne
sbb
cmp
inc
jp
movs
dec
nop
jl
cmp
pop
fisttp
or
dec
cmp
dec
add
push
pop
mov
inc
and
scas
clc
and
pop
pop
(bad)
lds
mov
mov
(bad)
sub
push
add
mov
cmp
(bad)
cmps
jo
add
sub
nop
jo
hlt
int3
ja
dec
mov
loop
cmp
(bad)
xlat
add
sub
mov
and
ins
test
cwde
mov
sub
cmp
int
ja
scas
mov
retf
push
jbe
jle
ins
call
cwde
add
test
add
add
push
sub
add
int
pusha
ret
mov
cmp
stos
add
ret
push
xor
pop
sbb
push
mov
pop
das
add
mov
lahf
ret
repnz
sub
sbb
adc
inc
rcr
gs
push
pusha
movs
jne
inc
xchg
xchg
jp
test
pop
shr
cmp
mov
cli
jne
cmp
sbb
push
mov
pop
test
and
push
call
cmp
pop
cdq
mov
call
movs
pop
inc
gs
movs
bound
enter
mov
push
mov
add
xor
jno
adc
lock
js
gs
inc
and
adc
je
mov
push
sub
lock
(bad)
mul
add
lock
push
push
or
ja
inc
les
push
xchg
aam
xor
dec
push
mov
movs
add
xchg
sbb
rol
inc
not
sar
cmp
and
inc
pushf
add
repnz
stc
inc
test
dec
cwde
add
xor
pop
pop
pop
push
fwait
sbb
jmp
adc
xor
lea
lea
and
mov
xor
cs
mov
sbb
call
adc
add
sbb
xor
add
popa
ins
mov
cld
call
cs
adc
out
in
fistp
cmp
test
or
push
dec
jp
or
sahf
push
(bad)
fnstsw
push
mov
data16
dec
in
out
arpl
xchg
and
push
and
sub
and
shl
lea
push
jl
push
pop
add
jnp
loope
adc
daa
cmp
mov
inc
add
loope
es
dec
ret
les
sbb
in
or
je
arpl
adc
mov
mov
pushf
inc
xchg
push
cwde
inc
and
je
pop
mov
fwait
(bad)
adc
rcl
mov
xchg
pop
or
rcl
or
retf
mov
imul
cld
cmp
cs
ret
imul
xor
es
pop
mov
jg
lea
call
xchg
aaa
mov
aam
retf
add
cmps
test
(bad)
adc
mov
adc
xor
pop
cmps
xchg
xlat
wrmsr
add
jo
mov
xor
cmps
dec
add
sbb
pop
xor
ret
xchg
inc
sub
hlt
pop
lock
jne
inc
sub
adc
loop
gs
xchg
jbe
fdivr
push
push
out
sbb
call
inc
jp
push
fisttp
jecxz
lds
fild
addr16
call
pop
or
shl
mov
cld
inc
inc
jne
jmp
mov
push
and
or
and
mov
xchg
jb
push
fbstp
push
jl
push
rol
bound
mov
(bad)
mov
adc
mov
push
and
pop
add
adc
pop
or
repnz
cmp
int
jnp
cmc
adc
add
sub
dec
or
push
inc
call
pop
cmp
fisttp
pop
push
or
ret
(bad)
pop
shl
test
add
mov
sti
jecxz
xor
jne
push
and
mov
mov
stos
or
cmp
dec
push
test
mov
test
jl
add
push
adc
je
call
inc
aas
inc
xor
mov
retf
inc
sub
sbb
jne
push
mov
push
xchg
cmp
cmp
shr
mov
fadd
mov
sbb
sbb
call
or
mov
clc
cli
sbb
xchg
pop
inc
mov
or
dec
fisub
pop
scas
cwde
aas
add
call
mov
js
sub
adc
cmp
push
ins
fld
(bad)
xchg
jbe
jp
mov
outs
adc
sbb
xchg
dec
jns
adc
call
add
(bad)
lock
push
mov
int
(bad)
cwde
jno
dec
sahf
push
icebp
sub
jp
pop
test
ficomp
mov
adc
cmp
gs
jecxz
popa
cli
xchg
mov
lods
and
push
mov
push
sbb
outs
stc
scas
inc
in
movzx
xchg
mov
ins
clc
fcmovbe
adc
call
or
push
push
push
push
sub
pusha
stos
push
or
xor
jle
inc
loope
add
xchg
cmp
data16
xchg
daa
outs
sbb
lock
ss
adc
cmp
sub
sar
repz
dec
push
adc
push
add
jae
mov
dec
push
mov
xor
loopne
stos
fprem
jbe
push
iretw
mov
into
mov
cmp
dec
push
dec
rcr
imul
into
sub
cmps
popf
dec
and
bound
and
retf
lds
cmp
(bad)
mov
mov
add
sub
call
inc
pop
(bad)
inc
inc
pop
pop
xchg
pop
fs
in
adc
and
xor
pop
cdq
inc
push
out
xchg
ret
push
clc
or
daa
shr
mov
lahf
xor
outs
push
ins
repz
test
arpl
ins
iret
repz
ins
outs
jae
ins
jo
iret
repz
jno
jae
mov
stos
repz
add
loop
pop
adc
jnp
jae
(bad)
out
or
pushf
jo
cmp
pop
push
sub
jp
inc
mov
jge
call
mov
fcom
mov
imul
adc
or
xor
es
inc
sbb
add
inc
sbb
cmp
inc
das
xor
mov
jae
push
mov
cmp
inc
pop
aas
mov
mov
push
test
out
scas
pushf
int
mov
ja
adc
push
pop
dec
leave
lds
add
pop
test
repnz
pop
jg
mov
shr
xchg
add
inc
loope
mov
sub
stc
icebp
cs
pusha
ins
add
in
mov
adc
add
into
mov
pop
jle
ins
ror
mov
or
test
or
enter
mov
xchg
retf
pop
int3
rcl
ror
xchg
dec
lea
imul
or
adc
mov
fisubr
jmp
push
adc
shl
es
hlt
loop
push
mov
mov
mov
(bad)
push
mov
pushf
sbb
ret
dec
adc
fidivr
xor
iret
inc
cmp
inc
out
stc
fisttp
lock
inc
or
mov
lods
mov
inc
test
pop
mov
fdiv
push
push
rcl
sub
stc
xchg
add
adc
sub
stos
loopne
jl
push
sar
jmp
in
jae
int3
inc
mov
call
dec
jno
bound
xor
xor
push
retf
sub
movs
loopne
inc
and
add
lods
push
dec
(bad)
retf
mov
mov
rol
dec
sub
lds
xchg
or
int3
mov
sub
pop
dec
retf
dec
xor
seto
inc
ins
add
jae
inc
imul
test
jns
pop
and
mov
xor
sub
lods
out
in
shr
call
push
and
push
push
lahf
mov
out
or
das
fiadd
inc
push
les
retf
lahf
pop
jb
ret
sbb
mov
sub
cmp
dec
sbb
cmp
add
shl
cwde
ror
loopne
and
and
sti
inc
ffreep
ja
outs
sbb
mov
mov
pop
fdivp
std
aam
or
dec
jb
lds
sbb
js
stos
or
or
push
sbb
test
stos
jecxz
mov
ret
ds
add
adc
(bad)
add
add
sbb
loop
mulps
jmp
pop
mov
dec
xchg
es
stos
in
aas
push
push
add
mov
shr
add
adc
in
jne
inc
xor
repz
xor
cli
shr
sbb
sub
mov
aaa
mov
mov
mov
ins
popa
or
neg
pop
iret
shr
mov
jae
add
stc
adc
aas
clc
push
pop
or
jg
scas
cmps
and
add
imul
and
xchg
push
lea
xchg
inc
inc
xchg
std
das
dec
xor
ret
push
push
aas
mov
cmp
xchg
mov
mov
mov
inc
imul
(bad)
mov
add
push
jb
mov
add
mov
popf
mov
ds
jmp
pop
loopne
xchg
mov
in
jmp
add
mov
test
jmp
dec
or
push
mov
lock
xchg
jns
push
xchg
rcr
lea
mov
add
add
cmp
and
adc
or
out
lea
cmp
shl
mov
cmp
mov
lea
or
push
loopne
stos
push
dec
cmps
aaa
add
sub
adc
add
or
lahf
push
nop
dec
lahf
les
add
dec
iret
push
fs
cmps
(bad)
(bad)
jg
retf
shr
call
sub
pop
xchg
outs
(bad)
fnstenv
or
pusha
jb
add
pop
in
mov
mov
jb
xchg
ins
sar
ror
movs
shl
jg
leave
ja
xor
imul
add
mov
ffree
ins
icebp
cmp
jmp
scas
and
inc
out
mov
rol
push
xor
in
push
push
jno
inc
jbe
pushf
add
add
xor
daa
fisttp
call
push
adc
push
cmc
mov
cmps
icebp
or
sub
mov
or
xchg
xchg
mov
mov
les
ficomp
or
mov
ins
dec
add
push
xor
lds
outs
movs
sbb
out
jl
cmp
cld
add
das
shl
rcl
test
add
hlt
push
push
add
js
push
adc
shr
loope
ret
loop
imul
add
push
in
ret
pop
or
dec
sahf
into
sub
add
idiv
dec
data16
jmp
cmps
repnz
ja
mov
push
lahf
test
jbe
push
mov
push
push
or
ss
dec
add
mov
in
sbb
jg
cmp
xor
jg
or
mov
test
jne
mov
inc
popf
push
mov
rol
shl
outs
je
sbb
mov
fs
push
pop
mov
outs
lock
mov
and
ss
(bad)
mov
dec
dec
add
inc
push
loopne
movs
lds
jbe
push
frstor
mov
inc
test
mov
call
mov
fwait
push
or
mov
repnz
(bad)
xor
cwde
pop
jge
adc
mov
adc
pop
cmps
ins
(bad)
sbb
mov
int
out
cmp
(bad)
xchg
push
imul
sbb
sbb
sbb
add
push
cmp
int3
nop
fisttp
adc
call
ret
hlt
jne
mov
dec
mov
add
and
sbb
pop
add
sub
cdq
fistp
add
lea
call
pop
and
adc
jne
or
pop
cmps
mov
sbb
adc
add
aad
and
call
test
adc
cs
sub
xor
retf
adc
or
pushf
push
or
sub
or
imul
ins
loope
ss
jge
xor
fidivr
pop
rcr
or
popf
(bad)
adc
ror
and
sub
mov
mov
lock
or
or
sub
sub
aas
add
jo
xchg
fbstp
adc
test
dec
xor
xchg
dec
add
sbb
out
xchg
push
xlat
aam
and
jle
add
pusha
repz
movs
lock
push
popa
sar
cmp
jae
mov
or
sub
cmp
inc
jmp
pop
bound
or
mov
mov
imul
xlat
rcr
pop
fadd
or
or
pop
hlt
shl
push
mov
xor
add
shl
dec
fistp
xor
ds
(bad)
aaa
mov
cmp
jbe
clc
ja
ret
and
pop
cmp
(bad)
call
mov
jb
inc
cli
cmp
jb
loope
imul
and
pop
movs
scas
sub
clc
outs
mov
cld
hlt
jge
mov
pop
inc
mov
jle
fld
hlt
pusha
mov
psubd
pop
xchg
shr
int3
pop
or
pop
repnz
add
xchg
repz
push
inc
cmp
add
jno
or
shl
dec
mov
in
push
popf
in
(bad)
and
fistp
leave
popf
in
sub
into
xor
push
scas
stos
adc
or
lea
xchg
mov
fiadd
add
lock
jnp
gs
inc
fstp
ins
sahf
loope
push
out
retf
xadd
xor
push
push
add
out
push
call
adc
call
add
push
mov
xor
ins
cmp
mov
push
shl
mov
in
and
aas
cmp
popa
mov
mov
or
imul
sub
sbb
mov
std
fdivr
sar
bnd
shl
adc
add
call
mov
std
mov
das
stos
mov
and
jl
std
push
push
xor
adc
ret
loop
and
mov
les
iret
dec
imul
clc
call
mov
addr16
mov
xchg
or
add
leave
and
in
clc
cmp
icebp
dec
fldz
cmp
push
mov
std
sub
push
sar
sbb
lds
adc
pop
mov
test
pusha
mov
or
lds
xchg
add
psubsw
xor
(bad)
mov
ja
pop
mov
and
or
jo
add
sbb
test
fadd
adc
push
push
(bad)
stos
and
mov
xchg
cmp
popa
fwait
(bad)
movs
and
xor
loop
daa
mov
adc
test
je
ins
xchg
(bad)
xor
push
cmps
inc
das
fmul
movs
or
add
cmp
mov
xchg
push
mov
and
es
sub
sbb
fsub
mov
dec
dec
add
mov
mov
push
add
mov
dec
jb
xor
pop
adc
es
lea
les
and
(bad)
fcom
inc
jge
or
call
imul
fistp
mov
push
mov
xchg
push
cmp
aas
or
pop
sub
pop
shl
push
xor
dec
popf
mov
in
push
test
in
inc
mov
fcomp
std
mov
adc
sbb
sbb
inc
or
add
or
je
rol
lea
sar
push
les
inc
sub
lods
out
dec
loopne
xor
dec
in
jmp
inc
pop
scas
jmp
lea
push
ret
scas
shl
mov
inc
(bad)
mov
(bad)
mov
ss
xor
sbb
clc
sbb
sbb
(bad)
mov
jmp
push
sub
dec
push
or
add
jge
push
or
jo
dec
outs
sbb
stos
or
xor
and
mov
mov
call
mov
sub
jmp
in
mov
xor
out
bound
fdiv
or
pop
or
ret
or
repnz
jge
pop
fdivp
ins
enter
cmp
mov
js
add
cdq
cmc
fdiv
shl
fdiv
clc
sbb
and
adc
add
xchg
and
or
jne
ret
dec
call
ror
rcl
je
add
push
jo
daa
out
jge
pop
pop
sahf
xor
sbb
push
pop
fwait
or
call
mov
sahf
jo
lods
(bad)
inc
adc
mov
inc
mov
xlat
mov
mov
inc
out
or
or
mov
push
ja
inc
push
mov
add
jp
les
push
xor
in
sar
enter
cmp
or
cmp
xchg
or
add
(bad)
sub
adc
sub
push
enter
add
add
mov
pop
hlt
call
push
cmp
repz
hlt
adc
xor
jmp
push
jnp
lahf
enter
push
mov
inc
xor
addr16
(bad)
lea
and
das
jp
inc
imul
test
mov
out
les
or
aad
sahf
mov
call
xor
mov
les
mov
loopne
mov
pop
out
and
xchg
dec
scas
sub
lock
adc
aas
sahf
ins
stos
add
cmp
jne
inc
loopne
idiv
push
je
fbld
adc
or
je
les
fucomi
xchg
movs
rol
stc
push
mov
nop
jg
lds
and
ja
or
sub
inc
(bad)
xchg
stos
mov
add
clc
xchg
xchg
stos
and
inc
pop
inc
call
inc
in
dec
dec
imul
cli
or
ja
add
push
ss
mov
pushf
out
dec
aam
bswap
fst
outs
push
call
jbe
mov
adc
push
dec
dec
cmps
aas
lods
or
or
inc
adc
xchg
pop
or
adc
jle
adc
cld
jns
pop
push
inc
inc
dec
push
les
mov
xchg
iret
mov
test
gs
pcmpgtd
mov
inc
mov
call
aas
test
sbb
ja
retf
jle
and
sahf
idiv
repnz
or
xor
mov
test
jmp
pop
call
pusha
cmps
loope
bound
push
push
mov
cmp
je
add
and
xchg
push
adc
in
and
push
adc
movs
xchg
lock
je
inc
push
test
push
daa
ror
mov
fucomip
gs
(bad)
xor
aas
in
push
mov
aad
ds
jp
aam
jmp
adc
push
data16
cmp
or
jne
test
es
scas
xor
mov
pop
popa
sub
push
loopne
rcr
cwde
(bad)
daa
push
xchg
jle
imul
jbe
mov
mov
mov
shr
imul
loop
rol
jl
scas
hlt
xchg
pop
(bad)
ds
call
test
arpl
inc
js
js
jl
mov
call
adc
jno
ret
jmp
lock
test
mov
call
mov
mov
mov
jno
out
push
jecxz
cmp
not
call
call
xchg
outs
inc
xor
mov
or
mov
push
cmps
std
inc
and
dec
cmp
out
rol
push
add
mov
jno
xchg
sbb
hlt
lods
xchg
mov
adc
push
jmp
mov
les
and
outs
mov
daa
inc
mov
add
gs
dec
jo
fsub
dec
lock
in
and
aad
pop
mov
push
sub
retf
es
mov
fisttp
popa
jg
pop
fisub
sbb
sbb
cmp
xchg
repnz
out
mov
lods
nop
hlt
(bad)
hlt
inc
pushf
(bad)
in
cs
cmp
loopne
stc
test
inc
loopne
sub
in
dec
jae
in
fs
sbb
sub
push
iret
push
pop
sub
add
jle
ins
push
movs
jl
adc
mov
push
fwait
into
lea
add
in
push
add
stos
fbstp
mov
inc
out
fdivr
call
inc
lea
mov
(bad)
jno
push
xor
scas
xchg
add
cmps
sbb
cs
push
push
pop
dec
movs
xchg
les
sbb
mov
mov
(bad)
cmp
out
push
pusha
adc
sar
mov
mov
test
mov
or
mov
adc
adc
mov
or
fucomip
sbb
push
xor
call
adc
adc
cli
ins
cmc
pop
or
(bad)
xor
adc
je
pop
gs
push
cmp
movs
sub
push
adc
mov
call
sub
or
mov
mov
push
push
pushf
xchg
mov
mov
nop
popa
or
push
sbb
inc
popa
add
dec
xchg
retf
mov
push
aas
add
and
sbb
xor
jle
mov
les
lods
cmp
icebp
adc
cmp
lods
adc
(bad)
or
lock
jbe
jmp
mov
inc
ds
adc
xchg
mov
adc
xchg
inc
rol
sub
call
push
push
or
popf
popa
fild
add
pop
jae
sbb
cmps
outs
ins
repz
fisttp
xlat
aad
retf
push
add
mov
enter
mov
shl
inc
ret
into
je
cmp
popa
loop
add
and
or
shl
jne
jo
cld
push
sbb
lods
mov
mov
pop
aas
dec
push
popa
push
fstp
jo
call
movs
and
je
rcr
xor
and
mov
fucomip
dec
sub
je
mov
sbb
imul
shl
add
dec
mov
jp
shl
add
jno
xchg
jns
cmp
lahf
shl
and
outs
sbb
cmp
adc
into
or
adc
cmp
call
mov
and
and
mov
nop
jae
jmp
mov
add
mov
pop
add
pop
(bad)
jb
shl
mov
fucomp
and
fmul
jl
ficom
(bad)
sub
adc
jo
into
cmp
gs
push
cwde
dec
push
loop
int3
mov
sbb
lods
jno
imul
push
jg
mov
and
sar
or
(bad)
push
pushf
dec
cmp
dec
xchg
call
push
jno
mov
xor
push
add
and
out
xchg
adc
or
rol
les
push
(bad)
ds
mov
add
sub
jnp
xor
sub
pop
mov
shl
dec
sahf
les
jl
and
retf
sub
test
sar
pusha
test
inc
and
add
xchg
jb
mov
loope
push
sub
es
push
xor
call
cmp
jmp
addps
adc
or
retw
or
dec
sar
bound
scas
push
push
cmp
jne
ins
push
call
jl
sar
and
sbb
add
pop
jbe
push
pop
and
ret
mov
(bad)
in
mov
outs
std
xor
stc
pop
not
ss
adc
jmp
add
ins
pop
call
fs
dec
test
pop
xor
mov
shl
mov
jb
pop
push
mul
popa
jnp
in
jb
xchg
push
(bad)
outs
jb
xchg
pushf
and
popa
mov
mov
jle
sbb
mov
sub
pop
sub
xchg
iret
pop
mov
xchg
sbb
les
(bad)
loopne
pop
nop
mov
pusha
push
pop
out
pop
jo
cmp
jp
or
push
cmp
push
mov
jmp
dec
cmp
fimul
push
rol
stos
push
push
push
add
xlat
mov
shl
push
repnz
fiadd
pop
cmp
cmp
out
scas
fwait
inc
idiv
mov
mov
jmp
dec
loopne
je
jp
and
mov
arpl
dec
inc
jg
jle
ffree
inc
adc
ja
sbb
push
mov
outs
popa
add
push
pop
std
xor
daa
mov
jge
inc
repz
and
pushw
add
rcr
sbb
xchg
or
aas
push
test
jle
jp
inc
adc
movs
scas
push
lock
je
daa
fs
lahf
in
(bad)
clc
push
push
hlt
gs
cmps
les
mov
mov
retf
mov
loope
or
ror
jne
mov
pop
adc
inc
aaa
or
dec
or
inc
es
jl
inc
push
sub
mov
aaa
pop
or
or
sub
clc
fiadd
loope
xor
pop
jnp
test
cmp
mov
dec
pop
adc
cmp
cmp
adc
cmc
imul
mov
pop
mov
xor
mov
add
xlat
mov
push
mov
ret
inc
arpl
add
jo
add
jne
sub
stos
xor
(bad)
mov
retf
mov
pop
pop
mov
push
shl
popaw
xor
or
call
jbe
mov
push
xor
adc
dec
fimul
push
ror
js
push
outs
add
adc
mov
add
adc
icebp
test
sbb
sub
std
aas
inc
loop
pop
push
push
ins
in
push
js
xlat
or
clc
add
add
sub
retf
call
cmc
xor
repnz
loope
unpcklps
out
das
sbb
stos
mov
mov
mov
scas
or
sub
call
aam
pop
or
ja
add
fstp
or
js
ins
loop
mov
dec
daa
(bad)
sub
or
cmp
dec
loope
stos
rcl
push
cmp
cmc
cs
sbb
jbe
les
aas
mov
shr
or
call
sahf
or
dec
push
pop
push
add
aaa
adc
popf
imul
cmc
mov
in
and
and
jno
arpl
xor
xchg
ds
movs
sub
mov
pop
pop
add
jmp
cli
fwait
test
icebp
adc
out
mov
stos
outs
dec
(bad)
adc
rcl
jmp
ror
sbb
frstpm(287
dec
ror
je
nop
add
(bad)
pop
mov
jecxz
jp
(bad)
push
fst
xchg
nop
test
push
mov
fisub
pop
pop
add
push
push
push
and
sbb
pop
xor
(bad)
pop
pop
jmp
dec
rcl
xchg
push
in
jge
mov
test
fmul
fdiv
add
(bad)
int3
xchg
mov
jg
pop
dec
inc
add
mov
sub
stos
data16
ds
add
jecxz
sub
xlat
mov
lea
sbb
lock
pop
not
inc
fdiv
mov
pop
lahf
jp
and
add
xor
and
rcr
mov
ds
mul
(bad)
ins
inc
movs
jns
mov
or
test
pop
sub
cdq
and
mov
clc
xor
cmp
and
push
les
cmp
jo
fwait
leave
ss
jne
pop
jl
je
add
mov
call
pop
shl
jbe
mov
push
call
and
dec
call
lahf
mov
adc
mov
retf
pop
pop
xchg
cli
rcr
sbb
add
pop
fs
push
pop
mov
das
aad
push
ja
adc
cmp
lods
rcr
sbb
cmp
test
inc
sar
rcl
(bad)
jne
pop
retf
push
cmc
inc
jge
popa
repnz
pushf
test
jmp
loop
int3
popa
push
push
ins
lock
ja
sub
or
jno
lock
cli
es
mov
dec
js
inc
ins
sbb
inc
mov
imul
add
push
pop
inc
cmp
jo
inc
and
inc
ret
pop
push
test
sbb
xor
mov
cli
inc
(bad)
(bad)
fdiv
lods
sbb
enter
adc
dec
pusha
inc
add
stc
je
push
mov
jmp
push
fnstcw
sbb
xor
test
push
jns
fdivr
sub
nop
xlat
hlt
jmp
out
mov
and
or
inc
fisub
xor
sbb
repz
push
push
xor
inc
mov
mov
add
pop
lds
pop
ss
mov
xchg
jle
pop
out
jae
repz
lea
cmp
mov
outs
xchg
pop
pop
push
enter
adc
inc
xor
addr16
pop
jge
outs
loop
outs
inc
jmp
sar
sub
mov
cmp
adc
push
div
or
mov
push
cmp
(bad)
fdiv
xlat
adc
mov
push
ret
cmps
enter
aas
and
or
cmp
or
jo
or
mov
sub
add
inc
cmp
jns
push
mov
push
fwait
add
inc
cmp
addr16
data16
xchg
pop
or
push
dec
or
adc
jne
arpl
push
leave
shl
ret
(bad)
dec
adc
enter
or
or
and
in
adc
rcl
push
push
fucomp
sub
jbe
(bad)
adc
jle
pop
repz
mov
inc
mov
push
adc
loope
cs
push
mov
inc
sbb
sbb
call
xor
add
xor
call
cmps
clc
xchg
xor
call
add
ret
cmp
cmp
in
inc
test
retf
rcr
hlt
inc
add
push
cwde
test
loope
push
pop
or
sbb
xor
repnz
add
arpl
outs
fbld
adc
out
sub
sbb
jae
pop
jne
inc
popf
push
jb
inc
addr16
sub
cld
push
xchg
int
jge
inc
shl
inc
leave
fcmovnb
sub
sar
inc
rol
cmp
push
adc
push
in
or
jecxz
xchg
in
mov
inc
push
ja
push
add
adc
hlt
or
pop
mov
or
in
clc
rol
xchg
pop
jmp
iret
call
fdivr
popf
cmps
push
mov
cmp
xor
inc
pusha
jb
sbb
pop
popa
pop
in
add
shl
add
(bad)
inc
jmp
out
add
cmps
inc
jmp
and
xchg
push
out
dec
jnp
mov
mul
or
xor
call
mov
and
lea
scas
daa
jbe
arpl
pop
or
cmp
pop
xchg
xor
mov
js
dec
mov
retf
adc
adc
ds
jp
shr
fiadd
sbb
ret
ds
xchg
and
ss
sub
jmp
push
add
push
wbinvd
add
dec
mov
push
(bad)
loopne
sbb
adc
mov
push
sbb
and
stos
mov
sahf
mov
jb
sub
test
mov
push
(bad)
lahf
sub
retf
or
xchg
inc
popa
icebp
push
jb
std
(bad)
fnsave
sub
add
add
call
scas
mov
sahf
rol
call
dec
mov
mov
inc
pop
fild
add
retf
inc
push
jge
pop
aam
jae
or
sub
sti
nop
sar
in
push
sbb
xchg
pop
or
or
enter
clc
push
lods
or
(bad)
add
stc
jo
inc
mov
rcr
push
sbb
push
adc
pop
jmp
mov
into
inc
gs
cmps
pop
adc
fsub
fistp
mov
bound
mov
sub
push
jle
jg
add
xchg
retf
ret
push
stc
retf
or
jbe
mov
rol
pop
dec
sbb
mov
push
shl
es
pop
and
pop
mov
aas
mov
nop
add
(bad)
push
xchg
dec
arpl
dec
test
or
ins
aas
das
fidivr
add
jae
ror
cmp
out
mov
cmp
lock
push
and
fwait
and
jnp
sbb
repnz
loope
add
ds
jl
mov
jle
cmp
mov
sub
sbb
(bad)
xchg
aas
dec
mov
jb
mov
push
push
popa
cmp
add
fs
ret
push
and
ins
cmp
sub
add
aad
dec
mov
popf
push
push
push
fxch
adc
(bad)
push
or
mov
in
movs
or
clc
push
stc
mov
sub
add
mov
sbb
or
xchg
push
call
dec
push
cmp
adc
dec
add
inc
hlt
stos
stc
rcr
call
inc
sbb
add
xlat
fistp
retf
les
ret
xor
dec
add
cdq
dec
xor
xchg
vshufps
cdq
dec
(bad)
retf
shr
push
push
push
call
jnp
ja
cs
lahf
push
sub
sbb
loop
ss
inc
inc
pop
mov
jle
enter
dec
sub
sahf
pop
rcl
push
sub
add
imul
sub
mov
push
mov
inc
or
pop
xchg
loope
sbb
mov
mov
or
jp
push
push
rol
add
cmp
push
jmp
sbb
jmp
or
sbb
fiadd
dec
add
test
(bad)
call
add
ret
add
sbb
(bad)
xchg
pop
jp
out
ror
std
xchg
das
fsub
call
cmp
pop
aad
adc
jne
xchg
jl
add
or
dec
nop
pop
pop
and
call
jb
mov
sti
cmp
push
xchg
nop
push
adc
cwde
adc
push
push
adc
dec
mov
pop
ins
cmp
fisubr
or
stos
cmp
sbb
or
add
int
add
add
xchg
loopne
xor
pop
xchg
cmp
shl
xor
(bad)
das
xchg
mov
pushf
pusha
jg
adc
stc
cli
xchg
sub
popa
test
sbb
mov
inc
and
jmp
aaa
or
stos
pop
into
gs
mov
add
lods
(bad)
jecxz
adc
and
push
(bad)
pop
ins
add
adc
movs
arpl
pop
mov
addr16
and
inc
mov
cmp
fwait
add
dec
add
adc
and
mov
push
sub
call
push
push
pop
call
test
mov
loopne
(bad)
fld
aam
and
(bad)
sbb
push
sub
mov
sub
xor
dec
inc
cmp
pop
cld
enter
push
xchg
sbb
or
dec
or
outs
or
adc
mov
popf
loop
mov
in
mov
xor
dec
adc
add
push
mov
call
retf
bound
fadd
add
fsub
fidiv
cld
jo
lahf
sub
jns
bound
pop
ret
aam
push
jae
jg
adc
leave
pop
inc
jge
mov
cmp
sbb
je
xor
shr
call
fmul
jae
call
jns
test
popf
sbb
data16
test
lock
xchg
mov
dec
adc
or
rcl
mov
dec
ins
aas
sub
cmp
fist
add
and
or
cs
dec
cli
or
adc
std
cmp
paddq
shrd
inc
imul
and
aaa
cmps
sub
into
cmps
adc
and
outs
dec
js
stc
inc
dec
dec
pop
(bad)
call
dec
sar
daa
ja
pop
cld
xchg
mov
or
pop
and
push
loope
sub
xchg
xchg
cld
bound
retf
add
add
repnz
fidiv
add
and
es
xchg
and
adc
inc
inc
outs
daa
retf
mov
in
add
add
dec
adc
push
(bad)
retf
dec
adc
push
cmp
dec
ds
xor
add
inc
xor
add
add
test
retf
push
adc
add
imul
add
pop
outs
cmps
pop
xor
adc
and
inc
outs
cmps
xor
add
das
xchg
pop
dec
aaa
add
test
add
loopne
nop
pop
outs
add
shr
mov
or
rcr
jl
adc
add
inc
out
sbb
mov
call
cmp
jb
pop
inc
inc
outs
clc
(bad)
(bad)
(bad)
sti
std
or
or
push
push
repnz
(bad)
(bad)
jl
and
gs
add
jl
stc
xor
stc
push
test
and
adc
repnz
xor
add
fidivr
add
sub
xor
and
(bad)
jmp
or
arpl
inc
shl
xchg
fwait
lahf
jge
mov
addr16
clc
movs
out
sbb
adc
dec
inc
mov
loopne
xchg
mov
cmp
add
push
repnz
add
inc
mov
and
xchg
test
cmp
cwde
sub
push
mov
adc
shl
fistp
ins
sti
aam
cld
sub
add
mov
push
add
lock
add
call
adc
mov
xchg
cld
les
rcl
or
and
mov
or
(bad)
call
aas
add
lods
cmp
add
stc
dec
popa
inc
ds
int
call
xchg
mov
mov
cmp
fistp
call
leave
std
inc
jbe
rol
add
inc
retf
mov
push
ret
inc
adc
(bad)
push
sbb
pop
push
rol
or
push
call
scas
sub
add
sub
sbb
xor
fcom
dec
dec
push
jns
minps
mov
les
iret
cmp
adc
aaa
push
dec
adc
xor
ja
add
dec
add
mov
ret
(bad)
outs
jmp
and
mov
gs
dec
cmps
push
and
fcomp
cmp
xor
fisttp
jmp
or
mov
nop
fwait
in
cmps
and
xchg
lods
cli
in
pop
jmp
daa
add
inc
or
das
nop
daa
add
sub
or
push
fwait
cmps
es
mov
cmp
sub
hlt
xor
mov
mov
and
imul
push
mov
shl
loopne
leave
cmp
sbb
pop
call
rcr
inc
out
leave
stc
aad
or
(bad)
sbb
mov
loopne
jnp
cmp
jbe
push
add
call
jns
gs
mov
push
nop
out
out
adc
lock
fwait
sub
hlt
fwait
sbb
cld
movs
in
cmp
cmp
ss
push
push
data16
pandn
clc
sub
inc
sub
add
add
les
call
xchg
mov
call
shr
fwait
adc
mov
adc
sub
jmp
mov
imul
xchg
lock
adc
(bad)
and
xchg
test
or
cwde
fcomi
or
sub
out
ins
push
xlat
push
xor
mov
imul
inc
sub
pusha
mov
fmul
fwait
jno
push
in
fcmovnu
push
hlt
jmp
or
test
mov
xor
adc
pop
es
and
stc
scas
jb
push
adc
push
push
enter
xor
jne
rol
adc
push
mov
in
enter
adc
in
shl
or
xor
jne
sbb
fwait
(bad)
jmp
mov
das
call
inc
loope
sbb
mov
inc
gs
cmp
aaa
jb
jmp
clc
or
push
scas
mov
sub
in
ins
ret
push
inc
clc
hlt
mov
ins
pop
and
and
inc
bound
jae
dec
or
add
xchg
xor
add
xchg
inc
inc
in
sub
adc
dec
push
outs
cdq
(bad)
mov
stos
fsubr
inc
add
cs
jo
cmp
lock
xchg
hlt
test
je
add
loope
inc
test
lea
inc
xor
inc
shr
mov
push
push
push
sar
hlt
cmp
inc
sbb
add
hlt
xchg
xchg
add
xchg
jg
rol
shl
inc
int3
xchg
push
cmps
xchg
aam
add
dec
pop
mov
in
mov
sub
mov
movs
fsubr
add
jmp
cmc
jl
xor
push
fadd
call
inc
cmps
push
dec
jp
inc
or
les
repz
add
movs
jmp
adc
arpl
imul
push
xor
scas
test
pop
ja
and
(bad)
dec
or
mov
int
shl
movs
xchg
xchg
add
adc
clc
push
lods
loope
pop
stc
sahf
test
jmp
xchg
sbb
and
jno
imul
fadd
mov
arpl
sbb
cs
bound
(bad)
test
lods
inc
pop
add
loopne
call
adc
loop
add
sub
jmp
add
in
test
or
pop
push
and
stc
inc
dec
mov
mov
pop
jp
out
enter
cmp
sub
mov
sar
nop
inc
push
add
adc
pusha
or
cmp
sbb
and
and
add
repz
add
or
add
add
sub
popf
push
stc
add
add
xchg
scas
or
cmp
repz
(bad)
jl
add
xlat
adc
add
push
fwait
retf
adc
into
dec
pshufw
les
add
aas
aas
xchg
add
jmp
pop
add
enter
(bad)
jmp
push
add
retf
es
imul
add
push
fs
retw
int3
add
lea
inc
cmp
and
icebp
and
nop
enter
outs
pop
or
jb
push
xor
inc
lods
dec
or
rol
mov
jb
cmps
and
sub
dec
imul
push
inc
mov
mov
pop
jmp
push
pop
repnz
mov
add
inc
add
lock
inc
mov
xchg
aas
movs
adc
jne
mov
add
jl
(bad)
(bad)
cli
mov
out
lahf
xor
mov
enter
pop
push
and
jge
call
daa
push
inc
xor
mov
sub
sub
call
loope
je
outs
or
mov
fisubr
fdiv
repnz
and
inc
sbb
pop
bound
shl
cmp
and
lds
ret
out
in
stc
xchg
mov
or
adc
pop
push
push
mov
daa
stc
enter
add
mov
add
enter
add
add
add
jmp
popf
and
(bad)
call
pusha
loopne
hlt
call
and
pop
fiadd
mov
push
or
lock
jns
div
sbb
pusha
fsubr
mov
sub
push
or
or
push
and
(bad)
sub
repnz
push
and
add
add
mov
add
inc
jle
cld
mov
push
(bad)
(bad)
jmp
and
lods
pop
shl
jl
adc
add
jnp
inc
dec
shl
or
pop
ret
sbb
gs
imul
add
cmp
popa
adc
repnz
jbe
fistp
mov
(bad)
outs
or
jbe
pop
jae
pop
dec
add
es
shl
adc
adc
nop
dec
adc
add
mov
scas
dec
cmp
xor
mov
or
or
push
pushf
inc
dec
sub
xor
inc
and
ja
int
sbb
xor
mov
adc
or
add
add
xor
fild
rol
shl
mov
adc
xchg
data16
sub
cmp
rcl
(bad)
in
mov
imul
jg
enter
or
mov
mov
xor
sbb
or
sahf
mov
mov
or
xor
cld
enter
add
cmp
add
enter
aaa
call
shl
sub
pop
mov
add
inc
loopne
adc
and
and
mov
mov
jl
popf
(bad)
push
cmp
nop
sahf
in
mov
xlat
std
lahf
in
push
je
pop
nop
loop
nop
pop
enter
add
and
adc
pop
add
arpl
pop
nop
mov
pop
leave
loop
mov
and
cmp
push
pop
and
mov
jnp
add
enter
add
add
call
add
jbe
into
call
push
das
pop
add
jle
pop
stc
inc
lahf
add
cmp
add
push
push
nop
dec
and
dec
(bad)
(bad)
jmp
(bad)
(bad)
push
add
popf
nop
dec
repnz
pop
jno
(bad)
call
add
add
and
add
cwde
pop
retf
nop
jne
ret
cmp
scas
dec
or
shr
je
(bad)
jmp
inc
mov
dec
movs
xchg
out
ds
loopne
mov
fistp
fidiv
call
and
jmp
bndstx
push
je
mov
daa
push
test
push
and
ja
ins
cmp
jecxz
sub
jne
cs
pusha
mov
jne
jno
stos
xchg
and
jnp
xor
mov
and
popf
xchg
mov
dec
mov
pop
and
inc
push
jb
lds
(bad)
test
sub
(bad)
sahf
sbb
sahf
push
sbb
and
xchg
cld
push
sbb
cmc
mov
hlt
add
imul
or
jmp
shr
shl
imul
clc
push
sub
les
sbb
aam
imul
sbb
pushf
jmp
stos
fimul
fwait
sbb
icebp
jg
jl
and
lock
and
jl
jg
jmp
xchg
jbe
or
or
ins
bound
jmp
lds
jns
dec
and
push
and
fs
call
sub
movs
sbb
retf
in
in
(bad)
add
dec
inc
mov
test
dec
sbb
push
adc
mov
dec
add
dec
mov
fbstp
call
xor
cdq
sub
sbb
sbb
push
lock
or
scas
inc
and
fwait
imul
stc
add
sub
lock
rcl
push
ret
jl
les
adc
sub
mov
sbb
xchg
jmp
xchg
lock
push
sub
or
fidiv
das
inc
or
pop
sar
inc
pushf
out
fdiv
sbb
inc
add
push
(bad)
(bad)
sub
fisub
data16
in
fwait
sbb
or
in
sbb
or
lods
retf
call
enter
xchg
out
jg
leave
jbe
ret
add
pop
cdq
mov
dec
or
push
sbb
aad
sbb
dec
jg
jl
out
cmp
int3
cld
lea
dec
push
push
rcr
mov
shr
aam
dec
pop
push
fldenv
or
or
sub
mov
push
push
imul
pop
and
add
and
and
add
pop
push
sti
add
cmp
pusha
(bad)
je
pushf
test
dec
inc
mul
das
pushf
inc
add
cmps
or
jmp
and
and
adc
cmp
cmp
mov
fs
jp
xchg
lock
test
nop
xor
xor
mov
add
hlt
sub
hlt
mov
enter
pop
mov
retf
jne
out
fisub
or
push
adc
sbb
push
scas
xor
sbb
and
imul
jne
sub
retf
pop
cmp
aad
mov
mov
cmp
mov
add
cmc
dec
jmp
call
inc
adc
push
pop
jnp
(bad)
shr
inc
cmp
sub
push
lock
fwait
inc
mov
xchg
icebp
aaa
fwait
jmp
sub
push
and
dec
nop
cmp
je
cmp
dec
sbb
lods
lods
push
es
push
jne
pop
add
ds
inc
test
push
in
sub
pop
mov
pop
icebp
dec
ret
push
dec
or
mov
jnp
sbb
cld
dec
cmp
inc
shl
and
and
sbb
daa
sar
(bad)
fiadd
loop
scas
mov
fisubr
jbe
push
inc
cld
and
add
cmp
ja
xlat
loope
mov
jbe
adc
xchg
xchg
xchg
xchg
sbb
and
cmp
loop
or
loop
cld
aaa
jo
sub
in
jmp
push
call
jl
cdq
mov
test
sbb
cmp
push
aam
push
call
xchg
lea
fcomp
data16
test
push
inc
(bad)
and
inc
mov
push
cmps
dec
test
cmp
jb
sub
inc
jle
adc
xor
cmp
jl
jg
cmp
mov
add
pop
adc
add
jl
dec
call
mov
add
loope
push
sbb
in
enter
cmc
(bad)
call
xor
add
and
add
in
and
(bad)
(bad)
(bad)
(bad)
push
push
jno
(bad)
call
lods
inc
or
and
or
sahf
cmp
or
xchg
clc
jne
mov
jae
idiv
in
xchg
addr16
or
dec
push
dec
movs
mov
je
ss
call
bound
shl
ss
mov
movntps
push
shr
fcmovb
test
lods
(bad)
cmp
pop
jo
in
fst
inc
inc
sub
inc
inc
dec
jne
xchg
and
(bad)
jmp
shr
sub
loopne
dec
sbb
outs
addr16
or
pop
call
dec
aad
jmp
dec
mov
hlt
inc
aas
(bad)
mov
das
push
jge
mov
iret
call
inc
jmp
lahf
sub
mov
pop
loop
mov
jmp
pop
leave
fdiv
fwait
jnp
jne
cmp
or
sti
shl
mov
pop
inc
adc
imul
push
or
aaa
adc
std
cld
pop
call
inc
pusha
mov
lahf
inc
dec
jl
xor
call
push
pop
inc
pop
push
sbb
inc
outs
push
stc
ret
ss
pop
in
clc
lea
rol
xchg
push
pop
cmp
dec
(bad)
in
lock
push
(bad)
jmp
inc
not
jno
mov
xor
and
push
add
or
test
and
lea
add
sahf
cmp
xchg
and
and
push
pop
inc
movs
push
and
cld
aad
es
ds
push
push
pop
shl
sbb
sbb
test
add
push
mov
push
dec
fld
or
dec
dec
and
mov
mov
and
mov
and
adc
nop
dec
test
adc
in
cld
fild
adc
or
add
pop
add
(bad)
(bad)
jmp
inc
enter
add
sbb
add
add
add
add
add
leave
xchg
stc
repnz
add
aad
push
sub
inc
call
(bad)
cld
and
mov
mov
add
mov
add
add
jbe
add
popa
or
add
dec
jle
cmp
add
sub
add
repnz
add
or
add
add
sub
inc
mov
add
cmp
in
mov
sub
and
sub
cmp
push
gs
mov
adc
gs
in
push
int3
xor
add
repz
clc
sub
scas
int3
sub
add
sbb
add
and
leave
das
and
sub
add
push
imul
adc
icebp
pop
inc
int
cmp
sub
sub
mov
fmul
cmps
ins
and
push
mov
adc
push
cmp
inc
int
adc
or
in
push
inc
jg
lea
stc
add
add
inc
or
adc
or
lea
into
jnp
fmul
push
sbb
sbb
sbb
sbb
mov
xchg
or
out
sahf
out
and
adc
add
or
add
fdecstp
jmp
inc
sar
jg
pop
stc
push
loopne
add
nop
or
adc
in
cs
in
daa
pop
nop
hlt
push
sbb
jg
sbb
or
repz
or
push
movs
lods
mov
mov
mov
cmps
stc
fdivp
or
push
or
or
sbb
shl
(bad)
rcl
sbb
rcr
sbb
sub
sbb
stc
adc
inc
(bad)
call
xchg
or
daa
stc
call
(bad)
jmp
(bad)
(bad)
inc
pop
adc
mov
or
in
adc
cmc
xchg
jo
push
and
sbb
jg
shl
pop
add
add
sbb
in
xchg
call
cmc
inc
cs
add
adc
adc
les
enter
mov
out
dec
icebp
mov
gs
push
shl
sub
push
push
push
inc
cmp
mov
pop
(bad)
jg
xor
push
dec
cs
and
mov
add
dec
sub
adc
mov
call
and
adc
jmp
add
ins
mov
xor
pop
inc
add
cmp
jmp
adc
cmp
add
sbb
dec
pop
stc
jno
(bad)
aas
add
idiv
add
add
call
or
(bad)
xchg
(bad)
(bad)
call
add
add
sbb
rol
jg
sar
(bad)
(bad)
(bad)
nop
pslld
(bad)
jmp
add
jg
(bad)
inc
pushf
jl
add
jmp
sbb
xchg
cdq
sbb
xor
sbb
sbb
push
sbb
dec
dec
rcr
sbb
pop
cmp
or
pop
stos
mov
and
adc
push
call
sub
jno
add
(bad)
fidivr
or
pop
mov
shr
add
jmp
sbb
jbe
loope
inc
add
xor
rcl
dec
inc
sbb
aad
mov
inc
adc
clc
mov
cmp
(bad)
in
xchg
sbb
mov
cmp
jge
stos
pop
pop
sbb
inc
rcr
neg
inc
out
xor
mov
xor
sbb
cmp
fnstsw
shl
inc
jbe
mov
pop
ficom
or
dec
cmc
sbb
fld
push
bound
jno
wrmsr
sub
ja
mov
add
fdivr
fist
jge
movs
pop
mov
mov
in
test
push
into
cmp
jne
fld1
or
xchg
in
fisttp
adc
and
xchg
mov
or
xchg
dec
xchg
mov
xor
push
push
cmp
push
inc
push
(bad)
punpckldq
jp
jnp
fsubr
inc
aaa
enter
pushf
adc
es
inc
add
add
sub
in
lds
add
xchg
adc
add
jnp
sub
fwait
ror
and
xor
retf
adc
adc
mov
inc
cmp
repnz
(bad)
mov
jle
in
add
xchg
cmp
add
cmp
add
shl
aas
and
das
pusha
and
ins
add
add
push
or
cmp
add
cdq
xlat
cmp
movs
inc
add
repnz
int
call
cmps
cmp
loop
clc
adc
mov
mov
call
cmp
add
cmp
add
adc
fdivr
test
or
and
jo
jle
push
or
or
arpl
xor
ins
push
mov
out
je
es
arpl
inc
cmp
scas
cmp
sub
xor
add
sub
shl
js
add
je
add
jo
add
fs
inc
dec
scas
fdivp
in
ja
adc
adc
cmp
call
sbb
(bad)
or
sti
and
push
daa
add
jl
lods
shl
shr
and
pop
push
adc
movs
adc
pop
xor
dec
mov
or
cmp
(bad)
aaa
fstp
cmp
sbb
adc
mov
(bad)
push
pop
mov
jl
fbld
das
(bad)
es
nop
jnp
arpl
mov
fwait
jl
cmps
sbb
jbe
xchg
nop
push
lods
sub
cmp
sub
mov
add
inc
or
call
inc
outs
scas
call
ds
ret
add
dec
pop
sbb
add
cmpps
cmp
(bad)
inc
add
je
and
das
jle
and
add
push
add
xor
sbb
jl
and
nop
call
add
mov
sahf
and
xor
sbb
and
push
cmp
cmp
add
pop
test
add
lahf
add
pushf
lods
jp
sbb
sub
sbb
fs
xchg
cli
push
mov
adc
fst
stos
adc
xchg
sahf
out
out
or
out
lock
call
add
enter
sbb
jmp
sbb
lahf
mov
pusha
push
div
and
call
aam
push
lahf
mov
mov
push
mov
or
out
fisubr
jl
mov
push
lahf
movs
ds
int
ror
push
fsubr
push
lahf
cmp
add
mov
xor
loope
faddp
sub
add
sbb
lahf
cmp
call
(bad)
dec
sub
(bad)
dec
movs
and
in
adc
out
(bad)
div
cmps
inc
imul
cmp
test
push
add
imul
sub
nop
pop
sbb
(bad)
jmp
add
add
in
aas
stc
inc
leave
(bad)
(bad)
fcom
(bad)
dec
sar
jmp
pop
stc
and
add
add
and
push
cwde
dec
add
sbb
push
jle
jl
add
sub
add
xchg
adc
adc
(bad)
push
enter
(bad)
(bad)
inc
(bad)
jmp
inc
popf
xor
xchg
dec
add
(bad)
(bad)
mov
jmp
enter
in
add
or
mov
or
and
sbb
jno
jo
add
mov
and
adc
sub
(bad)
dec
nop
jo
cmp
repnz
pop
add
aas
add
xor
fwait
dec
retf
xor
push
add
inc
cmp
add
ror
in
inc
leave
add
push
push
xchg
repnz
add
jnp
add
pusha
add
push
push
or
add
mov
adc
sub
and
call
add
cld
add
add
jle
add
test
cmp
sbb
dec
(bad)
ds
mov
mov
add
add
add
cmps
add
jg
add
pop
jge
add
add
add
mov
inc
or
test
inc
jo
push
fistp
fcmovnb
sub
data16
sub
enter
sub
(bad)
jmp
add
cmps
add
add
add
add
mov
push
adc
(bad)
(bad)
mov
cmp
stc
call
les
in
loop
mov
dec
sbb
push
nop
test
(bad)
(bad)
dec
aas
sub
(bad)
(bad)
(bad)
mov
sub
adc
or
adc
(bad)
push
(bad)
jmp
cmc
(bad)
push
leave
add
icebp
hlt
(bad)
jmp
stc
inc
repnz
inc
ds
push
ret
loope
(bad)
(bad)
ds
aaa
aas
lea
add
int
push
std
pop
and
lahf
out
cmps
mov
es
xchg
add
sbb
or
mov
cdq
mov
pop
add
inc
adc
xchg
cdq
adc
push
add
add
movs
xchg
mov
call
(bad)
(bad)
fcom
dec
jle
mov
jmp
arpl
in
mov
dec
(bad)
call
repnz
mov
add
push
and
adc
(bad)
and
mov
enter
cmp
mov
and
out
fdivr
call
fdiv
and
adc
out
scas
nop
outs
add
add
(bad)
call
nop
pop
repnz
fdivr
push
(bad)
(bad)
stc
aas
and
add
and
(bad)
(bad)
dec
sbb
push
or
(bad)
push
int3
retf
jg
push
push
cmps
ret
sub
add
push
push
xchg
pop
in
loop
jmp
xor
enter
ds
repnz
sbb
sbb
add
add
pop
push
sbb
pop
enter
and
jp
in
add
add
and
and
adc
ins
add
or
sub
pop
jo
add
scas
xor
lock
sbb
adc
lea
sbb
lea
test
(bad)
cmp
(bad)
clc
jb
aam
mov
or
sub
jecxz
pop
pop
aas
(bad)
fst
movs
sub
loopne
enter
pop
add
or
sub
shr
and
add
aam
add
dec
enter
add
add
leave
rol
xchg
add
cmp
pushf
in
and
je
stos
bound
and
pop
push
fs
sar
mov
pop
les
clc
aas
sub
pop
lds
and
pop
shl
xlat
(bad)
sub
sahf
test
and
add
clc
or
add
cs
adc
and
push
pop
iret
enter
and
sbb
add
sbb
imul
xchg
mov
int3
(bad)
xchg
fdivr
call
push
push
lds
hlt
imul
jp
cmps
cmp
out
jmp
outs
pop
and
sub
and
add
add
loope
jmp
sbb
pop
les
add
mov
add
ds
mov
add
enter
mov
inc
repnz
push
pushf
inc
xrelease
add
cs
call
cdq
aad
mov
inc
add
or
push
jno
mov
ss
xor
jmp
add
out
test
in
xchg
dec
or
pushf
imul
addr16
push
inc
xchg
push
or
push
add
sub
dec
mov
dec
and
push
sub
pop
pop
ds
sub
xor
(bad)
jge
out
ss
into
(bad)
je
ret
loope
and
cmp
or
sbb
ds
mov
and
cmp
pop
and
cmp
and
retf
stos
ror
gs
and
jg
lahf
add
xchg
sub
ret
(bad)
dec
add
push
jmp
adc
or
or
ss
jle
mov
movs
mov
ins
or
jno
pushf
ror
sbb
rcr
stc
or
mov
cmp
push
push
popf
fst
inc
mov
movs
add
nop
add
rcl
ror
pop
add
push
fmul
inc
ds
sar
call
enter
add
add
add
jl
xchg
pop
jo
add
nop
add
add
pop
mov
add
movs
in
cmp
xchg
add
nop
dec
repnz
add
cmp
movs
xor
(bad)
dec
dec
jle
bound
add
add
cmp
popa
(bad)
(bad)
movs
call
push
enter
add
mov
add
dec
(bad)
mov
test
push
or
add
xor
and
add
add
mov
cmp
sub
stc
cmp
pop
(bad)
(bad)
call
and
xchg
jl
int3
jae
int3
mov
or
shr
dec
stos
hlt
imul
sar
retf
adc
pop
sbb
inc
test
adc
int3
inc
in
or
mov
jno
jne
dec
push
dec
cmp
ss
in
movs
aaa
ds
and
xlat
add
inc
jl
pop
xchg
cmp
add
and
jle
shl
add
jo
add
mov
fldenv
aaa
pop
rol
xor
cmc
sub
inc
jle
retf
(bad)
inc
adc
xlat
mov
retf
dec
retf
mov
enter
retf
and
call
inc
bound
enter
retf
(bad)
(bad)
inc
retf
jb
and
xchg
(bad)
xchg
leave
lods
sub
pop
leave
(bad)
call
jle
jl
iret
xlat
(bad)
jmp
leave
xchg
loop
adc
and
cmp
or
(bad)
dec
scas
nop
dec
in
add
lds
in
mov
xchg
arpl
pusha
mov
shr
hlt
lods
(bad)
rol
jmp
sar
push
sar
call
(bad)
leave
pop
in
add
enter
shr
test
mov
dec
rcr
inc
add
and
mov
add
and
xor
scas
or
adc
mov
rcl
sar
inc
das
push
sar
xchg
push
ror
push
sub
repnz
arpl
imul
popf
in
adc
adc
test
and
adc
and
adc
repnz
(bad)
jmp
cdq
pop
in
shl
and
pop
loopne
add
int3
jmp
jle
addr16
(bad)
call
jmp
or
dec
mov
jl
sub
rcl
sti
(bad)
push
dec
ds
mov
add
pop
xchg
add
push
dec
adc
sbb
inc
jle
sub
movs
enter
cld
(bad)
push
daa
xchg
pop
leave
(bad)
(bad)
mov
std
shl
add
(bad)
jmp
adc
enter
stc
cmps
xchg
pmulhuw
adc
jmp
or
add
pushf
push
add
mov
nop
pop
nop
dec
mov
add
shl
or
add
arpl
mov
jmp
stos
or
daa
rol
add
add
mov
scas
int3
push
add
imul
mov
ret
or
mov
iret
(bad)
push
pop
push
repz
inc
inc
scas
add
pop
xchg
and
stc
inc
xchg
movs
(bad)
inc
add
xchg
cmps
pushf
jbe
inc
mov
outs
sbb
scas
jge
repnz
mov
add
nop
scas
pop
scas
call
add
and
(bad)
dec
jmp
mov
(bad)
call
add
daa
in
(bad)
jmp
adc
sub
enter
jmp
push
enter
sar
inc
(bad)
inc
and
jmp
sub
int3
pop
xchg
dec
js
cmps
scas
sub
(bad)
jmp
adc
fcomp
lods
jl
mov
xchg
pop
and
add
pop
ffreep
push
pop
add
or
cld
jmp
(bad)
call
add
dec
jle
mov
pushf
add
add
push
add
lods
mov
repnz
js
add
sbb
or
add
popa
cld
fs
push
jl
and
fnstenv
sub
movs
out
pusha
clc
addr16
cdq
lods
jne
dec
push
repnz
inc
ins
aas
fwait
jne
cmp
add
sar
ins
pop
sahf
jnp
and
or
mov
aas
in
mov
pusha
mov
pop
sbb
add
add
icebp
pop
inc
mov
imul
or
and
outs
aam
aaa
push
je
sbb
das
call
push
sbb
or
pop
addr16
rcl
out
clc
aam
fst
je
out
test
and
mov
ins
push
or
andps
aam
ins
cmp
push
xor
adc
cmp
xchg
inc
cmp
je
sti
jl
pop
jmp
pop
pop
cmps
sbb
je
js
pop
in
xchg
adc
jmp
adc
in
repnz
cmps
dec
add
out
aaa
nop
in
jmp
adc
cmps
test
push
mov
dec
inc
sbb
fcomp
adc
push
sbb
rcr
add
ror
sub
inc
or
push
daa
fdivr
jle
dec
mov
gs
(bad)
call
test
add
add
mov
cmp
sahf
test
imul
enter
xor
aad
enter
aas
stc
mov
add
(bad)
(bad)
call
mov
push
les
and
inc
add
cmp
add
cld
mov
repnz
xchg
aas
gs
sbb
pop
dec
sbb
sub
adc
outs
and
and
shr
jl
ficom
adc
(bad)
jmp
add
movs
sbb
cmp
xor
das
mov
push
fdivr
adc
sbb
nop
sbb
sbb
imul
stc
neg
push
push
rcr
popf
inc
sbb
in
and
adc
sbb
lds
test
fiadd
int
inc
mov
dec
sbb
test
cmp
add
sbb
adc
xchg
adc
lea
hlt
lea
movs
and
dec
mov
call
jo
movaps
or
push
mov
or
push
sbb
jb
and
cld
lea
and
sbb
mov
jl
add
test
add
xchg
jno
add
stc
xchg
cmp
add
xor
call
xor
pop
cmp
dec
adc
dec
adc
and
repnz
enter
stc
and
dec
(bad)
call
std
xor
push
cmp
jnp
add
fadd
xchg
call
sub
adc
push
push
jbe
inc
mov
nop
jl
ins
(bad)
xchg
int
movs
mov
push
outs
dec
(bad)
xchg
cmp
xchg
sbb
mov
push
repnz
(bad)
mov
add
sub
add
pop
jo
inc
xchg
sbb
pop
daa
add
(bad)
call
jecxz
sub
(bad)
dec
das
stc
xchg
sub
(bad)
push
cmp
dec
fadd
add
inc
add
sub
push
add
dec
adc
bound
test
add
mov
add
std
lods
pushf
pop
adc
mov
dec
popa
push
sub
mov
inc
dec
ds
pop
mov
dec
inc
add
inc
pop
hlt
data16
ret
mov
mov
mov
retf
fiadd
adc
jg
mov
repnz
mov
pop
jecxz
cmp
rcl
fld
sub
sbb
xor
int
dec
jecxz
lods
dec
adc
sbb
jl
mov
add
adc
or
mov
add
stc
test
(bad)
(bad)
inc
add
add
dec
jle
enter
(bad)
(bad)
dec
cmp
(bad)
inc
daa
sub
int
jmp
(bad)
dec
mov
pop
enter
jg
add
in
jl
lock
xor
inc
leave
cmps
push
add
add
add
add
add
mov
jl
sbb
movs
jae
jnp
add
iret
push
and
rcr
aad
inc
les
cmps
das
scas
mov
inc
xchg
loopne
fdivr
xchg
fild
push
call
add
push
mov
cwde
ret
pop
inc
jle
xor
(bad)
dec
xchg
popa
xor
test
jno
xor
pop
shl
xor
hlt
out
xor
(bad)
in
lea
jmp
mov
jae
or
add
xchg
pop
jns
(bad)
(bad)
mov
or
add
arpl
and
movs
aam
push
jmp
mov
cmp
stc
add
bound
add
ins
cmps
(bad)
dec
test
add
in
add
jle
repnz
jl
add
and
add
and
adc
hlt
add
inc
add
add
jns
add
nop
jno
or
add
daa
add
add
add
add
repnz
mov
add
and
add
test
add
and
adc
add
add
in
and
or
inc
leave
add
lods
or
adc
push
mov
imul
inc
popf
(bad)
(bad)
cli
pushf
jg
add
leave
cs
inc
dec
gs
and
(bad)
pushf
stos
pushf
popf
pushf
and
dec
outs
mov
inc
cs
sub
jecxz
jb
pushf
sub
pop
sbb
push
inc
mov
inc
lock
push
mov
cmps
fidivr
in
stos
fstp
ret
sbb
mov
and
mov
cdq
sar
inc
and
mov
inc
add
imul
and
or
xor
inc
or
(bad)
(bad)
cmp
jo
xor
add
inc
outs
das
cmps
mov
mov
mov
xchg
fs
cmps
jbe
mov
inc
rol
cmps
imul
sbb
test
jmp
in
push
or
ret
nop
dec
push
sahf
inc
ins
xor
xchg
or
imul
sbb
out
xchg
or
test
sbb
shl
call
or
push
and
aam
int
(bad)
loopne
jo
or
add
push
xchg
and
rcl
dec
xor
xor
mov
inc
jl
nop
mov
fistp
sbb
push
mov
adc
(bad)
out
jecxz
push
leave
aas
pusha
mov
jno
in
imul
add
or
push
jns
add
test
ds
pop
fdiv
imul
les
sbb
jnp
adc
movs
sub
cmp
ret
sbb
xchg
mov
movs
outs
fdivr
push
and
push
ja
mov
adc
push
push
sub
adc
das
movd
dec
ds
pop
mov
pop
adc
outs
jo
test
test
adc
cmp
imul
fisttp
push
fsubr
call
fsubr
mov
xchg
bound
aam
test
adc
add
aaa
js
push
jmp
mov
push
and
iret
jno
add
sub
inc
or
jl
rcl
push
scas
and
mov
adc
out
lods
icebp
dec
loope
hlt
push
sbb
scas
xor
and
or
add
add
jmp
aas
sbb
jnp
test
mov
in
shl
data16
and
push
sahf
pop
adc
imul
inc
push
mov
imul
jge
adc
adc
call
test
lock
jns
and
unpcklps
lods
xchg
push
mov
ror
sahf
xor
cdq
pop
idiv
mov
add
xchg
mov
jb
jl
xchg
ret
jo
adc
mov
jp
pop
sbb
repnz
or
sub
add
(bad)
mov
inc
xor
ret
cdq
sbb
lock
xor
add
ret
mov
ins
je
xor
sbb
ret
lea
add
push
jbe
pop
ins
je
inc
sbb
push
sbb
data16
add
mov
mov
and
xor
pusha
jnp
inc
adc
add
(bad)
cmp
jle
sub
jmp
icebp
xchg
mul
leave
sbb
mov
pop
adc
ins
cli
push
fild
jne
imul
dec
and
and
leave
call
cwde
adc
stos
adc
xor
test
push
jmp
cwde
add
mov
stos
lock
addr16
and
add
dec
jns
or
dec
test
jl
sub
inc
add
lds
adc
outs
cs
push
cmp
pop
int
mov
cmp
pop
dec
js
pop
push
push
jbe
cmp
addr16
popf
aam
jge
aad
xor
ins
neg
neg
or
lock
sbb
shr
mov
pslld
call
xchg
out
push
push
jmp
pop
push
push
xor
mov
daa
es
enter
mov
retf
mov
(bad)
call
push
sbb
fstp
mov
mov
pop
shl
iret
pushf
jmp
cmp
sahf
pop
outs
test
iret
jge
repz
add
mov
and
or
aas
iret
xchg
xlat
mov
sahf
cmp
scas
jnp
add
stos
aaa
in
shl
dec
mov
enter
push
data16
dec
pop
lock
sar
push
jle
mov
and
jge
clc
out
jl
test
call
jge
cmp
push
adc
or
push
or
sub
ss
inc
add
ja
popf
rol
mov
ror
mov
pusha
sub
ret
lods
sub
add
sub
call
in
adc
and
and
jae
sbb
xchg
popa
jo
pop
ins
(bad)
movs
mov
popf
adc
in
push
mov
sub
ja
mov
push
call
int3
xchg
adc
fisttp
mov
xchg
adc
lahf
jmp
retf
mov
ins
pop
push
dec
mov
push
jl
inc
push
les
fiadd
or
popf
outs
pop
dec
call
jg
xor
es
xchg
dec
ficomp
ja
push
push
xor
jb
dec
imul
or
lea
push
inc
mov
push
mov
retf
icebp
(bad)
xchg
(bad)
out
fsubr
loope
adc
lea
xchg
ret
cmp
shr
mov
and
and
sbb
push
add
dec
call
mov
or
jl
fdiv
mov
mov
inc
adc
(bad)
push
mov
ja
cld
jp
add
add
outs
or
sub
nop
or
pop
dec
jo
icebp
xor
push
inc
jne
ror
or
sbb
xor
outs
mov
mov
add
jne
mov
fwait
and
or
fimul
sbb
jl
(bad)
jno
and
sub
test
ds
nop
mov
mov
or
cdq
cld
mov
jb
repnz
jmp
or
icebp
jmp
mov
push
dec
call
fs
fldcw
sbb
mov
in
dec
jge
add
nop
pushf
mov
xcrypt-cfb
cmps
arpl
inc
and
jle
in
add
jno
dec
and
jb
shr
enter
mov
sti
or
mov
icebp
popa
pop
mov
push
push
xchg
or
call
xor
ss
xor
shl
call
push
in
push
dec
jns
jmp
popa
mov
xor
popa
push
sbb
enter
adc
out
ins
pop
cdq
push
or
sbb
push
or
push
cmp
das
or
mov
pop
aam
mov
add
and
push
xchg
rol
imul
pop
sub
jge
sub
outs
add
hlt
rol
sbb
pop
jmp
push
call
popa
push
ret
mov
je
push
sbb
cmp
jbe
call
gs
inc
(bad)
bound
les
je
push
or
mov
iret
popf
(bad)
daa
push
or
and
cwde
mov
scas
ins
inc
and
sub
and
and
pop
std
ins
add
xor
sbb
clc
rol
retf
inc
rcl
mov
sbb
cmp
sahf
mov
jbe
push
test
or
dec
xchg
daa
cld
and
jo
call
dec
(bad)
ss
test
mov
mov
cs
(bad)
jge
lods
je
rcl
and
das
sub
jne
jne
mov
pop
(bad)
inc
cmp
lock
ins
(bad)
call
ficom
inc
adc
outs
add
xor
cs
pop
pop
rcl
dec
or
add
fld
nop
call
adc
stc
cmp
(bad)
jmp
(bad)
(bad)
cmp
das
cmps
mov
pop
xor
pop
nop
ja
sub
jnp
and
scas
ja
pop
dec
push
pop
nop
pop
adc
adc
or
inc
repnz
std
(bad)
call
in
repnz
(bad)
(bad)
dec
(bad)
(bad)
inc
push
cmps
lds
or
add
or
pop
cmp
xor
push
mov
jl
(bad)
(bad)
jmp
mov
(bad)
dec
push
xchg
pop
aad
ja
pop
add
push
in
repnz
inc
fild
and
adc
jmp
sbb
shl
add
push
enter
mov
add
(bad)
pop
repnz
(bad)
push
push
dec
and
pop
and
nop
adc
and
adc
call
xor
nop
call
(bad)
xlat
pop
jge
inc
ja
xchg
scas
cmp
push
mov
ja
mov
pop
mov
xchg
outs
hlt
dec
hlt
cld
inc
ds
sbb
add
pop
nop
sete
add
add
add
add
lock
push
retf
mov
pop
xchg
imul
fstp
jmp
add
punpcklwd
ja
loop
adc
adc
lock
sar
adc
and
in
leave
add
div
and
xchg
cmp
mov
dec
sub
xchg
xor
push
sub
aas
call
repnz
jecxz
(bad)
call
repnz
test
lods
and
cmp
inc
jle
xchg
jmp
dec
add
jle
xchg
inc
or
add
in
call
(bad)
(bad)
call
sahf
fmul
jmp
push
daa
aas
mov
cmp
(bad)
dec
sub
(bad)
mov
or
jl
(bad)
dec
rcl
mov
cmp
jns
call
xchg
cmp
add
sub
je
pop
or
sub
cmp
(bad)
dec
jl
xor
in
jge
sub
ins
cmp
sub
add
adc
ds
mul
mov
cmp
and
ins
push
or
cmp
pop
adc
addr16
push
stc
and
in
(bad)
jmp
test
(bad)
fadd
pop
int
(bad)
push
jnp
mov
test
sub
mov
cmps
cld
(bad)
inc
add
add
shl
mov
or
adc
mov
jecxz
(bad)
jmp
inc
ds
or
ins
jno
jecxz
mov
cld
and
sub
add
add
and
add
in
cld
(bad)
(bad)
cmp
scas
retf
add
add
imul
and
mov
add
pop
stc
xchg
jl
add
pop
cld
(bad)
dec
(bad)
inc
jns
pop
and
sub
sbb
and
cmp
scas
in
stos
push
add
inc
cs
jne
gs
mov
adc
sbb
inc
jmp
cmps
in
(bad)
jmp
jne
xchg
popa
daa
push
xor
or
add
cmp
cld
nop
dec
leave
(bad)
call
jne
jmp
inc
ds
cmc
sti
(bad)
call
psubw
cmp
in
(bad)
inc
jle
push
dec
ds
add
(bad)
(bad)
aas
or
adc
add
add
in
and
mov
inc
jle
(bad)
(bad)
jl
(bad)
jmp
bound
add
add
add
inc
dec
pop
cmp
jg
call
(bad)
call
stc
(bad)
push
cs
aaa
mov
add
add
call
add
ss
adc
jle
xchg
inc
(bad)
xchg
cmp
jno
call
repnz
call
cmc
inc
repnz
call
enter
(bad)
(bad)
cmp
(bad)
(bad)
fst
(bad)
jmp
or
je
test
push
adc
in
test
stc
jo
call
(bad)
jmp
jne
in
pop
int3
sub
mov
aaa
movs
push
cmp
dec
imul
stos
jl
(bad)
jle
leave
movzx
(bad)
inc
sti
(bad)
inc
loopne
outs
inc
xor
cmp
jnp
mov
or
dec
dec
push
faddp
and
std
cmp
frstor
mov
xchg
add
cmps
push
cs
data16
lahf
iret
out
arpl
push
int3
push
js
adc
jo
xlat
inc
repnz
add
int
adc
das
sub
add
daa
(bad)
(bad)
(bad)
jp
test
dec
(bad)
(bad)
jmp
sbb
dec
lahf
xchg
stc
inc
pushf
cmp
or
(bad)
(bad)
js
sub
jge
fild
shl
xchg
pop
repnz
jmp
inc
(bad)
call
add
add
in
mov
xchg
and
mov
jp
and
sub
push
sar
inc
mov
lahf
pop
rol
adc
xchg
inc
cmp
(bad)
(bad)
push
mov
dec
in
pusha
sub
mov
call
sbb
loop
push
push
and
cmp
mov
(bad)
stc
in
repnz
add
cmps
mov
repnz
(bad)
jmp
mov
je
call
(bad)
jns
movs
or
and
lahf
in
lock
mov
jmp
add
add
lea
add
inc
aas
in
add
pop
test
push
fstp
add
pop
and
in
xchg
mov
(bad)
ds
sub
icebp
xor
cmc
test
je
jmp
aas
xchg
js
cmp
sbb
fisubr
jmp
adc
push
sbb
into
jno
call
xchg
cld
jmp
inc
(bad)
call
inc
jle
stos
jns
dec
jg
(bad)
cmp
mov
lock
push
popa
bound
add
mov
and
in
icebp
inc
les
inc
cmp
pop
aaa
daa
push
xor
sbb
mov
outs
sbb
or
pop
pop
or
and
ins
out
add
test
nop
adc
js
jo
mov
xchg
(bad)
and
push
jnp
das
loopne
sar
(bad)
call
pusha
or
mov
mov
and
pop
(bad)
(bad)
dec
pmulhuw
outs
(bad)
inc
inc
(bad)
jmp
xchg
and
mov
mov
push
or
(bad)
cld
add
and
dec
jp
call
xchg
jmp
add
pop
or
push
call
jmp
xchg
sar
add
add
mov
push
outs
sbb
sub
sbb
jmp
nop
shr
jecxz
and
fcom
pop
imul
daa
data16
add
xchg
jae
(bad)
call
shr
jle
sbb
xchg
jl
add
dec
test
(bad)
dec
mov
or
jno
jl
jmp
mov
loopne
sub
ja
arpl
(bad)
jmp
imul
shl
sub
mov
jns
ds
stos
cwde
xchg
cmp
fcom
add
or
(bad)
jmp
fwait
je
shr
test
xchg
jae
inc
jle
add
add
jbe
adc
adc
inc
and
jno
call
(bad)
dec
pop
sar
xchg
inc
cmp
repnz
mov
xchg
jl
shl
add
jb
dec
fmul
jmp
nop
or
xchg
aas
aas
add
(bad)
push
stc
adc
dec
cmp
xchg
pop
leave
(bad)
jmp
(bad)
call
jmp
in
enter
and
adc
loopne
repnz
and
adc
add
mov
jge
fstp
dec
dec
(bad)
(bad)
mov
xchg
test
inc
inc
aas
mov
push
mov
or
push
pop
inc
mov
xchg
pop
jb
addr16
cmp
push
push
adc
stc
cld
inc
jle
pop
xor
adc
add
or
jge
push
mov
push
xor
stc
and
or
add
or
xor
loope
outs
mov
stc
ror
add
xchg
add
xchg
dec
mov
xchg
mov
add
push
fs
and
inc
jle
sti
(bad)
push
js
(bad)
cmp
adc
push
js
dec
cmp
int
xor
jmp
push
xchg
(bad)
jnp
ds
(bad)
(bad)
jmp
add
add
add
sub
shr
add
leave
stc
mov
(bad)
dec
add
add
add
add
adc
cmps
mov
ret
in
lods
je
xor
les
lods
sbb
stc
es
popf
and
add
push
fs
ret
ds
(bad)
(bad)
inc
popa
mov
push
shl
stc
push
enter
in
adc
jno
push
and
add
jno
call
hlt
(bad)
inc
xchg
dec
and
jno
dec
and
ds
(bad)
fdiv
(bad)
stc
and
pop
(bad)
push
hlt
(bad)
push
(bad)
(bad)
aas
test
push
jo
sahf
out
int3
sbb
cld
loop
mov
adc
add
test
mov
or
add
dec
daa
stc
push
mov
pop
mov
sahf
adc
inc
jle
pop
add
add
and
and
mov
je
pusha
adc
sbb
test
pop
mov
push
shr
mov
stos
sar
shl
fnsave
mov
adc
repz
or
loop
ret
jbe
inc
dec
gs
mov
lods
mov
sbb
(bad)
jmp
in
repnz
add
mov
cld
stc
pop
mov
frstor
(bad)
fnstenv
call
jbe
fstp
les
scas
dec
test
pushf
jl
sub
(bad)
jmp
pop
popf
aaa
mov
fsub
adc
mov
test
xchg
jl
dec
jmp
jmp
add
add
enter
add
jl
add
mov
fwait
(bad)
(bad)
jmp
jmp
into
sub
xchg
mov
mov
xchg
or
pop
int3
test
into
sbb
xchg
mov
xchg
cld
mov
sub
inc
push
(bad)
dec
test
inc
add
repnz
jnp
call
or
push
shl
adc
push
rcl
and
adc
and
pop
add
add
push
je
adc
call
test
test
pusha
xchg
adc
ins
test
and
pop
rcl
pusha
enter
(bad)
dec
pusha
enter
aas
dec
repnz
(bad)
jmp
jbe
inc
stos
and
scas
cmp
add
cmp
add
jbe
push
xchg
pop
push
sbb
add
test
(bad)
push
or
add
cmp
mov
add
add
out
(bad)
jl
ds
out
inc
xchg
(bad)
xchg
jns
or
inc
dec
sbb
add
inc
add
dec
ds
jl
je
call
(bad)
call
sbb
and
push
push
rcl
xchg
sub
add
cli
xor
gs
(bad)
int3
loope
jo
iret
push
sub
mov
call
xchg
dec
or
xor
jo
(bad)
xchg
dec
ds
scas
loopne
(bad)
jmp
pop
enter
(bad)
call
jle
jl
pop
(bad)
jmp
mov
add
adc
push
idiv
call
(bad)
(bad)
dec
cmp
jmp
add
add
xchg
cld
fstp
add
cmp
cmp
jns
sub
xchg
cmps
mov
in
add
inc
add
xchg
mov
add
add
std
(bad)
(bad)
fadd
add
lods
in
repnz
sub
(bad)
jmp
pusha
call
dec
and
in
(bad)
(bad)
aas
and
inc
or
mov
xchg
ss
add
ins
iret
scas
add
adc
dec
add
jecxz
(bad)
call
ret
add
add
inc
add
lahf
(bad)
sbb
mov
dec
add
pop
add
mov
(bad)
adc
(bad)
adc
xchg
cld
sub
inc
sub
add
dec
ds
add
aam
add
mov
test
adc
adc
fadd
add
and
mov
adc
add
cld
mov
pop
cvtps2pi
push
in
adc
push
repnz
add
dec
sub
call
xchg
cld
mov
add
mov
add
mov
in
jmp
add
add
in
cld
sti
xor
add
add
add
nop
pop
repnz
add
lahf
xchg
pop
leave
add
xchg
xor
(bad)
jmp
push
(bad)
dec
in
repnz
cld
(bad)
dec
dec
repnz
add
ret
scas
add
inc
or
mov
(bad)
dec
stc
nop
cld
int
sub
(bad)
(bad)
fsub
(bad)
jmp
cld
(bad)
call
shr
mov
xchg
sbb
stos
aad
push
int3
test
test
pop
test
ss
xchg
stos
cmp
and
adc
mov
xor
lahf
mov
(bad)
(bad)
fld
jns
sbb
xchg
(bad)
aas
sbb
add
inc
xor
add
stc
leave
pop
lods
and
adc
cdq
push
lds
adc
frstor
stc
adc
(bad)
fst
lods
inc
ficomp
jl
push
or
cmp
xor
call
mov
call
sub
mov
add
call
repnz
xchg
repnz
jmp
add
jl
cmp
sar
retf
mov
inc
cmp
dec
call
mov
call
pop
stc
repnz
call
pusha
call
das
pop
mov
ins
call
je
dec
out
xchg
push
js
dec
jl
inc
xchg
jbe
add
cs
mov
mov
cs
dec
in
or
test
pushf
in
mov
loope
(bad)
test
adc
je
xchg
pop
adc
sub
and
je
push
add
outs
pop
add
lods
mov
bound
jb
inc
adc
mov
enter
sbb
sub
daa
add
sbb
ror
int3
push
sahf
push
jns
and
sbb
into
sbb
pop
push
jo
popf
xchg
push
scas
(bad)
js
stc
adc
stc
addr16
(bad)
jmp
adc
(bad)
jmp
inc
(bad)
call
and
sbb
add
xchg
jns
scas
push
adc
mov
ss
mov
call
dec
push
stc
in
neg
inc
(bad)
dec
ret
adc
adc
fs
test
mul
mov
sbb
lea
sub
inc
nop
hlt
in
jns
inc
and
in
mov
mov
mov
mov
dec
enter
inc
mov
add
mov
jmp
nop
jmp
and
fild
jmp
cmp
mov
test
push
pop
or
es
and
in
js
sub
sub
ret
rol
inc
mov
fisttp
data16
sub
stc
and
add
inc
push
repnz
out
add
hlt
out
add
or
add
clc
out
add
or
adc
psubb
add
cld
out
add
call
cmps
mov
cmp
sub
lock
xor
sub
enter
push
repnz
out
add
lock
pop
xor
lock
lock
sub
out
cmp
lock
sbb
sub
sub
xor
dec
inc
rcl
(bad)
(bad)
fdiv
xchg
push
sbb
add
and
add
(bad)
jmp
inc
jle
and
add
add
and
(bad)
(bad)
clc
sub
call
das
(bad)
jmp
(bad)
inc
(bad)
(bad)
stc
enter
sbb
xor
call
add
add
in
leave
(bad)
xor
(bad)
jmp
(bad)
call
cmp
(bad)
(bad)
stc
add
lahf
dec
add
jmp
mov
call
mov
add
mov
add
jmp
stos
cwde
dec
enter
add
nop
jl
jb
add
sar
(bad)
(bad)
stc
adc
dec
xor
(bad)
call
and
add
xor
leave
add
xor
inc
adc
add
in
cmp
das
(bad)
call
(bad)
(bad)
stc
push
repnz
add
inc
cld
and
add
add
das
add
and
add
into
pop
add
mov
cmp
call
add
mov
push
add
sub
push
nop
add
sbb
sub
mov
(bad)
inc
and
add
add
enter
(bad)
inc
(bad)
inc
sub
nop
cmp
add
sub
xor
sbb
inc
jle
sbb
add
(bad)
jmp
stc
and
and
sbb
add
das
aas
stc
(bad)
sub
jmp
add
add
sub
inc
jb
add
test
(bad)
(bad)
cld
xchg
pop
and
(bad)
dec
(bad)
(bad)
push
enter
stc
(bad)
inc
stc
inc
repnz
clc
(bad)
call
(bad)
dec
stc
cmp
sbb
add
cli
(bad)
call
mov
adc
cmp
adc
and
push
jp
aaa
cmps
sub
add
pop
or
jmp
add
push
repz
dec
inc
add
sbb
add
add
jns
fisub
mov
or
add
add
mov
and
ds
inc
enter
scas
add
or
sbb
add
inc
js
push
pop
or
push
add
jmp
and
adc
xchg
and
and
adc
adc
repnz
push
dec
pushaw
pop
dec
push
add
fs
inc
inc
in
cmp
push
icebp
(bad)
push
mov
push
push
push
mov
shl
sahf
mov
sbb
mov
jne
test
sbb
sbb
xlat
jle
fisubr
pop
jge
sub
adc
fidivr
add
mov
(bad)
jl
mov
push
stc
and
(bad)
ins
stc
add
push
icebp
sbb
cmp
mov
cwde
push
ror
aam
or
xchg
fs
out
push
adc
jg
inc
les
jne
ror
(bad)
ins
add
xor
int
add
add
ror
je
dec
inc
pop
add
sub
jb
inc
nop
mov
je
mov
sar
mov
cmc
mov
cmp
pop
cmp
jbe
inc
inc
push
call
pop
mov
jae
dec
adc
out
cli
mov
fidivr
and
lock
loope
into
popa
mov
rol
xchg
clc
or
pop
add
retf
sub
jle
dec
pop
mov
into
cpuid
and
repz
sub
sbb
or
daa
push
out
push
inc
pop
adc
loopne
retf
cli
retf
test
dec
add
jecxz
lahf
and
push
ret
ret
rol
mov
cli
or
jb
jnp
inc
push
and
pop
in
dec
test
je
movs
add
or
mov
out
je
and
das
and
popf
xor
push
call
jl
out
push
xlat
fcomp
call
jge
jge
sub
mov
add
mov
sbb
test
pop
clc
fcom
mov
addr16
inc
jle
dec
xchg
inc
sbb
sub
sbb
imul
in
in
and
pop
xchg
scas
loopne
pop
pusha
push
pop
ret
imul
jmp
sub
out
mov
and
cdq
push
push
push
imul
cmp
sar
sbb
loop
test
jb
xchg
(bad)
movs
rol
xchg
mov
jmp
rol
ret
jne
enter
pushf
shr
or
stos
or
sub
sub
sub
push
mov
and
call
mov
fsubr
ds
push
push
xlat
push
ror
push
mov
js
test
scas
xor
lock
fst
mov
adc
fdiv
cmp
mov
jo
pusha
and
dec
inc
sub
test
or
test
cmp
pusha
and
gs
sbb
(bad)
es
inc
call
xchg
call
fs
test
or
data16
mov
push
js
movs
and
scas
loopne
dec
fwait
mov
repnz
outs
call
pop
sub
les
fbstp
inc
es
ja
mov
mov
or
and
xor
enter
cmp
jno
xchg
adc
ret
cmp
xlat
adc
outs
imul
sbb
test
repnz
mov
jg
xor
pusha
lahf
adc
add
mov
popa
mov
dec
out
adc
adc
js
lea
jno
jb
mov
loopne
inc
sar
push
and
or
gs
jbe
lock
dec
mov
rol
jae
fcom
int
fdivr
push
jmp
dec
loop
mov
jle
lea
sbb
mov
mov
cmp
stos
sbb
pop
push
js
xchg
ret
mov
add
add
mov
lock
sbb
inc
js
jle
push
xor
out
adc
or
cmp
and
dec
sti
jo
fcomp
xlat
sahf
in
test
in
sbb
(bad)
adc
inc
and
inc
push
in
js
inc
adc
inc
sbb
push
mov
xor
call
sbb
mov
jb
push
imul
cmps
sub
je
dec
out
jle
sub
scas
test
add
out
add
neg
(bad)
fcom
(bad)
inc
add
add
popa
push
rcr
pop
iret
xchg
push
add
into
(bad)
dec
and
add
add
in
dec
(bad)
(bad)
inc
inc
movs
sbb
ins
adc
and
aas
inc
lds
(bad)
dec
add
add
mov
outs
(bad)
jmp
in
lahf
movs
adc
cwde
jmp
adc
mov
jg
mov
and
imul
call
sbb
je
dec
lods
je
hlt
jmp
xor
inc
(bad)
popf
inc
pop
add
neg
inc
mov
jp
lahf
loopne
jmp
sub
fmul
dec
jmp
and
inc
xchg
arpl
cmp
adc
mov
cld
(bad)
push
aas
push
sbb
int
clc
jmp
(bad)
xor
gs
sub
xchg
xor
or
push
push
fadd
mov
retf
add
pop
inc
enter
adc
test
popa
jne
sbb
int3
and
or
inc
cmp
(bad)
call
imul
(bad)
dec
sbb
(bad)
jl
stc
test
jae
jmp
cmp
mov
nop
cwde
aaa
fucompp
xchg
movs
pop
test
xchg
(bad)
(bad)
cmp
dec
retf
stos
(bad)
dec
call
ret
add
fsubr
mov
mov
pusha
stos
(bad)
jmp
cs
sub
inc
jecxz
mov
stc
loopne
jo
push
mov
xchg
iret
adc
aad
sbb
cdq
inc
push
enter
call
nop
aad
jge
ss
dec
aad
and
add
push
(bad)
call
add
pop
mov
(bad)
inc
lock
popa
les
out
out
mov
aam
dec
test
and
comiss
icebp
inc
jle
and
adc
hlt
rcr
jecxz
xchg
in
adc
ja
and
adc
das
inc
and
adc
or
call
add
push
adc
add
pop
and
add
daa
inc
jle
ja
and
push
leave
add
sbb
ja
sbb
call
nop
mov
(bad)
(bad)
push
jmp
cmp
mov
sub
dec
scas
cmp
push
mov
(bad)
inc
enter
(bad)
dec
(bad)
call
ror
cdq
loopne
dec
repnz
pop
enter
jmp
adc
fisttp
lea
sub
adc
add
push
(bad)
jecxz
dec
push
retf
sub
adc
scas
cld
sub
(bad)
mov
jle
and
loop
adc
(bad)
(bad)
inc
add
add
ud0
aad
(bad)
jmp
fstp
add
or
add
or
repnz
fwait
loopne
jmp
add
stos
add
add
(bad)
sar
cmp
ret
iret
dec
sbb
jmp
lea
pop
repz
in
add
push
sub
in
pop
jl
push
lea
and
ror
adc
leave
push
shl
add
pop
adc
xor
sub
or
add
cmp
and
fdivr
add
lds
(bad)
push
(bad)
dec
push
or
leave
cdq
in
fcomp
mov
add
and
add
das
xchg
adc
jle
add
add
in
adc
add
add
stc
adc
push
(bad)
(bad)
call
call
adc
add
dec
pop
add
jmp
sub
adc
idiv
(bad)
stc
adc
cld
or
(bad)
jmp
lea
cmp
and
xor
arpl
ja
mov
loop
movs
pushf
or
into
or
cdq
nop
inc
add
add
js
add
pop
cli
fwait
bound
(bad)
scas
enter
pop
cmps
xor
fsub
and
data16
add
ret
inc
pushf
movs
sub
into
dec
dec
repnz
mov
cmc
or
pop
(bad)
test
adc
aam
cld
push
cmp
push
mov
mov
cmc
(bad)
xor
in
addr16
push
jg
sbb
cwde
in
js
mov
retf
aas
(bad)
shl
fbld
lods
hlt
fdivr
xchg
fld
test
jo
cld
retf
mov
ret
mov
and
retf
call
cs
mov
or
fadd
clc
mov
clc
push
lock
in
jb
lds
xchg
retf
scas
fmul
mov
pop
sbb
lahf
jge
jmp
jge
lods
je
(bad)
repz
test
std
in
jl
pop
hlt
repnz
mov
jmp
and
ret
pop
ret
movs
rcr
outs
aaa
test
mov
call
in
loope
sub
popa
hlt
adc
call
repnz
in
and
fsubp
bnd
call
xor
stos
adc
repnz
jne
jmp
xchg
mov
lods
jmp
push
nop
dec
adc
jns
xor
xchg
imul
das
jmp
push
dec
dec
mov
jmp
push
mov
je
icebp
ds
mov
adc
mov
mov
in
pop
repz
loop
fmul
pop
add
fiadd
jmp
aad
test
inc
in
out
pop
into
mov
xchg
ja
jp
xor
pop
pop
repnz
dec
pop
in
jmp
nop
lods
je
hlt
icebp
lock
ja
(bad)
jmp
stc
jns
fidiv
(bad)
jle
and
mov
jns
and
jecxz
ja
nop
retf
rol
mov
(bad)
nop
ds
mov
mov
inc
retf
dec
ds
lea
(bad)
mov
jp
and
sub
jmp
pop
imul
sub
mov
push
imul
fidivr
das
sub
stc
aad
push
(bad)
test
or
jl
imul
adc
aam
fisttp
cmp
loop
fadd
test
mov
mov
mov
adc
mov
jns
push
mov
push
std
cwde
inc
xchg
xchg
xchg
inc
and
test
jnp
in
sub
dec
or
sub
pop
lods
sbb
dec
inc
and
add
out
ja
rol
ror
stc
mov
stc
call
ret
repz
lds
xchg
nop
mov
lock
ss
push
mov
je
mov
imul
dec
in
xchg
push
fild
inc
sub
int3
aas
sbb
sub
pop
mov
add
xchg
pop
cmp
pop
jg
mov
jo
pop
test
xor
(bad)
jmp
xchg
adc
mov
mov
std
add
sub
aas
aam
jns
cmps
pop
lahf
int3
loopne
rol
rcl
cmp
test
mov
or
mov
sahf
not
vpshufb
push
and
inc
repz
out
ins
(bad)
pop
inc
cmps
stc
cmp
es
add
aad
lahf
out
sahf
mov
mov
jmp
mov
push
jl
push
sar
repz
xchg
cmps
ret
iret
repz
or
sbb
out
sahf
out
dec
pop
ins
sbb
mov
cmp
repz
sub
pusha
repz
repz
movs
mov
iret
loopne
shr
and
jns
out
out
shr
push
sar
mov
jb
shl
out
sahf
push
inc
sbb
div
cmp
jnp
push
(bad)
retf
sar
xchg
sbb
or
fsub
out
ds
aam
rcr
shl
mov
jle
fs
push
out
repz
inc
xor
or
fcmove
in
sahf
test
movs
jl
dec
repz
fimul
push
jns
cmps
stc
cld
fld1
(bad)
(bad)
mov
test
mov
iret
repz
adc
pop
dec
mov
jns
fdiv
pusha
fst
sahf
jb
cmp
shr
cmp
repz
and
pop
sub
mov
test
fdiv
inc
sub
push
add
(bad)
ins
mov
xor
pop
push
inc
ja
push
or
iret
rep
adc
push
adc
adc
add
je
iret
repz
jae
or
cdq
push
pusha
push
add
and
shl
aas
xchg
fiadd
adc
fild
dec
add
sub
dec
hlt
add
movs
mov
stos
(bad)
pop
push
lock
(bad)
push
or
adc
mov
pusha
fild
add
shl
pusha
mov
test
ja
lahf
je
pop
loope
shr
test
add
push
mov
sub
pop
test
jg
add
add
rol
aas
push
call
inc
jno
iret
xor
mov
adc
push
pop
xlat
sbb
mov
gs
bound
ins
fs
mov
das
or
lea
sbb
or
or
cvtpi2ps
fsub
pop
push
cmp
repz
call
aam
mov
rep
pushf
ss
test
mov
iret
jnp
int3
sub
pushf
push
jl
sar
dec
je
push
jo
xor
repz
fs
pop
push
dec
dec
cmp
repz
inc
cmp
xor
sahf
out
xor
mov
sub
and
repz
and
adc
or
iret
repz
add
cld
xor
jns
out
hlt
lock
call
out
(bad)
int3
rcr
xchg
mov
mov
jnp
mov
push
aam
out
repz
xchg
jo
sub
fisubr
repz
cmp
lock
mov
repz
test
jl
xor
repz
ds
out
pushf
js
test
mov
jle
cmps
or
mov
adc
add
mov
outs
dec
jno
sar
inc
and
adc
ja
or
push
adc
test
push
seto
mov
jle
packsswb
das
ja
jae
popa
js
xor
push
mov
xor
adc
cmps
data16
sbb
jb
or
pop
fisubr
jmp
xor
sub
push
pop
pop
cdq
ror
pop
fnstenv
je
sub
test
mov
fdivr
(bad)
cmp
js
push
sbb
shl
cwde
adc
jbe
sbb
(bad)
jg
(bad)
mov
mov
test
cmps
mov
and
fs
ins
rcl
sbb
mov
(bad)
outs
popa
sbb
ja
adc
ds
mov
idiv
adc
rcl
sub
enter
int3
sar
sbb
mov
jbe
sbb
int
jae
mov
and
outs
xor
jmp
aaa
or
stos
retf
retf
dec
mov
repnz
push
ss
jae
fs
cmp
(bad)
dec
push
push
inc
inc
push
jp
arpl
cmp
bound
jo
pop
rcl
js
pop
inc
push
ja
add
dec
outs
inc
fidivr
mov
call
push
je
test
and
or
inc
push
(bad)
or
adc
push
inc
dec
push
sub
das
imul
mov
push
fisub
push
sbb
fsubr
push
adc
inc
mov
mov
mov
pusha
pop
retf
lds
daa
pusha
sbb
pop
dec
cmp
dec
sti
aas
and
push
outs
push
jns
and
sbb
ret
shl
and
inc
popa
shl
and
shl
pop
inc
popa
mov
inc
pop
mov
mov
xchg
(bad)
ror
cmp
jne
and
push
jnp
inc
clc
addr16
or
jmp
cmps
and
cmp
iret
jp
jne
outs
adc
mov
cdq
jne
and
or
mov
xlat
rcl
js
xchg
xor
fs
jbe
and
loope
xchg
mov
(bad)
push
jmp
mov
xlat
fmul
test
out
cmps
les
adc
add
cs
mov
clc
popf
push
sbb
das
aas
(bad)
jb
dec
es
clc
pop
ret
dec
les
jno
jae
cs
imul
push
outs
push
mov
pop
xor
jb
rol
push
nop
daa
gs
sti
loopne
addps
outs
pusha
dec
ins
adc
add
inc
ss
(bad)
mov
sub
sub
sub
xor
xor
xor
xor
pop
and
icebp
mov
xor
fidiv
inc
cmp
aam
mov
ja
pop
add
inc
mov
inc
mov
ja
pop
pop
cs
push
js
xchg
jne
xchg
das
popa
add
cld
dec
fs
cmp
adc
mov
inc
cs
enter
aaa
int
inc
outs
push
cs
mov
pop
adc
inc
(bad)
(bad)
mov
mov
inc
jl
sbb
pop
dec
mov
push
dec
push
pop
fs
mov
stos
test
pop
enter
or
or
xor
add
add
cmps
and
jb
pop
add
outs
and
jb
add
and
mov
push
push
loop
xor
sbb
or
jb
jb
or
or
jb
jb
or
add
add
cld
and
and
and
div
jnp
sub
inc
popa
ficomp
and
and
mov
jns
out
dec
int3
sub
ins
sahf
out
sahf
in
sbb
pop
fdivr
sahf
out
mov
out
sahf
out
ret
bound
adc
sahf
out
mov
repnz
dec
retf
push
out
sahf
jmp
sahf
out
mov
out
sahf
out
(bad)
cmps
data16
out
sahf
out
xchg
push
(bad)
ss
out
mov
test
out
sahf
out
into
cs
outs
sahf
out
sahf
out
push
sahf
pop
fidivr
jns
out
mov
out
sahf
out
shl
popa
sahf
out
sahf
loope
xchg
push
shl
jns
out
mov
icebp
or
dec
leave
sub
sahf
jmp
cmp
out
mov
out
sahf
out
lds
jns
in
xchg
push
aad
jns
out
mov
cmc
or
out
int
lods
ins
sahf
out
sahf
in
sbb
call
adc
or
repz
imul
iret
repz
shl
xor
repz
repz
repz
repz
repz
retf
sub
stos
stos
imul
cmp
jmp
sbb
repz
repz
fwait
pop
pop
fcmovne
repz
fstp
cmp
repz
sti
sti
pop
pop
repz
xrelease
repz
(bad)
daa
daa
cmps
cmps
addr16
repz
out
pop
pop
repz
repz
xchg
push
push
xlat
iret
repz
xlat
aaa
aaa
mov
ja
iret
repz
div
(bad)
psllq
repz
(bad)
dec
dec
iret
iret
repz
iret
das
das
scas
scas
outs
cmp
repz
out
out
pop
pop
repz
repz
lahf
pop
pop
(bad)
repz
fistp
aas
mov
repz
(bad)
jmp
jns
out
push
and
push
xor
jns
out
or
push
sbb
js
inc
jns
out
and
adc
xor
out
out
add
and
jecxz
iret
ror
repz
or
add
repz
repz
add
or
repz
sbb
push
push
push
add
repz
or
add
repz
psrad
sbb
pop
icebp
daa
daa
iret
jnp
add
or
or
jb
or
jb
pop
or
jb
add
in
scas
or
adc
adc
adc
cs
sbb
dec
cs
mov
sbb
sub
cs
icebp
jecxz
addr16
ss
adc
adc
inc
cs
adc
push
pop
sbb
call
outs
add
mov
xchg
push
jg
push
or
jns
out
adc
sbb
out
sahf
and
xor
inc
push
jns
out
pusha
jo
mov
out
loopne
das
xchg
push
and
add
les
das
jbe
loopne
push
pop
or
sbb
xor
push
mov
in
pusha
ffreep
jns
sbb
xchg
and
xor
cmp
pop
outs
mov
xor
and
adc
imul
fs
xor
add
pop
push
or
loop
cmp
xlat
push
adc
pop
into
pop
into
sub
add
cmp
push
(bad)
jae
jo
push
push
mov
jb
iret
aaa
add
adc
jo
jb
adc
sub
dec
int
pop
or
test
or
push
popa
int
push
and
rcr
fadd
int3
loope
inc
add
push
add
add
adc
sbb
and
xor
inc
add
sahf
ja
sbb
iret
push
add
sbb
out
sbb
sbb
inc
pusha
dec
push
push
xchg
jae
jge
mov
pop
push
jo
test
shl
js
pusha
and
idiv
jns
push
push
pop
sbb
fiadd
cmp
cmp
add
pop
adc
jns
out
mov
mov
sar
add
data16
jle
cmp
repz
xor
or
repz
add
inc
repz
jmp
call
cwde
add
push
out
cmp
jl
fcomp
out
sahf
sub
or
dec
clc
jns
out
add
mov
out
xor
or
out
sahf
and
sahf
out
pop
pop
sbb
jp
aam
push
out
sahf
sub
stc
out
add
or
xor
ss
pcmpgtd
jns
out
lods
push
xchg
out
sahf
out
pop
push
pushf
arpl
jns
jle
fcomp
push
outs
cs
idiv
cld
push
jae
push
(bad)
adc
daa
iret
xor
popa
and
add
cmp
iret
sbb
cmp
jae
sub
daa
iret
dec
repnz
es
repz
shl
retf
cmp
gs
leave
repz
cmp
pop
sbb
iret
jge
fisubr
leave
repz
mov
repz
cmp
push
adc
jae
repz
leave
(bad)
arpl
cmps
add
pushf
cmp
add
sbb
cmp
imul
iret
repz
and
pop
ja
iret
repz
cmp
addr16
scas
pop
iret
leave
repz
inc
out
pop
pop
leave
repz
cmp
jg
fdivp
mov
das
mov
dec
pop
enter
inc
mov
loope
leave
test
mov
pop
jb
pop
leave
test
and
jb
stc
lds
in
test
aad
pop
jb
pop
cmc
int
and
jb
in
popf
jb
pop
jb
mov
inc
ret
mov
jecxz
rcl
leave
test
retf
and
jb
stos
jmp
and
jb
fstp
sti
(bad)
enter
cmps
out
pop
enter
mov
and
jb
iret
scas
jb
pop
jb
lahf
fisttp
(bad)
jle
sahf
je
push
add
adc
dec
add
add
fisub
pop
sbb
add
adc
es
add
test
sbb
pop
push
imul
add
xor
push
xor
das
inc
outs
lods
(bad)
xor
(bad)
dec
out
push
and
inc
xor
push
inc
bound
inc
adc
adc
cmp
sar
dec
sbb
jmp
cmp
and
push
les
pop
sbb
sub
and
mov
adc
out
imul
push
nop
in
pop
and
pop
push
or
push
repnz
movs
cmps
ins
pop
add
jo
or
jl
ds
pop
add
and
add
in
pop
cmps
adc
add
add
outs
or
adc
(bad)
(bad)
push
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
(bad)
(bad)
(bad)
jns
jmp
rcl
mov
sub
mov
sbb
(bad)
(bad)
jmp
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
(bad)
jmp
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
(bad)
call
adc
imul
addr16
add
aam
(bad)
(bad)
(bad)
dec
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
(bad)
(bad)
(bad)
inc
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
(bad)
(bad)
call
xchg
mov
mov
or
or
and
or
adc
(bad)
(bad)
call
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
xchg
(bad)
inc
movs
in
lahf
xor
mov
js
stc
mov
jmp
(bad)
dec
xchg
sbb
push
sub
xchg
hlt
push
imul
(bad)
call
test
(bad)
ins
jnp
add
shl
adc
cmc
(bad)
(bad)
(bad)
inc
fnstenv
adc
mov
mov
bound
ficom
gs
aam
adc
popa
mov
into
pop
pop
mov
mov
inc
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
xor
(bad)
(bad)
(bad)
dec
pusha
fidiv
add
in
add
pop
dec
or
cmp
add
daa
(bad)
call
and
and
test
or
mov
(bad)
call
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
(bad)
(bad)
(bad)
jmp
cmp
or
mov
call
jmp
fild
(bad)
(bad)
inc
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
(bad)
(bad)
(bad)
push
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
(bad)
(bad)
jmp
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
(bad)
(bad)
(bad)
call
mov
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
(bad)
(bad)
(bad)
dec
mov
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
(bad)
(bad)
(bad)
(bad)
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
(bad)
(bad)
(bad)
jmp
es
lds
or
sub
mov
cmps
call
ret
shl
(bad)
(bad)
(bad)
call
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
(bad)
jg
adc
or
adc
mov
jnp
sbb
xchg
or
(bad)
jmp
mov
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
or
ja
outs
ja
mov
out
cli
jo
(bad)
call
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
(bad)
jg
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
mov
push
scas
fcomp
fldenv
fild
inc
scas
mov
fidivr
mov
jmp
(bad)
(bad)
call
mov
retf
mov
cmps
mov
sar
sub
push
mov
(bad)
(bad)
jmp
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
xor
sbb
push
sub
adc
jge
cmps
pop
push
(bad)
(bad)
(bad)
(bad)
call
fxch
dec
mov
out
cli
retf
fxtract
jecxz
dec
mov
dec
jle
mov
sub
(bad)
(bad)
call
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
mov
add
(bad)
sub
(bad)
dec
ss
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
jg
(bad)
push
mov
out
repz
gs
fisubr
inc
inc
sub
imul
(bad)
jmp
std
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
daa
mov
sub
pop
ret
xchg
sbb
xor
pop
nop
sti
mov
fnsave
jg
fisubr
cmp
jns
jae
dec
cli
sbb
cli
(bad)
inc
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
adc
(bad)
(bad)
(bad)
mov
and
or
hlt
mov
or
xchg
lea
or
int3
pop
dec
mov
mov
xor
inc
mov
outs
retf
push
pop
mov
mov
lea
loopne
dec
push
cwde
xlat
ficom
test
loope
xchg
retf
les
(bad)
(bad)
(bad)
push
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
cmc
dec
and
cmp
dec
mov
mov
and
sbb
dec
cmps
xor
mov
lods
out
sar
mov
adc
stos
and
leave
(bad)
(bad)
(bad)
(bad)
jmp
sti
push
jns
das
mov
and
je
or
repnz
(bad)
push
fisub
xor
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
mov
push
mov
test
cwde
cmp
test
mov
mov
scas
adc
out
pop
(bad)
(bad)
(bad)
dec
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
ss
(bad)
(bad)
(bad)
inc
out
mov
mov
movs
test
jno
mov
ja
(bad)
ins
pop
push
dec
sub
call
ss
sub
add
cwde
mov
pop
xor
mov
push
mov
push
(bad)
push
hlt
out
les
ret
xchg
fdecstp
jmp
lea
inc
xor
pop
icebp
(bad)
fist
dec
jo
outs
sbb
sub
loope
fisub
lds
push
call
push
and
dec
in
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
(bad)
(bad)
call
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
lods
(bad)
(bad)
push
loope
int3
mov
stc
dec
xlat
loopne
adc
mov
jo
popf
mov
test
(bad)
(bad)
call
add
ins
cmp
les
adc
sub
dec
add
sar
push
or
(bad)
(bad)
inc
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
bound
fcom
into
pop
(bad)
(bad)
(bad)
dec
dec
push
jle
push
xchg
sub
int3
bound
mov
xor
call
mov
(bad)
push
jle
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
(bad)
mov
gs
adc
jns
movs
dec
mov
movs
daa
sub
dec
dec
repnz
in
and
out
mov
shl
es
or
push
shl
adc
out
sar
mov
gs
pop
jle
push
(bad)
(bad)
push
or
jbe
dec
div
lahf
adc
jb
and
(bad)
push
std
push
push
add
test
pop
mov
mov
ret
mov
lea
(bad)
inc
(bad)
cmp
(bad)
test
or
stc
sbb
sub
call
inc
mov
inc
leave
in
push
ja
pop
sub
das
sbb
popa
in
sbb
fild
sbb
repnz
adc
dec
jae
adc
cmp
and
(bad)
(bad)
push
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
xchg
push
cmp
cmp
push
add
outs
jge
aaa
ss
fidiv
pushf
xor
mov
xchg
xor
imul
fld
adc
nop
in
and
(bad)
jmp
fsub
leave
pop
sub
and
mov
(bad)
(bad)
(bad)
jmp
adc
mov
sub
fidivr
sub
ds
sbb
sub
call
lods
mov
call
pop
cmp
xor
jb
and
(bad)
(bad)
(bad)
call
jb
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
cli
mov
retf
jp
retf
mov
mov
fdivrp
cmp
nop
clc
push
in
es
xchg
pop
in
ja
add
push
or
(bad)
(bad)
(bad)
(bad)
out
je
arpl
sub
shr
aam
cmps
gs
fs
imul
add
xlat
dec
pop
mov
outs
jns
dec
cld
arpl
dec
retf
(bad)
(bad)
(bad)
dec
sbb
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
(bad)
(bad)
call
inc
sub
dec
inc
sbb
push
xor
mov
mov
mov
clc
push
mov
stos
cmp
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
(bad)
(bad)
(bad)
mov
sti
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
(bad)
call
out
fsin
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
or
(bad)
jmp
loop
call
mov
stos
jmp
pop
imul
fcom
cld
(bad)
(bad)
(bad)
call
push
push
jmp
sbb
sbb
sti
inc
les
clc
dec
jmp
ret
(bad)
(bad)
jmp
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
aaa
mov
dec
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
(bad)
(bad)
push
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
(bad)
(bad)
(bad)
(bad)
(bad)
jle
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
retf
lahf
lds
push
leave
enter
pop
inc
int3
inc
ins
xchg
jg
dec
sbb
ror
mov
xchg
ja
ins
nop
cs
sub
pushf
ds
(bad)
(bad)
jmp
xchg
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
(bad)
(bad)
(bad)
push
cdq
dec
mov
repz
dec
mov
or
(bad)
in
popf
inc
fcomi
inc
mov
mov
(bad)
(bad)
(bad)
dec
pop
and
push
adc
fadd
arpl
pop
xchg
shl
test
(bad)
mov
data16
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
(bad)
(bad)
(bad)
jmp
cmps
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
(bad)
(bad)
(bad)
call
push
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
jmp
push
not
xor
mov
ficomp
mov
aaa
cld
(bad)
(bad)
gs
stos
out
scas
mov
push
xchg
bound
pop
imul
xor
dec
or
loopne
outs
add
(bad)
(bad)
(bad)
call
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
(bad)
(bad)
jnp
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
iret
sbb
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rol
xchg
(bad)
call
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
iret
aas
sub
in
(bad)
(bad)
inc
ja
push
or
mov
sub
les
and
mov
imul
jg
or
(bad)
jge
aad
shl
(bad)
(bad)
jmp
mov
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
(bad)
ffreep
adc
pop
aas
test
mov
sbb
mov
jbe
push
retf
pop
jg
test
(bad)
(bad)
(bad)
inc
shl
pop
mov
sbb
pop
mov
adc
shl
cmp
das
retf
jnp
dec
ja
(bad)
call
(bad)
push
add
dec
mov
outs
(bad)
jmp
jle
data16
sbb
ficom
daa
mov
mov
out
icebp
(bad)
(bad)
push
sbb
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
(bad)
(bad)
fild
aas
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
std
(bad)
mov
fwait
push
add
in
mov
dec
leave
xor
inc
arpl
push
aas
imul
adc
push
std
(bad)
(bad)
dec
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
dec
and
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
(bad)
call
pusha
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
sub
call
pop
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
adc
add
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
clc
(bad)
jmp
scas
dec
rol
std
shl
pop
xchg
idiv
sub
sbb
repnz
and
(bad)
call
sbb
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
(bad)
(bad)
inc
push
jmp
xor
(bad)
and
push
mov
rol
outs
(bad)
(bad)
(bad)
push
call
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
cmp
jbe
xor
fcom
add
scas
(bad)
(bad)
(bad)
dec
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
jg
(bad)
inc
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
mov
(bad)
(bad)
(bad)
jmp
lock
imul
ss
test
(bad)
cs
mov
(bad)
(bad)
fsubrp
sahf
adc
mov
loope
into
cs
out
add
add
jecxz
neg
pop
jmp
icebp
and
sub
aam
into
mov
iret
test
jg
(bad)
(bad)
call
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
or
mov
ja
pop
mov
jle
cmp
pushf
in
adc
add
(bad)
(bad)
(bad)
call
cmps
push
data16
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
(bad)
(bad)
push
inc
sub
neg
jmp
pop
test
or
xchg
popa
mov
(bad)
mov
ja
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
(bad)
(bad)
jmp
mov
jns
mov
push
xchg
rcr
mov
mov
sub
jl
out
(bad)
(bad)
(bad)
jmp
xchg
sbb
mov
repnz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
(bad)
jg
mov
sub
push
imul
mov
in
adc
pop
dec
arpl
(bad)
(bad)
inc
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
cmp
in
dec
(bad)
(bad)
(bad)
inc
inc
ror
mov
xor
mov
ins
fstp
stc
inc
xor
ins
jecxz
inc
jne
(bad)
or
pop
fnstenv
lods
push
mov
enter
mov
cld
(bad)
jmp
mov
mov
mov
and
mov
movs
movaps
mov
(bad)
jmp
sbb
fnstenv
das
outs
jl
pop
push
sbb
cmp
(bad)
(bad)
call
cwde
shl
mov
jno
test
lahf
mov
sub
add
(bad)
(bad)
out
and
or
sbb
or
sub
out
pop
add
push
hlt
jmp
add
fdiv
bound
dec
ins
push
xchg
in
(bad)
(bad)
(bad)
call
add
shl
les
mov
(bad)
adc
mov
jl
fstp
mov
sub
repz
aam
gs
mov
test
(bad)
(bad)
mov
add
xor
dec
fbld
xlat
movs
rol
ins
rcl
hlt
sti
inc
imul
(bad)
jmp
cld
lods
mov
pusha
mov
jae
add
pop
fisttp
jno
daa
mov
inc
stos
mov
or
xchg
mov
and
mov
aam
into
popa
in
(bad)
(bad)
(bad)
call
stc
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
and
mov
loop
mov
call
ja
add
jmp
fcom
and
or
xchg
cmp
pop
test
push
iret
or
(bad)
(bad)
mov
sahf
mov
setae
(bad)
(bad)
(bad)
jmp
push
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
sar
(bad)
(bad)
jmp
loopne
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
sar
xchg
push
fadd
les
repnz
sar
addr16
adc
(bad)
push
ss
fmul
sbb
dec
add
jg
pusha
mov
pusha
out
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
add
(bad)
(bad)
call
mov
lds
or
sub
add
xlat
jmp
sub
(bad)
(bad)
(bad)
call
sbb
in
arpl
es
mov
or
ss
jb
(bad)
dec
adc
mov
sub
(bad)
call
(bad)
xchg
ror
repnz
mov
fcmovnu
and
aam
inc
push
(bad)
(bad)
clc
pop
fiadd
int
mov
ja
sbb
out
movq
pushw
cmp
add
(bad)
gs
(bad)
clc
(bad)
(bad)
(bad)
(bad)
jmp
rcl
ins
iret
inc
mov
or
adc
ret
es
shl
(bad)
(bad)
call
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
mov
sahf
lds
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
add
mov
push
xchg
push
ficom
and
addr16
jp
les
mov
sub
xchg
mov
ins
std
dec
mov
mov
sub
(bad)
mov
inc
xor
bound
lods
lds
pop
cmps
xchg
xchg
(bad)
(bad)
(bad)
(bad)
dec
(bad)
dec
cli
out
call
retf
lods
mov
or
scas
jle
sahf
sub
(bad)
out
xor
dec
ret
push
fldenv
scas
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
(bad)
(bad)
jmp
adc
cwde
mov
add
sbb
sbb
ss
call
(bad)
(bad)
(bad)
jmp
inc
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
(bad)
(bad)
(bad)
shl
ret
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
(bad)
(bad)
jmp
sub
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
(bad)
(bad)
jg
sub
mul
sbb
jne
pop
mov
sti
push
test
jns
mov
add
jae
push
dec
push
(bad)
(bad)
call
jge
fisubr
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
mov
(bad)
(bad)
(bad)
call
ret
lds
or
xchg
into
pop
int3
add
inc
xlat
xor
cli
(bad)
jg
lds
ret
mov
ins
adc
xchg
xchg
push
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
push
push
adc
adc
jo
cmp
std
imul
(bad)
dec
or
add
lahf
loop
cmps
int3
and
mov
loope
mov
shr
lahf
(bad)
(bad)
inc
mov
leave
dec
and
rcl
jmp
ja
das
aas
jns
call
dec
mov
or
je
adc
xor
dec
lea
pusha
jle
(bad)
(bad)
(bad)
push
out
repz
(bad)
std
ret
rcl
cmp
call
js
cmps
gs
(bad)
(bad)
(bad)
cmp
sbb
or
retf
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
(bad)
(bad)
dec
inc
and
shr
ja
adc
out
movs
add
(bad)
(bad)
(bad)
inc
pop
mov
cwde
pop
ins
(bad)
adc
ss
daa
mov
pushf
add
mov
scas
bound
(bad)
lds
(bad)
out
hlt
push
out
dec
(bad)
dec
xchg
aad
pop
mov
test
xor
imul
retf
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
stos
movs
nop
cld
arpl
lods
mov
in
test
(bad)
push
test
es
scas
mov
(bad)
repz
cmp
call
imul
(bad)
push
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
fsub
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
add
xlat
in
(bad)
(bad)
out
push
scas
xchg
adc
lea
or
mov
pop
inc
sbb
ins
je
(bad)
(bad)
(bad)
(bad)
aas
les
push
push
test
cwde
inc
jle
test
ror
cmp
hlt
pop
mov
(bad)
(bad)
(bad)
jmp
fsub
push
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
(bad)
call
sub
sub
xchg
mov
xchg
push
mov
repz
inc
jecxz
(bad)
jmp
lods
ins
dec
xchg
outs
jne
mov
call
or
push
aas
sub
jns
(bad)
mov
sbb
mov
daa
repnz
mov
mov
(bad)
jmp
out
and
loope
or
mov
jle
shl
imul
inc
(bad)
call
ja
fsub
push
jle
hlt
out
push
or
test
mov
adc
add
call
xor
push
xor
inc
test
outs
add
pop
lods
test
push
retf
ret
inc
jl
add
adc
psrlw
(bad)
or
push
out
loope
sbb
call
jmp
xchg
push
or
cmp
sbb
mov
call
push
pusha
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwde
call
mov
(bad)
(bad)
(bad)
jmp
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
(bad)
(bad)
(bad)
dec
aas
inc
out
cmp
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
(bad)
push
xor
test
test
xchg
aad
xor
imul
adc
frstor
in
mov
(bad)
mov
aam
es
dec
dec
and
cdq
and
and
adc
(bad)
js
sub
mov
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
(bad)
call
out
jae
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
(bad)
(bad)
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
xchg
cmc
mov
xchg
cli
fisub
nop
jmp
inc
pop
push
repz
arpl
popa
sub
(bad)
(bad)
jmp
xlat
aam
fs
mov
dec
xlat
retf
and
mov
mov
fs
arpl
dec
sbb
retf
(bad)
(bad)
(bad)
dec
xchg
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
(bad)
(bad)
inc
out
inc
mov
push
xor
addr16
jne
ds
mov
or
ror
(bad)
call
adc
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
(bad)
(bad)
call
inc
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
movs
cmp
(bad)
(bad)
fcomip
pop
out
fldcw
jp
add
out
in
paddsb
(bad)
(bad)
(bad)
push
popa
call
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
(bad)
(bad)
inc
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
(bad)
(bad)
call
hlt
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
fstp
(bad)
(bad)
(bad)
jmp
cmp
jno
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
(bad)
push
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
(bad)
(bad)
inc
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
call
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
in
(bad)
(bad)
call
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
jg
(bad)
inc
clc
sahf
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
dec
call
jge
mov
pop
mov
mov
sbb
neg
mov
or
mov
push
mov
cmp
fcmovbe
test
cmps
arpl
aad
or
test
mov
into
stos
(bad)
(bad)
(bad)
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
jbe
(bad)
(bad)
(bad)
push
sub
mov
jl
stos
mov
les
mov
sbb
mov
cmps
mov
inc
fisttp
cmpxchg
mov
punpckldq
xlat
and
adc
test
fucomip
(bad)
call
mov
pop
pop
fidivr
mov
dec
(bad)
(bad)
dec
enter
scas
out
(bad)
bound
xor
xlat
cmp
fbld
mov
loopne
xlat
add
mov
fucom
fbstp
pop
(bad)
jg
movs
arpl
push
lahf
call
adc
jno
(bad)
(bad)
(bad)
fistp
enter
lods
jne
or
into
outs
es
lods
jg
sub
mov
(bad)
(bad)
(bad)
sti
xchg
rcr
mov
(bad)
and
xor
pop
or
addr16
(bad)
(bad)
push
das
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
(bad)
(bad)
push
jmp
jecxz
in
fmul
lock
mov
pop
adc
xor
loop
push
dec
jg
outs
test
or
sar
(bad)
call
xor
and
lds
sub
mov
inc
and
(bad)
xchg
test
call
neg
test
pop
xor
not
adc
iret
push
retf
mov
loope
ret
pusha
test
jo
out
pop
mov
test
fild
rol
out
imul
ret
ja
imul
setl
(bad)
(bad)
push
(bad)
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
mov
clc
sub
mov
cmp
cmp
jmp
jg
sar
xchg
outs
pop
hlt
cmp
test
das
aas
mov
xchg
pop
in
(bad)
(bad)
(bad)
push
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
(bad)
(bad)
(bad)
push
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
push
jb
(bad)
(bad)
jmp
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
(bad)
inc
inc
daa
popf
and
pop
jle
js
mov
xlat
scas
xor
in
pop
mov
push
in
cld
mov
pop
mov
in
sbb
bound
and
inc
sbb
jmp
push
mov
nop
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
(bad)
jmp
or
cmp
movs
add
sub
scas
cmc
(bad)
(bad)
call
xor
jbe
mov
mov
sbb
ror
sar
add
push
pop
icebp
inc
movs
not
cmp
and
dec
imul
cmc
xlat
jle
pop
cli
(bad)
jmp
(bad)
mov
ret
push
jp
jmp
fnop
add
fbstp
jmp
stc
popa
call
rcr
mov
ss
add
sbb
into
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
test
sbb
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
inc
std
lods
cmp
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
sub
(bad)
xor
es
jmp
fdiv
(bad)
inc
mov
lock
bound
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
(bad)
(bad)
call
jno
xor
push
ja
ss
adc
out
mov
loopne
jbe
(bad)
(bad)
(bad)
call
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
(bad)
(bad)
inc
es
jl
mov
pop
sbb
mov
repz
in
test
adc
push
jmp
mov
ret
add
cmp
cdq
in
or
call
xchg
cmps
fidiv
sub
fisubr
sar
lock
out
mov
mov
(bad)
(bad)
jmp
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
dec
or
sub
mov
pop
cmp
test
pop
outs
arpl
out
pop
adc
in
dec
adc
gs
mov
rol
mov
mov
pop
jbe
sar
inc
inc
push
push
dec
push
pop
dec
dec
push
dec
inc
shl
pop
xchg
mov
daa
xchg
and
test
ins
add
push
push
push
mov
cmp
push
push
pop
adc
and
lea
lea
or
pop
pop
push
push
dec
dec
hlt
bound
jge
pop
inc
push
sub
sub
sbb
je
je
jae
jae
push
sub
outs
cmps
cmp
and
cmp
bound
sbb
loopne
frstor
cs
(bad)
push
mov
and
or
fcmovnu
inc
dec
outs
pop
inc
push
scas
cmp
pop
pop
xor
in
std
mov
into
les
add
test
in
sub
push
ins
adc
pop
and
inc
movs
jb
add
xor
mov
xlat
mov
sub
mov
dec
call
mov
repnz
cli
xor
mov
and
pop
inc
mov
sti
mov
ins
push
jo
aaa
jnp
add
mov
sub
cmp
(bad)
aas
xchg
lock
aam
mov
mov
aam
rcl
ja
daa
adc
pop
cmp
ss
dec
xchg
out
pop
jmp
das
push
mov
dec
(bad)
outs
add
(bad)
(bad)
jg
cmp
ins
data16
xchg
adc
jne
imul
popa
and
mov
inc
das
and
lahf
dec
mov
dec
gs
inc
ins
outs
sub
movs
dec
inc
std
mov
movs
cmp
mov
cs
push
pop
test
movs
jg
and
gs
xor
dec
iret
pusha
sub
jae
call
push
adc
dec
adc
xor
cmp
scas
out
xor
inc
inc
push
mov
xor
xor
and
mov
lock
and
rcr
mov
mov
and
cli
data16
jae
arpl
xor
dec
pop
inc
ss
mov
sahf
addr16
imul
ins
aas
pop
pop
jmp
adc
ds
and
mov
or
jae
outs
outs
add
popa
mov
sub
mov
cli
mov
pop
popa
push
addr16
popf
add
inc
in
jbe
inc
repnz
aas
not
adc
hlt
cmps
inc
aaa
cmc
inc
dec
push
add
test
xchg
ss
adc
cli
pop
mov
jnp
inc
xor
inc
cmp
xor
adc
sub
inc
inc
inc
xor
xor
mov
xchg
push
cmp
and
xchg
cmps
add
idiv
inc
pop
inc
dec
add
push
sar
je
or
cmp
push
jb
stos
jb
mov
test
retf
sub
or
dec
jae
outs
ja
xor
and
xor
sbb
pop
pop
and
in
jp
adc
pop
and
popa
lea
imul
ret
aam
mov
aaa
les
mov
test
pop
mov
rol
xchg
das
inc
out
retf
push
das
dec
fbstp
mov
pusha
xchg
das
xchg
jae
outs
arpl
jmp
xchg
dec
dec
pop
push
ds
ds
inc
enter
push
mov
in
mov
or
push
xor
mov
inc
pop
push
add
sub
xlat
inc
fisttp
int3
retf
push
add
jmp
jae
lods
retf
push
popa
xor
push
cs
adc
sbb
lahf
adc
mov
or
sub
stos
add
jl
rcl
cmp
addr16
in
arpl
add
jne
retf
int
ja
xor
mov
fwait
xchg
dec
push
inc
cld
daa
je
cmp
movs
and
inc
inc
dec
gs
fistp
cmp
or
aam
mov
iret
push
cmp
mov
xor
aaa
ja
pusha
(bad)
xchg
xchg
and
dec
outs
cmp
pop
pop
clc
mov
jb
rol
adc
outs
or
fs
cmps
shl
pop
shl
dec
add
pop
and
push
or
or
or
cli
int
mov
inc
dec
add
pop
and
out
dec
sbb
jmp
xchg
cmc
movs
and
iret
adc
iret
xlat
or
movs
inc
adc
leave
and
inc
cmp
mov
pop
mov
iret
sub
dec
sbb
push
aaa
(bad)
shr
cmp
mov
test
loopne
jl
cwde
cwde
lods
push
ins
enter
inc
adc
(bad)
test
inc
popa
out
fisttp
pop
retf
in
pop
sbb
ror
and
dec
in
rol
mov
add
fisttp
mov
(bad)
inc
push
dec
add
add
cmps
and
push
pop
ins
dec
or
lea
pop
lahf
mov
fwait
popf
pop
ins
pcmpgtd
mov
push
pushf
inc
sbb
test
test
js
pop
push
push
inc
aaa
das
cli
pop
dec
mov
pop
jo
jae
mov
add
movs
or
xchg
bound
mov
pop
dec
jb
je
cmc
xor
pop
aaa
push
pop
pusha
mov
xor
or
aaa
shr
pop
(bad)
push
adc
inc
adc
into
stos
mov
adc
js
imul
mov
int
ror
arpl
cmps
sub
mov
das
outs
addr16
rcr
push
cmp
sub
mov
pop
xchg
and
or
and
pusha
lahf
jbe
aaa
xor
aaa
push
push
push
inc
inc
jmp
push
inc
inc
mov
(bad)
fmul
mov
lock
lock
stos
std
mov
mov
and
mov
daa
es
daa
sub
aaa
mov
into
fidiv
div
ins
or
(bad)
cmp
enter
shl
outs
outs
jecxz
jns
pop
xchg
(bad)
mov
movs
scas
or
push
pop
inc
or
mov
pop
ds
aaa
adc
sbb
(bad)
enter
jbe
data16
inc
das
pop
jbe
push
sbb
add
ret
out
cmp
cmp
or
aas
xlat
or
push
ds
xchg
cmp
das
mov
mov
daa
mov
and
sbb
sbb
(bad)
xchg
test
retf
xor
gs
ret
das
ds
sbb
xor
ds
and
cmp
xchg
pop
fwait
ds
sti
(bad)
ret
sbb
fist
out
(bad)
xor
popa
loope
inc
fwait
xor
inc
inc
add
repz
xor
xor
ss
js
push
jle
je
jo
fcomp
dec
ins
add
sar
dec
xlat
aaa
pop
outs
inc
push
push
daa
push
mov
inc
(bad)
ja
mov
and
aaa
or
outs
fisub
add
gs
push
test
jbe
stos
xchg
mov
push
retf
(bad)
neg
(bad)
xor
into
mov
mov
enter
sti
dec
int
xor
ja
shl
jo
mov
sub
mov
cmps
xor
xchg
xor
shr
jnp
addr16
mov
xor
std
aam
cmp
aam
cs
(bad)
ja
xchg
and
lock
out
iret
xor
inc
div
mov
pop
pop
xor
ret
mov
or
add
nop
sbb
in
in
cmp
push
cs
ins
mov
popa
arpl
test
pushf
jne
aas
pusha
in
sbb
test
lock
mov
outs
pusha
cdq
and
out
pop
pushf
sub
xchg
jg
jne
or
scas
add
loop
(bad)
inc
lahf
and
scas
dec
ror
jo
mov
pop
jae
pusha
pop
pusha
mov
pop
inc
jo
outs
xchg
cmp
cmp
push
jg
xchg
push
xor
rcl
inc
push
add
or
jb
(bad)
add
push
cmp
push
mov
sbb
sahf
dec
jo
dec
stos
clc
xchg
scas
outs
sbb
push
push
or
or
jbe
add
dec
jl
add
lahf
mov
xlat
mov
xchg
jmp
dec
or
xor
ret
jmp
inc
test
xchg
ja
sbb
inc
in
rol
inc
cmove
push
adc
mov
rol
push
(bad)
lmsw
out
jo
add
outs
retf
adc
scas
jb
dec
ja
in
mov
dec
inc
xchg
or
push
sub
push
loopne
mov
scas
jp
gs
adc
faddp
cmp
xchg
and
subps
mov
mov
mov
div
or
into
stos
jmp
cmp
(bad)
fild
inc
xor
inc
inc
sub
sub
sub
sub
mov
out
inc
inc
cmp
cmp
mov
jne
popa
push
push
retf
sub
addr16
cmc
inc
pop
pop
jae
jo
or
cmc
ss
mov
(bad)
jg
fisttp
pop
dec
inc
dec
pop
sub
pcmpeqw
add
dec
add
fimul
sbb
mov
addr16
mov
pop
dec
imul
(bad)
gs
xor
mov
dec
dec
push
inc
dec
pop
dec
inc
dec
inc
dec
add
inc
pop
sbb
mov
(bad)
test
inc
outs
jne
pop
inc
inc
icebp
add
rcr
adc
outs
or
cmp
sbb
mov
add
xor
(bad)
pop
cmp
jns
sbb
inc
loopne
dec
arpl
or
sahf
mov
pop
jo
into
das
pop
lock
aaa
aas
ja
jle
jge
test
or
cs
aam
jle
jo
inc
js
add
jo
adc
xlat
and
(bad)
dec
add
or
call
pusha
daa
cmp
inc
inc
inc
inc
xor
xor
sub
push
jl
or
xor
inc
xor
inc
xor
loope
test
jg
jns
outs
inc
mov
fs
add
(bad)
dec
pop
sub
call
cmp
cmp
sahf
pop
clc
scas
jl
add
push
push
mov
pop
fs
add
and
loope
movs
mov
outs
dec
or
jb
aaa
shl
adc
sbb
sar
sub
iret
ja
rcl
out
jae
popa
sub
mov
add
jnp
push
stos
sub
stos
sub
push
loopne
arpl
dec
das
pop
mov
test
sub
pusha
outs
std
push
aaa
and
movs
dec
fadd
and
pop
ins
mov
outs
pop
sub
push
(bad)
jne
pusha
sbb
dec
fs
push
mov
add
imul
enter
jae
ja
ins
addr16
xor
fwait
dec
jb
test
push
and
lds
add
push
or
outs
push
add
jno
jg
add
test
push
or
(bad)
arpl
imul
mov
fwait
pop
xchg
mov
push
xor
mov
fs
add
dec
es
mov
and
xor
push
xor
sbb
or
cmp
cmp
ss
aaa
idiv
in
pop
inc
cmp
ss
sbb
inc
ss
inc
inc
add
sub
xor
fdivr
push
adc
aaa
and
pushf
add
inc
jb
movs
and
jns
pop
outs
pusha
aad
aaa
out
mov
daa
dec
aaa
scas
xchg
dec
dec
dec
lea
aam
xchg
outs
add
pop
pop
int
aad
call
ror
and
push
outs
pop
aas
aas
aad
loopne
pop
out
mov
mov
movs
cwde
fcom
ret
data16
push
jne
daa
pop
pop
adc
sub
mov
cmp
aas
push
inc
inc
xor
ss
ss
gs
inc
xor
xor
xor
sub
and
lea
sub
inc
jg
rcr
xor
mov
movs
xor
iret
jne
inc
popa
loope
push
ds
aas
and
and
push
push
fdivr
adc
pop
pop
cmp
xor
jb
retf
arpl
cmp
aaa
xor
dec
fwait
cmp
ss
pop
xor
xor
aas
push
repz
sub
pop
pusha
lds
lahf
aaa
cmps
xor
inc
inc
xor
cmp
inc
inc
mov
adc
ss
jmp
into
in
inc
ss
xor
cmp
retf
ret
lds
aaa
mov
inc
inc
inc
xor
xor
stos
js
cmp
xor
aaa
cmp
inc
xchg
xor
xor
cmp
mov
sti
aaa
cwde
xor
cmp
cmp
inc
cmp
inc
inc
xor
inc
xor
inc
add
es
ds
inc
inc
inc
jb
and
lods
inc
lock
xor
es
cmp
inc
ss
pusha
pop
retf
jno
not
xor
xor
xor
movaps
movs
(bad)
jge
xchg
or
ss
repnz
outs
xchg
xchg
idiv
add
xor
scas
outs
imul
(bad)
jae
xchg
push
add
fs
nop
jae
outs
popa
mov
jo
dec
dec
outs
ins
jns
arpl
(bad)
jne
retf
inc
cmp
jmp
pop
mov
popa
jb
dec
inc
leave
jl
iret
ins
data16
inc
ficom
sar
sbb
pop
mov
ins
outs
xor
in
cs
(bad)
shr
pop
and
stos
xchg
pop
add
adc
scas
das
retf
inc
add
xor
repz
fisttp
bound
dec
shr
push
xor
adc
push
dec
dec
sub
ins
jnp
aad
inc
repnz
pusha
xor
inc
jb
inc
push
and
and
jbe
js
data16
imul
jb
sbb
inc
xor
add
and
aas
jo
lds
sahf
(bad)
das
add
cs
sbb
iret
(bad)
jne
shl
cmps
into
loop
movs
das
lods
or
mov
mov
int3
lds
add
rcl
es
loopne
adc
iret
and
pusha
daa
adc
add
mov
dec
call
mov
add
ficom
fistp
in
push
nop
stos
jne
aam
inc
add
mov
add
push
cmp
mov
cmp
(bad)
push
ja
cld
ins
jmp
jmp
addr16
inc
add
ins
cmp
mov
enter
add
leave
xchg
lock
addr16
(bad)
mov
idiv
mov
ds
outs
ins
shl
(bad)
js
nop
xchg
out
nop
cwde
js
loop
xor
fwait
adc
mov
pop
rol
fs
sub
(bad)
cmp
retf
push
sbb
jl
fld
cmp
mov
clc
out
sahf
out
adc
enter
cmp
sbb
dec
and
mov
iret
repz
pop
mov
clc
jge
cmps
stc
sub
mov
sbb
inc
push
lods
lock
movs
and
mov
test
in
add
clc
mov
mov
inc
data16
fcom
xor
das
fs
sub
daa
xchg
out
call
pushf
dec
push
in
or
in
jb
xchg
out
adc
mov
enter
xchg
iret
dec
mov
leave
sbb
fild
add
push
and
ss
push
jg
xor
sbb
adc
ins
fisttp
and
adc
adc
test
not
mov
ins
pop
jg
and
xor
xor
adc
mov
inc
rol
repnz
es
inc
jg
xchg
dec
adc
inc
pop
dec
aas
cmp
and
fimul
jno
cdq
or
jb
mov
test
jne
idiv
daa
fimul
mov
test
call
into
push
in
add
lods
mov
adc
ja
mov
rol
hlt
push
and
movs
repz
jmp
fiadd
in
aas
push
push
pop
push
adc
jbe
iret
retf
mov
iret
mov
fst
push
mov
imul
mov
xchg
scas
cmp
ins
jae
xchg
inc
xchg
aas
lea
aam
xchg
scas
xchg
jbe
cmp
sub
xchg
call
popf
mov
cmps
nop
pop
sub
lahf
cmp
mov
adc
xchg
iret
or
iret
xchg
sub
jno
push
pushw
addr16
out
mov
cmp
add
cld
mov
clc
mov
pop
aaa
push
xor
mov
jmp
ret
out
or
(bad)
push
sar
add
ins
and
inc
fild
sahf
aaa
and
xor
xor
add
mov
les
in
inc
push
and
cwde
pop
and
pop
pusha
les
lock
data16
adc
pop
or
je
cmp
add
lods
pop
push
pop
or
fiadd
dec
pop
mov
pop
and
pushf
adc
aam
xchg
dec
and
push
add
jo
add
xchg
pop
fist
cmp
in
je
pop
push
mov
mov
dec
ror
iret
stos
mov
imul
and
in
loopne
xlat
or
xchg
pushf
sbb
xor
out
cmp
out
push
add
push
xchg
jbe
cmp
sbb
mov
xlat
sub
add
push
not
dec
repnz
add
(bad)
mov
sub
mov
loopne
jbe
mov
ins
and
jo
shl
cmp
daa
rcr
mov
in
in
push
lds
adc
fcom
sub
mov
enter
das
dec
xor
and
add
es
sahf
push
leave
xlat
mov
das
xchg
dec
in
and
mov
sub
sbb
daa
pusha
adc
jb
cmp
out
fs
mov
retf
fbstp
cmp
mov
adc
adc
pop
enter
add
(bad)
add
leave
sub
retf
lods
retf
and
cld
retf
mov
leave
dec
retf
adc
and
sahf
out
mov
aas
mov
add
repnz
and
fucomi
add
int3
and
push
enter
push
inc
movs
(bad)
not
push
and
mov
daa
mov
aad
and
jp
imul
and
mov
pushf
lods
rcr
mov
cwde
es
dec
mov
(bad)
cwde
or
pop
push
xor
adc
sbb
test
test
xlat
jne
add
sar
jb
push
add
adc
fild
adc
sar
and
nop
xor
add
xor
shld
push
outs
push
imul
add
jne
mov
jecxz
and
xlat
push
and
or
sti
and
addr16
pop
dec
fstp
aaa
adc
ret
mov
cmp
ret
test
push
lods
sub
ins
push
bound
mov
mov
add
pop
jae
je
sub
gs
imul
(bad)
xor
push
ret
jb
ds
xor
push
ins
mov
cmp
data16
push
and
fadd
xchg
jae
into
xor
movs
xor
and
inc
retf
ret
pop
add
add
mov
sti
adc
data16
daa
shr
daa
mov
mov
or
push
fsubr
push
jo
dec
sbb
call
xchg
inc
add
outs
ins
and
jmp
pop
sbb
mov
jbe
nop
and
add
and
sbb
call
mov
loop
jbe
add
pop
jno
arpl
aam
movs
inc
fild
cmps
jno
movs
fistp
lea
add
sbb
and
arpl
lea
cld
jae
ins
mov
add
pop
xlat
add
jmp
ret
(bad)
jmp
push
or
pop
ss
popf
jbe
xchg
jg
adc
ret
enterw
or
dec
mov
sbb
pop
shl
outs
mov
jnp
mov
push
pusha
pusha
lds
or
test
outs
rcl
add
inc
push
inc
aad
mov
jge
fcmovb
sbb
(bad)
mov
and
out
ds
sahf
jo
jb
mov
ret
stos
push
push
push
sahf
inc
ret
or
add
xlat
rol
ss
lahf
mov
adc
cdq
add
sub
test
push
add
inc
daa
pop
aad
aaa
mov
arpl
stos
sub
jno
xchg
outs
rol
arpl
stos
and
add
push
cmps
cmc
add
xor
mov
stos
add
hlt
fcom
retf
aam
xor
mov
fimul
and
and
add
test
add
pop
aad
mov
pop
fs
fcom
push
dec
cmp
rcr
pop
addr16
add
sub
and
cmps
pop
mov
jmp
aaa
pop
popa
xchg
gs
cs
mov
xchg
inc
mov
pop
sub
sbb
push
jp
aas
popa
jmp
inc
dec
inc
stos
mov
imul
mov
mov
sbb
mov
push
xor
inc
push
out
mov
push
mov
jmp
mov
push
ss
arpl
push
jb
ds
daa
fild
cmp
mov
jnp
xor
push
and
xlat
leave
retf
sub
sub
outs
mov
not
jb
outs
imul
std
sub
out
inc
push
aas
cmp
cmp
loop
jae
test
jo
push
dec
inc
add
mov
and
add
xchg
push
test
push
push
inc
sub
mov
jae
ds
loope
mov
dec
jae
or
jmp
ret
mov
or
pop
cmp
jp
dec
das
ins
inc
jae
xchg
cmp
outs
add
push
push
adc
dec
dec
inc
stos
mov
(bad)
popa
imul
dec
xor
stc
jmp
adc
pop
push
pop
jb
mov
sbb
xor
push
xor
dec
aam
cwde
(bad)
mov
push
rcl
jl
cs
nop
add
inc
gs
cmp
loopne
mov
callw
test
idiv
(bad)
xor
cmps
push
ss
mov
mov
add
pop
push
(bad)
mov
pop
inc
sbb
dec
dec
inc
dec
pop
fstp
xchg
dec
push
aaa
push
sbb
add
imul
adc
sub
push
inc
fadd
sbb
cmc
data16
sbb
pop
add
rcl
fucompp
fadd
ins
movs
jg
sub
inc
jne
data16
imul
mov
jg
push
gs
dec
xchg
cmps
add
popa
push
cmps
cmps
adc
mov
add
inc
mov
shr
jo
mov
push
push
cmp
scas
push
cs
jl
adc
add
xchg
inc
mov
jecxz
cmp
sahf
lds
inc
and
add
push
or
aad
inc
sub
scas
fld
cdq
xchg
push
dec
dec
out
jo
mov
dec
ins
mov
dec
nop
push
cmp
adc
sbb
xor
adc
sar
add
xor
and
push
sub
xor
push
gs
leave
das
mov
pushf
ja
aam
rol
test
cmp
arpl
pop
push
popa
imul
je
push
dec
pop
mov
hlt
add
xor
add
mov
push
sub
xor
lock
add
adc
mov
xor
mov
pop
sub
add
sbb
pop
pop
sbb
dec
dec
addr16
inc
pop
movs
and
maxps
sub
mov
push
mov
sub
ins
scas
add
mov
repnz
bound
push
les
fdiv
add
push
lds
and
add
pop
sub
pusha
add
xor
xor
cmp
loopne
pushf
mov
jle
xadd
sub
inc
and
shr
cmp
repz
xchg
or
xchg
sub
repz
adc
call
in
sub
jns
out
les
mov
push
out
sahf
out
sub
or
int
cmp
test
and
mov
and
imul
jns
dec
stos
cmp
jp
cs
mov
call
sub
push
das
cmp
enter
jmp
mov
cmp
or
mov
in
add
hlt
add
pop
pop
(bad)
dec
shr
cmp
clc
jns
out
hlt
lock
sahf
out
sar
mov
cwde
xchg
nop
repz
repz
repnz
je
pusha
pop
push
push
sahf
out
sahf
dec
inc
xor
and
lahf
out
adc
in
cmp
aad
sub
maskmovq
test
add
jg
mov
fiadd
xchg
pop
add
xchg
aas
mov
outs
pop
shr
sub
ss
jae
dec
sbb
dec
pop
and
outs
add
fild
iret
repz
mov
cli
cmps
std
or
mov
clc
pop
add
sub
push
or
inc
dec
ror
add
outs
fild
add
add
xchg
sbb
js
out
in
inc
or
jae
mov
outs
enter
mov
gs
add
jbe
vmread
daa
mov
ins
movs
mov
mov
push
(bad)
adc
enter
add
add
sbb
push
pop
xchg
ret
mov
and
and
imul
into
sub
(bad)
loopne
test
(bad)
mov
adc
ss
pop
or
sbb
ret
es
sbb
shl
pop
imul
push
jne
icebp
and
cmp
add
dec
out
or
push
or
and
arpl
inc
jge
call
jae
add
ja
shr
out
je
into
lock
or
sub
sbb
inc
push
sub
mov
push
and
das
std
jnp
fadd
aaa
popa
sub
mov
sub
sub
aam
xor
(bad)
(bad)
add
push
fld
retf
xor
lods
ficomp
and
iret
stos
ret
xor
(bad)
xor
jle
xor
dec
add
jbe
and
add
mov
es
js
xor
and
out
arpl
jge
cs
retf
add
gs
jae
js
pusha
jns
cwde
sbb
int3
out
mov
mov
ret
adc
jae
cs
ins
or
je
pop
sahf
retf
add
adc
loop
mov
test
fldlg2
jl
popf
dec
push
and
xchg
mov
dec
lock
enter
mov
mov
fs
pop
cwde
or
fs
mov
enter
hlt
pusha
nop
and
xor
fs
or
xor
fadd
fsubr
add
mov
jne
mov
sub
xor
xor
mov
dec
jo
cdq
mov
or
lea
popa
sbb
ror
jge
test
mov
js
fisttp
adc
cmp
mov
hlt
nop
mov
test
xor
cmps
fdivr
xor
add
adc
out
and
sar
adc
dec
inc
(bad)
xchg
int3
xchg
cs
fld
rol
adc
adc
and
sti
call
gs
add
lods
inc
bound
lahf
adc
ins
add
jecxz
add
cwde
or
call
pop
sbb
rcl
xchg
loop
xor
sbb
not
and
or
ffree
mov
dec
retf
mov
sbb
jmp
or
or
pop
dec
push
mov
sub
push
lock
add
ins
xor
das
ror
fidiv
test
test
dec
dec
and
xchg
mov
and
xor
adc
(bad)
cmp
and
mov
jmp
xchg
pop
cmp
adc
inc
or
push
mov
pop
leave
test
shl
loopne
pop
cmp
mov
inc
xor
and
mov
lods
sar
mov
push
mov
dec
push
sbb
jb
mov
mov
add
sbb
sar
rol
shl
mov
test
sahf
out
ins
jne
jl
adc
inc
cdq
add
fistp
push
inc
inc
mov
stos
fdiv
dec
cmp
inc
jno
mov
jle
xor
int3
out
div
dec
aas
dec
dec
(bad)
jmp
cld
jge
repz
cmp
mov
pusha
fistp
jg
lds
jne
mov
mov
mov
std
pop
je
and
or
cmp
inc
cmp
in
pop
das
and
add
pop
out
cmp
and
jmp
or
inc
jmp
push
out
lock
rcl
jle
push
rcr
mov
or
dec
push
call
ins
or
inc
fnstsw
not
and
push
inc
or
or
add
ds
or
int3
mov
fild
push
sub
jp
nop
and
sbb
mov
das
mov
loopne
jae
adc
mov
scas
div
sbb
adc
push
mov
xor
into
xor
mov
hlt
(bad)
movs
and
and
mov
add
mov
sahf
gs
mov
sub
push
add
jmp
jns
test
dec
sbb
scas
add
sbb
or
jbe
or
ins
dec
mov
data16
lea
pmullw
clc
or
adc
ret
jo
adc
jne
jae
push
add
fsubr
cmp
fwait
xor
in
pop
xor
movs
pop
icebp
nop
add
outs
add
cwde
ins
dec
in
mov
push
call
je
nop
inc
cs
xchg
mov
xchg
cwde
xchg
xor
cwde
cmp
jmp
cwde
dec
push
add
sub
inc
mov
dec
xor
out
repz
xchg
mov
xchg
or
or
add
xchg
xchg
and
xor
fstp
add
cmp
xor
and
rcl
mov
ret
dec
add
push
xor
enter
add
jo
out
lods
sub
or
jmp
jae
dec
lods
sar
mov
cdq
mov
add
xor
sub
add
sub
cmp
pop
daa
push
dec
jmp
or
ficomp
inc
or
jmp
add
adc
xchg
cmp
jmp
rol
cmp
js
add
sbb
jns
call
adc
enter
mov
cld
rcr
add
jl
repz
sbb
sbb
push
fidivr
push
lock
mov
inc
ret
xor
lea
add
aam
aam
mov
jp
and
mov
mov
adc
adc
add
mov
aam
add
test
test
stos
mov
ret
mov
loopne
mov
adc
das
or
sub
pop
adc
or
loopne
cmp
inc
and
push
out
shl
xor
loope
aad
imul
and
mov
iret
jmp
lea
push
jns
sub
inc
cmp
cmp
out
push
lods
movs
sub
mov
fbld
xor
inc
loope
adc
stos
push
add
jnp
mov
int3
mov
cmp
and
pop
loop
push
mov
mov
mov
fadd
imul
fld
std
jmp
(bad)
push
push
sbb
xchg
pop
sub
xchg
lods
or
in
in
ja
sub
lahf
movs
push
cmp
pop
add
test
inc
push
nop
outs
rol
movs
and
fst
mov
pop
arpl
push
inc
xor
jmp
out
rcr
neg
sbb
push
lock
je
mov
(bad)
adc
or
push
cld
pop
jmp
inc
in
shl
shl
ror
mov
sahf
and
mov
and
mov
mov
cld
xor
mov
and
ficomp
xor
(bad)
pop
or
dec
mov
mov
int
popa
push
ds
fsubr
fwait
(bad)
mov
je
mov
sub
inc
and
rol
addr16
imul
mov
add
adc
jmp
push
imul
xchg
xor
and
shr
sub
or
rol
push
out
arpl
mov
push
sbb
outs
dec
mov
add
mov
pusha
ss
add
xchg
push
xor
cmc
js
out
cs
fdivr
rcl
lods
sub
push
popf
cmp
jge
adc
das
ror
and
sub
mov
jne
aas
xchg
loopne
adc
sahf
sbb
or
nop
sbb
dec
aas
cmp
adc
inc
sbb
bound
or
pop
fs
fiadd
outs
adc
push
jns
div
push
and
ins
inc
pop
mov
imul
push
push
sahf
add
ins
js
stc
cmp
mov
(bad)
jns
inc
push
push
or
cmp
repz
stos
stos
stos
stos
adc
xor
xlat
push
xchg
fisub
aaa
push
xchg
pop
mov
push
xchg
pop
mov
add
bound
adc
ins
mov
pop
add
xchg
fdivr
inc
or
aaa
or
daa
pop
xchg
mov
movs
adc
rol
push
mov
push
cmp
out
jns
ret
gs
pushw
test
repz
repz
lock
call
ins
imul
sahf
cmp
push
add
add
or
pop
leave
push
add
mov
mov
pop
enter
loopne
jae
pop
and
add
add
shl
adc
xor
add
sti
call
push
aas
adc
enter
pop
(bad)
pop
inc
mov
mov
jno
and
jb
pop
pushf
cmc
cmp
ins
ds
add
ds
and
dec
mov
aas
add
and
shr
inc
push
dec
push
xor
dec
loopne
cmp
push
imul
ins
xchg
pushf
push
das
lahf
pop
xchg
xchg
mov
outs
mov
fs
shl
data16
rcl
mov
pop
popa
je
pop
or
xchg
xor
or
fs
aam
push
ins
jno
push
push
pop
fdiv
or
pop
pushf
mov
pop
pop
pop
fistp
pop
adc
iret
test
cdq
xchg
ret
out
sbb
sub
and
dec
sbb
cs
push
add
add
inc
add
repnz
out
dec
cs
dec
sub
fld
cs
nop
and
sub
xchg
rol
les
cmp
aas
inc
ins
call
dec
inc
fsub
or
xor
push
add
mov
std
test
retf
xor
dec
jmp
dec
mov
xor
dec
lea
inc
arpl
stc
xor
inc
mov
cmp
sahf
lods
mov
sub
dec
ins
retf
dec
mov
adc
mov
mov
(bad)
dec
sub
out
pop
imul
mov
cmp
sti
or
div
push
dec
mov
leave
lods
push
inc
dec
push
data16
or
fisttp
push
clc
shr
loop
fwait
xchg
aam
ss
sar
call
dec
lock
adc
pop
sub
imul
mov
js
mov
pcmpeqd
push
push
sbb
jo
mov
mov
add
fisub
(bad)
inc
ror
in
inc
cmp
jb
mov
jmp
cmp
pop
je
cld
(bad)
sbb
pop
retf
movq
and
mov
and
test
call
mov
pop
and
imul
xor
inc
pop
inc
pop
pop
in
xor
test
push
cmp
sub
lods
mov
and
xor
shl
sub
fiadd
ss
cs
jne
daa
push
cmp
clc
mov
and
dec
and
jae
mov
mov
outs
call
not
mov
and
or
xchg
sub
dec
icebp
mov
push
pop
push
cmp
sar
adc
and
ss
adc
and
mov
mov
mov
cmp
cmp
sub
pop
jmp
dec
lahf
adc
push
xchg
(bad)
in
xor
add
rcl
aam
arpl
lods
or
ins
add
sahf
(bad)
xor
mov
test
xor
js
(bad)
mov
cmp
je
xor
sbb
loopne
xor
xor
xchg
cmp
jne
call
sbb
add
aaa
dec
shl
or
push
std
push
je
inc
ins
sti
fwait
ret
fsubrp
cmps
dec
arpl
fdivr
mov
packuswb
add
push
dec
mov
xchg
fs
ror
jbe
mov
neg
ins
outs
add
and
les
rcr
loopne
mov
and
push
(bad)
fstp
repnz
pop
fdiv
pop
popf
or
or
dec
imul
lock
bound
bound
inc
retf
or
mov
sub
push
mov
shl
and
mov
cli
imul
xchg
or
xor
je
xor
popf
sub
cmc
shl
xchg
add
dec
push
js
into
add
popf
push
call
jmp
pop
jbe
retf
pop
leave
and
fs
rcr
xor
mov
(bad)
sub
add
jge
cdq
nop
dec
aaa
mov
call
bound
addr16
add
pop
mov
cmp
push
je
cmp
pop
ret
inc
sbb
out
mov
push
fmulp
sbb
mov
sub
mov
loopne
pop
ins
pop
mov
repz
mov
dec
aam
mov
or
retf
(bad)
es
add
jle
sbb
mov
mov
mov
jbe
lea
jo
out
inc
mov
adc
in
rcl
cmps
inc
push
(bad)
arpl
popf
retf
jns
in
and
ret
xchg
add
push
pop
call
mov
sbb
add
aam
out
jg
cli
je
inc
pusha
pop
inc
data16
or
rcl
mov
xor
ret
leave
adc
scas
push
idiv
dec
ret
mov
add
sar
push
cmc
cmp
pop
fbld
inc
mov
mov
leave
inc
and
inc
neg
add
dec
cmps
pusha
mov
fmul
add
pop
and
dec
and
dec
arpl
dec
mov
inc
adc
std
and
add
je
sahf
or
mov
jge
loopne
dec
cwde
push
dec
xor
dec
xchg
lods
pop
dec
fwait
adc
aas
jae
ror
jp
shr
sub
dec
jge
ins
add
mov
dec
fild
sub
push
rcl
dec
mov
scas
shr
jb
add
inc
(bad)
pop
je
dec
adc
or
mov
or
sti
cdq
std
pop
enter
dec
shr
jne
sbb
add
inc
shl
dec
adc
ror
dec
dec
outs
or
(bad)
mov
dec
jne
and
inc
dec
add
cmp
out
jae
pop
mov
jp
mov
loopne
or
push
lock
add
inc
pop
fmul
out
out
movnti
push
bound
gs
or
ja
imul
call
lock
hlt
dec
ret
aas
adc
ror
sbb
pop
aas
adc
fdiv
sub
add
jo
mov
sub
mov
fwait
inc
cmps
rol
loope
cmp
and
push
xchg
popa
test
ds
popa
nop
add
pop
cs
ret
pop
ror
ret
ret
or
mov
ret
or
repz
add
pop
out
add
pop
and
push
or
mov
push
sub
dec
dec
mov
sub
(bad)
or
push
addr16
pop
jmp
adc
cli
je
mov
aad
fldenv
prefetcht2
rol
in
inc
jmp
retf
or
dec
lock
or
xchg
dec
imul
and
sbb
sub
test
loopne
xor
sub
sub
mov
jae
rcr
in
ret
add
inc
popa
ss
mov
test
call
(bad)
jmp
add
ins
push
mov
cmp
cmps
lods
movs
mov
jno
aas
lds
adc
adc
lock
adc
or
or
jne
cmp
push
aas
lock
push
sub
and
aas
ror
fcomp
mov
or
call
add
sbb
xor
or
aas
push
add
xchg
inc
adc
push
add
xor
out
add
bound
arpl
imul
xchg
inc
pop
push
or
imul
dec
add
inc
ja
jecxz
les
dec
push
dec
lahf
cld
pusha
xchg
aaa
inc
cli
outs
ins
imul
arpl
(bad)
das
es
bound
je
cmps
cmps
jle
push
push
xor
jno
jo
and
and
jb
cmp
js
jb
jb
xchg
mov
jb
out
or
cmp
sbb
cmp
fdivr
cmp
jl
cmps
add
out
dec
test
push
pop
mov
jne
push
push
inc
push
arpl
(bad)
call
cdq
xchg
cmps
stos
add
cmp
movs
dec
pop
jb
or
arpl
popa
adc
sub
call
aaa
pop
popa
ins
fs
test
xchg
lods
pop
cmp
add
inc
psubusw
outs
iret
bound
cli
push
push
add
sbb
mov
push
lea
aam
mov
mov
mov
adc
adc
adc
push
lds
adc
push
int
outs
mov
push
xor
push
push
ror
pusha
add
push
add
fs
xor
lahf
stc
jle
xor
jo
mov
xor
add
jg
lahf
mov
cdq
sub
int
and
data16
mov
mov
pop
adc
imul
jo
iret
repz
cmps
sub
imul
adc
adc
js
push
push
dec
and
pop
mov
add
push
ja
pop
push
jmp
sbb
xor
nop
push
inc
sbb
adc
push
movs
aad
icebp
loopne
mov
mov
add
es
mov
xor
adc
jl
imul
mov
jns
mov
mov
adc
aas
dec
mov
or
xchg
pusha
dec
mov
ret
test
call
pop
mov
and
adc
add
dec
adc
in
pop
cmp
add
cmps
popf
(bad)
fs
jnp
arpl
paddsb
push
aad
pop
ja
add
fsubr
or
add
retf
fs
dec
mov
cmps
inc
mov
push
test
imul
or
push
pop
dec
mov
push
add
cmps
and
mov
pop
jbe
retf
ins
loopne
pop
ja
mov
push
push
data16
add
mov
inc
sub
adc
xchg
fs
aaa
inc
jbe
pop
dec
ins
loop
ins
adc
sbb
pusha
cs
push
fsub
ffreep
cmp
mov
push
into
xchg
sbb
add
mov
enter
or
xor
imul
and
adc
scas
xor
sub
add
add
es
and
cmp
or
or
add
sbb
in
add
add
sub
sub
pop
xor
add
pop
xor
and
xor
push
sub
cmp
dec
or
outs
fld
add
(bad)
(bad)
push
(bad)
in
mov
sbb
enter
(bad)
sbb
jbe
sbb
mov
or
adc
call
rcl
sbb
push
dec
push
push
add
push
add
adc
push
push
xor
(bad)
out
adc
adc
or
or
jae
pop
pop
outs
xor
outs
and
fnsave
push
sub
adc
mov
push
xor
adc
or
adc
sbb
jo
and
je
xchg
fdivr
add
and
call
imul
aaa
jl
push
pop
or
add
cmp
retf
call
or
inc
pop
xor
test
and
xor
xor
jb
adc
and
lock
inc
adc
xor
bound
sub
scas
mov
add
pusha
dec
push
das
xchg
iret
push
sbb
jns
inc
xor
cmp
ins
cmc
lahf
inc
sti
xor
push
jne
push
or
and
ins
popa
jb
ds
inc
xchg
push
mov
cmp
inc
xor
cdq
or
add
inc
mov
call
push
(bad)
scas
and
or
jp
sahf
pusha
or
out
cmp
jl
cld
(bad)
(bad)
mov
sub
(bad)
sub
stc
push
or
cmc
icebp
lods
enter
adc
and
sub
clc
mov
dec
mov
(bad)
jle
push
in
out
(bad)
(bad)
(bad)
inc
bound
movs
fcomp
clc
loopne
bound
cmp
retf
test
in
(bad)
sbb
jmp
mov
fadd
push
dec
ror
xchg
mov
(bad)
jo
mov
adc
pop
dec
push
rcl
mov
mov
(bad)
jg
call
push
add
nop
mov
mov
inc
mov
mov
aaa
(bad)
(bad)
(bad)
dec
repnz
cmp
xor
sbb
and
and
sub
(bad)
(bad)
(bad)
(bad)
call
add
in
arpl
cmp
or
inc
mov
xchg
scas
push
popf
aam
inc
shl
adc
imul
aas
lahf
jae
xor
iret
pop
aas
xor
xchg
mov
inc
adc
add
add
adc
and
xor
xor
add
emms
fbstp
je
adc
add
xor
or
or
(bad)
add
hlt
pop
inc
retf
sbb
jg
cmps
ret
fcomip
fucomp
mov
cmp
add
pop
cmp
push
ja
(bad)
inc
and
inc
outs
adc
or
cmc
rcl
push
inc
pop
add
xchg
rol
push
dec
xor
dec
mov
mov
ins
cs
(bad)
pop
inc
stos
cdq
mov
push
es
jbe
das
int
pop
dec
xlat
call
loope
(bad)
call
adc
xor
sub
add
xor
mov
mov
xchg
push
mov
sbb
jb
sbb
bound
std
and
aas
inc
(bad)
(bad)
(bad)
fistp
pop
loop
outs
mov
push
ins
or
mov
inc
mov
pusha
jecxz
out
call
mov
jbe
xchg
mov
pop
sti
test
retf
(bad)
dec
mov
xchg
xchg
pop
pop
pop
imul
test
gs
(bad)
push
mov
and
inc
xchg
dec
lods
movs
mov
jns
shl
add
(bad)
(bad)
(bad)
in
lahf
push
mov
data16
fdiv
mov
enter
out
and
fdiv
std
cmp
mov
fwait
add
(bad)
jmp
cwde
xor
push
mov
lods
pop
xchg
dec
jl
repnz
cmp
jl
(bad)
sbb
(bad)
(bad)
jmp
sub
sbb
pop
fistp
div
daa
xor
int
fs
sub
mov
xbegin
and
add
push
std
add
out
cdq
jg
cmc
and
jb
std
(bad)
cmp
cmp
(bad)
(bad)
jmp
data16
inc
add
stos
out
(bad)
sti
pop
(bad)
xor
icebp
int
lds
add
(bad)
(bad)
(bad)
mov
dec
shl
leavew
mul
sub
jbe
movs
adc
into
pop
xchg
stos
mov
mov
(bad)
(bad)
dec
push
daa
ret
lahf
xchg
(bad)
in
or
bound
dec
ret
jg
mov
(bad)
(bad)
(bad)
call
cwde
pop
dec
jp
jg
sub
adc
push
addr16
mov
ror
clc
(bad)
push
sub
mov
outs
or
cmps
imul
mov
xor
cld
push
jg
(bad)
call
(bad)
mov
and
jmp
jns
sbb
push
mov
das
clc
xchg
scas
inc
(bad)
sbb
mov
clc
scas
pop
aaa
mov
add
sbb
xor
addr16
lea
mov
adc
in
ficom
mov
out
mov
jg
inc
xor
xor
add
popa
inc
mov
jae
jmp
jae
stos
sbb
test
add
and
sub
and
mov
(bad)
rcr
mov
and
xor
xor
mov
fisub
in
add
aaa
xor
xor
and
mov
inc
dec
int
cwde
stc
psadbw
inc
imul
sahf
xor
xor
adc
jmp
push
add
or
push
jne
push
aas
and
ror
and
xor
xor
xor
sbb
xor
pop
inc
jne
jno
test
into
sbb
lahf
jbe
dec
or
dec
push
inc
and
add
and
mov
(bad)
call
fwait
out
popf
sbb
(bad)
loop
jae
add
xchg
dec
push
shl
dec
jmp
std
(bad)
(bad)
mov
pop
push
and
sbb
scas
(bad)
jl
mov
dec
(bad)
(bad)
(bad)
jmp
jb
sub
jns
xchg
or
jnp
loop
mov
mov
mov
adc
dec
push
dec
xor
sar
(bad)
(bad)
call
mov
popa
xchg
xchg
clc
and
push
test
push
jmp
bound
rcl
in
(bad)
(bad)
(bad)
call
mov
mov
mov
sbb
sbb
jecxz
mov
rol
scas
retf
(bad)
(bad)
(bad)
inc
jae
or
xor
cwde
(bad)
mov
scas
bswap
mov
cmps
aas
retf
repnz
xchg
or
xchg
xlat
out
daa
rol
xchg
lock
retf
(bad)
mov
in
jle
fbld
int3
mov
(bad)
outs
mov
icebp
jg
rcl
sub
xor
jnp
pop
loopne
push
ja
enter
out
push
adc
fimul
repnz
mov
inc
inc
cmp
aaa
xor
xchg
rol
cmp
sub
rol
fld
inc
push
inc
xor
cmps
aas
test
pusha
push
add
out
retf
add
sub
sub
or
pop
mov
push
sbb
xor
mov
in
or
or
xor
pop
rol
arpl
and
xor
sbb
mov
push
dec
add
and
fwait
popa
imul
movs
iret
cdq
test
dec
leave
mov
rol
popf
xchg
mov
xchg
push
jmp
push
es
ret
(bad)
inc
out
sbb
sub
push
ret
ret
ret
test
push
add
mov
call
(bad)
imul
hlt
sub
fld
cmp
out
sbb
and
repz
jnp
sub
dec
mov
fucomi
fs
push
pop
mov
sub
(bad)
(bad)
(bad)
(bad)
jge
sub
or
dec
pushf
aad
cli
stc
call
cmp
dec
cs
cld
sub
(bad)
mov
mov
jmp
mov
xor
das
jae
dec
gs
(bad)
(bad)
(bad)
inc
aas
dec
cdq
imul
pop
out
mov
jns
enter
setb
dec
mov
jge
add
aas
stos
pop
es
(bad)
jmp
mov
stc
pop
ins
aaa
dec
jmp
lahf
popa
mov
fstp
pop
dec
jns
mov
mov
(bad)
(bad)
call
push
pop
xchg
cmp
pop
xor
(bad)
sti
push
mov
stos
pop
dec
dec
test
xchg
loopne
add
(bad)
call
push
mov
imul
dec
repnz
add
stos
and
in
xchg
leave
aam
xor
or
bound
call
xor
xor
cmp
sbb
adc
push
lea
cmc
and
movs
xlat
mov
idiv
ja
(bad)
out
in
es
sbb
xchg
mul
adc
jne
xor
push
(bad)
(bad)
push
int
or
mov
cdq
loope
aaa
dec
pop
into
cmp
xchg
shl
daa
xor
mov
mov
pop
mov
sti
int
bound
fld
shl
data16
dec
test
(bad)
(bad)
(bad)
inc
dec
leave
cmps
jbe
jg
add
jle
rcr
add
imul
inc
add
fistp
add
xchg
in
in
jno
push
inc
es
inc
cmp
(bad)
(bad)
(bad)
jmp
ins
or
aas
sbb
das
xchg
cli
in
ja
mov
mov
cmp
sbb
das
es
pushf
push
shl
pop
xchg
sub
jle
(bad)
(bad)
call
movs
xchg
cdq
jg
int
movs
jne
out
adc
sbb
cs
cmps
mov
dec
jle
mov
dec
cmps
ss
xor
movs
int
xor
mov
ss
add
cli
xor
fisttp
pop
mov
jo
or
xor
add
xor
push
add
sbb
mov
xor
mov
add
pop
mov
pop
xor
push
push
or
and
(bad)
mov
gs
stos
dec
pop
cmc
xor
adc
in
ins
lods
lea
add
aam
sbb
loopne
and
bound
outs
out
jbe
daa
xchg
xor
idiv
pop
jmp
sub
imul
cmp
dec
xor
sbb
xor
and
rol
mov
sub
jg
mov
sbb
xor
stc
adc
dec
dec
sub
shr
inc
jmp
jno
(bad)
jmp
out
movs
les
dec
mov
fs
icebp
(bad)
(bad)
in
jp
and
inc
cmp
ins
sar
sbb
test
mov
dec
in
or
cli
adc
dec
and
and
mov
arpl
jg
sub
shr
jno
out
push
(bad)
inc
cmp
pop
adc
(bad)
aam
into
or
(bad)
call
jb
aaa
and
mov
call
nop
pop
cld
cmp
cmp
gs
cmp
adc
and
int3
dec
and
nop
pop
pop
mov
cmp
in
(bad)
outs
movs
and
(bad)
(bad)
(bad)
mov
scas
or
mov
outs
xchg
pop
mov
pop
(bad)
push
retf
cmp
aas
into
xor
sbb
test
lods
xchg
cli
(bad)
(bad)
(bad)
jmp
and
adc
adc
cmp
sub
cmp
add
cs
xchg
movs
dec
xchg
shl
add
xor
pop
mov
sub
adc
leave
add
dec
movs
outs
fstp
jecxz
cmps
or
or
push
sbb
(bad)
(bad)
adc
add
or
in
cmp
push
xor
adc
cmc
aas
cmp
adc
push
icebp
out
int3
sub
and
xor
clc
inc
xchg
(bad)
stc
cld
pop
add
add
(bad)
(bad)
call
mov
dec
sub
data16
lock
std
test
mov
and
add
test
call
push
inc
and
cmp
inc
mov
mov
dec
(bad)
pushf
add
mov
in
lds
(bad)
(bad)
inc
pop
pop
loope
fmulp
xlat
fmul
jno
pusha
scas
stos
fst
push
jmp
int
gs
(bad)
(bad)
jmp
xor
call
xor
cmps
lea
or
loopne
or
jbe
(bad)
mov
sub
and
call
(bad)
aam
adc
mov
into
add
dec
div
add
(bad)
push
int3
(bad)
(bad)
(bad)
call
in
icebp
retf
(bad)
jno
mov
mov
clc
add
mov
test
inc
cmp
cmps
xchg
or
mov
and
lahf
mov
popa
movs
rol
sbb
(bad)
dec
pop
push
inc
dec
jecxz
adc
cli
movs
or
jb
push
test
dec
mov
jne
sbb
rep
pusha
call
mov
jmp
movs
dec
jmp
cld
mov
push
mov
pop
jmp
repz
jmp
test
pop
out
(bad)
jg
jmp
jmp
lahf
pop
outs
push
pop
push
xlat
cwde
xchg
inc
add
scas
cld
sub
add
pusha
or
mov
pop
mov
fistp
mov
adc
dec
push
in
lock
add
mov
mov
inc
movhlps
stos
jno
xchg
dec
lods
add
dec
dec
lods
adc
cmp
mov
add
cmp
xor
jge
mov
dec
push
jp
mov
add
lods
or
ret
xor
jge
out
push
push
outs
adc
adc
hlt
pop
out
and
jecxz
adc
jmp
rol
dec
jmp
mov
or
or
daa
dec
adc
sbb
(bad)
and
push
push
mov
or
sbb
fisub
jg
repnz
add
inc
adc
outs
and
ins
ss
add
and
cld
std
call
mov
add
mov
add
add
cmp
jge
pop
mov
add
or
fcomp
sar
adc
cmp
jb
or
mov
and
or
test
outs
push
cmp
fadd
in
mov
push
test
add
imul
mov
pop
dec
mov
ins
sub
push
ins
dec
add
push
xchg
fimul
sub
jne
(bad)
adc
mov
imul
inc
lods
movs
sub
loopne
jle
call
lods
cmp
pop
pushf
push
fs
ins
push
cmp
daa
sub
dec
and
inc
cmp
imul
test
jg
sub
(bad)
jo
aas
and
mov
clc
push
sbb
adc
ja
push
leave
dec
xor
cdq
push
in
jp
push
cdq
std
gs
mov
push
mov
(bad)
mov
or
pop
ins
adc
mov
push
sbb
fs
push
scas
ror
pop
dec
add
lods
push
lock
lds
in
pop
push
pop
mov
pmaxsw
mov
pop
mov
mov
sub
and
and
sbb
inc
sbb
mov
xchg
ja
std
pop
cmp
mov
pop
lea
clc
or
out
add
xchg
out
add
ret
jmp
and
mov
or
add
sub
lahf
sbb
into
in
jg
mov
add
and
call
ror
mov
call
clc
mov
lahf
push
and
mov
mov
cwde
clc
xor
retf
retf
out
push
aaa
sbb
jp
call
add
cmp
test
push
xor
ror
or
pop
les
and
stos
pop
movs
push
pop
icebp
pusha
mov
lds
jg
pop
mov
pop
pop
ret
mov
mov
mov
lea
fisub
cmp
dec
inc
ds
nop
adc
fild
sub
cmp
std
sbb
cwde
push
cmp
jne
dec
outs
fisub
add
(bad)
stc
add
in
(bad)
in
pop
mov
sbb
jbe
mov
cmp
jne
sbb
jbe
gs
sbb
add
movs
outs
hlt
ins
add
mov
adc
sbb
popa
jo
push
xor
sub
xor
add
add
xchg
xchg
mov
push
xchg
aad
push
mov
sub
pop
xor
pop
mov
push
or
jl
repnz
add
cmp
add
shl
jb
das
mov
clc
push
mov
xor
push
xchg
dec
je
rcr
rcl
pusha
xchg
inc
(bad)
jge
push
xchg
push
pop
out
hlt
je
dec
enter
add
call
sti
add
dec
mov
jp
mov
into
mov
out
add
xchg
add
js
cs
sub
rcr
lock
add
xor
or
rol
ror
jns
add
outs
sub
sub
in
fstp
push
push
cdq
or
push
and
inc
adc
jg
jg
pop
cmp
jl
js
cmp
cmps
xchg
mov
sub
pushf
cli
add
data16
loopne
sbb
adc
ror
xor
dec
jo
mov
push
hlt
pop
rol
add
sbb
dec
shl
leave
pop
dec
or
pop
sub
xchg
call
or
push
adc
rol
push
loope
lock
add
jle
adc
ss
test
je
js
xor
push
(bad)
mov
add
jb
pusha
aaa
add
rol
es
sahf
stos
popa
jl
mov
lock
fiadd
push
clc
dec
mov
loopne
imul
mov
dec
aad
and
clc
mov
adc
cmp
mov
jle
add
and
push
call
or
sub
jbe
push
les
dec
call
ja
add
jb
je
mov
mov
popf
test
adc
mov
ja
sub
pop
sub
push
sbb
dec
shl
and
push
leave
cmps
in
rol
pop
inc
push
sub
push
test
jae
push
or
or
repnz
mov
sbb
ret
xor
test
push
test
repnz
push
xchg
aas
(bad)
popf
jbe
dec
retf
retf
(bad)
call
or
jns
mov
lods
std
daa
and
push
fs
call
and
pop
inc
jb
ret
mov
cmp
ret
adc
and
jo
xchg
mov
lods
inc
sub
or
dec
(bad)
sub
ds
dec
and
cld
pop
div
xor
cmp
jge
adc
leave
and
cmc
and
shl
stos
pop
pop
jg
add
repz
(bad)
and
sub
xor
mov
in
popf
push
rol
(bad)
call
cmp
(bad)
cmc
daa
cmc
mov
push
push
push
shl
add
dec
adc
mov
ins
and
fnstcw
or
lock
pop
push
pop
and
and
enter
hlt
jne
or
pop
stc
pop
add
push
daa
mov
fld
push
ja
mov
lahf
and
push
sbb
cmp
or
mov
push
xchg
clc
adc
pop
inc
push
dec
sub
(bad)
stos
mov
push
std
dec
(bad)
push
push
test
and
xor
js
cld
jle
push
push
sub
gs
mov
xchg
daa
jl
pop
sbb
inc
push
dec
(bad)
cs
fnstsw
lahf
xor
pusha
and
cwde
not
mov
rcr
mov
idiv
push
mov
mov
jg
xchg
pop
scas
mov
push
lea
push
push
inc
es
hlt
push
push
pop
sbb
mov
cmc
sbb
pop
ror
xlat
out
lds
lea
pushf
xlat
cmc
mov
mov
pop
aas
or
push
push
loope
jnp
push
ror
rcl
pop
(bad)
push
shr
lds
paddb
fistp
pop
jecxz
inc
push
mov
iret
loope
imul
je
sahf
push
call
sti
outs
fucom
push
jo
cdq
pop
jnp
mov
sub
fwait
stc
test
jle
push
inc
lods
rep
dec
jmp
jo
pushf
sbb
neg
mov
inc
imul
and
les
mov
sbb
clc
data16
adc
fcom
add
and
or
rcl
mov
inc
rol
repnz
inc
test
push
pop
inc
add
or
inc
mov
inc
cwde
mov
ja
mov
bound
mov
test
adc
out
jb
mov
push
je
pop
mov
iret
repz
bound
mov
xchg
lock
mov
clc
sub
(bad)
push
mov
and
push
dec
add
jmp
mov
inc
inc
int3
in
cmp
(bad)
ret
inc
or
push
xchg
push
iret
add
fs
inc
sub
mov
push
scas
retf
ret
mov
cmps
adc
cmps
mov
jp
jge
mov
dec
bnd
jle
push
int
push
ss
ror
mov
or
mov
adc
push
cdq
or
jno
and
mov
jb
ins
mov
adc
fs
pop
jne
or
je
inc
mov
test
or
push
loope
pop
mov
push
adc
movs
sar
push
fs
push
call
arpl
loopne
mov
cmps
dec
(bad)
aad
jno
(bad)
stos
xor
adc
scas
inc
mov
mov
adc
jo
fsub
mov
iret
add
or
mov
ret
js
fs
test
iret
jl
pop
push
call
xor
push
shld
sbb
jle
pop
inc
push
call
pop
addr16
xor
hlt
sub
mov
leave
inc
sub
inc
fiadd
push
push
cmp
(bad)
lds
cmp
sbb
outs
ret
cld
push
adc
out
pop
mov
push
mov
mov
es
mov
lock
adc
and
dec
dec
jbe
jl
and
add
dec
popa
out
push
jmp
add
mov
inc
dec
pop
dec
add
adc
rol
repnz
fisub
sub
es
add
fwait
popa
or
out
push
pop
and
fdiv
sbb
dec
shl
jl
push
div
dec
add
icebp
outs
cli
xchg
jo
data16
cmp
jne
test
test
dec
xor
add
pop
shr
xor
jmp
fwait
loop
dec
out
mov
xchg
push
jle
push
mov
test
cmp
ds
jl
inc
mov
and
pusha
pop
std
inc
xchg
inc
xchg
(bad)
cmp
jne
push
pop
ror
sbb
pop
push
push
xor
pusha
fucomi
std
shl
jae
push
xchg
shl
jecxz
(bad)
out
cwde
lds
adc
pop
push
add
clc
test
jb
ficom
mov
int3
and
mov
pop
cmc
inc
push
inc
bound
test
mov
sub
scas
push
movs
xchg
test
push
call
mov
xchg
pop
add
int3
call
mov
ds
cmp
inc
jno
outs
xor
test
and
mov
push
push
pop
adc
pop
and
jmp
enter
push
mov
push
push
ret
out
shr
stos
cmc
repnz
and
sbb
stos
pop
jmp
aaa
retf
(bad)
std
pop
xor
adc
dec
inc
xchg
sbb
shl
mov
dec
lock
lea
loope
test
(bad)
sbb
adc
call
sbb
pop
xchg
(bad)
sti
add
sbb
daa
add
nop
xor
call
add
mov
pop
shr
inc
into
inc
daa
je
jl
ficom
mov
ficom
mov
callw
cmp
in
cmp
add
mov
mov
push
lock
jle
lods
mov
mov
sbb
adc
(bad)
fcomp
ins
or
add
or
pop
stc
mov
mov
push
jg
mov
popf
mov
lods
inc
push
movs
mov
loopne
in
or
sbb
shl
pop
call
push
and
outs
or
cld
add
push
add
push
inc
sbb
jle
mov
(bad)
dec
push
jae
call
fisttp
push
js
loopne
je
jb
clc
inc
pop
inc
cwde
jmp
and
push
push
ja
dec
jg
pop
in
mov
jge
inc
inc
cmp
ret
sbb
cmp
sti
add
into
and
jo
rcr
cmp
or
jle
push
adc
dec
loop
js
mov
imul
ins
adc
ret
adc
pop
je
push
pusha
fs
repnz
loopne
push
add
xchg
pop
ins
jge
sub
(bad)
cmp
inc
cmps
in
inc
push
ret
ds
test
jo
dec
scas
popa
sbb
push
rol
dec
push
pop
inc
sbb
mov
inc
fst
xchg
and
inc
shl
leave
mov
sti
pop
sub
loopne
ds
pop
daa
lock
pop
and
jp
xor
mov
dec
pop
sbb
lock
jne
dec
and
call
sbb
or
add
ja
nop
push
sbb
call
imul
fsubrp
jle
fucomip
shl
push
jns
int
mov
sbb
rcr
scas
jmp
int3
jbe
push
call
mov
neg
inc
inc
lods
pop
ret
and
out
faddp
xchg
inc
or
add
fcmovnbe
add
aas
inc
icebp
ds
jnp
cmp
cmps
adc
add
sbb
(bad)
or
add
and
ffree
ret
ret
pop
ret
cwde
rcr
push
pop
push
add
xchg
dec
sbb
xchg
xchg
retf
push
or
and
push
push
ins
sub
add
mov
or
jecxz
popf
imul
aas
push
jmp
inc
jl
push
push
ret
inc
out
or
mov
scas
sbb
adc
test
repz
sub
or
daa
jne
push
cmps
push
sub
cli
inc
js
(bad)
call
adc
or
cmp
mov
sbb
inc
add
push
mov
and
ja
in
and
lods
test
pop
inc
sub
rcr
mov
enter
xor
cmps
jmp
push
jp
sbb
aam
adc
sub
push
add
pusha
iret
mov
jle
push
clc
jne
add
retf
add
call
dec
cmp
not
fcomp
or
mov
retf
(bad)
push
pushf
adc
lods
sub
add
push
rcl
xadd
sbb
in
imul
and
daa
push
push
push
push
or
xchg
fcomp
xor
mov
push
mov
or
xor
iret
pop
adc
adc
bound
or
pushf
sub
adc
jnp
mov
jg
and
jbe
rol
iret
mul
add
cmp
test
mov
dec
sti
ficom
mov
cmp
cmps
call
stc
cmp
fwait
shl
xchg
add
push
clc
add
and
and
cdq
xor
dec
rcl
int
cs
xor
cmp
adc
jne
sub
xchg
ror
stc
cld
pop
dec
std
in
mov
ds
jne
push
jne
out
dec
ss
(bad)
cmp
mov
hlt
add
push
inc
inc
neg
loopne
fcom
push
cmp
inc
(bad)
leave
dec
test
or
sar
(bad)
call
iret
lea
add
dec
pop
sbb
pushf
pushf
xchg
pop
out
xchg
sbb
jl
clc
jbe
out
jbe
fbstp
(bad)
mov
jne
xchg
sbb
jbe
loopne
cld
adc
push
push
call
inc
aaa
fcmovb
imul
sar
add
push
mov
in
jg
mov
daa
mov
es
es
mov
add
add
enter
mov
xor
retf
mov
inc
push
loopne
cld
xchg
lea
movs
cmp
push
adc
fcom
ss
push
sub
jle
sbb
or
(bad)
jle
out
in
add
add
add
mov
rcl
loopne
(bad)
cmc
int3
adc
add
dec
mov
add
sbb
sbb
xor
pop
sub
xchg
inc
push
rcl
push
xor
jno
xchg
data16
mov
dec
call
push
cmp
inc
js
sbb
cmp
inc
add
pop
mov
inc
mul
pop
lea
cwde
add
mov
loopne
xor
bound
push
and
adc
jmp
gs
ror
mov
cmp
sbb
push
pop
clc
mov
jo
inc
add
jno
and
mov
and
sub
or
cmp
add
jnp
jne
out
aaa
push
and
(bad)
loope
or
pop
int3
cwde
loopne
rol
push
jno
mov
xchg
push
xor
mov
stos
push
push
retf
dec
add
leave
jno
inc
add
mov
xchg
lock
mov
add
and
sahf
or
pop
jmp
mov
test
or
test
pop
add
or
lahf
sbb
mov
je
sub
and
mov
push
push
push
add
push
add
and
cpuid
hlt
inc
movs
sub
in
sbb
jecxz
mov
add
add
js
inc
adc
imul
jg
dec
mov
js
add
retf
das
aas
test
dec
sbb
clc
mov
push
adc
call
(bad)
out
or
jne
stos
add
aam
aas
rol
push
jl
retf
dec
jb
push
mov
add
or
cwde
pop
lahf
pop
imul
fstp
sbb
sub
in
mov
pop
hlt
mov
inc
cmp
out
lock
movsx
add
inc
ins
out
or
pusha
jmp
cmps
les
mov
adc
push
add
mov
stos
pop
push
out
fdiv
xor
es
pop
and
in
repz
test
rcr
xchg
sbb
pop
push
sar
dec
out
lahf
in
or
call
ret
jge
imul
out
xor
stos
fild
cmps
loopne
dec
retf
add
mov
jge
sub
or
xchg
dec
ret
jecxz
fadd
pop
inc
adc
ret
mov
lahf
das
nop
sbb
pop
or
pop
stos
xchg
sahf
icebp
or
shl
cmp
seto
pop
or
test
rol
cmp
push
push
push
cs
ret
jne
push
pop
cmc
adc
movs
call
add
mov
aaa
jne
pop
xor
or
sbb
test
push
imul
mov
or
add
loopne
int
xchg
xor
push
and
pop
xchg
xor
leave
test
xchg
cmp
retf
pop
pusha
cmp
push
jo
pushf
xor
push
js
and
xchg
bound
jecxz
aaa
lahf
(bad)
sbb
in
ja
sub
pop
ret
pusha
add
jmp
push
les
and
rcl
add
mov
loop
xor
push
push
push
mov
xchg
xchg
retf
jns
adc
jmp
ret
inc
dec
xor
lahf
fs
sbb
xor
test
js
(bad)
xchg
mov
call
dec
sbb
mov
dec
sbb
bound
or
sbb
sbb
cs
scas
jmp
adc
add
or
idiv
and
aad
xor
les
lea
scas
ret
and
arpl
call
pop
mov
xor
ds
mov
add
cmps
push
add
adc
div
test
and
sub
pop
sub
loopne
sub
movs
call
sahf
rol
sub
mov
mov
pop
mov
pusha
(bad)
call
inc
mov
lahf
int
shr
jle
push
enter
enter
push
mov
into
add
mov
push
enter
mov
jmp
mov
xor
rol
shr
sub
jmp
sbb
outs
jge
pop
mov
push
or
jmp
mov
jmp
pusha
icebp
mov
inc
cmp
jl
mov
inc
pop
pop
mov
std
mov
enter
sub
xor
js
clc
test
jle
mov
mov
adc
and
jl
test
aas
pop
jge
cmp
dec
inc
and
pop
mov
and
inc
sub
dec
inc
ret
repnz
repz
inc
jge
mov
adc
adc
adc
rol
mov
pop
sar
pop
pusha
ins
add
xor
mov
adc
xor
scas
shr
and
(bad)
sub
mov
into
enter
lea
iret
sbb
push
dec
mov
inc
cmp
(bad)
or
jmp
rol
fstp
aad
jmp
mov
mov
int
push
ret
aaa
sub
add
rol
loopne
or
inc
mov
xor
xor
std
jl
das
mov
add
mov
jmp
add
rol
into
push
mov
adc
add
enter
pusha
jg
pop
mov
pop
imul
cmps
cmp
jne
not
push
sti
inc
fs
call
pusha
push
ret
push
call
outs
jbe
test
push
or
or
es
push
out
mov
push
xor
mov
sbb
dec
push
adc
xlat
cmp
cmp
loope
je
mov
adc
adc
add
mov
xor
fcom
cbw
mov
cmc
pop
(bad)
test
fisubr
push
adc
pop
stc
sub
cmc
or
movs
push
or
jp
sub
jb
xchg
and
fwait
lods
add
pop
add
jno
sub
adc
pusha
jl
popa
(bad)
call
pop
call
int3
pop
ret
pop
dec
inc
gs
push
daa
or
add
xor
sar
cmp
xor
shl
cmp
and
fadd
(bad)
loopne
cmps
movd
pop
loope
pusha
inc
inc
add
rol
jns
fistp
sbb
mov
mov
or
dec
mov
mov
sbb
ins
inc
fucomp
aam
add
dec
adc
push
js
fiadd
test
cld
add
or
inc
xchg
adc
not
mov
mov
or
mov
push
mov
outs
push
sahf
(bad)
cmp
call
or
outs
or
mov
movs
push
shr
dec
dec
push
push
outs
rol
pop
mov
iret
xor
popa
jns
popa
or
sbb
mov
rcr
mov
imul
cmps
dec
pop
push
jge
in
sub
fwait
inc
ret
clc
jno
pop
outs
test
push
jo
mov
call
movs
dec
cmps
adc
mov
or
loop
stos
sub
jo
cli
rcl
add
ror
shr
or
(bad)
scas
icebp
push
das
sub
mov
sar
xbegin
or
je
add
inc
loop
retf
test
adc
push
fiadd
adc
cmp
sbb
or
add
xor
push
dec
je
cmp
or
push
data16
hlt
jb
sub
xor
xchg
sbb
jno
jge
fwait
push
add
jl
dec
or
leave
cmp
add
mov
clc
jne
lods
cmp
or
outs
mov
dec
adc
cmp
dec
pop
inc
into
jle
jl
pop
sbb
aad
pop
cwde
retf
daa
les
and
mov
mov
pop
sbb
jl
mov
sti
xlat
add
repnz
jg
clc
xchg
xchg
mov
call
jo
and
mov
pop
lods
pop
and
push
jmp
or
cmp
inc
test
call
sub
mov
ins
sbb
call
rol
cmp
adc
and
sub
in
mov
loopne
and
adc
add
inc
sbb
push
pop
mov
push
add
or
fild
mov
fistp
cli
fistp
or
pop
pop
mov
jns
jnp
test
les
pop
lock
out
adc
repnz
mov
push
add
mov
sub
push
or
sub
mov
stos
pop
or
pop
ret
int
test
ror
adc
mov
aam
ds
or
fcmovnbe
nop
push
dec
dec
inc
js
repz
inc
mov
xor
jp
lods
jbe
ret
test
daa
adc
mov
jmp
push
mov
shr
sub
leave
addr16
fadd
mov
lar
leave
leave
leave
add
leave
pop
or
or
leave
leave
leave
or
retf
lock
loopne
xor
jne
leave
int3
call
and
adc
cmp
cmp
ret
loopne
sar
adc
inc
nop
lahf
cmp
inc
sub
movs
jb
clc
cmp
ficom
add
sub
leave
push
jmp
push
shl
pop
daa
js
mov
je
push
shl
mov
mov
xor
inc
sub
loopne
push
cmp
sahf
push
adc
and
dec
add
lea
xchg
rcr
adc
push
mov
jmp
adc
ss
dec
popf
test
adc
lahf
jns
fcomp
pop
xchg
and
jl
push
(bad)
fidivr
fisub
in
test
add
mov
mov
adc
mov
xor
or
push
add
cld
icebp
(bad)
or
cld
inc
inc
and
dec
add
out
and
or
mov
inc
(bad)
mov
add
test
mov
cmp
cmp
fs
cs
ss
mov
pop
pop
and
xchg
and
das
xchg
sbb
add
sti
(bad)
adc
in
jae
popa
pushf
mov
inc
jbe
movs
sbb
adc
in
inc
pusha
push
outs
jg
jbe
(bad)
fidiv
or
ja
in
rcl
pop
adc
push
or
mov
test
jmp
mov
mov
(bad)
sahf
push
inc
fild
mov
add
and
sbb
xor
nop
inc
ds
add
into
push
and
xor
sub
cmp
mov
mov
dec
mov
mov
or
pop
movs
adc
arpl
lahf
xchg
mov
adc
(bad)
push
ins
adc
mov
xchg
push
sub
retf
scas
fistp
ja
lea
shl
sub
add
sahf
popa
lahf
push
pop
cmp
push
sub
mov
adc
lea
cmp
dec
add
je
jl
mov
je
push
cmp
cmp
ins
sbb
push
mov
cmp
sbb
mov
inc
cmp
call
push
inc
rol
popa
inc
inc
fiadd
cmp
sbb
sub
push
das
inc
nop
inc
or
sar
loopne
push
lahf
add
aad
mov
retf
cmp
mov
aas
cmp
inc
jo
jmp
sbb
push
xor
push
and
adc
add
cmp
or
bnd
xor
dec
inc
je
call
out
adc
and
sub
cmp
ja
jbe
pusha
push
xchg
sub
ret
add
pop
and
push
lea
mov
pop
stos
sub
and
jo
ins
and
jnp
outs
pop
ss
fadd
jb
sbb
add
lds
call
mov
inc
clc
adc
inc
imul
mov
dec
pop
je
pop
add
pusha
or
or
mov
js
nop
bound
mov
inc
xchg
dec
mov
(bad)
adc
mov
xor
std
in
xchg
push
dec
shl
push
dec
add
shl
push
sbb
das
fcmovu
stos
or
inc
push
xor
inc
add
mov
inc
xor
inc
xor
dec
or
inc
and
or
cs
cmps
fucomip
mov
pusha
dec
dec
dec
push
ret
cmp
xchg
add
pop
or
push
sar
stos
xor
imul
inc
fld
pmaxsw
mov
(bad)
push
iret
rol
xor
ficom
jns
lock
add
loopne
(bad)
pop
adc
icebp
(bad)
rcl
sbb
cmp
call
jmp
loopne
inc
cld
aam
loop
sar
loop
mov
aad
xchg
sbb
je
ja
mov
call
xor
fs
cmp
(bad)
xor
gs
cmps
and
jb
mov
push
je
inc
sub
cmp
add
cmps
dec
sub
jb
sbb
shl
sub
test
in
jp
mov
dec
or
jle
mov
xor
retf
imul
rcr
and
push
(bad)
dec
shl
in
imul
test
xchg
imul
push
cmp
push
cmps
xor
mov
ror
sbb
dec
retf
mov
popf
cmp
push
or
add
add
push
retf
div
and
lods
and
rol
mov
test
mov
sbb
ret
je
xor
xchg
push
rol
and
add
dec
ds
push
ds
cmp
add
xor
(bad)
push
inc
inc
adc
into
mov
bound
push
mov
jle
scas
test
cmp
mov
push
xor
mov
jo
test
jmp
(bad)
dec
mov
fdivr
ror
and
and
adc
in
and
leave
mov
imul
xor
jmp
mov
mov
and
add
and
jle
and
push
fsubr
in
dec
sbb
xor
ins
cmp
pop
scas
mov
data16
and
ja
leave
adc
pop
push
daa
xchg
data16
and
or
sub
test
fwait
dec
sub
xchg
rcr
pushf
dec
xor
mov
mov
mov
add
pop
cmp
sar
xor
nop
jo
adc
add
push
dec
inc
mov
jb
push
xor
or
sbb
loopne
std
outs
xchg
sub
sbb
call
ret
sub
push
pop
ss
xchg
push
and
hlt
sbb
lods
inc
ror
ds
shr
shl
cmp
lds
loope
xchg
retf
xor
push
inc
ins
sbb
cmp
mov
mov
xchg
ins
leave
cmp
mov
add
cmp
neg
jmp
jmp
in
loope
inc
mov
movs
xor
fstp
cs
outs
mov
inc
mov
enter
out
xor
xchg
enter
rol
sar
retf
pop
sbb
sbb
xor
enter
mov
sub
iret
das
dec
in
inc
inc
outs
(bad)
cmp
mov
fadd
push
push
push
call
push
rcr
pop
pop
lahf
mov
xchg
pop
inc
inc
adc
add
and
mov
popa
imul
add
xor
out
xor
ret
repnz
cs
sbb
rol
rol
xchg
and
cmp
nop
je
add
imul
arpl
(bad)
cmp
hlt
pop
cmp
cmps
xor
loop
jecxz
leave
cmc
lock
mov
cmps
dec
fdiv
jo
push
das
call
jl
mov
push
dec
call
mov
shl
push
sub
aad
push
aas
clc
add
cmp
pop
push
loop
mov
lock
sahf
jmp
dec
data16
scas
ds
pop
xchg
add
in
xor
mov
aas
lea
mov
rcr
dec
push
popf
push
inc
pop
aad
mov
pop
movs
add
sub
sbb
ret
xor
js
rol
cld
xchg
ja
sub
mov
xchg
adc
pop
push
pop
icebp
push
cdq
cmp
ja
or
test
mov
xchg
jo
les
push
cwde
add
(bad)
fwait
push
cmp
mov
push
sahf
movs
mov
jo
jne
sbb
jmp
scas
cmp
xchg
sub
rcl
xchg
add
scas
stos
jne
pop
xchg
push
shr
xor
and
sub
cmc
(bad)
adc
jo
pop
jmp
enter
adc
je
(bad)
add
xchg
test
or
ds
sub
repnz
pushf
sub
inc
add
in
es
xor
add
mov
int
lock
and
sub
push
cmp
sti
xchg
jno
push
shr
inc
fcmovnu
mov
(bad)
lea
push
sub
xor
dec
and
sub
sub
repz
repz
inc
dec
inc
imul
pushf
push
stos
sub
jmp
es
push
femms
fbstp
and
pop
dec
movs
pop
dec
dec
cmp
add
call
inc
add
iret
ss
xlat
outs
push
pop
push
push
add
and
fwait
xor
and
cmps
xchg
inc
rcl
jmp
stc
outs
add
push
dec
inc
and
fidiv
or
jmp
push
adc
sbb
and
pop
dec
je
rcr
push
add
push
nop
fs
out
out
inc
jne
inc
inc
mov
jmp
push
mov
sub
mov
adc
fstp
ret
retf
dec
and
add
cli
jae
pushf
mov
inc
jmp
add
test
and
retf
mov
mov
or
ret
sub
sbb
mov
test
sbb
or
xor
or
nop
jbe
jo
je
sub
adc
xchg
sbb
mov
cld
or
fisubr
adc
js
loop
es
ret
ins
add
sbb
and
(bad)
cmp
pop
cli
addr16
jbe
call
in
jbe
lock
out
jmp
(bad)
push
xor
clc
sub
xor
mov
sub
add
pop
push
jae
sub
or
mov
inc
inc
stos
aam
rcr
ret
aad
fcom
mov
retf
push
dec
push
sahf
fwait
dec
iret
mov
inc
xchg
sub
push
push
inc
clc
sub
mov
adc
inc
retf
std
pop
mov
mov
jmp
and
in
in
cdq
pop
pop
jmp
mov
jno
mov
ficom
aaa
cmp
jbe
mov
mov
sbb
mov
outs
fsubr
dec
jmp
call
push
fidivr
mov
push
loopne
adc
js
stc
add
rcr
mov
stc
or
jb
mov
popf
push
aam
inc
pop
and
je
je
mov
add
sbb
add
add
push
out
and
inc
daa
jo
inc
inc
sub
push
xchg
ret
jo
mov
shl
or
sub
cwde
fmul
test
add
sub
pop
mov
data16
shr
je
xchg
cs
in
stos
shl
mov
add
loop
out
mov
jb
push
mov
or
clc
xor
or
mov
xor
xor
mov
dec
mov
adc
pop
fisttp
imul
or
jns
jnp
stc
je
cmp
push
jge
xor
neg
mov
rcr
sar
jbe
xor
mov
icebp
je
push
or
pavgb
or
sbb
ja
lea
mov
inc
sub
nop
cmc
mov
(bad)
xor
add
popa
mov
cmp
sbb
adc
movups
or
sub
mov
out
pop
jmp
paddb
ins
sbb
mov
mov
cmp
jne
cmp
clc
dec
pop
imul
imul
imul
(bad)
dec
adc
aaa
lods
mov
jne
and
cld
movs
and
lock
sbb
cmps
inc
cmc
jne
mov
dec
xchg
pop
cld
mov
sbb
dec
fld
push
and
xor
adc
test
out
sbb
shr
call
inc
lahf
adc
fnstcw
jle
jne
dec
and
sub
sbb
ficom
and
mov
sub
push
inc
add
pop
sub
das
mov
add
inc
lods
xchg
adc
jle
and
xor
or
xchg
sbb
push
add
sub
sub
sti
mov
sti
push
add
push
xor
mov
imul
xchg
push
sub
push
push
call
into
push
out
int3
pop
inc
xchg
jle
loopne
push
shl
ret
mov
add
mov
imul
sub
jl
inc
and
dec
jo
xor
adc
cmp
adc
inc
mov
push
mov
sti
xchg
pusha
cwde
lea
stc
xor
adc
pop
cmp
dec
sbb
sbb
popa
test
add
cmp
ss
test
clc
aad
xor
push
adc
inc
mov
lods
call
mov
mov
jae
test
or
adc
dec
jmp
loopne
inc
or
ret
hlt
je
cmp
inc
xchg
add
jae
xor
push
mov
jg
cli
out
sbb
scas
pop
or
sub
sbb
xor
cs
add
sbb
jbe
outs
adc
shl
ret
sub
or
and
retf
inc
rcr
push
pop
fwait
xor
lahf
xchg
rol
or
rol
pop
xchg
jmp
shr
jbe
and
add
out
loopne
xchg
and
mov
xor
push
inc
loopne
add
dec
or
add
or
push
xchg
(bad)
push
adc
jmp
add
rol
xchg
xor
enter
and
retf
cmp
dec
lods
movs
lods
jns
or
cs
adc
push
and
and
call
adc
mov
mov
mov
mov
sbb
icebp
fisttp
push
dec
enter
and
nop
inc
push
and
xchg
sub
hlt
shl
cld
repnz
(bad)
int3
dec
inc
push
hlt
gs
sahf
in
mov
add
xor
sub
call
loopne
cmp
mov
or
push
adc
add
adc
fstp
inc
inc
inc
pop
adc
push
and
inc
jge
jl
rcl
lds
add
out
mov
xor
xchg
push
mov
movs
xor
div
xor
in
add
cmp
and
ins
cs
inc
inc
adc
cmp
lea
add
rol
ins
call
jns
fmul
shl
sbb
xor
cli
xlat
call
jecxz
adc
shl
arpl
jmp
pusha
sbb
jle
clc
add
add
or
jp
push
les
sub
jo
add
pop
cmp
retf
dec
sbb
dec
sbb
pop
les
dec
ficom
int3
xor
sbb
shl
mov
jl
mov
es
(bad)
lock
push
mov
mov
rcr
jmp
jae
pop
push
xlat
sbb
jb
cmp
nop
or
sar
jne
nop
pushf
sub
sub
add
mov
and
pop
outs
or
movzx
fisubr
ret
fs
fimul
xchg
dec
jo
mov
enter
pop
sub
or
xchg
jo
sbb
cmp
inc
ja
xlat
inc
add
cs
fs
pop
not
pushf
mov
imul
sub
add
dec
loopne
es
add
xchg
or
lea
aad
stos
int3
loope
xor
in
pop
retf
cwde
cmp
pop
cmp
faddp
mov
lea
lock
cmps
jmp
movs
inc
and
xchg
xchg
sbb
or
inc
jo
lods
or
shr
sub
or
inc
adc
enter
mov
ja
xchg
push
pusha
ret
ds
or
out
add
test
and
nop
and
add
pop
mov
dec
mov
pop
adc
adc
mov
push
jp
mov
inc
aaa
dec
mov
jp
lods
and
leave
push
addr16
mov
or
jae
or
cmp
jmp
jbe
push
daa
cwde
or
inc
push
aaa
(bad)
or
xchg
(bad)
mov
(bad)
ret
sahf
lods
adc
mul
imul
and
mov
hlt
mov
push
sbb
jp
mov
sbb
scas
jmp
jae
mov
jg
or
(bad)
sgdtd
jmp
add
push
xchg
mul
sub
pop
imul
cmp
add
mov
xchg
imul
test
mov
xchg
and
adc
js
dec
loopne
push
adc
adc
inc
jae
aas
sti
dec
or
(bad)
(bad)
adc
adc
jbe
push
pop
(bad)
add
jo
sub
call
cmps
icebp
(bad)
ret
cmp
jae
jmp
fwait
and
adc
je
push
jecxz
xor
dec
jb
lea
lea
mov
add
adc
push
push
add
rcl
mov
retf
out
xor
pop
shl
fist
xchg
add
loop
cmp
dec
retf
dec
push
sub
dec
dec
mov
call
(bad)
jbe
add
fstp
cmp
and
pop
cwde
ret
xor
inc
xor
xchg
pop
add
cmp
in
jnp
cmp
inc
jmp
jne
push
jb
add
fldcw
mov
fcomp
imul
es
or
test
push
stos
or
outs
dec
inc
dec
add
jb
loopne
cmp
pop
jmp
adc
jne
and
sub
dec
ins
ret
xor
(bad)
int3
mov
add
add
aas
xchg
add
or
xchg
stc
jg
pop
js
hlt
icebp
sbb
dec
add
mov
rol
(bad)
(bad)
sbb
js
mov
popf
or
adc
lock
adc
pusha
call
pop
fmul
mov
and
sbb
ja
adc
arpl
add
mov
xchg
enter
pop
inc
push
or
push
and
cmps
enter
stc
or
adc
cli
dec
xor
or
push
push
call
mov
push
test
mov
scas
or
out
mov
push
push
pop
sbb
or
cli
push
jb
sub
cs
retf
and
mov
sub
push
push
mov
add
cmp
test
in
jge
test
mov
inc
and
pop
int
stos
hlt
adc
out
cmp
jmp
add
push
cmps
inc
clc
or
mov
cmp
add
jp
inc
mov
xor
test
test
iret
adc
mov
fnstsw
pop
sub
or
jge
sbb
shr
push
enter
inc
cmp
push
outs
mov
je
cdq
iret
xor
cmp
leave
add
mov
cmps
pop
mov
rol
cs
xor
hlt
cmps
push
lods
jne
(bad)
fdivr
sbb
mov
sub
dec
inc
(bad)
cwde
sbb
movs
loope
add
and
mov
xor
inc
pop
cmp
es
add
push
int3
adc
add
cmp
xor
mov
adc
fld
cmps
push
sub
enter
or
sbb
push
and
push
retf
push
jbe
inc
jb
dec
push
in
push
enter
add
inc
xchg
xchg
pop
in
or
xchg
and
cmps
mov
sahf
mov
out
in
and
aas
inc
or
jg
push
inc
sub
sbb
cmp
(bad)
xor
mov
jns
adc
sub
enter
mov
loop
or
(bad)
test
loop
test
jp
sbb
ja
sbb
out
mov
nop
ds
cmp
bound
and
and
push
cli
in
test
cmp
cwde
data16
add
ja
mov
jns
sahf
adc
ja
je
mov
scas
pop
dec
daa
dec
adc
xchg
in
push
add
inc
cmp
inc
add
loopne
mov
imul
jae
or
dec
aas
and
cmp
shr
mov
jno
jecxz
add
mov
ret
jne
sub
loope
dec
pop
arpl
bound
sbb
mov
js
je
ins
or
push
xlat
pop
sbb
push
fistp
sbb
nop
mov
jge
clc
sub
mov
cmp
je
xlat
and
cmc
bound
fmul
xchg
xlat
out
sbb
test
sub
loopne
add
out
inc
pushf
dec
ror
popf
or
pop
cmp
shl
jle
and
push
dec
cmp
daa
jne
mov
pusha
in
pop
mov
les
jl
rol
jge
or
test
sub
pop
mov
push
pop
ficom
cmp
adc
mov
pop
adc
inc
or
add
popa
mov
pop
sub
mov
inc
pop
in
sub
cdq
cmp
clc
push
or
or
shl
outs
fwait
sbb
xor
adc
je
in
jmp
mov
add
cmps
inc
xor
push
mov
xor
dec
pop
popa
jl
rol
dec
cmp
int
cmp
push
mov
jmp
sub
lods
sbb
ret
cmps
jmp
sti
xor
(bad)
test
into
pop
add
sub
stc
xor
out
pop
ret
inc
pop
(bad)
mov
dec
sahf
data16
pusha
add
mov
lahf
out
xor
mov
arpl
imul
imul
jne
ins
mov
out
push
outs
xchg
jecxz
push
and
xchg
shr
fisttp
jmp
mov
jno
ret
in
jns
add
mov
cli
movs
cmp
out
jns
out
pusha
fs
stos
sbb
jo
pop
add
jbe
push
jnp
xchg
sbb
inc
dec
push
lea
sbb
add
js
jmp
or
mov
push
shl
cli
ss
call
loopne
pop
icebp
mov
cmp
dec
adc
mov
(bad)
sbb
or
and
test
add
ins
pop
add
or
mov
add
sar
or
popa
ret
push
rcl
pop
ficomp
inc
adc
or
repz
movs
je
sub
xchg
inc
arpl
inc
pop
add
sub
js
aas
or
out
clc
pcmpeqd
test
mov
jle
add
add
inc
jae
movs
es
and
call
add
add
pop
lods
rcr
mov
jo
rcl
sbb
imul
fst
js
call
and
lea
fs
popf
arpl
add
push
inc
fwait
test
popa
push
dec
sub
je
fisttp
push
xor
loop
sub
push
nop
pop
adc
mov
loope
jmp
mov
and
test
ror
ret
mov
loop
dec
cmps
sub
cmp
or
loope
xor
repnz
push
enter
jg
cmp
push
jle
mov
(bad)
push
sar
sub
mov
scas
pop
xchg
cmp
jge
adc
data16
sbb
jle
mov
pop
jl
dec
out
sub
or
push
leave
pop
pusha
sbb
cld
jmp
and
sbb
shr
and
xor
sbb
add
pop
cmp
into
mov
loop
lea
dec
or
fstp
test
je
shr
or
push
pshufd
test
stc
and
ror
add
jbe
mov
add
add
add
cmp
je
les
les
call
adc
xchg
jo
and
and
xchg
in
and
cmp
xchg
or
pusha
gs
cli
ins
mov
and
fst
push
cmp
jae
push
and
outs
mov
sub
clc
jle
inc
inc
jmp
adc
xor
in
enter
sbb
cmp
jno
mov
outs
push
dec
jnp
or
add
js
(bad)
ja
pop
into
out
mov
lods
sbb
stos
mov
mov
mov
and
and
mov
addr16
lea
add
cmp
js
mov
pop
sub
int
add
and
addr16
or
outs
je
jmp
xor
jo
das
mov
mov
add
or
test
xchg
not
push
lods
xor
not
xor
in
xchg
lods
sub
cmp
and
jl
adc
push
int
addr16
lods
push
or
mov
pop
or
pop
push
mov
hlt
or
pop
jmp
lods
mov
cmps
or
cwde
ss
test
jg
mov
jge
add
pusha
xor
mov
cmc
loop
es
in
scas
data16
jb
jne
mov
rcr
xchg
push
pop
test
xchg
sub
call
mov
jne
sub
fdivrp
inc
arpl
jmp
nop
push
(bad)
not
(bad)
add
cli
jle
pop
mov
sub
push
pop
nop
aam
add
mov
arpl
pop
dec
pop
adc
ret
sbb
(bad)
jmp
mov
pop
add
cmp
jo
sbb
retf
add
mov
or
mov
dec
dec
push
push
jo
cwde
out
mov
jbe
cwde
fs
add
(bad)
cmp
int3
mov
loop
jbe
mov
mul
adc
(bad)
cmp
add
push
xchg
or
das
jno
push
jmp
jg
sub
mov
mov
xlat
lock
imul
mov
and
add
and
add
ret
es
xchg
data16
jno
jne
xlat
add
push
sbb
pop
xchg
add
js
popf
mov
jbe
lea
dec
lea
jnp
cmp
adc
push
jmp
and
cmc
sub
add
rcr
in
add
inc
jmp
jno
(bad)
mov
cmp
test
lods
sbb
loop
pop
add
gs
pop
or
sub
sub
xlat
int
push
cmp
je
call
mov
add
out
and
call
out
mov
dec
ins
shl
lods
das
ficom
ret
and
ret
adc
push
movs
outs
sub
mov
in
popf
dec
xor
add
add
hlt
into
mov
inc
add
jle
in
fstp
mov
mov
mov
inc
cmp
jbe
adc
clc
mov
jp
add
and
jmp
shr
mov
pop
mov
repz
pop
int
add
push
sub
or
mov
data16
or
test
xchg
xchg
fdiv
or
cwde
add
aam
mov
loop
cmp
call
jb
fbstp
add
sub
xchg
xor
sbb
imul
clc
xchg
inc
push
push
int
mov
cmp
add
lods
mov
pop
mov
push
dec
in
test
add
xchg
cdq
jl
inc
dec
imul
je
mov
push
stos
les
add
dec
inc
cmp
clc
and
je
jle
lods
mov
scas
retf
dec
mov
ins
mov
je
xchg
and
push
adc
mov
xchg
push
pop
push
cmp
pop
sub
cmp
or
nop
lahf
mov
pop
mov
shl
or
shl
add
push
sub
js
scas
xchg
fldcw
fbld
sbb
je
push
cmp
(bad)
in
addr16
mov
lea
push
pusha
adc
sti
pop
or
test
clc
js
mov
outs
std
add
dec
pop
lea
or
cmp
jb
mov
mov
add
mov
fwait
xchg
inc
adc
sbb
adc
pushf
aas
inc
mov
scas
mov
(bad)
jge
and
loopne
cs
gs
aad
or
in
add
shl
pop
pop
adc
and
or
sub
push
jmp
mov
jmp
(bad)
movs
mov
adc
add
xor
cmc
or
dec
inc
adc
jns
xchg
xor
and
lea
jle
jge
sbb
mov
retf
test
add
sbb
lock
or
add
cmp
js
sbb
dec
jge
sub
jle
test
movs
jle
stos
sub
mov
ins
push
fbstp
nop
jl
cmp
aaa
cmp
push
or
test
mov
add
adc
fsub
repnz
or
adc
scas
add
out
lea
mov
outs
lods
mov
adc
pushf
mov
jecxz
push
add
cmc
mov
push
inc
add
and
add
nop
sbb
xor
adc
xor
popa
push
sbb
in
adc
mov
jns
arpl
jnp
or
aad
or
fisttp
adc
mov
js
call
mov
mov
pop
pop
mov
lods
fimul
jbe
stc
push
cmp
out
(bad)
aad
pop
inc
out
add
mov
or
ror
into
jmp
cmc
mov
pop
pop
jg
or
and
mov
or
and
jl
add
in
out
sbb
(bad)
les
dec
jae
or
or
enter
loope
(bad)
or
mov
pushf
cmp
mov
sar
lods
aas
cmp
sub
sti
or
repz
sbb
gs
int3
add
scas
and
aas
xchg
xchg
sub
xor
push
or
pop
les
xchg
hlt
mov
fs
adc
mul
dec
inc
and
enter
xchg
cmp
fstp
nop
out
popa
xor
out
(bad)
or
adc
inc
into
mov
sub
sbb
sbb
inc
jg
and
sbb
nop
adc
icebp
fcmovu
add
pop
out
add
cmp
adc
add
add
mov
movs
inc
retf
add
ret
nop
cli
mov
cmps
mov
pop
add
and
cmp
(bad)
mov
pop
adc
mov
std
nop
and
or
pop
lea
stc
hlt
ret
lahf
adc
add
call
popa
inc
ins
or
mov
(bad)
jle
repz
pop
xchg
mov
aaa
mov
loope
add
std
outs
mov
rcr
mov
dec
lea
xchg
aad
inc
and
ret
jle
add
(bad)
sub
js
(bad)
or
or
pop
inc
cmp
shl
push
adc
jns
or
xchg
pop
adc
push
mov
ds
pop
movs
cmp
je
rcl
fcom
jle
fsub
fsubr
idiv
push
cmc
cwde
inc
sub
sbb
hlt
mov
xor
or
icebp
add
xchg
xchg
sahf
test
sub
call
sbb
mov
fiadd
mov
lea
ja
mov
push
in
and
lods
pop
xor
mov
out
mov
out
dec
jnp
lea
push
ret
retf
dec
ret
adc
xchg
cdq
sub
inc
and
mov
cmp
sahf
push
xchg
retf
and
mov
add
outs
fwait
sub
jl
mov
push
(bad)
popf
or
push
xchg
add
lods
jmp
mov
add
int3
sar
pop
sar
not
repnz
push
adc
add
popa
push
jo
xor
push
dec
int
clc
sbb
add
jno
(bad)
pop
pop
adc
pop
test
jno
movs
and
lock
pop
jns
jcxz
cmp
inc
push
retf
nop
nop
inc
aas
push
adc
push
jno
jmp
xchg
mov
jl
add
jle
in
jp
fisubr
xor
retf
push
addr16
and
adc
(bad)
(bad)
add
retf
dec
xor
popa
leave
les
pop
test
cwde
add
adc
aas
inc
lods
adc
sbb
add
rcl
jl
jle
dec
mov
add
jnp
jo
sbb
jmp
inc
movs
dec
inc
sub
lea
sbb
pop
mov
daa
push
retf
cld
popa
lock
or
cmp
sub
add
jns
xor
jo
adc
mov
xlat
xchg
test
add
inc
xchg
scas
inc
jmp
inc
pop
sub
add
jmp
std
test
fisttp
jge
mov
jnp
cmp
shr
fcom
mov
ds
cmp
xchg
bound
cmp
xor
sbb
pusha
or
mov
mov
cmp
push
stc
xor
mov
ret
daa
aas
sub
add
cwde
pop
sbb
or
repnz
in
xchg
xor
push
and
into
pusha
nop
je
lea
adc
in
into
push
mov
xor
imul
cs
pop
and
adc
push
cwde
ds
xchg
or
dec
pop
dec
movs
or
adc
xchg
imul
popa
push
cwde
fcom
mov
dec
adc
add
cmp
pop
adc
xor
inc
gs
pop
fcom
jmp
mov
cmp
mov
add
dec
popa
or
mov
push
cmp
fmul
push
shl
aaa
imul
add
and
dec
mov
jbe
jl
cmp
movs
ins
out
dec
mov
nop
pop
add
clc
push
mov
jle
push
mov
jmp
jle
ss
or
and
test
cli
call
test
jo
fisttp
or
sbb
mov
not
inc
pusha
pop
pusha
pop
inc
not
inc
loopne
add
test
fist
push
xor
fld
std
mov
sbb
cli
jmp
sub
hlt
add
cmp
xor
repz
or
pop
call
add
pop
mov
inc
fdiv
(bad)
repnz
add
outs
xchg
add
pop
mov
lds
std
xor
add
sub
add
jnp
or
or
jbe
pusha
xor
nop
mov
push
adc
mov
iret
sub
inc
enter
push
mov
sub
or
mov
jo
loopne
pop
jecxz
dec
mov
dec
or
sahf
mov
push
add
imul
xor
push
call
xchg
in
pusha
jnp
xor
test
dec
rcr
out
inc
or
aaa
mov
dec
or
push
mov
call
push
inc
inc
js
and
or
pop
jnp
add
mov
adc
and
outs
add
arpl
and
push
jbe
add
jle
cmp
jge
mov
ins
mov
adc
inc
(bad)
jp
nop
in
call
ds
push
fiadd
or
or
call
lea
or
mov
clc
jge
jo
repz
test
jl
mov
dec
adc
mov
(bad)
sbb
je
inc
pop
cli
jmp
stc
lock
pop
xchg
aaa
adc
or
xor
inc
push
mov
fcmovb
jl
mov
xchg
call
inc
pop
out
mov
dec
sbb
sub
fidivr
add
add
out
jle
mov
bound
cmp
cmp
pop
mov
jo
jge
cmp
jl
or
or
shl
call
neg
push
add
in
pop
nop
jb
jl
jmp
mov
jl
or
not
push
jle
cmp
jl
cmp
jno
sahf
adc
adc
test
push
and
mov
jbe
cmp
mov
add
xchg
add
push
mov
xor
add
mov
into
lock
mov
mov
in
fsub
pop
mov
or
push
jl
mov
sub
aam
inc
push
clc
dec
jmp
mov
nop
stos
mov
ret
sahf
popf
out
and
mov
popa
add
add
xchg
inc
movs
scas
stos
adc
pop
(bad)
mov
data16
xchg
call
cmp
nop
ds
mov
loopne
(bad)
push
inc
or
push
lods
bound
cld
xor
mov
push
pop
sub
lock
add
mov
or
jmp
push
sub
fsubr
mov
add
sub
add
push
nop
(bad)
in
or
iret
mov
push
ret
or
add
cmps
bound
dec
inc
not
sbb
pushf
cs
jmp
push
jle
adc
inc
xchg
test
(bad)
add
push
data16
push
inc
cs
add
or
or
ins
pop
int3
data16
pushf
mov
jne
std
and
dec
hlt
mov
inc
std
push
call
(bad)
(bad)
sub
push
ret
cli
jbe
dec
popa
iret
into
repnz
or
pop
push
aam
stos
jnp
add
cmp
das
inc
jmp
(bad)
out
sahf
add
maxps
sbb
sbb
pop
int3
lea
jb
add
sbb
push
add
push
push
ds
xor
pusha
fidiv
sbb
push
pop
pop
adc
mov
inc
add
lea
imul
aam
push
mov
jg
dec
inc
cli
or
cmp
jb
sbb
mov
stos
adc
mov
imul
ret
jl
pop
cmp
mov
push
jae
shl
push
mov
sub
leave
leave
ret
sub
jmp
pusha
sbb
push
(bad)
mov
mov
dec
lahf
cmp
icebp
(bad)
or
pop
xchg
fwait
and
xor
xchg
mov
out
push
push
lea
mov
adc
add
adc
cli
aad
arpl
ret
add
lods
add
jbe
sub
sbb
pop
inc
into
ins
add
inc
shl
adc
(bad)
sti
cmp
sub
jae
push
call
fnstcw
retf
sbb
pop
neg
jge
xlat
(bad)
sub
jb
push
or
ret
ror
sti
push
and
push
or
das
sbb
jbe
push
call
ss
fsubr
(bad)
mov
aam
mov
aas
in
mov
jmp
mov
pop
mov
jb
inc
inc
pop
jo
adc
adc
sbb
rcl
aaa
inc
(bad)
fidiv
jle
mov
sbb
out
or
outs
es
jae
outs
sub
or
stos
add
add
xor
dec
mov
or
fwait
mov
es
dec
jp
xor
inc
mov
xchg
scas
aaa
add
xchg
ror
add
push
and
jg
add
push
js
test
push
add
sbb
dec
div
and
mov
fidivr
mov
sbb
stos
lods
data16
(bad)
in
xchg
and
add
icebp
push
or
rol
dec
call
xor
pop
ror
or
mov
lods
xor
lea
in
xor
mov
call
dec
jge
les
(bad)
int3
sub
push
ins
or
fistp
mov
pop
xor
jle
cmp
fiadd
test
pop
test
xchg
in
cmp
je
inc
xor
mov
push
sbb
sub
mov
lods
sub
int
aaa
add
sub
jns
fist
outs
pop
pop
push
cmp
sbb
popa
lock
icebp
adc
push
dec
movs
mov
inc
test
test
xor
les
jne
pushf
les
leave
or
xchg
push
ret
sbb
lods
and
js
fwait
pop
add
and
addr16
sub
adc
enter
(bad)
push
test
out
xlat
xor
loope
fiadd
mov
(bad)
pop
dec
xlat
arpl
outs
mov
lahf
sub
jmp
into
xchg
push
jg
loope
pop
rcr
ret
jnp
xchg
out
push
adc
pop
movs
xor
mov
dec
fdiv
(bad)
adc
cmp
pop
repnz
adc
inc
push
push
cmp
pop
or
sub
inc
sub
test
jno
and
xor
sbb
js
add
add
jbe
xor
xchg
sbb
movs
out
sbb
mov
jae
jecxz
or
ror
add
out
in
fsub
call
xor
in
mov
jnp
push
inc
add
sbb
and
push
pop
dec
jecxz
jae
sub
jbe
or
jge
and
movs
and
xchg
xchg
fwait
outs
add
add
or
lods
sbb
ds
call
xchg
push
push
je
mov
push
inc
sbb
loop
sbb
push
add
pop
leave
fcmovb
inc
mov
dec
pop
int3
loop
dec
mov
sub
push
xchg
cwde
mov
or
ret
jecxz
icebp
adc
mov
mov
lock
push
mov
xchg
(bad)
push
pop
int3
(bad)
je
ja
xlat
and
jb
lahf
jle
pushf
sbb
mov
lahf
mov
aam
pusha
mov
pop
mov
or
outs
rcr
mov
xor
sbb
cdq
xchg
data16
sbb
popf
inc
push
fild
push
push
bound
inc
add
jge
xchg
and
and
bound
push
pmaxsw
mov
clc
mov
test
jle
repnz
gs
data16
add
cmp
mov
pop
push
test
or
jo
cmps
adc
pop
fldenv
out
sahf
aad
inc
arpl
fwait
adc
call
jns
test
in
fild
mov
mov
lock
mov
push
mov
or
ins
daa
sti
jbe
sbb
fild
mov
adc
or
lock
inc
sbb
inc
pop
xchg
enter
mov
out
call
or
fadd
ret
out
lea
shr
mov
or
adc
fcomp
add
jae
lea
xchg
imul
or
leave
inc
shr
jmp
add
(bad)
push
dec
adc
lods
inc
and
adc
pushf
adc
scas
adc
sub
adc
xchg
mov
xchg
xor
xchg
les
add
or
fild
xchg
inc
outs
fnstcw
mov
pop
mov
idiv
adc
call
adc
fidiv
add
adc
ja
out
push
data16
shl
loope
sbb
ds
jne
push
sub
loop
inc
adc
dec
xchg
sahf
dec
inc
and
jne
(bad)
xchg
mov
adc
mov
out
or
jb
loope
push
add
fisttp
je
and
xchg
or
or
mov
mov
repnz
and
shl
sub
enter
int3
mov
imul
mov
lock
and
dec
or
push
mov
push
cdq
retf
dec
mov
pop
push
xor
sub
cmps
and
adc
mov
cwde
dec
push
fdivr
sti
and
rcr
mov
adc
shr
mov
(bad)
xor
shl
adc
scas
mov
(bad)
dec
xor
or
push
cs
cld
pop
test
cwde
pop
out
push
xor
adc
out
mov
(bad)
add
push
jo
sbb
js
fild
cmp
adc
call
add
inc
movzx
movzx
sub
jne
mov
or
xor
and
jns
fwait
and
jbe
add
ltr
fwait
out
jbe
add
movs
pusha
cmps
lock
push
xchg
sub
bound
rol
mov
push
test
in
call
push
or
mov
nop
jbe
jle
jl
cmps
push
mov
dec
push
call
jo
dec
or
dec
or
adc
pop
cwde
sbb
pop
dec
jle
jmp
push
call
popa
shl
mov
call
je
leave
cs
lahf
and
sbb
inc
jb
hlt
(bad)
pop
jmp
jb
pop
cmp
push
pop
jb
or
mov
lock
call
jo
xchg
push
ins
xchg
push
mov
add
xor
mov
adc
xor
xchg
les
cwde
jmp
jne
fs
jne
jno
mov
loope
or
or
xor
daa
push
nop
push
or
push
loope
int3
fcomp
mov
out
mov
dec
jnp
ficomp
add
and
mov
and
adc
xor
cmp
adc
or
sar
push
add
pop
(bad)
and
int3
jnp
xbegin
jmp
imul
pop
inc
xchg
fs
fdiv
push
push
lock
sub
mov
sub
fs
add
inc
sti
je
pop
or
jbe
xchg
ins
sub
push
adc
cdq
sub
mov
cdq
in
and
push
loope
test
int
adc
mov
jl
lea
xor
mov
adc
xor
imul
dec
cmps
push
popf
nop
test
pop
icebp
pusha
lods
in
push
pop
push
xor
pop
bound
jo
rol
pushf
sub
scas
push
add
ins
out
sbb
pusha
pop
add
add
mov
dec
sub
or
inc
ret
out
fcmovne
int
push
jmp
adc
sbb
ret
into
sbb
mov
push
or
sbb
mov
lds
jo
in
push
test
jo
test
jnp
xchg
sub
and
cmp
ja
mov
js
(bad)
cwde
inc
dec
inc
(bad)
xchg
inc
mov
jo
jne
or
dec
jbe
jmp
stc
jb
push
xchg
push
push
adc
or
or
dec
and
inc
push
add
mov
(bad)
push
ds
or
add
dec
push
sbb
and
lods
sub
xchg
pop
add
fstp
cs
movsx
push
push
(bad)
fiadd
sti
je
xor
mov
add
test
add
pop
sub
pop
xchg
add
loop
or
add
adc
sar
into
adc
or
fcmove
or
dec
in
pop
in
(bad)
cmp
enter
inc
xor
daa
ret
fstp
xchg
int
shl
xor
push
fnstcw
add
xor
pop
xor
mov
xor
xor
cmp
mov
dec
add
in
mov
or
sub
push
ds
sbb
sbb
ja
call
mov
inc
in
and
int3
inc
add
ss
fidiv
lock
jle
sahf
cmp
pop
cmp
repnz
mov
jl
sub
loopne
cmp
jne
dec
sub
daa
shr
retf
loop
fmul
imul
inc
jno
imul
jo
nop
dec
test
jmp
xor
jl
sbb
lea
int3
sub
sbb
mov
push
xchg
xchg
shl
or
cmp
sub
lods
pop
mov
inc
inc
ins
mov
cmp
ins
shl
mov
enter
jo
xor
dec
rep
adc
jne
push
add
loopne
jl
adc
mov
leave
mov
out
mov
hlt
inc
xchg
nop
cmp
out
xor
clc
push
cld
add
add
pushf
add
mov
mov
mov
pop
push
pusha
je
sub
add
inc
sbb
xor
js
je
jle
sbb
pop
or
inc
sub
inc
enter
inc
neg
push
cwde
aaa
dec
mov
(bad)
out
cmp
out
popf
lods
push
jle
add
add
(bad)
inc
mov
idiv
sbb
mov
cmp
loope
push
mov
call
test
lahf
pop
lea
(bad)
into
add
in
adc
add
xchg
(bad)
(bad)
and
inc
ins
add
jge
xchg
pop
xlat
pusha
fs
iret
dec
cdq
mov
cmp
sti
cli
push
dec
dec
popa
ja
hlt
cmp
jb
adc
inc
sbb
dec
push
and
xchg
mov
xchg
inc
fist
adc
inc
ins
push
popf
dec
sub
clc
xor
pop
adc
or
xor
xor
mov
mov
mov
(bad)
push
jecxz
ficomp
call
das
add
sub
push
cmp
mov
in
in
add
outs
imul
inc
and
int
scas
(bad)
movups
jg
mov
popf
xchg
scas
call
movs
loopne
mov
push
pop
pop
je
shl
and
mov
push
mov
int3
and
and
fld
cmc
aad
mov
nop
std
add
jne
cli
in
cmps
int3
daa
mov
sub
cdq
test
or
jnp
lods
jb
fcomp
xor
pop
pop
push
sbb
call
inc
sbb
imul
mov
outs
xor
call
or
adc
test
push
clc
add
add
call
or
(bad)
ret
loopne
mov
cmp
mov
fild
loope
std
out
test
jnp
retf
test
and
dec
xor
in
push
add
(bad)
in
sbb
jl
xor
popf
arpl
sub
adc
xor
push
xchg
dec
fucomi
push
xor
and
inc
push
lea
jo
test
sub
cmp
(bad)
dec
cmp
jle
push
mov
or
lea
rep
push
xor
fcomp
mov
push
ds
mov
add
clc
clc
retf
add
cmp
push
fscale
sbb
out
mov
add
loopne
movs
push
jmp
push
dec
pop
push
lods
pop
pusha
(bad)
push
xchg
add
in
cwde
es
stos
adc
lea
cdq
push
(bad)
push
cmp
out
dec
nop
xor
rol
popf
leave
stos
sub
(bad)
loopne
ins
xor
mov
jl
retf
enter
and
jnp
xor
clc
inc
ds
sahf
inc
and
mov
push
mov
ficom
fmul
lock
jl
jmp
adc
mov
call
and
clc
mov
mov
fisttp
repz
sbb
dec
arpl
xor
shl
jle
outs
ja
lea
add
mul
in
xchg
data16
hlt
lea
stc
mov
dec
test
or
aam
scas
imul
dec
test
jecxz
adc
addr16
jo
test
push
or
xchg
push
mov
xchg
add
push
cmp
call
stc
xchg
or
(bad)
adc
cmp
aaa
or
nop
add
mov
xlat
call
jge
mov
jmp
push
jo
js
jo
xchg
cmp
pop
xor
or
hlt
add
add
das
push
add
in
ins
sub
inc
add
and
enter
scas
sub
out
inc
push
in
clc
cmc
adc
sub
pop
xor
repnz
add
xor
imul
mov
jg
adc
inc
(bad)
jmp
mov
pop
lahf
mov
pop
jo
inc
pop
or
lea
fist
mov
dec
fisttp
aam
inc
fadd
repnz
fist
rcl
fist
adc
push
inc
je
int3
adc
mov
lock
and
lea
out
into
or
sub
inc
lds
cmp
xlat
or
dec
or
push
add
ds
addr16
lock
scas
ret
push
test
or
jbe
je
push
or
rcr
sbb
push
cmp
ins
je
cmp
add
jmp
mov
call
xchg
sub
push
dec
lods
xchg
popf
dec
adc
add
push
sbb
inc
sbb
adc
add
xor
sbb
stos
nop
dec
add
cmp
imul
or
push
sub
(bad)
repnz
xchg
mov
ret
jne
outs
xor
sbb
sbb
mov
add
dec
or
xchg
jecxz
pop
shr
jmp
pop
inc
clc
cs
adc
fcomp
push
and
ja
mov
jbe
and
loopne
nop
add
add
cmp
nop
push
fmul
into
xor
out
inc
jmp
rcr
inc
mov
add
in
sub
ss
cmp
stos
and
cmp
shl
pop
jbe
dec
inc
pusha
sbb
test
mov
lahf
pop
mov
adc
mov
pop
sysret
lods
add
add
add
pop
xor
jmp
ret
sub
or
dec
or
sti
mov
or
data16
push
lea
fcmovbe
rol
xor
add
ins
sub
test
sbb
mov
jecxz
sbb
xchg
js
mov
jne
fimul
mov
sub
ffree
enter
mov
cmp
rol
je
dec
je
lea
out
add
(bad)
rol
inc
sub
xchg
push
dec
lea
fdiv
push
cmp
je
cmp
stos
test
xchg
popa
aam
cmp
cmp
xchg
xor
push
jae
pop
dec
sbb
xchg
call
sub
(bad)
sub
mov
jmp
or
out
cs
adc
pop
cmp
jb
push
and
mov
jmp
xor
popa
ficom
inc
mov
mov
inc
and
nop
xchg
mov
xor
inc
cmp
add
callw
leave
adc
loope
inc
test
xor
push
ss
mov
mov
adc
add
push
shl
cmc
sbb
int3
and
add
pop
cmp
push
mov
fs
retf
and
ss
sahf
fistp
dec
adc
in
cmp
das
sbb
add
push
pusha
push
add
repnz
fist
jo
jl
mov
aas
sti
mov
inc
jmp
call
push
adc
hlt
inc
fidivr
or
inc
mov
test
push
enter
cmp
jl
sub
cmp
xchg
in
push
jbe
adc
dec
add
sub
dec
push
fild
xchg
nop
lea
test
adc
mov
mov
lods
aam
mov
add
xor
xchg
add
pop
jecxz
ja
push
sahf
push
mov
xor
cmp
shr
sub
push
push
jl
(bad)
mov
scas
pop
inc
movs
and
inc
gs
xor
lods
add
dec
adc
fld
xchg
rcr
fnstenv
cdq
cmp
mov
and
cmp
mov
sub
add
pop
add
adc
and
jl
jne
aaa
sub
mov
inc
add
cmp
mov
pusha
or
outs
mov
mov
neg
lahf
jg
and
cdq
inc
daa
add
add
push
jbe
out
xor
xchg
add
stos
add
fst
mov
or
iret
add
hlt
jmp
xor
adc
cmp
dec
xor
xor
xor
add
enter
add
leave
add
in
add
cs
mov
mov
shr
push
adc
push
dec
adc
add
pop
xchg
push
mov
sbb
jmp
add
mov
rcl
popf
mov
add
fcom
les
loopne
adc
(bad)
call
xlat
mov
(bad)
jp
jb
pop
or
mov
mov
mov
(bad)
and
fdivr
adc
lea
inc
add
xchg
or
(bad)
out
dec
adc
or
sbb
xor
ret
retf
add
ret
(bad)
ror
push
loope
sub
sbb
loop
call
data16
adc
inc
inc
or
mov
adc
mov
ds
push
out
jae
into
inc
mov
call
test
test
sub
stos
lods
add
adc
in
xchg
retf
push
(bad)
ss
sub
pusha
mov
sub
mov
sbb
mov
or
inc
cmp
jmp
mov
and
or
or
test
bound
sbb
fnstenv
push
xchg
pop
(bad)
shl
outs
push
mov
pop
cmp
imul
sbb
addr16
pop
(bad)
pusha
lahf
addr16
test
fmul
rol
jae
dec
pushf
mov
add
add
ficom
or
adc
(bad)
mov
pop
test
out
jbe
mov
scas
xchg
test
lea
mov
mov
add
inc
adc
ja
test
adc
jnp
pop
push
push
add
(bad)
jo
inc
test
mov
sub
adc
dec
push
push
or
mov
push
dec
(bad)
ja
cmp
bound
xor
test
out
pop
sub
xchg
pop
push
ror
(bad)
out
das
pop
pop
pop
pop
or
xor
gs
mov
mov
jl
leave
ror
movs
add
mov
sti
pop
(bad)
fcom
sbb
push
(bad)
bound
lods
div
sub
das
jmp
adc
stos
je
or
sbb
lea
iret
jle
or
loop
ja
mov
mov
not
push
popa
es
mov
js
ja
push
push
fcmovnbe
or
push
in
jmp
mov
pop
dec
sub
jbe
(bad)
sbb
add
loopne
sub
jecxz
mov
pop
push
xor
test
into
cwde
or
stos
dec
or
cmp
mov
test
movs
loop
es
adc
inc
ret
scas
and
retf
jbe
lea
or
sub
add
jbe
push
or
mov
fdivr
(bad)
(bad)
jle
jge
mov
jmp
es
fwait
xor
ins
sbb
jo
in
cwde
dec
ficom
mov
push
inc
mov
xor
mov
push
push
dec
cmp
add
adc
aad
xor
icebp
pop
add
inc
bound
mov
mov
mov
movs
pop
cmp
add
call
pusha
adc
(bad)
add
sar
retf
je
mov
adc
fimul
daa
pusha
je
mov
lds
stos
inc
int
xchg
xchg
out
mov
in
xchg
pop
push
xor
jae
pop
cmp
popa
jecxz
push
(bad)
sub
fsubr
mov
jmp
dec
push
nop
and
or
xor
jl
shr
xchg
(bad)
aam
movsldup
scas
inc
ror
push
mov
cmps
adc
sbb
sar
mov
pop
(bad)
in
xlat
mov
nop
dec
dec
or
xor
and
sbb
or
cmovno
pop
mov
adc
or
ds
dec
xchg
and
test
add
(bad)
or
(bad)
ja
mov
rol
pop
pop
jmp
ret
cdq
in
sub
ss
sub
jp
test
std
(bad)
pop
sbb
push
push
lods
adc
movs
in
inc
sar
pop
mov
add
fiadd
dec
(bad)
cdq
retf
mov
push
mov
jo
fist
push
imul
(bad)
jo
sbb
and
and
inc
cmp
add
jl
xor
sbb
inc
into
rol
jno
push
push
addr16
pop
xor
lds
and
pop
add
imul
pop
lods
jle
push
mov
adc
lea
inc
add
loope
add
mov
add
push
call
enter
popa
add
xlat
mov
xchg
test
sbb
adc
js
sahf
add
adc
ret
add
call
xchg
cli
sbb
in
pop
ss
lea
add
jmp
scas
inc
es
add
les
sbb
call
inc
rcr
test
mov
push
add
push
lea
push
pusha
inc
mov
xor
leave
ins
cmps
retf
sbb
js
push
fwait
pop
jns
call
or
retf
stos
mov
ret
aad
push
fmul
cli
fldenv
ror
xor
ins
adc
sub
jbe
mov
fisttp
sub
add
dec
pextrw
push
push
mov
imul
add
mov
das
mov
stc
aam
mov
pop
adc
mov
dec
xchg
mov
adc
out
sar
add
les
ret
or
pusha
addr16
sub
pop
cwde
outs
push
arpl
pop
sub
sahf
add
and
movs
lock
dec
xor
or
ja
sbb
add
sbb
pop
cli
push
inc
pop
fwait
xchg
retf
out
mov
retf
sub
iret
or
push
ficom
ja
pop
shl
test
ret
xor
jno
fcomp
retf
push
rol
sbb
cmp
xor
or
ja
cmp
rol
out
sbb
push
jg
or
push
or
or
pop
and
lds
retf
push
pop
popa
lock
jne
or
loopne
je
jo
sbb
xor
adc
imul
sbb
add
and
xor
mov
aad
inc
(bad)
or
push
push
aad
adc
repnz
arpl
sub
cmp
out
add
ins
sub
sbb
test
lahf
test
xor
mov
adc
mov
dec
mov
push
pop
adc
pop
inc
inc
sar
lds
out
leave
dec
test
data16
popf
test
add
adc
(bad)
jmp
add
hlt
and
pop
add
pop
enter
push
add
sbb
ins
pop
mov
or
ficomp
pop
jns
mov
outs
stc
jae
cmp
loopne
lock
in
aam
out
mov
cmp
imul
adc
rol
push
rcl
mov
dec
iret
ins
call
add
xor
shr
es
ret
aas
or
pop
rcr
enter
gs
dec
aam
mov
fistp
add
jbe
cmp
mov
sbb
adc
sub
jne
pop
movs
dec
mov
xchg
dec
shl
mov
imul
dec
mov
and
push
mov
lods
rol
adc
and
adc
shl
clc
dec
jae
push
sbb
sbb
or
xor
test
es
pop
mov
aad
or
mov
jmp
push
(bad)
stc
outs
addr16
pop
cli
out
in
loope
add
or
lahf
aad
aas
or
pop
leave
arpl
(bad)
call
in
push
loopne
retf
leave
sbb
pop
sbb
mov
and
and
sub
mov
ds
jmp
and
aaa
push
shl
jnp
ja
cmp
and
pop
xor
inc
(bad)
mov
int3
inc
pop
dec
or
retf
stc
je
in
cmp
jne
lods
lea
and
and
sbb
or
sbb
sbb
inc
fcom
mov
push
sub
movs
jnp
or
lods
cmp
adc
into
or
(bad)
fidivr
adc
mov
xlat
mov
fsub
or
fmulp
push
xor
xchg
sbb
movs
leave
mov
dec
ror
add
mov
or
shr
je
test
aaa
sbb
push
jo
aad
and
jb
mov
and
sbb
out
sub
or
or
mov
or
pop
add
mov
rcl
test
ret
push
inc
ror
add
ficom
add
fsub
inc
push
push
push
stos
xchg
pop
or
les
popa
dec
je
and
repz
mov
movs
inc
inc
pop
call
les
or
add
ret
fcomp
add
es
dec
or
loopne
leave
les
cmp
in
(bad)
dec
pop
push
or
cld
mov
push
test
lds
sbb
and
inc
pop
ins
and
add
mov
stos
dec
sub
sbb
stc
pop
js
rol
push
call
es
dec
lds
inc
dec
sbb
pop
dec
jns
inc
cmp
es
jbe
xor
and
mov
cmp
jns
imul
cmp
sbb
add
pop
ret
lea
test
jbe
cmp
push
mov
add
fidivr
leave
(bad)
add
addr16
sub
xor
sub
fxch
xor
jmp
pop
cmp
jb
mov
rol
ror
inc
add
jno
or
push
and
cmp
iret
and
or
mov
ins
cmp
sub
ret
sbb
pop
sub
mov
adc
sar
xor
retf
push
push
(bad)
jmp
and
scas
icebp
add
mov
in
inc
adc
mov
in
pop
rcr
push
cs
call
sub
cli
cdq
add
inc
shr
xor
cmp
mov
pop
or
lea
cmp
mov
shl
mov
cs
mov
jp
jb
fisttp
push
ret
test
repz
aam
push
push
sbb
pop
fld
jp
js
xchg
sub
push
push
pop
mov
or
(bad)
imul
sbb
xlat
mov
js
dec
inc
fadd
and
inc
sbb
lds
pop
push
pusha
mov
cmp
add
mov
xchg
cmp
mov
mov
inc
test
pop
das
add
sbb
jbe
jae
fs
push
dec
dec
ins
mov
pusha
cmp
adc
cs
add
add
mov
pop
ret
xor
cmp
xor
les
mov
enter
mov
or
(bad)
mov
jecxz
cs
and
mov
in
push
sbb
jl
ret
cmp
inc
aad
sar
inc
cld
aad
jp
dec
je
push
ds
inc
clc
cmc
xor
ds
aam
push
adc
jl
(bad)
aad
popf
push
xor
lods
aas
push
add
icebp
js
push
imul
lea
dec
es
lods
or
add
dec
sbb
jl
pop
or
xchg
sub
and
inc
sbb
and
jg
call
mov
inc
cmp
mov
je
add
inc
push
lds
add
movs
(bad)
dec
les
loopne
jne
addr16
push
xchg
push
cli
jmp
test
cli
sub
movs
shl
mov
repz
and
sub
adc
pop
repnz
aas
outs
inc
dec
push
pop
mov
imul
mov
xchg
mov
mov
xchg
jne
loope
pop
push
dec
loopne
cmp
mov
cmp
lods
add
ret
push
and
add
sbb
jmp
sar
add
xchg
dec
fadd
xor
mov
push
pop
xor
xor
inc
sub
call
pusha
xor
popf
sbb
ss
jecxz
xor
or
mov
rol
add
js
mov
imul
fsubr
xchg
mov
push
movs
(bad)
cmp
adc
js
lock
mov
and
or
scas
mov
jle
(bad)
cmp
test
sub
mov
lods
das
adc
cmp
push
mov
and
and
add
add
test
outs
push
and
ror
jmp
fs
sar
lahf
inc
out
xor
adc
imul
and
pop
js
and
iret
xor
push
stos
and
pop
mov
and
adc
mov
adc
dec
test
cmp
xor
jmp
test
outs
inc
dec
cmp
stos
into
ins
cmp
jmp
nop
(bad)
fdivrp
shr
add
call
into
jnp
sbb
mov
lods
shl
push
sbb
pop
or
jae
mov
(bad)
call
nop
ins
mov
cmp
adc
popf
push
call
jmp
or
lea
push
enter
leave
pop
adc
sbb
pop
or
xor
xor
(bad)
mov
inc
mov
sub
mov
jo
adc
xor
and
inc
syscall
fidiv
add
clc
aaa
cmp
lea
mov
push
addr16
pusha
cmps
push
or
push
dec
fsub
sub
push
push
lea
test
mov
sub
push
inc
stos
lahf
mov
dec
sub
(bad)
jmp
data16
mov
jo
xor
inc
cmp
js
out
dec
pusha
xchg
cmps
jo
clc
push
pushf
in
ins
sub
push
push
inc
sub
sbb
test
jmp
cmp
ins
dec
das
jl
sub
pop
into
adc
ss
(bad)
je
mov
mov
xor
cmp
es
ja
xchg
popa
sub
jp
sbb
add
bound
dec
adc
pop
jbe
or
and
or
shl
pop
and
cmps
cmp
lods
dec
lods
mov
adc
mov
dec
repz
sub
add
add
aaa
or
fbstp
in
ret
mov
dec
hlt
lods
rcr
pop
and
xchg
push
push
adc
inc
fldcw
pop
pop
or
push
ror
and
icebp
inc
cmps
jae
shl
in
test
popf
test
sbb
pop
sbb
dec
or
or
adc
popf
(bad)
fisub
mov
mov
and
pop
movs
xchg
test
or
mov
mov
inc
or
cmp
cmp
mov
in
fs
aaa
xchg
xchg
adc
add
add
add
daa
mov
and
push
push
rcl
test
(bad)
mov
sub
repz
js
sbb
pop
mov
daa
retf
xor
dec
dec
mov
or
movs
dec
dec
mov
mov
pop
push
mov
sub
je
cs
data16
ja
pop
push
adc
test
pop
cmp
xchg
pop
scas
outs
rol
mov
adc
sbb
push
xor
adc
sbb
or
loope
jb
or
push
icebp
mov
cld
pop
ret
mov
or
dec
sub
jmp
or
adc
(bad)
imul
jb
ret
pop
sub
ret
adc
nop
adc
repnz
jge
mov
or
es
jmp
and
xor
jbe
shl
adc
aam
outs
in
or
mov
pop
add
and
(bad)
pushf
movs
hlt
inc
adc
add
adc
ss
and
push
lods
add
idiv
mov
push
add
push
mov
add
in
loopne
in
in
inc
add
dec
cmp
lea
xchg
nop
mov
mov
or
lock
outs
rol
clc
cmp
or
dec
call
adc
xor
and
sbb
daa
in
mov
nop
sti
rol
mov
jns
pop
lahf
add
push
sbb
scas
repnz
push
and
call
loopne
xchg
sub
push
sbb
div
(bad)
push
or
push
cmp
sahf
ror
in
xor
mov
mov
je
outs
sub
push
mov
xchg
or
sub
jo
fadd
and
and
fst
pop
pop
or
mov
sti
jae
sbb
cmp
inc
or
mov
push
push
jge
pop
xor
adc
mov
pop
push
push
pop
jb
mov
mov
cld
sub
fbstp
icebp
dec
mov
rcl
pop
jg
mov
jl
jb
mov
pusha
dec
(bad)
fwait
aas
xor
xor
sub
fistp
(bad)
or
mov
and
dec
fisttp
jmp
stos
xor
jb
xchg
pop
dec
inc
pop
jle
sub
lea
mov
pushf
mov
or
sub
je
aas
xor
xor
and
dec
or
push
cmp
je
cmp
rol
cmp
and
or
mov
adc
inc
cmp
jecxz
jmp
pusha
inc
sub
push
add
pop
dec
push
sub
fwait
push
and
cmp
cmps
sub
cmp
push
in
not
cmps
and
les
add
je
sub
dec
add
test
jbe
sbb
cli
jp
xchg
shl
cmp
adc
xchg
fimul
xchg
ret
jne
add
push
adc
jne
xor
pop
in
push
cld
pcmpeqw
cmp
jne
mov
add
inc
sub
add
or
or
xchg
sub
pop
push
adc
cs
mov
adc
or
mov
push
or
nop
xchg
shr
xor
inc
or
cld
xchg
shr
(bad)
cmp
je
pop
mov
in
rcr
jne
lea
repnz
cli
xor
out
das
cdq
cmp
adc
js
ja
push
add
push
outs
fwait
cli
aaa
loopne
push
lea
call
js
sub
xor
fwait
pop
and
adc
call
xchg
push
inc
mov
daa
dec
jle
mov
fs
mov
or
adc
mov
nop
mov
and
push
out
pop
cs
retf
or
push
cmp
mov
popa
loop
inc
scas
push
xor
ret
out
adc
repz
mov
sub
daa
int3
cmp
sub
pop
add
test
and
(bad)
ins
sbb
cwde
adc
(bad)
and
jecxz
neg
cmp
test
mov
ret
jnp
jmp
xchg
mov
mov
add
push
(bad)
cmp
es
push
cmp
fs
es
stos
cmp
rol
push
call
fcmovnu
jecxz
inc
jg
cmp
push
icebp
jge
jl
xor
or
push
jle
bound
call
and
push
push
sub
inc
out
call
outs
cmp
dec
xor
stos
shl
sbb
in
lock
cmp
pop
mov
jne
(bad)
cli
jle
or
mov
push
pusha
mov
jo
scas
mov
pop
scas
push
lea
bound
ss
and
in
sub
dec
xor
mov
sub
sub
out
sub
inc
ins
or
call
jb
mov
xchg
stos
js
jns
fadd
js
add
or
xchg
mov
xor
jb
push
or
cmps
sub
xor
test
movs
xchg
ret
add
cld
mov
push
dec
sbb
or
jbe
push
jp
ins
test
add
mov
mov
or
inc
mov
shl
or
sub
push
or
sub
js
push
pop
jne
push
out
inc
sbb
push
or
jns
fild
cmp
and
dec
xchg
icebp
in
add
test
push
inc
addr16
adc
mov
push
cmp
adc
mov
mov
and
sub
pushf
and
adc
ror
hlt
add
out
pop
inc
lock
add
cwde
jns
push
movs
cmc
mov
mov
jp
sub
ins
jmp
push
mov
and
push
push
sbb
enter
and
adc
mov
test
inc
pop
in
push
mov
outs
xchg
dec
pop
ja
sub
sub
loope
xor
ret
sahf
cwde
push
(bad)
call
and
jmp
dec
adc
cmps
push
jle
js
cmp
div
repnz
push
add
push
mov
movs
popa
xlat
dec
jnp
fiadd
push
jmp
and
and
lea
(bad)
rcl
fs
mov
hlt
cmp
inc
or
cmps
loope
ror
xor
jle
popa
sbb
push
pop
pop
out
je
mov
aaa
test
dec
adc
or
out
test
push
jae
ficom
mov
mov
aas
and
cmp
push
cmp
and
push
call
fdivr
ret
add
call
lods
mov
in
inc
clc
xor
mov
sub
add
add
push
jp
cmp
lea
pop
cli
push
scas
inc
dec
add
jecxz
sahf
xchg
add
adc
shl
and
xor
mov
pop
mov
rcr
lock
push
xchg
loopne
js
cs
test
mov
inc
push
inc
ins
adc
jne
mov
sub
jmp
aam
mov
jmp
fidivr
int3
cmp
fs
mov
jne
xor
retf
mov
test
xchg
mov
push
mov
jb
jmp
mov
dec
sub
push
push
ins
or
dec
push
jns
jge
pop
dec
mov
and
pop
add
xor
lahf
sahf
xlat
ds
and
call
push
cmp
inc
out
pushf
movs
pop
enter
sub
mov
inc
ins
cdq
add
test
inc
add
add
inc
mov
pop
jl
sbb
and
jl
add
pop
xor
sbb
mov
dec
cmp
inc
cmp
cwde
int
and
punpcklwd
test
(bad)
jne
inc
out
push
(bad)
push
add
dec
or
or
test
cmp
repz
push
mov
and
repz
and
sub
xor
xchg
sar
cmp
dec
push
dec
mov
and
fcom
dec
mov
dec
push
mov
mov
(bad)
and
pop
mov
test
jp
push
ret
push
mov
jnp
aaa
push
push
or
aam
iret
sub
add
xchg
test
or
fwait
ja
sub
mov
shl
sahf
(bad)
jne
repnz
push
call
sub
xor
ficom
xchg
push
pop
shr
xor
sar
add
pop
outs
dec
cwde
cmp
xchg
je
xor
out
mov
and
aaa
enter
mov
or
jle
xor
cmp
sbb
adc
or
les
adc
push
adc
mov
mov
inc
inc
mov
cmp
neg
scas
add
xor
xor
aam
bound
movs
jge
add
cmc
mov
scas
ret
call
push
or
and
sbb
sub
repnz
inc
jle
frstor
push
dec
inc
push
add
fucomi
call
repz
push
lea
mov
push
jecxz
push
dec
mov
push
add
sbb
and
mov
xchg
add
leave
add
out
ds
add
mov
inc
xchg
inc
xor
test
and
call
and
push
(bad)
xor
jbe
(bad)
lea
xchg
or
jmp
ret
das
push
add
cmp
or
mov
cld
lods
add
jnp
fstp
es
dec
in
jo
mov
call
jns
call
iret
in
jo
jbe
pop
xchg
dec
push
int
pusha
movs
adc
cmp
or
jo
dec
mov
mov
xchg
xlat
cmp
dec
icebp
dec
into
jg
mov
add
lea
add
cli
sub
stos
xchg
push
lock
or
and
(bad)
sbb
cld
xchg
mov
mov
push
cmp
inc
loopne
dec
xchg
or
pop
adc
mov
mov
fs
mov
imul
fisttp
call
imul
cmp
xor
inc
sbb
mov
mov
push
push
push
sahf
mov
(bad)
cmp
inc
xor
mov
push
jmp
rcl
pushf
mov
ja
cmps
inc
or
push
pop
jne
xchg
or
mov
popf
call
mov
jg
or
add
pop
inc
arpl
fiadd
push
jmp
inc
xor
movs
xor
stos
test
add
div
add
jp
dec
mov
adc
push
or
push
nop
cmp
sub
mov
std
(bad)
retf
lea
xor
mov
pop
jmp
sar
mov
aad
imul
retf
jne
mov
dec
add
call
ret
movs
xor
ds
sub
xor
fisub
mov
add
je
retf
(bad)
push
xchg
adc
add
push
mov
repz
xchg
add
mov
fs
or
ficom
lahf
jl
push
call
ret
pop
cmps
daa
loopne
adc
aad
stos
stos
lea
cs
add
loopne
icebp
nop
push
cmp
cmp
jb
cmp
ja
inc
cmp
and
mov
or
and
mov
test
and
leave
loop
(bad)
jne
mov
xlat
mov
pop
jb
and
adc
ds
dec
in
adc
mov
dec
or
(bad)
pop
(bad)
aam
push
xchg
imul
or
cmc
cmp
pop
cmp
dec
outs
inc
push
das
add
call
stos
jbe
aaa
push
out
repnz
push
mov
mov
jne
push
sub
lds
ss
addr16
in
inc
ret
neg
ss
add
adc
mov
data16
mov
jmp
push
(bad)
fcom
jbe
test
push
js
adc
inc
pop
nop
(bad)
mov
loopne
add
popfw
pop
jns
push
xchg
inc
mov
ror
push
scas
mov
jmp
lods
nop
lea
cs
inc
int3
xchg
lods
mov
push
dec
mov
dec
cmp
inc
add
cmp
push
dec
or
push
fs
js
sub
adc
add
cwde
pop
pop
jecxz
cmps
sub
add
jl
and
sub
pop
out
mov
es
test
test
push
sbb
xchg
rol
test
mov
inc
in
cmp
inc
loopne
mov
jmp
mov
sbb
and
pop
cmp
xor
and
cmp
ja
jp
and
push
lds
cmp
dec
inc
sub
into
dec
adc
and
daa
or
lods
test
call
push
jl
pusha
push
and
jne
add
xor
loope
ficomp
push
call
add
cmps
push
test
jmp
inc
push
dec
xchg
add
sbb
mov
adc
cmp
ja
ret
cdq
in
push
pop
xor
add
inc
cdq
mov
and
mov
movs
retf
add
dec
or
cmps
jo
test
jle
loopne
shl
mov
dec
in
nop
xchg
inc
es
aad
dec
loope
test
fisttp
pop
lea
mov
int
repz
iret
sub
push
mov
div
aas
mov
mov
fwait
mov
sbb
les
into
and
les
mov
push
add
imul
ror
mov
aaa
(bad)
and
adc
imul
adc
or
xchg
push
adc
dec
sbb
add
mov
adc
outs
inc
mov
mov
inc
lock
mov
ja
push
push
call
cld
pop
call
pop
movs
pusha
cdq
test
push
mov
jne
inc
inc
pushf
cmp
add
adc
adc
mov
sar
jl
ret
xchg
mov
test
jo
call
add
mov
aam
sub
pusha
sbb
loope
repz
call
rep
out
or
ffree
mov
ds
xchg
pushf
out
mov
jmp
xchg
jo
js
out
cmp
fs
cmp
jnp
dec
inc
mov
out
popf
or
dec
cmp
lea
sbb
idiv
shl
xchg
aas
aad
cld
call
cmc
fwait
mov
pop
inc
clc
dec
push
push
mov
loop
(bad)
jmp
push
stos
out
sbb
js
adc
or
sub
std
in
push
repz
enter
cmp
push
mov
leave
push
or
and
xor
push
or
leave
js
call
adc
mov
pop
neg
int
lds
mov
add
jne
aaa
and
in
lods
cmp
adc
das
push
call
mov
and
push
call
mov
mov
push
out
ror
adc
std
(bad)
sar
call
ror
daa
loope
outs
sti
mov
adc
inc
leave
dec
ds
sbb
popf
adc
not
adc
leave
rcl
hlt
bound
cmps
push
mov
push
popf
std
cwde
in
jno
cmps
je
ficomp
stos
outs
cmps
mov
test
hlt
or
push
inc
cmp
ja
movs
dec
ret
sub
cmp
loope
test
pop
add
repz
sub
stos
add
sbb
rcr
add
dec
lds
or
(bad)
loopne
xchg
(bad)
rol
sbb
jge
sub
sbb
add
inc
cwde
leave
retf
nop
fadd
inc
sub
call
or
add
add
jbe
cwde
and
out
add
sub
xor
xor
out
mov
push
xchg
mov
les
mov
mov
add
scas
mov
je
js
fs
lea
dec
xor
sub
xchg
mov
push
test
cmpxchg
mov
xchg
bound
xor
mov
lea
mov
cmp
movs
pop
fstp
mov
stc
adc
xchg
inc
loope
sub
cmp
or
push
sahf
adc
cmp
pop
or
push
push
ja
and
rcl
scas
movs
xchg
xchg
xchg
shl
xchg
arpl
sub
add
loopne
mov
push
lahf
fsub
je
dec
je
sbb
ret
icebp
xor
xchg
call
ss
ins
bswap
call
inc
push
je
enter
adc
pushf
xchg
pusha
nop
push
ret
icebp
in
or
add
push
leave
cmp
clc
js
mov
lock
sti
cmp
out
ret
mov
jmp
ror
movs
push
add
xchg
std
sbb
mov
push
neg
movups
pop
xchg
push
shr
adc
add
outs
in
push
add
mov
hlt
repnz
fdivr
pop
pop
adc
call
push
scas
gs
add
push
lea
dec
add
pop
sbb
fist
add
or
inc
dec
xor
cmp
mov
inc
test
in
imul
pusha
call
mov
push
add
retf
add
loopne
jo
dec
push
dec
test
inc
pop
dec
les
sub
imul
or
mov
sbb
mov
push
pop
pop
mov
mov
pop
sub
movs
fcomp
adc
retf
pop
push
inc
or
inc
rol
fcomp
xor
or
aaa
pushf
sub
jnp
add
call
sbb
ins
mov
shr
ins
dec
adc
shr
in
pushf
adc
mov
cwde
ins
xchg
cmp
(bad)
sub
loope
mov
shl
or
xchg
lahf
add
call
fisttp
add
jbe
push
popa
mov
je
sbb
loope
pusha
push
ins
push
jne
iret
pop
cmp
push
sub
cwde
adc
sub
pop
ds
sub
and
test
gs
stos
mov
dec
or
jmp
test
les
push
or
(bad)
pop
inc
cwde
dec
xlat
inc
mov
mov
adc
fwait
outs
sbb
mov
aad
fwait
xchg
jl
bound
sub
dec
mov
adc
sbb
ds
xchg
test
jge
dec
pop
adc
dec
arpl
test
or
js
mov
pop
adc
les
pop
movs
popa
or
adc
mov
mov
inc
aas
add
fs
and
mov
mov
ret
inc
loopne
or
mov
xor
sub
add
add
hlt
fcom
add
xchg
sbb
cmp
stc
jmp
xchg
push
add
call
push
xchg
adc
call
clc
push
add
sub
or
xor
ss
jne
ror
pop
mov
jmp
mov
push
jne
add
pop
je
jmp
inc
test
or
push
pop
sub
ins
pushf
mov
or
popa
movs
dec
pop
sbb
dec
push
push
or
cmps
cdq
loopne
pop
mov
dec
imul
je
sub
add
xchg
movs
mov
push
lea
or
add
sbb
add
jne
dec
hlt
and
jns
not
(bad)
cmp
sbb
stc
jne
inc
dec
pop
rcr
xor
xor
pop
xor
push
call
iret
mov
movs
pop
xor
cld
xchg
or
pop
xor
push
(bad)
mov
ror
fisttp
ffree
mov
xor
jo
add
dec
cs
lods
in
mov
div
push
push
jecxz
int
and
or
mov
or
sbb
pop
xlat
jne
adc
push
push
rol
pop
adc
add
inc
xchg
pop
pop
or
or
dec
and
shl
adc
cmp
inc
and
xor
sar
jae
call
sbb
jle
and
clc
dec
mov
(bad)
pop
sub
pop
ret
gs
(bad)
hlt
adc
jno
jl
cmps
test
or
pop
cmp
je
sbb
sub
xchg
pop
mov
jne
adc
mov
leave
repz
gs
iret
xor
ret
xchg
stos
jmp
inc
inc
sbb
inc
and
(bad)
or
cmp
xor
lock
enter
mov
ret
paddusw
sub
sbb
call
daa
or
mov
xlat
and
inc
scas
aas
test
data16
movs
ss
lock
inc
add
adc
pop
ds
rol
push
(bad)
int
jo
or
les
test
ds
fcmovbe
call
mov
mov
push
mov
fmul
adc
inc
adc
stos
shl
push
and
pop
ret
sbb
and
imul
pop
(bad)
or
adc
adc
dec
daa
shl
add
mov
push
mov
in
loope
cli
sub
xchg
das
jo
mov
xor
jb
push
clc
mov
loopne
xchg
call
xchg
fimul
ins
mov
fs
pop
ss
out
fnstcw
or
jp
popa
mov
jnp
shl
sbb
pop
(bad)
push
add
inc
mov
sub
sbb
dec
loope
push
ret
pop
outs
rcl
or
stc
jae
inc
add
call
lock
mov
jbe
sub
lea
lds
pop
jo
xchg
rcr
(bad)
adc
cwde
jae
or
jecxz
out
inc
xchg
add
lea
pop
out
imul
or
add
pop
sbb
sar
sbb
inc
xor
repz
inc
pushf
mov
das
inc
ds
dec
push
rcr
les
push
mov
adc
push
lock
mov
jbe
cmp
sbb
xchg
xor
jb
cmc
fwait
mov
mov
int3
cmp
xlat
add
jmp
push
enter
xor
push
mov
call
cmp
in
and
pop
test
ror
fdiv
pushf
or
je
fiadd
sbb
in
sub
retf
lahf
dec
movs
or
pop
or
fdiv
pusha
inc
push
jmp
xor
and
sub
adc
adc
enter
popf
mov
adc
xchg
cmp
je
aas
rol
push
xchg
inc
jne
inc
add
mov
push
je
dec
shr
push
stos
sbb
pop
dec
pop
clc
jnp
std
inc
mov
sti
mov
push
and
mov
dec
or
out
xchg
push
or
loope
jnp
or
inc
jge
sub
fist
mov
ss
test
or
icebp
push
add
push
adc
aam
outs
test
jo
mov
push
scas
inc
or
adc
ficom
add
or
push
or
ret
ffreep
and
imul
jmp
fisttp
stos
dec
or
loope
or
cli
adc
add
test
adc
outs
mov
lods
inc
lds
xrelease
or
jmp
cmp
icebp
fmul
or
pusha
mov
(bad)
sbb
jecxz
les
add
mov
push
pusha
int3
dec
dec
push
mov
cmp
jmp
shr
jl
nop
or
shl
inc
xor
scas
jne
js
fsubr
cmp
and
es
or
xchg
sbb
fmul
jge
movs
xchg
and
popf
out
loop
pushf
aam
rcr
xchg
or
inc
dec
mov
pop
sub
dec
inc
sbb
and
adc
bound
adc
std
or
enter
and
add
test
sub
retf
push
jae
or
and
push
loop
sub
test
add
ret
dec
adc
inc
(bad)
cwde
ins
dec
clc
jmp
pop
inc
sbb
jb
push
sub
aam
pop
xor
dec
dec
popf
cmp
push
xor
in
adc
mov
mov
mov
inc
xchg
call
add
jo
push
lods
pop
(bad)
push
mov
cmp
and
mov
sbb
mov
jmp
outs
or
jo
out
or
ror
pop
int3
xor
mov
(bad)
mov
fbld
and
cmp
mov
or
aad
gs
add
in
cmp
and
sbb
shl
mov
mov
xor
and
add
cmp
push
cmp
adc
neg
xchg
inc
push
nop
sbb
ror
xor
or
ins
test
mov
imul
or
sub
ror
mov
inc
dec
int
push
push
mov
shr
xchg
push
test
dec
cmp
dec
mov
rol
test
pop
push
popf
clc
push
pushf
mov
add
or
je
pop
repnz
call
cmp
dec
out
add
ins
cld
or
jno
xchg
aad
xchg
(bad)
ins
test
push
lea
adc
je
sbb
or
retf
mov
mov
stos
ret
lea
test
fist
ror
add
in
adc
push
sbb
push
rcl
sbb
fiadd
dec
inc
in
push
call
mov
adc
or
cld
mov
daa
or
push
test
add
stos
(bad)
dec
cmp
ja
sbb
sub
movs
xor
add
xchg
out
jmp
lahf
push
add
imul
push
sbb
call
xchg
mov
and
push
call
inc
push
and
int3
fistp
and
xchg
push
adc
rol
mul
pop
stc
add
adc
cmp
and
loope
adc
(bad)
retf
adc
mov
mov
lea
call
jno
sbb
add
push
push
dec
and
int
mov
rcr
pop
leave
push
ins
mov
mov
and
in
jg
push
ret
dec
inc
add
ins
sub
ficomp
add
xor
fwait
cmp
xchg
pusha
xor
and
inc
cmp
call
sub
jle
pop
jo
pop
pusha
inc
js
add
pusha
cmp
push
sar
sahf
int3
or
in
js
pop
ja
lods
adc
test
clc
jecxz
ret
je
adc
or
pop
inc
test
add
dec
in
das
and
inc
adc
movs
imul
jmp
je
xor
adc
or
dec
test
dec
pop
(bad)
lock
mov
or
aas
cmps
push
inc
push
xchg
scas
push
adc
add
popf
call
pop
or
cmps
mov
and
pusha
pop
pop
push
mov
or
lea
gs
mov
aam
mov
or
mov
inc
and
loopne
aas
sbb
jbe
mov
sub
pop
pop
adc
outs
xor
add
enter
cmp
mov
sub
and
loope
shl
push
push
mov
mov
jecxz
imul
mov
imul
lahf
adc
es
pop
pop
test
ins
or
sbb
adc
dec
push
xor
mov
cwde
xchg
int
(bad)
call
sub
lods
jg
jl
outs
sar
mov
call
setae
sbb
cmp
push
call
hlt
adc
das
xchg
out
aam
clc
cld
add
add
mov
or
push
(bad)
imul
out
adc
fcom
das
xor
mov
call
jp
xchg
mov
pop
push
cli
or
and
cmp
shl
cmp
mov
xor
jmp
dec
cmp
jb
mov
in
fisubr
cmc
loopne
int
mov
fimul
pop
adc
(bad)
pop
jb
enter
push
popa
stos
mov
or
push
mov
jle
xor
jb
cmps
aaa
xor
jmp
sbb
push
bound
xchg
shl
lahf
cdq
xchg
inc
or
mov
cmp
shr
(bad)
sub
test
cmp
cdq
sub
mov
ss
mov
xchg
dec
inc
mov
add
push
adc
push
add
push
mov
jns
xchg
movs
xchg
inc
push
clc
retf
add
idiv
lock
adc
in
test
xchg
mov
adc
inc
retf
pop
push
scas
push
inc
(bad)
jns
fsubr
add
cmp
jmp
or
cmc
push
or
add
and
push
push
xor
std
jle
hlt
sbb
or
and
stos
aam
popa
fdivr
jl
sti
xchg
adc
aas
adc
pop
add
aaa
in
ins
test
mov
stc
or
xor
adc
aas
add
aaa
gs
test
push
jmp
cmp
xor
mov
jno
icebp
push
ret
nop
jge
add
test
jp
jbe
add
jnp
push
inc
not
xchg
cmp
jmp
sbb
inc
pushf
pop
push
jbe
mov
push
bnd
bound
cmp
ins
enter
or
and
leave
cmp
stos
ss
or
mov
pop
adc
je
sbb
cmps
and
adc
test
adc
push
xchg
sub
movs
inc
ins
inc
inc
mov
test
add
xchg
cs
and
cmps
mov
dec
test
or
ret
bound
add
mov
out
ins
adc
jmp
rol
xchg
pop
shl
adc
repz
lahf
outs
cmp
lock
cmps
mov
mov
enter
outs
mov
ret
out
xor
push
cmp
dec
add
clc
inc
jge
jne
sbb
aas
push
pop
push
mov
loop
jo
mov
mov
jno
cld
or
mov
sbb
xchg
push
xchg
xchg
push
sub
js
or
ins
cmp
cmp
and
lea
aas
clc
cmp
je
into
push
call
pop
pusha
je
xor
out
(bad)
mov
sub
nop
les
cmp
push
mov
add
adc
xor
imul
call
outs
ror
mov
cmc
sub
inc
lock
je
dec
shufps
add
shl
dec
adc
popf
cmps
mov
movs
mov
std
stos
je
jmp
int3
popa
ins
popa
pushf
in
adc
xchg
mov
cwde
add
cli
jbe
js
(bad)
shr
and
xor
jl
jno
mov
rcl
jg
icebp
push
shr
sub
mov
call
xor
xor
mov
sti
imul
cmp
in
dec
jg
push
call
pop
loop
nop
mov
and
push
xor
inc
xor
daa
loop
out
xor
mov
(bad)
and
bnd
mov
or
cdq
hlt
mov
pop
mov
ret
or
nop
ins
repz
ins
ret
add
pop
dec
pop
jle
jbe
fimul
mov
loope
lods
cmp
sbb
jno
mov
mov
inc
add
sbb
rol
jmp
and
push
bound
pop
or
sar
mov
clc
ret
push
add
add
or
push
pop
xor
imul
cmp
xor
das
jno
and
xchg
xchg
add
sub
add
sbb
sbb
je
adc
sub
fmul
nop
retf
lds
je
aas
test
inc
mov
push
hlt
jb
cwde
dec
jo
lea
(bad)
mov
add
and
movs
or
out
outs
sbb
add
rol
fldcw
xor
or
pop
pop
mov
je
jns
xor
in
cli
jo
add
movs
push
add
push
(bad)
dec
push
in
jp
ror
je
add
adc
add
add
fisub
jb
outs
pop
inc
push
inc
mov
inc
dec
fmul
cwde
pop
cld
mov
cwde
mov
inc
xor
push
inc
push
and
dec
mov
jae
push
and
sub
mov
add
mov
scas
ret
cmp
inc
mov
(bad)
cmp
adc
sub
ret
outs
mov
sub
jb
das
cmp
inc
mov
fcom
cmp
cmp
sub
add
xor
stos
add
or
push
ds
and
pop
push
mov
movs
jge
jne
sub
(bad)
xchg
retf
rcr
jae
enter
push
into
arpl
pop
mov
movs
inc
mov
inc
ins
fstp
cmp
inc
or
mov
cmp
xchg
scas
pop
jle
imul
adc
push
add
sbb
sub
mov
js
lahf
adc
cmp
jg
dec
cmps
pop
cmp
xor
mov
xor
push
pusha
push
out
int3
out
and
mov
out
dec
mov
or
outs
fldenv
jge
xor
adc
push
push
push
je
push
mov
les
or
push
cmps
mov
adc
pop
push
lea
inc
sar
pusha
movs
(bad)
mov
cmp
push
adc
aam
inc
push
sbb
cmp
pop
sub
stos
(bad)
bound
dec
mov
and
or
xor
mov
inc
cmp
(bad)
and
adc
inc
push
call
mov
mov
sbb
aas
mov
mov
push
pop
xor
std
mov
fcom
fcom
push
push
int3
jns
ret
jmp
sbb
leave
mov
or
jle
fwait
inc
test
xchg
pop
test
add
mov
mov
cmp
push
mov
mov
lods
xchg
sub
push
xchg
lods
popf
scas
ins
cmp
adc
jmp
sbb
imul
inc
mov
mov
mov
shl
push
and
push
xchg
mov
and
and
push
and
push
lds
mov
adc
xor
in
(bad)
xor
fst
jmp
cmp
and
mov
sbb
push
jg
jl
adc
mov
xchg
pop
push
adc
sub
mov
(bad)
xor
(bad)
mov
lahf
call
dec
inc
lock
stc
outs
test
das
mov
add
test
call
mov
dec
or
call
pop
dec
addr16
xchg
add
pop
adc
cdq
nop
dec
xor
mov
sti
movs
and
mov
test
xchg
add
push
adc
add
outs
popa
add
cmp
xchg
inc
sub
(bad)
mov
ror
sbb
lds
scas
push
lods
mov
push
cmps
jl
cmp
out
mov
and
push
sub
test
mov
add
lods
mov
bound
sbb
sbb
mov
dec
loopne
das
jl
enter
mov
mov
push
clc
jno
inc
stos
ja
outs
loop
cmp
pushf
out
dec
int
sbb
rol
je
pop
sbb
out
adc
rcl
push
jmp
dec
mov
out
sub
dec
jle
call
lock
and
call
outs
sar
jge
inc
xor
pop
pop
cwde
cli
inc
test
cs
xchg
and
out
and
push
jmp
movs
xor
out
lds
sbb
or
pop
fld
add
add
xchg
push
inc
inc
cmp
xor
jae
shl
xchg
cmp
pop
sbb
mov
in
loopne
pop
pop
xchg
push
ror
das
dec
push
xor
xor
mov
fdiv
nop
pop
movs
loope
pop
cmp
mov
test
jnp
mov
and
inc
sbb
push
sbb
adc
ja
push
adc
or
mov
ret
ds
xor
cwde
add
popa
sub
cmp
mov
push
xchg
adc
mov
gs
pushf
call
add
and
or
(bad)
nop
push
sahf
aaa
js
add
gs
jae
sub
inc
fistp
push
test
cmps
call
cmp
jmp
pop
mov
adc
adc
and
(bad)
sub
js
push
(bad)
mov
mov
add
(bad)
ffreep
and
movs
cmps
jb
rcr
pop
stos
pop
lods
xchg
icebp
mov
cdq
xor
stos
aam
push
ins
mov
call
fs
cwde
cld
ds
test
cmp
gs
mov
and
mov
mov
cwde
adc
push
jae
and
mov
aas
scas
outs
adc
test
add
imul
(bad)
sbb
call
jecxz
xor
sbb
inc
call
pop
add
adc
rcr
xor
scas
mov
retf
or
and
dec
add
out
enter
jl
xor
test
inc
pop
nop
and
sbb
pop
adc
sub
mov
imul
jo
fld
xchg
jns
sbb
cmp
adc
cs
xor
test
inc
or
pop
mov
je
cmp
loopne
xor
jg
adc
jbe
mov
jmp
pop
rol
sahf
pop
(bad)
stc
add
mov
popa
adc
push
pop
hlt
shl
push
dec
pop
in
retf
popa
and
sbb
ror
add
adc
lock
add
adc
repz
or
add
push
sbb
rcl
test
cmp
inc
sbb
and
cs
jae
or
push
in
xor
sahf
lahf
retf
ja
dec
fisubr
mov
inc
push
call
adc
into
and
mov
icebp
add
dec
or
inc
mov
test
sahf
inc
add
mov
dec
or
data16
push
cmp
and
and
rol
push
dec
mov
sub
sbb
mov
or
repz
cmp
push
rcl
inc
outs
ja
add
aaa
aad
dec
add
(bad)
adc
cmp
and
sahf
push
cmp
push
mov
pushf
mov
or
push
dec
lahf
retf
and
sar
cs
pop
pusha
sbb
call
jecxz
cmp
popa
mov
cmps
xor
add
push
fcom
jo
dec
das
gs
aam
sbb
add
adc
xor
mov
add
cmp
mov
shr
rol
and
push
push
xchg
mov
and
cmp
cmp
fs
nop
ret
pop
push
add
popf
bound
je
div
outs
int
xchg
pop
pop
mov
call
inc
jns
xchg
mov
pusha
or
fistp
and
pop
call
pop
adc
cmp
call
fisttp
xlat
sub
stos
inc
sub
or
scas
mov
ins
aas
cmp
push
fidivr
adc
jbe
out
sub
jb
cmps
aad
dec
icebp
call
ror
lock
and
cwde
and
xor
mov
pop
aaa
fild
mov
add
nop
loope
jbe
rol
add
and
and
push
xlat
out
and
jno
pop
inc
adc
pop
sahf
imul
cmp
mov
in
pop
fdiv
cdq
push
push
retf
outs
out
or
pop
pop
jge
shl
sbb
xchg
cld
mov
sbb
pop
or
dec
mov
lahf
pushf
iret
test
mov
or
out
xchg
(bad)
xchg
xchg
sbb
and
sbb
nop
pop
mov
add
push
out
dec
jg
push
bound
xchg
dec
dec
xor
sub
nop
and
cmp
xchg
int
jns
sub
cmp
adc
in
add
loopne
cmp
stos
imul
popa
mov
test
inc
sbb
jbe
jbe
push
leave
inc
aaa
xor
add
retf
dec
pop
xor
cdq
jne
sub
mul
push
adc
and
sub
add
pop
es
pushf
mov
call
enter
sbb
jp
xchg
nop
and
test
and
dec
mov
push
push
lods
enter
mov
mov
jmp
test
mov
in
jns
mov
dec
mov
iret
adc
out
mov
les
mov
xchg
xchg
fmul
mov
imul
dec
xchg
push
pop
push
or
jnp
jno
dec
sub
outs
mov
clc
push
lods
retf
xchg
int
and
push
cmp
cwde
ret
fnsave
adc
pusha
inc
dec
dec
push
pop
xchg
inc
push
repnz
jo
dec
xor
xchg
adc
push
(bad)
push
mov
pushf
jmp
mov
sahf
sbb
addr16
inc
or
cmp
jo
dec
dec
and
cmp
sbb
jne
push
lea
ins
out
mov
ret
or
push
pinsrw
add
mov
mov
pop
fwait
sbb
adc
inc
mov
pop
test
xor
mov
outs
cs
stos
lds
test
xor
loope
pop
cmp
shl
pop
or
aas
push
adc
inc
fimul
call
fild
ret
push
inc
pop
cmp
or
pop
mov
adc
jb
movs
test
xor
inc
outs
neg
inc
sub
xor
into
sbb
(bad)
outs
mov
add
pop
lds
imul
add
add
inc
sub
aam
sbb
and
sbb
(bad)
adc
push
out
rol
imul
je
mov
push
sub
arpl
lock
pop
outs
xor
dec
sub
push
push
js
ss
jmp
inc
das
ins
push
lds
(bad)
fdiv
inc
fldcw
ds
or
ds
lock
push
pop
mov
pop
pop
sbb
nop
and
or
xor
fwait
mov
enter
mov
add
cmp
pop
and
mov
aam
mov
retf
sbb
sub
cmp
stos
or
mov
xchg
add
xor
dec
popa
xor
add
sbb
xchg
xor
test
mov
push
adc
xchg
test
adc
adc
xchg
add
mov
cmp
xor
shr
inc
push
sbb
mov
xlat
rcr
add
clc
arpl
sub
add
fistp
fist
mov
mov
leave
cld
add
mov
pop
xchg
lahf
mov
je
lea
imul
push
mov
mov
repnz
mov
jmp
inc
pop
ins
pop
popa
sbb
or
repnz
(bad)
neg
inc
aam
mov
rcr
inc
mov
sbb
pop
mov
add
and
popa
nop
cmps
add
push
adc
jo
cmp
mov
mov
sub
lea
test
dec
call
jmp
pop
inc
mov
jae
pop
aas
add
daa
mov
cmp
(bad)
sbb
fidivr
test
cmps
adc
lods
cmp
retf
mov
and
adc
mov
push
push
ret
scas
into
inc
adc
(bad)
xor
les
cmp
push
test
or
fld
and
les
pop
inc
sbb
js
pop
int3
movs
(bad)
push
push
push
bound
xchg
push
adc
mov
xor
xchg
mov
test
dec
sub
movs
pusha
push
jns
push
adc
xchg
add
cmps
sub
pop
les
push
sbb
ret
mov
sub
add
iret
(bad)
dec
mov
push
and
jge
pop
dec
adc
dec
(bad)
rcr
int
add
rcr
call
int3
dec
xchg
cmp
or
mov
sbb
(bad)
int
ror
or
dec
or
sub
and
inc
imul
retf
pop
mov
ror
out
xor
jne
call
or
cmp
mov
push
and
add
xchg
mov
ss
je
test
sub
aas
shl
pop
cmp
aaa
push
jo
push
sbb
retf
cwde
pop
mov
pop
pop
xor
into
push
xchg
(bad)
cmp
mov
mov
das
out
xor
enter
push
add
jge
push
int
push
or
sbb
push
(bad)
cdq
cmp
popa
aas
mov
inc
adc
jne
enter
(bad)
icebp
pop
mov
stos
(bad)
xchg
push
xor
cmp
pop
pop
loope
mov
ror
mov
les
xor
push
push
mov
add
dec
loope
xor
call
sbb
mov
daa
adc
rcl
popf
sub
ret
inc
sub
cvttps2pi
mov
movs
mov
push
nop
sar
idiv
mov
mov
xchg
scas
data16
ds
xchg
pusha
inc
test
lods
or
sub
mov
add
mov
adc
stos
mov
loop
add
pop
sub
cmp
push
jge
mov
pop
mov
inc
add
or
or
jl
pop
pop
aas
push
cmp
mov
faddp
enter
cs
xor
pusha
lods
jl
call
add
mov
daa
mov
jno
mov
xchg
or
add
mov
dec
call
sub
shr
xor
mov
fwait
cmp
xchg
xchg
adc
sbb
push
mov
pop
dec
or
mov
jl
sub
jmp
inc
add
ret
lock
push
repz
push
lods
test
mov
fdiv
xor
(bad)
push
push
push
ins
es
pop
call
add
add
push
or
mov
nop
jecxz
es
pop
loopne
cmc
xchg
sbb
add
je
mov
loop
std
sub
dec
jns
add
rol
mov
pop
mov
xchg
ficom
gs
jne
or
cmovns
xor
das
mov
mov
and
bound
or
mov
push
aas
add
push
or
and
push
push
call
sub
xor
jo
push
rol
xchg
shld
jg
sub
popa
xchg
push
sub
retf
jecxz
shl
add
int
add
cmp
js
push
xchg
fs
lods
jle
pop
lea
into
movs
sbb
or
push
js
dec
and
add
scas
test
adc
in
push
pop
stos
push
leave
or
add
loop
xor
movs
add
mov
xor
or
inc
sub
and
xor
jne
mov
xchg
mov
xor
or
int
arpl
sbb
nop
les
jmp
lock
sbb
inc
cmp
test
mov
cs
sbb
mov
lods
test
cwde
jns
cwde
jmp
add
dec
loop
add
std
imul
jg
mov
rcr
inc
jp
movs
push
mov
outs
sub
add
jmp
push
pop
mov
je
add
push
add
jmp
js
push
test
pop
clc
test
movs
lea
ficom
cmp
dec
ror
and
sbb
and
dec
(bad)
lods
jnp
rol
cmp
and
push
sub
dec
in
jo
jo
stc
jp
jl
cs
sub
add
jle
mov
fimul
sbb
sbb
cdq
mov
jmp
sbb
xchg
and
test
push
rcr
cwde
adc
lock
pop
cld
ss
retf
push
iret
jl
sub
mov
retf
fwait
mov
lods
cwde
adc
movs
push
fwait
(bad)
(bad)
les
jae
push
push
mov
sub
push
je
cmp
push
call
push
or
jae
call
dec
push
jecxz
or
or
cmc
std
inc
push
push
add
and
push
sub
cld
jb
pushf
xchg
xchg
push
call
sub
push
popa
bound
neg
pop
mov
test
pop
rol
aam
out
inc
ret
call
pop
pop
push
mov
cmp
scas
sbb
inc
or
jno
dec
inc
xchg
jg
sti
pusha
and
cwde
or
xor
jne
test
out
inc
adc
lods
sbb
mov
movs
dec
aaa
xchg
or
sbb
clc
call
sub
mul
add
push
adc
cmp
movs
mov
retf
dec
ins
xlat
mov
add
(bad)
das
mov
mov
add
and
pop
hlt
jmp
mov
inc
call
inc
ja
outs
add
mov
mov
cmp
inc
loope
cmp
push
jmp
js
xchg
mov
enter
xor
xchg
cmc
dec
xor
dec
and
fxch
out
adc
jnp
jecxz
into
retf
dec
xchg
icebp
icebp
dec
sbb
pop
shl
and
pop
loopne
push
arpl
xchg
movs
xchg
(bad)
or
xchg
and
sub
adc
xor
cmp
push
push
pop
add
add
jo
mov
xor
push
pop
or
mov
sbb
add
adc
sbb
test
outs
loopne
js
or
push
pop
pop
push
dec
cs
or
push
(bad)
and
punpckhdq
sbb
outs
mov
push
ss
xor
add
in
test
int3
aas
xchg
or
clc
js
jo
nop
jge
(bad)
cmps
cs
push
pop
dec
dec
push
loopne
std
cmp
push
mov
in
aas
jno
imul
in
or
push
neg
cmps
cmp
add
or
push
sti
lock
jp
clc
cmp
push
dec
pop
and
xlat
popa
dec
xchg
xchg
pop
jo
sub
inc
jmp
and
add
add
fstp
call
loopne
and
icebp
inc
inc
lds
dec
loope
pop
enter
add
pop
inc
nop
push
ficom
aas
test
cmp
and
push
cmp
ret
(bad)
sub
adc
cmps
jg
loop
rcl
and
adc
rcr
(bad)
aad
pop
or
sbb
std
xchg
inc
daa
fsubr
xchg
mov
dec
fidiv
call
sbb
sti
inc
js
mov
sahf
and
add
mov
(bad)
call
adc
jns
push
sub
repz
xchg
mov
jnp
fsubr
pusha
lea
push
cmc
adc
lea
call
je
rdmsr
or
jp
sbb
je
mov
xor
cmps
lds
ret
lds
pop
add
inc
sub
sub
sbb
cs
xchg
adc
mov
jl
loope
dec
mov
imul
sub
imul
sub
inc
mov
ret
or
inc
into
inc
loop
lds
push
and
pushf
push
push
jne
sub
cs
push
movs
mov
test
iret
xor
ret
add
call
inc
jle
add
inc
push
xchg
pop
bound
data16
idiv
fs
movs
sar
js
gs
ins
sub
xchg
pop
movs
out
mov
call
mov
and
inc
lods
or
cmp
test
rcr
mov
dec
jmp
push
call
or
add
xor
daa
cld
or
call
fdivr
pop
call
add
pop
push
push
pushf
jbe
aad
out
out
sub
iret
rcl
call
test
add
adc
add
cmc
(bad)
das
pop
xchg
push
std
imul
fwait
inc
xor
mov
add
jbe
xchg
or
ins
inc
dec
pop
loope
ror
pop
retf
rcl
push
xchg
fwait
nop
push
xor
and
pop
pop
cmp
inc
push
jmp
mov
pop
adc
sahf
aas
sbb
mov
xor
ins
ret
adc
inc
ret
xchg
xor
(bad)
jne
repz
add
push
add
adc
add
jae
lods
test
mov
cmp
movs
lods
jns
or
inc
mov
and
cmc
mov
rol
add
xor
sub
mov
sbb
inc
jo
adc
pop
inc
xor
pop
inc
ja
pop
and
pop
imul
fidivr
mov
cli
lods
dec
rol
jno
cmp
xor
jo
rol
imul
je
ds
cmp
test
lods
dec
into
xchg
mov
mov
pop
mov
inc
xor
or
mov
xor
push
cs
aas
and
push
pop
ret
push
xchg
mov
adc
sbb
dec
or
xchg
or
pop
jmp
push
jg
jl
xor
add
pop
inc
mov
call
push
aas
in
sbb
(bad)
scas
xchg
sbb
pusha
sti
push
jb
movzx
mov
loop
aad
inc
stos
fsubr
dec
add
rol
xor
push
pop
shr
mov
mov
or
cmps
push
add
or
sub
mov
xor
push
stos
retf
test
and
and
add
xor
mov
dec
leave
sub
xor
add
orps
and
cmps
pop
ss
pusha
xchg
adc
mov
or
int
sub
mov
push
jbe
pop
xlat
dec
cmp
cmp
repnz
cmp
mov
mov
loopne
xchg
lea
ins
push
daa
xchg
clc
loopne
je
ret
mov
cmp
inc
cmp
call
ds
mov
dec
pop
shl
or
add
popa
cmp
push
(bad)
push
pop
lods
in
sbb
sub
test
add
pushf
mov
out
daa
inc
add
and
jmp
adc
mov
cwde
call
imul
test
adc
and
jle
je
push
jne
aas
or
test
add
push
mov
out
cld
add
inc
mov
retf
sub
push
push
jbe
inc
sub
push
mov
jns
inc
add
ins
xchg
xor
repnz
retf
dec
cmp
xor
out
js
dec
sahf
nop
mov
mov
jns
xchg
sti
and
inc
or
in
ror
enter
and
ror
and
lea
mov
retf
mov
jne
push
sub
pop
jne
lock
or
jbe
lea
ficomp
or
adc
daa
sahf
adc
sub
call
cmp
ret
sbb
jle
add
nop
jmp
mov
push
and
pop
xchg
sub
nop
retf
cmps
cmp
jle
scas
or
or
ret
gs
lds
pop
mov
pop
mov
pop
out
pop
lds
mov
and
push
sub
adc
ret
mov
add
mov
pop
xor
in
jne
mov
adc
and
cmp
push
sub
add
mov
push
mov
pop
clc
fsub
shl
inc
daa
(bad)
lea
push
sub
js
or
mov
out
mov
sbb
push
push
push
in
pushf
(bad)
ins
rol
test
bound
scas
inc
shr
jmp
adc
push
push
cmps
mov
mov
mov
xor
inc
clc
sti
add
daa
jmp
cmp
call
sbb
(bad)
stc
xchg
dec
popa
fcmovb
loope
rcl
add
pop
pop
inc
xchg
loop
scas
aam
push
repnz
bound
dec
adc
lods
and
xchg
into
or
pop
inc
jne
or
nop
pop
mov
dec
inc
adc
xchg
xor
push
mov
scas
mov
xchg
clc
add
push
jp
jecxz
or
add
lds
jle
xor
iret
retf
add
inc
js
adc
sti
imul
sub
sbb
sub
lods
out
cmps
push
cmp
push
or
fs
test
test
pop
lahf
out
push
bound
mov
movs
test
in
cmp
xor
push
jb
pop
je
push
inc
add
add
and
sbb
sub
xor
pop
fdivr
(bad)
stos
aaa
xor
add
inc
sub
out
loop
pop
dec
gs
mov
ss
mov
jle
cmp
mov
and
in
mov
dec
(bad)
cmp
pushf
inc
fisub
jmp
inc
call
or
ins
mov
pop
push
pushf
mov
xor
sub
movs
mov
push
(bad)
pop
es
ins
loop
out
xchg
cdq
xchg
cs
sub
push
enter
add
sbb
cmc
add
gs
call
fldcw
add
imul
cmps
rcr
push
in
cmp
fadd
sub
mov
mov
add
loopne
jle
jns
sbb
xor
cmp
ins
xchg
mov
int
xchg
mov
fiadd
inc
mov
sbb
xor
sbb
lea
push
add
je
gs
push
xor
or
leave
push
dec
jg
je
repnz
mov
jb
rol
mov
xor
aaa
push
xchg
sahf
sub
mov
pop
fdivr
sub
sub
xor
inc
test
jnp
pop
cmp
mov
daa
test
aas
xor
xchg
mov
into
dec
and
repnz
inc
shr
fldcw
push
pop
stc
add
cwde
in
mov
xchg
mov
lods
cmps
sahf
pushf
pop
mov
pushf
xchg
pop
repz
or
or
pop
call
test
cdq
out
inc
or
movs
mov
push
call
add
xor
jns
mov
out
inc
jbe
jle
jns
call
js
js
jo
ss
pop
xchg
jg
dec
inc
lea
call
or
sbb
nop
cs
jb
jbe
push
nop
mov
inc
fs
imul
push
jns
sub
sub
sbb
jb
or
cmc
xchg
mov
sub
xor
std
mov
nop
mov
or
xchg
push
pushf
mov
mov
and
in
adc
cmp
xor
mov
scas
in
cmp
dec
push
jae
sub
inc
repnz
add
cmp
aaa
mov
sub
jmp
mov
cmps
pushf
mov
in
inc
test
into
dec
xor
xor
movzx
dec
cmp
stc
stc
test
pop
inc
push
xor
adc
push
mov
enter
or
sbb
hlt
pop
in
mov
adc
call
test
jne
cld
stc
test
mov
imul
add
mov
cmp
iret
pushf
in
or
icebp
popa
and
fadd
push
std
push
add
pop
sub
add
push
mov
mov
push
cmp
cmp
aaa
in
sub
or
repnz
or
xchg
movs
push
(bad)
dec
cmps
repnz
test
mov
retf
inc
es
iret
(bad)
in
xchg
sbb
and
imul
jne
push
ins
mov
je
gs
rol
jle
pop
nop
jne
in
test
test
pushf
in
pushf
sub
jb
push
inc
jb
xor
mov
mov
push
adc
arpl
xlat
mov
jg
push
ds
jecxz
imul
push
cmp
shr
cmp
or
xor
jp
sbb
pop
mov
lods
sti
mov
ins
and
or
inc
jecxz
in
ja
rcr
mov
cwde
(bad)
cs
loope
add
aam
or
in
cs
xor
push
leave
mov
fistp
iret
add
mov
enter
xor
dec
rcr
mov
(bad)
sti
push
push
sbb
jp
shr
outs
inc
shr
call
rol
sbb
rol
push
mov
mov
xchg
daa
(bad)
push
rcl
rol
jb
inc
lods
lods
les
retf
test
nop
push
pop
jo
xchg
ror
sbb
cmp
aas
les
sbb
ror
add
dec
jae
dec
xor
add
mov
and
or
or
mov
adc
les
inc
popa
and
adc
or
adc
pushf
lahf
or
clc
rol
sub
mov
mov
push
enter
cmp
cmp
sti
ins
dec
cmc
cmp
add
inc
push
jne
mov
in
movs
push
push
xchg
(bad)
xor
jbe
adc
or
dec
imul
dec
jecxz
test
popa
xor
fmul
sbb
xchg
pop
add
pop
xchg
jl
test
push
mov
dec
call
push
push
inc
pop
add
in
xor
sub
lock
cld
push
jns
mov
fsubr
cmc
pop
cmp
or
popf
scas
sar
in
sar
mov
xor
pushf
(bad)
xor
pop
dec
test
not
sub
mov
cdq
test
push
(bad)
jecxz
loopne
ins
jnp
cmps
imul
and
jmp
push
xor
inc
in
xchg
mov
xchg
adc
cmps
pushf
pop
fst
push
imul
test
cwde
jl
pop
push
inc
mov
jo
xor
cmp
shr
callw
cld
sub
cmc
pop
add
call
and
and
xchg
loope
pop
mov
aas
(bad)
fdivp
dec
mov
fild
nop
repnz
xchg
mov
push
push
lea
add
or
push
add
xchg
and
add
retf
and
pop
mov
add
adc
les
retf
push
mov
push
add
adc
jecxz
pop
sub
and
rcl
push
out
scas
pop
ss
je
inc
lock
mov
adc
pusha
outs
shl
push
inc
aaa
movs
loopne
adc
mov
or
add
stos
mov
ins
jne
mov
cmc
push
or
fwait
shl
ror
push
push
mov
add
add
repz
(bad)
fadd
cli
inc
jnp
fdiv
loopne
sbb
mov
dec
test
fcomp
mov
bound
adc
lahf
lods
and
xchg
les
aam
dec
adc
inc
jbe
ins
xor
mov
inc
sbb
loope
jno
or
jbe
adc
push
sbb
push
xchg
call
inc
cmp
call
js
fld
sbb
lds
push
nop
aam
sub
loopne
retf
inc
sbb
push
pop
cmp
adc
fld
xor
push
push
dec
retf
xchg
into
inc
aaa
push
dec
sbb
push
outs
jge
movs
les
or
loopne
adc
ficom
sbb
xchg
sub
jnp
adc
test
fidivr
and
sub
shl
mov
je
mov
enter
adc
cmps
fs
add
or
dec
sar
out
shl
inc
add
enter
add
jo
cld
nop
add
sbb
movs
push
and
xor
xor
push
jp
ror
in
xor
pushf
cs
outs
push
das
test
dec
leave
push
inc
pop
dec
jns
push
jne
pop
lods
xchg
icebp
mov
call
and
adc
outs
jbe
cmp
pandn
push
aas
fiadd
xor
movs
jo
sub
in
mov
push
enter
les
sbb
jmp
cs
mov
cmp
sbb
sahf
ins
lods
inc
push
call
sbb
jb
lods
mov
add
call
push
ins
fistp
dec
dec
add
je
pop
adc
aas
pusha
leave
push
pop
push
and
push
sbb
repnz
add
repnz
mov
push
ror
ss
pop
pop
and
loope
push
push
cmp
xor
or
aam
or
test
ins
add
mov
sbb
inc
pushf
test
push
pop
pop
jle
pop
or
enter
cmp
lea
(bad)
xor
push
ret
mov
push
pop
aaa
push
aaa
add
lea
(bad)
movs
xchg
jmp
mov
loope
mov
cmps
jge
fcmovnb
sbb
jb
inc
lods
sub
sub
mov
leave
inc
aad
add
stos
outs
add
dec
ret
repz
push
or
push
mov
push
ret
jg
lds
jmp
cmp
jg
and
sbb
inc
ins
lahf
test
ret
add
dec
popa
jp
clc
xchg
mov
out
ror
sbb
loop
into
adc
daa
pop
in
test
mov
dec
inc
inc
xchg
mov
jp
retf
push
sti
fiadd
or
hlt
nop
mov
inc
pop
mov
loope
mov
dec
mov
xor
or
sub
mov
add
push
outs
mov
stos
add
or
push
pop
popa
and
adc
push
ja
popa
cli
adc
push
call
fst
xor
add
dec
mov
in
push
aas
pop
jecxz
sar
and
push
jo
sub
add
call
retf
xor
popa
inc
je
push
or
push
add
outs
push
jbe
imul
lods
pushf
and
dec
test
push
mov
adc
fs
pusha
fistp
cmps
xor
pop
pop
ret
or
push
xor
dec
jmp
sbb
sub
cmp
enter
scas
or
jnp
sub
in
xchg
mov
sbb
inc
mov
and
por
mov
adc
das
adc
ret
call
mov
imul
jl
out
into
jecxz
pop
dec
std
pop
push
xor
aam
inc
pushf
in
inc
adc
lea
xor
ror
pop
xor
inc
inc
scas
pop
pop
aas
lds
or
sbb
mov
rol
jns
xchg
add
xchg
xor
and
jle
outs
add
push
push
ins
inc
cdq
add
sub
adc
adc
dec
fistp
test
cli
and
mov
outs
call
mov
sbb
je
ins
and
jmp
jne
shr
add
cli
aas
mov
out
push
push
push
and
inc
cmp
mov
sub
dec
add
clc
cmp
cli
stos
or
lahf
dec
sbb
(bad)
aam
push
ds
add
ja
bound
add
push
test
fdiv
lds
push
mov
daa
adc
add
addr16
popa
or
outs
sub
jge
or
nop
add
cmp
adc
data16
pop
mov
inc
dec
ror
or
ror
and
jle
repnz
lahf
pop
inc
adc
adc
rol
call
rol
in
mov
scas
call
int
push
or
fist
jb
js
addr16
add
fsubrp
pop
mul
or
and
xchg
stos
mov
inc
push
or
pop
and
adc
into
out
ss
push
and
mov
cmps
rcr
mov
mov
rol
int3
or
or
neg
xor
inc
leave
call
add
or
inc
imul
sbb
inc
loopne
sub
xor
ror
sub
inc
sbb
jl
add
imul
sbb
sbb
js
mov
push
xor
pusha
pop
inc
jle
aaa
or
movs
test
test
shr
add
mov
nop
xchg
jne
xor
add
sar
sar
out
push
bound
(bad)
dec
mov
and
nop
and
sub
jno
sbb
and
imul
cli
in
or
lods
call
inc
int
sub
shr
add
push
sbb
scas
sbb
or
mov
add
add
or
loopne
xchg
cs
pop
jle
adc
sbb
and
pop
jne
mov
xchg
and
jb
xchg
ror
push
or
mov
xchg
frstor
lock
xchg
sub
or
push
add
fdiv
jne
jbe
push
push
and
or
lods
mov
lock
push
or
xor
es
push
enter
nop
mov
(bad)
(bad)
mov
sbb
fs
push
jno
or
(bad)
mov
pop
xchg
adc
push
shl
adc
dec
sub
fcom
mov
cs
cmp
je
mov
sbb
sbb
pop
outs
add
add
adc
or
adc
das
jmp
popf
daa
xchg
push
jp
adc
sahf
mov
test
pop
icebp
sub
ret
sbb
sub
add
sbb
lea
sbb
xor
and
call
or
pop
jmp
pop
xor
mov
or
fs
push
(bad)
stos
mov
fild
dec
cwde
mov
and
or
pop
xchg
sub
adc
push
dec
xor
jp
dec
fisub
cmp
inc
call
das
adc
mov
sub
mov
arpl
aas
push
sahf
test
pop
add
lahf
xchg
mov
add
add
add
or
inc
movs
xchg
es
and
add
sbb
inc
xchg
fst
jb
sbb
add
adc
jb
shl
dec
loopne
rcr
mov
sub
or
mov
inc
xchg
and
lds
cmp
or
pop
lahf
fwait
xchg
cs
test
mov
inc
pop
call
pop
jno
enter
call
push
pop
mov
ja
inc
dec
mov
mov
and
rsqrtps
pop
in
lods
inc
and
iret
adc
and
inc
mov
hlt
mov
dec
ds
je
mov
add
stc
jle
xchg
mov
cs
and
std
add
cld
xchg
hlt
mov
pop
imul
sub
out
or
js
inc
sbb
cmp
aam
and
inc
jle
xor
or
sbb
or
inc
sub
push
(bad)
adc
ins
push
(bad)
arpl
and
fs
shl
mov
mov
call
jmp
(bad)
mov
je
cmp
jno
sbb
jb
cwde
push
cmp
daa
lods
pop
mov
inc
jp
cmp
in
rcr
mov
jecxz
jb
and
icebp
or
std
stos
dec
jb
fld
xchg
test
jmp
adc
cmp
sbb
ins
cmc
test
add
push
imul
dec
dec
inc
je
and
int3
cli
and
adc
cmp
push
lahf
cmp
cmp
jnp
adc
xchg
sbb
push
aaa
outs
and
mov
dec
jl
pop
xchg
inc
(bad)
in
jnp
push
call
ja
test
test
movs
push
and
add
and
push
mov
jg
icebp
inc
add
and
ja
in
std
add
push
mov
dec
sbb
add
test
dec
push
cmp
ja
mov
lock
aas
add
sbb
test
aas
xor
or
cmp
jmp
les
mov
scas
imul
ret
daa
mov
dec
push
xchg
nop
inc
mov
aam
and
or
mov
sbb
jmp
dec
inc
and
push
push
xor
call
sbb
cwde
lock
je
imul
dec
jmp
xor
lock
iret
add
mov
or
push
je
add
add
sub
(bad)
xchg
push
cmp
cli
js
push
jmp
ret
movs
adc
and
loope
and
mov
rol
push
loop
test
sbb
push
pusha
push
sbb
jle
jnp
ror
ret
in
scas
push
or
scas
mov
xchg
adc
fwait
xchg
jae
push
and
loop
or
jmp
mov
or
fwait
shl
dec
les
cmp
pop
icebp
arpl
add
jb
mov
in
xor
loopne
mov
(bad)
or
jbe
push
bound
push
loopne
arpl
inc
retf
ja
push
mov
sbb
jle
or
or
adc
sub
sub
cmp
je
push
lahf
push
cmp
mov
call
in
shl
out
inc
mov
test
inc
xchg
(bad)
hlt
adc
add
fcom
adc
cmp
sbb
and
in
mov
jno
in
mov
or
jb
xchg
pop
mov
jo
in
and
stos
aas
fwait
and
stc
add
and
pop
xor
js
aad
add
out
leave
sub
cmp
cmp
mov
ds
cmp
sbb
call
pusha
out
xor
pop
mov
retf
js
cs
xchg
jl
and
in
xor
and
pop
sbb
js
enter
fiadd
cmps
xchg
loope
jle
pop
mov
or
out
cdq
sbb
jp
and
fld
sbb
fwait
sbb
stos
idiv
dec
jne
dec
jbe
xchg
cmp
xchg
pop
sub
ret
jne
cmp
pusha
test
int3
or
sbb
jne
cmps
jnp
dec
pushw
jo
sar
pop
imul
jne
xor
mov
adc
call
push
and
mov
mov
mov
pop
xor
or
adc
enter
loopne
push
ins
push
test
ins
loope
mov
jo
cmps
add
adc
push
mov
ds
and
test
mov
add
pop
test
mov
mov
repz
inc
aaa
test
push
adc
pushf
test
cmc
add
jns
xchg
cmp
xchg
sahf
dec
xor
and
sub
xchg
push
dec
adc
push
xchg
dec
dec
scas
(bad)
jmp
inc
or
xchg
shr
shl
int
dec
add
and
not
inc
jmp
enter
stc
fist
call
fsubr
push
push
or
iret
xchg
and
cmp
fild
call
jle
push
in
pushf
add
add
shr
add
add
push
ret
add
(bad)
mov
add
mov
xchg
mov
outs
pop
or
inc
and
add
push
jbe
and
pop
mov
push
sbb
or
lahf
mov
jne
enter
inc
in
or
movs
pop
xor
and
sub
fs
or
ins
push
test
movs
inc
cmp
sbb
outs
cld
repz
pop
pop
xor
cs
mov
sahf
add
mov
jb
push
dec
cmp
or
jle
bound
add
cmp
push
add
or
rcl
(bad)
(bad)
sbb
dec
add
ss
dec
or
sbb
sbb
xor
mov
or
mov
loopne
push
ror
xchg
in
sbb
pop
int
pop
push
jmp
retf
aas
add
mov
adc
nop
lahf
mov
mov
mov
pop
dec
mov
inc
idiv
adc
inc
or
into
bound
pusha
movs
xor
or
sbb
jo
or
or
add
add
xor
adc
mov
jne
add
push
inc
es
sub
inc
lods
cdq
loope
cmp
repz
inc
mov
push
xchg
xchg
imul
stos
sub
push
jns
add
sbb
xor
cmp
call
test
or
dec
adc
mov
test
and
jmp
lds
and
call
adc
jmp
mov
data16
je
out
adc
push
pop
cmp
aam
fdivr
adc
xor
push
add
pop
fs
dec
or
js
pop
cmp
dec
es
xchg
adc
inc
pop
ret
pop
repnz
sbb
lods
xchg
enter
bound
enter
mov
leave
pmulhuw
jne
(bad)
inc
nop
pop
std
out
xchg
les
ss
dec
dec
and
movs
xchg
fstp
adc
sti
rcr
jbe
fsubr
mov
xchg
(bad)
or
dec
popa
into
add
sub
xor
adc
sub
bound
add
in
fist
add
pop
pop
fwait
(bad)
out
cmp
inc
repnz
imul
or
add
stc
add
out
add
add
add
(bad)
mov
mov
and
and
in
nop
nop
dec
ins
push
fldenv
(bad)
mov
cmp
push
push
xor
jnp
add
and
push
pushf
test
mov
lods
stos
je
into
and
xor
bound
(bad)
mov
push
jo
cmp
cli
mov
scas
shr
mov
mov
jl
pop
js
test
xchg
jp
mov
pop
adc
test
mov
xchg
cmp
enter
or
or
jl
inc
sub
int3
inc
xchg
mov
mov
imul
ror
adc
push
or
dec
add
cwde
jp
lea
mov
ins
test
jae
ins
ds
inc
call
pop
sub
sub
adc
dec
call
mov
or
mov
push
adc
rcl
int3
(bad)
in
pop
lahf
adc
cmp
loope
shl
dec
xor
jne
add
sub
enter
ret
jmp
fdiv
dec
int
outs
push
mov
fs
dec
sbb
adc
ja
inc
call
jb
lods
out
fs
mov
push
or
add
retf
nop
int
pop
push
sbb
adc
or
pop
lea
sahf
cmp
jb
xchg
adc
ja
imul
xor
out
adc
push
push
mov
pop
push
cmp
jl
fisub
dec
sbb
mov
int3
ret
shl
push
and
sbb
sbb
scas
les
imul
ret
xchg
xlat
jns
jmp
(bad)
sti
xchg
rol
push
mov
jo
call
pop
(bad)
in
repz
cmp
cmp
push
jb
inc
mov
ficom
mov
clc
push
add
(bad)
inc
mul
and
pop
ja
std
mov
and
retf
and
pop
in
sbb
inc
xor
inc
mov
pusha
xor
cmp
add
sub
(bad)
imul
(bad)
push
aaa
cmp
cmp
cmp
fdiv
and
vmovlpd
sub
loopne
add
adc
cmp
movs
mov
push
inc
xor
ins
inc
inc
addr16
adc
inc
adc
fwait
jb
daa
daa
cmp
cmps
ret
pop
sbb
lods
push
mov
outs
xor
clc
fs
out
jbe
inc
int3
push
sbb
jns
movs
push
push
or
ds
adc
sti
pushf
fadd
adc
popa
sub
pop
fisub
ss
ror
push
xor
add
imul
adc
rol
sti
cmp
mov
push
pop
cmp
pop
xchg
std
add
sbb
cld
lods
scas
popf
and
cmp
in
pop
cmp
inc
or
in
sbb
adc
fisubr
packssdw
add
jns
call
dec
sub
std
int3
mov
pusha
push
mov
mov
mov
dec
scas
pop
cmp
add
and
and
xor
sub
aad
icebp
cli
mov
rcr
push
cwde
push
cld
stos
stc
lods
out
inc
or
inc
daa
scas
xchg
mov
ret
pop
mov
call
rol
and
jns
call
bnd
or
add
mov
lods
adc
pop
xor
xchg
push
popf
pusha
fsub
push
dec
sbb
or
push
iret
add
int3
jmp
dec
in
test
mov
sbb
sti
mov
pop
fcomp
cmp
fdiv
mov
xchg
inc
into
sti
repnz
pop
adc
jmp
fs
(bad)
je
pop
call
dec
cli
xchg
js
dec
jne
sahf
jmp
imul
loope
and
popf
add
int
xor
push
sub
add
push
mov
loope
test
ss
jle
dec
add
add
sbb
pop
pushf
lahf
call
push
scas
sbb
jb
repz
inc
jbe
inc
and
push
xchg
pop
xchg
cmps
cmp
mov
sbb
xor
push
fs
sbb
and
pop
jl
mov
mov
inc
sub
dec
add
mov
dec
fiadd
dec
fdivr
adc
cmp
or
pusha
cmps
scas
aaa
xor
std
push
test
push
push
lea
cmp
add
add
or
aam
lods
mov
lods
mov
out
fisubr
xchg
push
jnp
aaa
xchg
fldcw
nop
stc
mov
xchg
push
dec
cmp
mov
xor
inc
ja
and
je
push
jecxz
in
cmp
jecxz
imul
sbb
cmp
call
sbb
cdq
loopne
test
adc
loop
nop
dec
jmp
jg
add
xchg
adc
adc
or
call
les
call
es
fbld
je
dec
sub
push
(bad)
shr
dec
arpl
mov
add
xchg
rcl
(bad)
fild
dec
test
fmul
sub
nop
mov
je
inc
ss
push
cwde
dec
and
inc
mov
hlt
xchg
xor
adc
enter
adc
sub
mov
aam
mov
add
add
loope
mov
dec
test
mov
mov
push
aam
ss
dec
dec
or
sub
shr
call
repz
push
sar
push
and
loope
movs
shl
or
test
out
push
sub
sbb
call
add
add
add
fwait
dec
or
xor
ja
pop
adc
repz
adc
lea
sti
add
es
stc
or
rcl
push
dec
adc
cdq
inc
shl
add
xor
jnp
xchg
sub
ret
adc
push
push
mov
jge
sti
cmc
dec
dec
jmp
sti
leave
pop
inc
nop
fs
mov
mov
sbb
add
sub
sahf
test
cmp
ins
rcl
xchg
sbb
fimul
sbb
mov
and
sbb
ins
enter
jo
aas
push
in
adc
inc
push
adc
in
jle
sub
pxor
dec
aas
rol
rcl
and
and
mov
cmp
add
pushf
cmp
push
sub
adc
sub
or
loopne
call
leave
push
test
add
pop
xor
out
sub
inc
ret
push
fsubrp
xor
retf
and
cmp
inc
sub
mov
mov
xchg
cmp
movs
mov
loop
in
add
jmp
adc
add
jmp
js
out
add
add
push
push
ror
pop
adc
or
push
pop
mov
or
pop
mov
xchg
pop
or
add
or
mov
(bad)
retf
sbb
and
add
or
retf
push
cmp
adc
and
dec
pop
dec
(bad)
add
and
add
sub
sub
mov
adc
cmp
mov
jg
add
fsubr
fsubr
sub
dec
(bad)
ficomp
(bad)
std
cmp
ds
inc
sub
dec
ins
mov
jbe
dec
pop
or
add
inc
mov
add
popf
pushf
dec
fisttp
jb
push
add
mov
sub
push
sbb
dec
mov
hlt
jg
fst
add
lar
or
ret
push
imul
cmp
fist
pop
cmp
mov
ja
in
jns
loope
jae
mov
add
scas
ret
push
(bad)
aas
pop
nop
dec
push
inc
mov
xor
aam
cmp
sbb
add
ret
dec
mov
dec
inc
in
mov
movs
test
imul
(bad)
movs
sub
and
inc
push
or
lock
dec
mov
cmps
adc
enter
int3
xchg
rcl
mov
ret
and
sbb
add
push
jmp
mov
mov
mov
pop
mov
and
test
xor
iret
jl
sahf
and
repnz
clc
inc
aas
sbb
mov
mov
and
adc
add
pop
ins
xchg
mov
stos
test
mov
add
call
push
or
jmp
jno
jo
jg
push
je
add
pop
test
push
adc
das
adc
jmp
lea
add
mov
mov
icebp
stos
add
or
or
and
dec
inc
xor
ins
adc
add
xor
push
cs
aaa
rcr
dec
(bad)
stc
in
or
aaa
inc
cld
jb
into
call
sbb
into
jg
stos
rol
push
mov
jle
stos
hlt
nop
push
or
call
push
add
stc
mov
adc
adc
sbb
leave
inc
sbb
sbb
or
and
in
jg
push
shl
pop
sub
aas
icebp
sub
out
popf
add
adc
(bad)
jg
jge
bt
sub
in
pop
add
les
mov
add
add
clc
call
test
call
sub
cmp
and
add
pop
dec
cld
shl
inc
aam
call
nop
push
add
mov
pop
pop
pop
sar
aas
mov
push
mov
add
pusha
push
sbb
and
pop
enter
mov
lea
inc
push
sbb
movs
nop
push
je
(bad)
(bad)
shl
sub
and
inc
or
sub
mov
xor
jo
dec
jmp
je
sbb
jne
shl
jb
ret
mov
add
cmp
sbb
lock
sub
or
and
jmp
fist
pop
inc
jmp
mov
dec
pop
jno
int
and
in
bound
pop
ret
or
ins
and
test
or
mov
sub
xor
ss
ss
cmp
je
xchg
mov
mov
sbb
add
rcr
xor
adc
dec
mov
xor
dec
inc
sub
popa
lock
movs
or
inc
inc
cmp
jae
xchg
mov
mov
and
xor
movs
movs
loopne
sub
jmp
sbb
shl
outs
sahf
push
hlt
push
lea
inc
xor
push
(bad)
loope
cmp
push
gs
rcr
jns
cmp
div
sahf
daa
jge
jg
mov
dec
xor
sub
scas
dec
jle
or
out
je
mov
jo
in
loope
or
sbb
or
fdivr
cdq
jmp
sbb
jp
call
inc
mov
add
jp
dec
pop
cmp
jle
cmp
dec
inc
in
jl
lahf
in
fcomp
sub
dec
call
xchg
(bad)
or
sar
push
dec
jle
fwait
pop
bound
call
mov
out
scas
jmp
sub
mov
sbb
cmp
movs
jbe
cvttps2pi
cld
clc
(bad)
stos
mov
stc
lods
out
dec
sbb
xor
call
adc
jle
je
mov
jne
jbe
test
jmp
pop
iret
idiv
or
lds
jno
movs
or
ss
fstp
or
add
not
ss
push
add
lahf
or
push
xor
jb
push
push
dec
jmp
adc
sub
pop
pop
call
stos
repnz
adc
int
jne
call
mov
sub
mov
jne
loop
call
pop
ds
inc
loopne
shl
pop
mov
sbb
xor
sbb
aad
push
js
push
add
aas
dec
mov
aad
jne
cmp
cmps
and
dec
or
icebp
push
dec
xor
das
retf
cmp
cmp
push
xchg
mov
mov
pop
cmp
test
aam
push
test
xor
loope
inc
mov
or
push
cli
cmp
push
xor
xor
shr
ins
(bad)
jmp
fnstenv
sti
or
ins
cmp
jl
jmp
mov
push
call
push
fwait
add
call
or
add
jbe
mov
cmp
(bad)
cmp
pop
push
xchg
test
mov
add
cmp
in
inc
adc
inc
fiadd
push
sbb
shl
cmp
add
mov
cwde
int
push
je
cmp
call
cmp
mov
mov
and
and
call
pop
sub
cwde
je
dec
ficom
pop
inc
shl
imul
mov
xor
fdivrp
lock
push
loopne
test
or
shl
add
push
call
int
jmp
pop
jmp
movs
or
fst
cmc
jbe
mov
mov
adc
inc
jmp
xor
(bad)
neg
xchg
xor
mov
retw
push
ins
pop
xchg
jmp
cmp
movs
rcl
push
call
pop
inc
movs
std
adc
test
pop
push
push
jne
(bad)
in
repz
inc
mov
push
push
gs
sbb
icebp
fiadd
inc
bound
xor
dec
cmp
jne
cld
or
mov
leave
imul
popa
xchg
(bad)
or
push
jo
(bad)
or
adc
js
pop
xor
jo
cmp
pop
in
inc
test
adc
nop
jae
and
repz
adc
retf
dec
(bad)
push
sub
in
bound
mov
rcl
cmp
xor
cmp
stos
adc
loope
mov
cwde
jg
call
pop
xor
add
stos
mov
cmp
push
cmp
add
inc
into
adc
cdq
adc
mov
bound
or
push
push
mov
nop
push
rcl
pop
out
cs
push
mov
adc
mov
jo
scas
and
loopne
add
push
jmp
fnstenv
jmp
or
jnp
js
jl
pusha
ror
shr
pop
xor
add
leave
xchg
pusha
mov
mov
leave
add
add
xchg
pop
push
js
call
fstp
pop
add
and
cs
push
push
out
(bad)
or
mov
dec
adc
mov
dec
mov
mov
jae
mov
nop
leave
add
retf
cmp
push
jne
dec
push
(bad)
or
or
mov
jbe
call
and
cmp
bound
call
ins
pop
dec
sbb
sub
ds
inc
(bad)
fadd
rol
push
outs
mov
aad
les
rol
or
push
sahf
test
dec
and
ins
mov
mov
jae
mov
pop
cld
nop
and
gs
push
sbb
sbb
xchg
dec
repnz
and
es
call
or
cmp
int
gs
xchg
inc
mov
inc
and
push
dec
call
adc
add
sbb
ror
loope
jmp
ss
sti
ss
shl
and
jmp
fsub
nop
cmp
xor
test
and
cmp
imul
out
jb
adc
jnp
mov
push
adc
fst
sbb
mov
mov
mov
movs
mov
push
xchg
cmp
cs
mov
jmp
mov
jge
idiv
jne
mov
loopne
jns
jbe
js
jmp
or
jmp
mov
into
ret
add
sbb
les
cmps
adc
pop
or
scas
les
ror
inc
dec
add
mov
xor
enter
fcom
leave
add
ss
jne
movs
jmp
adc
and
sti
xchg
and
push
call
and
push
pop
inc
sbb
pop
mov
popa
mul
sbb
mov
pop
je
cmovs
push
pop
inc
out
inc
add
xor
shl
xchg
xchg
movs
jne
sbb
pop
stos
jbe
jo
xchg
push
loopne
fsub
lds
add
push
cmp
gs
xor
retf
sbb
jle
shl
mov
mov
in
jg
cmp
push
sbb
xchg
and
cwde
mov
movs
fistp
push
dec
test
adc
pop
adc
xchg
inc
enter
add
mov
stos
nop
and
ret
les
(bad)
dec
popa
bound
sbb
clc
lds
fisub
adc
daa
cmp
jmp
call
lods
fistp
xor
adc
xchg
and
jo
adc
adc
shl
adc
(bad)
mov
or
xchg
jle
(bad)
push
inc
inc
jp
add
jmp
sub
test
bound
ret
gs
cmp
popa
adc
sub
push
or
mov
mov
push
ds
fs
mov
or
inc
mov
add
stos
add
js
push
sub
push
pop
gs
popf
push
jmp
std
(bad)
dec
push
pop
add
mov
cld
aad
xchg
add
dec
in
je
add
test
add
add
jp
lahf
xor
call
xor
test
dec
dec
mov
sbb
jle
retf
lods
test
call
fsubrp
shr
mov
cmp
mov
mov
loopne
dec
sbb
adc
push
pop
push
fldz
push
retf
xchg
sahf
retf
or
loop
jb
call
pop
add
and
adc
add
popf
cmps
add
mov
sub
rcr
cmp
ja
adc
or
push
shl
in
sti
add
xchg
mov
iret
test
movs
and
jmp
cmp
xor
add
and
add
and
xchg
mov
push
pop
cs
dec
mov
fild
jl
movs
iret
push
pop
call
lahf
repz
daa
pop
in
rcr
inc
mov
cmps
xor
adc
cmp
ret
bound
pop
lea
mov
add
sub
call
mov
cmp
(bad)
cmp
adc
int3
xor
cmp
or
xor
adc
xor
pop
movzx
push
push
xor
call
loop
and
mov
pop
es
mov
push
push
outs
or
(bad)
xlat
dec
(bad)
and
idiv
test
inc
and
cmp
push
adc
jae
push
push
fcmovbe
xchg
out
lods
std
xchg
add
and
mov
fiadd
jl
jns
dec
fiadd
addr16
(bad)
(bad)
jns
pop
xchg
in
fld
jp
int3
dec
and
or
dec
pop
dec
aas
sbb
cmp
fwait
inc
sti
sar
nop
js
aas
fs
arpl
ss
shl
push
push
call
cwde
add
lock
cmps
dec
or
outs
push
sub
sub
les
mov
cmp
xor
loop
or
dec
jo
add
cmp
fisttp
nop
and
push
xchg
in
and
and
and
mov
mov
and
fwait
push
fdivr
and
fadd
sub
add
and
fs
sbb
or
fwait
pop
pop
(bad)
pusha
and
pusha
push
aas
push
and
and
add
and
and
xchg
and
or
int3
adc
pop
mov
fadd
sub
add
mov
pop
sbb
leave
clc
pop
mov
lsl
imul
add
shr
mov
push
add
addr16
sub
mov
push
jae
mov
fcmovnb
mov
pusha
dec
cmp
sub
or
aad
mov
daa
dec
mov
cli
(bad)
or
cmps
or
mov
icebp
aad
xchg
iret
add
adc
adc
(bad)
imul
test
mov
aas
add
jne
sar
adc
mov
or
sqrtps
or
or
add
inc
dec
dec
sub
mov
out
add
mov
push
dec
dec
aas
push
rcr
add
cmp
cdq
rol
pop
jne
call
in
mov
rcr
dec
jl
dec
cld
cmp
mov
scas
in
test
dec
jne
leave
dec
movs
sub
pop
xor
popa
sub
inc
test
sbb
dec
popf
add
enter
inc
add
into
out
mov
daa
pop
lea
movs
(bad)
cmp
or
and
je
aam
jg
(bad)
into
popa
sbb
push
mov
jle
sub
adc
or
sbb
mov
adc
add
adc
adc
adc
xor
ret
test
adc
mov
scas
sar
movs
sbb
sub
jmp
inc
mov
sub
cmp
ficom
push
or
aaa
xchg
jecxz
and
inc
mov
add
stos
mov
repnz
push
pop
imul
push
jns
mov
aam
mov
xor
mov
mov
test
cli
inc
pop
add
push
test
sub
and
sbb
not
stos
push
je
mov
and
jo
scas
sbb
out
mov
xor
(bad)
lds
loope
xor
inc
call
inc
call
xchg
xchg
loope
push
ins
and
mov
add
or
mov
xchg
inc
adc
mov
das
fwait
cmps
std
inc
adc
push
sub
arpl
and
mov
mov
call
push
cmp
jl
cmps
jno
mov
aad
sti
js
in
xor
xchg
popa
mov
xor
adc
jle
cmp
bound
mov
pop
std
add
out
iret
test
jl
(bad)
repz
pop
mov
xchg
bound
std
adc
not
push
adc
jne
inc
stos
call
sbb
jl
mov
ins
push
mov
sub
cs
or
adc
inc
ins
xchg
ja
das
sbb
and
pop
push
add
ins
je
or
or
jo
leave
xchg
inc
xchg
fadd
sub
jo
inc
adc
cmp
or
ins
mov
ins
mov
cmp
push
mov
mov
pop
jnp
jno
test
mov
ins
dec
popa
cmp
rcl
fistp
pop
scas
cmp
jecxz
data16
push
push
jo
inc
jp
test
sbb
add
mov
bound
cmp
jl
inc
push
ins
sub
fidiv
ins
pop
repnz
xor
sahf
sub
add
cmp
mov
or
enter
mov
repnz
mov
test
retf
sar
ins
ss
mov
push
cmp
add
or
mov
mov
lock
add
add
data16
inc
(bad)
mov
in
push
scas
pop
inc
outs
inc
call
add
pop
add
add
outs
dec
ror
inc
ins
pop
mov
inc
add
or
xchg
sbb
je
test
dec
dec
push
add
movs
push
jb
sub
mov
jle
add
cmp
mov
push
fadd
add
jo
sub
retf
sahf
jne
push
xor
je
sub
xor
mov
mov
mov
cmp
adc
pop
mov
dec
mov
adc
imul
retf
loopne
popf
xor
test
fisubr
out
pop
pop
test
icebp
cdq
enter
adc
xchg
stc
pop
mov
xor
jl
fnstsw
int3
je
add
pop
sbb
jg
cs
jne
test
xor
dec
mov
push
loope
inc
cmp
sbb
jns
push
lock
mov
cmp
inc
ja
call
inc
aas
inc
mov
pusha
sbb
sub
cmp
jne
dec
mov
push
ins
mov
dec
push
cmp
sub
je
fist
aaa
in
pop
adc
jne
mov
add
pusha
jmp
cmp
aaa
or
pop
mov
ds
test
test
mov
std
mov
inc
cmp
push
add
aas
add
outs
mov
or
sub
jge
push
ror
add
inc
adc
add
ins
fsubr
call
fadd
or
cmc
fsubr
and
mov
sbb
inc
pop
ss
add
jb
int
sbb
outs
test
push
add
je
jle
add
pop
and
test
mov
xchg
outs
sub
adc
call
or
push
out
js
js
push
push
jne
mov
(bad)
div
leave
jne
or
push
jb
pop
cli
aas
imul
cmp
or
xchg
test
xchg
adc
add
xchg
cmp
dec
jecxz
cmp
inc
fstp
je
dec
jno
mov
repz
fnstsw
add
dec
cmp
mov
xchg
std
push
and
mov
mov
xchg
xchg
mov
retf
sbb
or
pushf
call
xlat
into
cmps
daa
es
add
in
and
pop
mov
or
hlt
add
jmp
push
mov
push
jb
je
inc
push
jle
jo
sbb
add
inc
push
data16
clc
into
and
or
inc
or
das
jae
dec
mov
lea
push
jmp
xchg
add
int3
rol
xchg
push
sub
cwde
fcomp
mov
add
int
mov
sbb
(bad)
jae
xor
mov
push
push
in
push
sti
jb
dec
jl
or
(bad)
pop
in
push
aaa
cli
outs
mov
mov
stc
ret
je
xor
mov
div
jle
adc
or
sub
sbb
add
pop
mov
jle
es
sbb
or
(bad)
mov
cmp
je
in
cs
adc
inc
data16
pop
retf
pop
pushf
xchg
in
jmp
mov
movs
test
mov
loope
xchg
push
hlt
fs
ret
or
xor
js
or
dec
mov
mov
stos
sbb
sub
(bad)
les
mov
adc
mov
imul
inc
and
sub
add
inc
xor
mov
scas
gs
dec
cmp
sub
push
sbb
fs
mov
push
jo
add
sbb
in
adc
mov
add
and
add
pusha
push
push
mov
push
mov
rcr
mov
ins
enter
sub
out
add
xor
daa
dec
rol
adc
mov
xchg
popa
sub
ins
mov
xor
sbb
and
call
repnz
cwde
push
xor
mov
ja
pop
dec
adc
imul
push
dec
bound
or
mov
lods
icebp
sub
mov
or
out
and
cmp
inc
pop
add
adc
fiadd
push
push
punpckldq
unpcklps
lods
mov
xchg
cmps
adc
es
mov
not
jle
add
pop
cmovle
and
lock
push
test
fiadd
xchg
frstpm(287
repnz
add
pusha
mov
inc
pushf
jg
enter
mov
jbe
or
sbb
sbb
and
sub
aam
jmp
pop
mov
out
push
sti
jae
mov
idiv
inc
lea
shr
les
cwde
sbb
dec
sbb
sahf
mov
cmc
ds
or
dec
movs
mov
sbb
cwde
pop
loop
mov
mov
(bad)
sbb
and
(bad)
mov
(bad)
jge
or
data16
push
shr
les
int3
and
js
pop
call
sbb
shr
sar
jnp
call
gs
ins
cmp
js
mov
inc
ret
xor
xor
jne
and
pushf
push
dec
add
jns
push
sbb
mov
or
popf
mov
sahf
and
cmp
into
or
nop
cmp
loopne
xlat
add
xchg
dec
dec
and
mov
mov
adc
push
xchg
xor
les
and
in
or
jnp
cmp
pop
fs
adc
mov
and
mov
prefetcht2
stos
mov
pop
call
mov
push
add
xchg
lock
mov
add
das
js
and
add
lods
xchg
shl
mov
loopne
(bad)
mov
cmp
outs
out
pusha
je
xor
jmp
or
mov
popf
xchg
and
in
pop
hlt
add
add
pop
cmp
mov
lock
js
adc
jg
jne
jl
jns
cmp
jp
cdq
(bad)
ins
lods
jecxz
inc
ficom
ss
js
movs
push
add
cdq
mov
push
clts
call
or
add
je
call
jo
ret
daa
and
aas
rcl
call
cmp
sub
lahf
stc
push
pop
jl
mov
xchg
add
or
jmp
sbb
pop
pushf
inc
inc
pop
ror
dec
push
sub
cdq
xchg
loop
ins
or
and
ret
cmp
aas
and
hlt
mov
add
sti
mov
and
sbb
loope
mov
push
xchg
pop
xor
aad
and
fbld
(bad)
pop
mov
inc
cs
jl
lea
dec
pusha
jle
mov
cmp
pop
call
in
cmp
aas
sub
dec
fs
dec
inc
dec
outs
dec
je
xor
add
test
adc
adc
add
sbb
into
mov
ret
shr
cmps
or
outs
jo
call
cdq
dec
cs
cs
mov
xchg
movs
and
mov
icebp
push
jb
imul
pop
pop
stos
or
or
mov
pop
sar
ins
mov
and
xchg
cmp
sbb
ror
fbld
retf
in
mov
loopne
add
enter
xchg
sbb
xor
sbb
sbb
xlat
sbb
adc
xchg
outs
dec
ret
fld
outs
das
jne
add
mov
xchg
imul
in
mov
jnp
jle
das
xchg
out
add
fwait
xchg
pop
xchg
scas
cmp
cmp
cmp
inc
dec
rcl
and
xchg
push
xor
add
js
jmp
leave
and
sar
call
pushf
adc
inc
lea
dec
xlat
push
fidivr
ja
scas
mov
call
pusha
movs
adc
xchg
adc
mov
test
ins
inc
mov
mov
inc
lds
dec
push
mov
pop
(bad)
ret
pop
les
and
push
test
mov
pop
push
jns
mov
dec
cmp
or
rcl
clc
ror
cmp
ds
pop
push
call
adc
xor
scas
mov
jl
fld
nop
std
(bad)
jg
push
dec
or
mov
inc
or
inc
push
mov
(bad)
call
outs
imul
pop
xor
push
dec
mov
fs
mov
mov
aas
add
ss
sbb
test
adc
js
xchg
dec
je
or
test
mov
sbb
push
bound
(bad)
xor
dec
jnp
js
sub
imul
dec
movs
add
pushf
mov
xchg
imul
inc
daa
jns
popa
sbb
call
pop
test
or
xchg
pop
xchg
(bad)
pop
fld
adc
bound
popa
mov
push
ficomp
xchg
jle
or
test
xor
sbb
dec
pop
enter
call
cmps
mov
pop
fidivr
jge
add
add
inc
cmps
pop
and
jo
call
(bad)
imul
pop
or
call
test
icebp
movs
loopne
push
jle
inc
pop
cmp
jnp
imul
mov
iret
enter
push
cmp
bound
sbb
call
and
jmp
push
mov
push
jecxz
repnz
sti
sub
jecxz
adc
push
(bad)
aam
mov
and
adc
cmp
mov
loopne
lock
popa
xor
ror
pop
jne
pop
fnstsw
adc
mov
loopne
jge
pop
adc
cs
cli
inc
sar
mov
jae
sti
pop
rol
je
sub
je
or
add
dec
dec
push
ins
loop
ds
js
push
cmp
sub
inc
push
jmp
add
ret
jmp
ja
das
mov
leave
jae
mov
add
jle
xor
sbb
xlat
bound
inc
iret
pop
sysexit
sub
rol
cwde
in
fs
sahf
add
mov
and
jmp
mov
and
jg
sbb
push
dec
xor
ds
adc
ret
inc
add
add
lock
gs
push
loop
add
jl
cmp
aaa
stos
push
ins
ins
mov
or
jmp
cmp
add
mov
enter
mov
mov
pusha
js
cdq
out
add
sbb
daa
clc
jne
push
jnp
mov
add
ret
mov
xor
(bad)
rol
sub
movs
jmp
enter
fstp
nop
fisubr
sub
pop
dec
repnz
test
push
sbb
mov
adc
jbe
inc
dec
xor
inc
int
fs
sti
push
inc
enter
jp
or
fld
ss
xchg
push
call
xor
pop
mov
mov
xor
pop
inc
cmp
sub
and
fidiv
mov
sub
xchg
fdiv
xchg
jo
call
add
clc
or
jne
inc
arpl
mov
popf
(bad)
ins
ja
je
dec
pop
jb
ret
or
jle
movs
test
lods
lods
inc
cld
push
cmp
jle
jle
ja
xor
loopne
fs
inc
call
scas
sbb
and
jne
loop
dec
sbb
outs
xchg
mov
push
out
jmp
ret
ret
sbb
jns
hlt
sub
(bad)
jae
sbb
je
fdivr
or
fsubr
fcomp
push
adc
push
mov
dec
or
sub
adc
fdivr
or
lds
mov
lods
cdq
jle
fs
jne
add
repz
or
rol
add
mov
pop
cmp
dec
pushf
cmp
push
dec
mov
cs
test
mov
jbe
out
mov
lock
lds
mov
mov
fdiv
mul
add
mov
jbe
jb
xlat
inc
inc
mov
nop
pop
cwde
shl
xor
push
ret
not
ds
and
or
inc
js
in
cmp
data16
sub
cmp
add
je
jmp
push
fild
inc
sub
mov
add
mov
push
movs
lods
aad
jp
lea
test
pop
cmps
enter
out
push
movs
adc
and
jmp
dec
sub
sub
(bad)
xor
jno
hlt
outs
nop
cli
or
(bad)
iret
je
add
cmps
test
cmp
mov
loope
das
pop
inc
and
cmp
dec
sbb
fsubr
(bad)
fwait
rcl
push
mov
in
push
test
pop
mov
mov
or
adc
xchg
dec
dec
push
sbb
sbb
sub
pop
and
xor
or
xchg
add
push
pop
inc
and
test
mov
pushf
mov
mov
call
sbb
cmp
xor
dec
mov
aas
stos
jno
rol
ror
jge
sbb
add
call
add
inc
sbb
nop
and
or
jne
add
fmul
shl
mov
rol
mov
dec
stc
add
mov
imul
repz
into
push
and
jae
mov
(bad)
xor
lea
fwait
adc
push
test
cld
cmp
xchg
arpl
jmp
cmp
push
sbb
adc
bound
add
(bad)
mov
dec
(bad)
push
adc
jl
or
jmp
or
fcom
pop
xor
pop
data16
fidivr
push
aaa
movs
add
fldenv
and
sbb
jmp
das
sbb
push
ja
jns
mov
jmp
jge
and
not
push
pop
leave
xchg
iret
cmp
pop
call
jno
xor
mov
rcr
das
jecxz
dec
shr
mov
pop
dec
mov
sbb
cmp
call
pop
add
adc
xchg
lea
sub
push
jmp
in
jmp
push
dec
pop
cwde
fsub
xchg
repnz
dec
fdivr
and
xchg
out
push
in
mov
xor
lock
xchg
or
cmp
sbb
add
ds
mov
add
dec
jecxz
call
adc
lds
mov
add
das
dec
mov
sahf
push
or
sub
cmps
pop
mov
pop
or
sbb
push
je
nop
mov
jle
(bad)
jmp
push
sub
or
sbb
enter
adc
dec
adc
add
test
adc
aam
push
mov
sbb
sbb
fmul
inc
cmps
add
mov
shl
push
sbb
push
repnz
xor
ins
aas
rol
jmp
popa
push
pop
or
seta
clc
sub
push
pop
dec
add
pop
sbb
xor
mov
jge
jg
inc
das
je
stos
pop
push
push
fwait
(bad)
imul
jmp
cdq
sub
jl
jle
cmp
xchg
push
ret
xor
stc
ja
cmp
add
cwde
out
add
fisttp
dec
sub
call
mov
mov
xchg
stc
pop
push
mov
imul
sub
mov
mov
cs
push
jns
add
mov
movs
and
adc
loope
pop
out
nop
iret
cmps
shr
test
fwait
mov
adc
jne
call
xchg
outs
test
movs
jb
add
movs
adc
pop
or
cmp
int3
sbb
add
clc
test
add
cmc
jmp
sub
jl
call
movs
shr
mov
adc
dec
add
mov
dec
test
xor
mov
pop
stc
arpl
pop
ret
in
ins
loopne
push
inc
movs
ror
mov
add
inc
xchg
out
repnz
sbb
sahf
fcomip
cmps
mov
add
cmp
fdiv
(bad)
sub
mov
inc
push
fs
sub
mov
sbb
push
je
daa
mov
xchg
add
add
add
stos
js
retf
sti
outs
add
or
sbb
test
push
cmp
jg
sbb
pop
test
push
imul
shl
(bad)
aas
ret
imul
out
cmp
mov
jne
fucomp
push
clc
movs
sub
and
mov
mov
and
stc
movs
lahf
sub
js
das
jmp
aas
(bad)
xchg
cmps
pop
loopne
xor
je
ret
pop
xor
cmp
jp
mov
pop
(bad)
xor
and
call
cmc
cmp
mov
add
inc
popa
ss
mov
fs
adc
and
jne
mov
or
inc
sub
fistp
push
sub
mov
sub
jo
rcl
jge
(bad)
pop
pop
pop
or
outs
es
mov
and
and
mov
and
movs
cmp
inc
add
cs
pop
cmp
or
or
mov
test
push
mov
cs
mov
or
or
sbb
dec
add
or
ins
or
enter
xor
aam
mov
sub
sub
mov
mov
sahf
int
bound
inc
lea
ja
jle
add
adc
outs
dec
outs
sub
mov
jl
js
add
fcomp
push
add
pop
push
jbe
out
or
and
cwde
aad
mov
dec
pop
cmp
imul
add
imul
jle
add
adc
dec
mov
addr16
(bad)
jp
inc
retf
(bad)
jnp
cmp
xchg
sub
push
ins
add
int
je
inc
xchg
sub
jmp
lea
and
jb
cmps
in
inc
dec
cmp
dec
nop
pusha
mov
cmps
cmps
popa
adc
xor
push
and
xchg
mov
lahf
add
in
push
aas
mov
js
pop
sar
jmp
loope
xchg
imul
sbb
ja
mov
mov
xor
sub
sbb
xor
add
repz
cmp
adc
aad
mov
add
push
mov
or
mov
xor
jmp
pop
in
dec
adc
imul
pop
daa
sbb
pop
call
adc
fadd
mov
jge
cwde
in
aas
push
scas
sub
add
push
xchg
int3
sub
stc
test
and
int
or
mov
mov
sbb
push
call
dec
lock
scas
mov
add
sub
popa
mov
mov
popa
mov
push
jecxz
sahf
or
push
push
(bad)
int3
out
ror
fld
xlat
scas
dec
test
sbb
(bad)
imul
xchg
test
lods
push
arpl
nop
ins
or
inc
mov
cmp
leave
push
add
dec
imul
and
sub
add
fdivr
test
sbb
sub
pop
lahf
int3
jb
add
add
fs
push
jl
jmp
and
cwde
aas
leave
dec
shr
lea
mov
jecxz
adc
xor
adc
cld
dec
mov
fidiv
cdq
sahf
xor
dec
loop
lahf
push
pop
xor
pusha
jg
neg
call
cmp
in
movs
(bad)
test
js
push
shl
inc
dec
mov
enter
push
inc
push
aas
push
mov
dec
loop
rcr
add
dec
fld
pop
add
pop
ja
cmp
popf
xor
ss
(bad)
fldcw
push
push
xlat
je
mov
ja
sub
jle
add
pop
adc
ret
push
ins
loopne
mov
in
pop
cbw
add
dec
and
test
aam
mov
out
push
or
gs
mov
or
loop
pop
jge
add
xor
ret
jmp
hlt
or
push
lahf
idiv
sub
mov
and
cmc
mov
ins
fmul
test
(bad)
cmps
fsub
mov
add
mov
test
sbb
adc
mov
or
add
inc
call
push
bound
sub
push
mov
jb
inc
movs
rol
mov
scas
xchg
repnz
pop
jo
pop
adc
ins
fs
adc
or
xchg
shl
inc
add
mov
xor
loope
sbb
cmp
and
adc
or
int3
inc
test
xchg
sub
adc
mov
dec
call
inc
add
js
scas
mov
push
pop
loopne
lods
add
xchg
or
ftst
jo
mov
ja
and
xor
add
outs
sbb
punpckhbw
push
or
adc
add
cmps
test
clc
adc
xchg
add
imul
mov
or
xchg
into
test
pop
ror
clc
adc
daa
adc
cmp
cmp
adc
fs
inc
pop
inc
xchg
sbb
enter
ja
arpl
aad
add
daa
mov
push
xchg
jg
addr16
mov
mov
(bad)
dec
(bad)
push
ss
mov
sub
mov
add
or
or
push
or
and
int3
or
ss
ret
and
jge
jae
mov
jp
test
pop
jb
sahf
add
xchg
ret
dec
push
ret
xor
lea
mov
push
das
add
jne
ret
push
add
mov
bound
sub
and
jle
xchg
add
pop
arpl
and
sub
sbb
cwde
arpl
popf
adc
sub
neg
mov
and
push
sub
ins
movs
mov
lock
jns
mov
sahf
loopne
mov
xchg
adc
pushf
and
mov
fcomp
push
outs
mov
and
loop
or
mov
jo
movs
and
and
mov
inc
sbb
add
mov
call
or
jne
(bad)
cli
jnp
aaa
sub
sub
pop
mov
call
add
add
inc
adc
call
aaa
arpl
imul
adc
mov
inc
fidivr
pop
sahf
sbb
retf
out
(bad)
cmp
jbe
jo
add
add
dec
cmp
jae
cmp
out
push
mov
dec
mov
out
sub
int
jl
aad
mov
mov
push
push
inc
call
add
test
mov
dec
stos
mov
push
lea
fwait
pop
or
push
dec
push
(bad)
leave
xor
ins
sub
movs
imul
test
int
xor
inc
push
ret
jno
popf
sub
std
xor
fild
add
les
add
or
mov
inc
push
stc
sbb
dec
and
popf
rcr
add
cs
mov
sub
xchg
inc
arpl
dec
lock
dec
cmp
xchg
scas
scas
nop
loope
add
adc
scas
and
push
adc
fwait
and
in
mov
dec
xchg
test
sbb
jge
xchg
adc
xchg
cmp
adc
ror
shl
mov
cmp
dec
fs
cmp
dec
push
adc
add
add
adc
sub
xchg
xor
sub
outs
or
push
sbb
add
loope
xor
jmp
fiadd
xchg
ja
sti
(bad)
jmp
dec
push
call
repnz
bound
mov
inc
or
fbld
inc
lock
inc
loope
jmp
cli
push
imul
cdq
or
xor
or
push
jb
mov
jb
jne
or
into
add
(bad)
retf
into
add
or
mov
dec
iret
popa
rcl
mov
pop
push
mov
lahf
int
or
arpl
arpl
arpl
dec
or
sub
mov
mov
scas
or
dec
mov
sub
out
je
cmp
add
or
mov
ret
aas
mov
inc
(bad)
mov
mov
int
push
adc
sbb
push
and
fnstenv
ret
mov
or
jg
inc
dec
jle
or
mov
ret
repnz
add
inc
xchg
cdq
cmp
add
addr16
pop
repnz
add
cmp
mov
inc
imul
out
popa
sbb
sub
push
cmp
mov
mov
inc
pushf
out
mov
mov
rcl
stos
ja
lods
mov
das
xor
enter
jno
mov
loopne
repnz
mov
xchg
out
add
xchg
jbe
adc
adc
add
or
es
cmp
(bad)
fild
mov
out
mov
aas
push
xchg
out
pop
or
je
sub
popf
cmp
dec
lods
pop
je
enter
(bad)
sbb
and
out
push
pop
not
fistp
lea
adc
lahf
pop
inc
ror
sub
add
(bad)
ret
and
call
xchg
cmps
lock
sbb
push
mov
and
add
mov
pop
stos
mov
mov
mov
nop
cmp
mov
add
pop
dec
out
in
jnp
sbb
mov
jp
sbb
test
lea
adc
aas
dec
add
mov
pushf
xchg
retf
mul
or
jmp
push
ins
loopne
jg
dec
call
gs
pop
sub
inc
adc
pop
jp
shr
xor
movs
sub
stc
jmp
fstp
jmp
push
scas
inc
pusha
pop
in
adc
pop
cmp
sub
xchg
cmp
out
adc
fwait
aam
jg
add
inc
or
inc
inc
movs
push
clc
jp
mov
es
dec
fnstsw
ins
pop
add
sub
mov
mov
mov
sbb
dec
pop
and
imul
pop
cmp
inc
xor
shl
inc
jo
fs
inc
dec
shr
je
lea
jl
nop
or
mov
pushf
and
cs
jno
mov
xor
inc
fmul
enter
mov
shl
dec
add
loop
sbb
test
ror
cmp
nop
fimul
cmp
or
dec
or
mov
mov
add
pop
xchg
nop
and
cs
je
pop
sbb
imul
sub
test
sub
xchg
jmp
mov
xor
loopne
jecxz
inc
inc
mov
sbb
pop
pusha
xor
sahf
and
xchg
enter
test
jb
jns
mov
in
sbb
mov
and
shl
dec
mov
add
movs
xchg
cmp
mov
push
inc
cli
out
enter
jbe
pop
stc
pop
outs
add
push
nop
inc
cs
mov
mov
pop
dec
mov
mov
test
or
pop
jl
fs
pushf
pushf
xor
aaa
in
ins
movs
sbb
inc
and
cmp
jbe
int3
aaa
cmp
sbb
stos
dec
sbb
movs
sbb
adc
adc
sub
arpl
and
push
mov
sbb
pop
inc
sub
fimul
rol
add
in
push
inc
dec
pop
adc
or
cs
sub
jmp
adc
test
mov
inc
movs
out
je
inc
or
ret
push
pop
xchg
jb
in
inc
aas
xor
test
xor
pop
ja
retf
add
mov
das
or
or
retf
lea
lea
(bad)
(bad)
add
cdq
es
jo
test
pop
loopne
add
sbb
add
push
dec
xchg
ss
cmps
out
ror
ss
mov
mov
pop
cli
or
ins
xchg
xchg
cmp
rol
enter
jne
push
add
pop
sub
iret
in
sar
cmp
lahf
sahf
jmp
(bad)
pop
inc
add
aaa
icebp
cli
jl
cmp
mov
xchg
pop
or
inc
adc
dec
in
or
cld
push
xchg
test
daa
sub
sbb
ins
mov
inc
xchg
sub
jbe
add
js
inc
in
mov
adc
mov
push
jne
outs
pop
jbe
mov
les
jb
xor
call
push
ins
loope
lods
jns
inc
movlps
adc
cld
push
and
add
fidivr
cmp
call
ret
push
rol
jecxz
or
jmp
jne
stos
xchg
sahf
push
sub
stc
and
mov
ret
and
xor
push
int
in
push
adc
(bad)
popf
xchg
icebp
popa
icebp
adc
jbe
(bad)
mov
js
cli
jb
lods
xchg
jmp
aad
xor
mov
mov
jo
jle
mov
xchg
int3
pop
or
push
jo
push
jle
jge
mov
call
shr
repnz
movs
sub
sub
pop
ins
ss
cmc
add
clc
out
add
je
popf
ficom
jae
cmps
adc
push
scas
retf
add
ja
mov
mov
lods
push
imul
test
adc
loope
bound
movs
movs
dec
call
jge
das
cld
lea
xor
add
daa
mov
pusha
pushf
dec
mov
xchg
inc
dec
inc
and
lock
jmp
add
mov
mov
call
out
mov
mov
mov
call
scas
dec
pop
ds
popf
sub
arpl
call
sbb
xor
mov
cld
add
dec
push
imul
lahf
rol
add
cmps
ins
je
leave
js
cmp
mov
and
pop
rcr
je
ss
mov
add
push
and
pusha
jmp
cs
cmc
cli
jle
int
pop
pusha
cmp
sbb
inc
mov
pop
loope
inc
test
cli
add
mov
pusha
cmp
cmp
mov
dec
xchg
jge
dec
pop
rcl
dec
in
popa
popf
in
jl
call
call
add
inc
sbb
adc
or
xor
addr16
imul
sub
jae
pop
add
or
ror
(bad)
call
mov
cmp
icebp
imul
inc
pusha
aad
push
cmp
cmp
pop
push
mov
pop
push
out
xchg
movs
mov
push
shr
inc
jnp
or
in
jbe
out
lds
adc
cmp
add
mov
fs
pop
adc
mov
or
dec
sub
xchg
fisttp
and
pop
add
jmp
cwde
push
sbb
sub
mov
ret
clc
xchg
adc
xor
or
jo
mov
pusha
imul
lock
and
and
pop
inc
xchg
or
stc
and
jp
mov
push
ret
(bad)
xor
ds
sub
outs
fisubr
pushaw
shr
jmp
cmp
adc
test
dec
add
jo
mov
test
shl
sub
sti
aaa
push
or
or
rcl
ss
xor
sbb
fistp
enter
xchg
leave
loop
fwait
dec
movs
(bad)
cmp
inc
push
call
aaa
pop
pop
mov
bound
or
sahf
and
push
imul
pop
call
mov
pusha
aas
mov
scas
add
xor
jmp
sub
xchg
dec
cmp
jmp
ja
xor
js
xor
dec
jae
mov
sub
mov
mov
ja
ffree
and
cmp
cmp
fistp
aad
ret
or
fs
test
mov
push
neg
jbe
add
sbb
xor
mov
jg
int3
mov
out
inc
xor
cdq
loopne
fcmovnb
jno
add
je
jbe
jo
and
pop
pop
fwait
inc
(bad)
fwait
xor
cmp
add
push
(bad)
push
stos
pop
push
xor
push
inc
pop
adc
sbb
add
mov
jbe
movs
mov
add
jbe
inc
rol
sub
or
jno
call
jl
adc
jns
in
dec
xchg
push
and
sbb
iret
xchg
div
and
call
sbb
call
adc
add
mov
pop
aas
(bad)
sub
mov
inc
jg
sbb
add
or
call
adc
les
(bad)
cmp
call
pop
pop
sbb
add
xor
jge
push
sbb
lock
rcr
mov
cmp
mov
push
sbb
dec
test
mov
mov
pop
ror
sti
dec
je
cmp
dec
xor
xor
pop
enter
enter
or
mov
cs
xchg
adc
ror
mov
jo
iret
in
bound
mov
out
pop
pop
loopne
dec
cwde
sbb
xor
jge
cmp
js
int3
lock
mov
jge
cmps
es
enter
es
sub
xchg
sub
sbb
pop
or
xchg
xor
dec
sbb
lods
ret
push
jno
jo
mov
ja
xor
and
jnp
ins
mov
xor
out
stos
sub
(bad)
xor
jmp
mov
or
daa
mov
or
sbb
fwait
pop
sub
shl
and
cdq
push
call
pop
ret
sub
cmp
push
inc
inc
cmp
sahf
cwde
mov
(bad)
in
push
dec
adc
pop
repnz
cmp
jge
pop
and
add
jp
mov
xchg
xchg
out
loopne
and
bnd
sahf
outs
or
mov
sub
loop
and
dec
lock
pushf
mov
pop
push
ins
cdq
cmp
mov
cwde
call
in
adc
and
nop
jp
dec
push
adc
jbe
mov
or
xchg
pop
mov
or
into
mov
sbb
pop
dec
or
jb
sar
ds
dec
sbb
jp
or
push
mov
or
add
sub
and
push
push
test
daa
mul
xor
call
and
rol
mov
push
stc
jle
push
jge
or
dec
push
xchg
sbb
ret
push
and
out
sub
call
shl
xor
pop
test
mov
dec
stos
fstp
jnp
add
es
mov
inc
inc
loopne
cmp
pushf
xor
inc
mov
cmps
jno
push
mov
sub
and
push
pop
adc
mov
es
push
sub
pop
repz
fwait
pop
dec
sbb
dec
push
push
mov
push
repnz
scas
pop
push
mov
sbb
push
xor
dec
push
and
leave
test
adc
lea
(bad)
outs
std
jmp
dec
inc
bound
or
out
lahf
cmp
mov
syscall
mov
and
mov
dec
xor
jmp
outs
(bad)
adc
pop
and
pusha
push
pusha
mov
sub
fisttp
push
push
pop
fbstp
ret
fist
jne
inc
add
xor
inc
bswap
rcr
mov
push
addr16
pop
out
or
xor
sbb
jmp
cmp
push
or
or
jae
cdq
mov
iret
and
daa
or
loopne
add
and
scas
and
das
mov
xchg
lds
pop
test
and
or
xchg
and
cmp
ret
mov
sbb
sub
mov
inc
add
repnz
call
jl
popf
inc
ds
cmp
xchg
adc
sbb
mov
pop
jmp
inc
scas
or
sbb
call
pusha
and
fidivr
cdq
movs
add
sbb
pop
add
push
retf
mov
call
push
imul
adc
loop
xchg
ret
ins
jge
loop
ret
inc
ins
add
sbb
mov
pop
jo
jne
leave
test
aas
push
jg
popa
or
fsubr
shl
inc
add
jmp
push
push
jb
mov
adc
rcr
pop
push
add
gs
dec
and
jne
inc
inc
cmp
push
sub
and
xor
xchg
int3
das
mov
push
push
fld
and
or
ret
adc
adc
inc
push
dec
cmp
sbb
xor
dec
inc
pop
inc
push
je
bound
xor
in
sbb
inc
scas
and
pop
cmp
push
jp
push
outs
jecxz
xor
repz
bound
lock
xchg
lea
pop
scas
add
sub
pop
push
(bad)
pop
cli
rcr
xchg
pop
shl
test
or
mov
mov
loopne
mov
xor
sub
cwde
add
pushf
test
ror
lods
push
jne
daa
add
rcl
mov
mov
push
push
or
sub
or
jge
lea
je
xchg
add
mov
sbb
sub
cmp
div
sub
fistp
nop
data16
and
call
or
dec
mov
(bad)
jmp
sbb
adc
lea
call
sbb
dec
add
aaa
inc
test
add
mov
sahf
mov
add
xchg
es
fs
inc
xor
add
dec
xor
push
lahf
dec
jo
ficomp
mov
dec
scas
mov
push
add
push
jo
clc
test
and
push
bound
mov
cs
test
cmp
mov
xor
and
sbb
test
push
dec
push
dec
in
aad
(bad)
(bad)
ficom
dec
rcl
sbb
jns
mov
data16
xor
scas
repnz
and
retf
sbb
arpl
sub
lods
add
pop
nop
out
push
icebp
adc
lahf
cmc
lea
dec
and
jb
lods
add
dec
jns
sub
mov
pop
les
or
loop
in
jne
fiadd
lahf
pop
jmp
inc
out
push
fwait
sub
jb
cmc
or
push
jbe
add
in
and
jecxz
xchg
or
inc
neg
cmc
lea
call
(bad)
out
add
lods
mov
jl
mov
xchg
sahf
or
fist
add
inc
xor
popa
inc
sbb
shl
push
cmps
or
or
shl
push
push
bound
hlt
stos
add
mov
sbb
add
pop
mov
dec
or
mov
in
or
repnz
(bad)
imul
push
sub
xchg
invd
call
(bad)
cmp
sub
ror
call
pop
loopne
jbe
and
jmp
aaa
(bad)
or
push
xchg
jne
jnp
cmps
push
ja
adc
ja
js
fisttp
ss
adc
inc
ins
mov
push
fst
outs
adc
jbe
fs
shl
lods
gs
dec
mov
ss
scas
or
cmps
fidiv
aaa
or
xchg
scas
adc
and
dec
cs
cmp
push
sbb
lods
adc
pop
cmp
es
inc
shl
rol
retf
push
mov
imul
das
pusha
push
pop
sub
mov
xor
add
mov
sub
test
hlt
and
enter
loopne
(bad)
cld
lea
push
lock
ret
push
outs
cmp
or
sbb
push
xor
std
add
mov
sub
dec
(bad)
mov
int
daa
dec
inc
retf
xor
mov
xchg
(bad)
les
inc
popa
mov
inc
adc
or
push
rol
cmp
fisubr
push
sub
inc
xchg
scas
push
popf
xor
inc
lea
pusha
or
bound
(bad)
fimul
push
push
push
add
sbb
or
push
inc
inc
inc
jo
or
inc
adc
fist
push
les
pop
inc
jp
sbb
in
rcl
loope
cmp
dec
cmps
sbb
and
mov
fstp
ficom
inc
and
sub
dec
mov
xchg
dec
shl
pop
call
scas
add
pushf
jmp
retf
sub
outs
push
in
shr
or
mov
push
repnz
outs
add
mov
inc
push
lahf
sbb
es
(bad)
pop
xchg
aaa
cmp
rcl
and
inc
adc
jle
mov
cdq
lahf
push
fsub
add
adc
jl
inc
push
js
mov
enter
jmp
sbb
pop
push
and
or
adc
aas
jnp
in
cmps
inc
jbe
dec
leave
fs
cmp
push
and
leave
sti
inc
inc
in
or
pushf
ror
mov
cmp
dec
sar
aam
xor
inc
test
aam
les
sub
jne
push
repz
les
loop
fsubr
jbe
sub
mov
ds
jmp
mov
xor
inc
jne
stos
imul
cmp
inc
cmp
lea
cld
push
call
test
ret
sbb
stc
es
push
pop
xchg
push
rcr
xor
add
test
pop
popf
ins
mov
cmp
mov
addr16
sub
mov
in
xchg
mov
add
std
and
add
mov
pushf
js
jecxz
lea
jg
jmp
jbe
sub
adc
add
sbb
test
repnz
ins
sbb
lea
cmp
sbb
inc
test
inc
je
dec
pusha
xchg
int
and
pop
ins
push
sub
jg
pop
add
push
push
add
lahf
out
in
add
mov
popa
sbb
pop
dec
push
pop
pop
fld
xchg
xchg
mov
int
std
or
push
cmp
outs
cmps
add
xchg
adc
int3
adc
stos
adc
push
mov
fdivr
mov
and
jg
jb
add
cmp
dec
rol
loop
and
push
popa
push
scas
idiv
les
push
or
pop
adc
add
cmp
add
pop
mov
(bad)
pop
loopne
test
pop
or
and
mov
test
xchg
mov
movs
arpl
inc
and
inc
test
and
cmps
hlt
and
or
lods
adc
bnd
mov
addr16
shl
and
loopne
or
inc
sub
mov
leave
jno
sbb
dec
sub
fimul
mov
add
pop
lds
or
cmp
jg
iret
sub
add
and
mov
call
or
dec
jae
sbb
sub
ret
mov
ja
push
jle
inc
mov
pop
cdq
in
jbe
sahf
push
and
inc
in
xor
dec
in
push
and
sub
adc
xor
add
stos
adc
iret
je
dec
lea
mov
inc
out
dec
lods
fs
les
ret
retf
cmps
lods
push
xchg
data16
inc
arpl
adc
fisttp
sub
fsubr
jmp
loop
(bad)
pop
in
and
jns
add
jae
cmp
mov
and
loopne
into
cmp
mov
jns
inc
pop
dec
mov
mov
jo
call
loope
shr
or
jbe
xor
and
add
mov
push
dec
inc
or
mov
jne
out
sbb
scas
add
lea
into
pop
push
push
repz
push
call
sbb
xor
call
inc
iret
pop
pop
sahf
add
dec
cmp
mov
pusha
fdivr
mov
mov
inc
pop
inc
push
imul
add
rol
in
jb
or
and
or
cmps
pusha
mov
mov
and
push
retf
mov
ds
inc
(bad)
push
push
or
in
cmp
call
ficomp
dec
in
call
jl
push
rol
inc
pushf
out
mov
std
xchg
xor
push
je
clc
add
ins
mov
dec
adc
mov
cmp
xor
mov
loop
push
xchg
and
xchg
jbe
rol
mov
add
mov
cmp
lods
scas
push
mov
(bad)
popa
sub
add
sbb
pop
call
pusha
into
xchg
not
push
push
lods
push
movs
xor
mov
movs
rcl
or
push
std
jo
inc
and
fld
int
in
mov
stos
test
mov
repnz
push
and
stc
movs
retf
add
cmp
or
mov
adc
push
sub
add
push
jp
cmp
lds
ds
adc
lods
push
jmp
enter
popa
sbb
loop
or
and
jp
or
push
xchg
add
scas
loopne
push
cli
adc
out
mov
and
or
jnp
jl
adc
jge
push
inc
add
ja
arpl
fnstsw
rol
jl
ror
sub
ret
repz
outs
fcmovnu
popf
rcr
pop
jecxz
call
(bad)
mov
clc
inc
pop
jp
mov
ret
mov
out
test
aas
call
inc
or
push
and
ss
add
das
mov
dec
push
movs
jnp
pop
xor
inc
cmps
in
scas
fcomp
test
add
mov
outs
pop
xrelease
jecxz
push
mov
(bad)
add
pop
lea
test
(bad)
enter
dec
cmp
(bad)
int
or
(bad)
aas
cmps
imul
pop
gs
out
inc
sub
push
mov
cmps
call
(bad)
add
pop
add
loopne
jle
adc
mov
test
outs
or
dec
adc
xchg
sub
push
mov
sbb
mov
dec
test
and
in
sbb
mov
push
add
xor
xchg
mov
push
push
push
adc
popf
or
test
push
(bad)
jnp
je
ss
push
loope
or
ficom
aaa
stc
and
and
lahf
inc
push
push
test
pop
pop
push
lods
(bad)
sbb
fisubr
call
cs
retf
or
inc
fidivr
or
or
push
call
push
mov
in
enter
xor
cmps
pop
pop
push
jmp
adc
ret
in
scas
push
mov
cmp
pop
cmp
jb
push
and
repz
pop
test
push
and
fist
dec
pop
pop
pmulhw
cmp
pop
adc
(bad)
fild
call
push
leave
and
xchg
movs
(bad)
test
call
dec
pop
push
xor
dec
push
sbb
adc
div
push
cmp
ds
mov
in
push
out
pop
mov
or
push
in
xchg
sbb
pop
xor
jb
xchg
cdq
xor
(bad)
popf
test
mov
cmp
pop
sbb
sbb
inc
jbe
in
mov
adc
dec
mov
retf
inc
dec
and
movs
mov
dec
sti
add
repnz
leave
retf
retf
rol
fild
shl
inc
xor
fdivr
or
xchg
push
jnp
pop
popa
nop
sbb
sbb
xchg
addr16
sbb
out
dec
je
inc
add
pop
jns
cmp
ins
enter
daa
sub
call
psubb
or
rcr
loope
mov
adc
xor
push
push
call
adc
dec
mov
mov
retf
push
xor
or
mov
xor
fs
xchg
mov
pusha
add
adc
test
lahf
retf
fistp
add
fadd
add
fnstcw
jl
loop
add
push
inc
jmp
daa
push
adc
push
mov
(bad)
cwde
pop
and
and
test
test
inc
push
arpl
push
cmp
cmp
adc
cmc
jmp
xchg
dec
lahf
imul
inc
adc
loope
dec
push
or
cmp
mov
push
mov
push
out
inc
lds
dec
sbb
jl
dec
out
and
cmp
popa
cmp
xor
mov
dec
dec
cmps
add
jl
std
ficom
jl
fchs
lods
addr16
int
ins
fs
dec
sbb
rcr
ffreep
cmp
push
push
or
ror
xor
in
add
cmp
in
sahf
(bad)
mov
loope
dec
sbb
sar
fabs
loop
xchg
pop
mov
int3
inc
in
and
retf
inc
jb
cmp
cmp
test
mov
aaa
fdiv
outs
cmp
push
loopne
dec
adc
outs
mov
inc
bound
adc
mov
pop
mov
add
(bad)
jns
mov
sbb
xchg
jge
add
gs
mov
pop
xor
xchg
and
cli
adc
cmc
lods
xchg
xchg
inc
call
and
nop
pop
pop
xchg
inc
mov
addr16
fbld
or
imul
cmp
mov
rcl
test
(bad)
mov
adc
push
loope
lea
adc
scas
setg
es
mov
ret
dec
mov
adc
xchg
push
and
xchg
daa
jmp
push
xchg
push
jg
and
jae
inc
push
sbb
add
in
add
outs
pop
outs
retf
dec
mov
nop
cmp
push
call
test
sbb
std
dec
mov
push
psubsw
pop
vmwrite
fsub
mov
jge
or
jl
mov
(bad)
fnsave
call
scas
add
scas
inc
cmp
jl
push
out
push
leave
adc
and
or
push
into
ret
daa
popa
clc
add
inc
push
xchg
xchg
push
push
repnz
movs
loope
std
(bad)
dec
and
sbb
pop
push
pop
sub
ds
inc
cmp
add
push
enter
sub
or
or
cmp
and
inc
sbb
out
fwait
dec
fist
adc
fistp
pmaxub
add
xchg
dec
xchg
mov
shl
(bad)
fimul
push
(bad)
sahf
out
daa
mov
jae
or
pop
jo
add
mov
sub
inc
sub
or
lock
pop
sbb
pop
popa
fsub
sub
loopne
(bad)
push
push
cmp
in
mov
push
xor
fcmovnbe
aas
adc
inc
mov
xchg
(bad)
and
cwde
lea
(bad)
shl
and
popa
jmp
pop
xlat
pushf
dec
or
rol
mov
stc
ror
test
add
aam
inc
cwde
shl
inc
and
cmps
loop
jo
jp
pop
arpl
or
cld
loope
arpl
sub
push
push
enter
arpl
jns
add
nop
stc
lea
popf
aaa
nop
(bad)
add
cdq
pusha
mov
mov
pop
or
dec
call
scas
sbb
clc
xchg
mov
adc
cmp
aaa
or
adc
leave
ins
(bad)
adc
and
test
add
int3
or
mov
cmp
mov
adc
xchg
out
(bad)
cli
push
mov
adc
loope
add
push
enter
xchg
or
aad
inc
inc
or
call
push
test
fstp
cmp
adc
cmp
(bad)
std
retf
jmp
or
inc
add
jo
add
adc
fcomp
addr16
sub
or
mov
sbb
aaa
sar
jecxz
sub
mov
inc
add
add
xor
in
push
ret
push
dec
adc
or
or
and
jge
leave
mov
add
mov
scas
pop
fcom
mov
xchg
add
xor
push
repnz
call
inc
adc
dec
pop
add
lock
mov
call
lea
inc
arpl
fld
push
add
jmp
cmp
in
into
lock
mov
daa
inc
shl
add
inc
mov
enter
sar
aam
inc
nop
push
adc
inc
dec
jle
jne
adc
dec
add
loope
dec
rcl
xor
sbb
xchg
movs
inc
mov
in
cmp
sub
jne
pop
and
(bad)
movs
adc
xchg
adc
into
std
ret
inc
in
sub
mov
arpl
sti
xor
(bad)
paddsb
cmp
into
jnp
sbb
sbb
xchg
adc
or
js
pop
in
ret
loopne
xor
call
or
shl
xor
test
add
adc
push
fisttp
pop
add
nop
ja
pop
das
jnp
jecxz
(bad)
out
inc
dec
push
add
push
call
loope
sbb
dec
pop
cmps
mov
mov
sbb
lods
cmp
es
repz
jecxz
pop
into
cmps
imul
xchg
stos
movs
mov
or
bswap
mov
aas
std
xchg
mov
add
cmps
arpl
pop
inc
sbb
mov
cwde
fst
cs
mov
inc
aad
add
push
dec
dec
pop
cld
jbe
std
jmp
push
pop
rcl
push
std
iret
ffreep
cwde
ret
lahf
pop
ds
jb
aas
mov
or
xchg
mov
inc
push
aaa
and
es
inc
inc
cmp
int
mov
cmp
and
pop
pushf
test
xchg
xchg
xor
adc
cmp
push
jb
fwait
call
sub
dec
and
add
ds
js
out
int
shl
or
jmp
pop
in
pop
cdq
xchg
ret
jle
rol
add
ds
add
xchg
pop
cmp
xchg
cwde
je
inc
sub
jbe
sub
inc
push
jp
cmp
in
fisttp
jp
repnz
adc
add
mov
movups
adc
dec
cmpxchg
xchg
nop
cmp
nop
xor
dec
repz
mov
and
repnz
imul
mov
lods
stc
and
and
popf
add
enter
mov
inc
repnz
mov
leave
cmps
in
retf
sub
in
jb
daa
inc
adc
test
stc
mov
fdivr
jg
clc
cmp
enter
push
sub
cmp
sub
leave
sbb
jnp
adc
jecxz
cmp
jge
dec
or
jo
dec
mov
xor
adc
mov
adc
fld
pop
xchg
jo
je
jmp
and
sub
mov
sbb
push
neg
fs
sbb
mov
repnz
(bad)
dec
fsubr
mov
dec
shl
lods
push
push
push
dec
add
jb
cmp
lods
rcr
push
dec
in
cli
xchg
test
test
in
fcmovnb
xchg
mov
sub
pop
push
idiv
jno
lea
add
test
and
mov
out
add
ficomp
xor
int3
data16
leave
inc
xor
pop
not
shl
add
push
and
jne
jmp
cmp
jno
loop
push
adc
push
or
aam
rol
je
xor
mov
inc
or
adc
jbe
push
add
inc
pop
and
mov
ds
fsub
mov
or
xor
inc
push
inc
ja
lahf
aas
adc
or
sub
ss
aas
push
popf
lea
dec
inc
xor
or
add
loop
jl
sbb
and
cmc
jbe
sub
ins
xor
mov
jp
ds
and
xor
test
ror
icebp
or
enter
sti
lock
stc
sti
je
inc
loopne
(bad)
scas
xchg
fcom
sub
or
jb
xor
push
sbb
test
sbb
cmp
push
dec
call
retf
sub
call
dec
and
jne
pop
xor
ss
pop
bound
sub
cmp
push
enter
aad
add
push
add
into
dec
test
scas
jge
mov
adc
or
jge
inc
adc
movlhps
fnstenv
in
mov
push
jo
or
mov
fcomp
push
inc
ds
dec
push
add
rol
and
add
rcr
sbb
dec
push
add
(bad)
lahf
test
push
repz
test
lock
mov
aad
imul
call
mov
or
cmp
pop
jl
jo
xchg
dec
cmps
or
out
push
or
push
cmp
jmp
or
mov
push
and
pop
jo
mov
cwde
pop
retf
adc
lea
push
lahf
push
aaa
repnz
add
mov
inc
and
pushf
inc
pushf
mov
out
mov
sub
clc
out
add
add
fbstp
or
out
add
sar
ins
cmp
lahf
shr
inc
test
jp
call
or
pmuludq
sub
pop
ret
fsubr
sbb
ds
lea
cwde
and
dec
add
or
test
sbb
push
and
in
mov
dec
pop
sbb
or
sub
enter
imul
mov
cmc
or
mov
lahf
fwait
pop
inc
or
(bad)
lahf
sbb
pop
mov
sbb
adc
push
stos
dec
sub
jb
mov
outs
es
add
cmp
call
pop
scas
jbe
test
rol
mov
and
add
jmp
inc
mov
pop
sbb
add
jne
xchg
jbe
cmp
sar
add
rol
push
les
ss
repnz
fld
pop
out
js
fbld
add
jae
add
out
sbb
cmp
inc
add
xchg
repz
cs
sub
add
jb
test
repnz
fdiv
(bad)
push
sub
in
lds
cwde
pop
adc
dec
adc
pop
lds
sbb
adc
out
adc
pop
arpl
adc
sbb
bound
test
aaa
mov
lods
mov
jl
push
add
daa
and
add
les
xor
and
add
push
cmp
or
and
mov
pop
test
and
pop
rcr
pop
adc
adc
push
sbb
sub
adc
fistp
pcmpeqw
mov
mov
add
repz
dec
xchg
adc
push
adc
pop
adc
cmp
xor
adc
jge
adc
adc
les
add
push
shl
add
adc
jmp
addr16
jbe
inc
adc
push
sub
(bad)
dec
and
cmp
test
jb
jmp
sub
or
jno
dec
cwde
dec
stos
loope
inc
xor
push
add
cmp
mov
inc
fisubr
je
outs
sti
cmp
sbb
cmp
push
dec
or
pop
sbb
in
cmp
and
push
and
movs
test
pop
pop
js
stc
add
mov
pop
das
(bad)
xchg
cmp
sub
add
shl
inc
dec
sbb
call
sti
add
fdiv
mov
sub
and
movs
pop
mov
das
xchg
shl
ficom
xor
and
mov
bound
mov
aad
mov
(bad)
mov
out
aaa
inc
inc
sbb
adc
test
(bad)
std
call
cmp
cmp
push
add
jp
mov
adc
mov
outs
ja
cmp
shl
ja
push
mov
jmp
rcr
mov
push
fidiv
or
fwait
dec
and
dec
pop
or
imul
or
cmps
push
or
rcl
cmp
in
mov
inc
add
pop
inc
add
mov
push
jne
jle
or
(bad)
lock
les
jp
add
jno
fadd
ja
mov
sbb
bndstx
fadd
test
jp
jmp
leave
test
pop
enter
adc
xchg
xor
add
mov
(bad)
add
or
mov
ret
or
and
and
fisub
adc
test
adc
add
cmp
add
or
mov
adc
ins
aas
loope
xchg
iret
and
adc
jb
and
adc
leave
add
adc
fs
jmp
mov
adc
adc
mov
cmps
sub
rcl
add
ret
into
mov
push
inc
or
xor
dec
push
and
imul
add
sbb
add
add
dec
ss
call
sbb
xor
or
jno
psraw
xor
or
lock
out
and
and
adc
enter
test
leave
adc
popa
add
aam
out
call
aam
and
jne
push
test
je
int3
and
dec
pusha
jno
or
js
or
out
bndldx
(bad)
call
push
mov
retf
into
test
dec
or
outs
sbb
es
rol
xchg
mov
(bad)
xor
mov
pop
push
lods
jae
inc
push
(bad)
cmp
in
test
sbb
int
jb
adc
inc
movs
mov
call
dec
in
add
xor
and
rcl
ret
dec
dec
xchg
js
and
sub
cs
push
dec
or
(bad)
aas
dec
add
xchg
cmps
push
retf
sbb
sub
call
out
sbb
pop
mov
add
dec
outs
add
dec
neg
adc
into
mov
pop
sub
dec
push
pusha
jne
or
fadd
into
test
stos
jp
std
and
push
pusha
shl
sub
mov
je
xchg
push
or
push
or
mov
lock
add
push
fwait
xor
adc
xor
xor
retf
pop
add
or
fabs
xor
and
dec
xor
push
(bad)
cmp
outs
cmp
fbld
cmp
adc
(bad)
imul
sti
inc
push
jmp
les
stc
sbb
mov
out
je
mov
add
dec
(bad)
popa
sbb
rcl
push
push
call
inc
(bad)
je
(bad)
mov
test
in
adc
inc
pop
mov
xor
popa
adc
mov
and
dec
cmp
test
push
xor
jb
cs
fwait
bound
out
add
sub
xor
or
mov
ja
pop
dec
leave
and
mov
pop
sub
xor
fbld
gs
xchg
mov
mov
jmp
adc
ds
cmp
adc
retf
ror
push
int
adc
pop
push
mov
pop
inc
mov
push
outs
movs
push
lods
sbb
je
ja
add
mov
pop
mov
loopne
or
and
inc
inc
xor
inc
jecxz
das
outs
jb
xchg
adc
xor
mov
sub
xor
js
add
push
push
add
ins
cmp
lods
add
add
stos
dec
adc
add
scas
in
retf
dec
dec
mov
xchg
adc
pushf
mov
call
call
xor
adc
stc
push
cdq
xor
adc
sub
mov
cdq
and
call
adc
mov
inc
cmp
imul
jp
fldcw
outs
lods
or
mov
mov
push
inc
push
call
shl
add
or
push
push
call
adc
das
data16
add
cmp
mov
mov
add
aaa
mov
push
cmp
adc
jb
js
sbb
(bad)
sbb
imul
scas
push
push
or
inc
out
mov
nop
cmps
sbb
inc
inc
and
test
mov
(bad)
mov
inc
adc
jle
fwait
push
and
je
mov
jmp
mov
and
pop
cmp
sbb
jecxz
sahf
cmps
pop
xchg
ss
nop
sbb
mov
push
ret
pop
cmp
or
mov
sbb
push
test
fild
test
and
(bad)
jmp
jl
nop
cli
lar
and
jb
cwde
call
push
nop
je
jmp
das
push
clc
adc
adc
push
adc
and
add
pusha
into
add
jp
mov
mov
scas
fidiv
jmp
add
push
xor
mov
int3
sub
push
sbb
sub
stos
cmps
push
(bad)
inc
popa
push
and
and
push
adc
xor
inc
dec
nop
popa
push
clc
jne
test
scas
xor
cs
shl
arpl
pop
fisubr
shl
outs
(bad)
cli
enter
lods
xchg
add
mov
add
cmp
add
ins
(bad)
sub
cdq
cmc
or
call
push
push
scas
leave
sub
cmp
fld
add
rol
cmp
add
jmp
movs
pop
or
xchg
pop
cmps
pusha
pop
retf
jbe
dec
cmps
les
or
ins
adc
add
or
arpl
(bad)
(bad)
pop
(bad)
and
loope
arpl
out
int3
xor
cmc
lock
jne
jnp
fcmovbe
jmp
push
dec
mov
add
or
cwde
xchg
lahf
sbb
cmp
pusha
add
add
push
aad
inc
mov
inc
int
(bad)
imul
ror
fiadd
sbb
sbb
mov
sub
sbb
jmp
mov
add
ss
cmp
add
mov
das
cmp
and
aad
call
xor
jno
sub
sub
fisubr
std
cmovb
stos
out
jne
cmp
jle
pop
ret
call
fst
movs
jp
add
add
scas
push
inc
pop
xor
call
fist
mov
pop
jae
cmp
inc
imul
add
xlat
push
movs
pusha
out
jmp
add
int3
sub
add
arpl
add
mov
leave
and
or
pop
sub
popf
push
clc
rol
push
call
xlat
pop
das
daa
dec
xor
pop
jge
add
inc
fs
js
test
pusha
test
push
mov
call
and
sub
sub
xor
sub
add
int
and
jmp
enter
add
pushf
mov
mov
jecxz
inc
in
mov
push
aaa
ror
add
mov
movs
inc
dec
push
and
into
add
push
push
call
or
inc
xor
and
cli
into
fisttp
mov
push
sbb
call
add
and
add
mov
sbb
adc
xchg
jns
fisub
aam
cwde
adc
sub
mov
cmps
sub
leave
xor
movs
xor
outs
or
cmp
popa
into
and
and
mov
ins
push
push
sbb
or
dec
mov
(bad)
outs
pop
pop
inc
fimul
lock
sbb
mov
daa
sub
je
sbb
mov
test
jb
in
push
dec
push
push
call
lsl
ror
xchg
pop
adc
add
dec
cld
test
mov
cwde
test
push
test
stos
jge
sar
add
call
dec
(bad)
in
mov
ins
mov
adc
ins
adc
pop
xchg
shl
adc
fisub
rcl
mov
shl
inc
or
push
dec
pop
inc
jo
retf
and
and
mov
mov
stos
or
push
xchg
jne
push
arpl
sahf
and
xchg
test
pop
scas
and
js
sub
ret
adc
neg
adc
fcom
into
add
mov
pop
push
fs
retf
fisubr
add
dec
add
or
jecxz
sbb
or
add
inc
push
std
pop
dec
fs
pop
adc
jo
call
call
lea
clc
or
lods
or
jg
mov
xchg
dec
inc
lods
add
push
jo
imul
pop
pop
mov
lea
stos
sub
push
sbb
dec
test
rcr
cli
mov
or
xlat
and
test
sahf
out
test
sub
out
imul
inc
(bad)
shr
pushf
into
push
cmp
ins
add
popa
les
retf
test
mov
xchg
mov
vpavgw
push
es
loope
dec
ret
sbb
or
sub
cld
mov
jmp
(bad)
add
or
and
sbb
test
aaa
pop
shl
loopne
xor
rcr
jne
call
mov
xlat
or
loope
xchg
arpl
cmp
movs
outs
jns
jge
dec
call
sbb
ins
repnz
pushf
pop
(bad)
jg
add
in
mov
add
add
mov
fwait
fs
jl
jmp
cwde
movs
lock
add
cdq
pop
in
lods
inc
push
mov
add
cld
mov
pop
pop
push
sub
in
xor
das
push
and
add
adc
pop
lock
mov
inc
push
cmp
dec
cs
xor
enter
mov
(bad)
add
add
inc
pop
jmp
mov
push
test
sbb
into
dec
test
add
adc
sahf
imul
test
push
xor
inc
(bad)
or
dec
cmp
or
dec
or
repz
add
in
push
sahf
cli
or
add
imul
pushf
and
fs
add
rcr
in
(bad)
cld
je
adc
jo
mov
neg
cmp
xor
je
push
xor
movs
add
daa
dec
xor
add
jo
mov
and
jbe
xchg
(bad)
jl
jo
js
(bad)
push
adc
xor
scas
sub
sbb
xchg
push
pinsrw
aaa
dec
sub
ja
xor
inc
pop
cmp
inc
add
ret
pop
and
inc
inc
inc
gs
pop
xchg
adc
adc
or
into
in
sbb
and
push
push
mov
xor
sbb
js
inc
push
fnstenv
inc
inc
add
or
shr
sar
adc
call
in
fsubr
cmp
lock
or
fs
xor
shl
loopne
and
aad
pop
fistp
push
pusha
xor
nop
xchg
and
lea
mov
xchg
scas
sub
and
or
dec
add
clc
jl
or
cdq
and
add
les
sbb
mov
gs
stc
add
mov
mov
sub
xor
jae
arpl
in
add
fnstcw
sar
sub
repnz
mov
add
dec
mov
add
pushf
mov
jbe
push
outs
jb
clc
adc
lods
loopne
es
in
fisubr
or
sub
xchg
adc
aad
xchg
add
add
xchg
or
je
add
call
push
call
je
gs
mov
fadd
pop
mov
call
push
sti
push
xor
push
sbb
mov
int3
and
mov
retf
mov
jle
and
cmp
push
retf
js
adc
mov
(bad)
bts
inc
ins
outs
dec
js
int
scas
inc
shr
lock
retf
in
ss
mov
mov
loop
xchg
mov
test
(bad)
stos
cmp
fnsave
and
enter
cmp
inc
ds
sbb
jbe
out
fidivr
scas
xor
dec
rcl
clc
xor
pop
(bad)
rcr
enter
repnz
dec
add
push
retf
call
iret
cs
clc
add
dec
jb
nop
bound
xor
fimul
adc
inc
cli
push
sub
js
fcom
fld
(bad)
ss
push
add
cmp
dec
rcr
or
cwde
sar
das
add
add
sbb
push
mov
out
and
mov
call
ds
inc
mov
dec
cmp
jmp
ror
mov
push
frstor
dec
mov
outs
test
xchg
push
cld
cs
jne
stos
add
pop
sbb
adc
pop
pop
or
cmp
ja
inc
fs
and
ins
cdq
adc
xchg
pop
repz
shl
or
bound
cmp
inc
or
push
xchg
and
movs
pop
imul
cmp
cmp
jo
ds
mov
jae
dec
jecxz
sbb
xchg
sub
inc
xor
sbb
jmp
inc
cmp
lds
sub
call
cmp
xor
sub
(bad)
je
adc
jno
imul
fld
add
xchg
sbb
rol
push
push
dec
nop
add
js
call
jl
add
call
fidivr
push
push
inc
bound
dec
ds
sbb
lods
or
push
add
or
(bad)
add
pop
dec
dec
scas
sbb
xchg
mov
rcr
sti
pop
add
xchg
cmp
fwait
shl
add
push
mov
push
(bad)
iret
or
int3
mov
and
mov
cmp
movs
xchg
dec
cmp
cmp
jmp
or
mov
add
prefetch
push
arpl
sbb
ins
lea
add
mov
inc
and
sbb
sub
sub
rol
push
je
call
push
iret
je
cmp
xor
jp
mov
fisttp
leave
adc
add
jl
xor
call
xchg
pop
pop
dec
push
shl
inc
retf
push
and
icebp
cmp
lods
dec
inc
sub
es
nop
(bad)
jo
enter
pop
fadd
inc
mov
mov
xchg
inc
loop
xchg
idiv
out
mov
iret
jae
mov
inc
lods
xor
xor
je
jl
popf
mov
lock
(bad)
and
add
dec
jmp
ds
jg
xor
or
or
call
add
call
dec
repz
add
out
and
sub
icebp
fdivr
stc
dec
shl
inc
dec
enter
add
or
sti
adc
add
cmp
adc
rol
jbe
sub
pop
adc
jle
xor
pop
xchg
mov
xor
mov
xor
out
adc
loop
adc
sub
jle
sbb
dec
or
xchg
pop
and
xor
daa
cmp
add
cdq
xor
test
and
pusha
jbe
jns
adc
sbb
sbb
sbb
sahf
or
cmps
xor
mov
pop
sbb
(bad)
ficomp
inc
push
mov
daa
add
popw
ss
das
push
ins
xabort
ror
outs
sub
add
test
fdivr
stc
or
es
inc
dec
xor
and
cmp
ss
adc
push
cmp
fistp
iret
dec
push
call
and
add
daa
jb
shl
je
and
stc
jl
jne
jbe
ja
push
cmp
sub
loopne
nop
repnz
cmp
cmc
sub
cmp
lea
data16
je
pop
mov
sti
in
shr
cmp
leave
and
and
and
add
pop
js
call
(bad)
cmp
gs
fstp
lea
lock
or
adc
dec
mov
test
push
mov
adc
or
or
ficomp
or
or
push
mov
fwait
inc
push
jle
adc
add
mov
je
sbb
or
f2xm1
push
fild
cmp
ins
dec
fbstp
call
add
or
pop
push
xor
call
retf
ja
and
jbe
xchg
inc
(bad)
int
sbb
repnz
xchg
add
jnp
add
sbb
mov
jp
mov
out
cmp
les
in
loopne
repz
aaa
gs
push
cld
fnstsw
lods
or
mov
xchg
mov
(bad)
shr
cmp
pop
jmp
dec
pop
out
and
mov
stc
mov
mov
jmp
add
jge
add
daa
lods
lds
push
cld
jge
xor
in
and
cmp
xchg
push
into
ret
push
jo
cwde
cmps
dec
sbb
(bad)
sbb
add
add
shl
pusha
cmps
(bad)
pop
icebp
imul
jbe
pcmpeqb
sub
pop
je
or
pop
fwait
ror
add
jmp
popa
inc
fbld
adc
mov
rol
pop
(bad)
int
mov
inc
call
add
add
shr
and
fistp
xor
js
shl
dec
ret
sbb
jne
adc
push
sbb
js
mov
mov
test
sbb
int3
sbb
jae
cmp
stos
sub
retf
push
sar
popf
rol
idiv
cmp
xchg
jb
mov
xor
inc
in
jecxz
push
jne
push
dec
xor
mov
dec
sahf
add
outs
lea
xchg
cmc
add
cld
repnz
into
or
je
fs
mov
je
add
adc
xor
call
xchg
sub
inc
mov
cmp
test
jecxz
cmp
sub
imul
ret
dec
jl
aaa
sbb
push
lahf
jo
add
and
pushf
inc
clc
dec
xor
adc
call
sub
push
and
arpl
add
mov
mov
xor
lods
jl
ins
add
adc
jp
adc
ja
jp
xchg
inc
call
jne
nop
scas
sbb
aam
(bad)
mov
call
mov
call
dec
xor
mov
push
xor
(bad)
lahf
lea
sahf
das
push
pop
or
cmp
imul
add
aam
test
sbb
std
sub
test
mov
aad
jb
mov
bound
or
je
xchg
add
jne
fld
jne
mov
pusha
pop
fbld
jge
xchg
jg
xchg
jp
adc
mov
sbb
pushf
movs
and
mov
pusha
int
enter
inc
mov
lea
pop
pop
stc
test
inc
push
dec
dec
movs
cmps
and
sub
jne
shl
div
hlt
fs
icebp
sub
mov
icebp
mov
sbb
jl
or
int
sbb
inc
inc
sbb
imul
repz
fs
js
or
rol
xchg
cmp
js
je
fs
xchg
push
out
rcr
call
push
push
xchg
dec
push
mov
aam
clts
ficom
aam
inc
mov
dec
pop
mov
mov
test
pop
add
dec
and
push
xor
push
fiadd
fwait
push
mov
mov
inc
leave
jl
outs
adc
in
dec
retf
(bad)
xlat
cmp
or
push
or
cmps
(bad)
dec
psraw
inc
dec
rol
mov
jns
inc
out
aaa
mov
mov
add
gs
jl
xchg
fnstsw
add
mov
ins
movs
(bad)
out
adc
jmp
loope
test
mov
addr16
sbb
pusha
in
xchg
mov
es
mov
mov
xor
dec
fisubr
aad
cmp
mov
dec
fimul
dec
add
jmp
inc
dec
mov
ins
add
push
sub
or
leave
jmp
push
jno
sbb
es
push
ss
sbb
sbb
add
aas
xchg
or
fsubr
stos
and
inc
jne
mov
push
xchg
xor
jbe
and
xor
nop
ins
push
add
cli
add
sbb
mov
arpl
mov
xor
js
mov
jo
jl
mov
jmp
stos
jnp
adc
aas
call
dec
jle
add
dec
inc
pusha
repz
je
pop
clc
and
inc
inc
inc
push
push
or
aam
push
add
hlt
mov
inc
cmp
mov
and
movs
jne
mov
dec
sub
pop
mov
mov
ja
imul
xchg
inc
push
add
jb
mov
aam
cmp
test
iret
repz
push
pusha
shl
retf
dec
add
je
adc
mov
fcomp
mov
push
js
sbb
inc
sahf
adc
cmp
inc
push
stc
adc
and
enter
test
lea
cwde
pop
mov
bound
cs
sub
pcmpeqb
cdq
or
push
and
enter
jg
enter
ds
call
adc
pop
not
adc
cmps
xor
jo
adc
adc
mov
inc
jae
adc
call
aam
xchg
inc
push
dec
or
cmp
test
(bad)
mov
jae
push
scas
fsub
std
add
xor
cs
or
cmp
adc
push
ds
or
call
mov
or
leave
dec
push
cmp
xchg
pushf
or
ror
add
sub
xchg
xchg
xchg
pop
push
mov
and
popf
arpl
retf
jmp
cmp
push
add
cs
repz
pusha
fs
loope
add
fadd
sbb
lods
pop
or
xchg
cli
mov
loope
cmp
mov
lea
cmp
or
das
sar
dec
scas
lods
xchg
xchg
lahf
and
add
cmp
sbb
sbb
or
fimul
pop
pop
mov
pusha
inc
cmp
mov
aas
pushf
fs
sbb
test
pushf
jl
call
enter
push
call
loope
add
mov
sahf
int3
js
mov
jecxz
mov
imul
add
pop
mov
jle
pop
loopne
inc
or
push
add
push
add
mov
movs
rcl
out
cmp
call
loopne
cmp
or
repnz
inc
or
or
adc
push
jle
fsubr
mov
out
add
pushf
call
inc
push
xor
rcr
and
clc
hlt
mov
mov
add
int
sbb
lds
add
inc
sbb
and
fld
mov
adc
int
jle
add
sbb
and
xor
fbld
mov
ins
js
and
add
or
mov
xchg
pop
rol
pop
je
lds
lock
fst
js
ffree
mov
hlt
adc
pop
dec
aas
in
das
pop
sub
add
mov
stos
leave
out
(bad)
leave
aad
xor
leave
out
test
addr16
xchg
test
add
xor
js
inc
cwde
(bad)
jbe
jae
or
or
(bad)
or
cmp
push
call
addr16
add
(bad)
pop
das
sbb
shl
fwait
dec
xor
ror
les
cmp
sub
add
adc
add
or
in
imul
mov
in
and
shl
cs
inc
mov
pop
push
sub
mov
sbb
cmc
gs
out
out
out
mov
xchg
pop
sbb
out
adc
xchg
push
lods
xchg
scas
jmp
call
call
clc
sbb
repnz
pop
mov
test
imul
mov
(bad)
(bad)
xchg
mov
and
(bad)
sub
fs
mov
not
in
inc
scas
pop
fcmovnbe
shl
push
mov
pop
push
add
xor
je
movs
xchg
jne
push
push
sahf
and
sub
push
lea
add
je
dec
aad
repnz
add
pop
add
cli
add
push
mov
in
inc
jle
xor
and
mov
xchg
pop
out
(bad)
repz
imul
leave
retf
or
repz
lods
mov
loope
pop
cmp
inc
repnz
mov
test
inc
test
sub
mov
pop
fisttp
sbb
pop
(bad)
cmp
ja
pusha
dec
or
clc
inc
sub
mov
xor
push
pop
dec
mov
and
repz
enter
push
daa
xor
cdq
inc
rcr
pop
aam
jo
rol
ja
mov
cwde
fwait
out
mov
mov
mov
jo
jae
dec
push
and
pop
dec
adc
add
push
loop
mov
int3
mov
sub
shr
mov
and
ins
arpl
push
xor
fisubr
dec
cmp
ja
or
dec
xor
add
dec
mov
push
(bad)
adc
cs
add
loopne
xchg
fmulp
cmp
push
pusha
xor
rol
jmp
arpl
clc
addr16
sar
ret
dec
cmp
loopne
shl
adc
or
pop
movs
rcr
pop
add
push
jne
outs
add
adc
les
cmp
jne
out
(bad)
add
in
push
js
push
call
fistp
add
shr
add
pop
add
dec
call
fidivr
push
cld
jmp
or
mov
imul
inc
stos
rcr
lods
repz
test
mov
add
xchg
sub
adc
xchg
daa
pop
lock
add
cmc
add
call
pop
and
jecxz
add
leave
daa
leave
cmc
add
push
inc
nop
add
or
sbb
push
xchg
pop
nop
dec
daa
pop
aaa
or
mov
adc
add
add
sub
loop
in
lock
sub
(bad)
dec
or
adc
inc
rcl
cs
popf
loopne
adc
(bad)
dec
cmp
out
int
cmp
clc
pop
add
adc
push
cmp
push
adc
lock
dec
test
add
mov
mov
sar
fsubr
in
adc
pop
stos
add
add
mov
mov
sub
les
je
adc
movs
mov
in
add
cmp
paddb
lds
xor
fs
push
ss
or
add
mov
mov
mov
adc
mov
(bad)
(bad)
call
mov
(bad)
adc
add
push
call
adc
and
cmc
pop
add
push
add
or
popf
sahf
fstp
outs
cmp
push
clc
fbstp
sar
or
outs
aad
ds
and
cmps
push
jmp
shl
jnp
xor
js
loopne
cmp
leave
or
or
adc
movs
ror
inc
or
push
sbb
fbstp
test
inc
outs
pop
cdq
retf
dec
(bad)
scas
mov
shr
shl
mov
push
pop
sub
addr16
aam
mov
xchg
mov
js
retf
loop
(bad)
call
mov
jno
adc
jo
mov
jg
cs
stos
push
bound
in
pop
inc
mov
ficomp
inc
jbe
inc
das
out
sar
mov
sub
mov
push
push
call
dec
mov
retf
add
pop
or
pusha
test
jmp
or
or
sahf
outs
aad
or
fisub
cmp
push
mov
pop
pushf
add
fild
xchg
jo
out
or
je
js
pushf
ret
pop
add
ins
popa
xlat
in
add
adc
mov
loopne
pop
and
add
call
add
jmp
pusha
nop
jo
or
xor
jmp
cmp
add
sbb
jmp
adc
loopne
xchg
xchg
in
jmp
adc
push
and
xor
or
ds
cld
loop
leave
and
xor
call
mov
and
cmc
mov
sahf
int3
lods
mov
sbb
and
add
imul
mov
lds
(bad)
pop
add
add
add
push
daa
pop
jp
sub
xchg
or
in
mov
call
xchg
ret
repnz
and
dec
add
lods
push
push
adc
xchg
xchg
cmc
push
inc
clc
gs
jmp
or
pop
loope
lods
or
push
aad
mov
jg
cwde
loope
or
inc
ja
aas
xor
adc
mov
jg
jmp
cmp
je
out
and
in
or
pop
push
sub
mov
pop
or
cmps
push
(bad)
cs
and
lods
and
and
aam
inc
jg
in
cmp
fucomi
imul
push
inc
or
mov
popf
ja
adc
jmp
aas
sbb
leave
fsub
dec
mov
inc
mov
sahf
dec
aaa
and
xor
push
jp
shl
ss
bound
mov
jno
or
retf
int
bound
(bad)
sub
movs
cmps
or
lea
mov
adc
enter
into
dec
loop
add
xchg
jl
inc
add
retf
retf
movs
cmp
push
(bad)
imul
cmp
dec
sbb
push
call
mov
jmp
xor
inc
stos
sub
and
pushf
or
mov
lahf
dec
xor
lea
mov
test
pop
jle
mov
fbstp
pushf
movs
inc
xchg
je
jp
sub
(bad)
jno
and
pop
jmp
je
adc
sar
push
pop
and
add
mov
js
lods
je
sbb
dec
mov
jmp
dec
pop
xor
mov
push
je
jnp
or
dec
and
and
mov
cdq
sbb
fs
dec
or
sbb
nop
add
test
fdiv
push
mov
pop
xchg
mov
push
jmp
inc
in
jmp
mov
dec
sbb
and
inc
gs
jg
push
push
adc
scas
mov
loop
jns
nop
std
pop
jmp
push
sbb
add
call
stc
sub
add
push
add
stc
inc
and
cmp
retf
xchg
add
enter
fidivr
imul
(bad)
in
(bad)
push
(bad)
push
and
lds
push
add
scas
pop
sbb
dec
inc
dec
add
js
sub
ret
add
clc
ds
ret
dec
inc
add
scas
lods
sbb
adc
call
dec
add
sub
push
pop
out
imul
call
shl
dec
pushf
aas
out
xor
jge
inc
mov
and
add
lahf
fcom
movs
out
fmul
call
sti
out
push
js
inc
push
or
jge
inc
cmp
xlat
cmp
int
outs
fdivr
rcr
ror
mov
xchg
jmp
repz
push
test
call
and
mov
add
add
xchg
add
push
push
dec
sub
inc
ins
xchg
or
push
movs
call
ret
leave
dec
jmp
cmp
sub
add
pop
fucomi
add
mov
add
int
imul
outs
repz
jmp
sbb
es
push
pushf
lea
sbb
loope
es
inc
call
add
inc
nop
xor
test
ja
adc
popf
mov
pushf
or
ficom
push
mov
mov
mov
inc
or
das
retf
add
movs
sub
inc
dec
sbb
push
and
inc
jo
push
dec
adc
add
jge
cmp
emms
push
adc
cmp
sub
sub
mov
scas
dec
add
push
pop
ret
pop
add
sub
xchg
xor
ins
push
in
or
push
mov
cmps
xor
jg
dec
fwait
not
sub
(bad)
jne
add
add
dec
pop
call
sti
cmps
or
test
unpcklps
push
push
ret
fcom
sbb
sbb
sbb
test
jp
add
add
rcr
cli
mov
ror
imul
pop
cmp
cmp
leave
and
mov
sbb
sub
jo
(bad)
mov
or
inc
sar
mov
adc
pop
pop
jmp
add
sbb
das
shr
int
shr
jp
sti
cdq
pop
push
mov
add
xchg
add
and
hlt
sbb
add
and
ins
sbb
xor
cmp
sahf
inc
cmp
mov
repz
jae
stos
inc
add
std
add
test
cld
ins
push
pop
rcl
pop
(bad)
cld
push
add
jno
lea
jo
add
mov
xchg
jae
mov
adc
and
das
call
mov
cmp
adc
inc
sbb
(bad)
addr16
and
aam
ins
sub
or
ss
or
iret
adc
jbe
mov
sub
mov
retf
sbb
lahf
jo
mov
jns
std
xor
loopne
jecxz
mov
lahf
(bad)
out
fsubr
xchg
sbb
mov
sub
mov
or
push
pusha
addr16
adc
inc
jb
sbb
movaps
and
push
addr16
loop
xor
repz
jecxz
and
or
cmp
add
pop
or
call
pop
aaa
mov
cs
push
lahf
and
pop
rol
sbb
adc
pop
xchg
cdq
and
std
sahf
pop
nop
data16
pop
jo
add
xlat
cdq
shr
div
dec
and
dec
mov
push
or
push
icebp
push
dec
sub
aaa
add
mov
mov
pushf
dec
pop
xor
dec
pop
xor
cmp
clc
call
sbb
jmp
mov
ds
xchg
imul
addr16
(bad)
in
adc
adc
mov
push
inc
sbb
sub
repnz
mov
dec
cmp
fiadd
not
ins
pushf
inc
fsub
mov
aam
or
mov
hlt
pop
lea
fstp
pop
call
or
imul
jle
call
loop
mov
or
jmp
or
es
int3
add
sbb
adc
das
jmp
fst
mov
je
lods
call
(bad)
outs
ret
add
test
pusha
nop
and
and
pop
test
icebp
pusha
sbb
lods
push
test
pop
cmp
push
pop
dec
cs
cmc
sbb
aas
or
xchg
add
leave
imul
add
mov
jo
cmp
push
push
and
ret
push
shl
push
cmp
xor
psraw
sbb
adc
cmc
call
inc
call
imul
in
fimul
mov
call
lods
inc
push
sbb
popa
sub
cmc
in
or
ds
sub
cmp
cmp
(bad)
(bad)
fisttp
add
push
or
xchg
movs
cmp
(bad)
lahf
and
push
fwait
sar
int3
movs
gs
jge
push
call
xchg
test
cmps
push
xchg
fisub
aam
fimul
xor
mov
ja
gs
push
call
gs
pusha
xor
xlat
sbb
push
arpl
ret
xor
push
stos
or
jg
xchg
and
mov
mov
xor
int
add
or
cmp
arpl
and
ret
test
or
outs
xchg
jne
push
ror
jo
popa
push
sahf
call
js
imul
push
dec
hlt
call
jo
xchg
push
call
jno
lods
bound
lods
ficomp
rol
pop
pop
lods
adc
inc
pop
stos
and
popa
add
dec
xor
test
jne
xor
test
pop
inc
and
call
in
prefetch
(bad)
add
push
repnz
mov
dec
pop
add
jo
pop
out
add
test
ret
loopne
cmp
push
lds
xchg
test
add
xchg
add
js
mov
sub
jl
sub
or
loope
mov
cwde
pushf
pop
or
sbb
adc
mov
lock
sti
xchg
(bad)
jmp
test
sbb
xchg
stos
test
inc
cld
pop
call
xchg
aad
cld
addr16
sbb
mov
and
or
add
jle
dec
clc
scas
jp
fst
adc
ins
imul
les
ja
shl
ds
test
fs
popf
jecxz
dec
jg
test
pop
fdivr
push
(bad)
jg
push
adc
dec
or
in
imul
add
sbb
in
add
(bad)
sub
add
push
xor
iret
xchg
sbb
mov
aas
gs
push
sub
not
adc
loop
xchg
lods
ret
pushf
call
loope
mov
cmp
mov
cmp
mov
cs
retf
add
pop
push
sbb
retf
js
xor
mov
pusha
call
fnsave
jl
rcr
mov
int3
pusha
mov
dec
shl
mov
outs
add
mov
jne
pushf
std
out
sub
fdiv
mov
or
fst
adc
mov
or
and
mov
cmp
jecxz
jl
aam
shl
test
adc
mov
and
outs
or
repnz
adc
or
int3
nop
sub
out
push
fdiv
int3
icebp
add
sub
sti
inc
pop
jne
or
add
jno
inc
imul
jns
add
xchg
fstp
in
inc
dec
pop
inc
mov
mov
out
sub
jae
mov
or
add
cli
jmp
add
loopne
loopne
lock
mov
pop
dec
push
jp
les
push
cmp
mov
enter
or
mov
dec
shl
dec
xor
and
inc
hlt
adc
out
outs
add
mov
call
cli
push
add
pop
mov
jmp
or
add
mov
and
shl
call
cdq
or
adc
jl
mov
call
adc
mov
sahf
aad
cmp
xchg
jl
mov
pop
dec
sbb
jl
xchg
adc
fs
sub
adc
push
jmp
sbb
inc
push
xchg
cld
and
push
mov
cmps
sub
(bad)
jae
iret
sub
and
add
xor
push
test
pop
sub
shr
jne
and
jmp
or
xchg
dec
add
ror
mov
scas
or
outs
sbb
aam
add
mov
push
push
push
test
lea
cmp
mov
dec
inc
xor
or
cmp
fild
and
inc
jg
lea
pop
nop
inc
ror
call
and
fadd
shr
inc
ret
or
int
sbb
dec
loopne
push
aad
rcr
push
jno
(bad)
push
sar
rol
lahf
xchg
or
pop
stos
pop
mov
xor
lods
inc
loope
outs
(bad)
inc
dec
sbb
in
outs
pminsw
mov
inc
adc
cmp
fs
mov
mov
add
ror
sub
mov
fwait
out
xchg
not
push
ins
add
popf
xchg
mov
dec
sub
and
shl
push
in
and
pop
or
dec
test
and
sbb
inc
mov
xor
test
adc
pop
sub
xchg
nop
cmps
jns
inc
push
push
mov
sbb
inc
sbb
pop
and
iret
enter
cdq
or
retf
ds
ror
xor
pop
out
jnp
cmp
xchg
aam
movntps
ror
push
mov
dec
xchg
mov
ins
test
fidiv
cwde
jae
je
fistp
ds
jns
cdq
sar
inc
dec
retf
push
jbe
jmp
into
in
fs
arpl
mov
pop
icebp
cwde
push
enter
push
and
xor
popf
enter
inc
pop
stos
push
repnz
pop
fwait
push
sbb
and
aas
das
sbb
out
cmp
push
push
dec
ja
xchg
mov
adc
sbb
mov
add
shr
jmp
mov
and
hlt
mov
push
push
mov
test
push
cli
jmp
push
sub
imul
sbb
xchg
mov
(bad)
push
xor
sbb
xor
rcl
mov
dec
enter
mov
inc
shl
push
cmp
inc
and
rep
sahf
(bad)
adc
mov
or
sub
push
add
test
outs
mov
adc
mov
cmp
mov
mov
ror
xchg
adc
clc
in
jle
xchg
rol
add
call
and
jae
leave
lods
test
sub
mov
push
jbe
jnp
mov
(bad)
enter
xchg
cwde
push
enter
push
inc
add
or
jecxz
jle
rol
jg
pop
sar
xor
sub
add
push
push
push
call
push
enter
call
add
and
add
sbb
sahf
out
into
fiadd
fld
jg
nop
loopne
dec
outs
xchg
and
nop
or
sub
ss
mov
or
mov
punpcklwd
or
pop
push
sbb
and
add
fcmove
pop
xchg
xor
push
cmp
push
mov
mov
ins
push
fs
dec
in
aas
in
adc
xor
mov
outs
push
cmp
mov
bound
dec
mov
cli
or
mov
dec
ss
mov
adc
push
retf
pusha
(bad)
aas
es
dec
add
sub
sbb
(bad)
dec
cmp
add
adc
jmp
mov
sbb
dec
sub
dec
push
cmp
jns
cs
call
xor
aam
cmc
xor
inc
in
adc
rol
cld
push
mov
inc
call
adc
popa
push
mov
sub
retf
cmp
dec
push
push
cmp
gs
clc
ja
jo
and
xor
call
xchg
vpminub
ss
rcr
pop
imul
mov
inc
inc
xor
push
or
pop
and
das
pop
lods
sub
enter
(bad)
push
daa
cmp
daa
mov
push
sub
inc
jbe
lock
push
cmp
enter
aam
leave
fisubr
xchg
shr
scas
inc
fwait
push
arpl
xor
fisubr
iret
int
lods
and
push
ror
pop
repnz
cmp
push
push
inc
add
add
inc
mov
push
cmp
jo
mov
ret
and
add
sbb
push
add
js
adc
loope
cmp
and
loopne
pop
cwde
or
sbb
pop
(bad)
add
fwait
add
out
xor
imul
aas
fdiv
sbb
shl
add
push
push
mov
(bad)
idiv
cwde
jne
adc
adc
call
fbld
aam
je
jmp
xor
mov
ins
jne
gs
jo
mov
push
ds
repnz
xor
lods
inc
cmp
ss
push
push
pop
rol
inc
ret
and
aad
jo
cwde
and
nop
retf
fnsave
test
mov
and
inc
dec
lock
je
sub
push
loopne
inc
push
dec
xor
mov
shl
xor
rol
jmp
pushf
add
adc
jmp
push
adc
sub
push
adc
sar
ficom
stos
add
jge
or
ud2
jmp
lea
aas
das
or
add
or
add
adc
je
push
ret
push
xlat
and
push
push
icebp
jecxz
push
push
xlat
dec
mov
les
test
xor
call
sub
fs
in
xlat
mov
or
in
fcom
add
and
sub
test
xchg
jge
(bad)
xor
jle
add
push
or
push
scas
pushf
or
mov
movs
cmc
in
in
pop
mov
in
dec
imul
xchg
adc
push
xchg
pop
pop
js
leave
push
iret
sbb
pop
sbb
mov
pop
xor
and
leave
ds
push
xchg
adc
lods
inc
fsubrp
adc
pop
inc
xlat
ins
pop
pop
xlat
outs
adc
pop
push
add
and
xor
ins
nop
fs
push
inc
cmps
call
ins
call
cmp
mov
pop
test
test
cmp
test
out
xchg
mov
and
or
dec
mov
xchg
cmp
push
(bad)
icebp
cmp
fisttp
inc
sub
mov
js
ins
int
sub
add
adc
lods
jge
outs
cmp
push
nop
jbe
mul
jo
fucom
or
push
inc
and
repz
push
call
mov
out
dec
push
jnp
ins
cmp
add
int3
cmp
ins
mov
mov
rol
pushf
jmp
jg
dec
sub
cmp
mov
loop
daa
repnz
pop
leave
push
push
and
pop
and
sbb
arpl
xor
test
test
cwde
and
lea
and
or
out
icebp
inc
lahf
aad
les
adc
call
out
jbe
push
call
xor
ins
cmp
pop
mov
adc
add
ja
jle
lock
jmp
stos
xor
test
push
dec
(bad)
mov
mov
or
sbb
and
and
pop
pop
mov
jg
ficom
daa
mov
loop
mov
stos
daa
pusha
ja
pop
inc
inc
dec
cmp
data16
and
dec
and
call
pop
outs
rcr
and
sbb
js
add
xor
add
add
and
(bad)
sub
mov
lea
clc
cdq
fs
cmp
add
loope
movs
ins
xchg
add
add
repz
xchg
add
dec
cli
xchg
sbb
mov
popa
add
pop
push
call
xchg
in
nop
repnz
(bad)
iret
in
sar
add
call
mov
das
nop
icebp
push
mov
or
mov
or
inc
add
xor
adc
out
ss
ret
ret
call
movs
lahf
(bad)
mov
in
iret
ins
(bad)
mov
cmp
leave
fwait
add
call
call
dec
xor
mov
add
leave
enter
call
mov
and
dec
push
les
cli
pop
stc
leave
fadd
clc
icebp
mov
(bad)
call
sub
nop
xchg
add
xor
es
add
xor
mov
loope
jno
dec
push
daa
cmp
push
mov
cmps
loop
and
adc
pop
sbb
pop
hlt
sub
cmp
aad
jmp
into
loopne
pop
push
and
jbe
jae
push
ja
call
inc
fdivr
dec
mov
fst
leave
dec
stos
adc
add
repz
push
jb
mov
mov
jb
je
xor
pop
icebp
adc
mov
cmps
inc
mov
jg
mov
xor
adc
outs
repnz
adc
clc
hlt
repnz
mov
push
sbb
cmp
xchg
pop
add
leave
adc
add
bound
inc
push
sar
ret
and
rol
cmp
call
add
add
data16
xchg
sub
lds
sbb
loopne
inc
iret
push
retf
sbb
jle
call
fidiv
bound
hlt
ret
xlat
les
mov
inc
ins
fisubr
add
fistp
inc
sbb
dec
call
lahf
stos
xchg
push
shl
cld
xor
adc
pop
sub
cs
fwait
imul
adc
push
loope
repnz
nop
jbe
cmp
push
imul
cdq
jle
xchg
inc
fs
or
cmp
ret
jg
jge
sub
dec
add
inc
int
add
fld
retf
mov
scas
push
dec
pusha
mov
inc
add
popa
or
retf
fs
es
fsubr
mov
add
repnz
pushf
cmps
lock
sbb
sbb
inc
mov
mov
and
and
int
cmps
jge
or
jo
pop
mov
punpckhbw
loope
test
push
mov
(bad)
xchg
repz
inc
pop
call
xor
pop
push
leave
ror
add
inc
lock
cwde
mov
imul
out
push
sub
fidiv
pop
(bad)
call
push
call
xchg
fwait
les
cwde
fcmovbe
std
adc
das
repz
mov
xor
adc
jg
mov
inc
jae
xor
das
dec
push
push
push
addr16
xor
add
xor
mov
add
add
imul
jle
call
sub
fidiv
adc
into
jl
adc
cdq
push
call
fist
lea
pop
out
mov
(bad)
pop
shl
icebp
mov
mov
repnz
or
or
cli
cmps
sbb
pushf
mov
lds
and
or
jp
xchg
mov
jp
adc
cmp
and
jne
push
mov
inc
imul
xor
mov
push
data16
scas
inc
push
add
xchg
mov
in
push
stos
push
mov
and
inc
(bad)
in
sbb
adc
std
nop
repnz
mov
and
push
sbb
and
xor
inc
mov
cmp
cdq
and
push
out
add
call
add
test
sbb
mov
jmp
adc
adc
push
cmp
adc
scas
inc
and
sub
ud1
cli
fisub
int
movs
(bad)
mov
dec
repnz
mov
or
push
adc
sbb
rcr
push
ret
lock
push
call
cmp
sahf
dec
in
movs
aad
out
adc
mov
or
ins
dec
or
sbb
sub
mov
ret
addr16
comiss
pop
cmp
popa
cmp
loop
call
and
or
repnz
or
mov
push
and
ror
mov
sbb
mov
push
add
cmp
xchg
ret
dec
push
call
xchg
dec
gs
push
xor
mov
adc
pop
mov
pushf
cmp
fs
adc
mov
or
cmp
mov
pop
mov
test
adc
xchg
xor
jo
sbb
loopne
cmp
push
cwde
and
inc
jle
jnp
in
adc
cli
fs
pop
repnz
mov
and
sbb
and
test
xlat
imul
cli
xor
push
pop
sbb
out
mov
test
inc
fdivr
or
mov
push
jo
or
cmps
rcr
mov
movs
mov
pop
aaa
inc
pop
in
and
(bad)
adc
popa
(bad)
jecxz
pop
xchg
inc
cmp
add
xchg
mov
sbb
xor
outs
dec
mov
xor
push
jmp
or
in
daa
push
jbe
mov
push
xor
stos
cmp
push
ret
repnz
lods
jae
stos
mov
leave
sub
cld
mov
call
lods
je
ins
mov
push
idiv
test
push
push
adc
mov
sti
inc
movs
outs
xlat
cdq
xor
movs
sbb
das
xchg
out
lods
sbb
ficom
adc
je
out
ret
or
and
pop
cmp
push
pop
mov
adc
push
pop
cmp
outs
xor
push
aam
add
push
sub
inc
push
xchg
sbb
push
sbb
sbb
cmp
xor
adc
and
cdq
aam
xor
icebp
call
cmp
pop
cmp
ins
loop
gs
sub
push
or
push
mov
cld
pop
or
push
and
xchg
arpl
or
rcr
sbb
outs
outs
vpmulhw
enter
icebp
(bad)
pop
sar
sbb
fidiv
mov
mov
push
adc
fild
mov
push
jne
mov
je
push
pop
or
rol
dec
add
xchg
call
ret
mov
sub
imul
inc
cmp
mov
add
in
pop
push
popa
lea
or
js
dec
push
rcr
pop
(bad)
push
xor
leave
xor
into
push
sbb
sub
push
call
scas
call
fmul
dec
lods
ret
pop
mov
sub
sub
pop
mov
jle
pop
aas
add
ror
xor
je
enter
and
add
shl
pushf
iret
push
push
mov
pop
sub
ins
cmp
fadd
pop
dec
push
add
scas
mov
or
cmp
neg
sub
add
and
fstp
je
imul
xchg
push
mov
mov
jg
inc
jae
or
into
mov
xchg
and
mov
clc
push
mov
shl
test
ret
clc
cmp
add
mov
aas
add
dec
cwde
dec
ficom
stos
stos
int3
add
leave
dec
dec
dec
add
imul
rol
das
cmps
mov
pop
inc
add
push
or
or
inc
leave
add
inc
les
adc
sub
in
push
mov
xor
push
push
ret
gs
test
pop
and
adc
sbb
push
mov
in
add
ret
mov
es
iret
pop
and
xchg
xor
pop
rcl
jp
inc
and
or
daa
cmp
sub
or
push
pusha
loopne
jne
lea
sub
outs
(bad)
imul
push
lock
pop
mov
sbb
into
inc
and
push
cmps
add
or
xor
dec
jb
jnp
std
inc
add
test
dec
cs
pusha
mov
loop
inc
retf
hlt
imul
push
inc
aad
add
in
push
mov
and
push
loope
ss
call
mov
jmp
test
xchg
rcr
xor
mov
dec
xor
rcl
cmp
and
sbb
cmp
nop
sub
add
fimul
sbb
and
adc
xor
add
inc
sbb
cmp
cmp
cs
inc
dec
push
sub
iret
dec
push
adc
add
add
rol
ins
add
ret
movs
rol
jl
mov
fadd
in
cmps
mov
popa
loopne
jb
pop
push
test
mov
xor
jo
push
out
push
fucomi
(bad)
popa
addr16
mov
inc
call
or
js
inc
lahf
push
push
(bad)
mov
adc
not
jno
call
loop
mov
cmp
scas
shr
aas
int
test
mov
jne
aad
jmp
ins
mov
mov
jne
xor
add
sbb
mov
mov
inc
dec
dec
mov
add
je
cmps
push
or
ret
mov
(bad)
or
adc
fld
jbe
xchg
mov
repnz
popa
hlt
add
nop
outs
call
imul
rol
mov
iret
and
ret
fdiv
xchg
test
xchg
rol
sub
mov
inc
jmp
add
add
push
call
scas
jmp
and
xor
fsub
test
inc
or
stos
push
inc
sub
test
push
shl
fsubr
mov
jge
mov
xor
mov
mov
in
test
mov
xchg
pushf
shl
mov
xlat
aam
xor
dec
lea
mov
js
fild
sub
xchg
das
jle
call
or
and
cmp
push
pop
sub
rcl
or
cmps
ror
nop
sbb
mov
cmp
call
or
fidiv
or
invlpga
sub
mov
pop
daa
or
dec
pop
or
loopne
inc
mov
and
adc
call
jo
and
adc
movs
loope
lods
(bad)
stos
je
in
sbb
mov
inc
sub
mov
loopne
inc
mov
fild
pop
pop
pop
push
dec
add
xor
add
repnz
ja
push
test
add
daa
inc
and
or
push
cmp
dec
adc
sbb
(bad)
push
sub
sub
(bad)
push
sbb
dec
inc
ins
or
cmp
sbb
imul
mov
xchg
ss
xchg
push
in
inc
loope
sbb
xchg
imul
pop
rcl
fldenv
mov
mov
or
xchg
std
add
dec
and
outs
in
mov
add
adc
push
cmp
bound
push
in
fld
loop
stc
jmp
xor
mov
xor
mov
push
xor
pushf
sahf
xchg
jo
loope
sub
(bad)
imul
add
mov
push
call
cmp
push
or
ins
or
cmp
push
fsub
xchg
jne
mov
mov
inc
rcl
lods
push
add
add
fmul
push
fmul
inc
arpl
ins
inc
pusha
add
stos
sub
jg
popf
(bad)
pop
mov
icebp
lods
add
push
mov
arpl
adc
repz
xchg
push
cli
dec
aas
int3
inc
and
push
mov
cmc
or
mov
or
pop
mov
mov
es
std
inc
pusha
rcr
and
mov
mov
and
or
and
retf
push
adc
inc
push
dec
in
pushf
les
repnz
lahf
rcl
adc
outs
outs
dec
pop
sbb
ds
inc
cmp
adc
cmp
add
jo
fld
jg
jns
call
push
call
stos
aad
fistp
addr16
mov
mov
fild
push
jmp
push
call
add
ja
xchg
sbb
and
sub
call
(bad)
popf
shr
push
xchg
aam
enter
jne
sbb
push
add
add
cmp
in
test
and
popf
sbb
and
scas
jecxz
outs
sub
mov
inc
jmp
add
ret
dec
cdq
in
jns
pop
sbb
and
cmc
jo
push
pushf
ss
bnd
pop
in
push
mov
add
and
outs
dec
add
shl
mov
test
shr
in
(bad)
jne
add
mov
inc
and
adc
adc
in
mov
mov
mov
lahf
mov
sbb
push
pop
pusha
sbb
sbb
aas
icebp
sub
nop
pop
test
gs
push
shl
(bad)
or
adc
bnd
inc
add
dec
push
je
dec
dec
cmp
int
push
inc
arpl
neg
aad
adc
push
pop
retf
loop
in
mov
hlt
jbe
cld
add
jbe
ins
push
cmp
sub
mov
pop
pop
add
aam
jg
adc
mov
xor
xchg
test
dec
pop
sub
ss
aas
mov
add
out
test
push
xchg
push
dec
push
lods
mov
outs
dec
js
fs
inc
push
out
leave
adc
pushf
pop
cmp
pusha
mov
dec
dec
pusha
cs
loopne
pusha
(bad)
push
and
pushf
aas
xlat
dec
in
imul
(bad)
jg
xor
sub
ins
mov
xchg
(bad)
movs
lahf
lahf
test
add
xor
call
sbb
push
(bad)
pushf
iret
fisub
les
pop
ds
comiss
mov
inc
popa
(bad)
lods
aad
lods
jg
inc
int
sbb
dec
call
sbb
mov
in
xchg
mov
scas
js
imul
xchg
sbb
sub
xor
(bad)
cmp
and
sahf
dec
pop
inc
das
adc
inc
jno
imul
sub
cmp
push
adc
xor
inc
ds
push
cmp
xchg
xchg
dec
pop
out
xchg
push
dec
call
xor
add
sub
icebp
or
push
pop
inc
and
pop
cmp
sbb
outs
test
stos
xchg
outs
and
sbb
inc
fmul
adc
ror
je
packssdw
push
xchg
adc
(bad)
xor
or
xor
punpcklbw
mov
dec
cmp
xchg
xor
aas
mov
or
stos
xor
and
dec
mov
sbb
sub
sub
xchg
mov
dec
pop
push
pop
pop
dec
cmp
pop
je
arpl
dec
mov
jmp
mov
cmp
stos
mov
or
pusha
pop
xor
in
ins
inc
call
inc
js
dec
enter
mov
xor
in
sbb
pop
push
or
inc
or
sbb
adc
xchg
movs
das
imul
xchg
xor
outs
xor
mov
imul
pop
cdq
mov
adc
jl
pushw
adc
popa
push
(bad)
dec
add
sub
ret
pushf
imul
add
inc
inc
das
push
push
pop
sub
push
je
xchg
mov
inc
into
add
aam
cmp
pop
shl
and
add
retf
sub
dec
cwde
sbb
xchg
or
das
fisubr
sbb
pop
fcom
sbb
int3
sub
mov
add
push
sbb
jo
js
js
xchg
lock
inc
mov
sbb
xchg
xor
push
push
lods
das
or
jp
lock
mov
aas
sbb
xor
fcom
sub
inc
adc
jnp
lds
and
lock
test
push
sti
mov
pusha
retf
pop
cmps
add
mov
push
cmp
mov
repnz
add
inc
adc
cdq
cmp
or
repz
pop
push
xor
daa
pop
sbb
pop
rcl
sub
add
ss
(bad)
xchg
push
fldcw
xchg
add
mov
add
nop
ds
mov
push
dec
call
not
test
bound
sbb
mov
stos
test
push
dec
push
pop
or
mov
jl
xor
or
es
aad
add
test
sbb
pop
hlt
call
stc
outs
mov
fsub
mov
loop
inc
sar
ss
loope
xlat
add
push
mov
movs
pusha
js
imul
popa
repnz
xchg
xor
les
pop
lods
scas
jp
jecxz
xchg
jg
addr16
pop
mov
inc
mov
dec
clc
mov
es
mov
ret
sub
hlt
pop
cmp
xor
mov
mov
ins
fs
mov
bound
jmp
adc
push
addr16
sbb
xor
pop
push
or
push
adc
mov
dec
jmp
lock
adc
sbb
push
or
mov
dec
lock
mov
mov
xor
pop
mov
adc
xchg
nop
hlt
mov
jecxz
push
es
popa
daa
mov
(bad)
cmp
inc
jecxz
pop
push
arpl
cmp
sub
into
and
cmps
mov
cld
jb
jne
jp
sbb
add
push
jae
jno
pop
inc
jo
and
ins
fs
ror
add
dec
push
add
mov
add
add
movs
push
push
and
jl
push
mov
and
jl
repz
xor
sbb
int3
enter
call
lahf
jo
stc
outs
int3
add
add
pop
cmp
inc
loopne
inc
shl
repnz
pop
adc
adc
mov
adc
or
push
clc
inc
aam
loopne
lea
xor
sub
pop
xor
pop
stos
and
jmp
cli
mov
movs
xchg
push
or
mov
or
add
mov
(bad)
stc
lea
inc
adc
sbb
retf
cmps
sub
mov
push
mov
mov
dec
iret
repz
je
mov
sti
add
cdq
cld
jp
(bad)
bound
sbb
mov
or
shl
int3
loop
xor
mov
jl
mov
mov
add
jge
mov
add
fimul
inc
add
pop
push
pusha
cmc
push
test
enter
push
call
add
leave
mov
test
mov
sub
icebp
push
mov
jecxz
push
and
scas
(bad)
out
add
clc
mov
push
mov
push
in
out
push
in
or
dec
xchg
js
mov
not
xchg
lods
cmp
fistp
add
sub
nop
xlat
(bad)
dec
or
or
sbb
cmc
sub
sbb
jb
stos
aaa
pop
jle
pop
jae
or
arpl
mov
stos
xor
inc
aad
loopne
(bad)
pop
and
xor
lods
outs
icebp
jg
and
add
div
push
aas
(bad)
pop
fcom
xchg
cmps
lea
call
push
jle
add
sub
mov
je
je
jns
jl
hlt
mov
hlt
xchg
and
xchg
mov
cmps
add
push
pusha
nop
xchg
pop
rol
jmp
or
mov
aaa
xor
add
dec
or
inc
pusha
daa
ficom
daa
add
popa
fiadd
pop
pop
pushf
add
mov
aaa
test
xor
jae
call
adc
xor
and
ss
mov
or
clc
add
fsubr
jae
lahf
pusha
sbb
lahf
call
in
dec
in
push
cdq
sub
mov
rol
or
std
inc
push
xchg
imul
ja
pop
pop
mov
mov
jle
fldcw
sbb
dec
in
mov
pop
ret
mov
add
jb
shl
add
mov
lea
addr16
push
jg
cmp
or
out
dec
sbb
inc
and
push
mov
fisttp
push
jne
sti
push
pop
in
fild
jbe
mov
push
enter
leave
hlt
mov
push
mov
or
out
or
or
cmp
or
clc
sub
shl
jge
pop
nop
pop
retf
xor
sub
cmp
sub
adc
sbb
mov
jge
loope
mov
ret
retf
popa
pop
jle
mov
sub
mov
out
pop
or
inc
pop
add
rol
fs
pusha
mov
ins
push
mov
sbb
cmp
mov
cmp
(bad)
daa
fwait
loope
pusha
imul
jne
mov
lea
pop
sub
lea
and
pop
xchg
mov
jge
ret
imul
xor
cmp
shl
mov
fcmovnb
cs
lea
inc
sar
add
push
pusha
ja
sub
(bad)
sbb
je
jne
out
xchg
or
push
mov
and
dec
dec
cwde
mov
and
push
iret
imul
cmp
mov
movs
mov
inc
shr
dec
add
inc
jno
leave
or
movs
dec
pop
add
adc
jo
inc
and
mov
cmp
and
and
test
pop
mov
gs
js
sub
adc
ins
sub
adc
adc
adc
pop
rcl
(bad)
imul
dec
mov
rol
mov
lds
call
jo
push
jmp
aas
push
lea
shl
int
pop
movs
int
or
jmp
push
sbb
add
lea
mov
retf
cmp
pop
pop
xchg
frstor
inc
fwait
push
push
fmul
pop
call
inc
adc
mov
sub
shl
stos
pop
mov
xchg
or
add
pop
xor
shl
stos
mov
pop
enter
jp
xchg
mov
pusha
loopne
psubsb
jge
pop
add
dec
push
retf
pop
add
mov
cmps
adc
shl
test
ficom
retf
std
gs
out
add
in
cmp
iret
les
clc
fimul
mov
(bad)
mov
shl
fsub
dec
dec
xor
mov
lock
mov
add
xchg
mul
xor
jbe
ror
xchg
push
push
add
sbb
clc
dec
mov
call
cdq
add
add
fmul
fwait
stc
movs
push
aam
icebp
mov
out
pop
mov
les
and
pop
sbb
rep
push
and
push
adc
test
push
mov
or
pushf
pop
add
fisubr
adc
and
jne
jns
movs
mov
jo
sbb
rol
les
jp
setg
aad
inc
gs
push
repnz
jle
or
sbb
add
push
or
xchg
dec
cmp
push
inc
enter
xor
push
cs
and
push
nop
and
mov
push
add
xor
push
push
int
and
push
push
push
push
jle
aas
repnz
ins
or
push
push
mov
push
call
nop
inc
push
jb
xor
in
xchg
and
pop
and
push
push
push
or
or
jo
jns
push
inc
pop
sub
push
ficom
or
jge
adc
dec
in
call
and
add
xchg
xchg
and
push
nop
add
dec
test
xchg
mov
add
sbb
std
call
loopne
add
push
xchg
(bad)
add
add
arpl
mov
mov
mov
fmul
adc
test
sahf
pop
rcl
ds
dec
sbb
jl
mov
xor
adc
pop
or
dec
cwde
xor
push
call
dec
sub
test
std
inc
or
dec
push
ds
mov
sbb
fimul
sbb
retf
inc
jmp
add
idiv
xchg
and
imul
sub
(bad)
jecxz
sbb
daa
or
or
mov
sbb
inc
cmc
sub
inc
mov
jne
rol
dec
adc
push
sbb
lods
or
lods
xchg
jp
xor
jmp
popf
retf
pop
sbb
cmp
or
dec
jbe
test
sub
mov
adc
pusha
pop
daa
(bad)
repz
imul
cmp
ss
xor
movs
adc
cmps
sub
adc
cmp
dec
lea
push
gs
add
and
dec
add
mov
mov
imul
sub
jp
add
push
adc
je
rol
adc
and
add
add
cmp
div
sub
pop
mov
hlt
xchg
cmps
(bad)
push
les
mov
push
call
lods
xor
sbb
cmp
push
xchg
jo
xchg
xchg
mov
inc
rcr
and
and
out
or
loop
enter
sbb
push
enter
add
test
sub
fisttp
(bad)
dec
test
xchg
cmps
xchg
and
mov
sahf
xchg
sbb
jg
nop
sub
or
mov
inc
or
mov
les
mov
pop
repnz
jne
jg
sbb
sub
sbb
jg
test
and
push
jg
imul
outs
cmp
jbe
cld
cmp
jle
(bad)
sbb
and
xor
imul
inc
xchg
popf
add
(bad)
stos
pop
inc
dec
pop
or
adc
stos
or
in
movs
add
mov
inc
or
adc
ror
cmps
add
jp
sub
cmp
adc
pop
xor
xor
call
call
xor
mov
add
dec
and
inc
xor
mov
inc
mov
cli
xchg
sub
and
popf
data16
outs
xchg
cmp
fwait
adc
cmp
add
hlt
dec
add
sub
sub
adc
ja
mov
idiv
push
sbb
sbb
jge
ret
lea
(bad)
call
dec
mov
xchg
push
scas
je
mov
mov
call
or
jb
xchg
xchg
xor
cdq
jo
jo
movs
pop
or
je
adc
inc
push
jo
call
dec
push
call
inc
xor
add
sahf
jl
sbb
adc
ror
push
jbe
xor
xor
rdmsr
sahf
dec
mov
mov
ins
fistp
enter
adc
call
lea
sub
call
add
sbb
and
push
push
push
sub
jo
jae
add
xchg
push
enter
and
sub
inc
enter
lods
je
lods
in
dec
xchg
je
sub
add
call
xlat
sub
mov
jle
loope
cwde
mov
mov
je
push
pusha
adc
add
popa
adc
sub
imul
ror
push
push
pop
rol
pop
sub
fs
outs
sub
pop
sub
push
adc
xor
sub
mov
outs
cwde
adc
add
cmps
inc
mov
sub
in
sub
xor
adc
mov
sbb
scas
push
add
push
adc
cli
jne
xchg
push
scas
or
cdq
mov
aad
ss
push
xchg
out
add
jo
or
adc
xchg
aad
inc
pop
push
mov
mov
inc
jmp
out
lea
fmul
and
inc
mul
std
dec
ret
pop
ud2
dec
mov
jmp
xchg
movs
inc
mov
and
and
jno
pop
and
(bad)
sub
movs
enter
jg
jno
nop
xchg
inc
mov
sub
retf
sbb
or
cmp
sbb
stc
add
es
call
push
jb
sbb
in
fstp
in
sub
lds
lods
pop
jns
mov
or
in
inc
and
and
mov
in
push
and
fs
popa
xchg
sbb
into
adc
jp
add
jae
xchg
inc
add
cld
scas
stc
and
pop
(bad)
and
add
in
inc
and
inc
pop
leave
and
push
ins
pop
or
inc
jmp
aam
test
call
sub
pop
clc
jbe
cmp
adc
bnd
sub
call
xor
mov
test
out
jae
pop
les
push
push
fisttp
lea
adc
int
cmp
sbb
call
or
imul
(bad)
cmp
jmp
xchg
cmps
add
xchg
mov
aaa
leave
adc
int
and
pop
inc
dec
add
rcr
and
push
xor
adc
lock
jmp
pop
push
retf
call
not
xor
add
ss
cmp
lods
aas
test
jns
adc
and
add
xchg
jecxz
clc
jmp
rol
stos
fsubp
in
or
jle
jns
fwait
add
sub
add
nop
and
arpl
jne
test
nop
mov
call
xchg
push
std
or
xor
and
pop
call
or
mov
sub
not
add
dec
sbb
and
fsubr
pop
loop
retf
pop
stos
adc
add
sub
mov
sti
xor
sub
jbe
mov
and
push
not
pop
pop
mov
add
jp
cmps
mov
inc
jle
ror
xchg
pop
inc
sbb
add
sub
lahf
inc
jge
jle
jp
inc
sbb
ja
or
push
mov
add
fsubr
add
cmp
push
lods
mov
scas
and
xchg
ret
pop
adc
jmp
inc
sbb
in
dec
int3
(bad)
loope
jo
popf
xchg
cld
adc
xchg
rol
fcom
pop
cmp
pop
popa
sbb
add
int3
push
gs
test
retf
in
xor
jle
sbb
sbb
in
or
mov
in
cmp
and
and
pop
enter
xor
call
add
loopne
pop
lahf
or
add
ss
pop
adc
pop
call
fwait
jb
popa
or
mov
(bad)
mov
sbb
adc
mov
adc
push
add
sbb
lds
sbb
jle
mov
fist
push
mov
jb
(bad)
in
adc
add
xor
fst
dec
add
xchg
pop
sbb
xlat
jnp
add
push
and
in
pop
push
sub
inc
sahf
xchg
and
adc
jo
and
push
stos
or
daa
nop
imul
adc
stc
test
call
cmps
mov
scas
add
mov
push
and
sub
jle
movs
(bad)
(bad)
(bad)
inc
add
test
std
outs
std
add
repz
mov
and
pop
and
int3
xor
push
push
stos
adc
sar
nop
in
push
push
push
jb
push
and
call
or
push
and
cdq
dec
(bad)
jns
adc
daa
ins
std
push
cld
call
xor
mov
push
push
add
and
mov
jmp
data16
add
pop
inc
and
add
xor
xor
sub
adc
jg
shr
cmp
loope
mov
pusha
add
call
xor
les
mul
adc
dec
cmp
movs
ror
cmps
push
add
or
inc
pop
movs
das
jl
mov
jo
adc
push
and
daa
sbb
or
aaa
jbe
xor
sub
jl
and
(bad)
pop
shl
fld
add
mov
cdq
call
fidivr
xor
mov
dec
pop
in
mov
cmp
stc
xchg
push
push
sub
xchg
add
add
in
repnz
test
call
push
add
popa
fnstenv
push
jmp
shl
call
movs
jle
test
jbe
cdq
int
enter
sub
jl
cdq
mov
lods
les
sub
adc
call
cmp
push
pushf
aas
in
dec
inc
and
mov
or
push
fsub
leave
add
add
gs
sbb
nop
pop
repnz
pop
sbb
enter
jmp
sbb
sub
sub
jb
sub
xor
enter
add
sub
inc
jb
sub
es
retf
add
xchg
or
inc
sub
sub
add
xchg
jg
call
push
sub
pop
sub
call
and
or
jb
sbb
sub
add
scas
nop
sub
sub
movups
or
sub
add
sub
or
dec
sahf
or
pop
add
(bad)
mov
mov
inc
std
push
out
sbb
shl
inc
rcl
xchg
push
add
dec
stos
pusha
dec
or
jg
cmp
out
lds
dec
sar
fs
or
repz
popa
pop
and
push
push
or
mov
je
in
sub
xor
sub
mov
jno
cmp
inc
test
fcmovnu
jmp
and
mov
mov
mov
xor
je
jmp
inc
xchg
sub
cmp
sub
cmc
xlat
daa
pop
sbb
repz
or
aas
test
mov
ins
jg
cmc
test
sahf
cmp
or
jno
mov
or
ror
push
mov
sbb
pop
pop
popa
ins
out
inc
cmps
add
or
inc
adc
sub
sub
sub
sub
sub
mov
addps
add
sub
and
sub
sub
push
jb
sub
add
cmps
pop
xchg
mov
mov
pop
fcomp
mov
out
dec
test
je
call
sub
dec
push
push
push
push
rcl
bnd
mov
push
pop
call
push
cmp
and
bound
xor
adc
fcomp
push
rcr
repnz
pop
in
mov
je
or
jb
jg
or
push
js
adc
sbb
into
(bad)
(bad)
mov
push
test
push
nop
ret
fstp
in
jo
add
(bad)
pop
retf
add
push
push
pop
add
push
push
push
mov
push
or
pop
sub
das
in
dec
dec
mov
inc
push
fwait
loope
pop
sub
xor
xchg
dec
jb
sub
mov
push
sub
dec
sub
inc
jb
sub
and
fwait
retf
lock
jmp
jae
enter
sub
stc
sub
sub
sub
xchg
mov
cmp
sub
sub
in
push
sub
in
pushf
sub
sub
sub
out
(bad)
jmp
cmp
push
sub
enter
ror
dec
adc
mov
in
push
dec
lahf
mov
pop
mov
sub
sbb
pop
sbb
sub
cmp
push
adc
leave
sub
cld
push
push
call
sbb
mov
aam
dec
lahf
ds
or
or
out
pop
pop
pop
sahf
frstor
pop
call
push
movs
call
mov
inc
inc
dec
xchg
fmul
pop
sbb
popa
push
sub
sub
cs
add
nop
xchg
inc
sub
add
jb
push
push
rcl
pop
xor
sub
add
sub
ins
pop
outs
fst
shl
and
dec
add
adc
aaa
push
jnp
add
adc
je
sub
call
es
std
fdivp
jp
pop
cmp
pop
imul
adc
in
lods
xor
push
dec
adc
stos
or
dec
add
call
push
loop
add
add
bound
xchg
adc
mov
push
shr
mov
and
fsubr
mov
pop
js
aas
add
out
sbb
inc
push
mov
in
lea
pop
into
sbb
mov
xor
sub
dec
dec
push
repz
sub
cmp
sub
sub
inc
add
mov
into
mov
pop
lea
push
sbb
ficomp
in
dec
add
push
sub
sbb
push
ret
add
mov
cmps
pusha
test
mov
in
jl
dec
add
cld
push
or
mov
arpl
inc
push
mov
mov
jmp
sub
or
div
dec
outs
call
dec
not
xchg
hlt
repz
in
enter
inc
jne
test
or
xor
ficomp
(bad)
lds
and
adc
and
sbb
idiv
repz
add
add
or
lock
add
inc
ret
add
add
mov
out
sub
adc
and
push
pop
bound
and
and
pop
ds
dec
xor
sbb
ret
call
adc
add
sahf
gs
sti
mov
push
jmp
xchg
clc
push
enter
fldcw
fwait
push
mov
xor
cmps
or
stc
pop
mov
ror
inc
adc
adc
add
sar
(bad)
cli
sub
add
mov
lock
test
push
push
push
das
mov
leave
clc
inc
movs
mov
inc
(bad)
popf
ins
and
jge
cmp
dec
cld
sbb
add
and
cmp
mov
popf
pop
ins
cmp
pushf
push
push
push
jecxz
leave
leave
call
enter
adc
icebp
push
inc
add
icebp
and
sar
in
jne
mov
mov
add
loopne
or
sbb
mov
les
jmp
mov
inc
or
adc
lds
adc
mov
in
xor
into
mov
sub
(bad)
mov
add
cmp
fist
inc
cld
push
jbe
stc
or
or
call
adc
cmp
addr16
test
ret
jno
inc
cwde
jnp
imul
sub
mov
or
pop
(bad)
adc
or
sahf
fadd
jl
or
xor
sbb
push
mov
mov
fdiv
and
adc
stos
or
adc
jl
add
xchg
iret
sub
sub
cmp
hlt
test
imul
adc
call
adc
and
cmp
lods
push
scas
rcl
lods
dec
shr
movs
pop
aam
pop
jl
sbb
add
jle
enter
rcr
mov
adc
ret
jle
push
xchg
out
retf
adc
aad
or
push
imul
ss
aas
sub
cmc
shr
xchg
ror
cmp
sub
adc
jmp
(bad)
js
jo
jl
jle
lea
sub
outs
ret
pop
int
js
cli
sbb
and
cmps
xchg
xor
imul
pusha
jg
cmp
lea
adc
das
jl
lods
adc
pop
sub
(bad)
retf
push
add
or
push
mov
std
(bad)
nop
int3
xlat
outs
adc
sub
dec
add
sub
mov
or
xlat
retf
bound
lods
sub
cmp
psraw
xlat
adc
loopne
rcl
fmul
jae
and
(bad)
loope
and
(bad)
sub
addr16
enter
push
iret
adc
out
movs
xchg
or
adc
lods
or
adc
add
inc
pop
mov
xor
add
sbb
jb
mov
mov
pop
js
cwde
sub
pusha
mov
rcl
pusha
jae
(bad)
retf
cmp
pushf
jbe
push
out
fadd
sbb
lock
inc
cmp
pop
call
sbb
aas
push
add
mov
mov
xchg
test
aam
cmp
ja
das
inc
outs
adc
fs
imul
popf
out
ja
push
adc
mov
mov
dec
inc
push
dec
push
popa
adc
sbb
mov
popa
dec
cmp
dec
in
jmp
arpl
xchg
push
xor
enter
das
sahf
imul
xor
daa
movs
or
jmp
out
das
pushf
xor
mov
mul
sub
popf
lods
push
push
or
aaa
call
mov
cmp
inc
add
cmps
std
or
(bad)
fsubr
push
and
inc
(bad)
repz
lea
push
cdq
xor
add
and
xchg
stc
test
pop
push
sbb
push
rcr
xchg
in
int
mov
push
mov
fstp
or
(bad)
fistp
mov
mov
xchg
xor
pop
in
xchg
mov
cld
inc
loopne
call
sbb
mov
fs
xor
push
sbb
jp
or
arpl
aaa
leave
imul
imul
and
mov
inc
jg
fs
rcl
add
mov
add
scas
mov
xchg
jb
mov
ss
pop
cmc
pushf
push
(bad)
rol
mov
movs
sbb
push
mov
or
popa
ins
dec
jecxz
mov
shl
inc
cmp
xchg
outs
or
dec
test
mov
(bad)
addr16
mov
lods
rcr
xlat
fucomp
jnp
imul
xchg
adc
(bad)
inc
pop
mov
push
sub
mov
lds
adc
movs
or
movs
popa
add
or
push
mov
popf
sub
inc
adc
and
cwde
jb
xor
cwde
pop
pop
add
(bad)
retf
aam
push
push
clc
add
loope
mov
je
add
xor
and
mov
or
mov
cmp
push
or
jo
mov
call
fmul
jbe
inc
sub
mov
push
je
add
inc
ds
test
push
xor
shl
add
mov
fisttp
add
jl
and
cli
dec
sbb
movs
jge
sbb
add
sub
sbb
add
mov
inc
adc
out
sbb
pop
dec
cs
cli
jge
adc
stos
call
push
pop
outs
lahf
push
add
xchg
sub
mov
jne
xlat
add
aas
sahf
inc
inc
xlat
mov
sbb
pop
add
test
imul
cwde
or
push
sub
fdiv
cmp
push
adc
sub
popa
sbb
dec
add
cli
pop
xchg
push
or
sbb
pop
imul
and
xchg
mov
dec
add
fistp
dec
add
mov
(bad)
call
mov
ret
(bad)
mov
xchg
dec
lahf
call
retf
mov
fsub
popf
add
push
cld
pop
fs
dec
xor
les
pop
xchg
cmps
jno
and
or
stos
add
retf
scas
test
dec
in
outs
mov
or
jnp
jbe
popa
adc
inc
xlat
sub
rcl
push
inc
push
sub
loopne
xor
call
pop
or
xchg
jne
sub
sbb
mov
mov
inc
mov
sbb
mov
dec
adc
push
pop
inc
jmp
ja
in
or
or
mov
mov
push
cmp
sub
mov
shr
in
imul
mov
adc
mov
(bad)
mov
fsub
(bad)
out
add
push
ds
fisub
call
test
push
cmp
cmp
repnz
int3
sbb
adc
mov
lea
push
and
xchg
outs
push
or
mov
into
dec
jns
inc
jo
call
sub
jo
pop
xor
inc
jo
push
shr
cmp
xchg
mov
cmc
ret
cmp
loop
mov
pop
imul
xchg
push
pusha
jmp
xor
les
add
push
pop
xlat
or
mov
out
jl
or
or
jo
push
pop
and
fistp
pop
iret
add
or
pop
adc
mov
mov
push
jne
xor
and
jb
fmul
das
jnp
aaa
push
retf
sbb
inc
sbb
repnz
cmps
clc
or
sbb
cmp
mov
adc
les
pusha
add
pushf
adc
in
adc
inc
pop
xchg
fldcw
dec
out
pop
je
and
add
sti
pop
xor
mov
mov
add
clc
jl
cmp
push
mov
xor
nop
pusha
adc
pop
mov
jae
mov
cmp
pusha
out
lods
sti
inc
cmp
mov
pop
outs
xor
stos
imul
outs
mov
push
or
call
sbb
call
pop
outs
cmps
nop
mov
dec
xor
add
cwde
sti
shl
imul
shl
xchg
mov
inc
shl
int
jno
fld
in
call
xchg
in
and
xchg
lea
retf
int
test
mov
dec
sub
add
and
push
and
push
or
sahf
mov
sar
jne
pushfw
and
pop
and
(bad)
pop
call
and
jmp
adc
(bad)
jmp
xlat
loope
mov
inc
jo
and
mov
stos
lods
pop
inc
popa
mov
mov
sbb
stos
adc
loopne
jb
push
stc
inc
ror
sub
mov
and
outs
mov
inc
or
pop
sbb
and
sub
push
push
mov
arpl
dec
mov
es
mov
imul
and
loope
sbb
call
xor
cmp
mov
inc
sub
call
ss
add
cmp
sbb
push
or
ss
enter
loopne
sahf
cwde
push
add
popa
push
dec
inc
fimul
or
push
and
mov
leave
je
fnstenv
mov
sbb
push
pop
add
xchg
jne
push
sub
js
push
mov
sbb
inc
dec
rcr
or
sbb
sub
fild
arpl
xchg
jg
sbb
les
mov
ins
cmp
add
(bad)
sbb
nop
pop
aad
cmp
cvtpi2ps
fs
push
add
ss
and
shr
and
inc
xchg
and
jmp
outs
push
(bad)
faddp
mov
xchg
push
sbb
mov
scas
pushf
mov
repnz
adc
ins
pop
xor
and
mov
mov
ror
(bad)
mov
lods
popa
xor
inc
dec
or
mov
mov
sub
dec
pop
(bad)
mov
xchg
(bad)
dec
ret
outs
stos
popf
shl
or
mov
add
std
and
mov
push
add
or
jmp
add
xor
mov
jl
aas
add
shl
add
int3
push
add
repz
or
xor
push
push
add
cmp
dec
or
rol
jmp
xchg
aad
jo
cmp
scas
lahf
and
sbb
and
cmp
mov
push
cli
mov
jp
ins
or
cmp
jmp
and
mov
jmp
sbb
and
add
mov
jle
shl
in
cmp
mov
push
mov
shl
add
test
out
sbb
sbb
or
dec
push
jae
mov
push
adc
or
and
jne
xchg
(bad)
out
xchg
adc
fidiv
mov
lahf
mov
pushf
or
cmp
mov
loope
lahf
mov
push
pop
mov
outs
or
xor
mov
and
dec
lock
test
mov
mov
sub
push
adc
ror
add
mov
and
mov
out
mov
(bad)
mov
dec
bound
add
pop
mov
fild
je
pop
xchg
fucomip
mov
push
fnstenv
out
clc
mov
push
adc
nop
xchg
lahf
and
mov
push
js
ror
cmp
push
add
(bad)
ds
retf
mov
popa
stos
stos
xchg
test
and
(bad)
and
pop
pusha
retf
jmp
mov
ror
jecxz
mov
sub
lods
sbb
stos
dec
arpl
leave
jo
lods
inc
mov
pop
mov
sbb
push
test
fstp
jmp
or
pop
adc
inc
retf
cld
sbb
cmp
pop
xor
push
jp
jecxz
pushf
fadd
call
sub
cmps
sub
pop
je
sub
xchg
xor
or
adc
dec
push
inc
and
rcl
cmp
test
push
cmp
mul
cmc
adc
push
adc
retf
sahf
test
ror
aas
pop
add
and
and
mov
dec
loopne
daa
dec
aad
or
int
mov
push
inc
dec
sub
lock
fwait
inc
mov
inc
inc
cld
not
add
es
lods
mov
jle
cmp
iret
out
lds
add
fbstp
cmp
xor
imul
loopne
jmp
call
inc
sub
sbb
xchg
xor
push
sbb
mov
xchg
movs
shr
ss
add
and
in
push
push
mov
(bad)
adc
and
sar
or
mov
mov
xchg
js
leave
adc
adc
sub
repz
dec
mov
mov
adc
ins
add
add
imul
cmc
adc
add
or
sbb
push
xor
cmp
gs
adc
dec
pop
jo
add
adc
je
outs
test
push
cmps
push
cmp
sub
call
mov
sar
ja
sub
adc
mov
mov
xor
adc
and
push
cmp
sub
std
(bad)
std
call
and
jg
call
adc
dec
and
outs
pusha
cld
xlat
xchg
and
or
(bad)
into
inc
push
es
ret
into
push
sub
dec
movs
sbb
xor
dec
out
or
std
adc
ja
lock
out
test
xor
inc
push
je
xchg
xchg
push
sbb
push
lds
jge
push
enter
popf
iret
sbb
lods
cmp
inc
cmp
icebp
or
xor
add
sbb
pop
ret
inc
adc
pop
enter
and
test
and
push
xchg
scas
scas
bound
pop
jnp
xchg
mov
int
jno
loop
mov
jmp
adc
pop
test
add
jmp
movs
sub
adc
sar
mov
and
push
enter
push
add
das
sub
add
mov
test
inc
sbb
mov
sbb
repnz
stc
jns
popa
push
pop
test
into
movs
adc
out
sub
ins
push
push
in
ins
push
dec
addr16
ins
lea
nop
mov
sub
in
loope
ss
xchg
jb
mov
mov
cmp
hlt
popf
mul
xchg
sbb
jo
scas
push
jmp
movs
mov
or
inc
shl
std
or
xchg
add
cwde
mov
or
and
scas
jmp
bound
jg
jno
setb
sub
dec
mov
sub
jmp
clc
or
add
mov
ins
cmp
mov
mov
iret
call
mov
stos
add
leave
inc
sbb
jmp
arpl
add
adc
xor
cmps
xor
call
or
aas
ret
xchg
dec
inc
icebp
es
add
mov
ss
xlat
or
jecxz
neg
aam
add
xchg
lds
(bad)
sub
jne
jmp
and
imul
nop
es
push
mov
sub
jmp
ret
jno
cmp
cs
mov
sbb
add
out
fstp
or
das
lahf
jae
sub
jo
sub
inc
xchg
call
stos
inc
adc
nop
dec
jb
data16
call
jne
dec
dec
shl
mov
pop
jb
add
xchg
jl
or
push
fstp
push
add
inc
xchg
sub
stos
mov
add
test
adc
ret
and
add
push
(bad)
fstp
shl
cmps
add
lock
scas
and
ja
jo
jbe
push
imul
push
mov
jnp
sbb
mov
sub
outs
inc
ret
rol
push
xchg
(bad)
push
lea
idiv
shl
imul
clc
shl
fisttp
add
fidivr
add
lea
cs
jp
adc
iret
jecxz
inc
outs
add
clc
and
or
movs
imul
pop
mov
bound
adc
lds
movs
fwait
test
mov
shl
(bad)
and
xlat
mov
pop
lea
and
lea
mov
push
inc
add
dec
sub
sahf
mov
add
adc
lock
xlat
add
pop
repnz
or
arpl
or
adc
inc
inc
std
add
jae
sbb
test
fisttp
ret
rcr
aas
or
inc
pusha
fcom
mov
mov
or
adc
into
add
(bad)
mov
push
ja
imul
xchg
sti
mov
dec
inc
mov
or
xchg
adc
and
retf
xor
mov
dec
scas
dec
into
mov
test
jl
pop
cmps
pop
add
mov
test
add
inc
jp
sbb
dec
lock
pop
(bad)
push
imul
and
ss
xchg
mov
movs
or
in
into
out
sbb
sbb
xchg
sbb
add
ret
dec
pop
xor
out
cmp
and
mov
or
sub
xchg
inc
or
inc
push
push
push
scas
sbb
ret
sar
push
loop
rcr
push
dec
push
dec
or
push
adc
xor
aas
ss
adc
pop
xor
push
pop
jae
add
sub
push
fisub
sbb
xchg
shr
pop
push
push
mov
xchg
movs
mov
lock
mov
cmp
out
pushf
cs
and
sub
cmp
repz
cmp
inc
inc
sub
repz
dec
push
push
pop
sbb
mov
fdivr
cs
xchg
sub
or
inc
jae
pushf
push
cmps
or
clc
test
call
stos
cmp
ja
ds
lahf
sbb
sti
jns
(bad)
cmp
push
sar
or
xchg
cmps
mov
push
adc
not
shl
pop
mov
pop
das
or
pop
movzx
pop
push
mov
adc
mov
ja
mov
arpl
outs
mov
dec
mov
jmp
pusha
mov
ss
lock
mov
push
or
mov
push
and
dec
lahf
pushf
call
dec
mov
cmc
pop
dec
je
nop
cmp
call
mov
push
sbb
and
pusha
sar
adc
jae
mov
call
ss
arpl
jns
out
sbb
call
data16
jle
or
push
or
jno
pop
ss
mov
mov
mov
sbb
xchg
mov
mov
nop
adc
fs
sar
clc
cmp
mov
mov
push
or
cmp
inc
adc
pop
pop
add
bound
int
push
lods
daa
mov
nop
aas
test
mov
test
pop
sbb
dec
add
pop
pop
outs
dec
je
div
js
das
and
ins
mov
sbb
movs
repz
or
add
movs
pop
arpl
sub
push
sub
or
sub
scas
dec
adc
ror
jo
(bad)
push
(bad)
out
out
add
jmp
mov
push
lea
call
test
inc
shl
fsubp
rcl
inc
lock
dec
add
retf
inc
or
mov
ins
in
xchg
fild
sub
cmp
dec
and
sub
xchg
and
jl
mov
sbb
jb
cmp
fmul
and
dec
call
outs
cmp
enter
and
cmp
sbb
inc
popf
push
ins
push
and
mov
pcmpeqb
jl
lahf
push
xchg
xchg
rep
adc
cmp
mov
mov
iret
enter
xchg
lock
and
cmp
mov
add
xor
add
jb
or
xor
sbb
add
pushf
cmps
xor
mov
rcr
mov
push
mov
mov
movs
bswap
or
out
pop
loopne
leave
push
lahf
jo
jmp
inc
sbb
adc
mov
sahf
lea
clc
add
mov
add
bnd
ds
inc
push
push
lahf
test
aaa
add
adc
cmp
ficom
and
(bad)
sub
(bad)
adc
rol
sar
xor
lods
push
xchg
cmp
pushf
jmp
pop
stos
jns
test
cdq
inc
adc
or
add
scas
xchg
rcr
or
sub
in
add
add
addr16
ins
add
and
je
pop
sub
stos
jo
push
sub
push
dec
loop
add
jno
call
jp
push
push
aad
mov
sub
pusha
dec
mov
dec
mov
push
pop
popa
cmp
jno
mov
push
and
pop
aam
loope
and
fdiv
mov
push
and
jae
sahf
test
cld
hlt
mov
mov
mov
lds
add
or
push
inc
xor
or
push
or
fbld
rcl
out
cmp
stos
js
pop
or
push
lds
es
push
xor
repnz
shr
out
mov
inc
aaa
push
out
jnp
push
cmp
xor
icebp
mov
mov
aaa
lahf
or
mov
dec
(bad)
jmp
and
ret
push
push
or
or
pop
daa
test
cmp
mov
js
ret
imul
inc
call
jge
adc
iret
jne
pop
fadd
fidivr
je
cdq
push
or
(bad)
in
jmp
pop
lods
mov
xchg
and
xlat
gs
cmps
or
add
xchg
call
lock
inc
daa
dec
pop
mov
pop
xchg
movs
pop
or
sbb
xchg
outs
pop
movs
xchg
inc
jl
adc
mov
cmp
mov
daa
popf
ss
dec
push
xchg
test
adc
add
aad
xlat
mov
or
sbb
movs
retf
in
add
call
test
inc
nop
or
cwde
xchg
pop
sbb
mov
fs
pop
inc
sbb
add
test
dec
dec
cmp
pop
sub
adc
stos
dec
ror
dec
xchg
xor
pushf
cmp
aad
push
xchg
int
dec
lods
mov
add
sub
pop
jns
cmp
sbb
adc
inc
pop
push
and
pop
sbb
outs
ds
mov
imul
stos
nop
sub
pop
sub
adc
xor
adc
pop
iret
dec
push
pop
jecxz
fmul
pop
enter
nop
dec
cmp
adc
push
fimul
int
inc
or
xor
sub
add
daa
mov
cs
or
lods
pop
and
sbb
jo
add
nop
pushf
mov
cmp
xchg
sub
push
ins
and
adc
jmp
and
inc
jmp
push
and
push
ret
aas
add
adc
mov
push
push
fs
jge
scas
xor
adc
out
xchg
aas
add
adc
inc
mov
and
adc
adc
push
dec
ds
adc
scas
pop
jns
nop
adc
pop
xor
aas
add
adc
loop
rol
inc
lods
mov
retf
xchg
jl
mov
pusha
loop
inc
repnz
jno
mov
adc
push
mov
inc
pop
test
pop
cmp
pop
xchg
xor
cmp
adc
repnz
push
enter
inc
push
push
cmp
(bad)
adc
add
push
xor
adc
or
stos
inc
jbe
jo
repnz
aas
jns
dec
add
push
push
push
add
push
adc
add
jbe
cmp
add
sysexit
inc
and
enter
adc
rol
repz
leave
sti
push
push
push
inc
or
enter
inc
jns
cld
inc
adc
add
jmp
add
sub
mov
adc
in
adc
mov
cmp
add
js
cmp
call
and
gs
cli
adc
and
adc
add
add
adc
pushf
nop
adc
xchg
pushf
enter
nop
adc
ins
sub
or
or
fstp
pushf
shl
push
push
xor
pop
push
jo
outs
ret
loop
cmc
test
lods
int3
xor
neg
daa
nop
ret
mov
sbb
mov
push
pop
call
pop
stos
leave
das
xchg
loop
leave
mov
adc
mov
jle
pop
nop
inc
repnz
cmp
or
add
xor
enter
and
or
jl
lahf
nop
add
(bad)
push
jl
stc
fisttp
rol
shl
outs
sbb
pop
jb
imul
add
dec
jmp
(bad)
push
add
cmp
xor
add
jl
mov
rol
std
aas
nop
xchg
or
add
mov
or
adc
add
stc
je
or
xchg
adc
int
inc
or
add
pushf
cwde
dec
adc
cmp
sub
inc
test
outs
nop
mov
push
jns
and
test
push
add
adc
leave
inc
repnz
dec
aaa
rol
add
inc
mov
cmp
aam
or
and
ss
adc
mov
movs
movs
adc
pop
aam
(bad)
dec
jns
in
adc
stc
movs
movs
adc
pop
jmp
push
inc
jb
mov
movs
movs
adc
in
ds
jmp
enter
add
push
sbb
xor
xadd
or
inc
sbb
out
add
pop
cli
xor
and
lods
les
dec
out
jns
out
mov
leave
iret
pop
dec
movs
adc
dec
mov
jmp
mov
add
mov
lods
mov
sub
sbb
(bad)
cli
int3
push
xor
loop
rol
sbb
mov
call
fsubr
sbb
sub
mov
aaa
or
add
add
add
test
xor
cmp
add
mov
add
int
add
add
cmp
add
mov
mov
adc
and
push
push
call
ja
jnp
inc
nop
and
or
cmp
and
adc
and
mov
adc
sbb
adc
mov
add
sbb
lea
and
dec
mov
loope
ds
cmp
xor
fidivr
add
cmp
mov
in
loopne
cmp
adc
sbb
outs
std
cmps
fldenv
xchg
cld
cmp
add
cmp
pop
enter
adc
ins
or
add
or
and
xchg
add
out
inc
inc
ss
add
push
adc
add
adc
xor
pop
or
push
scas
in
out
dec
push
and
or
pop
add
inc
add
in
jb
mov
add
sub
add
and
inc
stc
mov
cwde
add
xchg
adc
pop
hlt
cld
adc
nop
mov
xchg
out
add
hlt
push
loopne
add
sbb
pop
nop
cmps
xchg
pop
movs
mov
jns
mov
mov
cmp
sahf
out
push
push
adc
(bad)
jns
adc
jmp
test
dec
add
mov
mov
inc
xor
mov
nop
push
push
js
mov
pop
inc
mov
add
add
hlt
push
cld
push
add
or
add
iret
repz
aaa
sbb
shl
add
push
push
xchg
mov
jmp
loopne
and
stc
dec
sub
add
div
test
lods
add
and
movmskps
xchg
adc
jl
psubb
sbb
ds
adc
mov
dec
sub
sbb
pop
pushf
dec
pop
mov
ror
les
aaa
mov
aas
pushf
int3
mov
shl
dec
jg
inc
imul
pop
pusha
push
push
mov
add
add
rcr
jg
movs
push
test
cmps
int3
leave
call
mov
jle
or
inc
add
nop
popa
inc
xchg
inc
idiv
mov
loopne
sub
or
push
mov
or
xchg
add
test
add
jp
scas
xor
and
xor
push
adc
add
add
adc
sbb
fldenv
dec
jmp
push
hlt
ja
sbb
cmp
jg
sub
outs
shr
sub
inc
rol
xor
pop
mov
pop
or
movs
stc
sbb
cdq
movs
add
test
pop
mov
pop
xor
jmp
hlt
cld
xor
je
jo
push
shl
and
repz
(bad)
add
loopne
mov
push
mov
xor
cmp
sar
dec
fsubr
repnz
xchg
add
add
add
enter
adc
(bad)
loop
repnz
sub
push
jle
das
fdivr
mov
in
and
inc
and
sub
cmp
cmps
and
add
pop
ins
rcr
jae
lods
test
mov
and
add
xchg
adc
aas
enter
data16
add
adc
and
inc
and
add
ins
popf
out
rcl
pop
mov
dec
movs
cmc
and
xchg
(bad)
das
and
call
pop
rcl
sbb
ror
and
stos
and
add
pop
xor
and
lds
popf
inc
pop
dec
jp
lock
add
inc
xchg
sbb
daa
icebp
jbe
lahf
add
add
aas
jo
and
adc
jl
or
sub
mov
js
neg
add
adc
add
movs
dec
(bad)
jle
mov
pop
or
shl
mov
mov
dec
jmp
jge
or
les
or
sahf
adc
inc
jle
add
cmp
jns
mov
push
jle
enter
inc
or
adc
mov
repnz
das
rcpps
sahf
sbb
(bad)
test
adc
or
bnd
sub
push
sub
mov
and
and
adc
and
mov
enter
add
jae
enter
mov
sub
jb
or
movs
std
or
pop
inc
inc
push
pop
inc
(bad)
inc
inc
pushw
ja
mov
cmp
enter
jbe
cdq
sub
adc
inc
xchg
arpl
call
iret
and
enter
adc
push
push
xor
or
or
xor
adc
dec
jb
in
pop
fcom
je
pop
rol
sub
pop
mov
inc
inc
pop
cmp
enter
inc
test
add
aad
sbb
inc
inc
lods
cmps
adc
in
jo
adc
jnp
test
retf
push
shl
test
ror
aad
xchg
or
gs
fild
dec
movs
(bad)
push
sahf
push
add
adc
or
push
adc
neg
jb
aas
push
out
sub
daa
rcr
or
push
cmc
add
xor
stos
sbb
pop
xchg
xlat
sbb
push
pusha
inc
jecxz
adc
movs
popf
mov
ficomp
imul
jge
sub
or
add
bound
rol
jl
add
div
outs
jne
fisubr
imul
shl
add
int
push
inc
dec
pop
fnstenv
dec
sbb
cwde
pusha
pusha
dec
push
dec
adc
and
inc
inc
xor
dec
and
sub
stos
mov
repz
sar
mov
and
int3
sbb
lea
inc
jmp
jnp
in
or
cmp
aaa
pop
xor
retf
sbb
(bad)
mov
leave
xchg
lods
and
jne
add
pop
mov
mov
inc
jb
fsubr
sbb
mov
and
inc
push
pop
jmp
shl
gs
sub
lods
pop
xchg
inc
(bad)
cmp
sbb
jns
sbb
pop
es
jne
add
addr16
inc
pop
iret
sbb
pop
es
and
sub
(bad)
jmp
(bad)
call
sbb
pushf
stos
add
and
std
adc
and
add
adc
and
adc
call
cmp
push
adc
add
xchg
pop
clc
sar
(bad)
std
and
shl
and
sar
inc
pop
jns
addr16
xchg
sbb
adc
pop
and
in
in
iret
(bad)
push
popa
sbb
shl
cld
add
inc
mov
cdq
add
xor
pop
test
enter
loope
adc
add
leave
or
scas
adc
add
cmp
dec
add
or
pop
dec
pop
mov
test
dec
adc
add
out
repnz
cwde
add
int
add
mov
fmul
into
adc
scas
cwde
or
cmp
xor
add
add
js
cmps
mov
jne
xor
sbb
or
mov
pop
cld
mov
and
or
and
shl
jl
add
sbb
scas
ret
aam
sbb
add
jle
adc
in
push
adc
xchg
inc
mov
in
xchg
std
mov
(bad)
or
inc
rcr
sub
or
mov
xchg
jb
leave
sub
fisttp
xor
pop
adc
add
loope
or
dec
test
dec
das
gs
and
call
xchg
mov
sbb
or
add
add
in
push
pop
daa
xchg
cmp
inc
loope
pop
loope
iret
das
pop
in
(bad)
push
(bad)
call
jmp
push
cmp
(bad)
push
cmp
and
pop
push
jl
dec
ror
int3
(bad)
inc
ds
adc
push
sbb
push
add
retf
test
int3
pushf
or
movs
or
test
sbb
(bad)
xor
call
push
enter
inc
mov
jl
mov
sub
xor
and
fxtract
adc
xor
(bad)
in
adc
xchg
adc
and
daa
in
pop
mov
xor
loopne
adc
call
nop
pop
nop
adc
dec
push
leave
dec
lods
cmp
stc
or
movs
adc
pushf
nop
inc
mov
test
and
lahf
adc
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
adc
fmul
aas
dec
pop
and
push
ret
rol
push
add
aaa
mov
adc
out
imul
loopne
iret
gs
and
(bad)
or
add
mov
(bad)
or
enter
in
cdq
fstp
test
dec
imul
out
xchg
call
or
add
es
out
adc
enter
ret
push
add
loope
enter
mov
loop
mov
in
add
adc
inc
push
sub
movs
adc
and
xor
add
lods
retf
inc
add
inc
push
mov
push
mov
stos
in
xchg
mov
inc
repnz
hlt
pop
xchg
jl
div
add
xor
out
adc
call
mov
adc
mov
dec
stc
and
aad
xchg
sbb
enter
adc
leave
push
xor
in
push
nop
out
inc
xchg
xchg
cdq
mov
mov
mov
stc
mov
or
rol
inc
rcr
cmps
xchg
popf
jecxz
mov
sub
adc
push
cmp
enter
mov
or
cmp
jmp
gs
adc
mov
(bad)
adc
sub
adc
mov
repnz
adc
(bad)
adc
adc
adc
adc
out
sub
loopne
and
xchg
cmp
or
cmp
dec
outs
sahf
in
in
test
adc
in
and
dec
jb
mov
in
cmp
adc
cs
pop
in
pop
adc
jbe
scas
adc
inc
sub
lods
jl
and
(bad)
adc
mov
or
adc
xor
add
(bad)
xchg
daa
add
or
mov
std
push
mov
jl
jl
or
add
in
inc
inc
sub
out
stos
pop
les
or
mov
nop
adc
sub
adc
dec
add
aas
gs
xchg
nop
adc
nop
adc
mov
mov
sub
adc
pusha
gs
adc
jne
adc
adc
add
and
and
xchg
add
adc
iret
(bad)
adc
push
mov
cs
stc
xor
lea
adc
add
imul
xchg
pop
mov
mov
add
and
(bad)
adc
enter
(bad)
adc
and
adc
leave
adc
(bad)
adc
and
adc
inc
scas
jl
(bad)
adc
in
inc
cmps
rcr
add
add
mov
cmps
enter
add
pmulhuw
and
sub
ror
ror
adc
push
push
and
repnz
unpcklps
xor
jns
cmps
nop
xor
movs
out
movs
mov
and
test
and
retf
mov
test
xchg
mov
call
push
or
test
movs
mov
add
sahf
sub
test
repnz
ds
xchg
call
lods
adc
push
psubsb
push
test
jl
add
pop
or
test
call
adc
xchg
dec
jle
movs
adc
(bad)
adc
cmp
sbb
test
add
popf
and
and
sbb
fdiv
test
nop
adc
mov
adc
je
or
xchg
and
test
jl
add
jbe
add
data16
add
out
mov
push
cld
xchg
adc
mov
adc
dec
pop
inc
in
inc
inc
test
out
(bad)
inc
jns
add
sti
(bad)
push
jp
cmp
pavgw
and
xchg
dec
test
(bad)
push
sbb
cmc
jmp
mov
push
or
jbe
mov
inc
and
xchg
pop
das
test
add
in
and
nop
adc
test
test
mov
mov
xchg
pushf
nop
int
adc
fptan
in
retf
nop
adc
mov
stc
enter
enter
adc
add
pop
dec
adc
add
ret
add
les
jb
jmp
add
dec
jb
(bad)
mov
add
leave
mov
repz
fsubr
sub
fs
xchg
adc
add
adc
jno
pop
push
mov
mov
in
inc
inc
jmp
or
xchg
pop
jle
and
cmp
call
xchg
mov
aad
lods
push
sub
push
pushf
pop
iret
mov
jns
shl
shr
aas
add
pop
adc
test
enter
imul
cmp
mov
jle
enter
and
mov
jns
daa
mov
jmp
fadd
sub
test
neg
jne
mov
mov
and
cmps
shl
cmp
dec
push
sbb
add
ja
leave
or
nop
and
lods
psubq
sub
dec
call
out
lods
pop
loope
loopne
push
in
mov
ror
test
icebp
add
jmp
std
push
rcr
test
sub
cmp
fdivr
inc
call
cmp
jae
mov
add
jb
add
lea
loop
mov
cmps
sub
cmp
adc
jb
ja
pusha
loopne
jmp
inc
cmp
dec
clc
push
sub
shr
sbb
in
jo
(bad)
jmp
dec
call
or
push
adc
cmp
(bad)
dec
cmp
jbe
jmp
or
daa
push
das
push
fdivp
or
jb
lock
sbb
pop
in
cmp
jb
ja
push
call
fsub
or
sar
sub
out
test
dec
outs
ret
xor
icebp
xor
in
mov
rcl
int3
or
mov
lock
mov
add
fnstenv
sbb
aam
add
mov
cmp
pop
pop
add
or
stos
movs
sbb
leave
push
sbb
adc
stc
adc
adc
nop
pushf
add
sub
sub
inc
scas
aaa
outs
(bad)
xchg
call
repz
add
cmp
adc
pop
push
and
cmc
or
(bad)
call
nop
inc
adc
mov
jns
out
(bad)
call
xchg
mov
shl
and
fcom
pusha
cmp
push
enter
fs
dec
add
push
enter
jmp
mov
jl
in
mov
xor
add
adc
sbb
adc
add
enter
fcom
and
sub
sbb
pop
add
dec
push
add
in
xchg
add
mov
daa
in
push
mov
cmp
retf
xchg
adc
in
(bad)
in
xchg
adc
lock
adc
xchg
adc
cmp
adc
jmp
jne
push
arpl
xchg
xchg
xor
inc
jno
xchg
or
adc
jecxz
call
out
repnz
sub
mov
add
(bad)
adc
pop
out
adc
xchg
cmp
enter
sbb
xchg
leave
mov
and
xchg
(bad)
xchg
cmp
dec
push
ret
xchg
mov
stos
xchg
sub
in
cwde
out
adc
jnp
xchg
in
cmp
inc
jmp
pop
xchg
dec
push
enter
cmp
shl
add
dec
add
sbb
xchg
or
add
repnz
dec
and
add
enter
cdq
in
push
loope
jmp
in
adc
adc
inc
dec
loopne
sbb
out
push
push
in
adc
mov
sbb
adc
adc
es
sbb
push
retf
mov
les
push
in
mov
jo
and
lock
mov
ss
or
xor
fdiv
xchg
and
add
mov
push
mov
xor
push
and
lods
test
jmp
jmp
xchg
adc
mov
push
sbb
jmp
retf
xor
xor
xchg
cmp
rol
lods
adc
stos
adc
jl
jl
mov
sbb
adc
in
inc
(bad)
inc
mov
daa
dec
enter
in
adc
sti
(bad)
call
enter
(bad)
dec
(bad)
inc
(bad)
and
lods
mov
xlat
ins
sub
cmp
mov
invd
sub
ror
adc
dec
mov
ds
jmp
dec
jmp
shl
jbe
adc
push
sbb
(bad)
fs
jmp
inc
into
dec
ror
addr16
cmp
je
movs
add
rcl
jo
sbb
nop
rol
jmp
retf
mov
(bad)
jmp
in
adc
jmp
cld
cmp
aas
ret
jmp
(bad)
das
call
in
or
(bad)
(bad)
(bad)
(bad)
(bad)
in
adc
rcl
sub
or
xchg
loopne
dec
sahf
in
shr
adc
mov
xor
xor
pop
outs
mov
shl
push
ja
xchg
sbb
and
pop
and
and
inc
and
shl
and
and
ins
cmc
sbb
add
dec
add
(bad)
ja
push
add
cmp
in
and
test
clc
sbb
xor
mov
xchg
pop
and
dec
sub
test
fst
mov
fldenv
gs
mov
shr
adc
mov
xor
movs
add
pop
rcl
inc
mov
adc
adc
scas
pop
aaa
sub
scas
stc
pop
cmp
mov
or
pop
sahf
retf
repz
je
js
mov
pop
jl
xor
jl
aas
xchg
cmps
repnz
jae
cmp
add
mov
(bad)
xor
pop
repnz
and
in
das
sti
add
xchg
out
adc
push
inc
repnz
adc
cmp
pop
add
and
stos
repz
out
and
pop
outs
retf
call
push
cmp
xchg
lock
add
repnz
adc
std
adc
cld
cld
adc
pop
repnz
sub
add
add
adc
adc
inc
push
add
adc
std
adc
fstp
std
adc
ins
mov
movs
xchg
inc
and
or
scas
inc
enter
inc
fild
std
adc
test
adc
lea
push
mov
fwait
jne
xor
adc
enter
xchg
adc
push
xchg
xchg
jl
fistp
mov
pusha
aad
fwait
or
adc
mov
inc
sbb
xor
mov
into
dec
push
in
push
push
xor
adc
ror
push
retf
and
and
pushf
nop
xchg
pop
out
fmul
int3
mov
test
retf
in
addr16
sub
nop
inc
enter
dec
inc
push
in
in
jge
xor
adc
adc
and
jne
test
mov
leave
sub
jge
and
push
mov
adc
add
and
mov
adc
push
mov
adc
cmp
les
les
les
cmp
xchg
les
mov
ds
shl
add
jmp
inc
push
enter
rol
xchg
add
jns
std
adc
push
jns
ret
jmpw
stos
rcr
loopne
inc
add
or
repz
ret
cld
cld
adc
hlt
ret
add
adc
or
or
xor
xchg
ret
sub
jbe
dec
inc
shl
xor
sbb
leave
add
add
cmp
add
lods
adc
call
ss
cmp
adc
fnstcw
cmc
adc
pop
repnz
mov
and
cmp
loopne
adc
jo
fcmove
dec
pop
repnz
sar
push
push
xor
sbb
add
call
out
dec
sar
xchg
and
lods
sbb
jp
mov
xor
adc
mov
cmp
pop
je
jae
sbb
lods
sbb
(bad)
cmp
test
fnstsw
add
imul
xor
push
and
stos
jno
sub
or
aas
or
test
aam
inc
push
enter
outs
jbe
movs
or
loopne
adc
daa
and
adc
mov
cld
jecxz
inc
cs
int
test
call
nop
leave
ss
enter
mov
in
mov
ror
in
xchg
adc
call
enter
and
std
lock
adc
ins
adc
add
xchg
adc
leave
xchg
xchg
loop
in
lock
adc
jo
das
call
leave
test
or
sub
push
add
into
sbb
mov
std
xchg
xchg
and
nop
lahf
adc
xchg
adc
inc
xchg
adc
xchg
adc
xchg
adc
and
nop
xchg
shl
inc
repnz
mov
nop
adc
and
pop
push
mov
inc
ds
shl
adc
repnz
ds
aam
adc
repnz
leave
xchg
xchg
repnz
repnz
or
adc
push
push
les
std
cwde
das
pushf
mov
mov
std
pusha
test
mov
adc
in
adc
in
adc
jle
inc
pushf
in
adc
inc
push
cmp
and
sbb
in
in
adc
in
adc
xchg
adc
out
adc
jg
cld
fcom
fcom
xchg
adc
ficom
rcr
lea
nop
cmps
jb
pop
mov
std
mov
xchg
mov
inc
or
adc
repnz
mov
adc
call
adc
xchg
adc
ret
inc
pop
and
call
adc
repnz
ret
mov
in
mov
xor
add
add
inc
jb
nop
add
test
inc
jle
in
dec
mov
adc
mov
xor
enter
add
mov
push
cli
lds
mov
fstp
inc
pop
shl
adc
mov
cwde
jno
das
or
test
(bad)
or
xor
mov
adc
pop
mov
stos
xchg
lahf
hlt
cld
adc
or
cmp
aas
add
pop
nop
scas
add
cmp
mov
and
shl
test
add
cmp
movs
nop
adc
xchg
push
leave
cli
loopne
js
bound
bound
add
inc
add
jmp
inc
inc
cmp
hlt
addr16
stos
mov
add
dec
std
jns
and
jb
jmp
adc
dec
sub
sub
sub
xchg
retf
seta
or
nop
aaa
push
jmp
adc
lods
lock
daa
jns
bound
enter
mov
stos
ret
stos
add
fsubr
and
call
inc
pop
icebp
mov
xchg
add
mov
enter
in
add
gs
clc
and
ds
hlt
push
js
jo
stos
or
xor
pop
cmps
xchg
pop
pusha
jg
and
and
mov
fisttp
push
sar
jns
mov
mov
ret
xor
add
jmp
sbb
lds
loope
xor
repnz
and
and
and
into
jnp
pop
nop
xchg
push
mov
add
fisubr
add
xor
cmp
cmp
repz
inc
dec
push
pop
add
ret
inc
push
fiadd
test
push
sar
jns
mov
adc
(bad)
mov
test
dec
cld
xchg
adc
adc
xchg
sbb
pop
jle
pop
test
jmp
and
pop
pushf
lods
adc
add
iret
xchg
dec
sahf
adc
in
adc
mov
in
add
repz
inc
pop
add
or
aam
test
ret
mov
retf
add
push
or
retf
test
movs
repz
test
adc
xchg
xchg
ins
aam
xor
stc
mov
jg
lods
call
call
out
xchg
enter
adc
lods
mov
xchg
adc
out
fnstcw
push
pop
lds
lock
and
bound
pop
adc
repnz
xchg
adc
mov
and
xchg
adc
xchg
adc
adc
leave
mov
push
pop
or
adc
in
repnz
jae
push
sub
and
sbb
adc
cmp
mov
repnz
jns
shr
or
jo
mov
leave
add
push
add
xchg
push
or
dec
mov
push
adc
or
mov
jo
adc
call
push
or
mov
inc
inc
mov
add
add
add
add
fistp
nop
fwait
movaps
pop
in
adc
xor
cmp
int
test
sbb
sub
ins
cwde
jmp
adc
add
data16
pop
add
sbb
mov
pop
popf
out
or
xchg
aaa
xor
mov
sahf
loopne
popf
test
mov
pop
and
sbb
sub
aas
xor
cmps
movs
add
je
and
xchg
loopne
adc
es
sti
gs
pop
cs
retf
clc
aam
fadd
and
mov
je
mov
mov
mul
or
movs
mov
or
sbb
mov
(bad)
test
add
loopne
pop
stc
cs
or
(bad)
je
adc
or
fild
mov
lea
sahf
xchg
inc
add
ja
mov
(bad)
push
data16
add
cmc
jge
add
and
mov
sti
or
retf
movs
(bad)
aam
clc
repnz
adc
fidivr
sub
popf
clc
sti
xchg
mov
add
test
push
int
retf
sti
push
int3
inc
add
fild
or
aam
dec
sti
and
mov
mov
cmp
or
sti
mov
in
in
mov
hlt
mov
cmps
cmp
nop
es
out
sbb
fimul
hlt
hlt
stc
cmp
dec
je
or
inc
enter
call
sti
loop
icebp
out
xchg
or
ds
jne
pusha
sub
jo
addr16
ins
pop
in
in
mov
and
pusha
mov
pop
or
xor
mov
mov
jg
cmp
rol
dec
add
add
pop
ss
adc
pop
outs
cmc
and
dec
xor
js
pop
lahf
sub
movs
mov
jecxz
mov
push
(bad)
cmc
std
pop
sahf
inc
add
loopne
cmp
sbb
jle
mul
push
or
rcl
dec
lods
inc
mov
mov
push
xor
mov
fdivr
sti
retf
inc
mov
sti
nop
mov
retf
sti
in
clc
sti
inc
imul
aaa
xor
mov
ret
cmp
test
jl
add
in
mov
sub
xor
in
sub
mov
push
or
lahf
push
mov
pushf
xchg
cmc
jnp
cld
push
addr16
ins
cmp
enter
stc
imul
xchg
or
push
sub
lahf
dec
push
push
add
aam
or
adc
cmp
xchg
(bad)
jae
pushf
je
mov
push
mov
out
push
jg
mov
cmps
xor
and
push
call
dec
or
(bad)
jmp
aaa
test
sbb
inc
(bad)
jl
inc
push
mov
fild
add
loope
add
cmp
stos
push
addr16
dec
cmps
cmps
inc
jo
jmp
inc
aam
int3
test
sub
in
jb
loop
jmp
inc
mov
sti
call
in
sti
xor
jnp
and
xor
imul
les
sbb
pop
sbb
(bad)
or
popa
or
das
rol
(bad)
cli
dec
xchg
jne
mov
jne
rcr
mov
sub
pop
arpl
repz
hlt
sti
hlt
sti
cmp
inc
(bad)
loop
movs
and
or
out
mov
xor
jge
call
sub
adc
push
das
mov
lock
sub
pusha
add
popf
pop
dec
xchg
retf
clc
sti
jecxz
call
pop
mov
mov
inc
push
xor
dec
mov
retf
retf
ds
sti
inc
and
sbb
jmp
inc
daa
xor
sti
addr16
xor
sti
dec
das
or
hlt
sub
data16
push
or
retf
xor
cs
int3
dec
xchg
fbstp
inc
push
imul
push
dec
inc
inc
pop
aaa
mov
shl
dec
push
rol
sub
pusha
jecxz
push
jb
inc
pop
hlt
sti
hlt
sti
clc
sti
imul
dec
aaa
pop
pop
mov
jns
das
or
sti
fs
xchg
and
add
test
nop
out
in
sti
lock
pop
dec
rcl
rol
jmp
mov
imul
bsf
add
or
jmp
sti
rcr
dec
gs
sti
gs
sti
sub
sbb
std
push
jmp
test
push
sub
push
inc
adc
and
call
aam
add
(bad)
xchg
cdq
sub
sub
jae
dec
sar
loopne
xchg
out
dec
xor
lea
push
sbb
jns
clc
sti
pop
call
push
fdiv
sar
call
psubsb
test
cmp
das
into
pusha
adc
sbb
std
cs
pushf
test
and
lods
pusha
and
sti
ins
and
in
pop
icebp
jl
test
xchg
imul
sahf
inc
enter
ret
lahf
ins
mov
mov
or
in
in
sub
movs
cmp
shr
xchg
cmc
inc
sub
clc
data16
mov
push
xor
jmp
add
mov
xchg
cmps
inc
sbb
dec
sti
or
adc
xor
pop
mov
xor
out
push
push
gs
cmp
xor
test
fwait
jns
xchg
push
mov
pop
cld
repnz
das
sub
adc
mov
aaa
dec
xor
xchg
(bad)
call
(bad)
rcl
test
stc
in
adc
or
push
jg
lahf
nop
lock
call
adc
pop
ret
nop
es
push
xchg
data16
jmp
push
push
or
loope
jp
jae
xchg
(bad)
and
sub
int
cli
pop
pop
mov
je
(bad)
push
mov
add
add
and
push
cmp
(bad)
pusha
imul
add
dec
or
imul
cmps
mov
dec
inc
xor
add
inc
xor
add
clc
or
add
je
je
mov
ror
dec
pop
sbb
push
mov
add
call
add
jb
pop
call
mov
and
xchg
retf
call
sbb
and
adc
add
popf
or
xor
pop
jp
or
xor
jg
push
aaa
inc
jmp
add
xchg
cmp
cmp
call
push
dec
add
ja
jge
jne
mov
out
cli
and
ins
pop
pop
inc
dec
je
add
or
out
inc
aas
xchg
mov
hlt
jne
add
push
xor
and
and
or
push
add
jmp
out
push
add
fcomp
push
sub
jge
xor
and
push
inc
or
shl
stos
and
pop
cmp
push
or
sti
addr16
add
bound
or
inc
dec
or
jl
fcom
inc
nop
scas
jns
and
lods
mov
push
add
add
lods
fidivr
ss
inc
or
test
ja
ja
(bad)
and
or
sub
cmp
inc
push
mov
in
(bad)
pop
lods
push
enter
jge
push
ja
vmwrite
cmp
dec
add
pop
call
mov
dec
in
adc
mov
mov
cld
adc
cmp
pop
pop
add
adc
mov
sub
leave
and
mov
mov
or
add
stc
mov
adc
add
mov
inc
(bad)
or
in
adc
in
adc
test
inc
repnz
or
jb
ss
lods
mov
cmp
cmp
adc
adc
cwde
or
repnz
lods
mov
push
leave
inc
stos
adc
adc
call
xchg
xchg
jb
push
cmp
js
sub
and
daa
and
sti
and
push
repnz
daa
add
lea
inc
pop
mov
or
jl
inc
enter
mov
inc
mov
add
adc
push
pop
(bad)
jno
jns
add
nop
pop
mov
or
pop
shl
add
loope
repnz
(bad)
jmp
mov
enter
(bad)
cld
adc
add
adc
das
stc
adc
adc
pop
in
cld
cld
adc
(bad)
xchg
test
cmp
add
add
cmp
adc
add
adc
add
jns
dec
adc
inc
sbb
nop
inc
repnz
adc
jl
adc
add
add
adc
nop
xchg
lods
ret
add
enter
adc
xchg
call
dec
push
outs
sbb
add
adc
add
adc
push
leave
xchg
add
adc
and
xchg
scas
add
adc
inc
imul
mov
adc
cld
mov
fdivr
add
ins
cmp
adc
adc
mov
dec
xchg
adc
pop
pop
xchg
cmp
xchg
aaa
cmp
sub
add
and
pop
mov
and
aaa
dec
shl
xchg
dec
cmp
call
rol
xor
or
push
xchg
mov
adc
dec
aam
sbb
adc
ret
dec
cwde
movs
dec
dec
mov
mov
mov
dec
xor
add
adc
nop
push
les
pop
lods
mov
std
adc
js
xor
cdq
retf
jp
jp
addr16
or
jp
jp
jb
and
dec
enter
lods
and
pop
and
loopne
dec
cdq
jp
repnz
cli
(bad)
(bad)
clc
jns
jp
lea
sub
cwde
pop
xchg
add
inc
das
cwde
jns
dec
retf
inc
repnz
(bad)
adc
test
mov
das
fcom
add
add
jp
xchg
pushf
inc
pop
jbe
cwde
xchg
mov
in
cwde
stos
pushf
nop
adc
test
push
cld
and
and
inc
mov
outs
and
(bad)
adc
ror
adc
leave
and
dec
dec
test
xchg
iret
inc
or
adc
adc
sbb
stc
mov
rol
nop
adc
fwait
test
nop
jecxz
inc
add
movs
jl
lahf
jl
xchg
adc
xchg
adc
lods
mov
and
test
enter
dec
sub
mov
pop
or
adc
shl
lods
leave
xor
cwde
dec
movs
sub
rcl
dec
mov
dec
xchg
adc
cmp
mov
in
scas
pop
mov
add
test
add
ins
xor
cmps
cld
jb
xchg
cmp
iret
cld
adc
adc
inc
repnz
adc
cmc
push
jns
xchg
and
enter
add
das
faddp
hlt
jno
jno
push
enter
inc
inc
in
in
and
add
add
pop
adc
(bad)
sbb
fist
or
lahf
mov
pop
inc
ds
mov
fucom
fdivr
sub
sub
sub
fdiv
(bad)
and
push
jmp
push
mov
imul
mov
nop
retf
adc
mov
mov
aad
push
out
fidivr
cmp
jmp
in
inc
push
in
iret
add
test
jmp
xchg
jns
or
and
mov
call
in
sar
loopne
mov
inc
adc
sbb
sahf
(bad)
fld
iret
cmp
movs
mov
adc
pusha
imul
fwait
sub
bound
push
xchg
sbb
sub
push
cmp
jne
push
pop
in
or
inc
and
xor
mov
jbe
adc
inc
dec
mov
mov
es
push
test
mov
out
dec
cwde
pusha
xchg
imul
mov
repnz
hlt
cli
gs
loope
or
mov
aaa
or
mov
cmp
addr16
inc
push
xor
cmp
xor
inc
jb
or
ffreep
sub
lods
in
gs
push
xchg
lods
fs
out
les
add
fiadd
je
dec
jne
aad
xor
cmp
cwde
push
cmp
mov
jmp
cmp
xchg
data16
aas
dec
lods
sub
ror
xor
sub
sbb
inc
movs
xor
repz
shr
pop
pop
xor
icebp
in
adc
jg
pop
ret
outs
mov
ror
sti
or
pop
movd
jle
call
dec
jmp
dec
clc
sbb
xchg
call
push
jp
nop
cdq
adc
sbb
or
cmp
inc
ins
lods
sub
leave
mov
push
add
jb
push
sub
mov
arpl
sbb
inc
jb
jge
outs
push
in
adc
inc
outs
mov
in
adc
lea
ins
mov
and
push
and
adc
inc
scas
adc
cmp
xchg
and
xor
add
adc
mov
pop
enter
lea
sub
adc
rcl
mov
fsub
or
cmp
pushf
xor
addr16
jg
out
in
mov
mov
adc
in
mov
stos
mov
in
dec
xchg
adc
ror
sbb
stos
add
jnp
repz
add
xor
sbb
pop
adc
push
inc
nop
js
and
xchg
or
mov
mov
mov
inc
xor
adc
out
in
adc
xchg
adc
mov
adc
push
jmp
sub
or
dec
push
mov
mov
and
sbb
add
repnz
lock
jb
jns
xor
push
repnz
mov
sbb
add
sbb
repnz
push
sbb
repnz
dec
sbb
cmp
xor
repnz
and
sbb
adc
push
repnz
add
cli
sbb
sbb
pop
pop
out
fistp
xlat
sbb
sbb
pop
pop
(bad)
sbb
sbb
pop
pop
cmps
sbb
sbb
pop
pop
xchg
jg
ja
and
cmp
imul
nop
sbb
sbb
inc
push
jb
sbb
adc
mov
cmp
sbb
sbb
adc
retf
fcomp
pop
out
adc
sbb
add
adc
sbb
pushf
mov
xchg
adc
push
jb
ins
outs
sbb
dec
ror
sbb
je
xor
daa
int
js
and
xor
add
mov
xchg
in
adc
jmp
xor
inc
inc
add
add
push
rol
add
adc
retf
movs
out
adc
out
adc
xchg
das
and
inc
sahf
lods
out
adc
and
rol
cmp
or
enter
aaa
mov
adc
and
adc
out
adc
rol
xchg
fs
les
les
int3
int3
push
nop
mov
(bad)
enter
jo
pop
nop
xchg
adc
sub
sub
(bad)
mov
sub
sub
div
pop
jle
sub
inc
push
xchg
pop
push
jno
and
and
repz
push
leave
and
adc
mov
adc
inc
pop
out
popa
and
sahf
or
xor
jns
scas
out
or
push
add
inc
enter
push
pop
adc
add
(bad)
xor
xor
mov
dec
dec
jmp
pop
add
xor
sahf
nop
push
adc
push
add
jo
sahf
mov
xor
scas
pop
push
aaa
mov
jns
repnz
pop
(bad)
fisubr
mov
add
adc
vmwrite
cli
xor
dec
dec
push
(bad)
jl
leave
and
das
sub
jmp
in
test
xor
call
adc
mov
inc
mov
sub
mov
inc
jb
aaa
adc
xchg
add
sbb
cmp
push
jmp
bound
dec
and
jns
mov
or
dec
sub
adc
repnz
repz
cs
xor
sub
loopne
adc
addr16
adc
cmp
outs
data16
mov
sub
inc
repnz
std
mov
adc
add
cmp
bound
xchg
push
and
dec
sbb
add
ins
mov
outs
mov
lods
xchg
retf
(bad)
push
and
nop
push
call
cmp
inc
inc
pop
jb
nop
scas
mov
and
push
jg
bound
mov
nop
add
adc
cmp
mov
fiadd
lods
lods
inc
shl
inc
pop
and
add
adc
add
adc
pop
in
inc
and
cld
add
(bad)
dec
ret
cmps
add
enter
add
sahf
(bad)
cmp
jb
mov
pop
xchg
and
adc
mov
xchg
push
leave
push
rcl
std
add
std
adc
add
adc
cli
xor
gs
ror
(bad)
sub
mov
in
xchg
adc
call
push
enter
adc
leave
inc
leave
push
dec
add
adc
mov
fcomp
repnz
pop
and
aas
imul
mov
and
inc
xchg
pop
repnz
jns
xchg
nop
or
scas
pop
inc
scas
jl
mov
mov
pop
lock
in
nop
(bad)
mov
nop
pop
sub
add
xchg
adc
repnz
add
push
mov
and
in
inc
pusha
xchg
adc
pushf
xor
push
scas
jb
adc
sub
and
adc
push
adc
or
out
(bad)
xchg
pop
nop
inc
jge
jge
(bad)
jb
in
fsub
xchg
jb
cmp
jecxz
pop
pop
xchg
pop
in
out
retf
jmp
mov
mov
xchg
jmp
and
jmp
pop
ins
out
(bad)
lds
fiadd
fild
into
mov
dec
int
shl
pushf
nop
adc
add
nop
adc
xchg
pop
repnz
and
repnz
out
and
adc
stc
xchg
lahf
xor
nop
adc
or
data16
test
mov
pop
jg
inc
cs
sahf
xor
movs
ret
mov
push
lock
movs
inc
mov
(bad)
mov
in
sub
clc
add
cmp
pop
pushf
nop
adc
fistp
data16
pop
(bad)
dec
enter
add
aam
adc
xor
outs
push
xchg
mov
jle
ins
and
test
dec
popa
ins
add
xchg
push
pop
or
repnz
pop
mov
pop
in
sub
movs
add
nop
push
enter
leave
xor
adc
inc
ds
in
mov
fs
push
push
adc
nop
psubw
adc
adc
pop
leave
arpl
cli
push
enter
cmp
and
repnz
bound
sbb
rol
into
and
jo
cli
in
in
add
(bad)
inc
jl
ror
inc
gs
and
xchg
inc
(bad)
dec
(bad)
and
rcl
dec
dec
cld
xor
jmp
inc
add
or
in
je
mov
and
fistp
movs
inc
inc
test
push
mov
push
dec
or
ror
pop
add
stos
push
rcl
ss
movs
inc
ror
fidivr
adc
test
repnz
enter
add
and
cmp
leave
das
sar
hlt
sbb
enter
sbb
sbb
and
mov
stos
mov
sbb
pop
je
fcomi
push
lods
add
pop
mov
cmp
or
xlat
clc
lock
dec
add
adc
shl
mov
push
mov
mov
inc
cmp
shl
and
or
xor
jmp
mov
loop
adc
mov
adc
sub
jne
mov
dec
mov
loope
xor
dec
inc
or
jo
push
inc
cmp
shr
ret
mov
adc
jo
mov
mov
push
aaa
mov
rcl
cmp
das
cmp
cmp
dec
dec
xchg
(bad)
sub
mov
test
add
stos
sub
sub
and
xor
inc
and
sub
jne
and
dec
push
sub
sub
repnz
cmps
adc
sbb
dec
enter
and
lahf
sbb
and
pushf
lods
pushf
ret
mov
daa
in
les
jns
lea
leave
or
stos
nop
iret
add
jns
es
enter
mov
xchg
push
xor
leave
repz
push
and
inc
ds
pop
inc
xor
and
push
repnz
(bad)
imul
xor
fwait
push
dec
xor
xchg
scas
adc
cli
push
nop
in
jne
call
rol
fimul
rcl
jmp
xlat
int3
nop
in
(bad)
cmp
sbb
out
shl
je
add
ret
jmp
inc
int
jb
pop
jns
xchg
shl
inc
mov
mov
xchg
mov
and
inc
repnz
pusha
dec
and
aas
xchg
or
sbb
ret
adc
ja
iret
adc
(bad)
xor
int3
pop
sbb
adc
je
movzx
outs
pop
add
xchg
or
and
add
or
or
adc
ror
scas
inc
pop
add
mov
and
mov
les
dec
push
inc
push
cmp
out
add
mov
hlt
(bad)
push
enter
xchg
adc
and
pusha
adc
and
in
and
enter
dec
cwde
mov
sbb
adc
pop
enter
and
inc
push
adc
ret
add
cmp
adc
pop
inc
inc
into
repnz
test
bound
cmp
sar
inc
or
sbb
xchg
jmp
add
enter
or
adc
movs
adc
xchg
cmp
cmp
and
fadd
adc
shl
pop
jb
out
inc
int
add
inc
inc
push
nop
jmp
sbb
and
jmp
push
and
xor
jno
stos
mov
dec
ror
shr
arpl
repnz
call
jl
dec
pusha
jmp
push
or
and
lea
add
dec
ins
enter
pop
or
pop
repnz
ss
sub
(bad)
data16
inc
adc
push
retf
or
ins
mov
push
(bad)
dec
dec
and
and
adc
push
push
clc
sahf
dec
je
out
and
inc
xchg
and
sbb
test
fcmovbe
mov
mov
out
(bad)
or
stos
add
test
or
nop
das
add
repnz
ds
lock
outs
in
dec
cmps
pop
call
mov
shr
adc
dec
push
dec
xor
adc
push
enter
call
adc
call
xchg
das
hlt
cld
adc
mov
adc
sbb
or
mov
icebp
test
or
call
sbb
xor
bswap
sar
mov
sbb
pop
jmp
xchg
in
gs
int3
outs
bound
iret
xchg
inc
call
enter
pop
rol
sbb
pop
lea
or
and
fistp
adc
adc
dec
push
das
mov
and
stos
shl
leave
sbb
(bad)
jmp
mov
idiv
inc
(bad)
push
leave
gs
lods
dec
fistp
pop
daa
and
cs
pop
test
lods
ins
loopne
push
adc
push
lock
add
adc
sbb
int3
es
lock
shr
inc
inc
add
or
push
int3
pop
push
add
test
mov
shl
iret
pop
aaa
adc
ins
or
mov
test
iret
outs
and
ret
jg
sbb
out
mov
ret
add
or
call
mov
nop
dec
sub
push
movs
pop
(bad)
sahf
push
add
add
add
ins
aam
iret
in
or
inc
or
loopne
out
add
xchg
ret
sbb
scas
sub
push
aas
push
ja
sbb
dec
or
lea
xchg
ret
pop
jl
push
ret
inc
movs
adc
dec
lea
or
dec
movs
imul
cmp
or
jge
(bad)
mov
jmp
push
jecxz
retf
std
pop
mov
pop
mov
dec
mov
lds
popa
daa
imul
dec
pushf
add
jo
or
add
xor
in
and
sub
cmp
dec
xor
and
or
ja
jmp
sbb
movs
jns
push
mov
pop
sbb
retf
mov
pop
mov
add
lds
mov
shl
in
in
mov
dec
or
push
and
push
mov
ins
movs
sbb
cmp
cmp
sbb
cld
in
das
xchg
xchg
adc
xchg
cld
xchg
sub
ret
mov
push
jb
pop
sub
sbb
push
pop
adc
pop
add
pop
jb
pop
push
mov
(bad)
cmp
aam
mov
mov
sbb
cmps
add
sub
imul
enter
inc
inc
mov
or
aaa
test
(bad)
in
inc
sbb
push
mov
je
cs
jne
mov
xchg
mov
sbb
aam
inc
sub
loopne
in
pop
movs
xor
loopne
in
in
sub
xchg
or
sub
inc
pop
lock
ror
xchg
push
aaa
gs
push
sar
or
cmp
jg
jb
ja
sbb
cmp
ins
jle
add
sbb
mov
push
add
mov
mov
scas
or
lods
das
or
inc
or
push
aad
addr16
call
dec
test
mov
xchg
xor
iret
in
adc
mov
in
adc
push
movs
mov
jmp
in
push
xchg
mov
push
bsr
mov
int3
imul
pop
les
and
push
gs
pusha
sysenter
mov
inc
rcl
movs
test
adc
in
dec
ror
pop
test
js
pop
movs
mov
push
sbb
push
test
dec
inc
sub
out
cmp
push
push
fnstsw
adc
add
iret
add
inc
sub
pop
pop
rol
imul
popa
inc
imul
mov
or
ret
sahf
aaa
add
inc
mov
test
call
xor
or
xchg
add
mov
ret
and
inc
adc
sbb
sbb
call
fmul
and
mov
lods
hlt
or
lock
push
xchg
xor
push
mov
(bad)
or
adc
add
inc
xor
(bad)
imul
inc
and
test
push
cmp
test
push
xor
fdiv
or
push
xor
dec
call
outs
inc
fist
jo
xor
and
add
push
js
dec
outs
xchg
add
push
lea
je
jle
xor
sbb
add
mov
or
xor
or
into
dec
adc
cmc
mov
adc
mov
clc
scas
or
dec
add
dec
mov
call
data16
rol
and
add
shl
sub
sub
add
dec
sbb
pop
add
ja
push
hlt
xor
je
push
pusha
xchg
dec
push
and
pop
add
in
push
and
jo
loopne
adc
sbb
jns
or
inc
mov
cld
push
clc
pop
enter
jnp
pop
inc
push
mov
jge
mov
pop
repnz
cmp
int
aas
(bad)
mov
or
jne
cmp
daa
daa
mov
arpl
inc
push
pop
add
pop
les
pop
fwait
adc
hlt
test
cmps
lea
into
add
or
inc
push
cld
adc
icebp
mov
adc
movs
call
and
lock
or
add
fwait
xchg
and
dec
es
inc
jmp
leave
stc
ins
lahf
jne
pop
ret
pop
clc
xchg
clc
xchg
add
jbe
scas
cmc
inc
pop
imul
in
sbb
fdivr
add
add
mov
or
push
xchg
cwde
iret
mov
dec
es
(bad)
into
and
jecxz
retf
push
add
push
jg
push
xor
mov
xchg
add
in
sbb
js
cmps
push
aaa
dec
fs
pop
mov
or
call
push
pop
push
loopne
lea
push
mov
mov
nop
mov
mov
or
daa
sbb
sbb
fst
push
nop
aaa
pop
out
(bad)
mov
dec
cmp
lods
pop
popa
dec
in
xchg
nop
fadd
leave
mov
gs
ja
or
jg
sub
mov
push
xchg
ja
inc
push
jmp
dec
aas
mov
out
ins
cmp
idiv
sti
inc
dec
int
add
or
sub
pusha
jb
arpl
xor
push
push
and
fisubr
and
mov
mov
sub
or
and
mov
pop
aas
add
inc
loope
xchg
fcomp
aas
shl
(bad)
enter
xchg
pop
jnp
les
retf
mov
and
ret
fistp
xchg
dec
cmps
in
sbb
jno
lods
add
movs
daa
aam
mov
jae
mov
sahf
rcl
sahf
and
shl
adc
out
and
das
fs
and
sbb
sbb
stos
inc
sub
jmp
ror
adc
pop
jmp
adc
(bad)
or
push
pop
idiv
cmp
inc
push
(bad)
mov
push
or
push
setno
jne
mov
pusha
sub
mov
dec
loop
outs
in
jmp
popf
or
inc
in
nop
cli
sbb
mov
xchg
pop
aas
jg
lock
sbb
psubsb
adc
or
icebp
scas
loopne
dec
sbb
ror
jb
and
and
fsubr
mov
sbb
jo
adc
jo
and
div
les
cmp
inc
xor
popf
sub
addr16
push
lea
add
dec
inc
jns
push
fwait
dec
ror
push
push
les
imul
outs
push
pop
ja
in
fadd
adc
call
std
and
jecxz
pop
and
or
mov
lods
mov
adc
xor
ror
push
add
mov
adc
cli
shr
cmp
rcr
sbb
pop
sbb
pop
add
sbb
and
test
popf
mov
inc
sbb
pusha
xor
jl
xor
cmc
pop
dec
imul
xor
fild
loope
mov
xor
and
cwde
ret
cmp
xor
cmp
push
push
shl
mov
rcl
imul
shl
in
cmp
enter
stc
jmp
dec
jae
sub
push
or
jmp
xor
vcvttss2si
les
or
hlt
dec
cdq
inc
and
push
loopne
xchg
pop
dec
and
add
test
dec
or
push
adc
push
and
cmp
sbb
pop
leave
leave
cmps
mov
jns
test
and
sbb
xchg
loop
or
sar
icebp
sub
fild
mov
inc
push
sbb
imul
movd
mov
sub
data16
(bad)
je
cmps
xchg
mov
pop
adc
loope
pop
cmp
ret
shl
cmp
aas
jmp
mov
rcl
rol
xor
push
mov
loopne
and
or
cmp
imul
ja
xor
xchg
pop
push
mov
mov
lahf
pop
dec
inc
fld
inc
jne
inc
dec
popf
dec
pushf
push
icebp
repnz
jge
add
sbb
ins
sub
cmp
push
push
push
lea
sbb
push
lea
dec
inc
or
xor
cmps
xor
sbb
push
(bad)
push
jl
add
inc
sbb
js
inc
cmps
jge
and
das
adc
adc
add
retf
add
icebp
add
pusha
rol
mov
pop
push
sbb
imul
jnp
pop
and
sub
and
lahf
dec
(bad)
in
std
mov
mov
xchg
mov
inc
mov
xor
push
(bad)
sti
cmc
push
lock
mov
(bad)
movs
and
xor
popa
sbb
inc
jb
movs
loope
inc
sbb
imul
or
jb
sbb
outs
rol
cs
sbb
fdiv
pop
jns
mov
dec
bound
in
cmp
cmp
jge
pop
call
jo
mov
and
or
rol
test
mov
mov
mov
mov
rcr
ret
mov
mov
dec
dec
fild
cmp
jne
pop
xor
adc
(bad)
push
mov
ins
xor
xchg
sbb
je
adc
dec
cmp
push
je
jne
sub
push
movs
add
stc
bound
cmc
push
pop
daa
into
push
or
call
jae
push
bnd
adc
hlt
ffreep
sbb
in
jbe
mov
(bad)
neg
cmp
mov
outs
adc
(bad)
in
add
add
nop
cmp
mov
or
adc
push
xor
sbb
add
cdq
les
shl
inc
das
dec
rol
shr
jl
mov
sbb
icebp
loope
js
jecxz
inc
dec
sub
or
cmp
and
aas
pusha
or
das
sub
fisttp
or
jmp
mov
call
jne
mov
mov
add
sub
pop
in
cmp
sub
int3
push
xchg
icebp
pop
lods
into
lahf
stos
dec
test
sahf
jecxz
fist
inc
out
lea
(bad)
stc
cmp
push
sbb
ja
ins
xor
das
shr
retf
js
inc
fild
(bad)
jmp
enter
sahf
add
cmp
sub
mov
add
adc
or
fidivr
add
mov
or
add
data16
sub
adc
pop
cmp
jne
or
mov
(bad)
xor
mov
inc
adc
je
add
rcl
jns
or
hlt
jmp
add
cdq
sbb
push
push
in
mov
mov
mov
cdq
sub
inc
jb
cmp
xchg
lods
icebp
push
rcl
rcl
add
inc
aam
mov
aaa
inc
push
mov
add
pop
in
jb
sbb
pop
outs
mov
add
sbb
jb
adc
sbb
lock
cld
mov
add
xor
enter
xchg
inc
call
xchg
xchg
xchg
sbb
sbb
bound
call
repnz
sbb
sbb
call
ja
ret
repz
dec
xchg
sbb
sbb
enter
sbb
in
add
popa
repz
sbb
pusha
leave
adc
scas
movs
mov
dec
lock
dec
test
add
scas
movs
mov
mov
mov
cwde
ret
or
mov
adc
inc
or
mov
inc
sbb
xchg
pop
mov
cmc
dec
jne
shl
sbb
cmp
xor
rcl
mov
adc
movs
jmp
add
lea
mov
push
adc
jmp
pop
popa
pop
nop
les
inc
xor
sub
das
loopne
cwde
mov
cmc
stc
std
sub
push
jl
xor
loop
(bad)
lea
xchg
jo
pop
add
push
xor
in
push
add
cmc
mov
mov
dec
ins
fild
mov
pop
pop
movs
outs
pop
scas
inc
dec
inc
sbb
mov
pop
stos
cmp
inc
adc
and
nop
mov
push
adc
push
test
(bad)
adc
sbb
or
jmp
(bad)
cmc
sbb
inc
out
adc
cmp
cmp
pop
cmp
aad
js
sbb
sub
push
dec
leave
mov
adc
into
inc
mov
gs
mov
aam
lock
or
mov
lahf
pop
cdq
sbb
test
aas
lods
repnz
and
sbb
sbb
sub
cli
enter
daa
add
push
adc
call
push
push
mov
imul
lahf
cmp
jmp
not
or
(bad)
pop
stos
xor
mov
test
and
or
loop
int
not
(bad)
pop
xchg
inc
call
xchg
mov
data16
ja
(bad)
mov
cmp
jae
pusha
jbe
push
movs
sar
or
jnp
sbb
ins
lahf
add
cmp
push
xchg
data16
ds
push
xor
lods
enter
adc
sbb
data16
xlat
sub
push
rcl
retf
push
pushf
rcl
inc
call
cmp
(bad)
cmp
jne
mov
inc
pop
pop
cmp
inc
pop
cmp
push
push
and
aad
clc
xchg
sbb
jp
pop
add
inc
lods
dec
pop
sbb
scas
inc
cmp
pop
jl
push
xor
inc
add
xor
or
leave
mov
inc
mov
adc
add
push
push
cwde
dec
das
pop
mov
dec
cmp
call
imul
pop
jge
mov
or
dec
adc
outs
aad
fnsave
gs
dec
imul
inc
push
ins
jb
icebp
je
mov
bound
das
xor
xor
cmp
jl
jbe
mov
lahf
xor
div
fadd
daa
push
int
sahf
jl
xchg
fcmovnbe
iret
pop
sub
aam
mov
dec
repnz
xchg
fdiv
dec
sar
xchg
and
push
jae
clc
cld
cld
imul
add
cmp
lods
jp
nop
xchg
push
and
adc
arpl
sbb
mov
sbb
sar
mov
pop
inc
inc
jmp
pop
cmp
lods
out
jg
cmp
add
cli
stos
jne
ins
arpl
or
call
jne
cmp
mov
bnd
jb
push
mov
mov
push
les
add
push
cmp
jb
and
(bad)
mov
movsx
sub
sbb
and
and
movs
mov
(bad)
sbb
sbb
pop
sub
mov
xchg
adc
adc
retf
dec
xchg
scas
inc
adc
add
(bad)
in
adc
cmp
fwait
push
push
cmp
test
and
popf
xlat
inc
add
cmps
icebp
ret
xchg
add
pop
jno
sbb
and
test
pop
add
ret
adc
adc
and
xor
or
jl
gs
jbe
mov
adc
sbb
aaa
les
in
sub
lea
sbb
repnz
inc
adc
or
pop
mov
pop
loopne
push
sub
retf
test
push
sbb
call
push
popf
jle
(bad)
add
add
rol
dec
in
mov
and
arpl
and
xor
jae
aas
sbb
and
sbb
push
xor
sbb
popa
loope
test
push
push
jmp
aas
jne
push
add
mov
push
js
ja
fsubr
sub
jnp
call
ja
sub
lahf
push
ret
(bad)
out
add
lock
push
jmp
in
sub
mov
mov
in
pop
cmp
jb
jb
sub
dec
loopne
movs
and
in
add
frstor
adc
xlat
jg
sbb
mov
dec
and
cmps
aas
pavgb
jb
dec
add
mov
or
(bad)
ins
mov
test
push
loop
add
inc
js
sbb
jle
test
aas
jmp
cmp
inc
cmps
icebp
sbb
mov
sub
in
inc
push
and
pop
mov
jb
scas
adc
push
sbb
cmp
pop
sbb
clc
in
daa
cmp
sbb
cmp
fucompp
ror
xchg
add
pop
sbb
lahf
setb
std
pushf
dec
dec
and
cmp
test
cmp
into
mov
lea
push
cmps
rcr
movs
and
add
ret
xor
mov
cdq
sub
lea
fcmovnbe
dec
sub
dec
sub
adc
dec
push
int3
push
dec
sub
push
ja
fstp
in
jmp
sub
cmp
test
and
jmp
mov
xor
test
sub
aaa
dec
sbb
stos
inc
adc
xchg
push
sbb
cmp
jmp
push
sub
xor
sti
cmp
and
loopne
jmp
inc
push
fst
sbb
loop
mov
fadd
push
cmp
sbb
in
loopne
sbb
mov
mov
setne
inc
ret
retf
or
mov
bound
add
es
sahf
call
xchg
call
call
cmp
inc
jmp
xchg
pop
xchg
movs
sub
mov
loopne
rcl
sbb
mov
add
mov
mov
jno
gs
cmps
clc
or
pusha
push
stc
test
adc
nop
dec
xchg
out
push
dec
jmp
push
call
pop
adc
nop
pusha
xor
test
or
lds
inc
pop
hlt
fs
pop
dec
sbb
shl
cld
pop
test
call
pop
pop
and
sbb
cmp
push
jle
xor
mov
xchg
mov
dec
sub
cmp
pusha
and
cmp
test
mov
sbb
in
push
add
add
fcmovne
and
std
inc
popa
aam
push
xlat
sbb
push
cmp
pop
push
add
call
sbb
inc
pop
les
sbb
cmp
pop
mov
ficomp
icebp
ins
inc
push
mov
neg
cwde
push
dec
pop
shr
outs
sahf
mov
lods
shl
push
ss
jp
add
xor
add
cmp
push
xor
cmp
mov
das
call
(bad)
(bad)
in
pusha
mov
jmp
loop
lahf
iret
(bad)
push
sbb
call
sub
jp
ja
or
jmp
stc
sbb
std
repz
out
ret
cmp
fcom
cli
in
add
(bad)
(bad)
sbb
mov
leave
out
pop
cwde
xor
dec
loopne
mov
leave
and
loope
and
inc
mov
jmp
rcr
push
jns
in
adc
jne
sub
push
repnz
(bad)
loope
cmp
shl
pop
fadd
xchg
mov
in
cmp
(bad)
imul
daa
lods
adc
movnti
fstp
pop
lock
xor
inc
in
call
jge
mov
or
aaa
push
daa
or
pop
pusha
outs
dec
sbb
push
dec
xor
xchg
push
sub
(bad)
pop
and
xor
push
sub
mov
mov
repnz
sbb
lods
cdq
xchg
sbb
xchg
in
jmp
sbb
and
push
cdq
mul
mov
cdq
sbb
or
retf
add
sar
mov
int
test
(bad)
call
xor
push
dec
pop
push
out
mov
sbb
lds
or
push
in
and
cwde
adc
bound
mov
in
aad
ret
dec
and
adc
sbb
jae
sar
sub
dec
(bad)
clc
pop
jmp
mov
lds
ins
mov
push
adc
pushf
lea
cli
inc
test
xor
cmp
push
pop
sbb
mov
sbb
push
(bad)
sbb
adc
(bad)
xor
(bad)
jle
cmp
xchg
ror
cld
sub
test
ja
in
mov
pop
push
xor
inc
(bad)
adc
cmp
lock
movs
das
push
add
jmp
push
and
or
pop
dec
dec
adc
jp
jp
lock
adc
hlt
add
je
or
push
ds
push
push
mov
call
lock
inc
add
jl
mov
jae
or
enter
or
add
pop
dec
adc
or
inc
shl
(bad)
push
(bad)
jge
or
fadd
fdiv
jns
push
sub
adc
or
(bad)
pusha
pusha
dec
adc
jl
adc
or
push
xchg
or
and
inc
xchg
inc
mov
sub
(bad)
ds
mov
(bad)
xor
inc
dec
inc
adc
jbe
ds
sub
add
push
xchg
into
inc
push
or
enter
or
pop
loopne
les
enter
movs
add
in
jne
retf
(bad)
adc
sbb
pop
sti
and
sbb
inc
addr16
mov
and
cmps
push
and
cmp
sbb
jecxz
cmp
and
pop
nop
push
adc
std
push
test
dec
enter
mov
mov
add
cwde
adc
cmp
inc
and
pop
jmp
ins
adc
in
jne
bound
push
sbb
nop
add
call
mov
ror
mul
and
push
(bad)
loope
cli
inc
pop
test
and
or
pusha
lea
jmp
(bad)
mov
inc
or
adc
mov
xchg
mov
cli
xor
je
call
ins
xor
jne
and
and
xchg
out
sar
jmp
mov
pushf
test
outs
sub
sar
ror
pop
pop
or
pop
and
daa
fiadd
fistp
or
push
cmp
pop
psrld
in
(bad)
add
out
sbb
adc
and
retf
fistp
xchg
pusha
fdivr
nop
bound
mov
pop
adc
push
xchg
mov
fidivr
mov
add
dec
adc
pop
sbb
sub
dec
or
xor
stos
in
xchg
pop
rcl
lea
ficom
add
shl
push
xor
test
fadd
sti
push
call
xchg
icebp
pop
shr
or
push
or
daa
adc
xor
xchg
inc
mov
push
les
inc
xchg
es
ret
je
cli
fnstenv
xlat
jno
ficom
ss
and
pop
sub
sti
call
pop
pop
push
test
sub
sbb
cmp
push
cmp
cdq
mov
xchg
ss
mov
cmp
dec
loope
fldenv
shl
adc
and
loopne
jbe
sar
jae
je
imul
mov
test
xor
xlat
fs
aam
bound
push
jmp
seto
pop
jmp
ins
fsub
js
mov
ja
push
or
xchg
je
add
cmc
ret
pusha
jo
fs
in
push
pop
inc
or
imul
and
xchg
pop
add
(bad)
sub
xor
cwde
add
sbb
rcl
or
std
aaa
test
cmp
adc
xchg
or
sbb
xlat
or
movs
mov
sbb
adc
jo
xchg
gs
aas
rcr
jnp
inc
jae
test
inc
push
mov
rcr
mov
add
dec
sbb
adc
jecxz
int3
xchg
and
jns
sub
inc
add
jne
inc
mov
fnstsw
push
or
enter
ja
or
and
ja
sbb
movs
dec
or
push
mov
shl
push
into
shr
test
test
push
dec
cmp
test
inc
sbb
mov
mov
push
push
fst
and
ret
push
push
nop
cmp
pop
jo
pushf
push
(bad)
dec
inc
push
jmp
pushf
inc
in
inc
popf
int3
pop
push
dec
inc
rol
in
push
mov
call
pop
mov
pop
push
and
or
push
add
and
push
pop
push
or
or
fldenv
cmp
rcl
popf
or
repnz
sub
mov
mov
hlt
or
popf
call
sbb
jae
jmp
dec
enter
pop
aas
les
ds
or
add
push
cmp
lods
sbb
pop
sbb
mov
loopne
shl
xor
add
or
call
aas
cdq
ret
push
mov
jmp
dec
or
xor
jo
mov
mov
out
jo
mov
cmps
adc
or
lahf
cmps
shl
add
nop
fsub
xor
and
enter
(bad)
pop
pusha
movs
shl
pop
mov
imul
or
aas
mov
jo
dec
(bad)
call
cmp
push
ret
mov
(bad)
xor
jmp
sbb
pop
enter
xor
mov
adc
das
and
adc
mov
and
jge
fsubr
or
inc
iret
pop
push
jb
call
and
push
xlat
dec
add
or
sub
daa
icebp
pop
inc
pusha
les
xchg
xchg
and
ficom
pop
pop
nop
cmp
jle
cmp
fs
inc
fcomp
and
sahf
cmp
bound
cli
sbb
jmp
inc
jl
les
cdq
mov
pop
(bad)
push
adc
mov
aam
test
imul
mov
ins
xor
int
add
xchg
in
dec
aaa
adc
jne
sbb
ja
jns
inc
(bad)
dec
sbb
xor
jp
clc
(bad)
cmp
jne
push
xchg
xor
push
xor
push
lods
mov
or
call
ins
push
mov
mov
mov
sbb
(bad)
sbb
bound
ffree
push
sbb
xchg
loope
jns
add
and
cwde
sub
push
push
push
sub
mov
xchg
or
cmp
mov
sub
inc
ja
in
sbb
cmp
xor
mov
sub
inc
lds
enter
iret
xor
mov
and
push
mov
mov
inc
pusha
adc
jl
sbb
movs
mov
add
push
(bad)
dec
add
sbb
adc
and
lahf
xchg
inc
cmp
sbb
js
pop
inc
sub
pop
popw
repz
f2xm1
mov
js
loope
add
mov
pop
xchg
test
inc
mov
dec
add
sbb
or
adc
(bad)
mov
dec
and
sub
push
adc
push
jmp
mov
pop
or
push
pop
push
and
pusha
je
inc
xor
mov
fidiv
mov
inc
push
mov
push
or
dec
xor
sub
lea
xor
adc
call
sub
clc
xchg
pop
call
lods
mov
xchg
and
push
enter
or
outs
dec
pop
add
pop
pop
jo
and
inc
movs
test
xchg
add
scas
pop
mov
cmp
jno
ret
mov
add
mov
jbe
sbb
lods
pop
jge
ja
fmul
imul
sbb
test
inc
stos
mov
movs
in
mov
inc
(bad)
clc
inc
out
gs
je
sub
mov
push
mov
ret
inc
clc
pushf
nop
mov
add
xor
jns
push
js
test
pusha
xchg
xchg
adc
in
jno
add
clc
jecxz
bswap
mov
jmp
add
rcr
(bad)
push
enter
inc
push
jns
pop
inc
out
push
inc
mov
mov
adc
dec
adc
or
mov
ins
mov
cmp
adc
bound
fimul
(bad)
mov
mov
cmp
xchg
aaa
imul
xor
xlat
rol
or
cmps
mov
cmp
and
jno
mov
das
shl
mov
scas
retf
mov
inc
mov
adc
push
popf
jo
xor
sub
jae
dec
cmp
mov
or
ins
cmp
sub
jns
and
ret
xor
shl
out
jmp
mov
std
mov
adc
leave
cmp
popa
lds
jb
aaa
lods
or
push
in
jae
or
stc
adc
jns
ss
or
sub
or
fstp
adc
xchg
or
or
sbb
shr
inc
scas
dec
test
and
add
or
call
jnp
imul
call
add
pop
inc
sbb
or
inc
call
mov
scas
push
sub
dec
jg
xor
nop
add
jb
in
lods
or
popf
loopne
sahf
dec
lds
stc
adc
or
sbb
imul
inc
mov
loopne
add
jae
or
and
punpcklwd
inc
lock
mov
cmp
inc
clc
and
jne
data16
rol
add
dec
dec
dec
int3
inc
push
mov
loop
dec
push
push
dec
rcl
mov
pop
or
adc
lea
xlat
add
outs
or
push
inc
jns
icebp
push
dec
push
dec
jae
xor
inc
or
out
and
push
dec
and
xchg
inc
pop
pusha
(bad)
cmp
inc
inc
inc
mov
push
inc
or
sbb
mov
or
push
cld
in
fs
or
add
add
sub
cdq
or
mov
leave
xor
stos
or
pusha
push
shl
add
ins
jp
sub
fwait
inc
inc
or
or
mov
lods
mov
cmp
mov
and
out
push
stos
adc
mov
leave
adc
or
rcl
call
mov
adc
sbb
xchg
push
jp
inc
lods
push
mov
push
or
outs
cmp
outs
lock
loopne
pop
call
push
xchg
xor
(bad)
dec
iret
sti
das
daa
js
mov
add
push
cmc
das
out
xor
adc
repz
push
pop
retf
sub
ins
mov
leave
push
out
pop
cmp
add
xor
frstor
sbb
or
adc
loop
adc
pop
test
dec
pop
and
and
fadd
je
mov
push
inc
pop
push
add
jp
mov
xor
fs
pushf
mov
sbb
inc
mov
das
adc
lods
dec
sub
push
jne
push
mov
imul
movs
inc
ficomp
mov
or
mov
fdivrp
test
je
test
jne
ror
sub
les
cwde
jne
jmp
dec
mov
push
mov
add
inc
les
push
lods
in
(bad)
cmp
mov
into
dec
call
outs
sub
push
or
sub
push
or
mov
mov
sbb
xor
adc
jne
jmp
push
push
push
and
sahf
aam
popa
mov
repz
or
xor
xchg
fdivr
mov
or
pop
add
fxam
adc
mov
pop
in
jl
push
sub
pop
mov
iret
and
mov
xlat
cmp
and
dec
xor
push
hlt
push
je
mov
leave
adc
call
in
fwait
cld
and
iret
push
in
cmp
inc
push
dec
dec
in
ds
xor
xor
sbb
push
or
jmp
xor
sub
inc
xchg
inc
std
imul
adc
lock
imul
push
add
dec
jae
scas
sbb
ret
js
pop
mov
in
repnz
call
pop
in
jle
xchg
add
sbb
cli
fcomp
ins
push
cmc
test
mov
mov
popa
jns
std
push
ss
mov
dec
dec
adc
jo
outs
pop
gs
mov
sbb
xor
jne
int3
pop
pop
mov
cmps
pusha
lea
popa
nop
jecxz
test
xor
daa
shr
add
sbb
mov
pop
imul
xchg
adc
jg
retf
gs
cs
mov
dec
dec
dec
mov
and
loopne
push
lods
inc
pop
inc
sti
cmp
sub
or
sbb
add
inc
add
aaa
gs
test
lock
test
push
pop
ins
cwde
add
push
jae
push
mov
mov
test
mov
cmps
les
les
dec
leave
call
fidiv
jg
push
hlt
sbb
ret
aam
sbb
jmp
dec
enter
add
mov
xor
daa
shl
sub
adc
outs
sub
cs
xor
push
mov
je
and
jne
mov
jne
add
adc
enter
(bad)
cld
sbb
jmp
xchg
mov
or
not
out
add
pop
add
adc
jmp
cmp
add
sahf
add
xchg
adc
lock
inc
lods
ins
leave
push
mov
test
cmp
push
push
lahf
arpl
in
jge
pop
inc
pushf
lods
xlat
imul
mov
or
pop
cmp
ret
inc
cmp
push
test
mov
mov
adc
jg
lea
nop
popa
and
jmp
jno
imul
shl
jnp
and
daa
call
bswap
push
push
pop
add
and
ficomp
push
or
add
mov
mov
test
or
dec
rol
nop
iret
repz
dec
pop
call
jb
lods
ins
aas
push
dec
or
add
cdq
fs
(bad)
stos
ds
ficom
mov
add
cmp
jo
shr
fsubp
push
dec
ret
mov
mov
(bad)
jo
or
and
and
lods
mov
mov
inc
cmp
or
clc
push
daa
repnz
xor
mov
mov
aas
or
inc
dec
ret
xchg
loopne
hlt
dec
fild
add
pop
mov
pusha
push
aaa
cdq
mov
idiv
mov
jno
mov
adc
lea
arpl
dec
enter
mov
xlat
jb
sbb
xor
cmp
pusha
test
mov
repz
rol
js
(bad)
popa
add
and
icebp
push
and
sub
nop
push
add
adc
xor
or
sbb
mov
inc
cmp
mov
mov
mov
js
push
xchg
mov
fimul
imul
cmp
pop
mov
push
or
or
and
or
xchg
adc
mov
sub
in
js
je
xor
movs
test
pop
or
iret
sub
dec
adc
push
inc
cld
ins
js
mov
sbb
inc
mov
push
push
push
push
xchg
jg
cmc
push
push
je
mov
mov
lods
pop
jg
push
inc
call
cmp
pop
punpcklwd
fnstenv
cmp
add
inc
and
push
(bad)
jns
cmc
lock
push
sub
add
mov
add
inc
std
xor
sub
and
ficomp
lock
mov
push
js
mov
scas
fs
sub
rol
movs
cld
test
xor
cmp
(bad)
fist
retf
loopne
in
out
add
les
pop
sub
add
or
pop
data16
cmp
popf
push
pop
je
cmp
jne
xor
push
fst
dec
sbb
aas
pop
mov
sbb
retf
sub
popa
test
add
mov
lahf
inc
mov
cs
push
or
nop
sahf
movs
js
pop
sbb
jle
lahf
mov
sub
lods
cmp
jmp
sbb
xchg
jbe
iret
les
fdiv
jo
ror
rcr
adc
xor
sub
push
mov
fisttp
sbb
dec
mov
push
push
popf
jge
pusha
out
dec
sub
jl
inc
lock
xor
jae
jo
push
call
or
add
dec
dec
adc
or
pop
and
inc
jp
inc
sbb
push
or
xchg
cwde
add
lahf
mov
or
mov
retf
adc
and
push
and
adc
mov
shl
loopne
lea
inc
sbb
jne
pop
shr
outs
das
mov
add
jnp
imul
shl
pop
push
stos
rep
sbb
and
lds
aas
mov
hlt
and
mov
bnd
pop
mov
add
add
adc
mov
cmp
int3
mov
mov
(bad)
call
sub
mov
sbb
xchg
jl
clc
xchg
ins
push
push
push
mov
jl
add
mov
cmp
push
ds
pop
add
scas
fnstsw
add
push
or
push
pop
adc
add
dec
inc
shr
jo
hlt
or
push
mov
jle
aaa
add
mov
push
and
mov
ret
dec
sub
imul
mov
mov
xor
inc
push
jmp
lods
mov
rol
or
mov
or
fcomp
loopne
pop
icebp
pop
pop
adc
mov
mov
add
or
inc
fisttp
adc
sbb
ltr
adc
add
jb
mov
bound
xchg
inc
ror
(bad)
lock
jl
add
(bad)
fbld
add
test
(bad)
sbb
fimul
lock
push
add
pop
or
stc
mov
loop
dec
dec
out
adc
xchg
xchg
and
fwait
enter
cmps
sub
cmp
mov
outs
sbb
nop
xchg
add
jg
sar
add
bound
pushf
or
fadd
sbb
in
nop
mov
and
and
ins
or
outs
daa
or
fs
jo
lahf
push
lahf
adc
inc
pop
mov
(bad)
inc
pop
and
xor
lds
and
sti
push
and
mov
sbb
fs
push
loop
es
scas
mov
pop
sbb
jne
adc
sub
sbb
mov
fld
inc
repnz
sub
adc
std
push
mov
add
push
fwait
test
enter
jl
inc
pop
nop
int3
popf
jo
add
jp
sub
push
mov
cmp
rol
push
push
repz
xor
aas
and
aam
jmp
push
dec
into
jp
xchg
mov
pop
fldcw
enter
andnps
xchg
imul
jbe
mov
adc
mov
push
cmp
push
mov
or
movs
mov
sahf
or
loopne
cmp
push
xchg
mov
syscall
popf
into
fisubr
daa
xor
pop
sub
inc
je
add
inc
add
out
and
push
sti
add
inc
jle
push
mov
mov
das
or
cs
fsub
in
shl
xchg
push
btr
aad
pop
xchg
enter
(bad)
adc
sbb
dec
lea
enter
push
add
dec
xor
push
pushf
mov
std
je
push
fadd
jmp
sub
sar
stos
sbb
nop
(bad)
int
enter
add
nop
mov
sbb
add
ds
ss
dec
test
and
js
add
sbb
cdq
fsubr
sbb
cmp
mov
fimul
je
inc
loopne
fcom
sub
addr16
add
xchg
(bad)
icebp
push
jo
xor
ror
sub
std
int3
test
dec
lods
lock
out
je
push
call
les
sub
push
cwde
scas
push
pop
add
xor
hlt
out
js
test
add
ins
loopne
mov
push
inc
mov
xor
add
push
sbb
pop
adc
adc
xchg
mov
push
dec
rcr
or
ret
push
scas
daa
lahf
pop
aas
xchg
stc
xor
cmp
push
pop
and
pop
push
cmp
and
adc
push
repz
pop
pop
push
push
jmp
cmp
add
cmp
add
cmp
xchg
dec
adc
and
lahf
inc
sbb
pop
inc
jmp
lds
xor
mov
jo
xchg
sbb
sbb
fimul
mov
nop
nop
xor
and
repnz
call
(bad)
and
aam
dec
je
aad
imul
in
adc
call
dec
cmps
lock
mov
rcl
dec
outs
mov
ja
push
adc
aas
repnz
inc
jo
pop
dec
hlt
mov
lock
call
mov
mov
call
push
push
sub
jmp
push
bound
add
inc
xor
ret
mov
push
or
dec
xor
in
push
cmp
push
and
ret
icebp
sub
push
loop
out
push
push
call
sub
mov
ins
xchg
sub
in
and
ror
push
and
push
xor
dec
(bad)
pusha
and
and
push
add
ficomp
sar
outs
inc
adc
add
xor
push
or
mov
add
xor
add
(bad)
(bad)
add
sbb
adc
xchg
push
push
mov
test
inc
ficom
adc
and
or
test
and
shl
inc
sub
scas
and
or
idiv
jmp
addr16
push
pop
out
mov
dec
test
adc
mov
adc
lahf
lds
mov
arpl
sar
sub
inc
arpl
mov
jge
rcl
call
add
ret
lahf
cmp
fmul
cmps
call
rcl
sub
inc
jge
jmp
aam
pop
and
push
(bad)
mov
pop
add
xor
(bad)
fmul
test
cmps
sbb
jo
or
or
in
mov
mov
sbb
sti
pop
dec
jbe
inc
sub
jns
mov
ins
jbe
add
push
arpl
and
iret
pop
push
fld
sbb
push
daa
and
lods
pop
jl
cmp
call
loop
sub
retf
push
inc
or
gs
adc
jg
adc
fiadd
jmp
push
je
cld
in
in
mov
call
cmc
cmp
mov
pop
nop
dec
mov
push
pop
xor
push
or
mov
je
repnz
push
jecxz
arpl
jge
push
test
mov
mov
mov
cmc
add
loope
(bad)
fwait
retf
or
rol
and
cs
mov
mov
call
cmp
rcr
mov
inc
sub
jmp
and
sahf
das
push
mov
or
or
pop
inc
push
sahf
and
push
mov
scas
test
iret
(bad)
mov
mov
add
add
xchg
inc
pop
jmp
shl
sbb
or
sub
rcr
sub
js
dec
xchg
loope
mov
jo
enter
loope
sbb
jnp
add
xor
sub
adc
in
sbb
inc
jmp
add
cmp
push
sar
mov
test
fs
movs
cmp
and
pop
sub
das
or
movs
mov
pusha
mov
stos
fcmovbe
adc
gs
mov
mov
rcr
and
adc
imul
add
mov
fwait
push
call
loopne
inc
lods
and
jge
add
sub
js
lea
push
(bad)
rcr
add
xchg
loope
or
xor
xchg
and
add
sbb
adc
push
push
dec
dec
dec
inc
pop
jo
out
push
sahf
imul
das
out
or
pop
inc
add
mov
pop
sbb
ins
jb
dec
pop
xor
or
push
repnz
xor
pop
movs
inc
sub
sub
jne
add
push
in
xlat
add
cs
movs
sbb
cmp
jno
je
test
jg
adc
add
xor
xchg
loopne
adc
pop
push
xchg
push
xchg
mov
ds
push
sbb
adc
fcmovbe
cwde
sbb
fidivr
add
loopne
pop
btc
ja
cmp
sbb
out
and
mov
test
xchg
popf
adc
xchg
xor
test
push
sbb
into
and
inc
fsubp
add
inc
sbb
in
leave
sub
dec
push
cmp
xor
push
sub
jge
adc
mov
imul
adc
into
clc
pop
cmp
pop
add
in
lock
sub
ret
mov
enter
sbb
inc
nop
data16
pop
ss
ins
aad
cmp
pop
lea
pop
dec
hlt
add
scas
or
(bad)
and
out
mov
je
dec
(bad)
mov
ret
mov
iret
aad
jnp
push
call
and
fsubr
and
jae
iret
inc
jl
mov
push
xor
sub
adc
xchg
(bad)
dec
adc
xchg
xchg
in
mov
int
or
add
adc
xchg
push
cmp
call
add
inc
xor
xor
mov
mov
sbb
jp
and
and
adc
xlat
xor
add
add
add
je
or
add
in
adc
adc
push
cmp
int3
adc
and
ds
test
xchg
sub
sub
adc
fdiv
pop
mov
daa
mov
sub
mov
mov
out
push
push
sbb
mov
aam
mov
in
mov
push
mov
data16
je
jge
adc
add
adc
outs
pusha
jmp
pop
(bad)
sar
shr
adc
retf
xchg
and
mov
loopne
mov
mov
sbb
loope
nop
retf
add
add
add
and
mov
and
adc
push
rol
sub
test
je
push
xor
iret
add
bound
stos
push
mov
mov
xchg
ja
(bad)
mov
mov
add
dec
aas
or
xchg
jnp
or
jle
dec
movs
dec
mov
cmp
mov
enter
(bad)
push
nop
jmp
inc
or
xor
shl
mov
push
add
sub
push
push
add
jne
shr
or
mov
sub
adc
add
arpl
div
pop
(bad)
xchg
sbb
push
cmp
inc
cmp
and
jnp
add
mov
and
jle
jg
movs
retf
mov
js
dec
ss
cld
and
sub
(bad)
dec
sbb
and
adc
les
imul
mov
imul
iret
repz
repnz
cmps
push
ds
repz
out
arpl
es
jne
nop
xchg
fsub
jns
in
add
add
ds
int3
mov
add
sbb
sub
cmp
add
ret
in
add
or
adc
sub
pop
push
and
adc
out
and
loop
push
loop
push
aas
inc
cmp
inc
rol
inc
inc
add
loop
dec
or
shl
movs
movs
sbb
ins
or
mov
dec
adc
call
or
and
pop
adc
jnp
add
sbb
cmp
cmp
repz
dec
inc
pop
pop
pop
pop
fdivp
dec
push
mov
movs
mov
or
not
and
pop
inc
cs
popa
mov
retf
cli
add
pop
push
jo
mov
mov
and
add
mov
(bad)
cmp
push
mov
call
sahf
out
int
inc
outs
push
jnp
add
(bad)
xchg
xchg
fwait
out
sahf
out
mov
out
sahf
pop
push
pop
pop
push
jl
out
aas
out
mov
mov
shr
inc
add
add
inc
and
ficomp
aas
adc
gs
jnp
sbb
sbb
xchg
sub
stc
cmp
movs
shl
cdq
adc
xlat
xlat
or
xchg
or
cs
aas
or
xor
jne
sahf
leave
sar
or
pop
add
mov
(bad)
inc
je
add
fld
cmp
loopne
sbb
dec
call
js
scas
and
je
inc
shr
dec
pop
jp
imul
and
add
xchg
repnz
sti
(bad)
cmp
sub
lea
aas
lock
inc
imul
sbb
pusha
or
hlt
call
xchg
adc
(bad)
pop
cdq
adc
(bad)
ins
xor
test
test
adc
inc
add
push
sub
mov
and
mov
jne
sbb
loopne
push
jo
out
dec
bound
test
adc
and
clc
mov
pop
or
add
push
or
call
jl
xor
or
add
fcomp
push
add
ds
cmp
aaa
cmp
sbb
retf
inc
and
pop
cld
push
mov
clc
adc
jno
addr16
arpl
or
movs
test
ds
add
sub
loopne
ss
(bad)
test
xchg
pop
cmp
mov
push
scas
sbb
push
add
add
xor
test
or
test
mov
enter
out
stos
pop
icebp
jne
add
mov
xchg
psllw
mov
mov
dec
sti
aas
adc
cld
xchg
cmps
fwait
scas
ror
je
mov
pop
cmp
and
pusha
push
mov
or
push
mov
imul
pop
sub
and
sbb
sahf
adc
shl
ja
add
bound
push
push
(bad)
or
and
push
sbb
cmps
test
aam
inc
mov
jmp
jecxz
fld
push
mov
jo
ror
pop
ret
push
add
xor
fdiv
rcl
jmp
push
jmp
pop
pop
or
push
and
jmp
push
cs
push
(bad)
mov
leave
push
jg
je
mov
push
mov
add
lahf
mov
cdq
xor
sbb
sub
xchg
lods
push
jnp
sbb
cmp
add
mov
dec
jne
and
call
stos
or
(bad)
push
xchg
jg
movzx
sub
sub
fild
mov
je
mov
ss
dec
or
dec
xchg
adc
scas
add
(bad)
pusha
mov
add
lea
mov
and
jo
cmp
mov
mov
mov
jp
mov
ret
or
push
add
fcom
xor
aam
add
gs
push
test
mov
mov
sbb
or
jge
call
mov
cs
lahf
push
or
mov
stc
hlt
sub
pop
inc
cmp
mov
aam
mov
add
inc
in
ror
mov
xor
mov
dec
add
push
inc
inc
cmp
inc
jne
push
push
dec
dec
push
or
sub
inc
xor
sub
retf
inc
sbb
invd
sub
inc
std
outs
inc
push
dec
xor
mov
mov
push
inc
dec
inc
and
(bad)
jmp
and
pop
popa
ss
adc
adc
cmp
pop
imul
push
xor
mov
or
sbb
pop
addr16
popf
add
popa
ror
enter
nop
shr
mov
dec
push
push
push
xor
or
gs
shl
data16
dec
cmp
dec
mov
cs
pop
outs
jmp
test
or
jecxz
cmp
ror
dec
cs
and
or
and
test
in
pusha
fmul
mov
mov
rol
sbb
cmp
in
mov
dec
addr16
retf
mov
out
cs
or
call
fdiv
and
jbe
xchg
dec
lea
not
push
push
pop
cmp
aaa
mov
jl
loop
dec
cmp
jmp
pop
inc
and
rol
cdq
dec
cmp
sub
inc
sbb
and
fstp
ret
adc
push
push
(bad)
and
cmp
xor
call
and
sbb
inc
xchg
mov
mov
mov
or
xor
adc
frstor
jge
(bad)
jle
shl
jne
mov
loopne
aam
mov
jne
out
xor
jg
and
in
and
dec
sub
xchg
inc
hlt
pop
xor
sub
je
push
cmc
sub
outs
push
and
push
adc
mov
mov
jne
jno
loope
(bad)
out
ja
lods
loopne
outs
mov
out
and
push
inc
xchg
repnz
iret
xor
sub
mov
les
mov
push
call
imul
cmp
movs
scas
repnz
add
das
or
pop
ja
inc
cmp
sbb
mov
push
std
rcr
mov
xchg
mov
outs
adc
add
popf
call
cmp
cdq
xor
push
xchg
or
or
sub
jne
iret
in
in
or
inc
push
call
cmp
stos
push
or
or
dec
fsubr
or
inc
inc
cmp
add
adc
das
loope
add
(bad)
or
add
into
inc
sub
dec
add
nop
adc
sti
gs
and
fsub
test
sbb
movs
ja
pop
lods
add
add
mov
gs
inc
and
pop
adc
dec
and
jmp
out
pop
test
xchg
sbb
nop
pushf
xor
rcl
test
dec
xchg
xchg
not
lea
adc
adc
lock
loope
or
or
cmp
jg
push
adc
in
inc
js
cmp
ins
xor
pop
cmps
bound
sub
sub
in
pusha
mov
xor
(bad)
hlt
pop
inc
add
sub
sbb
cmp
or
add
lods
push
inc
xchg
sbb
or
push
cs
sbb
jbe
xchg
retf
push
cmovno
or
add
add
nop
test
jl
or
hlt
adc
lods
stos
mov
popf
test
(bad)
mov
mov
test
xor
adc
and
daa
movs
popa
pop
jb
add
cmp
popf
xchg
mov
sbb
mov
inc
lods
mov
adc
daa
not
fsub
or
adc
(bad)
out
(bad)
pop
add
mov
int3
and
xchg
push
mov
jne
jmp
sbb
pop
nop
lahf
inc
or
jmp
sbb
push
add
adc
leave
jno
xor
mov
mov
and
pushf
retf
xor
ds
inc
xor
gs
add
pop
mov
call
sub
xchg
sar
inc
cmp
push
sar
jns
sbb
and
mov
inc
adc
add
mov
add
lahf
stos
movs
xor
mov
dec
js
adc
aas
adc
call
aam
dec
push
inc
movs
dec
std
pop
lea
(bad)
lea
add
mov
sub
xor
mov
add
adc
cmp
push
mov
mov
pop
lea
ins
sub
rol
jns
(bad)
mov
js
add
sbb
fadd
mov
cmps
push
push
xchg
lea
xchg
xor
fisttp
mov
dec
dec
(bad)
scas
test
sub
es
lods
fiadd
and
je
xchg
cld
into
jne
test
sub
push
pop
mov
dec
add
dec
push
(bad)
push
adc
leave
add
ja
cmp
mov
sub
rol
xor
aas
mov
fld
mov
adc
leave
stos
call
mov
mov
push
sbb
lds
xchg
lock
xor
push
(bad)
loopne
fidivr
xchg
movs
fs
lods
add
loop
adc
icebp
mov
xchg
iret
lea
inc
sub
push
pop
jb
and
int3
imul
mov
pop
pop
ds
jmp
adc
push
xor
adc
mov
loopne
dec
mov
pop
push
jp
loopne
inc
add
in
mov
and
(bad)
push
push
ficom
inc
sbb
add
dec
jg
lds
sbb
lea
fisub
fidivr
adc
mov
or
scas
xchg
dec
popf
sbb
push
fdivr
in
je
add
xchg
xor
pop
ror
pop
ja
addr16
xor
xor
loopne
ds
jnp
lahf
push
mov
adc
loopne
mov
push
push
rol
add
push
push
das
jo
inc
nop
push
aaa
push
or
xchg
pop
push
out
jmp
je
push
push
mov
sti
add
adc
push
call
ins
xor
sbb
leave
cmp
call
mov
test
xor
or
mov
nop
xor
pop
popf
cmc
or
loop
inc
ja
movs
add
jl
xor
add
ret
aas
movs
dec
sar
push
loopne
scas
ret
ret
pop
ror
push
call
movs
dec
cmp
adc
jg
dec
mov
aam
jb
inc
popf
cmp
mov
aam
xor
add
stos
loop
inc
jno
dec
and
jmp
stos
xchg
or
or
sbb
in
inc
call
cmp
add
cmp
je
mov
call
std
mov
adc
fs
push
cdq
xor
cwde
sbb
sbb
(bad)
sub
jns
adc
jmp
outs
mov
jle
ret
jns
js
sbb
cmp
jne
xchg
sahf
xor
xor
gs
and
add
pop
mov
and
outs
adc
pushf
mov
or
test
or
(bad)
aad
enter
pop
dec
aaa
ds
dec
jno
lea
aas
daa
nop
push
mov
adc
test
push
sub
call
push
call
popf
add
and
sub
cmp
ins
out
pop
je
xor
repnz
xchg
add
sbb
lock
push
sub
lock
xor
pop
into
xchg
lods
mov
out
or
icebp
sub
test
push
and
inc
pop
movs
and
inc
jo
ficom
dec
or
ins
nop
mov
and
and
sbb
xor
loopne
mov
iret
ret
xchg
cmp
ss
xor
clc
ins
cmp
jecxz
or
adc
and
mov
je
inc
dec
pop
push
fs
xchg
add
inc
sbb
xor
pop
sub
add
mov
std
or
and
loop
xor
dec
mov
in
adc
in
in
pop
in
out
jne
push
add
cmps
jno
call
pop
jae
jge
push
jmp
cmp
movs
icebp
pop
xor
addr16
fadd
adc
sbb
cmp
idiv
sub
leave
and
push
and
inc
xor
cmps
adc
add
pusha
sahf
sub
xchg
loopne
sub
adc
xchg
and
jmp
in
xor
mov
mov
push
sar
or
lods
add
pop
call
mov
rol
popf
ins
jae
adc
jmp
add
test
(bad)
loop
rol
js
call
and
imul
add
loop
bound
and
adc
shl
lea
push
xor
or
mov
or
adc
fisttp
adc
(bad)
xchg
push
cmp
in
sahf
mov
mov
adc
xor
fcmovb
push
out
dec
xor
test
icebp
rcl
and
inc
inc
mov
push
sub
nop
push
repz
cmp
sahf
inc
mov
iret
xchg
scas
push
xchg
add
add
inc
cmp
movs
jmp
jl
jg
push
mov
or
push
jnp
adc
mov
or
fs
sub
and
test
adc
lock
mov
push
or
out
rcl
lods
dec
cli
stos
repnz
push
int
pop
mov
pop
pop
and
stos
pop
int3
and
call
not
(bad)
jbe
add
mov
inc
out
mov
pop
fiadd
add
sbb
or
iret
jno
jp
call
push
or
addr16
add
cmp
cmp
jmp
popf
dec
xchg
or
add
adc
jo
pop
inc
fimul
jmp
cmp
dec
retf
add
mov
retf
mov
aaa
in
jle
sub
dec
cwde
mov
test
push
add
add
sub
add
ins
fld
ret
push
add
lea
cmp
inc
push
xor
xor
push
test
stc
sbb
add
dec
push
jne
cmp
leave
scas
adc
jp
(bad)
and
jecxz
push
imul
je
sub
sbb
sbb
pop
test
and
cmp
add
pop
and
push
jmp
ds
push
sub
adc
cmp
sbb
add
imul
icebp
imul
adc
push
callw
fnstsw
adc
jne
pop
ffreep
mov
mov
mov
adc
test
fdiv
sbb
movs
pop
xor
inc
and
sub
int3
js
mov
pop
pop
cmp
sub
pushw
inc
and
outs
mov
outs
ins
popf
adc
cmps
inc
push
cmp
add
push
xchg
ret
mov
and
mov
in
in
ins
jne
or
aaa
out
js
and
jge
js
xor
jge
loop
jmp
test
fcomp
pop
mov
add
test
xchg
es
cmp
add
cmp
cwde
add
pusha
mov
dec
fs
mov
push
push
les
clc
cmps
pop
adc
jbe
push
mov
call
mov
lea
les
call
int3
add
cdq
call
xor
jge
jo
mov
ja
stos
add
test
leave
push
sub
sbb
jge
xchg
adc
leave
cmps
inc
xchg
lock
jbe
cmp
sbb
stos
cmp
out
mov
sub
or
cmp
jmp
cmp
jbe
jo
jp
adc
sub
enter
repz
add
mov
enter
add
addr16
in
leave
inc
push
mov
loopne
jns
dec
ret
mov
mov
or
aas
out
mov
mov
jo
popa
mov
scas
(bad)
push
mov
lea
(bad)
mov
test
push
test
iret
in
sub
lea
push
popf
pop
pusha
aad
test
add
dec
mov
add
jno
es
outs
and
shl
mov
dec
cmp
adc
stos
xchg
and
repnz
push
inc
and
push
ss
adc
and
in
movs
pushf
js
xor
jle
pop
das
gs
cmc
bound
pop
inc
add
sbb
movs
mov
sub
cwde
push
std
add
xor
(bad)
pop
jae
add
aas
cmp
adc
shr
jmp
xchg
js
sbb
mov
dec
ret
dec
dec
retf
or
xor
jl
dec
push
jle
mov
add
test
loope
or
xchg
xchg
test
push
fdivr
adc
int3
or
or
sbb
sbb
pop
loopne
xchg
add
das
cmp
ins
retf
or
ins
xor
js
cmp
add
and
push
jmp
(bad)
jp
mov
mov
inc
lock
or
fs
or
sub
ret
sar
jne
cmp
jb
xor
xor
enter
lds
test
or
mov
pop
cmp
push
cmp
pop
add
sar
mov
mov
jg
mov
ret
add
push
add
movs
aam
retf
sub
lods
xchg
aas
xchg
lea
test
movs
or
sub
popa
cmp
cli
sub
jo
les
and
test
lock
adc
cmp
pop
push
mov
fnstcw
mov
cmp
mov
cwde
xor
loope
add
push
and
(bad)
adc
stc
inc
xchg
adc
mov
sub
adc
div
add
pop
test
mov
mov
jne
cmp
and
mov
push
push
test
adc
mov
daa
push
test
mov
xchg
imul
fcmovnbe
mov
fs
push
rcl
fcom
call
or
outs
jg
gs
mov
mov
mov
jb
into
test
loop
pop
shl
dec
adc
push
push
and
jo
bound
in
inc
push
inc
push
(bad)
ja
jmp
adc
inc
mov
push
clc
sub
sub
sbb
sbb
push
lahf
aaa
jo
sbb
mov
int
lock
push
dec
push
mov
sbb
sbb
dec
popf
test
in
or
sbb
pop
add
xchg
adc
sbb
pop
cld
out
pop
mov
jecxz
scas
pop
xchg
fisub
mov
inc
in
cmp
mov
mov
mov
and
sub
inc
sub
adc
xchg
add
sub
pop
das
xlat
aaa
push
xor
outs
xor
and
jl
cmc
mov
cmp
daa
scas
ins
xchg
jmp
and
push
sbb
mov
xchg
sub
xchg
add
pop
cmp
daa
adc
cmp
les
rcr
cwde
fldenv
adc
xor
gs
pop
lahf
hlt
lds
cmp
scas
add
jge
mov
imul
add
shr
ins
mov
and
(bad)
ss
ja
ret
sbb
fdivr
sbb
in
fs
sub
stos
jmp
xor
movs
mov
int
dec
inc
pushf
ins
gs
imul
fadd
pop
jl
dec
adc
mov
push
sbb
mov
mov
iret
jne
xor
xor
and
or
inc
mov
rol
test
dec
dec
xor
dec
xor
ret
add
or
mov
push
push
nop
jnp
adc
inc
xchg
pushf
pop
js
add
sub
push
test
sbb
mov
fcom
test
pop
repz
aas
mov
imul
cmp
push
push
(bad)
leave
pushf
gs
(bad)
inc
push
mov
bound
mov
add
xor
inc
das
inc
mov
xchg
add
add
cmps
xor
pop
(bad)
pop
aam
into
jno
enter
jns
add
stos
ret
dec
pusha
data16
lds
push
push
add
cmp
das
adc
push
jbe
ss
cs
repnz
inc
shr
push
sbb
in
lahf
les
inc
retf
push
xchg
inc
sbb
dec
(bad)
sbb
aam
cmp
push
or
add
adc
dec
popf
rol
adc
pop
pusha
sahf
call
add
add
cmps
ret
test
mov
leave
clc
or
and
cmp
dec
outs
es
xchg
sub
inc
lds
push
add
pop
in
inc
add
xchg
mov
je
rcl
push
daa
aaa
or
(bad)
mov
(bad)
mov
je
out
cmp
inc
sahf
and
aam
jns
cli
mov
inc
jecxz
dec
add
sbb
mov
dec
ret
(bad)
retf
pop
cmp
xchg
and
mov
inc
push
and
imul
push
fldcw
sub
add
retf
sti
cld
push
popa
xchg
sub
mov
clc
mov
mov
jae
xor
jne
pop
mul
iret
push
cmp
retf
sub
sar
push
push
pushf
out
or
shl
mov
xchg
ins
dec
mov
inc
das
mov
ds
cmp
mov
pop
movs
sub
pop
aas
pop
sbb
and
xchg
or
push
jo
or
xchg
in
push
jp
push
in
pop
loopne
mov
(bad)
(bad)
popa
jmp
add
ret
in
push
into
add
movs
push
add
sub
mov
cmp
push
push
mov
jmp
or
ja
add
and
pop
xchg
ins
mov
dec
mov
pop
xchg
mov
mov
push
fldcw
inc
add
gs
adc
mov
push
enter
xor
mov
bound
lahf
ins
sub
and
cmp
sub
cs
push
mov
jnp
or
jmp
dec
xor
xchg
push
sbb
daa
sbb
loop
mov
mov
ins
call
jecxz
lea
pop
sub
and
ror
pop
call
mov
sub
mov
dec
add
cmp
ficom
push
xchg
inc
(bad)
cmp
pop
cmp
or
jb
fldl2t
cmp
add
lds
jp
iret
xor
pop
or
dec
ja
aad
pop
xor
jmp
xor
hlt
popa
mov
aad
ror
mov
bound
arpl
pop
(bad)
xor
dec
out
ins
xchg
pop
inc
xor
push
jecxz
xchg
inc
aad
push
push
dec
fdiv
fcomp
push
or
(bad)
je
adc
cmp
push
sbb
(bad)
lock
aad
inc
push
sub
add
pop
xor
sub
adc
jmp
push
or
or
ret
mov
jb
aad
mov
pop
fdivp
mov
add
or
sub
test
(bad)
pop
sub
push
ja
xchg
call
frstor
rol
xchg
aas
or
push
or
and
cmp
das
ret
stos
in
xchg
mov
leave
aaa
mov
cmp
xor
mov
cmp
leave
mov
fadd
cmp
and
push
fimul
or
jge
sub
add
fld
dec
jae
cmp
cmps
fsubr
sub
bound
or
arpl
adc
push
and
push
mov
cs
es
pop
pop
outs
sahf
loope
push
call
or
test
dec
adc
push
cmp
sbb
xor
mov
jns
push
push
add
add
ror
jbe
push
sbb
fldcw
mov
cld
outs
pop
mov
mov
lea
cmp
push
fsubr
jmp
dec
dec
cmp
push
adc
pusha
jl
sahf
pop
fild
adc
mov
push
sub
xor
mov
pop
ds
cdq
jns
dec
mov
xor
cmp
out
jo
cmp
pop
pslld
add
xchg
cld
or
pusha
cmps
add
mov
lds
mov
cmp
aaa
and
in
mov
ds
push
xor
and
adc
mov
neg
clc
jle
or
or
aaa
call
call
mov
mov
rol
jnp
mov
mov
inc
push
jo
retf
(bad)
lock
(bad)
sbb
call
imul
and
jmp
lock
movs
inc
(bad)
mov
and
push
je
mov
inc
or
or
leave
mov
ins
les
ret
and
dec
dec
add
lock
push
jmp
or
cli
jge
or
dec
xor
fld
add
sbb
ret
mov
add
outs
add
inc
mov
xchg
cwde
pusha
dec
cli
inc
sbb
scas
cmp
xchg
jno
(bad)
jge
push
in
in
in
cdq
cmp
push
call
or
pop
js
pop
ret
mov
cmc
add
mov
push
sbb
je
push
fcomp
ret
xor
test
ret
push
xor
add
adc
and
mov
sbb
or
and
xchg
ja
jo
mov
int
(bad)
bound
arpl
sub
sahf
or
mov
adc
sbb
test
jo
and
sbb
or
pop
pop
sub
pusha
lods
or
inc
sub
and
jp
mul
adc
inc
pop
unpckhps
xchg
push
in
cwde
add
mov
mov
sub
loopne
or
and
add
ret
xor
cmp
fdiv
cmp
add
inc
adc
adc
add
fmul
pop
jbe
ja
mov
mov
pop
(bad)
xor
stc
or
push
mov
and
call
mov
or
and
push
jle
das
xor
mov
out
jle
in
add
and
bound
xor
pop
scas
sub
push
add
jg
in
in
enter
out
sahf
or
jle
mov
cld
mov
xor
xchg
and
mov
test
ret
adc
dec
adc
mov
pop
lock
das
aas
xchg
sub
adc
xor
mov
dec
inc
pop
cmps
jns
sbb
add
js
lods
rcl
push
push
jecxz
or
test
jno
push
sub
xchg
bound
pop
push
lahf
aaa
test
or
and
mov
xor
mov
(bad)
xchg
or
dec
adc
test
loop
push
movs
lock
add
es
inc
lea
xchg
mov
push
jmp
add
inc
push
xor
mov
xor
clc
xor
xor
call
xor
dec
dec
sub
jmp
pop
mov
push
push
test
lods
xor
dec
mov
loop
imul
scas
pop
cmp
not
stos
inc
sub
cmps
or
sub
lds
fiadd
or
sbb
in
xor
mov
adc
add
call
rol
pop
outs
add
icebp
fadd
sti
add
push
or
mov
jns
mov
fwait
or
mov
dec
or
stos
push
pop
mov
loopne
xchg
add
adc
fisttp
aam
mov
fnsave
sti
push
mov
icebp
mov
cmp
cwde
adc
in
sahf
add
mov
pop
push
and
call
in
xor
fldenv
pushf
fidiv
push
rol
sbb
lds
or
push
stos
sbb
mov
nop
inc
ficomp
adc
aas
inc
out
test
xchg
inc
push
mov
out
(bad)
inc
gs
pop
jg
lock
sbb
(bad)
dec
test
sar
push
push
dec
ins
inc
mov
xlat
push
out
sbb
mov
xor
loopne
xchg
xor
add
scas
add
xchg
xchg
sub
in
aad
hlt
sbb
adc
dec
mov
inc
jmp
jmp
dec
push
or
push
xchg
push
cmp
jbe
mov
nop
push
mov
(bad)
mov
mov
jle
sub
xchg
dec
xchg
sbb
cmps
ret
xor
sti
cld
iret
add
push
mov
sbb
jmp
loop
imul
adc
jmp
adc
xchg
pop
xchg
movs
shl
rol
shr
cmp
and
mov
adc
(bad)
cmp
fidivr
xor
cmp
pop
cdq
or
mov
inc
out
jnp
cld
add
add
mov
pusha
ret
pop
jp
arpl
les
je
mov
dec
or
dec
or
sub
sub
call
adc
push
dec
mov
punpcklbw
cmp
mov
or
inc
add
fwait
sar
rcr
or
lds
cmp
push
mov
das
addr16
stos
mov
or
dec
ds
push
imul
es
sub
jecxz
repnz
movs
das
sbb
xor
ss
shl
enter
call
ficom
add
js
dec
fisub
mov
sahf
ds
ror
test
sahf
aam
out
enter
push
sar
ret
jle
or
and
pop
adc
lea
push
dec
stos
shr
dec
mov
inc
mov
cmp
mov
or
jo
ret
xor
push
and
sbb
das
sub
ds
push
xchg
in
mov
push
jo
clc
xchg
pop
cmp
push
inc
sbb
mov
cwde
arpl
or
rcr
pop
aaa
sbb
xor
movs
push
jno
mov
push
cmp
ds
mov
dec
sbb
mov
popa
(bad)
mov
xchg
cmp
mov
fsubp
push
not
pop
or
not
push
ins
not
add
scas
fsubr
add
dec
test
xor
repz
dec
scas
add
sbb
jl
cwde
(bad)
gs
pop
rol
inc
mov
mov
fs
mov
bound
int3
mov
out
xlat
fisttp
pop
sub
jb
fbld
add
adc
add
or
imul
(bad)
sbb
ret
sub
push
sub
dec
pop
outs
or
mov
pusha
add
lea
out
sbb
mov
and
int
adc
jno
nop
aam
sub
cld
(bad)
test
test
sbb
cld
or
add
push
test
jp
adc
call
mov
mov
loope
mov
or
xchg
xchg
mov
cs
cmp
mov
pop
pop
dec
jecxz
push
stc
out
mov
or
imul
in
pop
sbb
jmp
mov
fs
call
das
push
rcl
lods
or
aad
in
jmp
push
fsubp
xor
dec
add
call
xchg
iret
xor
bound
pop
pop
pop
jg
pop
adc
mov
mov
not
inc
cmps
fwait
in
mov
and
push
(bad)
push
and
mov
and
cmps
adc
or
pop
into
and
inc
ret
addr16
jo
dec
es
test
push
loopne
pop
mov
nop
and
mov
inc
xor
add
adc
dec
js
aas
cmp
lock
xchg
jp
cmp
jno
or
xchg
or
mov
add
inc
or
call
test
mov
mov
push
mov
dec
add
rcl
pop
push
inc
mov
test
push
mov
and
xor
imul
or
add
in
pop
inc
loope
pop
or
or
mov
in
pop
gs
push
(bad)
and
lea
ret
call
popf
cli
jge
sub
mov
push
repz
cmps
xor
or
lods
push
loope
jg
adc
inc
push
ror
xor
jbe
push
add
je
cmp
push
inc
add
xchg
pop
pop
inc
fisubr
add
dec
add
and
sub
retf
or
sbb
sub
push
push
rcl
or
retf
mov
sar
je
add
push
int3
inc
ret
inc
out
jne
sbb
xchg
adc
xor
test
pushf
add
inc
add
and
adc
cmp
pop
jb
ds
sbb
or
dec
aas
jae
leave
push
jno
pushf
jmp
inc
inc
mov
fisubr
fdiv
mov
push
add
lds
and
not
xchg
add
out
cmp
in
pop
pop
pusha
stos
icebp
xor
adc
clc
adc
add
mov
movs
mov
push
jmp
sub
rcl
xchg
inc
or
shl
cmp
sub
dec
mov
dec
test
sahf
fwait
stc
push
mov
add
cmps
sbb
sub
sbb
xchg
or
mov
push
push
adc
mov
ret
test
les
mov
jns
mov
dec
aad
and
or
sahf
mov
xor
mov
mov
or
mov
add
add
mov
add
jns
lea
or
adc
adc
icebp
xchg
in
inc
inc
push
push
movs
je
cwde
pop
push
adc
xchg
adc
xchg
test
or
imul
in
add
stos
or
xchg
enter
call
add
push
cmp
xor
sub
out
inc
add
pop
clc
imul
push
stos
test
fist
push
add
dec
jmp
push
mov
push
and
test
ins
call
and
cmps
mov
ja
xchg
outs
jle
push
mov
jmp
sbb
test
mov
fs
outs
push
movs
iret
jl
loopne
aas
cmps
daa
cmp
pop
or
sbb
pop
lea
jmp
(bad)
and
shl
int3
and
and
ror
mov
pushf
jbe
cmp
sbb
or
cmps
lock
push
mov
dec
bound
jb
add
mov
cwde
mov
nop
in
vmovlps
and
call
jne
lahf
xchg
inc
jge
xchg
test
lods
xchg
push
add
(bad)
stos
and
int
jge
push
push
jns
shl
inc
ret
xchg
pushf
lea
inc
xchg
add
mov
push
add
iret
loopne
leave
push
push
sar
repnz
adc
das
ins
jb
add
and
pminub
inc
loop
dec
xor
lds
or
sub
dec
test
and
enter
jb
and
cmp
xchg
sub
and
mov
sub
addr16
cmp
jg
movs
rcl
outs
stc
icebp
dec
jmp
cmp
fld
xor
mov
inc
rcr
dec
mov
and
mov
mov
add
les
cmps
std
add
cs
adc
movs
inc
and
nop
iret
xor
or
pop
push
and
movs
retf
dec
popa
cmp
or
fs
fs
inc
pop
sub
jl
cmp
adc
inc
xor
sub
sub
mov
xchg
push
jp
jne
adc
in
cdq
sbb
add
mov
out
ficomp
jl
sbb
clc
jge
pop
punpckhwd
je
push
sbb
push
rol
cmc
jge
out
add
mov
xor
dec
xor
scas
xor
jo
xchg
xchg
add
dec
das
das
jmp
dec
and
fcmovb
sub
scas
neg
in
stos
mov
mov
pop
cmp
cmps
push
lock
xor
sahf
mov
or
inc
xchg
cmps
cmp
sub
cmp
mov
dec
xchg
cli
inc
inc
add
xchg
xchg
xlat
xor
imul
push
or
and
add
pop
loop
push
add
mov
mov
add
xchg
or
es
xor
das
and
adc
sbb
enter
test
test
or
adc
bound
rol
adc
push
ret
imul
fisubr
aam
pop
cmp
cmp
adc
(bad)
cmp
sub
xchg
clc
add
mov
add
add
sub
dec
sahf
mov
(bad)
mov
mov
fst
movs
push
xor
(bad)
lahf
and
push
and
int3
rcr
(bad)
in
push
aam
scas
pop
push
push
inc
lea
(bad)
aad
mov
aas
or
aad
enter
dec
mov
rol
dec
add
sbb
pop
adc
cld
sbb
push
inc
adc
pop
push
push
call
and
pop
ret
call
xchg
arpl
fwait
div
pop
jbe
add
je
push
add
sub
sub
inc
lahf
sub
inc
inc
push
(bad)
pop
ror
adc
mov
or
imul
lock
push
cmp
ret
mov
jl
xor
inc
push
shl
xor
sub
mov
pop
ja
add
test
and
add
push
inc
sahf
and
inc
idiv
pop
push
xor
dec
and
or
enter
loopne
test
mov
push
mov
ret
mov
xchg
(bad)
push
sub
add
or
dec
add
or
stos
or
xlat
cwde
dec
dec
mov
shl
out
cmp
dec
pop
jmp
push
jmp
(bad)
je
mov
sub
adc
xchg
mov
lods
mov
cmp
in
lock
xchg
add
or
xor
aaa
sar
pusha
pop
loopne
sub
inc
(bad)
and
lds
or
inc
inc
sub
xor
sub
out
mov
aad
es
shl
fs
jmp
dec
ins
and
fdiv
push
rcr
jle
int3
cmp
xor
movs
dec
pop
jmp
push
and
sbb
adc
lea
sbb
pop
aam
in
xchg
jle
mov
mul
add
xor
xchg
jo
sub
xor
push
div
or
inc
jl
fiadd
mov
cmp
cdq
(bad)
arpl
(bad)
movs
jb
dec
cmp
popa
addr16
sbb
sar
inc
push
fiadd
pop
(bad)
cmp
mov
pop
imul
lods
lea
movs
mov
or
cmp
sbb
or
and
inc
data16
sub
std
repnz
jno
or
iret
or
nop
out
cli
pop
jno
(bad)
sub
add
call
or
in
inc
iret
push
xlat
cli
add
cmp
and
dec
mov
dec
pop
rol
movs
xor
test
scas
iret
stc
sbb
cmp
push
xlat
fcmovu
sbb
jb
and
mov
sub
xchg
mov
lahf
(bad)
sub
mov
ins
loop
adc
xor
dec
in
jno
xor
stos
xchg
push
test
fild
jns
ret
fld
adc
mov
ins
fidivr
or
mov
adc
aam
sbb
and
scas
mov
jbe
call
jmp
outs
pop
sbb
xor
cdq
scas
push
cs
and
jne
dec
push
or
movs
push
jmp
call
jle
repnz
inc
cmp
cmp
cmp
mov
ret
adc
not
push
xor
int3
inc
popf
call
lea
fistp
dec
inc
or
xor
adc
inc
jmp
sahf
out
js
ror
inc
push
mov
inc
adc
jne
shl
sub
cld
fdivp
inc
popa
popa
xor
test
push
mov
sub
adc
push
pop
mov
or
test
rol
test
or
inc
mov
fadd
add
fld
xchg
push
rcr
add
iret
enter
nop
add
imul
nop
add
call
push
sbb
xchg
test
outs
jmp
loope
adc
lahf
xor
add
sti
jbe
xchg
add
loopne
push
inc
inc
or
or
inc
scas
or
push
addr16
jns
or
nop
xchg
inc
cs
ja
push
push
enter
xchg
rcl
jmp
xchg
cmp
and
(bad)
jne
pop
mov
pop
mov
(bad)
adc
jmp
loop
adc
cmove
popf
ror
gs
inc
shl
jbe
pop
pop
adc
push
xchg
inc
neg
leave
stos
and
in
enter
add
in
add
gs
cmp
inc
push
daa
jno
xchg
inc
jle
dec
cmps
sti
push
call
and
in
cmp
ss
es
nop
inc
push
xor
adc
and
mov
mov
adc
mov
jbe
stos
inc
sub
pop
xchg
std
xchg
inc
ins
mov
je
xor
ror
add
add
cmp
ss
add
call
ins
adc
leave
mov
imul
and
cld
rcr
jg
sub
and
sub
sbb
hlt
fxsave
pop
push
test
je
jae
sub
and
push
loop
rcr
add
and
outs
pusha
loopne
xor
and
or
aam
inc
pop
popf
pop
jnp
in
mov
stc
cld
dec
mov
push
jo
inc
pop
mov
or
dec
aaa
outs
adc
xor
repz
add
adc
cmp
scas
add
adc
add
jns
into
test
call
bound
cmp
push
(bad)
sbb
xor
ins
mov
push
mov
cli
add
test
cmp
int3
imul
xor
test
xor
test
inc
or
pop
(bad)
jne
mov
test
mov
cld
or
inc
xchg
scas
(bad)
jne
test
not
cmps
dec
pop
adc
or
ds
push
sub
out
jg
movs
pushf
inc
test
add
aad
inc
push
call
xor
xor
jle
sub
xor
sbb
add
xchg
add
(bad)
das
jo
or
jne
pop
mov
lock
js
js
call
ds
adc
xor
jl
and
mov
xor
mov
mov
pop
rol
jmp
rol
pusha
sahf
out
add
xchg
jnp
in
cmp
mov
ret
sbb
inc
sub
cs
xchg
lock
clc
mov
push
push
push
cmp
ja
into
jno
call
push
shl
jmp
pop
xchg
mov
repz
das
cdq
add
jae
test
out
jb
dec
je
dec
dec
dec
pop
pop
pop
mov
sbb
push
das
pop
pop
push
cmc
jmp
lea
dec
and
rcr
lods
inc
pop
shl
or
mov
cld
or
add
sub
xchg
and
mov
xor
pop
sbb
adc
lods
sbb
mov
inc
stos
call
stc
fadd
mov
mov
(bad)
jmp
or
mov
xchg
inc
push
sbb
push
or
sbb
cmps
test
sub
sub
jecxz
add
mov
pop
add
jne
test
je
ss
mov
lods
retf
xor
cmp
pusha
pop
pop
dec
add
movs
xchg
xchg
clc
push
xlat
mov
push
xor
mov
and
push
add
and
inc
enter
adc
add
in
iret
sub
call
xor
fild
je
inc
call
jbe
dec
push
or
push
dec
xchg
outs
jmp
xor
mov
pop
mov
mov
pusha
mov
add
scas
test
dec
add
out
mov
dec
push
fcomp
cdq
mov
imul
hlt
out
call
loop
or
inc
js
rcr
(bad)
pusha
movs
test
pusha
les
dec
xor
in
cmc
and
inc
add
in
in
(bad)
lea
pop
mov
mov
pop
fmul
add
cmp
bound
mov
enter
das
mov
add
jle
add
daa
outs
dec
inc
adc
dec
push
sbb
mov
mov
cwde
test
in
dec
cs
shl
leave
dec
cs
inc
cmp
xor
mov
jle
adc
ret
mov
sbb
ins
cwde
bound
adc
imul
sbb
mov
call
mov
and
sbb
int
or
leave
lahf
adc
cmp
sub
push
loopne
rcr
jo
aas
int3
inc
mov
maxps
add
xchg
mov
push
cmps
and
ins
inc
ret
int
pushf
or
sti
mov
icebp
mov
cmps
sub
jbe
and
fst
sbb
xchg
mov
mov
push
fst
popf
in
and
pop
add
cmc
cmp
cmp
loopne
xchg
pushf
jns
iret
cmp
mov
scas
mov
ja
mov
outs
neg
add
sti
retf
jg
repnz
inc
test
test
inc
gs
jmp
repz
inc
xchg
dec
xchg
inc
mov
xor
dec
in
cmp
mov
test
dec
fist
xor
add
push
jo
cmc
daa
loop
cmps
div
pusha
and
inc
inc
mov
jmp
psrad
and
movs
loopne
int3
retf
(bad)
test
jl
or
cmp
cmp
loop
xor
jge
pop
add
ss
(bad)
sub
add
movs
inc
test
pop
pop
jmp
adc
pop
jecxz
jecxz
and
push
add
(bad)
xor
mov
mov
aaa
adc
inc
stos
and
ret
and
sbb
jl
push
xchg
nop
mov
fsubr
(bad)
sub
sub
dec
jns
push
xchg
les
xor
rcr
sbb
jne
and
jmp
push
push
mov
inc
inc
test
jbe
jae
fs
or
out
fisub
cmp
ror
pop
add
shl
push
aaa
test
repz
adc
mov
or
fdivrp
add
mov
(bad)
xor
push
push
mov
inc
push
inc
call
add
push
xor
rol
xor
mov
xor
fmul
out
fstp
mov
jmp
mov
pop
not
clc
and
add
xchg
out
call
mov
pop
sbb
sbb
xchg
stos
shl
ss
je
push
xor
repz
or
cmp
add
sahf
mov
xchg
mov
inc
mov
cmp
add
fdivr
je
pop
lock
add
repnz
mov
jmp
scas
add
adc
push
push
xchg
or
in
mov
push
dec
cmp
or
stc
lods
mov
jmp
xor
lahf
out
cmps
push
sub
add
repz
test
xchg
push
xor
sar
add
mov
ret
sub
adc
js
add
gs
jmp
rol
push
mov
pop
sbb
outs
ins
je
cli
sbb
jle
je
nop
loopne
call
xor
cmp
ror
fwait
popa
stos
dec
ins
adc
neg
neg
jne
adc
cmp
adc
loopne
sub
(bad)
nop
xchg
adc
mov
add
mov
ret
cs
push
push
inc
or
call
fidivr
int3
gs
cmc
adc
cld
dec
stos
inc
push
int3
repz
mov
inc
call
in
adc
jmp
sub
and
add
sbb
(bad)
popa
inc
cs
cmc
das
arpl
les
xchg
push
dec
xchg
nop
test
jns
dec
out
test
xchg
lods
jo
xor
jns
scas
mov
or
push
test
add
imul
mov
xor
jmp
inc
mov
mov
push
adc
pop
dec
fld
adc
rcr
xor
sti
bound
add
loopne
loop
fcom
xor
push
js
and
sub
stc
xchg
cmc
loop
add
jmp
mov
jns
cwde
and
imul
stos
mov
or
add
or
adc
call
mov
(bad)
clc
push
aas
neg
ds
loop
cmps
or
sbb
retf
pop
fwait
add
or
sbb
(bad)
cmc
sub
cmps
xchg
ins
lock
add
inc
inc
dec
enter
jecxz
inc
and
retf
call
shl
outs
or
ins
data16
ret
rcr
sbb
out
pop
add
inc
mov
cmp
adc
out
sub
xchg
data16
ss
mov
retf
sub
ds
sub
(bad)
sub
lds
outs
cmp
add
rcl
nop
mov
mov
outs
jl
lds
dec
mov
cdq
rol
jo
pushf
jle
(bad)
outs
ret
inc
xchg
call
in
or
jg
adc
add
adc
inc
xor
sbb
icebp
sti
xchg
stos
or
lods
clc
sub
dec
inc
jne
push
call
repz
or
sub
lock
push
mov
movs
(bad)
inc
iret
push
adc
and
xor
in
jmp
dec
sub
add
ins
adc
cli
shl
js
xor
fldenv
cmp
loope
sub
mov
ret
jmp
adc
shufps
and
add
aaa
and
add
xchg
and
jbe
in
je
jge
adc
xor
lahf
les
xor
inc
dec
and
jo
loope
iret
retf
xchg
mov
outs
cmp
xchg
(bad)
mov
mov
sbb
pop
mov
jnp
or
push
push
jb
leavew
pop
or
inc
cmp
jbe
stos
xchg
push
stos
cmp
out
push
dec
xlat
or
repz
jmp
jl
shr
mov
in
mov
mov
add
add
adc
dec
add
add
add
add
pop
test
or
pushf
fadd
add
or
or
add
in
or
test
cwde
rcl
mov
clc
movs
out
add
add
xchg
retf
movs
xor
dec
add
or
xchg
and
iret
mov
adc
add
add
(bad)
stos
rol
jp
push
sub
inc
pop
cmp
or
and
test
xchg
lods
das
mov
push
add
dec
adc
xchg
xchg
adc
in
retw
mov
cs
movzx
add
add
jne
add
call
add
imul
add
out
push
mov
in
add
or
pavgb
push
arpl
dec
lea
mov
loopne
push
mov
add
jb
fisttp
or
add
xchg
nop
adc
(bad)
push
sbb
imul
xor
or
call
mov
xchg
mov
pop
je
push
add
repz
sar
loope
add
loope
jne
add
cmp
sbb
add
out
int3
imul
jnp
cmp
jmp
clc
adc
jo
retf
add
pop
jle
stc
jl
add
jb
ds
xor
and
add
sbb
jae
adc
and
jns
dec
jbe
dec
ret
imul
jl
pop
sbb
movs
add
enter
movs
jb
sti
jmp
add
add
xor
cmp
(bad)
loope
cmp
rol
rcl
fldcw
inc
push
push
cmp
add
std
add
aaa
ins
imul
hlt
pop
push
mov
or
add
cmp
nop
scas
cmp
xchg
daa
dec
sub
pop
test
movs
mov
out
dec
(bad)
out
sbb
mov
xchg
dec
in
mov
pushf
into
inc
or
shl
mov
lahf
ss
rol
or
call
(bad)
mov
or
mov
pop
in
cmp
sbb
es
daa
dec
push
push
push
add
push
(bad)
addr16
js
lods
and
mov
add
lds
add
fs
sbb
cld
ds
jne
push
mov
mov
adc
push
std
scas
ins
adc
or
fidiv
and
dec
leave
and
xchg
sub
pusha
and
cmp
pop
imul
add
add
mov
mov
aad
adc
or
(bad)
or
and
sub
adc
call
call
fstp
fsubr
inc
pushf
loopne
das
or
mov
fs
xchg
les
jg
shl
xchg
sub
push
or
xchg
adc
cs
xchg
jle
dec
mov
mov
(bad)
mov
mov
and
cmc
sub
aas
lods
mov
(bad)
out
add
nop
in
mov
add
mov
push
pop
mov
and
cmp
daa
jle
and
adc
and
or
add
in
jmp
cli
nop
out
loope
mov
pop
mov
dec
push
rol
cmp
or
xchg
shl
cmps
ret
lock
lock
push
cmp
push
call
call
ret
fild
call
inc
fs
jp
test
inc
jo
out
mov
sbb
dec
mov
inc
mov
add
xchg
hlt
add
fiadd
sub
push
lock
cdq
test
add
hlt
stos
xor
ins
cmp
lock
pop
add
push
mov
or
cmp
adc
mov
dec
xchg
push
dec
push
mov
test
loope
adc
fild
jmp
in
mov
sub
push
pop
sbb
sub
es
fcom
xor
nop
pop
mov
jp
aaa
scas
cwde
adc
call
jge
test
data16
nop
jmp
sub
and
add
idiv
xor
and
add
xchg
lock
and
call
data16
jno
mov
xchg
cmp
mov
inc
add
(bad)
push
push
pusha
pop
sbb
mov
xor
std
adc
ds
push
jecxz
outs
xor
cmp
xor
adc
xor
clc
mov
retf
ret
jl
mov
sub
add
dec
popa
pop
mov
push
sbb
mov
add
lock
xchg
and
adc
and
dec
xor
xchg
(bad)
push
cmp
adc
or
popa
push
loop
shr
pop
xor
and
ss
test
sbb
dec
pop
inc
push
aaa
xor
fld
xchg
ror
push
inc
sub
icebp
inc
mov
test
mov
xor
call
sub
fcomp
mov
adc
or
mov
daa
out
mov
in
mov
xor
movs
or
ret
iret
loope
imul
sbb
jmp
fnstcw
xchg
and
in
and
mov
jns
add
add
cmp
out
stos
mov
into
cdq
popf
mov
push
or
jae
out
add
push
lss
lahf
sub
movs
add
div
into
xchg
sar
je
cmp
sbb
cmp
inc
add
call
add
push
cmp
stos
and
arpl
in
mov
add
jne
imul
in
and
into
xchg
fimul
int
mov
push
add
mov
(bad)
push
aam
and
mov
(bad)
call
jle
adc
jecxz
cmp
test
or
rep
daa
jle
test
inc
es
in
ret
push
dec
adc
scas
sbb
pushf
add
dec
sbb
add
adc
sub
push
cmp
mov
add
sub
cmp
shl
add
mov
or
jae
xlat
or
lea
adc
pusha
hlt
push
mov
push
iret
test
lds
leave
xchg
add
call
inc
ss
iret
mov
mov
mov
and
and
push
neg
adc
pop
add
and
test
and
in
mov
pop
and
sub
add
dec
mov
mov
fnstenv
retf
push
add
lahf
dec
or
sub
inc
jg
and
fmul
or
repnz
add
push
aaa
adc
jb
fcomp
sbb
sbb
mov
sub
add
rol
enter
add
sti
mov
xchg
cs
adc
push
adc
add
enter
push
inc
enter
shr
shr
jg
sub
jae
and
add
xchg
jg
inc
xor
and
fistp
dec
and
mov
sub
push
add
and
test
push
inc
lds
fld
jmp
push
ret
outs
int
sbb
mov
and
movs
movs
mov
les
movs
jmp
inc
mov
jl
mov
add
pusha
fs
cli
ror
cmc
or
shl
leave
and
push
cmp
xor
sti
or
sbb
sar
push
push
aad
adc
add
sub
xor
jb
in
xchg
test
add
vpcmov
int3
push
les
cmp
lea
push
sub
rcr
add
nop
arpl
pop
push
adc
aam
inc
jmp
jo
int
sub
mov
cdq
ins
fiadd
add
add
pop
repnz
daa
mov
or
call
xor
cld
rol
lahf
pushf
jle
data16
mov
inc
mov
ret
test
sbb
jns
cmp
or
nop
sub
adc
add
cmp
dec
push
xchg
cmp
pop
inc
cwde
inc
mov
stos
cmp
cmp
adc
add
es
sub
jmp
sbb
mov
call
ins
push
adc
add
imul
fild
push
test
jno
cmps
sbb
js
or
push
dec
add
imul
punpckhwd
stos
xchg
loopne
mov
mov
or
sub
add
clc
lea
je
xlat
xchg
in
jg
scas
jnp
call
add
rol
jmp
push
push
lods
push
push
inc
sbb
sti
leave
add
adc
add
mov
jo
pop
add
push
jmp
ror
ds
mov
add
xchg
push
ret
(bad)
mov
mov
mov
call
push
aaa
outs
call
adc
dec
mov
popw
mov
pop
pop
lea
inc
hlt
sub
adc
jle
xor
xchg
lahf
and
or
sub
shl
sti
enter
inc
cmp
sbb
jmp
mov
enter
push
jmp
xor
mov
ret
pop
arpl
or
mov
mov
push
jns
das
xchg
sbb
ret
cmp
add
femms
nop
dec
dec
nop
and
push
cmp
movs
push
inc
lea
push
jg
je
stos
in
ficom
jmp
cmp
adc
(bad)
and
jo
or
push
push
loopne
add
out
cdq
repz
pop
adc
jmp
fsubrp
add
dec
jmp
add
pop
pop
aam
cs
sbb
cwde
jns
xor
mov
sbb
adc
sbb
adc
inc
dec
or
and
imul
mov
js
cmps
fcmovnu
enter
dec
lock
nop
retf
enter
cs
mov
das
push
jns
jecxz
test
add
stc
push
jne
or
cdq
test
rcr
pop
fistp
sbb
nop
outs
sub
and
mov
popf
xor
nop
dec
pop
popa
jecxz
push
push
adc
mov
loopne
movs
jle
adc
add
mov
pop
pop
inc
mov
mov
dec
jmp
or
fwait
mov
inc
test
cmps
xor
ins
jge
jo
test
retf
xchg
inc
movs
xor
pop
cmps
inc
cmp
into
push
fcomp
sub
popf
cmc
popf
fist
xchg
add
or
rol
scas
pop
dec
pop
cmps
inc
dec
inc
add
xor
call
rcl
sub
pop
jo
push
xchg
popa
test
push
push
movs
xor
movs
jmp
adc
inc
rcr
adc
repz
mov
adc
call
mov
inc
fnstenv
js
adc
or
jmp
call
or
inc
addr16
das
or
pop
test
dec
sbb
pop
cwde
lahf
ins
inc
clc
or
outs
push
test
pop
mov
test
test
jno
pusha
les
pop
jno
call
add
xor
adc
and
fs
cmp
xchg
cmp
sub
popa
test
xchg
outs
mov
sbb
inc
aam
sub
push
xor
lea
retf
add
adc
jne
jl
pop
push
retf
pop
sub
push
fist
retf
pop
push
mov
and
or
out
inc
lea
cmps
mov
ret
mov
push
adc
mov
and
inc
cmp
adc
popa
add
lahf
or
cdq
in
add
xor
xchg
aas
fs
sbb
dec
fld
xor
mov
fstp
inc
xchg
(bad)
inc
pop
adc
cwde
xchg
push
icebp
pop
repnz
dec
(bad)
jle
repnz
nop
pushf
in
pop
mov
mov
mov
xchg
dec
sub
sbb
leave
cwde
std
mov
scas
adc
mov
or
sub
imul
jle
xchg
xchg
dec
gs
fdivr
xor
daa
pop
sub
sub
mov
adc
movs
jb
or
add
push
adc
call
ins
xchg
push
push
mov
out
jb
mov
add
mov
pop
xor
fbld
movs
jb
repz
push
into
repz
mov
std
or
out
push
adc
movs
jb
push
ret
sub
sub
add
push
movs
xor
ucomiss
mov
push
(bad)
cmp
sub
test
mov
jnp
outs
cmps
cs
sub
push
xor
dec
or
push
push
gs
and
or
push
push
test
fistp
rcr
outs
inc
sar
imul
cmp
push
cmp
call
movs
repnz
mov
call
imul
aas
push
call
adc
and
sar
popf
and
mov
mov
adc
xlat
adc
mov
aaa
pop
js
lahf
and
jo
inc
jl
jl
fucomp
into
push
push
pusha
call
movs
popa
mov
dec
imul
push
stos
inc
inc
popf
push
push
jne
mov
arpl
add
or
sub
pop
inc
push
cmp
in
loopne
or
aas
aaa
pop
test
hlt
sbb
ds
imul
lea
dec
(bad)
enter
aas
dec
pop
pusha
xor
hlt
and
ret
sbb
cmp
adc
adc
pushf
sub
dec
add
aam
add
les
dec
xor
sbb
sub
enter
fwait
inc
pop
test
sub
cmp
add
or
es
(bad)
add
sbb
(bad)
(bad)
lgdtd
pushf
pushf
sbb
push
sub
repnz
sbb
add
cmp
or
enter
cmp
nop
xchg
xchg
leave
sbb
and
nop
mov
sbb
ss
mov
and
jle
pusha
pop
sub
sbb
pop
xchg
and
adc
and
pushf
jns
pop
sbb
nop
aas
jne
add
fmulp
add
pop
adc
cmp
fild
sbb
pop
adc
mov
sub
dec
or
inc
fwait
pop
dec
jns
test
in
sub
out
adc
adc
aaa
sbb
fcmovu
sub
cmp
mov
lods
and
mov
cli
push
and
mov
mov
push
call
sub
lahf
je
push
xor
jmp
jbe
sub
retf
fcmovnb
fmul
test
icebp
pop
test
mov
je
sub
mov
add
scas
int3
es
inc
fistp
mov
push
ds
pop
adc
jg
std
xchg
les
fmul
lea
xor
lods
outs
jp
pop
and
adc
aad
ins
jge
rcr
add
push
cmp
xchg
jb
and
(bad)
mov
cmps
dec
(bad)
(bad)
fild
test
ret
cmp
or
imul
arpl
jo
es
ret
dec
mov
mov
cmp
adc
fild
inc
or
or
adc
sub
popa
femms
xchg
ret
and
and
popa
out
push
lods
add
add
jns
mov
add
jmp
cld
add
sub
inc
cmps
jge
add
mov
movs
fild
in
sti
jge
int
jge
pop
and
mov
fwait
ror
pop
dec
cmc
inc
pop
and
in
test
in
mov
fst
xchg
iret
sub
and
repnz
hlt
add
mov
pushf
iret
xchg
push
inc
ret
jle
lods
or
dec
pop
aad
sub
cmp
mov
dec
and
or
inc
xchg
pop
sbb
dec
sbb
int3
lock
sbb
push
call
push
(bad)
ud2
add
adc
or
cmp
and
ret
icebp
dec
cmp
xchg
cmp
or
mov
push
mov
jle
mov
cld
(bad)
test
vmovaps
push
inc
mov
push
pop
adc
lock
loopne
cmp
or
add
arpl
and
push
lock
or
in
ret
lods
sbb
add
fstp
xchg
push
push
loope
ss
jge
out
dec
adc
call
pop
pop
loopne
lahf
mov
movs
jns
pop
and
push
call
xor
mov
xor
ins
enter
or
rcr
jbe
aam
adc
aas
adc
fsubr
and
arpl
add
mov
add
add
mov
loopne
daa
popa
aam
adc
retf
inc
add
adc
pop
add
and
pop
push
icebp
adc
iret
push
in
popf
pop
push
adc
shl
rcl
daa
xchg
test
adc
inc
loop
cmp
(bad)
les
sbb
push
icebp
or
jne
add
pop
pushf
push
push
in
cmp
xchg
aaa
rcr
lahf
div
mov
pushf
sbb
cmp
sahf
push
add
pop
arpl
mov
inc
inc
add
pop
stos
push
lods
xchg
xchg
lahf
mov
add
int
test
xchg
ins
push
bound
or
ins
xchg
inc
pop
jb
mov
push
push
mov
cs
call
das
mov
pop
inc
loopne
popa
sbb
dec
test
push
js
adc
scas
cwde
fs
inc
jo
pop
loope
adc
adc
fisub
hlt
fdivr
sbb
fsubp
retf
aaa
cmps
xor
jecxz
inc
xchg
mov
xchg
push
xchg
cdq
shl
rol
mov
mov
inc
push
pop
mov
mov
out
lods
mov
pop
sub
and
adc
retf
sub
or
jmp
dec
inc
sbb
and
sub
test
stos
or
sbb
or
pop
inc
mov
adc
arpl
dec
or
jle
inc
mov
sub
mov
jo
sbb
fmul
daa
mov
or
adc
and
imul
out
cmc
push
or
(bad)
xor
mov
lds
cwde
lock
mov
cs
stos
add
stos
rol
inc
inc
lahf
xchg
lahf
cs
sbb
in
test
js
mov
pop
popf
mov
xchg
mov
sub
cs
jge
push
dec
arpl
psubb
dec
push
mov
out
call
sbb
and
dec
jg
push
add
mov
loopne
adc
or
js
into
in
mov
xor
jg
push
mov
fsubr
idiv
aaa
jmp
in
sbb
jecxz
je
aam
cli
add
cmp
xchg
sub
test
int3
dec
mov
pop
jbe
jbe
xchg
push
fst
inc
and
nop
sbb
add
shl
dec
test
cmps
lea
push
ror
loopne
pop
test
cmc
sets
and
ret
mov
nop
popa
mov
movs
movs
add
or
pop
loopne
test
or
adc
and
sub
pushf
(bad)
adc
sub
xor
test
in
xchg
cmp
ja
je
xor
push
inc
es
and
pop
repz
or
add
push
call
and
mov
test
jno
xor
jge
fwait
enter
xlat
adc
les
iret
aad
cmp
ret
adc
sar
push
xchg
and
fwait
cmp
and
inc
das
test
push
fsub
imul
retf
jo
jb
and
icebp
mov
mov
and
add
popa
inc
sbb
outs
jb
dec
add
add
daa
or
and
cmp
js
adc
ret
sbb
pop
pop
push
push
fmul
jmp
jp
inc
inc
sbb
repnz
pop
lock
xor
ret
jb
int3
sbb
loope
xor
and
add
(bad)
mov
and
inc
cmp
add
cld
mov
pusha
movs
inc
sub
ret
jge
shr
and
push
jnp
add
dec
mov
or
cmps
mov
or
fwait
ins
push
pop
call
pusha
loop
push
hlt
and
sbb
and
push
push
xchg
jno
dec
xlat
nop
mov
sub
std
mov
adc
loopne
jbe
inc
sbb
lds
lods
push
xchg
sbb
out
mov
xchg
jbe
iret
push
dec
test
inc
dec
cmp
xor
sti
mov
or
sub
lahf
sub
or
cmp
fld
inc
fs
cmp
fiadd
(bad)
pop
and
add
dec
nop
inc
movs
daa
push
mov
adc
dec
jmp
repz
xchg
push
fs
mov
mov
sub
je
out
cmp
nop
psrld
mov
sar
dec
pop
and
out
in
icebp
aas
cmp
cmp
lods
fiadd
mov
ret
dec
mov
nop
retf
imul
add
sahf
in
dec
pop
xchg
xchg
pop
xlat
ds
dec
cmp
retf
xchg
or
les
inc
dec
pop
xchg
das
scas
adc
push
es
out
sar
inc
jl
push
pop
dec
pop
cmp
dec
push
mov
retf
push
imul
pop
cmps
retf
pop
push
push
out
fild
dec
ror
push
xchg
pop
scas
cmp
je
jnp
imul
out
xchg
fld
fcomp
cs
or
popf
adc
fld
cmp
(bad)
and
cs
jl
dec
push
or
cmc
dec
repz
cmp
push
and
sub
inc
add
cmp
ds
push
add
push
xchg
mov
add
or
pop
mov
push
push
mov
inc
inc
dec
pop
xchg
jne
dec
push
gs
(bad)
nop
lea
(bad)
mov
push
push
imul
jo
adc
pop
cmp
ds
mov
fistp
mov
lds
mov
mov
ds
jne
cmp
dec
lods
cmps
mov
inc
aam
add
sbb
sbb
movaps
bound
cmp
xchg
push
not
ins
enter
dec
popa
int
jbe
push
mov
pop
sahf
retf
lock
in
es
lods
add
ins
cmp
pop
push
jl
xor
mov
dec
add
sub
out
(bad)
xlat
call
sti
ret
sbb
pop
mov
dec
sbb
fs
leave
mov
xchg
imul
shr
mov
fs
add
fs
clc
cld
cmp
or
xchg
rcl
push
ret
sbb
fbld
mov
mov
cld
mov
icebp
add
in
nop
call
push
adc
lea
in
jle
adc
repz
adc
sbb
sbb
xchg
xchg
and
mov
mov
leave
in
or
mov
mov
xor
nop
das
leave
enter
jno
inc
push
in
xor
dec
gs
pop
push
pop
dec
test
push
inc
repz
into
and
push
and
push
push
add
jecxz
data16
or
jae
adc
iret
ds
sbb
add
jge
xchg
out
adc
outs
add
adc
(bad)
in
sbb
or
xchg
push
sub
lods
and
mov
retf
clc
call
movs
jnp
dec
test
fsubr
cwde
push
add
call
xor
dec
sti
cwde
sbb
inc
add
adc
cwde
cmp
lods
arpl
push
in
cmp
mov
in
sub
inc
call
sahf
inc
in
jle
add
inc
cmps
cmp
call
dec
div
lock
leave
xor
cld
push
push
pop
push
es
call
jl
repnz
in
fwait
or
call
and
call
in
nop
cmp
dec
adc
cmp
push
or
mov
ja
dec
add
push
or
call
punpckhdq
push
cmps
sbb
inc
call
lds
icebp
mov
call
inc
retf
(bad)
mov
jmp
imul
mov
jecxz
fistp
test
add
ja
pop
add
dec
push
sbb
clc
add
dec
jbe
(bad)
mov
adc
mov
and
push
inc
inc
ret
pop
cmp
inc
sbb
fimul
(bad)
adc
loopne
push
pop
not
and
adc
test
addr16
dec
out
imul
push
(bad)
and
popa
push
and
sub
mov
into
iret
pusha
not
push
call
test
and
test
push
adc
add
in
xchg
daa
xchg
add
xchg
adc
rcl
push
xchg
adc
adc
and
adc
inc
pop
push
popa
adc
inc
add
sbb
and
sub
or
mov
dec
push
xor
cmc
adc
jae
in
xchg
pop
in
or
xchg
cmp
adc
dec
nop
xchg
adc
dec
in
xchg
add
lock
and
sbb
inc
or
and
jb
loope
rcl
and
mov
or
dec
in
lds
into
xchg
dec
in
mov
pusha
xchg
mov
je
pusha
xor
sub
push
lds
sbb
cmp
sbb
mov
out
and
call
push
mov
dec
mov
jne
xchg
pusha
jmp
call
adc
jne
dec
test
sbb
rol
jl
les
xchg
sbb
push
mov
xchg
out
pop
dec
pop
mov
es
dec
sbb
mov
in
xchg
push
aaa
jmp
(bad)
fiadd
nop
scas
mov
loop
jmp
dec
mov
mov
scas
ins
test
adc
outs
mov
adc
mov
icebp
sub
sbb
or
sub
rcl
ds
in
inc
add
adc
inc
xlat
add
inc
cmp
push
popa
or
dec
add
not
adc
sub
dec
addr16
add
(bad)
mov
dec
addr16
stc
push
rol
mov
mov
lods
fisttp
retf
mov
or
sbb
jns
push
ficom
push
jg
sub
les
dec
push
adc
mov
outs
or
loopne
js
movs
nop
mov
mov
and
cmp
retf
popf
xchg
int
sahf
mov
adc
adc
sub
dec
bnd
jle
inc
xor
adc
call
nop
push
pop
sbb
or
mov
or
cvtdq2ps
xor
inc
cmps
cdq
les
repnz
ficomp
inc
fnsave
(bad)
push
xor
mov
pop
mov
call
loope
cmp
jne
mov
and
retf
push
sbb
adc
mov
test
add
jmp
lds
and
sub
dec
xchg
xchg
or
inc
rol
hlt
shl
inc
sub
loopne
xchg
popf
cmp
pop
xchg
stos
pop
and
jmp
sbb
ss
and
mov
sub
push
pop
jg
ins
jp
push
and
fstp
lahf
mov
aam
sbb
jne
lea
pop
jo
(bad)
sub
fcomp
icebp
sbb
dec
ss
or
push
neg
jo
add
push
push
sar
inc
mov
cmp
cmp
and
test
imul
stos
pop
or
scas
adc
jmp
jp
std
inc
enter
mov
pop
and
push
mov
xchg
repz
mov
push
jns
or
dec
xchg
and
add
xor
jns
hlt
mov
or
sub
or
xchg
xchg
mov
xor
mov
movs
xor
ins
push
test
xor
jge
add
jmp
or
xor
add
fs
addr16
mov
sbb
fidiv
add
or
cmp
jl
or
mov
push
push
cmp
dec
dec
popa
daa
add
je
lods
push
jns
or
fisttp
adc
mov
jge
and
cmps
test
fnstenv
add
jo
push
and
or
or
mov
or
or
mov
cld
sub
adc
and
mov
or
cli
push
popf
int3
nop
mov
add
sbb
xlat
mov
mov
inc
mov
and
ds
cmps
pop
jmp
and
outs
push
(bad)
movs
lds
sub
enter
jb
shl
push
popa
mov
leave
retf
or
mov
mov
pop
push
ret
sub
rcr
mov
call
mov
cmp
(bad)
xor
or
pop
pop
fs
pop
mov
sub
pop
js
leave
mov
add
fadd
ret
mov
sub
popa
aaa
or
pusha
test
add
loopne
rol
xor
movs
in
jmp
cmps
sub
enter
aaa
inc
push
cmp
aaa
add
pop
add
sub
xchg
pop
leave
retf
add
cmp
and
mov
enter
cmc
and
pop
inc
xor
mov
inc
lock
add
inc
push
add
sub
nop
add
(bad)
nop
xor
or
xchg
test
cmp
or
nop
int
add
add
or
dec
and
pop
dec
fadd
inc
sub
fisttp
pushf
add
nop
out
daa
(bad)
popf
in
(bad)
mov
mov
cmp
inc
hlt
mov
inc
xchg
in
repnz
xchg
in
movs
stos
jne
inc
fild
add
adc
or
add
xor
inc
pop
dec
push
sub
cs
jmp
push
inc
xchg
dec
adc
pop
cmp
xchg
sub
or
inc
adc
cmps
xor
sahf
stos
repz
cmp
cmp
repnz
repnz
add
inc
ror
push
add
test
and
aad
je
xchg
add
add
mov
sbb
test
fwait
lahf
add
sub
pop
sti
lods
and
lods
pop
and
leave
add
add
pop
sub
das
cmp
and
fst
stc
aas
jmp
sbb
mov
push
xor
add
cmp
xchg
sahf
sub
lods
ficom
cmps
jnp
loope
pop
mov
add
dec
push
lds
addr16
fldcw
fmul
(bad)
cmps
mov
sti
cmp
inc
js
rcl
cmp
mov
cmp
cmp
je
je
add
cmp
pop
sbb
pusha
ret
add
add
push
cmp
cmp
adc
xchg
test
or
cmpps
ret
sub
fld
add
mov
pop
or
dec
mov
dec
pop
inc
call
pop
cmp
dec
(bad)
in
syscall
mov
ror
push
mov
jle
cmp
xor
mov
ficomp
fs
sbb
push
sub
sub
sbb
movs
repnz
cli
cmp
jmp
push
sub
xlat
jo
dec
movs
push
int
je
aam
test
enter
dec
movs
mov
in
test
ret
mov
fisttp
push
mov
cdq
cmp
repz
jge
push
push
inc
clc
(bad)
dec
enter
xchg
jo
lods
out
in
retf
shl
xor
ret
adc
xchg
pop
cwde
retf
ins
xor
xor
mov
ret
nop
mov
add
pop
out
adc
jo
mov
inc
cmc
js
sbb
jbe
lock
in
dec
in
lds
aaa
mov
pusha
cmps
repnz
sahf
lds
add
cs
add
out
or
fiadd
add
pop
xor
lea
sub
push
in
mov
sti
mov
inc
push
call
dec
in
imul
mul
mov
add
inc
shl
arpl
out
fs
lock
sbb
data16
loop
dec
or
(bad)
bound
test
jae
or
push
pop
dec
(bad)
in
lahf
inc
push
(bad)
mov
adc
ficomp
sbb
or
pop
mov
adc
push
pop
or
dec
inc
sti
push
ret
jbe
lods
xor
nop
jg
mov
and
es
xchg
push
inc
shr
inc
cmp
xor
jp
(bad)
xchg
shl
shl
sub
jl
(bad)
pop
inc
and
jle
in
daa
shl
and
loope
data16
pushw
test
push
pop
mov
cmp
add
mov
clc
clc
aas
and
dec
xor
sub
movs
mov
(bad)
pop
ror
sub
repnz
cli
add
out
sbb
in
aam
shl
add
mov
jae
sti
ja
je
pop
int
adc
or
ds
outs
mov
or
ins
mov
rcr
mov
in
movs
sbb
sub
push
pop
jae
divps
mov
sbb
mov
loope
popa
je
movs
xchg
mov
and
pop
cmp
xor
stc
jmp
icebp
lock
inc
adc
jmp
dec
adc
les
and
test
dec
jmp
or
es
dec
cmp
cmp
and
lea
and
sbb
cmp
add
repnz
sbb
xor
arpl
mov
cmp
push
in
cmc
pop
in
enter
ins
arpl
loop
or
adc
add
icebp
push
or
js
popa
retf
lods
fsubr
xor
add
sub
loopne
xchg
xchg
or
sbb
nop
cmp
test
cld
pop
in
jae
push
idiv
mov
ja
ds
in
nop
mov
jg
cmp
add
fs
xor
mov
sbb
cmp
push
xor
out
jb
dec
add
mov
pop
add
add
pop
add
out
popf
dec
dec
add
jnp
nop
jge
repz
or
and
add
add
push
ja
xor
push
clc
mov
(bad)
fild
adc
repnz
lea
pop
imul
sbb
pop
sar
dec
movs
loope
movs
in
pop
jno
sbb
or
mov
les
imul
mov
aaa
pop
inc
lods
out
mov
pop
cld
daa
js
or
push
(bad)
dec
fiadd
or
xor
adc
push
or
cdq
or
xchg
sub
push
mov
rol
inc
add
add
jle
repnz
add
or
and
push
dec
clc
or
cs
adc
mov
add
test
mov
mov
mov
sub
data16
popa
je
dec
gs
add
cmp
cld
retf
and
push
add
clc
sbb
xor
or
(bad)
mov
xor
push
out
pop
movs
loopne
test
or
cmp
not
mov
mov
sbb
rcl
pop
sub
loopne
push
or
and
nop
aas
mov
pop
or
test
ds
lods
push
adc
outs
sahf
fwait
and
jne
and
jne
sub
stos
out
sbb
sub
dec
cld
mov
inc
adc
or
mov
mov
cmp
mov
sub
sar
cmp
dec
call
retf
test
push
and
call
adc
or
lds
xchg
mov
jg
cmp
mov
add
xor
dec
hlt
inc
inc
hlt
clc
jg
in
mov
(bad)
js
sbb
mov
adc
inc
inc
cmp
dec
not
not
dec
or
not
not
(bad)
popa
add
mov
inc
mov
lock
je
push
adc
mov
repnz
xchg
loope
jl
mov
jg
leave
(bad)
neg
mov
xchg
je
push
cmp
in
pop
and
out
je
test
and
div
or
repnz
(bad)
jbe
push
or
outs
rcr
into
mov
cmp
aaa
scas
ins
ror
adc
jns
movs
cmp
mov
movs
xor
mov
pop
or
sub
xor
and
cmc
dec
sbb
cmp
nop
js
push
outs
(bad)
push
xchg
es
push
popa
pop
dec
(bad)
inc
adc
inc
cmp
mov
jl
and
add
add
sub
adc
dec
call
adc
xor
xor
movs
sbb
data16
xor
xchg
push
cmp
push
xor
les
and
lods
mov
sub
ret
add
daa
sbb
lea
dec
mov
pop
xor
test
adc
adc
or
pusha
lock
or
sbb
xchg
xchg
ret
push
mov
fidivr
test
mov
xchg
lods
push
movs
stos
iret
mov
mov
outs
mov
add
cmp
movs
mov
pusha
jno
es
(bad)
jmp
loopne
into
sub
add
xor
mov
lahf
rcr
dec
add
or
das
leave
jo
push
pop
xor
xchg
mov
push
mov
or
or
sub
(bad)
loope
or
je
pop
sbb
or
adc
jmp
stc
js
jb
shl
xor
pop
jecxz
dec
push
mov
dec
pop
cmp
or
fdiv
gs
adc
fs
je
sbb
adc
cmps
or
stos
leave
out
cs
push
xchg
or
outs
arpl
jmp
add
test
clc
stos
inc
adc
aas
cmp
and
xlat
xor
mov
aad
pop
fs
je
jl
push
mov
jl
dec
and
xchg
ret
test
(bad)
xchg
mov
cmp
int3
mov
movs
ins
and
push
adc
mov
cmc
ds
mov
inc
jne
xlat
add
sub
in
add
mov
push
sar
arpl
arpl
ret
outs
or
pop
mov
or
fstp
rol
out
fistp
popa
pop
dec
lods
add
lahf
int3
jle
jmp
cmp
and
cmp
add
leave
enter
inc
add
cmps
sub
cmp
push
arpl
sub
adc
push
fidiv
xor
aad
and
cmp
pop
add
adc
into
add
sbb
pop
jle
cmp
push
cmp
cmp
jp
or
sbb
je
inc
loope
sbb
rol
(bad)
dec
mov
sub
repnz
add
sub
adc
dec
xor
xor
mov
xchg
dec
pop
cmp
jp
shr
push
outs
int3
adc
dec
out
popf
or
comiss
xor
sub
nop
xchg
sti
mov
(bad)
mov
retf
pop
mov
ret
mov
stc
out
add
jecxz
cmp
sub
adc
add
ret
jne
sbb
cmp
adc
or
push
dec
les
fwait
xor
sahf
sub
fcmovb
add
sbb
jb
add
inc
dec
jne
sub
test
mov
sub
xor
push
mov
icebp
cdq
pop
xlat
or
in
push
(bad)
sahf
xor
pop
push
cmp
xor
daa
and
cmp
ror
sbb
ror
add
inc
adc
push
mov
leave
cld
sti
mov
adc
ins
add
push
adc
push
ret
dec
and
push
push
jb
add
push
dec
adc
std
test
ins
in
loopne
push
xor
sbb
sub
sub
or
int
jb
or
nop
jp
cmc
cmc
or
addr16
sbb
pushf
pop
mov
ins
in
add
lds
mov
(bad)
push
bound
jnp
sbb
inc
and
inc
cmp
cli
lds
xor
sbb
sub
imul
push
pop
xor
sub
nop
mov
mov
mov
lods
je
movs
je
popf
out
cld
pop
inc
and
test
xor
hlt
push
mov
or
jo
fdivr
imul
mov
sub
mov
add
mov
push
scas
add
sub
(bad)
jo
aam
pusha
fwait
xor
jg
ror
add
pusha
add
pop
fs
push
add
fs
push
call
ficom
mov
pop
push
call
and
adc
adc
xlat
outs
dec
loop
xchg
jb
dec
cmp
rcl
or
call
lods
popf
pop
jnp
mov
push
dec
add
or
add
and
cmp
ret
adc
and
push
sbb
fnsave
mov
or
cdq
fcomp
cmp
xchg
loop
cmp
ret
sbb
adc
js
sub
push
jl
xor
xor
cmp
ins
jecxz
adc
push
push
lds
xor
inc
aad
mov
sahf
mov
push
xor
mul
movs
dec
clc
jmp
push
push
call
push
xor
fistp
add
push
nop
push
push
jmp
test
das
xchg
cmp
add
(bad)
mov
sub
arpl
xor
pop
and
loope
in
push
aas
xlat
cmp
les
popa
mov
jg
sbb
fstp
je
sub
ss
or
ds
ret
pop
xor
jne
fbld
retf
dec
mov
pop
js
imul
add
or
pop
inc
pop
imul
or
push
adc
inc
(bad)
adc
adc
jnp
or
out
je
and
test
out
div
push
mul
xor
push
cli
mov
je
sbb
hlt
pop
shr
cmps
add
inc
mov
mov
pop
invd
arpl
loope
sub
sub
inc
adc
xor
pop
mov
inc
cmp
cmp
cmp
push
ins
ret
fwait
inc
out
mov
adc
call
push
inc
pop
add
fadd
movs
lds
pop
inc
xor
jo
scas
pop
pop
dec
mov
aas
xchg
jne
mov
ss
out
mov
iret
aaa
pop
xchg
inc
call
mov
mov
add
movs
dec
mov
test
sub
pop
and
ret
lahf
xor
jbe
or
ins
add
stos
cdq
dec
jmp
cld
push
or
mov
adc
rcr
or
inc
mov
jae
cmp
rol
lds
push
lds
mov
pop
loop
pop
mov
push
ret
xor
push
adc
xchg
xchg
pusha
xchg
shr
and
ret
in
pushf
cmps
neg
enter
pop
xor
mov
mov
movs
sar
lahf
xchg
adc
adc
and
mov
test
mov
jae
repnz
push
mov
sub
push
push
inc
sbb
jmp
(bad)
sbb
and
add
ret
lahf
in
push
add
push
xchg
mov
jl
daa
in
sub
push
and
pop
jbe
ret
mov
and
in
dec
pusha
fsub
mov
sbb
pop
lock
out
push
add
push
sub
clc
dec
or
fs
add
xchg
jle
dec
pushf
push
inc
sahf
inc
mov
sbb
daa
test
push
sahf
out
dec
shr
add
inc
test
fcom
xchg
js
test
xchg
ins
ss
cmp
rcr
mov
push
aas
cmp
mov
lock
mov
bound
cmp
ret
out
gs
push
pop
push
adc
mov
arpl
imul
inc
pop
xlat
inc
das
test
pop
inc
fadd
jmp
add
daa
add
int3
cmp
push
call
imul
lock
aam
adc
mov
cmp
cmp
jmp
jo
add
mov
(bad)
mov
jo
mov
sub
add
xchg
mov
popa
jg
je
push
inc
ret
je
push
push
add
out
cmps
or
lds
dec
loopne
jnp
sub
or
or
pop
jnp
dec
mov
add
push
jno
cmp
imul
imul
jne
and
sbb
hlt
jne
adc
adc
dec
or
add
loope
dec
jg
or
mov
ss
imul
or
(bad)
std
fbld
inc
pop
add
test
xchg
aad
sbb
jge
or
cmp
fs
bound
xchg
call
dec
push
movs
sub
pop
mov
and
push
sub
fdiv
inc
out
or
add
rcr
sar
shl
(bad)
lock
sub
mov
sti
mov
repnz
add
inc
sbb
lds
rcl
adc
jb
mov
lahf
or
add
cs
retf
in
pop
or
or
jb
pop
or
retf
adc
adc
push
sbb
sbb
sbb
jmp
cmp
repz
jns
test
cmp
repz
repz
and
inc
cmp
repz
dec
push
pop
xchg
adc
iret
repz
popf
mov
lods
sbb
inc
lds
bound
repnz
sbb
sbb
int3
mov
inc
or
fist
icebp
lea
add
scas
iret
pop
inc
lods
mov
(bad)
xor
test
mov
push
ror
ins
je
inc
mov
xor
cmp
add
fisubr
in
push
test
cld
xor
cmp
dec
movs
push
and
push
out
jl
or
fstp
enter
sbb
ficom
add
add
xchg
pop
int3
lock
add
jne
pop
rcl
add
jne
pusha
xlat
sub
sti
xor
push
push
jl
xchg
retf
pop
mov
cmp
xor
pop
je
pop
dec
mov
arpl
shl
adc
fstp
popa
jmp
sar
outs
lds
shl
sar
dec
ins
push
sbb
lock
mov
movs
sbb
push
shl
jb
and
outs
pop
mov
bound
aaa
add
outs
and
or
cmp
mov
jne
ret
mov
pusha
mov
or
pop
xor
sbb
sbb
add
or
xchg
push
xchg
xor
inc
dec
(bad)
jmp
jmp
mov
rcl
loopne
lods
(bad)
add
out
xchg
push
arpl
repz
mov
xchg
pop
loope
ret
xor
(bad)
(bad)
in
jo
outs
jb
jne
push
push
sbb
je
add
shl
push
jbe
bound
ret
add
mov
cmp
sbb
mov
inc
lods
dec
add
ins
gs
dec
sti
iret
jb
add
(bad)
in
jb
fsub
sub
fdivr
pop
pop
jbe
or
popf
fstp
iret
out
jne
mov
cmp
add
adc
jl
(bad)
xor
das
lahf
or
sbb
hlt
inc
les
push
sbb
push
xchg
jbe
mov
cmp
add
aas
(bad)
jne
push
pop
dec
add
adc
jbe
jg
(bad)
or
call
push
clc
pop
ds
shl
scas
dec
test
jne
or
ror
pop
sub
xchg
add
leave
jmp
or
sbb
or
ins
and
out
je
push
inc
sbb
mov
add
jbe
lea
pop
clc
inc
sti
js
pop
mov
and
pusha
adc
and
and
mov
(bad)
jne
sub
mov
mov
sbb
mov
je
nop
jge
mov
push
in
inc
(bad)
xor
push
add
cmp
call
ss
xor
fstp
pusha
or
and
lahf
mov
ret
xor
cmp
je
lahf
clc
popf
mov
jmp
pop
adc
cwde
inc
test
repnz
add
dec
or
and
mov
addr16
loopne
ins
cmps
shl
hlt
jmp
test
mov
mov
jge
and
cmp
aad
rol
and
adc
frstor
inc
ret
(bad)
or
adc
sub
push
(bad)
clc
sub
fimul
or
inc
push
aaa
push
shl
jmp
(bad)
out
add
dec
push
call
xchg
add
and
mov
pop
(bad)
xor
iret
adc
add
inc
dec
fidivr
mov
mov
mov
mov
scas
rol
adc
retf
xor
fwait
mov
mov
add
jo
push
je
movs
in
das
or
shl
jne
pop
inc
cmp
push
mov
and
push
into
cmp
push
aas
call
mov
cmp
cmp
push
dec
inc
ret
jg
inc
aas
adc
adc
mov
call
cmp
rol
(bad)
jb
(bad)
mov
push
add
jle
loopne
lock
mov
cmp
adc
xchg
loope
pop
cmp
inc
into
push
movs
mov
dec
inc
jno
test
fild
or
aad
out
outs
sbb
push
adc
inc
jge
out
out
add
xchg
aaa
xor
rcr
pop
loope
adc
loopne
icebp
push
(bad)
jnp
sbb
push
and
gs
inc
and
adc
rcl
sbb
dec
sub
or
pop
loopne
sub
jno
mov
inc
das
add
bound
sub
cmp
mov
adc
or
imul
add
inc
sub
js
sbb
dec
sar
cmp
ret
dec
adc
dec
test
push
je
test
mov
adc
cmp
sbb
loope
aad
mov
xor
sub
xor
xchg
inc
jle
pop
pop
mov
ds
pop
adc
stos
aad
cwde
js
cmp
js
pop
jmp
movs
out
adc
dec
mov
and
add
cmp
sub
mov
cmps
xor
or
add
popf
rol
sub
sbb
ret
sahf
push
sbb
or
inc
fs
test
fs
pop
loope
sbb
stos
pop
ins
loope
js
shl
ss
popa
sub
or
xor
pop
and
and
clc
and
sti
mov
rcl
call
nop
out
dec
cmp
mov
mov
inc
xchg
(bad)
cmp
push
push
cdq
lahf
sub
add
xor
sbb
add
or
mov
sub
add
inc
xor
add
repnz
je
push
mov
add
test
add
push
pop
or
sbb
pop
push
or
push
retf
lods
out
xor
inc
xor
shl
inc
inc
or
pusha
push
cmp
xchg
mov
add
pushf
jne
adc
add
jl
push
push
ja
xchg
and
leave
ds
mov
adc
xor
inc
dec
shr
add
add
ins
sahf
dec
push
or
popa
cdq
jbe
push
aam
inc
sbb
ret
jne
loopne
push
loope
sub
add
inc
xor
or
and
push
shl
out
add
fadd
push
cmp
lods
or
adc
xchg
adc
mov
xlat
lock
cwde
pop
jbe
ss
pop
pop
adc
hlt
mov
(bad)
pop
push
mov
and
mov
or
mov
push
add
mov
fidiv
ror
add
mov
(bad)
lods
outs
pop
jb
jne
or
inc
jne
push
cld
mov
fcomp
jmp
rol
je
add
inc
lock
jne
pop
inc
daa
jne
mov
add
sahf
cld
push
add
push
mov
js
cmp
jnp
or
mov
shr
movs
mov
or
mov
sahf
fwait
lea
pushf
bound
fmul
and
push
cmp
add
dec
add
mov
add
jl
pop
and
loope
or
pop
push
push
aas
idiv
xchg
fadd
retf
mov
sub
xor
adc
push
pop
pop
sub
push
xor
in
add
iret
adc
pop
sbb
adc
sub
cmp
js
pop
mov
js
and
stc
dec
(bad)
(bad)
ds
mov
mov
xor
xor
push
or
push
add
fmul
call
pop
add
imul
(bad)
xor
mov
aas
add
pop
aas
cwde
inc
add
pushf
nop
dec
ds
stc
add
xor
test
xor
or
sahf
ret
loope
jmp
cs
test
adc
nop
jne
cmp
mov
mov
ja
addr16
dec
int
xchg
push
or
(bad)
es
lahf
pop
add
inc
lea
inc
sub
popf
test
repz
add
xchg
and
pop
icebp
sub
adc
(bad)
out
fsub
ret
jb
mov
or
enter
stc
(bad)
jg
in
in
mov
sbb
adc
or
add
mov
test
pop
mov
xor
call
push
lods
xor
adc
add
inc
cmp
adc
adc
xor
aam
pop
jne
jae
out
push
sub
jnp
adc
sub
pop
stc
call
add
pop
dec
out
jbe
xchg
fsubr
and
add
bnd
loopne
(bad)
call
jne
daa
call
mov
not
lods
and
push
fmulp
jb
shl
ja
nop
icebp
dec
cmp
dec
std
mov
xchg
dec
lea
cmp
cmp
add
stos
or
sub
jmp
mov
jns
pusha
add
sub
or
call
xchg
retf
(bad)
retf
jb
jge
rcl
lea
add
jo
test
push
pusha
movzx
push
mov
xchg
sbb
and
and
loope
bound
retf
sbb
in
es
das
push
int3
jecxz
or
out
jmp
ins
jns
out
or
adc
ins
dec
shr
call
cmps
mov
sub
dec
inc
add
sti
lea
sbb
call
retf
cmp
pop
je
push
add
push
pop
in
add
sbb
mov
inc
jmp
mov
xor
mov
mov
inc
(bad)
scas
add
sbb
sbb
data16
sbb
cmp
push
js
das
push
(bad)
adc
mov
lock
adc
dec
add
adc
mov
in
aas
cmp
hlt
call
add
jmp
aam
mov
pop
add
sub
jbe
je
cmp
add
add
in
sub
sub
daa
inc
jge
inc
adc
mov
jne
enter
fld
xor
es
add
aam
loope
shl
pop
(bad)
cmps
rol
stos
push
xlat
mov
push
jo
sbb
cdq
xchg
xchg
jno
aaa
pop
fcmovbe
fisttp
inc
jns
lock
push
(bad)
push
les
add
ret
push
test
aam
sbb
fcmovbe
inc
call
mov
cmps
out
push
xor
mov
sub
dec
push
test
push
out
and
ins
fdiv
add
jo
pop
jae
ror
ret
xchg
arpl
cld
test
push
cs
shl
and
sbb
outs
mov
lods
sbb
je
les
dec
add
(bad)
data16
inc
adc
add
loope
inc
bnd
test
sub
sar
mov
jmp
cs
adc
pop
iret
inc
xchg
scas
pusha
(bad)
arpl
pop
mov
into
fadd
mov
xchg
not
pop
sbb
cs
cmp
loop
xchg
sahf
(bad)
dec
cmp
std
pop
cmp
mov
movs
push
cmp
shl
arpl
jmp
das
imul
and
aad
(bad)
sbb
cmp
and
xor
and
shr
call
mov
xor
xor
ins
das
in
ins
push
dec
cmp
sar
(bad)
clc
xor
push
js
mov
ja
pop
js
jne
mov
shr
repnz
pushf
add
xor
push
push
jbe
mov
xor
repnz
(bad)
xor
jns
dec
in
push
mov
jbe
sahf
inc
cwde
cmps
ins
jl
sbb
nop
adc
xchg
aas
fist
jo
lea
loopne
or
jnp
pop
(bad)
mov
sub
in
inc
push
cmp
ror
xor
dec
shl
mov
dec
cmp
fisttp
adc
xchg
out
dec
clc
jnp
jl
pop
loop
add
mov
call
addr16
jne
popa
jmp
dec
or
test
pop
add
mov
popa
pop
or
pop
enter
jmp
scas
push
mov
ret
and
mov
stc
or
push
rcl
shl
sub
and
enter
inc
lea
mov
int
adc
xor
add
scas
mov
sub
mov
cli
jns
(bad)
mov
scas
das
push
cmp
xor
and
cli
hlt
and
or
call
mov
sub
push
inc
lock
sub
push
sub
add
xor
xor
iret
pop
xor
push
xor
ss
sub
cmp
cmp
aas
inc
inc
inc
mov
inc
inc
inc
pop
jl
daa
and
xor
and
sbb
or
mov
sbb
mov
fs
mov
pop
push
inc
xchg
movs
in
ss
pop
loope
rcr
leave
mov
in
mov
mov
cmp
sbb
repnz
jb
(bad)
mov
dec
gs
push
test
or
pop
dec
pop
lahf
inc
leave
shl
adc
fwait
jne
popa
test
out
adc
hlt
arpl
jnp
adc
(bad)
sub
inc
cmp
call
pop
mov
nop
sti
adc
push
ds
pop
dec
es
aad
adc
in
inc
rol
cmp
lock
inc
cmp
aas
adc
sub
sbb
lea
xor
cld
mov
pop
sub
fdiv
or
dec
std
movs
add
dec
into
or
lock
in
push
xchg
lock
or
cmp
pusha
add
dec
ret
push
es
outs
push
test
inc
and
mov
xor
ror
loopne
pushf
aas
aas
dec
ss
jl
sti
jne
nop
xlat
add
add
add
nop
inc
push
in
das
pop
leave
inc
movs
sbb
add
dec
mov
movs
jl
pop
pop
wbinvd
jmp
inc
push
sbb
ret
inc
jmp
je
sub
cmp
mov
add
mov
sub
add
mov
in
cmc
or
icebp
or
and
sub
imul
jbe
test
add
jb
outs
sbb
or
pop
out
adc
outs
cmps
push
enter
into
ja
and
test
imul
divps
pop
add
add
xchg
xchg
das
adc
pop
sbb
bndstx
stc
push
fistp
xor
sbb
nop
push
jecxz
jnp
or
je
xchg
sbb
inc
xchg
pop
sbb
xchg
add
add
sbb
mov
mov
stc
mov
mov
pushf
fs
sahf
(bad)
pop
xchg
add
mov
jecxz
aaa
mov
inc
adc
xchg
pop
pop
push
ret
pop
add
clc
inc
je
adc
push
gs
sbb
pop
std
mov
outs
jo
mov
pop
call
add
sub
mov
jle
fisttp
cmp
jp
jmp
bound
(bad)
sub
ja
xchg
push
lods
sahf
cdq
add
push
jge
cmp
lea
iret
dec
add
dec
push
add
push
std
pop
shl
cmp
jle
or
ja
jmp
adc
imul
lds
(bad)
mov
adc
and
(bad)
in
xor
ds
adc
inc
ror
jl
pusha
lock
mov
sbb
out
and
pop
js
aam
out
pop
aam
fdiv
cmp
and
inc
adc
and
or
cmp
inc
xchg
aaa
jmp
sbb
retf
je
nop
mov
add
add
out
sar
sbb
imul
rol
adc
cmp
pop
cld
dec
fwait
mov
les
cmp
jb
xchg
add
sbb
push
sbb
push
retf
adc
sub
add
aam
pusha
nop
test
and
rcl
test
jmp
push
(bad)
adc
pop
and
dec
(bad)
(bad)
fld
mov
hlt
adc
imul
in
mov
push
mov
dec
push
shr
js
mov
scas
test
cmps
pop
ds
fadd
mov
aas
mov
and
in
pop
add
xchg
or
xchg
pop
imul
cld
(bad)
pop
(bad)
fistp
mov
add
dec
and
leave
inc
add
push
sub
jecxz
xchg
cmc
cmp
nop
lock
jnp
pop
add
fist
mov
sbb
add
pop
je
movs
aam
inc
or
lds
sbb
or
push
out
fild
dec
mov
mov
sub
shl
mov
sub
fwait
or
push
pop
mov
mov
xlat
push
or
aas
sbb
jne
mov
pushf
shr
inc
loopne
xchg
repnz
popf
add
mov
cmps
mov
stc
push
push
add
xchg
jp
dec
(bad)
xor
in
rcr
pop
std
push
and
cmp
and
pop
pop
xchg
or
(bad)
dec
push
addr16
adc
mov
xchg
(bad)
xchg
jns
mov
or
gs
add
hlt
pushf
add
inc
push
popf
ins
pop
xor
call
pop
push
rep
int3
inc
je
push
test
jae
pminsw
adc
or
push
inc
jmp
adc
mov
je
and
jo
dec
adc
jmp
jns
ret
push
lahf
(bad)
xchg
mov
das
jae
jge
mov
xor
jl
mov
cld
ss
dec
call
inc
cmp
test
push
(bad)
jp
mov
mov
stos
ds
pop
rcl
pop
add
pop
gs
jge
xlat
ret
arpl
mov
fiadd
push
push
dec
fiadd
and
xchg
ss
xor
xor
popa
sbb
jo
inc
rcl
ror
fist
outs
outs
sub
inc
xor
das
sbb
mov
lea
mov
xor
scas
in
sub
cmp
dec
test
icebp
aam
test
dec
jo
xchg
lea
pop
push
add
adc
xor
mov
push
clc
dec
mov
add
movs
cmp
xor
test
pop
pop
mov
or
push
es
es
sub
or
adc
(bad)
cmp
sbb
mov
dec
and
loop
jo
dec
call
and
or
imul
mov
sub
aam
js
inc
xor
mov
push
(bad)
ins
xchg
or
sub
ja
and
lods
adc
pusha
movs
inc
push
das
leave
xor
dec
shr
dec
ret
xchg
sar
enter
imul
cmp
fsub
out
cmp
pop
jle
inc
pop
and
int
push
adc
pop
sahf
push
sub
pop
mov
jecxz
inc
pop
fldcw
inc
test
or
add
popa
cli
inc
jae
out
dec
or
popf
add
nop
inc
stc
push
xchg
sub
jne
xor
fcomp
push
daa
or
data16
xor
mov
add
add
push
push
pop
xchg
mov
sub
adc
cmp
mov
(bad)
retf
jle
inc
dec
dec
inc
repz
inc
sahf
xchg
shr
mov
jmp
push
movs
pop
inc
sub
adc
push
push
jns
jmp
dec
push
xchg
sub
shr
sub
sub
sub
aas
push
push
inc
movs
push
push
pop
jno
bound
cmp
pop
mov
mov
inc
arpl
cmp
adc
pop
out
sub
retf
mov
std
jns
inc
daa
mov
pop
xor
mov
add
cmp
enter
cmp
retf
mov
dec
aam
mov
sbb
dec
xchg
and
jo
add
or
xlat
or
add
xchg
mov
ins
dec
push
cmp
push
or
cmp
push
xchg
rol
push
dec
aas
jo
or
fcmovb
lds
icebp
push
call
in
lea
fs
sbb
mov
sub
jb
(bad)
jmp
add
cmp
ins
or
or
and
pop
(bad)
loope
or
push
push
in
cmp
xchg
fstp
dec
mov
mov
xor
call
lds
lock
push
lea
in
das
inc
out
add
adc
and
nop
(bad)
push
xor
or
pusha
jmp
jmp
movs
popa
test
add
jne
dec
mov
(bad)
retf
add
sub
xchg
cmp
push
aas
mov
mul
add
(bad)
xor
cmp
ret
cdq
push
jmp
test
jnp
fldenv
xchg
dec
add
dec
add
or
call
cmps
push
mov
add
inc
xor
pop
retf
cmp
in
add
rcr
rol
sub
dec
cmp
cmp
sbb
in
adc
dec
movs
adc
xchg
lahf
or
and
std
dec
out
sub
out
xchg
adc
and
sub
sbb
jae
inc
call
mov
stos
and
push
ffreep
in
jmp
call
pushf
jge
das
fcmovne
out
cmps
lods
jmp
test
hlt
es
mov
shl
lds
fs
jo
ret
xor
loope
push
stos
icebp
aas
mov
les
xchg
dec
fistp
or
cmp
out
(bad)
jp
dec
inc
clc
add
xchg
cmp
lds
jne
cmp
movs
dec
push
call
mov
jmp
add
xchg
dec
movs
or
ret
into
mov
fidiv
or
mov
mov
cmp
ret
enter
(bad)
aam
idiv
jne
and
jmp
or
ror
xchg
add
mov
popa
lods
push
jb
fwait
out
pop
dec
inc
dec
add
inc
mov
nop
je
loope
sbb
inc
sbb
cmp
push
pop
mov
int
push
neg
cmp
pop
mov
cmps
into
cmp
les
or
push
and
data16
jnp
xchg
inc
or
mov
pop
jg
ins
repz
data16
call
sbb
inc
loopne
pop
mov
or
cmps
add
fimul
mov
ret
add
push
shl
push
add
fs
mov
fs
pop
push
add
sub
jmp
cmp
adc
push
sbb
xchg
sbb
mov
push
movs
push
ror
add
sbb
imul
and
hlt
ret
pop
mov
or
dec
sahf
out
add
fucom
jmp
test
jo
out
inc
shl
push
das
jo
or
and
idiv
or
mov
dec
or
mov
and
sbb
mov
sar
mov
out
jmp
sub
scas
sub
xor
addr16
call
sahf
or
sbb
adc
sahf
sub
jne
stc
mov
push
repz
xchg
cmps
mov
scas
and
int3
jae
xlat
pop
push
or
mov
xor
push
mov
add
push
xchg
dec
push
enter
cmp
pop
(bad)
or
cli
xchg
mov
(bad)
and
imul
inc
bound
aaa
pop
mov
xchg
jno
cmp
or
jl
sub
or
nop
movs
lahf
push
enter
call
ins
loopne
xlat
movs
xor
push
push
mov
xchg
cmps
ja
mov
or
xor
pop
inc
mov
movs
push
loope
push
push
mov
push
mov
inc
fmul
test
and
push
sub
mov
or
add
dec
rol
or
dec
loop
xchg
jne
jo
dec
cli
sbb
push
add
lock
(bad)
cmp
xchg
xchg
or
sub
adc
adc
ret
inc
inc
adc
xchg
inc
dec
pop
call
and
or
jg
aaa
lods
sbb
jl
mov
sbb
call
das
pusha
call
mov
or
jae
sbb
aas
push
xor
pushw
inc
dec
mov
movs
inc
add
pop
or
sub
xchg
sbb
pop
sbb
mov
push
jae
lds
push
pop
mov
ss
scas
or
nop
lea
and
xchg
lods
jle
pop
inc
mul
data16
xor
cdq
add
xchg
mov
cmp
leave
sub
pop
add
(bad)
push
int
cmp
lea
dec
sbb
pop
mov
jp
mov
sub
push
ins
xor
and
fisubr
add
adc
dec
mov
sbb
xlat
dec
or
mov
jb
pop
add
mov
movlps
sub
push
push
inc
push
inc
push
aam
imul
inc
outs
and
inc
icebp
inc
test
adc
adc
lods
and
jne
sbb
(bad)
pusha
les
push
lahf
jp
mov
test
inc
sub
and
(bad)
and
push
and
push
scas
push
push
jmp
mov
sbb
pusha
loopne
sbb
xor
mov
sahf
test
push
call
and
push
add
mov
push
adc
je
mov
mov
(bad)
adc
or
nop
arpl
lea
sbb
inc
push
lahf
adc
ds
push
mov
js
pop
ja
adc
js
rol
add
inc
push
jle
stos
and
adc
shl
ret
adc
push
push
inc
pop
bound
mov
sbb
hlt
rcr
ins
pusha
inc
add
and
lahf
inc
sbb
retf
xchg
jg
pop
xor
pop
mov
push
or
out
retf
mov
mov
sub
sbb
sahf
inc
and
inc
pop
imul
add
or
add
adc
gs
adc
in
inc
sti
lea
jmp
mov
sbb
fdivr
mov
mov
rcr
test
jbe
mov
sbb
mov
xor
sbb
xchg
adc
jns
cmp
test
mov
cwde
dec
shl
ret
aad
add
fsubr
sbb
xchg
push
push
dec
adc
or
adc
pop
mov
pop
add
sbb
inc
adc
sub
dec
shl
jb
sub
inc
add
scas
retf
add
xchg
scas
fisttp
pop
adc
push
pop
push
sbb
data16
retf
jmp
mov
ins
xor
cmp
pop
mov
movs
movs
jae
iret
jb
repnz
imul
push
or
lea
sub
inc
adc
inc
sub
cmp
jg
xchg
nop
ins
popa
mov
nop
retf
mov
lahf
push
xchg
sub
or
aas
outs
arpl
scas
nop
popf
and
stos
enter
sbb
lock
ins
mov
xchg
mov
xchg
and
outs
push
repz
adc
xchg
or
push
inc
jl
pop
inc
outs
push
(bad)
ficom
mov
ret
xor
jno
or
inc
push
inc
not
or
sub
push
push
loopne
cli
popa
outs
cmp
sbb
(bad)
cmps
inc
or
mov
mov
adc
pop
jmp
add
mov
dec
add
and
inc
(bad)
cmp
cmp
and
jp
inc
cmp
movs
pop
adc
sar
mov
jmp
cmc
(bad)
lahf
addr16
and
pop
sub
cmp
ret
push
mov
pusha
je
data16
inc
data16
cmp
mov
ss
fwait
pusha
test
and
rcl
jmp
lea
cwde
jno
dec
xchg
cmp
add
stos
mov
test
mov
mov
cmps
sahf
ja
add
or
jmp
sbb
in
or
add
add
adc
inc
call
ret
push
mov
aas
clc
cdq
jp
jp
call
ret
cli
das
movs
add
mov
pop
push
adc
inc
sbb
mov
push
pop
lea
mov
cmp
push
jp
cmp
mov
sbb
popf
fistp
ja
or
mov
mov
adc
loop
mov
lea
cmc
mov
adc
adc
push
retf
and
fcom
divps
shl
push
pusha
or
out
xchg
jnp
jne
push
iret
dec
xchg
add
jmp
in
(bad)
xor
add
fs
fucomip
or
add
xor
pushf
and
xchg
adc
xor
xchg
pusha
push
mov
retf
mov
ror
test
hlt
cs
xor
jmp
mov
adc
fisub
data16
(bad)
xor
aad
adc
sbb
add
sahf
lock
mov
jne
cmp
sub
pop
call
(bad)
adc
mov
or
or
retf
ss
lods
pop
and
cmp
popa
loope
(bad)
cld
int
ds
ja
xchg
fsubr
sub
or
inc
(bad)
enter
xchg
jbe
je
scas
lods
loope
inc
xor
leave
repnz
stos
mov
psubusw
iret
push
sub
sti
and
popf
cmp
daa
movs
push
xchg
or
xchg
cmc
lahf
xor
aad
bound
mov
add
rcl
or
add
mov
shr
ins
xchg
xchg
xor
jmp
pop
lea
test
jg
cmp
call
aad
ja
ins
jl
mov
test
push
test
inc
push
inc
fucom
pop
pushf
pop
popw
push
pop
and
sbb
aaa
push
pop
push
inc
cmp
sub
and
lock
adc
and
sbb
es
or
aaa
sub
jno
mov
mov
mov
jmp
and
sbb
and
mov
call
cs
mov
add
sub
dec
andnps
lahf
call
mov
sub
pop
xor
nop
add
inc
outs
or
mov
mov
adc
popf
(bad)
adc
movs
or
add
shl
outs
dec
in
mov
and
(bad)
sub
push
push
nop
repnz
fwait
jne
(bad)
and
jp
scas
inc
lds
enter
fidivr
xor
mov
jne
mov
ds
or
inc
xor
movs
(bad)
fnstsw
in
add
xchg
loop
test
nop
adc
leave
fcom
adc
sbb
je
push
pop
in
les
and
inc
add
mov
pop
(bad)
int
sub
les
fwait
mov
or
and
inc
and
adc
std
(bad)
cmp
out
sub
mov
je
rol
pushf
movs
ret
ror
out
test
mov
retf
xchg
push
in
and
jo
sub
out
jo
je
test
or
add
icebp
push
inc
hlt
add
push
(bad)
jno
div
push
xor
jns
or
push
and
loope
movs
cmp
or
or
and
inc
jle
sar
sbb
pop
cmp
nop
mov
mov
add
leave
dec
inc
dec
mov
in
cmp
inc
loope
xor
outs
pusha
neg
ds
push
and
cdq
and
xor
cdq
mov
xor
pop
rcl
mul
invd
sub
xchg
pop
outs
or
ror
or
cmp
ficomp
pop
inc
in
sbb
dec
fist
std
and
outs
(bad)
in
push
(bad)
fadd
in
mov
lods
xchg
call
aad
or
adc
mov
rcl
sbb
jb
pushf
add
into
mov
je
adc
pop
mov
jle
inc
aas
cmovl
test
gs
add
loope
in
cs
shl
sahf
push
fidivr
fnstenv
pop
rol
shl
mov
push
mov
iret
cmp
add
xchg
add
push
lods
jo
ret
sub
pop
rcr
push
dec
inc
xor
ds
xchg
pop
dec
bound
push
mov
into
ret
add
rcl
popa
dec
and
movs
mov
test
outs
push
jne
cmc
add
push
dec
in
and
push
ja
test
xchg
movs
jbe
cmp
add
adc
or
xchg
xchg
mov
clc
xor
xor
sub
jmp
mov
inc
movs
icebp
add
jnp
cdq
movs
push
and
jae
jno
mov
pop
add
push
out
stos
sub
sub
ss
ret
scas
jg
or
sub
hlt
imul
cmp
mov
mov
adc
ds
pop
mov
ja
xlat
inc
jno
inc
sbb
mov
push
imul
pop
xor
test
push
in
pop
test
lods
push
sub
movs
aam
lahf
test
fwait
(bad)
or
sbb
icebp
jns
mov
arpl
add
sub
mov
fs
test
fcom
push
in
loopne
popa
add
and
xor
push
add
mov
loopne
mov
jne
push
sub
ss
in
mov
push
test
sub
test
movs
hlt
sub
cmp
sub
xor
add
icebp
add
test
shl
jmp
fs
push
mov
xchg
add
pop
and
rcr
int
push
imul
xor
(bad)
call
shl
dec
fucomi
inc
add
mov
and
cmps
lea
outs
and
and
icebp
sbb
cmp
ins
cld
xor
mov
add
addr16
adc
pop
add
shr
ds
add
mov
stos
mov
sbb
clc
inc
add
mov
cdq
inc
sbb
sar
enter
xchg
sub
ss
pop
cmp
dec
lahf
xor
ror
pop
(bad)
cmp
xchg
cmps
gs
(bad)
gs
dec
dec
loope
test
or
sbb
std
(bad)
hlt
mov
mov
clc
push
or
rcl
aad
popa
fimul
mov
push
mov
loope
iret
imul
xor
lahf
clc
pcmpeqw
and
jae
out
inc
push
pop
add
jnp
add
sbb
js
xor
enter
in
imul
fisub
push
sqrtps
cwde
pop
aad
mov
push
outs
jmp
fwait
or
inc
and
mov
mov
mov
push
fiadd
mov
add
inc
inc
mov
rcl
gs
push
xor
iret
sub
fist
(bad)
ret
cld
sub
and
add
and
sub
push
dec
repz
pop
fcmovbe
adc
jl
sub
into
mov
int
mov
loope
loopne
mov
mov
sbb
retf
leave
shl
push
add
xchg
or
pop
das
fistp
cdq
loopne
cmp
cmp
nop
in
cmp
ins
sub
gs
push
add
xchg
push
pusha
push
or
lahf
jge
es
sbb
sbb
in
scas
sub
mov
pop
xor
dec
pop
mov
push
iret
sahf
push
stos
call
and
out
loop
lock
push
add
mov
adc
push
test
aam
jle
jne
and
push
mov
aaa
jo
fcomp
and
pop
or
mov
xor
js
inc
jns
jp
mov
jo
in
pop
fwait
add
and
pop
inc
mov
xchg
pop
jb
shl
in
cld
pop
fwait
in
or
sbb
cmp
push
jmp
mov
push
pop
push
(bad)
arpl
dec
mov
test
cld
repnz
jne
push
mov
jmp
and
xchg
pop
or
test
mov
sub
lea
adc
std
les
cld
xor
mov
lahf
je
(bad)
push
mov
sbb
mov
pop
fcmovnb
stos
add
jne
cmp
cwde
ficomp
jae
push
dec
xchg
daa
inc
out
ror
mov
jae
xor
aad
cmp
enter
and
push
push
ja
scas
jmp
enter
cli
push
jo
std
shl
lock
ja
add
fcmovu
jmp
sub
imul
and
mul
dec
sbb
stos
shr
test
popa
push
xlat
xor
aad
loop
shr
scas
pop
sub
xchg
pop
or
pop
fwait
xchg
mov
ins
daa
loope
sbb
add
les
sbb
dec
add
or
inc
xchg
push
jmp
int
retf
jl
shr
shl
add
imul
sbb
sti
lds
ror
in
adc
in
push
les
ret
mov
inc
outs
and
sub
sbb
xor
or
dec
call
loop
or
es
sub
add
dec
add
lds
in
imul
push
aas
push
stos
adc
loopne
rcl
or
xlat
aas
add
xchg
xchg
cdq
xchg
push
hlt
rcr
inc
cmp
add
jb
sub
rol
add
or
retf
push
call
mov
inc
mov
add
dec
inc
aam
push
cdq
xor
ds
out
cmps
je
lods
ror
(bad)
jle
jo
pop
(bad)
and
add
lock
popf
inc
dec
jl
inc
add
(bad)
add
mov
pop
push
jle
sbb
xor
xchg
adc
ja
retf
cmp
and
sbb
sub
outs
mov
out
jle
push
xchg
push
push
je
add
test
xchg
test
add
or
(bad)
mov
cmp
jge
pop
cmp
xchg
and
or
add
rol
push
inc
push
dec
mov
aad
shl
retf
inc
jecxz
popa
inc
test
xchg
repz
pop
sub
jl
jmp
cmp
add
dec
add
jge
loop
test
cmp
(bad)
sbb
inc
aam
pop
test
stos
out
sbb
or
and
add
mov
jo
dec
ja
sub
mov
add
aam
sub
lods
xchg
ss
out
into
pop
mov
or
pop
add
cmp
add
lahf
xor
xchg
retf
xor
or
inc
iret
mov
cdq
xchg
mov
lods
push
lahf
mov
xlat
add
cwde
(bad)
in
je
dec
sub
mov
or
sub
push
sub
or
mov
and
fnstsw
mov
adc
pop
js
jle
paddb
add
inc
icebp
lahf
movs
frstor
push
dec
push
pop
adc
fcom
push
not
and
xchg
nop
push
call
ins
lods
add
pop
pop
call
push
xor
xor
stc
push
repz
inc
mov
int
test
pop
js
and
adc
bound
sub
sub
mov
rcr
mov
and
retf
in
jmp
xchg
fisubr
adc
(bad)
ja
popa
je
idiv
pop
sbb
icebp
je
pop
mov
mov
jmp
and
arpl
add
rol
sub
adc
jns
aad
rcl
pusha
cmp
pop
sub
pop
mov
mov
pop
xchg
jmp
add
jecxz
jbe
(bad)
fmul
sti
inc
add
lods
jp
loop
jl
dec
imul
imul
adc
mov
mov
out
xchg
xchg
into
or
cmovs
sub
loope
popf
(bad)
shl
dec
ret
sahf
push
mulps
jbe
test
out
lahf
cli
jnp
push
or
push
or
jge
inc
cmp
or
and
cmp
retf
retf
arpl
add
pop
mov
add
mov
mov
or
ret
aaa
cmp
fwait
lods
jmp
jle
call
jle
add
lock
nop
icebp
ror
gs
sub
adc
mov
push
xchg
cld
jmp
mov
pop
push
imul
or
or
xchg
fistp
push
jmp
jmp
int
sbb
call
push
jae
movsx
cmp
data16
add
hlt
jae
sub
data16
add
dec
adc
mov
cwde
fistp
add
ret
push
push
pop
retf
repnz
clc
jg
dec
fiadd
shr
inc
inc
fmul
out
adc
mov
mov
xor
or
sbb
cmp
cmps
and
pusha
out
mov
pop
mov
imul
mov
mov
and
ins
mov
test
mov
sub
in
or
imul
dec
fidiv
xchg
je
dec
cmp
scas
dec
and
scas
jnp
add
es
sub
sbb
or
sbb
sar
dec
inc
add
mov
cld
pop
sub
or
les
call
sbb
rcl
mov
movs
pop
pop
pop
adc
call
xchg
retf
mov
pop
loopne
lds
xchg
mov
push
push
push
mov
jmp
sbb
popa
dec
loopne
dec
xor
(bad)
test
pop
repnz
push
lds
call
cmp
adc
inc
mov
mov
add
imul
pop
or
loopne
add
dec
test
dec
movs
ins
jns
popf
pop
sub
sti
(bad)
jmp
or
xchg
punpckhbw
or
push
not
nop
lds
rcl
jb
shl
nop
icebp
enterw
cmp
push
mov
mov
cdq
adc
jmp
jne
jb
add
(bad)
xchg
or
push
sub
xor
sub
adc
xchg
mov
cmp
sbb
fnsave
lods
sbb
(bad)
mov
xor
nop
out
push
xchg
addr16
pop
sub
push
push
cdq
xchg
xchg
pop
imul
jno
jae
lea
push
mov
dec
or
sbb
repnz
leave
sub
popf
dec
leave
push
pop
adc
and
(bad)
and
jo
xlat
and
cmp
mov
inc
push
call
nop
dec
xor
jp
push
test
sti
out
xor
pop
dec
or
inc
xchg
stos
mov
cmp
nop
xchg
stos
adc
dec
(bad)
and
and
and
aad
cwde
or
fild
jo
das
sete
mov
mov
aaa
call
loopne
dec
push
pop
jne
sub
rol
and
pop
cmp
adc
pop
shl
jg
add
push
jle
push
(bad)
loope
push
mov
imul
push
stos
aaa
test
add
sbb
outs
xor
mov
cmp
fsub
pop
lock
and
adc
push
mov
pop
push
rcl
adc
push
jns
repnz
add
cmp
ret
jae
cmp
push
call
jnp
enter
test
jp
mov
xor
fs
dec
and
xor
sbb
jg
sub
sahf
or
sahf
add
test
inc
push
popa
cmc
or
lock
and
hlt
cmp
aas
sbb
aas
xchg
pop
mov
sbb
dec
jmp
jecxz
jmp
cmps
and
sbb
mov
mov
cmp
stc
retf
mov
add
add
mov
add
ja
ret
xchg
sub
shl
push
push
sbb
add
mov
stos
dec
retf
or
sbb
(bad)
mov
xchg
mov
mov
lock
lock
icebp
sbb
add
push
xor
xchg
fld
sbb
ret
cdq
inc
add
mov
lds
xchg
mov
add
or
sub
pop
dec
sbb
mov
fimul
test
jl
rcr
xchg
push
test
scas
fisub
jge
cmp
sbb
pop
xchg
and
mov
clc
fidivr
mov
dec
cdq
or
or
scas
(bad)
iret
pop
push
jne
jl
je
pop
das
push
mov
mov
pushf
pop
mov
dec
shl
cwde
cwde
stos
or
in
test
lock
lea
jle
xchg
sub
add
and
sti
sbb
mov
add
stos
je
mov
repnz
(bad)
mov
mov
xor
pop
stos
loop
test
mov
cmp
outs
int3
mov
lods
mov
sbb
sub
adc
xchg
pop
push
fdivr
xor
and
and
adc
mov
mov
add
and
sbb
add
push
mov
outs
sbb
pop
or
cmp
add
call
sub
cmp
ret
mov
mov
loop
adc
mov
cmovl
test
loopne
or
imul
mov
retf
and
clc
inc
adc
retf
jbe
mov
mov
mov
outs
add
and
fimul
add
ja
dec
cmp
push
add
fidivr
mov
add
mov
or
mov
or
retf
js
cmp
enter
jg
aas
ins
retf
push
jecxz
xchg
jbe
fbstp
pop
jnp
test
in
push
pop
outs
pop
arpl
xchg
push
xor
xor
mov
push
xor
(bad)
push
cmps
jmp
push
fwait
je
xchg
(bad)
push
dec
cmp
mov
cs
dec
movs
rcr
add
jno
or
add
push
idiv
add
inc
mov
mov
test
in
stos
adc
shr
pop
in
fmul
loop
and
add
pusha
outs
inc
sbb
lods
fst
(bad)
xchg
adc
cwde
mov
pop
inc
mov
hlt
mov
adc
je
adc
aad
jmp
scas
cwde
inc
shl
leave
dec
push
jb
add
mov
add
jge
xlat
je
push
sar
test
push
push
push
rol
inc
ds
mov
xchg
or
mov
or
mov
xchg
mov
jp
mov
or
add
push
rcr
push
call
cmp
push
cmp
clc
or
mov
ss
push
cmp
push
jecxz
test
or
dec
test
adc
xor
inc
fiadd
js
jmp
sahf
je
fld
cli
adc
ja
outs
(bad)
xor
pop
(bad)
or
pushf
test
and
cmp
sub
jo
dec
fidiv
dec
into
adc
push
push
cmp
lds
cmp
push
dec
shl
add
dec
shl
jmp
push
pop
scas
imul
xstore-rng
cmps
inc
adc
jp
pop
enter
mov
ret
fidivr
mov
add
mov
xor
dec
sahf
sti
dec
cdq
jne
mov
adc
adc
xchg
add
pop
es
shl
imul
cmp
mov
(bad)
xor
mov
mov
pop
addps
push
push
rol
or
and
pop
jne
cmp
adc
in
dec
fs
adc
xlat
aad
pop
dec
retf
ja
jne
fidiv
jecxz
or
(bad)
popf
xchg
pop
xor
mov
outs
or
bound
repz
and
jmp
or
xchg
sbb
jecxz
and
loopne
push
xor
add
rol
dec
add
mov
mov
pop
xbegin
jmp
push
xchg
jno
dec
call
or
neg
mov
mov
lock
rol
or
dec
inc
mov
cs
or
shr
call
push
jmp
clc
mov
inc
lock
or
enter
mov
pop
cmp
bound
inc
addr16
lahf
add
jmp
pop
bound
nop
fidiv
out
js
jne
adc
adc
mov
leave
push
cwde
fstp
jne
imul
or
pop
mov
mov
cmp
and
sbb
ss
loope
shr
sar
test
sbb
adc
push
push
cmp
inc
data16
repnz
aas
add
pusha
mov
(bad)
ficom
mov
std
std
add
and
scas
sub
push
test
pop
sahf
stos
push
inc
mov
jbe
xor
mov
iret
pop
enter
adc
ja
cmp
inc
jne
mov
sbb
test
cmp
inc
iret
inc
add
push
ret
stc
(bad)
daa
adc
cmp
bound
in
hlt
xor
ror
inc
daa
pop
pop
scas
dec
xor
adc
fwait
les
inc
outs
or
xor
ins
ud2
inc
jecxz
jne
clc
in
sbb
xchg
add
sub
inc
ret
jmp
mov
js
adc
(bad)
outs
pushf
and
pop
sub
xchg
pop
xchg
sar
and
and
add
nop
push
aaa
adc
cs
cli
lods
test
mov
and
cmp
mov
push
call
mov
or
pop
cmps
mov
mov
push
or
xor
shr
add
cwde
xor
sbb
xchg
jg
dec
mov
cmps
rep
adc
dec
pop
mov
mov
bound
add
ror
rcr
or
mov
jecxz
jmp
bound
mov
jo
push
add
push
mov
fadd
(bad)
jecxz
pop
adc
jp
or
lds
adc
push
add
outs
jo
and
nop
jno
je
and
pushf
pop
ins
nop
rcr
std
test
mov
imul
nop
(bad)
mov
or
sbb
cli
sub
lock
or
mov
xor
jg
mov
add
mov
test
push
push
or
adc
inc
or
or
xor
mov
xor
ret
stc
gs
dec
mov
mov
lahf
popa
mov
dec
push
lgdtd
pop
arpl
js
loop
mov
mov
push
pcmpgtw
ins
into
cmp
loop
shl
jmp
inc
je
test
scas
pop
jnp
sahf
adc
call
xchg
inc
sbb
ja
pop
arpl
std
mov
adc
enter
dec
mov
(bad)
loope
stc
push
sbb
in
es
add
lods
pop
xor
adc
sbb
adc
push
push
push
jmp
inc
xchg
sbb
add
nop
adc
xchg
add
leave
xor
ss
dec
and
dec
dec
adc
adc
dec
mov
cmp
inc
push
mov
sub
pop
jne
gs
ds
enter
jg
pop
mov
ins
imul
imul
push
sbb
xchg
push
outs
div
stc
add
cli
or
add
jb
dec
pop
jno
pop
xadd
and
push
and
or
push
push
call
and
pop
mov
xor
mov
xchg
inc
xchg
clc
or
sbb
push
mov
retf
or
mov
mov
jns
adc
add
jmp
push
inc
sub
and
or
pop
mov
jp
and
push
pop
pop
sub
add
adc
or
call
scas
(bad)
aad
scas
or
xor
push
and
in
xor
jmp
pop
mov
loop
jmp
cmp
push
lods
retf
push
cmp
ins
test
push
push
xchg
pop
push
mov
pop
in
es
ret
add
or
push
arpl
daa
(bad)
jl
bnd
push
sbb
inc
or
add
mov
xchg
mov
pop
sub
xchg
xchg
nop
fist
fs
out
or
js
in
mov
mov
nop
xchg
je
js
test
jo
add
add
movs
push
pop
sahf
pop
xchg
and
test
xchg
lods
(bad)
jb
sub
pop
ucomiss
xchg
jns
mov
(bad)
sub
cwde
addr16
fbld
test
mov
mov
mov
push
dec
inc
cs
add
dec
mov
imul
adc
rcr
sti
sbb
xchg
xchg
mov
mov
xchg
ins
in
cs
push
xchg
inc
jo
or
mov
repnz
cs
mov
cwde
sbb
int3
js
sbb
mov
shr
rol
inc
jl
cs
sbb
lods
mov
retf
in
xchg
call
test
shl
inc
fidiv
mov
dec
push
mov
cmps
cmp
push
sbb
pop
xor
ror
add
int3
add
xor
sbb
sub
popa
jmp
outs
mov
push
sbb
add
and
pop
xor
jp
or
xchg
xchg
pushf
in
nop
popa
nop
push
nop
leave
dec
dec
jb
nop
cmp
inc
pusha
cmp
lock
mov
nop
mov
mov
add
jb
pop
fimul
push
xchg
retf
in
add
nop
xchg
je
adc
xor
xor
push
lock
lods
(bad)
pop
cmp
inc
(bad)
pop
mov
cwde
push
out
mov
or
lahf
or
push
mov
sbb
sbb
pop
loope
sar
or
dec
sbb
call
mov
or
push
push
fcom
push
jno
ret
out
call
mov
jge
and
into
rol
repnz
or
jmp
mov
call
sub
sub
repnz
std
mov
push
mov
xchg
adc
jg
push
fnstenv
push
dec
or
push
add
ret
rcr
or
mov
fwait
xor
or
pop
pop
call
mov
sub
sub
inc
lea
(bad)
clc
push
jle
sar
retf
push
call
in
sub
je
push
pop
xchg
jp
test
or
faddp
dec
ss
xor
or
push
adc
push
std
movs
bound
add
mov
popf
(bad)
adc
loope
out
inc
aam
popa
and
push
mov
das
ucomiss
pop
xchg
add
jg
fisub
bound
mov
or
xor
dec
and
push
lock
adc
inc
sbb
mov
fs
xchg
and
cmp
je
pop
xor
sbb
fisttp
xchg
nop
add
jl
sbb
or
push
stc
movs
sar
call
mov
imul
(bad)
loopne
cmp
mov
in
mov
jle
mov
ret
jne
cmp
inc
sub
jmp
aas
daa
ss
jp
leave
mov
stc
sub
mov
jnp
pop
mov
dec
fimul
psubusb
fisttp
adc
pop
fdivr
inc
out
inc
xchg
xchg
scas
adc
sbb
ja
xchg
icebp
and
data16
sub
scas
push
fcom
scas
das
pushf
add
jmp
xchg
scas
xchg
xor
mov
out
fdivr
loop
jmp
mov
jl
jnp
scas
push
mov
pushf
push
enter
jmp
outs
sysret
leave
jge
cmps
lods
pop
mov
xor
cmp
jae
inc
sbb
inc
call
retf
inc
adc
add
sbb
sbb
test
ss
mov
sbb
or
push
or
adc
xchg
test
cmp
pop
inc
inc
hlt
or
jl
clc
lea
bound
mov
add
sbb
cmps
outs
lds
mov
sub
mov
(bad)
jg
push
push
in
jbe
data16
dec
add
ins
push
sub
sbb
or
push
add
mov
sub
imul
push
popa
ja
nop
mov
dec
mov
cdq
push
loopne
sbb
and
ret
test
and
mov
push
push
add
mov
cld
sub
dec
(bad)
adc
pop
inc
or
nop
int
fisttp
mov
cmp
sbb
mov
in
jnp
lea
(bad)
aas
add
inc
dec
repnz
add
or
cmp
hlt
inc
mov
sub
dec
jl
jmp
xchg
mov
mov
shl
jbe
lahf
xchg
outs
inc
fist
dec
cmp
jb
inc
cmp
pop
sub
mov
xchg
xchg
push
call
cmp
inc
(bad)
cmp
cmp
in
fwait
dec
add
add
mov
mov
sbb
cmp
jno
xor
add
dec
push
test
add
or
cmp
adc
ret
xchg
xchg
push
callw
add
add
(bad)
rol
stos
mov
jmp
jmp
pop
jmp
or
ss
(bad)
mov
shl
push
pop
push
(bad)
xchg
cmp
ret
and
test
adc
inc
in
and
inc
pop
lock
cmp
xor
add
mov
je
in
mov
and
or
and
dec
xor
out
shl
stos
pusha
xor
push
sub
jmp
push
out
fidivr
repnz
pushf
push
and
mov
lods
jl
lock
mov
jg
ret
mov
mov
xchg
in
(bad)
cmp
xchg
dec
push
popa
jae
pushf
add
bound
ret
jb
push
pop
xor
adc
cmp
shr
push
paddusb
xor
mov
xor
cmp
dec
sub
lds
pop
inc
mov
cmp
cmp
cmp
or
imul
call
jns
not
add
das
aas
sti
lock
imul
add
adc
adc
add
push
xor
jmp
test
gs
loopne
push
mov
or
xor
jge
or
sbb
or
push
imul
stos
ds
mov
pop
inc
and
or
arpl
add
adc
imul
add
pop
sbb
mov
popf
mov
xor
inc
mov
cdq
sbb
inc
cmp
jae
mov
adc
dec
icebp
sub
stos
push
shl
mov
mov
dec
inc
jg
shl
ret
(bad)
cmp
add
adc
inc
dec
cli
or
sbb
je
dec
pop
aam
mov
lods
jbe
add
jecxz
add
test
or
or
and
jl
jp
int3
push
das
add
in
mov
jp
test
push
ds
mov
arpl
pop
loope
xor
(bad)
mov
jnp
lea
push
sub
dec
jo
sub
dec
xor
mov
fadd
push
mov
cs
neg
je
imul
shr
xchg
inc
movhlps
cmp
popf
mov
dec
addr16
mov
and
mov
aaa
mov
and
add
cmp
jnp
cdq
xor
popa
icebp
pop
rcl
push
mov
lock
enter
mov
mov
add
nop
xor
mov
xchg
mov
outs
daa
adc
ret
fwait
ss
pop
test
push
add
sub
or
push
or
ss
(bad)
push
xchg
cs
loope
lock
sbb
setns
ret
xor
cmp
push
mov
adc
and
sbb
mov
pop
test
adc
test
xor
xor
mov
cmp
popf
and
loopne
mov
push
add
repz
mov
push
je
es
add
add
sub
mov
aaa
les
or
inc
sbb
imul
inc
push
push
sub
sbb
(bad)
mov
nop
clc
mov
imul
(bad)
and
mov
xchg
cmp
shr
mov
add
xchg
dec
xor
loopne
pop
inc
scas
jl
jge
mov
(bad)
in
mov
push
mov
add
ret
add
and
fcomp
sbb
lods
iret
mov
mov
ret
xchg
and
xchg
cli
and
or
inc
or
jmp
mov
adc
mov
push
ins
mov
pop
pop
cmp
or
ss
imul
and
mov
xchg
add
mov
mov
mov
rcr
sbb
pop
add
xor
mov
pop
nop
addr16
mov
pop
jle
add
mov
jbe
add
or
xor
scas
seta
nop
dec
adc
movs
nop
add
or
add
jno
rcr
push
clc
mov
or
cs
or
std
push
jne
lea
adc
aad
out
dec
mov
sub
cs
add
jbe
push
dec
adc
add
xchg
scas
sub
fcmovnb
and
mov
mov
cwde
wbinvd
pop
jae
cmp
mov
js
in
fidivr
adc
jmp
(bad)
unpckhps
mov
xchg
xchg
inc
mov
add
ret
sbb
inc
or
inc
or
test
and
mov
cwde
movs
sbb
inc
add
inc
retf
test
adc
int3
xchg
cmp
scas
ja
lahf
jmp
mov
add
push
stc
fdivr
jmp
xor
adc
retf
jl
ror
outs
sbb
xchg
cmp
sub
and
or
movs
ins
mov
sub
loope
push
loope
psubusw
jb
inc
sub
test
pop
repnz
cmp
cmps
loopne
sahf
add
jge
repz
sub
sets
inc
xor
sbb
adc
je
add
hlt
push
dec
icebp
mov
push
mov
jne
push
jmp
mov
or
fild
and
adc
ins
hlt
fdiv
out
xchg
sbb
inc
dec
mov
jmp
cdq
mov
enter
pop
xor
jb
dec
fwait
push
outs
pop
xor
daa
add
pop
dec
jns
cmp
pop
cmp
bnd
and
inc
and
ffree
mov
push
cli
jge
push
imul
cmp
jnp
retf
call
sbb
cmp
movs
inc
and
push
adc
add
das
arpl
push
sbb
fsubr
jno
jmp
jmp
xchg
xchg
sub
mov
popa
mov
shr
cvtpi2ps
aad
xor
movs
push
popf
mov
mov
shl
and
test
test
dec
fld
cmps
inc
add
inc
add
sub
xchg
push
and
popw
jmp
scas
loopne
mov
jmp
push
jbe
nop
sub
cmc
and
lds
cli
loopne
jmp
lods
int
or
sbb
ss
cmp
dec
or
xor
sbb
aam
test
jb
and
ret
sbb
fsubr
cmp
imul
not
push
push
ror
pusha
aas
push
gs
or
inc
jne
push
ins
hlt
sbb
pop
add
push
xchg
push
sub
stos
imul
ror
lds
cmp
ret
push
lods
jae
aaa
call
inc
les
pop
test
mov
(bad)
sbb
mov
test
xor
xchg
jmp
or
or
leave
repnz
mov
or
mov
test
jl
pop
cmp
cli
add
call
pop
push
les
jno
js
cs
dec
sub
mov
pushf
ins
mov
in
clc
imul
fnsave
cmps
sbb
cwde
sbb
sbb
retf
pusha
call
rcl
aas
push
sbb
cmp
cmps
adc
lock
sub
xor
add
pop
or
mov
jle
lods
xor
inc
and
stos
adc
lods
and
dec
sbb
adc
sub
cmp
add
cmps
sbb
adc
aam
cmp
push
ins
dec
frstor
dec
stos
cmp
push
mov
int
and
sbb
mov
jae
(bad)
icebp
xchg
nop
mov
movs
mov
xchg
in
adc
fs
dec
es
add
fadd
nop
adc
hlt
int
nop
fbld
repz
or
xchg
ss
ins
ds
repz
lods
ret
sar
cmp
shr
xchg
lods
(bad)
out
ds
(bad)
and
dec
pop
out
jl
mov
xchg
test
out
sahf
inc
push
ins
mov
jns
inc
stos
arpl
repz
add
sub
push
(bad)
cmps
pop
or
push
add
push
or
ret
adc
fbstp
ins
shl
scas
sbb
push
das
sub
sub
imul
add
je
or
ins
mov
mov
mov
sbb
in
mov
js
stos
pop
pop
lods
mov
add
ins
pop
daa
jb
cwde
cmc
adc
xor
addr16
rcl
and
imul
cmps
mov
cli
fsubr
jns
jmp
(bad)
add
push
push
xchg
and
js
and
pushf
and
mov
pop
es
sbb
loope
pop
outs
popf
ds
in
sub
xchg
xor
call
call
push
test
and
sub
dec
add
sahf
das
xor
cmp
dec
or
jnp
shl
and
xchg
xchg
ja
inc
mov
cmp
push
mov
jne
ficomp
fadd
push
add
or
call
or
adc
out
sbb
sbb
mov
xor
ror
lea
jnp
push
or
dec
shl
add
in
push
loopne
aas
fxch
xlat
mov
cs
shl
adc
adc
sbb
dec
jae
sbb
and
mov
int
retf
cmps
sbb
push
dec
and
xchg
inc
jbe
das
popa
in
or
add
je
test
push
add
neg
and
mov
add
jb
add
inc
cld
je
cmps
sbb
cmovae
cmp
unpckhps
and
sub
cld
out
push
retf
repz
dec
les
fs
shl
or
push
ret
add
aam
ret
xor
rcr
in
inc
mov
enter
jnp
add
xor
push
cmp
lods
inc
cwde
cdq
push
(bad)
mov
out
ret
mov
add
repnz
fwait
adc
pop
and
dec
or
pop
es
dec
mov
imul
inc
dec
sqrtps
pop
lahf
cmp
xchg
mov
mov
pop
ficomp
xchg
int
bound
push
jno
das
sub
jne
sbb
add
xchg
cmp
add
mov
pop
cwde
jnp
mov
(bad)
aaa
add
dec
push
les
dec
sbb
sbb
xchg
mov
xchg
push
icebp
rcr
sub
mov
push
jns
and
clc
cmp
rcl
pop
mov
pop
pop
div
scas
push
ins
mov
sahf
pop
stos
push
mov
mov
jnp
idiv
es
xchg
ins
xor
stc
xor
out
mov
or
sahf
cmps
movs
ret
shr
add
add
sub
pop
scas
pusha
mov
test
cmp
xchg
es
jle
pop
and
or
pop
and
push
or
adc
adc
adc
adc
sbb
push
cli
fimul
pop
and
ins
in
and
sbb
or
rol
lock
outs
sbb
adc
addr16
dec
or
arpl
sbb
shl
pusha
push
sbb
add
xor
push
xor
daa
scas
inc
cmp
iret
add
inc
xor
xor
sti
clc
inc
je
push
mov
mov
inc
cmp
int3
push
xor
es
ror
jg
out
shr
sbb
xor
xor
popf
adc
daa
jbe
pushf
mov
inc
pop
imul
dec
jnp
push
pusha
and
add
and
sbb
test
add
mov
push
out
adc
(bad)
out
retf
aas
and
icebp
inc
inc
add
sub
dec
cmp
ror
stos
std
cli
inc
add
outs
push
scas
and
fist
leave
popf
adc
cmp
push
sti
push
jne
jbe
add
xchg
mov
in
pop
inc
add
inc
jo
jns
push
ds
sbb
jmp
fld
rcl
push
push
mov
xor
jno
pusha
sub
add
sub
jb
inc
lea
ja
adc
and
dec
jmp
adc
sbb
js
add
cmps
ja
or
pop
mov
xor
add
push
imul
pusha
movs
in
ins
push
sbb
mov
xchg
in
call
mov
xchg
add
mov
jp
cwde
aam
jmp
jns
dec
push
mov
mov
aad
addr16
cmc
call
adc
pop
mov
jge
jecxz
dec
dec
test
inc
xchg
dec
mov
inc
(bad)
retf
adc
or
gs
imul
pop
pop
jmp
add
loope
push
dec
cmp
lea
jg
inc
ins
xchg
pop
mov
jb
ds
xor
add
cmc
(bad)
jae
push
jne
xchg
pop
add
dec
out
push
ins
rol
add
in
fld
in
cmp
je
je
push
mov
push
add
pop
fs
jmp
push
movs
add
dec
xchg
mov
pop
and
ds
jmp
pop
shl
xchg
(bad)
and
sbb
sbb
mov
jns
lea
pop
mov
pop
lea
xchg
out
loope
add
xchg
push
mov
aam
sbb
pop
push
jb
(bad)
aas
dec
add
xchg
mov
add
add
shl
mov
inc
mov
sub
push
ror
fwait
sbb
rcr
jle
push
push
fcom
std
or
ret
cmp
add
xor
and
jmp
xchg
cdq
(bad)
push
adc
(bad)
shl
lods
push
mov
cmp
pop
sub
pop
mov
ret
jg
jmp
cwde
test
cmc
jle
push
je
mov
or
mov
je
bound
xchg
sub
shl
out
add
push
or
pcmpeqb
push
xor
out
cmp
or
cli
xchg
mov
imul
or
mov
jge
adc
pop
push
push
ror
push
lods
push
ds
jle
add
dec
jl
cmp
xchg
mov
int3
out
adc
cmp
add
addr16
inc
fimul
push
scas
cld
or
adc
push
jmp
sub
jmp
and
sar
jne
gs
daa
xchg
aas
nop
push
and
cmp
add
or
inc
dec
push
out
js
xchg
lods
add
mov
call
sbb
pop
in
in
push
dec
push
cmc
inc
dec
pushf
ins
mov
xor
mov
mov
and
mov
popf
cli
out
lea
mov
ins
xchg
push
cdq
push
imul
mov
mov
ret
pop
les
int
cmps
cmp
sub
outs
inc
cli
push
add
(bad)
loop
div
pop
mov
rol
mov
rol
shr
sub
push
cmp
cmp
js
dec
shr
sub
xchg
inc
ret
sbb
sub
and
jecxz
or
push
mov
adc
and
push
push
push
add
call
add
adc
jo
in
push
pop
cmp
mov
inc
adc
adc
cmp
iret
push
outs
mov
ror
jbe
js
movs
add
mov
ins
inc
push
icebp
sub
pop
mov
add
push
cmp
sub
cmp
mov
outs
sbb
pop
add
push
int3
inc
fld
dec
add
xor
add
stc
xor
add
pop
push
add
mov
inc
mov
clc
add
ds
imul
mov
cs
retf
xor
mov
mov
es
repz
jp
push
or
adc
sbb
in
cmp
dec
jnp
mov
add
add
add
push
or
pop
or
add
pop
int3
mov
pop
add
jle
mov
push
cmp
xchg
cmp
test
xor
sub
cmp
cmp
mov
inc
adc
clc
and
popa
inc
loopne
jne
mov
enter
fwait
or
sahf
xchg
ret
push
inc
push
add
lock
inc
add
or
and
and
mov
call
and
cwde
pushf
cmp
ss
cmp
je
test
jne
cmp
mov
clc
cmp
stos
ror
mov
jge
inc
nop
cmp
pop
and
retf
sub
add
lods
ret
ja
inc
mov
dec
add
adc
pop
iret
jns
lea
mov
add
and
xor
adc
lea
inc
add
dec
scas
inc
test
pop
inc
push
inc
mov
in
test
sub
dec
sbb
cmp
dec
cmp
sub
jge
mov
push
clc
or
hlt
js
cmp
cmp
or
add
dec
inc
cmp
push
pop
add
sar
repnz
dec
into
and
bound
mov
dec
pop
fcmovbe
xchg
pop
loopne
adc
add
or
daa
test
pop
scas
pop
and
cld
adc
fcomp
in
out
pop
push
mov
push
ss
jno
pop
mov
in
in
nop
or
in
or
add
jp
and
cmc
jle
test
push
add
jns
aam
fwait
call
rol
pop
mov
dec
imul
pusha
jnp
mov
cmp
mov
ins
adc
sahf
or
dec
pop
push
sub
inc
push
push
fisubr
jmp
in
mov
fimul
test
leave
aas
inc
jg
mov
repnz
add
sub
xchg
(bad)
call
xchg
xchg
(bad)
sbb
push
scas
and
xchg
cmp
test
xchg
in
mov
push
xchg
cmp
in
sbb
in
fild
into
hlt
add
push
test
ja
pop
jle
push
outs
sub
push
call
or
push
xchg
pop
retf
popf
je
push
es
iret
xor
lods
inc
dec
and
inc
jne
adc
and
push
test
sbb
in
sub
hlt
loopne
(bad)
daa
jecxz
cdq
mov
mov
sbb
clc
and
jno
and
and
lods
sqrtps
xchg
arpl
jno
addr16
loopne
mov
icebp
cmc
shl
jmp
sahf
mov
add
xchg
ret
pop
adc
iret
sbb
js
dec
nop
sub
leave
(bad)
(bad)
sub
adc
push
in
mov
mov
or
ret
cdq
xchg
add
jae
jecxz
loopne
mov
inc
mov
xchg
out
mov
loopne
retf
ja
and
dec
mov
jmp
lock
sub
or
repnz
pop
ja
std
mov
inc
in
add
or
stc
or
push
enter
push
add
dec
push
inc
mov
inc
cmps
adc
mov
mov
xlat
aam
or
jmp
cmp
adc
(bad)
out
(bad)
dec
and
(bad)
stos
fcom
aam
xchg
xchg
shr
enter
lods
pop
daa
test
cmps
xlat
push
dec
daa
test
add
mov
popa
stos
test
scas
or
jno
push
jnp
add
test
and
pop
loope
jne
fimul
push
(bad)
nop
movs
push
popf
push
(bad)
das
in
aam
loop
mov
dec
ds
add
sbb
add
adc
(bad)
jmp
and
push
xchg
sbb
pusha
popf
xlat
push
xor
leave
jno
cwde
sbb
jmp
ret
in
push
test
mov
sbb
das
push
pop
retf
retf
dec
dec
inc
je
push
stc
push
call
and
push
or
lods
out
push
popf
xchg
mov
dec
jmp
inc
das
test
fld
push
iret
adc
push
xchg
xchg
punpckldq
cs
or
or
rcr
and
sbb
add
mov
not
loopne
pushf
idiv
or
es
adc
cli
and
push
cmp
or
add
pop
dec
push
add
stc
mov
out
into
mov
add
push
cmp
add
jae
nop
out
pop
ror
xchg
sbb
jp
repz
cmp
push
mov
mov
sahf
push
jg
xor
sbb
test
outs
retf
push
adc
add
popf
fadd
pop
add
add
aas
add
mov
push
push
pop
pop
and
jbe
push
aas
or
sahf
nop
adc
or
pop
or
or
adc
or
dec
fiadd
popf
(bad)
movsx
in
adc
rcl
cmp
fild
push
mov
sbb
pop
popf
xor
cmp
push
mov
and
dec
movs
xor
fs
test
inc
sbb
add
cmp
mov
inc
rol
imul
or
push
mov
rcr
aad
scas
sbb
inc
mov
dec
fadd
cmp
sti
ss
inc
outs
imul
rol
add
pusha
adc
ss
test
call
and
mov
and
es
xchg
add
enter
push
sub
xchg
mov
push
je
dec
jae
cmp
rcr
ds
add
and
cs
lods
push
fdivr
jne
pop
mov
push
call
xor
ins
gs
cmc
je
imul
xchg
pop
dec
test
xlat
call
adc
fs
cmp
jnp
lea
test
or
aaa
xor
sahf
xor
mov
retf
xlat
pop
lock
push
std
mov
add
shl
mov
jbe
or
rol
sahf
fbstp
add
jmp
cmp
shl
out
test
lods
or
cmp
cdq
push
xchg
xchg
push
pop
nop
div
inc
push
es
add
ret
mov
and
jl
add
add
retf
lock
jne
xor
daa
ficomp
inc
jmp
cmp
add
ret
aam
add
ret
ret
fadd
mov
adc
call
xchg
mov
push
pop
arpl
lea
and
call
pushf
add
jp
jl
sbb
pop
lds
mov
jnp
retf
scas
and
or
test
(bad)
add
sbb
ret
fsub
adc
pop
ret
dec
adc
mov
add
sub
aam
rol
or
stos
ror
sbb
or
inc
push
enter
push
add
lods
mov
ret
add
stos
add
in
dec
pop
mov
push
push
pop
cdq
daa
jae
xchg
dec
pop
xchg
xchg
daa
aad
xchg
pop
aaa
and
xor
sbb
mov
sbb
sub
(bad)
retf
add
cmp
js
xchg
jp
xor
enter
mov
and
add
inc
add
(bad)
shl
movs
imul
adc
add
ss
sbb
fsubr
add
ins
ins
xchg
test
sbb
add
mov
jecxz
je
or
dec
imul
adc
or
or
push
clc
xchg
retf
fstp
add
lea
shr
add
sub
icebp
xor
sbb
bnd
mov
js
shr
je
sbb
outs
jl
xor
push
xchg
ret
adc
stc
mov
std
push
xor
data16
test
push
into
pop
(bad)
into
dec
dec
std
das
push
loopne
and
scas
jmp
fcom
cmps
daa
inc
imul
add
sub
rcl
sub
sbb
inc
pop
xchg
mov
outs
call
das
sub
xor
out
test
push
or
aad
jge
mov
loopne
aaa
movs
inc
retf
out
jmp
push
popf
push
int
fidivr
lods
imul
pusha
cmp
ss
xor
add
inc
movs
cmps
or
xor
sbb
xchg
pop
push
nop
aam
mov
mov
mov
retf
add
pop
imul
add
rcl
xor
and
lahf
js
inc
mov
test
out
sbb
ficomp
pop
mov
pop
loopne
xchg
add
outs
sub
cmp
sbb
jmp
rol
(bad)
retf
xchg
mov
inc
inc
rcr
pop
xor
mov
lods
imul
jmp
into
push
fld
dec
jno
and
call
in
enter
dec
inc
adc
mov
dec
mov
rcr
jle
adc
les
imul
je
jecxz
ins
xor
(bad)
idiv
aam
inc
mov
mov
ficom
retf
sbb
add
nop
dec
enter
pop
cmp
push
(bad)
iret
ins
imul
cwde
les
div
mov
mov
push
xor
xor
les
mov
daa
inc
fmul
jp
and
add
frstor
movs
lods
xchg
and
add
ja
push
movlhps
lods
cmp
xor
cwde
call
pop
add
cmps
push
mov
test
xor
movs
inc
xchg
sub
push
rcr
or
scas
jg
inc
out
jl
fadd
(bad)
xor
add
js
push
arpl
adc
dec
jno
xchg
dec
jle
pushf
cmp
cmp
es
pop
fbld
dec
psadbw
ret
inc
or
movs
mov
mov
mov
dec
add
xor
jo
movs
rol
fldenv
aas
dec
fsqrt
leave
pop
inc
stos
fmul
loope
dec
popa
add
call
add
add
lods
adc
and
add
mov
cmp
out
lods
add
xor
mov
lods
jle
in
or
cwde
sti
add
and
inc
les
fucomip
pop
xor
push
jle
cli
sub
mov
cs
ror
int3
aad
pusha
lock
jne
call
ins
lea
test
and
inc
inc
pop
es
mov
dec
dec
mov
xlat
push
pusha
add
cmp
arpl
adc
(bad)
sub
adc
adc
das
into
adc
and
pop
stos
sbb
cdq
fild
inc
js
and
and
in
test
mov
in
stc
jo
mov
lds
loopne
inc
mov
or
nop
imul
push
and
imul
inc
mov
ret
jb
mov
jo
mov
xor
pop
inc
sbb
inc
jbe
into
shl
int3
mov
pop
stc
mov
sub
sbb
inc
shr
mov
retf
or
xor
xchg
xor
xor
and
adc
cmp
cmp
sbb
pop
jnp
dec
mov
test
jmp
ret
inc
lock
xchg
mov
adc
jns
je
push
mov
sbb
jp
sti
xor
pop
jle
sbb
sbb
inc
dec
int3
jbe
pop
cmp
jle
repnz
inc
push
sub
mov
fisub
in
nop
push
cmc
mov
imul
sub
xor
inc
imul
fcmovnbe
not
inc
pop
jl
and
dec
inc
mov
jl
add
fild
cmps
jnp
aaa
and
jo
ja
push
jne
sub
(bad)
xchg
dec
adc
dec
lahf
push
mov
jl
mov
cmp
mov
pop
lods
adc
movs
push
mov
push
mov
out
fwait
nop
xchg
or
int
popf
xlat
inc
call
xchg
push
call
ret
stos
push
pop
xchg
jnp
mov
int
cmp
xchg
mov
jecxz
inc
mov
daa
xchg
cmp
xchg
push
mov
xor
inc
ss
pop
push
push
mov
js
popa
or
fist
xchg
push
or
sub
jg
nop
in
jne
mov
add
or
in
mov
sbb
mov
xchg
pop
clc
jae
pop
cmp
test
pop
mov
push
sub
xchg
retf
in
sub
sub
cs
mov
push
out
ja
lods
pop
mov
push
and
es
out
sahf
sub
cmp
inc
dec
jns
out
push
push
bound
test
add
dec
xor
mov
push
sub
fidiv
daa
or
xchg
jp
pop
or
cs
cli
pop
push
movs
push
xchg
adc
(bad)
dec
or
add
out
mov
jne
or
push
ret
mov
add
mov
outs
stc
retf
xchg
es
dec
xchg
mov
sbb
add
xchg
jmp
mov
push
push
mov
test
ret
add
sbb
mov
add
pop
popa
aam
add
add
push
add
cmp
dec
pusha
xchg
fxch
adc
(bad)
fcomp
push
je
ins
loope
mov
mov
sbb
xchg
xcrypt-ecb
cmps
or
fwait
loopne
movs
add
mov
sar
gs
arpl
mov
xchg
mov
int
cmp
cmp
cmp
dec
sub
lds
mov
add
mov
in
add
into
add
or
inc
mov
mov
lahf
and
fs
inc
and
fcomp
ret
in
or
test
mov
imul
stos
mov
jne
ds
inc
inc
sbb
clc
outs
fistp
jg
in
test
test
mov
mov
lock
lock
dec
mov
sbb
lea
int
pusha
jmp
test
sub
mov
popa
jns
dec
inc
sbb
cmp
retf
retf
mov
jno
cmp
mov
int3
jmp
xor
push
div
push
das
adc
cmc
jle
imul
cld
mov
fld
pop
add
inc
mov
push
dec
bound
(bad)
imul
cmps
add
clc
mov
sbb
push
adc
ds
lods
imul
cmp
movs
pop
test
cmp
or
outs
bound
shr
inc
mov
adc
mov
inc
xor
fdivr
mov
or
sar
hlt
cmp
les
out
push
push
push
push
mov
sub
mov
sub
and
sub
in
pop
shl
cmp
cwde
cli
mov
mov
retf
xor
push
push
pushf
pusha
or
pop
pop
ror
cmp
jns
mov
pop
cmp
cmps
xchg
mov
fldcw
dec
inc
shr
xlat
aaa
pop
imul
pop
aaa
(bad)
rcl
jmp
sbb
test
push
xchg
mov
fmul
sub
mov
fadd
push
ret
inc
add
push
pop
call
jb
or
cmp
push
sbb
jo
inc
and
inc
les
mov
sub
loop
sbb
cmp
js
or
movs
mov
ds
adc
dec
aas
pop
adc
and
inc
outs
xor
aas
lock
cmp
loope
test
jl
imul
mov
lea
mov
es
pushf
je
loope
stos
fdiv
sub
fwait
xchg
sbb
out
es
stc
xrelease
mov
inc
ret
call
jne
retf
dec
inc
jl
mov
add
inc
inc
js
jbe
add
cmps
or
push
add
and
ficomp
gs
ins
aas
and
jne
push
and
or
in
pop
leave
and
cmp
nop
test
mov
add
cdq
jns
push
sub
push
jb
(bad)
push
and
push
add
sti
push
cmp
add
add
lahf
adc
add
daa
ret
pop
clc
push
lahf
fcom
aas
push
mov
loopne
fld
sbb
pop
(bad)
pop
shl
je
cmp
add
ja
and
rcl
neg
jecxz
xchg
mov
and
cmps
imul
loope
pop
icebp
xchg
xor
sub
and
aam
shr
inc
xor
cmp
retf
cld
lock
sub
and
inc
sub
and
fmul
mov
add
cmp
xchg
inc
add
xlat
inc
or
sub
dec
add
add
jns
mov
dec
push
add
lock
pop
lods
add
cmp
(bad)
push
or
mov
lods
movs
jne
cs
mov
and
mov
cmp
lahf
sbb
mov
and
jle
dec
hlt
int3
sbb
push
or
retf
push
or
push
shl
xchg
sub
mov
xor
jne
(bad)
(bad)
(bad)
jb
push
mov
sub
fist
pushf
data16
jge
mov
rol
pop
adc
pop
aam
dec
sbb
xor
adc
jmp
int
push
nop
sbb
push
lods
mov
ret
(bad)
jl
aam
inc
adc
fild
enter
(bad)
and
sbb
cmp
popf
xor
xor
lea
int
(bad)
cmp
lea
cmp
push
sbb
aas
dec
add
bound
(bad)
adc
stos
fmul
dec
or
or
xor
cmp
cli
pop
cs
pushf
out
push
mov
jb
jnp
cmp
add
loop
rol
aaa
nop
loopne
dec
js
aam
mov
fs
(bad)
sbb
lds
mov
add
add
cmp
enter
pusha
shl
or
daa
in
imul
enter
gs
and
jns
add
pop
push
jo
push
movs
and
xchg
cmc
or
lea
inc
push
push
add
ret
dec
ss
das
fwait
and
push
add
aas
push
push
sub
xor
ins
or
shr
cmps
sub
push
stos
mov
inc
mov
add
sahf
pop
add
adc
pop
cmp
nop
gs
xor
dec
loopne
sbb
pop
jb
adc
jl
sbb
out
shl
adc
gs
pop
in
push
pop
xor
mov
ret
cmp
and
sbb
clc
nop
jbe
mov
loope
js
dec
call
inc
pop
mov
xor
dec
ds
out
jnp
sub
and
push
sar
in
nop
inc
add
cmp
or
push
outs
mov
lahf
push
adc
mov
and
mov
mul
and
cmps
mov
rcr
pop
es
scas
xor
das
mov
dec
push
push
aas
aaa
cli
pop
push
inc
or
jmp
in
xchg
cmc
sub
pop
retf
adc
push
jnp
adc
adc
je
cmp
xchg
pop
or
jecxz
ins
push
push
push
fcmovnb
ja
gs
mov
xchg
mov
mov
add
aas
cmp
pushf
xlat
test
loope
adc
cmp
cmc
pop
inc
je
sar
mov
(bad)
adc
pop
es
jl
push
xchg
sar
stos
dec
jecxz
imul
(bad)
mov
fst
neg
mov
lock
jnp
dec
dec
int
sbb
cmp
add
ret
add
cmp
jmp
xor
xor
jo
sbb
dec
or
add
add
cmps
lea
loopne
add
cdq
mov
push
cwde
and
pop
sbb
mov
pop
nop
shl
and
dec
jge
mov
push
push
lock
jl
add
shl
es
xchg
inc
mov
add
dec
dec
ja
rcr
js
xchg
int
movs
int3
mov
call
div
aas
adc
pushf
cmp
js
pop
adc
xor
movs
dec
aas
pushf
and
push
mov
add
dec
je
(bad)
nop
add
in
call
sar
jp
and
je
aas
or
sub
comiss
cmc
and
add
inc
gs
in
or
add
or
push
or
retf
pop
pop
xor
cmp
ret
xchg
test
add
js
add
and
icebp
jne
leave
mov
js
(bad)
pop
sar
std
aas
mov
jle
mov
in
push
clts
xchg
std
psubusb
adc
push
and
add
adc
call
or
loop
movs
dec
js
xchg
sub
sar
jl
mov
or
mov
retf
std
cmp
mov
(bad)
mov
add
sbb
jmp
ja
mov
call
fs
xchg
add
add
imul
dec
mov
ret
bound
jl
(bad)
jns
pop
add
or
add
into
jnp
jmp
movhps
cmp
inc
dec
iret
adc
dec
adc
dec
adc
push
fstp
inc
ins
je
mov
sbb
inc
arpl
adc
add
js
nop
mov
push
inc
je
sbb
sub
aam
add
adc
xchg
pop
call
icebp
inc
add
or
inc
pop
xor
cmp
test
call
and
in
aas
fldcw
push
pop
pop
sub
or
mov
pop
adc
jne
cmp
push
push
push
icebp
xor
sbb
inc
enter
repnz
call
add
ror
mov
mov
push
and
pop
pushf
xchg
fwait
adc
jo
adc
ret
cmp
adc
xor
inc
add
cmp
arpl
movs
or
or
or
pusha
pusha
jae
cdq
add
add
xor
scas
or
sbb
mov
xor
inc
adc
push
and
inc
loope
xchg
nop
nop
rol
and
aas
mov
jle
push
clc
jb
repnz
fistp
inc
rcl
ja
xchg
push
add
rol
mov
fisubr
dec
loope
inc
add
dec
and
push
add
inc
push
and
test
xchg
add
adc
mov
(bad)
jno
pop
sub
add
or
ficomp
jmp
aas
xor
test
or
mov
push
push
jg
or
in
and
fucom
outs
pop
adc
retf
inc
xor
inc
push
scas
or
or
fs
push
jno
leave
pop
loop
sahf
cmps
lea
(bad)
sbb
loopne
out
jge
dec
and
inc
add
and
or
jmp
aaa
ror
scas
jp
push
outs
scas
(bad)
jnp
fild
outs
xor
sub
cmps
rcr
enter
pop
cs
fidivr
mov
je
pushf
enter
nop
fstp
and
movs
push
push
mov
pop
cmp
or
push
sbb
pop
mov
cmps
and
popf
add
adc
rcr
loop
xor
pop
adc
or
out
lods
add
add
outs
jmp
sub
daa
shl
add
and
in
imul
and
mov
stos
pop
cld
cmp
(bad)
nop
cmp
fwait
in
cmc
fsub
inc
sbb
and
xchg
add
(bad)
xor
xchg
popa
mov
icebp
sbb
jmp
in
sub
pop
mov
or
mov
xchg
daa
(bad)
jmp
sub
sbb
dec
cdq
and
(bad)
rol
and
mov
jb
adc
shr
or
xor
push
pop
add
ror
nop
mov
sti
push
and
dec
adc
bound
je
push
push
jns
ret
sub
(bad)
add
jno
pop
xor
das
or
pop
xor
setne
inc
xor
dec
push
pop
lods
and
iret
dec
xchg
mov
sub
je
push
call
test
rol
ret
arpl
sub
add
mov
fisub
and
shl
adc
sub
push
xchg
fdiv
push
call
clc
nop
add
push
cmp
xchg
fcmovu
dec
fs
pop
dec
and
dec
jne
dec
push
imul
add
ud2
or
inc
movs
dec
dec
or
loopne
aaa
ss
std
out
call
lahf
mov
jbe
mov
mov
in
inc
cmp
push
mov
cmp
sbb
gs
cmp
(bad)
or
pop
fidiv
push
dec
(bad)
(bad)
iret
jp
movs
wbinvd
inc
mov
test
jb
(bad)
sbb
add
stos
push
push
cmps
aas
jo
xchg
adc
xor
rcl
jns
push
jno
push
inc
dec
mov
push
jbe
and
sbb
mov
fs
mov
push
xchg
xor
mov
dec
sub
test
dec
xchg
lods
imul
inc
dec
and
jmp
aaa
add
mov
or
jp
stos
stc
add
fs
dec
ss
or
test
dec
and
or
add
(bad)
into
adc
xlat
fs
push
mov
add
sub
add
in
mov
ficom
sub
daa
dec
adc
mov
or
or
mov
sbb
jns
cmp
cmp
inc
add
out
inc
and
sbb
int
aas
fsub
jno
popf
mov
mov
add
stos
ins
sbb
sbb
or
or
jl
inc
cli
retf
dec
pop
or
xor
les
loope
mov
movs
mov
and
add
(bad)
popa
sub
add
js
cmp
push
sbb
leave
jle
xor
sbb
add
lock
call
mov
jbe
sub
push
aam
adc
repz
into
add
cmc
iret
test
and
cmp
sbb
cmp
nop
mov
sub
mov
inc
dec
pop
(bad)
aam
and
fimul
(bad)
int
(bad)
add
add
mov
loopne
rol
cmp
int3
dec
mov
loop
repz
xchg
pop
cs
sahf
add
jp
daa
std
pop
xchg
xor
fsub
add
and
adc
in
nop
ds
mov
inc
mov
and
out
cmps
shl
xchg
add
cmp
push
jle
add
imul
push
dec
sub
pop
mov
add
lock
xor
mov
push
pop
jno
movs
add
call
inc
sub
call
add
push
ror
call
cmp
mov
inc
jno
mov
shl
shr
and
cwde
inc
movs
xor
mov
imul
mov
mov
call
in
mov
aas
or
cwde
(bad)
arpl
movs
sub
push
test
scas
repnz
call
add
adc
mov
and
pop
jne
jge
cmp
sar
mov
in
mov
jle
mov
pop
inc
pushf
adc
mov
xor
dec
push
sub
and
icebp
sub
push
inc
jg
mov
mov
or
add
sbb
ins
adc
and
add
push
jmp
xor
mov
arpl
aas
sbb
aas
dec
test
mov
and
cmp
pusha
cld
mov
into
ss
push
inc
rcl
jno
xor
jg
sub
add
sub
pusha
pop
adc
adc
or
push
inc
inc
cli
add
call
dec
push
xchg
dec
mov
test
aad
sub
inc
retf
mov
xchg
mov
inc
dec
add
retf
push
adc
xor
mov
lods
cmps
add
jbe
mov
pop
sub
enter
fld
add
add
jp
inc
(bad)
sbb
dec
adc
sub
adc
test
sbb
movs
push
cmps
pop
in
dec
dec
lods
es
and
fbld
adc
jmp
ins
imul
add
call
imul
sub
fcomp
mov
or
jecxz
ins
fldcw
jle
loope
sti
xor
(bad)
outs
cld
adc
and
sbb
(bad)
pop
and
sbb
jle
fs
inc
jecxz
mov
cmps
inc
pusha
cmp
loope
call
rcr
sbb
adc
and
es
mov
aam
xor
int
jmp
cmps
add
push
mov
pop
test
pop
cmps
int3
retf
mov
push
sbb
inc
aam
dec
adc
stos
mov
ret
or
xor
test
pop
sub
ds
push
aaa
or
pop
adc
sbb
loopne
push
sbb
sbb
retf
mov
or
add
xor
add
popa
and
das
test
repz
in
add
cmp
add
cld
adc
xor
or
imul
mov
nop
bswap
repz
daa
xor
cmp
inc
jp
ss
and
movs
test
pop
mov
fucomp
xchg
sub
sbb
into
aam
sbb
ret
shr
jb
jns
int
jnp
lods
inc
imul
cmp
dec
add
adc
jo
add
icebp
mov
xor
push
lods
sbb
adc
pop
push
inc
call
sti
push
ret
test
bound
lahf
clc
je
add
jmp
or
pop
lods
xor
imul
pusha
(bad)
mov
sub
lea
ss
push
lock
and
iret
or
dec
mov
and
add
(bad)
cmp
retf
mov
sbb
xor
jmp
xor
mov
dec
inc
sti
push
mov
fimul
shr
ret
jg
neg
neg
neg
sub
add
adc
dec
setge
or
repz
popf
dec
jmp
jge
sub
ror
enter
cmp
leave
adc
push
scas
enter
fsub
sbb
jbe
ja
push
or
mov
daa
mov
and
cmp
pop
cs
pop
xlat
out
jl
sti
(bad)
sbb
outs
cmp
and
inc
sub
cmp
sbb
sub
pop
test
cmp
xor
mov
xchg
mov
rol
push
fcom
dec
ror
adc
push
movs
dec
mov
cmps
mov
or
xchg
mov
outs
or
jmp
sbb
aaa
std
add
int
pop
fidivr
mov
xor
sbb
jbe
or
add
xchg
xchg
mov
out
mov
lea
or
mul
sub
cmp
adc
jmp
jo
mov
cmps
or
cmp
ret
or
cmps
add
in
inc
jl
cld
inc
lea
dec
das
pusha
sbb
mov
cdq
xor
or
loope
cmps
and
sub
or
nop
fisttp
cmp
sub
dec
push
push
mov
jne
inc
mov
adc
cmp
add
and
ret
arpl
cwde
push
sub
mov
fldcw
movs
lods
cmp
inc
sbb
leave
shl
in
cmp
adc
jne
pop
fwait
sbb
and
mov
mov
(bad)
jecxz
and
(bad)
outs
arpl
dec
or
or
sahf
pop
mov
jo
sbb
imul
jbe
popa
and
cmps
fadd
inc
js
mov
jecxz
aad
fidiv
xchg
adc
cmp
cs
xlat
js
xor
lods
jecxz
push
cmp
sbb
cmps
pop
inc
sar
jmp
call
mov
sub
in
sbb
loope
aad
loop
or
je
leave
xchg
int3
or
mov
fwait
sar
push
xor
xor
sub
mov
dec
cmp
dec
sbb
jmp
dec
lds
and
pop
push
add
sbb
inc
or
xchg
cli
jo
aam
cmps
dec
or
aas
or
dec
mov
dec
mov
mov
(bad)
xlat
adc
jne
mov
rcl
sbb
or
and
sub
adc
xor
jmp
lahf
retf
adc
cmp
fadd
retf
sub
scas
outs
add
imul
add
aam
xor
or
push
inc
loopne
push
adc
popa
dec
add
mov
add
movs
dec
test
mov
mov
or
pop
bound
push
sbb
and
push
xchg
aaa
add
mov
mov
xchg
xchg
push
(bad)
or
xor
aam
jnp
xchg
xchg
inc
(bad)
cmp
gs
pop
(bad)
sbb
cmp
sbb
pop
cmp
nop
add
or
ss
inc
sar
push
(bad)
jge
outs
xor
fdivr
inc
xor
dec
out
xor
sub
pushf
adc
out
or
in
sub
leave
and
or
xlat
mov
mov
in
arpl
lods
ins
mov
xchg
dec
lahf
loopne
mov
loope
jmp
sbb
mov
mov
mov
mov
or
xor
lods
hlt
or
add
into
enter
ror
or
push
push
pushf
inc
scas
and
fild
xor
jle
inc
repz
jno
inc
sub
fist
pop
jae
cs
push
add
add
push
xchg
rcr
sbb
xchg
xchg
cld
add
pop
rol
add
jmp
je
ds
jmp
push
sub
xor
repz
in
add
add
dec
loope
cmps
mov
mov
loop
sub
and
mov
pop
xchg
pop
mov
and
add
popa
cmp
mov
and
jmp
jge
pop
push
jae
mov
cmp
dec
sbb
mov
fld
adc
add
(bad)
adc
or
adc
inc
je
mov
and
push
inc
add
mov
mov
mov
push
add
xchg
dec
or
add
(bad)
cmp
pop
ja
ret
add
cmp
push
ret
or
enter
mov
jle
call
push
arpl
mov
mov
ins
adc
cli
movs
retf
xchg
call
mov
out
jae
loopne
(bad)
jecxz
cmps
cmp
in
outs
inc
inc
cld
lods
or
push
inc
adc
das
jae
fild
add
sahf
cmp
les
cmp
shr
xor
dec
cmp
je
dec
hlt
adc
sub
xor
sub
sbb
out
add
xchg
clc
or
sti
cmp
jnp
adc
jmp
movs
or
je
adc
xchg
sbb
xchg
sbb
pop
push
pop
inc
imul
arpl
mov
mov
adc
(bad)
(bad)
jne
fdivr
loopne
test
adc
mov
movs
xor
adc
pop
or
lods
inc
or
or
adc
push
cmp
enter
add
movs
cmps
jecxz
sub
ins
mov
push
or
leave
jo
xchg
mov
push
call
inc
shl
loop
mov
jmp
push
scas
dec
add
sub
mov
imul
xchg
or
nop
pop
sbb
pop
add
(bad)
test
pop
stc
ins
(bad)
push
sub
cmp
xchg
(bad)
xchg
push
xchg
sbb
imul
xor
ss
daa
xchg
xchg
ss
cmp
mov
dec
cmp
and
repz
jg
or
lock
and
pop
xchg
or
xchg
inc
ja
pop
ror
cmp
jbe
sub
ret
mov
mov
add
sbb
popa
mov
shl
jno
jne
ret
mov
jle
push
mov
ins
push
lods
jmp
inc
jge
mov
cmc
pop
call
hlt
repnz
pop
pusha
add
sub
mov
dec
cmc
or
and
mov
retf
push
or
xchg
loopne
inc
jl
sti
and
(bad)
and
and
test
pop
dec
mov
aaa
inc
jne
push
cmps
cmp
xor
add
mov
fild
test
or
jmp
jp
ror
dec
adc
mov
call
add
test
arpl
ds
adc
push
inc
push
std
dec
test
movs
inc
add
jnp
nop
scas
stc
dec
sbb
movs
mov
push
inc
call
mov
les
push
push
adc
add
add
std
pushf
retf
in
inc
jge
push
xor
push
lock
xlat
add
dec
jp
enter
fcmovnu
je
dec
mov
cmc
test
ja
and
fwait
or
(bad)
jns
sar
add
add
test
xor
jle
sbb
push
(bad)
mov
or
push
mov
sub
test
push
or
scas
cmp
(bad)
gs
inc
inc
sbb
sub
shl
and
sbb
sub
push
clc
rcl
call
loop
mov
pop
push
push
outs
cld
sbb
les
add
add
pop
jnp
call
dec
aam
jl
lock
or
add
popf
data16
div
sbb
fcos
(bad)
cmp
fadd
loop
jmp
sub
mov
add
jne
aas
lea
pop
adc
adc
xchg
mov
jle
sbb
(bad)
cmp
(bad)
and
mov
or
cli
jg
js
or
addr16
das
mov
mov
cmp
pop
add
mov
pop
mov
add
push
sub
shl
or
mov
rol
inc
jns
ds
sbb
js
or
fild
push
ret
add
es
outs
pop
fisttp
cdq
pop
add
cmp
dec
cs
or
shr
or
add
and
jns
mov
push
add
mov
xor
add
outs
test
mov
test
xchg
lock
js
dec
test
and
inc
mov
shl
sbb
cld
and
adc
rcl
push
cdq
in
iret
sbb
mov
pop
push
aas
arpl
fild
js
in
ja
call
push
add
scas
or
lods
cdq
fs
mov
call
adc
jmp
arpl
clc
sbb
pop
punpcklbw
ja
je
xor
mov
sub
add
lock
pop
or
lea
outs
add
add
and
retf
cmp
add
xchg
inc
jmp
sbb
xchg
add
inc
pop
popa
pop
inc
popa
ret
lahf
out
mov
and
cmc
xchg
enter
push
mov
mov
mov
pop
daa
sbb
xor
mov
pop
xlat
stos
sbb
mov
push
jg
mov
in
arpl
movs
ins
mov
mov
pop
and
mov
xchg
xor
jg
rol
sbb
add
ret
mov
int3
cwde
popa
jbe
mov
das
add
cmps
xlat
or
and
mov
cs
xlat
jns
fs
(bad)
add
je
cmp
mov
call
loop
andps
popf
ins
icebp
pop
sbb
lahf
inc
fs
pop
cwde
pop
add
push
mov
out
ss
cmp
inc
or
pusha
sub
and
inc
cdq
xchg
jnp
and
jg
mov
push
or
inc
inc
ss
push
pop
fistp
mov
push
sbb
mov
dec
inc
pop
jge
inc
in
(bad)
push
imul
lds
adc
or
out
cmps
mov
retf
sub
inc
inc
sbb
xchg
jecxz
adc
arpl
les
stos
cmc
rol
call
or
push
rol
or
popf
mov
aas
ss
sub
mov
scas
fidiv
or
mov
jl
test
sub
cmp
inc
adc
add
movs
add
lods
pusha
inc
add
jne
lea
inc
cld
ret
sbb
push
push
and
dec
add
or
dec
mov
mov
mov
and
xor
int
fcmovb
xchg
mov
adc
lea
fisub
mov
adc
iret
iret
inc
xchg
mov
shr
movs
lock
push
and
ss
cmp
adc
les
push
ret
pusha
or
enter
fldcw
(bad)
imul
movs
popa
jb
repz
cdq
xor
je
xor
call
inc
leave
push
or
sti
add
pop
adc
sbb
push
retf
adc
inc
mov
push
popf
sbb
jecxz
jno
dec
js
jecxz
mov
jl
cmp
xchg
dec
pushf
mov
dec
dec
sbb
push
es
adc
add
push
dec
pop
ret
fs
or
or
setg
pop
or
repz
xchg
popa
jo
pop
cmp
add
add
jge
(bad)
ins
imul
add
cmp
lods
adc
pop
jmp
repz
rol
fwait
shr
push
cmp
xchg
mov
sub
push
xchg
dec
push
push
nop
imul
cli
in
push
or
mov
push
mov
push
pushf
or
push
lea
mov
mov
ret
or
icebp
sub
bound
lods
cmp
jae
xchg
inc
xor
add
fwait
retf
in
sbb
aam
add
adc
pusha
pop
cs
jno
dec
jmp
aas
or
pop
loope
and
mov
loope
shr
ins
xor
std
pop
rcr
mov
rcl
mov
test
inc
ret
jb
and
add
push
or
jae
sub
call
sub
pop
fsub
js
jecxz
addr16
mov
aaa
pop
sub
push
enter
push
push
sahf
mov
add
call
push
ds
push
inc
sub
js
add
push
mov
sub
mov
push
xor
fiadd
add
add
fs
adc
vpunpcklbw
adc
movs
push
jnp
inc
push
loope
repnz
lods
add
repz
push
pop
push
rcr
xchg
nop
or
aam
pop
push
xchg
mov
mov
mov
jmp
adc
int3
push
in
cld
jbe
lods
adc
stos
cmc
in
cmp
sub
push
mov
pop
push
xlat
(bad)
push
bound
dec
inc
rol
js
push
ds
ret
inc
pusha
and
dec
and
sub
jp
stc
and
jge
sbb
pop
pop
and
and
inc
mov
fdiv
sbb
nop
xchg
ret
adc
adc
imul
xor
xchg
pop
repnz
xor
xor
sahf
cwde
mov
sub
add
enter
mov
adc
pusha
lock
or
fldcw
adc
jne
inc
lock
lods
inc
loopne
pop
pushf
xor
daa
or
inc
dec
imul
fisttp
xchg
daa
(bad)
push
push
mov
xchg
retf
mov
cmp
and
rol
and
ja
dec
out
mov
pop
je
push
push
or
add
ret
pop
mov
mov
stos
pop
inc
fidivr
mov
sub
inc
mov
or
aam
addr16
jo
push
jle
add
mov
or
mov
aam
sbb
xor
push
mov
and
scas
fwait
rol
loop
mov
jnp
mov
pop
(bad)
shl
cmc
imul
mov
and
jmp
cmp
xor
jmp
in
sub
push
mov
ret
add
ret
mov
xor
add
or
push
sbb
add
mov
jne
ss
imul
mov
push
xchg
lock
inc
push
push
dec
xor
loop
add
jmp
add
push
or
or
sbb
xor
pusha
jg
add
pop
repz
repz
out
ret
sbb
(bad)
fcmovnbe
int
and
jne
std
hlt
add
adc
test
jne
push
mov
shl
test
in
and
call
call
and
into
inc
push
call
jo
sti
mov
leave
pop
inc
aaa
fiadd
mov
ffreep
sbb
pop
into
iret
mov
add
not
adc
out
jg
dec
fs
and
inc
inc
jmp
sbb
sar
dec
pop
out
push
push
in
mov
xor
cdq
les
xchg
sbb
or
in
add
dec
call
scas
stos
add
outs
mov
or
cmps
add
jg
dec
adc
dec
jmp
lea
mov
dec
jle
int3
inc
loope
pop
mov
inc
xor
outs
adc
mov
mov
fiadd
jae
(bad)
adc
cmp
fadd
popf
mov
ja
ins
mov
lock
cdq
jmp
imul
mov
add
int3
shl
pushf
sbb
jmp
adc
ss
xchg
inc
sbb
loopne
test
daa
add
sub
cmp
div
retf
sbb
fucom
inc
sub
inc
mov
or
add
jl
rcr
rol
not
jns
loopne
adc
jg
push
jb
shl
stc
mov
cmps
pop
cmp
loopne
mov
pop
push
inc
adc
add
and
add
xchg
xor
xchg
inc
stos
loop
add
mov
or
mov
call
cmp
cmp
js
outs
scas
nop
and
sti
push
sub
popa
push
in
jne
push
sbb
arpl
add
add
adc
sbb
loope
(bad)
xchg
lock
mov
aaa
xor
pushf
and
add
fwait
dec
sub
or
sub
retf
or
fnstcw
js
xor
mov
ret
(bad)
fistp
push
add
fdivr
pop
dec
adc
and
pop
jns
aad
push
cmp
sahf
pop
and
pop
push
mov
add
add
inc
or
push
and
push
push
xchg
jne
iret
div
xor
test
popa
adc
cmp
(bad)
sub
pop
and
xor
adc
or
ds
into
add
or
popa
dec
hlt
jmp
and
adc
and
jmp
adc
pop
imul
fiadd
lock
dec
inc
sbb
cmp
add
imul
sahf
test
std
dec
in
ins
ror
mov
jmp
push
mov
in
mov
arpl
push
test
xchg
(bad)
inc
push
sub
fst
shl
aas
and
xchg
adc
dec
inc
adc
mov
(bad)
sbb
cmp
aam
push
(bad)
sar
push
mov
and
fnstcw
(bad)
daa
add
jnp
sbb
push
xchg
dec
jbe
adc
add
pusha
bswap
pop
add
add
add
adc
pushf
nop
adc
add
pop
and
in
or
or
pop
in
or
or
or
adc
or
or
mov
pop
or
inc
inc
dec
(bad)
(bad)
dec
add
retf
pop
mov
js
pop
dec
daa
jle
pushf
mov
or
push
(bad)
push
sbb
out
(bad)
mov
je
sub
es
or
add
dec
pop
ins
jnp
test
jg
mov
sbb
test
shr
push
push
mov
jae
loopne
push
out
dec
shl
inc
push
out
(bad)
into
push
mov
stos
xor
pop
(bad)
jae
(bad)
out
mov
inc
sub
call
xor
jg
pop
mov
pop
and
call
(bad)
in
call
sbb
daa
and
inc
pop
xchg
add
or
call
mov
jb
push
test
sub
fild
rcr
add
xor
and
test
mov
cmp
call
rcl
add
cmp
inc
mov
mov
cs
xor
jb
cmp
xor
mov
sbb
cmp
mov
ja
xchg
jle
sub
sbb
test
sub
pushf
mov
mov
add
adc
test
add
jae
and
xchg
dec
add
mov
push
fdivr
xchg
popf
fcom
out
jge
adc
inc
add
fadd
dec
add
aam
and
and
call
xor
push
and
sub
int
popf
jp
aam
or
call
inc
cld
add
xchg
sbb
loop
sub
push
hlt
dec
sub
setbe
and
sub
push
es
gs
inc
push
pop
or
out
mov
bound
test
jmp
aam
sub
push
adc
dec
add
and
pop
push
sub
push
(bad)
jo
xor
inc
add
(bad)
mov
repz
(bad)
cmp
sub
outs
dec
call
mov
jmp
repnz
add
mov
lds
xchg
jp
std
push
inc
add
mov
push
xor
push
or
js
and
cdq
cmp
add
and
inc
mov
ret
adc
aaa
push
out
and
push
fidiv
in
push
std
lods
add
add
add
(bad)
pop
addr16
icebp
cli
cmp
and
sub
jmp
test
inc
pop
ins
jge
sub
call
sbb
fsubrp
and
stos
fsub
adc
pop
ss
(bad)
std
push
pusha
push
or
rcl
jmp
fmul
dec
pop
pop
rcl
mov
inc
ret
jnp
rol
mov
nop
or
lock
xchg
inc
add
fmul
pusha
jecxz
or
xchg
popf
sub
mov
dec
pop
xchg
into
outs
or
sbb
ror
call
ds
fcom
dec
dec
cmp
cdq
push
xor
and
cmp
popf
scas
sbb
cld
pop
or
test
dec
leave
push
ins
ror
imul
jge
inc
and
lar
jmp
mov
int
dec
shr
imul
test
push
pop
push
pop
jle
test
dec
jmp
or
add
mov
test
push
call
lods
jbe
xchg
pop
xchg
int3
add
(bad)
cmp
or
add
dec
int3
jno
add
scas
popf
inc
stos
cmps
push
mov
push
jae
jmp
add
add
jbe
nop
cmp
call
xor
rol
xor
jmp
(bad)
aad
cmp
sub
bound
push
sar
jmp
sbb
(bad)
add
test
pop
adc
adc
shl
fwait
push
mov
jo
jp
add
popf
push
adc
dec
mov
push
ret
jbe
pop
push
and
inc
cwde
adc
push
call
stos
push
inc
xor
push
inc
push
lahf
popf
shl
sbb
fs
add
xor
cmp
and
(bad)
cmc
and
add
mov
icebp
fcomp
cmp
inc
mov
ins
sahf
jne
aam
push
push
dec
push
jmp
in
je
data16
push
shl
mov
fistp
pop
mov
sub
loopne
sub
scas
out
shl
movs
xchg
mov
dec
add
enter
leave
xor
xchg
into
mov
xchg
fild
pop
sub
rcr
add
fs
jbe
sti
out
fcmovnb
cmps
push
ss
mov
and
adc
xor
inc
mov
mov
sahf
sub
pop
int
xchg
add
js
add
fsub
push
fwait
or
adc
mov
outs
pop
mov
sbb
mov
loop
movs
aaa
add
or
xchg
or
(bad)
xchg
int
int
imul
dec
loopne
fistp
clc
dec
pop
mov
or
test
cdq
xor
and
pop
and
scas
nop
cmp
test
fisubr
add
test
mov
js
gs
add
push
xor
dec
sub
add
fadd
sahf
add
xchg
jp
loopne
jb
sub
ret
movs
test
movs
hlt
add
aas
and
pop
daa
pusha
leave
xchg
mov
adc
fcomip
mov
je
and
dec
pop
test
sub
in
loope
cwde
xchg
cmp
push
adc
pop
call
sub
jo
xor
adc
loope
push
and
jmp
nop
test
cdq
test
add
pop
adc
mov
add
sbb
mov
out
call
shl
in
enter
repnz
mov
sub
push
popa
ret
stc
and
jne
adc
add
mov
cmps
or
or
mov
add
or
shl
push
cmp
or
gs
mov
test
test
adc
push
pop
mov
and
xor
in
fstp
cmp
pusha
imul
adc
add
mov
mov
adc
out
inc
mov
sbb
js
retf
cld
xor
and
sub
bnd
(bad)
jb
add
and
and
add
push
add
mov
jbe
sbb
sbb
push
out
pop
jl
add
mov
cmp
fistp
or
sar
enter
cmp
in
test
(bad)
std
(bad)
adc
dec
jnp
icebp
add
loop
dec
(bad)
test
dec
dec
inc
loope
clc
lock
cmp
call
mov
sbb
push
shl
cmp
ret
add
pop
and
cmp
std
adc
add
cmp
xor
ror
icebp
adc
or
xchg
pop
sub
and
cmps
call
mov
aas
jecxz
or
sub
xchg
imul
xchg
sub
data16
aaa
xor
xor
je
mov
in
jo
stos
jmp
into
cs
data16
aas
or
rcl
int
add
sub
inc
or
cmp
and
dec
inc
adc
jo
add
call
inc
sbb
aaa
test
mov
xor
icebp
mov
dec
int
mov
push
push
(bad)
cmc
add
loopne
ja
fdivp
ins
mov
call
aas
dec
cmp
shl
ret
ds
mov
mov
loopne
mov
fistp
xchg
push
mov
jmp
dec
add
test
add
xor
dec
xchg
ja
push
and
dec
daa
popf
add
imul
nop
add
fiadd
pop
(bad)
inc
xor
mov
lock
arpl
or
sub
cli
push
or
test
adc
push
and
loopne
push
cs
or
imul
xor
clc
ret
shl
push
dec
and
push
shl
mov
or
sub
and
add
jg
or
add
jo
shl
aam
jecxz
xchg
mov
xor
add
clc
add
jl
call
push
call
lods
or
(bad)
or
and
fwait
aas
das
xchg
and
pop
aaa
sbb
sbb
js
pop
cmp
jmp
test
mov
dec
xchg
jge
pop
push
jmp
push
push
mov
test
ret
xchg
mov
add
popf
push
bound
iret
mov
je
jmp
jmp
inc
nop
xchg
xor
call
sub
lock
adc
jmp
lds
jle
xchg
add
stc
mov
xor
dec
push
or
mov
lea
xor
xchg
add
mov
push
call
in
xor
fwait
adc
sub
pop
and
add
pusha
sbb
test
adc
adc
jl
mov
es
(bad)
shl
sbb
std
scas
add
jmp
out
xor
sbb
pusha
or
mov
add
fisubr
mov
outs
loop
cmp
pop
inc
push
cwde
dec
mov
sub
hlt
fwait
dec
push
sbb
ror
pop
(bad)
frstor
repz
cmp
in
xchg
xchg
test
test
in
das
les
add
pop
jl
or
test
movs
xor
or
mov
(bad)
mov
jmp
mov
popf
cmp
xchg
add
fs
pop
ja
pop
add
callw
push
imul
or
icebp
adc
rcl
adc
je
or
mov
stos
mov
popa
xor
pop
cli
movzx
xor
mov
xor
mov
aas
and
mov
movs
mov
rol
pusha
mov
jmp
add
mov
mov
loop
outs
mov
movs
out
dec
or
sub
pop
outs
sahf
pop
add
add
mov
mov
loop
lea
hlt
mov
mov
or
fidiv
movs
push
mov
shr
cmp
push
xor
inc
call
xchg
add
test
pop
dec
je
add
add
push
clc
cmp
adc
or
mov
cmp
sub
cmp
push
push
and
add
sub
mov
add
jge
stos
adc
imul
repz
sub
xchg
jne
rol
add
ret
or
adc
xor
dec
(bad)
push
xchg
fstp
xor
cmps
xor
aaa
adc
push
adc
shl
and
mov
push
push
add
adc
movq
or
mov
add
das
nop
and
shr
nop
cmp
and
mov
lods
nop
daa
push
jmp
jmp
push
div
lods
pop
data16
popf
push
mov
cmp
aaa
sub
or
rol
nop
mov
cs
je
push
adc
or
xchg
sub
cmp
or
jle
mov
adc
fist
add
inc
arpl
jae
inc
push
fbstp
xchg
shl
(bad)
(bad)
int
enter
(bad)
pop
or
jl
jmp
push
cld
mov
popa
mov
test
cs
add
lock
test
loope
gs
repz
lock
inc
sbb
push
aaa
lds
loop
adc
cwde
cmc
in
and
daa
jg
mov
pop
outs
daa
jg
push
fild
mov
ds
inc
cmp
test
and
sub
adc
adc
add
mov
xchg
stos
add
dec
or
bound
pop
fdivr
push
cmp
sbb
mov
aam
adc
sub
add
dec
dec
jae
out
push
ret
imul
mov
dec
nop
dec
or
lahf
adc
jg
ja
add
in
ret
mov
ja
cmp
mov
(bad)
ds
dec
scas
add
jmp
add
dec
movs
repnz
je
dec
dec
fidivr
icebp
adc
mov
sub
shl
cmp
mov
push
mov
adc
add
mov
xchg
xchg
jne
or
cmp
repz
hlt
fisttp
out
push
mov
lahf
sub
pop
pop
outs
dec
loope
add
jmp
inc
loopne
call
adc
push
cmp
popf
jmp
out
pop
jmp
pop
fs
push
scas
nop
and
push
adc
jb
pop
js
jo
xor
add
mov
ret
mov
and
ins
add
daa
lahf
pusha
push
add
pop
add
(bad)
rcl
out
mov
jmp
inc
and
(bad)
das
lea
add
adc
stc
inc
adc
mov
in
pop
push
mov
push
aam
mov
mov
dec
xor
and
bound
inc
lahf
jp
jno
mov
dec
bound
je
pop
bound
and
jo
inc
ins
jmp
dec
or
inc
xchg
gs
cmp
and
ins
mov
sub
and
adc
mov
pop
hlt
shl
lock
sbb
shr
icebp
add
inc
xor
enter
je
arpl
push
sub
pcmpeqw
mov
jmp
mov
and
stos
test
inc
push
pop
movs
mov
sub
test
test
dec
call
mov
jge
lahf
aas
sbb
add
xor
ret
push
repnz
push
mov
loope
push
xchg
ret
xchg
xor
inc
lods
mov
cdq
pop
imul
xchg
shl
push
jnp
cmps
pop
js
imul
mov
push
sbb
dec
push
bound
xchg
xchg
sbb
inc
ins
jg
aaa
inc
cmp
mov
fst
jg
inc
push
push
aam
into
mov
sbb
fldcw
rcr
xor
fsubr
ficom
pushf
add
mov
push
cmp
cmp
dec
sbb
inc
hlt
jns
sbb
jg
mov
add
dec
jmp
inc
outs
add
xor
pop
ins
fsub
stos
shr
call
dec
fadd
enter
stos
cmp
ja
dec
mov
ret
push
xchg
pop
shr
push
shl
add
loopne
std
fisub
hlt
sbb
xor
push
sub
shl
cmp
int3
sub
mov
call
sbb
or
xor
dec
push
push
lahf
out
cs
mov
(bad)
je
ud1
aad
outs
dec
dec
adc
jo
pop
and
adc
imul
sbb
sbb
xor
rol
sbb
and
cmp
or
push
xchg
cdq
stos
test
retf
fwait
rol
(bad)
fild
nop
imul
mov
sub
push
mov
test
test
xchg
push
cmp
push
popf
or
div
fmul
dec
jle
retf
call
and
cld
popa
jecxz
dec
add
inc
mov
pushf
add
or
nop
push
les
push
pop
loope
dec
add
push
xchg
sub
xor
sbb
inc
movs
push
test
fs
sub
jno
jns
loopne
pop
dec
jo
push
fs
push
jl
out
jbe
or
sbb
mov
iret
jnp
jbe
mov
cmp
retf
(bad)
fdivr
jns
out
hlt
cli
add
arpl
mov
pop
add
adc
inc
outs
push
daa
add
icebp
daa
adc
nop
test
pop
lock
sbb
retf
jo
sbb
movs
ret
adc
int
sbb
and
xchg
add
sbb
and
leave
leave
jg
test
mov
movs
jbe
in
xchg
mov
sbb
sub
add
dec
mov
mov
and
stos
xor
sub
add
daa
dec
outs
rcpps
popa
imul
rol
or
add
cmps
mov
and
jg
pop
inc
aam
loopne
pushf
pusha
add
mov
and
cmps
call
sbb
sbb
into
add
xchg
and
std
sbb
or
push
mov
xor
adc
add
dec
cmps
mov
xor
dec
sbb
enter
leave
add
enter
pop
mov
loop
or
push
xor
inc
xchg
add
xor
sar
outs
mov
jmp
dec
and
and
push
(bad)
jge
and
adc
ret
sub
or
imul
mov
test
mov
stos
cli
aad
imul
jle
pop
push
xchg
sbb
data16
push
loop
add
out
or
lds
ds
scas
jbe
pop
push
cmp
mov
and
dec
test
adc
mov
add
inc
rcr
or
aas
nop
dec
push
imul
push
adc
mov
addr16
mov
fmul
mov
mov
leave
mov
add
jp
add
add
aaa
scas
jle
inc
sbb
pushf
add
fadd
add
je
and
and
ret
inc
xchg
outs
push
mov
mov
das
push
ficom
ja
jle
ja
push
dec
inc
nop
das
jmp
dec
add
hlt
xchg
inc
fiadd
movs
cmps
test
pop
dec
imul
xchg
push
(bad)
in
push
lods
pop
push
call
pop
inc
xor
xchg
push
cwde
in
or
loope
mov
xchg
pop
cmp
(bad)
xchg
and
test
xor
cmp
and
pop
xor
(bad)
mov
inc
pop
adc
sub
sub
or
mov
jae
mov
retf
retf
cmp
xchg
adc
xchg
jge
mov
mov
mov
in
add
dec
stos
mov
pusha
mov
je
push
movs
sbb
push
jae
xor
and
jb
sub
mov
sub
push
push
ins
pop
ret
adc
jb
push
rcl
dec
dec
sbb
mov
pop
mov
push
sub
push
bound
xor
dec
add
imul
or
loope
ret
(bad)
aas
int3
cmp
pop
inc
jnp
push
or
pop
ret
adc
cmp
retf
sub
push
jp
add
mov
pop
dec
shl
adc
pop
jge
mov
ror
pusha
test
inc
call
push
mov
xchg
shr
fwait
add
pop
loope
mov
xor
mov
add
add
shl
and
push
add
xor
ins
fwait
sbb
cld
inc
int3
and
adc
dec
enter
sub
inc
mov
inc
sti
jns
and
shr
cmp
push
add
cmc
push
add
jge
jns
fisubr
popa
pop
jg
(bad)
bound
cmp
xchg
push
mov
inc
mov
fidiv
movs
inc
push
add
jae
and
mov
das
sub
jb
sbb
add
loopne
adc
js
and
push
add
dec
shl
(bad)
cld
dec
push
xor
xor
xor
xchg
rcr
cmp
pop
jmp
cmp
inc
sbb
das
pop
push
add
int
or
cmp
cli
ja
fist
pop
fwait
add
sbb
dec
mov
adc
mov
sbb
mov
or
dec
lahf
add
iret
cmp
(bad)
aas
adc
push
sub
xor
add
ja
push
enter
fnsave
sbb
jnp
add
and
sub
sbb
pop
(bad)
aaa
imul
rcr
shl
adc
es
(bad)
push
arpl
add
dec
or
push
push
push
cmp
add
mov
add
mov
or
repnz
ja
add
add
adc
add
scas
(bad)
test
or
jmp
cmp
test
inc
ds
or
push
mov
or
lods
add
add
sub
ins
scas
add
jne
pop
or
popa
sub
es
add
popa
mov
ins
cs
and
loop
mov
sub
sbb
test
ror
repnz
push
mov
push
bnd
enter
adc
xor
push
push
jmp
je
dec
sbb
jbe
lods
push
mov
pop
call
or
mov
mov
xor
xor
or
dec
xor
or
stos
sub
adc
out
xor
and
pop
daa
push
cmp
das
icebp
cwde
jb
sahf
not
pusha
xchg
sahf
lahf
jecxz
stos
mov
sbb
and
ror
xor
pop
mov
xor
sub
adc
movs
xchg
xchg
jl
mov
dec
mov
mov
movs
mov
sbb
add
in
aam
push
mov
test
pop
aaa
jp
fnstenv
mov
sub
je
clc
and
nop
out
and
mov
sub
pop
jmp
push
dec
fsub
or
fdiv
mov
loope
mov
daa
mov
(bad)
(bad)
mov
pop
sub
add
test
push
mov
aas
dec
adc
sbb
add
call
xchg
dec
pop
or
xchg
pop
shl
mov
pop
je
pop
pop
std
fsub
outs
pusha
inc
push
or
cmc
dec
leave
jp
sub
jmp
je
out
push
aas
sub
xchg
add
mov
ret
ret
mov
(bad)
loop
imul
fimul
push
ret
xor
fiadd
adc
not
addr16
sub
ins
gs
or
xchg
adc
into
push
jl
dec
mov
neg
lahf
lods
push
xchg
ret
jb
test
cmps
xchg
cmp
and
xor
mov
or
mov
lods
xor
mov
mov
repnz
cwde
nop
sar
fcomp
mov
fisub
retf
pop
out
js
mov
pop
(bad)
movs
xchg
loopne
fbld
mov
pop
adc
pusha
add
add
nop
arpl
adc
pop
fs
push
cmp
or
in
dec
push
cmp
or
pop
xchg
push
adc
inc
bound
aas
sub
enter
mov
rcl
cdq
add
sbb
xchg
inc
jo
or
femms
xchg
or
adc
adc
mov
lods
sub
adc
push
adc
and
push
sbb
push
cdq
popa
nop
sbb
mov
push
ret
fs
inc
sbb
test
ja
push
mov
ss
xchg
adc
(bad)
mov
std
mov
fstp
adc
out
nop
test
sub
pop
fcomip
adc
mov
push
outs
mov
arpl
or
mov
gs
or
cdq
shl
repz
xchg
or
add
iret
add
sub
cs
mov
iret
xor
adc
ret
sub
or
xlat
pushf
retf
lock
push
pop
mov
adc
jo
movs
push
mov
adc
(bad)
mov
push
inc
sub
jb
push
stc
int3
mov
pop
ss
jno
out
cmp
cmc
lods
aaa
inc
push
loopne
movs
ds
sub
neg
mov
fild
xor
adc
inc
xor
or
adc
(bad)
push
stos
movs
mov
push
into
imul
push
sbb
adc
mov
add
mov
pop
popa
in
pop
sbb
enter
sub
pop
or
cmp
ins
cmp
or
add
cmp
into
adc
(bad)
pop
shl
aad
out
adc
xchg
jmp
mov
mov
out
inc
xor
adc
out
in
shl
and
popa
mov
loopne
loopne
(bad)
or
stos
inc
sbb
add
or
xor
pop
mov
xor
dec
es
lea
dec
mov
cmp
dec
pushf
jecxz
lods
xchg
(bad)
xlat
pop
add
push
dec
test
retf
pop
inc
add
fld
sub
sbb
mov
test
bnd
fstp
sbb
call
ins
sub
cmp
cmp
in
xchg
jae
sti
call
add
pushf
ins
out
repz
cmp
pop
sbb
add
mov
dec
sub
mov
sbb
add
rol
sbb
ss
shl
add
sbb
jg
mov
call
ja
sahf
mov
jecxz
jl
je
jmp
jno
push
pop
mov
push
aam
push
rcl
adc
icebp
mov
dec
cld
mov
mov
fsub
mov
test
push
call
push
call
or
xor
pop
cli
js
ins
clc
mov
add
js
ret
es
not
addr16
xlat
xor
out
pop
inc
xchg
push
push
sub
call
push
add
ins
adc
mov
jl
or
xchg
push
mov
ja
push
call
mov
(bad)
aad
retf
jno
mov
clc
mov
mov
jo
leave
(bad)
or
sub
jmp
movs
xchg
aad
pop
mov
dec
les
adc
fs
mov
inc
repz
cmp
fimul
mov
inc
and
pushf
mov
xchg
add
xor
ret
adc
jbe
ret
nop
adc
call
or
clc
mov
aaa
jmp
inc
test
fs
mov
rcl
rcr
ror
cmp
add
pop
or
dec
clc
adc
push
pop
sbb
shl
rol
and
(bad)
mov
sbb
mov
pop
mov
adc
sbb
cmp
xor
inc
sub
mov
pop
xchg
sbb
loopne
mov
loopne
ins
test
jl
mov
sub
or
(bad)
int
adc
mov
pshufw
sti
stos
push
rol
stos
jae
test
lea
int3
mov
rcr
jmp
jbe
sub
add
jle
jmp
xor
sbb
(bad)
sti
ror
dec
cmp
js
sar
test
ins
(bad)
mov
inc
and
and
test
call
ror
shl
ret
jl
xor
or
shl
xor
add
jne
pop
or
and
sub
(bad)
(bad)
cmps
xchg
test
xchg
xchg
rcr
adc
add
xchg
add
and
or
pop
fsubr
or
jb
cdq
out
(bad)
push
cmp
xchg
smsw
iret
ret
cmp
cld
js
mov
push
test
mov
lea
dec
in
enter
xor
scas
scas
into
xchg
rol
mov
mov
sbb
inc
pusha
xchg
movs
cmp
ja
add
or
add
pmulhuw
(bad)
or
pop
pop
imul
nop
int
cmp
inc
adc
add
mov
add
pop
inc
or
pop
push
imul
in
push
sub
mov
gs
jl
or
jnp
pusha
std
sub
test
jbe
cs
retf
gs
pop
mov
js
ret
js
add
push
lahf
xor
inc
ds
and
push
add
cwde
push
add
add
fs
fwait
cmp
pop
push
das
pusha
and
ja
and
mov
(bad)
popa
mov
sub
je
mul
add
push
call
loopne
aas
xor
mov
dec
outs
mov
add
shr
and
dec
mov
sub
scas
cld
dec
lea
push
call
xchg
mov
xchg
lods
push
fs
lahf
xchg
add
and
lahf
push
mov
jno
xchg
add
lea
ror
pop
mov
xchg
xchg
fnsave
and
adc
sbb
push
pop
jp
jne
add
sar
and
pop
lock
data16
sbb
aam
pop
ret
in
or
inc
add
mov
mov
or
xor
xor
add
shl
in
mov
xchg
dec
mov
cdq
call
mov
cli
pop
jg
mov
enter
mov
aaa
mov
mov
mov
test
sar
aaa
adc
hlt
push
pop
pop
jle
jl
and
(bad)
adc
fldcw
xchg
dec
pop
add
and
add
adc
neg
or
cmp
inc
(bad)
call
mov
(bad)
es
pop
ja
sub
and
cmc
call
(bad)
mov
movs
pop
push
jno
inc
pop
es
mov
sub
mov
add
cmp
mov
das
pop
add
int
push
(bad)
js
adc
add
mov
movs
int
push
add
and
pop
mov
or
mov
mov
lahf
xor
aam
add
repnz
mov
fnstcw
fimul
ds
ins
or
ins
mov
jmp
jmp
pop
or
push
pop
pop
cmp
gs
enter
mov
lock
or
cmp
cdq
mov
fadd
lock
mov
(bad)
pop
stc
jnp
call
xor
sar
add
pop
int3
nop
hlt
mov
dec
ret
retf
sub
add
mov
rol
(bad)
cmp
jne
ret
jle
jne
aas
xchg
push
fsub
repz
jp
xchg
or
mov
xchg
cld
sbb
in
scas
call
scas
jle
sub
jne
cmp
int
fsubr
push
push
push
or
sbb
mov
dec
mov
mov
imul
popa
(bad)
mov
into
pause
sub
push
sbb
movs
mov
pusha
adc
push
pop
cli
icebp
jge
shl
or
dec
xor
mov
push
mov
shl
cmp
lds
jmp
jg
push
pop
inc
jmp
sbb
(bad)
ja
mov
sar
mov
push
cmp
add
sbb
dec
jmp
outs
in
es
js
cmp
adc
loopne
cmc
(bad)
sub
and
xor
loope
inc
jno
les
cli
jmp
ror
push
mov
ror
add
popa
or
jle
into
sub
lods
cmp
jge
test
xor
fwait
out
push
sub
stc
sar
add
jo
ins
pusha
sub
sahf
xchg
sub
mov
or
or
jmp
pop
push
sbb
sub
jno
push
jne
jo
xchg
xchg
das
xchg
jmp
jae
and
xchg
xchg
add
repnz
xchg
pop
ror
xchg
adc
stc
(bad)
in
movs
push
std
mov
and
inc
in
iret
dec
and
rol
inc
mov
call
icebp
inc
dec
hlt
gs
and
call
xchg
xor
js
mov
pop
sbb
cli
shr
add
fadd
and
add
(bad)
and
xchg
mov
add
stc
cmps
dec
mov
lahf
jle
fistp
add
adc
cmps
sub
(bad)
push
(bad)
fsubr
inc
push
push
sub
xlat
jmp
push
push
test
add
add
test
jmp
fidivr
das
cmp
ret
retf
nop
mov
add
pop
mov
ret
cmp
push
cmp
and
or
(bad)
pop
movs
aas
sahf
sti
mov
sbb
out
ins
dec
xchg
add
je
dec
loopne
or
push
cmps
sub
jne
jmp
popa
movs
xor
and
lea
shl
jns
adc
push
lds
xor
sbb
mov
std
js
sbb
adc
push
arpl
add
xor
(bad)
ficomp
and
sub
fadd
xchg
cmps
fild
std
or
and
mov
mov
pop
stc
jp
fldcw
inc
jo
and
sub
out
test
aaa
jecxz
(bad)
adc
push
call
inc
or
add
or
stos
inc
sub
test
and
push
mov
std
pop
imul
xor
cmp
and
shl
push
js
dec
inc
fcom
jae
add
mov
push
data16
(bad)
xor
mov
into
mov
mov
jbe
add
cmp
or
aam
push
ss
or
movs
ins
movs
fwait
push
pop
and
jbe
loop
dec
sbb
sbb
rcr
movs
cmp
xor
and
bsf
movs
or
sub
stos
adc
push
mov
leave
sub
mov
push
mov
sub
mov
pop
call
test
(bad)
inc
or
push
inc
popf
dec
push
mov
jnp
jo
(bad)
mov
enter
mov
xchg
mov
pop
mov
gs
nop
mov
push
sbb
inc
jle
push
call
push
call
call
and
adc
push
rcl
push
xor
dec
sub
stos
call
pop
dec
jp
mov
jb
out
rcr
jle
add
mov
push
inc
or
add
or
adc
repnz
add
xor
fmul
or
xor
add
cmp
pop
jg
and
mov
fistp
pop
or
xchg
mov
imul
push
les
fadd
loopne
mov
jnp
push
push
clc
add
sti
cmp
cld
jnp
push
std
push
dec
arpl
jne
or
add
and
or
push
cmp
rol
and
sbb
fcmovb
mov
xchg
pop
xchg
std
push
push
nop
retf
icebp
cdq
movs
mov
ja
sub
leave
push
in
sbb
cmp
aam
and
and
cwde
je
push
xchg
(bad)
ss
pop
xchg
cmp
add
cmps
cld
les
nop
adc
xchg
and
popf
xor
fs
mov
add
stc
add
inc
movs
sahf
sub
xchg
mov
mov
data16
ret
sub
aad
add
xor
push
sbb
cmp
add
sbb
pop
jmp
(bad)
std
mov
ins
das
sub
nop
mov
push
add
jmp
xchg
xor
jmp
sbb
or
fild
mov
and
xor
sub
pop
lods
(bad)
inc
ret
aam
cmp
pop
faddp
imul
add
sar
add
sbb
outs
mov
push
push
push
aaa
push
pop
mov
cmp
imul
push
ret
xchg
adc
cdq
(bad)
mov
pop
out
popa
ror
mov
pop
enter
popa
jae
and
sbb
pop
ja
jl
mov
leave
div
push
pop
in
mov
sub
enter
push
push
mov
push
loop
sub
push
bound
js
cmps
test
or
gs
cmp
or
adc
mul
pop
dec
jne
loope
addr16
push
jne
push
xchg
jg
or
push
mov
sbb
xor
cdq
jno
clc
call
mov
sbb
pop
gs
push
xchg
sbb
loope
or
xor
pop
or
retf
icebp
or
push
inc
call
add
in
dec
push
sub
push
jmp
push
adc
ins
inc
mov
sbb
adc
jo
adc
lock
and
mov
and
popa
and
ss
adc
(bad)
or
ins
add
or
pop
dec
es
ror
das
and
jbe
int
cmp
pushf
ja
imul
movs
cmp
add
enter
ins
sub
lea
xor
sub
xchg
push
ds
inc
das
sub
mov
sub
inc
iret
mov
cdq
test
cmp
xchg
jo
inc
inc
jecxz
sub
ins
loop
sub
dec
add
lods
sahf
rcr
dec
mov
rcr
xor
mov
add
pop
mov
adc
daa
jne
pop
jmp
dec
in
xchg
mov
or
jmp
daa
inc
mov
add
mov
push
xchg
fadd
or
repnz
sub
bnd
or
imul
push
add
add
fcom
mov
pop
push
call
mov
dec
hlt
in
push
push
mov
popa
lods
arpl
test
pop
icebp
daa
sub
(bad)
cdq
xchg
(bad)
movs
arpl
adc
cmp
test
sbb
cmp
clc
dec
inc
ins
push
clc
push
push
ss
test
add
push
test
adc
and
out
arpl
jle
add
test
sbb
push
or
dec
xchg
jmp
mov
pop
or
add
push
push
dec
mov
jmp
adc
mov
imul
cmc
sbb
sub
cmc
xchg
dec
or
mov
es
inc
adc
loopne
sub
fs
(bad)
xor
ret
mov
shl
mov
dec
repz
je
push
adc
out
lmsw
mov
push
dec
data16
comiss
push
test
xchg
add
imul
cmp
scas
pusha
or
or
or
mov
mov
jp
std
adc
ret
inc
lahf
xchg
addr16
daa
inc
push
inc
sti
add
retf
inc
lock
fcomip
mov
sbb
push
sub
xor
dec
out
cld
aas
add
xor
mov
mov
call
mov
dec
sbb
xchg
jle
stos
add
fsqrt
adc
std
sti
cli
ret
mov
mov
aaa
dec
push
xor
call
pop
cwde
xor
and
sbb
pushf
out
xchg
and
(bad)
fmul
leave
fwait
dec
jbe
sar
icebp
mov
jmp
(bad)
lahf
and
je
dec
jmp
push
inc
mov
pusha
push
or
push
xchg
popf
shl
cmp
xchg
imul
mov
push
pop
(bad)
cli
fucomp
pop
sahf
and
das
js
ins
push
push
mov
dec
and
push
add
sub
add
xor
xchg
call
movups
inc
sub
loop
and
loopne
(bad)
aam
sbb
adc
xchg
rol
pop
cli
ret
es
and
push
or
pop
js
xlat
add
pop
mov
pop
and
fiadd
pushf
cmp
dec
fstp
daa
sub
mov
sub
(bad)
mov
or
xchg
(bad)
inc
jle
inc
push
cwde
xor
mul
xor
adc
(bad)
sub
cld
sub
sbb
add
mov
adc
arpl
xor
mov
clc
sub
test
cmp
and
add
mov
add
mov
cli
sti
push
add
imul
and
das
retf
pop
gs
push
adc
lods
lods
fwait
inc
sar
add
add
inc
outs
xor
dec
dec
mov
mov
or
mov
and
loope
inc
add
rcl
imul
ins
cwde
pop
and
or
cmp
aas
push
int3
xchg
cdq
inc
and
xchg
shl
and
and
cmps
jmp
(bad)
out
out
lea
dec
sub
int
es
dec
sahf
aam
push
je
cmps
xor
sub
fisttp
mov
mov
imul
inc
lods
dec
ror
clc
and
sbb
pop
sbb
add
outs
jmp
adc
(bad)
ja
push
push
pop
add
and
cmp
clc
cdq
push
sub
aam
mov
inc
int3
xor
sub
push
pop
add
retf
cmp
push
ins
or
ins
or
pop
mov
clc
mov
out
rcl
in
adc
xor
inc
pop
lods
pop
je
test
das
mov
dec
or
imul
ins
cmps
xchg
loop
mov
adc
push
inc
push
dec
push
adc
shl
test
push
add
imul
movlps
xchg
push
add
movs
rcr
sbb
jg
pop
mov
pop
outs
sbb
xchg
and
add
daa
mov
iret
mov
sub
xchg
lods
add
adc
xor
std
je
das
cmp
rol
cmp
adc
int
sbb
push
cmp
inc
sub
jecxz
or
push
dec
retf
imul
dec
adc
bound
pop
add
cmps
add
pop
inc
imul
or
pop
push
add
or
push
(bad)
mov
fidiv
push
dec
jbe
adc
push
jo
popa
(bad)
or
push
sahf
dec
out
cmp
add
stc
adc
pop
push
pop
cmp
shl
pusha
xor
daa
xchg
xchg
cmps
mov
je
pop
or
or
sub
inc
inc
mov
aas
jmp
retf
inc
out
cld
cmps
xor
jmp
adc
test
dec
pop
add
gs
or
dec
sub
xor
xchg
shr
push
xchg
movs
sti
test
(bad)
cld
pop
add
stos
pusha
jge
cld
(bad)
imul
inc
push
call
jbe
lock
sbb
xor
add
ds
ins
rcr
into
nop
and
cmp
sub
sar
call
test
or
or
push
hlt
dec
jmp
mov
mov
inc
mov
jle
test
and
mov
mov
and
add
dec
sbb
inc
lea
outs
gs
mov
sbb
and
add
xchg
ror
sub
and
outs
dec
pop
or
xchg
dec
clc
pusha
adc
loope
cwde
push
ror
inc
les
dec
ret
fld
pop
or
fisttp
or
nop
jg
adc
mov
out
stos
bound
loopne
xchg
(bad)
fnstcw
cmp
cmp
into
cmovle
push
call
xor
pop
mov
inc
ret
cld
xchg
mov
mov
sbb
jl
dec
outs
jge
in
repnz
push
dec
push
jge
fucompp
ss
in
jge
dec
das
jge
mov
pop
dec
push
dec
jb
push
repnz
int3
test
pop
(bad)
test
or
js
mov
adc
lock
iret
fadd
sub
ins
and
push
cwde
fiadd
test
bound
dec
pop
lahf
outs
pop
loop
xchg
mov
mov
fld
(bad)
xchg
repz
inc
push
push
sub
fldenv
add
(bad)
ds
push
call
dec
movs
dec
movhlps
sub
pusha
lock
mov
sbb
jns
sbb
test
pop
sbb
mov
sub
add
and
inc
cmp
xchg
or
pop
aaa
mov
or
or
adc
dec
jmp
rcr
jle
test
add
sub
mov
or
add
or
push
movs
and
pop
enter
movs
and
jo
xchg
inc
pushf
sub
test
pop
inc
sub
dec
and
add
xor
xchg
fimul
mov
rol
jg
mov
mov
adc
shl
jmp
scas
jne
sub
lods
xor
cmp
cmp
push
dec
mov
xor
cmp
add
xor
xor
sahf
inc
or
mov
pop
mov
push
inc
dec
dec
pop
ds
and
push
movs
inc
mov
sub
sbb
sbb
cmp
xor
adc
aaa
add
lods
xor
aas
mov
xor
clc
mov
xor
ss
dec
xor
pusha
adc
push
inc
mov
or
mov
and
(bad)
out
inc
push
or
sub
cmps
pop
les
jmp
(bad)
mov
dec
call
idiv
movs
aas
cmp
mov
call
dec
fldenv
pop
mov
add
(bad)
call
pop
sub
dec
les
adc
enter
pop
or
ja
call
pop
add
xor
xchg
mov
ret
push
push
jne
or
jmp
adc
add
loop
mov
in
adc
add
popa
add
mov
jle
stos
mov
imul
jl
sub
jl
jo
inc
jns
adc
inc
push
adc
lods
push
ins
and
cmp
js
cwde
cmp
or
mov
xchg
pop
pop
and
icebp
dec
add
pop
pop
mov
das
push
stos
push
js
cwde
jg
push
ins
fcomi
jg
pop
mov
jo
lods
fnstenv
or
rol
or
push
jle
pop
mov
add
adc
mov
mov
cmp
cmp
and
sbb
repz
mov
push
stc
mov
je
jg
pop
and
call
call
xchg
xchg
adc
movs
sub
push
inc
out
stos
and
mov
(bad)
add
pop
retf
push
cmp
ret
xchg
inc
in
sbb
mov
loop
or
lock
xchg
shl
cld
sub
mov
inc
add
push
cmp
je
call
loop
enter
or
and
push
or
enter
dec
or
shl
add
or
push
pop
jmp
inc
mov
fild
out
jmp
inc
bound
sar
stc
pop
jmp
dec
enter
mul
xor
and
cmp
jl
shl
loope
jge
pusha
sbb
(bad)
or
xchg
repz
cmps
push
fs
loop
xchg
adc
dec
sub
pop
add
pop
rcr
push
shl
pop
sub
inc
fld
push
or
mov
lahf
dec
dec
pop
mov
mov
outs
dec
or
push
sub
or
add
aaa
or
stc
sub
dec
cmp
sbb
ss
sti
not
out
or
ror
push
jle
sub
add
jmp
add
mov
not
or
arpl
pop
push
dec
in
cs
out
add
add
inc
pop
fild
ror
push
sub
neg
sti
(bad)
or
jmp
ret
push
(bad)
xor
shl
mov
cmp
sub
add
mov
leave
mov
mov
pop
push
sub
ret
loop
lahf
jl
or
mov
fld
sub
push
call
lods
push
dec
mov
pop
call
cmp
push
dec
mov
dec
adc
jge
push
adc
jnp
lea
sti
dec
jge
iret
mov
inc
xor
pop
pop
jbe
add
push
add
lods
stos
mov
ins
or
dec
add
(bad)
(bad)
in
cld
or
and
in
dec
les
xor
call
mov
add
pop
and
push
xor
cli
xchg
aam
fiadd
outs
jl
mov
data16
mov
fld
div
push
out
imul
dec
or
lock
hlt
and
shl
add
pop
push
in
lea
or
jnp
mov
lods
xor
test
movs
cdq
xchg
add
or
or
inc
ds
add
add
test
sub
pop
imul
push
stos
and
inc
add
pop
shl
in
cmp
mov
cmp
sub
addr16
or
aam
adc
jnp
mov
pop
je
mov
rcl
jae
retf
jmp
clc
cmp
pop
outs
lahf
push
add
cmp
mov
and
cmp
inc
cmp
ss
jecxz
mov
stc
add
loopne
scas
xor
mov
or
popa
inc
inc
add
mov
inc
stos
xchg
das
fiadd
xor
xor
cld
cmc
shl
or
and
aaa
pusha
(bad)
inc
push
sub
ret
dec
push
out
call
adc
pop
xchg
(bad)
aad
mov
adc
(bad)
pop
test
iret
add
movs
test
xor
cmp
cmp
repnz
sar
(bad)
push
or
jmp
or
jb
ret
mov
xor
add
push
fs
inc
pop
int3
inc
loope
adc
push
mov
sub
outs
lock
jg
pop
or
fcom
cmp
shl
nop
ret
fstp
cmp
mov
int
repz
add
fcomp
ror
loopne
push
jne
iret
mov
in
push
cmp
jge
mov
cmp
jbe
out
lds
push
dec
push
(bad)
test
jbe
cmp
lea
push
jmp
xchg
or
dec
push
test
and
fild
imul
stc
and
fdivr
push
jge
sub
inc
bound
xor
sbb
rol
push
jl
bound
loopne
ins
(bad)
mov
mov
pushf
xor
sub
inc
test
mov
sub
cmp
add
add
fcmovbe
add
jg
push
push
jbe
mov
add
jmp
jns
dec
cmp
jb
cmps
sub
js
ret
lahf
jo
sbb
mov
push
mov
mov
jmp
test
js
jo
into
pop
xor
clc
and
add
inc
rcr
mov
out
push
gs
dec
mov
add
stos
lahf
loopne
ficomp
mov
clc
clc
jecxz
lods
and
and
pop
popf
dec
or
adc
adc
mov
inc
add
in
test
adc
or
or
repz
movs
fisttp
jmp
push
xchg
and
mov
dec
data16
push
mov
xchg
push
and
adc
repz
cwde
or
sub
loope
or
call
mov
(bad)
sbb
stc
or
jmp
cdq
cmovl
ret
jle
pop
daa
cmp
adc
adc
pop
call
int3
adc
and
add
dec
sub
inc
xor
jg
lahf
fidiv
lock
hlt
mov
(bad)
jg
mov
test
add
dec
dec
xor
sbb
call
daa
loopne
mov
adc
sub
into
push
push
bound
cmps
shl
(bad)
pop
mov
addr16
cli
sub
adc
and
xor
or
mov
fidivr
lods
add
pop
push
pop
dec
pop
stos
push
(bad)
rcr
arpl
push
jecxz
mov
cmc
ss
sub
pushf
movs
push
add
inc
and
lsl
rcl
add
adc
or
pushaw
imul
xchg
call
sbb
jo
xor
pop
cmp
adc
cmp
sub
iret
mov
ret
adc
mov
adc
fstp
inc
xor
pop
xchg
outs
lock
adc
or
sbb
mov
push
mov
jmp
enter
and
jmp
add
cwde
push
push
jle
mov
jle
or
add
push
inc
or
lods
or
lea
in
mov
pop
sbb
cwde
lea
mov
add
mov
push
cmp
ins
das
loop
pop
cmps
push
adc
into
fcom
and
push
nop
mov
loopne
test
pop
cmp
ins
cmps
test
idiv
adc
push
inc
add
cwde
add
out
rcl
push
cmp
and
outs
mov
push
bound
and
mov
std
mov
je
add
dec
cmp
sub
add
add
inc
xor
jo
xchg
push
sbb
adc
add
and
dec
loopne
shl
mov
repz
ins
jo
adc
ss
or
pop
movs
jg
mov
addr16
imul
adc
nop
xor
nop
dec
pop
mov
outs
je
push
jmp
nop
add
and
xchg
aad
add
scas
dec
add
hlt
add
xchg
cli
ss
xchg
rol
inc
mov
xchg
mov
sub
mov
mov
cmc
cmp
dec
pop
lock
jne
push
or
nop
data16
cmp
and
adc
xchg
mov
pushf
pop
aam
(bad)
jge
mov
mov
inc
and
jge
push
ret
outs
ficom
push
sub
test
mov
je
loop
jbe
in
div
pop
imul
pop
in
jle
dec
loopne
ins
push
inc
push
dec
or
(bad)
ins
mov
out
clc
push
or
pop
mov
cld
push
test
cmp
stc
in
dec
push
push
jmp
mov
js
jne
mov
push
push
adc
jmp
sub
inc
xchg
inc
mov
arpl
out
jae
sbb
push
or
retf
stc
sub
xchg
add
inc
data16
jne
jmp
ret
ds
xor
add
popf
jne
pusha
jo
jp
es
inc
rcr
xor
lahf
xor
or
xor
arpl
xchg
ffree
push
mov
call
pusha
jbe
dec
push
rcl
mov
jecxz
mov
mov
es
push
sbb
shl
or
loope
aam
or
and
cmovnp
and
xchg
cmps
adc
mov
adc
ror
or
pusha
mov
pop
ins
inc
cmps
mov
adc
push
cmp
mov
cs
fs
push
sbb
xor
sub
test
inc
(bad)
data16
dec
jo
adc
jl
daa
adc
jmp
cmps
xor
mov
xor
jmp
adc
xor
mov
mov
pusha
enter
push
push
fisttp
test
pop
push
fwait
dec
push
in
adc
jne
test
scas
call
test
or
sub
shr
daa
and
jp
add
lea
popa
repnz
int
and
cmps
push
mov
xchg
fbld
pop
sbb
xor
ins
mov
into
mov
div
push
jecxz
dec
mov
clc
xor
xor
in
push
fnstsw
add
ss
aaa
movs
cmps
or
jne
inc
push
xchg
add
je
xor
mov
jb
pusha
jns
mov
push
call
xor
add
in
ret
cmps
xchg
jg
xor
sti
cmc
inc
push
or
jg
mov
cmp
loopne
cmp
xor
xor
add
add
jl
(bad)
sbb
inc
push
add
sub
lea
sub
mov
push
call
add
push
lahf
into
gs
inc
sbb
hlt
add
xchg
add
add
cmp
daa
add
xchg
sbb
inc
test
mov
add
xor
mov
jno
outs
and
test
adc
add
inc
mov
sub
cwde
out
je
imul
lds
mov
dec
push
mov
sub
mov
push
jle
adc
sub
movs
or
jns
mov
loop
not
push
mov
rol
movs
add
test
mul
test
retf
xor
mov
xor
adc
mov
add
xchg
out
add
or
jbe
aad
jl
xchg
retf
movs
push
(bad)
mov
jl
out
sub
push
aam
pop
call
scas
std
scas
std
inc
add
das
dec
outs
or
add
(bad)
cld
add
sbb
je
adc
add
outs
rol
xchg
loope
adc
sbb
daa
pusha
repz
into
jp
jmp
adc
dec
ret
iret
popa
and
add
adc
movs
shr
sbb
aam
add
xorps
dec
dec
or
out
add
bnd
sbb
test
test
sub
push
mov
fmul
push
dec
test
in
int
adc
rep
mov
push
inc
sub
add
jns
idiv
xlat
pusha
add
pcmpgtw
add
or
imul
push
mov
jg
jne
repz
and
mov
add
pop
or
call
cmp
xchg
vpmadcsswd
daa
mov
call
push
jmp
cdq
fmul
out
enter
sub
fwait
imul
loope
lods
or
scas
je
jge
js
imul
lahf
push
aas
int3
add
adc
adc
into
mov
xchg
push
into
xor
and
popa
jp
and
push
jbe
stc
mov
sbb
cmp
dec
cmp
or
test
outs
sbb
add
or
js
push
stos
sbb
fst
(bad)
jmp
xchg
mov
push
xor
push
push
pop
jecxz
pop
mov
inc
push
add
and
cli
call
adc
sbb
aad
jecxz
sub
std
push
ins
in
xchg
mov
sahf
retf
adc
inc
dec
add
jns
inc
or
test
push
and
pop
inc
jmp
add
loopne
jo
or
or
add
addr16
push
xor
std
or
das
add
out
nop
daa
inc
jmp
ja
(bad)
pop
jmp
(bad)
(bad)
push
mov
jmp
lea
xchg
mov
mov
inc
mov
sub
add
push
fadd
xor
push
imul
dec
mov
cmp
popa
arpl
stos
mov
xchg
pop
push
or
push
xchg
sbb
push
fimul
cmps
outs
pop
cmp
sbb
push
out
daa
mov
adc
push
dec
mov
cmp
mov
xchg
and
add
mov
addr16
add
push
push
mov
out
es
adc
loopne
adc
push
mov
jns
pushf
sar
aad
push
and
mov
sbb
nop
jle
ret
retf
mov
outs
pushf
mov
or
pop
adc
pop
ja
test
dec
or
mov
ins
cmp
pop
movs
test
push
cmps
fild
mov
mov
mov
push
je
lds
dec
pop
add
or
int
daa
popa
in
add
xor
xor
push
pop
dec
rol
sub
shr
gs
aaa
jmp
loope
aam
sbb
(bad)
aam
push
or
lds
ret
dec
push
call
daa
nop
push
add
ss
test
cli
jno
xchg
sbb
ins
enter
pop
mov
mov
and
or
aam
lea
jg
dec
add
sub
je
shl
aam
mov
xchg
cmp
jnp
xor
inc
mov
shr
mov
ins
mov
ins
inc
xchg
push
cmp
nop
rcl
pop
jecxz
mov
std
outs
cmp
add
(bad)
retf
inc
test
dec
movs
xchg
jne
cmp
mov
call
call
imul
add
dec
pop
jg
adc
dec
iret
xchg
mov
inc
js
push
push
xor
jae
mov
mov
ret
cmp
movzx
sbb
jns
(bad)
and
lea
pop
push
add
popa
leave
push
rol
inc
sub
add
mov
add
out
xchg
add
push
(bad)
test
adc
and
repz
push
in
adc
sbb
dec
dec
stc
push
call
daa
add
or
sbb
js
stos
retf
pop
xchg
test
es
popa
call
fdivrp
test
ins
sub
inc
xor
xor
add
lahf
lock
lds
xor
shl
push
mov
adc
sbb
pop
lds
mov
lods
jb
pop
inc
or
mov
xor
mov
cmp
push
retf
add
push
data16
in
daa
and
fwait
adc
lahf
gs
inc
push
je
ret
and
push
jb
fs
mov
gs
sbb
call
ror
xor
cmp
jmp
push
push
cmp
repz
and
or
or
aam
lea
inc
ret
sbb
mov
out
fmul
stc
xor
dec
add
enter
rol
cmp
push
outs
inc
call
cwde
daa
push
outs
lahf
movs
repnz
or
jg
pop
ret
enter
(bad)
push
mov
out
or
jge
mov
jmp
adc
adc
out
sub
int3
mov
push
test
xor
mov
movs
push
pop
add
pop
retf
inc
les
push
add
iret
adc
and
push
fst
call
pusha
lock
cmp
test
mov
mov
or
rol
rol
mov
inc
(bad)
xchg
sbb
retf
cmp
or
cmp
out
outs
(bad)
dec
xor
jmp
out
mov
inc
and
movs
mov
inc
das
stc
xor
push
rol
fwait
xchg
sub
jb
inc
mov
adc
in
ret
inc
test
js
inc
xchg
stos
dec
push
sub
pop
bound
retf
pusha
xchg
inc
call
adc
jo
out
sub
mov
hlt
add
dec
fs
loop
jbe
rcl
shl
sub
test
lods
retf
movs
mov
adc
jne
ins
cmp
and
jae
cs
sahf
or
ficom
and
xchg
test
add
shl
sub
add
cmp
imul
add
xor
inc
adc
xor
sub
add
mov
dec
inc
call
(bad)
jecxz
mov
mov
xchg
jo
and
inc
jo
xchg
inc
jle
add
inc
sti
add
hlt
push
(bad)
ret
lods
and
sti
sub
add
and
cmp
inc
jl
rcr
adc
jmp
pop
fs
jo
ss
mov
mov
or
xlat
call
push
jle
test
(bad)
cmp
pop
mov
cmp
xchg
xchg
jl
push
sbb
enter
cld
add
push
leave
push
(bad)
sar
and
xchg
pop
xor
jae
push
push
xchg
pop
dec
ds
inc
mov
retf
ret
imul
add
loopne
jno
lahf
leave
xchg
jg
add
leave
out
inc
int
push
xchg
test
sub
xchg
(bad)
adc
add
and
push
bswap
inc
jae
lock
outs
sbb
jge
setg
mov
adc
inc
lahf
loopne
repnz
and
push
adc
leave
adc
push
add
sub
scas
imul
or
cmp
pop
fcomp
pop
and
add
fmul
or
pop
and
mov
dec
inc
and
popf
pop
jg
add
sbb
rol
xchg
xchg
or
xchg
xor
cmp
int3
and
dec
vaddsubpd
inc
bound
mov
scas
call
inc
xchg
push
dec
pop
retf
adc
or
es
adc
or
push
push
mov
add
mov
mov
clc
cmp
or
push
cmp
jno
(bad)
mov
arpl
ins
aam
ds
pop
pop
cli
(bad)
and
dec
xchg
xchg
hlt
xchg
inc
sbb
xchg
hlt
inc
and
dec
adc
das
inc
jl
dec
inc
popa
lods
lods
ss
bound
jmp
pop
jmp
dec
mov
jnp
sbb
mov
mov
adc
call
jmp
fwait
add
jmp
and
ret
xor
(bad)
repnz
call
push
jns
mov
or
push
pop
mov
xchg
lds
xor
adc
loop
push
sub
mov
fwait
iret
rol
push
mov
stc
sahf
out
outs
and
mov
scas
rol
cld
mov
in
add
add
scas
xor
and
jp
stc
add
adc
outs
push
cs
sbb
fcmovnb
push
sbb
rcr
cmps
and
pop
dec
daa
adc
daa
adc
sub
inc
aas
mov
mov
mov
sbb
das
and
mov
adc
pop
pop
push
les
push
mov
push
sub
fidiv
xchg
pop
jmp
shr
lahf
rcr
push
rcr
mov
push
push
dec
adc
and
adc
xchg
mov
sbb
and
add
icebp
xor
jmp
push
jg
nop
adc
pop
mov
push
scas
jge
pop
out
and
test
jo
and
pop
jne
jmp
dec
cmp
mov
enter
xchg
or
or
ret
jmp
or
add
push
inc
nop
arpl
jp
dec
add
ins
gs
sar
addr16
mov
jl
push
jno
adc
and
mov
inc
cmp
mov
jns
cld
inc
sub
push
adc
xchg
pop
inc
cdq
pop
xchg
inc
rcr
ret
dec
add
mov
adc
std
xchg
mov
call
out
add
stos
sbb
test
or
pop
push
cmp
adc
sub
add
leave
push
ret
mov
cmp
fild
mov
ja
add
lods
rol
aam
mov
nop
cmps
sahf
(bad)
test
jecxz
mov
sub
(bad)
and
and
adc
jmp
popa
fmul
out
cwde
popa
in
fstp
shl
jo
inc
rol
jmp
pusha
jae
(bad)
xor
shl
rol
cld
call
adc
loope
dec
xchg
add
es
xor
js
inc
ss
shr
lahf
adc
repnz
lods
pop
push
xor
jb
adc
pushf
nop
xor
xor
push
push
push
mov
xchg
pop
cmp
add
jns
fstp
jl
pop
call
adc
jmp
fnsave
mov
ficom
add
lahf
clc
xchg
dec
call
or
(bad)
add
and
lahf
xchg
pop
pop
in
lds
adc
aas
pop
add
fbld
fidiv
push
pop
cmp
mov
mov
inc
sti
or
or
ret
add
retf
imul
mul
ins
add
add
dec
shr
or
or
jmp
add
mov
mov
mov
mov
dec
push
(bad)
add
nop
ret
pop
fnstcw
sbb
dec
add
mov
or
jbe
call
ja
(bad)
adc
jbe
cmp
push
test
add
popf
or
arpl
jnp
add
push
dec
xor
or
stos
jb
sbb
push
in
aam
call
push
mov
dec
dec
pop
ret
ins
push
dec
mov
cdq
sub
or
or
aas
inc
sbb
call
fstp
and
xchg
xchg
(bad)
into
(bad)
add
stos
aas
nop
retf
dec
adc
cs
inc
xchg
inc
dec
push
push
mov
leave
(bad)
lods
jle
(bad)
add
test
movs
mov
cld
lods
sbb
inc
push
mov
repnz
sub
sar
enter
add
into
adc
jae
popa
adc
add
mov
jmp
xor
mov
scas
add
daa
aas
imul
sub
fptan
xchg
pop
and
(bad)
stos
clc
add
pop
mov
repz
mov
add
fisubr
fdivp
jle
adc
add
rol
loopne
sub
jg
jb
pop
cmp
and
xor
add
add
fdivr
aas
push
ror
pop
add
xor
shr
cmps
sub
cmp
mov
out
and
sub
js
test
and
push
dec
cmp
dec
sub
pop
push
inc
jle
mov
push
or
in
mov
movs
or
dec
mov
js
or
mov
sahf
xchg
pop
adc
or
jle
and
inc
pop
inc
ds
pop
sbb
mov
inc
fidivr
adc
(bad)
and
jle
push
rcl
and
outs
jmp
pop
pop
inc
mov
arpl
shl
inc
xchg
adc
mov
gs
cmp
xchg
and
stc
ins
fcmovu
(bad)
ins
scas
out
add
xchg
jmp
into
add
jmp
inc
cmp
adc
or
or
adc
js
outs
pop
xchg
jnp
imul
(bad)
(bad)
fwait
(bad)
shr
loope
push
mov
xchg
and
adc
shl
sub
enter
sbb
add
or
xor
add
sbb
arpl
pushf
inc
into
pop
inc
or
aad
dec
pop
xor
mov
loope
push
or
pop
shr
sbb
adc
or
inc
dec
xchg
dec
and
or
pop
ret
div
and
sbb
or
test
into
test
(bad)
daa
mov
add
pop
push
xchg
test
pop
xchg
mov
sbb
pop
push
push
(bad)
iret
ja
aam
xchg
pop
and
and
adc
push
mov
ss
retf
cwde
push
jb
fbstp
push
mov
ds
push
pop
dec
mov
cmp
out
ror
pop
push
mov
or
mov
imul
aad
pop
add
add
mov
fsub
add
xchg
sar
movs
mov
aas
or
add
mov
es
mov
pop
leave
add
mov
and
test
jle
test
sti
push
jne
adc
mov
pop
cmp
xor
mov
xor
pop
mov
(bad)
pop
mov
mov
xchg
mov
and
aaa
not
mov
or
sub
mov
mov
pop
jg
mov
test
xchg
jl
push
inc
push
push
push
lds
ficomp
xchg
icebp
cmp
sub
jle
jne
dec
adc
pop
cld
test
loopne
add
fwait
add
(bad)
fild
imul
dec
(bad)
lea
xchg
inc
mov
neg
push
jo
enter
fdivr
es
mov
and
mov
push
sti
cmp
jl
push
ds
mov
movs
test
and
retf
adc
sub
mov
pop
std
mov
pop
sub
std
nop
adc
inc
mov
jnp
inc
ja
sub
mov
in
mov
cmp
mov
inc
mov
add
or
sti
(bad)
mov
cmp
or
inc
call
les
jae
retf
mov
pop
test
popa
xor
mov
push
jmp
dec
add
das
ror
jnp
adc
xchg
add
adc
aas
or
pop
rcl
add
enter
pop
inc
cld
inc
push
push
pushf
sbb
cmp
sbb
das
push
push
jmp
cmc
sub
sbb
sub
loope
push
sar
pop
xchg
mov
xor
rol
push
mov
ins
mov
mov
push
iret
sti
sbb
add
push
shl
mov
mov
push
cmpps
fidivr
and
repnz
mov
rol
fldcw
or
add
add
mov
je
scas
and
cmps
or
mov
shl
sub
jecxz
add
mov
push
or
(bad)
pop
jge
ins
jg
cli
inc
mov
leave
test
dec
or
push
mov
aas
jnp
and
lock
mov
adc
inc
jecxz
or
imul
or
jecxz
add
and
cdq
inc
repnz
xchg
jmp
cmp
xor
aaa
aaa
mov
and
ret
adc
add
add
dec
pop
std
pop
fyl2xp1
sar
clc
push
adc
mov
mov
add
shl
sbb
inc
jmp
xor
(bad)
rcl
add
cmps
cmps
sar
or
pop
shl
pop
int3
xchg
loopne
imul
imul
and
or
retf
adc
test
mov
push
push
mov
pop
dec
xor
push
and
(bad)
adc
ret
push
in
sahf
ss
call
(bad)
add
push
push
cmp
sbb
les
xchg
scas
into
xchg
js
lea
mov
mov
push
ret
ffreep
add
jno
(bad)
sub
mov
mov
jbe
dec
shl
push
jne
cdq
pusha
mov
pusha
or
push
or
push
cwde
adc
add
enter
sbb
inc
push
fnstcw
sti
rol
rol
or
(bad)
(bad)
fcomp
retf
rol
dec
inc
pop
xchg
add
inc
xchg
lock
inc
inc
int
inc
mov
sub
mov
and
inc
test
xchg
sub
adc
inc
add
push
jb
dec
jp
ins
(bad)
adc
and
sbb
cs
pop
adc
retf
add
or
add
add
pusha
das
xor
sbb
jnp
xor
and
outs
pop
ret
lds
jnp
cmc
mov
aas
rcl
or
(bad)
pop
pop
lds
sub
jnp
aam
pop
mov
mov
ins
int3
lahf
pop
call
iret
mov
mov
pop
pop
cmp
and
ins
aas
mov
xchg
iret
push
inc
shl
and
movs
fsubr
sub
xchg
fimul
add
fisub
pop
in
add
adc
pop
cmp
rol
jae
push
xchg
jp
dec
mov
and
sub
test
hlt
xor
dec
movs
push
scas
nop
xor
dec
adc
mov
xor
imul
pop
mov
pusha
pop
cmp
adc
lock
enter
and
adc
push
fcmovnbe
or
inc
push
lea
push
xchg
xor
jl
or
xchg
leave
fmul
sbb
mov
mov
dec
mov
pop
mov
inc
loop
or
lahf
sub
fs
cmps
push
(bad)
sbb
cmp
fidiv
xchg
(bad)
jg
arpl
loopne
add
fsubr
push
add
push
xlat
test
xor
loope
or
js
dec
sar
or
push
xor
push
dec
adc
aad
cmp
cmp
or
add
mov
cs
jle
cmps
pop
push
sbb
add
pusha
mov
pop
je
or
(bad)
mov
and
add
repz
mov
loopne
fs
push
pushf
fdivr
xor
sti
or
out
jns
and
adc
jg
jns
push
movs
pop
push
in
jle
cmp
adc
push
out
and
add
jo
in
jle
jns
adc
or
push
lahf
push
sbb
jmp
add
add
pop
jle
nop
cmps
stc
push
js
jb
stc
dec
repnz
sub
push
nop
sub
jmp
add
not
push
dec
and
call
test
sub
xchg
pusha
jge
and
xchg
loope
je
aam
add
push
xchg
jns
call
out
repz
inc
mov
pop
pop
mov
sbb
pop
push
sbb
mov
not
or
and
or
inc
push
adc
pop
add
cmps
xor
sub
ds
addr16
cmc
pop
xor
rol
lds
sbb
adc
push
push
(bad)
adc
loopne
dec
stos
pop
xchg
in
test
hlt
pop
push
loopne
adc
ret
and
stos
(bad)
je
fild
int3
xor
sbb
cmc
hlt
or
cmp
inc
sub
ss
rcl
push
pushf
and
dec
pop
je
inc
sub
mov
dec
fadd
mov
and
push
test
nop
mov
rol
pop
sub
sub
sub
rcr
or
inc
dec
pop
imul
jo
push
je
push
or
mov
jne
gs
loopne
sbb
clc
cmp
fimul
adc
push
add
add
lahf
(bad)
call
test
mov
and
mov
cli
or
inc
call
xchg
xchg
dec
sub
xchg
stos
aam
or
nop
add
lods
(bad)
or
mov
inc
jnp
gs
cmps
add
lahf
add
push
jb
xor
sar
inc
or
aam
xlat
lods
pop
and
or
push
mov
pop
stc
mov
mov
mov
adc
cld
jl
inc
cmp
mov
sub
mov
repz
xor
or
mov
popf
call
push
jl
jle
mov
push
adc
push
call
sbb
cmc
xlat
pop
and
jg
(bad)
shl
lea
cmp
mov
pop
pusha
inc
dec
and
pop
and
add
and
mov
icebp
or
xlat
nop
inc
test
and
push
clc
sbb
or
daa
stos
jmp
mov
dec
cmp
xchg
dec
cwde
cmp
gs
mov
(bad)
icebp
mov
pop
stc
sub
leave
(bad)
mov
inc
mov
inc
int
xchg
push
stos
lds
retf
imul
add
es
cmps
nop
and
and
sub
or
inc
test
in
data16
aas
aam
adc
add
inc
shl
xchg
aad
ret
add
cmp
mov
repnz
push
adc
adc
repnz
adc
adc
push
pop
pop
or
add
jle
and
pop
loope
sbb
sar
mov
movs
(bad)
call
add
imul
cld
add
jle
lea
cmp
add
int
push
sub
xor
pop
cmp
pop
add
fsub
mov
jle
nop
std
mov
neg
xchg
lock
or
cwde
cmp
jg
dec
cmc
add
ret
jbe
in
lea
or
inc
stc
xchg
cs
pushf
xor
jb
lods
adc
ins
pop
add
lock
inc
sub
cmp
push
push
cld
pop
cmp
jmp
xor
and
fwait
jmp
sbb
push
add
sub
out
pop
sahf
adc
nop
or
ret
jo
cmp
and
aaa
fld
ins
push
jne
icebp
popa
fiadd
pop
iret
add
(bad)
or
adc
fld
(bad)
ins
xor
pop
movs
or
sub
and
popf
cld
inc
aam
mov
and
jbe
retf
cdq
sbb
js
add
mov
xor
or
push
movs
mov
mov
fbstp
push
les
xchg
add
add
mov
idiv
mov
leave
dec
inc
pandn
int
les
mov
lahf
pop
push
xchg
inc
and
inc
and
jl
retf
mov
adc
add
mov
movs
xor
or
retf
inc
push
sbb
push
inc
pop
or
std
dec
add
and
dec
mov
push
inc
dec
push
push
les
adc
pushf
es
add
aam
movs
xchg
mov
jle
cli
push
push
pop
adc
add
ret
cmp
fiadd
ins
frstor
nop
inc
(bad)
sbb
out
cmp
mov
daa
sub
ds
lods
call
shl
mov
pop
outs
cmp
xchg
movs
in
jb
test
dec
rcl
pop
pop
push
mov
sbb
clc
push
jmp
mov
sbb
xor
imul
add
mov
js
jle
adc
mov
sub
scas
sub
lods
adc
xchg
add
add
mov
mov
out
fnstsw
mov
add
jbe
lds
add
add
cs
or
jmp
stos
lods
inc
xchg
add
sub
aam
and
push
sbb
(bad)
clc
pop
jmp
push
adc
sub
push
gs
ds
das
cdq
(bad)
shr
adc
inc
sahf
xchg
int
call
lods
cmp
ret
fsubr
(bad)
loope
and
mov
jmp
push
jno
mov
cs
inc
int3
dec
mov
jbe
in
pop
mov
and
pop
add
rcl
jne
out
bound
dec
sti
pop
inc
mov
xor
mov
mov
sub
into
push
dec
jp
or
add
sub
(bad)
lahf
add
add
shr
lods
xchg
push
hlt
xlat
adc
push
xchg
scas
aaa
and
cmp
jl
mov
xor
push
and
jp
scas
pop
fist
enter
cwde
or
in
enter
or
lock
and
or
cli
inc
mov
jne
sub
sbb
adc
ret
in
div
jle
clc
sbb
call
cdq
push
or
dec
out
adc
add
inc
je
fild
push
xor
femms
(bad)
and
arpl
shl
lods
sbb
jne
adc
popf
outs
repz
lldt
je
adc
sbb
pop
mov
or
ds
sbb
add
xchg
and
sub
xor
add
sbb
ret
mov
stos
jbe
iret
jne
pop
mov
adc
cmp
inc
pop
sbb
arpl
movs
aaa
adc
and
cmps
mov
(bad)
cwde
sbb
rol
shr
or
movs
inc
aas
mov
mov
jp
les
jp
pop
mov
push
dec
push
push
movs
sbb
jg
repnz
pop
fsubr
xor
push
dec
ror
in
xor
inc
jecxz
ja
mov
cmp
cli
cmp
sbb
movs
xchg
ret
sub
call
cmp
adc
sub
sub
jnp
sti
add
inc
(bad)
xor
mov
or
loopne
(bad)
and
xor
xor
or
pop
pop
jl
pop
cmp
jge
pop
or
and
lea
cmp
pop
clc
inc
loopne
adc
mov
mov
in
(bad)
pop
call
inc
and
adc
sbb
sub
test
xchg
push
fs
adc
add
and
addr16
inc
clc
pop
cmp
fcomp
or
mov
sbb
add
and
aam
pop
adc
faddp
mov
jbe
out
push
fs
rcr
loope
sbb
cmp
fiadd
shl
push
mov
cld
mov
lods
add
dec
out
inc
mov
daa
mov
fist
dec
jl
cmp
jge
push
dec
test
cwde
xor
fmul
rcr
cld
(bad)
or
leave
add
mov
pop
lock
sub
push
push
pusha
lea
shr
and
or
or
int
sub
jne
test
lahf
sahf
shl
mov
dec
adc
cli
lock
and
push
ret
mov
shr
stos
add
shr
mov
clc
pop
mov
adc
xor
imul
mov
xor
dec
push
aas
jl
mov
ja
test
push
fild
inc
push
adc
jns
push
mov
test
mov
add
rol
test
pop
mov
adc
adc
xchg
pop
cmc
daa
popa
repz
jl
lock
jle
ret
ds
nop
jmp
pop
and
pop
call
pop
add
xor
inc
push
xor
add
(bad)
mov
sub
and
shl
pop
jle
mov
push
rol
(bad)
gs
pop
mov
add
les
scas
test
pop
push
xor
popa
fst
jle
sbb
dec
mov
sbb
pop
mov
push
jl
(bad)
(bad)
div
push
ja
sbb
inc
xchg
dec
fdiv
in
in
leave
stos
ret
je
shl
mov
pop
test
jle
loop
adc
push
out
cmp
bt
push
sub
lods
pop
int3
aad
xor
pop
adc
bound
push
pop
jne
xor
rol
mov
pop
xchg
add
pop
push
inc
and
dec
outs
mov
pop
inc
and
jle
sahf
pop
xchg
dec
mov
push
adc
aaa
jl
pop
ss
pop
jbe
retf
xor
push
pusha
mov
mov
in
rcr
xor
in
adc
push
call
(bad)
out
mov
mov
inc
lahf
jb
je
add
sbb
sahf
mov
mov
push
mov
xchg
push
pusha
adc
dec
cmps
mov
(bad)
mov
cs
data16
add
dec
or
and
pcmpgtw
dec
cdq
in
cmp
cmp
dec
adc
je
scas
imul
pusha
sar
or
mov
and
test
xchg
push
sahf
inc
inc
or
inc
jmp
daa
inc
nop
push
jbe
inc
push
dec
pop
hlt
push
jne
aad
movs
push
sbb
sub
outs
pop
call
test
loopne
xor
sub
cs
add
js
pop
pop
shl
in
sub
or
je
rcl
ins
adc
jno
addr16
std
pop
mov
mov
pop
aas
(bad)
(bad)
cmp
sbb
xor
mov
jmp
xor
test
xchg
int
inc
arpl
add
stos
lahf
add
add
adc
xchg
ret
sub
out
xabort
jecxz
xchg
cmps
jbe
pop
push
push
mov
imul
std
xchg
cmc
add
pop
fcmovnbe
test
sbb
imul
loop
(bad)
cli
push
arpl
iret
(bad)
jle
jne
sbb
pop
jp
add
inc
xchg
mov
jle
retf
sar
add
mov
sar
adc
push
repnz
dec
sar
adc
imul
das
call
ret
inc
(bad)
xchg
fild
add
xchg
ss
push
mov
inc
xchg
jle
and
xor
mov
ret
jo
adc
sbb
aaa
push
push
pop
mov
movs
add
and
mov
xor
push
mov
ins
out
lahf
mov
mov
mov
or
fist
push
aam
addr16
push
adc
mov
test
shr
or
adc
xor
and
xor
cld
mov
das
es
and
call
je
sbb
push
add
lods
sbb
rol
sub
xchg
cwde
sub
or
inc
xor
int
ror
xor
ret
inc
in
mov
jmp
inc
xor
add
sbb
sub
mov
fild
dec
and
mov
mov
sbb
mov
lea
bnd
push
dec
push
lea
push
mov
rcr
bound
ret
pop
pop
cmp
adc
jle
in
or
inc
xchg
inc
(bad)
lock
je
fadd
jo
fwait
jge
sub
add
ret
pop
jnp
sub
pop
mov
inc
xor
sbb
cmp
adc
out
pop
retf
test
scas
in
and
inc
or
nop
push
push
sbb
add
and
cmp
jle
xlat
nop
fwait
pop
push
call
add
jno
call
or
xor
adc
pop
pusha
jo
adc
(bad)
rcr
pop
mov
sbb
adc
popa
fchs
aad
pop
sbb
inc
ins
lods
out
dec
sbb
sbb
rcl
das
inc
or
jecxz
jne
adc
test
retf
out
add
push
add
and
bound
pop
and
fwait
nop
pop
xor
cmp
scas
xor
sub
sub
push
or
push
jle
push
mov
retf
cmp
adc
lahf
retf
imul
add
test
repz
push
pop
inc
ss
adc
movs
sbb
and
loop
or
aas
jo
pop
add
inc
cmp
add
rcl
or
xor
cs
xor
in
mov
jmp
enter
sbb
dec
push
cmp
cs
xchg
sbb
test
lahf
adc
push
arpl
aas
nop
rcl
out
cmp
sbb
pusha
add
(bad)
pop
outs
add
mov
sub
add
(bad)
sbb
inc
cmp
pop
test
adc
addr16
mov
dec
cmp
xlat
mov
or
int
pop
(bad)
mov
cmp
in
xchg
bound
pop
inc
cwde
arpl
mov
(bad)
push
add
push
pop
xchg
sbb
cmc
mov
adc
mov
imul
sub
nop
ret
gs
push
mov
add
sub
cmp
ret
sbb
push
push
repnz
sbb
push
call
and
xchg
jmp
sbb
mov
sbb
mov
xlat
and
and
pop
push
icebp
inc
pop
lahf
add
or
sbb
add
rol
push
mov
mov
aas
imul
ja
pop
(bad)
jne
mov
cmps
add
xor
popa
or
xor
mov
xchg
push
inc
adc
lds
dec
lea
fs
into
ins
movs
or
test
cmp
mov
lea
lahf
lock
xor
mov
movs
cdq
sbb
pop
push
fs
mov
sbb
pop
stos
add
outs
adc
push
adc
cmp
adc
xlat
cmp
cmps
mov
mov
inc
sub
and
out
les
mov
jmp
test
stc
stos
add
and
and
std
mov
cmp
pop
aas
add
xchg
inc
test
mov
movs
mov
xor
popf
dec
adc
add
ret
retf
fiadd
bound
dec
mov
sbb
fsub
push
enter
adc
shl
mov
loop
mov
push
sar
pop
rcl
sbb
pop
sub
into
test
add
push
out
mov
imul
out
jae
inc
xor
lods
lea
sub
mov
ins
add
pop
mov
(bad)
daa
push
jo
push
add
retf
ins
sbb
mov
test
out
dec
sahf
xchg
dec
lods
cmps
call
adc
sub
adc
xchg
cmp
icebp
retf
xor
into
outs
sbb
sbb
dec
xor
popa
jnp
(bad)
rcr
jae
call
loop
or
repnz
fistp
ja
nop
xchg
inc
mov
cmp
iret
add
inc
mov
and
push
cwde
xchg
add
adc
sub
add
add
ficom
jno
stos
push
ret
or
and
xor
loopne
adc
add
nop
ret
cs
scas
fwait
and
cmc
jo
shl
sub
mov
pusha
je
xor
dec
mov
lds
test
adc
push
sub
jg
lds
test
loope
adc
pop
xchg
int3
in
inc
mov
push
jg
mov
push
je
jge
into
pop
lea
jecxz
sbb
in
popa
or
aaa
mov
mov
punpcklwd
movlps
loop
aaa
sub
and
push
dec
ins
stos
pop
push
push
daa
aam
hlt
adc
dec
push
sub
and
push
sbb
imul
jnp
ins
icebp
fisttp
mov
pop
mov
movs
sub
jge
push
dec
cmp
mov
(bad)
push
ret
fdiv
rcr
push
shr
dec
pop
sub
jno
adc
push
or
dec
push
jmp
add
movs
jo
sar
sbb
mov
add
or
and
pop
inc
pop
mov
retf
call
push
cmp
pop
jb
inc
dec
and
fwait
push
(bad)
jge
lock
push
and
jle
retf
outs
add
test
cmp
ret
(bad)
jmp
rcr
ins
mov
movs
jo
cmp
(bad)
pusha
or
sbb
adc
inc
add
nop
adc
cmc
jmp
cwde
inc
fdiv
jmp
dec
pop
int3
les
sbb
push
add
jp
test
xor
mov
nop
sahf
or
aam
(bad)
(bad)
rol
or
loop
inc
sbb
sub
pop
add
sub
xor
sub
ja
cmc
xchg
and
pop
mov
jbe
pop
push
(bad)
cmp
in
sbb
jecxz
pop
add
push
cmp
inc
fdivr
aaa
lods
loopne
add
mov
push
adc
push
pop
iret
repz
aam
lahf
pusha
mov
test
(bad)
sbb
retf
loop
jns
mov
sub
lds
gs
or
xchg
icebp
xor
push
mov
in
imul
adc
push
dec
loopne
sub
xchg
mov
test
push
fwait
cmp
jmp
mov
test
imul
inc
jp
xchg
fld
dec
lock
xor
adc
jmp
sub
pop
pop
jae
cmp
add
ret
inc
in
inc
pminsw
jmp
push
(bad)
retf
push
pop
xor
jae
hlt
(bad)
mov
cmc
jg
pop
rol
nop
dec
jge
out
ret
sbb
mov
jp
(bad)
(bad)
ds
and
ret
mov
or
sar
pop
push
mov
mov
or
scas
or
scas
sub
push
imul
push
ss
sbb
mov
shl
add
cdq
xor
es
(bad)
add
loope
add
rcl
and
fisttp
or
sub
ja
push
jl
push
xor
xor
daa
add
adc
mov
ror
sub
add
out
or
pop
lahf
or
shl
pop
push
pop
pusha
jns
out
nop
je
pop
adc
adc
sub
pop
lods
movs
and
popf
jecxz
stos
or
sbb
fcomp
pop
adc
add
(bad)
jmp
jl
add
mov
lock
rcl
movs
cmp
or
push
idiv
or
mov
sar
xor
or
or
into
jl
pop
(bad)
mov
cmp
add
(bad)
in
nop
cmp
pop
cmp
popa
test
es
jle
sbb
and
add
sbb
mov
repz
sahf
inc
jne
call
lahf
add
out
call
or
jge
adc
xor
sub
loopne
mov
aaa
inc
add
pop
inc
mov
or
pop
adc
cmp
and
pop
nop
mov
mov
xor
inc
lea
jg
push
fwait
xor
xchg
sub
xchg
sbb
call
fcmovnb
inc
outs
sbb
xor
mov
pop
or
add
push
sbb
rcr
mov
mov
push
add
aaa
ja
inc
push
into
push
enter
and
jb
or
fild
push
into
push
data16
es
adc
cwde
xor
je
adc
mov
imul
mov
push
in
cmps
addr16
and
push
push
push
outs
loop
sbb
dec
fisttp
pop
cmp
repz
xchg
int3
jge
gs
bound
mov
cs
rcr
sbb
fldcw
dec
mov
inc
mov
inc
pop
or
stc
cmp
push
add
daa
dec
jo
stos
add
push
push
or
out
pusha
retf
sahf
adc
fild
add
mov
or
pop
arpl
imul
add
add
loop
jl
push
xor
out
cli
push
mov
xchg
bswap
sbb
in
fsubp
adc
inc
out
push
and
sar
adc
je
mov
adc
pop
and
fild
push
test
in
out
les
jg
daa
mov
pusha
leave
rcl
mov
out
cmp
inc
pop
popa
jg
push
js
imul
jns
icebp
dec
sbb
es
dec
call
xchg
pop
cld
inc
test
jo
xchg
inc
int3
pop
enter
sbb
std
retf
sbb
or
pop
outs
pusha
sbb
xchg
mov
ds
push
cld
mov
add
pmulhw
push
add
xchg
out
xor
sbb
mov
cmps
jno
inc
or
fdiv
(bad)
jmp
adc
pop
and
aaa
sbb
and
xchg
sub
repnz
fld
and
adc
or
mov
push
mov
rcr
jns
or
test
mov
sbb
ss
add
outs
nop
add
mov
or
rcr
push
sub
mov
test
nop
adc
test
daa
add
pop
jae
shr
and
outs
out
retf
and
and
xor
mov
mov
cmp
mov
xor
stos
push
adc
sub
(bad)
dec
arpl
pushf
mov
shr
xchg
mov
adc
mov
sbb
or
fisub
or
sbb
xchg
add
and
lahf
jne
(bad)
in
inc
stc
dec
xchg
jb
add
mov
or
cmp
jl
jmp
ins
sbb
inc
loopne
mov
push
popa
mov
xchg
es
mov
add
add
mov
(bad)
cmp
nop
lock
enter
or
dec
dec
ret
push
inc
dec
clc
push
push
retf
push
xchg
or
outs
mov
pop
test
ds
mov
ret
push
xchg
lock
xchg
das
or
push
pop
rcl
adc
jl
hlt
push
sbb
push
add
aaa
pushf
je
es
scas
or
add
adc
pop
(bad)
push
dec
sti
dec
inc
and
je
pop
xor
mov
aaa
ins
pop
xor
sbb
repz
ins
jbe
push
sahf
out
iret
cdq
fnsetpm(287
push
icebp
sti
stc
add
mov
xlat
or
or
bound
pop
or
or
pop
push
test
or
push
popa
add
call
pop
push
lea
push
jo
rcl
xor
je
call
pop
(bad)
and
jp
push
aaa
rol
push
or
repz
sbb
push
adc
add
ja
lahf
jle
and
mov
loope
xchg
lahf
xchg
xor
xor
jnp
pop
sub
test
xor
and
adc
imul
(bad)
imul
out
imul
push
pop
(bad)
and
aaa
push
pop
or
inc
mov
pop
xchg
aam
movs
ss
ins
ud1
cmp
les
ins
cmp
xchg
call
dec
jmp
stos
or
pop
jmp
push
xor
xor
adc
or
out
rcr
push
xchg
cld
adc
push
call
adc
dec
add
adc
mul
bnd
adc
test
call
dec
and
fstp
pop
loope
sub
arpl
or
adc
add
mov
lock
(bad)
mov
or
scas
arpl
or
or
aaa
dec
rol
iret
jnp
push
imul
stc
loope
or
ds
or
xor
rcl
sti
fsub
sbb
cmp
push
xor
or
mov
ss
mov
ficom
call
mov
lahf
sbb
in
or
mov
sbb
xchg
or
xchg
push
lods
or
jne
shr
xchg
mov
imul
sbb
or
push
pop
mov
add
iret
sbb
inc
push
inc
xchg
es
xor
add
or
call
call
jg
jg
ins
iret
pop
xor
jne
add
xchg
(bad)
lock
add
cmp
cmc
jae
outs
push
pop
call
loopne
ss
pop
dec
inc
inc
pop
jle
xchg
dec
or
dec
sti
sbb
inc
pop
push
imul
or
add
sub
je
ret
inc
xchg
stos
sub
and
ret
enter
test
mov
xlat
inc
and
mov
call
fsubp
ds
je
fmul
push
rep
jmp
or
push
mov
lock
mov
ror
js
sbb
cmp
sub
pusha
je
aam
cld
leave
xor
shl
pop
xchg
outs
pop
repnz
adc
int3
pop
jbe
gs
daa
pusha
loopne
adc
sahf
rol
or
adc
loopne
dec
xor
mov
push
in
jl
sbb
(bad)
(bad)
aad
loope
sbb
mov
test
pop
jg
add
jle
xor
outs
ins
repz
sbb
dec
adc
push
fstp
ins
pop
int3
enter
leave
mov
push
dec
lods
ins
sbb
jb
add
sbb
jg
call
ret
add
cmovl
adc
dec
lea
and
mov
xchg
lea
outs
add
rol
aas
js
cmp
add
ins
ins
xor
out
pop
adc
(bad)
lock
adc
push
cli
jns
sbb
retf
stos
sbb
lock
ret
mov
dec
ins
add
sub
shl
and
test
inc
sbb
retf
jmp
add
ss
cmps
adc
cmp
ret
dec
adc
and
pop
fidivr
aam
sub
js
js
xor
rol
mov
call
or
and
mov
or
and
loop
das
pusha
iret
and
rcr
(bad)
sbb
mov
cmp
jle
test
repz
inc
sbb
push
adc
fstp
sub
cmp
dec
cmp
call
enter
mov
stos
push
inc
or
mov
scas
adc
or
rcr
dec
cwde
ins
rcr
loop
sbb
cmp
je
test
push
ins
jns
jno
and
jg
cmp
gs
push
push
dec
lods
pop
jbe
into
mov
mov
(bad)
adc
bound
push
mov
push
push
loopne
jb
retf
ins
xchg
xor
je
xor
jl
mov
push
cmp
lds
test
ret
cmp
shl
fnstenv
pop
rol
mov
and
xchg
das
push
inc
call
(bad)
lahf
sbb
adc
jle
aaa
popf
push
add
mov
mov
pop
inc
mov
out
div
movs
push
ds
sbb
push
imul
nop
in
arpl
gs
out
cdq
push
pop
fs
jnp
jb
dec
pop
jg
xchg
xchg
fadd
dec
or
mov
push
pushf
es
dec
pushf
jne
cmp
int
sub
test
outs
repz
nop
scas
pop
mov
push
inc
sbb
sahf
data16
mov
push
loopne
cs
rol
push
dec
add
add
add
sti
and
add
lds
or
fild
data16
arpl
or
inc
outs
pop
push
cmp
or
push
nop
inc
mov
cmp
outs
adc
xor
mov
and
int3
mov
bound
in
pop
mov
add
int3
sub
stos
adc
xor
test
add
sub
cmp
(bad)
mov
and
cs
lods
pop
mov
adc
pop
or
mov
and
leave
mov
pop
stc
lock
dec
push
push
test
mov
xchg
cmp
dec
mov
inc
xchg
jg
sub
add
enter
test
dec
leave
adc
or
and
push
fs
or
cmp
jl
and
popf
sub
inc
lahf
xchg
pop
sub
jb
dec
mov
pop
sbb
sub
jno
or
loopne
jg
pop
or
mov
mov
gs
fisub
pop
and
enter
add
and
fs
dec
pop
jle
mov
and
test
mov
ds
movs
ja
xor
push
daa
call
sbb
or
pop
imul
pop
jns
aaa
int
popa
test
data16
into
ds
loop
and
jae
push
mov
push
mov
or
inc
in
cmp
mov
scas
xchg
ret
mov
(bad)
shl
add
dec
and
cmc
adc
push
mov
adc
pop
adc
cmp
sbb
xor
jne
sbb
test
jecxz
add
mov
dec
add
or
aaa
mov
add
inc
cmp
inc
out
add
pop
jne
jne
enter
push
add
cmp
dec
inc
jg
adc
xchg
daa
and
cmp
and
xchg
test
ret
pop
imul
push
pop
dec
cmp
mov
cmove
xchg
inc
test
or
in
stos
sbb
or
jmp
sbb
mov
sbb
pop
mov
inc
add
inc
jnp
js
into
cmps
push
or
bound
test
call
sub
bound
jg
not
das
add
shl
mov
push
pusha
int3
push
loope
sub
fnstsw
adc
add
cld
cmp
push
pop
aaa
or
sbb
lea
mov
xor
xchg
clc
pop
cmp
test
iret
inc
mov
adc
push
je
push
push
aam
js
ins
dec
stos
xor
ret
sbb
outs
outs
pop
fadd
add
or
adc
xor
dec
dec
shl
add
ds
pop
or
aaa
xchg
rcr
imul
dec
ja
mov
pop
cdq
cli
popa
add
xor
jmp
adc
inc
or
push
adc
push
shl
scas
shl
xor
or
jl
bnd
mov
xor
pop
imul
js
add
add
loope
jmp
or
xchg
ret
cmp
pop
rol
js
and
or
push
add
sar
add
shl
mov
add
dec
das
mov
lock
leave
pop
cmp
pop
xchg
inc
sahf
(bad)
adc
push
mov
imul
adc
iret
(bad)
jp
ds
imul
je
inc
push
adc
adc
punpcklbw
dec
sub
xor
pop
cli
sub
inc
aam
pop
push
(bad)
mov
and
pop
push
sub
jecxz
push
add
add
je
sbb
jmp
add
or
sete
dec
push
cmp
jle
add
inc
jns
popa
dec
aad
mov
ja
sbb
imul
push
sbb
adc
adc
cmp
aam
jg
or
jecxz
les
rcl
sbb
adc
xchg
lds
add
ret
xchg
sahf
pop
cmps
dec
or
lock
loope
jge
mov
std
fnstenv
sbb
jae
or
pop
sbb
jge
adc
cmp
sub
push
retf
pop
les
pop
daa
inc
call
push
push
fs
jl
aam
inc
mov
jmp
push
test
les
add
in
mov
inc
pop
out
add
add
jae
call
movs
ret
jmp
mov
xor
ds
popa
icebp
pop
mov
pop
(bad)
mov
or
cmovs
xchg
aad
jmp
test
inc
jl
fidivr
push
outs
add
adc
inc
mov
cld
jmp
fimul
cmp
mov
push
inc
adc
fimul
xchg
(bad)
mov
add
sub
sbb
fwait
lock
popa
aas
test
out
sub
shl
repnz
dec
loopne
lock
ds
add
scas
mov
int3
(bad)
ret
dec
int
jb
fadd
jbe
daa
sub
adc
call
add
(bad)
adc
and
jne
jecxz
or
xchg
sar
jno
or
pop
aam
cmp
jbe
xor
aaa
dec
test
fld
out
adc
call
popa
nop
pop
xchg
jmp
jmp
xchg
xor
fmul
lea
ins
push
adc
jge
push
in
lea
or
aaa
call
push
jl
mov
mov
xchg
sub
mov
test
ss
mov
icebp
ret
xchg
pop
addr16
lods
scas
xor
cmp
rol
push
ret
sbb
cdq
push
jo
or
pop
jmp
stos
js
in
je
jbe
sbb
pop
adc
inc
das
mov
adc
jbe
and
in
(bad)
push
push
call
push
(bad)
jge
aas
push
pop
adc
sub
(bad)
jl
mov
test
int
pop
shl
or
jb
nop
push
pop
xor
and
add
ret
cwde
pop
mov
xor
xchg
pop
popf
loopne
loopne
dec
ins
dec
aas
jg
ins
arpl
fld
cmps
stos
pop
adc
jmp
add
jb
xor
push
out
jb
xor
and
cmp
sbb
sub
outs
sub
enter
lods
data16
shr
and
(bad)
ror
jmp
xchg
mov
or
add
pop
mov
sub
xor
loopne
jmp
aad
ret
jns
add
push
ret
lea
jge
das
cdq
js
mov
nop
pushf
sub
mov
je
icebp
push
mov
sbb
add
nop
mov
cmp
sub
jg
pushf
scas
cld
and
sbb
push
push
and
cs
or
add
mov
sti
int
hlt
movs
and
or
push
add
xchg
mov
call
dec
mov
jecxz
xor
fs
xor
dec
xor
mov
out
mov
pop
push
and
or
push
loopne
stos
(bad)
jle
mov
mov
mov
lea
mov
mov
inc
inc
and
mov
test
pop
mov
inc
jnp
std
cmp
lods
push
cmp
push
and
sbb
and
sbb
dec
gs
data16
sbb
xchg
retf
adc
adc
and
adc
or
sub
or
or
scas
or
add
add
ss
dec
(bad)
sub
add
in
cmps
jge
pop
pop
dec
out
sub
xlat
mov
jns
ja
inc
das
(bad)
and
aas
lds
dec
je
xor
jo
push
pop
jp
inc
or
cmp
mov
pop
sub
jno
push
sub
je
sub
pop
add
pop
mov
mov
ins
inc
cld
jne
push
push
scas
aas
jo
push
das
add
daa
ret
add
test
mov
jmp
shl
jns
dec
out
pop
pushf
movs
mov
jne
xchg
mov
adc
xor
and
mov
pop
lock
sub
jp
in
and
mov
jns
bound
call
sbb
cwde
dec
jg
push
in
aam
imul
js
add
mov
inc
mov
inc
sbb
fcom
cs
and
adc
and
adc
ins
jge
cmps
push
cwde
mov
and
scas
or
rol
pop
(bad)
test
pop
sbb
loopne
fwait
xchg
fnstcw
pop
or
pop
mov
jb
push
xor
rcr
mov
std
aas
sub
outs
or
mov
lods
mov
hlt
xchg
adc
xor
sti
pop
enter
cmc
mov
mov
call
inc
or
mov
and
rol
jne
mov
add
xchg
arpl
and
pusha
dec
sbb
add
cmp
call
in
jmp
je
inc
xchg
into
and
sbb
add
adc
std
fmulp
add
push
aaa
sub
das
rcr
adc
call
pop
add
adc
(bad)
mov
out
loop
cs
stos
sub
stos
arpl
mov
aaa
popa
fisubr
inc
mov
je
adc
movs
outs
jp
jo
stos
sub
scas
cmp
cmp
mov
mov
sbb
mov
mov
cmp
pop
fidiv
adc
jg
call
and
dec
or
xchg
jp
clc
js
jmp
push
add
repnz
ss
jo
push
xchg
ins
enter
sbb
test
xor
or
aas
(bad)
push
push
sbb
test
shl
rol
and
in
pop
shl
push
mov
ret
jle
mov
mov
inc
and
mov
ss
sub
mov
inc
int3
or
sbb
(bad)
sbb
push
pop
aad
sar
test
gs
dec
dec
adc
cdq
cmps
sbb
sbb
inc
jle
and
pop
fidivr
sbb
sub
jne
jno
xor
push
cdq
adc
adc
les
dec
ret
movs
add
and
and
or
mov
std
cmp
jne
js
mov
and
xchg
add
daa
mov
adc
mov
or
(bad)
cmp
leave
mov
repz
push
scas
arpl
lods
cli
es
or
push
pop
into
push
inc
dec
ret
inc
jl
mov
or
inc
(bad)
mov
xor
adc
cmc
jb
gs
fild
das
pop
pop
push
push
(bad)
jl
(bad)
xchg
retf
shl
cld
adc
ror
sub
sbb
sub
push
push
std
pop
and
fst
lods
pop
pop
push
adc
fimul
fwait
jno
cmp
sub
ret
mov
addr16
retf
mov
push
fldenv
or
dec
pop
(bad)
dec
sub
inc
pop
sbb
jbe
dec
add
pusha
mov
pop
jg
(bad)
jae
je
popa
dec
jl
cmps
lds
scas
fs
inc
cmp
add
and
and
lods
mov
aas
jmp
pusha
movups
int
jge
(bad)
push
outs
sub
leave
je
pop
add
sahf
xchg
push
add
mov
(bad)
pop
xchg
arpl
mov
push
std
add
xchg
mov
sub
cmp
call
aam
fistp
inc
pop
xlat
cwde
and
loope
or
fiadd
lahf
test
add
sub
or
nop
xchg
bound
cmps
adc
rol
mov
pushf
inc
cwde
dec
pushf
dec
pop
jo
mov
add
xor
arpl
add
mov
mov
jns
outs
push
fisttp
mov
ds
pop
sbb
add
scas
mov
neg
stos
nop
push
xor
mov
push
call
adc
sbb
test
leave
fdivr
retf
dec
mov
mul
adc
call
add
or
or
xlat
(bad)
pushf
inc
cmp
add
push
push
mov
stos
xor
shr
fstp
xchg
inc
or
stc
mov
pop
add
imul
and
jp
pop
retf
stc
pop
cmp
jne
dec
retf
test
cs
in
fild
pop
adc
cmp
fidivr
out
xor
popf
cwde
adc
sub
imul
pop
jecxz
xchg
xchg
pop
add
push
fild
push
retf
retf
aad
adc
fisub
inc
push
ins
sub
xchg
cmp
dec
(bad)
sbb
pop
or
adc
into
xlat
les
ja
mov
and
and
imul
lods
xchg
shr
sbb
push
imul
push
mov
mov
pop
xchg
cmp
dec
pop
mov
jae
add
push
xchg
jne
(bad)
cli
int
mov
pop
test
lock
(bad)
aas
call
std
add
add
inc
pop
and
mov
shl
jg
call
hlt
pop
imul
scas
jg
pop
rcr
push
call
out
ret
test
and
call
add
mov
in
push
inc
movs
mov
dec
jge
jp
sub
jae
mov
ret
dec
xchg
adc
call
mov
xor
sub
push
mov
mov
mov
mov
xchg
lock
xor
clc
outs
push
dec
pop
mov
mov
jmp
inc
mov
jle
jp
mov
cmp
jae
mov
cmp
jae
adc
xor
std
jl
inc
sahf
sub
popa
and
or
xchg
loop
cmp
mov
shl
or
mov
aam
mov
retf
shl
or
retf
shl
push
dec
jmp
inc
sub
xchg
loope
jbe
or
popa
and
lods
clc
movs
pusha
jo
or
frstor
pop
inc
mov
cdq
inc
aaa
or
push
fild
xor
stos
pop
add
pop
aas
popa
jnp
push
cdq
rol
mov
mov
icebp
xchg
scas
fadd
mov
lea
nop
jp
cli
adc
ror
ja
pop
(bad)
and
sbb
loope
inc
inc
xlat
in
popa
movs
or
test
outs
std
push
sub
jne
or
mov
push
shl
adc
enter
xor
sbb
xchg
dec
cvtps2pi
inc
sub
enter
add
enter
push
xor
jmp
out
or
xchg
mov
xor
cmps
cmp
jp
xchg
nop
dec
or
mov
adc
add
pop
inc
call
pop
jmp
sub
add
outs
jg
mov
test
(bad)
mov
cwde
jnp
ret
cmp
cmc
dec
add
and
test
mov
adc
ins
inc
cmp
adc
mov
xor
lock
push
or
mov
mov
or
call
jg
sub
push
push
call
xchg
push
pop
jg
cmp
inc
cmp
mov
pop
mov
xor
push
xchg
ret
mov
test
je
add
cmp
inc
ror
mov
icebp
jp
mov
ds
mov
sbb
imul
fist
rcl
inc
repnz
mov
enter
jne
test
je
dec
xchg
push
cmps
push
test
pop
ins
mov
sbb
dec
push
cli
push
dec
repnz
mov
adc
adc
repnz
inc
cld
cmp
add
addr16
xchg
ret
xor
mov
lock
pop
fidiv
sub
jmp
mov
add
lods
call
push
retf
add
(bad)
outs
and
aaa
xchg
jmp
sbb
add
loopne
add
les
inc
pushf
mov
pop
push
mov
inc
cmp
sti
or
ret
xor
inc
sti
fsubrp
sbb
adc
adc
sub
pop
sbb
inc
pop
retf
jmp
mov
mov
loopne
inc
je
inc
push
push
sub
push
repz
jo
push
ret
adc
neg
xor
mov
adc
push
push
mov
jmp
push
jo
inc
pop
sub
pop
add
imul
test
sub
xlat
(bad)
icebp
jl
jmp
ds
push
cwde
pop
sub
call
shl
cmp
push
inc
shr
fwait
sub
or
or
sub
sub
jns
iret
sub
push
adc
data16
inc
push
sbb
inc
mov
push
add
push
mov
in
mov
push
fadd
xchg
and
cmp
fdiv
and
sbb
(bad)
(bad)
les
adc
inc
inc
dec
clc
xchg
add
imul
fdivrp
xor
add
dec
mov
lods
popf
out
xchg
add
(bad)
sar
sub
adc
and
repnz
(bad)
push
push
sub
or
adc
add
sbb
rcl
mov
xchg
or
call
inc
ret
jmp
rcl
pop
push
push
sahf
test
rol
scas
inc
(bad)
fnstenv
xor
mov
or
cmc
cmps
add
sub
mov
inc
and
js
cwde
or
and
push
sub
mov
popa
mov
xlat
cdq
pusha
or
and
mov
push
inc
dec
xchg
cwde
lea
and
sbb
fs
inc
lea
pop
mov
retf
or
cmp
loopne
cwde
sbb
jge
test
fsub
(bad)
jne
pop
mov
ret
adc
aad
inc
fwait
mov
and
pop
dec
lods
mov
dec
int
push
dec
sbb
push
div
add
xlat
and
sti
cmp
cmp
cmp
or
(bad)
test
daa
push
clc
push
add
sbb
aam
push
and
test
ins
nop
out
adc
lahf
push
popf
pop
ins
inc
push
xor
cdq
adc
js
dec
adc
or
mov
push
or
ror
ficom
pop
sub
cmp
sub
mov
jno
inc
pop
es
cld
mov
test
or
test
mov
mov
xor
in
cmp
rol
sub
cld
push
lods
fst
js
push
sbb
enter
push
sbb
dec
cmp
add
jne
and
add
fnsave
je
sahf
adc
sub
mov
sub
sub
in
add
mov
(bad)
aad
sbb
add
jmp
in
adc
and
lea
fadd
add
ja
mov
sub
mov
es
cmp
push
xor
stos
adc
cmp
lods
ins
push
push
mov
sbb
dec
sub
ins
cmp
xor
mov
push
sub
push
mov
inc
mov
fiadd
and
jns
ds
fisub
outs
scas
mov
lea
inc
cdq
je
cmp
xchg
or
fld
call
std
xor
adc
jmp
xchg
dec
and
cdq
jp
scas
add
test
add
mov
and
cdq
inc
loopne
xor
and
sbb
fs
ins
les
sbb
push
je
and
cmps
mov
scas
ins
in
or
inc
dec
pop
push
cmp
inc
ds
cs
aad
ret
jmp
cmp
ins
push
mov
ret
pushf
das
pop
fnstcw
xor
rcl
sub
push
sbb
mov
push
movs
adc
sbb
fcmovnbe
jecxz
xchg
test
outs
dec
mov
div
mov
add
pop
(bad)
call
enter
add
cmp
xchg
dec
mov
ins
and
add
or
mov
inc
fstp
and
pop
dec
jnp
mov
pusha
mov
rol
ret
adc
xchg
push
ds
ret
jb
mov
dec
shl
cmp
mov
mov
cmp
loop
(bad)
mov
lahf
mov
pop
or
ss
pop
xor
xor
push
cmp
pop
jmp
xchg
dec
pop
movs
call
outs
or
dec
fisttp
shr
ja
pop
push
push
xor
fmul
enter
adc
dec
sub
(bad)
fst
outs
xor
push
sbb
test
es
call
clc
add
or
test
ret
pop
inc
pusha
stos
push
fbld
fsubr
movs
hlt
fidivr
arpl
pop
mov
nop
mov
or
sbb
ins
sub
je
cmp
add
dec
dec
punpckldq
jo
movs
or
pop
xchg
movs
or
mov
cwd
xchg
aas
mov
adc
imul
xor
sbb
cs
enter
jp
lea
movs
enter
pop
push
mov
in
addr16
mov
adc
push
lahf
std
add
daa
add
add
daa
inc
adc
xor
jmp
movs
sbb
fs
sbb
cmp
out
cmp
adc
inc
push
mov
jo
test
pop
and
inc
push
jno
ins
lahf
retf
mov
and
outs
jl
push
(bad)
je
or
cmp
sbb
fbstp
in
push
xor
cmp
xor
in
cmp
inc
inc
mov
loope
push
iret
dec
adc
push
or
ficomp
push
cmp
mov
mov
cwde
push
sub
clc
or
jne
test
(bad)
dec
or
and
pusha
push
push
imul
cdq
lods
push
pop
add
and
push
test
push
sub
pop
and
cmp
inc
and
ret
sbb
and
jbe
jns
je
and
aam
xchg
loope
in
sub
sbb
inc
or
jg
xchg
pop
retf
push
leave
jp
aaa
adc
adc
out
push
(bad)
leave
add
and
xchg
ret
outs
mov
or
add
pushf
pop
jge
and
daa
xchg
pop
movs
lock
and
inc
mov
jnp
xchg
adc
sbb
test
lock
adc
js
aas
xor
inc
xor
dec
and
cmp
outs
sub
sbb
mov
inc
movs
scas
push
dec
stos
add
aaa
or
mov
call
push
mov
pusha
js
fcom
loop
fisub
loope
push
dec
dec
ret
mov
pusha
stos
jp
jo
mov
cmps
out
adc
xor
and
daa
es
data16
sub
inc
call
rcl
xchg
mov
jnp
and
mov
cmp
aad
lea
nop
pop
push
je
xor
sub
push
into
addr16
test
(bad)
xchg
xor
pop
aam
sub
out
mul
out
bound
fsubp
inc
pop
or
les
push
pusha
adc
mov
and
inc
fs
push
movs
jns
mov
std
js
cmp
sub
aaa
cdq
sar
mov
adc
cmp
mov
jp
cmp
jmp
daa
inc
or
lock
add
xor
shl
mov
in
sbb
out
into
adc
inc
popa
fidivr
enter
nop
add
jg
aaa
shl
or
arpl
jno
push
cmp
test
imul
push
hlt
ret
aaa
icebp
push
sar
inc
push
jl
pop
and
lahf
aad
and
(bad)
(bad)
iret
mov
ret
pop
xor
mov
imul
pop
pop
push
imul
push
dec
sbb
push
pop
popa
test
out
fld
lock
push
les
fst
sbb
push
jbe
push
aas
ficomp
sti
push
jb
xlat
call
and
outs
cmp
aas
outs
shr
and
ds
sbb
add
sbb
dec
jp
push
dec
add
cmp
dec
loopne
mov
add
sub
cmp
loopne
test
sbb
js
pop
sub
sbb
push
mov
xor
or
push
adc
xor
sbb
hlt
lea
addr16
enter
pop
mov
or
lahf
push
cwde
or
fstp
xchg
and
add
sub
sub
sub
add
jmp
mov
xor
mov
adc
or
or
pusha
xor
dec
retf
jmp
dec
ins
nop
(bad)
jmp
jns
cmp
popf
scas
mov
movs
or
inc
or
cmc
nop
push
mov
inc
es
cmp
dec
push
out
push
push
call
(bad)
and
popa
imul
out
cs
repz
(bad)
push
popf
nop
or
lods
xor
cmp
pop
mov
stc
pushf
mov
scas
hlt
add
pushf
fldenv
and
stos
xor
or
xor
inc
fisttp
call
rol
xchg
lods
ds
mov
xor
aas
lds
jg
jae
rcl
sbb
push
mov
les
jmp
dec
pop
jne
lea
mov
adc
or
pushf
sbb
pop
jae
adc
sbb
loop
bound
fst
fild
dec
add
xor
outs
adc
lds
in
jmp
inc
dec
add
mov
or
pop
and
pop
shr
add
and
lods
xor
loopne
pushf
jl
push
mov
daa
lods
mov
pop
call
jl
or
bswap
jo
inc
fisttp
push
or
loope
lods
mov
or
cmp
(bad)
jae
push
jb
push
fwait
sbb
xchg
inc
aad
retf
push
movs
(bad)
stos
and
dec
rcr
xor
enter
ins
or
sbb
and
or
push
and
inc
xor
sub
inc
dec
(bad)
retf
xchg
jp
pop
dec
inc
inc
and
mov
movs
fwait
rol
adc
pop
ja
sub
mov
push
jne
push
popa
cs
push
push
das
nop
push
push
pop
mov
mov
mov
and
sbb
inc
mov
or
je
adc
add
add
xchg
or
aaa
loop
pop
adc
fpatan
add
push
and
aad
ret
mov
push
add
pop
mov
shl
mov
fs
jl
scas
rol
cmc
dec
mov
test
add
cli
jecxz
pop
inc
sbb
pusha
push
xor
jge
push
fadd
add
loopne
iret
mov
outs
or
mov
test
test
jmp
daa
ja
shr
mov
xor
sbb
mov
and
inc
push
xchg
or
push
dec
sub
jnp
inc
add
fs
dec
sbb
push
inc
sub
test
mov
retf
sbb
jne
inc
mov
jmp
mov
mov
cmps
mov
or
leave
jl
movs
xchg
je
aam
inc
inc
ret
into
inc
out
rcl
cs
or
(bad)
arpl
jg
sub
and
sbb
xor
rcr
or
movs
xchg
mov
push
fnstenv
scas
or
push
cwde
sbb
cmp
shl
sbb
jae
jge
xchg
sbb
push
iret
pop
xchg
or
push
mov
(bad)
push
push
les
sub
ins
pop
sub
add
jl
xchg
movs
jl
pop
sbb
push
and
bound
mov
inc
test
test
mov
pop
es
pop
je
pushf
mov
add
daa
xchg
inc
inc
inc
imul
repz
lahf
mov
xor
sbb
pop
les
aam
mov
inc
inc
add
sbb
bound
fs
pop
push
arpl
jnp
and
adc
xor
ins
push
mov
inc
out
cmp
pop
aaa
pop
neg
pop
dec
imul
fidiv
int
out
pop
cs
lea
adc
adc
mov
lahf
sbb
movs
jno
add
enter
pushf
fbld
aas
cld
mov
mov
arpl
imul
or
dec
call
lods
or
mov
aam
cld
adc
out
ins
ret
shl
pslld
lods
or
xchg
inc
xchg
jp
ret
popa
or
js
pop
pop
sahf
adc
lahf
cmps
jnp
push
(bad)
loop
loopne
cld
and
add
sar
imul
into
xchg
ins
or
push
lods
jo
out
xchg
mov
pop
and
rcl
mov
cli
pop
sar
push
jne
lea
movs
inc
mov
and
and
not
or
data16
mov
(bad)
sub
dec
or
cmps
jmp
adc
outs
mov
and
sbb
dec
repz
ja
jne
jmp
int
or
adc
or
mov
dec
cmp
stos
rcl
js
or
and
adc
jmp
sbb
hlt
ret
test
xor
cmp
test
and
loop
int3
fisubr
pop
xor
push
pop
enter
hlt
jne
pop
xchg
into
rol
rcl
cmp
adc
ds
add
pop
shl
stc
stos
pop
xchg
out
jmp
cmp
jg
sti
inc
sti
test
push
add
sahf
ja
es
add
sbb
adc
mov
mov
imul
sub
loope
sub
lea
jle
pushf
mov
xchg
push
pusha
ret
mov
xchg
enter
lods
add
data16
or
jmp
add
jne
mov
or
imul
outs
daa
rol
fs
inc
lea
cmovno
push
pop
rcr
aaa
clc
shl
sbb
es
xor
and
jo
adc
pop
jo
sbb
sahf
inc
fimul
pop
ss
sub
fild
inc
and
inc
sub
shr
mov
pop
cmps
mov
mov
push
inc
pop
dec
push
sub
fiadd
(bad)
dec
xchg
gs
pop
adc
pushf
dec
xchg
aad
push
xchg
xor
inc
cmp
push
inc
and
shr
fcom
les
or
daa
test
inc
or
mov
jl
jg
jp
sbb
adc
outs
add
std
(bad)
push
test
pop
ror
push
add
lea
(bad)
inc
sub
sbb
lahf
or
movhps
add
rcr
add
add
jne
test
and
inc
mov
add
nop
test
inc
stos
sub
arpl
cmp
xor
and
pop
push
imul
mov
bound
xchg
(bad)
adc
test
mov
xor
popf
sbb
add
sti
popa
call
and
inc
and
sti
or
inc
push
es
sbb
jnp
add
cmp
lods
cmps
test
cs
and
mov
enter
dec
sti
xchg
int
rol
call
inc
sbb
mov
pop
or
(bad)
push
add
pop
fild
(bad)
les
fld
popa
adc
mov
repz
cdq
dec
sbb
es
mov
das
pop
mov
scas
sbb
lods
ins
or
adc
fs
xchg
pushf
mov
push
sar
sbb
xchg
mov
pop
push
and
push
xchg
push
or
fs
popf
out
pop
mov
mov
push
xchg
push
call
pusha
das
pop
sub
push
adc
jo
push
push
sbb
out
add
sti
jmp
sbb
inc
add
test
lea
mov
sbb
adc
rcl
and
ins
(bad)
mov
jne
hlt
dec
add
xor
mov
mov
addr16
call
mov
push
(bad)
push
or
sub
xor
sub
adc
jg
pop
jmp
mov
xchg
retf
call
les
ret
in
inc
xor
(bad)
les
mov
imul
pop
mov
(bad)
cmps
es
dec
add
shr
jne
(bad)
dec
pushf
or
xor
cld
xor
or
div
pop
adc
xchg
and
push
and
movs
ins
stos
add
push
je
rcr
jns
inc
std
jno
sub
jecxz
popa
lods
xchg
hlt
inc
push
js
cmps
pushf
popa
pop
inc
jle
sbb
push
mov
pop
add
pusha
daa
xchg
add
lods
jle
test
sar
push
xor
mov
pop
mov
inc
out
inc
jb
sbb
mov
fmul
rcr
dec
push
cwde
dec
jmp
jnp
ficomp
loopne
movs
mov
mov
ins
sbb
jle
and
sub
push
add
dec
lea
or
mov
ret
jecxz
outs
and
(bad)
xchg
inc
(bad)
sbb
jbe
and
arpl
xchg
pandn
mov
add
jl
add
loopne
mov
add
push
ds
stos
lea
pusha
sar
or
movs
push
dec
xchg
lea
inc
nop
scas
push
pop
pop
int
popf
or
push
enter
and
movs
inc
sbb
clc
xor
mov
push
jns
call
mov
sub
adc
xor
xchg
out
add
ficomp
mov
movs
test
jecxz
mov
aaa
and
or
adc
pop
cmps
test
pop
jmp
pop
push
add
arpl
sub
sub
aam
add
jge
fsub
loopne
mov
cs
mov
mov
or
jo
adc
push
loopne
fidivr
pop
in
enter
cmp
call
dec
xchg
fs
sub
loopne
lods
fimul
ficomp
mov
inc
imul
sub
dec
(bad)
(bad)
and
inc
mov
cmp
ds
mov
in
pushw
add
push
pop
out
pusha
add
xchg
jae
(bad)
or
popf
int
and
retf
aaa
or
push
cs
movs
xor
outs
jl
and
pop
sbb
xor
push
mov
lock
jo
ins
and
xchg
nop
push
cmc
add
xchg
push
cmp
xor
dec
call
std
add
test
pushf
ror
add
fist
clc
in
push
add
inc
push
out
pusha
jno
adc
cld
iret
neg
ins
or
out
xchg
xor
mov
or
push
push
sub
push
jns
imul
push
jp
cmp
lea
push
fcomp
mov
call
div
sahf
sbb
xor
inc
fadd
outs
es
pop
popa
push
add
push
ret
fild
test
push
outs
or
dec
pop
in
xor
rcr
cmps
aad
test
dec
pushf
retf
lock
sbb
mov
sbb
mov
xchg
mov
(bad)
out
dec
and
inc
xchg
das
xchg
adc
cdq
and
cs
call
sbb
jae
push
xchg
leave
lea
mov
adc
or
cmps
or
jne
sbb
sbb
or
push
dec
imul
not
lahf
add
jmp
ins
inc
mov
fbld
lock
dec
mov
inc
adc
push
sub
lods
dec
pop
loopne
inc
rcl
mov
and
mov
out
mov
adc
jne
mov
mov
mov
maskmovq
imul
rcl
ins
cmc
add
push
or
mov
mov
out
inc
add
sub
mov
push
popa
sub
cmp
pop
inc
or
movs
sub
cmc
add
pop
or
mov
push
es
and
cmp
or
lods
lods
dec
mov
not
aad
cdq
jle
sbb
mov
sub
inc
lahf
or
xor
mov
retf
add
sbb
mov
lods
test
push
mov
or
sub
add
push
loopne
push
push
ins
ins
js
mov
mov
sbb
xor
sbb
repz
into
inc
fs
push
test
test
sahf
(bad)
fadd
inc
xor
fsubr
pop
call
sub
rol
fldcw
and
je
jnp
rcl
mov
dec
je
dec
mov
or
retf
(bad)
mov
mov
sub
test
sbb
cmp
inc
sub
test
or
repz
call
adc
jmp
cmp
jge
mov
pop
sbb
out
mov
popf
aas
jmp
sar
ret
add
inc
sbb
and
ins
aaa
and
andnps
adc
scas
rol
add
or
js
int
rol
or
cmp
ror
jb
sbb
pop
add
nop
movs
shr
call
push
mov
xor
jg
inc
sbb
jecxz
inc
es
inc
outs
jo
sub
inc
add
or
out
sub
stc
pmaddwd
or
ret
pop
bound
adc
ret
jle
xchg
or
sar
inc
ss
xor
cmp
paddsb
jae
ret
ret
or
imul
pop
xor
jo
mov
mov
pop
scas
add
ins
dec
inc
adc
or
sbb
scas
mov
loop
dec
add
in
cs
sbb
add
mov
shr
sar
call
cld
push
pusha
jmp
push
fistp
clc
(bad)
push
clc
inc
xchg
cmp
mov
mov
or
inc
add
pop
inc
push
jbe
das
or
stos
push
je
xchg
inc
adc
push
adc
or
pop
lods
push
add
add
mov
imul
jo
sub
add
stos
xor
das
mov
mov
outs
rcl
movs
sub
mov
jmp
push
jle
lahf
fiadd
repnz
or
dec
jne
or
mov
push
mov
aaa
fs
jg
and
inc
cmp
mov
imul
push
jmp
jo
jnp
pop
inc
scas
inc
and
xor
pop
dec
inc
lods
jg
jne
aam
inc
pop
test
test
push
xchg
dec
aam
sub
ret
dec
jmp
push
shl
cmps
or
xchg
jl
loop
(bad)
es
adc
jle
pop
dec
inc
add
xlat
push
and
jmp
imul
scas
fmul
adc
sbb
pop
xor
shl
push
ror
js
jl
scas
or
call
adc
and
or
mov
xchg
test
clc
inc
xor
sahf
cld
movs
sub
sbb
push
push
dec
adc
add
inc
jp
fwait
popf
ss
add
or
adc
jmp
enter
adc
jmp
loopne
add
jnp
rol
dec
or
sub
sbb
inc
(bad)
adc
and
and
add
sbb
in
sbb
jo
and
and
and
jmp
xchg
xchg
cdq
cdq
sahf
push
sub
jb
ss
sub
dec
scas
mov
inc
inc
loopne
jg
add
xchg
iret
cmp
jle
inc
mov
push
or
addr16
jo
cmp
call
adc
or
arpl
out
jmp
outs
add
dec
imul
pop
mov
push
sbb
dec
ds
mov
mov
ret
inc
adc
ds
adc
adc
dec
dec
cmpxchg
pop
jmp
xor
or
les
xchg
dec
in
jge
adc
ret
movs
push
test
or
addr16
mov
movs
repnz
int3
rcl
iret
clc
rol
pop
jmp
rcr
popa
add
cmp
xchg
test
sbb
sbb
or
xor
idiv
add
fbstp
push
fbld
cmp
out
or
mov
and
ins
pop
retf
pusha
frstor
sbb
or
aas
jno
mov
lods
nop
ins
ds
aam
mov
or
mov
mov
push
ss
cmp
int3
sbb
sbb
xor
leave
aaa
adc
pop
or
xor
in
or
mov
mov
jbe
jl
adc
pop
clc
mov
xchg
mov
in
enter
push
stos
dec
cmp
inc
mov
ficom
jo
rcr
jmp
cmp
or
add
test
mov
(bad)
ds
movs
jne
ret
out
lods
sbb
jne
add
aam
fcom
sub
out
xor
push
push
xchg
les
push
adc
dec
je
add
std
inc
adc
dec
inc
pop
rcl
xchg
xor
call
jbe
call
ja
loopne
and
add
inc
pop
or
or
inc
pop
and
out
jns
push
mov
jo
jo
sub
mov
mov
mov
adc
cmp
shl
add
push
rol
cwde
cwde
or
jp
and
loop
push
push
xor
push
jne
mov
sbb
(bad)
inc
jne
test
xchg
and
sbb
test
fsub
mov
sbb
dec
mov
mov
out
fadd
xchg
or
mov
int3
mov
adc
jmp
cdq
push
cmp
inc
push
leave
jmp
sub
pop
or
fimul
mov
add
stos
(bad)
outs
test
out
jl
adc
dec
or
xlat
cmp
or
fnclex
inc
push
cmp
sbb
fdivr
cmp
int
adc
rcl
inc
sbb
pop
push
(bad)
mov
mov
mul
cmp
jle
lea
lea
sub
mov
popf
inc
mov
out
add
and
sbb
lock
add
pop
test
test
outs
mov
loopne
cli
pop
jbe
push
add
js
sbb
(bad)
mov
mov
mov
mov
int
mov
pop
or
cmp
cmp
sub
mov
jl
daa
out
cmp
fcmovnb
mov
pop
mov
push
sbb
in
pop
or
xchg
mov
xchg
test
add
jnp
jmp
loop
jo
mov
lds
jae
adc
and
sbb
out
test
dec
or
call
aaa
jnp
(bad)
sti
and
loope
sub
and
adc
dec
adc
bound
jge
popa
ins
cmp
adc
inc
mov
aad
rol
aas
nop
push
push
je
outs
inc
pop
mov
inc
sub
mov
pop
inc
inc
outs
inc
dec
(bad)
sub
pop
fucomi
add
ins
retf
js
retf
and
call
enter
retf
sub
adc
test
mov
dec
js
and
test
jbe
sub
and
add
les
push
call
xor
xor
pop
inc
adc
mov
add
and
sbb
js
add
adc
inc
pop
dec
(bad)
fnstcw
and
xchg
and
and
out
je
sahf
cmp
sbb
mov
or
cs
test
mov
ins
jmp
outs
sbb
(bad)
jmp
leave
test
sub
or
fucom
sub
adc
jbe
xor
pop
adc
pop
std
jg
adc
adc
fwait
push
(bad)
pop
ret
xlat
int3
cmp
mov
outs
jnp
jp
add
lock
cdq
add
adc
push
loope
and
loopne
and
or
sbb
lods
xchg
iret
das
aad
push
(bad)
pop
mul
jmp
std
jl
sbb
push
cmp
outs
dec
in
sbb
cwde
nop
leave
fistp
jb
movs
bound
into
xchg
cmps
push
dec
sub
cmc
and
pop
ins
jp
xor
gs
push
pop
jb
add
jb
xor
(bad)
xlat
cmp
jp
inc
and
bnd
iret
mov
push
popa
jo
loop
push
add
xlat
pop
daa
sbb
pop
sbb
xor
mov
loopne
jnp
adc
mov
or
es
data16
je
call
push
call
dec
add
or
cmps
in
push
push
or
or
mov
es
inc
add
sbb
ins
sbb
mov
call
inc
add
inc
(bad)
in
fs
mov
xchg
mov
pop
mov
mov
and
inc
dec
xor
cmovae
or
mov
or
add
pop
cmp
ficomp
fs
push
add
or
pop
adc
add
pushf
jle
add
daa
push
inc
addr16
arpl
fmul
shl
and
shr
into
and
jo
lock
xchg
jo
inc
mov
xlat
adc
inc
add
fst
push
shr
sbb
sbb
mov
xchg
or
ja
rcr
mov
(bad)
fsub
inc
outs
test
(bad)
sbb
(bad)
jmp
mov
aad
lods
and
sub
ror
add
mov
aam
mov
jb
pinsrw
fbstp
mov
jbe
inc
daa
sbb
aam
mov
add
pop
ds
mov
xchg
pop
sub
repnz
xchg
mov
adc
adc
mov
xor
jb
lahf
pop
sub
ins
shr
scas
aam
gs
pop
add
int3
push
mov
and
push
or
or
jmp
cmp
and
and
adc
sub
or
cmp
ret
fdivr
cmp
dec
pop
or
add
xchg
push
nop
adc
mov
mov
inc
add
inc
sbb
or
retf
paddb
ins
daa
sub
push
pop
lods
dec
fwait
int
jle
mov
outs
leave
fsubr
inc
pop
pop
movs
leave
and
push
lods
cmps
jg
call
add
adc
pop
push
adc
rol
add
mov
xchg
inc
dec
mov
daa
sub
retf
sbb
push
dec
push
add
push
and
sbb
scas
fs
jle
add
aaa
dec
xchg
pop
jnp
push
dec
mov
and
ds
mov
add
(bad)
mul
rcr
les
test
in
sbb
shr
add
sub
or
lods
mov
adc
xchg
fcom
addr16
cmp
arpl
stos
xor
imul
add
lods
psubw
add
cs
jns
jecxz
sbb
fcom
stc
mov
pop
xchg
xchg
add
lods
call
scas
xlat
movs
mov
daa
ror
iret
sar
(bad)
push
mov
inc
push
push
add
and
mov
add
mov
jl
push
and
mov
shr
add
dec
pop
and
jb
and
cmps
in
imul
inc
jo
add
and
enter
or
sub
push
mov
mov
push
jle
cld
mov
or
aad
pop
adc
test
pop
add
or
dec
and
(bad)
idiv
jp
inc
rol
das
nop
sti
jecxz
scas
sbb
sahf
push
inc
mov
jle
push
dec
sbb
dec
pop
adc
sub
push
cmp
push
fstp
sbb
sbb
sub
adc
xchg
sub
cmp
inc
cmp
outs
inc
psrld
push
push
ror
jnp
push
mov
enter
lods
mov
movs
adc
mov
xchg
imul
mov
ret
dec
call
pushf
or
inc
add
add
es
add
out
int3
(bad)
ret
sub
push
jbe
push
add
jns
pop
sbb
sbb
test
call
xchg
adc
push
mov
xor
jge
or
or
clc
out
inc
test
mov
push
xchg
inc
pop
add
pop
add
rol
das
cmp
retf
stos
push
sbb
fst
xor
or
add
adc
cmp
aam
rcl
loope
jle
dec
or
pop
and
out
cs
bound
popa
push
icebp
cmc
jl
inc
pop
aas
inc
inc
jl
add
dec
add
cmps
mov
cld
xor
mov
cmc
or
xor
enter
adc
xchg
fbld
or
sbb
jmp
mov
add
mov
pop
adc
push
jp
cmp
imul
test
add
fwait
jle
adc
pop
pop
mov
inc
or
jo
arpl
xchg
dec
mul
jecxz
cmp
xchg
scas
sbb
cmp
adc
sti
jecxz
sbb
shr
cli
sbb
ret
aas
and
sti
sti
sbb
add
into
and
xchg
das
or
mov
cmp
clc
cli
sbb
pushf
jnp
add
mov
xchg
fisubr
and
mulps
and
int3
and
push
adc
adc
pop
hlt
sbb
adc
lods
jl
add
adc
frstor
call
adc
test
inc
mov
add
bound
or
cs
jo
inc
retf
pop
aam
rcr
scas
push
xor
pop
add
jno
mov
out
xchg
or
enter
or
dec
scas
pop
sbb
push
mov
pop
lock
xor
mov
mov
inc
loopne
add
jnp
cmp
fidiv
and
cmp
(bad)
mov
sbb
jne
pop
ror
lea
and
inc
add
xor
push
sbb
call
mov
xchg
imul
jno
rcl
jg
jnp
(bad)
lock
je
push
jbe
sbb
sub
push
cmp
add
stc
sti
(bad)
cmps
or
cmp
movs
pop
test
push
test
ins
pusha
mov
movs
inc
add
(bad)
mov
or
cs
or
out
sub
clc
mov
jae
call
or
inc
arpl
mov
jns
lahf
inc
cmps
sbb
or
push
push
ins
loopne
dec
pop
dec
sbb
inc
pop
and
fs
cmps
xchg
mov
lock
fsubp
push
fs
adc
mov
xchg
push
les
mov
shl
loopne
(bad)
pop
sbb
sub
ror
es
call
aad
call
xchg
add
mov
pop
push
adc
adc
push
lds
jl
or
fmul
popa
xor
scas
xchg
cmp
or
mov
add
mov
sbb
daa
call
jmp
gs
jno
jg
mov
pop
(bad)
pop
bound
or
shr
xchg
dec
adc
jns
sbb
enter
add
fchs
xor
leave
repz
arpl
push
inc
jns
jge
inc
dec
popa
mov
adc
push
sti
mov
mov
jmp
xchg
ds
loopne
adc
add
inc
sbb
xor
lods
xor
or
out
pop
jno
add
rcl
adc
inc
ret
pop
fstp
fimul
xor
add
in
add
(bad)
jmp
mov
or
imul
je
or
push
add
xor
loop
cmp
sbb
shr
mov
pusha
call
fld
add
aas
and
in
pop
cli
push
jne
lea
inc
ins
inc
jnp
out
sub
enter
outs
test
push
jg
sbb
jl
jmp
scas
loopne
adc
pop
cmp
nop
fnstenv
mov
in
dec
cmp
arpl
test
push
imul
or
pop
cwde
hlt
popf
mov
outs
or
leave
adc
pop
cdq
pop
push
cli
mov
cmp
rol
xchg
dec
pop
bswap
pop
test
movs
lds
pop
mov
mov
push
push
sar
dec
rcl
test
(bad)
push
pop
test
push
add
push
hlt
cmp
jl
pop
arpl
xchg
adc
push
xor
lds
push
cmps
pop
push
cmps
adc
je
jo
ret
test
fisttp
xor
mov
mov
sti
out
sub
xchg
push
add
add
sub
repz
(bad)
cmovae
xchg
xchg
mov
popf
inc
push
mov
out
in
pop
call
lds
pop
push
loopne
and
push
xchg
popa
sub
ins
xchg
inc
jb
add
scas
rcr
int3
lahf
outs
xchg
out
mov
push
int
mov
cmp
sub
push
ror
lods
adc
jmp
or
push
nop
outs
push
push
int3
outs
addr16
add
jg
popa
stos
clc
and
pop
jns
push
dec
mov
(bad)
mov
push
adc
push
mov
aaa
loope
ins
xchg
fucomip
push
pop
xchg
je
sbb
pop
pop
outs
or
xchg
out
cmc
arpl
xchg
xchg
addr16
(bad)
or
inc
mov
adc
dec
mov
push
or
pop
test
sti
pop
sbb
cdq
inc
xor
aaa
push
retf
(bad)
sbb
push
xchg
add
adc
nop
jp
jge
fmul
or
xor
fdiv
add
ret
push
or
loopne
imul
fild
loopne
fcomip
dec
cld
leave
lock
xor
xor
test
test
mov
in
dec
xor
test
mov
mov
xchg
mov
cs
lock
fwait
in
jmp
mov
cwde
clc
or
jg
xor
ret
jg
jne
test
stos
pop
adc
sbb
and
or
pop
imul
inc
mov
adc
dec
adc
fcomp
push
outs
fmul
je
arpl
inc
mov
push
dec
pop
add
in
adc
push
inc
dec
jo
in
mov
mov
cmp
cmp
and
or
push
mov
jecxz
adc
jle
jle
adc
out
(bad)
jmp
popa
out
sub
out
sub
test
cmp
pop
cmps
out
push
or
adc
cmps
adc
mov
rol
mov
sbb
rol
xchg
mov
push
stos
clc
or
jmp
mov
pop
mov
test
push
rcr
add
imul
cs
sbb
imul
dec
ret
jmp
test
push
gs
enter
cmp
sub
push
movs
push
inc
shl
popa
or
mov
push
adc
rcr
sbb
mov
sub
psubsb
mov
xor
imul
mov
sub
ror
rol
xchg
jmp
movs
shl
add
movs
rep
cmps
pop
mov
or
push
out
add
push
push
je
retf
mov
movs
inc
mov
mov
inc
inc
mov
in
and
add
dec
(bad)
mov
mov
pop
mov
cmc
adc
je
jae
repnz
add
cmovne
inc
repz
mov
push
or
and
cmp
and
test
lock
push
adc
xor
in
(bad)
jae
popf
ds
or
repnz
cmp
daa
pop
pop
inc
cmp
inc
xchg
loope
push
inc
loope
mov
leave
das
inc
jge
pop
mov
sti
mov
cld
push
and
mov
fld
lds
les
add
loope
fstp
push
adc
xchg
daa
xchg
call
sub
jge
neg
jmp
push
pop
fsub
mov
add
and
add
fisttp
mov
in
ret
sbb
mov
dec
ret
mov
jge
out
pop
mov
or
mov
pop
js
jg
dec
scas
dec
inc
add
xor
push
or
mov
push
cs
xchg
(bad)
mov
mov
cmp
addr16
sub
mov
wbinvd
(bad)
lds
icebp
enter
add
pusha
push
ja
inc
lea
add
push
jge
sbb
aad
sahf
add
cs
clc
or
mov
jecxz
nop
push
outs
dec
lock
add
inc
jl
or
iret
jmp
sbb
outs
sbb
bnd
out
and
mov
mov
dec
adc
stc
bound
sbb
xchg
push
loop
lahf
sub
push
jb
adc
clc
mov
es
inc
jnp
cmp
add
ret
mov
cmp
pop
mov
push
xor
or
popf
push
call
sar
dec
repz
inc
inc
mov
dec
loopne
push
cwde
push
idiv
call
ins
and
retf
mov
stos
or
inc
push
dec
xchg
inc
(bad)
int
adc
push
jb
fiadd
(bad)
out
sub
adc
and
adc
mov
test
iret
sub
lahf
push
in
(bad)
call
aas
pop
lods
push
adc
xchg
nop
pop
arpl
sbb
int
fs
loope
loope
movs
cmp
rcl
or
xchg
lock
dec
mov
xchg
push
rcl
and
out
cwde
imul
sub
adc
xchg
(bad)
sahf
push
add
mov
push
cmp
jge
pusha
rcl
ins
adc
sub
or
adc
mov
call
dec
adc
cmp
test
das
into
test
sar
xor
movs
mov
pop
adc
in
(bad)
adc
pop
enter
push
xor
push
mov
cmp
sub
sbb
fcom
test
mov
outs
fdiv
xor
or
test
push
cmp
sub
cmp
jp
sub
or
mov
sub
movs
add
push
fmul
sub
ds
mov
pop
jo
ss
pop
in
jae
neg
add
shl
add
es
dec
repnz
sbb
mov
inc
push
ror
cmp
sar
mov
ds
mov
mov
ret
sub
push
ret
sbb
(bad)
push
imul
inc
dec
pop
pop
push
sti
nop
dec
sbb
inc
movs
(bad)
adc
adc
pop
xlat
ja
push
in
inc
sub
sbb
popa
cwde
rcr
add
rcr
add
test
xor
cmp
push
movs
test
adc
xchg
cmc
call
jmp
pusha
movs
icebp
out
cli
fucomp
(bad)
fild
jle
xchg
push
ins
fadd
sti
loopne
dec
inc
dec
cmp
sbb
dec
pop
mov
call
bound
sbb
jmp
push
push
pop
les
shr
adc
ret
and
jmp
jge
fbstp
adc
sahf
dec
mov
cmp
xor
mov
sti
clc
or
hlt
inc
(bad)
ss
cmp
ret
push
cwde
push
inc
add
mov
jp
dec
pop
aam
jne
mov
or
mov
in
inc
or
int
or
adc
shl
pop
push
or
push
rcl
push
xchg
ins
adc
inc
adc
dec
jmp
pop
push
rol
sbb
inc
and
xchg
mov
push
xchg
sub
xor
xchg
popf
and
sahf
or
add
dec
and
ds
inc
push
or
call
add
test
xor
mov
pop
jg
rcl
rol
clc
jp
mov
xor
add
add
std
js
mov
jle
push
in
je
pusha
dec
sahf
ins
ss
sub
dec
int3
add
add
aam
dec
sub
pop
inc
scas
pusha
push
mov
push
pop
cwde
rol
and
xchg
ret
fs
imul
aam
or
test
iret
fcmovbe
mov
xor
xor
push
jle
pop
or
fdivrp
jmp
mov
cmp
xor
add
pop
cmp
shl
call
push
pop
enter
mov
mov
ins
and
push
jb
add
leave
cmp
inc
fstp
je
es
sbb
adc
stc
repnz
call
movs
cmps
and
cmp
jp
in
xchg
or
xchg
cmp
daa
mov
lahf
adc
adc
(bad)
cmps
test
aad
sub
mov
add
xor
or
dec
xor
adc
rcl
pop
pushf
and
test
sub
and
stos
rol
inc
or
loop
and
cmp
je
mov
hlt
jp
and
xchg
inc
adc
daa
movs
cdq
push
jae
shl
add
popf
fadd
mov
add
or
push
push
fimul
and
pop
and
loopne
and
cmp
mov
pop
dec
sub
fadd
shl
jo
cli
movs
ret
push
out
inc
sub
add
pop
and
aad
inc
pop
in
call
scas
adc
push
call
pop
mov
sub
iret
or
xchg
dec
or
ror
inc
rol
cmp
pop
push
cmp
dec
jl
push
mov
(bad)
xor
sub
bound
jmp
pop
bound
ins
push
dec
or
cli
dec
lock
dec
clc
and
test
lea
mov
or
jae
push
out
xor
mov
push
sub
(bad)
test
aas
push
ret
jle
push
cmp
cmp
adc
arpl
sahf
jp
add
call
xchg
push
hlt
mov
out
mov
js
cmp
push
test
pop
xchg
cmp
push
aas
(bad)
(bad)
movs
ror
dec
test
pop
pop
adc
adc
fisttp
daa
(bad)
or
xor
stc
or
xchg
mov
loope
push
inc
push
lock
cs
(bad)
push
in
pop
add
cli
je
cmc
lods
adc
mov
add
cmp
jne
pop
pop
cmp
adc
sub
sbb
int
mov
icebp
mov
cmp
(bad)
mov
clc
jb
inc
sub
add
lock
shl
rcr
nop
jb
lods
clc
leave
adc
and
gs
push
adc
mov
ja
nop
add
add
mov
loope
sub
or
rcr
xor
add
fdivr
es
pusha
mov
xchg
push
inc
pop
dec
or
sub
or
adc
jle
cmps
fld
cmps
push
dec
xlat
and
aad
sbb
sahf
lock
xor
cmps
xor
inc
sub
inc
fild
or
and
out
pop
fsubr
out
mov
xchg
aas
neg
add
lock
dec
sub
dec
rcl
dec
sbb
out
sbb
arpl
inc
and
stc
cs
jle
sbb
sbb
add
mov
fiadd
add
sbb
sbb
cmp
stos
jmp
or
jb
call
mov
push
sbb
in
sub
out
add
out
or
dec
or
js
nop
sar
cmp
push
inc
add
sbb
rep
adc
sub
mov
scas
push
repz
(bad)
xchg
mov
fisttp
pop
and
out
lea
push
pop
adc
sbb
popa
sbb
jne
imul
jmp
add
push
mov
push
dec
add
push
and
pushf
in
sti
dec
stos
push
lea
mov
dec
adc
sub
or
stos
mov
push
inc
add
movs
je
jecxz
adc
test
adc
test
mov
push
fadd
sub
pop
inc
(bad)
and
inc
retf
add
pop
leave
jmp
mov
call
add
push
push
(bad)
add
das
les
mov
or
call
or
adc
scas
mov
pop
aad
adc
fisubr
push
inc
push
mov
push
adc
and
mov
and
cmc
sub
test
mov
jmp
not
dec
sbb
scas
add
sub
and
sbb
retf
fwait
cmps
mov
adc
loopne
jno
add
mov
xor
mov
icebp
jo
sub
push
adc
xchg
or
mov
push
jmp
mov
inc
dec
cdq
add
pop
xor
xor
xor
mov
lahf
je
dec
aaa
cmps
(bad)
jge
mov
or
loopne
ins
call
add
ins
pop
movzx
or
add
cmp
or
xor
mov
out
test
mov
cmp
mov
adc
std
push
xchg
add
xlat
(bad)
or
dec
jmp
adc
loop
arpl
inc
jle
adc
call
jecxz
pop
sbb
push
lods
jb
or
sti
retf
mov
lea
mov
shr
and
int
call
int
iret
xor
ror
inc
shl
ins
out
fisub
and
data16
nop
xlat
xor
ret
pop
fs
call
stc
nop
xchg
lock
fstp
sbb
es
xor
ret
cmp
fst
mov
mov
and
jb
xchg
test
loope
inc
adc
sbb
aaa
sbb
fwait
mov
or
cmp
cmp
cmps
(bad)
dec
push
loopne
ins
xlat
xor
add
inc
pusha
jg
enter
test
or
jmp
mov
add
ror
(bad)
(bad)
arpl
add
mov
adc
inc
jae
mov
hlt
or
icebp
and
sbb
mov
sub
cmp
sbb
ss
movd
mov
loope
jle
push
lods
fisttp
(bad)
or
dec
adc
je
popa
ret
fisub
ds
fmul
int
xor
loopne
or
cwde
mov
es
sbb
in
stos
mov
xchg
mov
add
movq
in
pcmpgtb
cld
pand
mov
jnp
cli
sub
add
pxor
es
out
enter
mov
movq
test
not
outs
(bad)
rcr
(bad)
sbb
fld
pop
ja
rol
aad
dec
data16
int
js
inc
ret
in
lods
and
repnz
pop
inc
jne
test
xor
jmp
fbld
mov
push
je
add
cmps
add
xor
nop
retf
std
xlat
(bad)
xor
mov
pop
arpl
dec
mov
inc
adc
xor
dec
rol
add
sbb
add
push
int
sbb
push
icebp
push
sub
jne
pop
mul
add
mov
std
fadd
sbb
sub
inc
xlat
popf
add
imul
mov
push
and
sub
imul
cmps
xchg
push
scas
ja
dec
loop
outs
lds
and
call
mov
shl
mov
retf
xchg
push
ds
(bad)
arpl
clc
jl
test
push
pop
jns
ja
cdq
idiv
(bad)
push
repnz
jns
xchg
mov
xchg
vandpd
xor
in
push
add
add
into
addr16
push
fidiv
push
sbb
mov
xlat
bound
stos
pop
jns
xchg
out
jbe
call
sbb
leave
leave
inc
cli
jge
xchg
cli
cli
adc
mov
pop
jmp
inc
inc
leave
sti
lock
lods
lods
in
mov
aam
pop
mov
pop
jns
scas
scas
jmp
movs
mul
jb
pop
jns
xchg
xchg
fwait
rol
jne
mov
loope
std
sbb
in
push
cmp
es
ss
in
push
pop
jle
aas
inc
cmc
div
add
push
pop
jns
xor
pop
push
movs
movs
hlt
shl
in
stc
push
pop
jns
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
pop
jns
xchg
push
sub
add
xchg
mov
push
inc
and
gs
ret
ret
pop
xor
sbb
in
push
pop
aaa
xchg
xchg
mov
das
call
push
pop
pop
or
adc
sbb
pop
jns
loop
cmp
dec
daa
daa
imul
xchg
int
jne
lahf
adc
or
sbb
in
push
pop
sub
je
sbb
cs
sub
fsubr
mov
pop
pop
out
pop
mov
pop
jns
push
push
div
cmp
(bad)
(bad)
popa
jge
pop
jns
mov
into
push
sub
jnp
jecxz
ds
das
das
pop
jns
xchg
jno
test
mov
ja
push
add
shr
sub
inc
and
pusha
jecxz
pop
jns
cld
cld
pop
jns
mov
mov
pop
in
aam
push
jns
xchg
mov
addr16
cmp
in
push
xchg
dec
dec
ficomp
pop
pop
call
test
iret
dec
mov
out
out
sub
stos
stos
in
sti
sti
push
xchg
lds
dec
dec
xlat
xor
push
adc
inc
pop
jns
xchg
iret
jmp
add
push
(bad)
jg
cmp
push
lock
cmp
and
xchg
push
pop
dec
test
jecxz
push
push
repz
mov
pop
jns
inc
inc
rol
xchg
lods
and
jns
popf
popf
mov
icebp
cmc
cmc
add
mov
xchg
fbstp
mov
scas
fcmovu
jne
and
arpl
xchg
push
and
adc
in
call
std
repz
in
push
pop
mov
int
dec
sbb
adc
push
pop
jns
adc
xor
mov
push
pop
jns
xchg
xchg
mov
cs
pop
cmp
in
push
push
cmps
cmps
repnz
jle
cmp
inc
jns
xchg
push
enter
mov
sbb
sub
xchg
push
pop
out
jae
shl
sbb
pop
jns
dec
dec
shl
and
push
push
pop
jns
sub
jle
nop
nop
stos
or
inc
pop
jns
xchg
retf
out
sub
mov
cmp
in
push
cmps
(bad)
jns
pop
pop
loop
or
sbb
lods
fcmovnu
jbe
loopne
cmp
push
xchg
push
pop
jns
cmp
dec
adc
or
xchg
dec
dec
fisttp
pop
jns
push
push
or
and
mov
ret
jns
xchg
pop
mov
lods
lods
out
les
cmps
jns
xchg
push
cmp
xchg
movs
shl
in
in
push
pop
bnd
mov
out
xor
push
pop
jns
aaa
aaa
pop
fisubr
mov
lea
jns
aad
fs
dec
dec
ror
test
pop
jns
xchg
mov
push
push
cli
repz
hlt
pop
iret
jmp
retf
scas
hlt
jp
mov
scas
jmp
adc
or
outs
mov
js
xchg
push
pop
jns
and
cs
sbb
and
push
pop
jns
cmps
cmps
icebp
jae
mov
xchg
mov
retf
call
xchg
and
je
pushf
ds
pop
and
xchg
push
xchg
dec
dec
frstor
mov
xchg
xchg
push
pop
jp
jo
jl
ds
xchg
push
pop
jns
mov
(bad)
int3
data16
nop
dec
dec
fadd
push
pop
jns
add
add
sbb
push
adc
popa
popa
pop
jns
xchg
mov
scas
push
push
stc
imul
xchg
cmp
push
pop
daa
sahf
sahf
mov
jmp
clc
adc
cwde
cwde
mov
adc
xor
imul
in
fnstenv
mov
cmps
sub
in
mov
push
push
and
jmp
xchg
push
xchg
into
dec
stos
push
push
call
sub
xchg
push
pop
movs
(bad)
jp
mov
xchg
push
pop
jns
mov
pop
gs
pop
jns
out
xor
push
pop
jns
xchg
ret
sub
sub
adc
xchg
push
jnp
mov
test
push
cld
ins
mov
push
pop
sub
push
cmp
ja
repnz
call
xlat
stos
jbe
or
cli
pop
inc
lock
aam
scas
pushf
movs
jb
mov
xchg
icebp
(bad)
(bad)
jmp
ss
test
jno
xor
sbb
and
daa
mov
(bad)
jg
je
sbb
outs
pop
mov
sub
das
test
add
and
mov
push
(bad)
(bad)
dec
mov
iret
shr
stos
sti
inc
dec
xor
push
cmp
test
mov
cmp
mov
mov
and
push
ror
or
in
pop
xchg
inc
pop
les
sbb
or
inc
(bad)
call
out
mov
xor
cmp
dec
push
and
ret
bound
enter
(bad)
(bad)
dec
push
hlt
jmp
and
(bad)
call
mov
mov
(bad)
(bad)
(bad)
dec
test
xor
sbb
adc
mov
push
sub
mov
lock
mov
cdq
sub
push
jmp
jle
cmps
imul
imul
out
sub
fsub
mov
pop
and
sub
or
fcomp
call
int3
lea
or
sbb
imul
jmp
add
and
sbb
and
lods
xchg
push
push
add
ret
retf
add
and
jg
jg
ja
and
mov
xlat
call
mov
push
test
mov
pop
jg
add
add
or
pop
lds
and
leave
les
iret
xchg
dec
int
outs
(bad)
mov
pop
mov
popf
or
dec
in
pop
sub
clc
(bad)
jb
cli
fisttp
mov
sahf
pop
lea
sub
and
adc
xor
cmp
pop
xor
add
inc
ffreep
xchg
cmp
sub
in
rol
or
(bad)
jg
xor
xor
xor
xor
bnd
(bad)
sub
sub
loopne
or
cdq
lods
mov
inc
gs
(bad)
or
or
xor
jl
daa
and
or
rol
into
and
or
mov
sub
rol
retf
nop
xchg
fstp
retf
mov
(bad)
adc
or
jb
repnz
xlat
adc
pop
mov
(bad)
jmp
call
out
xor
and
(bad)
jb
stc
(bad)
rol
xchg
xchg
cmps
retf
shr
retf
sar
add
dec
push
shl
aad
push
dec
dec
test
adc
pop
add
jno
dec
call
nop
mov
push
add
jle
dec
sbb
stos
clc
pop
repnz
xor
call
mov
in
mov
xlat
xchg
adc
xchg
test
sbb
mov
inc
mov
and
outs
jmp
cld
dec
add
mul
mov
mov
cmps
mov
repnz
rcl
or
add
mov
jns
adc
adc
outs
repz
sub
test
shl
pand
add
paddb
in
pxor
out
mov
cmp
lea
add
mov
jo
std
or
retf
out
data16
mov
std
mov
jns
push
enter
adc
cmc
mov
adc
cmc
or
arpl
adc
pusha
ret
or
or
adc
jmp
fs
dec
scas
in
(bad)
fistp
cld
iret
enter
fcmovnb
pop
pusha
add
stos
pop
int
stos
jmp
lods
push
sbb
ins
and
loopne
adc
jle
lods
push
pop
daa
add
mov
add
enter
add
or
daa
pop
add
add
pop
enter
add
test
add
xor
add
xchg
inc
add
and
add
push
pop
jns
push
hlt
cmps
push
pop
jle
gs
sbb
movs
ret
cmp
pop
pop
jns
xchg
xchg
cmp
inc
icebp
lods
cli
pop
stos
jns
xchg
push
dec
jecxz
xchg
and
cli
push
lods
jbe
mul
xchg
push
pop
mov
jbe
cmc
add
in
cld
xchg
push
pop
jns
sub
xlat
es
mov
jns
mov
dec
and
jmp
jns
xchg
loope
das
jne
or
jns
xchg
push
imul
mov
pop
out
xchg
pushf
xchg
in
push
pop
mov
push
pop
fcmovbe
mov
pop
jns
je
ror
imul
jne
pop
jns
ret
hlt
mov
cdq
pop
imul
jno
jns
xchg
fnstsw
mov
data16
xchg
push
jge
cmp
sbb
and
push
pop
xchg
push
xor
push
jg
mov
ja
xchg
push
pop
jns
imul
stc
or
xchg
jo
pop
jns
dec
push
sbb
clc
pop
jns
xchg
mov
jae
and
add
jecxz
(bad)
push
jns
xchg
push
push
stos
sub
mov
add
xchg
push
pop
xchg
jnp
shl
or
xchg
push
pop
jns
mov
push
in
push
sbb
jns
iret
sbb
cmps
jns
xchg
repz
repnz
imul
mov
push
add
bound
jns
xchg
push
les
push
popf
mov
xchg
push
pop
add
imul
jne
sub
xchg
push
pop
jns
pusha
out
stos
pop
jno
push
mov
push
pop
jns
and
cmp
dec
out
pop
jns
xchg
inc
xchg
push
lea
add
aam
jns
xchg
push
pusha
push
adc
and
mov
push
pop
mov
int3
fstp
call
pop
jns
mov
cmp
out
(bad)
jl
inc
jl
psubsw
test
leave
scas
mov
add
dec
push
adc
mov
pop
jb
std
push
(bad)
sti
jne
sub
ss
fldenv
scas
mov
fwait
pop
push
shl
cmp
scas
mov
mov
push
out
mov
xchg
rcr
fwait
scas
mov
add
dec
popa
fsub
mov
mov
adc
push
loop
mov
in
retf
cmp
loopne
adc
pop
sbb
retf
mov
sub
push
test
repnz
icebp
sbb
out
cdq
fnstsw
repnz
test
cmc
mov
mov
sti
jle
mov
jbe
and
fdiv
retf
mov
cld
push
xlat
xor
retf
scas
mov
adc
adc
sub
and
sar
xor
(bad)
sub
ins
sbb
mov
repz
repnz
shl
sub
mov
scas
adc
and
sub
sbb
sub
and
nop
out
sub
dec
(bad)
fnstcw
rol
mov
mov
mov
cmps
cmc
or
fidiv
retf
lods
mov
in
js
or
push
int3
fwait
push
jle
(bad)
test
mov
cs
pop
add
cmc
sub
cmp
aad
test
repnz
enter
adc
jge
call
repnz
cmp
or
sbb
repnz
in
call
out
outs
gs
mov
and
out
scas
mov
(bad)
ss
jmp
mov
xor
xor
movs
xchg
xor
data16
cld
or
repnz
loopne
shl
icebp
add
dec
retf
mov
jg
push
push
pop
xchg
imul
sub
(bad)
lea
mov
int3
stos
dec
push
in
scas
mov
sahf
shl
sbb
sub
mov
inc
gs
jg
pop
jmp
retf
cli
xchg
or
mov
sbb
mov
jmp
(bad)
inc
adc
scas
mov
mov
mov
adc
jmp
scas
mov
into
test
leave
xor
mov
inc
mov
pushf
rcr
pop
push
bnd
repnz
sbb
jns
(bad)
aaa
mov
retf
mov
fistp
fild
retf
cmp
mov
inc
pop
push
sbb
and
mov
xchg
inc
cmp
mov
repnz
fdiv
nop
jnp
test
sub
jo
ins
pop
je
mov
(bad)
call
push
xor
movs
cmp
repz
sti
jl
cmp
xor
inc
inc
(bad)
fsubrp
retf
(bad)
(bad)
(bad)
call
xor
dec
xchg
or
ret
dec
or
mov
mov
pop
mov
and
jb
mul
cwde
push
aam
pop
int3
pop
gs
ins
ret
in
mov
push
cmps
(bad)
(bad)
(bad)
jg
popf
test
stos
add
pop
add
shr
(bad)
add
(bad)
(bad)
(bad)
jmp
mov
xchg
adc
addr16
xchg
repnz
into
lock
jae
lods
je
out
xor
(bad)
(bad)
stc
aaa
call
inc
icebp
sbb
sub
mov
bound
stos
sbb
dec
(bad)
sar
call
(bad)
js
pop
hlt
pop
(bad)
xor
sub
pusha
and
(bad)
(bad)
(bad)
call
mov
or
xchg
leave
pushf
out
mov
sub
mov
jmp
cmp
push
cdq
popa
pop
sub
push
inc
lock
mov
imul
(bad)
mov
rcr
jmp
pop
scas
inc
add
adc
or
sub
test
inc
imul
cld
lahf
add
rcr
push
or
ret
sbb
fmul
mov
mov
call
dec
lock
and
xor
cmp
pop
fs
mov
sub
jmp
ret
sbb
add
xchg
gs
lea
pop
xchg
cmc
mov
mov
dec
mov
or
mov
imul
mov
ja
xchg
add
jmp
(bad)
out
or
fadd
dec
cmp
shl
or
stc
sub
rep
out
jo
xchg
push
push
add
sub
jmp
sub
xor
cmp
jmp
push
and
test
mov
mov
push
xor
xor
test
enter
cwde
pop
test
pop
popa
ror
mov
dec
mov
inc
test
cmp
shr
and
mov
arpl
shr
xor
outs
stc
scas
or
jmp
shl
stos
mov
js
neg
jl
js
mov
xor
ds
xchg
push
xor
out
xor
pusha
lea
sub
push
popa
or
pop
sbb
imul
call
xor
(bad)
cs
push
cmp
sbb
and
and
mov
or
std
and
xchg
pusha
lock
(bad)
iret
and
test
cmp
add
xchg
mov
jg
jge
fisttp
lea
test
lea
pusha
adc
mov
jl
call
mov
lods
imul
push
and
jae
mov
ret
fs
test
pop
arpl
sahf
push
out
push
dec
(bad)
xor
nop
aam
mov
jg
ret
push
out
dec
mov
xchg
pop
aaa
mov
shl
inc
je
test
mov
sbb
scas
shl
inc
out
sub
or
sbb
ja
xlat
pop
ss
mov
pop
or
pop
mov
(bad)
movs
jmp
jns
cmp
stos
test
sbb
js
cdq
xchg
fist
adc
dec
mov
xchg
mov
push
add
or
ins
or
add
or
pop
xor
adc
std
lahf
popf
cmps
popa
xor
add
xchg
dec
mov
push
ja
mov
in
jecxz
ror
jge
sub
push
jmp
cs
adc
int3
lods
mov
dec
data16
popa
iret
mov
xor
and
xor
fadd
fld
inc
mov
add
add
and
pop
(bad)
outs
test
push
pop
shl
test
push
shl
bnd
add
inc
add
or
jns
xchg
mov
sbb
sbb
mov
push
add
pop
xor
cs
leave
mov
(bad)
sbb
or
adc
(bad)
movs
fidiv
test
inc
add
(bad)
cmps
imul
xor
pushf
loope
clc
add
xor
push
or
jmp
adc
pop
rcl
adc
mov
cs
sbb
lods
jmp
mov
and
pusha
sbb
lea
sbb
pop
dec
or
add
sub
sbb
cs
jbe
call
cs
or
and
in
dec
rcr
push
mov
mov
pop
in
rcl
mov
jo
xor
fdiv
sbb
and
dec
xor
push
add
push
sub
pop
sbb
das
call
fstp
push
(bad)
test
stos
push
pusha
sub
dec
xor
add
push
mov
out
sub
aam
or
(bad)
jp
adc
rcl
stos
(bad)
cmp
(bad)
pop
test
add
retf
sbb
stc
pop
sbb
push
xchg
sub
fnstsw
mov
ret
xor
das
inc
lods
adc
rol
jne
shl
mov
or
enter
shl
xchg
lock
fcom
enter
or
(bad)
mov
adc
pop
aad
add
or
add
cdq
lock
xor
jns
or
loopne
jo
shr
sbb
push
or
xchg
lock
mov
add
dec
sub
fimul
xor
cmp
push
jmp
cwde
test
rcl
or
and
xchg
loope
push
adc
and
or
or
loopne
and
cld
push
cmp
mov
push
or
pusha
jecxz
cli
xchg
push
inc
push
(bad)
out
dec
cmp
and
pop
push
push
dec
inc
inc
dec
bound
and
and
jo
jb
inc
mov
jae
xchg
hlt
fld
addr16
mov
xchg
les
sahf
mov
test
sti
aas
jne
and
pop
add
cmp
xor
push
xor
jmp
fisubr
dec
and
jmp
lahf
fwait
or
jecxz
xor
and
daa
pop
mov
lds
mov
dec
mov
inc
jmp
inc
sub
ret
(bad)
int3
sar
nop
xchg
lds
jae
sbb
jne
add
and
leave
mov
popa
adc
and
dec
adc
xchg
pop
jb
add
adc
je
add
fadd
aaa
rcl
mov
mov
mov
lahf
adc
push
push
ror
loope
jae
and
into
mov
(bad)
sub
sti
inc
cwde
jne
out
aas
xchg
ret
cli
imul
outs
je
or
retf
gs
and
cmps
repnz
jne
push
imul
arpl
inc
adc
jbe
(bad)
mov
cmp
mov
and
or
cmp
jle
pop
or
mov
inc
dec
xchg
leave
sbb
loop
mov
xchg
cmp
ja
out
jmp
dec
sti
pop
test
ins
sbb
movs
cmp
inc
pop
and
cmp
cmp
mov
out
mov
ror
dec
fidivr
dec
and
cmp
and
int3
daa
and
inc
xor
add
and
sub
push
inc
push
aam
loope
jb
hlt
clc
sbb
call
inc
mov
mov
int
das
pop
sar
add
jle
jmp
mov
add
addr16
mov
pop
das
lods
push
mov
cmp
sub
ins
stos
and
xor
or
inc
shl
sahf
push
nop
pop
mov
dec
pause
and
push
push
push
in
dec
adc
hlt
or
add
sbb
mov
xchg
mov
inc
xor
mov
mov
out
mov
jmp
es
shl
test
dec
mov
sbb
mov
add
jae
movs
add
or
leave
jns
out
rcr
in
neg
add
sbb
(bad)
ds
outs
ja
push
push
adc
lea
nop
lock
ret
pop
push
repnz
pop
pop
push
mov
pop
cmp
dec
or
push
xchg
or
neg
ror
or
adc
retf
push
add
adc
rcl
sub
in
add
scas
xor
pop
js
jae
jl
push
sub
push
add
xor
rep
pop
outs
ds
out
dec
add
sbb
in
dec
shl
xchg
jbe
clc
adc
into
add
mov
jb
xchg
aas
clc
adc
xor
pop
jmp
and
out
loopne
cmp
pop
sbb
add
pop
add
push
call
pop
mov
test
xor
adc
mov
mov
or
imul
in
pop
inc
ins
shl
inc
push
or
lea
sbb
xchg
mov
jns
mov
push
dec
push
mov
jmp
pop
pop
mov
and
ja
loop
data16
mov
jmp
imul
and
dec
inc
or
icebp
icebp
add
(bad)
dec
call
imul
pop
data16
xchg
or
xor
inc
jae
or
xchg
mov
pop
ja
arpl
dec
push
cmp
js
loopne
add
(bad)
call
repz
stos
loope
or
lods
call
dec
jg
xor
adc
ret
sbb
cmp
mov
aaa
or
enter
mov
fwait
jne
cmp
in
mov
push
mov
dec
push
sub
aad
mov
or
out
dec
popa
mov
shr
inc
and
sbb
dec
int
popa
sbb
and
rol
sub
push
mov
jge
les
jge
push
pop
pop
jae
xchg
cmp
rcr
adc
outs
or
es
xor
dec
loopne
test
mov
pusha
jecxz
loope
sub
or
nop
pop
ret
rcl
rcl
push
(bad)
cmps
mov
inc
jnp
call
(bad)
ins
fnstsw
push
dec
push
(bad)
sbb
push
push
dec
mov
inc
arpl
sbb
es
xchg
lea
sti
pop
add
sub
xchg
cli
imul
fbstp
xchg
aaa
sub
shl
sub
mov
mov
inc
add
sub
dec
lea
fild
sbb
fisttp
jl
les
sbb
push
mov
adc
call
jnp
nop
sbb
nop
neg
push
push
sub
jp
lock
loope
mov
xchg
mov
test
in
cmp
fist
nop
sub
ret
push
ret
xchg
jmp
push
call
pop
jg
pop
jmp
inc
or
xchg
jno
sbb
adc
and
cmps
jp
xchg
sbb
mov
pop
and
pop
lea
aam
mov
inc
add
mov
mov
or
out
jne
and
fadd
xchg
fsub
cmps
fmul
in
sub
add
test
pop
push
sub
sub
adc
mov
mov
jbe
repz
or
out
mov
dec
sub
div
lea
and
addr16
retf
jecxz
pop
pusha
call
leave
mov
push
(bad)
xchg
pop
(bad)
das
mov
movs
mov
dec
push
add
adc
jl
sbb
pop
std
fbstp
in
push
ds
push
push
xchg
adc
dec
mov
dec
push
add
cwde
jp
test
sub
(bad)
popa
mov
cmc
mov
fdivr
in
adc
fbstp
loopne
(bad)
ds
in
xor
push
or
sbb
xchg
(bad)
sbb
pop
and
add
das
(bad)
lock
sub
add
or
sbb
add
mov
jb
out
mov
cmp
shl
add
lea
mov
pop
pop
pop
in
lods
dec
loop
enter
mov
fadd
cmp
push
inc
lds
push
cmp
jl
cmp
jg
cmps
into
test
jl
add
mov
shl
sar
add
sbb
sbb
xchg
dec
mov
imul
adc
addr16
or
xchg
lock
(bad)
xchg
rcl
xchg
sti
cmp
int3
test
nop
xchg
mov
loop
fist
push
push
push
push
nop
rol
adc
out
mov
mov
movs
add
push
jl
sub
jmp
push
test
(bad)
cld
or
dec
daa
xchg
and
mov
icebp
xchg
cmp
ss
push
jne
mov
mov
(bad)
push
push
les
jne
popa
pop
fstp
dec
adc
sub
sub
call
lahf
test
mov
inc
xor
js
push
cmc
jb
xor
push
lea
loope
int
xchg
icebp
(bad)
mov
fadd
jns
and
sub
sti
add
or
inc
and
adc
cmp
add
xchg
adc
inc
and
or
xchg
fbld
jno
mov
mov
fiadd
out
mov
repnz
or
inc
f2xm1
call
lock
shr
jle
iret
call
pop
shl
jmp
push
add
pop
popa
loop
push
(bad)
loop
pop
dec
test
xchg
out
jmp
cwde
pop
psrad
sbb
loopne
nop
call
(bad)
aas
push
call
dec
sub
inc
data16
and
mov
mov
iret
les
adc
or
dec
or
sub
shl
adc
mov
sbb
test
jmp
and
sbb
loopne
add
es
mov
sub
cmps
xor
mov
aas
mov
and
stos
out
(bad)
ficom
mov
sahf
fwait
push
add
add
sub
loopne
sbb
push
cmps
sbb
retf
sub
xor
pop
dec
add
arpl
mov
add
sahf
and
pop
leave
(bad)
push
retf
ins
inc
inc
mov
or
xor
lods
push
int3
dec
inc
jmp
push
push
cmp
push
gs
clc
shl
xor
inc
xchg
push
mov
sahf
hlt
dec
inc
mov
(bad)
mov
jne
cmp
ins
jmp
xchg
push
push
add
xchg
and
cmp
xor
inc
movs
mov
xor
jl
xor
adc
pushf
jg
mov
sbb
les
adc
jae
rcl
mov
cmp
push
xchg
fwait
inc
push
or
push
sahf
adc
data16
test
cmp
jg
(bad)
ds
push
add
call
xchg
add
pop
shr
fist
inc
(bad)
mov
cmp
push
pop
loope
cmps
cmc
sbb
xlat
lods
cmp
leave
mov
push
dec
je
sbb
push
xor
in
cmp
pop
aas
or
inc
test
jb
cmp
les
cmp
pop
leave
test
sub
jb
pushf
push
push
call
xchg
or
call
push
adc
call
retf
jbe
pop
mov
adc
push
cdq
dec
repnz
inc
mov
outs
push
add
sub
std
imul
add
in
cmp
mov
icebp
adc
outs
movs
pop
xor
add
cmp
inc
add
push
jecxz
push
call
out
test
imul
stos
xor
inc
xchg
adc
es
mov
lock
mov
push
add
xchg
dec
add
inc
fcomp
cs
fs
xor
fs
loope
pop
clc
je
push
fnstcw
or
push
dec
jmp
sub
je
jmp
xor
inc
test
outs
or
fistp
loope
add
setge
add
push
call
les
shl
aad
pop
push
xchg
fidivr
sub
scas
jge
jmp
mov
and
pushf
adc
sti
cdq
sub
retf
pop
and
pushf
add
push
inc
nop
call
lds
(bad)
xchg
add
enter
xchg
cli
js
add
jg
mov
rcr
push
push
pop
(bad)
mov
int3
rcl
pop
cmp
dec
fisttp
add
pop
ret
(bad)
shr
add
pop
scas
push
dec
adc
sub
pop
sub
xchg
dec
mov
push
mov
dec
inc
les
ins
xor
xor
pop
and
mov
mov
ins
rcl
mov
fwait
std
pop
mov
dec
pop
mov
inc
cmc
(bad)
ds
adc
or
sbb
cmp
mul
mov
sar
push
pusha
enter
or
or
adc
push
in
or
mov
push
or
out
fadd
aas
adc
aas
inc
xor
mov
cmp
xchg
jl
adc
or
xchg
xchg
retf
sbb
dec
mov
xor
adc
jnp
fisub
stc
es
adc
add
aas
shr
mov
mov
je
push
je
mov
repnz
push
fwait
push
(bad)
cld
les
push
imul
in
fld
popf
inc
push
dec
shr
inc
sub
cwde
cmp
dec
pop
pop
pop
adc
sbb
loope
cmp
cdq
add
xlat
js
add
add
fwait
xchg
push
xlat
cmp
fsub
push
xor
and
dec
ss
cmp
mov
adc
popa
sub
or
sub
dec
cmps
ds
jae
sbb
push
add
cmp
loopne
xchg
xlat
jne
jge
in
in
and
pop
or
jge
jmp
dec
sbb
outs
fwait
(bad)
ins
xchg
xchg
inc
fcmovbe
outs
inc
rcl
scas
pop
or
jo
push
mov
mul
adc
rol
cwde
push
in
(bad)
retf
add
sbb
sub
inc
or
mov
jnp
sbb
into
or
jnp
push
xlat
xchg
push
mov
jmp
test
push
retf
psrlw
sti
sbb
in
or
or
arpl
call
or
data16
in
mov
aas
sar
mov
sbb
pusha
pop
fdiv
jmp
pop
int
in
inc
mov
jmp
sahf
jmp
inc
(bad)
xchg
or
lahf
into
movs
mov
dec
and
cli
push
jbe
push
xchg
push
in
lods
ss
inc
mov
ja
sbb
inc
cmp
inc
sub
ss
jmp
or
mov
push
cs
aas
sub
sti
fs
push
inc
add
cmp
push
imul
bound
ret
inc
push
lea
popa
test
aas
popa
test
(bad)
and
dec
jl
ret
jmp
or
nop
sbb
or
out
mov
mov
loop
or
jb
adc
mov
and
(bad)
test
inc
jecxz
pop
push
retf
dec
nop
pop
mov
sbb
xor
and
dec
(bad)
mov
xchg
xchg
and
sbb
mov
xor
lock
adc
xchg
or
sub
adc
pop
inc
or
ds
rcl
movs
mov
imul
(bad)
shl
inc
ds
repz
add
xchg
jbe
xchg
dec
in
push
or
je
iret
add
and
jne
jb
fs
es
add
or
cwde
rcl
and
and
cmp
fdivr
aas
or
push
cmp
jl
or
cvtps2pi
mov
cmp
ja
cmps
jmp
in
xchg
lea
out
mov
mov
dec
inc
fisubr
sub
jbe
jne
and
jg
sbb
outs
inc
out
xor
(bad)
retf
out
or
jg
cmp
ins
bound
push
push
mov
mov
and
xor
mul
mov
dec
jno
or
loopne
pop
jle
loop
into
or
loopne
movs
sar
out
lock
or
or
push
inc
mov
xchg
mov
pop
in
jno
mov
mov
cwde
fwait
xor
inc
xchg
jno
pop
daa
adc
sub
ja
xor
call
add
add
(bad)
push
dec
fwait
mov
inc
add
add
pop
and
cli
cmps
xor
jns
es
fisubr
add
imul
mov
and
adc
sbb
mov
mov
data16
ins
mov
mov
nop
sbb
xor
sbb
dec
mov
dec
jo
jnp
pop
mov
inc
sub
stos
and
mov
int
add
jo
pop
push
mov
inc
push
jb
stos
outs
lods
retf
jle
xor
xchg
jo
js
xchg
pop
lahf
sub
inc
out
cmp
scas
idiv
add
(bad)
iret
aam
je
or
cmp
lock
retf
fdiv
or
mov
fwait
arpl
ror
mov
ret
add
out
loopne
bound
ret
sbb
mov
sbb
inc
sub
push
adc
hlt
mov
mov
jge
adc
ror
add
sar
add
push
lea
nop
cwde
xchg
mov
and
add
push
fisttp
push
push
pop
push
inc
repnz
je
sbb
pop
pop
ror
and
mov
(bad)
mov
add
enter
adc
xchg
sub
aas
fsubr
push
dec
xchg
loopne
dec
aas
shl
in
in
aad
or
sub
imul
pop
inc
jb
ja
jae
mov
add
aad
adc
push
cmps
popf
nop
mov
pop
pop
fist
mov
cmp
add
pusha
dec
in
test
push
imul
jo
add
retf
push
std
sub
shr
rcr
xor
adc
ficom
ss
jo
and
sbb
sbb
rcr
inc
inc
mov
sbb
fisttp
mov
mov
bound
jne
mov
cli
push
sub
jo
addr16
ror
aas
cwde
call
push
mov
inc
cmp
jae
lds
inc
xchg
push
mov
cmp
ss
lea
je
push
pop
cmp
push
out
cmps
in
cmp
adc
pusha
std
aam
(bad)
fidivr
(bad)
fdiv
xchg
cmp
cmp
mov
dec
cmp
add
clc
inc
mov
or
dec
sub
xor
add
imul
mov
(bad)
mov
sbb
dec
and
test
ins
pop
sahf
or
and
sahf
js
cmp
call
or
push
xor
xchg
repnz
lahf
inc
push
xchg
mov
ja
es
mov
add
jl
mov
inc
push
in
out
or
push
or
(bad)
sub
call
inc
dec
dec
xchg
pop
pop
sbb
adc
shl
or
add
and
pop
es
inc
rcr
pop
dec
push
pop
or
push
shl
ins
pop
add
ja
sbb
sub
aas
xchg
add
mov
std
loopne
jno
test
lahf
jmp
inc
lods
inc
call
sbb
sbb
mov
pop
lods
enter
push
or
add
and
cmps
imul
xchg
cmp
dec
add
stos
push
cmp
xchg
test
movs
dec
add
adc
lods
icebp
call
loope
fist
sub
imul
inc
cmps
xchg
aad
push
push
add
inc
fist
popa
mov
pop
xor
fisttp
inc
popa
sbb
aaa
call
jmp
mov
test
sub
xchg
test
loop
sar
pop
xor
push
xchg
stos
or
movs
dec
jmp
(bad)
sbb
outs
nop
ja
push
adc
push
adc
dec
inc
cmp
call
lods
mov
cmp
mov
in
test
pop
sub
pop
daa
sub
mov
push
add
sbb
mov
sub
adc
lods
or
loopne
or
scas
into
or
ror
and
scas
dec
cmp
jle
pushf
inc
jmp
cmp
mov
push
pop
add
xor
or
dec
leave
jmp
fwait
(bad)
xchg
jmp
and
sub
inc
cmp
and
or
fisttp
xchg
xlat
sbb
push
popa
mov
mov
icebp
push
repz
xor
push
add
cmp
xchg
pop
adc
out
mov
les
sbb
mov
fbstp
pop
fisub
xchg
lock
jo
mov
popa
pusha
les
bound
xor
mov
jg
and
xchg
and
or
enter
loope
and
es
loop
fs
dec
or
adc
mov
aad
ret
and
bound
cmovo
xor
les
gs
pop
pop
fistp
inc
xor
ja
pop
push
push
ds
cmp
push
sbb
cmp
aam
repnz
add
rol
add
pop
popa
aas
xor
jbe
lods
das
and
aam
mov
and
fs
mov
(bad)
mov
push
mov
add
pop
aam
ret
jb
or
ins
cmc
inc
punpckhbw
dec
or
leave
ret
push
pop
or
lea
adc
mov
lock
call
mov
outs
dec
into
clc
cs
test
stos
outs
cmps
rol
in
add
inc
shl
adc
and
or
jmp
adc
cs
xor
inc
sbb
adc
fisubr
cmp
xor
adc
gs
sti
and
pop
and
adc
add
inc
in
in
inc
adc
ds
mov
je
fs
jb
pop
sbb
push
pop
jmp
lahf
sub
fs
adc
sar
add
ret
jb
xchg
(bad)
push
inc
mov
or
ds
and
add
mov
or
and
xor
aas
loope
dec
dec
add
xor
mov
repnz
mov
(bad)
adc
or
or
sub
(bad)
xchg
sub
les
mov
push
adc
cmc
jp
adc
jns
imul
test
xchg
inc
pop
lea
movs
add
or
(bad)
into
mov
push
or
cmps
and
push
fwait
push
inc
inc
xor
jg
lock
inc
sbb
add
mov
scas
mov
adc
test
sar
popa
scas
xor
shl
mov
cmps
jnp
or
jle
xlat
sbb
les
pusha
adc
rol
push
sbb
sub
or
mov
or
lahf
inc
sbb
test
inc
in
adc
mov
(bad)
mov
xchg
nop
push
fwait
inc
push
cmp
data16
inc
cmp
add
add
movzx
sub
je
push
jp
das
or
pushf
sub
inc
jmp
hlt
push
ss
leave
(bad)
jg
sar
and
xchg
xchg
xor
adc
daa
mov
fld
(bad)
push
mov
cmp
int
mov
sbb
push
mov
add
and
adc
pop
cmp
jmp
leave
int
jns
mov
ja
jbe
stc
jns
dec
mov
add
imul
mov
imul
ja
add
pushf
jno
pcmpgtb
or
push
dec
ficom
and
fidivr
mov
call
lock
pop
call
or
popa
jnp
mov
popf
popa
add
stos
(bad)
adc
call
test
or
(bad)
jmp
mov
icebp
inc
jbe
imul
add
or
jbe
lock
nop
pushf
cmp
sahf
adc
mov
or
push
jle
ror
xchg
or
sub
xchg
shr
movs
mov
mov
push
call
popf
sub
outs
or
and
loope
ret
xchg
pop
or
or
test
pushf
ins
ficomp
stos
mov
xchg
inc
(bad)
ror
rcl
fadd
inc
fnstenv
ins
jbe
mov
jbe
pop
xor
cmp
repnz
(bad)
cmps
into
push
jmp
adc
clc
dec
cld
loopne
loop
sub
ror
adc
fld
pop
retf
sbb
jns
dec
add
lea
ja
sub
call
xor
in
mov
jmp
pop
les
lea
push
(bad)
lock
xchg
leave
call
stos
add
inc
shr
retf
inc
and
dec
ret
test
lock
jno
(bad)
jmp
movs
lea
inc
shr
push
movs
div
jae
push
pop
loop
mov
sbb
dec
push
sbb
xchg
imul
(bad)
adc
out
add
pop
dec
jp
xchg
ja
mov
sbb
in
idiv
dec
es
dec
and
sahf
out
aam
xchg
pop
mov
enter
(bad)
push
cmps
inc
push
enter
push
add
and
or
xchg
in
sub
jecxz
pop
xchg
mov
add
jnp
pop
cmp
inc
sub
adc
call
xchg
mov
sub
sahf
ja
push
sbb
fwait
xor
das
rol
ins
cmp
jle
mov
cmp
ret
push
ins
dec
(bad)
cld
enter
adc
add
pusha
popf
xlat
push
add
pop
or
or
js
dec
xor
repz
ret
mov
xchg
pop
inc
adc
imul
sbb
pop
xlat
push
mov
inc
jecxz
pop
cmp
cdq
sub
jmp
hlt
cmp
or
clc
inc
sbb
or
and
cmps
scas
push
dec
sub
imul
fdivr
cld
ins
sbb
mov
outs
mov
adc
xor
cmp
jmp
fst
sub
and
rcl
mov
loope
test
bound
fst
sbb
fist
lods
sbb
add
push
mov
out
and
ds
fisub
and
pop
hlt
sub
fsubr
jl
mov
ror
mov
cs
push
mov
fiadd
aaa
daa
xor
adc
jo
fcomp
mov
rol
cmps
fimul
dec
jbe
out
mov
xor
add
arpl
push
inc
add
cmps
and
xor
mov
clc
jmp
pop
adc
aaa
ja
pop
push
mov
stc
mov
xchg
xor
fist
xor
xchg
mov
push
retf
and
pop
mov
jle
push
push
add
inc
adc
xchg
or
cmp
fidiv
jmp
sbb
mov
mov
dec
sbb
adc
in
or
aaa
and
add
mov
push
dec
int3
adc
ds
(bad)
push
cli
ds
popf
(bad)
adc
mov
inc
adc
xor
daa
sbb
ja
cwde
aaa
mov
sub
cdq
sbb
out
aam
mov
fcmove
test
ins
aam
push
das
jns
adc
test
jbe
aam
sbb
mov
lahf
int
or
add
xchg
jg
add
push
push
push
call
or
test
sar
gs
pop
pop
lods
xchg
mov
fcomi
and
push
shl
das
xchg
bound
inc
ret
mov
sbb
push
fsubr
jle
stos
add
adc
mov
movs
dec
adc
mov
lahf
xchg
ds
sti
add
push
ss
xor
daa
or
lods
inc
or
xor
cs
or
call
pop
adc
push
mov
mov
mov
add
and
cwde
stos
xchg
jp
pop
mov
test
leave
cmp
lsl
out
sbb
xor
pop
call
movs
push
mov
cs
adc
inc
xchg
pop
arpl
add
inc
xchg
rol
lock
xor
movs
add
retf
add
sbb
je
push
sub
enter
scas
enter
cmp
pushf
ffree
mov
pop
mov
je
ss
inc
arpl
push
add
inc
(bad)
xchg
lahf
ret
inc
push
adc
fsub
adc
mov
scas
test
outs
(bad)
ret
inc
xchg
xchg
mov
sbb
data16
dec
push
pop
or
ret
sub
mov
call
xchg
out
or
adc
dec
pop
loop
push
cmp
scas
push
push
or
ins
jecxz
dec
or
jg
pop
dec
mov
pusha
dec
jne
mov
leave
adc
and
popa
sbb
or
and
adc
jecxz
mov
call
fist
cmp
popa
movs
jge
jp
inc
adc
cmp
pop
add
pop
xor
push
adc
inc
inc
data16
daa
mov
daa
xor
add
je
div
lods
pop
rol
push
jg
rcl
or
adc
pusha
movs
or
sub
add
xor
rol
add
dec
sahf
test
and
or
mov
pop
inc
mov
call
pop
add
xchg
lahf
(bad)
mov
sbb
fidiv
int3
sbb
sbb
jne
jnp
xlat
je
out
sbb
test
mov
add
iret
push
xor
mov
xor
adc
mov
adc
mov
lahf
jecxz
sbb
jb
sub
out
xchg
je
(bad)
cmp
in
inc
dec
sub
rol
je
adc
xor
test
jmp
dec
mov
mov
push
outs
aaa
push
stos
test
or
es
scas
fidivr
pop
inc
fwait
adc
(bad)
adc
pop
call
sbb
mov
test
jo
sub
lea
das
jmp
jg
cmp
pop
jmp
push
jae
ror
sbb
cli
sub
aas
scas
jne
test
xor
fcmove
(bad)
call
das
add
inc
sbb
dec
lahf
div
mov
mov
mov
leave
mov
pop
jmp
add
scas
push
out
aaa
cdq
fsub
scas
add
pop
mov
arpl
pop
pop
and
(bad)
and
adc
dec
pop
cdq
ins
dec
push
jecxz
push
pop
and
dec
push
jecxz
not
push
sub
int
sub
pop
mov
jo
repz
pop
(bad)
fistp
aaa
test
xchg
lods
adc
in
cmp
sub
lea
or
mov
pop
sub
push
pinsrw
and
sub
jo
outs
hlt
push
push
call
je
fdivr
out
xor
cmp
pop
cs
mov
hlt
jg
jmp
or
outs
or
ins
adc
fstp
fwait
ja
mov
mov
mov
pop
test
ins
push
xor
sti
dec
pushf
sub
adc
push
sbb
mov
and
xor
jb
cmp
lock
je
fldenv
dec
jbe
sub
push
(bad)
push
call
inc
adc
sub
jne
mov
cmps
icebp
(bad)
cmp
fisttp
mov
xchg
sbb
inc
mov
add
add
adc
cmp
push
in
test
or
mov
dec
ret
mov
call
retf
(bad)
add
or
mov
ds
adc
inc
sub
cmc
mov
jle
jno
mov
jne
jmp
or
fld
adc
add
cmp
sbb
jle
xor
bnd
adc
jmp
or
and
pop
mov
sub
add
cmp
test
xor
popf
add
mov
inc
adc
xor
adc
pop
inc
inc
xor
push
(bad)
mov
and
pop
and
call
xor
ja
push
push
inc
xor
cdq
lods
sbb
push
pusha
hlt
or
pop
push
ret
mov
call
call
sbb
push
push
push
aam
or
test
sub
xchg
and
push
adc
mov
inc
sbb
ret
xchg
pop
adc
iret
jmp
es
sbb
and
scas
push
cmp
mov
call
xchg
or
xchg
mov
push
nop
inc
jmp
inc
xchg
sahf
mov
sub
test
pop
xchg
mov
shl
ss
cmp
add
retf
add
mov
ins
test
pop
(bad)
fistp
mov
retf
(bad)
push
add
inc
sbb
and
or
sbb
mov
mov
loope
add
push
repz
iret
repz
(bad)
daa
and
and
cmc
push
pop
nop
jg
inc
mov
call
sbb
popa
mov
mov
mov
movs
call
or
jl
mov
pop
jmp
adc
aas
adc
pop
loopne
pop
sub
jbe
fcomip
and
lods
fst
(bad)
pop
mov
js
jno
into
iret
call
data16
rcl
shl
xor
les
mov
cmp
inc
sub
jle
pop
fsubp
pop
daa
push
add
cmps
and
sbb
aas
mov
retf
add
push
ss
jne
jnp
inc
adc
iret
adc
pop
pushf
and
stos
in
and
int3
pop
jmp
mov
daa
in
push
ss
(bad)
fstp
xchg
repnz
mov
pop
jle
push
aaa
dec
call
push
loop
fwait
add
add
or
mov
call
sbb
sbb
dec
push
call
pop
rol
push
stos
ss
pop
(bad)
jae
pusha
mov
or
rcr
ds
test
mov
pop
movs
outs
inc
cmp
addr16
rcr
test
scas
popf
jns
xchg
(bad)
iret
stos
push
dec
inc
fmul
inc
sbb
inc
mov
mov
ds
jle
sub
popa
push
rcr
push
sbb
push
sub
pop
pusha
cmps
mov
repnz
in
sub
scas
inc
and
add
call
daa
adc
pop
mov
cmps
mov
fiadd
adc
sbb
arpl
jns
(bad)
mov
sbb
adc
dec
in
push
lea
push
rep
je
add
or
cmc
clc
xchg
inc
outs
(bad)
iret
inc
pop
in
sbb
aad
lds
or
(bad)
aas
xor
adc
inc
push
cdq
pop
xchg
sbb
ds
int
cwde
add
out
add
inc
sbb
pop
push
js
in
popa
push
sub
scas
mov
mov
mov
retf
sub
ret
aas
dec
std
mov
int
ret
pop
adc
neg
adc
test
lds
xchg
mov
(bad)
dec
test
adc
test
in
stos
adc
stos
fiadd
mov
psubsb
dec
ret
cmp
je
call
test
push
popf
push
push
fisubr
dec
call
xor
push
or
fnsave
and
push
in
pushf
xchg
lods
mov
scas
push
lods
out
push
int3
test
add
pop
sbb
push
add
push
mov
push
xor
cmps
es
test
or
fucom
loopne
popa
push
cmps
add
fs
(bad)
aad
jmp
ins
xor
xor
or
aam
ficomp
dec
cmp
dec
mov
and
cwde
xor
add
inc
jne
jnp
and
sub
into
cmovbe
jmp
add
aas
dec
jae
cmp
call
shl
adc
push
daa
jecxz
push
adc
loope
jo
loopne
mov
add
enter
popa
add
imul
fidiv
inc
inc
hlt
rcl
mov
mov
inc
mov
rcr
je
mov
int3
cmp
sbb
jl
mov
jnp
inc
imul
jl
mov
sbb
(bad)
cmc
scas
adc
adc
(bad)
and
cwde
mov
push
ins
sti
mov
ss
mov
aad
sbb
and
mov
inc
ins
adc
repnz
outs
(bad)
(bad)
push
aad
addr16
or
mov
ins
pop
xchg
dec
ins
pop
push
fimul
in
sub
sbb
call
add
mov
or
jg
mov
adc
mov
in
cli
js
ds
push
push
imul
mov
mov
sub
or
xor
adc
sar
or
mov
add
sbb
or
or
test
cmp
adc
and
ret
push
and
sbb
jnp
test
jne
mov
or
ds
inc
out
aad
xlat
xchg
or
daa
mov
sahf
add
fisttp
ret
loopne
ss
stos
repz
sar
and
loope
imul
mov
aas
xor
shl
loope
in
xchg
mov
into
fwait
sub
inc
sahf
loop
outs
xor
dec
xor
sbb
iret
pop
popa
mov
and
sub
add
out
pop
scas
sub
or
std
inc
jp
lea
out
sub
push
and
add
sub
cs
xor
xchg
sti
movs
loop
call
loop
dec
push
add
das
sub
es
mov
jne
push
sub
xchg
mov
loop
adc
jmp
jbe
jns
mov
push
xchg
mov
or
stc
(bad)
mov
div
inc
cwde
test
pushf
cli
and
popa
imul
(bad)
mov
pop
mov
sbb
test
rcl
xlat
xchg
xor
iret
jmp
lods
sbb
lea
and
sar
and
sub
push
(bad)
mov
call
push
mov
inc
sahf
pop
fcmovnu
pop
loopne
inc
mov
push
inc
or
inc
sub
ret
pop
sub
jl
jmp
je
mov
popa
out
mov
pop
fucomi
mov
add
add
push
enter
xchg
cwde
jg
icebp
add
mov
sub
or
adc
add
pop
or
jp
cdq
and
add
and
mov
adc
popa
or
sub
xchg
dec
jmp
mov
(bad)
sbb
mov
ror
test
repnz
fwait
xchg
or
add
push
adc
aaa
imul
or
idiv
or
cs
aaa
ins
lahf
jns
mov
inc
sub
xor
sar
test
inc
cld
cmovle
mov
mov
mov
repnz
ds
nop
mov
adc
push
outs
xchg
mov
pop
mov
ins
jns
les
mov
(bad)
movs
aas
sbb
mov
sub
(bad)
jno
add
cmp
test
fxch
dec
stos
lahf
addr16
(bad)
mov
sub
test
jg
and
mov
or
mov
ds
mov
add
jl
lahf
mov
pushf
sub
addr16
fs
inc
test
test
adc
sbb
enter
or
xor
test
movs
cmp
push
add
mov
sbb
add
loopne
(bad)
call
inc
sbb
aaa
lahf
or
sub
fdiv
inc
sub
jmp
rol
push
add
and
cmp
or
jnp
addr16
and
and
push
arpl
(bad)
cmp
inc
pusha
call
test
and
aas
push
mov
add
ds
add
push
sub
cmps
lahf
mov
or
fs
push
push
popa
push
popa
enter
lahf
sbb
ret
pop
or
xor
xchg
cmps
cs
lea
pop
dec
(bad)
and
jg
cmc
bound
sub
cwde
jl
rcr
inc
adc
sub
sub
into
push
adc
inc
pop
sbb
and
movs
push
dec
lea
outs
pop
ds
mov
(bad)
mov
into
das
add
mov
pop
mov
das
mov
pop
xchg
cmp
sbb
xchg
mov
out
pop
pop
aas
fdivr
push
pop
push
inc
adc
mov
ds
sub
lock
pop
or
and
push
sub
mov
pop
cmps
ds
push
bound
add
pop
sbb
jnp
push
add
sbb
es
jns
lock
(bad)
inc
add
push
pop
or
mov
mov
outs
or
je
xor
pop
pop
sub
push
pop
dec
sub
pop
arpl
pop
sbb
add
or
out
and
mov
dec
imul
add
push
fs
aaa
into
xchg
xor
sbb
add
inc
movs
rcr
ss
out
ins
sbb
cmp
imul
push
std
(bad)
ficom
push
les
es
dec
xchg
jmp
dec
ja
adc
push
rcl
and
lods
and
(bad)
imul
mov
lods
adc
shl
js
loop
fs
mov
popf
movs
mov
mov
xchg
(bad)
jnp
inc
mov
repnz
or
pop
dec
push
aaa
ins
mov
test
or
cdq
lahf
push
(bad)
aas
ins
cmp
in
(bad)
in
stos
aas
(bad)
add
repnz
scas
fstp
sar
enter
add
jmp
mov
or
movd
add
sub
pop
add
xchg
xor
push
std
add
adc
dec
pop
nop
rol
inc
mov
sbb
push
int3
imul
dec
enter
cdq
arpl
xor
mov
push
sbb
maxps
xor
cmp
xor
mov
frstor
popa
sbb
aad
fxam
add
cmp
iret
push
pop
xor
and
push
nop
repnz
test
inc
xor
sub
add
xchg
ds
sub
cwde
mov
xor
stos
and
call
push
sbb
loopne
sbb
js
jo
push
clc
popa
sbb
inc
cmp
add
cld
nop
clc
and
lea
add
pop
cmp
and
test
inc
fild
pop
dec
push
xor
mov
inc
pop
adc
jmp
mov
push
mov
test
push
mov
cmps
add
or
and
push
das
loope
cmp
adc
or
sbb
cmp
mov
mov
and
or
mov
sub
pop
fs
push
cld
cmp
ss
add
ss
sub
mov
xchg
pop
sub
outs
push
sti
aaa
push
ds
movs
sub
lea
clc
loop
ffree
lahf
and
test
lods
ficomp
out
xor
mov
lds
ss
dec
push
pop
jecxz
out
(bad)
mov
push
sbb
inc
das
aam
jle
gs
pop
dec
dec
add
dec
popf
into
dec
sub
and
mov
inc
shr
jg
xor
pop
mov
sub
xchg
push
cld
mov
push
ret
and
add
mov
jmp
add
mov
scas
sub
jmp
loope
mov
(bad)
cmp
jne
shl
jae
mov
ror
xchg
push
or
adc
dec
pop
or
cmps
lods
mov
adc
mov
mov
inc
loop
sti
test
inc
jo
pop
xchg
pop
ret
loop
ss
mov
bound
out
mov
cli
popa
pushf
jne
push
pop
or
xchg
out
inc
jns
loopne
mov
push
and
sbb
jmpw
sub
xchg
arpl
push
ret
and
xor
nop
xchg
mov
out
es
cdq
mov
or
dec
test
mov
cmp
cli
add
mov
mov
or
xchg
mov
dec
aad
cmp
xchg
sub
or
mov
or
dec
and
cld
sub
jae
pop
cld
jnp
xor
outs
mov
adc
push
inc
pop
sbb
sti
push
push
pop
sbb
sub
pop
cmps
xchg
dec
mov
add
pop
and
sbb
arpl
or
shr
sbb
pop
push
bound
sub
pop
sti
mov
push
lods
mov
popf
sbb
jb
je
jne
or
pop
add
or
jl
fld
cmp
int3
pop
jbe
inc
xor
movs
iret
fs
add
cmp
loope
ficomp
xor
loop
sub
jbe
push
call
int3
jle
adc
and
sbb
and
push
jp
stos
xchg
pop
mov
ret
in
pop
js
sub
push
shl
add
and
call
js
xor
nop
add
and
rcl
fdiv
xchg
test
cmp
not
xchg
xor
sbb
das
std
imul
xchg
push
loop
inc
cmp
and
int
push
push
ret
lds
lea
lds
ret
leave
loope
(bad)
in
xchg
pop
xchg
mov
push
mov
inc
pop
pop
fsub
jg
push
addr16
sti
adc
xchg
dec
inc
repnz
xchg
imul
(bad)
sub
xchg
std
icebp
or
jmp
push
fwait
dec
les
ins
inc
in
pop
mov
aaa
adc
je
loopne
test
add
idiv
icebp
adc
push
aas
aaa
sub
and
stos
cmp
xor
inc
arpl
pop
lea
mov
push
cmp
movs
dec
call
loope
pop
sub
call
dec
shr
(bad)
das
xchg
leave
inc
pop
add
fwait
dec
inc
cmps
cmps
mov
push
retf
clc
or
call
ins
movs
and
adc
cmp
test
cmp
cs
inc
movs
sar
and
dec
mov
fidiv
xchg
mov
pop
jecxz
ins
adc
test
pop
mov
call
adc
call
push
arpl
add
jge
inc
in
xchg
push
push
push
xchg
add
xchg
lods
mov
pop
sub
or
loop
add
pop
cmp
or
mov
cs
movs
out
inc
or
retf
fst
mov
pop
or
push
data16
push
pop
or
sar
jmp
ficom
call
push
cmpxchg
add
dec
cmp
inc
jo
inc
sub
jecxz
scas
or
push
call
cmp
test
xchg
mov
lods
ret
xlat
cmp
js
push
or
sub
test
mov
add
call
sub
push
sahf
sahf
std
test
adc
fs
icebp
ds
pushf
jo
cmp
sbb
mov
jb
xchg
lea
jle
cmp
jno
test
cmp
mov
rcr
(bad)
push
mov
adc
jns
xchg
push
lds
push
sub
outs
call
jno
fild
push
jb
jae
cld
je
or
xor
and
cmp
das
mov
enter
bound
xchg
and
inc
mov
sbb
pushf
stos
push
imul
dec
xchg
popa
ss
mov
mov
sbb
daa
mov
fadd
pop
shl
or
dec
mov
dec
sahf
inc
movs
cmp
or
bound
adc
pop
lahf
add
or
mov
or
sub
test
xor
and
sub
sar
ss
and
mov
mov
aas
fs
inc
mov
(bad)
imul
inc
add
pop
add
mov
shl
sbb
sub
inc
dec
xor
adc
lock
sbb
(bad)
cmp
jae
fmul
fwait
xchg
xchg
ins
jmp
xor
cmp
push
mov
and
imul
adc
aad
sbb
xchg
(bad)
jmp
pop
jge
test
pop
add
xor
jns
cmps
mov
mov
stos
mov
xchg
imul
mov
mov
xchg
add
push
nop
add
dec
inc
imul
ror
sbb
ds
dec
retf
out
pop
add
cmp
fld
inc
mov
inc
mov
in
mov
mov
popf
outs
mov
outs
dec
or
into
iret
ja
mov
push
add
pop
dec
in
push
fistp
enter
test
cmc
push
xchg
xchg
iret
test
xchg
es
icebp
push
and
dec
mov
xor
push
imul
daa
popa
fs
ror
cmp
repz
sub
xchg
pop
and
sbb
pop
or
adc
shr
jle
mov
arpl
ins
cmc
dec
sub
call
movs
lods
(bad)
sub
sub
jae
icebp
jne
stos
and
and
cmp
cdq
fadd
sahf
jmp
sub
icebp
adc
nop
or
cmp
pop
aas
les
mov
test
popa
xchg
in
push
push
mov
adc
xchg
popa
test
xchg
mov
jl
jns
add
push
in
jecxz
cdq
or
or
pop
mov
(bad)
icebp
xchg
fwait
mov
xchg
cmps
(bad)
pusha
mov
or
mov
imul
dec
mov
sbb
sub
mov
ja
push
lds
add
fadd
sbb
and
lahf
or
je
inc
mov
cs
cli
ret
push
xchg
outs
fsub
(bad)
jg
(bad)
call
jbe
add
and
add
shl
call
cdq
inc
pusha
jae
or
inc
lods
push
add
ficom
push
inc
add
rcl
sar
cwde
add
mov
mov
xchg
jmp
rol
pop
inc
add
cmp
xor
dec
mov
and
push
jle
or
les
lahf
or
adc
and
or
pusha
mov
dec
inc
adc
cld
add
push
lea
pop
adc
lods
or
xor
ss
push
xlat
jmp
push
mov
xor
mov
outs
xchg
and
rcr
adc
fwait
(bad)
ror
pop
mov
and
and
mov
int3
mov
iret
inc
sub
push
mov
mov
retf
sub
push
xchg
hlt
adc
or
sbb
test
aas
push
mov
and
lds
lahf
mov
popa
ins
and
icebp
mov
and
cmp
mov
ins
fadd
in
mov
inc
loopne
mov
retf
imul
jge
je
sub
pusha
lea
sbb
daa
sbb
push
sub
xor
jmp
loop
mov
lea
push
xchg
jl
daa
dec
mov
loope
mov
push
sbb
pop
test
emms
(bad)
xchg
xchg
xchg
and
dec
(bad)
dec
xor
xchg
mov
push
pop
leave
or
repz
mov
adc
pop
pop
mov
scas
push
lahf
or
and
mov
adc
enter
rcr
inc
mov
stos
shl
xchg
dec
fwait
test
push
sbb
nop
push
inc
dec
nop
rcl
sub
pop
adc
adc
push
aas
pop
add
dec
pop
xor
fimul
cmc
and
mov
jo
push
add
pop
jl
sar
jmp
imul
fisttp
inc
or
leave
dec
or
inc
and
inc
out
dec
std
movs
push
fs
sbb
(bad)
adc
and
inc
inc
imul
lahf
ret
or
push
dec
cmp
and
jo
ret
fbld
dec
ror
cmps
sahf
jp
sbb
xlat
mov
mov
adc
outs
mov
fs
lea
shr
xchg
mov
or
dec
jae
adc
pop
adc
cmp
and
jecxz
sub
imul
sar
inc
imul
inc
jp
inc
inc
add
imul
add
mov
push
sar
sub
push
je
adc
jno
aaa
jnp
sbb
leave
and
loop
dec
stos
adc
mov
pop
mov
mov
(bad)
into
sub
mov
jne
add
or
mov
add
jmp
mov
fistp
push
pop
leave
ret
in
out
adc
jle
jl
inc
or
adc
xchg
mov
mov
mov
xchg
jle
add
nop
fcmovbe
jmp
cmpxchg
push
test
rcl
add
add
setp
dec
out
fimul
or
add
call
mov
retf
sbb
xor
mov
and
xlat
xor
inc
jne
pop
loope
inc
movs
push
call
xchg
inc
push
adc
mov
and
test
inc
shl
je
test
lods
mov
xchg
call
sbb
imul
xchg
cld
jne
push
in
push
ins
loopne
pop
xchg
test
fstp
daa
sbb
cmp
das
or
inc
push
cmp
xor
mov
in
popa
pop
adc
xchg
dec
or
and
add
nop
cs
fbstp
add
test
xlat
lahf
pop
sub
fimul
jne
or
dec
xor
inc
mov
xchg
sub
push
add
add
imul
adc
jns
dec
add
ds
dec
cmp
cwde
movs
inc
push
pop
mov
(bad)
cli
cmp
retf
dec
xor
sbb
inc
pop
jl
aas
jbe
push
xchg
xor
jne
iret
xchg
mov
xlat
push
push
sahf
jne
leave
idiv
push
xor
ins
xchg
xor
outs
or
adc
and
mov
leave
push
push
fs
test
mov
ja
nop
inc
adc
jp
test
(bad)
outs
ins
pop
popa
jo
nop
push
xchg
lds
leave
cmp
jns
xchg
leave
inc
lock
mov
pop
xor
dec
das
sbb
ja
jnp
add
xchg
pusha
xor
adc
push
lods
or
out
stos
jp
scas
inc
push
xor
jns
inc
push
and
adc
push
(bad)
fst
jge
inc
or
dec
loopne
xchg
add
add
movs
push
adc
xchg
mov
add
ret
jo
push
sbb
inc
jbe
inc
js
jnp
cmp
inc
pop
sbb
and
xor
mov
mov
fbstp
out
ja
and
arpl
jmp
push
mov
sbb
call
jmp
outs
jmp
mov
dec
add
or
add
jp
shrd
mov
and
repnz
pop
mov
es
lods
add
inc
rcr
stc
sbb
int
(bad)
scas
dec
pop
imul
int3
pop
pop
push
xor
pop
js
bound
and
xor
xchg
sub
shl
jg
sbb
jg
cmp
xor
xor
push
jg
cmps
mov
dec
enter
add
call
xchg
inc
lock
pusha
jo
std
aaa
or
sub
jno
popa
add
mov
fs
icebp
xor
ret
out
ja
lea
mov
mov
pop
and
and
push
sbb
ins
sub
jne
cwde
xchg
pop
jne
sbb
mov
(bad)
jnp
pop
daa
fs
add
jle
adc
and
xchg
dec
cs
lods
cmp
and
lods
sub
and
je
movs
adc
adc
xchg
cmp
inc
shl
or
push
rol
adc
iret
ds
pusha
pop
sub
jmp
out
mov
es
and
test
ins
cmp
imul
in
js
rol
add
adc
test
push
lods
push
jbe
xchg
mov
or
aaa
cmp
push
(bad)
ja
sub
jmp
inc
jl
add
and
sub
push
lock
pop
push
mov
je
push
lock
jne
fistp
mov
add
cmp
or
pop
jg
imul
sbb
inc
push
and
dec
add
xor
shl
jb
aam
clc
jg
mov
mov
jl
rol
jns
add
mov
push
inc
(bad)
mul
das
xchg
jb
push
sbb
inc
call
ins
xor
mov
mov
pop
pop
dec
mov
sub
or
pop
pop
or
sub
cmp
push
aam
jmp
ja
mov
push
pop
jp
xchg
mov
pop
fisttp
cmc
jb
fwait
inc
ss
fnsave
add
adc
rol
sub
popf
xchg
(bad)
rol
push
cmp
test
adc
mov
push
enter
lds
ds
cmp
or
pop
cwde
in
pop
sahf
sbb
mov
and
jmp
xchg
leave
in
cs
jo
je
cmps
xor
retf
mov
and
fild
out
push
jl
pop
lds
sub
repnz
fistp
push
ror
retf
push
dec
dec
mov
retf
adc
ds
dec
leave
pop
outs
jl
cmp
pop
push
dec
dec
mov
jmp
dec
ret
outs
jmp
cld
fisubr
or
jno
push
cdq
shl
inc
fidiv
jl
add
adc
jne
or
int3
sbb
mov
cmps
nop
adc
sbb
push
fcom
dec
lods
xlat
push
loop
xor
rcl
pop
iret
and
and
mov
lds
out
inc
xor
repz
sbb
ror
jecxz
loope
sar
sbb
pusha
mov
mov
popa
dec
cmps
mov
dec
ret
stos
adc
leave
in
fbld
lahf
dec
cmps
in
ins
(bad)
jbe
ins
xchg
jl
and
fdiv
fs
ds
lds
aas
ins
push
scas
test
cmp
push
mov
jmp
pop
or
jo
js
jl
cdq
xchg
imul
leave
imul
push
jp
test
add
mov
xor
sbb
push
cmc
mov
xor
push
sub
adc
or
cmp
push
adc
aaa
pop
loopne
dec
add
sbb
call
add
es
inc
cmc
sbb
cmp
shl
xor
jo
js
and
dec
ja
and
sbb
sbb
and
sbb
or
and
in
or
inc
dec
jne
sbb
mov
push
sub
sbb
mov
pusha
dec
cmp
in
test
out
sbb
and
in
aam
xchg
inc
xlat
xchg
call
lock
add
pop
mov
pusha
paddsw
mov
div
dec
adc
lahf
xchg
retf
mov
adc
imul
je
retf
inc
dec
push
fistp
push
call
xchg
push
cdq
push
out
xor
adc
xor
mov
xor
shl
and
cmp
cdq
push
adc
ins
mov
scas
cmc
push
cmp
dec
add
pop
fadd
call
sbb
call
xor
cmp
push
jp
cmp
cmp
mov
push
jge
sbb
fs
adc
mov
dec
inc
ds
arpl
sub
gs
cmp
repnz
shr
hlt
jo
or
inc
lods
pushf
cmp
dec
and
iret
clc
dec
sub
mov
ja
rcr
inc
sbb
cmp
aas
jo
xlat
test
and
mov
jae
test
mov
mov
(bad)
add
(bad)
xchg
add
jmp
or
inc
test
mov
adc
sub
add
lods
(bad)
cmp
jne
add
dec
jle
xor
pop
add
cmps
push
mov
push
stc
push
dec
push
arpl
lea
or
push
into
fcomi
in
cwde
dec
(bad)
daa
mov
xor
(bad)
into
xor
lods
xor
ja
aam
cmp
je
aad
or
in
fcomp
push
add
bound
cmc
push
dec
call
mov
mov
inc
push
dec
or
mov
setbe
or
mov
daa
push
ins
inc
mov
pop
int3
pop
pop
pop
jmp
stos
std
dec
push
push
xchg
nop
cld
dec
add
pop
test
hlt
add
xchg
sbb
or
retf
enter
xor
(bad)
repz
mov
fst
xor
xor
ja
lahf
adc
in
jne
and
or
sub
arpl
hlt
call
sbb
ins
xchg
push
cmp
adc
aaa
lock
(bad)
add
and
cmp
add
push
sub
shl
enter
jo
sbb
mov
xor
add
loop
sub
leave
sbb
cld
call
dec
retf
mov
ds
(bad)
and
sbb
xor
adc
push
stc
inc
call
add
les
fisubr
inc
cmp
mov
out
xor
push
push
ret
hlt
adc
pop
rcl
sbb
push
inc
mov
aas
aam
inc
pop
xor
mov
add
sar
mov
xor
inc
(bad)
fld
mov
xchg
push
sbb
inc
inc
neg
jmp
and
in
xchg
in
mov
lods
adc
push
pop
cdq
sub
jge
outs
push
mov
shl
add
xchg
jo
cmp
call
push
push
rcl
out
pop
dec
call
pusha
inc
arpl
cli
out
mov
xchg
cmovo
dec
gs
xor
aad
push
and
idiv
and
punpckhdq
mov
push
or
lahf
inc
sbb
jl
es
cmps
sbb
adc
push
and
cmp
or
dec
cmovle
lea
push
sbb
mov
mov
push
jnp
jns
test
and
ds
mov
push
ret
jne
push
leave
inc
ret
pop
inc
imul
lods
sbb
or
lods
daa
mov
dec
push
call
es
fs
xchg
sahf
mov
retf
add
sub
bound
pop
popf
ds
aaa
inc
ret
call
sbb
and
sub
mov
dec
push
push
ss
cmp
push
(bad)
jg
add
in
sub
xor
sbb
jbe
sar
cmps
add
pop
mov
adc
xor
xchg
fstp
out
shr
sub
ffreep
or
xchg
scas
das
sub
mov
loopne
sbb
or
add
fsub
xor
sub
cmp
cmp
or
adc
xor
loope
stos
leave
push
pop
rcl
jae
inc
sub
ffree
rol
mov
inc
test
push
add
rcr
sub
movs
mov
outs
bound
sbb
call
jg
pop
sbb
cs
popa
int
xchg
ss
push
imul
pusha
xor
or
pop
mov
imul
in
mov
imul
cmp
sbb
fsubr
xchg
in
cmp
push
jb
ret
es
xor
push
jo
dec
outs
dec
push
push
pop
je
add
sar
sbb
(bad)
mov
dec
stos
adc
inc
leave
sub
or
or
outs
fs
push
or
add
icebp
fdivrp
mov
clc
fsub
data16
dec
cmp
retf
imul
or
push
pop
xor
push
pop
sbb
call
and
xor
inc
jp
add
in
or
and
sbb
push
inc
neg
mov
jbe
popf
pop
dec
sbb
pop
push
inc
adc
dec
lahf
add
(bad)
jg
or
cmp
dec
pop
push
push
add
push
bound
add
sub
jp
sub
or
push
cdq
dec
mov
lods
push
stos
stos
push
(bad)
sub
lea
push
or
and
sbb
jnp
shr
push
adc
inc
sbb
call
adc
es
sub
shl
inc
push
outs
mov
popa
mov
xor
xor
or
es
and
mov
add
test
pop
pop
aam
jns
mov
pop
jecxz
sbb
mov
inc
jle
or
mov
jo
dec
or
xor
cmps
push
call
push
jns
inc
push
push
rol
cmp
and
test
jmp
jge
pop
add
(bad)
mov
pop
and
adc
call
add
loopne
mov
or
inc
imul
in
sbb
cmp
dec
add
pusha
or
adc
into
lods
adc
cmps
or
mov
test
adc
xor
sbb
movs
xchg
mov
adc
(bad)
fldcw
mov
mul
popa
aaa
add
pop
jbe
jmp
leave
and
(bad)
dec
in
and
pop
aam
and
mov
shl
jecxz
jns
shl
leave
push
add
pop
mov
(bad)
push
scas
test
aam
pop
mov
jo
and
sub
movs
push
in
ins
push
es
push
push
clc
imul
sub
addr16
mov
ror
and
or
test
(bad)
dec
sbb
fisubr
(bad)
cmp
test
aas
mov
push
mov
pop
xor
push
mov
and
add
jb
sbb
jmp
fadd
sbb
das
lahf
push
pop
add
push
stc
push
repnz
push
sahf
iret
and
adc
mov
xchg
xchg
dec
mov
outs
pop
(bad)
icebp
sahf
dec
sbb
cdq
jl
pop
xor
sbb
outs
scas
pop
popf
rol
dec
mov
and
popa
icebp
push
test
lds
cmc
ins
jge
dec
push
jl
outs
inc
or
xchg
and
add
or
and
pop
hlt
xchg
dec
pushf
adc
inc
test
retf
sbb
ffreep
jne
pop
icebp
loopne
xor
inc
shr
lods
sub
ficom
mov
inc
cdq
add
lahf
imul
int
ins
les
and
into
xchg
(bad)
popa
data16
mov
jnp
mov
adc
mov
pop
js
mov
mov
jne
test
mov
xor
(bad)
pop
out
test
jle
sub
movs
or
or
dec
push
mov
(bad)
cmps
jns
stos
les
ds
xor
iret
pop
add
adc
inc
dec
jmp
sub
movs
sbb
or
ror
popa
and
sub
sub
pop
mov
inc
enter
lea
sbb
sbb
jbe
cmp
inc
sbb
sbb
push
loop
into
xor
adc
push
test
push
(bad)
sbb
jno
cmp
mov
pop
push
sbb
push
add
pop
mov
ins
xor
mov
cld
jp
sahf
xchg
cmp
adc
mov
popa
sub
out
push
or
jle
mov
lea
mov
pop
sbb
xchg
rol
dec
repnz
push
sar
mov
leave
lods
aas
xchg
xor
das
xchg
push
inc
pushf
mov
inc
sub
xchg
out
mov
push
dec
ret
push
lahf
cdq
ret
pusha
pop
jp
push
push
mov
mov
shl
neg
ja
rcl
mov
sub
repnz
add
fidiv
int3
jb
popa
outs
(bad)
aad
inc
mov
mov
mov
mov
outs
xor
push
sbb
out
push
inc
addr16
(bad)
fmul
es
js
jns
sub
out
gs
adc
loope
xor
mov
fs
test
or
sub
imul
dec
pop
dec
mov
jg
sbb
adc
call
dec
xchg
jns
rcl
push
inc
adc
test
and
in
mov
adc
(bad)
sbb
lea
xchg
fild
mov
inc
jge
push
add
mov
fs
push
or
sbb
xchg
pop
mov
jle
les
sub
or
mov
sub
sbb
outs
push
cmp
sbb
nop
fsub
or
adc
sub
sub
fs
jns
test
aam
inc
dec
fbstp
outs
call
inc
cld
das
inc
lods
rcr
jmp
mov
daa
lahf
push
or
or
lahf
movs
cmp
je
jmp
pop
or
call
rol
add
je
clc
lea
call
cmps
aaa
mov
adc
and
call
cmp
jmp
jmp
sbb
test
bound
inc
cmp
sub
mov
cmp
pop
das
or
cmp
cmp
jle
test
dec
in
inc
pop
shl
nop
jl
push
je
mov
js
mov
mov
jb
mov
mov
aas
mov
adc
xchg
mov
add
lahf
push
add
push
ds
push
push
jmp
pop
push
cmp
pusha
add
push
into
in
jb
out
push
cs
mov
and
mov
aaa
stc
aas
push
xchg
out
aas
add
add
xchg
jmp
sbb
les
pop
sbb
push
loop
push
dec
dec
sbb
iret
shr
int3
sti
jns
fld
push
nop
(bad)
xor
aam
add
aam
xchg
pop
lea
push
inc
ja
inc
int
or
push
sub
inc
add
sbb
and
mov
and
sbb
sbb
mov
pop
dec
sbb
inc
add
sbb
and
inc
jle
mov
push
xchg
inc
fidiv
adc
mov
jne
sbb
daa
xor
fwait
xchg
adc
cmp
mov
test
(bad)
inc
lahf
push
jnp
add
sub
push
mov
lock
xchg
and
pop
cmp
movs
in
add
or
or
push
fcomp
call
nop
jb
add
push
rcl
push
fadd
test
movs
addr16
pmaddwd
retf
out
push
push
xchg
push
cmp
jp
dec
or
cmp
push
pop
and
arpl
scas
sbb
call
mov
pop
push
inc
ret
cmc
sbb
push
add
mov
pusha
out
stos
cmp
test
push
pop
jb
retf
mov
fimul
jg
leave
inc
cmp
or
xchg
addr16
movs
mov
xchg
test
sbb
sbb
mov
ins
js
mov
enter
sbb
push
out
leave
and
or
add
sbb
and
ins
push
push
inc
leave
pop
mov
pop
mov
in
and
and
pop
push
bound
and
pop
push
call
push
test
inc
cli
mov
pop
aam
push
(bad)
outs
and
cmc
push
retf
sub
jns
mov
fldenv
xchg
les
enter
cmps
cmp
adc
pop
mov
(bad)
std
cli
push
ret
iret
mov
imul
fistp
shl
add
mov
aaa
add
cmps
daa
cmp
sti
mov
(bad)
aaa
test
jno
jno
jne
inc
ret
dec
addr16
fimul
ret
push
sub
xchg
xchg
jb
dec
imul
jg
push
inc
push
push
lods
pop
xor
push
adc
mov
mov
popa
sub
jp
sub
loopne
int
loopne
push
add
imul
mov
xor
and
sub
pop
(bad)
in
sbb
mul
push
or
pop
or
mov
shr
dec
mov
and
inc
mov
leave
add
(bad)
shl
jnp
pop
jae
or
cmovs
push
adc
adc
mov
sub
jbe
(bad)
fisttp
mov
push
addr16
je
add
pop
jmp
dec
or
pop
in
add
mov
mov
mov
xchg
or
(bad)
sub
dec
sti
hlt
mov
dec
adc
push
push
jge
add
jle
xchg
add
imul
mov
adc
test
fwait
xor
sub
push
push
orps
or
pop
neg
mov
fld
pop
ins
pop
adc
ss
(bad)
not
fisttp
popf
inc
mov
mov
icebp
add
in
test
fwait
push
and
xor
paddusw
adc
sbb
movs
xchg
push
pop
outs
hlt
sbb
adc
jg
sbb
add
mov
fnstcw
clc
sub
retf
jmp
xchg
es
pop
pop
add
push
es
punpcklbw
lock
outs
sbb
ret
adc
and
pop
enter
and
cmp
jmp
cmps
mov
add
call
aad
daa
fsqrt
add
pop
cdq
adc
pop
adc
adc
in
xor
test
ret
and
or
sub
das
call
push
push
frstor
sub
scas
sbb
dec
scas
dec
imul
add
pop
mov
push
movs
push
push
mov
ficomp
mov
xor
push
mov
cmps
hlt
push
pop
movs
sub
or
add
int
or
add
add
sub
xchg
xchg
sbb
lahf
pop
or
jb
ins
or
popf
mov
jg
xor
push
mov
mov
std
inc
jg
inc
push
push
add
push
neg
push
sub
shl
add
jbe
dec
xor
fwait
push
sti
jb
cmps
cmp
push
push
pop
and
call
pushf
ds
xchg
lods
iret
add
push
addr16
mov
retw
aas
fld
loope
mov
(bad)
out
add
push
or
les
clc
add
pop
sub
inc
pop
repnz
push
int3
test
sbb
je
push
jmp
adc
sar
outs
push
add
adc
imul
cmp
aam
loope
test
push
test
dec
dec
and
es
imul
and
adc
movs
addr16
or
push
pop
or
push
scas
rol
push
sahf
data16
call
mov
adc
bound
popa
xor
mov
leave
ret
out
push
(bad)
jb
movs
lea
adc
repnz
mov
retf
inc
lea
push
fstp
aas
dec
ret
bound
xchg
push
idiv
or
xchg
and
pop
repz
loope
mov
hlt
jmp
adc
outs
push
fdivp
inc
cmp
or
fisubr
imul
out
jge
popf
es
and
add
sbb
xor
clc
or
push
jne
mov
and
shr
test
jno
inc
mov
jns
sub
popa
dec
loop
mov
xchg
add
push
retf
adc
rol
xor
ret
shl
test
out
xchg
mov
or
and
xchg
imul
push
sub
lea
sti
inc
pop
popf
sub
daa
(bad)
cmps
movs
cmc
add
cmp
pop
push
cmp
xchg
add
mov
mov
dec
and
xor
icebp
push
retf
push
dec
cs
jo
cmp
jle
push
cmp
outs
push
pop
movs
or
and
pop
inc
push
pop
pusha
imul
sub
dec
pop
push
push
aam
imul
pop
in
xchg
xor
sub
add
pop
int
cs
lods
cmp
or
ret
add
cdq
test
mov
fbstp
inc
(bad)
fmul
xchg
cwde
ja
ret
retf
rcl
je
jnp
xor
jmp
enter
add
aas
jb
cmp
lahf
(bad)
fiadd
and
sub
mov
inc
push
sbb
dec
xchg
inc
sbb
cli
jb
push
pusha
xchg
xchg
mov
mov
jge
add
jo
push
aaa
hlt
sub
icebp
cmp
call
or
test
cwde
pop
xor
jo
push
test
push
pop
add
and
add
cmp
dec
sbb
dec
bound
dec
nop
sub
sub
pop
or
arpl
inc
add
stc
and
xchg
mov
(bad)
retf
bound
loope
in
shl
leave
add
inc
loop
pop
sub
and
mov
fidiv
(bad)
sub
ret
push
ins
imul
lock
pop
mov
xor
push
xchg
aaa
imul
les
(bad)
adc
cmp
sbb
jg
inc
add
jnp
in
sbb
mov
or
hlt
cwde
jp
dec
push
or
je
push
nop
leave
inc
movs
dec
cmps
ins
cmp
movs
movs
mov
and
sbb
fidiv
push
add
pop
push
and
ret
lea
sub
iret
inc
xor
dec
icebp
adc
(bad)
in
lahf
sbb
ds
adc
and
addr16
dec
mov
sbb
xchg
int
cmp
xchg
push
sub
loop
mov
fild
popa
fld
sbb
aas
sub
adc
in
cwde
push
inc
and
sti
push
dec
aas
or
push
mov
ins
mov
lds
add
nop
inc
fs
mov
outs
ds
scas
pop
and
or
or
fimul
xchg
xchg
or
dec
jb
add
inc
mov
stos
adc
jbe
adc
cmps
and
cmp
inc
push
popa
add
dec
fs
in
or
ret
cmp
cmp
cmp
gs
adc
je
jmp
or
push
push
jmp
push
inc
or
pop
or
movs
je
out
sub
in
cmp
adc
mov
into
push
push
in
cmp
fninit
sub
test
pop
shr
je
xor
scas
dec
push
or
loope
sbb
push
add
imul
sar
cmp
xor
in
cli
push
rcl
test
add
imul
mov
mov
cmp
mov
push
retf
or
inc
inc
dec
sub
cmp
and
cli
xchg
movs
aaa
and
and
sbb
mov
mov
adc
scas
jne
add
sbb
mov
test
xchg
cmps
push
mov
push
lods
mov
and
or
je
mov
setne
jle
xchg
shr
add
sti
out
es
ins
jmp
dec
sub
adc
loope
sub
cmp
lock
jl
inc
jmp
cmps
ins
rcl
imul
leave
sub
mov
test
pop
mov
adc
sbb
cmps
or
dec
mov
mov
fsubr
push
test
mov
jb
fist
xor
(bad)
push
call
or
inc
ret
jp
es
pop
je
and
ds
(bad)
push
lea
jmp
mov
adc
add
sbb
jecxz
adc
mov
mov
mov
dec
and
jmp
loop
or
xor
inc
jg
je
lahf
imul
jmp
mov
je
shl
es
test
popf
jae
inc
dec
or
aas
sar
jns
aaa
push
jl
js
mov
xlat
mov
call
movs
lea
dec
fadd
xor
fwait
mov
imul
fisub
je
jle
sahf
mov
ret
pop
or
scas
jmp
push
xor
(bad)
test
rcl
iret
jno
dec
jmp
xchg
and
mov
inc
inc
xor
adc
aas
ss
aas
and
push
fsubr
inc
fs
fst
cdq
mov
push
arpl
outs
sub
cmp
popa
loopne
dec
inc
and
(bad)
xchg
out
fmul
in
push
inc
mov
or
ins
pop
in
and
xchg
popa
aas
adc
or
arpl
inc
pop
lahf
xor
lods
pop
cmp
cwde
lock
lahf
mov
repnz
inc
aam
jg
fs
mov
or
lock
push
cmps
pop
or
dec
or
add
push
push
jnp
xor
lea
outs
(bad)
xchg
clc
call
lea
mov
jg
mov
xchg
add
dec
stos
stos
cdq
push
xchg
les
dec
xchg
xchg
mov
iret
test
repz
outs
pusha
pop
and
dec
cmps
jo
pop
(bad)
enter
xchg
popa
push
test
rcr
xchg
adc
imul
lock
sub
inc
sti
cmp
outs
and
push
mov
adc
ds
xchg
iret
xchg
fwait
outs
cmp
pop
popf
xchg
inc
popf
movs
icebp
inc
xchg
add
cmp
bound
jmp
dec
inc
push
loopne
jns
fwait
addr16
addr16
sub
add
mov
repnz
dec
mov
cmp
lock
ds
add
push
push
inc
mov
pop
ja
add
add
daa
push
push
pop
add
aad
push
xchg
popf
push
push
and
push
sbb
sbb
lock
ins
dec
mov
cli
xor
lods
ds
or
neg
stc
and
push
cmps
or
aas
jle
cmp
std
aam
mov
push
adc
mov
add
push
and
jle
mov
ja
mov
iret
repz
cli
sbb
adc
lea
cmp
xor
fmul
shr
mov
cmp
sar
inc
push
jbe
push
inc
sub
push
je
pop
or
or
sub
cmps
mov
xor
arpl
jg
mov
xlat
or
push
push
call
and
lods
push
push
bound
fidivr
sbb
int3
inc
adc
dec
adc
test
int3
mov
jno
push
in
lea
hlt
adc
jg
jg
cmp
cmp
jge
mov
cmp
ins
dec
dec
pop
mov
jbe
jle
adc
(bad)
sahf
(bad)
and
arpl
mov
and
retf
add
into
pop
test
int
adc
xor
or
xor
popa
sbb
(bad)
iret
and
mov
pop
dec
mov
sub
cwde
out
add
mov
sub
ins
add
and
pushw
cmp
cs
sbb
xchg
dec
sar
xchg
xor
push
int3
adc
ss
call
jle
in
mov
outs
mov
sbb
or
pop
arpl
sub
xchg
adc
add
in
xor
or
cld
ss
mov
mov
cmp
repnz
inc
push
sbb
or
in
inc
and
jg
sbb
sub
sub
(bad)
sub
fistp
xor
mov
push
mov
cld
or
pop
shl
push
jb
jmp
pop
mov
add
or
les
push
leave
ret
jno
outs
call
push
xor
xor
ret
stos
xor
or
mov
inc
pop
(bad)
je
aas
pusha
mov
or
jg
sub
pushf
mov
ja
fidivr
cmc
inc
imul
sar
iret
mov
inc
mov
fld
movs
and
call
ins
cmc
dec
add
and
jg
jnp
add
dec
js
jbe
xchg
test
add
and
dec
test
push
push
pop
lods
cmp
and
out
pop
cmp
dec
mov
mov
ret
lea
xchg
test
test
scas
mov
inc
adc
mov
jae
dec
and
or
or
push
mov
call
aaa
jb
or
ss
push
inc
popa
rcr
pop
add
or
inc
push
call
int
(bad)
cli
cmc
inc
adc
mov
daa
nop
jo
jg
std
inc
outs
xor
jb
gs
inc
out
xor
add
cmc
in
mov
xor
or
and
in
and
add
sbb
in
aad
inc
inc
push
sub
push
xor
enter
add
xchg
inc
ds
fist
add
cmp
sti
(bad)
lahf
mov
pop
and
cs
xor
or
daa
mov
mov
sbb
call
mov
call
in
arpl
add
lea
cmp
call
in
fcom
inc
dec
inc
dec
and
stc
xchg
loopne
mov
cmc
push
(bad)
jne
mov
les
xor
add
mov
call
loopne
add
dec
push
fs
(bad)
gs
fcomp
and
ins
xor
ins
lea
xchg
jno
or
mov
jae
inc
dec
pushf
cwde
jp
inc
mov
jmp
and
mov
xchg
xlat
inc
xchg
xlat
jl
jno
add
in
rcr
lods
jg
test
add
mov
xor
or
fild
xchg
wbinvd
movs
push
mov
out
and
inc
push
outs
adc
ret
push
inc
into
adc
xchg
pop
rol
or
leave
cmps
lock
jecxz
lock
jo
pop
cmp
sub
test
or
les
xor
cld
xor
dec
and
xchg
sub
push
adc
stc
jmp
pop
cld
inc
and
into
mov
sub
cmps
jmp
cmp
pop
sub
xchg
cwde
sbb
xor
xchg
outs
ins
stos
or
inc
aas
jmp
push
mov
push
test
aaa
adc
xor
mov
sbb
add
cli
enter
xchg
popa
retf
gs
retf
and
dec
std
add
sbb
outs
or
pop
invd
dec
add
push
or
xchg
fsubp
gs
pop
push
imul
fdivr
int
jp
mov
mov
je
push
add
nop
cmp
push
dec
push
mov
push
jmp
repnz
adc
cmp
pop
inc
fcom
jge
or
daa
and
test
mov
xlat
jb
popa
adc
aaa
pusha
arpl
pusha
fmul
or
std
adc
mov
imul
scas
jge
(bad)
push
movs
adc
adc
adc
mov
js
rcl
(bad)
(bad)
dec
push
das
scas
loop
scas
jmp
call
add
adc
mov
pop
sbb
push
sub
nop
pop
stc
icebp
nop
add
sbb
fbld
xor
cli
mov
cs
jb
jbe
xchg
jl
gs
push
mov
in
pop
cmp
push
aam
ss
outs
adc
shl
imul
mov
mov
test
mov
sar
and
int
es
push
mov
retf
bound
and
jg
add
add
popf
add
add
or
add
add
pop
xlat
test
stos
xchg
add
mov
js
sbb
dec
sbb
ret
rol
mov
stos
xchg
and
js
push
sbb
sbb
pop
lods
pusha
cli
cmp
adc
add
daa
inc
mov
out
(bad)
adc
dec
jne
push
sbb
jle
jecxz
mov
es
or
fldcw
sbb
pop
or
add
jge
aas
jle
xlat
ins
and
es
pop
cmps
push
loope
out
cmp
call
loopne
movs
jle
sbb
sub
mov
push
rcl
sbb
pop
cs
inc
or
cmp
scas
jg
clc
(bad)
call
idiv
dec
outs
adc
mov
inc
aaa
push
pop
leave
in
adc
es
fiadd
push
sub
mov
rcl
and
ss
iret
dec
jle
mov
and
(bad)
fldenv
repnz
popa
call
leave
retf
and
addr16
fwait
inc
push
mov
pusha
jg
cmp
add
mov
call
xchg
int
adc
inc
add
sbb
adc
fiadd
sbb
xor
mov
rcl
cmc
push
mov
(bad)
js
shr
clc
cmp
xor
xchg
shr
cmc
(bad)
push
dec
or
and
outs
pop
and
and
pop
ret
or
and
clc
lock
in
cdq
test
xor
and
imul
out
popa
dec
push
pop
pop
push
stc
je
push
dec
and
push
in
call
fild
inc
test
repz
or
and
and
in
sub
int
jl
or
cmp
adc
pop
nop
sbb
mov
inc
cld
les
js
push
xor
jg
push
adc
pop
outs
add
ss
xor
or
mov
repz
or
mov
sub
xchg
lahf
sbb
jl
outs
nop
inc
push
cmp
ss
push
mov
push
into
sti
fcomp
(bad)
pop
xor
jne
leave
push
inc
nop
xor
and
lahf
jmp
cmp
lahf
out
mov
push
loopne
cmp
retf
mov
push
mov
loop
cmp
add
adc
push
movs
adc
pusha
mov
cmp
sbb
or
adc
sbb
jb
dec
mov
push
jg
dec
std
inc
aam
fdiv
(bad)
sti
or
or
mov
add
push
push
iret
pop
pop
es
stc
mov
inc
and
jne
shl
push
loope
test
mov
test
fmul
push
in
cmp
imul
shl
xchg
and
mov
xchg
dec
mov
cld
dec
and
and
fs
xor
cmp
sbb
cmp
pop
aaa
cmp
in
out
or
pusha
pop
out
add
xor
mov
add
and
add
or
scas
jl
adc
lahf
ins
pop
jmp
jae
inc
cdq
push
push
xor
jb
sub
ret
mov
dec
jo
adc
mov
push
mov
push
add
inc
mov
int3
cli
pop
enter
cmp
push
push
popw
rcr
xchg
test
ins
sbb
pop
mov
push
pop
imul
mov
(bad)
mov
pusha
lea
es
and
cld
nop
test
sub
mov
(bad)
in
push
inc
loope
out
jg
retf
test
pop
lock
push
sbb
jb
sub
repz
pop
or
mov
push
enter
push
mov
add
add
ins
(bad)
idiv
adc
lods
or
or
jb
shr
nop
lea
xchg
or
jne
mov
jnp
bound
sbb
xchg
add
mov
out
push
outs
cmp
adc
jge
inc
test
out
in
(bad)
pusha
jle
mov
mov
pop
push
(bad)
adc
sub
gs
mov
frstor
mov
mov
rcr
add
(bad)
stc
cmc
stos
and
sbb
dec
add
xchg
xor
adc
inc
sbb
pop
or
push
inc
ret
jl
mov
cmp
adc
pop
jmp
test
or
pop
mov
stos
retf
stos
and
add
je
push
or
sbb
inc
sbb
sub
add
fs
fdivr
mov
shl
enter
xor
pop
pop
pop
in
clc
add
(bad)
out
xchg
es
js
push
(bad)
jle
adc
adc
(bad)
dec
ret
mov
or
(bad)
dec
loop
aas
lahf
xor
sbb
push
ret
into
retf
sbb
xchg
xchg
retf
in
sbb
pushf
or
and
ins
push
pop
test
jg
lods
in
inc
rcl
mul
pop
mov
test
add
fldcw
inc
loopne
add
mov
inc
rcr
jmp
loop
jb
jbe
dec
or
pop
sahf
ds
fwait
jnp
inc
fadd
push
cmps
rdtsc
sub
fild
mov
sti
fwait
sub
cmp
xlat
add
or
add
or
jne
and
fnstsw
stos
pop
push
cmp
push
repnz
adc
push
test
inc
dec
adc
sub
sbb
(bad)
(bad)
cmp
lods
pop
mov
sbb
addr16
push
add
cmp
out
repz
pop
inc
jp
(bad)
jbe
mov
lock
jmp
imul
gs
inc
jne
push
cld
jle
fnstenv
pop
movs
sahf
add
stos
in
ror
push
or
mov
sbb
sbb
mov
sti
pop
mov
xor
test
sbb
jmp
ret
sbb
push
mov
aam
loope
adc
data16
adc
and
sub
mov
and
mov
das
dec
pop
add
push
add
repnz
shl
pop
add
aas
sbb
je
mov
xor
xchg
adc
mov
or
mov
std
and
(bad)
jbe
and
mov
ret
or
sub
ins
in
mov
sub
js
adc
ss
stos
or
ds
pop
xlat
shl
jo
mov
pop
aam
daa
hlt
je
push
ficom
or
call
cmp
inc
dec
nop
sbb
add
icebp
dec
add
loop
push
idiv
and
imul
loopne
inc
add
enter
sbb
add
inc
(bad)
or
cld
mov
inc
add
mov
mov
mov
sar
inc
inc
and
push
sub
or
push
and
gs
add
inc
add
xor
inc
adc
adc
retf
dec
enter
mov
mov
loope
push
ficom
push
add
aas
pop
(bad)
sub
lock
mov
mov
adc
pop
mov
adc
cdq
int3
dec
vpackssdw
arpl
fldpi
jg
dec
rcl
xchg
stos
call
adc
push
test
jle
add
mov
aad
stos
jbe
sahf
cmp
popa
call
aad
and
mov
mov
jge
out
rcl
jp
call
lds
(bad)
les
xchg
sbb
nop
add
mov
hlt
shl
in
and
add
add
scas
nop
pop
leave
clc
add
clc
add
inc
pop
and
leave
clc
add
enter
inc
pop
and
enter
or
xchg
dec
enter
pop
lahf
ret
dec
test
dec
mov
je
push
xor
push
xor
sbb
add
rcr
mov
in
jp
cmp
xor
outs
xchg
push
and
aaa
jmp
push
mov
js
xor
add
mov
lods
enter
add
mov
in
lds
mov
loope
nop
lea
gs
sbb
mov
mov
mov
pop
fimul
jno
cmp
pop
xor
bound
pop
push
fldcw
mov
ja
or
adc
pop
dec
mov
enter
add
or
mov
sub
and
pop
sub
jle
cmp
lock
pop
pop
adc
pop
push
mov
sbb
popf
std
jbe
addr16
je
in
rol
mov
ja
mov
dec
or
cmps
rcr
pop
mov
cmp
inc
push
cli
pmaxsw
lea
lods
ins
pop
ds
out
adc
dec
fsub
mov
jmp
hlt
jl
add
adc
xchg
push
mov
xchg
ficomp
add
ss
in
idiv
ins
sub
cmp
and
adc
ins
adc
mov
aaa
je
rol
stos
jo
sbb
pop
sbb
scas
mov
out
pop
sahf
ldmxcsr
xchg
cmp
out
imul
aam
cmps
mov
int3
or
clc
in
shl
rol
lods
loopne
pop
and
push
adc
hlt
movs
inc
loope
clc
jns
pop
cmp
or
jp
mov
adc
mov
std
add
lds
cmp
dec
iret
and
adc
out
cmp
cli
xchg
sub
pop
adc
test
mov
ret
sar
rcr
or
(bad)
in
clc
inc
in
inc
or
inc
cmp
ret
mov
mov
mov
fwait
add
in
test
add
sbb
je
imul
sbb
lahf
es
mov
jne
pop
daa
pop
loopne
nop
pop
mov
in
xchg
inc
ds
leave
push
call
pop
cdq
adc
(bad)
scas
xchg
mov
dec
popa
dec
ds
ret
pop
pop
pop
jae
push
lahf
push
das
ret
cld
jno
out
in
add
push
test
add
fadd
int
add
or
or
or
aas
xor
xchg
pop
daa
int3
mov
adc
mov
push
ret
pop
add
cmp
inc
xchg
cmp
scas
push
add
push
jb
ja
xchg
push
push
lea
xor
fcmovnb
add
cwde
retf
sahf
fistp
cmp
in
or
sar
or
(bad)
push
push
add
stos
mov
mov
mov
adc
xchg
add
pop
pusha
rcr
lock
movs
inc
and
cmp
mov
dec
jl
xchg
movs
mov
add
out
push
loope
push
sub
mov
imul
imul
mov
or
stc
mov
lock
push
mov
out
jle
add
sbb
inc
or
jbe
sbb
rcr
cmps
inc
call
std
ds
jge
adc
(bad)
push
and
aam
inc
add
mov
add
rcl
ud0
stos
sub
pop
in
mov
cmp
jbe
and
std
not
or
addr16
sbb
sub
xchg
ins
and
inc
and
ss
xchg
je
push
pop
jl
sbb
lock
pop
sub
fnstsw
jae
int
xor
mov
and
push
mov
jo
sbb
(bad)
in
push
icebp
xchg
(bad)
cmp
mov
fld
sar
cmp
imul
or
pop
icebp
ins
shr
sub
sub
fldcw
in
retf
sub
repz
add
or
jns
dec
sbb
mov
call
rol
cdq
jp
inc
push
xlat
add
inc
cmp
cmp
add
hlt
mov
sub
cmp
xchg
mov
mov
or
pop
repnz
add
xchg
inc
sub
jno
daa
into
lock
cmp
xchg
and
aaa
add
cmp
sbb
jne
outs
loop
add
mov
cmp
fist
or
shl
jmp
(bad)
cli
lock
mov
outs
add
ror
enter
jae
lea
daa
jmp
pop
add
sub
cmp
xor
and
loope
stos
add
xchg
push
shr
add
data16
add
add
and
shl
retf
cmp
push
iret
int
mov
out
ror
push
iret
sbb
lock
mov
mov
popf
and
scas
rcl
mov
lahf
push
push
add
push
lea
mov
xchg
outs
rcl
push
inc
inc
stc
jp
pop
xchg
call
push
pop
rcl
dec
mov
or
std
sbb
adc
mov
inc
test
pop
or
xchg
push
inc
fidiv
inc
retf
pop
inc
and
pushf
movs
leave
mov
xchg
into
sbb
push
xchg
push
push
cmp
scas
add
daa
loope
or
shl
mov
scas
or
or
and
xor
adc
or
or
adc
ins
cmp
and
sbb
cmps
idiv
sbb
shl
loopne
movs
lock
fcom
nop
sti
gs
sahf
cmc
addr16
pop
and
cwde
cmp
lock
ja
adc
shr
(bad)
cmps
mov
mov
push
int
dec
add
pop
sub
popa
mov
dec
nop
hlt
int3
repz
fist
int
sub
in
ret
adc
add
lsl
mov
ret
movs
push
in
paddusw
je
mov
or
in
aas
mov
jo
test
sub
scas
ins
jmp
mov
mov
adc
or
test
daa
cld
xchg
xchg
cli
and
mov
push
call
(bad)
xchg
in
call
mov
push
sbb
xchg
pop
movs
movs
out
xor
popa
add
sahf
sbb
fiadd
cmp
popf
xchg
scas
stc
retf
or
je
pop
jne
mov
cmc
or
push
mov
mov
jo
xchg
push
mov
enter
mov
lock
dec
jnp
push
push
push
mov
and
add
nop
mov
adc
fwait
jmp
or
xor
aaa
push
test
inc
movs
push
mov
xor
fwait
js
fisub
ds
cmp
popa
test
hlt
leave
or
pop
imul
scas
jb
push
pop
scas
mov
xor
sar
push
mov
rcr
clc
ins
sub
das
sbb
out
push
pop
out
sub
jecxz
shl
adc
xor
mov
add
adc
pop
mov
stos
scas
sub
rol
pop
fwait
lods
stc
sub
inc
imul
aad
and
add
ror
xchg
imul
or
xchg
jne
xor
repz
or
arpl
dec
ins
mov
xchg
pop
aas
sub
loopne
adc
mov
or
push
pushf
fdivrp
or
dec
ret
dec
and
shr
adc
push
ret
pusha
or
xchg
add
pop
pop
sub
jns
sub
mov
lods
movs
scas
xchg
push
add
leave
add
repnz
mov
aam
or
add
setno
add
ins
rcr
jne
ins
or
and
movs
add
loopne
xchg
xchg
xor
bound
mov
add
daa
mov
add
pop
inc
cld
int3
call
or
xor
not
and
cmp
fcom
lods
mov
xor
dec
xchg
and
push
mov
mov
(bad)
fmul
pop
dec
sub
mov
push
push
mov
adc
pop
rcr
mov
lds
mov
ret
push
pop
mov
push
fbld
sbb
push
mov
add
push
ss
lea
cmp
sub
or
pusha
ds
push
js
sub
add
pusha
fadd
aas
cmp
jbe
nop
adc
cmp
dec
sbb
cmp
test
xchg
pop
sbb
loope
(bad)
lods
cli
mov
sub
xchg
hlt
rcl
dec
test
lahf
nop
dec
inc
movs
mov
(bad)
aam
cmp
and
and
test
sbb
push
(bad)
mov
fsubr
pusha
sbb
xlat
add
or
sbb
pop
inc
js
inc
adc
js
sub
mov
push
pop
(bad)
(bad)
sub
xor
cmc
push
inc
lods
bound
retf
sbb
fbld
je
adc
pop
into
call
aam
add
rol
adc
sbb
jg
and
(bad)
aaa
or
and
(bad)
sub
mov
rcr
jmp
add
add
cmp
pop
adc
(bad)
(bad)
loopne
loopne
shl
mov
jno
ror
fs
push
jl
jmp
or
mov
mov
adc
push
pop
push
adc
pop
xor
pop
inc
pusha
adc
dec
in
sbb
or
or
push
xchg
and
(bad)
pop
and
(bad)
cmp
push
mov
add
std
pminsw
inc
jg
add
sbb
daa
pop
call
jo
and
mov
cmp
sar
cmp
je
and
push
popa
or
jne
mov
xchg
pop
lahf
jge
lods
sub
add
xchg
movs
lds
mov
jae
movs
out
ins
sub
cmp
or
dec
enter
dec
into
mov
xor
dec
(bad)
pop
sbb
inc
nop
dec
push
add
ror
into
sbb
loop
enter
xlat
mov
sub
sbb
and
dec
push
cmc
adc
mov
xor
int
stos
push
push
mov
shr
inc
or
xor
popa
gs
or
and
retf
sbb
popa
xor
mov
inc
mov
ror
or
ret
in
or
mov
cmp
ror
inc
and
fnstsw
es
xchg
xchg
jo
or
mov
mov
jg
add
jo
test
dec
pop
or
dec
and
cmp
addr16
(bad)
and
and
and
fwait
sti
and
push
call
push
dec
data16
imul
jecxz
mov
add
aas
ret
push
pop
add
loopne
and
fdiv
fcomp
rcl
cmc
sbb
sbb
lods
and
das
xor
mov
inc
dec
xor
std
popf
xor
sar
and
mov
rcl
call
and
adc
jb
sbb
fwait
or
mov
pop
leave
xchg
push
fidiv
(bad)
cmp
jle
rcl
dec
push
xchg
xlat
push
mov
cmc
imul
push
push
xchg
mov
sbb
sub
movs
and
movs
and
mov
addr16
add
mov
movs
or
push
push
scas
imul
mov
loope
shl
push
adc
add
push
mov
add
nop
mov
pop
test
push
pop
adc
or
sbb
mov
sti
push
aas
adc
mov
mov
test
sub
dec
fdiv
add
sub
adc
and
gs
(bad)
test
cli
repnz
mov
neg
adc
es
mov
sti
pop
inc
pop
pop
(bad)
dec
clc
call
inc
test
jge
in
or
shr
push
jns
outs
repz
clc
push
mov
fs
call
jmp
cwde
cmp
adc
shl
out
jle
xor
shl
dec
sbb
mov
and
sti
cmp
push
push
adc
xchg
dec
pop
aaa
inc
push
jae
sub
es
enter
pcmpeqb
ret
lock
test
test
stc
cdq
lods
jl
hlt
sub
adc
pop
cmps
sti
pop
pushf
push
call
jae
ret
sub
mov
shl
and
sahf
jmp
add
and
cmp
xchg
out
retf
mov
push
pop
cmp
enter
dec
sbb
mov
pop
add
fisubr
sub
add
aaa
or
les
jl
cld
hlt
push
pop
and
or
outs
sub
sbb
popf
or
xchg
fimul
stos
inc
je
pusha
add
test
popa
dec
sar
frstor
or
push
dec
push
pop
mov
popf
mov
sbb
xor
mov
ror
push
and
jne
add
adc
inc
jecxz
xchg
ret
mov
mov
sbb
nop
cmps
and
lahf
mov
add
sub
mov
pop
lahf
das
test
loopne
fidiv
sub
add
mov
aas
cmp
xchg
clc
push
idiv
or
test
outs
or
push
retw
cmp
das
cmp
xor
in
sub
mov
enter
or
adc
adc
sbb
test
mov
or
into
adc
xlat
es
dec
ror
nop
push
add
push
cmp
lds
jne
jne
mov
xchg
and
sbb
and
mov
pop
shl
ficomp
ror
adc
imul
mov
repnz
sub
cmp
jle
add
and
mov
mov
clc
and
jmp
cmp
add
pop
sub
mov
enter
inc
call
test
shl
lods
jmp
aas
aas
pop
enter
popa
pop
inc
sbb
adc
xor
sub
xchg
mov
mov
mov
pop
mov
add
leave
push
adc
(bad)
std
cld
test
ins
add
test
shl
sub
push
jne
cmp
les
jnp
or
xor
int
call
js
cmp
push
mov
pop
es
or
add
fidivr
test
cmp
addr16
ins
mov
jb
mov
data16
xchg
test
jae
push
or
add
sbb
sbb
call
into
xchg
lods
adc
or
inc
or
xor
or
call
xor
cmp
cmp
out
sub
movs
add
in
cs
in
mov
mov
adc
sahf
pop
inc
pop
in
test
sar
mov
nop
or
retf
cmp
cmp
add
lods
jbe
cmp
iret
add
hlt
push
lahf
cmp
mov
lock
cmp
jge
jne
into
push
or
inc
pandn
sbb
xlat
mov
mul
cdq
sbb
cs
jge
in
cmp
repnz
call
or
lds
dec
add
rcr
xchg
pop
mov
call
fwait
push
movs
mov
push
sbb
and
xor
mov
adc
imul
push
cld
add
jo
cmp
cli
je
ret
pusha
adc
jg
xor
cmc
jg
jmp
adc
fist
cmc
neg
and
cmp
ds
add
or
leave
les
xor
push
xor
repz
xor
addr16
sbb
or
clc
daa
and
mov
adc
xor
cwde
ds
push
add
retf
cld
(bad)
adc
xor
mov
adc
ror
push
mov
loopne
inc
(bad)
std
dec
sub
bound
fsubr
fnstsw
(bad)
loope
xchg
xchg
push
call
mov
cmp
or
dec
xlat
outs
lea
pop
push
sub
mov
imul
sub
es
es
movaps
and
je
adc
shl
pop
popa
sub
xor
lock
call
mov
and
lahf
and
and
mov
aas
and
js
(bad)
lock
jg
in
or
mov
jae
sbb
sub
jno
inc
mov
inc
push
(bad)
inc
aas
push
fistp
inc
in
ins
enter
retf
add
fld
jg
jmp
xlat
adc
jle
pop
jg
jge
sbb
enter
dec
data16
pop
adc
push
push
popa
imul
shl
cmps
push
dec
test
fcmovnbe
(bad)
stc
jge
loope
push
push
pop
or
cmp
dec
mov
retf
adc
in
ss
(bad)
xchg
sub
scas
addr16
cmp
aas
dec
push
xchg
out
xchg
inc
push
push
add
aas
and
cdq
dec
sbb
je
push
push
fcomp
rcr
add
push
fstp
sbb
fchs
jmp
inc
js
fldcw
xchg
sub
pop
sub
cmp
push
dec
dec
sti
or
cli
out
fild
mov
call
push
in
je
(bad)
fmul
fld
call
mov
fsubrp
ds
rol
fstp
or
dec
pusha
data16
addr16
sub
inc
out
fsubrp
fxch
fmulp
call
xor
fs
jns
jo
mov
enter
mov
dec
loopne
inc
popf
out
cli
std
dec
xchg
movs
adc
add
sub
mov
cmp
bndldx
lock
inc
mov
ror
jae
cmp
xchg
adc
sbb
dec
bswap
in
or
jmp
pop
jne
pop
inc
nop
cmp
add
adc
pop
push
ret
xor
push
add
mov
xor
sub
(bad)
loopne
jne
push
push
mul
ret
mov
pop
add
and
fs
or
in
ins
adc
into
and
ja
and
cmp
xchg
(bad)
jecxz
daa
inc
push
push
mov
or
inc
and
imul
adc
adc
jg
jp
sahf
cwde
push
jmp
mov
jmp
push
mov
dec
jg
jg
push
ret
dec
jg
pusha
xor
adc
sub
dec
cdq
and
aas
sub
pop
push
das
inc
or
(bad)
cmc
jo
or
(bad)
div
shl
loopne
jg
inc
pusha
mov
dec
add
sub
push
out
jae
mov
mov
push
cs
inc
jne
adc
pusha
xchg
popa
pop
cmps
pop
jns
sbb
sbb
dec
jle
aas
retf
xor
pushf
movs
sub
aas
sub
ins
pop
cwde
sub
jge
cmp
fsubr
idiv
imul
js
xchg
stos
add
cld
repz
dec
and
icebp
out
aas
mov
lock
shl
inc
adc
adc
and
xchg
sub
nop
or
call
fld
adc
int
das
inc
gs
ja
add
cmp
xchg
shl
or
and
sub
push
push
xor
sbb
sub
push
and
jl
inc
mov
(bad)
mov
pop
jne
add
inc
shl
fidivr
in
or
xchg
mov
fdivr
test
and
clc
or
mov
pop
adc
mov
add
adc
or
cmp
js
ss
pusha
adc
hlt
in
clc
xlat
aad
or
iret
add
std
ret
jmp
repnz
in
or
in
jmp
dec
sbb
ret
and
stc
add
stos
push
aaa
or
ror
(bad)
or
jmp
jne
mov
or
ret
stos
je
inc
cwde
retf
inc
cmps
add
sti
cs
and
in
imul
in
rcl
xchg
stos
and
sbb
push
mov
sbb
or
push
inc
shl
fucompp
xor
inc
pusha
icebp
mov
adc
jle
repz
ror
lock
cmp
ins
mov
(bad)
mov
jae
cld
adc
imul
and
push
dec
dec
inc
and
push
push
push
into
in
and
addr16
sbb
xor
push
xchg
lds
movsx
cdq
push
lock
imul
dec
push
mov
inc
ror
enter
pop
adc
jecxz
mov
lods
and
nop
and
inc
fs
lea
fnstenv
dec
outs
jecxz
test
push
jmp
xor
jmp
neg
adc
inc
add
ror
test
fstp
ret
sub
xchg
sbb
xor
inc
lock
mov
dec
scas
call
addr16
push
mov
loopne
push
sub
or
cmp
ret
pop
lods
mov
dec
jo
je
sbb
xchg
mov
xlat
jg
or
adc
imul
inc
jecxz
add
add
inc
xchg
outs
pop
sbb
pushf
mov
ror
dec
xor
cdq
push
test
jo
loopne
bound
enter
jmp
adc
cld
pushf
sub
xor
mul
test
mov
mov
std
push
jmp
pop
pop
fs
lods
inc
adc
push
jmp
dec
push
movs
lock
repnz
icebp
(bad)
ds
gs
aad
(bad)
out
mov
add
out
mov
or
adc
outs
test
bnd
in
shl
adc
ins
pop
add
hlt
pop
repz
jns
shl
cs
cmp
xchg
push
dec
dec
push
add
add
mov
add
or
add
es
or
pop
or
pop
lahf
push
mov
mov
or
jge
pop
pop
sub
sbb
push
mov
sub
pop
adc
jbe
push
rol
lds
test
xor
js
push
lock
imul
add
jne
clc
(bad)
lahf
inc
sbb
movs
(bad)
pop
mov
nop
jns
xchg
mov
mov
or
sbb
sub
test
mov
pop
mov
push
cmp
xchg
or
cmp
cmp
adc
pop
repnz
shl
pushf
sub
add
(bad)
mov
shl
xchg
xchg
push
pop
xor
mov
pusha
mov
adc
lahf
and
and
jae
sbb
mov
dec
or
lahf
xchg
xchg
addps
add
mov
sub
adc
xchg
dec
in
and
(bad)
aam
nop
jns
pop
cs
inc
sub
retf
movs
repnz
sbb
(bad)
mov
xchg
push
(bad)
jb
shl
dec
sub
push
les
pushf
cs
retf
in
ins
dec
xor
xchg
retf
neg
ret
cmps
or
mov
loopne
mov
fmulp
in
fs
xor
rcl
jb
or
nop
ins
cmp
repnz
out
or
push
mov
fcom
les
push
clc
enter
ja
mov
adc
mov
sbb
jns
repz
xor
es
sahf
out
push
dec
push
pop
sahf
out
sahf
bound
je
cmp
jns
mov
sahf
out
mov
out
sahf
(bad)
out
repnz
cmp
sar
movs
mov
mov
jns
repz
push
push
sbb
mov
cs
into
dec
inc
out
sahf
test
sahf
out
sahf
pop
fs
jbe
add
out
or
jle
retf
icebp
push
adc
ret
ret
add
pop
mov
mov
adc
xchg
xchg
call
mov
add
add
pop
mov
adc
mov
mov
adc
shr
enter
rol
pop
dec
cli
add
shl
cli
jl
cmc
cmps
aam
pushf
and
pop
inc
or
call
popf
add
repnz
std
inc
emms
xchg
mov
fwait
mov
shr
add
ror
xchg
stc
pop
adc
aas
dec
add
sar
dec
clc
mov
pop
dec
les
and
in
jge
jg
inc
sar
or
inc
xor
sbb
test
and
loopne
and
mov
mov
stc
mov
sub
or
mov
add
je
or
jge
out
pop
and
adc
inc
or
cmc
adc
and
mov
bound
adc
sbb
pop
rcl
or
lahf
xor
dec
dec
jno
xchg
jl
(bad)
bound
cmp
sbb
cmp
enter
ret
mov
jge
sub
test
and
mov
call
lods
pop
ins
mov
push
and
outs
push
add
and
or
lods
push
sbb
push
nop
mov
daa
(bad)
out
shl
jmp
or
add
call
push
sub
pushf
dec
push
or
mov
pusha
adc
or
retf
or
js
and
xor
test
adc
pop
dec
adc
sbb
jb
sahf
pop
cmp
ror
xor
es
popf
(bad)
push
mov
adc
inc
and
inc
cmp
and
xor
push
mov
adc
mov
add
xchg
mov
sub
inc
loopne
inc
mov
or
and
sbb
push
jo
xchg
out
ins
or
push
sub
in
test
pop
test
push
call
inc
mov
popa
add
sub
test
std
popa
push
or
dec
movs
cmp
in
xchg
and
or
ret
xor
lahf
fbstp
cmp
and
adc
bnd
jecxz
and
pop
jne
or
loopne
int3
je
add
es
pop
push
jg
loopne
sar
pop
xchg
mov
push
mov
pop
ds
jmp
jmp
mov
je
shl
and
jmp
or
cli
gs
pop
je
push
and
popf
add
jb
cmp
shl
add
add
or
fsub
xor
in
xor
jno
ja
or
lock
adc
ret
lea
adc
mov
mov
adc
ins
inc
imul
push
jge
push
pop
add
and
or
fldpi
and
inc
ret
mov
adc
xor
pop
loopne
mov
and
dec
vmread
cmp
daa
push
fimul
add
push
push
or
sti
pop
cwde
in
iret
pop
dec
push
stos
add
adc
push
add
out
and
push
lahf
lahf
stc
outs
push
xor
or
ror
or
test
sbb
test
iret
outs
jb
cli
or
jnp
into
pop
jns
sbb
jg
or
ds
adc
outs
add
cmp
xchg
sbb
lahf
xor
inc
std
mov
test
test
inc
adc
or
cmps
pop
mov
jle
cmp
jl
xor
call
loope
les
and
cdq
and
retf
mov
add
jnp
push
or
cmp
sbb
dec
clc
clc
es
aam
dec
imul
and
or
inc
or
test
dec
les
and
mov
jg
call
xchg
xchg
inc
jmp
cli
outs
test
mov
push
pop
mov
push
push
mov
sub
enter
retf
and
pop
mov
sbb
pop
fsub
sub
jb
sbb
test
enter
inc
hlt
pop
fwait
xchg
daa
push
hlt
aaa
je
inc
inc
xor
enter
hlt
ror
sbb
test
sub
pop
rol
push
dec
pushf
or
jbe
lahf
lock
test
test
cmp
retf
xor
lahf
xchg
push
or
jl
aas
pusha
int3
inc
pop
dec
leave
pop
jae
int3
cmp
in
adc
cs
push
pusha
int3
mov
xchg
and
shr
and
adc
push
xor
dec
jb
int
and
(bad)
adc
mov
arpl
jge
push
xchg
pop
retf
neg
jmp
pop
enter
mov
call
cld
lods
adc
mov
std
(bad)
jmp
inc
sub
call
fiadd
les
imul
mov
inc
jl
fsubr
call
ret
iret
aad
xor
sub
inc
leave
adc
adc
popa
push
inc
jmp
and
adc
mov
xchg
add
int
or
dec
rol
pop
add
push
or
lds
loope
test
aad
mov
or
mov
pcmpeqb
adc
sub
cwde
add
jo
call
or
sbb
mov
or
cmpps
xchg
pop
sub
or
or
out
imul
nop
sbb
push
jl
dec
iret
mov
pop
add
xor
test
pop
out
add
dec
lea
adc
mov
test
mov
or
or
dec
sbb
hlt
xor
or
jp
and
enter
mov
and
push
and
xchg
sub
push
inc
daa
adc
mov
cli
xor
add
(bad)
int
mov
and
pmaddwd
mov
int3
adc
or
adc
(bad)
xor
jl
jmp
loopne
mov
mov
add
sbb
pop
jae
push
cmps
rol
call
push
jl
or
das
push
out
jae
je
cld
or
add
mov
or
xchg
add
test
jnp
add
jne
or
cmc
sar
mov
xchg
out
push
jns
adc
adc
ret
fild
or
into
jo
ins
sti
pop
push
mov
jns
xor
pusha
sub
popa
xor
jnp
inc
push
fidiv
push
dec
inc
and
cs
dec
rcl
pop
jns
add
push
cmp
add
(bad)
and
sbb
jg
shr
mov
dec
push
inc
xor
shl
add
lahf
clc
pop
fchs
sbb
xchg
js
add
jb
daa
jge
xchg
xor
mov
and
adc
add
ret
ss
sub
sbb
add
pop
or
arpl
test
mov
jo
xor
lods
sub
push
(bad)
jg
pop
rol
push
dec
adc
dec
xchg
test
movs
fadd
inc
jb
ret
xchg
jns
cmp
ss
add
push
imul
jno
ret
xadd
push
xchg
jp
mov
ror
sti
mov
xchg
adc
jmp
fs
dec
xchg
sub
sbb
add
or
inc
shl
(bad)
jle
(bad)
add
ret
lock
jnp
je
pop
and
sub
and
test
pop
add
lds
push
xor
data16
cld
movs
cs
mov
cdq
xchg
xchg
or
nop
repnz
repnz
and
in
lock
fst
xchg
cmp
mov
(bad)
call
push
sbb
xchg
xor
lahf
push
call
add
inc
mov
xchg
mov
leave
(bad)
push
add
adc
outs
jmp
adc
ds
cwde
or
aaa
inc
or
popa
outs
mov
jb
sti
pop
dec
arpl
mov
push
push
push
inc
cli
and
and
sbb
jle
cld
mov
xchg
sahf
and
mov
inc
pop
fisttp
lock
fbstp
call
sbb
jae
jmp
inc
inc
fisub
lea
mov
call
mov
push
inc
or
xchg
punpcklbw
xor
idiv
mov
jmp
imul
(bad)
mov
ret
add
add
add
pmaddwd
mov
cld
jl
mov
jae
test
add
mov
ret
jl
adc
das
jl
je
aas
cmp
ret
popf
mov
add
or
fcomip
jno
or
mov
rcr
and
ret
and
or
add
dec
push
push
push
cmp
inc
icebp
push
scas
add
je
sub
enter
shl
jno
dec
cmp
retf
mov
fistp
ins
out
push
push
xor
sub
and
call
xor
sub
(bad)
lahf
and
dec
xchg
jp
sbb
add
ja
mov
and
push
loop
cmp
aam
sub
xor
push
sub
or
and
jecxz
adc
sbb
repnz
clc
adc
dec
clc
sar
jl
or
sub
sahf
sub
dec
ror
jno
pop
jp
pushf
lahf
jns
nop
pop
lahf
pop
xor
and
imul
add
les
js
inc
or
jg
xchg
ror
mov
dec
outs
push
cmps
rcl
aas
cmp
cwde
push
inc
shl
add
and
dec
inc
mov
call
pop
fistp
(bad)
xor
push
sbb
adc
arpl
nop
mov
jne
lds
jno
es
inc
call
sub
fwait
jmp
sub
ret
fsubr
jmp
das
outs
adc
push
gs
mov
adc
rcl
loop
test
dec
mov
jl
imul
push
xchg
(bad)
cwde
push
daa
fisttp
mov
sub
jne
aam
push
hlt
lds
cmp
xchg
xchg
mov
mov
mov
popa
repnz
ins
mov
sub
push
ficomp
ret
xor
pop
lea
pop
sti
(bad)
push
mov
jne
and
dec
dec
adc
pop
sub
xor
ret
mov
mov
or
fimul
xchg
xor
call
stos
jl
bound
sub
ins
xor
push
ja
push
pop
push
test
dec
add
adc
push
in
rcr
or
mov
push
push
(bad)
sub
js
loop
jnp
sub
int3
ja
jne
ja
pop
loopne
je
repz
dec
mov
add
pop
inc
std
daa
push
dec
sbb
loop
popf
inc
pop
sub
ficom
cmps
movs
pop
std
mov
add
adc
test
mov
push
cmp
or
aas
xchg
lock
xchg
cli
pop
test
test
mov
adc
add
cmp
ins
sub
ja
retf
add
push
call
call
rcr
imul
fdiv
jo
aaa
adc
add
cmps
hlt
and
adc
sbb
pop
nop
cmp
das
and
or
and
add
out
push
inc
xchg
and
mov
rol
cmp
inc
cmp
jo
jns
cmp
fadd
push
sub
xor
daa
inc
push
mov
jge
fild
(bad)
es
sub
je
inc
adc
jmp
adc
cmps
fbstp
mov
mov
int
(bad)
adc
sbb
xchg
add
mov
out
fimul
nop
stc
test
les
add
aam
jae
js
shl
ins
mov
adc
push
push
jno
popf
fadd
add
fcom
jbe
jbe
dec
push
shl
mov
dec
shr
xchg
js
lahf
jbe
ficom
push
enter
call
dec
pop
sti
outs
in
imul
leave
call
fld
or
jmp
stos
jl
loopne
stc
and
(bad)
outs
movs
and
push
or
cmp
and
pusha
loopne
call
cmp
dec
mov
sbb
adc
push
js
fdiv
outs
sub
adc
jl
mov
aas
mov
aaa
sahf
xchg
or
ins
push
mov
sub
adc
into
xor
test
dec
(bad)
cmp
push
fistp
rcl
and
cmp
or
push
dec
and
mov
nop
dec
gs
call
mov
adc
and
adc
xor
and
adc
push
cmp
mov
or
shl
pushf
test
enter
pop
and
call
xchg
jns
and
cmps
or
outs
and
sub
cmp
adc
push
push
sbb
dec
push
jns
dec
and
retf
xor
pop
rcl
and
or
ins
aaa
shl
mov
pop
fs
mov
cmps
push
(bad)
inc
call
dec
int
or
fnstcw
mov
out
or
add
pusha
stc
aam
dec
test
scas
loope
ins
pop
fs
xchg
jmp
sub
dec
cmp
xchg
outs
dec
fwait
dec
xchg
dec
fwait
inc
sub
cmp
xor
es
cmp
fs
pop
add
push
pop
xchg
or
fisttp
inc
sub
jae
repz
adc
loopne
sub
xor
inc
jmp
ins
push
push
jmp
pop
mov
pushw
je
or
inc
cdq
xor
scas
sub
cmp
call
push
out
xor
and
adc
mov
in
add
cli
push
hlt
sbb
fldl2e
adc
leave
push
imul
pop
pop
or
inc
sub
mov
repnz
mov
pop
pop
push
and
push
js
jno
mov
jne
stos
mov
xor
repnz
lds
in
shl
xor
sub
mov
(bad)
dec
cmc
loopne
xchg
cdq
mov
mov
inc
sub
inc
or
push
test
add
daa
mov
or
(bad)
push
jb
sti
scas
xor
adc
mov
sub
add
sbb
data16
add
arpl
jno
pop
call
adc
aaa
dec
push
ss
sub
cli
add
jns
or
mov
test
xchg
adc
out
inc
sub
sbb
add
fs
rcr
hlt
retf
leave
xchg
cmp
jge
or
add
and
jmp
sbb
push
ret
jne
push
add
sar
xor
inc
pop
push
sub
add
dec
in
adc
fimul
add
loopne
out
lock
inc
mov
adc
lods
into
xor
push
(bad)
sahf
mov
scas
push
mov
retf
add
lock
inc
jl
push
inc
xchg
mov
lods
fst
mov
mov
cmp
jg
xor
and
ja
cmp
inc
inc
out
leave
cmps
or
ret
jno
bound
xor
add
daa
lock
or
or
je
aam
and
stos
or
and
mov
imul
imul
lds
push
test
jb
loope
pusha
je
je
loope
lock
push
popa
out
rol
dec
sub
mov
cmps
sbb
mov
(bad)
daa
xor
addr16
mov
rol
mov
in
or
mov
or
mov
call
sar
or
outs
icebp
les
or
mov
test
sub
in
push
imul
cmp
adc
sbb
js
es
cmps
imul
xor
nop
lock
dec
movs
xchg
stos
cmc
pop
pop
pop
clc
in
sub
cmps
push
(bad)
in
gs
jl
mov
push
test
sbb
dec
jmp
into
movs
ja
fs
jp
jl
jo
xchg
adc
in
call
movs
push
jo
mov
or
pop
add
push
bound
mov
aam
jo
jbe
dec
xchg
add
(bad)
push
mov
call
lods
leave
out
push
mov
inc
dec
mov
pusha
ret
sbb
bnd
pop
xchg
and
mov
leave
push
mov
adc
test
xchg
(bad)
and
mov
ror
sahf
sbb
push
test
or
xor
inc
movs
and
lods
inc
loope
mov
xor
int3
xchg
retf
adc
lahf
and
mov
dec
and
push
sub
jb
fwait
mov
cwde
das
out
mov
jp
pop
mov
retf
sub
xchg
adc
out
sub
sbb
jns
imul
add
xor
add
mov
jg
sub
jmp
imul
in
(bad)
iret
xchg
repnz
rol
mov
mov
and
adc
jo
xchg
and
sub
lock
or
add
aam
or
and
adc
dec
loope
sbb
mov
imul
ror
sub
adc
mov
das
dec
xchg
test
and
mov
xchg
mov
sub
or
lock
fcomp
fistp
popf
mov
aad
ss
sub
fistp
jo
adc
add
sbb
pop
push
neg
in
das
adc
and
or
jmp
xor
adc
aaa
fild
dec
mov
xor
or
or
dec
cli
mov
inc
or
add
jo
lock
dec
dec
mov
ror
je
(bad)
cld
sub
mov
push
lahf
aas
jg
cmps
retf
scas
addr16
jb
stc
repz
outs
cmp
ss
movs
rol
jg
jg
push
push
pop
ins
sub
stc
repz
inc
sti
stos
fld
adc
int
pop
or
inc
mov
inc
or
pop
add
shr
ret
push
xor
outs
adc
cmc
stc
hlt
sbb
sahf
mov
pop
fs
jne
jo
retf
push
and
inc
mov
test
dec
rcl
inc
repz
mov
sbb
adc
outs
call
mov
push
cdq
cmp
xchg
(bad)
jne
and
and
mov
push
sub
sahf
fwait
push
add
pop
jp
inc
or
dec
inc
shl
dec
ja
dec
xor
dec
xor
dec
jne
out
jb
mov
enter
out
cs
push
enter
xor
dec
jno
shr
pop
ins
stos
mov
mov
mov
cmp
mov
adc
out
inc
(bad)
pop
pop
lea
push
in
movs
loop
mov
repnz
call
adc
out
xchg
scas
(bad)
sub
and
mov
mov
fwait
mov
sbb
in
sbb
pop
adc
pushf
mov
sbb
popa
mov
lods
clc
stos
cld
pop
xchg
adc
xchg
(bad)
mov
pop
adc
mov
idiv
sar
add
cwde
ret
imul
enter
cmp
outs
sub
mov
jnp
mov
mov
mov
(bad)
and
jae
mov
jge
pop
xor
mov
imul
outs
stc
jmp
sbb
mov
mov
push
adc
pusha
nop
or
adc
sbb
sbb
push
lods
fst
call
jo
imul
mov
rol
les
ret
sar
popa
aaa
push
mov
jns
mov
adc
pop
(bad)
scas
(bad)
loop
rol
fstp
and
pop
repnz
pop
shr
pop
mov
fwait
add
mov
and
into
sub
(bad)
ffree
mov
jmp
add
adc
cmp
push
adc
mov
jae
loopne
xchg
stos
fadd
faddp
push
sub
inc
mov
data16
mov
xchg
xor
jae
dec
in
jne
jle
rol
adc
aad
add
cmc
inc
xchg
sub
(bad)
push
sub
push
(bad)
popf
add
fsubr
imul
dec
pop
push
sub
pop
mov
dec
pop
in
dec
pop
ficom
mul
add
adc
in
sbb
call
mov
jle
jno
fild
xor
out
xchg
push
test
add
inc
or
inc
or
mov
mov
jbe
inc
adc
inc
sbb
inc
lds
out
test
daa
dec
pop
dec
mov
ret
mov
jo
fmul
pop
mov
ret
mov
dec
fisub
mov
ret
cmp
clc
lahf
sbb
push
ror
add
add
jle
adc
add
sub
add
call
inc
sub
dec
lds
jae
push
push
add
nop
pushf
hlt
ins
pop
scas
xor
jle
pop
pop
ret
mov
test
ins
lea
jp
push
push
push
loopne
les
mov
je
pop
lds
sbb
mov
ins
shr
dec
adc
fistp
out
dec
inc
push
je
push
or
push
adc
test
jmp
jnp
aam
pop
jbe
mov
(bad)
cmc
out
jnp
pop
pop
adc
iret
test
xor
dec
pop
push
pop
jns
inc
inc
in
mov
dec
and
sbb
(bad)
es
es
and
dec
and
add
inc
and
nop
dec
cmp
and
pop
stos
sbb
sub
lods
sbb
test
xor
in
cwde
cs
rcr
adc
jbe
dec
pushf
sbb
jmp
stos
xor
jne
sbb
or
xor
push
jnp
into
jle
(bad)
nop
add
cmp
push
arpl
push
adc
or
iret
mov
mov
pusha
pop
ror
or
add
adc
mov
adc
or
or
inc
mov
xchg
and
dec
aaa
dec
ror
cs
adc
cdq
js
push
xor
sub
lock
pop
sbb
mov
sbb
not
xchg
aaa
in
lds
mov
adc
adc
leave
and
sbb
pop
adc
xchg
inc
sbb
mov
and
jae
ins
(bad)
push
and
shr
(bad)
(bad)
iret
les
pop
pop
add
push
dec
mov
data16
call
(bad)
mov
call
inc
adc
imul
test
push
inc
adc
adc
push
sbb
ds
xchg
scas
push
mov
call
inc
xor
mov
pop
call
push
ja
or
mov
jbe
dec
xchg
call
mov
adc
inc
or
jae
fadd
aas
pop
mov
jl
and
mov
mov
mov
aas
sbb
nop
adc
push
leave
leave
movs
pop
adc
pushf
in
sahf
sbb
dec
pop
jp
rcr
jns
inc
pop
shl
fnstcw
jb
ficomp
in
int
jb
dec
ficomp
inc
dec
and
or
xchg
sbb
sbb
enter
push
push
enter
adc
fld
xchg
inc
pop
mov
sub
dec
add
or
leave
adc
xchg
sbb
dec
inc
mov
lahf
sub
ss
mov
rol
push
push
dec
idiv
jb
jns
xor
loope
cmp
add
stos
add
or
xor
lea
mov
sbb
pcmpgtw
xor
pop
cmps
dec
add
fs
imul
shl
dec
dec
jo
popw
cld
mov
mov
xor
mov
sub
sbb
or
stc
xchg
loopne
jmp
pop
mov
bound
xor
out
test
mov
and
or
add
sub
gs
call
dec
into
pop
xchg
dec
or
shl
ret
and
stos
mov
mov
sbb
cmc
bound
adc
add
clc
mov
fimul
pop
sub
lea
push
ret
inc
jmp
adc
or
xchg
cmp
xor
sub
add
aas
sub
pop
adc
cli
adc
pop
add
or
push
sub
fld
(bad)
addr16
shr
ret
pop
repnz
inc
mov
bound
push
and
xor
or
stc
jl
or
ins
call
lea
jmp
inc
stc
adc
sub
pop
push
rcr
or
xchg
dec
mov
add
or
xchg
inc
mov
inc
push
mov
xchg
retf
je
movs
xchg
stos
mov
mov
call
pop
(bad)
inc
xchg
push
mov
xchg
add
jae
xor
popa
mov
xor
or
mov
add
fisttp
out
rol
popa
out
inc
test
mov
and
mov
fiadd
jmp
xchg
cdq
cdq
sbb
dec
xchg
daa
dec
mov
std
adc
jo
inc
call
adc
jmp
rol
in
jl
fst
cmps
inc
mov
mov
xor
dec
sbb
pop
inc
ror
cmp
add
and
cmps
jge
jo
in
dec
(bad)
pop
and
loopne
inc
jne
sbb
sbb
adc
pop
imul
mov
push
add
xor
mov
sub
push
jle
dec
aam
out
pop
(bad)
lods
push
pop
mov
dec
loop
jecxz
sub
push
jg
lock
in
push
and
call
sbb
sub
loopne
loope
in
mov
js
test
push
out
in
das
out
sbb
adc
pop
adc
inc
test
mov
push
out
pop
mov
sbb
adc
jg
or
mov
or
mov
(bad)
sbb
mov
std
push
js
dec
and
inc
out
jb
cmp
(bad)
sti
pop
inc
retf
inc
cmp
push
xor
pop
cmp
out
in
arpl
mov
hlt
sahf
aaa
mov
fwait
and
inc
scas
sbb
fwait
push
sub
lea
adc
mov
test
adc
(bad)
mov
pop
icebp
adc
les
nop
cmp
pop
(bad)
xchg
xlat
les
sbb
push
mov
leave
mov
hlt
jg
sbb
or
adc
pop
mov
cmps
scas
dec
jle
push
pop
sbb
adc
sub
xchg
inc
stc
nop
inc
pop
pop
and
cmp
and
in
mov
mov
outs
and
jnp
(bad)
push
push
cmp
sbb
mov
adc
ins
mov
ret
popa
xchg
shr
xor
pop
push
sar
mov
mov
repnz
jae
mov
push
psrlq
jbe
jbe
test
xor
outs
enter
jno
and
push
rcl
test
xchg
inc
adc
repnz
enter
movs
pop
fwait
inc
(bad)
sbb
bound
je
inc
adc
adc
xor
cmp
call
clc
jg
cmp
push
sub
inc
ret
pop
or
loop
(bad)
test
daa
xor
enter
lea
and
jp
jge
add
add
ins
sbb
sub
dec
push
aaa
adc
or
test
jne
call
jp
into
adc
and
test
or
push
out
xchg
cmp
cmps
rcl
cmp
mov
aam
or
fs
or
fmul
mov
pop
cmp
dec
(bad)
inc
aaa
push
push
adc
jmp
std
imul
cmp
sbb
and
or
dec
lods
cmp
fcomp
test
dec
or
xor
icebp
call
sub
fiadd
bound
inc
cmc
dec
loop
pop
push
sbb
out
cmp
sahf
or
cmp
or
arpl
push
je
mov
pop
cmc
lahf
push
or
cmp
pusha
mov
or
cmp
add
dec
push
pmullw
movs
jmp
shr
adc
hlt
lea
leave
jne
cld
jns
adc
daa
push
pop
pop
or
jge
or
push
cmp
nop
push
add
pop
loop
xchg
(bad)
push
mov
or
and
sub
or
push
or
dec
bnd
push
es
scas
std
hlt
and
pop
dec
and
mov
xchg
popa
mov
(bad)
stos
addr16
das
(bad)
in
mov
inc
clc
xchg
int3
xor
pop
rcr
lods
retf
cmp
fld
es
cmp
jns
sahf
adc
(bad)
(bad)
inc
jle
call
shl
les
and
adc
add
xor
adc
shl
mov
jo
adc
adc
call
or
xor
add
das
push
mov
sub
std
pop
es
xchg
jle
xor
mov
push
das
mov
scas
xchg
inc
clc
pop
xor
inc
add
call
cld
push
test
inc
cwde
jne
jno
cmp
or
ss
adc
push
outs
mov
jmp
fwait
pop
mov
add
scas
arpl
or
outs
stos
mov
push
push
add
and
sbb
adc
inc
push
adc
inc
sahf
std
or
xchg
jp
jg
into
cmova
sub
call
mov
push
outs
jecxz
sub
pop
fs
pop
and
dec
ret
shr
lahf
mov
dec
fwait
retf
shl
mov
arpl
(bad)
gs
adc
test
cmp
mov
push
cmps
sub
aas
push
dec
mov
adc
rol
(bad)
retf
adc
stos
and
jb
push
xchg
(bad)
xorps
add
ret
sub
inc
bound
jb
pop
cmps
add
out
xor
adc
and
or
or
mov
cld
cmc
inc
shl
jle
xor
dec
pop
mov
ja
(bad)
out
add
jge
in
inc
add
aas
aaa
and
inc
sahf
cmp
fwait
(bad)
and
or
pushf
cmp
(bad)
(bad)
clc
and
pop
push
mov
and
mul
mov
pop
hlt
inc
(bad)
aaa
mov
xor
cs
pusha
or
movs
push
sbb
in
in
or
push
cmp
popa
adc
shl
xor
jle
jmp
mov
and
push
xchg
add
pusha
cmps
fadd
mov
out
pop
mov
rcr
jae
sub
xor
stos
aad
add
jb
stos
inc
dec
jecxz
es
push
inc
int3
mov
cli
cmps
std
sbb
ror
lods
add
rol
jbe
adc
cmp
xchg
cmp
sbb
(bad)
inc
aas
jge
jg
rol
xchg
dec
xchg
mov
cmp
jmp
add
jns
enter
jmp
sbb
mov
inc
sbb
sbb
bound
push
fs
mov
push
shl
pop
add
jg
push
add
or
or
sbb
jle
(bad)
push
or
adc
(bad)
adc
jle
add
and
jnp
adc
dec
das
adc
pop
rol
jle
popf
mov
and
jle
enter
or
xchg
mov
jae
and
xor
retf
arpl
mov
mov
leave
retf
and
das
das
mov
inc
lea
adc
adc
pop
push
hlt
adc
jno
ret
fnstsw
mov
push
push
shr
xchg
cmp
sub
or
jo
jne
pop
pop
rol
or
iret
stos
das
mov
ret
sub
fld
fidiv
in
push
push
fwait
or
rcr
scas
xchg
and
and
and
mov
or
and
sbb
mov
mov
outs
stc
stc
add
push
jmp
std
into
dec
push
or
push
cmp
add
inc
push
mov
push
push
dec
out
xor
add
mov
rol
inc
add
xlat
mov
push
and
mov
sub
data16
cmps
sbb
push
pop
cmc
fstp
inc
dec
or
std
ficomp
fdivr
adc
movs
std
mov
push
outs
inc
lods
imul
push
scas
xchg
(bad)
in
(bad)
ins
ret
mov
retf
ds
sbb
rcr
or
mov
pop
mov
pop
lods
or
mov
les
pop
add
cmp
mov
pop
push
lahf
sbb
or
ror
test
lods
sub
jecxz
mov
push
sub
(bad)
jp
add
loop
and
mov
mov
fld
mov
cmp
mov
(bad)
pop
inc
pop
pop
push
inc
cs
sbb
(bad)
and
in
xor
pusha
inc
fld
pop
sub
push
les
mov
loope
std
push
call
jecxz
rcl
pop
cdq
loope
dec
pop
shl
lock
and
test
cmps
push
sbb
imul
mov
jp
adc
arpl
cli
test
test
sahf
jbe
popa
or
mov
rol
loopne
fcom
jmp
rcpps
(bad)
popa
or
aaa
je
popf
xor
test
js
fnstcw
movs
push
sbb
and
into
ins
loopne
pop
dec
sub
inc
mov
rol
xchg
sub
jbe
jno
adc
imul
inc
sbb
add
mov
sbb
add
push
mov
push
loopne
pop
jns
mov
ror
and
push
(bad)
cmp
stos
ret
call
lods
sbb
push
and
ror
sbb
mov
lea
mov
cdq
sbb
test
je
fs
mov
shl
mov
cmp
mov
inc
add
cmps
push
fs
or
arpl
sbb
mov
test
call
pop
cmp
add
add
add
adc
add
or
xor
or
push
mov
jbe
inc
jb
sbb
add
add
mov
and
cwde
inc
(bad)
jnp
add
jne
sbb
sar
inc
lods
inc
ja
or
jne
retf
fs
(bad)
mov
nop
bound
shr
add
mov
cwde
xchg
clc
sbb
ror
call
push
xchg
popa
sbb
je
pop
dec
sub
pusha
and
call
fild
adc
pop
ss
xor
imul
push
outs
ins
jmp
mov
adc
dec
inc
push
mov
dec
pop
pop
(bad)
arpl
push
fstp
ins
fsub
je
mov
das
xchg
xchg
fild
add
xchg
add
stos
mov
add
ret
jne
cmp
call
loope
daa
int
sbb
cmc
call
add
divps
inc
push
in
out
aam
jmp
push
add
mov
mov
xor
lds
sbb
mov
mov
push
stos
xor
jns
add
mov
sbb
pop
ds
xchg
push
iret
inc
or
xchg
or
int
or
mov
repnz
ja
dec
pop
sub
jnp
aas
je
sbb
jl
add
call
dec
cmp
sbb
or
adc
adc
sub
jne
call
pop
jge
or
stos
cmp
jo
or
data16
cs
sub
rcr
adc
pop
imul
js
sub
dec
xchg
in
ja
push
test
mov
or
push
mov
mov
push
sbb
inc
adc
and
adc
mov
jb
sbb
jne
push
and
out
dec
cmps
jmp
outs
or
mov
lea
or
mov
test
mov
pop
xor
pushf
ret
or
sub
push
les
dec
lods
xchg
xchg
addr16
jbe
pushf
fcomp
jge
pop
inc
and
pop
adc
bound
out
mov
rol
movs
mov
cmp
pop
movs
(bad)
std
sub
jb
dec
pop
push
cmp
cmp
popa
sbb
inc
adc
jl
inc
or
loopne
sub
or
mov
add
nop
and
cmp
jmp
shr
call
outs
sub
inc
cmp
push
cmp
(bad)
push
sahf
nop
rol
add
call
lods
mov
loop
sbb
cmp
jecxz
aas
loope
xor
push
addr16
int
xchg
push
push
push
in
mov
jle
fwait
adc
xor
int3
mov
add
jo
xor
rcl
xor
mov
add
adc
dec
pop
pop
add
cmps
push
and
pop
call
dec
xchg
inc
xor
imul
(bad)
push
cwde
call
push
(bad)
std
or
or
lock
jne
dec
add
shl
pop
in
rcl
fld
mov
or
jo
ficom
fiadd
rcl
ret
test
in
sahf
xlat
sub
mov
fs
ds
loopne
retf
xor
mov
adc
cld
sub
aas
sbb
test
push
fisttp
push
call
jne
out
pop
sbb
fisttp
mov
inc
and
sub
dec
dec
enter
aas
outs
js
call
outs
cmp
data16
std
(bad)
inc
js
loope
add
push
fwait
pop
jge
push
sub
shl
xchg
in
inc
push
pop
inc
jle
push
pop
es
mov
dec
int
shr
lock
or
es
cmp
aas
lock
fwait
xlat
call
and
or
fild
adc
adc
dec
fiadd
mov
jbe
fisttp
push
mov
imul
cmp
inc
add
or
sub
sbb
aas
and
aam
xchg
and
bound
dec
jnp
inc
inc
sbb
gs
(bad)
jge
in
adc
pop
adc
outs
sub
mov
sbb
mov
jge
xchg
inc
je
repz
dec
push
mov
xchg
cmp
mov
cmp
push
cmps
add
cmps
jl
adc
sub
jnp
dec
ror
cmp
dec
dec
mov
movs
in
popa
out
and
sbb
ins
or
jae
mov
daa
sub
xchg
std
xlat
test
leave
sub
daa
pop
dec
push
leave
or
cmp
sahf
xchg
clc
call
hlt
jne
psrlw
cs
(bad)
mov
pop
xchg
pop
test
xchg
jo
push
addr16
sub
inc
popf
push
cld
aam
pop
cmp
add
push
js
and
mov
cmc
nop
mov
jb
cmp
or
cmps
sub
or
push
fbld
mov
pop
ins
repnz
mov
(bad)
jmp
push
sbb
or
push
loop
daa
xchg
push
test
xchg
xchg
pavgw
add
and
adc
mov
mov
aaa
pop
mov
pop
or
pop
push
mov
dec
aad
sub
(bad)
cdq
adc
or
mov
adc
arpl
rol
sub
and
es
mov
(bad)
loop
push
movs
inc
jnp
fld
(bad)
ficom
(bad)
retf
cli
fld
pop
add
ss
push
sbb
mov
and
dec
gs
cwde
gs
inc
cmp
in
pop
retf
fsubr
push
sub
add
add
js
sub
lahf
xchg
jns
mov
dec
in
ret
cmp
push
and
in
stc
jp
retf
sahf
sahf
jle
out
(bad)
popf
fild
push
data16
imul
inc
or
pop
out
add
pop
inc
push
push
call
inc
popf
and
add
xor
inc
cmp
or
dec
sub
mov
or
in
sahf
xchg
cmp
and
add
sahf
pop
loop
mov
or
fwait
mov
lea
cmps
inc
movs
lods
(bad)
loopne
daa
dec
repz
push
xchg
mov
add
dec
lahf
and
cdq
mov
pop
push
inc
pop
push
xchg
xor
fwait
jbe
inc
aad
fild
cmps
popf
mov
mov
movs
sbb
cmp
or
cmps
enter
xchg
shl
xor
sbb
push
outs
loop
imul
jmp
xor
xchg
jo
mov
cwde
repnz
cmp
sahf
mov
cld
add
or
loopne
sbb
test
test
rol
fidiv
test
dec
xor
into
sbb
test
inc
repnz
sar
fs
mov
jb
xchg
or
cmp
mov
inc
xchg
dec
cmp
or
repnz
mov
cmp
and
or
jmp
cmp
ret
xor
and
imul
call
shl
inc
lock
sbb
pop
fucomip
mov
jne
scas
adc
dec
xchg
popa
push
clc
mov
jmp
mov
fimul
jnp
xor
push
cwde
or
call
pop
pop
xor
mov
add
(bad)
ds
xchg
xor
sub
jne
or
push
cmp
inc
cmp
into
jl
imul
fcmovb
jmp
pop
cwde
add
jg
or
dec
jae
mov
push
xor
xor
fwait
adc
add
mov
add
add
jne
retf
sbb
arpl
mov
scas
and
mov
pop
pop
sub
jno
rol
adc
push
scas
popa
add
aam
add
add
sbb
inc
push
sbb
dec
mov
aam
enter
and
adc
inc
and
out
pop
inc
loop
leave
xor
inc
pop
mov
arpl
lock
push
push
inc
int
cmc
and
shl
xchg
test
pop
sub
mov
movs
sbb
test
mov
inc
push
adc
loop
xchg
imul
or
test
cs
ficom
test
call
cmp
ret
aas
bound
and
pop
mov
adc
or
dec
out
xchg
sbb
dec
cmp
popf
pop
dec
jl
scas
fld
sub
es
and
inc
or
shl
xchg
jno
adc
mov
mov
pushf
out
xor
jns
push
xor
pop
push
adc
sub
dec
jmp
add
jae
lods
push
push
and
dec
and
loopne
and
add
inc
cmp
ss
xor
jns
cld
push
or
pop
dec
push
and
mul
sbb
movs
lock
adc
cmp
je
inc
into
fiadd
mov
loop
or
movs
add
or
xchg
jl
push
test
add
mov
push
inc
(bad)
loope
and
inc
popa
inc
push
repz
call
outs
ins
retf
fisub
push
adc
and
xor
or
mov
jmp
push
push
scas
fistp
xchg
sbb
call
das
fwait
push
call
loope
jmp
jecxz
fwait
xor
dec
sub
and
in
or
mov
jb
jne
test
mov
sub
ds
je
push
xchg
adc
xor
and
scas
call
scas
push
in
dec
ret
ins
pusha
dec
sub
add
push
xor
clc
inc
je
fdivr
cmp
mov
pop
adc
cmp
fild
loope
inc
shr
jae
inc
arpl
xchg
jae
add
cdq
add
push
xchg
sbb
push
call
add
or
out
jle
fcomip
mov
push
or
push
ja
pop
mov
xor
and
jg
das
adc
or
mov
dec
dec
inc
(bad)
adc
mov
adc
es
and
loopne
and
mov
retf
mov
jmp
push
dec
and
push
push
pop
mov
ret
adc
cmp
push
push
in
(bad)
push
mov
outs
jbe
(bad)
test
mov
push
inc
ins
clc
out
rol
aad
sar
push
push
or
sbb
fst
in
push
pop
popa
fidivr
mov
popa
push
jnp
pop
imul
jne
sbb
adc
fild
adc
push
mov
sub
loop
xor
pop
mov
xchg
mov
pop
loope
jge
mov
sbb
and
cmp
mov
cs
or
cdq
sbb
sbb
xor
test
add
scas
add
outs
xchg
fisttp
push
jb
cld
outs
test
jg
push
add
mov
rol
test
shl
adc
adc
pop
sbb
adc
pop
and
dec
stos
push
xor
dec
pop
cwde
rol
jp
mov
push
and
xchg
fild
sbb
or
add
dec
add
jmp
adc
push
and
in
out
mov
xor
add
push
cmp
and
jns
(bad)
fisttp
and
and
dec
inc
mov
cmp
mov
fwait
push
push
lods
in
ins
loopne
enter
adc
jae
movs
inc
ror
xchg
dec
movs
cmp
sbb
adc
adc
(bad)
jmp
stc
jne
add
pusha
or
add
adc
or
mov
out
shr
fdivr
and
cmp
adc
movs
xor
pop
leave
sahf
ins
loope
pushf
dec
movs
fisub
sub
pop
mov
sbb
dec
xor
jmp
js
cs
je
sub
(bad)
dec
inc
xor
and
lock
(bad)
or
fidivr
mov
bound
add
xchg
out
loope
mov
mov
iret
jo
imul
push
jo
inc
dec
cs
sbb
mov
push
aam
fs
push
push
ja
outs
sbb
push
mov
cmp
mov
mov
mov
sub
or
sbb
mov
mov
hlt
rcl
jl
jl
lahf
or
ret
sub
dec
cdq
sbb
mov
clc
xchg
mov
ss
adc
push
mov
sbb
neg
cmp
fwait
and
sbb
stos
sub
or
mov
rcr
push
jecxz
ror
cdq
dec
inc
xchg
mov
test
xchg
jecxz
add
push
call
icebp
rcl
int
mov
cmp
test
or
push
fwait
loopne
and
and
xor
mov
loope
mov
cmp
(bad)
out
shl
add
dec
mov
sub
push
pop
punpckhdq
retf
push
inc
dec
add
jb
idiv
mov
into
mov
push
(bad)
das
cmp
cmp
cld
inc
(bad)
jmp
push
in
mov
imul
pop
mov
inc
test
rcl
fcmovnb
mov
neg
(bad)
mov
movs
setg
cmp
cld
add
fisttp
add
and
and
adc
xlat
aam
jge
ins
fcom
shl
mov
mov
adc
js
out
dec
add
add
dec
xchg
out
icebp
jl
jbe
in
push
imul
cmp
out
nop
pop
push
jle
mov
mov
push
cmps
add
stos
hlt
mov
iret
or
arpl
sbb
mov
fs
in
dec
add
repz
sbb
mov
ret
push
pusha
sub
add
adc
cmp
mov
in
leave
and
xchg
std
cmp
call
or
sti
add
or
rcr
movs
and
adc
std
loop
mov
les
pop
call
jg
cmp
fwait
jne
je
push
cmp
movs
add
pop
sub
cs
xchg
jecxz
lods
inc
ret
scas
jbe
jp
daa
dec
and
push
mov
popa
stc
xchg
popf
addr16
inc
inc
jmp
(bad)
cmp
ins
dec
push
in
test
or
popf
fidiv
stos
sub
and
add
std
add
jmp
retf
pop
loopne
in
test
je
or
aam
lock
cmc
sub
jmp
sub
inc
jb
arpl
pushf
hlt
or
mov
jae
outs
add
push
sub
adc
bound
repz
adc
pop
rol
and
jo
xor
xor
push
ins
adc
sub
mov
ret
xchg
retf
sbb
xor
popa
std
gs
shr
cmp
ret
and
push
sbb
dec
enter
iret
xchg
mov
jp
xchg
xchg
xchg
sbb
cmp
push
je
adc
sub
je
adc
pop
sahf
xor
or
jg
mov
shr
stos
nop
je
adc
mov
dec
add
mov
sbb
xor
dec
inc
mov
popa
ret
add
sar
mov
add
sbb
rcl
ja
in
popa
jge
mov
dec
(bad)
sbb
pop
or
jecxz
cmps
xchg
test
sahf
dec
leave
push
sub
fild
js
xchg
jmp
pop
or
shr
push
js
in
cmp
inc
cmp
adc
push
jae
cmp
cmp
mov
mov
mov
call
inc
repz
xor
fst
sbb
scas
xchg
xchg
and
adc
inc
xlat
je
outs
(bad)
push
and
adc
ins
or
pop
lea
mov
and
loopne
and
add
shl
add
and
xchg
sahf
mov
pop
fs
sub
push
mov
cmp
and
push
add
or
shl
cmp
sbb
test
mov
push
imul
or
cmp
pushf
imul
lea
adc
cwde
fstp
sahf
sub
add
cmp
(bad)
scas
jl
xchg
inc
add
ds
nop
pusha
pop
data16
cwde
int
mov
lahf
push
in
aam
shl
sbb
add
repz
mov
arpl
aas
cwd
pop
sahf
sub
xchg
sbb
mov
ret
and
(bad)
das
adc
ds
push
ss
push
(bad)
adc
jb
ror
test
clc
loop
mov
sub
lds
daa
or
pop
loope
push
aaa
repz
push
idiv
mov
jl
push
cdq
dec
(bad)
je
push
or
jle
sti
xor
add
xchg
daa
sahf
adc
or
xor
inc
xchg
cmp
add
xor
push
push
or
jmp
pop
pop
pushf
icebp
dec
imul
jbe
add
push
test
mov
sub
add
inc
mov
or
and
or
push
mov
jbe
aam
outs
ret
clc
adc
in
xor
(bad)
adc
and
xor
cli
jl
mov
test
sbb
push
push
dec
or
fadd
call
sbb
bnd
xchg
xor
mov
jl
xchg
dec
adc
inc
sbb
ja
xchg
push
or
add
adc
ret
nop
pop
mov
mov
(bad)
aas
and
sbb
int3
sbb
in
or
jmp
cmp
jne
xor
pop
sub
loope
jno
and
rcr
ret
retf
sub
int
mov
ds
push
push
cmc
aam
cmp
popf
stos
jl
ret
push
scas
jl
fsubr
inc
jl
push
in
push
sbb
push
mov
retf
in
mov
pop
xchg
xchg
arpl
outs
mov
xchg
and
cwde
(bad)
mov
xchg
jmp
jmp
dec
mov
dec
jp
jo
out
adc
mov
mov
inc
cmc
fisub
mov
adc
xor
fild
and
ret
rcr
nop
jecxz
add
cli
adc
add
test
lods
add
pop
and
and
pop
sbb
push
xlat
mov
mov
push
mov
fs
push
bound
push
push
or
jmp
dec
push
add
add
aam
or
sub
or
sub
xor
in
adc
jo
jg
lods
outs
add
(bad)
aas
(bad)
or
dec
pop
adc
add
lahf
add
push
and
rol
xor
and
or
cmps
or
mov
ror
pusha
shr
(bad)
and
cmp
test
nop
xchg
lds
cmp
in
xor
xchg
sub
cdq
xor
pop
outs
jecxz
or
stos
es
jo
call
jmp
sub
daa
sbb
ja
ret
inc
popf
push
ror
push
xchg
push
pop
xchg
pop
call
jbe
ins
push
add
mov
loop
mov
sub
xor
ins
and
cwde
ret
push
xor
jecxz
and
int3
sbb
arpl
mov
scas
adc
loop
data16
aaa
push
push
test
sbb
mov
lea
out
pusha
jmp
adc
adc
add
mov
test
and
add
xor
dec
and
sub
aam
or
popa
push
mov
lahf
push
rol
int3
js
fldenv
cmc
add
test
pop
push
pop
cmp
mov
ins
imul
inc
adc
cmps
aas
xchg
ret
fbstp
or
sbb
lea
add
(bad)
enter
add
scas
js
and
call
cs
mov
add
or
pop
xchg
(bad)
xor
stc
jp
js
jbe
jg
(bad)
or
cmps
mov
push
inc
mov
push
push
into
push
push
jb
rcl
fisttp
inc
sbb
cwde
stc
lea
lock
push
repnz
sbb
add
and
aam
fs
xchg
rcl
(bad)
sbb
(bad)
retf
add
imul
sbb
retf
mov
or
mov
and
aam
sbb
or
inc
loopne
fimul
add
sub
and
pusha
pusha
retf
shl
adc
movs
push
inc
jne
adc
mov
dec
inc
mov
rol
add
mov
cmc
cmp
or
jo
push
mov
leave
les
mov
cmp
mov
xor
cmp
ds
xchg
mov
ss
mov
lahf
test
test
sbb
daa
cmps
adc
jns
sar
inc
cmp
(bad)
test
push
inc
push
daa
mov
push
loopne
add
push
cmp
adc
loopne
push
je
and
int3
cwde
or
push
adc
cmp
icebp
cmp
pusha
add
call
add
inc
pop
pusha
pop
ja
imul
or
xchg
add
sbb
aas
dec
mov
ins
fimul
mov
mov
sub
cmp
pop
(bad)
test
leave
dec
adc
mov
imul
push
sbb
pop
xor
out
push
dec
mov
jl
cmp
mov
xor
add
sub
and
mov
sub
jp
js
xchg
mov
inc
sbb
push
xchg
std
jp
mov
add
movs
dec
mov
test
mov
sar
dec
stos
jp
inc
and
mov
and
sbb
fidiv
aas
dec
sbb
jb
jp
popa
pop
loopne
and
push
xchg
jbe
int
inc
sar
clc
rol
jl
loope
movs
test
jbe
or
fs
mov
in
call
adc
push
leave
push
je
mov
mov
add
pinsrw
jbe
push
or
sbb
cmp
inc
and
out
and
jmp
nop
rol
mov
adc
xor
push
nop
dec
fwait
and
add
and
jnp
or
ins
jnp
sub
in
sub
inc
ds
push
test
dec
neg
fdivr
shl
adc
adc
jne
sar
cmps
jne
adc
lods
sar
inc
cmp
mov
inc
(bad)
inc
mov
adc
mov
inc
or
adc
cmp
std
gs
jge
jmp
add
mov
dec
scas
sar
mul
xor
sahf
cmc
push
adc
mov
and
dec
xchg
inc
hlt
mov
inc
test
pop
add
and
adc
into
cmps
jle
cmp
jmp
push
aam
std
pushf
and
call
lea
je
out
or
mov
xchg
iret
jnp
sub
ja
adc
jp
popf
sub
push
cmp
pop
dec
or
retf
ret
push
imul
into
xchg
cmp
mov
stc
or
mov
adc
cmp
popf
movs
clc
push
sub
dec
mov
pop
sbb
inc
test
adc
add
aaa
addr16
xchg
sub
das
push
dec
or
leave
mov
mov
rol
sahf
mov
pop
or
jg
sub
push
xchg
xor
nop
rol
xchg
sbb
(bad)
fmulp
jmp
in
imul
test
jo
adc
nop
pop
ja
and
inc
mov
xor
mov
sub
dec
nop
xor
dec
cmp
dec
add
dec
test
addr16
cld
push
push
pop
nop
lea
dec
pusha
adc
icebp
adc
bound
rcl
sbb
push
mov
xchg
mov
mov
ins
sub
je
inc
push
inc
dec
jg
cmp
and
movs
daa
dec
and
and
xor
sub
cmp
and
call
and
aad
inc
popa
jne
aad
mov
movs
(bad)
jns
ins
shl
jge
xor
push
jle
mov
xor
es
add
adc
push
push
iret
sub
ins
fld
jl
pushf
shl
sbb
cs
and
inc
ins
xor
xchg
adc
rcl
pop
push
pop
mov
in
xchg
inc
cmp
xchg
sub
add
aad
mov
and
bound
shl
mov
adc
or
or
adc
mov
stos
push
movs
inc
cmps
cmc
jae
push
jmp
mov
mov
adc
scas
or
aad
test
and
test
cmp
loopne
adc
pop
cmovg
mov
dec
pusha
out
enter
std
mov
inc
ficomp
sbb
or
loop
fadd
cmp
loop
jo
das
push
js
xchg
pushf
retf
mov
sub
jo
add
push
daa
and
scas
aaa
adc
dec
stos
cmp
add
pop
mov
add
cs
dec
xchg
div
add
jge
pop
mov
ins
es
sub
mov
push
pop
pop
fldenv
push
cmps
aam
pop
fisub
mul
mov
sub
mov
xor
pop
sbb
add
lods
push
push
xchg
and
(bad)
stc
in
add
dec
add
cmp
push
idiv
and
outs
jae
cdq
xchg
(bad)
hlt
jle
call
or
test
ins
cmp
lods
loopne
movs
popa
(bad)
in
mov
dec
gs
pop
mov
xchg
dec
fdivr
pop
xchg
test
ret
dec
adc
pop
adc
pop
push
and
or
pop
int
cmp
xchg
inc
adc
or
ret
pop
pop
xchg
test
or
xor
pop
(bad)
push
add
data16
pop
lods
out
pop
lahf
sbb
inc
(bad)
cmp
sub
xor
inc
sub
inc
jns
jp
add
mov
ja
aaa
arpl
scas
popf
add
inc
dec
and
add
int
push
adc
jmp
pop
add
and
pop
add
daa
dec
call
mov
sbb
popa
stc
ret
fdiv
cmp
push
adc
movs
xor
sub
(bad)
std
js
mov
and
je
jmp
push
inc
mov
mov
jmp
sbb
aam
dec
push
adc
pop
sub
sti
and
add
or
arpl
repz
add
mov
push
jmp
dec
xchg
test
fdivr
push
test
mov
ret
add
pop
adc
mov
rol
cmps
gs
(bad)
adc
add
push
cs
xchg
stc
push
addr16
cli
add
add
bts
dec
cmp
mov
mov
clc
sbb
mov
xor
cmp
pop
repnz
push
call
push
lock
mov
xchg
rcr
das
cli
and
outs
sbb
and
xchg
sub
enter
ss
clc
add
jbe
jl
je
fdiv
mov
jl
jmp
and
mov
int
push
or
jns
dec
repnz
test
cmp
push
cmp
adc
test
fcomp
daa
lahf
addr16
test
mov
pop
xchg
test
xchg
cmp
dec
xor
xor
ffree
mul
mov
(bad)
jmp
jle
push
out
mov
pop
outs
test
dec
fidiv
inc
xor
sub
lea
push
sbb
mov
div
inc
jno
pop
and
add
or
call
ins
data16
hlt
dec
or
dec
push
inc
stc
adc
or
test
dec
or
cmc
mov
dec
inc
hlt
ret
push
lock
cli
loopne
cmp
rcr
inc
pop
imul
sahf
shl
pop
or
or
and
and
call
sbb
adc
imul
xchg
push
add
cmp
mov
mov
mov
dec
xchg
ds
sbb
inc
mov
shl
movs
ins
mov
xchg
iret
or
or
cld
mov
ror
inc
addr16
sub
add
inc
xor
cmp
sahf
adc
imul
jae
lea
and
mov
or
cmp
inc
(bad)
clc
test
mov
retf
aas
cmps
aaa
lods
xchg
loope
mov
dec
and
fcmovnbe
jo
add
fwait
mov
movs
cmps
leave
jnp
push
mov
mov
adc
mov
or
nop
lods
enter
ja
mov
sub
dec
inc
jmp
(bad)
fs
repz
jecxz
mov
jmp
int
push
rcl
push
sub
(bad)
push
mov
(bad)
cmps
hlt
sub
fnstenv
add
jl
add
sub
add
pushf
retf
add
cmp
mov
lea
mov
faddp
push
mov
popf
je
inc
xchg
ret
jo
cmp
fild
js
mov
sub
mov
in
or
pop
icebp
inc
push
adc
(bad)
pop
pushf
pusha
rol
outs
nop
(bad)
mov
sahf
xlat
push
std
push
dec
outs
push
in
daa
pop
or
push
push
div
push
mov
je
aaa
adc
daa
mov
jmp
nop
dec
mov
iret
in
push
sub
adc
cs
mov
add
ins
pop
int3
pop
add
(bad)
out
mov
imul
pop
popf
xlat
inc
cdq
js
jge
pop
mov
xor
dec
pop
inc
adc
pop
leave
(bad)
fbld
test
adc
ror
sbb
enter
add
sbb
test
je
xor
inc
ja
pushf
and
jo
pushf
sbb
push
jp
mov
aad
push
push
push
mov
xchg
cmovp
aaa
xchg
jae
js
es
jns
pop
(bad)
jmp
and
cmc
stc
inc
dec
xchg
jp
fs
mov
pop
mov
and
pusha
pop
jg
or
mov
cmp
mov
aas
loopne
jnp
lahf
test
test
inc
loope
dec
lahf
xchg
sahf
data16
adc
mov
push
call
push
sub
xor
adc
or
inc
cmp
call
adc
test
push
push
or
or
adc
shr
inc
push
loopne
push
push
adc
out
test
push
dec
push
and
js
loop
es
and
sub
mov
hlt
stos
test
inc
setb
sbb
stos
lock
mov
popa
cmp
repz
ret
push
add
mov
enter
mov
pop
jge
dec
adc
pop
xor
sbb
mov
ret
add
in
inc
xor
retf
add
jno
sbb
ss
js
or
pop
stos
cmc
ins
fmul
sub
pop
stc
sub
mov
inc
dec
pop
std
inc
pop
mov
adc
pop
stc
dec
fcmovnb
mov
retf
leave
sub
in
(bad)
in
inc
out
scas
stos
inc
or
mov
push
xchg
and
xor
add
aam
jmp
fldenv
gs
mov
lahf
int3
inc
and
push
sbb
popa
pop
repnz
adc
push
stos
xchg
jmp
push
movs
(bad)
mov
icebp
cmp
mov
fsub
mov
add
dec
fwait
loopne
or
pusha
jp
std
shr
out
add
pop
call
pop
pop
ret
ds
pop
adc
repnz
nop
fcom
cmps
sub
inc
jg
test
inc
ret
popa
add
aam
adc
adc
push
ret
adc
imul
inc
into
out
out
leave
les
(bad)
movs
mov
aad
sahf
jg
xchg
fcom
mov
(bad)
cld
add
adc
jl
lds
imul
push
es
cmp
enter
daa
dec
sahf
xchg
inc
dec
imul
xchg
popa
cmps
div
cmp
inc
add
jns
mov
cmps
pop
xchg
push
rol
jne
aaa
pop
out
cli
pop
mov
fcomp
push
icebp
ins
and
call
adc
jno
and
add
out
stc
test
stos
rcl
mov
aam
cli
movs
pxor
sbb
cdq
(bad)
call
adc
pushf
sbb
mov
or
mov
pusha
sar
adc
lods
push
adc
mov
push
aas
jle
adc
repz
add
push
adc
mov
push
inc
hlt
xor
mov
inc
add
mov
aas
mov
add
push
lock
repz
push
retf
push
call
lods
jnp
cmp
lods
mov
xchg
popa
or
mov
push
sub
push
cs
pusha
scas
xchg
or
inc
jb
pop
in
mov
jns
hlt
in
aam
(bad)
nop
cmp
pop
mov
popa
pop
xor
gs
add
cmp
mov
dec
or
push
cmpxchg
jg
sbb
lea
and
sub
push
xchg
stc
cs
mov
lods
dec
mov
or
(bad)
inc
sbb
mov
or
sbb
ins
cmp
mov
imul
sar
xor
aaa
add
(bad)
out
or
push
xchg
hlt
or
and
mov
sub
sbb
fsubr
add
inc
imul
xchg
mov
adc
push
adc
add
xchg
mov
aam
and
cmp
mov
je
push
adc
push
shl
lahf
mov
xchg
mov
loope
push
cld
sub
loope
dec
clc
lds
(bad)
sbb
xchg
xchg
sbb
mov
xchg
pusha
inc
ins
and
mov
shl
clc
nop
pop
(bad)
adc
popa
add
adc
jne
popa
dec
add
or
adc
add
fistp
lahf
rol
cld
and
inc
inc
pop
and
pop
mov
ds
lea
push
mov
cmp
outs
dec
jge
hlt
and
lea
test
dec
leave
inc
push
mov
ja
xor
inc
pop
add
idiv
stc
pop
and
xchg
cmp
loope
jle
sbb
add
jbe
test
xor
add
pop
sbb
inc
inc
imul
push
sub
(bad)
fcomp
mov
leave
cmp
daa
sti
rcr
pop
and
jmp
(bad)
or
push
mov
pop
test
and
sub
push
cmp
test
test
(bad)
jle
and
cdq
sub
inc
sub
inc
call
jg
mov
cmp
ja
and
daa
mov
daa
in
cmps
add
sbb
sub
dec
es
ret
push
and
adc
jmp
add
fwait
movs
out
jp
jo
leave
sahf
or
push
push
rcr
add
test
xor
inc
xchg
add
inc
and
pop
dec
movs
inc
daa
and
add
mov
fst
fwait
or
pop
push
inc
add
scas
js
or
push
push
or
std
jmp
cmp
call
(bad)
clc
adc
mov
and
mov
adc
pop
ret
popf
outs
mov
lds
mov
test
sub
scas
ret
sub
(bad)
mov
jp
xchg
add
sub
mov
cmp
jp
test
dec
push
mov
inc
lea
imul
stc
jb
fst
repz
rol
outs
or
pop
jo
sbb
inc
sub
cmp
inc
jg
sub
xor
add
in
or
inc
aam
ror
jp
retf
rcl
aam
test
fld
dec
(bad)
jo
lods
adc
xchg
retf
push
sub
dec
pop
stos
adc
push
call
add
xor
stos
pushf
mov
or
add
js
mov
push
and
or
mov
in
push
or
jbe
test
loope
inc
shr
push
sub
jmp
fimul
sbb
sub
pop
and
jno
jnp
and
sbb
gs
(bad)
xchg
mov
lock
push
pusha
sub
in
loopne
or
or
jnp
jnp
or
dec
dec
js
jg
dec
add
xor
adc
leave
fisubr
mov
scas
aad
repnz
add
cmc
sar
inc
pop
xchg
inc
outs
dec
add
push
or
rcr
out
(bad)
shr
mov
std
lock
mov
push
and
std
ins
add
call
mov
dec
pusha
cmps
and
mov
mov
clc
or
cmps
jne
shl
add
lea
push
jg
or
sbb
neg
inc
out
dec
ror
loop
pop
aad
movs
inc
or
jne
cmps
xchg
xchg
inc
push
or
inc
fwait
or
push
call
xor
cmp
add
add
mov
test
and
xor
mov
mov
ins
sbb
sub
ja
popa
push
cdq
inc
xor
add
jg
push
cmp
jae
sub
xor
pusha
jge
(bad)
cmp
add
sahf
or
or
sub
add
or
cmp
cmp
jb
dec
cmp
xchg
sub
popa
push
pushf
ss
sub
mov
jmp
xor
adc
ret
sub
pop
outs
inc
cs
sub
sbb
xchg
cmps
mov
ds
add
jbe
popf
icebp
inc
sub
xor
jnp
mov
inc
or
imul
push
call
dec
inc
leave
inc
or
jmp
push
lods
je
inc
xor
or
mov
call
add
or
add
jmp
jbe
dec
pusha
add
mov
pop
nop
add
rol
jge
outs
inc
lahf
jae
adc
or
pop
sub
lea
xor
mov
add
or
into
sub
outs
lock
push
je
cmp
(bad)
push
push
pop
dec
and
std
mov
add
inc
loopne
mov
inc
jb
pop
pop
sub
ret
inc
call
push
add
jo
mov
repz
outs
ror
and
fisubr
loopne
jo
adc
sbb
in
push
dec
add
cmp
inc
outs
aas
jbe
int
xchg
add
cmovnp
add
and
push
cdq
addr16
and
push
push
cli
sbb
imul
pushf
xor
xchg
push
movs
xor
sbb
mov
jns
dec
or
inc
mov
lods
mov
mov
cmp
or
xchg
xchg
inc
cmp
(bad)
call
pop
cmp
add
cmp
mov
and
sar
rol
xchg
shl
xor
lea
mov
test
mov
mov
shr
clc
cmp
sub
jmp
or
lods
enter
add
jns
push
mov
inc
jae
shr
push
sbb
out
sbb
cld
test
retf
pop
xchg
test
add
jmp
jb
iret
or
adc
push
add
lds
jmp
and
mov
mov
sar
and
out
inc
test
xchg
xor
adc
test
xor
stc
sar
push
adc
add
call
xor
jmp
mov
aad
daa
cmp
mov
in
out
sbb
ret
call
or
sbb
outs
sbb
mov
das
pop
push
cmp
into
test
adc
adc
mov
inc
push
test
jo
icebp
add
mov
int3
pop
outs
shl
mov
fstp
(bad)
call
es
pmaxsw
in
cwde
xor
ds
movs
icebp
push
(bad)
sti
outs
cld
jne
cmp
xor
xchg
pop
in
outs
sbb
push
adc
jo
jno
fbstp
call
xchg
retf
mov
(bad)
dec
aaa
dec
fcom
add
inc
nop
ja
stos
and
fldcw
test
jb
mov
mov
push
cmc
xor
daa
jmp
popa
dec
xor
inc
mov
shl
(bad)
out
adc
sbb
fmul
outs
push
les
inc
repnz
(bad)
mov
mov
movs
mov
sbb
jecxz
arpl
sti
popa
repz
adc
mov
add
push
push
push
push
add
push
fld
inc
ds
and
clc
das
jmp
mov
(bad)
or
enter
(bad)
popa
mov
sbb
pop
pop
jmp
pop
push
push
xchg
xchg
xchg
lahf
pop
test
fistp
jle
dec
push
jno
and
js
pusha
jne
loop
sub
ss
mov
mov
out
js
or
imul
dec
daa
daa
aaa
pop
js
add
add
jecxz
mov
loop
mov
mov
adc
imul
cmp
mov
push
xchg
ds
rcr
sub
ins
ds
loopne
push
mov
lahf
cs
ror
or
add
add
shl
imul
cs
fild
push
sub
sub
inc
jnp
test
jle
mov
add
inc
and
mov
add
shl
pop
shl
in
cmp
(bad)
sar
cmp
cs
sub
sbb
xchg
or
ins
mov
rcl
dec
lock
mov
dec
int3
ret
ror
or
stos
inc
cmp
mov
jp
push
rol
loop
push
(bad)
adc
add
push
outs
pop
push
sbb
mov
fcmovnb
dec
adc
popa
adc
lock
pop
retf
xchg
shl
push
or
push
jne
call
ret
jg
loope
sbb
jns
fisttp
leave
pop
push
je
nop
pop
repz
push
push
inc
adc
sub
sbb
js
ret
jno
mov
push
cmps
and
adc
add
pop
adc
xor
and
aas
mov
inc
jge
loope
pop
add
xor
add
(bad)
shl
rol
fwait
dec
test
lock
pusha
add
jae
in
rol
xchg
cld
inc
sbb
or
stos
fs
push
(bad)
cmp
pop
xor
lea
dec
dec
mov
push
call
out
or
lods
or
inc
sbb
and
nop
das
or
fist
jmp
jns
adc
repnz
call
push
ja
mov
inc
jl
or
adc
loope
ss
xchg
sub
ds
jo
dec
aad
add
inc
xor
and
fstp
add
stc
cwde
cmp
sar
retf
jne
xchg
nop
pusha
cmps
call
jl
adc
imul
daa
add
mov
cld
xor
jo
pop
push
add
and
pop
jo
mov
add
call
jmp
call
dec
pop
adc
mov
shl
and
aaa
or
xor
push
push
mov
in
bound
ss
push
stos
inc
mov
call
loopne
push
fisttp
pop
pop
ret
iret
pop
mov
ja
sub
or
mov
mov
pop
movs
inc
ret
mov
and
add
repz
push
dec
mov
xchg
push
inc
cmp
jmp
dec
lods
loopne
dec
or
adc
adc
rcl
les
pusha
adc
push
or
dec
sub
jno
jge
nop
inc
in
lahf
je
push
add
sub
loope
pop
add
call
fist
sbb
pop
int3
data16
xor
add
sub
jno
sbb
(bad)
push
pop
rol
sbb
push
daa
push
into
or
or
cmps
or
pop
or
ret
and
ror
ins
mov
in
adc
or
and
bound
int
inc
or
out
pop
push
ror
lods
ret
ret
cmp
mov
jg
or
add
icebp
cmp
add
push
sub
and
mov
fld
sub
jl
xchg
sub
add
imul
mov
sti
aaa
and
and
cmp
cmp
add
pop
rdpmc
add
das
aaa
lods
fistp
sahf
pop
arpl
and
out
pop
xor
imul
pusha
test
push
sub
or
dec
push
pop
xchg
inc
or
push
test
push
sbb
sbb
push
sbb
add
shr
fstp
dec
sub
jmp
inc
stc
daa
jmp
jne
call
or
adc
lea
mov
and
(bad)
ror
inc
push
push
cmove
es
dec
cld
jnp
out
and
daa
jl
ret
push
xlat
fld
mov
scas
std
hlt
pop
inc
xchg
mov
pushf
jl
movs
xchg
aaa
movs
jns
dec
adc
ret
mov
cmp
mov
adc
das
clc
add
loope
add
or
aas
aas
sbb
pop
enter
xchg
add
adc
loopne
add
fnstcw
dec
pop
clc
push
ins
dec
mov
pop
test
and
lea
or
test
and
shl
or
frstor
dec
fwait
nop
fdivr
pop
ror
loop
fwait
lock
xor
inc
pop
adc
(bad)
cmps
call
adc
mov
cmc
pop
or
cmp
jne
sbb
pop
add
clc
jl
sbb
mov
and
out
test
inc
mov
aad
(bad)
jae
sbb
call
ficom
ret
dec
sbb
es
pop
es
and
pop
pop
mov
es
test
sti
or
jle
out
jbe
je
fisubr
jne
or
nop
add
and
and
out
push
sbb
mov
sub
je
js
or
cmp
inc
inc
adc
push
mov
adc
cwde
jmp
add
mov
cli
stc
pop
fcom
das
jnp
repnz
or
mov
push
jle
or
mov
call
dec
adc
xchg
repnz
push
push
sbb
sub
dec
bound
cmp
call
xor
mov
pop
cwde
xor
add
mov
fdivp
aam
push
push
sbb
xor
adc
cmp
mov
xchg
ret
or
inc
mov
inc
xchg
cmp
mov
and
mov
les
jno
int
xchg
sbb
std
inc
add
in
add
adc
sbb
pop
adc
xor
jno
xchg
neg
nop
iret
mov
push
icebp
push
mov
and
fcom
push
cmp
jo
xchg
jo
mov
inc
push
jns
push
sahf
test
pop
mov
pop
ret
mov
mov
adc
rcr
test
sar
jecxz
scas
adc
leave
dec
or
sbb
es
adc
stc
adc
adc
or
xchg
or
in
in
adc
cmp
js
pop
out
mov
or
xor
pop
xchg
aam
adc
add
in
cmp
cmp
(bad)
xchg
sbb
mov
add
enter
test
ret
and
cwde
sbb
and
out
mov
and
inc
push
mov
jo
sub
test
mov
(bad)
xor
hlt
test
test
sti
inc
and
pushf
jle
call
or
cmp
outs
push
xor
idiv
in
movs
call
push
sub
jae
(bad)
cmp
stos
add
icebp
dec
dec
test
mov
stc
dec
loopne
ficom
push
stos
fdivr
jle
ins
sbb
aad
or
xchg
mov
sub
lods
enter
inc
outs
push
sub
cmc
idiv
lahf
mov
aam
adc
into
pop
scas
or
cmp
inc
mov
mov
jne
(bad)
add
xor
imul
es
fnstcw
popa
loopne
mov
inc
jp
cmps
adc
inc
sub
(bad)
aas
ins
loopne
push
dec
inc
sbb
xor
cwde
push
adc
inc
add
shl
adc
div
xchg
outs
push
sbb
cmp
arpl
or
pop
push
and
cmp
add
dec
inc
mov
adc
lea
dec
push
ret
mov
sub
mov
xchg
add
mov
shr
mov
jmp
pushf
xchg
inc
cmp
or
add
les
push
mov
mov
pop
add
or
add
data16
jnp
in
xor
sbb
cmp
cmc
adc
push
xlat
push
cmp
lods
or
ins
jecxz
xor
push
xor
pop
pop
cmp
cmp
and
and
out
mov
add
retf
xlat
ret
aad
movs
aam
cmp
mov
shr
sbb
adc
test
int
(bad)
adc
dec
push
dec
sub
repz
cmp
je
or
push
cmp
loopne
dec
mov
sar
call
inc
test
or
push
adc
push
or
or
jl
sub
adc
ins
adc
hlt
add
dec
mov
popf
js
push
jbe
fwait
sbb
or
and
scas
test
inc
jne
ret
pop
push
push
and
out
dec
vmwrite
and
movs
xchg
int3
hlt
mov
std
xor
shl
and
pop
inc
test
push
adc
int
gs
ret
pop
leave
jl
call
inc
inc
cmp
sub
dec
add
ficom
cmp
jns
inc
sbb
dec
fimul
loop
xchg
or
adc
iret
adc
push
out
cmps
rcr
scas
mov
sbb
and
lahf
cmp
mov
cmp
mov
inc
add
js
ins
sbb
or
or
je
inc
pop
or
mov
mov
adc
sub
fadd
psubsb
sahf
test
mov
add
push
(bad)
mov
inc
aad
(bad)
popa
leave
dec
lods
sub
add
inc
call
add
jecxz
inc
sbb
hlt
pop
xor
bound
xchg
add
pop
xchg
sbb
pop
pusha
inc
in
push
push
adc
fwait
rol
push
jnp
cmp
lahf
(bad)
pop
add
pop
inc
cld
sub
xchg
sbb
hlt
inc
sar
in
push
push
adc
bound
push
push
push
pusha
xchg
aam
or
dec
lds
dec
inc
mov
dec
inc
inc
ficom
fwait
or
pop
test
fs
retf
hlt
movs
cs
dec
inc
push
bound
(bad)
mov
push
fwait
sbb
repnz
stos
sbb
cwde
loopne
sub
cmp
loopne
loopne
rol
jns
fisub
loope
es
add
scas
in
cmp
rcl
pop
xchg
xor
xor
xchg
rcl
gs
(bad)
cmp
bnd
out
cwde
jno
stc
test
mul
push
hlt
dec
xor
adc
pop
pop
adc
stos
sub
test
loop
rol
jmp
in
imul
lods
sub
sbb
pop
cmp
addr16
leave
push
(bad)
fs
mov
cs
pop
push
sbb
mov
pop
sub
test
pop
mov
call
jo
jmp
cmp
xor
lods
jecxz
enter
cwde
leave
ret
sub
imul
call
jg
dec
add
fs
in
popf
nop
ins
jg
aam
mov
or
mov
and
or
jecxz
mov
xor
int
xchg
xor
jo
inc
xchg
or
inc
dec
movs
rol
dec
or
je
in
fdivr
jmp
inc
and
pop
pop
daa
pop
ret
das
xor
icebp
sahf
or
loop
mov
xor
test
sbb
xchg
adc
mov
jl
pop
adc
fist
fcomp
mov
and
loopne
mov
push
inc
inc
inc
aam
addr16
push
inc
movs
xor
cs
int3
mov
jb
adc
rcl
out
pop
js
xchg
pop
add
add
add
push
es
jne
arpl
les
sahf
adc
mov
loope
jecxz
repz
ror
sbb
pop
hlt
cs
push
stc
jae
add
and
and
push
jle
pop
in
push
(bad)
je
mov
mov
sbb
jb
adc
adc
jne
cmp
(bad)
sahf
mov
adc
add
(bad)
aas
jb
or
mov
push
jbe
xchg
in
xchg
je
pop
aad
imul
ret
jbe
add
(bad)
hlt
ins
sub
sbb
in
xchg
cmc
mov
push
cli
fnstsw
dec
push
mov
mov
add
test
jge
and
pop
and
(bad)
call
popa
adc
je
jle
xchg
pop
rcr
sub
mov
sbb
add
jp
mov
lods
fwait
pop
pop
inc
push
mov
retf
pop
add
cmps
jmp
xchg
shr
call
cs
mov
jmp
jnp
dec
dec
mov
sub
inc
icebp
js
jl
sbb
xchg
and
or
adc
lea
test
mov
lods
scas
sbb
push
inc
sub
mov
mov
mov
ds
dec
jl
loope
xor
mov
retf
jp
inc
stos
xchg
pop
es
xlat
push
fnstcw
adc
das
add
dec
dec
repz
or
inc
mov
jl
sub
(bad)
push
push
inc
cli
sub
aas
es
movs
push
call
mov
in
jne
call
(bad)
or
pop
inc
or
call
sbb
mov
sub
cmp
push
repz
(bad)
mov
pop
fwait
push
rol
sbb
add
sub
cmp
sbb
push
sbb
xchg
clc
mov
cmp
shl
cwde
js
inc
sub
sbb
and
loope
push
xchg
call
xchg
push
jmp
push
jp
retf
and
cmc
jb
pop
xchg
mov
cmp
not
pop
or
cld
mov
mov
adc
mov
cmp
mov
(bad)
and
loop
in
popf
add
cmps
cmp
ins
mov
retf
jmp
popa
mov
lea
sub
mov
int
sti
mov
inc
adc
(bad)
sub
mov
aaa
jne
mov
ins
or
out
sub
add
pop
adc
out
std
repz
mov
pop
enter
inc
mov
push
sbb
cwde
adc
mov
add
inc
loopne
std
sub
call
ret
inc
std
sub
fsubr
mov
mov
cmpxchg8b
adc
pusha
loope
mov
out
inc
sub
push
push
sbb
adc
push
xor
enter
ins
mov
inc
mov
les
and
inc
repnz
enter
dec
sub
fs
in
arpl
nop
and
pop
add
js
sbb
add
outs
push
cmp
cwde
loopne
je
jnp
adc
inc
popa
jl
or
push
movs
mov
pop
jle
sbb
je
xor
out
jbe
jle
or
je
sub
je
out
out
sub
je
sub
sbb
adc
je
cmp
mov
test
or
sub
add
push
mov
xor
mov
xchg
sub
pop
ss
jg
adc
adc
push
xor
jge
imul
inc
jge
mov
jmp
or
aas
mov
mov
xchg
jmp
sub
cmps
shl
mov
lds
mov
jecxz
addr16
push
pusha
fdivr
jle
fcmovnu
xor
xor
and
loop
popa
fadd
xor
jne
add
push
inc
addr16
test
add
push
add
retf
adc
jb
test
cmp
cmps
mov
add
push
or
xor
(bad)
and
out
or
mov
mov
or
jae
push
mov
fs
ds
and
jl
push
ffreep
ja
adc
shl
or
mov
sbb
ret
add
out
rcl
and
add
jo
mov
std
dec
lock
xor
ss
pop
lock
add
test
call
lea
push
aaa
fcomp
pusha
adc
jns
call
mov
xadd
out
sbb
pop
sbb
fnstenv
mov
jmp
es
mov
stc
test
cmp
pop
mov
sub
mov
add
sbb
les
add
(bad)
cld
jb
mov
cmp
xchg
into
sub
shr
jp
enter
sti
mov
rol
inc
add
pop
in
push
loop
test
jbe
sub
retf
clc
xor
fbstp
je
fs
js
cwde
int3
jbe
cmc
jo
adc
into
mov
ins
js
not
jno
push
lock
pop
cmp
rol
add
es
dec
cwde
ja
ja
add
jb
mov
xchg
add
jnp
adc
ins
cmp
add
ss
or
leave
or
mov
cmp
ja
pop
inc
fst
push
jo
mov
cmps
jecxz
iret
push
test
jmp
push
adc
lods
push
loop
mov
add
nop
test
push
mov
sbb
push
sub
leave
and
jge
mov
cmps
dec
imul
pusha
add
jno
push
dec
ds
call
fst
test
or
dec
pop
test
iret
std
adc
and
call
push
call
mov
mov
add
xchg
mov
jo
dec
xchg
es
adc
xchg
fcomp
sar
inc
jnp
add
xor
inc
add
jnp
into
lds
(bad)
or
jbe
jmp
arpl
dec
pop
cmp
cmp
pop
jne
nop
jne
and
sbb
call
sub
shl
sbb
xchg
pop
nop
std
or
popa
mov
sub
mov
xor
les
pop
movs
int3
mov
ficomp
std
push
push
rol
test
sbb
jl
or
inc
movs
push
(bad)
xor
or
jne
xlat
cmc
aaa
mov
cmp
pop
add
adc
repnz
push
enter
std
push
std
add
iret
retf
jne
jg
mov
fadd
add
shr
push
or
fstp
adc
retf
mov
call
push
dec
ret
call
pop
xor
(bad)
loopne
rcr
xchg
daa
or
out
adc
pop
mov
push
push
push
sub
pop
dec
inc
inc
jecxz
or
inc
adc
sbb
jb
int3
pop
or
or
shr
mov
dec
cmp
sbb
push
lock
arpl
outs
mov
fcmovnu
mov
xchg
push
test
xor
(bad)
and
push
(bad)
shr
mov
dec
pop
imul
and
sub
mov
scas
pusha
cmps
jmp
or
cmp
data16
adc
fwait
test
push
mov
scas
pop
jp
movs
mov
push
or
dec
pop
cmp
dec
add
adc
and
or
and
cmp
loop
call
or
xor
adc
mov
adc
cmp
cdq
fs
dec
gs
mov
pop
mov
nop
int3
mov
cmp
mov
sub
mov
stc
mov
fcom
rcl
sub
clc
xor
rcl
pop
cmp
sbb
xor
ret
sub
jle
lods
movs
pop
daa
push
lea
or
cwde
xchg
add
adc
add
inc
adc
ret
retf
das
or
mov
cwde
or
pop
sub
xor
imul
fs
repnz
xchg
fldcw
leave
or
stc
test
jb
dec
adc
aas
xor
push
imul
ret
xor
retf
ror
std
mov
dec
fiadd
sbb
movs
jb
sub
adc
dec
sub
inc
dec
jae
test
mov
popa
and
sub
sub
daa
sub
xchg
push
jg
push
pop
sbb
cmps
sbb
sti
or
jno
sar
ror
arpl
or
and
push
cmp
jge
ret
in
pop
pop
call
shl
add
adc
jno
mov
pop
pop
push
sub
loop
mov
mov
sub
push
xor
xchg
sbb
pop
or
push
cmps
not
jle
xchg
test
mul
enter
ret
sahf
add
xchg
and
fs
or
ror
jecxz
xor
je
adc
sbb
sub
mov
jae
jb
or
pushf
dec
mov
out
sbb
or
pop
or
(bad)
movs
loope
sbb
out
popa
jns
xor
sub
mov
pop
jmp
outs
push
or
jo
add
and
push
mov
fild
add
aaa
add
mov
movnti
jge
nop
sub
call
prefetcht1
add
push
fcom
jl
dec
mov
jl
dec
mov
ret
shl
popa
movzx
je
nop
xchg
loop
jecxz
mov
lods
sub
push
cli
stc
mov
sub
jmp
outs
cmp
packuswb
into
xchg
push
add
sbb
or
adc
cmp
cmp
out
(bad)
cmps
pusha
clc
movs
ror
push
push
out
jne
cmp
mov
ja
inc
mov
add
or
sahf
and
imul
or
jl
cmp
add
push
xchg
push
and
aad
retf
call
mov
outs
mov
dec
repnz
dec
call
push
push
ja
xchg
retf
pop
pop
pusha
push
(bad)
daa
adc
push
pop
pop
pop
mov
ins
mov
loope
movs
jmp
addr16
fstp
sbb
aaa
dec
or
scas
push
push
and
or
cmp
adc
or
add
inc
stc
scas
sbb
pop
dec
pop
xchg
and
sbb
neg
mov
loop
dec
ja
jo
dec
scas
and
test
xor
bound
js
and
jne
imul
sbb
sahf
sub
and
clc
xchg
addr16
sbb
xchg
cmp
aad
(bad)
jmp
inc
fsub
and
jne
jb
jb
sub
adc
inc
popa
and
sbb
fdiv
leave
ins
pop
ins
dec
cmps
ds
jne
adc
pop
sub
mov
or
or
lds
sbb
cli
icebp
stc
aaa
push
mov
inc
and
loop
gs
fld
in
sub
cs
and
ds
call
in
sbb
ret
out
push
ins
push
idiv
xchg
retf
shl
retf
les
mov
push
sahf
cmp
add
out
stc
mov
push
pop
cmp
xlat
xchg
sub
push
pop
fisub
pop
push
mov
mov
je
add
fild
ins
je
push
cmp
add
in
test
cmp
mov
call
and
pop
xor
add
mov
and
xor
aam
fs
inc
pop
jge
or
ficom
pop
frstor
das
test
ins
mov
aad
jmp
test
sub
sti
adc
sbb
int3
repz
jns
or
sbb
mov
adc
outs
jge
stc
pop
adc
pop
sbb
cmp
push
call
lods
outs
scas
jne
add
lea
out
mov
xchg
sbb
cmp
or
adc
and
adc
add
mov
jo
aad
adc
fmul
and
(bad)
in
loopne
push
xor
sbb
enter
jmp
fcomip
push
stc
je
push
shl
adc
mov
(bad)
mov
jmp
out
cmp
ja
and
xor
in
mov
mov
(bad)
cli
dec
push
adc
pop
leave
leave
mov
push
mov
fwait
les
pop
cmps
mov
movsx
push
ja
hlt
mov
jle
or
pushf
or
mov
rcl
and
enter
sbb
and
pop
mov
or
sub
push
in
mov
xor
sub
es
push
aaa
adc
dec
add
js
aas
icebp
pop
jmp
pop
xchg
mov
bound
(bad)
stc
inc
or
adc
(bad)
jmp
scas
es
les
mov
push
ret
daa
push
mov
je
push
mov
inc
mov
sub
lea
adc
adc
sub
gs
pop
sbb
stc
pop
push
jg
pop
sub
jmp
in
add
mov
mov
and
call
sub
outs
dec
push
mov
jnp
sbb
in
sbb
(bad)
jg
in
call
leave
adc
push
retf
nop
add
inc
fmulp
ins
fmul
and
add
pushf
loope
imul
mov
frstor
ins
inc
(bad)
cmp
adc
xchg
mov
fsubr
cmps
push
in
dec
and
mov
loope
mov
jle
mov
cmp
movs
adc
cs
or
out
popf
push
or
jle
lock
and
mov
js
push
add
ret
cmp
je
inc
sbb
push
cli
pop
fldcw
add
je
add
cmp
test
pusha
dec
popf
mov
addr16
add
cwde
call
mov
test
push
jns
popa
imul
push
mov
mov
pop
push
int
call
in
ret
mov
ds
(bad)
aam
dec
mov
pushf
cmp
xchg
inc
fbld
xchg
adc
jnp
int
mov
stc
adc
int3
sar
add
push
sbb
dec
pop
imul
adc
sahf
out
fs
test
hlt
pop
add
loope
jmp
aas
pop
adc
lea
lock
push
jmp
mov
ss
or
add
inc
cld
lods
inc
popa
shl
inc
cmp
out
out
scas
jmp
and
sub
ja
fsubr
ins
dec
mov
inc
adc
push
lea
pop
in
or
add
in
arpl
add
inc
inc
or
pop
push
push
nop
cmp
test
daa
mov
adc
jl
sbb
dec
stos
(bad)
repz
popf
lahf
idiv
cmp
cmp
push
sub
leave
mov
cmps
test
fld
push
push
or
adc
cmps
sahf
mov
data16
sbb
jecxz
fidiv
sbb
cmp
push
pop
or
push
xchg
dec
mov
inc
fdivr
test
and
mov
call
repz
nop
lock
xchg
sub
sbb
inc
ret
sbb
jg
mov
sahf
xor
jmp
or
in
mov
add
xor
mov
push
imul
leave
and
mov
add
out
daa
sahf
cs
mov
in
mov
xchg
xchg
sbb
mov
daa
or
mov
mov
add
lock
dec
adc
cmp
pop
repnz
leave
cmps
fwait
cmp
ins
and
xor
cli
fisttp
retf
sbb
mov
sbb
adc
or
inc
push
sahf
push
xor
inc
pop
jle
loopne
lahf
out
mov
mov
sbb
adc
push
mov
retf
mov
test
mov
pop
push
fwait
mov
sub
jno
and
xor
mov
add
(bad)
es
pop
in
mov
xor
sti
mov
ret
rcr
mov
mov
jle
pop
add
mov
stc
or
movs
push
sbb
mov
push
or
inc
push
pusha
das
aas
fucomp
sbb
leave
and
das
ja
mov
push
(bad)
adc
stos
aaa
or
inc
dec
mov
add
shl
mov
pop
repnz
scas
movs
lock
(bad)
dec
push
jge
xchg
lea
sar
imul
out
mov
push
test
loopne
cmp
xor
or
sub
add
add
mov
mov
push
addr16
push
inc
sahf
es
add
popa
sbb
add
das
imul
ret
pop
push
mov
xor
es
mov
adc
cmps
inc
pop
xor
cmp
and
xchg
sbb
mov
mov
push
loope
sahf
inc
ficomp
and
lea
imul
mov
call
sub
jl
mov
push
push
movs
jnp
adc
add
sbb
mov
cmp
sbb
add
add
arpl
inc
mov
arpl
jl
dec
adc
cdq
jb
inc
loope
loope
popa
push
(bad)
cmp
pop
rcr
popf
sub
sbb
dec
popf
adc
xchg
xor
mov
jnp
nop
or
or
repnz
adc
xchg
adc
mov
cld
rcl
adc
mov
xor
lods
cmp
lea
jle
add
ror
jmp
lds
adc
imul
adc
lods
pop
ins
jl
cli
movs
(bad)
lock
mov
or
fisub
fstp
sbb
ficomp
sub
hlt
mov
mov
gs
sub
clc
push
test
movs
(bad)
icebp
jg
adc
jle
add
add
(bad)
jecxz
dec
cmp
popf
push
add
xchg
add
mov
dec
loopne
inc
mov
mov
rcl
movs
cmp
cmps
les
jl
and
push
lahf
loopne
lea
fcompp
jo
inc
aas
rcr
inc
stos
sbb
fs
popf
inc
jns
or
push
pushf
jl
jo
inc
xor
cmps
adc
adc
std
daa
lea
add
or
adc
cmc
into
mov
cmc
mov
or
pop
ret
pop
dec
mov
xor
cmps
push
pushf
test
mov
pop
push
cmp
stos
pop
adc
ja
movs
or
rol
adc
push
aas
push
std
jmp
jle
pop
mov
or
mov
mov
xor
repz
call
xor
out
shl
aaa
lds
pop
mov
sbb
push
and
push
add
inc
push
int
jg
mul
xchg
mov
pusha
add
std
or
daa
and
inc
add
push
inc
sub
call
mov
cmps
dec
addr16
sti
jae
rcl
push
les
or
jne
cld
xor
jns
lods
lahf
mov
sbb
cs
loop
nop
mov
dec
adc
in
push
jge
pop
and
jg
jns
(bad)
movs
inc
sub
pop
lock
pop
dec
cmp
or
call
outs
shr
stc
fld
jns
(bad)
inc
in
lods
push
ins
cdq
mov
imul
cmp
std
pop
jnp
push
enter
pop
in
mov
sub
scas
jbe
fist
cmps
and
mov
inc
mov
(bad)
daa
cmp
pop
mov
iret
test
mov
test
xor
mov
mov
iret
mov
push
sub
add
jbe
mov
sub
jl
mov
adc
xchg
sub
dec
or
mov
and
mov
inc
adc
jbe
push
cmp
lock
dec
sbb
or
imul
lahf
pop
inc
push
push
pop
scas
rcl
xor
ret
jge
add
jle
pop
outs
or
pop
add
inc
loopne
xchg
dec
and
(bad)
add
add
cmc
scas
sbb
sub
sbb
xchg
or
or
jg
cmc
pushf
mov
call
mov
mov
jg
fstp
push
or
add
scas
(bad)
pop
fiadd
xor
sub
xor
pushf
fwait
add
cmp
sbb
mov
jns
out
adc
and
fsubr
out
add
test
js
add
nop
sbb
xchg
(bad)
aas
es
adc
add
xchg
jp
dec
and
sar
mov
adc
out
adc
and
inc
jo
sub
mov
add
lock
mov
and
sub
dec
or
stos
cli
or
or
shl
push
test
std
mov
movs
dec
fstp
or
cmps
or
fdiv
jmp
out
pop
sbb
dec
fadd
mov
daa
mov
mov
push
retf
cld
in
stc
dec
bound
mov
inc
pop
jb
fist
push
push
call
std
outs
pop
adc
inc
test
and
(bad)
scas
mov
sub
sub
in
push
and
adc
cmp
add
fs
add
sbb
sbb
inc
(bad)
popf
sub
sub
cmp
mov
(bad)
(bad)
xor
inc
cdq
fnsave
enter
mov
mov
fdiv
push
add
in
push
test
push
arpl
mov
(bad)
push
out
xor
jg
push
int3
xchg
inc
push
shl
jno
fst
scas
ins
sub
in
call
adc
sbb
pop
and
or
add
or
call
jns
scas
lods
inc
pop
inc
lahf
sub
(bad)
ins
imul
xchg
ins
sbb
cmp
in
sub
add
test
jmp
and
push
cwde
push
jp
add
pusha
xor
inc
stos
daa
loopne
daa
fst
hlt
mov
adc
add
cmps
adc
bound
dec
xlat
mov
jecxz
and
stos
sub
je
xchg
push
add
sti
sbb
mov
sbb
loopne
add
in
xchg
sbb
inc
mov
into
out
dec
fsubr
adc
push
call
dec
packssdw
js
lea
xor
sbb
cmp
into
out
nop
aaa
test
shl
inc
sub
or
clc
adc
dec
add
popa
inc
cmp
cmp
and
mov
mov
repz
call
lea
xchg
int
jb
cld
test
ins
jmp
adc
aaa
xchg
pop
sbb
jmp
popa
add
test
push
add
shr
mov
cmp
pop
add
(bad)
rcl
add
push
push
add
push
or
push
add
add
jmp
cmps
push
add
jo
loope
cmp
aas
inc
sbb
scas
sti
(bad)
pushf
in
pop
mov
push
push
mov
push
jo
pop
sbb
pop
jl
fnstsw
inc
lods
retf
xchg
jmp
mov
test
cwde
dec
mov
nop
mov
or
xchg
(bad)
xchg
jbe
mov
xchg
(bad)
push
and
add
xchg
cmps
or
xor
push
and
pop
(bad)
sub
mov
pop
pop
sbb
cdq
add
and
cmps
(bad)
stc
add
pop
xchg
pop
bound
mov
pop
cmp
and
das
add
mov
je
cmp
outs
cmp
inc
xlat
inc
sbb
add
mov
pop
cdq
and
sti
add
les
dec
inc
dec
dec
cmp
(bad)
std
sbb
adc
dec
sbb
sbb
add
dec
add
sbb
pop
push
cmp
inc
or
adc
mov
ins
mov
sbb
fistp
lea
retf
(bad)
aaa
rcl
imul
shl
add
sub
fcomip
in
fwait
sub
jmp
sbb
in
jmp
jl
inc
movs
mov
aam
outs
adc
fld
and
push
push
or
add
or
retf
inc
(bad)
cmp
dec
and
jmp
fbstp
dec
adc
movs
adc
add
sub
sub
add
cwde
lods
add
dec
cli
cmp
cmp
aaa
dec
or
or
ror
movs
test
(bad)
sti
sub
push
or
inc
icebp
dec
mov
inc
js
shl
sub
mov
cli
sbb
fnsave
inc
adc
jmp
jl
cmp
aas
add
jb
mov
xchg
push
pop
jbe
cmp
push
adc
popa
jb
jbe
loop
in
xchg
cdq
int
rcl
les
or
push
jmp
mov
cmp
add
xchg
lods
mov
jmp
inc
inc
add
call
mov
loopne
aam
xchg
pusha
cli
xchg
mov
jl
add
inc
xlat
xchg
jno
mov
dec
retf
pop
pop
(bad)
mov
arpl
or
jle
and
add
pop
sbb
inc
jb
or
or
mov
mov
stos
or
ret
cs
mov
cmps
and
test
ins
gs
ss
mov
cli
jmp
sbb
adc
jne
mov
xchg
sub
push
or
add
push
leave
loop
popf
push
adc
jl
pop
test
push
cmps
jb
mov
aas
xor
out
and
ret
mov
add
push
shl
call
mov
and
(bad)
dec
icebp
sbb
aam
imul
and
mov
shr
or
or
xor
inc
xchg
js
repnz
inc
and
pop
add
ret
mov
mov
add
add
cmp
ret
ja
shl
mov
movs
je
pop
mov
jne
pop
or
xor
adc
and
in
test
sbb
iret
fwait
add
xchg
lock
sub
mov
dec
or
add
lods
test
cmc
repnz
push
enter
sbb
sub
out
and
loopne
stc
cs
sub
mov
shr
xchg
popa
push
ret
stos
dec
adc
sub
call
jne
out
cdq
add
hlt
pop
sub
fild
inc
pop
mov
cmp
and
or
and
sub
ins
mov
add
repnz
(bad)
out
pop
adc
or
dec
jb
call
dec
imul
inc
aam
shl
add
adc
sbb
hlt
cld
movs
pop
mov
cli
sbb
outs
inc
loope
test
mov
xchg
mov
xchg
cmp
inc
sub
retf
sbb
pusha
add
pop
push
pusha
add
xor
shl
stos
jbe
inc
mov
xchg
pop
adc
cmps
test
jg
iret
or
popf
lock
inc
pop
sbb
or
aaa
add
xchg
mov
mov
(bad)
adc
jae
push
sub
pop
ss
fs
out
push
or
aaa
xor
and
dec
sbb
jl
addr16
cs
cmps
fcomp
or
imul
jl
cmp
add
and
or
mov
push
jp
sbb
stos
gs
lea
jnp
nop
adc
sahf
push
out
pop
(bad)
out
mov
push
dec
pop
xchg
pop
add
js
enter
xor
add
lock
movs
scas
mov
and
nop
call
pop
sbb
pop
lea
mov
test
fisub
and
mov
mov
enter
cs
mov
ins
push
clc
push
call
adc
inc
mov
fsubr
leave
mov
add
pop
mov
push
inc
adc
pop
push
cld
sbb
and
es
or
mov
push
daa
mov
aam
pop
sub
enter
push
dec
sub
cmp
and
mov
push
mov
mov
movs
aaa
lods
add
pop
mov
or
mov
icebp
loope
fs
and
pop
scas
ins
sbb
cli
xor
loope
clc
and
call
in
pushf
xor
popa
nop
mov
mov
mov
or
jmp
adc
xchg
scas
and
inc
lock
jg
mov
inc
and
mov
jb
out
pop
jno
je
mov
push
or
adc
je
mov
fsubp
jmp
adc
lock
pop
cmp
sub
or
dec
test
scas
push
pop
and
or
push
dec
rep
movs
mov
and
arpl
(bad)
out
cld
test
pop
pusha
popa
repnz
jmp
test
test
xor
inc
int
mov
or
enter
sub
inc
rol
mov
xchg
out
push
cld
fbld
jae
sub
outs
lea
es
pop
cli
movs
sub
in
cmp
pushf
push
les
push
jle
sub
pop
into
inc
cmp
jne
push
ja
ror
pop
lock
jmp
xchg
cmp
xchg
and
xor
pop
xchg
jmp
rcl
push
movs
cld
arpl
cli
ds
daa
xlat
dec
or
cmp
push
sbb
inc
test
aas
or
inc
lds
jp
out
(bad)
xor
ds
ins
mov
ins
sbb
rol
add
cwde
jb
mov
jb
push
icebp
cld
shl
pop
outs
and
mov
jbe
add
cmp
call
add
inc
dec
mov
repnz
jns
pop
sub
arpl
mov
cwde
add
nop
div
xor
pop
fisub
sbb
je
jg
pop
mov
sar
or
push
ins
xor
add
dec
sbb
fisttp
test
repnz
sti
add
cmp
jns
add
aas
out
stc
pop
nop
push
or
in
(bad)
movs
popa
push
daa
and
xor
inc
jno
imul
mov
jle
cmp
xchg
clc
push
arpl
pop
push
lock
pop
retf
rep
push
or
sti
adc
imul
push
jle
push
ror
xchg
add
jge
pop
shl
push
inc
mov
jns
add
nop
add
inc
pop
push
xchg
repnz
sub
pop
adc
sti
sub
sar
push
neg
pop
sbb
pop
sbb
rcr
adc
rcl
add
sub
pop
pop
mov
mov
xor
imul
fdiv
push
push
call
icebp
dec
data16
mov
bound
and
adc
(bad)
lods
adc
xor
mov
test
mov
mov
je
cmp
dec
test
adc
and
xchg
pop
lea
pop
push
or
inc
mov
jmp
lea
mov
imul
inc
jne
sbb
inc
push
call
iret
adc
cmps
xor
mov
lock
and
mov
das
push
call
push
adc
lods
(bad)
in
clc
inc
sbb
leave
loopne
mov
sbb
pop
mov
mov
lahf
je
xchg
sbb
jmp
push
cmc
inc
adc
call
cmp
sbb
add
iret
adc
and
pop
ins
and
pop
dec
cmp
popa
bound
mov
popf
push
dec
adc
or
movs
mov
add
add
adc
mov
sub
push
dec
or
inc
jle
sbb
jmp
mov
and
and
mov
in
sub
mov
xchg
xchg
aam
dec
or
push
xlat
mov
shl
jmp
and
push
mov
adc
jmp
inc
inc
js
push
jo
enter
repnz
xor
jmp
pop
jbe
stc
js
outs
add
pop
jo
loope
mov
mov
aas
dec
xchg
rol
xor
clc
shl
leave
in
pop
pop
rol
push
push
int
mov
push
xor
push
xor
int3
and
and
or
xchg
popa
or
shl
and
ss
mov
and
or
retf
push
jp
push
shl
sbb
cmp
dec
adc
jo
js
ficomp
push
jo
mov
ins
or
and
inc
cmpps
sbb
sbb
fnstcw
popa
fisttp
cmp
(bad)
mul
add
jne
push
jle
jns
fcmove
xchg
mov
shl
(bad)
sahf
movs
push
ins
mov
pop
leave
xchg
dec
sub
jbe
xor
adc
cmp
push
add
push
jb
sar
xor
movs
dec
add
add
add
fild
fst
push
ins
sbb
or
mov
cmp
sub
mov
and
fs
lea
add
cmp
sub
out
inc
aam
dec
push
mov
add
or
sbb
jl
call
add
pusha
adc
jb
subps
out
shr
mov
(bad)
jp
or
jo
xchg
adc
push
hlt
jge
call
push
adc
jae
add
inc
retf
rol
aad
pop
fwait
adc
sbb
je
xor
sub
lods
adc
pop
and
daa
ins
sub
rcr
mov
xchg
and
sbb
pushf
jg
inc
adc
sti
stos
sub
mov
mov
(bad)
dec
(bad)
mov
jne
ror
mov
ficomp
lods
cs
cmp
inc
mov
call
ret
js
jne
out
or
cs
sbb
mov
push
or
mov
inc
es
(bad)
loop
test
arpl
jmp
or
fwait
je
sub
inc
and
inc
fimul
inc
cmp
adc
adc
movs
dec
cmc
cmp
inc
ja
aad
dec
and
xchg
lea
arpl
pop
fadd
loopne
cmps
push
sbb
xor
mov
mov
mov
jne
cmp
(bad)
jae
add
repz
and
sub
stos
mov
loop
ret
mov
jne
neg
dec
in
sub
and
outs
push
cmps
and
push
or
ret
push
mov
push
jle
xlat
inc
add
sbb
bnd
(bad)
jg
or
push
push
adc
or
pop
dec
loope
lock
xchg
pop
ret
shl
loopne
cli
xchg
clc
xchg
push
add
add
push
mov
sub
or
push
mov
dec
cld
adc
xor
das
jg
ss
nop
add
cmp
jne
add
lods
out
out
push
mov
cmps
cmp
data16
nop
cli
icebp
sub
and
(bad)
jbe
mov
aas
(bad)
or
ret
or
and
rol
add
mov
dec
jae
jne
add
lea
mov
add
add
shl
fadd
xlat
loop
and
aaa
and
adc
pop
and
pop
retf
or
add
out
inc
sahf
add
cld
sub
test
jb
adc
push
pushf
jl
sbb
inc
repz
lock
adc
add
adc
ret
dec
dec
and
mov
cs
jae
add
inc
mov
xor
loopne
pop
in
add
jo
xchg
jne
and
outs
hlt
mov
outs
sbb
and
jae
addr16
add
adc
ret
outs
push
adc
push
and
ror
add
jp
lea
or
pop
mov
ror
jg
inc
les
push
in
arpl
sbb
jl
inc
aad
leave
mov
or
and
or
iret
dec
mov
or
add
add
fsubr
dec
ins
aas
leave
and
add
jb
add
inc
add
mov
cmps
pop
lock
or
pop
mov
inc
jnp
adc
add
xchg
pushf
inc
sbb
clc
cmp
add
mov
in
push
push
push
xchg
xchg
cmps
add
sbb
add
or
pop
jno
jno
cmp
stos
daa
push
outs
xor
adc
dec
lock
inc
add
add
ror
and
and
adc
or
out
or
rol
cmp
cmp
or
jge
fimul
sub
push
cmp
push
mov
test
popf
(bad)
pop
mov
pop
retf
out
lea
and
fild
jb
mov
lods
mov
xchg
inc
ficom
inc
add
ja
ds
cli
fs
mov
ins
cld
outs
push
ret
clc
outs
pop
pusha
cli
fucomi
cmp
jle
dec
cmp
jg
cmp
data16
and
push
mov
push
ror
push
cmp
push
stos
push
jl
je
les
and
mov
and
aam
push
sub
dec
push
test
jg
jno
dec
scas
cmc
xor
mov
jno
mov
xor
dec
test
or
xor
xchg
jmp
call
sbb
or
les
adc
gs
jne
pop
dec
jecxz
mov
scas
cdq
dec
xor
js
jmp
mov
sbb
xor
dec
add
dec
lock
mov
sar
jns
xlat
sbb
adc
ins
pop
mov
mov
and
sub
sbb
add
jl
dec
inc
jl
outs
inc
push
mov
cmp
pop
cmp
ret
imul
add
cmp
push
add
inc
dec
and
push
jg
enter
sar
mov
test
push
or
inc
les
out
and
pop
mov
mov
stos
ins
popf
add
lods
adc
adc
inc
push
aam
pushf
shl
outs
fsubp
add
mov
cwde
dec
ror
sub
push
clc
sub
enter
ret
dec
sub
out
ror
sbb
or
pusha
ret
adc
jecxz
or
call
add
and
and
stc
das
jne
mov
inc
jl
cmp
lock
cmp
je
sbb
fbld
add
add
xor
sbb
dec
cmps
(bad)
fsub
add
add
push
lahf
mov
inc
mov
or
push
and
jne
or
add
jo
pop
push
dec
inc
fwait
jne
mov
mov
ror
push
mov
jmp
into
add
outs
fisttp
repnz
inc
xor
mov
jl
push
inc
dec
ja
or
inc
xchg
add
jns
cmp
dec
rol
pop
jl
clc
add
cmps
cmp
or
and
iret
and
jnp
push
and
jae
xchg
pop
pop
retf
push
jmp
jnp
add
inc
mov
les
adc
or
rol
mov
mov
xchg
pop
gs
xor
lahf
add
es
pop
sbb
adc
popa
nop
fcomp
mov
daa
outs
mov
sub
rol
pop
add
xor
jle
jmp
add
and
fdivr
jg
push
add
cdq
(bad)
sbb
fcom
or
lods
xor
jg
loopne
xchg
sbb
mov
mov
adc
cmp
enter
leave
xchg
jle
xchg
adc
(bad)
test
cwde
inc
pop
ret
pop
clc
add
(bad)
in
scas
or
cmp
cmp
sti
test
add
jp
or
test
lea
lea
inc
mov
inc
push
add
mov
and
push
push
jbe
add
or
sub
jns
push
adc
into
fcom
lock
add
xchg
and
sbb
sub
xchg
dec
sbb
push
pop
mov
inc
ss
arpl
add
jb
pop
(bad)
jmp
cmp
xchg
pop
sub
or
cmps
ins
mov
mov
lock
(bad)
jg
sbb
jne
jmp
retf
inc
pop
xchg
xchg
add
outs
rcpps
ds
cmp
jge
push
inc
cmp
mov
mov
sub
sbb
das
(bad)
in
ficom
push
stc
enter
cmp
jle
xchg
mov
outs
sahf
push
push
push
push
call
push
inc
test
pusha
(bad)
or
xchg
sub
ror
fadd
push
jmp
shr
rcl
rol
push
jmp
adc
test
mov
sub
pop
cmp
or
pop
or
adc
mov
jle
or
(bad)
mov
push
adc
pop
test
cmp
int
dec
popa
fdiv
jmp
push
inc
pop
xor
xor
(bad)
jecxz
lea
sub
xchg
inc
jmp
scas
adc
mov
mov
pop
aaa
mov
hlt
data16
clc
imul
jae
add
imul
cmp
stos
cmc
jno
es
sub
sub
lea
sub
ret
jae
adc
push
mov
mov
cwde
cli
pop
and
popa
jne
aaa
dec
inc
nop
test
adc
sbb
sbb
xchg
and
sbb
jecxz
sbb
push
ret
add
and
dec
clc
dec
cld
js
xchg
and
cli
es
call
adc
loopne
xor
cmp
jno
xchg
loope
inc
mov
std
out
dec
sub
push
jmp
fist
js
jnp
out
push
push
repnz
cmp
push
add
cmp
adc
test
lahf
pop
and
call
and
pop
test
outs
cs
fcom
mov
cmp
punpcklbw
jmp
mov
nop
test
pop
sbb
and
push
(bad)
cld
les
add
or
(bad)
retf
jmp
or
or
and
ss
adc
sub
leave
add
inc
adc
gs
repz
je
push
call
lahf
add
or
leave
cld
xor
into
stc
je
(bad)
mov
das
jecxz
ins
rcl
mov
xchg
and
nop
sub
sub
add
mov
fcomp
jmp
inc
jae
aam
(bad)
jnp
jmp
cwde
add
retf
es
or
nop
xor
sub
or
adc
mov
jb
repz
mov
imul
icebp
add
cmp
xlat
adc
lea
jno
inc
mov
jmp
pop
sub
and
cmp
xchg
popa
out
sbb
test
add
pop
movs
adc
and
aas
push
xor
test
je
adc
mov
push
and
imul
hlt
add
jae
rcr
add
mov
push
(bad)
and
pop
pop
ds
popa
dec
mov
test
fbld
dec
fyl2xp1
fidiv
jns
cld
dec
mov
sbb
adc
jb
add
fsub
push
push
fidivr
pop
add
adc
inc
stc
and
in
(bad)
dec
stc
and
cld
sbb
(bad)
jmp
repnz
sbb
iret
cld
xchg
es
dec
cwde
rol
call
and
jmp
xor
icebp
fst
or
dec
rcr
push
pop
ins
loopne
leave
mov
add
dec
add
sbb
repz
inc
cld
add
push
les
aam
dec
pop
shr
pop
jmp
and
cmp
pop
inc
jl
loopne
push
loop
iret
dec
cmps
or
jg
pop
rcl
fdiv
cmps
mov
and
(bad)
(bad)
pop
xchg
jle
ss
test
adc
add
dec
push
int3
fcmove
mov
adc
pop
sbb
dec
and
or
scas
mov
je
push
push
mov
mov
push
and
dec
cmps
adc
or
jmp
clc
dec
ret
mov
cmp
pop
xor
popf
mov
sub
ins
nop
into
ror
pop
pminsw
test
or
sub
sub
adc
outs
or
loopne
mov
das
or
test
lods
xchg
cmc
adc
sub
and
sbb
add
or
imul
jmp
add
jmp
add
xchg
xor
xchg
popf
or
aad
and
scas
pop
sbb
adc
push
rol
sbb
push
inc
mov
sbb
out
push
inc
add
add
xchg
popa
push
push
push
gs
xor
je
pop
test
xchg
pusha
loop
je
inc
push
xchg
ss
lea
push
ror
pop
and
psrld
mov
cld
sbb
pop
or
push
(bad)
retf
jge
cmp
call
or
ror
stos
dec
lods
repz
add
push
sbb
(bad)
adc
fucomi
arpl
bound
or
ins
rcr
sar
call
push
call
adc
sbb
jns
xchg
or
mov
aas
enter
add
jmp
and
fist
(bad)
rol
pop
or
rcl
and
or
jg
cwde
and
adc
int3
mov
or
adc
pusha
enter
pop
ja
mov
jns
mov
mov
in
jge
inc
rcl
retf
push
scas
mov
push
mov
xor
dec
pop
clc
mov
not
dec
push
sbb
xor
adc
jo
add
xor
or
and
add
add
xor
dec
adc
mov
push
rcl
or
pop
jno
je
cli
daa
sbb
lea
push
outs
test
(bad)
mov
dec
cdq
cmovb
adc
aas
push
add
bound
cmp
jle
or
das
mov
lods
push
out
cli
inc
add
and
sbb
sub
sub
mov
cmp
xor
pop
les
ror
cwde
mov
mov
lds
inc
imul
fist
mov
loopne
xor
and
push
shl
sbb
xchg
and
into
pop
add
aas
xchg
nop
in
adc
(bad)
inc
in
int3
cdq
dec
loopne
imul
(bad)
pop
rol
xor
clc
xor
pop
jne
arpl
and
push
fimul
add
mov
retf
fwait
push
je
ror
aaa
loope
mov
adc
sub
jl
or
jecxz
xchg
les
xchg
sub
into
scas
push
add
pop
jmp
repnz
dec
add
inc
loopne
into
or
add
adc
or
mov
test
dec
jge
push
push
push
aam
and
add
or
nop
mov
shl
fst
data16
mov
loope
lock
pop
or
(bad)
and
mov
adc
sub
mov
or
xchg
adc
clc
inc
xchg
cs
stos
sbb
test
ds
test
jl
sbb
(bad)
pop
jnp
jb
push
add
mov
sbb
in
shl
dec
push
add
stos
dec
imul
add
or
scas
mov
adc
(bad)
je
imul
jne
push
rcr
sub
cdq
sahf
cmps
ret
sub
push
or
add
mov
sti
leave
push
into
xor
popa
xchg
mov
out
pop
add
pop
dec
ret
sbb
test
mov
call
iret
add
dec
pop
sbb
mov
aaa
mov
pop
pop
pop
sahf
mov
fnstenv
bound
test
pop
daa
push
add
sub
push
(bad)
jmp
shr
jne
jle
psrld
add
scas
inc
pop
call
into
adc
xchg
pop
or
dec
loope
fdiv
jmp
sbb
lea
adc
add
dec
movs
push
xchg
and
cmps
int3
or
out
cmps
inc
mov
aas
dec
(bad)
rcl
mov
push
movs
jnp
and
pop
call
out
es
ja
mov
and
movs
adc
and
xor
or
xor
xchg
and
sahf
xchg
mov
inc
pusha
mov
add
ins
nop
clc
loopne
cmp
inc
sbb
push
fcom
inc
add
adc
mov
jmp
dec
xor
inc
(bad)
push
mov
inc
pop
push
mov
mov
mov
inc
inc
mov
adc
lea
mov
fldenv
in
sub
xor
repz
in
movs
repnz
push
movs
icebp
movs
icebp
arpl
xor
scas
and
pop
shl
arpl
out
scas
add
les
push
and
rol
pop
push
test
and
cmp
jne
or
add
clc
popf
mov
shl
pop
dec
jp
fdiv
jl
cmp
ins
add
movs
cmp
xor
cmp
in
jecxz
push
ja
aas
cmp
add
push
sbb
jnp
sbb
imul
aas
xor
je
pop
or
push
sbb
jmp
or
mov
push
es
cmp
sbb
sub
mov
cmp
(bad)
mov
mov
inc
jle
fwait
xlat
fs
or
out
je
jecxz
cmc
dec
inc
hlt
add
mov
mov
enter
sub
mov
jg
cld
(bad)
jb
call
push
ja
repnz
dec
sub
adc
push
in
imul
xor
sar
es
add
sbb
int3
int
retf
or
or
jmp
jnp
fnsave
pop
mov
cli
pop
xor
push
mov
das
push
xor
shl
adc
shl
jg
xor
push
jnp
or
jge
(bad)
push
sti
and
pop
jne
sub
or
fadd
pusha
or
nop
fnsave
nop
pusha
pop
push
and
xchg
ret
add
(bad)
xchg
fdivp
adc
push
pop
xchg
xchg
xor
jmp
jle
dec
call
and
imul
push
push
jg
xor
loopne
in
fidiv
cwde
mov
adc
or
xchg
or
add
push
dec
sub
jl
fcmovbe
inc
sbb
or
adc
scas
push
jae
adc
repz
imul
push
jecxz
lock
pop
adc
xchg
mov
cmp
aas
popa
loopne
push
mov
pop
add
test
in
js
cmp
or
dec
outs
add
inc
inc
xor
sbb
inc
push
into
inc
mov
je
or
sbb
gs
fbld
aad
xor
or
ins
push
es
mov
test
movs
ror
ss
sbb
stos
loope
dec
xchg
lea
and
shl
adc
dec
sbb
pop
enter
cwde
xchg
push
shr
adc
push
cmp
movs
cmp
jb
ins
pop
and
daa
xor
fdivr
sbb
or
cmp
add
inc
mov
add
cmp
stos
lods
cld
adc
aaa
call
js
pop
and
push
popf
enter
push
dec
ror
fiadd
fimul
dec
outs
mov
sar
scas
dec
inc
fs
sub
xchg
retf
or
daa
daa
mov
retf
nop
pushf
xchg
push
add
and
push
and
and
xor
iret
int
add
xor
xor
push
add
cs
jmp
(bad)
test
jmp
push
fist
inc
cs
bnd
and
jb
push
pop
leave
retf
or
inc
stos
out
fwait
inc
repz
push
or
adc
lahf
in
cmp
es
ss
scas
and
xchg
fmulp
add
sahf
scas
sbb
test
jb
outs
inc
dec
sqrtps
shl
mov
dec
rcr
dec
inc
mov
fstp
push
inc
sub
arpl
mov
sub
mov
xor
shr
fimul
clc
inc
mov
leave
push
or
inc
cmp
fs
imul
es
mov
push
in
push
call
push
sbb
dec
rcr
add
adc
add
and
cmp
ja
jne
xchg
lods
jl
sar
jb
pop
sub
jb
int
and
pop
or
pop
into
xchg
push
pop
add
jne
repz
pop
inc
inc
out
nop
inc
inc
mov
ret
pop
xor
dec
sub
push
inc
adc
mov
xchg
in
pop
jbe
and
arpl
inc
push
xchg
dec
cs
shl
sub
das
mov
add
dec
neg
mov
push
and
and
pop
clc
dec
(bad)
mov
dec
and
push
xchg
xchg
fs
rcl
and
xchg
retf
outs
jae
loopne
or
outs
mov
lds
inc
pop
inc
push
jb
in
aaa
mov
in
adc
mov
in
pop
push
gs
sahf
pop
fcomp
jb
in
sahf
clc
xor
mov
push
(bad)
call
jb
xchg
pop
sahf
test
xchg
xchg
retf
outs
xchg
and
js
inc
outs
mov
repnz
bound
repnz
retf
mov
jne
retf
ja
and
popf
pop
test
out
aaa
pop
push
cmp
inc
and
pop
push
jns
gs
mov
push
pop
and
mov
in
mov
pop
mov
push
lock
lods
pop
lock
daa
dec
sub
mov
test
add
pop
outs
neg
mov
and
pushf
pop
fdiv
mov
xchg
xchg
clc
jb
and
pop
push
je
scas
or
stc
jae
hlt
mov
xor
jl
adc
add
inc
mov
mov
(bad)
loope
adc
jne
test
popa
mov
xchg
mov
aas
ins
inc
(bad)
mov
fbstp
mov
add
add
sub
inc
or
cld
push
lods
push
pop
lods
cmps
call
cmp
sbb
mov
out
pop
dec
xchg
fwait
jmp
add
inc
jne
pop
mov
inc
inc
rcl
push
fwait
aaa
ins
pop
cwde
iret
sbb
push
sub
outs
ret
movs
iret
jg
dec
and
jo
push
or
(bad)
push
ds
xchg
cmp
shl
les
movs
pop
mov
imul
xchg
mov
out
dec
pop
cmp
and
push
push
(bad)
(bad)
pop
movs
xor
dec
fcom
dec
pop
mov
push
retf
xchg
inc
ret
scas
call
adc
add
push
xor
int3
and
add
adc
std
add
adc
sub
popf
or
out
pop
adc
mov
xor
pop
rcl
add
arpl
adc
mov
sbb
mov
(bad)
sub
push
sbb
shl
xchg
mov
(bad)
and
xor
pop
test
gs
sub
sbb
and
stos
(bad)
push
xchg
xchg
retf
pop
sbb
icebp
dec
adc
fnsave
push
cmp
jmp
add
test
push
out
push
push
cmps
clc
movs
imul
pop
inc
adc
mov
fmul
test
mov
mov
adc
(bad)
xchg
fidiv
mov
add
mov
jg
inc
ds
inc
jg
mov
(bad)
cwde
add
sub
stos
jo
jl
scas
stos
neg
xor
push
jbe
retf
cmp
in
dec
ret
add
jb
int
adc
out
mov
ror
cmp
mov
inc
or
popa
or
mul
adc
ins
or
pop
aad
test
cmps
sub
iret
push
mov
xchg
and
push
shl
nop
das
push
call
jle
jg
sbb
inc
dec
dec
jnp
int3
(bad)
les
add
nop
js
pop
cmps
mov
xor
lods
push
dec
clc
in
js
repnz
adc
(bad)
cmp
xor
and
jecxz
xchg
lods
sbb
dec
jbe
dec
inc
push
pop
push
cs
aad
(bad)
cmps
mov
or
test
sbb
xor
jmp
ins
jae
cmp
inc
push
inc
dec
add
add
mov
inc
pop
cmp
test
jg
(bad)
ss
and
fstp
pop
cmp
mov
pop
scas
jp
loope
jne
ret
outs
cmp
test
mov
and
and
fcomi
dec
cmps
mov
cli
pop
pop
sbb
cmp
ja
jmp
add
cmc
cmp
dec
cmp
bts
sbb
stos
pop
xchg
sbb
sub
popa
mov
xchg
movs
cmps
inc
(bad)
pusha
pusha
fld
sbb
fs
pop
es
prefetch
mov
int
xchg
jg
adc
clc
xchg
cld
int3
mov
inc
cs
dec
inc
or
shl
push
xchg
xor
lock
movs
push
adc
adc
pusha
mov
leave
enter
ja
jb
and
int3
pop
mov
mov
pop
adc
test
mov
push
lea
jnp
enter
adc
inc
adc
add
lahf
add
fld
xchg
pop
in
(bad)
shr
or
inc
add
push
sbb
xchg
retf
push
das
loopne
sbb
dec
cmp
pop
and
mov
xor
or
inc
xchg
jo
loopne
mov
mov
dec
push
call
fs
call
int
nop
inc
or
cmps
mov
adc
ins
add
xchg
mov
xchg
pop
push
cmp
inc
je
mov
or
mov
pop
dec
call
push
rol
add
imul
xchg
mov
cmp
push
mov
fs
js
inc
mov
jns
ret
pop
pop
lock
push
or
push
stos
cmp
jo
add
push
imul
rol
adc
jmp
movs
add
das
out
adc
dec
mov
(bad)
jmp
add
pop
fiadd
push
push
mov
cmp
jb
or
add
adc
ds
daa
sub
sahf
xor
add
shl
jg
cmc
inc
loopne
mov
das
repz
lods
mov
call
jg
push
inc
sub
pusha
push
adc
dec
adc
nop
pop
popf
loopne
add
fmulp
idiv
lods
out
push
(bad)
cmp
int
add
xor
sub
ficomp
inc
jle
test
mov
xchg
pop
ja
and
xchg
(bad)
icebp
sbb
lods
lahf
xchg
push
jne
cmp
mov
sbb
cmp
cdq
mov
and
retf
cmp
out
addr16
xor
mov
retf
(bad)
cmps
mov
test
xchg
(bad)
pusha
dec
mov
mov
cwde
cmps
mov
mov
rcl
cmp
fadd
sbb
inc
push
std
add
test
sbb
jne
sub
jmp
cmps
xor
enter
xchg
ins
push
inc
pusha
cmp
jbe
pop
lock
std
fbld
jbe
add
add
in
fisub
ret
push
retf
adc
pop
dec
fisub
mov
lea
dec
inc
push
adc
shl
cmp
cld
mov
repnz
jmp
inc
mov
lea
jo
sub
xchg
mov
add
fisttp
xchg
sub
push
rcr
sub
and
xchg
sbb
and
pop
add
call
int3
mov
push
test
out
xor
retf
jno
or
add
pop
and
add
sub
jecxz
hlt
in
out
ins
mov
and
lea
jmp
push
mov
mov
sbb
jno
mov
fnstcw
add
out
test
push
add
fild
add
mov
addps
std
clc
push
inc
imul
mov
es
jl
cmp
adc
ja
cmp
jmp
jle
inc
add
cmp
bound
xor
push
pop
sbb
loop
push
xchg
cmp
push
mov
es
lds
jecxz
push
sub
test
sub
mov
loopne
pop
shl
mov
push
scas
dec
dec
sbb
and
or
xchg
mov
xchg
pop
stc
adc
add
add
cmp
mov
lahf
push
enter
imul
js
add
adc
push
adc
sub
push
bnd
je
call
cld
int3
fwait
pop
adc
jb
adc
mov
xchg
pop
mov
cwde
add
xor
enter
stc
sub
ss
cld
push
popf
stc
(bad)
aad
mov
push
lea
dec
dec
repnz
inc
fiadd
sub
pushf
adc
mov
jne
fwait
or
and
outs
into
(bad)
idiv
jmp
or
sub
inc
fdivr
xor
cli
add
daa
icebp
lahf
test
dec
inc
jmp
mov
and
pop
dec
ficomp
shr
stc
adc
mov
stc
in
mov
and
adc
dec
fdivr
sub
inc
ror
push
or
adc
addr16
or
cmp
add
lock
add
pop
dec
call
dec
adc
fdivr
psubw
leave
add
arpl
mov
stos
jg
xor
pushf
jb
jno
clc
or
mov
add
push
rcl
js
mov
bound
shl
(bad)
in
jb
and
jmp
and
sbb
xchg
jp
(bad)
add
adc
dec
stc
add
fsubrp
xchg
ja
push
jns
push
jb
jae
inc
pushf
xchg
adc
push
push
push
jle
jle
adc
lods
sbb
jne
sbb
sbb
cli
imul
cmp
adc
pop
jle
dec
add
(bad)
cmp
inc
cmp
aam
jmp
dec
inc
dec
les
cld
jle
push
jp
pop
xchg
mov
and
sqrtps
xchg
mov
jno
dec
sub
loopne
dec
call
add
cmps
cmp
mov
mov
or
add
sahf
and
sbb
xchg
jle
stos
push
ret
add
or
lea
imul
xor
xor
dec
ins
movs
jae
aas
dec
std
inc
push
jns
inc
pusha
aaa
or
and
in
add
enter
jmp
lock
adc
pop
nop
push
xchg
jno
inc
add
xchg
xchg
sbb
xchg
dec
xor
nop
mov
cli
dec
adc
or
xor
push
repz
inc
mov
ds
cld
lods
or
adc
adc
sbb
adc
cld
push
es
nop
add
gs
or
(bad)
pop
aam
dec
test
mov
ret
retf
fld
cmp
sbb
aam
adc
add
lods
or
sbb
push
inc
cmp
jl
or
cmp
push
test
mov
mov
jl
sahf
ficom
lods
scas
mov
popa
sub
movs
gs
add
adc
cmp
sbb
mov
popf
or
xchg
push
sbb
ret
lods
push
cmc
xlat
mov
ins
ret
sub
gs
addr16
les
pop
or
in
mov
rcr
arpl
push
jae
push
push
cli
xor
dec
gs
adc
jle
xor
cmps
mov
jne
les
mov
pop
xlat
and
pusha
xor
outs
in
mov
xchg
dec
inc
lock
movs
jb
or
and
sar
dec
(bad)
sbb
pop
push
push
inc
loopne
push
pusha
cmc
adc
pusha
andps
xchg
js
push
mov
mov
gs
ja
ins
loopne
xchg
test
mov
jp
shl
enter
dec
pop
xchg
dec
outs
adc
inc
outs
push
xchg
(bad)
xor
mov
push
inc
repnz
frstor
pop
adc
jl
shl
or
test
cwde
sbb
daa
in
(bad)
mov
lods
or
(bad)
jne
xor
xchg
or
inc
mov
rcl
sub
sar
or
xchg
loope
mov
aas
leave
call
add
idiv
mov
adc
add
mov
xor
sbb
jno
fistp
rcr
imul
std
cmp
xor
test
cmps
jns
into
daa
test
test
jne
test
push
fld
adc
xchg
out
rcl
enter
xor
std
std
inc
jne
push
sbb
inc
sub
add
add
sar
push
push
into
sbb
dec
pusha
adc
ss
dec
ror
sub
add
ror
push
push
rcl
cmp
cmc
inc
(bad)
fwait
add
outs
pop
fs
pop
imul
push
ja
jmp
fcomp
add
mov
(bad)
shr
fild
(bad)
sub
(bad)
outs
ret
cmp
jmp
push
dec
rcr
push
scas
xor
ss
and
push
mov
in
pop
iret
pop
je
sar
dec
pop
push
adc
push
movs
dec
repz
icebp
lods
inc
push
and
inc
icebp
mov
movs
sbb
ret
in
mov
and
pop
mov
xor
jb
movs
rcl
xor
jmp
enter
(bad)
das
inc
adc
dec
mov
pushf
out
or
adc
mov
(bad)
jb
clc
cmp
pop
mov
sbb
imul
mov
jmp
push
in
aaa
(bad)
daa
into
ret
jmp
lods
in
adc
fimul
(bad)
sub
add
icebp
jbe
js
in
xchg
and
aas
sub
pusha
push
sub
mov
test
cmps
sbb
sbb
jmp
add
sbb
xabort
rol
pop
dec
xor
inc
cmps
xchg
mov
sub
fs
mov
jmp
cmp
pusha
dec
bound
test
adc
jg
mov
jg
and
lea
test
sbb
dec
iret
add
xchg
adc
or
outs
jg
fimul
retf
push
and
or
cmp
pop
inc
mov
mov
popf
gs
add
sbb
add
cld
(bad)
sub
and
fiadd
cmps
(bad)
cmp
das
inc
call
enter
and
or
scas
add
adc
or
or
leave
ret
shl
sahf
cmps
jnp
push
sub
leave
sub
out
add
mov
lock
popf
add
add
(bad)
stos
inc
mov
in
cwde
nop
sbb
lahf
nop
lahf
jo
retf
imul
sub
in
cli
sbb
add
cdq
imul
adc
sahf
retf
ins
xchg
and
push
push
rol
addr16
fdiv
cmp
push
ins
adc
xor
loopne
(bad)
aaa
je
mov
clc
sbb
dec
ficomp
push
add
int3
nop
mov
cmp
jg
test
jle
pop
test
and
or
add
xor
ds
push
or
pusha
or
or
add
retf
add
leave
test
jnp
pop
mov
ins
mov
aam
inc
add
and
mov
enter
in
(bad)
jnp
and
xor
sbb
add
xor
jmp
sub
mov
cmps
lds
test
sbb
cmp
inc
std
xor
push
mov
inc
sub
add
sysret
test
mov
sbb
xchg
inc
dec
pop
add
push
icebp
mov
call
push
ds
inc
pop
inc
std
push
sbb
lds
fiadd
sbb
jmp
push
pop
sub
call
adc
pop
jne
or
ficom
leave
(bad)
inc
mov
enter
cmc
inc
js
popa
fisttp
ins
sbb
inc
pop
mov
lock
ror
sub
call
mov
push
or
pop
lahf
imul
mov
loop
sbb
ret
or
add
lahf
push
sub
mov
push
fcom
mov
xor
mov
jne
jno
sahf
div
in
mov
lock
inc
xor
or
test
neg
sbb
xchg
dec
sbb
dec
add
jbe
sub
lods
inc
in
adc
xor
adc
or
adc
or
in
fsub
and
and
add
xchg
addr16
pop
cmp
popa
inc
mov
or
jl
mov
std
neg
jg
jmp
mov
add
inc
mov
(bad)
cmp
mov
scas
cmp
push
and
add
inc
adc
scas
jae
pop
aam
jmp
lahf
in
out
add
call
pop
sub
sbb
test
mov
push
sbb
pusha
adc
inc
retw
pop
jmp
add
mov
nop
jecxz
adc
jno
fisubr
pushf
add
cld
lea
imul
movs
and
or
add
lea
shr
fcomip
or
out
sbb
out
jmp
xor
(bad)
inc
ja
cmp
xor
and
dec
inc
retf
mov
ss
dec
add
(bad)
xor
xchg
ficom
or
add
xor
fstp
or
and
push
sahf
icebp
shl
dec
mov
mov
(bad)
pop
push
add
scas
cdq
(bad)
pop
dec
add
xor
pop
test
xor
cmp
test
movs
xlat
fadd
add
fs
or
inc
mov
js
ror
mov
add
in
pop
push
ss
xchg
inc
aam
das
add
aam
mov
clc
sti
fisttp
xchg
and
dec
jl
cld
inc
push
push
mov
aad
mov
push
das
jg
xchg
xor
test
push
sub
ins
xor
clc
dec
call
adc
mov
add
(bad)
ficom
loopne
sbb
or
jl
popf
xchg
push
inc
loop
in
popf
ror
adc
or
pusha
add
add
lods
int3
jle
sbb
out
jmp
xor
mov
je
push
aad
mov
jne
adc
and
je
in
jmp
test
ret
sbb
mov
mov
push
out
(bad)
retf
imul
mov
call
sub
pop
add
sbb
mov
call
jns
add
xor
cmp
call
imul
push
inc
in
mov
push
fprem1
mov
je
int
mov
add
adc
push
jo
mov
call
inc
ret
sbb
inc
cli
or
mov
rol
mov
mov
add
ss
dec
shr
popf
sbb
test
and
inc
push
cmp
mov
add
ss
pop
out
push
mov
sbb
mov
sahf
jl
jmp
(bad)
or
pop
jle
pop
inc
retf
fild
and
(bad)
daa
mov
inc
add
or
xor
mov
std
mov
iret
jge
xor
and
test
lea
mov
inc
cmp
(bad)
leave
xchg
sbb
mov
dec
mov
fadd
cmp
inc
gs
sbb
xchg
adc
jg
lods
fadd
fimul
fldenv
(bad)
inc
rcr
out
in
adc
scas
and
push
cwde
fistp
jbe
pop
outs
cmp
lahf
fadd
add
rol
adc
and
ja
jl
mov
or
pop
cmp
add
ror
and
ja
or
out
fmul
imul
nop
cmps
xor
pop
mov
inc
xchg
cmps
jg
jae
and
fs
sti
aas
add
or
cmp
repnz
and
pop
test
mov
cmp
in
jne
cmp
lds
cmp
xor
inc
dec
call
push
inc
addr16
push
pop
aas
sub
jo
xor
sub
lods
xor
cmp
add
sar
inc
test
into
add
jae
sbb
jno
test
mov
push
adc
xor
cmp
push
imul
dec
pop
fwait
jo
test
mov
inc
les
mov
mov
push
pop
push
es
sahf
adc
and
mov
inc
pop
push
fcomi
lods
(bad)
in
pop
pop
sbb
je
fcomp
lods
jg
jle
out
lock
xlat
into
and
dec
dec
mov
push
push
retf
pop
ds
sbb
dec
inc
mov
call
mov
mov
add
add
popa
leave
push
mov
call
jg
push
cmp
test
push
pop
xor
int
or
fcomp
hlt
sbb
call
sub
add
adc
or
jns
mov
pop
mov
addr16
push
or
(bad)
sbb
sub
xor
push
out
mov
loopne
sub
sub
mov
mov
xchg
and
outs
or
repz
jge
push
sbb
mov
test
jo
aam
hlt
inc
mov
ret
jae
and
adc
fmul
ret
loopne
hlt
cmp
test
adc
les
inc
enter
xor
bound
push
or
pushf
sbb
push
jb
rol
xchg
pop
aas
and
inc
push
xor
mov
test
bound
mov
mov
popa
xchg
mov
xchg
fld
rcr
and
jmp
jb
call
sbb
jmp
(bad)
lock
cmp
pushf
arpl
cld
sar
push
aam
dec
xor
setl
add
addr16
call
bound
jg
push
mov
in
mov
test
out
push
lods
mov
adc
mov
aas
adc
push
dec
fnstsw
inc
mov
add
or
call
call
test
mov
jae
jmp
push
sub
inc
push
dec
retf
mov
idiv
xchg
or
sub
dec
imul
shl
push
xor
rcl
sub
add
repz
pop
mov
and
ror
and
hlt
add
dec
sbb
adc
mov
sbb
adc
push
sbb
sti
repnz
sbb
push
fstp
pop
test
cmps
mov
add
arpl
push
cmp
or
xor
out
inc
add
call
mov
mov
dec
bound
xor
and
adc
mov
add
dec
test
fimul
in
or
mov
sbb
rol
push
loopne
or
out
jle
loop
jmp
inc
(bad)
dec
adc
jle
mov
push
jno
pushf
dec
jns
or
or
mov
mov
dec
inc
cmp
inc
(bad)
jg
dec
je
inc
rcl
add
push
es
popa
mov
sbb
sar
sbb
and
bound
fadd
sahf
rcr
cmp
mov
cmp
jae
leave
sbb
test
jle
adc
xor
inc
shl
jp
jle
out
sub
pop
popw
cli
adc
push
add
or
adc
sub
or
mov
push
push
mov
nop
jo
inc
aas
test
mov
and
cmc
jno
call
add
mov
or
push
or
out
sub
pop
pop
fisttp
mov
int
mov
inc
add
and
and
push
sahf
clc
(bad)
mov
(bad)
pop
cmp
inc
mov
ja
sub
xor
test
cmp
xchg
sub
repz
(bad)
ins
sbb
xlat
and
aas
ja
fadd
cmp
cmp
inc
inc
sbb
jecxz
leave
pop
xchg
bound
adc
clc
mov
and
xor
or
adc
mov
sbb
cmp
adc
ds
je
mov
jp
add
sub
sbb
inc
fnstsw
aam
jge
enter
jne
stc
pusha
nop
inc
dec
cli
loope
inc
xchg
daa
pop
push
lea
fidiv
xor
pop
mov
add
cmp
and
mov
or
pop
xlat
and
sar
popa
(bad)
xchg
or
js
jne
mov
retf
or
je
pop
jg
push
(bad)
imul
test
add
into
cmp
inc
xor
dec
add
pop
(bad)
cmp
push
or
inc
add
ret
aam
neg
push
adc
pop
sub
pop
ficomp
sbb
xchg
dec
mov
bound
lods
clc
movs
addr16
in
jo
enter
mov
fs
arpl
dec
cmp
call
jp
mov
push
sar
adc
rcl
imul
rcl
ds
cmp
adc
movs
xor
inc
jge
jl
push
nop
pop
xchg
inc
mov
rol
push
mov
push
shl
rcr
jmp
imul
jg
sub
popf
mov
inc
cmp
imul
add
test
jne
mov
and
add
xor
js
in
jnp
push
iret
mov
xor
inc
sbb
es
nop
xchg
pop
push
mov
mov
das
mov
mov
pop
mov
and
mov
sbb
das
sub
and
sbb
sbb
lea
aas
xor
and
inc
push
aad
mov
adc
pop
fs
push
int3
test
sbb
ret
scas
push
dec
mov
xchg
lods
shr
in
xor
dec
add
cmp
jg
xor
push
cs
or
stos
mov
dec
cmp
and
xor
mov
push
and
ror
enter
out
shl
(bad)
push
push
push
in
push
pop
shl
js
rol
jle
xlat
jae
xor
jmp
(bad)
in
je
mov
cmp
and
add
retf
or
loop
push
jae
pop
pop
sbb
dec
mov
setb
push
arpl
enter
or
(bad)
stc
dec
inc
psubusb
xchg
adc
add
or
adc
in
and
mov
shl
les
jge
icebp
out
mov
sub
sub
ds
popa
mov
(bad)
stc
hlt
nop
bound
dec
ret
jmp
test
or
mov
arpl
imul
dec
xchg
inc
add
xchg
(bad)
call
int
adc
cmp
adc
cld
mov
sbb
mov
das
sbb
or
shl
mov
ret
test
xor
add
and
out
sub
and
mov
jno
and
lahf
mov
xor
loopne
push
inc
add
push
leave
and
ds
mov
sahf
and
sub
(bad)
mov
ret
push
scas
shr
jbe
cmps
sub
mov
data16
lock
jmp
popa
ss
sub
sbb
adc
push
or
gs
pop
push
out
and
and
inc
push
add
out
jnp
and
jo
xchg
out
cmp
(bad)
sahf
push
(bad)
and
fwait
push
inc
adc
cmp
inc
(bad)
je
les
jle
sbb
sbb
mov
(bad)
or
(bad)
ss
std
ror
push
push
add
iret
pop
inc
cld
mov
xor
add
sub
pop
retf
(bad)
push
fadd
adc
and
in
push
cmp
push
in
adc
pop
adc
pop
mov
movs
rol
and
into
inc
dec
mov
inc
sbb
xor
daa
push
xchg
add
aas
inc
shl
jne
sub
pop
add
arpl
pusha
xor
inc
inc
push
dec
aaa
sub
aas
and
add
push
mov
fld
iret
adc
movs
pop
xchg
stos
out
lahf
icebp
add
(bad)
(bad)
or
lahf
and
push
or
mov
mov
add
push
test
adc
or
and
sub
test
mov
or
adc
and
cmp
inc
std
mov
imul
pop
inc
sbb
(bad)
push
jbe
cmp
and
cdq
cmp
xor
inc
jp
pop
call
ds
dec
lods
jns
inc
test
push
fsubr
push
aam
sbb
push
in
or
cmps
cld
ins
out
call
fnstsw
rcl
add
stc
in
call
mov
push
add
push
das
sbb
sub
mov
pop
lods
scas
fadd
mov
xor
adc
sub
movs
jnp
jle
or
shr
adc
lds
sub
fcom
adc
add
push
or
int
add
sub
mov
outs
xor
jnp
addr16
js
(bad)
aad
fcmovu
xchg
pop
push
call
fcomp
jne
lahf
sbb
cmp
xchg
push
or
sbb
add
xchg
lahf
push
cmp
dec
inc
mov
je
xchg
retf
dec
dec
aaa
js
sar
push
jge
pop
loop
adc
mov
sub
or
in
and
out
and
add
dec
and
pop
fsubr
add
and
movs
push
sub
xchg
ins
pusha
movs
lods
mov
int
mov
fldcw
mov
sbb
dec
fisttp
das
add
pop
push
scas
lods
inc
mov
mov
push
aad
xor
shl
sbb
(bad)
push
call
jne
pusha
test
mov
mov
and
mov
or
xchg
push
xor
jmp
pusha
loopne
adc
je
sub
mov
xchg
sbb
pop
add
retf
push
or
xchg
(bad)
stos
xchg
push
and
push
sbb
and
dec
or
mov
mov
and
adc
sbb
(bad)
rol
in
stc
mov
dec
and
sub
loope
jl
push
call
and
push
in
test
sub
mov
ss
sub
jne
cld
imul
gs
add
dec
cwde
lahf
xchg
in
lahf
or
xchg
cdq
push
mov
loop
push
inc
xchg
add
int
adc
add
rcr
xor
sub
pop
sub
and
inc
fsubr
cmp
call
lods
out
inc
or
push
and
test
mov
add
repnz
pop
arpl
adc
stos
mov
sub
add
movs
jmp
cmp
and
cmp
lods
sbb
inc
push
xchg
inc
ds
push
xor
add
adc
popa
stc
es
pushf
aad
rol
into
pusha
leave
jl
mov
add
or
mov
xchg
pop
rol
mov
in
test
out
cmp
lea
in
fisubr
and
ror
je
xor
loopne
(bad)
popf
es
lods
add
loop
push
cmp
push
call
arpl
jp
mov
ss
popf
jno
aas
in
fwait
xchg
mov
popa
in
mov
outs
xchg
dec
sub
pop
mov
or
push
mov
test
push
shl
sbb
add
dec
fdiv
add
sbb
ins
sbb
cmps
cld
aaa
or
jo
pushf
push
fist
ds
std
arpl
mov
ss
out
jg
sbb
mov
stos
cwde
cmp
pop
ins
sbb
in
sbb
push
push
sti
jg
call
aad
and
iret
jge
in
aaa
cwde
movs
dec
sub
dec
shl
jmp
test
mov
push
add
arpl
ret
outs
mov
out
add
fwait
pop
fnstenv
add
test
fld
mov
cs
test
add
jne
cmp
pop
adc
dec
retf
or
ins
push
movs
hlt
and
test
sub
add
cmovns
xor
or
sbb
cmp
jne
inc
adc
push
shl
xor
dec
add
sbb
aaa
shl
pop
inc
scas
and
aas
inc
jno
das
inc
sar
xchg
out
add
and
lahf
sub
push
add
pop
pusha
aas
adc
dec
cmp
jbe
mov
clc
dec
sub
shr
sbb
fscale
jge
inc
inc
add
add
jo
add
test
iret
cmp
js
lahf
sbb
loopne
bnd
jl
cmp
frstor
dec
mov
loopne
jne
dec
sbb
push
or
and
lock
xchg
scas
and
sub
or
lock
ret
xor
pop
stos
add
movs
ins
mov
in
dec
movs
mov
retf
mov
fbld
add
mov
enter
push
js
xchg
ret
push
(bad)
(bad)
jge
shl
pop
push
lods
sub
mov
and
jbe
mov
jecxz
je
xor
jge
sub
test
add
adc
add
mov
push
lea
mov
cmp
dec
fbstp
cld
adc
call
cld
jle
jne
and
jg
push
les
imul
aas
add
outs
add
adc
cmc
fdiv
add
xor
xchg
and
inc
ss
inc
in
adc
and
or
jl
movs
lahf
inc
bound
(bad)
lods
pop
mov
lahf
and
sbb
xor
inc
imul
sar
ror
pop
jno
pop
test
mov
lods
pop
sub
inc
call
aaa
mov
bound
jge
js
loopne
js
iret
inc
jge
or
adc
call
neg
sub
sub
loope
xchg
std
sub
adc
push
inc
sbb
xor
mov
mov
je
sub
and
out
dec
pop
push
cmp
xor
push
pop
pop
sbb
jg
jmp
mov
fistp
or
or
cmps
dec
ret
jp
popa
imul
call
cmps
jnp
test
xor
adc
aas
movs
pop
xor
push
cli
fxch
jmp
pop
cmp
pushf
cs
sub
sub
xor
shr
and
loop
call
inc
(bad)
iret
push
inc
dec
(bad)
sub
push
(bad)
lods
adc
ficom
push
jno
add
dec
jp
retf
ja
out
cmp
push
or
nop
mov
leave
and
dec
sub
cmc
dec
mov
adc
ror
outs
add
sub
or
sub
pop
lds
adc
or
cmp
sbb
mov
loope
add
mov
push
pop
inc
sbb
xor
adc
dec
xlat
outs
add
pusha
push
inc
pusha
pop
sub
les
and
mov
arpl
cmp
loopne
jmp
loopne
comiss
daa
jne
pop
xchg
cmp
lea
push
sub
inc
jmp
test
jb
cwde
clc
adc
sub
or
cli
cmp
add
imul
repz
dec
sub
clc
daa
xor
and
mov
adc
inc
adc
and
out
(bad)
not
int
inc
pop
inc
sub
pop
push
sbb
and
les
xchg
sbb
xor
xchg
push
call
cwde
and
xor
pop
sub
push
lds
dec
call
inc
movs
xchg
cmp
mov
cmps
movs
fdivr
inc
je
js
push
bound
sbb
in
cs
mov
fistp
push
cmp
int3
mov
xor
in
add
cmp
add
and
jle
xchg
pop
add
mov
lea
mov
push
mov
cmps
ret
cli
sbb
mov
add
(bad)
out
jg
add
(bad)
mov
sete
call
shl
(bad)
jmp
sub
cli
xor
push
xchg
push
jge
fdivr
pop
div
aam
cmp
stc
and
push
and
mov
lock
arpl
mov
inc
(bad)
push
cmp
call
adc
push
mov
mov
push
ins
lahf
in
movs
hlt
jl
push
dec
pop
jmp
scas
jmp
data16
mov
xor
sbb
sub
in
dec
push
push
and
and
push
xor
jae
aad
jne
pop
dec
iret
out
add
call
jo
mov
xor
int3
scas
mov
push
jecxz
shl
pop
sbb
jbe
dec
and
je
ficomp
cs
cld
adc
scas
mov
dec
aam
daa
dec
stos
cmp
xlat
(bad)
push
push
push
and
mov
inc
popa
inc
mov
dec
or
mov
(bad)
pop
ret
pop
es
call
dec
inc
cmps
mov
fild
fs
pop
and
or
jno
das
test
lahf
push
retf
jo
loopne
test
addr16
ret
ret
jae
ret
xor
mov
and
imul
mov
adc
push
int3
push
les
and
add
adc
int
rcr
cmps
push
retf
loope
add
pop
fild
icebp
jle
test
ror
js
and
inc
enter
dec
ret
xchg
mov
cmp
stos
test
test
das
add
fmul
cmp
push
lea
pop
mul
je
jae
push
ret
jg
jl
es
ins
push
je
xor
ror
ror
sbb
inc
mov
das
sbb
fimul
movs
pop
push
scas
mov
push
dec
ss
xor
retf
cmps
shr
aam
jmp
push
inc
sbb
fisttp
repnz
loopne
add
mov
xchg
or
mov
xor
add
je
sub
or
jns
mov
add
and
sub
rol
mov
(bad)
fild
ja
cmps
mov
push
mov
adc
xchg
sub
ret
jnp
or
test
xchg
cmp
xor
pop
lods
or
pop
daa
add
inc
or
sub
or
lahf
test
inc
pop
push
sbb
bound
push
sub
std
dec
or
out
data16
retf
shl
jo
xchg
int
je
push
std
push
add
dec
mov
cvtdq2ps
jbe
nop
cwde
aas
adc
sub
xchg
cmp
jle
adc
or
jg
daa
push
shl
call
fwait
repnz
add
test
fistp
cmp
jg
pop
or
es
add
sub
adc
xchg
out
and
cmp
imul
adc
aas
mov
xchg
mov
push
dec
sbb
sub
test
stos
cmc
push
out
mov
ficomp
push
jmp
push
jb
std
cmp
or
call
jmp
or
retf
cdq
pop
imul
pop
rcl
push
or
test
leave
repz
or
scas
inc
fdiv
sub
mov
std
sub
int
sbb
aaa
movs
inc
repz
inc
inc
jmp
pop
pop
adc
add
imul
inc
cld
test
xor
pop
xlat
lea
movs
outs
lods
lods
add
sub
pop
or
and
or
push
inc
mov
xchg
push
adc
fsubrp
fimul
cmp
enter
mov
enter
add
mov
mov
ret
movs
add
les
movs
sbb
inc
loopne
outs
test
push
dec
jmp
and
xchg
mov
jae
mov
test
mov
push
xor
xor
cmps
nop
rol
adc
aad
pop
enter
cmp
nop
(bad)
cmp
retf
pushf
out
test
sub
push
ror
or
dec
lahf
or
dec
fwait
sub
push
popa
ret
push
xchg
jp
test
mov
pop
mov
ffreep
adc
push
shr
mov
and
add
and
popf
mov
popa
mov
(bad)
out
add
daa
shl
inc
retf
test
sahf
pop
inc
inc
adc
jmp
mov
jmp
ret
push
clc
mov
add
arpl
and
and
or
mov
lods
jb
mov
sti
test
pop
fcmovnu
pop
adc
adc
jne
dec
add
aas
ins
and
sub
cmp
or
ds
dec
(bad)
mov
test
and
push
inc
or
nop
outs
jnp
popa
retf
int3
jno
pop
mov
test
aas
pop
es
clc
cld
adc
cmp
inc
pop
add
cdq
add
dec
mov
stos
ins
pop
cld
dec
mov
imul
rol
sti
arpl
jne
sbb
bound
sub
add
pop
ins
mov
leave
dec
test
lods
sub
arpl
mov
mov
inc
sub
or
push
pop
mov
ja
std
cld
loopne
adc
pop
push
xchg
inc
cld
sub
not
js
pop
popa
dec
push
jb
jg
cmp
jg
adc
jb
xchg
ret
mov
cmp
dec
xor
push
outs
sbb
mov
ss
mov
pushf
push
stos
dec
(bad)
or
sub
pop
ss
dec
ror
test
push
pop
or
push
loop
lds
cmp
adc
or
call
pop
dec
dec
and
mov
ret
jl
inc
div
pop
(bad)
add
and
call
xchg
jnp
mov
mov
arpl
les
push
push
sub
push
fisubr
push
push
bound
or
pusha
push
xchg
add
aam
and
adc
sub
pop
stos
sbb
pop
sahf
mov
inc
sub
sub
push
bound
aas
(bad)
mov
push
cmp
push
inc
ins
or
lods
xor
int3
pusha
add
or
sbb
pop
mov
jae
add
loopne
mov
push
push
scas
iret
or
out
adc
mov
adc
mov
inc
das
sbb
and
jecxz
inc
enter
les
dec
pusha
mov
cmc
stc
pop
cld
or
out
mov
sbb
bound
mov
fbstp
inc
ror
adc
xchg
or
jge
aad
adc
jb
add
adc
sbb
cmc
add
ins
xchg
cs
pusha
fnsave
pusha
dec
pop
sbb
in
xchg
and
lock
cmp
addr16
sbb
(bad)
hlt
jb
fucomip
jecxz
push
inc
or
out
xchg
aam
mov
adc
mov
jmp
pop
fs
sbb
repz
or
stc
div
push
lock
dec
sti
repnz
dec
push
or
jg
sbb
iret
addr16
test
push
fisubr
mov
add
nop
call
sbb
add
retf
adc
(bad)
push
dec
aad
out
and
push
inc
ins
and
fwait
push
(bad)
xor
xor
xchg
push
outs
test
inc
adc
sbb
imul
jne
mov
stc
push
dec
or
xchg
popa
outs
cmp
sbb
jmp
xor
and
sub
pop
jp
cmovns
retf
std
inc
mov
fcomip
mov
test
push
int3
aas
jo
jmp
dec
fistp
cld
cmp
int
and
add
rcl
aam
gs
div
out
cmp
jno
out
enter
ja
pusha
jmp
in
mov
inc
in
xor
push
aas
push
out
adc
retf
adc
xlat
dec
and
push
test
inc
mov
mov
jb
inc
imul
nop
xchg
pop
inc
shl
in
jl
ds
loopne
and
dec
jo
cmp
in
call
ds
pop
les
cmp
jae
sub
or
stos
daa
aam
ret
push
dec
movs
jge
xchg
and
lods
jl
xchg
sbb
sar
or
adc
fwait
and
lock
(bad)
add
push
fs
popa
ja
or
icebp
push
mov
jno
push
es
push
or
and
(bad)
lds
sbb
xor
les
push
mov
fndisi(8087
gs
xor
outs
mov
daa
scas
push
movs
pop
inc
shl
pop
mov
mov
add
adc
jbe
xchg
and
je
pusha
inc
pop
movs
jmp
cmp
sub
xchg
sti
xchg
scas
icebp
inc
adc
pop
in
js
into
and
outs
jecxz
push
jo
nop
pop
scas
push
cmp
xor
mov
jp
leave
mov
aaa
sbb
xor
pusha
rol
call
jo
and
sub
pop
leave
retf
repz
mov
ucomiss
call
gs
cmp
leave
fwait
clc
fs
(bad)
and
aam
and
add
rcr
pop
mov
pop
daa
push
stos
push
xor
add
xchg
xchg
rcr
into
add
and
inc
call
jg
push
enter
mov
adc
add
add
sbb
(bad)
or
test
test
and
sbb
adc
pop
and
or
dec
sub
rcr
es
sbb
dec
sub
jp
jo
in
adc
sub
xor
mov
cmps
xor
popa
aas
lods
or
call
mov
xlat
add
movs
(bad)
pusha
pop
enter
add
jg
lock
and
leave
adc
dec
in
test
mov
cmps
or
xchg
test
or
xor
sti
inc
pop
and
push
mov
das
test
xor
push
add
xchg
lock
and
sub
std
xor
adc
cmp
inc
loope
jne
inc
and
leave
outs
daa
mov
and
adc
pusha
or
sub
push
mov
push
push
in
fsubr
xor
adc
cmp
pop
adc
dec
xlat
mov
xlat
or
ins
and
mov
and
outs
mov
pop
retf
dec
repz
sar
or
sbb
cmp
mov
mov
sub
pusha
popa
jbe
cli
out
add
dec
jo
(bad)
inc
inc
adc
loopne
and
in
mov
jmp
rol
pop
and
jl
push
icebp
or
or
inc
jmp
add
mov
mov
call
mov
jle
nop
xchg
dec
aam
sbb
nop
inc
cs
retf
test
and
ret
imul
add
sbb
mov
add
adc
mov
adc
stos
mov
xchg
mov
xchg
cld
dec
inc
clc
dec
adc
mov
xchg
pusha
add
nop
sbb
inc
jnp
cmps
popa
mov
rol
and
adc
data16
aaa
add
inc
or
(bad)
cld
xchg
fs
push
rcl
adc
ins
daa
dec
mov
push
jle
xor
dec
loop
mov
add
xor
add
cmps
mov
jns
and
push
add
push
lea
popa
fnstsw
xchg
mov
dec
inc
push
pusha
loopne
mov
jge
mov
cmps
pop
mov
sbb
popa
add
(bad)
(bad)
cld
rol
inc
lds
push
xor
ret
inc
add
push
mov
jo
sub
hlt
mov
movs
mov
xchg
rcr
sti
mov
xchg
mov
mov
loope
cmp
hlt
xor
rcl
imul
ret
xchg
sahf
rcr
xchg
icebp
sbb
daa
inc
repnz
xchg
jne
jmp
mov
xchg
inc
sub
and
loope
cmp
clc
xchg
adc
adc
or
leave
push
mov
xchg
xchg
mov
int
jno
popa
imul
sub
call
cmp
popa
xchg
xchg
(bad)
call
dec
sub
sar
cmp
ret
adc
sub
push
adc
js
mov
ds
int
pop
push
sub
shl
rcl
and
xor
arpl
ds
jle
add
cmps
jp
sub
scas
sahf
mov
in
ss
or
mov
ds
cmp
or
xchg
mov
stc
sub
xor
push
jo
sbb
lods
ret
and
imul
ss
imul
dec
addr16
add
xlat
inc
fcom
mov
enter
dec
mov
push
hlt
cli
jb
ins
mov
pop
test
push
or
lahf
push
mov
mov
int3
push
je
shr
jg
sbb
adc
fcomp
fcomp
mov
out
loop
adc
dec
lahf
fdivr
adc
mov
and
pop
adc
xchg
xchg
sub
jmp
sub
call
pop
ds
and
lods
push
dec
add
ret
jnp
add
dec
pop
lahf
adc
jmp
mov
repz
adc
sbb
sbb
pop
mov
mov
xchg
int
xor
sar
dec
cld
fdiv
xchg
push
loopne
rol
inc
add
jbe
(bad)
aam
fcmovnbe
or
mov
or
cmps
(bad)
cmc
adc
mov
fsub
sbb
mov
pop
mov
shl
add
outs
xchg
mov
push
test
gs
fiadd
sbb
cmp
mov
and
dec
jmp
inc
pop
popa
stc
pop
sbb
push
inc
ret
push
push
mul
pop
adc
pop
mov
fmul
cmp
daa
pop
js
push
push
sbb
push
test
(bad)
bound
mul
dec
std
mov
add
(bad)
jg
xchg
(bad)
xchg
pop
shl
or
or
or
outs
dec
loopne
add
fimul
adc
js
mov
popa
pop
dec
pop
or
xchg
inc
jg
push
das
push
arpl
mov
call
jno
inc
mov
lods
popa
or
adc
jge
adc
adc
mov
(bad)
fisttp
loopne
loop
mov
das
and
aaa
and
loope
idiv
loope
and
adc
test
add
(bad)
cmc
push
addr16
push
adc
xchg
jl
inc
addr16
inc
cmps
or
pop
adc
jae
sub
shl
adc
shl
fild
adc
pop
pop
push
push
in
jle
test
xchg
adc
movs
js
ds
(bad)
pop
mov
pop
sub
scas
loop
sub
xchg
js
add
and
lods
inc
adc
push
pop
mov
test
or
mov
scas
lds
pop
xor
pop
dec
loop
arpl
cmp
push
arpl
pop
setle
sub
add
xor
add
mov
fnsave
(bad)
jl
mov
ret
xchg
call
lods
call
dec
xchg
iret
sub
repnz
jb
rcr
mov
and
cs
or
xchg
jge
push
sahf
sub
and
push
cli
sub
mov
sub
push
or
mov
stc
shld
jg
push
inc
mov
cld
aam
stc
push
mov
mov
sbb
in
js
cmp
or
inc
ins
jg
inc
repnz
repz
cdq
jbe
pop
mov
inc
or
adc
sbb
lods
sahf
imul
pop
adc
sahf
mov
(bad)
std
iret
push
je
leave
out
xchg
xor
std
xor
or
imul
push
sbb
xchg
jbe
cmps
adc
and
and
push
ret
push
jge
pop
jbe
or
pop
aad
adc
in
ret
jg
dec
ror
inc
cs
scas
inc
or
std
enter
mov
inc
pop
dec
repz
adc
jb
push
fs
aaa
and
fsub
xchg
sti
push
mov
cmp
fimul
mov
sub
ins
and
cmp
and
bound
jg
fs
add
cmps
or
popa
cld
add
and
pop
sub
fcmovbe
cmc
psrad
or
inc
add
mov
cmp
mov
test
add
(bad)
sti
mov
sub
arpl
test
pop
rcr
sti
push
mov
movs
add
retf
call
jle
push
add
push
icebp
jb
pop
jne
push
mov
mov
test
rcl
ror
jg
add
popa
or
mov
sub
call
jne
xchg
jmp
add
rcl
jae
rol
pop
adc
jae
sub
dec
leave
xor
out
out
xor
pop
into
sub
sbb
fwait
adc
std
cmp
in
push
and
adc
sub
fiadd
test
mov
xor
push
mov
xor
frstor
mov
mov
fldcw
pop
or
sbb
cmps
aad
jecxz
cmp
or
retf
popa
pop
out
gs
inc
and
(bad)
(bad)
cmp
xchg
add
out
stc
cdq
jge
or
aam
jmp
imul
lea
mov
jns
loopne
xor
cmp
daa
mov
xor
adc
pop
std
jmp
or
inc
ret
push
pop
xor
or
jo
mov
mov
pop
hlt
in
mov
sub
cmc
inc
mov
cmovp
in
jb
sbb
lods
sub
in
xor
sbb
icebp
dec
cmps
push
or
pop
test
(bad)
jne
mov
cmp
out
sbb
movsx
push
sub
sub
mov
pop
cvtdq2ps
dec
aam
xchg
jp
gs
das
call
mov
je
int3
add
nop
sahf
ficom
js
add
inc
xlat
push
sbb
push
loopne
mov
xor
inc
mov
add
or
xchg
xchg
push
cmps
loope
xchg
push
test
pop
stos
or
inc
test
push
inc
popa
adc
mov
(bad)
push
mov
pop
ret
(bad)
mov
mov
pop
or
shl
call
pushf
jp
jnp
xlat
data16
enter
xor
gs
cmp
bound
and
stc
call
inc
adc
mov
(bad)
adc
adc
rcr
cwde
cs
repz
push
(bad)
push
test
add
or
xor
sti
inc
dec
mov
push
xchg
cmps
lahf
cli
cmp
mov
fild
cmps
push
call
adc
(bad)
fcom
lea
std
(bad)
cmp
sbb
cmp
xor
leave
cmp
in
cmps
(bad)
mov
ins
and
xchg
inc
jmp
push
and
std
or
nop
dec
sar
xchg
dec
or
sub
jmp
stos
in
inc
sar
icebp
and
push
mov
sub
rcl
inc
mov
in
shl
ret
sbb
stos
lods
fldenv
jg
push
call
adc
mov
rol
adc
pop
outs
jnp
xchg
int
xor
mov
es
test
jo
(bad)
cmp
sahf
std
les
add
movs
cmovno
mov
aam
icebp
fsubr
sbb
daa
call
mov
add
js
push
clc
mov
jne
ds
fadd
mov
and
adc
fadd
jg
pop
push
icebp
push
call
xchg
xor
rcr
ret
test
xchg
cld
sbb
sbb
scas
fimul
add
sub
cld
or
and
push
push
xchg
xchg
sbb
mov
cld
adc
mov
jne
add
add
dec
cmps
or
add
leave
mov
pop
lahf
bound
sub
mov
lea
sbb
lahf
adc
adc
add
shr
inc
fbld
xchg
rdpmc
inc
in
jmp
leave
retf
add
gs
and
pusha
sbb
adc
pop
ror
mov
mov
ins
ret
mov
icebp
push
mov
sub
adc
jg
cmp
sar
lea
aas
xchg
mov
push
xor
rol
je
pop
jb
adc
sbb
push
xchg
xchg
ss
pop
cmp
push
mov
xor
mov
jne
mov
push
jb
lock
and
adc
xchg
and
inc
sub
rol
cmp
dec
jne
aam
adc
sub
je
loop
scas
and
push
cmp
push
jb
push
test
es
mov
mov
push
xor
jmp
add
inc
xchg
mul
or
mov
push
mov
ret
ret
mov
ins
mov
sub
test
or
jae
or
ins
nop
pop
xchg
into
je
call
and
add
xor
leave
jo
adc
cmp
add
pop
mov
xchg
into
lahf
add
in
test
(bad)
jp
add
outs
loope
jge
or
pop
fild
add
rcr
push
push
xor
inc
mov
sub
jo
adc
adc
cmp
sub
out
cmp
pop
or
mov
jl
rol
sbb
and
push
mov
push
pop
shl
gs
sub
push
sbb
add
push
fwait
or
xchg
pop
mov
add
ficom
ror
dec
inc
test
sbb
je
and
rol
lahf
or
loope
das
mov
and
dec
mov
ss
pusha
add
ficomp
les
sti
and
push
jl
cmp
test
dec
imul
outs
sub
xchg
and
test
idiv
sbb
mov
dec
lea
cwde
jb
adc
loop
or
cli
xchg
xor
sub
pop
push
adc
inc
xchg
shl
and
or
repnz
in
in
mov
rol
ret
jge
xor
lds
in
pop
fdiv
add
nop
dec
inc
call
ja
and
sbb
mov
jne
mov
ror
push
and
adc
pop
sub
pop
call
mov
and
clc
mov
inc
in
inc
imul
sbb
mov
push
cmc
outs
push
cmp
sbb
xor
movs
xchg
mov
push
inc
fcmovb
pop
pop
int
push
test
sub
inc
jmp
inc
push
pop
jmp
into
fsubr
add
dec
and
out
add
add
nop
push
jl
imul
in
jno
sub
sbb
lea
inc
test
mov
mov
add
inc
xchg
sbb
rcr
or
pop
(bad)
data16
dec
adc
cmps
aam
jbe
retf
mov
and
mov
retf
bound
sar
arpl
xchg
xor
mov
inc
or
push
add
push
inc
mov
iret
sbb
dec
stc
mov
inc
jp
jnp
lods
jb
popa
mov
test
xchg
or
loop
jae
and
push
icebp
jo
add
aas
fidivr
pop
jbe
and
je
bound
inc
lods
call
dec
inc
cmp
lea
sbb
sbb
inc
je
repnz
mov
pop
xlat
gs
sbb
add
jl
ror
inc
pop
lahf
addr16
jmp
xchg
sub
or
jecxz
cli
adc
lock
fimul
outs
mov
dec
adc
scas
inc
retf
jno
and
idiv
fadd
inc
arpl
cmc
outs
xor
or
adc
adc
sti
imul
and
dec
pop
inc
test
lds
jno
xchg
(bad)
mov
or
add
arpl
inc
(bad)
and
daa
mov
fstp
(bad)
daa
scas
adc
in
or
fstp
or
fstp
and
repz
call
dec
pusha
dec
push
adc
ds
push
call
rcr
inc
add
and
adc
ja
add
sub
ret
mov
or
jbe
add
rcl
sbb
and
adc
push
jg
push
add
xchg
add
inc
sbb
das
pop
mov
push
sub
jle
mov
jae
test
lahf
adc
cmp
push
imul
cmp
xor
inc
call
and
xchg
adc
xchg
or
fisttp
mov
push
lods
bnd
movs
into
lahf
or
sub
jmp
fmul
addr16
lock
adc
sbb
push
in
(bad)
sub
lds
cmp
test
repnz
jnp
fstp
push
in
pop
lods
and
push
and
ins
sahf
retf
push
cmp
adc
lea
(bad)
and
mov
or
lahf
into
sub
pusha
iret
call
fild
xor
leave
add
je
sbb
pop
ins
ret
dec
sbb
adc
loope
mov
in
xchg
adc
dec
mov
mov
out
jno
and
or
loop
dec
pop
sbb
jg
add
push
lods
(bad)
mov
pop
lea
ja
test
shl
stos
les
mov
inc
push
mov
jae
push
sbb
mov
(bad)
adc
pusha
cmp
adc
mov
adc
jo
mov
cmp
ja
pop
loopne
pop
pop
cli
pop
pop
lea
dec
aam
add
lock
int
push
ins
sub
test
stc
inc
adc
jmp
add
pop
imul
cmp
push
sbb
(bad)
sub
sub
mov
inc
es
pusha
and
mov
sub
push
or
push
xor
cmp
pop
sbb
(bad)
lock
cmps
mov
dec
cmc
(bad)
fimul
sbb
xor
push
sbb
movs
mov
sbb
ficom
mov
fild
dec
(bad)
mov
bound
dec
or
add
push
push
jns
lea
sub
adc
and
push
add
mov
xchg
inc
pushf
dec
or
sbb
inc
ds
add
xchg
or
inc
mov
inc
inc
inc
cs
lea
hlt
pop
dec
dec
int
or
mov
ror
xchg
dec
xor
dec
sub
mov
pop
popf
or
scas
bound
mov
pop
cmp
mov
pop
mov
add
nop
mov
add
out
jns
icebp
daa
pop
popf
push
pop
add
inc
rcr
mov
sbb
adc
xchg
adc
out
(bad)
adc
fild
push
pop
jmp
xchg
in
xchg
xlat
xor
pop
sbb
add
jo
in
add
add
pop
mov
aam
cmp
cs
test
mov
bound
or
and
sar
in
jmp
sar
lea
rol
xchg
push
icebp
and
je
pushf
test
mov
fild
pop
mov
stc
daa
rcl
push
push
call
xchg
pop
data16
js
and
add
push
call
enter
jo
fwait
js
cmc
das
xlat
(bad)
movs
or
xchg
(bad)
dec
sar
push
push
or
xor
jg
inc
mov
mov
push
mov
lock
adc
lock
mov
xor
ss
mov
add
push
jns
or
push
call
fld
jo
xcrypt-cbc
cmps
adc
inc
sub
ret
jno
mov
push
or
mov
sbb
rcl
mov
(bad)
mov
add
sbb
es
ret
scas
inc
int
xchg
mov
call
cmp
jmp
sub
shl
cmps
mov
pop
fist
xor
sbb
int
neg
jle
and
scas
inc
dec
dec
ror
pop
pop
sbb
sub
rcr
xor
xchg
jg
mov
add
mov
movs
movs
or
f2xm1
(bad)
movs
xor
jge
mov
push
inc
jp
pushf
pusha
jmp
ret
pop
mov
xor
xor
in
pop
sub
cld
ins
cmp
ret
gs
jl
ret
(bad)
mov
fwait
or
inc
arpl
mov
jmp
test
mov
jb
add
and
cmps
ds
xchg
jl
mov
dec
xchg
xchg
sbb
inc
call
jo
loope
rcl
movs
pop
je
inc
jl
jmp
jb
ficom
jne
cmp
xchg
jle
ret
into
mov
sub
push
(bad)
(bad)
or
ss
xor
call
sar
push
adc
test
mov
push
fs
sub
fsub
cmp
(bad)
xor
icebp
pop
in
sbb
call
add
clc
cmp
and
adc
cwde
xor
movs
in
sub
cmp
dec
aas
add
jmp
xchg
retf
dec
nop
sub
les
pop
ja
shl
cmp
test
in
adc
pop
rol
or
fimul
inc
xchg
cmp
je
ins
call
out
push
push
rcr
fistp
pushf
push
or
pop
popa
or
ja
sbb
dec
sub
jne
xchg
mov
adc
and
lahf
add
mov
inc
mov
fldcw
mov
aad
stc
mov
daa
imul
vphsubbw
mov
pop
enter
in
xor
inc
stos
test
loope
rcr
jp
push
dec
pusha
or
sub
dec
inc
jl
jo
fs
add
adc
sar
in
sar
leave
xchg
outs
data16
neg
popa
jge
lea
ds
xchg
popf
jle
push
in
lea
mov
arpl
adc
add
pop
adc
mov
inc
dec
xchg
in
icebp
call
cmp
sub
add
je
imul
std
ss
icebp
xor
push
add
xor
cmc
sbb
and
adc
add
add
retf
jp
sbb
jbe
out
xor
test
push
ins
shr
mov
or
adc
lock
adc
mov
add
popa
cmp
push
jl
ins
arpl
pop
repz
push
movs
adc
out
retf
xchg
mov
push
das
mov
call
rcr
fiadd
push
ja
adc
scas
fiadd
clc
cmp
push
inc
dec
js
or
mov
pop
sub
shl
aaa
and
inc
(bad)
dec
out
add
es
push
xchg
pop
das
pop
jle
sbb
xor
test
cmp
or
xchg
pusha
ret
shl
inc
cmp
je
xchg
adc
add
imul
push
lea
cmp
push
inc
push
cmp
jne
and
ss
xchg
call
add
ret
add
and
jle
push
mov
push
xor
jb
pop
adc
push
adc
test
enter
push
sub
pop
add
pop
ror
xor
add
inc
pop
push
ss
fistp
fisttp
cmp
popa
pcmpeqw
jo
cdq
scas
mov
dec
sbb
and
cdq
pop
dec
xchg
cmps
push
xor
ror
and
lock
imul
rol
std
jge
test
pop
sub
and
arpl
mov
jne
sub
adc
out
daa
mov
mov
test
js
jne
push
clc
dec
popa
dec
or
or
test
ror
pushf
call
xchg
add
in
ja
pop
(bad)
cmps
mov
pusha
and
test
and
xor
pop
mov
enter
mov
cmp
out
imul
leave
add
bnd
and
fabs
or
jae
mov
out
cmps
or
pop
jne
sub
repz
es
mov
out
mov
pop
and
push
cmp
or
jb
loopne
jmp
push
and
dec
dec
outs
push
xchg
inc
add
add
inc
pop
cdq
mov
inc
ja
imul
mov
dec
adc
scas
mov
inc
add
dec
pop
dec
ins
nop
sub
ror
mov
les
ins
inc
push
jmp
jns
inc
fisub
outs
push
push
inc
lock
xor
aam
fwait
sbb
pushf
mov
sub
ror
jns
sbb
fst
outs
test
mov
mov
(bad)
sahf
jns
jmp
push
mov
je
cmps
je
adc
mov
pop
jmp
(bad)
push
jo
add
mov
shr
adc
mov
mov
cs
xor
sub
jmp
pushf
fcmovnbe
inc
and
loop
push
mov
test
movs
cmp
ja
dec
xchg
push
inc
xlat
push
outs
inc
xchg
aaa
xor
or
sbb
xor
cmp
shr
push
cmps
cmp
push
clc
mov
in
push
inc
xor
daa
inc
ret
xchg
aas
stos
call
inc
sbb
push
stos
pop
cmp
mov
or
mov
mov
sbb
xor
sbb
or
add
pop
jmp
sbb
ret
daa
sbb
and
pop
sbb
xor
jmp
and
jb
pop
aam
test
mov
(bad)
iret
push
mov
daa
and
shr
push
sbb
jns
xchg
inc
sub
retf
and
out
jnp
pop
adc
inc
fcom
push
add
cmps
inc
inc
in
cmp
in
clc
add
add
jns
ror
test
sbb
test
sbb
das
pop
icebp
ins
sbb
jl
ret
mov
inc
xor
adc
stc
inc
add
cli
adc
push
or
cmp
push
icebp
sahf
jmp
sti
jg
dec
in
repnz
add
inc
je
and
lahf
cmps
push
jg
cld
add
sbb
cld
dec
test
push
pop
(bad)
out
repnz
inc
inc
fimul
push
aaa
push
mov
inc
xchg
jb
mov
(bad)
sti
pop
cmp
sbb
xor
sbb
pop
mov
push
and
cmp
imul
scas
fbld
scas
ss
pop
jle
(bad)
stc
or
fs
std
(bad)
rol
cwde
push
xchg
inc
or
retf
leave
in
(bad)
pop
(bad)
pop
push
push
jmp
xchg
retf
mov
leave
cbw
lahf
aam
dec
sub
call
mov
aas
std
sbb
in
les
pop
clc
sar
mov
jns
add
retf
lds
test
in
push
mov
xor
xchg
pop
sub
and
adc
pop
mov
mov
inc
push
push
call
or
or
repnz
call
and
pushf
std
scas
pop
js
movs
and
jbe
in
and
test
(bad)
jmp
and
and
add
popa
in
pop
fcomi
xchg
nop
sub
or
or
jp
sub
sti
cmc
xchg
data16
or
cdq
icebp
dec
push
add
jge
sbb
or
std
sbb
popf
imul
sti
es
and
push
call
dec
pop
jecxz
test
fisttp
pop
jl
sbb
inc
imul
ret
mov
pop
retf
and
call
cmps
cmp
bound
add
outs
daa
lock
rol
sbb
add
cmp
pop
push
pop
lahf
inc
ja
(bad)
mov
push
inc
sbb
jae
pop
push
cmp
or
inc
dec
sub
ret
push
inc
mul
mov
test
dec
sub
and
and
outs
cld
(bad)
jmp
adc
add
adc
jge
mov
int3
(bad)
push
or
lock
xchg
inc
inc
out
mov
cmp
lea
pop
add
jno
push
pop
xchg
sar
mov
mov
loope
addr16
sub
xchg
cwde
sbb
outs
shr
js
adc
imul
mov
sar
sbb
add
xor
fs
add
adc
add
das
add
xor
adc
inc
leave
dec
outs
pop
aam
aas
push
loope
inc
ficom
imul
ja
mov
adc
xchg
jle
lds
mov
sub
adc
shl
jbe
pop
mov
enter
or
sub
or
iret
or
inc
in
in
adc
or
fisub
or
jp
mov
test
sbb
dec
or
xor
cmp
or
ds
sbb
(bad)
mov
and
push
inc
xor
add
sub
loop
movs
push
push
xchg
aaa
loopne
call
add
push
mul
dec
jno
neg
inc
xor
inc
and
out
test
aaa
jo
fs
jb
adc
xlat
test
or
fidiv
imul
sub
hlt
dec
or
inc
and
or
pop
mov
mov
or
aas
test
jo
add
sub
xor
sub
stc
and
or
test
sti
push
xor
push
int
sbb
fnstenv
jl
movs
sub
xor
jb
jmp
add
mov
mov
xor
cmp
scas
vpsubq
les
mov
mov
icebp
add
pop
and
cmp
xchg
call
or
dec
pop
movs
fild
iret
mov
in
rcl
and
imul
pop
or
or
nop
inc
mov
call
mov
(bad)
cmps
fs
sub
js
test
cmp
int
xchg
mov
push
inc
sahf
out
sahf
xor
and
pop
test
jns
xor
adc
adc
and
push
cmp
mov
shl
jbe
adc
ds
out
xchg
add
mov
push
cmp
adc
jne
jo
mov
arpl
mov
call
add
push
pusha
iret
cld
js
dec
mov
or
js
mov
mov
add
pop
inc
or
inc
inc
jno
or
jb
xchg
inc
sbb
pop
in
addr16
pusha
inc
imul
inc
(bad)
mov
or
or
mov
cmp
jge
(bad)
ror
js
dec
clc
ins
mov
test
mov
call
mov
repnz
pop
shr
frstor
pop
add
jbe
push
stos
dec
inc
ret
js
sar
adc
adc
and
ret
lahf
jae
jmp
xor
push
cmp
add
add
sahf
out
data16
test
cmps
call
inc
in
lods
and
sub
call
outs
inc
int
push
das
adc
mov
jecxz
arpl
add
and
xor
push
mov
and
retf
dec
xor
rcl
out
mov
test
(bad)
or
xchg
add
jg
sub
sub
shl
dec
iret
cmp
push
adc
pusha
mov
or
aas
js
push
or
scas
mov
push
jmp
inc
shl
or
pop
dec
jmp
cmp
in
retf
cmp
cmps
repnz
adc
cmp
icebp
out
dec
popa
ds
add
cmp
add
fnsave
mov
add
push
test
lea
dec
jl
fdivr
cli
adc
add
test
dec
inc
jbe
mov
jo
and
add
dec
xor
cmp
xor
pop
and
repnz
cwde
mov
(bad)
out
lods
aaa
sbb
mov
dec
std
call
dec
(bad)
jle
mov
ds
cmp
call
loope
sbb
das
pop
call
sub
sbb
or
xchg
add
xchg
test
frndint
adc
jmp
mov
(bad)
xlat
cmp
jae
test
cmp
div
shl
xchg
add
sbb
fcomp
imul
jp
fs
scas
in
jae
inc
mov
stos
sahf
icebp
out
jno
sub
inc
push
imul
mov
dec
retf
js
cmp
push
push
ja
push
cs
push
push
push
call
cwde
es
inc
push
mov
movs
push
cld
dec
ret
aas
add
jnp
add
lock
sbb
and
out
fcomp
adc
pop
cmp
pop
inc
jmp
push
sar
or
sbb
sub
inc
test
sub
or
mov
ret
(bad)
(bad)
push
dec
jne
(bad)
jmp
jns
cmp
cmp
sti
out
iret
lea
fs
sbb
xchg
jne
gs
xchg
xor
dec
push
push
lock
call
dec
rcl
adc
test
dec
cli
add
inc
jbe
mov
cdq
sub
test
push
mov
xor
mov
and
jle
cmp
push
xor
outs
fidiv
outs
add
fdiv
xchg
push
pop
lock
pop
push
push
push
rol
stos
add
clc
cmp
fild
outs
ret
nop
in
pop
das
pop
mov
out
push
add
inc
arpl
shl
sbb
or
jle
jo
push
imul
test
push
(bad)
lds
shr
fst
add
add
movs
jbe
xor
(bad)
loopne
ss
test
cdq
pop
xchg
aam
scas
mov
ds
mov
cs
or
arpl
jb
or
popa
jo
movs
je
pop
pop
mov
and
pop
test
push
inc
sub
mov
mov
sub
jl
push
cmps
outs
stos
push
push
mov
xlat
inc
ins
add
sbb
add
pop
adc
dec
push
lahf
rol
or
(bad)
cmp
xchg
mov
pop
mov
jo
cmps
adc
ror
add
add
jmp
into
xor
lahf
add
mov
mov
inc
push
or
(bad)
outs
xchg
call
movs
dec
sbb
push
jge
mov
loope
pop
js
rcr
mov
ss
dec
and
test
jae
xchg
(bad)
sbb
mov
jns
into
adc
jo
add
cmp
jmp
mov
ret
push
aad
scas
aad
add
and
dec
fs
aam
out
push
push
mov
retf
jno
and
jnp
and
(bad)
and
imul
inc
dec
push
or
jo
jne
leave
jae
push
popa
dec
sub
dec
xor
fadd
and
jmp
push
xor
pushf
push
adc
sub
pusha
dec
ret
icebp
xchg
inc
addr16
sar
aas
or
fimul
pop
dec
jns
call
jno
cdq
cmps
enter
sub
lods
jne
rol
push
popa
into
add
and
push
inc
sub
ror
fcomp
aas
add
xor
and
adc
mov
sbb
out
test
(bad)
or
enter
jmp
xchg
pop
cmp
clc
or
and
cmp
aaa
jae
das
in
ret
jae
sbb
or
test
jne
loope
(bad)
pop
cmp
xor
cs
call
push
lea
or
add
pop
push
adc
jle
dec
lahf
shl
jle
call
mov
xor
and
add
(bad)
cmp
mov
pop
cmp
pusha
pop
sub
imul
push
aas
fdiv
pop
or
je
dec
lock
add
sahf
cmp
dec
(bad)
xor
xor
sbb
imul
push
add
and
jne
lods
and
inc
pop
or
daa
jge
adc
add
nop
adc
(bad)
cwde
mov
fdiv
lahf
nop
add
in
inc
cld
inc
cmc
jnp
repz
mov
cmp
jb
cmp
rol
fiadd
sub
and
push
or
(bad)
cli
in
and
add
xchg
or
mov
lods
popf
bound
mov
jecxz
lods
in
jns
ja
cmps
add
jno
mov
inc
or
mov
or
inc
(bad)
mov
stc
cli
bound
jne
cs
out
xchg
add
es
and
jmp
add
mov
stos
rol
(bad)
xlat
into
ins
push
mov
cmp
arpl
mov
bound
cmp
xchg
and
repz
ja
mov
call
inc
xchg
fwait
cmc
loopne
bnd
xor
push
push
inc
mov
lock
je
jecxz
retf
inc
add
cwde
sub
pushf
dec
pop
add
push
call
dec
rol
sbb
add
jge
(bad)
xchg
aaa
push
call
es
sbb
test
pushf
test
pusha
ret
adc
push
ins
sar
stos
mov
push
jno
push
mov
mov
push
(bad)
adc
jecxz
pop
xlat
adc
sub
adc
mov
or
rcr
call
mov
aad
clc
mov
sub
or
out
push
enter
inc
mov
jne
mov
xchg
mov
dec
mov
cmp
(bad)
xchg
mov
pop
popa
sbb
xor
push
mov
emms
xor
movs
add
inc
mov
push
inc
dec
call
call
and
sub
out
add
or
fmul
xchg
jo
movs
int
je
sub
out
pop
adc
adc
and
ret
push
dec
pusha
sahf
sbb
jo
jle
push
sub
retf
mov
aad
xchg
mov
data16
and
sub
cs
in
mov
pushf
and
test
sbb
sbb
nop
fs
cld
adc
(bad)
pop
ror
bound
push
jle
out
je
cmp
(bad)
jge
sub
ja
adc
call
imul
cmp
pop
pop
js
jmp
mov
inc
xor
inc
push
adc
push
xor
push
xchg
imul
push
cs
aam
or
xchg
add
aaa
dec
sbb
pop
std
adc
rol
push
and
popf
add
mov
rol
xor
xchg
adc
push
call
mov
dec
dec
mov
adc
jle
sub
test
push
xchg
sub
or
rol
mov
or
jg
and
imul
les
(bad)
mov
ss
add
adc
add
rol
sbb
cld
pop
call
mov
sub
pusha
popa
or
adc
add
shl
test
inc
xor
cmps
push
jnp
retf
leave
sbb
cmp
in
sub
ja
sbb
lods
xchg
std
inc
or
add
pop
into
push
pop
mov
fldenv
adc
lods
daa
movs
jo
mov
inc
ret
sub
(bad)
outs
xlat
add
retf
shl
xor
scas
add
add
retf
jmp
add
cli
sub
scas
pushf
xor
pop
setno
dec
sub
cmps
lods
popa
jne
out
mov
inc
adc
or
fwait
stos
inc
fcom
aaa
pop
add
pusha
jecxz
mov
outs
or
xor
push
adc
fadd
sub
sub
inc
call
mov
rcl
jge
pusha
sub
pop
(bad)
mov
push
pop
pop
leave
push
(bad)
adc
sub
sub
(bad)
jo
cli
or
neg
jo
and
mov
push
sbb
sbb
call
je
lea
push
pop
pop
daa
popa
and
inc
push
push
inc
dec
sbb
sbb
xchg
daa
or
and
sub
add
cmp
dec
mov
adc
mov
adc
sub
jbe
sahf
shl
push
movs
nop
ins
xchg
lock
or
and
inc
hlt
dec
push
mov
lss
test
push
jp
add
inc
cld
push
mov
xor
je
push
dec
mov
push
jmp
xchg
int
cmp
xchg
pushw
addr16
inc
cmp
int
pop
sbb
int
pop
or
(bad)
jecxz
sbb
repz
cli
test
addr16
test
fistp
jg
test
push
iret
aas
pop
mov
add
xor
pusha
inc
pop
dec
loop
es
leave
mov
xor
inc
dec
inc
sub
add
es
add
retf
jp
mov
mov
mov
mov
push
call
adc
outs
hlt
add
sahf
mov
pop
movs
mov
sti
push
shl
movs
shl
xchg
or
cld
cmps
je
or
pop
(bad)
or
sub
or
mov
leave
aas
xchg
movs
movs
sahf
xor
bound
cdq
dec
and
inc
xchg
pop
sbb
rol
xchg
xor
outs
sahf
mov
push
mov
rol
sbb
jl
xor
jnp
test
or
jl
and
movsx
push
add
push
pop
dec
mov
and
mov
push
mov
imul
add
js
arpl
jge
cmp
(bad)
dec
sub
fmul
jne
sbb
add
sub
cdq
or
sti
or
clc
sub
dec
or
inc
out
push
nop
fcomp
jo
sub
xor
in
sbb
or
test
or
push
xchg
jo
mov
and
lock
mov
and
fistp
or
dec
pop
mov
adc
push
rol
add
pop
test
pop
or
dec
and
jns
stos
mov
das
imul
in
inc
repz
jmp
or
cdq
or
push
xor
pop
push
(bad)
aas
xchg
shl
ret
daa
dec
pop
fdivr
xor
loop
or
lahf
adc
or
adc
cmp
int3
and
mov
pop
and
call
mov
jb
lods
dec
les
mov
pop
mov
dec
mov
jle
mov
aaa
pop
sahf
bound
mov
je
dec
cmp
pop
adc
fwait
jo
aaa
adc
sbb
mov
js
outs
adc
mov
xchg
outs
jmp
inc
(bad)
or
bound
cmp
jb
jne
cmp
jg
wrmsr
sbb
push
push
push
call
or
out
and
test
add
out
cmc
pop
je
xor
inc
jl
lock
loope
jg
push
call
sub
mov
int
mov
cmp
mov
fiadd
lea
cmp
push
jo
or
pop
push
fadd
xchg
jo
outs
adc
add
nop
mov
and
add
or
sub
mov
pushf
pop
in
cld
lods
push
loope
add
add
add
jmp
iret
lods
fadd
dec
inc
enter
sub
call
adc
xchg
fwait
sbb
mov
lahf
xchg
xchg
pop
arpl
in
push
mov
test
add
lea
mov
sbb
adc
add
mov
add
lock
adc
pop
jg
cwde
xchg
dec
add
shl
mov
call
mov
mov
cmp
cld
or
add
xor
mov
int3
mov
nop
aam
cmp
jle
xor
and
shr
pop
and
pop
not
dec
and
(bad)
(bad)
cld
neg
and
test
xor
jl
lock
lds
xor
mov
push
add
ret
push
xchg
jmp
dec
mov
sar
aad
pop
test
and
lea
jmp
push
aad
sbb
icebp
loopne
dec
scas
mov
add
mov
xor
dec
and
enter
or
fcomi
ficomp
xor
add
loope
sbb
bound
xor
cmp
or
pop
out
loopne
rcl
xor
pop
rcr
jle
and
and
sub
repz
mov
jg
xchg
dec
or
sti
imul
adc
or
int
retf
(bad)
into
sbb
mov
xor
add
loopne
xor
jl
pop
mov
push
xor
mov
or
ret
test
or
add
nop
jno
mov
xchg
pop
add
xor
cli
rcl
inc
lods
adc
test
mov
mov
push
add
bound
inc
in
inc
or
or
out
mov
push
adc
mov
mov
add
pop
dec
rcr
cmps
push
push
int3
add
mov
dec
xor
repnz
inc
pusha
xchg
mov
mov
stc
sub
ret
mov
jge
jne
xor
js
cmp
push
lea
mov
add
xchg
movs
test
dec
inc
enter
cmp
inc
test
adc
in
(bad)
adc
mov
dec
sbb
add
movs
loopne
add
push
xor
sbb
repnz
mov
movs
jo
and
test
pushf
ins
sub
add
and
pop
push
push
add
adc
nop
pushf
cdq
iret
sbb
in
stos
test
cmp
fcom
jg
add
ret
lea
add
add
inc
sub
or
lea
jge
call
adc
or
mov
mov
add
ret
movs
nop
(bad)
hlt
popf
mov
ja
inc
popf
sbb
push
aas
sub
inc
add
push
loop
dec
popa
sahf
stos
out
push
popa
inc
xor
xlat
stos
jge
pusha
adc
mov
jge
jmp
cwde
mov
mov
dec
rol
(bad)
loopne
sti
out
xor
mov
mov
mov
fdiv
inc
cdq
cld
xor
cmp
pop
mov
gs
add
stos
aam
mov
dec
adc
xchg
or
bound
hlt
push
push
mov
adc
and
stos
cwde
adc
test
pop
aad
xchg
xchg
pop
and
outs
or
test
mov
ja
jne
jmp
enter
dec
gs
scas
mov
mov
jnp
jne
inc
test
cli
sahf
mov
repnz
repz
movs
sti
scas
sub
mov
lea
call
enter
cmp
stos
pop
or
je
fwait
jnp
mov
push
xlat
push
retf
ss
dec
xchg
push
leave
sbb
push
lods
arpl
add
dec
cdq
fisubr
rcr
push
fstp
push
nop
dec
test
fwait
retf
stc
adc
enter
test
jg
idiv
xor
cli
jl
nop
mov
xor
(bad)
ins
lock
(bad)
sbb
sti
add
mov
cmp
push
repnz
mov
int3
fwait
or
sub
clc
jle
pop
pop
or
cmp
xor
daa
xor
loopne
jecxz
scas
or
jo
mov
push
loop
ret
mov
push
hlt
push
js
imul
out
mov
je
sbb
addr16
dec
hlt
call
pusha
aam
mov
push
pop
(bad)
ss
int3
add
add
sets
add
sar
sbb
jp
adc
jmp
cmps
mov
jb
pushf
cld
pop
or
gs
push
pop
lahf
rol
movs
pushw
(bad)
xchg
and
mov
and
jne
fcomi
jp
daa
xor
imul
inc
ficom
jne
mov
jno
push
jmp
sbb
repz
push
adc
mov
inc
mov
and
xor
xchg
push
clc
or
sub
inc
inc
and
cmp
push
and
test
ret
in
mov
lods
loope
add
jb
sub
das
movs
pop
(bad)
pop
arpl
xlat
call
mov
or
jne
pop
sahf
add
adc
sar
nop
cs
mov
inc
pop
pop
mov
jmp
add
push
sub
adc
dec
add
je
dec
loopne
pop
ins
cmp
xchg
(bad)
retf
(bad)
(bad)
mov
mov
cwde
cli
daa
mov
inc
sub
push
push
div
pop
shr
call
and
into
push
jno
push
xor
mov
xor
sub
pushf
(bad)
push
sub
push
xchg
ret
add
and
lds
pop
jb
xlat
xor
jne
aad
jo
aaa
push
into
add
add
rcl
daa
mov
or
int
fyl2x
ds
lock
(bad)
sahf
and
enter
mov
leave
test
xor
or
cs
push
pop
test
dec
(bad)
mov
inc
push
inc
lds
jo
jno
call
xchg
je
mov
push
cmp
into
test
jne
test
mov
in
scas
adc
or
scas
mov
jne
jno
add
pop
das
imul
mov
repnz
xor
mov
dec
sbb
jg
clc
ins
cmp
int
imul
adc
mov
jl
inc
mov
jecxz
adc
(bad)
push
les
dec
dec
sub
dec
inc
add
out
pop
add
sbb
add
mov
jns
add
sub
push
fidiv
(bad)
adc
push
xor
outs
dec
sbb
int3
lods
mov
outs
imul
mov
jle
cmp
fbstp
mov
or
icebp
push
outs
jnp
or
sub
jo
jle
mov
shl
jmp
dec
aaa
mov
call
pusha
aad
push
les
mov
sbb
sub
ret
add
dec
adc
mov
test
and
push
mov
push
push
test
add
adc
(bad)
cdq
in
cmc
jb
movs
mov
(bad)
and
in
mov
jae
push
lea
adc
or
sub
add
push
sbb
cmp
dec
sbb
push
cs
sub
rol
inc
mov
ss
mov
std
test
and
push
sbb
pop
sbb
(bad)
push
dec
nop
ja
push
push
cmc
xor
ins
fsub
adc
scas
push
mov
cmps
jbe
out
cmp
cmp
fdivr
or
pop
movs
and
jo
imul
cmp
push
fldcw
xchg
dec
jl
xchg
out
add
lock
pop
mov
shl
inc
push
inc
mov
lea
mov
leave
xchg
push
or
mov
mov
jb
sar
pop
pop
cmp
cmp
mov
cmp
imul
sbb
add
leave
in
add
jmp
push
sub
push
sub
and
outs
imul
inc
xlat
and
push
int
out
out
or
sbb
aad
push
sbb
add
or
movs
mov
jg
and
movs
shl
(bad)
shl
fsincos
and
sub
rcl
mov
int
push
rol
aad
inc
adc
xor
ficom
repz
iret
xchg
mov
xor
push
push
jle
and
jmp
mov
push
xor
or
test
inc
inc
add
sbb
rcr
clc
pop
add
das
int3
ss
adc
jns
jp
nop
inc
pop
mov
push
add
add
and
lahf
sbb
pop
inc
sub
push
adc
pop
jo
pushf
xchg
or
dec
sbb
mul
loopne
xchg
jae
xor
loopne
shl
sub
push
pop
adc
adc
and
inc
push
mov
add
enter
mov
(bad)
sti
cmp
js
pop
inc
and
push
push
push
pop
in
out
pop
inc
add
xor
out
sbb
add
jne
push
mov
jb
pop
(bad)
in
test
dec
sbb
or
test
dec
inc
sbb
movs
lsl
push
je
movs
(bad)
xor
pop
mov
and
les
xchg
push
adc
cs
and
and
xchg
aaa
inc
cmp
ds
movs
repz
sar
pushf
lock
xlat
and
mov
push
rcl
dec
in
cmp
adc
push
in
std
pop
pop
aaa
inc
cld
pop
mov
mov
sti
fnstcw
or
adc
cmp
push
nop
aam
push
dec
clc
jp
or
cs
push
inc
push
xchg
rol
push
or
dec
(bad)
and
push
dec
dec
and
sahf
cmp
and
enter
mov
inc
dec
pop
cdq
push
das
(bad)
fmul
adc
ret
loope
xchg
jno
mov
adc
push
js
cmp
add
rcl
pushf
jbe
jecxz
dec
test
dec
add
movs
sub
(bad)
dec
iret
add
mov
xchg
addr16
dec
test
jle
mov
pop
jno
mov
xchg
mov
sub
inc
sub
pop
(bad)
ja
test
pop
push
enter
fsubr
(bad)
std
call
ds
cmps
movs
movq
sbb
lods
xchg
test
(bad)
out
add
xchg
ds
sub
jp
fcomp
mov
test
fnstenv
sti
sub
dec
mov
jmp
lea
dec
add
ins
push
xchg
sar
movs
push
pop
fbld
add
aaa
es
aam
add
add
pop
jae
sti
and
dec
xor
gs
or
rol
xchg
daa
xlat
pop
mov
add
mov
dec
cdq
enter
fs
outs
ret
call
dec
sub
mov
fstp
jae
test
mov
nop
adc
faddp
add
add
loop
xor
xor
aad
pusha
xchg
add
aaa
dec
mov
jg
aaa
(bad)
sbb
add
sbb
std
sub
and
in
jecxz
xchg
mov
push
xchg
push
call
xlat
hlt
cld
cmp
add
std
test
test
mov
mov
in
jp
and
ror
inc
ret
mov
aaa
movs
pop
out
cmp
sub
adc
mov
fild
xchg
inc
in
push
jge
push
repnz
(bad)
mov
sti
push
jle
jg
jno
inc
fisub
rcl
xor
lds
mul
inc
xchg
stc
mov
inc
add
cdq
call
test
retf
xor
aaa
or
scas
out
push
js
out
adc
and
adc
xchg
mov
xor
loope
jne
jmp
sbb
push
mov
(bad)
add
inc
clc
inc
xchg
mov
cmp
rol
aas
push
mov
push
push
xchg
adc
retf
nop
and
fst
xor
mov
adc
xchg
or
ror
ds
fistp
add
fisttp
mov
inc
cmp
fst
mov
xchg
pusha
es
enter
and
les
inc
sub
or
xchg
sub
adc
popa
and
cmps
(bad)
sub
push
and
mov
xor
push
jno
push
stc
jno
and
test
push
push
pop
push
jae
push
test
mov
adc
movs
sub
movs
jmp
pop
and
mov
inc
cmp
mov
retf
xchg
inc
mov
mov
push
cwde
lahf
sar
inc
xchg
mov
sub
dec
gs
inc
pop
fidivr
sub
xchg
push
xor
xchg
inc
mov
sbb
aaa
movs
adc
add
sar
push
test
js
jge
push
inc
or
lods
jmp
bound
pop
fucom
ds
pusha
pop
mov
xor
mov
xchg
inc
mov
fsub
(bad)
jno
js
push
clc
rcr
ins
sbb
call
pop
add
pusha
dec
push
inc
pusha
sub
mov
outs
ret
clc
jl
hlt
add
cmp
mov
push
add
sbb
pop
xor
fdivr
sbb
push
push
inc
je
xchg
inc
push
sub
cmp
bound
push
pop
adc
popa
mov
aam
aas
enter
dec
push
push
push
xchg
cmc
or
das
retf
pop
mov
imul
retf
jmp
cmp
xchg
fcmovnbe
sub
(bad)
mov
lahf
int3
pop
test
cmp
cmp
mov
or
daa
ds
hlt
adc
mov
push
xor
xchg
sbb
lods
sbb
into
push
sbb
pusha
cmps
stc
(bad)
adc
adc
jno
rcl
add
add
(bad)
xor
ja
mov
sahf
movs
add
push
push
icebp
unpcklps
cmp
jge
fcom
adc
sti
rol
nop
outs
push
cmp
sti
ret
xor
or
xchg
ins
adc
sbb
mov
mov
add
push
push
or
jmp
popf
rcr
lds
add
rcr
or
add
sahf
lods
dec
mov
bound
add
sbb
jns
loopne
add
test
je
ret
mov
xchg
and
pop
adc
add
or
(bad)
aas
add
inc
dec
inc
cmp
lea
lods
xor
sub
and
lods
test
and
je
add
cwde
sbb
es
push
sbb
into
pusha
push
lods
sub
jmp
(bad)
jb
je
xchg
(bad)
sbb
in
shr
sbb
xchg
mov
xor
add
cmp
pop
inc
adc
sbb
adc
cs
mov
scas
xchg
lods
aad
(bad)
lock
arpl
pop
dec
(bad)
pop
push
cdq
jns
test
sub
jb
push
call
sbb
mov
pop
hlt
xor
push
jae
mov
fnstcw
mov
xchg
adc
mov
cld
test
or
scas
imul
data16
scas
or
xchg
inc
push
jle
cmp
and
cmp
pop
adc
adc
sub
inc
sub
cmp
sub
aas
call
add
mov
push
push
cwde
sbb
push
or
sub
or
imul
les
retf
mov
sub
sub
call
pop
(bad)
jno
jecxz
ficomp
cmps
test
pop
movs
cdq
adc
dec
pop
sub
fimul
or
pop
push
jno
outs
dec
jle
movs
cdq
icebp
je
enter
pushf
nop
imul
call
adc
xchg
sbb
xchg
and
xor
rcr
pop
sub
push
je
push
in
je
jg
push
pop
int3
(bad)
push
adc
or
daa
sbb
imul
dec
or
push
push
nop
icebp
and
pop
or
fstp
enter
rol
repnz
cmp
call
rol
loopne
inc
and
mov
push
test
popf
xchg
mov
test
mov
daa
mov
arpl
adc
shl
and
or
lds
aas
jg
pop
adc
sub
jns
cli
ins
dec
sub
cmp
dec
cs
pop
cli
popa
push
pop
adc
jg
jle
fimul
or
add
push
std
push
mov
je
add
shr
mov
inc
xor
(bad)
jl
mov
shl
xchg
jmp
jmp
push
(bad)
jg
dec
pop
ret
cmps
repnz
mov
and
sub
and
je
sub
test
push
adc
imul
sbb
mov
ins
cli
jge
popa
test
hlt
movzx
jmp
or
or
cs
pop
xchg
loop
ins
rcr
int3
(bad)
or
sbb
sbb
xchg
test
or
xor
dec
ret
jg
push
pop
ins
(bad)
loopne
ss
dec
imul
cmp
nop
popf
je
or
pop
jae
and
ins
jmp
pop
push
or
cmp
xor
add
sub
imul
sbb
pop
xor
cmps
cdq
call
or
mov
ins
popa
mov
stos
lods
or
popa
pop
push
pop
paddusb
loopne
or
mov
sti
ret
ret
aas
pop
mov
mov
das
mov
hlt
test
mov
es
jp
sub
cmp
add
inc
out
adc
xchg
xor
pop
movs
mov
addr16
inc
sbb
push
(bad)
pop
pushf
inc
lods
fs
hlt
popa
or
aad
sub
or
les
mov
jns
dec
cli
inc
pushf
(bad)
cld
xor
arpl
js
ss
mov
mov
mov
in
ins
xchg
xor
mov
dec
or
(bad)
mov
std
inc
adc
push
aaa
mul
imul
fild
mov
sbb
mov
xchg
nop
loopne
mov
and
shl
ss
push
mov
adc
scas
inc
xchg
lds
(bad)
out
xchg
push
movs
test
(bad)
loop
cmps
scas
adc
ss
adc
and
sub
mov
sub
push
mov
inc
push
in
sahf
add
or
mov
or
ds
ss
mov
sbb
adc
inc
(bad)
adc
xchg
cmc
imul
addr16
ds
sub
mov
bound
fld
pop
push
jno
pop
(bad)
add
stos
out
sub
push
loopne
xchg
jp
(bad)
or
adc
sub
clc
call
mov
daa
inc
adc
fdivr
push
add
xchg
pop
mov
aam
adc
sahf
imul
inc
push
and
or
jmp
cmp
cwde
push
rcl
cmps
mov
or
shl
(bad)
sbb
mov
add
push
bnd
inc
cwde
and
or
mov
xor
mov
fdiv
xor
dec
ja
int
fldenv
cmp
mov
xchg
dec
arpl
movs
mov
ror
pop
jmp
je
dec
push
mov
mov
pushf
ror
test
mov
or
arpl
push
pandn
call
cmp
push
push
loope
sub
mov
pop
mov
dec
test
sahf
jb
(bad)
test
(bad)
sub
fdiv
mov
jb
dec
(bad)
add
and
js
fdiv
jmp
in
mov
xchg
jne
in
ins
in
pop
outs
es
add
test
sbb
loopne
push
push
(bad)
bound
inc
mov
test
nop
push
xchg
sub
daa
mov
(bad)
lods
dec
mov
sbb
add
xchg
and
and
sub
add
fdivr
lock
or
sbb
daa
rcr
push
idiv
jno
jg
and
sub
imul
jge
xor
fadd
and
loope
add
fnsave
jmp
popa
pop
mov
and
add
ret
mov
or
push
adc
dec
rol
add
xor
fs
in
push
or
adc
int3
cmp
add
(bad)
rcl
ds
adc
push
jle
ret
clc
mul
es
sar
jbe
mov
adc
test
lods
and
fwait
jns
and
cmp
ret
rol
push
and
cmp
imul
push
xchg
imul
pusha
lahf
mov
jmp
or
mov
xchg
jno
jg
cmp
jne
push
(bad)
push
call
and
and
mov
fdiv
add
mov
push
pop
push
or
xchg
cmp
push
jle
(bad)
sbb
add
add
sbb
pop
dec
loopne
pop
add
and
jns
add
(bad)
cs
daa
jo
retf
add
jle
outs
sbb
push
push
pop
mov
jno
call
adc
push
(bad)
popf
xor
shr
adc
cmps
in
ror
inc
or
xor
cmp
cmp
inc
inc
push
mov
push
xor
xor
dec
dec
jmp
pop
pop
loope
fld
xchg
dec
cmp
movs
sbb
adc
jae
sbb
movs
jbe
sbb
push
mov
dec
ret
xor
push
add
inc
jle
std
sti
ror
inc
sahf
pop
call
push
call
je
sahf
enter
in
adc
sahf
and
test
dec
inc
lods
test
sub
nop
adc
or
mov
ins
and
and
dec
ins
mov
sbb
sub
push
add
adc
add
jb
mov
add
sbb
inc
fisub
and
jmp
push
xchg
inc
rcr
movs
inc
(bad)
mov
ins
mov
mov
pop
sahf
add
sub
xor
shl
mov
test
imul
je
or
mov
and
sub
dec
out
add
mov
dec
jne
icebp
mov
inc
shr
add
dec
adc
pop
cs
ins
loope
xor
sub
pop
sar
push
shl
mov
push
sahf
mov
fimul
mov
sbb
push
call
dec
add
mov
or
adc
xchg
fisub
xor
(bad)
dec
cmps
push
cmc
fcmovb
push
shl
cmp
pop
test
adc
and
retf
mov
push
add
cmc
ins
add
or
ret
inc
mov
sbb
pop
lea
ret
sbb
(bad)
cli
or
adc
ja
sub
or
dec
jae
rol
outs
push
call
mov
dec
dec
push
xchg
xor
push
das
std
sub
shl
mov
adc
(bad)
movs
sbb
and
jmp
enter
or
adc
cmp
sbb
jns
cli
add
xor
and
xchg
stc
stc
cli
bnd
pop
dec
jno
cli
pop
inc
call
fs
mov
dec
jle
push
add
out
push
ins
jmp
push
and
sti
repnz
nop
jg
sti
adc
xchg
mov
sar
sbb
dec
ds
add
pop
das
sbb
xchg
sbb
add
out
xlat
cli
movs
inc
leave
rcr
test
mov
cmps
imul
push
shl
inc
xlat
retf
in
add
sub
ret
cmps
and
xor
dec
add
jg
cmp
lea
call
shl
das
inc
dec
jmp
mov
test
inc
repnz
and
in
sbb
loopne
mov
out
and
inc
cld
test
int
pop
mov
add
add
nop
inc
adc
lds
xchg
test
inc
ret
shr
mov
ss
out
ins
jo
inc
mov
ja
daa
jle
iret
lahf
pop
je
repnz
dec
push
call
add
ins
push
push
lods
lock
ja
or
add
cld
in
out
jge
dec
test
xchg
mov
or
leave
adc
test
jmp
retf
pop
jg
loopne
sti
inc
xchg
jae
inc
ds
addr16
test
idiv
data16
test
pop
sub
outs
adc
shl
pop
dec
test
mov
popa
sub
and
xchg
add
call
add
enter
test
add
repz
add
(bad)
xchg
inc
not
and
dec
stc
test
cmp
test
add
or
mov
xor
or
push
pop
vpor
sbb
cmps
inc
sbb
nop
push
mov
retf
push
iret
push
sub
or
cmp
or
dec
pop
push
push
add
sar
fidivr
mov
inc
inc
or
je
pop
mov
jbe
cmps
pushf
add
push
movs
outs
aas
jmp
call
inc
inc
xchg
sahf
pop
(bad)
rol
push
mov
ds
ss
xchg
retf
mov
sbb
mov
inc
ins
mov
pop
sub
sub
jae
stc
xchg
(bad)
in
fstp
mov
ds
pop
das
ja
repnz
mov
xchg
ret
cmp
add
inc
sub
psllq
add
mov
mov
jo
add
lea
adc
push
mov
sbb
retf
in
sub
push
pop
dec
dec
call
add
mov
dec
sbb
pop
stc
call
in
pop
fisub
xchg
mov
and
xor
or
or
adc
inc
jb
sbb
mov
add
push
and
gs
and
or
xchg
dec
push
or
add
in
add
mov
int3
add
in
jne
pop
inc
dec
pop
and
xchg
inc
nop
fild
movs
dec
sub
loopne
rcl
inc
jnp
hlt
xchg
xchg
jmp
xchg
or
dec
mov
add
ins
nop
push
retfw
jb
push
sahf
pushf
sub
rcr
in
ins
pop
ins
cmp
ret
cmp
inc
mov
add
adc
or
(bad)
std
add
cmps
imul
clc
inc
pop
out
loope
(bad)
and
enter
fdivr
aas
mov
push
adc
call
movs
mov
adc
xchg
jo
shl
dec
fwait
and
sbb
add
sbb
sbb
push
mov
sub
or
out
cmp
pushf
jecxz
xchg
mov
mov
sahf
push
fst
movs
loopne
cmp
or
mov
int3
or
repnz
dec
(bad)
dec
or
mov
cmp
retf
fnstsw
pop
xor
push
dec
mov
out
rol
push
push
mov
push
push
add
cmp
add
fdiv
dec
mov
push
pop
adc
fisub
and
retf
pop
mov
mov
lods
adc
add
mov
pop
adc
lods
pop
push
or
cmp
ficomp
push
int3
cmp
adc
add
mov
cmp
test
and
mov
and
test
and
int
dec
sbb
shr
pusha
jb
pop
inc
test
loope
adc
dec
sbb
inc
clc
dec
or
jb
inc
mov
scas
fldcw
inc
jbe
gs
dec
aas
pop
mov
aam
test
add
xchg
nop
jbe
jne
add
call
add
xchg
mov
or
dec
loope
jne
ds
dec
inc
dec
iret
into
inc
sbb
dec
pop
add
dec
add
xor
xchg
imul
push
sub
and
adc
mov
add
mov
inc
mov
iret
mov
popa
and
stos
xchg
and
fild
aas
and
test
xor
dec
ss
or
push
test
push
push
js
jnp
xrelease
mov
dec
dec
mov
inc
add
inc
mov
mov
jnp
(bad)
xlat
jl
adc
xor
or
and
shl
scas
or
inc
xchg
popa
mov
out
sti
jg
push
push
mov
xor
dec
ja
xor
int
jmp
imul
inc
test
fcmovnbe
mov
or
pusha
or
fnstcw
mov
(bad)
sub
push
ret
xor
xor
or
lea
pop
sbb
pop
push
pop
add
inc
ss
xor
sub
xor
and
(bad)
movs
into
pop
mov
sub
mov
add
jae
mov
(bad)
pop
ins
push
fimul
lods
loop
cmp
jl
shl
cmc
data16
lea
and
mov
xchg
sub
or
cmp
cmp
add
aad
cmp
inc
cmp
fnstsw
js
cli
mov
ficomp
dec
add
ret
add
sti
shr
ror
das
pop
push
xor
inc
push
xchg
cs
mov
in
lds
and
mov
call
shl
std
and
cmps
ret
(bad)
pop
mov
push
lock
fwait
call
mov
fwait
and
ror
xor
mov
retf
xor
and
ds
enter
xor
inc
repz
cmp
aam
retf
int
adc
and
jmp
sub
xchg
and
mov
js
cmp
and
jge
jl
jmp
xor
inc
in
cld
add
fdivr
cmp
inc
xchg
xor
out
rcr
push
and
push
or
hlt
in
jo
pop
les
inc
dec
(bad)
cmp
sbb
jb
inc
fimul
add
fwait
jle
movs
shr
sub
rdpmc
xor
js
push
pop
add
dec
add
pushf
pop
sbb
pop
add
sbb
lods
cmps
and
cmp
jmp
or
add
mov
push
mov
push
bswap
jecxz
fwait
ja
pop
pusha
sbb
nop
sbb
xor
sub
enter
fs
jecxz
push
add
or
in
or
shr
xlat
shl
cmp
enter
pop
out
in
jmp
mov
xchg
jmp
mov
dec
rcr
nop
mov
sub
retf
rol
sbb
sbb
out
and
ins
add
mov
cmp
jae
mov
cmp
cmp
aas
into
xor
(bad)
movs
inc
xchg
push
retf
jle
shr
xlat
(bad)
stc
jns
clc
xchg
xchg
fidivr
pop
addr16
cmp
jmp
jo
cmp
xor
mov
sub
push
add
mov
in
and
push
xor
stos
jge
or
fs
sub
mov
cs
adc
js
repz
and
lea
repz
int3
shl
jg
dec
push
inc
leave
(bad)
div
jl
or
icebp
outs
dec
mov
enter
xor
push
push
mov
pop
inc
xchg
inc
or
ja
movups
adc
iret
aaa
mov
or
adc
fiadd
xlat
jae
dec
pop
sub
adc
loop
fmul
iret
mov
sbb
xchg
sub
ja
sub
fdiv
sub
mov
add
xchg
xchg
add
std
xor
cmp
dec
jbe
push
add
jbe
cmc
or
push
xchg
fidiv
pop
je
aad
add
push
int3
xor
loopne
sbb
sti
adc
xor
mov
popf
mov
jnp
popa
mov
cmps
out
cli
mov
movs
cmp
out
aaa
xchg
adc
lods
dec
pop
(bad)
mov
mov
xchg
xchg
or
add
loop
pop
inc
pop
nop
sbb
and
xor
es
inc
add
(bad)
jne
xchg
leave
xor
and
adc
test
pop
mov
dec
inc
sub
ret
stos
sahf
push
jno
stos
mov
or
lds
daa
xor
mov
mov
cli
inc
daa
inc
ret
xchg
xchg
cmp
add
ja
mov
inc
and
inc
or
and
(bad)
jb
inc
cli
ds
push
or
inc
stos
xchg
inc
push
daa
xor
pop
pop
mov
daa
mov
fs
pusha
fs
xor
add
mov
mov
pop
add
add
je
loop
and
ficom
adc
pop
push
repz
and
push
adc
pop
mov
sub
push
xchg
adc
repz
add
pushf
popf
inc
xor
popa
add
sbb
dec
lods
rcl
cld
test
sbb
scas
shl
test
jo
ret
adc
ret
outs
dec
mov
sub
xor
mov
fnstenv
xlat
sub
(bad)
mov
std
std
dec
add
push
fistp
sbb
sub
adc
clc
mov
xor
add
or
adc
pushf
cmp
test
sbb
fild
pop
adc
mov
or
(bad)
je
nop
sub
js
mov
jo
test
cs
pop
xchg
in
pusha
fs
pop
pop
or
stos
nop
xchg
mov
jb
inc
inc
cmp
push
and
cmp
dec
xchg
in
sub
gs
and
sbb
nop
retf
push
adc
or
sbb
or
enter
pop
add
add
push
les
(bad)
jns
xchg
jecxz
in
sbb
sub
loope
or
ss
lods
scas
hlt
add
mov
jp
add
inc
adc
bswap
in
mov
add
retf
bswap
bswap
call
xchg
mov
pop
rol
pop
inc
jecxz
retf
fld
add
inc
cmp
aaa
clc
add
add
dec
and
and
push
mov
pop
daa
ja
(bad)
sar
and
adc
hlt
mov
rcl
lock
popf
mov
cmp
hlt
div
dec
xchg
(bad)
shr
jo
lds
push
div
fidiv
inc
dec
retf
cmc
and
push
push
popf
in
jbe
sar
icebp
or
jnp
(bad)
cmc
mov
xchg
dec
iret
out
cmp
cmc
and
div
inc
jmp
int
test
ror
test
fcmove
sbb
push
fldenv
xor
mov
sub
mov
sub
or
sub
and
pop
in
nop
cmp
add
fwait
dec
jmp
(bad)
mov
neg
sbb
(bad)
mov
xor
or
dec
xor
fs
or
sbb
or
and
mov
and
mov
repz
ret
fiadd
cmp
pop
ret
jne
test
adc
or
sub
or
bound
scas
or
hlt
call
in
mov
and
mov
rcr
or
enter
and
add
shl
minps
je
mov
or
test
cli
adc
pop
or
cmp
sub
push
cmps
xor
ret
jnp
call
inc
inc
out
scas
xchg
and
or
stos
jmp
cmp
mov
mov
jmp
mov
or
pop
pop
or
aaa
mov
test
or
jb
or
or
push
leave
inc
dec
or
adc
or
in
mov
push
rcl
inc
push
dec
in
nop
stos
add
nop
sub
sbb
xchg
(bad)
daa
and
(bad)
scas
test
add
mov
jne
dec
shl
xchg
cwde
pushf
mov
shl
mov
shl
in
(bad)
out
adc
jecxz
or
mov
shl
inc
mov
or
shr
mov
adc
mov
loop
icebp
or
mov
in
es
mov
loopne
mov
lock
fcmovbe
outs
push
clc
cld
mov
push
add
push
pop
add
in
call
push
inc
pushw
mov
xlat
fcmove
ficom
push
and
cmp
or
pusha
sub
call
push
and
jmp
adc
mov
or
mov
rcl
jg
adc
setp
jg
adc
test
addr16
add
sub
xor
add
mov
movs
imul
add
ret
call
sbb
pop
test
sbb
adc
addr16
call
nop
or
es
jge
sub
lods
inc
add
mov
xor
push
cmc
cmp
inc
and
sub
jb
enter
leave
adc
inc
sub
je
mov
add
ins
inc
and
shl
fsub
inc
es
fsub
and
mov
rol
pop
movs
adc
sbb
dec
cdq
shl
adc
mov
mov
push
add
shl
test
in
cmps
cmps
movs
rol
or
pop
jb
jp
int
add
out
in
push
pop
dec
inc
loopne
pop
repnz
push
jo
or
push
pop
mov
mov
enter
adc
rcpps
xor
adc
movs
sub
mov
fnsave
push
lock
add
imul
dec
mov
mov
push
inc
adc
dec
mov
(bad)
shl
sahf
sahf
scas
test
jge
dec
movs
lock
pop
fs
and
test
js
or
or
adc
adc
xor
in
adc
adc
add
push
movs
test
adc
dec
push
jns
inc
(bad)
sysenter
adc
or
cmp
rol
cdq
nop
jo
js
jl
dec
mov
in
lea
aaa
add
rcl
dec
fidiv
imul
and
cmp
and
and
dec
jo
popa
push
fist
imul
mov
loopne
jp
bound
cli
ret
ja
add
inc
pop
(bad)
jg
sahf
enter
pop
call
stos
dec
das
aaa
out
(bad)
mov
dec
movs
push
call
shl
cli
daa
in
sbb
mov
(bad)
cmp
add
jo
add
add
int
sub
add
rcl
pop
sti
mov
add
add
add
push
push
and
jmp
(bad)
fiadd
scas
add
add
add
add
imul
mov
add
xor
movs
push
jmp
lods
std
mov
dec
fs
sbb
add
and
xchg
add
imul
mov
xchg
add
test
call
ds
fadd
(bad)
movs
movs
pop
add
push
adc
not
(bad)
mov
cmps
add
add
cmp
dec
aad
aad
mov
add
pop
pop
aam
fld
fld
pop
add
lods
std
in
push
add
mov
ins
hlt
xchg
imul
add
add
scas
cld
out
push
push
sti
add
add
jl
add
jmp
repz
add
sub
pop
lock
lock
in
aaa
mov
add
add
fild
xor
add
(bad)
out
add
xor
xor
add
add
add
add
outs
jle
ins
ins
add
test
or
add
rol
sbb
cld
(bad)
cmp
add
add
adc
add
sub
outs
lods
sbb
add
add
add
fiadd
retf
jle
fild
xor
inc
pushf
add
push
mov
cmp
(bad)
fsin
add
add
add
add
(bad)
out
pop
pop
pop
ret
add
(bad)
(bad)
(bad)
jp
jp
push
push
and
imul
cwde
and
add
add
add
int
jle
add
add
add
add
add
mov
call
bound
bound
sti
(bad)
jle
ficom
push
into
push
add
add
add
(bad)
loopne
loopne
add
add
adc
add
push
repz
dec
add
mov
and
sti
add
push
lock
mov
add
add
outs
jle
out
add
cdq
fld
fstp
add
xchg
call
dec
xor
add
add
int
test
call
add
(bad)
out
jle
test
test
popf
add
add
repz
ins
push
add
add
add
call
add
mov
or
outs
outs
add
add
adc
xlat
arpl
arpl
adc
stc
int
jmp
pop
cmps
add
add
cld
out
mov
fisubr
add
sub
sbb
add
stc
add
repz
adc
add
das
add
add
js
aaa
mov
push
add
push
add
push
jno
jno
(bad)
out
add
add
aam
sbb
repnz
mov
mov
and
jb
jb
add
out
mov
iret
clc
add
clc
add
add
repz
ret
add
add
add
add
call
add
icebp
mov
int
lods
xchg
or
rol
rcl
add
mov
test
out
mov
add
add
add
jne
fbstp
ja
add
add
cmp
mov
clc
add
add
call
arpl
pop
fadd
jge
in
adc
test
(bad)
push
jnp
add
bound
push
aas
push
in
add
push
out
js
pop
std
pop
mov
add
pop
add
add
dec
push
loopne
cmp
ds
test
sub
cli
mov
scas
sbb
rol
mov
retf
jge
add
add
leave
fadd
dec
add
enter
pushf
fisub
add
movs
jne
cli
jno
lahf
cwde
add
add
mov
jno
into
retf
mov
aas
(bad)
out
pop
add
add
cmc
aam
add
add
push
sti
hlt
jecxz
in
push
sbb
xchg
add
inc
in
ror
add
call
add
int3
fsub
sbb
int
call
dec
add
test
mov
inc
mov
add
js
push
(bad)
fiadd
addr16
push
add
cmp
add
cmp
jg
call
sub
sbb
loop
fimul
je
pop
clc
add
push
cmp
fadd
add
std
js
enter
mov
(bad)
mul
shr
add
add
mov
add
hlt
push
mov
add
xchg
dec
shl
or
add
psrlw
jecxz
cld
sbb
fimul
hlt
jmp
add
das
ds
fadd
mov
xchg
mov
adc
pop
mov
mov
loop
test
mov
add
mov
sub
js
cmc
add
mov
das
ds
stc
neg
mov
fisttp
mov
add
add
add
sub
mul
mov
sbb
pop
add
fiadd
add
call
and
xor
push
in
ret
cmps
xchg
out
mov
test
mov
lahf
movs
jno
cwde
add
sar
jl
aam
js
and
inc
sti
lock
add
dec
aam
push
in
ret
mov
dec
sub
lea
sbb
cli
add
or
jb
sub
sbb
mov
adc
outs
fadd
push
add
pop
adc
cmc
mov
test
xor
js
lods
std
cwde
sbb
pop
scas
push
mov
cwde
js
dec
add
push
mov
inc
pop
add
mov
dec
push
cmp
cmp
cmp
inc
sub
in
shr
movs
add
or
inc
pop
clc
add
add
test
out
jge
scas
jge
add
or
xchg
mov
scas
jge
scas
add
movs
inc
cmp
mov
adc
add
les
jge
add
add
dec
aam
jecxz
add
fnstsw
scas
add
sub
add
add
mov
pushf
fwait
inc
rol
lods
or
sbb
fprem
shl
jp
xchg
pop
adc
cli
repnz
adc
lods
sti
ret
popa
popa
or
jl
call
jne
clc
or
cmp
jl
push
mov
fisub
loope
xchg
or
imul
or
leave
mov
mov
int3
cmp
jmp
mov
pop
pop
or
neg
pop
stos
mov
add
ret
mov
mov
fwait
inc
js
mov
in
inc
mov
lods
or
push
int3
dec
(bad)
loope
pop
push
cld
cli
ds
stos
add
cmc
fmul
xchg
shr
movs
mov
sbb
loopne
mov
fcomp
es
das
int3
pop
loop
and
sub
test
or
mov
lock
pushf
mov
add
dec
gs
sbb
fsubr
add
xor
add
add
imul
sbb
jmp
ins
test
mov
call
push
sub
xchg
adc
call
js
ins
sub
sti
xor
xchg
add
(bad)
pop
xor
or
cmp
pop
pop
ret
cs
stos
xchg
fsub
or
sbb
cmp
or
cmc
jb
dec
xchg
lods
sub
lock
adc
add
or
mov
(bad)
int3
sbb
out
cld
jl
adc
shr
dec
pushf
sbb
sbb
jl
aas
cmp
test
cld
push
xlat
add
in
fisttp
dec
xor
xchg
xchg
dec
sub
mov
mov
adc
jmp
test
je
retf
or
pushf
cmp
or
mov
push
loope
stos
outs
int3
pop
lea
push
push
jp
pushf
stos
push
or
mov
pushf
ficomp
in
mov
sub
xchg
adc
ret
mov
or
test
push
mov
fdivr
add
jg
and
add
jp
or
hlt
adc
cmp
wrmsr
jecxz
loope
jp
lods
push
popa
(bad)
adc
cwde
jo
adc
mov
mov
add
pop
je
jecxz
dec
in
push
pop
cmp
sub
jle
ret
in
push
int3
adc
out
add
das
mov
loopne
add
cmp
mov
jl
ror
rcl
xor
pop
int3
sub
fcomp
sub
lods
fcomp
sbb
or
sbb
dec
cmp
nop
fidivr
rol
clc
test
cmp
fiadd
add
cmp
in
scas
loope
xor
cmp
sti
sub
add
pushf
stos
mov
outs
stos
in
cld
fiadd
loope
push
ins
retf
js
adc
ins
loope
xor
jl
add
cs
lahf
pushf
mov
mov
ins
loopne
push
pop
ret
cld
sbb
adc
jo
push
dec
ret
clc
push
sub
out
aaa
cs
mov
jno
dec
cmp
cdq
inc
outs
pop
ret
mov
call
jnp
push
clc
test
dec
mov
mov
mov
or
sub
jno
mov
jecxz
jmp
xchg
sbb
adc
mov
xor
fs
retf
jno
adc
or
dec
mov
popf
in
dec
rcl
or
mov
or
mov
cli
movs
mov
call
jp
jl
mov
add
call
hlt
sub
mov
jl
rcr
shl
mov
mov
stos
iret
and
sahf
and
sbb
cli
pop
lods
retf
push
pop
inc
jl
xchg
cmp
pop
adc
call
cli
sub
cld
mov
push
in
xchg
mov
cld
arpl
mov
lea
jo
adc
fdivrp
test
lods
fidiv
sbb
and
sbb
and
mov
mov
loop
push
jmp
call
daa
fmul
cli
and
xchg
cmp
push
inc
mov
mov
(bad)
pop
call
jge
push
nop
adc
jo
cli
sbb
sub
add
xchg
sbb
ja
icebp
or
ins
jp
ins
pop
ret
mov
xor
or
lods
sbb
ficom
rol
retf
adc
mov
mov
loop
push
stos
and
adc
adc
xor
sbb
mov
mov
sbb
or
cmp
dec
or
fcomp
fist
mov
test
lods
cli
xchg
mov
sbb
add
or
mov
and
add
pop
aas
pushf
adc
xchg
cmp
cmp
call
pop
lahf
sar
fild
and
xor
add
pop
leave
pop
cmp
imul
xchg
out
push
or
push
and
adc
dec
and
and
inc
or
test
shr
jmp
stc
cmps
dec
ret
cld
shl
lea
inc
dec
and
test
test
pop
outs
xor
ja
dec
ret
arpl
mov
pop
mov
sub
pop
ret
jb
and
sbb
retf
sub
add
in
cs
inc
and
adc
and
sbb
xor
or
pop
mov
sbb
sbb
and
ins
adc
jmp
inc
ret
scas
cmp
fild
or
xchg
push
jecxz
loopne
pusha
and
xor
loopne
mov
add
ror
xor
and
test
ret
sub
(bad)
pop
mov
xchg
lea
(bad)
mov
idiv
jne
sar
mov
mov
xchg
mov
sub
mov
nop
data16
push
push
or
pop
clc
mov
sbb
call
(bad)
dec
or
sbb
push
lahf
mov
jns
leave
inc
popa
ins
gs
imul
jge
mov
and
jmp
sbb
xor
or
cmps
xchg
pop
test
push
xlat
and
pop
push
ret
cmc
push
fucomi
jb
shl
iret
sub
sub
into
mov
cmp
shr
add
dec
mov
out
cmp
mov
gs
mov
xchg
add
arpl
js
dec
cmps
xchg
xor
dec
cmp
sti
test
out
shr
adc
or
push
outs
push
xchg
cmp
(bad)
ds
nop
and
cmp
(bad)
(bad)
adc
cli
fcom
pop
mov
add
das
into
add
sub
(bad)
cmp
jae
mov
xor
mov
int
cmp
sub
add
fdivr
and
mov
xor
clc
or
push
jmp
and
mov
fs
jmp
add
inc
push
mov
cmp
ror
rol
xchg
jne
jmp
mov
add
adc
or
in
loop
sbb
in
or
adc
punpckhbw
add
mov
sub
nop
add
daa
or
sub
push
add
dec
push
pop
dec
outs
xor
mov
cmp
je
dec
loopne
aaa
ins
stc
mov
les
ss
out
enter
fimul
or
xor
fs
xor
push
or
jo
add
cmps
add
or
adc
les
inc
retf
mov
mov
dec
bnd
jecxz
mov
retf
mov
push
lock
ins
shl
push
ror
sub
mov
je
dec
data16
sub
jp
lock
dec
imul
or
inc
push
or
or
xor
call
data16
xchg
push
rcr
retf
jb
mov
mov
mov
or
test
xchg
inc
xor
(bad)
mov
ret
inc
mov
sub
push
sti
xchg
xor
cmp
adc
cmp
push
adc
adc
mov
out
bnd
and
mov
sub
cwde
jns
in
pop
push
cld
push
retf
test
push
sub
xor
add
push
adc
dec
add
call
dec
cs
add
inc
jne
jp
inc
test
xor
ds
or
jbe
sbb
jns
add
fiadd
jmp
or
stos
inc
sub
sti
mul
test
pop
mov
pusha
repnz
sub
and
mov
push
lock
adc
daa
imul
pusha
std
cmp
dec
push
cmp
add
cmp
stos
push
dec
mov
jne
xchg
in
std
rcl
ret
cmps
mov
push
sqrtps
adc
enter
add
dec
call
push
cmp
jae
mov
mov
push
enter
adc
xor
ret
add
push
sub
xor
into
xor
mov
imul
jbe
push
ds
add
lds
xchg
or
mov
add
outs
xor
repnz
ror
xor
sbb
cwde
add
add
sbb
dec
inc
cmp
dec
outs
je
lea
add
pop
imul
in
adc
in
scas
popa
ret
push
shl
pop
dec
jns
out
dec
mov
xor
add
xor
aad
cmp
imul
add
or
in
push
mov
ret
add
sbb
je
xchg
cmps
sbb
enter
xor
mov
add
adc
sub
cld
je
jo
in
jne
lahf
ins
pop
xchg
call
adc
xchg
lds
ror
fbstp
or
mov
xor
mov
mov
in
out
push
adc
mov
cmp
adc
mov
(bad)
cmp
jne
fist
frndint
adc
mov
pop
add
clc
pop
xor
mov
mov
in
or
push
sti
neg
add
inc
jno
mov
lea
pop
adc
jg
push
jl
cli
int3
mov
pop
add
add
loopne
xchg
lods
xor
gs
adc
adc
ror
retf
push
ss
pop
movs
sbb
fmul
loopne
fisttp
sub
or
inc
mov
stos
mov
and
xor
retf
mov
sub
add
cmps
jmp
push
outs
inc
lea
fldenv
loope
jg
rcl
adc
retf
ret
mov
fistp
or
(bad)
das
push
mov
out
ss
add
dec
sar
inc
sub
pop
aas
clc
inc
leave
dec
loopne
push
cmps
fwait
in
(bad)
adc
and
push
mov
js
repz
add
(bad)
sahf
xchg
and
cmp
div
sub
adc
sub
mov
jle
add
mov
pop
push
mov
shl
push
push
adc
stos
and
(bad)
loopne
or
mov
inc
outs
sub
int3
sbb
add
sub
or
cmps
push
pusha
pusha
dec
jmp
mov
cmc
pop
inc
stc
dec
sbb
inc
pop
adc
or
lock
mov
cmc
mov
mov
sub
(bad)
add
fisttp
pop
and
bound
dec
(bad)
aam
pusha
or
push
test
lods
cmps
dec
daa
cmp
mov
jle
mov
and
jno
les
shl
cmp
pop
adc
xor
xlat
jbe
std
adc
pop
retf
rcl
sbb
je
mov
push
shl
test
push
add
imul
inc
repnz
push
add
stos
pop
stc
shr
adc
(bad)
ins
mov
mov
dec
adc
shl
cmp
rcl
and
call
and
mov
rol
movups
or
enter
lahf
(bad)
into
sub
inc
je
jnp
(bad)
jle
out
fcom
lock
or
lods
cmp
adc
aaa
or
sub
in
ja
mov
and
arpl
or
mov
and
fstp
fdivr
(bad)
ficom
nop
fimul
(bad)
or
and
xchg
push
xchg
loope
loopne
pusha
and
rcr
mov
adc
or
aas
call
pusha
ror
shl
sub
add
and
imul
inc
call
nop
nop
xchg
xchg
push
or
call
mov
sub
adc
or
lds
fidiv
or
sub
pop
aas
mov
sub
lock
mov
out
clc
push
add
jmp
es
pop
xchg
stc
mov
popf
xchg
dec
lock
mov
push
mov
lock
add
fimul
fidiv
ds
stc
bound
mov
mov
or
(bad)
sbb
xchg
mov
(bad)
add
or
push
and
push
call
pusha
jb
mov
push
pop
adc
data16
mov
push
jbe
jle
lea
sub
jmp
ins
out
movups
ins
or
adc
and
div
test
ja
lea
jg
jg
pop
add
ret
mov
jnp
sbb
fldcw
mov
mov
pusha
fist
pop
inc
push
push
pop
and
pop
shl
lahf
fadd
jle
jg
rep
xor
std
mov
sub
stos
cmp
jbe
call
stc
mov
(bad)
mov
call
scas
inc
call
push
add
and
adc
daa
inc
dec
add
cld
aad
and
pop
and
cld
pop
push
loope
ins
xor
pop
pop
add
clc
inc
add
cmp
cmps
mov
pop
add
and
xchg
cli
pop
xor
and
popf
fistp
mov
cmp
in
es
cmp
sbb
and
cmp
or
in
or
or
push
or
push
add
jmp
lods
mov
pusha
or
adc
add
jbe
jg
sub
sub
or
dec
test
mov
retf
add
dec
or
xchg
jo
dec
mov
inc
adc
sub
sub
iret
xor
xor
dec
popf
cmp
jo
cmp
(bad)
push
and
xor
and
push
xor
fidiv
inc
dec
test
sahf
ss
add
add
sbb
xchg
adc
sub
inc
(bad)
mov
sbb
ret
das
cmps
test
loop
xor
adc
and
orps
pop
and
cmp
sbb
mov
ins
mov
mov
cmp
mov
sbb
mov
adc
or
inc
test
fisubr
mov
addr16
dec
dec
cmp
sti
add
not
loop
std
add
bswap
inc
outs
adc
xor
ret
repnz
inc
pop
add
add
add
jg
stos
cld
push
pop
pop
ret
sbb
and
retf
adc
jae
rol
fadd
popa
pop
cwde
sahf
sar
push
and
cdq
mov
test
push
fbstp
cwde
outs
stc
sbb
pop
adc
inc
rcl
icebp
sub
loope
scas
js
inc
jno
mov
inc
inc
or
ret
dec
push
popa
sub
shl
push
mov
fdiv
and
or
js
outs
xchg
push
cld
dec
rol
inc
cli
xor
mov
jmp
mov
movaps
retf
push
sti
add
dec
test
pop
push
mov
cmp
test
add
(bad)
imul
jmp
lock
and
fistp
add
inc
jns
xor
out
mov
sub
lods
fidivr
call
xor
out
loope
call
and
adc
stos
stos
sbb
pusha
aad
repnz
aad
dec
dec
shl
sub
adc
jbe
jb
cmp
pop
cdq
popa
ds
cmp
shr
jle
aaa
out
pop
mov
fs
jns
sbb
(bad)
fbld
inc
mov
outs
out
pop
fisub
adc
xor
inc
stos
adc
add
push
add
loope
dec
rcl
push
stos
push
adc
sub
push
pop
js
lods
pop
pusha
mov
push
add
ins
or
je
retf
loop
imul
rcl
lods
pop
push
fmul
dec
mov
mov
mov
or
adc
in
mov
xchg
sub
cmp
xchg
mov
bound
test
jmp
cmp
dec
lods
sbb
js
cmp
test
adc
daa
stos
iret
call
out
or
mov
or
call
ins
mov
in
sbb
and
and
hlt
out
(bad)
fchs
stos
dec
push
mov
mul
jb
stos
popf
cmps
mov
aad
iret
stc
mov
lods
inc
mov
and
pop
bound
xchg
js
jle
jmp
arpl
adc
xor
mov
push
into
push
kunpckbw
and
and
and
mov
sti
js
int3
jo
cmp
sbb
cmp
jae
sub
push
icebp
popf
sub
popa
icebp
sub
adc
sub
lods
cmp
movs
lahf
pop
popf
scas
icebp
push
adc
dec
loope
jbe
test
xor
jnp
fsubr
int
add
push
icebp
test
add
add
call
sbb
clc
imul
jle
in
mov
call
mov
add
call
ins
leave
lahf
xchg
(bad)
xor
jmp
dec
lea
daa
sub
out
call
adc
imul
xor
pand
jecxz
add
pop
ds
ins
aas
sbb
inc
push
mov
(bad)
cmps
xor
jmp
jp
push
mov
loopne
xor
jbe
sub
inc
sbb
jmp
or
jg
and
or
fist
sbb
push
and
pop
ret
add
xor
test
iret
xchg
ret
xor
fdiv
loopne
fld
div
dec
pop
and
cmp
in
aas
movs
xchg
pop
enter
and
out
aas
and
test
in
fiadd
jns
xor
pop
call
icebp
call
out
out
inc
pop
xor
aas
ret
mov
inc
jmp
jb
mov
jno
jl
jmp
add
inc
push
sbb
in
shl
sbb
mov
pop
movs
(bad)
add
add
in
lock
aas
mov
js
jmp
or
add
jecxz
stos
dec
mov
add
shr
add
pop
retf
imul
movs
push
int3
xlat
jae
cld
jb
push
fnop
add
pop
scas
xchg
mov
sbb
adc
sub
push
ret
cmp
fucomip
mov
test
mov
bound
sub
out
lock
lds
jp
jle
stos
call
fs
sub
xchg
stos
les
jmp
jl
aas
inc
and
pop
push
or
ds
fxtract
cs
pop
jmp
push
xor
rcr
stc
push
loopne
pusha
mov
test
and
clc
ret
adc
adc
and
inc
shl
shl
jbe
add
add
enter
loopne
dec
shl
popa
jle
add
mov
in
out
(bad)
sub
jnp
add
dec
call
dec
hlt
cli
call
sub
rep
and
ins
in
pusha
std
and
popf
pop
mov
pop
nop
in
in
dec
ins
movs
add
imul
dec
loope
imul
mov
loopne
loope
pop
and
and
sbb
jmp
push
pop
aad
jmp
mov
mov
sub
add
jmp
pop
sub
rcl
(bad)
jecxz
fadd
test
popf
push
movs
fs
cmp
mov
lea
lock
ins
add
push
adc
push
add
(bad)
call
hlt
(bad)
sub
rcl
dec
adc
dec
cmp
inc
xchg
(bad)
cmp
fisttp
call
cmp
or
dec
adc
inc
and
cmp
cmp
cs
aad
cmp
sbb
call
dec
adc
sbb
loopne
les
mov
inc
sub
xor
adc
or
jg
add
outs
mov
jb
add
add
cmp
int
jae
mov
test
dec
pop
mov
out
pusha
lea
mov
mov
loope
pusha
jmp
mov
pop
cs
and
imul
nop
xchg
inc
or
mov
jns
pop
adc
das
and
je
call
sbb
pop
std
adc
xchg
add
pop
pop
jmp
push
mov
add
pushf
jo
push
rcr
fisub
in
push
fcomp
(bad)
sbb
lods
sub
dec
pop
push
pop
jl
shr
daa
mov
adc
stos
and
out
push
test
aam
fmul
adc
or
iret
inc
test
sub
pop
int3
mov
sbb
push
and
dec
ret
dec
in
or
sub
fwait
add
jg
xchg
pop
imul
sub
cwde
cmps
test
pop
mov
cmp
adc
call
pop
adc
or
and
sar
sahf
aam
shl
sbb
data16
pop
loopne
adc
out
icebp
sub
hlt
push
adc
scas
jb
rcr
adc
mov
xor
in
mov
jns
std
jmp
add
or
or
in
dec
mov
or
addr16
pop
call
and
mov
push
ret
push
adc
and
cvtdq2ps
xchg
cli
mov
fld
and
sub
inc
push
add
cmp
ja
pusha
icebp
inc
push
xchg
add
sub
pop
or
push
add
sbb
mov
imul
and
or
dec
adc
mov
add
lea
pop
mov
push
jb
mov
mov
or
or
shrd
cmp
cmp
std
push
cmc
cmp
mov
add
neg
and
lds
mov
shr
xor
mov
mov
inc
mov
pusha
push
js
pop
or
in
mov
push
add
jmp
pop
add
inc
and
div
mov
and
neg
mov
xchg
xor
icebp
data16
sub
int
aad
mov
or
mov
jmp
or
mov
shr
jmp
loope
push
push
mov
adc
mov
nop
in
adc
je
mov
mov
mov
xor
cs
jle
inc
sti
xor
mov
or
fiadd
or
dec
push
adc
xchg
jo
shr
mov
mov
adc
mov
push
dec
pop
push
shl
xchg
pop
repnz
sub
clc
sub
or
mov
jge
dec
pop
push
pusha
sar
outs
pop
ins
dec
jo
data16
or
mov
sar
add
inc
xor
xchg
pushf
add
outs
inc
aam
sahf
or
jl
pushf
xchg
push
adc
in
pusha
imul
mov
xchg
pushf
cmp
and
movs
dec
cwde
mov
dec
repz
int3
inc
call
mov
xor
mov
xor
mov
pop
push
mov
rcr
push
push
fidiv
int3
sbb
push
mov
sub
in
ficomp
out
pop
inc
fsub
jo
jbe
push
pop
fisub
xor
dec
jo
in
jo
movs
test
shr
ins
data16
clc
xchg
out
bound
call
test
xor
jmp
retf
add
mul
lea
adc
xchg
mov
rcl
ficomp
nop
push
inc
push
icebp
or
stos
and
test
sub
dec
mov
mov
jne
push
jmp
dec
inc
or
jl
xor
dec
cmps
pusha
adc
cmps
xchg
popa
ds
and
and
pusha
push
dec
sbb
xchg
popa
inc
fwait
pushf
retf
sub
cmps
push
adc
inc
iret
int3
xor
sub
not
outs
jecxz
jmp
add
cmps
imul
fs
push
jne
cs
or
or
inc
sidtd
push
mov
add
data16
jecxz
mov
inc
push
test
mov
fnsave
nop
lods
addr16
adc
xor
push
jnp
add
or
sbb
fld
add
call
push
sbb
xchg
add
dec
(bad)
clc
cmp
pop
cld
cmp
je
jbe
cdq
pop
mov
retf
or
adc
mov
dec
repz
and
(bad)
rcr
movs
rol
rol
mov
push
or
loopne
ja
xor
dec
jle
dec
bswap
mov
and
fxam
and
push
mov
and
sub
(bad)
int
jbe
xor
jp
mov
mov
add
pusha
movs
or
adc
xor
dec
je
add
adc
push
pop
push
dec
in
add
add
leave
adc
sub
push
mov
sub
ss
fstp
xor
sbb
sar
cmp
mov
jle
dec
stc
sbb
or
ret
std
and
or
and
push
push
ins
sub
xor
mov
and
sub
sahf
sbb
mov
jbe
shl
lock
or
xor
ja
cmp
in
repnz
add
fimul
retf
pop
sub
mov
scas
loopne
fwait
mov
or
pop
or
push
es
sbb
inc
inc
xor
push
bswap
adc
xor
stc
loopne
jbe
push
stc
xor
dec
inc
loop
dec
xor
lods
div
aas
inc
ret
mov
and
outs
or
jp
into
xchg
int
xor
and
jmp
push
adc
dec
movs
and
xor
pop
sbb
pop
ins
sbb
mov
xor
(bad)
jo
fsubr
shr
or
test
pop
push
out
arpl
mov
cmp
or
sub
jmp
or
xchg
mov
dec
xor
call
adc
add
inc
adc
rol
shl
xchg
sar
clc
mov
xor
dec
sbb
enter
aam
mov
jecxz
xchg
sbb
popf
int3
cmp
pushf
sub
test
mov
dec
pop
(bad)
adc
sbb
push
movs
mov
dec
add
jo
rcl
jbe
stos
or
mov
inc
jae
scas
xor
pop
mov
dec
movs
imul
inc
inc
pushf
popa
xor
test
ror
pop
loope
adc
push
push
sbb
push
out
inc
shl
push
adc
out
jmp
push
nop
dec
and
push
(bad)
sub
push
add
stos
std
add
xor
add
sbb
or
cmp
add
mov
push
and
jp
or
cs
leave
push
leave
and
inc
retf
xor
and
xor
sub
push
inc
imul
mov
jae
rcl
in
xor
loopne
sar
inc
rol
(bad)
idiv
mov
add
inc
cmp
dec
stc
nop
loope
xchg
inc
mov
sub
mov
push
lds
enter
int
aaa
rdpmc
dec
adc
mov
ret
shl
mov
dec
dec
push
xor
xor
aad
lock
sbb
add
cmp
adc
jb
add
pop
int
jnp
cli
sub
clc
aas
ret
dec
xchg
cmps
mov
inc
inc
aaa
inc
call
clc
test
sbb
sti
call
pop
cmp
das
mov
lea
xor
rcl
call
sub
push
stc
add
mov
pop
add
mov
retf
adc
mov
push
xor
dec
or
add
add
dec
leave
inc
movs
add
hlt
test
adc
cli
sahf
or
inc
add
je
mov
xor
sub
xor
add
sub
ret
add
push
and
out
mov
lds
repz
sbb
jb
jmp
and
xor
inc
jno
inc
push
out
pop
add
mov
rcr
cmp
pop
clc
dec
sub
pop
popa
xchg
add
int
ror
mov
push
mov
sub
add
out
add
cmp
mov
mov
and
pushf
sar
and
sbb
mov
xor
int
jae
xlat
push
push
or
add
xchg
imul
sub
sahf
or
call
and
or
enter
or
mov
rol
cmp
jecxz
enter
lods
xor
pop
clc
xor
pop
xor
add
push
add
stc
lds
jne
div
repz
js
test
xor
pop
add
or
(bad)
js
or
push
push
inc
stc
cmp
dec
pop
push
pop
fdiv
xchg
into
and
add
mov
mov
dec
push
sti
inc
outs
add
int
ins
fimul
push
int
mov
out
stc
loope
repz
clc
xor
cmp
cmps
jmp
ror
lds
std
out
and
adc
ds
rcr
adc
mov
in
(bad)
shl
sub
push
sbb
arpl
mov
jb
inc
sub
outs
xor
sbb
push
movs
fadd
push
std
add
inc
fstp
dec
jmp
jne
pop
je
or
adc
mov
dec
mov
xor
inc
lea
out
idiv
mov
xor
push
push
dec
and
sub
cmovs
pop
inc
xchg
pop
dec
or
inc
pop
dec
mov
aad
mov
adc
out
sti
inc
pushf
add
jne
add
sub
push
adc
push
cmc
push
sub
pusha
test
aas
mov
and
ja
aaa
ret
jmp
leave
add
pop
or
sbb
mov
push
dec
fs
and
sub
dec
ins
pop
xchg
ret
lahf
xor
add
rcl
mov
fmul
adc
xor
dec
inc
mov
fidiv
or
adc
xchg
mov
(bad)
push
and
mov
xchg
add
in
or
xor
inc
call
(bad)
sahf
test
push
inc
adc
imul
popa
inc
add
rol
adc
jae
cmp
xor
xor
shr
inc
aad
sub
push
pop
fist
sahf
xchg
xor
xchg
xor
push
adc
or
ficom
push
adc
sub
push
inc
stos
mov
dec
xchg
push
mov
cs
mov
pop
and
mov
test
or
jne
jp
xor
pop
sahf
pop
mov
sub
mov
xchg
test
ficom
mov
xchg
popa
xor
jb
mov
loopne
xor
cmp
mov
push
pcmpgtw
loop
or
fild
or
inc
sbb
and
test
jb
inc
jns
or
cmp
scas
test
mov
sub
jmp
mov
or
shl
xchg
and
add
push
sub
inc
pusha
jbe
sti
popa
movs
enter
mov
cs
push
jb
bound
xchg
jo
jle
pop
xor
xor
push
sub
adc
cmc
and
div
push
sbb
scas
mov
adc
icebp
jo
jns
xchg
inc
ins
xchg
pop
cmp
pop
adc
jne
fcmovb
cmps
aas
jo
inc
sbb
jl
cmps
xor
mov
mov
rcl
and
or
aam
or
or
sub
pop
jbe
out
es
js
adc
adc
sbb
sbb
or
loopne
adc
and
cmp
xchg
push
dec
data16
sub
mov
adc
xor
(bad)
retf
lds
pop
jae
and
pop
nop
vmovq
jp
xchg
push
lahf
push
xor
and
ret
and
out
xor
inc
and
test
or
cmc
scas
jle
sbb
mov
adc
out
and
mov
mov
aas
xlat
xor
fcom
popa
in
mov
xlat
scas
jne
mov
mov
(bad)
adc
call
pop
cmp
mov
or
sub
data16
sbb
xchg
sbb
int
repnz
sub
or
adc
mov
dec
lds
push
cmp
push
or
dec
or
cmp
shl
sbb
dec
push
fdiv
sbb
into
inc
cmp
push
sbb
test
push
mov
std
dec
push
data16
jmp
lea
sub
add
adc
mov
xor
std
(bad)
(bad)
loope
pop
call
lea
push
jbe
jae
or
gs
adc
sbb
iret
enter
xor
push
xchg
jb
dec
mov
sar
repz
inc
mov
push
pop
xor
jbe
pop
and
cli
add
clc
cmp
add
dec
movntps
pop
sub
fisttp
mov
pop
aas
jg
fldcw
xchg
mov
cmp
push
test
sbb
push
shl
shl
push
or
scas
not
mov
push
lahf
rcl
pop
cmps
or
and
in
inc
mov
ins
push
outs
push
mov
shr
je
popa
sub
jne
xchg
loope
sub
scas
clc
cmp
xor
add
cli
je
hlt
xchg
push
cmps
and
shrd
outs
add
adc
add
push
repnz
sahf
mov
push
scas
inc
adc
push
cmps
mov
hlt
scas
ss
scas
jmp
jmp
mov
sbb
xor
iret
mov
sbb
push
repnz
add
xor
inc
mov
sub
es
cmc
jp
jmp
(bad)
loopne
(bad)
pop
out
cmp
sub
mov
sub
push
retf
jns
ins
and
int
pop
sahf
add
inc
inc
mov
fsubr
aaa
mov
loopne
retf
jecxz
push
push
call
out
add
lds
addr16
or
push
test
inc
sub
sub
jmp
neg
outs
pop
movs
mov
xor
or
sub
jl
xchg
enter
outs
pop
jl
mov
xor
rcl
pop
push
mov
sub
ja
xchg
mov
adc
inc
sub
retf
int3
push
and
nop
dec
xor
ja
add
push
(bad)
mov
jo
adc
sahf
mov
bound
or
pop
adc
cmp
and
sub
mov
mov
xor
(bad)
inc
or
add
add
add
pop
or
add
or
add
(bad)
(bad)
call
iret
jo
pop
cwde
call
and
loopne
retf
jl
jge
add
(bad)
inc
mov
int
ds
retf
(bad)
loope
mov
cmc
sub
jp
movs
(bad)
(bad)
call
cli
adc
fldcw
or
add
or
xchg
jp
int
cwde
mov
(bad)
push
or
jmp
dec
and
ret
mov
sar
add
jp
rcl
jmp
pop
movs
je
iret
cli
xor
push
mov
dec
or
or
ficomp
aaa
pop
dec
and
sbb
pusha
or
adc
imul
(bad)
(bad)
pop
das
daa
push
daa
mov
ins
ss
add
pop
push
or
or
push
cmp
pop
add
(bad)
(bad)
fild
or
add
xchg
sbb
jge
dec
or
(bad)
inc
add
pusha
mov
sub
dec
push
xchg
test
call
mov
pop
mov
pop
or
inc
inc
mov
mov
dec
xor
fdiv
popf
hlt
stos
ret
add
mov
mul
mov
sbb
inc
xor
(bad)
(bad)
mov
imul
test
retf
cdq
dec
leave
sbb
push
(bad)
add
dec
cld
mov
in
pop
adc
xor
outs
and
leave
sbb
aad
push
dec
inc
call
fmul
xchg
xor
push
pop
mov
cmps
fnstcw
outs
adc
xchg
in
dec
add
adc
bound
inc
into
std
fucompp
lods
lahf
mov
mov
pop
push
inc
bndldx
adc
inc
dec
jle
outs
(bad)
jg
add
xchg
ja
mov
push
bound
dec
cdq
dec
push
pop
aad
dec
xlat
in
mov
cmp
movs
sti
mov
(bad)
(bad)
call
mov
push
jge
inc
sub
add
(bad)
and
cli
loop
shr
ficom
or
inc
mov
xchg
fs
add
repnz
inc
es
add
int
cwde
xchg
shr
xor
xchg
icebp
ds
repz
es
repnz
push
(bad)
mov
pusha
inc
and
shr
pop
cwde
imul
xchg
add
jle
cmc
(bad)
(bad)
(bad)
jmp
mov
sbb
xlat
adc
dec
retf
(bad)
fiadd
or
jne
dec
(bad)
gs
fcmovb
mov
inc
das
push
add
sub
dec
(bad)
(bad)
inc
fmul
ins
bound
and
push
push
outs
inc
and
sbb
jns
je
dec
inc
adc
or
shl
arpl
or
test
imul
sahf
add
adc
enter
repz
aaa
adc
pop
inc
in
aad
jmp
rol
ret
lea
or
jmp
jmp
cmp
loop
ret
xchg
in
ins
mov
push
dec
or
das
jmp
mov
fmul
mov
popf
mov
fadd
pop
cmp
inc
cli
leave
pop
ins
loopne
sbb
xor
call
test
or
(bad)
fisttp
sub
xchg
xlat
sbb
fisttp
leave
(bad)
rol
adc
sub
lea
sbb
jo
ret
jnp
pop
repnz
sbb
push
add
adc
shl
adc
jae
inc
rol
push
pop
ins
js
lods
mov
out
lea
cmps
mov
arpl
sbb
stc
dec
lock
lea
lds
imul
enter
sbb
xor
das
push
xor
cmp
in
or
and
sbb
out
loopne
aam
mov
test
nop
loope
loop
fild
or
sbb
sbb
pusha
aad
popa
sub
lock
in
out
not
popf
fcmovnb
ret
jg
push
cmp
xchg
lea
jp
push
add
dec
gs
test
jge
sahf
ret
mov
pop
jno
push
inc
sub
add
punpckhwd
addr16
jp
test
enter
cmp
call
jl
jmp
(bad)
(bad)
sub
sar
outs
pusha
adc
jmp
cmp
neg
out
(bad)
in
adc
add
add
cmp
out
lahf
outs
xchg
xlat
add
mov
gs
data16
jno
dec
jmp
adc
sbb
adc
loopne
mov
mov
xor
add
mov
push
jae
push
adc
jecxz
sbb
pop
setae
sbb
(bad)
pusha
icebp
push
outs
data16
call
clc
je
popa
cmp
shr
stc
mov
rol
jg
iret
shl
loop
add
sbb
cmp
push
dec
mov
int3
jge
sbb
(bad)
cmp
xchg
stc
mov
lock
fadd
push
in
push
out
pop
pop
aad
(bad)
mov
cmp
lock
retf
pusha
cmc
adc
jns
add
dec
(bad)
jge
mov
loopne
or
movs
push
cmovle
rcl
adc
jmp
in
push
fisttp
int3
lock
push
cld
pop
adc
in
rcl
and
push
and
out
rol
add
(bad)
nop
add
and
test
and
ret
fs
mov
pop
fmul
and
clc
rcl
xchg
pop
adc
jmp
add
adc
jl
xor
jge
wrmsr
ds
fist
cmps
and
adc
mov
adc
rcl
inc
shl
and
movs
in
sti
mov
popa
addr16
aad
fcmovnu
shr
call
xchg
lea
test
stc
xor
mov
mov
fidivr
adc
jg
rcl
add
div
enter
cmp
cmp
or
mov
mov
mov
jbe
out
inc
call
ret
fmul
outs
enter
inc
xchg
mov
repnz
xlat
add
or
cmp
scas
mov
stc
outs
add
out
out
inc
das
outs
dec
jg
lock
xchg
scas
xor
add
push
pop
les
(bad)
je
add
mov
mov
adc
xchg
jg
xchg
push
lods
mul
dec
and
jg
push
dec
movzx
and
dec
jmp
pop
mov
mov
popf
push
gs
push
cmp
fwait
cmp
push
push
sar
rcr
(bad)
push
(bad)
mov
call
imul
imul
or
das
iret
(bad)
(bad)
cwde
rol
ss
data16
rol
neg
enter
mov
mov
xchg
js
jnp
ins
lods
push
xchg
push
rcr
jmp
add
sub
add
aas
xor
leave
dec
fucomip
push
repz
cmps
add
jb
in
mov
sub
and
push
imul
movs
xor
rcl
and
sbb
push
and
cs
cdq
shl
shl
jp
hlt
out
cmp
jne
cmp
pop
or
sbb
es
clc
push
push
(bad)
mov
cmp
jae
mov
aaa
sbb
std
push
mov
inc
das
add
loopne
add
enter
ror
ficom
retf
push
xchg
cmp
rol
sbb
jmp
jae
fisubr
mov
lea
push
(bad)
sub
inc
or
int3
sub
and
sub
aam
mov
out
push
imul
in
sbb
add
add
jmp
dec
in
arpl
push
lahf
imul
mov
sar
pop
(bad)
pusha
sbb
dec
popa
pusha
push
out
fist
test
imul
mov
xchg
inc
and
add
or
pop
xchg
mov
retf
pop
sbb
push
mov
or
test
dec
cmps
fld
xor
pushf
aaa
mov
pop
sahf
dec
jo
(bad)
push
retf
sbb
pop
test
or
adc
jo
out
std
add
xor
push
mov
add
mov
outs
or
xchg
pop
jge
dec
pop
xchg
or
mov
xor
ror
pusha
in
cmps
push
mov
inc
xchg
retf
shld
sbb
jle
add
and
lods
xor
xchg
xor
ret
retf
mov
add
or
inc
mov
rcr
mov
test
shl
fdivr
sar
je
loop
add
mov
div
lods
xlat
fidivr
xor
xor
rol
loop
es
add
repz
fidiv
push
das
mov
adc
sbb
jle
addr16
daa
jo
cs
xor
xor
push
and
jle
pop
xchg
push
cmc
dec
fcom
shl
popa
dec
stc
inc
les
loope
jo
scas
xor
inc
push
pop
mov
repnz
dec
inc
jno
mov
or
aas
sar
and
call
mov
add
jae
int3
jmp
call
ss
or
push
mov
in
push
add
pop
ret
sub
push
sbb
int
sub
cmp
mov
jl
jl
pop
hlt
cmp
xor
xchg
pop
lea
mov
xor
mov
pop
sar
cwde
add
(bad)
mov
xor
xor
sub
ret
xchg
jmp
xor
inc
outs
ret
ins
xor
pop
xor
cmp
add
lea
pop
pop
sbb
cmps
pop
sbb
and
movs
sahf
xchg
xor
xor
and
lock
adc
or
adc
cmp
push
lea
push
jbe
in
jecxz
add
and
test
daa
add
mov
loope
bound
int3
cmp
inc
jbe
cs
mov
push
lahf
push
add
add
call
xchg
popa
xor
cwde
pop
out
pop
and
jae
xor
jne
iret
xor
sbb
and
inc
and
add
and
adc
dec
xor
jnp
(bad)
movs
fbstp
push
loope
cwde
or
or
or
mov
loopne
into
fild
mul
outs
cmp
add
add
xchg
inc
jmp
or
pushf
dec
or
mov
stos
mov
lock
jo
mov
or
sbb
or
and
lock
scas
sub
push
add
xor
retf
sar
clc
mov
mov
adc
cmp
arpl
retf
xchg
dec
jbe
xchg
shl
bound
pop
sar
sahf
xchg
adc
and
and
push
cli
adc
cmp
sbb
or
movs
rol
xchg
out
or
adc
adc
push
mov
sar
ror
aam
movs
cdq
add
dec
ds
adc
shl
cmps
es
jmp
sbb
loope
mov
je
cmp
mov
add
adc
ret
and
mov
dec
sub
and
xchg
add
add
scas
dec
cmp
mov
std
or
and
mov
inc
(bad)
cmp
cmp
sar
inc
jmp
add
ret
push
inc
(bad)
(bad)
cld
cmps
mov
dec
out
or
(bad)
mov
and
fcom
enter
adc
or
adc
sub
int
adc
sub
or
add
and
inc
das
fsub
aas
mov
adc
jge
and
xor
mov
and
or
fnstcw
loopne
add
adc
add
(bad)
mov
scas
test
test
pusha
jle
pop
and
jnp
mov
inc
stc
test
mov
or
(bad)
jg
jns
(bad)
mul
nop
jg
shl
inc
add
xchg
or
pop
push
and
or
hlt
or
lock
and
pop
mov
or
mov
push
fiadd
or
mov
mov
and
sub
enter
dec
sti
xchg
mov
dec
inc
(bad)
not
and
sub
push
mov
in
and
or
xlat
imul
je
xor
ret
cmps
pop
(bad)
jo
ins
sub
sub
call
adc
fsubr
cmp
and
fild
push
leave
xlat
retf
es
mov
sbb
sub
call
xor
mov
arpl
add
arpl
or
rol
mov
adc
push
dec
inc
pop
retf
inc
mov
xor
sbb
mov
cmp
pop
dec
cmp
jmp
ret
jno
clc
add
mov
push
or
xor
(bad)
mov
mov
fs
mov
mov
sub
out
fnsave
push
jmp
fdiv
xor
ret
xor
jmp
jmp
ins
inc
imul
pop
add
push
adc
enter
(bad)
xor
scas
sbb
jno
imul
inc
push
mov
xchg
sub
dec
adc
mov
cmp
inc
inc
push
in
lea
ret
and
xor
dec
ja
ja
and
test
or
movs
sub
push
not
push
outs
jnp
out
cld
in
or
mov
fidiv
or
in
or
sub
push
or
clc
jmp
dec
jmp
adc
and
push
sti
or
loope
in
push
adc
enter
mov
dec
xlat
or
clc
dec
push
inc
xor
jne
lahf
add
in
adc
adc
aaa
mov
xlat
mov
addr16
adc
adc
pop
mov
cmp
cmp
jp
gs
mov
push
xchg
inc
inc
mov
mov
mov
cmp
pop
ficomp
push
jbe
inc
out
jae
dec
jo
rcr
shl
lock
in
dec
inc
sbb
mov
inc
sbb
push
mov
sahf
mov
adc
dec
std
test
adc
or
add
or
xchg
adc
pop
loope
or
dec
jns
imul
adc
ret
push
sti
jns
jne
outs
repnz
add
sub
daa
cwde
(bad)
sub
dec
ror
ss
mov
daa
inc
ret
jne
xor
add
mov
push
jo
xor
in
mov
push
sbb
or
fcmovb
xchg
push
mov
adc
inc
pop
xor
adc
fistp
jno
lock
mov
or
pop
ss
dec
or
(bad)
jo
imul
shl
in
rcr
das
xchg
mov
sub
mov
pushf
mov
cmps
fwait
cmp
cmp
outs
inc
mov
adc
and
mov
enter
retf
cmp
out
add
inc
sub
and
out
jl
or
in
jecxz
es
out
sahf
sbb
or
stc
out
stos
sub
cmp
call
mov
out
ret
js
in
xor
test
mov
fcom
outs
pop
movs
pop
sbb
lds
cmp
arpl
mov
std
fmul
dec
mov
(bad)
sbb
mov
stc
cld
cs
adc
call
cmp
ja
aaa
(bad)
sub
cmp
inc
adc
cmp
mov
mov
cmp
dec
add
rcr
inc
iret
mov
mov
aaa
out
push
mov
mov
sub
test
out
push
mov
test
scas
add
and
leave
lds
add
pop
ret
call
push
outs
shl
or
sbb
and
xor
pushf
retf
jl
add
scas
or
rcl
test
mov
mov
inc
sbb
add
cmps
xchg
jge
outs
sub
xor
sbb
add
(bad)
dec
or
jbe
js
je
inc
adc
or
cmp
mov
or
sbb
out
dec
test
loope
js
sbb
sub
sahf
adc
push
cmp
je
das
es
xlat
xchg
xor
jmp
mov
data16
xor
jo
int3
push
jne
fdiv
movs
xor
repz
mov
pop
xchg
mov
adc
add
cmp
adc
into
mov
dec
xor
cmp
shr
sub
inc
mov
cmp
js
xor
cmovge
mov
mov
fist
jo
pop
in
mov
jae
les
loope
ins
aas
sub
into
inc
push
cmp
adc
pop
fiadd
mov
int3
and
imul
test
pop
sub
and
mov
push
xor
inc
xchg
movs
mov
mov
lods
inc
jge
push
mov
aam
into
xchg
xor
test
repz
xchg
test
retf
add
adc
dec
fdivr
cmp
push
xchg
js
lods
clc
fbstp
ja
jl
lea
test
data16
in
adc
outs
cmp
and
loop
mov
shr
je
pop
push
test
fldcw
addr16
lea
pop
jmp
sub
add
push
sub
or
jg
ins
rcr
inc
mov
rol
push
fild
ficom
xchg
ret
pop
add
or
sub
je
cmc
aaa
inc
and
iret
push
xchg
xchg
hlt
sbb
js
ret
sub
mov
adc
mov
clc
jle
pop
int
xchg
add
mov
sahf
add
add
dec
data16
cld
daa
pop
mov
jmp
outs
loopne
in
jae
cmp
rcl
cmp
(bad)
ror
xor
inc
adc
and
xchg
sbb
xor
fidivr
mov
cmp
lea
jb
pop
inc
ds
pop
adc
sub
jmp
ins
or
movs
ds
mov
mov
xor
imul
sub
ds
or
add
inc
or
add
push
sar
pop
cmps
lods
dec
adc
xor
jle
sub
mov
dec
lods
and
xchg
stc
sub
pop
mov
push
retf
add
cmp
aaa
jo
dec
mov
test
cs
aas
ins
lds
movs
lea
xor
neg
push
outs
xchg
cmp
and
inc
xrelease
mov
pop
cmc
xchg
xor
xor
nop
mov
add
add
cli
sbb
(bad)
test
dec
mov
add
and
push
jle
add
dec
aam
and
fisttp
in
lahf
mov
mov
mov
add
mov
add
movs
inc
loopne
xchg
mov
mov
xchg
mov
jp
dec
call
dec
pop
imul
jmp
xor
xor
sub
outs
je
add
fcmovne
in
dec
xor
popa
jb
cmp
js
push
inc
lods
loopne
movs
xor
xchg
sub
and
mov
pop
loop
sbb
test
icebp
scas
std
or
add
mov
shl
adc
jae
xchg
dec
sbb
jae
and
push
aas
fild
(bad)
sub
inc
aam
push
sub
test
imul
or
sbb
mov
inc
xor
jmp
jg
mov
add
in
sub
ss
shld
leave
in
mov
mov
adc
(bad)
jnp
fist
or
gs
mov
repz
in
jecxz
xchg
cmc
out
repnz
imul
icebp
shr
sub
adc
or
adc
inc
mov
in
dec
and
xor
mov
aad
popa
xor
pop
mov
jbe
in
and
aas
jno
retf
or
rol
add
mov
out
cld
adc
mov
fmulp
pop
and
shr
push
pop
jmp
jmp
jg
sub
mov
xlat
add
mov
xor
xchg
divps
(bad)
loop
shr
inc
xor
ins
jmp
or
jl
(bad)
lock
sub
inc
mov
test
mov
fnstcw
fisubr
fnstsw
jecxz
push
add
and
out
mov
pop
pop
jmp
fcmovbe
ror
out
ins
jmp
fninit
add
ins
jmp
cdq
nop
retf
std
retf
inc
jb
and
sub
xchg
add
sub
stc
cli
shl
or
sub
je
push
push
mov
jl
mov
fbstp
(bad)
(bad)
out
shr
test
call
sahf
pop
cli
movs
dec
sar
shl
cmc
out
pop
retf
rcl
inc
das
mov
dec
cmp
fisub
test
adc
and
adc
into
xor
pinsrw
mov
shl
mov
add
(bad)
mov
pop
inc
mov
pop
enter
sub
pop
adc
or
xchg
(bad)
jl
pop
or
mov
xchg
shl
vmovups
mov
add
or
retf
add
and
or
loopne
xchg
daa
loopne
inc
add
daa
inc
(bad)
xor
add
mov
and
js
shr
adc
or
outs
jne
add
pop
gs
dec
sysexit
jmp
adc
aas
push
dec
ror
jge
sbb
push
pop
or
ja
push
cmp
imul
cli
repnz
dec
jge
pop
dec
ror
mov
loopne
or
xor
dec
sub
(bad)
dec
push
adc
or
adc
sub
int
dec
loopne
inc
pop
test
add
ins
xchg
loopne
inc
ret
pop
sahf
and
clc
push
cs
jmp
mov
mov
ins
mul
das
or
adc
sbb
in
leave
pop
or
jg
mov
js
and
loope
pop
push
push
rol
add
std
dec
xor
mov
aaa
in
dec
push
add
popf
ja
adc
push
sbb
add
shr
jl
pop
movs
xor
out
clc
adc
jmp
loopne
(bad)
ror
lock
or
fwait
pop
add
fld
fbld
and
dec
enter
xor
sti
sub
rol
aas
cs
(bad)
add
add
call
jmp
cmp
xor
mov
ficomp
sbb
stos
sub
les
stos
test
bswap
and
sbb
sbb
inc
loopne
js
stc
shr
xchg
fldenv
or
hlt
clc
mov
loop
pop
jmp
push
shl
lock
and
add
cmps
mov
sar
add
popa
loop
loopne
fs
push
mov
leave
xchg
clc
(bad)
mov
cmp
or
push
movs
imul
sub
mov
cmp
adc
and
inc
pop
cli
sub
movs
pcmpeqb
ret
inc
loopne
pop
mov
mov
cld
sbb
sbb
and
not
dec
ror
adc
jns
mov
adc
out
sahf
pushf
mov
adc
nop
mov
add
dec
sub
inc
or
lock
sti
mov
or
and
call
inc
push
pop
cmp
push
pop
lock
es
hlt
adc
add
ror
scas
mov
cmp
or
jge
xor
adc
or
mov
push
inc
shl
ret
cmp
xchg
cmp
pop
xor
xor
or
mov
enter
fnstcw
cmp
pop
fbld
fwait
cli
mov
call
add
call
or
imul
rol
std
or
inc
xor
inc
jl
push
xor
fcom
sub
xchg
xchg
jl
jns
add
jnp
cmp
aam
jns
xor
es
es
out
stos
mov
outs
in
mov
stos
push
inc
scas
jnp
sbb
test
sub
mov
out
jmp
call
imul
or
mov
dec
lea
mov
fld
or
mov
or
xor
std
xor
idiv
or
cld
or
test
stc
retf
dec
stos
xor
cli
js
adc
std
adc
sbb
test
or
push
sbb
xlat
pop
mov
lea
rol
les
and
and
es
or
aad
imul
jle
in
pop
shl
out
and
fdiv
mov
mov
ss
push
xor
arpl
into
sbb
pop
ins
bound
mov
adc
sub
jbe
inc
clc
xchg
sti
add
ror
cmps
xchg
movs
int3
jne
test
sbb
and
fs
mov
and
sub
and
add
retf
xor
jno
pop
retf
sub
cli
sub
adc
aam
xor
test
add
sbb
push
mov
jmp
add
add
dec
mov
fild
push
in
pop
pop
mov
pop
dec
add
sbb
add
jae
adc
sbb
movs
jo
adc
push
call
mov
push
je
(bad)
lock
or
jbe
dec
push
mov
sbb
std
xor
xchg
enter
mov
inc
test
pusha
pop
sbb
mov
pushf
inc
aas
data16
punpcklwd
cmp
rcl
ja
push
mul
add
mov
test
pop
adc
sbb
movs
aas
gs
push
adc
mov
sbb
adc
xchg
push
or
adc
jbe
imul
addr16
sub
lea
xor
or
mov
and
sub
lahf
mov
pop
mov
aaa
adc
sbb
dec
sbb
adc
inc
cwde
movs
ins
sbb
xchg
xor
xchg
xchg
cmp
sar
dec
cmp
movs
or
sbb
test
mov
arpl
(bad)
ins
adc
loopne
data16
or
mov
xor
pop
adc
jp
sub
xchg
es
adc
xor
mov
ror
dec
cmp
cmp
dec
fadd
ret
sbb
stc
mov
push
add
mov
test
scas
xor
jp
shl
mov
lods
mov
hlt
stc
mov
adc
sub
dec
imul
ret
mov
push
retf
mov
je
xor
mov
jmp
sbb
arpl
(bad)
mov
mov
xor
out
dec
loopne
jmp
add
loop
mov
mov
ror
jl
add
inc
add
icebp
cmp
aaa
jp
push
sbb
das
add
mov
aas
push
or
pop
and
and
out
jae
add
add
xor
pop
jb
xchg
cli
je
mov
jb
xchg
mov
mov
pushf
mov
mov
ret
adc
xchg
sub
sbb
xchg
retf
and
add
xor
and
inc
inc
inc
push
nop
push
scas
dec
dec
push
xchg
sub
push
pop
pop
xchg
retf
pusha
fs
ins
mov
je
inc
sbb
jl
scas
dec
cmp
dec
inc
lds
lods
and
or
mov
pop
push
test
dec
dec
nop
push
scas
and
sub
push
cmp
adc
sub
or
movs
jb
sbb
inc
push
mov
movs
and
aam
aas
(bad)
xchg
cmc
pop
or
cs
inc
pop
sbb
es
shl
and
mov
pop
inc
dec
js
and
fld
sub
inc
and
fstp
push
mov
out
rcr
ins
cld
add
jb
or
add
sbb
rol
cdq
push
pop
mov
sti
mov
and
add
add
and
into
fnstsw
mov
mov
fnstcw
adc
cmp
(bad)
adc
inc
or
(bad)
xor
test
int3
push
push
jo
ror
add
nop
dec
retf
xor
call
mov
lahf
test
(bad)
push
mov
mov
adc
pop
dec
rol
cmp
cli
xor
nop
cmps
adc
repnz
xlat
in
outs
or
mov
loop
xchg
or
retf
mov
pusha
(bad)
mov
or
popa
lods
das
mov
jbe
sub
jl
(bad)
and
and
xchg
gs
sbb
ins
inc
adc
stos
mov
in
pop
je
and
loopne
xchg
mov
mov
std
aas
ret
mov
xor
push
push
mov
mov
jp
cmp
aad
push
xchg
fisub
sbb
in
shl
xor
and
mov
jmp
pop
sar
push
sti
xchg
cmp
sbb
add
rcr
push
push
into
jecxz
mov
(bad)
jmp
pop
lea
mov
sub
add
jo
in
jbe
outs
mov
push
mov
add
pusha
and
mov
push
fnsave
mov
dec
adc
in
and
xor
rcr
fwait
movs
lods
adc
out
or
mov
jns
push
cmps
out
cli
add
adc
mov
ja
adc
cmp
pop
push
ffree
leave
push
dec
lods
adc
mov
pop
aam
push
je
or
bound
push
sub
push
pushf
push
pusha
sub
sbb
pop
cwde
inc
scas
and
sub
mov
adc
jns
adc
or
and
cmp
pop
jo
cmp
mov
mov
(bad)
cli
add
leave
repz
leave
adc
sbb
push
repnz
sbb
cmp
leave
ins
cmps
jne
adc
or
add
neg
das
pop
xchg
cmp
add
nop
out
mov
daa
add
and
mov
push
fwait
mov
add
jnp
add
xlat
add
dec
shl
int
add
or
out
aaa
cmp
push
stc
daa
dec
pop
cmps
stc
in
mov
adc
push
or
inc
fnstcw
fiadd
sbb
daa
push
adc
test
daa
push
push
inc
add
das
mov
jnp
inc
push
(bad)
jbe
aaa
(bad)
movs
mov
das
push
lahf
in
ficom
mov
daa
push
xchg
push
fwait
add
daa
mov
adc
or
lahf
adc
dec
out
mov
mov
outs
gs
adc
add
out
mov
add
sub
daa
mov
ss
push
push
add
in
inc
xchg
or
fstp
scas
xchg
pop
gs
outs
pop
push
xchg
gs
outs
add
js
aas
pop
iret
and
popa
daa
adc
mov
push
mov
lea
cmp
and
cmps
je
inc
das
es
paddusb
push
lea
cmc
inc
xchg
ja
daa
mov
mov
cmps
sbb
or
iret
pop
jae
mov
fcmovne
fimul
daa
pop
pop
daa
out
mov
sub
cmps
lods
popf
jbe
out
and
and
or
popf
cmp
add
jnp
fsub
daa
aaa
xchg
mov
addr16
inc
ficom
push
(bad)
cmps
fbstp
out
fbstp
mov
pop
aaa
aaa
mov
add
fidivr
and
and
out
dec
pop
add
and
inc
and
fdivr
aaa
push
daa
inc
aaa
in
and
xchg
out
pop
xchg
mov
add
daa
outs
pop
nop
ins
scas
lahf
pop
xchg
outs
outs
add
cmps
(bad)
nop
pop
aaa
aaa
pop
jnp
jae
test
cmps
jp
sub
inc
push
daa
stos
jnp
stos
inc
dec
daa
add
pusha
jnp
out
fld
es
xchg
(bad)
ja
xchg
dec
cmps
ins
out
ins
pop
in
out
scas
sbb
ss
xchg
aaa
daa
jg
ja
jae
out
iret
or
mov
fild
ret
ss
sbb
pop
fadd
adc
rcl
mov
neg
push
das
add
or
outs
jnp
sbb
addr16
fdiv
stc
xor
pop
jb
pop
add
pop
dec
xor
ja
mov
fbld
adc
and
outs
fbstp
pop
mov
mov
mov
clc
add
imul
xor
mov
and
and
aaa
dec
repz
sbb
test
adc
ret
scas
mov
or
mov
fiadd
sbb
xchg
(bad)
ss
sti
lock
and
adc
sub
mov
and
push
mov
cli
ret
or
hlt
add
inc
xchg
retf
jae
mov
adc
add
pop
adc
jmp
mov
bound
add
pmulhuw
push
test
fcom
pop
and
mov
dec
lea
pop
or
cli
pop
mov
adc
push
xor
and
sbb
push
dec
sbb
inc
movs
pop
rol
mov
jmp
cld
push
test
ret
pop
xchg
jp
dec
add
jle
idiv
(bad)
push
jns
les
loopne
ret
out
aas
adc
retf
cmp
jno
pop
mov
mov
out
jmp
sbb
add
mov
sbb
pop
jmp
pop
inc
xchg
cmp
adc
push
cmps
add
mov
stos
enter
dec
loopne
adc
movs
adc
push
popa
dec
sbb
dec
mov
or
fiadd
jmp
ds
ds
adc
pusha
enter
dec
rcl
sar
push
inc
add
jne
sbb
inc
mov
inc
adc
in
mov
imul
js
outs
dec
inc
sbb
shl
fpatan
jns
iret
es
sbb
sbb
in
push
call
adc
imul
dec
and
shr
push
mov
mov
stos
push
mov
(bad)
jnp
add
push
push
push
cmp
push
xor
pop
add
add
ror
push
xor
push
dec
lahf
mov
cmp
or
pop
sbb
push
cld
fs
mov
sub
mov
shr
sbb
lods
xor
cmp
cs
xchg
inc
inc
inc
inc
dec
jb
mov
dec
xchg
retf
dec
in
dec
dec
dec
dec
in
inc
adc
mov
ds
or
aas
inc
inc
jecxz
shr
inc
mov
pop
es
fnstenv
dec
jne
popf
add
daa
dec
lods
pusha
add
sbb
sbb
xchg
inc
hlt
clc
adc
add
cmp
pop
fcmovu
jbe
gs
add
inc
out
and
ja
adc
popf
inc
push
mov
enter
cmp
jb
dec
push
jbe
xor
(bad)
dec
mov
repnz
or
sbb
outs
sub
push
test
and
sar
or
(bad)
leave
xchg
dec
pop
sbb
adc
add
out
cmp
xchg
(bad)
es
cld
shr
sbb
push
cmp
nop
rcr
pop
out
ret
in
inc
mov
ds
xor
pop
clc
mov
ins
ror
dec
ret
fld
cmp
sub
(bad)
mov
ds
sahf
xchg
dec
sub
jns
daa
and
or
in
cmp
repz
retf
mov
iret
repz
mov
xor
out
push
div
in
loope
pop
mov
jg
jo
fisubr
push
test
movs
cdq
movs
cdq
add
add
movs
cdq
movs
cdq
add
fisub
inc
jmp
jno
mov
and
xor
ret
pop
jg
jo
in
mov
pop
add
test
fcomp
or
cmp
pop
loop
pop
push
addr16
fnstcw
(bad)
and
es
(bad)
shl
test
outs
inc
fidiv
shl
imul
xor
lods
test
add
and
push
inc
add
ror
lods
cs
mov
mov
les
or
sbb
test
out
add
cli
dec
aas
push
adc
jmp
pop
pop
or
xor
cmp
fnstenv
out
lock
fwait
imul
out
add
into
jne
out
sbb
out
or
sahf
jnp
out
adc
dec
sub
pop
mov
lahf
fldln2
or
repnz
xor
mov
fistp
fadd
add
fistp
or
int3
or
mov
jae
outs
jae
sbb
push
es
and
pop
movs
pusha
(bad)
test
scas
dec
out
fcmovu
mov
sahf
push
std
xchg
xchg
or
fisttp
sub
int3
cmps
sbb
mov
leave
ficom
sbb
adc
and
aaa
imul
sbb
add
mov
xchg
or
xor
in
aam
xchg
xchg
sbb
test
cli
cld
repz
sbb
repz
pop
mov
add
fucomp
adc
or
adc
pop
or
fnstsw
pop
inc
cmp
pop
adc
adc
cmp
push
out
and
jb
in
xchg
minps
jecxz
pop
in
fidivr
and
std
mov
shr
shr
imul
out
pand
mov
xchg
dec
push
test
cmp
add
(bad)
idiv
xchg
jmp
out
add
inc
push
xchg
xchg
pop
(bad)
xlat
mov
retf
pop
fild
scas
nop
and
fld
nop
retf
jecxz
jmp
stc
sub
fcmovb
jecxz
push
or
out
xor
jl
aad
dec
ss
maxps
pop
adc
adc
or
pop
mov
in
sub
popf
push
and
cld
mov
out
shr
sbb
push
xor
mov
xor
scas
loope
pop
fisttp
shr
aas
in
cmps
je
mov
stos
fst
shl
dec
retf
sub
imul
leave
mov
stc
fs
push
dec
clc
imul
ds
jg
test
sub
pop
add
fs
outs
sti
test
xchg
js
pop
imul
cmps
xor
clc
ds
leave
push
lea
mov
adc
push
lock
cs
lea
sub
daa
pop
push
(bad)
and
call
or
jb
dec
pop
and
add
or
call
cs
or
stos
lods
mov
ror
and
inc
jb
inc
or
mov
and
ffree
sub
cmps
cmp
sub
cmp
and
add
mov
inc
push
mov
mov
loopne
ficomp
xor
ret
adc
dec
in
and
and
fcomp
or
sub
in
or
(bad)
and
inc
aas
cmps
inc
adc
test
popa
mul
sbb
sahf
fimul
loopne
scas
js
add
pusha
int3
inc
clc
inc
xchg
sbb
mov
dec
test
dec
or
pop
(bad)
cmp
mov
sbb
mov
xor
push
add
fmul
pop
retf
pop
push
ret
add
or
mov
sbb
sar
xor
mov
imul
add
or
mov
ja
jmp
cmp
(bad)
add
aad
fisttp
ds
movs
out
pop
adc
or
inc
rcl
pop
xor
push
lea
push
cdq
push
add
inc
mov
cmp
and
cmps
mov
xor
sub
fs
xor
sbb
push
call
ficom
xor
mov
or
adc
sbb
out
das
sbb
push
and
jns
mov
shl
ds
xor
xor
rcl
xor
movs
rcr
xor
or
aaa
icebp
sahf
fst
xor
loopne
fsubr
fs
dec
lock
and
call
lods
adc
or
leave
xchg
add
mov
movs
je
lea
fist
ja
pushf
adc
or
xchg
leave
mov
or
sbb
pop
jecxz
push
out
fnstcw
sub
adc
je
(bad)
sub
out
push
add
data16
mov
and
cmp
jns
cmp
dec
pop
mov
repnz
add
and
jle
mov
inc
inc
push
add
add
fcom
mov
aaa
cmp
(bad)
mov
xor
movs
jb
inc
inc
xor
xor
xchg
arpl
inc
xor
or
bound
xor
xor
dec
movs
ss
ss
cmp
(bad)
xchg
mov
cs
ins
jge
push
push
mov
test
push
push
mov
sub
out
stc
xor
xor
ret
xor
dec
es
in
cld
repz
fisub
sbb
loop
pop
xchg
adc
inc
xor
pop
xor
rcl
inc
dec
pop
push
sti
aas
icebp
stc
cmp
repz
inc
out
sahf
cmps
imul
dec
iret
sar
xor
inc
jg
imul
push
inc
cmp
jns
out
arpl
dec
inc
or
sub
ret
jge
add
pop
ins
into
add
cmp
cmp
and
dec
sbb
sti
cdq
aam
cmps
jnp
mov
sub
or
dec
xchg
add
lds
inc
adc
dec
adc
(bad)
aad
je
add
mov
(bad)
rol
add
mov
sbb
addr16
adc
pop
xchg
or
push
or
sbb
aam
mov
adc
std
pop
xor
rcl
inc
fist
push
pop
je
sub
pop
or
inc
add
push
push
gs
xchg
adc
mov
fchs
in
dec
xchg
sbb
test
xchg
xor
(bad)
push
mov
pop
pop
test
mov
pop
jae
cmps
(bad)
mov
mov
imul
mov
sbb
nop
(bad)
dec
pop
jl
in
and
adc
fist
cmp
or
sub
push
lock
add
and
or
adc
stc
and
or
scas
inc
push
sub
clc
dec
nop
sahf
fmul
(bad)
sub
ins
push
jle
push
outs
add
jo
add
push
sti
ret
loopne
xor
inc
and
movs
pavgw
rcr
push
push
cmps
leave
xchg
pop
cdq
cli
pop
shl
jmp
pop
cmps
or
shl
cmp
ret
shl
sbb
lods
dec
test
cld
sbb
repz
cmp
mov
sub
clc
retf
add
call
pop
bound
push
dec
xchg
ja
pop
dec
nop
sbb
cwde
push
in
jo
shr
daa
adc
and
mov
lock
rcl
xchg
push
pop
inc
jmp
pusha
imul
test
and
mov
sub
movs
es
lods
xchg
add
add
lods
js
lahf
lahf
clc
adc
mov
mov
imul
adc
(bad)
jmp
outs
add
dec
sbb
cmp
xchg
jo
es
xchg
xchg
pop
call
out
mov
xlat
pusha
or
or
sahf
mov
or
add
xor
icebp
or
das
push
jae
jge
push
push
popf
pop
(bad)
and
add
cli
lahf
adc
xchg
aaa
outs
fdiv
jmp
ret
or
ins
add
sbb
nop
adc
xor
adc
or
fdiv
mov
push
dec
mov
adc
and
or
adc
or
and
lahf
div
je
rol
cmp
add
or
add
and
call
pop
bound
pop
shl
nop
int
xchg
add
push
inc
ja
loop
dec
xchg
sbb
mov
int3
in
ss
sbb
jb
mov
addr16
in
xchg
add
push
mov
xchg
mov
jmp
or
cli
fdiv
dec
dec
sahf
lock
mov
xchg
sub
sbb
sar
xchg
cmp
push
call
push
sbb
arpl
push
aas
dec
dec
xchg
mov
call
mov
push
inc
push
call
jmp
mov
and
fisttp
mov
shl
dec
rcl
popf
add
xchg
or
push
push
push
jmp
lock
push
mov
xor
push
inc
xchg
sub
adc
inc
nop
mov
fldlg2
dec
sbb
out
sti
sub
dec
lock
inc
std
ds
pop
cmp
push
sbb
loop
lods
xor
rcl
xor
sti
jmp
test
retf
adc
jo
or
popa
fbld
lods
iret
or
pusha
add
dec
loope
enter
cli
or
mov
pop
(bad)
jl
pop
inc
sub
out
or
pop
mov
or
fcmovu
sar
and
daa
pop
popf
out
push
popf
outs
pop
sbb
jne
lods
pop
cmp
test
(bad)
mov
inc
xchg
mov
push
icebp
push
sbb
shl
out
add
mov
popf
addr16
mov
in
lds
(bad)
inc
test
or
jle
adc
daa
sbb
push
sub
xchg
cmp
mul
pop
cmp
inc
in
bound
sub
inc
push
xor
sub
xchg
cmp
or
and
pop
shl
push
stos
and
adc
pop
loope
mov
xor
pop
ins
iret
sbb
les
dec
cmc
fmul
jle
sub
fcomp
pop
mov
pop
sub
xchg
adc
pop
je
(bad)
cli
push
leave
xor
add
sahf
pusha
mov
data16
(bad)
jmp
fnsave
aam
and
pop
cmps
mov
mov
gs
jo
push
sub
or
inc
pop
cmps
sbb
push
int3
out
dec
jg
sbb
leave
sti
cld
add
fistp
mov
xor
frstor
test
and
add
add
daa
mov
lods
push
psrld
les
popa
fmul
push
or
push
sbb
out
rcr
add
rcl
mov
and
mov
std
xchg
ss
sbb
push
push
fcomi
cmp
mov
je
test
dec
push
stos
sbb
in
push
mov
hlt
xor
pop
popa
adc
es
xor
pop
pop
cmp
cmp
add
sbb
dec
cmp
xchg
(bad)
mov
cmp
add
adc
push
cmp
cld
or
xor
jnp
xor
aas
jno
(bad)
sahf
popa
jg
pop
inc
(bad)
pop
xlat
cli
imul
cmp
sbb
mov
je
fidivr
pop
push
add
cmps
fwait
pushf
mov
inc
jmp
clc
leave
or
cmp
add
adc
outs
sbb
leave
(bad)
std
and
jg
test
adc
ins
sbb
mov
sbb
push
jmp
pop
test
inc
dec
pop
(bad)
sbb
jo
or
mov
movs
jb
(bad)
mov
imul
cmp
pusha
or
or
xor
push
mov
inc
cmc
(bad)
cmc
inc
or
dec
pop
mov
cmc
add
push
aam
add
loope
(bad)
lods
push
shl
sti
sti
or
jo
imul
popa
push
call
test
push
dec
mov
cmp
cld
add
or
cmps
dec
adc
lahf
enter
add
mov
aas
xor
fdivr
sti
add
pop
push
pop
xor
pop
mov
sti
sti
sbb
frstor
mov
ret
add
cmps
cs
xor
mov
add
les
pop
xor
cmp
inc
hlt
jl
adc
or
adc
mov
out
cmp
rcl
cmp
dec
sbb
lds
call
arpl
dec
lea
xor
cli
popa
mov
imul
xor
ins
dec
adc
inc
pop
add
sub
retf
adc
mov
fdivr
sar
add
mov
add
(bad)
cwde
(bad)
adc
jb
pop
dec
sub
push
mov
je
lods
stos
(bad)
adc
adc
xchg
jbe
mov
lods
imul
je
fdiv
cdq
and
add
add
mov
std
add
test
lock
mov
ret
mov
adc
push
adc
or
mov
ss
loope
sbb
mov
cmps
fsubp
sub
dec
popa
sbb
or
stc
dec
cld
jno
in
inc
enter
ins
and
pusha
shrd
mov
lea
pop
or
add
iret
in
pop
or
sbb
nop
add
add
jns
add
adc
push
and
mov
sub
mov
sub
mov
push
dec
push
mov
sbb
add
add
xor
sti
push
xor
push
in
ret
dec
ret
adc
add
rol
xchg
or
mov
les
jo
std
stc
xor
(bad)
jb
lds
imul
inc
sub
or
call
add
sub
mov
(bad)
cmp
push
test
xor
fs
adc
cmp
xchg
adc
call
jle
or
ins
pop
sar
xor
pusha
jge
sbb
fwait
or
repz
fwait
push
fwait
mov
dec
mov
xchg
xchg
cdq
in
mov
out
shl
hlt
lods
inc
loope
(bad)
scas
dec
jecxz
in
cmp
loopne
pop
push
pusha
(bad)
or
mov
and
add
imul
test
addr16
or
hlt
xor
mov
xchg
repz
push
retf
mov
or
inc
fwait
sub
mov
adc
ss
pushf
sub
data16
imul
cmp
mov
rcl
sub
popa
iret
pop
lea
mov
mov
sti
add
call
xchg
jp
repnz
push
outs
sbb
neg
les
fcmovbe
inc
enter
cld
call
add
cmp
pop
pop
xchg
cld
js
cld
call
mov
ss
aaa
sbb
imul
call
pop
push
call
ins
push
imul
jl
icebp
cld
jmp
(bad)
or
jnp
or
or
jns
mov
cli
cmc
cdq
jl
xchg
ss
and
aas
sti
adc
cld
and
push
push
addr16
jbe
cmc
lea
xchg
pop
push
ja
xchg
out
mov
jmp
loope
dec
jge
cmc
add
jmp
lds
scas
(bad)
push
inc
pop
call
fmul
cmps
mov
xor
sub
or
adc
pop
ror
jmp
jno
sbb
in
outs
jnp
fsub
scas
fwait
in
and
mov
push
call
push
(bad)
add
lods
and
adc
xchg
xchg
and
cld
ss
inc
pop
fcomp
les
mov
enter
mov
repnz
int
pop
push
pop
pop
sub
and
add
daa
js
inc
sbb
fwait
mov
jg
lss
cmp
stc
pop
and
not
imul
or
push
jmp
and
or
scas
shl
adc
ss
test
cdq
mov
push
cs
dec
push
add
jne
add
jbe
jmp
mov
mov
int3
jle
sbb
in
in
push
jp
movs
push
outs
std
imul
bound
ret
inc
mov
mov
movs
sub
and
stc
jmp
pop
popw
repnz
sti
aaa
push
fwait
ins
outs
adc
inc
movs
jae
or
xor
and
cmp
je
lods
mov
sub
mov
and
shl
or
sbb
rcr
cmp
xor
adc
fdivr
xor
je
call
cmp
xchg
jbe
into
je
xchg
inc
mov
jo
inc
inc
dec
aaa
adc
sub
push
lods
fwait
ja
xchg
add
cmps
dec
retf
call
(bad)
or
push
push
sahf
dec
dec
mov
out
or
fiadd
pop
loope
dec
std
or
pusha
loope
cmp
lock
and
or
test
xchg
inc
mov
lock
enter
cmp
call
or
add
call
mov
push
pop
jne
mov
or
cmp
jle
rol
adc
pop
mov
aaa
xchg
or
push
sub
cmp
mov
cmp
or
loopne
push
aad
fcom
sar
cmp
in
add
cmp
inc
add
int3
mov
inc
pop
cmp
es
mov
pop
jle
cmp
xor
adc
imul
iret
jle
sbb
or
xor
sub
repnz
fs
jno
push
mov
scas
push
mov
std
outs
or
je
jmp
call
xor
daa
inc
bound
or
test
push
nop
dec
pop
cwde
push
dec
cmps
push
jle
and
ss
add
jae
fnstenv
imul
stc
or
sbb
mov
pushf
out
mov
inc
lds
sbb
adc
fistp
fwait
xchg
push
sub
test
push
add
adc
xor
cmps
jp
rol
sbb
ret
sbb
add
cmps
mov
mov
jg
nop
push
call
xor
sub
xchg
sub
and
pop
popa
and
cdq
push
xor
cmps
loope
cmp
jmp
push
js
jmp
inc
jmp
xchg
mov
imul
aad
and
jl
out
jle
adc
sbb
je
sti
jns
(bad)
push
push
(bad)
jmp
pop
cmp
nop
and
call
lahf
and
or
push
sub
dec
fstp
xchg
mov
movs
adc
dec
test
dec
jmp
cli
or
popa
add
or
mov
fisub
test
push
jnp
sbb
ds
jns
imul
inc
pop
inc
adc
dec
jns
push
pop
push
fisubr
mov
mov
jmp
imul
outs
call
retf
jmp
pop
add
sahf
ins
adc
ja
cmp
jne
popf
sub
push
cdq
in
loopne
and
and
inc
dec
dec
adc
ret
and
add
fistp
and
cmps
add
push
adc
test
(bad)
sbb
mov
add
dec
movs
iret
add
add
pop
adc
ror
lods
outs
sbb
or
and
jmp
cs
jle
and
fdivr
sbb
daa
pusha
pop
dec
enter
adc
or
fdivr
push
xor
mov
je
lea
pop
enter
mov
sbb
inc
mov
ret
pop
sbb
shl
adc
dec
xor
fwait
arpl
push
mov
cli
or
cmp
inc
stc
xor
push
call
inc
jp
push
(bad)
mov
popa
nop
and
mov
sbb
pushf
mov
mov
push
inc
adc
pop
cmp
(bad)
adc
jl
xchg
dec
push
cs
push
xchg
mov
push
push
enter
pop
das
dec
shr
inc
xor
adc
or
add
aas
out
ret
loope
and
ds
or
mov
jmp
dec
nop
movs
lods
dec
xchg
jne
rcr
add
or
push
aas
add
imul
es
add
and
xchg
jl
imul
xchg
mov
pushf
call
aas
xchg
mov
jmp
popf
jne
adc
jae
imul
mov
mov
inc
mov
imul
xor
adc
jnp
pop
cmp
cdq
push
mov
add
xor
xchg
jge
sub
stc
xor
add
fild
daa
sub
adc
(bad)
push
jg
nop
lahf
or
jb
das
cmp
retf
xor
sahf
stc
sub
and
add
das
aam
dec
add
xor
nop
jbe
hlt
out
xor
test
daa
fst
mov
cmps
std
dec
enter
pop
sbb
and
ins
cmc
cld
jb
push
and
jb
push
xchg
mov
ja
jecxz
add
dec
mov
add
jp
lahf
repnz
push
repnz
out
jbe
loop
adc
adc
mov
imul
mov
xor
je
pusha
push
ret
dec
mov
pop
dec
call
div
lods
pop
xchg
push
add
jmp
jle
mov
add
add
sahf
jbe
sbb
xor
mov
sub
xor
adc
sub
xchg
cmp
push
push
je
mov
rcr
cdq
das
mov
inc
pop
mov
push
push
pop
mov
pushf
add
stos
mov
out
sbb
xchg
and
imul
push
mov
push
jns
adc
adc
mov
and
jmp
mov
xor
inc
dec
sbb
xchg
inc
addr16
dec
add
push
xor
mov
jge
xor
inc
add
inc
pop
stos
push
dec
mov
jge
xchg
retf
mov
add
outs
in
xor
mov
in
in
pop
mov
push
mov
xchg
or
add
inc
nop
pop
and
mov
mov
push
mov
mov
aaa
inc
loopne
sbb
adc
adc
or
cmp
(bad)
or
add
mov
es
xchg
adc
mov
and
int
pop
int3
push
sbb
enter
sbb
and
or
cmp
test
out
(bad)
and
les
(bad)
icebp
and
loope
sub
push
xlat
lds
aas
loope
pop
sbb
fsubr
cmps
pop
add
ja
int
push
call
repnz
je
daa
mov
pop
(bad)
jg
or
push
push
xchg
mov
mov
or
and
cmp
pushf
nop
icebp
cmp
call
xor
and
int
push
out
jno
sub
loopne
stos
add
mov
pop
test
push
and
xchg
adc
push
arpl
nop
push
outs
in
and
scas
aaa
mov
cs
push
arpl
push
imul
movs
cmp
ja
sub
push
pushf
imul
xchg
jmp
(bad)
mov
or
fist
push
shr
and
ds
ret
aas
cdq
xchg
cmp
add
pop
(bad)
pop
xor
(bad)
adc
jle
push
mov
jae
adc
(bad)
xchg
sub
mov
and
push
mov
or
adc
add
pop
sub
fstp
loopne
inc
mov
cs
cmp
pop
cli
mov
cmp
xlat
cmps
int
adc
inc
add
enter
push
ja
mov
lidtd
(bad)
jmp
dec
rcl
xchg
pushf
mov
jbe
imul
fld
test
mov
push
mov
sbb
call
mov
mov
mov
out
lock
xchg
fdiv
test
js
mov
cdq
arpl
jbe
stc
sub
test
adc
out
addr16
jmp
aam
xor
sub
out
fld
retf
add
xchg
movlps
and
stc
mov
push
adc
aad
jmp
add
push
xchg
sti
cld
call
jbe
lea
mov
iret
imul
dec
push
mov
or
hlt
mov
jb
sub
das
mov
pop
test
mov
call
(bad)
fcomp
test
push
jmp
clc
push
sub
or
outs
cmp
mov
push
dec
mov
sub
jp
jmp
leave
or
push
cmp
jg
inc
je
cwde
icebp
rcl
or
push
rol
xor
xchg
cli
pop
sbb
sub
add
add
add
pop
mov
push
or
cld
xchg
cmc
or
xchg
test
add
xchg
rcr
je
call
lahf
mov
fsub
jns
xor
push
push
and
sub
retf
sub
sqrtps
icebp
xchg
xlat
mov
mov
jmp
cmp
in
pop
mov
shr
pop
add
push
jne
or
add
cmp
ret
adc
fs
dec
sar
scas
add
repnz
push
mov
cld
or
ficomp
imul
xor
and
xchg
xchg
test
cdq
lahf
pop
xchg
pop
sbb
dec
add
call
xchg
scas
or
or
pop
movs
or
xchg
xor
jg
pop
push
sbb
or
aam
mov
ret
fadd
and
mov
push
adc
sub
adc
mov
cmps
jg
xor
and
mov
loope
and
pop
cmp
outs
push
inc
mov
in
call
and
fmul
adc
or
cmp
sahf
mov
sbb
call
dec
xor
sbb
push
sbb
pop
add
enter
pop
aaa
sbb
inc
clc
xchg
or
je
call
xchg
push
sub
mov
sbb
inc
push
adc
cld
mov
pop
mov
ss
xadd
and
(bad)
sbb
jg
call
dec
or
sub
rol
dec
mov
ret
add
sub
test
jmp
and
pop
xor
int
adc
jb
mov
dec
mov
test
hlt
imul
jno
inc
cmp
js
dec
mov
les
cs
std
mov
add
pop
(bad)
cmps
xor
sbb
call
rol
ins
shr
sbb
xchg
lods
pop
(bad)
sbb
adc
sub
or
repnz
or
jns
inc
xchg
outs
mov
mov
rcr
sub
dec
pop
dec
mov
arpl
jno
add
and
or
xor
retf
iret
pop
stos
inc
cmp
popa
or
or
leave
cmp
push
sbb
dec
add
les
inc
adc
adc
xor
js
popa
ins
inc
xchg
add
rcr
stos
adc
outs
cmc
cdq
dec
mov
mov
fstp
and
dec
xor
xor
test
jns
cmps
pop
pop
jae
adc
idiv
push
mov
or
and
mov
xchg
xchg
add
adc
sbb
inc
add
inc
jmp
jmp
and
cmp
icebp
mov
and
sti
sbb
lods
shl
or
mov
retf
mov
push
test
sub
popa
cmp
and
adc
cmps
mov
mov
pusha
or
out
daa
pop
inc
(bad)
push
sub
iret
ret
daa
jmp
lock
and
aas
inc
loope
add
js
sub
push
(bad)
mov
nop
es
daa
aam
lods
leave
and
mov
or
movs
push
xchg
push
push
call
pop
shld
sahf
push
lahf
and
push
push
mov
mov
jg
shr
enter
adc
or
rcl
xchg
and
pmulhw
sub
jno
sub
popf
or
sbb
mov
mov
xor
xor
add
sub
retf
and
adc
(bad)
cmp
adc
mov
or
push
repz
ds
dec
sbb
popf
xchg
gs
or
ins
cmp
pop
mov
mov
sub
jne
jmp
call
mov
pop
rcr
cmp
sub
add
cmc
push
add
fidiv
cli
les
mov
ja
mov
push
mov
inc
hlt
aam
loop
mov
jnp
in
adc
sub
and
enter
mov
hlt
lahf
xchg
cmp
sub
lea
inc
clc
push
inc
jb
leave
and
(bad)
mov
add
or
mov
jmp
sub
ror
les
sbb
lods
xor
or
sar
mov
add
sub
jmp
and
pusha
jne
push
xchg
adc
fstp
lods
mov
(bad)
xchg
jmp
add
stc
mov
jle
add
(bad)
push
(bad)
stc
sub
call
adc
and
mov
mov
icebp
adc
push
adc
mov
mov
int
cmp
xchg
ret
or
es
inc
fcom
dec
frstor
clc
cmp
inc
adc
movs
mov
cmp
arpl
ds
mov
pop
cs
dec
fstp
test
and
ds
mov
inc
dec
push
jne
jmp
das
sbb
push
xor
or
adc
cmp
out
stos
popa
ins
imul
dec
retf
pusha
ret
fs
cmp
fisub
cmps
outs
xchg
pusha
icebp
lock
dec
or
adc
xchg
movs
mov
and
xchg
and
xchg
inc
jns
les
and
cwde
bound
shl
sbb
cld
mov
jnp
imul
add
or
sub
add
or
or
lds
mov
pushf
cld
and
push
call
sbb
adc
jns
mov
test
sub
jnp
repnz
or
push
adc
or
xor
xor
add
lahf
int3
mov
popf
ror
clc
cdq
pop
ja
fisttp
shl
fwait
dec
mov
enter
mov
cwde
outs
dec
pop
sbb
pop
sar
scas
jge
repnz
add
cmc
mov
stc
stc
and
mov
add
stc
es
xor
pop
or
add
test
fild
(bad)
pop
les
dec
pop
ror
sbb
pop
pop
sbb
inc
push
jecxz
mov
mov
lea
and
inc
xor
push
icebp
adc
add
mov
xor
das
xchg
loope
jb
ret
mov
call
xchg
push
push
dec
lahf
push
cmp
add
fwait
stc
mov
imul
les
pop
push
nop
xor
dec
or
adc
in
mov
jb
fsub
cld
daa
push
rcl
sub
adc
shr
or
xor
adc
and
jbe
sbb
test
call
rol
dec
shr
push
rcl
arpl
mov
call
mov
cmp
lea
push
mov
adc
mov
mov
lods
add
push
popa
and
cmp
and
push
fcomp
sub
adc
pop
sbb
inc
dec
pop
fst
adc
mov
add
nop
pop
adc
mov
cmp
nop
and
mov
imul
inc
mov
adc
(bad)
add
icebp
out
add
sbb
and
or
xlat
push
adc
or
or
mul
imul
add
sbb
jg
add
fwait
push
xchg
xor
sub
aam
scas
std
add
mov
cmp
jp
call
adc
daa
ret
lahf
mov
add
(bad)
jnp
jnp
and
sub
xor
shr
and
sbb
stos
or
sub
iret
xchg
test
(bad)
adc
lahf
add
add
stc
sbb
data16
sub
call
add
cmps
pop
fcmovnb
stos
dec
push
jnp
faddp
mov
fsub
aaa
loopne
and
add
jg
add
adc
or
sahf
pop
add
xchg
inc
lahf
jne
ds
in
fwait
cli
cmps
pop
das
dec
cmp
out
and
jnp
cmp
mov
inc
ja
mov
cdq
push
test
sub
and
sub
js
rcl
jbe
sub
je
sti
stos
lock
fsubrp
adc
and
mov
je
or
loope
sahf
pop
mov
push
bound
xchg
xchg
ret
addr16
push
outs
call
sub
cmp
mov
mov
jmp
mov
fisttp
shl
add
mov
dec
pop
cmp
enter
fwait
or
jb
jo
cmps
xchg
dec
fnstenv
push
adc
ror
pop
sbb
data16
ins
mov
sub
ds
cmp
fadd
rcl
dec
jg
xchg
or
mov
add
movs
push
pusha
or
mov
mov
clc
movs
lock
xchg
mov
and
push
(bad)
in
loope
ror
outs
enter
inc
pop
cmps
ficomp
punpckldq
data16
in
adc
sti
jmp
in
push
hlt
in
pop
shl
dec
fnstenv
inc
out
fsubr
out
and
and
aam
rcl
icebp
mov
ins
jle
jae
add
add
fistp
call
jecxz
sbb
neg
daa
push
sub
dec
(bad)
scas
adc
add
pand
push
cmps
or
neg
sbb
(bad)
sub
or
fdivrp
adc
sbb
dec
out
add
mov
sub
push
mov
ds
xlat
mov
rcr
or
jbe
inc
cmc
rcr
in
xor
aam
sub
mov
cmps
popf
into
or
add
or
int
fiadd
ror
paddq
out
into
xor
sbb
or
cdq
xor
test
in
xchg
ins
addr16
jo
(bad)
pusha
xor
rcl
xchg
inc
xchg
repnz
in
inc
ret
mov
ret
std
dec
(bad)
outs
push
push
sub
adc
xchg
aam
aam
push
push
adc
aam
aam
mov
dec
repz
jg
sar
jg
jg
ret
cli
or
lds
jl
xor
and
sub
jecxz
fcmovb
sub
xor
add
sub
dec
push
fmul
repz
xor
adc
push
repz
push
sahf
and
shl
ins
and
push
sahf
iret
jecxz
xor
fsubr
push
sahf
iret
repz
in
addr16
repz
iret
repz
jb
jge
cmc
outs
push
cld
cmp
sti
push
out
jp
or
ds
push
(bad)
lahf
dec
in
ja
(bad)
ror
xchg
out
jl
dec
pusha
(bad)
jg
into
clc
xlat
push
shl
loopne
cmc
push
cs
xchg
aam
and
pop
push
adc
dec
mov
adc
or
mov
cmp
xchg
inc
fistp
mov
inc
inc
retf
add
fld
retf
or
mov
out
adc
outs
loop
rcl
sub
fcomi
jns
(bad)
add
repz
out
aam
out
dec
div
shl
pop
outs
out
cwde
idiv
jmp
push
jo
sbb
rcl
or
add
dec
idiv
loop
sub
and
data16
ss
xor
jg
push
jno
push
mov
adc
add
xchg
in
shl
cmp
mov
inc
rcl
dec
xor
cmp
call
adc
stos
mov
sbb
retf
mov
out
sahf
dec
mov
in
rcl
in
hlt
ffree
shl
and
cmp
mov
outs
loopne
retf
retf
fcomp
dec
in
repz
sbb
jmp
xor
pop
adc
pop
repnz
nop
adc
push
test
push
hlt
int
and
xor
or
mov
adc
or
dec
add
or
jno
mov
int
xchg
out
pushf
adc
out
fsub
repnz
sub
jb
out
hlt
aam
push
sahf
cmps
aad
(bad)
cmc
out
fst
and
outs
icebp
and
cmp
fsubr
cmp
aam
aad
sub
sbb
repnz
outs
and
gs
jb
sbb
js
test
test
and
push
and
cmp
sub
fs
and
or
sub
inc
adc
mov
and
mov
and
bound
retf
jp
idiv
sub
push
jns
fdivp
xlat
test
push
out
sbb
loope
out
outs
cli
and
(bad)
fucom
sub
(bad)
sbb
movs
imul
adc
xor
mov
xor
push
leave
jmp
or
and
int
mov
sub
cmp
in
push
inc
and
and
xor
xchg
out
int3
push
stc
out
hlt
add
sub
out
push
sub
clc
shl
lock
adc
jns
mov
repz
rcr
dec
test
mov
imul
inc
call
es
icebp
bound
outs
ret
or
repnz
cs
xlat
call
rcl
stc
sbb
clc
and
and
sub
rol
cmp
out
cld
shl
test
ret
sbb
dec
jae
enter
push
jmp
sar
sbb
add
movs
repnz
int3
retf
clc
(bad)
push
and
push
sahf
dec
retf
icebp
retf
xchg
retf
ret
adc
sbb
aad
xor
push
sahf
cmps
test
lock
xchg
scas
test
and
int
adc
sub
pusha
repnz
add
and
call
inc
loopne
aam
retf
ror
xor
fst
cli
rcl
repnz
cmp
sub
stc
out
retf
dec
or
outs
fisub
outs
(bad)
cmp
stc
into
or
icebp
ficomp
int
pushf
xchg
sub
push
dec
jae
cmp
dec
jo
lock
iret
clc
rcl
pop
fist
mov
add
jo
or
dec
ror
sub
adc
push
mov
lahf
xor
inc
rcl
pop
jg
sub
push
inc
push
outs
xlat
arpl
adc
cdq
xchg
cmp
adc
imul
or
xchg
add
adc
(bad)
arpl
in
stc
jae
push
jo
jno
xchg
nop
test
lea
ror
fwait
sbb
sbb
int3
lea
add
lock
jo
call
mov
imul
add
punpcklbw
mov
xchg
lea
into
inc
call
call
xor
movs
imul
cdq
nop
cmps
dec
dec
push
push
call
fs
ins
jo
js
mov
movs
jl
mov
lea
scas
lods
fdiv
xor
jmp
int
in
dec
shl
mov
shl
xor
es
enter
sub
xor
add
add
mov
ror
xor
rol
jge
test
inc
adc
xor
xor
and
nop
shl
and
test
pushf
xor
sub
call
add
adc
xor
nop
mov
retf
mov
mov
dec
and
add
out
jbe
es
adc
aaa
xchg
adc
out
adc
aam
cdq
in
cmps
cmp
aas
mov
sbb
ins
xor
cmp
jle
cmp
and
mov
test
shr
mov
sbb
ss
shl
and
xor
repz
clc
and
push
adc
xchg
rcr
stc
xchg
xchg
add
add
xlat
cdq
add
sub
stos
or
xor
or
or
out
rcr
xor
es
inc
lds
mov
push
push
cmp
pushf
cld
mov
and
and
pop
cs
push
push
cmp
jmp
xor
add
jmp
pop
adc
iret
jnp
add
xor
shl
sbb
and
shl
shr
sub
and
shl
xor
sub
xor
iret
shl
cmp
cmp
cmc
mov
inc
sbb
or
push
sub
sub
or
(bad)
call
xchg
and
mov
gs
and
cmp
iret
sti
sar
(bad)
push
movs
(bad)
repz
ret
sbb
add
pop
fwait
dec
sbb
clc
(bad)
call
aad
sbb
inc
add
mov
mov
(bad)
call
adc
xor
mov
aad
jge
push
outs
mov
je
mov
(bad)
(bad)
call
cmp
mov
xor
fcomp
je
fwait
rcl
icebp
sahf
shr
jecxz
or
(bad)
dec
xchg
out
mov
mov
gs
lods
ja
mov
inc
shr
pop
outs
sub
sub
stos
test
sti
inc
mov
mov
(bad)
(bad)
(bad)
call
sbb
stc
jbe
fbld
push
push
ds
adc
mov
ins
(bad)
xor
enter
in
(bad)
mov
(bad)
jg
mov
repz
(bad)
call
cmps
aad
add
push
arpl
push
(bad)
(bad)
(bad)
push
push
or
sub
das
rol
or
pop
cmp
sbb
in
sub
pop
cld
ins
sub
(bad)
mov
xchg
popf
adc
scas
test
gs
ja
mov
scas
in
(bad)
(bad)
(bad)
inc
leave
ret
xor
jb
fs
dec
mov
xor
dec
data16
outs
xor
sar
ret
push
push
mov
push
out
(bad)
(bad)
(bad)
call
sbb
xchg
rcl
test
cdq
(bad)
sub
jno
test
mov
adc
rcl
mov
(bad)
(bad)
mov
push
stos
inc
push
or
cdq
jmp
fisttp
daa
test
fwait
loope
(bad)
(bad)
(bad)
push
lds
mov
dec
stos
fmul
jecxz
ja
retf
mov
outs
(bad)
(bad)
(bad)
jmp
push
out
or
outs
arpl
mov
in
cmp
add
dec
dec
cli
(bad)
mov
push
arpl
nop
jmp
ins
(bad)
(bad)
(bad)
call
adc
mov
jb
bnd
(bad)
pushf
popa
es
shl
mov
xchg
push
jmp
int
jge
jmp
jge
mov
addr16
cmps
aad
mov
stos
mov
scas
or
adc
inc
sbb
xor
mov
and
ja
sub
stos
retf
mov
sahf
cmp
or
sbb
pop
icebp
(bad)
ds
mov
jle
cld
pushf
sub
in
cli
(bad)
cmp
pop
inc
dec
mov
inc
ins
push
or
xchg
mov
inc
xor
(bad)
mov
mov
ins
bound
jns
dec
or
jmp
push
push
xor
scas
or
arpl
aam
loope
stos
cmp
or
out
inc
push
mov
dec
dec
pusha
jae
push
sbb
push
cmp
fwait
ins
mov
sub
push
sub
stos
mov
nop
test
pop
fstp
jae
imul
jbe
push
cvttps2pi
push
mov
pop
das
sbb
and
sub
cwde
movs
pop
pop
das
cmp
mov
rol
(bad)
push
(bad)
jle
popa
retf
into
mov
sbb
push
lods
mov
push
mov
sbb
rcr
jecxz
repnz
fcmovbe
add
mov
mov
dec
je
inc
sbb
and
fcom
pop
push
xchg
xor
fstp
cmp
rol
or
sahf
movs
sub
lods
repnz
mov
cmp
and
dec
push
mov
sbb
ins
sti
scas
or
fisub
ds
and
sbb
in
xchg
inc
pop
imul
dec
push
add
xor
pop
loop
fwait
es
pop
into
adc
add
out
inc
cmps
lods
or
jl
neg
nop
and
sti
pop
mov
mov
inc
cmp
mov
pushf
test
mov
add
mov
test
mov
or
pushf
pop
or
push
cmps
sbb
sbb
push
mov
lea
fimul
sar
add
add
sub
out
out
or
(bad)
into
or
rol
mov
sub
rol
sahf
xchg
add
or
sub
jbe
or
rcr
inc
sub
rol
ss
add
es
push
rol
sub
push
inc
pop
sbb
imul
out
sbb
rcr
into
(bad)
sbb
rol
mov
jo
add
cmps
sahf
xchg
rol
sbb
xchg
pop
sbb
jbe
popw
sbb
rcr
inc
sbb
rol
ss
add
es
push
pop
push
pop
sbb
push
sbb
add
test
(bad)
xor
hlt
xchg
dec
mov
dec
jp
mov
xor
add
jbe
push
adc
and
mov
and
mov
cmp
inc
xlat
test
jle
pop
aad
call
jae
push
adc
xor
out
test
cmp
pop
fisubr
inc
dec
mov
xor
push
retf
jae
pop
cmp
xor
in
out
(bad)
xor
ror
dec
aas
jne
dec
mov
ins
sbb
jmp
sti
mov
add
add
into
xchg
adc
test
std
imul
addr16
or
(bad)
sbb
xchg
lahf
repnz
stc
icebp
call
sbb
iret
out
into
jmp
ficom
and
scas
call
popf
xor
into
into
scas
ror
add
es
adc
or
aad
pop
adc
int
xor
cmp
cdq
in
jb
or
add
sbb
jb
bound
cmp
adc
sbb
add
xor
dec
push
cwde
(bad)
pop
or
add
pop
jb
rcl
xchg
and
or
push
scas
and
rcr
pop
pushf
or
push
mov
xchg
sbb
or
lock
jb
out
jb
loopne
adc
popa
sbb
in
clc
dec
adc
and
or
sbb
leave
add
pop
inc
mov
inc
mov
inc
inc
inc
pop
movs
fiadd
and
mov
shl
adc
adc
cmp
xor
nop
or
sub
pushf
rcr
mov
dec
retf
and
adc
rcl
mov
in
(bad)
arpl
pusha
inc
iret
pusha
fdivr
pusha
lods
sub
repz
iret
ror
stc
cmps
rcr
into
stc
xor
ror
ins
xchg
shl
push
aam
mov
add
fdivp
loopne
sub
or
jb
xor
nop
jl
and
jmp
push
xchg
and
push
or
xchg
cmovl
adc
and
sbb
dec
push
and
xor
xor
add
mov
or
cmp
and
leave
in
sub
pop
cmp
pop
sub
sbb
sbb
mov
cmp
push
xor
sbb
arpl
mov
daa
out
aas
inc
rcl
cmp
sbb
sbb
dec
sahf
add
pop
add
and
mov
or
inc
sub
and
and
enter
dec
scas
adc
sbb
inc
dec
sub
xor
mov
adc
xor
dec
test
and
dec
nop
add
cmp
dec
stos
inc
sbb
cmp
adc
inc
out
cmp
push
es
xchg
sbb
push
adc
lods
stos
add
lods
stos
add
add
add
add
push
stos
or
jle
(bad)
stos
or
xchg
stos
or
mov
xchg
icebp
(bad)
stos
or
sahf
add
stos
or
dec
data16
les
or
mov
add
and
test
enter
adc
adc
rol
mov
inc
lods
fadd
push
push
mov
loopne
add
xor
add
and
repnz
add
nop
stos
add
push
push
add
(bad)
shr
push
and
or
popa
push
test
and
add
add
les
add
add
daa
popa
push
dec
push
jno
add
and
das
and
sub
jge
test
jb
outs
push
outs
push
cmp
mov
push
cmp
cmp
push
mov
pop
sub
push
ins
push
dec
cmp
push
push
(bad)
sti
xor
push
(bad)
mov
sbb
jo
sbb
leave
mov
sbb
fadd
mov
sbb
aam
xchg
adc
movs
pop
dec
popa
fistp
adc
cmp
xchg
inc
sahf
pusha
std
mov
inc
xor
push
retf
rcl
dec
imul
(bad)
out
in
inc
push
inc
adc
int3
fadd
nop
retf
(bad)
jmp
inc
scas
inc
and
xor
sti
iret
and
movs
(bad)
out
rol
retf
jecxz
sti
out
repnz
cmp
rol
in
adc
std
cld
imul
or
cmc
adc
adc
shl
nop
push
inc
ins
pop
inc
push
pop
movs
pusha
inc
outs
jns
push
xchg
inc
jo
inc
cmp
add
mov
jg
dec
mov
sbb
stc
dec
lea
xchg
jmp
push
push
xor
aas
movs
push
sub
jl
ret
jle
inc
in
push
adc
or
fwait
cli
xchg
lahf
pop
fist
mov
fcomp
fs
(bad)
js
and
jge
xchg
add
xlat
mov
lds
(bad)
loopne
xor
lea
sbb
repnz
sti
cmp
dec
lahf
mov
lahf
loopne
adc
add
jl
test
test
retf
fsub
add
add
sbb
add
call
imul
repz
hlt
add
add
aam
mov
adc
jle
cmp
(bad)
pusha
cmp
pop
in
mov
sbb
push
jo
cli
xor
mov
xor
push
xor
jbe
cld
sbb
rol
fucom
inc
or
rcr
adc
data16
pop
outs
not
push
jl
(bad)
xlat
or
fimul
cmp
mov
into
adc
sbb
sub
es
repnz
or
add
arpl
xor
cmp
adc
ret
jb
loope
fisttp
or
inc
add
sbb
loopne
div
cmp
push
scas
ret
cmp
xor
js
sbb
adc
add
sbb
mov
and
(bad)
mov
push
sti
pop
sub
cmc
out
add
pop
in
(bad)
adc
mov
lock
jecxz
push
bound
fsubr
enter
sahf
xchg
pop
stc
loop
clc
or
dec
add
inc
push
sub
adc
xor
push
sbb
stc
or
js
push
xor
sbb
and
cdq
nop
test
sbb
or
in
push
or
sub
out
sbb
test
or
nop
inc
sahf
or
add
pop
scas
fs
adc
sbb
xchg
retf
test
adc
test
push
iret
add
hlt
ret
leave
icebp
cmp
and
mov
jecxz
sbb
or
loop
xlat
inc
xor
test
inc
xchg
or
sbb
inc
push
jb
or
cli
push
leave
add
xchg
dec
jb
repnz
dec
fs
retf
inc
loopne
sbb
sbb
fs
cli
push
and
add
fcom
add
or
cdq
fs
repz
and
jge
addr16
test
inc
pusha
jl
adc
pop
fcom
xlat
fld
pop
stos
mov
push
stos
add
jg
adc
dec
mov
push
dec
imul
or
or
sbb
fs
dec
sub
xor
aad
add
xchg
pusha
inc
pusha
scas
cdq
mov
add
imul
adc
es
dec
xor
cwde
nop
dec
push
inc
add
adc
popa
mov
xor
mov
call
mov
xor
cmp
mov
push
inc
xchg
mov
nop
mov
mov
nop
mov
or
jmp
sti
cmp
push
cmp
sbb
xor
mov
and
movs
repz
inc
sub
sbb
lea
rcl
or
add
cs
xchg
mov
scas
push
loop
cld
ja
enter
(bad)
mov
and
vmovdqu
push
faddp
cli
(bad)
fld
(bad)
jno
iret
or
xlat
je
gs
add
popa
hlt
icebp
(bad)
ins
pop
jmp
(bad)
jne
(bad)
jge
xor
or
call
(bad)
sub
(bad)
dec
shrd
aas
push
push
mov
popa
xchg
leave
vpsrld
lahf
lds
xor
int3
(bad)
ins
and
lds
mov
hlt
push
es
jbe
cs
xor
out
fs
ds
and
or
scas
jg
and
out
in
xor
sbb
adc
or
rcr
or
jae
jecxz
xlat
xlat
adc
les
jge
push
mov
inc
ins
fiadd
fsubr
neg
mov
sbb
pop
cs
cwde
pop
or
lock
cmp
xchg
dec
clc
push
pop
or
dec
add
and
mov
repz
loope
shl
out
call
jb
sar
test
lahf
and
or
add
add
add
out
push
sbb
jns
sbb
fmul
psraw
psubq
(bad)
xchg
cmp
pusha
leave
add
icebp
or
xor
and
pop
sbb
add
xchg
mov
mov
icebp
or
sbb
or
and
xchg
sbb
mov
or
or
cmp
cmp
or
out
adc
or
inc
scas
(bad)
in
cmp
pop
push
stos
sub
xor
loop
jno
enter
clc
jmp
sbb
stc
inc
jmp
(bad)
aam
inc
enter
loope
push
in
xor
loope
xchg
pop
xchg
xor
dec
in
stos
aad
shl
imul
and
(bad)
(bad)
in
inc
mov
(bad)
fadd
stos
or
and
sti
pop
call
xor
dec
es
pop
pop
test
jecxz
push
clc
out
rcr
push
(bad)
leave
and
push
jecxz
xchg
cmps
mov
cdq
lods
adc
or
adc
mov
leave
and
pop
or
test
or
xchg
dec
cs
pop
adc
adc
add
mov
lea
lods
stos
mov
pop
adc
or
in
or
sbb
pop
shr
sbb
pushf
sbb
adc
arpl
and
enter
or
jb
and
adc
and
add
inc
inc
jno
adc
enter
pop
test
xor
add
pop
mov
adc
vpextrw
cmp
sbb
and
add
sbb
adc
push
in
or
retf
and
mov
cli
sahf
jno
sub
mov
repnz
lds
stc
and
jge
imul
retf
inc
clc
add
mov
or
lea
sbb
push
cld
inc
icebp
enter
icebp
movs
mov
xor
shr
cmp
add
ja
inc
jo
sbb
or
adc
and
retf
sbb
add
js
pop
sti
repz
je
retf
mov
icebp
fcom
add
or
les
sub
or
xor
add
add
retf
add
cwde
sbb
adc
loopne
mov
in
or
pop
bnd
or
sbb
jns
imul
sbb
jo
or
and
push
add
pusha
cdq
shr
or
test
add
cmovns
adc
xchg
loope
push
or
ins
jo
mov
cmp
mov
or
mov
and
cs
dec
adc
xor
sub
dec
out
adc
jne
mov
sub
or
sub
push
or
mov
or
dec
ds
add
dec
scas
nop
add
add
leave
in
sbb
cmp
retf
or
add
cmp
xor
xchg
jae
adc
xchg
cmps
scas
inc
out
push
jno
clc
sahf
and
inc
stc
jmp
mov
dec
jmp
or
push
dec
push
mov
fs
cli
dec
xlat
xchg
mov
push
dec
lods
push
push
xlat
xchg
adc
push
imul
stc
loope
(bad)
inc
and
sbb
push
dec
push
xor
jne
sti
pop
dec
ret
xor
xor
mov
jecxz
inc
xchg
mov
xchg
xor
pop
ret
ja
pop
add
sbb
or
test
mov
mov
sub
daa
push
sbb
sub
and
pop
xchg
inc
push
js
push
push
movs
push
fwait
aas
daa
and
push
adc
in
mov
cmps
test
sbb
sahf
add
inc
je
lods
dec
outs
sbb
cmc
icebp
sbb
(bad)
mov
sbb
sbb
add
cmps
and
xor
js
or
pop
loope
sub
inc
mov
or
mov
push
or
push
pop
test
xchg
sbb
enter
int3
add
rol
je
mov
das
fist
push
add
pop
and
mov
push
inc
iret
mov
add
xlat
and
lea
adc
(bad)
inc
rol
sub
fdiv
iret
and
lea
adc
sub
add
outs
ret
or
ret
add
(bad)
fbld
xlat
lea
adc
stc
push
mov
sbb
rcl
or
xor
and
lea
adc
sti
jle
lods
xor
ret
push
xor
add
(bad)
scas
(bad)
cmc
xchg
cld
nop
dec
adc
mov
and
inc
xor
repnz
cwde
sub
ud1
test
mov
(bad)
jmp
xlat
pop
mov
enter
adc
nop
xor
jno
std
cmp
inc
cs
mov
cmps
cmp
or
add
bound
cmp
add
inc
shl
(bad)
in
mov
mov
cmp
lahf
int
pushf
(bad)
retf
push
les
stc
aaa
mov
fdivr
adc
pop
adc
(bad)
xor
or
sub
inc
add
mov
adc
(bad)
stc
test
and
int
and
repnz
cmp
pop
aaa
ret
or
fs
xchg
adc
dec
enter
xor
jmp
lahf
nop
or
mov
sbb
fld
outs
xor
dec
sub
in
inc
sbb
retf
mov
xor
jno
out
xchg
call
and
ins
mov
adc
adc
or
pop
cwde
test
out
(bad)
mov
in
xchg
pop
inc
jmp
dec
jb
and
sbb
dec
mov
cmp
mov
jle
sub
in
inc
cs
cli
daa
mov
repnz
add
ds
and
rcl
fnstenv
bswap
and
mov
cdq
(bad)
cmp
jl
in
in
xchg
pop
or
lods
les
mov
rol
data16
and
adc
les
rol
jnp
pop
rcr
int
jmp
inc
lods
mov
cli
aaa
ret
mov
test
adc
aaa
push
dec
adc
fnstcw
mov
fist
sub
ffreep
pop
pop
gs
int3
or
movs
repnz
inc
xchg
retf
pop
test
outs
test
loopne
sub
sbb
inc
add
mov
adc
sub
cmp
repnz
xchg
rol
ss
int3
mov
jno
movs
faddp
js
fcmovne
or
or
add
retf
xor
add
pop
add
inc
std
dec
leave
cmp
aam
data16
xchg
pop
jp
pop
sub
dec
ja
xchg
or
cmp
mov
cmp
pop
inc
clc
or
sub
pusha
stos
xor
sti
pushf
mov
adc
cmp
popf
addr16
ret
test
mov
xchg
lock
inc
jge
jmp
jmp
mov
lea
iret
in
inc
and
loopne
iret
and
cmp
mov
jnp
xor
push
jo
loopne
fs
mov
dec
loope
mov
into
add
xor
add
pop
cmc
(bad)
scas
and
ror
push
lea
add
sbb
out
cmp
les
adc
cmp
retf
iret
adc
out
fisubr
mov
repnz
ficom
push
(bad)
sar
jmp
outs
cmps
and
cmp
sbb
int
sti
mov
repz
out
pop
call
repz
jmp
add
enter
mov
lds
leave
inc
rcr
jae
xchg
dec
and
and
leave
inc
xor
sub
xor
ret
dec
enter
xlat
rcl
stos
add
mov
xor
cmc
or
and
into
push
fidivr
rol
sbb
call
inc
jp
push
lock
and
pop
(bad)
jmp
jle
imul
and
cmp
ror
push
ficomp
add
mov
lods
mov
xor
inc
popf
sbb
xor
aad
sub
fcmovne
and
cmp
(bad)
sbb
out
ror
pusha
inc
call
mov
mov
xor
ins
jl
lds
or
(bad)
fst
sbb
repnz
and
xor
(bad)
ss
push
xor
ret
mov
xor
dec
(bad)
xchg
or
fidiv
fdiv
or
test
call
inc
iret
pop
aad
push
adc
sbb
jne
cwde
xor
es
and
pop
cmp
or
test
cmp
cmp
cmp
inc
sbb
dec
cmp
or
cmp
cmp
xor
out
inc
cmp
and
inc
xchg
sub
xor
ss
scas
add
das
lds
cmp
and
daa
xor
sbb
sbb
mov
sub
pop
nop
retf
in
xor
xor
sbb
dec
es
fs
or
nop
retf
in
adc
mov
cmp
sub
cmp
and
sahf
int
xor
jb
pushf
dec
cmp
sbb
mov
adc
das
or
xor
sub
add
and
retf
leave
and
add
adc
xchg
sub
or
icebp
mov
and
clc
jo
leave
or
sbb
cld
pop
add
adc
enter
xor
adc
cs
xchg
sbb
cmp
dec
ret
test
xor
and
jb
cmp
sbb
scas
jae
and
sub
xchg
(bad)
rol
push
repnz
(bad)
dec
add
and
xchg
xchg
scas
cmc
fsub
add
mov
push
push
cmp
faddp
mov
pop
dec
add
mov
cs
mov
dec
std
xlat
imul
mov
stos
xchg
xchg
das
inc
(bad)
adc
sub
or
in
cmp
repnz
cmp
add
adc
xor
sub
adc
pushf
mov
inc
push
add
inc
or
add
adc
xor
add
jo
adc
ins
sub
into
pop
jns
rol
ret
inc
cmp
jb
fst
cmp
cld
xor
jns
pop
dec
xchg
cmp
sbb
nop
or
mov
and
inc
or
test
cmp
mov
sub
xor
or
and
ret
out
or
jae
aas
fdiv
adc
sbb
out
add
inc
jb
adc
leave
test
or
mov
cmp
or
pop
sbb
and
pop
jb
cmp
sbb
test
jbe
and
shr
adc
and
ret
in
sub
sbb
in
xor
xor
leave
nop
pop
enter
jb
xchg
retf
xor
and
mov
cmp
cmp
cs
xor
shl
pop
jb
pushf
cmp
sub
sub
cmp
cmp
mov
sbb
adc
popf
cmp
cmp
cmp
jb
sbb
cmp
test
loope
and
add
inc
ficomp
mov
inc
and
cdq
sub
loope
pop
mov
or
sub
or
push
xchg
into
sub
sub
or
jno
adc
and
ror
test
sbb
icebp
inc
xor
pop
jno
mov
sbb
jno
inc
mov
push
and
pop
jno
fcom
sbb
popa
sbb
sbb
add
add
and
push
mov
adc
add
mov
cmp
cmp
pop
(bad)
push
clc
or
fwait
push
daa
movs
dec
pop
xor
bound
ret
pop
dec
cmp
aam
popa
jecxz
dec
and
sbb
add
pop
push
and
push
xchg
idiv
adc
leave
jbe
push
stc
jp
jecxz
jle
jmp
repz
cmp
jns
sub
pop
add
icebp
xor
leave
in
sar
(bad)
enter
out
cmp
retf
ret
iret
xor
out
sub
(bad)
not
hlt
cld
cmp
int3
std
(bad)
or
add
add
nop
and
add
sbb
add
mov
add
jbe
nop
add
mov
xlat
ret
mov
inc
icebp
jmp
xlat
or
xchg
xchg
add
pop
mov
mov
jmp
jecxz
dec
or
inc
mov
mov
mov
aas
in
dec
nop
jns
sbb
repnz
push
xor
aas
adc
cmp
push
mov
call
add
or
jp
or
mov
adc
adc
push
mov
mov
add
imul
mul
repz
mov
push
loopne
packssdw
mov
cmp
pop
dec
imul
ror
cli
jo
xor
pop
xlat
jae
ss
push
xlat
and
out
and
jmp
retf
cmp
loope
add
mov
test
adc
inc
or
cs
fiadd
fucomp
loopne
and
adc
cmp
cdq
cmp
mov
xor
div
not
mul
(bad)
nop
les
cli
ror
outs
hlt
xor
adc
stos
in
aad
mov
pop
xor
loopne
add
and
rcr
add
xchg
push
mul
dec
cwde
into
or
sub
ds
int3
neg
pop
(bad)
push
jmp
(bad)
sbb
ss
outs
push
jo
out
add
cmp
jmp
xchg
xor
addr16
mov
add
dec
movs
inc
and
pop
jmp
sub
mov
mov
fcomp
sti
xchg
nop
pop
retf
fst
std
xor
stc
in
mov
jbe
add
pop
in
outs
xor
and
sbb
outs
pop
jl
rcr
jmp
sahf
fisttp
cmp
pop
es
jmp
int3
in
sbb
ss
out
in
xor
push
jmp
mov
sub
fimul
loopne
int
pusha
inc
xor
adc
std
push
and
lock
(bad)
jmp
wrmsr
outs
(bad)
and
xchg
xor
ret
and
push
mov
retf
jb
lds
repz
(bad)
jmp
in
ror
shl
sub
icebp
add
mov
mov
lods
out
int3
xchg
cld
jl
add
(bad)
mov
repz
ret
fld
out
in
mov
out
int
push
stc
jno
mov
outs
fist
ds
rcl
call
popa
add
push
repz
push
mov
pop
sti
outs
shl
xchg
rcr
stc
jmp
aad
push
(bad)
shl
cmp
repnz
mov
jmp
in
cmc
sar
jmp
shr
adc
leave
or
mov
lock
std
fnsave
lods
clc
icebp
fnsave
add
stos
cmp
das
cmp
jmp
int3
ret
or
mov
fbstp
inc
mov
out
(bad)
repz
or
fsub
xchg
retf
fucomp
ror
bound
ins
and
outs
fld
inc
icebp
(bad)
push
dec
push
retf
add
ins
sbb
cs
dec
and
jl
pop
sbb
into
pop
jmp
pop
in
push
jl
push
and
(bad)
(bad)
icebp
sub
adc
rcl
push
sti
mov
test
adc
cli
push
add
aam
pop
add
xchg
(bad)
outs
loop
mov
je
dec
ret
mov
sub
std
js
add
add
jle
rol
mov
je
aam
jmp
cmp
mov
add
fbstp
inc
int
loope
call
out
xor
mov
mov
aam
pop
sub
xchg
jmp
dec
out
or
and
jo
mov
aad
out
fstp
jmp
mov
mov
xlat
(bad)
lods
jp
add
loopne
repnz
cmp
push
inc
icebp
xchg
cmp
hlt
loopne
jge
sub
sbb
rcl
mov
loope
dec
rol
cmc
push
retf
hlt
cmp
retf
xor
pop
cmp
fistp
jle
ret
loop
push
je
int
add
dec
jne
cmp
pop
push
mov
adc
jle
inc
rcr
jge
das
xchg
mov
out
out
add
pop
cmp
and
cs
std
jecxz
pop
jmp
cmp
in
leave
xlat
push
jecxz
ret
test
jl
outs
cld
cmp
add
jo
push
inc
stos
xchg
(bad)
into
data16
pop
das
jo
repnz
and
adc
(bad)
lds
push
test
inc
in
retf
xchg
and
and
(bad)
jmp
ins
cs
mov
inc
movs
jb
add
mov
xchg
pop
(bad)
dec
mov
dec
icebp
add
outs
adc
adc
pusha
xor
std
cmp
sbb
js
int
adc
xchg
sub
or
out
(bad)
cmp
sti
into
and
push
stos
mov
hlt
fisttp
mov
js
pushf
cmp
dec
out
movs
add
retf
into
cmp
loop
adc
add
and
in
fimul
add
rcr
cmp
outs
inc
loopne
push
xor
cdq
(bad)
stc
lods
cmp
lds
pop
inc
pop
push
cdq
push
xchg
add
adc
add
arpl
int
rcr
xor
leave
loop
ret
popf
es
jno
repnz
or
push
pop
addr16
pop
je
xor
xchg
xchg
inc
mov
inc
cmp
scas
inc
push
mov
xor
and
mov
std
mov
addr16
pop
sbb
push
popa
mov
mov
add
stos
sbb
loop
or
pop
jb
jnp
push
pusha
xor
xchg
scas
dec
sbb
mov
cmp
and
fbstp
fbld
cmp
mov
xor
mov
add
shl
popa
fldcw
adc
add
aad
mov
jae
aad
sub
sbb
cs
and
push
int3
sbb
call
iret
je
or
sbb
dec
sub
frstor
and
cwde
dec
add
add
sbb
add
adc
add
pusha
pop
push
xor
or
imul
sub
lock
repnz
lods
mov
push
adc
jno
add
inc
(bad)
out
xor
sub
mov
imul
popa
adc
fiadd
pop
sbb
loopne
xchg
mov
sbb
xchg
sbb
mov
xchg
mov
ret
or
and
call
jmp
cmp
popa
or
and
bound
xor
retf
push
xor
mov
add
adc
out
push
je
pop
retf
jmp
setl
inc
inc
adc
xchg
nop
push
jge
or
int3
mov
sahf
sbb
(bad)
mov
fimul
(bad)
inc
ret
movs
bound
lods
movs
fcom
mov
fwait
or
jg
xor
pusha
or
pop
mov
addr16
adc
aas
(bad)
imul
ins
push
inc
vpextrw
stc
vpmulhuw
out
vpextrw
stc
add
vpcmpgtb
fwait
int
cli
(bad)
cli
(bad)
dec
rcl
pushf
(bad)
xchg
into
(bad)
mov
pushf
xchg
pop
stc
(bad)
out
inc
mov
imul
add
repz
push
movs
pop
dec
and
shrd
dec
nop
dec
and
test
movs
pop
mov
inc
xor
sub
mov
sub
repnz
pop
xchg
mov
(bad)
hlt
out
xor
add
inc
je
add
fwait
cmps
push
(bad)
fidiv
cmps
cs
inc
pop
xor
mov
sar
mov
ins
sub
out
les
mov
rol
call
xor
or
lea
or
ret
outs
jmp
ror
sbb
mov
jae
add
mov
ss
(bad)
and
xchg
pop
sysret
fadd
adc
or
cmp
shl
es
shl
pop
leave
ror
jae
or
adc
inc
or
jae
sub
out
or
dec
movs
test
call
or
rol
adc
push
or
and
or
xchg
add
pop
fld
add
and
les
pop
paddusw
mov
not
lock
xor
xchg
dec
jmp
inc
outs
div
xchg
icebp
pop
pop
ins
cs
jmp
fwait
xchg
jmp
add
bound
add
stc
neg
icebp
pop
psubq
cdq
xor
(bad)
push
inc
pop
lock
in
jp
mov
pop
push
(bad)
and
pop
push
and
cmp
fistp
mov
lods
vpslldq
mov
lahf
jmp
sahf
sub
stc
cmps
lahf
loope
sub
cwde
cmp
pop
add
mov
loopne
jo
(bad)
or
loopne
sbb
sbb
shr
mov
ss
pop
xchg
pop
mov
dec
inc
push
cmp
jne
jmp
test
push
stos
iret
jnp
adc
sub
jno
loopne
xor
or
adc
jb
dec
imul
in
mov
cmp
nop
loopne
xor
in
in
xor
add
push
or
popf
xor
(bad)
jb
loopne
or
add
call
unpcklps
xchg
out
rol
rol
stc
ret
lock
jmp
xchg
aas
out
fyl2xp1
xlat
xchg
and
jne
(bad)
ins
push
pop
mov
rcl
stc
ins
jmp
sub
jmp
xor
xchg
enter
sbb
add
(bad)
repnz
ss
xor
xchg
rcr
inc
push
ds
popf
repnz
rol
aad
stc
stos
xor
arpl
popf
sbb
inc
dec
loop
jb
push
push
adc
aad
aaa
sbb
jo
mov
fld
bswap
mov
out
push
in
nop
movs
loope
std
dec
frstor
fist
arpl
pop
(bad)
vpunpcklwd
inc
sti
les
lock
pop
push
out
enter
mov
sbb
jmp
mov
cmp
dec
xchg
(bad)
ds
ret
rcl
fld
push
scas
sbb
xor
sar
mov
outs
and
push
js
xor
fnstcw
sbb
hlt
add
sti
ret
fstp
add
rol
ret
push
add
shl
aam
add
rcl
pop
or
int
ins
gs
push
pop
xor
stc
xlat
push
or
jo
in
mov
bswap
or
addr16
jb
lahf
push
pop
mov
stos
aad
nop
ret
aaa
mov
inc
frstor
and
(bad)
int
inc
push
mov
jl
lods
cmps
mov
fwait
push
pop
movs
sub
shl
cmps
and
cmps
jo
add
cmps
or
mov
cmps
aad
popa
adc
pop
dec
jne
jg
loopne
pop
(bad)
dec
sub
push
or
dec
adc
cmp
shl
(bad)
aas
mov
fistp
sar
push
mov
push
mov
lods
mov
jno
imul
inc
mov
xor
xchg
pusha
out
loope
cmc
xor
lds
in
in
push
and
mov
xor
clc
(bad)
imul
mov
push
shr
rcl
ins
xor
sbb
jecxz
xor
xchg
in
sahf
push
lods
add
arpl
jb
(bad)
mov
in
push
pop
pop
push
call
adc
mov
or
dec
ror
mov
or
mov
in
cmc
jmp
adc
mov
mov
inc
out
sahf
pop
add
and
nop
sbb
(bad)
stc
ror
and
dec
cmp
mov
ins
rcl
xchg
rcr
pop
dec
xchg
xchg
inc
mov
and
sub
pop
enter
xor
sbb
fiadd
cdq
cld
mov
shr
cmp
cmp
mov
adc
jmp
or
adc
repnz
inc
pop
mov
stos
xchg
sbb
sbb
xor
das
and
rcr
pusha
pop
xor
or
stos
sub
jg
mov
push
scas
pop
rol
xor
dec
adc
call
inc
bound
sbb
or
mov
test
jo
dec
mov
inc
and
add
mov
sub
test
adc
push
sti
ins
mov
push
scas
sbb
jle
ret
adc
sar
push
jmp
push
jg
ret
inc
test
and
or
imul
push
and
std
lock
jl
jle
xor
sbb
adc
or
and
push
cmp
and
adc
stos
call
retf
or
adc
xchg
call
cmp
ret
sub
mov
inc
loope
dec
dec
xor
imul
movs
inc
push
inc
aas
cmp
or
inc
mov
fst
or
mov
lds
and
ja
pop
or
dec
std
movs
mov
jno
mov
enter
pop
daa
add
scas
fldenv
mov
mov
jecxz
addr16
lahf
bound
out
lds
and
enter
xor
dec
lahf
lds
cmp
xchg
stc
jle
pop
inc
ds
loope
out
dec
js
mov
or
mov
jg
call
adc
neg
add
mov
pop
add
pop
add
add
pop
and
add
cmp
inc
rol
in
(bad)
lods
or
inc
test
sbb
icebp
lahf
sbb
ds
and
jne
sub
mov
arpl
or
inc
and
pop
or
mov
popa
jg
retf
imul
adc
cmp
test
or
push
mov
sbb
push
sahf
aam
pop
dec
add
(bad)
popa
mov
sbb
mov
ret
pop
and
fwait
inc
bound
(bad)
jae
mov
iret
aam
adc
cli
call
sbb
sub
add
xchg
neg
jns
add
mov
dec
push
jno
and
and
aaa
lock
fcomi
ds
and
cmps
sbb
cmps
retf
cli
xor
cld
or
imul
loopne
xchg
xor
add
in
dec
adc
or
int
test
cmp
(bad)
xor
lea
cmps
and
cmc
inc
nop
adc
sub
sub
add
jmp
xor
or
(bad)
icebp
dec
add
pop
fnstsw
adc
scas
sti
cdq
es
and
scas
loopne
and
jb
push
mov
cmp
xchg
adc
sub
add
mov
in
or
jecxz
or
hlt
sbb
fndisi(8087
fldcw
push
dec
inc
xchg
icebp
call
mov
ja
xor
add
clc
cmps
lahf
push
add
out
and
fsub
outs
ret
cmp
cmp
push
sbb
jp
sub
push
fistp
adc
mov
jecxz
xor
sbb
or
fwait
xor
pop
mov
ss
dec
pop
push
movs
add
or
aas
push
dec
add
jne
push
push
pop
shr
call
clc
jp
xor
inc
das
retf
and
popa
pop
sbb
mov
inc
add
aaa
sbb
xor
ret
aas
add
sub
jb
mov
iret
inc
test
aas
rcl
sti
out
or
push
xor
js
bound
push
jae
repz
or
and
xchg
add
fwait
and
leave
inc
imul
fdivr
add
adc
or
mov
fld
jg
or
push
call
ins
add
and
rol
sub
arpl
or
push
aas
pop
in
sub
call
test
sub
mov
xchg
sub
inc
movs
or
loop
(bad)
sub
mov
mov
gs
(bad)
out
scas
push
xor
push
adc
cld
pop
or
xor
jns
mov
cwde
add
dec
mov
adc
push
mov
mov
push
cmp
js
or
pop
sub
aaa
or
lock
je
mov
aaa
xor
sbb
call
mov
adc
call
jg
mov
pop
or
pop
push
pusha
mov
mov
ret
inc
mov
jmp
or
and
push
cli
dec
cwde
inc
cld
popa
or
jnp
adc
lock
js
jbe
sub
xchg
adc
in
daa
cmp
clc
push
je
dec
mov
and
inc
and
stos
xchg
das
popf
inc
add
dec
repz
cmp
inc
adc
movs
test
cmp
sbb
or
pop
push
xchg
sub
xchg
icebp
adc
stc
jns
dec
dec
push
push
enter
and
ror
popa
rcl
frstor
ror
mov
mov
push
cwde
ret
mov
dec
jl
aam
sub
dec
sahf
jge
fld
jns
jle
loop
daa
psubsw
nop
adc
cwde
mov
sub
mov
push
fdiv
fs
push
in
add
lea
dec
add
fwait
sbb
cli
call
(bad)
xor
dec
test
sar
out
jae
adc
cmp
adc
and
test
push
js
sbb
and
push
pop
push
jne
or
xchg
movs
adc
pop
jbe
pop
sbb
or
pop
inc
or
mov
(bad)
cmc
aaa
jl
mov
not
or
retf
shl
cmp
push
bound
leave
fistp
retf
add
ret
mov
icebp
je
sub
mov
adc
pop
shl
sub
test
test
sbb
sub
std
pop
cld
add
jb
enter
imul
or
inc
xor
clc
pop
and
das
and
sbb
je
sub
add
jne
push
(bad)
jne
and
push
push
add
mov
pop
push
dec
ds
mov
ins
imul
aad
in
pop
test
push
cmp
add
xchg
jns
movs
jae
sub
xchg
xor
add
adc
push
je
cmps
or
adc
std
sti
push
outs
out
mov
inc
cmp
adc
not
jne
jne
imul
lock
push
cdq
in
sar
jge
xchg
lods
mov
test
mov
sbb
rol
rcl
mov
shl
push
jns
xchg
ret
mov
push
pop
inc
(bad)
and
lds
out
sbb
or
cmc
lahf
jg
and
or
sbb
fidiv
mov
inc
jle
xor
cmp
daa
mov
out
mov
or
mov
xor
pop
(bad)
scas
jecxz
inc
xor
push
pop
cmp
jl
mov
sbb
inc
shl
mov
addr16
loop
and
div
mov
inc
xor
in
add
stos
mov
pop
aas
xlat
pop
sbb
nop
adc
fst
int
jne
mov
pop
or
sub
out
sub
add
ins
mov
mov
or
inc
enter
ins
jle
push
add
into
pop
fild
pop
and
movs
nop
sub
or
mov
adc
shl
mov
mov
outs
arpl
inc
cmp
cs
add
je
or
mov
dec
dec
cli
cwde
add
xor
adc
sar
pop
lahf
in
jo
xchg
xchg
test
scas
sub
fimul
mov
mov
dec
data16
out
popa
adc
cli
pop
and
retf
or
push
fisubr
retf
dec
inc
lahf
cmp
jne
clc
adc
sub
sub
mov
sub
(bad)
jne
or
setns
popa
pop
inc
dec
add
pop
neg
dec
ret
inc
cmc
mov
jno
fprem
xor
xchg
neg
sahf
and
cmp
movs
or
inc
dec
sbb
movs
into
fld
push
or
test
xchg
pop
arpl
xchg
dec
sbb
add
movs
rcl
add
repnz
or
xor
jo
jno
and
outs
lock
xchg
jecxz
pop
mov
xor
ja
xchg
push
or
call
add
add
clc
(bad)
cdq
dec
daa
adc
pshufw
sbb
jmp
sub
mov
jne
popf
jbe
pop
push
mov
cdq
idiv
inc
bnd
add
popa
mov
or
mov
sbb
mov
fisub
mov
push
movs
xchg
pushf
retf
adc
ss
dec
cmps
out
pop
adc
jl
adc
sbb
mov
int3
ror
xchg
inc
daa
jle
push
push
adc
cmp
pop
shl
call
call
retf
data16
inc
movs
retf
pushf
push
inc
call
scas
dec
loope
mov
xor
mov
xchg
and
xchg
movs
sbb
and
cmp
pop
cmp
jp
and
out
rcr
and
jmp
outs
outs
sbb
jbe
add
dec
add
enter
or
fdivr
add
sub
adc
test
push
mov
and
sbb
push
cld
cmp
mov
inc
adc
inc
dec
sti
push
push
lea
ss
and
cdq
adc
sbb
dec
pop
add
mov
jecxz
mul
movs
jae
push
(bad)
push
and
rcl
push
pop
or
ror
jl
mov
sub
jmp
jg
pushf
int3
into
add
add
push
popa
test
cmp
arpl
add
xchg
mov
pop
xchg
xchg
sbb
pop
arpl
sub
lods
sub
(bad)
fcomip
cmp
scas
pop
push
inc
mov
into
js
or
iret
repz
in
xor
inc
cmc
xor
popf
xlat
lods
push
mov
fs
push
or
adc
loopne
push
mov
sahf
add
jae
aas
ins
mov
enter
push
jns
enter
call
xchg
scas
sar
mov
or
into
out
pop
enter
test
push
call
call
cmps
repz
shl
xchg
sbb
cmp
test
dec
sub
pushf
imul
mov
push
dec
ror
(bad)
mov
mov
dec
xor
(bad)
in
or
xchg
in
imul
outs
ja
stc
pop
jno
enter
fcom
dec
movs
stos
push
shl
mov
push
call
mov
push
push
cmp
rcl
imul
mov
repz
aas
push
aas
push
mov
popa
push
inc
add
ret
aas
ss
call
fst
cmp
imul
inc
cmp
(bad)
in
fcomp
push
xor
and
add
mov
pop
loop
stc
adc
movs
sbb
repnz
or
adc
inc
cld
and
adc
and
pop
push
jle
jge
or
xchg
add
xchg
mov
aam
cmp
and
pop
xchg
xchg
imul
mov
mov
or
lock
mov
fcom
ss
scas
stc
lods
adc
dec
out
lea
loope
xor
leave
push
xchg
inc
neg
(bad)
(bad)
lea
inc
sub
xor
cmc
adc
fwait
je
add
mov
push
inc
push
jbe
jmp
ficom
mov
push
lock
das
add
scas
or
xchg
push
adc
or
sbb
fs
jp
jl
test
mov
push
clc
jb
pop
gs
test
dec
or
fiadd
shld
push
in
call
je
xor
or
test
pop
lods
push
xchg
loope
cdq
mov
ins
add
jg
inc
test
mov
sbb
inc
mov
es
ja
cmc
clc
and
ss
jnp
ud2
pop
rcl
xor
cmp
test
mov
xchg
js
xor
lahf
inc
test
add
mov
retf
xor
mov
pop
sbb
stc
addr16
or
and
and
push
stos
push
cmp
jle
xor
xor
cmc
and
jb
fnstenv
or
imul
int
inc
dec
out
push
mov
call
test
pop
jmp
shl
fwait
sub
or
idiv
idiv
cld
and
inc
inc
in
xchg
stc
jmp
and
(bad)
jne
pop
jmp
add
add
jecxz
mov
push
jno
iret
aam
jp
mov
mov
add
sar
and
mov
pop
cmp
in
push
sbb
xchg
inc
dec
leave
mov
sub
aas
xchg
push
jb
or
lea
or
push
add
and
dec
add
jp
sub
hlt
in
leave
mov
xchg
je
call
pusha
je
jmp
std
jne
push
jns
adc
sar
(bad)
ret
push
cwde
fsub
sub
push
dec
addr16
or
cli
push
sbb
mov
inc
bound
push
sahf
push
sub
mov
push
call
mov
lea
pop
sub
lahf
pop
iret
sahf
repnz
inc
jp
mov
push
mov
punpckhbw
cmp
mov
inc
push
push
mov
js
iret
lock
jne
mov
sbb
fwait
mov
(bad)
pop
and
mov
cmp
inc
sbb
and
aam
fcom
cdq
sub
fs
jne
js
sbb
xchg
cld
inc
mov
xor
aaa
mov
or
push
cs
xor
pop
push
in
and
inc
pop
jb
jb
sub
sub
xchg
push
rol
mov
adc
jbe
add
jecxz
jne
ja
dec
imul
jmp
sub
call
fdivrp
cli
jp
cmp
mul
jo
stc
mov
mov
xchg
fwait
sub
(bad)
sub
call
xlat
aaa
fadd
call
call
and
int3
sub
push
ret
jle
add
call
cmp
mov
sub
dec
pusha
outs
leave
call
outs
and
rol
out
mov
pop
repz
push
dec
call
arpl
sub
xor
rol
pop
or
xor
adc
aas
push
call
imul
inc
mov
push
and
add
and
mov
cs
ficom
push
xchg
nop
dec
pusha
add
sub
push
mov
lods
mov
xor
xchg
or
adc
xchg
jae
pop
and
xchg
imul
inc
mov
mov
arpl
push
lahf
or
loopne
setp
xchg
ja
cmp
or
sbb
pushf
cld
test
(bad)
stc
xchg
cmps
inc
ficom
sbb
loop
stc
pop
inc
add
daa
xchg
movs
xchg
push
xor
call
sbb
xchg
inc
jbe
icebp
je
adc
or
xchg
and
les
and
ffree
add
int
and
cmp
dec
sub
je
icebp
push
mov
and
add
inc
fbstp
push
call
xchg
xchg
sbb
lea
inc
and
push
int
dec
iret
cmps
xchg
out
leave
jmp
fild
sbb
or
pmuludq
bound
loopne
imul
jb
lock
clc
cmp
cs
fwait
shr
push
cld
ja
fucom
movd
push
adc
shl
je
xchg
add
sbb
add
pop
sbb
cmps
xor
or
aad
jns
repnz
iret
adc
in
sahf
xchg
or
sbb
adc
jns
addr16
sbb
adc
adc
out
iret
enter
lea
sbb
movs
add
sbb
mov
and
mov
dec
lea
xor
shl
popa
outs
add
or
dec
fstp
emms
lahf
mov
mul
shr
pop
jmp
loope
xor
sbb
jp
add
adc
add
or
xor
cmp
sub
or
movs
jb
or
or
jb
movs
adc
adc
movs
jb
adc
sbb
jae
movs
jb
sbb
sbb
arpl
pop
adc
retf
mov
jne
pop
sbb
loopne
fadd
lea
or
sub
or
fwait
test
or
pop
or
ss
ret
ss
sub
xchg
adc
shl
adc
push
mov
adc
sbb
add
mov
add
cmp
lods
inc
call
data16
popa
rcr
xchg
loope
jecxz
pop
adc
pop
pop
lds
sbb
mov
mov
jecxz
xlat
sbb
retf
sbb
cmps
test
(bad)
fsubrp
movs
jbe
sub
xchg
mov
mov
aaa
dec
push
jge
repnz
pusha
jns
addr16
sub
in
shl
outs
outs
add
jge
adc
sbb
or
mov
int
pop
add
jg
imul
call
fbld
call
gs
mov
and
xchg
imul
or
or
adc
xor
movs
or
sbb
and
xor
cmps
and
sub
rcl
xor
cmp
sub
or
jmp
pop
jne
in
jns
add
and
add
repz
and
or
and
sbb
and
dec
mov
sbb
or
lods
sub
mov
xor
or
pop
pop
je
or
es
inc
loope
and
pop
add
int
add
rol
mov
jle
imul
dec
add
or
and
and
or
call
adc
call
and
and
sbb
dec
inc
push
pop
in
std
or
cs
repnz
cmps
pop
call
xor
dec
mov
dec
je
and
loop
rcl
sar
imul
jns
pusha
in
cmp
sub
push
add
mov
push
nop
inc
scas
sub
sub
mov
sub
sub
jg
jg
pop
adc
mov
jg
inc
push
jg
bound
adc
cmp
adc
cmp
push
lods
sbb
cmp
lods
sbb
or
cmps
fidiv
or
shl
sub
scas
xchg
stos
gs
ret
mov
int3
jnp
mov
std
sbb
add
scas
mov
aad
aad
push
fild
lahf
sub
sti
xor
xor
test
mov
mov
cmp
loopne
lods
ror
push
enter
rol
movs
add
push
arpl
imul
aas
test
pop
push
lods
es
mov
push
imul
jno
sbb
jo
jmp
sti
js
jge
inc
movs
adc
in
push
out
dec
sbb
or
jne
dec
or
or
cmp
cs
pop
sbb
not
cs
in
out
sbb
out
cmps
rcl
(bad)
stc
cmps
loopne
in
and
add
(bad)
mov
loopne
dec
outs
and
into
sub
das
(bad)
sub
add
mov
sub
and
sub
out
xchg
mov
push
test
and
inc
and
jb
scas
pop
fnstsw
ins
add
fadd
mov
cmp
in
in
and
sbb
(bad)
pop
mov
lods
push
xchg
inc
stos
or
or
mov
loope
push
das
lods
rcr
fidivr
sbb
sbb
pushf
imul
sub
int3
(bad)
and
sub
fcom
jp
sub
jne
movs
or
pop
inc
cld
popa
adc
jecxz
sub
enter
dec
xor
adc
adc
adc
shl
add
je
ds
mov
fwait
nop
lds
stc
sub
cdq
push
and
sbb
xor
add
ins
js
nop
(bad)
(bad)
aam
mov
sbb
cmp
push
mov
sub
gs
outs
daa
rcl
push
inc
push
ds
adc
add
es
mov
bound
jg
ret
test
out
es
xchg
leave
inc
dec
enter
pop
jle
sub
cld
ror
ror
pop
and
and
jl
sub
in
sbb
sar
or
jo
sahf
mov
xor
out
push
pop
stc
bound
cld
or
test
and
mov
rcr
sbb
mov
cmp
ffreep
das
dec
mov
fcmovnbe
shr
adc
mov
and
mov
pop
sub
out
sbb
dec
push
push
fisub
sbb
push
and
mov
ds
pusha
xchg
push
push
or
jp
or
je
es
mov
cmp
or
rcl
out
cmp
pop
call
jge
or
xor
and
sti
ret
test
and
dec
(bad)
mov
fcom
cld
pop
outs
rol
ret
aad
mov
pusha
adc
(bad)
sub
daa
push
sbb
sub
in
inc
data16
lds
xchg
jl
and
add
std
jnp
dec
cmp
leave
imul
cli
pop
mov
cs
call
jbe
sub
loopne
add
fcmovb
les
pusha
mov
movs
ss
arpl
daa
call
aam
dec
or
and
sub
push
push
aam
dec
enter
shl
fcmovbe
ds
or
adc
outs
add
mov
jge
add
and
jae
adc
mov
(bad)
and
mov
cmps
dec
or
mov
or
sar
pop
add
cdq
rcr
dec
add
adc
and
je
sbb
push
xchg
xchg
ja
imul
xor
loopne
dec
aas
or
mov
loop
add
add
push
bound
cld
int
push
jae
(bad)
mov
pop
or
xor
mov
int
je
jp
mov
(bad)
fild
jns
lods
cmp
repnz
jp
loopne
and
sub
cwde
adc
ja
jge
add
mov
nop
fnstenv
or
sqrtps
pop
enter
xchg
dec
add
jmp
jmp
push
push
stc
lea
cmc
pop
jo
or
and
shr
pop
rcl
add
add
push
mov
sbb
add
xchg
(bad)
dec
push
xor
inc
push
jns
jnp
js
adc
pop
jb
js
les
nop
lea
xchg
cmps
imul
jnp
test
jmp
push
in
rcr
xchg
mov
mov
ret
jbe
enter
cmp
inc
sbb
jmp
pop
jmp
dec
imul
push
imul
inc
std
pop
mov
cmp
das
sub
add
addr16
cmp
mov
mov
call
mov
push
pop
leave
test
(bad)
popa
movs
mov
jno
sub
sbb
or
or
je
and
pushf
mov
divps
sbb
inc
fwait
or
jbe
nop
inc
rcl
pop
movs
inc
ja
jns
out
test
test
adc
mov
pop
pusha
(bad)
sbb
call
das
jno
mov
popa
inc
pop
jae
pop
and
arpl
inc
jmp
and
lahf
scas
cmps
(bad)
jo
jbe
and
xsha1
cmps
or
pop
bound
cmc
jmp
inc
mov
jg
inc
jbe
mov
jp
push
jg
and
sahf
cmps
(bad)
sbb
imul
jle
push
mov
rcl
push
mov
call
or
mov
cmp
out
sbb
add
sbb
addr16
popa
ss
jg
inc
or
fiadd
push
or
test
adc
and
pop
sub
xchg
rcl
mov
jae
cwde
jae
xor
enter
jecxz
fstp
cmp
add
pop
push
fild
sbb
adc
xchg
in
jne
jge
mov
pop
cmp
adc
fcom
pop
dec
pop
(bad)
cmps
push
jne
rcl
mov
inc
or
and
mov
inc
sar
push
imul
xor
ins
je
lods
add
loop
(bad)
jno
ds
jo
jae
push
push
aaa
leave
jp
jne
push
pop
cmp
ret
and
adc
div
fwait
enter
mov
leave
pop
push
push
adc
bound
fs
mov
lds
sbb
sbb
mov
fwait
out
sbb
inc
inc
dec
adc
adc
retf
push
stc
aaa
cmp
or
jmp
xor
rcl
int
sbb
inc
push
pop
inc
scas
push
adc
icebp
cmp
jne
loop
xchg
rol
push
push
in
cmp
lods
push
push
loopne
jae
movs
lods
mov
ins
std
jb
inc
ja
imul
jl
xor
mov
mov
fistp
inc
pusha
jmp
dec
iret
hlt
or
loope
inc
and
mov
daa
repz
cmp
(bad)
xor
and
push
and
test
xor
std
jmp
mov
dec
xor
cs
popf
push
mov
jg
inc
xchg
cld
push
xor
cs
loope
add
sub
jle
adc
add
cld
xchg
fdivr
cld
mov
and
jbe
pop
push
push
int3
xchg
inc
pop
mov
jmp
outs
push
jns
dec
(bad)
rol
add
in
ret
inc
jno
sbb
jns
push
jno
or
mov
push
add
sbb
ret
adc
pop
and
jl
jo
xor
mov
call
push
jae
pop
cmp
cmp
pop
or
cdq
loopne
jmp
push
(bad)
retf
je
add
sub
mov
cld
add
push
sbb
pop
dec
pop
jns
inc
mov
dec
xchg
or
mov
movs
push
mov
pop
xor
or
and
add
mov
cmp
out
push
nop
je
adc
fs
jae
fisub
inc
adc
jg
movs
fisttp
clc
cmp
sbb
mov
stc
pop
retf
pop
fimul
cmps
mov
sbb
int
and
shr
xchg
sub
and
and
aaa
loope
sub
mov
xchg
or
int3
jnp
mov
leave
mov
sbb
lods
aaa
ficomp
mov
stos
shl
sahf
sub
sbb
mov
call
test
imul
pushf
inc
xchg
pop
sub
popf
pushf
and
and
xor
les
cmps
jle
inc
push
dec
jecxz
lods
adc
pop
leave
sbb
sbb
cmp
xor
add
cmp
lods
rcr
jl
push
and
call
inc
inc
add
dec
loope
mov
out
call
dec
pop
dec
rcl
jg
push
pop
add
push
jecxz
imul
or
xchg
add
pop
in
(bad)
sub
test
ficom
call
icebp
enter
mov
jl
loopne
dec
push
jg
push
add
dec
xor
stos
int3
pusha
(bad)
adc
sar
pop
sbb
push
push
push
stos
ror
sub
jmp
aas
sbb
stc
aad
cmp
neg
mov
jmp
mov
dec
xor
loopne
sub
(bad)
jbe
add
or
cmps
jo
in
cmp
push
push
je
daa
jo
repz
mov
imul
xor
ss
pop
(bad)
push
jmp
and
aas
mov
push
icebp
xor
ja
jg
and
inc
add
or
jmp
adc
push
(bad)
xchg
xor
push
push
pop
push
dec
(bad)
je
test
and
sahf
xchg
add
enter
inc
or
call
push
cs
arpl
push
test
xor
ret
add
mov
dec
mov
cmp
or
inc
xor
adc
push
mov
xor
ror
push
sub
sub
add
push
push
stc
jnp
stc
adc
aam
maskmovq
aam
pop
cmp
test
loope
push
lahf
ret
sbb
adc
sub
lods
and
scas
gs
jne
out
loopne
pop
push
add
pop
and
jmp
test
lods
lods
mov
adc
mov
stc
push
imul
xor
loopne
or
or
inc
sahf
mov
jo
adc
daa
mov
mov
mov
push
add
addr16
iret
mov
adc
loopne
or
rol
das
or
cmp
cli
pop
test
xor
jg
pop
mov
cmp
xchg
sbb
ror
inc
test
fbld
inc
inc
add
addr16
loope
and
popa
dec
add
jb
xor
mov
jp
pop
clc
sub
add
out
lds
and
push
xor
arpl
sub
fld
xchg
mov
and
add
rcl
cmp
xchg
inc
fisubr
mov
mov
xor
shl
je
scas
dec
mov
or
cmp
push
std
ins
or
mov
sbb
push
rcr
rcl
mov
cmp
pop
sar
jmp
ss
xor
mov
inc
call
inc
adc
fidivr
inc
sbb
in
adc
inc
or
jmp
jg
and
and
jmp
mov
loope
sbb
xchg
out
jno
sub
push
dec
ret
ror
(bad)
pushf
mov
cmp
int3
adc
movs
ret
push
fbstp
lahf
xor
enter
fst
jg
fcom
addr16
aaa
gs
sar
les
loopne
add
cld
cmc
jae
inc
mov
add
jle
push
cmp
pop
sbb
cmp
sbb
cld
cmps
iret
sbb
shl
call
test
push
add
nop
rol
or
aas
xchg
mov
sub
lea
nop
inc
push
mov
jo
mov
sahf
push
sahf
out
mov
mov
or
rol
cmps
or
xor
jp
sahf
jge
outs
push
mov
pop
sti
and
mov
mov
xchg
or
jo
aas
lods
jne
nop
cmp
sub
cli
add
sar
and
fcmovnu
push
mov
pop
mov
xchg
shl
pop
xor
jmp
or
stos
or
mov
pop
movs
movs
add
and
sbb
pop
adc
jno
add
cmps
repnz
or
or
inc
lods
mov
jecxz
push
dec
add
or
jg
pop
inc
fsub
inc
pushf
xchg
mov
dec
into
jle
push
and
sar
mov
shr
xchg
inc
and
xchg
inc
push
cdq
add
enter
sub
xchg
clc
fwait
inc
sti
scas
jb
inc
out
add
lock
push
mov
add
dec
jnp
shr
sub
xchg
nop
dec
mov
add
sub
and
jne
daa
imul
and
and
hlt
mov
add
pusha
or
scas
dec
adc
cmp
ret
and
in
cmp
push
push
fwait
addr16
js
pop
xor
push
dec
sub
sub
inc
jg
inc
adc
int
sahf
jns
cmp
jge
dec
cmp
dec
push
movs
mov
jl
jb
push
push
add
fidivr
je
jp
inc
sbb
out
push
inc
dec
dec
mov
xchg
xchg
cmp
dec
cmp
add
dec
dec
xor
pop
mov
cmp
lea
lea
sub
push
rcl
add
pop
inc
clc
dec
jge
dec
iret
rcl
cmc
and
push
sub
xor
test
pop
pop
mov
jp
mov
or
mov
jo
inc
ja
cmp
jbe
imul
retf
cs
jb
push
sub
stc
iret
sbb
(bad)
fidiv
mov
retf
or
jo
iret
jb
sbb
ins
ja
mov
nop
out
sbb
data16
aaa
fdiv
pushf
mul
add
mov
inc
pop
push
xchg
in
push
pop
cmp
fcomp
pop
dec
push
movs
es
imul
inc
add
mov
dec
inc
daa
rcl
mov
(bad)
scas
call
adc
pushf
xchg
add
pop
cmp
retf
or
sub
sbb
xchg
mov
cmp
cld
mov
fsubp
xchg
cmp
mov
push
mov
inc
leave
dec
add
push
in
mov
in
cwde
dec
cmp
int3
dec
bound
xlat
pop
pop
jns
add
sbb
pop
cmp
mov
sbb
ror
fdivr
scas
pop
(bad)
mov
add
fld
les
js
push
inc
and
xchg
and
(bad)
in
dec
add
mov
cmp
ins
dec
or
pop
(bad)
aam
xor
imul
push
inc
cwde
lahf
aaa
cmp
xchg
push
push
sti
jno
adc
push
cmp
sbb
adc
jne
ins
dec
aaa
or
stos
dec
jecxz
push
add
adc
jo
outs
mov
cmc
and
stos
test
imul
push
adc
mov
lods
call
adc
aam
sub
dec
jl
inc
jmp
pop
jge
pop
inc
or
bound
shl
jbe
mov
jbe
fs
push
cmp
ins
jbe
xlat
pcmpeqw
rcl
push
mov
hlt
adc
sub
sub
adc
lea
adc
inc
push
fwait
(bad)
dec
dec
mov
hlt
push
out
inc
retf
int3
or
ret
add
mov
inc
sbb
push
sub
hlt
push
push
push
cmps
clc
nop
and
dec
popf
lods
sahf
adc
bnd
mov
jle
jmp
push
ds
sub
or
xor
(bad)
or
push
push
call
and
(bad)
loope
loop
cmp
jne
jo
leave
cli
adc
lods
nop
mov
xchg
sbb
xor
push
xor
or
push
push
adc
les
cmp
add
clc
call
or
ror
or
dec
pop
sar
int
sbb
xor
cmp
jmp
lods
in
daa
xchg
loopne
arpl
loope
mov
lahf
inc
into
adc
or
in
mov
fstp
xchg
xchg
and
adc
js
xor
data16
or
pop
jg
gs
addr16
or
xchg
or
mov
mov
add
push
pop
clc
jno
and
sahf
mov
sub
jp
dec
cli
fidiv
fmul
les
cmc
and
mov
shr
mov
shl
push
inc
in
lods
add
mov
push
dec
je
inc
xchg
mov
sbb
les
data16
xchg
jne
cmp
sub
sbb
leave
neg
cmp
jns
pop
cld
add
cmp
add
ret
add
xchg
pop
test
sub
dec
pop
pop
dec
ins
outs
xor
sub
ss
inc
or
cli
add
retf
cmp
enter
inc
mov
fadd
xchg
add
test
test
cmp
push
stos
push
xor
and
aas
mov
sbb
pop
(bad)
jbe
imul
rol
jo
(bad)
push
jge
in
sbb
xor
adc
sti
pop
test
sbb
cmp
push
dec
(bad)
add
icebp
(bad)
(bad)
fwait
cmc
or
das
sbb
cmp
loop
rol
add
dec
inc
jno
or
adc
in
adc
add
or
dec
or
pop
das
sti
pop
or
in
inc
xchg
daa
sbb
push
mov
push
mov
cmps
mov
cmp
add
mov
sbb
adc
sbb
jp
adc
add
jmp
movs
out
xchg
push
push
sbb
inc
add
mov
pop
xchg
nop
xor
sbb
mov
std
add
pushf
popa
push
xchg
or
out
test
outs
xchg
idiv
mov
test
nop
lods
xchg
or
add
call
push
aas
mov
sub
(bad)
loop
push
aaa
sub
lea
dec
clc
pop
add
cmp
xchg
mov
ret
or
call
sbb
add
pop
rol
daa
test
ret
cli
movs
lar
repnz
std
pop
and
mov
mov
ins
cld
push
jbe
loop
movs
popa
adc
adc
add
dec
push
mov
mov
adc
sti
dec
pusha
movs
in
lods
in
pop
or
cmp
push
jns
dec
sub
scas
mov
sbb
test
add
test
ja
push
jb
push
push
imul
cmp
or
fs
cmp
add
call
cs
mov
adc
ja
add
shl
ret
out
jbe
push
and
inc
fcomp
or
les
into
adc
add
inc
mov
add
xor
rcl
fcomip
lds
adc
sub
jmp
(bad)
sub
mov
andnps
inc
call
or
push
push
test
sub
nop
mov
push
ror
ins
jmp
adc
fisttp
sbb
xlat
push
dec
jmp
or
shl
(bad)
sub
fst
aaa
mov
xchg
or
clc
push
jo
sar
mov
mov
add
mov
sub
mov
dec
sbb
(bad)
cmp
or
jge
mov
mov
sbb
push
out
sub
push
add
nop
into
pop
and
je
lahf
cmc
unpcklps
call
sahf
or
sbb
clc
dec
dec
dec
(bad)
in
cmc
xchg
rep
sti
dec
xor
adc
shr
mov
xchg
outs
cmp
iret
pop
mov
call
jne
jmp
aam
xchg
int
xchg
ins
add
sar
imul
fs
mov
push
jl
push
mov
in
shr
push
cmp
fs
fcom
data16
sub
mov
jl
add
adc
(bad)
and
jge
call
push
rcr
in
scas
fisttp
cli
inc
add
jb
xor
push
mov
stc
push
(bad)
loopne
mov
pushf
arpl
push
cmp
or
adc
sub
imul
jnp
aaa
add
outs
pop
shr
das
test
pushf
mov
push
fstp
cs
add
cmp
cmp
push
or
movs
das
dec
push
out
sar
push
cmp
xor
mov
lea
outs
data16
mov
xchg
add
and
cmp
add
xchg
ret
add
jmp
nop
cmc
sub
push
xor
jle
movs
jmp
push
fild
or
sub
add
out
jno
mov
stos
jbe
movs
mov
ss
data16
add
clc
movs
lock
loopne
mov
jo
and
push
sub
cmp
cwde
and
out
add
pop
xor
adc
or
sub
or
rol
ficomp
sbb
or
sbb
sbb
sbb
or
nop
adc
(bad)
adc
adc
or
dec
or
sbb
jno
push
mov
add
or
data16
pop
xchg
cwde
pop
push
ror
add
retf
or
pop
jo
jb
dec
mov
dec
mov
or
imul
and
outs
and
xor
hlt
adc
and
arpl
lock
out
out
pop
xchg
or
xlat
lods
movs
or
ret
push
pop
xor
adc
push
loope
push
and
jmp
xchg
outs
test
je
leave
sahf
mov
dec
mov
lds
mov
fist
lods
sub
push
out
int
xlat
test
or
inc
jmp
cld
cmp
cmp
and
push
and
and
sbb
xor
dec
xchg
lea
int
pop
adc
xchg
(bad)
jmp
lock
pushfw
scas
or
stos
or
sub
outs
add
xchg
xchg
out
out
mov
in
or
call
cmp
jne
repz
scas
add
ss
scas
inc
imul
shl
fld
mov
pop
xor
jmp
je
adc
lods
and
add
retf
fbstp
nop
push
jmp
ins
push
push
xchg
xchg
and
jae
cwde
in
or
push
xchg
and
fisttp
dec
sbb
test
xchg
push
inc
aaa
rcr
push
in
pop
or
jmp
jns
scas
(bad)
fdiv
fsub
lock
test
dec
repnz
mov
cmc
movs
mov
test
outs
push
xor
ss
push
mov
(bad)
stc
and
enter
hlt
dec
jl
adc
out
or
sbb
mov
lods
mov
out
movs
and
icebp
dec
cld
dec
test
adc
cmps
test
cmp
sbb
call
movs
test
and
push
out
ror
xlat
mov
xchg
pop
inc
fld
xchg
mov
stc
(bad)
xchg
mov
xor
les
push
ds
imul
loopne
pop
jmp
push
xor
data16
fmul
clc
cmp
rcl
mov
adc
xchg
dec
xchg
push
movs
rcl
jno
call
sub
pop
jbe
call
je
dec
(bad)
test
mov
mov
sbb
mov
xchg
cmps
cmc
dec
or
dec
add
cmps
mov
or
sahf
iret
arpl
fst
outs
shl
mov
push
stc
repz
cmp
jnp
call
sub
push
inc
push
dec
rol
cs
inc
cmp
stos
and
and
pop
ja
dec
and
pushf
lods
xchg
sub
es
test
popa
dec
out
nop
inc
xor
outs
pop
mov
js
adc
mov
push
sub
dec
or
add
or
xchg
fucomip
push
jns
mov
push
cmp
lea
call
or
add
or
adc
and
nop
add
std
adc
mov
mov
ret
fadd
in
fyl2x
ret
add
dec
push
adc
jne
enter
ja
rcr
dec
les
xor
arpl
stc
pop
std
into
retf
adc
mov
adc
inc
clc
and
jp
adc
movs
jl
add
sbb
pop
mov
scas
xor
jmp
xchg
outs
or
push
lahf
or
out
push
adc
aas
pushf
test
jbe
nop
inc
jb
xchg
inc
xchg
push
xchg
lods
add
arpl
mov
movs
popf
push
lods
jb
xchg
xor
ret
adc
ds
cmc
dec
or
hlt
fs
add
sti
cwde
sub
inc
push
(bad)
das
push
xchg
das
nop
ret
xor
(bad)
xor
aam
or
or
xchg
movs
or
mov
sub
clc
stc
sbb
es
dec
dec
add
cmp
movs
je
mov
daa
movs
push
(bad)
jae
cmp
xchg
sbb
jmp
xor
xchg
add
rol
jle
dec
std
pushf
push
jmp
mov
xchg
popa
mov
lock
iret
jge
mov
fisttp
push
shl
push
jp
adc
lods
and
rol
push
or
sbb
pop
outs
fidiv
clc
add
call
sbb
or
jo
jmp
arpl
jge
pushf
sar
mov
jne
mov
dec
push
dec
ret
rcl
neg
xchg
inc
xchg
mov
ficomp
sbb
shr
and
out
les
push
push
lods
sub
dec
xchg
aas
push
clc
mov
jecxz
dec
cmp
sbb
adc
mov
mov
push
popa
retf
not
sub
addr16
outs
jle
imul
call
push
push
cdq
jge
sbb
sbb
cmp
call
inc
jne
enter
xor
or
xchg
jg
adc
shl
test
cmc
xor
and
das
add
mov
enter
xchg
sub
ds
sti
(bad)
inc
cmps
dec
(bad)
cs
and
fld
fistp
cmps
fisub
clc
add
pop
push
inc
push
enter
sub
adc
retf
inc
mov
dec
icebp
mov
jmp
ficomp
adc
pop
shr
pop
inc
(bad)
fild
call
inc
adc
stos
shl
enter
mov
mov
sub
xchg
mov
popf
stos
jge
jg
and
jmp
aam
sbb
movs
lahf
dec
mov
dec
inc
adc
mov
mov
mov
dec
test
sbb
cdq
scas
xchg
xchg
pop
test
lds
lock
aas
push
mov
pop
dec
dec
and
mov
jno
sbb
xlat
pop
in
mov
call
fmul
xchg
push
adc
xor
std
mov
daa
(bad)
xchg
cwde
sti
and
or
add
and
stos
xor
push
(bad)
cmps
pop
jmp
(bad)
jb
sbb
call
xchg
mov
test
ds
les
fwait
add
cli
pop
gs
or
daa
push
icebp
xchg
arpl
or
push
adc
push
(bad)
dec
rol
push
add
pop
inc
rcr
jns
sub
loop
or
rcr
outs
bound
jmp
adc
jb
cmps
(bad)
dec
stc
sbb
dec
test
jl
les
fld
inc
and
add
imul
data16
sti
iret
xor
xchg
imul
jb
jle
dec
and
fcomp
pop
test
push
lea
jle
test
inc
sbb
push
(bad)
and
jbe
sbb
inc
adc
xlat
mov
out
es
stos
add
lods
aam
xlat
clc
inc
dec
pop
mov
loopne
add
push
imul
fiadd
lock
mov
sti
adc
xchg
fimul
imul
push
push
cmp
add
sub
js
add
inc
sbb
push
inc
mov
jne
fidiv
nop
push
ret
xor
and
mov
mov
xor
jno
push
jle
cmp
sti
dec
(bad)
les
loopne
sub
call
add
mov
imul
add
cmc
cmp
sbb
xchg
inc
or
sbb
dec
fs
pop
xchg
mov
int3
add
add
and
daa
xchg
popf
stc
aas
xchg
or
cs
ins
or
cld
jne
adc
xchg
out
mov
adc
push
push
add
mov
jp
xchg
sti
je
push
cmp
mov
mov
add
cs
mov
imul
out
enter
movs
xchg
jo
pop
inc
sahf
dec
and
es
inc
adc
push
mov
or
jne
xor
mov
jmp
mov
cld
stc
inc
inc
xchg
cmps
mov
ret
cmp
aam
scas
sub
pop
or
inc
(bad)
dec
add
push
inc
retf
addr16
sub
mov
or
scas
jmp
or
ds
push
pop
loopne
mov
add
aas
stc
push
xchg
adc
and
xchg
pop
and
add
dec
rol
inc
mov
mov
outs
frstor
cmp
sub
pop
outs
gs
push
lods
outs
cmp
sahf
sub
pop
inc
mov
pop
add
gs
or
out
sbb
cwde
sbb
dec
push
push
psubsb
and
push
popf
into
inc
sub
cmc
inc
jg
fldl2t
push
dec
adc
xor
lods
repz
call
mov
sub
cmp
test
popf
inc
xor
dec
or
std
ret
lods
hlt
sbb
shl
push
ins
inc
add
movs
sbb
and
mov
sbb
inc
daa
ucomiss
inc
ror
inc
sbb
lahf
stc
dec
add
and
mov
pop
popa
adc
sbb
mov
jle
aam
mov
gs
add
inc
test
aaa
push
es
lahf
das
imul
call
cmp
popa
popa
call
retf
rcl
xchg
dec
inc
dec
(bad)
clc
inc
inc
mov
mov
pop
(bad)
aad
lds
mov
add
jno
add
scas
mov
fs
icebp
fwait
or
inc
adc
popf
mov
ss
cs
jmp
(bad)
popa
or
ds
and
(bad)
or
or
ds
scas
adc
jnp
and
add
pop
pop
call
xchg
inc
loope
jg
addr16
adc
xchg
adc
aas
out
jno
cmp
xchg
hlt
js
xor
sbb
test
push
idiv
push
movs
adc
aas
mov
test
cmp
sub
outs
add
movs
je
adc
jg
ins
neg
jo
enter
adc
clc
mov
mov
inc
xor
or
jne
jo
mov
jae
cmp
or
push
inc
call
lods
mov
pop
sbb
stos
cwde
inc
bound
pop
jge
mov
add
pop
push
push
jmp
cmp
jb
popa
add
cmp
pusha
ret
add
push
aaa
xor
loope
nop
rcr
int3
inc
out
nop
les
adc
push
ret
mov
jecxz
or
rcr
and
ret
adc
xor
sahf
(bad)
jnp
or
add
pop
sub
mov
mov
imul
fidivr
arpl
jl
push
call
adc
shl
mov
mov
cmp
adc
mov
mov
add
aaa
mov
cmp
movs
sbb
out
adc
jmp
add
push
push
jmp
je
inc
cmp
jge
pop
add
sti
ins
add
test
ret
pop
push
push
call
rol
push
dec
lds
es
xchg
rcr
jne
push
push
jmp
sbb
jmp
rcr
pop
js
ja
sbb
stc
retf
pop
sti
pop
clc
and
(bad)
dec
inc
or
inc
xor
pushf
push
mov
es
cmp
xchg
scas
pusha
cli
pop
sub
inc
int3
add
or
pusha
imul
inc
scas
fnstsw
ins
call
or
call
xor
call
dec
or
mov
sub
jns
daa
sbb
and
add
aaa
rcr
mov
sbb
cmp
push
inc
shl
movs
arpl
pop
mov
clc
jmp
aad
ja
add
xchg
jmp
jge
push
call
mov
mul
sbb
xchg
cmp
xor
xchg
mov
aad
std
popa
xchg
mov
sti
repnz
mov
xchg
or
stc
repz
cld
int
or
(bad)
mov
cli
in
daa
sub
push
call
daa
jg
push
arpl
test
xor
xor
sahf
add
call
not
mov
sbb
add
imul
dec
iret
push
xchg
fimul
pop
add
inc
pop
add
je
pop
mov
rol
pop
iret
push
add
and
xchg
frstor
cmp
inc
and
(bad)
pop
and
int3
es
inc
pop
loopne
cs
or
aam
dec
pop
xor
aaa
nop
sbb
scas
xor
lods
jmp
lock
(bad)
mov
or
push
add
jle
mov
xchg
or
fild
add
(bad)
xchg
ss
xor
push
fist
xchg
and
sbb
push
and
dec
mov
xor
or
sub
push
pusha
pop
dec
fstp
mov
inc
retf
js
fs
test
add
jo
repz
frstor
inc
aas
or
stc
das
mov
cmp
mov
jecxz
pop
enter
int3
cmc
pushf
ret
mov
int3
loope
adc
outs
inc
and
push
add
sbb
in
inc
bound
lea
leave
hlt
sbb
add
inc
pcmpeqw
push
outs
fist
cmp
enter
(bad)
adc
dec
out
cmp
inc
add
push
mov
cmp
lods
pusha
add
out
adc
xor
push
adc
mov
sub
and
cmp
push
fist
xchg
add
cli
std
dec
imul
xchg
mov
pusha
cmp
xlat
daa
lea
sbb
pop
test
or
mov
sbb
mov
inc
mov
or
xchg
es
cmps
sub
jb
cmp
mov
stc
push
sub
sar
pop
(bad)
and
cld
sahf
sbb
mov
fs
(bad)
stos
xchg
adc
in
and
adc
push
cwde
lds
pop
scas
adc
or
push
call
shr
pop
jg
ja
arpl
aaa
and
pop
push
mov
xchg
fldcw
mov
enter
adc
sbb
ds
(bad)
loopne
and
and
iret
imul
test
adc
in
and
ja
inc
xchg
in
ja
add
enter
jl
inc
push
or
xor
test
leave
in
mov
icebp
xchg
add
push
clc
call
jmp
inc
inc
sub
sbb
xlat
mov
pop
push
pop
add
push
call
push
or
jle
dec
or
xor
cwde
lods
xor
das
or
xor
je
sbb
ss
mov
add
cmp
xor
cs
aaa
jbe
cmp
mov
rcr
mov
push
cmp
test
xor
and
sub
lahf
fisubr
inc
je
xor
enter
or
enter
push
cmp
mov
and
mov
into
or
(bad)
fs
pop
frstor
push
lds
movs
xor
mov
mov
imul
jo
or
mul
sar
or
pop
cmp
test
jne
mov
test
div
daa
lods
(bad)
aad
jp
and
inc
shl
jb
loopne
add
cmp
xor
jl
xor
ja
shr
test
rol
pop
rcl
jbe
mov
cmp
icebp
cmp
jne
cmp
push
mov
mov
idiv
dec
add
(bad)
adc
xchg
push
dec
ja
imul
out
je
dec
add
push
outs
test
pop
or
add
xor
fwait
adc
idiv
retf
cmp
(bad)
test
adc
inc
or
call
jge
mov
adc
int
pushf
ja
adc
add
push
xor
(bad)
mov
adc
inc
test
lods
dec
inc
sbb
push
cs
cmp
arpl
xchg
cmp
jmp
sub
and
push
add
pushf
outs
cmc
rcr
stc
jb
mov
pop
aaa
push
ret
xor
mov
add
data16
in
scas
add
pop
pop
jmp
push
in
push
ficom
push
out
and
rcr
dec
or
aas
push
les
or
aam
add
bound
pop
sub
ret
pop
mov
fild
jno
cmp
cmps
dec
lahf
inc
pop
pop
xchg
mov
loopne
and
mov
rol
and
mov
dec
ret
pop
std
test
cmp
sar
loope
fisub
leave
cmp
outs
push
or
mov
push
xor
push
pop
je
push
or
sub
ficom
mov
xor
retf
push
mov
cmp
mov
pop
xchg
inc
push
adc
dec
(bad)
sti
cmps
stos
fist
pop
cmp
pop
scas
pop
add
adc
sbb
addr16
cmp
cmp
jmp
mov
call
pop
or
push
or
xchg
mov
mov
sub
mov
out
inc
pusha
or
mov
inc
imul
retf
mov
jo
fdivr
mov
sub
mov
mov
xor
cs
dec
icebp
lock
adc
loope
jnp
call
jne
pop
cwde
dec
adc
mov
test
xchg
pop
lds
daa
jecxz
inc
(bad)
sbb
(bad)
addr16
jl
rol
or
xor
push
icebp
(bad)
fild
popa
xor
sub
popa
adc
and
xor
cmp
(bad)
aam
outs
sbb
add
sub
mov
pop
push
sbb
ficom
(bad)
fistp
jle
or
xor
xor
mov
inc
push
je
dec
mov
lea
dec
add
inc
add
pop
pop
or
pop
fwait
dec
mov
pop
mov
mov
call
mov
retf
pop
pop
addr16
js
sub
lods
repz
jno
xchg
das
sbb
(bad)
jp
adc
jmp
inc
int
ins
xchg
(bad)
in
mov
adc
add
sar
or
xchg
pop
xchg
ret
popf
nop
mov
mov
mov
add
cmp
sbb
inc
cmp
adc
or
push
mov
es
jno
sbb
scas
bound
sbb
and
gs
jmp
or
pop
test
adc
jno
fidivr
jno
jecxz
fdivr
xor
push
test
sbb
add
jle
jae
test
push
inc
xchg
inc
shl
je
mov
pop
add
dec
ja
sbb
mov
je
mov
pop
(bad)
push
mov
sub
xor
jmp
pop
xchg
xor
mov
loope
repnz
jmp
or
push
daa
cld
aam
sub
inc
cdq
inc
sub
push
dec
mov
mov
add
test
sub
pop
xor
dec
arpl
test
jle
or
adc
xor
jne
or
sbb
or
mov
fnstsw
mov
call
je
lock
mov
call
shr
xchg
fst
dec
mov
prefetcht2
(bad)
jo
and
shl
enter
dec
cmp
clc
daa
test
pop
jne
push
cmps
sbb
mov
sbb
stc
(bad)
add
in
or
xchg
(bad)
sub
xor
test
adc
sub
mov
mov
sar
push
jbe
add
int
push
popf
adc
(bad)
stc
sub
pusha
mov
cmps
sbb
sub
in
(bad)
push
adc
pop
sub
dec
inc
add
js
das
sbb
adc
inc
mov
ds
imul
push
jne
cmp
mov
jno
or
(bad)
shl
or
mov
push
sahf
jnp
pop
popa
inc
jecxz
(bad)
lahf
retf
pusha
shr
mov
shr
fs
push
test
sbb
mov
shl
inc
mov
adc
movs
pop
inc
dec
inc
xchg
jnp
jp
or
inc
cmps
dec
call
push
xor
mov
jo
xor
rol
jbe
sub
xchg
mov
cmp
lods
nop
hlt
add
and
dec
and
mov
fsubr
or
aad
hlt
adc
mov
add
fmul
nop
out
sti
call
rcl
stc
mov
pop
ds
push
ret
or
cmp
cwde
lds
add
or
cmp
push
push
call
stc
inc
xor
or
mov
jge
(bad)
mov
cwde
xchg
pushf
bound
(bad)
xchg
fisttp
jg
push
and
xchg
cs
mov
pop
ja
lea
lods
add
pop
xor
mov
add
push
enter
(bad)
or
mov
and
push
push
and
xchg
xor
add
mov
stos
call
or
data16
sbb
mov
push
mov
inc
push
je
sbb
add
jno
push
(bad)
xadd
inc
push
mov
add
dec
pop
dec
mov
xor
(bad)
push
and
xchg
lods
adc
inc
pop
or
out
jno
icebp
or
add
das
jmp
popa
aas
cli
mov
push
adc
rcl
mov
push
push
add
push
mov
scas
jne
jle
or
cmp
dec
cs
outs
sbb
(bad)
cmp
mov
repnz
inc
jg
or
jmp
jno
fild
cmp
sbb
dec
or
cli
mov
push
mov
je
jg
or
push
popa
add
pop
push
push
call
dec
push
push
ss
or
add
outs
pop
fld
rcl
xlat
pop
and
stc
push
lock
pop
dec
push
call
rcl
daa
and
xchg
mov
jmp
stos
enter
loop
das
loopne
imul
data16
popa
xchg
es
push
je
(bad)
and
adc
jne
push
ja
and
neg
jmp
mov
push
jmp
and
pop
call
pop
mov
aas
push
and
movs
pop
sar
mov
push
sar
lahf
push
push
fstp
sub
or
lds
mov
movs
test
pop
pop
je
mov
movs
push
popf
push
mov
rol
push
mov
lock
or
lahf
stos
cmp
adc
jle
mov
hlt
add
in
adc
push
and
or
add
xor
xchg
cli
lahf
ret
sub
sbb
ins
test
cmp
nop
add
nop
test
mov
lea
hlt
ins
(bad)
aas
shl
mov
push
(bad)
sub
mov
mov
jns
pop
out
pop
sub
xor
inc
out
cmp
jno
jns
loope
add
inc
sbb
ret
jle
inc
or
std
shr
mov
adc
fdivr
pop
mov
cmps
rcr
call
inc
sbb
popf
inc
mov
fiadd
add
inc
push
push
pop
shr
sar
pop
aaa
aas
das
retf
pop
add
repz
push
fisub
js
and
xchg
repnz
fwait
loop
dec
int3
sbb
xor
cmp
cmp
inc
xchg
jae
sub
push
xchg
scas
out
mov
add
fwait
inc
out
int3
inc
cmp
mov
int
je
and
es
jecxz
cld
sbb
mov
int
test
xor
hlt
test
push
test
jl
out
aad
sub
(bad)
pop
jmp
loopne
xor
xchg
call
inc
or
mov
cmp
sub
fsubr
outs
inc
sti
std
pushf
dec
lea
pop
xchg
paddusb
jo
leave
xchg
push
enter
out
mov
inc
cmp
adc
push
push
mov
jle
lock
fistp
test
push
and
lock
xchg
rol
add
add
push
and
or
fwait
sbb
inc
popa
xor
(bad)
icebp
adc
push
pop
add
scas
aaa
push
pop
fld
cmc
jo
adc
push
cwde
pop
xor
jmp
cld
lods
sub
pushf
and
jge
sub
leave
mov
push
mov
das
push
jmp
in
gs
mov
push
xor
das
cwde
cmc
jle
push
fs
je
in
add
fbld
xchg
movs
jge
mov
push
jae
xchg
arpl
dec
ret
mov
cmp
imul
sbb
nop
cmp
xlat
jb
pop
in
sub
call
jle
cmp
sbb
pop
xor
aad
dec
sbb
mov
pop
lahf
adc
xor
add
sti
test
lods
or
mov
and
xor
dec
rol
int3
xor
adc
icebp
clc
inc
xor
add
jle
cmc
push
jl
ins
xlat
mov
adc
(bad)
pop
or
test
in
add
push
or
mov
popa
and
or
into
xor
push
in
cmp
gs
pop
push
in
add
pop
rcl
xchg
xor
jb
sti
mov
je
push
push
stc
jo
jbe
and
mov
dec
sbb
mov
mov
jo
sub
hlt
push
or
cld
(bad)
arpl
dec
push
push
or
ret
or
jnp
and
jno
jecxz
mov
push
pop
outs
xor
jmp
push
sbb
push
mov
dec
dec
xchg
js
add
sub
gs
retf
push
sbb
rcr
or
mov
scas
lds
xchg
adc
pop
push
mov
xchg
adc
retf
xlat
add
adc
out
cs
jo
inc
push
and
add
sar
lods
leave
sub
dec
aas
mov
sub
idiv
sub
xchg
lds
repnz
ss
retf
or
push
cwde
or
cmps
mov
rol
lea
xchg
arpl
outs
sbb
pop
inc
aam
adc
sbb
push
push
xchg
or
adc
add
push
fwait
cs
push
test
lods
dec
call
jb
out
ss
sbb
(bad)
jnp
loopne
and
lds
mov
arpl
js
arpl
adc
jno
aas
not
push
out
cmp
and
add
mov
jle
loope
iret
scas
add
push
and
and
call
arpl
in
jne
cwde
add
data16
pushf
pop
or
lods
add
dec
dec
xchg
ret
mov
stos
fcom
mov
je
in
je
sar
ror
pop
xchg
lahf
fimul
push
popf
adc
mov
aas
push
(bad)
cli
addr16
mov
sar
ds
pop
sub
pop
ret
adc
mov
add
sbb
int
sbb
sub
or
mov
xor
xchg
pop
mov
in
shl
xor
xchg
in
push
or
dec
dec
pop
pop
mov
xchg
aaa
call
out
jle
mov
fwait
dec
test
int3
and
int3
loope
dec
push
dec
mov
push
out
mov
add
push
test
test
xchg
fld
dec
fs
outs
adc
push
and
sbb
enter
adc
nop
mov
icebp
je
push
fisubr
or
inc
cmp
mov
retfw
pushf
mov
sbb
push
and
add
repnz
frstor
dec
or
addr16
out
lds
jae
pop
jmp
sbb
sbb
ds
lods
cmc
and
in
adc
adc
sbb
repz
mov
push
fsub
xchg
fsub
push
stc
jle
ror
(bad)
jg
loopne
loope
fbstp
gs
nop
add
shr
mov
lods
loop
add
cmp
push
xchg
popa
ds
and
dec
aad
xor
aas
push
jbe
add
sub
xlat
std
and
or
or
cmp
pop
test
xchg
cdq
add
test
mov
cmps
or
pop
push
sub
icebp
sbb
pop
dec
push
and
sahf
popf
mov
mov
cs
push
ret
cmp
dec
movs
(bad)
sbb
or
aas
mov
aam
hlt
call
js
mov
push
es
add
sub
sbb
push
inc
gs
xchg
xor
shl
es
in
mov
sbb
and
pop
add
cdq
shl
sub
js
adc
push
test
je
loopne
cmp
xchg
inc
test
aam
cmp
cmp
out
fist
push
add
(bad)
ds
or
aad
leave
add
js
outs
inc
ins
mov
pop
or
popf
mov
xor
xchg
mov
mov
and
pop
outs
pusha
popa
icebp
mov
mov
xchg
cmp
or
jl
aad
xchg
pushf
pop
add
inc
inc
sub
jb
daa
xchg
jns
adc
push
ss
or
mov
sub
dec
inc
push
(bad)
jecxz
js
repz
pop
stc
jmp
push
out
push
fiadd
rcl
inc
ret
(bad)
push
push
add
test
jo
adc
cmc
mov
aad
push
and
push
mov
and
ror
adc
mov
fwait
xor
loop
adc
add
xor
and
add
push
inc
out
imul
xchg
cmp
mov
add
adc
es
pop
cmp
add
int3
or
out
rcl
ror
sub
mov
and
je
add
mov
mov
ss
(bad)
mov
xchg
adc
or
lock
pop
mov
push
mov
mov
or
or
mov
idiv
push
jo
add
enter
sbb
jg
imul
(bad)
sbb
mov
ja
or
sbb
das
enter
cmp
out
and
icebp
daa
sub
pop
fld
xor
inc
pop
mov
aas
xchg
mov
stc
adc
add
dec
ret
push
sahf
xor
(bad)
sub
fyl2xp1
imul
add
mov
inc
sub
adc
loopne
daa
movs
sub
ret
jns
mov
mov
add
data16
add
jns
and
ss
lods
inc
jecxz
ret
pop
push
cwde
pop
pop
cmps
push
pop
inc
inc
add
and
ja
or
dec
mov
add
or
sti
ins
add
xor
sti
jl
adc
mov
ja
dec
ret
fld
popf
add
sub
adc
or
lds
jecxz
loope
mov
or
add
jle
(bad)
cdq
mov
lea
mov
test
loop
(bad)
nop
sub
jp
adc
push
aad
retf
xchg
inc
adc
dec
jg
adc
cmps
cmps
ds
add
mov
cwde
pop
mov
(bad)
sub
dec
sbb
sbb
mov
dec
push
ja
shl
fidivr
daa
push
add
inc
nop
mov
pop
in
movs
les
pusha
mov
fild
cwde
(bad)
ficom
out
and
pop
mov
cmp
lea
adc
adc
mov
div
mov
(bad)
adc
pop
leave
and
shr
out
adc
ds
dec
xor
push
shl
aam
enter
call
and
mov
adc
or
cmp
push
or
adc
push
jg
fdiv
push
or
in
cmc
repnz
mov
aaa
fld
fsubr
jo
pop
pusha
sbb
pop
push
enter
pop
inc
sub
mov
dec
shr
push
loop
push
ror
(bad)
loopne
int3
or
pop
rcr
push
dec
jae
int3
push
int
xchg
movs
hlt
repnz
aam
jmp
push
lock
mov
ret
loopne
push
ins
sub
inc
(bad)
loopne
push
push
xchg
ja
shl
(bad)
int3
es
shr
test
out
sbb
xchg
dec
gs
pop
pop
add
(bad)
cmp
dec
addr16
aaa
mov
xor
xchg
push
call
loope
dec
mov
ret
nop
adc
and
pop
xchg
or
sbb
int3
pusha
in
sahf
push
inc
and
leave
xlat
push
inc
push
pop
adc
int
mov
shl
sub
in
mov
inc
mov
in
adc
sbb
xlat
sub
jb
cmp
or
test
loopne
mov
adc
nop
scas
movs
mov
pushf
ins
jmp
adc
lods
es
mov
mov
xchg
cdq
mov
mov
shl
mov
hlt
adc
pushf
and
in
pop
(bad)
cmp
adc
adc
in
push
aam
loopne
push
inc
push
in
enter
push
in
push
pushf
push
adc
out
xor
lahf
adc
dec
mov
sub
xchg
out
xor
enter
cs
in
mov
jl
sar
cli
xor
cmc
fdiv
xor
call
cmps
mov
push
pusha
(bad)
cmp
mov
inc
test
jmp
lea
loopne
pushf
and
push
push
mov
push
hlt
test
add
mov
pop
fwait
retf
cld
mov
or
js
mov
jb
inc
add
mov
and
sahf
imul
and
cmp
movd
add
in
mov
pusha
lea
xchg
or
pop
mov
and
retf
sub
cmp
and
inc
inc
sbb
cmp
fwait
les
xchg
sub
push
jge
mov
ret
in
stos
push
dec
and
mov
(bad)
cmps
loope
test
iret
jmp
ret
xchg
xor
enter
fwait
push
pop
pusha
mov
mov
outs
popf
jmp
repnz
loop
and
(bad)
push
rol
xchg
adc
mov
jnp
push
ret
jl
mov
jne
lea
push
(bad)
mov
mov
cmp
push
inc
add
mov
add
popa
sub
mov
push
fisubr
add
sub
pushf
dec
dec
mov
dec
rcl
cmp
lock
lock
frstor
and
int3
jb
or
push
cmp
stos
pop
test
cmps
adc
jo
push
cmps
pop
sub
(bad)
jo
sbb
sahf
and
repz
sub
xlat
outs
mov
cmp
sahf
pop
dec
inc
sbb
lock
jbe
in
add
mul
push
adc
jg
popf
mov
cmp
and
adc
push
call
add
push
and
pop
push
xchg
out
fidivr
push
pop
jae
add
cmps
cmps
cli
and
cmp
mov
xor
popa
xchg
and
cld
mov
jmp
inc
shl
aam
mov
xchg
mov
inc
inc
cmp
fmul
adc
ins
(bad)
dec
mov
out
stos
imul
fidiv
mov
jne
jmp
test
mov
and
adc
test
or
adc
shr
or
xchg
and
push
pop
movs
aas
rol
mov
or
push
(bad)
xchg
or
test
inc
or
pushf
cmc
sub
or
sub
or
dec
or
xchg
cli
outs
sbb
into
push
adc
pop
pushf
mov
ds
inc
push
ror
add
ins
push
push
scas
adc
sbb
cmp
xchg
fs
mov
je
call
or
dec
loopne
call
jo
sbb
or
or
pop
pop
fsub
popf
ins
push
into
sar
sub
xchg
in
clc
fsubp
shl
cwde
js
sahf
pop
adc
sub
xchg
inc
imul
push
jle
call
addr16
cwde
std
or
push
dec
or
in
xchg
ror
pop
jo
mov
push
nop
cdq
(bad)
cli
or
addr16
dec
and
in
dec
imul
add
call
ror
push
sub
sub
in
add
xor
xor
ret
adc
aam
aad
call
and
les
fbstp
fcom
xor
dec
add
and
mov
test
xchg
js
add
outs
fistp
pop
adc
call
adc
sahf
test
fcom
mov
mov
jmp
test
ret
push
jo
cmp
pop
adc
and
rcl
in
or
int3
and
fcom
adc
rcr
call
call
dec
bound
add
aaa
call
cmp
not
push
call
push
pop
cmps
ins
and
mov
aad
mov
add
lods
enter
pop
(bad)
dec
lock
sbb
sub
add
dec
jle
push
add
pop
jmp
sahf
ror
and
stos
ins
add
mov
cwde
jmp
mov
jnp
aas
pop
pop
pushf
adc
push
lods
fild
retf
ins
fld
add
imul
enter
fistp
fs
(bad)
(bad)
mov
lods
ror
fimul
cmp
idiv
rcr
ret
jg
cwde
cmc
pop
ror
xchg
inc
push
inc
and
sub
test
ffreep
(bad)
in
sti
xor
mov
inc
stc
sbb
pop
retf
inc
cli
dec
push
push
add
xor
das
imul
cmp
push
xchg
mov
fsubr
push
aad
daa
cmp
shr
xchg
cmps
shl
push
cli
mov
mov
mov
nop
inc
fidivr
popa
xor
pop
lahf
sub
addr16
sub
je
push
call
pop
and
outs
jb
dec
adc
mov
imul
nop
mov
fidivr
push
xchg
jmp
pop
repnz
dec
cs
pop
fdivr
call
imul
dec
push
inc
add
movs
mov
cs
push
and
inc
add
xchg
pop
xchg
or
xor
sbb
push
jne
ss
push
jle
lods
stc
push
mov
sub
clc
out
clc
jg
inc
scas
mov
aad
sbb
push
cld
adc
sub
call
cld
mov
imul
mov
xor
loop
mul
add
in
or
adc
sbb
mov
cmp
rol
sahf
out
jge
rcl
add
inc
aad
out
(bad)
sub
pop
adc
jge
ror
add
ins
sbb
rcl
push
nop
retf
fisub
sbb
pushf
outs
push
sbb
and
sbb
outs
mov
xor
adc
push
xor
adc
or
iret
lods
xchg
rcr
data16
nop
adc
inc
es
sbb
in
adc
adc
in
es
cdq
nop
inc
call
nop
or
lahf
adc
sbb
ret
sbb
add
and
xor
sbb
and
repnz
adc
sbb
mov
xor
push
and
repnz
adc
sbb
xchg
or
xchg
xchg
cdq
nop
adc
push
adc
in
adc
test
pop
xor
adc
sbb
leave
in
popf
sbb
das
leave
sub
xor
addr16
xchg
js
int3
cmp
jp
mov
nop
lahf
pop
pop
stos
jmp
mov
jmp
fidivr
leave
shl
inc
adc
xor
push
aas
inc
jg
push
jnp
fist
jnp
push
pop
loopne
push
pop
cmp
fadd
or
inc
jae
es
push
pop
xor
sbb
fs
loopne
push
inc
outs
mov
mul
dec
sahf
mov
adc
xchg
mov
or
out
or
fisttp
or
push
mov
mov
adc
adc
or
loopne
or
gs
ins
test
xchg
pop
add
or
sbb
sbb
nop
out
adc
or
or
mov
sbb
jmp
sbb
bound
ficomp
sbb
or
sbb
adc
and
in
adc
loopne
xchg
push
xor
or
imul
cmps
xchg
mov
es
out
loope
setg
pop
cmp
cwde
(bad)
add
fstp
push
cmp
lahf
stc
sbb
ficom
jmp
ss
pop
stc
mov
call
test
sub
(bad)
stos
fdivr
ret
popa
jns
ins
popa
push
add
cmovb
mov
dec
mov
sub
inc
and
clc
inc
stos
stc
dec
fbstp
in
xor
or
push
sti
aaa
mov
add
pop
fstp
cmps
adc
inc
add
xchg
pop
sbb
mov
sbb
xchg
lock
adc
sbb
es
ins
inc
xchg
inc
sub
xor
test
repnz
addr16
or
mov
nop
cmp
add
call
mov
push
mov
and
and
pop
jnp
sti
sti
lods
push
or
scas
and
dec
or
adc
das
repnz
and
sub
add
retf
add
ss
pop
xor
pop
sub
push
push
adc
pop
and
iret
dec
mov
clc
pop
sub
adc
sbb
pusha
movs
or
ins
ins
push
(bad)
mov
push
lea
jmp
mov
fstp
or
mov
add
pop
add
into
sub
or
sbb
rcl
jmp
sbb
push
or
adc
cmp
adc
xor
add
pop
jecxz
ins
and
mov
pushf
nop
in
or
mov
push
xchg
cli
cmps
shr
inc
xor
push
jl
push
push
adc
ret
sub
(bad)
mov
pushf
or
inc
mov
add
jecxz
mov
sub
inc
push
repnz
int
add
add
or
mov
enter
push
or
lods
sbb
xor
push
fbstp
outs
not
inc
adc
jmp
mov
cmc
jmp
rcl
xchg
xchg
inc
fwait
or
(bad)
adc
push
sub
add
(bad)
repz
sbb
(bad)
sbb
and
sbb
push
mov
push
jbe
mov
pop
cmp
add
call
ret
dec
jns
lahf
and
in
xchg
scas
sbb
sub
lock
shr
adc
ror
push
ret
cli
inc
pop
xchg
mov
mov
inc
and
sbb
rol
mov
shl
or
mov
inc
fs
lods
jp
pop
xor
jge
bnd
nop
sub
sub
test
inc
push
mov
dec
or
fdivrp
in
(bad)
mov
and
scas
sub
jne
or
jne
and
aas
retf
mov
icebp
das
sbb
fcom
aam
xchg
fadd
xchg
jno
lock
inc
mov
in
adc
jge
dec
mov
imul
xchg
push
xchg
into
add
adc
cwde
sub
imul
jnp
and
sbb
ins
cmp
pop
aaa
add
scas
fldenv
js
hlt
pop
xor
cld
or
ins
sar
add
cmc
or
aas
sub
inc
push
je
mov
mov
adc
jae
push
xchg
mov
(bad)
mov
nop
ss
dec
cmp
xchg
adc
push
addr16
add
adc
(bad)
pop
mov
jge
stc
outs
jecxz
add
loope
ds
jge
xor
adc
in
dec
mov
xor
and
call
stc
pop
call
inc
rcl
movs
stos
fs
and
aas
iret
jb
mov
pop
mov
dec
dec
push
add
jge
sahf
ss
dec
xor
(bad)
rcr
xchg
cmp
mov
jmp
add
inc
imul
xchg
in
mov
sbb
or
add
dec
and
xchg
cmp
push
fs
pop
cmp
lea
jo
mov
sub
sub
fdivr
jmp
enter
dec
dec
mov
aas
mov
mov
mov
or
or
mov
pusha
stc
out
xlat
jmp
pushf
pusha
or
pop
add
repz
es
sahf
ss
stos
xor
int
ficom
inc
or
test
aaa
jl
jno
mov
test
in
mov
xor
sub
lea
ret
inc
loope
or
sub
mov
retf
cdq
movs
fst
xchg
cmp
cmp
and
or
xchg
or
mov
sbb
mov
imul
xchg
mov
ret
(bad)
cmc
adc
dec
mov
scas
mov
mov
jle
mov
ja
push
xor
or
ins
pop
js
(bad)
pusha
sbb
cmps
push
inc
jl
ret
push
daa
mov
cmp
and
inc
push
sub
scas
and
xchg
or
rol
retf
mov
popa
sbb
push
test
aas
cwde
jae
test
inc
xchg
int3
ds
mov
inc
sub
or
jo
adc
xor
and
pop
cmp
and
ds
call
test
sub
add
cmp
imul
mov
jb
call
mov
pop
and
mov
sub
pop
std
pop
and
add
push
scas
mov
ss
or
dec
mov
test
jb
ins
jmp
inc
sub
cmc
mov
push
push
retf
shl
dec
jl
inc
fwait
jl
dec
add
dec
cmp
sbb
inc
call
xor
test
cmps
nop
ror
lods
lea
pop
push
inc
lods
and
js
jne
jmp
xchg
xchg
mov
sbb
in
mov
fadd
addr16
pop
jae
arpl
push
dec
and
dec
xchg
jp
lods
sbb
shr
sbb
sbb
add
les
cmps
cli
xchg
mov
test
movs
inc
in
dec
and
sbb
jns
mov
or
dec
adc
or
movs
ficom
call
sbb
sahf
push
call
push
shr
xchg
or
test
out
mov
ss
in
(bad)
dec
or
jae
aam
sti
aam
jns
xor
psubusb
sub
hlt
dec
jmp
ret
test
out
ins
fs
xor
movs
(bad)
cwde
je
out
(bad)
inc
cmp
push
push
fsubr
adc
dec
(bad)
push
cs
adc
test
jle
and
xor
rcr
cli
jecxz
sub
jmp
inc
mov
jno
dec
popa
mov
xchg
cmp
jo
stos
inc
mov
ret
jecxz
mov
loope
retf
add
retf
add
movs
xchg
or
mov
pop
xchg
xchg
mov
cs
rol
clc
add
jnp
add
mov
push
stc
adc
movs
orps
or
pop
stos
sbb
push
adc
add
shr
pop
pop
add
cld
and
jle
aas
add
or
sub
adc
inc
call
daa
lahf
sbb
jle
jbe
call
mov
call
imul
dec
das
adc
je
sub
inc
inc
cmp
xor
data16
dec
add
mov
dec
jo
jmp
arpl
in
jns
arpl
mov
enter
adc
mov
sbb
cmp
pop
push
cdq
dec
pop
push
adc
imul
enter
push
xchg
gs
pop
cmp
test
out
pusha
outs
daa
bound
pop
out
sub
xchg
ffree
out
fmul
jne
clc
push
ret
sub
cmp
sub
or
cli
dec
jmp
add
jge
shl
sbb
or
push
popa
or
call
and
xchg
mov
jns
dec
push
add
mov
xor
push
cmp
jb
dec
xor
add
movs
adc
jno
fiadd
sar
imul
add
into
call
in
sbb
push
call
sub
or
jge
mov
repnz
sbb
fnsave
(bad)
fcomp
dec
sbb
sbb
jge
mov
xlat
cmp
mul
rol
nop
test
cld
adc
and
xchg
mov
xchg
dec
xchg
push
cmp
lds
mov
ss
pop
loop
jmp
push
push
xchg
xor
or
sub
sbb
or
stos
mov
fimul
cld
dec
cdq
inc
jmp
cli
cmp
add
mov
(bad)
adc
jle
movs
aaa
je
jnp
cmp
push
call
xor
dec
sar
sbb
push
push
jp
xchg
sbb
adc
adc
ret
adc
push
lea
bnd
add
test
push
sbb
arpl
call
das
sti
sub
push
loope
mov
pushf
enter
xchg
sub
push
call
inc
xor
cld
inc
cmp
adc
xchg
(bad)
jmp
adc
(bad)
mov
jecxz
cwde
ins
jmp
les
mov
cmps
pop
xor
adc
inc
icebp
inc
push
movs
mov
push
push
data16
(bad)
xor
or
mov
adc
pop
xor
xchg
mov
inc
mov
jecxz
xchg
add
ja
aam
and
mov
pop
or
mov
ficomp
dec
(bad)
das
cli
and
push
sub
stos
call
call
mov
in
js
dec
and
cmp
outs
mov
mov
dec
jne
jb
sub
cmp
bound
or
cmp
cmp
(bad)
pop
cmps
movs
push
call
mov
mov
xchg
jp
lock
mov
pop
cld
sub
jb
popa
iret
inc
cmp
sbb
(bad)
fwait
inc
push
std
cmps
inc
jl
xchg
and
sub
and
mov
mov
xchg
ret
or
xchg
jg
iret
add
lock
popf
sbb
cmp
(bad)
in
push
fcmovne
jle
xor
or
ret
inc
pusha
mov
dec
push
xchg
pop
adc
inc
popf
cmp
cmp
aas
cmp
jg
xor
ds
add
pop
(bad)
sbb
sub
xor
and
enter
mov
popa
rcr
mov
loope
push
addr16
dec
test
dec
nop
out
push
jl
inc
adc
sub
mov
rcr
sub
cwde
jb
fwait
aaa
xchg
xlat
dec
je
push
dec
fiadd
ffree
mov
dec
ins
or
xor
test
rcl
(bad)
sbb
adc
jge
imul
and
add
push
stc
mul
add
push
xchg
retf
add
ss
sub
dec
popf
dec
test
xor
pop
push
pop
mov
dec
aaa
sbb
int
xor
add
add
fsubr
es
and
inc
and
pop
pop
sar
(bad)
lahf
push
and
xor
mov
or
dec
stos
adc
or
sbb
in
fldenv
cmps
or
push
addr16
sbb
call
and
arpl
loope
pop
add
sbb
inc
push
mov
push
push
xor
ret
call
push
xchg
call
arpl
(bad)
jno
test
cli
out
pop
test
mov
xchg
xchg
xchg
iret
stos
sbb
out
popf
and
cmp
xchg
nop
push
jp
test
jo
in
jb
pop
xor
sbb
dec
ins
movs
push
push
out
mov
test
mov
(bad)
out
cli
dec
or
add
arpl
ret
loope
sbb
sbb
add
mov
lea
sub
add
lea
and
and
fidivr
jge
xchg
pop
mov
dec
dec
cmp
add
out
xchg
sbb
push
jo
cli
or
out
(bad)
retf
jp
loopne
fiadd
icebp
call
sub
jge
xor
sbb
push
xor
loopne
fwait
daa
xor
aam
jns
in
xor
xor
adc
rcr
shl
mov
xchg
sub
pusha
ins
push
and
jl
and
mov
aas
mov
lea
sbb
push
call
les
mov
pop
push
or
movs
adc
aaa
cmp
hlt
mov
retf
cmps
nop
aas
xchg
jno
movs
inc
int
je
mov
test
mov
xchg
pushf
adc
ret
lock
add
ins
jb
ins
jo
rcl
cli
out
imul
sub
into
mov
push
and
mov
pop
pop
push
ins
or
inc
(bad)
hlt
push
push
push
ins
jmp
xor
daa
inc
xchg
adc
(bad)
cli
cmp
pop
add
push
jle
ror
adc
clc
imul
cmc
cmp
sub
fiadd
sub
int
jb
inc
inc
cmp
sub
and
outs
adc
push
(bad)
pop
inc
dec
sbb
and
cmp
and
push
call
inc
cmps
mov
xor
xchg
lods
(bad)
movs
imul
or
inc
jecxz
sbb
adc
xchg
pop
jo
sahf
lock
mov
lds
and
push
jl
xchg
pop
xchg
nop
in
dec
ins
outs
or
add
stos
adc
rol
jle
jne
imul
or
mov
add
lea
jmp
seto
inc
sbb
or
add
sti
fld
clc
inc
sbb
test
bound
inc
xchg
rol
fild
add
xor
inc
test
mov
test
mov
sbb
xchg
xor
mov
sar
pop
xchg
mov
daa
or
sbb
stc
push
call
call
dec
cmp
sbb
or
adc
inc
pusha
push
retf
add
add
xchg
jl
and
push
jb
xchg
push
clc
mov
pop
or
or
cmp
sub
sub
daa
mov
jno
or
outs
add
jbe
in
test
xor
xchg
not
xor
jno
xlat
add
sub
sbb
inc
and
ins
and
cdq
dec
add
xchg
cmp
sbb
mov
xchg
mov
xchg
mov
dec
fndisi(8087
sbb
arpl
pop
pop
out
cmc
and
push
pop
dec
mov
sbb
push
pop
mov
and
jge
daa
hlt
dec
aam
or
imul
adc
mov
scas
stc
test
scas
cmp
add
pusha
out
outs
ret
jb
mov
call
sbb
push
in
push
sbb
sbb
pop
and
sub
inc
add
or
mov
inc
sub
sbb
cwde
int3
pop
or
mov
ins
mov
sbb
fidiv
mov
pop
mov
test
xor
adc
outs
sbb
in
test
imul
sub
repnz
xchg
cwde
or
(bad)
in
push
add
call
jnp
sbb
cmp
jbe
(bad)
dec
hlt
loope
push
mov
pop
sub
jmp
sti
cmp
push
mov
loopne
or
mov
lods
jo
cmp
sbb
push
adc
adc
mov
and
xlat
fwait
push
xor
fst
and
xchg
(bad)
push
jne
test
and
jb
daa
xor
aaa
out
lahf
push
pusha
sub
adc
cmp
xor
ret
inc
sub
test
cmp
in
xchg
mov
sbb
fnstsw
fistp
out
push
pushf
and
sahf
inc
push
xchg
icebp
add
in
neg
test
stos
xchg
sahf
ror
nop
lahf
cmps
push
adc
mov
jl
mov
ret
jns
mov
mov
fwait
mov
test
addr16
and
popf
adc
popf
loopne
and
dec
in
inc
ja
push
test
mov
cmp
sub
aam
or
xor
jge
inc
inc
push
pop
and
push
xor
ins
mov
fwait
imul
push
push
inc
ret
or
jmp
and
mov
inc
fwait
add
push
or
inc
pop
dec
or
push
sub
inc
enter
mov
adc
and
pop
(bad)
lods
push
push
pushf
sub
and
aas
xchg
sub
mov
sahf
and
test
pop
fnstcw
lock
inc
push
push
call
and
aaa
xlat
mov
pop
pop
int3
push
ss
jo
and
jmp
pusha
and
mov
xchg
mov
and
(bad)
dec
and
push
ret
lods
cmp
in
add
or
jmp
or
test
sbb
daa
gs
jg
sub
xor
clc
push
and
test
jmp
pop
sbb
loop
push
outs
ret
jb
push
in
loopne
sub
mov
(bad)
mov
xchg
xchg
pop
fwait
in
fadd
mov
mov
add
aam
add
xchg
adc
cmp
mov
pop
stc
pop
jl
sub
in
sbb
call
push
inc
sbb
adc
stos
in
in
ud0
push
dec
add
dec
jb
retf
pop
je
or
in
imul
jl
mov
dec
jmp
jb
lea
dec
aas
cmp
and
ins
jns
push
cli
add
scas
cmp
xor
sar
popa
mov
and
sbb
jecxz
push
mov
add
jmp
(bad)
(bad)
or
fwait
cmps
mov
repz
add
rcl
pop
xchg
pop
or
push
cmp
(bad)
cmp
shr
jge
jb
in
cmps
push
pop
mov
fiadd
icebp
test
add
add
push
jno
ins
imul
loop
dec
lea
je
cdq
mov
xchg
mov
arpl
mov
imul
(bad)
mov
push
push
xor
fimul
mov
loope
dec
cmp
ret
lea
outs
push
lods
cld
test
out
and
adc
imul
repz
adc
pop
nop
add
stos
jmp
int
xchg
clc
and
push
adc
pushf
dec
mov
test
aam
cli
fcom
repz
sbb
xchg
xchg
jge
mov
mov
loopne
cwde
ret
loope
xlat
mov
jne
bound
add
iret
fwait
addr16
lods
sub
sub
pushf
out
loop
add
sbb
pusha
(bad)
and
jne
cmp
(bad)
ins
cmps
sub
repz
jbe
mov
aas
in
jno
jge
adc
mov
test
dec
jb
and
aas
loope
sub
loopne
sub
jae
mov
jmp
adc
gs
fadd
mov
fsub
or
fimul
pusha
(bad)
in
xor
mov
mov
cmps
mov
or
add
fnsave
xchg
jnp
jg
pop
push
and
call
add
repz
(bad)
xchg
cmp
aad
aad
xchg
repz
jo
adc
xchg
clc
loopne
test
push
xchg
mov
adc
out
xchg
inc
test
dec
fcmovbe
sub
xor
ret
xchg
jo
pmulhuw
hlt
fucomi
jnp
jmp
mov
adc
addr16
mov
icebp
inc
les
lea
xlat
inc
in
mov
cs
cmp
scas
push
ins
xor
fs
lds
sub
sbb
fstp
sbb
inc
fs
enter
ins
test
pop
leave
sub
push
lea
jle
cs
xor
mov
movs
push
sbb
xchg
inc
push
lahf
mov
dec
mov
or
nop
or
ss
mov
cmp
jp
dec
outs
jae
jnp
and
sub
or
sub
test
pop
fidivr
add
push
enter
add
pop
mov
sahf
sbb
adc
call
sub
fs
pop
mov
enter
dec
fidiv
mov
jp
inc
and
xor
sub
inc
pop
test
mov
(bad)
sbb
push
sub
push
and
and
retf
ins
mov
test
xchg
sbb
or
loopne
jb
imul
push
dec
push
div
rcl
ret
mov
cli
mov
xor
mov
sbb
add
jno
dec
test
adc
adc
pop
mov
adc
lods
push
dec
clc
rcr
lea
xchg
std
aaa
adc
xchg
push
cmp
je
cmp
jne
ds
ror
inc
push
dec
movs
mov
mov
xchg
lods
rol
cmps
mov
and
int3
in
mov
lock
ret
in
or
jecxz
std
hlt
(bad)
jo
inc
pop
jb
mov
pop
dec
cld
push
in
mov
stos
loopne
lock
push
lds
mov
fisubr
(bad)
aaa
add
and
pop
push
pop
stc
shl
or
pop
mov
add
add
add
fistp
cmp
cmp
(bad)
int3
inc
dec
cmc
lahf
pop
xor
retf
jle
aam
jo
jbe
scas
call
push
sub
add
jecxz
xor
pop
push
outs
inc
dec
pop
pop
or
dec
test
push
cwde
mov
or
dec
push
sub
sub
xchg
add
or
sbb
stos
mov
jl
xchg
je
ja
add
es
lahf
je
pop
jo
inc
cmps
dec
and
mov
cmp
pop
jge
xor
ret
sub
xlat
adc
or
retf
jbe
xchg
pop
imul
stc
call
xor
pop
or
call
clc
pop
rol
xor
aam
push
neg
nop
test
test
xchg
pop
rol
int
jecxz
pop
loopne
jns
sbb
pop
fld
(bad)
mov
inc
test
push
sti
shl
aas
aaa
je
mov
imul
cmp
call
dec
sub
xchg
pop
loope
push
adc
xor
add
lea
mov
jbe
add
ds
test
es
(bad)
pop
xchg
popa
enter
adc
pop
inc
cs
call
jp
push
inc
das
jae
je
mov
push
ds
push
xchg
sbb
call
xor
and
sbb
je
test
ss
lea
jmp
cld
in
popa
mov
shr
lods
add
xchg
cmp
(bad)
add
or
imul
mov
xchg
leave
mov
adc
add
mov
pop
fwait
dec
clc
es
cmps
sub
xchg
ret
sbb
pop
or
push
hlt
ins
pop
xor
or
sub
mov
push
or
loope
mov
call
mov
mov
xor
neg
push
nop
fwait
adc
das
push
movs
add
add
sar
adc
push
xor
dec
sbb
mov
cmp
aaa
sub
dec
fbstp
(bad)
idiv
popf
add
sub
scas
sbb
stos
das
mov
jae
repz
movs
inc
push
add
test
xchg
dec
xchg
loope
or
movs
mov
xlat
ins
sbb
enter
mov
push
xor
mov
icebp
sbb
or
stc
repnz
lock
dec
sub
adc
idiv
add
jae
dec
jb
mov
(bad)
test
mov
push
jb
jl
cmps
fidivr
fst
test
es
xchg
mov
popa
pop
mov
sub
jo
rcr
es
aas
rep
inc
inc
sbb
into
dec
sbb
adc
and
nop
mov
inc
rcr
mov
leave
add
div
push
fst
call
cmp
add
bound
jecxz
je
xor
(bad)
dec
retf
fnstenv
hlt
mov
pop
movs
mov
fild
xchg
mov
mov
xor
outs
daa
adc
cmp
add
mov
mov
cli
out
call
cmp
sub
call
fadd
mov
mov
inc
mov
cmovp
mov
mov
pop
xor
and
es
push
outs
clc
pop
inc
loop
dec
lock
or
push
ss
neg
or
and
mov
sub
fimul
jnp
(bad)
ins
xor
inc
mov
rol
sbb
jecxz
push
in
jl
test
je
push
sub
std
and
mov
dec
xor
mov
enter
test
push
mov
nop
enter
push
jmp
and
jl
dec
jge
jmp
jecxz
add
fadd
mov
jae
lahf
jmp
test
push
out
(bad)
jmp
add
les
hlt
inc
pop
mov
das
sub
adc
cli
fwait
add
adc
mov
xor
scas
jmp
ret
pop
es
dec
inc
int3
js
dec
add
push
movs
and
test
jno
ss
push
idiv
icebp
fadd
sbb
outs
xchg
(bad)
jmp
sub
jmp
ss
sbb
xor
xchg
add
cdq
mov
pop
mov
cmc
add
call
sbb
clc
cmc
inc
adc
nop
add
add
mov
add
adc
inc
popa
pop
jge
loopne
test
js
add
and
ret
cmp
jge
pop
fs
sbb
std
and
inc
or
daa
das
mov
ret
lock
and
cmps
test
or
inc
inc
cmp
js
add
sar
lods
mov
aad
pop
lods
sub
add
lods
fbstp
shl
jle
shr
xor
push
mov
jns
push
xor
pop
mov
fild
or
add
dec
ret
mov
ret
repnz
lds
mov
xchg
retf
xor
adc
inc
adc
gs
shr
jnp
xchg
sbb
mov
fcmovnb
xor
xchg
mov
fdivr
or
jecxz
jmp
ds
shr
sub
dec
inc
xor
js
add
xchg
sbb
(bad)
fcmovnu
shl
and
call
mov
clc
sbb
adc
jb
pshufw
jne
and
shr
jne
pop
push
shl
dec
adc
movs
mov
sub
rol
sbb
aaa
xor
inc
(bad)
dec
or
fst
xchg
sub
shl
call
or
jmp
mov
mov
sub
sub
or
jmp
fucomp
fcomp
push
ud2
sub
and
or
loopne
test
adc
pop
xchg
mov
ins
sbb
stc
mov
(bad)
ss
push
in
lods
and
in
add
sahf
frstor
xor
push
enter
popa
jg
pop
or
jbe
and
cmp
hlt
mov
out
loope
in
xor
xor
rcl
fs
pop
(bad)
push
jmp
pop
daa
cli
inc
call
nop
rol
les
mov
jno
enter
in
adc
xchg
movs
mov
and
cdq
ins
mov
int
add
xor
mov
test
jg
sar
jge
pop
pop
add
pop
test
push
inc
shr
inc
retf
add
dec
cmps
ficomp
mov
inc
jne
pop
push
cld
jb
or
and
jbe
sbb
mov
(bad)
movs
pop
jge
push
push
add
mov
jg
inc
loop
jbe
mov
test
mov
sub
jg
pop
add
repnz
or
xor
inc
fstp
out
and
js
push
mov
sar
dec
sub
jp
and
inc
dec
inc
push
push
sub
jmp
inc
es
push
mov
jne
inc
inc
and
sbb
and
jne
or
lea
pop
je
mov
mov
sbb
aas
popa
cld
pop
jle
jg
cmp
jecxz
loope
fwait
lock
add
cmps
sbb
ficomp
scas
mov
repz
adc
movs
xchg
rcr
repz
jb
xor
sub
repnz
and
add
push
nop
sbb
lea
shr
or
sbb
push
ins
inc
nop
cs
test
cmp
mov
ins
cwde
jo
dec
xor
mov
imul
mov
adc
mov
pop
and
push
pop
and
sbb
loopne
or
mov
or
inc
push
add
loopne
sub
movs
mov
inc
nop
fisubr
popf
jns
inc
push
xor
or
inc
retf
adc
call
test
das
push
inc
out
clc
ret
mov
or
pop
test
pop
rol
gs
xchg
and
fsubr
pop
push
hlt
push
add
xor
fidivr
arpl
push
rol
mov
inc
jmp
addr16
push
sub
add
or
ins
out
push
jne
xchg
xchg
mov
cmp
dec
adc
loop
loopne
cmc
dec
ret
mov
mov
sub
dec
sti
ss
daa
out
sub
sahf
jbe
xor
dec
nop
push
imul
mov
push
push
cmp
xor
pand
fist
aad
adc
dec
or
xchg
push
lahf
adc
ins
inc
pop
or
int3
mov
lods
pop
or
jno
rol
cs
jne
hlt
xchg
retf
ret
push
movs
pop
loop
mov
movs
jmp
push
xchg
in
into
dec
jo
gs
jp
sub
(bad)
jns
cmp
add
imul
test
push
or
sahf
jecxz
mov
sub
call
in
push
rcl
mov
lahf
cs
adc
or
xor
sbb
neg
and
imul
add
xchg
outs
inc
movs
mov
xchg
cmps
xor
(bad)
call
mov
add
sbb
mov
xchg
out
outs
das
arpl
sub
gs
add
inc
add
add
ret
xor
shr
push
rcr
add
jo
xchg
jle
mov
xchg
enter
pop
cs
adc
mov
sbb
xor
imul
adc
push
ds
push
cmp
leave
cmps
push
jge
push
cmp
mov
adc
loopne
jb
push
repnz
xor
aad
movs
cmp
sbb
lods
pop
add
sub
xor
push
test
adc
sub
dec
mov
xor
or
add
push
xor
iret
or
fcom
sahf
cmc
sub
sbb
xor
pushf
and
outs
inc
inc
push
jne
nop
je
cld
(bad)
aad
add
jmp
xchg
sub
les
dec
js
add
sbb
into
jnp
adc
sub
pop
pop
pop
sub
pop
test
popa
sub
push
pop
imul
call
cmp
or
dec
xchg
inc
sbb
dec
repz
clc
dec
push
mov
cs
ja
jo
and
adc
mov
enter
and
mov
xor
push
es
pop
pusha
sub
add
push
rcl
mov
xchg
jmp
pusha
aam
mov
ss
cmp
and
test
add
mov
call
or
add
pop
adc
push
pop
call
cmp
push
stos
and
push
dec
mov
xor
pop
and
sbb
into
and
stc
jmp
and
push
and
adc
sar
adc
push
push
and
xchg
imul
and
sbb
daa
push
pusha
nop
es
fsubrp
pop
adc
mov
(bad)
(bad)
jl
inc
and
dec
inc
jmp
scas
cmc
mov
mov
or
stc
fdivr
adc
out
shl
cmp
mov
loopne
aam
lods
push
pop
movs
loope
pop
adc
test
mov
imul
inc
jle
stos
movs
add
cmc
in
sub
ins
xlat
jmp
movs
inc
inc
call
pop
fld
loop
rcl
shr
lds
ror
aas
xchg
push
(bad)
hlt
fbld
dec
lods
jg
daa
adc
push
fsub
xor
pop
addr16
out
mov
cmps
and
mov
call
push
sub
shl
jg
imul
test
push
and
ja
and
xor
push
test
cld
or
push
xchg
icebp
ds
int
mov
pushf
data16
imul
adc
push
push
jmp
outs
push
test
inc
jmp
adc
rcpps
jmp
ficomp
dec
in
imul
jno
adc
ror
or
push
add
repnz
mov
fldcw
xlat
shl
daa
int3
imul
sbb
and
test
aas
dec
arpl
xor
cmp
adc
lea
pop
jle
in
in
add
test
push
clc
pop
ret
daa
inc
push
push
arpl
jno
xchg
ret
sbb
lea
pop
push
sahf
out
dec
sbb
adc
adc
sbb
test
outs
adc
scas
push
(bad)
push
push
cwde
sbb
inc
out
cmp
sub
fucomip
or
mov
shl
inc
jp
jno
cmps
aam
pop
stos
xor
sahf
out
cmp
in
dec
adc
and
adc
scas
adc
xor
inc
inc
out
shl
xchg
push
fcmovnbe
icebp
ret
and
sbb
mov
pusha
xchg
pop
jae
jmp
add
push
sbb
cmp
mov
call
pushf
xchg
rcr
daa
and
ins
rcl
pop
mov
push
neg
pop
or
rol
scas
jmp
enter
call
call
sbb
inc
and
or
add
dec
out
xor
push
pop
icebp
adc
pop
xor
shr
push
fadd
push
push
mov
ja
mov
leave
xchg
dec
add
(bad)
popa
push
jle
mov
push
inc
xchg
inc
(bad)
adc
inc
adc
sbb
pop
in
or
loop
hlt
add
ret
sub
push
push
or
inc
or
jl
sbb
test
push
sbb
mov
pop
add
sub
sbb
inc
and
sbb
test
jb
pop
lods
push
sub
sbb
pop
add
push
sub
sbb
ror
stc
clc
adc
or
arpl
or
add
dec
or
arpl
sub
mov
mov
and
and
push
stc
cmp
sub
cld
inc
pop
pop
aad
es
loop
rol
add
ret
sar
push
inc
test
dec
sbb
jno
sub
leave
test
mov
loopne
xor
adc
add
shl
lock
mov
(bad)
push
stos
push
pop
cmp
or
sbb
jp
(bad)
into
rcl
inc
shl
data16
int3
iret
cmps
push
jae
cwde
in
(bad)
add
call
arpl
xor
push
imul
mov
xchg
mov
es
jge
popf
xchg
nop
sub
imul
dec
and
mov
outs
addr16
sub
je
adc
pop
sub
xor
call
sub
jo
mov
ret
mov
out
sub
aaa
test
dec
add
mov
jle
cmp
xor
xor
cmps
fistp
mov
xchg
push
adc
fisttp
mov
or
lods
xor
adc
jge
push
jmp
push
mov
mov
clc
js
stos
xor
mov
jecxz
jl
add
jae
mov
and
scas
inc
dec
cmp
mov
movd
loope
or
ins
sbb
push
sub
sbb
adc
cs
shl
cmp
push
xchg
mov
dec
cmp
cmp
sar
jmp
dec
das
pushf
and
mov
mov
pop
ja
(bad)
cmps
xor
adc
out
cmp
adc
ret
jns
xchg
jnp
jp
xchg
outs
push
mov
pop
fnstenv
pop
fistp
cmp
(bad)
adc
ins
fstp
jae
jae
xor
out
pop
test
loop
rcl
inc
add
inc
and
or
rcl
(bad)
mov
sbb
mov
jnp
push
mov
lock
iret
mov
fcomp
mov
cmp
retf
mov
cmp
cmp
cmp
adc
pop
lock
outs
fabs
popf
arpl
inc
jnp
inc
jmp
adc
inc
loope
shl
out
cld
xor
mov
push
sub
jne
jmp
sbb
cld
sbb
pop
ror
adc
cmp
fbld
loope
xor
ds
fcmovnu
push
(bad)
jbe
add
sbb
aaa
add
jns
inc
and
jg
or
inc
cmp
ins
outs
xor
push
or
leave
push
dec
lock
inc
popf
mov
dec
loopne
dec
add
and
mov
xor
jle
ret
dec
ss
xor
sub
and
std
adc
push
test
fisubr
mov
and
(bad)
sub
sbb
imul
std
jne
leave
mov
gs
cmp
mov
iret
jl
mov
ret
mov
pop
je
adc
push
add
mov
adc
cwde
xor
inc
and
fld
jle
cmp
imul
cmp
scas
sub
pop
push
push
or
add
or
sub
push
mov
aas
ret
adc
lods
hlt
cmc
adc
gs
outs
sbb
xlat
mov
and
cmp
and
outs
popf
imul
adc
repnz
and
push
inc
inc
sbb
pop
or
dec
fistp
int3
or
or
cmp
(bad)
ror
mov
dec
xchg
cmp
adc
and
sub
mov
cmp
jae
pslld
add
sar
adc
push
jne
cli
test
xchg
rcr
cli
xlat
mov
outs
mov
sub
rcl
ret
cmp
sbb
xor
sysret
push
sub
hlt
add
clc
nop
or
or
inc
mov
outs
in
inc
loope
shr
mov
test
adc
stos
dec
push
cmps
or
cmp
rcl
or
push
push
arpl
rcr
sbb
xchg
call
mov
or
mov
push
sbb
push
xor
jo
popf
mov
nop
adc
sub
jg
retf
and
les
jg
(bad)
das
rcl
(bad)
jbe
adc
or
xchg
or
xlat
mov
int
sub
out
pop
cli
push
lock
sub
in
push
pop
(bad)
mov
sar
or
icebp
add
push
inc
xlat
jg
lea
add
sub
(bad)
cld
cdq
dec
or
push
xor
jle
imul
cli
add
dec
add
test
dec
ret
adc
fs
pop
xchg
popf
pop
iret
sti
pop
push
jmp
ficomp
jg
xlat
cmps
mov
ds
pop
pop
push
test
sbb
fadd
sbb
(bad)
sbb
xor
pusha
inc
(bad)
cmp
add
dec
cwde
js
xor
pop
cmps
sbb
push
stos
loope
jbe
adc
cmp
sub
cmps
cmp
jge
push
inc
push
push
inc
sar
adc
lea
cmp
push
fucom
or
ds
enter
pop
push
xchg
xor
sbb
and
dec
mov
mov
or
hlt
cmp
add
jbe
pop
js
adc
lahf
add
sbb
test
adc
push
add
mov
add
pop
aas
ja
jl
(bad)
retf
xchg
(bad)
cmp
rcr
push
mov
pop
pop
add
cmp
mov
pop
push
add
ins
ja
fs
stos
inc
push
push
test
pop
xor
add
cmp
repz
push
inc
jecxz
cmp
pop
rcl
add
sbb
jbe
cmc
mov
mov
or
sbb
dec
add
mov
xor
xor
pop
jmp
mov
sbb
mov
fwait
movs
mov
or
sub
adc
adc
shl
or
xchg
mov
push
cdq
jno
xlat
jecxz
pop
outs
sti
popf
dec
adc
push
push
iret
div
inc
shr
push
sbb
hlt
mov
xchg
mov
dec
into
jmp
mov
mov
jmp
or
sar
xor
es
or
xlat
ret
sbb
mov
int3
loop
test
xor
push
pop
dec
xchg
mov
add
dec
movzx
cmp
jne
or
cs
or
add
mov
xor
retf
push
cmps
or
ror
dec
dec
dec
dec
and
mov
add
cmps
xchg
jg
cmp
push
xchg
add
xchg
pop
in
mov
fs
sub
test
sub
xor
test
mov
sub
fiadd
xchg
movs
mov
call
mov
sub
icebp
mov
mov
movs
(bad)
sub
test
lds
mov
pop
std
loopne
loope
or
xchg
mov
or
fwait
(bad)
jle
shl
leave
and
add
pop
add
hlt
in
movq
clc
add
faddp
pand
push
or
frstor
xor
add
inc
lods
add
and
and
add
dec
int
sub
je
outs
dec
call
mov
pop
mov
ins
rol
mov
push
mov
pop
bound
sbb
lock
out
jg
pushf
and
and
inc
add
push
aam
push
lds
ficom
fisubr
inc
dec
loope
pop
mov
pop
push
pusha
jne
adc
popa
movs
add
and
jo
ficom
dec
push
fldl2t
and
and
dec
jecxz
push
pop
mov
repnz
or
lahf
js
inc
pop
cld
aad
aas
mov
arpl
lock
out
lds
cmps
xor
mov
jle
in
xchg
cmp
mov
sbb
and
xlat
jl
mov
push
sub
sub
dec
test
inc
inc
cmps
gs
mov
jnp
add
popf
rol
push
int
add
aad
xlat
dec
fcmovnbe
add
add
add
imul
imul
sbb
scas
fldcw
mov
mov
add
adc
imul
adc
adc
lahf
ds
adc
sbb
cmp
test
push
xor
push
add
(bad)
ins
and
stc
(bad)
sub
jb
or
fcomp
fadd
mov
pop
push
fs
mov
in
jmp
cmp
ins
pop
or
(bad)
stc
call
jae
das
and
mov
popa
sub
adc
or
out
mov
les
or
inc
mov
in
dec
xor
inc
das
pop
int
or
sub
mov
loopne
jo
ss
pop
ror
shr
add
sbb
fiadd
xchg
inc
test
xor
pusha
and
and
mov
sbb
iret
loope
daa
lea
xor
cli
adc
cmp
imul
fbld
(bad)
sahf
(bad)
add
lock
add
dec
je
add
jge
scas
rcr
fdiv
ror
in
(bad)
out
pop
mov
and
xchg
dec
mov
push
out
loope
push
aas
adc
imul
and
outs
ins
gs
and
inc
sub
sbb
jg
test
imul
jo
retf
jp
mov
mov
fnstcw
(bad)
not
xor
adc
mov
push
iret
clc
mov
mov
dec
shr
push
call
jge
or
pop
(bad)
in
pop
push
add
lods
add
or
add
or
xor
mov
pusha
mov
mov
leave
loopne
add
data16
jmp
push
scas
std
push
add
mov
dec
movs
ret
cmps
sub
sahf
aad
push
daa
and
add
dec
push
call
test
les
pop
(bad)
call
fadd
adc
rol
xor
movs
nop
lods
(bad)
sti
jbe
mov
mov
pop
jo
ror
mov
jb
data16
popa
into
fwait
push
xchg
ret
xchg
inc
ss
sbb
cwde
sub
xlat
sar
jmp
mov
adc
or
jle
je
sub
jno
jmp
into
xor
ds
xor
fs
daa
or
dec
sti
jp
lods
ror
xor
test
xchg
(bad)
jno
xor
int
sub
and
jno
add
fwait
cmp
cdq
jbe
jno
out
jmp
xchg
cwde
push
(bad)
aas
inc
mov
call
sub
cmp
iret
push
add
retf
xor
das
xchg
ss
cmp
inc
mov
pop
popf
jns
(bad)
jge
test
dec
fcom
int3
into
gs
je
jl
cld
pushf
xchg
lds
or
cwde
pop
sub
call
add
add
ret
sar
ds
add
sub
dec
popf
es
or
hlt
(bad)
inc
out
rol
xor
xchg
or
push
mov
pop
enter
call
mov
cmp
lahf
clc
cmp
pop
cmp
je
inc
dec
push
pop
jne
or
ins
cmp
sub
cld
mov
sub
sub
and
or
ds
mov
in
mov
jnp
mov
or
push
neg
push
call
push
sbb
inc
push
and
jmp
lahf
or
push
sub
sub
xor
out
test
test
js
mov
sti
jo
icebp
dec
ins
and
cli
loopne
mov
and
jp
jle
push
push
call
mov
jg
push
push
pop
jmp
xchg
push
test
jl
jge
mov
cdq
push
xchg
inc
repnz
xor
clc
in
and
inc
sub
jmp
and
icebp
repz
mov
jae
(bad)
lods
ret
xchg
test
mov
lea
push
popa
mov
mov
adc
rol
jnp
outs
ficom
fbstp
ds
ds
cmc
pop
jnp
mov
or
data16
lods
aas
cmps
test
sub
aaa
xor
pop
cmp
sbb
cmp
mov
xchg
push
inc
mov
jg
jmp
out
(bad)
fnstsw
aam
je
rcl
cwde
mov
fistp
inc
lock
and
lods
pop
rcr
xor
test
or
sbb
pop
movs
fdivr
cmp
push
mov
(bad)
xchg
mov
mov
or
bndldx
or
in
(bad)
mov
push
push
lea
push
mov
(bad)
shl
add
gs
sub
jle
add
nop
mov
ror
push
or
xor
aad
add
int
(bad)
(bad)
in
jg
daa
or
mov
inc
adc
xchg
in
adc
inc
ins
test
mov
xchg
xor
or
int
ds
jo
sbb
outs
scas
ja
push
dec
push
dec
xchg
dec
ss
test
sbb
jecxz
mov
sub
addr16
xlat
and
mov
cmp
cmp
add
aaa
cmp
shr
jle
cmp
test
ins
jo
test
dec
or
pop
xor
nop
cmp
repnz
mov
adc
and
inc
es
aam
repnz
imul
imul
add
or
xchg
sbb
mov
sub
and
ret
(bad)
(bad)
adc
xchg
stc
fcomp
jb
adc
sbb
mov
or
mov
cld
push
cld
fistp
sub
jne
add
dec
mov
scas
or
mov
clc
lahf
hlt
or
std
pop
nop
xchg
inc
in
adc
jnp
sbb
sar
pop
iret
stc
cli
mov
xchg
cmp
imul
or
out
pop
in
sbb
stc
add
fmul
cdq
fadd
(bad)
aas
gs
push
jne
and
xchg
and
pop
sbb
adc
sahf
sub
retf
sbb
jnp
mov
sbb
jecxz
pop
adc
or
xor
shl
adc
movs
fist
mov
popa
or
repnz
jb
add
pop
and
pop
jb
adc
mov
add
sub
imul
or
inc
hlt
in
ret
adc
pusha
or
(bad)
xchg
push
outs
mov
mov
cli
retf
push
and
(bad)
(bad)
sub
sti
xor
jle
pop
pop
ds
mov
or
hlt
paddd
in
cs
sbb
push
and
or
cdq
mov
xchg
into
sbb
hlt
add
loope
sbb
(bad)
adc
imul
popf
movs
and
xchg
add
jl
icebp
ret
jno
es
sbb
inc
in
and
xchg
outs
adc
call
or
xor
mov
or
push
fcomp
popa
ret
in
loope
xchg
shl
stc
call
out
test
pop
fild
adc
add
call
or
in
and
xchg
gs
add
mov
loop
xchg
push
xor
and
and
xchg
mov
jg
ror
in
push
push
xchg
jg
push
int
lods
sub
pop
mov
ss
mov
sti
inc
jmp
xchg
movs
imul
ja
adc
popf
out
fnstenv
and
cmps
idiv
cli
mov
pop
call
les
pop
icebp
xchg
cmp
push
push
xchg
or
xchg
mov
movs
fcom
inc
pop
sbb
add
cmps
add
inc
or
je
sbb
push
push
mov
js
pop
jo
pop
jae
sbb
jb
test
cli
jg
push
jo
fs
fst
test
pop
dec
dec
ror
inc
jle
or
adc
outs
pop
icebp
cmp
pop
add
pushf
jl
add
stc
das
mov
push
cmp
cwde
in
jmp
scas
test
xchg
aaa
adc
mov
add
push
lahf
jle
sbb
rcr
retf
adc
mov
cmp
(bad)
outs
cmp
(bad)
xchg
xchg
xor
sub
add
inc
mov
in
cdq
pop
xor
mov
ins
pop
repnz
push
pop
sbb
jge
lods
sub
pop
dec
dec
add
loopne
movs
rol
sub
stos
ror
adc
cmp
mov
pop
or
xchg
sub
jne
sahf
enter
ret
sbb
lahf
and
or
or
push
arpl
pop
dec
sub
or
cld
jmp
fmul
pop
rcl
push
(bad)
cmp
and
adc
inc
(bad)
ds
push
rol
push
sub
dec
jae
jge
add
imul
jge
add
dec
and
adc
in
and
xor
dec
div
ins
inc
inc
cs
jnp
popf
inc
adc
je
push
jns
adc
enter
push
neg
jae
and
jmp
add
and
(bad)
fucomp
or
das
add
jo
mov
add
leave
retf
sub
push
and
sbb
push
push
lods
add
addr16
cmp
enter
cs
jnp
mov
outs
xchg
pop
xchg
lods
test
jmp
mov
pop
dec
push
and
dec
cs
adc
jns
add
mov
adc
mul
sbb
or
(bad)
jge
lock
js
je
jle
jp
add
pop
inc
call
push
gs
clc
dec
sbb
gs
call
push
push
or
add
cmps
leave
ret
arpl
mov
pop
ins
mov
adc
rol
lods
ficom
and
fisub
sub
dec
mov
mov
in
dec
retf
ins
or
mov
add
test
mov
pop
sub
cmp
sub
add
movs
rcl
rcr
and
fcmovnbe
inc
sbb
pop
pop
rcl
inc
jmp
call
(bad)
xor
mov
je
jns
jbe
xor
push
add
adc
fs
outs
push
xor
out
fbstp
stc
ins
inc
dec
ror
rcl
stc
and
sar
test
xchg
cli
and
adc
adc
adc
push
in
adc
dec
add
push
mov
mov
int3
xor
or
pop
mov
inc
mov
pop
dec
in
and
test
(bad)
or
cmc
and
fild
jmp
repz
mov
mov
pop
push
aaa
jmp
inc
cmp
movs
inc
fs
adc
push
sbb
ret
add
pop
or
stc
cmps
pop
rcr
jno
cmps
mov
mov
cld
adc
movs
imul
arpl
movs
loopne
cmp
fidiv
add
sahf
cmp
retf
jb
(bad)
sahf
mov
mov
adc
je
push
adc
pop
mov
adc
add
adc
lea
or
aam
arpl
jmp
std
push
shr
dec
mov
aad
cld
idiv
loope
stc
jmp
ret
add
sub
xchg
xchg
loopne
ss
hlt
add
adc
xor
adc
dec
jg
test
push
jb
jmp
ss
scas
xchg
dec
and
dec
sub
int
lea
jno
les
fsubr
dec
sahf
pushf
mov
iret
iret
in
call
pop
push
ret
push
adc
mov
push
mov
sub
mov
lods
pop
lds
cmp
or
nop
repz
xor
(bad)
adc
fwait
xor
sbb
push
les
pop
mov
les
xor
lahf
mov
mov
mov
push
push
movs
push
aas
xchg
ins
cmp
push
nop
dec
ds
sub
xor
ds
mov
call
lods
adc
or
jnp
add
lock
adc
repnz
gs
js
jg
adc
frstor
in
ins
add
or
jae
outs
add
push
xor
pusha
sbb
loopne
add
sub
pop
sbb
sub
fiadd
mov
push
push
and
fbstp
xor
pop
(bad)
push
sub
add
mov
and
test
push
sub
icebp
adc
sar
ins
retf
lods
or
pusha
dec
sbb
clc
jmp
add
fwait
xchg
mov
inc
test
imul
and
and
xor
adc
int
xor
push
push
cmp
enter
sbb
adc
push
daa
retf
cmps
lock
int
cmp
jp
mov
rcl
adc
jg
pop
cmps
adc
add
fld1
xchg
sub
adc
call
idiv
test
add
cmp
jae
mov
icebp
sub
add
mov
rcr
mov
not
add
dec
dec
add
push
add
rol
jno
pop
xchg
dec
add
xor
sub
jbe
push
dec
or
add
and
xchg
cmp
push
frstor
sbb
mov
cdq
mov
jmp
inc
lea
cdq
cmc
add
mov
add
out
adc
pop
jno
fcmovne
and
xchg
lods
push
pop
and
mov
cmp
loopne
mov
pusha
cmp
pop
inc
fs
mov
ud0
and
add
inc
jne
jge
retf
pop
xchg
dec
cmps
or
retw
xor
ds
sub
iret
fsub
sbb
sbb
ds
pop
lods
call
(bad)
and
das
cmp
arpl
int
cdq
clc
sbb
push
popf
jge
lds
cmp
xchg
sbb
add
pushf
leave
sbb
xor
xchg
push
dec
or
push
push
ror
in
pop
xchg
lods
xchg
sti
fld
dec
pop
frstor
and
jo
sbb
lock
ror
adc
or
call
xor
push
pusha
dec
cmp
add
stc
mov
cmps
add
dec
inc
icebp
dec
adc
sbb
adc
ins
sti
call
pop
adc
jbe
rcl
test
or
mov
pop
daa
mov
xchg
inc
mov
ss
sub
jmp
jbe
ds
sbb
sub
sbb
enter
push
add
sub
pop
add
mov
cmps
dec
shr
and
jp
add
push
sub
add
fcmovbe
jb
and
enter
enter
outs
lods
push
adc
jp
or
pop
leave
pop
mov
adc
loope
xchg
sub
push
enter
mov
mov
stc
outs
add
js
and
push
dec
out
test
adc
outs
adc
add
xor
sub
push
xchg
sub
aad
add
arpl
cmp
pushf
call
iret
adc
stos
dec
xor
mov
xor
and
in
mov
pop
in
stc
inc
cs
cmc
sbb
repz
push
sbb
stos
push
and
xor
push
xor
inc
pushf
sar
and
lea
ds
add
push
dec
pusha
in
and
xchg
sti
and
jbe
xchg
adc
scas
clc
pop
add
xor
jg
bound
leave
jnp
pop
test
call
mov
inc
stos
inc
aad
xlat
xchg
mov
xor
pushf
loopne
jl
sbb
add
stc
push
adc
in
call
mov
jl
(bad)
pusha
inc
jmp
sbb
push
jle
int
xor
adc
mov
or
add
test
ins
mov
add
pop
xor
inc
push
jns
xor
pop
sbb
cwde
mov
and
or
xor
add
sub
sub
mov
and
stc
inc
and
arpl
adc
pop
mov
loope
ret
lds
icebp
adc
test
ret
inc
xchg
jbe
bswap
push
xchg
push
mov
push
dec
cs
fnop
aam
jb
out
std
mov
add
cld
js
dec
push
mov
fcomp
pusha
arpl
jnp
test
xor
retf
popa
cmps
sbb
add
jge
dec
jo
stos
retf
inc
add
adc
and
sub
aam
xor
push
stos
cmp
dec
mov
push
in
shl
fs
xor
and
ror
inc
push
mov
sbb
sahf
push
scas
and
push
ja
jecxz
lahf
cld
out
jb
stc
push
mov
rol
cmc
pop
cmp
mov
xor
psubq
jbe
data16
push
ss
dec
lods
lock
ss
adc
fbstp
adc
js
rcr
rcr
jb
push
add
inc
push
push
jns
ss
in
int3
movups
push
stos
or
pop
mov
sahf
cmp
into
fiadd
lods
push
test
pop
arpl
(bad)
scas
or
sbb
jmp
sub
add
mov
push
jo
sub
aas
test
push
or
dec
sub
leave
and
test
pop
sub
movs
es
shr
sub
repnz
mov
add
shr
sbb
push
ror
ret
rsqrtps
fwait
adc
out
or
jnp
scas
push
scas
pop
je
pop
xchg
pop
mov
out
or
retf
lock
inc
lea
mov
push
test
sub
jne
dec
shl
(bad)
xor
sbb
push
cs
icebp
imul
mov
push
(bad)
outs
dec
pop
dec
aad
fdivrp
adc
fsub
inc
inc
test
sti
cmp
mov
sub
sub
or
or
or
xchg
push
mov
add
loop
sub
and
dec
push
mov
pop
and
test
and
inc
pop
dec
lahf
fadd
xor
pop
dec
xor
mov
cmp
or
lock
test
mov
in
mov
call
cmp
dec
inc
bnd
retfw
ins
rol
jmp
loope
sbb
ss
push
adc
push
popw
and
fnstsw
data16
scas
pop
add
cmp
enter
adc
fsubr
clc
add
(bad)
std
sti
sub
iret
adc
and
xchg
lea
dec
xlat
inc
or
xchg
xor
dec
in
cli
jle
or
adc
inc
jle
dec
jp
push
xchg
test
sti
and
sti
arpl
dec
sar
test
or
inc
mov
xchg
lahf
inc
cwde
jb
adc
mov
sub
out
nop
xchg
ret
mov
sbb
movs
add
or
dec
xor
xchg
retf
sbb
test
xchg
lea
pop
mov
jne
mov
lahf
xchg
lea
push
cs
pop
mov
aaa
xchg
cmp
push
call
jb
pop
or
pop
std
rol
call
dec
xchg
xchg
xchg
cmp
sbb
or
popa
inc
cli
jb
jo
stos
fs
clc
xchg
inc
pop
mov
shl
mov
add
sbb
mov
in
pushf
retf
mov
sbb
ins
xchg
addr16
sub
mov
push
data16
test
aam
adc
je
push
add
cs
pop
movs
mov
xor
dec
inc
pop
daa
test
add
ds
fs
jge
jmp
xchg
shr
dec
add
js
js
adc
sub
xchg
mov
aaa
ficomp
or
call
mov
aam
ret
mov
hlt
mov
and
push
mov
mov
inc
cmp
cmc
push
xor
pop
xor
mov
movs
adc
or
dec
sbb
mov
outs
cmps
and
dec
inc
ds
mov
push
xor
mov
xchg
or
push
mov
dec
mov
int
mov
gs
or
std
and
cmp
jno
inc
cmp
and
push
push
sar
adc
in
xchg
or
adc
out
test
jne
retf
movs
ins
popa
cmp
or
mov
jbe
lahf
sbb
mov
je
sahf
push
mov
adc
inc
xor
movs
leave
xor
mov
push
call
data16
nop
stos
or
push
out
mov
rcl
xchg
clc
inc
dec
retf
fisubr
pop
shl
push
dec
call
jle
fisub
mov
sbb
xor
mov
cmps
adc
rol
in
ret
nop
push
xchg
in
mov
dec
cdq
inc
ds
popa
xchg
mov
pop
je
sub
sahf
stos
jo
adc
in
mov
stos
aaa
adc
jb
add
sub
pop
sbb
push
push
sub
lea
fisttp
and
dec
push
fcom
lahf
or
test
adc
pop
repnz
cmp
jnp
mov
push
in
test
lods
inc
mov
aas
and
sbb
dec
mov
mov
or
sub
enter
test
test
pusha
mov
mov
dec
dec
push
call
jle
adc
xor
lods
push
xor
mov
add
dec
cmps
jbe
pop
cmp
shl
adc
lods
xchg
and
pop
add
fs
js
push
pop
dec
mov
fs
dec
leave
add
retf
out
(bad)
or
lock
lea
mov
nop
push
push
lea
jae
jb
sahf
cmp
inc
adc
pop
mov
push
pusha
mov
cmps
mov
push
sub
cmps
jo
mov
mov
inc
jl
adc
mov
xchg
sub
add
inc
test
lahf
movs
add
mov
scas
pop
js
jge
aas
jge
push
test
pop
jl
out
dec
jmp
push
or
mov
jl
add
mov
pop
mov
(bad)
jle
inc
xchg
mov
enter
mov
call
mov
jo
stos
call
call
cmc
pop
lds
and
jnp
mov
je
sbb
cmps
pop
cmps
add
mov
repnz
and
fisttp
pusha
sub
(bad)
cs
movs
dec
nop
cdq
jecxz
ficom
xchg
sahf
lods
rcr
mov
mov
rol
inc
inc
dec
or
mov
push
in
mov
ss
movs
push
adc
push
je
fwait
mov
push
cwde
loope
(bad)
ds
cmps
xchg
scas
shl
push
push
cmp
xchg
fwait
popa
add
push
pop
jne
sete
pop
inc
sub
jl
fist
ror
lahf
imul
movhps
inc
sub
mov
push
stc
test
jne
dec
pop
push
add
nop
ret
cli
xor
(bad)
icebp
jl
nop
or
pop
pop
adc
jg
mov
xchg
clc
cdq
xchg
(bad)
sub
nop
fwait
push
mov
push
(bad)
dec
sbb
pop
push
inc
add
(bad)
in
pushf
daa
sar
or
inc
fbld
xor
lods
sub
mov
es
dec
jmp
push
cmps
mov
sub
xchg
dec
cmp
push
sbb
sbb
movs
xor
je
das
cmp
cmp
sub
jle
scas
push
loope
cmp
cmp
or
outs
inc
and
inc
push
xchg
test
push
call
repnz
test
xor
pop
fcmovnbe
cmp
or
dec
push
cmp
pop
push
test
fwait
jae
sbb
pop
jns
mov
sbb
sbb
push
and
stc
dec
mov
add
inc
xor
cmp
xchg
pop
dec
ffree
pop
mov
or
jmp
lods
xor
shr
aaa
adc
(bad)
sbb
dec
das
jmp
pop
fbstp
sar
sbb
dec
int
xchg
xchg
pusha
sub
test
dec
into
ror
mov
in
inc
adc
mov
jp
into
inc
sbb
dec
call
out
call
sbb
pop
or
cmp
xchg
or
loop
sub
xor
mov
adc
jmp
cmp
add
pop
fiadd
xor
fdivr
inc
movs
xchg
jns
mov
lods
adc
daa
sub
add
into
push
pushf
dec
gs
ret
jge
push
les
lods
mov
outs
add
pop
push
test
pop
xadd
push
jae
mov
sbb
sbb
scas
push
push
jp
nop
ins
jns
xchg
mov
mov
aad
and
or
dec
jmp
pop
hlt
call
jmp
add
ins
fisttp
scas
loopne
in
and
shl
ret
pop
sub
or
adc
stc
ss
xchg
hlt
je
sub
lahf
sbb
sbb
xor
pop
cmp
test
ret
dec
push
or
out
loop
mov
inc
leave
and
jbe
lock
add
and
pop
xlat
lahf
cmps
inc
test
push
xor
push
(bad)
push
or
hlt
inc
sub
out
add
inc
push
aam
xchg
retf
dec
or
ds
and
sub
mov
cli
and
jg
fyl2xp1
das
cmp
je
sub
dec
xchg
mov
sbb
iret
mov
and
sahf
(bad)
fabs
add
add
adc
push
pop
test
and
sub
push
mov
adc
jbe
out
xchg
test
int
or
inc
inc
lock
add
stc
pusha
dec
add
inc
or
movs
xor
das
dec
int3
rol
leave
and
dec
inc
dec
lock
xchg
and
or
or
xchg
aaa
popf
jno
or
pop
repz
mov
clc
scas
fcomp
jge
pop
xor
mov
and
or
push
xor
sbb
jl
in
xchg
or
inc
add
sub
call
xor
and
mov
dec
xor
ret
push
push
fistp
adc
inc
cli
test
xor
xchg
pop
push
xlat
out
and
and
inc
mov
adc
jecxz
cwde
ja
das
cmp
pop
mov
or
(bad)
loopne
in
or
sbb
mov
daa
adc
xchg
add
icebp
dec
pop
stos
aad
outs
jns
jns
jle
sbb
stc
ins
add
jne
and
sbb
imul
imul
inc
add
loop
aam
dec
ss
add
jmp
fnsave
adc
in
add
mov
and
daa
or
inc
adc
jl
xchg
pop
cmps
ss
mov
mov
mov
inc
dec
repnz
pop
dec
loopne
and
pop
inc
inc
push
inc
or
cwde
ins
stos
mov
xor
or
cmps
test
sub
(bad)
pop
(bad)
mov
pop
stc
adc
(bad)
pop
(bad)
push
push
repz
and
sbb
and
movs
fs
fbld
push
push
call
pusha
test
inc
push
xchg
mov
in
femms
pop
mov
sti
test
sbb
and
cmp
in
aaa
sbb
add
cmp
sar
jbe
cmp
mov
or
cmp
sbb
add
hlt
inc
stc
sbb
fstp
cmp
es
xchg
mov
shr
(bad)
imul
imul
call
fisttp
sbb
pusha
push
or
fiadd
and
repz
leave
ret
fsub
hlt
dec
lea
sub
jg
sbb
adc
push
(bad)
ins
push
inc
push
dec
jbe
adc
jmp
xchg
jg
pop
and
sub
push
add
mov
loop
mov
pop
stos
cmc
cmp
jle
push
push
in
outs
push
scas
inc
dec
je
mov
mov
lds
sub
xchg
(bad)
jno
or
or
addr16
add
dec
(bad)
jle
sahf
imul
inc
lahf
add
jle
es
xor
loopne
jl
inc
mov
cmp
push
cmp
test
mov
dec
lea
fild
dec
daa
mov
jge
jo
add
rep
push
cmc
aas
dec
ret
jmp
retf
inc
add
and
cmp
and
dec
sub
mov
push
shr
sbb
div
and
inc
add
sbb
call
mov
adc
js
jl
or
stc
jae
inc
pop
(bad)
xchg
adc
nop
imul
pushf
or
push
(bad)
ins
aas
shr
dec
aas
pop
dec
push
call
nop
mov
pop
jno
or
je
imul
or
in
stc
jns
(bad)
int3
ins
push
ds
or
ret
push
idiv
pop
lea
inc
inc
dec
and
pop
inc
test
jl
mov
push
add
push
aas
scas
mov
aas
(bad)
lea
dec
movs
shl
inc
iret
inc
cmp
lea
adc
jb
sbb
(bad)
adc
sbb
jno
(bad)
jl
push
jne
push
es
jo
mov
xchg
(bad)
ds
cwde
add
loopne
fdivr
inc
popw
push
jne
push
mov
stc
inc
addr16
and
retf
mov
repnz
mov
cdq
jl
mov
sahf
pop
push
ret
dec
fist
dec
lahf
sbb
cdq
mov
lahf
ins
pop
cmp
in
dec
and
and
mov
inc
sbb
imul
dec
sub
pop
daa
stos
nop
cmp
mov
outs
mov
push
bound
fimul
movs
(bad)
or
mov
sub
call
loopne
add
(bad)
push
and
std
inc
push
pop
cmp
dec
xor
sub
movs
(bad)
iret
push
mov
into
fisub
test
jae
data16
and
dec
movs
cmp
fcomp
and
neg
sbb
leave
leave
inc
fisub
or
xor
jle
push
cmp
mov
xchg
pop
push
enter
repz
or
sbb
jns
and
or
cmp
js
cmp
inc
retf
dec
xor
into
mov
mov
and
xor
or
aad
aad
jmp
and
test
push
leave
pushf
inc
rcr
adc
(bad)
push
dec
xchg
mov
mov
add
dec
xchg
fabs
push
jecxz
dec
cmp
inc
mov
ja
lods
psubusb
aas
or
push
mov
inc
loope
ror
dec
jl
cmp
cmp
mov
ss
pusha
and
and
out
sahf
int
ror
push
jle
sahf
out
sahf
loope
std
cmp
cmp
sahf
out
lds
inc
lea
test
sub
xchg
div
adc
ins
push
inc
adc
jg
xchg
or
sar
dec
jl
adc
rol
call
pusha
jmp
mov
and
xor
fdivr
not
adc
es
add
js
jo
cmps
shl
gs
inc
call
bswap
and
add
das
push
xchg
add
push
mov
dec
jl
push
pop
aam
(bad)
mov
or
push
shl
dec
pop
ins
call
xor
das
lds
cmp
jg
sbb
mov
call
stos
or
adc
std
push
fcom
xor
sub
and
jg
sub
fs
call
xchg
aam
fwait
sub
mov
mov
add
mov
inc
push
or
or
movd
and
xchg
push
or
cmovb
jne
(bad)
lahf
fwait
inc
push
shr
sar
mov
repnz
fmul
push
push
mov
or
imul
mov
ins
shl
fnstenv
ins
imul
jmp
and
enter
lods
retf
push
add
(bad)
retf
adc
pop
xchg
xchg
sahf
das
and
xlat
inc
pop
inc
clc
xchg
xchg
pop
dec
xchg
pop
lea
jl
sub
dec
dec
or
add
mov
ins
int3
pop
mov
xchg
dec
sbb
nop
or
pop
push
mov
pop
add
test
cwde
pop
imul
push
jo
inc
adc
dec
imul
inc
test
push
jae
cmp
shr
arpl
push
mov
outs
ins
ins
idiv
cmc
jb
aad
add
sar
mov
(bad)
dec
nop
(bad)
ficomp
aas
jg
adc
test
ins
or
into
xor
add
push
iret
imul
cmp
iret
and
pop
sbb
test
data16
ror
adc
dec
fmul
rcl
ss
mov
and
cwde
sbb
add
call
xlat
daa
dec
jae
test
hlt
mov
addr16
clc
push
into
rcr
xor
ins
call
or
and
xor
repnz
daa
xor
sbb
xor
jb
rol
dec
xor
or
sub
daa
and
and
dec
rol
xor
or
cmp
jb
jb
rcl
dec
and
dec
xor
dec
dec
inc
fsub
daa
and
pop
rcl
xor
xor
pop
push
loopne
jno
jb
fcomp
or
push
xor
jb
loopne
push
daa
and
dec
js
jo
jo
enter
aaa
push
daa
pop
pop
clc
js
jo
out
jbe
popf
xor
push
cld
cmp
push
or
xor
xor
out
xor
dec
pushf
or
not
stc
in
inc
rol
mov
mov
into
lods
mov
sbb
leave
add
mov
aad
les
mov
sub
(bad)
js
xlat
push
fimul
mov
pusha
xor
repz
out
jbe
jnp
aad
fldenv
sti
adc
fwait
xor
add
jno
dec
cld
(bad)
fs
es
add
sbb
daa
add
repnz
aaa
dec
push
mov
sbb
cmp
nop
das
lock
jl
add
ins
or
dec
sbb
cmp
inc
lock
push
inc
add
popf
ins
adc
popf
nop
pop
test
dec
or
shl
and
sub
inc
call
add
loope
inc
xchg
cmp
mov
iret
or
icebp
pop
cli
test
jl
or
and
mov
cmp
or
repz
sbb
retf
cmp
addr16
dec
popf
sub
cmps
push
or
adc
pop
add
pop
sub
xor
dec
or
mov
pop
lea
pop
rol
inc
dec
loop
iret
jbe
enter
adc
in
rcr
ins
ds
aas
data16
sti
or
rcr
imul
sti
enter
out
fadd
loop
mov
ret
retf
adc
add
sahf
idiv
fisttp
or
out
add
add
mov
adc
ret
cmp
clc
or
jo
dec
rol
mov
pop
int3
push
sbb
fidivr
ficomp
adc
xor
outs
inc
(bad)
clc
pop
or
adc
and
ds
and
inc
push
ret
add
loopne
sets
add
adc
in
outs
add
fadd
test
cmps
and
inc
and
mov
add
leave
cmp
push
mov
mov
xor
sahf
adc
or
sbb
and
fimul
sbb
ficom
add
xchg
rcr
fst
sub
enter
xchg
xchg
push
cwde
cmps
nop
xchg
sti
mov
out
(bad)
sti
push
iret
(bad)
xor
popa
sub
ror
inc
loope
jecxz
fmul
dec
pop
dec
mul
ret
cmp
or
or
jnp
inc
icebp
inc
lds
or
or
(bad)
retf
in
daa
je
cmp
adc
add
(bad)
(bad)
fcomp
fnstcw
dec
sbb
test
stos
shl
sbb
and
fild
add
ret
(bad)
(bad)
inc
add
push
mov
add
xchg
or
fimul
pushf
or
(bad)
(bad)
dec
and
sbb
sub
jmp
adc
adc
(bad)
(bad)
(bad)
cli
adc
push
jle
inc
cmp
cmp
mov
int3
cmp
cmp
aam
push
xor
xor
(bad)
(bad)
call
xor
mov
es
and
and
mov
hlt
sub
sub
(bad)
(bad)
(bad)
(bad)
mov
das
xor
add
(bad)
jb
ja
jbe
je
jne
jle
jg
jge
jl
jns
(bad)
(bad)
call
sbb
fidivr
ins
bound
outs
out
test
push
sub
out
imul
pusha
mov
data16
ror
inc
dec
xchg
dec
(bad)
(bad)
(bad)
dec
dec
dec
dec
mov
inc
adc
inc
xchg
inc
fadd
inc
pop
inc
sahf
inc
loopne
and
push
cmps
push
call
jmp
push
ins
push
scas
push
lock
xor
pop
mov
clc
pop
cmp
mov
loopne
loop
jecxz
out
(bad)
(bad)
dec
out
in
in
out
shr
xchg
in
push
in
sbb
fucompp
pushf
jmp
jmp
(bad)
(bad)
mov
jmp
repz
jbe
cmp
cli
cmc
mov
fld
(bad)
(bad)
fiadd
fisttp
mov
int3
fisttp
fcom
xchg
(bad)
aam
push
aad
rcr
shl
mov
(bad)
inc
es
push
shr
jo
mov
hlt
enter
int3
mov
into
adc
(bad)
call
dec
xchg
or
into
xchg
nop
lahf
push
sahf
adc
(bad)
popf
cwde
cwde
pop
cdq
sbb
ficomp
and
(bad)
(bad)
dec
push
sub
out
mov
xor
mov
xchg
xchg
test
(bad)
(bad)
jmp
or
shl
xchg
movs
fsub
sahf
mov
fs
(bad)
push
sub
lock
mov
clc
mov
mov
mov
cmovo
pusha
and
enter
jo
ins
ror
aaa
inc
mov
daa
daa
daa
daa
lds
clc
daa
mov
dec
inc
push
dec
mov
lahf
or
hlt
(bad)
sub
and
adc
dec
push
or
repnz
mov
retf
popf
dec
add
add
mov
inc
sbb
add
jg
cli
xchg
xchg
xchg
xchg
dec
sbb
jmp
arpl
push
loope
js
sub
hlt
jbe
sub
lahf
jg
sub
push
or
push
add
retf
mov
das
nop
ss
ror
pop
in
call
add
fistp
push
jle
sbb
add
push
nop
shr
pushf
retf
ins
into
inc
cli
adc
loopne
xor
sbb
clc
or
xchg
dec
das
or
shl
inc
sbb
sar
fcomp
inc
pop
cmp
imul
mov
sbb
add
(bad)
imul
fisub
xchg
fnstenv
aaa
inc
nop
popa
cwde
mov
mov
retf
and
push
xor
clc
pop
pop
pop
jne
sub
fldenv
ds
xor
or
mov
inc
cmp
movs
sub
mov
shl
stc
mov
push
out
nop
ret
fucomip
sub
sub
movs
es
outs
stc
lods
arpl
xchg
mov
std
sub
clc
mov
mov
adc
setg
pop
sub
sti
inc
add
dec
mov
retf
xchg
data16
mov
inc
sub
and
push
je
dec
sbb
and
lods
xchg
inc
xchg
pop
fst
test
test
add
xor
fwait
outs
dec
jg
jmp
mov
xor
ja
dec
push
add
test
fsubr
push
cmp
sbb
add
rcl
push
inc
xlat
xchg
push
xchg
inc
pushf
mov
stos
sbb
push
sbb
clc
dec
sbb
push
(bad)
inc
loop
mov
push
mov
inc
lods
and
xor
xor
and
and
cmp
pop
mov
adc
(bad)
push
cmp
sbb
pop
js
xor
sub
test
nop
out
jno
xor
js
retf
dec
push
sub
cmp
mov
movs
push
das
lea
inc
push
test
pop
push
sub
repz
or
mov
shr
loope
fwait
test
or
jmp
and
sub
stos
loop
xchg
mov
mov
out
push
cmps
push
add
cmps
sbb
dec
inc
xchg
jl
push
movs
add
enter
or
mov
and
jb
je
push
fidiv
imul
jl
movs
jb
inc
je
cmp
stos
pop
xor
hlt
push
cmp
dec
cmp
cmp
xlat
das
mov
pop
test
inc
ss
mov
test
sub
es
sub
inc
scas
fcom
(bad)
xor
daa
sub
cdq
add
ins
and
sbb
and
fs
nop
and
sub
push
sbb
inc
out
and
in
mov
push
inc
pop
arpl
movs
lahf
in
call
inc
cwde
jmp
sbb
inc
pusha
das
int3
mov
sub
push
jg
clc
and
adc
sbb
in
(bad)
adc
cmp
mov
in
and
in
mov
data16
mov
add
cmp
jg
imul
hlt
call
js
adc
ret
loop
or
adc
dec
clc
jnp
or
push
movs
sub
enter
xchg
and
int3
adc
popf
movs
data16
imul
dec
push
scas
jae
ficomp
test
mov
cmc
dec
or
adc
push
shr
(bad)
rol
xchg
xchg
je
xchg
push
or
or
mov
(bad)
sub
call
xor
jnp
or
add
in
push
pop
sub
xchg
mov
adc
jns
push
repnz
xchg
punpcklbw
in
xchg
es
jmp
sahf
cmp
sbb
adc
adc
adc
ss
pop
inc
pusha
push
in
loope
es
dec
or
aas
out
jmp
and
add
out
cmp
push
add
and
adc
dec
mul
xchg
retf
sbb
sbb
add
mov
jg
and
pop
movs
add
cmps
mov
inc
mov
pop
sub
cmps
push
push
and
adc
stc
xchg
inc
into
(bad)
stc
cmps
push
mov
pop
bound
ins
jl
retf
push
ins
jmp
popa
push
pushf
cmp
or
add
imul
aas
inc
test
ins
inc
lahf
mov
dec
aad
aas
pop
lahf
lods
test
pop
add
add
xor
pop
xchg
loopne
adc
push
add
fstp
test
push
das
outs
outs
lock
add
push
dec
sbb
adc
push
loop
int
jg
aas
mov
call
xor
out
sbb
lock
and
ret
xchg
addr16
push
and
call
dec
push
or
cmp
mov
shl
fs
fst
mov
icebp
mov
popf
ss
pop
add
imul
ficom
call
shl
mov
(bad)
imul
ds
sbb
shr
rol
sahf
sbb
xchg
movs
rol
out
dec
or
iret
mov
and
into
aas
xchg
xchg
dec
std
push
call
push
je
or
pushf
cmp
ror
inc
jne
pop
or
jg
cs
mov
fdiv
ins
jae
jo
call
jl
mov
push
cmp
add
call
call
xchg
jl
jo
cmp
mov
movs
push
imul
cmp
or
lea
push
fadd
sbb
xlat
fiadd
and
inc
cmp
sbb
add
jle
pushf
xchg
imul
cmp
and
std
adc
pusha
pop
icebp
sar
mov
shl
adc
les
sub
(bad)
add
xor
ss
cmp
push
rcl
pop
add
nop
ja
push
jp
je
repnz
inc
out
lds
pushf
pop
mov
add
repz
or
pop
addr16
push
mov
push
mov
inc
pop
jg
sub
dec
jns
pop
push
les
ins
mov
push
pop
push
xchg
in
call
mov
push
jo
pop
gs
cmp
mov
push
mov
fbld
leave
and
call
mov
clc
inc
or
aas
inc
ror
(bad)
jl
gs
fbstp
clc
mov
pusha
xchg
fimul
test
xor
push
xor
xor
xchg
xchg
jge
pop
js
call
push
fcmovu
fdivrp
daa
xor
xchg
push
adc
push
inc
ret
lods
lods
nop
fwait
imul
cmp
pop
push
mov
pusha
pop
pop
in
(bad)
(bad)
push
cmp
into
popf
dec
xchg
mov
aas
cmps
or
imul
sub
scas
dec
adc
sbb
dec
pop
pop
ficom
(bad)
fwait
pusha
sbb
sbb
les
ins
and
fs
jmp
js
addr16
mov
dec
inc
adc
adc
sbb
adc
push
pop
js
js
(bad)
jmp
inc
xor
jge
sbb
sbb
int3
adc
sbb
pusha
cmp
aaa
adc
sub
add
ins
and
aas
fld
lahf
(bad)
dec
pop
push
add
mov
jecxz
je
inc
jecxz
pop
pop
sar
test
clc
jno
fidivr
dec
ror
and
es
pop
das
or
jmp
mov
cmp
int
xor
jnp
xchg
arpl
xchg
imul
int
inc
pop
cmp
adc
fs
jecxz
aaa
add
cli
movs
popa
sar
jl
je
sub
leave
int
daa
cmp
cdq
xor
xchg
mov
imul
sbb
pop
popaw
dec
mov
shl
jp
or
daa
cmp
int3
sbb
out
(bad)
rol
cdq
jbe
aaa
sar
add
movs
jl
add
std
sbb
lds
push
sbb
sbb
fimul
popa
jno
or
fmul
xlat
inc
les
pop
mov
stos
mov
rol
test
call
jmp
stos
push
fimul
clc
and
stos
gs
enter
mov
ins
inc
xchg
dec
cmp
lock
sbb
or
xchg
pop
push
mov
dec
sti
mov
add
or
add
jmp
popa
clc
xlat
call
xchg
add
test
nop
cld
pop
mov
cli
in
aas
movs
(bad)
jo
fnstcw
es
push
call
or
inc
test
mov
add
das
outs
mov
jl
cmp
mov
(bad)
cmp
and
jns
mov
rol
add
in
stos
push
sub
push
dec
(bad)
inc
jmp
iret
jmp
in
mov
call
inc
(bad)
xor
jmp
jg
pop
clc
not
adc
mov
push
les
push
mov
and
or
rol
aas
es
(bad)
loop
jne
sbb
cmp
mov
jne
cmps
sar
push
inc
inc
std
ja
mov
daa
adc
push
push
int
add
in
(bad)
aaa
imul
cmp
xchg
add
mov
bound
add
stos
fadd
fwait
or
(bad)
repz
mov
ror
mov
mov
push
mov
shl
loope
adc
pop
sahf
in
sub
pusha
and
enter
and
sbb
mov
scas
sbb
int3
loope
lock
push
xchg
stc
dec
or
or
jge
mov
shl
mov
cmp
sbb
dec
pop
pusha
inc
int3
enter
shr
enter
cmp
lock
aaa
and
mov
imul
aad
sbb
les
or
neg
inc
push
push
sbb
in
add
fwait
pop
or
lea
and
jle
xchg
dec
ins
ja
sub
add
jmp
dec
inc
mov
adc
lods
or
outs
add
int3
add
jecxz
add
push
adc
and
inc
mov
inc
js
mov
aaa
or
fs
ret
jo
push
cld
push
pushf
cmc
xchg
pop
or
(bad)
and
push
rcl
repnz
cmp
bt
mov
rcr
ret
mov
dec
rcr
jle
fimul
loope
xchg
push
popf
jecxz
pop
inc
and
in
mov
dec
or
adc
outs
or
pop
xchg
sbb
je
add
ss
cmp
xchg
pop
addr16
or
pop
iret
sar
jbe
pop
pop
call
or
mov
outs
or
jecxz
adc
add
aad
dec
fcomp
loope
xor
or
and
dec
adc
mov
or
pop
jne
pop
loopne
mov
jg
mov
cmp
add
mov
adc
fs
jle
push
push
mov
sti
or
into
and
dec
adc
dec
sti
xchg
xchg
cmp
fist
je
or
pop
in
loope
mov
imul
mov
ins
and
rol
fimul
push
mov
inc
dec
ret
repz
jmp
dec
dec
pop
ret
sub
(bad)
and
push
data16
and
dec
(bad)
imul
cli
push
mov
call
or
mov
and
arpl
shr
ins
mov
cdq
and
inc
test
bound
stos
fs
(bad)
sar
movs
xchg
push
lahf
outs
or
mov
div
cdq
push
leave
cli
mov
in
inc
ret
xor
mov
push
or
loopne
mov
bound
test
mov
(bad)
ins
in
add
mov
fcmovu
call
sbb
pushf
test
inc
push
cmp
xor
dec
inc
clc
mov
int
cmps
rcl
adc
lock
in
sub
lea
adc
lea
ins
mov
and
and
(bad)
mov
jne
pop
and
inc
push
in
xor
adc
inc
inc
jmp
mov
andps
loop
ret
and
movs
(bad)
xlat
push
jecxz
sbb
ret
inc
cmc
and
in
ficomp
dec
mov
cmp
push
and
adc
add
mov
sub
adc
xor
add
ret
mov
inc
out
rol
mov
dec
or
in
mov
adc
add
dec
sbb
sub
push
ds
inc
sbb
jg
jg
dec
lea
add
clc
pop
xchg
xchg
sbb
iret
adc
call
and
pop
es
add
stc
shr
and
shl
xor
dec
xchg
mov
jae
retf
sbb
js
ins
mov
aaa
bnd
dec
mul
(bad)
jmp
mov
lods
add
loop
in
sbb
pusha
fnsave
enter
or
xchg
sub
adc
push
adc
or
or
pusha
jmp
mov
lahf
pop
fdivr
pop
(bad)
xor
shr
repnz
or
dec
adc
add
adc
inc
popa
cwde
sbb
mov
and
push
and
or
inc
sub
shl
push
xchg
xchg
adc
pop
aam
push
sbb
and
or
fnstcw
or
sbb
call
imul
mov
clc
adc
inc
mov
mov
and
repz
pop
rcr
pop
push
xlat
movq
pop
push
clc
ja
loopne
in
fcmovu
xchg
fwait
nop
sahf
movs
xor
aas
dec
add
or
xor
call
sub
outs
xor
xor
mov
scas
sbb
add
mov
mov
pop
add
cli
mov
(bad)
lock
lock
sub
push
das
sar
inc
push
xor
sub
inc
or
aas
sbb
mov
xchg
mov
mov
mov
adc
inc
aaa
fcom
xchg
or
rol
ins
push
xchg
sub
sub
push
mov
adc
add
movs
popa
and
repnz
push
cli
jmp
pop
xchg
jno
mov
push
jns
jne
push
clc
mov
aam
jo
dec
xchg
inc
sub
sub
das
jmp
push
jno
mov
inc
ins
cmps
sahf
std
sahf
sub
cmp
jne
xchg
dec
pop
mov
cmp
mov
mov
gs
xor
sbb
or
push
repnz
xchg
loope
xor
jbe
pusha
or
jmp
or
push
cmc
push
push
lock
aas
cmp
jmp
jno
inc
out
and
retf
(bad)
pusha
sbb
enter
adc
push
push
and
push
or
xchg
dec
dec
sbb
(bad)
push
imul
push
pop
xor
int3
in
mov
call
popa
cmp
mov
mov
out
add
int
xor
mov
mov
sbb
push
xchg
jmp
mov
and
cmp
add
rol
popf
push
and
xlat
scas
cdq
sti
and
push
int3
jb
clc
scas
out
push
ror
pop
xor
or
ins
or
retf
adc
fs
pop
pop
mov
xchg
push
dec
nop
push
mov
sahf
push
gs
and
pop
ins
sub
pop
fs
add
lgs
or
add
push
sub
popa
or
push
push
push
xlat
xchg
repnz
sub
ret
xchg
outs
or
or
sbb
sbb
fwait
(bad)
mov
and
and
fistp
mov
xchg
jno
clc
mov
test
imul
mov
cmps
mov
xchg
pop
inc
adc
ins
cmp
bound
fadd
jmp
in
shl
fs
mov
add
fbld
mov
gs
cmp
mov
pop
call
ins
and
mov
push
ins
or
enter
push
fcomp
das
and
repz
cmp
aaa
jmp
cs
add
push
push
call
mov
das
sbb
push
sbb
mov
aas
xchg
ret
lahf
lock
mov
stc
mov
inc
dec
lock
pop
jne
jne
xor
push
inc
shl
scas
adc
pop
xchg
jnp
mov
pusha
xor
cmp
aas
adc
sar
sti
div
sahf
aaa
call
xchg
out
push
add
xchg
cmp
push
ficom
jb
dec
jae
mov
fisub
mov
ds
aad
aam
add
xor
and
push
mov
add
and
and
dec
pushf
imul
mov
add
add
jg
add
jbe
shl
mov
outs
repz
sub
sub
ret
jns
pusha
xor
inc
js
rol
outs
xor
xor
leave
or
xor
and
xchg
push
shl
sub
sbb
add
push
lahf
aas
or
push
ror
mov
retf
xchg
clc
ror
aas
cmp
mov
jg
dec
dec
push
fwait
ret
pop
inc
jg
fist
dec
mov
xor
lods
dec
sbb
sbb
lock
mov
push
inc
xchg
repnz
sti
xchg
mov
stos
and
push
mov
push
xor
jle
mov
and
ror
adc
mov
xor
data16
jge
jmp
xchg
out
add
sub
nop
xchg
push
mov
jl
mov
cmp
adc
outs
sbb
jge
mov
ja
mov
icebp
adc
(bad)
or
inc
mov
or
ror
push
mov
inc
shl
lock
xor
lods
jg
sub
adc
aad
dec
shr
scas
jns
call
inc
cli
xchg
loopne
addr16
or
mov
sbb
jne
cmp
movs
inc
sbb
pop
pop
outs
mov
enter
ret
inc
popf
fild
push
retf
pop
jmp
shl
mov
or
push
sub
adc
push
imul
scas
adc
movs
sbb
xor
pop
add
jmp
xchg
scas
pop
jns
fs
sub
cdq
add
sub
nop
test
dec
inc
rcr
xchg
repnz
dec
xor
push
and
test
add
jmp
test
dec
sbb
push
inc
ds
cmps
dec
mov
inc
jns
or
push
jle
stc
dec
xor
leave
jle
add
shl
sub
repz
inc
psubsb
cmp
aam
push
pop
rol
push
dec
and
mov
mov
mov
sub
rcl
cmp
or
popa
shl
popf
and
push
add
push
jge
add
add
sub
push
inc
packssdw
lds
dec
push
jnp
mov
stc
ret
sbb
fimul
adc
fnsave
dec
sahf
jmp
xchg
stos
push
xor
call
push
loope
(bad)
outs
call
mov
sub
or
test
sbb
jo
(bad)
jmp
lods
aaa
mov
inc
sbb
pop
mov
mov
mov
jne
(bad)
mov
call
adc
nop
dec
ret
jge
dec
adc
push
xor
fs
dec
jle
sub
pop
jnp
mov
add
adc
jp
inc
jne
jle
(bad)
(bad)
jo
push
bound
sub
push
xrelease
cwde
test
cmp
cmp
test
(bad)
cmc
movs
sub
or
cmp
adc
jae
sahf
adc
mov
scas
bound
push
xchg
push
or
mov
push
inc
aas
mov
fstp
adc
inc
adc
clc
lods
mov
add
inc
dec
call
call
aam
cmps
inc
xor
jbe
and
ds
daa
jg
call
inc
adc
jl
leave
call
cmp
and
and
add
inc
sub
xchg
xchg
and
cmp
inc
add
test
popa
(bad)
push
movs
sub
arpl
test
inc
movs
mov
adc
xchg
adc
mov
dec
(bad)
xor
mov
js
and
cmp
dec
adc
inc
ds
mov
mov
dec
push
repz
sub
in
add
mov
add
xor
sbb
cmp
push
adc
shl
retf
or
lods
test
int3
adc
add
inc
push
or
sub
dec
mov
mov
jo
and
ss
call
mov
pop
adc
ins
js
call
imul
pop
sti
jmp
ins
fwait
dec
call
jns
iret
jmp
leave
mov
push
fs
lds
pop
je
sbb
or
push
xchg
call
in
sysret
push
lock
inc
pushf
mov
ret
and
sub
or
sub
or
lds
inc
scas
loope
sub
push
pop
adc
cmp
mov
xchg
inc
mov
jb
jne
dec
shr
push
hlt
popf
and
mov
inc
xor
cmps
pop
rcl
cwde
inc
mov
cmp
sar
or
mov
pusha
pop
adc
mov
xchg
jae
stos
inc
sbb
inc
cmp
inc
sbb
imul
leave
je
and
scas
mov
push
das
sub
gs
rcpps
adc
jl
xchg
sub
(bad)
es
xchg
movs
cs
xor
xor
sbb
ja
loope
inc
or
mov
xor
nop
cmp
ffreep
mov
add
xor
(bad)
scas
pop
lahf
loop
xchg
ror
clc
movs
inc
aam
dec
add
jle
inc
add
add
jnp
sub
pop
push
lea
pusha
push
sub
addr16
adc
sub
cld
dec
jbe
and
in
shl
ja
ja
mov
ja
xor
pop
sbb
cmp
xchg
xor
je
mov
add
inc
jle
test
or
and
cmps
std
xchg
push
mov
leave
not
mov
movs
fiadd
shr
test
jmp
push
pop
sti
cdq
clc
fsubr
mov
and
xor
pop
dec
div
dec
xlat
mov
cmps
mov
bound
xchg
movs
inc
loopne
iret
mov
loopne
xor
movs
inc
(bad)
jne
inc
push
inc
adc
jmp
push
jb
add
movs
inc
stos
das
(bad)
enter
or
add
inc
mov
cmp
and
push
adc
mov
shl
mul
ret
dec
adc
push
retf
mov
mov
push
lea
outs
xor
xlat
(bad)
cli
movs
push
shl
and
outs
ror
cmps
cdq
xor
vprotb
inc
rcr
or
and
lds
pop
(bad)
in
or
fld
dec
sbb
or
sti
shl
mov
jmp
call
ss
sub
or
arpl
ins
cmp
out
or
fwait
movs
push
test
call
push
sub
xor
sub
call
sti
pop
push
pusha
sbb
pop
add
xor
add
(bad)
jae
cdq
mov
repnz
daa
daa
add
popf
add
xchg
(bad)
mov
aad
sti
ins
out
mov
mov
sbb
and
sahf
popf
or
xor
(bad)
add
sbb
cmp
push
jmp
add
xchg
add
add
or
pop
lahf
ins
push
xchg
jbe
add
xchg
jae
xchg
clc
jb
lock
call
push
dec
sbb
pushf
add
push
push
push
(bad)
push
xor
xor
dec
add
or
ss
sbb
push
sub
inc
add
xor
jne
je
push
and
mov
pop
test
jns
dec
mov
ret
or
loopne
adc
in
sub
xor
sub
daa
std
in
fcmovb
in
shl
int
push
arpl
ins
and
lods
add
push
arpl
in
xchg
lahf
inc
cmp
je
xchg
jmp
or
repnz
or
inc
pop
push
in
(bad)
lds
lahf
sub
jno
cdq
je
sbb
adc
or
mov
repz
cmp
fwait
in
xchg
push
and
and
js
movs
sub
ror
lods
hlt
fistp
fwait
jae
xchg
add
loop
xchg
and
jg
jo
inc
adc
(bad)
mov
cdq
mov
add
adc
jg
enter
dec
mov
pop
sbb
or
add
shl
sbb
sbb
cs
stos
sub
xchg
mov
inc
pop
push
sbb
in
in
jo
adc
push
or
mov
jmp
push
jae
cmp
add
sub
push
push
dec
adc
mov
in
fs
xor
or
lea
add
out
cmp
xchg
mov
push
ja
and
cmp
sahf
mov
mov
push
and
shr
rcl
sahf
int3
or
addr16
mov
xor
cdq
pop
call
mov
(bad)
test
sbb
bswap
xchg
test
mov
xlat
aas
jnp
cmps
dec
outs
sbb
imul
xor
and
pop
rcr
fs
inc
outs
adc
cmp
inc
inc
dec
outs
jmp
cmp
or
cmp
add
aas
inc
cdq
hlt
out
xchg
xchg
(bad)
or
xchg
inc
add
mov
xor
inc
push
mov
stc
ins
(bad)
dec
ins
adc
add
in
or
ins
icebp
push
dec
xchg
inc
push
leave
push
ja
adc
fcomp
adc
cmp
stc
push
call
fsub
add
inc
push
fcom
ins
int3
adc
add
adc
push
call
or
mov
ins
pop
push
sbb
adc
rcr
int3
xchg
inc
lea
sbb
jb
cmp
loop
(bad)
repz
mov
inc
push
jge
or
loopne
std
or
int
add
ins
push
daa
cdq
sbb
pop
stc
sahf
inc
cmp
sti
lods
add
scas
clc
pop
(bad)
iret
add
sbb
jns
lock
and
jmp
pop
imul
mov
dec
(bad)
cmp
mov
sar
push
sub
cwde
mov
mov
mov
inc
adc
sub
fcmovbe
jg
cmp
pushf
fisub
cmp
inc
dec
lahf
call
stos
imul
out
lock
sti
pcmpeqb
(bad)
xchg
sbb
inc
cld
xlat
ret
lds
inc
ss
lahf
gs
cmp
lds
jg
test
push
jbe
test
and
and
and
cmp
leave
sub
adc
push
pop
mov
pop
xor
movs
add
or
not
xchg
scas
or
xor
adc
dec
jne
mov
pop
add
sub
mov
popa
retf
jl
inc
push
je
inc
ss
mov
push
dec
call
and
adc
add
xor
div
cmps
add
pusha
add
in
ja
xor
fcmovb
pop
add
aad
adc
xchg
jbe
sbb
jp
jle
ret
fs
dec
je
jb
ss
test
adc
cmp
scas
mov
je
pop
cmp
js
(bad)
jecxz
ror
add
ss
adc
push
adc
bound
push
inc
icebp
cdq
sbb
push
dec
in
push
push
call
push
dec
cs
repnz
xor
inc
inc
dec
inc
or
loop
mov
add
sbb
pop
mov
cwde
std
add
mov
cwde
or
xchg
xchg
sub
push
jb
jg
and
enter
add
xor
push
mov
xchg
mov
sahf
add
xor
xor
jge
xchg
xchg
sbb
mov
fs
loope
cmp
(bad)
test
mov
rol
retf
inc
cmp
clc
or
in
addr16
adc
cmp
stc
test
outs
mov
jo
jle
dec
popa
loope
mov
dec
add
ret
cmps
xor
(bad)
xor
dec
inc
fiadd
and
in
jl
jo
or
sbb
push
xor
push
or
add
out
adc
inc
xchg
call
mov
or
iret
push
push
sub
daa
aad
stc
jl
push
(bad)
pop
aas
out
hlt
sbb
dec
mov
leave
cmp
xor
push
add
add
fwait
inc
adc
push
fs
xor
mov
sbb
mov
mov
add
hlt
in
gs
rcr
ja
into
outs
xor
adc
call
mov
and
inc
dec
xor
enter
cmp
stos
aam
push
test
inc
mov
ret
mov
cmp
xchg
mov
add
jns
lods
adc
movs
or
cwde
mov
movs
inc
and
add
sub
pop
in
xor
add
xchg
sbb
inc
jmp
sahf
mov
int3
cmp
dec
dec
repnz
xor
xchg
cmp
(bad)
fs
mov
jns
add
lock
sbb
or
outs
inc
push
sub
mov
push
sbb
or
push
test
leave
add
fs
pop
adc
jg
push
cmps
cmp
(bad)
fild
mov
mov
cmp
jne
or
mov
shl
xchg
mov
adc
std
jo
stos
cdq
icebp
cmc
push
(bad)
jb
add
or
jecxz
retw
pop
xor
test
arpl
imul
adc
fwait
retf
dec
and
rol
lea
jle
shl
call
push
outs
div
sub
inc
push
call
and
push
call
gs
icebp
dec
pop
(bad)
bound
test
aaa
cmps
dec
mov
dec
and
inc
or
push
mov
adc
in
inc
push
cmp
adc
(bad)
mov
mov
cmps
fild
ins
inc
test
fimul
fcomp
je
or
or
adc
sbb
and
fnsave
inc
dec
dec
loopne
mov
test
shl
dec
mov
in
nop
xchg
mov
(bad)
test
fadd
das
pop
mov
cmp
sbb
add
add
(bad)
dec
push
stc
push
lahf
jmp
or
movs
into
cmps
cmp
in
ins
cmps
adc
cli
dec
xor
adc
push
(bad)
icebp
jl
mov
dec
test
or
(bad)
sbb
jmp
xchg
mov
add
inc
inc
inc
loopne
dec
sub
xchg
sub
daa
push
jne
pop
scas
shl
jmp
icebp
inc
mov
mov
push
sub
cmp
icebp
inc
sub
add
enter
push
adc
mov
xchg
sub
and
jmp
cmps
mov
push
sub
pop
out
mov
dec
or
sub
xchg
push
mov
cmc
sub
mov
stos
or
push
xor
shl
add
movs
push
mov
leave
add
addr16
sbb
(bad)
cmp
push
mov
mov
add
sbb
inc
mov
(bad)
fisttp
dec
in
cli
pusha
xchg
(bad)
sar
cmp
adc
adc
std
push
aas
or
es
ds
fiadd
lock
xlat
mov
cmp
sbb
(bad)
push
and
dec
sahf
push
pop
test
js
js
js
adc
push
jecxz
sbb
xor
ins
lods
sub
dec
add
aaa
sahf
mov
out
push
sbb
std
sub
enter
sar
int3
(bad)
push
jecxz
sbb
xchg
rcl
sub
sbb
inc
retf
push
adc
inc
pop
mov
aas
in
sti
pop
sbb
cmp
adc
sbb
rcr
sub
mov
ins
pop
and
dec
push
stos
and
add
xchg
mov
and
add
ja
mov
fdivr
jmp
push
mov
ficomp
ror
mov
mov
das
ss
outs
in
repz
sahf
(bad)
xor
movs
pusha
aam
mov
sbb
mov
cmp
inc
pop
shl
inc
push
inc
add
lods
jnp
mov
cs
(bad)
cmc
push
mov
xor
fimul
dec
lock
pop
mov
ficom
shl
push
(bad)
in
repnz
mov
mov
and
gs
in
rcl
movs
inc
push
push
xor
jnp
pusha
fdivr
jmp
loope
sub
repnz
std
jae
es
xor
xchg
inc
fidiv
sub
add
push
mov
cmp
ficomp
pop
inc
in
xor
adc
add
in
jbe
xlat
(bad)
xchg
mov
jbe
xlat
jns
cmp
jbe
es
and
(bad)
add
rol
adc
push
test
dec
cmp
fcom
sbb
dec
sbb
call
mul
push
dec
es
pop
ja
add
add
jg
lea
in
jne
outs
cmp
test
test
adc
push
sar
mov
or
pop
sbb
xor
cmp
idiv
xor
or
add
dec
fstp
leave
jge
(bad)
sub
shr
test
jle
jmp
adc
push
mov
xor
inc
adc
and
imul
out
(bad)
pop
sbb
aas
add
jl
push
jmp
mov
daa
les
mov
jbe
jmp
pop
jmp
and
add
push
rcl
scas
dec
movs
cmps
clc
xchg
and
jne
adc
add
push
sbb
and
push
popa
inc
or
and
xchg
jae
aad
xchg
xchg
call
pop
push
cmp
add
add
pop
add
cdq
push
aas
mov
push
sub
xor
cs
sub
xlat
add
jp
daa
call
push
jle
push
jmp
sub
call
cmps
arpl
jmp
add
xor
jge
sbb
pop
xor
inc
mov
(bad)
pop
in
loope
repz
or
es
das
stc
dec
or
xor
sub
cmp
inc
xor
sbb
jmp
pop
add
or
test
jo
mov
add
mov
aam
daa
add
jg
div
retf
fisubr
cmp
dec
and
in
mov
push
lods
push
mov
jo
stc
cmp
mov
cs
pop
movs
in
push
addr16
dec
test
sub
sbb
add
inc
jbe
adc
shl
cmps
push
sub
aad
sub
pop
xor
std
pop
cmp
jb
rcr
and
cmp
sub
add
sbb
inc
ins
mov
mov
jne
aaa
jge
dec
enter
mov
dec
push
cmp
sahf
adc
push
lea
ja
test
popa
pop
pop
cwde
imul
or
stos
lea
adc
rcr
aaa
jbe
add
xchg
lahf
inc
mov
enter
xor
mov
xor
pop
sub
push
aad
test
cmp
pushf
fisub
in
lahf
inc
rcl
nop
mov
jl
ror
stc
in
sbb
xlat
and
cld
lds
loopne
jecxz
inc
add
push
je
aas
push
xor
ja
jne
inc
repnz
fs
jl
loopne
or
in
jl
sbb
and
leave
inc
xor
and
or
addr16
adc
adc
or
je
cld
call
fidiv
or
jne
or
test
sub
or
stos
push
xchg
add
push
bound
or
mov
jecxz
jmp
push
adc
and
sub
push
(bad)
cli
mov
test
imul
pop
cmp
je
data16
xor
mov
out
sub
dec
add
mov
adc
add
mov
and
sbb
mov
and
mov
js
mov
or
cmp
push
inc
pop
xchg
jmp
push
fnstcw
sar
jmp
sub
inc
pop
push
xor
clc
adc
icebp
add
sbb
sbb
xchg
sub
pop
imul
out
inc
adc
push
call
sti
sbb
fld
fld
rcl
jl
ret
lea
idiv
call
or
inc
mov
inc
sub
leave
not
setp
cmps
jle
and
pop
add
mov
cmp
sbb
add
adc
cdq
push
jmp
(bad)
and
sub
in
icebp
xchg
ror
stos
icebp
mov
imul
add
mov
mov
js
aad
xor
test
nop
and
xor
xchg
cmp
xchg
adc
jmp
call
cs
push
lds
adc
ins
sbb
outs
pop
pop
sar
ficom
cmc
push
sub
inc
inc
jns
ret
adc
xchg
xor
fiadd
add
test
push
mov
(bad)
dec
or
xor
mov
sbb
jmp
mov
cmp
je
cmp
lods
adc
push
cmp
or
cmp
sbb
in
xor
and
mov
cs
mov
xchg
mov
movs
fld
les
fbstp
mov
es
dec
js
sbb
or
and
push
test
jp
push
inc
movs
rol
inc
jg
dec
int
loope
adc
cmp
rcr
lea
and
cli
adc
push
sub
mov
jle
add
or
test
adc
mov
cli
rcl
out
dec
or
enter
adc
sbb
pop
jg
sbb
mov
and
fs
ins
fmul
xor
nop
jo
lahf
lods
ret
loopne
stos
push
or
xor
or
cld
push
inc
dec
xor
ja
outs
sar
cmp
and
in
pop
ds
shl
aas
stos
shl
fwait
popa
test
inc
cmc
cmp
inc
add
or
fmul
cwde
add
jne
mov
mov
and
pop
nop
out
scas
and
push
add
sub
sbb
nop
sub
sub
(bad)
fmul
dec
loop
cmp
and
xchg
inc
daa
inc
jmp
dec
lock
nop
aad
cs
aas
cwde
inc
xor
sub
int
cs
sti
std
das
jle
push
jne
shl
dec
and
mov
das
repz
add
cmp
sti
sub
ret
sub
into
ds
xchg
cld
pop
push
call
or
jmp
sahf
cmps
stc
add
sbb
inc
mov
add
add
(bad)
fwait
movs
aas
iret
hlt
or
into
(bad)
ds
push
adc
int3
rol
test
cmc
imul
or
inc
dec
dec
adc
stos
mov
imul
pushf
mov
bound
loop
shl
pop
push
ja
and
sub
lea
bound
jecxz
jl
push
add
(bad)
ins
call
lods
inc
ins
jmp
or
cmp
call
(bad)
adc
fbstp
rol
div
das
push
mov
cli
or
scas
data16
add
movs
mov
xchg
mov
or
ficom
daa
pop
daa
sbb
or
rcl
or
mov
cmp
cmp
dec
mov
push
je
mov
inc
(bad)
dec
repz
outs
adc
sbb
cwde
and
or
mov
and
mov
lock
pop
xchg
mov
or
push
or
inc
and
inc
mov
push
or
dec
lds
cmp
jle
sub
adc
cld
push
ficomp
cli
push
and
jmp
js
hlt
xchg
xchg
jbe
jmp
aad
popa
adc
bswap
jge
mov
shr
or
dec
jb
push
or
pop
cmp
mov
or
or
clc
jmp
jge
dec
das
shr
or
sbb
mov
and
loopne
in
xlat
in
sbb
add
xor
cmp
sub
je
push
adc
and
sub
lock
mov
or
cmp
sbb
aam
leave
cmp
adc
das
cdq
aaa
jl
call
add
sub
mov
inc
adc
mov
jb
push
pop
retf
call
mov
adc
sub
xchg
movs
ror
clc
xchg
xchg
mov
or
lods
xchg
inc
adc
mov
cmp
movs
shl
lds
sbb
jl
fist
hlt
jl
xchg
fild
int
xor
(bad)
sub
arpl
sbb
push
or
jns
mov
mov
push
and
pusha
sbb
pop
push
sbb
xchg
mov
sub
jo
or
clc
call
pop
lahf
or
adc
jle
xor
or
mov
repz
pop
or
add
fst
add
fs
or
and
and
xor
push
loope
cmp
jne
dec
sub
movs
sbb
push
cmp
shr
sub
add
dec
bound
jmp
or
dec
daa
scas
and
or
cs
out
xor
mov
jbe
adc
mov
in
cmp
mov
jp
pushf
adc
push
ret
cmp
cmp
jl
xchg
call
and
pop
cmp
sbb
jne
rol
popa
movs
aad
add
jns
imul
mov
(bad)
jle
(bad)
mov
(bad)
lds
loop
ins
jmp
push
push
das
into
mov
mov
push
bound
stos
cmp
push
or
xor
adc
jge
xor
sbb
cmp
not
lods
xchg
test
xor
add
adc
push
or
inc
aas
mov
sbb
add
aaa
call
inc
and
xor
ficomp
dec
xchg
int
das
xadd
shl
sti
adc
je
jp
and
jl
mov
xchg
jo
imul
nop
add
and
sub
jno
fadd
cmp
call
jmp
mov
pop
pop
xchg
mov
sbb
xor
or
xor
aas
(bad)
jo
sbb
movs
sbb
enter
mov
jns
loopne
pushf
push
sub
pop
push
bnd
cmp
cmp
enter
jnp
nop
inc
push
dec
dec
icebp
jl
or
dec
jb
mov
jg
xor
push
aam
adc
ins
(bad)
scas
(bad)
cmp
or
push
pop
jmp
and
push
dec
enter
mov
ins
push
retf
test
enter
pop
mov
jb
in
mov
jbe
adc
dec
pop
jno
pop
sub
pop
pop
mov
popf
jp
push
push
push
fwait
aaa
inc
ins
dec
xchg
cmps
ret
sub
push
cs
mov
push
call
xchg
inc
pusha
inc
add
xchg
jbe
pop
jle
mov
in
lea
or
push
xchg
test
movs
lods
sbb
hlt
(bad)
xchg
mov
aam
movs
sub
push
sti
shl
hlt
push
repz
xchg
pop
push
movs
shl
adc
push
inc
cmps
cmps
push
inc
mov
push
imul
push
lahf
jl
jg
cmp
push
cmp
les
into
and
sub
arpl
add
ret
xor
pop
dec
loopne
inc
or
push
(bad)
mov
sub
dec
sar
or
xchg
jmp
xchg
inc
mov
adc
push
jl
push
cmp
lds
mov
jno
test
inc
je
lods
push
lods
sar
pop
mov
xchg
mov
cmp
sbb
pop
and
lea
mov
push
dec
mov
adc
test
mov
xchg
sub
leave
out
cmp
sar
mov
lea
push
cmps
jnp
push
int
or
or
pop
fs
adc
jno
movs
xchg
xor
nop
mov
inc
(bad)
not
sbb
pop
sbb
hlt
jmp
or
sbb
lock
lods
push
lods
and
aad
cmp
gs
jbe
cmp
sbb
test
sub
bound
and
sahf
push
add
mov
cmova
push
xchg
push
shl
jo
jecxz
clc
jmp
mov
and
stos
mov
cs
or
outs
ds
sub
pop
jmp
and
rol
add
repnz
jne
dec
imul
fs
dec
mov
xor
movs
push
dec
or
test
push
add
dec
call
cmp
call
stos
add
jecxz
add
hlt
push
lods
clc
nop
fwait
inc
es
adc
neg
call
or
cmp
and
jp
pop
cwde
xor
or
push
(bad)
mov
rol
jns
stc
jmp
pusha
xor
retf
in
push
sub
sar
dec
fst
xor
inc
pop
sbb
xchg
mov
dec
xchg
scas
adc
or
or
jo
add
nop
mov
pop
pop
pop
dec
enter
dec
dec
adc
push
jno
or
iret
cmp
jbe
xor
pop
xchg
jl
add
aad
mov
sbb
into
idiv
xor
data16
mov
daa
push
inc
cmp
and
popa
in
hlt
test
call
(bad)
cld
ret
pop
adc
mov
dec
sbb
dec
or
push
fsubr
hlt
mov
inc
dec
pop
cmp
aas
dec
subps
out
xor
xor
dec
sub
or
repz
cmps
pop
jmp
jno
add
clc
sub
mov
dec
ret
cmp
sar
add
pop
xor
clc
loope
sub
(bad)
loopne
and
cdq
adc
push
iret
ret
cmp
in
and
inc
or
inc
xor
inc
gs
add
in
xor
std
push
or
jecxz
sub
fnstenv
or
repnz
mov
jecxz
(bad)
sbb
loope
repz
lds
jne
pop
sar
sbb
mov
or
add
loope
and
inc
cmp
jne
es
or
popf
inc
ficom
test
in
ficomp
adc
(bad)
(bad)
stc
sub
add
repz
add
push
pop
sbb
inc
enter
sbb
adc
and
pop
shl
inc
(bad)
mov
hlt
adc
ins
or
dec
leave
psubw
shl
jmp
shl
dec
shl
jle
scas
xchg
jmp
shl
(bad)
jle
jl
adc
inc
or
jmp
and
adc
mov
push
enter
push
iret
xchg
mov
sbb
xchg
or
push
pop
cmp
xor
in
adc
cmp
stc
adc
or
jbe
mov
outs
sbb
push
inc
jle
sbb
xchg
jl
call
je
in
jl
(bad)
adc
inc
or
add
rol
fs
clc
jl
repz
mov
cmp
jmp
push
mov
add
clc
mov
fimul
or
inc
sub
jbe
popa
mov
sub
push
xchg
add
test
jecxz
aam
ins
in
jbe
add
sbb
das
add
lahf
dec
mov
inc
inc
arpl
cmp
icebp
pop
add
or
cli
add
and
mov
hlt
push
fistp
sbb
mov
cmp
ja
fisttp
movzx
ss
push
or
inc
adc
sbb
sbb
sbb
add
inc
add
and
stc
(bad)
ja
enter
sbb
pop
cmps
push
inc
adc
scas
jg
sub
stos
repz
addr16
sar
out
add
jle
sbb
push
popa
je
popa
pop
and
sbb
adc
add
scas
test
mov
cmp
xchg
test
adc
xchg
mov
call
and
mov
call
por
adc
fimul
je
iret
mov
iret
lds
into
pop
push
call
out
adc
call
jbe
add
fisub
pop
add
lods
in
sub
call
pop
clc
cmps
cmp
fiadd
in
sub
and
pop
jg
xor
ja
mov
ins
adc
dec
mov
adc
jecxz
xor
adc
sahf
gs
pop
xchg
add
(bad)
jae
lahf
adc
je
(bad)
jb
ss
jne
xor
add
cmp
jecxz
retf
jmp
stc
jl
pop
pop
rol
adc
mov
popf
mov
add
sbb
jae
add
push
test
push
ror
enter
and
xchg
out
or
jne
jmp
jne
shl
js
jbe
xchg
test
test
punpcklbw
jmp
(bad)
retf
inc
xchg
xor
ret
dec
xchg
push
test
jge
repz
mov
popf
leave
xor
xor
xor
fidivr
sbb
test
add
sub
push
xchg
push
sbb
pop
ins
aaa
(bad)
retf
xor
cmp
push
xor
test
addr16
call
jbe
pop
sar
sub
in
cmps
arpl
sub
xor
int
and
pop
or
add
xchg
push
pop
call
or
sbb
mov
dec
and
aad
je
(bad)
mov
(bad)
fcomp
lsl
jecxz
sbb
jns
or
or
or
xchg
adc
jne
adc
loopne
xor
adc
pop
sub
ds
inc
pop
sbb
inc
fcom
jne
cmp
subps
cwde
jmp
mov
inc
mov
leave
mov
enter
mov
push
sbb
in
aaa
mov
loopne
ja
xchg
mov
aas
(bad)
sub
call
sub
and
aaa
adc
add
cmp
pop
mov
loopne
push
clc
jg
rcr
lock
fstp
movs
lods
fild
push
adc
fsubrp
cmp
push
fstp
or
cwde
mov
icebp
mov
ins
jecxz
les
sub
jbe
enter
ficom
test
sub
fldlg2
pop
(bad)
dec
ret
adc
add
mov
xchg
cmc
cmp
jne
mov
push
adc
add
dec
inc
loop
nop
mov
mov
xor
cmp
je
clc
push
mov
hlt
das
and
out
cmp
je
inc
or
sbb
push
add
push
scas
or
fwait
mov
cli
rol
dec
lea
pop
jbe
je
dec
add
sub
and
and
jo
icebp
and
cmp
loope
adc
mov
mov
sub
and
and
add
or
push
jmp
hlt
and
xchg
xchg
push
or
sbb
ret
mov
mov
add
je
push
xchg
icebp
dec
sub
mov
add
call
push
cmp
sub
sti
dec
push
lock
add
call
fs
mov
aaa
ins
popa
mov
mov
inc
mov
mov
ja
test
mov
test
data16
add
add
inc
sar
lock
add
icebp
xchg
stos
add
jo
mov
into
xor
push
mov
scas
inc
push
inc
shl
push
or
mov
pop
adc
popf
fmul
mov
or
test
inc
rcr
sub
xchg
pop
push
sbb
push
mov
ret
xchg
data16
int3
std
in
shr
pop
push
lock
shr
push
call
mov
std
movs
pushf
cmp
cld
add
mov
in
mov
aas
push
lods
stos
adc
(bad)
cmps
(bad)
call
pop
imul
sub
or
sub
xchg
sub
and
sbb
and
sub
inc
dec
enter
mov
push
and
sub
mov
push
mov
iret
push
inc
data16
mov
and
push
adc
add
or
or
jecxz
mov
adc
sbb
idiv
xlat
push
xor
jecxz
push
cmp
scas
xor
mov
push
repz
pop
nop
jmp
call
jge
xor
aam
(bad)
jmp
inc
xchg
shl
inc
push
add
or
pop
push
call
inc
and
mov
mov
outs
ins
inc
mov
loop
jl
and
movs
jno
test
sahf
out
cli
or
dec
in
dec
loopne
jl
pop
or
leave
lods
fisub
pushf
or
push
or
sub
adc
adc
pusha
push
or
scas
xchg
add
inc
cmp
jb
jmp
imul
aam
or
mov
or
sub
xchg
adc
push
add
mov
inc
or
test
imul
and
cld
ins
adc
into
stos
pop
adc
sub
push
xchg
loopne
add
xchg
add
add
sahf
lahf
sbb
jge
mov
sbb
ror
test
push
jp
adc
into
dec
pushf
gs
add
ret
pop
adc
push
pop
add
sahf
push
xchg
xor
sbb
xlat
push
arpl
push
lahf
test
jmp
in
cmp
dec
sti
push
call
mov
push
loopne
jge
dec
scas
pop
out
mov
lods
fs
in
mov
outs
test
sub
or
clc
test
xor
cmp
rcr
dec
inc
add
push
repz
hlt
adc
or
sbb
gs
jbe
push
jmp
pop
sbb
fst
stos
outs
push
icebp
sahf
ds
push
xchg
int3
data16
inc
outs
enter
jmp
cs
ss
and
fldenv
pop
add
push
and
repz
jmp
jecxz
repz
call
shl
and
or
mov
repz
and
call
repz
repnz
out
repz
cmp
mov
inc
adc
xchg
daa
in
push
cmps
jmp
fild
repz
or
das
mov
pop
or
cmp
mov
dec
adc
mov
cmp
jl
cld
(bad)
call
repnz
gs
retf
repz
in
pop
leave
cmps
repz
adc
sahf
add
repz
mov
sub
test
pop
push
lea
in
jle
mov
test
add
jmp
adc
nop
pushf
nop
pop
fistp
into
push
add
inc
push
xchg
push
xchg
pushf
in
repnz
repz
push
cmp
xchg
gs
push
jl
jns
add
repnz
xchg
dec
cs
(bad)
movs
or
push
push
add
xchg
and
jle
xchg
mov
repz
scas
inc
(bad)
jns
pop
xchg
in
mov
sbb
jmp
ds
repz
out
stos
in
popa
lock
mov
in
test
repz
fsubrp
repz
push
cmc
mov
aad
xchg
dec
mov
aaa
mov
and
bswap
cvtpi2ps
ror
adc
stc
repnz
js
and
mov
push
cmps
mov
enter
xchg
je
repz
loope
xchg
jl
pop
mov
pop
in
repz
sbb
in
mov
retf
pusha
mov
lea
pop
leave
das
stc
push
hlt
call
push
hlt
(bad)
stc
or
jp
adc
pusha
jge
popa
cmp
dec
push
add
cli
dec
inc
clc
add
inc
daa
in
xchg
arpl
ja
mov
(bad)
or
jb
cmps
add
test
dec
clc
aaa
call
mov
push
or
xchg
inc
aad
shl
je
shr
pusha
loop
test
dec
mov
fild
fdivr
dec
js
mov
adc
ret
(bad)
pop
push
adc
push
inc
lock
jmp
xchg
mov
sbb
call
rol
and
jge
rep
loope
ret
sub
add
adc
mov
add
std
(bad)
fisttp
pusha
in
test
and
out
test
xor
or
js
dec
push
add
sub
movups
ds
(bad)
je
xor
add
test
jp
inc
repz
jo
jns
sar
sub
movs
xchg
dec
enter
push
lock
push
mov
pop
test
mov
mov
ret
test
cmp
imul
test
sub
mov
and
imul
rcl
jne
jmp
xor
xor
cmp
lods
ror
pop
sbb
enter
das
push
mov
or
or
enter
push
bound
add
pop
push
test
push
mov
sti
ja
imul
lea
mov
add
dec
imul
mov
inc
sbb
dec
je
dec
jne
(bad)
int3
std
jmp
sbb
lea
cmp
jne
cs
bound
cmp
jne
jge
ins
inc
xor
xor
jmp
outs
outs
mov
and
or
push
outs
je
js
dec
in
(bad)
mov
pop
jne
jmp
mov
push
lods
rcr
sub
and
xor
xchg
pop
sub
(bad)
ja
push
mov
mov
and
xrelease
mov
sub
out
adc
push
loopne
add
mov
popf
sti
sbb
je
stos
(bad)
cmp
jne
adc
add
clc
outs
ds
jnp
cmp
jge
test
mov
test
js
pop
lahf
jmp
mov
rol
lea
pusha
mov
xlat
outs
ss
int3
retf
add
jmp
test
mov
pop
xor
inc
mov
and
addr16
ins
cmps
ins
or
je
data16
or
sub
mov
scas
or
add
lds
ffree
add
sub
jns
sbb
aam
ret
pop
sti
pop
mov
sub
dec
push
jl
sub
sub
mov
mov
maxps
popf
push
or
inc
push
lea
mov
ja
push
xchg
pop
ror
dec
fwait
jmp
jmp
mov
lods
lods
test
mov
mov
mov
add
dec
ror
pop
aad
loope
iret
xor
or
leave
inc
cmp
jnp
repnz
xchg
or
and
pop
add
push
xchg
fcom
inc
push
dec
add
mov
inc
rol
and
clc
cmc
or
call
mov
mov
scas
cmp
das
xor
nop
pop
sti
pop
jmp
rcr
clc
xlat
enter
psubb
or
inc
pop
push
sbb
dec
xlat
ds
sbb
push
push
fwait
sbb
add
aaa
fcmovnbe
or
push
iret
scas
sbb
adc
cmp
jle
mov
inc
mov
in
add
test
xor
in
or
jmp
push
pop
rcl
(bad)
outs
mov
jae
jp
add
dec
xor
lods
jb
call
dec
pusha
pop
sbb
xor
fbld
shr
call
out
or
jo
arpl
jae
not
or
or
sub
add
shl
jnp
lahf
add
call
or
mov
shl
dec
add
dec
or
shr
fbld
cdq
sbb
jle
popa
test
and
hlt
out
rcl
cmp
adc
loopne
xchg
test
cs
sbb
icebp
xchg
sub
call
sbb
pmaxsw
sbb
inc
jmp
inc
jmp
pop
pop
adc
neg
movs
jge
dec
dec
and
adc
out
jmp
int3
jmp
arpl
adc
or
retf
mov
or
out
daa
ds
fistp
xor
mov
ds
mov
inc
mov
jmp
sub
das
ret
pop
inc
cmp
inc
(bad)
lahf
cmps
push
push
ds
je
inc
cmp
jae
call
ret
cmp
ja
sub
(bad)
push
and
adc
rol
mov
mov
shl
cmp
retf
hlt
inc
or
inc
dec
jne
xor
nop
cmps
mov
cmp
pop
ror
call
cli
or
adc
dec
jno
stos
cwde
arpl
pop
jne
test
add
add
das
inc
cmc
dec
loope
sub
cmp
(bad)
fadd
js
inc
jae
je
cmp
je
imul
sbb
add
ret
cmp
call
cmp
rcl
hlt
sbb
inc
sti
out
add
repz
lods
scas
add
add
js
xor
sbb
add
xor
mov
cld
mov
jp
mov
push
mov
dec
jne
adc
(bad)
imul
movs
test
(bad)
mov
test
add
add
idiv
hlt
fcomp
dec
test
arpl
or
dec
inc
inc
sub
or
(bad)
xchg
dec
sbb
jo
pop
mov
inc
push
mov
inc
xchg
jne
outs
jne
jmp
inc
sub
adc
xchg
xor
jmp
out
or
aas
sub
cmp
(bad)
cli
jmp
in
enter
imul
js
xor
add
call
sub
jae
jae
das
adc
mov
cdq
add
adc
cmp
in
jo
or
je
add
sbb
scas
aad
icebp
mov
test
sbb
add
inc
cmp
xchg
and
enter
lahf
rol
cmp
nop
cmp
repz
cmp
outs
shl
sub
dec
jmp
and
inc
push
push
dec
push
sub
icebp
pop
or
lea
or
add
enter
test
es
inc
mov
pop
xor
movs
movs
test
or
mov
inc
and
jmp
push
cmp
pusha
mov
imul
jge
cmc
iret
data16
(bad)
stc
ret
cmp
cmp
push
add
in
pusha
movs
dec
mov
sahf
ficom
adc
add
gs
jecxz
and
or
scas
xchg
inc
fimul
or
fist
cmp
inc
or
or
cmp
outs
mov
(bad)
dec
ins
fimul
jmp
cmp
xor
push
jmp
pop
movs
jne
pop
sbb
ficom
add
mov
pop
push
mov
xor
int
ret
add
pop
ja
cmp
je
sbb
adc
inc
jecxz
jmp
sub
mov
pusha
jns
xor
shl
jecxz
movs
and
or
mov
fs
add
push
mov
ret
into
dec
pop
nop
add
(bad)
dec
adc
jg
cmc
outs
pusha
ins
push
mov
and
mov
stos
jbe
cli
fwait
cmp
inc
ds
jecxz
movs
repz
adc
xchg
inc
jg
mov
jnp
ja
call
jns
sub
and
jmp
adc
jb
das
or
call
xchg
xor
mov
pop
cmp
jge
es
outs
mov
or
pop
add
add
cmc
test
jmp
jl
scas
push
mov
mov
fwait
or
cmp
mov
mov
js
or
add
or
mov
cmp
(bad)
not
and
adc
push
or
call
add
mov
push
in
sahf
pop
or
push
or
sbb
and
adc
and
inc
jno
fdecstp
jle
loopne
mov
(bad)
and
gs
mov
xchg
push
inc
sbb
xor
sbb
js
or
jns
fwait
xchg
repnz
or
fsubr
test
push
fnstcw
cmp
add
push
fcmove
cmc
adc
test
ja
gs
pop
dec
cld
mov
sti
outs
or
inc
adc
mov
enter
inc
(bad)
mov
lods
cmp
lea
movs
add
cwde
jne
test
and
mov
pushf
add
xchg
repnz
mov
stc
mov
test
xchg
lods
sub
add
push
pusha
test
mov
mov
sbb
enter
sti
sub
jbe
pusha
jne
out
jl
mov
mov
(bad)
sub
fidivr
xchg
adc
inc
sub
adc
xchg
pop
shr
push
js
mov
fsubr
jo
fs
outs
add
cdq
push
dec
dec
sbb
xchg
dec
inc
outs
sub
inc
clc
sbb
pop
fdivr
add
and
jb
and
adc
cmp
imul
and
cld
fwait
cmps
xor
inc
pop
mov
dec
retf
aad
xchg
fmul
or
(bad)
rcr
push
enter
ds
outs
push
inc
int3
je
cmp
pop
clc
cmps
and
(bad)
dec
cmp
inc
pop
sub
ret
call
(bad)
(bad)
into
or
dec
fst
movs
mov
fisttp
js
sbb
jb
ret
movs
push
push
mov
repnz
aaa
pusha
ret
call
mov
ja
imul
mov
cvtps2pi
or
mov
sbb
push
test
push
rcr
ds
mov
mov
nop
or
pop
xor
(bad)
xchg
inc
sub
mov
xor
inc
xor
mov
xor
loopne
cs
jb
ds
daa
or
xor
fs
arpl
xchg
popa
pop
inc
xor
mov
add
mov
adc
mov
movs
gs
adc
sbb
cmps
dec
cdq
clc
add
shr
or
sbb
repz
(bad)
xlat
dec
xor
mov
dec
lods
add
jmp
stos
add
in
stos
stos
sbb
inc
imul
inc
dec
adc
loopne
dec
aad
and
and
nop
sub
push
hlt
arpl
into
jns
cmp
mov
gs
dec
repz
pop
(bad)
xchg
imul
push
hlt
cwde
or
dec
repnz
cmp
push
cs
mov
ins
ficom
push
cmp
je
mov
add
je
fidivr
fs
push
adc
add
call
or
pop
jecxz
xor
sub
test
add
and
xchg
and
and
or
mov
clc
push
enter
(bad)
mov
jb
xor
sbb
pusha
imul
xchg
mov
int3
sub
xor
sub
adc
sbb
pusha
adc
mov
mov
sbb
push
dec
ins
sub
or
mov
or
sbb
mov
sbb
and
rcr
sbb
ins
jg
in
add
mov
xchg
mov
push
or
cwde
fmul
add
nop
icebp
add
dec
aam
push
popa
movs
dec
xchg
ins
sub
jne
mov
fnsave
pop
mov
pop
cmp
sbb
adc
clc
mov
sub
mov
jg
call
outs
daa
mov
sbb
jp
or
addr16
pop
std
lods
cdq
ds
mov
push
test
rcl
and
lods
cld
mov
ret
js
pop
call
cwde
jne
mov
or
push
pusha
inc
xor
fs
xchg
xor
jbe
push
push
mov
sub
or
unpckhps
lea
outs
mov
test
call
push
sub
and
fnstenv
sbb
xor
cld
ja
adc
sbb
ss
or
das
lea
in
dec
jbe
inc
repz
ret
pop
scas
loope
js
xlat
xchg
fisubr
adc
mov
dec
in
and
test
add
or
xchg
outs
sbb
pop
or
and
hlt
mul
or
mov
push
mov
or
icebp
inc
jp
bound
add
add
int
jl
(bad)
cld
dec
push
push
mov
cmp
xor
in
pop
mov
push
scas
rcr
std
data16
sub
out
push
int3
lock
and
jb
sbb
icebp
jbe
repnz
outs
lock
rol
add
cmp
leave
jmp
mov
push
add
and
sbb
and
sbb
retf
inc
bswap
retf
xchg
xor
sub
cmp
bound
mov
ret
es
jmp
ss
xor
xor
retf
sbb
cmp
push
loop
add
add
enter
mov
inc
out
hlt
or
inc
stc
push
mov
hlt
call
and
xchg
adc
shl
sub
(bad)
test
push
call
leave
leave
in
add
cmps
inc
jle
dec
mov
mov
dec
push
cmps
jb
pop
or
xor
imul
lahf
loopne
pop
or
imul
lahf
cmp
push
es
mov
repnz
call
dec
in
dec
in
and
and
jmp
aas
and
fsubr
test
lock
jne
push
test
lods
inc
push
and
int3
mov
mov
in
or
sbb
in
shr
or
(bad)
cdq
add
rcl
jle
dec
sbb
iret
sub
add
hlt
cmps
call
xchg
add
ins
test
or
aam
xor
push
inc
inc
cdq
dec
test
lahf
cmp
dec
push
mov
(bad)
mov
retf
int3
and
add
and
sbb
cmps
in
jns
or
retf
call
and
in
cmp
call
jmp
out
sbb
pop
fsubr
or
das
mov
in
clc
pop
lock
loopne
jmp
push
jmp
xchg
mov
mov
jl
ror
push
iret
add
xchg
addr16
jb
push
sbb
cs
lods
loopne
fbstp
xchg
xchg
fld
mov
adc
enter
add
fs
leave
leave
leave
call
in
leave
enter
mov
ds
jg
popf
and
and
outs
mov
sbb
or
gs
cld
xchg
cmps
and
push
in
lock
mov
jmp
retf
xor
fisttp
pusha
callw
repnz
lea
adc
fisubr
mov
pop
(bad)
adc
pusha
(bad)
jmp
mov
adc
xchg
sub
les
stos
push
pusha
mov
sub
push
test
imul
aaa
lock
clc
pop
nop
dec
in
aam
js
in
jns
cmc
pop
add
jl
inc
mov
adc
call
lock
mov
pop
push
test
xor
out
loope
jmp
inc
cmp
adc
mov
mov
enter
jmp
pop
in
dec
mov
push
cld
adc
jmp
lods
sub
push
mov
je
adc
aaa
mov
jns
(bad)
clc
cmp
mov
sbb
outs
xchg
out
pop
jne
(bad)
ins
jmp
in
dec
push
cdq
add
outs
pop
push
xor
pop
hlt
lock
push
ror
std
mov
out
js
icebp
pop
enter
pop
ret
scas
lods
sar
push
lds
test
movs
adc
jmp
mov
sbb
lods
sahf
int3
pop
fst
jne
lock
jmp
adc
add
jl
in
icebp
sbb
add
dec
add
push
mov
jp
aas
std
sbb
imul
fdivr
and
repz
aaa
xor
mov
push
lock
movs
pop
aam
inc
sub
jl
ds
xor
lock
ins
jb
jns
xor
inc
pop
add
pop
sub
or
out
dec
test
mov
in
jl
mov
xchg
shl
aaa
jg
push
stc
xor
xor
jmp
jle
push
lods
sub
movs
aam
popf
inc
fisub
dec
js
and
es
fs
pop
repnz
inc
add
jmp
mov
ud1
call
daa
fs
sbb
xchg
fsubr
jp
cmp
sub
aad
dec
mov
lahf
arpl
xchg
dec
ja
pushf
jno
ja
ds
or
psllw
mov
lock
ins
sbb
jmp
test
mov
xor
cwde
adc
mov
xor
sub
push
fiadd
hlt
sbb
int
jo
lock
xchg
out
push
icebp
mov
test
sub
lahf
aam
add
test
sahf
out
mov
xor
fisttp
test
sar
in
adc
pop
jmp
sbb
or
adc
repz
jl
repz
inc
sbb
in
gs
mov
jmp
pop
fs
add
jmp
cdq
mov
dec
repz
dec
pushf
xchg
(bad)
mov
push
jns
and
sbb
rcr
mov
push
jmp
pop
hlt
inc
sub
in
lods
jmp
jl
enter
and
(bad)
aas
cmp
sub
xchg
div
(bad)
mov
rol
fcmovnbe
mov
lock
mov
(bad)
pop
repnz
rcr
jmp
cld
(bad)
shl
ja
inc
push
jmp
out
js
mov
inc
jge
or
jle
stc
(bad)
fmul
push
shr
cmp
mov
aaa
aad
or
in
sbb
(bad)
cmp
sahf
mov
jnp
hlt
aas
sub
push
sbb
movs
bnd
fwait
pop
sub
or
out
call
jo
into
inc
mov
push
ret
pop
cld
adc
adc
dec
enter
adc
clc
mov
push
test
sub
data16
xchg
adc
jns
in
jecxz
call
cwde
mov
or
or
jg
stc
cld
cmp
adc
mov
mov
enter
daa
lock
popf
outs
fisub
aas
sub
int
or
daa
test
ins
adc
pusha
jmp
fidivr
in
test
and
cmp
fs
daa
adc
pop
int3
jmp
pop
jge
adc
clc
les
lahf
sub
mov
and
nop
ffree
mov
fidivr
push
int3
test
mov
mov
or
(bad)
icebp
adc
in
jg
pusha
jmp
jmp
and
enter
and
add
or
stos
cmp
push
push
pop
not
sbb
shr
aad
scas
adc
(bad)
adc
popf
scas
add
dec
jns
and
or
call
lods
sahf
fld
jmp
add
sahf
sahf
cmp
fcomp
dec
enter
scas
enter
icebp
sub
pop
ins
or
push
pop
(bad)
adc
in
lods
js
xchg
scas
outs
aad
pop
les
(bad)
pop
scas
repnz
movs
pop
lock
sub
jns
mov
in
dec
push
dec
push
xchg
dec
jl
(bad)
mov
lahf
(bad)
adc
jl
lahf
adc
fisubr
ds
lods
scas
mov
xchg
cmp
jmp
int3
adc
cmp
lods
fsub
dec
out
inc
ss
(bad)
rcr
outs
xchg
jns
(bad)
cmp
gs
sar
mov
aaa
pushf
xor
aaa
fucomip
(bad)
and
ins
aad
repnz
mov
std
fdivr
sub
pop
scas
mov
pop
test
dec
adc
repnz
(bad)
adc
lods
(bad)
(bad)
(bad)
out
jo
jmp
jmp
movs
(bad)
mov
push
sub
push
je
xchg
je
dec
shl
and
push
or
push
mov
mov
stc
or
outs
fdiv
and
adc
add
adc
mov
stos
pop
aas
in
rcl
jns
hlt
rcr
pop
jnp
jns
and
(bad)
and
popf
add
cmp
jmp
mov
(bad)
push
push
fisttp
sub
int
adc
mov
push
out
mov
adc
out
jmp
sbb
fsubr
add
sbb
inc
add
or
push
call
retf
mov
mov
mov
test
sar
loopne
mov
das
jns
push
pop
push
xor
xor
xor
pop
imul
retf
xor
test
ss
and
jle
test
retf
repz
ss
pop
inc
sti
dec
add
cmp
pop
cli
inc
lods
mov
lea
inc
adc
inc
and
fucomip
dec
enter
popf
sbb
js
push
sub
(bad)
push
mov
leave
cwde
mov
retf
sub
test
popf
pop
pop
pop
iret
iret
cmps
loope
in
leave
xor
sub
add
aad
or
loopne
shr
jne
mov
in
pop
jge
pop
or
mov
xor
adc
std
or
and
xor
xlat
adc
(bad)
retf
inc
pop
sub
mov
scas
or
pop
push
push
add
add
xor
sub
add
mov
fisttp
push
aas
les
cmp
fld
dec
loopne
or
(bad)
cmp
out
xchg
(bad)
cs
rol
repnz
push
mov
jg
fnsetpm(287
fldcw
mov
sbb
movs
xor
sbb
pop
xor
dec
jg
inc
sbb
dec
or
inc
cwde
cld
sbb
jmp
daa
fwait
cwde
fisttp
ror
jb
cmps
scas
retf
add
and
xchg
push
retf
mov
(bad)
sub
lock
test
sbb
dec
cdq
fs
dec
xchg
mov
jb
sbb
aam
push
rcl
or
dec
and
cwde
cld
movs
xchg
retf
out
std
or
fdiv
and
fsub
dec
sahf
xchg
int3
and
cmps
pop
adc
hlt
mov
iret
jp
sbb
sbb
or
jmp
jmp
lods
pusha
jmp
jge
add
jmp
jmp
mov
icebp
jmp
mov
das
add
rcr
xor
sbb
pop
push
call
enter
cs
test
out
and
int3
jl
jmp
jns
xor
loopne
in
pop
movs
movs
dec
sbb
or
cdq
xchg
xchg
xchg
in
push
fs
sub
es
ss
add
pop
inc
sbb
mov
mov
cmp
pop
mov
movaps
jmp
out
repnz
test
sub
mov
retf
adc
pop
movnti
push
dec
sub
clc
mov
inc
sbb
and
in
lea
sbb
adc
das
and
pop
loopne
xor
add
leave
pop
nop
sbb
leave
retf
retf
push
push
add
pop
cmp
ja
or
fsub
in
sbb
nop
jmp
gs
pop
xchg
sub
or
xor
mov
test
add
dec
sbb
sbb
inc
cmp
pop
mul
mov
(bad)
ds
mov
ins
test
bound
push
sub
adc
pop
pusha
mov
pop
int3
jmp
ret
gs
dec
enter
and
addr16
scas
call
enter
stos
into
in
je
daa
fild
mov
pusha
pop
test
sbb
jno
adc
jl
sub
jmp
or
popf
push
add
not
adc
xchg
retf
mov
ss
repnz
sbb
sub
ror
sbb
sbb
or
sub
hlt
lock
leave
jns
ins
add
dec
lods
inc
sbb
(bad)
(bad)
mov
in
jb
cmp
das
fadd
fistp
jnp
jo
punpckhbw
test
inc
and
mov
lods
lahf
test
out
out
sub
lds
repnz
mov
hlt
add
xchg
retf
inc
mov
add
xlat
inc
cs
xchg
add
sti
cmp
mov
stos
mov
test
ret
int
cmp
cld
mov
iret
in
add
loopne
xchg
ret
jg
adc
adc
sub
or
mov
inc
test
adc
dec
gs
ins
jg
pusha
aam
jae
xchg
cmp
jg
mov
inc
mov
scas
sub
jp
sahf
daa
icebp
pop
push
mov
in
mov
add
sbb
aad
pop
or
rol
popf
push
aas
lahf
movs
pop
int
test
dec
aaa
ret
ins
movs
sahf
popf
pop
test
sbb
sbb
iret
pop
scas
mov
lahf
sub
add
movs
jo
scas
jl
xchg
cmp
lahf
js
jmp
pushf
js
dec
test
xchg
xchg
(bad)
pushf
pop
in
jge
adc
lock
nop
sbb
sbb
dec
push
cmps
jnp
adc
adc
(bad)
xor
sub
movs
add
sbb
call
add
cwde
mov
nop
adc
(bad)
pop
add
and
sub
movs
push
mov
or
sub
movs
ror
or
inc
jl
dec
jo
xchg
pop
sbb
(bad)
pop
sub
adc
test
sar
lods
push
add
es
pop
jnp
add
pop
stc
add
lock
and
cli
in
pop
jmp
(bad)
xchg
lock
dec
mov
stc
mov
push
mov
xchg
push
adc
or
lock
cmps
sub
(bad)
repnz
fbld
call
mov
(bad)
jecxz
addr16
loopne
das
fcom
pop
pop
dec
repnz
lods
je
cmp
adc
(bad)
mov
jbe
in
lods
adc
sub
and
mov
(bad)
ins
gs
ss
dec
lea
leave
xor
dec
es
sbb
adc
(bad)
inc
(bad)
xlat
std
adc
out
retf
add
dec
(bad)
pop
sub
sahf
dec
scas
sub
cmp
adc
and
movs
xchg
mov
test
sbb
cmp
lds
push
push
repnz
sbb
inc
bound
xchg
cmp
add
retf
pop
and
cld
cld
mov
push
pop
xlat
mov
and
xor
mov
or
stc
dec
iret
push
les
xchg
rcr
in
mov
jle
hlt
xchg
or
mov
je
cld
les
pop
jo
or
push
(bad)
lods
int3
outs
add
xor
mov
scas
repz
repnz
(bad)
jg
jmp
jae
cmc
sti
jns
sti
in
xchg
push
adc
jg
mov
mov
pop
xor
pop
lock
mov
outs
mov
gs
call
sub
les
pop
call
inc
dec
pop
or
es
push
add
mov
adc
adc
jmp
mov
cli
mov
cmps
xchg
aas
ret
pop
push
and
jmp
fstp
cli
scas
jo
aam
jbe
inc
sbb
mov
cli
out
je
(bad)
rcr
xchg
test
leave
and
or
pop
shl
mov
mov
and
(bad)
cwde
pop
mov
repnz
push
pusha
rcr
outs
cmp
or
mov
mov
inc
push
push
nop
mov
mov
push
scas
test
cmps
js
mov
push
jl
(bad)
aad
movs
ret
cdq
mov
adc
xchg
scas
xor
adc
push
movs
jb
jl
inc
dec
pusha
ds
jl
lock
sub
dec
and
pushf
or
jb
(bad)
(bad)
aam
popa
(bad)
push
mov
lahf
clc
dec
mov
mov
fcomp
add
lods
jmp
out
xchg
add
adc
xchg
inc
sahf
ror
outs
dec
test
pop
enter
add
add
jg
mov
pushf
test
jg
jle
arpl
or
lock
sbb
fimul
xchg
outs
in
aad
or
and
test
pushf
imul
mov
(bad)
jae
mov
jl
lods
adc
div
cmps
xchg
and
das
add
cmp
lahf
and
fstp
xchg
mov
in
imul
push
aas
lods
jmp
(bad)
jae
xchg
push
loop
test
div
mov
mov
mov
fild
pushf
jmp
(bad)
pop
inc
jmp
int
pop
ret
jg
adc
jmp
cmps
or
ret
and
sbb
mov
pop
push
(bad)
jnp
imul
fidiv
repnz
loope
and
pop
adc
xchg
ins
cdq
cmp
das
jns
push
sub
outs
adc
popa
cs
repz
in
fcomi
pusha
and
cmc
lahf
test
out
mov
arpl
push
pop
adc
pop
sbb
call
in
test
nop
mov
pop
enter
jb
cmp
lods
hlt
push
pop
inc
pop
jl
pop
popa
adc
xchg
pop
mov
fisub
inc
sar
hlt
repnz
in
hlt
pushf
mov
jnp
push
(bad)
nop
mov
jmp
cmp
fild
outs
inc
mov
aam
adc
xor
test
cmps
sbb
(bad)
push
xchg
fisub
outs
pop
jnp
jo
adc
pop
push
gs
stc
jl
leave
and
adc
rcr
out
(bad)
jnp
ins
or
adc
pop
sbb
hlt
add
adc
dec
push
mov
mov
xor
and
jmp
mov
in
add
inc
pushf
outs
adc
mov
push
repz
mov
mov
(bad)
lock
cmc
repnz
inc
jmp
fs
rol
outs
stc
lods
or
jmp
xchg
std
nop
std
mov
movs
out
shl
mov
push
fistp
out
dec
fisttp
ins
dec
push
test
xor
or
ror
sahf
int
rol
push
mul
sub
test
push
jl
test
mov
jbe
add
adc
jge
pop
mov
cs
dec
popf
mov
mov
sbb
mov
popf
nop
pop
in
xchg
loopne
out
add
inc
mov
sub
ficomp
fist
dec
repz
mov
sbb
repnz
aas
es
dec
adc
push
pop
div
push
leave
mov
dec
repz
xchg
retf
pop
aas
pusha
dec
cmp
adc
imul
and
adc
mov
movs
sbb
aas
pop
mov
pop
stos
scas
sbb
add
sahf
(bad)
pop
(bad)
pop
xchg
lods
je
sbb
sbb
fsub
addr16
fs
mov
mov
in
hlt
push
aad
mov
ins
ret
aas
int3
or
cdq
inc
pop
push
push
xchg
out
and
cdq
ficom
mov
nop
sbb
lahf
add
popa
pop
in
and
aas
test
jp
nop
xchg
mov
jmp
aad
sbb
sub
movs
adc
mov
into
ret
rol
pop
xor
lea
ffreep
xor
movs
mov
rcr
mov
or
repnz
mov
or
xchg
lods
enter
inc
cld
clc
out
or
and
xchg
add
in
lds
test
adc
push
sub
inc
mov
pop
inc
cmp
sbb
mov
add
xchg
dec
aas
dec
enter
dec
push
push
sbb
xchg
sbb
push
pop
xchg
sbb
xchg
pop
pop
leave
xchg
sbb
pop
pusha
pusha
shl
aas
jmp
and
fstp
imul
pop
daa
and
adc
daa
adc
push
sub
iret
push
cmp
or
(bad)
cdq
cmp
cwde
sbb
call
mov
adc
add
call
add
push
iretw
jp
dec
repz
adc
add
iret
(bad)
out
mov
cmp
add
cmp
mov
jbe
cs
jo
repz
sbb
repnz
retf
movs
out
cmp
mov
(bad)
or
int
jns
sbb
inc
pop
ins
retf
jp
iret
repz
mov
sahf
out
jmp
jns
out
bound
call
shl
add
(bad)
out
sahf
out
sub
push
fucom
jns
cwde
stos
mov
out
sahf
out
cmps
xchg
sub
repz
dec
retf
sbb
mov
out
call
neg
sar
loop
inc
mov
out
sahf
xchg
test
inc
ss
out
es
or
enter
out
sahf
rol
mov
dec
repz
dec
(bad)
sub
jns
cmps
stc
cld
aad
fcmovb
mov
jns
out
nop
jle
ds
sar
or
aam
mov
cmp
xchg
xor
cmp
repz
ss
add
jns
out
shl
ror
mov
scas
mov
jns
out
pop
dec
xor
imul
adc
int3
leave
sahf
pop
retf
dec
repz
loopne
mov
enter
iret
repz
or
call
out
retf
xchg
xor
xchg
out
xchg
outs
inc
fnstenv
jns
or
daa
mov
cmp
cmp
into
fiadd
push
js
idiv
iret
repz
mov
add
into
(bad)
push
out
xor
int3
into
into
in
push
iret
mov
cs
int
adc
push
into
and
int3
scas
je
push
ss
pop
cmp
mov
femms
push
push
je
cmp
iret
repz
adc
push
adc
pop
jo
outs
test
sysret
jns
out
mov
adc
inc
pusha
and
loopne
add
sahf
out
pusha
adc
out
lock
or
adc
jbe
out
shl
fnstsw
arpl
fld
stos
push
adc
jns
add
imul
rol
lds
adc
ins
icebp
(bad)
(bad)
jg
push
xor
sbb
into
or
rcl
mov
add
dec
fld
sbb
jg
jg
loopne
xchg
cmp
or
inc
pop
sti
jno
adc
into
outs
push
mov
pop
mov
xor
nop
add
ins
sbb
int
lods
sti
inc
push
push
sysret
or
add
or
test
inc
pusha
pop
jg
sbb
add
jecxz
cwde
mov
aad
sbb
sbb
adc
push
add
pop
arpl
jae
rol
push
pop
jnp
sub
add
ficomp
es
dec
add
dec
push
and
xchg
or
mov
pop
mov
dec
and
push
add
stos
push
add
jb
call
mov
mov
std
add
mov
jns
out
sub
adc
cld
mov
hlt
call
jnp
xor
push
sbb
add
mov
xchg
ja
out
mov
push
(bad)
idiv
repz
mov
sahf
pop
repz
mov
xchg
push
nop
idiv
into
in
out
out
iret
cmp
jl
push
je
out
sahf
jo
push
sahf
out
pop
push
push
dec
scas
dec
sahf
out
retf
xor
and
iret
sar
lock
jl
cmp
cld
mov
fdivr
out
sahf
pusha
pop
dec
and
adc
repz
in
les
dec
and
mov
gs
cmp
dec
mov
movs
out
dec
dec
dec
and
push
inc
inc
aas
je
jbe
sahf
cmp
mov
dec
sbb
xchg
(bad)
loopne
mov
adc
lods
dec
jb
inc
ret
out
jmp
cli
push
pusha
clc
sub
jae
add
jge
jo
aaa
cwde
add
call
xchg
push
out
xchg
mov
retf
push
push
cmps
aaa
xchg
dec
rcl
inc
(bad)
sub
sub
mov
aad
aaa
xor
scas
mov
ins
int
fs
push
inc
mov
jae
push
push
sub
daa
push
arpl
jo
pop
cdq
xchg
jae
push
push
enter
(bad)
out
imul
xor
sub
inc
xchg
pop
inc
jmp
cs
push
dec
and
dec
cld
xchg
imul
mov
push
ss
(bad)
sbb
pop
inc
push
cmp
inc
pop
push
dec
push
push
and
mov
push
or
or
mov
sbb
movsx
mov
jg
xor
dec
push
jbe
iret
std
imul
add
popa
daa
pop
add
xor
ins
fs
movs
mov
je
pop
xchg
inc
or
retf
pop
and
cmp
cwde
push
es
mov
ins
out
add
loopne
es
mov
lahf
push
mov
jnp
jo
dec
jnp
fwait
test
movs
shr
ror
mov
mov
enter
neg
cs
push
lahf
xor
sbb
push
sub
ds
jmp
push
push
jo
add
pop
nop
in
adc
pop
push
daa
mov
inc
add
xor
push
shl
and
loopne
push
mov
push
fwait
add
xor
adc
mov
jne
pusha
and
and
inc
inc
das
out
movs
inc
in
xor
jb
jb
or
and
dec
inc
pop
pop
push
inc
push
push
dec
add
inc
ss
inc
mov
dec
mov
pop
jb
popa
fs
mov
test
inc
sub
cmps
sub
push
inc
pand
dec
inc
xor
inc
add
mov
xor
xchg
out
push
cdq
push
fsub
pop
jae
cmc
scas
add
cwde
and
push
jg
mov
outs
fs
outs
out
inc
inc
push
xchg
add
xor
mov
add
pop
mov
fisubr
js
push
cmp
add
(bad)
inc
jne
js
mov
jae
arpl
inc
or
inc
xchg
xchg
aam
sub
jmp
fld
das
sub
test
lahf
fisubr
das
xchg
inc
dec
push
push
int3
pop
jmp
dec
push
dec
inc
inc
dec
push
mov
add
ss
xor
pop
mov
inc
xor
xor
fwait
sub
xchg
cmp
ss
add
cmp
fild
cmp
out
aas
pop
dec
dec
(bad)
popa
pop
xor
cmp
sahf
mov
test
lahf
push
xor
add
inc
inc
inc
dec
xchg
(bad)
icebp
adc
xor
push
inc
arpl
or
div
jle
inc
dec
add
xchg
add
mov
xor
sbb
sbb
adc
add
wrmsr
xor
cdq
and
xor
jg
ds
popa
(bad)
popa
xchg
(bad)
frstor
or
or
in
jbe
mov
scas
dec
pop
ret
fsubp
add
das
gs
jbe
(bad)
mov
xchg
mov
pop
fdivrp
pop
dec
push
dec
inc
out
push
dec
inc
adc
push
daa
pop
mov
pop
add
adc
rol
xor
pop
dec
nop
or
adc
call
pop
and
pop
add
mov
enter
in
inc
enter
in
add
fmul
leave
add
add
inc
leave
add
mov
xor
loopne
fcom
inc
cwde
pop
add
sbb
add
and
scas
pop
add
cs
mov
or
mov
dec
cs
cs
and
sar
or
xor
push
leave
add
popa
pop
scas
add
mov
pop
mov
and
test
adc
adc
pop
sar
sbb
add
sbb
movs
aas
add
or
sub
mov
ins
adc
in
pop
movs
inc
adc
in
movs
cmp
and
fsub
add
cs
cmps
fcomp
adc
mov
fwait
mov
enter
pop
inc
repnz
es
adc
enter
xor
xchg
or
mov
xchg
xchg
add
dec
int3
ret
and
les
test
jb
adc
jl
test
jo
pop
and
push
enter
shr
add
add
inc
push
or
xor
or
dec
inc
scas
in
or
nop
sub
sub
dec
xor
in
or
dec
ins
mov
add
sub
add
push
test
or
pop
sub
fsub
add
mov
mov
and
nop
sub
aas
outs
jae
sub
cmp
call
call
jmp
mov
pop
and
cmp
xor
add
pop
jne
outs
std
xor
jg
imul
test
xchg
jge
imul
sub
sub
dec
test
cmc
and
push
arpl
jg
jne
daa
jl
mov
mov
mov
sahf
fidivr
lods
and
stc
aas
inc
inc
xor
add
pop
xchg
stos
ins
mov
lahf
das
pop
mov
add
add
xor
xor
adc
adc
iret
xor
or
(bad)
cli
cmp
push
push
inc
dec
inc
push
dec
xchg
(bad)
xor
pop
sti
mov
dec
ins
aas
sub
shl
push
cmp
inc
xor
xor
xor
cmp
in
xor
dec
pop
fild
pop
add
add
imul
inc
ficomp
fbld
jo
jb
mov
jo
push
or
xchg
rcl
cli
pop
add
add
inc
jge
lods
sbb
sbb
push
cld
or
push
or
das
adc
add
jp
cmp
test
int
sub
aad
imul
jne
bound
sub
sbb
lds
test
add
push
(bad)
mov
add
out
je
in
sub
jo
or
imul
adc
pop
clc
jb
push
lea
dec
pop
inc
lahf
popa
sub
outs
jne
and
fnsave
ja
gs
dec
push
je
ja
das
je
jae
mov
cmp
fisttp
mov
sub
sub
fmul
vmovhpd
aaa
jno
mov
aas
jns
and
mov
inc
add
aas
sub
aaa
imul
jno
in
sub
out
das
cmp
daa
ins
mov
pop
xchg
push
dec
daa
xchg
xchg
inc
ins
mov
aaa
sbb
adc
mov
push
sub
mov
mov
mov
push
and
dec
cmps
das
xchg
xchg
xchg
pop
iret
das
xlat
daa
sbb
fstp
mov
ficomp
int
int
mov
aam
inc
sbb
das
in
mov
mov
in
daa
in
adc
push
aad
das
in
das
in
jne
jnp
in
and
inc
xchg
stos
mov
jmp
fisubr
aaa
push
mov
mov
mov
(bad)
shl
fbld
jbe
jo
jno
pusha
add
pop
dec
clc
pop
aam
adc
or
add
pop
push
inc
push
mov
sub
daa
pop
push
fnstcw
push
pusha
vmaxpd
fcmovb
xchg
mul
rol
xchg
inc
dec
ins
das
and
nop
jecxz
push
sti
mov
iret
sub
fild
push
lods
call
inc
mov
push
and
not
aad
mov
das
pop
pop
sbb
out
xchg
sbb
push
jmp
mov
pusha
pop
jmp
add
and
scas
daa
sbb
push
scas
das
iret
icebp
jbe
ss
mov
inc
das
push
shl
adc
mov
fsubr
lods
and
pop
sub
sbb
sbb
inc
std
das
aam
push
ret
add
adc
push
hlt
(bad)
xor
imul
mov
inc
pop
lods
data16
bound
push
imul
add
inc
xor
add
mov
push
loopne
pop
fsubr
rol
scas
inc
fwait
and
sub
adc
int
sub
std
mov
sub
lods
push
dec
xor
xor
cmps
inc
inc
push
ja
sub
add
(bad)
push
adc
push
xor
pop
lahf
and
sub
out
adc
mov
call
enter
fsub
outs
out
or
sub
nop
mov
pop
cmps
outs
pop
and
pop
add
mov
push
inc
inc
mov
(bad)
cs
pxor
out
push
cs
js
std
adc
sub
jmp
and
call
pop
inc
dec
inc
inc
pop
push
mov
inc
mov
xor
jno
fisubr
mov
jae
jne
mov
fs
mov
cmc
or
inc
lods
pop
ja
test
test
nop
jbe
das
push
aaa
daa
push
sub
mov
push
das
add
mov
mov
xlat
test
jns
jae
mov
inc
call
lods
dec
pusha
test
(bad)
jbe
jbe
into
cmps
scas
xor
test
mov
ja
or
mov
mov
inc
sbb
imul
push
jo
jl
or
mov
arpl
add
pop
push
data16
das
mov
das
mov
ins
mov
cmp
or
aaa
aam
xchg
xor
movs
out
popa
ins
sbb
jnp
cmp
push
loope
jle
popa
data16
popa
arpl
popf
push
add
imul
pop
neg
pop
lahf
daa
mov
adc
leave
lds
daa
xor
mov
and
or
inc
mov
aaa
add
arpl
mov
int
jg
mov
pop
daa
jmp
out
pop
imul
and
sub
jo
sub
cmps
cmps
jb
add
mov
pop
and
push
cdq
inc
add
xchg
popf
and
xor
mov
pop
sub
push
mov
jl
imul
aaa
jo
xor
sbb
shl
ins
ins
shr
fs
mov
cmp
xor
(bad)
(bad)
or
aad
fs
ret
or
push
cs
ins
xor
enter
cdq
or
pusha
adc
push
in
or
add
jne
icebp
scas
(bad)
stc
retf
dec
inc
pusha
sbb
adc
shl
sbb
or
sub
push
jp
outs
pop
aas
sbb
test
or
test
mov
mov
add
add
enter
sbb
xchg
loope
es
outs
cmp
pop
add
arpl
mov
jno
mov
(bad)
cmp
(bad)
xchg
mov
pusha
clc
pcmpeqd
xor
push
or
outs
cmp
out
outs
bound
imul
ret
add
test
pusha
dec
enter
xor
in
gs
fsub
inc
push
dec
ret
mov
pop
das
popa
das
lods
sar
leave
and
push
aaa
mov
in
sbb
or
push
aam
push
imul
mov
push
jne
push
mov
mov
add
mov
inc
aaa
and
pop
sub
or
loop
pusha
or
push
sub
imul
xchg
jne
mov
adc
sub
xor
xor
xor
aaa
test
test
push
callw
pop
push
push
(bad)
das
inc
mov
ret
inc
cdq
scas
mov
add
sub
inc
mov
aaa
es
or
arpl
pop
add
arpl
adc
and
inc
push
scas
xor
inc
pop
mov
into
jne
mov
mov
ins
or
or
inc
inc
sub
imul
aas
push
mov
js
outs
fsub
imul
fxch
cs
push
xor
outs
xor
rol
test
jbe
data16
aaa
inc
aaa
imul
imul
push
inc
sub
mov
outs
mov
lods
loopne
pop
aaa
js
pop
addr16
in
out
scas
(bad)
fidiv
push
imul
adc
and
ins
pop
push
ret
dec
fcomp
mov
outs
out
dec
daa
in
add
xchg
add
mov
cs
jo
cmp
mov
into
and
sbb
dec
rol
or
jne
fs
fstp
pop
add
das
push
cmc
adc
out
xchg
sub
mov
and
movs
jp
mov
rcl
scas
ds
push
test
bound
cmp
mov
xor
out
cmp
imul
retf
pop
jnp
mov
xor
(bad)
push
mov
(bad)
sbb
imul
sub
add
ins
sub
mov
jb
sbb
test
sbb
lock
jo
gs
xchg
in
mov
add
add
das
sbb
adc
mov
imul
dec
xchg
fistp
jae
push
shl
test
add
adc
pop
push
or
ret
dec
cs
in
or
loop
pop
ja
or
jl
jo
std
sbb
xor
lock
xchg
loope
lds
outs
push
mov
nop
and
js
or
xchg
cmpxchg
and
das
ins
aaa
loop
lods
lods
xor
sbb
outs
(bad)
popa
mov
shr
pop
pop
jb
mov
pop
add
adc
fwait
jne
push
inc
add
add
ret
ja
retf
and
sbb
cmp
inc
push
jne
inc
adc
dec
dec
inc
push
add
and
iret
popa
xor
add
in
fild
fcmovu
sub
das
or
push
adc
outs
adc
shr
(bad)
mov
jo
xor
repz
test
xchg
dec
lods
hlt
loopne
daa
je
jne
(bad)
fld
shr
nop
and
dec
data16
or
imul
xchg
push
shr
das
xor
les
and
outs
inc
jae
cmps
and
push
cs
jne
retf
stos
jae
jmp
mov
imul
mov
aaa
mov
push
xchg
shl
and
and
xchg
aaa
pop
int
inc
mov
lods
pop
push
scas
imul
aam
das
add
or
rol
movs
aaa
cs
pop
and
mov
das
pop
inc
mov
popa
mov
push
jbe
dec
ins
jl
movs
mov
arpl
cmp
retf
popa
outs
mul
scas
das
je
inc
and
imul
std
das
mul
push
hlt
adc
mov
lahf
or
or
lods
lods
mov
xor
das
mov
jo
mov
aaa
pusha
mov
pusha
inc
xlat
xchg
or
push
sub
fs
cmp
daa
loope
fs
or
push
fadd
loope
movs
add
add
jle
mov
jb
xor
fidiv
das
data16
push
sbb
xchg
aas
push
fsubr
lods
cmc
das
jb
pop
scas
mov
xchg
add
mov
bound
adc
jb
aas
sub
and
bound
jmp
out
mov
dec
in
pushf
inc
lahf
daa
shl
das
arpl
js
xor
outs
jbe
sub
fadd
clc
cs
jb
pop
imul
pop
xchg
or
or
cmp
das
xchg
mov
daa
test
stos
arpl
mov
das
jo
outs
cmp
imul
das
fistp
fdiv
es
outs
pop
push
sbb
pop
arpl
xor
adc
mov
rol
or
jno
fs
out
jbe
pusha
js
pushf
pop
add
sti
or
mov
loope
mov
js
stc
jmp
cli
sbb
lock
gs
mov
mov
pop
imul
pop
cmp
shl
cmp
ret
movs
or
stos
push
push
mov
in
and
push
retf
sub
xor
inc
ss
cmp
sub
inc
arpl
jo
dec
sbb
dec
clc
dec
inc
add
arpl
or
adc
inc
mov
inc
fcmovu
and
call
xchg
imul
ins
mov
int
fs
in
imul
xchg
ss
fadd
leave
bound
xchg
cmp
add
add
jo
xchg
or
or
daa
and
xor
inc
popa
jg
push
gs
movs
je
gs
cwde
jecxz
inc
mov
stos
xor
mov
xchg
das
mov
add
pop
(bad)
fsub
dec
mov
lods
dec
pop
call
or
dec
shl
or
push
arpl
das
xor
add
aaa
pop
pop
ficomp
add
sub
adc
pop
(bad)
sbb
cmps
sbb
dec
and
mov
daa
inc
aad
adc
jne
mov
neg
mov
shl
sbb
cmp
adc
ss
mov
dec
lods
imul
pop
mov
or
pop
xlat
cmp
mov
stc
aaa
add
jne
dec
inc
ins
adc
mov
cld
jmp
sbb
leave
aad
outs
addr16
bound
jne
sbb
scas
popf
daa
dec
mov
sub
in
inc
das
gs
in
push
(bad)
fistp
fs
cdq
mov
jo
or
mov
in
sub
hlt
jbe
mov
cmp
mov
pop
imul
mov
daa
pop
shl
or
pop
aaa
xchg
sub
mov
or
cmp
daa
out
push
mov
xchg
(bad)
(bad)
jne
nop
or
mov
pop
inc
pop
into
sub
jge
lahf
sbb
test
addr16
lods
add
(bad)
imul
lds
ins
arpl
out
or
pop
xor
and
das
test
xor
rcl
das
xor
jae
pop
jmp
std
in
adc
aad
loop
xchg
movs
push
push
cmc
ss
mov
mov
pop
adc
pop
dec
pop
pop
push
add
das
adc
jmp
jne
pop
jbe
popf
add
dec
sub
cs
stos
push
push
push
inc
push
inc
push
retf
push
or
out
xor
xor
repnz
es
aas
inc
dec
dec
inc
dec
push
push
xor
fidiv
push
xchg
pop
push
push
fist
adc
push
mov
aaa
or
inc
mov
dec
mov
(bad)
add
aaa
gs
ret
push
shl
xor
adc
xchg
xchg
add
pop
addr16
imul
icebp
fiadd
dec
pop
ret
and
push
leave
dec
mov
and
std
aaa
inc
push
dec
xor
ss
sub
aaa
shr
nop
xchg
ficomp
das
xchg
ins
inc
mov
pop
aaa
push
wbinvd
not
stos
inc
cmps
cmp
mov
add
or
sub
das
xchg
je
call
call
pop
add
ss
pop
pop
push
xor
rcl
add
movs
shl
jae
push
test
pop
leave
mov
sahf
xchg
aaa
(bad)
jb
push
push
push
dec
arpl
add
inc
pop
pop
push
pop
mov
pop
inc
pop
sub
jnp
inc
pop
iret
xchg
jnp
mov
rol
sar
sub
fsub
xor
jo
mov
les
mov
aas
inc
inc
dec
push
fsubr
aaa
sub
push
mov
mov
pop
cmp
sub
mov
inc
js
fdivrp
mov
sbb
pushf
test
or
out
pop
aas
cmc
(bad)
push
and
xchg
mov
xor
imul
push
pusha
les
mov
inc
and
and
xlat
jae
or
pop
adc
adc
inc
bound
push
adc
mov
retf
mov
addr16
pop
sub
adc
xor
mov
aaa
dec
and
cld
cmps
lods
(bad)
jmp
das
inc
aad
sbb
cs
hlt
mov
jmp
daa
jle
sub
mov
push
push
lods
addr16
aas
ror
ret
pop
scas
aas
fcomp
shl
aaa
jmp
and
shr
fild
aas
test
daa
add
and
pop
mov
add
mov
ins
mov
push
push
shl
in
das
out
pop
dec
inc
dec
inc
fdivr
jg
dec
inc
dec
dec
mov
push
adc
test
arpl
jle
jae
lds
dec
inc
pop
not
push
inc
out
pop
adc
xchg
test
pop
int
fstp
ins
cs
dec
push
dec
pop
mov
cmp
std
adc
or
pop
push
push
pop
pusha
or
push
fs
pop
adc
call
cs
pop
push
pop
xchg
aas
fist
cmp
sbb
fsubrp
inc
dec
push
dec
add
dec
imul
mov
outs
mov
aaa
jne
fs
das
dec
sub
sbb
pop
test
fsubr
nop
pusha
inc
out
je
or
add
sti
sbb
adc
jno
inc
inc
add
mul
inc
xlat
push
and
mov
adc
push
inc
inc
movs
pop
mov
inc
push
inc
outs
dec
sbb
xor
mov
les
daa
sub
push
pop
xor
lods
pop
pusha
in
mov
sub
loop
loope
sar
or
mov
pop
mov
mov
adc
fist
adc
aas
scas
ret
fiadd
rep
pop
outs
pop
faddp
ins
pop
push
pop
or
mov
imul
inc
js
dec
push
inc
push
pop
arpl
jge
or
xchg
push
cmp
outs
retf
adc
sub
mov
jne
mov
push
inc
push
arpl
pop
and
ja
sub
(bad)
mov
(bad)
ffreep
das
pop
push
lods
lods
iret
daa
sub
inc
xlat
pop
(bad)
(bad)
mov
sbb
or
das
mov
stos
mov
xor
add
adc
retf
fsub
dec
dec
jb
inc
mov
sbb
out
movs
in
movs
fidiv
mov
sub
aaa
mov
xor
es
pop
sbb
add
pop
stc
(bad)
mov
aaa
mov
add
adc
mov
das
daa
push
xchg
mov
out
aas
push
fiadd
inc
div
adc
mov
dec
push
les
imul
dec
out
mov
ss
add
sbb
inc
dec
push
mov
mov
cmp
jno
dec
xchg
sub
aaa
push
push
pop
adc
xchg
das
mov
pop
fst
(bad)
xor
das
xor
pop
fist
das
ja
add
loope
inc
or
mov
dec
inc
js
loope
mov
cmp
push
shl
bound
lock
in
jne
jle
push
and
sahf
pop
add
(bad)
bound
rcr
pushf
inc
dec
movs
xlat
shr
sbb
pusha
daa
mov
(bad)
mov
and
rcl
jg
icebp
push
pushf
dec
jge
pop
pop
sti
mov
pop
fidiv
imul
mov
leave
pop
fistp
inc
push
in
sub
jg
push
mov
daa
lods
lods
push
mov
jo
aas
cdq
fdiv
xor
mov
and
adc
xor
inc
xor
push
sbb
push
cmp
inc
add
sbb
xor
sub
fdivr
xlat
popa
adc
ins
nop
xchg
xchg
aas
dec
fld
mov
mov
add
mov
cmp
dec
cmps
pop
lods
loopne
add
pop
mov
ins
and
sub
xchg
or
xchg
mov
mov
outs
push
mov
xor
imul
or
(bad)
rol
add
mov
call
xor
add
and
xor
and
pop
push
sub
fst
dec
adc
dec
sub
and
daa
ror
sbb
fldenv
cmp
outs
xlat
je
enter
dec
and
push
movs
mov
loope
dec
aaa
sar
pop
xor
das
cmp
xor
inc
pop
sbb
mov
cld
leave
and
cdq
test
mov
jl
and
mov
rcl
jne
fcmovnu
mov
add
outs
test
aam
test
ins
fs
arpl
fisttp
scas
or
add
inc
xor
pop
sub
ds
sbb
sub
out
mov
and
xor
xor
sub
out
jo
jmp
repnz
inc
pop
lds
sub
inc
push
clc
sbb
dec
sub
push
sub
loope
sbb
jle
fs
adc
sub
add
mov
jge
and
cmp
push
xor
add
sub
jge
mov
dec
dec
inc
mov
or
sub
mov
sub
or
(bad)
sub
mov
adc
pop
std
sub
xor
and
push
fild
push
adc
push
cdq
push
mov
ins
mov
mov
lahf
pop
adc
adc
je
or
cmp
and
aad
pop
loope
rol
je
adc
enter
dec
cmps
and
sub
mov
pop
retf
jmp
push
dec
inc
iret
push
or
pop
cmp
imul
cmp
push
xchg
mov
aas
iret
push
dec
inc
dec
dec
mov
xchg
push
movs
inc
push
mov
and
mov
(bad)
out
pop
mov
daa
push
push
rcl
mov
scas
push
mov
out
add
out
adc
mov
xor
pop
shr
out
shr
pop
and
sub
push
scas
out
inc
rol
push
pop
push
inc
cmp
sar
gs
pop
sub
xlat
push
mov
push
aaa
pop
inc
push
push
inc
daa
push
xor
jle
dec
inc
dec
pop
dec
inc
push
push
xor
jbe
cmp
pop
sbb
sbb
data16
and
fidiv
rcr
or
inc
push
add
movs
outs
movhps
sbb
call
sub
mov
dec
inc
dec
cmp
pop
cmp
outs
ins
in
popf
push
jg
aad
dec
and
inc
push
(bad)
jo
mov
int
inc
test
push
xchg
inc
cmp
adc
cmps
loopne
adc
fldcw
mov
in
je
jb
pop
or
push
test
lea
sbb
fsub
or
cmp
add
jbe
xchg
jae
iret
push
enter
push
pop
or
mov
xchg
repz
pop
repz
jbe
mov
outs
jo
sbb
add
cmp
cld
int
imul
adc
add
fnstsw
adc
es
ss
adc
addr16
rol
das
mov
ror
lahf
mov
nop
cmp
test
xchg
mov
or
iret
test
xor
scas
mov
xchg
into
and
neg
push
push
inc
mov
pop
add
mov
cs
adc
jmp
mov
rol
or
scas
mov
dec
out
in
cmp
lea
or
add
mov
or
cmp
shr
inc
lahf
mov
xchg
sub
daa
pop
add
xchg
mov
neg
(bad)
not
pusha
inc
ja
pop
add
sub
add
sbb
sub
outs
stc
lock
nop
and
sub
push
mov
adc
rol
push
das
cs
stos
loope
sub
pushf
inc
jo
cmp
out
nop
add
xchg
add
mov
adc
jmp
and
xchg
and
mov
dec
xchg
push
out
fwait
cmp
ret
jo
lahf
or
lahf
in
fisub
lahf
cmp
lods
push
ror
fnsetpm(287
jo
pop
and
xchg
xchg
sbb
sbb
daa
iret
enter
lahf
mov
push
mov
jo
aas
pop
jnp
popf
add
rol
in
mov
sub
fs
mov
hlt
sub
ins
scas
xor
shr
ja
and
fbstp
mov
pop
push
ss
pop
lods
dec
inc
push
push
xchg
add
dec
xor
inc
push
dec
dec
jmp
push
cmovle
cmp
inc
inc
push
push
mov
adc
inc
adc
push
cwde
xchg
pop
inc
adc
xor
out
pop
je
xchg
inc
mov
imul
mov
mov
das
fs
fs
(bad)
test
ins
mov
clc
adc
fs
add
mov
jbe
adc
pop
push
mov
pushf
lahf
icebp
pop
xor
stos
push
push
add
and
add
ret
movs
sbb
outs
pop
clc
or
sahf
cmps
push
dec
dec
inc
inc
mov
jo
mov
jae
lock
cwde
daa
jne
ins
sub
loopne
dec
ret
movs
xor
addr16
dec
push
imul
xchg
inc
inc
mov
cmp
mov
cmps
pop
inc
pop
fidivr
sub
push
push
(bad)
push
jno
or
aaa
add
mov
loopne
xchg
pop
or
xor
lock
dec
and
jp
pop
rcr
mov
addr16
push
sub
push
daa
and
ror
push
adc
pop
dec
xor
aaa
out
pop
leave
and
das
popf
cmp
inc
pop
xchg
and
mov
sub
imul
ins
sub
jno
iret
fwait
test
js
push
add
ins
add
call
enter
not
sahf
stos
sbb
add
mov
xchg
adc
ins
and
cmp
pop
or
scas
sbb
sahf
xchg
xlat
call
outs
xchg
or
jne
add
ds
(bad)
daa
add
mov
mov
es
shl
fadd
pop
lods
xlat
cwde
outs
add
adc
xchg
xor
psubw
rol
aaa
ins
xchg
mov
scas
push
xor
inc
cs
xchg
pusha
and
out
xor
mov
nop
popa
out
inc
xchg
nop
inc
test
(bad)
xchg
pop
je
add
hlt
xor
jae
pop
add
call
out
dec
mov
les
push
pop
jnp
not
xchg
mov
mov
xchg
iret
ret
pop
dec
cmp
aaa
pop
cmp
je
xchg
into
jae
add
out
and
mov
dec
inc
cmps
adc
xchg
push
das
repnz
mov
add
xor
ret
dec
es
add
enter
(bad)
in
xor
cmp
xor
fdivr
push
in
mov
addr16
hlt
dec
scas
or
cmp
push
lahf
dec
fidivr
pop
pop
or
dec
lods
es
add
movs
inc
push
add
and
cwde
jno
xor
pop
and
mov
or
cmp
mov
inc
test
hlt
sub
clc
sub
retf
dec
popf
mov
or
movs
inc
iret
fld
call
add
jns
jne
dec
sbb
fsubr
inc
aas
nop
xor
je
in
add
aad
push
(bad)
outs
jne
iret
or
pop
out
mov
outs
popa
jae
mov
out
cmp
sub
jg
aaa
das
and
mov
mov
into
xor
test
push
cs
fstp
inc
sbb
adc
int
push
cmps
aas
aas
xor
movs
mov
call
lods
test
jbe
dec
inc
dec
outs
jbe
add
inc
xor
inc
cwde
mov
pop
cmps
cmps
jns
fild
inc
cld
std
jge
inc
dec
cmovg
scas
inc
push
inc
push
outs
mov
ins
inc
dec
arpl
inc
dec
pop
xor
add
adc
pop
push
push
pop
mov
arpl
or
mov
push
or
jo
or
jns
or
data16
imul
push
stc
pop
test
mov
outs
(bad)
fiadd
add
(bad)
out
inc
fs
es
enter
inc
sbb
jb
sub
mov
scas
or
or
dec
addr16
(bad)
fimul
jg
fadd
call
push
movs
adc
mov
fimul
push
imul
pop
std
sbb
outs
xor
sbb
imul
(bad)
sbb
dec
pop
add
xor
cmp
inc
frstor
das
dec
ins
pop
mov
mov
mov
dec
pusha
call
mov
inc
mov
movs
push
and
lfs
or
mov
out
sar
les
mov
(bad)
push
(bad)
int3
repz
enter
leave
loopne
arpl
pop
mov
jmp
mov
int3
jp
pop
pusha
push
retf
xlat
daa
sub
sub
hlt
ror
sub
in
add
(bad)
ins
pop
or
outs
jl
add
movs
add
push
lds
hlt
push
cmc
scas
call
push
dec
fisttp
mov
pop
inc
inc
inc
push
push
fs
inc
mov
addr16
or
mov
jae
push
push
cmp
sbb
mov
hlt
imul
cmp
mov
aas
je
pop
imul
inc
pop
dec
sub
rol
inc
outs
add
sub
add
add
out
and
add
ror
inc
add
add
xchg
fwait
inc
fadd
neg
inc
daa
mov
hlt
push
inc
xchg
dec
(bad)
imul
in
pusha
out
scas
aam
xchg
add
mov
test
sahf
out
cmp
das
test
add
pop
ret
mov
pusha
daa
inc
inc
pop
add
adc
lds
mov
hlt
xchg
das
jmp
jae
ins
xchg
fdiv
out
cwde
pop
push
cs
pusha
sbb
iret
inc
pop
test
cs
push
sub
inc
xchg
add
inc
sub
addr16
sub
jbe
outs
aam
pushf
inc
sub
and
ror
inc
mov
pop
sub
enter
xor
dec
cmp
add
das
mov
dec
push
gs
xor
ds
imul
push
push
fsubr
test
aaa
rol
and
push
pop
dec
cmp
out
adc
inc
fisub
into
(bad)
push
das
xchg
xlat
arpl
pop
sub
pop
inc
sbb
pop
pop
jo
pusha
in
pusha
mov
or
nop
adc
xor
sub
or
push
das
xor
xor
push
push
inc
pop
cmp
mov
repnz
cmp
outs
sub
sub
rcl
or
adc
popf
jne
mov
xor
pushf
adc
(bad)
push
sbb
and
ficom
or
scas
xor
pusha
nop
fmul
movs
inc
ins
mov
inc
xchg
inc
push
ins
stos
or
xchg
mov
push
cmp
mov
adc
xor
bound
out
xor
outs
ins
push
jle
xor
mov
je
fadd
nop
jb
xor
sub
pop
aas
inc
or
mov
mov
adc
dec
clc
out
push
ds
cmp
xor
and
mov
xchg
fld
test
data16
dec
push
jo
pop
dec
fcmovnbe
repnz
or
xor
rcr
add
das
addr16
xor
sahf
sub
retf
in
out
push
rcr
js
xchg
pop
pop
push
push
jg
sar
xchg
dec
pusha
aad
push
push
outs
mov
sub
data16
(bad)
jle
inc
inc
cmovno
and
sbb
inc
and
or
cs
cmps
cs
std
ins
adc
ja
jo
mov
dec
xor
pop
je
sub
push
push
pop
das
div
js
pop
cs
dec
add
push
cwde
jbe
arpl
inc
or
aaa
ins
mov
fadd
ja
aas
ja
add
pop
mov
xchg
sbb
in
xchg
xor
arpl
(bad)
ret
push
ins
addr16
cmp
(bad)
sub
out
popa
rol
sbb
popa
push
repnz
add
inc
arpl
xor
fdivr
dec
jnp
push
imul
in
mov
xchg
(bad)
xor
mov
pop
and
fadd
push
adc
pop
movs
push
dec
je
or
xchg
mov
aas
and
and
arpl
test
inc
xchg
aaa
inc
add
xchg
or
scas
pushf
inc
push
and
xor
dec
call
ret
daa
inc
dec
mov
inc
outs
or
xchg
jo
sub
dec
xor
in
mov
and
pop
and
sahf
shl
add
dec
gs
sub
sub
sub
pop
fld
inc
aam
sar
pop
add
bound
loopne
inc
dec
fnstsw
xor
inc
ja
cmp
ins
jl
into
cmps
cmp
mov
stos
cwde
cmp
js
je
fsubr
jne
jns
pusha
dec
or
pop
ss
mov
xchg
inc
outs
js
xor
adc
push
addr16
rcl
xchg
rol
and
pop
lds
aaa
xlat
push
sbb
sbb
aas
push
cmp
mov
enter
mov
les
in
dec
outs
adc
sbb
cli
jb
cmp
lds
sbb
push
push
push
in
(bad)
and
xor
sbb
or
xor
or
aaa
outs
cmp
inc
int3
push
pop
sub
lods
or
xor
xor
mov
sub
ret
cmps
mov
sub
pop
mov
push
add
mov
mov
sbb
mov
add
xchg
or
mov
out
xor
sub
dec
js
popa
sub
dec
or
mov
jecxz
xor
imul
pop
inc
fwait
xchg
pusha
daa
lock
push
ins
adc
push
inc
sbb
inc
inc
push
dec
inc
call
push
and
sub
repnz
push
adc
inc
xchg
nop
or
ins
add
mov
add
inc
inc
rcl
packssdw
(bad)
push
mov
xor
push
dec
jae
sub
pop
mov
inc
dec
inc
inc
jb
jb
inc
ins
pop
or
bound
mov
and
jle
lods
or
mov
popa
push
or
je
jmp
inc
sub
jo
setae
sub
jb
add
add
dec
dec
inc
sub
pop
xchg
sbb
aas
sub
xchg
aas
outs
dec
jne
push
xchg
pop
sbb
dec
daa
mov
loopne
iret
pop
dec
adc
cmp
add
ins
pop
sub
adc
push
cmp
push
push
adc
sub
pop
pop
dec
in
lods
cmp
pop
jge
xor
or
or
mov
popf
daa
ss
in
movs
daa
lods
daa
xor
and
push
mov
loop
or
loop
pop
pop
arpl
inc
sbb
mov
imul
mov
cmp
pop
sbb
in
fiadd
and
repz
cwde
jmp
and
sbb
int3
imul
call
and
adc
pop
popf
pop
and
dec
jo
cdq
shr
jne
mov
int
sub
pop
xchg
push
movs
aas
pop
inc
lea
dec
pop
loope
data16
ja
pop
jb
mov
das
outs
dec
js
mov
inc
sub
sbb
imul
push
dec
mov
dec
lea
daa
xor
mov
pop
cmp
add
cld
jne
jne
enter
arpl
cmp
imul
test
and
and
and
jbe
pop
movs
imul
add
mov
pop
jg
movs
ins
pop
pop
dec
xchg
dec
dec
dec
in
inc
es
xor
movs
jmp
out
arpl
push
cmp
leave
test
cmp
cmp
push
pop
out
xor
push
jb
push
xor
xor
add
push
jb
add
inc
jb
push
add
gs
pushf
xchg
arpl
arpl
mov
xor
adc
mov
leave
sub
bound
inc
dec
add
and
and
(bad)
jle
popa
imul
xor
xor
xor
scas
outs
push
and
push
data16
mov
in
xor
es
add
jo
fcom
lahf
popa
xchg
or
inc
pop
ja
ja
addr16
cdq
sbb
das
inc
cs
or
xor
sbb
cs
or
xor
test
fistp
xor
aaa
xor
imul
cs
xor
cmp
xor
xor
scas
dec
pop
das
xor
lods
xor
xor
ss
dec
mov
ss
xchg
xchg
pushf
xor
xor
xor
mov
mov
inc
jo
adc
cmps
call
fidiv
das
xor
pop
mov
and
xor
inc
leave
arpl
das
xor
ja
mov
je
bound
push
mov
cmp
xor
(bad)
das
xor
pop
xor
xor
fld
stc
xor
jbe
xor
pop
xor
(bad)
sub
cmp
mov
repnz
xor
(bad)
pop
xor
(bad)
push
aaa
ss
pop
cmps
dec
dec
pop
pop
xor
es
push
enter
outs
outs
cmps
sti
add
ja
sub
outs
rcr
pop
jbe
xchg
adc
dec
mov
jb
stos
imul
xor
sub
js
adc
pop
movups
adc
add
nop
pop
jnp
dec
rcl
sahf
sbb
mov
pop
inc
out
mov
xor
xor
dec
in
stc
outs
je
pop
and
cmps
and
inc
add
rol
(bad)
and
pop
repz
xor
add
dec
and
fsub
inc
int
inc
add
imul
sub
pop
and
cmp
fwait
ds
sub
imul
lss
add
gs
pop
ror
or
ret
stos
jmp
and
mov
xor
mov
das
xor
push
or
addr16
shl
les
aas
push
aas
xor
cdq
fadd
push
mov
or
xor
mov
and
add
or
push
xchg
pusha
inc
or
ins
jae
push
dec
push
aad
test
push
push
cmp
fs
lds
jl
inc
cmp
dec
xlat
sub
arpl
sub
push
push
jne
rol
ja
mov
out
dec
push
dec
push
push
push
sub
sbb
mov
mov
repz
fs
jl
ins
inc
dec
inc
(bad)
mov
inc
cwde
sbb
jae
les
cmp
mov
mov
pop
dec
rol
ins
add
inc
js
in
and
cwde
aaa
inc
cwde
lods
lahf
cmp
push
daa
dec
add
shl
pusha
dec
mov
push
inc
jle
inc
and
xchg
mov
add
jne
je
push
lods
imul
fcom
xor
or
mov
cmp
push
sub
cmp
and
ins
jmp
cdq
mov
sub
in
rol
daa
lods
jge
pop
push
xor
inc
push
dec
out
push
mov
xor
hlt
das
test
lock
dec
push
(bad)
imul
mov
ins
fistp
xor
bound
retf
jo
fdiv
mov
dec
ins
mov
dec
sub
bound
fiadd
mov
pop
pop
jns
iret
adc
ja
sbb
push
inc
push
pop
ss
pop
aas
or
jmp
mov
aaa
fbld
sti
xor
add
fisubr
js
das
imul
aaa
adc
imul
push
jne
data16
inc
ret
es
push
push
mov
arpl
or
das
mov
push
sub
pop
mov
mov
jo
or
mov
pop
addr16
fimul
retf
je
ds
popf
jbe
or
mov
loop
pop
out
jmp
div
das
sub
and
add
ins
imul
jg
jge
mov
jge
retf
dec
fisttp
inc
(bad)
aaa
or
pop
adc
push
mov
aaa
outs
sahf
mov
inc
daa
jno
or
dec
dec
push
addr16
jl
inc
test
pop
ins
xor
cld
stos
das
jno
pop
or
rol
daa
add
sub
dec
mov
fisub
dec
dec
cmc
mov
pop
sub
jnp
dec
inc
rcr
jno
pop
xor
mul
inc
loope
fsubr
sub
sti
or
sbb
jno
les
mul
push
sbb
daa
outs
pusha
imul
push
add
xchg
cmp
dec
push
pop
sub
adc
mov
inc
rcl
inc
ds
js
repz
xor
push
pop
lahf
daa
inc
das
mov
dec
daa
dec
pop
test
dec
gs
pusha
dec
aad
arpl
cli
sub
das
dec
in
and
jno
rol
xchg
push
adc
hlt
dec
(bad)
gs
xchg
pop
and
push
scas
fs
or
fimul
iret
push
push
rcl
xchg
mov
push
push
pop
inc
pop
push
lahf
xlat
push
cmp
push
daa
leave
push
hlt
inc
stos
xlat
push
pop
leave
xchg
sbb
push
push
ss
or
inc
lock
lahf
inc
das
mov
push
fst
xlat
stos
addr16
mov
jnp
aas
xchg
(bad)
dec
cmps
(bad)
fimul
xchg
dec
repz
dec
das
and
dec
pusha
inc
inc
aam
dec
add
daa
(bad)
inc
jg
popa
push
add
mov
ss
out
xchg
lea
in
xchg
dec
dec
push
ins
inc
movs
in
and
xor
sbb
or
cmp
and
popa
sbb
dec
or
xchg
and
and
jne
and
and
or
cmp
fimul
(bad)
sub
popf
out
sub
or
ret
jo
out
ins
push
mov
data16
loopne
jecxz
push
inc
and
inc
aas
pop
js
test
push
add
dec
rcl
dec
(bad)
push
push
or
jb
fmul
fidiv
dec
push
xchg
lds
and
cdq
cmp
popa
js
repnz
imul
dec
gs
ds
push
inc
pop
xor
je
xchg
sub
fwait
xorps
push
dec
sbb
cmp
js
push
iret
(bad)
outs
enter
imul
loope
jo
jb
ins
outs
inc
mov
test
out
cmp
add
cmp
push
pop
jnp
xor
dec
dec
or
inc
outs
xchg
add
inc
adc
dec
adc
sbb
inc
mov
aaa
ja
ins
mov
dec
or
inc
adc
jbe
push
jg
(bad)
pusha
push
sar
cmps
cli
(bad)
fild
cmp
out
mov
ja
and
(bad)
push
lods
imul
cmp
push
aas
pop
retf
cmp
out
add
loop
push
pusha
ja
int
js
je
sub
jmp
popa
jbe
rol
xor
out
in
mov
aas
das
cld
add
push
fs
push
je
mov
push
xchg
xor
mov
dec
icebp
nop
sbb
sbb
push
sub
es
pop
sbb
pop
ins
jo
je
jmp
pop
pop
mov
push
mov
dec
jmp
push
stc
outs
inc
inc
xor
inc
lods
and
mov
nop
jae
xlat
es
call
push
and
or
mov
in
adc
or
movs
mov
or
adc
lock
inc
cmp
add
jae
add
xchg
lea
daa
mov
arpl
aas
jp
pop
test
dec
es
and
push
(bad)
sub
ins
fadd
xchg
push
cmp
push
test
iret
dec
push
mov
jb
mov
cmps
das
outs
dec
jb
adc
inc
arpl
dec
pusha
test
xchg
sbb
mov
das
outs
dec
lods
fwait
mov
daa
mov
das
mov
adc
ins
outs
leave
and
jne
movs
cmps
dec
cmps
add
push
cmps
adc
xchg
lock
xor
jns
and
daa
loopne
es
xor
mov
fadd
inc
pop
xor
adc
mov
push
adc
popa
ins
mov
out
and
sahf
mov
js
mov
dec
or
cs
push
sbb
push
sbb
xchg
inc
and
adc
adc
(bad)
add
sub
jb
xchg
or
rcl
cwde
xor
clc
mov
(bad)
aaa
push
inc
scas
in
icebp
and
dec
rol
ins
or
xor
mov
jno
or
mov
and
dec
aaa
sub
xchg
inc
mov
or
mov
nop
outs
add
pop
outs
mov
inc
jl
pop
cmp
push
dec
dec
push
fadd
addr16
div
call
daa
pop
daa
js
cmc
sub
cpuid
push
or
cmp
inc
ins
je
in
dec
leave
push
imul
js
pop
sar
test
fs
dec
inc
cmps
add
inc
push
and
fwait
and
and
xchg
push
xor
out
inc
add
test
je
jo
adc
xor
fild
inc
pop
inc
cmp
sub
and
(bad)
or
cmp
cmp
and
push
or
sub
fadd
cmps
sahf
mov
jae
sbb
cmp
adc
shl
fnstenv
inc
mov
inc
aam
push
test
mov
dec
fsub
fcmovnb
fcomp
into
inc
jb
or
mov
add
daa
add
and
sub
fdiv
scas
sahf
inc
push
xor
sar
nop
inc
push
and
icebp
mov
add
mov
xor
mov
dec
dec
xchg
shl
lea
es
dec
jno
xchg
imul
inc
xchg
aad
inc
in
idiv
pop
sub
or
pop
cmp
jno
mov
addr16
mov
das
mov
sbb
test
xchg
ins
or
cld
test
push
int3
aaa
nop
mov
pop
inc
xchg
jp
jae
imul
sub
cdq
test
or
pop
(bad)
sbb
test
xor
cmps
and
push
out
fwait
pop
ins
inc
xchg
add
loop
test
or
xor
pavgw
loopne
push
sbb
xor
fild
or
push
ss
std
sti
daa
addr16
dec
jnp
pop
enter
dec
jecxz
div
nop
fdivr
ret
fiadd
push
cmp
test
outs
dec
sub
mov
jg
in
xchg
jg
jae
sub
xor
frstor
je
add
cmp
add
popf
add
daa
ins
push
add
movs
out
or
shl
mov
fcomip
outs
sbb
mov
std
pop
ins
jmp
das
and
movs
sbb
ins
lds
pop
into
jg
pop
xor
daa
ins
data16
adc
in
inc
jae
inc
jle
sub
rcr
call
xor
mov
cmps
shl
sbb
aas
loopne
call
shr
popa
dec
inc
pusha
sub
out
movs
scas
xor
mov
(bad)
iret
das
std
arpl
jmp
test
das
xor
xor
inc
aas
das
push
jecxz
bound
push
push
push
imul
leave
mov
das
jno
shl
ss
jno
dec
and
ret
shl
aaa
add
movs
mov
cmp
daa
loope
pop
dec
popa
cmp
and
(bad)
movs
lahf
arpl
mov
and
ins
repnz
fadd
pop
xor
adc
pop
xor
add
lea
add
sahf
push
adc
adc
and
adc
adc
sub
aaa
inc
sbb
or
inc
fisttp
push
cli
dec
das
lods
div
addr16
inc
mov
(bad)
mov
das
bound
add
or
je
das
mov
inc
inc
(bad)
popa
popa
dec
lods
outs
sub
jae
mov
and
pop
push
clc
add
and
adc
mov
bound
fbstp
xchg
xor
adc
mov
push
pop
outs
arpl
dec
sbb
lahf
ret
xchg
int
xchg
xor
xor
sbb
stos
or
or
aaa
enter
add
pop
dec
retf
push
and
jle
sub
js
arpl
jb
data16
dec
dec
push
mov
lea
gs
pop
popa
pop
in
mov
ins
ret
scas
test
iret
cmp
sub
jo
aas
jno
iret
sbb
xor
xchg
adc
aad
push
scas
imul
rol
push
jno
fmul
sbb
pop
popa
mov
popa
in
and
aas
pop
imul
gs
call
jg
bnd
jae
jno
jno
imul
idiv
xor
int3
and
mov
jbe
das
cs
ficom
inc
dec
daa
mov
ins
ins
mov
mov
in
outs
add
ja
mov
pop
popa
(bad)
add
fsub
aaa
add
dec
stos
cmc
les
in
add
push
inc
mov
xor
xchg
push
bound
cmp
mov
aaa
mov
test
aas
mov
shl
outs
or
mov
lea
div
mov
jmp
je
adc
imul
je
hlt
and
and
addr16
les
mov
mov
ja
push
test
mov
sub
loope
jnp
pop
adc
aad
dec
mov
inc
lods
or
jbe
scas
(bad)
xor
push
or
addr16
inc
mov
mov
adc
cwde
xor
ins
xchg
jp
rol
jae
aaa
add
cmp
dec
or
add
(bad)
icebp
mov
lods
add
jno
aaa
xlat
mov
das
push
sub
daa
push
jo
(bad)
mov
xchg
jns
or
pop
(bad)
push
xchg
aad
mov
cmp
pminub
add
cmp
mov
jle
jg
cwde
pop
pop
nop
sub
mov
xlat
daa
shl
pop
arpl
inc
mov
rcl
pusha
(bad)
outs
pop
push
iret
ja
pushf
jl
not
push
or
jae
xor
push
jmp
xor
and
pop
(bad)
repnz
in
and
inc
jp
push
push
and
out
pusha
iret
jl
sub
xchg
xor
retf
or
fsubr
sub
pop
sbb
add
inc
inc
cdq
push
les
out
mov
dec
scas
rep
pop
sub
retf
das
scas
fs
test
or
ret
mov
jne
ja
sbb
dec
jo
cmp
jae
xchg
inc
inc
jne
lea
inc
cmp
out
inc
inc
loop
(bad)
fisub
mov
fld
sub
or
xlat
dec
xor
lds
mov
cmps
and
aaa
xchg
or
pusha
inc
mov
dec
and
mov
(bad)
sbb
or
in
adc
adc
sbb
test
mov
dec
or
xor
adc
or
xor
xor
push
inc
adc
(bad)
add
rcr
dec
and
ins
aaa
and
or
and
rcr
pusha
aam
adc
dec
js
scas
adc
adc
cmp
fimul
daa
imul
cwde
mov
and
mov
adc
xchg
cmp
pop
sub
mov
sahf
jb
sub
outs
xor
xor
xor
and
xor
call
push
inc
addr16
lods
test
fnstenv
cmp
pop
jmp
dec
xchg
rcr
rol
inc
dec
imul
dec
mov
lock
jno
pop
out
sub
adc
pushf
movs
push
dec
rcr
xchg
or
xchg
pop
loop
jp
jl
loopne
jns
stos
fdiv
in
stos
aas
adc
jbe
push
push
sub
dec
push
cmp
add
in
push
inc
inc
push
dec
mov
ins
lahf
or
pop
add
jo
dec
inc
push
dec
pop
adc
pusha
xor
or
xchg
add
ds
les
sbb
jbe
jne
sub
loopne
ds
and
loope
call
add
and
ss
sbb
bound
inc
adc
(bad)
addr16
out
xchg
mov
stc
push
jnp
fstp
push
imul
aam
sub
adc
pop
int
push
outs
adc
add
push
pop
jo
mov
inc
loope
movaps
cmp
fistp
inc
push
(bad)
add
shl
in
outs
pop
arpl
cmps
enter
inc
inc
bound
and
sbb
jl
(bad)
cmc
dec
and
jnp
pop
cmps
bound
inc
pop
das
xchg
rcr
push
mov
mov
fisub
push
(bad)
cmp
sub
fwait
stos
dec
cmp
xor
pop
rol
mov
jb
mov
arpl
xchg
cmp
retf
inc
bound
bound
pop
mov
das
loope
pop
pop
jne
lea
dec
xor
jo
dec
push
test
sbb
scas
jae
inc
push
fld
jecxz
test
push
adc
sub
addr16
outs
mov
dec
jns
inc
ds
xor
xor
cs
ins
lock
(bad)
push
inc
fld
cs
cmp
nop
jno
inc
imul
inc
push
ds
repnz
inc
bound
fild
lea
in
jno
lods
pop
mov
loopne
aad
outs
jge
rol
ss
daa
xchg
xchg
mov
aas
adc
inc
pop
stos
push
inc
mov
andnps
ja
and
sbb
out
popa
cmps
push
add
pop
popa
pop
lds
pop
stos
popf
and
out
sub
std
push
lds
or
inc
sbb
cmps
xchg
js
cmp
push
add
pop
(bad)
and
xchg
xor
sahf
inc
or
sbb
sbb
or
ins
sbb
and
sahf
cmps
xor
popa
pop
sbb
dec
push
(bad)
pusha
ins
dec
or
lahf
and
lahf
sub
cmps
daa
scas
mov
push
sbb
push
dec
into
mov
xchg
and
inc
sbb
or
outs
pop
xchg
mov
add
inc
xor
push
repnz
push
inc
xor
fisub
jg
pop
mov
(bad)
ja
mov
adc
sbb
add
add
add
lods
mov
cmp
mov
shl
arpl
cmp
aas
sbb
and
dec
adc
movs
adc
mov
(bad)
dec
loope
cwde
dec
jae
sbb
aas
xlat
mov
and
int
pop
jne
push
test
scas
fldenv
adc
and
inc
bound
pop
cmps
rcl
lods
(bad)
nop
cmp
psraw
mov
aad
push
es
lods
pop
lds
xchg
push
setg
sbb
xchg
fild
dec
xor
xor
xor
xor
xor
xor
or
arpl
shl
mov
pop
xor
pop
or
das
daa
pop
sbb
ud0
and
lock
in
fs
xchg
aaa
pusha
repz
mov
pusha
pop
and
push
scas
scas
out
inc
stc
lods
or
sub
mov
pop
xchg
sub
into
add
push
dec
push
loopne
fldenv
add
add
rol
into
ins
mov
aas
sbb
dec
bound
push
mov
cmp
dec
loope
out
pop
shr
inc
xor
inc
xchg
test
mov
xor
out
inc
sbb
ds
xor
xor
cmp
outs
add
dec
add
icebp
add
cdq
(bad)
fsubp
inc
in
inc
pop
or
mov
ret
xchg
adc
fs
mov
cmp
enter
syscall
add
or
add
add
add
add
pop
or
fmul
or
jns
mov
push
sbb
adc
add
fsub
push
inc
add
xchg
out
add
push
or
pop
pop
push
mov
cmp
jne
add
es
adc
mov
ret
outs
fist
lea
lgdtd
push
sbb
add
push
pop
lahf
mov
add
sub
prefetch
imul
or
adc
xchg
add
add
sbb
add
or
or
dec
shl
adc
adc
test
adc
and
push
enter
adc
bound
add
cmps
pop
sbb
add
sti
pop
push
idiv
inc
or
or
cmp
adc
sbb
xchg
or
xchg
test
leave
movs
inc
xor
and
xor
add
aam
mov
add
cmp
sub
push
or
ret
nop
fst
add
or
cmps
xor
sbb
gs
push
cmp
add
add
add
in
inc
add
fs
outs
adc
sbb
es
arpl
sbb
push
ret
mov
mov
(bad)
mov
xchg
packuswb
or
push
popa
push
inc
push
or
fdiv
jne
pop
ss
add
sub
mov
sbb
and
js
in
mov
mov
xchg
adc
adc
add
jb
and
add
and
cmps
dec
push
mov
adc
leave
add
add
scas
add
add
dec
es
add
add
cdq
fs
add
add
cdq
fs
dec
add
add
xchg
dec
add
or
or
or
dec
xor
or
xor
and
adc
xor
and
adc
push
leave
and
dec
pop
sbb
and
dec
xor
sbb
xchg
sbb
sbb
dec
xor
add
add
mov
leave
and
out
adc
add
es
add
add
mov
pop
add
or
add
xor
or
or
in
xor
or
add
add
leave
leave
leave
add
leave
pop
or
or
leave
leave
leave
or
fisttp
out
adc
add
add
add
xchg
xchg
add
add
mov
add
pushf
pushf
pushf
pushf
add
add
pushf
pushf
pushf
pushf
push
pop
or
pushf
pushf
pushf
pushf
or
or
xor
out
add
or
add
add
sbb
add
push
jnp
ins
sbb
lea
nop
xchg
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
xchg
xchg
xchg
xchg
or
movups
adc
adc
push
pop
sbb
add
xor
or
add
in
jbe
dec
or
or
in
in
or
or
or
jb
add
xor
jbe
cwde
add
nop
inc
push
add
push
nop
inc
push
sbb
or
loope
sbb
jo
mov
sub
je
fst
leave
outs
inc
out
out
mov
or
inc
fdivr
or
sub
add
adc
push
pop
sub
mov
add
xor
rcr
mov
push
sbb
fldpi
add
cmp
sbb
sbb
add
add
add
cmp
cmp
add
push
pop
in
mov
jno
sbb
push
sbb
cwde
push
adc
add
fs
inc
adc
inc
push
sbb
sub
sub
pop
jnp
loope
in
or
add
dec
fcomp
ret
pop
adc
add
pop
arpl
enter
add
pop
scas
inc
push
cmp
xchg
in
adc
adc
adc
in
add
add
in
inc
add
inc
push
or
or
or
inc
push
cmp
push
unpcklps
cmp
nop
adc
in
inc
sbb
sbb
nop
inc
push
sbb
push
cmp
cmp
sub
sub
cmp
nop
sub
nop
inc
xor
xor
nop
inc
push
xor
ss
cmp
int
stos
sub
add
and
add
add
sub
add
add
jnp
rol
push
add
cmp
repz
add
push
pop
repz
repz
or
or
repz
or
adc
repz
adc
cmp
repz
sbb
push
pop
and
and
cmp
repz
and
cmp
repz
sub
cs
xor
xor
cmp
repz
xor
cmp
repz
cmp
ds
inc
inc
inc
inc
cmp
repz
inc
inc
inc
dec
repz
repz
dec
dec
dec
dec
int
cmp
dec
dec
push
push
push
add
add
shr
pop
add
add
out
add
push
pop
or
rcr
pop
add
add
pop
out
add
pop
and
and
das
fsincos
sub
add
add
sbb
out
repz
add
push
push
and
add
scas
jnp
add
addr16
dec
arpl
adc
adc
ret
jmp
sbb
add
inc
push
adc
ror
or
jb
add
add
push
arpl
sbb
adc
scas
add
and
adc
cmp
cmp
add
push
cmp
cmp
pop
or
or
cmp
cmp
or
push
cmp
cmp
movups
adc
cmp
adc
call
push
test
test
pop
and
or
and
sub
add
cvtpi2ps
sbb
add
adc
es
shl
sub
push
pop
or
or
or
cld
lods
xor
add
sub
or
and
add
dec
dec
outs
bound
adc
dec
dec
sbb
pop
(bad)
mov
dec
mov
mov
lahf
retf
call
push
cmps
(bad)
and
cmps
js
or
push
jmp
enter
xor
popa
ja
nop
or
cmp
nop
sbb
rcl
mov
add
sub
lods
aad
push
or
es
popf
pushf
or
cmp
jmp
ja
xchg
sub
push
mov
sub
pop
cs
out
add
add
or
retf
in
mov
pop
data16
xchg
bound
add
ss
sub
sbb
add
add
fild
outs
and
popa
and
cdq
int
inc
and
cmps
and
fs
outs
and
and
mov
fs
adc
ret
adc
jo
and
xchg
setae
ins
jb
add
add
add
rol
ja
ror
xor
aam
add
adc
xor
shl
adc
push
pop
shl
sbb
push
pop
and
and
and
dec
shr
das
xor
xor
shl
mov
or
ins
nop
or
adc
or
enter
sbb
das
xor
mov
xchg
sbb
add
xchg
add
(bad)
adc
jl
fs
ds
cmp
add
jbe
add
sbb
add
push
fs
inc
push
pop
or
nop
inc
push
sbb
or
mov
add
bound
or
mov
add
push
push
jmp
push
xchg
(bad)
jns
xor
dec
add
daa
add
xchg
dec
mov
sbb
jmp
or
fwait
adc
pushf
push
call
push
add
ja
mov
push
add
jns
out
mov
dec
add
out
push
shl
mov
pop
test
daa
lds
inc
mov
add
jns
xchg
xlat
out
cs
adc
dec
repz
fimul
call
call
in
jns
les
out
mov
mov
xlat
popf
fstp
cs
jae
lahf
aam
adc
je
daa
cs
xor
or
daa
out
es
cs
push
cmp
jae
repnz
cmp
repnz
daa
adc
or
test
je
in
adc
cs
cld
cdq
push
pop
adc
ja
aaa
iret
sbb
lock
adc
jbe
das
(bad)
push
sub
in
dec
enter
dec
dec
sahf
out
test
ds
out
in
xchg
sbb
sahf
or
sbb
dec
js
iret
jae
jns
pop
pop
push
outs
daa
popa
das
pusha
pop
sbb
add
cmp
in
inc
fcom
adc
je
leave
jnp
iret
xor
and
add
push
pmulhuw
mov
and
jle
and
out
hlt
cwde
and
es
mov
sub
cs
fisttp
jae
iret
mov
lods
cmps
push
inc
iret
movs
sub
lock
sub
daa
daa
xchg
je
push
test
sub
xchg
xchg
out
(bad)
push
dec
sub
sahf
cmp
sub
mov
test
sbb
xor
fist
add
mov
cmp
mov
das
ret
cmp
call
daa
iret
jae
fdiv
enter
cmp
xor
daa
iret
mov
out
mov
aaa
out
add
clc
je
cmp
xchg
iret
pop
add
fdiv
iret
das
sbb
fsubrp
leave
leave
cmp
cld
xchg
dec
push
cmp
pop
xchg
test
sar
les
jae
cwde
aas
inc
mov
cs
(bad)
sbb
mov
iret
js
scas
sbb
cmp
in
in
inc
es
pop
dec
inc
xchg
neg
inc
jbe
cmp
xor
sbb
inc
cmp
xor
inc
inc
movzx
lds
das
fdiv
repnz
dec
push
mov
mov
cmp
jb
dec
bound
cs
leave
repz
pushf
imul
dec
dec
call
dec
jge
repnz
call
daa
daa
iret
jae
movs
dec
(bad)
cwde
mov
push
jg
pop
rep
jae
push
out
cwde
pop
ins
cs
repz
cmp
push
add
leave
leave
push
popf
adc
xchg
push
repnz
dec
mov
daa
iret
jae
mov
jb
cmp
and
daa
iret
jae
inc
pop
lods
xor
repnz
pop
scas
(bad)
xchg
out
not
push
pop
das
mov
cmp
sbb
das
les
imul
lods
jns
or
movs
pushf
pop
cmp
or
sahf
pop
in
cs
ret
pop
sbb
mov
pop
repnz
dec
scas
cmp
mov
(bad)
cmp
xchg
in
dec
outs
das
leave
and
gs
mov
int3
add
in
xchg
fidivr
dec
addr16
fnstsw
xchg
push
push
pop
shr
xor
dec
outs
pop
xlat
int3
pop
push
cmp
xchg
fcmovb
shr
mov
cmp
das
adc
iret
pushf
nop
ins
outs
cs
iret
test
ins
pusha
outs
out
jmp
jmp
mov
pop
repnz
mov
jb
outs
daa
movq
push
jae
(bad)
jo
sbb
xor
je
scas
mov
push
jne
add
jae
loopne
ds
ja
or
nop
push
js
das
nop
xor
sar
nop
nop
jns
nop
xor
nop
nop
jp
in
test
out
mov
repz
in
push
push
cmp
leave
push
inc
and
(bad)
rep
das
sbb
sbb
sub
pop
(bad)
popf
adc
cmp
scas
or
imul
das
fmul
mov
out
cmp
dec
nop
jl
sahf
xchg
xchg
test
pop
test
push
sub
or
cmp
and
mov
imul
ror
dec
enter
dec
dec
sahf
out
or
jns
mov
xchg
das
dec
sahf
fisttp
pushf
das
and
pop
cmp
cld
lea
js
xchg
fisttp
pop
repz
fbld
pop
dec
sahf
out
stos
das
xchg
jl
mov
in
dec
ins
dec
xchg
mov
cmp
enter
sar
xchg
rcl
mov
xchg
fdiv
pop
xchg
scas
out
pushf
pushf
cmp
adc
cwde
leave
repz
pushf
cld
mov
pop
lahf
add
dec
jo
fwait
sbb
pusha
pop
pushf
das
sub
push
loopne
in
push
popf
xor
xchg
out
inc
sahf
cmp
xor
iret
jae
repnz
inc
sub
mov
dec
mov
cmp
in
pop
das
sbb
mov
pushf
or
mov
dec
call
fmul
mov
or
mov
push
cmps
repnz
outs
cs
test
iret
jae
mov
test
daa
and
stos
popf
jbe
ins
fimul
cld
mov
mov
sahf
out
les
into
mov
das
mov
leave
leave
repz
mov
jmp
pop
hlt
cmp
mov
das
(bad)
mov
jns
mov
mov
sahf
out
aad
dec
mov
in
jns
inc
xor
sub
mov
sbb
sahf
out
scas
or
add
add
jo
jl
mov
iret
in
stos
ja
mov
int3
into
leave
repz
push
test
fsubr
call
das
mov
cmp
push
dec
pushf
pop
mov
pop
adc
pushf
cmp
leave
pop
test
pushf
je
shl
pushf
cmp
push
iret
leave
leave
repz
ret
dec
out
pushf
pushf
cmp
push
xor
cmp
in
stos
les
vpsllq
mov
clc
mov
(bad)
das
jl
xchg
out
fcomp
enter
jns
mov
sahf
xchg
xchg
out
retf
js
cmp
jns
test
fs
xchg
xchg
int3
mov
dec
int
out
cmp
jns
xchg
leave
and
iret
aam
xchg
out
or
rcr
jae
jmp
hlt
xchg
shr
jmp
shl
mov
repnz
mov
xchg
xchg
aam
add
push
fs
cmp
xchg
and
sub
xchg
out
xor
fdiv
cmp
jns
adc
fld
xchg
mov
pop
fisubr
dec
fcomp
iret
jae
repnz
mov
daa
arpl
jae
outs
jl
fidivr
repnz
pop
pop
fild
cmp
(bad)
and
repnz
loope
add
daa
daa
iret
add
movs
in
jne
in
pop
jecxz
mov
pop
in
out
mov
in
jns
xchg
(bad)
mov
out
fs
cmp
jns
inc
inc
call
xchg
out
jmp
pop
rol
jmp
in
jmp
or
jns
dec
adc
out
push
jl
out
sub
in
dec
pusha
pusha
out
xor
dec
sahf
out
dec
lock
sub
in
jns
icebp
dec
adc
dec
dec
sahf
adc
push
clc
add
iret
leave
lods
repz
pusha
loopne
hlt
leave
repz
pushf
imul
cmc
pushf
cmp
leave
jbe
mov
or
cwde
test
push
push
iret
jae
repnz
lods
sub
sti
repnz
daa
mov
popf
jns
ret
in
pop
std
das
into
in
jns
(bad)
(bad)
(bad)
(bad)
sahf
out
mov
xor
jns
add
out
js
repnz
je
or
push
push
pusha
sahf
xchg
xchg
out
add
pop
pop
out
cmp
adc
jns
xchg
xchg
add
xchg
out
cmp
inc
inc
pop
cmp
xchg
and
xchg
xchg
out
xor
or
cmp
jns
sub
or
and
or
sbb
cmp
dec
add
add
in
in
dec
das
call
out
mov
(bad)
jns
xchg
pop
mov
xchg
out
lods
lods
adc
cmp
mov
sahf
xchg
xchg
out
adc
jo
cmp
jns
xchg
sahf
xchg
xchg
adc
xchg
out
cmp
in
xchg
lahf
adc
sbb
clc
add
das
scas
in
iret
leave
leave
repz
sbb
pushf
cmp
mov
leave
leave
sbb
shl
iret
mov
iret
leave
xlat
nop
nop
pop
(bad)
leave
repz
add
iret
je
and
pusha
iret
leave
leave
repz
and
dec
dec
repz
pushf
cmp
push
xor
push
loopne
and
movs
aas
daa
cs
xchg
xchg
and
fistp
cmp
hlt
jg
push
daa
das
cmp
xchg
pop
fmul
sub
xchg
xchg
out
les
sahf
test
sub
nop
sahf
xchg
xchg
out
sub
js
out
cmp
inc
pusha
pusha
jns
xchg
xchg
sub
xchg
out
cmp
xor
cmp
xchg
pop
sbb
xor
xchg
out
add
xor
jb
int3
in
pop
xor
ja
cmp
daa
iret
int3
xor
mov
jae
repnz
mov
daa
daa
(bad)
daa
iret
jae
xchg
jo
aaa
lahf
jb
cmp
pop
pop
cmp
dec
dec
cmp
cmp
cmp
iret
sub
or
iret
adc
lock
out
(bad)
pop
cmp
ds
dec
dec
fidivr
out
jecxz
pushf
inc
in
in
jns
test
out
jo
(bad)
pusha
cdq
or
iret
movs
das
dec
sahf
xchg
xchg
out
inc
sysenter
xor
cmp
jns
pop
and
jns
xchg
xchg
inc
pop
adc
inc
mov
cmp
daa
clc
jl
dec
das
das
jb
cmp
loopne
dec
aaa
daa
daa
iret
jae
int3
dec
aas
mov
jb
cmp
dec
inc
mov
mov
iret
jae
repnz
push
jo
dec
repnz
daa
pop
pop
pop
dec
daa
iret
jae
addr16
dec
push
outs
jb
cmp
xor
push
ja
sbb
aas
jg
dec
call
in
cdq
jnp
push
das
(bad)
dec
sahf
call
sahf
out
in
lahf
rol
in
dec
dec
cmps
test
pop
aaa
je
in
nop
pop
pop
aas
mov
xor
and
pop
mov
jnp
pop
(bad)
dec
outs
out
or
aaa
das
iret
xor
in
jns
pop
xlat
add
pop
and
fistp
repnz
out
jp
dec
outs
popf
pop
popa
das
out
rcl
sahf
out
in
idiv
dec
dec
jmp
xor
pop
cmps
nop
nop
gs
daa
test
jae
ins
addr16
pusha
jae
repnz
push
daa
iret
push
imul
jb
push
sub
imul
daa
daa
aas
adc
imul
mov
hlt
jns
push
ins
pslld
mov
das
fmul
outs
pop
daa
daa
iret
jae
mov
jb
cmp
jo
and
pushf
pushf
cmp
jno
pusha
dec
cmp
leave
leave
jb
cmp
jae
stc
pushf
pushf
test
js
outs
fld
pop
jne
xchg
in
jns
in
in
jbe
dec
dec
sahf
out
aam
test
mov
add
dec
sahf
xlat
pop
push
pop
jns
add
out
jns
jp
add
repz
mov
repz
jl
sahf
xchg
out
jge
shr
fsubr
js
pop
ret
das
push
dec
cmp
leave
leave
jg
cmp
or
pushf
pushf
retf
and
sbb
shr
ja
ja
xlat
daa
daa
iret
jae
call
fdiv
cmp
test
fisttp
(bad)
into
ja
xchg
in
mov
jns
out
xchg
in
pushf
dec
xchg
xchg
out
mov
cmp
mov
rcr
fwait
js
pop
push
mov
cmps
dec
outs
daa
iret
xor
mov
dec
jae
jns
push
xor
fwait
mov
das
adc
jbe
cmp
imul
(bad)
and
pop
nop
leave
repz
pop
sub
enter
cmp
leave
sub
test
pushf
js
xchg
xor
sete
push
xchg
push
ja
sbb
xor
xchg
xchg
out
ins
aas
das
sbb
xchg
cmp
xchg
inc
or
cwde
dec
fild
cdq
outs
das
daa
daa
iret
jae
lock
in
pop
fdivr
daa
iret
fcomp
jb
popf
outs
rol
repnz
daa
ja
mov
or
pop
mov
mov
das
pushf
mov
fsubr
jl
mov
cld
adc
adc
mov
cmp
test
xchg
xchg
movs
mov
sbb
xchg
out
cmp
call
je
int
in
dec
loopne
test
out
mov
jo
sahf
or
sahf
xchg
xchg
mul
cwde
lods
icebp
mov
lods
cli
ins
push
sahf
mul
add
imul
das
or
jae
leave
sar
or
repz
leave
adc
mov
add
neg
leave
sbb
sbb
out
jmp
lods
pop
mov
pop
das
movs
ja
ja
pop
mov
es
nop
pop
sahf
out
inc
mov
cs
js
mov
jns
dec
aaa
fs
inc
pop
pop
mov
dec
dec
dec
mov
jns
sub
mov
out
and
jns
mov
dec
sahf
or
jp
add
repz
mov
ror
pushf
fsubr
mov
call
leave
cwde
fcomp
ret
leave
repz
int3
int3
ret
lods
pushf
pushf
cmp
mov
iret
leave
leave
repz
rcl
(bad)
retf
cmp
leave
leave
(bad)
aam
jo
leave
repz
pushf
ficomp
pushf
cmp
leave
call
leave
leave
repz
cmp
retf
cld
inc
sahf
cmp
xor
int3
push
test
jns
int
or
dec
dec
sahf
or
sbb
jno
cmp
leave
lods
iret
das
and
hlt
ror
repz
pushf
cs
iret
leave
cmp
loopne
inc
leave
leave
repz
fcomp
ror
cmp
(bad)
(bad)
aam
mov
leave
leave
repz
pusha
movs
movs
repz
pushf
cmp
push
xchg
jmp
leave
leave
xlat
je
pop
fsubr
daa
iret
jae
jle
ins
(bad)
pusha
pusha
ficom
push
push
fistp
cmp
cmps
sub
daa
daa
iret
sub
mov
and
jae
repnz
sahf
xchg
sub
les
add
pop
addr16
cmp
jo
loope
cmp
xchg
fsubr
call
out
(bad)
jecxz
cmp
jns
enter
mov
mov
movs
repz
pushf
cmp
or
out
jl
call
push
fs
sub
jmp
cmp
cmp
pushf
cmp
sub
in
inc
adc
leave
leave
repz
push
add
addr16
pushf
cmp
pop
hlt
outs
pop
jns
xchg
pop
out
das
fs
lock
out
cmp
enter
sahf
xchg
js
mov
adc
repz
in
popf
nop
pop
hlt
das
xchg
mov
dec
sahf
mov
mov
in
imul
out
jns
mov
inc
clc
sahf
out
jns
mov
xor
sahf
out
jns
mov
jns
dec
ret
sti
lods
xor
pop
enter
cld
das
cs
pop
std
pop
(bad)
retf
leave
repz
int3
int3
(bad)
fldcw
fwait
bound
les
push
mov
add
cwde
mov
add
jl
add
jns
xchg
loope
pop
add
xchg
xchg
out
push
push
add
cmp
jns
inc
sub
jmp
push
in
adc
sahf
xchg
out
pop
add
add
into
cmp
jns
hlt
lock
pop
repnz
mov
das
clc
loopne
or
iret
jae
cld
aam
or
cmp
xchg
stos
(bad)
les
xchg
xchg
out
lods
lods
or
sahf
pushf
pushf
push
or
sahf
xchg
xchg
out
movups
cmp
jns
adc
push
jns
xchg
xchg
adc
inc
inc
adc
sub
adc
jns
xchg
and
adc
xchg
xchg
out
or
adc
int3
clc
ins
pop
push
das
sub
cmp
daa
iret
in
xor
ror
jae
repnz
mov
daa
cmp
jae
cmp
xchg
sbb
repnz
jl
sbb
daa
daa
iret
jae
push
jb
cmp
push
dec
cmp
daa
daa
iret
cmp
push
sub
iret
jae
repnz
and
cmp
daa
pop
add
and
jns
pop
lock
das
pusha
in
jns
(bad)
and
dec
dec
sahf
out
enter
out
in
mov
ins
mov
mov
sahf
out
in
je
js
in
dec
dec
js
pusha
sub
out
jl
dec
sub
xor
sub
dec
dec
sahf
out
and
inc
ja
cs
mov
daa
mov
pop
das
das
nop
fcomp
iret
jae
repnz
daa
daa
cwde
lods
lods
xor
iret
jae
pushf
cwde
cwde
xor
test
jae
jo
test
jae
repnz
lods
dec
pop
nop
sbb
mov
jae
repnz
nop
fwait
out
mov
cdq
inc
dec
mov
dec
sahf
out
shl
cmp
in
jns
rcl
cmp
out
mov
in
jns
aas
rcl
nop
inc
aam
jl
out
in
fsubr
inc
inc
ja
dec
fcom
inc
leave
jae
cs
loopne
cs
pushf
cmp
leave
in
sub
call
sbb
inc
in
sahf
pushf
cmp
or
inc
lock
push
pop
dec
das
hlt
loopne
out
cmp
clc
int3
int3
jns
xchg
xchg
dec
cld
mov
mov
lods
movs
movs
dec
pushf
cmp
leave
add
nop
dec
or
leave
repz
js
dec
or
pushf
cmp
fs
adc
daa
iret
mov
push
adc
xor
jae
repnz
sbb
and
cmp
daa
sbb
or
outs
popf
jns
and
addr16
push
das
and
in
dec
in
push
sub
sahf
out
enter
out
in
lods
push
xor
nop
pop
xor
ins
sahf
out
in
cmp
in
dec
dec
cmp
xor
sahf
out
inc
and
pop
inc
in
jns
adc
pop
dec
daa
daa
int
add
pop
dec
fdivr
cmp
data16
enter
out
pusha
push
mov
out
cmp
pop
mov
xchg
bound
arpl
je
fs
cmp
enter
gs
push
push
data16
cmp
jns
xor
addr16
sahf
xchg
xchg
out
push
cmp
jns
js
gs
repnz
mov
das
jl
fsubr
iret
jae
or
ins
test
cmp
mov
daa
iret
jae
test
je
jb
cmp
outs
nop
dec
jae
cmp
dec
jo
xchg
cmp
daa
daa
iret
cmp
cdq
sub
iret
jae
bnd
adc
jae
cdq
daa
daa
mov
das
dec
sahf
out
test
call
jns
aam
jbe
in
sahf
out
lods
ja
mov
dec
sahf
out
mov
je
in
jns
jns
dec
jns
dec
sahf
xor
leave
and
addr16
in
iret
pop
arpl
sahf
out
inc
jl
aad
loopne
jge
jns
dec
fld
les
sahf
out
fnsave
jns
movs
movs
and
dec
sahf
out
mov
inc
ja
cmp
das
jo
in
sahf
or
dec
out
jns
dec
test
cli
inc
das
xor
cmp
add
cs
loope
cmp
add
bound
adc
mov
add
lods
es
mov
in
or
daa
mov
js
mov
pop
cs
mov
sahf
out
sahf
sub
icebp
inc
clc
popa
scas
push
mov
out
sahf
out
enter
out
sahf
mov
movs
cwde
xchg
inc
sahf
out
mov
out
sahf
out
pop
xchg
push
cmp
sahf
inc
xchg
push
add
xor
cmp
daa
iret
xor
sbb
ds
iret
repz
pop
push
sbb
pusha
imul
and
sahf
out
in
sub
jns
dec
xor
cmp
fstp
inc
jbe
jl
fs
jle
pushf
dec
das
dec
dec
sahf
out
sub
in
add
pop
clc
pop
inc
dec
outs
out
pop
push
lahf
das
arpl
repnz
(bad)
fsubr
mov
daa
iret
shl
cs
leave
leave
mov
mov
cwde
pop
movs
outs
outs
call
mov
movs
setno
repz
test
repz
jl
cmps
xchg
das
pop
(bad)
popf
pusha
pop
test
cdq
pop
pop
out
repnz
test
dec
dec
sahf
push
stos
stos
dec
dec
cmp
in
in
mov
cmp
lods
xchg
out
popf
mov
cmp
xchg
les
scas
int3
xchg
xchg
out
sbb
scas
aam
cmp
or
mov
add
xchg
xchg
out
mov
hlt
pop
iret
jae
jmp
mov
in
call
daa
daa
hlt
(bad)
mov
iret
jae
cld
rcl
mov
cmp
xchg
scas
(bad)
les
cmp
in
popf
lods
pop
mov
dec
dec
sahf
mov
sahf
out
in
sub
mov
xor
jl
dec
sahf
out
cmp
jo
inc
in
jns
fs
out
pop
mov
out
dec
rol
jns
shl
dec
dec
sahf
xor
data16
sahf
out
in
imul
in
dec
dec
jo
adc
dec
sahf
out
jne
add
jp
lods
xor
pop
pop
(bad)
das
jg
pushf
cmp
in
in
enter
leave
leave
repz
mov
aam
popf
pushf
cmp
mov
xchg
retf
repnz
daa
xchg
mov
jae
cwde
mov
int
jb
cmp
movs
movs
into
mov
cwde
cwde
iret
cmps
mov
repnz
shr
adc
je
iret
jae
repnz
cmp
daa
mov
iret
jae
rcl
lds
cmp
inc
inc
(bad)
retf
iret
jae
cmp
iret
sub
jb
cmp
fcom
and
daa
iret
and
fst
iret
jae
repnz
or
fcmovnbe
cdq
daa
daa
jecxz
pop
pop
fsubr
dec
sahf
out
call
in
jns
in
fdivp
dec
dec
sahf
out
int3
fcomip
mov
in
jns
loopne
pushf
cmp
dec
sahf
pushf
loope
scas
test
push
ins
ins
jecxz
cmp
daa
or
daa
iret
jae
adc
in
jb
cmp
and
out
daa
daa
iret
jae
or
pop
hlt
out
(bad)
cdq
pop
pop
call
dec
dec
sahf
fsubr
sub
mov
jmp
sahf
out
add
and
in
xor
jns
pop
fistp
xor
cmp
sub
and
out
or
or
pop
cs
dec
lock
loopne
in
icebp
iret
cmp
dec
jg
cs
repz
cmp
test
repz
cmp
leave
popa
sub
leave
repz
pop
inc
cmc
jno
pushf
cmp
xor
jns
pop
adc
or
int3
push
clc
fistp
sahf
out
nop
jl
out
sahf
out
push
sti
inc
sahf
out
sahf
sub
sbb
lock
out
push
dec
jns
leave
mov
cs
xchg
leave
enter
mov
add
jo
add
mov
xor
movs
clc
push
adc
outs
out
out
push
add
cmps
add
pop
int3
add
dec
lds
rol
fidiv
mov
enter
mov
pushf
es
cs
cmp
jns
test
enter
xchg
out
or
push
dec
out
cmp
fdiv
repz
push
or
adc
push
mov
jmp
xchg
out
fisttp
adc
jns
xchg
cli
movs
movs
adc
pushf
cmp
enter
mov
or
jl
adc
sbb
ins
out
in
ins
adc
dec
sahf
pop
push
sub
dec
sahf
out
pop
xor
pop
out
in
sbb
sbb
jle
in
outs
daa
inc
das
add
sbb
cmp
in
lock
pop
sbb
push
leave
leave
repz
(bad)
sbb
pushf
pushf
cmp
rcl
sbb
leave
repz
mov
repz
pushf
cmp
jno
mov
and
nop
and
add
aas
pushf
cmp
in
mov
jo
and
fs
and
fwait
das
leave
repz
pop
pop
and
cmp
dec
dec
cmps
vpmacsswd
push
inc
daa
mov
inc
sub
mov
(bad)
movs
iret
jae
jnp
sub
nop
jl
repnz
sub
jae
ret
enter
leave
in
jns
push
inc
sub
out
pop
add
(bad)
or
leave
imul
pop
das
aad
es
dec
fiadd
xor
lock
fcom
cmp
imul
popf
xchg
xchg
xor
mov
xor
in
das
push
sahf
xchg
hlt
dec
dec
xor
cmp
add
add
aaa
or
push
sahf
xchg
pop
addr16
cmp
adc
cmp
mov
push
fs
xor
cmp
jns
xchg
sub
add
xor
mov
cmp
push
pop
ds
cmp
mov
daa
daa
iret
nop
inc
dec
push
repnz
dec
inc
push
cs
leave
repz
pushf
push
sbb
inc
mov
lock
pop
inc
das
fs
xchg
out
enter
cmp
jns
mov
sahf
xchg
xchg
out
inc
jns
pop
out
cmp
xor
rcr
or
dec
lods
xor
pop
dec
das
pushf
cmp
leave
xchg
mov
dec
pushf
leave
leave
repz
pushf
pushf
dec
mov
test
leave
repz
mov
pop
repz
pushf
cmp
mov
jbe
push
(bad)
mov
push
jns
daa
daa
(bad)
lock
aam
xchg
out
cmp
lods
jl
jb
sahf
xchg
xlat
push
and
lods
jb
dec
cs
out
jnp
aad
les
push
scas
mov
popf
cmp
pop
or
xchg
cs
jns
pop
add
fs
mov
daa
sti
pop
inc
inc
pop
dec
sahf
test
das
sub
pop
push
in
jns
sbb
pop
or
sahf
out
or
or
dec
iret
leave
lods
xor
pop
das
pavgb
repz
pushf
cmp
adc
aam
iret
leave
leave
popa
adc
repz
pushf
sbb
leave
sbb
leave
repz
js
and
repnz
data16
cmp
daa
iret
dec
addr16
xor
iret
jae
repnz
repnz
daa
sub
popf
jns
xor
dec
pop
imul
in
jns
hlt
hlt
ins
ss
dec
sahf
out
in
cmp
out
in
fsubr
int3
jns
dec
sahf
int3
outs
aas
mov
in
inc
lods
lods
jno
jns
dec
inc
xchg
xchg
jb
sahf
out
dec
js
jae
in
jns
pusha
pusha
je
dec
dec
sahf
out
dec
jne
cmp
in
jns
jbe
and
dec
dec
sahf
and
push
adc
aam
xchg
pop
js
pop
add
jns
xor
pop
jp
pushf
cmp
leave
pusha
(bad)
jnp
leave
leave
repz
aam
jl
leave
repz
(bad)
les
imul
mov
dec
out
aad
push
cs
je
cwde
repz
pushf
mov
js
cmp
leave
leave
add
dec
inc
sbb
test
test
test
outs
adc
xchg
or
pop
xchg
mov
cmp
mov
int3
sar
jns
mov
mov
rcr
lahf
lds
or
ins
(bad)
fistp
sahf
and
mov
out
iret
in
in
xor
adc
pushf
cmp
repz
fstp
jae
add
dec
pop
and
dec
fsubr
xchg
inc
sahf
out
xchg
rcl
nop
pop
xchg
jl
sar
cs
ins
es
push
xchg
dec
call
dec
inc
dec
cwde
cmp
bnd
add
xchg
out
popf
or
and
call
adc
push
xchg
xchg
out
add
pushf
daa
jae
jmp
hlt
inc
pop
popf
das
xor
cmp
daa
iret
in
cmp
aam
jae
repnz
inc
(bad)
les
dec
mov
mov
push
movs
movs
mov
daa
xchg
xchg
mov
jae
pop
movs
das
outs
je
leave
leave
repz
js
fs
pushf
cmp
sbb
cmps
mov
sub
xchg
add
test
cmp
loopne
pop
stos
das
cmp
xchg
mov
xchg
xchg
out
cwde
cwde
lods
scas
into
in
(bad)
popf
jo
lods
out
mov
inc
cmp
fucomp
pop
scas
mov
jns
repnz
ret
in
inc
pop
mov
jns
outs
das
leave
rol
adc
in
mov
mov
jae
jne
movs
es
mov
fs
(bad)
addr16
je
mov
jns
test
mov
out
mov
mov
or
cmp
imul
leave
leave
sar
sahf
pushf
cmp
xrelease
fdiv
imul
fisubr
or
shl
adc
popa
pusha
xor
ja
or
(bad)
dec
mov
xlat
imul
scas
cmps
push
or
repz
xchg
mov
test
and
push
cmps
test
stos
sub
pop
scas
pop
pop
(bad)
mov
xchg
dec
jecxz
xchg
push
pop
imul
pop
push
out
add
out
sahf
out
sti
repnz
lock
out
sahf
idiv
cld
repz
imul
xor
or
imul
cmp
or
jg
es
stc
mov
fcomip
ds
push
push
nop
xchg
push
sbb
xor
sub
and
iret
repz
xchg
add
or
je
out
fimul
cs
inc
sub
push
or
or
(bad)
and
push
and
mov
jmp
lahf
mov
add
sub
xchg
(bad)
xor
sahf
test
lock
push
adc
out
(bad)
hlt
cmp
jnp
scas
sahf
out
sahf
out
push
test
or
push
mov
repnz
xor
xchg
and
test
imul
scas
push
cmps
mov
jns
sub
push
cmp
jne
mov
dec
mov
ins
jg
push
push
out
inc
jae
add
sahf
jle
sar
push
or
or
add
jns
out
add
xchg
out
push
push
adc
retf
jmp
and
push
jp
push
repz
out
mov
push
pop
iret
repz
lea
jo
imul
loope
xchg
inc
out
lahf
ror
xchg
in
in
push
iret
bound
push
out
jns
out
es
fwait
pushf
out
sahf
out
sahf
lahf
mov
sahf
mov
out
out
iret
repz
pop
mov
push
mov
sahf
lods
lods
scas
scas
mov
jns
out
mov
out
sahf
out
mov
mov
sbb
jecxz
mov
and
push
sub
sub
add
push
adc
and
addr16
push
sahf
out
iret
je
push
and
dec
repz
hlt
add
out
mov
sahf
out
xchg
data16
xchg
out
addr16
iret
sti
shr
scas
push
mov
test
cmp
repz
(bad)
in
out
add
addr16
iret
repz
push
xlat
push
aam
test
adc
cmp
mov
out
(bad)
mov
pop
push
sbb
push
sbb
inc
iret
repz
xor
jae
and
test
out
sub
jle
ss
push
pop
(bad)
int
jmp
push
sahf
out
sahf
push
sub
jae
dec
and
push
pop
fisub
cmp
jnp
and
push
scas
mov
jns
iret
repz
jns
push
bswap
repz
cmp
cmp
cmp
cmp
cmp
xor
push
repz
repz
dec
dec
dec
dec
iret
repz
push
inc
xor
inc
cmp
repz
inc
inc
inc
aas
repz
repz
dec
dec
push
xor
cmp
ss
out
cmp
push
sub
aaa
push
sahf
out
sahf
bound
data16
mov
sahf
adc
or
adc
repz
xchg
add
out
jns
jnp
push
inc
inc
mov
ds
imul
add
push
push
dec
push
mov
dec
push
dec
push
pop
push
out
retf
dec
push
pop
pop
sahf
out
sahf
push
dec
push
push
push
dec
idiv
ficomp
jns
sti
add
sub
das
jns
out
sub
xor
cmp
jns
out
xor
and
ficom
cmps
cmp
repz
shr
sahf
adc
push
pop
addr16
or
stc
js
out
pusha
popa
pop
pop
xchg
pop
cmp
pop
inc
cs
add
repnz
push
xchg
add
test
xchg
xchg
scas
das
dec
add
movs
push
cmp
out
sahf
cmps
cmp
ds
sahf
cmp
inc
inc
scas
iret
repz
repnz
push
fcmovu
lock
repz
(bad)
call
repz
in
jmp
in
out
loop
in
iret
repz
(bad)
fcom
aad
cmp
repz
fnstsw
loope
iret
repz
repz
cmc
icebp
repnz
repz
sar
sar
cmp
repz
iret
int
add
cmp
mov
add
int3
ret
sahf
ja
inc
pop
std
(bad)
sti
cld
jns
out
(bad)
mov
jns
out
enter
cmps
repz
ret
movs
add
loope
mov
in
add
in
cmp
daa
sub
pop
sub
cmp
ss
push
cs
popf
push
loopne
push
in
sbb
shl
sub
sub
idiv
cli
sub
in
stc
call
out
push
mov
jp
sub
loope
lods
add
iret
sbb
ss
scas
push
dec
cmp
repz
inc
dec
cmp
push
push
mov
jns
jbe
jmp
lds
movs
out
jmp
iret
repz
push
out
rcr
mov
jns
out
mov
enter
xchg
sbb
mov
dec
push
mov
adc
sbb
pop
sbb
cmps
stc
dec
rcl
pop
out
imul
out
scas
xchg
xor
cdq
call
popf
sahf
lahf
or
jbe
(bad)
sahf
mov
xchg
out
push
leave
ret
shl
mov
aaa
out
push
mov
iret
loop
sahf
cmps
jmp
and
neg
fcomp
ret
sahf
out
(bad)
(bad)
enter
out
retf
call
jle
push
iret
sar
repz
rcl
aam
repz
repz
xlat
fcomp
fisub
(bad)
fiadd
outs
jle
outs
out
outs
test
push
jno
add
xchg
out
sahf
jle
jl
xor
add
cmp
pop
jo
ja
je
iret
repz
jne
jnp
repz
repz
jae
outs
iret
repz
imul
imul
pusha
bound
cmp
repz
fs
cmp
repz
repz
cmp
sbb
repz
adc
adc
inc
cmp
repz
pop
cmp
iret
repz
das
push
push
iret
repz
push
inc
inc
and
and
repz
inc
dec
and
cmp
repz
iret
repz
aas
sbb
xor
iret
repz
xor
push
dec
repz
repz
es
sub
cmp
dec
dec
sub
sub
iret
repz
push
xor
pop
repz
repz
sub
or
repz
adc
or
iret
repz
push
xor
mov
pop
pop
pop
shr
repz
(bad)
lock
adc
ficom
repz
push
jp
push
sahf
test
popa
retf
sbb
xor
cmps
sbb
cmps
(bad)
push
cmps
mov
test
xor
js
inc
cs
jne
push
cmps
out
sahf
out
out
jmp
sahf
loope
jecxz
in
lods
sahf
adc
not
push
mov
test
out
mov
xchg
mov
mov
out
jle
cmp
sahf
es
je
xor
ror
push
push
xor
dec
shr
xor
xor
test
sub
aas
mov
add
mov
pop
loopne
into
test
mov
mov
jo
iret
mov
movs
xchg
inc
(bad)
dec
call
mov
pop
and
jb
ja
pop
sbb
jne
mov
ss
sbb
mov
mov
push
aas
and
mov
mov
scas
and
call
push
xchg
outs
sbb
push
dec
lea
mov
outs
mov
fadd
push
jbe
test
mov
aas
(bad)
shl
stos
inc
cmp
cmps
pop
pop
cmc
je
inc
push
dec
push
dec
xor
sbb
pop
push
push
mov
sbb
sub
xor
mov
and
test
js
jb
xchg
push
mov
movs
push
xlat
xchg
push
movs
inc
xchg
cmps
xor
xor
dec
cmp
push
movs
mov
xchg
push
xchg
xchg
dec
pop
aad
pop
inc
or
xchg
bound
out
mov
imul
inc
addr16
sbb
dec
aas
outs
inc
movs
xchg
xchg
inc
js
cmp
ficomp
pop
ja
std
add
movs
adc
or
push
idiv
push
adc
sub
inc
fbstp
rcl
dec
mov
sbb
add
pop
add
dec
mov
pop
pop
fadd
mov
xchg
outs
push
imul
inc
xchg
cmp
add
xor
inc
jb
dec
add
mov
inc
jb
xlat
aam
pop
add
(bad)
xchg
xchg
pop
cmps
xor
xchg
push
and
jecxz
fidivr
into
sbb
inc
xchg
jmp
cmps
inc
test
test
xchg
rol
ror
nop
xchg
push
xchg
dec
sub
mov
mov
dec
ds
push
shr
inc
push
inc
jae
sahf
int3
jne
and
mov
mov
daa
jl
mov
add
and
shl
sar
dec
xchg
ja
sub
jae
cmps
dec
jae
mov
ins
call
sub
mov
add
add
cmps
add
and
mov
inc
mov
cwde
inc
ja
mov
jnp
mov
or
imul
ror
(bad)
mov
inc
movs
mov
jo
dec
sub
push
scas
dec
movs
psubusb
not
scas
imul
add
pop
xchg
scas
inc
xchg
inc
pop
pop
pusha
outs
arpl
mov
cmp
fild
imul
iret
rep
outs
jo
jb
cmps
adc
jae
out
or
das
scas
jno
add
cs
mov
jg
jl
sbb
out
mov
pop
push
xchg
push
dec
shr
sub
add
neg
cli
rol
mov
xor
xlat
mov
fnsave
aaa
add
iret
fcomp
outs
sbb
test
lahf
js
xchg
es
dec
adc
pusha
fwait
outs
cmp
div
aas
or
out
mov
jg
dec
jmp
jmp
push
push
cmps
jmp
jmp
sbb
sbb
sub
scas
jmp
push
mov
push
cs
mov
cmps
xor
adc
xchg
cmp
xchg
add
xlat
inc
mov
cmp
ja
dec
add
scas
jne
(bad)
dec
dec
pop
xchg
cmp
push
push
push
push
scas
dec
call
ja
rcl
xchg
ins
outs
xor
shl
pop
pusha
popa
bound
dec
shl
xlat
imul
push
add
push
sahf
xchg
jle
add
push
jae
xchg
dec
push
jle
mov
sub
pop
(bad)
aaa
sub
add
scas
scas
inc
fadd
das
aaa
popa
adc
addr16
lds
or
retf
push
cmps
(bad)
push
sbb
dec
aas
aaa
push
test
jno
jns
xor
je
jbe
mov
sahf
sbb
imul
add
imul
mov
add
add
cmp
mov
xchg
xchg
add
ja
jnp
shl
xor
daa
aaa
cmove
mov
(bad)
aas
pop
xchg
and
inc
inc
cld
dec
movs
mov
je
dec
int
sahf
push
jbe
mov
das
sbb
pop
add
jae
adc
cmps
add
pop
xchg
or
or
sti
sbb
mul
fcomip
(bad)
cwde
inc
mov
(bad)
cmps
add
mov
mov
bound
(bad)
not
dec
mov
js
push
cmps
data16
test
(bad)
loop
lds
mov
jmp
sub
add
mov
inc
fisttp
xchg
mov
adc
sbb
sbb
mov
xchg
cmps
pop
cmps
sbb
outs
int
and
and
fadd
add
and
inc
imul
test
mov
xor
push
data16
sub
cs
xor
xchg
xor
xchg
cmps
sbb
aaa
cmp
shl
inc
inc
inc
imul
push
dec
dec
cmps
imul
imul
dec
pop
push
pop
dec
xor
je
pop
pop
mov
xor
(bad)
xlat
push
dec
cwde
(bad)
cdq
fwait
pop
mov
mov
aaa
call
mov
jb
adc
(bad)
les
das
xor
add
iret
mov
cmp
cmp
mov
mov
or
test
sub
mov
daa
out
push
pop
xor
xor
xor
lea
lods
mov
into
pushf
popf
add
push
add
mov
mov
aas
and
xor
inc
ins
outs
pop
mov
jo
add
or
(bad)
outs
ja
jns
adc
test
lods
iret
push
sahf
out
mov
or
movs
cmp
mov
sub
pop
sub
stos
lods
lods
stos
and
jae
xchg
rol
xor
xor
mov
dec
dec
shl
dec
mov
xchg
xor
lahf
int
cmps
imul
rcl
sbb
xlat
scas
xchg
cmps
imul
test
push
fnstsw
out
adc
out
out
out
sahf
call
in
jns
out
out
out
lock
repnz
sahf
out
hlt
cmc
idiv
mov
sar
jns
mov
ret
(bad)
in
sahf
out
mov
leave
cmps
imul
call
xchg
jl
dec
dec
xchg
jmp
xchg
cmps
mov
pushaw
mov
adc
lds
pop
pop
mov
call
into
iret
rcl
addr16
add
lods
arpl
(bad)
xlat
fcomp
xor
shl
fcmovnu
fstp
jne
lods
test
imul
dec
jmp
in
out
out
lock
test
hlt
cmc
data16
sbb
dec
mov
std
mov
dec
rcl
ds
cwde
cdq
call
movs
leave
rcr
pop
jp
jb
mov
wrmsr
sub
jns
daa
dec
or
mov
arpl
xchg
mov
or
adc
lods
fstp
xor
adc
in
jnp
push
inc
and
lock
xchg
cmp
adc
xchg
popa
jno
mov
adc
add
and
add
cmp
cmp
pop
es
and
mul
(bad)
pop
adc
jns
outs
push
adc
lahf
push
outs
bound
adc
push
ficomp
push
rol
outs
iret
inc
inc
mov
sub
nop
inc
and
mov
adc
pusha
or
mov
call
push
dec
lahf
daa
aas
and
dec
xlat
pop
pop
cmp
stos
mov
fsub
dec
sbb
dec
shl
add
sbb
add
xchg
out
add
xor
add
out
and
addr16
jnp
mov
push
fnstsw
(bad)
not
pop
(bad)
pop
and
les
adc
addr16
jl
cmps
fs
push
pop
iret
and
movs
sbb
cmp
inc
sahf
jne
ins
dec
fimul
jmp
imul
es
cmps
inc
sbb
pushf
xchg
sahf
push
cli
jo
retf
mov
inc
and
and
jnp
pop
neg
inc
dec
pop
cmp
xchg
cmps
mov
and
aad
push
js
mov
sub
add
pusha
or
sub
xchg
dec
popa
mov
mov
mov
inc
dec
stos
sub
or
icebp
call
adc
(bad)
daa
fcmovnb
cmps
add
leave
test
pop
and
mov
outs
add
sub
jo
xor
xor
mov
inc
inc
xchg
inc
mov
repz
mov
or
adc
push
mov
push
mov
push
push
xor
xchg
adc
adc
jnp
mov
or
and
je
pushf
pop
xchg
pushf
cmp
loopne
int
leave
repz
xor
pusha
cs
cmp
and
repnz
inc
push
and
sub
xor
movs
jle
mov
add
lahf
sub
cmp
mov
out
inc
cmp
mov
push
(bad)
adc
loop
rol
pop
add
jl
add
mov
sbb
adc
mov
test
adc
adc
std
pop
fistp
sbb
add
inc
push
dec
cwde
pop
pop
data16
ins
cmp
xor
adc
inc
xchg
mov
out
add
(bad)
pop
js
and
cmp
ds
mov
jno
cmp
mov
data16
dec
cmps
sub
out
mov
hlt
pop
push
push
neg
and
jno
push
ins
popa
push
shl
mov
mov
xchg
add
mov
xchg
movs
adc
addr16
dec
retf
inc
adc
fs
neg
mov
push
cmp
pop
xchg
addr16
inc
adc
pusha
aaa
adc
aaa
rcr
add
xor
mov
xchg
dec
dec
and
adc
into
ss
xlat
mov
xor
inc
sbb
js
movs
test
fbstp
push
add
mov
xor
inc
xchg
and
(bad)
jmp
inc
pop
cmps
ja
pop
sub
xchg
add
push
xchg
push
sahf
imul
(bad)
jns
xor
dec
add
jecxz
retf
mov
popa
dec
and
or
sbb
popf
sub
inc
push
in
sub
jg
xor
gs
test
push
aaa
lahf
aas
fwait
pop
ins
push
pop
sub
pop
sbb
sbb
mov
aaa
xor
arpl
push
pop
movs
adc
aas
adc
pop
xchg
out
fmul
inc
adc
int
xor
inc
lock
cmp
repz
enter
jge
mov
pushf
nop
iret
repz
cmp
push
outs
call
sbb
jns
and
adc
out
sahf
out
inc
clc
lock
in
out
sahf
loopne
int3
les
add
adc
pop
pop
es
test
or
leave
jbe
pop
imul
push
pop
push
sti
loopne
pop
xchg
adc
mov
pop
dec
retf
arpl
cmp
dec
pop
push
sbb
outs
mov
sub
retf
adc
popa
test
push
mov
jo
push
or
push
ja
xor
or
cmps
adc
int
stos
jnp
scas
gs
pop
pop
or
hlt
std
jbe
fadd
pop
add
cmps
(bad)
and
xchg
sub
jns
movs
fwait
and
ret
jl
cld
rol
xor
leave
jb
dec
lock
sbb
test
adc
inc
popf
xor
inc
xor
inc
jmp
dec
add
jb
pop
inc
or
sbb
scas
add
fadd
dec
sub
int
add
inc
adc
or
cmps
push
pusha
jmp
and
lea
and
push
jp
and
call
pop
add
ficom
and
ins
push
and
vmwrite
mov
das
adc
sbb
sub
adc
addr16
dec
jge
push
popa
outs
mov
rol
or
ja
ror
mov
push
add
push
ins
fisub
es
sbb
xor
pop
jbe
push
test
xchg
popf
pop
mov
mov
mov
pop
add
mov
and
pop
add
and
and
or
adc
add
ret
pop
pop
leave
xor
add
jo
adc
es
gs
mov
mov
push
inc
push
dec
dec
int
test
push
inc
retf
mov
pop
add
mov
sbb
add
dec
push
scas
jp
dec
mov
xor
jns
push
fiadd
aam
xchg
cmp
mov
nop
add
jnp
nop
dec
dec
jg
adc
push
jnp
mov
pop
push
sbb
sbb
adc
xchg
popa
push
loope
add
cmp
lahf
dec
xchg
js
sub
pop
out
mov
push
mov
mov
das
inc
je
es
inc
inc
xchg
push
jae
dec
sahf
out
ja
mov
add
jge
ret
das
popf
push
mov
sahf
mov
scas
fisttp
ja
pop
sbb
inc
pop
dec
sahf
xchg
out
mov
pusha
cmp
and
and
xor
fst
daa
dec
sub
push
in
pop
sub
push
dec
ins
mov
sub
mov
test
xchg
cmps
fstp
mov
lods
ja
scas
mov
daa
iret
leave
scas
mov
mov
cmp
mov
xchg
push
fsub
mov
out
lahf
out
dec
lock
push
rol
jnp
idiv
js
inc
push
stc
xor
out
dec
test
push
cmp
imul
dec
pop
dec
dec
pushf
fdivp
sahf
out
cld
cmp
mov
push
int3
test
(bad)
jns
stc
pop
xchg
mov
mov
ror
sbb
shl
ret
shl
xchg
ret
(bad)
push
mov
ret
js
aam
or
push
arpl
or
jg
and
mov
jge
inc
(bad)
aas
imul
and
xor
and
or
jbe
sub
popa
fld
sbb
xor
push
pop
xchg
dec
and
out
jmp
outs
pop
stos
dec
mov
test
sub
imul
fisubr
jae
aad
xor
push
ficomp
mov
addr16
lods
fcmovu
push
jmp
(bad)
pop
bound
mov
lea
rcr
dec
sbb
in
add
(bad)
cs
pop
pop
cmc
and
jbe
xlat
or
(bad)
movs
sub
add
jno
cld
cmps
fisub
push
jg
bound
inc
jb
push
add
cmp
pop
mov
fcomip
mov
cmp
pop
push
or
cdq
imul
or
aas
bound
add
push
or
add
push
mov
cmp
ret
(bad)
pop
outs
xor
inc
movs
loopne
loop
jg
adc
imul
shl
aaa
push
jbe
xor
out
jno
add
xor
xor
ror
xor
fbstp
inc
pop
mov
out
int
xor
adc
add
imul
jle
ret
sahf
push
adc
loopne
lock
in
retf
mov
pop
cwde
add
test
into
sbb
pop
or
mov
and
aaa
push
jp
jb
sbb
sub
or
xor
popa
jmp
and
and
movs
inc
pop
and
test
push
fs
add
mov
loop
mov
mov
neg
sub
add
push
xor
test
jge
pop
push
mov
fild
jae
jnp
adc
xchg
test
mov
call
mov
mov
adc
inc
scas
inc
daa
scas
push
mov
mov
out
ret
es
push
lods
data16
mov
sahf
sub
sbb
or
cmp
sahf
mov
adc
adc
mov
out
sbb
mov
shl
push
idiv
mov
out
jo
pop
push
aam
inc
sub
das
xlat
pusha
sbb
push
enter
bound
shr
sub
ror
in
cmps
(bad)
xor
mov
fwait
sub
fstp
or
push
pusha
jnp
fild
cmovb
sub
adc
loopne
xor
dec
dec
push
push
sub
loop
rdpmc
cmp
xor
xor
in
fcomip
out
dec
aaa
xor
xor
cmp
cmp
leave
lods
jb
xor
ss
dec
inc
sti
leave
leave
leave
inc
inc
inc
push
inc
inc
and
dec
dec
or
xor
movq
push
push
jno
xor
mov
push
and
push
inc
dec
rol
push
xor
cmp
xor
in
xor
mov
fisubr
or
jbe
jmp
dec
inc
das
das
jae
mov
mul
xor
cmp
sub
jnp
outs
mov
add
cmp
cli
lea
add
mov
mov
xor
outs
and
out
xor
inc
and
ret
cwde
enter
mov
js
jg
xor
sbb
dec
sahf
cwde
add
dec
push
xor
xor
aad
jb
xor
cmp
xor
and
xor
xor
add
or
cmp
repnz
xor
ss
lods
xchg
pushf
xor
das
push
mov
add
push
mov
movs
sbb
mov
add
leave
cmp
addr16
shr
push
repnz
xor
pop
cmps
aaa
sbb
popa
or
dec
push
cmp
sub
stos
jbe
addr16
adc
shl
and
cmps
sub
adc
dec
and
add
in
mov
add
stos
push
pop
inc
sbb
mov
cwde
retf
ja
add
scas
outs
enter
in
push
xchg
sub
and
aad
inc
das
cld
and
out
(bad)
(bad)
(bad)
jmp
xor
mov
mov
push
mov
nop
idiv
jmp
mov
(bad)
(bad)
(bad)
dec
std
cmp
adc
sbb
xchg
dec
fidivr
adc
in
imul
push
jns
adc
clc
inc
mov
adc
leave
mov
shr
xor
(bad)
jmp
jno
inc
cdq
aad
cld
fadd
lahf
mov
xchg
mov
mov
and
dec
(bad)
(bad)
jg
cmps
(bad)
mov
or
cmc
inc
xor
inc
mov
xlat
mov
(bad)
jmp
or
inc
and
mov
push
or
imul
dec
add
rcl
adc
xor
adc
(bad)
(bad)
call
pop
sbb
mov
and
out
inc
jne
pop
pop
inc
fs
aad
cdq
test
jle
add
jg
fst
mov
adc
sub
pop
sub
or
mov
sbb
push
jae
cmp
add
in
jae
inc
jmp
bound
pop
cld
mov
das
cmps
loop
out
cwde
(bad)
(bad)
(bad)
dec
sub
outs
inc
or
(bad)
push
cmp
sub
(bad)
(bad)
inc
sub
stos
xchg
and
mov
push
repz
bound
mov
inc
loopne
push
sub
push
add
pop
mov
push
pop
cmp
or
(bad)
(bad)
(bad)
call
sahf
cwde
mov
clc
hlt
sbb
jl
fidiv
adc
pusha
mov
aas
inc
lock
inc
sbb
pop
jno
arpl
hlt
and
fistp
or
jp
in
sbb
lds
jae
stos
jg
xchg
inc
rcr
push
xchg
int3
addr16
test
push
pop
cld
test
clc
add
cld
add
ds
pop
xchg
call
mov
(bad)
(bad)
call
mov
xchg
mov
or
push
sbb
push
in
jle
jnp
push
sar
jae
mov
sub
xor
out
inc
pop
aam
push
aas
add
push
(bad)
(bad)
(bad)
push
sahf
ds
and
cmp
clc
sub
mov
(bad)
(bad)
push
out
sub
sbb
test
xor
rol
jle
ret
add
cmp
(bad)
(bad)
jmp
push
call
mov
jge
fstp
fwait
inc
push
daa
ds
(bad)
(bad)
(bad)
(bad)
out
jb
pop
hlt
es
lds
add
lods
pop
popa
xor
jb
inc
mov
push
(bad)
dec
xchg
imul
(bad)
push
sub
mov
mov
cmp
call
mov
loop
lahf
ror
cdq
pop
adc
rcr
(bad)
mov
inc
int3
and
fistp
pushf
or
cwde
or
call
(bad)
cmp
mov
les
inc
repnz
iret
jmp
lods
imul
dec
add
je
sbb
sub
cmp
jge
pop
mov
and
adc
and
add
fdivr
jmp
fnsave
outs
les
inc
xor
mov
test
test
sub
add
cmp
retf
cmp
scas
int3
leave
inc
pusha
cmps
aam
and
jge
ja
ficomp
mov
lea
ins
cld
dec
sub
(bad)
sbb
xchg
xor
sar
dec
fdiv
xchg
mov
jbe
test
(bad)
shl
enter
fs
xchg
test
outs
push
in
mov
lock
or
shl
pusha
clc
xor
jge
pop
cmp
retf
mov
imul
cmp
icebp
(bad)
(bad)
(bad)
dec
xchg
adc
retf
fld
mov
sbb
ret
or
cli
xchg
cmp
test
ins
inc
dec
xor
add
cmp
cmp
stos
scas
jge
call
(bad)
dec
pop
scas
outs
inc
push
retf
mov
sbb
and
cld
retf
jnp
icebp
scas
out
inc
sar
sahf
pop
call
push
mov
mov
add
add
push
add
cmp
lahf
retf
call
popa
jg
push
(bad)
aad
cdq
lock
aas
out
pop
mov
jp
dec
mov
(bad)
(bad)
cmp
jo
and
and
retf
push
das
inc
sar
push
mov
xor
pop
add
sahf
(bad)
and
outs
in
(bad)
(bad)
cld
add
mov
xor
hlt
pusha
and
mov
mov
(bad)
dec
cmps
call
adc
cmp
mov
jge
je
add
xor
mov
test
mov
mov
(bad)
call
cli
sub
push
mov
retf
add
cmps
push
mov
aam
xchg
fnstcw
addr16
dec
iret
add
mov
shl
pusha
mov
pop
jmp
in
(bad)
(bad)
dec
mov
and
outs
iret
in
outs
add
hlt
call
pop
jmp
mov
add
inc
push
gs
jg
repnz
jmp
popf
or
data16
adc
jle
inc
pop
aam
jl
(bad)
inc
cld
pop
(bad)
xor
out
jmp
push
jbe
(bad)
(bad)
(bad)
inc
mov
push
mov
cmp
cmp
daa
shl
imul
repnz
inc
inc
clc
mov
or
bnd
jge
sub
mov
(bad)
inc
xchg
dec
jecxz
loop
sbb
mov
jmp
jl
sahf
push
(bad)
fdivrp
aaa
cmp
xor
retf
mov
push
jmp
push
cmps
(bad)
fisttp
test
mov
and
and
push
cmc
or
mov
(bad)
push
mov
popa
push
jne
add
js
mov
jl
mov
xor
and
pop
mov
clc
mov
fimul
or
cmp
push
(bad)
(bad)
(bad)
stc
ret
test
in
xchg
mov
jne
outs
jbe
fild
retf
add
push
mov
and
popa
daa
ret
jmp
neg
sub
fdivp
sbb
dec
test
or
or
(bad)
push
xchg
int
cmc
mov
aaa
inc
fdivp
outs
xchg
outs
xchg
fisttp
scas
fdivr
in
and
add
adc
or
imul
inc
jae
ss
std
lea
add
cld
call
hlt
cmp
fsub
cmp
out
pop
rcl
pop
not
mov
jl
sub
xchg
pop
enter
jmp
(bad)
fld
inc
sub
jp
xchg
jne
or
adc
out
adc
or
clc
jg
fdiv
xor
cld
out
mov
(bad)
add
cwde
shl
les
stc
scas
loope
out
cld
mov
fsubr
pop
jnp
(bad)
(bad)
jmp
fcomp
sub
int
rol
xchg
push
dec
cmp
jno
inc
aas
adc
mov
adc
lods
xchg
mov
and
outs
(bad)
(bad)
(bad)
aas
pop
add
dec
cmp
jp
xchg
movs
add
cmc
fisttp
mov
xor
dec
add
cmp
out
out
in
mov
call
mov
pop
adc
push
int
sub
(bad)
xchg
out
mov
push
adc
clc
xor
test
sub
cmp
cld
push
cld
mov
mov
clc
lahf
adc
cli
jl
xchg
mov
mov
jae
inc
imul
cld
add
cmps
sub
push
add
adc
push
aaa
jp
mov
enter
lahf
or
cli
ror
jne
push
cs
mov
popa
or
cdq
mov
loopne
or
mov
je
sar
pop
jmp
stos
push
daa
dec
add
(bad)
(bad)
jmp
pop
cmc
add
mov
sub
adc
dec
icebp
sbb
neg
popf
xor
add
scas
(bad)
jmp
clc
repnz
repnz
sub
cmps
aam
pop
cli
mov
push
out
test
repz
lds
mov
fadd
out
aaa
add
add
es
(bad)
(bad)
jg
rcl
es
add
movs
shl
fwait
das
das
ins
pushf
push
sub
std
jmp
adc
sub
fbld
repnz
pop
punpckhwd
pop
and
icebp
je
std
(bad)
call
dec
in
add
add
xor
(bad)
(bad)
push
cdq
fbstp
cld
sub
in
jne
movd
mov
movs
pop
add
lahf
in
jg
xor
(bad)
lock
inc
jecxz
test
retf
push
ins
popa
movs
mov
stc
call
mov
in
popa
test
lock
mul
ficom
inc
test
das
add
(bad)
(bad)
dec
jle
fdivr
xchg
into
xchg
pop
add
sub
(bad)
(bad)
(bad)
fstp
sbb
cmp
ja
mov
sti
cld
push
adc
test
pop
mov
cmps
test
cmp
pushf
inc
ror
daa
mov
dec
mov
push
sub
pop
mov
inc
inc
pop
lar
sub
push
and
jmp
into
aaa
jmp
and
sub
shr
loopne
ficom
dec
cmps
loop
mov
aam
and
cwde
pop
out
stos
ins
jmp
orps
mov
add
xor
(bad)
dec
pushf
call
mov
pop
inc
sbb
add
imul
outs
xor
xor
sub
daa
jns
out
test
xor
sbb
jnp
int3
in
mov
in
push
add
pop
sti
adc
icebp
out
hlt
or
(bad)
(bad)
inc
in
jle
or
push
mov
fwait
sub
mov
(bad)
call
dec
add
retf
das
int
push
inc
xchg
add
(bad)
addr16
push
out
mov
xchg
sbb
and
scas
xchg
adc
jmp
shr
cmp
ret
or
cmps
imul
inc
(bad)
(bad)
push
mov
rcl
dec
arpl
js
rol
cmp
xor
setl
adc
sbb
mov
pop
jae
adc
dec
stc
loope
add
js
and
xchg
fs
sbb
or
aam
pop
pop
jecxz
(bad)
jg
add
test
sbb
retf
inc
pop
pop
ret
jae
add
es
aam
inc
push
push
lods
jae
jecxz
add
(bad)
repnz
jmp
xchg
lods
gs
test
dec
lock
xchg
movs
ss
sahf
es
jmp
jg
(bad)
fwait
imul
iret
xchg
test
jnp
jmp
nop
leave
add
(bad)
adc
push
jnp
adc
cmp
fimul
pop
pop
xchg
out
call
mov
mov
fist
pop
xor
add
mov
jg
shr
int3
or
pop
pop
mov
sub
(bad)
(bad)
(bad)
(bad)
out
test
xchg
push
inc
sar
loop
adc
int
mov
stos
xchg
imul
retf
loopne
(bad)
(bad)
cmp
pop
scas
fld
imul
addr16
js
js
cmps
(bad)
dec
inc
out
scas
mov
popf
push
(bad)
cld
jecxz
or
dec
add
dec
stos
mov
ret
adc
fwait
aas
(bad)
(bad)
inc
pop
mov
sub
je
xor
(bad)
(bad)
(bad)
jmp
jle
cdq
adc
cdq
inc
aaa
call
aad
mov
dec
mov
sar
dec
(bad)
sbb
or
jae
icebp
xchg
(bad)
ja
or
movs
and
pop
rol
(bad)
cmps
ja
(bad)
das
jmp
(bad)
dec
jmp
cwde
xchg
push
imul
xchg
or
(bad)
(bad)
mov
dec
mov
lods
lods
stos
jp
pop
mov
fdiv
inc
call
or
hlt
cmp
fdivrp
(bad)
(bad)
push
mov
jb
rol
add
aaa
adc
repz
mov
sbb
inc
icebp
test
repz
ja
inc
cmp
xchg
push
mov
mov
sar
aaa
enter
fisub
adc
cld
jg
add
pop
dec
ret
cmps
in
xchg
or
les
int
ja
jo
fcomip
adc
mov
mov
sub
jecxz
mov
loop
or
sbb
mov
sbb
add
add
sahf
sbb
(bad)
jmp
xor
push
pop
ret
add
sub
fdivrp
fxch
add
dec
add
xchg
stc
daa
and
ins
jg
pop
stos
push
sbb
push
adc
aam
nop
sbb
rcr
sbb
xor
(bad)
mov
jb
mov
sbb
sub
das
hlt
adc
arpl
ret
or
out
lods
popa
es
push
jge
call
push
pop
les
test
fwait
icebp
mov
inc
in
fwait
push
loopne
adc
out
add
adc
sbb
mov
stos
fisttp
push
je
lahf
lock
mov
cmp
dec
and
mov
(bad)
push
fisubr
jg
or
mov
cmp
jmp
adc
(bad)
(bad)
call
(bad)
nop
lods
add
leave
(bad)
lods
adc
and
icebp
mov
mov
clc
clc
jmp
jno
adc
std
push
mov
xor
sub
mov
cmps
retf
outs
jle
clc
adc
adc
je
das
mov
mov
imul
iret
loopne
aas
adc
pop
mov
jg
mov
sub
jle
xchg
mov
les
inc
clc
dec
jnp
gs
sbb
xor
(bad)
fild
cs
fild
sbb
out
adc
pop
(bad)
mov
test
daa
not
retf
pop
jns
(bad)
jl
imul
test
in
movs
iret
and
push
ror
and
add
(bad)
jg
sub
aas
js
inc
mov
sbb
and
es
and
push
jp
(bad)
(bad)
(bad)
inc
lods
and
dec
sub
add
fidivr
nop
pop
pop
in
outs
call
push
inc
cwde
in
bound
dec
xor
popa
ja
and
hlt
inc
cld
jmp
es
(bad)
jg
inc
push
push
push
push
cmp
mov
daa
inc
(bad)
ja
mov
jo
loopne
sbb
mov
cld
mov
push
mov
(bad)
jmp
add
jnp
or
mov
scas
mov
mov
std
jbe
xor
(bad)
inc
xor
jns
cmc
add
mov
nop
loope
dec
mov
fucomip
cs
and
(bad)
(bad)
jle
pushf
and
cwde
clc
int
int
mov
push
add
push
(bad)
and
sbb
(bad)
out
mov
add
outs
test
and
adc
fild
adc
lods
cli
call
xchg
mov
jl
mov
lahf
adc
and
test
cmp
push
gs
cmp
and
std
or
daa
lods
iret
mov
stc
idiv
pusha
sbb
out
and
mov
push
inc
iret
jmp
jecxz
add
(bad)
(bad)
(bad)
jmp
sub
mov
jmp
pop
ins
inc
jmp
mov
mov
dec
fsub
sub
(bad)
(bad)
jmp
aam
and
les
pop
shl
out
pop
dec
xchg
addr16
ret
(bad)
dec
cdq
mov
push
stc
(bad)
lahf
jns
cmp
dec
inc
bound
or
and
jmp
dec
call
(bad)
(bad)
(bad)
jg
inc
cs
repz
popa
cli
cdq
(bad)
lods
daa
enter
mov
sub
aad
push
stos
dec
push
scas
xor
(bad)
(bad)
(bad)
jnp
push
pop
add
pusha
ror
or
fs
pusha
inc
sbb
dec
icebp
ja
dec
mov
(bad)
pop
fild
push
pop
xchg
push
push
add
jmp
dec
push
mov
popa
mov
stos
imul
sub
(bad)
fstp
cmp
mov
lea
pop
lods
push
mov
(bad)
cmp
pop
fisttp
xchg
icebp
dec
rcr
sbb
add
clc
(bad)
dec
(bad)
cmps
adc
xor
mov
sahf
add
push
ins
loop
int
fidiv
push
mov
sbb
add
dec
add
and
test
(bad)
mov
mov
clc
adc
in
mov
aam
and
dec
add
inc
xchg
test
fidiv
dec
mov
mov
mov
inc
jbe
cwde
mov
dec
retf
(bad)
(bad)
(bad)
jmp
xchg
push
and
fadd
dec
dec
jmp
aad
in
lahf
xor
(bad)
(bad)
(bad)
(bad)
inc
push
cld
add
sub
dec
jns
lods
inc
scas
cmps
dec
mov
scas
fdiv
cmps
scas
sbb
inc
(bad)
push
add
enter
test
dec
adc
icebp
(bad)
mov
call
sbb
icebp
call
xchg
jg
cmp
(bad)
cmp
push
xchg
fidiv
popa
cli
(bad)
arpl
aas
dec
sub
xor
dec
imul
add
lds
jg
and
cmps
(bad)
(bad)
dec
and
repnz
fisubr
jno
mov
(bad)
das
pop
push
dec
mov
icebp
int
(bad)
(bad)
jmp
into
dec
call
mov
pop
xor
out
addr16
cmps
outs
sub
sbb
call
stos
push
add
dec
out
mov
(bad)
jg
push
jb
ss
xor
push
sub
aam
cmp
jne
xchg
rcl
xchg
pop
test
movs
hlt
bswap
fstp
mov
(bad)
(bad)
(bad)
push
rcl
int
adc
cdq
scas
pusha
add
mov
fldenv
loope
jbe
inc
cld
dec
jnp
jae
fisub
ins
int3
adc
ins
daa
cmps
(bad)
(bad)
(bad)
inc
pushf
mov
push
cmp
call
inc
mov
xchg
scas
pop
mov
mov
sbb
inc
icebp
push
outs
and
cmp
dec
daa
ror
in
ss
popa
into
sbb
push
cwde
jae
add
test
mov
jmp
outs
add
in
xor
mov
sub
dec
and
xor
and
js
jne
xor
xchg
xor
leave
push
jge
(bad)
(bad)
jg
aad
dec
(bad)
cmp
dec
and
aam
pop
scas
imul
(bad)
(bad)
dec
cmp
mov
in
and
sbb
lods
jmp
dec
scas
lock
lahf
add
std
xchg
out
sbb
scas
scas
adc
stos
loopne
dec
push
or
or
pop
or
loop
std
dec
add
mov
ja
mov
mov
inc
adc
lock
lods
jmp
scas
dec
dec
mov
xor
scas
dec
sbb
push
cmp
and
(bad)
(bad)
inc
and
outs
dec
mov
ins
or
push
es
fwait
ins
lds
lahf
push
(bad)
mov
dec
(bad)
nop
add
and
add
test
sbb
mov
adc
dec
push
retf
icebp
fstp
inc
add
icebp
push
mov
es
cmp
(bad)
(bad)
(bad)
jmp
inc
jecxz
in
mov
add
push
pop
cwde
jmp
loop
std
outs
sbb
pop
dec
(bad)
jmp
push
and
sub
stc
clc
jnp
push
dec
or
iret
mov
out
inc
jne
mov
mov
pop
or
pop
pop
jmp
aas
repz
mov
(bad)
sbb
adc
adc
call
pop
or
(bad)
aas
add
out
in
fld
xchg
push
pop
inc
jge
(bad)
(bad)
(bad)
(bad)
cmp
jo
test
leave
or
pop
fiadd
mov
shl
sub
xlat
cld
in
or
push
add
cwde
mov
stc
lock
mov
dec
push
cwde
(bad)
(bad)
frstor
pop
push
pushf
sub
mov
jge
mov
loope
sub
push
sub
xchg
push
jae
in
movs
not
cdq
(bad)
sub
sbb
push
(bad)
lods
psubw
adc
push
daa
push
das
mov
dec
loope
call
push
sub
jnp
addr16
arpl
cmc
gs
loope
inc
daa
imul
bound
(bad)
(bad)
(bad)
inc
push
pop
add
addr16
sbb
cmc
fimul
mov
(bad)
mov
(bad)
(bad)
(bad)
push
cdq
xlat
mov
pushf
ss
aaa
repnz
or
xor
xor
push
mov
pop
aaa
(bad)
sbb
push
stc
sbb
adc
push
nop
ret
nop
addr16
jge
test
out
das
out
and
mov
loopne
adc
jg
adc
ja
ja
(bad)
mov
ins
adc
inc
and
dec
mov
add
sbb
and
(bad)
(bad)
mov
cdq
sbb
jl
rcl
push
cmp
mov
int3
sbb
int3
pop
xchg
(bad)
(bad)
(bad)
std
sub
and
pop
inc
inc
xchg
adc
fcomi
pop
pusha
fldenv
cmp
sbb
jp
inc
jge
(bad)
mov
push
push
mov
loopne
xor
loopne
push
sub
scas
js
pop
call
test
push
or
xchg
sbb
xlat
jle
(bad)
push
ja
ja
add
jno
sbb
es
test
out
out
lea
rdmsr
lods
aas
(bad)
(bad)
(bad)
call
loop
fiadd
mov
xchg
pop
xchg
push
or
outs
cmp
cmp
popa
xchg
dec
repnz
call
cwde
pop
cdq
outs
push
dec
loopne
jl
adc
mov
or
call
push
mov
mov
fcom
cmps
xchg
xlat
xchg
add
(bad)
jmp
pop
(bad)
out
adc
sahf
sub
test
cld
sub
shl
sahf
(bad)
(bad)
(bad)
inc
mov
sti
in
loope
fist
ror
push
dec
daa
test
mov
shl
mov
daa
std
(bad)
inc
out
call
fdiv
cmps
mov
dec
stc
pop
xchg
and
jnp
and
jmp
aad
jle
das
popf
mov
iret
ror
dec
retf
adc
out
mov
sbb
mov
pop
jl
xor
cmp
add
(bad)
(bad)
call
inc
inc
lea
xchg
adc
lods
jbe
add
repnz
(bad)
xchg
mov
in
out
mov
das
xor
add
jl
mov
les
stos
mov
push
xchg
jo
cli
xchg
cs
sar
(bad)
(bad)
(bad)
std
pop
jo
mul
cmc
rcl
jle
xchg
test
sbb
ja
aas
in
div
mov
(bad)
dec
je
test
(bad)
test
push
dec
inc
jmp
dec
sub
icebp
retf
in
scas
xchg
clc
outs
lahf
cmps
cwde
das
fbstp
es
aas
push
lock
daa
jge
inc
xor
ja
cmps
addr16
in
cwde
push
fwait
(bad)
(bad)
(bad)
push
aam
adc
jns
push
push
out
push
aaa
jmp
xor
(bad)
(bad)
jmp
aas
clc
ja
test
jmp
dec
nop
add
fadd
(bad)
push
fwait
in
sar
xor
jo
and
mov
jecxz
(bad)
dec
repz
cmp
jno
xchg
bound
push
push
idiv
outs
and
xor
(bad)
fild
sub
cld
fist
pop
jmp
aas
add
sahf
pop
outs
loope
lahf
fnsave
and
jmp
xchg
inc
add
xchg
addr16
data16
js
aaa
aad
sbb
imul
push
push
sbb
or
(bad)
(bad)
jg
push
cdq
lods
cld
push
push
jle
xchg
sbb
in
mov
mov
sbb
ror
pushf
dec
cld
(bad)
(bad)
dec
or
jmp
mov
aad
mov
xchg
cs
push
scas
outs
pop
adc
fimul
pop
push
xlat
(bad)
pop
mov
aaa
enter
jns
pusha
int3
cmps
(bad)
jmp
lods
dec
adc
(bad)
nop
ds
mov
jg
xchg
add
(bad)
clc
jg
and
xchg
mov
mov
sbb
frstor
cmpxchg
jno
inc
mov
or
int
xchg
inc
jno
(bad)
(bad)
jmp
leave
sub
stos
push
sub
cmp
add
cdq
test
and
(bad)
(bad)
(bad)
push
add
mov
test
sub
loopne
pop
scas
adc
or
lock
lea
imul
cmps
test
mov
xor
pop
cld
lods
in
retf
pop
ficomp
sbb
cli
cmc
adc
sahf
dec
xchg
fild
pushf
jb
push
add
inc
stos
jne
(bad)
(bad)
jnp
mov
jnp
push
bound
sub
or
(bad)
(bad)
mov
xor
sbb
push
out
out
and
sub
push
add
sub
(bad)
(bad)
js
pop
add
mov
movs
or
jns
movs
fisub
(bad)
(bad)
(bad)
jns
cld
cmc
jno
mov
push
push
xor
add
jnp
test
loop
push
maxps
inc
mov
inc
pop
jg
jg
imul
pop
fs
je
es
(bad)
(bad)
cmp
loope
mov
jno
jle
inc
sbb
fwait
lock
xor
push
out
icebp
call
pop
and
push
lahf
fcomp
xchg
sar
aad
push
sub
lock
aas
add
aas
(bad)
mov
fisubr
push
inc
inc
add
test
sub
and
pop
mov
dec
jo
add
and
xor
jmp
push
jl
addr16
push
icebp
xchg
push
mov
shl
movs
loopne
push
sti
push
nop
push
test
(bad)
jmp
rcr
jl
ss
pop
out
mov
pop
pop
push
mov
jge
pop
mov
xor
(bad)
fcomip
push
or
out
and
mov
addr16
loopne
std
cmp
jmp
inc
ss
cs
cmp
aam
and
fistp
(bad)
mov
and
mov
xchg
push
xlat
loopne
sub
adc
pushf
xchg
repz
(bad)
(bad)
(bad)
(bad)
fadd
cmp
dec
scas
jnp
dec
test
fdivr
(bad)
push
in
sub
inc
jno
mov
pusha
jmp
imul
xacquire
imul
cmps
jmp
dec
sahf
es
out
sahf
je
nop
jne
cmp
ds
ds
dec
out
(bad)
(bad)
jmp
loopne
out
and
loop
stc
in
and
mov
or
(bad)
inc
lds
das
or
sbb
cld
adc
aam
mov
push
(bad)
jg
sub
or
int
enter
cmp
inc
xchg
mov
dec
pop
loope
jmp
test
fs
inc
clc
test
loop
push
sbb
jp
(bad)
(bad)
(bad)
call
ret
ret
inc
lds
cli
mov
imul
out
jmp
add
sti
adc
(bad)
(bad)
call
jnp
mov
fdivr
add
cld
jae
sub
add
(bad)
cmp
call
clc
jl
test
test
sub
push
mov
add
(bad)
push
sub
or
pop
aam
mov
cs
add
ror
cmp
jns
mov
or
jmp
pop
add
cmps
fsub
(bad)
(bad)
aas
sbb
lock
dec
scas
add
push
mov
jmp
lods
sub
sub
mov
cdq
push
rcl
int
push
dec
jmp
adc
xchg
int
adc
mov
jge
adc
sbb
(bad)
(bad)
(bad)
jg
test
aaa
(bad)
(bad)
cwde
sub
pop
xchg
fwait
bound
push
test
jae
adc
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
mov
pop
mov
rcr
test
hlt
or
and
retf
in
cmova
clc
(bad)
push
mov
out
mov
out
out
jmp
sub
xlat
jmp
dec
mov
shr
lea
ret
jle
sbb
sub
inc
fnstenv
(bad)
in
(bad)
jmp
pop
imul
(bad)
mov
dec
das
xchg
jp
loope
lock
push
mov
pusha
add
inc
(bad)
call
mov
add
mov
mov
pop
(bad)
lea
push
sbb
pusha
fsubr
mov
test
jg
popf
add
jns
or
(bad)
mov
mov
in
ret
or
jmp
adc
adc
call
test
mov
xor
psubq
mov
stos
add
repz
lods
fs
mov
rol
sbb
cmp
push
jmp
or
das
or
popa
in
stc
jl
fistp
cmps
pop
scas
or
adc
pop
dec
mov
(bad)
(bad)
call
pusha
ffreep
lods
xchg
mov
adc
push
jnp
mov
mov
call
mov
ret
add
test
dec
stos
sub
fsub
pop
(bad)
(bad)
(bad)
(bad)
mov
aas
push
bound
pop
idiv
addr16
inc
jp
mov
cmp
inc
inc
sar
jmp
xchg
arpl
fisub
(bad)
pop
xchg
aam
sub
pusha
cld
or
call
add
or
push
imul
pop
jnp
in
(bad)
(bad)
(bad)
jmp
pop
push
repz
out
sar
fs
jmp
js
(bad)
inc
sar
jno
jl
sbb
cdq
sbb
leave
loopne
psubd
dec
sbb
add
sbb
cmps
mov
lea
(bad)
(bad)
jmp
bound
jbe
loopne
pushf
cmp
xor
xchg
in
call
inc
jl
int3
mov
dec
inc
xchg
mov
outs
mov
fs
mov
xchg
or
push
lock
or
pop
dec
sbb
adc
xchg
push
pop
mov
pop
cmp
ja
mov
cld
push
sahf
xchg
imul
add
ins
push
inc
das
(bad)
(bad)
jmp
cmp
in
js
push
push
xor
push
cs
mov
cmp
in
(bad)
(bad)
(bad)
inc
cs
out
hlt
aas
cmps
sub
push
hlt
popa
sub
addr16
nop
sub
sbb
test
int3
add
(bad)
jg
push
aas
sbb
shl
inc
data16
sbb
and
call
xlat
xchg
fimul
mov
out
test
cwde
add
dec
sbb
fdiv
rcr
(bad)
jmp
sbb
in
cmp
and
and
jb
ins
inc
or
(bad)
(bad)
jmp
pop
hlt
xor
and
sahf
dec
jecxz
dec
push
outs
std
out
adc
jge
stos
push
div
jb
inc
lock
jmp
mov
and
dec
sahf
cdq
retf
shl
add
pop
inc
add
call
sti
cwde
rcl
mov
mov
outs
(bad)
call
aaa
cld
dec
xor
inc
add
jnp
daa
sbb
or
push
ror
dec
mov
mov
into
and
dec
jg
adc
cs
dec
clc
xchg
mov
jecxz
(bad)
inc
pusha
sub
cmc
adc
push
mov
aas
aas
dec
jl
dec
push
inc
enter
xchg
add
mov
fisttp
(bad)
(bad)
(bad)
jmp
out
test
nop
popf
or
aad
and
and
dec
sbb
(bad)
(bad)
(bad)
(bad)
jge
or
sub
push
out
div
inc
jp
out
adc
fcomp
dec
dec
inc
repz
pusha
pop
mov
test
sub
into
imul
sbb
mov
mov
sar
(bad)
(bad)
jmp
retf
sub
dec
das
cld
xor
ret
push
mov
push
jle
(bad)
(bad)
(bad)
clc
xor
xchg
clc
inc
sbb
sbb
adc
sbb
imul
jp
mov
cmps
not
dec
push
cmps
inc
inc
lahf
aas
je
sub
les
fdivr
das
adc
or
mov
das
(bad)
(bad)
(bad)
dec
push
add
mov
iret
out
jae
adc
scas
mov
(bad)
(bad)
(bad)
(bad)
mov
push
adc
xor
ins
jg
and
inc
inc
inc
jle
mov
and
stos
(bad)
daa
add
lods
mov
xchg
sub
pop
inc
and
mov
js
rol
loopne
stc
(bad)
iret
cmps
push
call
ror
sub
in
sub
aam
mov
mov
ds
(bad)
(bad)
jmp
or
mov
jmp
ins
aas
cmp
cmc
jmp
fisub
push
mov
jmp
(bad)
push
jne
jge
push
mov
or
inc
shr
mov
aas
inc
xor
push
mov
int3
(bad)
push
push
fmul
mov
sub
cmps
inc
mov
fdivr
mov
mov
out
add
ror
or
out
push
sub
movs
cdq
(bad)
adc
push
adc
sbb
(bad)
(bad)
dec
stos
inc
xchg
and
ja
pop
pop
inc
(bad)
in
adc
jmp
push
rcl
shr
mov
jmp
mov
adc
out
xchg
xchg
push
mov
dec
mov
jmp
cmc
popa
loopne
jmp
aad
mov
inc
fstp
push
dec
sbb
jle
jl
(bad)
(bad)
(bad)
inc
movs
inc
into
mov
(bad)
hlt
and
push
xchg
pop
jmp
sti
dec
ds
nop
add
cmp
stos
adc
xchg
loopne
push
xor
and
sbb
(bad)
(bad)
(bad)
in
push
arpl
ds
jp
xor
out
or
mov
movs
mov
adc
jmp
sbb
fwait
rol
rol
push
loopne
(bad)
jg
mov
ins
sub
pop
outs
jle
out
fist
push
push
mov
(bad)
(bad)
mov
mov
and
sbb
inc
add
xor
in
push
jnp
add
mov
(bad)
cmp
or
into
add
mov
xchg
xchg
gs
popa
(bad)
call
or
test
frstor
into
sub
ud0
(bad)
dec
lock
jl
mov
loope
(bad)
cmps
mov
movs
ds
aad
mov
add
jmp
cli
push
dec
adc
iret
inc
jmp
aas
imul
jmp
jle
dec
jecxz
jg
dec
(bad)
(bad)
push
(bad)
inc
stos
out
xchg
push
mov
ret
mov
mov
mov
clc
(bad)
(bad)
jmp
(bad)
in
pop
fs
add
sub
inc
inc
and
adc
es
adc
fbstp
lods
add
cmps
iret
cmp
clc
fwait
add
xor
jmp
(bad)
mov
jg
sahf
lods
cmps
mov
fild
inc
xchg
jl
mov
(bad)
dec
dec
sbb
sbb
ss
(bad)
(bad)
inc
pop
xor
mov
mov
int
xor
sub
(bad)
call
and
dec
inc
sub
sbb
stos
das
inc
mov
int3
and
shl
push
mov
pop
shl
je
xchg
inc
pop
jp
retf
mov
cmp
inc
xchg
mov
pop
dec
ret
es
pop
sahf
pop
jle
(bad)
(bad)
aas
sbb
fstp
mov
aam
scas
xor
cld
pop
retf
xor
push
arpl
jge
fwait
add
int
sub
mov
jmp
(bad)
(bad)
dec
stos
pusha
push
pop
cmp
js
mov
mov
xor
lods
and
(bad)
inc
xchg
retf
fisttp
test
inc
retf
arpl
and
icebp
leave
mov
push
sub
(bad)
mov
ja
xchg
retf
(bad)
(bad)
(bad)
dec
ds
inc
push
mov
mov
mov
and
fldenv
xor
pushf
(bad)
(bad)
(bad)
dec
test
lahf
jo
fst
shl
mov
cmp
js
rcl
lea
push
(bad)
(bad)
mov
push
inc
inc
push
push
mov
fidivr
pop
push
arpl
in
shr
test
(bad)
js
std
repnz
add
lds
pop
cs
fimul
pop
dec
pop
or
retf
mov
arpl
test
push
push
js
push
(bad)
or
pop
jo
ds
inc
dec
test
popa
sahf
lods
adc
mov
mov
or
fnsave
test
jmp
push
lock
mov
mov
sbb
jecxz
inc
(bad)
(bad)
push
or
retf
dec
adc
ds
sub
cli
and
gs
idiv
(bad)
fisttp
repnz
inc
ret
mov
jbe
mov
push
mov
ds
aam
dec
into
pop
adc
pop
mov
ret
mov
jecxz
push
ins
ficomp
cmp
pop
fstp
movs
cdq
stos
retf
hlt
mov
stos
mul
push
mov
ins
(bad)
(bad)
(bad)
mov
pop
push
dec
aad
cmc
scas
cpuid
enter
test
mov
xor
adc
adc
pushf
scas
add
jmp
mov
sbb
daa
xor
stc
ins
mov
mov
add
mov
pop
mul
cmc
enter
pop
pop
popa
push
in
inc
mov
xor
fdiv
sub
or
ret
ins
pop
les
xor
cmps
jns
pusha
lds
(bad)
dec
sahf
addr16
outs
mov
enter
bnd
push
mov
bound
retf
adc
in
retf
adc
pop
int3
pop
inc
ss
xchg
fs
test
xor
jns
or
fwait
rcr
addr16
dec
ds
jl
push
sahf
pop
mov
or
mov
fwait
in
pushf
pop
loopne
into
xor
aas
mov
pop
mov
inc
je
ds
leave
repz
pop
shl
out
in
inc
xor
lock
aam
xor
xor
aad
pop
out
stc
dec
(bad)
add
xlat
iret
enter
fsub
jns
ds
jnp
sbb
fdiv
xor
cwde
jge
clc
jle
pop
enter
fidivr
sahf
dec
ds
aam
cmp
mov
test
sub
fbld
mov
xchg
in
stc
cmp
or
iret
xor
mov
nop
mov
js
in
out
test
mov
mov
xchg
mov
adc
enter
nop
inc
loopne
lds
pop
loope
loop
pop
dec
pop
aad
aas
in
in
(bad)
xor
mov
push
push
jae
pop
out
leave
neg
fsubr
jg
int3
in
fisubr
mov
loopne
cdq
add
out
shl
cmp
iret
fwait
loopne
pushf
adc
and
and
sub
mov
pusha
xchg
mov
cdq
movs
repnz
fnsave
call
jns
pop
test
and
iret
fldcw
arpl
inc
cmps
jbe
sub
shr
dec
jo
push
test
sti
dec
add
sub
add
sub
call
jb
popa
cmp
pop
mov
sbb
mov
rcr
pop
inc
inc
sbb
(bad)
mov
pop
ret
xchg
and
add
fs
iret
adc
push
push
gs
(bad)
hlt
jb
mov
ins
xchg
rol
mov
xchg
test
retf
imul
sbb
ins
jno
jo
xor
pop
(bad)
xchg
cld
mov
xor
xchg
mov
movs
sbb
cmps
fs
and
ja
cs
sub
jnp
cmp
aaa
push
or
push
pop
mov
iret
call
cmps
add
cmps
aaa
cwde
add
add
lahf
shl
push
idiv
ds
xor
inc
daa
add
lock
mov
add
add
daa
and
les
jbe
daa
dec
call
outs
mov
mov
nop
sub
add
sbb
add
mov
mov
or
ins
dec
lock
push
ret
inc
push
add
jae
(bad)
mov
test
test
fcom
push
and
pusha
or
pop
inc
pusha
rcr
mov
push
out
pop
repnz
or
add
cs
xchg
or
mov
aaa
test
xor
stc
fisub
js
add
mov
in
sbb
add
add
or
lahf
test
addr16
xchg
sub
leave
add
mov
sbb
mov
sbb
outs
xchg
outs
or
fs
sbb
and
outs
stc
addr16
sbb
cld
addr16
xchg
mov
or
outs
jb
xor
add
test
xor
sbb
pop
aad
sub
mov
mov
nop
mov
xchg
addr16
jo
fistp
test
mov
sar
cs
movs
add
pusha
addr16
jmp
pop
les
add
jmp
es
adc
lea
adc
iret
loopne
addr16
dec
es
mov
iret
add
daa
bound
mov
pop
scas
sbb
enter
cmps
add
test
mov
scas
fimul
in
test
addr16
test
adc
inc
dec
cmps
mov
pusha
inc
inc
stos
scas
mov
mov
scas
sub
leave
push
shr
scas
stos
push
addr16
stos
add
cmp
pop
ins
scas
lods
lods
mov
cmp
addr16
mov
scas
test
scas
push
nop
xchg
mov
addr16
(bad)
iret
test
adc
inc
scas
fimul
in
mov
or
mov
jg
pushf
(bad)
cld
data16
adc
add
mov
imul
mov
ss
mov
sbb
iret
push
nop
xchg
test
addr16
xchg
xlat
jno
scas
pop
cmp
int3
or
retf
pop
and
xchg
iret
mov
or
inc
addr16
ins
das
mov
adc
mov
iretw
dec
add
int3
in
xchg
pushf
push
into
or
mov
iret
push
nop
xchg
xchg
addr16
(bad)
fcmove
adc
dec
(bad)
pop
sub
xor
nop
shl
adc
or
test
in
push
and
cmp
loop
popa
mov
and
inc
dec
push
aam
rol
data16
push
aad
mov
jb
(bad)
daa
lds
mov
shr
dec
sub
es
rcl
cmps
lahf
in
add
add
lahf
jb
xor
pop
mov
aaa
xchg
test
dec
and
push
nop
xlat
or
or
ss
addr16
mov
fcomp
ss
push
mov
inc
fwait
daa
and
in
inc
add
or
iret
nop
nop
mov
loop
pop
addr16
sbb
cmps
sub
inc
push
cmps
(bad)
mov
cmp
repnz
or
sahf
pop
enter
ficom
lahf
addr16
xchg
or
in
xchg
mov
mov
aas
addr16
xor
inc
and
xor
inc
xchg
add
rcr
and
nop
sub
cld
dec
dec
frstor
add
dec
push
or
scas
loope
mov
pop
add
in
shl
data16
out
out
nop
daa
xchg
mov
nop
jecxz
in
inc
cmps
sub
packssdw
pop
out
daa
nop
push
enter
and
repnz
in
(bad)
mov
cwde
cmp
pop
xor
inc
clc
and
push
aaa
js
shl
sub
outs
sub
cmps
add
dec
iret
sbb
and
add
shr
fld
sub
daa
or
xor
and
cmp
mov
jmp
inc
ja
pusha
in
out
dec
int
add
mov
xchg
add
movs
and
dec
sbb
add
jns
dec
inc
inc
inc
mov
push
retf
mov
ins
movs
lods
movs
mov
ror
(bad)
push
dec
jmp
lock
pop
(bad)
xchg
dec
or
dec
jae
pop
in
ret
arpl
pop
pop
dec
ins
add
movs
comiss
mov
pop
ins
fs
in
loope
retf
xchg
ds
fnstsw
test
ins
sbb
ins
popf
add
je
cmp
cld
pop
xchg
xor
aaa
cmp
push
xchg
bound
outs
ss
fsub
shl
aas
aad
add
daa
test
inc
ins
and
mov
inc
loopne
xchg
lods
stos
and
and
sbb
pop
outs
sub
gs
int
mov
in
fwait
outs
popa
jne
mov
aam
push
push
or
cmps
imul
and
mov
and
ins
inc
mov
ins
aad
std
imul
pop
lock
and
sub
push
out
ds
push
and
fsub
dec
aad
push
mov
mov
popf
das
inc
stos
mov
add
(bad)
jne
pop
add
and
mov
and
add
retf
mov
mov
cs
add
sbb
xor
cmp
sub
call
or
ins
shl
leave
or
jg
push
sar
sub
push
mov
mov
and
ss
push
push
add
inc
das
fcomp
ds
(bad)
ss
sub
(bad)
pop
test
pop
xchg
xchg
retf
push
shl
cwde
add
and
test
inc
mov
xchg
out
inc
shr
mov
test
dec
fnstsw
xor
fidiv
imul
inc
in
pop
dec
ins
popa
jae
ret
mul
add
jnp
ret
inc
gs
mov
aaa
outs
aad
imul
mov
xchg
pop
jecxz
stos
or
or
outs
aas
adc
mov
inc
fimul
mov
retf
inc
push
and
add
imul
xchg
or
xor
or
dec
scas
or
cmp
xchg
mov
or
popa
dec
ret
nop
and
or
outs
sti
xor
inc
sub
dec
inc
push
dec
push
mul
or
dec
inc
pop
mov
inc
dec
dec
dec
inc
push
dec
push
pop
mov
add
inc
mov
pop
push
push
pop
mov
push
pop
scas
pop
push
push
push
fcom
cmp
pop
seta
inc
dec
push
lea
inc
xchg
pusha
adc
mov
dec
sub
push
enter
or
in
dec
(bad)
sub
push
xor
in
push
inc
pop
dec
ja
pusha
and
xchg
pop
push
ss
mov
sub
sub
mov
and
pop
add
xchg
xchg
xlat
sbb
inc
pusha
dec
xor
cmp
pop
loop
inc
and
pop
push
not
xchg
xchg
stos
aaa
add
xchg
xchg
sub
add
add
push
push
inc
sub
mov
cmp
or
pop
leave
enter
sbb
leave
leave
xchg
pushf
pop
fcomp
leave
xchg
pushf
pop
rcr
xchg
pushf
pop
leave
sbb
push
mov
mov
test
outs
out
dec
dec
xchg
push
and
pop
cmp
daa
inc
repnz
sub
dec
push
sub
dec
ins
fwait
cmp
mov
out
sub
pop
sbb
mov
neg
or
cmovbe
cmp
hlt
enter
mov
scas
xlat
scas
inc
push
pop
int
add
jmp
sbb
jp
inc
sub
xchg
ror
bound
lea
adc
and
or
add
or
inc
or
cwde
mov
push
inc
or
(bad)
or
xchg
fbstp
xor
xor
jnp
xor
xor
aaa
xor
xor
cmp
pop
test
jne
xor
add
sbb
ins
or
and
pop
out
out
outs
jle
add
pop
mov
outs
push
mov
enter
push
enter
or
dec
scas
add
push
js
or
sub
xchg
aaa
cmp
test
ins
lea
dec
adc
add
je
push
adc
and
xor
pop
aaa
push
or
xlat
out
push
daa
hlt
iret
add
mov
out
adc
or
in
shr
mov
fwait
or
push
push
xchg
push
stc
outs
pop
pop
fmul
sub
or
inc
push
mov
ds
cmps
sub
in
add
fsubr
or
add
mov
cmp
nop
rcr
push
enter
push
scas
xor
adc
mov
and
xchg
mov
lahf
adc
iret
rol
jle
push
inc
or
xchg
repz
push
inc
or
leave
shr
movs
add
adc
aam
mov
dec
aas
adc
mov
inc
loope
js
rcr
dec
add
fld
cwde
rcr
add
dec
inc
dec
mov
add
mov
popa
sbb
push
leave
xlat
fs
sub
lods
rol
mov
mov
or
rcr
fdivrp
ror
adc
or
mov
test
mov
aaa
jmp
push
inc
imul
inc
in
pop
mov
pop
pop
push
sub
in
and
sbb
gs
dec
dec
xchg
repnz
out
adc
and
outs
adc
pop
ins
aaa
int3
jg
push
add
shl
and
dec
and
push
pop
or
cmp
ror
xchg
push
mov
inc
fstp
inc
(bad)
add
clc
add
into
fadd
jle
xor
or
push
jne
pusha
movs
fild
scas
xchg
loopne
and
jo
out
adc
nop
mov
adc
mov
mov
outs
mov
fcom
int3
mov
mov
push
aad
aam
daa
fstp
aad
and
aaa
nop
cmp
retf
lea
lds
push
pop
cmp
inc
dec
inc
retf
push
enter
push
cmc
push
outs
cmp
push
pop
cdq
movs
push
push
jne
pop
ins
xor
rcr
std
mov
push
js
xor
add
sti
test
push
and
in
pop
mov
mov
lods
addr16
imul
movs
lds
inc
call
pop
xchg
cmp
add
push
xchg
pop
jb
loop
int3
(bad)
adc
jb
fcom
rcr
xchg
cmp
mov
add
or
in
int
movs
daa
xchg
dec
repz
(bad)
jo
dec
xchg
imul
idiv
dec
add
pop
add
frstor
dec
pop
mov
and
enter
daa
adc
add
cmps
inc
xchg
dec
xchg
or
in
hlt
aad
nop
inc
scas
mov
xor
mov
push
dec
and
scas
out
mov
push
popw
or
scas
mov
pusha
push
sub
jecxz
sub
ja
mov
popa
add
and
test
jae
imul
or
ja
add
pmaxub
and
xchg
add
(bad)
pop
push
push
mov
pop
pop
movs
ss
mov
ret
mov
fnstcw
outs
popf
mov
sub
xor
(bad)
shl
jecxz
enter
les
repnz
dec
fisubr
push
(bad)
lock
mov
dec
dec
add
outs
mov
pop
movups
movs
pop
cmps
or
movs
data16
lea
xor
mov
pop
fld
pop
mov
jecxz
aas
fld
ins
add
pop
xor
(bad)
sbb
es
fld
push
xchg
aad
xchg
or
cmp
push
add
sbb
mov
push
adc
scas
push
int3
or
or
jp
inc
add
js
retf
(bad)
and
mov
mov
ja
add
je
loopne
mov
in
fcmovnb
jb
cwde
test
or
fadd
sub
int3
lea
cmps
out
(bad)
iret
daa
loope
enter
fcom
(bad)
cmp
or
outs
cmps
add
inc
inc
cmp
fidiv
push
fs
and
data16
inc
cmps
push
sbb
pop
pshufw
add
aam
imul
push
mov
add
add
inc
mov
inc
push
jg
add
add
das
jae
fldcw
pop
inc
inc
pop
retf
pop
mov
dec
xchg
push
pop
outs
sub
inc
outs
fcomp
inc
cs
push
aad
cmp
fidivr
jbe
jae
popf
sbb
mov
ins
or
pop
inc
inc
inc
xchg
push
mov
fdiv
push
and
jo
pop
(bad)
and
stos
fisub
ins
nop
jbe
ja
es
and
jp
call
xor
mov
loop
pop
leave
dec
not
data16
xchg
adc
mov
and
and
aam
test
push
pop
popa
data16
cmp
dec
cmp
sbb
leave
inc
and
inc
mov
jnp
in
inc
pop
dec
movs
fld
xor
outs
jne
push
push
mov
push
mov
js
ror
mov
jmp
fist
jns
out
push
push
inc
add
and
add
fisubr
repz
mov
pushf
repz
repz
js
or
inc
jmp
sbb
adc
outs
mov
les
mov
and
pop
sbb
add
outs
loopne
mov
mov
ds
xchg
add
mov
int3
mov
fucomp
les
sbb
in
inc
mov
and
mov
ret
nop
loope
ds
lock
loopne
aaa
push
inc
mov
sahf
push
cs
scas
inc
test
daa
xchg
cwde
and
fisttp
aaa
cmp
fiadd
add
sbb
mov
jg
or
or
imul
or
push
xor
sub
add
push
lock
fcmovu
push
movs
cdq
or
ins
or
in
dec
and
outs
xchg
retf
xchg
ins
test
cmp
test
and
lods
add
loop
movs
add
iret
pop
mov
adc
xor
inc
push
mov
jo
mov
or
jecxz
aam
lock
lahf
iret
nop
jmp
cmps
pop
outs
push
outs
add
cmp
arpl
pop
push
adc
inc
dec
push
mov
mov
sub
dec
push
aas
xor
(bad)
bound
pop
out
mul
or
cmps
out
adc
add
xlat
hlt
jecxz
pop
pop
and
outs
in
sub
iret
adc
dec
jbe
fsub
jno
addr16
ds
inc
sbb
or
scas
das
mov
jecxz
cmp
lods
and
push
aaa
push
push
cs
dec
adc
mov
lahf
adc
xor
pop
dec
imul
scas
jbe
cmps
push
dec
ss
aaa
jae
popa
dec
lahf
arpl
or
imul
pushf
mov
push
pusha
daa
lods
ja
dec
mov
xchg
aas
adc
test
inc
and
scas
inc
movs
mov
fs
or
sub
xor
or
push
dec
push
jno
fadd
aaa
and
jbe
inc
in
adc
ja
or
xchg
pop
or
sbb
out
nop
sbb
out
call
push
out
paddq
mov
scas
scas
push
ror
pop
out
outs
mov
inc
mov
push
pop
cmp
pop
in
pop
cmp
mov
xor
cmps
mov
jo
adc
mov
or
jbe
into
or
mov
jo
int3
push
push
inc
push
scas
sub
dec
inc
dec
fldz
ins
mov
push
push
push
inc
pop
xor
loope
push
add
and
pop
into
add
loope
es
movs
inc
xor
out
out
mov
ret
pop
xchg
pop
add
pop
inc
mov
outs
xchg
jo
and
xchg
jo
mov
pop
ja
loopne
ret
add
sbb
xchg
outs
jae
in
pop
push
cmp
adc
gs
push
or
rol
and
xchg
es
out
sub
loopne
cmp
aas
jmp
xchg
out
loopne
push
jbe
repz
add
inc
leave
rep
fst
int3
ja
push
ror
repnz
push
mov
lods
ja
cmp
out
pop
inc
test
cwde
sets
iret
sbb
iret
enter
inc
cmps
ja
jns
aaa
ins
push
or
push
in
dec
sahf
push
add
(bad)
push
pop
inc
in
ins
fst
cmp
scas
push
or
es
in
sub
push
and
adc
sbb
pop
clc
call
out
adc
in
or
call
aaa
jns
fcom
int3
or
daa
sbb
sbb
push
aaa
jns
adc
pop
sbb
adc
mov
test
outs
iret
scas
pop
add
inc
or
mov
repnz
fucom
cs
je
add
leave
jae
fs
pop
add
iret
repz
add
dec
push
test
or
push
push
mov
push
iret
aad
aad
and
push
dec
clc
in
scas
sahf
popa
addr16
test
adc
adc
or
push
stos
je
jae
mov
jb
pcmpgtw
dec
iret
fcompp
xchg
pop
in
xchg
push
dec
dec
push
jns
xor
mov
pop
jmp
jg
shl
popw
jl
test
ror
das
daa
add
dec
jns
inc
push
cmps
daa
inc
mov
jbe
out
lock
daa
nop
cmovg
inc
sahf
fnop
daa
xchg
popa
xchg
cs
nop
sub
sub
xchg
bound
shl
push
iret
addr16
mov
daa
add
fwait
mov
add
fnstcw
add
leave
leave
and
mov
pop
jb
and
daa
xchg
sub
imul
add
in
scas
adc
rcl
cmp
rcl
popa
gs
je
and
dec
daa
push
dec
mov
fwait
jb
push
jmp
in
add
xchg
xor
outs
pop
mov
lods
pop
xor
mov
mov
xor
imul
sbb
call
xor
jae
shr
jmp
push
aam
out
mov
repz
idiv
mov
push
sbb
fidiv
pop
push
call
daa
clc
push
fadd
jnp
repz
inc
lods
push
cwde
xor
adc
or
jae
push
adc
sub
fistp
aad
or
or
dec
rcr
inc
mov
jmp
lds
sub
mov
inc
dec
dec
and
sub
sub
addr16
mov
leave
cmp
add
and
mov
pop
cmp
jecxz
mov
bound
push
push
xchg
test
ins
jmp
pop
sub
js
cs
or
loope
add
or
in
mov
pop
inc
xor
popa
add
push
xchg
adc
pop
movs
inc
and
add
icebp
ret
or
popa
pop
je
mov
arpl
or
jbe
scas
ja
push
cmp
and
or
push
xor
rcl
addr16
inc
fisubr
add
cmp
jnp
adc
imul
rcr
add
sbb
mov
imul
cmp
xor
ret
test
and
outs
mov
das
test
dec
dec
call
aas
test
sub
loope
jmp
dec
add
jg
sub
inc
dec
or
daa
add
or
das
ins
fldcw
sub
in
lods
(bad)
sbb
cmp
xor
xor
sbb
daa
and
daa
ret
cmps
shl
pop
xor
sbb
pop
and
adc
out
adc
inc
cmps
push
xor
push
dec
pop
xor
jnp
in
pop
popf
inc
and
(bad)
es
fistp
mov
push
loop
jo
ret
pushf
outs
pop
jecxz
(bad)
pop
pusha
xor
das
mov
fist
dec
das
test
test
fcmovnb
outs
and
les
jno
in
in
daa
mov
outs
jecxz
sub
jne
in
mov
add
ficomp
retf
jo
or
xor
fcom
add
daa
mov
daa
imul
mov
mov
cmp
or
add
adc
pusha
mov
or
xor
xor
dec
add
aaa
mov
enter
call
pop
adc
cmp
fldenv
inc
ret
push
or
mov
mov
sar
push
aaa
aaa
xor
pop
xchg
daa
mov
or
mov
aad
mov
add
and
dec
xchg
xchg
ins
mov
(bad)
mov
das
addr16
and
or
sbb
out
shl
sbb
mov
sbb
fidiv
loopne
jmp
inc
cmp
xchg
add
into
jae
or
push
dec
cmp
inc
ret
mov
dec
dec
and
pop
fcomip
or
and
dec
pop
imul
call
push
push
inc
xchg
mov
mov
rcl
push
loope
cmc
jbe
pop
daa
or
fmul
imul
pusha
aaa
and
xchg
movs
mov
and
cmps
sub
or
in
adc
pop
and
push
push
loop
xchg
outs
sbb
push
jne
xchg
xor
mov
test
(bad)
aaa
mov
pusha
in
stos
pop
xchg
out
or
fimul
sbb
daa
push
repz
test
bound
repz
ja
mov
daa
aas
je
cmp
retf
or
imul
or
dec
inc
sbb
and
inc
dec
mov
mov
ss
aas
inc
inc
or
adc
and
fdivr
cli
inc
adc
add
dec
lods
loopne
mov
inc
inc
push
or
aas
inc
mov
jo
push
pop
fidivr
push
popa
dec
jb
imul
mov
cdq
inc
fimul
mov
scas
aas
(bad)
aad
push
xor
push
push
fld
adc
jno
mov
and
add
jnp
adc
(bad)
sbb
cmp
xor
ds
inc
inc
call
add
dec
dec
adc
test
jg
pop
(bad)
cmc
out
add
or
mov
aas
mov
lock
shr
sbb
adc
pop
cmp
shl
and
push
adc
sbb
and
inc
and
aaa
inc
neg
ja
(bad)
sahf
nop
test
ins
aas
out
pop
ins
sub
sbb
sbb
pop
sub
add
fistp
ins
imul
aaa
fs
ins
add
aaa
adc
outs
pop
aaa
ret
fdivr
pop
xor
mov
mov
adc
lahf
inc
jae
enter
aaa
fst
jecxz
inc
inc
inc
xor
dec
inc
stos
or
xchg
add
cmp
das
loope
mov
pop
pop
xor
fisttp
mov
rol
jmp
mov
adc
dec
dec
mov
xchg
mov
daa
aaa
pop
(bad)
jbe
imul
pop
addr16
adc
add
sub
dec
xchg
and
popa
inc
mov
aad
xchg
scas
sahf
push
ss
push
outs
sub
pop
push
(bad)
push
inc
ja
add
das
add
fistp
sub
sbb
in
xchg
mov
jb
daa
iret
jecxz
pop
imul
sahf
cmc
cmc
and
xchg
mov
das
pop
add
or
inc
xchg
pop
xlat
outs
push
sub
mov
(bad)
pop
fs
jecxz
xchg
adc
outs
call
outs
int3
xchg
mov
das
sub
lods
outs
sub
push
add
mov
add
xor
fild
cmp
gs
jmp
daa
or
sub
or
ret
and
sbb
inc
add
aaa
fcmovu
xchg
push
push
std
pop
popf
outs
mov
sbb
pop
xchg
lea
xchg
stos
jne
movs
and
dec
sbb
and
dec
and
rol
(bad)
mov
popa
sbb
fistp
out
cmp
push
daa
jmp
imul
or
push
ins
aaa
aas
mov
popa
test
jno
jb
adc
mov
or
cli
fs
outs
jne
xor
or
push
bound
pusha
jnp
daa
and
jo
xchg
rol
jp
mov
pop
popa
dec
or
pop
add
adc
jae
dec
inc
daa
and
jecxz
popf
daa
in
mov
sbb
inc
push
pop
lock
sbb
int3
adc
cmp
push
(bad)
mov
rcr
bound
pop
pop
stos
adc
std
pop
sahf
xor
aaa
dec
dec
sbb
gs
ja
rol
pusha
adc
repz
fild
push
add
retf
gs
mov
aas
push
pop
adc
or
imul
mov
or
or
test
xor
test
mov
loopne
sub
loopne
jbe
arpl
sub
pop
std
inc
jp
adc
bound
rcl
ins
sbb
inc
push
inc
or
daa
adc
addr16
es
dec
sbb
cmp
iret
fmul
outs
xchg
sbb
arpl
pop
daa
push
daa
mov
pushf
xchg
pusha
stos
sbb
inc
popa
or
dec
pop
sub
push
mov
iret
ins
xchg
pop
adc
stos
push
push
mov
test
push
push
dec
fld
mov
test
data16
cmps
mov
mov
shl
rcr
rcr
addr16
lock
mov
shl
sub
leave
and
gs
in
pushf
pusha
add
imul
mov
pushf
ins
add
inc
jno
cmps
sbb
clc
ror
clc
adc
dec
dec
inc
inc
out
pop
or
mov
sbb
das
ret
add
xchg
cmp
cmp
xchg
push
mov
adc
push
dec
or
or
pop
sub
das
inc
inc
push
sub
sbb
das
ret
fcmovbe
adc
jne
push
push
js
fistp
jb
cmp
or
loop
outs
adc
sbb
adc
add
ret
fnstenv
mov
ret
or
xor
dec
mov
ret
push
pop
cmp
mov
mov
sahf
adc
ins
push
sbb
imul
pop
add
addr16
push
mov
push
inc
jle
push
dec
dec
(bad)
(bad)
scas
(bad)
jmp
push
das
pop
push
aam
push
pop
pop
mov
add
rcr
pop
aas
mov
dec
inc
loope
sbb
inc
pop
jp
mov
jns
das
movs
pop
inc
dec
adc
pop
mov
das
cmp
ins
add
cmps
inc
rcl
mov
popa
ja
push
push
mov
add
sub
fisttp
popa
gs
lahf
mov
mov
sbb
scas
stos
daa
imul
out
sahf
test
ret
mov
pop
jne
rcl
xchg
xor
add
xchg
ins
(bad)
dec
ins
aaa
retf
leave
shr
and
gs
xor
push
fwait
es
lods
loope
push
daa
adc
add
out
jbe
xor
mov
add
outs
int
(bad)
dec
aas
lods
add
pop
ret
mov
xchg
inc
cmp
add
and
add
pop
popa
dec
fadd
ret
call
hlt
ins
add
pop
and
outs
lds
and
pop
or
imul
imul
sbb
daa
sbb
movs
test
dec
push
stos
lods
cmp
das
lods
pop
adc
mov
daa
adc
sub
and
push
sti
fsubr
mov
fidiv
in
pop
sar
add
pop
jbe
pop
xor
push
adc
arpl
adc
push
and
ins
fdiv
daa
inc
ds
bound
daa
adc
aaa
aaa
pop
aaa
push
inc
sbb
cmps
test
das
pusha
cmp
or
and
sub
test
dec
and
(bad)
addr16
mov
jp
adc
push
arpl
sbb
das
push
dec
das
outs
je
jecxz
daa
cmp
in
dec
push
inc
into
dec
fnstcw
adc
adc
jge
pop
pop
push
ins
push
mov
aaa
ins
fwait
pop
mov
jbe
pop
pop
sub
add
mov
pop
ja
rcr
mov
mov
pop
ret
push
xchg
mov
push
push
or
inc
fs
xchg
push
pop
clc
cmps
dec
movs
mov
sub
add
popa
adc
dec
push
jle
or
test
pop
bound
lea
daa
mov
ficomp
outs
mov
sbb
inc
pop
ins
rcl
sbb
sbb
pop
add
popa
inc
leave
fs
or
or
fwait
test
aam
mov
mov
dec
or
aam
and
imul
mov
into
cmp
sbb
int3
clc
out
or
xlat
inc
fadd
addr16
stc
adc
dec
push
jmp
mov
jne
sub
movs
cmp
scas
jbe
cmp
cmp
(bad)
adc
retf
xchg
lods
mov
inc
int
pushf
jne
mov
mov
test
lea
lahf
xchg
mov
dec
addr16
add
lahf
sbb
pop
mov
or
(bad)
mov
xlat
mov
xor
movs
sbb
mov
loope
or
xchg
div
nop
rol
dec
push
inc
cmps
(bad)
jmp
push
das
dec
shl
rcr
inc
mov
push
pop
fwait
sbb
inc
cmp
mov
pushf
inc
or
fidiv
or
push
stos
call
mov
inc
adc
pop
sti
add
mov
pop
or
out
pop
or
and
dec
xchg
sbb
inc
add
pusha
xor
cmps
out
bound
inc
add
push
push
xchg
pop
ret
sub
pop
aas
outs
addr16
or
stos
and
mov
mov
movs
int
out
pop
pop
sub
pop
lods
push
dec
test
pop
mov
xor
add
dec
movs
pop
outs
ret
movs
mov
es
ret
mov
push
dec
pop
fwait
mov
in
outs
inc
inc
inc
dec
movs
pop
lods
xchg
lods
mov
imul
mov
mov
pop
int
inc
dec
adc
mov
mov
pop
xchg
pop
xchg
daa
xchg
adc
stc
add
pop
mov
stos
push
(bad)
pop
cli
lahf
and
dec
sar
jb
push
aaa
add
push
push
xor
nop
fadd
fiadd
out
inc
inc
or
adc
dec
inc
cmp
cmp
add
and
cmp
xchg
pop
iret
jg
pop
cmps
loopne
jo
adc
imul
pop
dec
popaw
jnp
pop
lea
adc
ror
jb
imul
daa
cmps
daa
shl
pop
ja
das
fsub
sub
fs
ins
dec
xchg
mov
mov
inc
jg
xchg
(bad)
rcr
(bad)
sub
push
push
push
pop
lea
popa
jo
sub
inc
lahf
int3
ret
xlat
pop
outs
sub
out
cdq
das
popa
sub
lods
ja
ins
add
addr16
js
shl
adc
sbb
xchg
fldenv
pop
add
lds
test
das
xchg
mov
sbb
mov
stc
or
or
imul
pop
pusha
in
arpl
sbb
mov
xchg
sbb
sub
rol
daa
je
ficom
push
dec
int3
inc
adc
or
daa
cmp
lea
xor
imul
nop
xor
add
adc
inc
repz
sbb
sbb
cwde
lea
(bad)
inc
iret
xchg
gs
pop
mov
in
push
lods
add
lods
das
add
in
aaa
nop
adc
aaa
mov
scas
test
xchg
xor
inc
cmp
pop
add
inc
or
push
packuswb
int
sbb
jg
das
movs
inc
pop
mov
push
add
add
mov
outs
jae
adc
ror
xor
or
add
push
test
jnp
pop
out
dec
pop
call
daa
sahf
add
xchg
bound
adc
sub
rol
pusha
or
addr16
push
pop
fiadd
adc
outs
push
xor
sbb
sub
aam
add
cmovg
fldenv
cmp
pop
sbb
das
xchg
and
test
pop
cmp
loope
ret
(bad)
jnp
and
add
sbb
xor
out
pusha
adc
pusha
sub
aas
sub
aaa
mov
mov
lods
pop
daa
push
add
fld
add
inc
and
mov
pop
pop
add
jl
es
inc
arpl
xor
jbe
inc
pusha
cdq
push
pop
shl
aad
sar
pop
dec
sub
fwait
dec
push
mov
adc
push
jg
call
jmp
adc
test
jmp
lods
pop
addr16
lea
xchg
xchg
test
das
mov
ret
jne
inc
mov
inc
fcmovb
add
daa
sub
xor
cmp
fmul
and
add
lods
jmp
lea
sub
outs
pusha
push
cmp
das
inc
js
add
adc
ss
adc
bound
push
aam
cmp
sbb
push
push
dec
fmul
daa
push
daa
push
xor
xchg
sbb
fwait
push
daa
cwde
movs
jo
mov
push
das
sbb
(bad)
xchg
leave
daa
iret
push
xchg
push
arpl
ss
cdq
xor
pop
pusha
push
sbb
pop
sbb
or
das
pop
inc
lods
test
xor
push
movs
push
sub
or
add
jb
lock
adc
jp
sub
sbb
push
xor
clc
aam
mov
push
add
into
push
push
dec
push
daa
dec
sub
repz
mov
stc
movs
addr16
xor
mov
cli
xor
inc
push
add
inc
xor
stos
fild
cmp
pop
ins
pop
mov
inc
xchg
pop
push
das
jmp
mov
ins
cmps
frstor
push
mov
push
das
pop
js
rcr
daa
xchg
jmp
jno
maxps
dec
cli
xchg
push
mov
inc
push
sub
mov
shl
dec
imul
daa
rcl
fiadd
and
adc
push
cmp
inc
sbb
pusha
jno
push
rcpps
mov
pop
jg
xchg
add
(bad)
fmul
(bad)
das
pop
jg
in
xor
dec
ucomiss
cmp
add
and
(bad)
aad
mov
sahf
add
xchg
(bad)
cs
push
ss
push
xor
js
xor
cmps
jae
inc
repnz
das
dec
xor
sbb
dec
pop
in
(bad)
(bad)
push
jg
mov
dec
enter
stc
sbb
xor
test
test
dec
push
push
inc
pop
int3
and
fidiv
push
lods
mov
jmp
sbb
jl
addr16
sti
and
dec
jl
push
dec
ins
mov
retf
cmp
popa
mov
pop
dec
jg
push
pop
adc
xor
pop
pushf
mov
dec
arpl
xor
ins
pop
shr
das
ins
adc
dec
push
adc
add
mov
mov
mov
sub
popa
imul
add
cmp
push
leave
das
out
(bad)
and
jg
adc
inc
(bad)
repz
pop
sub
(bad)
(bad)
fild
push
mov
scas
cmp
ins
imul
aaa
retf
inc
mov
sub
push
das
fs
add
push
arpl
push
inc
iret
xchg
add
mov
mov
sbb
(bad)
cmc
das
daa
or
jo
adc
test
pop
pop
add
stos
pop
das
inc
inc
or
and
mov
push
int
xchg
ss
sbb
sub
sbb
(bad)
adc
gs
inc
gs
sub
push
xor
and
push
add
pop
out
inc
loopne
fst
ficomp
rcl
jmp
in
sbb
cmp
dec
rcr
test
dec
js
xor
in
movs
dec
pop
xor
sbb
pop
mov
das
pop
popf
mov
pop
xchg
daa
imul
ins
daa
sub
fisubr
sbb
popf
jne
inc
mov
mov
std
daa
and
fsubr
mov
cmps
adc
mov
jb
sub
gs
push
ret
push
pop
or
repnz
(bad)
call
xor
cwde
push
fidiv
add
pop
(bad)
test
xchg
test
mov
and
mov
xchg
fisub
addr16
lods
lods
sbb
dec
int3
pusha
lods
pop
loope
push
push
fisubr
or
or
cmp
repz
add
nop
inc
jl
adc
dec
mov
add
adc
lock
addr16
into
ds
xchg
push
cdq
adc
inc
sub
push
clc
add
adc
jnp
jp
inc
outs
sbb
test
sbb
sub
dec
adc
adc
xor
push
xor
adc
js
xor
push
fisttp
mov
sahf
stc
test
pushf
pop
or
dec
pop
es
push
(bad)
jbe
push
lods
dec
imul
xchg
es
sub
fwait
data16
pop
fcmovnu
sbb
sbb
addr16
movs
aam
es
pop
adc
pop
ins
add
cmps
or
and
dec
sub
dec
and
sub
jge
add
push
(bad)
dec
inc
dec
loope
ficomp
add
cmps
inc
clc
mov
adc
sub
mov
sub
adc
call
jae
cmp
arpl
idiv
pop
add
mov
sbb
cld
(bad)
sub
pop
xchg
add
jo
je
mov
jge
outs
imul
add
pop
xor
pop
daa
ins
mov
push
nop
scas
pop
daa
xchg
pop
lock
cmpxchg
pop
mov
jne
jnp
pop
out
push
int3
xor
pop
mov
or
add
add
pop
adc
mov
or
dec
xchg
jo
daa
daa
iret
push
loopne
pusha
scas
cmp
inc
inc
ins
scas
movsx
dec
mov
addr16
inc
pop
call
les
inc
or
aaa
or
(bad)
rol
adc
jl
fldenv
adc
sbb
aad
pop
(bad)
(bad)
(bad)
aam
popa
lods
pop
pop
inc
jg
or
push
daa
mov
mov
mov
xor
mov
push
xlat
stos
pushf
daa
retf
mov
retf
daa
mov
jne
mov
sub
jl
das
adc
mov
dec
pop
cmp
xchg
(bad)
add
(bad)
fisubr
out
jae
shl
pop
adc
fcom
loope
js
push
ins
mov
pop
pop
xor
fld
lea
fsubr
test
jns
pusha
or
or
mov
and
int
xor
mov
mov
in
(bad)
mov
pop
pushf
add
xor
sbb
ins
daa
mov
aaa
cmp
fcom
sbb
push
out
push
sub
sub
mul
and
ss
fcmovu
sub
xlat
lahf
daa
cmp
fadd
popa
pop
xchg
mov
mov
sub
sbb
lea
mov
inc
(bad)
rol
mov
(bad)
push
out
das
add
mov
mov
push
iret
or
jg
lea
rcl
es
das
fadd
aaa
data16
iret
jmp
pusha
in
add
iret
bound
or
inc
pop
xchg
arpl
loope
mov
mov
(bad)
(bad)
into
sub
dec
xchg
add
or
cmps
add
daa
pop
push
sub
leave
repz
cmp
inc
test
mov
sbb
pop
ficomp
inc
and
or
pop
xor
movs
inc
pusha
test
repz
mov
daa
div
adc
into
adc
jno
sbb
outs
sbb
push
xor
sub
xor
das
xor
xor
dec
sbb
inc
ret
push
inc
xchg
daa
dec
rcr
mov
or
and
xor
add
dec
inc
inc
js
fmul
xor
das
sbb
dec
add
push
add
inc
pop
stos
mov
push
push
dec
jmp
bound
sbb
dec
mov
pop
xchg
pop
push
xor
scas
stc
pop
inc
inc
jo
icebp
mov
mov
push
dec
cmps
mov
add
stos
lds
inc
xchg
adc
(bad)
add
or
ret
pusha
cmps
mov
push
outs
cwde
ins
dec
and
xor
sub
or
inc
sti
add
mov
mov
fs
addr16
stos
das
addr16
fadd
mov
mov
ins
test
cs
sub
add
push
sbb
in
pop
aas
inc
popa
mov
add
sub
arpl
shl
jg
push
dec
fcom
inc
test
sbb
inc
add
add
adc
fstp
movs
push
and
ins
adc
shr
stc
repz
mov
jns
or
fadd
xor
xchg
es
xchg
popa
pop
aas
bound
or
aas
retf
ret
and
add
das
shl
out
addr16
ret
das
imul
loope
sub
pop
pop
mov
push
test
dec
add
push
push
xor
push
clc
std
test
xchg
dec
adc
inc
or
enter
sbb
aaa
push
pop
mov
cmp
push
mov
ret
inc
inc
sub
mov
jmp
std
mov
mov
cs
addr16
pop
ins
push
lods
or
add
and
lods
das
and
aaa
rol
out
adc
daa
mov
ret
push
dec
outs
js
xor
mov
jno
lods
push
sbb
das
push
das
mov
repz
fcomp
cdq
aaa
outs
inc
pop
adc
dec
pop
xlat
adc
daa
fidiv
xlat
xor
bound
nop
xor
xor
test
test
mov
outs
outs
aaa
or
push
pop
stos
jge
xor
(bad)
push
(bad)
push
pop
mov
aaa
mov
mov
adc
addr16
movs
jbe
out
aaa
xor
sub
sbb
dec
dec
xchg
inc
dec
inc
pop
mov
dec
jb
push
adc
aaa
pop
inc
pop
and
daa
cmp
dec
lahf
adc
mov
aaa
xor
fisubr
jge
xor
xor
adc
aaa
jb
inc
dec
inc
das
xchg
ds
jmp
sbb
shl
mov
rcr
jbe
in
xor
xor
add
and
add
cdq
jmp
in
jecxz
mov
div
pop
in
xor
jae
mov
ss
repz
lods
sub
das
sbb
js
add
adc
mov
(bad)
pop
mov
mov
daa
les
xor
xor
inc
dec
sub
inc
inc
mov
ss
push
daa
push
daa
in
lea
sti
adc
aam
pop
enter
sti
call
test
shl
xor
nop
dec
(bad)
jmp
mov
daa
call
push
fcom
adc
test
add
lods
xchg
test
daa
repnz
movs
dec
pop
(bad)
daa
fs
xor
fiadd
movs
pop
xchg
sub
js
dec
push
add
or
ret
and
out
cmp
test
pop
or
out
push
push
pop
dec
(bad)
out
xchg
xor
add
mov
cmp
ins
add
imul
xchg
daa
dec
push
mov
inc
lahf
xor
pop
das
movs
lds
push
or
pop
fadd
cs
loope
push
jne
pusha
xor
addr16
movs
pop
pop
outs
dec
and
loopne
and
and
pop
das
sub
and
aas
(bad)
cmp
adc
div
mov
imul
xchg
push
fmul
(bad)
mov
xchg
xor
movs
mov
jo
fstp
imul
popf
cmps
test
adc
jbe
jne
push
add
jmp
in
sbb
icebp
mov
pop
retf
das
pop
jbe
ins
adc
fist
jne
add
movs
popa
leave
daa
dec
dec
dec
jno
call
lods
push
jo
pop
neg
dec
arpl
jns
push
dec
pop
rcr
aam
mov
shl
xor
jae
movs
xor
xchg
(bad)
adc
jae
add
add
pop
mov
pusha
add
jmp
xlat
mov
imul
lods
sbb
push
jmp
test
pop
sub
push
aaa
aad
pop
mov
adc
das
arpl
push
or
addr16
inc
adc
add
push
enter
push
ror
adc
adc
jbe
or
imul
in
sub
daa
enter
addr16
ja
movs
retf
inc
and
add
jge
add
inc
aas
pop
add
sbb
sub
in
jae
mov
sub
ret
addr16
jo
xor
aaa
stos
pop
inc
xor
and
push
shl
pop
xchg
mov
aaa
(bad)
or
xchg
xor
(bad)
scas
popf
adc
cmc
sbb
dec
jg
dec
or
pop
sbb
loopne
mov
or
add
sbb
int
jno
xor
dec
lds
mov
iret
pop
aad
and
ins
(bad)
daa
adc
daa
pop
inc
imul
adc
sub
jbe
mov
je
addr16
shl
add
out
pop
xor
arpl
fst
mov
push
and
cmp
(bad)
xor
add
jl
jg
dec
arpl
sti
aaa
mov
cmp
aaa
adc
inc
out
dec
sbb
jns
jae
mov
mov
jne
mov
or
lahf
daa
xchg
xchg
add
or
xchg
ja
in
mov
popa
cmp
ret
fidivr
das
daa
or
pop
ja
push
cmp
pop
addr16
imul
cmps
pop
in
enter
xchg
push
(bad)
push
gs
jmp
push
mov
inc
ins
mov
pop
ja
movs
frstor
shl
mov
int
push
sbb
sub
ds
cmovno
sub
mov
addr16
fmul
lods
daa
sub
xchg
pusha
and
imul
test
sub
icebp
outs
pop
(bad)
add
dec
mov
stos
sbb
dec
mov
sbb
mov
popa
cmps
add
pop
and
jmp
stc
or
xchg
cmps
push
popf
xchg
xor
icebp
xchg
popa
repz
push
mov
or
daa
arpl
xlat
xor
sub
js
das
xor
das
xchg
dec
mov
add
inc
mov
xchg
mov
sub
daa
inc
xor
inc
(bad)
popf
daa
or
cmp
add
push
inc
ins
sar
(bad)
xor
inc
jle
lds
xor
cwde
aaa
out
mov
pop
ror
ins
pop
jae
cld
sub
inc
inc
inc
xor
es
icebp
sbb
movs
add
scas
cmp
or
aas
addr16
push
inc
pop
sub
inc
fldcw
jbe
lods
adc
add
pop
sahf
or
add
dec
mov
(bad)
in
mov
push
cmp
pop
add
jg
add
push
lock
jp
xor
lock
ja
ja
dec
in
fild
push
inc
imul
movs
scas
daa
push
inc
jae
inc
inc
jne
ja
ficomp
lahf
dec
daa
pop
pop
lods
ins
and
cs
daa
pop
inc
pop
ficom
mov
inc
pop
mov
sub
lahf
fnsave
dec
lahf
pop
sbb
(bad)
fild
dec
(bad)
fsub
sbb
pop
arpl
push
movs
shr
das
es
mov
push
daa
sub
out
add
out
dec
pop
and
fs
jmp
nop
js
pop
sbb
mov
pop
in
ins
or
push
and
or
cwde
test
aaa
es
(bad)
loope
rcr
mov
fcom
popf
das
jmp
push
out
xchg
dec
pop
inc
push
push
arpl
lock
gs
fisttp
daa
pop
sbb
shr
dec
push
arpl
sbb
and
mov
jo
clc
push
lahf
push
idiv
xchg
jae
ins
bound
mov
loop
nop
xchg
push
iret
daa
dec
daa
mov
push
xchg
cmp
mov
daa
pop
imul
fimul
jmp
daa
sub
mov
sub
or
inc
xchg
ins
xchg
xchg
cwde
jp
cmp
pop
int3
in
sbb
push
daa
adc
cmp
pop
aad
push
pop
gs
fist
retf
pop
pop
jbe
outs
jne
xor
xlat
aaa
mov
mov
cld
pop
cmc
ja
inc
mov
mov
mov
sub
mov
xchg
inc
das
jno
ret
test
mov
add
ins
aas
(bad)
xchg
dec
add
inc
imul
pop
cli
push
das
rcl
push
xchg
push
push
dec
pop
pop
loope
adc
outs
jns
test
add
ss
push
mov
loopne
push
pop
daa
not
push
js
fs
pop
test
jno
mov
imul
mov
add
pop
and
push
add
xchg
das
inc
add
jae
add
fidivr
les
cmp
mov
inc
cmps
pop
imul
add
pop
jb
push
xor
sub
pop
jnp
retf
(bad)
mov
dec
cmp
ficomp
mov
pop
sub
mov
inc
xor
ss
adc
mov
inc
addr16
and
leave
outs
adc
xor
and
and
jo
dec
add
jo
lahf
mov
dec
es
movs
test
pop
xor
mov
ins
jnp
(bad)
and
and
jl
inc
ss
cmp
jle
add
sahf
inc
ins
or
pop
pop
or
or
pop
sbb
jne
xor
(bad)
daa
(bad)
mov
addr16
dec
sbb
mov
rol
pop
xchg
aas
mov
daa
mov
daa
adc
pop
pop
daa
add
xor
test
inc
xchg
inc
mov
aas
daa
iret
sub
gs
adc
xor
in
and
pop
addr16
jnp
(bad)
sbb
push
xor
xor
pushf
or
test
iret
mov
ret
fidiv
jae
inc
adc
jp
aas
sub
xchg
pop
dec
dec
inc
cmp
ins
xchg
daa
cmp
sbb
shl
das
loopne
xor
jns
pop
inc
mov
fld
(bad)
cmp
pop
or
daa
bound
add
mov
xchg
jnp
ds
test
xor
bound
dec
icebp
or
cmps
jbe
add
jle
je
ret
lea
xor
ins
mov
ret
or
lds
ja
jb
ret
or
movs
mov
test
xlat
push
popf
add
inc
sub
pusha
pop
cmp
or
outs
dec
mov
adc
or
test
pusha
aad
inc
inc
add
and
xor
jno
push
cwde
js
jb
inc
inc
cwde
xor
mov
sbb
jo
xchg
pextrw
inc
nop
xchg
inc
fsub
adc
fsub
pop
fld
test
dec
rcr
dec
test
fimul
movs
pop
popa
ins
stos
adc
daa
or
inc
lea
mov
iret
and
add
adc
test
ins
mov
test
push
jo
cmp
test
cmp
popf
dec
dec
or
push
outs
(bad)
arpl
dec
pop
dec
pop
ss
and
or
movs
int
pop
lock
dec
xchg
jbe
and
call
pusha
push
sbb
adc
push
xchg
scas
mov
cmp
add
icebp
pop
arpl
or
xor
push
sbb
mov
fsub
mov
pop
fstp
mov
xor
cmp
pop
or
aas
inc
mov
fcom
clc
pop
mov
cmps
adc
aas
add
addr16
add
(bad)
dec
mov
mov
add
pop
lods
dec
and
out
inc
dec
add
pop
arpl
or
mov
mov
sub
jno
xlat
(bad)
das
mov
mov
dec
retf
in
adc
pop
call
sub
outs
sbb
daa
and
in
inc
adc
inc
gs
pop
(bad)
mov
movs
pusha
jmp
pop
sub
ins
fwait
lods
cmp
lods
lock
pop
outs
xor
inc
pop
inc
mov
(bad)
xor
pop
xor
cmps
push
inc
pop
sub
mov
loope
mov
pop
test
ins
add
xor
cmp
repnz
inc
out
in
dec
dec
xor
dec
and
jne
fiadd
pop
cmp
adc
pop
push
pop
pop
xchg
ins
add
pop
in
cmp
retf
out
adc
jo
test
das
es
test
jg
or
ja
inc
mov
add
cmp
mov
into
ret
pop
and
(bad)
xchg
cs
ins
mov
and
das
mov
test
mov
scas
push
mov
outs
dec
pop
adc
sbb
ss
pop
shl
xchg
or
mov
(bad)
sar
sub
xor
inc
xor
xchg
inc
mov
rcr
inc
pop
mov
cwde
mov
lock
mov
lods
mov
dec
xor
int
adc
cwde
hlt
pop
jae
sub
rol
mov
aaa
addr16
dec
adc
mov
push
add
pop
jp
xor
cmp
movs
inc
push
fadd
ss
adc
dec
das
cdq
outs
cmp
movs
shr
aad
es
sub
out
mov
ins
test
ret
sub
bound
loope
mov
dec
and
scas
push
mov
and
sub
pusha
mov
pop
cmps
adc
sbb
push
inc
fdiv
outs
xchg
test
jmp
dec
aam
mov
pop
jns
xchg
sbb
add
or
push
sbb
aad
xor
lods
or
jmp
mov
sub
add
push
mov
or
xor
pop
call
push
lahf
and
sub
cmps
mov
lods
das
ret
mov
pop
icebp
mov
push
mov
pop
add
mov
rcl
gs
pop
sbb
push
js
(bad)
fsubrp
dec
stos
push
xor
jbe
sub
sub
aad
cmp
ret
pusha
out
sub
dec
or
movs
hlt
jbe
aaa
daa
cmc
adc
into
shl
push
push
stos
shr
mov
lock
aam
mov
sub
push
(bad)
mov
pop
push
dec
dec
inc
inc
inc
dec
test
jg
mov
fstp
ins
rol
pop
pop
dec
in
cmp
dec
dec
daa
addr16
sbb
dec
das
imul
mov
rcl
inc
jae
pop
mov
test
sbb
adc
jg
jae
mov
inc
dec
ja
pop
shr
cli
das
push
and
fisubr
push
jmp
mov
sbb
or
add
pcmpgtb
icebp
dec
leave
fs
fcom
pop
mov
add
jmp
add
mov
das
and
scas
mov
pop
sub
xor
call
adc
scas
outs
addr16
mov
sub
mov
popa
mov
ins
cmc
pop
adc
push
mov
es
or
mul
daa
gs
sub
push
movs
ins
xchg
xchg
ss
cld
sub
jae
fldenv
mov
push
daa
xlat
imul
sub
daa
and
mov
push
ret
sub
fadd
lock
inc
dec
dec
pop
push
xor
pop
adc
add
out
and
and
pop
inc
fcom
pusha
add
add
mov
(bad)
pop
lgs
lea
pop
fild
xor
jae
dec
(bad)
sbb
mov
adc
inc
nop
pop
inc
dec
imul
js
outs
(bad)
lds
imul
pop
mov
movs
push
aad
inc
pop
push
jmp
inc
xchg
mov
cwde
and
mov
xchg
repz
push
inc
pop
pop
mov
xor
test
or
pop
retf
test
xchg
sbb
push
sbb
stos
lea
xchg
aaa
inc
lods
movs
sbb
xor
dec
cdq
pop
jo
(bad)
dec
adc
movs
add
pop
sbb
daa
neg
ins
sub
daa
adc
mov
xchg
adc
sahf
add
xchg
xor
jno
addr16
push
mov
adc
fmul
dec
int
jg
(bad)
sbb
mov
mov
bound
jne
adc
mov
outs
adc
call
sahf
mov
fadd
popa
xor
inc
inc
and
imul
les
and
or
ja
adc
push
fstp
adc
mov
sub
lea
ins
or
imul
sub
scas
fiadd
sub
mov
xor
pop
pop
sub
mov
xchg
pop
jg
ficom
addr16
pop
sub
icebp
push
mov
push
and
shr
lea
adc
mov
jge
leave
cmp
xchg
jne
call
xor
cmps
jbe
xor
push
adc
fild
sbb
xchg
aaa
adc
sbb
pusha
outs
aaa
rol
(bad)
push
pop
and
pop
inc
daa
cmp
mov
cmp
pop
or
sbb
add
mov
add
and
daa
or
gs
mov
dec
aas
pop
jo
inc
jns
scas
pop
mov
mov
dec
add
add
imul
push
fs
mov
push
fsub
outs
inc
mov
pop
xlat
inc
mov
daa
bound
and
pop
scas
push
arpl
mov
loopne
imul
daa
mov
pop
pop
mov
lods
pop
sbb
sbb
add
test
cmp
movs
nop
xor
xchg
loopne
imul
das
or
push
movs
mov
das
fwait
das
fsub
scas
inc
sub
or
popa
les
aas
(bad)
jbe
pop
ja
cmps
jno
les
int3
rol
push
ins
das
inc
inc
(bad)
jbe
inc
cmps
popa
xchg
aaa
inc
inc
pop
adc
and
in
dec
daa
pop
icebp
xchg
push
mov
pop
fld
pop
icebp
push
push
les
xchg
mov
add
inc
jnp
daa
iret
xchg
das
inc
inc
push
das
outs
xchg
pop
inc
aas
xchg
pop
dec
mov
mov
les
pop
es
mov
xor
mov
mov
add
pop
test
inc
sub
pop
or
push
cdq
or
push
inc
div
sbb
mov
sbb
push
add
and
(bad)
lds
nop
jecxz
cmp
jo
fbstp
imul
fnsave
mov
stos
test
cmps
mov
jl
pop
setb
and
pop
add
iret
mov
jle
rcl
add
sbb
dec
ins
adc
dec
stc
mov
pop
mov
in
cmps
outs
adc
addr16
jbe
sbb
imul
jo
lods
pop
inc
fadd
inc
sub
mov
pusha
xor
mov
fist
mov
and
sub
ret
cmp
shr
xor
aaa
sbb
je
mov
in
ins
jbe
adc
mov
out
imul
xor
(bad)
sbb
or
pop
or
dec
add
test
in
(bad)
jo
xchg
das
int
push
cmp
sbb
pop
xor
jg
das
mov
push
lock
loope
pop
in
mov
mov
nop
fadd
or
pusha
in
js
sbb
pop
and
inc
dec
xchg
jo
pop
(bad)
mov
not
pop
dec
out
inc
ret
(bad)
es
adc
sub
sbb
xor
jb
push
ret
js
xor
daa
xchg
pop
test
cmps
ja
push
add
outs
imul
jmp
dec
or
in
or
das
sbb
sbb
dec
dec
or
add
adc
cmps
pop
pop
adc
xchg
fnsave
out
dec
leave
sbb
inc
add
enter
mov
mov
loopne
push
dec
mov
mov
(bad)
ss
xchg
scas
cmp
pop
cwde
mov
xor
imul
inc
sbb
inc
inc
inc
daa
pusha
shl
das
out
dec
mov
mov
jns
xchg
loopne
mov
pop
dec
jae
xchg
xchg
sub
out
test
mov
push
push
(bad)
xchg
add
sub
inc
cwde
or
mov
xor
jno
or
adc
sbb
xchg
fcomp
and
rol
stos
lahf
xchg
xor
daa
lahf
inc
pop
pusha
and
fs
push
push
jge
call
dec
or
ficom
push
pop
inc
aam
push
in
or
xor
popa
fld
test
pop
adc
(bad)
mov
inc
out
test
add
push
pushf
inc
mov
pop
je
outs
fcomp
fsubr
mov
dec
dec
call
imul
xor
pop
jb
test
sbb
push
sbb
out
daa
or
add
cmp
pop
xor
ja
cmp
add
call
addr16
repz
sub
das
sbb
pop
lods
xlat
inc
stos
das
adc
cmp
cmps
push
out
lahf
pop
lock
mov
add
or
mov
mov
xchg
mov
in
mov
xchg
das
loopne
ds
dec
add
pushf
mov
mov
or
paddq
les
call
jl
es
mov
adc
inc
dec
jmp
movs
aas
outs
repnz
nop
div
sub
loop
cmp
mov
xlat
dec
pop
lahf
div
dec
out
es
or
adc
fistp
add
adc
(bad)
push
retf
jo
jno
and
dec
cmp
sbb
sar
sub
xchg
je
mov
(bad)
xchg
mov
adc
scas
jo
add
mov
adc
adc
sub
add
(bad)
in
inc
inc
xchg
mov
ror
inc
pop
outs
jne
(bad)
mov
cmps
inc
inc
ins
cmps
inc
jmp
sub
mov
cs
push
add
das
dec
mov
cwde
out
aam
cs
ins
(bad)
mov
popa
mov
add
xlat
stc
sub
adc
add
stos
popa
lods
sub
mov
outs
push
imul
mov
cmp
sbb
invd
loop
test
xor
movaps
sub
sbb
aas
(bad)
cdq
dec
popa
inc
jo
loope
arpl
and
fisttp
and
jg
ins
fst
jo
(bad)
adc
pop
xchg
add
nop
push
aaa
and
push
xlat
cld
cmps
in
add
xchg
and
push
xor
jo
ins
in
sbb
adc
push
push
mov
mov
jo
add
push
xchg
rol
pop
outs
inc
push
shl
xchg
xor
push
add
inc
sbb
add
push
mov
outs
mov
mov
into
pop
je
cs
bound
adc
retf
mov
(bad)
faddp
js
popa
gs
push
shl
jns
lods
das
push
(bad)
jl
cmp
js
adc
into
mov
push
push
(bad)
sub
fcmovnu
lock
lock
(bad)
push
cwde
push
in
pushf
in
dec
loopne
loopne
ltr
adc
scas
call
fistp
sub
xor
sbb
dec
lock
stos
aaa
mov
adc
rcl
test
xor
xor
jns
pushf
rol
jle
rcr
inc
lock
xor
and
sbb
mov
inc
mov
cmp
stc
xchg
push
add
mov
mov
push
push
movs
pop
movs
push
inc
jo
mov
pop
int
stos
xor
scas
cwde
add
jge
push
cmps
scas
lock
pshufw
xchg
cmps
push
test
test
mov
scas
fimul
dec
jns
movs
int
and
and
imul
push
sar
cmc
pop
mov
popf
aaa
push
push
rcl
mov
mov
inc
hlt
jbe
das
push
mov
mov
pushaw
mov
pop
ins
mov
lods
iret
sbb
mov
dec
jno
xchg
daa
and
push
mov
push
pushf
or
les
or
add
das
mov
loopne
fcmovnbe
mov
mov
adc
pop
jb
sbb
neg
pop
mov
loopne
xchg
pop
and
push
and
inc
sbb
out
pusha
int
daa
stos
pop
dec
or
lahf
lods
add
add
ja
pop
(bad)
(bad)
les
fbstp
dec
cs
sbb
jo
es
aas
lahf
adc
add
or
(bad)
fistp
outs
mov
xchg
xlat
in
outs
fld
sub
sub
js
js
or
xor
jo
adc
fidivr
xor
das
jecxz
cmp
pop
inc
push
iret
mov
push
fdiv
jns
loop
cdq
pop
jo
xchg
jl
dec
and
call
adc
rol
pop
inc
fucomi
sub
js
jle
cmp
or
fcomp
ss
test
mov
mov
sub
cmps
outs
lea
adc
int3
jle
mov
rcl
mov
mov
sbb
mov
sbb
add
sub
ja
fsubr
adc
push
fwait
pop
call
(bad)
jmp
test
mov
test
(bad)
push
rcl
ret
adc
adc
adc
(bad)
dec
pop
push
dec
sbb
sbb
sbb
push
push
push
push
inc
adc
lock
cmp
add
dec
ret
pusha
arpl
sub
or
inc
inc
inc
add
(bad)
jmp
sbb
loopne
ret
ror
adc
pop
pop
movs
mov
clc
aas
pop
ror
dec
cmp
dec
adc
adc
loop
(bad)
(bad)
(bad)
mov
or
mov
add
(bad)
int
hlt
repnz
ss
inc
xor
fcomip
(bad)
in
loopne
sub
xchg
test
inc
inc
pop
pop
push
dec
sbb
push
dec
sbb
lods
cmp
and
adc
(bad)
fild
cwde
nop
mov
enter
int3
or
bnd
ror
sbb
(bad)
(bad)
jmp
or
in
(bad)
daa
jo
inc
xor
xchg
mov
rcl
rcl
add
(bad)
(bad)
mov
inc
push
inc
adc
jecxz
sub
or
ss
xchg
mov
stos
(bad)
call
dec
inc
dec
lfs
dec
sbb
ret
ds
cmp
adc
adc
lds
rol
add
mov
xor
inc
inc
pusha
inc
adc
adc
or
popf
hlt
cwde
xchg
mov
scas
adc
sbb
dec
adc
repz
aaa
loopne
shl
icebp
int
je
inc
(bad)
(bad)
(bad)
push
sub
comiss
pop
daa
mov
xor
or
test
mov
mov
bound
ret
cs
xchg
adc
inc
dec
or
jl
dec
cmp
hlt
(bad)
call
or
or
mov
jecxz
das
lock
xor
rol
test
nop
inc
add
cld
repnz
ds
inc
and
ror
push
sub
push
cmps
(bad)
(bad)
jmp
dec
inc
dec
or
adc
sbb
push
push
and
add
push
bound
xor
(bad)
jmp
hlt
icebp
lds
mov
or
mov
xor
jb
ds
rcl
stc
(bad)
(bad)
js
dec
cmp
pop
xchg
xchg
xchg
in
lds
add
mov
add
ror
pop
mov
xor
pop
(bad)
out
movs
cmc
aaa
lods
mov
adc
add
and
xor
ffree
dec
cmp
lock
mov
dec
inc
dec
or
add
out
xchg
xchg
xchg
cmp
call
xor
add
or
ret
cmp
or
jno
xor
push
cmp
(bad)
mov
inc
xor
fcom
(bad)
(bad)
(bad)
dec
sbb
lock
test
push
dec
sbb
rol
cld
repz
aas
dec
inc
dec
or
xor
cmp
daa
out
int3
ret
iret
shld
call
rol
pop
mov
add
jl
inc
inc
add
and
and
es
pusha
dec
sub
ror
sbb
js
add
lock
shl
inc
dec
or
ret
ins
arpl
cmp
or
call
mov
mov
ds
push
ds
mov
cmp
rol
test
mov
mov
inc
dec
push
push
push
inc
adc
(bad)
int3
sbb
(bad)
(bad)
(bad)
jmp
sub
aas
pushf
nop
mov
ror
sbb
dec
or
push
je
inc
aaa
mov
push
cld
jmp
int
inc
inc
inc
push
mov
test
popa
inc
and
loopne
ret
and
(bad)
(bad)
(bad)
mov
mov
xor
dec
push
clc
icebp
leave
cmp
loop
es
cmp
call
add
call
popa
dec
sub
in
les
lock
ror
mov
(bad)
jg
or
xor
cmp
dec
sbb
rol
adc
bound
sub
or
fs
inc
pop
pop
xor
add
call
adc
sbb
dec
loopne
and
nop
nop
or
cmp
jmp
and
sub
cmp
sub
clc
js
mov
je
fadd
cmp
jp
mov
aam
cli
js
mov
inc
ins
jl
push
fidivr
mov
in
aam
mov
jne
jne
hlt
sub
mov
cmc
jno
lock
shl
nop
movs
adc
add
hlt
icebp
jo
sbb
mov
jne
jno
je
mov
icebp
jno
icebp
fs
les
hlt
jno
shl
inc
aam
cs
mov
mov
cwde
cs
adc
pop
hlt
dec
cmp
scas
push
mov
mov
fmul
fcomp
sub
fs
js
cs
sahf
les
sub
lock
ds
push
ds
ins
aam
inc
je
aad
ds
cld
lods
or
rcl
aad
dec
hlt
aam
in
xchg
clc
clc
cmp
sbb
enter
test
add
clc
je
mov
xor
stc
push
sbb
xchg
in
lods
call
adc
cmp
pop
clc
fs
sub
mov
pop
jge
or
hlt
adc
mov
mov
stos
mov
xor
or
or
mov
rcr
and
sahf
lods
sbb
add
push
rcl
xchg
fdiv
pushf
int3
cwde
js
cmp
sbb
fs
call
fsub
nop
jge
loopne
dec
fsub
cwde
aam
mov
pop
cmp
sbb
inc
or
inc
add
jge
sbb
in
sub
jne
mov
push
pop
adc
mov
in
pusha
xchg
and
mov
enter
or
cmps
scas
scas
cmp
sub
mov
ins
ins
movs
pushf
jl
sbb
cmp
push
lock
jmp
int3
push
adc
pop
jne
mov
je
jl
xchg
add
add
mov
shl
fs
ins
cld
add
je
aam
cmp
test
add
je
sbb
fdivr
pop
inc
jne
test
xor
add
mov
in
les
add
fs
test
mov
adc
inc
hlt
test
sbb
aam
xor
cmp
sbb
in
dec
pop
js
push
test
inc
xchg
fdivr
hlt
sbb
inc
add
pop
mov
mov
pop
mov
mov
ins
sbb
and
pop
or
ins
(bad)
fadd
pop
pop
in
in
xor
sub
rol
sar
mov
enter
xor
xchg
sbb
cld
cmp
call
dec
mov
inc
jl
or
push
and
loopne
cmp
and
xor
cmp
je
or
and
mov
xor
in
and
add
enter
inc
pop
cmp
adc
add
push
mov
hlt
or
jo
push
int3
int3
cmp
rol
inc
adc
mov
rol
rcl
push
mov
cld
rol
rol
mov
dec
inc
pushf
rol
mov
push
sbb
or
xlat
rol
ret
cld
and
inc
(bad)
aad
shl
add
sub
(bad)
aad
xchg
adc
in
adc
jae
mov
adc
push
movhps
loop
jo
sub
mov
pushf
repnz
cmova
fdiv
loopne
xchg
les
pop
pop
inc
dec
xchg
push
or
in
push
mov
pop
lods
add
and
pop
pop
sbb
ins
adc
push
pop
hlt
rcl
jecxz
jb
dec
pop
push
add
cld
sub
add
add
mov
mov
ret
jecxz
add
jecxz
loope
movs
xchg
mov
mov
push
jl
loopne
cld
ret
inc
mov
mov
rcr
popa
jne
jne
add
and
test
push
cmc
jne
je
jno
and
and
pusha
sub
dec
adc
scas
mov
cmp
lods
rep
loope
or
hlt
add
test
xor
cld
mov
sub
inc
cmps
mov
mov
xchg
fmul
in
popa
sub
hlt
add
cmc
aam
stos
add
jecxz
repz
je
icebp
mov
adc
add
xchg
rcr
aam
stos
rcl
adc
test
jmp
add
movs
add
jmp
in
cmp
sbb
jb
shl
scas
scas
jb
inc
or
sub
add
sbb
and
and
rcl
push
rcr
test
or
add
cmp
mov
stc
or
and
movs
mov
inc
or
fadd
cmp
xchg
aam
fs
add
cld
xor
push
adc
ret
and
and
inc
add
rcr
mov
lods
push
adc
cmp
xor
repz
inc
cmp
mov
or
rol
sar
add
push
mov
inc
add
push
test
adc
aam
fs
pop
mov
sbb
aam
mov
stos
or
pushf
inc
push
test
xor
mov
xor
inc
add
mov
or
xchg
xor
or
rcr
je
xlat
push
pop
sbb
in
mov
ret
cmp
sbb
or
stos
or
sbb
inc
mov
and
popa
xor
fsub
add
ror
push
xchg
push
add
jl
jl
movs
add
call
aam
sbb
jmp
add
fcom
loopne
lock
or
push
add
xor
push
mov
je
or
bound
sub
push
push
test
and
mov
push
adc
add
mov
and
sbb
or
or
jl
je
fs
add
jl
pop
sbb
sbb
inc
and
mov
cmp
aam
inc
dec
jl
dec
js
out
sbb
aam
mov
hlt
or
mov
add
in
xchg
in
hlt
push
pop
inc
sub
int3
cwde
dec
push
pop
pop
inc
inc
and
je
mov
pop
push
cld
mov
pop
pop
pop
pop
lods
push
je
and
je
loop
add
rol
and
jmp
pop
loop
inc
add
pop
(bad)
push
cmp
jl
mov
jp
adc
fmul
aam
xchg
dec
icebp
mov
aam
in
and
mov
ins
les
rcl
clc
mov
inc
cld
mov
push
inc
inc
push
dec
(bad)
aam
in
xchg
(bad)
jecxz
add
retf
or
je
mov
xor
out
jo
xchg
into
lods
leave
pop
dec
adc
nop
test
inc
cld
pusha
fs
push
jo
cmc
sub
adc
cmp
hlt
add
int
xchg
mov
adc
or
xchg
jo
scas
adc
or
dec
add
cmp
outs
pop
mov
cmps
aad
add
rol
rol
add
dec
push
inc
int3
pop
xchg
pop
clc
push
retf
hlt
(bad)
int3
mov
add
inc
mov
dec
sbb
push
mov
in
or
add
aam
mov
mov
rcr
pinsrw
rol
in
jl
inc
add
in
xchg
test
push
and
and
push
pusha
xchg
cmp
enter
mov
pop
js
cli
jl
fmul
inc
mov
mov
jl
sbb
sub
ret
pop
dec
scas
mov
dec
int3
push
add
push
pop
or
aam
test
sbb
mov
loopne
add
sbb
or
inc
in
aam
push
retf
je
loopne
add
pop
inc
aam
and
add
cmp
sahf
cmp
je
add
rcl
xor
mov
adc
inc
hlt
test
sbb
aam
xor
cmp
sbb
lds
pop
dec
mov
add
int3
hlt
push
adc
mov
ret
push
mov
or
push
inc
push
sub
jo
fs
jmp
dec
sub
or
or
retf
lods
dec
xchg
inc
add
hlt
int
inc
pop
xchg
fdivr
loopne
cld
or
xchg
les
daa
push
int3
dec
or
sbb
and
mov
inc
or
cmp
js
add
sub
inc
mov
and
mov
xchg
retf
mov
inc
adc
adc
add
in
dec
xor
or
or
into
mov
add
dec
mov
cmps
jo
or
add
dec
(bad)
(bad)
inc
fnstcw
les
fnsave
jns
mov
aaa
xchg
pop
lock
jg
push
mov
mov
mov
xchg
lea
cmp
mov
mov
or
xchg
and
pop
imul
(bad)
gs
into
pusha
mov
jae
rcl
icebp
(bad)
(bad)
(bad)
(bad)
fcom
jne
pop
cmp
aam
mov
mov
pop
push
daa
repnz
sbb
(bad)
inc
clc
adc
not
ret
aad
enter
or
(bad)
push
adc
test
push
xchg
sbb
jno
adc
rcr
sbb
ret
outs
sqrtps
int3
and
scas
push
mov
jl
test
mov
ss
and
(bad)
push
sub
mov
adc
mov
iret
loope
test
arpl
add
pop
loop
(bad)
jg
jmp
stos
xor
mov
cmp
mov
cs
inc
in
pushf
ja
cmps
xchg
(bad)
jg
lods
out
push
add
stos
loop
dec
and
add
rcr
pushf
adc
call
sbb
pop
pop
and
cld
scas
jmp
and
sub
sub
xor
aaa
aaa
cmp
cmp
cmp
ss
inc
sub
inc
les
or
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
sub
(bad)
call
popa
popa
bound
fs
ins
outs
outs
jl
(bad)
adc
jbe
jns
jp
jl
jg
fiadd
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cwde
fwait
fwait
popf
popf
sahf
sahf
mov
movs
cmps
cmps
test
stos
sar
cli
stos
lods
lods
scas
scas
in
mov
mov
mov
mov
mov
jmp
sbb
ret
mov
int
into
into
push
rcl
aad
(bad)
(bad)
fcos
call
(bad)
(bad)
(bad)
in
out
jmp
out
out
icebp
icebp
repnz
sti
push
hlt
div
clc
clc
sti
sti
std
std
(bad)
inc
add
pop
retf
in
cmp
push
loopne
xor
or
pop
loopne
icebp
or
pop
fcmovne
mov
add
icebp
or
ss
jnp
adc
add
or
dec
inc
icebp
(bad)
adc
rcr
push
inc
and
and
add
add
xlat
cmp
or
or
or
sahf
out
or
push
fidivr
sub
out
out
add
or
out
jns
or
or
push
and
or
fimul
push
or
iret
repz
jns
or
or
or
push
and
or
repz
out
mov
push
push
or
or
cmp
cmp
or
or
add
cmp
or
or
ja
jne
and
push
push
out
into
repz
push
and
and
push
and
mov
push
and
cmp
repz
add
add
outs
cmp
add
std
adc
cmp
ds
repz
add
add
add
mov
mov
push
outs
add
mov
ja
jns
push
push
and
and
sahf
out
sahf
add
add
add
dec
and
push
fisub
lock
movs
mov
adc
lea
push
iret
cmp
push
add
repz
and
jle
iret
repz
add
add
add
iret
repz
cmp
push
push
add
add
xchg
cmc
fimul
or
sahf
idiv
or
or
fimul
or
cmp
jns
or
or
or
fnstsw
or
or
push
jle
sahf
out
sahf
add
add
add
ja
out
add
add
push
inc
mov
or
and
adc
repz
adc
push
or
or
repz
out
adc
add
jns
ja
cdq
push
jle
add
ret
jns
out
add
add
jns
add
mov
push
or
or
cmp
adc
push
adc
cmp
mov
or
jle
iret
repz
out
fisub
push
jle
add
ret
fnstsw
add
add
add
mov
mov
push
push
xor
add
and
add
loope
out
popf
push
and
outs
push
jae
jns
add
add
add
out
into
repz
adc
add
push
adc
cmp
sahf
xor
adc
add
repz
adc
adc
iret
repz
adc
adc
adc
repz
push
add
push
ins
add
add
out
mov
out
loope
add
push
or
pop
or
jo
jns
add
or
ja
jbe
xchg
push
push
add
push
ja
dec
ja
sbb
sub
fstsw
add
add
ja
sahf
push
or
add
push
or
jns
sub
add
add
add
into
jnp
push
or
outs
add
add
jns
out
push
add
push
push
ds
jns
out
add
add
out
sbb
popf
add
sbb
je
add
add
iret
adc
adc
adc
mov
push
sub
jns
add
add
jne
jns
jns
adc
add
push
ret
ret
sbb
inc
shl
frstor
ja
add
(bad)
adc
popf
out
sahf
adc
adc
adc
out
popf
cmps
outs
and
test
push
add
repz
into
add
(bad)
adc
adc
cmp
cmp
add
add
xchg
data16
icebp
mov
mov
push
popf
out
repz
push
add
cmp
sub
push
and
fiadd
into
repz
lea
and
jns
jns
push
and
and
clc
mov
and
ret
sti
clc
retf
add
sub
out
sub
push
push
add
or
popf
out
or
or
push
sahf
out
out
add
sub
sub
pop
ja
ja
and
push
stos
lods
mov
cmp
add
lock
rol
push
aaa
ret
sub
(bad)
push
pop
(bad)
push
xor
cmp
sub
inc
pusha
dec
sahf
dec
xchg
dec
push
push
int3
dec
sub
or
out
rol
xor
add
popa
aaa
ins
adc
cmp
aas
push
sub
cwde
add
iret
neg
rol
xor
pusha
inc
dec
mov
dec
jnp
push
push
adc
push
push
mov
repz
jnp
shl
push
adc
push
sbb
and
rcr
push
add
and
adc
call
daa
arpl
mov
ret
cmp
sub
pop
lods
pop
add
sub
(bad)
cmc
xlat
inc
adc
inc
or
xor
inc
loop
nop
pop
mov
fcompp
ins
iret
mov
pop
fs
add
pop
out
mov
nop
bound
mov
neg
daa
arpl
loopne
inc
push
push
ja
inc
outs
adc
pop
psrlw
in
adc
pop
inc
adc
push
push
push
and
fld
rsqrtps
jmp
ss
adc
imul
shl
shr
ins
push
fistp
jae
adc
jle
xor
xchg
xlat
mov
out
clc
sbb
arpl
ja
out
dec
inc
cmp
jae
push
adc
mov
pop
xor
lods
xchg
out
sub
xor
or
inc
cmp
inc
loop
cmps
mov
stos
lea
ins
add
sub
imul
xchg
cdq
and
adc
xor
adc
inc
dec
loope
pop
dec
fwait
or
lea
sub
add
mov
call
imul
dec
sbb
push
add
push
int
pop
js
dec
jle
jae
ins
fild
xchg
adc
pop
add
mov
dec
jb
jae
and
dec
cwde
xor
push
das
shl
fbld
cs
cmp
inc
test
sub
mov
sbb
push
out
lds
push
xor
test
pop
inc
dec
call
fsubr
addr16
and
scas
cmp
push
nop
or
push
cmp
xchg
dec
enter
outs
rcr
add
push
in
or
inc
sub
icebp
pop
and
nop
xor
xor
push
dec
add
cs
inc
jecxz
inc
punpckldq
ins
pop
pop
scas
imul
stos
mov
and
mov
cmp
cmp
fidivr
(bad)
out
out
add
not
idiv
ror
mov
mov
daa
xor
aam
inc
ret
test
sbb
iret
push
sar
mov
jp
add
lea
add
or
fnstenv
jae
xor
xchg
add
sahf
push
ja
adc
mov
push
sub
cld
mov
cs
xchg
lods
inc
adc
mov
jae
addr16
and
dec
rol
outs
jo
pop
xor
pop
pop
ja
data16
inc
xor
add
mov
xor
jnp
push
push
push
add
mov
rol
es
xchg
test
xor
jg
ficom
out
xchg
(bad)
sahf
fadd
movs
das
enter
add
fadd
enter
repnz
daa
test
sub
ret
aas
cmps
pusha
jns
dec
movs
pop
ror
pushf
jo
xchg
xchg
lea
pop
add
pop
jb
inc
je
mov
lods
dec
inc
out
xlat
push
rcl
js
ds
push
push
clc
add
mov
sbb
pop
dec
jne
pop
adc
dec
push
push
jae
jne
xor
xchg
add
retf
pop
mov
pop
push
retf
test
jg
into
test
pop
push
push
loope
dec
mov
ror
sub
cwde
(bad)
cmps
adc
adc
mov
xor
les
out
loope
dec
adc
and
(bad)
aas
in
pop
or
(bad)
jnp
(bad)
fld
and
jl
sub
mov
lds
inc
cmp
pop
push
hlt
les
and
mov
or
daa
sbb
and
fldcw
pop
inc
mul
(bad)
jb
movq
test
push
pop
xor
pcmpgtb
aad
movs
jne
arpl
dec
retf
inc
movs
lahf
pop
ins
jecxz
fwait
sbb
add
add
add
xchg
jnp
arpl
mov
rol
fstp
mov
add
add
repnz
mov
add
add
sub
add
cmp
sbb
ret
retf
(bad)
(bad)
cmp
or
add
add
add
add
test
add
add
addr16
pop
icebp
jmp
jne
jnp
jg
test
lea
cs
add
add
sub
(bad)
inc
rol
add
add
add
add
add
add
add
add
add
or
or
sbb
(bad)
inc
xor
cmp
cmp
inc
add
push
add
pop
add
add
imul
add
(bad)
(bad)
(bad)
inc
lea
xchg
add
add
add
add
add
add
add
add
add
add
push
pop
ret
and
add
add
add
add
add
add
add
pop
add
ins
add
jae
ja
mov
pop
xchg
add
add
add
add
add
add
add
add
add
add
add
add
jmp
test
sbb
add
add
add
add
add
dec
sar
inc
add
add
add
add
add
add
push
adc
add
rcl
test
hlt
pop
pop
aam
sar
add
add
mov
std
add
add
or
pop
inc
test
add
push
add
gs
(bad)
inc
add
lahf
add
lods
add
leave
add
rol
adc
fild
sti
mov
pop
push
call
inc
loope
push
and
push
cmp
push
dec
push
(bad)
(bad)
(bad)
dec
push
push
push
push
pop
push
gs
jns
jg
add
push
popf
push
mov
push
mov
push
(bad)
(bad)
(bad)
dec
push
rol
fld
fild
icebp
push
test
or
adc
pop
pop
daa
pop
aaa
pop
inc
pop
dec
pop
dec
pop
(bad)
(bad)
(bad)
call
push
pop
push
pop
popa
pop
ins
pop
jae
jns
mov
lea
popf
pop
lahf
pop
mov
mov
pop
int
(bad)
(bad)
(bad)
dec
pop
rol
fild
loope
jmp
in
pop
test
adc
or
or
or
or
or
(bad)
(bad)
inc
push
or
pop
or
pop
or
jno
or
or
or
or
or
fisttp
fisttp
loope
jmp
or
or
pop
or
or
(bad)
(bad)
(bad)
dec
das
or
or
dec
or
pop
or
imul
or
test
mov
(bad)
(bad)
(bad)
dec
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
test
or
or
arpl
or
(bad)
(bad)
(bad)
jg
or
or
xchg
or
or
or
or
(bad)
(bad)
(bad)
dec
in
out
in
or
or
or
or
or
or
or
or
push
pop
(bad)
(bad)
dec
pop
or
outs
or
mov
lea
xchg
or
or
pop
ins
in
or
or
or
or
or
or
or
or
or
or
(bad)
(bad)
(bad)
dec
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
or
dec
or
or
or
or
or
or
or
dec
add
dec
and
cmp
or
jns
or
popa
(bad)
mov
or
leave
or
aad
(bad)
(bad)
(bad)
(bad)
fisttp
repz
or
pop
push
sbb
push
das
push
xor
push
push
push
(bad)
(bad)
(bad)
call
pop
push
imul
push
jne
jge
xchg
(bad)
push
xchg
push
fwait
push
mov
mov
mov
push
aad
(bad)
(bad)
in
(bad)
fisttp
in
push
out
push
stc
push
pop
ud2
cld
movhps
and
cmovae
inc
cmovge
dec
ud0
(bad)
call
pop
cvtdq2ps
packssdw
jg
xchg
pop
bt
cmps
shrd
mov
mov
mov
(bad)
inc
jmp
pxor
sti
paddw
add
sar
and
and
adc
adc
imul
jae
jns
jnp
test
xchg
xchg
adc
jmp
adc
adc
adc
adc
adc
adc
adc
(bad)
(bad)
jmp
adc
adc
adc
inc
adc
pop
adc
imul
adc
adc
dec
inc
clc
fwait
adc
adc
adc
adc
adc
(bad)
(bad)
call
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
adc
(bad)
(bad)
(bad)
call
jno
jae
jns
jge
(bad)
adc
adc
adc
adc
adc
adc
adc
inc
sar
adc
aam
adc
adc
adc
dec
adc
(bad)
(bad)
(bad)
call
pop
adc
imul
adc
xchg
adc
adc
adc
(bad)
(bad)
call
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
aaa
or
imul
jno
call
inc
fcmovnu
mov
mov
mov
adc
adc
adc
pop
loopne
les
adc
sub
(bad)
(bad)
call
dec
adc
addr16
jg
adc
adc
mov
adc
int
xlat
adc
or
movhps
push
adc
push
and
push
cmp
push
inc
push
dec
push
push
push
imul
jne
xchg
push
xchg
push
lahf
push
test
push
mov
push
fdivr
call
rcl
fst
fist
loope
in
jmp
in
push
not
stc
mov
pop
and
(bad)
(bad)
(bad)
jmp
pop
xor
inc
pop
pop
pop
arpl
ja
jnp
lea
xchg
pop
fwait
pop
lahf
pop
movs
pop
mov
mov
pop
(bad)
(bad)
(bad)
dec
pop
aad
loope
jmp
pop
call
pop
sbb
sbb
sbb
sbb
dec
sbb
(bad)
(bad)
(bad)
call
sbb
ja
jge
jg
test
(bad)
sbb
sbb
sbb
sbb
sbb
(bad)
(bad)
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
dec
sbb
pop
sbb
(bad)
(bad)
(bad)
jns
sbb
cdq
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
(bad)
(bad)
inc
sbb
sbb
sbb
sbb
sbb
push
sbb
imul
sbb
xchg
sti
(bad)
(bad)
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jp
(bad)
(bad)
jg
and
and
sbb
sbb
sbb
inc
sbb
push
sbb
sbb
jae
jg
(bad)
(bad)
(bad)
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
(bad)
(bad)
jmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
loope
repz
sbb
sbb
xor
sbb
(bad)
dec
push
sbb
imul
xchg
cdq
sbb
cmps
sbb
mov
mov
lds
loope
cmc
sbb
pop
push
or
adc
pop
push
and
push
(bad)
(bad)
(bad)
(bad)
cmp
push
dec
push
ins
push
jno
mov
(bad)
push
xchg
push
mov
push
rcr
push
(bad)
push
retf
push
(bad)
mov
jecxz
out
push
neg
std
push
add
nop
pop
cmp
dec
pop
dec
pop
push
pop
addr16
(bad)
(bad)
call
jne
jnp
test
xchg
pop
xchg
pop
cdq
pop
popf
pop
movs
pop
scas
pop
mov
mov
pop
out
jmp
repz
std
call
call
adc
sbb
sbb
and
and
pop
and
push
dec
and
ja
jge
mov
mov
and
add
inc
and
and
and
and
and
and
and
adc
xor
and
(bad)
(bad)
dec
pop
and
pop
and
jge
test
xchg
and
and
and
and
and
(bad)
(bad)
(bad)
frstor
in
jmp
and
and
and
and
and
and
and
and
and
(bad)
(bad)
(bad)
dec
arpl
and
jne
jg
test
xchg
xchg
and
and
and
and
(bad)
(bad)
jmp
and
and
and
and
and
and
and
and
and
and
and
pop
and
(bad)
(bad)
(bad)
jmp
and
and
and
and
and
and
and
and
and
and
and
(bad)
(bad)
inc
and
and
and
and
and
and
and
and
and
and
and
and
dec
and
and
and
and
and
and
and
and
(bad)
(bad)
call
and
and
and
and
and
and
and
and
sbb
cmp
and
dec
cli
and
lahf
and
mov
dec
and
loope
mul
or
(bad)
adc
es
es
es
(bad)
(bad)
call
pop
es
and
fwait
es
lods
es
ret
es
es
es
call
aad
frstor
out
es
es
daa
xor
daa
push
daa
push
daa
pop
daa
imul
(bad)
(bad)
(bad)
jmp
jae
ja
jg
xchg
daa
fwait
daa
popf
daa
cmps
daa
scas
daa
mov
mov
daa
shl
jecxz
out
daa
add
(bad)
(bad)
jmp
pop
sub
sub
sub
sub
sub
sub
pop
sub
popa
sub
jne
(bad)
(bad)
jmp
sub
mov
sub
sub
sub
sub
sub
sub
sub
sub
and
dec
inc
sub
sub
outs
sub
(bad)
dec
sub
sub
sub
sub
sub
sub
sub
(bad)
(bad)
(bad)
in
sub
sub
sub
sub
sub
push
sub
sub
ins
sub
sub
sub
(bad)
(bad)
dec
sub
sub
sub
sub
sub
sub
sub
bound
daa
sub
sub
(bad)
(bad)
push
sub
sub
push
sub
ins
sub
jnp
lea
xchg
sub
sub
(bad)
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
(bad)
(bad)
call
imul
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
and
(bad)
out
sub
sub
sub
cmp
rol
sub
mov
test
push
sub
fild
pop
cs
cs
cs
cs
(bad)
(bad)
(bad)
cmp
aas
cs
cs
outs
cs
jg
test
xchg
cs
cs
mov
cs
shr
(bad)
(bad)
inc
cs
shr
out
jmp
add
das
adc
daa
das
sub
inc
das
inc
das
dec
das
dec
das
push
das
(bad)
(bad)
(bad)
call
outs
das
jne
jge
sub
stos
das
mov
ret
das
iret
das
shr
fld
(bad)
out
in
das
(bad)
(bad)
(bad)
push
das
stc
das
add
or
xor
xor
xor
pop
xor
xor
jns
jge
test
(bad)
(bad)
(bad)
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
xor
inc
xor
(bad)
(bad)
dec
pop
xor
xor
jae
jg
xchg
xor
xor
xor
jg
cs
in
in
xor
xor
push
adc
xor
(bad)
(bad)
jmp
xor
xor
imul
xor
ja
jnp
lea
cdq
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pop
xor
imul
xor
jg
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
shl
jmp
icebp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
xor
gs
ja
jnp
jge
xor
push
mov
mov
xor
out
out
xor
adc
and
(bad)
out
inc
retf
aaa
cmp
dec
ss
ss
ss
ss
(bad)
(bad)
(bad)
push
imul
mov
(bad)
lods
ss
ss
shl
jecxz
jmp
aaa
add
pop
(bad)
(bad)
(bad)
push
sbb
aas
aaa
inc
aaa
dec
aaa
dec
aaa
pop
aaa
popa
aaa
jne
jg
lea
mov
aaa
leave
aaa
aad
(bad)
(bad)
(bad)
push
icebp
aaa
repz
div
add
cmp
cmp
cmp
push
cmp
pop
cmp
outs
(bad)
(bad)
(bad)
(bad)
cmp
jge
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
arpl
cmp
jns
xchg
movs
cmp
pop
std
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loopne
cmp
(bad)
(bad)
(bad)
inc
push
cmp
pop
cmp
jnp
cmp
lahf
cmp
cmp
cmp
(bad)
(bad)
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
call
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
sar
idiv
cmp
sbb
(bad)
(bad)
(bad)
push
cmp
inc
cmp
jne
jns
jnp
test
popf
cmp
mov
(bad)
(bad)
(bad)
(bad)
mov
cmp
add
adc
sbb
ds
xor
inc
ds
ds
(bad)
(bad)
jmp
gs
cmp
mov
ds
lds
leave
xlat
fstp
loope
out
jmp
(bad)
out
ds
or
or
aas
inc
aas
pop
aas
pop
aas
gs
addr16
jns
(bad)
(bad)
(bad)
aas
jge
mov
xchg
aas
lods
aas
mov
aas
fnstsw
jmp
aas
std
aas
sbb
inc
and
(bad)
inc
inc
aas
inc
inc
inc
inc
inc
pop
inc
popa
inc
addr16
ins
inc
xchg
inc
mov
inc
mov
mov
(bad)
inc
inc
jmp
test
inc
adc
inc
and
clc
(bad)
(bad)
(bad)
fild
les
inc
gs
imul
jnp
xchg
inc
stos
inc
mov
mov
inc
out
out
(bad)
(bad)
(bad)
inc
inc
stc
inc
add
inc
pop
inc
and
inc
das
inc
inc
inc
push
inc
push
inc
pop
inc
popa
inc
jae
jge
(bad)
(bad)
inc
inc
test
inc
xchg
inc
xchg
inc
popf
inc
mov
lds
inc
rol
inc
jecxz
icebp
inc
ud0
(bad)
inc
inc
and
inc
aaa
inc
cmp
inc
push
inc
imul
inc
movs
inc
test
(bad)
(bad)
(bad)
inc
inc
mov
inc
jmp
in
inc
icebp
inc
stc
inc
or
pop
inc
and
cmp
jmp
adc
inc
push
inc
push
inc
pop
inc
gs
outs
inc
add
(bad)
(bad)
jmp
inc
lods
inc
mov
inc
xlat
inc
fild
sti
inc
add
inc
sub
jg
out
cmp
inc
fiadd
inc
popa
inc
ja
jge
jg
pop
inc
push
mov
scas
inc
mov
add
dec
ret
and
push
pop
push
mov
add
jne
mov
and
cs
lods
inc
fstp
xor
and
mov
sbb
sti
or
add
daa
push
xchg
daa
add
inc
fisub
sub
mov
cmp
pop
cwde
daa
jbe
sub
sub
ins
sub
inc
daa
aaa
aad
and
sub
fsubr
mov
add
jmp
and
cmp
inc
jno
fwait
das
ins
sub
push
and
pop
pop
pusha
push
adc
(bad)
and
(bad)
jmp
iret
aaa
dec
popf
bound
push
fdivr
daa
jg
fsubr
xlat
fiadd
sbb
jae
push
pop
idiv
add
pop
int
jg
popa
jo
cwde
sub
addr16
or
movs
adc
ja
sub
and
mov
int
outs
pusha
rol
mov
cmp
push
je
inc
or
inc
sub
call
and
repnz
pop
outs
add
fbld
jb
mov
or
xchg
xchg
dec
cmps
mov
and
add
in
outs
add
xor
inc
leave
and
jbe
adc
enter
in
popa
pop
sahf
pop
jae
adc
mov
pusha
xchg
or
dec
dec
mov
inc
jne
pop
push
jb
pop
arpl
scas
loopne
and
mov
xchg
jle
bound
ss
aas
jo
outs
add
dec
xchg
push
jg
fcomi
pop
fdivr
and
fcomp
retf
and
rcr
outs
leave
or
sbb
cmp
fsub
jp
loopne
retf
es
stos
dec
pop
int3
cmp
push
pusha
scas
inc
les
mov
fcomp
in
scas
add
mov
out
outs
push
scas
xchg
pushf
or
in
stos
push
dec
test
jp
pop
(bad)
pop
xchg
inc
sub
pusha
sbb
xchg
daa
int
push
and
xor
sub
pop
sub
js
aam
sbb
mov
inc
mov
mov
and
test
and
and
mov
lds
lea
sub
scas
xor
pop
and
sub
inc
sub
movups
mov
popa
ins
imul
jae
xchg
icebp
outs
fcom
dec
inc
mov
mov
mov
imul
nop
mov
(bad)
fidiv
cmp
push
inc
and
lock
add
cwde
cmp
mov
push
fs
outs
and
cmp
pop
inc
or
mov
and
outs
aas
inc
outs
in
mov
mov
push
(bad)
mov
sets
stos
aas
inc
dec
jmp
and
mov
push
iret
out
or
out
sub
fsubr
mov
pop
push
xchg
xchg
jo
xor
out
push
add
and
push
(bad)
data16
xlat
daa
and
xor
mov
js
add
jb
dec
xchg
dec
out
cmps
cmps
jo
mov
push
mov
push
jnp
fldenv
call
push
sub
inc
push
add
stos
pop
ror
ja
push
outs
js
dec
popa
adc
sub
loopne
mov
jb
or
jae
loopne
imul
lea
mov
mov
dec
mov
dec
mov
dec
push
sar
add
ins
pop
mov
and
mov
sbb
jb
pop
adc
push
push
mov
or
or
inc
cmp
test
mov
jbe
cmp
or
inc
mov
mov
dec
mov
and
in
xchg
xchg
movs
aam
call
xor
(bad)
cs
jnp
sub
movs
inc
rcr
adc
mov
adc
test
pop
ja
ret
and
or
push
add
aam
outs
test
mov
daa
daa
adc
inc
cmp
iret
jmp
data16
mov
add
pop
aas
ins
xor
mov
pop
add
ins
inc
dec
pop
jo
mov
inc
jmp
fcmovbe
aaa
jno
xor
cmps
aad
push
ret
mov
add
fisub
retf
or
jge
jmp
outs
test
and
inc
dec
lods
jne
rol
out
inc
outs
in
add
lea
inc
push
inc
sub
cmp
fcomp
and
jle
shl
inc
xchg
addr16
popa
push
ja
xchg
push
js
repz
push
outs
pop
xor
xchg
test
popa
hlt
push
add
add
nop
adc
inc
arpl
out
sub
xor
out
scas
adc
test
mov
repz
outs
imul
pusha
dec
pop
es
rol
sbb
mov
add
fcom
push
pop
daa
sbb
sbb
pop
daa
shl
popa
jge
sbb
inc
ins
jne
and
fdiv
popa
lods
add
lahf
cdq
(bad)
sub
addr16
call
add
mov
dec
(bad)
aas
xor
mov
cmps
dec
ins
cmps
std
(bad)
(bad)
(bad)
dec
fbstp
mov
or
ror
cmc
dec
sbb
in
(bad)
(bad)
(bad)
jg
dec
call
mov
retf
lods
mov
pop
xchg
and
(bad)
(bad)
(bad)
call
push
test
rcl
push
out
cmp
xchg
jae
popa
cmp
push
retf
call
push
sti
mov
push
pop
scas
pop
ficom
mov
in
mov
jmp
pop
test
(bad)
(bad)
jmp
jl
into
dec
pop
pop
popf
ja
mov
movs
(bad)
(bad)
mov
mov
(bad)
call
or
dec
mov
arpl
or
test
xlat
hlt
dec
daa
sahf
jg
xchg
pop
push
(bad)
(bad)
dec
add
adc
add
punpckhwd
dec
push
inc
pop
push
jmp
jmp
jg
outs
cli
call
pop
ror
clc
add
movs
push
adc
push
and
(bad)
(bad)
inc
popf
retf
mov
jge
mov
add
call
call
pop
push
sbb
ja
cdq
(bad)
xchg
(bad)
lds
adc
ffreep
or
jno
cmp
(bad)
(bad)
jmp
popf
iret
jno
mov
jle
jne
imul
sti
jecxz
or
leave
arpl
(bad)
(bad)
dec
icebp
and
jb
lds
out
mov
mov
inc
(bad)
cwde
loope
(bad)
(bad)
push
xor
cmp
int
dec
or
call
pop
adc
adc
out
xor
(bad)
(bad)
(bad)
(bad)
push
daa
xor
add
fild
sub
xor
les
jmp
add
daa
mov
(bad)
neg
xor
adc
shl
cmp
(bad)
dec
(bad)
in
leave
aaa
nop
adc
push
push
cmp
adc
out
push
sbb
jmp
jmp
fbld
scas
fist
stc
sbb
or
mov
lahf
cmp
(bad)
(bad)
(bad)
jmp
pop
lds
cmps
cli
pusha
(bad)
shr
adc
rcl
jo
jg
(bad)
(bad)
dec
mov
mul
sbb
sbb
jno
cvtps2pd
movs
push
(bad)
jb
in
imul
(bad)
(bad)
(bad)
mov
ins
lea
popf
inc
jecxz
cmp
jg
mov
ja
(bad)
(bad)
(bad)
jmp
(bad)
arpl
adc
mov
adc
lods
clc
enter
sbb
outs
(bad)
(bad)
(bad)
jmp
mov
outs
push
xor
(bad)
inc
call
xor
xor
jl
push
mov
sub
aaa
mov
pusha
je
push
popf
xchg
or
fsub
add
inc
loop
leave
sbb
(bad)
(bad)
(bad)
jmp
mov
daa
daa
shl
dec
add
rcl
(bad)
test
nop
pop
mov
jl
inc
cld
mov
lds
ret
jae
cli
dec
or
add
xchg
(bad)
cmps
mov
(bad)
dec
cmps
jecxz
in
or
je
mov
ins
ins
std
(bad)
pop
or
popf
cmc
dec
dec
out
xor
sbb
jmp
or
xlat
cli
ja
(bad)
(bad)
call
jno
outs
daa
rcl
popa
adc
mov
add
xlat
jne
bnd
adc
push
or
mov
mov
push
sub
shl
push
jno
aas
retf
xchg
(bad)
dec
sbb
fs
fldenv
sbb
dec
push
xchg
ja
fdivr
stos
movs
mov
(bad)
(bad)
(bad)
cmp
push
mov
addr16
push
sub
loope
cmp
lds
dec
pop
jg
adc
(bad)
cmp
cmc
inc
mov
adc
pop
ins
jnp
jne
out
mov
and
pop
inc
pop
jb
(bad)
(bad)
(bad)
(bad)
stc
xchg
in
addr16
imul
mov
jp
xchg
fs
and
sub
cmp
fcos
mov
inc
push
xor
idiv
aam
sbb
icebp
clc
or
aam
sub
repnz
push
cld
ror
or
gs
sar
mov
out
xchg
les
(bad)
dec
dec
dec
data16
out
iret
daa
and
push
jns
dec
rol
clc
push
lock
test
arpl
ret
inc
mov
(bad)
(bad)
(bad)
(bad)
cmp
jle
int
adc
(bad)
push
sub
or
aaa
in
loopne
mov
or
push
call
call
popa
add
sar
add
adc
rcl
jae
sub
icebp
sub
fisttp
jmp
pushf
cmp
call
call
(bad)
(bad)
jmp
(bad)
fs
repnz
add
xchg
xchg
das
outs
(bad)
xor
sbb
cmp
cmp
(bad)
adc
jg
push
mov
mov
out
adc
jmp
repnz
jp
xor
xchg
add
(bad)
(bad)
jmp
add
jecxz
movs
sbb
adc
mov
inc
imul
cmp
push
mov
lods
dec
in
dec
(bad)
aas
inc
mov
adc
jns
pop
push
and
and
jg
dec
in
pusha
push
ja
or
fwait
sub
aas
sar
cmc
fs
mov
mov
std
(bad)
call
jge
mov
mov
cdq
inc
mov
mov
clc
mov
and
sub
iret
xor
dec
mov
iret
and
pop
pop
dec
sbb
sub
jmp
nop
cmps
pop
in
dec
or
in
sbb
push
sub
in
div
fcmovb
xor
das
dec
and
add
mov
add
jae
rcr
icebp
aad
add
cmps
adc
inc
xor
or
inc
push
and
popf
xor
push
adc
loopne
cmps
lea
sub
outs
and
pusha
push
shr
mov
pop
in
sbb
xchg
jb
mov
add
xlat
sbb
nop
mov
or
dec
cmp
loop
(bad)
into
sbb
int3
js
pop
push
pop
cwde
punpcklwd
jmp
es
xchg
stos
(bad)
outs
movs
aam
xlat
pop
pop
inc
sbb
in
jae
outs
pop
sbb
mov
mov
push
(bad)
push
fs
fistp
arpl
or
fwait
imul
adc
mov
and
cmp
(bad)
pop
pop
adc
mov
jecxz
mov
push
and
lea
add
pop
push
add
mov
das
and
adc
dec
mov
and
adc
in
or
lahf
jg
sub
inc
arpl
xchg
aas
(bad)
fdivr
(bad)
pop
dec
mov
add
jno
fcomp
pop
and
xor
and
jp
mov
setae
dec
popa
pop
fcom
cwde
sub
or
movhps
push
push
mov
push
push
hlt
(bad)
mov
retf
addr16
les
mov
mov
xchg
pop
or
xchg
push
outs
adc
aaa
adc
mov
setle
dec
iret
pop
ins
cmp
mov
and
inc
push
(bad)
and
out
pop
test
mov
cdq
and
dec
loop
inc
and
jae
sbb
lods
aaa
fistp
sbb
pop
test
inc
gs
adc
add
sub
or
push
(bad)
sub
lahf
jne
ins
pop
out
push
adc
scas
push
arpl
jae
xor
imul
scas
inc
jo
das
popa
jo
sub
xchg
dec
je
or
jo
cmp
xlat
mov
mov
inc
sub
iret
pop
dec
pop
push
mov
scas
xchg
mov
sbb
xchg
(bad)
jo
mov
pop
ret
vpcmpgtw
sbb
(bad)
gs
outs
das
mov
adc
inc
(bad)
dec
out
popf
shr
jbe
imul
push
xor
imul
mov
(bad)
pop
xchg
mov
pop
cmp
arpl
fadd
pop
push
add
in
xor
mov
and
fidiv
sub
lock
cs
gs
in
not
mov
in
jb
and
aam
add
add
les
fist
pop
movntq
out
inc
jle
xchg
sbb
push
sub
das
push
and
not
or
jno
xchg
sub
mov
sub
mov
paddusw
mov
mov
in
sbb
mov
(bad)
or
loop
mov
xchg
inc
ins
xor
mov
lock
addr16
cmc
enter
pop
fdiv
enter
push
dec
mov
iret
xchg
mov
xchg
mov
xor
xchg
add
in
out
pop
rol
dec
mov
mov
adc
cmp
push
sbb
cmp
sub
fdivr
scas
add
adc
popa
iret
int3
cli
scas
adc
bound
clc
hlt
jo
push
xchg
adc
hlt
adc
sti
jecxz
mov
enter
test
(bad)
hlt
lods
xlat
add
pop
and
or
hlt
js
xchg
mov
je
nop
adc
inc
ins
hlt
aam
dec
push
push
fwait
push
xchg
in
fisub
cmp
pop
das
fdivr
sbb
xlat
xor
(bad)
sub
push
and
mov
test
hlt
xchg
pop
xor
das
add
test
int3
mov
push
or
call
mov
xchg
sbb
or
adc
aas
cmps
adc
cmp
repz
out
sub
push
shr
push
std
add
cmps
in
mov
mov
add
pusha
add
out
pop
pause
aas
cmp
adc
jb
pop
aas
pop
or
mov
add
mul
pop
call
inc
(bad)
stos
sahf
popa
aaa
cmp
mov
aad
sbb
lahf
xor
nop
pop
mov
(bad)
cmp
jmp
push
cmp
ja
repnz
fdiv
test
dec
adc
pop
sbb
mov
out
(bad)
iret
jae
ror
mov
mov
jecxz
cmp
sar
sbb
fistp
shl
pusha
pop
outs
pop
add
shl
pop
jg
sbb
xor
iret
push
cmp
adc
sbb
or
inc
adc
popf
outs
xlat
shl
or
xchg
or
stos
xchg
sbb
mov
cmp
add
icebp
adc
mov
test
mov
mov
in
getsec
inc
test
addr16
jnp
add
test
add
int3
fcmovb
xchg
dec
pushf
dec
or
mov
add
mov
dec
push
rcl
or
add
mov
jle
dec
pop
das
push
pusha
pop
sbb
enter
sbb
int
in
pop
xor
adc
and
dec
stos
js
pop
(bad)
mov
add
les
mov
fcomp
inc
mov
scas
pop
adc
jbe
xchg
adc
push
or
push
mov
aas
jle
lahf
jo
(bad)
in
lock
adc
into
test
stos
lds
push
xlat
mov
movs
sbb
lock
nop
push
add
loopne
outs
inc
pushf
cmps
test
int
mov
ja
lock
add
mov
dec
scas
scas
lahf
cmp
add
push
lock
xchg
sub
or
aaa
adc
ja
mov
add
dec
xchg
sahf
add
shl
pop
add
cld
sar
or
arpl
jae
cmp
add
lods
xor
push
cmp
pusha
pusha
ja
test
xchg
or
jge
cmps
stc
sbb
lock
inc
jle
pusha
jg
push
shl
frstor
push
aam
push
sar
adc
xlat
cs
fistp
sub
ss
cmp
pop
in
and
jmp
mov
cmp
daa
outs
sub
push
pop
jae
cmp
outs
xchg
(bad)
repz
nop
push
rol
and
iret
cmp
loopne
xchg
test
(bad)
push
rcr
out
imul
push
shl
fidivr
inc
mov
push
clc
and
imul
mov
jl
adc
mov
sbb
lods
ss
mov
mov
jns
pop
sub
daa
out
sub
xor
pusha
pop
xor
test
or
inc
and
adc
cmc
adc
push
jmp
outs
adc
inc
xor
shr
shr
clc
jns
sbb
ins
retf
out
(bad)
aam
aaa
nop
aad
inc
push
cdq
pop
sub
jg
sbb
mov
mov
popa
imul
xchg
sbb
sub
xchg
dec
sub
xchg
and
enter
out
shl
or
pop
sbb
ret
scas
stos
dec
pop
jg
pop
aad
mov
test
mov
lahf
adc
push
inc
mov
mov
fisubr
xor
xchg
daa
lahf
add
dec
ret
movs
mov
daa
push
add
shl
add
out
or
iret
jg
in
xchg
aam
jns
push
mov
push
push
push
in
popa
and
inc
adc
adc
sub
jno
ins
es
and
je
stos
sub
iret
or
jl
ss
or
dec
lea
mov
daa
(bad)
arpl
aas
mov
adc
push
pop
and
add
cmp
mov
bound
dec
fwait
movs
xor
or
sub
aam
int3
jmp
jnp
dec
dec
dec
ins
mov
aas
and
cs
pop
add
sub
add
mov
xor
pop
mov
movs
inc
add
inc
add
xchg
dec
add
dec
sar
lahf
dec
loopne
xchg
cdq
dec
add
dec
xchg
(bad)
out
ins
fwait
dec
adc
je
popf
dec
add
dec
jne
lahf
push
add
push
jg
out
xchg
add
jbe
mov
xchg
add
out
loopne
xchg
xor
xor
xchg
ins
xor
inc
cmp
ja
sar
jp
cmp
pop
jl
add
mov
push
jge
add
jle
add
movq
add
xor
push
sub
mov
dec
jg
jo
int
push
or
lldt
add
enter
inc
cmp
adc
out
adc
adc
adc
cmc
sbb
(bad)
adc
cmps
xchg
push
push
or
adc
jge
loop
imul
or
hlt
add
jo
add
pop
inc
dec
mov
sbb
sbb
sbb
inc
pop
xchg
sar
jp
sbb
jmp
push
and
inc
xchg
push
hlt
imul
and
or
push
dec
and
and
mov
or
dec
ins
outs
jecxz
push
cmp
int
daa
push
(bad)
icebp
imul
das
iret
mov
jmp
sub
xor
jecxz
add
sub
mov
mov
sbb
push
das
sub
test
dec
fwait
out
xchg
sub
dec
add
retf
add
daa
add
popa
fld
pusha
ins
add
inc
push
sbb
add
cmp
push
adc
jp
or
pop
lock
les
shl
dec
repz
aam
add
pop
outs
pop
add
fisub
dec
add
push
ja
cmp
jl
cmp
imul
mov
pusha
movs
rcr
ss
je
dec
movs
test
sbb
jne
xor
push
mov
adc
movs
mov
dec
and
test
xchg
mov
mov
loopne
loopne
loopne
int3
das
out
mov
add
adc
(bad)
cwde
xor
xor
mov
xor
stos
inc
bound
jecxz
call
mov
test
pop
daa
sub
push
imul
dec
sub
dec
ja
in
test
out
adc
push
xchg
call
clc
adc
cmps
dec
rol
push
cmp
bnd
mov
nop
fisubr
xor
mov
dec
addr16
push
mov
sbb
fiadd
xchg
stos
pop
sti
cli
mov
dec
das
dec
int
ss
lea
jge
mov
pop
retf
push
loopne
and
pop
adc
movs
daa
dec
jae
push
sbb
and
xchg
push
pop
loope
adc
xor
xor
mov
add
mov
test
mov
pop
push
add
nop
dec
and
xchg
dec
sti
scas
fild
inc
sbb
jo
dec
les
add
sbb
or
movs
xchg
icebp
fs
call
push
dec
inc
pusha
adc
and
xor
das
loope
in
fxch
mov
je
jne
dec
add
xchg
mov
(bad)
push
xchg
xor
pop
aaa
mov
add
and
call
push
test
in
xlat
pop
imul
pop
jg
push
dec
lahf
mov
movs
cmc
aaa
xlat
call
or
and
sub
out
sub
pop
cmp
sbb
daa
add
pop
and
xchg
dec
imul
push
mov
mov
push
xchg
mov
dec
pop
stos
movs
cmps
xor
popa
cmps
cmp
and
and
sahf
push
aam
or
imul
and
out
in
sti
lods
pop
adc
mov
xchg
test
js
aam
sahf
fs
ss
push
push
add
pop
add
call
imul
add
or
push
jo
mov
jo
dec
push
pop
pop
mov
dec
aas
or
in
or
lock
push
repnz
dec
lock
lock
and
jns
lock
lock
lock
sub
sbb
mov
mov
test
aas
ins
pop
stos
add
cwde
or
(bad)
mov
xor
or
adc
(bad)
ja
aaa
sub
and
lahf
and
(bad)
mov
aaa
push
push
push
push
push
mov
sub
inc
adc
ja
adc
inc
jmp
jo
out
push
pop
cs
sar
outs
add
adc
ins
ret
enter
out
mov
rcl
add
(bad)
cld
xor
shr
add
cmc
xchg
add
stos
and
adc
mov
push
mov
lock
arpl
jne
and
add
es
sti
pop
ja
lahf
inc
dec
fwait
ss
pusha
mov
dec
icebp
mov
or
sahf
add
mov
push
add
cmovno
mov
(bad)
adc
mov
scas
cmp
xor
aas
sub
adc
dec
push
inc
or
push
jae
push
cwde
dec
push
inc
push
push
enter
push
push
outs
jl
jo
cld
cmovle
dec
or
pop
stos
fistp
sbb
mov
push
call
pop
mov
inc
dec
inc
pop
adc
(bad)
btc
jmp
test
or
mov
xlat
sbb
sub
sub
push
push
cmps
dec
retf
pop
ja
cmp
fwait
push
mov
shl
sbb
mov
into
adc
pop
ins
or
pop
sub
push
sub
jae
dec
das
xor
cmp
add
dec
pop
ror
(bad)
(bad)
jne
sub
pusha
stos
js
or
shl
(bad)
aaa
out
xor
xor
xor
lods
add
jne
mov
jge
(bad)
(bad)
mov
mov
sar
dec
sub
fs
push
or
fldcw
dec
loopne
jbe
mov
and
jo
enter
nop
push
push
fstp
push
xor
sbb
test
das
cmps
mov
xor
push
cmp
ss
adc
xor
imul
dec
aaa
fistp
fmul
rdmsr
out
cmp
ds
dec
imul
dec
jo
push
cmp
cmp
imul
add
add
dec
jne
inc
push
je
pushf
inc
mov
and
ins
lods
cmp
in
out
enter
xchg
pop
and
mov
lods
shr
mov
into
mov
in
ret
and
add
pop
inc
sbb
xor
jae
call
cmp
repnz
xor
xor
inc
outs
jne
xor
lods
ret
(bad)
iret
in
mov
fcomip
adc
dec
push
fmul
(bad)
xchg
test
mov
and
push
push
add
mov
sti
jle
inc
add
loopne
add
cmps
jge
jnp
dec
ds
push
lock
xor
(bad)
jns
push
xor
jg
rol
call
sub
aas
fwait
xor
add
jbe
push
and
jecxz
call
lahf
jnp
cmp
xor
xor
sub
idiv
xor
xor
mov
jmp
xor
jge
jne
pusha
js
push
jne
push
mul
add
repz
mov
dec
inc
je
push
mov
add
rcl
pusha
jns
push
out
push
loopne
jp
ins
mov
adc
outs
nop
jp
lahf
cmps
popf
jl
push
jo
jle
push
jbe
jo
inc
pusha
jl
cmps
or
in
loopne
cs
mov
addr16
xor
xchg
dec
add
sub
inc
mov
and
cmp
push
pop
xchg
nop
and
and
jecxz
mov
jns
and
and
mov
mov
jo
daa
in
mul
loopne
pusha
mov
xchg
mov
mov
lea
pusha
mov
push
inc
cmps
adc
and
push
daa
test
bswap
ret
and
pop
adc
clc
cmp
sub
ins
in
lock
push
xor
fdivr
jb
fwait
idiv
cmp
call
movs
mov
sar
(bad)
jl
cmps
push
nop
push
adc
iret
loopne
test
push
nop
rol
cmp
aas
add
cmp
add
int
adc
dec
push
sar
push
add
fidiv
sbb
data16
mov
das
ins
adc
pop
inc
std
xchg
aad
in
inc
call
dec
push
ja
pop
adc
xchg
push
fs
inc
cmps
shl
add
in
test
(bad)
movlps
sub
cmp
enter
ds
call
jg
pusha
push
or
xor
push
push
pop
sub
push
nop
or
mov
gs
sub
andps
mov
loop
sbb
ins
and
or
cmp
cmp
and
pop
adc
jnp
push
and
dec
shl
out
sub
push
dec
test
jne
jo
adc
data16
shr
cmps
pop
sbb
pop
iret
stos
lods
(bad)
adc
inc
add
jge
(bad)
pop
add
push
adc
push
push
rol
pop
sbb
and
push
push
push
push
fcomp
aaa
pop
dec
push
scas
push
xchg
dec
pop
and
neg
push
addr16
or
and
jae
sbb
inc
pop
cmp
test
clc
jle
jne
js
sub
jnp
push
mov
cmps
and
and
or
jb
sbb
outs
adc
pop
xchg
test
outs
jb
jne
mov
inc
push
je
pop
fwait
int3
dec
push
ss
pop
bound
outs
(bad)
sub
ret
daa
inc
push
dec
cs
cmp
inc
and
push
lock
sub
cli
sub
sub
pop
cmp
cmps
mov
imul
add
ret
ss
data16
add
inc
or
dec
test
aas
sub
js
jbe
(bad)
sub
sub
pop
jl
jo
ins
pop
ja
inc
or
jmp
and
(bad)
mov
jbe
imul
push
sub
mov
jmp
pop
pop
pop
nop
or
jnp
mov
sub
xchg
daa
js
imul
cwde
pop
je
jae
jbe
xchg
ret
inc
dec
dec
mov
inc
mov
(bad)
daa
test
mov
popf
adc
cs
nop
ins
das
sahf
daa
sub
or
shl
or
cs
mov
xor
adc
xor
and
mov
adc
xor
xchg
pop
test
aaa
xor
inc
push
xlat
sub
lods
iret
fist
adc
adc
push
das
in
gs
dec
inc
xchg
lods
jae
imul
fs
mov
adc
les
ficom
(bad)
pop
pop
fsubr
(bad)
daa
ror
xchg
pusha
sub
outs
dec
imul
jae
xor
nop
out
xor
sub
pop
into
jecxz
push
out
(bad)
pop
adc
in
mov
xor
push
imul
outs
test
mov
(bad)
call
dec
and
inc
js
cmp
pop
pop
jbe
jne
push
push
push
dec
adc
push
xchg
ret
dec
retf
inc
push
add
dec
cld
mov
sub
lock
inc
dec
xor
jnp
lea
stc
ret
sub
jge
mov
mov
inc
(bad)
mov
xchg
lods
mov
iret
repz
loop
jge
push
push
mov
(bad)
mov
(bad)
sub
push
je
in
mov
and
das
aas
sbb
push
popa
out
fdiv
lods
xchg
inc
pop
rol
sti
cmp
ins
iret
dec
inc
sub
jno
(bad)
int
or
fs
or
arpl
aaa
cld
mov
pop
pop
mov
jmp
ins
les
lahf
sbb
sti
loopne
pop
ins
sub
fdiv
pusha
mov
sbb
das
hlt
mov
sub
fwait
mov
sub
add
jae
aad
jp
scas
cmp
pusha
rcr
ins
xchg
push
add
or
cmp
stos
outs
push
data16
sub
outs
out
xchg
xor
xor
lock
mov
and
push
out
sub
add
mov
fdivr
jp
add
add
std
sub
push
adc
cld
pop
jge
test
mov
inc
push
cmp
(bad)
sti
push
ins
jne
xor
and
arpl
pop
mov
push
add
xor
mov
xchg
ss
aas
mov
xor
xor
inc
cli
xor
sbb
mov
and
jne
pop
mov
sbb
fiadd
add
popa
mov
cwde
xor
cmp
ins
arpl
jmp
xor
push
jp
dec
adc
jb
int
test
outs
sbb
sub
outs
sbb
out
fild
and
jne
jns
or
clc
pop
popa
push
push
outs
outs
jne
daa
add
dec
ins
and
test
dec
xor
push
lods
jo
ins
fs
sub
xor
inc
ja
or
aas
nop
setle
inc
retf
sar
fxch
fs
ins
fisttp
jb
sbb
jp
rol
mov
aam
sbb
xor
or
scas
add
ror
mov
mov
fwait
pusha
jo
lods
mov
or
or
js
dec
add
mov
(bad)
inc
rcl
jmp
cmc
arpl
pop
mov
push
mov
pop
dec
mov
jg
xchg
je
push
mov
sub
pop
sub
je
and
movzx
mov
add
mov
or
mov
inc
push
xor
hlt
cmp
add
fs
or
cld
popf
popa
mov
test
int
inc
jb
das
xor
xor
cmp
pop
and
stos
test
add
sar
jnp
mov
aaa
sub
aaa
scas
stos
imul
cmc
mov
pusha
jmp
call
add
(bad)
adc
repz
neg
mov
jno
fdivr
daa
jbe
push
repz
call
inc
rol
dec
sub
xor
test
addr16
sbb
movs
jns
in
dec
jb
xchg
mov
ja
mov
inc
add
pop
enter
fsub
pop
enter
int3
adc
ins
fild
xor
stc
(bad)
adc
inc
jmp
sub
jns
in
jo
fs
pusha
fs
sahf
or
lods
mov
mov
xchg
lods
inc
pop
cmp
clc
xchg
or
adc
pusha
fstp
pusha
inc
xchg
clc
cdq
nop
int
fadd
popa
mov
xchg
out
pop
jmp
ror
xlat
mov
fadd
xlat
(bad)
clc
les
fbstp
aam
xchg
sub
out
pop
and
and
lock
rcl
daa
and
aas
iret
shr
(bad)
data16
dec
pop
imul
push
or
cmp
in
inc
sahf
js
mov
js
pop
jb
daa
movs
movs
in
fs
iret
test
or
fdiv
or
xchg
in
cmp
pop
add
push
movs
ins
mov
mov
dec
add
pusha
aaa
int3
mov
fadd
aaa
mov
or
aam
lock
iret
inc
xchg
aam
(bad)
clc
pop
cmp
ja
xor
cmp
mul
pushf
sbb
pop
pusha
push
adc
or
mov
mov
nop
out
lahf
cmp
fadd
adc
dec
lahf
mov
add
aas
add
outs
xchg
xchg
pop
or
addr16
pop
sub
ja
mov
hlt
je
inc
adc
addr16
mov
daa
rcl
aas
add
mov
sbb
and
dec
adc
mov
ins
push
fs
mov
sahf
or
xchg
mov
in
pop
xchg
xchg
mov
shr
or
add
inc
xchg
in
ins
inc
ds
in
out
cmp
(bad)
pusha
ins
shl
addr16
adc
cmp
pushf
jp
or
and
mov
jae
int3
fsubr
or
in
jnp
int3
xchg
xchg
mov
inc
mov
in
jnp
dec
jnp
mov
mov
xchg
mov
xchg
jnp
jnp
and
xchg
pop
enter
fsub
lock
clc
fsub
out
ins
pop
or
pop
add
leave
inc
jl
mov
test
xchg
xor
and
enter
repnz
enter
rcr
pop
jb
pop
pop
rol
sbb
sub
fadd
cdq
test
push
ins
outs
xchg
rcr
add
cmp
adc
inc
sbb
out
or
push
repz
sub
test
pop
out
cmp
inc
push
push
xor
ja
mov
pop
inc
push
loopne
pop
sbb
cmp
repz
mov
jns
cmps
dec
js
aad
pusha
into
sti
cmp
push
jo
jmp
dec
popa
iret
repz
repz
jmp
push
imul
loop
inc
fs
ja
jno
fcomp
cmps
stc
cmp
push
js
and
dec
repz
js
fcomp
addr16
mov
add
js
cmp
repz
cmp
mov
stc
sub
mov
imul
loope
mov
imul
sahf
out
sar
cmp
out
ds
mov
sbb
mov
lahf
ja
clc
sub
push
cwde
mov
mov
push
shl
jae
iret
sar
rol
xor
adc
inc
jbe
ja
pusha
sahf
jl
out
enter
icebp
and
cmp
ror
shl
jp
ds
retf
sub
and
mov
loopne
jge
nop
loopne
out
jl
jle
pop
jg
sbb
xor
fcomp
adc
call
test
repz
jnp
push
xor
shr
xchg
call
push
cwde
enter
fmul
mov
push
push
fwait
call
jg
or
push
aas
jle
mov
mov
xchg
sbb
iret
cmp
test
popa
mov
inc
ror
iret
add
xchg
rcr
daa
xchg
adc
sbb
lahf
jns
add
lea
cmp
dec
xchg
stos
aas
fisubr
xchg
mov
mov
in
ror
jg
mov
stos
mov
mov
cmp
enter
popf
dec
dec
and
in
call
jg
in
aas
(bad)
out
aaa
in
scas
dec
(bad)
pop
fmul
lock
xor
mov
pushf
std
add
mov
dec
(bad)
aas
(bad)
daa
xchg
pop
leave
pop
add
or
lods
add
rol
add
adc
ror
push
inc
pop
jg
and
dec
mov
adc
es
es
(bad)
adc
fbld
mov
jg
sub
pushf
stos
cs
cmp
mov
fimul
es
hlt
dec
aas
enter
repnz
movhps
and
push
add
xchg
push
inc
push
iret
aad
jbe
stc
pop
add
in
pop
stos
pop
aas
jns
dec
enter
jg
pop
lds
aas
mov
out
pop
sar
cmp
out
pop
adc
inc
dec
jne
mov
mov
fcom
xchg
mov
nop
pop
jb
pop
xor
pusha
xchg
pop
jb
lock
pop
mov
shl
dec
fsubrp
sbb
jno
add
in
and
mov
and
xor
push
js
sar
in
(bad)
icebp
push
add
xchg
dec
icebp
repz
pop
adc
sub
dec
and
mov
cmps
pop
and
jo
xchg
jl
dec
leave
leave
enter
pop
or
leave
leave
leave
leave
sbb
sub
sbb
jmp
cmp
pushf
pushf
fmul
push
pop
pusha
push
jo
jg
push
pop
cmp
or
fs
ss
loopne
call
repnz
add
adc
jb
sbb
sub
jb
jb
cmp
push
cs
jb
pusha
push
mov
ja
ja
and
and
in
es
scas
shl
mov
(bad)
out
test
xchg
inc
cmp
add
mov
in
hlt
push
(bad)
sbb
adc
adc
ficomp
add
aas
inc
loop
adc
push
jg
adc
push
call
(bad)
fimul
jg
das
fisttp
xor
loopne
pop
wrmsr
sbb
jns
cmp
lahf
div
adc
(bad)
fdivr
dec
push
sub
ins
mov
xor
xor
mov
loope
adc
fild
ds
pop
xchg
mov
jl
pop
mov
xchg
jl
or
mov
push
rol
dec
aaa
fdiv
xor
sbb
or
inc
loopne
jnp
xchg
mov
jle
dec
xchg
xchg
sar
xor
sbb
mov
ss
retf
repnz
movs
mov
add
mov
adc
loopne
in
outs
push
pop
push
pop
addr16
dec
push
pop
es
ds
mov
mov
mov
add
push
dec
jl
inc
pushf
je
mov
mov
loopne
jb
dec
repnz
inc
cs
dec
pop
and
jo
dec
cs
or
mov
push
xlat
addr16
inc
mov
pusha
xor
ins
fucom
ds
dec
push
pop
add
xchg
adc
xchg
in
jns
or
outs
nop
xchg
xchg
dec
daa
daa
push
shr
cmp
mov
loopne
jmp
fisub
push
adc
pop
leave
and
inc
cld
mov
leave
jl
popa
pop
jnp
mov
popa
xchg
popa
mov
repz
add
jle
enter
popa
or
cmp
mov
xor
xchg
pushf
xchg
xchg
inc
xchg
adc
and
pop
leave
push
xchg
out
bound
xchg
push
int3
shl
sub
nop
bound
cs
dec
aaa
in
ins
fild
xchg
adc
and
in
je
and
pop
and
pop
xchg
add
lock
dec
cmps
in
sar
loopne
arpl
mov
fbld
pop
leave
jae
inc
or
add
in
dec
scas
add
cmp
fcmovne
pmovmskb
or
adc
aas
add
repnz
pop
and
xchg
in
xchg
shl
hlt
or
inc
fs
inc
add
or
jb
inc
repnz
adc
mov
add
cwde
xchg
fbld
sahf
or
add
shl
fisubr
jg
cwde
push
add
and
pop
pop
leave
and
mov
pop
test
mov
mov
mov
push
mov
push
inc
mov
mov
add
pop
popf
ja
cmp
sub
out
sbb
or
dec
push
outs
push
imul
xchg
dec
cs
shl
rcr
call
jg
addr16
xchg
fild
inc
inc
addr16
jae
dec
sahf
add
and
loopne
jnp
leave
inc
lock
or
addr16
jb
inc
xor
push
xchg
jo
(bad)
mov
mov
and
pop
scas
fild
mov
in
in
setge
xor
adc
pusha
push
pushf
pop
and
cwde
and
pop
and
inc
fninit
xchg
leave
and
jns
inc
fwait
lock
push
sbb
or
xchg
xchg
push
loop
lahf
mov
mov
xchg
xchg
push
push
push
push
stc
mov
push
imul
jns
inc
mov
popf
imul
fs
imul
pop
imul
fs
pop
shl
add
push
jb
pop
jb
mov
pop
call
jns
adc
nop
inc
repnz
pop
lahf
inc
lahf
pop
rol
push
push
daa
js
and
sub
popf
mov
leave
ins
int3
ja
push
or
lahf
in
add
mov
mov
sub
mov
ins
jb
pop
and
mov
dec
mov
mov
push
push
shl
inc
sbb
iret
cld
ja
and
popf
fisttp
push
ja
mov
nop
fwait
cmps
je
pushf
pop
and
call
xchg
mov
outs
xchg
mov
and
mov
outs
punpcklbw
add
sbb
nop
pop
push
sahf
out
mov
mov
add
jns
add
outs
pop
push
jo
jo
dec
sahf
ja
push
add
iret
add
jno
xchg
jo
or
out
inc
pop
and
jo
push
pop
cs
pop
mov
ja
xchg
or
jno
repnz
jno
jno
jno
cmp
in
cmp
push
add
sahf
out
pop
or
or
mov
lods
ds
ja
cmp
or
push
mov
dec
out
jno
dec
jb
stc
dec
mov
pop
push
cmp
jb
repnz
mov
dec
xchg
jb
mov
sahf
jb
jb
jb
(bad)
retf
mov
and
aaa
add
movs
jae
mov
pusha
push
mov
mov
clc
ins
inc
leave
(bad)
and
nop
pop
nop
das
and
je
and
push
std
ret
ret
add
xchg
shl
mov
or
sbb
jb
je
imul
cs
iret
add
daa
iret
push
lods
mov
iret
enter
into
je
inc
cmps
stos
push
sub
add
xor
dec
add
repnz
inc
add
xchg
and
inc
pcmpeqw
mov
jne
mov
jne
xchg
and
jne
jne
push
or
cmp
repz
or
cmp
aad
(bad)
jmp
cli
jne
jbe
and
sbb
push
divps
jbe
jbe
cmp
lds
pop
dec
dec
dec
or
jbe
jbe
dec
dec
dec
jbe
jbe
dec
dec
dec
dec
jbe
jbe
add
dec
jbe
ja
test
test
outs
xchg
xchg
or
iret
in
and
nop
push
add
xchg
xchg
pop
and
adc
in
ja
lock
js
in
adc
xor
inc
js
or
loop
cs
addr16
pop
mov
cmp
fcmovbe
(bad)
popf
rcr
jmp
xchg
and
adc
jns
stos
and
ins
push
addr16
add
pop
daa
pop
jo
idiv
xchg
pminsw
movs
stos
test
shl
stos
mov
pop
mov
xchg
push
jb
xor
stos
stos
or
ins
in
mov
nop
pop
enter
jns
sub
leave
and
lods
sub
jl
or
push
mov
mov
jp
push
add
iret
repz
sub
ds
jns
out
add
pushf
cmp
pop
push
or
cmp
xchg
cdq
scas
or
push
cwde
dec
pop
pusha
pop
ins
lods
jnp
sbb
jnp
enter
xchg
add
ja
pop
jnp
jnp
leave
repz
add
sahf
out
cmp
xchg
out
pop
sahf
or
or
call
movups
lods
addr16
dec
dec
es
pop
nop
xchg
dec
dec
cs
cwde
(bad)
icebp
pop
ja
ror
fsub
lods
pushf
jbe
push
daa
jge
addr16
xor
sub
addr16
scas
pusha
push
daa
dec
dec
cmps
neg
iret
jo
or
mov
lea
movs
pop
and
clc
push
daa
adc
xchg
enter
enter
daa
rcr
test
dec
jb
jo
inc
scas
xor
mov
push
add
repz
sbb
and
dec
shr
mov
into
sub
in
xchg
dec
pop
das
or
addr16
int
in
neg
jg
jg
cs
jae
pop
cmp
inc
pop
dec
js
mov
push
mov
enter
pop
fwait
jg
jg
jg
jae
fstp
cmps
das
pop
add
adc
mov
jg
cmp
daa
pusha
and
xor
daa
iret
sbb
add
xor
adc
shr
or
sbb
out
fisubr
xor
cld
(bad)
adc
movlps
adc
repnz
loope
or
cmp
pusha
sub
in
and
mov
mov
daa
daa
daa
adc
fsub
out
jbe
daa
daa
std
or
dec
sbb
addr16
js
outs
xchg
xchg
xchg
add
and
mov
punpckhdq
mov
push
add
sub
add
add
popf
cld
and
mov
sbb
and
fst
daa
pusha
jae
or
cs
scas
xchg
jb
(bad)
add
mov
inc
mov
add
mov
dec
sahf
inc
pop
mov
scas
add
cmp
fucom
adc
mov
push
inc
and
scas
jo
js
mov
in
sub
setno
test
dec
push
mov
fistp
mov
or
enter
inc
mov
test
data16
cmp
daa
test
test
addr16
jnp
xchg
pop
ins
xchg
test
mov
fcmovnu
(bad)
icebp
xchg
sub
mov
and
push
push
test
and
iret
xchg
xchg
xchg
test
and
cmp
xchg
xchg
xchg
or
bnd
maskmovq
test
ja
loopne
add
push
xchg
jo
push
jb
jae
add
add
cmc
xchg
pushf
nop
sar
mov
mov
push
loopne
add
aas
mov
mov
pushf
or
iret
and
or
shr
xchg
cmp
xchg
cmp
mov
mov
lock
clc
shr
xchg
xchg
pushf
nop
push
jb
xor
jo
and
jno
mov
add
outs
daa
adc
xor
ret
or
and
fldenv
daa
cmp
repz
push
pop
pop
out
cmp
or
push
or
sub
rcr
adc
xchg
test
lahf
xlat
scas
pop
sahf
scas
inc
dec
push
(bad)
cmp
push
fcmovnu
and
push
daa
out
jns
xor
movups
dec
rol
inc
outs
pushf
xchg
and
pop
jecxz
rcl
fadd
pop
loopne
mov
scas
pushf
and
pop
jg
add
sub
pop
and
dec
dec
inc
mov
dec
xor
mov
sbb
and
outs
mov
in
ds
add
cmp
clc
mov
or
mov
pop
and
das
arpl
out
cmps
dec
dec
jle
xchg
scas
cmp
mov
(bad)
jecxz
cmp
mov
mov
int3
ds
jns
pushf
cmp
adc
sahf
push
ins
and
dec
stc
mov
(bad)
ds
mov
mov
ucomiss
pop
push
mov
lods
mov
pop
mov
cmp
sti
aaa
jmp
inc
sub
inc
sbb
jmp
sahf
(bad)
(bad)
daa
mov
cmp
inc
cmps
daa
cwde
sbb
cmp
iret
leave
sbb
ja
inc
sahf
mov
xlat
in
dec
pop
enter
mov
adc
jl
add
add
test
and
inc
mov
(bad)
rol
mov
in
mov
pop
push
jo
pop
mov
push
loop
pop
inc
into
push
adc
dec
mov
fcmovne
repz
add
pop
ja
cmp
add
cwde
(bad)
pop
or
out
or
fistp
mov
mov
mov
outs
and
mov
dec
pop
push
repz
pushf
pushf
bound
or
fcmovne
or
jl
js
(bad)
ror
inc
and
adc
mov
add
pop
push
repnz
adc
fadd
and
outs
lds
iret
mov
shl
rcr
dec
jb
lods
push
ror
in
cmps
bound
fsubr
das
pop
enter
loopne
(bad)
in
pop
adc
je
aas
inc
out
loope
cmp
call
or
inc
outs
es
cmps
pop
add
fdivr
ret
cmp
dec
les
int
je
inc
rcl
shl
mov
daa
ds
cld
mov
xlat
dec
pop
iret
ins
aam
sub
cdq
in
rcl
es
dec
movs
mov
xchg
mov
dec
fsub
sahf
js
jo
cwde
pushf
mov
jae
(bad)
shl
or
out
call
sub
rcl
mov
lods
inc
xchg
push
add
pop
cmp
scas
push
lods
aad
(bad)
ficomp
or
pop
mov
mov
xor
lods
add
sbb
retf
js
and
cmps
fs
mov
lods
sbb
jnp
mov
mov
mov
stos
jae
push
mov
sbb
jno
addr16
(bad)
or
inc
adc
jmp
cs
stos
jb
inc
pop
add
jbe
cmps
add
sub
es
out
add
mov
mov
xchg
push
or
pop
inc
add
add
call
jns
xchg
sub
inc
xchg
push
mov
mov
mov
inc
sub
dec
stos
adc
or
xchg
call
dec
add
or
(bad)
mov
(bad)
push
mov
mov
sub
pop
addr16
jo
add
and
mov
or
add
pop
xchg
mov
cmp
mov
and
and
jp
xor
lods
add
clc
inc
or
jecxz
pop
test
inc
comiss
arpl
mov
sbb
push
loope
adc
bound
xchg
jo
fld
jae
ret
sti
les
xor
adc
aas
sar
or
repnz
cmp
test
mov
push
xor
lods
dec
mov
and
and
sub
call
jnp
stos
shl
add
push
lods
push
cmp
loopne
sub
cmc
je
adc
and
fcmovne
push
add
sub
lock
pop
pop
push
inc
or
pop
jo
cmps
mov
add
add
push
xchg
sti
(bad)
gs
jmp
sbb
jae
push
js
adc
jle
enter
sub
out
push
loopne
imul
jo
sub
imul
lock
and
inc
fcom
ins
inc
fild
mov
inc
ror
sbb
xlat
add
dec
arpl
shr
aad
jp
mov
mov
imul
dec
cmps
sbb
fisttp
sbb
rcr
lea
frstor
adc
ss
push
add
inc
inc
dec
cmp
(bad)
call
lods
rcl
rcl
mov
or
mov
cmp
das
fld
push
xor
ins
rcl
pop
and
ss
dec
or
outs
add
jbe
push
cmps
inc
rcl
ret
pop
cmp
stos
movs
xor
outs
jmp
add
imul
push
xor
shl
mov
cmc
inc
nop
push
jmp
jg
inc
and
or
les
add
inc
add
jnp
mov
add
jae
push
pop
hlt
dec
inc
dec
add
sti
lock
adc
push
outs
out
and
pop
iret
pop
mov
dec
inc
imul
aam
mov
mov
cmp
or
and
add
pop
add
sub
push
inc
sbb
movs
lods
(bad)
dec
shl
jnp
loopne
pop
jno
push
cmp
gs
inc
jbe
sub
sub
out
jae
scas
xor
sbb
dec
loop
les
cmp
or
int
add
lods
xchg
retf
mov
adc
mov
ins
sub
rcl
xchg
(bad)
call
and
rol
sub
sub
inc
sar
rcl
push
mov
inc
pop
add
fwait
inc
rcl
cmp
and
mov
mov
rcl
dec
pop
mov
adc
add
inc
dec
pop
and
shl
cwde
or
inc
and
scas
ins
jg
call
sbb
call
add
jmp
ins
dec
mov
adc
ret
mov
ins
jmp
aad
add
push
outs
dec
(bad)
mul
push
xchg
mov
xchg
mov
mov
fidiv
push
in
scas
dec
and
mov
and
mov
add
or
sbb
add
les
jmp
pop
rol
mov
push
dec
inc
into
push
aam
ret
mov
out
pop
jecxz
ror
fdiv
jg
fadd
mov
cmps
cmps
mov
add
pop
mov
sbb
pop
and
adc
mov
sbb
and
pusha
add
xor
ficom
xor
div
push
dec
out
cmp
dec
je
fidivr
aam
inc
(bad)
adc
sub
lahf
fstp
pop
les
out
ja
mov
sub
mov
push
rol
nop
aas
mov
or
mov
cmp
repz
adc
imul
test
lods
sahf
out
sahf
sbb
sbb
cmp
repz
hlt
cmps
pop
nop
and
xor
repz
and
movs
fdiv
cmp
js
jns
jp
jns
xchg
cmc
push
cld
cs
adc
jl
(bad)
dec
mov
sub
and
mov
sbb
div
jbe
add
pushf
imul
push
pop
out
inc
push
scas
scas
fdiv
push
pop
mov
and
mov
xlat
inc
pop
mov
aas
jne
mov
dec
iret
xor
les
mov
pop
push
sbb
aas
add
pop
push
int
xlat
test
adc
imul
jl
jns
out
je
ins
push
pusha
pop
push
inc
cmp
jns
out
and
sbb
adc
jns
out
or
add
iret
repz
cld
mov
hlt
in
loopne
cmp
int
shl
push
mov
rep
cwde
mov
iret
js
pop
cmp
pop
cmps
pop
cmps
push
rcl
test
pop
xchg
adc
dec
pop
pop
out
adc
push
mov
mov
jg
push
dec
test
neg
dec
(bad)
(bad)
call
and
adc
push
fiadd
data16
inc
pop
jnp
dec
lahf
aas
push
outs
ins
inc
aas
add
push
adc
outs
bound
fdivr
cmp
lock
sub
push
pop
inc
push
dec
inc
sbb
jmp
fidiv
das
jnp
imul
cmps
push
mov
out
rcl
inc
outs
cmp
gs
out
rol
aaa
aam
imul
xchg
mov
(bad)
aas
xor
(bad)
rol
add
fnsave
aas
push
sub
fist
add
pop
out
pop
mov
rol
les
or
mov
push
mov
cmp
xor
lods
mov
movs
fst
xchg
cmovo
push
dec
push
adc
add
mov
add
les
pop
mov
push
push
mov
cmps
cdq
add
lahf
push
retf
push
int3
add
int
pop
movs
push
or
add
xchg
shr
test
or
or
in
xchg
push
cs
pop
mov
mov
add
pop
mov
add
add
jbe
das
dec
in
ror
adc
aaa
pop
and
add
ins
pop
out
pop
add
leave
fwait
xchg
inc
add
mov
jb
inc
sbb
mov
add
pop
adc
xchg
dec
sahf
adc
add
xor
cld
in
add
out
jns
call
cs
rcl
or
jns
xchg
add
out
lods
sbb
and
cwde
pop
sbb
jb
mov
pop
leave
xor
or
and
fs
add
push
sahf
cmp
ins
leave
xor
xor
jo
pushf
add
xor
mov
imul
push
loope
or
nop
cmps
cmp
pop
clc
jecxz
add
sbb
pop
sub
jns
sar
add
xchg
xchg
out
cmp
mov
cmp
add
lahf
movs
pop
cmp
mov
pop
xchg
pop
cmp
call
jl
mov
cmp
(bad)
mov
out
aas
add
xchg
xchg
inc
pop
cmp
dec
es
mov
mov
loopne
jle
pop
mov
inc
add
loop
aam
adc
inc
pop
fmul
push
pop
mov
xor
add
mov
shl
jne
loope
push
or
push
xchg
push
push
imul
ins
(bad)
out
sub
pop
jmp
pop
ins
push
jb
and
sbb
jns
xor
or
clc
loope
push
xor
add
sbb
add
dec
sahf
cs
mov
int3
add
test
inc
nop
xchg
add
movs
test
ins
sbb
(bad)
jae
repnz
daa
iret
push
pop
pop
pop
mov
jb
pop
and
xor
jns
(bad)
call
pop
mov
pop
mov
inc
adc
lea
and
mov
aam
icebp
pop
xchg
mov
and
cwde
add
mov
iret
push
jb
cwde
fwait
add
push
xor
test
pushf
pop
shl
dec
push
in
pop
add
popf
and
jl
sub
push
mov
sahf
or
pop
lahf
xchg
xchg
fdivr
repnz
mov
mov
loop
in
pop
mov
mov
push
pop
(bad)
xor
dec
ficom
xchg
sub
sbb
leave
fwait
pusha
pop
cmps
mov
xchg
dec
pop
add
scas
dec
pop
stos
inc
mov
test
pop
pop
add
or
pop
ror
jne
lock
add
sbb
lahf
fcomp
push
dec
ficom
ffreep
pop
pop
sub
inc
add
mov
or
or
pop
or
lds
push
fbld
and
pop
or
add
repnz
mov
and
push
mov
adc
mov
dec
sbb
adc
or
(bad)
inc
push
pop
repnz
adc
sub
pop
adc
mov
leave
adc
nop
repnz
xchg
xchg
adc
dec
and
aas
add
shl
pop
pop
aas
pop
pop
ja
movs
leave
sbb
pop
out
stos
inc
xchg
sbb
pop
sbb
inc
sub
jns
add
sbb
add
cmp
hlt
fcomp
push
sbb
sbb
pop
push
pop
pop
and
pop
add
xchg
sbb
pushf
push
and
add
ficomp
and
inc
and
push
and
adc
xor
and
xor
and
mov
loopne
and
ficom
rcr
mov
xchg
stos
pop
mov
iret
push
pop
mov
sub
pop
sub
jo
mov
sub
pop
test
cld
pop
sub
xchg
sub
mov
ins
leave
ret
push
inc
sahf
das
mov
and
xor
or
dec
(bad)
ficomp
mov
xchg
and
loopne
and
adc
out
mov
push
inc
and
push
in
or
jmp
fmul
add
out
adc
add
jp
jb
cmp
inc
stc
cmp
stc
mov
adc
and
pop
sar
pshufw
cwde
pop
push
mov
pusha
je
mov
unpcklps
cld
jge
rol
xor
adc
dec
unpcklps
dec
xlat
xchg
scas
rcl
lock
push
fmul
nop
int3
dec
push
imul
mov
jmp
loopne
mov
rcl
adc
adc
lock
test
movups
and
dec
movs
les
mov
nop
push
call
jo
xchg
cmps
shl
adc
hlt
sbb
mov
pop
mov
sbb
adc
push
adc
sub
sub
inc
adc
adc
loopne
(bad)
clc
sbb
xor
movups
pop
lock
adc
mov
mov
xor
cmovo
dec
sar
pusha
jo
rcl
je
xlat
cmp
xor
nop
and
xor
mov
out
rcr
gs
sbb
push
outs
rcr
shr
dec
in
adc
shl
mov
add
adc
adc
push
nop
push
(bad)
cmp
and
scas
jl
icebp
dec
add
xor
adc
mov
rcl
push
or
mov
xchg
lods
sahf
nop
aas
push
je
pusha
push
stc
repnz
push
sbb
jo
repz
adc
adc
sbb
dec
rcr
mov
sub
jmp
fs
ja
imul
adc
lock
lods
xor
add
ficomp
mov
imul
adc
lock
ja
xlat
cwde
das
xor
je
call
pop
pusha
cmp
cmps
rcl
cmp
nop
repnz
stos
xor
mov
adc
push
imul
stos
xor
ja
xor
adc
loopne
lock
out
xchg
mov
jle
lahf
dec
push
fimul
dec
wrmsr
adc
jo
adc
shl
dec
mov
mov
add
loopne
sahf
add
xchg
mov
dec
movs
test
mov
jl
sub
je
and
cmp
adc
sbb
cld
adc
push
scas
pshufw
xor
inc
or
push
cwde
test
fimul
adc
adc
scas
cmovle
jle
repnz
ja
or
rcl
adc
and
adc
adc
ds
scas
fcom
mov
push
dec
mov
das
push
mov
je
sar
xor
rcl
pavgb
dec
rep
clc
adc
fadd
or
call
adc
movs
jmp
adc
push
adc
inc
cld
adc
push
call
jo
push
outs
mov
mov
mov
adc
jo
push
movs
push
push
cmp
jns
adc
loopne
adc
adc
adc
push
call
pop
dec
in
ja
loopne
adc
nop
adc
mov
jg
or
call
ror
adc
mov
adc
ror
loopne
call
inc
sahf
xor
lock
push
(bad)
or
add
pop
ja
add
fidiv
mov
aam
repnz
pop
push
les
xchg
neg
inc
jl
outs
jo
xor
nop
adc
push
sub
fistp
aas
push
adc
push
clc
or
dec
movs
jmp
lods
nop
call
mov
scas
jmp
pop
shl
fist
sbb
cld
or
lock
int3
sub
str
push
aas
adc
mov
out
pop
and
mov
mov
xor
jle
xor
inc
out
loopne
aaa
inc
movs
sub
aam
into
pop
es
push
jns
adc
movs
inc
xchg
in
xor
add
dec
sahf
out
ds
data16
call
or
sahf
out
add
imul
idiv
cwde
push
ins
or
outs
pop
mov
sahf
jnp
outs
xor
iret
xor
push
out
jns
iret
xor
or
lock
push
fcomp
add
(bad)
jno
cmp
jmp
jb
push
cmp
jo
je
cmp
iret
repz
push
jbe
ja
sahf
out
call
out
out
mov
push
sahf
out
sahf
pop
test
pop
pop
out
out
jae
pop
iret
push
pusha
cmp
jns
and
mov
xor
out
pop
push
jle
add
out
retf
movs
push
cwde
cmp
test
cmp
repz
test
xchg
idiv
jns
push
xchg
push
push
mov
sahf
out
jnp
iret
push
mov
mov
mov
repz
inc
lea
xor
mov
sar
in
add
push
mov
xor
test
mov
xchg
repz
out
jo
lahf
sbb
push
je
icebp
jns
and
xchg
add
add
dec
dec
push
xor
sahf
out
add
(bad)
int
jns
push
jbe
ss
add
addr16
xchg
pop
push
sbb
xchg
scas
push
cwde
pusha
cdq
out
sahf
test
iret
jnp
mov
fmul
pushf
enter
cmp
scas
push
jl
jne
mov
ins
dec
sahf
push
push
cmp
repz
sbb
push
and
repz
clc
add
out
dec
mov
xchg
sahf
out
sahf
pop
test
sbb
jns
inc
pop
sub
repz
out
and
add
fdivr
repz
scas
push
and
and
rep
daa
push
lahf
add
push
mov
mov
or
pop
dec
cmp
repz
in
aam
sar
rep
movs
jle
nop
jge
cmp
out
cmps
(bad)
push
cmps
cmp
repz
test
test
out
cmp
ror
stos
push
mov
rep
lods
nop
push
lods
js
jae
sahf
scas
pusha
pop
(bad)
push
scas
sub
lahf
out
push
mov
mov
std
mov
cmp
repz
int3
mov
iret
repz
mov
mov
mov
cmp
pop
mov
jmp
outs
push
mov
icebp
dec
out
cld
fidivr
test
mov
cmp
repz
push
rol
sahf
out
dec
push
inc
add
out
sti
shl
push
js
push
scas
sti
ret
jns
push
ret
xchg
les
jns
jns
pop
(bad)
push
add
xor
jnp
cli
sub
cmp
outs
cs
sahf
addr16
cmp
(bad)
iret
push
enter
out
leave
and
add
mov
push
int3
les
repz
mov
jns
out
iret
dec
fbstp
mov
sbb
or
lahf
clc
repz
ror
rcl
rol
shl
jns
iret
lods
cmp
ds
sahf
out
sahf
aad
(bad)
push
sub
cmp
repz
dec
and
push
add
not
push
push
push
lods
fcomp
fstp
ficomp
mov
adc
and
push
xchg
cmp
repz
push
push
repz
push
push
imul
repz
or
jg
cmp
repz
sub
inc
mov
xchg
ret
jae
repz
jo
jg
fsubrp
cmps
stc
xor
push
adc
cld
add
sahf
out
lahf
adc
rcl
jns
out
push
jl
pop
pop
sahf
jnp
out
adc
bnd
adc
mov
fdiv
push
in
mov
iret
repz
sub
jns
out
adc
or
jnp
xchg
pslld
mov
std
add
cmp
repz
cmp
adc
sahf
out
cmp
icebp
dec
fsubr
jg
repz
push
inc
pushf
sbb
jns
pop
inc
pop
sbb
cmp
out
cld
lock
in
sar
enter
ins
add
outs
pop
outs
inc
popf
jg
sar
jmp
jmp
iret
repz
in
mov
(bad)
iret
repz
in
scas
push
out
xor
add
out
add
out
lock
out
sahf
jnp
jg
repnz
lahf
out
sahf
pusha
hlt
dec
cmc
cmp
lahf
cmps
stc
xor
test
idiv
in
cmc
fdiv
xor
loopne
lahf
push
xor
sahf
addr16
das
push
iret
repz
sti
js
fs
dec
cmp
xor
and
cmp
rcr
pop
in
push
add
add
repz
repz
lods
cmp
iret
js
pusha
dec
dec
jno
iret
repz
add
jg
jns
out
add
push
out
sahf
out
pop
mov
cwde
sahf
out
sahf
or
out
out
or
mov
dec
pushf
or
and
movs
jnp
xchg
js
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
cld
clc
lock
cmp
add
nop
jg
xlat
in
int3
add
rol
(bad)
inc
xchg
pop
inc
mov
ds
pop
aas
adc
add
add
in
xchg
and
pop
loopne
sbb
jb
les
mov
movs
or
or
cmp
cmp
adc
adc
and
and
cmp
and
and
and
cmp
enter
mov
js
push
sub
cmp
scas
pop
pop
xor
and
sub
inc
xor
push
add
int
test
hlt
sbb
loopne
fmul
shl
out
out
les
add
mov
sahf
out
lods
push
movs
pop
pushf
out
sahf
out
xchg
or
test
js
ins
push
jns
out
pusha
andps
dec
out
sahf
out
inc
and
sahf
out
sahf
xor
and
sbb
sahf
out
or
add
clc
cmp
cmp
shl
in
das
in
iret
repz
sar
mov
iret
repz
ds
iret
repz
dec
inc
dec
inc
adc
dec
repz
inc
push
inc
lahf
pop
add
add
pop
jg
std
sub
adc
or
loopne
push
cmps
lea
pusha
push
pusha
jl
mov
or
iret
mov
rcl
sbb
mov
rcr
inc
pop
mov
xor
and
push
shl
fstp
push
xor
test
add
xlat
xchg
mov
xchg
push
cwde
es
push
pusha
stos
jg
sbb
popf
daa
adc
add
inc
out
xchg
push
add
mov
push
loopne
jne
mov
das
rcl
sbb
sahf
imul
ss
dec
dec
add
pushf
jns
aaa
xor
cmps
ss
mov
xor
ins
cmp
iret
leave
pop
push
add
repnz
pop
(bad)
in
sbb
cmp
ins
daa
out
mov
or
aam
iret
shl
lock
dec
call
sbb
xchg
push
sub
mov
repz
mov
pop
jo
mov
shl
je
adc
dec
mov
idiv
fimul
out
fidivr
jo
out
sahf
(bad)
push
cmp
out
fst
add
repz
repz
lahf
cmp
xor
push
mov
sbb
dec
pop
lods
add
mov
ins
fistp
push
pop
enter
mov
imul
mov
enter
mov
inc
shr
int
call
and
push
jmp
das
sbb
jbe
(bad)
cmp
call
xchg
hlt
retf
aam
shr
mov
push
data16
sub
test
iret
jnp
fwait
push
or
(bad)
(bad)
(bad)
jmp
hlt
mov
mov
push
popa
mov
(bad)
pop
rcr
mov
pop
dec
mov
mov
loopne
(bad)
xchg
cli
(bad)
(bad)
call
adc
cmp
sub
(bad)
jbe
and
sahf
or
jne
popa
jb
(bad)
jmp
mov
pushf
(bad)
lea
out
push
push
fist
dec
xor
mov
jecxz
iret
dec
and
(bad)
(bad)
(bad)
call
mov
xchg
pop
call
add
sub
jg
mov
jl
(bad)
(bad)
inc
dec
jae
in
jg
jge
cs
xchg
mov
cmp
xchg
xor
xchg
add
(bad)
(bad)
(bad)
jmp
mov
mov
aas
dec
jbe
mov
fild
mov
jecxz
sahf
pusha
fild
call
enter
addr16
jl
add
ja
(bad)
(bad)
call
mov
inc
clc
shl
jp
in
test
inc
push
pop
int3
int3
sbb
test
(bad)
(bad)
(bad)
jmp
mov
sub
mov
daa
cmp
jae
dec
sahf
pop
adc
push
add
(bad)
cld
jb
gs
jne
ins
and
xor
(bad)
call
xchg
mov
fucomi
clc
xor
adc
cwde
push
sub
or
jnp
(bad)
(bad)
(bad)
inc
pushf
sub
add
xchg
nop
daa
pusha
popa
js
das
cmc
(bad)
sub
cli
in
shl
das
ss
aad
and
and
clc
mov
(bad)
(bad)
(bad)
push
popf
pop
sbb
xchg
mov
ins
inc
jp
mov
and
mov
retf
adc
inc
dec
push
(bad)
call
sub
inc
rcr
je
hlt
fisttp
(bad)
(bad)
call
jmp
push
mov
test
cli
aad
add
push
call
pusha
iret
mov
mov
imul
test
dec
jg
or
adc
aad
mov
xchg
sub
sub
push
pusha
mov
xchg
icebp
(bad)
(bad)
call
xchg
gs
scas
das
pop
mov
pop
fisub
fwait
call
shr
lds
imul
das
adc
(bad)
(bad)
(bad)
(bad)
cmp
mov
std
loopne
pop
fild
stos
in
mov
inc
fnstcw
ins
pop
(bad)
(bad)
(bad)
jmp
push
pop
loope
or
jnp
sbb
pop
push
fs
ds
jbe
or
icebp
imul
(bad)
(bad)
call
sbb
shl
into
popf
popa
and
push
xlat
xor
fisttp
loope
test
xchg
mov
or
(bad)
(bad)
inc
pop
push
jno
mov
out
fistp
test
in
fs
push
test
jp
add
pop
xor
das
clc
stos
mov
jb
add
adc
jl
xchg
cmp
pop
pop
(bad)
(bad)
(bad)
call
leave
push
dec
outs
lock
lds
mov
xchg
sbb
sahf
jecxz
into
ss
(bad)
(bad)
jmp
inc
pop
nop
xor
retf
je
add
mov
ins
xchg
xchg
jo
sub
sahf
mov
(bad)
jmp
push
repz
lods
mov
sbb
std
test
push
imul
mov
jmp
cmp
data16
pop
dec
jl
and
scas
movs
lahf
mov
imul
in
mov
(bad)
(bad)
(bad)
push
mov
dec
imul
cmps
jmp
jle
bound
test
inc
ret
ins
xor
pop
(bad)
(bad)
(bad)
push
ins
or
xor
inc
cmp
mov
xchg
out
fld
mov
dec
push
and
or
je
addr16
(bad)
dec
rcr
or
push
leave
(bad)
(bad)
dec
xor
xor
cmps
nop
fdiv
(bad)
lea
(bad)
(bad)
jmp
xchg
push
rcr
jo
jbe
sbb
jo
popa
pop
in
out
push
xchg
mov
dec
xchg
mov
pop
shr
pop
jl
cmps
retf
adc
mov
stc
mov
(bad)
(bad)
(bad)
inc
ret
call
jmp
adc
sbb
hlt
push
daa
ret
cdq
es
mov
mov
xlat
out
cmps
adc
sbb
or
dec
stos
pop
js
dec
add
sub
xchg
and
push
stc
xchg
out
je
or
mov
aas
data16
(bad)
(bad)
dec
cmp
xlat
call
repnz
leave
push
ficomp
mov
lock
(bad)
(bad)
jmp
lds
sub
fwait
repnz
adc
or
pop
int3
adc
loope
mov
jmp
int3
stos
push
inc
sub
pop
pop
push
mov
ss
test
mov
dec
out
sahf
sbb
nop
xor
mov
or
inc
das
jo
aad
(bad)
je
into
xlat
xor
sbb
hlt
(bad)
(bad)
jmp
add
sbb
mov
add
mov
push
push
and
xchg
(bad)
dec
int3
out
adc
fistp
mov
into
inc
in
adc
iret
jmp
ficomp
mov
xchg
fsub
nop
in
push
push
scas
add
inc
das
cmp
in
push
sahf
lods
push
xchg
(bad)
clc
mov
(bad)
(bad)
cmp
fiadd
pusha
mov
aam
es
shl
add
ret
push
push
add
shr
cwde
fld
clc
(bad)
jmp
sub
pop
enter
jbe
push
xor
inc
in
inc
outs
add
sbb
or
aad
add
sub
(bad)
inc
inc
xchg
lahf
xchg
hlt
inc
nop
xor
ret
imul
jae
out
mov
mov
(bad)
(bad)
jmp
dec
stos
stc
sbb
sbb
rcr
cdq
call
stos
je
push
xor
(bad)
(bad)
(bad)
jmp
adc
ins
cmps
js
mov
cmp
push
cmp
pop
in
add
push
mov
(bad)
(bad)
(bad)
(bad)
fld
retf
dec
imul
ins
fs
jae
(bad)
lock
test
jmp
pop
jl
movs
add
and
cmp
(bad)
(bad)
(bad)
std
jecxz
gs
jecxz
push
(bad)
and
icebp
sub
(bad)
cmc
in
(bad)
(bad)
call
arpl
imul
cld
mov
rcr
cmp
(bad)
push
les
test
in
(bad)
adc
mov
call
xor
pop
jmp
xor
sahf
arpl
int3
push
mov
out
in
out
cdq
xsha1
cmps
mov
mov
daa
iret
dec
repz
xchg
out
call
cmp
int
daa
pop
call
(bad)
xchg
push
call
pusha
push
cmp
push
pushf
xor
mov
add
shr
aas
in
loopne
adc
push
adc
dec
call
ss
popf
out
and
mov
xchg
es
sahf
int
xlat
sbb
fidiv
adc
in
fld
push
push
loopne
fdivr
sti
push
clc
fld
push
dec
push
sbb
mov
xor
mov
sub
fild
lock
test
and
jp
test
pop
push
lods
cmps
stos
ss
lahf
ror
jmp
push
jo
cmp
fist
add
sbb
pushf
cmp
pushf
add
add
pushf
cmp
dec
test
cmp
push
shr
xchg
ja
leave
mov
sbb
xchg
or
clts
cs
adc
sub
push
mov
loopne
cs
xor
cmps
imul
punpcklbw
adc
dec
movs
test
add
int3
mov
shl
xchg
loopne
lock
xor
add
cs
scas
test
xor
sbb
xor
call
inc
fcom
shl
scas
xor
adc
cs
jo
cmovge
cmps
sub
mov
sub
push
ror
sub
enter
mov
sub
call
mov
je
call
aas
inc
movs
sub
sbb
add
jne
stc
or
call
pusha
ds
call
lock
jmp
sar
rcl
shl
lock
jo
jo
cmps
nop
nop
mov
dec
movs
push
shl
adc
outs
push
loopne
sti
mov
shl
movs
sti
lahf
or
sub
xchg
cmps
adc
aas
cs
scas
mov
aas
and
cli
push
xor
dec
movs
call
push
call
sub
sar
mov
je
mov
xadd
int3
xor
sub
add
pop
arpl
imul
stc
scas
push
aam
mov
fs
and
cmp
pop
addr16
push
repz
imul
out
push
imul
nop
ins
js
ins
mov
pop
jo
mov
dec
imul
out
sahf
out
je
jne
mov
test
ja
out
sahf
out
js
jns
lods
iret
sar
mov
movs
cmp
repz
movs
pushf
jp
repz
repz
mov
jl
repz
pop
mov
jge
jle
iret
repz
jg
lods
iret
push
sahf
cmps
xor
sbb
cmc
or
out
scas
enter
test
repz
push
cmps
test
idiv
test
push
xchg
repz
test
xchg
mov
add
repz
call
out
sahf
out
mov
jns
lea
jns
out
nop
cmp
and
repz
out
xchg
lock
loopne
repz
xchg
enter
jns
mov
mov
jns
out
pop
call
and
mov
cmp
aam
mov
push
aas
mov
sub
push
adc
clc
add
lock
dec
movs
test
loopne
dec
push
imul
cmps
rcl
je
fs
out
cmp
sahf
sub
pushw
and
iret
repz
adc
add
cmps
stc
in
add
push
add
pop
movs
jg
daa
int3
push
femms
mov
jo
movs
adc
push
ins
mov
push
mov
shl
pop
daa
mov
xor
sbb
or
clc
add
loopne
add
jmp
mov
imul
push
pop
daa
(bad)
sahf
out
out
enter
pop
ds
inc
jnp
out
sahf
and
adc
add
cmp
repz
push
pop
mov
push
das
ins
iret
jnp
cs
ins
push
sub
xor
out
jns
ins
outs
push
inc
jo
fcomip
cmp
jno
jb
jae
call
xor
add
jbe
sahf
xlat
call
jle
cwde
iret
repz
jg
ja
js
clc
inc
sar
or
cmp
aas
push
and
jo
jmp
das
es
push
fcom
test
or
mov
or
movs
mov
cmps
repnz
mov
push
es
push
scas
ds
movups
push
sub
xor
push
call
cld
or
add
inc
pop
cmps
test
enter
jl
or
or
aas
imul
and
mov
xchg
cmps
mov
rcr
inc
movs
or
pop
clc
or
call
or
ror
es
movs
jmp
or
test
ins
arpl
or
ror
sahf
test
push
sbb
cmp
out
or
repz
repz
mov
repz
nop
mov
test
repz
xchg
dec
data16
jl
repz
sbb
shr
jns
out
mov
push
outs
push
pop
scas
jns
out
push
mov
xchg
add
repz
repz
pop
jne
jo
iret
repz
js
nop
mov
repz
xchg
je
jle
cmp
repz
pop
lea
iret
cmp
fisttp
gs
push
mov
je
xor
das
adc
stos
adc
das
jo
lock
das
movs
test
xor
sbb
repz
or
cld
adc
enter
movs
test
mov
pushf
push
das
mov
js
push
xchg
push
cmp
adc
and
shl
outs
movs
test
pshufw
mov
imul
xor
ror
loop
xchg
cmps
loopne
lock
in
push
mov
lock
das
fcom
push
mov
xor
dec
push
imul
ins
sub
das
sbb
or
aas
out
cmp
test
adc
mov
mov
ins
aas
push
imul
cmp
stos
mov
dec
sub
das
sbb
or
into
ja
cmps
push
das
call
jo
fsub
push
les
push
mov
cwde
xchg
push
jns
out
jne
addr16
dec
in
sbb
das
int3
push
das
cmp
jae
das
mov
ja
and
ins
push
js
pushf
out
scas
jns
cmp
dec
stc
cmp
mov
fisttp
cmp
out
sahf
cmps
sub
aam
sahf
out
sahf
les
jl
jge
sahf
out
mov
jno
sub
shl
jb
or
dec
push
imul
and
aas
ficom
and
sbb
pop
and
xchg
das
and
sbb
and
jmp
das
jo
jo
push
nop
pop
cwde
mov
push
imul
mov
push
rol
sub
rcl
push
and
add
(bad)
mov
pop
call
pop
pop
pop
and
push
inc
mov
xchg
mov
pushf
push
mov
jnp
and
push
nop
inc
jmp
xor
sub
push
je
imul
adc
(bad)
push
pop
and
dec
in
cmps
jo
add
test
cwde
pop
fisubr
rol
add
dec
push
aas
iret
repz
push
and
jb
out
cmp
gs
adc
out
jae
addr16
ins
out
sahf
out
outs
ins
je
mov
sub
sbb
clc
adc
cmp
imul
push
lods
jecxz
adc
fisub
sbb
push
sbb
sbb
and
sbb
and
sbb
jns
addr16
lods
addr16
gs
fs
push
and
pop
ins
mov
cmovo
push
scas
and
cmps
shl
iret
and
jo
imul
push
call
and
dec
movs
test
add
(bad)
push
imul
in
xor
cmps
repnz
and
xor
movs
test
mov
ins
mov
outs
or
inc
imul
rol
mov
into
sbb
push
iret
repz
enter
test
cmp
repz
js
push
repz
cmp
and
cld
sbb
in
outs
aam
sar
jns
lods
jb
jae
jns
out
je
jne
imul
mov
sbb
iret
ss
out
or
cld
sub
loopne
shr
(bad)
pop
pop
and
or
pushf
xlat
xchg
ja
rcl
cs
repnz
sub
inc
pop
lock
and
imul
or
sub
not
clc
daa
pop
and
cmovo
push
mov
xor
xor
mov
pop
scas
je
jns
je
shl
pop
and
xor
xor
sub
adc
adc
shl
es
fcomp
les
fimul
adc
into
es
shl
pop
pop
jo
das
pusha
pop
fcmovbe
pop
sub
and
or
push
pop
imul
ror
and
lock
cmps
rol
nop
mov
pushf
sub
test
mov
pusha
add
and
mov
mov
and
into
add
xor
pop
imul
mov
push
or
mov
or
lods
or
cwde
loopne
shl
jo
pop
pop
(bad)
sub
xor
xor
push
sbb
out
cld
mov
pop
and
push
add
cmps
stc
lock
test
out
sahf
out
test
nop
test
and
jns
out
xor
sbb
or
repz
jae
and
data16
cmp
repz
movs
xchg
mov
cmp
pop
mov
iret
repz
push
sub
movs
scas
and
stc
rol
and
and
repz
cmp
jl
iret
repz
ins
outs
push
mov
jecxz
idiv
cdq
iret
push
xchg
mov
mov
hlt
and
iret
repz
aam
sar
iret
mov
nop
mov
push
jns
repz
fs
push
mov
call
dec
jge
sahf
out
int
pop
jo
xchg
int3
xchg
jns
out
mov
sahf
out
out
popf
scas
push
sahf
cmp
or
dec
repz
clc
push
jp
jnp
repz
jg
outs
mov
cmp
cmp
js
push
jne
xlat
ret
push
frstor
push
(bad)
shr
or
fbld
cld
das
punpckhwd
dec
mul
in
ror
lods
xor
pop
and
push
push
das
push
dec
pop
xor
push
and
fst
scas
das
mov
test
add
and
rcl
push
mov
imul
and
cmovo
mov
pusha
ficomp
lock
jnp
xlat
and
rcl
cs
sub
ja
(bad)
shl
pop
and
lods
inc
mov
rcl
and
pop
nop
xchg
cmps
imul
push
sbb
add
push
clc
sub
mov
and
push
fsubr
je
ror
iret
repz
cwde
inc
cs
dec
iret
repz
mul
je
push
pop
xchg
xor
repz
sbb
add
in
sub
repz
fadd
xchg
scas
push
jp
xchg
repz
jne
add
pop
call
mov
cmp
cmp
loopne
enter
mov
push
mov
iret
push
jl
jnp
repz
fs
iret
repz
xchg
cmp
loopne
sahf
out
mov
jg
imul
rol
setle
test
ror
neg
repz
push
push
imul
ins
sahf
jnp
out
push
ins
push
outs
fisttp
outs
(bad)
pop
out
and
pop
shr
(bad)
sub
and
xor
and
and
xor
fsub
retf
mov
jo
and
nop
cwde
mov
call
shl
mov
inc
dec
ds
neg
repnz
and
push
sbb
push
adc
shl
clc
xor
call
dec
adc
and
lock
push
call
and
xor
push
jl
pop
pop
fisubr
ins
lahf
dec
pusha
ds
punpcklbw
(bad)
sbb
scas
jo
dec
xor
mov
cmp
gs
sub
repz
adc
or
xor
jnp
jg
push
repz
repz
imul
jnp
out
or
push
inc
ins
iret
cmp
outs
and
mov
imul
jb
jns
out
cmp
out
jne
push
jbe
ja
sbb
jns
js
jns
out
iret
call
jle
jp
xor
inc
jle
pop
pusha
push
sub
repz
sub
push
dec
mov
cmp
cmp
dec
imul
mov
fs
call
jo
cld
pusha
fsubr
adc
adc
push
add
lock
iret
repz
fsubr
push
cmp
out
jg
popf
jns
into
clts
movups
inc
pop
jns
jns
fcom
or
adc
cwde
or
push
call
test
xor
and
dec
jae
scas
or
xor
inc
outs
push
loopne
rcl
enter
movups
xor
pusha
pop
movups
movs
sub
inc
dec
imul
cld
inc
push
call
dec
push
loopne
nop
or
lods
mov
xchg
mov
pop
or
pop
or
inc
cmps
repnz
pop
push
and
or
cmps
ins
fsubrp
inc
lock
str
xlat
push
call
inc
aas
std
mov
mov
adc
call
push
call
cwde
adc
js
inc
pusha
ror
adc
pop
mov
add
call
push
imul
jl
dec
movs
push
cmp
nop
sub
add
imul
dec
push
imul
je
push
outs
punpcklbw
adc
inc
xor
xchg
das
adc
out
inc
iret
push
ror
mov
fistp
sub
imul
cmp
adc
sar
shr
aas
fisttp
movups
cmp
mov
mov
pop
push
adc
je
ds
rcl
ds
mov
push
and
ds
nop
ins
dec
mov
push
jl
rol
pop
shl
(bad)
cmp
retf
sar
add
adc
in
cmp
push
aam
mov
test
pushf
xor
movs
jl
ins
push
pop
pusha
mov
xor
sbb
fist
or
call
xor
fdiv
adc
movs
push
push
dec
pusha
or
scas
rcl
sahf
ud2
sahf
xchg
cmps
cmp
nop
push
aam
push
ficom
inc
outs
das
ds
rcr
fcmovbe
je
dec
ror
jns
hlt
cmp
fmul
test
inc
mov
shl
dec
movs
xchg
loopne
dec
fimul
mov
jmp
ficomp
out
pop
push
sbb
add
(bad)
adc
cmp
fmul
push
into
mov
cmp
nop
test
jo
out
push
imul
push
add
adc
push
sahf
out
dec
push
nop
push
inc
fs
ds
jns
jne
cmp
out
jbe
ja
mov
iret
lods
xchg
cwde
js
jns
iret
repz
gs
jo
or
repz
shr
ins
push
adc
add
sahf
(bad)
cmp
mov
push
imul
push
call
push
mov
cmp
out
ds
iret
push
jl
xor
sbb
push
mov
ss
repz
rep
enter
cmp
cmp
movs
xchg
cmp
repz
push
imul
cmp
xchg
and
add
(bad)
cmp
and
out
cmp
pop
or
fild
movs
test
dec
push
mov
cmps
dec
cmp
ins
outs
sub
cmp
push
inc
xor
call
dec
pop
push
jo
pop
xchg
cmps
rcl
xor
movs
test
mov
sub
pavgb
test
bswap
shrd
test
dec
push
and
adc
mov
add
push
lock
pop
push
loopne
imul
les
movs
test
test
pushf
call
mov
call
rol
mov
and
loopne
jae
dec
push
and
lock
dec
mov
dec
call
jae
cmp
jns
shl
mov
repz
outs
je
pop
ins
inc
cmp
repz
xor
push
call
jb
xor
jns
shr
shl
mov
movs
dec
pop
or
dec
xor
push
xor
sbb
sahf
ins
jns
or
or
adc
push
pop
imul
nop
mov
mov
pop
jnp
movs
test
pop
loopne
popa
shl
pop
lahf
or
(bad)
fimul
and
or
or
or
mov
imul
test
cwde
inc
mov
push
push
jl
push
xlat
push
jg
or
inc
lock
ds
add
in
pop
test
adc
pusha
push
enter
jns
mov
jo
(bad)
imul
cmpxchg
imul
push
xor
and
call
loopne
pop
lock
dec
in
push
add
or
shl
je
adc
rcl
push
fs
dec
xlat
je
lods
nop
fidivr
or
divps
dec
jo
pop
sbb
or
xchg
push
mov
or
adc
mov
dec
add
je
stc
imul
push
push
inc
das
shr
pop
scas
sbb
or
dec
movs
sub
in
rcl
sub
rol
or
cmps
rcl
dec
movs
test
pusha
xlat
pop
push
imul
adc
cmps
sar
nop
call
xchg
fdiv
or
xor
mov
mov
mov
or
push
sub
xchg
fucomip
movups
shl
into
dec
push
sbb
inc
or
fst
lock
pusha
test
loopne
aam
or
sub
mov
pop
(bad)
pop
mov
cmpxchg
push
push
imul
xchg
into
mov
outs
add
out
push
rcl
popf
ror
add
cmp
repz
(bad)
push
retf
push
mov
cwde
fs
repz
data16
iret
repz
addr16
push
pminsw
sahf
push
sbb
ja
repz
dec
repz
add
push
hlt
push
outs
mov
sbb
scas
push
aam
iret
jnp
out
mov
test
push
pushf
lods
jns
out
push
test
jb
sahf
out
out
jae
push
je
jne
cmp
repz
clc
push
ja
js
cmp
repz
iret
repz
jnp
scas
ins
mov
cmp
repz
dec
mov
mov
cmp
repz
adc
add
cmps
xor
mov
in
push
jge
mov
jns
out
mov
jle
stos
out
sahf
out
jg
mov
mov
sbb
cld
push
idiv
rol
iret
mov
jns
sub
mov
push
fmul
fdivp
movs
sub
test
test
repz
xchg
iret
push
cmp
cmp
fild
cmp
iret
(bad)
push
shr
lahf
int
inc
mov
cs
dec
mov
pop
push
loopne
dec
imul
mov
nop
mov
lahf
outs
leave
push
outs
(bad)
cs
ror
cmp
push
and
cmp
jns
cs
ds
mov
iret
repz
or
sahf
jnp
xchg
aam
dec
shr
dec
stos
cmp
xchg
mov
sub
retf
mov
sub
push
pusha
repz
jnp
push
dec
call
add
sahf
out
sahf
fcmove
popf
lods
sahf
mov
out
lahf
js
pop
mov
dec
mov
dec
imul
jmp
pop
movs
push
mov
sahf
idiv
cmps
push
jo
neg
add
enter
push
pop
sub
test
in
jns
popf
arpl
aam
or
les
jmp
jo
or
mov
and
das
push
pop
aas
or
or
nop
or
call
int
int3
mov
mov
cwde
nop
fimul
dec
movs
jmp
shl
sbb
push
fdiv
add
or
popa
rcl
or
movups
and
or
test
or
push
test
inc
pusha
xor
jnp
movs
and
pusha
push
nop
call
int3
mov
test
fst
mov
pop
push
jns
pop
(bad)
or
pusha
loopne
pop
pusha
push
xchg
mov
sub
sbb
push
push
clc
pop
bswap
pop
mov
ficomp
fs
shl
iret
repz
jb
gs
repz
jl
push
iret
repz
xor
xchg
cmp
repz
jnp
jle
out
mov
or
pop
fimul
sub
addr16
push
idiv
xchg
test
repz
imul
iret
repz
adc
imul
stc
fcomp
mov
call
push
js
cmp
jns
push
sub
pop
xchg
pop
out
or
data16
xor
cmps
ror
or
gs
in
imul
int3
add
adc
push
call
pop
call
push
pop
nop
dec
jnp
xlat
push
xor
inc
sub
push
scas
test
pusha
or
add
out
lock
into
aam
cmps
rcl
enter
dec
push
imul
lods
and
fs
ins
jne
out
push
fs
pop
fs
stc
sahf
out
push
loopne
jo
int
cmp
gs
lock
xor
cmp
rep
fsubr
imul
sahf
out
imul
je
std
xchg
out
or
push
or
movups
xchg
cmps
shl
and
xor
jg
movs
push
mov
inc
test
call
push
call
jo
dec
push
stc
repnz
xor
or
mov
in
or
add
push
or
imul
loopne
push
int3
inc
mov
mov
mov
push
jo
rcr
mov
out
das
push
sbb
sub
loopne
push
out
cmp
into
enter
add
movups
or
xor
cmovo
xor
fwait
push
xor
cmp
repz
mov
data16
sahf
cmps
stc
lock
push
out
jne
enter
jg
jns
out
jae
ja
mov
dec
jns
jp
sar
push
jnp
imul
cmp
call
push
ins
iret
cmp
cwde
jl
push
jge
cmp
cmp
outs
iret
push
jo
jns
pop
into
jno
jb
inc
jle
sub
icebp
and
jg
or
xchg
cmps
ror
inc
push
cmp
test
xor
add
mov
jl
stos
or
scas
jo
pop
movs
push
popf
popf
xor
mov
push
lahf
pop
pop
push
push
pusha
jbe
not
cmp
aas
push
cmp
and
xor
or
and
adc
adc
out
pop
add
or
lock
shl
jne
out
call
les
adc
neg
imul
xchg
das
push
or
imul
ins
jg
pop
push
pop
pop
inc
pop
rcl
imul
push
cld
je
sar
test
aam
loopne
dec
sub
je
aas
xor
cs
inc
push
cmps
imul
inc
das
adc
jo
mov
xor
nop
clc
jae
push
mov
xadd
cmp
das
mov
retf
jo
seto
scas
sub
pusha
mov
pop
xor
xlat
neg
imul
add
in
jb
dec
addr16
cli
push
fdiv
dec
wrmsr
lods
in
fst
je
nop
cwde
mov
cmps
xor
dec
(bad)
imul
adc
add
dec
jno
fwait
dec
popa
nop
adc
out
add
cmpxchg
push
nop
rol
bswap
push
pop
jo
sub
xor
adc
imul
push
in
rcr
jo
dec
punpcklbw
inc
cwde
pop
add
mov
pop
mov
cs
aas
add
ficomp
(bad)
push
sub
mov
fs
out
pop
mov
clc
outs
jo
fs
call
popf
int3
fdivp
cmp
jp
mov
pushf
test
fbstp
jns
push
mov
push
jb
mov
xor
ds
adc
lods
jnp
out
jae
movs
jg
fisub
outs
into
ja
jg
cmp
repz
and
cmp
je
pusha
cmps
enter
jnp
xchg
push
xor
cmp
shr
cmp
or
cmp
clc
call
nop
cs
pop
addr16
sar
adc
jnp
jae
scas
mov
je
mov
cmp
mov
pushf
push
repz
xchg
xor
sbb
ins
fimul
into
repz
movs
ds
mov
in
jns
ret
pop
jns
mov
xchg
test
out
add
jnp
ins
jl
dec
mov
xor
jbe
imul
iret
ror
jle
stos
int3
ins
push
into
cmp
mov
(bad)
sub
call
ja
push
call
rcr
rol
add
jo
movs
test
xor
imul
pop
outs
nop
dec
cmpxchg
loopne
lock
cmps
rcl
sar
jbe
xor
cmps
ror
in
jo
or
shl
movups
push
syscall
cwde
push
ins
push
jg
les
push
pop
push
imul
aaa
ins
sub
xor
out
jo
pop
add
dec
add
dec
pop
sbb
cs
scas
mov
call
push
call
pop
inc
push
add
xor
push
pop
imul
add
xor
and
dec
pop
push
mov
pop
add
test
mov
push
push
add
pusha
imul
inc
sub
xlat
pop
push
nop
adc
pop
add
imul
push
shl
dec
rol
mov
test
pusha
push
xchg
cmps
imul
cmp
and
add
pop
jle
inc
pop
test
jg
pop
shl
push
push
call
mov
jo
mov
jle
dec
adc
sub
pop
xor
or
jle
sahf
je
xlat
je
jo
dec
nop
adc
mov
add
scas
hlt
jge
(bad)
xor
ins
cmp
nop
int3
jge
into
das
ja
push
fimul
test
fimul
pusha
fimul
call
push
push
loopne
ja
ret
jle
jge
add
push
sahf
out
mov
in
sar
ret
outs
push
mov
imul
ins
push
test
cmp
adc
jns
out
dec
jp
cmps
adc
repz
jo
jnp
loopne
push
enter
jns
mov
pushf
nop
repz
out
mov
sahf
out
fimul
mov
jns
sbb
xchg
out
jp
jp
jp
sub
xchg
jp
push
xchg
jns
out
mov
jle
cmp
xchg
cmp
fs
popf
and
push
adc
out
jno
jns
fdivr
int
jns
push
sahf
movs
xchg
xor
jb
cmp
cmp
lahf
fisttp
sub
fld
push
mov
push
dec
repz
xchg
adc
cld
js
sbb
out
call
cmp
shl
mov
sahf
out
movs
mov
out
iret
jnp
sahf
xor
push
xchg
mov
ja
ds
xlat
push
scas
add
add
add
call
pusha
sbb
iret
cmps
rol
clc
test
stos
inc
jle
pop
mov
les
imul
mov
and
pop
xchg
aas
ror
(bad)
aas
xor
push
pop
cmps
rcl
dec
pusha
xor
ins
scas
mov
dec
lock
add
punpcklbw
add
shl
push
mov
jl
scas
sub
pop
das
mov
add
xor
lock
nop
xor
push
es
add
or
pop
call
fmul
add
jl
ins
sub
les
iret
repz
push
movs
jb
jbe
cmp
repz
push
cmp
repz
imul
iret
push
jae
cmp
lahf
out
push
outs
push
fsubr
ss
out
fdivp
int3
je
shl
out
sahf
jno
ins
jl
ins
dec
xchg
push
and
sub
sahf
out
popa
loopne
scas
loopne
cmp
push
mov
xchg
ss
fimul
cmp
popa
dec
xchg
(bad)
sbb
cmps
pop
or
push
push
sbb
ds
in
dec
mov
sbb
rol
sbb
pushf
call
nop
and
daa
dec
jl
data16
xor
adc
mov
jle
ds
push
dec
inc
push
(bad)
(bad)
imul
cmp
sar
shl
outs
not
rcr
nop
push
mov
fcomp
sahf
mov
jbe
outs
inc
loopne
ficom
out
inc
push
inc
mov
das
pusha
xchg
adc
dec
xor
jo
pusha
test
push
inc
add
push
jno
xchg
clc
fst
aas
or
sub
sub
or
and
in
jg
addss
fmul
lods
mov
adc
rcl
lahf
imul
int3
les
push
xlat
loopne
mov
test
movhps
pop
cmp
mov
fild
xor
sbb
(bad)
out
or
(bad)
(bad)
(bad)
push
(bad)
fild
outs
(bad)
movs
fistp
cmp
fwait
push
jo
pusha
ret
cwde
sahf
test
pop
inc
add
add
add
add
movs
in
add
add
adc
add
add
(bad)
mov
add
stos
ss
adc
add
mov
inc
or
add
push
test
mov
ja
lahf
(bad)
pop
mov
lock
mov
mov
jo
cld
push
mov
cwde
out
out
imul
inc
jns
jbe
and
inc
jle
out
jns
adc
clc
pop
push
in
aas
adc
inc
add
jbe
imul
ret
shl
push
ins
pop
repz
or
push
stc
mov
push
jb
mov
nop
sti
mov
adc
inc
pushf
mov
push
jo
push
add
(bad)
ss
ds
or
and
imul
pop
pop
dec
or
mov
popa
sbb
or
cmps
popf
xchg
mov
push
and
sub
(bad)
pop
shr
rol
mov
adc
fmul
lods
repz
repz
jl
push
inc
out
ds
sub
hlt
adc
aam
out
sahf
les
mov
xor
and
adc
repz
in
push
aam
push
lods
pushf
nop
iret
in
idiv
ins
inc
push
(bad)
sub
or
out
das
sub
adc
scas
add
pop
xor
stos
movs
mov
mov
xchg
jno
inc
dec
cmp
(bad)
sub
ffreep
cdq
dec
cmps
dec
stos
xor
sbb
jnp
fbld
add
pop
ins
xor
int
or
shl
(bad)
mov
adc
into
fimul
xlat
fs
(bad)
(bad)
jmp
mov
xor
xor
mov
mov
pop
push
cmc
arpl
push
sbb
fs
(bad)
(bad)
(bad)
clc
jo
mov
repz
xor
inc
ret
mov
hlt
jnp
loop
into
jl
mov
icebp
xor
lea
pop
lahf
sub
outs
lock
cwde
mov
dec
cmp
(bad)
call
dec
add
test
jne
inc
fwait
sub
xlat
sub
cmp
cs
dec
adc
(bad)
(bad)
push
out
pop
mov
cld
test
push
adc
ja
jae
call
stc
(bad)
(bad)
(bad)
(bad)
push
dec
ret
sqrtps
imul
movs
popa
jl
scas
sub
push
into
ret
add
jne
and
dec
retf
adc
adc
dec
popf
ins
or
pop
retf
mov
jmp
mov
xchg
icebp
cmp
add
call
adc
adc
jbe
push
inc
pushf
adc
cmp
(bad)
(bad)
(bad)
dec
loope
test
inc
sbb
xchg
mov
add
outs
push
mov
(bad)
test
mov
mov
scas
outs
es
sub
sbb
pop
sahf
push
(bad)
ss
in
and
(bad)
ss
(bad)
(bad)
(bad)
jmp
mov
push
cwde
mov
movs
stc
push
mov
dec
ret
bound
(bad)
dec
cmp
cli
ror
call
jbe
(bad)
xchg
pushf
jb
mov
pop
test
(bad)
(bad)
call
aam
vmovdqa
retf
add
add
cli
mov
mov
(bad)
(bad)
call
mov
or
cmp
addr16
push
test
push
dec
in
fwait
(bad)
(bad)
(bad)
jmp
adc
nop
jne
fiadd
pop
xor
inc
push
add
sbb
call
add
adc
ficomp
adc
cmp
(bad)
(bad)
(bad)
cmp
pop
xlat
test
dec
dec
mov
inc
js
sbb
pop
movs
(bad)
ror
(bad)
(bad)
(bad)
jmp
cmc
mov
xor
push
cwde
mov
ds
stc
xor
adc
(bad)
(bad)
dec
icebp
pusha
mov
sub
movs
shl
inc
lock
aam
les
mov
and
cli
mov
pop
sub
inc
push
mov
call
fs
push
loop
push
push
in
fwait
out
cmp
clc
jae
jmp
sbb
dec
or
push
fstp
(bad)
(bad)
(bad)
call
loopne
imul
dec
mov
jle
inc
pushf
cld
dec
bound
cmps
ror
sub
cdq
fldenv
(bad)
(bad)
(bad)
call
lahf
outs
into
(bad)
sti
into
jecxz
dec
add
lods
jbe
popa
ror
xlat
arpl
scas
mov
mov
dec
or
mov
xlat
(bad)
mov
std
aad
add
sbb
(bad)
(bad)
fisttp
cmp
sbb
adc
rol
call
xchg
pop
(bad)
(bad)
(bad)
push
sub
xchg
stc
pusha
aad
in
jle
dec
jmp
fsubp
jne
loop
(bad)
(bad)
jg
push
dec
xchg
cmp
push
jno
pop
sti
bound
pop
hlt
ret
jne
xor
pusha
jp
(bad)
mov
and
cmp
jbe
pop
inc
push
jno
mov
cld
pop
add
aad
shr
ja
scas
sbb
xor
dec
cmp
cmc
in
(bad)
(bad)
call
aas
and
mov
arpl
lahf
push
pop
sub
jmp
call
ds
lods
bound
fldln2
push
(bad)
and
cmp
add
jne
aaa
loope
inc
pop
stc
xor
inc
xchg
(bad)
inc
mov
adc
icebp
mov
sahf
xchg
rcl
shl
call
scas
aas
jecxz
jl
movs
dec
retf
aam
mov
fdivr
fstp
cdq
test
ja
adc
leave
call
(bad)
(bad)
dec
dec
test
sbb
pop
int3
mov
mov
sub
repz
cli
cld
adc
push
mov
push
mov
icebp
pop
ja
xchg
jbe
and
jmp
(bad)
(bad)
(bad)
inc
aaa
addr16
aad
and
imul
retf
adc
ror
lea
jne
fdivrp
(bad)
(bad)
call
xchg
xchg
push
jne
or
clc
push
test
data16
retf
int3
push
fld
imul
enter
pop
sbb
retf
js
scas
adc
add
clc
add
xchg
cld
sbb
mov
adc
add
repz
inc
push
inc
xor
adc
into
xor
icebp
or
cld
pop
pop
inc
ins
fs
jmp
sbb
or
shl
ret
popf
pop
(bad)
gs
adc
shl
pop
pop
loope
jge
push
mov
(bad)
fild
(bad)
mov
pop
push
or
fmul
push
and
(bad)
push
movs
out
aaa
jmp
ins
and
push
rcl
jg
inc
push
cmps
mov
or
push
push
mov
or
ins
mov
(bad)
pop
push
scas
cmps
inc
add
add
in
lahf
les
jbe
push
shl
sbb
inc
add
sbb
mov
pop
pop
out
je
mov
inc
mov
ret
and
loop
and
inc
push
inc
rol
popf
dec
inc
out
cwde
and
aas
dec
(bad)
das
dec
dec
pop
or
(bad)
pop
pop
test
push
dec
dec
push
dec
mov
cli
mov
inc
and
add
rol
add
sub
inc
aaa
fistp
dec
aam
sub
cmp
xchg
jno
push
popa
ja
sub
push
push
dec
aaa
nop
punpcklbw
fisub
or
and
adc
push
dec
add
out
ficom
inc
cs
add
or
das
nop
or
out
xchg
(bad)
adc
inc
add
push
xor
dec
add
inc
xchg
cs
std
dec
push
xchg
pop
pop
je
(bad)
stc
not
pop
outs
push
xlat
dec
add
push
pop
jno
pop
icebp
xchg
(bad)
cmps
sub
das
ja
xor
addr16
dec
add
sbb
jg
pop
add
xchg
mov
arpl
repnz
invd
add
pop
stc
add
add
outs
or
add
nop
pop
jns
movnti
xchg
push
movs
jo
into
sbb
ins
mov
scas
cs
loopne
pop
mov
pop
cdq
jle
add
push
jo
jl
push
dec
and
mov
inc
add
aad
mov
test
pinsrw
mov
add
shr
ins
jo
rcr
add
adc
out
loopne
ins
jae
dec
loop
dec
sbb
jmp
lahf
xor
jne
pusha
jbe
add
cdq
fadd
lahf
pusha
ja
pop
fs
xchg
cmps
lahf
bound
add
jl
dec
xchg
xchg
out
in
mov
lock
adc
pop
(bad)
inc
stos
(bad)
and
pop
jg
enter
ficom
(bad)
dec
aam
lds
xor
std
cld
mov
xor
ss
and
(bad)
(bad)
(bad)
jmp
repnz
out
(bad)
jecxz
mov
sbb
movs
xchg
iret
aas
popa
and
or
retf
mov
gs
(bad)
(bad)
(bad)
js
inc
push
xor
ficomp
mov
icebp
imul
and
stos
rol
and
push
imul
call
imul
mov
jae
jo
push
adc
push
(bad)
(bad)
(bad)
jmp
or
fisttp
adc
pop
sub
retf
add
jg
push
jp
mov
lods
cmp
inc
mov
mov
jecxz
dec
xlat
in
add
iret
sub
adc
mov
cmp
xor
sub
aam
xchg
xchg
cdq
mov
shr
mov
stos
mov
stc
push
lds
adc
fcom
ds
cs
jmp
(bad)
(bad)
(bad)
js
loop
mov
stc
mov
add
dec
adc
mov
cmp
scas
push
cwde
(bad)
jg
jmp
stos
hlt
dec
fcom
jmp
lock
cld
popw
nop
dec
jmp
adc
(bad)
(bad)
dec
ucomiss
ins
sbb
sti
adc
and
add
test
out
cld
(bad)
(bad)
(bad)
dec
mov
inc
inc
gs
xchg
jmp
sbb
pop
out
add
sub
adc
call
fwait
dec
xor
jae
add
(bad)
mov
or
jg
bound
cmp
in
test
(bad)
(bad)
(bad)
(bad)
(bad)
ds
ror
or
inc
ins
imul
ja
call
pop
sti
(bad)
(bad)
push
xchg
popf
pop
repz
push
ds
fs
ret
pop
sub
inc
jg
xor
sbb
pop
fisttp
je
dec
lea
das
cli
inc
test
inc
stos
jno
jnp
loope
imul
dec
xor
add
add
loop
inc
pop
push
jl
mov
and
inc
stos
push
push
push
lea
jmp
xchg
cmp
push
dec
arpl
das
(bad)
clc
sub
push
add
sbb
imul
push
rcl
jl
(bad)
(bad)
jmp
push
cld
add
adc
sub
pop
bound
imul
xlat
call
(bad)
(bad)
(bad)
dec
pop
ret
pop
pop
cmp
cs
sbb
repz
outs
cmps
inc
fnstenv
rcl
dec
(bad)
(bad)
(bad)
inc
cmp
cmps
adc
sti
(bad)
xor
inc
imul
adc
mov
(bad)
call
push
cmp
pop
or
xchg
stos
inc
inc
rcr
sub
call
(bad)
(bad)
(bad)
jle
int
test
mov
add
mov
imul
sub
push
mov
jne
ret
leave
push
aam
jl
imul
xchg
dec
in
inc
in
push
or
outs
pop
sar
adc
mov
(bad)
jg
sar
xchg
nop
push
xchg
nop
(bad)
mov
(bad)
dec
sub
ss
cmp
and
sbb
loopne
jmp
aad
add
out
imul
sar
adc
int
xchg
pop
jmp
(bad)
lahf
sbb
pop
adc
aad
xor
(bad)
push
aad
sbb
mov
movs
ficomp
and
(bad)
(bad)
dec
cdq
sub
pop
(bad)
shr
jg
ror
push
xchg
pushf
test
(bad)
(bad)
mov
mov
xor
fstp
pop
sub
push
push
adc
sahf
xchg
pop
pop
(bad)
(bad)
(bad)
(bad)
push
pop
imul
popa
cmp
jno
imul
mov
jle
add
(bad)
(bad)
(bad)
inc
pop
or
and
fwait
pusha
mov
scas
dec
retf
movs
and
mov
je
sbb
movsx
lock
add
mov
mov
loopne
pop
jge
lock
in
sub
jns
push
adc
sbb
in
push
shr
sahf
lahf
and
pop
(bad)
cmp
lock
pop
jmp
jmp
aaa
push
nop
sti
jg
(bad)
(bad)
cmp
push
leave
jmp
push
fmul
sbb
mov
jnp
push
enter
sbb
push
call
sub
pop
xchg
movs
mov
lahf
cmp
cdq
mov
mov
les
xor
cmps
jns
fsub
inc
pop
jns
push
(bad)
(bad)
(bad)
(bad)
call
sub
xlat
ins
pop
adc
jmp
xchg
add
cli
dec
call
push
push
(bad)
(bad)
inc
cmp
or
sub
ret
add
data16
pop
std
(bad)
cmp
mov
mov
(bad)
cld
retf
pop
jle
cmp
mov
cmp
sub
ror
out
add
push
pop
cmp
repnz
fwait
or
mov
je
or
or
ficom
(bad)
aas
(bad)
arpl
mov
int
dec
push
pop
push
add
adc
(bad)
(bad)
(bad)
jg
retf
cmc
popf
or
call
push
cmp
or
add
mov
mov
push
lock
mov
daa
mov
shl
sub
popa
sbb
and
dec
mov
(bad)
call
retf
rol
jle
jnp
dec
xchg
icebp
into
mov
pop
xor
push
stos
pop
ja
xor
push
sub
jl
mov
cdq
ins
pop
pop
dec
(bad)
(bad)
(bad)
jg
dec
pop
sahf
cmp
pop
inc
mov
inc
mov
loopne
test
mov
jmp
fsubr
(bad)
(bad)
(bad)
jmp
jmp
xchg
out
sar
je
aam
jmp
fisubr
push
(bad)
(bad)
(bad)
(bad)
cmp
jae
pxor
adc
jo
stos
push
mov
aad
mov
es
(bad)
(bad)
inc
pop
mov
(bad)
clc
shl
fwait
and
mov
jmp
mov
cs
jae
dec
(bad)
(bad)
(bad)
(bad)
stc
xchg
ja
ret
push
lea
dec
stos
stos
mov
fisttp
cmp
aad
(bad)
(bad)
(bad)
(bad)
cmp
arpl
rol
pusha
push
mov
fwait
les
idiv
mov
sbb
pop
cmp
(bad)
(bad)
jmp
jmp
sar
mov
push
sbb
push
pop
sti
inc
xchg
frstor
cmps
cli
push
(bad)
(bad)
(bad)
(bad)
mov
std
ss
aas
fs
ds
stos
adc
add
jg
call
hlt
mov
cs
aam
fistp
mov
fldenv
cmc
sub
frstor
jmp
add
stc
shr
(bad)
fwait
test
adc
aaa
inc
or
push
movnti
inc
pushf
ja
push
inc
gs
pop
loopne
in
idiv
imul
pop
(bad)
(bad)
jg
(bad)
pop
ficomp
pop
inc
in
inc
inc
data16
cmps
in
inc
sbb
(bad)
sub
xor
lods
mov
jle
sbb
inc
mov
and
push
mov
sub
(bad)
(bad)
(bad)
jp
stc
cwde
addr16
pop
push
inc
cmp
inc
call
shl
enter
call
dec
sbb
add
inc
xchg
xchg
out
retf
retf
adc
xor
sahf
(bad)
(bad)
(bad)
jmp
adc
mov
or
je
ds
mov
adc
(bad)
(bad)
(bad)
(bad)
jns
ds
push
arpl
add
mov
and
adc
sbb
jmp
cmp
rol
push
pop
movs
jae
scas
jb
jl
cmps
inc
(bad)
mov
mov
(bad)
(bad)
push
and
je
test
fsubrp
retf
mov
push
imul
movs
adc
js
xchg
(bad)
(bad)
call
inc
fcomp
mov
dec
lahf
(bad)
clc
neg
inc
mov
mov
sub
inc
data16
outs
fist
xor
cmp
lods
xchg
and
jbe
adc
jmp
xor
scas
aam
lds
push
add
adc
xor
(bad)
(bad)
(bad)
mov
stos
leave
daa
div
lods
loope
cmp
enter
das
test
dec
dec
cmp
(bad)
(bad)
jmp
js
push
mov
push
jns
jne
add
movs
and
(bad)
in
repz
cmps
shl
(bad)
(bad)
(bad)
dec
pop
inc
fstp
jle
xchg
retf
out
mov
xor
cdq
and
(bad)
cmp
out
pop
push
mov
and
aad
add
(bad)
(bad)
inc
test
push
xchg
scas
dec
sub
pop
in
sbb
mov
test
dec
(bad)
(bad)
(bad)
dec
stc
inc
mov
inc
retf
je
add
popf
fst
push
daa
addr16
sub
jle
mov
(bad)
jmp
jno
cli
lahf
fstp
outs
mov
fwait
clc
fild
mov
inc
cmp
pop
jae
jae
sub
rcl
test
(bad)
(bad)
jg
jg
loopne
dec
movs
mov
test
pushf
scas
or
push
in
jecxz
(bad)
(bad)
jmp
dec
sub
ins
xchg
mov
ins
stc
data16
mov
cmp
js
inc
out
les
(bad)
(bad)
(bad)
(bad)
movs
cld
(bad)
div
in
aaa
loope
jl
push
mov
jg
xor
retf
and
(bad)
call
cmps
loopne
push
adc
sbb
ins
(bad)
sub
push
leave
and
pop
(bad)
(bad)
(bad)
call
sbb
mov
jmp
mov
add
(bad)
sbb
mov
(bad)
(bad)
(bad)
call
pop
mov
hlt
mov
cs
sar
je
retf
test
sbb
mov
(bad)
inc
outs
iret
les
dec
mov
jb
mov
inc
rol
jmp
mov
xor
rcl
push
sahf
pop
inc
(bad)
jg
cmps
inc
out
sub
pusha
(bad)
ds
push
retf
nop
adc
adc
gs
cmp
cli
pop
mul
push
cld
(bad)
fbstp
mov
ins
dec
aad
jne
pusha
sahf
push
add
cmp
fwait
in
mov
and
jnp
outs
aas
pop
xor
pusha
cmp
and
sub
cld
sar
(bad)
call
imul
fmulp
pusha
iret
scas
add
sub
pop
or
je
pushf
and
(bad)
(bad)
cmp
mov
xchg
or
mov
cs
fucomp
clc
cs
(bad)
(bad)
jmp
push
fucomip
mov
push
sbb
test
loop
xchg
jns
movs
inc
js
pusha
icebp
nop
xor
call
(bad)
shr
cmp
jo
dec
xchg
mov
sub
stos
ret
movs
push
xor
stos
inc
cmps
push
adc
mov
nop
(bad)
(bad)
(bad)
mov
jl
xchg
dec
or
mov
mov
dec
fstp
jns
dec
shl
mov
imul
or
mov
or
xor
call
dec
jle
std
test
(bad)
arpl
and
cmps
mov
pop
ins
xchg
test
repz
adc
pop
(bad)
(bad)
jmp
je
add
xor
mov
fdivr
lock
loop
clc
jmp
mov
mov
sbb
cmp
out
or
(bad)
(bad)
(bad)
mov
cld
lods
jno
aad
data16
das
out
xchg
mov
(bad)
jl
test
(bad)
inc
jmp
inc
test
aaa
mov
jmp
and
ds
das
push
inc
(bad)
call
cmp
or
mov
mov
ror
call
pop
imul
jmp
push
lea
movs
mov
xchg
lds
xchg
mov
xchg
adc
(bad)
inc
lock
repz
add
cmps
jbe
xor
outs
add
sbb
xor
inc
stc
adc
cmp
add
push
scas
xlat
adc
addr16
jmp
fisubr
or
sti
xchg
outs
or
test
push
dec
addr16
(bad)
(bad)
(bad)
push
or
sbb
ins
ja
(bad)
xor
test
cld
scas
gs
mov
sbb
ja
inc
fwait
cwde
mov
gs
pop
jb
xchg
out
fidiv
mov
(bad)
mov
mov
pop
cmc
inc
loopne
pop
xor
pop
or
jl
dec
fmul
pushf
and
(bad)
(bad)
out
sahf
das
sub
xlat
push
pushf
ins
push
dec
dec
push
in
retf
mov
inc
out
add
add
push
(bad)
(bad)
dec
dec
push
loopne
jmp
mov
cdq
adc
mov
push
or
(bad)
(bad)
jg
inc
dec
cld
hlt
inc
in
adc
inc
dec
mov
or
fadd
cld
(bad)
(bad)
dec
dec
dec
shl
scas
cmp
xchg
scas
pusha
ret
sub
mov
inc
sub
mov
and
xor
sub
sub
push
nop
add
(bad)
(bad)
(bad)
in
inc
mov
fmul
stos
pop
jbe
fs
fsub
and
and
jmp
xlat
adc
mov
aaa
xchg
xor
lock
push
mov
jmp
(bad)
(bad)
(bad)
mov
bound
call
ins
dec
or
push
jno
pusha
or
js
int
(bad)
(bad)
(bad)
jmp
pushf
loop
fidiv
lea
mov
mov
pop
int
sar
(bad)
(bad)
call
out
inc
sub
and
fs
aad
xor
in
dec
std
mov
pop
dec
xor
in
(bad)
(bad)
call
mov
mov
aad
inc
mov
and
loope
pop
sub
repnz
adc
or
(bad)
(bad)
push
inc
bound
jae
dec
adc
sbb
dec
int
adc
xchg
shr
jmp
mov
or
jno
pop
mov
and
enter
dec
pop
das
(bad)
(bad)
(bad)
push
bound
push
inc
popf
pop
pop
adc
dec
push
inc
and
ret
xchg
add
cmc
push
(bad)
(bad)
(bad)
(bad)
sti
into
cli
and
jmp
push
(bad)
ret
mov
cwde
xchg
pop
ret
adc
pop
(bad)
(bad)
(bad)
jmp
mov
and
or
dec
jl
mov
mov
fwait
fwait
xchg
mov
(bad)
push
arpl
jp
test
mov
sbb
inc
ss
int
in
cmp
(bad)
(bad)
jmp
or
xor
fcmovbe
rcr
sbb
(bad)
pop
mov
or
(bad)
call
call
push
mov
js
ror
psraw
out
cmp
dec
cmc
arpl
das
clc
pop
inc
pop
sub
out
js
fdivr
ja
retf
adc
or
psubsw
jo
imul
pop
pop
call
pop
cmp
movs
out
icebp
popf
out
test
ret
or
mov
sbb
popa
out
mov
std
cli
fld
pushf
cld
loopne
(bad)
push
(bad)
(bad)
(bad)
jmp
hlt
jno
jmp
lods
out
push
mov
inc
inc
repz
clc
test
aad
out
jmp
and
aaa
outs
mov
cmovle
pop
es
(bad)
(bad)
(bad)
(bad)
jle
loopne
sti
arpl
ret
jns
addr16
adc
inc
jecxz
xlat
pop
mov
or
(bad)
(bad)
jmp
jp
mov
push
push
push
cmp
jbe
jl
clc
(bad)
(bad)
(bad)
jg
mov
cmps
mov
(bad)
mov
aad
mov
inc
enter
ins
pop
add
cmp
(bad)
(bad)
(bad)
mov
and
loopne
mov
xchg
push
clc
push
cmp
lahf
bound
daa
iret
fstp
(bad)
(bad)
jmp
pop
out
ret
scas
fild
cmp
cmc
imul
fcomip
jl
js
pop
data16
or
sbb
and
aaa
test
daa
movs
jnp
push
sbb
(bad)
(bad)
dec
movs
fnstenv
add
xchg
sub
or
pop
mov
popf
paddd
icebp
xor
(bad)
(bad)
(bad)
jmp
addr16
and
xlat
leave
cmp
addr16
cmps
or
dec
aas
push
stc
mov
(bad)
(bad)
mov
inc
mov
ins
cmp
in
into
xor
jmp
mov
(bad)
(bad)
jmp
outs
ss
jmp
xchg
test
sbb
mov
(bad)
jg
(bad)
(bad)
adc
retf
repz
test
jae
mov
mov
fcomip
(bad)
(bad)
sti
mov
jecxz
cmp
ins
push
fisttp
cmps
push
sbb
and
(bad)
(bad)
(bad)
dec
and
sub
or
push
mov
push
daa
cmp
or
fild
je
les
scas
(bad)
(bad)
fcomip
fcom
ficomp
mov
arpl
dec
(bad)
xor
xchg
jg
(bad)
(bad)
cmp
lock
cmp
mov
push
pop
pop
jns
mov
stos
test
(bad)
call
test
mov
clc
and
(bad)
in
or
xchg
rol
mov
mov
je
data16
(bad)
(bad)
inc
sbb
retf
pop
fdiv
jle
cmp
repz
mov
arpl
add
adc
(bad)
cmp
cmc
push
dec
xchg
mov
outs
mov
cwde
inc
xchg
lods
fisubr
(bad)
(bad)
(bad)
call
mov
xchg
jns
dec
fldcw
adc
xor
call
mov
outs
jl
pop
enter
add
retf
test
jno
(bad)
(bad)
(bad)
dec
dec
stos
int
jmp
mov
mov
dec
(bad)
(bad)
mov
mov
std
ds
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
pop
cwde
(bad)
mov
into
mul
inc
mov
inc
les
xchg
push
lds
cmp
(bad)
(bad)
(bad)
inc
jno
call
and
lock
jbe
fcmovnb
mov
into
test
out
mov
aaa
adc
ror
hlt
aas
mov
inc
ins
adc
(bad)
inc
inc
xchg
retf
mov
cmp
mov
daa
xchg
or
sbb
mov
mov
cmp
or
xchg
sub
(bad)
(bad)
(bad)
inc
in
in
inc
or
sub
popa
add
out
outs
mov
pop
jecxz
outs
clc
(bad)
(bad)
(bad)
sub
addr16
jae
int3
or
push
lods
movs
jbe
xor
cmps
sbb
and
aam
(bad)
(bad)
jmp
aam
lods
hlt
lahf
daa
add
xchg
in
sub
lahf
xor
xlat
cmc
pop
pop
xchg
icebp
(bad)
(bad)
(bad)
push
mov
ret
rcr
(bad)
xor
sbb
push
daa
sub
cmps
in
int
icebp
je
pop
xchg
fstp
in
(bad)
dec
popf
inc
cmp
jnp
into
add
push
jo
(bad)
fiadd
xchg
push
shl
mov
clc
(bad)
(bad)
(bad)
clc
or
pop
or
ins
mov
mov
faddp
pop
retf
mov
mov
mov
not
popf
pusha
sbb
pop
xor
(bad)
pop
mov
clc
push
inc
lea
push
ror
mov
ins
mov
movs
js
jmp
daa
and
add
hlt
dec
call
mov
push
adc
or
sbb
sub
mov
push
adc
test
inc
jg
clc
(bad)
(bad)
out
cmps
ins
fucom
ins
lods
mov
inc
xchg
sahf
imul
dec
retf
fld
(bad)
(bad)
call
xlat
sbb
adc
fwait
test
push
mov
(bad)
dec
je
loop
sub
rcr
lods
xchg
mov
aad
(bad)
jg
push
xchg
sub
inc
cmps
sub
(bad)
jne
jge
xchg
jecxz
aad
in
mov
sbb
(bad)
(bad)
jmp
pop
mov
rcr
stc
dec
fcomp
jne
jb
dec
shl
clc
loope
cmp
in
inc
sub
mov
sub
aaa
pop
test
sbb
push
cld
(bad)
js
adc
in
sti
(bad)
pop
push
pop
scas
or
sbb
xor
mov
jmp
dec
(bad)
sbb
movs
xchg
cmc
pop
nop
int
jns
icebp
cmp
push
fild
inc
push
cs
inc
imul
mov
scas
(bad)
(bad)
out
adc
fdivr
mov
push
shl
movs
test
in
dec
sub
(bad)
inc
jg
pop
cmp
arpl
fwait
add
int
in
push
add
push
add
data16
in
std
sbb
out
pop
inc
in
fwait
cwde
sbb
(bad)
out
out
pop
cdq
push
add
adc
pusha
xchg
push
pop
cmc
jmp
pusha
jb
mov
dec
lods
push
(bad)
xchg
jb
popa
and
mov
push
loopne
dec
push
sbb
sbb
loopne
frstor
ins
into
repz
xor
bt
call
push
jb
pop
cmp
clc
pusha
cmp
pushf
and
jne
fwait
and
movs
iret
add
jp
call
jmp
leave
push
jo
mov
(bad)
(bad)
dec
movs
stc
cmp
cmp
inc
pusha
(bad)
aas
jp
out
xlat
rol
inc
(bad)
(bad)
(bad)
jg
outs
ds
pop
inc
jg
stc
adc
into
sub
cmp
cmp
inc
(bad)
(bad)
(bad)
call
cmp
sub
ret
fsubr
cdq
arpl
jmp
or
js
jmp
add
push
(bad)
(bad)
(bad)
jmp
jge
sbb
call
jmp
lahf
das
ins
mov
stos
sti
cmp
(bad)
(bad)
(bad)
call
aas
fcmovnbe
in
out
hlt
and
fild
fld
mov
cli
movs
(bad)
dec
(bad)
push
clc
fcom
in
nop
dec
ins
call
push
ins
fcmovb
out
(bad)
das
clc
clc
dec
cwde
pop
dec
pop
and
inc
pop
push
ins
inc
cmp
(bad)
cli
mov
hlt
leave
xor
movs
push
call
jae
mov
(bad)
(bad)
(bad)
push
jp
rol
sub
loope
xchg
pop
sti
mov
lods
test
mov
push
popf
jmp
sub
mov
push
pop
push
mov
inc
sbb
out
in
in
imul
cld
(bad)
jmp
mov
adc
nop
lods
xchg
or
sbb
(bad)
dec
adc
add
dec
push
(bad)
fsubr
jmp
imul
repnz
bound
dec
adc
pop
gs
jl
arpl
sub
jo
addr16
jmp
cli
add
std
in
pop
sbb
add
hlt
cmp
adc
lods
sub
mov
scas
sbb
cmp
(bad)
push
pop
sub
xlat
and
aas
push
xchg
retf
pop
dec
sar
popf
pop
in
in
pop
add
fs
fild
push
movs
adc
xor
jns
push
mov
sub
(bad)
call
mov
inc
push
cmps
retf
xlat
jp
xchg
jo
stos
retf
aaa
ror
pop
movs
(bad)
(bad)
call
cmp
jne
sub
inc
and
ret
(bad)
out
add
sbb
(bad)
(bad)
push
jb
jb
push
mov
push
(bad)
jmp
cmp
sub
add
(bad)
(bad)
(bad)
(bad)
mov
jge
fnsave
dec
sbb
es
cmp
sub
(bad)
sti
dec
xchg
sahf
pop
retf
pusha
loop
jg
or
repz
jb
(bad)
(bad)
(bad)
inc
(bad)
and
lock
iret
ins
pushf
loope
imul
fwait
retf
scas
cmp
jecxz
(bad)
(bad)
(bad)
fsubrp
jmp
lods
out
sbb
fcmove
sbb
push
sahf
xchg
cld
iret
pop
or
inc
lds
cld
int3
mov
(bad)
je
stos
cmp
(bad)
mov
and
fcom
lea
stos
mov
pop
add
rol
retf
cwde
xchg
(bad)
(bad)
jmp
imul
jle
cmp
cmc
push
pop
cmps
add
dec
sbb
jbe
jnp
dec
ficom
and
xor
addr16
ficomp
cmp
mov
or
mov
sub
hlt
dec
inc
sbb
adc
(bad)
pop
xchg
mov
push
ss
or
mov
loopne
mov
add
sbb
jg
jge
push
dec
push
ins
adc
sub
rcl
cmp
and
(bad)
jmp
or
mov
ins
shl
adc
arpl
push
outs
call
imul
(bad)
push
sahf
add
(bad)
(bad)
(bad)
jmp
std
cmps
cli
jno
retf
stos
enter
test
push
daa
cmc
mov
xchg
mov
push
lds
lock
(bad)
(bad)
cmp
pushf
loop
and
fwait
test
pop
jmp
(bad)
inc
(bad)
dec
xchg
jle
ja
adc
rcr
and
retf
into
jg
(bad)
jmp
mov
xchg
outs
mov
mov
cmp
icebp
rol
xlat
hlt
(bad)
(bad)
(bad)
jl
xchg
(bad)
fucomip
cs
jmp
jl
pop
sbb
xchg
addr16
cwde
sub
mov
jmp
sbb
imul
es
call
inc
and
adc
mov
or
ror
add
lds
je
out
cli
inc
and
push
add
push
fidivr
jmpw
mov
add
jl
ja
jmp
mov
add
add
pushf
call
jmp
mov
movs
or
pushf
ret
call
or
xchg
add
or
shr
retf
add
(bad)
jmp
cmp
fbstp
fsubr
lods
jnp
stc
add
mov
fild
cmp
outs
(bad)
(bad)
(bad)
(bad)
jl
jp
ins
movs
repz
xor
scas
shl
adc
push
imul
jl
sar
imul
mov
adc
loop
lds
lods
loop
enter
(bad)
(bad)
push
ret
iret
pop
and
(bad)
das
ds
in
dec
xchg
add
(bad)
outs
cli
sub
ss
arpl
out
xchg
pop
mov
or
pop
loopne
cmp
add
outs
out
popa
jp
add
push
mov
cmp
(bad)
(bad)
jmp
and
inc
sbb
inc
sbb
clc
xor
loop
ins
popf
fbld
(bad)
(bad)
dec
adc
mov
push
pop
ins
mov
jno
mov
mov
stos
xchg
push
bound
(bad)
fsubr
loop
test
dec
(bad)
mov
jmp
dec
fcmovnb
aas
pusha
setg
inc
inc
mov
adc
xchg
les
xchg
or
dec
call
lea
add
out
and
add
pushf
std
outs
push
js
mov
sbb
scas
pusha
push
(bad)
pushf
imul
add
pusha
push
push
ss
pop
push
and
jle
mov
(bad)
pushf
call
pop
mov
mov
dec
fidivr
out
js
mov
add
dec
stos
xor
stos
push
xchg
sti
jg
(bad)
dec
jb
imul
push
out
(bad)
fldcw
call
clc
sub
sub
and
cmp
dec
xchg
mov
mov
sbb
jno
xchg
mov
pushf
(bad)
(bad)
mov
in
cmc
ss
loopne
inc
outs
test
jl
mov
push
in
sar
(bad)
(bad)
(bad)
stc
xchg
sub
pop
pop
test
xchg
push
adc
add
mov
out
(bad)
mov
or
(bad)
jmp
bswap
into
test
bound
jno
test
ret
les
jmp
jnp
pop
pop
iret
outs
xchg
cmps
adc
mov
call
pushf
pop
aas
aas
mov
lock
pushf
push
push
jne
pop
daa
(bad)
(bad)
(bad)
(bad)
fcomip
enter
mov
mov
pop
pusha
clc
jmp
add
inc
and
mov
aas
mov
add
stc
int
dec
rep
in
adc
shr
jo
int3
stos
ins
push
call
add
ja
or
sbb
push
jne
stc
cmps
cmp
xor
(bad)
(bad)
inc
add
or
jae
mov
xor
push
(bad)
stc
inc
cmc
inc
sub
pop
add
(bad)
(bad)
push
pop
fwait
push
enter
cld
inc
mov
sbb
aam
dec
add
aad
es
and
adc
inc
aad
in
dec
dec
pushf
cmps
out
sbb
retf
cmp
shr
sbb
data16
pop
in
inc
(bad)
(bad)
(bad)
jmp
jnp
xchg
cmp
jo
mov
inc
xchg
inc
sbb
lahf
cmps
js
addr16
jge
nop
sbb
iret
clc
(bad)
(bad)
(bad)
fidivr
fcomp
pusha
sti
aas
inc
imul
fistp
dec
sbb
mov
inc
inc
mov
add
ret
icebp
mov
add
add
jl
mov
loop
jmp
out
lock
mov
(bad)
adc
bound
ret
pop
call
dec
int
and
mov
(bad)
push
mov
sahf
add
add
lods
pop
loop
jne
mov
inc
jb
popa
ins
mov
cmps
pop
or
aas
adc
ds
rcl
(bad)
(bad)
inc
out
or
call
xchg
mov
fidivr
pop
jmp
dec
je
push
repnz
jecxz
xchg
push
inc
idiv
ja
repnz
jmp
(bad)
(bad)
mov
push
sub
cmc
push
test
pop
repz
mov
dec
repnz
aaa
fisttp
jne
xchg
shl
lea
sbb
and
cmp
fld
les
outs
shl
push
aas
clc
lea
mov
push
enter
shld
sub
in
sbb
(bad)
not
(bad)
fcomip
in
call
int3
fistp
sbb
sub
cmps
fldln2
retf
adc
repz
adc
inc
pushf
sbb
movs
outs
xor
mov
daa
xchg
call
aad
push
popa
cmp
sub
lods
xor
ins
add
(bad)
(bad)
(bad)
dec
popa
es
movs
push
daa
cmc
add
retf
gs
and
or
or
int
(bad)
or
call
fmul
or
shl
in
jecxz
leave
shr
(bad)
(bad)
(bad)
mov
and
imul
fmul
cmp
xor
dec
mov
pop
or
fcomip
sbb
fs
fdivrp
push
int
es
pop
mov
ja
push
stc
lea
fist
or
jo
or
(bad)
mov
(bad)
push
bound
pop
mov
jbe
into
mov
sar
sub
or
add
inc
daa
fild
fdivr
(bad)
dec
rcl
cdq
push
scas
fild
retf
rcr
enter
popa
sbb
vphsubdq
xor
shr
fadd
push
(bad)
jmp
push
cld
or
push
xchg
and
out
pop
aam
or
(bad)
(bad)
fbstp
inc
test
mov
js
repz
xchg
test
inc
push
sub
or
pop
sbb
outs
mov
(bad)
jmp
jecxz
mov
(bad)
out
clc
call
call
cmps
(bad)
shr
cmp
(bad)
in
inc
loop
je
rcl
pop
shr
sti
bound
pushf
jmp
fimul
les
push
mov
pop
cmp
daa
jne
in
(bad)
rep
js
add
sti
(bad)
call
hlt
pusha
push
(bad)
and
jmp
adc
xor
xchg
dec
enter
(bad)
jmp
mul
pop
fild
and
jp
sub
push
into
mov
mov
(bad)
je
inc
inc
jge
jns
jbe
add
retf
inc
or
mov
cmp
fsqrt
push
xchg
dec
and
aam
sbb
out
sbb
aam
arpl
cwde
pusha
(bad)
(bad)
(bad)
(bad)
jp
xchg
mov
dec
lods
dec
dec
in
sbb
push
(bad)
fcmove
jg
call
stc
(bad)
(bad)
(bad)
(bad)
cli
dec
outs
cmp
aaa
sub
stos
mov
push
or
mov
jg
outs
fdivr
movs
mov
rcl
std
stos
outs
pushf
xor
push
push
call
mov
inc
inc
(bad)
jle
aam
repnz
out
dec
leave
clc
cmp
cmps
scas
fadd
jecxz
fbstp
cmp
sbb
(bad)
mov
hlt
sbb
stc
mov
(bad)
into
cs
dec
pop
cwde
pop
lahf
jmp
sub
(bad)
jmp
pop
add
pop
pushf
inc
sbb
mov
and
nop
sar
lock
mov
imul
jb
movs
sbb
int
(bad)
out
clc
jg
adc
xor
cli
lods
in
mov
xor
adc
pop
pop
inc
sar
(bad)
dec
dec
ins
adc
into
int3
push
(bad)
shl
addr16
fidivr
es
(bad)
push
retf
or
sbb
mov
test
and
mov
push
sar
sub
hlt
jg
jmp
js
clc
xor
mov
dec
jmp
aaa
(bad)
movs
rcr
inc
std
mov
xchg
ins
xor
pop
add
mov
sub
xchg
dec
je
(bad)
pop
arpl
sbb
call
(bad)
cld
sbb
jecxz
dec
xchg
push
mov
addr16
inc
xchg
mov
bound
jge
scas
add
std
es
jp
jg
dec
cwde
add
or
sbb
ret
arpl
(bad)
(bad)
push
pop
xchg
or
das
push
adc
ss
xor
imul
ja
popf
mov
fwait
out
cmps
jmp
xchg
sub
and
addr16
fistp
xchg
add
inc
bsr
mov
jle
ds
lea
xchg
sub
(bad)
mov
ror
sub
cmp
movs
push
fld
scas
ss
call
out
or
mov
and
inc
test
(bad)
(bad)
(bad)
dec
stos
sbb
cmps
stc
sub
adc
fldcw
pop
in
(bad)
sar
(bad)
sbb
adc
je
test
dec
loopne
mov
xor
shl
ds
clc
mov
push
cld
mov
and
cmp
or
fisub
mov
xchg
cs
mul
mov
push
push
pop
jne
je
(bad)
(bad)
call
add
lods
xor
in
stos
scas
push
adc
cmp
mov
outs
fsubr
pop
pop
hlt
outs
add
add
xchg
nop
inc
pop
pop
and
jmp
out
outs
dec
adc
retf
mov
jo
adc
fcomip
jmp
and
xchg
sbb
lock
movs
lock
cmps
in
into
cld
(bad)
(bad)
jmp
les
or
inc
push
cwde
xchg
cmp
outs
inc
cmp
add
ror
sbb
ss
mov
dec
test
in
ss
cmp
(bad)
jg
dec
sub
cmc
xchg
das
jp
jno
mov
ds
rol
movs
pop
(bad)
fild
mov
and
mov
jne
cmp
inc
pop
cmc
inc
inc
mov
sub
rol
leave
mov
imul
cli
xor
test
cmp
xchg
pop
jl
jle
repnz
pushf
call
in
arpl
ret
sti
sbb
(bad)
jmp
inc
xchg
fadd
aad
sbb
arpl
lods
ror
cmp
pop
or
daa
ins
lock
(bad)
ja
mov
arpl
int3
inc
nop
jmp
fdivr
jp
add
push
test
inc
ret
(bad)
(bad)
(bad)
stc
cmc
inc
xlat
dec
nop
dec
jno
xchg
adc
jmp
sbb
or
pusha
sbb
(bad)
fadd
jne
pop
sub
iret
inc
imul
jg
and
mov
lds
js
cs
or
lahf
jmp
lods
sub
mov
(bad)
(bad)
push
cmp
mov
xor
mov
lock
in
push
leave
hlt
(bad)
retf
push
cmp
(bad)
inc
iret
bound
out
jne
rol
sub
ja
pop
push
fwait
inc
cmp
(bad)
(bad)
(bad)
dec
inc
test
pop
add
das
mov
xor
call
mov
mov
(bad)
fcomip
jmp
sbb
and
into
xchg
lods
sbb
and
push
out
lahf
inc
adc
fmul
fistp
mov
movs
in
mov
push
lods
sub
mov
mov
xchg
jne
jnp
iret
jl
ja
xlat
add
(bad)
inc
mov
(bad)
inc
push
pop
das
cmp
(bad)
jmp
or
fmul
int3
inc
and
lods
inc
jecxz
add
imul
(bad)
pop
cld
(bad)
(bad)
dec
pusha
rcl
jmp
fcom
jg
stc
jmp
sbb
ficom
dec
lds
sub
loopne
jno
test
out
ret
(bad)
(bad)
(bad)
jmp
inc
inc
ror
int3
cmp
aas
mov
daa
or
mov
pop
jae
sbb
cwde
push
loopne
pushf
pushf
mov
jmp
lds
dec
push
sbb
mov
mov
cmp
pop
jmp
dec
outs
data16
jmp
data16
mov
cmc
pop
test
mov
mov
push
call
repz
fwait
das
cs
push
jmp
mov
shr
jp
pop
pop
pop
dec
push
mov
lock
(bad)
hlt
sbb
inc
ss
cld
or
dec
pop
sti
and
(bad)
(bad)
jmp
sbb
dec
xchg
or
dec
adc
scas
add
cwd
sub
aaa
scas
(bad)
cli
mov
stc
mov
loope
scas
(bad)
(bad)
inc
ret
xchg
in
dec
into
ins
mov
jmp
mov
mov
icebp
test
shl
dec
xor
dec
aam
aad
jb
lock
dec
mov
call
jmp
(bad)
mov
push
in
mov
cmp
(bad)
mov
mov
(bad)
inc
lea
leave
dec
shr
pop
cld
xor
and
adc
inc
loope
xor
adc
(bad)
(bad)
push
cdq
jecxz
scas
nop
int3
out
aaa
shr
cmp
retf
mov
sub
push
outs
repz
xchg
jmp
adc
jl
mov
cmc
clc
jmp
sar
add
pusha
sub
adc
cmp
call
lock
call
or
cld
add
cmc
rol
test
clc
pop
in
clc
xor
mov
or
ror
dec
pusha
cmp
jl
dec
jmp
(bad)
(bad)
jg
int
fnstcw
cld
add
test
mov
push
dec
mov
mov
(bad)
(bad)
(bad)
call
push
les
fcomp
test
jb
fwait
adc
outs
cwde
cmc
and
jo
mov
(bad)
(bad)
(bad)
(bad)
jmp
daa
adc
(bad)
jle
jne
stc
push
mov
cmc
shr
push
sub
cdq
(bad)
(bad)
(bad)
inc
inc
mov
and
jae
pop
xchg
aad
pop
push
push
mov
(bad)
(bad)
(bad)
inc
cmp
nop
shr
fild
lods
mov
(bad)
and
adc
mov
iret
and
retf
scas
pop
in
sub
dec
in
(bad)
jo
cmp
add
dec
cmp
or
mov
push
mov
and
shl
dec
xor
pop
mov
mov
pop
or
inc
aad
dec
mov
(bad)
(bad)
fcomp
inc
cwde
push
popf
dec
mov
xchg
and
sub
xor
leave
jae
sbb
std
gs
(bad)
(bad)
call
dec
loopne
icebp
dec
repnz
in
ins
cmp
push
push
jp
(bad)
fst
stos
xor
dec
mov
(bad)
(bad)
(bad)
call
pusha
in
cwde
out
outs
adc
mov
shl
ror
shr
sub
adc
aam
sar
push
or
and
mov
daa
sets
int3
mov
cmc
jmp
lock
xor
out
xchg
(bad)
rol
mov
add
adc
sbb
or
daa
aas
addr16
dec
adc
in
xchg
mov
pminub
push
ret
and
outs
(bad)
and
push
inc
mov
mov
xchg
mov
ins
std
fild
add
or
test
(bad)
call
inc
jle
xor
xchg
mov
ss
test
(bad)
(bad)
(bad)
sti
inc
xchg
push
dec
fcmovnu
or
cli
pusha
call
rol
rol
out
sbb
pop
(bad)
jb
ret
cmp
test
(bad)
out
sahf
cli
mov
push
lea
(bad)
push
xor
mov
adc
imul
(bad)
(bad)
call
jg
cmp
push
pop
sbb
mov
imul
add
in
leave
cmp
mov
sti
sub
sbb
in
in
ror
(bad)
mov
adc
jmp
and
adc
in
cmp
test
imul
call
shl
jmp
push
xchg
outs
fcom
pop
cmp
daa
mov
or
or
stc
aad
or
adc
cmps
jns
nop
adc
pop
repz
sub
mov
xor
sar
mov
and
inc
es
dec
sahf
dec
shl
push
enter
adc
ret
fadd
cmp
jmp
and
popa
or
lds
mov
jmp
int
std
jns
adc
test
popf
jmp
scas
adc
mov
fwait
icebp
in
push
jb
rcr
jmp
out
test
call
ja
xor
adc
aam
xchg
xchg
aas
bound
mov
outs
ret
(bad)
(bad)
ds
sub
mov
push
xor
ret
mov
sti
add
sbb
out
outs
test
scas
or
arpl
std
ret
pushf
mov
adc
adc
xchg
and
scas
jb
pop
test
movs
lods
(bad)
(bad)
(bad)
push
or
or
mov
int3
jle
es
xor
and
inc
or
xor
lea
push
fdiv
call
jl
mov
add
ret
(bad)
(bad)
(bad)
mov
daa
out
pushf
add
jb
push
sub
in
and
xchg
in
mov
call
mov
or
xchg
retfw
inc
jg
in
push
jmp
dec
xor
call
cld
pop
cmp
sbb
out
jle
mov
sbb
(bad)
call
push
sub
inc
pop
pop
imul
fadd
sbb
scas
pop
lods
jle
(bad)
dec
push
shr
sahf
gs
cmps
sub
pop
loop
ret
ror
inc
push
ror
sub
idiv
jns
call
loopne
out
(bad)
(bad)
push
dec
jb
push
sbb
and
add
iret
movs
cs
aad
push
sbb
(bad)
dec
je
add
cmp
push
cmp
ja
test
dec
cmp
xor
or
test
mov
dec
jbe
mov
or
js
mov
sbb
(bad)
(bad)
inc
(bad)
fist
ds
div
popf
in
jbe
nop
and
sti
arpl
popf
int3
sbb
inc
test
loopne
das
mov
sbb
xchg
and
cmp
push
test
sub
sar
(bad)
aas
shl
push
cmp
or
add
pop
sahf
pop
or
(bad)
(bad)
(bad)
(bad)
cmp
retf
aad
int3
gs
sbb
lahf
fs
sbb
mov
fsubr
push
(bad)
call
or
addr16
popf
rcr
and
clc
mov
inc
push
push
jecxz
xchg
cmp
push
clc
pop
and
rol
test
inc
int
ret
fisubr
sbb
dec
fisttp
test
fimul
and
add
or
js
iret
js
push
ds
mov
mov
das
xor
xor
or
and
pusha
dec
mov
lods
push
add
push
clc
cmp
sub
xchg
sbb
jne
push
ss
scas
clc
xchg
retf
repnz
inc
adc
push
dec
gs
add
add
mov
outs
adc
jmp
cmps
mov
call
and
movs
repz
out
fdiv
hlt
cmp
add
mov
or
push
(bad)
(bad)
(bad)
dec
xchg
inc
test
pop
repnz
mov
data16
pop
mov
xchg
sub
mov
mov
cli
mov
or
(bad)
(bad)
jg
int3
pusha
popa
xor
mov
xchg
push
jmp
ins
push
inc
xchg
loope
loop
(bad)
(bad)
call
nop
out
stos
mov
pop
test
retf
(bad)
and
ja
dec
mov
mov
(bad)
(bad)
jmp
outs
das
bound
xchg
ret
cmps
rcr
xor
(bad)
int
jecxz
aaa
adc
(bad)
(bad)
call
inc
and
push
je
ja
lock
imul
pop
jmp
mov
(bad)
sub
xchg
and
ret
add
sub
dec
pop
xor
(bad)
(bad)
out
clc
sub
cli
mov
imul
aas
jl
mov
xor
fcmovnbe
jl
(bad)
(bad)
(bad)
(bad)
js
pop
cwde
in
or
es
std
push
mov
jbe
mov
pop
cmp
cmp
scas
mov
xor
sub
or
or
cmp
adc
(bad)
(bad)
inc
inc
xchg
pop
fst
push
or
test
pop
nop
jmp
aam
loopne
(bad)
cmc
frstor
jnp
and
xor
nop
dec
add
popa
pusha
mov
rol
dec
sbb
cmc
sub
(bad)
(bad)
(bad)
push
outs
movs
xor
mov
cmp
xchg
sar
lahf
adc
int
push
sbb
ret
jg
or
(bad)
jg
dec
cmp
cmp
dec
mov
xchg
popf
push
(bad)
(bad)
(bad)
call
xor
dec
je
in
test
out
popa
cmp
or
retf
dec
cs
(bad)
jmp
inc
jge
mov
test
fiadd
cmp
push
push
push
pop
sbb
lods
xor
jmp
xchg
repnz
sbb
sbb
loop
(bad)
xlat
dec
(bad)
dec
shl
ret
xchg
jb
dec
sbb
push
push
aaa
in
(bad)
cmp
or
pop
add
mov
popf
dec
imul
jnp
cmps
pop
hlt
call
push
sbb
xor
cmp
(bad)
jmp
ficom
leave
dec
inc
fimul
mov
js
scas
dec
enter
xor
pop
lods
cs
lods
cli
mov
push
mov
jmp
js
ins
and
clc
fild
rcl
shrd
push
stc
bsr
dec
jmp
push
xor
mov
dec
outs
cli
dec
int
mov
movs
clc
cdq
les
pusha
push
movs
fnstenv
push
loop
fcomp
lds
rol
mov
mov
push
lods
sub
in
in
xor
fistp
(bad)
(bad)
push
enter
test
mov
adc
lds
gs
pushf
imul
mov
out
test
rcr
or
scas
or
(bad)
(bad)
call
push
and
fmul
dec
sbb
fistp
ds
dec
imul
jo
cli
sub
(bad)
(bad)
dec
cli
inc
pop
mov
lods
aad
fistp
scas
mov
pop
mov
jmp
call
push
sahf
cmp
(bad)
ds
pcmpeqb
not
pop
or
mov
push
xchg
into
add
movs
ficomp
add
sub
mov
mov
cmps
popf
adc
adc
(bad)
(bad)
call
(bad)
mov
dec
shr
imul
adc
(bad)
inc
and
xchg
sar
mov
out
cmp
sub
sub
(bad)
jae
pop
push
ret
(bad)
(bad)
(bad)
call
stos
scas
sti
iret
adc
into
push
push
pop
cmp
adc
xor
clc
push
(bad)
out
or
(bad)
(bad)
(bad)
jmp
push
jle
mov
cmp
sub
inc
add
xchg
popf
jle
scas
pop
pop
aas
and
in
or
adc
adc
sub
mov
sbb
or
dec
les
addr16
cmc
(bad)
ror
(bad)
call
mov
jmp
(bad)
test
sub
stos
inc
or
dec
das
shr
sahf
clc
ret
dec
mov
imul
push
cld
cmp
mov
sti
push
lock
jecxz
ror
in
rol
or
fbld
call
rol
sub
(bad)
inc
js
retf
pushf
shl
dec
inc
imul
dec
dec
mov
int
call
pop
(bad)
aaa
jbe
dec
ins
fwait
mov
cmp
(bad)
(bad)
(bad)
dec
or
jb
in
sbb
or
clc
cmps
xchg
es
iret
mov
repnz
push
imul
shr
cmc
scas
mov
imul
xchg
(bad)
xchg
sahf
(bad)
mov
dec
jmp
js
aad
mov
cld
sub
fdiv
repnz
adc
push
push
xor
sub
inc
ror
fnstcw
jae
xchg
(bad)
(bad)
(bad)
jg
repnz
call
or
in
nop
(bad)
call
add
pop
lock
nop
mov
xchg
icebp
sub
outs
mov
and
pop
mov
aam
and
add
xchg
mov
inc
inc
aam
mov
movs
jg
ja
pop
mov
push
xor
clc
stos
fwait
movs
(bad)
call
sti
inc
leave
pop
sbb
sub
neg
inc
sub
pop
(bad)
(bad)
mov
cwde
xlat
xchg
dec
sub
dec
mov
xor
fs
mov
push
or
shr
xchg
retf
dec
add
cli
inc
or
(bad)
(bad)
dec
push
jae
add
retf
icebp
ss
hlt
jno
dec
ror
mov
push
push
(bad)
(bad)
(bad)
inc
and
in
xor
ror
xor
aas
cs
jns
or
or
fcomip
adc
mov
pushf
sbb
les
cld
outs
mov
xor
jge
inc
fadd
cmp
sar
jg
pop
cmp
cmp
call
scas
test
xor
(bad)
jmp
mov
call
std
mov
or
or
mov
push
retf
push
cmp
mov
data16
neg
js
pop
dec
stc
enter
pop
xor
mov
xor
ret
dec
sbb
push
(bad)
dec
push
test
(bad)
mov
repz
cmp
pop
pop
mov
add
inc
adc
pop
cdq
in
jmp
pop
(bad)
(bad)
(bad)
jg
js
push
pop
adc
outs
jl
xchg
(bad)
mov
mov
pop
movs
cmp
and
scas
(bad)
push
xchg
int
xor
sub
mov
cmps
mov
movsx
aam
inc
bound
fldenv
and
mov
fist
sbb
sbb
test
add
push
loop
mov
addr16
movs
or
pop
mov
(bad)
(bad)
(bad)
jg
loop
mov
enter
cld
sbb
xlat
push
and
retf
add
and
test
cmc
(bad)
(bad)
(bad)
inc
iret
je
mov
sahf
pop
and
out
push
adc
std
inc
mov
std
mov
mov
inc
(bad)
(bad)
(bad)
inc
or
test
(bad)
sahf
mov
inc
call
fistp
jnp
addr16
mov
mov
inc
and
out
daa
hlt
sbb
push
dec
(bad)
ja
jp
sbb
pop
sbb
rcl
and
jns
shl
out
cli
add
push
push
cli
or
frstor
push
mov
(bad)
xor
call
jl
lds
fcomp
addr16
push
mov
ja
xchg
or
std
pop
sub
pop
icebp
push
cmp
daa
jmp
mov
in
out
fisubr
xchg
xor
(bad)
(bad)
(bad)
jmp
mov
dec
xchg
push
mov
jbe
lods
retf
jg
xor
push
in
inc
fild
sub
jns
outs
mov
(bad)
(bad)
(bad)
jmp
in
out
lds
dec
sbb
mov
call
test
jo
enter
jmp
mov
push
sub
sub
fcomip
adc
mov
mov
stos
dec
jb
push
xchg
push
and
xchg
dec
push
push
sub
sbb
xchg
arpl
or
rcl
ret
shl
and
pop
test
xor
inc
lahf
cmps
push
(bad)
adc
dec
not
into
jl
jg
inc
sbb
xchg
mov
cld
jle
and
mov
imul
inc
fst
cld
outs
pop
inc
movs
dec
std
or
fld
not
clc
xor
jecxz
and
add
xor
add
(bad)
(bad)
(bad)
dec
aam
cld
nop
ins
imul
jae
in
add
add
(bad)
mov
mov
iret
fdivr
mov
hlt
cmp
pop
inc
jl
and
sub
loopne
sub
test
cld
sbb
mov
push
add
cwde
inc
ret
mov
ja
pop
xchg
adc
cld
xor
mov
pushf
sub
add
(bad)
xor
xchg
sub
push
mov
dec
pop
mov
pop
cmp
xor
mov
push
add
(bad)
jecxz
inc
xchg
imul
jecxz
ror
push
mov
and
xchg
mov
jmp
inc
(bad)
in
(bad)
mov
push
dec
sbb
adc
adc
sub
mov
dec
cld
inc
cs
cmp
add
aad
iret
cmp
pop
mov
mov
dec
push
pop
xchg
push
mov
ds
push
outs
adc
shr
nop
mov
jle
push
(bad)
(bad)
(bad)
call
stos
test
outs
mov
cmp
sbb
(bad)
daa
dec
in
jl
dec
les
retf
cmp
das
call
jge
(bad)
(bad)
mov
fs
sbb
out
adc
or
fisttp
addr16
scas
jns
dec
and
(bad)
jmp
inc
inc
push
push
inc
stos
imul
and
fiadd
jne
test
sub
call
scas
cmp
sbb
dec
mov
push
xor
out
(bad)
(bad)
(bad)
jl
pop
(bad)
or
repz
dec
inc
jae
test
out
stos
mov
sti
sbb
shl
inc
adc
inc
das
sbb
adc
mov
std
div
fistp
pop
and
or
sub
mov
sub
jae
(bad)
(bad)
(bad)
jmp
into
xor
sbb
xor
sub
hlt
popf
ja
loopne
pusha
retf
xchg
or
push
in
mov
(bad)
(bad)
call
jne
ret
dec
fldenv
ins
adc
(bad)
std
sbb
fcomp
ds
lods
push
push
xor
xchg
call
(bad)
in
cmp
in
or
pop
mov
push
(bad)
push
ins
xor
cwde
mov
call
in
cmp
stos
or
jecxz
xlat
ror
ficomp
clc
ret
jmp
xchg
adc
jmp
inc
jp
push
lahf
lea
ins
inc
lods
adc
mov
(bad)
cmp
inc
inc
ret
cmp
pusha
add
pusha
push
mov
cmps
sub
dec
enter
or
jmp
icebp
dec
push
push
imul
ret
adc
clc
imul
pop
dec
ret
jmp
xchg
inc
(bad)
(bad)
inc
cld
pop
into
jp
dec
inc
sbb
or
or
mov
outs
cmps
cmp
xor
xchg
dec
sbb
lds
loop
pop
icebp
sub
push
cmp
ret
std
push
call
cld
(bad)
mov
push
shr
pop
lea
loopne
sub
aam
pop
lods
in
stos
pop
(bad)
cmp
call
out
sub
(bad)
fimul
and
dec
fimul
(bad)
jmp
fild
aad
mov
ins
pushf
fidivr
std
bound
test
cmps
in
das
and
mov
sbb
mov
dec
inc
dec
aaa
gs
lods
adc
push
aad
cmp
push
call
and
cmps
ret
loop
push
test
mov
or
adc
aaa
cld
dec
hlt
fisub
in
js
int
dec
repnz
and
or
hlt
mov
(bad)
fld
dec
xor
call
push
loop
les
aas
test
mov
fwait
push
imul
stc
loopne
add
inc
fnstcw
jmp
lds
mov
jne
mov
ret
call
inc
cmp
and
xchg
pop
push
jmp
adc
fwait
adc
jnp
push
sbb
fs
retf
jb
fldenv
mov
xchg
jle
into
(bad)
(bad)
(bad)
jmp
clc
xor
xchg
das
(bad)
out
outs
cmp
jg
or
jecxz
mov
call
das
repnz
mov
(bad)
(bad)
dec
imul
mov
test
idiv
mov
fadd
cld
dec
add
mov
inc
mov
dec
sub
movs
cmp
fisttp
imul
cld
sbb
(bad)
dec
cli
fadd
adc
dec
je
bound
sub
(bad)
(bad)
(bad)
jmp
ins
lock
push
or
lods
mov
xor
sub
test
or
int
dec
xchg
xchg
mov
lods
pop
cmp
cmp
(bad)
in
add
sbb
stc
mov
rcl
add
cs
add
or
(bad)
(bad)
inc
data16
push
outs
cmp
test
adc
jle
pushf
popa
sub
xlat
dec
xor
mov
ss
int3
push
pop
xor
movs
bound
rcl
pop
and
inc
inc
push
stos
push
call
dec
lods
mov
adc
add
push
cli
sbb
(bad)
(bad)
(bad)
jg
push
inc
pusha
mov
rol
mov
lds
sbb
cs
xchg
mov
inc
xchg
daa
out
xchg
rol
push
loop
aaa
jge
cmp
inc
(bad)
(bad)
out
dec
addr16
cmp
js
mov
push
(bad)
pop
loope
inc
sbb
ja
or
jnp
or
enter
mov
cmc
daa
js
jmp
call
xchg
add
xchg
popf
jno
data16
rcr
lock
(bad)
jle
ror
std
jmp
cld
dec
push
out
and
(bad)
push
shl
pushf
call
dec
inc
out
sub
cmp
into
or
daa
out
nop
out
sub
jg
push
sbb
mov
jbe
push
je
sub
js
(bad)
pop
out
jns
dec
(bad)
mov
push
dec
sub
ja
and
mov
jl
xchg
or
aad
cwde
push
ret
mov
(bad)
(bad)
(bad)
(bad)
aas
(bad)
and
fst
dec
cmp
mov
aas
or
xor
rcr
pushf
xchg
adc
push
cld
push
cld
xor
or
std
xor
rcl
dec
mov
push
cdq
(bad)
fisttp
imul
xlat
sbb
mov
add
jns
(bad)
(bad)
(bad)
jmp
sti
out
ds
and
ror
xchg
rcr
call
divps
cmp
(bad)
call
test
int
sub
cmp
call
jge
xlat
xchg
fwait
push
call
aam
jg
movs
repz
mov
aaa
cmps
enter
call
xchg
xor
stos
jp
xchg
push
cmp
adc
mov
fst
addr16
sbb
mov
(bad)
call
mov
cwde
dec
mov
hlt
xor
fsubr
add
push
in
xchg
sub
or
(bad)
(bad)
call
xchg
pop
pusha
(bad)
sbb
ror
(bad)
xlat
lahf
into
and
push
test
pop
jbe
(bad)
(bad)
jmp
sbb
aam
pop
cmps
movs
mov
xchg
sub
push
test
(bad)
dec
outs
sbb
ss
aam
push
mov
jo
outs
out
jmp
loop
adc
das
clc
sub
jmp
mov
(bad)
(bad)
jmp
inc
stos
adc
cmc
(bad)
fsub
push
inc
adc
and
jge
imul
(bad)
push
fistp
aam
sbb
je
out
(bad)
mov
popf
inc
pop
mov
sti
arpl
(bad)
call
mov
ror
mov
and
mov
adc
ins
jg
pop
loopne
outs
in
xchg
ret
out
sar
mov
sub
out
ret
(bad)
call
xor
and
(bad)
ds
inc
inc
mov
jle
sbb
push
pop
mov
(bad)
(bad)
call
aaa
push
sub
mov
or
lods
repnz
popf
call
(bad)
(bad)
out
test
sub
and
stos
mov
push
sub
pushf
pop
and
cmp
(bad)
(bad)
push
(bad)
xchg
push
test
stos
push
pop
xchg
or
push
add
das
add
mov
push
and
add
loopne
inc
shr
movs
leave
je
fwait
imul
out
(bad)
(bad)
fisttp
push
ss
loopne
popa
cld
ret
loope
push
bound
rol
jle
mov
loope
aaa
std
call
jg
imul
pushf
xlat
outs
movs
into
push
aaa
push
mov
(bad)
push
(bad)
outs
jecxz
(bad)
(bad)
call
imul
mov
mov
iret
push
bound
push
mov
(bad)
(bad)
(bad)
jmp
repz
xchg
repnz
xor
inc
retf
ins
add
les
xchg
loop
imul
(bad)
(bad)
push
push
xor
shr
mov
loopne
pop
mov
(bad)
call
rcr
push
or
jmp
idiv
div
hlt
mov
out
mov
imul
out
mov
std
ja
xor
imul
(bad)
(bad)
(bad)
jle
adc
hlt
or
stc
lea
ja
xor
js
xchg
dec
fmulp
clc
or
test
fsub
(bad)
inc
xor
in
les
aaa
scas
dec
rcl
sub
add
test
aaa
sbb
cmp
pusha
or
fiadd
test
repz
jg
mov
lahf
add
enter
gs
xchg
cmp
pop
out
retf
fdivr
mov
shl
retf
jle
jp
push
in
jge
popa
lock
lock
xchg
out
cmc
pop
add
pop
and
(bad)
(bad)
call
sahf
fidivr
dec
jno
mov
sbb
sbb
lds
or
imul
push
in
push
hlt
imul
or
sbb
jg
mov
les
jge
mov
dec
adc
movs
jle
fs
(bad)
sbb
mov
cmp
cmp
mov
sahf
(bad)
(bad)
(bad)
call
or
xor
sub
mov
gs
xchg
inc
ret
in
nop
ja
loopne
mov
(bad)
sbb
xchg
mov
lahf
jp
jno
jbe
loop
lods
clc
pushf
stc
cmp
call
mov
jecxz
sub
jnp
iret
xor
dec
mov
jbe
imul
push
les
cmp
bound
push
mov
aaa
ds
(bad)
(bad)
in
xchg
pop
jg
cmp
cmp
cmp
mov
jmp
and
sbb
mov
inc
pusha
dec
and
(bad)
call
mov
out
inc
mov
cmp
mov
inc
dec
or
lahf
(bad)
(bad)
(bad)
call
mov
data16
adc
dec
xlat
sbb
setge
outs
test
jecxz
adc
(bad)
fs
cmovle
dec
and
push
jg
push
mov
test
push
xchg
(bad)
(bad)
(bad)
call
leave
loope
dec
icebp
scas
dec
push
daa
ret
add
loope
popf
mov
stos
xor
sbb
out
push
dec
(bad)
mov
push
cwde
push
bound
xchg
(bad)
sub
cwde
mov
js
loopne
push
idiv
jg
add
cld
inc
push
pop
xor
sub
and
jg
(bad)
call
mov
jmp
sar
lock
mov
cli
out
mov
pop
mov
(bad)
(bad)
(bad)
(bad)
mov
scas
inc
jecxz
mov
push
pop
int3
push
dec
idiv
inc
mov
jp
fnstcw
or
mov
push
xchg
test
rol
add
add
retf
lods
dec
mov
js
jp
jl
(bad)
pop
pop
mov
push
daa
mov
scas
or
mov
and
mov
mov
lods
iret
fsub
(bad)
(bad)
(bad)
call
or
in
std
ds
or
push
mov
repz
ret
fwait
adc
xlat
fs
inc
jmp
lahf
js
iret
xchg
outs
sub
jmp
clc
test
daa
add
std
aas
aad
push
ins
aaa
push
add
test
jmp
sbb
(bad)
(bad)
(bad)
dec
push
jo
mov
pop
and
icebp
add
mov
xchg
jo
xor
(bad)
(bad)
call
mov
outs
cld
loope
movs
je
(bad)
arpl
jle
in
fsub
cmps
sbb
xchg
(bad)
(bad)
call
call
out
pop
retf
fcomp
add
push
jecxz
xor
cdq
push
cmp
das
retf
das
jns
push
sub
jp
push
push
dec
push
mov
inc
out
cmp
dec
shr
rol
push
stc
test
sub
push
mov
aaa
les
jmp
rcl
pop
mov
movs
faddp
xlat
push
or
xchg
and
xor
jmp
inc
mov
pushf
mov
pusha
mov
jmp
ins
inc
push
and
inc
int
sti
(bad)
out
sbb
in
jmp
(bad)
push
jp
mov
lock
or
push
pop
test
and
mov
fisttp
ret
int
adc
adc
pop
adc
test
sbb
adc
repnz
gs
pop
adc
fs
(bad)
call
jbe
sub
or
scas
sbb
outs
jmp
sahf
push
das
call
dec
bound
adc
and
loopne
cmp
sar
add
xchg
cmc
mov
fcom
jbe
(bad)
call
in
loop
lock
in
imul
mov
aas
cmp
loopne
inc
push
test
push
sbb
pop
hlt
inc
jle
in
das
shr
add
fnstcw
pop
fidivr
(bad)
(bad)
(bad)
jmp
ds
push
sub
xor
mov
rcr
out
jnp
fild
clc
(bad)
inc
dec
inc
jnp
pop
aas
leave
inc
gs
out
pushf
xchg
test
xor
(bad)
jmp
fs
loopne
rcr
jo
test
movs
clc
sbb
(bad)
(bad)
jmp
popf
aaa
push
(bad)
or
sub
and
lds
movs
push
out
mov
and
dec
lock
push
outs
cdq
adc
mov
fcomp
dec
jle
jmp
out
cmp
xchg
popa
les
aam
fs
push
jo
push
fldenv
sbb
cli
cmp
mov
rdtsc
ss
and
push
xchg
les
pop
push
or
pop
test
(bad)
jg
sti
mov
lea
pushf
xchg
adc
movzx
mov
pop
call
scas
lods
ret
or
adc
xchg
xchg
stos
daa
pop
or
cmp
lock
mov
(bad)
fld
sbb
shr
(bad)
shr
cmps
outs
ins
repnz
(bad)
jg
(bad)
sti
(bad)
(bad)
(bad)
jmp
(bad)
jmp
inc
mov
cli
ja
std
jmp
iret
dec
cmp
inc
rol
fild
xor
sub
icebp
fs
stos
outs
lods
cmp
aam
pop
jb
dec
push
loop
inc
xchg
mov
mov
(bad)
pop
shl
dec
into
xchg
push
movs
push
pop
add
fdivr
ins
inc
fsubr
adc
bound
push
mov
hlt
cmc
pop
cmp
test
scas
stos
clc
push
adc
cmp
pop
out
inc
(bad)
(bad)
mov
pop
sub
cmp
push
mov
or
fwait
lods
(bad)
(bad)
(bad)
jmp
mov
mov
rcl
neg
(bad)
jmp
ss
(bad)
(bad)
jmp
inc
xor
int
mov
daa
ss
ds
dec
cmps
in
lea
cdq
inc
dec
or
jmp
clc
xchg
jno
mov
add
pop
xlat
stos
mov
jb
dec
pop
aas
mov
xchg
(bad)
(bad)
(bad)
inc
jg
or
push
xchg
aam
xor
icebp
xor
pop
jnp
(bad)
(bad)
(bad)
mov
sbb
dec
cmp
sar
inc
inc
fld
iret
rcl
pop
cmp
dec
out
(bad)
test
test
mov
(bad)
repnz
pusha
imul
ja
ins
xchg
test
fldenv
xor
aaa
(bad)
(bad)
inc
popa
mov
sub
jmp
dec
repz
jns
pop
cmc
cmps
(bad)
jmp
xchg
(bad)
sbb
fcomp
xor
dec
lock
scas
int
fdivr
into
(bad)
movs
mov
int
sar
(bad)
inc
sbb
in
rcr
pop
lods
dec
mov
or
das
int
test
loopne
(bad)
(bad)
fisub
test
lea
test
lds
adc
jmp
mov
(bad)
(bad)
mov
mov
sbb
mov
(bad)
inc
jle
aad
dec
mov
stc
imul
xor
mov
test
push
loopne
ret
jg
jecxz
xor
mov
cmp
call
lahf
jg
push
sub
sbb
mov
cwde
lea
xlat
(bad)
jmp
xchg
pushf
push
cmp
pop
or
aad
clc
xchg
sbb
jb
or
cmp
xchg
or
bound
data16
sub
push
push
icebp
es
test
mov
loop
les
cmp
shl
jle
add
lods
xor
test
das
sbb
pusha
out
mov
jmp
(bad)
inc
les
loope
inc
in
push
sub
sbb
(bad)
in
sub
xor
arpl
add
jg
jmp
jno
xor
push
adc
add
jne
enter
adc
pop
mov
call
sub
arpl
pushf
mov
popf
cmp
pop
mov
xchg
lods
std
jg
test
mov
mov
cmp
cmc
clc
sti
jmp
push
sar
ror
ret
push
jmp
mov
inc
(bad)
(bad)
mov
or
in
test
ror
outs
in
popa
cs
(bad)
aas
shl
jecxz
(bad)
push
xchg
inc
adc
pop
in
xchg
popa
cld
jmp
movs
mov
ret
mov
xor
das
(bad)
(bad)
jg
jb
jnp
add
cwde
xor
push
sbb
test
push
jmp
fcomip
inc
sbb
ins
adc
dec
mov
jo
push
stc
(bad)
cmp
jmp
call
outs
imul
mov
jmp
sar
mov
out
inc
out
inc
scas
jae
ret
arpl
(bad)
push
mov
inc
xchg
daa
cmc
imul
and
push
dec
sub
scas
ins
xchg
aas
and
jecxz
pop
cmp
mov
ja
(bad)
push
fisttp
outs
xchg
xchg
sahf
mov
in
es
sub
jg
(bad)
jmp
mov
retf
std
fiadd
mov
pop
dec
test
mov
stc
int
cwde
mov
and
cld
mov
call
std
mov
(bad)
jg
(bad)
sbb
pop
out
adc
inc
jmp
imul
ret
mov
jg
(bad)
jmp
aam
push
sahf
imul
mov
pop
add
sar
(bad)
(bad)
dec
mov
out
shl
imul
retf
int3
jnp
jnp
push
mov
aad
outs
adc
mov
push
xchg
je
aad
inc
adc
ror
jo
(bad)
(bad)
dec
jne
push
inc
mov
cmp
sub
sbb
add
test
push
std
xchg
mov
dec
aaa
retf
or
and
jg
mov
mov
sub
into
call
xchg
aas
or
stos
retf
jmp
(bad)
pushf
xor
retf
xchg
add
lods
loopne
add
jb
cmp
outs
mov
movs
cmps
and
(bad)
inc
mov
xor
pop
dec
pop
cdq
dec
icebp
sub
sub
sbb
jg
(bad)
(bad)
inc
push
add
inc
cmps
xchg
or
ins
mov
shl
mov
mov
cmp
lea
pusha
adc
xlat
jo
pop
sbb
push
mov
mov
cld
jmp
add
dec
add
(bad)
mov
inc
aam
lods
jno
(bad)
das
mov
cmc
push
stos
mov
(bad)
jg
mov
cwde
(bad)
out
push
cli
sbb
loop
xchg
call
xor
or
fwait
pop
lahf
pop
mov
jb
jb
mov
rcl
lock
jbe
or
test
out
push
push
xor
lods
dec
ins
xchg
jb
call
call
sub
arpl
push
mov
inc
mov
fistp
sub
dec
xchg
scas
shr
sub
mov
jge
xor
mov
(bad)
(bad)
(bad)
jg
dec
adc
rol
(bad)
or
mov
xor
jmp
aad
mov
loop
add
push
ficom
sub
dec
(bad)
mov
jg
and
xchg
adc
dec
jnp
push
repnz
scas
(bad)
cdq
dec
out
cs
(bad)
(bad)
inc
lods
dec
mov
dec
lahf
fidivr
push
add
aad
test
aaa
ret
push
xchg
popa
enter
repnz
adc
jecxz
adc
(bad)
mov
fcomp
nop
push
inc
je
ins
repnz
popf
pop
movs
cdq
sub
mov
aas
sbb
sub
lss
call
dec
enter
mov
push
or
into
movs
jl
clc
dec
xor
xchg
mov
mov
int
jmp
mov
jle
popa
(bad)
and
sahf
test
(bad)
mov
hlt
imul
pop
imul
push
pop
pop
inc
les
xchg
jbe
retf
push
xchg
jl
xchg
(bad)
(bad)
dec
jg
push
leave
mov
mov
adc
pop
mov
pop
repz
mov
(bad)
(bad)
(bad)
dec
sbb
je
mov
adc
jecxz
jne
cs
test
imul
(bad)
(bad)
mov
jbe
xor
xchg
xor
push
dec
mov
out
cmp
aas
sbb
ror
jg
shr
dec
inc
(bad)
cmc
arpl
sub
cmp
and
fs
jmp
mov
clc
cmp
xor
dec
movlps
pushf
add
push
fwait
mov
pusha
call
pushf
push
call
xor
mov
add
loope
xchg
dec
adc
ss
lods
icebp
addr16
dec
fld
movs
(bad)
(bad)
sub
(bad)
jg
ror
or
jo
jo
scas
cmp
or
xchg
cmps
imul
add
sbb
mov
push
es
xchg
in
stos
inc
inc
inc
fcmovne
mov
(bad)
fld
paddd
fistp
das
and
push
clc
and
pop
dec
jmp
jle
sub
rcl
cmps
xchg
lahf
in
popa
pusha
adc
lods
lods
pop
cs
call
aam
(bad)
pop
xchg
push
movs
std
sbb
(bad)
(bad)
call
test
cmp
xchg
pop
add
adc
add
pop
ds
xchg
sbb
cmp
loope
mov
cs
lods
mov
rcl
sub
push
(bad)
or
xor
enter
add
mov
loop
sti
inc
std
mov
jmp
xchg
dec
sub
xchg
and
xlat
movs
lods
inc
sbb
mov
dec
jbe
and
test
mov
dec
mov
push
ins
das
cvttps2pi
and
ja
add
inc
sub
int
xchg
rol
add
inc
out
and
dec
daa
mov
(bad)
fldenv
mov
(bad)
xor
inc
dec
add
(bad)
mov
add
push
cwde
dec
(bad)
mov
in
cdq
adc
test
cmp
ins
jbe
pop
jg
scas
jb
loope
(bad)
(bad)
jmp
sub
inc
rcr
(bad)
jle
mov
outs
jmp
xor
in
das
fdivr
cmc
lods
jg
call
fsubr
sub
nop
xor
mov
out
dec
mov
out
in
outs
(bad)
(bad)
cmp
imul
out
in
clc
mov
fistp
(bad)
js
iret
cmp
fs
test
fs
mov
jnp
pop
mov
(bad)
jmp
mov
fwait
jae
jns
pushf
and
stc
(bad)
jl
mov
into
rcr
(bad)
(bad)
inc
call
pop
or
rcr
sub
arpl
mov
aaa
std
lods
movs
lds
test
inc
aad
fwait
aam
push
call
mov
(bad)
dec
jecxz
mov
loop
inc
pusha
fnstsw
cwde
xchg
push
inc
dec
sar
(bad)
(bad)
push
in
jne
ficom
xchg
sub
sti
add
jge
sti
mov
and
adc
cmc
hlt
(bad)
(bad)
push
sti
jno
jmp
inc
int3
(bad)
sar
int3
adc
add
pop
sbb
in
cmp
(bad)
call
pop
adc
test
cmp
ins
pop
push
mov
mov
mov
mov
cmp
pop
loopne
xchg
lods
push
xchg
je
js
cmp
and
jnp
cwde
pop
mov
inc
pop
push
shl
and
aas
cmp
js
jae
and
jp
push
jo
out
jmp
mov
sbb
dec
(bad)
idiv
lea
call
jg
setb
call
xchg
into
and
or
add
aaa
inc
out
push
cld
test
pop
and
(bad)
(bad)
(bad)
jmp
jno
jo
(bad)
(bad)
cmp
jg
mov
retf
dec
jns
mov
movs
pop
adc
push
inc
neg
sar
cmp
xchg
(bad)
clc
cmps
aas
mov
outs
nop
es
pop
(bad)
inc
sub
out
pop
jno
cwde
jno
xchg
xor
(bad)
(bad)
fist
repnz
mov
shl
ret
stos
loop
mov
aas
ds
rcr
imul
clc
mov
mov
(bad)
(bad)
(bad)
inc
jno
lock
out
add
jge
loopne
sbb
sahf
push
fistp
mov
mov
scas
(bad)
mov
adc
mov
retf
(bad)
cli
and
push
mov
pusha
push
and
jmp
or
sub
sbb
cmc
pop
sub
jecxz
std
sub
mov
jmp
inc
fadd
aam
mul
xchg
test
cmp
shl
jmp
out
pop
ret
test
sti
outs
pop
push
bswap
pusha
dec
mov
test
mov
sub
test
and
ret
mov
(bad)
sub
(bad)
(bad)
push
add
mov
mov
movs
movs
sbb
ins
mov
mov
call
icebp
rcr
inc
cmp
bound
fild
pop
pop
int3
int
adc
pop
push
lea
push
outs
pop
jmp
lock
adc
test
cs
jae
mov
loop
adc
(bad)
(bad)
inc
out
shl
push
lods
rcl
xchg
jns
jp
and
inc
add
push
xlat
in
mov
mov
mov
shl
cmp
das
sub
inc
nop
repz
std
mov
push
les
js
(bad)
jne
lock
rol
setg
mov
test
inc
aad
retf
mov
nop
jecxz
mov
rcr
call
fcomp
mov
movs
bound
mov
aad
(bad)
out
mov
bound
(bad)
and
imul
clc
(bad)
(bad)
call
das
loop
and
les
fisttp
push
fwait
push
(bad)
in
lock
and
inc
rcr
mov
call
fsub
mov
add
ja
clc
lea
lods
jecxz
stos
(bad)
pushf
or
mov
(bad)
push
sbb
mov
outs
inc
xchg
xchg
cld
sub
mov
xlat
jo
aas
adc
(bad)
(bad)
(bad)
(bad)
out
sub
(bad)
xchg
out
push
lds
jmp
inc
(bad)
mov
ins
push
out
or
test
movs
inc
(bad)
push
cmps
(bad)
push
daa
mov
hlt
cmps
test
lods
shl
cmp
cmp
dec
jecxz
pop
sub
inc
mov
xor
lahf
test
(bad)
dec
pop
mov
int3
(bad)
scas
(bad)
fs
or
ss
sbb
(bad)
fcomip
das
pushf
(bad)
mov
out
push
mov
xlat
(bad)
repnz
mov
dec
std
stc
push
loope
jl
nop
sub
das
(bad)
adc
(bad)
call
mov
xor
fnclex
enter
(bad)
fcomip
popf
call
popa
fidivr
fprem1
out
es
imul
pop
hlt
(bad)
dec
jae
and
mov
xchg
or
push
pop
mov
push
(bad)
push
std
mov
jmp
sub
dec
fiadd
or
adc
push
add
test
xchg
mov
sub
clc
pushf
jmp
inc
call
and
mov
lea
push
aad
pop
ja
xchg
jmp
pushf
adc
sbb
sbb
jnp
or
jl
sar
cli
test
push
add
add
pop
sub
imul
shr
(bad)
(bad)
(bad)
mov
mov
(bad)
std
add
mov
hlt
jmp
push
push
test
mov
out
in
push
(bad)
(bad)
mov
jmp
data16
inc
ret
push
push
jge
adc
(bad)
out
lods
(bad)
push
sbb
fsub
or
ins
jb
aad
mov
icebp
(bad)
push
rol
sbb
gs
(bad)
jmp
(bad)
jg
adc
ins
aaa
repz
or
and
cli
(bad)
(bad)
jmp
(bad)
fld
mov
adc
ss
sub
scas
jns
aaa
ds
(bad)
push
scas
mov
inc
sub
cmp
add
mov
es
movs
lock
cmp
sub
mov
inc
push
sbb
neg
test
ja
add
les
(bad)
(bad)
(bad)
(bad)
fcom
(bad)
call
fcom
inc
or
jbe
jno
fldenv
pop
push
inc
mov
push
cmp
(bad)
(bad)
dec
pop
mov
inc
fstp
gs
mov
adc
mov
ror
push
clc
push
jnp
and
(bad)
(bad)
(bad)
inc
(bad)
push
sti
xor
cmp
inc
test
or
clc
or
or
push
push
adc
adc
stos
enter
(bad)
jmp
or
mov
adc
div
call
inc
lods
dec
and
sar
stos
push
cld
and
dec
xor
bound
sbb
fnstenv
push
adc
(bad)
(bad)
inc
xor
cli
mov
repz
pushf
xchg
jle
ins
mov
xchg
and
sahf
(bad)
push
sub
pop
mov
inc
jne
fdivr
js
(bad)
(bad)
jg
mov
mov
mov
cmp
cmps
nop
or
mov
and
jl
dec
(bad)
push
pop
adc
mov
adc
test
dec
mov
(bad)
cli
mov
lods
cmp
pop
jns
call
cld
add
(bad)
jg
and
retf
pop
or
add
adc
(bad)
(bad)
inc
or
push
out
cmp
in
inc
dec
pop
xor
add
mov
cli
push
(bad)
(bad)
(bad)
(bad)
in
ins
bound
adc
leave
xchg
jg
fld
popf
inc
xor
test
jmp
mov
(bad)
(bad)
jmp
inc
test
mov
mov
pop
xor
ja
adc
jne
and
out
(bad)
(bad)
(bad)
(bad)
push
ins
add
cmp
jo
xor
cmp
push
popa
mov
mov
cmc
sbb
jae
(bad)
jmp
xor
xchg
daa
out
lock
mov
aad
xrelease
xchg
jne
cmc
loope
adc
xchg
push
or
mov
pop
mov
retf
inc
test
(bad)
(bad)
jg
aam
sub
mov
or
cmp
fwait
ins
adc
test
or
(bad)
(bad)
call
out
xor
int
adc
xchg
pop
iret
mov
(bad)
cmp
push
clc
pusha
cmp
pushf
stc
jle
add
push
dec
jge
repz
(bad)
(bad)
(bad)
call
inc
ins
pusha
mov
in
arpl
nop
cmp
stc
add
cmp
push
sub
(bad)
(bad)
jp
push
ja
fmul
and
clc
adc
xchg
stos
(bad)
adc
mov
cli
jmp
push
pop
push
xor
cmp
xor
ss
mov
add
push
xor
das
nop
inc
loopne
lock
movs
(bad)
mov
jmp
and
jmp
jne
lea
and
cmp
inc
cld
cmp
mov
push
aam
push
and
cs
(bad)
fild
mov
xchg
test
mov
das
cli
call
addr16
repz
stos
add
cs
cmps
cmp
inc
pop
stos
inc
dec
mov
(bad)
call
push
cmp
pop
aad
cmp
out
mov
xchg
lods
out
xchg
(bad)
(bad)
push
jo
inc
scas
clc
and
(bad)
aad
rcl
sub
clc
sbb
les
add
and
iret
inc
xor
(bad)
(bad)
dec
and
gs
ins
aam
jno
xor
or
and
xchg
pop
pop
in
sbb
inc
loope
iret
std
shl
das
pop
push
rdpmc
je
fiadd
(bad)
(bad)
(bad)
inc
xchg
pop
jne
xor
aad
inc
in
sbb
test
ret
mov
sbb
push
addr16
xchg
dec
lea
(bad)
call
push
mov
push
enter
shl
in
sti
sub
dec
inc
xor
(bad)
(bad)
(bad)
inc
adc
mov
lock
mov
mov
or
jmp
inc
rcl
pop
push
mov
or
adc
jmp
inc
push
add
(bad)
(bad)
(bad)
jmp
fnstsw
fistp
sbb
mov
jae
mov
mov
inc
dec
hlt
(bad)
push
test
jg
jmp
and
data16
push
dec
jecxz
adc
or
sbb
cld
xchg
enter
cli
mov
mov
jae
mov
(bad)
(bad)
cmp
cmps
push
jg
pushf
jmp
mov
dec
cld
mov
and
sbb
fs
lds
jo
or
(bad)
(bad)
out
cli
cmc
jmp
test
mov
push
push
not
(bad)
call
push
hlt
xor
push
inc
dec
in
ja
cli
xchg
inc
push
repz
ficom
pop
push
push
sbb
call
std
mov
sbb
cmp
inc
cmp
out
jbe
sti
sub
jmp
and
hlt
cmps
es
push
adc
mov
mov
std
ja
daa
cli
aaa
mov
clc
inc
and
pushf
mov
call
inc
test
inc
or
call
out
out
ja
add
add
pop
inc
mov
in
cmp
fwait
pop
lock
repnz
loope
inc
xchg
jge
adc
xchg
xor
fst
call
aaa
pop
out
pop
xor
addr16
test
iret
push
rcl
dec
(bad)
push
and
cmp
sub
cli
ss
dec
fsub
idiv
sub
jg
pop
xchg
jg
pusha
(bad)
(bad)
(bad)
jg
lahf
adc
mov
add
xor
sar
xchg
cmp
xchg
sti
xchg
inc
pop
jnp
cmp
imul
jnp
xlat
push
xchg
xchg
(bad)
(bad)
dec
not
femms
stc
pushf
mov
hlt
xchg
sbb
add
xor
xchg
movs
inc
mov
icebp
sbb
xor
or
push
jae
inc
add
aad
inc
push
adc
mov
and
cmp
stc
xor
mov
and
(bad)
cmps
std
sub
and
pop
dec
fmul
cmp
add
popw
lods
pop
shl
jmp
int3
cdq
popa
push
mov
data16
(bad)
inc
stos
sbb
mov
xor
mov
push
inc
and
(bad)
(bad)
fnstsw
jno
inc
in
sbb
and
xor
and
xor
xor
pop
push
leave
sub
(bad)
(bad)
jmp
sbb
push
loop
movs
mov
and
rcl
mov
dec
(bad)
dec
adc
and
repz
lock
sub
push
mov
rep
(bad)
(bad)
jg
adc
jbe
add
es
ror
adc
movs
imul
jmp
div
add
jg
inc
cmps
jns
ds
push
jle
test
addr16
mov
hlt
dec
xchg
inc
das
ins
sbb
dec
test
add
pop
and
(bad)
(bad)
inc
inc
xlat
aas
push
push
xor
jno
add
lea
ins
imul
jg
(bad)
mov
or
mov
xor
shl
out
dec
inc
inc
shr
push
(bad)
inc
pop
cmp
push
test
sbb
leave
mov
jns
addr16
and
clc
mov
(bad)
mov
inc
cs
mov
inc
pop
cmp
inc
jecxz
lds
adc
(bad)
(bad)
(bad)
jmp
int3
push
xchg
stos
repz
popf
cli
cmp
fmulp
ins
inc
cmp
add
js
dec
pop
jg
(bad)
(bad)
inc
popa
imul
adc
add
std
pop
ja
movs
or
fdivr
(bad)
(bad)
dec
aaa
sar
fild
push
sti
inc
ror
das
inc
jg
jne
pusha
rol
mov
(bad)
(bad)
(bad)
fstp
cs
sub
xor
ds
in
lea
(bad)
(bad)
cmp
sbb
call
in
cmp
push
repnz
or
outs
fld
(bad)
(bad)
(bad)
call
xor
jmp
in
not
lea
pop
sbb
jnp
push
ror
scas
cli
(bad)
dec
cmps
in
sbb
mov
xor
out
popa
stos
push
push
mov
cmp
inc
and
jecxz
pushf
data16
inc
jle
xchg
adc
std
xchg
mov
xor
sbb
lods
pop
push
adc
and
mov
mov
dec
cmp
xor
mov
dec
inc
ret
int
dec
add
jb
je
cli
adc
popa
call
and
adc
(bad)
(bad)
(bad)
inc
jne
add
pop
jg
aad
cmc
inc
xor
sub
popf
std
sahf
test
fdivrp
jmp
(bad)
xchg
lahf
xchg
sub
mov
cmp
jno
push
sub
test
pop
add
and
rol
fdivr
jecxz
(bad)
jg
ja
fst
or
cmp
jmp
iret
std
mov
inc
ds
(bad)
(bad)
(bad)
mov
jge
xchg
loop
mov
pop
xchg
sbb
ss
and
test
(bad)
(bad)
jmp
sbb
xor
push
loopne
mov
aaa
popa
adc
les
inc
fndisi(8087
push
(bad)
(bad)
call
mov
push
push
xchg
jg
cmp
dec
jle
mov
xchg
pop
pop
mov
(bad)
(bad)
jmp
inc
inc
push
ficom
jne
push
daa
test
sbb
inc
pop
dec
jp
mov
mov
add
jecxz
or
adc
fxch
and
shr
jo
cmc
mov
xlat
(bad)
(bad)
(bad)
std
repz
xchg
inc
mov
dec
fst
cmc
sbb
ins
jle
push
cld
(bad)
(bad)
jg
xor
jmp
rcl
mov
loopne
jp
test
mov
mov
(bad)
inc
mov
into
rol
push
movs
inc
popf
push
mov
stos
retf
jl
inc
jnp
gs
jecxz
xor
lds
repnz
cmp
popa
cmp
inc
or
cmp
add
(bad)
(bad)
inc
lea
fst
int
adc
add
sub
mov
mov
call
jg
xchg
repz
xchg
push
xor
push
pusha
shl
xor
push
xchg
mov
jg
jmp
pop
les
(bad)
popf
sub
push
jmp
pop
into
lods
(bad)
push
jae
(bad)
(bad)
jg
mov
pop
sbb
inc
dec
test
shl
mov
cmp
rcr
pop
pop
xor
mov
aas
aam
mov
push
inc
xchg
popf
pop
mov
sti
mov
neg
xor
and
push
hlt
aaa
sar
pop
fcmovu
fs
pop
mov
jbe
outs
cmp
(bad)
(bad)
dec
mov
mov
jmp
ss
std
stos
push
fwait
push
lds
dec
iret
sti
movs
leave
out
cs
aam
call
or
xchg
push
outs
mov
std
call
rcr
push
nop
mov
sub
(bad)
cmps
scas
dec
mov
movs
inc
push
jecxz
cmp
test
mov
jne
push
div
nop
cmp
jmp
pop
sub
mov
and
ret
enter
test
inc
jns
xor
out
movs
(bad)
(bad)
jmp
jp
ds
popf
ss
int3
cmps
jecxz
mov
xchg
mov
pop
jnp
cmp
cli
call
xchg
push
je
ins
and
repz
cmp
sub
nop
ret
ret
mov
stos
push
and
sub
or
mov
(bad)
mov
xor
(bad)
stos
cmp
mov
stos
push
loopne
push
outs
not
dec
or
jne
adc
test
pop
cmp
fldenv
add
movs
or
mov
popa
cmp
popf
iret
ins
dec
fist
retf
jnp
push
inc
mov
jae
(bad)
(bad)
inc
repz
inc
jmp
xchg
push
movs
(bad)
inc
jnp
in
int3
inc
inc
(bad)
(bad)
xlat
fiadd
(bad)
(bad)
push
mov
jl
ss
or
mov
sahf
add
(bad)
(bad)
inc
popf
mov
loope
xchg
sub
jno
outs
inc
adc
lock
std
push
and
(bad)
call
pop
xchg
cmp
loop
(bad)
push
je
pop
xchg
cmp
adc
push
retf
sbb
inc
cmp
jge
std
cmp
ins
scas
repz
aam
cli
add
or
(bad)
call
(bad)
stos
enter
das
fdiv
mov
shr
(bad)
call
pop
xor
icebp
(bad)
hlt
call
outs
jbe
mov
jmp
xchg
(bad)
(bad)
inc
push
pop
mov
aad
in
pop
ds
mov
xchg
mov
lock
(bad)
push
mov
mov
push
or
sar
xor
cmp
dec
cli
xor
hlt
mov
retf
xor
push
gs
fadd
stos
repz
scas
test
dec
push
test
(bad)
(bad)
jmp
fadd
arpl
inc
call
fcmovnu
(bad)
push
sub
xor
icebp
dec
xchg
in
add
jmp
(bad)
(bad)
inc
mov
dec
dec
push
sub
jmp
gs
or
lock
popa
imul
icebp
fdivr
(bad)
(bad)
(bad)
ds
addr16
int
(bad)
lock
scas
test
cmp
sahf
xchg
ja
xor
jmp
mov
dec
cmp
fimul
push
fcom
sbb
stc
push
dec
outs
(bad)
(bad)
(bad)
push
or
daa
enter
xchg
xor
xchg
jo
cmp
pop
scas
dec
test
test
mov
(bad)
(bad)
(bad)
jmp
jbe
movnti
jmp
cdq
mov
mov
pop
(bad)
push
inc
mov
xchg
adc
cmp
(bad)
jmp
mov
fnstenv
scas
mov
jnp
mov
sub
cmp
pushf
xchg
aaa
inc
push
ja
add
int3
das
cli
push
inc
js
repz
fstp
add
xchg
mov
adc
pop
call
jmp
dec
call
jmp
and
mov
pushf
jne
addr16
or
push
inc
cmp
mov
add
jae
xor
inc
into
adc
call
out
sbb
(bad)
(bad)
(bad)
jmp
xchg
sar
jle
push
je
(bad)
mov
fisubr
sub
popa
add
pop
adc
clc
push
(bad)
(bad)
push
dec
call
movs
jne
xchg
jp
xor
cmp
cmp
jmp
test
aaa
imul
fld
pop
sub
enter
(bad)
dec
movs
pushf
jnp
test
xor
cmp
xor
pop
push
gs
retf
shr
mov
sar
sbb
xor
mov
out
pop
or
(bad)
(bad)
(bad)
push
push
adc
rol
hlt
imul
fdivr
mov
nop
push
pop
movs
mov
pop
jmp
sub
push
jp
jg
add
popf
inc
and
cs
jb
pop
cmp
outs
adc
pushf
nop
xchg
ins
aad
mov
ins
pop
and
(bad)
(bad)
call
xchg
and
push
mov
push
fnstenv
cmps
and
arpl
cmp
(bad)
(bad)
(bad)
(bad)
clc
mov
inc
lods
and
addr16
out
xchg
inc
xor
arpl
cmp
int
pop
dec
mov
jae
jns
sbb
ret
das
mov
test
push
push
jecxz
(bad)
jmp
(bad)
push
(bad)
clc
jge
jne
sti
icebp
cmps
jmp
movs
and
inc
adc
(bad)
(bad)
inc
test
lea
inc
xchg
cmp
pop
push
and
dec
jmp
push
cmp
cs
(bad)
(bad)
mov
jecxz
push
push
popf
xor
push
or
jbe
xor
inc
fcom
shl
(bad)
(bad)
(bad)
cmp
cmp
dec
hlt
pusha
xor
or
mov
fcom
fcos
(bad)
mov
out
lds
inc
push
xor
cmc
jo
das
fwait
mov
and
(bad)
(bad)
jmp
pop
jno
dec
push
cdq
jmp
jns
add
push
push
leave
lock
fsub
neg
adc
pop
icebp
(bad)
std
cmc
cli
aas
or
push
ds
pop
mov
mov
xor
jns
or
jmp
ret
fld
in
jmp
add
mov
aas
jle
adc
dec
jg
add
js
shr
cld
jmp
shl
or
sub
sub
sub
fadd
sbb
js
loop
jmp
cmp
dec
sbb
icebp
ds
pop
ins
sbb
ds
mov
jne
(bad)
(bad)
(bad)
jmp
scas
sar
mov
push
das
push
inc
push
mov
cmp
mov
mov
adc
or
xchg
cmp
xor
sub
scas
inc
mov
gs
(bad)
push
dec
fwait
retf
inc
dec
loope
call
and
jecxz
pop
aad
lods
out
(bad)
pop
jae
(bad)
jmp
cmp
pop
push
xchg
pop
mov
xchg
and
mov
stc
(bad)
cmp
(bad)
dec
dec
cmp
mov
imul
test
(bad)
(bad)
(bad)
inc
xor
pop
loope
push
sub
sti
pop
inc
in
cmc
arpl
add
inc
add
xor
sti
gs
gs
sub
imul
data16
mov
(bad)
scas
adc
and
addr16
int
(bad)
(bad)
(bad)
push
mov
pushf
inc
cmp
shr
jo
gs
cmc
inc
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
shl
pop
stos
cld
cmp
inc
sbb
dec
ret
js
sub
movs
loop
add
(bad)
call
mov
test
std
dec
xor
mov
push
lock
jg
adc
(bad)
inc
inc
jne
pushf
push
arpl
hlt
das
adc
ja
mov
cdq
stc
sub
mov
(bad)
cli
xchg
mov
adc
inc
fcomp
mov
fnstenv
call
push
cli
pop
jae
fisubr
fild
cmc
mov
fstp
jecxz
cmps
ret
jge
(bad)
dec
cmp
xor
retf
popf
mov
cmps
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
outs
je
call
scas
mov
sub
xor
inc
outs
clc
(bad)
dec
or
fwait
jmp
jnp
cwde
test
inc
ja
cmp
xchg
repz
call
int3
cmc
int
xor
ja
inc
jo
mov
(bad)
jmp
cdq
(bad)
xchg
test
inc
adc
cmc
push
ret
dec
popa
jp
mov
inc
shl
(bad)
(bad)
(bad)
fstp
pop
(bad)
push
sub
cmps
fstp
test
bound
out
add
push
(bad)
(bad)
(bad)
push
sbb
fdiv
movs
mov
xchg
enter
add
mov
(bad)
(bad)
(bad)
call
dec
fldenv
adc
xchg
sbb
push
loop
cmps
mov
mov
cmp
adc
add
ja
sar
aaa
data16
call
jno
cmc
test
dec
mov
cs
gs
mov
adc
xlat
inc
cmp
push
adc
mov
xor
test
sahf
jecxz
mov
ret
jecxz
cmp
rol
pop
push
(bad)
ss
dec
push
push
sti
mov
jmp
sbb
and
sbb
cmp
mov
(bad)
jmp
cld
retf
lods
mov
cmp
push
js
std
cmp
lea
outs
mov
(bad)
(bad)
(bad)
dec
dec
popa
movs
mov
out
sahf
pop
lods
adc
push
imul
cmp
mov
clc
(bad)
call
pop
inc
pop
mov
hlt
lock
mov
mov
cmp
inc
dec
int
xor
jno
cmp
cmp
jo
cmp
test
(bad)
push
cld
jmp
cmp
cmova
arpl
sbb
dec
or
push
and
ja
(bad)
jecxz
xchg
outs
push
test
push
fnstcw
jns
sub
pop
cdq
add
push
(bad)
xchg
xchg
xor
aaa
mov
cmp
and
test
or
fdivrp
push
mov
and
sete
in
xchg
jae
sbb
mov
push
jne
cmp
(bad)
cli
sbb
push
dec
jo
sar
mov
dec
test
jg
mov
push
rcr
sub
(bad)
(bad)
(bad)
call
jle
mov
mov
mov
or
cmp
fwait
sub
sbb
in
dec
arpl
mov
movs
cwde
sub
mov
jge
cmp
push
inc
push
push
fwait
adc
sahf
(bad)
(bad)
(bad)
call
dec
mov
(bad)
stc
pop
test
xchg
std
mov
sub
inc
ret
xor
scas
das
or
(bad)
inc
fiadd
xchg
or
xchg
xchg
adc
push
or
gs
(bad)
mov
sbb
ds
fadd
push
shl
mov
fnstcw
idiv
(bad)
push
or
jl
xor
jecxz
xor
es
mul
ja
shl
mov
push
jecxz
inc
(bad)
fcomip
add
push
and
or
cmp
cld
loop
pop
mov
jge
(bad)
and
or
jmp
add
test
pop
push
sub
std
popa
xchg
cs
das
sar
and
inc
cmp
ss
movs
fwait
mov
jmp
or
(bad)
(bad)
(bad)
jmp
test
xchg
sbb
inc
and
icebp
sub
(bad)
(bad)
(bad)
dec
dec
movs
iret
repz
mov
jne
sub
or
xchg
cmp
repz
jno
adc
adc
fcomip
(bad)
jmp
leave
call
out
xor
push
pop
pop
es
and
(bad)
(bad)
call
push
les
inc
arpl
call
xor
scas
push
jmp
add
out
fstp
cmp
shr
xchg
or
jne
xchg
not
leave
push
ds
(bad)
(bad)
inc
inc
idiv
inc
jnp
cmp
mov
or
nop
and
mov
sahf
test
(bad)
(bad)
(bad)
jmp
dec
hlt
push
xor
daa
out
jmp
or
xor
das
sar
inc
push
jns
cmc
mov
arpl
fistp
sub
xchg
add
out
(bad)
(bad)
(bad)
call
or
sub
cmp
hlt
test
test
imul
and
jbe
dec
mov
(bad)
(bad)
(bad)
call
jbe
pop
test
inc
jb
pop
adc
push
and
scas
rcl
inc
push
xor
in
inc
cmp
mov
cmp
cs
(bad)
clc
fs
mov
xchg
(bad)
(bad)
(bad)
inc
repz
test
and
sti
ss
and
mov
mov
(bad)
push
push
into
test
fild
mov
pop
cli
cmp
inc
pop
rol
dec
(bad)
jns
rcr
test
js
fpatan
mov
jbe
xchg
xor
(bad)
push
pop
arpl
(bad)
(bad)
jmp
movs
cmp
mov
jg
and
clc
dec
xor
in
mov
add
add
(bad)
(bad)
cmp
fst
sub
pop
or
inc
dec
shl
je
jne
mov
(bad)
(bad)
call
es
ja
add
inc
sbb
sahf
imul
inc
scas
push
rcr
mov
cmp
(bad)
call
sar
dec
ret
xlat
sahf
xrelease
xlat
sar
lahf
call
jnp
push
pop
push
add
stos
mov
test
xor
scas
jecxz
(bad)
je
dec
fcomip
pop
loopne
nop
cdq
dec
xchg
or
adc
add
(bad)
(bad)
jmp
sub
sbb
or
cmp
xor
inc
jne
je
sub
inc
adc
int
inc
jne
inc
sub
(bad)
(bad)
jmp
xor
push
outs
lods
jne
inc
and
and
dec
jbe
test
pop
inc
adc
jmp
lahf
(bad)
jmp
cmp
fild
(bad)
(bad)
mov
cmp
pusha
cwde
adc
stos
mov
iret
and
imul
pop
les
(bad)
call
std
stos
cmp
push
(bad)
pop
das
and
cmps
dec
mov
ss
int3
dec
mov
jbe
or
and
jmp
mov
sbb
jo
ins
adc
imul
jne
(bad)
(bad)
(bad)
push
sub
loope
test
push
js
dec
(bad)
jns
xor
hlt
out
rol
mov
(bad)
(bad)
push
pop
leave
call
iret
jecxz
popa
je
push
test
ror
jne
(bad)
ins
inc
jmp
clc
inc
aas
dec
(bad)
cwde
in
pop
or
pop
fdiv
sub
in
(bad)
(bad)
(bad)
inc
cmp
and
jns
ins
hlt
jb
rcl
shr
hlt
loopne
stos
rcr
outs
xchg
mov
adc
mov
rol
pop
repnz
mov
(bad)
(bad)
dec
and
out
ret
(bad)
jecxz
mov
jae
mov
in
adc
hlt
sbb
jnp
idiv
inc
scas
sub
dec
mov
in
cs
pusha
push
(bad)
lea
mov
retf
(bad)
(bad)
(bad)
dec
sub
sbb
das
push
cmp
xchg
or
pop
and
cmc
in
(bad)
(bad)
call
jmp
fs
out
inc
xchg
scas
xor
and
jg
cdq
adc
(bad)
retf
inc
(bad)
(bad)
(bad)
mov
mov
cmp
test
cmps
shr
retf
push
mov
pop
cwde
inc
inc
mov
jns
cmc
rcl
fbld
add
sbb
xor
test
adc
(bad)
(bad)
(bad)
jmp
add
pushf
sbb
dec
loop
cmp
or
inc
dec
pop
push
int3
(bad)
(bad)
(bad)
dec
int
inc
fwait
jb
(bad)
jns
jecxz
sbb
and
inc
inc
call
je
jmp
dec
push
hlt
stos
aaa
inc
mov
mov
arpl
addr16
(bad)
(bad)
(bad)
jmp
or
and
inc
(bad)
ja
dec
imul
retf
xchg
inc
call
clc
and
add
lea
mov
ror
pop
(bad)
outs
retf
popf
les
outs
(bad)
(bad)
mov
xor
out
outs
push
xchg
jge
mov
out
cmp
mov
sar
(bad)
cmp
push
es
pop
mov
in
(bad)
out
call
adc
xor
and
ins
addr16
fcomip
push
or
ds
aas
cmp
cwde
mov
pop
cmp
or
out
cmp
loopne
xchg
xchg
lds
adc
jge
xchg
pop
push
daa
pop
xchg
int3
clc
jmp
push
popa
(bad)
mov
nop
lahf
mov
adc
adc
cli
out
mov
inc
and
mov
(bad)
(bad)
jmp
cmp
gs
test
cmc
mov
fwait
out
sbb
jo
(bad)
(bad)
push
xor
pop
dec
mov
inc
and
push
cwde
repnz
add
ret
test
(bad)
(bad)
(bad)
std
pop
cmc
cwde
mov
mul
pop
shl
xor
mov
(bad)
(bad)
mov
aaa
and
movs
ss
test
and
hlt
jg
cmp
or
loop
mov
adc
jnp
push
shr
add
cmps
push
xor
sub
(bad)
(bad)
(bad)
(bad)
call
add
mov
std
ins
xor
mov
rcr
dec
repz
inc
(bad)
xor
inc
sub
(bad)
(bad)
(bad)
mov
popa
sub
mov
arpl
adc
pop
out
in
dec
cmp
sar
(bad)
(bad)
jg
push
push
int3
add
xchg
punpcklbw
(bad)
xchg
pop
jae
call
mov
mov
cmps
xor
(bad)
(bad)
mov
mov
jno
mov
jl
aaa
cli
popa
mov
jg
mov
jecxz
(bad)
(bad)
(bad)
call
pop
pop
xchg
call
(bad)
jg
ds
jmp
dec
cmp
mov
retf
outs
les
call
call
sbb
stc
adc
sahf
ins
xor
push
gs
jnp
outs
cli
push
out
or
push
(bad)
jne
ss
sbb
sub
mov
push
cmp
stos
add
mov
sti
fsub
pop
adc
jae
dec
xor
sbb
nop
call
xor
mov
dec
mov
and
hlt
stos
mov
sbb
(bad)
out
clc
lea
bound
icebp
jnp
fxch
ins
add
inc
stc
add
idiv
(bad)
(bad)
call
add
es
dec
adc
scas
aad
push
dec
pop
ja
push
je
call
(bad)
(bad)
call
daa
hlt
(bad)
enter
or
adc
sbb
jmp
scas
pop
dec
(bad)
cld
sar
or
mov
cmps
ret
mov
(bad)
out
clc
inc
pop
cmp
pop
stos
mov
jbe
adc
retf
inc
pop
fdivr
add
xchg
fild
outs
cdq
out
add
data16
fistp
dec
lds
sahf
bnd
(bad)
mov
mov
jge
icebp
dec
sub
sbb
cmp
(bad)
(bad)
(bad)
call
jecxz
or
leave
inc
cld
cmc
xchg
dec
push
sbb
mov
push
push
mov
sbb
jmp
(bad)
jmp
repz
jo
outs
mov
xor
aaa
std
scas
sbb
cmps
clc
(bad)
(bad)
(bad)
out
not
push
mul
div
dec
not
out
push
mov
jne
push
daa
jle
mov
jmp
add
pop
dec
sbb
jne
cmps
jle
mov
add
je
mul
mov
jns
sub
add
imul
cmc
xchg
ds
mov
das
scas
cli
(bad)
dec
add
xor
push
cmp
mov
(bad)
test
cmp
xor
xlat
pop
push
scas
jns
xor
div
xor
mov
xchg
loopne
sbb
(bad)
push
jnp
adc
cmp
icebp
xchg
xchg
xchg
jno
test
cmp
mov
outs
cmp
add
push
stc
sbb
cmp
dec
repz
pop
fs
inc
mov
mov
cmc
arpl
(bad)
(bad)
push
adc
ds
add
mov
mov
shl
jne
cmc
xchg
sbb
mov
ss
(bad)
(bad)
inc
aam
fnstenv
push
inc
ja
xchg
popf
ins
sbb
add
xor
hlt
aaa
xlat
push
aaa
push
push
(bad)
(bad)
(bad)
dec
ss
jns
cmp
cdq
repz
sti
cli
mov
sbb
cdq
ss
cmp
mov
add
jnp
push
adc
pop
xor
adc
push
adc
and
and
jg
cmp
jp
xchg
xor
(bad)
mov
fcomip
push
cmc
sbb
mov
mov
xchg
cmp
xor
fadd
cli
test
push
std
(bad)
xor
mov
mov
xchg
or
lea
ret
dec
adc
jne
xor
jns
add
push
or
jge
les
dec
ja
push
call
stos
cmps
call
mov
mov
push
pop
push
aam
ja
or
call
leave
jbe
stc
add
pusha
cs
out
clc
jg
cdq
cmp
mov
mov
pop
ret
loope
xchg
std
(bad)
(bad)
jmp
adc
xchg
lds
cwde
dec
cs
inc
ja
xchg
push
jne
cmp
ins
add
mov
aas
mov
sub
sahf
(bad)
(bad)
(bad)
jmp
jae
stos
pusha
mov
push
loope
retf
icebp
jne
xchg
sbb
ficomp
lahf
adc
jns
and
dec
js
aaa
push
fdiv
mov
or
lahf
inc
std
mov
jbe
stos
(bad)
sbb
or
(bad)
repz
dec
mov
out
movs
mov
mov
add
call
sub
mov
movs
inc
(bad)
add
out
ins
imul
pop
lods
cmps
push
sti
stos
fnstcw
xlat
push
jne
jbe
test
add
scas
adc
sbb
pop
out
(bad)
call
and
(bad)
dec
xchg
dec
rol
das
(bad)
gs
lahf
repz
cdq
movs
cmc
icebp
scas
cli
(bad)
mov
inc
adc
(bad)
mov
daa
mov
out
(bad)
(bad)
(bad)
dec
jnp
cmc
ins
jno
fild
les
xor
mov
shl
cmp
clc
pop
jno
hlt
and
hlt
dec
dec
cli
loopne
out
push
adc
adc
inc
fdivrp
fbld
clc
inc
adc
movs
mov
inc
push
lods
push
enter
loopne
pop
(bad)
(bad)
(bad)
jmp
adc
mov
enter
inc
xchg
xor
mov
inc
or
(bad)
(bad)
(bad)
inc
dec
(bad)
aaa
outs
xor
adc
jecxz
inc
xchg
iret
pop
xor
aas
test
mov
inc
repz
xor
xor
xlat
aam
(bad)
fisttp
test
add
pop
dec
and
cmp
test
dec
js
(bad)
(bad)
jg
rcl
clc
out
push
in
imul
repz
xchg
(bad)
xor
sbb
pop
std
(bad)
(bad)
jmp
adc
inc
enter
call
xchg
cmc
(bad)
jg
sub
mov
test
mov
jl
loope
xor
(bad)
(bad)
dec
fnstsw
dec
jg
sub
adc
mov
outs
xchg
(bad)
lock
ja
inc
jmp
sub
lea
in
cli
lahf
test
scas
loope
inc
adc
sbb
(bad)
(bad)
mov
enter
xchg
sub
jmp
cmp
fcos
(bad)
call
clc
xchg
iret
and
std
aaa
xchg
rol
idiv
cli
fst
test
push
xor
mov
pop
les
sbb
in
stos
sbb
mov
jnp
pop
sbb
imul
push
(bad)
(bad)
(bad)
jmp
sub
or
mov
sub
popf
cwde
adc
loopne
int
dec
or
rcl
es
adc
(bad)
call
daa
sar
jbe
lods
test
sub
fcom
jae
and
(bad)
(bad)
jg
dec
cmp
loopne
mov
ds
xchg
pop
jae
push
popf
pushf
lods
add
jg
loopne
sbb
and
mov
adc
fucomip
jnp
(bad)
(bad)
(bad)
dec
jbe
mul
out
std
jne
add
sub
enter
clc
xchg
or
call
fcomp
and
hlt
adc
call
jno
fld
mov
and
push
inc
mov
stc
cld
sbb
test
sub
push
pop
mov
fwait
and
xchg
cmp
enter
cmp
(bad)
(bad)
push
out
scas
in
hlt
mov
sub
ret
inc
xor
xlat
retf
adc
jg
mov
push
dec
inc
push
fcos
(bad)
jg
retf
mov
add
mov
inc
pop
sbb
inc
sbb
mov
and
xchg
inc
xchg
sar
mov
(bad)
ins
push
mov
std
lahf
jne
inc
cmps
xchg
fwait
sbb
jns
loope
(bad)
(bad)
dec
bound
outs
xor
jns
push
out
sbb
stc
fimul
fwait
push
gs
pop
loop
hlt
(bad)
(bad)
(bad)
call
xor
jl
aas
retf
sti
das
jbe
sub
mov
(bad)
or
jmp
(bad)
(bad)
mov
mov
rcl
dec
xor
cli
dec
ins
dec
adc
push
fiadd
inc
(bad)
jmp
mov
out
clc
jne
and
pop
rep
mov
(bad)
(bad)
(bad)
mov
cmp
mov
repz
jg
mov
xor
popa
add
(bad)
(bad)
(bad)
push
sbb
jbe
repz
clc
jle
mov
mov
repnz
pop
jbe
(bad)
jg
lock
in
dec
out
jo
repz
(bad)
inc
mov
cmp
std
out
pop
icebp
add
fsubr
or
or
pop
loopne
cmp
pop
or
in
ror
int3
test
(bad)
not
(bad)
(bad)
(bad)
fist
push
in
jne
loope
out
xor
scas
daa
and
imul
add
jne
add
xchg
lods
and
cmc
(bad)
lods
or
adc
ds
(bad)
(bad)
push
or
xor
mov
push
jp
adc
mov
cli
push
cld
sbb
(bad)
push
clc
in
inc
push
cmp
pop
cli
cmp
rol
div
(bad)
(bad)
jmp
sbb
jae
pop
xchg
xor
clc
adc
xor
js
or
(bad)
(bad)
jp
add
jle
int
ret
inc
mov
movs
out
mov
add
(bad)
call
xor
repnz
data16
sub
inc
cmps
js
dec
idiv
(bad)
(bad)
dec
scas
mov
arpl
cli
sbb
test
mov
xor
shl
sbb
xor
add
(bad)
call
(bad)
mov
sahf
xor
js
lds
sbb
(bad)
inc
pop
cmc
mov
(bad)
(bad)
jmp
cmc
add
movhps
mov
jg
(bad)
fbstp
jnp
(bad)
imul
push
mov
cmp
sbb
(bad)
call
pop
adc
jae
shr
scas
sbb
or
and
push
data16
pop
jmp
dec
mov
mov
jbe
aam
ins
dec
stc
push
adc
cs
(bad)
inc
pop
data16
shl
sub
ja
xchg
fwait
dec
out
or
pop
push
scas
jg
pop
test
sbb
xchg
pop
ret
loop
adc
xor
adc
ret
pop
in
adc
fwait
xchg
imul
stos
lock
jg
xchg
jecxz
in
and
sbb
mov
enter
call
es
rcl
pop
js
inc
std
fsubr
movs
aas
sub
mov
sub
stos
mov
clc
(bad)
(bad)
cmp
test
push
add
nop
jle
jo
repz
push
out
sbb
mov
mov
xchg
sub
out
jecxz
sub
fst
jle
(bad)
xor
push
push
cld
call
sbb
test
adc
cld
jmp
jbe
in
mov
lahf
pop
mov
ror
sub
inc
pop
rol
pop
cmp
es
adc
aam
cmp
pop
inc
lods
sbb
not
loopne
(bad)
(bad)
jmp
repz
mov
jne
test
jb
adc
out
add
mov
je
ud0
(bad)
(bad)
call
push
repz
or
xor
cmc
test
push
cld
aad
push
cmp
push
(bad)
(bad)
(bad)
jmp
push
mov
push
mov
xor
mov
push
stc
fsub
stos
or
out
les
(bad)
(bad)
(bad)
jmp
xor
mov
jecxz
cdq
rcl
xchg
push
mov
into
cmp
shl
mov
adc
stos
mov
mov
pop
jo
and
jno
mov
icebp
fcomp
(bad)
outs
jmp
fcom
movs
stc
enter
iret
xor
or
and
mov
xlat
not
in
add
xor
imul
mov
arpl
loopne
mov
mov
jbe
mov
data16
mov
rcl
sbb
and
xor
(bad)
mov
in
or
sub
mov
xchg
fwait
inc
std
sbb
push
xor
cli
cld
rol
loop
cmp
mov
xchg
inc
jns
xchg
add
adc
in
sbb
(bad)
push
mov
sub
idiv
call
stos
cli
es
pop
ins
sub
jns
mov
cmc
in
fcom
enter
add
call
mov
dec
mov
std
jae
adc
xor
jmp
add
cmc
lods
mov
dec
lods
out
mov
mov
sbb
jns
pop
add
aas
add
sti
xchg
inc
sub
aad
xchg
and
movs
fnstenv
cld
std
rcr
je
js
adc
js
jmp
jne
dec
pop
xchg
mov
or
call
jp
pop
ret
(bad)
cmp
mov
pop
retf
adc
cmp
cli
sti
jle
and
call
add
dec
jmp
stc
repz
(bad)
push
xor
push
sub
jmp
or
adc
cmc
xchg
add
cli
sub
pop
cld
call
aaa
xor
pop
sbb
(bad)
push
repz
fs
or
mov
jg
mov
add
pop
or
pop
add
cli
leave
adc
dec
call
icebp
xor
jmp
mov
not
aam
std
cli
dec
mov
mov
fwait
push
or
mov
(bad)
fcmovne
fdiv
daa
retf
add
or
cmp
and
adc
aam
rol
pushf
retf
(bad)
(bad)
(bad)
(bad)
fsub
pop
push
adc
add
mov
push
aad
sbb
rcl
int3
or
xor
call
cld
(bad)
jmp
cli
hlt
jne
xlat
pop
add
jbe
retf
xor
ss
aad
daa
push
xor
push
mov
clc
sub
not
mov
cmp
push
std
retf
mov
xor
pop
and
adc
test
sub
mov
mov
cmp
aad
les
dec
add
cmps
jns
jecxz
(bad)
(bad)
inc
mov
or
mov
xlat
and
push
inc
push
jle
mov
hlt
xchg
fdivr
adc
je
xchg
test
(bad)
(bad)
call
sbb
mov
pop
cmc
xor
in
dec
dec
(bad)
or
mov
adc
aad
adc
(bad)
push
(bad)
clc
nop
call
or
in
xchg
fsubr
cmp
lea
(bad)
(bad)
(bad)
jmp
mov
test
repz
fcomi
outs
loopne
mov
in
xor
xchg
(bad)
leave
pop
mov
imul
(bad)
call
pop
and
mov
pop
call
adc
push
inc
mov
adc
shl
mov
mov
jmp
call
add
pop
push
jmp
jp
(bad)
adc
or
cmp
pop
add
push
dec
add
das
xor
and
push
sbb
ss
test
(bad)
(bad)
jmp
in
fdiv
out
lods
sub
cmc
push
jecxz
les
cli
(bad)
push
mov
repz
inc
mov
fadd
sub
push
mov
cmp
out
mov
call
(bad)
aam
mov
mov
in
aas
loopne
(bad)
fcomip
leave
cmp
cmp
pop
jbe
movs
cmc
call
aaa
bound
cmp
mov
mov
adc
outs
cli
call
mov
adc
pop
(bad)
mov
dec
js
xor
(bad)
(bad)
push
mov
mov
test
jbe
dec
push
in
shl
(bad)
add
(bad)
call
push
jne
mov
in
add
out
adc
pop
push
call
lock
adc
repz
call
fbld
mov
jbe
adc
loopne
fadd
frstor
jbe
xor
mov
(bad)
(bad)
(bad)
jmp
imul
sbb
pushf
push
xor
cmovne
jo
sbb
(bad)
(bad)
(bad)
call
add
pop
ret
call
push
jbe
xchg
repz
nop
pop
mov
cmp
fstp
mov
fs
cmc
pop
add
sub
mov
jl
jne
xchg
js
(bad)
mov
xchg
cwde
stc
hlt
xchg
inc
jl
mov
dec
cmp
mov
stc
jecxz
sub
jmp
push
loopne
sbb
jmp
mov
mov
call
xchg
mov
(bad)
inc
jne
or
lea
xor
sbb
call
mov
int3
clc
retf
loopne
gs
mov
xchg
sahf
and
sub
sbb
lods
mov
(bad)
(bad)
jns
es
mov
test
aas
cmp
cmc
jmp
and
repz
or
xchg
aas
mov
scas
xor
adc
outs
cmps
mov
mov
(bad)
(bad)
(bad)
(bad)
jmp
stos
and
repz
push
aam
dec
xchg
mov
adc
shl
jmp
xor
ds
pop
mov
xor
sub
aad
jp
sub
sbb
data16
mov
pop
sbb
test
(bad)
out
cmp
add
(bad)
ficom
ins
call
gs
jg
mul
cmp
not
push
imul
dec
or
mov
add
(bad)
(bad)
call
das
js
test
sti
cmp
mov
out
inc
call
shl
(bad)
(bad)
call
je
adc
or
push
call
mov
sbb
jmp
std
xchg
loopne
(bad)
(bad)
push
call
in
paddusb
jle
sbb
mov
adc
xor
dec
lea
dec
mov
lods
mov
adc
push
cmp
lahf
ret
aaa
std
xor
lods
sub
mov
inc
shl
xchg
mov
push
rcl
cld
mov
sbb
aam
call
sbb
lock
call
bound
stc
xor
sub
(bad)
pop
xchg
(bad)
add
repz
dec
mov
dec
aad
xchg
mov
and
push
fcom
neg
lds
(bad)
(bad)
out
cwde
or
xchg
mov
add
jo
add
sub
mov
mov
mul
jb
(bad)
(bad)
call
aas
pop
mov
or
fadd
sub
push
test
xchg
ficomp
jae
cmc
(bad)
(bad)
(bad)
call
or
inc
stc
push
ins
test
aaa
xchg
iret
hlt
fadd
adc
(bad)
(bad)
(bad)
(bad)
cli
sub
fnstenv
hlt
xor
cmc
and
or
inc
(bad)
xor
cmp
cmp
(bad)
(bad)
(bad)
(bad)
inc
pop
sbb
out
sbb
jbe
push
jae
or
repz
movs
rcr
das
clc
(bad)
(bad)
std
pop
es
mov
loopne
push
push
mov
push
push
fimul
mov
ror
add
push
dec
dec
push
out
repz
call
adc
fidiv
xchg
rcl
mov
cmp
(bad)
call
dec
into
xchg
push
xchg
lea
add
adc
ja
xor
xchg
cwde
fsub
call
sti
xlat
out
dec
out
sti
cli
xor
push
cmp
cmp
xchg
push
ret
mov
pop
xor
jb
loopne
adc
push
push
sbb
sbb
(bad)
(bad)
inc
sbb
adc
pop
not
es
repz
push
and
inc
or
mov
mov
mov
ficomp
call
add
or
idiv
jmp
leave
xlat
mov
adc
test
dec
inc
fwait
xor
mov
jle
push
(bad)
fbld
imul
je
(bad)
(bad)
(bad)
dec
xor
and
(bad)
imul
dec
mov
jmp
jle
cmps
das
ror
cmp
ss
add
jae
pop
cld
imul
add
inc
psadbw
and
inc
sbb
fadd
std
(bad)
(bad)
dec
test
js
cmp
add
sar
jae
test
sub
sbb
sbb
jo
add
cli
xor
adc
xor
sbb
jb
jmp
jp
push
cmp
adc
js
std
shl
fadd
outs
aam
push
(bad)
call
imul
dec
and
(bad)
dec
daa
loopne
cli
sbb
cmc
sbb
add
(bad)
jg
(bad)
jns
cmp
mov
loope
fwait
push
ins
add
movs
mov
adc
(bad)
(bad)
(bad)
jle
pushf
jbe
sub
scas
loopne
enter
mov
retf
sub
inc
ss
div
sub
jp
repz
(bad)
out
cli
mov
js
mov
je
in
call
dec
repz
jp
ss
and
jecxz
ss
fcmovnbe
dec
shl
sub
repz
or
cmp
(bad)
(bad)
(bad)
jmp
fldcw
cmp
mov
push
or
stc
mov
fdivr
out
aaa
adc
sbb
mov
(bad)
(bad)
(bad)
(bad)
out
jno
xor
(bad)
(bad)
std
mov
and
scas
mov
sub
cmp
fwait
inc
push
push
xchg
add
inc
std
(bad)
call
stos
add
mov
repz
push
push
xchg
retf
jne
(bad)
xor
int3
sbb
dec
push
data16
jp
leave
jae
jbe
xor
(bad)
(bad)
(bad)
(bad)
(bad)
jns
sub
adc
jns
pop
xchg
sahf
idiv
mov
fmul
mov
std
cmp
(bad)
(bad)
call
sti
fdivr
mov
fild
shr
je
(bad)
retf
hlt
(bad)
(bad)
dec
xor
or
pushf
jl
(bad)
js
xor
mov
mov
xor
(bad)
mov
jbe
outs
in
push
mov
or
test
inc
not
xor
and
(bad)
(bad)
(bad)
(bad)
fmul
sbb
in
and
fmul
jbe
xchg
hlt
cmp
loop
std
push
xchg
call
ins
jns
cmp
push
(bad)
(bad)
mov
shl
mov
add
dec
mov
and
xchg
mov
(bad)
(bad)
(bad)
(bad)
sti
push
cmps
add
sub
inc
mov
and
sbb
outs
inc
arpl
(bad)
jmp
stos
fwait
sbb
cmc
pop
xchg
mov
dec
hlt
js
(bad)
pop
(bad)
jg
add
push
mov
push
sbb
mov
in
scas
pop
cdq
lock
add
pop
hlt
call
jecxz
inc
xor
not
int
mov
call
jg
call
in
std
in
call
xor
div
hlt
mov
mov
cmps
lock
cli
int3
push
inc
dec
mov
in
jne
sar
lods
inc
sbb
inc
dec
mov
sbb
or
in
mov
scas
aaa
xor
jmp
loope
fstp
cmp
(bad)
ficom
mov
jns
mov
xor
and
xor
mov
inc
sbb
xchg
add
imul
(bad)
rcr
fnstcw
add
(bad)
xchg
call
jmp
mov
push
es
mov
sbb
xor
(bad)
out
push
ficomp
push
(bad)
(bad)
(bad)
jmp
jne
imul
div
sub
adc
push
lea
(bad)
(bad)
call
ret
mov
sbb
fist
test
cdq
mov
lods
jbe
add
add
call
xchg
inc
sti
sti
stc
test
(bad)
je
call
sar
(bad)
(bad)
(bad)
pop
add
push
cmp
jl
cdq
out
cli
inc
adc
retf
mov
inc
jl
or
(bad)
mov
push
cmc
mov
pop
mov
pop
shl
scas
(bad)
inc
push
xchg
xchg
mov
daa
xor
je
mov
call
(bad)
push
out
pop
push
sub
jle
jle
call
sbb
fmul
cmp
loopne
mov
push
dec
push
cli
jle
je
sbb
mov
jb
fdivr
ss
sub
mov
repz
fsub
sar
test
(bad)
hlt
xor
(bad)
out
xor
add
sub
cld
int3
call
dec
jbe
(bad)
(bad)
(bad)
inc
push
cdq
mov
clc
jo
test
push
scas
aas
xor
test
div
call
inc
test
mov
cmp
xchg
xor
out
xchg
arpl
(bad)
(bad)
jmp
sbb
retf
addr16
out
ins
jns
dec
inc
jle
cdq
mov
xor
mov
adc
cmp
nop
lock
add
(bad)
stc
loop
leave
out
push
mov
fs
aaa
fdivr
je
push
xor
data16
dec
(bad)
push
mov
mov
stos
cmc
xor
sti
sub
inc
repz
inc
adc
sbb
cmp
push
add
stc
adc
(bad)
(bad)
in
push
xchg
jns
xchg
fidiv
push
xchg
mov
pop
sbb
jg
mov
jbe
jbe
push
and
and
or
xchg
or
and
das
rcl
xor
xor
add
ds
pop
jne
call
sbb
push
pop
movs
cmp
pop
jle
cmc
mov
mov
jp
xchg
sub
add
add
jbe
test
push
jg
nop
cmc
xor
neg
sar
(bad)
mov
dec
std
cmc
mov
sub
jbe
mov
adc
loopne
daa
je
test
push
call
pop
jbe
stc
xor
xlat
add
cld
call
pusha
leave
cmp
cli
cmps
dec
(bad)
mov
xor
sbb
mov
mov
dec
mov
jb
(bad)
(bad)
(bad)
dec
ja
or
ret
mov
mov
dec
lea
test
add
xor
mov
inc
pop
mov
mov
jbe
je
jbe
jne
push
push
std
jo
dec
adc
mov
xchg
pop
hlt
sbb
jb
sbb
inc
sbb
rcl
dec
push
adc
sbb
(bad)
fbstp
adc
js
clc
jmp
test
mov
leave
hlt
xchg
fisttp
adc
mov
(bad)
cmp
jae
sar
ret
cmp
(bad)
in
xchg
cli
cmc
hlt
jnp
push
mov
push
stos
jae
pop
repz
(bad)
jg
mov
push
push
sbb
add
or
fdiv
(bad)
(bad)
jmp
mov
movs
ds
in
cdq
in
pop
cwde
ins
js
ja
and
jbe
and
test
icebp
(bad)
in
mov
sub
sbb
push
fucomi
sbb
and
jg
(bad)
call
test
scas
fadd
cmp
push
outs
(bad)
mov
inc
and
cmp
push
cmc
fstp
js
das
xor
hlt
push
retf
add
or
sti
rol
adc
pop
dec
jp
fidiv
gs
pop
fstp
xchg
add
loopne
push
mov
outs
push
sbb
dec
sbb
cmp
dec
movs
daa
cmps
gs
xchg
aas
rcr
outs
ret
adc
std
push
mov
loop
push
ins
sub
aas
inc
cmc
cmp
(bad)
call
(bad)
push
and
sahf
and
jno
add
add
xor
mov
sub
fwait
or
xor
sbb
jl
sub
cli
(bad)
call
add
adc
fidivr
mov
aam
adc
or
es
das
cli
or
and
inc
and
cdq
(bad)
(bad)
call
fbstp
loope
bnd
sbb
sbb
hlt
pop
imul
xchg
test
jge
movs
pop
dec
nop
sbb
gs
ins
loopne
rcr
repnz
mov
dec
add
cmp
call
(bad)
aad
js
cmp
xor
loop
(bad)
(bad)
mov
rcr
jp
cmp
or
jl
inc
mov
stos
fidiv
gs
pop
cmc
pop
pop
ret
and
jge
pop
test
or
movs
add
(bad)
jg
(bad)
pusha
jns
es
fist
push
call
jecxz
mov
mov
push
outs
out
mov
pop
js
or
cs
inc
shl
(bad)
(bad)
(bad)
out
cmps
add
not
lods
jmp
sub
stc
sub
call
(bad)
push
pop
sbb
lea
add
(bad)
push
ret
dec
fdivr
xor
mov
jbe
xor
hlt
sti
(bad)
out
cli
dec
pop
add
mov
bound
sub
cs
mov
cmc
add
cli
(bad)
(bad)
(bad)
in
jb
add
and
call
pop
repz
fs
arpl
call
and
or
xor
mov
push
sub
lea
cmp
xchg
mov
and
sbb
cmp
adc
push
(bad)
xchg
dec
pusha
and
mov
jmp
(bad)
fdivr
test
ins
stc
pop
cmp
cmp
push
imul
stos
xchg
hlt
scas
loopne
mov
inc
popa
sbb
pop
lds
outs
cmps
cmp
aaa
push
repnz
and
(bad)
jmp
ins
dec
std
inc
xor
test
sub
adc
cmps
ds
(bad)
dec
nop
bnd
fs
ss
dec
psubusw
lds
cmp
(bad)
ds
jns
in
scas
add
les
pop
out
pop
pop
cmp
and
cmp
(bad)
xchg
adc
xchg
(bad)
jmp
cs
stc
jne
lods
jno
add
fwait
(bad)
call
sbb
fs
xchg
mov
je
outs
jle
pop
cmp
jns
(bad)
(bad)
(bad)
call
nop
add
ds
dec
xor
ins
cmp
cmp
stos
pop
xchg
lea
mov
jbe
adc
(bad)
xchg
enter
(bad)
jbe
inc
rcl
jp
jle
rcl
loopne
mov
dec
mov
sub
pop
jecxz
cmps
test
jnp
pop
jbe
push
cmp
adc
ret
jne
mov
push
push
inc
cmp
call
ja
std
mov
jp
push
loopne
outs
mov
push
pop
js
fwait
or
jg
shl
sub
xor
mov
add
jae
in
inc
adc
test
(bad)
(bad)
call
fadd
jg
add
mov
push
add
or
ret
mov
cmps
sti
mov
(bad)
call
ret
retf
adc
hlt
sub
jbe
cmp
pop
imul
cmp
(bad)
push
push
call
or
mov
stc
mov
int3
mov
out
mov
movs
adc
rol
add
jbe
xchg
mov
cs
sbb
shl
mov
fcmovu
add
(bad)
(bad)
(bad)
jmp
dec
push
imul
sbb
js
jns
push
repz
(bad)
bound
mul
adc
xchg
sbb
pop
fdivp
fcom
sbb
mov
nop
or
in
mov
dec
clc
xchg
inc
call
xchg
xchg
ror
mov
std
dec
fistp
mov
hlt
inc
mov
call
cmp
and
pop
pop
loopne
mov
fdivr
and
cli
(bad)
(bad)
(bad)
inc
(bad)
push
mov
inc
push
mov
repnz
or
adc
mov
sbb
or
hlt
repz
(bad)
(bad)
(bad)
jnp
pop
xor
test
cmp
mov
mov
out
cli
cmp
(bad)
and
dec
mov
push
ja
ret
aaa
mov
fsubr
js
jmp
mov
cmc
mov
loopne
xchg
fcmovnb
xchg
jns
inc
std
push
arpl
out
pop
cmc
jae
pusha
mov
cmp
mov
aam
mov
ja
aaa
test
fstp
xchg
push
fsub
jl
stos
shl
add
cwde
push
xchg
(bad)
(bad)
(bad)
jmp
clc
scas
call
int
pop
test
ja
imul
and
mov
hlt
mov
icebp
push
push
cmp
sub
xor
push
cmp
ins
and
movs
rcr
cmc
pop
mov
adc
and
pop
inc
cmp
std
add
xor
jp
cmc
ins
hlt
into
call
push
add
repz
into
xchg
pop
daa
fidiv
fcom
mov
rcl
test
es
mov
xor
ss
push
cli
jns
push
jbe
sub
ror
aas
push
(bad)
sub
mov
pop
or
adc
popf
fdiv
enter
(bad)
(bad)
(bad)
jmp
lods
add
mov
sbb
mov
(bad)
push
jbe
mov
(bad)
(bad)
(bad)
inc
inc
shl
data16
xchg
sti
dec
sbb
mov
mov
mov
jle
push
or
or
call
mov
shr
nop
dec
hlt
fcom
out
call
(bad)
jg
test
sub
jns
jmp
mov
mov
and
sbb
clc
add
(bad)
ds
repz
stc
sub
extrq
jns
push
dec
enter
push
mov
les
xor
inc
xchg
or
movs
cmp
(bad)
dec
push
imul
xchg
loopne
je
fadd
pop
out
adc
inc
inc
mov
mov
inc
inc
pop
add
add
mov
lods
or
sar
sar
in
ds
push
jne
aam
mov
(bad)
mov
mov
pusha
sar
ins
inc
mov
pop
jno
fisubr
clc
(bad)
call
dec
add
adc
mov
sbb
fidivr
add
(bad)
dec
xor
(bad)
fsubr
add
push
push
data16
mov
adc
cmp
call
push
xor
les
out
xchg
stos
dec
adc
(bad)
(bad)
(bad)
push
das
dec
std
sub
mov
fisubr
cwde
out
mov
fld
cmp
cbw
sti
push
pop
push
or
push
(bad)
(bad)
(bad)
call
mov
mov
and
push
shl
jbe
or
pop
adc
sub
adc
fcomip
push
fstp
mov
sbb
fcom
leave
add
ins
loopne
test
cmp
rcr
dec
pushf
or
je
add
fucomp
jbe
fcomp
dec
fwait
xchg
loopne
aad
(bad)
push
enter
xlat
repz
jbe
or
test
rcr
sub
iret
mov
(bad)
(bad)
(bad)
jg
ss
out
push
cmc
pop
or
out
inc
cwde
ja
or
push
pop
sbb
(bad)
fbld
shl
mov
pop
xlat
adc
xor
test
mov
cmc
(bad)
push
sub
repz
(bad)
mov
cli
outs
call
(bad)
jg
cmp
or
shl
pop
inc
dec
cs
in
xor
call
es
pop
mov
call
test
(bad)
push
xor
pop
(bad)
adc
loopne
adc
cmp
fidivr
daa
cmp
je
retf
xlat
mov
aam
mov
cmp
test
push
cli
mov
sbb
(bad)
(bad)
push
repz
jne
out
outs
sub
and
leave
jbe
imul
push
sbb
test
hlt
(bad)
(bad)
(bad)
mov
shl
add
outs
sub
mov
div
scas
and
aad
xchg
outs
rol
cmp
cmp
cmp
sbb
sbb
std
jp
hlt
stos
mov
push
rcl
test
sti
push
movs
push
mov
(bad)
(bad)
(bad)
(bad)
call
jno
mov
adc
call
or
cs
mov
dec
lea
movs
or
add
in
sti
xor
imul
cwde
xchg
(bad)
(bad)
(bad)
(bad)
jns
xchg
repz
jbe
dec
cld
pop
not
into
movs
dec
mov
adc
sbb
hlt
adc
mov
xchg
fdivr
(bad)
cmp
and
xor
or
mov
(bad)
push
call
pop
cmp
cs
jo
push
cmc
div
arpl
stos
(bad)
(bad)
jg
push
fidiv
mov
push
fnstenv
or
repz
adc
sbb
cmp
push
dec
(bad)
cli
sahf
push
pop
cmp
(bad)
adc
ror
fdiv
push
cld
dec
xor
sub
call
adc
(bad)
(bad)
jg
test
push
add
repz
loope
lea
xlat
icebp
popf
cmp
push
in
cmps
xor
dec
adc
sub
jp
mov
inc
ss
jmp
xchg
jns
xor
(bad)
repz
sub
inc
je
jne
popa
inc
std
xor
int
repnz
sti
jns
or
scas
pop
icebp
(bad)
jg
sub
scas
cmp
and
adc
js
add
jg
jg
repz
sub
test
push
dec
cmc
mov
cli
(bad)
push
shl
xor
call
sbb
or
loopne
inc
test
inc
clc
jne
mov
jns
cmc
pop
pop
clc
or
ret
(bad)
(bad)
(bad)
fild
xchg
add
add
std
mov
ror
scas
call
imul
add
xchg
dec
xchg
adc
les
loope
jae
cmc
hlt
rcr
arpl
xor
(bad)
(bad)
push
sbb
sub
retf
mov
pop
adc
cmp
out
(bad)
(bad)
(bad)
mov
ror
and
repz
dec
mov
fdivr
sbb
ins
mov
inc
sahf
mov
(bad)
(bad)
inc
pop
xor
repz
push
in
stos
xor
test
ficom
jnp
scas
cli
out
fisub
push
add
pop
fisttp
cmp
test
pop
pop
shr
jne
pop
jl
mov
dec
jae
mov
jne
mov
inc
adc
call
hlt
fldenv
retf
call
(bad)
inc
push
clc
jb
mov
jecxz
cmp
and
mov
daa
call
ss
jns
mov
jmp
ficomp
in
call
sbb
adc
in
retf
xor
push
pop
shr
xchg
std
imul
mov
(bad)
jns
out
xor
xor
pop
adc
adc
(bad)
(bad)
call
call
call
lods
mov
fdivp
xor
sahf
aad
xor
(bad)
fbld
fs
and
repz
cmp
mov
cmp
lock
pop
sbb
ds
mov
add
cli
xor
inc
add
sub
dec
in
hlt
xor
xchg
or
(bad)
(bad)
(bad)
call
out
mov
push
cmp
add
ins
add
adc
aad
pop
cmps
in
xor
adc
(bad)
(bad)
(bad)
call
cmp
loopne
dec
mov
and
movs
mov
sbb
add
(bad)
(bad)
cmp
cdq
je
sbb
xchg
pop
cmps
inc
sbb
sbb
cmp
je
fwait
add
cld
(bad)
(bad)
(bad)
fdivr
xchg
add
cmc
inc
mov
inc
ss
xor
cmp
push
mov
imul
std
jp
fs
int3
mov
mov
pop
loopne
call
retf
call
adc
mov
add
sti
pop
and
(bad)
(bad)
call
jmp
loop
je
hlt
dec
sbb
cmp
mov
mov
pop
xchg
xchg
adc
(bad)
dec
pop
enter
add
sub
mov
imul
(bad)
(bad)
jmp
je
dec
fadd
popf
in
mov
push
sbb
sbb
sar
push
mov
out
dec
addr16
cmc
imul
test
pop
dec
lods
push
cmp
dec
(bad)
push
retf
inc
push
inc
inc
(bad)
(bad)
pop
mov
fidiv
jl
(bad)
in
addr16
mov
sbb
ficomp
cmp
(bad)
mov
lea
jns
out
cmp
push
push
cmc
pop
sub
and
push
cld
push
pop
movs
jno
cmp
ja
add
sbb
(bad)
(bad)
(bad)
inc
mov
xor
pushf
cdq
pop
jne
push
cld
push
lods
mov
(bad)
dec
mov
(bad)
into
clc
adc
push
xchg
shl
jb
(bad)
(bad)
(bad)
(bad)
push
fiadd
or
lods
mov
cld
call
mov
stos
mov
(bad)
(bad)
(bad)
jmp
or
mov
pop
xor
push
mov
sbb
adc
sbb
stos
cld
(bad)
(bad)
(bad)
jmp
xchg
or
xor
cmps
sub
mov
cli
ins
jge
and
jns
lock
dec
(bad)
dec
shl
neg
push
ja
sti
add
sbb
call
mov
gs
jne
dec
mov
mov
rcr
in
push
es
jmp
sbb
ins
adc
or
(bad)
jmp
add
dec
mov
mov
fst
pop
cmp
idiv
(bad)
(bad)
jnp
jns
loopne
xor
mov
aad
mov
sbb
pusha
pop
and
(bad)
(bad)
(bad)
push
jle
jae
push
xor
jns
push
scas
arpl
xchg
jne
(bad)
adc
ins
call
cmp
mov
sbb
(bad)
xchg
cmp
jnp
adc
(bad)
aad
mov
fcmovu
cmp
add
push
adc
cli
imul
fst
xor
cmc
push
mov
jecxz
fld
test
(bad)
(bad)
(bad)
dec
cmc
out
xchg
mov
div
or
fnstenv
js
loope
cmc
call
dec
inc
hlt
std
cli
std
retf
mov
adc
pop
cmc
out
stc
pop
fld
jle
leave
cli
mov
jmp
jg
sbb
mov
int
adc
mov
adc
push
cmp
call
jo
leave
jnp
push
loopne
cmc
jne
push
jmp
xor
cmc
mov
ret
mov
mov
xchg
xor
jecxz
inc
adc
mov
sbb
out
adc
mov
xchg
(bad)
inc
stos
clc
add
retf
cli
mov
xor
jae
ret
adc
retf
call
jecxz
ficom
and
push
pop
cmp
sti
push
jbe
fist
icebp
push
adc
jne
push
xchg
mov
jae
push
test
sar
mov
jp
mov
hlt
lods
call
adc
xor
fdivr
push
fdivr
sbb
fisttp
mov
loopne
loope
xchg
push
mov
jae
(bad)
(bad)
(bad)
(bad)
std
mov
cmc
inc
jmp
cmp
nop
xchg
pop
xchg
jmp
adc
icebp
jmp
push
mov
movs
mov
sbb
xchg
clc
cs
(bad)
inc
ins
inc
mov
xchg
adc
push
sbb
shl
imul
test
(bad)
push
aad
adc
sbb
fdiv
pop
sbb
jle
jg
adc
std
(bad)
(bad)
(bad)
fcmovu
aam
sti
xchg
cli
xlat
sub
cmps
push
sbb
xor
mov
pop
inc
jle
jg
push
push
sbb
dec
inc
xor
sub
mov
jo
and
mov
mov
xor
(bad)
(bad)
inc
aaa
aad
adc
push
ds
sbb
mov
mov
xor
adc
(bad)
jmp
call
lods
xchg
cwde
xchg
lea
call
jns
loopne
inc
mov
lods
cmp
jmp
aam
loope
(bad)
xchg
pushf
push
push
and
xor
xchg
push
xchg
dec
out
clc
mov
inc
dec
cwde
xchg
add
xchg
mov
aaa
or
(bad)
mov
(bad)
(bad)
call
js
cli
mov
fadd
xchg
cmp
add
sub
add
ins
or
pop
fwait
dec
repnz
call
cld
in
push
arpl
js
stos
add
mov
adc
jg
add
fwait
xchg
stc
inc
mov
pushf
jmp
jp
pop
adc
mov
sbb
(bad)
dec
fldenv
add
shr
sbb
push
repz
add
icebp
sbb
jne
xor
mov
call
mov
dec
repz
adc
cmp
icebp
cmp
call
(bad)
jg
mov
scas
adc
pop
jbe
adc
xchg
out
das
mov
cmp
je
(bad)
(bad)
(bad)
call
js
and
into
mov
pusha
aaa
cmp
test
div
jae
stc
aaa
mov
mov
pop
(bad)
push
cld
mov
jp
cmp
(bad)
das
push
jle
in
loop
sbb
pop
xchg
cmc
jae
(bad)
(bad)
jmp
mov
sbb
xchg
push
(bad)
or
inc
cdq
(bad)
outs
and
(bad)
(bad)
dec
cmc
adc
fbstp
fwait
daa
hlt
shl
test
das
xchg
xchg
(bad)
jns
in
inc
pop
pop
mov
or
js
add
pop
out
and
pop
repz
ja
push
sub
mov
mov
push
cdq
aam
mov
cmp
sbb
test
inc
jp
(bad)
fwait
(bad)
push
aam
inc
punpckhwd
sbb
push
bound
das
(bad)
jg
jmp
jbe
div
or
hlt
scas
(bad)
jmp
cli
sbb
and
cmc
adc
xlat
push
cmp
cmc
mov
mov
lods
in
outs
push
popa
scas
lea
dec
inc
xlat
jmp
cld
push
std
out
or
xor
stc
mov
fadd
jbe
outs
push
div
ins
jbe
push
sahf
sbb
gs
sar
(bad)
inc
adc
aad
xor
or
pop
sbb
cmps
push
inc
(bad)
(bad)
(bad)
(bad)
cmp
lods
popf
cmp
mov
or
or
adc
push
cli
cmp
xor
call
stos
xlat
xchg
sbb
adc
xchg
dec
cmp
sqrtps
mov
sbb
sti
and
jbe
mov
xor
(bad)
jg
ss
cmp
scas
push
jle
cmp
mov
jg
(bad)
inc
adc
mov
mul
enter
push
add
push
cmp
je
push
jns
js
or
jmp
sbb
mov
mov
hlt
jno
push
dec
(bad)
dec
inc
or
adc
xchg
sbb
std
into
call
mov
(bad)
(bad)
(bad)
inc
mov
inc
push
jp
cmp
mov
add
gs
je
mov
xor
lods
inc
retf
pop
stc
mov
fcomip
inc
mov
and
and
cmp
popf
cmp
stos
dec
adc
in
test
add
mov
mov
cwde
in
jmp
add
mov
(bad)
push
loopne
lods
dec
scas
data16
mov
ins
jmp
sahf
stc
sbb
shl
js
mov
inc
sbb
popf
push
sbb
mov
dec
xor
cmp
rcr
cmc
mov
(bad)
cld
std
fcmove
sbb
shr
dec
mul
(bad)
out
clc
jmp
stos
xchg
and
xor
js
add
ja
retf
dec
lock
lods
jp
(bad)
in
sar
imul
mov
retf
cmp
cli
sbb
adc
aam
int
test
fidivr
cmp
(bad)
push
adc
test
cmp
push
sub
mov
jmp
jne
sub
push
fiadd
ret
cmp
xchg
cli
xor
mov
sbb
loope
push
mov
add
call
sar
loopne
loopne
mov
or
sbb
pop
test
sar
pop
inc
test
(bad)
and
fcom
cmps
adc
pop
cmp
jmp
inc
loopne
push
dec
js
cmps
and
js
mov
les
and
pop
adc
mov
dec
js
adc
int3
retf
jge
aas
js
jecxz
(bad)
(bad)
call
jg
and
(bad)
push
cli
xor
les
dec
or
aaa
xchg
(bad)
(bad)
(bad)
cmp
jns
loope
adc
cmc
fldcw
imul
cmp
cs
lods
(bad)
(bad)
(bad)
in
cmp
push
push
test
xor
call
push
push
std
pop
jb
mov
sub
mov
xor
cmp
push
xchg
xor
xchg
mov
mov
(bad)
fcomip
jbe
stos
loope
iret
repnz
pop
inc
div
mov
mov
pop
call
stos
xchg
jae
test
cwde
xchg
xor
call
or
(bad)
(bad)
(bad)
push
adc
fst
dec
cmc
xchg
out
test
lods
ds
in
jg
(bad)
inc
jae
sbb
test
mov
fidiv
or
mov
(bad)
(bad)
jmp
push
mov
pop
sub
sbb
out
jmp
sub
stc
call
push
movs
jecxz
(bad)
jmp
mov
in
stos
cld
and
cmp
xor
sar
adc
in
out
jo
dec
cld
mov
xchg
push
pop
mov
push
(bad)
call
mov
pushf
mov
ret
clc
out
call
pop
mov
xor
push
add
cld
push
es
push
mov
lea
scas
and
(bad)
(bad)
fbstp
mov
mov
cld
jb
and
jecxz
aaa
xlat
cdq
jl
adc
cli
mov
(bad)
(bad)
fadd
dec
pop
mov
repz
sub
dec
mov
lds
(bad)
(bad)
(bad)
jmp
mov
and
outs
jecxz
push
sbb
xchg
fisubr
(bad)
xchg
repz
(bad)
(bad)
(bad)
push
out
rcl
and
outs
pop
loope
cmp
xchg
jns
push
lea
(bad)
(bad)
dec
pop
push
inc
pop
jecxz
sbb
cmps
xor
mov
xchg
shl
mov
sbb
arpl
mov
cmp
sti
mov
das
dec
sub
je
sbb
nop
call
std
(bad)
call
jp
adc
jbe
xchg
pop
mov
fs
jle
call
aam
(bad)
jmp
repz
test
mov
repz
push
jne
sbb
loope
pop
inc
sbb
sbb
mov
jge
mov
mov
or
(bad)
(bad)
dec
mov
push
sub
pop
xchg
lea
sbb
jae
ja
inc
mov
or
cmp
mov
cli
push
arpl
inc
dec
ret
pushf
push
pop
push
es
(bad)
(bad)
dec
inc
sti
sbb
rol
mov
movs
add
cmp
fisub
push
cmc
add
mov
(bad)
(bad)
dec
imul
lahf
adc
add
lea
push
scas
cwde
xor
popa
sahf
mov
cmp
shl
push
call
adc
lds
push
lock
sub
pop
test
xor
and
je
(bad)
(bad)
(bad)
(bad)
jns
movs
push
loopne
icebp
push
lea
mov
aaa
shr
fdivr
lods
xchg
mov
add
cmps
and
call
push
pop
sub
mov
push
inc
inc
xchg
xor
xor
mov
stos
aaa
cwde
cs
(bad)
jmp
push
mov
jo
popa
test
sbb
mov
out
cli
(bad)
(bad)
mov
pop
fstp
cli
xchg
jle
xchg
dec
mov
add
xchg
(bad)
(bad)
call
mov
xor
fadd
loopne
mov
jne
mov
mov
fidivr
je
(bad)
(bad)
(bad)
push
retf
adc
fcomip
in
pusha
shl
adc
(bad)
push
jno
jmp
(bad)
push
mov
mov
mov
sbb
mov
cwde
cli
inc
cli
inc
mov
test
mov
cs
call
lods
and
aam
lea
xor
mov
adc
xor
inc
inc
ret
mov
inc
add
jg
js
inc
mov
clc
outs
mov
cmp
jg
sub
and
int3
neg
or
inc
mov
cs
xchg
pop
dec
cli
fnsetpm(287
mov
jb
lds
movs
jns
jbe
(bad)
call
and
test
fnstsw
push
stos
jns
inc
movs
cmc
outs
(bad)
cmc
cli
mov
(bad)
(bad)
jg
xchg
stos
jo
call
jns
push
jbe
mov
pop
pop
pop
and
inc
(bad)
(bad)
(bad)
and
repz
jae
xor
add
neg
mov
mov
shr
adc
jbe
mov
(bad)
call
cmp
data16
les
jns
push
(bad)
(bad)
(bad)
(bad)
jnp
test
xor
retf
sbb
dec
mov
ror
aam
mov
sbb
fild
nop
mov
cmc
cmps
(bad)
stc
cmc
call
jo
ins
or
pop
or
fcomip
sbb
mov
ins
xchg
sub
xor
cmps
hlt
mov
jecxz
mov
loopne
or
add
cld
jmp
xor
or
cli
out
js
ss
(bad)
jns
jmp
mov
aaa
adc
fs
adc
dec
aad
mov
sbb
das
sbb
(bad)
(bad)
push
call
cli
push
pop
or
mov
mov
jae
int
or
push
pop
sbb
pavgb
sub
pushf
cs
jg
jmp
mov
shl
mov
das
loop
fist
jmp
(bad)
test
mov
push
sbb
ins
repz
std
jge
call
dec
jae
xor
arpl
jno
mov
int3
pop
test
into
jmp
int
cli
jns
jmp
div
jnp
cli
mov
mov
jmp
cmps
(bad)
or
(bad)
(bad)
jmp
xor
push
push
jae
mov
pop
jns
push
repz
inc
jns
(bad)
(bad)
push
std
outs
fcom
or
or
inc
sbb
dec
mov
int
add
mov
dec
adc
sub
pop
fcmovb
lods
(bad)
push
call
mov
cmp
mov
loopne
mov
jne
cld
sub
jp
(bad)
jae
fbld
icebp
dec
(bad)
(bad)
push
and
push
sub
ss
into
push
mov
test
sub
jmp
(bad)
rcr
push
and
mov
xor
dec
cmp
(bad)
pop
div
add
push
push
(bad)
(bad)
jmp
or
shld
imul
cmc
adc
xor
jmp
sbb
ror
enter
out
(bad)
jmp
pop
hlt
cmp
push
adc
in
mov
or
stos
(bad)
(bad)
call
push
movs
(bad)
jne
add
push
shl
dec
adc
stos
cmp
rol
(bad)
call
jns
sti
stos
adc
cmps
int3
add
mov
jns
daa
test
(bad)
(bad)
(bad)
mov
pop
movs
adc
cmp
pop
mov
arpl
cmp
aad
outs
popa
aam
call
jmp
cmp
sbb
std
mov
js
ret
inc
sbb
xor
sbb
mov
(bad)
call
fsubr
xor
(bad)
add
adc
jne
fbld
cdq
add
xor
sahf
add
jle
jmp
adc
sbb
add
adc
ja
sar
shl
bound
jg
fcomip
div
cmp
xchg
icebp
cmps
mov
push
lods
sub
ins
repz
xchg
or
lea
lods
popf
push
rcpps
das
jp
movs
test
cmp
inc
add
xchg
xchg
xor
mov
xor
mov
pop
jbe
mov
or
jmp
inc
cmp
scas
jne
jmp
inc
retf
test
jp
inc
mov
push
stos
fwait
mov
xlat
(bad)
(bad)
call
push
sti
ja
sbb
out
stc
fst
popa
xor
push
loopne
mov
adc
pop
fdiv
xlat
mov
mov
sub
dec
fmul
fst
repz
call
adc
add
stos
loopne
push
sar
dec
clc
dec
xchg
add
cmc
iret
fild
(bad)
out
cli
jmp
xor
mov
hlt
xor
pushf
enter
aaa
jg
ss
xor
add
hlt
retf
das
mov
bound
cmps
(bad)
call
xchg
es
add
jbe
adc
loope
sbb
imul
(bad)
(bad)
(bad)
dec
gs
mov
cmc
xor
inc
or
mov
fdiv
add
cld
loop
xchg
aad
sbb
ins
loop
cmps
jne
xor
fiadd
cmp
arpl
call
add
imul
lock
push
cld
mov
stc
mov
mov
test
dec
jns
dec
out
sbb
(bad)
(bad)
(bad)
jmp
pop
in
cmc
jns
(bad)
add
xor
jne
ret
cmc
or
xor
cli
(bad)
mov
test
sub
stc
mov
repnz
push
mov
sar
hlt
ja
add
cmp
fcom
test
pop
pop
retf
mov
adc
(bad)
cmp
ins
mov
xchg
or
jp
(bad)
push
pop
ins
cmp
ss
mov
inc
(bad)
dec
mov
mov
mov
push
(bad)
xchg
movs
cld
(bad)
(bad)
jmp
ja
scas
(bad)
shl
clc
push
call
out
repz
adc
(bad)
jmp
jns
out
inc
sub
ins
int
cwde
dec
div
(bad)
push
hlt
dec
(bad)
(bad)
(bad)
jmp
push
sub
cmps
retf
xor
stc
mov
clc
in
call
int
jno
or
outs
sbb
ja
and
clc
sub
std
outs
loopne
rol
jno
mov
inc
xlat
jbe
xor
cli
jnp
pop
sbb
shr
(bad)
(bad)
cli
xor
mov
mov
xchg
ficom
mov
pop
std
ja
pop
in
jae
fadd
clc
hlt
pop
cmp
sub
ficomp
inc
or
(bad)
std
loope
sar
(bad)
pop
inc
fld
mov
push
add
dec
adc
sbb
movs
cmp
daa
mov
(bad)
inc
scas
aam
mov
jbe
adc
rcl
push
neg
adc
inc
stos
std
call
mov
and
mov
inc
cmp
sub
inc
inc
call
xchg
jne
cli
(bad)
call
and
push
mov
je
fwait
out
and
mov
hlt
js
jg
dec
cld
ret
mov
push
adc
inc
mov
cmp
stos
or
push
and
or
fdiv
mov
sar
add
cmp
(bad)
hlt
les
push
add
not
popa
cmp
in
jbe
xchg
mov
call
cli
jp
loope
fdiv
jl
call
stos
jns
mov
ins
in
jns
out
dec
idiv
push
cld
xlat
js
ja
xchg
fisubr
mov
push
fisttp
cwde
repz
xchg
jmp
(bad)
inc
jns
in
mov
xor
inc
stos
retf
shr
fldenv
xor
sti
pop
sbb
(bad)
(bad)
call
arpl
std
push
outs
test
jbe
sbb
arpl
aas
cmp
inc
jmp
retf
xor
arpl
cld
inc
and
xor
fs
push
cmc
(bad)
fiadd
cmp
(bad)
jmp
cmc
call
arpl
aam
cmp
js
mov
sbb
(bad)
(bad)
(bad)
stc
jp
cdq
clc
mov
xchg
test
and
mov
jbe
cdq
aaa
out
cld
(bad)
fbstp
push
xchg
jle
sbb
adc
cmp
add
inc
pop
pop
adc
pop
inc
mov
push
adc
push
sbb
jl
(bad)
(bad)
(bad)
dec
sahf
xor
cld
hlt
push
inc
and
push
mov
push
div
sub
mov
(bad)
(bad)
jmp
push
xlat
adc
xor
adc
lods
or
xlat
push
mov
add
(bad)
inc
or
(bad)
aam
sbb
dec
jns
sbb
push
push
mov
std
cmc
aam
retf
pop
or
cmp
sub
hlt
pop
repz
out
dec
out
push
cmp
retf
push
or
(bad)
call
xchg
add
js
call
mov
mov
mov
mov
cmc
add
lea
cdq
dec
retf
push
sbb
mov
out
js
dec
sub
inc
xchg
cmc
(bad)
(bad)
fcomp
adc
mov
push
cmp
and
(bad)
(bad)
push
ret
sbb
xor
mov
xchg
sti
pop
repz
and
push
fdivrp
imul
xor
fcomp
pop
in
push
ret
sbb
pop
and
(bad)
call
add
mov
mov
mov
pop
ret
push
movs
fwait
adc
push
add
xor
mov
jae
popf
push
es
pop
(bad)
jecxz
and
inc
pop
adc
xor
mov
es
(bad)
(bad)
call
jecxz
je
retf
adc
xchg
pop
call
(bad)
mov
jmp
sti
test
inc
dec
div
pop
bound
hlt
int3
fdiv
test
fwait
aam
xor
mov
xchg
pop
(bad)
dec
push
or
mov
dec
jecxz
js
sub
das
mov
cld
(bad)
(bad)
cmp
out
inc
call
imul
lods
or
inc
std
push
sti
int3
push
push
add
push
dec
imul
adc
imul
(bad)
(bad)
(bad)
(bad)
out
mov
mov
mov
cmc
outs
sub
mov
std
iret
call
std
imul
std
outs
clc
add
arpl
shr
gs
jb
and
(bad)
jg
pop
xchg
fmul
test
ret
pop
js
rcr
mov
(bad)
(bad)
(bad)
call
push
sbb
dec
clc
push
fcom
jne
and
adc
xchg
outs
clc
(bad)
(bad)
mov
imul
xchg
sub
pop
js
mov
ror
lods
or
pop
and
(bad)
call
jecxz
daa
mov
xchg
add
enter
add
lods
repz
loop
ja
push
dec
sar
call
leave
fcomp
add
xlat
mov
and
mov
xchg
fnstenv
daa
(bad)
mov
fild
mov
jne
sbb
dec
xchg
les
loop
jae
dec
sbb
push
std
sbb
(bad)
mov
xchg
dec
cmp
in
cmp
add
(bad)
adc
daa
xor
retf
imul
cld
push
rcl
fsub
cld
sar
(bad)
push
loop
in
mov
(bad)
call
add
sbb
adc
push
mov
and
test
sub
jae
or
mov
loop
cli
jle
push
or
add
in
shr
mov
bound
cli
(bad)
(bad)
dec
fiadd
push
xor
ins
movs
icebp
mov
xchg
add
call
cmp
adc
sbb
fwait
jns
jne
jle
js
push
out
xor
inc
pop
test
push
push
jmp
out
repz
cmp
cmps
in
jmp
inc
pusha
mov
mov
dec
movs
inc
sbb
mov
aam
dec
mov
push
fidiv
pop
(bad)
(bad)
jmp
sub
mov
mov
push
adc
ins
and
mov
inc
jmp
inc
stos
push
retf
call
sbb
outs
dec
(bad)
(bad)
(bad)
push
adc
cmp
imul
cs
or
jmp
dec
test
mov
xor
(bad)
(bad)
jmp
adc
xchg
loopne
shl
jbe
aaa
push
ret
mov
mov
jl
je
xchg
ret
cmp
xchg
fild
push
out
and
pop
push
mov
inc
pop
(bad)
(bad)
(bad)
call
imul
js
shr
hlt
add
outs
pop
add
mov
(bad)
mov
das
fcomp
xchg
mov
push
xor
mov
clc
(bad)
call
mov
mov
inc
jne
jnp
setbe
xor
pop
sbb
(bad)
(bad)
inc
idiv
xor
cli
cmps
jl
fiadd
popf
ins
es
sub
add
es
idiv
outs
clc
mov
push
cmp
sbb
aam
fwait
jo
mov
xor
(bad)
(bad)
(bad)
call
mov
or
lea
sub
pusha
test
and
clc
jle
pop
mov
aam
mov
(bad)
(bad)
(bad)
(bad)
(bad)
clc
shr
js
inc
shl
mov
in
cmp
ror
adc
mov
retf
pop
icebp
push
jae
xchg
jl
mov
rcl
jle
retf
test
(bad)
push
jmp
rcr
and
jne
jl
sbb
out
or
repz
(bad)
(bad)
(bad)
jmp
mov
cwde
xchg
out
test
leave
xor
add
xchg
stc
clc
dec
loopne
inc
es
test
enter
(bad)
(bad)
call
jns
push
jmp
inc
call
sbb
push
stc
mul
mov
(bad)
push
hlt
adc
in
leave
or
(bad)
pop
movs
add
pop
in
div
xchg
mov
xor
adc
(bad)
jmp
pop
cmc
sbb
inc
mov
arpl
jbe
sar
mov
dec
(bad)
call
cwde
mov
ret
lods
call
sti
sbb
xor
jns
adc
mov
or
(bad)
fcomip
(bad)
jmp
call
or
mov
xor
sbb
cmp
cli
(bad)
cmp
retf
xchg
aaa
xchg
inc
jne
add
sahf
inc
dec
pop
into
loopne
int3
std
fwait
mov
(bad)
(bad)
push
dec
pop
xchg
jbe
sbb
bound
mov
adc
(bad)
loopne
scas
clc
pop
loopne
push
jns
pop
push
gs
lods
sub
or
(bad)
(bad)
push
shl
enter
dec
adc
not
sbb
sti
jnp
fdivr
lds
pop
(bad)
dec
mov
in
mov
dec
cmp
stos
inc
(bad)
(bad)
dec
fdivr
adc
pop
and
dec
jg
(bad)
mov
lock
clc
aad
stc
add
push
test
(bad)
inc
cld
jbe
fs
scas
xor
jb
movs
adc
fcom
jno
mov
cmp
(bad)
(bad)
cli
js
in
outs
mov
xchg
shr
call
nop
mov
jae
xchg
fs
stos
jge
jns
imul
xor
adc
or
or
pop
add
(bad)
(bad)
mov
hlt
xor
push
xchg
cmps
(bad)
jmp
cmp
inc
imul
(bad)
stc
cmp
jbe
outs
cmc
jp
xchg
cmp
fdivr
(bad)
(bad)
cmp
xor
and
pop
pop
cmp
in
test
sbb
xor
ja
jne
jns
js
push
std
mov
push
pop
mov
into
cmp
push
(bad)
adc
(bad)
inc
mov
fcom
push
jae
cdq
xchg
mov
cmp
hlt
adc
call
push
or
rcl
arpl
ja
xor
cmp
ss
fs
and
or
cdq
xchg
ss
pop
jl
sbb
and
ss
(bad)
popf
push
(bad)
(bad)
aas
inc
jb
push
mov
dec
xchg
mov
loop
test
pop
cmp
(bad)
dec
fldcw
jnp
pop
dec
mov
xchg
pushf
stos
inc
hlt
sbb
push
and
add
cmp
jmp
mov
pop
mov
cli
imul
push
pusha
push
jmp
fcom
and
int3
loopne
cs
and
inc
adc
inc
cmp
inc
or
(bad)
(bad)
(bad)
fdiv
mov
xor
imul
mov
add
fs
jp
sbb
fiadd
rcr
or
pop
pushf
outs
(bad)
push
jecxz
pop
mov
push
dec
sub
adc
xor
mov
pop
gs
jo
push
mov
dec
sbb
adc
(bad)
(bad)
(bad)
(bad)
push
movs
jbe
rcr
add
or
and
cli
out
adc
ins
js
sub
xor
js
sbb
or
rcr
sub
(bad)
cmp
sbb
cmp
jmp
js
push
sub
jne
das
cli
jmp
out
lea
bnd
pop
pop
icebp
sub
fdivr
rcl
imul
mov
sbb
mov
and
(bad)
push
inc
fdivr
neg
loopne
hlt
cwde
ficomp
push
dec
push
int3
adc
(bad)
dec
popa
inc
sbb
hlt
lods
loopne
adc
aas
mov
aad
push
adc
(bad)
call
mov
mov
cld
jle
pop
xchg
(bad)
adc
dec
scas
mov
jp
aad
fcom
dec
or
shr
repz
(bad)
loopne
jmp
fwait
aaa
ss
xchg
mov
(bad)
(bad)
jmp
cmc
cmp
xor
pop
(bad)
xchg
cmp
js
idiv
xor
(bad)
(bad)
jmp
test
call
xchg
inc
idiv
dec
adc
sub
aad
(bad)
call
adc
xor
mov
cli
into
cmc
mov
mov
add
mov
shl
(bad)
(bad)
jg
jecxz
jno
cli
dec
shl
sbb
icebp
or
push
or
in
(bad)
(bad)
(bad)
mov
repz
push
(bad)
and
jno
xchg
loope
out
push
push
test
adc
inc
std
call
mov
je
test
mov
(bad)
inc
cld
std
push
call
sbb
inc
arpl
mov
mov
add
out
pop
jbe
enter
jle
jbe
cmc
in
sahf
(bad)
(bad)
(bad)
jmp
loopne
loop
jne
or
mov
je
mov
fsubr
clc
mov
lods
mov
in
(bad)
(bad)
call
cmps
mov
cwde
or
and
cdq
hlt
repz
test
xor
inc
mov
(bad)
(bad)
jmp
loopne
sbb
jbe
jo
xchg
enter
jge
ret
mov
shl
call
mov
ss
mov
std
push
add
into
add
movs
icebp
dec
jbe
xrelease
in
jb
(bad)
fbld
loopne
inc
push
(bad)
fscale
scas
and
test
call
inc
shl
retf
push
push
mov
push
xor
push
outs
call
xchg
jg
dec
or
push
xchg
jb
push
cld
adc
jge
inc
jne
aam
adc
mov
xchg
and
mov
and
outs
xor
std
dec
lock
inc
jae
(bad)
sub
or
(bad)
(bad)
call
or
cmp
(bad)
pop
add
jbe
sub
jbe
pop
mov
dec
call
jmp
adc
and
lods
cmp
fs
imul
jmp
add
ret
cs
cwde
xor
xor
(bad)
(bad)
dec
jb
imul
xchg
push
sub
pop
mov
mov
push
cwde
add
hlt
(bad)
fldenv
push
loope
pop
add
ficom
test
jg
jne
in
inc
pop
cmc
push
out
push
mov
mov
in
ins
cmp
mov
mov
sbb
pop
aas
repz
jmp
pop
lods
sbb
(bad)
(bad)
jg
mov
fidiv
push
sub
aam
sbb
ins
pop
xor
sbb
aam
jg
(bad)
jg
mov
shl
outs
cwde
jae
sbb
std
sbb
std
mov
sbb
inc
mov
xchg
or
xchg
lods
xor
ficom
fcomip
(bad)
push
movs
mov
and
out
int
pop
rol
retf
pop
sbb
out
jle
push
jbe
adc
call
xchg
adc
sbb
sbb
add
rol
nop
sbb
hlt
inc
push
cmc
fcomp
cmps
or
(bad)
repnz
stc
ss
pop
jbe
cmp
mov
sbb
jns
adc
mov
movs
imul
(bad)
(bad)
(bad)
mov
adc
dec
sti
aam
mov
mov
sar
pop
sbb
popf
aaa
mov
(bad)
(bad)
(bad)
cmp
jno
adc
sub
fld
sbb
pushf
fcom
and
xor
fisttp
js
retf
ret
mov
adc
sbb
std
hlt
xchg
push
aas
dec
push
sub
dec
sbb
mov
mov
mov
(bad)
dec
mov
jno
push
or
js
test
push
jbe
std
(bad)
dec
lahf
pop
mov
xchg
xor
xor
lods
(bad)
push
pcmpgtw
push
mov
div
psllq
(bad)
cmc
call
call
pop
cwde
aad
hlt
dec
or
pop
aaa
loop
sbb
call
loopne
xchg
test
jbe
adc
or
adc
das
fdiv
mov
mov
adc
test
adc
jo
cmc
add
call
or
jnp
cmp
xor
jbe
clc
mov
rol
xor
icebp
mov
mov
jne
pop
jo
mov
rol
jns
mov
adc
cld
xchg
xor
inc
in
sub
add
xor
daa
xchg
push
into
xchg
dec
stc
jp
or
sbb
mov
adc
(bad)
mov
cmc
hlt
dec
sub
inc
jmp
stc
cmp
div
call
push
adc
(bad)
(bad)
push
or
pop
pop
mov
mov
mov
out
pop
or
std
xchg
jb
mov
xor
(bad)
(bad)
cmp
in
ficom
push
pusha
cwde
mov
in
hlt
inc
mov
xchg
leave
mov
xor
mov
(bad)
push
pop
mov
jle
or
sbb
call
adc
(bad)
dec
xchg
shl
repz
mov
cmp
add
sti
or
(bad)
(bad)
(bad)
jmp
push
pop
adc
stos
add
cmc
pop
sbb
inc
mov
movs
mov
sbb
shl
or
outs
pop
xchg
jns
fist
sub
div
(bad)
(bad)
push
dec
cmp
(bad)
mov
(bad)
adc
in
xchg
sbb
clc
mov
fdivr
js
ja
and
pop
daa
sbb
mov
pop
jnp
push
mov
movs
xor
add
(bad)
popf
and
fnstenv
mov
fadd
jbe
test
(bad)
(bad)
(bad)
fld
(bad)
cmp
push
mov
jmp
pop
sbb
sbb
lods
mov
(bad)
(bad)
(bad)
mov
jns
fmul
push
jno
aas
mov
add
cmp
js
(bad)
(bad)
push
repz
jl
cdq
dec
jle
mov
sbb
outs
mov
and
dec
jno
(bad)
(bad)
call
test
adc
popa
or
sub
test
shr
fyl2x
out
(bad)
mov
cmp
fst
in
sti
xor
ja
mov
test
mov
jg
push
jl
fst
loopne
test
repnz
pop
cmc
ror
inc
int
and
loop
inc
loop
cmp
adc
inc
push
pop
inc
push
xor
xor
(bad)
call
jno
mov
arpl
pop
push
movs
sub
cmp
lods
std
jns
das
call
jmp
jae
jp
dec
or
loope
jmp
or
pop
xor
(bad)
(bad)
(bad)
jg
xor
cdq
ds
ror
xlat
adc
cmp
call
js
sti
(bad)
(bad)
(bad)
push
jl
jbe
sub
jb
movs
test
adc
push
push
retf
pop
add
call
(bad)
push
mov
and
in
jbe
cs
pop
inc
cmc
xchg
add
xlat
ins
repnz
xor
clc
clc
sub
stos
jb
push
pop
cmp
mov
retf
hlt
dec
mov
call
or
pop
mov
pop
ja
jecxz
fistp
push
cld
cdq
int
jnp
icebp
add
shl
pop
xchg
inc
jno
cwde
dec
(bad)
cmp
sbb
ret
jecxz
adc
cli
xchg
lods
jbe
jl
xor
mov
loop
add
in
mov
xlat
jle
cli
js
mov
(bad)
dec
cli
inc
mov
scas
sub
jns
cdq
ja
mov
push
aam
test
loope
idiv
adc
(bad)
(bad)
(bad)
(bad)
mov
cli
fdivr
pop
cli
inc
fadd
xchg
fimul
jb
mov
jecxz
mov
xchg
(bad)
(bad)
(bad)
call
gs
lahf
add
mov
dec
ret
mov
fiadd
fwait
cli
add
cli
push
ds
(bad)
dec
movs
xor
inc
cdq
sbb
mov
ss
dec
fsubr
aaa
sar
jmp
in
into
jo
cli
jecxz
mov
enter
mov
push
call
fdivr
imul
push
std
mov
push
in
mov
mov
mov
mov
fcom
ja
mov
mov
pop
push
outs
mov
test
fbld
dec
mov
cmp
sahf
add
dec
std
loop
xchg
add
sbb
pop
not
sub
inc
push
rol
xor
sbb
loop
xor
push
mov
sbb
aas
cdq
cli
add
mov
fldenv
or
pop
push
mov
in
pop
cmp
mov
sbb
inc
sbb
cmp
push
sub
push
retw
jmp
push
cs
or
mov
pop
pop
and
pop
xor
xchg
sbb
mov
outs
sbb
in
(bad)
in
pusha
add
mov
inc
mov
mul
cli
inc
fistp
in
(bad)
call
add
mov
and
(bad)
loop
dec
mov
push
pusha
adc
mov
cmp
xor
mov
movs
and
ret
test
out
test
add
(bad)
(bad)
(bad)
fild
imul
inc
sbb
adc
mov
push
xchg
pop
mov
push
sar
call
sbb
jecxz
mov
mov
cmc
push
add
inc
shl
nop
xchg
and
out
pop
fidivr
or
or
clc
ins
fmul
call
push
and
aam
clc
push
push
adc
push
sti
adc
movs
shr
add
sbb
shl
or
movs
repz
fadd
ss
adc
jns
jmp
dec
sbb
dec
cmp
xor
xlat
fs
and
push
loopne
push
push
into
push
call
(bad)
(bad)
call
sub
cmp
add
mov
inc
cmp
stos
stos
call
loopne
not
fmul
or
cwd
pop
lods
fmul
nop
(bad)
(bad)
(bad)
call
aad
cli
and
cmc
sub
lods
inc
cmp
js
adc
xchg
outs
pop
push
movs
dec
int3
cli
shl
inc
sbb
mov
xchg
fisttp
out
outs
rcr
jle
cdq
push
xchg
cwde
movs
std
cmp
(bad)
(bad)
call
test
cmp
add
xor
or
cs
jecxz
jl
inc
(bad)
fxtract
xchg
xchg
data16
cwde
sbb
enter
leave
xor
jle
lock
push
repz
ja
mov
repz
jne
adc
(bad)
mov
imul
(bad)
movs
dec
out
dec
sbb
call
call
pop
jo
clc
mov
das
mov
inc
(bad)
aaa
mov
cmp
jbe
std
mov
cmp
call
push
popa
loope
adc
pop
repnz
cs
cli
add
out
(bad)
cmp
jae
cmc
xor
(bad)
loopne
mov
and
fsubr
jl
(bad)
(bad)
inc
movs
cmp
dec
xchg
or
push
mov
mov
xchg
cmc
jo
mov
pushf
(bad)
mov
and
xchg
ret
and
(bad)
rcl
adc
cmps
(bad)
cmp
or
je
mov
es
xor
cmp
mov
xor
dec
loopne
popa
xchg
sub
jmp
(bad)
adc
jmp
call
xor
mov
push
inc
outs
ret
pop
sbb
jbe
adc
sub
mov
in
int
push
pop
es
xchg
rcl
sub
and
sbb
std
push
and
inc
mov
shl
repz
push
inc
push
adc
adc
jnp
(bad)
jmp
idiv
inc
jns
repnz
(bad)
fsub
xchg
xchg
call
hlt
paddd
test
js
push
sub
sbb
fst
push
sub
and
sysenter
push
dec
rcl
mov
push
loope
repnz
mov
mov
imul
(bad)
push
and
dec
loope
mov
sar
mov
lods
(bad)
(bad)
(bad)
jg
mov
xor
pusha
add
hlt
add
(bad)
scas
cmc
lea
(bad)
(bad)
jg
push
add
dec
xchg
adc
(bad)
xchg
jne
xchg
jne
add
mov
std
mov
in
repz
mov
xor
or
push
js
(bad)
push
sbb
jle
mov
xchg
jecxz
ja
jp
push
fcmovnb
cmc
pop
cmp
jle
call
je
xor
cmp
les
xchg
stos
fwait
pop
(bad)
(bad)
(bad)
call
clc
xor
ret
mov
test
cli
mov
aad
dec
mov
jmp
xchg
js
test
(bad)
jmp
in
mov
test
shl
sub
popa
xor
push
(bad)
jmp
cli
adc
mov
and
cmp
mov
mov
test
add
xchg
mov
aas
add
cmc
inc
jb
mov
(bad)
jmp
add
push
loopne
enter
js
inc
mov
push
test
stos
retf
mov
jmp
mov
pop
cmp
mov
or
std
cld
rcr
in
cmp
(bad)
push
jbe
call
dec
bound
gs
xchg
mov
pop
std
xor
mov
(bad)
(bad)
cmp
and
cmc
mov
lods
div
dec
jae
add
mov
aad
sbb
(bad)
call
stc
mov
add
test
push
jbe
pusha
ror
fdivr
or
or
repz
cmp
mov
push
xchg
adc
(bad)
call
adc
cmp
sbb
xor
xlat
add
mov
(bad)
(bad)
jmp
dec
jne
daa
jp
jbe
pop
mov
adc
(bad)
and
mov
(bad)
(bad)
jmp
mov
dec
(bad)
loop
fiadd
sbb
(bad)
cmp
stc
sub
mov
mov
xor
cld
and
xchg
mov
jb
cmp
or
jecxz
or
mov
xchg
or
jne
add
xor
gs
stos
(bad)
push
push
repz
and
test
cmp
repz
sbb
jno
cld
sub
(bad)
inc
sbb
cmp
xchg
pop
sbb
out
sub
mov
out
popa
jbe
fwait
sar
(bad)
call
jp
and
movs
jbe
add
aam
push
mov
call
dec
repz
test
inc
es
sti
neg
mov
(bad)
call
mov
ret
jbe
xor
pop
or
inc
jbe
stos
jne
cmp
loopne
dec
pop
je
(bad)
(bad)
jmp
cmp
les
add
mov
sbb
adc
or
xchg
aas
inc
cmc
cmc
adc
adc
and
xor
fcom
ds
mov
sbb
test
std
call
pop
sbb
mov
into
mov
mov
jmp
xchg
push
shl
sti
mov
sbb
(bad)
inc
mov
dec
add
xchg
jae
mov
adc
(bad)
(bad)
call
rcl
xchg
hlt
sar
push
xchg
sti
xor
pop
(bad)
xchg
mov
ret
(bad)
xlat
mov
(bad)
(bad)
(bad)
jl
dec
lea
retf
adc
adc
bound
xchg
cld
jmp
add
and
add
ja
cmc
lods
int3
jp
cwde
aad
xchg
(bad)
(bad)
call
jp
mov
mov
mov
jle
fcomp
mov
ins
sbb
inc
imul
mov
jae
xor
jns
pop
sbb
aad
xor
fdivr
xchg
fstp
sbb
pop
cmp
stos
outs
addr16
or
adc
mov
mov
xor
call
rcr
ret
sbb
ficom
loope
not
mov
jmp
aaa
repz
popf
(bad)
cmp
js
fidivr
inc
push
aad
push
mov
repnz
pop
push
add
jbe
push
ret
cli
lods
adc
in
mov
sti
mov
cli
pop
fild
mov
xchg
sub
mov
cs
sti
lods
dec
mov
cld
or
cmp
sbb
xor
mov
(bad)
call
scas
sbb
dec
call
test
sub
cli
pop
sbb
add
pop
xor
mov
dec
fld
and
ss
setnp
pop
inc
into
ret
xor
loopne
clc
push
xchg
xchg
les
add
and
xchg
cmps
dec
xchg
(bad)
jmp
mov
jp
adc
xchg
loopne
out
jp
mov
test
adc
jns
(bad)
(bad)
call
cmp
cmp
push
xor
aad
jne
inc
adc
pop
es
call
mov
cmp
or
retf
sbb
call
pop
scas
cli
mov
(bad)
cld
ret
xor
sbb
mov
jge
and
out
jb
mov
or
movs
shl
outs
fcmovb
cmp
push
mov
cdq
mov
sar
(bad)
(bad)
fnstcw
call
addr16
inc
mov
test
and
in
mov
in
adc
dec
repz
inc
movs
push
sbb
jb
add
(bad)
(bad)
idiv
std
adc
xadd
add
jecxz
nop
test
out
aam
jl
(bad)
mov
outs
ja
push
push
jbe
inc
pushf
push
pop
mov
(bad)
call
aam
retf
and
add
jl
adc
jo
pusha
push
add
call
jne
cdq
retf
sbb
movs
movs
retf
adc
(bad)
call
jmp
sti
popf
ja
add
jae
(bad)
arpl
cdq
cmp
jg
dec
push
pop
hlt
scas
dec
adc
inc
cmp
fs
out
in
jmp
mov
shl
(bad)
push
test
sbb
repz
imul
jg
icebp
stos
aas
xchg
xor
adc
sub
mov
cmp
push
inc
jbe
sti
dec
call
sahf
sbb
sbb
push
popa
and
(bad)
test
imul
(bad)
jmp
call
js
sahf
and
jle
aaa
pextrw
xor
adc
(bad)
call
out
cmp
add
mov
call
js
jae
mov
fdiv
(bad)
(bad)
jmp
mov
stc
outs
or
pop
sbb
repz
xchg
aaa
and
mov
in
(bad)
call
xchg
adc
pavgb
xor
jo
imul
mov
repnz
dec
rep
jne
aaa
std
push
aam
xchg
sub
nop
sbb
cmp
fdiv
sbb
ror
xchg
popa
retf
push
xor
jmp
inc
mov
adc
std
stos
xor
push
mov
aaa
cld
in
sti
cmp
fs
sti
sub
pop
cwde
and
xchg
inc
lods
sbb
test
mov
das
and
not
arpl
(bad)
(bad)
(bad)
push
sti
out
mov
adc
cli
cmp
push
jns
cdq
mov
jns
pop
xchg
and
jns
push
mov
inc
jecxz
mov
lea
push
fild
mov
adc
ins
stos
scas
pop
xor
xchg
loope
movs
and
ret
jae
fiadd
mov
(bad)
mov
or
xor
retf
hlt
add
cmp
add
mov
mov
mov
(bad)
(bad)
(bad)
out
cli
xchg
stc
jb
add
xchg
ss
int
jle
js
dec
add
(bad)
(bad)
(bad)
out
mov
add
imul
mov
or
loopne
aas
mov
cld
mov
in
js
and
and
lock
dec
scas
test
inc
movs
sub
movs
xor
dec
stos
scas
jmp
not
inc
or
sbb
cmp
(bad)
dec
mov
popf
fdiv
push
add
inc
in
jle
shr
cli
repnz
mov
call
int3
add
iret
sbb
mov
cli
rcr
out
bound
xchg
cmc
and
dec
inc
sub
jnp
pop
xor
cmc
or
jae
ins
cmp
add
jg
cmp
push
(bad)
jbe
add
ss
pop
xor
aaa
mov
xchg
or
dec
clc
mov
(bad)
sar
push
jne
mov
das
cwde
je
(bad)
(bad)
(bad)
push
sub
sub
ja
(bad)
aas
int3
repz
fistp
rcl
popa
mov
push
dec
div
cmp
mov
aam
or
(bad)
(bad)
(bad)
jmp
mov
xor
dec
outs
mov
cmp
xor
int
cmp
and
test
(bad)
sti
or
cmp
call
push
xlat
(bad)
(bad)
jg
into
sbb
mov
bound
pop
popf
jno
dec
loopne
test
jo
(bad)
(bad)
(bad)
jg
jae
(bad)
cwde
jne
sbb
ss
sbb
rcr
dec
adc
(bad)
dec
ret
mov
dec
hlt
(bad)
dec
add
mov
jns
ror
(bad)
(bad)
(bad)
(bad)
mov
cmc
popf
push
hlt
xor
xor
cld
cmp
xchg
sbb
icebp
add
mov
pushf
loop
sbb
jp
(bad)
jmp
neg
jmp
cmp
mov
pop
repz
add
nop
je
jl
imul
pusha
jbe
jecxz
xchg
or
test
inc
mov
out
mov
(bad)
(bad)
(bad)
(bad)
jge
dec
imul
or
mov
xchg
or
jns
jmp
aam
(bad)
(bad)
(bad)
std
push
cmp
adc
fldcw
in
sti
(bad)
fimul
jns
repnz
xor
xor
mov
(bad)
(bad)
push
mov
js
mov
out
fsub
xor
mov
(bad)
(bad)
(bad)
mov
je
imul
in
stc
xchg
inc
pusha
or
(bad)
(bad)
inc
fcom
inc
sahf
xor
jp
mov
adc
push
xchg
sub
(bad)
cmp
pushf
push
ret
sub
xor
ja
mov
ss
pop
xor
cld
(bad)
call
dec
push
jno
cli
sub
add
inc
cld
(bad)
jg
jp
dec
out
(bad)
adc
push
ss
sbb
push
in
arpl
call
push
mov
inc
mov
imul
aaa
js
dec
ret
jmp
rcr
daa
sbb
lods
xchg
call
cmc
sbb
and
std
adc
cmp
xchg
lea
sti
les
mov
stos
rcr
add
jno
mov
std
test
pop
jmp
hlt
xchg
pop
add
add
jo
push
or
and
(bad)
inc
adc
or
js
movs
repz
ja
retf
xchg
test
adc
push
mov
in
sbb
xor
(bad)
mov
lahf
push
add
jmp
fmul
and
mov
pop
icebp
or
mov
and
cmp
pop
cwde
cdq
(bad)
(bad)
call
inc
ret
jmp
sbb
pop
cmp
mov
dec
jle
call
pop
mov
inc
xor
repnz
scas
out
pop
std
repz
jne
out
(bad)
jmp
idiv
(bad)
(bad)
(bad)
cmp
fdivr
adc
sti
and
push
repz
ret
fst
(bad)
add
or
in
aad
sub
in
test
sti
sbb
clc
fdivr
(bad)
(bad)
jg
push
mov
or
fprem
mov
call
stc
cli
mov
push
jle
outs
xor
outs
jbe
lahf
xor
dec
repz
mov
or
hlt
loope
(bad)
jmp
movs
fldcw
xchg
xchg
clc
pop
add
or
mov
stos
jle
cmp
dec
arpl
cs
(bad)
(bad)
(bad)
mov
ins
mov
push
sahf
and
jnp
add
mov
cdq
xchg
mov
retf
ret
cmc
(bad)
(bad)
(bad)
push
call
mov
fstp
imul
pop
mov
neg
imul
(bad)
neg
or
call
jl
pop
inc
jbe
js
(bad)
stos
lods
jbe
call
loopne
in
add
popf
xor
inc
or
adc
outs
call
jg
mov
add
cs
xchg
sti
jp
add
sbb
dec
(bad)
fadd
mov
jns
adc
cmp
jb
push
repz
hlt
push
loopne
push
xor
cli
cmp
inc
jmp
test
push
jae
add
mov
or
pop
ins
push
movs
jns
stos
pop
pop
stc
push
shl
mov
rcr
js
into
inc
pop
cld
(bad)
jmp
call
js
jl
mov
retf
mov
sbb
js
(bad)
(bad)
(bad)
push
repz
imul
or
aas
push
cld
push
or
scas
scas
sbb
in
loopne
push
cdq
call
push
cmp
mov
jp
mov
or
fsubp
gs
int3
icebp
inc
adc
bound
(bad)
push
stc
mov
imul
cli
into
ja
sbb
fs
clc
(bad)
dec
ds
xor
xchg
xchg
push
or
mov
sar
fnstsw
xchg
(bad)
(bad)
(bad)
call
clc
cmp
shl
stos
in
and
and
cdq
jno
movs
dec
mov
xchg
(bad)
inc
adc
(bad)
dec
xlat
aad
dec
jbe
jl
adc
xchg
xchg
test
and
dec
movs
test
pop
test
sub
(bad)
(bad)
(bad)
dec
xchg
(bad)
fcmovb
cwde
xor
retf
in
or
jne
cmp
add
test
sub
cmp
daa
scas
mov
dec
mov
pop
imul
push
fwait
cmp
(bad)
(bad)
mov
xor
pop
jl
nop
std
sar
xor
push
lods
jmp
sbb
cmps
push
idiv
aad
hlt
call
repnz
dec
stos
xor
jmp
add
dec
jp
cli
sub
pop
mov
std
not
bound
jmp
push
in
xor
mov
mov
push
(bad)
inc
das
mov
cli
idiv
xchg
cdq
jle
scas
mov
jp
push
fidivr
cmc
push
jmp
cli
inc
stos
icebp
js
jae
mov
ja
clc
rcr
gs
jle
cmp
repz
loopne
in
mov
dec
cwde
cs
cdq
test
cmp
cmc
stc
test
js
rol
mov
cs
(bad)
inc
pop
repz
and
jne
stc
push
call
(bad)
(bad)
jmp
sub
cmp
mov
stos
pop
adc
mov
push
adc
test
sbb
push
loopne
cli
or
adc
pop
fs
xor
dec
dec
and
call
inc
je
xchg
add
div
sbb
jns
or
fdiv
test
and
mov
mul
jo
test
jbe
mov
and
hlt
and
ins
dec
add
mov
and
js
or
fs
jbe
idiv
(bad)
(bad)
dec
shr
mov
xchg
sbb
add
pop
adc
mov
sbb
cmc
(bad)
dec
rcr
adc
jp
push
nop
mov
out
sub
outs
cmp
(bad)
(bad)
push
inc
loopne
dec
mov
cmp
xchg
cmc
sti
stos
in
adc
js
inc
hlt
rcr
push
mov
(bad)
(bad)
(bad)
push
jns
loope
xchg
loope
stc
or
cmp
stos
add
or
mov
mov
jmp
mov
mov
push
mov
pop
not
push
mov
out
ret
jb
cli
xor
sar
sbb
push
ds
cli
(bad)
mov
into
or
cs
out
or
and
paddw
and
call
jp
ret
sub
mov
mov
ins
loopne
cmc
js
sub
mov
push
loope
mov
push
sbb
xor
jo
into
data16
jmp
adc
mov
sub
mov
lock
inc
mov
retf
jns
fsubr
sub
inc
fbstp
clc
(bad)
push
cmc
mul
jge
sbb
mov
dec
cmc
cdq
pusha
daa
fisttp
pop
hlt
pop
push
sbb
test
push
test
dec
mov
jmp
sbb
int3
mov
adc
jne
xchg
pop
(bad)
cdq
xchg
fidivr
(bad)
(bad)
jle
fldcw
xchg
enter
mov
stc
sbb
out
cmc
sar
push
cmc
int3
stc
repz
popa
test
jmp
jbe
jno
(bad)
out
add
cmp
(bad)
jg
xchg
scas
and
out
mov
mov
cli
xor
pushf
retf
xchg
(bad)
(bad)
jg
loope
ror
push
cmp
xchg
sbb
je
mov
xor
add
outs
cli
lods
push
cmp
shl
push
jne
cmps
lods
cld
mov
or
pop
stc
adc
scas
repz
mov
pop
inc
cdq
imul
(bad)
push
jl
les
cld
jp
fdivp
push
iret
mov
add
mov
into
std
(bad)
(bad)
mov
ja
xchg
aam
pushf
sbb
mov
out
jbe
jae
pop
mov
inc
lods
cmp
mov
adc
push
add
arpl
mov
inc
pop
(bad)
(bad)
call
outs
ins
cmc
jns
loope
jae
cmp
mov
(bad)
push
push
jbe
mov
cmp
call
sti
or
mov
cli
addr16
jae
sbb
cld
into
stc
jp
xchg
sar
(bad)
(bad)
push
sbb
xor
outs
in
in
sbb
lods
sbb
div
(bad)
(bad)
(bad)
call
and
fsubr
neg
stc
jmp
repz
push
stc
push
sbb
out
sub
loope
aaa
cmp
(bad)
js
shr
sar
ret
add
dec
repz
mov
(bad)
(bad)
push
jbe
mov
mov
mov
push
jae
inc
sar
sbb
mov
fcomip
das
clc
mov
xchg
push
sub
pop
div
jb
fs
inc
(bad)
jmp
xchg
call
call
les
xchg
add
push
fnstenv
(bad)
test
cmc
adc
xor
or
icebp
cli
push
cmp
cdq
clc
cmp
stos
xlat
ss
add
scas
imul
xchg
push
jb
jmp
ss
(bad)
inc
xor
clc
sbb
clc
xchg
(bad)
mov
sub
call
adc
jne
outs
sbb
adc
jecxz
cmps
jp
add
fwait
out
or
dec
inc
push
cmp
(bad)
jmp
(bad)
cmc
cmc
outs
cmc
inc
jno
sbb
imul
add
inc
out
cli
mov
fstp
mov
xor
loopne
shl
add
test
jge
push
loopne
idiv
pop
push
cld
lods
add
imul
pop
dec
jmp
xor
jbe
and
or
cli
xor
add
popf
jp
pop
popa
stos
cmc
jl
fs
push
sti
xor
repz
jnp
pop
(bad)
inc
jns
pop
pop
clc
and
jbe
inc
ds
in
div
or
(bad)
mov
jbe
movs
pop
inc
jp
push
cmp
or
test
inc
pushf
mov
ds
add
push
push
jle
imul
stos
sbb
loope
into
loopne
push
inc
mov
mov
icebp
jne
lods
sbb
inc
mov
mov
stc
mov
sti
sbb
stos
mov
ins
add
repz
hlt
fsubr
arpl
push
mov
shl
mov
jae
push
push
push
clc
push
push
fst
cmc
xchg
mov
adc
arpl
das
mov
outs
ins
aam
push
out
xor
movs
mov
pop
ja
mov
mov
mov
jne
xor
shl
and
neg
fimul
mov
(bad)
inc
push
jne
jbe
inc
repz
in
call
mov
jmp
add
mov
enter
call
mov
add
(bad)
fild
call
or
in
in
test
repz
test
push
fdivr
jb
push
or
add
lea
les
into
fadd
not
add
imul
jle
sub
or
jne
pop
fs
sbb
adc
icebp
call
ins
das
add
in
stos
add
mov
mov
sbb
or
adc
stos
inc
cwde
mov
retf
mov
(bad)
call
mov
cld
in
pop
cmp
(bad)
xor
imul
(bad)
(bad)
jg
mov
xchg
xchg
hlt
or
sub
jns
scas
sbb
lods
retf
(bad)
(bad)
(bad)
jmp
jl
dec
mov
call
add
neg
or
stos
mov
or
(bad)
(bad)
(bad)
cmp
fmul
cdq
push
mov
pop
adc
fcom
fstp
mov
push
(bad)
(bad)
(bad)
jmp
loopne
movs
(bad)
mov
push
fcom
xchg
cli
mov
fild
mov
(bad)
(bad)
jmp
pop
ds
push
push
imul
jge
push
movs
xlat
jl
(bad)
dec
and
push
in
add
sbb
mov
ins
xchg
mov
mov
add
rol
call
adc
sbb
adc
xor
cmp
aad
outs
push
in
push
aaa
cmp
je
loop
js
or
or
add
xor
mov
ds
sti
pop
popa
dec
test
and
mov
sub
push
pop
pushf
mov
in
cmp
addr16
pop
repz
xor
stc
std
jmp
xchg
cmp
ds
jecxz
das
and
aad
cs
or
sbb
shl
lods
mov
fbstp
repz
add
jns
inc
nop
stc
cmc
(bad)
(bad)
call
or
cmp
push
jns
jl
pop
rol
neg
dec
loopne
mov
stos
cmp
(bad)
(bad)
(bad)
call
add
push
add
mov
enter
ss
test
jns
(bad)
(bad)
(bad)
push
adc
std
mov
loopne
dec
xchg
fdiv
push
and
aam
rcr
adc
jg
(bad)
xor
loopne
pusha
bnd
mov
ret
adc
pushf
xchg
(bad)
(bad)
(bad)
call
dec
ror
repz
jbe
es
mul
loop
outs
nop
neg
push
sub
add
out
pop
popa
cld
arpl
(bad)
xchg
shr
xchg
in
dec
jae
js
call
(bad)
(bad)
dec
push
jl
cli
call
xchg
mov
xchg
sub
cmc
jae
dec
loopne
mov
mov
(bad)
(bad)
(bad)
mov
mul
mov
cmp
xchg
fsubr
rcl
ja
push
mov
(bad)
(bad)
(bad)
call
lea
adc
mov
pop
lods
and
pop
cmp
aam
(bad)
(bad)
(bad)
call
mov
imul
push
gs
call
mov
pop
test
cmc
std
add
(bad)
jg
in
scas
bound
mov
push
neg
or
mov
adc
jmp
push
div
(bad)
fs
push
cmp
icebp
mov
pop
or
cwde
mov
movs
mov
cmc
call
daa
cmp
pop
fdiv
arpl
or
out
jmp
xchg
adc
je
cli
cmp
xchg
lahf
jmp
jmp
shr
push
add
jmp
adc
sbb
push
push
(bad)
(bad)
(bad)
dec
retf
test
stos
outs
add
mov
jns
cmc
inc
fwait
in
or
xchg
jg
(bad)
call
cs
xchg
(bad)
div
dec
je
ja
ins
addr16
add
(bad)
mov
pop
js
data16
(bad)
(bad)
(bad)
cmp
call
js
aas
mov
sub
adc
and
jns
xor
inc
dec
xor
js
inc
and
add
aaa
dec
pop
fcmovnu
mov
jg
(bad)
jns
mov
mov
stos
pop
test
lods
cmp
js
mov
(bad)
push
mov
js
mov
idiv
repz
test
aaa
mov
adc
(bad)
(bad)
(bad)
out
adc
or
xchg
and
adc
jb
call
aam
push
(bad)
in
jmp
xchg
xor
sbb
repnz
mov
dec
sbb
div
imul
or
mov
sbb
retf
repz
sar
std
ss
mov
out
cli
dec
push
adc
pop
cli
ja
std
push
mov
inc
mov
push
push
pop
jmp
ja
sbb
add
repz
hlt
mov
out
repz
das
cli
sti
ss
push
xor
jmp
div
xor
out
dec
and
jb
stos
adc
mov
xchg
ss
xor
sbb
inc
adc
xor
(bad)
fbstp
repz
sub
je
callw
cmp
repz
push
and
retf
push
ss
aam
jns
push
ins
adc
add
sbb
or
push
push
mov
pop
vmaxsd
mov
push
cmp
adc
add
pop
dec
jmp
xchg
mov
sub
das
clc
call
(bad)
inc
outs
mov
jg
add
mov
jge
jmp
dec
clc
sti
out
xlat
jbe
jno
adc
cli
clc
mov
stc
xchg
mov
lock
(bad)
cmp
neg
jbe
inc
sbb
xchg
ficom
lds
popf
mov
and
jmp
cli
(bad)
jge
hlt
(bad)
cmp
and
xor
jmp
xchg
call
cmp
(bad)
(bad)
(bad)
call
cdq
cdq
add
mov
cmp
push
inc
dec
xchg
js
mov
call
cli
(bad)
(bad)
(bad)
(bad)
call
cmp
jns
or
sbb
mov
cmc
xchg
xor
adc
mov
cmps
icebp
(bad)
dec
push
xor
lds
stos
inc
jbe
xor
cmp
jmp
sahf
mov
xchg
mov
jp
adc
(bad)
repnz
and
dec
xor
push
xchg
nop
add
xchg
inc
test
or
mov
or
mov
call
jbe
stc
sbb
shl
sub
xor
(bad)
jmp
push
movs
lahf
xor
or
call
push
sbb
mov
or
cmc
(bad)
call
mov
(bad)
mov
(bad)
fnstcw
xor
inc
cmp
(bad)
(bad)
(bad)
inc
jbe
lods
push
mov
aaa
lods
movs
inc
lods
or
movs
mov
cmp
(bad)
jg
cmc
(bad)
jge
and
push
cmp
mov
and
fmul
(bad)
(bad)
js
cmc
enter
mov
jle
inc
mov
in
jae
push
out
dec
cmp
ret
fcom
(bad)
(bad)
(bad)
push
and
lods
push
sub
stos
ins
cmp
repz
loopne
retf
fs
cmp
cmp
or
lods
jbe
(bad)
(bad)
(bad)
dec
inc
sbb
push
call
push
mov
in
sbb
ins
sub
pusha
js
add
jg
(bad)
push
jbe
out
pop
pop
fs
lods
ds
adc
(bad)
aam
push
(bad)
xchg
(bad)
(bad)
(bad)
inc
push
cmp
jae
mov
mov
fcomip
(bad)
repz
push
xchg
inc
aaa
or
call
fcom
call
bnd
mov
ja
jb
das
data16
add
add
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
mov
popf
das
in
repz
add
sub
sahf
xchg
hlt
idiv
push
xor
mov
xchg
jns
(bad)
(bad)
push
mov
loope
jecxz
pop
pop
test
sub
fistp
jmp
(bad)
aam
sub
jle
dec
xor
cdq
cwde
jl
icebp
mov
cmps
or
push
sahf
cmp
(bad)
(bad)
(bad)
(bad)
jmp
movs
push
dec
adc
stc
mov
mov
imul
add
(bad)
cmp
(bad)
(bad)
dec
jno
shl
add
jbe
jle
(bad)
xor
data16
(bad)
es
cdq
je
or
cld
mov
adc
push
dec
inc
icebp
jo
adc
retf
aam
push
add
jecxz
pop
inc
or
sbb
(bad)
lock
clc
push
hlt
mov
sub
sbb
or
rol
sbb
outs
xchg
les
(bad)
(bad)
jg
pop
sbb
cmp
fnstsw
ins
fstp
imul
icebp
xor
sub
sub
xor
loopne
mov
jg
push
mov
dec
inc
jns
lea
data16
hlt
or
jne
imul
or
repz
add
aas
sbb
xchg
push
pop
nop
fprem1
(bad)
iret
mov
add
or
inc
jle
adc
shl
les
mov
push
xchg
clc
jmp
cwde
mov
inc
ins
cmc
mov
mov
xchg
pop
cld
jmp
cmp
bound
mov
(bad)
(bad)
mov
scas
rol
or
sbb
jo
out
sbb
(bad)
call
arpl
inc
or
push
mov
xchg
jns
pop
mov
std
jmp
adc
(bad)
inc
cmc
ss
xchg
(bad)
(bad)
(bad)
(bad)
jg
fs
fst
rol
js
mov
push
outs
daa
xor
das
mov
pop
dec
add
(bad)
(bad)
call
jae
mov
dec
outs
lock
push
jmp
mov
mov
mov
out
test
push
sahf
loop
cmps
sbb
and
mov
cdq
adc
(bad)
stos
fadd
sar
mov
mov
dec
(bad)
pop
pushf
mov
mov
ss
jo
xchg
push
test
hlt
imul
stc
mov
loop
jne
(bad)
fld
(bad)
mov
stos
fstp
lea
in
(bad)
jg
add
repz
jle
call
addr16
push
mov
in
(bad)
dec
xor
popf
lds
add
mov
ds
cli
(bad)
cmp
sbb
mov
test
sbb
sbb
(bad)
jmp
push
js
addr16
movs
dec
retf
adc
xchg
dec
js
push
ja
jne
push
(bad)
push
jle
xchg
(bad)
mov
fld
mov
adc
or
mov
jmp
adc
(bad)
call
add
adc
les
movs
push
dec
mov
xchg
jne
shl
push
mov
ficom
div
push
retf
mov
(bad)
jmp
shl
adc
es
aad
aam
xor
sbb
and
mov
xlat
call
cld
rol
jbe
push
idiv
add
ja
loope
cli
(bad)
(bad)
jg
sbb
add
in
lods
xor
movs
in
push
push
xor
outs
out
pop
push
gs
sub
push
das
clc
jmp
loop
xchg
arpl
sub
sub
mov
(bad)
(bad)
call
dec
or
add
push
test
pop
jns
call
js
mov
xor
(bad)
call
std
adc
inc
ja
adc
xchg
xchg
js
data16
repz
pop
mov
mov
icebp
(bad)
inc
pop
cmp
mov
dec
and
inc
clc
(bad)
jg
and
adc
leave
loop
cmc
movs
cmp
jmp
cld
outs
mov
rep
sbb
rol
inc
xor
sar
bswap
push
movs
js
pop
adc
clc
xchg
imul
xor
aaa
add
imul
add
lods
call
movs
lahf
sub
mov
(bad)
(bad)
(bad)
mov
leave
mov
sti
pop
addr16
xor
inc
imul
inc
cwde
cmp
pop
xor
(bad)
push
jno
add
mov
mov
adc
hlt
cld
hlt
push
(bad)
inc
out
call
sub
pop
sub
dec
fcomp
jle
push
mov
mov
push
cmc
xor
inc
mov
mov
cmp
js
mov
mov
xor
rcl
sbb
mov
adc
adc
js
dec
add
pushf
jmp
cmps
adc
cmc
je
push
icebp
repz
not
and
(bad)
mov
in
call
(bad)
fsub
xor
dec
(bad)
(bad)
call
loope
pop
mov
push
xchg
mov
loopne
push
mov
mov
(bad)
(bad)
push
xor
xor
xor
push
mov
inc
daa
imul
loop
inc
std
cmp
cld
mov
jmp
add
cmp
adc
adc
jbe
out
cmp
(bad)
call
adc
xor
(bad)
push
stc
jae
fmul
adc
mov
les
ficomp
mov
inc
mov
sti
jmp
adc
icebp
sbb
mov
or
xchg
xchg
(bad)
(bad)
call
push
xchg
cs
or
add
cmps
(bad)
ja
cli
lods
shl
pop
xor
(bad)
push
and
jbe
jne
bound
jbe
mov
push
or
out
fcomip
push
repz
imul
mov
mov
push
cmp
lods
outs
add
cmp
(bad)
jg
jae
jo
mov
mov
out
ins
mov
call
mov
enter
je
cmp
movs
sbb
inc
fsubr
adc
(bad)
mov
add
fabs
push
out
pop
cmp
fcmovu
sbb
adc
xor
(bad)
ss
mov
cld
(bad)
(bad)
jmp
jno
rcr
xchg
imul
(bad)
fdiv
sahf
fs
jns
fs
popa
(bad)
and
movs
(bad)
ds
aas
jle
std
mov
call
pop
dec
push
mov
loop
ja
sbb
jns
cli
xchg
test
mov
mov
mov
dec
or
rcl
pushf
aad
retf
bound
jmp
fdiv
jmp
jne
jmp
sar
sbb
push
shl
call
xchg
into
push
fcomip
(bad)
push
mov
mov
mov
rcl
jne
out
sar
(bad)
(bad)
call
in
or
adc
cwde
std
sbb
nop
sub
pop
jl
ret
jo
popa
sbb
(bad)
(bad)
(bad)
call
push
sbb
js
cmps
rcr
fdivrp
or
or
shr
add
(bad)
jmp
sbb
mov
mov
adc
jns
mov
loopne
push
dec
data16
(bad)
imul
sbb
movs
fisub
jns
adc
(bad)
inc
push
jno
jns
inc
mov
mov
sbb
movs
aas
leave
sub
ret
add
sbb
and
sar
out
jbe
mov
xchg
(bad)
fmul
mov
cmp
mov
jns
cmc
sbb
(bad)
push
outs
pop
jns
repz
dec
stos
inc
xchg
aam
fldenv
adc
(bad)
(bad)
(bad)
push
cli
or
xchg
jbe
xor
imul
adc
adc
les
sbb
icebp
not
arpl
call
repz
mov
adc
addr16
mov
fld
push
and
test
dec
sub
outs
cld
sub
cwde
popa
es
xor
(bad)
(bad)
call
jae
xchg
mov
stc
cli
ins
call
inc
arpl
in
mov
sar
(bad)
push
inc
xchg
sti
pop
xchg
sub
repz
scas
sbb
(bad)
jg
jno
nop
dec
xor
ds
cli
js
cmp
add
jne
or
inc
arpl
xor
gs
push
fidivr
jecxz
inc
jg
(bad)
call
(bad)
sbb
or
cmp
adc
inc
(bad)
mov
in
lods
sub
loopne
call
cmp
cmp
nop
xchg
aas
js
jg
sbb
mov
jge
out
(bad)
(bad)
(bad)
call
and
fucomi
cmps
das
ja
pop
xor
cmc
pop
pop
int
mov
mov
adc
xchg
(bad)
jbe
cmp
(bad)
jmp
aam
push
or
aas
jbe
lock
xchg
cmp
sbb
xor
push
cdq
xchg
add
repz
std
(bad)
dec
jno
xor
cwde
repz
sub
push
xor
outs
sbb
(bad)
dec
xchg
mov
push
fadd
and
inc
std
xor
xchg
(bad)
sar
aaa
or
fist
iret
sahf
js
cld
jl
sbb
(bad)
(bad)
jg
pop
mov
adc
sbb
xor
sbb
pop
loope
stc
inc
mov
lock
(bad)
push
aas
ja
jmp
xchg
retf
add
jp
daa
mov
les
jmp
into
hlt
(bad)
(bad)
(bad)
(bad)
clc
iret
call
xchg
fwait
adc
pop
mov
sar
int3
and
push
sbb
mov
call
xor
call
sbb
or
cmp
call
xor
clc
sbb
(bad)
call
or
repz
sbb
push
cmp
mul
mov
dec
xor
and
cmc
cli
pop
hlt
(bad)
dec
inc
sbb
add
inc
stc
sbb
add
out
mov
dec
inc
jecxz
ins
xchg
push
xor
fwait
cmc
xchg
lea
jns
mov
push
(bad)
jmp
rol
es
je
pusha
mov
mov
(bad)
(bad)
(bad)
jmp
inc
shl
mov
sub
retf
aam
sti
es
ins
jp
rcl
dec
dec
inc
push
fdiv
jbe
rcr
daa
cli
in
pushf
cld
(bad)
(bad)
fild
jecxz
push
hlt
outs
call
or
mov
sbb
mov
sbb
push
movs
outs
cmp
movnti
in
sti
mov
(bad)
cmp
idiv
(bad)
(bad)
(bad)
mov
call
jns
add
push
xchg
push
add
mov
mov
adc
or
jmp
push
das
mov
jns
dec
test
pop
adc
cmp
(bad)
jmp
dec
dec
repz
pusha
xchg
ins
gs
sbb
ficom
cli
jbe
(bad)
mov
imul
or
jmp
inc
sti
lea
jmp
(bad)
(bad)
(bad)
push
repz
popf
fwait
jns
hlt
lahf
shr
call
push
outs
(bad)
(bad)
push
push
or
jae
wbinvd
ror
in
xchg
adc
cli
ja
inc
mov
inc
jle
sub
test
test
dec
sbb
pop
clc
(bad)
inc
sbb
movs
shl
(bad)
push
loopne
push
movs
inc
add
sbb
dec
not
out
fcomp
daa
mov
adc
in
cmp
cmp
movs
aaa
aam
mov
dec
mov
cld
(bad)
(bad)
out
shl
fsub
mov
jae
jle
mov
xor
test
(bad)
call
mov
cli
push
sbb
xchg
push
adc
data16
sahf
addr16
pop
mov
loop
(bad)
jmp
sub
pop
cmp
xchg
add
push
xchg
xor
or
cmc
mov
mov
or
div
and
enter
add
(bad)
(bad)
dec
pop
out
mov
sbb
xor
xor
js
mov
mov
jmp
(bad)
(bad)
mov
push
je
and
xor
sub
jg
push
mov
push
mov
push
fidiv
cmc
icebp
jg
(bad)
call
pop
adc
mov
repz
jae
call
outs
int
call
es
jg
in
adc
mov
sar
cmp
je
clc
(bad)
jmp
sub
ss
dec
and
or
cmp
xchg
in
add
and
dec
jbe
movs
stos
mov
push
retf
jecxz
jmp
fimul
imul
test
jmp
mov
mov
adc
mov
mov
aad
(bad)
(bad)
(bad)
cli
sbb
aaa
call
ficomp
lods
cmp
pop
lds
test
push
xchg
lods
cmp
jns
call
je
shl
and
jae
sbb
sahf
mov
add
adc
sbb
cmc
cwde
pop
sub
div
cmps
div
movsx
push
movs
pushf
into
xor
call
(bad)
cmp
mov
mov
sub
in
push
sbb
arpl
and
dec
xor
or
cmp
add
mov
(bad)
push
out
data16
imul
sahf
inc
not
sbb
(bad)
fbstp
fsubr
sub
shl
gs
mov
jmp
(bad)
inc
or
add
xor
cwde
shl
mov
push
cli
fistp
movs
sti
int3
repz
pusha
sub
dec
or
call
mov
es
xchg
xor
adc
and
repnz
inc
dec
pop
sbb
cmp
xchg
xor
dec
call
jnp
or
cmp
dec
sbb
mov
rol
mov
cmp
mov
sbb
push
mov
rol
or
sbb
(bad)
jns
daa
ja
loopne
xor
(bad)
mov
mov
repz
xchg
ret
add
(bad)
(bad)
call
aam
jae
or
mov
xchg
hlt
mov
or
mov
loopne
push
mov
adc
ds
arpl
inc
mov
mov
sub
out
inc
push
sbb
pop
rdmsr
xlat
push
dec
jbe
xor
cs
(bad)
(bad)
dec
rcl
add
or
add
outs
mov
mov
sahf
mov
jl
jg
xlat
enter
into
mov
jns
test
not
push
(bad)
(bad)
dec
in
sbb
not
mov
jno
dec
add
xor
call
jno
adc
mov
lea
sbb
xchg
push
cld
(bad)
(bad)
push
mov
pop
push
aad
cmc
jnp
adc
pushf
push
xchg
test
xchg
stos
dec
(bad)
in
pop
cmp
push
push
pop
icebp
stc
sbb
xor
xchg
push
jp
mov
call
lock
pop
out
mov
movs
dec
js
cli
mov
(bad)
call
(bad)
repz
stos
mov
jb
(bad)
jmp
loop
cmp
loop
xchg
sub
dec
fsubr
pop
push
out
(bad)
(bad)
(bad)
cli
sti
lods
mov
dec
mov
or
cli
test
mov
fiadd
adc
(bad)
call
ret
cli
cdq
arpl
adc
hlt
xor
call
mov
jmp
enter
jns
jae
jg
push
rcr
push
std
aas
jns
xor
out
inc
std
xor
mov
add
in
cdq
push
inc
sbb
movs
xchg
mov
jg
sbb
test
sub
push
aaa
pop
jns
jmp
stos
cli
pop
adc
cmp
leave
fs
xor
cmp
repz
hlt
push
sbb
fmul
fiadd
pop
jne
cld
and
(bad)
(bad)
call
call
popa
stc
fcmovu
xor
shl
push
dec
aas
mov
aas
push
cli
push
add
jmp
ret
mov
jp
mov
push
jl
mov
and
push
add
cmp
icebp
and
jne
and
cmps
mov
aam
(bad)
jg
es
gs
add
ins
loope
add
(bad)
push
jle
mov
push
adc
jne
push
mov
daa
pop
pop
jbe
movs
repnz
push
movs
adc
test
and
push
push
stc
jo
aaa
adc
fcom
movs
ins
xor
stos
cs
inc
xor
jbe
in
sub
imul
(bad)
(bad)
mov
imul
cli
lods
adc
enter
jmp
adc
(bad)
(bad)
(bad)
(bad)
cld
(bad)
repnz
pop
jae
push
sbb
pop
jecxz
jbe
jns
push
xor
adc
sbb
mov
mov
inc
sub
jae
xchg
jl
pmaxsw
mov
clc
(bad)
dec
and
in
int3
clc
cmp
push
cld
xchg
jae
fdivr
inc
inc
mov
push
dec
cmc
cli
sbb
(bad)
(bad)
call
mov
mov
add
add
or
inc
jns
and
adc
clc
inc
mov
clc
out
mov
lods
test
(bad)
(bad)
(bad)
push
test
pop
push
sub
xchg
and
cmp
sar
fwait
cmp
pop
add
jns
sbb
call
mov
add
scas
cli
(bad)
(bad)
ficom
xor
xor
loopne
sbb
pop
xchg
xchg
lds
nop
mov
scas
sbb
push
sub
je
shl
mov
pop
mov
cld
call
cld
cli
(bad)
popa
test
pop
nop
ins
rol
and
xor
hlt
push
clc
push
idiv
adc
cmp
add
les
scas
inc
mov
jne
adc
jp
inc
scas
bound
out
push
xor
cmps
jns
adc
lods
adc
stc
imul
cmp
neg
mov
idiv
dec
shl
mov
repz
ret
pop
sbb
add
(bad)
jg
pop
in
(bad)
stc
mov
dec
outs
out
push
cmp
xor
mov
jmp
xchg
push
in
push
out
jae
mov
clc
stc
int
retf
aad
stos
cmp
xchg
cld
jns
add
icebp
sbb
cli
hlt
sti
pop
sub
inc
inc
(bad)
(bad)
(bad)
push
call
stc
cli
shl
int3
dec
emms
mov
mov
pop
and
sar
je
jns
mov
jns
cmp
adc
sar
std
lock
mov
jle
inc
mov
(bad)
adc
and
aad
jle
imul
xlat
mov
xchg
mov
cmp
or
popa
add
push
mov
cdq
mov
dec
stos
movs
push
(bad)
mov
adc
mov
je
std
push
mov
bound
das
xor
hlt
into
cli
mov
jb
jl
cmp
mov
sti
leave
repz
(bad)
cs
adc
sbb
repz
sbb
gs
xchg
movs
cdq
js
sbb
(bad)
(bad)
push
push
sbb
push
test
cmp
xor
push
outs
sbb
sub
fisub
shl
mov
rcl
jg
adc
fsub
jmp
push
jae
ret
es
(bad)
(bad)
(bad)
jmp
imul
retf
inc
js
jle
jns
popa
dec
test
sbb
int3
repnz
(bad)
jmp
outs
or
aaa
push
lea
mov
push
int
or
mov
repnz
mov
clc
cdq
fcomp
pop
cld
sub
clc
out
or
fnsave
inc
push
jae
push
pusha
jae
movs
mov
add
call
mov
push
inc
cs
mov
inc
xchg
mov
jns
mov
fdivr
call
jae
fst
push
jle
call
mov
fild
sub
mov
inc
mov
(bad)
jmp
add
push
test
push
call
adc
sub
clc
inc
outs
cli
(bad)
call
repz
pop
es
mov
cmc
push
cmp
adc
push
xor
sbb
pusha
popf
mov
fcmovb
ds
js
sbb
jmp
(bad)
(bad)
(bad)
cmp
aas
fs
cli
pusha
jmp
push
inc
popf
cmc
int3
sti
arpl
push
jae
jle
pop
mov
(bad)
in
jbe
or
mov
adc
adc
mov
sbb
jl
jne
mov
cdq
jne
cmp
jmp
scas
repz
(bad)
(bad)
push
xchg
fs
idiv
retf
sbb
enter
xchg
jns
inc
or
cwde
daa
sti
movs
jg
call
jae
mov
call
jae
outs
pop
popa
add
cmp
sub
(bad)
(bad)
(bad)
(bad)
out
push
ret
add
jbe
repz
repnz
out
jne
jae
push
cmc
lods
pop
jae
cmp
(bad)
inc
or
and
cli
std
mov
xchg
fisub
sbb
mov
stos
sbb
and
inc
dec
mov
(bad)
(bad)
call
xchg
push
xor
call
pop
add
jbe
sti
dec
jle
xchg
dec
jmp
mov
sbb
dec
jnp
(bad)
(bad)
out
clc
dec
pop
jl
sti
push
jmp
push
sub
jp
lea
int
(bad)
(bad)
(bad)
push
pop
jle
inc
inc
sbb
jns
sbb
mov
mov
pop
jae
fdiv
scas
clc
mov
gs
mov
ret
push
pop
xchg
sub
dec
adc
bound
cmp
mov
and
(bad)
(bad)
(bad)
dec
ds
xchg
add
sti
adc
not
aaa
mov
xor
sbb
jmp
push
into
cmc
inc
and
adc
jns
dec
mov
xchg
cmp
retf
jle
or
out
mov
mov
sbb
xchg
add
sti
shl
pop
(bad)
outs
shr
dec
cmp
jne
sbb
loope
dec
jne
jmp
inc
mov
sbb
iret
push
mov
(bad)
fwait
stos
push
fmul
outs
mov
mov
leave
mul
pop
pop
pop
push
fisttp
stc
mov
fprem1
or
clc
or
(bad)
mov
mov
mov
xlat
mov
imul
or
nop
imul
call
dec
repz
repnz
(bad)
push
ret
call
(bad)
call
movlhps
loop
push
fidivr
jl
jg
call
pusha
stos
dec
std
cmc
les
jne
sti
or
sbb
shl
or
(bad)
(bad)
(bad)
call
test
jbe
dec
scas
cmp
rcr
sub
sbb
xor
sti
or
out
jmp
(bad)
(bad)
clc
fucomp
icebp
enter
cwde
mov
repz
mov
adc
cli
jge
add
sub
(bad)
jg
call
dec
adc
ins
loope
sbb
jae
(bad)
dec
push
cmp
fld
(bad)
push
arpl
test
inc
aad
push
add
cmps
mov
jp
test
pop
adc
jns
(bad)
jmp
inc
icebp
mov
mov
mov
cmc
sbb
loope
std
in
add
les
sti
movs
xchg
into
xchg
repnz
pop
push
cmc
xor
add
push
push
fwait
clc
imul
add
mov
push
mov
cmps
sub
cmps
fnstcw
shl
xor
xchg
cmp
push
mov
into
jmp
shr
cmps
add
ja
stc
pop
pop
loopne
inc
sbb
mov
jne
cmp
cmc
push
add
ror
icebp
cmp
sar
fdiv
fs
push
sbb
fld
jb
cmp
jge
jg
or
movs
repz
mov
mov
inc
jae
push
sub
rol
sbb
push
cld
jg
sbb
xor
es
(bad)
push
jecxz
cmp
push
and
and
addr16
(bad)
xchg
into
push
retf
sbb
bound
jns
push
xor
cs
push
xor
mov
dec
mov
pop
jbe
cmp
jg
mov
sub
gs
push
sbb
push
pop
push
xlat
adc
(bad)
call
add
xor
jno
and
call
inc
xchg
mov
jns
add
stc
(bad)
(bad)
(bad)
inc
sti
mov
sbb
cmp
jns
adc
and
jmp
outs
addr16
or
(bad)
(bad)
dec
retf
aad
std
out
or
push
inc
jne
sub
add
xor
xlat
retf
push
mov
jmp
cli
inc
mov
sbb
popa
nop
sbb
xchg
retf
jbe
mov
(bad)
jmp
sar
leave
dec
or
adc
push
dec
mov
(bad)
(bad)
dec
xchg
in
cs
movs
pop
xchg
cmp
ins
adc
test
in
(bad)
(bad)
(bad)
call
or
scas
adc
jno
dec
inc
fbld
xor
push
imul
aaa
cld
inc
data16
jl
sub
test
daa
inc
or
xor
aad
mov
stc
(bad)
int
pop
push
adc
(bad)
jg
pop
jbe
cdq
(bad)
cli
xor
mov
int
mov
retf
sar
or
sbb
movs
retf
(bad)
cmc
add
add
push
aad
push
xor
mov
pop
jno
xchg
stos
mov
cld
mov
loope
mov
add
push
jbe
dec
idiv
(bad)
mov
mov
pop
add
xor
hlt
push
leave
hlt
loop
(bad)
jmp
xor
jns
pop
in
mov
jl
xchg
pop
jecxz
or
(bad)
mov
or
add
xchg
xor
movs
xchg
cmp
out
mov
mul
idiv
pop
out
mov
adc
std
dec
sbb
cmp
jmp
mov
aam
adc
inc
mov
pop
les
cmp
repz
je
pop
sub
xor
push
or
cwde
add
jmp
mov
xor
jnp
xor
dec
pusha
jmp
pop
loop
cmp
ficomp
int3
xchg
jecxz
cmp
test
div
cmp
or
data16
cli
push
sbb
(bad)
(bad)
mov
mov
(bad)
cmp
fnstcw
push
sbb
push
cli
neg
jns
cmp
(bad)
call
(bad)
call
fidivr
outs
adc
sbb
iret
nop
in
cli
lea
cmp
test
fsub
sub
push
push
adc
add
(bad)
(bad)
cli
mov
call
jae
or
jne
(bad)
hlt
jle
icebp
cmp
cmp
push
sbb
cmp
adc
ins
push
repz
or
(bad)
(bad)
(bad)
(bad)
push
adc
cmp
clc
mov
cmp
jle
div
pop
cmp
and
jmp
xor
add
cli
pop
jmp
(bad)
(bad)
jmp
or
or
cld
xchg
push
mov
add
adc
(bad)
jmp
ja
dec
add
cmp
fimul
add
push
mov
movs
stos
enter
jae
(bad)
jmp
inc
sbb
xchg
mov
xor
mov
(bad)
(bad)
(bad)
out
pusha
adc
movs
cwde
mov
cmp
mov
dec
dec
push
fmul
fs
out
add
(bad)
(bad)
(bad)
push
imul
xor
repnz
(bad)
test
mov
push
(bad)
(bad)
(bad)
call
add
call
popa
inc
test
adc
jae
push
out
shl
or
loope
jbe
or
jmp
jbe
cmp
in
mov
jge
(bad)
(bad)
fcomip
test
ror
mov
jmp
aaa
pop
pop
cmc
jbe
(bad)
push
dec
(bad)
push
xor
call
ss
repnz
push
aad
out
jns
cmp
and
jecxz
pop
xchg
pop
dec
je
pop
adc
pop
ss
int3
fadd
lods
jecxz
jbe
pop
cmc
push
(bad)
test
ret
(bad)
push
sti
adc
repz
lock
push
mov
data16
mov
xor
fnstenv
or
mov
dec
xchg
movs
scas
clc
pop
loopne
push
inc
xchg
repz
jne
leave
pop
cmp
push
arpl
aam
mov
mov
lods
cli
adc
hlt
ficomp
call
adc
loope
(bad)
(bad)
fdiv
and
cld
je
jecxz
mov
imul
push
adc
fstp
(bad)
mov
mov
outs
fcmovnu
add
mov
aaa
cld
(bad)
(bad)
mov
sbb
push
or
in
adc
sbb
lock
(bad)
adc
call
hlt
idiv
(bad)
hlt
fmul
mov
xlat
aaa
arpl
call
shl
mov
iret
in
jbe
movs
xchg
call
jne
(bad)
jmp
push
dec
push
dec
push
jle
sti
lods
not
pop
icebp
out
push
jns
push
jbe
or
mov
and
jbe
ret
mov
ret
sbb
es
mov
sbb
mov
jns
(bad)
jg
cmp
inc
je
mov
mov
jns
jl
cmc
jl
adc
pop
mov
mov
fadd
add
adc
mov
or
cdq
jbe
fdivrp
(bad)
push
adc
sbb
xlat
push
cmp
xchg
shl
jecxz
(bad)
cmc
add
int3
jecxz
inc
jge
jne
jmp
leave
push
sti
dec
add
adc
movs
xchg
fcom
scas
xor
xor
pop
int3
sub
aad
(bad)
cmp
imul
cmp
pop
ins
xor
(bad)
adc
sar
sbb
pop
stc
(bad)
push
sar
mov
xchg
mov
in
xchg
xchg
adc
dec
pop
(bad)
dec
and
std
fisttp
cmp
and
pop
imul
mov
cmp
adc
idiv
pusha
xlat
sbb
test
retf
jg
dec
mov
jl
es
mov
retf
fisubr
jbe
movs
mov
cmc
nop
cmps
or
mov
sub
push
pop
ins
mov
ror
mov
aaa
sbb
mov
mov
cmc
sub
xchg
ja
aam
div
test
(bad)
adc
dec
aad
fld
xor
daa
test
(bad)
(bad)
(bad)
push
sub
push
cmp
mov
pop
fsubrp
aad
lea
js
in
sbb
dec
outs
jno
mov
mov
mov
ficom
adc
(bad)
push
mov
cld
cmp
mov
ds
fwait
cdq
mul
cmp
mov
cmp
das
aam
popf
and
jecxz
adc
xor
mov
mov
idiv
sbb
inc
add
out
dec
cli
js
mov
jbe
xor
test
ret
or
or
xchg
daa
cmp
jno
dec
aad
js
push
add
xchg
iret
cmps
(bad)
pop
ficomp
mov
leave
xlat
imul
popf
ficomp
ins
add
xor
sbb
push
div
xlat
cdq
pop
sbb
cmp
push
mov
(bad)
(bad)
jmp
sub
(bad)
adc
inc
(bad)
sbb
rcr
add
call
push
(bad)
jo
push
or
mov
xlat
and
fadd
loop
mov
mov
mov
or
xchg
pop
cli
cli
xor
cmp
xor
ss
inc
test
cmp
ret
dec
cmp
add
stos
(bad)
aaa
cld
data16
(bad)
aam
dec
cmp
imul
mov
or
cmp
(bad)
jmp
in
call
cmp
cmp
push
loopne
and
adc
test
jmp
cli
dec
lock
jb
mov
lea
cwde
rcl
jp
xor
pushf
jg
(bad)
push
in
pop
fsubp
add
fistp
push
cdq
dec
cmp
sbb
xchg
mov
push
js
sub
and
push
cli
pop
push
or
pushf
pop
cwde
jle
jb
jo
fdiv
sbb
and
(bad)
(bad)
(bad)
out
push
adc
add
jmp
hlt
div
sbb
xchg
jnp
dec
in
jns
xor
(bad)
fcomip
(bad)
mov
jle
sbb
jbe
fidivr
dec
test
pop
xchg
mov
loop
mov
dec
loopne
dec
in
push
imul
mov
neg
loopne
lods
lea
xor
inc
(bad)
mov
and
iret
and
in
push
std
inc
cli
(bad)
lods
repnz
push
sbb
xor
mov
imul
loopne
xor
push
add
push
push
adc
inc
or
sbb
retf
popa
cmp
pop
sti
sbb
scas
(bad)
(bad)
(bad)
(bad)
out
xchg
mov
jmp
mov
push
test
fnstenv
sub
jbe
frstor
(bad)
(bad)
(bad)
(bad)
mov
push
ret
enter
adc
lods
icebp
imul
or
call
cli
cli
push
jnp
or
mov
ss
test
ss
(bad)
(bad)
inc
(bad)
clc
push
fld
push
jns
xor
xor
pop
(bad)
cmp
(bad)
(bad)
jmp
xchg
mov
je
jae
les
push
retf
mov
lea
cmp
std
in
(bad)
(bad)
(bad)
call
or
dec
add
cld
ds
ret
hlt
mov
mov
xor
retf
fsubr
(bad)
(bad)
(bad)
(bad)
fdivr
inc
dec
dec
sbb
sbb
mov
aad
mov
mov
mov
pop
jns
(bad)
(bad)
(bad)
jmp
dec
push
inc
sub
cmc
idiv
or
ss
cmp
jp
(bad)
(bad)
inc
fidivr
cli
fdiv
jnp
or
cmps
adc
sbb
mov
mov
cs
cmp
clc
in
fcom
push
ja
aas
cmp
inc
ror
retf
mov
xchg
js
jle
sub
xchg
lahf
cmp
(bad)
(bad)
inc
clc
int3
cmc
jmp
cmp
sbb
inc
sbb
repnz
(bad)
(bad)
inc
sbb
repz
enter
inc
test
stc
sbb
jns
pop
xor
sub
das
daa
inc
jns
fild
loopne
jae
or
test
sti
hlt
mov
(bad)
(bad)
dec
stc
je
div
adc
nop
das
push
push
xchg
cmp
iret
setp
out
not
fs
jbe
retf
xor
pop
mov
call
out
adc
mul
adc
repnz
dec
aad
jmp
and
mov
test
js
int3
imul
fwait
repz
mov
jne
xchg
sbb
(bad)
or
mov
aaa
pop
rep
cmps
inc
ficomp
mov
mov
jmp
cs
lahf
cdq
call
jmp
call
sbb
int
cmp
js
fcom
stos
repz
ds
jbe
(bad)
(bad)
push
ja
repnz
push
dec
mov
adc
xchg
mov
push
mov
js
or
mul
cmp
pop
pop
push
adc
sbb
call
(bad)
mov
repz
and
xor
mov
call
es
mov
test
jle
movs
cmp
clc
adc
pusha
es
mov
lock
push
stc
lods
pop
scas
jle
push
repz
(bad)
(bad)
(bad)
push
sbb
add
ja
xlat
pop
cmps
call
dec
sub
(bad)
call
(bad)
(bad)
(bad)
aas
sbb
scas
shr
mov
xor
test
mov
xchg
int3
push
aad
pop
xchg
cmps
inc
movs
ss
add
(bad)
call
jns
test
add
fidiv
stos
or
stc
adc
mov
push
sub
add
stc
fidiv
jne
inc
call
les
sbb
ss
xor
cmp
adc
(bad)
(bad)
(bad)
call
and
popa
push
scas
in
fstp
sti
jmp
jne
or
jns
xor
(bad)
(bad)
call
sbb
ss
cmp
mov
cmp
popf
out
int
(bad)
(bad)
dec
gs
imul
and
jmp
popf
jne
xchg
push
cmp
sbb
adc
add
shl
jnp
xchg
fsub
(bad)
(bad)
jg
push
jae
imul
retf
ja
xchg
inc
add
test
cmp
(bad)
(bad)
push
outs
pop
inc
in
push
dec
or
and
xor
fcomp
xchg
pop
xchg
add
push
movs
pop
or
(bad)
dec
gs
retf
cli
and
mov
mov
add
sbb
(bad)
inc
mov
aaa
mov
mov
imul
fst
adc
mov
cmc
mov
push
jns
dec
mov
jae
sahf
inc
mov
add
(bad)
dec
movs
xor
cmp
gs
mov
or
push
call
(bad)
(bad)
(bad)
fnstenv
movs
jle
mov
sbb
cwde
inc
jecxz
call
je
inc
mov
and
lds
repz
dec
fdivr
bound
jne
mov
call
jne
sub
mov
mov
mov
int3
dec
dec
adc
push
(bad)
(bad)
call
shl
aas
lods
mul
std
test
add
es
hlt
(bad)
(bad)
inc
push
jl
mov
ret
jno
cmp
xchg
test
xchg
repz
ss
cld
call
mov
or
cmc
sbb
and
outs
cmc
xor
cmp
(bad)
(bad)
push
jne
jle
add
or
cdq
clc
jge
pop
inc
dec
imul
hlt
gs
fisttp
push
fwait
push
push
and
push
sub
int3
in
cmp
pop
test
test
mov
aad
dec
stc
clc
std
stos
es
jmp
mov
mov
movs
dec
leave
clc
mov
mov
(bad)
call
pop
cmps
pop
inc
jl
pop
outs
cld
ret
clc
or
xchg
neg
push
xor
dec
gs
addr16
aad
(bad)
call
xor
pop
mov
pushf
rcr
clc
mov
pop
dec
(bad)
mov
or
movs
clc
cbw
test
dec
cmp
clc
xlat
das
clc
in
stos
inc
das
dec
pop
scas
imul
sub
ins
(bad)
lods
dec
(bad)
jmp
repz
lods
pop
pop
scas
in
int3
clc
jg
bound
xchg
icebp
out
movs
repnz
movs
dec
mov
(bad)
(bad)
call
mov
mov
pushf
mov
std
out
or
gs
sub
push
ins
jno
cmp
leave
jl
in
(bad)
repz
pop
clc
cs
mov
aaa
(bad)
loopne
clc
pusha
(bad)
(bad)
(bad)
call
dec
sub
gs
xchg
push
hlt
outs
inc
inc
xlat
ss
xor
xchg
dec
aad
aad
inc
push
inc
and
adc
dec
mov
push
(bad)
(bad)
(bad)
(bad)
jg
mov
inc
ja
pop
clc
lods
lock
je
retf
cmp
call
cmps
ret
cmc
dec
(bad)
call
repnz
out
dec
mov
outs
pop
push
clc
jno
mov
cmp
or
loopne
cmps
(bad)
(bad)
(bad)
clc
dec
sti
cli
sbb
add
leave
gs
jl
sahf
clc
retf
push
ss
(bad)
call
(bad)
aas
and
jnp
call
cmp
sti
out
(bad)
clc
aad
in
add
(bad)
(bad)
jmp
jb
jmp
int
ins
in
pop
dec
jl
or
inc
mov
mov
ret
das
cli
push
xchg
clc
mov
fsub
mov
push
push
adc
push
jl
xchg
cmps
cmp
clc
ins
pop
retf
push
jbe
mov
clc
mov
lea
aas
addr16
xor
sub
repnz
mov
enter
mov
loopne
mov
fcmovb
dec
bound
imul
or
(bad)
(bad)
(bad)
jmp
loope
test
jmp
inc
mov
test
je
inc
call
add
icebp
pop
imul
adc
mov
inc
ret
push
mov
push
xchg
ins
test
nop
mov
data16
add
cmp
jge
scas
push
jns
stc
dec
lahf
js
repnz
test
xchg
in
jge
mov
clc
ret
iret
sub
or
add
popa
push
cld
retf
jp
clc
test
call
jmp
fist
test
sar
mov
(bad)
pop
std
sbb
sub
stc
adc
iret
fstp
sar
push
dec
leave
add
pop
clc
dec
jne
adc
clc
inc
push
pop
mov
inc
sbb
and
ret
mov
sub
js
icebp
(bad)
(bad)
(bad)
mov
or
test
pop
adc
or
add
and
push
into
mov
pop
neg
push
inc
clc
mov
(bad)
(bad)
(bad)
fdivr
sbb
push
cmp
stc
fucomip
fdiv
sbb
(bad)
jg
mov
cmp
or
int3
mov
in
mov
xchg
rcr
not
daa
mov
xchg
inc
emms
sbb
test
adc
(bad)
(bad)
call
mov
aas
lahf
add
pop
mov
adc
mov
mov
(bad)
(bad)
jbe
dec
stos
xor
pop
fwait
sub
cmp
xor
clc
imul
dec
std
(bad)
call
mov
imul
dec
xchg
xor
add
push
pop
(bad)
mov
mov
mov
retf
xchg
sahf
in
imul
(bad)
(bad)
dec
push
sti
clc
cdq
inc
xchg
inc
pusha
movs
cmp
adc
imul
cmps
mov
fstp
xchg
dec
inc
mov
clc
cmp
sar
adc
jo
cmp
cli
(bad)
push
js
mov
sti
sqrtps
fnstsw
aad
xor
jmp
sbb
sub
(bad)
dec
jnp
xor
pop
leave
enter
push
adc
jmp
call
aad
inc
push
not
mov
aam
int
js
out
and
int3
es
clc
sub
push
sbb
cdq
popa
clc
dec
lea
pop
stos
imul
jle
inc
jmp
jmp
call
sub
pop
jl
pop
fisubr
pop
sub
(bad)
call
jne
fwait
mov
in
std
push
rcl
movs
fidiv
push
hlt
add
inc
xchg
mov
movs
sub
xor
addr16
fnstenv
or
(bad)
call
loop
cmp
cmp
mov
stos
repnz
not
dec
std
clc
pop
jecxz
sahf
out
add
jmp
inc
jp
aad
cli
inc
xchg
mov
(bad)
inc
fdiv
pop
push
mov
lea
sbb
pop
sbb
(bad)
(bad)
dec
jb
js
je
xlat
fistp
and
dec
lds
cmc
movs
(bad)
jg
call
xchg
jl
out
pop
imul
push
test
aad
daa
js
hlt
call
(bad)
call
pop
imul
mov
call
dec
sub
sbb
cld
(bad)
inc
(bad)
and
arpl
or
mov
aaa
add
ja
lods
push
lods
out
fdiv
ja
cmps
fld
cmc
mov
adc
mov
mov
xchg
or
(bad)
arpl
mov
lds
popf
inc
or
inc
imul
dec
clc
jbe
imul
sub
xchg
leave
inc
idiv
call
or
pop
mov
cmp
rep
adc
inc
xor
loope
call
pop
dec
fsubr
jae
dec
hlt
(bad)
mov
adc
enter
int
outs
or
lahf
jb
(bad)
out
pop
dec
inc
and
fnstsw
mov
(bad)
(bad)
(bad)
(bad)
cli
push
mov
aas
push
fdivrp
sti
retf
out
adc
fst
mov
fwait
or
std
(bad)
(bad)
(bad)
(bad)
fild
adc
cli
js
ins
(bad)
mov
enter
aad
(bad)
out
push
jle
das
loope
outs
cli
(bad)
push
test
das
iret
cmp
neg
bound
std
ins
and
fist
add
shl
xchg
inc
inc
test
push
pop
jmp
push
fs
(bad)
(bad)
jg
fdiv
pushf
call
or
retf
add
mov
cmp
(bad)
inc
sub
scas
pop
inc
clc
and
jmp
test
push
lods
push
loop
jle
cmp
je
out
add
add
jbe
imul
jl
inc
rol
or
clc
cmps
push
push
or
dec
loopne
jge
add
ret
imul
imul
or
popa
cmp
xchg
test
data16
push
les
loop
cmp
lods
jge
or
clc
outs
out
mov
cwde
idiv
or
imul
inc
iret
aad
adc
jge
add
clc
sub
or
ret
mov
cdq
mov
xchg
test
sub
xchg
push
test
xor
arpl
jl
(bad)
(bad)
(bad)
jl
js
adc
pushf
loop
and
pop
pusha
imul
scas
add
dec
jg
push
je
(bad)
(bad)
inc
push
mov
test
clc
lds
and
es
popa
rcl
(bad)
inc
cmp
test
call
loope
int
out
jmp
(bad)
(bad)
(bad)
jmp
pushf
mov
dec
out
cmp
xchg
sbb
fild
push
mov
out
push
sbb
inc
sar
inc
cmps
add
mov
mov
jmp
cmp
push
clc
cs
shl
cmp
(bad)
xor
clc
nop
pop
or
add
pop
lock
stc
xchg
pop
clc
pop
das
js
mov
scas
pop
xchg
test
stos
sahf
call
lods
mov
ror
cmc
repz
push
cmp
dec
in
ja
sar
mov
dec
mov
inc
imul
xor
fwait
sub
cdq
sbb
cli
xchg
retf
repz
xchg
(bad)
out
(bad)
cmps
xor
jo
xor
dec
dec
and
jns
cmps
push
popa
les
(bad)
mov
cli
data16
bound
loope
xor
pop
add
call
adc
mov
cdq
xor
mov
fwait
lods
aaa
std
dec
sub
rol
mov
js
in
adc
push
sub
pop
push
je
daa
(bad)
loop
clc
sub
(bad)
(bad)
(bad)
mov
lods
mov
loope
mov
adc
mov
adc
push
mov
call
jnp
outs
int3
in
loopne
out
sub
fwait
cli
outs
mov
inc
(bad)
push
or
(bad)
jl
add
mov
mov
jne
shl
sbb
and
jl
addr16
(bad)
(bad)
jg
js
mov
sahf
mov
xor
lods
cli
and
cmp
and
inc
out
(bad)
(bad)
call
sbb
cld
push
jno
repz
jle
js
clc
loopne
daa
scas
loope
dec
mov
mov
sbb
jae
(bad)
(bad)
sub
sbb
dec
sub
push
into
mov
xchg
jmp
les
pop
jne
in
clc
ds
jg
inc
cmp
aam
(bad)
(bad)
mov
push
pop
push
xabort
out
ss
pop
mov
clc
lods
push
gs
(bad)
sub
movs
icebp
jmp
and
sub
mov
jmp
cmc
clc
xchg
out
clc
push
(bad)
into
mov
ficom
pop
cld
mov
push
cmp
inc
test
lods
fmul
mov
cmp
jg
lss
pop
mov
clc
aam
adc
les
outs
mov
xor
or
cmp
or
dec
(bad)
aad
ins
hlt
test
jb
call
mov
adc
jbe
and
push
ins
cmp
mov
clc
inc
call
pop
sar
jo
bound
fdiv
clc
(bad)
(bad)
(bad)
push
pop
int
clc
pop
xor
mov
cs
inc
mov
mov
mov
inc
add
std
(bad)
(bad)
fidivr
fnstsw
out
or
add
adc
sub
fdivr
dec
fnstenv
(bad)
jmp
clc
push
lods
shl
jb
mov
std
clc
(bad)
dec
pop
test
push
jle
(bad)
mov
enter
xor
xchg
cmp
popf
pop
and
sub
gs
fbld
xchg
pop
imul
pusha
test
sbb
xor
adc
call
fimul
pop
push
addr16
std
add
fadd
idiv
neg
hlt
sbb
frstor
retf
add
inc
mov
cmp
into
add
hlt
mov
jns
in
cmp
(bad)
(bad)
mov
ins
sub
sub
out
dec
hlt
movs
and
jge
jno
out
sti
hlt
sub
add
mov
call
pop
daa
scas
dec
inc
not
call
rcl
fidiv
cmp
lods
(bad)
pop
data16
xchg
into
jne
or
mov
iret
int3
jo
push
lahf
inc
xchg
add
xor
(bad)
(bad)
(bad)
mov
loopne
sbb
jle
xchg
sub
push
ja
inc
sbb
loop
and
cli
xchg
mov
sbb
mov
inc
(bad)
test
fcomp
xor
(bad)
(bad)
(bad)
jmp
pop
xor
outs
std
xor
jno
es
mov
aad
cmp
icebp
call
(bad)
fisubr
clc
xchg
sub
icebp
std
pop
push
push
jmp
add
clc
push
or
aas
or
cmp
es
cld
mov
dec
aam
movs
push
(bad)
(bad)
(bad)
(bad)
mov
imul
cwde
sbb
gs
or
add
xor
in
jae
gs
pusha
mov
jecxz
dec
push
movs
xor
sar
call
lds
(bad)
(bad)
push
cli
test
push
cmp
cwde
lods
or
sub
fcom
xchg
add
cmp
adc
jnp
lock
mov
sbb
ins
clc
sub
inc
shr
cmp
push
cmps
cli
push
pop
cmp
clc
mov
push
repz
loop
das
mov
inc
(bad)
jg
push
or
xchg
cmp
fdiv
aaa
popa
dec
add
jmp
cmps
push
lods
pushf
into
and
mov
push
fcom
std
test
in
adc
jmp
push
sub
pop
mov
in
mov
sub
cli
cs
adc
pushf
(bad)
(bad)
jg
pop
cdq
ss
inc
jne
mov
retf
repz
paddd
cmc
(bad)
call
dec
iret
cwde
int3
mov
shr
fdiv
jle
rcl
push
xor
cli
mov
push
lods
loop
(bad)
movs
add
aaa
inc
xchg
ret
mov
clc
(bad)
jno
outs
in
sub
aad
jmp
or
add
push
cli
clc
cmc
dec
mov
push
jno
xor
lock
call
inc
xor
mov
rcr
sti
fsub
mov
ret
cmp
jmp
ror
test
call
and
cli
cld
fs
(bad)
(bad)
(bad)
call
into
repz
jo
ret
sub
xchg
js
xlat
scas
rol
jo
(bad)
add
fcomp
dec
sub
mov
mov
loopne
adc
add
call
mov
out
sub
fnsave
sahf
scas
das
mov
push
jno
outs
clc
fcomip
dec
mov
addr16
jl
xchg
mov
imul
inc
in
jg
jmp
aaa
test
shr
push
mov
and
cld
(bad)
(bad)
call
inc
fadd
icebp
clc
or
cmc
pusha
popf
imul
retf
out
hlt
jne
add
jmp
mov
mov
imul
loope
stos
mov
icebp
(bad)
mov
pop
mov
xchg
std
(bad)
fisttp
les
cmps
adc
mov
jno
aad
inc
or
xor
movs
inc
ja
lea
mov
jmp
jmp
sar
dec
gs
jno
test
mov
leave
bsf
ss
(bad)
(bad)
push
fs
es
mov
dec
in
rcr
inc
pushf
jmp
clc
retf
in
imul
hlt
aaa
and
jmp
out
sti
jnp
push
(bad)
mov
(bad)
call
test
std
call
shl
sub
test
adc
sub
adc
pop
shl
test
push
push
clc
(bad)
dec
xor
nop
addr16
pop
dec
xchg
movs
push
(bad)
ja
push
clc
jle
jge
enter
(bad)
jmp
nop
cmp
std
(bad)
iret
outs
cdq
and
and
or
xchg
mov
mov
cmp
mov
cmp
push
not
sbb
aam
call
pop
add
jns
push
add
sbb
and
sbb
aas
mov
fst
ror
mov
add
jp
pop
jmp
add
pop
imul
fistp
leave
(bad)
(bad)
(bad)
push
lahf
inc
fiadd
sbb
test
pusha
cdq
jge
cld
pushf
clc
ret
cwde
jl
das
xor
add
jmp
popa
stc
mov
test
xchg
(bad)
(bad)
(bad)
jg
xchg
sar
mov
test
lods
jge
out
in
and
ins
and
(bad)
jp
cmp
inc
clc
jne
sar
(bad)
jns
dec
in
leave
push
daa
clc
mov
add
movs
scas
movs
into
iret
mov
inc
(bad)
adc
(bad)
(bad)
jmp
mov
or
ja
mov
arpl
ret
xor
imul
sar
(bad)
inc
clc
mov
jmp
jp
dec
jb
push
fsubr
in
inc
adc
retf
sti
mov
xor
xor
push
or
adc
bswap
mov
mov
(bad)
(bad)
ds
(bad)
int
adc
shr
aas
mov
(bad)
push
sbb
(bad)
(bad)
(bad)
jmp
imul
push
cld
push
xchg
mov
retf
stos
shl
shr
(bad)
(bad)
(bad)
inc
dec
hlt
mov
test
pop
rcr
ret
sub
sar
sahf
cwde
add
sub
clc
(bad)
(bad)
inc
adc
(bad)
clc
pop
or
xchg
xchg
push
gs
jg
repz
std
push
xor
sbb
pop
add
adc
(bad)
(bad)
jmp
adc
cmp
xchg
add
lock
push
loop
(bad)
out
dec
(bad)
(bad)
(bad)
inc
inc
jae
push
(bad)
fadd
or
daa
mov
clc
lods
push
xchg
push
clc
loop
(bad)
call
push
dec
stos
sbb
jmp
cdq
int3
mov
add
dec
dec
jo
cli
(bad)
(bad)
(bad)
call
jp
std
inc
mov
arpl
dec
add
sbb
aam
out
cmp
jmp
xor
imul
out
hlt
in
xchg
ins
mov
cdq
ficomp
lock
sub
adc
mov
pushf
data16
xchg
(bad)
(bad)
(bad)
(bad)
clc
in
adc
mov
add
cdq
test
mov
stos
dec
pop
nop
mov
(bad)
(bad)
mov
into
test
ins
jae
pop
cmp
pop
movs
std
js
(bad)
(bad)
jg
retf
les
fwait
(bad)
push
clc
push
jp
dec
add
clc
aad
add
sub
int
pop
or
cld
mov
mov
cmp
and
cmp
xlat
aaa
cld
add
jmp
es
jnp
inc
repnz
aam
(bad)
(bad)
dec
mov
nop
std
push
mov
mov
ins
movs
push
clc
loope
std
jmp
aam
adc
cmp
int
(bad)
(bad)
(bad)
jmp
xor
stos
cmp
pop
ds
test
push
inc
out
sbb
jns
mov
cli
adc
push
mov
clc
je
sar
gs
dec
sub
mov
xchg
(bad)
push
jl
shr
cmp
shr
adc
clc
(bad)
(bad)
dec
inc
int
sbb
cmp
cmp
jnp
std
dec
pusha
cmc
cmp
retf
and
(bad)
(bad)
jmp
mov
test
jae
in
add
clc
clc
ret
inc
ds
mov
inc
loopne
loop
clc
(bad)
fstp
popf
call
imul
mov
test
int
in
jno
jmp
call
enter
cli
aaa
std
add
jecxz
jnp
add
leave
(bad)
push
sub
mov
or
and
clc
loopne
sub
clc
fcomp
inc
pop
ret
out
mov
pop
in
(bad)
in
pop
imul
(bad)
dec
and
cmp
int
sbb
mov
(bad)
sar
sbb
clc
xchg
(bad)
inc
mov
xor
scas
cli
sub
inc
adc
mov
in
imul
aad
movs
ins
cmp
outs
addr16
sbb
mov
out
clc
pop
cmc
or
stos
(bad)
jmp
lods
jle
adc
cmc
(bad)
jg
enter
xor
fsubr
cmp
pushf
bound
pop
lahf
and
stos
mov
pop
dec
sub
cmp
je
lahf
test
add
idiv
imul
add
icebp
xchg
cwde
rcl
in
pop
dec
daa
call
inc
es
(bad)
jg
fwait
mov
mov
and
fisttp
lods
pop
rcl
(bad)
push
add
mov
imul
add
test
lahf
ja
std
(bad)
dec
mov
push
adc
push
ins
mov
or
jge
sbb
ret
(bad)
xor
jbe
push
cmp
jg
fwait
(bad)
ror
aad
test
jo
adc
cmp
(bad)
(bad)
call
clc
dec
test
ss
out
mov
dec
and
popa
gs
push
test
iret
mov
clc
das
or
outs
icebp
dec
std
enter
jle
dec
hlt
jmp
mov
loopne
repnz
out
mov
(bad)
nop
arpl
leave
test
ret
push
or
inc
call
in
jmp
clc
add
jp
dec
mov
stc
(bad)
and
clc
fdivr
out
int3
sbb
retf
(bad)
call
adc
xor
lock
sub
xchg
or
add
and
(bad)
pop
add
add
(bad)
jmp
stos
loope
jge
fdivr
lahf
sub
push
jmp
(bad)
(bad)
(bad)
(bad)
fisubr
clc
cld
pop
aas
adc
das
scas
std
mov
out
mov
xlat
clc
mov
mov
(bad)
dec
pop
in
push
sbb
enter
std
cmp
ins
sbb
fdiv
pop
aaa
or
cld
mov
push
nop
sbb
shr
dec
lds
(bad)
call
pop
pop
cmp
lahf
xchg
sub
adc
or
xchg
cmc
jmp
movs
(bad)
(bad)
(bad)
dec
je
movs
in
lock
mov
jl
mov
sub
sar
jo
push
pop
test
fisttp
(bad)
sti
js
dec
inc
ret
lods
lahf
push
dec
clc
push
xchg
loop
call
jmp
daa
in
xchg
xor
lods
mov
jo
lods
xor
loope
jmp
clc
js
shr
and
add
ficom
mov
test
or
pop
cmp
clc
inc
and
(bad)
(bad)
(bad)
(bad)
call
in
stc
inc
clc
lahf
das
mov
push
xchg
mov
clc
and
sub
cmp
(bad)
(bad)
(bad)
push
sub
push
adc
push
cli
xchg
mov
push
dec
idiv
(bad)
(bad)
mov
mov
(bad)
jmp
rol
and
outs
sub
gs
fs
pop
in
xor
jne
(bad)
(bad)
das
cli
scas
jb
cwde
cdq
pop
push
mov
out
aad
and
and
push
fbstp
mov
sub
jbe
jg
adc
movs
dec
and
jmp
jl
mov
cld
inc
cld
or
aas
and
cld
sbb
(bad)
repnz
mov
(bad)
cmp
mov
neg
les
ss
fsubr
inc
retf
jl
jns
sub
into
(bad)
(bad)
(bad)
(bad)
std
test
ret
jnp
push
scas
(bad)
arpl
fdivr
xchg
pop
jle
mov
test
jmp
add
outs
pop
loop
cwde
je
jb
ja
lds
aaa
sahf
sbb
clc
push
gs
(bad)
dec
cmps
push
call
(bad)
clc
mov
jl
cmp
sbb
xor
aaa
clc
xor
cmp
jg
call
clc
das
lods
std
or
je
inc
sar
cmp
aas
stos
icebp
cmc
gs
(bad)
(bad)
jmp
push
push
mov
or
mov
icebp
int3
mov
pop
sub
add
std
mov
(bad)
(bad)
jmp
or
cdq
mov
in
bound
and
imul
mov
jno
xchg
ds
cmp
popf
clc
and
pusha
mov
pop
movs
test
mov
add
xchg
aaa
xor
pushf
xchg
sub
jns
pusha
pop
gs
xchg
fdivr
mov
jg
fxch
(bad)
mov
or
lds
in
push
xchg
(bad)
jmp
sbb
and
pop
outs
jmp
loope
or
jecxz
iret
or
stos
(bad)
mov
mov
gs
mov
pop
push
(bad)
jae
ret
inc
mov
cld
lea
push
adc
hlt
mov
xlat
xor
or
imul
add
mov
dec
jmp
loope
sar
dec
ror
enter
js
(bad)
(bad)
mov
sub
and
(bad)
clc
jg
and
and
enter
call
rol
cmp
mov
clc
call
inc
lock
xchg
pop
and
jge
cmps
add
inc
sar
scas
ds
(bad)
push
mov
cmps
pop
ffree
mov
or
(bad)
(bad)
not
xchg
std
sub
(bad)
(bad)
inc
sub
pop
jne
jns
shr
imul
inc
push
in
leave
scas
in
mov
(bad)
inc
ret
cmp
daa
das
clc
jb
pop
cmp
add
cli
div
dec
sbb
lock
test
mov
ret
push
cmp
jp
test
mul
mov
outs
sbb
mov
jecxz
fs
push
ret
push
fstp
add
cli
mov
inc
clc
(bad)
mov
push
ss
loope
(bad)
loopne
adc
pop
push
rcl
jmp
inc
mov
or
jg
mov
rcl
js
in
mov
imul
dec
clc
popa
add
fcomp
push
xor
mov
sub
cdq
(bad)
call
ret
std
jl
and
aas
sbb
in
ds
(bad)
(bad)
call
xor
div
sub
sbb
jmp
call
das
push
mov
mov
mov
cmp
in
clc
mov
(bad)
mov
loop
xchg
cdq
mov
mov
clc
add
mov
(bad)
(bad)
(bad)
jg
ins
sbb
xchg
dec
clc
or
xor
mov
push
adc
jg
in
(bad)
push
lds
adc
mov
sub
retf
add
(bad)
(bad)
inc
mov
xchg
pminsw
int
loop
pop
xor
sbb
mov
rcr
cmp
mov
bound
mov
in
lods
cmp
clc
dec
mov
stos
(bad)
fcomip
call
and
ret
sbb
pop
cs
les
clc
loopne
jo
and
mov
(bad)
dec
in
mov
repz
(bad)
sbb
or
(bad)
dec
mov
adc
(bad)
cmps
ja
cmp
adc
(bad)
(bad)
(bad)
clc
and
gs
mov
pushf
repz
out
lods
retf
inc
sub
and
xor
(bad)
jg
inc
cli
push
aad
sbb
test
or
lea
(bad)
call
movs
aad
sub
mov
fs
std
jns
mov
(bad)
cli
lods
outs
shr
jg
jne
into
fwait
into
xchg
mov
push
pop
lods
dec
repnz
in
popf
popa
clc
jmp
pushf
je
ins
aaa
mov
or
and
jbe
call
outs
push
sub
je
aas
ror
dec
mov
ins
test
mov
mov
(bad)
push
pop
std
push
inc
clc
out
addr16
stc
cmp
sub
sbb
mov
scas
sar
fcomip
dec
fnstenv
(bad)
xchg
and
push
sbb
clc
(bad)
jp
(bad)
(bad)
(bad)
mov
xor
or
test
std
sahf
push
icebp
cmps
mov
ins
inc
sbb
inc
pop
or
ss
mov
outs
cli
sbb
aaa
or
movs
xor
inc
xchg
or
adc
icebp
sbb
inc
mov
pop
add
icebp
out
popf
hlt
loope
jg
cmc
jmp
out
or
gs
(bad)
stos
xor
mov
inc
ins
jl
hlt
dec
hlt
sub
push
pop
ror
mov
clc
lock
fidivr
mov
pop
(bad)
(bad)
inc
jae
(bad)
sar
ins
popf
bound
and
popa
(bad)
(bad)
(bad)
push
mov
jnp
dec
ins
fdiv
sub
ss
cmp
retf
in
and
jg
(bad)
dec
push
loopne
call
repnz
push
jmp
mov
(bad)
(bad)
jmp
aaa
call
push
ja
inc
push
enter
sti
(bad)
(bad)
push
xchg
dec
clc
sbb
cmps
popa
test
retf
and
rol
xchg
lock
(bad)
(bad)
push
push
jbe
jne
jbe
cmp
(bad)
test
mov
std
mov
stos
(bad)
jle
mov
jbe
repz
es
jbe
add
std
ja
jns
sbb
js
or
push
mov
fcom
test
aad
cli
xor
or
pop
push
clc
hlt
sbb
sub
call
add
sti
ss
jg
in
pop
mov
(bad)
(bad)
jmp
inc
mov
sar
fld
xchg
jae
loopne
push
loope
outs
dec
jecxz
clc
cwde
mov
mov
cmp
loopne
sub
ds
jns
sub
(bad)
call
xchg
rcl
fst
aam
jge
adc
das
(bad)
(bad)
(bad)
jmp
dec
cmp
fwait
xchg
pop
daa
adc
inc
add
std
xchg
test
mov
(bad)
call
sbb
idiv
jmp
sbb
or
test
jge
iret
scas
xor
mov
mov
xchg
dec
mov
dec
mov
loopne
fdiv
fimul
xchg
or
push
ds
jmp
jae
clc
outs
icebp
dec
xor
iret
lods
push
(bad)
(bad)
mov
imul
mov
xor
cmps
lea
dec
clc
adc
xor
jle
(bad)
std
clc
pop
sub
and
push
mov
btr
pop
cmp
outs
pushf
mov
in
imul
stc
dec
pusha
(bad)
(bad)
(bad)
jg
push
out
nop
jmp
add
call
xor
mov
clc
mov
clc
cmp
loop
ret
inc
cmp
inc
push
fsub
or
test
jmp
sbb
cmps
jp
(bad)
sub
dec
out
push
or
imul
mov
(bad)
(bad)
mov
push
xchg
jmp
sub
das
not
xor
(bad)
(bad)
(bad)
cmp
xor
push
pop
jno
out
adc
mov
jmp
cmp
movs
std
(bad)
(bad)
dec
lock
mov
sbb
in
cmp
rcl
and
imul
pop
cmc
pop
lods
rol
outs
lods
aaa
xor
mov
sbb
scas
je
fisubr
push
cld
xchg
xchg
sbb
mov
outs
mov
cli
mov
clc
pushf
add
arpl
cmp
in
push
(bad)
jg
(bad)
jp
clc
fiadd
push
cmp
les
lahf
movs
clc
xor
adc
push
fdivrp
adc
xchg
add
pop
xor
out
cmps
and
repz
mov
outs
int3
jnp
push
push
dec
and
outs
(bad)
jmp
stos
xor
clc
or
movs
mov
in
mov
jle
adc
clc
pop
cmp
clc
jno
outs
enter
es
movs
addr16
or
(bad)
mov
mov
mov
rol
and
sar
repnz
(bad)
inc
jge
cmp
sbb
jecxz
or
pushf
cwde
in
clc
ret
fstp
(bad)
and
fwait
jle
push
mov
xlat
(bad)
gs
cmp
sub
psllq
dec
or
dec
push
aam
imul
jae
(bad)
repnz
scas
mov
push
mov
(bad)
(bad)
call
mov
mov
jmp
inc
(bad)
fs
inc
push
mov
clc
mov
(bad)
mov
clc
sbb
je
gs
nop
ss
dec
call
mov
add
jl
pop
and
(bad)
pop
push
mov
inc
shl
pop
cld
(bad)
dec
pusha
loope
add
pop
clc
pop
(bad)
or
lds
xchg
sub
movs
inc
inc
xchg
adc
popf
(bad)
cmc
(bad)
(bad)
push
jecxz
cmc
dec
ss
lds
clc
into
fistp
push
pop
pusha
aam
add
scas
out
mov
sti
lods
mov
mov
adc
out
pop
hlt
jmp
xchg
dec
push
leave
addr16
(bad)
jg
ror
xchg
ja
ins
mov
popf
cwde
outs
fisub
(bad)
fcomip
(bad)
cmp
clc
cmp
jnp
test
nop
mov
sti
push
sub
cmc
push
cld
dec
aaa
pop
dec
and
retf
rcr
jnp
mov
fnstsw
stc
in
ror
xchg
nop
pop
and
test
push
xor
ror
in
pop
stos
mov
(bad)
std
cmp
pop
inc
mov
add
mov
ret
dec
cwde
inc
cmps
ja
popa
(bad)
std
pop
mov
(bad)
aas
es
jbe
ret
clc
inc
or
(bad)
inc
ins
sub
jae
mov
sbb
(bad)
(bad)
dec
js
adc
clc
idiv
repz
jbe
enter
mov
push
scas
sbb
add
cld
lock
mov
or
mov
xchg
sbb
enter
pop
lock
push
jae
stc
sbb
(bad)
(bad)
call
call
cmp
clc
out
(bad)
mov
add
clc
sub
scas
xor
(bad)
mov
adc
cmp
out
nop
jmp
into
clc
sar
mov
stos
(bad)
imul
jns
inc
mov
mov
push
(bad)
jmp
jge
lea
cli
mov
jo
bound
inc
cmp
cmp
and
dec
clc
lds
sub
(bad)
sbb
mov
sbb
out
mov
in
(bad)
call
sbb
push
retf
and
popf
imul
jp
push
and
xor
mov
jo
mov
arpl
mov
loopne
mov
daa
(bad)
ins
imul
push
hlt
(bad)
outs
xor
in
clc
stos
js
nop
pop
mov
mov
inc
mov
dec
dec
xor
mov
inc
(bad)
outs
or
ret
retf
les
sbb
cmp
mov
lods
xchg
pop
clc
sbb
add
pop
ds
daa
iret
xor
(bad)
(bad)
push
sub
sub
clc
sbb
sti
shr
xchg
mov
out
cld
inc
add
cmp
call
enter
clc
scas
push
inc
mov
jl
sti
mov
or
(bad)
call
pop
xchg
shl
xchg
xor
sbb
gs
sbb
les
(bad)
cmp
scas
fimul
outs
(bad)
shl
cmps
lds
fdiv
pusha
int3
jp
(bad)
(bad)
(bad)
(bad)
in
nop
test
sub
inc
and
pop
test
mov
ins
into
hlt
pop
call
jmp
clc
lods
scas
(bad)
jmp
mov
mov
mov
mov
std
mov
lea
lock
push
stos
mov
xchg
cdq
dec
mov
xchg
dec
mov
cmp
or
jp
mov
cld
call
cwde
pushf
xor
adc
dec
dec
clc
push
cs
fisub
fstp
les
xchg
clc
sub
mov
movs
pop
push
inc
cmp
(bad)
adc
(bad)
jmp
adc
cmp
out
adc
cmps
xchg
mov
sub
nop
clc
repz
xor
xchg
sub
in
jle
int3
clc
mov
push
mov
push
dec
mov
mov
(bad)
(bad)
fcomip
je
jg
push
inc
test
or
and
js
popa
mov
pop
pop
outs
(bad)
jmp
jg
outs
jns
out
std
clc
or
aas
in
ins
in
enter
sbb
(bad)
(bad)
call
(bad)
aaa
xchg
and
lea
pop
pop
ja
add
aam
pop
je
loop
sbb
(bad)
(bad)
jmp
cmps
dec
cwde
inc
mov
hlt
inc
mov
mov
repnz
gs
imul
ins
dec
arpl
out
(bad)
fbld
cmp
es
std
hlt
inc
dec
inc
jb
sbb
dec
dec
scas
lods
jle
mov
push
fdivr
pop
fwait
movs
or
mov
jp
(bad)
dec
sbb
sbb
mov
(bad)
in
adc
in
je
shr
jmp
jmp
cld
ins
es
push
push
sub
scas
clc
xabort
ja
mov
imul
rcl
sub
mov
jb
mov
xchg
aam
sbb
cmp
(bad)
(bad)
jmp
icebp
fdiv
pop
cmc
cwde
clc
xchg
frstor
aaa
push
sub
or
hlt
add
pop
sub
out
push
movs
add
mov
call
loop
mov
enter
mov
hlt
lds
(bad)
dec
gs
or
arpl
adc
in
imul
dec
fdivr
aaa
fld
ror
cmps
add
pop
sti
jne
mov
outs
stos
leave
sub
imul
ds
clc
and
(bad)
dec
in
fsub
loop
outs
(bad)
out
jnp
inc
add
fisub
loop
(bad)
call
loop
int
mov
aad
dec
fld
push
mov
jmp
sub
xchg
loope
lea
sub
shr
fdiv
rcr
jmp
add
in
rcl
and
mov
(bad)
(bad)
push
xchg
xchg
js
jle
mov
enter
xchg
xor
loopne
cmp
clc
pop
sar
(bad)
out
clc
and
sbb
xchg
outs
fwait
sar
clc
int
test
clc
int3
(bad)
dec
ins
cld
test
cmp
mov
stos
popf
pop
pop
xor
jmp
cmp
add
inc
adc
out
scas
sub
je
mov
shl
movs
test
mov
sbb
mov
xchg
loope
push
sub
(bad)
jmp
inc
repz
in
cwde
sbb
data16
ds
push
xchg
gs
fnstenv
rcr
dec
out
cmp
call
inc
jmp
inc
clc
xchg
das
and
je
cmp
sub
pop
in
test
popa
cmp
sbb
adc
push
clc
iret
mov
call
sub
or
cmp
in
test
cli
ds
pop
loopne
fidivr
(bad)
(bad)
jmp
or
out
or
ret
mov
or
in
js
push
dec
enter
(bad)
(bad)
(bad)
dec
sub
fdiv
div
jmp
xchg
je
adc
stos
cs
push
call
cmc
clc
test
cld
xchg
cld
pop
push
ds
push
std
xchg
mov
cli
stc
sti
std
repnz
push
push
rol
jmp
movs
clc
inc
add
(bad)
cld
(bad)
std
and
outs
jecxz
(bad)
push
mov
mov
push
clc
mov
std
(bad)
adc
sbb
or
popa
clc
add
push
mov
sbb
sbb
(bad)
(bad)
call
xchg
push
adc
pop
ror
sbb
cli
jmp
xchg
xor
out
(bad)
(bad)
call
inc
pop
fisttp
sub
or
xor
std
sbb
mov
(bad)
dec
xchg
clc
fistp
dec
les
cmps
in
sti
mov
push
mov
(bad)
push
cs
pop
mov
cmps
pop
clc
loop
sbb
or
xchg
adc
cmp
(bad)
js
(bad)
fistp
xchg
in
test
jp
xchg
repz
(bad)
(bad)
(bad)
jmp
inc
clc
arpl
imul
push
test
cmc
retf
test
in
loope
sub
(bad)
cs
(bad)
cli
ds
xchg
cmp
adc
shl
clc
inc
(bad)
aas
fisttp
dec
xchg
sbb
repz
jmp
mov
mov
jmp
hlt
fsubp
out
jb
xchg
push
fist
bound
es
gs
push
stc
movs
sbb
dec
mov
lahf
js
adc
std
or
mov
js
(bad)
(bad)
(bad)
mov
adc
pushf
fwait
gs
shr
not
clc
aad
and
add
or
or
pop
test
scas
jno
and
(bad)
mov
aam
xchg
out
cwde
popf
dec
push
mov
in
sub
repnz
in
cli
or
lods
mov
out
mov
mov
push
adc
xchg
pop
fwait
(bad)
(bad)
jg
adc
loopne
scas
cmps
add
movs
push
push
out
xor
aaa
ror
jmp
push
clc
mov
not
xor
push
je
repnz
dec
enter
push
ins
aam
vmread
adc
(bad)
dec
inc
cs
outs
aaa
cwde
fild
mov
sti
inc
or
(bad)
call
xchg
sub
in
call
jbe
icebp
fld
mov
and
(bad)
jg
sub
sar
jecxz
push
mov
mov
inc
xor
cmps
lods
adc
dec
mov
fstp
dec
fcmovnu
and
sahf
jp
mov
inc
aad
jecxz
(bad)
mov
loope
dec
xlat
and
shl
lock
popf
ja
gs
loope
cmp
xlat
adc
clc
dec
sti
jnp
pushf
cmc
leave
mov
je
ss
out
std
call
pop
jns
jmp
mov
or
inc
out
and
pop
aam
cmc
pop
xor
xor
hlt
inc
lds
mov
es
mov
adc
clc
push
jno
(bad)
and
mov
mov
lock
sbb
mov
clc
dec
sti
adc
(bad)
jg
jg
mov
sbb
rep
sbb
xchg
jbe
inc
ret
jp
sub
dec
jnp
push
out
(bad)
div
fmul
stos
jp
push
xor
xor
sbb
mov
and
(bad)
sub
inc
je
cs
add
inc
adc
mov
ficomp
sub
call
mov
in
add
jmp
and
sbb
mov
(bad)
xchg
cmc
fisubr
gs
push
mov
pop
pop
mov
(bad)
dec
jmp
or
and
jns
inc
neg
aam
fist
xchg
jg
(bad)
fprem
paddsb
ret
xchg
adc
mov
outs
popa
dec
mov
scas
(bad)
call
adc
fild
xchg
aam
clc
call
pushf
(bad)
(bad)
(bad)
dec
idiv
test
clc
(bad)
inc
jecxz
sub
lahf
push
xor
out
(bad)
(bad)
mov
fwait
mov
icebp
scas
mov
add
and
xlat
sub
inc
push
ret
xor
cmp
(bad)
cmps
cmp
mov
mov
imul
(bad)
jg
fcom
ret
sbb
pop
retf
jmp
mov
(bad)
(bad)
jmp
mov
sbb
ds
aaa
call
sub
pop
(bad)
mov
fsubp
push
mov
gs
mov
mov
and
mov
clc
test
mov
jmp
cmp
(bad)
(bad)
fcomip
cmps
jno
rcl
xchg
add
adc
(bad)
fadd
cmc
addr16
jae
(bad)
(bad)
inc
aam
push
push
icebp
sahf
repz
cli
js
(bad)
clc
dec
lds
push
xchg
xor
jmp
pop
pop
test
add
jle
addr16
(bad)
(bad)
push
or
(bad)
fadd
sub
je
sbb
(bad)
in
sbb
dec
inc
cld
pop
jmp
xchg
daa
inc
mov
addr16
sbb
pop
ja
das
cli
fist
inc
stos
mov
xchg
xchg
xchg
push
lock
mov
add
mov
(bad)
mov
push
jge
push
sub
sbb
dec
mov
mov
(bad)
jmp
ss
sub
popa
mov
xor
ret
mov
and
(bad)
(bad)
(bad)
(bad)
std
adc
xchg
mov
lock
outs
test
or
shl
sub
(bad)
(bad)
(bad)
jmp
jns
sti
int3
jecxz
stos
nop
push
aaa
cs
(bad)
in
xor
fstp
cli
stos
pop
mov
add
push
or
push
ret
test
mov
stos
int3
adc
clc
cld
(bad)
(bad)
call
jne
lods
(bad)
cmps
fs
mov
push
fwait
stos
ret
push
hlt
jmp
fcomip
inc
mov
cmp
ror
xor
loop
pop
add
cld
jmp
clc
jne
and
or
clc
cmps
out
cwde
jl
aas
mov
loopne
mov
dec
adc
icebp
sahf
sar
and
add
ret
retf
sar
mov
ficom
inc
loopne
sub
(bad)
jg
jo
movs
mov
sbb
popf
cli
xor
ins
sub
sbb
mov
fwait
(bad)
(bad)
jns
add
and
(bad)
push
xchg
jb
or
jg
xor
rol
dec
add
xor
sbb
push
mov
inc
jle
or
aaa
jo
ds
add
add
pop
hlt
ficom
mov
pop
sub
mov
inc
in
fbld
cmps
mov
pop
cld
scas
(bad)
mov
pop
int3
into
inc
std
xor
push
mov
lods
sahf
and
dec
fistp
mov
mov
fist
push
jmp
mov
cmp
adc
(bad)
inc
shl
push
ja
(bad)
aas
(bad)
repz
jle
(bad)
(bad)
(bad)
jg
jge
xlat
adc
clc
jnp
shl
leave
push
in
in
sub
mov
mov
clc
(bad)
fcomip
fwait
or
mov
xor
xchg
lea
add
mov
jno
in
(bad)
(bad)
(bad)
push
or
gs
and
sub
loope
jmp
int
dec
cmp
jmp
(bad)
(bad)
(bad)
jg
loope
cmp
mov
aad
pushf
mov
lock
fdivp
mov
clc
cmps
rcl
(bad)
ret
inc
push
clc
adc
(bad)
(bad)
(bad)
jmp
jmp
ins
add
or
sub
jnp
sub
mov
mov
and
fsubrp
scas
(bad)
cld
adc
pop
lahf
enter
into
xor
(bad)
(bad)
(bad)
push
or
arpl
bound
(bad)
sbb
or
cli
mov
cmp
cmp
jmp
ss
jbe
clc
mov
dec
push
(bad)
shr
(bad)
push
jmp
sbb
inc
mov
cmp
(bad)
call
fst
pop
pop
ret
not
pop
mov
clc
mov
test
push
cld
inc
ds
imul
fnstcw
sub
repnz
sar
push
mov
xlat
clc
jge
test
fadd
stc
cmp
(bad)
(bad)
jmp
sbb
daa
hlt
cmp
adc
(bad)
sub
cmp
mov
call
std
call
clc
push
pop
scas
sbb
push
jecxz
call
lock
mov
sub
(bad)
(bad)
(bad)
jns
imul
clc
sar
clc
inc
and
test
mov
call
(bad)
(bad)
inc
loop
clc
mov
fnstenv
cmp
hlt
movs
push
ret
clc
xchg
jg
mov
(bad)
(bad)
dec
sub
retf
lea
xor
das
pop
and
jbe
setns
(bad)
jmp
adc
push
and
cmp
dec
daa
clc
mov
push
ret
(bad)
push
outs
mov
inc
pop
pop
mov
rol
pop
mov
sub
clc
imul
dec
xchg
push
sbb
jmp
and
fsub
icebp
xor
(bad)
mov
ja
xchg
add
ins
in
ins
xchg
jae
push
fldenv
movs
(bad)
(bad)
(bad)
jmp
xor
mov
dec
in
lds
hlt
dec
xor
cmp
xchg
stos
mov
call
push
jl
jno
push
push
mov
pop
add
add
or
hlt
lea
sbb
sbb
mov
shl
jbe
push
push
shl
(bad)
(bad)
jmp
into
inc
dec
ret
adc
stos
scas
pop
loop
mov
cmps
xchg
mov
stc
scas
cld
pushf
xlat
(bad)
(bad)
(bad)
mov
add
push
shl
add
in
mov
xor
mov
(bad)
(bad)
(bad)
jg
scas
sub
cmp
sbb
sbb
fcomp
push
jl
xchg
stc
mov
cli
(bad)
push
movs
cmp
or
ret
mov
nop
jb
mov
(bad)
jg
sub
(bad)
in
xchg
mov
adc
cmps
(bad)
clc
sahf
(bad)
jmp
fcomip
ins
stos
clc
adc
lock
int3
jp
fbld
or
or
call
jge
pop
mov
aad
outs
jl
mov
gs
fwait
jmp
(bad)
in
mov
inc
outs
jle
pop
push
xchg
xor
xchg
pop
sub
call
xor
out
in
pop
and
jle
mov
cwde
push
dec
adc
clc
jb
cld
mov
out
mov
mov
sbb
imul
(bad)
inc
hlt
fs
cmp
scas
xchg
lock
sbb
mov
mov
and
xchg
mov
jg
cli
movs
ret
sbb
jno
mov
push
and
sub
inc
mov
fsub
cmps
inc
inc
gs
stos
mov
push
jl
mov
jbe
and
clc
add
adc
(bad)
(bad)
jmp
mov
imul
xchg
(bad)
lock
es
clc
movs
cmp
icebp
das
cmp
cmc
pop
add
dec
out
in
and
push
(bad)
(bad)
(bad)
inc
shl
test
mov
fwait
test
(bad)
mov
iret
mov
push
adc
xchg
scas
push
mov
or
push
(bad)
jno
call
cmp
inc
mov
mov
cmp
sub
sub
movs
xlat
arpl
mov
repnz
(bad)
(bad)
call
dec
jb
ss
cmp
hlt
and
test
cmp
clc
mov
inc
pop
test
adc
aaa
dec
and
hlt
or
and
js
mov
and
mov
or
(bad)
arpl
sbb
mov
cmp
jns
cdq
push
fisubr
dec
fldenv
inc
popa
loopne
loope
xor
shl
outs
jmp
pop
xchg
dec
inc
inc
mov
pop
popf
xor
stc
ins
loop
fdiv
mov
(bad)
in
dec
push
or
pop
aad
inc
jle
jns
enter
xor
xor
cmp
sbb
aad
(bad)
jmp
ins
and
mov
das
xor
cmp
fisubr
shl
arpl
sbb
cmp
rcl
dec
(bad)
jmp
pop
cmp
inc
add
fwait
inc
(bad)
dec
jne
scas
adc
mov
clc
(bad)
fst
(bad)
push
push
add
(bad)
(bad)
inc
pop
movs
stc
loope
mov
and
push
in
lock
(bad)
jmp
in
data16
fmul
add
sbb
in
xchg
std
adc
aas
das
mov
push
(bad)
cmp
popa
mov
data16
daa
mov
mov
xchg
jnp
retf
or
inc
out
clc
imul
jno
sbb
add
pop
iret
push
jle
push
in
outs
mov
std
(bad)
(bad)
dec
or
jmp
clc
mov
std
cmp
jae
arpl
aad
sub
sar
pop
dec
inc
mov
outs
mov
iret
xchg
js
push
mov
cmp
imul
inc
daa
and
retf
in
add
jbe
xor
dec
mov
bound
sar
rol
femms
push
mov
clc
or
add
dec
clc
das
cli
dec
in
dec
pop
cmp
hlt
les
fcom
in
js
inc
xor
ret
inc
ja
loopne
mov
repz
clc
pusha
(bad)
(bad)
(bad)
call
jg
(bad)
xchg
in
pop
nop
hlt
ror
mov
clc
adc
out
std
sub
(bad)
(bad)
jmp
push
push
fdivr
or
push
sub
outs
cli
push
add
push
inc
dec
push
cli
inc
jp
clc
mov
sub
(bad)
clc
loopne
not
xor
push
xchg
lahf
pop
das
std
data16
(bad)
(bad)
(bad)
jmp
or
adc
sti
fsincos
jge
sub
sub
adc
aaa
mov
movs
clc
test
mov
clc
inc
dec
out
stos
fcom
retf
aas
mov
add
(bad)
(bad)
call
pop
mov
xor
enter
adc
aaa
fiadd
dec
inc
dec
(bad)
(bad)
inc
scas
xchg
and
adc
das
jle
pop
(bad)
jg
push
call
xor
xchg
inc
repnz
clc
popa
mov
fucomi
jg
aam
outs
and
repz
and
sub
test
push
cmp
stos
(bad)
push
scas
mov
sub
ja
(bad)
jae
in
(bad)
les
push
ror
aad
std
mov
add
inc
pop
or
or
cwde
cli
data16
addr16
push
call
xchg
ins
out
sub
std
mov
sub
cmc
in
pop
cmc
ja
arpl
push
loop
and
sub
cwde
test
cld
or
es
mov
cmp
call
call
cli
xchg
fstp
pop
dec
clc
aas
mul
mov
retf
(bad)
or
push
lea
add
lods
std
inc
(bad)
(bad)
jmp
or
sbb
div
outs
js
push
mov
push
sar
ja
mov
push
rol
inc
in
out
movs
je
jecxz
sahf
cmps
mov
clc
frstor
sbb
ds
sbb
pop
push
jnp
jl
mov
jg
pop
das
cs
(bad)
(bad)
fbld
mov
and
pusha
cmc
clc
mov
or
push
clc
push
sbb
icebp
(bad)
jmp
ret
repz
dec
jle
sbb
xchg
out
stc
mov
es
movs
adc
jmp
(bad)
mov
nop
clc
push
ins
mov
push
pop
fcmovnbe
lock
mov
in
idiv
outs
(bad)
push
mov
xchg
clc
xor
in
adc
jb
stos
mov
stos
gs
pushf
cli
fwait
(bad)
call
xlat
sar
mov
lahf
and
test
inc
ss
jg
push
(bad)
out
rcr
dec
in
cli
pop
fmul
sbb
test
arpl
clc
jp
mov
(bad)
(bad)
in
push
out
hlt
sar
pop
push
and
or
shr
cmps
int
cmc
sti
pop
push
sbb
(bad)
(bad)
dec
scas
mov
loopne
hlt
dec
loop
fisub
pusha
hlt
in
xchg
pop
lea
ss
mov
fcomip
inc
(bad)
cmp
or
js
ins
sti
mov
sub
(bad)
aam
addr16
imul
dec
int
popf
sbb
icebp
cmps
jle
or
mov
xor
loop
or
(bad)
jmp
bound
add
mov
std
or
rcr
fwait
(bad)
inc
cld
test
jg
cld
mov
mul
cmc
sbb
mov
adc
rcl
(bad)
(bad)
(bad)
(bad)
push
test
scas
sbb
into
test
lea
(bad)
xchg
(bad)
inc
xlat
nop
inc
clc
gs
mov
in
jmp
jmp
(bad)
jmp
sbb
sub
push
cld
jmp
jge
lds
out
mov
clc
ss
jns
xor
mov
daa
mov
mov
pushf
(bad)
xchg
push
sub
(bad)
jmp
push
js
xor
data16
outs
sbb
jnp
mov
je
add
or
dec
xchg
addr16
(bad)
cmp
mov
mov
or
outs
push
pop
(bad)
dec
(bad)
fcomip
inc
pop
push
es
ret
scas
or
(bad)
outs
mov
mov
(bad)
dec
(bad)
push
imul
(bad)
test
xor
(bad)
call
enter
repz
es
jbe
mov
jge
xchg
popa
fwait
push
rcr
and
xchg
stc
(bad)
std
pop
inc
push
xor
mov
and
sbb
icebp
clc
sbb
(bad)
call
mov
or
add
test
xor
mov
xchg
sub
clc
mov
ja
(bad)
(bad)
ficomp
loopne
sbb
mov
add
ins
fsubrp
xor
mov
dec
movs
xchg
push
push
push
fmul
jnp
pop
fcmovb
push
leave
(bad)
xor
scas
and
xor
fnstcw
inc
and
hlt
aad
movs
add
clc
adc
push
xchg
sub
loopne
dec
jne
rol
mov
shl
(bad)
(bad)
(bad)
clc
cmp
push
sbb
pop
clc
mov
rcl
outs
lods
sti
jb
mov
jecxz
lods
add
(bad)
push
inc
imul
mov
in
(bad)
inc
sbb
adc
test
jo
mov
or
dec
loop
(bad)
jmp
jns
cmc
push
int3
push
clc
and
adc
xor
inc
push
cli
loopne
inc
(bad)
jg
mov
dec
pop
add
test
adc
int
inc
stos
loopne
(bad)
(bad)
call
mov
mov
fidivr
and
ret
loopne
mov
je
push
clc
fmul
dec
cmp
or
sub
jp
sahf
es
repz
jl
add
mov
xchg
adc
cli
test
xor
(bad)
stc
cmp
xchg
mov
push
ds
push
std
in
mov
xor
dec
clc
aad
adc
and
ret
jb
aad
inc
or
inc
fisub
lods
clc
push
mov
js
sbb
stos
sub
lock
jmp
ins
sbb
pop
jle
mov
inc
popa
adc
(bad)
fistp
in
or
jae
cmp
sar
mov
adc
(bad)
(bad)
call
rcl
or
push
fldenv
imul
jl
inc
push
ja
push
mov
xchg
cwde
lea
test
(bad)
jmp
test
test
inc
mov
add
pop
popa
(bad)
int3
pushf
push
sub
(bad)
dec
inc
mov
add
enter
cmp
(bad)
(bad)
dec
push
fwait
in
jg
push
jmp
hlt
xor
(bad)
ss
fwait
push
imul
(bad)
mov
inc
and
into
push
rcl
push
xor
(bad)
xor
jle
(bad)
cmc
(bad)
push
xor
out
(bad)
cmp
nop
mov
mov
nop
or
xor
or
jg
inc
pop
aad
mov
inc
popa
push
mov
ret
in
pop
ret
cmp
sbb
jmp
(bad)
mov
retf
pop
je
inc
push
popf
(bad)
cmp
std
gs
dec
sub
(bad)
(bad)
jmp
xchg
and
fimul
and
jne
shl
popf
add
sbb
sub
addr16
fnstenv
shl
(bad)
(bad)
push
in
sbb
lea
rol
js
jge
arpl
or
dec
xchg
mov
push
stc
mov
aas
inc
cmp
mov
sbb
or
mov
mov
push
repz
xor
clc
cmps
inc
popf
mov
push
inc
je
pop
jnp
inc
in
mov
aas
fwait
lock
(bad)
jg
into
cmp
pushf
test
out
outs
jmp
sub
iret
xor
cmp
mov
(bad)
jmp
stos
push
bound
or
scas
xchg
rcl
mov
movs
xchg
mov
xchg
std
or
xchg
sub
xor
inc
les
jne
adc
adc
icebp
out
mov
cs
sti
lds
retf
(bad)
(bad)
call
push
sti
jmp
hlt
sub
xor
mov
(bad)
(bad)
(bad)
jg
dec
cmc
push
and
std
add
inc
(bad)
aaa
xchg
push
fdivr
adc
(bad)
call
out
sbb
stos
stos
addr16
out
daa
ins
rcl
jmp
dec
push
scas
push
sub
push
cmp
(bad)
xor
(bad)
ficom
sbb
jae
(bad)
(bad)
(bad)
inc
sar
push
inc
inc
cmp
pop
repz
cmp
test
jne
adc
(bad)
inc
mov
sbb
ds
jno
add
sub
shr
push
or
xchg
jbe
xchg
fiadd
fwait
or
int3
test
in
push
inc
lods
mov
ins
imul
iret
push
mov
xchg
mov
mov
jmp
jno
xor
in
jp
(bad)
ja
cmp
or
retf
retf
xor
push
add
(bad)
(bad)
inc
sti
mov
fnstenv
jg
adc
and
xor
clc
call
cld
repnz
xchg
pop
pushf
lea
iret
push
cs
adc
(bad)
pop
loopne
add
push
adc
inc
cmp
pop
mov
jmp
cli
ja
mov
gs
scas
xor
jbe
call
xor
xchg
mov
xchg
xor
cwde
xchg
inc
hlt
fldcw
push
xchg
push
aam
jne
mov
(bad)
out
nop
lock
add
mov
es
jnp
mov
(bad)
(bad)
(bad)
call
hlt
out
es
mov
mov
push
fst
xlat
pop
dec
aas
retf
jae
das
and
mov
aaa
std
(bad)
jge
mov
mov
rcr
jp
stc
mov
pop
mov
(bad)
adc
(bad)
call
(bad)
mov
repz
popa
ins
xchg
fwait
mov
in
dec
jae
imul
mov
(bad)
(bad)
dec
lea
fstp
push
jae
rcl
ds
dec
mov
mov
loopne
mov
les
jp
fcom
scas
ss
(bad)
(bad)
dec
in
cmp
hlt
test
sub
in
shl
cmp
mov
cdq
cld
push
(bad)
ret
(bad)
call
cmp
mov
dec
imul
cs
pop
sbb
test
leave
movs
jmp
push
(bad)
(bad)
(bad)
push
mov
loope
sub
fcom
push
mov
add
push
adc
cmp
mov
fwait
cmp
sub
fnstcw
jne
arpl
(bad)
call
sub
fwait
leave
in
inc
jecxz
xchg
and
push
rol
adc
xor
sbb
xlat
pop
retf
mov
pushf
std
scas
xchg
shr
(bad)
(bad)
(bad)
cmp
pop
std
jp
loop
imul
and
(bad)
(bad)
(bad)
(bad)
mov
pop
jae
iret
test
leave
adc
data16
faddp
scas
pop
lods
push
sub
(bad)
xchg
hlt
push
call
imul
(bad)
fcomip
jg
das
fmul
adc
sub
sbb
in
push
cmp
das
mov
fwait
jo
(bad)
mov
pop
rcl
test
call
jge
mov
repz
(bad)
mov
push
cmp
jge
pop
adc
sbb
cmc
cli
mov
pop
xchg
jmp
add
repz
arpl
clc
daa
mov
jg
and
push
cmps
adc
pop
mul
repz
mov
(bad)
(bad)
fbld
jp
push
out
pop
addr16
adc
jne
enter
push
xchg
out
mov
sbb
(bad)
(bad)
jns
inc
dec
popf
sub
ss
dec
test
push
aas
adc
push
add
or
xor
sar
test
(bad)
(bad)
call
jno
enter
cmp
and
push
cld
mov
sar
adc
sar
dec
sbb
jmp
aaa
mov
jecxz
push
jmp
fcomip
(bad)
(bad)
call
mov
pop
xchg
lock
cmps
push
enter
xchg
test
cmp
inc
push
and
(bad)
dec
sub
ins
mov
pop
test
xchg
mov
push
test
test
cmp
mov
(bad)
push
cmp
pop
repnz
mov
jns
ins
imul
icebp
mov
lock
(bad)
jg
fwait
adc
dec
gs
cld
jnp
jb
cmc
xor
sbb
test
mov
repnz
jp
inc
push
fistp
ja
std
(bad)
inc
scas
leave
or
gs
lea
adc
rol
sbb
call
cmps
add
aad
mov
xchg
jbe
fcos
(bad)
inc
stc
adc
sbb
pusha
inc
leave
jg
sti
cmp
(bad)
jmp
cmp
mov
mov
xor
adc
(bad)
dec
adc
aas
(bad)
dec
pop
out
dec
pop
int
inc
call
push
dec
push
cmp
jge
inc
lahf
cmp
push
push
or
dec
pop
cmp
and
jns
aam
or
pop
mov
xchg
ja
ins
stos
xor
in
stos
pop
mov
(bad)
(bad)
(bad)
inc
xchg
xchg
jmp
xchg
mov
adc
movs
inc
sbb
push
fmul
sbb
jmp
(bad)
jnp
(bad)
loopne
xchg
(bad)
cld
xchg
xchg
jnp
sub
imul
pop
loopne
xchg
cs
int
ss
jns
pop
xchg
out
mov
xor
(bad)
(bad)
(bad)
push
jo
dec
movs
xchg
xchg
stos
xor
cld
and
inc
dec
mov
in
sbb
aas
ins
test
(bad)
call
jne
add
dec
mov
cmc
hlt
push
sbb
pop
sahf
pop
xchg
and
pop
push
je
adc
fwait
nop
sbb
sar
(bad)
(bad)
inc
jbe
into
sti
test
(bad)
clc
sbb
lds
dec
sbb
je
add
jl
pop
data16
loop
stc
xor
popa
aad
mov
xor
int3
pop
enter
sti
or
pop
cli
xchg
cwde
retf
mov
mov
es
xchg
add
out
(bad)
mov
push
cwde
repz
jbe
lea
(bad)
(bad)
(bad)
(bad)
cmp
setne
out
leave
out
xchg
ins
fwait
test
cmp
stc
xchg
mov
popa
cld
loope
xor
jmp
add
and
sub
cld
sub
mov
adc
or
lock
inc
test
fst
(bad)
(bad)
mov
icebp
jle
sbb
cld
and
sbb
inc
xor
call
xor
cmc
dec
xlat
bound
or
pop
movs
cdq
cdq
sahf
adc
das
clc
push
ror
cmp
loop
push
mov
jns
adc
jns
jno
mov
(bad)
(bad)
jmp
cdq
cmps
xor
fwait
enter
cmp
dec
dec
sub
stc
add
lea
data16
repz
std
(bad)
(bad)
jmp
arpl
dec
aas
fwait
cld
pop
mov
mov
stc
popaw
fidivr
(bad)
(bad)
mov
cld
or
mov
inc
cmp
xchg
xor
stos
(bad)
call
movs
(bad)
(bad)
(bad)
jmp
and
fiadd
sbb
cmp
rcr
inc
inc
test
(bad)
push
adc
add
(bad)
jmp
push
sub
idiv
aad
xchg
xchg
inc
push
dec
mov
out
and
cmp
mov
aam
cmp
inc
(bad)
(bad)
(bad)
(bad)
cmp
div
sbb
inc
int3
test
and
jno
add
stc
and
inc
enter
jne
jmp
retf
inc
lock
sub
into
(bad)
cwde
inc
pop
addr16
sbb
push
sub
jg
cmp
xor
mov
mov
mov
popa
adc
ret
out
hlt
or
pop
sbb
mov
xchg
cmp
(bad)
(bad)
(bad)
mov
inc
inc
enter
push
xor
out
cld
mov
cmp
clc
(bad)
mov
mov
outs
push
inc
mov
sbb
push
(bad)
jmp
push
rcr
mov
hlt
(bad)
xor
jae
mov
aaa
mov
neg
adc
adc
dec
inc
retf
add
lds
jmp
(bad)
jp
stos
repnz
add
call
xchg
stc
xor
(bad)
(bad)
mov
adc
loopne
and
add
sti
out
cmc
test
adc
cli
stos
xor
xchg
(bad)
mov
dec
jns
inc
pop
cmp
fldenv
cmp
inc
jle
xor
shl
xchg
dec
xchg
sbb
popa
jg
dec
dec
inc
shl
(bad)
(bad)
inc
das
xchg
pop
jns
mov
adc
and
inc
push
jmp
pop
mov
jmp
ret
mov
cmp
push
jae
dec
or
std
sti
(bad)
(bad)
(bad)
dec
inc
mov
push
dec
icebp
jmp
adc
mov
(bad)
cld
inc
lods
out
xor
jmp
mov
dec
hlt
dec
mov
and
(bad)
(bad)
inc
mov
push
pop
jne
mov
sysexit
mov
fcos
(bad)
(bad)
jmp
push
pop
in
mov
int
or
test
mov
lea
push
inc
call
(bad)
(bad)
fdivr
cli
aad
push
shl
push
fcmovu
and
std
bound
sbb
(bad)
(bad)
call
xchg
xchg
and
mov
test
push
icebp
dec
jmp
rol
stc
dec
mov
mov
(bad)
(bad)
jmp
call
popf
inc
push
cld
sbb
ror
(bad)
xor
call
add
je
jae
mov
das
mov
push
xchg
mov
(bad)
(bad)
(bad)
call
jl
mov
inc
adc
jo
adc
or
jecxz
push
in
(bad)
(bad)
(bad)
call
and
jne
fadd
add
xor
stos
nop
cwde
pop
fdiv
and
fucomp
test
(bad)
(bad)
inc
sbb
nop
mov
aad
repz
push
inc
loopne
shl
mov
aas
add
(bad)
mov
add
add
js
jg
dec
xor
aaa
std
jno
test
aam
loopne
pop
adc
cmps
repz
(bad)
dec
out
cmp
and
xchg
mov
adc
nop
fild
cmps
add
pop
push
adc
sub
jg
push
dec
sbb
stos
add
sbb
push
(bad)
(bad)
call
push
bound
imul
inc
inc
jbe
aaa
leave
les
(bad)
(bad)
dec
out
loopne
mov
adc
ret
xchg
jmp
add
mov
dec
xchg
(bad)
in
push
cmp
cmp
cmp
repz
in
dec
jne
movs
sbb
cmc
push
pop
jle
mov
clc
jmp
dec
js
push
fwait
shl
mov
pop
mov
retf
cmp
icebp
cmc
xchg
idiv
xchg
cmps
(bad)
inc
xor
(bad)
(bad)
push
push
jecxz
inc
mov
xor
cli
and
add
inc
cld
jg
jg
or
add
dec
pop
cmp
fisub
push
xor
pop
push
add
pop
push
movs
mov
dec
pusha
and
xor
push
push
pop
cdq
(bad)
call
cld
xchg
sub
test
ret
jge
jbe
retf
add
repz
jmp
xchg
lods
iret
enter
dec
test
test
fist
icebp
mov
inc
ss
dec
xor
ficom
popa
add
std
out
shl
sbb
inc
xor
mov
dec
xchg
(bad)
(bad)
(bad)
(bad)
out
std
jne
xor
sub
pop
pop
fidivr
jge
ja
outs
ds
bound
mov
pop
fcos
(bad)
(bad)
jmp
addr16
xor
imul
and
adc
jp
xor
adc
jmp
sar
pop
dec
pop
inc
adc
inc
and
jno
(bad)
adc
gs
and
inc
push
xchg
sub
xchg
cmp
add
push
pop
pop
add
mov
mov
pop
and
mov
dec
es
sub
rol
movs
or
(bad)
retf
test
mov
or
in
shl
(bad)
adc
jmp
jmp
cmp
pop
pop
sub
or
fnstcw
dec
add
loope
jns
ins
mov
ret
jns
stc
cli
adc
jge
add
xor
inc
sbb
in
xchg
mov
(bad)
(bad)
call
mov
js
retf
mov
outs
cmc
(bad)
cmp
aam
jecxz
adc
das
cmps
lock
mov
mov
gs
and
retfw
jg
add
sti
sar
icebp
sub
mov
(bad)
fstp
cdq
xor
out
mov
lods
mov
add
or
cmp
call
jmp
xchg
fstp
cs
es
out
ja
mov
sub
(bad)
(bad)
hlt
cmps
mov
out
xchg
mov
sar
call
sbb
inc
push
mov
loopne
loopne
sbb
jnp
(bad)
jae
pushf
jb
enter
push
mov
push
push
adc
call
gs
jbe
fild
or
jmp
jge
test
and
js
sub
dec
repnz
in
int
jg
mov
or
pop
cdq
or
bnd
(bad)
fild
(bad)
xchg
popa
add
or
nop
push
mov
dec
pop
mov
ss
in
pop
ror
sahf
mov
or
(bad)
sbb
xor
mov
aas
jns
stos
xor
lea
leave
rcl
fst
lock
leave
inc
sub
mov
cld
jbe
cmp
add
add
mov
xchg
rcl
cmp
sbb
cmc
(bad)
(bad)
(bad)
dec
imul
cmp
test
mov
xor
sbb
mov
pop
std
(bad)
call
lods
adc
retf
or
pushf
cmp
inc
int3
push
mov
sbb
mov
inc
std
(bad)
(bad)
(bad)
mov
shr
cmp
fdivr
fadd
into
mov
jmp
mov
jecxz
stos
xchg
push
dec
dec
imul
arpl
adc
push
mov
imul
in
ret
(bad)
(bad)
inc
mov
xor
sub
sbb
mov
fwait
xchg
aad
cmp
icebp
jg
push
jecxz
call
leave
div
outs
popa
sbb
add
sub
and
das
imul
mov
and
jne
cli
mov
ss
scas
(bad)
(bad)
push
push
add
mov
rcl
out
sbb
xor
jae
jne
xor
sbb
pop
pop
add
jg
das
cmp
aad
(bad)
(bad)
or
and
dec
mov
arpl
sub
mov
dec
(bad)
jmp
scas
add
push
aad
ja
dec
cmp
xor
out
pop
mov
(bad)
(bad)
(bad)
dec
push
jns
lea
rcr
or
aam
loop
fcomp
jne
push
jns
call
aas
adc
mul
sub
push
add
or
pop
mov
enter
xor
fild
jbe
sbb
mov
(bad)
jg
ins
shr
adc
(bad)
mov
sub
push
clc
mov
xor
cmp
inc
cmp
dec
dec
cmp
xor
dec
push
mov
aaa
mov
pop
lahf
sbb
out
(bad)
(bad)
(bad)
jg
cs
cmp
cmp
out
xchg
ret
cdq
rcl
inc
dec
mov
xor
mov
(bad)
(bad)
dec
cmp
inc
js
shr
adc
mov
pop
dec
cmps
pop
or
(bad)
aaa
pop
push
data16
jmp
jg
and
pop
add
out
mov
sbb
jbe
mov
xor
out
inc
jnp
shr
push
dec
stos
mov
ss
inc
add
(bad)
(bad)
jmp
retf
stc
add
in
mov
fwait
ret
xchg
and
cmp
popf
nop
add
dec
xchg
(bad)
(bad)
jle
in
and
jecxz
sub
arpl
add
sub
push
out
(bad)
jmp
hlt
and
xor
(bad)
fdecstp
jg
inc
ret
cs
sub
pop
mov
inc
test
stos
jmp
push
jle
ror
or
mov
inc
(bad)
call
ds
xor
add
mov
ficom
or
push
cld
call
stos
ficomp
(bad)
rol
test
mov
inc
(bad)
stc
push
lea
cmp
out
cli
(bad)
jmp
imul
jle
nop
cmp
jnp
push
icebp
(bad)
(bad)
jg
stc
sub
inc
jle
mov
test
add
mov
cmp
call
fsub
lods
dec
mov
dec
inc
sbb
pop
xor
push
aas
inc
lds
add
sbb
(bad)
(bad)
(bad)
call
jp
cmp
dec
(bad)
push
jmp
daa
or
mov
test
es
ss
jge
push
and
sbb
cmp
test
and
push
inc
mov
add
sar
outs
pop
cmp
xor
mov
inc
mov
inc
xlat
pop
inc
add
cli
(bad)
mov
outs
sbb
(bad)
jae
int
or
mov
out
jb
stos
fldlg2
outs
mov
fisttp
ins
sub
ret
(bad)
(bad)
call
mov
pop
icebp
mov
out
sbb
nop
hlt
pop
sub
push
mov
outs
push
inc
(bad)
(bad)
(bad)
push
vpmacssww
lea
pop
xor
and
pop
sbb
leave
push
mov
jg
(bad)
dec
xchg
xor
push
mov
inc
adc
pop
mov
(bad)
(bad)
call
or
sbb
add
in
cmp
mov
jno
adc
loopne
(bad)
jmp
cmc
xchg
or
(bad)
sbb
adc
mov
(bad)
call
dec
pop
je
loop
pushf
pop
clc
dec
fwait
test
ror
or
or
xor
(bad)
fild
mov
cmp
mov
jge
jne
(bad)
jg
adc
repnz
dec
scas
xor
dec
test
pop
cmp
and
(bad)
(bad)
(bad)
jmp
sti
ins
push
mov
adc
sbb
popf
inc
push
cmp
arpl
xchg
or
mov
(bad)
call
sbb
cmp
(bad)
out
dec
inc
aas
or
jne
pop
ins
pop
mov
leave
pop
div
ret
sbb
mov
test
sub
xchg
mov
div
(bad)
(bad)
fcomip
ds
nop
xchg
push
pop
movs
retf
jmp
hlt
lea
mov
(bad)
(bad)
(bad)
(bad)
fild
sub
ror
pop
ror
and
or
adc
adc
stos
xchg
add
(bad)
jmp
cmc
xchg
imul
pop
cld
xchg
loopne
jno
jg
test
(bad)
call
xor
int
fidivr
arpl
sbb
stos
push
mov
popa
dec
add
jne
(bad)
(bad)
(bad)
call
jmp
ret
cmp
or
jae
fs
hlt
daa
rol
jns
cs
(bad)
(bad)
inc
jns
fist
sbb
(bad)
jne
stos
lea
outs
call
(bad)
sub
(bad)
std
cs
xor
movs
push
or
add
pop
inc
mov
jl
mov
lods
sbb
adc
inc
ficomp
push
mov
mov
aad
or
or
dec
inc
push
mov
lea
inc
mov
(bad)
(bad)
inc
test
mov
sbb
sbb
jge
loop
int
stc
dec
fimul
lods
xchg
push
mov
std
js
jecxz
(bad)
(bad)
jmp
adc
cmp
xchg
fmul
xor
pop
inc
(bad)
call
and
inc
xor
retf
jp
jne
outs
mov
xor
(bad)
and
(bad)
(bad)
jmp
(bad)
add
cs
leave
cmp
and
xchg
movs
fisubr
cdq
jmp
xor
(bad)
(bad)
push
sbb
and
popa
push
jle
data16
call
dec
data16
es
or
lds
es
imul
mov
xchg
sub
aaa
mov
stos
jmp
and
rcl
jg
out
cli
call
mov
les
jbe
pop
xchg
iret
in
mov
imul
(bad)
(bad)
dec
sub
cmp
or
cwde
xchg
push
jbe
fadd
movs
js
cli
(bad)
(bad)
call
add
test
inc
mov
int
sbb
imul
das
sub
test
cwde
cmp
scas
hlt
and
xchg
repnz
ret
sbb
outs
cmp
inc
mul
jnp
sbb
mov
in
std
ins
inc
daa
stc
lock
sahf
(bad)
(bad)
mov
mov
daa
or
inc
adc
push
mov
(bad)
inc
aas
pop
cmc
cmp
pop
xchg
and
jnp
adc
adc
arpl
lahf
mov
adc
dec
out
cmp
add
jg
out
pop
pop
bound
imul
(bad)
(bad)
jmp
add
lahf
adc
and
jge
mov
enter
(bad)
dec
ins
xor
sbb
(bad)
jmp
mov
xchg
inc
jecxz
mov
push
repnz
cli
(bad)
jmp
shr
xor
xlat
sub
(bad)
push
mov
(bad)
(bad)
push
cmp
dec
into
push
test
inc
pushf
test
daa
sub
(bad)
fcomip
(bad)
push
and
inc
test
ins
hlt
in
mov
or
(bad)
(bad)
(bad)
call
(bad)
pop
out
dec
cmp
push
lea
stos
sub
jl
mov
sar
(bad)
(bad)
call
hlt
push
and
mov
jb
inc
push
mov
inc
fist
shr
or
jg
mov
movs
adc
loopne
jno
test
(bad)
(bad)
(bad)
(bad)
cmp
xchg
outs
dec
(bad)
cmp
mov
and
inc
push
repnz
fisub
enter
jbe
xchg
inc
add
inc
pop
push
or
test
mov
lods
lods
(bad)
(bad)
(bad)
dec
or
push
or
cmc
cmp
loope
gs
jecxz
sub
push
pop
mov
(bad)
fimul
test
test
div
in
xor
ins
arpl
movs
movs
scas
mov
mov
and
mov
(bad)
das
movs
icebp
push
jnp
aad
inc
or
mov
pushf
cmp
jmp
mov
(bad)
in
sbb
je
add
sbb
(bad)
(bad)
mov
movs
add
arpl
xchg
into
jae
xor
fadd
(bad)
fbld
fnstcw
hlt
mov
fdiv
pop
aas
fmul
or
(bad)
(bad)
call
push
and
pop
outs
lods
ror
push
div
stc
push
hlt
call
pop
fidivr
(bad)
dec
or
aas
mov
xchg
jb
inc
shl
pusha
out
(bad)
(bad)
(bad)
jmp
push
and
(bad)
fnstcw
repz
xor
mov
dec
jb
rcr
push
or
std
xchg
dec
daa
dec
jmp
mov
jmp
xor
xor
repz
(bad)
(bad)
dec
xor
inc
cld
retf
jp
bound
pop
(bad)
outs
fdivr
or
icebp
jg
jmp
int
sub
adc
out
xor
imul
push
(bad)
fild
jle
mov
cmps
push
xchg
enter
xchg
mov
rol
and
or
inc
cmp
xor
ret
cmp
icebp
outs
xor
(bad)
(bad)
jmp
xchg
push
jge
xchg
push
push
sub
ins
xor
push
pop
xor
(bad)
stos
in
psubusw
test
sub
or
push
retf
call
aaa
add
pusha
cwde
sub
mov
jns
repz
call
mov
aad
mov
xor
dec
push
mov
sbb
push
ins
push
inc
push
lods
or
push
scas
aas
(bad)
xchg
loope
dec
(bad)
(bad)
(bad)
call
cld
push
inc
fmul
dec
mov
dec
cmovnp
arpl
cmp
mov
(bad)
(bad)
inc
fistp
clc
jmp
popa
shl
icebp
test
push
aam
ins
ss
ds
(bad)
jno
(bad)
fxch
jns
sbb
(bad)
(bad)
call
(bad)
cli
sahf
hlt
push
stc
or
push
jge
mov
ins
rcr
lods
call
sar
call
inc
inc
dec
pop
lock
push
inc
mov
push
xchg
cmovb
test
push
(bad)
(bad)
jmp
jnp
jge
xchg
add
and
test
cli
add
xor
ss
(bad)
jg
jg
mov
jae
iret
enter
mov
repz
jo
dec
sbb
mov
(bad)
dec
out
xor
mov
rcl
mov
iret
(bad)
mov
cld
rep
inc
hlt
cmp
jb
push
or
add
add
(bad)
(bad)
(bad)
jmp
sub
movs
inc
iret
cmp
in
(bad)
cmp
(bad)
xor
hlt
lock
(bad)
(bad)
cmp
repnz
repz
cmp
cmp
ret
and
push
in
pop
pop
xor
(bad)
call
or
outs
repz
cld
cmp
dec
mov
stc
add
adc
neg
inc
(bad)
(bad)
mov
or
sub
or
jo
cmp
jae
jg
stc
mov
aaa
cld
(bad)
push
mov
mov
jns
lods
pop
cmps
pushf
lea
add
fimul
mov
(bad)
(bad)
dec
mov
and
jbe
xchg
scas
cmp
dec
jns
popa
jmp
pop
sub
nop
cwde
adc
sbb
jne
cmps
mov
aam
jl
mov
adc
loopne
outs
or
xor
adc
cmp
push
or
ret
push
inc
pop
std
push
fmul
(bad)
push
in
sub
pop
sbb
xchg
test
lock
jne
push
jne
jle
(bad)
mov
sar
(bad)
jmp
sahf
mov
jl
push
cmp
inc
adc
push
test
push
les
and
fisttp
out
cmc
jl
adc
jp
ficom
mov
dec
mov
cmp
call
jbe
repz
jnp
pop
and
aam
sub
dec
in
dec
xor
adc
inc
cmps
(bad)
(bad)
(bad)
dec
cmp
pop
mov
dec
jg
iret
lahf
xchg
lods
rcl
mov
(bad)
(bad)
dec
ins
dec
sahf
cld
pusha
xchg
dec
cmp
ret
inc
(bad)
stc
mov
sbb
adc
pop
mov
loop
(bad)
jmp
out
adc
jmp
adc
mov
lock
lahf
jle
dec
ss
adc
lods
mov
cmc
clc
cmp
imul
cmp
cmp
pop
mov
lods
aas
popa
lods
cld
inc
push
mov
out
(bad)
(bad)
(bad)
call
in
xor
pushf
add
fwait
aad
jns
icebp
ds
push
push
lds
mov
(bad)
(bad)
(bad)
(bad)
mov
test
inc
sub
sbb
test
adc
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
adc
cmp
mov
(bad)
xor
ins
mov
clc
repnz
fsubrp
add
(bad)
inc
cmc
jecxz
jl
in
or
mov
push
stos
jno
cmc
pop
mov
cld
(bad)
inc
inc
or
bound
cmp
popa
mov
icebp
xchg
xor
fbstp
jbe
ret
clc
out
xchg
pop
int3
mov
or
lock
loope
fnstenv
(bad)
jmp
ret
and
ss
test
rol
add
(bad)
(bad)
(bad)
call
lahf
in
or
mov
das
xor
into
push
adc
ss
and
cmps
inc
mov
sbb
cli
(bad)
(bad)
(bad)
(bad)
fisub
cmp
scas
xchg
mov
pop
arpl
and
stos
mov
inc
lock
inc
shl
add
stos
mov
cmp
movs
ja
mov
icebp
push
enter
and
mov
test
aad
or
(bad)
(bad)
(bad)
push
cs
movs
out
push
add
adc
push
adc
fwait
leave
hlt
add
inc
fs
push
cld
data16
xor
imul
adc
fist
in
hlt
xlat
imul
mov
push
(bad)
(bad)
(bad)
(bad)
inc
(bad)
cmc
ret
pop
int3
mov
in
sub
cmp
mov
xchg
xchg
mov
(bad)
(bad)
(bad)
(bad)
in
add
jns
add
inc
out
add
mov
ins
xor
lds
inc
adc
xchg
xchg
push
adc
movs
or
sub
inc
test
movs
push
push
xchg
(bad)
call
inc
mov
cmp
into
adc
jmp
clc
xor
in
mov
mov
inc
pop
(bad)
(bad)
(bad)
dec
ins
pop
jbe
in
out
in
xor
fisubr
sbb
ja
jmp
dec
adc
ins
sub
aad
xor
fs
(bad)
(bad)
call
fwait
shl
jbe
xor
icebp
pop
inc
push
push
sbb
hlt
lods
fnclex
fdivr
(bad)
push
cwde
repnz
sub
rcr
inc
dec
fnsave
mov
cmc
cmp
push
pop
mov
loopne
fimul
jl
(bad)
(bad)
(bad)
dec
jns
idiv
movs
test
and
mov
push
popf
pop
mov
aad
(bad)
jg
(bad)
in
mov
mov
mov
pop
and
repnz
cli
aam
add
fwait
sar
cmp
adc
or
xchg
jle
(bad)
(bad)
jmp
cmp
inc
test
ds
(bad)
jecxz
adc
push
sbb
jnp
jbe
(bad)
(bad)
(bad)
dec
push
retf
sbb
mov
repz
cmc
cmps
mov
xchg
xchg
arpl
(bad)
(bad)
call
shl
loopne
inc
pop
mov
inc
iret
(bad)
les
icebp
dec
aad
pop
mov
jne
ror
(bad)
(bad)
(bad)
dec
(bad)
add
and
jno
push
push
mov
sar
sbb
aaa
jl
jg
ror
(bad)
(bad)
mov
cmp
jle
js
push
repnz
push
and
sbb
dec
(bad)
arpl
outs
lds
ins
xchg
dec
loopne
xchg
pop
ret
push
stos
push
sub
cld
(bad)
aam
inc
cwde
jo
push
bound
mov
out
and
push
push
push
push
cmc
or
xor
xchg
sbb
out
into
ret
mov
fidiv
test
repnz
ja
fwait
jo
dec
xchg
(bad)
(bad)
dec
(bad)
sub
ror
(bad)
(bad)
(bad)
inc
sar
jmp
xor
retf
add
jo
leave
cwde
dec
xor
and
mov
push
mov
adc
push
inc
(bad)
call
(bad)
add
mov
mov
dec
cmps
(bad)
dec
pop
je
xchg
jge
cdq
add
adc
cmc
mov
xor
push
adc
fs
or
and
xor
sub
mov
and
add
push
fidiv
repnz
pop
xchg
call
push
jbe
sbb
lock
sbb
(bad)
(bad)
ds
lods
jae
xchg
xchg
hlt
push
jmp
mov
adc
xchg
pop
fstp
into
jbe
jg
lock
mov
sub
cmp
jmp
xchg
stc
ss
repnz
mov
jns
ret
mov
adc
cmp
frstor
movs
inc
loope
sub
and
mov
inc
es
(bad)
(bad)
call
push
ds
pop
jae
mov
les
std
inc
jecxz
sub
(bad)
(bad)
(bad)
call
mov
adc
mov
xchg
mov
aad
(bad)
push
sbb
pop
cmc
dec
cmp
cmps
and
xor
cmovo
push
loop
icebp
jns
mov
(bad)
das
inc
mov
aam
dec
cmp
dec
lods
dec
js
jg
sti
into
cmps
add
cli
test
cmc
xchg
(bad)
(bad)
mov
fidiv
pop
pop
xchg
xor
pop
mov
jl
or
jns
clc
(bad)
push
inc
fisubr
repz
movs
mov
mov
lock
push
xchg
(bad)
(bad)
dec
lds
dec
or
dec
pusha
rcl
in
or
cmp
push
cmp
(bad)
(bad)
(bad)
jmp
lea
xor
xor
mov
cdq
xor
out
dec
cmc
push
pop
or
aaa
(bad)
(bad)
(bad)
call
pop
mov
jns
push
push
loope
xchg
inc
cmp
jno
or
push
jnp
mov
daa
cmp
(bad)
jmp
sbb
inc
xlat
add
jmp
pop
loope
stc
lods
sub
mov
jbe
xchg
sub
bound
loope
lods
je
push
cmc
enter
loopne
adc
repnz
(bad)
(bad)
call
push
mov
jge
stos
out
inc
cmp
(bad)
xlat
xor
movs
bound
xchg
jmp
cwde
(bad)
int3
sub
repz
pop
xor
mov
push
jnp
adc
outs
clc
and
lds
fidiv
(bad)
push
movs
or
sub
(bad)
jmp
stos
popf
jne
imul
push
popf
jno
inc
(bad)
push
mov
xchg
clc
jmp
and
(bad)
jmp
rcr
push
jg
cmp
int
(bad)
rcr
pop
mov
jmp
(bad)
(bad)
mov
imul
je
rep
stc
add
pop
lods
sbb
mov
jns
popa
jmp
iret
xor
or
add
aam
inc
(bad)
xchg
lock
fcomi
in
ins
les
sahf
add
cmp
mov
jge
popa
frstor
movs
fiadd
mov
add
mov
les
pop
leave
dec
test
add
scas
arpl
outs
call
inc
jle
call
cmp
outs
(bad)
(bad)
(bad)
(bad)
cmp
dec
or
loope
mov
lea
sub
sbb
cdq
jns
retf
fcomp
repz
mov
(bad)
(bad)
(bad)
fcomip
lds
bound
inc
and
test
test
and
call
pop
arpl
jmp
inc
pop
cmps
js
add
adc
mov
int3
leave
jns
xor
sub
jp
(bad)
jg
xchg
xchg
xor
hlt
xchg
cmp
add
jne
aad
stc
inc
stos
jmp
(bad)
(bad)
fcmovne
loop
movs
mov
push
xor
test
push
push
fild
retf
mov
(bad)
(bad)
(bad)
mov
leave
daa
xor
popa
mov
out
out
add
cwde
sbb
loop
pop
cmp
(bad)
iret
xor
(bad)
mov
(bad)
jmp
xor
je
jge
and
loope
sbb
out
dec
cmp
aad
(bad)
(bad)
(bad)
call
aam
popf
mov
or
xor
cmc
fisubr
or
pop
in
sbb
and
xor
cmp
mov
test
movs
stos
push
jbe
jns
iret
retf
inc
cmps
or
call
add
fcom
dec
or
adc
xor
aad
(bad)
cmp
retf
dec
dec
cmps
cmp
or
aam
jne
loop
ins
stos
(bad)
(bad)
(bad)
call
scas
jne
stos
retf
dec
cmp
fst
inc
enter
lea
mov
xor
shl
aaa
push
cmp
pop
push
hlt
inc
dec
outs
fldcw
sbb
loop
jg
cmp
inc
or
xchg
sub
not
fld
sub
ja
cmp
(bad)
push
push
retf
ret
pop
enter
inc
and
mov
loope
mov
jae
add
jmp
adc
and
dec
inc
pop
sbb
and
daa
push
(bad)
mov
cmc
lock
sbb
xchg
sti
out
adc
pop
dec
inc
aad
fldcw
sbb
pop
xor
(bad)
(bad)
(bad)
cmp
push
pop
sub
pushf
pop
inc
cmps
xor
inc
push
lods
cmp
fst
retf
dec
xor
(bad)
(bad)
jmp
daa
aas
mov
cmc
adc
push
jnp
mov
xor
and
pop
loopne
mov
loop
xchg
aam
xor
cmp
ret
(bad)
(bad)
(bad)
jmp
xor
not
adc
or
ret
xchg
mov
lds
clc
cmp
ret
test
lahf
pop
(bad)
inc
(bad)
dec
stos
pop
mov
repnz
jp
repz
not
aas
pop
or
(bad)
(bad)
fcomip
add
jmp
pop
mov
aas
xchg
(bad)
dec
das
jne
mov
push
push
sbb
(bad)
(bad)
(bad)
jmp
dec
adc
mov
mov
xor
jmp
sbb
push
jl
push
scas
cli
mov
daa
cmp
inc
call
xor
pop
(bad)
mov
cs
sbb
pop
fisubr
adc
cmp
ret
(bad)
sub
hlt
dec
jb
into
push
pop
adc
mov
xlat
fldenv
(bad)
(bad)
push
inc
iret
mov
pop
cmp
pop
sub
add
dec
adc
mov
stc
repz
mov
or
outs
jae
in
test
jg
xor
and
(bad)
adc
(bad)
inc
cmp
xchg
mov
cmps
cmp
call
jg
jecxz
or
or
fistp
mov
fcomi
ret
mov
pop
jns
std
push
js
sub
retf
mov
mov
jecxz
(bad)
jg
mov
sub
call
shl
add
inc
ja
xor
add
jmp
sub
mov
in
or
cmp
(bad)
push
adc
adc
xor
scas
mov
(bad)
call
pushf
sbb
sti
dec
in
or
mov
adc
cmp
sbb
jmp
fist
cmc
push
cmp
push
xchg
mov
(bad)
call
nop
mov
aas
inc
adc
cli
mov
xor
(bad)
(bad)
call
xor
movs
or
bound
push
xchg
mov
cmp
jns
(bad)
lahf
pop
loop
jae
adc
inc
cld
add
cmp
sti
mov
ror
push
nop
loope
jns
lock
clc
ja
(bad)
cli
cmp
loop
mov
pushf
retf
dec
mov
stos
or
mov
mov
mov
mov
icebp
push
jg
add
ds
ret
dec
int3
in
sub
mov
lea
push
add
loope
adc
(bad)
ret
jbe
out
xor
test
outs
ret
jmp
dec
retf
bound
outs
dec
push
call
pop
addr16
xchg
call
(bad)
(bad)
(bad)
jmp
cmps
scas
fldcw
inc
push
jmp
jmp
bound
inc
lods
mov
out
clc
(bad)
(bad)
fiadd
mov
mov
cwde
imul
mov
push
(bad)
push
mov
jge
lahf
push
sbb
mov
jae
sti
inc
adc
pusha
loope
dec
cld
jbe
loope
(bad)
shl
mov
sbb
jne
(bad)
(bad)
(bad)
pop
xchg
jecxz
call
aaa
mov
add
fistp
pusha
outs
xchg
xchg
pop
test
or
pop
(bad)
(bad)
mov
ja
jp
or
push
es
cmp
adc
aam
or
(bad)
inc
cli
push
fs
push
aaa
adc
adc
cmp
(bad)
jmp
inc
pop
inc
jne
sbb
iret
pop
hlt
lods
popa
sahf
add
arpl
jmp
scas
cdq
xchg
and
outs
add
mov
pushf
aas
lahf
pop
dec
mov
fistp
fs
sar
adc
xchg
push
sbb
sbb
mov
cmp
fmul
nop
lock
imul
sub
in
fistp
dec
jbe
repz
mov
dec
jg
mov
lods
pop
or
(bad)
jmp
lds
mov
sub
out
xchg
xchg
add
push
cmp
add
(bad)
fcomip
mov
stos
inc
data16
add
xchg
xlat
test
mov
aaa
and
les
push
add
pop
jmp
mov
adc
jnp
addr16
pushf
sub
mov
enter
jbe
(bad)
(bad)
call
(bad)
sbb
outs
xor
cmp
ror
stc
push
stos
(bad)
(bad)
(bad)
pop
lds
cmp
add
mov
cmp
cmps
pop
and
(bad)
(bad)
jmp
jmp
mov
loop
enter
and
lods
mov
ret
bnd
stos
jle
or
inc
sti
aaa
iret
lods
ficom
fs
inc
jl
stos
(bad)
jmp
push
xor
test
add
sbb
outs
inc
js
dec
fisub
(bad)
(bad)
jg
jmp
mov
fisttp
ss
je
push
mov
cli
pop
jle
xchg
test
adc
(bad)
(bad)
jmp
pop
dec
stos
mov
mul
xchg
stos
retf
mov
stos
jne
sub
call
inc
hlt
xor
push
(bad)
out
mov
jno
xchg
outs
fwait
cmp
(bad)
mov
outs
shl
dec
xchg
shl
shl
(bad)
es
push
xchg
xchg
cs
(bad)
(bad)
push
inc
push
repnz
(bad)
dec
test
popa
lea
ror
mov
push
pop
xor
rcr
(bad)
cmp
cmp
add
popa
cld
stos
mov
cs
cmp
xor
ret
sti
inc
push
aad
push
xchg
pop
lods
(bad)
fcomip
or
rep
cmp
rcr
inc
inc
test
in
add
lods
(bad)
(bad)
(bad)
jmp
pop
rol
repnz
loop
sub
not
int3
sbb
cmps
mov
fisub
mov
sbb
sbb
lahf
xor
repz
push
xchg
push
cmp
(bad)
dec
cld
(bad)
in
inc
fs
sti
mov
mov
repz
push
xchg
in
jno
(bad)
jg
xor
mov
cmp
cwde
xchg
xor
and
xor
(bad)
sbb
dec
sbb
xchg
mov
ret
jmp
jmp
mov
fdivr
dec
cdq
test
imul
adc
xor
(bad)
(bad)
aas
push
push
xor
cmp
pushf
in
or
adc
lods
(bad)
(bad)
dec
imul
bound
scas
xor
sub
dec
stos
inc
mov
into
and
rol
call
sbb
pop
xor
mov
push
cmps
enter
mov
fwait
dec
inc
loope
jns
lahf
mov
dec
(bad)
(bad)
inc
sbb
cs
push
fiadd
and
ret
push
cmp
pop
icebp
(bad)
(bad)
mov
and
bound
jg
in
hlt
pop
mov
add
push
movs
gs
pop
shl
int3
xor
pop
std
(bad)
jmp
imul
das
retf
pop
pop
sbb
xor
sub
adc
fdivrp
(bad)
(bad)
(bad)
cmp
mov
sub
cmp
cmp
retf
int3
fadd
and
sti
push
inc
pop
stc
inc
and
add
or
sbb
and
push
pop
xchg
mov
sub
mov
xchg
inc
rol
push
mov
pop
push
inc
mov
bound
sub
aaa
cmp
les
jne
je
push
cmp
xor
push
ss
fwait
cmps
(bad)
(bad)
(bad)
(bad)
mov
aam
mov
or
imul
pusha
xchg
nop
mov
pop
(bad)
(bad)
(bad)
jmp
sti
cmp
adc
enter
test
pop
and
jbe
cmc
clc
xchg
(bad)
(bad)
(bad)
call
xchg
add
and
cmp
fldenv
jnp
jne
xor
dec
aaa
lds
cmp
sar
push
out
push
mov
call
retf
dec
loop
out
lahf
mov
js
fnstcw
retf
cmp
jae
std
repz
adc
fcom
ss
mov
(bad)
out
test
sbb
xor
loop
push
cwde
out
in
fwait
popa
adc
add
mov
(bad)
(bad)
in
mov
cmp
dec
mov
inc
ss
imul
in
jecxz
cli
(bad)
call
cmp
lds
pop
and
(bad)
push
xor
dec
sar
(bad)
cs
(bad)
or
ins
cli
hlt
add
call
(bad)
(bad)
jg
dec
and
jns
jno
mov
imul
jo
adc
fnstenv
scas
(bad)
(bad)
(bad)
push
push
outs
mov
cmp
pop
add
inc
mov
sub
push
stos
xor
sar
(bad)
push
sti
hlt
cmp
scas
add
aaa
jmp
inc
push
ret
push
xlat
(bad)
(bad)
jg
ss
jb
sbb
inc
test
pop
jne
lods
push
les
dec
fisubr
mov
dec
push
loop
xchg
sub
xor
push
push
pop
xchg
(bad)
(bad)
(bad)
call
mov
repnz
add
jmp
xchg
ror
inc
sbb
out
call
(bad)
(bad)
(bad)
fistp
pop
nop
xchg
sub
aas
mov
pusha
(bad)
dec
mov
rcl
jmp
shr
stos
push
mov
(bad)
(bad)
(bad)
cmp
mov
cmp
sbb
add
xchg
mov
cwde
xchg
repz
div
pop
sub
dec
aas
pop
sbb
push
xchg
clc
popa
cmp
in
mov
inc
sahf
cmp
push
add
mov
(bad)
dec
aam
push
test
aas
repz
and
cmp
(bad)
(bad)
(bad)
jmp
cmp
gs
cmp
sahf
xchg
daa
jle
xor
dec
mov
cmp
aaa
cld
inc
jg
outs
and
out
test
sbb
std
or
adc
test
(bad)
(bad)
call
xchg
nop
inc
sbb
aaa
push
imul
lahf
add
mov
loop
cld
(bad)
push
packsswb
adc
cmp
je
loopne
stos
sahf
jecxz
add
mov
(bad)
(bad)
mov
cmp
or
pop
sub
mov
xor
(bad)
(bad)
fbstp
jg
call
jecxz
cs
dec
dec
add
aad
push
movs
idiv
out
cli
inc
test
ret
push
cmp
jmp
or
mov
arpl
mov
(bad)
push
sbb
into
jecxz
jle
loopne
push
jl
mov
fcmove
jne
call
adc
scas
(bad)
(bad)
call
mov
sbb
mov
aas
mov
mov
std
mov
jne
add
loopne
fld
pop
outs
movs
jae
inc
(bad)
jg
inc
fs
inc
xchg
and
adc
(bad)
fldcw
sub
pop
nop
add
jbe
cmp
jmp
test
(bad)
(bad)
(bad)
dec
jne
ret
inc
xchg
push
repz
(bad)
jne
xchg
xchg
lock
dec
add
rcl
sti
out
(bad)
(bad)
(bad)
call
fwait
pop
test
adc
sbb
sbb
mov
mov
cmp
inc
retf
(bad)
(bad)
(bad)
jmp
add
mov
mov
hlt
pop
into
fdivrp
mov
xor
(bad)
aad
inc
pusha
fs
jg
aas
(bad)
(bad)
(bad)
fistp
loopne
adc
int
cmp
jae
xchg
bound
jmp
call
cmc
cmp
and
das
shr
inc
(bad)
sbb
inc
aaa
cmp
cld
pop
xor
push
aaa
stos
push
pop
(bad)
(bad)
cmp
cld
pushf
cwde
mov
in
cli
cmp
into
pop
imul
repz
(bad)
(bad)
(bad)
dec
mov
lahf
jne
inc
pusha
add
fbstp
loop
leave
or
jns
leave
sar
(bad)
push
xor
lea
sbb
lods
inc
or
hlt
in
int
mov
aaa
fadd
(bad)
jmp
add
mov
fnsave
jl
scas
jge
push
neg
stos
sar
sti
call
mov
sub
fiadd
lock
sbb
xor
(bad)
(bad)
push
dec
movs
mov
fstp
cwde
mov
xchg
outs
sbb
xor
cmp
(bad)
(bad)
inc
retf
outs
fisub
cdq
xchg
lods
adc
or
mov
cmp
mov
add
fld
arpl
jmp
mov
mov
mov
(bad)
jmp
icebp
xor
iret
in
push
or
(bad)
loope
jne
or
push
cmc
xchg
adc
cli
pusha
xor
test
cmp
leave
cdq
add
mov
cmp
pop
cld
jmp
(bad)
mov
cmp
mov
out
mov
ret
push
cmp
xor
in
dec
mov
(bad)
(bad)
mov
call
push
in
sahf
mov
jnp
cmc
(bad)
mov
mov
fnstcw
repnz
cld
push
(bad)
cld
popa
jmp
jnp
(bad)
pop
xchg
(bad)
(bad)
call
push
rcr
mov
inc
jnp
fistp
(bad)
push
push
or
mov
shl
mov
cmp
aaa
fwait
es
mov
rol
or
jae
push
adc
mov
(bad)
(bad)
inc
cmp
mov
push
pop
and
adc
aas
mov
jnp
push
add
push
movs
scas
pop
js
push
jg
std
lahf
fnclex
lock
sbb
mov
mov
(bad)
(bad)
(bad)
inc
jns
jae
bound
pop
mov
xor
mov
jns
mov
pop
(bad)
(bad)
(bad)
(bad)
jmp
mov
pusha
adc
das
mov
(bad)
adc
inc
mov
push
sbb
sub
pusha
clc
ja
dec
sti
xor
les
xor
stos
xor
and
ret
xor
scas
(bad)
fcom
cs
mov
dec
xchg
(bad)
(bad)
cmc
jnp
inc
push
inc
and
sbb
pop
xor
dec
adc
jg
(bad)
(bad)
dec
loope
sub
cdq
stc
and
(bad)
push
xor
loope
inc
imul
xchg
xor
dec
cmp
mov
or
dec
ffree
and
or
rep
jb
sbb
(bad)
mov
push
xor
int3
sbb
mov
inc
pop
out
or
jbe
(bad)
(bad)
dec
lock
jmp
xor
rcr
popa
add
pop
cmp
push
lock
sub
in
push
test
add
in
add
inc
dec
imul
mov
jge
js
inc
rol
sar
(bad)
(bad)
cmp
out
sub
jae
inc
push
in
into
and
mov
mov
jg
mov
cmp
mov
or
mov
in
das
mov
out
loop
adc
pusha
(bad)
(bad)
fcomip
mov
leave
loopne
out
or
xor
xor
jg
test
jae
mov
jmp
into
dec
pop
aaa
icebp
(bad)
pop
cmp
fwait
movs
jge
jmp
rcr
lea
shl
dec
adc
pop
mov
jmp
sbb
es
push
repnz
add
fiadd
(bad)
adc
pop
or
inc
jmp
mov
shl
call
jmp
or
xor
mov
push
js
mov
jmp
ret
mov
cmp
mul
mov
dec
push
addr16
(bad)
(bad)
call
mov
jp
aam
es
in
jo
cmp
jnp
sar
mov
(bad)
mov
scas
bound
loope
ins
push
ficomp
repz
jle
sub
mov
or
fild
adc
mov
mov
cmp
jmp
fstp
xor
das
ss
(bad)
call
cmp
jo
test
scas
push
inc
and
jns
(bad)
(bad)
jmp
inc
stos
sti
ret
jbe
in
push
int
sti
aaa
cmp
jmp
or
dec
mov
or
call
or
clc
xchg
xor
push
repz
inc
out
ins
pop
jns
sub
push
inc
inc
in
mov
popf
dec
loope
rol
and
mov
xor
adc
fbld
out
push
jmp
stos
sub
stos
jns
sub
push
rcr
mov
(bad)
(bad)
(bad)
jg
fnstcw
cmc
mov
sahf
sub
push
pop
jg
mov
jns
inc
mov
outs
lock
(bad)
jmp
cmps
pushf
sub
popa
(bad)
sub
(bad)
xchg
sub
sub
retf
jne
cli
pop
fdiv
pop
jmp
dec
xor
cmp
stos
in
jg
jmp
in
lahf
mov
mov
sbb
adc
fistp
(bad)
(bad)
call
call
repnz
jb
mov
sub
cmps
ret
das
cmc
les
(bad)
jns
jle
push
jg
xor
test
jmp
retf
xor
push
push
and
xchg
add
pop
mov
push
cli
mov
sbb
retf
ss
xor
xchg
adc
xor
push
sub
mov
push
dec
std
call
xor
pop
dec
fst
call
stos
adc
jnp
cli
call
lahf
das
ss
in
(bad)
imul
mov
mov
and
fcomip
inc
inc
ret
mov
jmp
fwait
sbb
loop
cwde
arpl
(bad)
(bad)
inc
sub
mov
es
adc
inc
cld
retf
pop
jg
call
inc
adc
(bad)
(bad)
(bad)
call
nop
clc
ins
jbe
dec
mov
pusha
int3
loope
scas
test
mov
into
ja
dec
rcr
(bad)
mov
dec
ins
push
imul
repz
mul
lock
arpl
(bad)
xchg
jg
leave
cmp
and
in
sub
sub
cmp
jg
lea
(bad)
(bad)
call
test
push
pushf
aad
repnz
or
inc
cld
jmp
and
add
ss
xchg
push
xchg
cmp
xchg
adc
push
inc
mov
cmc
push
das
sbb
mov
arpl
mov
(bad)
(bad)
fcmovnb
jg
xchg
mov
jge
push
cdq
mov
jecxz
movs
(bad)
fist
mov
or
pusha
inc
xchg
mov
jmp
into
dec
inc
jmp
int
mov
push
stos
repz
pop
sub
xor
sub
push
repz
outs
movs
test
push
push
mov
cwde
outs
cmp
mov
std
clc
loope
pop
repnz
(bad)
(bad)
(bad)
call
dec
sub
out
jmp
lock
cmp
pop
pushf
imul
mov
(bad)
pop
pop
cmp
adc
call
or
dec
sub
jnp
sti
ins
(bad)
in
jmp
aaa
mov
gs
in
jne
es
push
cwde
mov
mov
mov
retw
mov
xchg
retf
stos
and
and
aaa
sub
or
std
(bad)
mov
push
rcr
pusha
inc
imul
cmp
sub
or
mov
std
call
mov
repz
push
xchg
(bad)
rol
dec
mov
push
cdq
aas
(bad)
das
adc
sbb
jg
push
jp
xchg
call
mov
(bad)
call
test
xchg
cwde
into
mov
adc
idiv
mov
fmul
mov
neg
retf
push
sub
(bad)
cmc
jmp
retf
ret
push
mov
loopne
(bad)
mov
push
push
cmps
ins
dec
cli
fild
dec
or
and
ins
test
fs
push
(bad)
(bad)
(bad)
jmp
adc
and
cmp
jae
jg
cmps
mov
ds
das
mov
ds
mov
mov
adc
(bad)
(bad)
inc
shl
push
push
rcr
add
jl
xchg
sub
push
mov
into
inc
push
xchg
push
(bad)
(bad)
(bad)
call
aas
jns
inc
cmp
ror
jmp
jg
ss
mov
xor
(bad)
(bad)
(bad)
inc
aas
ret
mov
pop
loop
jmp
out
imul
and
retf
mov
push
adc
mov
rcl
sbb
add
ficomp
cmps
(bad)
call
clc
xor
fdivr
leave
mov
jg
(bad)
mov
adc
call
mov
sti
imul
les
cdq
and
dec
sbb
sbb
(bad)
(bad)
push
(bad)
jmp
jle
jmp
mov
mov
adc
adc
imul
(bad)
dec
jb
icebp
stc
and
mov
es
aam
cmp
test
dec
sub
scas
cs
adc
(bad)
push
jae
(bad)
(bad)
(bad)
jg
(bad)
or
push
cmp
retf
jmp
inc
aad
data16
mov
in
inc
add
movs
test
cs
cmp
dec
cmp
jle
(bad)
or
dec
(bad)
(bad)
jg
add
cmp
fldlg2
dec
dec
ds
pop
arpl
call
inc
and
dec
pop
and
(bad)
cwde
test
inc
cwde
sub
(bad)
dec
push
sti
push
call
stos
leave
jmp
cld
inc
div
push
xor
sbb
(bad)
(bad)
jmp
dec
push
mov
sub
je
xchg
jp
ret
inc
pop
fisttp
in
mov
inc
sub
cs
cmc
adc
imul
add
sub
mov
dec
out
data16
(bad)
(bad)
inc
sub
clc
lahf
mov
xchg
in
inc
loope
add
ins
sar
adc
ror
ficomp
ss
cmp
or
(bad)
mov
cmp
fsub
icebp
sub
jb
jmp
sub
outs
sbb
cmp
pop
dec
inc
aaa
in
dec
jmp
cmp
outs
test
push
mov
movs
(bad)
jg
jmp
cmp
in
xor
daa
repnz
jo
adc
jnp
dec
push
int
movs
icebp
xchg
(bad)
(bad)
inc
mov
pop
adc
cmp
push
sbb
shl
stos
(bad)
(bad)
inc
push
fisubr
test
jl
int
inc
arpl
mov
gs
aam
inc
call
in
sbb
xor
test
call
pop
mov
mov
call
lods
imul
sti
repz
sub
scas
ss
xor
cmp
(bad)
jmp
movs
or
sbb
jno
fld
mov
pop
out
fld
frstpm(287
sub
(bad)
(bad)
dec
idiv
cwde
(bad)
les
mov
dec
push
mov
inc
cmp
arpl
out
pop
hlt
push
fistp
test
sbb
adc
call
pop
cli
fild
dec
mov
(bad)
popa
sub
push
pop
out
nop
movs
fild
jne
and
push
push
mov
(bad)
call
cmp
div
pop
bound
stc
cmc
xor
add
cmp
cld
dec
jne
adc
(bad)
(bad)
(bad)
dec
rcr
test
dec
pusha
ja
or
in
std
and
ins
cmps
cs
call
mov
push
fst
shl
jns
cmp
jnp
sub
icebp
inc
cwde
pushf
mov
push
xor
jo
push
jae
rcr
aas
nop
popf
shl
jge
xchg
cmp
(bad)
call
xchg
in
sbb
mov
out
into
cs
mov
(bad)
push
jo
pop
jg
xor
adc
pop
div
jns
cmp
xor
loope
ja
ret
push
cli
xor
push
je
inc
dec
dec
pop
push
add
std
(bad)
(bad)
mov
dec
test
loope
mov
popa
jp
mov
gs
cmp
jnp
(bad)
(bad)
push
aam
mov
not
mov
sub
scas
sbb
leave
inc
mov
(bad)
(bad)
ds
cmp
leave
cwde
xchg
repz
cmp
sbb
adc
arpl
imul
fbld
xor
rcl
mov
icebp
ins
lock
push
mov
dec
and
out
jae
(bad)
(bad)
(bad)
jmp
inc
(bad)
outs
stc
xor
jmp
cmp
adc
jnp
ins
leave
data16
pop
inc
(bad)
(bad)
call
sahf
les
jbe
add
mov
sti
jl
inc
jl
cmp
fidivr
xor
(bad)
(bad)
(bad)
fild
or
lahf
mov
cmp
into
adc
mov
into
popa
cli
rol
outs
(bad)
(bad)
js
bound
jge
(bad)
mov
sbb
cmp
movs
mov
jne
xor
les
shl
enter
fwait
sub
(bad)
cmp
(bad)
and
cmp
pop
pop
popf
cmp
dec
mov
iret
add
fwait
js
cmp
add
shl
loopne
movs
aaa
or
ficomp
jnp
cs
cs
(bad)
pushf
and
sbb
test
cld
call
push
cwde
mov
sub
lea
(bad)
jg
ins
push
cmps
aas
xchg
cdq
jnp
ds
inc
adc
std
pop
push
inc
inc
leave
ins
dec
pop
pop
cmp
adc
mov
outs
fld
inc
xchg
and
aaa
cmp
mov
pop
scas
(bad)
(bad)
(bad)
call
and
pop
lahf
shr
stos
ja
loope
and
push
fidivr
dec
push
repnz
(bad)
(bad)
push
mov
imul
mov
imul
daa
fimul
jle
inc
mov
aam
movs
and
push
adc
ins
enter
inc
pop
fidivr
pop
(bad)
mov
jns
aad
repz
lahf
dec
jnp
in
shl
jmp
dec
sbb
jge
adc
(bad)
(bad)
mov
lods
mov
test
lods
jecxz
jne
shl
or
sbb
xchg
inc
dec
(bad)
(bad)
(bad)
inc
inc
xchg
xor
ins
in
aas
rol
push
pop
push
xor
mov
or
(bad)
inc
cmp
cdq
dec
and
pop
stc
aaa
xor
xchg
aaa
(bad)
(bad)
(bad)
jmp
cmp
stc
(bad)
sub
dec
add
retf
hlt
or
fnsave
ja
stos
(bad)
inc
lods
xor
inc
ffree
fbstp
repnz
pop
sahf
inc
cmp
jbe
(bad)
(bad)
dec
sbb
iret
mov
mov
sti
leave
dec
adc
jge
add
jnp
jns
push
outs
sbb
and
push
test
push
mov
clc
popa
push
sbb
lds
cld
(bad)
push
ret
add
jns
pop
(bad)
or
jl
scas
cmp
cmp
xchg
test
ret
or
cmp
(bad)
jmp
push
loope
loope
jae
dec
mov
or
popa
push
lock
(bad)
(bad)
fnstcw
repz
lahf
cmp
and
inc
mov
push
lods
dec
es
and
repnz
push
out
push
js
mov
or
and
daa
test
and
dec
jge
cmc
(bad)
(bad)
(bad)
jmp
movs
inc
fs
mov
mov
test
(bad)
and
out
imul
(bad)
call
push
fst
adc
push
shr
mov
fstp
loop
(bad)
dec
jecxz
call
movs
add
mov
or
hlt
retf
hlt
ret
mov
add
inc
inc
fcomi
or
mov
(bad)
mov
call
loope
aaa
(bad)
loopne
popf
les
hlt
xor
(bad)
(bad)
(bad)
call
adc
stos
iret
sahf
fwait
scas
and
mov
cmp
jb
adc
pop
inc
jmp
call
push
ficom
inc
ror
(bad)
(bad)
(bad)
call
xor
inc
adc
mov
xor
mov
call
arpl
cld
(bad)
(bad)
jmp
sar
adc
int
cmp
js
xchg
imul
popf
stc
(bad)
(bad)
push
push
loope
mov
es
inc
cli
or
pop
(bad)
retf
add
adc
cld
leave
adc
(bad)
jns
sub
icebp
std
and
data16
xchg
daa
adc
test
pop
scas
xlat
inc
stc
xchg
sub
fild
pop
xchg
fwait
(bad)
adc
xor
stc
stos
ss
(bad)
(bad)
dec
xor
imul
and
xor
int
dec
adc
(bad)
(bad)
(bad)
call
cdq
dec
sar
div
repz
movs
stos
mov
aas
cmp
cmp
loopne
xchg
jge
jle
lahf
and
xor
(bad)
(bad)
call
out
inc
xor
int3
jo
xchg
les
jne
jbe
xchg
ins
aaa
loope
(bad)
xchg
sub
pop
jne
push
jecxz
(bad)
(bad)
jmp
add
imul
fst
xchg
or
or
jb
sbb
xchg
(bad)
inc
mov
dec
adc
mov
jb
sub
pusha
pop
mov
retf
jb
mov
das
hlt
jmp
push
xor
cmp
adc
(bad)
(bad)
jmp
mov
jne
out
shl
addr16
inc
or
xor
xchg
call
loopne
sbb
adc
test
(bad)
mov
mov
push
inc
xor
ret
mov
add
cmp
repnz
(bad)
(bad)
(bad)
mov
ja
mov
fst
stos
lahf
and
in
pop
jmp
(bad)
(bad)
call
cmp
adc
jmp
push
push
gs
(bad)
(bad)
call
(bad)
and
xor
js
(bad)
repnz
dec
gs
fldz
and
test
scas
ror
shl
std
(bad)
(bad)
call
add
scas
data16
inc
pop
fisttp
popa
(bad)
push
je
cmps
loope
daa
hlt
(bad)
(bad)
dec
lea
mov
push
loop
call
mov
inc
int
leave
inc
cld
push
bound
xchg
inc
push
pop
rcl
(bad)
dec
xor
lea
jle
popa
inc
in
push
repnz
mov
idiv
shr
(bad)
(bad)
(bad)
jmp
imul
lea
(bad)
movs
mov
push
retf
mov
sub
mov
sub
fwait
stos
xchg
(bad)
(bad)
(bad)
jmp
outs
mov
xor
into
int3
and
mov
imul
rol
rcr
inc
inc
xlat
icebp
movs
jae
ja
je
adc
call
mov
pop
push
pop
adc
xor
pop
(bad)
out
imul
es
xchg
cld
outs
jl
add
mov
add
(bad)
call
mov
fisubr
sahf
mov
cmp
add
mov
(bad)
(bad)
call
jnp
mov
ss
dec
xchg
pop
mov
pop
sbb
mov
jecxz
ds
jbe
inc
loope
sub
dec
add
inc
mul
sbb
xchg
stc
push
mov
out
iret
xor
pushf
pop
cmp
std
call
aam
mov
xchg
retf
jbe
push
xchg
test
call
dec
aas
cmp
sub
push
gs
xchg
popa
and
push
mov
scas
cs
ja
rol
mov
mov
(bad)
dec
jmp
call
jns
outs
mov
nop
add
dec
xchg
adc
mov
lahf
popf
aaa
cmp
cmps
add
ror
xchg
jecxz
adc
(bad)
call
leave
aad
retf
or
cmp
sahf
push
popa
inc
dec
inc
repnz
mov
movs
cmp
(bad)
(bad)
(bad)
jg
jmp
xchg
(bad)
(bad)
call
arpl
scas
pop
dec
pop
pushf
and
aaa
cld
(bad)
jmp
js
js
xchg
jae
in
test
jmp
push
push
fdivr
push
in
scas
ror
into
dec
xchg
jl
add
or
push
push
sbb
pop
retf
jae
adc
(bad)
(bad)
in
cmp
mov
popf
sbb
shr
inc
or
sbb
pop
push
cmp
push
add
cmp
ins
pop
mov
rcl
loop
(bad)
jmp
dec
shl
lods
mov
adc
xchg
test
(bad)
(bad)
call
add
repz
inc
inc
(bad)
add
lahf
loopne
mov
push
add
push
aam
and
xchg
inc
lea
call
push
add
fiadd
out
sti
xchg
and
adc
jp
(bad)
ins
jbe
ja
(bad)
jg
push
les
xor
xor
scas
loop
jecxz
aas
xchg
out
mov
call
mov
repz
retf
push
test
lahf
hlt
in
(bad)
(bad)
(bad)
push
sar
retf
cmp
mov
mov
xchg
push
lea
jne
xchg
in
sbb
ins
push
mov
(bad)
mov
shl
cmova
xor
jno
push
jae
addr16
je
cld
(bad)
(bad)
(bad)
(bad)
xchg
fwait
add
in
inc
pop
inc
mov
fnstcw
ins
outs
push
cmp
adc
nop
(bad)
push
mov
cli
jbe
mov
lods
mov
(bad)
(bad)
inc
mov
retf
inc
mov
stc
scas
mul
inc
arpl
jnp
(bad)
(bad)
(bad)
call
das
adc
jecxz
or
jl
sbb
hlt
std
inc
and
loope
mov
hlt
jo
repnz
xor
(bad)
jmp
ret
add
push
mov
repnz
dec
cmp
adc
push
push
pop
adc
inc
xchg
inc
add
jmp
push
test
jl
mov
dec
inc
test
(bad)
(bad)
call
sub
repz
aaa
(bad)
dec
push
inc
sti
mov
dec
mov
and
je
cmp
adc
inc
call
(bad)
mov
xchg
hlt
mov
xor
pop
(bad)
(bad)
(bad)
(bad)
fsub
scas
inc
pop
nop
cmp
inc
pop
sub
push
xchg
push
dec
pop
out
xchg
(bad)
call
sub
adc
stos
test
(bad)
(bad)
rcl
(bad)
(bad)
(bad)
jmp
fst
sub
aam
jne
mov
xlat
dec
aas
jecxz
inc
bound
retf
arpl
(bad)
(bad)
inc
call
cmp
repnz
std
repnz
inc
mov
out
mov
leave
pop
sub
mov
dec
or
mov
adc
inc
mov
(bad)
(bad)
jmp
aaa
gs
adc
jne
das
xchg
cmc
out
scas
aad
pop
movs
in
mov
cmp
push
or
test
popa
adc
push
jp
popa
push
mov
call
xchg
jp
push
iret
push
bound
repz
fnstsw
mov
inc
pop
loopne
stc
mov
(bad)
(bad)
mov
popa
(bad)
fist
lds
in
(bad)
(bad)
(bad)
push
test
add
jne
mov
mov
stc
loop
jp
cli
cmp
idiv
pop
cmp
rol
fld
(bad)
call
mov
and
jmp
loop
pop
lea
int
push
mov
add
les
(bad)
and
mov
(bad)
jg
inc
mov
xor
adc
inc
pop
inc
pop
mov
mov
sbb
jbe
dec
rcr
add
pop
xchg
sbb
push
test
xor
jge
in
cmps
pushf
jle
xchg
dec
icebp
(bad)
(bad)
call
stos
or
rcr
xchg
xor
pop
imul
pop
mov
push
pusha
std
jns
xor
fbld
sbb
ret
pop
cmp
imul
(bad)
push
scas
adc
push
inc
je
cld
mov
add
(bad)
call
mov
adc
inc
mov
xor
sbb
popf
ds
cdq
cwde
dec
inc
leave
or
das
cmp
cmp
sub
jmp
cmp
mov
mov
inc
jmp
stos
xor
ins
pop
pop
pushf
aas
xor
(bad)
pop
cmp
sar
(bad)
fbld
add
xlat
loop
repnz
(bad)
jmp
dec
ja
xchg
pop
dec
cs
mov
and
adc
not
lds
(bad)
(bad)
(bad)
push
sub
fdivr
add
(bad)
push
repz
leave
nop
test
dec
inc
xor
(bad)
jmp
and
sar
jo
pop
mov
adc
add
ja
and
fs
(bad)
(bad)
push
xor
add
mov
cs
xor
aas
pushf
scas
add
fstp
mov
mov
in
sbb
pusha
(bad)
xchg
(bad)
and
push
push
add
data16
xchg
add
(bad)
mov
aam
push
fcom
ficomp
inc
inc
enter
mov
mov
push
std
(bad)
(bad)
(bad)
mov
pop
mov
cld
mov
cwde
in
add
inc
adc
sti
scas
pop
sbb
gs
(bad)
mov
cli
or
dec
dec
xchg
in
stos
add
icebp
(bad)
out
nop
rol
sub
ret
xchg
mov
push
out
test
(bad)
(bad)
cmp
cmp
icebp
out
add
inc
mov
(bad)
call
inc
xchg
xchg
lods
xor
cdq
cmp
jmp
cmp
sbb
inc
mov
mov
or
xor
sbb
sbb
idiv
int3
in
(bad)
(bad)
call
repnz
mov
(bad)
aas
dec
call
xor
mov
cmp
(bad)
(bad)
(bad)
out
mov
pop
push
pop
jl
je
into
mov
out
test
scas
xchg
cwde
ret
xor
call
inc
inc
rcl
loope
(bad)
xor
push
xlat
ret
fstp
mov
sub
or
ret
popa
shr
test
jo
inc
shl
jl
cs
xchg
(bad)
(bad)
fist
or
std
and
call
or
jno
add
cwde
mov
or
jle
jns
dec
push
dec
xchg
jno
lock
jae
fs
mov
cmp
(bad)
(bad)
(bad)
jp
pop
or
push
cdq
repz
das
pop
pop
ds
pop
pop
ja
mov
shl
or
(bad)
(bad)
(bad)
dec
dec
sbb
cmp
xchg
push
xor
mov
call
mov
ins
mov
jmp
inc
or
cmp
ror
mov
lds
aaa
push
rcl
jbe
adc
fnstsw
in
cwde
hlt
adc
fistp
adc
(bad)
cmp
cmps
ja
hlt
xor
aad
cmc
inc
repz
mov
ja
loop
dec
sub
fst
dec
pusha
pop
(bad)
call
(bad)
jmp
fwait
mov
push
xchg
cmp
movs
adc
(bad)
(bad)
dec
mov
sbb
(bad)
call
shl
adc
retf
sub
(bad)
xchg
jecxz
mov
jg
cmp
(bad)
pop
jne
sub
into
clc
xor
movs
call
sub
fnstcw
dec
fbstp
fnsave
in
xor
jns
cmp
loope
jb
(bad)
mov
sbb
enter
dec
mov
ret
jle
(bad)
(bad)
jmp
fwait
and
lock
sti
fidivr
jnp
mov
inc
imul
bound
in
mov
(bad)
jmp
stos
pop
aad
daa
add
cmp
jae
fimul
(bad)
jg
clc
sti
dec
iret
test
mov
jne
pop
ret
adc
xor
loopne
mov
xchg
jge
push
(bad)
xor
inc
mov
jmp
scas
test
pop
call
adc
inc
test
sub
(bad)
(bad)
call
and
nop
inc
jne
out
popa
das
jae
pop
cmp
pop
and
jae
jmp
push
push
sub
repz
push
push
push
push
stos
test
scas
cmps
outs
(bad)
outs
add
aaa
(bad)
xor
(bad)
(bad)
jmp
lods
xchg
lods
push
(bad)
xor
mov
and
cmc
mov
xchg
mov
cmp
sub
ret
cld
sub
cmps
sub
leave
in
ss
(bad)
(bad)
push
mov
lds
ins
ret
pop
inc
out
and
(bad)
xor
xchg
and
mov
sbb
(bad)
stc
mul
fist
nop
xor
mov
retf
xor
ins
(bad)
(bad)
(bad)
inc
add
xor
sbb
or
retf
mov
mov
jnp
inc
loope
or
aaa
mov
(bad)
(bad)
(bad)
dec
or
jl
push
xchg
adc
sbb
call
push
mov
and
out
cmp
cmc
(bad)
(bad)
jmp
jge
mov
mov
test
xchg
sub
das
clc
call
push
adc
loop
sub
or
mov
push
enter
inc
call
je
add
mov
and
inc
(bad)
pop
or
pop
mov
xor
(bad)
(bad)
call
fst
adc
sbb
sub
popa
and
ret
cdq
jge
jge
inc
inc
lahf
out
sar
stos
dec
dec
or
cmp
push
fisttp
sar
jecxz
ss
imul
(bad)
std
mov
pop
adc
cmp
sub
adc
mov
loop
mov
cmp
(bad)
(bad)
jmp
pop
loope
jae
push
test
mov
rcr
dec
pop
sbb
scas
jmp
mov
mov
xor
cmp
push
sub
gs
sub
inc
(bad)
(bad)
mov
adc
sar
mov
cmps
stc
xor
and
shl
sbb
xchg
and
(bad)
(bad)
dec
jo
xlat
push
push
cwde
pop
(bad)
movs
jns
inc
into
pop
mov
dec
daa
pop
sub
(bad)
(bad)
call
fnclex
jae
mov
jns
xchg
ins
pop
xchg
mov
pop
loop
mov
(bad)
jmp
jge
push
sbb
mov
sahf
cmp
sub
sahf
adc
scas
xchg
or
xchg
dec
xor
in
mov
inc
push
inc
and
loope
mov
ror
cmps
fcomp
jmp
cmp
(bad)
(bad)
(bad)
jmp
fisubr
push
xchg
imul
jmp
or
daa
ds
mov
call
sbb
int3
or
stos
dec
xlat
pop
sub
push
out
cdq
cmp
mov
stos
add
leave
sahf
lock
inc
pop
xchg
mov
lock
mov
push
xor
sbb
ds
cmp
cli
adc
pop
or
mov
xchg
inc
fsubr
push
call
and
cmp
dec
adc
inc
ins
push
fs
pop
icebp
(bad)
jl
retf
xchg
fwait
push
xchg
(bad)
push
sub
sbb
repnz
and
aad
(bad)
push
cmps
xchg
xor
lea
sbb
add
jecxz
mov
push
data16
mov
cmps
out
ins
adc
adc
pop
fstp
xor
add
fnstcw
jne
add
inc
dec
fsub
pusha
test
sbb
cmc
(bad)
mov
ds
xchg
test
das
sub
dec
jnp
cmp
loopne
jl
jno
pop
inc
dec
jae
xor
(bad)
jns
push
addr16
rol
cmc
dec
dec
dec
movs
(bad)
loope
mov
sub
sub
movs
(bad)
sub
pop
and
adc
and
ss
sar
inc
repz
call
sbb
test
mov
and
data16
(bad)
push
inc
or
pusha
inc
cld
idiv
add
in
inc
push
test
pop
inc
(bad)
(bad)
jg
sub
(bad)
retf
mov
aam
sar
lds
(bad)
(bad)
(bad)
call
ins
mov
test
sub
xor
pop
dec
movs
xchg
sub
stc
xchg
adc
mov
je
stc
mov
(bad)
inc
(bad)
ror
(bad)
adc
das
jmp
push
loopne
mov
jmp
pop
fsubr
imul
shr
jnp
and
loope
mov
adc
loopne
stos
stos
(bad)
jmp
stc
lds
mov
shl
push
sbb
xor
(bad)
dec
rcl
cmp
sub
or
push
in
cmovl
nop
lods
rol
add
and
mov
(bad)
into
ss
(bad)
(bad)
(bad)
(bad)
cmp
and
push
jne
mov
dec
cmp
mov
xor
pushf
xchg
jno
xor
cmp
loop
in
int3
retf
add
xlat
sbb
loopne
(bad)
jg
dec
int3
sahf
cmc
cmps
arpl
dec
sbb
jge
call
jge
xor
mov
xor
cmp
aas
add
pushf
cli
xor
(bad)
fild
push
push
dec
mov
jl
sub
push
popf
sar
(bad)
dec
inc
fadd
mov
bound
add
lea
add
sub
jg
inc
xor
pop
jbe
ss
sahf
ret
aaa
mov
mov
cmp
sbb
pop
das
lahf
fcom
(bad)
jnp
repnz
inc
iret
pusha
jb
(bad)
(bad)
inc
sbb
stc
mov
and
dec
daa
dec
popa
xchg
mov
inc
test
jg
dec
ret
mov
jns
xor
lahf
push
aaa
push
jl
and
ins
mov
pop
ds
clc
cmp
cmp
(bad)
push
and
outs
or
(bad)
mov
or
xor
sar
pop
(bad)
cmp
(bad)
(bad)
push
sti
xchg
xchg
test
(bad)
mov
cmp
repz
mov
imul
loope
jge
(bad)
(bad)
(bad)
clc
retf
popa
icebp
jl
fcom
rcr
mov
cmp
fiadd
dec
hlt
enter
ret
ficom
sub
cmc
in
clc
ins
pop
or
push
cdq
sbb
add
sbb
(bad)
(bad)
(bad)
call
and
cmp
pop
pop
fdiv
cmps
or
aam
push
sti
sub
call
(bad)
jmp
add
fld
jbe
jge
aad
pop
test
retf
out
(bad)
jg
inc
jbe
sbb
data16
es
pop
jecxz
xlat
sub
in
inc
push
mov
jmp
push
adc
cmp
inc
xchg
cmp
inc
dec
(bad)
jmp
sub
je
(bad)
call
dec
jecxz
and
pusha
adc
pop
pop
jmp
cmp
(bad)
pop
call
mov
fidivr
jg
mov
jbe
repz
lods
ins
imul
(bad)
push
adc
daa
jmp
adc
jp
jno
dec
adc
(bad)
(bad)
(bad)
jmp
sbb
mov
pop
or
inc
pop
and
mov
es
dec
std
jbe
(bad)
(bad)
push
fcom
scas
jo
ror
cmp
add
icebp
xlat
jno
dec
sbb
(bad)
pop
repz
inc
add
jecxz
test
mov
and
jg
or
sub
cmps
jl
dec
or
ficom
loope
enter
(bad)
(bad)
(bad)
call
lahf
cmp
inc
inc
mov
jmp
pop
pushf
(bad)
or
pop
retf
cwde
cmp
(bad)
(bad)
(bad)
jmp
mov
mov
in
ror
cmp
cdq
cmp
mov
mov
dec
push
les
(bad)
(bad)
jmp
repz
push
test
pushf
cs
shl
fdiv
shl
add
(bad)
push
mov
mov
dec
stos
dec
neg
fcomip
retf
mov
sub
mov
add
jne
jp
cmp
cwde
cs
jg
(bad)
jmp
hlt
iret
xor
out
imul
es
pop
aad
sbb
lods
mov
leave
push
jg
(bad)
jmp
stc
cwde
fwait
inc
sub
stos
pop
mov
mov
mov
(bad)
(bad)
jg
push
ds
scas
rol
sub
retf
and
or
adc
sar
(bad)
jg
out
repnz
push
mov
push
or
iret
into
int3
pop
jne
push
jmp
mov
mov
xchg
jmp
leave
sahf
inc
in
adc
dec
enter
and
(bad)
(bad)
(bad)
mov
(bad)
fldenv
jbe
sbb
stos
in
in
and
popa
xchg
loop
xor
(bad)
(bad)
call
inc
addr16
sar
div
inc
adc
xor
pop
inc
fistp
retf
fild
cs
stos
mov
xchg
push
pop
sbb
cdq
jp
(bad)
(bad)
dec
push
push
adc
xor
mov
(bad)
fcmove
or
dec
mov
(bad)
xchg
daa
ds
std
outs
clc
add
jmp
into
pop
mov
mov
(bad)
(bad)
dec
mov
pop
xor
lea
mov
xor
test
(bad)
jg
(bad)
jns
mov
repz
fmul
xchg
dec
sbb
repz
clc
inc
push
lods
movs
retf
jmp
(bad)
sub
pop
std
rcl
xor
sbb
inc
push
jl
and
inc
xchg
aad
inc
aas
(bad)
(bad)
(bad)
push
dec
hlt
adc
popa
push
enter
pop
mov
dec
adc
sbb
push
push
mov
(bad)
(bad)
call
jne
shl
jp
jmp
stc
or
enter
pop
ss
mov
mov
les
jle
popf
repnz
(bad)
(bad)
(bad)
call
fisttp
das
call
cmp
movs
imul
sub
or
pop
jp
(bad)
(bad)
(bad)
dec
and
lock
push
sbb
lock
inc
and
jmp
jle
adc
mov
lods
(bad)
popf
mov
xchg
jns
lea
cwde
or
stos
(bad)
mov
aad
sub
ret
imul
inc
mov
mov
mov
sub
add
ret
cs
test
movs
add
xor
rol
pushf
xchg
mov
dec
test
add
pop
(bad)
cdq
push
(bad)
(bad)
(bad)
jmp
out
and
outs
lds
inc
mov
jne
cmp
sbb
or
pop
cmc
(bad)
jmp
adc
(bad)
hlt
inc
movs
add
shr
cmp
jmp
dec
xor
aad
(bad)
(bad)
(bad)
push
jmp
adc
push
xor
(bad)
lods
fcmovnbe
cmps
push
pop
add
stos
into
or
cmp
cmps
(bad)
jle
push
fadd
aas
fldcw
pusha
ss
int3
rcl
(bad)
cmp
dec
(bad)
mov
iret
jo
jno
mov
xchg
ins
adc
ja
dec
mov
icebp
int3
push
push
jp
xor
adc
call
(bad)
mov
mov
xor
mov
(bad)
jp
xor
and
adc
addr16
outs
push
je
push
call
cmc
das
rcl
jg
push
jae
add
lock
add
(bad)
(bad)
(bad)
call
mov
mov
mov
add
lods
repz
xor
scas
movs
(bad)
(bad)
(bad)
cmp
fst
ret
sahf
test
or
test
mov
mov
jne
push
ror
add
dec
cmp
ja
loopne
cmp
shl
clc
icebp
add
sbb
inc
or
push
das
push
pop
arpl
ret
jl
ja
dec
fwait
pushf
xchg
scas
dec
addr16
jmp
sbb
(bad)
(bad)
(bad)
push
dec
sub
inc
jecxz
es
cld
inc
mov
mov
(bad)
jbe
xor
cmp
movs
fild
inc
sti
jge
jle
jmp
stos
(bad)
mov
push
inc
mov
or
ret
mov
or
(bad)
(bad)
(bad)
(bad)
cmp
fisttp
mov
pop
retf
mov
pop
pop
idiv
xchg
sub
inc
cmp
push
cmc
cli
sbb
fwait
mov
(bad)
sbb
loope
push
mov
push
js
jle
cmp
mov
push
jmp
push
inc
adc
out
mov
inc
(bad)
pop
(bad)
jg
push
fwait
mov
ret
test
mov
sbb
sti
adc
dec
(bad)
inc
xor
test
ss
adc
add
call
(bad)
dec
lock
push
cmc
sbb
jae
hlt
cmp
sbb
jmp
add
sub
(bad)
fbstp
es
outs
xchg
iret
mov
cwde
sub
sbb
jo
mov
(bad)
(bad)
jmp
inc
jae
push
jge
push
into
mov
adc
in
aaa
sub
pop
loope
jmp
ret
stc
lahf
aad
pop
(bad)
ja
fcomp
scas
stc
mov
jbe
outs
jo
mov
and
(bad)
cmp
loopne
pop
sahf
mov
or
dec
iret
sbb
push
not
mov
icebp
ss
aad
(bad)
fild
div
(bad)
aaa
cmp
xchg
test
jg
dec
stos
xchg
xlat
retf
pop
std
cmp
jmp
daa
cld
push
push
cmp
stos
sbb
(bad)
jnp
or
jno
push
sub
loope
push
lods
cmp
pop
lods
cli
mov
ins
xlat
nop
jmp
xchg
adc
es
clc
mov
(bad)
call
retf
inc
arpl
mov
mov
dec
in
shl
mov
cmp
test
es
test
cmp
in
sub
in
cmps
sub
or
(bad)
(bad)
(bad)
fcomp
pop
mov
loop
out
in
inc
jbe
addr16
jge
xor
mov
push
sbb
(bad)
(bad)
inc
iret
inc
sub
xchg
pop
mov
adc
lds
mov
mov
jb
sbb
(bad)
(bad)
(bad)
call
jge
and
mov
fmul
sahf
add
ss
in
cmc
xchg
inc
(bad)
mov
test
dec
movs
cld
(bad)
or
clc
cmp
ja
ret
loopne
jmp
mov
jg
lods
cmps
add
xchg
xchg
jecxz
stc
ss
(bad)
inc
ins
mov
mov
pushf
js
movs
pop
lds
sar
(bad)
mov
fdiv
pop
cmp
sub
xor
inc
not
ror
call
jo
adc
sub
pop
das
pop
or
inc
cmp
sbb
icebp
(bad)
(bad)
(bad)
mov
xchg
hlt
cli
sub
jg
pop
mov
cld
push
mov
inc
lods
inc
pop
dec
or
(bad)
(bad)
(bad)
fcomip
lods
inc
xchg
cmp
or
sub
imul
xor
or
cld
pop
retf
(bad)
(bad)
(bad)
dec
cmp
add
push
lods
jge
xchg
sbb
shl
jae
jmp
(bad)
(bad)
call
or
scas
push
int3
sub
aas
cmp
mov
push
leave
in
pop
mov
inc
scas
aam
jmp
cli
xor
lahf
mov
cmp
dec
int3
aaa
mov
out
mov
xchg
shl
mov
inc
jle
xchg
cmp
inc
mov
push
push
test
ja
inc
xchg
dec
fucomi
(bad)
(bad)
dec
neg
cmp
lea
stos
rcl
(bad)
mov
(bad)
adc
(bad)
(bad)
(bad)
mov
hlt
pop
(bad)
xor
and
push
fadd
ret
movs
xlat
idiv
inc
in
loopne
xchg
or
push
jb
cmps
mov
mov
rcr
fprem
push
cld
adc
mov
sub
out
dec
cmp
(bad)
inc
je
inc
dec
aaa
pop
stos
retf
xchg
bound
jg
pop
inc
push
fadd
call
and
push
ins
mov
sbb
mov
imul
scas
inc
or
stc
dec
inc
daa
in
clc
call
push
ins
cmp
mov
dec
cli
(bad)
(bad)
inc
(bad)
sbb
sbb
cwde
dec
push
adc
(bad)
jp
(bad)
fcomip
call
mov
add
popf
xchg
outs
mov
push
(bad)
(bad)
call
mov
cmp
jle
ins
repz
clc
movs
lds
mov
jns
retf
mov
dec
cmc
fbld
sbb
adc
cs
xlat
jl
pushf
mov
add
cmp
pushf
ss
pop
loope
or
(bad)
(bad)
fistp
dec
add
jno
mov
sbb
mov
jmp
dec
push
jmp
push
jp
cmp
cld
mov
imul
je
or
mov
pop
and
stos
sbb
dec
sbb
cld
pop
mov
inc
stos
test
mov
sub
push
xor
adc
(bad)
rcl
(bad)
fild
fucomip
jbe
loop
int3
jns
add
repz
cmp
xor
fldcw
bound
(bad)
dec
scas
(bad)
pop
jl
movs
sti
jge
or
jae
push
(bad)
mov
(bad)
out
pop
inc
ins
nop
movs
fnsave
aas
fild
loope
loopne
mov
pop
sbb
cmp
(bad)
(bad)
(bad)
dec
into
xchg
and
add
pop
inc
jle
dec
xor
out
cs
fs
addr16
cdq
cld
inc
or
dec
push
mov
or
pop
inc
inc
cs
xchg
repz
mov
les
repz
(bad)
(bad)
(bad)
fist
fmul
push
shr
dec
add
inc
pop
outs
jne
cmc
mov
(bad)
(bad)
jmp
sahf
stc
pusha
rol
inc
xchg
adc
in
fldcw
ror
(bad)
adc
cmp
das
cli
dec
repz
shl
outs
and
fld
push
les
cli
pop
xor
(bad)
(bad)
(bad)
call
inc
(bad)
repz
mov
xor
jns
loop
or
cmc
jle
or
jge
repz
xchg
(bad)
mov
(bad)
cmp
int3
pop
stos
push
sbb
loop
xchg
lods
(bad)
dec
cmp
loope
fcmove
imul
jo
add
jns
and
cmc
jb
add
adc
je
dec
and
mov
inc
jmp
sbb
(bad)
(bad)
call
call
sub
jns
int3
xor
(bad)
push
cmp
fidivr
or
scas
clc
jg
mov
repz
xchg
out
push
adc
(bad)
in
jmp
sub
inc
ficom
lahf
loope
dec
mov
push
cmc
jbe
inc
add
jae
mov
(bad)
(bad)
(bad)
dec
add
sbb
mov
dec
mov
sub
and
repz
(bad)
inc
lods
mov
hlt
pop
xor
imul
inc
add
adc
push
popa
dec
jae
mov
js
cmp
jbe
mov
jg
mov
cld
or
enter
outs
add
int3
sub
sbb
jo
or
gs
mov
data16
(bad)
mov
(bad)
std
ret
hlt
(bad)
(bad)
call
mov
mov
ret
ficom
jle
in
rol
lods
repnz
(bad)
out
test
inc
std
pop
adc
push
mov
cmp
call
out
loope
fwait
in
sub
pop
add
cs
inc
in
adc
mov
push
add
(bad)
cmp
xchg
mov
out
out
push
(bad)
(bad)
jg
cmp
ins
stos
leave
jp
cmps
sbb
jmp
mov
cmp
and
mov
test
lock
xchg
movs
retf
fucomp
cli
(bad)
jmp
sar
iret
sbb
xchg
adc
leave
(bad)
(bad)
(bad)
(bad)
mov
lods
ret
dec
dec
push
sub
in
sbb
push
and
imul
xor
jmp
(bad)
(bad)
mov
cmp
pushf
pop
sub
daa
sbb
push
and
pop
jp
(bad)
pop
mov
add
hlt
jmp
sahf
loope
mov
ror
dec
or
(bad)
jg
stos
test
or
js
outs
sbb
jno
jmp
inc
in
ja
fsub
dec
add
hlt
iret
pop
call
inc
movs
int3
pop
retf
mov
mov
sbb
repz
call
(bad)
arpl
adc
pminsw
test
cmp
dec
fsub
jns
jne
fs
push
xchg
sub
(bad)
push
shr
sbb
push
loope
cdq
adc
fiadd
mov
(bad)
(bad)
dec
inc
mov
(bad)
cmc
test
and
mov
call
xchg
cmp
inc
mov
push
sbb
add
push
mov
iret
cmp
mov
shrd
inc
icebp
(bad)
(bad)
(bad)
dec
add
inc
pusha
fisubr
in
mov
mov
pushf
es
add
fwait
(bad)
fcomip
jmp
out
jns
loope
lea
in
jge
into
push
or
fld
fld
adc
fdivrp
(bad)
(bad)
jmp
hlt
popa
xchg
(bad)
in
gs
xchg
stos
pop
hlt
adc
xchg
push
dec
cmp
(bad)
push
(bad)
fist
dec
xor
test
fwait
cmp
inc
ror
inc
cmp
sti
add
(bad)
(bad)
jns
dec
push
jle
mov
cmc
fldpi
(bad)
(bad)
(bad)
mov
ss
add
fwait
nop
push
mov
push
push
cs
inc
sbb
mov
xchg
(bad)
(bad)
(bad)
push
or
xchg
jo
sbb
or
adc
fwait
(bad)
mov
add
icebp
sbb
scas
xor
jp
ror
call
in
mov
inc
(bad)
dec
test
dec
mov
movs
mov
dec
clc
pop
hlt
dec
(bad)
ffree
je
ret
cmp
dec
pop
sub
adc
mov
(bad)
(bad)
call
inc
dec
gs
sbb
sbb
(bad)
xchg
stos
sahf
pop
std
(bad)
mov
sbb
pop
jae
call
adc
jae
xor
ror
out
add
int3
adc
sbb
cld
mov
inc
mov
es
cmp
(bad)
(bad)
jmp
rcl
inc
fsubp
(bad)
xchg
cmp
jb
dec
lods
xor
cwde
inc
adc
or
stos
inc
push
dec
(bad)
test
cmp
hlt
push
mov
movs
(bad)
(bad)
push
inc
jo
mov
neg
adc
mov
imul
ins
cld
jg
lahf
mov
ret
lods
ficom
sub
and
jl
or
cmc
push
jne
cwde
lea
jmp
jmp
inc
ins
add
adc
mov
mov
stos
jg
cmp
mov
int3
(bad)
dec
lods
sbb
(bad)
inc
repz
adc
xchg
adc
loope
dec
out
dec
mov
(bad)
(bad)
(bad)
jmp
xor
mov
mov
std
jmp
dec
sbb
jo
xchg
loope
jmp
retf
dec
adc
fdiv
adc
mov
pop
cld
mov
adc
cmps
cmp
add
les
add
ds
cli
(bad)
dec
repz
jae
add
adc
sti
add
test
outs
test
hlt
(bad)
dec
xor
sub
(bad)
stos
lds
cmp
add
inc
inc
jecxz
(bad)
(bad)
(bad)
dec
sti
or
lock
or
arpl
cwde
cmps
xchg
xchg
mov
add
inc
pop
push
xchg
mov
dec
loopne
out
jmp
lods
push
sub
pop
dec
jg
sbb
repnz
(bad)
(bad)
inc
adc
or
popa
(bad)
fmul
int3
leave
cmp
inc
mov
cmp
fs
cmps
pop
repnz
(bad)
(bad)
(bad)
cli
xor
repnz
scas
sub
aaa
mov
xchg
aaa
xchg
mov
cmp
hlt
enter
in
cli
pop
mov
cmp
mov
mov
add
(bad)
and
sub
mov
retf
(bad)
push
dec
or
cmp
jp
mov
mov
pop
mov
outs
xchg
xchg
cmp
dec
(bad)
xor
inc
sub
movs
ficom
pop
sbb
fisub
xchg
cld
xor
mov
jae
retf
cmp
push
push
xlat
mov
inc
aam
sub
repnz
(bad)
(bad)
call
xchg
jg
ret
ins
pop
inc
or
lahf
xor
inc
test
ret
lods
add
aaa
sar
jmp
movs
cmp
sub
push
sahf
popf
adc
pusha
rcr
ret
mov
out
rol
ret
dec
icebp
dec
inc
out
dec
ret
xor
fnstcw
mov
in
dec
inc
loope
repnz
(bad)
(bad)
(bad)
mov
push
jle
inc
mov
dec
or
mov
push
in
mov
cmp
leave
scas
fld
mov
movs
mov
test
imul
repnz
push
(bad)
(bad)
js
jmp
repnz
mov
mov
(bad)
dec
in
xchg
fs
fsubr
mov
mov
icebp
push
and
mov
and
push
push
shrd
(bad)
(bad)
dec
mov
mov
cmp
fwait
sbb
es
mov
or
(bad)
(bad)
inc
mov
mov
add
adc
scas
and
cmp
daa
hlt
push
outs
adc
(bad)
jg
(bad)
mov
cwde
jmp
push
out
xchg
cmc
cmp
or
fcomip
out
mov
mov
sti
(bad)
jcxz
dec
sub
dec
mov
icebp
ret
xor
out
jp
test
call
(bad)
add
sti
cmp
aaa
(bad)
inc
rcl
pop
fcomip
inc
mov
pop
pop
out
cmp
jmp
hlt
bound
repz
ss
cmp
and
xchg
push
and
add
out
ret
out
xor
icebp
daa
idiv
sahf
test
(bad)
(bad)
(bad)
call
jns
jns
jmp
cmps
adc
push
daa
ds
hlt
jmp
pusha
dec
inc
mov
cmp
inc
std
jne
fnstcw
push
ret
mov
xchg
and
xchg
inc
rol
xchg
call
call
lock
xchg
jb
aad
cmp
mov
cmp
(bad)
push
out
inc
addr16
aas
ret
test
sbb
std
mov
xor
add
lahf
outs
(bad)
(bad)
(bad)
jmp
stos
mov
(bad)
cmp
std
fstp
mov
mov
(bad)
(bad)
(bad)
(bad)
dec
sti
aad
and
pop
xchg
mov
loop
pop
mov
mov
cmp
cmp
push
mov
or
mov
das
xchg
jle
push
push
clc
loop
cmc
call
sbb
cmovge
and
jle
fstp
(bad)
(bad)
call
push
popa
inc
out
or
cli
hlt
xor
pop
push
add
out
add
push
rol
jecxz
(bad)
(bad)
(bad)
jmp
sbb
fcomip
add
int
ds
stc
or
stc
sub
(bad)
(bad)
fild
dec
cdq
mov
ret
and
repz
push
sbb
int
fmul
stc
jns
repz
jae
mov
inc
mov
add
sub
int3
jmp
test
sub
lahf
(bad)
(bad)
(bad)
dec
lods
pusha
mov
push
and
je
fld
fdivr
inc
cdq
(bad)
into
cmp
mov
or
jae
into
cwde
das
call
mov
jecxz
mov
ja
push
icebp
pop
and
sahf
sbb
push
(bad)
(bad)
(bad)
push
adc
xor
shr
cmp
dec
inc
cmp
test
(bad)
call
sti
out
inc
xor
arpl
adc
xor
clc
xor
leave
(bad)
popa
ret
test
pop
xor
adc
loope
js
cmp
mov
jbe
cmp
mov
icebp
(bad)
(bad)
inc
daa
test
jno
leave
retf
or
inc
mov
call
cwde
mov
xchg
fimul
mov
sahf
ret
inc
inc
fwait
rol
retf
fadd
or
cmp
adc
(bad)
(bad)
jns
in
add
jbe
jecxz
outs
fisttp
fcmovnb
loop
cli
cdq
push
call
fistp
mov
lock
xor
push
movs
(bad)
pop
inc
repnz
cmp
cli
mov
pop
cmp
lods
sti
rol
xor
fisttp
adc
cmp
(bad)
jmp
imul
or
or
mov
jno
mov
cmp
cmps
add
(bad)
inc
dec
xor
(bad)
jg
popf
mov
idiv
aad
xchg
ret
(bad)
mov
imul
inc
inc
imul
lods
xchg
out
adc
sar
sbb
loopne
iret
div
popa
stos
in
lock
jmp
lods
xor
in
hlt
dec
cmc
inc
pop
movs
je
stos
adc
adc
inc
fisttp
cmc
repz
add
loopne
inc
sar
and
out
sbb
push
push
ror
(bad)
(bad)
fbstp
jns
cmp
xchg
loope
jae
add
fmul
movs
aaa
cld
push
fsub
sub
and
pop
pop
rcr
(bad)
dec
pop
clc
xor
movs
je
ja
leave
sti
cmc
jnp
dec
add
and
ds
mov
(bad)
(bad)
jmp
jns
jg
dec
inc
mov
sti
test
xor
into
pop
inc
ins
ins
stos
(bad)
enter
jg
lods
xor
mov
cdq
jnp
xchg
pop
sub
push
jl
sbb
stos
ja
mov
push
jl
(bad)
call
cdq
aaa
pop
popf
call
adc
push
inc
inc
ins
jecxz
(bad)
call
push
dec
xchg
and
adc
mov
inc
(bad)
popa
cmp
sbb
dec
dec
xlat
add
mov
xor
cwde
(bad)
(bad)
(bad)
(bad)
out
daa
aam
adc
mov
add
pushf
ret
les
sbb
pop
stos
dec
mov
sbb
(bad)
(bad)
dec
(bad)
enter
xchg
jbe
mov
jmp
adc
and
(bad)
jmp
ret
mov
out
mov
movs
sbb
and
cwde
in
pop
xchg
int
cdq
lahf
ficom
pop
icebp
dec
add
or
mov
mov
push
loopne
jnp
add
(bad)
inc
test
cmps
jmp
fcomp
fmul
adc
add
push
xchg
out
(bad)
(bad)
call
pop
retf
inc
and
dec
and
loopne
mov
retf
(bad)
xchg
jne
adc
push
test
cld
(bad)
jg
es
or
jne
jmp
cmp
or
imul
dec
dec
push
(bad)
(bad)
push
inc
pop
in
jns
and
icebp
test
lock
adc
mov
mov
(bad)
(bad)
(bad)
cmp
mov
xchg
dec
retf
mov
mov
cld
(bad)
jle
int
lods
jle
xlat
mov
jbe
(bad)
repnz
sti
cmp
(bad)
(bad)
(bad)
jmp
scas
pop
pop
adc
xor
loope
jns
ja
or
movs
mov
mov
push
dec
adc
dec
xchg
inc
inc
and
sar
(bad)
push
inc
outs
cmp
lea
cmps
movs
ja
scas
nop
(bad)
jg
pop
push
mov
and
xchg
xchg
fdivr
loopne
call
dec
lahf
jne
push
xchg
rcl
mov
clc
(bad)
(bad)
call
sub
cmp
(bad)
adc
int
aaa
jle
add
(bad)
(bad)
out
add
jecxz
leave
mov
jg
push
lea
adc
jmp
xchg
loop
or
dec
imul
add
icebp
ja
es
(bad)
or
lea
dec
(bad)
(bad)
(bad)
(bad)
inc
inc
movs
jae
cmp
pop
and
mov
jbe
test
adc
sub
(bad)
dec
aam
xchg
jecxz
push
pop
cmp
fcom
mov
imul
in
outs
movs
and
or
push
cs
shr
xchg
neg
mov
retf
xlat
mov
cs
int3
mov
cmp
cmp
icebp
dec
cmp
out
xor
and
aaa
mov
(bad)
mov
push
ja
nop
idiv
push
mov
fst
mov
loop
sbb
mov
cmp
and
loop
or
repz
mov
add
cdq
pop
jmp
inc
and
inc
iret
cmp
in
inc
xchg
sub
dec
scas
stos
mov
jge
xor
(bad)
(bad)
fcomip
fwait
dec
jecxz
movs
dec
call
loop
ds
push
in
mov
xchg
mov
push
loope
inc
lds
aam
sub
xor
cwde
fild
(bad)
(bad)
jmp
and
cmp
cmp
scas
arpl
or
xor
(bad)
(bad)
(bad)
inc
(bad)
pop
call
jns
test
xchg
repnz
dec
push
(bad)
adc
jmp
sahf
ja
dec
cwde
mov
jg
stc
test
xchg
inc
lock
jmp
mov
mov
xchg
retf
mov
loope
mov
call
pop
nop
push
fld
retf
xor
scas
mov
add
jo
(bad)
(bad)
(bad)
inc
mov
lea
outs
inc
lods
jmp
aaa
test
mov
call
adc
outs
in
fcom
sub
pop
das
sub
inc
cwde
fld
(bad)
jmp
and
xlat
sub
jno
fnstsw
jle
mov
pop
dec
inc
mov
dec
je
(bad)
jg
mov
cmp
aas
aaa
in
out
pop
jbe
out
mov
pop
jo
and
aaa
mov
mov
hlt
outs
aad
mov
and
(bad)
dec
mov
jns
fnsave
dec
jmp
mov
retf
add
call
add
ss
push
jae
jmp
cmps
cmp
into
cmp
xor
(bad)
out
call
retf
cli
dec
add
jo
pop
xrelease
cwde
(bad)
(bad)
(bad)
push
rcr
adc
cmp
sbb
mov
not
mov
sti
loop
loop
std
call
xchg
call
retf
push
pop
fs
rcl
pop
sub
arpl
lods
mov
or
push
repz
add
mov
dec
or
jg
inc
push
xor
dec
jge
jecxz
in
(bad)
(bad)
(bad)
push
es
inc
pop
add
das
popa
mov
test
mov
scas
jecxz
(bad)
call
(bad)
shr
icebp
mov
adc
add
pop
clc
xor
(bad)
jg
add
push
hlt
mov
rcr
mov
pop
inc
out
std
(bad)
jmp
xor
inc
add
push
xchg
dec
mov
add
test
repz
dec
inc
push
fs
call
ret
jmp
xchg
jnp
mov
pop
repz
push
imul
or
cmc
call
jne
add
xor
push
inc
jmp
enter
aas
xor
in
sub
mov
push
mov
mov
js
arpl
fdivrp
xor
mov
or
mov
xor
sub
pop
xchg
fiadd
(bad)
gs
or
call
add
push
ret
or
xchg
inc
iret
mov
xor
add
retf
mov
fdivp
adc
add
jg
cmp
into
adc
jnp
ja
shr
xor
xor
jnp
pushf
jle
(bad)
mov
mov
push
(bad)
ins
rcl
sbb
sbb
inc
jns
lock
repnz
lock
dec
push
adc
mov
mov
stc
out
sub
out
xor
sbb
dec
repnz
rcr
xor
sar
imul
in
shr
jmp
cld
jge
sbb
pop
mov
add
stos
pop
inc
inc
pushf
cmp
pop
icebp
(bad)
(bad)
(bad)
inc
jp
cmp
dec
sbb
push
stos
jecxz
cmp
add
xor
xor
xchg
ss
lock
jmp
ds
and
push
fistp
pushf
sub
cmc
movs
(bad)
push
xchg
push
cmc
xor
(bad)
out
xchg
cli
movs
add
stc
enter
mov
inc
xor
jp
rcl
and
js
sbb
push
xchg
add
in
ficomp
ss
mov
repz
push
cmp
cwde
ins
inc
fdivr
mov
test
inc
push
jecxz
mov
cmp
retf
mov
stos
push
mov
mov
sub
ja
jns
popf
mov
push
xlat
cdq
mov
aas
adc
cmc
push
retf
xor
out
sub
jbe
pop
cmp
(bad)
(bad)
(bad)
(bad)
cmp
jns
in
call
stc
lods
xor
xor
pop
mov
mov
(bad)
(bad)
(bad)
jmp
add
int3
xchg
jg
pop
mov
xchg
adc
(bad)
sbb
(bad)
(bad)
(bad)
inc
bound
mov
cmp
push
leave
inc
call
cmps
test
cmp
(bad)
push
dec
fdivr
gs
xor
dec
enter
push
ins
not
and
pop
adc
or
xchg
outs
sahf
jns
loope
stos
or
daa
pop
fisttp
ins
icebp
pop
(bad)
(bad)
jmp
xchg
mov
mov
cmp
xor
and
push
add
stos
inc
movs
jecxz
(bad)
(bad)
(bad)
mov
shl
sub
iret
jae
sbb
jecxz
rcl
(bad)
mov
add
sbb
xchg
cmp
mov
fiadd
(bad)
push
inc
ins
dec
cmc
sbb
xor
xchg
scas
push
in
jmp
cli
bound
(bad)
pop
push
xor
jmp
aad
stc
inc
iret
(bad)
adc
mov
iret
push
nop
dec
mov
or
mov
fcom
mov
data16
dec
dec
enter
jbe
jmp
(bad)
fcom
hlt
ror
jae
mov
add
xchg
cmp
aam
(bad)
(bad)
fcomip
jne
xor
std
fcom
mov
push
aaa
(bad)
pop
movzx
stos
(bad)
call
jp
in
pop
shl
ja
and
outs
adc
fabs
(bad)
(bad)
(bad)
dec
or
ins
cmp
cmp
inc
mov
inc
mov
pop
fst
xchg
jo
out
inc
cmp
(bad)
(bad)
jmp
xchg
mov
inc
jp
jle
dec
mov
cld
cmp
pop
push
call
enter
push
aaa
(bad)
neg
mov
es
jp
stc
dec
mov
ror
(bad)
inc
(bad)
fld
ins
jmp
js
xlat
inc
push
sbb
pop
bnd
dec
jae
mov
jmp
stos
ins
ins
jl
sub
jbe
ss
add
jne
loopne
(bad)
inc
imul
dec
hlt
adc
lds
or
xor
adc
xchg
pop
cmps
out
xor
div
cld
(bad)
jg
or
xor
and
sub
repnz
mov
(bad)
(bad)
fbstp
arpl
pop
gs
sub
xor
cmp
cwde
(bad)
outs
xchg
fcom
xor
jae
push
(bad)
(bad)
jg
mov
fwait
arpl
mov
sub
xor
clc
sub
iret
add
mov
mov
call
call
pop
jle
mov
pop
inc
mov
jmp
sbb
mov
sbb
or
mov
mov
mov
add
push
loope
mov
xchg
loopne
cld
outs
out
(bad)
call
mov
cwde
jg
xchg
icebp
shl
jmp
gs
jns
popf
loope
bound
(bad)
dec
(bad)
mov
(bad)
repz
dec
mov
mov
(bad)
or
mov
pop
sbb
adc
js
stc
sbb
and
pop
(bad)
or
sahf
(bad)
(bad)
(bad)
jg
xchg
inc
pop
loopne
inc
rol
jmp
ror
lds
out
in
sbb
(bad)
(bad)
(bad)
jmp
aam
enter
popa
xchg
loop
(bad)
xchg
shl
xlat
dec
shr
enter
fwait
add
cmps
inc
cli
(bad)
(bad)
(bad)
cmp
stc
jp
mov
arpl
push
pop
xor
xchg
cmp
outs
add
cmp
cmc
dec
jne
cwde
mov
xor
(bad)
jg
ret
push
xchg
lds
push
sbb
mov
xchg
or
dec
push
enter
xchg
sti
xchg
xchg
dec
(bad)
(bad)
(bad)
(bad)
js
xchg
mov
mov
add
cmp
push
mov
inc
cmp
jmp
cmp
(bad)
jnp
aas
in
dec
std
cwde
ror
xor
into
mov
add
cli
(bad)
(bad)
inc
inc
push
xchg
int
adc
pop
lahf
in
repnz
pop
hlt
aaa
fwait
sub
jne
(bad)
jmp
shl
stc
or
or
pop
sbb
cmp
in
lea
fld
popf
retf
inc
push
std
xchg
push
sbb
xchg
cld
jg
call
sbb
dec
aam
mov
popf
leave
dec
(bad)
push
std
sahf
jmp
inc
xchg
pop
mov
mov
out
pop
sar
sbb
(bad)
(bad)
and
jmp
jne
cmp
xor
push
jmp
inc
dec
jo
ss
cli
or
(bad)
fld
push
popf
push
jb
and
add
aas
mov
retf
inc
rcl
push
std
call
daa
(bad)
xor
push
mov
sbb
lods
sbb
pusha
fdiv
cmp
mov
xchg
push
mov
ss
push
retf
sbb
cmp
sub
adc
add
jmp
fidivr
adc
pushf
cdq
adc
movs
mov
jne
sar
push
jo
add
fisub
xor
pop
retf
push
mov
ins
xor
cmp
out
aad
mov
(bad)
(bad)
(bad)
jg
jnp
test
mov
sbb
push
jnp
inc
mov
jae
scas
mov
xor
xor
test
gs
test
fwait
mov
jg
and
lea
pop
(bad)
jmp
sub
jne
(bad)
(bad)
jmp
test
or
loopne
add
and
rol
ret
bound
lea
out
hlt
(bad)
(bad)
ficom
jnp
xchg
inc
sbb
push
ss
icebp
xchg
inc
(bad)
call
lahf
lods
mov
xchg
jae
push
clc
sbb
pusha
std
and
idiv
and
cs
pop
xchg
add
ja
jecxz
mov
push
(bad)
xchg
fmul
add
xchg
sbb
dec
inc
(bad)
jno
mov
in
jge
stos
add
(bad)
(bad)
(bad)
(bad)
call
hlt
push
lea
sahf
test
sbb
jns
mov
ins
mov
cs
pop
jg
in
arpl
inc
aad
jmp
xor
icebp
xchg
dec
sar
(bad)
(bad)
cmp
mov
push
dec
loop
(bad)
imul
cmp
cmp
(bad)
(bad)
(bad)
mov
mov
imul
cmp
dec
clc
cmp
repnz
fmul
cmp
retf
pop
(bad)
(bad)
(bad)
fist
or
cli
inc
jbe
call
mov
cmp
loop
ja
jo
(bad)
(bad)
inc
cmp
test
(bad)
lds
mov
or
ins
push
jns
push
movs
inc
movs
jb
in
(bad)
(bad)
aas
pop
mul
mov
jns
and
ja
shl
adc
or
(bad)
(bad)
(bad)
call
inc
(bad)
mov
in
pop
je
pop
xor
test
mov
pop
xchg
sub
inc
xchg
or
or
(bad)
call
dec
pop
loop
xor
dec
not
cmps
stos
xor
(bad)
(bad)
jg
outs
stos
and
scas
jle
push
dec
je
loop
outs
push
(bad)
fist
jns
sbb
jg
aam
sbb
pusha
mov
loop
xchg
and
lea
and
(bad)
(bad)
(bad)
mov
mov
ds
mov
xor
and
(bad)
dec
mov
mov
repz
xchg
sbb
inc
push
cwde
(bad)
(bad)
cmp
adc
inc
mov
mov
test
(bad)
(bad)
call
adc
leave
xchg
jmp
aaa
jl
imul
adc
push
int
sti
and
sar
jmp
arpl
ss
push
cmp
sub
test
xchg
sub
jmp
adc
(bad)
push
push
xor
(bad)
mov
adc
or
ins
inc
jnp
test
(bad)
(bad)
jmp
jp
pusha
cmp
shl
or
mov
jno
shl
fld
aaa
scas
popa
sub
mov
adc
(bad)
aas
jl
cmps
xor
stos
loopne
into
in
aaa
cld
jg
or
mov
ret
xor
cs
xor
aaa
pop
add
sahf
stos
adc
mov
retf
ja
xor
(bad)
(bad)
(bad)
call
lods
and
mov
xor
pop
mov
adc
pop
enter
xor
mov
adc
mov
lds
scas
iret
outs
add
mov
add
mov
jmp
(bad)
cs
dec
mov
pop
(bad)
(bad)
(bad)
inc
xor
rcr
hlt
add
rcl
or
mov
and
mov
sbb
(bad)
mov
test
hlt
sub
inc
pushf
cmp
mov
push
push
(bad)
(bad)
mov
stos
or
ret
push
loopne
and
not
dec
pop
push
jno
inc
or
jmp
in
sti
rol
mov
out
jle
shl
cmp
mov
cmp
outs
jge
(bad)
data16
call
dec
ja
push
jbe
test
cs
and
fidiv
(bad)
test
fsubr
(bad)
mov
call
xchg
rcl
or
mov
shl
(bad)
mov
(bad)
(bad)
(bad)
(bad)
cmp
xor
mov
jg
or
sbb
mov
jae
movs
call
sub
and
adc
jp
(bad)
dec
mov
cmp
adc
outs
xchg
test
xchg
mov
add
add
dec
cwde
xor
push
mov
pop
psubsb
call
call
cmp
xor
mov
pop
add
pop
mov
xor
(bad)
(bad)
inc
dec
inc
jae
jbe
xchg
dec
sub
xor
lea
in
cwde
ror
xchg
ja
cli
mov
mov
pushf
jne
aas
pop
jmp
(bad)
(bad)
(bad)
jmp
test
ds
mov
push
cwde
sbb
mov
adc
sbb
xor
out
(bad)
(bad)
(bad)
call
shr
xchg
call
les
dec
xor
shr
sbb
jmp
(bad)
(bad)
(bad)
jmp
cmp
inc
mov
movs
cmp
cli
cmp
repz
scas
retf
jns
push
fs
and
inc
sub
xchg
dec
es
bound
inc
cmp
lods
add
jmp
jecxz
mov
cmp
push
or
xchg
(bad)
(bad)
jmp
pop
fsubr
xor
push
cmp
adc
push
mov
jle
loop
rep
hlt
pop
ret
and
mov
test
test
adc
cmp
mov
cmp
call
pop
inc
call
aam
sbb
push
pop
sub
mov
icebp
adc
or
(bad)
(bad)
mov
jnp
dec
mov
loopne
mov
data16
ins
mov
xor
lock
retf
mov
fwait
das
xchg
mov
(bad)
jmp
xchg
push
jne
stos
push
jbe
fbld
mov
(bad)
(bad)
inc
sahf
dec
cmp
jns
jecxz
call
dec
xor
cmp
sbb
retf
(bad)
inc
or
std
pushf
cmc
sahf
cld
loope
mov
cwde
push
mov
mov
(bad)
mov
movs
add
dec
add
or
inc
xlat
rcr
jmp
out
adc
xchg
push
repz
mov
cmc
shl
or
dec
cmp
xchg
mov
(bad)
dec
cld
mov
cli
(bad)
cmp
jge
mov
mov
and
cmp
mov
(bad)
fild
jecxz
pop
rol
fcom
ds
(bad)
(bad)
(bad)
(bad)
jle
pop
push
cld
jg
in
jbe
pop
lds
sbb
repz
dec
(bad)
jbe
push
mov
dec
mov
fs
cs
jbe
inc
stos
fnstcw
mov
cmc
inc
inc
clc
pushf
xchg
lea
jecxz
sub
popf
test
shr
dec
(bad)
jmp
sbb
dec
xchg
repnz
test
loop
mov
jle
push
(bad)
(bad)
(bad)
call
ss
mov
push
mov
pushf
cmp
not
mov
sti
inc
inc
js
imul
(bad)
(bad)
(bad)
fidiv
in
xchg
stc
pop
push
jo
sbb
mov
dec
adc
pop
cld
call
push
stos
jl
loope
loopne
scas
add
jbe
push
lock
fcomp
fcomip
jmp
fwait
hlt
popa
cmp
cmp
enter
dec
cli
xlat
(bad)
pop
jmp
cmc
das
and
call
shr
push
jmp
push
or
mov
mov
jmp
mov
dec
xchg
or
pop
cld
ins
and
inc
repnz
stos
mov
pop
jnp
adc
mov
(bad)
fcomip
push
mov
fdivr
jb
pop
pop
loope
data16
test
popa
and
(bad)
(bad)
(bad)
jmp
xchg
xchg
inc
dec
or
loop
pop
xchg
stos
test
inc
dec
inc
pop
movs
aas
jle
shr
cmp
aas
mov
(bad)
(bad)
fstp
push
jmp
cwde
xchg
fwait
sbb
dec
mov
mov
or
jns
(bad)
(bad)
(bad)
dec
mov
pop
push
mov
push
int3
fistp
jmp
cmps
retf
mov
icebp
mov
(bad)
jmp
test
adc
ss
jb
cli
dec
movs
repnz
mov
stc
das
addr16
and
(bad)
inc
mov
(bad)
pop
sub
shl
fwait
xchg
inc
sub
sub
jg
in
cli
nop
mov
aad
pop
sbb
jmp
cmp
(bad)
(bad)
(bad)
(bad)
mov
rcr
stos
jb
xchg
aaa
mov
pushf
adc
fadd
jnp
outs
mov
lea
(bad)
(bad)
inc
cmp
mov
xchg
cwde
(bad)
jno
push
icebp
ficomp
outs
xor
pop
(bad)
call
mov
mov
push
ins
fdivr
outs
stos
jl
ds
or
cdq
add
jmp
mov
int3
sbb
or
ja
mov
mov
addr16
stos
lock
xchg
or
push
test
aad
test
pushf
push
dec
pop
jmp
(bad)
call
aad
outs
mov
rcr
pop
retf
xchg
jge
add
(bad)
(bad)
(bad)
cmp
shl
mov
jae
mov
retf
mov
adc
lock
(bad)
(bad)
push
dec
ret
in
add
push
mov
mov
push
mov
and
std
xor
inc
loope
mov
in
cmc
sbb
cmp
in
jmp
add
adc
inc
mov
popa
xchg
mov
(bad)
(bad)
(bad)
jmp
adc
pop
das
inc
adc
std
add
dec
push
bound
mov
lahf
js
repz
(bad)
(bad)
(bad)
call
inc
or
mov
sub
push
cmp
mov
jb
xor
mov
(bad)
(bad)
(bad)
cmp
push
ja
(bad)
pop
shr
loop
loope
xchg
xor
jecxz
aaa
sub
push
xchg
push
retf
pop
mov
and
scas
cmp
mov
add
retf
ss
or
(bad)
fdiv
(bad)
mul
push
jg
lods
dec
push
pop
js
mov
dec
arpl
(bad)
(bad)
(bad)
dec
sub
dec
mov
mov
inc
mov
xchg
push
xor
xor
and
(bad)
(bad)
dec
xor
repz
inc
cmp
test
mov
aas
add
mov
jmp
movs
lea
dec
push
add
and
icebp
pop
sbb
push
jne
fimul
(bad)
mov
imul
xor
sub
fmul
sbb
repnz
or
(bad)
(bad)
stc
test
jmp
leave
cmp
jmp
pop
(bad)
(bad)
(bad)
mov
sub
and
repz
enter
mov
jp
and
(bad)
call
mov
pop
ja
jl
adc
cmp
inc
arpl
inc
xchg
ins
test
jmp
(bad)
(bad)
(bad)
inc
add
xlat
lds
test
mov
sub
mov
ficomp
int
dec
jecxz
sti
popa
(bad)
(bad)
(bad)
push
xor
mov
jno
push
loop
push
mov
pop
enter
gs
(bad)
jmp
mov
fbld
mov
adc
push
xor
ror
aaa
sbb
pop
push
dec
pop
sub
popa
sub
mov
dec
rcr
(bad)
call
mov
(bad)
inc
mov
inc
mov
jmp
jno
add
or
xchg
adc
clc
stos
push
xchg
mov
xchg
(bad)
xor
je
pop
push
and
test
test
dec
cdq
clc
(bad)
(bad)
jmp
fwait
cmp
jo
in
inc
cmp
dec
fistp
addr16
call
add
retf
lahf
test
cmp
fs
mov
cld
call
popf
sti
cmp
mov
xor
mov
push
(bad)
mov
cli
jp
outs
inc
or
hlt
pop
test
jmp
cmp
sub
lods
jg
(bad)
inc
mov
mov
pop
pusha
outs
cli
mov
ins
jne
nop
pusha
fcomip
jmp
jecxz
sar
cld
rol
loope
push
jnp
inc
xchg
inc
arpl
enter
dec
mov
sbb
mov
inc
add
(bad)
(bad)
(bad)
cmp
repnz
xchg
neg
imul
mov
mov
adc
xchg
in
mov
sbb
pop
inc
pop
add
xrelease
mov
loop
mov
aam
ins
push
cmp
out
mov
pop
pop
sbb
(bad)
jg
mov
ret
mov
xchg
add
jnp
ss
(bad)
jmp
lock
iret
dec
xchg
out
cmp
add
in
jae
and
lock
cld
fist
cmp
add
dec
cmp
(bad)
(bad)
push
cmp
sahf
in
jle
popf
out
xchg
das
jg
inc
push
pop
cmp
cmp
(bad)
(bad)
jmp
jae
fistp
jmp
cmp
xor
mov
test
jns
inc
daa
(bad)
inc
sbb
pusha
sbb
outs
pop
stos
adc
cmp
aas
jmp
(bad)
(bad)
(bad)
cmp
shl
sub
push
repz
ret
loope
call
push
mov
push
jo
cs
sub
dec
imul
push
xchg
sahf
xor
and
cmc
cmp
sub
in
pop
popa
inc
movs
js
mov
ret
pop
mov
cmps
ds
fild
repz
(bad)
(bad)
mov
mov
cmp
(bad)
clc
(bad)
div
imul
icebp
(bad)
push
aas
in
test
fstp
pop
adc
lea
xchg
int
pop
sub
addr16
mov
fdiv
call
xlat
out
inc
pop
lods
xchg
mov
xor
jnp
cmc
(bad)
call
push
adc
fwait
mov
jmp
arpl
pushf
push
inc
mov
push
icebp
pushf
add
(bad)
es
dec
cmp
mov
push
mov
(bad)
(bad)
(bad)
(bad)
mov
xlat
int
dec
popa
fnstenv
mov
mov
repnz
int3
(bad)
pop
jno
mov
(bad)
(bad)
jmp
loopne
fld
jae
mov
out
sub
adc
retf
mov
(bad)
jg
mov
loope
pop
mov
xchg
sbb
(bad)
ds
cld
push
mov
movs
and
jno
xchg
test
(bad)
(bad)
(bad)
jmp
test
int3
inc
scas
adc
lea
and
ret
xchg
cmp
and
pop
std
(bad)
(bad)
aas
inc
mov
ret
(bad)
(bad)
mov
test
std
pop
sub
mov
mov
(bad)
mov
xlat
or
xlat
scas
sbb
push
and
pop
cmps
mov
leave
or
xchg
sbb
call
mov
jbe
cmp
inc
inc
sti
dec
aaa
cmp
jns
std
adc
pop
das
cli
(bad)
fild
fist
inc
jmp
aaa
aad
push
fidiv
or
push
loope
in
mov
aam
add
dec
fistp
sbb
mov
inc
mov
sbb
jo
pop
repz
mov
test
hlt
and
test
imul
push
xchg
into
fadd
stos
shl
es
(bad)
(bad)
(bad)
jg
lods
retf
xchg
or
sub
or
les
cmp
wbinvd
mov
jae
(bad)
jmp
rcr
cmp
push
push
popf
ins
push
cdq
mov
(bad)
pop
push
(bad)
shl
(bad)
(bad)
call
dec
retf
or
cmp
xor
pop
dec
mov
push
mov
add
mov
push
(bad)
stos
shl
pop
jge
xor
fwait
or
mov
xor
pop
fist
(bad)
jp
or
nop
jmp
mov
rcr
ins
(bad)
(bad)
(bad)
push
and
mov
jnp
inc
pop
and
cld
or
inc
jmp
repz
push
cld
and
add
aam
loope
aaa
cmps
sbb
dec
cmp
int
loopne
jg
or
mov
or
out
inc
jle
pop
pop
imul
(bad)
call
or
push
icebp
mov
sar
sub
jmp
and
sbb
and
lods
cmp
jecxz
or
jg
lahf
cli
outs
clc
ffreep
mov
cmps
or
or
jb
hlt
das
mov
xchg
ret
mov
fist
(bad)
jmp
dec
push
ret
dec
repnz
sbb
push
or
dec
sbb
ss
test
mov
(bad)
push
call
pop
pop
ins
test
cmp
push
loop
out
pop
jnp
xchg
and
mov
cmp
push
pop
cmps
loopne
xchg
push
xor
jmp
fst
ss
push
std
fisubr
inc
xchg
ins
mov
stos
cld
aam
sub
jns
or
(bad)
(bad)
(bad)
mov
mov
pop
lock
or
jp
dec
cmps
fsub
xor
cmp
cmp
xor
call
dec
pushf
test
aaa
es
xor
inc
aaa
mov
shl
xchg
jne
cmp
and
inc
cmp
icebp
mov
stos
or
(bad)
(bad)
(bad)
inc
pop
mov
fiadd
cmp
push
push
jmp
xor
arpl
push
ja
ja
xor
dec
(bad)
(bad)
(bad)
dec
jl
fcos
outs
bound
add
mov
ins
sbb
(bad)
(bad)
(bad)
dec
test
ret
adc
btc
jne
xchg
cmc
xchg
(bad)
push
adc
adc
bound
xchg
lods
cmp
dec
out
clc
add
lea
aad
cmp
and
(bad)
jmp
arpl
aad
stos
(bad)
loopne
pop
or
mov
call
push
add
outs
xor
pop
fdivp
mov
cwde
mov
jmp
arpl
push
aad
xor
push
sub
(bad)
jg
stos
xchg
retf
add
icebp
xchg
dec
jae
pop
inc
add
(bad)
cmp
test
jmp
dec
rcr
lods
test
(bad)
loope
add
inc
sub
shr
(bad)
(bad)
inc
push
clc
icebp
dec
jne
outs
popf
cmp
xlat
outs
repz
ret
mov
fucomp
xor
(bad)
(bad)
dec
das
in
cmp
repz
adc
lods
test
inc
jge
in
mov
(bad)
mov
cmps
pop
neg
jge
dec
(bad)
in
pop
fisttp
cld
pop
fs
loopne
xchg
std
dec
inc
mov
das
and
push
loop
scas
retf
adc
sbb
jl
mov
enter
jno
(bad)
(bad)
call
add
pop
jmp
inc
jmp
retf
scas
push
int3
and
icebp
jl
and
inc
pop
cld
(bad)
push
in
dec
std
popa
(bad)
pusha
mov
aas
hlt
xlat
retf
scas
lahf
jmp
pop
and
daa
call
xor
sub
out
(bad)
fcom
jbe
xchg
ins
xor
fist
movs
mov
test
(bad)
call
cmps
fsubr
sti
mov
add
jne
(bad)
(bad)
dec
xor
cld
push
mov
(bad)
jo
pushf
leave
ret
adc
daa
jno
xchg
mov
mov
(bad)
mov
xchg
xchg
dec
or
xchg
mov
push
adc
daa
mul
mov
(bad)
jmp
std
imul
repz
pop
aad
repnz
adc
imul
cld
pop
adc
inc
mov
xor
or
inc
(bad)
call
mov
int3
imul
xchg
scas
daa
pop
pusha
push
retf
(bad)
(bad)
(bad)
jmp
inc
pushf
dec
pop
inc
jne
push
movs
fsub
and
enter
or
(bad)
(bad)
push
or
iret
fstp
retf
add
mov
xor
(bad)
(bad)
(bad)
push
ror
pop
mov
sbb
shl
idiv
push
adc
dec
loope
popf
inc
(bad)
(bad)
(bad)
fsubr
cmp
jns
aad
jecxz
rcr
xor
sbb
add
inc
jecxz
fs
mov
js
mov
(bad)
(bad)
(bad)
mov
jmp
lods
sbb
mov
adc
push
mov
dec
pop
or
call
push
es
cmp
popa
dec
ins
sub
loop
push
out
dec
xlat
jae
repz
dec
pop
mov
(bad)
inc
lea
(bad)
mov
pop
(bad)
pop
pop
cmps
hlt
fwait
xor
adc
lahf
push
enter
cli
jmp
(bad)
push
fwait
sub
xchg
mov
sar
retf
fwait
mov
out
mov
arpl
mov
(bad)
(bad)
(bad)
inc
dec
xor
pushf
lods
and
(bad)
xlat
push
mov
movs
stos
cli
ds
test
pop
cld
mov
inc
push
mov
push
daa
mov
(bad)
call
jmp
inc
pop
lods
xchg
push
mov
(bad)
out
ins
fdiv
mov
inc
cs
fdivrp
jmp
cwde
or
mov
(bad)
jo
dec
cmp
hlt
pop
sbb
xor
test
or
out
(bad)
(bad)
jg
idiv
push
rol
cmp
loopne
xlat
push
loopne
lea
loop
jecxz
je
(bad)
(bad)
(bad)
(bad)
call
xchg
or
ret
jne
movs
ins
push
jbe
cmp
lahf
movs
jns
movs
cmp
cld
(bad)
(bad)
jmp
xor
xlat
loope
lods
and
push
pop
out
sub
or
sub
pop
int3
sbb
mov
mov
cli
adc
call
jmp
out
jb
test
push
in
jmp
add
retf
mov
enter
sbb
pop
xrelease
jecxz
(bad)
inc
xor
icebp
push
xor
cmp
jle
call
les
stos
push
push
mov
or
mov
cmp
and
arpl
inc
fisub
call
push
jle
imul
push
cmps
(bad)
cld
adc
dec
push
sub
movs
idiv
mov
jp
nop
mov
mov
add
dec
xchg
and
and
(bad)
dec
nop
fsubr
pop
mov
dec
lods
cmp
int
push
pop
clc
xor
icebp
push
(bad)
loop
(bad)
(bad)
(bad)
push
test
loope
les
add
push
mov
test
test
push
(bad)
(bad)
(bad)
call
pop
mov
fs
mov
int3
test
lds
add
jmp
sti
jp
xor
sbb
mov
mov
xor
adc
mov
adc
std
or
mov
loop
ficom
push
push
ret
push
repnz
test
outs
cmp
rol
(bad)
(bad)
(bad)
inc
cdq
movs
dec
push
sbb
or
inc
test
test
xchg
hlt
jns
inc
sub
dec
stos
outs
jbe
xor
(bad)
(bad)
lods
xchg
and
repnz
mov
push
(bad)
jbe
fs
push
xor
lea
(bad)
inc
pop
in
jnp
mov
or
xchg
xor
inc
add
daa
ror
and
jnp
sbb
push
(bad)
inc
into
add
sti
aas
inc
and
adc
mov
icebp
cli
(bad)
dec
mov
aas
mov
test
dec
repnz
mov
and
mov
inc
fdivr
sub
xchg
mov
mov
cmc
dec
daa
pop
pop
repz
pop
cmp
call
loopne
stos
push
add
lods
inc
ins
jecxz
mov
pop
inc
sahf
or
add
(bad)
(bad)
jns
ficomp
movs
push
mov
test
(bad)
call
lock
mul
lods
aad
dec
mov
stos
(bad)
(bad)
(bad)
jmp
cmc
(bad)
out
inc
cs
jbe
jo
mov
ss
add
fcom
or
inc
xor
(bad)
(bad)
fbld
cmc
dec
imul
mov
hlt
xchg
ins
pop
push
bound
and
and
sti
sub
pop
(bad)
xor
mov
xlat
pop
cmp
and
iret
loope
movs
test
js
(bad)
(bad)
(bad)
(bad)
cmp
cld
pop
leave
push
push
dec
mov
dec
test
cmps
or
and
ret
test
hlt
retf
pop
arpl
pop
dec
inc
xchg
dec
inc
mov
(bad)
data16
lahf
push
sbb
cmps
scas
in
test
dec
add
les
(bad)
(bad)
push
int3
(bad)
push
adc
cld
inc
int3
xchg
cmp
push
xchg
mov
in
cmps
dec
icebp
jge
(bad)
(bad)
(bad)
inc
mov
outs
xor
push
and
dec
xchg
push
shr
pop
(bad)
arpl
(bad)
(bad)
(bad)
call
inc
gs
ret
inc
out
jns
imul
fwait
xchg
iret
mov
and
(bad)
jmp
jg
add
aaa
sahf
xor
pop
cmc
xchg
into
pop
inc
push
(bad)
(bad)
(bad)
(bad)
fadd
repnz
call
not
lea
cmp
sbb
call
push
dec
push
fcomi
es
mov
and
xchg
ss
(bad)
(bad)
(bad)
call
mov
adc
lea
inc
stos
jns
cmp
ret
or
jns
xor
cmps
shl
fdivr
(bad)
call
pop
xor
mov
mov
lahf
mov
adc
cdq
cmc
jp
(bad)
(bad)
push
xchg
hlt
in
sbb
add
mov
mov
xchg
push
push
iret
pop
inc
mov
(bad)
push
pop
in
outs
rcr
loop
pop
ret
inc
xchg
add
push
xchg
add
sbb
(bad)
jmp
loop
push
cmp
inc
ja
push
mov
inc
fwait
xchg
pop
sbb
sbb
jge
into
dec
mov
jae
leave
imul
dec
inc
xchg
xchg
pop
(bad)
(bad)
jg
fisttp
fs
out
aad
ins
mov
popa
mov
push
in
push
icebp
(bad)
sub
retf
int
jg
in
ret
dec
push
fistp
std
idiv
sbb
shr
xchg
out
add
cmps
mov
(bad)
inc
aad
dec
adc
test
xor
cld
imul
pop
push
mov
dec
mov
inc
dec
mov
(bad)
loopne
ds
int3
retf
dec
mov
(bad)
(bad)
(bad)
(bad)
aas
adc
(bad)
fwait
push
(bad)
mov
xlat
pop
fcmovne
cmps
dec
jmp
aaa
mov
ins
xlat
outs
fstp
clc
dec
xor
sub
push
jp
mul
call
(bad)
(bad)
call
gs
push
push
pop
stos
sbb
adc
ins
sbb
cwde
inc
xchg
out
mov
add
(bad)
mov
add
mov
xchg
add
js
and
cmp
sbb
in
jne
imul
(bad)
(bad)
(bad)
std
jnp
cmp
imul
clc
loop
out
daa
out
ficom
js
mov
xchg
inc
(bad)
add
loopne
jo
icebp
repz
loopne
dec
inc
out
and
stc
stc
or
(bad)
(bad)
dec
fnstcw
add
ror
mov
mov
push
push
(bad)
(bad)
(bad)
(bad)
cmp
jle
arpl
jle
shl
inc
adc
and
sub
leave
retf
mov
call
cmp
push
mov
mov
xchg
push
cmp
pop
cmc
stos
leave
push
sub
(bad)
(bad)
(bad)
cmp
mov
pushf
retf
movs
enter
mov
sub
cld
pop
jge
add
adc
(bad)
call
pop
mov
mov
xchg
or
sub
adc
mov
frstor
cli
mov
xor
mov
mov
jmp
mov
sbb
jg
dec
push
jno
fldenv
repz
xchg
call
(bad)
(bad)
(bad)
jmp
(bad)
mov
pop
js
xor
xor
inc
inc
loop
int3
xor
js
pop
mov
retf
ja
(bad)
call
hlt
ss
test
xchg
loope
inc
xlat
jo
leave
retf
xor
(bad)
(bad)
(bad)
inc
imul
cmp
ficomp
cmp
ret
inc
jmp
cmp
test
(bad)
(bad)
(bad)
inc
(bad)
cld
adc
mov
xor
inc
mov
push
popf
jns
out
xchg
hlt
call
adc
mov
jb
mov
dec
in
push
inc
loop
je
mov
mov
(bad)
jmp
lods
lds
push
call
or
leave
jbe
cwde
int
out
jmp
push
sub
mov
(bad)
push
xchg
mov
stos
and
lods
fnstsw
pushf
cmp
xor
add
(bad)
mov
adc
hlt
inc
xor
jg
mov
sbb
out
add
mov
mov
jno
(bad)
(bad)
(bad)
inc
mov
in
xor
rcr
push
jb
inc
and
pop
sub
push
retf
daa
rcl
add
(bad)
(bad)
(bad)
(bad)
call
pop
out
xchg
out
dec
inc
push
and
in
stos
stos
retf
cmps
mov
scas
xchg
mov
or
sbb
pop
cmc
dec
dec
adc
pop
dec
and
lock
retf
repz
repnz
mov
jns
jbe
cld
jmp
or
xchg
sub
pop
jl
mov
fld
jl
mov
pop
(bad)
(bad)
aaa
cwde
jne
mov
push
popa
pop
inc
and
bnd
sbb
hlt
inc
(bad)
dec
jecxz
xchg
(bad)
xchg
pop
xchg
jmp
pop
mov
imul
or
loopne
or
movs
xor
pop
sub
or
lods
push
dec
(bad)
(bad)
(bad)
(bad)
fbstp
(bad)
inc
popf
ret
sbb
sar
rcr
mulps
jmp
scas
pusha
clc
cmps
xlat
(bad)
dec
add
mov
and
icebp
iret
push
push
inc
pushf
je
mov
(bad)
jmp
lock
xchg
test
cmp
shr
push
inc
shl
adc
sar
xor
mov
sbb
push
xchg
shl
mov
in
call
repz
sbb
outs
inc
cmp
lods
(bad)
(bad)
inc
and
mov
outs
clc
hlt
xor
ja
mov
mov
sar
dec
pop
jae
jecxz
(bad)
mov
test
or
lock
adc
mov
pop
mov
sbb
jmp
(bad)
dec
add
daa
cs
jmp
nop
bound
ds
cmp
(bad)
jmp
cmp
movs
shl
inc
inc
xor
jge
js
shl
jl
std
xchg
(bad)
(bad)
(bad)
(bad)
fstp
xchg
test
push
std
aas
jnp
cwde
inc
shl
clc
daa
sti
mov
jb
cmps
sub
jnp
mov
data16
cdq
nop
cmps
inc
fwait
movs
(bad)
(bad)
call
call
xchg
mov
out
cli
xor
xchg
mov
repnz
fs
push
jmp
inc
push
mov
xlat
pop
aaa
addr16
pusha
jg
dec
aam
sbb
xor
push
call
xchg
mov
(bad)
ins
aad
mov
add
adc
and
jnp
icebp
int3
or
(bad)
(bad)
jmp
pop
xor
ret
mov
sbb
add
cs
into
int3
add
inc
movs
pop
add
call
jb
jo
in
jg
xchg
repz
inc
mov
inc
add
arpl
sbb
mov
or
add
(bad)
jmp
mov
outs
xchg
mov
fadd
mov
inc
push
mov
int
mov
(bad)
iret
fs
pop
inc
(bad)
(bad)
call
pop
lds
cmp
xchg
jbe
mov
aaa
add
xor
sahf
int3
mov
(bad)
(bad)
(bad)
call
or
fiadd
aas
shl
stos
mov
xchg
mov
dec
add
xor
in
or
in
cmp
pop
jmp
(bad)
jg
repz
push
(bad)
lea
cmp
pop
pop
retf
scas
jns
xor
movs
adc
aas
js
push
aam
(bad)
(bad)
call
cmp
inc
pop
daa
cmp
mov
xchg
xor
push
setns
inc
pushf
cmp
outs
mov
scas
mov
test
sbb
mov
xor
pop
inc
dec
test
(bad)
(bad)
call
test
sbb
xor
fwait
test
or
cmp
inc
jae
cmc
inc
shr
adc
push
jne
jg
mov
push
stos
neg
lods
loope
mov
pop
retf
popa
call
push
(bad)
cmp
cmps
jns
jno
or
in
stos
ret
dec
inc
(bad)
(bad)
(bad)
(bad)
fidiv
mov
ja
repnz
pop
lods
sub
xchg
cs
shl
jmp
cli
jmp
jb
icebp
mov
lock
fdivr
fist
xchg
pop
add
(bad)
(bad)
cmp
mov
xor
mov
(bad)
mov
xchg
jmp
pop
push
mov
mov
fadd
in
jns
cli
popa
xchg
std
mov
retf
jae
je
cmc
xlat
jbe
fdivr
sbb
enter
inc
sbb
(bad)
(bad)
(bad)
(bad)
in
push
and
dec
jno
and
js
add
mov
(bad)
mov
add
adc
pop
dec
std
and
cmp
xchg
jmp
ins
jmp
(bad)
call
push
and
(bad)
fnstcw
div
mul
pushf
or
test
cli
adc
and
mov
add
daa
das
arpl
jle
lods
in
cld
shr
hlt
adc
push
div
mov
icebp
ins
adc
loop
add
sub
xor
push
xchg
loop
(bad)
(bad)
cmp
sbb
and
inc
addr16
inc
mov
fisttp
outs
(bad)
(bad)
(bad)
mov
mov
inc
or
pop
jo
or
lahf
inc
inc
ret
sub
jns
(bad)
(bad)
push
into
adc
outs
mov
mov
inc
scas
rol
(bad)
mov
jno
hlt
(bad)
rol
aam
std
cmp
popa
xor
in
mov
xchg
mov
dec
push
icebp
fdivr
mov
mov
(bad)
dec
mov
iret
cmp
jne
xchg
add
std
(bad)
call
in
sbb
cdq
cmp
loope
xchg
xchg
and
nop
adc
(bad)
(bad)
(bad)
out
ret
fdiv
add
clc
shl
in
jl
bound
adc
lock
call
xchg
test
jbe
ret
xor
xchg
ret
(bad)
(bad)
call
inc
push
xchg
jle
push
cmp
xor
sbb
push
mov
sbb
jo
(bad)
call
test
push
cmp
push
cld
loopne
into
lahf
cdq
dec
into
sar
(bad)
(bad)
inc
add
mov
sti
mov
mov
arpl
aas
fwait
stos
xchg
cmps
cmp
push
xchg
retf
sar
(bad)
(bad)
mov
das
mov
pop
and
xor
rcl
pop
jns
(bad)
(bad)
mov
mov
test
rcr
jmp
inc
mov
lods
dec
pop
push
cmp
(bad)
jmp
movs
shr
xchg
sub
scas
push
dec
mov
repnz
ins
mov
add
(bad)
(bad)
jmp
mov
mov
jnp
pop
(bad)
fnstsw
enter
pop
clc
or
outs
fbstp
pusha
adc
in
pop
mov
cld
lock
cmc
cmps
retf
push
xchg
push
dec
inc
loopne
add
and
mov
adc
cmp
fcom
bound
call
inc
cdq
pushf
adc
out
mov
push
stos
mov
mov
(bad)
(bad)
inc
sbb
outs
sub
jb
inc
adc
aas
out
xchg
test
iret
(bad)
dec
pop
cmc
push
jge
dec
adc
aad
jnp
pushf
mov
xor
jg
push
call
aaa
adc
lods
(bad)
pop
popa
push
pop
mov
mov
add
cli
mov
cmp
movs
or
(bad)
fist
xor
bound
dec
mov
inc
inc
adc
aam
(bad)
jmp
js
out
scas
leave
enter
mov
gs
cmps
(bad)
(bad)
(bad)
dec
pop
mov
mov
xchg
mov
mov
mov
lods
or
mov
cs
std
(bad)
call
call
ret
and
mov
test
mov
outs
clc
jmp
mov
dec
in
xchg
adc
retf
push
jp
jnp
inc
adc
adc
(bad)
jp
cmp
adc
ins
das
shl
(bad)
mov
cmps
xchg
adc
mov
jle
shl
cs
push
cwde
loop
pop
call
out
(bad)
(bad)
(bad)
inc
clc
mov
pop
dec
push
dec
pop
lahf
fsubr
xchg
xor
jp
test
lahf
repz
enter
or
outs
loop
xor
add
lea
cdq
dec
sbb
(bad)
(bad)
(bad)
fnsave
fbstp
push
sub
rcr
div
test
push
out
sbb
mov
push
cmp
(bad)
(bad)
call
push
xchg
cmp
push
dec
jne
outs
push
repz
xchg
jnp
popf
inc
fidivr
jmp
fsubr
push
test
dec
jns
jmp
push
inc
pop
inc
inc
add
out
leave
pusha
(bad)
push
xor
(bad)
(bad)
(bad)
jmp
test
jg
stc
enter
cwde
icebp
imul
gs
repnz
cmp
sbb
mov
(bad)
(bad)
inc
cwde
sbb
loop
movs
shr
add
pop
pop
out
push
dec
mov
or
cld
(bad)
call
xor
lods
mov
mov
push
ins
popa
xor
ret
or
jmp
or
mov
daa
test
mov
ds
pusha
fwait
dec
loop
in
lahf
mov
lock
(bad)
(bad)
fisttp
retf
mov
aas
xor
clc
xor
cwde
xchg
sbb
push
adc
mov
jp
mov
mov
jmp
inc
mov
adc
xor
cdq
cmp
push
les
xor
(bad)
aad
add
inc
retf
(bad)
push
dec
fcom
xchg
sub
xor
out
fs
jmp
add
hlt
mov
mov
out
jle
fcmove
arpl
jae
push
xor
mov
inc
add
and
out
loop
mov
std
(bad)
dec
into
cmp
mov
pop
mov
shl
loopne
(bad)
(bad)
(bad)
mov
push
fnstsw
data16
data16
jae
pop
pusha
or
inc
jno
aad
(bad)
inc
push
dec
inc
fild
popa
inc
mov
dec
mov
or
push
out
inc
push
add
sub
(bad)
mov
adc
adc
xchg
ins
rcl
and
(bad)
jg
inc
arpl
in
retf
lds
fld
or
push
xor
(bad)
(bad)
(bad)
inc
lods
xor
jl
dec
mov
push
arpl
cmps
dec
cmp
mov
jnp
(bad)
(bad)
push
sbb
jmp
cmc
cmp
pop
rol
rol
ins
mov
or
mov
mov
fs
dec
and
lods
mov
mov
lea
sar
add
fsub
cmp
fs
ss
push
mov
(bad)
jns
jmp
dec
aaa
push
jmp
jl
out
stos
ds
cli
xchg
xor
out
stc
ins
pop
sub
cmp
add
and
mov
scas
adc
ins
shr
into
lds
call
nop
cmc
out
sub
mov
(bad)
jg
call
push
scas
jge
repz
mov
inc
mov
cs
pop
ins
std
jg
nop
ins
inc
(bad)
(bad)
(bad)
call
out
fcmovb
and
dec
mov
inc
push
outs
sub
pop
dec
aas
push
jne
and
xor
ins
test
cld
(bad)
call
repnz
jns
mov
and
aas
adc
pop
cmp
mov
sub
push
call
out
jbe
mov
jmp
mov
cdq
xor
inc
jo
pop
sbb
mov
inc
mov
inc
(bad)
(bad)
(bad)
mov
jb
push
hlt
leave
icebp
out
cld
xchg
scas
cmps
pop
pop
mov
test
test
test
push
cmp
in
outs
sub
dec
dec
pusha
popa
push
and
inc
or
(bad)
(bad)
(bad)
call
inc
in
shl
push
inc
div
movs
and
add
imul
mov
aad
jecxz
gs
lea
xor
jbe
push
add
fild
jb
repz
inc
fadd
pusha
jecxz
mov
(bad)
(bad)
mov
fst
retf
jns
icebp
xchg
sub
cmps
pop
lds
stos
shr
loopne
jg
add
add
hlt
push
mov
jne
clc
push
aas
iret
out
leave
int3
inc
xchg
call
mov
or
outs
pusha
test
pop
aam
mov
xchg
push
das
and
jle
inc
in
jmp
outs
pop
cmp
inc
mov
or
adc
shr
mov
(bad)
jmp
xor
mov
aad
scas
adc
dec
cld
pop
or
add
(bad)
(bad)
(bad)
jmp
xchg
add
ja
xor
push
movs
jl
add
dec
repz
push
movs
(bad)
(bad)
push
test
retf
push
aas
jge
cmps
xchg
push
adc
xchg
(bad)
popa
stos
dec
call
and
mov
aas
(bad)
inc
push
(bad)
(bad)
mov
jns
mov
jg
sub
inc
jge
inc
push
inc
jno
add
popf
(bad)
(bad)
cmp
stos
jnp
bound
dec
cwde
popf
add
retf
int
mov
call
ins
dec
hlt
add
and
jp
sbb
lods
ret
test
(bad)
call
mov
push
mov
int
xchg
lds
inc
ins
test
into
push
or
sbb
clc
(bad)
jg
shr
movs
aam
mov
xor
test
aaa
fist
xchg
xlat
and
jmp
cmp
add
(bad)
dec
lock
fdiv
dec
fadd
jnp
or
dec
cmps
mov
hlt
(bad)
jmp
int
mov
enter
adc
(bad)
sti
icebp
sar
sbb
(bad)
jns
inc
gs
(bad)
(bad)
(bad)
clc
rcl
mov
cmps
push
pusha
jmp
mov
cmp
add
test
or
sbb
outs
inc
adc
xchg
outs
pusha
outs
out
adc
jecxz
addr16
jl
loop
pop
jae
cmp
(bad)
(bad)
fild
xor
lds
mov
add
push
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
inc
jb
mov
sbb
ror
lods
or
adc
push
push
jne
push
xlat
adc
push
fs
(bad)
(bad)
(bad)
fstp
test
cmp
out
hlt
xchg
loope
jle
lahf
fldenv
jnp
fstp
(bad)
(bad)
(bad)
(bad)
cmp
jmp
dec
xchg
call
inc
imul
test
ja
rcl
xor
adc
dec
jecxz
cmp
test
nop
sub
(bad)
jg
jbe
inc
call
add
popf
adc
ds
repz
cmp
call
push
dec
cs
mov
mov
cwde
xchg
dec
jge
frstor
(bad)
(bad)
(bad)
call
aaa
or
jecxz
lahf
dec
jb
pop
xor
jne
inc
jns
xor
loope
inc
lods
and
(bad)
(bad)
inc
xor
mov
in
mov
lahf
aad
mov
push
loopne
cmp
mov
jg
(bad)
dec
dec
stos
xchg
imul
fyl2xp1
fcmovnb
cmp
adc
repz
movs
jae
jne
(bad)
inc
adc
and
cmp
mov
ins
xor
stos
mov
(bad)
(bad)
(bad)
(bad)
clc
push
add
cmps
loop
ret
push
xor
iret
(bad)
dec
sbb
cmp
(bad)
mov
sub
lahf
popf
ja
adc
out
and
or
lods
daa
add
(bad)
(bad)
push
ret
movs
jmp
test
cmc
(bad)
pop
and
fistp
sbb
lahf
jecxz
(bad)
(bad)
jmp
adc
mov
movs
sahf
jmp
aam
sbb
dec
pop
add
jns
ret
(bad)
(bad)
(bad)
call
push
sbb
ret
mov
das
and
or
xchg
in
add
div
jmp
xor
adc
dec
pushf
jbe
in
add
fld
mov
mov
adc
(bad)
call
inc
cmp
call
push
test
and
xchg
or
inc
push
clc
stc
repnz
cmps
push
(bad)
frstor
xlat
outs
sub
sub
cmp
cmp
dec
inc
bound
das
push
call
jmp
add
(bad)
jg
xchg
ret
out
mov
movs
cld
xor
sbb
(bad)
(bad)
(bad)
call
bound
and
cmp
inc
cs
icebp
sbb
retf
push
rdtsc
mov
add
push
cmc
add
(bad)
push
call
int3
cmp
call
push
inc
pop
xor
loop
mov
cwde
mov
sub
imul
pop
sub
cld
rol
pop
icebp
aaa
in
xor
and
repz
stos
arpl
push
xor
fidiv
ret
cdq
cli
add
call
mov
push
jge
test
stos
pop
xor
neg
jae
rol
(bad)
jg
sar
fbld
and
inc
imul
(bad)
inc
mov
popa
mov
jb
xchg
scas
xor
shl
sub
jns
mov
(bad)
(bad)
call
fbld
cmc
bound
dec
(bad)
test
cdq
xor
test
xchg
loope
mov
push
cld
jmp
mov
fcom
retf
ret
jp
jp
xchg
lods
loopne
pop
hlt
ja
mov
ror
mov
shr
push
jb
loope
adc
inc
cmp
inc
(bad)
or
aaa
into
inc
push
std
(bad)
call
inc
mov
jae
and
xor
retf
cmp
cmp
(bad)
jg
inc
jl
dec
test
aad
gs
cmps
out
inc
and
sti
mov
jg
ins
std
jmp
mov
push
mov
(bad)
(bad)
(bad)
jnp
mov
cmp
mov
(bad)
out
pusha
cmps
test
je
clc
jg
cmp
retf
lea
stos
pop
xor
push
fcmovne
mov
(bad)
pop
ret
nop
jmp
push
sbb
cs
inc
jae
xor
cmp
call
leave
mov
and
xor
pop
cmp
fwait
lahf
jmp
scas
xchg
ins
nop
not
enter
popa
push
es
(bad)
jo
dec
call
xchg
xchg
jae
rcr
dec
lods
mov
push
test
dec
lods
(bad)
mov
adc
pop
in
aam
inc
aas
push
sbb
call
repnz
fisub
mov
pop
cmps
cmp
(bad)
aas
test
inc
adc
pop
inc
push
pop
inc
jge
jnp
push
push
mov
jl
adc
jmp
or
jnp
pop
cwde
clc
push
cmps
adc
xchg
(bad)
sar
scas
iret
push
test
outs
jne
mov
xchg
mov
dec
fxch
xchg
add
pushf
pop
icebp
ret
sar
(bad)
jmp
bound
and
pop
jle
(bad)
cli
loopne
outs
cmp
adc
jb
and
(bad)
(bad)
(bad)
(bad)
jge
add
mov
fucomip
mov
stos
loop
mov
call
cmp
(bad)
outs
inc
or
repnz
gs
xchg
cld
jmp
(bad)
data16
mov
pop
xor
xor
xchg
(bad)
(bad)
in
jnp
mov
fsub
inc
xchg
mov
int
jle
xor
stc
push
aaa
(bad)
(bad)
(bad)
(bad)
cmp
push
sahf
cmp
lea
mov
aam
add
or
enter
ret
mov
fsubr
jmp
lods
inc
sahf
ror
sar
fild
inc
push
jb
shr
scas
jb
retf
push
or
pop
daa
pushf
add
les
xchg
pop
or
cmps
(bad)
sahf
scas
pop
cmp
mov
mov
sar
jecxz
and
js
ror
push
mov
loope
xor
mov
sbb
sbb
xchg
sti
jo
fnstsw
push
sub
push
mov
(bad)
(bad)
inc
sbb
in
cmp
push
xor
ins
mov
rcr
inc
jmp
mov
dec
jmp
inc
xchg
add
xchg
popf
mov
(bad)
fnsave
cwde
xor
cs
push
xchg
xchg
pop
std
loop
push
(bad)
jg
mov
cld
pop
push
mov
jne
add
cmp
ss
cld
(bad)
inc
mov
push
ret
pop
jecxz
(bad)
sbb
jge
inc
cmc
fsub
adc
mov
call
cs
cdq
push
add
stos
je
mov
xor
scas
mov
clc
jmp
xchg
loopne
repz
xchg
dec
ret
in
popa
(bad)
call
into
xor
test
xchg
inc
sbb
(bad)
(bad)
inc
mov
(bad)
adc
push
lahf
retf
pop
stos
in
cs
daa
mov
jl
or
lods
sbb
call
xor
outs
jne
jns
(bad)
jmp
adc
cmp
call
push
dec
(bad)
(bad)
(bad)
inc
sbb
aas
inc
add
pushf
mov
jnp
jb
fbstp
jmp
(bad)
inc
das
push
and
dec
cmp
aam
jo
cmp
push
mov
adc
xor
stos
(bad)
(bad)
aas
and
cdq
pop
add
xor
pop
push
sub
aad
(bad)
and
(bad)
push
xchg
cmp
jne
ror
xlat
jno
loope
cmps
mov
dec
xchg
jo
ins
or
call
mov
xchg
(bad)
cld
(bad)
(bad)
inc
cmp
scas
fld
or
mov
cli
clc
inc
ret
xor
xlat
mov
jmp
mov
call
sahf
and
mov
arpl
mov
hlt
in
xchg
inc
cmp
into
xchg
outs
(bad)
cdq
mov
fisubr
retf
(bad)
out
cli
dec
aas
sbb
dec
(bad)
jle
inc
mov
jmp
push
loop
out
cli
(bad)
dec
out
outs
adc
or
into
cli
ret
ret
sbb
mov
(bad)
(bad)
(bad)
mov
or
pop
(bad)
popa
in
xchg
or
jo
lea
mov
pop
push
ins
popf
enter
mov
xchg
pop
mov
loop
pop
mov
imul
dec
sbb
inc
(bad)
push
sub
dec
je
mov
or
sub
cmps
cmp
(bad)
call
mov
pop
mov
mov
test
jnp
xchg
pop
into
xor
jmp
inc
xchg
iret
daa
imul
add
or
(bad)
(bad)
(bad)
inc
add
sbb
xchg
or
jae
xchg
lahf
jp
and
mov
mov
retf
mov
mov
cmp
mov
xlat
xchg
push
nop
sar
fwait
push
mov
xor
sbb
cmp
(bad)
out
jnp
push
and
adc
mov
fs
jo
clc
sbb
inc
fld
imul
jmp
ins
retf
int3
aas
xchg
jbe
test
clc
inc
int3
popf
cmp
ror
push
cmp
inc
xchg
xor
fisubr
ss
add
adc
repnz
mov
retf
adc
ret
into
aas
out
sub
push
call
adc
retf
sahf
mov
(bad)
(bad)
call
jmp
adc
loopne
adc
dec
cdq
or
adc
retf
popf
mov
sti
sbb
inc
fimul
xor
das
push
popa
adc
ret
dec
dec
cmc
movs
xor
(bad)
mov
sbb
push
push
inc
stc
inc
test
pop
push
fld
push
aaa
cmps
bound
(bad)
(bad)
(bad)
(bad)
cli
lods
ficomp
int3
cmps
push
cmp
jge
push
xchg
aas
gs
mov
mov
(bad)
outs
gs
fdiv
(bad)
(bad)
cmp
pop
adc
in
or
loopne
mov
adc
pop
inc
lods
lea
sbb
add
and
(bad)
(bad)
jg
outs
lods
cmc
lea
mov
call
jnp
loope
icebp
cmp
stos
mov
(bad)
test
jmp
and
(bad)
(bad)
(bad)
inc
xchg
jle
iret
cmp
(bad)
mov
inc
scas
imul
inc
fwait
jb
imul
add
jb
jge
cmp
movs
fimul
cmp
hlt
push
push
out
movs
std
pop
bound
or
(bad)
and
xchg
rol
(bad)
out
pop
xchg
push
xchg
jae
movs
(bad)
(bad)
(bad)
jmp
outs
imul
test
cmc
js
mov
loop
sub
call
std
dec
not
mov
xchg
repz
shr
fwait
mov
outs
inc
stos
add
adc
mov
sub
lahf
aaa
cli
(bad)
(bad)
call
out
adc
(bad)
pop
loope
cmp
jne
mov
inc
or
loopne
das
sbb
jg
jmp
lods
xchg
jno
pop
adc
pop
xchg
fmul
loop
dec
push
pop
ins
loope
in
or
jb
addr16
xchg
sar
lea
cdq
(bad)
(bad)
(bad)
push
shl
sub
push
add
dec
sbb
fs
pop
daa
fnstcw
mov
and
mov
inc
mov
or
fist
arpl
mov
inc
lahf
hlt
lods
dec
xchg
fbld
mov
std
mov
scas
outs
xchg
pop
fiadd
push
out
adc
push
cld
daa
popa
jns
cli
dec
mov
lods
test
pop
cmp
(bad)
(bad)
inc
mov
mov
(bad)
cmp
cmp
xor
stos
into
je
(bad)
(bad)
call
xor
mov
leave
sub
and
ss
in
popa
adc
xor
mov
ds
adc
sbb
dec
add
xchg
adc
aas
test
je
pop
loopne
inc
lds
mov
stos
jl
shl
cmp
cwde
adc
in
(bad)
jg
push
cdq
rcl
lea
enter
or
cdq
dec
ins
out
icebp
lock
test
or
call
push
int
dec
mov
fptan
cmp
icebp
call
lea
(bad)
(bad)
(bad)
inc
inc
cmp
xchg
mov
scas
dec
mov
je
loope
js
sbb
(bad)
(bad)
(bad)
(bad)
cmp
in
sub
ret
ds
cld
add
out
repz
inc
neg
fsubp
fcmovu
rol
test
(bad)
push
pop
mov
push
sbb
hlt
icebp
pushf
idiv
lods
jo
mov
js
hlt
dec
fwait
push
mov
inc
mov
mov
(bad)
jmp
call
xchg
stos
sub
push
dec
jo
gs
mov
(bad)
(bad)
jmp
icebp
retf
fcom
cmp
xor
inc
adc
jbe
js
outs
stos
sbb
fistp
jl
sub
jns
push
xchg
test
add
cmp
mov
jmp
lfs
dec
sub
jb
jno
mov
jg
jbe
mov
sbb
(bad)
or
mov
jmp
sub
call
add
sub
cmps
xchg
cli
cmp
popa
push
mov
pushf
cmc
outs
clc
call
mov
fucomp
retf
pop
xor
push
xchg
cmp
cdq
in
sub
inc
lods
(bad)
mov
mov
cmps
div
rcl
inc
mov
mov
dec
jmp
mov
or
dec
push
nop
es
(bad)
fild
nop
sti
mov
dec
mov
mov
movs
mov
(bad)
jmp
push
and
push
aaa
stos
repnz
add
adc
sahf
sub
ss
aas
dec
loopne
scas
jmp
les
imul
aas
adc
out
shl
(bad)
(bad)
(bad)
call
jns
cmc
add
mov
or
or
test
inc
popf
or
mov
(bad)
push
jp
repz
sub
cmp
push
in
jbe
mov
mov
xchg
loop
aas
mov
jge
aam
mov
xchg
inc
or
sti
mov
ficom
inc
call
loopne
push
or
(bad)
cld
pop
mov
sar
fcos
cmp
push
addr16
fs
mov
push
mov
mov
sub
jecxz
and
jnp
ins
cmc
(bad)
(bad)
push
stos
iret
mov
jb
cmc
xchg
cmc
mov
mov
mov
inc
(bad)
cmp
pop
cld
fnstsw
and
push
inc
pop
and
outs
pop
sub
mov
jnp
inc
dec
adc
retf
clc
(bad)
(bad)
push
jle
jg
push
or
call
inc
pop
arpl
fcomp
sar
(bad)
jmp
loopne
cmps
fisubr
inc
loop
jp
mov
jno
mov
dec
hlt
jnp
cmp
(bad)
(bad)
out
jae
xchg
(bad)
fist
pop
iret
popf
or
xchg
inc
xchg
out
aaa
cld
(bad)
jmp
jne
cmp
mov
or
add
scas
imul
jae
(bad)
jg
inc
and
(bad)
mov
xor
sbb
fcomp
cwde
cld
test
loope
call
push
dec
cli
pop
fisubr
jmp
cmp
(bad)
(bad)
push
icebp
xchg
sahf
push
adc
pop
mov
ret
fisub
(bad)
(bad)
jmp
xor
mov
or
rcl
ret
mov
jp
xor
jo
in
add
into
add
mov
mov
mov
push
out
dec
xor
outs
imul
xor
jne
fwait
syscall
push
icebp
sbb
(bad)
jg
in
inc
je
cmp
mov
mov
(bad)
(bad)
dec
test
imul
lods
inc
enter
dec
cmp
inc
add
loopne
imul
out
(bad)
jmp
inc
xchg
inc
imul
loope
ins
loopne
outs
or
cmp
cmc
add
(bad)
fild
xchg
mov
call
std
(bad)
fild
sub
fstp
fdiv
push
retf
inc
sub
clc
ja
(bad)
(bad)
push
fnstcw
fxch
xchg
xchg
movs
cmp
dec
repz
inc
(bad)
mov
cli
xchg
cmps
dec
push
(bad)
(bad)
cld
std
pop
outs
add
jecxz
mov
jnp
pop
mov
call
shl
xor
mov
rol
push
mov
mov
(bad)
mov
inc
pop
and
out
add
xor
inc
or
(bad)
(bad)
push
jbe
push
pop
adc
inc
xchg
movs
jae
dec
mov
(bad)
jecxz
stos
cmp
jnp
pop
sbb
enter
push
lahf
push
dec
mov
cdq
push
lods
mov
add
lahf
pop
pop
clc
mov
add
aam
pop
stos
mov
xchg
push
adc
jg
pushw
jmp
pushf
ret
leave
jns
or
mov
std
call
xor
mov
jecxz
lods
call
jno
scas
push
jmp
stos
(bad)
rol
call
mov
mov
mov
jle
jne
xchg
shl
sub
xor
push
jns
dec
and
inc
mov
fdiv
xchg
fisttp
stos
int
cli
jecxz
(bad)
(bad)
call
popa
nop
push
push
push
sub
in
sbb
dec
mov
xchg
cmp
mov
(bad)
inc
add
pop
in
mov
icebp
pop
ins
pop
and
push
jno
xor
icebp
cmp
mov
sbb
(bad)
jmp
(bad)
aas
inc
pop
sbb
test
jne
jecxz
fsqrt
stos
(bad)
inc
idiv
cmp
lahf
cs
sub
jno
pop
add
dec
retf
xchg
inc
mov
or
pop
add
test
jns
outs
fcom
add
sub
pushf
cmp
cmp
xor
push
adc
aad
inc
jnp
hlt
or
jno
lods
std
aas
inc
add
(bad)
(bad)
(bad)
jmp
jmp
add
sbb
icebp
xor
push
jo
mov
hlt
xor
(bad)
(bad)
call
pusha
or
cmps
movs
add
(bad)
xchg
sub
xor
retf
fisttp
lods
mov
not
stos
mov
add
scas
test
(bad)
(bad)
jmp
mov
cmp
call
daa
mov
sti
test
(bad)
mov
xor
mov
cmp
adc
stc
adc
rol
fs
shr
js
sbb
push
lods
adc
outs
mov
add
(bad)
jg
xor
ds
dec
and
sub
lea
mov
(bad)
(bad)
out
add
mov
loope
mov
mov
(bad)
push
mov
addr16
xlat
push
std
jmp
mov
ds
outs
(bad)
pop
push
fsubr
mov
(bad)
(bad)
(bad)
push
cmp
jbe
(bad)
fsubr
retf
mov
xchg
xchg
add
push
sar
inc
aam
jb
cs
jg
hlt
call
cmp
hlt
shl
cli
out
pop
or
call
aas
imul
inc
rcl
xchg
mov
sub
(bad)
xor
icebp
mov
jmp
js
pop
mov
icebp
inc
mov
xchg
xchg
adc
ret
hlt
pop
nop
in
call
(bad)
dec
and
gs
mov
pop
mov
mov
sub
mov
add
inc
test
aam
loop
jmp
dec
repz
inc
cld
cmp
in
dec
or
mov
push
repz
jne
leave
xchg
(bad)
jmp
cmp
jmp
movs
jae
cmp
push
push
mov
jg
movs
inc
pusha
ret
ins
lahf
xchg
fs
mov
xor
mov
pop
sbb
int3
icebp
scas
inc
inc
(bad)
(bad)
(bad)
call
jb
jae
int3
loop
les
sbb
enter
lock
repz
out
push
(bad)
push
adc
icebp
inc
lahf
mov
addr16
mov
xor
je
push
xor
stos
xchg
jb
(bad)
(bad)
(bad)
(bad)
jmp
inc
(bad)
rcl
pushf
push
inc
(bad)
ja
add
push
or
stc
ret
fcom
jmp
(bad)
(bad)
(bad)
call
or
add
shl
sar
xor
adc
bound
test
pop
jnp
(bad)
(bad)
(bad)
push
xchg
fcomi
mov
dec
jle
pop
mov
adc
iret
dec
add
xchg
push
and
(bad)
(bad)
mov
sub
jmp
sub
inc
retf
imul
adc
mov
mov
ja
push
lods
add
loope
mov
mov
das
sbb
cmp
(bad)
repnz
jnp
cmp
(bad)
(bad)
push
sbb
sub
les
mov
pop
in
xor
add
add
jg
(bad)
dec
pop
and
jg
data16
jns
push
xor
shl
inc
jno
dec
sub
mov
(bad)
call
fst
rcl
mov
xchg
popf
icebp
retf
pop
(bad)
retf
loopne
imul
cli
jmp
lea
jo
test
inc
push
(bad)
(bad)
(bad)
(bad)
call
mov
(bad)
lea
mov
lahf
in
lock
shl
xchg
cld
(bad)
(bad)
(bad)
frstpm(287
inc
adc
lahf
push
out
(bad)
js
mov
out
jg
lea
test
add
inc
imul
xor
inc
sbb
(bad)
cmp
stc
(bad)
xor
out
loope
sub
jmp
jle
imul
fnstsw
js
mov
movs
mov
icebp
cmp
pop
adc
adc
(bad)
(bad)
inc
xor
jnp
xor
or
sub
sbb
fldenv
sub
je
adc
lock
call
adc
jne
mov
es
adc
jle
jb
shl
(bad)
call
push
sbb
cmp
popf
gs
cmp
test
aaa
or
(bad)
(bad)
(bad)
dec
sti
sti
clc
mov
call
pop
loope
in
mov
cmovs
test
out
inc
cmp
add
mov
push
test
push
jns
jns
icebp
push
mov
jmp
ds
std
fidivr
inc
sahf
adc
fwait
popa
shl
xor
push
mov
xlat
sti
ret
fwait
cmp
pop
and
lods
sbb
into
(bad)
jmp
or
sub
inc
rcl
(bad)
(bad)
(bad)
push
and
mov
jmp
ds
pusha
inc
cmps
bound
xor
mov
push
jo
(bad)
jg
pop
and
sub
push
stos
sub
jmp
lock
push
fwait
loope
xor
call
inc
mov
ret
cwde
xor
(bad)
call
add
jnp
sahf
retf
(bad)
out
adc
cmp
push
xchg
(bad)
fbld
test
pusha
sub
inc
mov
adc
lahf
push
int
cs
cmp
loop
cs
stos
jnp
bound
jbe
int3
fisub
lods
into
adc
popa
pop
sti
ja
ret
dec
pop
sub
jns
(bad)
(bad)
call
push
inc
call
gs
xor
adc
add
mov
xchg
cmp
pop
out
cld
(bad)
jmp
inc
mov
loop
cmp
cmp
cmps
or
mov
(bad)
fcomip
(bad)
out
jae
dec
fst
sub
sbb
icebp
mov
movs
repz
(bad)
mov
xchg
push
mov
inc
addr16
push
pop
das
popa
and
cmp
sahf
(bad)
cs
adc
mov
mul
loopne
rcr
pop
imul
clc
fcomp
clc
pop
jmp
std
push
cld
fptan
sub
std
dec
cmps
sahf
inc
dec
xor
outs
push
clc
fstp
mov
(bad)
jg
(bad)
clc
xor
push
mov
mov
pop
(bad)
ds
repz
and
pop
rol
add
jle
cmc
sbb
sub
push
pop
cdq
in
jb
and
cmp
push
xor
(bad)
(bad)
(bad)
call
aaa
push
add
pop
jae
sub
call
inc
mov
pop
push
jb
(bad)
(bad)
jmp
inc
cmc
ins
xor
movs
clc
das
jns
icebp
push
fistp
cmp
jg
arpl
cwde
push
sub
xchg
jecxz
pop
clc
cmp
cmc
adc
cmps
(bad)
(bad)
call
adc
mov
xchg
or
and
stc
clc
mov
outs
mov
(bad)
cmp
adc
idiv
pop
jne
cs
mov
(bad)
(bad)
clc
test
ins
jns
cmp
clc
mov
aaa
in
pop
push
xor
add
sbb
(bad)
(bad)
mov
in
and
push
ds
jne
xchg
push
clc
jo
push
popf
call
es
fld
or
enter
bound
call
add
sbb
int
jp
std
push
lods
iret
and
in
mov
call
jmp
js
dec
arpl
jno
outs
cmc
push
jle
push
lods
or
sbb
aam
inc
shl
jmp
sar
xor
push
push
mov
fdivr
pop
popf
add
and
sbb
call
mov
mov
add
push
sub
pop
les
adc
test
(bad)
(bad)
(bad)
(bad)
fstp
mov
push
call
popa
cmps
nop
(bad)
xlat
inc
or
(bad)
call
cmc
sub
adc
pushf
hlt
inc
jl
arpl
adc
mov
es
cmp
cli
(bad)
(bad)
std
and
sbb
mov
out
mov
and
jmp
mov
cmp
mov
outs
(bad)
mov
pop
push
lods
es
les
xchg
cmp
fdiv
cmp
(bad)
(bad)
(bad)
inc
xor
jp
out
push
loope
test
lea
jle
or
inc
xlat
xchg
xlat
cmc
or
jne
mov
inc
jo
xchg
jl
gs
cli
or
and
or
mov
jg
mov
push
mov
mov
je
(bad)
(bad)
jg
add
call
cmp
nop
pop
daa
jmp
jne
add
gs
adc
sbb
jno
pop
fsubr
dec
cli
out
ret
mov
xlat
push
clc
leave
(bad)
(bad)
dec
popa
test
jns
sub
xchg
xor
hlt
and
add
clc
xor
inc
mov
jne
jne
scas
cmp
xor
xor
das
clc
or
cmc
div
jmp
dec
ins
(bad)
sbb
std
jbe
icebp
aaa
cld
sbb
pop
pop
fdivr
cli
xlat
or
in
fcmovnbe
inc
add
cld
xchg
mov
add
dec
push
imul
or
mov
daa
push
sbb
inc
jp
inc
aaa
adc
stc
gs
inc
xchg
hlt
lea
(bad)
call
mov
pop
xchg
idiv
adc
clc
xchg
(bad)
(bad)
mov
(bad)
push
or
leave
push
cld
mov
dec
les
clc
sub
std
rol
or
jmp
hlt
in
push
and
or
jnp
inc
(bad)
call
bound
fiadd
in
popf
mov
xchg
aad
clc
(bad)
fild
(bad)
popa
test
loopne
sbb
inc
jecxz
xchg
hlt
push
cmp
mov
jo
mov
fidivr
in
fnstenv
and
mov
add
sbb
jno
(bad)
in
push
pop
mov
jmp
mov
(bad)
inc
jb
xor
int3
sub
(bad)
in
mov
jbe
in
neg
mov
dec
pushf
add
(bad)
push
mov
adc
mov
add
rol
lock
cmc
clc
sbb
mov
dec
popa
jo
dec
push
cmp
jne
test
(bad)
(bad)
jg
dec
test
shr
hlt
xchg
jecxz
fidiv
mov
clc
(bad)
dec
cmp
or
inc
xor
pusha
and
mov
cmp
fwait
sub
adc
aaa
std
lahf
je
mov
jno
pop
in
fstp
pop
pop
mov
mov
cmp
and
ss
xor
jne
xchg
jmp
jp
loop
cmp
push
pop
jecxz
lods
sbb
aaa
sbb
aaa
popf
test
imul
mov
mov
neg
or
pusha
and
inc
clc
test
repnz
(bad)
(bad)
jmp
dec
mov
mov
jae
cmp
(bad)
jnp
mov
sar
(bad)
jg
ja
and
in
cmp
cmp
shl
sbb
push
jns
int3
(bad)
(bad)
(bad)
inc
clc
mov
jno
int
push
das
jmp
ins
(bad)
ss
sar
sbb
mov
push
out
aam
shl
jae
xor
out
mov
call
jp
loope
inc
push
add
dec
stos
push
cld
pushf
push
hlt
mov
rcr
mov
ins
cmp
xchg
(bad)
(bad)
mov
adc
sub
cmp
imul
and
cmp
(bad)
(bad)
fild
fisubr
sbb
ss
cmp
or
and
add
movs
mov
(bad)
inc
inc
into
(bad)
aam
pop
lods
cmp
lahf
ss
outs
cmp
add
xchg
pop
jo
call
call
jmp
(bad)
data16
sysexit
int3
hlt
daa
mov
sbb
sub
(bad)
fbld
jp
retf
mov
sbb
and
loop
aaa
fidiv
aas
adc
push
add
div
fnsavew
push
std
or
mov
test
dec
ss
cmp
ins
sbb
or
inc
ret
jmp
mov
inc
jnp
sub
jo
(bad)
(bad)
dec
push
and
fs
jecxz
cmp
dec
in
(bad)
cli
xchg
fnstenv
adc
gs
add
add
ss
cmp
sub
scas
(bad)
(bad)
(bad)
jmp
std
std
ss
imul
sub
mov
(bad)
mov
mov
xchg
sbb
mov
sbb
aaa
aad
retf
rcr
in
and
cwde
mov
pop
jbe
stc
dec
sbb
sbb
jbe
int
mov
push
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
clc
mov
push
in
call
mov
xor
out
mov
add
mov
jecxz
cld
jmp
clc
shr
push
loope
(bad)
fpatan
inc
pop
js
call
cld
mov
aas
stc
clc
push
jno
fwait
movs
push
nop
imul
fsubr
(bad)
gs
jg
jmp
stc
pop
outs
outs
jle
jmp
mov
xchg
xchg
dec
jns
or
jns
sub
jb
pop
aaa
cmps
test
xor
mov
mov
inc
sti
push
dec
pop
test
push
div
std
je
(bad)
(bad)
dec
daa
hlt
cmp
out
mov
xor
jp
(bad)
(bad)
(bad)
cmp
ins
popf
inc
jmp
adc
dec
sbb
(bad)
fldenv
dec
jbe
inc
adc
fld
add
test
test
dec
int
push
push
loopne
hlt
sub
std
(bad)
jmp
add
lahf
jns
loopne
cwde
or
imul
mov
aad
(bad)
inc
xor
popf
ror
add
pop
aaa
dec
cmp
xchg
jmp
ja
ja
inc
cmc
fadd
cli
dec
(bad)
mov
mov
jmp
bound
js
push
retf
mov
cmp
push
cmp
jae
add
or
push
(bad)
(bad)
mov
lock
and
aas
jmp
xor
jnp
xchg
aad
jl
cmc
pop
inc
icebp
(bad)
mov
push
pop
mov
inc
jno
nop
(bad)
jne
fdivr
fwait
(bad)
push
add
(bad)
into
idiv
pop
repnz
stos
or
ficom
mov
test
(bad)
(bad)
jmp
cwde
test
out
das
push
in
sub
mov
and
pusha
add
iret
xchg
xchg
mov
push
test
mov
outs
fsub
pop
enter
in
mov
xchg
out
dec
adc
fnsave
adc
(bad)
dec
cli
loope
hlt
push
imul
and
mov
in
ins
iret
clc
(bad)
(bad)
call
add
push
lahf
or
xor
shl
mov
xchg
mov
cmp
jmp
out
push
stc
fsub
or
(bad)
xlat
mov
xchg
mov
in
(bad)
inc
dec
cmp
push
and
xchg
fsub
push
das
xor
mov
lods
add
(bad)
pop
ins
add
nop
cs
sbb
cld
(bad)
jmp
(bad)
mov
shl
arpl
jecxz
stos
mov
cwde
mov
or
into
adc
stos
outs
or
jns
dec
inc
xor
sbb
sti
arpl
(bad)
(bad)
(bad)
dec
pop
dec
add
sub
cmp
outs
repz
ret
aaa
jge
add
mov
outs
shr
jle
dec
xlat
pop
(bad)
(bad)
(bad)
inc
ja
scas
mov
icebp
xchg
rcl
push
cmp
mov
sbb
cdq
ret
test
(bad)
call
test
xchg
push
enter
pop
jne
cld
mov
(bad)
int3
add
(bad)
(bad)
stc
xchg
sti
push
adc
std
fdivp
or
sub
leave
clc
setne
btc
mov
sub
push
mov
cmc
cmp
ror
out
ins
add
xchg
dec
mov
(bad)
mov
inc
sub
sub
call
mov
enter
lods
cmc
push
add
pushf
push
adc
mov
add
and
bt
xor
or
jle
mov
je
data16
(bad)
(bad)
fist
inc
push
push
bt
xor
pushf
jmp
or
out
push
add
dec
adc
adc
mov
stos
jb
call
fisttp
dec
fwait
iret
or
loope
mov
pop
pop
cmp
icebp
and
jp
stos
xor
add
xor
arpl
repnz
imul
(bad)
call
cmps
or
loope
shl
mov
fadd
int
sar
dec
mov
(bad)
push
mov
addr16
jecxz
mov
movs
inc
shl
push
int3
fstp
(bad)
(bad)
(bad)
call
nop
mov
sub
xor
jnp
jecxz
loopne
jns
dec
cmps
jbe
sub
jno
icebp
push
mov
(bad)
(bad)
fimul
lods
mov
push
mov
xchg
cmp
inc
lock
adc
add
stos
and
pop
sub
mov
cmc
das
dec
loope
in
jmp
or
test
(bad)
aaa
cmp
movs
xchg
rol
push
mov
ret
and
mov
jmp
sbb
or
ins
(bad)
(bad)
jmp
pusha
fs
jo
pusha
popf
pusha
pop
pop
in
dec
inc
mov
cmps
and
ins
lods
outs
or
(bad)
(bad)
cld
pop
movs
add
(bad)
mov
add
push
adc
ds
popf
cld
(bad)
push
mov
push
adc
dec
adc
mov
cwde
xchg
fdiv
rol
push
xchg
(bad)
(bad)
call
pop
icebp
cs
push
imul
cmps
sbb
or
js
mov
stos
sub
(bad)
(bad)
call
cmp
push
jp
cwde
push
movs
adc
add
popa
pushf
scas
cwde
pand
sub
(bad)
(bad)
(bad)
mov
jmp
mov
outs
outs
icebp
or
mov
std
ds
inc
sbb
push
adc
jo
jecxz
nop
inc
or
sub
cmc
mov
mov
add
(bad)
fisttp
pop
jmp
std
mov
pushf
lods
pop
sbb
lahf
hlt
(bad)
xchg
shl
js
popa
and
movs
adc
dec
xchg
dec
xor
cdq
ror
sub
(bad)
mov
or
jl
mov
pop
push
popf
(bad)
(bad)
(bad)
jmp
adc
repnz
arpl
cmps
add
ds
pop
pop
es
das
sbb
jmp
(bad)
call
(bad)
iret
pop
imul
xchg
push
mov
into
hlt
xor
or
dec
mov
outs
xlat
add
cmc
inc
inc
pushf
ret
or
leave
test
or
out
cwde
out
push
xchg
(bad)
(bad)
(bad)
push
mov
out
std
mov
scas
mov
in
cld
sahf
mov
inc
stc
loop
outs
lahf
mov
add
mov
scas
add
push
sub
out
jns
fld
inc
mov
enter
add
fucomp
push
fcomp
inc
cmc
fcomp
out
das
and
jecxz
ret
dec
mov
outs
aam
pusha
in
(bad)
(bad)
jg
mov
cdq
in
pop
ss
or
mov
inc
pop
inc
sar
(bad)
jmp
sub
xchg
xor
push
int3
jl
int
(bad)
imul
stos
xlat
popa
in
dec
xchg
xor
(bad)
(bad)
dec
sub
pop
jg
push
push
mov
test
lahf
or
jmp
push
loop
cmc
(bad)
ds
add
movs
add
shr
xor
sbb
cld
movs
or
mov
call
arpl
mov
fild
push
fmulp
xor
mov
inc
(bad)
das
cli
(bad)
inc
push
pop
pushf
stos
xchg
push
xchg
sub
scas
pusha
pushf
lahf
sbb
add
nop
iret
dec
stc
std
movs
and
push
pushf
pusha
push
xor
push
cmp
fbstp
adc
mov
lea
mov
mov
str
mov
popa
cwde
or
int3
mov
mov
fisubr
cdq
add
cdq
in
sub
push
ret
mov
jmp
inc
add
cmps
pushf
and
lock
pop
cmp
nop
push
push
xchg
aas
adc
ror
je
pop
call
test
imul
ror
imul
(bad)
sbb
addr16
sbb
ja
(bad)
mov
cmps
das
bound
jge
mov
mov
xchg
enter
dec
das
mov
mov
or
call
dec
push
sti
in
cs
sbb
(bad)
(bad)
(bad)
inc
test
cmp
dec
es
jae
sbb
cmp
fdiv
stos
push
cmp
or
and
inc
in
push
sbb
inc
cmp
shl
(bad)
(bad)
call
(bad)
pop
add
mov
dec
mov
pop
retf
push
sbb
(bad)
call
adc
push
scas
mov
scas
dec
sub
xor
xchg
xlat
push
shr
or
cld
and
mov
rcr
mov
push
xor
cmp
and
push
inc
mov
xchg
shl
and
jmp
(bad)
mov
seta
xchg
push
rol
(bad)
(bad)
out
ins
call
xchg
sub
sbb
test
push
cmps
hlt
mov
sub
(bad)
push
xlat
repnz
adc
cmp
std
pop
pop
inc
shl
fnstcw
les
loop
xor
cmc
(bad)
dec
push
rol
and
adc
leave
stc
jmp
(bad)
in
push
mov
and
inc
jmp
das
sub
xchg
dec
mov
fwait
mov
xlat
jmp
fist
fldenv
das
aad
sub
aad
leave
xchg
inc
xor
(bad)
jmp
mov
stc
pop
push
lock
jmp
mov
push
jl
and
inc
mov
ja
pop
(bad)
dec
xor
jmp
pop
mov
inc
loop
mov
(bad)
jmp
daa
push
int3
fild
cmp
jb
out
jmp
imul
ret
or
pop
(bad)
fcom
push
and
call
cmp
outs
fimul
lods
outs
push
aaa
std
ins
fs
fs
lods
push
cdq
sar
sub
mov
ror
adc
rcr
inc
xchg
icebp
lods
(bad)
jmp
cmp
push
xlat
gs
inc
sub
retf
push
ret
call
in
es
add
jle
add
hlt
mov
cmp
push
add
clc
stos
xchg
pop
ret
(bad)
call
into
push
loope
add
push
loopne
inc
jnp
inc
loop
fidivr
mov
pop
ds
ja
adc
jmp
adc
movs
in
xor
jae
inc
lahf
add
dec
adc
lea
push
out
mov
xor
lock
lea
xor
int
inc
pop
ins
dec
jmp
and
frstpm(287
push
cli
and
pushf
mov
and
(bad)
(bad)
(bad)
push
aad
xchg
sbb
push
(bad)
loope
fnsave
dec
push
pusha
cmps
dec
cs
(bad)
(bad)
(bad)
(bad)
jnp
popf
loopne
imul
ret
mov
mov
sbb
push
lods
xchg
mov
or
add
rcr
sbb
mov
inc
std
sbb
lahf
sahf
xchg
jge
adc
push
lods
adc
bnd
mov
retf
xchg
jbe
adc
mov
mov
(bad)
call
pushf
ins
mov
imul
sbb
sar
(bad)
(bad)
(bad)
inc
sti
mul
lds
dec
sahf
fnstsw
cld
xchg
ficomp
and
cli
sbb
jb
pop
inc
call
shl
cdq
dec
or
push
loopne
les
fisubr
out
push
cmp
inc
loop
pushf
jg
cmp
dec
xor
mov
scas
pop
lock
jb
or
inc
enter
les
into
mov
call
sbb
aaa
cmps
mov
pop
xor
adc
jmp
loop
adc
into
xchg
jmp
(bad)
call
(bad)
pop
bound
out
or
inc
ds
aas
xchg
bound
movs
out
arpl
inc
xchg
lock
lds
inc
add
pop
cmps
scas
mov
loope
xchg
hlt
int
adc
mov
and
(bad)
(bad)
(bad)
(bad)
sti
xor
xor
push
int3
scas
cs
int3
adc
lods
repnz
pop
(bad)
ficomp
test
mov
push
mov
aam
adc
jmp
loopne
hlt
sbb
jl
mov
sti
adc
test
cld
inc
pop
mov
mov
leave
mov
scas
adc
lock
inc
(bad)
jp
fcmovnu
(bad)
call
inc
out
jbe
push
in
stos
outs
aam
pushf
adc
mov
std
loope
lock
rcl
push
daa
cmp
or
sbb
loopne
push
(bad)
(bad)
(bad)
dec
retf
and
jbe
les
jo
inc
pop
retf
aas
shl
popf
and
mov
(bad)
(bad)
jmp
push
pop
popa
(bad)
(bad)
fldenv
inc
(bad)
xor
gs
sbb
(bad)
call
(bad)
(bad)
(bad)
(bad)
inc
mov
and
push
add
inc
into
push
imul
push
imul
shl
mov
cld
(bad)
jmp
gs
sbb
(bad)
outs
mov
sub
or
hlt
dec
jmp
imul
scas
inc
in
stc
adc
jmp
jmp
push
add
fidivr
imul
arpl
and
cmp
into
es
mov
pop
lock
xchg
inc
(bad)
in
pop
sbb
cmp
and
int3
or
mov
cmp
push
aam
ret
pop
out
push
lds
inc
loop
ss
sub
iret
std
inc
mov
mov
cmp
call
(bad)
push
pop
mov
jno
cmp
loope
sub
and
(bad)
(bad)
jg
scas
cmps
nop
mov
cmp
dec
add
icebp
nop
loope
or
in
jmp
jmp
(bad)
in
adc
or
mov
ud0
cmps
movs
mov
sbb
(bad)
push
mov
movs
cmp
mov
mov
pop
sahf
pop
pop
outs
mov
cli
push
inc
mov
leave
pop
pusha
xor
jg
inc
aas
mov
(bad)
sti
mov
xor
xor
dec
iret
push
das
lods
cmps
(bad)
(bad)
(bad)
inc
cli
mov
xor
test
(bad)
retf
sbb
sub
mov
mov
call
pop
int
inc
clc
ds
mov
mov
sti
mov
test
sub
call
out
test
cld
fcom
push
shl
push
outs
cmp
pushf
test
add
(bad)
(bad)
(bad)
call
addr16
pop
pop
sub
into
test
and
rcr
jne
pop
dec
xor
stos
xor
out
loope
or
mov
push
es
adc
mov
(bad)
cmp
xchg
ja
add
add
xchg
popf
and
jg
(bad)
int3
ret
xchg
push
out
xchg
jb
adc
mov
or
ror
pusha
nop
out
pop
fst
es
add
stc
outs
popf
push
aam
push
scas
inc
(bad)
(bad)
(bad)
call
jmp
push
jmp
inc
js
repz
out
dec
dec
retf
adc
call
mov
(bad)
(bad)
push
pusha
xrelease
ja
aam
int3
push
push
lods
xor
and
adc
enter
rcr
dec
adc
xchg
pop
and
fsub
jmp
ds
xchg
jl
sbb
mov
push
push
sub
push
push
or
dec
cmp
xchg
shr
cld
cdq
xor
pop
daa
pusha
cld
push
xchg
lea
fs
inc
mov
and
lock
int3
sbb
push
jg
cmc
add
mov
adc
jmp
and
test
in
inc
pop
inc
dec
fild
retf
rcr
shl
push
pop
aaa
inc
shr
es
sub
out
(bad)
mov
jg
xchg
addr16
mov
shl
(bad)
dec
mov
push
es
arpl
mov
mov
jo
mov
bound
pushw
stos
leave
or
add
and
dec
imul
mov
inc
inc
(bad)
(bad)
(bad)
call
dec
push
push
test
xchg
xor
ss
test
std
xchg
aad
xor
fmul
mov
(bad)
(bad)
inc
xchg
sbb
adc
jb
popf
(bad)
mov
test
hlt
mov
fistp
test
bt
rcr
add
setae
mov
or
rol
imul
sbb
fldcw
dec
loopne
aaa
cld
inc
lods
inc
pop
call
xor
mov
pop
add
retw
push
jmp
fild
(bad)
adc
movzx
neg
pop
pop
pusha
ds
sub
pushf
clc
adc
or
scas
mov
fst
jmp
push
(bad)
dec
out
cmp
and
inc
adc
neg
ret
mov
dec
adc
pop
sbb
cwde
or
jg
cwde
and
adc
dec
jge
push
call
mov
xchg
xchg
rcl
mov
and
call
(bad)
out
test
sahf
test
(bad)
ss
outs
cli
jmp
bound
xchg
cmps
push
sar
(bad)
mov
cli
(bad)
call
pop
mov
sbb
cmps
cmp
xlat
xchg
xor
dec
adc
and
call
mov
(bad)
mov
jbe
(bad)
(bad)
inc
imul
add
mov
fild
clc
in
cmp
cmp
(bad)
imul
out
call
adc
sub
cmp
add
loop
adc
ret
xchg
das
je
(bad)
(bad)
(bad)
call
add
sbb
add
mov
add
or
dec
dec
sar
icebp
addr16
outs
mov
xchg
push
mov
in
mov
xchg
clc
das
add
pop
addr16
cli
es
pop
pop
cmp
sbb
iret
jl
(bad)
(bad)
(bad)
(bad)
(bad)
push
ins
mov
retf
shr
push
js
jl
in
xchg
mov
mov
mov
pop
sbb
inc
scas
ret
inc
add
mov
mov
dec
cmp
test
call
cwde
mov
(bad)
idiv
call
loopne
into
bound
test
and
cld
sub
push
(bad)
iret
lods
(bad)
(bad)
jmp
movs
cdq
in
stos
jl
xchg
shr
(bad)
ja
mov
xor
cmps
xor
or
jl
mov
mov
rcl
imul
fwait
pop
xchg
mov
loop
mov
mov
cmp
bsr
icebp
(bad)
(bad)
fdivp
(bad)
mov
test
xor
mov
clc
test
clc
div
or
cmp
clc
cmp
xchg
lods
call
cs
pop
jmp
call
sub
test
pusha
adc
add
leave
inc
jmp
mov
pop
outs
mov
push
adc
sub
imul
mov
loope
shr
test
xchg
mov
mov
pop
sub
outs
sub
lea
call
mov
outs
adc
or
or
push
xor
sub
bound
adc
xchg
mov
(bad)
jg
dec
dec
stc
push
aaa
cwde
daa
push
sar
xor
push
lea
cmc
daa
and
cdq
add
pop
and
dec
inc
fwait
pop
lea
icebp
in
and
sbb
mov
push
or
pop
and
(bad)
dec
rol
jo
push
(bad)
call
sub
pop
push
jae
mov
xor
vshufpd
out
(bad)
(bad)
(bad)
call
fwait
inc
xor
sbb
ret
test
xor
or
fcomip
(bad)
inc
jno
inc
data16
lds
dec
push
push
push
sub
push
jne
inc
fxch
adc
loopne
(bad)
cmp
into
fstp
mov
fnstcw
mov
test
or
jecxz
fdivr
add
mov
loopne
jp
pop
cmp
mov
or
mov
cmp
test
mov
dec
jne
or
lods
adc
mov
aam
mov
(bad)
jmp
clc
sbb
inc
nop
push
iret
xchg
sub
sub
xor
add
jmp
out
jb
mov
fisub
mov
xchg
nop
ror
inc
cmps
repz
cmc
inc
ret
ss
js
mov
mov
mov
(bad)
mov
adc
repnz
xor
out
adc
pop
imul
test
mov
scas
stos
xchg
mov
(bad)
(bad)
inc
aas
mov
pop
mul
imul
(bad)
clc
inc
mov
daa
hlt
(bad)
(bad)
jmp
loopne
(bad)
neg
fnclex
shr
cmp
sti
cmps
int3
mov
nop
inc
jno
dec
repnz
(bad)
call
mov
inc
loop
dec
paddusw
ret
mov
test
push
rol
outs
clc
jmp
xchg
retf
fmul
sub
pop
and
sahf
dec
adc
mov
inc
imul
ja
ins
mov
es
jns
mov
pop
adc
dec
nop
mov
adc
mov
and
mov
cmp
mov
lock
xor
cli
lock
adc
retf
out
pop
sub
cmps
pop
sti
add
cmp
pop
mov
push
dec
test
add
inc
inc
jmp
push
xchg
test
pop
mov
push
mov
(bad)
(bad)
(bad)
jmp
sub
jl
cwde
jmp
int
jg
push
jl
(bad)
clc
add
ror
rol
jg
(bad)
test
(bad)
addr16
sbb
out
jb
mov
aas
inc
mov
icebp
push
inc
ret
mov
sti
inc
fsub
call
fadd
pop
std
(bad)
pushf
and
jno
or
adc
jmp
xor
cmp
loopne
test
xchg
push
call
pop
aas
push
rcr
mov
push
jmp
iret
scas
jbe
jo
jmp
and
xlat
(bad)
call
cld
sahf
je
fst
not
gs
imul
dec
stc
inc
je
sub
jne
adc
mov
add
(bad)
jmp
lds
pop
pop
jle
or
gs
jns
cli
(bad)
mov
xchg
adc
pusha
ins
xchg
xlat
and
(bad)
(bad)
call
or
push
mov
dec
aad
push
(bad)
rol
adc
push
dec
(bad)
(bad)
(bad)
call
mov
cmps
out
xlat
rol
cmp
stos
push
inc
clc
cmp
mov
xor
(bad)
call
loopne
in
jl
adc
imul
xchg
or
mov
dec
clc
call
adc
shl
imul
into
rcl
mov
dec
sub
mov
sbb
jmp
lahf
dec
xor
adc
pop
ins
add
enter
(bad)
fcomp
or
(bad)
(bad)
(bad)
(bad)
dec
ins
(bad)
clc
inc
out
pop
mov
fldenv
jmp
je
or
repnz
mov
inc
jmp
adc
js
dec
adc
ficom
adc
mov
leave
push
mov
test
shl
call
daa
dec
(bad)
cmp
imul
mov
mov
shl
daa
add
(bad)
jmp
jb
test
ret
dec
jo
add
xchg
jmp
xchg
sbb
cld
mov
pop
mov
add
(bad)
jmp
out
movs
stc
pop
jmp
(bad)
pop
inc
or
enter
or
mov
(bad)
(bad)
(bad)
push
(bad)
cmc
(bad)
imul
cmp
push
mov
das
mov
cmp
mov
sub
pop
mov
lahf
ret
jns
imul
sbb
lea
(bad)
dec
or
ror
wrmsr
ins
jmp
jle
and
or
out
stc
pop
pop
cmp
dec
test
jae
jle
cmp
or
cmc
call
(bad)
call
dec
pop
jb
or
mov
jnp
or
or
(bad)
(bad)
mov
or
inc
popf
sbb
add
jecxz
ret
stc
or
call
jge
cmp
(bad)
mov
dec
xchg
mov
mov
ret
inc
nop
xor
dec
mov
test
or
aad
add
test
pop
gs
pop
into
cmc
and
movs
sbb
(bad)
dec
mov
xor
data16
mov
fistp
call
ret
sbb
mov
xchg
cmp
(bad)
test
pop
or
adc
test
xlat
or
(bad)
sbb
ror
pop
stos
jo
dec
sbb
jae
inc
mov
outs
jg
lods
push
jmp
leave
stc
and
push
jle
add
cmp
(bad)
inc
movs
and
out
xchg
mov
repnz
mov
(bad)
out
in
ins
outs
sbb
(bad)
fcomip
push
les
cdq
mov
pusha
daa
sbb
sti
pop
lds
loopne
jmp
mov
ficomp
hlt
outs
sbb
movs
call
mov
arpl
scas
sar
pop
or
test
and
push
xchg
call
loopne
(bad)
(bad)
inc
cmp
call
and
daa
xor
(bad)
add
fadd
push
jne
(bad)
inc
sub
xor
cmc
ins
mov
sbb
aaa
loopne
(bad)
inc
xor
aam
cli
and
ins
mov
ret
pop
scas
adc
xor
hlt
add
call
xchg
clc
xor
add
imul
inc
das
dec
sbb
(bad)
(bad)
push
leave
test
or
inc
(bad)
fistp
xchg
dec
out
out
not
stos
add
dec
mov
mov
xchg
mov
mov
sub
(bad)
(bad)
(bad)
mov
xchg
lahf
sti
cli
arpl
sti
cwde
mov
cmps
(bad)
add
retf
std
jl
xchg
lock
add
mov
pushf
add
mov
push
fcomp
lock
sub
test
sbb
mov
shl
jg
add
sub
enter
inc
add
pop
mov
push
pushf
push
inc
and
pop
or
cmp
jmp
aas
or
push
ret
sbb
pop
fwait
(bad)
outs
mov
jl
pushf
test
adc
cmps
popf
call
(bad)
push
xor
inc
mov
retf
cwde
out
adc
xchg
pop
xchg
inc
push
enter
(bad)
(bad)
mov
or
ds
es
movs
outs
pop
pop
(bad)
jecxz
lahf
push
adc
pop
fistp
(bad)
call
dec
pop
scas
jmp
retf
pop
scas
out
pushf
loopne
pop
(bad)
inc
inc
bnd
in
in
and
fs
mov
scas
jmp
jp
pop
test
test
inc
sub
test
mov
adc
(bad)
out
cli
call
sbb
movs
mov
add
cmp
fs
out
cmps
and
retf
lods
jmp
clc
retf
adc
mov
clc
push
push
enter
jns
pop
adc
ds
or
sbb
retf
mov
(bad)
in
lds
out
ret
stc
call
dec
(bad)
call
(bad)
ins
mov
push
rep
out
jp
mov
out
or
xor
adc
(bad)
(bad)
(bad)
mov
mov
mov
inc
add
std
imul
rcr
cmp
shl
(bad)
fcomip
sbb
sub
call
cdq
out
ja
movs
add
lahf
and
test
inc
jmp
sbb
pop
das
lods
cmp
jge
sar
fcomip
cmps
cmps
mov
leave
xor
inc
push
xchg
fsub
mov
sub
jmp
adc
addr16
ss
jl
add
xor
xor
xchg
push
call
(bad)
out
(bad)
push
dec
mov
pusha
xchg
enter
stos
shl
test
push
jbe
js
outs
aad
inc
lds
das
jmp
jecxz
or
mov
mov
rol
mov
in
xchg
or
sub
sub
mov
or
fdiv
and
(bad)
and
mov
clc
add
fist
and
pop
rcl
repz
inc
icebp
add
fprem
idiv
xchg
and
ror
ret
call
aad
cmp
std
adc
pusha
call
pop
inc
pop
shl
pushaw
sub
mov
fistp
out
loopne
repnz
xor
pop
(bad)
fwait
add
outs
jmp
add
or
das
(bad)
cld
xchg
sbb
push
adc
pop
cmp
sbb
call
aas
call
into
call
nop
mov
jo
loope
ja
repz
mov
xor
nop
into
ja
cli
pop
ins
ins
push
icebp
(bad)
dec
and
pop
inc
jo
aam
in
inc
shr
lahf
ds
cdq
fisubr
adc
dec
pop
pop
jo
bound
leave
pop
xor
fwait
xor
into
outs
push
push
pop
call
rcr
pushf
repnz
mov
xchg
outs
es
pop
inc
or
aas
sbb
cmp
cmps
call
lea
jns
adc
mov
and
(bad)
icebp
aad
loope
pop
shr
xlat
sbb
pop
lods
jbe
test
pop
movs
push
call
(bad)
dec
sti
sbb
push
cmp
ficom
jmp
pop
cmc
test
pushf
pop
jmp
add
add
cmp
repnz
inc
cmp
ss
mov
(bad)
mov
rcr
mov
mov
mov
mov
pop
rcl
test
inc
mov
sub
out
adc
gs
push
or
lock
mov
(bad)
sbb
jge
call
es
mov
fsub
arpl
xor
lods
jo
into
xchg
sbb
dec
scas
xor
mov
(bad)
(bad)
(bad)
(bad)
fbld
dec
fldenv
mov
aaa
es
(bad)
sbb
mov
aam
jecxz
outs
(bad)
push
test
dec
or
or
ins
adc
mov
sbb
jg
lock
cmp
inc
cli
dec
push
pusha
sbb
dec
shl
push
cwde
outs
(bad)
(bad)
(bad)
call
test
bound
(bad)
fwait
inc
push
mov
retf
lods
jmp
add
pushf
cld
fcomip
(bad)
(bad)
mov
jno
pop
cmps
push
dec
sub
sahf
sub
sbb
and
jg
(bad)
jmp
sub
mov
std
inc
popa
cld
lock
mov
popa
mov
jecxz
mov
cmps
cdq
ja
out
js
sysret
hlt
add
(bad)
(bad)
(bad)
(bad)
fistp
pushf
sbb
shl
hlt
and
cwd
and
ins
push
in
mov
test
inc
ja
movs
imul
push
dec
call
das
push
push
cmp
shl
mov
cmp
and
xchg
mov
jmp
adc
adc
outs
sbb
sub
mov
sbb
cwde
inc
xchg
mov
cli
mov
mov
ds
pop
out
jmp
loopne
mov
sub
mov
ret
sbb
dec
ds
dec
imul
adc
xchg
and
add
pop
enter
fisttp
mov
jmp
jae
ret
inc
cmc
mov
loope
xlat
push
scas
int
push
xchg
sar
(bad)
push
xchg
mov
xor
lods
lods
(bad)
xor
lock
rol
sti
jg
jle
(bad)
(bad)
(bad)
jg
lock
push
dec
pop
popf
pop
and
loop
in
aad
dec
repz
(bad)
sub
scas
cmp
(bad)
inc
scas
loopne
in
pusha
add
fwait
add
sub
sub
js
jg
mov
push
fld
push
lods
push
add
pop
add
adc
(bad)
(bad)
(bad)
cmp
loopne
xchg
enter
mov
outs
dec
xchg
push
or
adc
cmps
mov
jno
stos
int3
test
(bad)
(bad)
(bad)
push
(bad)
(bad)
repz
cmps
and
cli
push
adc
push
cdq
jmp
sub
and
mov
jl
enter
jbe
push
sbb
and
jno
fs
jg
jge
(bad)
ds
inc
stc
push
scas
jmp
mov
mov
and
mov
(bad)
dec
push
cmps
and
in
stc
call
sbb
push
xor
add
mov
ds
(bad)
add
loope
ror
lods
lock
jb
jmp
push
dec
push
aam
add
xchg
psraw
cld
sbb
(bad)
(bad)
jg
dec
out
into
push
mov
xchg
int3
fcmovnu
movs
cmp
push
or
push
jecxz
int3
scas
and
lock
cli
fldcw
shr
xchg
sub
or
pop
mov
pop
push
dec
ret
push
push
test
fmul
cmp
and
push
jns
or
(bad)
(bad)
mov
sub
inc
fnstsw
add
stos
push
or
imul
loope
gs
sar
or
loope
scas
jae
(bad)
out
jle
and
inc
(bad)
inc
sar
jle
mov
cmp
scas
out
dec
dec
(bad)
shl
jg
stos
bound
xor
gs
enter
pop
mov
dec
cmps
jmp
popa
mov
std
cmp
cmps
arpl
xor
loope
sub
xchg
(bad)
(bad)
jg
leave
jb
aam
mov
sar
pop
scas
or
(bad)
cmp
outs
sub
(bad)
ret
cdq
dec
stos
pushf
lods
hlt
sub
jbe
and
out
rcl
retf
ja
push
jb
jmp
retf
ss
add
push
push
mov
ins
or
std
push
mov
in
jbe
sbb
cmp
(bad)
sub
fcomip
(bad)
call
push
jne
repz
adc
mov
js
es
cmp
(bad)
(bad)
jmp
inc
dec
cmp
jne
popf
ins
dec
jmp
nop
test
daa
push
or
(bad)
(bad)
(bad)
dec
call
push
cmp
or
gs
out
sbb
pop
ins
or
clc
imul
pop
jo
in
dec
mov
mov
xchg
adc
pop
sub
xlat
mov
(bad)
call
lds
repz
push
fistp
xchg
test
pop
loope
push
aas
test
jbe
xor
lock
lock
push
xchg
cmps
xchg
mov
test
es
rcl
packssdw
xor
mov
xchg
je
cdq
or
ins
loopne
push
cmc
pushf
push
sub
sbb
sbb
xor
and
jns
mov
add
xchg
pusha
psubsb
xor
mov
(bad)
mov
rol
fs
push
xchg
fadd
add
jmp
loop
fiadd
popf
push
stos
mov
sbb
mov
aam
jge
mov
ss
ss
xchg
xchg
out
out
adc
mov
lahf
mov
mov
xchg
cmp
fidiv
add
ja
cmp
and
pop
inc
mov
call
es
(bad)
(bad)
(bad)
jg
push
jmp
lahf
adc
sbb
xchg
inc
pusha
inc
pop
xchg
je
sar
(bad)
(bad)
call
test
scas
cmp
clc
aas
mov
and
cmp
inc
loop
(bad)
fmul
aad
out
jne
and
or
in
(bad)
push
(bad)
(bad)
(bad)
mov
push
jl
repnz
(bad)
xchg
out
outs
stc
shl
jmp
cmp
sub
jmp
repnz
mov
cld
sahf
in
and
jbe
sbb
mov
xchg
imul
lock
rcl
ins
cmp
std
jb
sbb
cli
jbe
aaa
sbb
sbb
inc
xchg
shl
fistp
(bad)
call
or
cmc
test
or
mov
out
shr
adc
sti
inc
stos
mov
(bad)
cmp
cmp
sbb
and
mov
cmp
test
jno
jg
lock
add
pop
mov
stos
jb
push
jmp
add
fld
dec
sbb
push
nop
mov
inc
fwait
sbb
(bad)
(bad)
call
push
cs
mov
mov
mov
stc
inc
push
shl
pop
fcmovb
das
adc
call
sar
and
pop
push
dec
dec
inc
mov
push
aam
dec
das
mov
mov
xor
lahf
sbb
stc
(bad)
in
in
scas
mov
(bad)
(bad)
(bad)
jmp
(bad)
xchg
mov
fstp
inc
jbe
pop
popa
idiv
push
(bad)
lea
test
dec
xchg
imul
test
jo
push
cs
loope
mov
jmp
add
call
dec
jmp
(bad)
push
jno
push
push
dec
nop
push
adc
aaa
scas
push
cld
mov
inc
bnd
mov
movs
pop
push
(bad)
hlt
in
sbb
fwait
pop
lock
popf
mov
dec
lods
rol
adc
not
pop
retf
(bad)
jmp
sti
neg
popf
mov
sub
pop
pop
dec
dec
pop
and
out
sub
int
push
push
sub
adc
mov
inc
xchg
out
add
movs
popf
hlt
jmp
loop
(bad)
(bad)
jg
ja
scas
iret
inc
movs
ret
inc
int
data16
mov
test
adc
push
jnp
(bad)
out
addr16
mov
xchg
mov
push
add
stos
or
(bad)
(bad)
call
stos
add
fadd
sar
adc
sbb
in
out
js
jge
dec
or
stos
cmp
(bad)
(bad)
push
sbb
mov
or
cmp
lods
stos
mov
sub
mov
(bad)
cli
ds
dec
push
ds
prefetch
mov
or
inc
inc
aam
adc
(bad)
dec
xor
jnp
pop
xor
(bad)
jg
add
pusha
jno
sbb
enter
imul
test
jl
fdiv
mov
sub
fild
mov
cld
jmp
add
mov
rol
gs
fs
(bad)
(bad)
jg
shr
or
push
movs
int3
mov
lahf
mov
test
mov
pop
les
ror
in
sbb
inc
or
std
mov
sub
(bad)
(bad)
push
int
stos
mov
rcl
hlt
iret
sub
(bad)
push
pop
mov
pop
fistp
mov
int
inc
adc
outs
cmp
push
add
mov
gs
retf
jb
outs
dec
(bad)
(bad)
(bad)
in
xchg
sbb
in
xor
mov
ds
enter
scas
inc
fwait
mov
aaa
icebp
iret
cmp
inc
out
push
mov
push
stos
call
(bad)
push
adc
(bad)
jmp
push
xor
inc
sub
xchg
int
inc
enter
retf
pop
add
push
push
mov
xor
cs
dec
fsubr
or
movs
ficom
test
pop
add
mov
mov
xor
or
dec
aad
or
sti
dec
into
cmp
cmps
shl
call
push
mov
retf
call
or
into
(bad)
mov
lods
jne
push
add
(bad)
fistp
faddp
mov
and
inc
in
pop
mov
in
inc
fcomp
adc
fs
jns
(bad)
jg
lock
loope
ffree
xchg
daa
in
test
pop
shr
jge
sbb
(bad)
(bad)
fsub
rcl
push
cmp
jne
xchg
movs
cdq
and
mov
lods
jo
sub
sub
mov
je
jmp
push
sub
push
jmp
enter
jmp
xchg
ror
push
push
push
add
ja
jo
jmp
cmp
repnz
mov
out
add
out
cmp
je
sbb
test
add
ret
pusha
leave
pop
cmp
shl
aas
test
sbb
adc
pushf
mov
(bad)
jg
mov
fisub
push
sbb
adc
(bad)
movs
jecxz
ins
cmps
jbe
mov
(bad)
cs
pop
and
(bad)
cld
pop
and
(bad)
dec
les
imul
push
aam
(bad)
sub
ss
fs
(bad)
call
push
cld
dec
sbb
pop
xor
xchg
test
inc
popf
or
scas
pop
fdiv
inc
pop
cld
mov
xor
popf
push
or
sub
pop
je
cmps
pop
cmps
cmp
mov
bound
pop
mov
les
push
inc
xor
and
mov
loopne
jle
or
pop
test
xor
(bad)
(bad)
(bad)
jmp
movs
pop
mov
sub
iret
out
xlat
and
imul
(bad)
repnz
pop
data16
(bad)
(bad)
push
pop
test
test
out
mov
xor
into
out
(bad)
jmp
adc
push
lahf
jmp
repnz
pusha
test
jmp
daa
stc
test
mov
pop
sbb
leave
je
in
sbb
test
push
xor
je
pop
jge
jmp
mov
push
out
aaa
shr
and
call
mov
stc
setns
mov
shr
aas
sub
in
mov
mov
cli
clc
mov
adc
scas
xchg
(bad)
push
sub
xor
in
jns
mov
sbb
and
and
call
xchg
cmp
daa
adc
sub
enter
(bad)
(bad)
(bad)
push
jmp
repnz
xchg
sar
and
jmp
push
add
adc
stos
fadd
call
jl
rcr
test
cmp
pop
adc
and
or
inc
lock
add
ds
not
or
mov
ins
sub
das
je
mov
adc
cmc
sbb
jmp
and
mov
cmp
sub
ja
repz
pop
(bad)
(bad)
(bad)
jmp
push
mov
sub
int3
sbb
add
stos
arpl
in
mov
mov
cdq
mov
add
adc
xor
jb
sbb
loope
(bad)
(bad)
cmp
test
into
mov
jns
push
adc
sub
xchg
mov
retf
add
clc
or
and
add
clc
adc
mov
lea
xor
das
dec
cmps
adc
fwait
push
jge
out
div
or
and
pusha
out
in
pop
rcl
(bad)
jmp
mov
ret
push
lock
std
std
(bad)
push
xchg
bound
mov
(bad)
(bad)
(bad)
inc
sti
shl
mov
lods
and
or
adc
pop
cmp
xor
fld
std
(bad)
jge
or
icebp
dec
dec
inc
adc
aam
pop
xchg
mov
dec
pushf
xchg
(bad)
jg
inc
inc
rol
xchg
fwait
aam
test
in
xchg
push
(bad)
test
sub
mov
test
loope
sub
jmp
rol
mov
mov
cs
cli
mov
mov
mov
out
mov
dec
scas
rol
int3
out
cmps
and
inc
jp
(bad)
(bad)
(bad)
inc
mov
jno
sub
mov
adc
fmul
mov
push
sbb
mov
mov
jmp
cmps
adc
jmp
push
sbb
clc
(bad)
(bad)
call
pop
cmp
movs
xor
enter
rcr
and
(bad)
(bad)
call
cmps
push
aas
mov
iret
in
adc
xchg
(bad)
(bad)
fist
out
or
push
(bad)
(bad)
div
mov
icebp
cmp
inc
(bad)
loopne
addr16
or
lock
std
call
add
push
fistp
or
add
mov
push
xor
mov
lock
fisttp
iret
cmps
ds
cli
call
sub
sub
sub
(bad)
(bad)
call
sbb
sbb
and
xchg
jmp
mov
pop
imul
hlt
sub
mov
adc
stos
fadd
jge
lea
ja
pop
call
(bad)
(bad)
dec
push
ins
mov
or
sbb
in
mov
(bad)
xchg
mul
mov
outs
retf
inc
aad
ret
(bad)
(bad)
(bad)
fist
sbb
pop
mov
xchg
ja
dec
shl
cmp
add
(bad)
(bad)
jmp
fnstcw
sub
cmp
sbb
xchg
dec
push
dec
mov
popf
sub
scas
cli
jg
sbb
push
sahf
jle
lods
sub
push
cs
gs
pop
dec
push
out
mov
call
aaa
inc
test
mov
repnz
je
push
push
mov
ret
sbb
pop
lods
push
call
cdq
shl
inc
mov
push
cli
mov
rol
(bad)
xor
icebp
aaa
pop
sar
and
ret
xlat
stos
sbb
mov
daa
ins
cld
(bad)
call
retf
hlt
js
mov
xchg
or
out
out
push
pop
(bad)
(bad)
jg
call
jmp
rcl
popa
inc
sub
mov
pop
xchg
inc
and
pop
mov
push
test
arpl
adc
je
aam
test
adc
xchg
mov
(bad)
add
ret
cmp
add
and
pop
jge
out
fistp
sbb
leave
xor
pop
add
xchg
jmp
push
adc
cmps
retf
clc
in
dec
jae
cli
inc
lds
and
xor
(bad)
out
cli
sub
popa
or
in
aam
sbb
xchg
loop
aas
add
call
adc
mov
push
call
cs
or
(bad)
dec
dec
push
add
cmc
shl
push
loop
(bad)
push
call
jbe
in
repnz
test
(bad)
(bad)
fistp
mov
pop
test
scas
test
cmp
jp
or
push
pop
jmp
(bad)
mov
outs
jl
(bad)
and
xchg
movs
jbe
icebp
call
mov
dec
mov
test
pop
or
and
lods
inc
push
(bad)
les
inc
lds
inc
test
push
pop
bound
dec
sbb
add
mov
cmc
xor
jmp
sbb
out
add
inc
call
popf
cmp
and
mov
(bad)
(bad)
bsr
and
jg
loop
lea
pop
jne
jecxz
push
aas
add
jmp
jmp
inc
(bad)
push
stc
push
mov
adc
dec
jmp
les
ds
fsub
fmul
xchg
fist
adc
fcomp
add
jge
jl
mov
ror
sub
mov
dec
shl
xchg
ror
xchg
stos
test
fistp
sub
push
mov
dec
inc
inc
sti
cld
lock
(bad)
dec
cmp
jle
neg
or
rcl
out
push
shl
je
mov
(bad)
dec
clc
popa
cwde
(bad)
jno
inc
and
loopne
sub
inc
je
add
stc
add
ret
xchg
sub
cwde
sti
loope
pop
in
call
fnstsw
cmps
aas
add
hlt
add
lods
pop
mov
sbb
add
xchg
sar
inc
in
(bad)
(bad)
dec
cmc
dec
std
pop
loope
scas
stos
jns
(bad)
loope
push
add
xchg
(bad)
(bad)
(bad)
(bad)
call
(bad)
mov
fadd
dec
pop
pusha
(bad)
mov
cmp
addr16
enter
(bad)
sti
and
(bad)
(bad)
dec
xchg
in
ficom
sub
add
loope
sbb
cmp
call
mov
xchg
or
sub
das
test
inc
ret
(bad)
(bad)
mov
cmp
mov
mov
push
mov
lods
sub
adc
stos
sbb
mov
call
cmp
cmp
leave
mov
scas
xor
xor
cwde
xchg
xchg
retf
adc
pop
cdq
cmp
fisttp
(bad)
(bad)
inc
(bad)
clc
call
adc
jg
push
stos
jno
ja
adc
pop
cmc
inc
hlt
mov
aam
in
sbb
sar
(bad)
(bad)
(bad)
rep
test
cmp
scas
enter
xor
add
pop
sub
in
push
test
mov
mov
add
pop
add
call
dec
test
add
stos
cmp
(bad)
(bad)
(bad)
jp
scas
and
jo
or
mov
daa
mov
or
adc
(bad)
(bad)
call
inc
lds
int3
push
xor
mov
sbb
xchg
push
mov
pop
mov
sbb
mov
jecxz
imul
lock
mov
not
inc
dec
js
or
or
pop
sub
mov
adc
shr
pusha
add
call
shl
mov
cmc
pushf
jmp
mov
les
sub
and
aas
seta
bswap
cwde
mov
movs
inc
xor
jmp
adc
mov
enterw
cmps
(bad)
shl
jecxz
inc
ret
les
mov
neg
loop
sub
call
pusha
lock
loope
(bad)
jmp
xor
mov
xor
sub
and
cmps
inc
jl
push
stos
add
(bad)
xchg
inc
cmp
push
adc
stc
mov
mov
sbb
push
xor
mov
call
inc
or
dec
fsubr
inc
mov
mov
and
mov
(bad)
(bad)
(bad)
(bad)
out
cmp
xor
push
imul
sbb
jb
test
mov
mov
(bad)
fnstsw
data16
shr
adc
cwde
add
add
aam
fisub
inc
(bad)
(bad)
call
xchg
jle
jae
div
or
lock
push
push
cmp
mov
xchg
and
mov
jle
jbe
lods
sti
out
js
loope
cld
pop
pusha
out
pusha
test
js
rcr
lahf
enterw
loope
cmp
xlat
pushf
push
add
xor
fld
mov
dec
fiadd
fcmovne
add
add
(bad)
mov
pushf
bswap
mov
sbb
in
inc
push
clc
pop
cmp
shl
or
jo
test
test
(bad)
jg
sub
sub
test
mov
mov
mov
test
repnz
jle
sahf
shr
dec
outs
mov
adc
mov
pushf
ds
push
loopne
fcmovnbe
fs
xchg
sub
mov
inc
jbe
xchg
movs
push
into
inc
in
cmp
cmovno
rcr
or
jmp
pop
inc
and
sbb
(bad)
(bad)
(bad)
call
lods
adc
jmp
mov
mov
adc
and
scas
(bad)
retf
xchg
fs
(bad)
(bad)
dec
lds
add
outs
jecxz
inc
jecxz
push
cmp
stc
mov
out
xor
xchg
out
movs
mov
(bad)
(bad)
call
jg
gs
inc
js
sbb
shr
test
sbb
adc
cmp
adc
shr
cmc
pop
adc
hlt
dec
mov
cwde
jle
xor
and
mov
jge
icebp
call
in
sbb
push
stc
add
and
and
rol
call
pop
retf
add
mov
mov
cmp
rol
or
lds
inc
add
rcl
(bad)
cmp
sbb
(bad)
mov
fwait
test
push
mov
cld
dec
fbstp
adc
inc
icebp
repnz
jl
cmp
rep
arpl
cmp
push
or
jecxz
ins
sbb
fbstp
lahf
call
cwde
(bad)
(bad)
mov
movs
cmp
push
mov
repz
mov
mov
ret
rol
cmps
jmp
jmp
xchg
syscall
jmp
dec
and
les
icebp
(bad)
(bad)
(bad)
sub
jbe
add
xor
sbb
gs
lock
jg
loop
sbb
mov
mov
mov
dec
xchg
and
ja
pop
in
loope
mov
aaa
cmp
(bad)
(bad)
fist
lea
pushf
sar
popa
ror
retf
je
xlat
rol
ret
fidivr
(bad)
inc
push
stos
jge
ja
pusha
cmp
scas
dec
shl
add
mov
daa
int3
sbb
inc
(bad)
inc
push
mov
(bad)
mov
int3
mov
(bad)
(bad)
dec
into
repz
and
fsubr
jne
fcomip
jmp
in
pop
xchg
hlt
call
cld
sahf
push
movs
sbb
xchg
or
clc
popf
add
dec
(bad)
call
sar
sub
popf
mov
clc
xchg
cmp
cmc
(bad)
(bad)
push
cmp
adc
ror
sbb
mov
inc
dec
xchg
xchg
fwait
sub
out
hlt
(bad)
(bad)
(bad)
call
daa
(bad)
push
movs
mov
stos
pop
and
cmp
adc
leave
ud0
mov
test
cwde
cmp
xchg
xor
cli
jp
add
hlt
(bad)
push
adc
jg
jmp
inc
pop
leave
fld
pop
sub
outs
cs
rol
or
sbb
mov
ins
xchg
jl
push
imul
test
(bad)
(bad)
(bad)
call
add
(bad)
push
popf
arpl
ss
aaa
les
aam
lea
ds
repnz
and
(bad)
out
clc
dec
fild
and
push
repz
mov
(bad)
(bad)
inc
mov
mul
call
pop
stos
add
neg
aad
jns
(bad)
dec
mov
mov
in
(bad)
(bad)
mov
push
push
adc
sbb
sub
lods
pop
xchg
mov
lahf
push
pop
mov
inc
fs
adc
outs
or
sub
dec
push
dec
jmp
xlat
mov
lods
add
and
mov
push
call
add
cmp
adc
sbb
out
inc
rcl
call
(bad)
inc
adc
pop
xor
loopne
or
xor
(bad)
call
inc
scas
outs
int3
xor
fistp
stc
loop
inc
loope
clc
fucom
jae
rol
(bad)
jp
cmp
xchg
ss
pop
std
push
es
mov
retf
jnp
(bad)
movs
mov
lods
pop
inc
nop
(bad)
into
addr16
icebp
(bad)
(bad)
stc
xlat
jnp
xchg
mov
and
ret
add
jge
(bad)
(bad)
call
sbb
mov
repnz
mov
fisubr
dec
xor
pusha
mov
push
(bad)
(bad)
(bad)
(bad)
cmp
jge
or
inc
fld
pusha
add
popa
sub
shl
xlat
add
xchg
lods
inc
lock
xchg
ret
push
adc
sbb
xchg
clc
(bad)
(bad)
(bad)
fsubr
add
jg
fadd
shl
leave
xor
nop
cmps
jne
jmp
cwde
outs
scas
xor
out
and
call
mov
int3
xlat
cld
nop
add
jmp
and
repz
cld
jg
(bad)
xchg
sub
jne
pop
and
mov
cld
pop
jmp
xchg
mov
and
sbb
jbe
jns
dec
sub
(bad)
fisttp
cli
sub
scas
push
stos
daa
aad
mov
mov
shl
inc
mov
arpl
dec
out
xor
mov
nop
test
ins
or
xchg
and
xchg
outs
rol
mov
fidivr
jecxz
inc
call
jmp
mov
out
fidiv
jl
movs
push
and
mov
mov
jmp
pop
sub
daa
mov
jg
xor
cwde
xor
inc
lods
pop
lock
shl
int3
fldenv
stos
jnp
aaa
pop
dec
sahf
and
call
and
leave
xchg
aad
inc
and
xchg
and
int3
mov
mov
(bad)
inc
push
movs
neg
push
mov
cmp
fild
push
xor
push
dec
in
out
jge
add
clc
xchg
rcl
xchg
add
pop
dec
(bad)
(bad)
(bad)
(bad)
cmp
aam
ret
jecxz
mov
mov
mov
int
sbb
push
cwde
clc
mov
in
push
jmp
fsubr
(bad)
int3
int
push
push
mov
mov
loop
jmp
fild
xor
(bad)
(bad)
fbstp
fidivr
mov
or
push
stc
cmp
jmp
and
mov
cmp
(bad)
jmp
inc
bndstx
xor
jo
jp
jbe
aaa
sbb
cli
outs
clc
(bad)
(bad)
jmp
jne
icebp
test
dec
push
cmovne
inc
xor
fisub
(bad)
jmp
mov
adc
cmp
or
adc
cdq
stos
lahf
cmps
mov
(bad)
(bad)
(bad)
hlt
arpl
int
(bad)
cmp
dec
cmp
push
call
jnp
shr
sbb
cmc
xor
jnp
jmp
jp
cmp
sub
(bad)
(bad)
call
mov
push
mov
movs
scas
xchg
shl
pusha
sbb
dec
std
mov
mov
(bad)
(bad)
mov
(bad)
lods
fwait
ins
sbb
pop
xchg
add
add
and
sub
adc
mov
sbb
push
fucomip
call
icebp
cld
sub
imul
aad
aas
sub
add
enter
pop
pop
icebp
(bad)
inc
sahf
push
jns
pushf
out
fst
call
mov
mov
mov
addr16
call
je
and
stos
adc
sub
mov
(bad)
and
push
jge
or
bnd
outs
xor
dec
bound
fcomp
scas
das
loopne
test
add
ror
(bad)
mov
lock
cmp
xchg
fdivr
jmp
adc
(bad)
(bad)
dec
les
sbb
xchg
rcr
pop
rcr
cs
shr
(bad)
(bad)
fcmovnbe
jns
test
fadd
push
daa
xor
shl
xchg
out
leave
cmp
dec
xchg
iret
stos
add
pop
adc
loope
cs
neg
mov
dec
test
cld
or
dec
jle
dec
pusha
cs
jg
dec
cmps
sub
xor
sbb
jge
push
ret
push
(bad)
ds
xor
hlt
dec
(bad)
cs
je
and
not
cld
inc
in
jae
push
es
aaa
imul
enter
sub
movs
test
xor
push
int3
cmps
mov
jp
test
inc
call
push
stos
push
mov
mov
call
push
and
and
(bad)
jmp
xor
mov
movs
pop
push
idiv
nop
cmps
repz
xchg
cmp
(bad)
and
cmps
xor
mov
stos
xchg
push
inc
(bad)
(bad)
(bad)
(bad)
mov
icebp
ins
std
popa
(bad)
fld
out
xchg
dec
daa
sti
data16
les
pop
gs
(bad)
(bad)
(bad)
call
arpl
jae
test
and
retf
push
lahf
jno
stos
sti
loope
not
pop
(bad)
sub
lock
lahf
and
add
(bad)
(bad)
mov
mov
ins
fdiv
push
push
pop
ror
(bad)
(bad)
jmp
adc
push
(bad)
iret
push
js
and
in
cmp
iret
pop
xchg
cmc
mov
ficomp
or
mov
or
add
add
mov
out
jmp
clc
(bad)
jg
mov
jmp
cmp
aad
pop
imul
stc
(bad)
sti
mov
pop
arpl
jnp
or
loop
xchg
and
cmps
mov
sub
sub
dec
sub
mov
xchg
enter
sub
(bad)
inc
dec
adc
jns
push
cli
(bad)
dec
push
out
jmp
dec
imul
es
dec
pop
cmp
xor
push
sub
cmp
inc
and
in
pop
pop
xchg
lock
xor
les
fwait
test
jecxz
cmp
leave
test
or
jmp
(bad)
(bad)
inc
xchg
sub
mov
out
and
sbb
xlat
add
cmc
in
call
add
jmp
pop
pop
push
pusha
(bad)
sbb
fadd
iret
xchg
or
mov
jns
imul
cmps
ja
call
std
cld
inc
jne
arpl
enter
add
das
lods
xchg
retf
mov
aas
push
mov
push
jmp
sbb
mov
sub
xor
movs
inc
loope
outs
(bad)
(bad)
call
repz
icebp
sub
sbb
mov
scas
sbb
lock
repnz
adc
(bad)
mov
fcom
push
rcr
inc
fnstsw
test
(bad)
(bad)
jmp
pusha
fsubrp
jns
pop
mov
xor
cwde
lds
cdq
pop
xchg
xor
sbb
sar
(bad)
call
stc
sahf
adc
ins
pop
out
shr
mov
cmps
dec
call
xchg
(bad)
mov
xchg
shr
inc
mov
cmc
jmp
outs
pop
jge
cmc
mov
jp
jp
retf
test
mov
pop
xchg
cwde
mov
popf
push
cld
loopne
(bad)
jg
imul
add
popa
dec
punpcklbw
adc
add
mov
mov
sti
mov
dec
pop
mov
ret
call
cmp
repnz
pop
(bad)
inc
fwait
clc
retf
mov
jmp
jmp
daa
data16
jns
loope
(bad)
inc
mov
fisubr
sbb
mov
cli
(bad)
sub
(bad)
jmp
jae
adc
jo
test
aaa
sub
fisubr
into
adc
xor
dec
mov
aas
pop
movs
js
js
(bad)
(bad)
jg
jno
ror
push
jl
mov
data16
pop
in
scas
pop
in
int3
int
xlat
inc
mov
call
outs
mov
adc
mov
push
pop
lea
pop
pusha
nop
rcr
lock
cmps
inc
cmp
cmps
(bad)
dec
sub
sahf
sahf
loopne
mov
dec
or
outs
cld
scas
repnz
retf
mov
inc
mov
jmp
jmp
jg
sub
rcr
daa
aas
cmc
shr
or
pop
mov
nop
add
js
add
push
movs
test
sub
cmp
rcl
xchg
mov
std
or
clc
cmp
call
fstp
call
pop
popa
and
adc
sub
imul
(bad)
(bad)
jmp
pop
loopne
pop
push
inc
push
int3
outs
cs
sbb
dec
adc
sbb
jo
(bad)
(bad)
push
jmp
cs
xchg
retf
dec
cmp
inc
xlat
call
push
lock
pop
inc
ja
(bad)
(bad)
inc
or
out
cmp
push
sbb
or
jmp
mov
(bad)
(bad)
jg
mov
bound
xchg
out
or
mov
push
adc
(bad)
(bad)
(bad)
(bad)
inc
cmp
cmp
push
add
rcl
adc
pop
loopne
repnz
arpl
in
(bad)
push
cld
jg
mov
cmp
pop
push
mov
ins
aam
ror
nop
int
stos
pop
cs
mov
aas
cwde
fst
stos
or
rol
cmp
push
sbb
add
xor
in
and
shl
sar
retf
aaa
shr
rcl
adc
stc
arpl
cld
push
cmps
shr
aaa
add
mov
iret
jne
fyl2x
(bad)
(bad)
push
(bad)
popf
push
int
scas
(bad)
mov
out
sub
in
jg
outs
mov
xchg
pop
add
ins
hlt
(bad)
pop
cmp
cli
in
cmp
movs
adc
cmp
push
or
cld
inc
mov
pop
clc
sub
cwde
repz
icebp
(bad)
xor
add
addr16
cld
or
(bad)
sbb
dec
gs
aaa
mov
dec
cmp
jmp
jne
sbb
out
(bad)
mov
push
retf
xor
jno
and
sbb
in
inc
jl
loopne
inc
clc
call
add
or
mov
xor
push
scas
mov
cmp
arpl
mov
mov
adc
pop
mov
movs
and
(bad)
cmp
mov
mov
fcomp
push
enter
jg
sub
add
adc
in
xchg
and
and
push
movs
(bad)
retf
cmps
dec
and
pop
push
jbe
sub
dec
xchg
or
dec
nop
aam
int
push
push
dec
sar
mov
mov
jae
mov
mov
and
repz
pop
sub
loop
pop
push
repnz
jb
lahf
(bad)
jg
icebp
jle
mov
test
es
jl
popf
retf
jl
push
jg
fcomip
movs
cmps
aas
loope
mov
or
dec
repnz
inc
nop
mov
call
cmp
test
ins
dec
pop
cmp
jl
jb
pop
adc
inc
ja
(bad)
(bad)
(bad)
jmp
iret
mov
push
cmps
or
jmp
(bad)
dec
add
imul
add
cmp
dec
outs
stos
xacquire
loopne
mov
inc
popa
xchg
stos
jmp
mov
inc
push
clc
mov
mov
xor
dec
push
mov
inc
mov
(bad)
or
or
imul
or
(bad)
(bad)
(bad)
test
stos
call
sbb
daa
mov
aaa
dec
cli
or
add
call
dec
dec
cmp
xchg
(bad)
(bad)
jg
sub
push
aam
xor
jge
mov
test
cmp
stos
xor
adc
cmp
(bad)
hlt
mov
les
lods
js
es
test
int3
fcom
pop
test
cmp
cdq
(bad)
jg
cmps
retf
jecxz
cs
int
cwde
add
mov
clc
pop
and
in
(bad)
(bad)
(bad)
(bad)
call
xchg
push
enter
test
or
push
push
ds
xor
std
add
jmp
shl
(bad)
js
sbb
push
cs
jno
sub
mov
xor
retf
xchg
dec
xor
(bad)
(bad)
(bad)
in
xchg
jno
pop
dec
repz
jo
fs
je
jae
ins
mov
pop
cmp
pushf
xlat
bound
jnp
mov
push
test
mov
(bad)
(bad)
(bad)
jge
add
fldenv
out
xor
push
mov
les
push
(bad)
(bad)
inc
sbb
cmp
aad
xor
pop
mov
in
mov
(bad)
push
jg
sbb
sti
inc
xchg
retf
sti
sbb
cwde
adc
lock
clc
es
ror
fwait
shr
sub
rcl
nop
sub
popf
fist
inc
cmp
inc
or
jo
add
inc
sbb
aad
adc
add
into
je
(bad)
jmp
cmps
repz
imul
mov
shl
sbb
mov
mov
dec
xchg
xchg
inc
outs
cmps
mov
(bad)
(bad)
(bad)
jmp
pop
jle
in
lods
dec
std
aaa
sub
push
bound
xchg
aas
in
inc
es
aad
repnz
ins
inc
dec
jmp
cli
cmp
cli
fs
push
xchg
mov
and
mov
inc
xor
(bad)
(bad)
jg
or
imul
cmps
jge
jae
out
mov
xchg
sbb
xor
jg
stos
xchg
loopne
mov
cmps
jne
pop
outs
dec
ret
xchg
pop
mov
rol
jmp
mov
popa
jg
nop
sahf
xor
mov
(bad)
jmp
pop
inc
sti
pop
into
adc
mov
xlat
fisubr
scas
mov
jmp
(bad)
mov
inc
push
and
pop
hlt
and
call
cs
inc
sub
push
lock
repz
adc
popf
leave
lds
std
cld
xor
cmp
sahf
(bad)
rcl
push
call
jecxz
jmp
js
lods
add
push
loop
push
push
ins
jne
mov
pop
sar
icebp
or
pop
push
push
and
(bad)
jmp
enter
in
pushf
in
dec
inc
mov
mov
xchg
loop
int
out
mov
je
mov
imul
mov
dec
push
in
cli
das
cli
push
add
cmp
xchg
mov
xor
xor
jmp
sbb
add
arpl
push
or
inc
frstor
sbb
dec
adc
sbb
jmp
xlat
cs
sahf
(bad)
and
out
sbb
or
sbb
(bad)
(bad)
call
js
inc
mov
mov
pop
mov
stos
or
xchg
sub
fbld
repnz
sbb
mov
jp
sub
or
ds
daa
sbb
push
(bad)
(bad)
push
mov
mov
ins
mov
dec
bound
kxorb
cmp
cmps
pop
in
nop
fisttp
adc
pop
mov
dec
add
(bad)
call
in
add
mov
adc
or
aas
ror
mov
int3
pop
js
(bad)
(bad)
push
mov
(bad)
into
out
mov
lahf
mov
mov
push
or
adc
or
push
and
(bad)
sti
mov
lds
call
shr
imul
lock
fdiv
fisttp
pop
mul
popf
adc
xchg
add
(bad)
call
ret
sbb
data16
std
cmps
ret
ror
outs
or
dec
cmc
imul
and
push
adc
(bad)
mov
fsubr
retf
mov
jge
mov
test
pop
xor
fcomip
(bad)
jmp
div
cwde
jmp
popf
inc
fild
ss
jne
inc
xor
and
jbe
(bad)
jmp
clc
pop
gs
hlt
pop
dec
sbb
adc
ror
sbb
pushf
jmp
inc
repnz
clc
inc
aaa
out
push
jnp
call
dec
sahf
cld
stc
jecxz
(bad)
mov
mul
dec
ins
push
sub
lods
es
jnp
(bad)
(bad)
(bad)
cmp
fwait
jg
popa
(bad)
jmp
inc
sbb
ud1
xchg
retf
pusha
jne
inc
sar
(bad)
push
out
jp
push
fwait
pop
or
pop
fwait
ror
js
fild
xor
lock
mul
inc
in
add
ds
mov
sbb
data16
mov
adc
cmps
test
jp
add
cli
pop
(bad)
fmul
dec
aam
cwde
dec
pop
pop
test
(bad)
(bad)
(bad)
mov
ret
ins
push
sbb
jmp
jg
jmp
icebp
(bad)
call
leave
xchg
inc
mov
and
pop
xor
or
push
retf
inc
(bad)
mov
jl
fild
fadd
sbb
mov
iret
out
push
dec
push
inc
sbb
rcr
mov
call
outs
adc
ror
loopne
dec
jns
lock
outs
iret
push
call
rcl
rcr
jmp
ss
push
add
xchg
push
movs
popa
es
jnp
sub
mov
inc
sti
fwait
out
sar
cmp
daa
(bad)
inc
adc
add
cld
inc
xchg
lods
das
mov
in
xchg
sar
(bad)
(bad)
push
pop
daa
mov
sub
sbb
dec
push
scas
xor
aam
mov
sub
aam
(bad)
(bad)
xchg
or
cmc
push
cld
sub
push
mov
sbb
loope
(bad)
jg
int3
pop
les
xchg
sahf
mov
pop
or
sbb
(bad)
pop
movs
(bad)
call
xchg
and
ret
sbb
push
inc
stc
call
clc
mov
push
call
cmp
(bad)
aam
inc
or
sub
imul
(bad)
dec
out
iret
cli
cmps
(bad)
in
inc
xor
scas
pop
popf
std
xchg
jp
call
jmp
loope
mov
sbb
jno
mov
cdq
push
scas
call
cmp
xor
jb
rcr
dec
jecxz
mov
sub
call
jbe
in
push
imul
sbb
cmp
ror
arpl
pushf
mov
ret
or
scas
mov
faddp
xor
inc
pop
in
jle
or
jno
pushf
ficom
mov
bound
pop
cwde
call
clc
aaa
rcr
cmp
mov
mov
push
xor
into
dec
popf
js
sub
and
stos
or
call
out
push
mov
mov
pop
add
mov
and
cmc
clc
mov
add
cmp
outs
clc
imul
jmp
jo
es
push
cdq
inc
cld
xchg
leave
mov
hlt
adc
gs
sbb
loope
test
jp
xchg
loop
push
cld
lods
jne
loop
movzx
fld
in
loopne
(bad)
mov
pop
xlat
pop
jno
cwde
out
daa
mov
pop
pushf
jg
mov
and
(bad)
mov
leave
mov
xchg
adc
gs
aaa
jecxz
mov
inc
data16
out
xor
inc
xchg
popa
inc
and
inc
pop
lahf
jmp
cli
(bad)
inc
jg
xchg
pop
sub
sbb
xchg
daa
mov
and
mov
add
scas
out
ja
clc
mov
fs
and
sti
cmp
mov
add
jge
add
push
mov
dec
movs
push
sahf
jg
call
inc
out
jle
idiv
add
sbb
nop
jae
mov
fwait
(bad)
(bad)
(bad)
std
inc
mov
jae
sbb
dec
mov
jne
out
sub
mov
inc
int
iret
repnz
fsub
sub
or
jae
les
sbb
xchg
clc
fcomip
pop
mov
mov
sub
fsub
dec
fcomp
test
pop
sbb
ins
bnd
fsubr
mov
call
scas
sub
cmp
jl
sbb
add
(bad)
(bad)
jmp
pextrw
inc
jge
(bad)
mov
jo
(bad)
jmp
mov
fistp
in
xchg
clc
jmp
push
imul
xor
and
(bad)
fnstsw
and
push
xchg
and
or
mov
inc
(bad)
call
retf
in
and
mov
outs
cs
push
jns
std
(bad)
push
pop
cwde
inc
aam
sahf
inc
sahf
fsub
jmp
lods
sub
outs
add
sub
mov
(bad)
(bad)
call
fwait
lea
xchg
cmc
push
test
int3
call
jp
add
xchg
mov
push
cmp
jecxz
aaa
sbb
and
adc
(bad)
xor
lahf
push
nop
jb
add
call
cmp
mov
xor
sub
imul
pop
aam
ds
dec
sar
sub
call
push
adc
dec
ss
pushf
mov
(bad)
fcomip
fild
ret
xor
adc
rcl
loopne
(bad)
mov
push
mov
jecxz
inc
popf
pusha
popf
mov
dec
aam
sub
lods
arpl
shr
push
test
mov
lods
(bad)
(bad)
(bad)
(bad)
cmp
xchg
lea
aas
neg
or
add
xlat
adc
adc
or
or
add
adc
mov
and
cs
arpl
fwait
push
test
or
push
ds
jge
pusha
dec
das
mov
cmp
int3
rol
test
(bad)
(bad)
jmp
in
inc
push
inc
test
pop
ret
out
test
adc
inc
std
(bad)
inc
pop
ins
pop
stos
stc
sub
and
das
fidiv
popa
hlt
pop
and
push
(bad)
(bad)
mov
cmc
(bad)
adc
mov
test
sbb
mov
cmp
scas
(bad)
(bad)
(bad)
(bad)
fsubr
es
scas
xchg
gs
imul
pmaxsw
push
cmp
hlt
sub
xchg
dec
das
add
add
jo
xor
mov
call
xor
not
mov
les
call
ret
mov
(bad)
or
xlat
sbb
jno
mov
mov
test
clc
inc
sbb
pop
pop
fdivr
aas
fadd
sahf
ja
adc
fcomp
mov
jmp
shr
pop
imul
js
in
rcl
dec
dec
sbb
fcomp
inc
lock
mov
mov
icebp
mov
inc
mov
xchg
imul
mov
inc
xchg
cli
inc
(bad)
cmp
fcomip
pop
clc
outs
mov
(bad)
dec
mov
loope
loop
dec
into
cmp
(bad)
(bad)
sar
test
cmps
(bad)
fidivr
xchg
test
xor
loopne
fmulp
js
(bad)
(bad)
jmp
pop
sub
nop
jmp
neg
jns
pop
sahf
retf
popf
inc
stos
jge
shl
mov
les
les
mov
sbb
mov
scas
add
fist
movs
inc
sub
je
jmp
fs
cli
(bad)
call
inc
out
in
lahf
ficom
sbb
cmp
or
sub
jmp
(bad)
(bad)
(bad)
in
jmp
add
sbb
fiadd
mov
not
mov
sahf
ins
add
clc
jmp
scas
les
sbb
or
cmp
lock
dec
mov
push
cli
jmp
aad
cdq
repz
jbe
or
movzx
aam
adc
pop
mov
das
retf
and
(bad)
(bad)
inc
ss
mov
mul
jl
xlat
arpl
add
test
jmp
aas
out
retf
jno
push
mov
in
push
iret
mov
(bad)
fcomip
das
ins
loope
dec
mov
cwde
pop
test
jno
cli
jnp
jecxz
cmp
xor
xor
or
imul
int
ret
jl
leave
lahf
jecxz
(bad)
(bad)
jmp
pushf
push
push
or
mov
pop
dec
xchg
pop
pop
iret
aaa
seta
(bad)
ds
add
sub
mov
pop
les
dec
inc
mov
clc
rcr
or
adc
sbb
cmps
rcr
xor
adc
call
mov
push
mov
mov
mov
mov
es
sub
imul
push
add
inc
push
(bad)
(bad)
(bad)
jmp
push
ret
test
inc
add
xor
cmc
add
push
adc
dec
shl
out
mov
out
xchg
ret
adc
(bad)
(bad)
jmp
jbe
js
or
out
add
inc
and
mov
or
ret
stos
jmp
push
and
cld
dec
nop
mov
mov
xlat
(bad)
mov
and
dec
mov
mov
sbb
pop
pusha
xchg
push
in
add
(bad)
inc
jnp
stos
out
loop
cmp
aaa
nop
leave
cmp
mov
sub
lock
repnz
jnp
retf
add
xchg
and
pop
lods
jmp
or
inc
mov
jge
ficom
(bad)
ja
dec
add
fcompp
xchg
in
inc
adc
call
cmp
ins
jmp
in
pop
(bad)
(bad)
out
cli
jo
jbe
jo
retf
sbb
jmp
icebp
leave
xor
sub
xchg
jl
gs
inc
and
(bad)
aas
adc
sete
pop
shr
adc
sub
out
iret
mov
xlat
retf
fsubr
daa
sub
dec
mov
into
add
and
pop
ret
ror
fwait
pop
pushf
rcl
xchg
(bad)
mov
mov
or
inc
add
mov
xor
jmp
out
dec
scas
cmp
jl
rcl
mov
xchg
xor
into
cs
clc
inc
jmp
retf
dec
inc
sbb
call
xor
xchg
or
test
sahf
push
mov
ja
pop
sub
repz
mov
sbb
sbb
(bad)
(bad)
call
call
push
push
std
mov
sar
cs
mov
call
ret
push
mov
pop
sub
push
test
mov
stc
cmp
pusha
call
fistp
sub
repnz
movs
jns
lea
nop
(bad)
mov
test
lea
fcom
add
xchg
(bad)
jmp
push
cmp
xor
jae
inc
iret
(bad)
leave
xor
sar
dec
cdq
ret
jp
(bad)
enter
lahf
xor
das
dec
pop
mov
add
retf
pushf
jmp
fild
cld
(bad)
dec
adc
sbb
inc
mov
mov
xchg
adc
jg
or
mov
pop
pop
fsub
std
stos
scas
add
das
loop
inc
test
sbb
sub
cld
sbb
popf
not
(bad)
sti
ret
gs
jg
(bad)
sub
xchg
dec
xchg
cmps
dec
movs
cmp
mov
pop
push
in
xor
jmp
inc
hlt
mul
jb
jae
ror
call
popa
and
adc
nop
retf
jp
je
pop
cld
(bad)
fsubr
or
pop
pushf
mov
cld
push
and
pushf
pop
jmp
mov
adc
ror
cmp
call
mov
or
fisubr
stos
push
inc
xchg
dec
adc
push
pop
call
adc
data16
imul
fcomip
jmp
pop
cmp
push
aaa
add
add
movs
test
add
adc
jle
movs
(bad)
fcomp
jmp
pop
aad
neg
cmp
mov
(bad)
repz
dec
mov
(bad)
inc
add
pop
in
fstp
fisttp
push
pop
sahf
ds
(bad)
(bad)
(bad)
jmp
scas
or
jnp
fst
pop
add
scas
fbld
popa
and
mov
dec
ja
shr
jne
jmp
call
mov
lods
mov
test
cld
shr
stos
fld
jmp
stos
dec
push
sub
das
ins
cmp
and
test
in
mov
and
data16
sub
(bad)
jmp
pop
mov
mov
mov
add
movs
rcl
in
xor
mov
retf
loop
push
or
enter
jmp
jmp
ss
outs
add
add
xor
movs
xor
(bad)
(bad)
dec
js
bound
aam
and
pop
dec
pushf
cmp
(bad)
jmp
push
sub
mov
mov
mov
pop
jmp
mov
adc
iret
popf
and
lods
cmc
fimul
push
mov
cmp
jo
pop
sub
jmp
xor
sbb
add
sbb
push
mov
cmp
add
movs
imul
gs
push
(bad)
jmp
clc
add
fild
fdiv
dec
addr16
ja
pop
cmp
push
xchg
(bad)
jmp
hlt
cmp
add
mov
leave
adc
sbb
adc
(bad)
(bad)
push
aad
or
mov
scas
jbe
inc
test
mov
in
xchg
(bad)
call
pop
and
inc
shr
pushf
adc
into
scas
ds
(bad)
jmp
lahf
mov
xchg
outs
mov
xor
xor
mov
sbb
fdivp
jmp
and
xchg
addr16
(bad)
cwde
xchg
mov
out
mov
inc
loop
cwde
push
add
add
xor
cmp
je
(bad)
(bad)
call
push
out
out
sub
and
imul
lea
sub
sub
jg
mov
repz
inc
and
lods
mov
add
call
call
dec
ror
push
inc
getsec
pop
mov
pop
outs
xchg
sbb
test
(bad)
(bad)
(bad)
call
data16
mov
dec
stc
xor
sbb
fcmovnb
push
cmps
test
icebp
(bad)
(bad)
call
addr16
ret
dec
dec
shr
xchg
sub
popf
xor
pop
bound
xor
call
dec
into
sub
loopne
into
adc
fdivr
mov
aas
push
sbb
gs
adc
dec
inc
(bad)
lds
dec
frstor
lock
pop
imul
out
sub
dec
iret
adc
xor
mov
stos
test
pusha
jnp
mov
lock
mov
pushf
or
push
add
daa
mov
ficomp
or
in
in
(bad)
mov
jbe
data16
jp
xchg
sbb
mov
aam
test
push
cld
dec
adc
xchg
jl
inc
pop
lock
(bad)
js
add
out
xchg
mov
pushf
or
aam
jo
adc
int
jmp
lock
out
add
dec
jns
mov
xor
and
loopne
jl
mov
pop
mov
dec
mov
jns
fstp
je
fs
lods
xchg
dec
mov
pop
dec
into
and
adc
dec
sbb
push
and
out
inc
(bad)
mov
sar
test
addr16
sub
add
bound
(bad)
ret
call
jb
and
daa
mov
pushaw
mov
xlat
add
mov
pop
(bad)
aam
out
xor
cli
jmp
call
or
push
repnz
imul
adc
dec
xchg
fwait
jle
push
pop
lock
dec
pop
call
add
je
dec
jmp
add
sbb
sbb
pop
pop
mov
ins
fidiv
cmc
repnz
leave
jmp
ror
neg
out
sub
pusha
mov
dec
push
loop
sub
stos
xor
loope
(bad)
call
mov
pusha
dec
fstp
in
test
test
sub
cmp
inc
and
(bad)
(bad)
mov
jb
add
lea
xor
cmc
mov
dec
div
sub
iret
cld
sbb
call
add
jge
mov
cmp
cs
xor
xor
pop
cmp
out
xor
xor
call
or
push
mov
lahf
idiv
jg
push
mov
pop
or
push
push
daa
adc
dec
adc
adc
or
(bad)
(bad)
(bad)
(bad)
jg
repnz
out
dec
int
mov
mov
push
outs
gs
leave
ins
push
test
sub
loope
inc
lahf
mov
(bad)
inc
ror
jbe
imul
dec
lock
jl
xchg
cmp
(bad)
(bad)
(bad)
(bad)
cld
call
inc
xchg
dec
sub
out
iret
test
nop
aad
xchg
outs
imul
(bad)
ss
dec
int3
out
stc
sub
outs
mov
lock
or
adc
ins
pop
in
xchg
(bad)
mov
mov
sbb
push
outs
les
xor
(bad)
sti
sbb
jns
(bad)
(bad)
push
leave
clc
lahf
jmp
mov
xor
sub
test
cmp
and
stos
(bad)
(bad)
call
push
retf
xchg
xchg
or
mov
sub
rcl
or
cmp
(bad)
aas
push
movs
mov
jle
movs
pop
sti
dec
cwde
and
sbb
(bad)
(bad)
(bad)
out
cmp
ds
sub
cli
xor
inc
retf
xchg
out
pusha
aaa
in
sbb
(bad)
(bad)
(bad)
call
mov
test
cdq
pusha
in
stos
xchg
(bad)
les
jmp
jbe
ret
(bad)
dec
ds
jl
jae
in
add
push
fisubr
leave
lods
push
in
(bad)
(bad)
(bad)
std
add
lds
lods
sub
inc
push
mov
lea
pop
pop
ds
sbb
mov
cld
push
lock
adc
xlat
cwde
sub
idiv
dec
out
jo
cmps
xchg
pop
(bad)
(bad)
(bad)
(bad)
call
add
jnp
sub
nop
ins
mov
outs
xchg
sbb
das
pop
add
data16
movs
hlt
mov
int
test
cdq
xchg
mov
pop
sbb
jle
fcom
mov
dec
pushf
(bad)
adc
(bad)
xlat
clc
(bad)
sti
xchg
pop
dec
or
rol
lods
jno
into
push
loop
js
cs
push
lock
jns
mov
in
xchg
inc
push
jg
fmul
fcomp
cmp
push
push
sahf
pushf
jae
sar
jmp
or
stos
ja
(bad)
retf
retf
push
lds
dec
lock
aam
or
nop
push
int3
pmulhw
push
ret
pop
std
pop
stos
inc
hlt
sbb
cld
fidivr
fldenv
imul
push
xor
jg
jg
pop
cmp
jle
dec
lds
(bad)
test
inc
cmp
and
xlat
mov
(bad)
dec
les
add
mov
mov
push
mov
mov
out
adc
dec
mov
dec
out
ins
push
pop
outs
or
add
das
clc
out
add
(bad)
(bad)
jmp
je
ja
shl
sahf
mov
push
push
push
sbb
cdq
clc
je
mov
outs
sub
test
je
inc
js
dec
push
call
inc
mov
push
push
lea
and
std
jecxz
cdq
lods
outs
gs
inc
popa
adc
aaa
xor
stos
mov
add
(bad)
(bad)
fisttp
adc
(bad)
xor
pop
out
mov
sub
pop
(bad)
iret
xchg
sub
lods
pop
or
xor
mov
(bad)
push
xor
cmp
or
mov
dec
stc
in
or
icebp
and
sub
push
and
aas
push
shr
lods
pop
mov
inc
jg
sbb
call
cwde
call
(bad)
inc
sar
pop
(bad)
xchg
pop
add
fisub
mov
(bad)
(bad)
(bad)
jmp
aam
or
popf
call
adc
sub
sti
push
mov
sub
ja
rcl
movs
or
pop
adc
sbb
aad
dec
sub
sub
adc
call
(bad)
out
jb
or
sbb
mov
dec
adc
inc
(bad)
(bad)
call
pop
test
ins
movs
xchg
add
test
inc
inc
aaa
imul
mov
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
imul
popa
pop
inc
pop
and
das
mov
(bad)
lods
fs
cmp
jl
mov
lock
and
pop
jp
in
in
push
xor
icebp
fistp
leave
add
sub
mov
mov
loopne
push
jl
js
xor
dec
adc
xor
or
dec
mov
mov
mov
xchg
test
jmp
cmp
idiv
(bad)
out
adc
mov
sti
sti
xchg
jbe
sbb
inc
movs
or
or
pusha
stos
inc
call
fcmovb
movs
push
scas
hlt
and
(bad)
(bad)
(bad)
dec
dec
pushf
inc
xchg
dec
ret
or
outs
add
or
lea
int
(bad)
(bad)
(bad)
jmp
and
cdq
inc
loopne
mov
sub
sar
and
add
test
fcomip
push
imul
or
and
int3
add
and
scas
movs
test
test
mov
test
cmps
pop
push
or
xor
(bad)
(bad)
(bad)
jmp
imul
jmp
sub
jmp
mov
mov
xor
leave
adc
dec
loope
jmp
fbstp
xchg
ins
push
mov
dec
(bad)
(bad)
inc
into
dec
mov
push
fucomp
aam
movmskps
and
es
xlat
imul
or
repz
dec
xchg
pop
push
adc
xor
or
(bad)
clc
add
or
cmp
dec
push
push
or
in
std
xchg
pop
jg
sub
fidivr
pushf
mov
jl
mov
scas
xchg
mov
cmp
mov
dec
(bad)
(bad)
(bad)
(bad)
push
pop
adc
inc
fild
into
xor
cmp
inc
ja
inc
add
inc
mov
jns
mov
pop
jmp
pop
mov
dec
jg
call
mov
mov
setge
inc
icebp
mov
gs
and
mov
inc
popf
outs
xchg
jmp
gs
dec
mov
add
mov
dec
mov
leave
cmp
mov
(bad)
(bad)
mov
out
cmp
test
ja
sbb
pop
lea
and
dec
jmp
rcr
frstor
and
outs
loope
adc
stos
dec
loope
out
push
push
ficomp
mov
outs
xor
(bad)
call
cld
cmp
adc
cmp
jmp
add
or
jnp
inc
daa
mov
je
(bad)
(bad)
push
xlat
cld
test
lods
inc
jl
std
out
cld
xor
js
int3
dec
out
retf
ja
xor
aam
(bad)
jg
stos
pop
stos
sub
and
mov
and
ret
jge
vminsd
ja
shl
fidivr
popa
add
mov
mov
xor
stos
dec
movs
mov
std
jl
push
sar
fisttp
sar
fisub
daa
aad
jo
daa
sub
dec
pop
shr
rol
jl
ror
(bad)
outs
clc
and
inc
call
(bad)
daa
call
(bad)
call
sub
cmp
fild
(bad)
jmp
rcr
sbb
xchg
lahf
and
dec
jl
push
dec
jmp
loopne
jo
add
stos
scas
jnp
cmp
jb
cmp
cmps
adc
dec
push
xor
inc
jp
mov
cmp
sar
cs
dec
nop
retf
xor
inc
pushf
jg
(bad)
inc
pusha
xchg
in
dec
xchg
retf
push
dec
fdivr
pop
repnz
and
femms
(bad)
mov
push
into
aam
xchg
lods
hlt
aaa
push
dec
icebp
movs
icebp
in
pop
loopne
test
push
inc
js
in
fs
jmp
ins
or
repnz
test
xor
scas
(bad)
(bad)
(bad)
call
loopne
jg
jns
lahf
mul
dec
mov
sti
pop
aam
rcr
mov
jae
dec
(bad)
dec
aaa
out
cmc
jb
jnp
(bad)
jbe
pop
imul
scas
dec
cld
jmp
and
sbb
out
js
xchg
(bad)
in
inc
fs
jle
es
(bad)
inc
int3
sub
xchg
and
xchg
sti
ins
shr
hlt
inc
inc
mov
into
pop
hlt
jmp
retf
add
adc
into
xor
jmp
mov
ss
iret
aaa
fdiv
push
adc
and
popf
es
cmp
cmp
cmp
push
sub
sar
sahf
jb
xchg
sar
pop
out
cmp
cmp
aad
cld
dec
dec
call
sub
xor
or
push
cmps
dec
call
mov
into
xor
xor
xor
jmp
xchg
xor
xor
xor
sbb
xor
jmp
inc
cmp
(bad)
(bad)
(bad)
jmp
add
and
cmp
dec
cmp
cmp
jnp
xchg
fwait
cmp
cmp
cmp
cmp
movs
jmp
cmp
cmp
cmp
cmp
into
xor
cmp
jmp
cmp
bound
xchg
mov
jg
and
pop
iret
pop
call
sar
(bad)
jle
ds
aas
dec
aas
retf
(bad)
jmp
clc
aas
out
add
fbld
xor
xor
xor
xor
xor
(bad)
inc
mov
hlt
xor
xor
xor
xor
xor
xor
xor
xor
ins
jmp
xor
(bad)
cmp
push
cmp
(bad)
cmp
xor
mov
es
frstor
(bad)
push
lahf
sub
xor
xor
cmp
push
xor
mov
mov
sti
push
div
sti
xor
xor
mov
popf
xor
(bad)
lahf
xchg
push
xchg
aaa
cmps
aaa
mov
dec
cmp
leave
xchg
sahf
jmp
cwde
xor
xor
xor
sub
adc
cmp
clc
scas
cmp
cmp
cmp
call
(bad)
cmp
sub
or
ds
ds
ds
aas
popf
aas
xlat
aas
loopne
rcl
or
pusha
xchg
mov
gs
call
imul
shl
xor
cmp
mov
out
xor
xor
xor
jmp
mov
js
mov
std
push
mov
xor
imul
xor
(bad)
pop
jne
xor
cmps
jl
mov
(bad)
aaa
shl
loop
clc
aaa
sub
mov
cmp
pop
mov
cmp
cmp
push
cmp
test
sbb
or
cmp
icebp
(bad)
(bad)
cmp
cwde
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
cmp
(bad)
(bad)
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cli
jg
mov
mov
sar
cmp
scas
ins
inc
cmp
pop
ds
ds
clc
push
ds
inc
inc
xor
das
xor
fs
inc
mov
mov
dec
jmp
sub
sahf
push
xor
xor
gs
xor
scas
aas
cld
push
push
or
sbb
loop
aaa
pop
cmp
frstor
test
add
push
paddd
outs
sbb
add
minps
mov
scas
idiv
push
xor
jns
sar
lock
cmp
dec
div
cmp
rol
mov
push
xor
xor
xor
xor
inc
xor
dec
jmp
fwait
xor
xor
add
mov
xor
add
push
jns
retf
fidiv
fbstp
and
push
xchg
add
cwde
call
shr
xor
push
dec
idiv
shl
mov
xor
xor
xor
xor
xor
mov
xchg
cmp
push
dec
inc
add
je
cmp
fdiv
push
(bad)
push
or
cmp
cmp
cmp
cmp
cmp
cmp
lods
sub
aas
sub
aas
push
shl
into
call
sbb
xor
xor
xor
xor
xor
xor
sub
mov
jp
xchg
rcl
data16
xor
imul
call
ins
xor
mov
ret
xor
clc
(bad)
fdiv
push
and
mov
les
add
aaa
or
or
adc
ss
cmp
pop
lock
aaa
push
aaa
movs
aaa
mov
inc
cmp
cmp
jmp
inc
xchg
jne
jp
dec
dec
push
lds
jmp
cmp
cmp
cmp
jmp
cmp
les
shl
mov
sub
call
into
mov
les
inc
ds
jbe
into
cmp
aas
and
fild
push
aas
leave
aas
adc
cmps
xor
fnsave
adc
mov
js
mov
push
jp
call
jmp
or
xor
xor
xor
xor
xor
xor
cmp
mov
mov
movs
sub
xor
xchg
shl
xlat
xchg
pop
mov
aaa
imul
aaa
or
push
or
fnstcw
aas
cmp
cmp
jbe
in
cmp
mov
cmp
cmp
hlt
jmp
cmp
cdq
cmp
xchg
ds
ds
clc
call
pop
aas
pop
aas
pushf
aas
aam
fistp
repz
clc
aas
pop
or
xchg
pop
jp
call
ss
push
sbb
cmp
xor
or
xor
inc
xor
xor
xor
xor
xor
xor
pop
inc
pop
fwait
shl
out
fcomip
sub
dec
ss
jp
xor
adc
sub
repnz
aaa
int
xchg
mov
dec
cmp
cmps
cmp
ja
push
cli
push
sbb
pop
cmp
cmp
(bad)
mov
cmp
cmp
(bad)
dec
sbb
pop
imul
fdivr
(bad)
mov
not
cmp
cmp
cmp
lea
mov
jmp
adc
mov
mov
or
clc
out
ds
ds
ret
and
div
add
xor
call
cld
(bad)
(bad)
and
mov
out
xor
xor
xor
mov
xor
out
push
adc
xor
nop
xor
ss
or
push
out
cs
fild
dec
aaa
movs
aaa
in
aaa
xor
sbb
call
cmp
cmp
cmp
cmp
cmp
cmp
call
sar
cmp
(bad)
cmp
nop
test
cld
push
add
ds
jp
mov
adc
xor
and
bound
fwait
xor
cs
or
cld
push
mov
shl
xor
jnp
fdiv
sbb
call
in
xor
push
ss
ss
(bad)
out
dec
call
aaa
inc
jb
mov
ret
cmp
cmp
pop
jge
adc
cmp
cmp
cmp
mov
cli
fstp
xor
cmp
cmp
enter
inc
cmp
inc
ds
ds
mov
inc
aas
inc
ror
test
cmp
xor
pop
mov
stos
xor
inc
xor
push
fnstcw
cli
outs
js
xor
xor
xor
pop
xor
xor
pop
lock
xor
xor
mov
xor
jb
xchg
add
xor
fist
test
dec
sbb
call
shl
push
push
mov
test
cli
inc
fidivr
call
cmp
cmp
push
cmp
(bad)
fild
cmp
cmp
inc
ds
ds
ds
mov
ds
ds
ds
pop
hlt
pusha
ds
je
js
jl
xchg
mov
call
add
xor
call
dec
fcomip
leave
xor
xor
xor
xor
jecxz
call
inc
aas
test
ss
std
aaa
mov
add
xor
cmp
out
cmp
cmp
push
cmp
mov
cmp
cmp
xchg
(bad)
imul
stos
add
jl
xor
mov
inc
xor
xchg
xor
push
add
xor
xor
cmps
add
jle
rol
cdq
ss
pop
(bad)
push
mov
(bad)
jg
sub
lahf
cmp
cmp
cmp
(bad)
(bad)
push
jl
cmp
cli
cmp
cmp
cmp
cmp
cmp
int3
cmp
and
lods
(bad)
sub
xchg
aas
call
idiv
mov
ficom
xor
and
sub
ja
call
jb
mov
xor
xor
xor
xor
dec
pop
push
mov
inc
jmp
sbb
cmp
retf
dec
cmps
or
lods
cmp
fld
cmp
xchg
cmp
cmp
mov
inc
lods
std
bswap
sub
cs
jbe
jnp
sub
dec
call
xor
xor
xor
dec
xor
and
push
xor
or
aas
cli
loop
xchg
add
push
ss
bound
pop
aaa
cmp
sbb
pusha
pop
pop
add
inc
add
jne
popf
imul
xor
jl
cmp
mov
mov
sbb
rcr
adc
jg
ja
xchg
xor
xor
xor
xor
xor
bt
ss
movs
ss
das
scas
lock
sub
aaa
inc
push
fs
imul
or
stos
aaa
jmp
cmp
imul
pop
stos
mov
push
xor
hlt
sub
fbstp
hlt
cmp
cmp
mov
inc
pop
mov
ds
mov
aas
sbb
out
aas
enter
mov
mov
jmp
out
and
add
and
xor
mov
xor
xor
xor
xor
xor
in
jmp
mov
xor
ss
jb
call
adc
mov
aaa
sbb
inc
cmp
fwait
shr
arpl
call
loopne
mov
cmp
sub
dec
out
stos
cmp
cmp
cmp
cmp
add
cmp
jg
mov
fnstcw
fidivr
fs
push
jle
mov
aas
sahf
aas
mov
outs
mov
fwait
loopne
dec
(bad)
and
sub
popa
xor
jmp
xor
jecxz
call
xor
call
out
xor
xor
pop
mov
xor
lods
les
jne
pop
loop
sub
xor
jg
xchg
sahf
adc
cmp
push
cmp
cmp
std
jmp
cmp
cmp
cmp
cmp
fadd
pop
jecxz
bnd
jns
sar
aas
jl
sbb
xor
mov
fdivr
cmc
xor
jg
push
repnz
pop
inc
xor
xchg
xor
xor
xor
pusha
xlat
jg
or
xor
jg
rep
sub
mov
repnz
jmp
cmp
cmp
mov
iret
cmp
cmp
cmps
(bad)
das
xchg
sbb
aas
mov
push
cmp
je
(bad)
cmp
jno
cmp
sub
cmp
cmp
das
fidivr
cmp
hlt
xor
xchg
sahf
call
mov
inc
inc
cmp
cmp
adc
jg
cmp
cmp
nop
cmp
int3
(bad)
inc
pop
xchg
and
and
fsubrp
ds
data16
xchg
aas
xchg
aas
mov
mov
mov
ror
pusha
rol
aas
lock
hlt
cmps
cld
out
sbb
mov
mov
cmc
fild
or
adc
adc
xor
and
and
inc
fisubr
add
inc
inc
xor
dec
xor
xor
xor
adc
xor
(bad)
push
xor
xor
nop
jb
sub
sub
aad
inc
xchg
cmp
enter
dec
xor
push
xor
pop
xor
cs
ror
fidivr
cs
sub
xchg
ss
out
or
adc
xor
mov
jl
inc
mov
or
xor
xor
xor
ss
pop
sub
out
xor
xor
push
cld
stos
(bad)
xor
cmp
ins
xor
inc
outs
xor
outs
ret
retf
inc
pop
push
xor
mov
xor
in
in
adc
pop
(bad)
ror
out
(bad)
cmp
(bad)
cmp
cmp
or
fidivr
fistp
dec
cmp
or
popf
cmp
fwait
push
loop
out
cmp
cmp
cmp
cmp
aam
mov
into
cmp
aas
mov
nop
aaa
loop
xor
cwde
jbe
aas
movs
ret
mov
dec
inc
ret
aas
mov
loopne
push
push
call
iret
xor
xor
push
(bad)
cmps
xor
mov
xor
das
xlat
fild
push
xor
xchg
aad
jo
dec
push
push
mov
xor
jmp
arpl
xchg
aad
pop
data16
jl
adc
mov
aaa
inc
aaa
pop
fidivr
aaa
ret
add
mov
mov
aaa
call
cmp
and
sub
dec
xchg
clc
jg
mov
cmp
cmp
cmp
cmp
cmp
das
rcl
adc
data16
retf
cmp
ds
out
and
ss
cmp
call
xor
aaa
cmp
dec
cmp
pop
jns
(bad)
jmp
stos
xchg
cmp
aam
fnstcw
out
out
(bad)
js
aas
jge
cmp
cmp
fimul
cmp
dec
cmp
cmp
ins
test
mov
aas
adc
cmp
lods
cmp
xor
or
aaa
ds
mov
ds
aad
adc
aas
pop
aas
pusha
aas
imul
cmp
xchg
repnz
call
outs
lock
sbb
xor
adc
inc
fisubr
(bad)
mov
mov
xor
out
xor
xor
test
sahf
mov
jmp
xor
xor
push
mov
xor
push
div
sti
xor
xor
xor
movs
jmp
xor
xor
xor
mov
or
pop
push
mov
xor
xor
add
xor
xor
or
aaa
ja
xchg
(bad)
push
std
inc
add
aaa
mov
mov
jmp
out
out
push
lock
mov
pop
cmp
cmp
data16
cmp
cmp
cmp
inc
pop
fcmovb
cmp
bound
ins
cmp
cmp
ret
fadd
loop
mov
or
cwde
cmp
ficom
pop
xchg
retf
sub
adc
jne
lea
jg
scas
out
cmp
cmp
cmp
jnp
xchg
shl
sbb
xchg
or
scas
push
xor
stc
xor
xor
add
sbb
cs
aaa
int3
aaa
stc
loop
fidiv
cmp
dec
cmp
push
cli
mov
fistp
and
sar
pop
cmp
xchg
mov
jge
xchg
xor
aad
xchg
mov
mov
sub
dec
mov
ret
jbe
xchg
xor
sbb
sbb
aaa
mov
pop
loop
push
xor
and
inc
xor
inc
xchg
popa
adc
cmp
into
mov
push
push
ss
ss
pop
aaa
arpl
mov
aaa
mov
popf
aaa
cmp
ss
mov
(bad)
ds
aas
push
inc
test
add
sbb
pop
xor
(bad)
aaa
jecxz
pop
push
mov
cs
xor
inc
dec
push
push
cmp
fstp
hlt
cmp
loopne
add
jge
cmps
lods
mov
ds
out
ds
ds
cmc
(bad)
aas
and
sub
aas
jno
xchg
xchg
add
(bad)
inc
push
pop
cmp
cmp
mov
add
sbb
inc
(bad)
pop
ss
jne
loop
(bad)
jb
xor
and
cmp
cmp
mov
cmp
jg
mov
cmp
sar
fidivr
(bad)
sub
pop
cmp
cmp
mov
xchg
cmp
pop
and
pop
cmp
test
dec
push
sahf
icebp
cli
inc
imul
xor
push
jle
xor
sar
or
idiv
xor
xor
xor
xor
push
call
and
xor
xor
xor
xor
cmc
push
daa
mov
xor
xor
es
xor
(bad)
scas
ret
mov
rol
xor
cmp
je
js
jl
xor
mov
nop
adc
inc
xchg
mov
push
xchg
sbb
jmp
repnz
test
mov
cmp
cmp
sub
das
(bad)
pop
retf
test
ds
jo
pop
bound
lea
pandn
push
xor
(bad)
xor
xor
inc
out
pop
cli
mov
add
or
adc
pop
xor
mov
sub
xor
push
xor
pop
jo
xchg
sub
push
mov
lods
rol
cmp
clc
stc
xor
cmps
lds
xchg
arpl
jecxz
adc
test
shl
sbb
inc
ss
sbb
jne
(bad)
ss
clc
loopne
xchg
mov
ss
aaa
and
int
mov
cmp
sub
test
pop
aaa
loope
jo
cmp
cmp
(bad)
cld
cmp
dec
xchg
inc
(bad)
cmp
cmp
cmp
cmp
inc
stos
ds
inc
bound
push
cmp
popa
int
dec
xchg
dec
ins
cmp
pushf
rcl
hlt
cmp
cmp
inc
test
cmp
cmp
cmp
cmp
cmp
cmp
mov
hlt
clc
or
mov
jo
je
js
scas
rcr
into
aam
fcom
(bad)
jg
jge
cmp
cmp
jl
cmp
cmp
inc
pop
cmp
adc
adc
sbb
fwait
xor
in
sar
fdivp
shl
xchg
xor
pop
mov
test
in
or
gs
xchg
loopne
gs
xor
xor
inc
je
ins
jbe
ds
aaa
adc
hlt
sub
out
cmp
leave
push
xchg
push
or
das
imul
pop
aas
xchg
aas
cdq
cmps
push
pop
xor
and
sahf
mov
imul
sub
ret
xor
xchg
sbb
retf
les
and
cmps
sbb
pop
(bad)
sbb
xchg
jbe
in
xor
call
xchg
loop
or
and
movs
cmp
inc
aaa
inc
aaa
mov
mov
cmp
xchg
ror
inc
dec
sbb
cmp
push
stos
cli
or
jb
js
fimul
push
cmp
inc
pop
jp
retf
or
pop
popf
clc
and
xchg
and
cli
ret
jp
(bad)
add
push
add
(bad)
in
or
test
inc
push
jo
xchg
lods
dec
repnz
xor
jmp
xor
xor
xor
cmp
pop
pop
or
dec
sub
aas
out
out
nop
scas
xor
ja
adc
xchg
xor
pop
gs
ds
test
cli
push
xor
jbe
repnz
mov
push
es
inc
pop
(bad)
xlat
xor
jmp
cmp
cdq
aaa
cmps
ja
inc
movs
push
(bad)
out
push
imul
jg
jle
cmp
xchg
cmp
cmp
push
cmp
cmp
mov
mov
scas
mov
repnz
gs
retf
xor
cmp
dec
cld
aaa
rol
cmp
push
add
popa
(bad)
mov
mov
inc
mov
add
mov
or
repnz
retf
aam
add
clc
pushf
xor
xor
mov
xor
inc
xchg
add
cld
ds
inc
mov
call
xor
fnsave
pop
stos
xchg
movs
or
ret
pop
stos
adc
retf
rol
add
out
or
aam
and
cmp
cmp
and
call
cmp
shl
cmp
cmp
pop
cmp
mov
fdiv
rcl
into
mov
cmp
cmp
cmp
sub
inc
mov
dec
dec
pop
push
ins
aas
std
ja
call
dec
cmp
cmp
mov
cmp
inc
aaa
scas
sar
lods
ds
xlat
or
sbb
rcr
mov
and
sub
rcl
inc
ds
xor
pop
call
(bad)
scas
les
push
stos
and
aaa
add
add
cmp
sub
aaa
jmp
hlt
cmp
stos
sbb
loopne
add
push
xor
inc
sub
lods
or
mov
inc
jb
sar
aas
shl
cli
repnz
test
push
mov
xor
dec
xor
pop
loopne
adc
xor
xor
adc
mov
add
push
sub
dec
cmp
cmp
cmp
call
mov
xchg
xchg
sub
lds
lahf
push
mov
in
mov
add
mov
inc
ss
ss
(bad)
in
outs
cmp
or
cmp
cmp
(bad)
cmps
cmp
cmp
cmp
call
mov
add
xor
xor
ins
xor
cmps
cld
cmp
cmp
bound
sbb
mov
mov
adc
inc
out
ds
inc
imul
cmps
add
xlat
je
fnstenv
in
pop
xor
xor
push
cli
outs
shl
cmp
jo
scas
xor
xor
xor
fmul
(bad)
int3
ss
add
(bad)
into
aaa
push
call
icebp
cmp
cmp
movs
cmp
sar
xlat
push
in
cmp
inc
add
and
outs
sub
cmp
cmp
xor
scas
outs
(bad)
dec
push
and
in
push
sub
sar
or
cli
(bad)
fnstsw
cmc
ds
aas
push
aas
sbb
and
push
into
es
add
xchg
mov
test
add
jbe
xor
stos
rcl
inc
push
stc
xor
pop
outs
mov
icebp
hlt
dec
call
int
mov
nop
fimul
ds
xchg
fidivr
and
les
dec
aam
retf
xor
push
xor
xchg
sub
pop
into
mov
adc
add
push
dec
lock
lods
dec
scas
lock
xor
adc
cmp
push
clc
fbld
aaa
fidivr
lods
cmp
cmp
cmp
sbb
push
sbb
cmp
xchg
inc
lods
cmp
cmp
and
fidivr
loope
cmps
sub
shl
jle
dec
xor
cmp
mov
push
xor
test
pop
cmp
mov
or
call
push
push
fs
xor
adc
mov
es
aaa
jnp
mov
mov
mul
fdiv
(bad)
ret
push
ds
jmp
cmp
and
stos
inc
sbb
lock
push
fnstsw
test
add
mov
or
(bad)
shr
nop
xor
xchg
and
cmps
xor
ss
pavgb
(bad)
xor
(bad)
data16
stos
mov
fidiv
rol
inc
adc
xchg
cwde
aaa
jg
rol
(bad)
aaa
fdiv
loope
out
js
pop
pop
(bad)
aaa
or
and
stos
push
ss
adc
mov
push
push
xor
mov
jo
lods
inc
dec
fistp
retf
nop
add
ror
cwde
xor
rol
aam
in
jbe
push
jle
inc
push
call
call
xor
pusha
push
and
jne
hlt
xchg
cmp
xchg
mov
xchg
push
add
pop
icebp
pop
je
lahf
push
js
jl
xor
jg
lock
mov
pushf
xor
xor
xor
push
scas
shr
shl
xor
dec
xor
xor
xor
add
jmp
or
sbb
or
and
xor
cmp
fs
pop
rol
jl
test
xor
cwde
loopne
rol
call
mov
push
test
stos
mov
aam
push
aaa
not
aam
nop
add
das
mov
into
ds
add
xor
xor
rol
mov
xor
push
pop
add
cmp
dec
inc
pop
or
out
mov
push
push
push
push
mov
cmps
or
or
or
inc
bound
ror
or
jmp
es
es
ss
popa
rcl
xchg
cmp
aaa
sub
neg
stos
cs
aaa
push
ss
nop
aaa
mov
shl
lock
test
inc
push
repnz
pop
add
loopne
cmp
jp
loop
adc
mov
movs
cmp
dec
adc
or
test
enter
dec
mov
adc
enter
sub
xchg
call
sbb
cmp
cmp
rol
inc
mov
add
or
pusha
cmp
pop
push
fisubr
lock
push
sbb
sub
sub
dec
or
push
add
mov
enter
lock
adc
xor
dec
aas
push
jmp
cwde
push
aas
shl
stos
mov
pop
lock
sbb
push
sbb
xor
mov
fs
movs
adc
int3
xor
cli
xor
pop
or
inc
(bad)
ins
scas
mov
mov
jb
dec
jmp
xor
mov
jl
mov
inc
mov
enter
mov
inc
call
cmp
dec
xor
ror
out
fs
je
add
push
mov
adc
mov
xor
inc
adc
dec
stos
mov
xor
mov
movs
mov
mov
jb
pop
add
adc
adc
xor
je
pop
jl
mov
clc
call
ss
inc
ss
out
iret
les
lock
pusha
aam
pop
push
loop
dec
int3
fisub
adc
les
and
cmp
loope
mov
test
adc
xchg
aaa
pushf
xchg
cmp
aam
in
add
add
aaa
cld
jmp
xlat
cmp
sub
xor
pusha
and
mov
cmp
sub
adc
lds
sub
push
cmp
inc
aas
inc
sub
test
aas
pop
mov
xchg
mov
call
and
mov
lods
popw
fmulp
dec
mov
push
push
or
fadd
call
push
jle
mov
(bad)
inc
dec
aaa
xchg
aam
fcom
jno
and
(bad)
push
sub
loop
cld
into
xor
xor
cmp
inc
sub
push
jno
jmp
out
cmp
outs
rcl
(bad)
je
jl
or
js
push
mov
nop
(bad)
cwde
add
push
test
mov
mov
mov
rcr
fsub
loopne
mov
sub
cs
xor
cmp
pop
push
or
adc
sbb
pop
pop
pop
cmps
sub
dec
cmp
dec
mov
cmp
sbb
xor
fs
ins
scas
inc
mov
jl
test
mov
inc
int
stos
mov
xchg
cmp
shl
jmp
mov
mov
inc
(bad)
xchg
xor
push
fcom
in
in
cmp
push
push
mov
cmp
cmp
loopne
sbb
mov
pop
or
clc
inc
xchg
add
push
mov
jo
mov
mov
or
and
nop
xor
mov
push
mov
mov
out
xchg
es
rol
ret
dec
push
mov
push
mov
lock
inc
inc
mov
and
pop
sub
jo
pop
clc
add
loopne
sbb
add
cmp
sub
mov
(bad)
mov
sub
cwde
(bad)
aas
cmp
pop
ss
cmps
inc
dec
mov
sub
call
fidivr
xor
and
data16
shr
test
pop
xor
mov
add
xor
push
cs
and
nop
scas
push
add
pop
add
sbb
jo
repnz
rcr
push
mov
xor
cmp
sbb
push
and
aad
inc
mov
cwde
cmp
test
loopne
push
mov
shl
mov
or
sub
das
inc
pop
call
xor
mov
ds
test
mov
push
clc
cwde
loop
sub
ficom
xchg
add
cmp
inc
cwde
rcr
sub
cmp
or
add
mov
out
lock
or
ret
jmp
jle
or
(bad)
xor
ret
inc
push
loope
push
and
mov
mov
pop
adc
push
jmp
or
xor
shl
adc
call
inc
or
into
xor
jo
xor
and
imul
mov
sbb
or
sub
xchg
test
and
ds
push
data16
xlat
mov
jbe
adc
mov
(bad)
jle
xchg
cmp
mov
mov
cmp
cmp
loope
push
mov
fcmove
pop
aam
and
(bad)
in
ins
fmul
adc
cmp
inc
xchg
or
daa
sbb
or
sub
cli
jmp
adc
ds
sub
mov
ja
ds
mov
xchg
mov
mov
inc
adc
cld
fisubr
lock
fidivr
and
push
sti
adc
xchg
retf
cmp
cs
outs
mov
cmp
les
test
hlt
jbe
(bad)
pop
sbb
jae
push
dec
or
fbld
pushf
mov
stos
jo
inc
call
sub
repnz
fdivr
fdivr
in
test
cli
into
in
ds
dec
cld
add
add
loopne
lds
retf
outs
sbb
scas
cmps
push
sbb
push
xor
push
adc
mov
out
add
mov
ficom
xchg
js
mov
cmp
pop
sub
call
dec
xor
add
cmp
repnz
cmps
mov
dec
sub
jnp
xor
not
mov
fidiv
imul
test
inc
sub
stos
sbb
test
ins
test
aas
fwait
add
data16
mov
push
sub
xor
mov
push
cmp
ds
lds
mov
mov
inc
mov
fs
or
sar
cmp
mov
ss
xchg
dec
pop
sbb
(bad)
xor
xor
movs
mov
scas
xor
dec
test
adc
nop
xchg
mov
out
aaa
add
and
jle
test
mov
div
ss
mov
xor
push
mov
push
jmp
xor
xor
push
cmp
xchg
mov
es
jp
in
out
stos
cmp
call
mov
pop
lds
bound
icebp
push
jle
xchg
xor
inc
data16
xor
jge
(bad)
adc
xor
xor
mov
sbb
mov
mov
push
push
push
add
push
int3
mov
jle
mov
push
ret
mov
dec
adc
test
iret
mov
ja
jb
retf
out
lods
clc
sbb
cmp
sbb
sbb
lock
(bad)
daa
hlt
push
jno
sub
inc
rcr
int
es
adc
xor
sbb
and
cmp
xor
inc
dec
retf
jge
mov
stos
stos
pop
ds
ds
or
dec
jg
xor
outs
adc
push
add
and
sub
outs
es
lea
inc
push
xor
inc
push
push
and
ficomp
out
and
fsubr
sub
adc
inc
cld
dec
mov
outs
ds
ds
mov
js
mov
jp
dec
jge
or
add
int3
xor
xor
dec
and
inc
xor
xor
mov
add
jbe
bound
xchg
cmp
cmp
adc
jae
jbe
mov
inc
adc
push
adc
mov
pop
popa
(bad)
fild
push
push
imul
add
add
push
sub
scas
mov
xor
dec
test
xor
cmp
dec
cdq
ror
xchg
cmp
push
dec
test
mov
into
add
scas
sbb
scas
loopne
sub
jns
push
add
fiadd
ss
out
call
cs
xor
gs
cmp
scas
xor
xchg
retf
cmc
jg
and
or
xor
xor
xor
stos
push
mov
fbstp
inc
xor
and
push
cmp
repnz
cmp
ret
lods
mov
adc
daa
mov
ret
or
xor
xor
outs
sar
dec
loop
mov
stc
aaa
stos
cmp
jb
cmp
cli
cdq
xchg
sti
ds
add
add
xor
push
mov
mov
scas
out
xor
dec
aaa
xchg
aaa
retf
aaa
(bad)
sbb
lock
cmp
jmp
inc
mov
inc
push
or
xor
mov
mov
fsubr
in
mov
xor
pop
shr
or
stos
cmp
push
nop
fsubp
adc
and
mov
cmp
jne
sbb
out
sbb
jg
loop
pop
adc
xchg
arpl
outs
push
push
ins
fidivr
jbe
or
push
lds
ss
js
xchg
cmp
ins
cmp
retf
add
mov
out
and
mov
sub
xor
scas
push
test
xor
jg
push
dec
cmp
mov
cmp
pop
xor
push
xor
xor
jo
shl
jo
into
xor
call
inc
into
cmp
fld
into
or
mov
inc
mov
mov
push
or
or
jmp
inc
or
aam
sbb
xchg
jecxz
or
rcr
hlt
adc
sahf
test
jmp
clc
hlt
xchg
sub
sbb
jbe
test
(bad)
(bad)
(bad)
dec
stos
push
lds
ins
icebp
xlat
test
movs
mov
inc
xchg
fild
push
cmp
inc
push
push
stos
outs
xor
fadd
imul
adc
push
clc
js
movs
mov
(bad)
std
(bad)
call
pusha
mov
(bad)
sub
hlt
popf
leave
jecxz
mov
mov
pop
inc
popa
and
movs
jmp
es
std
fcomip
aaa
mov
fwait
xor
xchg
or
sub
es
or
ins
cmp
xchg
adc
push
add
cmp
adc
(bad)
int3
jb
imul
mov
add
jo
inc
lea
(bad)
(bad)
mov
add
inc
mov
pushf
pop
fnsave
or
mov
stos
imul
fsub
(bad)
jg
je
jmp
fild
mov
inc
call
pminub
xchg
xchg
push
(bad)
(bad)
(bad)
(bad)
in
pop
pop
rol
adc
ret
call
shl
jle
xor
inc
test
mov
scas
cs
imul
cmc
mov
or
(bad)
(bad)
(bad)
jl
leave
jmp
data16
xchg
xchg
rol
test
imul
jns
ins
call
cmps
push
and
push
inc
(bad)
(bad)
(bad)
(bad)
jl
call
cli
aaa
in
mov
js
enter
mov
nop
xchg
inc
dec
ja
movsx
sbb
pop
cmps
jg
rcr
jg
add
jmp
mov
gs
xchg
in
sbb
xchg
sub
push
push
add
or
in
in
shl
adc
add
ins
(bad)
fxch
add
jo
(bad)
(bad)
mov
imul
dec
ss
out
repnz
(bad)
lock
mov
pop
cwde
test
cdq
into
fdivr
add
(bad)
call
iret
lods
inc
xchg
sub
pop
jl
leave
pop
add
push
into
(bad)
(bad)
(bad)
aas
(bad)
dec
data16
or
add
iret
mov
pop
sub
daa
push
leave
shl
aaa
test
and
jmp
dec
sub
popa
cwde
cdq
(bad)
ins
mov
mov
cmovne
cs
jecxz
mov
mov
in
mov
test
sbb
add
dec
xchg
cmps
(bad)
pop
nop
enter
add
(bad)
dec
je
std
and
lahf
cmp
sbb
add
sti
call
in
cmp
imul
enter
cwde
stos
sub
ins
aad
add
je
dec
int3
dec
(bad)
sar
fild
(bad)
sbb
and
push
icebp
dec
das
mov
(bad)
out
xor
cmps
mov
adc
add
(bad)
jmp
xchg
sbb
inc
int3
pushf
repnz
ds
dec
outs
pop
sbb
push
fild
adc
lds
mov
push
cmp
sbb
in
outs
dec
xchg
imul
fcomp
xor
jb
jae
mov
fild
sbb
sbb
mov
in
xchg
mov
mov
out
ins
cs
data16
lock
mov
cld
pop
loopne
mov
cdq
pop
inc
mov
imul
jge
call
xchg
mov
cmp
pop
or
sbb
hlt
pop
lods
rol
inc
xor
fistp
adc
pop
std
inc
mov
dec
iret
out
sahf
cmp
add
mov
jg
cmps
dec
nop
inc
loope
push
cmps
mov
(bad)
outs
leave
mov
cld
pop
test
xchg
jnp
mov
movs
jle
(bad)
out
clc
(bad)
in
fdiv
fucom
inc
mov
daa
jae
scas
shl
(bad)
jmp
cld
ds
call
inc
cmp
call
mov
add
leave
sub
mov
(bad)
(bad)
jne
or
mov
mov
in
les
das
pop
stos
cmp
mov
imul
sbb
mov
clc
jmp
pop
mov
mov
mov
ficom
mov
jle
dec
std
inc
mov
pop
clc
into
push
(bad)
shl
das
jo
sar
pop
xchg
loop
shl
pop
out
in
push
imul
dec
xchg
movs
sbb
jg
daa
jmp
(bad)
(bad)
(bad)
cli
dec
mov
xchg
gs
aas
inc
js
jge
jg
pop
loope
jmp
add
dec
int
jbe
(bad)
push
clc
mov
js
mov
aaa
push
mov
mov
movs
sbb
lock
adc
adc
sahf
not
mov
pop
lock
fist
scas
imul
daa
push
adc
cmp
pop
inc
iret
(bad)
into
fs
cmp
sbb
sub
test
(bad)
jmp
bound
inc
(bad)
push
sbb
outs
cmp
cmps
sbb
ds
jno
jmp
xchg
lock
(bad)
jge
mov
into
mov
pushf
mov
inc
push
leave
rol
mov
cs
lock
test
ret
(bad)
(bad)
jg
mov
inc
cmp
pushf
loopne
push
leave
test
xchg
outs
dec
cli
cdq
jp
icebp
(bad)
dec
sub
in
and
(bad)
inc
cdq
aas
sub
and
mov
test
repz
dec
xchg
or
add
sar
jo
fsubrp
mov
mul
(bad)
mov
mov
(bad)
add
jne
rol
inc
push
mov
cmp
mov
add
in
repz
test
jmp
sti
xor
add
dec
mov
pop
cdq
leave
in
adc
(bad)
stos
stos
push
dec
fadd
fs
loopne
xchg
(bad)
mov
sub
pushf
retf
fisttp
cmp
sub
(bad)
call
push
outs
loopne
mov
add
inc
cmc
je
out
adc
(bad)
sub
imul
jg
mov
mov
inc
test
inc
pop
adc
lock
jle
mov
fsub
add
aad
jecxz
cli
mov
mov
jnp
mov
pushf
outs
xchg
jbe
push
push
dec
pop
inc
pusha
cmp
popa
nop
sbb
(bad)
(bad)
dec
xor
push
outs
out
(bad)
xlat
int
push
stos
sahf
xlat
pop
movs
pop
cmc
nop
jmp
add
popf
push
test
xor
test
mov
scas
call
scas
in
xchg
out
push
xchg
sar
jl
movs
and
imul
or
out
dec
cmp
imul
je
fist
sahf
inc
(bad)
(bad)
(bad)
dec
scas
pusha
pop
add
fucomi
pop
lods
mov
pop
add
pop
cmp
ins
xchg
sbb
(bad)
dec
(bad)
(bad)
xor
or
pusha
sti
pop
sbb
xor
sbb
enter
(bad)
(bad)
push
in
mov
inc
stc
ret
fisub
jbe
outs
mov
inc
jge
ret
lahf
fst
ja
(bad)
call
and
popa
mov
daa
mov
mov
shl
sbb
push
push
jl
scas
shld
data16
jp
push
shl
(bad)
sub
push
jmp
add
mov
mov
jp
pop
jmp
or
mov
and
es
ror
enter
mov
fwait
and
xchg
sub
cmp
pop
fidivr
ret
sar
(bad)
jg
and
sub
aaa
movs
je
mov
pop
xchg
retf
xchg
call
pop
inc
ins
(bad)
call
test
fimul
fbstp
mov
xchg
ror
test
setne
push
cmc
add
retf
add
sbb
leave
stos
(bad)
inc
inc
out
dec
push
push
shr
add
ret
(bad)
jmp
pop
jno
xor
arpl
sbb
dec
imul
(bad)
(bad)
call
mov
je
dec
mul
xor
xor
pushf
shr
inc
pop
xor
js
popa
mov
or
mov
xor
xchg
jbe
in
mov
(bad)
call
adc
jmp
or
mov
fs
sub
or
sbb
(bad)
jmp
xchg
int
repnz
dec
jae
adc
pop
loopne
aam
(bad)
(bad)
push
mov
jno
xchg
(bad)
bound
add
push
mov
inc
fnsave
xchg
mov
adc
call
sbb
in
outs
dec
inc
mov
outs
lock
or
ror
pop
es
jne
inc
lea
pop
clc
add
sub
push
imul
or
xchg
or
ja
dec
push
(bad)
call
ror
xchg
adc
js
jmp
or
daa
cwde
add
add
push
add
push
stc
ret
(bad)
pusha
cmc
or
call
or
fcomip
add
push
jl
rol
mov
mov
pusha
pop
or
ins
push
stos
mov
cmc
cmc
jl
xchg
push
jle
sbb
scas
data16
mov
jmp
pop
test
adc
test
rcl
jecxz
mov
add
(bad)
(bad)
(bad)
fdivp
adc
sbb
loope
xor
imul
ror
out
or
or
mov
or
(bad)
(bad)
dec
in
scas
pop
sti
mov
scas
xor
dec
out
mov
jmp
retf
dec
loope
push
(bad)
(bad)
mov
mov
or
xor
mov
pop
sub
xor
lods
push
mov
mov
(bad)
test
sbb
aad
pop
cmp
mov
pushf
pop
and
(bad)
inc
inc
mov
pop
inc
sub
fwait
lds
aas
fadd
pusha
cmp
fstp
xchg
sbb
pop
xchg
jle
(bad)
(bad)
call
dec
ret
ret
inc
mov
and
mov
mov
dec
lock
or
push
scas
cli
call
push
fst
push
jno
jl
addr16
mov
loope
jl
push
sahf
out
cmps
out
mov
xor
repnz
(bad)
sub
inc
push
dec
clc
(bad)
jmp
or
leave
stc
repnz
add
adc
mov
jmp
call
mov
(bad)
aas
nop
cli
(bad)
mov
mov
fidiv
(bad)
cmp
lds
ret
test
clc
(bad)
push
fdiv
shl
pop
bound
fisub
jae
icebp
cmp
add
pop
js
je
push
movs
mov
inc
and
adc
xchg
ret
push
mov
adc
mov
xchg
add
pop
mov
shr
or
add
dec
inc
add
xlat
jp
lods
(bad)
call
pop
mov
xchg
in
lock
pop
sub
mov
push
pop
sbb
xchg
inc
cld
dec
adc
(bad)
dec
out
sti
int
movs
leave
and
out
clc
jg
(bad)
cwde
cmp
sub
pop
jb
mov
xchg
sbb
adc
daa
mov
xor
out
xchg
stos
cmp
out
push
jge
cld
jecxz
pop
fld
(bad)
call
sub
jb
arpl
imul
mov
movs
pop
and
mov
ja
mov
rcr
adc
ds
cli
pop
cmp
jmp
cwde
or
sub
pusha
xor
mov
test
test
push
mov
mov
xchg
mov
inc
add
aam
jb
hlt
cmp
inc
pop
pop
or
push
jae
test
icebp
call
push
test
punpckldq
movs
sub
inc
adc
ror
jbe
add
or
adc
jmp
add
cmps
aaa
cld
jg
pop
push
fdiv
ret
inc
mov
add
call
fcmovbe
aas
aad
pop
dec
push
fwait
add
mov
inc
sti
popa
cmp
ret
repnz
sahf
std
dec
popf
xchg
jbe
push
sbb
clc
(bad)
call
in
push
add
jnp
call
fidivr
mov
jmp
and
and
(bad)
(bad)
(bad)
jmp
cdq
shl
inc
add
pop
mov
dec
aad
es
cmp
js
xor
out
inc
in
aam
inc
xlat
push
out
or
mov
cdq
push
push
adc
sar
or
scas
aam
bound
sbb
and
push
test
stos
loopne
add
push
pop
pusha
sbb
fistp
add
shl
push
sbb
lds
xchg
and
call
test
inc
push
mov
rcl
(bad)
jmp
or
mov
jge
dec
xchg
push
data16
call
or
or
neg
inc
rol
not
mov
xor
jg
add
clc
xor
stc
call
pcmpeqw
add
fistp
cld
sbb
jl
cmp
push
out
sahf
jo
aas
cmc
icebp
jb
dec
loope
sub
int3
out
movs
ret
dec
rcl
out
fsub
push
adc
call
or
aaa
fldcw
jmp
mov
clc
(bad)
jmp
jmp
push
nop
ins
nop
scas
or
sub
or
(bad)
inc
dec
cmp
adc
push
xchg
mov
dec
pusha
popf
jg
(bad)
(bad)
fisttp
push
stos
inc
stos
cld
or
test
test
pushf
mov
mov
jmp
rcl
out
imul
clc
add
or
xchg
or
aam
mov
lea
(bad)
enter
(bad)
mov
cmp
or
movs
(bad)
call
jmp
or
sti
push
retf
pop
pusha
in
mov
push
imul
icebp
(bad)
dec
icebp
in
idiv
movs
mov
adc
aad
or
into
ins
mov
into
push
leave
in
cmps
lock
jmp
(bad)
jmp
retf
inc
(bad)
xchg
add
into
jg
test
pop
frstor
cmp
test
sbb
(bad)
(bad)
inc
mov
cmp
xchg
or
cwde
test
mov
sbb
adc
mov
(bad)
(bad)
(bad)
inc
xchg
cmps
xchg
push
push
ins
dec
xor
test
xchg
addr16
inc
mov
adc
call
sub
imul
xchg
ins
mov
aam
push
mov
adc
(bad)
dec
jg
jns
loope
or
std
and
loopne
and
and
dec
push
stc
mov
push
jb
icebp
outs
nop
lock
push
jbe
imul
and
popa
jo
inc
adc
test
sub
xchg
xor
pop
sbb
call
test
sbb
dec
cmp
inc
fstp
add
pop
sub
or
xchg
jge
mov
hlt
(bad)
(bad)
(bad)
jg
sahf
inc
aad
adc
mov
adc
(bad)
shr
push
ja
fnsave
pop
mov
or
cmp
inc
push
in
sahf
xor
pushf
sub
dec
xchg
jmp
ja
popa
mov
stos
add
int3
(bad)
push
jp
inc
test
and
(bad)
xor
sahf
fstp
cs
lods
add
(bad)
push
sti
push
loopne
xor
frstor
je
mov
shl
pushf
sbb
out
jmp
stc
xchg
sbb
popa
inc
or
sub
or
fld
pop
fnstcw
push
cwde
inc
pop
scas
push
xor
dec
aad
out
push
popa
leave
cmp
dec
inc
in
into
mov
sub
sar
jle
jno
in
popa
adc
sahf
add
inc
in
mov
jbe
stos
in
xchg
sti
mov
je
add
jmp
lock
xchg
and
aaa
daa
(bad)
(bad)
fcomip
jg
ror
or
ins
push
call
fild
xor
test
outs
ds
(bad)
(bad)
call
xor
xor
aaa
addr16
mov
icebp
or
xor
mov
mov
mov
div
les
rol
inc
loopne
loop
(bad)
fstp
xchg
repz
ja
mov
mov
lods
xchg
sub
or
lock
cmp
adc
mov
jg
int3
adc
xor
mov
int
mov
inc
lods
out
mov
mov
cs
fld
into
mov
call
xor
dec
clc
dec
inc
sub
ror
cld
les
ret
in
jnp
mov
mov
mov
iret
test
ror
cmc
mov
mov
enter
pop
cmc
stc
test
jle
mov
sbb
mov
cmp
sub
mov
xor
(bad)
call
cld
cmc
pop
adc
clc
cmc
test
call
add
and
push
dec
es
or
clc
aaa
jl
mov
jecxz
shl
lock
cld
xchg
xor
lock
repnz
mov
jns
pop
inc
(bad)
jae
call
icebp
test
or
mov
(bad)
(bad)
jmp
arpl
jle
pop
dec
cmp
pop
jno
inc
xchg
push
dec
fadd
sub
jb
retf
aam
ror
pusha
fcom
mov
mov
(bad)
call
or
or
jl
adc
push
sub
(bad)
lahf
pusha
sbb
push
call
mov
sub
(bad)
inc
shr
dec
cdq
jmp
jmp
xor
(bad)
mov
fld
loopne
sbb
push
inc
outs
nop
lods
popa
xor
loopne
sbb
loope
nop
add
add
lea
push
fidivr
jmp
lock
pusha
repnz
(bad)
(bad)
std
outs
ror
mov
pop
rol
cmp
lods
test
sub
mov
mov
fs
fmul
dec
and
sub
fcom
and
imul
in
or
and
cmp
dec
icebp
and
test
and
(bad)
jno
popf
(bad)
(bad)
jmp
sbb
push
or
sub
(bad)
cdq
mov
xchg
test
cmps
repz
jae
js
adc
and
fdiv
pop
sar
loopne
fcom
(bad)
call
sub
fsub
clc
dec
cmp
lods
sub
stos
cs
(bad)
je
push
mov
adc
pop
clc
dec
aaa
adc
cli
loope
pop
js
outs
cli
and
xor
cwde
sbb
sar
(bad)
jg
int3
out
clc
int
mov
mov
sahf
push
mov
push
retf
lods
xor
(bad)
(bad)
(bad)
fld
push
push
push
retf
fsubr
shr
adc
jmp
xor
cmp
xchg
jg
loopne
clc
adc
mov
and
in
mov
inc
hlt
rcl
pop
fmulp
push
push
es
jle
outs
test
inc
js
add
(bad)
call
loop
fisttp
jg
xor
dec
ins
popa
cmp
test
or
outs
mov
sub
dec
sbb
sahf
add
jmp
pop
pusha
clc
mov
push
movs
sbb
clc
dec
cmc
inc
cmps
inc
xchg
dec
cmp
call
in
mov
dec
mov
xchg
test
call
pop
sub
idiv
imul
and
xchg
out
imul
inc
scas
mov
or
das
clc
(bad)
(bad)
jo
jb
push
pushf
test
sub
sub
jae
cli
mov
cwde
mov
mov
pushf
mov
std
(bad)
jmp
or
pop
test
hlt
jmp
call
jne
jne
loope
arpl
xchg
mov
ret
cmc
push
lea
cmps
mov
fwait
adc
sahf
ds
pop
lock
xchg
movs
outs
movq
xchg
mov
adc
addr16
hlt
(bad)
(bad)
sub
ins
pop
dec
or
jecxz
mov
push
xor
std
(bad)
(bad)
call
mov
aas
push
ja
sti
cmps
add
pop
xchg
imul
(bad)
mov
jge
(bad)
jge
loopne
sub
push
lods
and
les
stos
jae
(bad)
push
inc
into
adc
shr
or
rol
jnp
mov
mov
inc
(bad)
(bad)
(bad)
dec
in
and
scas
mov
shr
dec
mov
jp
(bad)
mov
push
imul
(bad)
push
mov
popa
imul
(bad)
mov
jae
sub
call
sti
and
fild
loopne
pop
hlt
xchg
mov
push
fild
(bad)
fadd
icebp
mov
lods
mov
and
inc
dec
push
jmp
jmp
adc
test
add
fdivp
push
xor
mov
mov
adc
and
mov
dec
mov
or
push
and
mov
xchg
add
pop
xchg
(bad)
dec
ret
add
mov
sti
add
loopne
and
mov
call
(bad)
cld
movs
mov
dec
lea
fs
rol
clc
lds
(bad)
dec
stc
mov
mov
fsub
pop
jmp
mov
daa
cmps
xlat
nop
cmp
cmp
popa
mov
(bad)
jmp
pop
stc
mov
sub
push
leave
rcr
inc
xor
and
cmp
cmc
call
mov
xor
push
or
imul
sahf
xchg
ret
(bad)
fistp
jp
push
aam
dec
and
loopne
(bad)
pop
cli
rcr
cli
pop
push
ins
pop
mov
outs
clc
pusha
hlt
int3
movs
fsubr
sub
xchg
mov
loopne
and
cs
add
and
sbb
aam
mov
aaa
dec
xor
shr
sar
jmp
push
dec
mov
xchg
(bad)
jg
pop
mov
mov
sub
inc
aas
jl
xchg
outs
fwait
jno
lods
call
add
dec
fdivr
dec
lds
ins
pop
call
inc
pop
loopne
retf
enter
xchg
ja
xor
jmp
outs
scas
fiadd
mov
(bad)
adc
ins
cdq
inc
mov
into
pop
lahf
pop
mov
cmps
inc
mov
inc
jb
cdq
sbb
enter
push
cmp
cdq
mov
mov
xor
ins
(bad)
jmp
inc
(bad)
(bad)
(bad)
call
aas
popf
ret
rol
mov
or
pop
lds
jle
aad
popf
pop
loop
adc
add
test
or
jmp
test
mov
popa
push
xchg
(bad)
jle
test
xor
es
sub
cs
dec
cwde
jmp
sub
sbb
sub
imul
sbb
movs
push
nop
jmp
mov
popf
std
ja
(bad)
(bad)
(bad)
inc
jp
and
cmps
(bad)
mov
lds
push
pop
lods
push
call
mov
ss
mov
(bad)
in
xor
adc
pop
dec
inc
mov
es
and
lock
leave
repnz
inc
out
fdivr
mov
fld
stos
xor
mov
xchg
add
call
jmp
xchg
adc
sahf
jne
fiadd
test
mov
pop
lds
jmp
aad
push
xchg
jno
inc
add
fwait
inc
sar
div
and
inc
push
inc
(bad)
(bad)
call
pop
xchg
dec
rcl
lods
iret
mov
cwde
and
adc
stos
rol
push
sar
loope
jno
add
icebp
pop
inc
mov
lock
mov
pop
sahf
retf
out
loop
mov
(bad)
dec
or
stc
sub
push
jecxz
push
stc
pop
jecxz
dec
hlt
inc
dec
nop
out
adc
add
add
ds
cmp
mov
pushf
ror
lods
pushf
adc
dec
and
jne
or
fwait
in
sahf
sbb
enter
jg
(bad)
call
pushf
es
dec
(bad)
mul
js
push
cmp
mov
(bad)
(bad)
(bad)
fldenv
sub
xchg
mov
imul
fadd
push
jp
mov
dec
mov
inc
and
les
sub
cmp
jmp
outs
adc
push
rcl
pop
call
(bad)
mov
xor
mov
addr16
jp
fldenv
scas
sub
loop
or
jmp
scas
outs
mov
jmp
push
adc
pop
cmc
call
shr
sbb
scas
jg
call
shl
sti
(bad)
fistp
xchg
mov
out
push
lods
mov
xor
(bad)
mov
popf
mov
leave
xchg
call
retf
inc
aad
ins
push
outs
stos
xchg
or
(bad)
out
arpl
pop
aaa
xchg
adc
pop
retf
pop
mov
inc
call
cld
push
sar
in
adc
and
dec
sbb
pop
inc
push
mov
push
test
(bad)
dec
xchg
sbb
sbb
mov
icebp
adc
pop
adc
fldcw
jl
mov
add
aad
movs
loopne
rcl
adc
or
push
fnsave
lds
dec
sbb
jg
mov
(bad)
cli
sub
cmc
adc
adc
xchg
in
bound
jmp
repz
push
retf
retf
xchg
adc
test
jl
inc
cmps
(bad)
jg
js
jmp
xchg
test
sti
retf
adc
sbb
or
dec
(bad)
xchg
fadd
enter
sbb
adc
mov
pop
xlat
mov
push
clc
(bad)
(bad)
cmp
ficomp
ins
dec
mov
push
mov
fist
(bad)
(bad)
push
adc
test
stos
pop
pusha
xchg
inc
mov
sbb
xor
pop
add
daa
(bad)
(bad)
(bad)
inc
stos
cmp
jmp
ret
and
sti
mov
adc
(bad)
pushf
and
(bad)
(bad)
dec
jmp
xor
(bad)
aam
push
push
test
add
(bad)
(bad)
fild
imul
jmp
push
xchg
aad
lea
movs
mov
cmp
sbb
push
mov
sub
inc
out
mov
push
cmps
pop
arpl
adc
call
(bad)
jge
es
or
jbe
push
cdq
adc
dec
dec
daa
sub
std
pop
and
and
sbb
cmp
pop
push
push
mov
xchg
sub
adc
add
or
or
(bad)
jge
lea
and
lds
mov
jge
test
sub
(bad)
(bad)
cmp
jl
sub
daa
sti
or
sar
(bad)
call
iret
sub
and
outs
pusha
icebp
test
pop
jge
inc
add
push
(bad)
idiv
(bad)
(bad)
(bad)
inc
adc
xchg
xor
pop
jnp
xchg
adc
jp
dec
out
icebp
pop
loopne
lahf
ins
and
push
mov
sahf
xchg
mov
cmc
pop
push
mov
(bad)
std
mov
jge
les
data16
jmp
(bad)
and
pop
add
and
add
aaa
rol
pop
loope
ret
(bad)
(bad)
out
lods
jne
jl
add
int
je
hlt
pop
popa
mov
sar
xlat
push
jmp
(bad)
(bad)
(bad)
(bad)
call
inc
je
cwde
pop
mov
test
icebp
lahf
lock
mov
cld
call
cmp
fimul
and
xchg
jns
dec
fwait
(bad)
(bad)
(bad)
dec
lock
bound
jb
mov
push
shr
cmp
(bad)
dec
sbb
inc
cmp
addr16
test
jmp
movs
ins
jmp
sbb
jg
(bad)
dec
aas
std
repnz
sbb
and
mov
sbb
cld
and
cmp
sar
ins
lahf
cmps
dec
adc
adc
sti
loop
jg
(bad)
inc
adc
movs
sbb
and
mov
retf
scas
sbb
inc
fsubr
mov
jnp
out
mov
(bad)
dec
adc
push
in
pop
mov
cmp
(bad)
fild
push
jg
fisttp
cdq
outs
push
pop
cmp
dec
outs
aam
ret
mov
add
and
shl
dec
repz
add
mov
(bad)
push
ins
jecxz
pop
pushf
scas
stc
mov
call
jno
(bad)
(bad)
(bad)
out
clc
inc
fisub
inc
jnp
ret
in
fwait
ss
mov
fcmovnbe
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
jnp
xchg
xchg
fcmovb
cmc
jae
add
cmc
push
and
fimul
jp
adc
mov
add
push
loop
mov
(bad)
cmp
pop
or
mov
retf
jo
or
stc
shl
cmps
data16
xchg
mov
mov
sub
(bad)
jmp
sub
adc
dec
movs
(bad)
ins
mov
std
pop
(bad)
dec
xor
push
outs
pop
add
xchg
fdivr
push
nop
retf
jbe
push
sub
sbb
xchg
cs
pusha
(bad)
es
sbb
and
cmps
jmp
call
shl
(bad)
(bad)
out
cwde
mov
gs
iret
pop
mov
pop
ret
pop
fisub
push
stos
(bad)
jmp
sub
jp
mov
lds
sub
das
mov
sub
pop
std
out
(bad)
call
dec
leave
jae
leave
js
js
and
(bad)
jg
ins
xchg
jmp
shr
jae
sbb
dec
rcr
ss
add
imul
mov
add
or
adc
lods
stos
xor
add
sbb
jno
xor
sub
cmps
pop
push
pop
ds
sub
(bad)
jmp
jmp
bound
sub
dec
(bad)
(bad)
inc
clc
push
sti
or
jb
jle
cmps
mov
xor
pop
ret
repz
mov
rcl
cmc
sbb
(bad)
mov
popf
ins
nop
sbb
mov
hlt
fistp
(bad)
(bad)
jmp
xor
and
lahf
mov
pop
add
sub
push
dec
or
sbb
jg
out
ins
ret
sub
mov
mov
in
adc
inc
sar
cwde
mov
out
je
sbb
(bad)
call
pop
fcomp
mov
sub
enter
scas
mov
and
test
dec
or
out
cmps
jge
aam
les
mov
sub
xchg
inc
xchg
push
mov
imul
mov
test
mov
push
add
xor
push
push
arpl
les
(bad)
lock
sahf
cmp
adc
in
daa
and
adc
repnz
les
adc
inc
xchg
test
clc
(bad)
(bad)
(bad)
fisubr
sub
ret
fidiv
cmps
lahf
dec
adc
jmp
push
xor
dec
sbb
mov
sbb
lea
int3
mov
dec
addr16
push
add
cmp
ds
fild
mov
mov
shr
test
test
xchg
add
(bad)
dec
mov
sbb
adc
cmps
icebp
push
add
cmp
shl
pop
mov
adc
push
fucom
jge
out
std
(bad)
(bad)
inc
call
stos
fcomp
pop
mov
sbb
(bad)
jno
(bad)
(bad)
fbld
cmp
sbb
dec
mov
add
mov
dec
js
out
mov
dec
cmp
dec
mov
outs
int
inc
adc
sbb
adc
push
inc
(bad)
sbb
int
out
dec
push
fistp
ss
pop
cld
or
retf
dec
push
adc
add
adc
sbb
xor
mov
fadd
pop
loopne
push
(bad)
out
dec
ffreep
je
cmp
add
shl
call
push
lods
loop
in
sub
ja
cmp
clc
inc
jae
adc
clc
lds
(bad)
(bad)
(bad)
(bad)
fistp
cmps
ins
sub
stos
stc
repnz
lods
cmp
or
sbb
sbb
repz
xchg
and
clc
mov
nop
mov
fldcw
cmps
add
leave
pop
repz
sbb
mov
clc
dec
and
retf
(bad)
(bad)
dec
arpl
cmc
jmp
or
pop
imul
hlt
dec
clc
sbb
outs
(bad)
cmp
adc
aad
frstor
(bad)
(bad)
mov
jmp
loopne
mov
cmp
fldenv
mov
in
fidiv
adc
(bad)
dec
or
adc
adc
sar
inc
inc
push
pushf
cmp
mov
movntq
cwde
or
fmul
xor
repnz
push
dec
adc
pop
mov
xor
pop
cmc
dec
dec
fisub
stos
sub
jp
push
push
sub
mov
mov
call
je
mov
pop
shl
pop
ss
shl
jmp
dec
(bad)
(bad)
js
lea
mov
mov
xor
push
aaa
pop
mov
dec
push
or
call
pop
push
(bad)
mov
jmp
clc
push
push
je
pushfw
add
and
in
pop
(bad)
mov
das
jbe
mov
mov
and
bound
mov
(bad)
jmp
adc
test
enter
in
cli
dec
clc
loop
sbb
sub
fbstp
(bad)
mov
clc
sub
sti
xor
mov
clc
jge
(bad)
jmp
cmc
jne
nop
std
pop
(bad)
mov
push
imul
push
(bad)
(bad)
(bad)
(bad)
jmp
clc
jp
arpl
xor
imul
aas
and
and
(bad)
dec
lock
adc
pop
jbe
and
call
pop
ss
push
or
pop
xchg
or
cmc
sub
shl
push
mov
inc
push
jbe
mov
sub
clc
cmp
mov
fprem
jl
mov
fsub
(bad)
mov
jb
push
stc
mov
jnp
jns
or
adc
mov
or
mov
fcomip
(bad)
cld
push
pop
aas
pop
mov
sbb
cmp
cmc
clc
(bad)
inc
movs
mov
es
in
add
sub
pop
std
fsubr
pop
xchg
(bad)
push
js
gs
test
stc
(bad)
(bad)
(bad)
inc
test
ss
call
popw
xor
scas
jge
sub
outs
(bad)
push
std
cmp
call
pop
and
lar
cmp
mov
(bad)
jge
int3
cmp
sbb
call
test
fs
ins
(bad)
push
scas
test
movs
mov
push
mov
(bad)
(bad)
(bad)
jg
rcl
xchg
call
out
fwait
ret
ins
lods
or
sbb
or
je
in
aaa
ss
(bad)
call
sti
mov
test
mov
and
mov
mov
mov
inc
xor
pop
bound
fbld
cmp
scas
add
mov
sbb
or
test
sbb
(bad)
(bad)
(bad)
(bad)
cmp
cmc
jmp
adc
sub
aad
and
sbb
push
sti
cmp
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
push
popf
add
pushf
cld
cmp
ss
mov
stos
cmc
push
jge
push
pop
adc
adc
mov
add
mov
sbb
call
jbe
aam
add
xchg
fs
mov
inc
push
cmp
mov
ds
(bad)
(bad)
(bad)
cmp
jmp
push
sbb
mov
ds
hlt
ds
shl
inc
inc
mul
mov
pop
xor
lods
xor
cmp
(bad)
push
sub
ja
adc
dec
sbb
cmps
xor
fs
mov
(bad)
in
(bad)
call
xchg
push
jg
push
les
sbb
adc
pop
push
xor
dec
(bad)
aad
push
out
(bad)
jg
movs
adc
dec
pop
add
jge
mov
fcomp
push
clc
jne
and
inc
adc
inc
xlat
lds
(bad)
(bad)
call
mov
push
out
mov
ja
dec
sti
call
dec
cmp
test
ss
or
(bad)
cmp
repz
dec
and
fs
adc
sbb
push
loopne
xchg
xchg
(bad)
(bad)
inc
cmps
arpl
addr16
xchg
inc
xchg
cwde
sbb
push
sub
in
(bad)
fcomip
push
mov
mov
xor
push
or
test
and
jns
xor
sbb
xor
sbb
or
les
movs
(bad)
(bad)
(bad)
inc
sbb
mov
inc
inc
inc
adc
push
gs
pop
xchg
enter
sub
pop
(bad)
(bad)
(bad)
jmp
and
mov
sub
je
sub
cmp
xor
mov
inc
int
inc
ss
stos
sar
jo
inc
enter
out
or
sbb
xchg
cld
scas
mov
cmp
data16
(bad)
(bad)
inc
push
xor
push
fidiv
xor
xchg
jecxz
cs
jecxz
sahf
jae
lahf
and
ret
(bad)
push
xchg
push
pop
push
stc
adc
pop
cmc
sti
xor
mov
mov
and
(bad)
(bad)
inc
inc
pop
shr
cmp
ins
cmp
lods
adc
scas
mov
sbb
dec
cmc
dec
stc
push
mov
(bad)
(bad)
(bad)
call
jmp
xchg
mov
xchg
sbb
pushf
and
mov
data16
(bad)
(bad)
(bad)
(bad)
stc
out
xchg
pop
dec
xor
fisubr
push
(bad)
popa
push
ins
and
fimul
pop
out
and
test
call
outs
rcr
or
xchg
sub
mov
mov
sbb
pop
loopne
xor
pop
cld
mov
xchg
jmp
data16
lods
cmps
je
arpl
lds
jmp
sub
frstor
out
fmul
(bad)
push
xor
mov
jne
add
fld
xchg
mov
adc
cmc
inc
(bad)
call
xor
jno
sbb
cmp
cmps
stc
(bad)
imul
lods
push
or
dec
jae
adc
adc
adc
(bad)
je
jnp
movs
cmp
mov
(bad)
push
cdq
inc
leave
cmp
jmp
sub
sub
pop
adc
repz
jle
mov
pop
pop
jo
(bad)
xor
(bad)
(bad)
fistp
cdq
push
mov
or
push
adc
cmp
pop
add
scas
in
es
lods
mov
xor
cld
das
sar
aas
and
inc
mov
adc
mov
mov
out
lock
jle
sub
ror
xor
dec
cwde
jmp
jle
(bad)
(bad)
(bad)
push
sti
lods
rol
sbb
pop
mov
stos
mov
rcl
mov
das
out
dec
pushf
ds
call
aaa
xchg
and
pop
xchg
mov
mov
in
adc
pop
xchg
jmp
and
push
mov
adc
mov
cs
inc
ss
out
iret
loope
xchg
pushf
mov
lods
xor
cmp
inc
jae
add
cmc
retf
jae
std
add
clc
sub
xor
pop
gs
ins
jne
test
lods
mov
vpmullw
in
in
mov
push
push
push
push
es
ds
dec
push
pop
data16
jmp
sahf
cmps
scas
mov
loop
(bad)
clc
mov
out
idiv
sti
add
adc
and
xor
or
(bad)
cmp
pop
arpl
jnp
mov
clc
mov
push
jecxz
repz
and
mov
push
pop
add
idiv
(bad)
(bad)
jmp
pushf
movs
clc
lods
mov
(bad)
int3
aam
in
in
ret
fidiv
clc
neg
jne
out
in
sbb
add
test
or
xchg
sahf
(bad)
push
and
adc
or
daa
cmc
lock
and
lods
(bad)
jmp
inc
loopne
or
out
or
out
daa
ins
sar
(bad)
stc
sbb
push
stc
jae
adc
mov
or
stos
cmp
(bad)
(bad)
(bad)
jmp
test
(bad)
push
xchg
jnp
in
pop
adc
test
or
push
mov
shl
mov
sbb
push
arpl
jg
push
retf
cli
ds
fld
popa
test
jno
sar
sbb
xor
in
sub
push
stos
sub
mov
mov
div
test
inc
push
cli
cmp
ds
xchg
movs
nop
mov
sti
or
test
fsin
push
xchg
xchg
jg
(bad)
mov
and
cld
sub
add
push
jl
out
push
dec
mov
rcl
cld
out
ja
cmp
and
xor
(bad)
mov
mov
ss
inc
inc
mov
call
(bad)
(bad)
cld
xor
xchg
xchg
xor
scas
adc
in
in
xchg
in
mov
push
push
sti
add
icebp
(bad)
fild
outs
cs
ds
ss
fdivr
push
mov
pop
dec
cs
rcr
test
bound
dec
mov
je
xchg
fnstsw
(bad)
jg
movs
push
jle
push
inc
int3
add
mov
add
pusha
loopne
lods
ja
cli
jg
ret
jnp
xor
xor
mov
retf
and
test
mov
xor
shl
call
mov
inc
(bad)
add
std
push
aaa
in
repz
adc
mov
jp
mov
sub
mov
jp
cmp
imul
(bad)
(bad)
call
push
sbb
xor
inc
(bad)
and
call
rcl
iret
cmp
inc
xor
mov
loope
fadd
mov
loope
inc
cli
xchg
and
mov
mov
dec
sbb
pop
ins
adc
adc
dec
aaa
ret
adc
movs
pop
loop
repz
or
(bad)
cmp
mov
mov
mov
iret
sub
pop
add
mov
xchg
and
push
jecxz
fstp
(bad)
imul
mov
or
lock
cmp
jge
add
push
outs
(bad)
pop
push
int
or
(bad)
fist
push
mov
jge
inc
ret
mov
add
push
cdq
dec
or
pop
movs
fiadd
call
(bad)
jmp
inc
rcr
or
mov
je
cmps
xchg
retf
call
xor
xor
mov
dec
and
push
adc
push
je
jg
jg
lds
adc
ss
xchg
push
sbb
xor
cmc
push
xchg
sbb
out
xor
xor
adc
adc
(bad)
push
jmp
xchg
inc
idiv
aam
(bad)
jge
cmp
inc
call
sbb
stc
jge
push
cmp
cdq
adc
fild
int3
rcr
cmp
sbb
hlt
adc
mov
xchg
test
xor
(bad)
mov
ds
push
xor
adc
add
test
push
cmp
cmp
(bad)
mov
xor
push
and
add
pop
test
push
hlt
xor
push
ds
jbe
jg
inc
test
push
push
adc
xor
mov
push
outs
or
in
mov
jg
adc
mov
xchg
mov
stc
clc
mov
or
pop
mov
mov
mov
movs
loopne
nop
xor
jne
sbb
lds
add
test
(bad)
fcomip
jmp
mov
cmc
rol
and
add
(bad)
(bad)
mov
aad
jno
cmp
add
gs
cdq
std
std
jo
jbe
add
(bad)
(bad)
(bad)
(bad)
mov
div
add
adc
sbb
sub
cmp
push
clc
pop
popa
imul
cdq
mov
push
clc
fabs
jmp
adc
sbb
sub
cmp
push
clc
pop
bound
jp
mov
clc
call
sar
(bad)
jmp
pop
pop
daa
das
aaa
aas
inc
dec
clc
push
pop
outs
sub
(bad)
push
xchg
scas
mov
(bad)
iret
clc
xlat
(bad)
out
neg
sbb
sub
sbb
clc
(bad)
(bad)
(bad)
call
push
nop
clc
cwde
mov
enter
loopne
lock
fwait
push
pop
cmp
cmp
jmp
clc
fwait
dec
hlt
fwait
cmp
inc
enter
hlt
stos
sub
(bad)
(bad)
pop
jno
(bad)
dec
aaa
bnd
(bad)
call
push
cmc
pop
(bad)
mov
sub
push
(bad)
call
movs
mov
jns
nop
cmp
mov
mov
cli
leave
popf
aas
je
sbb
hlt
push
pop
(bad)
dec
jne
lock
or
pop
test
or
mov
cmp
push
scas
dec
jg
repz
(bad)
in
push
xor
push
not
sti
xchg
jmp
adc
sbb
inc
jmp
(bad)
fidiv
or
sub
xchg
pushf
inc
ins
rol
mov
adc
mov
push
adc
and
call
jne
loop
out
or
xchg
sbb
fiadd
push
and
mov
stos
xor
jle
ins
cmc
ss
pop
lea
xor
pop
lods
and
(bad)
push
or
cli
in
jae
das
hlt
jl
mov
cmp
(bad)
(bad)
jg
cmp
cmc
jmp
mov
or
mov
push
sahf
ins
or
(bad)
jmp
std
jle
jnp
sti
jo
jge
cmp
or
inc
mov
stos
ss
(bad)
(bad)
call
jge
test
pop
cmp
ficom
mov
add
js
imul
mov
stos
mov
pop
sub
jne
mov
mov
xchg
push
(bad)
(bad)
(bad)
push
div
fimul
jno
xchg
int
imul
or
dec
add
loope
jnp
dec
js
or
adc
push
dec
lea
dec
push
push
adc
inc
imul
add
adc
(bad)
jmp
push
mov
push
add
or
inc
sbb
(bad)
aas
xor
push
inc
adc
pop
test
dec
(bad)
(bad)
(bad)
(bad)
jl
test
mov
lods
xor
jbe
inc
xchg
sahf
and
mov
dec
scas
sub
push
pop
dec
ins
div
xchg
add
fstp
(bad)
stos
jne
shl
push
xlat
xor
add
push
or
inc
cwde
xchg
fs
dec
xchg
pop
out
stos
(bad)
scas
or
jne
xchg
xor
inc
ss
push
test
mov
pop
pop
lock
inc
push
fs
xor
pop
je
mov
or
ja
mov
aam
hlt
push
sbb
cmp
int
or
cmp
cmp
cmc
jg
jp
call
clc
push
xchg
pop
jo
sar
pop
loopne
adc
pop
push
or
cmp
call
adc
jp
ja
call
xchg
mov
mov
mov
jns
(bad)
(bad)
(bad)
jl
jp
mov
sbb
sti
sub
sub
adc
popa
hlt
imul
mov
(bad)
neg
add
sub
add
sar
jg
test
in
push
pop
sbb
sbb
xchg
ja
mov
ins
fcomi
cmp
push
not
jg
addr16
dec
idiv
data16
mov
call
nop
ficom
xor
mov
jnp
sbb
pop
sti
imul
xor
sar
inc
ret
outs
dec
dec
xchg
push
pop
jmp
push
xchg
sub
call
out
imul
fimul
sahf
xor
pop
mov
nop
or
or
stos
or
push
ret
lds
dec
mov
inc
shr
pop
gs
ins
(bad)
cmp
lods
clc
scas
dec
out
test
mov
lds
int
jmp
push
in
in
fiadd
outs
push
sub
test
push
cs
push
ds
inc
sub
push
cmp
outs
pop
sub
inc
pop
xchg
test
jb
xor
jmp
fild
std
shl
movs
in
out
mov
scas
adc
push
dec
or
jb
(bad)
(bad)
jmp
in
clc
sub
push
sar
inc
je
sahf
and
(bad)
(bad)
(bad)
call
mov
cmp
sbb
ficomp
mov
push
stos
cmp
in
(bad)
(bad)
(bad)
call
xor
sbb
mov
mov
clc
jp
xor
out
clc
jmp
sbb
mov
pop
jnp
cmc
cwde
das
and
(bad)
cli
cmp
(bad)
rol
aas
push
sti
(bad)
call
clc
imul
xchg
mov
fdivrp
ins
enter
popa
aaa
test
add
jle
cmp
sbb
std
sbb
jg
or
(bad)
clc
sub
loopne
pop
xchg
enter
(bad)
cmp
sahf
push
mov
aas
ror
test
ficomp
div
sbb
outs
pop
cmps
xlat
mov
(bad)
jg
dec
pop
jbe
add
hlt
sbb
movs
cld
ja
mov
call
xchg
mov
sub
jmp
cmp
sbb
daa
push
inc
clc
xchg
lods
scas
clc
dec
xor
ins
jo
clc
xor
push
dec
(bad)
(bad)
(bad)
jg
pop
clc
and
jns
xlat
movs
and
(bad)
xchg
jo
and
and
clc
and
repnz
mov
aas
inc
xchg
mov
(bad)
(bad)
cmp
cmp
add
pop
clc
inc
in
pop
ficomp
push
clc
adc
std
ror
cwde
jnp
dec
out
(bad)
mov
aad
jbe
and
ja
pusha
mov
std
int
cwde
xor
ins
mov
(bad)
mov
inc
mov
dec
mov
cmp
fsubr
fstp
add
cmp
popf
nop
ja
pop
sbb
(bad)
(bad)
(bad)
(bad)
std
xchg
shl
cmc
pop
(bad)
je
clc
ficom
or
xchg
sti
and
mov
clc
pop
jg
(bad)
(bad)
call
rcr
inc
cmp
fdivr
cmp
ja
repz
mov
pop
adc
sub
push
clc
push
inc
dec
aas
aam
(bad)
in
sbb
cld
jg
add
sub
cmc
push
aas
push
mov
(bad)
jmp
adc
push
and
icebp
sbb
clc
addr16
mov
loopne
(bad)
inc
hlt
ja
call
xchg
mov
into
shl
clc
mov
push
retf
inc
(bad)
jmp
pusha
stos
xchg
repnz
push
or
std
xchg
mov
and
adc
(bad)
jg
mov
into
adc
out
inc
pop
pop
cmp
stos
les
gs
lock
jmp
ret
call
js
adc
std
in
pop
and
mov
sub
hlt
jl
(bad)
(bad)
jmp
push
mov
movs
int
clc
call
ret
(bad)
xbegin
sub
out
ret
gs
(bad)
(bad)
push
imul
jp
repz
xchg
jg
pop
pop
mov
mov
mov
imul
call
push
stos
(bad)
sub
and
mov
xor
dec
pop
mov
int
ins
jb
or
cli
repz
mov
cmp
imul
pop
xchg
cld
dec
lds
and
mov
xchg
or
and
dec
clc
rol
movs
add
fisub
sbb
retf
mov
ret
call
clc
lock
pop
pop
hlt
pop
icebp
jle
ja
ins
jmp
out
jp
(bad)
shl
mov
sar
fnstenv
add
ja
aaa
pop
mov
and
jmp
jmp
or
or
int
clc
push
shr
mov
lahf
clc
and
out
iret
out
call
dec
xor
cmp
(bad)
in
pop
movs
jmp
icebp
add
jp
ins
adc
ret
cli
in
inc
ins
add
into
and
int
cmp
sbb
cmp
add
(bad)
(bad)
(bad)
call
pop
clc
push
movs
mov
inc
stc
push
xchg
adc
or
xor
sub
ja
sub
iret
icebp
cli
add
(bad)
(bad)
fist
cmps
mov
js
mov
mov
jmp
mov
(bad)
(bad)
jmp
std
inc
lock
pop
dec
pop
(bad)
retf
xchg
xchg
mov
adc
ja
hlt
and
(bad)
(bad)
ds
out
clc
repnz
push
les
clc
mov
pop
and
xor
cdq
dec
ins
inc
scas
jmp
imul
popa
jo
add
lds
dec
(bad)
call
xchg
push
push
aad
push
adc
es
gs
div
jne
clc
(bad)
(bad)
(bad)
(bad)
mov
jge
std
clc
into
mov
int
dec
or
push
fstp
scas
outs
cs
fcomip
(bad)
jmp
or
div
jo
outs
ja
lods
out
in
out
data16
movs
pop
cmc
(bad)
jmp
in
push
sbb
(bad)
clc
push
adc
(bad)
aad
or
(bad)
(bad)
(bad)
dec
int
push
add
mov
(bad)
std
ds
shl
repnz
sbb
ror
pop
mov
jmp
cmps
jbe
std
int3
out
out
push
jmp
lds
xor
mov
gs
int
cmp
and
(bad)
mov
jns
jns
sbb
sbb
add
(bad)
(bad)
jge
mov
imul
lods
or
cmc
lds
add
cmc
pop
xor
outs
scas
in
mov
jbe
jle
mov
sahf
inc
inc
xchg
(bad)
pop
xchg
inc
mov
inc
pop
movs
ins
dec
xor
call
or
and
ss
dec
fdivr
ret
(bad)
(bad)
call
retf
mov
shr
lock
adc
shl
in
(bad)
jg
jg
ins
test
adc
push
push
lods
fiadd
mov
ins
or
gs
xor
pop
hlt
cmp
addr16
mov
mov
leave
adc
or
jmp
fs
push
pop
std
aam
call
dec
cmc
sti
jmp
stos
fidivr
pxor
add
pop
pop
pop
not
and
or
iret
into
loopne
stos
push
dec
or
and
and
xchg
sub
inc
or
mov
jns
pop
inc
call
ja
outs
pop
cmps
rcl
jmp
mov
(bad)
(bad)
push
pop
and
rep
mov
jne
push
pop
ja
lock
mov
call
or
add
aaa
push
lock
aas
and
cmp
in
(bad)
(bad)
(bad)
jmp
cmp
in
xlat
and
aaa
cmp
popf
jo
nop
or
add
pop
das
cli
(bad)
(bad)
fidivr
js
jo
stos
not
jge
mov
jmp
(bad)
dec
hlt
mov
call
lahf
(bad)
ins
sub
sti
xor
(bad)
(bad)
push
push
fwait
xchg
or
cmp
es
xchg
adc
repz
std
adc
sbb
(bad)
call
ins
(bad)
int3
neg
aad
adc
test
and
xchg
imul
(bad)
(bad)
dec
mov
xchg
cwde
lods
std
cmp
mov
in
out
ins
xchg
or
(bad)
(bad)
(bad)
jmp
add
and
cmps
fist
movs
mov
xchg
out
sub
cmp
sub
pop
mov
pop
inc
cmp
push
mov
iret
and
(bad)
jg
jge
fs
pushf
int3
fdecstp
ins
test
adc
mov
jbe
out
or
sti
(bad)
(bad)
call
loop
xchg
loop
dec
push
into
sahf
adc
loop
xchg
sbb
mov
cmp
loop
mov
arpl
cwde
xchg
xor
xchg
add
mov
mov
pop
(bad)
(bad)
inc
cld
inc
jb
pop
(bad)
sub
std
aaa
aad
mov
and
pushf
ja
xor
ror
push
mov
cmp
popf
es
std
push
and
shr
fucomi
retf
or
out
mov
cld
or
adc
push
and
cmc
cmp
mov
stc
adc
rol
mov
and
inc
xchg
adc
(bad)
push
adc
xchg
add
ins
fs
sbb
mov
xchg
cmp
test
cmc
call
sbb
or
xchg
sub
call
or
sub
shl
ja
dec
(bad)
(bad)
(bad)
push
push
dec
jp
or
jae
and
sub
outs
inc
or
ud0
(bad)
jmp
mov
cmc
pop
or
retfw
add
adc
mov
cld
cmp
push
popa
dec
lds
adc
xlat
adc
xlat
jle
mov
adc
rol
mov
xchg
fnstsw
popf
xor
sbb
jmp
cmp
(bad)
push
sbb
es
push
fidiv
arpl
sbb
jg
and
shl
push
jmp
sbb
jge
jb
xor
push
cld
inc
pop
add
sbb
push
test
xor
xchg
mov
mov
push
test
pop
jle
adc
test
aaa
sub
adc
dec
mov
lods
cmp
out
fisubr
ss
adc
imul
mov
fs
(bad)
test
and
cld
sub
(bad)
mov
push
sub
test
and
xchg
ret
cmp
sti
push
lahf
adc
xchg
jns
pop
(bad)
add
add
push
lds
cmps
and
add
pop
lock
jg
sub
sbb
sbb
sbb
sbb
push
mov
mov
cmp
mov
(bad)
(bad)
(bad)
push
adc
cld
pop
hlt
enter
push
xor
mov
mov
(bad)
in
push
lods
into
pop
sub
loop
push
add
call
mov
inc
mov
cmp
or
xor
inc
mov
je
(bad)
popf
push
mov
sbb
clc
imul
add
repnz
jl
or
sbb
sti
ss
ds
xor
cmps
out
push
xchg
or
scas
cmp
xchg
sar
cmp
in
or
scas
push
cmps
adc
dec
sbb
loopne
mov
leave
jae
scas
mov
cmps
jecxz
std
add
mov
jle
jbe
out
or
xor
mov
xor
push
adc
mov
dec
lods
jmp
add
mov
adc
mov
repz
dec
mov
(bad)
(bad)
div
dec
jge
xor
(bad)
fwait
aad
xchg
test
sub
or
fcomip
(bad)
(bad)
stc
data16
mov
imul
and
jae
cmc
adc
push
jb
and
jnp
das
and
shr
jl
(bad)
cs
(bad)
(bad)
push
and
cmp
push
sub
push
push
retf
xlat
add
les
popf
xchg
sbb
dec
cmp
pop
scas
sbb
jne
retf
inc
inc
inc
or
test
jmp
rcl
cmp
sub
cwde
(bad)
pushf
mov
es
xchg
push
lock
mov
(bad)
jg
pop
mov
cli
leave
or
cmps
adc
out
pop
call
pop
data16
mov
push
call
cmc
sti
arpl
(bad)
sbb
test
cld
(bad)
(bad)
mov
add
in
xchg
push
cmp
or
mov
inc
hlt
pop
jg
adc
pushf
in
pop
daa
sbb
adc
jmp
(bad)
fbstp
xchg
cwde
(bad)
es
adc
ds
(bad)
(bad)
cmp
cdq
mov
mov
arpl
test
adc
out
mov
lds
fs
(bad)
(bad)
(bad)
jmp
shl
xchg
push
test
lds
sub
das
pop
mov
test
or
inc
in
jae
cmps
mov
jbe
pop
mov
pusha
mov
outs
imul
(bad)
(bad)
(bad)
call
mov
jae
sub
push
mov
or
nop
out
inc
js
push
test
fild
add
call
and
call
add
les
adc
clc
xchg
xchg
lock
ss
sub
or
mov
loop
outs
pushf
pop
sub
sub
xchg
adc
cmp
or
shl
enter
jp
shl
mov
(bad)
(bad)
(bad)
inc
ja
xchg
outs
dec
jne
test
sbb
enter
mov
(bad)
(bad)
(bad)
inc
lods
ins
aas
adc
popa
mov
(bad)
inc
inc
dec
out
jno
push
mov
pop
cmp
aas
mov
scas
fidiv
or
add
and
inc
xor
lods
mov
push
stos
inc
mov
mov
shr
inc
jb
fisubr
jb
jns
mov
js
(bad)
push
(bad)
inc
data16
pop
mov
push
cli
mov
sbb
neg
jmp
mov
shl
inc
test
je
adc
cdq
xor
(bad)
(bad)
(bad)
(bad)
jge
aaa
sahf
ret
sbb
inc
(bad)
das
rcr
sbb
icebp
sub
pop
mov
sti
jmp
scas
sahf
arpl
aaa
clc
sub
mov
sub
jl
pushf
je
aam
fcos
(bad)
(bad)
(bad)
ds
aad
je
adc
inc
sti
call
(bad)
sbb
xchg
push
call
pop
es
sbb
(bad)
push
test
mov
xchg
dec
jae
in
or
mov
ret
mov
call
ret
xor
inc
pop
push
cmp
cmp
test
ret
scas
(bad)
(bad)
(bad)
(bad)
mov
pop
adc
pop
aam
sub
jnp
cmp
inc
ret
mov
jmp
jmp
stos
leave
leave
push
inc
cmc
lock
jbe
das
fmul
mov
daa
in
in
(bad)
(bad)
inc
call
addr16
das
stc
sbb
mov
xchg
inc
(bad)
clc
call
shl
and
and
mov
adc
inc
stos
cmp
mov
jp
shl
cs
test
adc
mov
das
mov
(bad)
(bad)
(bad)
dec
push
clc
cwde
and
push
mov
aas
dec
inc
mov
dec
push
loop
push
mov
(bad)
(bad)
inc
mov
cmps
dec
xchg
(bad)
jns
push
out
into
repz
dec
mov
pop
lods
mov
pop
hlt
(bad)
cmp
mov
aas
scas
cmp
test
mov
fs
rep
cmp
(bad)
call
retf
in
cmps
add
or
repnz
xor
pushf
jmp
hlt
sbb
jle
dec
jg
(bad)
cmp
sbb
fisub
sub
inc
jecxz
sbb
and
ja
xchg
js
jae
(bad)
(bad)
dec
mov
xchg
retf
or
je
outs
cmps
ffree
fwait
inc
mov
cmp
inc
imul
pop
into
sub
dec
test
cmc
xor
fs
xor
mov
loop
push
sbb
in
enter
arpl
sub
arpl
(bad)
(bad)
dec
gs
fisttp
sub
and
push
sar
jle
rol
outs
cli
push
adc
mov
aas
arpl
out
mov
call
loope
sbb
sbb
aaa
sub
and
fs
movs
jecxz
ficomp
mov
jb
dec
loopne
sti
pcmpgtw
adc
movs
cmp
(bad)
(bad)
push
arpl
pop
push
jne
adc
mov
ins
lods
jecxz
jmp
xchg
hlt
or
xor
(bad)
(bad)
inc
hlt
push
inc
sub
cmp
sahf
jmp
inc
fidiv
sub
jns
add
adc
int3
add
dec
js
std
jg
sbb
cmps
es
dec
jnp
test
sti
cmp
fistp
mov
es
xor
sbb
jae
xor
imul
jne
fwait
and
dec
adc
int3
cmp
jmp
cli
ffreep
cmp
push
inc
cmp
xor
or
push
xor
ins
adc
aad
hlt
pop
imul
cmps
ja
(bad)
(bad)
(bad)
jns
xchg
arpl
push
push
xor
bound
push
mov
in
dec
daa
(bad)
(bad)
(bad)
inc
shl
xchg
ins
retf
pop
or
scas
jbe
movs
pop
clc
push
data16
les
and
inc
in
mov
(bad)
call
and
push
inc
fst
dec
mov
(bad)
dec
jge
and
je
mov
arpl
push
loopne
(bad)
mov
cmps
jg
aam
(bad)
out
stos
out
cmp
out
arpl
sbb
(bad)
dec
mov
movs
mov
idiv
mov
stos
in
ja
mov
(bad)
(bad)
inc
sbb
sub
sub
add
xchg
and
fnstsw
fcom
call
(bad)
outs
data16
cli
and
xchg
jp
and
dec
and
mov
inc
adc
(bad)
call
out
je
dec
js
icebp
jg
cmp
xchg
dec
fs
(bad)
in
scas
sub
ins
dec
mov
dec
or
xchg
sbb
or
lods
sbb
ret
cmp
sbb
mov
xchg
xchg
or
xchg
xchg
and
(bad)
mov
dec
and
and
xor
mov
pop
(bad)
(bad)
inc
idiv
aas
dec
ret
sbb
or
es
mov
add
xlat
es
call
call
sbb
cs
cmp
arpl
sar
add
pop
mov
jle
mov
mov
loope
inc
scas
inc
dec
push
mov
dec
cmp
jmp
push
jl
mov
sbb
push
inc
xchg
mov
add
cdq
pop
loop
call
std
fucomp
mov
push
aad
jo
mov
inc
dec
pop
(bad)
mov
cli
mov
(bad)
inc
mov
mov
fld
push
scas
mov
inc
xor
out
clc
(bad)
jmp
xchg
cmps
push
lods
ja
xchg
ja
adc
leave
push
push
in
push
adc
(bad)
(bad)
inc
mov
jbe
fwait
xchg
ds
dec
je
mov
push
ins
sub
push
xchg
inc
push
xor
fwait
(bad)
call
jge
push
jo
mov
fs
jne
cmp
or
pop
loop
dec
pop
add
fdivr
add
mov
jg
mov
add
ret
fwait
dec
mov
ss
test
(bad)
(bad)
(bad)
dec
out
push
rol
out
or
xchg
fidivr
nop
cmc
ret
inc
aas
(bad)
shr
(bad)
inc
(bad)
stos
ds
mov
call
push
jl
adc
(bad)
(bad)
(bad)
jge
adc
aad
adc
mov
sbb
cmp
shr
ja
add
xor
(bad)
(bad)
jmp
mov
xchg
inc
xor
mov
ds
or
dec
popa
(bad)
inc
push
xor
jns
mov
push
cmp
enter
xor
fcmovnu
movs
and
or
ds
lods
xor
push
xchg
pop
inc
lods
fucompp
(bad)
(bad)
push
lea
clc
xor
cdq
sub
jecxz
fcom
jae
push
jne
xchg
in
mov
mov
mov
cwde
jno
(bad)
in
jmp
aas
cli
es
push
mov
adc
adc
and
add
pop
push
sar
call
mov
clc
popf
sbb
mov
cs
in
(bad)
(bad)
(bad)
jmp
pop
data16
and
nop
xor
(bad)
mov
xor
lock
(bad)
call
sub
neg
and
fwait
sbb
ss
popa
test
jg
push
ret
mov
mov
mov
(bad)
(bad)
(bad)
fild
and
mul
mov
outs
pop
jns
sbb
pop
add
pop
mov
(bad)
(bad)
jmp
loope
cmp
popf
jbe
pop
push
jmp
(bad)
aad
xchg
sbb
sbb
retf
sbb
pop
mov
(bad)
(bad)
jmp
(bad)
(bad)
out
(bad)
ja
shl
cmp
sub
xchg
fnstenv
sub
push
push
cdq
call
fcmovnu
mov
adc
add
mov
pop
add
(bad)
(bad)
jg
cmp
pop
aaa
pop
in
test
mov
pop
mov
adc
loope
mov
lock
hlt
mov
xchg
add
or
xor
pop
dec
loopne
jge
lea
stos
adc
(bad)
(bad)
(bad)
push
mov
xchg
(bad)
(bad)
pushf
mov
call
outs
pusha
pop
(bad)
ja
inc
xor
xlat
dec
(bad)
(bad)
(bad)
inc
repz
or
mov
or
sub
lahf
cmp
aad
jecxz
gs
(bad)
(bad)
jmp
test
fnstsw
and
aas
xor
lahf
mov
jnp
mov
xor
push
ss
sahf
imul
lock
(bad)
mov
out
push
je
out
rcr
jo
mov
test
fdivrp
cs
(bad)
(bad)
fbld
outs
push
outs
mov
movs
dec
gs
or
outs
cmp
jne
(bad)
(bad)
(bad)
dec
fwait
mov
test
in
jb
pop
cmps
(bad)
cmc
fwait
adc
mov
rcr
sar
dec
into
push
push
sub
addr16
out
aad
je
mov
or
jp
popf
icebp
dec
add
(bad)
(bad)
jg
ss
cmc
nop
or
or
jmp
push
jbe
pop
cmp
lods
sub
mov
fstp
call
push
add
mov
mov
(bad)
out
nop
pop
sub
push
inc
out
xor
fild
cli
jmp
daa
push
int
mov
mov
ret
loope
out
mov
cdq
cwde
adc
inc
or
add
xchg
xchg
imul
sbb
test
dec
(bad)
dec
in
mov
inc
sbb
adc
movs
fs
pop
and
adc
push
ds
imul
(bad)
jg
fmul
push
mov
cld
push
fisub
xchg
and
stc
out
arpl
retf
cmp
pop
shl
dec
lods
in
fist
push
jmp
mov
(bad)
jg
(bad)
ja
les
xchg
add
add
mov
xor
les
clc
(bad)
mov
xchg
pop
sub
cmp
mov
call
add
mov
add
or
ja
cmc
(bad)
push
retf
jg
or
je
mov
cmps
push
cld
jo
mov
aad
mov
mov
push
push
clc
sahf
mov
push
mov
sub
adc
jb
push
pop
jo
or
bound
into
cmc
mov
ja
(bad)
(bad)
jmp
bound
ds
mov
add
cmp
jge
fild
add
or
out
sub
sbb
push
pop
call
xchg
mov
(bad)
(bad)
jmp
pop
jne
inc
sahf
gs
sub
sbb
cmc
sbb
jecxz
xchg
and
mov
add
jnp
xchg
cld
dec
mov
stos
mov
mov
push
cld
movs
jo
(bad)
adc
push
je
fwait
or
fnstcw
jg
fnsave
sbb
inc
daa
mov
adc
or
(bad)
(bad)
(bad)
call
xlat
dec
xchg
push
cmp
jmp
inc
pop
jp
cmp
call
(bad)
xor
mov
jb
(bad)
(bad)
(bad)
call
or
push
dec
lds
push
dec
xor
iret
pop
jne
clc
mov
(bad)
push
cs
in
shl
push
ds
outs
clc
or
popf
(bad)
(bad)
jmp
call
mov
jg
xlat
clc
cmp
sub
(bad)
inc
cdq
das
jne
pop
sub
std
shr
cmp
mov
test
adc
loop
push
and
(bad)
(bad)
inc
mov
mov
push
mov
cmc
inc
ret
idiv
push
pop
jnp
sbb
push
jg
xchg
dec
push
(bad)
xchg
xor
cmc
add
adc
mov
cmp
mov
mov
xchg
inc
and
call
(bad)
(bad)
(bad)
(bad)
(bad)
push
call
fadd
in
jae
and
xor
(bad)
test
inc
(bad)
mov
aam
push
cdq
sbb
cmp
shl
cli
les
push
mov
push
cmp
aaa
je
hlt
xchg
sbb
xor
adc
dec
(bad)
call
clc
and
repz
cmp
inc
out
push
shl
mov
(bad)
(bad)
call
clc
inc
pop
or
jno
pop
dec
xor
or
adc
retf
clc
(bad)
sbb
adc
dec
popa
dec
cwde
push
int3
lds
cmps
clc
ins
pop
xor
scas
push
int
(bad)
(bad)
jmp
sti
xor
cld
sub
and
dec
pop
(bad)
in
or
fisttp
ret
(bad)
call
add
or
loop
aaa
ss
or
or
(bad)
clc
dec
ror
call
xchg
sbb
test
push
lock
call
(bad)
and
jo
sti
sub
mov
pop
test
add
jge
cmp
jg
push
(bad)
push
cli
lea
js
test
sahf
xor
sbb
ja
(bad)
aad
es
mov
ficomp
add
mov
call
push
xchg
xchg
ja
cmps
mov
cmc
sbb
in
idiv
mov
fnstsw
xchg
in
in
cmp
mov
or
mov
retf
push
ds
jno
iret
jle
movs
mov
(bad)
jmp
mov
dec
pop
xchg
or
mov
(bad)
(bad)
(bad)
inc
sbb
mov
stos
ficom
jno
mov
inc
aad
arpl
in
(bad)
std
dec
cwde
or
cmc
xor
ins
mov
push
inc
adc
add
bound
and
push
popa
out
cmp
(bad)
mov
jne
mov
cmp
stos
fyl2xp1
add
jmp
cld
(bad)
cmp
call
push
dec
fidiv
push
fisub
mov
inc
ret
cmc
(bad)
call
add
mov
jb
inc
pop
aas
scas
clc
push
push
lock
inc
jmp
and
pop
(bad)
cmc
jge
addr16
cld
(bad)
fld
hlt
xor
and
cmp
push
push
jbe
cmp
call
push
dec
cmp
adc
adc
lea
mov
mov
push
jmp
pop
mov
mov
jbe
push
cmp
adc
scas
jb
mov
push
or
push
mov
push
mov
nop
push
imul
(bad)
cli
cld
test
cmp
xor
push
mov
jae
lods
cmp
pop
out
sub
(bad)
fcomip
fwait
mov
inc
jo
movs
mov
cmc
sbb
mov
xchg
std
(bad)
(bad)
(bad)
ror
push
fimul
add
xor
pop
cmp
hlt
(bad)
jg
call
fld
push
or
pop
js
lods
sbb
(bad)
(bad)
call
pop
mov
adc
js
add
es
push
xor
test
(bad)
(bad)
call
sub
call
test
fiadd
cli
aad
lods
push
ja
inc
movs
mov
cld
(bad)
call
stos
cli
pop
or
fdiv
xor
jge
push
cwde
adc
(bad)
jg
cwde
jnp
cmp
cli
sbb
or
jbe
pop
xchg
xlat
xchg
fidivr
xor
add
inc
jge
inc
mov
dec
hlt
or
repz
popf
xlat
push
pop
jbe
cmp
aaa
xchg
call
inc
call
stos
pop
or
add
(bad)
cmp
jge
mov
pop
cmc
(bad)
(bad)
in
pop
cmc
cld
mov
pop
jno
jae
push
jns
mov
push
repz
mov
cmp
jns
sub
aaa
jp
mov
aad
and
scas
outs
aaa
js
mov
xor
js
push
jbe
jne
xchg
nop
or
jmp
repz
cmc
xor
das
not
mov
xchg
cmp
or
aad
dec
sub
xor
or
xor
fmul
mov
cmc
test
xor
xor
and
jle
test
cmc
add
call
xor
adc
or
call
outs
(bad)
jg
mov
jb
fnstenv
pop
not
mov
or
je
jno
cmc
outs
pop
lock
push
fstp
jae
sub
call
in
dec
mov
test
cmc
test
ja
xor
shr
(bad)
sub
xor
jae
sbb
ror
jne
inc
fnstcw
and
mov
add
call
pop
cwde
pop
div
or
jno
and
shl
dec
cmp
push
aaa
aaa
out
(bad)
(bad)
mov
inc
sti
push
icebp
clc
scas
xor
mov
int
ror
(bad)
dec
lods
inc
push
(bad)
(bad)
(bad)
push
scas
or
mov
fpatan
inc
(bad)
loope
sbb
mov
loop
add
iret
xor
shr
neg
push
jmp
clc
dec
dec
jns
(bad)
(bad)
(bad)
mov
jbe
sub
mov
cli
push
cmp
and
add
je
dec
stc
jmp
in
scas
(bad)
(bad)
call
call
loopne
ins
outs
pop
jmp
add
fstp
out
add
ret
cmp
dec
lahf
sbb
(bad)
(bad)
out
pop
inc
sub
jb
loop
adc
mov
clc
cld
xchg
xchg
mov
inc
bound
(bad)
push
pushf
xchg
xor
cmp
mov
(bad)
(bad)
call
mov
shl
pusha
test
mov
push
loope
push
lods
and
pop
cmp
push
jne
shl
(bad)
jne
mov
stos
lds
and
jg
(bad)
cmp
inc
dec
test
push
jne
call
cmps
(bad)
out
adc
rol
inc
xor
clc
adc
xor
push
push
(bad)
xor
jecxz
fs
mov
(bad)
mov
aaa
push
adc
rcl
jge
out
icebp
(bad)
jg
sbb
push
hlt
and
cmp
fadd
mov
cmp
outs
sti
das
mov
add
call
mov
jge
call
adc
inc
xor
sahf
cmp
push
ds
aaa
pop
hlt
mov
push
and
mov
push
adc
scas
adc
(bad)
xchg
adc
nop
cmp
and
arpl
and
(bad)
jmp
aad
jne
call
cmp
repz
(bad)
inc
jle
adc
cmp
cmp
fsub
push
xchg
(bad)
out
clc
stos
add
ror
mov
rol
cmp
push
jno
fnstcw
arpl
sub
xchg
xchg
cmp
cmps
add
sti
aad
arpl
push
cmp
clc
std
ud0
lea
cmps
nop
sub
cld
hlt
jo
jmp
(bad)
(bad)
call
cmp
ss
mov
mov
(bad)
fnstenv
rol
(bad)
push
push
clc
add
lahf
add
clc
mov
xchg
ja
xchg
jns
clc
les
daa
pop
fcomp
adc
(bad)
(bad)
(bad)
cmp
push
mov
test
inc
jle
or
in
dec
sar
and
inc
push
mov
mov
or
jmp
popa
lods
out
(bad)
(bad)
(bad)
jmp
clc
pop
out
leave
lds
sub
mov
ins
or
push
sbb
fsub
sub
in
call
inc
mov
and
aam
leave
dec
cmp
sbb
icebp
xchg
ja
(bad)
(bad)
(bad)
(bad)
call
pusha
rcr
mov
mov
ret
push
fisubr
pop
js
stos
in
(bad)
(bad)
jmp
xchg
fs
bound
sub
cmp
call
push
sub
stos
jmp
lock
sbb
(bad)
(bad)
call
sti
cmps
imul
add
xor
xchg
cmp
movs
mov
mov
(bad)
in
mov
ret
xor
xchg
pushf
sbb
add
loopne
add
(bad)
jg
(bad)
clc
push
cmps
cli
sbb
clc
fcom
and
(bad)
das
push
jae
ins
hlt
jno
(bad)
(bad)
(bad)
fidivr
loope
ins
test
jl
cli
mov
js
std
pop
ja
pop
inc
sbb
jp
(bad)
(bad)
(bad)
dec
ins
mov
hlt
mov
stos
movs
pop
loop
repnz
clc
sub
outs
mov
inc
mov
(bad)
jg
dec
clc
dec
cmp
and
repz
pop
adc
xchg
push
or
leave
add
mov
sbb
(bad)
adc
loope
ja
sbb
js
sbb
sub
test
aaa
clc
mov
(bad)
xchg
pop
cmp
int
mov
mov
movs
call
je
data16
mov
xchg
pop
jmp
(bad)
sti
or
sub
and
div
pop
ja
pusha
loopne
out
js
add
sub
enter
stos
dec
mov
cdq
out
cmps
mov
fldenv
mov
mov
or
inc
mov
popa
clc
and
xor
pusha
jecxz
pusha
and
cmp
jmp
and
inc
mov
hlt
ins
mov
(bad)
(bad)
jg
hlt
or
std
fdivr
fwait
cmp
jns
imul
ds
(bad)
les
jmp
push
into
(bad)
jmp
mov
add
xchg
retf
aam
clc
fwait
aam
push
pop
xchg
(bad)
gs
jnp
es
jmp
stc
add
loop
add
jg
cld
shl
clc
mov
xchg
scas
jl
sub
clc
(bad)
(bad)
call
imul
xor
clc
xchg
dec
pop
push
and
mov
push
xchg
inc
scas
xor
mov
out
imul
cmps
fcmove
(bad)
(bad)
call
mov
gs
cdq
sub
and
test
inc
fldenv
(bad)
(bad)
(bad)
jmp
loop
dec
mov
loop
clc
test
rol
gs
icebp
cmps
int
hlt
jmp
(bad)
pop
cwde
or
push
push
cs
clc
push
das
adc
clc
ins
shl
ja
jno
jbe
mov
(bad)
(bad)
(bad)
dec
inc
or
dec
add
push
lods
(bad)
scas
stc
loopne
adc
add
mov
(bad)
aad
inc
xor
fcmovnb
(bad)
inc
lods
cmp
std
mov
fidiv
scas
cli
mov
into
mov
enter
pusha
repz
(bad)
(bad)
(bad)
mov
pop
and
aad
add
std
sbb
shl
add
ins
mov
repz
mov
out
ins
sti
pusha
add
sar
and
aad
aam
push
jns
xor
(bad)
(bad)
(bad)
push
cs
imul
fld
xor
aaa
sub
or
push
enter
(bad)
dec
sub
retf
(bad)
push
addr16
cmp
or
inc
(bad)
(bad)
(bad)
call
xchg
out
fidivr
pavgb
div
cli
sar
cld
data16
fsub
mov
(bad)
(bad)
(bad)
(bad)
jg
sub
daa
cmp
fiadd
inc
jbe
(bad)
out
sbb
adc
xchg
xchg
push
(bad)
(bad)
call
fincstp
aad
pushf
outs
out
fnsave
xchg
adc
mov
jno
add
push
mov
xor
das
std
mov
outs
push
in
daa
cmc
sar
adc
pop
arpl
(bad)
inc
pushf
jmp
mov
rcr
cmps
int3
clc
movs
scas
sahf
popf
pop
(bad)
fdivr
aam
jg
(bad)
fcomip
test
data16
push
in
stc
push
cmc
xchg
or
mov
(bad)
jmp
div
dec
mov
add
icebp
rdmsr
mov
es
in
ror
into
int
sbb
aaa
cld
or
ja
jo
push
or
enter
out
push
inc
sar
dec
or
les
std
sub
or
cli
enter
inc
mov
cmc
cli
jmp
sub
inc
(bad)
(bad)
mov
mov
pop
ins
push
(bad)
cmp
jge
dec
push
xor
xor
bound
mov
dec
stos
and
nop
jb
(bad)
jg
dec
std
(bad)
bound
mov
cmp
adc
adc
cli
push
pop
inc
(bad)
call
mov
mov
int3
in
repz
js
lods
std
cmp
jb
sbb
cmp
out
dec
arpl
pop
sub
push
cwde
sbb
add
dec
inc
mov
xchg
cwde
fild
or
add
gs
jge
cmpxchg
(bad)
inc
or
sbb
pop
inc
cmc
(bad)
out
test
and
pop
inc
pop
scas
cli
dec
or
hlt
imul
movs
fld
scas
adc
push
pop
cli
push
mov
mov
dec
aad
popa
mov
or
call
hlt
fld
sar
or
stos
bound
and
push
inc
mov
ja
(bad)
mov
sbb
xor
dec
jne
push
pushf
call
icebp
(bad)
(bad)
(bad)
mov
test
je
clc
fs
push
popa
imul
(bad)
call
imul
mov
nop
adc
dec
rol
xor
cli
dec
(bad)
(bad)
jmp
mov
sbb
test
repnz
adc
fwait
add
std
mov
clc
dec
call
in
(bad)
inc
mov
hlt
ins
jmp
arpl
enter
(bad)
(bad)
jmp
stos
push
jecxz
mov
jle
lock
add
mov
xor
test
adc
mov
push
fidivr
sub
mul
cmps
push
les
dec
xchg
xchg
popf
fdivr
cmp
stos
call
mov
inc
jmp
ss
test
iret
(bad)
(bad)
out
cli
sub
stos
push
xor
test
lods
inc
adc
push
(bad)
(bad)
fsub
cld
out
dec
dec
jns
and
dec
and
(bad)
movs
retf
jcxz
sbb
pop
(bad)
fcomip
jmp
inc
sbb
icebp
or
mov
ror
and
fst
jg
push
mov
test
and
stos
call
xchg
sbb
(bad)
push
clc
dec
mov
(bad)
xor
xlat
pop
mov
sti
and
inc
hlt
add
cmp
clc
mov
or
sar
call
add
pop
mov
dec
out
jge
mov
dec
in
jae
outs
dec
mov
sub
push
fwait
cwde
or
(bad)
mov
push
test
in
xchg
pop
sbb
clc
loopne
and
sub
(bad)
mov
in
call
nop
sbb
lods
mov
loopne
fsub
in
cwde
shl
mov
int
iret
bound
xor
je
jg
jmp
push
xchg
mov
mov
cmp
arpl
mov
icebp
(bad)
jmp
gs
aaa
sbb
clc
(bad)
int3
cli
test
clc
dec
add
xor
mov
xor
mov
out
xor
jae
call
popa
test
jge
and
dec
hlt
dec
jns
mov
cmp
in
jae
push
imul
clc
(bad)
push
push
sbb
pop
call
and
xchg
dec
and
push
imul
pop
push
(bad)
out
into
or
mov
loope
(bad)
js
adc
pop
retf
jne
cmp
add
fnsave
mov
(bad)
(bad)
inc
mov
pop
aam
cwde
sub
xchg
cli
lock
mov
std
sbb
repz
(bad)
(bad)
jmp
loope
mov
pop
imul
mov
dec
sub
aam
in
std
out
movs
sub
jo
push
(bad)
jmp
push
cmp
mov
jns
mov
fcom
std
add
and
mov
aad
jnp
outs
(bad)
(bad)
(bad)
fnsave
jp
out
sti
mov
pop
js
js
div
mov
sbb
mov
loop
(bad)
js
jb
push
adc
xor
mov
dec
in
icebp
inc
sbb
retf
inc
aad
jmp
test
dec
clc
fldl2t
adc
pop
cwde
(bad)
adc
sbb
int3
push
xchg
hlt
jg
inc
cmp
addr16
(bad)
ror
(bad)
(bad)
(bad)
jl
sub
mov
dec
aam
mov
jb
or
call
xchg
adc
(bad)
inc
jp
jae
mov
cmp
les
or
push
xor
add
push
push
xchg
add
ins
sub
mov
and
clc
add
(bad)
(bad)
(bad)
(bad)
jle
mov
and
test
gs
rol
hlt
sub
jo
cmp
loope
jnp
(bad)
mov
call
idiv
(bad)
pop
mov
cmp
adc
sbb
(bad)
jmp
cli
jecxz
adc
ja
pop
mov
sub
sbb
clc
(bad)
call
(bad)
test
adc
pushw
aas
adc
dec
sub
ins
xchg
sub
(bad)
(bad)
ds
in
daa
pop
sub
mov
jge
fprem
mov
(bad)
jg
cmps
clc
adc
mov
std
or
xor
lods
sti
dec
sbb
gs
push
loopne
ret
mov
adc
inc
ret
fisub
adc
outs
pop
jg
and
rcr
dec
xlat
std
mov
or
(bad)
push
push
mov
sub
(bad)
stc
dec
push
pop
dec
mov
icebp
call
mov
rol
lods
and
jb
repz
daa
push
pop
lock
jmp
cli
in
cmp
(bad)
(bad)
jmp
cmp
shr
push
sbb
ret
pop
std
(bad)
inc
pop
push
scas
ret
clc
jne
jmp
fadd
mov
mov
int
pop
icebp
fcomip
jo
and
mov
addr16
cli
sbb
loopne
call
fcmovnu
clc
jns
dec
int3
std
lea
clc
mov
into
inc
dec
sub
hlt
clc
(bad)
call
rol
mov
and
xchg
jle
cmp
and
std
cs
mov
add
(bad)
and
mov
xor
push
jmp
and
adc
(bad)
jg
aam
push
int3
push
not
das
push
aas
aad
shl
sbb
mov
cmc
cmc
test
push
adc
pop
sbb
bswap
clc
mov
mov
jo
pusha
add
add
rol
cld
mov
test
outs
je
pusha
call
pop
shl
fild
mov
pusha
mov
pop
shr
test
pop
lods
cmp
and
add
push
(bad)
retf
pop
leave
jne
xor
mov
inc
jbe
jl
(bad)
(bad)
mov
pop
data16
and
mov
adc
xor
in
lock
into
cmp
sar
(bad)
(bad)
jmp
faddp
pusha
cmp
pop
push
add
add
mov
pushf
xchg
data16
dec
push
xchg
jns
cmp
(bad)
(bad)
jmp
jne
xor
adc
retf
imul
out
lock
test
aad
nop
or
dec
xchg
test
xor
mov
mov
hlt
call
push
stos
aaa
jecxz
aad
jns
mov
jmp
inc
adc
mov
sbb
mov
mov
pop
pop
mov
inc
sar
mov
jmp
inc
or
inc
push
jbe
mov
adc
or
mov
push
adc
pushf
call
sbb
in
call
aam
xchg
cs
mov
fmul
pop
outs
outs
mov
xor
or
inc
shl
pop
imul
cmp
mov
icebp
mov
lods
dec
(bad)
(bad)
jmp
xor
ja
dec
test
pop
mov
cmp
sbb
pop
inc
cmp
icebp
ins
in
jbe
and
mov
mov
rcr
out
aas
jbe
mov
xlat
pop
and
sahf
in
add
jmp
ins
inc
mov
inc
xor
add
sbb
(bad)
inc
ret
sbb
mov
jno
repnz
cli
and
pop
fsubr
adc
sub
aas
adc
icebp
icebp
push
cld
fistp
repz
push
stc
jmp
(bad)
(bad)
fistp
outs
sbb
jle
loopne
movs
out
or
cmp
or
imul
ins
mov
add
xor
jmp
fild
sub
retf
jae
data16
sub
or
jmp
loop
dec
adc
or
fisttp
popa
rcr
clc
(bad)
(bad)
mov
repnz
mov
mov
fild
jbe
inc
(bad)
dec
(bad)
(bad)
jmp
pop
ss
out
push
dec
and
jae
mov
jmp
sti
inc
add
add
dec
clc
sub
out
pop
in
(bad)
out
xchg
cmc
mov
pop
pushf
loope
test
mov
mov
(bad)
jmp
sub
pop
jnp
jecxz
movs
or
push
loop
and
iret
fld
je
mov
or
mov
aaa
setg
mov
mov
jge
ret
and
call
inc
ret
sbb
mov
xor
pop
jmp
std
stc
dec
(bad)
int
inc
mov
pop
inc
mov
out
pop
sbb
out
inc
imul
fnsave
enter
loop
mov
js
stos
inc
repz
xor
cmp
sbb
(bad)
std
inc
aam
ret
(bad)
dec
xchg
test
sbb
cmp
(bad)
into
nop
xor
push
imul
sar
xor
xor
or
mov
scas
cli
(bad)
push
push
cdq
fdivr
shr
arpl
mov
jns
xchg
sar
(bad)
jmp
ficomp
inc
dec
xor
sbb
das
and
mov
cmp
fwait
xchg
jp
inc
mov
(bad)
(bad)
(bad)
sbb
add
or
jl
adc
outs
mov
ficom
js
dec
loopne
test
dec
pushf
and
dec
lods
push
xchg
sub
not
mov
stos
sbb
imul
sbb
dec
add
dec
jmp
les
push
mov
ds
inc
rcr
fisttp
iret
cmp
mov
sbb
sbb
shl
shr
(bad)
lahf
inc
cld
mov
or
add
pop
xor
into
xchg
call
shl
push
nop
sub
movs
push
mov
(bad)
push
fadd
adc
jb
push
cli
mov
arpl
and
(bad)
(bad)
(bad)
push
arpl
sub
xor
or
ins
pop
jbe
cli
push
mov
mov
cli
ins
add
test
loope
sar
inc
fdiv
(bad)
and
inc
js
stos
in
in
rcl
shr
les
dec
pop
rol
inc
sbb
pop
enter
int
inc
loop
jg
je
add
xor
adc
out
mov
call
sub
aaa
push
cmp
jns
in
call
jmp
inc
call
push
cmp
sar
add
out
loop
hlt
(bad)
push
adc
outs
xor
inc
dec
mov
pop
lea
stos
or
inc
add
jmp
(bad)
jae
xchg
imul
sbb
xor
inc
lds
enter
lock
pushf
retf
jnp
(bad)
call
call
fld
pusha
imul
(bad)
(bad)
(bad)
jmp
mov
retf
cmp
push
lds
ficomp
mov
xor
inc
das
cli
rcr
xchg
bound
cld
add
jb
shl
and
sbb
cmp
dec
les
sbb
dec
mov
movs
pop
stc
jmp
mov
mov
jg
sbb
frstor
aas
mov
xchg
retf
push
jl
or
(bad)
jmp
fs
push
lahf
arpl
clc
shl
xor
and
popf
mov
adc
mov
test
gs
mov
mov
jl
ins
or
add
mov
mov
adc
adc
repz
in
(bad)
mov
out
(bad)
pusha
jb
push
and
repz
xchg
jp
jle
mov
mov
out
(bad)
(bad)
jmp
repz
jo
or
repnz
cli
inc
and
mov
out
into
fisub
mov
cmp
iret
pop
pop
loopne
out
fwait
mov
adc
fmul
repnz
ds
mov
mov
outs
dec
mov
(bad)
jg
push
ret
scas
xchg
push
xchg
adc
dec
rol
add
pop
jbe
ficom
mov
(bad)
(bad)
(bad)
sti
ins
mov
nop
adc
repnz
jge
pop
dec
mov
xor
adc
(bad)
(bad)
call
(bad)
and
xor
movs
mov
fldenv
jns
dec
sbb
pushf
mov
retf
mov
cmps
ja
lods
and
mov
(bad)
(bad)
(bad)
(bad)
call
ror
xchg
(bad)
xchg
push
pop
xlat
push
(bad)
adc
fstp
cmp
ins
pop
out
cwde
js
pop
inc
sbb
ror
push
add
fcomp
push
xchg
out
les
stos
dec
(bad)
fdivr
mov
pop
mov
je
ret
mov
xor
inc
pop
push
fs
es
out
imul
xor
push
cmp
mov
xor
outs
jg
std
xchg
jnp
pop
mov
clc
les
sti
out
dec
cld
dec
cmp
aaa
adc
rcl
mov
adc
cmps
push
jp
or
stc
stos
push
cmps
mov
pusha
test
xchg
mov
in
pop
dec
loop
sub
xor
ds
js
sbb
(bad)
sub
sbb
mov
sub
hlt
data16
jl
inc
mov
cmp
cmp
(bad)
call
stos
je
pop
test
loope
dec
aad
mov
(bad)
retf
fiadd
push
xor
(bad)
mov
pop
xor
retf
fnstcw
mov
out
hlt
popf
and
jp
cmps
cmps
mov
(bad)
inc
test
data16
xchg
bound
test
xor
lods
xchg
push
push
fdivr
(bad)
push
retfw
pusha
jns
iret
test
xor
sub
sub
xchg
dec
pop
jg
(bad)
call
gs
xchg
ins
loope
xchg
ins
aam
addr16
aas
test
jmp
dec
xchg
or
sub
ret
jg
sti
jp
test
xchg
push
outs
(bad)
jmp
dec
aam
mov
lods
ss
div
test
(bad)
mov
xor
cmp
(bad)
daa
(bad)
push
pop
pop
std
mov
xchg
jbe
bound
cli
jecxz
repz
dec
add
fcom
loopne
cmp
outs
leave
shl
fs
add
jmp
(bad)
fdiv
adc
pop
(bad)
(bad)
(bad)
(bad)
mov
call
movs
sbb
add
in
jns
(bad)
xchg
mov
(bad)
call
test
jmp
inc
xchg
in
jne
mov
sub
xor
mov
in
pop
mov
rcl
js
bound
jmp
mov
fbstp
dec
fnstsw
mov
mov
mov
inc
cmp
push
loope
icebp
ins
ffree
pop
test
mov
xor
xor
add
jl
push
sub
cmp
(bad)
(bad)
in
pop
mov
or
jmp
jg
inc
cwde
(bad)
repz
cld
(bad)
call
movs
popa
xchg
daa
adc
jl
push
retf
dec
xchg
ins
push
ins
xor
xor
jg
push
or
or
jmp
loop
jo
pop
inc
mov
jl
clc
loope
jne
iret
jmp
(bad)
(bad)
(bad)
call
movs
xchg
xor
jp
pop
jne
aaa
outs
mov
dec
sbb
inc
adc
outs
push
jp
arpl
es
(bad)
(bad)
fist
jl
and
push
ja
xchg
hlt
test
jb
cmp
sub
aam
inc
mov
(bad)
(bad)
jmp
and
sub
sbb
js
and
pop
lock
dec
mov
ss
xchg
xchg
sti
icebp
loopne
push
stc
sbb
imul
adc
push
mov
(bad)
(bad)
jmp
popf
add
aaa
ja
lods
aas
mov
cmp
iret
mov
xchg
ds
fistp
cli
mov
sbb
mul
leave
mov
pop
fwait
(bad)
(bad)
(bad)
call
das
mov
mov
stc
rol
pop
dec
mov
ret
add
xor
inc
dec
loop
jg
les
jmp
mov
jge
aaa
cmps
lea
fcmovne
jle
stos
lahf
(bad)
mov
ror
mov
retf
dec
xchg
pop
out
(bad)
fbld
ror
shr
sar
pop
inc
inc
das
test
mov
push
cmp
xchg
fst
jne
loopne
retf
xor
mov
movs
test
lods
push
(bad)
jmp
or
adc
push
stos
xchg
xor
fs
add
inc
(bad)
(bad)
dec
pusha
mov
jle
pop
loop
aas
push
out
mov
(bad)
(bad)
(bad)
mov
dec
mov
call
and
dec
mov
ror
pop
sbb
out
je
mov
pop
add
retf
nop
jnp
mov
dec
(bad)
dec
push
mov
and
add
je
mov
or
xchg
pop
push
repz
(bad)
inc
mov
push
and
add
pop
in
rcr
push
inc
in
les
sbb
sub
add
(bad)
cld
cmp
(bad)
push
xchg
mov
xchg
pop
xlat
cmps
adc
(bad)
dec
repnz
cdq
scas
push
(bad)
mov
popa
or
fiadd
pushf
push
mov
mov
add
(bad)
out
cli
das
data16
add
jecxz
repz
aad
cmp
mov
mov
stc
call
mov
fcom
daa
xchg
add
push
sbb
aad
ja
adc
dec
call
jl
dec
gs
ja
jns
cs
(bad)
(bad)
(bad)
aas
pop
(bad)
mov
lea
lock
mov
push
jmp
jno
bound
idiv
in
(bad)
inc
bound
jbe
push
add
loope
cmp
jmp
inc
inc
sub
cmps
lea
inc
sbb
in
sar
mov
xchg
xor
sub
call
movs
sbb
js
jb
(bad)
mov
push
cld
out
into
pop
push
(bad)
dec
popf
add
pop
(bad)
jle
push
aaa
jecxz
or
add
mov
hlt
(bad)
dec
mov
adc
push
inc
imul
fwait
div
push
push
inc
sub
inc
jb
iret
shr
sahf
in
fcomip
pop
lock
ja
fsub
mov
add
dec
sbb
sbb
pushf
and
(bad)
cld
jle
std
call
jle
pushf
jmp
cmp
cmp
inc
or
(bad)
call
cmps
pop
inc
bound
push
or
shl
lock
cmp
mov
rol
cld
(bad)
dec
dec
scas
cmovbe
inc
cdq
mov
push
sub
mov
and
ss
scas
xchg
sbb
loopne
ror
adc
(bad)
dec
mov
pop
cmp
sbb
sbb
mov
in
call
test
push
mov
mov
cld
test
inc
mov
fsubr
(bad)
ror
mov
idiv
mov
ficom
and
adc
push
loopne
fwait
dec
call
jecxz
sbb
sbb
in
sbb
pop
adc
cmp
inc
xchg
xchg
add
(bad)
sbb
out
out
or
fbstp
shl
xchg
add
mov
std
out
stc
xor
ja
push
mov
pop
cmp
xchg
add
enter
inc
push
mov
imul
and
add
inc
xchg
push
lock
(bad)
pop
xchg
sub
scas
ret
ins
jle
cmps
pop
mov
mov
out
outs
inc
(bad)
shl
mov
int3
(bad)
iret
inc
xchg
mov
out
mov
cdq
mov
rcr
cmp
or
cs
sub
push
(bad)
mov
mov
inc
dec
ret
ja
mov
pop
push
sbb
loopne
inc
jg
sbb
stc
int
mov
loopne
push
repnz
push
mov
mov
xchg
xchg
xchg
ret
and
pusha
(bad)
(bad)
push
pushf
mov
pop
ror
into
inc
mov
push
add
pop
jp
and
sbb
inc
(bad)
add
shl
out
dec
jae
addr16
das
enter
das
jo
push
stos
mov
movs
mov
inc
rcr
std
xchg
xchg
xchg
adc
rol
push
(bad)
sar
pop
xchg
cmc
add
rol
pop
push
inc
jb
jp
pop
(bad)
in
sbb
idiv
les
movs
inc
fwait
mov
mov
pop
pusha
ficom
(bad)
ror
cdq
aas
repnz
pop
sub
dec
mov
int
loop
loopne
enter
push
shr
sahf
inc
in
inc
mov
adc
inc
scas
(bad)
push
ret
rol
sbb
lahf
inc
push
std
gs
aad
loope
inc
mov
frstor
mov
shl
dec
push
push
not
out
adc
(bad)
(bad)
push
fst
loopne
fadd
mov
shl
out
test
cwde
outs
inc
(bad)
(bad)
(bad)
(bad)
push
mov
and
loope
inc
and
(bad)
popf
jecxz
mov
cmp
add
add
(bad)
not
xor
mov
int3
pop
sub
(bad)
(bad)
(bad)
push
pop
jns
mov
clc
stos
mov
shr
adc
aas
mov
(bad)
dec
sbb
inc
retf
(bad)
xlat
mov
es
adc
mov
or
push
ja
xchg
mov
call
dec
xchg
mov
in
(bad)
(bad)
call
lods
xchg
aaa
lock
out
clc
and
hlt
dec
mov
movs
xchg
sahf
inc
xor
pop
ins
cld
out
xchg
dec
or
in
shl
mov
push
jmp
cmp
push
imul
std
retf
push
xchg
cmp
sbb
das
int3
and
xor
movs
adc
push
pushf
ins
xchg
out
cmps
test
mov
sbb
sar
adc
or
and
dec
(bad)
dec
fld
test
jmp
and
dec
dec
mov
push
lahf
inc
mov
(bad)
and
jg
call
(bad)
push
les
xchg
enter
and
cmp
fiadd
pusha
xchg
inc
mov
sbb
(bad)
(bad)
inc
pop
jnp
sbb
ins
stos
nop
add
fdivp
ins
ror
push
cmps
inc
sbb
inc
cmp
(bad)
push
cmps
pop
push
dec
into
adc
pop
xor
inc
fcomp
call
aaa
sub
or
call
adc
or
in
mov
push
jo
pop
sbb
(bad)
(bad)
call
test
jmp
shl
fidiv
es
xchg
loopne
mul
cmp
(bad)
mov
mov
clc
jp
(bad)
(bad)
call
movs
and
std
(bad)
fisttp
and
(bad)
cmps
cmp
rol
or
lods
cmp
ss
(bad)
cld
iret
xchg
mov
push
lods
aaa
ret
clc
mov
jmp
adc
xor
clc
pusha
xchg
dec
div
sbb
(bad)
fisttp
popf
ret
mov
xor
inc
pushf
call
push
cld
(bad)
jg
in
stc
sbb
in
mov
jne
sub
adc
inc
mov
repz
test
cld
and
in
cli
mov
adc
xor
xlat
scas
mov
or
test
es
stos
rcr
cli
mov
mov
mov
jmp
lea
inc
mov
xchg
mov
push
dec
xchg
mov
rol
jns
ins
fstp
les
pop
mov
(bad)
or
popf
lock
(bad)
call
iret
arpl
jmp
mov
jo
sub
cli
cli
in
inc
inc
aaa
shl
ffreep
jbe
lock
xchg
inc
dec
pop
and
adc
mov
bound
pusha
adc
and
(bad)
push
mov
xchg
cmp
xchg
fadd
movs
pop
pushf
inc
xchg
or
aam
inc
(bad)
(bad)
(bad)
jnp
data16
inc
(bad)
xor
jno
fmul
adc
inc
inc
(bad)
cmc
sbb
push
movs
icebp
fnstenv
lock
mov
(bad)
call
fisttp
and
mov
or
add
xor
and
sub
and
ins
dec
call
push
xor
add
sub
xchg
outs
into
cmps
aaa
mov
loopne
(bad)
mov
arpl
dec
mov
inc
inc
sbb
push
(bad)
jmp
adc
inc
xchg
lock
jp
push
(bad)
daa
xor
(bad)
(bad)
call
add
push
int
mov
out
push
xor
inc
popa
pop
adc
daa
pop
push
sub
(bad)
enter
mov
inc
sub
addr16
xchg
adc
retf
ss
cmp
xchg
jae
pop
and
pop
pushf
cmps
(bad)
push
sbb
mov
xchg
sbb
int
jmp
mov
test
clc
in
iret
jl
mov
sbb
and
inc
js
sbb
add
fsub
loopne
std
cwde
sbb
out
out
mov
cld
add
retf
mov
mov
aaa
gs
pop
mov
cmp
jns
call
lods
ins
scas
imul
dec
jle
in
mov
jmp
aas
shl
push
sub
cli
(bad)
fist
frstor
xlat
push
inc
arpl
(bad)
(bad)
(bad)
(bad)
(bad)
mov
out
jmp
bound
(bad)
pop
sub
mov
shl
clc
jmp
pop
in
sub
push
lods
xor
cmc
js
sti
pop
std
(bad)
(bad)
(bad)
(bad)
jmp
or
xchg
sbb
mov
jns
xor
add
movs
and
call
sbb
mov
cs
adc
test
sbb
cmp
xchg
add
or
cmp
hlt
or
sbb
es
scas
pop
loop
or
(bad)
(bad)
jg
mov
and
mov
icebp
dec
gs
adc
adc
dec
call
jp
cli
push
mov
add
sbb
jmp
and
in
jg
push
cmp
xchg
mov
jmp
loope
jmp
int3
dec
mov
rcl
and
sub
pop
inc
mov
pusha
adc
stos
cli
(bad)
or
push
cli
pop
and
jmp
les
xor
mov
push
cmp
cmps
sar
(bad)
call
add
jl
test
int3
push
dec
mov
jle
inc
xlat
(bad)
retf
xchg
test
pop
imul
sbb
pop
xor
jae
push
test
std
out
das
fsubr
int
mov
dec
std
mov
icebp
fwait
(bad)
pop
xor
mov
jnp
or
dec
push
fbld
pushf
aaa
fbstp
(bad)
push
je
push
loop
mov
(bad)
test
sbb
mov
inc
pop
push
(bad)
(bad)
call
loop
xor
jmp
push
mul
lds
hlt
sbb
call
sbb
leave
retf
mov
inc
adc
dec
mov
jl
test
call
cli
or
sbb
mov
(bad)
call
popa
sub
push
xchg
lods
jns
jp
sub
fwait
sub
addr16
add
pop
fcomp
inc
(bad)
(bad)
(bad)
push
push
cmc
out
scas
xchg
fs
shl
and
push
mov
clc
inc
add
scas
ds
rol
mov
in
cs
add
cs
and
mov
push
mov
mov
mov
sbb
movs
paddd
in
add
je
mov
aam
dec
fs
pushf
into
jo
in
sbb
push
stc
call
call
jmp
mov
ficom
dec
sbb
cmc
xchg
sub
jl
sbb
out
push
push
call
(bad)
adc
cmp
inc
jmp
test
shl
cld
(bad)
fild
test
jne
inc
push
or
cwde
outs
jecxz
inc
mov
ret
jno
inc
or
rcl
into
mov
push
popf
or
push
fstp
xor
test
(bad)
(bad)
(bad)
(bad)
call
das
imul
push
mov
leave
jmp
(bad)
jle
sub
mov
cmp
test
loope
fsub
test
adc
retf
mov
or
movs
pop
imul
movs
shr
or
xor
dec
(bad)
(bad)
jmp
xchg
addr16
xor
mov
call
clc
inc
(bad)
fild
xchg
adc
leave
mov
xor
sbb
mov
int3
adc
aaa
int3
movs
(bad)
(bad)
inc
xchg
rcl
out
sub
(bad)
das
sbb
sbb
retf
scas
mov
in
add
retf
jmp
adc
inc
fsub
mov
mov
or
push
mov
out
mov
dec
lahf
sub
(bad)
(bad)
call
jne
clc
movs
outs
movs
fwait
loope
or
sti
jno
(bad)
sar
and
movs
out
add
(bad)
stc
dec
jge
sbb
xchg
enter
in
fsub
das
cld
call
shr
push
xor
mov
pop
loope
stos
pushf
or
(bad)
fbstp
es
sbb
js
repnz
jb
scas
dec
test
outs
add
fcomip
and
(bad)
jg
push
cmps
and
sahf
jo
stos
ins
icebp
add
fsub
pop
fsub
into
mov
and
out
sub
enter
sub
lods
pop
fs
push
inc
inc
push
fmul
pop
mov
int
xor
cli
int3
aaa
sub
(bad)
fbld
lods
outs
xor
ja
pop
cld
in
xchg
pop
fbld
dec
dec
ins
ror
mov
jp
rol
(bad)
(bad)
out
mov
inc
in
dec
and
inc
sar
sahf
sahf
jbe
adc
and
out
(bad)
(bad)
(bad)
jg
xor
cld
cmp
inc
movs
dec
dec
fild
out
je
xor
sbb
add
cmp
ret
call
dec
fmul
mov
rol
js
xchg
jo
mov
push
into
call
mov
mov
sub
mov
nop
dec
cmps
xor
out
dec
inc
(bad)
mov
shl
sub
mov
shl
ss
mov
sub
or
test
ret
lods
dec
adc
add
cmp
fwait
imul
popa
cmp
dec
sbb
mov
jl
jb
xor
std
sbb
pop
sub
stos
pop
sbb
mov
adc
xchg
call
mov
inc
pop
adc
loopne
push
fdiv
scas
fild
pop
mov
mov
in
add
mov
rcl
xor
mov
dec
push
fmulp
pusha
xor
(bad)
(bad)
(bad)
mov
pop
jg
bound
jg
test
pop
and
mov
fs
jbe
add
(bad)
(bad)
(bad)
inc
adc
sbb
pop
popf
ror
les
out
icebp
retf
(bad)
pop
mov
jg
sub
enter
enter
sbb
(bad)
dec
(bad)
add
cld
popa
lods
jo
stc
imul
sar
dec
jge
int3
dec
rol
das
pusha
inc
aad
dec
scas
and
sbb
dec
add
mov
je
dec
pushf
pop
jo
pop
and
jmp
lea
lahf
add
(bad)
inc
frstor
mov
push
ror
ds
cmc
call
dec
sti
xchg
mov
lock
mov
pop
retf
rol
fsubr
dec
pop
call
(bad)
(bad)
jg
out
popa
xlat
push
add
je
popf
xchg
(bad)
push
cmp
sbb
sub
mov
lods
mov
xor
aaa
fmul
popa
sbb
(bad)
(bad)
inc
pop
enter
fsub
jns
repz
add
pop
xchg
xchg
loopne
sbb
pop
mov
jbe
fld
push
movs
je
addr16
pop
push
jmp
sbb
jo
sar
mov
pop
(bad)
loopne
out
outs
push
or
cmp
or
cdq
dec
push
sar
add
push
mov
mov
xchg
stc
les
jmp
mov
stos
stos
mov
test
(bad)
jmp
xor
cmp
and
(bad)
mov
adc
add
cmps
push
mov
(bad)
(bad)
inc
inc
lods
sub
jb
dec
fisubr
imul
pop
xor
clc
mov
loope
lods
dec
movs
dec
cld
dec
sbb
sub
and
mov
lahf
and
(bad)
(bad)
jg
mov
pop
cdq
(bad)
nop
lods
scas
dec
(bad)
or
pop
lods
jne
pop
pop
addr16
adc
(bad)
(bad)
fldcw
outs
xchg
cmp
jp
dec
shl
push
or
daa
mov
mov
sbb
icebp
(bad)
jmp
clc
or
inc
dec
push
(bad)
aas
jl
in
jb
gs
mov
and
cld
aad
mov
(bad)
add
cmp
scas
sub
xor
xchg
pusha
ret
and
ret
mov
xchg
mov
icebp
jmp
push
in
push
sbb
cmp
add
and
pop
inc
add
xchg
mov
ins
lock
(bad)
(bad)
ds
(bad)
movs
mov
mov
mov
lods
or
pop
jmp
sar
mov
cdq
aam
pop
or
(bad)
mov
mov
mov
lahf
add
mov
cmp
fiadd
test
scas
fiadd
and
pop
jno
lea
jmp
(bad)
adc
sbb
call
cs
cmps
push
pop
in
xor
mov
dec
add
push
sub
and
data16
push
mov
rcl
(bad)
inc
and
call
cld
jb
jmp
mov
xchg
add
dec
push
push
mov
clc
jns
imul
and
pop
dec
sti
(bad)
pop
into
movs
bound
add
adc
mov
xchg
cmps
scas
mov
into
loope
(bad)
(bad)
mov
cdq
out
ret
jns
jg
mov
lds
out
cdq
movs
sahf
xchg
mov
mov
push
scas
cmp
jl
ret
mov
inc
jecxz
test
push
fld
fwait
xor
stc
sbb
(bad)
inc
cmp
sbb
pop
push
std
(bad)
jmp
or
xchg
(bad)
in
rep
pop
dec
xchg
sub
out
mov
ins
dec
mov
and
lds
jmp
pop
mov
(bad)
inc
(bad)
out
sbb
int
(bad)
jno
mov
(bad)
jmp
jns
arpl
dec
sahf
pop
jnp
cmp
inc
pop
pop
(bad)
fbstp
(bad)
rol
mov
sub
popa
jmp
and
call
or
stos
cmp
daa
pop
pop
mov
leave
mov
es
retf
dec
add
outs
mov
fs
cmp
je
cmp
fmul
push
mov
popa
out
cmp
dec
call
stos
(bad)
fsub
in
sbb
push
push
int
cld
(bad)
call
cmp
mov
push
xchg
jg
jae
inc
or
fild
jb
and
iret
stc
ror
pop
je
push
pop
mov
stos
rcl
or
out
pusha
arpl
(bad)
mov
inc
cmp
xchg
retf
in
pop
mov
xor
adc
lods
ja
or
ins
dec
or
mov
push
out
mov
cwde
xchg
jmp
xor
stc
cmc
pushf
pop
jmp
mov
fbstp
fiadd
movs
data16
sub
pop
cld
jg
lods
mov
ror
inc
data16
clc
(bad)
call
xor
scas
dec
inc
frstor
jp
dec
mov
aad
sub
repnz
(bad)
(bad)
push
mov
sbb
ror
xchg
add
rcr
mov
mov
xor
call
imul
(bad)
or
lock
(bad)
inc
dec
scas
cs
and
dec
loope
push
and
adc
scas
adc
sti
(bad)
call
push
mov
xor
(bad)
js
dec
out
imul
clc
and
cld
test
mov
adc
(bad)
ss
(bad)
jg
xchg
push
push
sub
push
inc
add
add
imul
push
daa
jb
push
(bad)
(bad)
and
mov
jns
fistp
test
and
mov
or
data16
shr
je
push
mov
(bad)
in
and
xor
xlat
aas
rol
pop
push
es
out
out
mov
jno
scas
jno
(bad)
(bad)
jmp
jmp
jmp
mov
jnp
xor
movs
(bad)
jle
sbb
pusha
jne
gs
cdq
aas
test
dec
or
(bad)
call
push
call
cdq
add
push
clc
sub
(bad)
(bad)
fbld
and
sbb
adc
lds
fld
adc
(bad)
push
inc
xor
je
or
not
sar
fadd
enter
inc
(bad)
pop
push
or
xchg
push
les
xchg
dec
sub
xchg
pop
ja
inc
mov
cmp
(bad)
outs
xchg
adc
(bad)
loope
mov
pop
ficomp
jmp
dec
test
movs
fld
mov
or
gs
sub
inc
dec
ret
cmp
dec
sbb
pop
or
sub
dec
mov
loopne
jmp
cli
cdq
and
movs
test
pop
xor
stos
fsub
cmp
xor
iret
outs
xlat
cmps
out
adc
call
cmp
adc
sbb
cli
es
sbb
ja
aaa
aam
xor
scas
rcl
cmp
push
cmp
out
xor
mov
add
rol
xor
add
sahf
outs
or
je
mov
leave
xor
out
dec
(bad)
call
xchg
push
fmul
out
xchg
(bad)
add
mov
loopne
rcl
lock
call
jns
outs
adc
pop
jg
dec
mov
pop
(bad)
push
fdivr
push
xchg
in
mov
jmp
call
ins
jns
leave
add
inc
push
gs
or
(bad)
(bad)
(bad)
jmp
xchg
mov
data16
repnz
push
jbe
mov
adc
xor
pop
mov
mul
(bad)
xor
movs
xchg
retf
loope
cmps
popf
loopne
and
add
outs
adc
jg
pusha
jecxz
mov
ja
retf
ror
in
repz
pusha
dec
(bad)
fistp
cmp
inc
push
dec
xchg
je
cld
dec
push
(bad)
enter
and
jp
add
ret
xor
push
jg
pusha
ret
push
xchg
movs
iret
sub
dec
call
inc
xor
rep
jno
xor
(bad)
stos
cs
dec
xor
mov
leave
stos
xor
push
xor
mov
or
mov
push
pop
in
andnps
mov
cmps
push
pop
sbb
jns
adc
stc
xor
jnp
(bad)
into
jo
adc
xchg
push
add
mov
jo
pusha
(bad)
sub
push
jns
or
mov
sbb
int3
loope
fs
sub
xchg
lar
cmps
sbb
pop
lock
dec
add
jno
adc
jnp
jle
fcomip
inc
sub
test
push
(bad)
stos
fbstp
mov
(bad)
aam
jge
jo
add
push
adc
mov
fmul
lds
dec
(bad)
call
cmps
(bad)
inc
inc
mov
push
sbb
out
fisubr
call
adc
jmp
sbb
pop
fwait
mov
(bad)
lods
jo
xor
das
call
clc
mov
cmps
pop
push
and
(bad)
inc
imul
fcomip
das
cli
test
xor
fsub
fwait
scas
pop
in
das
pusha
jns
xchg
(bad)
(bad)
(bad)
call
dec
mov
(bad)
xchg
shr
xchg
mov
cld
inc
or
add
xlat
jns
mov
addr16
ds
jg
inc
fcmovnbe
dec
rcr
ja
mov
inc
mov
jmp
pop
mov
(bad)
out
mov
sti
outs
cli
or
pusha
cmps
repz
frstor
sub
(bad)
call
ja
js
lea
mov
bound
bound
scas
mov
ror
or
imul
ins
push
jge
and
in
sahf
jp
dec
mov
clc
fst
pop
stos
fstp
and
call
fcomp
(bad)
jmp
inc
cmp
pop
sub
in
adc
(bad)
jg
push
or
mov
adc
out
rcl
dec
imul
aad
xlat
arpl
adc
and
(bad)
(bad)
(bad)
push
mov
sbb
push
adc
inc
push
xchg
mov
cmps
mov
pop
and
aam
or
pop
push
fist
or
pop
jmp
xchg
imul
stos
imul
bound
repnz
std
jg
movs
aam
push
aaa
add
jl
cld
push
jg
cmp
push
mov
xchg
hlt
push
(bad)
outs
pushf
push
test
cmp
cdq
sub
and
call
mov
xchg
in
cmps
call
push
dec
pop
push
call
mov
xor
inc
add
xor
aaa
ret
test
push
or
(bad)
frstor
jmp
popf
(bad)
rcl
cli
pushf
pop
pop
pop
lock
adc
(bad)
cmc
test
out
int
(bad)
stc
add
pushf
pushf
dec
loopne
xchg
aad
cld
fistp
xor
adc
dec
cld
pushf
test
cmp
ins
pop
sub
imul
or
dec
popa
and
mov
mov
test
inc
cmp
call
(bad)
(bad)
inc
cwde
fwait
push
nop
mov
mov
repnz
(bad)
mov
test
test
or
(bad)
(bad)
jmp
outs
dec
push
inc
or
inc
mov
int3
clc
ja
mov
push
sbb
repz
pop
add
push
dec
in
movs
mov
xchg
pop
or
js
jmp
push
dec
scas
cs
add
xchg
int3
and
sub
mov
push
(bad)
cmc
mov
mov
fs
int3
fld
mov
jmp
loopne
jns
(bad)
data16
inc
sbb
mov
daa
mov
xchg
outs
push
pop
and
dec
movs
lods
add
push
cld
bound
mov
push
(bad)
(bad)
jg
push
seta
cmps
jp
sbb
push
pop
sbb
popf
jns
add
jg
(bad)
jmp
std
or
xor
xor
mov
ffreep
aad
lock
ins
ds
mov
jae
jp
shl
je
xchg
out
std
or
fs
jge
cdq
pop
sbb
ret
dec
mov
outs
mov
mov
shl
(bad)
add
mov
(bad)
call
movs
inc
mov
push
xor
sahf
add
mov
(bad)
inc
test
(bad)
call
loope
outs
out
jnp
test
or
or
add
fdivr
cmp
ja
into
lods
call
pop
pusha
std
jmp
in
mov
sub
and
mov
inc
into
jmp
mov
mov
ficomp
imul
ins
loopne
push
stos
cs
pop
popf
and
xchg
retf
xor
cmp
mov
sbb
lock
cmp
cld
scas
sbb
adc
daa
cli
cld
(bad)
(bad)
jmp
dec
mov
push
lea
dec
int
xor
sbb
scas
push
rol
and
mov
inc
pop
add
cmc
mov
clc
or
or
cmps
int
jnp
sub
sbb
cli
ret
sub
mov
(bad)
mov
sub
cmp
(bad)
xchg
std
nop/reserved
lahf
out
push
je
fisub
jecxz
ror
daa
ins
outs
or
(bad)
(bad)
sbb
xchg
dec
xchg
mov
mov
jne
repz
push
aad
test
std
call
mov
pop
mov
out
push
sbb
inc
pop
ja
jae
ds
(bad)
mov
or
mov
bound
icebp
hlt
xchg
test
mov
jl
hlt
mov
dec
push
xchg
fsub
push
int3
dec
sub
xor
ds
inc
call
aam
mov
ss
mov
cmp
inc
xor
movs
or
mov
push
loopne
jle
div
lds
cmps
add
popa
retf
jle
(bad)
lods
lock
(bad)
push
stos
out
xor
and
or
fldcw
imul
pop
cmp
imul
(bad)
inc
mov
and
mov
imul
xor
(bad)
call
mov
mov
cmp
push
stos
in
adc
jle
mov
pop
push
aad
int3
xlat
pop
test
xor
pop
pusha
stc
add
pop
dec
jne
pop
mov
inc
and
mov
and
xor
mov
cmp
mov
jg
jmp
das
js
out
ins
jge
ucomiss
test
in
dec
xchg
int
pop
add
(bad)
cmp
fst
scas
bound
or
or
xchg
cmps
or
mov
std
out
stos
mov
xchg
xchg
in
inc
push
clc
push
int
mov
call
pop
jns
jecxz
aas
push
adc
pop
lods
(bad)
aaa
sbb
inc
dec
loopne
adc
push
pop
push
adc
jae
std
or
les
lods
mov
imul
out
aad
out
dec
sti
call
push
sbb
cld
(bad)
inc
push
sub
sub
sbb
jmp
sahf
cmp
dec
sbb
clc
out
inc
cdq
shl
inc
movsx
enter
stos
clc
xor
faddp
stos
pusha
pusha
cdq
mov
into
fistp
dec
xlat
shr
jmp
int3
adc
mov
and
cmc
(bad)
(bad)
int3
xor
push
(bad)
test
aas
sbb
pop
jmp
mov
sub
(bad)
fistp
movs
push
js
jb
xchg
aaa
push
sbb
js
mov
ins
mov
push
cmp
and
push
mov
or
data16
fwait
xchg
cmp
(bad)
jmp
movs
cmp
jbe
hlt
sahf
(bad)
mov
xchg
xor
sbb
push
hlt
(bad)
(bad)
(bad)
(bad)
ds
cwde
sub
mov
mov
(bad)
cmp
lds
push
jbe
and
or
sbb
xor
mov
xor
cs
xchg
shr
inc
inc
(bad)
inc
inc
pop
shl
fisub
jns
shl
in
loopne
xchg
push
xchg
jmp
ss
ficom
jmp
and
stos
cld
fistp
mov
jb
test
les
push
mov
imul
mov
or
fiadd
push
xchg
push
nop
(bad)
(bad)
jg
add
xor
test
call
push
jmp
or
int3
dec
xor
das
mov
stos
inc
or
push
(bad)
(bad)
(bad)
call
retf
ror
loope
dec
push
in
jle
das
int
dec
lds
mov
out
sar
jbe
scas
(bad)
(bad)
rcl
into
leave
dec
add
das
popf
cmp
(bad)
(bad)
call
mov
(bad)
sub
inc
out
lods
(bad)
shl
fucom
dec
dec
adc
mov
dec
(bad)
(bad)
(bad)
call
mov
shl
bound
pop
inc
or
cmp
dec
gs
(bad)
(bad)
(bad)
jnp
inc
jmp
rcr
retf
daa
shl
cmp
(bad)
jmp
cld
(bad)
(bad)
inc
mov
sub
lods
push
mov
shr
sub
popa
add
jl
jno
jbe
into
pop
cwde
dec
into
hlt
(bad)
dec
add
jns
adc
int
mov
sub
mov
(bad)
jmp
sbb
or
push
scas
dec
imul
fs
aad
call
and
push
hlt
sar
cmps
movs
mov
sbb
jp
push
adc
out
pop
(bad)
(bad)
(bad)
(bad)
out
(bad)
dec
pop
(bad)
sub
stc
mov
mov
rcr
lods
test
mov
test
cmp
sub
call
mov
popa
pop
mov
xor
(bad)
(bad)
(bad)
jg
out
jbe
ds
adc
scas
cli
cmp
inc
pusha
daa
(bad)
mov
pop
cld
cmps
mov
(bad)
(bad)
call
les
imul
mov
ja
push
cs
xor
imul
xor
mov
out
adc
fs
sti
out
mov
stos
sub
xor
cs
(bad)
(bad)
jmp
pop
or
popf
xor
mov
sbb
add
(bad)
xchg
(bad)
(bad)
(bad)
push
pop
ins
push
xor
(bad)
js
out
loop
cmp
loopne
cdq
jecxz
mov
(bad)
(bad)
(bad)
jl
imul
push
mov
or
xchg
(bad)
enter
dec
mov
nop
mov
(bad)
(bad)
(bad)
cmp
ss
mov
fs
pop
mov
add
scas
jl
stc
paddq
(bad)
(bad)
(bad)
inc
push
shr
cmp
sub
add
jge
add
xchg
loopne
push
and
int
(bad)
(bad)
push
rcl
std
je
xchg
pushf
gs
jae
dec
ins
(bad)
push
out
and
dec
cwde
pop
mov
push
aas
(bad)
cmp
sahf
enter
inc
push
(bad)
(bad)
(bad)
dec
mov
rcr
call
push
daa
fs
repnz
ficom
test
or
loopne
lock
test
test
push
hlt
(bad)
jg
mov
in
mov
xor
int3
fld
sar
pop
hlt
or
fsubr
shl
sbb
call
aaa
scas
xor
xlat
push
xchg
mov
inc
es
in
imul
(bad)
(bad)
(bad)
call
mov
test
inc
imul
xchg
mov
mov
mov
(bad)
(bad)
(bad)
jmp
or
sbb
pushf
mov
retf
popa
in
jmp
xor
fsubr
jl
mov
cwde
movs
(bad)
jmp
(bad)
out
std
int
retf
call
cmovg
fs
nop
fstp
xlat
sub
(bad)
mov
fdivrp
jb
pop
inc
adc
jb
inc
adc
arpl
shl
add
sbb
jmp
repz
ins
and
jnp
out
in
jecxz
adc
cmp
mov
in
(bad)
pushf
mov
enter
loop
gs
(bad)
dec
ja
mov
fisttp
sub
lods
inc
out
cli
bound
add
cli
jmp
pop
imul
(bad)
inc
ja
fld
xor
adc
add
aam
push
out
adc
xchg
fbstp
jg
je
add
pusha
adc
ret
mov
pushf
ins
jb
add
(bad)
cli
mov
call
add
adc
rcr
jne
sbb
push
fld
(bad)
mov
ins
pop
jecxz
inc
xchg
retf
inc
mov
and
or
(bad)
jmp
daa
xchg
xchg
(bad)
mov
dec
mov
imul
test
lea
popf
mov
rcr
test
add
out
out
imul
(bad)
call
push
enter
pusha
fadd
inc
pop
cmc
add
(bad)
dec
cmp
fistp
out
pop
aam
jbe
movs
cld
adc
and
xchg
dec
out
gs
fwait
repz
or
stc
dec
repz
cmp
(bad)
(bad)
fild
jmp
jg
lods
imul
push
mov
mov
add
mov
(bad)
(bad)
jmp
sahf
stos
imul
aad
inc
mov
fstp
adc
jbe
add
mov
(bad)
push
adc
add
loopne
(bad)
jmp
xor
xchg
mov
lea
es
adc
pop
push
pusha
lahf
mov
clc
push
mov
mov
outs
scas
call
aam
mov
inc
repnz
xchg
iret
inc
or
dec
and
or
push
mov
sbb
xor
xchg
in
push
loopne
ss
ret
jmp
enter
push
nop
in
mov
(bad)
inc
cmps
and
sbb
int3
mov
bound
lea
xor
ror
jl
cmp
jmp
in
push
sti
xchg
cmps
stos
fidiv
jge
adc
cmp
fldenv
push
out
inc
cmp
std
sub
out
rep
(bad)
(bad)
(bad)
jmp
mov
mov
das
adc
iret
cmc
xor
outs
and
jmp
int
mov
sub
push
test
(bad)
cli
jmp
out
push
adc
in
adc
push
les
ficomp
and
or
adc
loop
dec
push
jb
mov
push
or
mov
(bad)
inc
xchg
ja
mov
(bad)
(bad)
jmp
int3
push
out
push
pop
(bad)
xchg
loopne
and
cdq
or
(bad)
mov
xchg
cmp
test
jb
jo
adc
lock
dec
(bad)
(bad)
(bad)
inc
retf
pop
fs
mov
push
sub
mov
rol
mov
stos
lea
gs
jmp
sbb
dec
mov
jecxz
repz
(bad)
(bad)
(bad)
mov
lods
rol
fwait
mov
cli
sub
icebp
aam
fist
in
rol
(bad)
(bad)
call
dec
fwait
stc
and
cmp
xchg
cdq
jb
in
jns
mov
fs
(bad)
(bad)
call
push
xchg
push
shr
loop
stc
loope
test
jnp
mov
add
pop
pop
les
jbe
pusha
inc
out
lahf
mov
mov
xor
fist
jge
mov
std
or
push
mov
popf
dec
cmp
out
and
fwait
adc
jmp
stos
in
cs
int3
(bad)
mov
and
aaa
mov
int3
int3
fs
(bad)
(bad)
call
xchg
jb
int3
jnp
mov
or
pusha
push
repnz
mov
xchg
hlt
fwait
ret
or
push
push
sbb
mov
fild
push
pop
adc
mov
cmp
jo
bound
adc
(bad)
mov
ds
(bad)
mov
cmp
push
jns
pushf
scas
dec
(bad)
arpl
push
nop
mov
repnz
(bad)
xlat
jb
(bad)
(bad)
(bad)
(bad)
fild
adc
sbb
jmp
sub
and
scas
xor
cmp
test
pop
inc
ret
call
fdivr
xchg
mov
(bad)
call
cmp
in
je
into
mov
int
mov
mov
(bad)
jmp
cmp
aad
retf
pusha
fs
mov
inc
jmp
pop
push
div
pop
jg
adc
dec
dec
adc
add
movs
daa
test
pop
sub
call
push
mov
mov
xchg
(bad)
icebp
and
ja
loope
push
ds
cld
mov
adc
mov
rcl
call
fwait
ret
lock
sbb
cmp
xchg
jecxz
mov
inc
push
jmp
retf
inc
fs
es
mov
(bad)
(bad)
inc
les
cmps
pushf
mov
ins
push
mov
neg
out
pop
xchg
inc
pop
dec
cmp
loop
out
enter
(bad)
(bad)
(bad)
call
mov
arpl
cdq
push
mov
jnp
xchg
pop
in
loopne
imul
std
(bad)
(bad)
inc
xor
cmp
or
popf
pusha
imul
jmp
mov
movs
sbb
pop
fcom
cmp
fld
push
add
outs
out
leave
int3
(bad)
lds
adc
inc
hlt
pop
(bad)
(bad)
(bad)
push
pop
sbb
clc
shl
jo
inc
pop
cli
mov
dec
ins
adc
adc
pop
inc
imul
fcmovbe
cmp
stos
fs
sar
addr16
xor
mov
cli
ror
(bad)
(bad)
(bad)
jmp
jne
cmp
xor
jmp
mov
adc
inc
das
repz
aas
outs
into
(bad)
fisttp
or
sub
cmc
stc
imul
imul
mov
(bad)
mov
mov
xor
leave
je
mov
and
(bad)
call
mov
xlat
pop
lahf
xchg
pop
add
pop
or
hlt
mov
xchg
xchg
out
rsqrtps
or
push
test
pop
dec
(bad)
dec
mov
(bad)
(bad)
call
pusha
ins
push
shl
mov
movs
adc
add
mov
test
cmp
(bad)
(bad)
(bad)
dec
and
dec
jbe
aaa
outs
dec
hlt
ins
loope
push
sbb
in
call
fcos
(bad)
(bad)
push
dec
push
add
add
push
dec
shr
aam
mov
inc
rcr
call
(bad)
call
jno
aaa
mov
inc
mov
mov
cmp
cld
jle
cli
(bad)
(bad)
mov
popa
imul
outs
(bad)
test
or
xchg
lahf
repz
xchg
ss
xchg
sub
call
or
mov
or
push
stos
mov
not
mov
(bad)
(bad)
call
pop
in
fcmove
in
adc
test
push
shl
push
or
mov
daa
(bad)
(bad)
mov
ss
xchg
cmc
mov
call
lods
je
pop
xor
(bad)
mov
test
out
idiv
sar
stos
xchg
inc
dec
shl
rol
repz
sub
sbb
(bad)
dec
and
rol
jge
inc
inc
xor
sub
cmps
xchg
adc
lock
or
sub
je
mov
adc
pop
test
clc
jecxz
sar
cld
xchg
ds
test
nop
jge
aas
and
loopne
inc
jle
push
adc
retf
mov
into
xchg
(bad)
(bad)
(bad)
(bad)
inc
pop
movs
cli
mov
adc
mov
ss
loop
int3
jp
(bad)
mov
(bad)
(bad)
(bad)
dec
mov
test
dec
cli
push
repnz
push
retf
jne
loopne
arpl
adc
(bad)
jmp
std
test
dec
pop
ja
mov
jmp
sbb
or
inc
inc
call
push
mov
add
fcomip
push
adc
clc
int3
jbe
stc
add
(bad)
mov
adc
mov
movs
push
push
scas
fwait
scas
mov
je
jnp
and
cmc
jne
fwait
dec
mov
(bad)
into
dec
xor
pop
movs
sti
fidivr
fwait
clc
loopne
and
push
loopne
xchg
dec
out
sub
(bad)
(bad)
(bad)
(bad)
fsub
pop
push
mov
push
dec
arpl
sahf
inc
ror
cmp
dec
or
stos
jno
(bad)
mov
sbb
ffree
xor
repnz
mov
pusha
loope
(bad)
push
push
loopne
mov
xchg
stos
xlat
leave
imul
cli
or
dec
fsub
mov
inc
mov
adc
jg
(bad)
(bad)
fisub
xor
icebp
retf
jne
outs
sbb
jae
(bad)
(bad)
jmp
and
push
icebp
int3
int
cmps
popa
stos
mov
popf
movs
cmp
xchg
test
sub
(bad)
(bad)
jg
test
addr16
lods
mov
pop
ret
rol
aas
add
jle
mov
mov
inc
lods
pushf
pushf
in
xor
adc
push
dec
inc
pop
add
pushf
jmp
call
dec
icebp
add
rcl
mov
cmc
aad
das
sub
or
stc
shr
(bad)
jg
xor
in
mov
pusha
test
cmp
cmp
or
das
dec
cmovns
mov
xchg
cmp
in
pop
gs
push
test
sbb
push
test
jg
mov
pusha
mov
rcr
add
retf
xchg
loopne
mov
add
sbb
xor
pop
in
cmc
shr
cmp
jmp
add
jg
out
(bad)
push
enter
push
call
lods
or
es
lds
aas
add
(bad)
(bad)
jmp
repnz
leave
dec
cmps
cmp
push
push
cmp
cmps
push
das
cdq
ins
movs
test
shl
jge
idiv
(bad)
scas
cs
cld
jmp
cmp
mov
shr
xor
cmp
push
adc
(bad)
jg
push
rol
sub
out
(bad)
in
inc
aam
loopne
shr
jne
jmp
add
loope
iret
dec
in
jo
sub
mov
mov
dec
outs
xor
xor
icebp
nop
lea
outs
and
mov
sbb
dec
jns
xchg
push
pusha
rcl
push
inc
ss
in
xor
in
add
add
(bad)
(bad)
mov
rcl
inc
mul
dec
mov
mov
jg
pop
xor
lahf
add
ja
lock
mov
and
inc
inc
call
pop
push
adc
xchg
hlt
das
les
mov
cmp
cmp
sbb
adc
mov
add
lods
sub
pushf
pusha
push
pop
add
inc
mov
mov
pop
dec
inc
or
jo
cmp
out
lock
les
aas
jns
xor
jecxz
pop
out
pop
inc
cli
sbb
repnz
or
in
mov
cmp
(bad)
dec
lar
arpl
push
add
loopne
jmp
mov
and
adc
jmp
ror
outs
icebp
inc
pop
fistp
out
aam
(bad)
cli
xor
mov
jg
test
and
iret
clc
jg
mov
stos
xchg
mov
pop
div
icebp
mov
ret
pusha
es
fisubr
mov
inc
scas
(bad)
jecxz
(bad)
cmp
add
lahf
call
inc
push
cwde
mov
(bad)
nop
lods
inc
into
jo
cdq
inc
stos
out
add
in
xor
cmp
retf
cmp
cmps
inc
jg
jmp
leave
stos
jecxz
or
sub
ret
sahf
xor
add
stos
ins
push
cmps
push
sbb
inc
fdiv
stos
hlt
outs
xor
jbe
js
add
call
and
mov
add
pop
sbb
or
aad
shl
ret
push
(bad)
mov
mov
sub
push
shl
sub
pop
inc
cmc
push
(bad)
jg
clc
push
add
pusha
das
push
mov
pushf
pop
mov
inc
call
rcr
add
mov
lea
mov
push
inc
jmp
addr16
add
push
clc
(bad)
cli
call
and
clc
xchg
push
lods
inc
stc
popa
in
je
pop
into
jmp
loope
(bad)
(bad)
jmp
xchg
dec
dec
dec
aad
mov
xor
sahf
cld
or
mov
pop
(bad)
call
sbb
add
fdecstp
test
fwait
clc
mov
fdivrp
hlt
enter
(bad)
jmp
pop
add
push
mov
pop
sub
add
gs
cwde
in
push
shl
das
clc
std
pop
add
(bad)
inc
je
jae
std
mov
and
hlt
test
(bad)
(bad)
(bad)
std
xchg
out
mov
adc
sub
pop
fild
lock
dec
clc
push
cld
aad
adc
jbe
jae
pop
mov
add
adc
xchg
inc
aad
gs
popa
inc
in
adc
(bad)
(bad)
call
push
ins
push
push
pop
idiv
popa
cmc
ss
(bad)
jge
inc
daa
add
imul
hlt
adc
add
(bad)
push
dec
add
push
popa
adc
int
lods
xlat
std
cdq
push
push
mov
mov
shl
(bad)
(bad)
(bad)
jmp
xchg
adc
dec
mov
sbb
or
push
mov
(bad)
(bad)
dec
sbb
std
push
das
push
test
test
push
xchg
popa
clc
jg
mov
xchg
push
scas
sub
test
push
push
pop
std
test
dec
es
fiadd
jecxz
lock
mov
adc
jno
cmp
or
(bad)
jmp
(bad)
in
aad
push
cmp
std
sti
in
push
mov
dec
out
push
(bad)
cmp
xchg
sbb
std
(bad)
jmp
or
push
retf
jae
sahf
(bad)
out
xchg
inc
adc
sbb
xchg
(bad)
(bad)
push
add
repz
jnp
loop
xchg
xchg
mov
cmps
inc
gs
xchg
add
cmp
cdq
cmp
ins
jmp
ja
adc
inc
jne
mov
(bad)
(bad)
(bad)
jmp
fisubr
cmp
cli
dec
stos
mov
sbb
inc
ss
(bad)
(bad)
stc
inc
dec
bswap
das
out
add
movs
fwait
cld
ins
mov
outs
std
(bad)
call
sub
mov
and
xchg
push
not
sbb
lahf
dec
pusha
push
adc
rcl
and
(bad)
mov
lea
pop
xchg
add
ds
or
repnz
ss
xchg
jmp
retf
push
pop
xor
sbb
(bad)
mov
dec
jmp
pop
push
cmp
retf
sub
(bad)
dec
lods
inc
je
stos
js
push
fiadd
jo
retf
push
pop
int
fdiv
sub
inc
sub
mov
je
call
(bad)
(bad)
fbld
sub
mov
retf
mov
inc
inc
cmp
test
jne
(bad)
(bad)
push
iret
push
jne
xchg
add
push
int3
test
adc
rcr
test
(bad)
push
xor
ret
inc
fwait
mov
popf
sbb
cmps
fild
scas
push
(bad)
mov
nop
movs
jge
loopne
(bad)
(bad)
(bad)
(bad)
fmul
jae
test
fwait
mov
int3
(bad)
cmp
mov
pop
jmp
pushf
jo
in
mov
mov
jmp
sub
popa
pop
ins
dec
(bad)
(bad)
(bad)
jmp
popa
pusha
test
pop
aas
movs
or
jp
cmp
(bad)
pop
std
dec
xor
sti
mov
(bad)
(bad)
(bad)
call
hlt
add
xor
add
and
xor
aas
mov
mov
pop
inc
(bad)
(bad)
mov
inc
out
xchg
and
cmp
stc
xchg
in
mov
inc
jp
ret
hlt
mov
(bad)
jg
adc
xchg
dec
sub
push
movs
(bad)
fld
adc
adc
push
sbb
sub
cmps
pop
imul
mov
call
mov
aaa
lods
xchg
push
cmp
adc
sbb
jmp
mov
adc
dec
das
aas
out
xchg
pushf
xchg
push
(bad)
(bad)
(bad)
call
sahf
cmp
mov
lds
and
dec
dec
(bad)
pushf
mov
mov
loop
idiv
outs
or
adc
xor
ins
jmp
mov
out
push
ja
lea
movs
jns
shl
dec
pop
(bad)
cmp
jmp
mov
aaa
adc
sbb
repnz
push
shl
(bad)
(bad)
(bad)
call
sbb
sub
jns
add
xchg
push
push
sti
inc
mov
enter
dec
jg
or
std
mov
mov
mov
lods
or
arpl
jnp
sahf
das
ss
xor
(bad)
(bad)
push
cmp
pop
dec
push
es
jle
test
daa
xchg
out
jne
aad
mov
ud0
pop
lock
das
iret
pushf
mov
push
cmp
retf
pop
inc
sub
jae
add
inc
(bad)
and
shr
xchg
inc
imul
int
stc
(bad)
mov
sbb
dec
(bad)
fadd
mov
cwde
mov
fistp
jl
mov
(bad)
inc
cmps
fwait
call
scas
sub
xchg
xor
dec
std
pop
mov
add
(bad)
(bad)
mov
aas
lods
jge
mov
enter
aas
(bad)
mov
ja
xor
and
push
mov
push
mov
(bad)
(bad)
jg
js
mov
arpl
rcl
clc
jae
jo
xchg
cmp
jmp
dec
fist
mov
jne
mov
xchg
scas
ret
xor
jmp
sub
dec
hlt
gs
in
popa
in
pop
(bad)
(bad)
(bad)
mov
in
jmp
fadd
(bad)
cdq
sub
fsubrp
jo
sub
mov
or
(bad)
(bad)
(bad)
cmp
sbb
ss
push
inc
sub
or
fidivr
aaa
cmp
jle
std
xor
(bad)
mov
mov
dec
push
adc
xchg
fnsave
sbb
inc
scas
(bad)
push
mov
add
jns
xor
push
stc
cmp
inc
xchg
ret
add
je
adc
test
inc
(bad)
(bad)
(bad)
call
or
call
xchg
cmp
jge
js
fidivr
mov
retf
dec
clc
lods
out
add
xchg
(bad)
hlt
out
idiv
mov
mov
mov
test
js
lea
(bad)
(bad)
call
ror
mov
lds
sti
xor
xchg
adc
call
cwde
cmp
sbb
mov
lods
test
fucomip
pop
push
jae
aas
dec
cmp
dec
xor
lock
pushf
ror
movs
xchg
cmp
mov
sub
(bad)
(bad)
(bad)
cmp
out
popf
mov
jne
sub
jge
ret
mov
mov
in
into
sub
dec
das
aam
xor
cmp
das
sar
pminsw
mov
inc
xor
loop
fstp
les
xlat
je
(bad)
(bad)
jmp
xor
adc
xchg
sbb
push
repz
add
sbb
in
add
(bad)
(bad)
mov
test
push
ds
popf
je
cmp
sub
std
(bad)
(bad)
(bad)
xor
jns
pop
xchg
and
push
loopne
sbb
mov
fs
sti
mov
cmc
(bad)
(bad)
push
push
sub
xchg
div
inc
cli
pextrw
pop
div
cmc
mov
cmp
(bad)
jg
inc
add
pop
cmps
aad
mov
xor
jle
add
mov
stos
mov
(bad)
push
adc
dec
cli
cmp
retf
gs
pop
dec
(bad)
xor
and
or
jp
adc
sbb
aaa
into
inc
and
ins
mov
xchg
(bad)
(bad)
(bad)
inc
movs
frstor
cmc
pop
jg
dec
dec
cmp
mov
arpl
dec
mov
test
(bad)
jmp
stos
xchg
add
pop
adc
mov
mov
jge
jle
ss
dec
mov
pop
or
icebp
popa
gs
cld
addr16
mov
(bad)
push
sar
ds
jmp
pop
idiv
mov
and
and
aad
jle
cmps
(bad)
(bad)
(bad)
(bad)
clc
clc
mov
stos
cmp
lock
mov
inc
sub
jecxz
cdq
stos
inc
jmp
sbb
mov
sub
or
(bad)
jmp
std
push
xor
push
push
jecxz
std
mov
adc
arpl
gs
call
out
lahf
mov
mov
(bad)
popf
test
mov
outs
ins
cli
lds
or
movs
pop
ins
cld
jmp
aaa
xor
es
jo
ins
mov
(bad)
jg
jg
arpl
sub
aam
ss
push
add
(bad)
jmp
lods
mov
pop
cdq
ja
jo
or
std
(bad)
das
add
fiadd
mov
add
hlt
aaa
jnp
and
(bad)
inc
shl
test
xchg
ror
sbb
mov
adc
dec
jle
sbb
mov
pop
add
ret
jl
clc
fisttp
add
or
xor
mov
(bad)
dec
push
sbb
scas
sbb
ins
xor
lahf
js
loopne
shr
(bad)
(bad)
push
std
sub
in
mov
add
adc
or
movs
cmp
pop
push
pop
inc
jne
mov
or
icebp
add
ret
adc
daa
je
in
(bad)
(bad)
dec
pusha
stc
mov
out
pushf
data16
mov
mov
push
inc
and
(bad)
push
cdq
add
cli
scas
fisttp
aaa
jae
jnp
fisttp
mov
mov
loope
ret
repz
iret
xchg
fmul
push
add
ds
pop
pusha
ret
jmp
jne
mov
(bad)
call
in
in
(bad)
(bad)
(bad)
sti
xrelease
addr16
jmp
into
fadd
aaa
or
mov
out
dec
out
out
(bad)
(bad)
fcomip
push
stos
fcomp
cmc
jbe
push
or
cmp
sbb
jmp
(bad)
mov
xchg
data16
(bad)
adc
mov
(bad)
(bad)
call
in
push
xchg
mov
bswap
jp
adc
stos
test
test
(bad)
(bad)
(bad)
inc
sub
or
test
int
test
daa
cmp
cli
mov
jmp
(bad)
(bad)
(bad)
(bad)
pslld
xor
add
sbb
ins
adc
jne
sub
jp
aaa
mov
clc
mov
jle
mov
or
dec
in
fwait
lods
cs
out
adc
inc
div
jp
lods
add
aaa
mov
jb
lea
mov
ins
cmps
std
dec
xlat
(bad)
(bad)
call
in
outs
jbe
push
loope
push
xor
dec
daa
push
(bad)
rcl
cmc
mov
loop
jg
cs
js
cmovle
popa
mov
sbb
jecxz
js
out
mov
fwait
push
data16
pop
call
inc
mov
lds
xchg
pushf
rcr
mov
or
mov
cli
ins
sub
into
sbb
dec
sti
xchg
inc
call
outs
jmp
pusha
dec
je
push
inc
in
(bad)
(bad)
call
dec
arpl
aam
into
or
call
js
call
xchg
arpl
jecxz
add
xchg
aaa
lock
and
call
cli
add
daa
jne
leave
(bad)
popa
imul
xor
aam
lods
dec
inc
cmc
(bad)
(bad)
call
and
std
das
sbb
add
ss
push
adc
arpl
(bad)
(bad)
call
dec
and
mov
dec
aaa
fsubr
aas
(bad)
sub
cmp
int
mov
loopne
jmp
and
dec
jne
xchg
aam
into
push
push
in
je
or
(bad)
fstp
daa
jle
jbe
aam
jmp
push
es
fs
inc
cmp
pushf
in
push
push
sub
jge
inc
add
sbb
loop
cld
call
jle
cs
xchg
mov
push
aad
jnp
cmp
movs
adc
push
nop
jp
repz
jge
stos
fnsave
xor
or
adc
mov
inc
fidiv
not
cli
mov
mov
jmp
cmp
mov
mov
(bad)
(bad)
jmp
xchg
aad
inc
xor
add
test
add
jb
xchg
dec
(bad)
(bad)
(bad)
(bad)
cmp
xchg
outs
adc
pop
ret
pop
push
pusha
into
out
mov
lods
icebp
inc
leave
cwde
dec
cmc
(bad)
(bad)
push
and
pop
pusha
adc
and
sub
pop
dec
stos
(bad)
(bad)
(bad)
not
add
push
jge
mov
sub
jb
pop
(bad)
(bad)
(bad)
push
or
test
mov
adc
ss
or
or
mov
xor
inc
or
or
stos
mov
push
push
push
inc
bound
add
(bad)
jmp
jp
dec
mov
iret
repz
sbb
mov
(bad)
add
(bad)
(bad)
inc
(bad)
std
inc
aad
mov
iret
stc
sbb
sete
inc
popf
xchg
add
sbb
(bad)
(bad)
(bad)
cmp
mov
cmp
xor
ret
das
arpl
mov
add
dec
xor
add
xchg
daa
(bad)
(bad)
(bad)
inc
ins
jl
cmp
push
dec
xchg
sbb
or
cdq
(bad)
pop
cli
jmp
cli
(bad)
out
into
rcl
or
inc
nop
je
pop
sti
jb
sti
in
mov
add
daa
fild
movs
jmp
mov
inc
push
cmp
or
jmp
cmp
dec
xchg
lea
data16
dec
outs
jl
xchg
xchg
stos
and
add
(bad)
jmp
rcr
jmp
xchg
xor
cmps
popf
mov
xor
mov
es
(bad)
(bad)
(bad)
jmp
mov
cmp
xchg
cmps
mov
stc
jns
dec
mov
aaa
jb
jp
push
gs
xchg
das
ror
dec
scas
rcr
cmp
sbb
pop
test
data16
hlt
mov
jae
mov
sbb
(bad)
(bad)
mov
xchg
sbb
xor
inc
pushf
adc
xor
popf
dec
cmp
sar
(bad)
(bad)
(bad)
xchg
mov
jbe
mov
aad
push
adc
xchg
push
xchg
xor
add
call
pop
jmp
(bad)
(bad)
push
push
cmp
inc
test
fld
pushf
shl
inc
cmp
aaa
cmp
std
outs
jns
popa
nop
inc
push
adc
test
out
mov
xchg
jbe
test
push
add
adc
ss
cwde
and
pop
(bad)
ss
(bad)
fnsave
(bad)
lods
paddq
push
push
je
dec
jbe
xor
(bad)
(bad)
push
pop
inc
pop
push
mov
jae
jmp
cmp
mov
fwait
cwde
int3
idiv
(bad)
(bad)
cmp
xchg
and
inc
scas
mov
pop
aad
inc
fstp
cmp
pop
lods
das
xchg
jo
call
fwait
repnz
jp
push
call
ss
inc
jae
shl
add
pop
ins
add
in
sbb
adc
jae
iret
or
jbe
jmp
pop
adc
mov
(bad)
fadd
and
es
iret
in
fimul
push
cmp
jge
jmp
mov
xor
pop
and
mov
imul
push
aaa
clc
(bad)
(bad)
call
xchg
push
cmc
int
(bad)
xchg
fadd
std
jae
push
or
mov
xor
(bad)
jg
outs
out
push
push
cmc
mov
jne
pop
movs
cmp
aam
(bad)
and
xchg
sar
push
hlt
dec
ss
mov
aad
dec
xor
push
fld
inc
mov
pop
xor
inc
cmp
ins
push
aaa
(bad)
inc
sbb
jne
push
pop
(bad)
cld
inc
jne
mov
add
cwde
sub
loop
mov
push
popa
jmp
imul
mov
clc
or
push
add
dec
push
test
dec
(bad)
mov
jnp
ret
test
fmulp
xchg
jmp
sar
push
push
popf
pop
es
movs
dec
cmp
xchg
mov
sub
(bad)
(bad)
(bad)
call
sbb
sti
dec
mov
mov
imul
cmps
xor
sahf
sahf
push
inc
xor
(bad)
(bad)
(bad)
dec
loopne
pushf
mov
pop
mov
sub
aaa
dec
push
jmp
daa
cmp
inc
mov
mov
(bad)
call
sbb
jnp
(bad)
mov
adc
cli
pushf
pop
mov
mov
mov
cmp
or
(bad)
fdivr
inc
jp
mov
sub
mov
out
adc
cmp
cld
adc
loopne
mov
(bad)
jmp
jmp
mov
(bad)
cld
loope
add
jle
int3
and
xchg
adc
test
(bad)
(bad)
(bad)
(bad)
jp
cmp
cmc
(bad)
icebp
pop
movs
or
sub
xchg
mov
inc
sbb
inc
cmp
dec
push
fwait
cmp
cs
(bad)
cmc
dec
dec
(bad)
adc
fisttp
adc
and
(bad)
(bad)
jmp
pop
push
outs
je
jbe
push
mov
xchg
push
mov
jge
scas
sbb
mov
mov
jmp
test
add
pop
sbb
(bad)
jnp
inc
cmp
push
sub
call
shr
jle
(bad)
popf
cdq
aam
data16
xor
xchg
push
adc
jmp
in
adc
push
es
dec
cs
loopne
mov
xchg
cld
jle
js
push
mov
clc
aaa
sbb
dec
or
add
ret
shr
fwait
stos
aas
add
arpl
pop
push
push
sub
lea
repz
cli
(bad)
jmp
loopne
arpl
nop
add
mov
adc
xor
dec
xchg
sahf
inc
es
inc
inc
push
push
imul
int
call
int
and
sahf
je
or
scas
push
retf
cmp
lock
cmp
dec
sub
xchg
and
and
sbb
sbb
inc
xchg
mov
add
and
test
imul
ror
(bad)
cmps
add
loopne
test
fiadd
cmps
(bad)
frstor
xchg
cmp
aam
lea
cld
(bad)
jge
xor
(bad)
out
jne
cmp
jns
or
sbb
sub
push
sub
mov
or
lods
cmp
cmp
cmp
les
and
cmps
xor
jg
xor
mov
adc
jmp
sbb
jbe
lods
fwait
mov
call
adc
pushf
into
and
or
xchg
test
mov
cmp
or
retf
push
adc
fwait
mov
xchg
(bad)
call
jp
pop
sbb
test
arpl
stos
cmp
cmp
and
cmc
push
sar
jmp
mov
mov
xchg
js
repnz
xlat
mov
mov
jmp
xchg
sahf
mov
add
push
sar
call
pop
push
cmp
adc
stc
mov
sub
mov
rcl
call
sbb
popa
inc
test
(bad)
call
cli
arpl
add
loopne
fsubr
adc
mov
popa
pop
mov
call
pop
aaa
imul
(bad)
(bad)
mov
pop
push
push
xchg
inc
rcr
pop
mov
xor
mov
inc
sbb
inc
or
adc
(bad)
(bad)
call
adc
xor
mov
inc
hlt
in
cmp
loope
rcr
(bad)
call
cmp
mov
push
push
ss
(bad)
in
daa
aaa
dec
loopne
mov
jae
mov
call
xchg
jnp
mov
mov
ficom
sub
jl
mov
or
jle
(bad)
(bad)
(bad)
call
fcomip
jp
xor
outs
leave
mov
dec
mov
and
test
jecxz
test
(bad)
(bad)
dec
mov
imul
aaa
sub
adc
push
push
push
not
pop
xor
push
mov
pop
jno
pop
push
jo
popa
test
in
inc
mov
mov
dec
rol
in
pop
xchg
ds
add
movs
(bad)
xor
push
adc
inc
ror
jp
dec
push
sbb
imul
xor
push
ror
call
dec
adc
push
iret
jne
aas
fwait
add
scas
xchg
dec
ja
scas
inc
sbb
inc
cmp
jnp
dec
ja
or
pop
cld
fisub
xchg
in
pushf
sub
(bad)
xchg
jbe
cmp
call
shl
mov
cmp
xchg
and
je
sbb
jmp
outs
xor
jo
dec
mov
int
imul
std
(bad)
retf
pop
and
mov
inc
popf
pushf
pop
push
add
pop
add
mov
cmp
enter
ret
jmp
or
(bad)
js
(bad)
call
push
enter
push
cmp
dec
(bad)
inc
or
nop
inc
pop
(bad)
(bad)
(bad)
jmp
daa
add
push
mov
pop
and
cmp
mov
(bad)
mov
jae
fwait
aam
push
ror
fs
jmp
test
(bad)
dec
ja
cmp
xchg
lds
pop
adc
add
mov
jmp
(bad)
(bad)
jg
jp
xor
xchg
test
cmp
sub
(bad)
and
(bad)
(bad)
inc
sub
daa
sbb
shl
gs
loopne
inc
add
jmp
mov
xchg
jnp
push
sti
xchg
loop
lock
xchg
cwde
(bad)
xor
adc
pop
dec
retf
jns
ss
jne
add
xchg
jne
(bad)
(bad)
mov
add
hlt
sub
cmc
adc
cs
loope
jmp
adc
call
pop
push
retf
push
pushw
out
cld
das
mov
cli
adc
(bad)
(bad)
fild
jp
mov
pushf
cmp
cmp
iret
push
jnp
movs
(bad)
(bad)
(bad)
jmp
sbb
in
dec
movs
mov
mov
dec
xor
and
inc
das
sbb
jnp
(bad)
(bad)
jmp
lea
jle
and
xchg
add
xchg
jecxz
aas
and
(bad)
cld
call
adc
pop
push
jne
repz
call
xor
cmc
add
add
cli
(bad)
lock
in
xchg
cli
retf
inc
(bad)
(bad)
(bad)
dec
xor
push
mov
loop
sub
iret
xor
sub
mov
cmc
call
(bad)
(bad)
(bad)
dec
test
cmps
retf
vpmulhw
fdivr
adc
add
cmp
(bad)
(bad)
(bad)
jnp
push
pop
push
inc
push
scas
dec
sbb
out
sti
outs
in
lahf
add
xchg
cmp
les
push
ins
fcomip
call
xchg
xlat
(bad)
(bad)
fbld
push
js
sbb
std
adc
and
into
pop
in
loopne
jmp
ja
nop
jne
xlat
mov
cmp
(bad)
(bad)
call
out
loopne
xor
or
(bad)
lock
cld
bound
js
or
(bad)
dec
retf
push
xor
add
fisub
jmp
(bad)
push
call
pusha
jbe
mov
xor
cwde
cmps
sub
push
aaa
cmp
in
mov
mov
add
cmp
jg
sti
sbb
outs
or
fadd
push
add
(bad)
out
cli
(bad)
out
in
jnp
xor
jns
fsubr
retf
jae
call
hlt
(bad)
inc
mov
xor
mov
into
cpuid
popf
ds
(bad)
fistp
mov
ja
sub
fucomi
je
inc
push
(bad)
cdq
test
jge
(bad)
push
sbb
push
mov
add
dec
jne
pop
rol
xor
jge
aaa
rol
sbb
jmp
ins
sub
das
fdiv
call
in
fadd
pop
push
pop
adc
(bad)
push
int3
mov
sar
jmp
gs
adc
das
cdq
mov
and
inc
pop
sbb
jmp
shr
test
pop
cmp
jb
sbb
call
stos
pop
(bad)
(bad)
fld
adc
and
xor
mov
(bad)
(bad)
jmp
enter
adc
les
lds
ds
clc
pop
or
aad
pop
clc
cdq
inc
cmc
inc
data16
sbb
push
jge
(bad)
cmp
cmp
add
sahf
jg
(bad)
(bad)
sti
(bad)
fwait
cmp
push
aam
cli
int3
into
je
in
test
cwde
lods
add
(bad)
jmp
dec
lods
jbe
mov
cmp
xchg
cmps
jbe
(bad)
mov
sbb
push
push
in
jmp
stos
add
sub
(bad)
fcomip
mov
sbb
cmp
inc
ins
mov
jbe
pop
(bad)
jmp
inc
jmp
jns
mov
lea
or
gs
mov
call
rcr
mov
neg
or
(bad)
jge
div
jne
xor
popa
cld
(bad)
cmp
(bad)
not
cmp
(bad)
(bad)
jg
push
or
rol
xor
or
sbb
test
fcomp
xlat
xor
movs
idiv
(bad)
dec
xor
inc
fmul
fidiv
sub
mov
and
mov
(bad)
(bad)
dec
push
fs
mov
jg
bound
aam
mov
fst
inc
repz
mov
ja
cld
(bad)
(bad)
out
cmp
push
sti
das
jge
mov
dec
sbb
cmp
or
inc
mov
sbb
jnp
lea
mov
add
rcl
push
call
dec
dec
pop
inc
adc
outs
clc
data16
fnsave
inc
js
push
xchg
ins
fstp
mov
xor
or
(bad)
(bad)
(bad)
sti
rol
cmp
cwde
ja
mov
imul
dec
in
repnz
mov
pop
cmp
out
inc
xor
out
mov
(bad)
dec
or
test
mov
mov
pop
cs
xor
xchg
hlt
mov
add
jge
out
lock
push
std
push
movs
add
inc
ret
movs
xchg
dec
aas
and
jmp
xchg
mov
jp
jne
push
in
bound
inc
push
cli
(bad)
dec
sub
push
push
fiadd
cmovae
(bad)
inc
into
mov
cdq
mov
pop
mov
(bad)
(bad)
(bad)
fcomip
or
pop
inc
dec
sti
scas
std
xchg
jns
cmp
jne
or
fild
jmp
inc
mov
jp
mov
mov
(bad)
push
aad
into
dec
hlt
test
and
mov
bound
ins
stos
add
js
adc
mov
pusha
jmp
(bad)
mov
add
loop
push
adc
cmp
mov
mov
stos
add
mov
mov
jmp
int3
sbb
cld
addr16
jg
inc
xor
adc
icebp
sti
leave
mov
(bad)
xchg
das
lock
jne
or
(bad)
push
aad
sbb
add
add
dec
inc
pop
fsub
dec
mov
jnp
jo
bswap
aaa
dec
xchg
test
std
(bad)
mov
mov
push
push
fdivr
movs
push
mov
das
not
(bad)
jg
push
loopne
inc
adc
cli
inc
lods
jne
cmp
jns
sbb
push
(bad)
dec
add
or
ja
push
ins
or
es
fbld
mov
sbb
ss
xor
in
jle
cmp
(bad)
das
pop
mov
push
div
call
or
jne
cmp
(bad)
stos
not
xchg
(bad)
(bad)
(bad)
dec
gs
ins
nop
scas
sbb
sti
xchg
pop
mov
pop
lods
nop
mov
popf
jp
jae
dec
into
(bad)
fbld
sbb
lock
inc
aas
jne
test
xlat
fcomip
popf
cwde
mov
xchg
or
adc
fdivr
(bad)
(bad)
mov
inc
pop
add
or
push
stos
add
mov
das
fsubr
adc
pop
cld
mov
jmp
xchg
cmp
fucom
pushf
xchg
loopne
cli
or
dec
inc
(bad)
jmp
cmps
(bad)
test
(bad)
mov
xchg
adc
and
loope
jg
outs
cmps
push
and
rcl
jbe
inc
pop
jnp
xlat
add
jno
(bad)
(bad)
mov
add
and
jecxz
test
fcomip
jmp
mov
jb
xor
adc
pop
stc
push
jl
lahf
push
(bad)
(bad)
(bad)
in
sbb
sbb
add
dec
xchg
push
je
adc
je
xchg
sub
push
jnp
dec
push
sbb
or
retf
stos
daa
in
int
adc
jg
fsub
push
ret
push
or
xchg
xor
push
gs
outs
mov
(bad)
jno
retf
fcomip
adc
call
sbb
iret
pop
pop
mov
or
cli
ja
jns
fisttp
ins
sub
retf
xchg
inc
push
in
outs
lea
(bad)
(bad)
(bad)
(bad)
in
rol
ins
and
sar
std
mov
and
call
push
push
adc
xor
mov
stos
xlat
ret
pop
fwait
push
pop
(bad)
(bad)
(bad)
dec
mov
pop
dec
xchg
mov
cmc
stos
sbb
lea
push
(bad)
dec
sub
test
mov
dec
into
sub
jbe
xchg
cs
jmp
mov
cmp
(bad)
in
dec
cmp
cs
dec
mov
sub
jp
pop
adc
cmp
adc
or
and
mov
dec
jae
push
xchg
cmp
pop
adc
mov
jae
push
mov
aam
push
adc
es
ss
cs
cmp
cmp
inc
hsubpd
jbe
mov
mov
mov
and
sub
add
imul
out
inc
or
mov
aas
jns
adc
pop
jmp
lds
rcr
ja
mov
push
xchg
retf
or
mov
sbb
xchg
ins
sbb
push
push
xchg
rcr
imul
push
cmp
(bad)
rol
push
aaa
cld
(bad)
inc
clc
push
in
inc
outs
fwait
cmp
add
aas
cvtpi2ps
jbe
popa
jecxz
and
outs
mov
out
pop
push
jne
mov
lods
xchg
ja
loope
(bad)
(bad)
(bad)
cmp
mov
xchg
js
hlt
jg
daa
rcl
xchg
dec
cld
adc
jns
push
mov
(bad)
mov
lods
outs
push
sub
(bad)
mov
xor
icebp
cmp
add
pop
cmc
daa
and
sub
sar
out
mov
jmp
mov
retf
test
cmps
call
pop
mov
jbe
adc
adc
sar
(bad)
jmp
inc
aaa
push
and
pop
sbb
lock
sar
pop
and
ins
sub
sub
xchg
xchg
pop
mov
mov
(bad)
sar
das
add
jg
ins
adc
pop
jl
jge
inc
push
mov
sbb
das
scas
call
jnp
ret
push
idiv
xchg
stos
jnp
push
movs
push
mov
lock
jae
scas
cli
(bad)
dec
xchg
hlt
pushf
dec
push
aad
cdq
sub
jmp
mov
test
(bad)
call
pop
cmps
pop
imul
test
xor
jnp
gs
xor
fistp
sbb
push
ja
mov
inc
sub
cmp
cmp
jbe
inc
push
mov
and
mov
(bad)
adc
add
or
push
jmp
or
retf
xchg
gs
xchg
imul
and
xchg
xor
(bad)
jmp
js
cpuid
cld
fsub
movs
data16
mov
mov
cmps
orps
adc
ret
test
sbb
loop
dec
xor
adc
sub
add
ja
(bad)
cmp
mov
jne
push
xchg
test
daa
sbb
call
pop
jle
lods
pop
cmp
lods
pushf
push
pop
push
(bad)
mov
xor
mov
xor
std
xchg
repz
fisttp
push
adc
jmp
xor
add
adc
jmp
push
popf
jbe
movs
les
lods
jle
mov
push
jmp
push
(bad)
(bad)
(bad)
jmp
jp
(bad)
jmp
cmp
sbb
dec
push
retf
outs
xchg
push
int3
adc
adc
es
dec
shr
out
jle
ss
ds
or
jmp
fidiv
jg
pop
sub
jge
jmp
not
(bad)
jmp
mov
inc
xchg
fidivr
gs
jge
cmp
sub
dec
loopne
jge
bnd
jae
repz
test
ja
fsubr
(bad)
cs
push
jge
inc
(bad)
push
retf
in
ror
push
loop
out
jmp
cli
outs
cmp
pop
mov
or
pop
clc
punpckhwd
(bad)
(bad)
fisttp
push
dec
das
pop
mov
cmps
push
aas
adc
inc
inc
or
dec
push
xor
xchg
sar
xor
cld
cmp
test
aaa
push
or
push
pop
ja
jg
fidiv
xchg
adc
aaa
dec
clc
call
es
jge
cmps
xchg
(bad)
mov
jle
push
std
call
neg
test
mov
jecxz
sbb
mov
dec
add
push
sbb
push
and
jmp
cmp
push
xor
cmp
fs
jle
push
into
pusha
inc
cmc
cdq
fisubr
(bad)
(bad)
(bad)
inc
mov
sub
sbb
mov
pop
and
cmp
mov
rcr
mov
inc
mov
je
lock
hlt
cld
cld
repnz
jle
add
or
xchg
sti
pop
push
jge
dec
fs
inc
dec
in
cld
(bad)
dec
cmp
movs
dec
xchg
adc
pushf
sbb
ror
(bad)
jmp
les
fcomp
adc
in
sbb
aad
push
cs
push
lock
xchg
(bad)
and
leave
sub
xor
push
push
dec
sbb
(bad)
push
pop
add
jge
sub
pop
jns
aaa
sub
sub
and
fs
pop
leave
test
(bad)
(bad)
(bad)
cmp
shl
fld
test
shl
push
leave
jmp
in
stc
push
add
jle
scas
loopne
(bad)
(bad)
std
(bad)
and
xor
push
cmp
pop
inc
push
ins
dec
arpl
push
inc
inc
pop
mov
call
inc
push
bound
jge
xchg
ret
aad
pop
sub
jmp
stos
shl
dec
add
mov
or
sti
mov
jle
or
add
xor
jge
and
(bad)
(bad)
mov
mov
adc
lods
shr
test
inc
mov
sub
push
aad
mov
in
aaa
jle
sbb
push
lods
push
dec
push
(bad)
call
rcr
push
inc
jecxz
and
ds
cmp
inc
xchg
mov
dec
inc
fisubr
sbb
(bad)
(bad)
jmp
push
outs
lea
into
jbe
jge
cmp
sbb
jge
test
(bad)
out
clc
sub
cmps
push
cdq
scas
shl
or
arpl
or
and
dec
fisubr
out
inc
out
mov
test
fwait
add
call
or
cs
cmp
sbb
loope
jbe
ins
(bad)
lods
jge
xchg
push
push
pop
adc
inc
(bad)
repnz
jae
(bad)
(bad)
push
jnp
add
mov
fwait
mov
add
inc
sbb
add
es
(bad)
retf
push
jbe
movs
jle
cwde
ss
loopne
add
sahf
mov
cmps
into
cmp
mov
jmp
or
(bad)
fiadd
fucom
push
jge
mov
dec
test
sti
push
add
ins
or
jmp
jbe
xchg
jmp
sub
xor
adc
ret
add
(bad)
jmp
inc
inc
ja
sub
add
cmp
or
mov
inc
pop
jmp
clc
push
daa
dec
sbb
inc
inc
jae
push
jnp
fisttp
cld
push
mov
push
jle
xchg
shl
jbe
mov
sub
les
add
pop
jg
outs
add
sbb
and
sbb
add
add
sbb
sub
add
xchg
dec
push
(bad)
push
xor
(bad)
(bad)
(bad)
(bad)
sti
jge
push
ss
je
lods
push
aaa
retf
fistp
push
inc
mov
sbb
shr
adc
adc
je
sbb
jbe
data16
lahf
(bad)
jle
fist
push
stc
pop
stos
ja
jbe
(bad)
(bad)
call
or
and
popf
test
jae
mov
js
(bad)
(bad)
push
popf
retf
ins
pop
xor
popa
pop
push
cmp
mov
imul
inc
out
mov
jbe
inc
and
mov
and
ins
pop
mov
fwait
cmp
ins
fdivr
pushf
pop
popa
(bad)
(bad)
(bad)
(bad)
fsubr
push
fsub
pop
jge
push
mov
or
aad
add
or
xchg
cmp
(bad)
(bad)
call
push
pushf
add
sbb
and
es
xor
(bad)
xchg
into
je
pop
icebp
(bad)
mov
inc
push
xor
cmc
imul
or
add
add
dec
add
ins
mov
sub
(bad)
call
xor
inc
mov
push
mov
pop
sub
arpl
imul
add
sub
call
stos
pop
aaa
inc
mov
mov
xor
cmp
mov
cmp
cld
popa
add
and
dec
adc
in
and
aam
mov
clc
(bad)
(bad)
dec
push
lea
fs
ins
(bad)
je
jle
dec
jne
fiadd
movs
lods
and
call
push
and
mov
cs
in
in
mov
(bad)
(bad)
jg
sub
adc
add
cmp
or
lds
mov
or
dec
mov
push
ss
mov
fcomip
push
cmp
imul
in
fs
cmp
jmp
mov
popf
xor
dec
imul
mov
(bad)
(bad)
inc
add
xor
sbb
adc
sbb
sub
ss
mov
push
adc
ins
aaa
gs
dec
jmp
aad
stc
jmp
(bad)
dec
in
xor
ja
sbb
and
sub
(bad)
(bad)
cmp
inc
gs
dec
ja
push
cmp
cmps
ds
enter
adc
jg
mov
sbb
cmp
push
out
mov
add
lods
adc
sub
std
push
clc
stos
(bad)
jmp
cld
sub
jbe
mov
jae
cmps
pop
mov
mov
push
sbb
scas
repnz
out
sar
push
dec
int3
ds
fwait
add
mov
sbb
sub
pop
inc
outs
add
sub
mul
push
int
les
jmp
cli
jp
pop
cli
jnp
in
push
xlat
mov
push
ds
ret
xchg
adc
(bad)
inc
push
sbb
pop
mov
outs
adc
push
fdivr
xchg
xchg
jge
scas
test
js
(bad)
jmp
xchg
push
pop
xor
movs
not
call
dec
bound
es
(bad)
cmp
call
xor
sbb
sbb
or
pop
dec
dec
sub
cmc
jmp
in
idiv
inc
or
push
xor
push
arpl
push
(bad)
inc
cmp
jnp
mov
dec
idiv
pop
push
or
and
and
popa
sahf
sbb
sub
(bad)
jnp
cmp
add
inc
daa
xor
test
pop
popa
cmp
(bad)
dec
cdq
ss
cmp
sub
test
mov
ja
(bad)
inc
test
cmp
cmps
pop
mov
pop
add
ds
mov
dec
cmp
idiv
push
lods
inc
sti
jle
add
loop
pop
jae
pusha
xchg
jo
js
or
jge
cmp
jmp
mov
stos
push
mov
test
fdivr
loopne
call
imul
jne
(bad)
pmaxsw
adc
fcomip
(bad)
ds
cmp
add
cmp
pop
xor
test
push
outs
and
(bad)
(bad)
push
(bad)
sbb
push
mov
mov
cld
push
xchg
add
fidivr
add
add
into
cmp
mov
pop
pop
push
retf
aaa
pop
(bad)
(bad)
call
pop
int
test
mov
cmp
cmc
cmp
cmps
sub
or
lahf
call
(bad)
jns
aaa
or
jnp
and
aad
fwait
add
in
pop
in
add
push
cld
inc
adc
mov
jns
push
push
jge
push
fs
push
add
es
popa
mov
jge
cmc
les
sar
fisub
jmp
push
outs
cmp
(bad)
fadd
add
ss
adc
aaa
xor
ss
adc
xor
push
add
pop
mov
ror
ss
icebp
or
(bad)
(bad)
(bad)
inc
cmp
cmps
and
mov
jge
cmc
into
adc
stos
add
xor
(bad)
push
jg
push
mov
fadd
inc
mov
sbb
call
xchg
add
ss
adc
adc
push
inc
idiv
dec
sbb
cwde
fbld
cli
jmp
aad
xor
aaa
ins
mov
cmps
push
add
std
clc
push
fnsave
adc
push
mov
xchg
dec
out
pop
test
sub
sub
add
ja
sbb
(bad)
inc
and
inc
mov
inc
push
imul
add
(bad)
push
push
mov
xchg
cmp
cwde
retf
xchg
ins
cmp
cli
mov
repnz
shr
icebp
(bad)
call
pop
das
inc
fist
cmc
ret
sub
outs
stos
neg
adc
sar
xchg
retf
(bad)
xor
push
xor
out
nop
js
xchg
pusha
push
push
pushf
cld
inc
mov
push
xchg
and
stos
call
mov
mov
sub
(bad)
fwait
enter
aad
fldcw
into
stos
stos
aam
mov
xchg
fcomip
push
mov
popf
cmp
jo
ja
sub
cli
dec
retf
(bad)
(bad)
(bad)
(bad)
cmp
pop
inc
sbb
push
movs
cmp
mov
jbe
mov
out
xchg
pop
out
add
inc
xor
stc
mov
cld
stos
pushf
jae
inc
mov
add
mov
or
or
and
mov
cmp
mov
shl
in
and
cmps
jnp
push
clc
mov
cmp
daa
jae
pop
data16
or
lock
test
inc
enter
mov
pop
xchg
mov
or
popa
mov
rol
mov
(bad)
(bad)
fdivrp
inc
add
imul
and
inc
add
mov
(bad)
mov
sahf
sahf
sbb
jne
ds
cmc
pop
test
and
(bad)
(bad)
(bad)
jns
aas
adc
xchg
ficom
sbb
inc
push
push
ficomp
jne
sub
mov
fdiv
idiv
(bad)
(bad)
call
pop
pop
xor
shl
push
popa
aaa
das
mov
jg
(bad)
jmp
mov
test
icebp
pop
jne
mov
jp
cmp
out
(bad)
mov
test
xchg
mov
xor
fnstsw
fst
fwait
(bad)
(bad)
inc
repnz
mov
jge
jge
sbb
xor
lea
sti
xchg
adc
and
(bad)
inc
mov
jge
cld
test
lds
int
(bad)
call
sbb
in
inc
cmc
dec
adc
je
push
cmps
xor
dec
call
clc
adc
jmp
inc
jbe
push
sbb
pop
dec
jae
jmp
idiv
push
push
mov
(bad)
jmp
int
push
xchg
enter
test
inc
xor
push
lahf
pop
aad
cmps
icebp
aaa
lods
jg
jbe
(bad)
jmp
(bad)
and
add
dec
shr
(bad)
(bad)
(bad)
cmp
call
inc
mov
add
xchg
jne
mov
add
(bad)
dec
ins
cmp
jmp
sahf
xor
cld
jp
or
sti
inc
outs
adc
call
cs
and
mov
xchg
shl
sbb
pop
dec
lods
mov
(bad)
(bad)
call
inc
jge
push
test
sub
xchg
aad
fnsave
(bad)
call
jmp
sti
push
movs
repnz
jmp
loop
inc
mov
jb
inc
pop
test
rcl
cmps
xor
jp
adc
outs
retf
jp
lock
and
sbb
xor
cld
(bad)
jg
adc
sbb
les
(bad)
fsub
mov
(bad)
(bad)
dec
bound
inc
cmp
jne
ds
mov
cdq
pop
les
cmp
push
add
call
xor
pop
add
add
(bad)
mov
adc
ret
push
mov
sub
cld
or
(bad)
xor
add
push
jne
sub
add
(bad)
(bad)
dec
push
mul
push
imul
add
pop
and
add
(bad)
(bad)
fild
pop
jg
sub
bound
cwde
jne
cmc
ror
nop
(bad)
(bad)
(bad)
fisttp
xchg
xor
loopne
jge
adc
in
add
aas
lods
cmp
or
inc
dec
adc
pop
or
cmp
adc
xchg
scas
mov
mov
(bad)
ins
(bad)
jg
and
inc
mov
adc
jge
pop
pop
or
(bad)
(bad)
(bad)
fild
fnsave
(bad)
jno
add
sub
adc
xlat
xor
inc
ficomp
xor
mov
cmp
aad
jmp
push
xor
loope
sbb
pop
add
mov
and
das
popf
xor
(bad)
call
inc
inc
cmp
add
(bad)
push
add
std
daa
clc
sub
or
jle
dec
data16
mov
daa
out
add
std
sub
jns
xor
clc
(bad)
js
sub
sbb
sbb
push
ins
sub
dec
mov
inc
call
bound
xchg
sti
cli
add
aas
mov
movs
aaa
(bad)
jg
adc
je
xor
js
jo
hlt
adc
dec
push
les
(bad)
call
pushf
push
sbb
dec
xchg
ds
outs
pop
push
push
mov
(bad)
call
dec
pop
push
push
adc
and
repnz
div
(bad)
(bad)
jp
jmp
add
sbb
xchg
push
dec
fwait
sub
pushf
aaa
cmp
cmp
cmp
inc
and
jb
push
mov
outs
mov
(bad)
(bad)
push
lea
fldcw
xchg
sbb
inc
push
dec
movs
lea
and
add
cmp
xor
(bad)
call
and
and
adc
adc
jnp
cdq
fwait
dec
(bad)
mov
or
ret
test
cld
(bad)
(bad)
call
ror
fld
mov
xchg
mov
and
mov
or
(bad)
(bad)
jmp
mov
xchg
xor
cmp
mov
test
cdq
mov
or
(bad)
inc
jge
add
jge
cmp
lea
out
inc
or
(bad)
mov
cmp
sub
dec
add
sti
or
jp
add
cmps
mov
sub
cmp
push
cmp
push
xchg
push
xor
xlat
repz
push
pop
pop
and
das
and
push
ins
mov
je
mov
adc
(bad)
(bad)
push
inc
mov
sbb
ins
mov
jnp
in
test
call
cli
push
xor
jmp
push
popa
xchg
push
aam
mov
sbb
sub
mov
lock
jge
scas
jl
repnz
sub
push
dec
lock
mov
mov
ds
sbb
jp
(bad)
(bad)
(bad)
(bad)
js
pop
adc
iret
daa
push
adc
push
sahf
ret
dec
xor
sub
les
aad
movs
mov
jnp
adc
pop
xor
xchg
out
push
je
push
jo
pop
jo
xor
call
pop
mov
sub
jmp
sbb
xor
dec
cwde
stos
sbb
cmp
adc
cld
(bad)
cmp
movs
iret
test
adc
adc
jo
(bad)
adc
lods
adc
(bad)
call
xchg
ffree
mov
retf
push
jo
add
xor
test
hlt
jb
mov
aad
iret
clc
scas
cli
(bad)
js
sbb
xor
ret
push
cmp
sub
scas
push
cld
test
fidivr
cmp
push
inc
jb
dec
inc
jb
xchg
sbb
bswap
mov
cmp
lock
push
aam
sar
jg
sub
popf
pop
repnz
mov
jl
pop
sub
add
dec
shr
out
pushf
pop
jmp
les
leave
pop
lahf
mov
rcr
jo
sbb
jmp
jmp
mov
sbb
jbe
div
arpl
loope
repz
or
jl
xchg
int3
in
std
ins
stos
xchg
into
cmp
sahf
cmp
add
push
mov
mov
into
mov
out
out
add
dec
and
jle
inc
and
cmp
in
imul
inc
repnz
jge
sahf
ss
jae
ins
inc
cmps
inc
add
adc
and
sahf
mov
xor
inc
loop
je
dec
cmp
jle
test
lock
movs
ss
lods
pushf
dec
sub
sbb
shr
(bad)
jg
rol
lds
mov
jno
mov
dec
push
nop
or
in
popa
inc
jo
xor
jge
rol
adc
test
(bad)
(bad)
shl
cmp
rcl
sbb
mov
cmps
fs
ins
outs
dec
pop
imul
cmps
sbb
mov
push
xor
adc
call
fbld
lea
jne
(bad)
and
and
fwait
sar
dec
(bad)
fisubr
test
std
xchg
adc
scas
inc
in
push
mov
pop
js
xchg
fnstsw
mov
mov
bound
push
(bad)
(bad)
jmp
mov
sbb
jp
aaa
sbb
(bad)
dec
adc
outs
xchg
mov
call
pop
ret
(bad)
adc
add
ret
popf
(bad)
call
(bad)
cmp
in
push
daa
jge
xchg
aas
jle
xor
lahf
scas
aas
scas
xlat
xor
mov
jne
ror
cmc
iret
test
ror
jns
pop
fist
pop
int3
jg
fbld
jo
js
dec
mov
(bad)
ins
cmp
mov
lods
(bad)
jmp
add
movs
pop
sbb
cmp
jg
aaa
test
push
xchg
xor
inc
xor
adc
lock
and
mov
out
call
loopne
or
pop
xchg
sbb
push
jmp
(bad)
mov
push
cmp
xchg
into
loop
jbe
arpl
ds
pop
icebp
jmp
icebp
or
test
in
cmp
sub
aaa
xchg
push
push
cmps
rcr
scas
xchg
(bad)
(bad)
pop
loopne
or
push
cmps
(bad)
sub
fwait
into
add
sub
push
mov
aam
test
popf
sti
jmp
or
jle
mov
xchg
lods
cdq
pop
ins
inc
arpl
jae
xor
cmp
cmp
add
xchg
sbb
pop
rol
(bad)
(bad)
push
and
and
pop
add
scas
xchg
or
ins
fwait
adc
adc
and
jmp
inc
mov
or
jle
dec
dec
jge
dec
sub
dec
bound
loope
sbb
xchg
shr
hlt
(bad)
(bad)
jmp
aaa
movs
pop
lods
fst
mov
loope
int3
retf
push
aam
fdivr
in
or
inc
adc
(bad)
dec
ds
int3
jmp
lock
jno
push
mov
jge
sar
pop
test
add
icebp
clc
sub
(bad)
jge
inc
add
sbb
xchg
and
push
jp
(bad)
jmp
xor
jne
aad
sub
xchg
ret
retf
pop
test
arpl
mov
pushf
das
xchg
aaa
ins
aas
(bad)
test
inc
push
dec
(bad)
jmp
clc
sbb
mov
icebp
cmps
shr
mov
xor
mov
ins
xchg
ffreep
inc
out
(bad)
and
(bad)
xor
push
scas
push
xlat
fstp
mov
dec
inc
mov
sbb
pop
stc
sbb
dec
shr
movs
jo
(bad)
ds
jg
(bad)
ins
popf
or
mov
cwde
mov
mov
add
pop
mov
mov
add
shl
cmp
inc
popa
aad
test
jae
cmp
jg
and
dec
and
ficomp
daa
out
(bad)
dec
inc
out
dec
ffreep
jns
jne
sbb
dec
movs
test
mov
(bad)
(bad)
(bad)
(bad)
mov
pusha
int
and
adc
push
fstp
cmp
pop
cmc
sub
pop
xor
cmp
inc
push
jmp
xchg
pop
in
aaa
xor
mov
jle
sahf
xchg
xchg
mov
dec
mov
pop
(bad)
push
jnp
jle
pop
sbb
xchg
div
sahf
lods
or
(bad)
(bad)
jg
push
sbb
mov
dec
mov
imul
lea
scas
clc
(bad)
call
retf
add
movs
add
xchg
and
sub
adc
aam
jge
push
(bad)
(bad)
mov
dec
xchg
sub
mov
shl
test
pop
jae
(bad)
pop
std
test
adc
or
mov
rol
adc
push
clc
(bad)
ds
sbb
aas
sbb
jae
mov
sub
dec
aaa
cmp
(bad)
(bad)
jmp
mov
dec
and
and
jp
je
sub
popf
cmp
les
lock
lods
cdq
fdiv
inc
in
pop
xor
push
and
or
pop
or
popa
cmps
mov
scas
jns
xor
pop
add
(bad)
inc
pop
mov
jle
adc
in
ror
cdq
retf
inc
(bad)
(bad)
jg
push
ret
inc
jge
cmp
mov
sahf
or
dec
fbstp
sbb
xlat
(bad)
cmp
jge
mov
dec
loop
mov
test
ret
movs
dec
mov
cdq
mov
inc
shl
outs
push
scas
ss
pop
retf
aaa
daa
pop
aaa
popa
(bad)
aas
js
mov
stos
push
add
mov
loopne
add
out
out
xchg
call
dec
or
cli
(bad)
dec
sbb
mov
pop
stos
dec
push
ds
push
jmp
jmp
lahf
nop
sub
sbb
test
mov
test
ds
enter
(bad)
fisttp
or
imul
sbb
dec
or
sub
int3
mov
cmp
inc
adc
push
sub
pop
inc
shl
out
adc
test
mov
jge
add
mov
(bad)
push
jbe
fdivr
pop
icebp
or
and
xchg
into
int3
xchg
outs
(bad)
out
mov
and
(bad)
in
jg
mov
jmp
push
and
sub
xor
adc
test
mov
push
cmc
pop
daa
in
xchg
adc
push
add
add
mov
in
ss
outs
pop
pop
xchg
rol
mov
push
xor
mov
cld
pop
and
not
sti
push
in
jne
lods
xchg
pushf
aas
sbb
mov
xor
cmp
ds
fucomip
clc
das
arpl
xchg
fwait
mov
mov
mov
(bad)
inc
ss
es
dec
jecxz
jge
inc
cmp
push
(bad)
inc
xchg
sbb
stos
movs
inc
les
jge
dec
(bad)
(bad)
call
and
xchg
rol
dec
pop
mov
test
inc
outs
clc
(bad)
dec
pusha
push
jb
xchg
mov
(bad)
pop
push
popa
das
aas
mov
pop
pop
push
mov
xchg
pop
scas
dec
adc
dec
mov
adc
sub
dec
cld
scas
cli
adc
sbb
rcr
addr16
pusha
in
and
push
mov
add
cli
(bad)
fcomip
jle
aad
sbb
push
and
xchg
sub
fiadd
jmp
retf
fcomp
or
push
mov
loop
ret
retf
cdq
ror
inc
ficom
loop
loop
pop
mov
repnz
and
out
push
inc
sbb
out
xor
cwde
ins
outs
push
fidiv
fld
jg
xchg
call
and
dec
pop
lahf
add
in
xor
or
inc
loopne
xchg
aam
les
xor
cmp
or
jg
xlat
mov
mov
pusha
shl
push
adc
sub
cmp
adc
into
cld
loope
ds
dec
push
fidivr
mov
inc
(bad)
jl
mov
sbb
int3
fwait
xor
stos
push
lds
mov
sbb
xlat
adc
fdivr
jg
sub
ds
sbb
dec
or
dec
inc
jle
or
(bad)
clc
mov
add
ds
aad
(bad)
dec
adc
cmc
pop
sub
push
in
inc
push
popf
inc
jl
xor
push
mov
pop
sbb
inc
ds
xchg
jle
inc
xchg
sbb
xchg
into
and
(bad)
(bad)
scas
shl
sub
mov
adc
mov
xor
(bad)
mov
dec
cmp
pushf
sbb
mov
jno
jae
retf
mov
gs
cmp
stos
or
fimul
clc
dec
jnp
mov
inc
jl
mov
lods
add
ret
cmp
or
fcomip
pop
scas
sub
sahf
into
daa
es
cs
push
xchg
mov
fadd
xor
shl
icebp
dec
scas
clc
jg
adc
push
stos
rcl
jbe
fstp
cld
cmp
(bad)
(bad)
(bad)
call
arpl
je
push
test
cwde
cdq
xchg
data16
pushf
add
jle
mov
adc
jo
jne
(bad)
(bad)
(bad)
jmp
sahf
mov
xor
pop
mov
xor
adc
loope
sub
call
sbb
push
out
shl
dec
push
mov
ficomp
lods
out
cli
cmp
fisub
push
jb
pop
jp
call
std
fisubr
es
retf
jne
sbb
call
aaa
test
dec
shr
push
bswap
gs
add
ins
xor
outs
retf
xor
jle
gs
fstp
pop
fdivr
pop
loopne
adc
stos
jmp
sub
addr16
cmp
xchg
inc
movd
pop
(bad)
xchg
mov
push
jge
dec
(bad)
jmp
xchg
jne
fadd
push
les
mov
(bad)
ds
jge
cmp
pop
out
out
or
sub
sbb
(bad)
(bad)
dec
inc
stos
ds
rol
pop
push
pusha
jge
cmp
xor
fcom
push
outs
ins
mov
shl
dec
call
dec
and
je
sbb
out
mov
es
lea
push
add
les
(bad)
xchg
fstp
cs
xchg
(bad)
(bad)
push
mov
sub
data16
or
fwait
mov
xchg
cmp
jmp
(bad)
call
fild
jmp
or
push
sub
dec
mov
pop
mov
jge
inc
aad
jp
xchg
ins
jne
mov
push
test
(bad)
es
and
(bad)
push
adc
pop
mov
or
ret
push
jns
fmul
mov
(bad)
call
jne
test
shl
popf
push
pop
fiadd
(bad)
jmp
movs
clc
test
arpl
mov
push
pop
add
imul
data16
repnz
(bad)
(bad)
push
xor
add
pushf
sbb
data16
je
scas
push
test
lock
xchg
cmp
pushf
mov
(bad)
(bad)
call
stos
mov
push
mov
int3
sub
adc
ins
mov
push
jne
sbb
(bad)
(bad)
dec
xor
inc
jge
cmp
pop
xor
pop
jno
xchg
jle
xchg
jb
(bad)
mov
pop
add
aad
daa
cmc
mov
(bad)
dec
and
lock
pop
sub
mov
mov
(bad)
dec
mov
lea
jae
mov
daa
xchg
mov
push
adc
inc
int
mov
cmc
aad
mov
pop
push
leave
shl
(bad)
cmp
movs
sbb
adc
jg
ds
idiv
arpl
pop
inc
(bad)
jmp
jecxz
push
mov
add
adc
inc
push
in
adc
out
es
(bad)
(bad)
call
sub
mov
imul
in
mov
pop
fdiv
cmp
sub
or
inc
stc
pop
int
aam
inc
movs
adc
data16
fs
sbb
push
add
(bad)
(bad)
call
cmp
je
add
push
in
mov
dec
clc
repz
push
xor
aaa
add
cwde
mov
pusha
jp
push
int
ret
xor
(bad)
(bad)
call
neg
or
push
or
in
dec
xchg
xchg
dec
adc
push
push
jmp
(bad)
jl
jae
fidiv
dec
adc
xchg
dec
dec
mov
(bad)
(bad)
std
cmp
cmp
sbb
cmps
ret
mov
idiv
xchg
dec
jne
cmp
clc
(bad)
dec
into
push
setne
into
mov
std
xor
jno
fisttp
adc
(bad)
jl
arpl
inc
mov
out
retf
retf
xchg
mov
(bad)
call
push
mov
nop
xor
or
call
mov
(bad)
sub
xchg
push
sahf
popf
sar
(bad)
dec
inc
test
add
mov
lds
ror
das
xor
push
xchg
cvtdq2ps
stos
(bad)
jmp
js
je
clc
xor
fdiv
rcl
xacquire
pop
or
jae
xchg
test
repnz
test
(bad)
mov
xchg
pop
div
jle
dec
imul
sub
(bad)
(bad)
jmp
xchg
int3
(bad)
jle
adc
mov
mov
shl
out
mov
cmp
add
mov
retf
ins
xor
mov
in
outs
inc
(bad)
(bad)
in
mov
jb
mov
cmp
ds
push
in
into
sbb
inc
aad
inc
aam
loop
aad
mov
xlat
mov
pop
xor
jne
mov
push
fs
add
cs
push
aam
sub
sbb
je
rcr
fld
sbb
(bad)
inc
ds
out
jnp
adc
shl
adc
push
mov
pmulhw
(bad)
(bad)
(bad)
stc
and
push
mov
adc
(bad)
call
mov
fwait
cmp
(bad)
pop
ins
call
cld
sar
stos
mov
test
into
inc
and
or
jne
jmp
ret
inc
push
aam
sub
xchg
in
or
mul
popa
mov
cmp
cmc
or
out
pop
and
push
test
xchg
inc
or
jo
sbb
add
fisubr
mov
int
fnstenv
lock
(bad)
(bad)
jmp
mov
and
pop
psubw
add
fcom
jae
xchg
xor
jmp
jmp
sbb
cmp
dec
and
push
mov
adc
push
dec
sub
mov
test
jge
xor
(bad)
sub
jge
mov
data16
mov
adc
adc
stc
mov
fild
mov
sub
(bad)
(bad)
(bad)
call
call
je
jbe
xchg
and
sar
leave
lods
inc
into
sub
sub
adc
jmp
sbb
(bad)
in
ret
repnz
retf
push
in
cmp
(bad)
jmp
ins
mov
cmp
and
sbb
rol
dec
popf
mov
(bad)
jg
jne
adc
xchg
jp
(bad)
adc
pop
lahf
pop
sub
jbe
inc
or
(bad)
call
mov
xchg
adc
cmps
ja
mov
lock
push
(bad)
sub
xor
cmp
mov
retf
(bad)
(bad)
pushf
or
mov
xor
cmp
fwait
sbb
(bad)
push
jne
cmp
jns
add
inc
push
lock
(bad)
(bad)
push
cmp
dec
mov
push
adc
gs
ja
mov
push
dec
dec
(bad)
call
xchg
fstp
xor
xchg
mov
pop
(bad)
(bad)
mov
xchg
popf
test
mov
cmp
push
jbe
and
add
adc
xor
mov
mov
xor
sbb
(bad)
inc
std
in
cld
mov
fwait
mov
xor
jb
cmp
out
dec
mov
(bad)
(bad)
inc
cmp
loop
outs
mov
in
retf
fs
mov
pop
pop
adc
jecxz
stos
mov
repnz
loope
add
cmp
mov
fstp
mov
jae
mov
push
sub
jg
jge
cmp
jge
cmps
pop
sar
jge
add
repnz
es
add
push
(bad)
(bad)
push
fist
test
test
and
addr16
add
jbe
dec
sbb
cmp
(bad)
(bad)
push
xor
in
cmp
popf
cmp
xor
jo
repz
test
mov
push
sti
mov
mov
test
and
mov
ins
retf
iret
push
jl
(bad)
(bad)
xchg
cdq
xor
(bad)
push
pop
or
xor
(bad)
cmp
adc
dec
(bad)
cmc
xor
xchg
xor
(bad)
mov
clc
adc
push
in
jge
push
push
int3
push
push
(bad)
es
cmp
(bad)
mov
jne
cmp
and
adc
cmp
push
and
sahf
test
push
xor
push
shr
sub
mov
mov
push
mov
mov
jge
jne
cwde
sti
(bad)
(bad)
push
mov
pop
mov
hlt
(bad)
mov
fdivr
inc
pop
jp
call
(bad)
dec
repz
imul
jp
sbb
jae
inc
pop
(bad)
(bad)
(bad)
jmp
aad
inc
rcr
mov
sub
pop
mov
popa
and
mov
adc
(bad)
(bad)
call
xor
pop
cmp
cmp
pop
sbb
je
(bad)
call
ss
pop
popf
jp
outs
cmp
lods
jle
retf
xor
(bad)
(bad)
jmp
ret
mov
dec
scas
jbe
mov
ret
sti
cli
retf
pop
push
mov
mov
(bad)
push
daa
retf
mov
ret
push
retf
xor
ja
outs
repz
(bad)
scas
call
or
cmps
ret
mov
cld
xor
xlat
(bad)
call
pushf
xchg
push
mov
mov
mov
cmp
loope
stos
(bad)
jmp
js
inc
xor
out
mov
std
mov
data16
add
(bad)
(bad)
push
into
mov
cmp
repz
mov
sbb
in
in
cmp
(bad)
jmp
fcom
neg
lds
jmp
push
lods
aam
mov
or
and
push
ja
sbb
mov
push
jg
xchg
or
xchg
pop
gs
inc
repnz
jns
ds
popf
dec
cmc
cmp
pop
jae
test
call
adc
jbe
adc
add
mov
inc
xchg
cs
xchg
mov
clc
ficom
cmp
ins
(bad)
jge
and
push
ins
imul
push
mov
ins
add
add
push
jb
lea
pop
inc
sbb
out
xor
inc
add
movs
dec
sub
(bad)
jg
imul
add
scas
jae
xchg
fadd
jo
xchg
retf
mov
(bad)
jg
gs
mov
leave
in
ret
adc
cmp
rol
jmp
mov
xchg
and
and
xchg
mov
fldenv
xchg
pop
sbb
push
mov
mov
ret
and
movs
daa
das
sbb
ror
pop
js
adc
mov
fdivr
jne
mov
mov
sbb
out
cmc
(bad)
(bad)
jmp
js
cmp
fcom
or
scas
call
and
fnstsw
push
xchg
sbb
inc
cs
arpl
les
jg
adc
pop
and
jl
in
(bad)
call
sub
jle
mov
ror
icebp
xchg
adc
dec
xor
jmp
jmp
jge
adc
push
inc
inc
test
ret
test
pop
ds
dec
mov
imul
jnp
push
les
je
inc
pushf
xor
jmp
das
add
adc
jmp
popa
add
add
xor
and
xchg
stos
sub
int3
aam
push
mov
pop
push
call
bound
push
sub
jb
sbb
mov
sub
xchg
or
mov
(bad)
jmp
std
sbb
out
push
dec
imul
add
cld
push
clc
jmp
sub
test
test
sub
add
(bad)
cmp
inc
push
dec
jns
es
inc
xchg
test
(bad)
call
jl
jecxz
push
push
pop
enter
call
push
and
jmp
movs
cs
jecxz
cmp
test
fs
pop
out
outs
inc
out
lock
call
(bad)
jg
dec
mov
xor
xchg
cmp
pop
out
add
mov
lds
or
sbb
stos
arpl
cmp
mov
sbb
sub
fwait
adc
cld
push
mov
mov
mov
js
push
inc
jge
cmp
cmps
and
mov
xchg
jge
push
imul
cmp
sbb
add
(bad)
cmp
stos
mov
dec
mov
adc
stos
push
test
pop
adc
data16
pushf
and
inc
sub
(bad)
mov
in
cdq
xor
adc
dec
inc
xchg
outs
icebp
(bad)
in
jmp
add
jle
mov
loop
dec
push
loop
jo
cmp
inc
jge
mov
out
xor
mov
or
dec
rcr
in
movs
xchg
inc
out
(bad)
(bad)
fisttp
call
sbb
sbb
cs
adc
sub
cli
push
pop
enter
jmp
aaa
xor
jne
push
inc
push
pop
mov
clc
(bad)
(bad)
call
sbb
ss
inc
pop
ins
cmp
mov
xchg
cmp
fwait
(bad)
daa
das
sub
aam
ror
lea
adc
retf
inc
push
in
add
cmp
mov
mov
(bad)
(bad)
cmp
or
ins
adc
jge
sbb
xor
push
add
mov
jg
(bad)
dec
xor
sub
cmp
adc
inc
sbb
ins
push
xchg
mov
(bad)
(bad)
(bad)
call
and
cmp
and
mov
or
jnp
leave
xor
rol
dec
pop
sar
(bad)
jmp
test
outs
xchg
sub
das
or
fadd
movs
adc
dec
jg
sar
addr16
sbb
push
ja
cli
retf
push
mov
cmps
jge
cmp
pop
or
(bad)
dec
push
push
test
add
dec
cld
nop
cmp
test
lods
or
inc
inc
add
in
stos
loopne
push
call
cmc
lock
outs
sbb
mov
lock
adc
sub
ror
das
movs
idiv
outs
jg
fs
mov
in
loop
mov
dec
inc
in
inc
call
xor
adc
enter
inc
outs
cdq
xor
jb
mov
xchg
cmp
push
fdivr
add
jle
mov
lock
(bad)
cmp
xchg
xchg
mov
inc
in
xor
inc
and
loop
icebp
xor
sub
(bad)
(bad)
in
fild
(bad)
inc
inc
sub
dec
or
pop
mov
ins
mov
mov
test
mov
scas
outs
(bad)
(bad)
cmp
repnz
fstp
rcr
leave
retf
(bad)
call
pushf
push
stos
fst
cmp
sbb
test
mov
and
push
and
cmp
pop
push
mov
mov
mov
ds
sub
stos
cmp
pop
mov
push
adc
pop
ret
rcl
outs
pop
sub
jg
jg
(bad)
jge
movs
cmp
inc
je
and
imul
jge
cmp
or
adc
inc
jl
call
mov
gs
(bad)
ins
or
jne
ds
jge
xor
(bad)
pop
icebp
push
mov
nop
push
xchg
ss
xchg
mov
mov
xchg
adc
mov
call
inc
shr
shl
or
shr
loopne
call
loopne
mov
and
sbb
push
sub
jge
stos
jmp
fld
outs
outs
add
hlt
fld
sub
fdiv
and
inc
mov
xchg
pop
les
jno
add
adc
fs
outs
sub
call
sbb
jle
xchg
mov
dec
xchg
rcl
add
jle
aad
jle
mov
out
pop
ds
xchg
fwait
mov
push
cwde
hlt
cmp
mov
retf
clts
rcl
fld
and
push
jmp
repz
frstor
mov
inc
mov
push
std
jg
sub
or
pop
sub
fisttp
adc
(bad)
mov
cmp
aaa
pop
sbb
imul
jae
add
sti
(bad)
fild
ins
loope
jmp
pop
dec
add
jle
mov
and
jle
jg
ds
and
pop
imul
xchg
inc
aaa
dec
sbb
pop
mov
inc
call
cmp
pop
test
scas
cli
mov
iret
add
xchg
lock
jne
jae
xchg
lods
mov
(bad)
std
(bad)
inc
into
pusha
mov
ror
cmp
iret
sub
jo
sbb
jnp
dec
or
inc
lahf
in
data16
stos
or
and
mov
jg
inc
xor
push
push
stos
mov
xchg
add
adc
cs
push
xchg
mov
(bad)
lea
sar
aad
fwait
cmp
out
sub
xchg
lock
add
inc
ss
cmp
push
push
jbe
(bad)
call
push
pop
xchg
std
loope
xchg
and
push
ret
add
dec
xchg
cld
(bad)
(bad)
(bad)
call
fnstsw
stos
js
or
(bad)
stc
popf
pop
mov
pop
mov
mov
jne
inc
(bad)
(bad)
(bad)
push
push
ficom
out
dec
(bad)
pop
sub
cld
stos
arpl
test
dec
(bad)
or
jg
xchg
(bad)
jns
sub
cmp
pop
cmp
jge
push
jge
push
sbb
icebp
push
xchg
call
shl
sbb
movs
push
lods
retf
push
mov
sub
pop
dec
add
(bad)
call
pop
sbb
xchg
adc
mov
adc
adc
or
stos
in
(bad)
call
aas
and
xor
sbb
add
mov
idiv
mov
cmp
jle
mov
cli
push
push
ja
(bad)
sbb
add
mov
push
mov
popf
(bad)
popf
cmp
mov
pop
cli
ret
xlat
test
dec
fbld
bound
or
sub
cmp
call
mov
push
(bad)
mov
adc
push
std
(bad)
(bad)
cmp
mov
in
pop
adc
cmp
(bad)
outs
test
mov
ins
stos
jmp
test
xchg
cmc
mov
xchg
call
mov
(bad)
mov
cmp
ds
cmp
enter
jge
(bad)
mov
mov
aad
imul
mov
cli
push
scas
call
test
add
xchg
push
mov
ror
std
jmp
in
repz
adc
fwait
xor
pop
jb
outs
xor
jne
(bad)
(bad)
(bad)
push
pop
sub
and
je
movs
loop
icebp
lock
xor
aam
xchg
jbe
mov
js
push
jns
dec
pop
(bad)
jg
dec
(bad)
call
shl
movs
loopne
xchg
push
sbb
jg
or
sub
(bad)
inc
loope
adc
test
test
rcr
push
jb
(bad)
jmp
and
mov
aaa
mov
jne
iret
sbb
xlat
mov
pop
fsub
imul
test
ds
cdq
in
adc
xchg
dec
push
jge
mov
loopne
xor
into
call
(bad)
jmp
es
dec
push
sahf
dec
push
mov
gs
ins
shl
dec
add
dec
(bad)
int3
lea
inc
sbb
adc
cmp
inc
repz
data16
jle
mov
out
out
xchg
ds
pop
retf
ror
into
dec
jle
outs
add
arpl
xor
xor
out
adc
mov
idiv
call
cmp
xchg
cld
dec
fild
mov
mov
movs
add
and
inc
cmp
stos
jle
test
mov
int3
into
aam
retf
inc
fdivr
pusha
mov
inc
repnz
jmp
jmp
les
adc
jb
jp
add
mov
jecxz
xchg
in
jle
mov
mov
sub
push
ret
dec
jmp
add
push
mov
push
out
popa
cld
(bad)
call
mov
pop
mov
lods
push
or
movs
adc
sbb
mov
pop
stos
sub
sub
jg
aas
inc
xchg
and
inc
pop
dec
mov
lock
or
mov
xchg
xor
out
jne
xchg
xchg
mov
or
inc
cmp
mov
xor
inc
mov
(bad)
(bad)
dec
lds
int
sbb
jge
fstp
inc
sub
pop
xchg
jle
sahf
jge
mov
fisub
sbb
push
add
push
or
sbb
and
adc
push
js
nop
test
(bad)
out
mov
ds
pop
ss
ins
rcl
repz
mov
pop
xor
pop
cmp
movs
inc
cli
or
mov
cs
push
ins
ds
lods
jge
inc
fmul
in
(bad)
ins
adc
add
or
sub
jg
outs
sub
mov
jle
mov
and
dec
sub
xor
inc
ror
jg
call
ds
push
pop
and
jp
adc
inc
xchg
push
call
add
pop
cli
add
jle
mov
inc
xchg
clc
(bad)
jmp
xlat
push
mov
out
adc
lods
aaa
in
neg
add
rcl
mov
imul
cmp
jo
nop
jle
mov
jbe
add
js
push
or
das
pop
lock
pop
inc
in
xchg
or
dec
mov
cld
fcomp
sub
ret
scas
cmp
jne
mov
push
lea
xchg
xchg
inc
popf
stos
mov
clc
jge
or
and
pop
hlt
fwait
imul
cmc
cmp
pop
push
add
jle
mov
sbb
sar
inc
fidiv
in
(bad)
push
cs
cs
rcr
and
push
sbb
xor
jae
sbb
and
push
jg
cdq
repz
stos
je
adc
je
xchg
xchg
movs
jns
cli
call
sar
xor
aam
fadd
hlt
add
mov
(bad)
aas
push
mov
sbb
add
jle
mov
sbb
sbb
ja
fcomip
(bad)
jmp
jbe
push
push
jb
jp
adc
test
or
es
dec
nop
(bad)
out
jno
mov
lods
pop
aas
pop
pop
jmp
clc
jmp
push
sbb
inc
cwde
push
movs
inc
mov
mov
stos
(bad)
(bad)
(bad)
jmp
fnsave
in
or
in
fcomp
jecxz
cmc
lea
inc
test
push
and
push
push
xchg
inc
es
push
xor
xor
xchg
inc
sub
dec
fisub
dec
ins
cmp
xchg
push
fsubr
aaa
test
out
add
mov
arpl
xor
imul
push
lahf
icebp
fcomip
and
cmp
stos
fwait
mov
test
cli
mov
jge
cmp
inc
add
jle
mov
clc
jg
movs
pop
js
cs
mov
add
sub
loop
push
mov
(bad)
jmp
jae
sub
inc
cmp
sbb
dec
arpl
retf
popa
imul
jno
cmp
jle
mov
(bad)
stc
jge
cmp
sub
inc
rcr
pop
mov
mov
xchg
inc
or
pop
xor
scas
push
push
mov
xchg
jo
push
scas
ret
retf
call
sub
rcl
xchg
fisubr
and
sub
inc
jle
mov
cli
push
lahf
xchg
mov
and
push
sub
sbb
scas
mov
push
sub
add
clc
fistp
aaa
inc
bound
(bad)
call
sbb
inc
push
pop
and
or
lock
sbb
jne
pop
(bad)
(bad)
(bad)
call
fdivr
mov
(bad)
mov
jge
push
test
adc
mov
(bad)
dec
in
xor
dec
or
(bad)
push
push
push
es
cmp
xchg
cmps
push
mov
add
inc
jge
out
aaa
retf
rcl
cmp
aad
inc
sub
jge
rol
xchg
sub
call
arpl
ret
mov
push
or
sbb
push
lock
jae
adc
xor
push
icebp
out
push
lods
add
aaa
call
stos
aam
stos
sar
aad
in
cdq
xlat
push
inc
push
aad
sub
push
bound
or
mov
pop
push
or
or
push
adc
(bad)
mov
stos
mov
sbb
jmp
mov
mov
fimul
cli
jge
cmp
pop
push
add
jle
scas
pop
ins
adc
sbb
test
mov
loopne
(bad)
jmp
cmp
xchg
sub
xchg
inc
xor
cmp
imul
sub
mov
mov
adc
sub
jne
pop
das
jge
dec
imul
test
pop
movs
fild
adc
mov
xchg
into
sbb
in
adc
clc
mov
or
aad
inc
fisttp
es
pop
cld
scas
leave
adc
fidiv
and
add
jae
jnp
adc
xor
sbb
test
mov
mov
cmp
push
loop
fsub
inc
jle
mov
movs
push
les
ins
inc
cmp
pop
pusha
add
daa
sbb
and
mov
jecxz
adc
imul
pop
jg
push
call
in
mov
clc
mov
xchg
stos
arpl
mov
mov
push
mov
test
jmp
loop
mov
daa
loopne
mov
pop
std
out
clc
or
test
sub
inc
daa
push
(bad)
(bad)
inc
adc
pop
cs
pusha
bound
fs
aad
xchg
in
popf
cmp
push
mov
dec
nop
je
add
jle
mov
jecxz
mov
xchg
or
inc
lods
sub
mov
push
enter
call
(bad)
(bad)
push
cmp
cmp
outs
ss
fwait
xor
and
fs
xor
fild
inc
xor
jl
pop
outs
mov
pop
lock
cmps
sahf
add
jle
mov
repnz
cmp
pop
(bad)
call
xor
adc
mov
fwait
inc
loopne
in
test
ret
add
stos
(bad)
jg
aad
jp
cmp
xchg
jns
out
adc
xchg
out
push
cwde
cld
pop
(bad)
(bad)
jmp
sti
xor
add
xor
lods
add
adc
xor
mov
sub
test
mov
jo
jl
test
imul
ds
sub
sbb
or
je
out
jl
mov
outs
mov
xchg
daa
and
jecxz
test
add
cmp
cmp
jns
cdq
jle
mov
pop
pop
movs
les
sbb
mov
sbb
adc
push
stos
jb
adc
(bad)
out
rcl
jmp
dec
call
mov
std
push
rcl
mov
mov
push
push
hlt
mov
(bad)
fbld
mov
sahf
test
shl
mov
imul
call
dec
fsubr
(bad)
cmp
or
imul
and
mov
xchg
retf
in
pop
sar
or
xor
sub
adc
or
gs
mov
ins
sub
and
lea
push
lock
(bad)
fadd
xor
shl
shr
push
cmps
mov
call
add
or
adc
sbb
xchg
and
scas
cli
jmp
sub
push
and
dec
adc
jle
mov
mov
rol
pop
jp
jge
dec
inc
mov
scas
cmp
(bad)
push
push
add
jge
cmp
popa
test
into
inc
xchg
stc
mov
call
stc
add
sub
adc
pusha
sub
gs
out
jne
dec
xor
dec
dec
mov
jnp
(bad)
(bad)
(bad)
jmp
dec
ds
cmp
sti
xor
outs
movs
ins
dec
ret
repnz
std
scas
(bad)
(bad)
(bad)
dec
hlt
mov
inc
jg
div
mov
icebp
inc
lods
adc
cmp
call
mov
xchg
dec
pusha
push
jae
cmp
lea
add
or
mov
add
std
jmp
lea
and
inc
and
adc
out
pop
ins
sbb
and
into
mov
jp
movs
imul
je
test
outs
lods
ds
dec
jg
enter
(bad)
fmul
mov
jb
enter
sub
cmp
dec
hlt
mov
add
ror
cmp
stos
xor
pop
adc
(bad)
(bad)
jmp
fwait
clc
jmp
lock
and
add
aaa
lock
inc
(bad)
(bad)
(bad)
call
test
mov
scas
sti
xchg
xor
retf
mov
pushf
(bad)
(bad)
(bad)
(bad)
dec
jle
(bad)
xchg
lea
jne
pop
das
ds
icebp
arpl
mov
jmp
stos
retf
fdivr
call
add
mov
(bad)
es
in
sahf
mov
fwait
outs
and
adc
sbb
outs
inc
jb
jecxz
daa
iret
gs
(bad)
push
ins
loop
jns
dec
inc
or
into
pop
adc
fdivr
jg
mov
repz
clc
into
push
loopne
in
and
cs
inc
jecxz
test
fsubr
mov
jmp
and
cmp
nop
imul
pop
fcom
push
xchg
aad
add
mov
test
inc
push
cmp
xchg
push
lds
(bad)
out
retf
movs
mov
jb
mov
cld
push
jae
dec
loopne
mov
mov
(bad)
(bad)
cmp
sub
mov
ror
xchg
fwait
inc
jl
push
lods
pop
mov
push
inc
mov
or
cmp
clc
xchg
sbb
popa
sub
cdq
xlat
mov
ret
imul
push
(bad)
push
call
fild
fild
lahf
lea
add
sbb
inc
cld
(bad)
(bad)
fdivr
data16
addr16
inc
lock
shl
mov
(bad)
jg
movs
push
fbstp
sahf
xor
cmp
sbb
xchg
inc
sbb
(bad)
inc
mov
in
bound
inc
jns
lods
adc
mov
push
pop
std
inc
adc
call
and
ins
push
arpl
jae
(bad)
jmp
push
icebp
jmp
and
lahf
inc
mov
mov
xchg
in
push
sbb
cmc
(bad)
push
retf
adc
inc
shl
mov
leave
cmp
(bad)
call
clc
mov
cli
add
fisttp
cmps
gs
pop
in
ds
or
xor
into
dec
(bad)
movs
xchg
aam
jmp
jle
xor
(bad)
(bad)
mov
mov
fsub
xchg
xchg
ret
add
adc
and
(bad)
adc
ja
mov
sti
lea
push
rcr
pop
sub
sar
clc
jmp
sub
sub
jmp
adc
call
xchg
idiv
inc
push
or
fadd
mov
call
popa
xchg
mov
clc
lock
sbb
pop
in
in
(bad)
inc
into
add
pop
in
jecxz
cmp
dec
vshufpd
jbe
(bad)
fcomip
(bad)
std
movs
push
test
push
mov
and
out
jmp
and
aam
(bad)
(bad)
jmp
sub
pop
rol
ins
shl
mov
pop
pop
jbe
mov
pop
(bad)
inc
add
daa
or
jnp
pop
inc
mov
scas
cmp
jmp
pop
push
mov
cmp
or
enter
jle
clc
(bad)
(bad)
dec
scas
inc
outs
fcmovne
pop
inc
in
push
call
inc
xor
mov
inc
call
dec
dec
and
add
push
inc
cmc
call
jge
jae
fdivr
aam
shl
fist
data16
xor
mov
or
sub
cmp
jb
ins
bnd
jl
aas
pop
es
sbb
cmc
(bad)
call
rcl
or
jp
out
dec
mov
(bad)
(bad)
dec
popa
cmc
xchg
into
jns
(bad)
xchg
sar
je
nop
xor
ds
mov
(bad)
(bad)
call
push
push
mov
pop
loope
fst
mov
outs
fdivr
dec
sahf
inc
pop
jne
sub
jne
dec
xchg
je
jg
outs
(bad)
(bad)
dec
cmp
push
xchg
add
sub
sbb
mov
stos
cdq
mov
dec
dec
dec
or
(bad)
call
sbb
retf
aad
push
adc
(bad)
(bad)
mov
mov
test
aas
imul
or
push
adc
or
cld
lea
scas
adc
lea
push
jmp
clc
(bad)
jg
ins
pop
xor
jne
fcomp
sbb
add
je
mov
(bad)
(bad)
jmp
daa
push
sbb
jecxz
sahf
mov
int3
and
or
mov
ror
dec
(bad)
(bad)
inc
icebp
add
stc
loopne
std
mov
ror
rol
mov
(bad)
pop
adc
pop
xor
pop
jmp
imul
(bad)
mov
cmp
(bad)
fcom
ret
cld
rcl
sbb
xor
(bad)
(bad)
mov
mov
cmps
sbb
(bad)
out
push
out
enter
sub
fwait
js
cmp
xor
(bad)
(bad)
jg
into
ins
popf
and
pop
clc
add
in
xchg
mov
inc
ja
push
pop
out
aad
test
(bad)
(bad)
jmp
pop
jge
hlt
add
shl
popf
xor
clc
or
add
mov
(bad)
cmp
loopne
movs
add
push
jae
and
cmp
cmp
dec
cld
jmp
cwde
mov
dec
jae
movs
xor
cmp
in
or
(bad)
pop
fs
push
and
mov
push
jmp
enter
mov
sub
cli
test
call
dec
sub
push
into
cmp
push
xor
int3
xor
inc
cmp
dec
sub
fsubr
(bad)
(bad)
(bad)
jmp
inc
mov
push
gs
inc
push
xor
retf
dec
mov
dec
call
ss
jp
iret
fsub
jns
jbe
sbb
(bad)
dec
stc
sub
mov
aam
nop
pop
(bad)
(bad)
mov
dec
rcl
(bad)
es
sbb
jb
mov
in
(bad)
jmp
inc
inc
mov
push
cld
mov
in
ds
out
adc
(bad)
(bad)
(bad)
(bad)
in
mov
lods
sbb
ret
add
test
xor
test
and
and
dec
add
sbb
call
mov
mov
ror
mov
mov
ror
arpl
dec
xchg
inc
cmp
ins
jne
sub
mov
loope
dec
stc
out
shr
jae
ss
add
jp
(bad)
(bad)
jmp
adc
imul
das
and
push
mov
aaa
and
(bad)
xchg
push
jnp
outs
cmps
movs
inc
arpl
(bad)
lock
inc
(bad)
(bad)
(bad)
push
mov
lods
sbb
xchg
adc
xor
test
jecxz
xchg
adc
pop
(bad)
stos
cmp
mov
add
pop
int3
cmp
push
cli
or
and
pusha
mov
inc
mov
jnp
inc
xor
inc
cmc
(bad)
(bad)
stc
cmp
data16
mov
(bad)
jno
adc
mov
cmps
test
pop
cmps
mov
not
adc
adc
xchg
stos
dec
std
mov
ffreep
out
in
lock
std
(bad)
(bad)
inc
(bad)
mov
mov
jnp
xor
outs
sbb
repnz
or
hlt
mov
mov
(bad)
jg
or
fs
lea
or
xor
push
cmc
(bad)
(bad)
inc
maskmovq
not
mov
jmp
xchg
lods
jp
das
jmp
jne
dec
fmul
push
lea
xchg
jp
jno
into
push
ret
inc
jecxz
fcmovnb
fcos
(bad)
(bad)
call
sbb
je
jecxz
jbe
ins
stos
je
std
xor
jle
mov
mov
lock
push
mov
call
adc
dec
xlat
mov
push
lahf
outs
loopne
(bad)
(bad)
mov
shl
test
cmp
outs
and
jmp
push
mov
cli
pop
dec
inc
or
popa
sbb
mov
inc
clc
scas
(bad)
cli
sub
push
lds
bound
add
pop
push
sub
xchg
inc
jmp
in
loope
adc
std
popa
cdq
(bad)
cmc
jp
jbe
or
add
(bad)
(bad)
(bad)
(bad)
mov
mov
sar
addr16
ja
or
push
out
mov
(bad)
(bad)
(bad)
call
div
(bad)
aam
mov
or
scas
ss
inc
daa
xor
pop
sbb
jle
jae
aad
push
jmp
lea
and
sub
push
aaa
mov
je
mov
xchg
repz
hlt
(bad)
(bad)
(bad)
mov
jb
adc
ds
not
sahf
idiv
div
scas
xor
or
adc
push
jge
dec
pushw
xor
mov
xchg
push
push
and
or
jne
(bad)
(bad)
(bad)
jmp
jecxz
(bad)
(bad)
xor
(bad)
sub
inc
aad
mov
push
in
xchg
sahf
xchg
fcomp
call
(bad)
aad
not
cmp
(bad)
ja
pop
test
ret
jecxz
inc
gs
and
(bad)
push
into
das
stos
sbb
pop
sbb
(bad)
cmps
(bad)
(bad)
(bad)
call
sbb
jbe
mov
jae
add
add
dec
je
sub
jg
(bad)
xor
mov
sub
(bad)
xchg
(bad)
push
test
scas
sete
cmc
xor
pop
lahf
cwde
idiv
xchg
dec
pusha
xchg
ret
sbb
adc
clc
mov
adc
inc
jbe
jne
ins
sub
sbb
je
(bad)
(bad)
call
xor
(bad)
int
mov
(bad)
push
out
mov
add
adc
fdecstp
popa
(bad)
jg
(bad)
(bad)
sub
paddsb
mov
addr16
mov
les
cli
jge
cld
(bad)
(bad)
(bad)
push
loope
cmp
and
adc
pop
ret
aas
add
push
xchg
jne
sar
(bad)
js
cli
call
inc
sar
js
or
out
nop
daa
in
add
sbb
test
mov
cmps
pop
(bad)
retf
push
div
ds
repnz
pop
adc
(bad)
call
ss
neg
add
mov
and
cmp
std
sbb
xchg
cmc
sbb
add
cmps
mov
ja
mov
retf
cwd
(bad)
(bad)
(bad)
inc
sub
xor
adc
sti
mov
pop
xor
sbb
pop
jae
sub
sbb
jp
push
cmc
jmp
(bad)
(bad)
ds
adc
aaa
push
mov
mov
inc
or
inc
xor
or
(bad)
(bad)
push
push
cdq
push
and
jle
pop
leave
idiv
cli
adc
sti
btc
sbb
(bad)
push
nop
(bad)
(bad)
mov
push
push
add
(bad)
cmc
fcomp
mov
fistp
and
or
cmp
jae
not
cld
cmp
sub
inc
push
push
inc
jp
adc
push
adc
repz
jne
xor
arpl
cmc
or
mov
mov
loop
hlt
rol
shr
(bad)
(bad)
call
pop
push
mov
repz
xor
push
(bad)
push
or
dec
ficom
pusha
out
or
fcmovnbe
xchg
inc
pop
(bad)
(bad)
jmp
fdivr
mov
imul
push
sbb
popf
lea
adc
dec
adc
imul
inc
data16
inc
dec
mov
inc
in
std
js
repz
cs
cmp
mov
mov
std
mov
jae
aam
adc
out
mov
retf
imul
mov
(bad)
(bad)
out
into
out
mov
xor
test
psadbw
dec
cld
or
xchg
into
scas
cli
jmp
mov
add
jg
aas
or
loopne
ja
push
(bad)
sub
(bad)
(bad)
js
and
dec
ss
ins
std
stos
jae
cmp
cld
add
or
fnstcw
xor
in
or
jmp
mov
mov
sbb
push
add
jle
dec
inc
cs
out
(bad)
imul
leave
cld
cmp
enter
xchg
lock
jge
pop
or
push
add
neg
inc
dec
mov
push
test
lgs
(bad)
mov
bound
xor
(bad)
(bad)
push
or
mov
jnp
add
pop
outs
aad
and
test
retf
std
push
sbb
jne
(bad)
stos
(bad)
call
jo
xchg
call
clc
mov
xchg
xchg
or
nop
in
xor
outs
out
and
pop
loopne
mov
inc
addr16
sub
xchg
(bad)
mov
add
jns
aam
cmp
in
xchg
inc
push
in
(bad)
(bad)
inc
jne
jae
jge
jnp
test
xchg
mov
or
aaa
into
adc
scas
(bad)
jmp
xchg
int
mov
cmp
iret
retf
cmp
mov
and
(bad)
mov
mov
outs
in
imul
ja
imul
rcr
(bad)
jmp
jecxz
inc
xchg
push
shl
and
je
je
lock
xor
mov
dec
fst
(bad)
(bad)
(bad)
dec
xor
popa
mov
popf
pop
add
push
test
xlat
fwait
inc
mov
xor
jnp
inc
xor
inc
pop
sub
aad
jmp
(bad)
(bad)
call
es
sbb
mov
loope
scas
push
(bad)
ins
mov
cdq
xchg
int
adc
(bad)
(bad)
push
or
mov
push
cmp
jl
cdq
cmc
mov
and
(bad)
inc
(bad)
fst
adc
inc
sub
add
cmp
inc
mov
retf
fistp
jne
add
(bad)
call
aam
pop
or
fld
jmp
fcmovnu
lea
pop
sub
xor
jge
(bad)
pop
test
jnp
cmp
jbe
jle
ret
sbb
add
xchg
mov
(bad)
sti
mov
pop
mov
mov
adc
xchg
jge
mov
pop
jge
sar
xor
sbb
imul
shr
imul
push
adc
mov
cs
loope
or
(bad)
jae
mov
arpl
es
clc
jg
es
jge
lods
mov
out
sar
int3
push
jecxz
cs
cmp
mov
cld
cmps
idiv
(bad)
(bad)
(bad)
jge
mov
sbb
inc
xchg
adc
inc
sahf
jle
dec
add
pop
(bad)
fisttp
push
ins
sbb
jl
dec
test
pushf
jae
call
std
jmp
inc
mov
fdiv
loop
repnz
xor
dec
in
jg
and
call
or
(bad)
out
pop
idiv
ss
jmp
jmp
cli
cdq
cmp
fild
mov
nop
xchg
add
inc
daa
mov
test
push
adc
imul
ss
cmp
xchg
in
aam
lea
bound
cmps
leave
and
add
add
jg
sub
push
je
mov
add
jmp
ja
xchg
xor
loop
bound
ss
es
pop
xchg
outs
xor
fisub
je
xchg
xor
dec
sti
mov
mov
inc
or
int
jge
sbb
fcmovnbe
(bad)
jg
xor
adc
jne
mov
push
lods
inc
and
jl
mov
pushf
xor
retf
ja
lock
sbb
jnp
ins
pop
push
jle
(bad)
inc
sbb
repnz
data16
fs
dec
push
pop
add
mov
and
and
clc
(bad)
inc
mov
je
movs
mov
sbb
adc
test
and
push
mov
inc
sub
push
or
(bad)
(bad)
push
push
pop
mov
mov
(bad)
retf
xchg
adc
or
repz
push
cld
test
(bad)
dec
xchg
pop
or
adc
jecxz
xchg
ss
jae
ins
cmp
jae
push
push
test
fs
pop
ins
mov
mov
add
pushf
lock
push
jne
dec
mov
int3
cld
jge
mov
fcomp
or
jge
(bad)
jmp
aaa
mov
cmps
cmp
in
int
mov
loop
(bad)
pop
lock
retf
push
lea
cmps
push
scas
ret
sahf
xchg
aas
xchg
ins
inc
push
(bad)
(bad)
jg
xchg
dec
sub
dec
and
xchg
mov
mov
mov
or
or
push
mov
cmps
fist
cmp
or
repnz
xor
(bad)
(bad)
(bad)
jge
aaa
add
xchg
mov
jno
lock
lock
push
add
mov
add
js
(bad)
sbb
jge
mov
mov
fcomp
mov
std
pop
sbb
mov
and
push
cmp
xchg
mov
jmp
xor
ins
jle
push
sahf
xchg
lea
and
xchg
jne
or
ds
stc
adc
call
dec
cld
add
ja
xlat
xor
or
inc
cli
daa
sub
test
or
sahf
push
ja
cli
(bad)
jmp
adc
sbb
mov
mov
mov
or
pop
sbb
mov
mov
mov
ret
in
retf
fs
jmp
dec
fisttp
xor
jge
or
add
add
and
mov
cmps
(bad)
cmp
std
push
add
and
or
mov
cmc
stos
dec
lods
and
div
cmp
mov
cdq
cs
cmp
jb
cdq
sub
fisub
in
pop
lods
ja
(bad)
(bad)
push
into
retf
dec
test
jp
popa
fwait
out
outs
rol
mov
idiv
mov
jmp
jns
aas
mov
loop
iret
jnp
repnz
rol
mov
(bad)
call
sbb
mov
xchg
jae
in
ret
jmp
adc
mov
xchg
inc
clc
(bad)
(bad)
call
outs
(bad)
sbb
nop
jmp
jns
adc
dec
scas
lds
ds
(bad)
(bad)
out
(bad)
test
into
shr
push
xor
jo
in
out
adc
(bad)
fdivp
sub
push
cmp
push
in
in
mov
add
jo
aaa
jmp
int
fwait
(bad)
(bad)
call
sar
cmp
adc
jns
cwde
(bad)
inc
add
gs
push
adc
xchg
outs
(bad)
(bad)
dec
lea
adc
jge
adc
test
lods
mov
jo
cmp
(bad)
(bad)
jmp
push
pop
enter
(bad)
fsubr
mov
or
pusha
xchg
lods
mov
cdq
and
(bad)
dec
mov
inc
pushf
pop
in
lods
dec
mov
push
ret
in
ds
ins
popa
pop
hlt
dec
call
mov
pop
jns
jbe
jecxz
sbb
in
popa
mov
(bad)
(bad)
(bad)
(bad)
jp
cmp
jno
hlt
addr16
ins
stos
mov
(bad)
cmp
mov
sbb
(bad)
jmp
mov
push
jae
not
mov
adc
pop
out
(bad)
(bad)
(bad)
call
cwde
jecxz
cmp
sub
sub
pushf
push
push
sub
jb
cmc
fisub
inc
cmp
xchg
(bad)
dec
sbb
jge
scas
jge
cmps
lds
push
jmp
mov
ins
call
pop
dec
test
jne
jne
add
push
int
pop
(bad)
(bad)
(bad)
mov
push
pop
hlt
idiv
js
loopne
dec
push
xor
pop
mov
jae
add
cmc
ret
jmp
(bad)
in
daa
jne
sar
push
call
mov
dec
aam
(bad)
mov
dec
(bad)
(bad)
(bad)
inc
add
cmc
out
(bad)
sti
adc
outs
popa
jmp
outs
daa
fdivr
cmp
ins
sbb
(bad)
and
jg
popa
cld
adc
dec
aad
inc
in
mov
jl
leave
sar
jbe
jne
mov
sti
fmul
icebp
mov
cmp
(bad)
repz
jnp
pop
mov
(bad)
(bad)
(bad)
inc
in
jae
push
popf
imul
out
pop
or
out
cmp
jnp
outs
add
sar
outs
(bad)
jmp
cmp
jle
lahf
sub
jo
push
inc
fimul
sbb
out
cmp
mov
call
(bad)
push
inc
movs
push
mov
stos
jae
aaa
push
ja
push
stc
or
add
push
nop
push
rcl
ret
push
(bad)
fcomip
idiv
push
pusha
es
mov
mov
sbb
add
or
xchg
jmp
jmp
repz
loop
cmps
dec
jg
div
ins
sbb
in
lods
pop
je
(bad)
(bad)
jmp
fadd
test
cli
adc
lock
add
inc
and
mov
ja
sti
(bad)
push
and
outs
imul
std
aaa
(bad)
xor
cmps
je
(bad)
call
dec
and
das
fs
loopne
(bad)
jg
dec
xor
in
push
push
sbb
xor
xor
mov
repnz
test
push
pushf
scas
add
into
mov
(bad)
(bad)
call
je
jns
inc
aad
mov
neg
pop
sti
sub
add
cmc
xor
mov
mov
adc
or
into
jmp
(bad)
stc
retf
jle
or
fwait
mov
push
ins
jb
push
mov
jb
aad
(bad)
inc
xor
inc
test
adc
aas
cmp
cmp
mov
test
test
push
sbb
lods
add
jae
add
jmp
inc
mov
cld
lods
in
sahf
push
or
movs
test
or
xchg
jnp
scas
jne
cmc
(bad)
(bad)
jmp
mov
jae
aaa
jle
sbb
cmps
mov
mov
std
(bad)
(bad)
(bad)
fistp
jno
rol
sbb
cmc
mov
cmp
cmp
and
mov
leave
cmp
and
sbb
mov
inc
jmp
mov
scas
inc
adc
dec
into
shl
(bad)
(bad)
(bad)
push
sbb
stc
mov
loop
(bad)
call
leave
fidiv
shr
cmp
pop
jg
(bad)
dec
dec
inc
(bad)
sbb
cmp
fld
(bad)
stc
pop
(bad)
(bad)
(bad)
call
hlt
mov
ss
jae
cmc
sar
inc
ins
xchg
mov
pop
adc
sbb
cli
(bad)
(bad)
jmp
xor
pop
or
push
test
jnp
scas
popf
push
inc
(bad)
jg
outs
dec
test
lock
ss
pop
lods
xlat
mov
cmp
loope
cld
outs
sar
pop
adc
and
mov
inc
mov
div
test
or
mov
jne
mov
xchg
cmp
dec
mov
arpl
ja
dec
add
cmp
call
stos
mov
call
inc
(bad)
fwait
mov
mov
(bad)
(bad)
call
jbe
aad
std
pop
sub
sub
inc
outs
jno
lds
(bad)
inc
jnp
push
pop
sbb
mov
sbb
adc
add
dec
jp
xchg
scas
push
call
xlat
jne
mov
sti
xor
es
mov
xchg
jae
cwde
(bad)
inc
sbb
pop
loope
ret
xchg
sbb
retf
mov
in
mov
fidivr
test
lods
fidiv
(bad)
(bad)
out
mov
and
adc
js
psllw
mov
clc
test
or
loopne
loopne
sbb
rcr
xor
mov
mov
and
int3
loopne
push
cmp
jnp
push
xor
out
aad
femms
icebp
aaa
cld
(bad)
call
cmp
or
rol
fsubr
jne
jne
inc
push
ret
or
ss
or
lds
test
ret
in
das
dec
sti
mov
xchg
std
outs
cmp
pop
dec
push
adc
sar
push
mov
pop
xchg
mov
pushf
lods
ss
pop
(bad)
(bad)
(bad)
inc
mov
into
fwait
shl
or
push
cld
and
xlat
outs
inc
outs
cmp
aaa
cmp
outs
xor
mov
cwde
retf
ins
push
ins
fld
or
jnp
xchg
jne
pusha
push
lds
outs
cli
(bad)
(bad)
cld
xchg
(bad)
es
add
aaa
call
stos
or
dec
dec
retf
(bad)
(bad)
(bad)
(bad)
jg
jbe
aas
push
dec
jmp
xor
mov
xchg
sbb
jmp
fild
or
aad
ss
imul
lock
mov
push
repz
jne
mov
xchg
es
fs
ret
clc
scas
xchg
jbe
mov
add
call
push
fdiv
xor
in
not
hlt
sbb
add
into
jo
inc
cld
test
jle
in
out
xor
push
inc
sbb
lahf
lods
cmp
inc
sbb
jmp
sar
xor
push
jge
or
fist
dec
mov
dec
scas
adc
pop
fdivp
scas
movs
ss
js
cmc
sbb
dec
daa
mov
mov
mov
adc
cmp
push
inc
adc
dec
ror
mov
adc
inc
outs
xchg
call
xchg
xchg
mov
adc
push
xchg
mov
dec
(bad)
call
jecxz
add
sbb
add
and
fcomip
ja
(bad)
jnp
cs
into
cs
push
pop
xor
fdiv
push
loopne
xchg
test
mov
adc
pop
sub
mov
push
mov
imul
sbb
push
mov
xor
pop
sbb
adc
push
mov
add
(bad)
mov
cwde
and
mov
xor
push
(bad)
(bad)
(bad)
(bad)
jg
push
push
sub
stc
stos
xchg
dec
cdq
gs
push
iret
inc
(bad)
movs
shr
notrack
xor
(bad)
(bad)
mov
addr16
shl
and
out
mov
aaa
lods
xor
(bad)
mov
sbb
fidiv
cmp
pop
inc
dec
dec
and
and
add
mov
push
lock
test
(bad)
(bad)
(bad)
cmp
test
cmp
aam
(bad)
arpl
mov
fcmovbe
pop
and
sub
inc
loop
push
repz
push
mov
mov
ss
xor
jmp
cmp
fcomp
inc
(bad)
mov
xor
stos
aas
rcl
mov
(bad)
(bad)
push
js
je
(bad)
jne
xchg
test
adc
cli
sbb
or
adc
stos
sub
test
fild
std
jae
mov
sar
or
std
fwait
xchg
cmps
ins
cld
(bad)
std
in
add
aam
pushf
sbb
(bad)
fwait
(bad)
jg
xchg
je
cmps
jge
adc
dec
cmovb
(bad)
(bad)
call
add
out
cs
inc
mov
call
(bad)
psadbw
inc
add
mov
dec
stc
push
popa
in
(bad)
push
std
jo
cwde
mov
pop
sbb
jb
clc
sub
sub
lods
adc
(bad)
call
popf
push
ror
inc
ss
xor
std
int
inc
imul
inc
es
jmp
jge
jnp
mov
inc
sbb
pusha
dec
mov
jge
in
outs
sub
jmp
scas
cli
(bad)
in
cld
mov
loopne
ins
hlt
imul
retf
jns
and
inc
add
sar
add
mov
jle
je
mov
cmp
cmp
mov
lock
call
jne
xor
mov
or
shr
or
imul
inc
sbb
and
sbb
stos
sar
(bad)
inc
popf
inc
jg
in
(bad)
stc
mov
sub
stc
(bad)
shl
xor
inc
mov
mov
jecxz
push
sbb
sub
(bad)
fcomip
jg
test
lock
dec
(bad)
mov
fwait
popa
cld
(bad)
push
and
lods
mov
pop
std
movs
sbb
pop
add
(bad)
mov
clc
mov
inc
push
mov
push
mov
clc
rol
mov
in
xor
call
pop
mov
retf
in
inc
inc
jbe
adc
call
fisubr
jbe
cmps
add
jne
mov
dec
push
fmul
addr16
(bad)
(bad)
call
cdq
cdq
or
ins
or
test
into
cld
scas
adc
jle
jmp
(bad)
dec
fst
cmc
aaa
out
int
lea
sahf
sbb
xchg
mov
or
xchg
mov
inc
adc
ret
cmp
imul
(bad)
mov
adc
dec
stos
cli
std
ja
mov
cmp
jnp
adc
mov
(bad)
(bad)
mov
add
xchg
push
sbb
push
outs
gs
xchg
jecxz
(bad)
jg
(bad)
(bad)
jle
pop
add
cli
jnp
std
ss
adc
jne
fnstcw
mov
ret
arpl
pop
jge
int3
and
cmp
adc
loop
or
test
push
adc
fisttp
sbb
nop
sbb
pop
mov
mov
mov
gs
(bad)
(bad)
(bad)
jl
(bad)
std
idiv
loop
(bad)
push
jge
mov
fwait
push
sub
ins
mov
sub
(bad)
in
(bad)
fcomip
call
push
dec
jmp
test
scas
push
xchg
inc
mov
xchg
cli
(bad)
inc
xor
ins
add
push
push
mov
les
(bad)
call
div
popa
xchg
jle
sbb
pop
outs
lea
in
cmp
test
sub
jne
sbb
push
mov
inc
add
cli
lea
jb
mov
mov
(bad)
movs
sbb
in
add
(bad)
pushf
xor
sar
(bad)
div
sbb
push
js
push
fsubp
pop
sub
(bad)
jmp
and
fdivr
or
push
mov
sbb
daa
repnz
(bad)
(bad)
(bad)
call
ins
(bad)
jl
sbb
mov
lods
dec
das
pushf
adc
and
cld
(bad)
(bad)
dec
inc
loopne
xor
popf
xchg
jae
sbb
mov
or
lea
(bad)
(bad)
inc
push
mov
or
push
aad
push
in
test
xor
lock
inc
dec
in
add
enter
stos
push
inc
pop
mov
ret
jmp
and
repz
hlt
and
fstp
aam
mov
jmp
xor
dec
lods
pop
sub
add
and
call
dec
dec
mov
cmp
ret
fldenv
or
dec
add
(bad)
mov
mov
popf
cmp
jmp
(bad)
std
je
mov
dec
jns
or
aad
aad
fadd
jg
jecxz
mov
mov
mov
or
and
pop
cs
mov
pop
icebp
jmp
into
ss
push
and
xchg
push
xchg
dec
ret
xchg
ss
jg
dec
retf
mov
mov
adc
push
(bad)
(bad)
(bad)
push
mov
sbb
jbe
mov
ret
pop
adc
repz
sbb
retf
(bad)
jmp
cli
out
xchg
pushf
xor
stos
xor
mov
push
fdivr
sub
jno
(bad)
(bad)
jle
(bad)
xchg
xor
jg
outs
pop
ret
add
push
(bad)
ret
out
push
stos
repz
(bad)
(bad)
fistp
mov
adc
xor
sbb
mov
mov
out
sub
jo
or
cli
mov
jge
daa
cmp
ror
mov
aad
mov
cmp
cmps
in
pop
retf
loope
mov
outs
cli
xchg
call
gs
cmp
fst
or
ja
movs
or
out
(bad)
(bad)
jg
imul
ins
xchg
push
jmp
push
fs
mov
sub
shl
and
jg
ds
or
das
not
sar
cmp
mov
loop
jmp
clc
cmp
add
dec
xor
dec
(bad)
(bad)
(bad)
(bad)
jp
or
lea
xchg
loopne
(bad)
mov
pop
nop
jno
not
mov
sub
aaa
popa
out
adc
mov
sbb
mov
(bad)
jmp
pop
inc
movs
xor
mov
and
xchg
jmp
dec
jb
adc
inc
push
cmp
fadd
or
test
adc
sbb
sbb
jbe
xchg
fsubr
(bad)
jmp
in
xor
cmp
fistp
leave
into
icebp
or
cmp
xor
lea
popf
xor
or
mov
xor
push
shl
nop
push
jmp
(bad)
(bad)
mov
and
cmp
sub
or
jne
xchg
sub
mov
std
out
inc
and
push
mov
rol
xor
mov
adc
ror
aad
xchg
clc
jg
lods
lods
xchg
inc
xchg
iret
hlt
aad
adc
(bad)
(bad)
inc
pop
dec
imul
enter
jecxz
popa
(bad)
xchg
pop
add
(bad)
lahf
jbe
fwait
mov
jmp
shl
add
(bad)
push
push
push
cmc
pusha
out
std
adc
pop
cwde
js
(bad)
(bad)
jmp
fcmove
add
jne
imul
dec
mov
xchg
inc
cmp
rol
ret
or
(bad)
inc
arpl
(bad)
mov
pop
or
(bad)
(bad)
(bad)
push
into
test
in
(bad)
fdiv
stos
mov
das
mov
ins
xor
sbb
call
mov
pop
std
gs
push
mov
add
lea
(bad)
xchg
inc
inc
dec
jg
push
clc
push
sahf
mov
sub
push
add
(bad)
(bad)
(bad)
dec
add
(bad)
out
pop
inc
idiv
cmp
fild
bound
push
add
mov
std
jbe
add
sar
push
loope
(bad)
jge
ins
pushf
(bad)
(bad)
jg
out
xor
bound
adc
popa
adc
cmp
repnz
(bad)
(bad)
call
mov
aaa
adc
adc
out
and
shl
(bad)
push
lods
push
dec
push
aam
pop
pop
adc
or
jbe
mov
dec
sahf
call
push
dec
cmc
dec
mov
loop
add
pop
fidiv
mov
cmc
adc
fdivr
xlat
sbb
inc
cdq
or
call
mov
(bad)
add
jecxz
sub
dec
cmps
dec
mov
dec
ss
push
mov
retf
sub
out
in
into
pop
pusha
loopne
out
mov
les
mov
aam
xlat
jge
mov
xchg
and
pop
or
das
inc
fadd
out
jge
call
or
fsubr
push
dec
stos
mov
lods
inc
pop
cli
(bad)
mov
fwait
arpl
(bad)
(bad)
push
mov
xchg
cmp
arpl
inc
sub
inc
arpl
cmp
mov
call
jae
test
js
or
sbb
stc
xchg
stc
jo
push
test
and
(bad)
call
lds
mov
inc
jecxz
inc
xor
out
pop
es
fild
mov
aad
jge
fcomip
(bad)
fild
mov
mov
or
fstp
(bad)
xlat
and
or
(bad)
(bad)
(bad)
(bad)
jmp
inc
test
sbb
repnz
(bad)
adc
aad
push
xchg
call
push
lock
and
push
js
(bad)
mov
lock
ja
cmp
jns
hlt
fimul
adc
pop
push
fdivr
call
dec
jp
mov
aaa
mov
in
fdivr
mov
push
call
icebp
fisttp
or
stc
mov
mov
dec
addr16
(bad)
(bad)
(bad)
inc
inc
adc
test
scas
mul
int
xchg
xchg
data16
sar
loopne
lea
mov
test
mov
xor
jae
test
je
test
sbb
sbb
add
retf
mov
ds
(bad)
(bad)
jmp
mov
imul
adc
cmp
xchg
(bad)
cmp
js
mov
cdq
shl
(bad)
(bad)
(bad)
sti
sar
xor
xchg
div
das
sub
pop
cmps
mov
outs
pushf
fimul
(bad)
inc
jae
push
(bad)
pop
ins
stc
data16
cmp
bound
retf
pop
and
(bad)
inc
les
(bad)
enter
sub
sbb
jmp
mov
popf
adc
inc
mov
cmp
add
in
je
mov
(bad)
(bad)
(bad)
inc
das
or
mov
ss
jp
mov
imul
xchg
jg
inc
(bad)
outs
adc
fprem
dec
gs
ins
mov
jmp
dec
cld
out
into
cdq
scas
jmp
or
pushf
mov
je
rol
into
jae
push
mov
xor
(bad)
(bad)
dec
je
pop
sbb
and
add
hlt
dec
cmp
push
dec
call
add
mov
(bad)
pop
std
xor
cmp
jge
sub
test
test
sub
jmp
pop
xchg
xor
jns
in
inc
jge
(bad)
(bad)
(bad)
mov
inc
xor
pushf
inc
add
or
cmp
loopne
test
movs
mov
fsubr
or
and
lock
hlt
fisubr
jmp
test
mov
(bad)
dec
and
ds
push
add
popa
sbb
or
jmp
cmp
in
pop
lock
lods
(bad)
(bad)
(bad)
mov
cmp
jge
shl
scas
loope
inc
add
mov
mov
mov
(bad)
(bad)
call
pop
aas
mov
test
cmc
cwde
mov
push
add
mov
and
xor
fcmove
mov
movs
push
pop
in
xor
mov
ret
jmp
inc
cmp
fsubp
lods
adc
mov
add
xor
loopne
(bad)
(bad)
jg
sbb
push
fs
inc
dec
pop
or
push
fwait
into
daa
inc
pop
cmp
(bad)
inc
adc
sub
jp
inc
and
xchg
adc
xchg
pusha
cld
jmp
dec
hlt
repz
or
cwde
out
mov
imul
jbe
leave
leave
adc
sub
call
jecxz
mov
mov
adc
enter
push
xor
mov
out
mov
aad
add
push
mov
movs
inc
lods
xchg
and
call
and
jbe
push
add
jmp
adc
jmp
mov
sbb
jo
xor
inc
xor
mov
mov
add
adc
scas
jge
sti
das
xor
push
dec
addr16
jne
jne
mov
or
(bad)
inc
push
aas
and
or
in
xchg
jae
movs
jecxz
cld
in
and
out
mov
jmp
push
mov
jns
mov
jne
es
pop
and
xchg
cli
dec
push
mov
add
fwait
inc
cdq
pop
cmp
(bad)
(bad)
fstp
popa
dec
shl
cmp
cmp
(bad)
mov
jle
pop
test
sbb
mov
xor
retf
fild
idiv
jg
cmp
push
and
adc
xchg
(bad)
(bad)
push
pop
adc
sbb
and
imul
fdivr
into
leave
cmc
mov
push
int3
hlt
mov
out
xchg
jae
push
inc
mov
cmp
jmp
lods
inc
sub
adc
push
pushf
sbb
add
cmp
ret
cmp
jne
cmps
sbb
mov
mov
cmp
int
sahf
jl
stc
dec
gs
hlt
mov
xlat
sahf
ret
add
sti
dec
push
ins
jecxz
or
imul
inc
sub
jns
je
mov
cmc
inc
ret
dec
sub
adc
pop
int
aad
sub
sbb
push
or
push
mov
xor
pushf
sub
(bad)
(bad)
jg
sub
push
adc
not
and
sub
mov
mov
xchg
cmp
xchg
dec
xlat
sub
daa
push
jecxz
mov
cld
test
int
cli
vpaddsw
sub
mov
jmp
out
aaa
fnsave
cmps
std
rcl
mov
xchg
cli
cmp
add
dec
ret
aas
cli
test
push
sbb
xlat
fild
test
push
xor
mov
adc
xchg
fist
push
jge
fwait
inc
jecxz
data16
sub
push
data16
push
mov
pop
mov
aam
push
data16
popa
mov
mov
jle
xor
retf
inc
(bad)
nop
(bad)
pop
mov
(bad)
(bad)
call
adc
jle
in
mov
jne
or
push
inc
mov
ror
(bad)
jmp
mov
gs
dec
(bad)
mov
cli
mov
push
xor
xchg
xchg
xor
push
lds
mov
xor
jg
and
(bad)
scas
mov
adc
pushf
and
clc
jnp
test
and
call
mov
in
jns
adc
inc
imul
xchg
ja
(bad)
(bad)
fnsave
jg
ins
add
mov
mov
ins
les
(bad)
call
inc
cmp
push
addr16
cmc
loope
jnp
mov
dec
(bad)
jmp
cmp
(bad)
(bad)
cmp
cli
and
dec
xchg
mov
outs
pop
or
xchg
lds
jo
popa
mov
call
cmp
xlat
mov
icebp
pushf
gs
mov
loopne
(bad)
(bad)
(bad)
(bad)
jge
jmp
jae
js
popa
rcr
ret
xchg
nop
and
aad
add
mov
jae
stos
bound
enter
or
int
cli
push
push
xchg
push
adc
(bad)
(bad)
push
mov
scas
aaa
js
jmp
xchg
add
(bad)
push
cmp
mov
sbb
fidivr
fild
dec
add
mov
in
add
dec
ret
cmp
push
inc
xchg
sbb
or
push
out
or
mov
cdq
test
pushf
adc
(bad)
inc
inc
xchg
in
test
rcl
aas
outs
sbb
sti
xchg
adc
xchg
fild
pop
adc
mov
sbb
outs
xchg
sub
xchg
enter
mov
dec
cs
mov
imul
adc
out
clc
jmp
dec
adc
mov
aas
jb
adc
(bad)
(bad)
(bad)
mov
(bad)
or
mov
shl
std
pop
lock
aas
adc
(bad)
call
test
ds
cmc
shl
cdq
or
push
aam
dec
stos
and
xchg
shl
mov
add
sbb
leave
clc
call
retf
push
cmp
es
dec
sbb
call
std
inc
xor
cmp
push
lock
ss
xor
(bad)
(bad)
(bad)
push
aad
xor
in
into
ss
mov
and
cmp
test
into
mov
(bad)
(bad)
dec
pop
push
in
rcr
aam
aad
or
dec
sbb
(bad)
jmp
jo
cmp
arpl
and
dec
and
(bad)
dec
call
adc
sbb
mov
mov
or
mov
adc
xor
pop
retf
(bad)
(bad)
(bad)
call
int
pop
call
mov
inc
imul
(bad)
and
xchg
adc
test
rcr
(bad)
(bad)
call
push
adc
push
xor
push
pop
popf
(bad)
mov
push
cmp
(bad)
mov
push
clc
cmp
jl
fchs
sbb
std
(bad)
xchg
lock
jmp
addr16
cs
ins
pop
fsubr
(bad)
(bad)
dec
pop
mov
cmp
or
outs
loopne
mov
adc
inc
hlt
pop
mov
add
aaa
shl
push
and
xlat
shl
imul
sar
(bad)
(bad)
inc
jl
add
jno
lods
call
pop
jo
lea
dec
repz
jns
jecxz
popa
imul
dec
mov
lods
pop
or
dec
inc
inc
dec
sbb
clc
(bad)
jg
xchg
pop
not
pop
mov
jns
cmp
mov
iret
in
pop
inc
sub
call
or
jmp
cli
add
jno
fwait
test
outs
lea
adc
in
xchg
std
sbb
js
jmp
xchg
cmp
add
(bad)
inc
lds
into
pop
popf
mov
add
mov
mov
mov
mov
mov
fdivr
push
xor
adc
fild
jnp
(bad)
inc
pop
add
mov
mov
cli
fdivrp
(bad)
(bad)
mov
push
lods
xchg
xor
jae
stos
jne
sbb
mov
addr16
jmp
js
xchg
or
nop
out
add
jne
add
inc
fnstenv
jmp
retf
sar
and
(bad)
jg
rcr
(bad)
mov
das
dec
pop
xor
pop
mov
aaa
cld
mov
jmp
jbe
lods
ds
iret
jmp
inc
pushf
(bad)
(bad)
(bad)
call
jb
xchg
cli
jl
sbb
jno
xchg
xchg
aaa
mov
dec
pop
and
xor
jmp
in
or
cmps
add
jne
sbb
hlt
pop
pop
popa
cmp
pop
lods
mov
jmp
xchg
cmp
call
lds
call
xchg
sahf
jns
mov
shrd
(bad)
(bad)
(bad)
push
call
pushf
and
dec
dec
jge
loope
mov
and
xchg
jmp
dec
push
test
xor
(bad)
(bad)
inc
jl
push
test
jmp
jo
stc
sti
(bad)
mov
add
xchg
jge
xchg
outs
cmp
cli
test
test
jo
fcom
call
cmc
jmp
mov
nop
stos
cs
dec
cs
clc
mov
mov
add
in
sbb
test
add
jge
(bad)
(bad)
(bad)
call
cs
push
test
xchg
push
jbe
jne
mov
dec
push
lock
inc
call
call
in
push
test
jns
push
cmp
out
test
scas
imul
mov
xchg
sbb
xor
jne
sbb
pushw
mov
and
es
inc
into
mov
(bad)
inc
push
fidivr
add
mov
lock
and
in
in
shr
mov
fst
mov
pop
fistp
ja
push
adc
test
mov
cwde
ficomp
test
mov
jge
sub
in
(bad)
(bad)
(bad)
fcomp
xor
xchg
jae
scas
mul
in
ds
pusha
loop
ja
dec
mov
and
inc
cld
push
stos
addr16
mov
and
(bad)
(bad)
jg
outs
jnp
fucom
xchg
(bad)
sbb
pop
xchg
xor
sub
imul
(bad)
jmp
sbb
out
jmp
div
(bad)
aas
popf
ds
cmp
add
cmp
dec
sbb
sti
mov
jbe
mov
push
(bad)
(bad)
mov
jne
frstor
sub
jmp
sbb
es
xchg
cmp
stos
fdiv
mov
mov
push
aam
push
cmp
mov
mov
outs
les
imul
leave
push
test
shl
inc
(bad)
and
mov
inc
jmp
int3
js
mov
das
jmp
adc
int3
(bad)
mov
push
jbe
inc
xchg
(bad)
(bad)
jmp
mov
aam
aam
mov
jge
aam
(bad)
lock
pop
ficom
jg
(bad)
call
sub
cwde
adc
mov
jle
cdq
je
(bad)
test
dec
jno
fst
dec
jne
int
stos
cmps
add
ss
mov
sbb
push
ins
cmp
sub
jle
push
push
push
pop
jbe
mov
(bad)
(bad)
sub
ds
adc
xchg
sbb
mov
jmp
lock
(bad)
push
fsub
mov
dec
ja
lock
cmps
sub
lds
mov
(bad)
mov
cmp
mov
push
mov
(bad)
sahf
cmp
sar
mov
sbb
lds
sbb
(bad)
call
sbb
shr
mov
scas
add
xlat
and
aaa
xchg
xchg
fwait
inc
inc
test
xchg
(bad)
jbe
push
sub
push
and
inc
lods
imul
adc
or
cmp
and
push
mov
jno
sbb
movs
(bad)
cmp
jmp
mov
mov
cmp
inc
mul
(bad)
jg
cmp
sub
mov
cmp
push
stc
ret
mov
mov
retf
retf
jp
mov
das
cli
push
xchg
xchg
pushf
sbb
jp
push
inc
jo
cmp
sub
xchg
xchg
nop
in
icebp
sbb
(bad)
(bad)
sub
cmps
inc
imul
cld
(bad)
call
cmp
sub
iret
dec
xlat
adc
lea
mov
mov
(bad)
call
push
dec
(bad)
aam
add
test
adc
fimul
ja
mov
into
sbb
cmp
push
rcr
movs
mov
cmp
retf
(bad)
(bad)
inc
out
ret
dec
pop
jge
pop
cmc
les
xchg
adc
dec
push
idiv
int
inc
jae
or
sbb
and
inc
sub
stos
div
add
cmp
fild
mov
ja
lods
mov
mov
pop
pushf
dec
inc
cmp
xchg
sysenter
xchg
test
fbstp
push
mov
push
and
push
rcr
jge
pop
cli
jmp
cmp
xchg
jnp
and
mov
loop
cmp
dec
push
(bad)
fsub
mov
and
push
(bad)
dec
gs
jmp
gs
shl
fmul
cmp
add
mov
(bad)
push
inc
mov
ss
dec
stos
rcl
aas
fwait
(bad)
(bad)
(bad)
(bad)
(bad)
in
rcl
aaa
xlat
inc
mov
sbb
sbb
push
mov
mov
scas
clc
add
enter
jne
pop
inc
shr
shl
xchg
mov
lock
aaa
into
cdq
aaa
fisub
push
mov
(bad)
jg
dec
inc
dec
repnz
xchg
sub
test
sub
jns
mov
call
hlt
xchg
test
sbb
pop
in
pushf
(bad)
jg
out
inc
daa
dec
push
or
xor
xor
mov
sbb
ficomp
and
push
mov
shl
int3
test
cmp
pop
dec
(bad)
(bad)
jmp
push
pop
add
daa
or
adc
mov
fbstp
mov
(bad)
mov
xchg
add
movs
mov
retf
jecxz
lahf
in
call
cld
(bad)
(bad)
cmp
cmp
adc
sti
ss
mov
clc
fcomip
lods
dec
rol
cmp
pop
cs
sbb
inc
loopne
js
cmp
dec
jno
pop
jl
loopne
pusha
mov
fld
test
cs
or
jo
(bad)
(bad)
mov
lea
scas
cli
xor
pop
mov
pushf
das
in
fild
call
jne
or
lea
mov
jb
(bad)
(bad)
inc
xchg
shl
jne
sbb
in
add
mov
push
xchg
(bad)
(bad)
(bad)
inc
inc
repnz
xlat
out
js
(bad)
jmp
sbb
mov
mov
sbb
enter
cmp
ret
stos
ror
inc
in
cmp
scas
add
call
sbb
xor
mov
pop
mov
xor
push
cmp
call
sbb
push
inc
lea
or
jl
push
ins
(bad)
and
fisttp
scas
pusha
adc
(bad)
or
pop
lock
(bad)
(bad)
(bad)
jmp
pop
test
(bad)
dec
dec
and
arpl
mov
pop
jne
loopne
hlt
rcl
(bad)
inc
xchg
or
cmp
sti
lea
in
iret
cmp
cmc
popa
dec
jge
or
ret
(bad)
call
jle
ins
mov
and
aas
add
inc
cmpxchg
jae
push
shr
std
jg
int3
sbb
aam
out
xchg
jge
mov
jmp
dec
add
call
cmp
int3
push
(bad)
mov
(bad)
(bad)
call
xchg
fst
push
adc
mov
movs
imul
adc
(bad)
dec
push
aam
mov
aam
push
adc
adc
loopne
mov
adc
xor
mov
add
in
rcr
fcomp
xor
sub
and
dec
and
aaa
arpl
(bad)
lds
jno
jl
pop
lea
test
retf
mov
ss
dec
mov
and
cwde
xchg
(bad)
mov
lahf
cmp
sub
dec
mov
xor
(bad)
(bad)
(bad)
cmp
jns
sbb
pop
pusha
(bad)
push
sti
stc
pop
xor
daa
(bad)
(bad)
mov
aaa
mov
movs
jge
(bad)
mov
xchg
out
addr16
jl
push
cld
push
fstp
gs
push
in
scas
dec
pop
jo
(bad)
lods
xchg
inc
add
pop
outs
pop
cmp
jmp
mov
pop
aaa
(bad)
enter
cmp
daa
outs
std
sub
mov
daa
jmp
clc
push
das
(bad)
inc
sar
out
add
aaa
xor
neg
std
(bad)
(bad)
dec
(bad)
inc
xor
pop
cld
inc
cwde
add
mov
icebp
(bad)
sbb
add
jg
(bad)
(bad)
push
or
or
push
cmp
iret
and
push
adc
xchg
xor
and
mov
pop
shl
jns
loope
(bad)
inc
dec
ror
push
repz
inc
cmc
pop
sbb
jp
imul
test
jbe
hlt
(bad)
(bad)
mov
adc
stos
loop
test
ror
and
(bad)
jg
xchg
and
jge
mov
cmc
arpl
push
(bad)
xchg
jns
mov
(bad)
(bad)
(bad)
(bad)
jl
mov
sbb
adc
xor
icebp
fs
repz
stos
dec
adc
mov
nop
adc
(bad)
adc
rcr
aaa
pop
in
add
mov
mov
add
pop
retf
popf
sbb
push
mov
sbb
and
aas
dec
add
or
add
outs
jne
cmp
(bad)
push
inc
inc
jg
pop
cmp
rcr
mov
cmp
push
xchg
arpl
xor
xchg
xor
jns
cmps
lock
lea
sbb
add
aam
push
lahf
(bad)
ins
(bad)
call
daa
je
into
sahf
sbb
dec
call
inc
xchg
cmps
(bad)
push
inc
stos
loope
jecxz
jge
jno
sti
xchg
sbb
jno
jae
xor
add
or
cmps
cmp
and
add
call
fisttp
dec
test
cmp
(bad)
int3
mov
push
inc
std
jle
(bad)
fisttp
je
mov
(bad)
(bad)
(bad)
std
gs
sub
(bad)
sti
xchg
and
jne
movs
call
mov
stos
sbb
(bad)
(bad)
inc
xor
inc
jnp
jne
cmp
test
dec
xchg
pop
cmp
stos
lock
aas
jmp
add
push
add
cmp
add
and
adc
xor
jnp
inc
loop
inc
inc
adc
loopne
fmul
inc
add
cld
stos
pop
mov
or
mov
push
hlt
(bad)
dec
and
mov
sbb
xchg
sub
cmc
gs
sub
into
ret
(bad)
mov
sbb
fsubr
sub
das
stc
add
pop
push
push
mov
adc
jg
mov
ja
(bad)
call
inc
(bad)
(bad)
(bad)
jmp
cdq
(bad)
cmp
inc
lods
std
ret
pushf
pop
jb
mov
add
test
inc
into
ffreep
hlt
es
daa
mov
js
imul
jmp
ss
inc
cmc
push
fbld
call
sbb
clc
test
(bad)
call
and
adc
stc
loopne
add
sbb
or
mov
or
jg
push
imul
je
test
pop
mov
jmp
jno
xchg
lods
mov
push
pop
pop
add
pushf
jae
and
fisttp
in
xchg
sub
icebp
add
add
call
fisttp
jnp
int
cmps
cmp
ds
into
push
cld
call
cmp
or
movs
push
sbb
xchg
or
or
jb
add
int3
ss
not
jbe
fldenv
xchg
inc
inc
or
cmps
imul
xchg
jbe
sbb
pop
sub
push
es
adc
push
test
shl
(bad)
mov
in
es
ds
out
stc
std
xchg
mov
or
call
cwde
jbe
dec
pop
jl
mov
clc
mov
push
cmp
pop
js
add
cmp
inc
in
cmp
popf
(bad)
and
mov
push
mov
jno
push
jge
stc
popa
xchg
mov
sbb
cmp
push
push
sbb
enter
in
in
mul
cmp
jo
dec
sub
test
jmp
cli
cmc
jae
push
sbb
adc
push
cmp
push
dec
(bad)
(bad)
fisttp
xchg
push
add
adc
out
xor
movs
sub
std
in
mov
sahf
lock
stc
rol
jle
sub
sub
(bad)
(bad)
(bad)
mov
push
sub
je
pop
cmc
mov
sbb
xchg
push
inc
loope
data16
sti
xlat
imul
sbb
test
test
adc
(bad)
cmp
add
jmp
cmp
dec
jp
mov
and
and
push
push
(bad)
ret
neg
add
xchg
int3
dec
icebp
inc
or
and
xchg
mov
inc
mov
cs
sub
and
popa
add
pop
hlt
(bad)
cli
dec
ret
and
ja
inc
mov
aad
cmp
imul
aaa
sbb
sub
pop
jae
mov
inc
cmove
push
mov
add
add
(bad)
std
jmp
push
xor
push
push
retf
cmc
data16
jmp
fcmovne
ds
cwde
xor
outs
jmp
in
(bad)
lock
call
cmp
mov
jg
sub
jecxz
and
dec
sti
sbb
loop
xor
(bad)
(bad)
(bad)
call
repnz
inc
ret
xor
cmc
add
lods
ds
jecxz
jp
fidiv
(bad)
(bad)
push
loope
movs
add
mov
dec
call
ret
fiadd
dec
ficomp
fcomi
(bad)
and
(bad)
(bad)
call
lock
retf
or
pop
stos
hlt
pop
cdq
ja
cmp
and
push
sub
push
push
ja
mov
sar
jmp
fdivr
lods
jmp
retf
mov
mov
mov
ins
xor
(bad)
(bad)
(bad)
fstp
pop
pushf
push
jno
aaa
popa
cmp
imul
(bad)
js
imul
xchg
push
stc
jg
jb
mov
xchg
sbb
mov
les
fnstsw
and
adc
(bad)
jmp
sbb
(bad)
out
add
(bad)
push
add
dec
mov
fcmovnb
mov
(bad)
(bad)
inc
lods
les
cwde
add
mov
cmps
sub
adc
add
movs
jno
jne
(bad)
(bad)
(bad)
push
test
cmps
movs
jg
int
test
movs
mov
loopne
cs
mov
jo
(bad)
call
loopne
xor
and
sub
ins
inc
xchg
cwde
(bad)
(bad)
(bad)
push
xchg
jno
xchg
push
inc
pushf
mov
or
jge
xchg
add
mov
sub
aaa
xchg
les
int
int
push
add
mov
or
mov
outs
(bad)
(bad)
dec
sub
xor
popa
adc
mov
or
js
test
out
mov
retf
add
js
test
out
out
int3
and
pop
jl
(bad)
xchg
sub
stc
fwait
outs
mov
jl
mov
or
adc
mov
jns
jns
pop
je
add
push
pop
adc
(bad)
(bad)
mov
lock
push
pusha
adc
in
inc
push
leave
xchg
push
add
add
add
add
clc
sub
ds
push
cwde
ins
jno
pop
fs
or
pusha
add
ins
lds
xor
or
cld
(bad)
(bad)
call
cmps
pop
movs
sti
xchg
dec
aad
xchg
les
cmp
lds
push
(bad)
aaa
add
fs
sbb
aam
out
idiv
mov
pop
in
mov
lea
pop
mov
int
neg
lods
cmp
push
cmp
call
inc
test
mul
dec
dec
and
hlt
into
adc
jle
or
(bad)
(bad)
jmp
fwait
test
int3
jae
mov
and
call
dec
imul
(bad)
not
nop
pop
pusha
or
cmp
cmp
adc
hlt
jmp
enter
mov
jbe
jg
inc
sbb
mov
(bad)
jmp
bound
shr
test
dec
push
adc
js
pop
jne
jge
(bad)
(bad)
push
inc
cmp
outs
test
jmp
inc
push
cmp
sbb
inc
mov
in
and
(bad)
(bad)
(bad)
call
imul
xor
dec
mov
cli
add
sub
ss
(bad)
(bad)
(bad)
jmp
stos
sbb
call
add
sub
xchg
cs
xchg
es
arpl
(bad)
(bad)
jmp
daa
aaa
jbe
sub
sbb
(bad)
push
xchg
xchg
sub
cmp
xchg
call
add
mov
lea
shl
and
ja
ret
mov
stos
arpl
mov
into
das
adc
sti
retf
or
jge
or
shl
sub
fmul
cmp
cs
push
(bad)
aas
fadd
sub
dec
push
(bad)
xchg
in
xchg
(bad)
(bad)
mov
adc
push
push
or
mov
or
bnd
xor
inc
push
lock
pop
inc
sub
out
pop
lea
cwde
(bad)
loope
clc
jmp
xor
daa
xchg
mov
je
sbb
(bad)
(bad)
mov
dec
int
iret
(bad)
outs
mov
push
scas
or
ret
(bad)
(bad)
(bad)
(bad)
fld
cmps
jae
call
cwde
cmp
imul
and
pop
xor
pop
xor
mov
sbb
jmp
push
xchg
fs
mov
dec
sbb
jle
jmp
jmp
add
sbb
adc
sbb
pop
cld
jmp
add
pop
pop
adc
jno
cmps
or
fst
xchg
dec
push
(bad)
inc
call
mov
or
mov
add
or
cmp
pop
fwait
int
(bad)
sti
add
sub
add
dec
lock
mov
adc
mov
aaa
lea
cmp
dec
repz
jbe
xchg
jne
dec
imul
outs
inc
dec
mov
in
jb
js
(bad)
popf
jmp
lods
jmp
fisttp
push
(bad)
jg
call
sub
(bad)
jmp
pop
jo
inc
jge
jecxz
aad
fnstsw
(bad)
(bad)
(bad)
cld
loopne
adc
or
fstp
jnp
dec
test
xor
and
(bad)
call
and
test
and
retf
into
push
adc
mov
rcl
test
mov
jge
ja
fs
pop
push
and
(bad)
jns
iret
add
fld
push
ja
retf
jo
retf
pop
aam
in
add
mov
inc
(bad)
jns
hlt
inc
or
mov
outs
fwait
cmp
retf
fistp
stos
mov
jb
retf
sub
cmp
xchg
(bad)
jg
jne
ret
add
out
cmp
xlat
jne
aaa
jns
hlt
outs
je
fdivp
mov
imul
pop
(bad)
xchg
ds
inc
and
xchg
pop
dec
push
cmc
(bad)
jmp
mov
(bad)
adc
or
addr16
loope
sub
xchg
pop
test
inc
add
(bad)
fild
cmp
data16
push
xor
in
inc
push
(bad)
(bad)
(bad)
fild
cmp
(bad)
cli
jge
adc
adc
dec
cmps
sti
addr16
cmp
adc
inc
ror
dec
(bad)
dec
jb
clc
call
lods
stos
imul
out
shr
sbb
int
(bad)
ds
sbb
cmp
push
xchg
pop
call
adc
mov
push
jge
adc
ret
mul
mov
hlt
clc
jmp
clc
jecxz
jne
aaa
mov
adc
in
cwde
mov
fwait
add
sbb
das
mov
mov
in
or
or
adc
ins
stos
ret
sub
adc
pop
add
mov
scas
sub
call
push
(bad)
in
jp
mov
sub
or
and
xchg
lods
stos
and
ror
sub
push
cld
sbb
fstp
mov
mov
ja
sbb
xor
(bad)
call
push
pop
jnp
sub
pushf
add
loop
(bad)
call
jge
cmps
inc
xchg
sbb
push
xor
(bad)
pop
xchg
xchg
and
mov
dec
mov
loopne
(bad)
pop
imul
jae
int
rol
or
mov
(bad)
jg
loopne
rol
inc
arpl
pop
jnp
scas
fs
cmp
and
jle
icebp
push
add
repnz
or
jbe
arpl
mov
outs
pop
sub
dec
mov
pop
pop
out
and
popf
push
lods
push
in
push
int
outs
fidivr
inc
inc
(bad)
push
pop
pop
cmp
repnz
data16
call
adc
jns
cmp
and
pusha
aas
clc
inc
dec
(bad)
jmp
rol
jmp
inc
mov
cmc
inc
jge
inc
sar
(bad)
(bad)
(bad)
jge
das
cmp
cmp
test
call
cmp
mov
cmp
ret
xor
jns
(bad)
cmp
lds
bnd
push
cli
test
sbb
std
scas
adc
ss
push
dec
cmp
cmp
push
push
jnp
inc
inc
pop
sbb
(bad)
inc
inc
xor
ss
in
adc
sbb
xor
inc
xchg
(bad)
je
push
adc
pushf
mov
(bad)
jmp
das
cli
idiv
mov
test
aam
push
ret
sbb
es
aas
movs
sub
sbb
lock
jg
and
and
and
jge
pusha
inc
int
sti
jmp
dec
pop
jge
mov
mov
add
retf
(bad)
cmp
sbb
cmp
les
(bad)
xor
and
xor
and
rol
lods
ret
adc
inc
adc
push
cld
dec
sbb
int
int
cmp
inc
aad
pop
or
dec
pop
in
and
repz
jge
mov
pop
inc
into
lds
mov
(bad)
mov
cli
(bad)
(bad)
inc
mov
mov
paddd
es
lock
push
int
scas
mov
or
js
stos
cdq
(bad)
mov
call
add
jmp
(bad)
outs
or
mov
xor
dec
sti
jg
stc
mov
repnz
(bad)
fcomp
jmp
fisubr
adc
das
sbb
fnstcw
out
out
fucomi
fsubrp
jg
loopne
cmp
fucomip
clc
mov
out
hlt
int3
call
jns
mov
lock
push
test
rol
js
xor
mov
mov
(bad)
or
or
imul
(bad)
mov
push
mov
mov
cdq
js
in
mov
push
hlt
jmp
xor
(bad)
(bad)
jmp
(bad)
adc
lock
mov
mov
xchg
cmp
mov
(bad)
fisub
add
and
mov
adc
ins
out
cmc
xor
neg
loop
xchg
pop
push
gs
bound
lea
mov
cmp
sar
sbb
mov
push
sub
shl
loope
(bad)
fiadd
je
xchg
xchg
pop
inc
and
pop
hlt
imul
clc
std
lds
mov
lods
dec
and
lahf
and
(bad)
(bad)
(bad)
call
xor
push
inc
lea
and
pop
cmp
ss
cs
xchg
mov
and
dec
lods
jecxz
adc
sub
repnz
mov
(bad)
jmp
enter
sbb
inc
les
cdq
mov
push
and
mov
cdq
call
lock
xor
adc
xchg
enter
scas
pop
loopne
pop
mov
movs
jo
(bad)
jne
aaa
mov
(bad)
dec
into
out
js
mov
je
into
inc
push
xor
xchg
jmp
mov
push
aad
mov
imul
imul
(bad)
(bad)
jg
movs
inc
retf
xor
jne
and
mov
lock
ss
cmp
mov
inc
sar
cld
into
dec
sbb
xor
cmps
mov
xchg
je
lods
call
xchg
mov
popf
mov
ret
mov
or
push
out
mov
pop
cmp
mov
jge
fidivr
pop
call
(bad)
(bad)
jmp
mov
xchg
xchg
jmp
lahf
loopne
push
mov
hlt
inc
mov
mov
add
jg
add
inc
xor
and
jle
jge
fisubr
xor
stos
inc
mov
clc
xlat
scas
add
sbb
inc
add
cmp
push
jge
dec
sub
std
jge
mov
out
(bad)
(bad)
push
shl
ins
pop
(bad)
dec
push
add
jmp
mov
iret
xor
je
(bad)
(bad)
call
add
inc
cmp
pop
add
test
mov
popf
inc
mov
gs
je
mov
inc
inc
call
fucomp
retf
or
int3
loop
(bad)
call
add
fsub
add
call
mov
call
sub
jno
inc
push
add
adc
pop
or
(bad)
(bad)
(bad)
inc
cmp
mov
addr16
sub
aad
mov
and
push
push
push
add
mov
sbb
mov
jp
retf
mov
aas
(bad)
(bad)
(bad)
mov
test
mov
jmp
lods
adc
mov
or
mov
and
call
cld
es
cmps
es
jmp
sub
xchg
nop
sub
outs
imul
rol
(bad)
(bad)
dec
xchg
xchg
add
push
push
mov
mov
stc
out
sar
std
ins
repnz
lock
mov
mov
mov
push
inc
add
xchg
and
or
cmp
xchg
xchg
jle
sar
dec
movs
jno
xor
xchg
add
dec
shl
push
call
lock
inc
pop
push
adc
jle
push
push
push
fadd
dec
sub
btc
xchg
push
adc
xor
mov
(bad)
jmp
mov
jb
in
adc
cwde
int
call
inc
add
inc
(bad)
push
mov
mov
daa
jecxz
dec
lahf
(bad)
cmp
(bad)
(bad)
(bad)
ds
aaa
add
jge
cmp
xchg
je
outs
lods
sahf
ja
inc
fmul
adc
xor
push
ficom
aaa
in
jne
(bad)
(bad)
(bad)
call
cmp
shl
adc
inc
sub
out
xlat
sub
(bad)
dec
xchg
ds
jmp
or
pop
scas
sbb
push
adc
mov
aam
scas
(bad)
(bad)
(bad)
call
dec
stos
and
jae
test
shr
adc
and
cli
cmc
pop
mov
in
pop
jl
int3
rcr
or
sbb
adc
(bad)
mov
ficomp
cmp
inc
add
sbb
je
cdq
mov
sub
jmp
mov
(bad)
xlat
mov
push
ds
cmp
hlt
neg
aam
xor
push
rcl
mov
(bad)
(bad)
push
out
cmp
jge
gs
jp
mov
scas
jge
add
adc
shr
fild
icebp
push
inc
in
dec
inc
mov
jbe
popa
bound
inc
adc
lds
jmp
add
inc
call
pop
and
sbb
repnz
sbb
test
jmp
ffreep
jmp
xchg
xchg
pop
inc
ja
(bad)
(bad)
jmp
pop
pop
push
xor
adc
lods
fwait
sbb
jle
push
lods
(bad)
or
fiadd
movs
(bad)
call
test
stc
pop
in
bound
or
dec
mov
xchg
(bad)
push
jnp
inc
adc
imul
fs
in
imul
enter
(bad)
(bad)
call
mov
mov
pop
mov
dec
push
gs
test
test
bound
push
cld
inc
stos
jl
test
dec
and
fwait
mov
inc
adc
sub
mov
(bad)
mov
mov
and
out
adc
xchg
add
xchg
frstor
pop
call
lahf
and
xchg
fdivp
(bad)
jmp
push
add
scas
pop
and
mov
arpl
or
adc
fisub
ja
(bad)
adc
sbb
push
hlt
adc
cmp
(bad)
adc
xchg
outs
call
add
xchg
(bad)
cld
call
loope
jg
mov
sbb
ins
(bad)
fmul
fisttp
imul
mov
mov
out
mov
(bad)
mov
push
inc
push
outs
add
xchg
ss
adc
xlat
bound
push
in
js
mov
xor
movs
(bad)
push
pop
in
fidiv
xchg
cmp
inc
inc
(bad)
call
jle
add
jbe
jecxz
add
stos
std
shl
add
(bad)
call
pop
xor
xchg
aaa
std
dec
pop
push
inc
enter
pop
popa
cmp
cmp
mov
xor
cmp
xor
rcl
or
mov
xor
lahf
jno
movs
js
fcom
imul
cmp
jg
ss
and
in
fisttp
aam
inc
iret
mov
sahf
(bad)
jnp
cmp
push
lahf
(bad)
(bad)
call
pop
jnp
mov
loope
add
lds
fstp
xchg
jmp
sahf
cld
cmc
std
(bad)
(bad)
push
xor
mov
mov
pop
out
call
(bad)
outs
cmp
or
or
fcomip
pop
fs
stos
data16
pop
inc
add
xor
xor
push
jmp
push
mov
pop
pop
shl
nop
lahf
xor
ret
mov
fdivr
(bad)
(bad)
push
xchg
aam
and
out
cmps
aad
inc
mov
dec
stc
neg
cmps
jl
add
cmp
inc
jge
xchg
pop
data16
or
add
push
xchg
outs
ja
inc
and
mov
repnz
push
dec
les
sar
sbb
js
shr
les
pop
cmps
(bad)
out
loopne
addr16
mov
or
or
int
add
push
test
cmp
js
mov
loopne
add
sar
xchg
sbb
jge
pop
cld
push
push
imul
int3
cmp
xchg
dec
lods
dec
pop
push
ficom
adc
jecxz
xlat
xor
xor
mov
(bad)
jg
inc
out
lea
xchg
add
mov
mov
loop
sub
jnp
inc
std
(bad)
adc
(bad)
(bad)
(bad)
push
push
add
mov
dec
inc
ss
sub
pop
pusha
inc
push
pop
jecxz
inc
clc
sub
or
xchg
pop
mov
mov
inc
retf
adc
mov
outs
cmc
cmp
cmp
mov
mov
mov
mov
xchg
push
ja
(bad)
lock
(bad)
(bad)
(bad)
jmp
inc
xchg
jns
(bad)
push
ror
hlt
xor
inc
push
inc
js
xchg
push
mov
push
sbb
jg
mov
clc
inc
fadd
inc
pop
mov
iret
mov
loop
mov
nop
(bad)
(bad)
(bad)
mov
pop
test
fldenv
lahf
adc
jne
push
jbe
push
sub
push
cmp
clc
inc
mov
nop
and
sbb
popf
and
dec
(bad)
cmp
(bad)
(bad)
(bad)
jg
(bad)
ins
cmp
lods
stc
mov
test
leave
dec
or
aas
test
jo
mov
(bad)
mov
cmp
pop
cdq
jg
or
(bad)
xlat
mov
or
test
mov
add
cdq
jle
mov
mov
pop
cmp
fmul
dec
pusha
addr16
movs
mov
arpl
inc
jle
and
mov
push
das
ja
add
push
(bad)
inc
in
cmps
jmp
jl
and
into
loopne
or
jne
jg
sub
stos
push
arpl
xchg
inc
xchg
jmp
ins
sbb
loope
int
gs
(bad)
(bad)
(bad)
dec
bound
mov
(bad)
mov
scas
rol
mov
push
sub
jns
or
icebp
xor
cli
jmp
jl
fstp
cwde
add
cmp
mov
imul
mov
xchg
lock
mov
mov
(bad)
sub
push
sbb
cmp
pop
adc
cmp
sbb
pop
gs
jmp
cmp
inc
addr16
bound
and
bound
int3
in
(bad)
jge
in
add
aad
push
adc
mov
add
(bad)
xlat
mov
xor
(bad)
(bad)
(bad)
inc
push
ret
xchg
movs
pop
mov
scas
jmp
pushf
(bad)
outs
adc
fist
mov
cli
mov
push
lock
pop
sbb
(bad)
jmp
mov
jae
sbb
inc
in
nop
cmp
push
xor
xchg
lea
popf
retf
inc
adc
add
lock
or
xor
lahf
sub
xor
sbb
call
std
push
scas
sahf
jae
je
jnp
xchg
xchg
(bad)
(bad)
jmp
or
aam
cmp
mov
ins
mov
xchg
retf
aad
jge
fnstsw
sbb
popa
cmps
cmps
jmp
(bad)
(bad)
inc
or
xchg
sub
and
popa
mov
sbb
gs
xchg
arpl
xchg
mov
push
pop
inc
popa
in
xchg
add
popa
inc
fimul
ret
ror
jne
mov
retf
mov
aaa
push
js
pop
and
mov
(bad)
call
mov
push
sahf
movs
popf
cwde
and
cmp
xor
cmps
push
push
push
int3
sbb
pop
sbb
sbb
and
int
jmp
xchg
xchg
arpl
int
ror
(bad)
sub
(bad)
jae
mov
add
dec
popf
mov
lods
popa
push
jecxz
cmc
jae
cdq
popa
enter
fbld
ja
call
dec
sub
sbb
rcl
test
inc
push
sbb
cwde
aam
mov
xchg
pop
add
dec
mov
(bad)
(bad)
inc
jb
pop
xchg
cmp
adc
mov
fild
pop
ins
int
ret
push
(bad)
(bad)
(bad)
(bad)
dec
adc
mov
hlt
xor
dec
imul
cmp
test
jmp
push
pop
pop
cmp
jg
in
in
leave
icebp
mov
xor
sub
sub
(bad)
jg
hlt
mov
(bad)
inc
sbb
aas
mov
cmps
cmps
lahf
mov
xor
(bad)
(bad)
jmp
jmp
sub
xchg
imul
add
xor
mov
test
leave
fimul
cmp
ins
mov
sub
(bad)
jg
push
test
push
test
sbb
xchg
clc
add
movs
ss
loopne
dec
bound
push
js
es
jb
push
mov
mov
call
es
xchg
push
mov
aaa
(bad)
jp
push
cmc
lods
mov
test
jo
into
cmp
jmp
mov
dec
mov
and
pop
stc
js
mul
xchg
(bad)
jg
sbb
xchg
div
(bad)
jge
adc
mov
or
enter
fbld
loop
xor
sti
loopne
test
add
and
in
pop
mov
jne
(bad)
jmp
movs
and
adc
fnstcw
mov
aad
mov
stos
or
enter
xchg
cmps
scas
cli
(bad)
jg
or
xchg
mov
add
xor
das
add
cli
inc
mov
push
ins
or
ja
ret
pop
adc
test
(bad)
jg
add
test
mov
sbb
xor
sar
(bad)
(bad)
push
into
cmps
mov
or
imul
daa
push
icebp
nop
mov
xchg
push
scas
push
sar
movs
push
cwde
iret
(bad)
inc
cdq
push
mov
pop
and
lahf
sbb
push
xor
lea
(bad)
(bad)
jmp
ss
and
adc
clc
outs
jmp
push
fbld
in
adc
je
int
push
(bad)
loope
js
and
sbb
fadd
mov
push
add
mov
jno
xchg
cdq
cmp
js
in
cli
imul
or
fild
mov
jno
mov
(bad)
(bad)
(bad)
jg
inc
(bad)
test
(bad)
inc
ret
imul
mov
in
pop
dec
inc
pop
cli
(bad)
(bad)
dec
add
test
dec
push
addr16
push
cmp
aas
adc
cmp
es
pop
aas
sbb
and
xchg
jecxz
inc
das
aaa
cld
jmp
mov
shr
pop
add
lahf
xchg
dec
cmp
xchg
jge
mov
(bad)
inc
jecxz
gs
push
fsubr
add
cmp
cmp
inc
sub
cmp
shl
sub
push
lea
push
mov
fldcw
pop
jge
js
adc
into
adc
jle
inc
mov
(bad)
dec
stos
or
(bad)
retf
xor
push
jne
or
xor
hlt
test
add
int3
enter
inc
adc
pop
imul
std
jmp
push
add
popa
test
mov
jns
call
scas
or
je
aam
lahf
sbb
add
enter
xor
out
push
cmc
push
pop
sbb
repz
pop
repnz
push
and
push
fiadd
dec
mov
adc
and
mov
add
cmp
fstp
sar
clc
aaa
std
inc
arpl
or
and
push
adc
sub
repz
adc
mov
add
jmp
call
call
or
jmp
cmp
add
test
(bad)
(bad)
stc
movs
dec
or
xor
cmp
jnp
xor
into
cmp
cmp
dec
push
xchg
inc
adc
repz
test
ror
(bad)
mov
jno
dec
jno
aam
mov
jg
test
sub
mov
adc
cmc
xlat
test
ret
std
inc
jle
lds
jg
hlt
dec
std
jg
lock
jo
push
fld
mov
mov
or
cmps
jo
push
sub
ficom
frstor
pushf
arpl
inc
push
and
sub
fsubr
and
into
mov
cmp
ss
outs
cli
(bad)
push
retf
sbb
mov
xor
inc
cwde
push
ja
test
or
add
cmp
jno
out
div
cmp
loope
add
cmp
pop
loopne
cmp
test
fnstsw
in
sbb
cwde
stos
adc
fistp
in
(bad)
push
clc
dec
mov
(bad)
add
xor
repz
fadd
dec
ins
mov
popf
xor
mov
adc
idiv
or
cmp
(bad)
(bad)
jg
ins
and
xchg
retf
cs
sub
push
pusha
call
(bad)
(bad)
mov
xor
mov
jne
and
mov
sbb
scas
push
dec
in
popf
xor
mov
popf
gs
ins
xor
add
add
inc
popa
sub
fadd
jnp
or
pop
(bad)
(bad)
(bad)
(bad)
jmp
jo
sub
(bad)
adc
(bad)
(bad)
push
out
xchg
adc
or
push
mov
and
(bad)
dec
xor
jne
xchg
sbb
jg
dec
xor
mov
push
arpl
adc
fcomp
inc
dec
addr16
dec
call
(bad)
(bad)
call
inc
mov
mov
xor
cmp
f2xm1
push
sbb
sbb
das
pop
leave
stc
retf
sar
and
aad
pop
mov
test
ret
sbb
push
mov
pop
mov
add
pop
jmp
jp
mov
mov
(bad)
inc
sbb
pushf
mov
jge
or
push
mov
out
jno
(bad)
push
imul
dec
(bad)
(bad)
call
retf
xor
adc
hlt
sahf
jae
jne
jnp
xor
lods
adc
(bad)
(bad)
js
adc
aam
jmp
adc
pushf
adc
je
inc
jl
sahf
mov
add
call
in
adc
scas
or
xchg
adc
outs
shl
fbld
inc
adc
push
adc
push
mov
dec
cli
addr16
adc
ret
adc
ret
int3
cld
in
mov
(bad)
scas
sub
idiv
fcomip
(bad)
cmp
imul
shl
xor
sti
dec
xadd
or
cmc
inc
push
sbb
push
aam
and
ss
jge
and
push
aam
jl
in
push
push
cmps
std
pop
(bad)
mov
outs
inc
jbe
pop
fstp
pushf
cmp
add
xor
fisttp
test
cmc
movs
mov
ja
(bad)
(bad)
push
popa
pop
(bad)
pushf
icebp
push
mov
xchg
jmp
adc
(bad)
test
test
pop
inc
or
(bad)
jge
stc
adc
adc
and
cmp
out
pop
jmp
push
jg
aad
imul
add
(bad)
(bad)
(bad)
(bad)
mov
nop
popf
test
mov
jmp
mov
dec
rcr
cmp
dec
adc
movs
cwde
ss
adc
mov
inc
aaa
sbb
jle
pushf
(bad)
out
ja
and
fwait
push
mov
cmp
or
mov
mov
push
sbb
pop
jecxz
dec
in
pop
clc
(bad)
jg
aaa
inc
ds
mov
imul
je
push
mov
jmp
adc
cmp
aaa
outs
shl
pop
cli
push
aad
pusha
lahf
sbb
fdivrp
or
ins
or
in
mov
or
cmp
push
(bad)
push
test
jns
cmps
(bad)
jnp
pmaddwd
adc
sbb
pop
dec
xchg
sub
lahf
push
push
dec
jmp
js
push
popa
xor
mov
cmps
cli
mov
(bad)
and
mov
cld
cmp
mov
(bad)
or
sbb
jl
and
jl
gs
cli
add
test
daa
cmp
push
sbb
mov
mov
jg
test
pop
sbb
xchg
outs
ss
(bad)
(bad)
call
mov
jmp
aaa
adc
test
fdiv
mov
(bad)
jmp
(bad)
adc
shl
and
adc
mov
and
push
xor
cmp
ret
mov
mov
mov
cmp
and
test
mov
ins
mov
scas
mov
sub
aaa
xor
(bad)
and
ds
xor
(bad)
(bad)
inc
pop
inc
xor
out
ins
xor
retf
in
and
out
xchg
push
in
push
rol
(bad)
(bad)
jg
cmp
jge
push
fcom
mov
push
inc
mov
cdq
std
imul
lea
enter
fwait
xlat
rcr
stos
int
xor
push
cli
mov
jae
cmp
dec
enter
shr
push
fcom
push
pop
sbb
(bad)
xchg
lea
sub
mov
cli
(bad)
(bad)
inc
cmp
out
adc
dec
push
lsl
loopne
mov
inc
test
aam
pop
shl
in
cmp
xor
or
mov
mov
or
push
call
shl
xor
or
gs
inc
(bad)
and
add
jmp
not
stc
mov
test
xchg
cdq
loope
and
aam
(bad)
push
jo
icebp
call
xor
jmp
pop
adc
push
outs
outs
add
pop
dec
adc
xor
fimul
add
jmp
(bad)
(bad)
(bad)
call
pop
std
jg
or
cwde
cmc
mov
out
cmps
xor
into
xor
dec
cmp
push
out
xchg
cmc
call
dec
js
or
rol
in
popa
std
aaa
adc
sbb
mov
mov
or
add
cmp
mov
jg
dec
out
and
or
cmp
mov
mov
test
add
nop
mov
push
lock
call
jbe
ficomp
jge
add
aaa
jecxz
pushf
fsub
xor
push
mov
jne
jmp
out
xchg
push
mul
call
adc
(bad)
jg
push
bound
shl
sub
push
addr16
push
addr16
shr
daa
hlt
dec
out
jg
clc
aad
mov
or
and
cmp
jae
daa
scas
jle
add
ret
test
push
adc
out
clc
jmp
sub
mov
or
mov
pusha
dec
loopne
xchg
push
in
stc
out
(bad)
(bad)
(bad)
dec
jge
int
mov
push
xchg
in
xchg
jmp
add
repz
cmc
pop
adc
(bad)
mov
push
js
xchg
imul
popa
(bad)
jae
loopne
call
dec
call
cdq
add
jne
mov
retf
inc
inc
or
jnp
cmp
add
loop
hlt
lock
jge
cmp
xor
mov
les
sbb
cld
(bad)
(bad)
push
xchg
adc
xchg
sub
inc
shr
jecxz
mov
imul
ror
mov
hlt
sar
pop
or
scas
inc
mov
adc
jno
rcl
jmp
cli
ja
push
lds
inc
cmp
sub
call
add
mov
jns
loope
stc
or
mov
enter
test
jmp
fabs
jg
xchg
hlt
sar
jecxz
and
jns
sahf
call
std
jmp
add
shl
rcl
in
in
or
pusha
xchg
and
fdivr
dec
cld
sahf
and
jmp
cwde
xor
(bad)
(bad)
jmp
mov
pop
add
cmp
in
add
std
push
adc
mov
(bad)
push
std
jg
sbb
das
sti
lahf
push
push
dec
lock
xor
cmp
xor
jmp
shr
push
sub
leave
fcomip
xor
fcos
(bad)
jg
and
sub
push
fcomp
sbb
fdivr
(bad)
push
xchg
idiv
dec
dec
sbb
push
clc
aaa
nop
sar
sub
in
jns
and
data16
or
xchg
enter
mov
mov
(bad)
cmp
(bad)
push
push
jns
or
mov
mov
jmp
stos
add
pop
adc
clc
lods
rol
adc
hlt
(bad)
fbld
into
push
(bad)
fsubr
sbb
loope
dec
je
outs
hlt
push
aad
into
xlat
pusha
inc
cmp
xchg
fisub
cdq
(bad)
(bad)
dec
cmp
ins
int
dec
lds
icebp
std
xchg
sahf
dec
or
xlat
out
adc
sar
je
xchg
cwde
leave
xor
outs
data16
or
imul
(bad)
(bad)
call
jge
add
xchg
push
ret
fld
push
cmp
(bad)
call
sub
fbstp
mov
mov
cs
arpl
mov
lods
sub
pop
pop
not
jno
(bad)
(bad)
push
call
mov
mov
jl
push
sbb
jecxz
stos
adc
xchg
(bad)
(bad)
inc
jge
and
and
aas
or
add
ret
fdivr
(bad)
jmp
mov
jecxz
pop
(bad)
mov
pushf
scas
(bad)
lock
je
xchg
jmp
inc
mov
lea
(bad)
popa
je
add
loop
add
dec
pop
inc
push
push
xchg
pop
lock
out
pop
ror
fimul
jmp
dec
stos
mov
inc
mov
sar
and
test
xchg
mov
(bad)
mov
add
jmp
add
xchg
and
ret
add
jg
fist
mov
mov
and
push
adc
push
loope
cmp
fwait
(bad)
(bad)
call
std
es
cmp
inc
fnstenv
lods
cmps
lea
cld
pop
stos
mov
lea
inc
jge
lods
add
xor
cs
aaa
push
mov
push
add
(bad)
(bad)
(bad)
inc
pop
mov
(bad)
(bad)
(bad)
mov
and
jnp
jne
loopne
push
cld
xchg
rol
(bad)
mov
mov
xchg
lods
movs
fs
lea
and
xchg
jne
shl
cmp
sbb
pushf
push
test
mov
and
in
push
sbb
jmp
in
cmp
xlat
cmp
inc
neg
jle
cmp
es
mov
add
xchg
test
add
mov
(bad)
call
ins
js
fwait
xor
push
mov
add
cmp
arpl
movs
mov
mov
(bad)
(bad)
cmp
sub
jmp
push
push
mov
jmp
push
cmp
retf
je
lock
fisttp
push
sbb
sahf
(bad)
(bad)
call
(bad)
jae
xor
adc
sub
add
add
push
and
xchg
ins
das
sbb
cmc
in
add
(bad)
cmp
push
retf
cmps
adc
out
push
jae
xor
pushf
mov
call
ret
clc
dec
shl
enter
(bad)
stos
cmp
lods
pusha
inc
(bad)
in
dec
pop
pop
call
xor
clc
jne
fistp
outs
xchg
loopne
(bad)
inc
push
adc
xor
adc
sub
mov
xchg
ficom
(bad)
mov
je
adc
adc
inc
and
mov
jbe
mov
jbe
(bad)
mov
std
inc
push
mov
or
setl
or
dec
xchg
test
sub
(bad)
cmp
data16
pop
jmp
sbb
and
repz
and
push
jae
(bad)
(bad)
(bad)
dec
div
adc
int
xchg
arpl
leave
dec
pop
rcr
xor
jecxz
dec
mov
inc
or
(bad)
inc
cmc
push
pop
popf
dec
scas
lods
icebp
adc
add
dec
cld
sar
(bad)
jg
jbe
adc
popf
push
pop
cs
jnp
fwait
mov
cs
(bad)
jmp
dec
mov
sbb
ja
adc
inc
jle
js
pushf
dec
sub
or
add
and
ins
jecxz
jmp
ret
shl
xchg
ds
popa
xchg
retf
(bad)
(bad)
jg
adc
and
mov
inc
mov
stos
add
test
loopne
aad
fild
(bad)
inc
lods
sub
sub
or
cmp
and
div
(bad)
dec
lods
inc
xchg
xchg
adc
dec
ins
lds
out
mov
mov
or
in
pop
loopne
lahf
dec
sub
inc
push
and
inc
dec
xchg
(bad)
jns
cmc
mov
(bad)
xchg
jbe
(bad)
(bad)
jmp
in
cdq
adc
lods
sub
dec
mov
(bad)
(bad)
(bad)
(bad)
(bad)
outs
adc
xchg
push
test
ficom
jmp
xchg
retf
add
call
das
js
and
cmp
fsubr
mov
mov
sbb
sub
sub
lods
jnp
imul
int3
je
sbb
(bad)
jmp
adc
mov
call
cld
push
jb
cmp
xchg
xor
or
fwait
movs
test
icebp
movs
(bad)
(bad)
jmp
add
shr
and
enter
pop
ret
sbb
call
lods
jmp
jp
dec
jnp
addr16
cmp
out
test
(bad)
(bad)
(bad)
mov
test
ret
movs
popf
cmp
add
adc
mov
adc
(bad)
(bad)
in
or
add
stos
ins
mov
fnstsw
xchg
xchg
push
aam
sbb
push
fwait
mov
stos
or
(bad)
mov
popf
(bad)
into
(bad)
sub
call
jns
sbb
sub
(bad)
inc
xor
mov
les
dec
loop
iret
push
(bad)
(bad)
(bad)
(bad)
(bad)
and
aaa
stos
je
push
mov
stc
out
cmp
sbb
xor
es
(bad)
imul
cmp
jns
pushf
repz
into
push
sub
enter
xchg
xchg
jmp
mov
push
cmp
cmp
inc
or
or
add
test
sub
jne
and
cmp
sbb
test
adc
cmp
xor
or
jmp
xchg
mov
jnp
jne
jge
pop
je
idiv
jg
outs
adc
push
and
retf
pop
je
dec
adc
mov
aad
(bad)
(bad)
(bad)
push
sbb
push
add
add
stc
fcomp
xor
sti
mov
dec
in
(bad)
(bad)
(bad)
(bad)
cli
mov
loope
and
sbb
in
adc
std
fmul
stos
push
pop
mov
jmp
xchg
push
lods
dec
pop
or
jecxz
or
jmp
lds
stos
jne
aad
(bad)
(bad)
call
add
push
mov
imul
hlt
fiadd
mov
pop
inc
mov
mov
fadd
cmp
leave
sbb
scas
(bad)
dec
adc
daa
xor
cmp
push
lea
or
(bad)
(bad)
(bad)
call
push
jne
scas
jo
mov
or
mov
test
retf
dec
push
or
xor
jae
iret
call
lds
enter
dec
xor
cdq
pop
mul
xchg
sahf
mov
in
push
pop
sub
nop
jl
(bad)
(bad)
mov
mov
mov
push
fcomp
push
sub
push
sbb
dec
cmp
push
sbb
(bad)
(bad)
inc
push
sti
jmp
pop
xor
jl
push
cs
fild
sar
add
cs
std
out
sbb
pop
mov
fcomp
dec
cs
adc
(bad)
jg
test
in
mov
dec
mov
xor
mov
cmp
(bad)
(bad)
(bad)
(bad)
jmp
xor
jecxz
(bad)
scas
aad
inc
aas
jmp
pop
cmp
stos
mov
pop
mov
mov
(bad)
call
fild
icebp
cmp
push
pop
mov
xlat
pop
dec
and
mov
inc
pop
or
jecxz
pop
and
or
movs
cmp
xchg
xlat
mov
or
sar
mov
jbe
call
call
dec
jecxz
add
push
retf
xchg
jge
xchg
jmp
fsubr
pop
mov
(bad)
je
in
stos
cld
or
adc
pop
(bad)
(bad)
(bad)
call
arpl
xor
xor
cmp
xchg
add
(bad)
(bad)
jmp
dec
out
sbb
xor
aaa
mov
rcr
rol
js
into
lods
pop
in
cld
into
and
add
ins
push
inc
mov
mov
mov
push
movs
sub
or
and
daa
call
aaa
dec
call
jmp
scas
cmp
adc
clc
mov
jbe
aad
jns
add
push
push
fwait
push
(bad)
(bad)
(bad)
jmp
ret
rcl
cmc
add
jp
adc
mov
cmp
lahf
fidiv
(bad)
jle
in
mov
dec
rcl
xchg
or
cmp
ins
jo
(bad)
(bad)
jmp
and
out
mov
fdivr
ss
pushf
(bad)
pop
inc
or
sub
imul
(bad)
(bad)
jmp
popa
div
cmp
pop
fldenv
push
daa
inc
loopne
mov
arpl
adc
push
ins
ret
xor
xchg
xor
and
push
loop
adc
(bad)
push
mov
inc
sub
mov
sub
(bad)
(bad)
jmp
cmp
dec
mov
xchg
imul
ss
adc
cmp
cld
scas
jle
sub
xchg
lds
fdiv
xchg
push
mov
cmp
cwde
cmc
stc
test
(bad)
call
movs
push
addr16
outs
imul
popa
xor
test
scas
aaa
push
mov
lahf
in
(bad)
cmp
outs
adc
dec
enter
lea
add
(bad)
jmp
sbb
add
stos
in
adc
adc
rol
call
xchg
xchg
dec
pop
add
inc
movs
int
je
xor
test
(bad)
call
jne
add
cld
mov
adc
xor
jg
lock
mov
cmp
not
dec
push
rcl
xchg
sahf
sbb
aas
sub
sti
call
jbe
push
lock
in
fwait
mov
in
push
test
(bad)
jg
mov
pusha
add
push
stc
sahf
cmc
push
in
pop
imul
or
and
pop
sbb
sbb
adc
lahf
mov
cmc
leave
ins
pop
pushf
push
push
fnstcw
inc
push
(bad)
jg
or
mov
cwde
fwait
xor
cmc
inc
add
lea
cmp
inc
jecxz
stc
xor
and
clc
aas
shl
jecxz
test
std
fild
push
jbe
inc
xor
ss
mov
std
test
mov
mov
pop
fidiv
leave
jl
sbb
arpl
lock
jns
push
cmp
das
clc
pusha
sbb
sar
fld
cmp
pop
push
imul
mov
or
add
mov
push
ficom
sti
sbb
pop
(bad)
(bad)
jmp
and
cmp
sti
push
jg
into
rcr
icebp
push
push
(bad)
(bad)
(bad)
(bad)
cmp
pop
test
fistp
xchg
mov
sbb
cmp
movs
mov
dec
sar
call
push
xchg
fdivp
sub
cmp
add
(bad)
inc
mov
jno
sub
or
and
pushf
pop
mov
jnp
push
ret
in
jmp
sub
(bad)
(bad)
call
dec
dec
mov
out
popa
ds
inc
loope
inc
ja
mov
loop
retf
popf
xchg
lds
(bad)
(bad)
(bad)
push
sbb
push
aas
ror
sti
into
js
jmp
ins
cmp
add
data16
scas
jl
push
push
fwait
(bad)
ja
jnp
cld
mov
stc
dec
mov
mov
push
sub
pop
or
cmp
xchg
or
ja
cmp
add
push
dec
popa
jge
xchg
(bad)
(bad)
(bad)
(bad)
pop
push
push
cmp
pop
test
sbb
and
cs
sbb
pop
aas
das
add
rol
aaa
push
push
jmp
ins
std
(bad)
(bad)
inc
add
aad
retf
cmc
(bad)
pop
or
xor
push
adc
jbe
pop
xchg
hlt
jbe
pop
mov
(bad)
mov
pop
xor
push
sbb
out
xchg
jae
mov
xor
or
cmp
dec
jbe
xchg
pop
cld
xchg
(bad)
(bad)
je
xor
adc
fldcw
aam
jge
push
leave
ds
dec
out
fstp
cmp
push
pop
mov
jg
cdq
mov
cmp
mov
adc
add
clc
sub
call
pushf
dec
mov
xor
stos
jmp
and
sbb
sbb
sub
xchg
daa
adc
add
js
or
(bad)
call
test
xlat
fst
out
mov
mov
sti
cmp
dec
mov
inc
inc
clc
jle
xchg
jnp
jbe
and
mov
call
shr
lods
lea
sub
neg
or
test
jnp
enter
outs
ja
shr
add
adc
sbb
aas
adc
aas
(bad)
(bad)
(bad)
inc
sbb
jmp
cdq
ins
(bad)
jb
clc
mov
dec
inc
sbb
or
movs
and
(bad)
(bad)
(bad)
jmp
and
rol
inc
sbb
dec
xchg
inc
test
and
jbe
push
(bad)
(bad)
(bad)
dec
aad
or
jge
xchg
int
or
push
fisubr
sbb
xor
fcom
cmp
mov
sbb
push
mov
hlt
sbb
jns
jnp
jmp
xchg
jne
fst
popa
sub
push
pushf
stos
jle
xchg
les
add
aam
jbe
mov
or
push
test
push
scas
(bad)
mov
or
cmps
ss
(bad)
(bad)
jg
xchg
sub
jbe
movs
nop
adc
dec
push
cld
cmps
(bad)
and
dec
scas
aad
mul
cmp
or
(bad)
dec
adc
jo
push
rol
jmp
add
cli
xchg
pushf
addr16
std
bound
jg
or
outs
bound
xchg
mov
aas
push
push
add
and
(bad)
jmp
add
add
xchg
aad
popa
stos
inc
sub
(bad)
call
ins
fsubp
pop
fist
dec
pushf
aad
inc
cwde
iret
inc
leave
and
idiv
sub
scas
adc
adc
(bad)
mov
out
das
repz
rcl
sub
lds
pop
or
imul
mov
mov
and
dec
inc
sbb
(bad)
(bad)
mov
xor
std
mov
sub
mov
pop
fdivr
fcomip
scas
test
lods
inc
aam
in
call
inc
pop
xor
out
ss
jmp
addr16
cmc
lods
test
sbb
mov
xchg
(bad)
(bad)
jmp
shl
xor
push
(bad)
hlt
and
icebp
push
sbb
(bad)
(bad)
push
add
and
add
mov
add
into
addr16
(bad)
(bad)
(bad)
inc
push
aam
inc
lock
adc
inc
adc
test
jmp
dec
js
(bad)
lods
mov
push
call
push
cwde
and
(bad)
loop
fs
pushf
jae
mov
std
push
push
xchg
dec
cdq
mov
(bad)
(bad)
jmp
loope
lock
adc
dec
mov
sub
cli
shl
sub
cmc
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
in
mov
fild
jl
inc
pop
jns
fwait
and
call
xor
bound
add
add
lahf
retf
fwait
std
aad
push
push
mov
mov
jne
hlt
adc
pop
(bad)
mov
lods
je
xchg
jmp
adc
(bad)
(bad)
cmp
push
sbb
dec
or
rcl
retf
pusha
aam
fwait
sbb
lahf
std
retf
scas
cmp
sbb
(bad)
mov
into
stc
les
fsubr
add
es
popa
shl
or
call
adc
sub
test
test
pop
std
xchg
(bad)
mov
hlt
icebp
aam
outs
mov
push
popf
ss
(bad)
push
jg
add
repnz
cdq
jp
out
ja
cld
lds
jno
mov
and
sbb
sti
xor
jns
cmp
(bad)
(bad)
(bad)
jl
in
std
jne
fadd
cmp
nop
into
push
mov
xor
push
call
jns
jmp
aas
mov
jge
inc
out
jns
pop
test
xor
push
mov
(bad)
push
fsubp
xchg
sbb
dec
(bad)
adc
push
popf
and
or
sbb
(bad)
(bad)
inc
ss
sbb
(bad)
out
inc
cdq
mov
and
ins
inc
popf
cdq
js
aaa
(bad)
(bad)
(bad)
inc
and
inc
in
lds
(bad)
jns
loop
popa
jns
sbb
or
test
cli
dec
sbb
push
add
inc
inc
inc
cmp
aam
loope
das
add
add
cmp
add
inc
(bad)
push
mov
push
mov
lea
das
add
daa
sub
ds
pop
jo
rcr
push
ret
jb
in
sbb
add
pop
pop
add
mov
jne
jne
pop
pop
xchg
(bad)
jmp
gs
add
or
aaa
sti
(bad)
(bad)
(bad)
cmp
aam
in
ss
pop
xchg
or
xor
out
and
iret
mov
pusha
ins
(bad)
loope
pop
rcr
mov
mov
cs
jp
sbb
mov
or
sbb
sbb
outs
jge
ins
jns
fadd
jb
and
call
push
bound
lock
add
in
pop
es
jg
out
test
unpcklps
rcr
sub
mov
push
mov
inc
xlat
jmp
out
out
xchg
test
popa
or
ret
in
jg
pop
icebp
jo
jo
mov
sub
jns
and
pop
out
popf
jp
cmps
std
dec
mov
cmp
push
adc
xchg
jo
mov
xor
jb
cmps
and
pop
cs
sbb
ficomp
push
std
sub
jbe
das
gs
mov
push
(bad)
(bad)
(bad)
inc
(bad)
je
mov
mov
xor
cmps
add
stos
jecxz
ja
push
and
rcl
xchg
nop
dec
inc
push
adc
cmp
pushf
iret
sbb
call
loopne
addr16
mov
cmp
lods
cmp
das
shl
popa
imul
into
jg
mov
pop
rcl
xor
cwde
xchg
push
pop
(bad)
cmp
call
xor
or
sub
dec
push
std
jnp
add
cmp
(bad)
(bad)
jmp
or
ss
sbb
xchg
inc
mov
jl
adc
jmp
cli
(bad)
cmp
cmp
popa
dec
adc
lea
(bad)
jmp
mov
nop
xchg
inc
xchg
fwait
xchg
jne
sti
inc
pusha
pop
ds
adc
je
adc
das
rol
cmp
fcomip
jg
push
mov
push
pop
pop
scas
inc
jae
mov
xchg
xchg
in
cmp
(bad)
(bad)
(bad)
call
int3
add
sti
and
je
popa
in
push
or
fwait
push
mov
jbe
lds
cdq
mov
sbb
jp
mov
sub
inc
sbb
dec
(bad)
fisttp
cmp
movs
fs
mov
lea
and
(bad)
(bad)
call
xor
fadd
outs
in
add
adc
bound
dec
(bad)
(bad)
jg
xor
mul
data16
jne
test
rcl
je
jge
sbb
(bad)
(bad)
call
jnp
mov
es
jns
add
(bad)
addr16
dec
mov
mov
add
(bad)
(bad)
(bad)
(bad)
fdivr
xor
inc
pop
std
mov
repnz
call
or
fisttp
mov
les
cmc
(bad)
(bad)
call
in
jns
xchg
cmp
je
and
not
and
in
loop
mov
clc
fiadd
cmp
inc
or
fdivr
nop
lods
jecxz
cmc
scas
xchg
jecxz
jb
xchg
inc
enter
test
sub
ja
jg
cmp
mov
cmp
(bad)
arpl
adc
fst
into
shld
cmc
(bad)
jmp
push
mov
faddp
sub
lods
hlt
inc
push
or
pop
fdiv
push
(bad)
dec
(bad)
fs
jnp
mov
mov
sbb
retf
pushf
mov
pusha
cmps
adc
(bad)
(bad)
jmp
or
and
jae
pop
mul
lods
xor
ins
pusha
sar
int3
or
xchg
jg
add
pop
inc
jnp
ret
or
push
push
fistp
rcr
out
jmp
xchg
es
mov
sub
int
hlt
adc
pushf
jl
lock
jmp
leave
sbb
test
mul
push
sub
pop
mov
dec
adc
jne
jp
mov
aas
add
cmp
mov
inc
xchg
xor
jne
pop
dec
jge
test
lea
(bad)
xchg
pop
mov
xchg
lods
push
(bad)
jg
add
mov
into
int
dec
aad
cmp
fs
dec
lock
dec
aaa
jle
push
sbb
ins
jmp
pop
lods
push
cdq
lea
(bad)
mov
jmp
(bad)
call
xchg
add
jbe
jle
xchg
adc
mov
in
aaa
mov
sahf
mov
add
push
and
mov
xchg
sbb
lods
inc
and
sub
mov
add
dec
add
push
(bad)
(bad)
jmp
dec
jge
inc
outs
cmp
mov
in
mov
add
sar
or
rol
xor
in
and
inc
outs
ror
xor
test
dec
(bad)
mov
icebp
or
push
repnz
jle
cs
inc
xor
cli
sub
pop
cmp
pop
add
cli
aam
ins
dec
pop
xlat
leave
xchg
push
cs
sbb
jmp
push
push
les
hlt
mov
and
in
dec
gs
push
cmp
das
mov
mov
and
clc
mov
pop
xchg
in
pop
cmc
cmp
sbb
(bad)
fbstp
cld
lea
sub
call
sbb
mov
pushf
jbe
jecxz
xchg
(bad)
push
lds
mov
cmp
sub
lea
push
fadd
push
jns
add
xchg
mov
cs
mov
js
mov
mov
(bad)
push
loop
mov
add
pop
outs
xchg
dec
cmc
(bad)
call
adc
mov
push
xchg
push
mov
pop
into
in
and
xor
jecxz
ret
push
jae
fs
clc
(bad)
(bad)
inc
ret
jns
je
add
xchg
sub
jle
imul
xor
(bad)
(bad)
jmp
and
mov
daa
dec
inc
test
jp
add
aam
jno
mov
cli
(bad)
jmp
mov
jp
sub
jns
int3
jno
cmp
ja
and
or
xor
fisttp
sbb
imul
pop
es
sbb
add
xchg
shr
push
fidivr
mov
bound
sbb
inc
add
mov
loopne
xor
add
mov
jmp
adc
(bad)
jmp
loope
jnp
dec
jp
dec
movs
add
sub
sar
cmp
cli
call
les
push
(bad)
cmp
ss
movs
sbb
mov
retf
out
pop
stos
cmp
ds
pop
mov
jae
mov
jmp
test
ror
mov
pop
call
mov
adc
sbb
cmp
jbe
push
mov
and
(bad)
inc
retf
adc
inc
adc
dec
push
shl
jg
pop
pushf
js
(bad)
(bad)
jg
and
imul
clc
jo
das
and
out
std
into
loop
mov
sti
cmp
outs
cli
call
xor
mov
lock
std
cdq
outs
xchg
repz
(bad)
(bad)
jmp
fadd
shl
inc
pop
sbb
xchg
js
test
sbb
hlt
dec
test
cld
inc
inc
shr
cmp
ja
sbb
aaa
xor
xchg
std
pop
lds
jle
cmp
mov
(bad)
(bad)
(bad)
(bad)
jle
in
and
cld
jge
mov
cmps
ins
jne
or
xor
(bad)
sbb
out
and
ins
cld
(bad)
in
popa
pop
mov
jbe
ret
mov
sbb
jae
js
cld
(bad)
jg
int3
xor
call
fmul
mov
or
ss
mov
pushf
fcom
retf
xor
(bad)
inc
add
push
test
sub
inc
lock
test
rol
xor
fst
sar
push
int3
sbb
mov
into
pop
sub
add
cmp
loop
(bad)
(bad)
mov
fild
into
das
xchg
sub
cmp
pop
std
inc
movs
jecxz
icebp
inc
xchg
mov
push
out
mov
push
ds
(bad)
(bad)
push
jne
pushf
test
push
mov
scas
inc
push
pushf
jne
cmp
jbe
jle
mov
(bad)
cmp
mov
pop
adc
imul
pop
shr
sub
std
push
es
jmp
test
mov
pop
sub
mov
xchg
ja
push
sub
loopne
daa
pop
(bad)
iret
mov
and
lock
jo
xchg
je
sub
(bad)
lock
(bad)
(bad)
jmp
jle
das
cs
push
stc
int3
mov
dec
inc
int3
and
adc
dec
aam
pop
and
mov
jmp
fisttp
adc
cmp
push
inc
idiv
(bad)
(bad)
(bad)
fcom
sti
cmps
fcomp
js
sar
jmp
push
jo
xchg
div
inc
jp
(bad)
(bad)
(bad)
call
add
pop
inc
sbb
adc
and
inc
push
popa
and
cli
mov
jp
mov
jg
mov
es
ss
mov
jbe
ins
dec
loopne
(bad)
fnsave
mul
xlat
mov
call
mov
sti
and
mov
push
loope
aaa
add
and
pop
and
jle
fidiv
jno
sbb
xor
push
inc
cmp
(bad)
(bad)
inc
sbb
push
mov
(bad)
call
mov
fist
popf
mov
call
sbb
cmc
pop
(bad)
jmp
mov
call
push
inc
iret
hlt
test
cmp
in
ss
test
cld
(bad)
in
sub
jae
test
fmul
cmp
clc
(bad)
(bad)
cmp
ss
cmp
out
lahf
cld
and
add
(bad)
jg
jmp
sbb
cs
sbb
push
sbb
ficom
lock
lock
push
call
adc
jmp
lds
cmc
jge
ds
inc
sbb
call
bound
or
sbb
adc
cmp
inc
loope
movs
(bad)
(bad)
mov
imul
xchg
jnp
cli
jns
jbe
xor
mov
sbb
sub
inc
jmp
push
rcr
pusha
jbe
cld
aaa
sbb
adc
and
pop
(bad)
stc
jns
cs
pop
(bad)
(bad)
push
mov
pop
xor
test
js
into
std
jmp
pop
push
fadd
pushf
pop
cmp
cdq
in
cmp
jns
push
cwde
jb
add
ss
or
sar
or
add
xor
xor
test
sbb
shr
or
clc
icebp
clc
xchg
(bad)
ins
sar
cdq
mov
cmp
sub
nop
cmp
cmps
pop
aad
in
dec
mov
inc
aam
cmp
shl
jg
pusha
cmps
pop
push
inc
jmp
push
std
(bad)
jg
mov
not
jae
cmp
cmp
pop
mov
mov
add
push
mov
das
pop
es
(bad)
(bad)
push
cmp
test
sbb
inc
inc
div
inc
xchg
test
mov
fisttp
aad
icebp
mul
jae
push
xor
mov
clc
sbb
and
inc
loopne
aad
outs
pushf
in
cmp
repnz
call
js
loopne
mov
push
stc
pushf
mov
and
pop
jmp
(bad)
jmp
(bad)
scas
shl
dec
mov
into
xchg
push
or
xor
(bad)
(bad)
(bad)
jmp
jb
mov
push
mov
push
out
out
out
ss
jecxz
sub
xchg
(bad)
(bad)
push
adc
push
(bad)
(bad)
fisubr
sahf
jmp
or
(bad)
xchg
ins
call
push
dec
mov
out
into
and
sub
out
fadd
(bad)
dec
push
inc
mov
cwde
test
mov
pop
xchg
in
ret
in
clc
xchg
into
mov
(bad)
call
inc
cwde
iret
inc
test
punpckhwd
dec
mov
sub
xchg
xchg
jae
add
(bad)
(bad)
push
mov
push
fwait
jo
xchg
xchg
pop
jmp
int3
stos
and
pop
(bad)
std
pusha
(bad)
jg
jg
or
and
ss
or
lds
push
cmc
js
xor
push
cmc
and
xchg
std
ja
(bad)
push
nop
cld
dec
popf
nop
adc
shl
inc
cmp
push
add
dec
add
cmp
jb
in
and
inc
push
cs
test
xchg
xor
fwait
add
aad
dec
test
and
jae
std
(bad)
(bad)
call
cmc
push
das
push
dec
cmovno
ficom
xchg
and
and
icebp
dec
test
mov
scas
xchg
loop
jmp
dec
jb
jge
pop
mov
mov
shl
(bad)
(bad)
(bad)
cmp
hlt
mov
stc
enter
mov
aam
retf
sbb
ror
cld
(bad)
call
push
scas
(bad)
xlat
mov
dec
mov
loop
push
jle
sahf
jno
sar
(bad)
(bad)
call
sub
or
dec
inc
pop
test
inc
jmp
not
mov
dec
fmul
retf
mov
push
mov
dec
arpl
mov
(bad)
dec
sub
push
jbe
imul
or
xchg
clc
inc
cwde
test
pop
or
jne
lahf
cmp
cld
jo
lods
stc
or
mov
mov
xchg
lods
push
jg
int
mov
mov
call
sbb
clc
add
cmps
stos
mov
adc
fdiv
nop
(bad)
call
rcr
xchg
not
xor
aaa
dec
(bad)
push
xor
push
call
dec
add
and
xor
dec
dec
sbb
or
lods
jbe
mov
xchg
adc
popf
fsub
ja
jnp
dec
cdq
inc
pop
push
fisttp
cmps
mov
mov
test
(bad)
jg
nop
mov
xor
push
mov
fdiv
push
inc
(bad)
lock
pusha
(bad)
(bad)
(bad)
(bad)
mov
jmp
test
(bad)
jp
loop
(bad)
and
sub
in
cwde
mov
loop
mov
lods
jecxz
adc
sub
cli
pop
or
(bad)
(bad)
jmp
lods
daa
cmp
ficomp
jae
add
xchg
(bad)
(bad)
(bad)
push
outs
out
jge
sub
call
adc
adc
push
gs
sub
aaa
cld
call
div
call
mov
(bad)
pushf
gs
or
jo
adc
adc
and
(bad)
(bad)
jmp
ins
and
jae
fdivr
push
movs
cmp
(bad)
xchg
test
add
cmp
cmp
(bad)
jmp
mov
call
aas
rcr
(bad)
cmp
jne
ins
add
mov
pop
and
cmps
add
dec
push
out
std
(bad)
inc
add
gs
ds
xchg
cmp
test
jo
lock
adc
movs
xor
cwde
adc
cld
cmp
stos
clc
push
pop
cmp
mov
ds
(bad)
(bad)
(bad)
inc
test
cwde
pop
pusha
cmc
mov
push
mov
cs
jge
xchg
jae
inc
arpl
mov
jne
dec
push
cmps
(bad)
call
dec
and
call
sub
push
pop
push
(bad)
icebp
fcom
(bad)
jle
xchg
(bad)
call
sub
sbb
call
jge
jne
sahf
sbb
in
test
mov
add
cmc
sbb
xchg
pusha
sub
pop
cmc
push
loopne
adc
jne
fdivr
dec
mov
lahf
repnz
mov
cmp
dec
aam
sahf
jne
mov
jmp
adc
sbb
ret
or
cmp
(bad)
(bad)
dec
test
mov
cmp
ins
adc
inc
sbb
and
popf
mov
xor
sahf
cmp
popa
cwde
test
sti
je
mov
movs
and
(bad)
(bad)
jmp
sub
cld
push
fld
mov
push
imul
into
sahf
xchg
imul
push
push
popa
xor
xchg
fwait
mov
inc
mov
xchg
mov
neg
inc
add
cwde
popf
fidivr
(bad)
sbb
cmp
cmc
and
push
test
jne
ja
(bad)
cld
imul
rol
mov
cli
push
mov
and
aad
add
ds
mov
std
and
daa
shl
push
dec
jmp
ds
pop
scas
pop
xchg
data16
addr16
fbld
push
xchg
popf
stos
sub
ins
add
call
jbe
dec
sub
jnp
mov
and
ds
das
mov
dec
push
sub
in
xor
or
adc
iret
(bad)
in
fidiv
dec
sar
adc
retf
jbe
pop
or
(bad)
(bad)
(bad)
call
jne
gs
es
pop
in
lods
adc
and
outs
jle
xchg
int
inc
and
push
adc
rcr
das
call
adc
dec
push
(bad)
(bad)
call
ins
jmp
pop
push
nop
pop
mov
and
pusha
inc
jo
(bad)
(bad)
call
pushf
adc
xchg
inc
mov
(bad)
fcomp
gs
jns
dec
retf
cmps
xchg
loopne
pop
cli
pop
add
pop
or
call
fld
hlt
add
jmp
cmps
and
sti
in
loop
(bad)
push
push
cwde
sbb
mov
pop
xchg
push
push
adc
add
sahf
jmp
xchg
xor
fld
(bad)
jle
push
(bad)
(bad)
call
pop
push
xor
jno
jbe
add
mov
mov
inc
push
sti
pop
add
out
cli
jmp
and
add
aad
stos
push
cmps
cmp
std
aaa
adc
loope
pop
aam
push
imul
test
cli
(bad)
(bad)
(bad)
aas
dec
xchg
add
push
lds
jno
jbe
dec
enter
sbb
fld
push
mov
jae
cld
jns
mov
inc
clc
aaa
std
add
mov
call
mov
jae
movs
retf
in
and
sbb
inc
outs
imul
jge
sbb
(bad)
(bad)
call
in
push
repnz
sbb
jne
imul
pop
test
cmp
cmp
jmp
out
inc
sub
pop
push
(bad)
adc
call
xor
stc
mov
mov
jns
out
jns
dec
shl
fsubrp
cmp
(bad)
(bad)
jmp
jae
xchg
pop
push
push
mov
mov
xchg
push
ds
cmp
push
xor
inc
imul
repnz
call
push
call
(bad)
(bad)
(bad)
(bad)
jne
div
cmp
test
jnp
cmc
ror
sbb
push
add
mov
dec
(bad)
fbstp
shl
sub
dec
std
je
push
dec
xor
(bad)
cld
or
aam
cwde
or
popa
pop
sbb
(bad)
jg
ins
ds
sub
outs
xor
(bad)
fadd
inc
dec
sub
hlt
xchg
cmp
enter
outs
and
scas
pop
adc
and
sub
jg
jbe
xor
je
push
popa
clc
pop
jae
cmp
loope
cmp
pop
xor
in
mov
cld
mov
inc
mov
(bad)
repz
push
xor
jae
mov
stc
(bad)
push
std
adc
(bad)
inc
std
push
lock
jns
test
outs
clc
ss
retf
xchg
jl
mov
mov
mov
in
mov
adc
jmp
inc
(bad)
fild
jb
(bad)
fstp
dec
or
mov
mov
aad
jg
adc
fst
fs
(bad)
out
inc
push
add
lock
(bad)
(bad)
dec
cmp
jne
sbb
cmc
pop
aas
push
pop
popa
(bad)
dec
test
imul
push
or
dec
xchg
aaa
and
inc
cmp
aas
clc
inc
and
addr16
push
push
ficom
(bad)
pop
cmp
mov
pop
mov
fcomp
stos
(bad)
dec
mov
and
ins
add
xchg
retf
jecxz
mov
idiv
(bad)
(bad)
push
loopne
jmp
jmp
in
das
daa
xchg
cmp
mov
jbe
lea
outs
fistp
(bad)
(bad)
(bad)
dec
fisubr
in
pushf
xor
push
ja
push
mov
mov
xchg
sub
das
mov
mov
sahf
xchg
jno
fdiv
mov
lods
sbb
sbb
and
push
lods
pushf
nop
movs
jo
pop
ds
popa
in
add
add
sub
pushf
(bad)
(bad)
(bad)
(bad)
jmp
pushf
and
cmp
cmp
push
push
push
adc
dec
inc
pop
inc
dec
mul
sub
int
mov
das
push
dec
mov
popa
in
add
retf
and
sub
jo
sar
dec
mov
mul
dec
lock
inc
adc
sbb
mov
add
pushf
push
dec
mov
idiv
call
scas
jne
test
inc
repnz
inc
sbb
push
rcl
mov
shl
(bad)
jg
add
aad
or
lds
sub
jecxz
jge
xlat
sub
hlt
(bad)
fadd
adc
and
(bad)
xor
push
cs
adc
and
pop
sub
(bad)
call
(bad)
mov
pop
sub
sbb
(bad)
push
push
idiv
into
pop
in
cwde
dec
cmovae
cmp
sahf
jp
repnz
movs
pop
push
sbb
jg
arpl
mov
popa
stc
ror
pop
hlt
out
out
popa
rol
sub
lods
call
mov
fcomip
sbb
(bad)
jmp
das
or
push
pop
cmp
lea
jne
pop
test
loope
sbb
lods
ins
jle
rol
test
adc
retf
popa
les
fld
daa
test
(bad)
jmp
mov
mov
retf
cmp
add
aaa
cmc
cmp
retf
xchg
(bad)
(bad)
(bad)
(bad)
ds
add
mov
clc
sbb
movups
jmp
mov
jno
gs
(bad)
stc
push
jmp
out
jge
(bad)
in
(bad)
mov
mov
push
(bad)
mov
(bad)
out
cli
or
and
inc
mov
pushf
mov
add
mov
(bad)
(bad)
jmp
or
pushf
dec
inc
xor
jge
mov
cmp
std
cmp
outs
inc
(bad)
(bad)
(bad)
call
and
jno
adc
test
mov
sub
aam
push
push
lds
les
popa
jns
es
(bad)
(bad)
(bad)
jmp
sbb
sbb
call
pushf
or
xchg
fisttp
mov
push
adc
(bad)
push
retf
lea
pop
inc
movs
cmp
mov
push
xlat
aam
push
cmp
daa
push
sbb
dec
mov
push
mov
or
call
mov
jmp
add
shr
push
(bad)
call
add
stos
inc
add
cmc
jmp
dec
dec
clc
cli
(bad)
(bad)
jmp
cmp
cmps
in
inc
push
imul
push
pusha
push
mov
cli
shl
(bad)
call
retf
jne
xor
mov
push
in
xchg
gs
add
test
es
sbb
stos
dec
idiv
pop
xor
cld
jle
add
mov
or
imul
es
mov
adc
test
in
out
(bad)
sbb
jb
(bad)
(bad)
(bad)
push
push
mov
jo
test
or
adc
sbb
xchg
cmps
test
inc
pushf
mov
ins
inc
push
dec
movs
inc
lea
jle
(bad)
(bad)
out
mov
xchg
not
fsub
push
jno
dec
mov
push
cs
pop
call
(bad)
cli
inc
repnz
xor
(bad)
pushf
mov
pop
movs
dec
dec
icebp
(bad)
push
loopne
sub
add
mov
adc
in
in
sub
push
cmp
sub
push
mov
(bad)
(bad)
push
mov
xor
shl
xor
shl
mov
mov
ins
std
mov
jno
retf
sti
or
xchg
sbb
(bad)
(bad)
dec
pop
jecxz
xchg
mov
inc
lods
push
fmul
into
adc
inc
lea
(bad)
in
outs
dec
test
into
enter
jns
call
xchg
scas
dec
or
jne
pop
std
(bad)
jmp
stos
xor
test
(bad)
xchg
mov
outs
and
inc
out
clc
jmp
aas
sahf
iret
cmps
test
xchg
xor
dec
dec
mov
sub
dec
jo
sub
pop
je
mov
sub
imul
jb
inc
fndisi(8087
inc
stos
sbb
(bad)
jmp
xor
push
pop
xor
mov
lods
adc
cmp
pop
adc
dec
sbb
sub
lods
xlat
(bad)
shl
dec
xchg
(bad)
call
or
pop
fld
test
push
ins
(bad)
(bad)
call
inc
aaa
test
adc
stos
add
mov
(bad)
mov
cli
xchg
pop
inc
mov
std
mov
into
daa
fmul
mov
adc
clc
imul
cmp
pop
cmp
mov
sahf
aad
cmp
mov
outs
mov
xlat
ret
retf
clc
lods
inc
push
call
ret
or
test
dec
inc
call
(bad)
(bad)
dec
push
inc
mov
mov
cli
enter
lock
and
out
test
jmp
dec
jecxz
inc
jle
(bad)
(bad)
jge
addr16
es
cmp
fild
fdivp
dec
jg
xchg
sbb
jne
test
mov
repz
idiv
jg
dec
sub
call
lds
pop
sbb
(bad)
dec
push
jg
pop
retf
jp
daa
gs
mov
add
shl
(bad)
(bad)
inc
xchg
fcom
cmps
sahf
retf
push
xchg
push
add
jbe
sub
xchg
xchg
mov
xchg
sar
jns
(bad)
jp
in
xchg
fidivr
add
jb
in
cdq
popf
dec
cmp
sub
dec
movs
cmp
gs
mov
mov
(bad)
fmul
adc
(bad)
(bad)
(bad)
inc
jne
cmp
cdq
xchg
mov
in
mov
icebp
les
ins
sti
mov
dec
sub
jmp
neg
in
nop
dec
adc
rcr
and
fcomip
(bad)
call
daa
push
jo
loopne
push
sub
push
jmp
mov
jecxz
fld
dec
nop
fld
and
sub
sahf
cmp
aas
test
mov
adc
xchg
mov
push
mov
push
xchg
add
dec
jnp
aam
mov
push
xchg
xor
mov
dec
and
and
mov
jmp
imul
adc
push
scas
cmps
push
jp
mov
sub
ja
popf
mov
jo
mov
fadd
xor
mov
push
inc
push
leave
cmp
in
inc
dec
aas
mov
aaa
pop
imul
sub
pushf
or
pusha
cmp
sbb
inc
div
es
jp
or
ret
lea
cs
std
inc
inc
mov
dec
inc
pop
psrad
stos
(bad)
inc
adc
and
(bad)
xor
adc
outs
xchg
cmp
jmp
mov
pop
pop
push
or
call
movs
fisttp
out
sar
(bad)
js
adc
bound
(bad)
push
sub
scas
mov
mov
or
and
cmc
pop
and
sub
mov
adc
(bad)
(bad)
(bad)
call
ret
fcom
aaa
jmp
sub
push
mov
std
test
push
in
pushf
add
test
sbb
(bad)
(bad)
jmp
mov
popa
ss
add
cmp
imul
fstp
push
add
ret
mov
div
dec
xchg
int
mov
(bad)
jg
aad
push
xor
fcomp
mul
add
jae
cmp
adc
jg
push
add
and
mov
cmp
push
jno
mov
sahf
stos
inc
push
out
arpl
cli
(bad)
jmp
mov
lahf
jmp
or
push
into
imul
(bad)
(bad)
jmp
and
test
mov
xor
not
ss
pop
adc
(bad)
call
sbb
add
imul
(bad)
(bad)
jmp
mul
jnp
sub
int
pop
fadd
ins
in
dec
push
movs
ret
mov
mov
aam
shl
hlt
mov
or
fadd
jp
mov
cli
inc
int
mov
les
jmp
add
pop
sbb
(bad)
out
sar
or
(bad)
dec
cwde
xchg
sar
sbb
mov
push
adc
and
mov
arpl
je
cmp
xchg
inc
jg
add
mov
or
inc
in
cmps
pop
cwde
sub
rcl
(bad)
int
sub
push
ins
lods
(bad)
mov
xchg
int
out
cli
(bad)
mov
imul
cmps
sti
imul
das
pop
mov
(bad)
lock
jmp
jmp
fimul
cmp
inc
lea
outs
fwait
lea
(bad)
dec
cmps
xchg
lds
sahf
jge
aaa
xor
sub
mov
cmp
sahf
imul
xchg
dec
in
(bad)
aas
movs
int
in
ja
inc
sub
idiv
(bad)
(bad)
std
arpl
push
inc
mov
ja
inc
in
mov
cmp
sti
std
add
xchg
js
push
(bad)
inc
in
xchg
push
cmp
in
movs
lock
test
pop
cmp
(bad)
(bad)
cmp
adc
sbb
jb
push
ja
push
daa
pop
in
adc
cmp
cmps
(bad)
out
push
movs
repnz
add
fwait
jns
or
out
sub
mov
sahf
pop
push
xchg
mov
rcr
es
icebp
fcomi
push
je
(bad)
pop
push
cmp
(bad)
(bad)
(bad)
call
inc
cld
xor
mov
push
movs
mov
mov
pushf
jge
stos
or
lock
cld
cmc
(bad)
(bad)
(bad)
call
mov
shl
mov
push
inc
cwde
pop
lods
daa
and
int
push
and
es
clc
inc
cmps
aad
or
add
add
ds
pop
adc
in
movs
fisub
loope
call
xchg
push
sub
inc
std
sbb
sub
ins
cld
mov
push
fld
retf
dec
jae
aaa
mov
jle
(bad)
outs
or
dec
aas
push
lods
enter
jmp
(bad)
(bad)
mov
adc
xchg
jge
les
test
retf
in
popf
jg
mov
jp
xor
mov
gs
mov
popf
lock
jae
leave
mov
dec
inc
jne
mov
rcr
mov
test
add
(bad)
jg
inc
test
mov
push
push
dec
fisttp
xchg
add
pop
add
js
clc
ja
jecxz
aad
mov
mov
jne
gs
mov
jg
test
pop
das
(bad)
(bad)
(bad)
push
push
fmul
das
cmp
retf
shl
popf
(bad)
out
test
cmps
or
xor
test
call
inc
cli
inc
add
pop
add
and
das
adc
or
push
pop
fld
add
cmp
mov
mov
add
cmp
sbb
sbb
(bad)
(bad)
dec
push
iret
fs
bound
mov
repz
add
in
(bad)
call
std
sbb
or
cmps
loope
jle
test
cwde
aad
dec
adc
mov
div
stc
popf
js
pushf
xlat
fst
push
pop
add
mov
push
mov
scas
mov
hlt
jmp
inc
mov
and
jo
push
fwait
icebp
dec
movs
mov
or
pop
sbb
xchg
gs
ss
retf
xor
lock
(bad)
(bad)
call
push
dec
cmp
sbb
xor
xor
push
xor
in
add
adc
mov
fnstcw
xor
xchg
out
cld
fisttp
aas
xchg
inc
int3
sti
fld
mov
fsubr
icebp
in
aaa
pop
std
adc
stc
in
ds
(bad)
(bad)
out
sahf
dec
push
daa
int
jle
inc
push
and
aad
mov
push
push
(bad)
(bad)
(bad)
jmp
add
pop
fnsave
sbb
shl
adc
out
jecxz
jge
inc
cmp
(bad)
jmp
and
sar
in
call
lock
dec
ja
(bad)
(bad)
jmp
sbb
pop
inc
push
js
push
inc
cmc
push
mov
mov
rol
jne
iret
pop
mov
mov
pop
(bad)
(bad)
jg
inc
fidiv
call
adc
out
sahf
push
mov
push
adc
repnz
(bad)
(bad)
mov
loop
xchg
pop
icebp
xor
stos
inc
pop
pop
push
cmp
jno
and
adc
popa
loope
jp
inc
xchg
nop
daa
js
xchg
inc
(bad)
(bad)
jmp
lock
xor
pushf
jbe
xor
in
dec
mov
(bad)
call
dec
cli
lds
int
pop
jecxz
xchg
mov
mov
jmp
mov
ins
jne
lea
dec
inc
inc
leave
out
(bad)
(bad)
call
adc
test
xor
jmp
cli
xor
(bad)
jnp
fcomp
loopne
mov
add
call
(bad)
lock
lea
adc
pop
push
out
sti
rcl
call
lock
cmp
xchg
popf
fsubr
dec
push
test
ds
ret
(bad)
fs
fdiv
jb
xor
lods
idiv
add
and
pop
icebp
(bad)
jg
inc
xor
cmp
cli
cmp
jl
sbb
(bad)
(bad)
(bad)
push
ins
or
lods
in
xchg
push
add
jecxz
adc
inc
or
cmp
mov
daa
inc
pop
add
pop
lea
or
test
(bad)
call
fnsave
pushf
add
inc
cmp
adc
mov
mov
push
mov
clc
(bad)
sar
(bad)
(bad)
jmp
jo
mov
cs
or
jmp
outs
cmp
add
and
push
cmc
or
call
dec
xchg
inc
int3
xchg
mov
fs
sbb
(bad)
fisttp
lea
cdq
add
xchg
popa
loope
mov
adc
(bad)
(bad)
jg
dec
jae
(bad)
movs
sbb
jge
jge
fldenv
sar
mov
cmp
jge
inc
jg
ret
mov
mov
(bad)
xor
xor
dec
jae
cmps
xchg
popf
adc
sbb
push
(bad)
dec
jecxz
push
rol
mov
in
cli
xor
pop
or
rcr
cmp
push
inc
sub
inc
bound
or
mov
and
jo
outs
and
arpl
xchg
ds
aaa
push
pop
sbb
push
fsubr
aad
loope
xchg
mov
push
xor
ins
test
push
cld
adc
rcr
sbb
or
movs
mov
loop
jge
mov
jle
(bad)
(bad)
push
jns
xor
dec
mov
or
sbb
cdq
aam
sbb
push
push
ror
pop
sbb
bound
cmp
jnp
outs
jg
cmp
(bad)
(bad)
inc
adc
inc
push
adc
fsubr
mov
mov
adc
inc
dec
loopne
mov
not
sub
or
(bad)
mov
fisub
ja
xchg
jno
sub
or
mov
cdq
mov
xchg
loop
popa
cld
addr16
dec
xchg
add
or
es
(bad)
(bad)
mov
inc
adc
add
sti
test
inc
push
sti
cmp
(bad)
(bad)
jmp
jge
mov
popa
popf
fldenv
or
xchg
xchg
pop
jmp
or
add
xchg
push
sbb
(bad)
(bad)
call
(bad)
jg
into
daa
addr16
movs
or
xchg
push
ret
add
jns
push
inc
(bad)
dec
xchg
xchg
push
and
inc
jns
push
xchg
fistp
xor
es
mov
outs
pop
(bad)
mov
or
xor
(bad)
(bad)
(bad)
(bad)
std
sub
xchg
or
pop
dec
sbb
out
inc
movs
mov
sub
mov
hlt
cld
mov
sbb
inc
je
out
(bad)
sbb
mov
push
inc
clc
(bad)
cmp
mov
jmp
into
out
sub
sbb
xchg
sbb
xor
mov
aam
push
or
add
popa
sub
(bad)
(bad)
push
add
jns
mov
shl
cmps
in
loopne
add
pop
and
fcomi
mov
adc
test
mov
sbb
in
cmp
xchg
cli
dec
gs
outs
(bad)
(bad)
(bad)
jmp
jno
aas
ins
fidiv
dec
jmp
xchg
cmp
outs
dec
fdiv
stos
stc
jns
aas
cmps
jne
icebp
outs
cli
outs
dec
(bad)
jg
ins
daa
into
call
ins
pop
loopne
add
test
adc
(bad)
fidiv
and
xlat
mov
mov
jmp
pusha
cld
jmp
loopne
inc
dec
or
inc
gs
inc
dec
mov
daa
mov
sbb
pop
(bad)
jns
das
retf
adc
jns
int3
idiv
mov
push
gs
jnp
cmc
(bad)
(bad)
(bad)
push
jge
or
dec
cdq
cmp
jg
and
std
push
sub
push
pop
add
daa
(bad)
(bad)
(bad)
inc
jecxz
push
scas
pop
xchg
sub
es
gs
sbb
sub
push
pop
cmps
sub
fsubp
mov
mov
call
into
push
ins
ss
mov
xor
(bad)
stc
imul
cmp
std
inc
pop
lods
xor
fsubr
pop
dec
lock
jle
or
mov
dec
je
or
and
(bad)
jmp
or
test
ins
repz
popa
xchg
jle
ja
fs
and
push
mov
outs
add
pop
xor
lods
inc
jecxz
call
inc
jns
pop
js
cdq
push
shl
sbb
scas
sbb
push
scas
adc
cmp
(bad)
div
(bad)
(bad)
call
sbb
adc
xchg
push
cdq
pop
adc
fwait
sbb
ins
ds
pop
dec
arpl
sar
movs
mov
cdq
ins
loopne
push
sbb
pop
call
fwait
push
push
aad
mov
repz
bound
adc
pop
push
pop
and
inc
repnz
add
xor
jns
stos
mov
jne
add
jns
and
mov
fidiv
push
add
addr16
(bad)
jg
fsubr
mov
inc
fst
mov
leave
bound
sbb
repnz
jb
loope
test
cwde
sar
stos
test
inc
loop
(bad)
jg
add
imul
fnsave
sbb
xor
push
and
lds
retf
or
push
jo
jns
imul
ds
cmp
dec
cs
push
cs
and
push
(bad)
inc
xchg
in
mov
ins
pop
sbb
dec
sbb
mov
or
adc
push
ret
cdq
daa
mov
mov
jmp
das
clc
dec
dec
push
sbb
pop
out
jns
inc
arpl
xchg
fimul
cmps
mov
(bad)
call
inc
jle
jmp
mov
sbb
pop
inc
add
push
in
cld
aaa
sbb
in
mov
lods
popa
in
pop
ret
adc
std
pop
jae
stos
push
jl
test
mov
(bad)
(bad)
call
leave
mov
push
push
xor
sub
das
hlt
rcr
std
mov
dec
inc
cmc
call
or
loope
sbb
(bad)
call
mov
push
add
push
push
jno
stos
test
xchg
cmp
xor
dec
sub
(bad)
in
test
xchg
mov
xor
jne
inc
xor
(bad)
jmp
xor
adc
out
cwde
jae
or
sbb
imul
mov
loopne
cmc
dec
push
push
arpl
add
xor
cli
mov
mov
es
mov
repnz
rol
and
loope
(bad)
(bad)
dec
cmc
mov
pop
xchg
mov
sbb
test
sub
inc
scas
movs
(bad)
in
inc
mov
(bad)
(bad)
(bad)
inc
in
cmp
xchg
or
cdq
push
retf
push
sub
xchg
or
shr
(bad)
push
push
jmp
sub
adc
bnd
call
add
mov
hlt
lods
xchg
sub
cs
es
mov
or
ficomp
aas
xchg
dec
dec
in
ins
arpl
or
mov
mov
(bad)
fadd
xchg
mov
mov
inc
mov
(bad)
(bad)
(bad)
mov
mov
pop
jbe
xlat
test
jmp
sub
mov
dec
ds
(bad)
(bad)
push
mov
xor
mov
jns
push
push
loopne
shr
loope
inc
ja
test
(bad)
fisttp
push
(bad)
jae
dec
sbb
mov
xchg
icebp
inc
adc
ins
cld
xchg
mov
fdivr
xor
aam
inc
cmp
ds
gs
hlt
cmp
(bad)
sub
(bad)
call
mov
dec
mov
jae
adc
sbb
inc
xchg
sahf
and
addr16
add
std
out
(bad)
(bad)
inc
outs
ret
sti
jne
cmc
sbb
mov
cmp
jnp
call
sbb
cmp
call
cld
aas
adc
fdivrp
mov
add
pop
adc
(bad)
mov
je
fsubr
int3
pop
fcmove
inc
or
(bad)
(bad)
(bad)
jmp
inc
inc
dec
test
jle
xor
dec
cmp
jmp
sub
sbb
addr16
sahf
neg
(bad)
(bad)
(bad)
call
ins
mov
lods
call
jl
fwait
or
adc
arpl
add
dec
test
sub
jecxz
xor
icebp
sub
and
xor
clc
icebp
sub
imul
and
sar
int3
lds
in
sbb
test
adc
pusha
sbb
(bad)
(bad)
jg
sbb
add
test
push
fsubr
(bad)
(bad)
(bad)
(bad)
(bad)
call
ja
or
or
adc
xchg
aam
outs
push
enter
pop
lods
imul
add
aas
imul
cld
xchg
test
xchg
test
dec
sbb
jmp
pop
fiadd
sti
repnz
ds
cmp
xchg
jge
mov
push
cmp
inc
sub
push
loope
(bad)
(bad)
(bad)
inc
push
test
mov
sti
iret
add
in
xchg
cmp
movs
mov
sub
fwait
push
test
inc
jmp
pop
imul
mov
data16
loop
leave
hlt
sbb
jmp
cmps
mov
sbb
pop
and
test
push
jg
dec
(bad)
sti
jge
push
push
jne
xchg
in
pop
popa
sti
cwde
and
ins
loop
push
dec
mov
adc
mov
(bad)
mov
xor
jmp
idiv
(bad)
(bad)
call
movs
push
jmp
cmp
inc
arpl
gs
test
test
stc
xlat
adc
sbb
mov
test
mov
cli
outs
jl
call
inc
jmp
daa
mov
fcomp
or
retf
hlt
xchg
(bad)
(bad)
dec
retf
out
jae
aaa
and
cmp
or
add
sbb
std
push
jg
or
mov
test
fmulp
(bad)
inc
cld
cld
into
mov
jge
retf
or
dec
bound
hlt
mov
outs
stc
fwait
cmc
cmp
aas
jae
fs
mov
push
arpl
pop
ror
scas
jmp
or
je
fidivr
cmp
mov
add
fcmovbe
jno
mov
inc
jae
(bad)
stc
out
pop
cwde
lea
mov
mov
and
cdq
ror
dec
mov
ret
jae
sar
add
mov
xchg
cmc
inc
aad
or
cmp
call
lock
fadd
jg
and
std
mov
push
jne
out
push
sub
hlt
lds
xchg
mov
jae
lock
add
mov
xchg
push
push
lods
mov
(bad)
(bad)
fcmovnb
adc
pop
jl
cmp
lea
dec
jae
fdiv
test
dec
addr16
movs
ucomiss
(bad)
(bad)
inc
mov
jmp
adc
aad
in
cs
and
sub
inc
dec
cmps
add
fimul
push
mov
mov
stos
(bad)
jmp
adc
jg
add
add
xchg
cmp
es
(bad)
jmp
push
mov
push
cmc
pop
xor
icebp
jl
ds
aam
sub
lods
aas
jl
xlat
call
out
pop
adc
in
sbb
mov
dec
cli
mov
mov
xor
inc
in
gs
cmp
cdq
inc
pop
rol
mov
daa
(bad)
(bad)
(bad)
call
jno
into
gs
lods
adc
push
push
stos
push
inc
mov
and
cmp
mov
fcmovu
(bad)
jp
push
or
push
lock
scas
adc
push
into
pop
cmps
sub
call
cmp
dec
pop
ss
into
push
idiv
jge
retf
stc
jne
inc
jle
cmp
cmp
cmp
push
retf
cmp
(bad)
jns
nop
sub
adc
outs
pop
xchg
xlat
jns
call
adc
sub
inc
ret
mov
cwde
hlt
xchg
imul
push
imul
fist
cmp
adc
call
push
shl
xchg
push
push
jmp
pop
arpl
pusha
lock
(bad)
call
inc
pop
aam
pushf
sahf
xor
push
cmp
aas
and
mov
cmps
inc
clc
adc
cmc
or
cmps
fimul
pop
sbb
or
pop
push
fwait
in
push
cmp
cmps
lock
sti
and
jne
neg
(bad)
repz
jg
push
popf
xor
sub
or
push
jbe
pop
push
sub
repz
xor
scas
(bad)
(bad)
call
mul
and
sbb
inc
adc
fnsave
ss
fcomip
(bad)
dec
sub
dec
inc
mov
sbb
xlat
stos
movs
xor
and
(bad)
inc
mov
cmp
or
mov
fdivrp
jecxz
in
retf
(bad)
(bad)
cmp
ss
mov
aam
cmps
push
and
push
test
cmp
(bad)
(bad)
(bad)
call
pop
test
jne
lods
gs
pop
pop
mov
adc
pop
mov
sbb
out
and
into
aaa
int
push
loope
push
jae
or
mov
js
in
and
push
loop
ss
xchg
sub
jnp
ja
sub
out
pop
lods
int3
je
jge
dec
(bad)
(bad)
push
outs
dec
jbe
sbb
stos
jmp
lods
int
leave
test
sub
push
sbb
fidivr
mov
add
cld
push
test
nop
test
sub
(bad)
(bad)
jg
inc
dec
push
stc
xor
imul
retf
ss
ret
mov
push
xor
inc
test
or
out
rcl
adc
adc
std
(bad)
(bad)
jns
imul
ret
pop
fcomp
jae
xchg
or
inc
in
xor
(bad)
jg
ss
xchg
and
sbb
add
por
push
pop
adc
mov
mov
ja
mov
add
out
xchg
inc
loopne
(bad)
mov
lods
jae
pop
pushw
pop
hlt
(bad)
fwait
ins
jmp
mov
adc
mov
adc
mov
js
add
cli
(bad)
jg
xchg
scas
jae
sbb
fwait
jge
inc
int3
aas
enter
dec
push
xor
pushf
popa
int3
jl
ins
lods
cmp
inc
jb
int3
add
not
call
enter
and
sti
cmp
xchg
es
retf
inc
mov
movs
cwde
and
push
retf
(bad)
jmp
sbb
test
out
dec
mov
movs
jae
inc
into
sbb
jmp
dec
mov
cmc
gs
pop
push
jbe
sti
inc
es
pop
cmp
mov
or
bnd
movs
push
and
sub
mov
and
fsub
sbb
inc
aad
push
pop
(bad)
cmp
cli
mov
inc
sub
pop
sub
mov
push
inc
or
sbb
sub
div
cmp
hlt
dec
movs
inc
mov
xor
out
mov
ret
(bad)
(bad)
fbstp
and
add
je
mov
dec
pop
mov
daa
mov
(bad)
(bad)
(bad)
inc
icebp
push
pop
(bad)
repnz
cmp
fwait
mov
loop
sbb
xchg
or
(bad)
(bad)
call
xor
xor
(bad)
fimul
stos
inc
scas
mov
sub
mov
loop
aad
mov
ficom
das
mov
cld
jne
mov
xlat
data16
lock
(bad)
xor
rcl
fucomp
jae
xchg
cmp
inc
aas
jecxz
test
cmp
shl
mov
daa
dec
ds
gs
xor
or
mov
add
(bad)
(bad)
mov
and
xor
sbb
fiadd
sub
jns
cdq
imul
sbb
inc
sub
pusha
(bad)
cmp
movs
in
ins
add
mov
inc
es
shr
mov
xchg
(bad)
cmp
cmp
push
and
into
loop
in
add
(bad)
jmp
shl
adc
out
pop
enter
into
ret
popf
inc
cmc
and
aas
cdq
cli
(bad)
(bad)
sub
dec
aad
push
outs
daa
cmps
jmp
add
jg
pushf
(bad)
(bad)
(bad)
mov
mov
or
inc
add
dec
pop
fstp
xchg
cwde
es
sub
and
dec
inc
clc
mov
test
add
sbb
(bad)
(bad)
(bad)
(bad)
dec
and
stos
fidiv
adc
jo
je
or
call
pop
xchg
stc
scas
push
sbb
adc
ss
mov
(bad)
(bad)
(bad)
inc
push
add
cmps
push
or
sbb
jne
aaa
jg
adc
add
prefetch
outs
jae
aaa
push
shr
hlt
(bad)
jmp
int3
fisub
enter
sub
cmp
outs
clc
das
test
aaa
mov
xchg
push
pushf
push
adc
pop
sti
pop
lds
(bad)
(bad)
(bad)
jg
xor
mov
or
outs
inc
arpl
test
push
xor
adc
mov
add
cmp
add
test
pop
and
sub
cdq
dec
movntq
out
inc
aad
mov
xchg
push
cmp
(bad)
fild
add
sub
lea
pop
pop
jns
sub
ja
add
outs
push
jno
adc
ins
adc
cmp
idiv
push
mov
cmps
jns
add
test
pop
cmp
jns
jne
jecxz
cmc
xlat
dec
jne
fist
adc
mov
cli
ja
ins
jns
sbb
push
sahf
xor
ins
push
jmp
mov
adc
push
xchg
sub
mov
mov
hlt
pop
cmp
mov
jns
je
ja
outs
sbb
pop
cwde
push
jbe
retf
sbb
stc
sub
and
retf
mov
mov
xor
pop
test
scas
mov
data16
(bad)
(bad)
jmp
mov
sqrtps
pop
jge
shl
je
dec
mov
(bad)
call
std
mov
add
jmp
stos
ffree
and
sti
add
or
jmp
ja
mov
mov
mov
inc
(bad)
call
not
xor
loope
xchg
or
add
xor
(bad)
fbld
sbb
int3
mov
cdq
pop
daa
repz
pop
cld
loop
add
(bad)
(bad)
(bad)
mov
jmp
sbb
out
in
out
in
dec
loop
cmps
jne
inc
xchg
sbb
mov
or
dec
add
cmp
callw
mov
(bad)
(bad)
js
std
and
out
push
xchg
enter
cld
addr16
imul
add
(bad)
in
dec
nop
bound
das
pop
cmp
push
sbb
je
sti
loop
mov
push
stc
inc
pop
fcom
stos
add
add
dec
push
and
stos
(bad)
lgs
pop
in
repnz
xchg
dec
cmc
data16
inc
call
mov
push
dec
out
dec
add
sub
cmps
sub
(bad)
(bad)
push
xchg
push
std
adc
mov
pop
pop
push
jne
mov
push
inc
xchg
dec
cmp
loope
push
dec
jbe
add
push
(bad)
(bad)
(bad)
(bad)
jg
ret
push
js
or
mov
mov
sbb
test
ror
sar
push
jge
xor
and
lods
push
cmc
add
push
xchg
add
xchg
rol
xlat
(bad)
jg
dec
sbb
jle
stc
lods
pop
inc
and
mov
(bad)
cli
xchg
test
mov
fadd
push
movs
cwde
xchg
cld
cld
push
call
and
scas
push
popf
cs
test
xchg
dec
test
pop
pop
jl
sub
jne
call
std
mov
out
and
mov
js
aad
je
and
std
outs
(bad)
(bad)
inc
xor
mov
cmp
rcl
leave
hlt
jne
or
fidivr
mov
push
jmp
dec
and
xchg
jnp
into
cmp
sti
sbb
jmp
hlt
(bad)
jmp
cli
inc
xor
in
movs
add
cdq
fnsave
sub
mov
std
icebp
xchg
repz
in
nop
cwde
adc
js
fadd
mov
add
ficom
lods
stc
pusha
push
dec
push
js
mov
ret
inc
xor
xchg
xor
js
stos
and
lock
and
sub
add
push
jns
xor
ret
sti
popa
and
ja
sahf
lods
mov
mul
ret
lea
pop
mov
dec
jecxz
push
jecxz
arpl
lods
lea
push
and
into
sbb
xor
sub
mov
gs
inc
dec
gs
pop
or
xor
ins
(bad)
(bad)
(bad)
inc
jle
in
daa
jge
pushf
lea
rcr
xor
scas
push
int
ret
inc
es
clc
push
inc
ficom
retf
outs
leave
jmp
jmp
add
xchg
pop
aad
and
aad
imul
add
push
mov
cmp
inc
aad
jbe
outs
hlt
xor
jne
jle
push
and
xchg
adc
xor
lock
cmp
mov
cmp
in
inc
mov
(bad)
(bad)
(bad)
jmp
mov
cmp
xor
stos
mov
lock
rol
int3
jne
push
mov
(bad)
(bad)
call
pop
or
and
scas
(bad)
sub
bound
xlat
sub
adc
cdq
(bad)
(bad)
(bad)
call
cmp
adc
retf
mov
icebp
shl
mov
jmp
mov
xchg
call
xchg
adc
loope
push
scas
lahf
inc
cmp
inc
mov
std
push
imul
sub
mov
cmp
or
in
or
(bad)
mov
pop
inc
inc
cwde
out
comiss
aas
mov
(bad)
(bad)
push
out
add
div
in
or
mov
add
(bad)
jmp
fcomp
cmp
xor
mov
es
(bad)
push
cmp
xchg
std
dec
or
mov
repnz
mov
aaa
cmp
gs
xor
xchg
cmp
sub
mov
push
sbb
dec
movs
dec
mov
or
cmp
inc
aad
dec
lea
inc
mov
xor
xor
push
and
call
es
mov
(bad)
inc
pop
fist
mov
call
xchg
dec
enter
(bad)
call
jmp
dec
xor
pop
pushf
push
ds
pop
cmp
lods
movs
lods
jmp
ins
ret
pop
jge
sbb
fwait
(bad)
ja
cmp
cmp
mov
pop
sti
pop
mov
mov
add
xchg
mov
clc
pop
cld
ss
(bad)
retf
(bad)
xor
sbb
pop
(bad)
loope
(bad)
(bad)
jmp
adc
out
push
add
inc
add
setnp
xchg
ds
mov
mov
and
cmp
fwait
or
sbb
jbe
retf
(bad)
(bad)
(bad)
jmp
into
sub
sbb
adc
(bad)
sub
adc
jecxz
fcomp
mov
loop
(bad)
jnp
int
mov
cmps
(bad)
pop
push
sbb
jg
call
cld
jg
(bad)
jmp
nop
paddusw
jmp
mov
and
and
mov
mov
push
test
std
fimul
aaa
cmc
inc
popa
xchg
inc
lahf
in
and
adc
scas
shl
cmp
sbb
das
xor
movs
imul
sub
and
pop
ret
(bad)
(bad)
jmp
sub
test
sbb
pushf
imul
data16
out
mov
jb
inc
popa
jecxz
mov
push
(bad)
out
lods
mov
jecxz
push
(bad)
(bad)
(bad)
call
push
and
jecxz
cwde
int3
cmc
adc
in
adc
inc
pushf
popf
pop
mov
adc
jne
push
gs
(bad)
push
sub
in
sti
inc
dec
push
lea
jns
cmp
or
out
jecxz
push
aad
xor
or
out
push
sar
xchg
mov
js
add
in
jge
aaa
adc
(bad)
jge
add
inc
cmp
mov
jg
(bad)
push
add
test
shr
inc
mov
mov
cmp
mov
pop
pop
push
call
(bad)
daa
xor
xor
dec
xor
dec
add
jne
fimul
in
lods
jae
test
(bad)
mov
(bad)
popa
mov
movs
(bad)
(bad)
(bad)
jmp
lock
scas
adc
mov
cli
and
inc
adc
hlt
pushf
gs
call
sbb
or
dec
pop
jne
and
lds
icebp
inc
add
xor
dec
push
lods
sbb
fcomip
pop
ss
add
pop
mov
movs
cmp
out
leave
or
call
add
xlat
icebp
sbb
push
cmp
inc
dec
xor
jmp
inc
xor
jns
xchg
leave
outs
(bad)
fbld
adc
cdq
sub
(bad)
push
dec
cmc
or
jmp
cmp
sbb
xchg
push
das
out
pop
sub
xor
neg
jmp
sub
lds
dec
push
push
jne
or
or
rcl
call
sar
add
pushf
push
inc
jns
loopne
push
mov
(bad)
jmp
inc
mov
jae
in
push
sub
lar
cmps
mov
scas
pop
je
clc
mov
sbb
sub
fisub
sbb
and
push
fsubr
adc
sbb
dec
add
sub
push
and
pop
loopne
pop
xor
rcl
cwde
sub
jb
inc
shr
push
(bad)
push
mov
std
retf
vpcmpgtb
cli
pop
xchg
push
cmps
push
or
fist
jns
(bad)
(bad)
(bad)
call
pop
js
in
std
scas
popa
sti
std
(bad)
mov
lds
or
mov
pop
lock
loop
add
(bad)
(bad)
(bad)
call
int
push
pusha
sub
xchg
stc
and
rol
popf
sbb
fdivr
add
mov
(bad)
(bad)
(bad)
(bad)
fist
xor
imul
jp
push
and
into
xor
dec
mov
mov
scas
mov
out
xor
mov
cmp
adc
neg
cld
(bad)
(bad)
call
ja
or
ds
mov
ja
add
sti
push
ja
inc
adc
mov
in
dec
dec
clc
aas
(bad)
jg
add
sub
in
push
mov
mov
(bad)
(bad)
jmp
rol
div
ret
pop
mul
xchg
in
cld
stos
inc
(bad)
call
fsubr
inc
jne
sti
jns
ins
pushf
adc
jle
(bad)
inc
cmp
xor
pop
cmp
push
push
dec
push
or
std
das
sub
mov
push
shl
jae
(bad)
icebp
mov
std
ja
dec
sbb
dec
loop
push
dec
test
inc
loopne
mov
inc
xchg
outs
mov
push
fimul
pop
cdq
fwait
jb
mul
jge
mov
(bad)
(bad)
call
(bad)
addr16
(bad)
xor
jg
cvtps2pd
or
movs
jbe
push
daa
movs
(bad)
(bad)
(bad)
inc
in
(bad)
lock
sub
mov
xchg
rol
cmp
out
cld
les
jle
loopne
call
mov
or
push
mov
popf
popa
xor
xchg
outs
fiadd
sti
sub
push
add
fs
sbb
xor
xchg
retf
(bad)
fwait
and
sub
fdivr
dec
pop
clc
mov
or
cs
cmp
cmp
fcomip
cmc
push
cmp
push
mov
inc
adc
shl
and
out
call
cs
sbb
(bad)
call
or
dec
in
mov
sbb
push
or
jmp
es
inc
outs
jnp
sbb
(bad)
inc
jbe
inc
sbb
or
loop
mov
inc
jbe
cmp
(bad)
(bad)
(bad)
inc
jne
cmps
mov
inc
ror
shr
sbb
mov
out
sbb
and
(bad)
mov
pop
and
jge
dec
test
sbb
(bad)
cmp
mov
ss
(bad)
(bad)
jmp
and
aas
fdivr
popa
aad
or
pop
dec
cli
mov
add
(bad)
out
push
std
xchg
repnz
push
cmps
jns
int
sti
cdq
call
outs
clc
cs
stos
cmp
mov
push
xor
jl
(bad)
(bad)
inc
push
inc
mov
xor
mov
sub
bswap
push
fdivr
fcomp
test
sbb
sub
mov
icebp
sbb
shl
(bad)
(bad)
sti
cwde
mov
(bad)
fnstcw
cld
add
imul
jecxz
fs
xadd
(bad)
dec
push
adc
adc
jo
popa
inc
sti
pusha
push
jbe
imul
add
pop
and
test
push
add
xor
in
mov
adc
(bad)
(bad)
jg
clc
push
jae
mov
jnp
xchg
dec
or
addr16
or
sbb
(bad)
shl
mov
clc
inc
cs
mov
inc
sub
aam
push
(bad)
(bad)
(bad)
mov
xchg
retf
jns
cmp
mov
jge
mul
mov
inc
std
xor
das
outs
cmc
inc
fwait
icebp
(bad)
(bad)
jns
adc
fsubrp
sbb
cmp
xor
sub
mov
cdq
jae
cmps
into
(bad)
(bad)
(bad)
inc
test
fdivp
cmp
xchg
inc
and
sbb
hlt
data16
mov
inc
and
es
call
jnp
or
jp
dec
(bad)
(bad)
dec
inc
call
push
test
aas
ja
daa
inc
xchg
daa
lahf
scas
mov
cld
add
jmp
add
and
mul
jecxz
pop
loop
fdivr
lock
(bad)
(bad)
jmp
dec
xor
ins
xor
hlt
aam
mov
ss
nop
add
aad
dec
jecxz
xor
arpl
sbb
push
test
and
test
mov
mov
xor
aas
arpl
pop
arpl
cdq
shl
or
out
inc
and
fnstcw
push
inc
add
lock
inc
add
cmp
lods
xor
sbb
xchg
scas
push
mov
(bad)
(bad)
mov
jns
or
sub
popf
add
push
sbb
dec
and
outs
mov
(bad)
(bad)
(bad)
call
xor
jmp
xor
lds
in
out
gs
inc
mov
call
mov
xchg
(bad)
dec
(bad)
ror
pop
mov
xchg
sbb
es
or
call
jmp
test
retf
movs
push
add
movs
rol
(bad)
inc
push
xchg
pop
stos
rcr
dec
mov
mov
(bad)
(bad)
mov
jnp
mov
sbb
pop
mov
inc
pop
data16
xor
cmc
loopne
cmp
(bad)
(bad)
push
test
(bad)
jae
or
mov
popa
jne
xchg
cmp
inc
(bad)
(bad)
(bad)
push
scas
mov
jae
ret
js
in
or
push
jle
inc
outs
gs
push
xor
jnp
push
push
(bad)
call
mov
call
fsubr
mov
jge
adc
cdq
jo
xchg
(bad)
cli
(bad)
(bad)
call
push
inc
arpl
cmp
sti
test
cmp
aad
not
(bad)
lock
sar
rcl
fistp
cld
inc
xchg
aad
(bad)
(bad)
mov
xchg
inc
or
mov
cmp
mov
jnp
fs
sbb
arpl
(bad)
(bad)
fild
xor
push
test
mov
js
add
mov
(bad)
(bad)
jmp
mov
dec
stos
push
ins
ficom
push
sbb
inc
cmp
shl
mov
jl
mov
in
(bad)
(bad)
(bad)
call
cmp
dec
arpl
and
jecxz
inc
dec
(bad)
add
nop
in
es
inc
sbb
cmp
push
pusha
adc
sbb
add
and
ret
pop
xchg
lods
push
sbb
ins
push
mov
and
in
push
mov
(bad)
(bad)
mov
hlt
cmp
fwait
cmp
(bad)
push
and
pop
cld
out
or
jae
aam
jecxz
xchg
dec
fucomp
cmp
push
nop
int3
or
or
adc
imul
(bad)
(bad)
(bad)
push
repz
adc
mov
sub
leave
xor
push
aam
imul
jp
dec
mov
mov
(bad)
(bad)
(bad)
inc
jae
in
cwde
loopne
imul
push
inc
neg
sub
stos
jle
jmp
stos
jbe
lea
in
mov
sti
enter
or
inc
jge
xor
add
dec
aaa
and
(bad)
inc
sti
jae
cmc
cmp
sbb
pop
xchg
cmp
push
je
(bad)
call
mov
adc
call
xor
adc
dec
adc
dec
add
jmp
mov
int
fs
mov
push
lahf
mov
inc
add
mov
es
repz
(bad)
inc
mul
ins
cmp
scas
jl
jb
out
cmps
xchg
jns
pushf
dec
xchg
stos
(bad)
(bad)
jmp
adc
cmps
mov
sub
jb
and
out
mov
scas
(bad)
sti
(bad)
inc
stos
inc
xor
cs
jmp
xchg
pop
inc
push
or
cld
jg
sti
dec
aas
xchg
out
jp
jge
clc
push
enter
test
jmp
imul
mov
push
pushf
dec
sti
cdq
adc
dec
mov
push
fadd
cmp
aas
adc
mov
loop
pop
jbe
aas
push
fdiv
(bad)
mov
dec
adc
or
fwait
cwde
mov
addr16
(bad)
(bad)
(bad)
jmp
dec
adc
frstor
dec
das
into
jle
pushf
add
sub
clc
inc
(bad)
stos
dec
cld
cmc
mov
push
add
sar
mov
add
test
div
mov
and
mov
adc
xor
stc
test
mov
fwait
mov
jae
(bad)
(bad)
(bad)
jbe
call
dec
adc
cwde
push
jno
or
rcl
add
sub
hlt
add
xchg
jmp
add
cmps
int
into
cmps
push
pusha
(bad)
xchg
jecxz
xchg
imul
sar
lods
push
dec
(bad)
(bad)
xchg
xchg
jp
in
(bad)
mov
clc
cmp
popa
dec
test
scas
jp
jl
(bad)
(bad)
(bad)
sti
and
or
(bad)
push
call
mov
dec
pop
push
adc
imul
push
jg
int
sbb
jecxz
push
(bad)
push
fild
push
dec
popf
add
pop
ins
call
sbb
mov
(bad)
(bad)
call
and
push
sub
jnp
cmp
mov
sbb
inc
stos
movs
es
(bad)
dec
push
dec
cwde
sbb
mov
fcom
rcl
jbe
test
xchg
nop
and
loopne
call
aas
sub
hlt
leave
jnp
jecxz
aaa
lds
inc
xor
in
clc
inc
ins
add
rol
or
cld
lahf
movs
lock
mov
ss
cld
add
inc
int3
xor
cmp
and
cld
call
out
in
mov
xor
test
sbb
xchg
jmp
(bad)
mov
xchg
xor
jl
xor
dec
aaa
fisubr
(bad)
(bad)
(bad)
push
xchg
and
sbb
push
mov
dec
into
sbb
out
xor
adc
(bad)
inc
cmp
inc
aaa
inc
add
sbb
js
pushf
xchg
add
lods
(bad)
jmp
and
cmp
jecxz
cmp
add
adc
(bad)
test
(bad)
jbe
pop
sti
xchg
push
loop
js
inc
and
aad
xchg
sbb
pusha
repnz
(bad)
call
cld
jns
lds
xor
ret
push
arpl
(bad)
cs
mov
ficomp
mov
pop
icebp
pop
adc
inc
push
stos
iret
das
adc
cli
or
emms
or
pop
pop
daa
sbb
jbe
clc
sbb
inc
pop
mov
inc
test
fcom
movs
es
(bad)
call
popa
mov
add
test
popa
mov
je
sbb
lods
or
add
inc
push
xor
mov
fld
inc
nop
jns
lds
jne
mov
out
das
div
js
scas
cli
(bad)
(bad)
fidiv
(bad)
lea
cmp
jo
fidivr
dec
test
mov
sar
clc
mov
jmp
(bad)
ficom
adc
or
test
repz
mov
cmp
pop
cmp
ja
dec
mov
push
(bad)
mov
out
xor
pushf
sbb
in
cmp
scas
dec
jnp
xchg
in
mov
lea
call
movs
sar
jmp
in
push
jne
outs
and
data16
xor
icebp
js
xchg
jno
jne
mov
push
rcl
xor
test
jp
xor
call
test
xor
add
es
jge
adc
add
and
jns
sbb
imul
adc
loope
xchg
in
nop
inc
mov
addr16
xor
(bad)
(bad)
jmp
pop
add
rcl
imul
jbe
jo
jmp
cwde
aaa
aad
in
(bad)
(bad)
(bad)
call
push
icebp
hlt
dec
and
pop
into
lods
in
stos
xor
jmp
adc
push
outs
xchg
jp
adc
aad
pop
imul
sbb
push
(bad)
(bad)
(bad)
(bad)
inc
adc
xchg
cmp
push
loopne
xor
mov
xchg
nop
and
push
mov
jle
(bad)
(bad)
call
dec
ror
call
mov
adc
(bad)
and
xchg
push
sbb
jmp
(bad)
mov
inc
jnp
call
and
jnp
push
and
nop
ror
lods
lea
bound
push
mov
cwde
hlt
ss
sbb
dec
mov
out
push
cdq
mov
jmp
or
test
cs
outs
aaa
(bad)
leave
push
fst
adc
fiadd
or
jge
std
dec
out
push
jmp
pusha
sbb
lods
jge
jg
movs
add
push
jmp
test
std
lds
jmp
mov
adc
lods
rol
and
xor
mov
aas
into
fs
and
dec
(bad)
jmp
test
setne
inc
and
in
ss
fnstsw
fucomi
mov
retf
push
add
test
(bad)
jnp
test
cmp
cmps
sbb
enter
(bad)
(bad)
(bad)
call
mov
jg
cmp
outs
lahf
repnz
lahf
lahf
or
pop
mov
xchg
and
pop
and
aad
call
mov
adc
jle
popa
push
(bad)
cmc
sub
sbb
and
ds
mov
pop
mov
cdq
cmp
call
sbb
adc
push
xor
mov
mov
push
jns
sbb
addr16
test
jmp
mov
aas
sub
mov
sub
jmp
dec
(bad)
mov
sbb
aas
test
cmp
inc
add
sbb
fmul
inc
outs
pop
ds
loope
sahf
xchg
(bad)
std
push
sar
(bad)
dec
push
pushf
cmp
jbe
mov
sbb
cdq
out
(bad)
jmp
shr
hlt
loop
sub
dec
dec
out
stos
sub
cs
mov
(bad)
jg
les
or
ins
adc
or
aad
sti
inc
jns
jnp
push
and
sbb
test
push
adc
add
pop
int3
(bad)
(bad)
fcomip
cmp
cmps
jo
mov
outs
fadd
inc
inc
push
ds
xchg
pop
mov
cmp
and
outs
push
movs
fimul
push
mov
mov
ds
in
out
js
jg
mov
xchg
push
mov
aad
out
jmp
mov
fsubr
rcr
pop
popa
add
inc
or
jg
sbb
adc
push
test
jmp
mov
ins
mov
(bad)
adc
inc
in
jg
push
mov
rcl
shl
scas
repz
aam
arpl
jns
mov
cmp
stos
out
nop
mov
jl
mov
xor
and
and
pop
loopne
sub
test
mov
sbb
test
mov
xor
adc
add
cmp
cmp
cmp
dec
push
cmps
mov
lds
push
xchg
into
or
movs
pop
pop
xor
push
dec
imul
xchg
or
jb
sub
cmp
xor
add
ja
mov
test
inc
je
add
ds
cs
pop
mul
dec
inc
call
mov
cmc
jg
xor
and
push
push
loopne
lds
jne
into
out
push
push
xchg
in
cmps
imul
sbb
xor
loopne
push
div
aas
or
sub
sub
add
inc
dec
test
jnp
aam
popf
xchg
(bad)
(bad)
jmp
jo
movs
xor
mov
jmp
lods
sub
in
mov
je
mov
mov
(bad)
retf
cmp
dec
adc
into
mov
arpl
cmp
add
sbb
push
adc
(bad)
(bad)
call
mov
movs
js
push
dec
rol
inc
gs
and
movs
jo
int
inc
clc
dec
(bad)
adc
sbb
mov
(bad)
(bad)
call
pop
push
dec
mov
jns
xor
retf
call
stc
and
mov
xor
ja
add
rcr
je
std
mov
ja
dec
dec
mov
mov
fnsave
stos
jae
outs
mov
sub
adc
cmp
mov
add
add
cld
fsub
xchg
lock
loop
test
ja
or
mov
pop
cmp
outs
cmp
jle
pusha
dec
pop
pop
mov
aam
sub
jecxz
mov
mov
mov
push
and
push
ror
cmps
cmp
movs
(bad)
dec
test
and
mov
and
(bad)
dec
lods
push
cs
xchg
and
mov
jg
jo
push
stos
lods
add
inc
jmp
(bad)
(bad)
mov
sti
pop
and
sbb
pop
inc
jmp
push
add
jmp
pop
movs
(bad)
(bad)
push
lea
pop
fmul
int
mov
outs
mov
cmp
cmp
pop
mov
jg
pop
lds
jg
push
jge
repnz
inc
fsub
mov
clc
(bad)
jmp
mov
test
loope
(bad)
call
push
sub
mov
mov
fwait
adc
(bad)
(bad)
(bad)
(bad)
or
fcmovb
jae
repz
in
sbb
sub
jnp
out
xchg
xor
mov
push
jae
or
icebp
add
dec
sti
pop
push
jne
dec
xlat
sub
sub
sbb
loope
(bad)
(bad)
dec
test
std
sub
test
ret
sub
inc
js
sbb
jns
add
mov
cmp
jmp
std
jae
dec
(bad)
dec
sar
sub
popa
add
or
xor
jle
(bad)
and
(bad)
(bad)
std
and
jle
cmp
jb
(bad)
push
adc
int
sbb
es
fcomip
(bad)
(bad)
(bad)
out
pop
popa
mov
dec
pop
cwde
fs
fisttp
jp
cmp
jmp
cmps
ret
ds
shl
jae
push
sbb
cs
test
cmp
(bad)
(bad)
call
rol
push
xchg
fidiv
(bad)
mov
push
mov
ins
pop
popf
sti
adc
sbb
(bad)
(bad)
push
je
pop
add
sti
sbb
xchg
mov
or
ret
sti
mov
push
inc
std
pop
(bad)
(bad)
(bad)
jmp
int
sti
repz
sbb
je
adc
(bad)
ins
mov
hlt
shl
call
xor
or
mov
out
and
mov
int3
mov
js
jae
xor
push
fwait
add
int3
sbb
sub
cmp
ficomp
mov
ss
imul
je
or
xchg
inc
jmp
mov
(bad)
sti
push
gs
lea
push
cmp
adc
inc
mov
(bad)
(bad)
(bad)
dec
stc
repnz
cmps
add
popa
inc
retf
outs
test
jne
jecxz
pop
mov
rol
sar
(bad)
jmp
dec
or
aad
and
popf
cmp
add
(bad)
leave
mov
and
loop
sti
hlt
out
addr16
stc
sbb
cs
pop
div
(bad)
(bad)
mov
add
and
test
push
mov
and
push
test
test
out
nop
fsubr
adc
add
add
fsub
inc
pop
(bad)
xchg
stc
pushf
mov
outs
into
(bad)
(bad)
(bad)
(bad)
aas
enter
cmc
add
nop
mov
xchg
rol
(bad)
adc
cmp
or
push
inc
add
pop
retf
lahf
xchg
lea
pop
push
fwait
or
push
inc
mov
in
lahf
in
call
(bad)
(bad)
(bad)
push
neg
mov
adc
dec
jno
mov
iret
ins
idiv
out
inc
idiv
jg
clc
(bad)
inc
add
lods
aas
sub
add
rcr
push
pop
std
mov
ror
pop
shl
push
(bad)
add
pop
xor
jg
xor
(bad)
(bad)
(bad)
(bad)
out
lea
ret
gs
mov
inc
push
pop
jg
or
xchg
mov
cmp
rep
(bad)
out
cli
inc
pop
lods
leave
hlt
pop
mov
add
sahf
adc
iret
push
jmp
adc
inc
xchg
push
or
in
dec
push
shl
enter
ja
call
call
adc
xlat
aas
cld
fdiv
dec
xor
cld
(bad)
fist
cmp
pop
movs
lock
push
pop
pop
and
fwait
jbe
push
out
xchg
pop
inc
pop
and
mov
jae
aaa
out
jnp
push
jmp
scas
sbb
or
sbb
xchg
ins
push
push
(bad)
hlt
mov
or
mov
(bad)
sub
xchg
das
idiv
aad
addr16
cmc
loop
ficom
sub
mov
dec
ss
enter
jne
out
test
inc
scas
and
(bad)
(bad)
jmp
jle
or
sub
pushf
repnz
mov
mov
mov
dec
push
enter
les
(bad)
(bad)
call
icebp
pop
stc
icebp
inc
test
sub
or
add
jns
test
jne
(bad)
jmp
ss
xchg
ror
ins
popa
and
call
xchg
das
lahf
outs
retf
jmp
push
add
jne
shl
push
pop
add
adc
(bad)
out
clc
retf
dec
addr16
mov
mov
sub
xor
mov
jmp
nop
adc
movs
call
dec
repnz
(bad)
(bad)
push
jge
cmp
sbb
aam
test
movs
daa
add
inc
js
data16
mov
int
loope
stos
add
mov
mov
cmc
inc
jmp
jp
mov
and
or
(bad)
rcr
jp
and
fbstp
cmp
jbe
mov
mov
pop
loopne
stos
in
les
xchg
mov
xchg
mov
mov
push
xchg
xchg
adc
xchg
call
push
and
or
push
push
jge
add
cmc
cmp
cli
(bad)
(bad)
push
outs
add
daa
sbb
jmp
sbb
icebp
mov
mov
mov
call
(bad)
or
adc
mov
data16
jg
pop
call
ins
push
ins
or
add
pushf
dec
jns
(bad)
(bad)
(bad)
fild
outs
push
clc
push
std
push
jmp
jp
xlat
adc
mov
dec
lea
shr
mov
sub
in
je
pop
lods
lods
push
lods
xor
xor
(bad)
(bad)
(bad)
(bad)
jmp
xchg
retf
xchg
pop
dec
and
adc
(bad)
and
sbb
cmp
cmps
(bad)
test
add
inc
ds
sbb
push
call
jno
add
(bad)
out
test
pop
push
push
sbb
jnp
ror
(bad)
(bad)
call
enter
inc
pcmpeqw
lock
shr
jns
cmp
pop
scas
push
call
sbb
mov
push
sbb
add
sbb
push
(bad)
and
test
gs
push
mov
(bad)
(bad)
push
inc
fisttp
lahf
not
pop
xchg
(bad)
les
cmc
outs
jp
push
fist
fs
(bad)
(bad)
(bad)
cmp
sub
lea
in
pop
(bad)
fcom
xchg
cmps
ror
xor
(bad)
call
je
sbb
xor
adc
jbe
js
lods
test
add
je
fwait
mov
(bad)
(bad)
inc
adc
adc
out
sbb
xchg
sbb
mov
cmps
mov
mov
mov
jmp
arpl
pop
push
or
ds
xor
dec
mov
rcl
mov
pushf
jo
dec
mov
xchg
lds
and
and
and
sub
inc
sbb
dec
aas
jbe
(bad)
(bad)
dec
adc
mov
and
xor
pop
inc
out
adc
jns
test
adc
and
into
(bad)
loope
test
hlt
loop
and
call
jb
cdq
mov
mov
fcomp
call
(bad)
(bad)
mov
rol
or
inc
clc
in
and
jne
rcl
jo
push
jle
mov
sub
jge
pushf
nop
nop
cmp
(bad)
jmp
repnz
dec
test
ret
dec
and
in
call
inc
xor
pushf
rcl
int
sbb
xor
popf
and
fst
dec
int3
xor
(bad)
(bad)
(bad)
mov
dec
mov
inc
addr16
xchg
mov
jecxz
xor
sbb
pushf
test
cdq
mov
xlat
test
popf
jmp
dec
js
cmps
loopne
mov
inc
xchg
sbb
stos
std
cs
mov
jg
(bad)
call
cmp
and
and
dec
ret
es
ret
and
push
sbb
push
movs
(bad)
(bad)
(bad)
mov
sbb
cmc
pushf
xlat
in
and
add
mov
outs
add
xor
sti
push
pop
and
inc
jecxz
pop
push
rcl
inc
xchg
cli
(bad)
(bad)
jmp
imul
sbb
push
(bad)
in
push
adc
add
dec
mov
sbb
ins
mov
sbb
push
or
add
cmp
(bad)
std
fmul
(bad)
(bad)
push
lds
jne
dec
mov
xor
xchg
lea
mov
add
mov
push
ret
push
jge
adc
test
xchg
add
inc
jbe
push
sbb
int3
dec
icebp
cmovnp
sbb
shl
cmps
mov
(bad)
(bad)
call
loope
or
and
cmp
push
sbb
jg
adc
inc
loopne
mov
inc
cmps
lods
bound
(bad)
dec
jbe
outs
out
fimul
xchg
ins
fimul
leave
pushf
shl
ss
push
(bad)
push
push
fadd
jle
popf
fsub
jnp
cmps
pop
(bad)
add
rol
call
lds
popa
cli
jg
jmp
mov
or
adc
aad
pop
pop
rcl
cmp
push
push
push
(bad)
(bad)
jmp
hlt
cmp
aaa
arpl
xchg
sbb
push
sahf
ds
add
movs
jmp
scas
mov
pop
xchg
mov
dec
loop
mov
mov
jge
xchg
mov
adc
(bad)
(bad)
push
add
mov
jge
test
dec
inc
pop
cmp
loop
jmp
es
sub
adc
(bad)
dec
das
pop
repz
xor
(bad)
inc
mov
jg
and
repnz
fwait
shl
or
mov
popa
jmp
mov
dec
push
or
das
inc
cwde
inc
xchg
push
stos
psrlw
push
adc
(bad)
(bad)
inc
pop
jno
xor
and
fadd
push
sbb
inc
cmp
mov
xor
push
js
or
or
(bad)
(bad)
inc
sub
add
stos
call
mov
or
dec
adc
(bad)
(bad)
call
cld
dec
cli
mov
lods
adc
adc
js
mul
push
mov
(bad)
outs
cli
(bad)
std
lods
in
mov
jl
push
stc
cld
in
pop
xor
adc
dec
aaa
dec
(bad)
mov
inc
xchg
stos
je
jmp
imul
mov
cmp
add
sbb
xor
mov
outs
pop
mov
mov
(bad)
retf
pushf
mov
loope
push
xor
in
mov
sar
aam
push
add
fimul
lods
push
popf
popa
sbb
mov
pushf
inc
(bad)
(bad)
(bad)
inc
cmc
lea
xor
mov
push
pop
scas
in
mov
ret
test
dec
cmp
outs
aas
clc
cmp
mov
push
ror
push
fdivr
test
lds
in
or
std
arpl
bound
sbb
movs
(bad)
(bad)
call
mov
mov
and
push
call
sbb
(bad)
(bad)
call
out
retf
pop
std
lds
rol
jecxz
xchg
cmc
in
inc
jmp
mov
test
(bad)
add
movs
push
pop
xor
dec
aad
mov
mov
cmps
inc
jns
mov
cli
(bad)
(bad)
fnsave
neg
mov
aaa
or
shr
sub
mov
push
call
cmp
adc
xor
jmp
mov
and
int3
xchg
ds
aad
leave
push
pop
test
xor
ret
and
(bad)
inc
inc
inc
dec
dec
xchg
in
repnz
add
adc
ret
cwde
loope
mov
inc
das
and
(bad)
(bad)
(bad)
jl
(bad)
sub
movs
or
cmp
mov
cs
or
push
add
int
(bad)
call
push
inc
push
or
jg
ds
cmc
int3
add
ja
(bad)
fisttp
pop
pop
mov
jno
jno
xchg
aam
jmp
lock
mov
jne
in
jb
(bad)
pop
add
cmps
add
pop
push
es
sahf
loopne
(bad)
(bad)
cmp
shl
xchg
xchg
das
sbb
jecxz
adc
jae
lods
push
pop
cld
cmps
jno
(bad)
(bad)
call
int3
pop
fsub
fimul
lods
mov
and
fcomp
cmp
movs
fidivr
add
(bad)
mov
shl
call
retf
int
inc
out
(bad)
(bad)
(bad)
inc
test
adc
icebp
popa
dec
daa
xchg
mov
cmp
xlat
pop
cmp
mov
mov
out
(bad)
(bad)
dec
test
in
cmp
xchg
dec
out
test
mov
arpl
(bad)
mov
sbb
mov
scas
mov
adc
(bad)
(bad)
(bad)
cmp
imul
jecxz
dec
push
cmp
xor
cmc
imul
push
(bad)
(bad)
(bad)
call
cmp
mov
ss
outs
cmc
mov
jbe
pop
fidiv
pop
sbb
lea
cmp
(bad)
(bad)
push
mov
not
pop
add
mov
popa
call
loopne
test
ins
jb
mov
retf
movs
inc
and
cli
(bad)
push
adc
cmp
ret
in
adc
and
push
mov
xor
shr
in
xchg
mov
inc
and
adc
rol
(bad)
jmp
jns
cvtps2pi
out
stos
sar
data16
(bad)
(bad)
call
cld
mov
mov
dec
push
mov
mov
mov
pmaxub
cmp
and
(bad)
jg
push
movlps
xchg
mov
fimul
bndstx
ss
and
(bad)
(bad)
push
stos
outs
jecxz
add
or
adc
loope
mov
adc
movs
in
jmp
(bad)
mov
ficomp
in
into
cs
push
cmp
js
xlat
cs
mov
mov
(bad)
(bad)
push
call
push
cmc
popa
mov
ins
aaa
bswap
mov
xor
push
push
jmp
shl
call
xchg
adc
(bad)
xchg
cmc
loop
or
sbb
push
fdivrp
daa
ins
mov
jnp
out
fwait
jp
(bad)
stos
ror
xchg
dec
dec
push
mov
jns
mov
test
jle
sbb
leave
hlt
dec
push
mov
adc
cmp
and
mov
pop
mov
nop
inc
add
cmps
shl
(bad)
mov
inc
dec
stc
sub
cmp
test
jg
and
sti
push
not
or
ins
cmc
jg
mov
inc
inc
push
les
sti
pop
add
ss
xchg
xor
push
push
(bad)
out
add
mov
mov
mov
mov
xor
arpl
test
jle
(bad)
(bad)
fisubr
or
call
std
and
push
cmp
add
or
mov
xor
jp
adc
aaa
mov
jo
add
mov
sahf
jnp
ret
inc
or
(bad)
inc
or
jmp
sbb
mov
xlat
(bad)
and
sbb
ja
cli
adc
sbb
fist
mov
(bad)
(bad)
(bad)
push
call
movs
jbe
loop
(bad)
mov
and
lea
mov
jb
jl
push
(bad)
(bad)
call
push
push
fsubr
mov
mov
test
sbb
mov
dec
add
inc
add
idiv
dec
ret
(bad)
(bad)
jmp
(bad)
xlat
into
mov
dec
lea
loope
mul
or
jp
jo
sbb
loop
mov
(bad)
(bad)
(bad)
inc
pop
ins
ins
jbe
dec
ds
pop
push
adc
jge
cmps
fldenv
pop
neg
add
cld
rol
jne
sbb
test
push
adc
cdq
outs
ins
into
add
xor
ficomp
stos
div
dec
add
(bad)
sbb
jns
adc
cs
(bad)
(bad)
(bad)
push
jb
inc
icebp
popf
js
aaa
cmps
inc
movs
ins
jg
je
mov
sub
jmp
fld
outs
stos
call
mov
push
adc
push
mov
add
jmp
lahf
push
int
add
(bad)
(bad)
push
enter
push
push
in
fcomp
into
call
popa
dec
shl
push
inc
xor
mov
push
push
xor
inc
test
inc
ins
fld
scas
xor
retf
es
ror
push
inc
mov
(bad)
(bad)
jmp
jg
dec
sub
xchg
fwait
inc
pushf
xor
adc
add
ja
mov
into
(bad)
(bad)
(bad)
call
mov
popf
cmc
jne
push
inc
mov
pop
mov
or
or
hlt
int3
jg
(bad)
dec
std
xchg
popf
lods
or
icebp
add
sub
inc
clc
mov
(bad)
push
lahf
xor
ins
add
xor
mov
xor
push
cli
(bad)
push
and
pop
xchg
lods
cmp
jp
or
(bad)
jmp
call
push
out
ror
cmp
or
add
xor
or
cmp
test
cdq
jno
std
pop
dec
mov
addr16
jne
hlt
jge
(bad)
jmp
scas
cmc
cmp
sbb
das
and
pop
pop
pop
push
call
icebp
ds
idiv
pop
loop
vmaxsd
mov
cmp
stc
cmp
adc
push
das
popa
pop
mov
mov
(bad)
aad
xchg
or
sub
cmp
in
sbb
int
push
mov
adc
(bad)
(bad)
inc
dec
mov
cmps
adc
pop
test
into
add
jmp
pop
and
pop
(bad)
(bad)
call
popf
aaa
pop
daa
inc
in
cmp
pop
and
mov
(bad)
(bad)
(bad)
inc
cwde
popa
jmp
xchg
jbe
mov
ret
fsub
add
cwde
(bad)
(bad)
neg
fldln2
in
(bad)
(bad)
(bad)
(bad)
fild
sub
dec
jecxz
cmp
add
sub
(bad)
push
push
sub
cwde
fldcw
sub
dec
add
adc
jp
fcomip
push
pop
repnz
shl
add
add
pop
inc
or
add
or
je
(bad)
(bad)
call
ret
loopne
je
fiadd
sub
imul
fs
ss
(bad)
(bad)
mov
in
hlt
xor
imul
sub
jecxz
and
enter
jp
push
push
and
jge
lods
loope
fwait
xor
jmp
mov
or
or
test
jge
jmp
(bad)
(bad)
inc
push
sub
xchg
and
pushf
jge
(bad)
sbb
imul
mov
and
push
in
adc
pop
icebp
(bad)
jmp
jmp
test
inc
mov
ins
ficomp
push
stc
pop
fwait
ret
push
mov
inc
mov
cdq
pop
xor
sub
(bad)
push
(bad)
pop
mov
leave
xor
test
sbb
xchg
push
inc
sub
mov
loope
(bad)
mov
xor
xchg
stc
xchg
loop
mov
fcomip
(bad)
call
add
xchg
cmc
sahf
pop
pushf
mov
or
fadd
push
xor
aad
dec
jge
dec
test
pop
popf
test
mov
inc
ret
inc
dec
mov
adc
test
push
pop
push
mov
js
xchg
cmp
stos
idiv
das
(bad)
add
adc
cwde
add
fwait
dec
cmp
dec
(bad)
(bad)
(bad)
adc
xchg
jge
cmp
lahf
and
adc
inc
sbb
call
and
(bad)
(bad)
dec
push
(bad)
sub
movs
fst
push
push
adc
aas
stc
push
popf
cld
or
movs
add
std
int
cmps
in
lods
aam
fsub
or
xchg
fwait
(bad)
mov
fild
push
(bad)
mov
pushf
je
adc
push
(bad)
ins
lds
push
or
(bad)
(bad)
(bad)
(bad)
cli
push
das
dec
paddq
and
fwait
cmc
dec
in
jae
in
xchg
movs
pop
sub
test
lock
aam
stc
adc
jbe
test
mov
cwde
push
leave
xchg
(bad)
dec
arpl
loop
sbb
rol
inc
fdivp
arpl
dec
inc
sbb
not
addr16
fidivr
(bad)
inc
(bad)
(bad)
(bad)
mov
push
out
and
jle
out
xor
inc
mov
lahf
push
sub
sbb
cmp
or
sbb
adc
jo
dec
(bad)
inc
test
pop
push
jns
mov
scas
push
cmp
push
mov
push
pop
jg
(bad)
(bad)
in
dec
jmp
jmp
jnp
mov
addr16
push
or
sbb
sub
cmc
call
lock
xchg
mov
jns
and
into
lods
stc
fwait
or
mov
mov
aaa
(bad)
test
inc
cmp
xor
jne
mov
cmp
push
std
(bad)
inc
mov
and
mov
push
les
in
je
(bad)
(bad)
push
pushf
ss
mov
imul
cmp
out
enter
aad
cs
jecxz
(bad)
jmp
ror
dec
imul
cmp
(bad)
(bad)
fistp
ficomp
xchg
xchg
lea
pushf
inc
outs
and
jl
inc
je
test
mov
mov
adc
add
sahf
jge
test
dec
mov
or
(bad)
xor
and
jecxz
inc
jb
fisttp
cmp
jl
mov
xor
inc
lods
ins
fcom
mov
adc
sub
mov
(bad)
fcomp
dec
loope
rcl
ss
or
mov
test
(bad)
(bad)
jg
inc
mov
repnz
lock
inc
mov
and
jae
aas
inc
(bad)
(bad)
(bad)
jmp
pop
xchg
or
sbb
cmp
inc
jne
dec
fld
stc
mov
fcom
push
fdivr
mov
xor
jecxz
xchg
xchg
jbe
stc
sbb
das
add
(bad)
call
lock
xchg
jbe
cmp
pop
jp
push
push
outs
jle
mov
inc
adc
fstp
dec
(bad)
mov
mov
mov
adc
lea
(bad)
(bad)
fild
cmps
xor
(bad)
cmc
iret
or
cmps
stos
jp
loope
inc
adc
xchg
(bad)
jmp
(bad)
mov
and
xchg
xor
xchg
and
stc
jne
(bad)
(bad)
(bad)
fprem1
jp
cdq
sbb
mov
enter
dec
cmp
xchg
arpl
and
sub
add
sbb
inc
stos
(bad)
dec
or
fs
mov
or
outs
(bad)
(bad)
(bad)
(bad)
dec
jne
(bad)
inc
jle
shl
mov
mov
sub
inc
pop
jg
outs
idiv
ror
loopne
adc
js
pop
cmp
pop
jmp
push
(bad)
pop
daa
pop
test
(bad)
out
add
ror
pop
cmp
movs
inc
jnp
adc
push
mov
mov
dec
ret
ins
imul
in
mov
sbb
jno
ss
add
inc
xchg
dec
inc
cmc
mov
(bad)
push
xor
popa
stos
sub
xchg
dec
mov
add
call
movs
not
vshufps
rcr
test
psubusb
push
or
add
mov
or
xor
fild
bound
leave
(bad)
(bad)
(bad)
call
dec
es
and
test
out
mov
xchg
jmp
inc
shl
and
xchg
adc
push
mov
call
pop
(bad)
jg
pop
xor
jp
inc
cmp
jmp
ss
into
mov
mov
adc
in
movs
sub
lods
jne
ins
ins
jp
inc
call
jbe
rcl
(bad)
sbb
ret
jg
jmp
push
data16
mov
dec
cmp
cld
pop
loop
push
jg
xchg
cmp
mov
jns
inc
stc
cmp
mov
loop
movs
mov
pop
mov
pop
int3
call
call
test
inc
mov
sbb
es
inc
(bad)
out
push
movs
lock
lock
push
mov
adc
fcmovnb
(bad)
cmp
ja
shl
mov
push
adc
jmp
clc
stos
sub
(bad)
outs
js
pop
xchg
add
cmp
sti
add
mov
ds
call
cwde
adc
xchg
xor
(bad)
inc
mov
clc
std
fwait
mov
mov
call
cwde
neg
dec
js
jnp
push
mov
push
jp
cmp
push
lods
inc
inc
div
imul
pop
out
out
add
hlt
ret
(bad)
push
push
pop
data16
and
xchg
pushf
and
push
movs
pop
and
dec
cmp
mul
pop
push
int
lock
cld
mov
mov
jp
(bad)
(bad)
(bad)
dec
push
test
cmp
and
test
aam
mov
and
xor
add
(bad)
icebp
(bad)
(bad)
dec
mov
xchg
aaa
and
addr16
or
xchg
dec
or
jns
(bad)
jmp
mov
into
repnz
add
sub
jns
xchg
mov
cmp
inc
repnz
cmp
in
sub
add
inc
cmps
lods
pop
rcl
pop
inc
gs
(bad)
jg
(bad)
mov
daa
std
add
fsub
(bad)
out
mov
inc
pop
xchg
(bad)
(bad)
(bad)
mov
push
std
mov
pushf
add
xor
xor
mov
adc
test
jns
(bad)
jg
or
pop
pop
int
add
mov
fidivr
mov
(bad)
(bad)
(bad)
jmp
sbb
jb
aas
in
push
popa
adc
sub
stc
push
icebp
sub
cmp
sub
sbb
popf
jb
ins
imul
popa
xchg
std
into
add
cmp
(bad)
jmp
jmp
sub
gs
stc
jmp
jbe
sar
repnz
sti
push
fmul
sbb
cli
mov
scas
push
and
(bad)
dec
(bad)
imul
mov
aad
jg
pop
(bad)
cmp
cli
stos
or
cdq
test
in
adc
fstp
rcr
and
(bad)
jmp
push
sbb
cmc
rcl
or
(bad)
jg
rol
cdq
xlat
xchg
push
pop
sar
push
movs
in
int
dec
mov
(bad)
(bad)
(bad)
call
sbb
fcomp
xchg
sbb
mov
out
mov
jge
dec
(bad)
mov
add
xchg
push
pushf
xchg
xchg
out
xchg
jnp
enter
(bad)
xchg
sti
aad
or
pop
dec
pop
jmp
repz
sub
mov
inc
mov
rol
add
or
mov
into
pop
rcr
cmp
inc
scas
jb
and
inc
je
xchg
push
into
and
mov
cmps
dec
fwait
jns
les
rol
daa
mov
push
inc
adc
xor
sub
aaa
add
sbb
xor
ret
pop
dec
adc
mov
push
sbb
pushf
test
fwait
inc
add
div
out
cli
push
xor
popa
jns
add
std
dec
bound
push
adc
dec
sbb
or
and
rcr
cdq
dec
in
add
jg
xchg
pop
and
bound
dec
jns
aaa
push
or
push
scas
push
push
(bad)
jg
add
or
dec
push
call
(bad)
pop
inc
jecxz
out
aas
dec
pop
test
imul
push
arpl
inc
mov
fwait
jg
jb
dec
test
xchg
fst
inc
dec
aam
scas
xchg
pushf
adc
ins
cmp
mov
(bad)
and
fld
dec
scas
aad
(bad)
bnd
les
jge
pop
(bad)
(bad)
mov
bound
loope
sub
cmp
cmps
inc
mov
into
paddb
cmp
and
call
mov
std
cmp
add
or
(bad)
or
and
(bad)
jmp
daa
add
add
jle
xor
dec
mov
(bad)
jg
cld
iret
(bad)
mov
adc
sti
push
fistp
xchg
lds
sub
rcr
jo
shl
cmp
mov
stc
cmp
cld
dec
push
test
in
dec
mov
xlat
(bad)
(bad)
(bad)
cmp
ins
fs
nop
retf
rcl
xchg
cmp
push
retf
sar
or
mov
push
shl
push
movs
shl
add
hlt
call
iret
pop
and
or
mov
pop
push
out
loope
push
out
jecxz
in
mov
clc
(bad)
(bad)
call
mov
test
and
cmps
hlt
dec
jae
xchg
or
scas
mov
pop
std
push
push
cli
dec
sbb
(bad)
(bad)
jmp
sbb
test
mov
fiadd
pop
je
mov
and
sub
scas
cli
push
jp
sbb
push
adc
xor
test
mov
cmps
mov
xchg
fsubp
(bad)
mov
push
mov
jns
xlat
jge
cmp
lock
div
aad
dec
fstp
xchg
or
xchg
mov
pop
ja
(bad)
(bad)
push
or
inc
xchg
pop
in
cmp
add
(bad)
jg
jmp
clc
ss
pop
aad
push
sbb
sti
std
mov
cmp
div
inc
idiv
aad
sub
inc
adc
xchg
mov
mov
mov
mov
call
push
sti
adc
jecxz
inc
mov
jp
(bad)
cmc
jge
mov
or
dec
int3
mov
into
das
inc
popa
pop
repz
sti
jb
(bad)
(bad)
(bad)
jg
add
cmp
xchg
or
int
sub
sbb
push
lods
mov
(bad)
aas
add
jge
rol
dec
sbb
(bad)
(bad)
push
neg
ja
mov
inc
out
mov
icebp
repz
xor
scas
sti
or
cld
mov
fimul
jmp
xor
fs
aam
cmp
add
push
adc
sahf
mov
mov
adc
pop
clc
push
xchg
pop
adc
inc
sub
xlat
sbb
mov
(bad)
(bad)
jmp
sub
jnp
movs
pop
pop
xchg
ins
and
repz
test
dec
mov
(bad)
mov
sbb
xchg
jo
out
out
jp
mov
mov
test
(bad)
out
clc
xchg
sti
cmp
jne
inc
dec
sbb
cld
adc
ja
aam
popf
std
sub
push
jo
(bad)
(bad)
(bad)
call
jbe
pop
leave
pop
push
push
jmp
dec
push
fisttp
sbb
mov
rcr
in
add
sub
jns
outs
aaa
xchg
stc
mov
dec
loopne
sbb
mov
pop
push
push
or
cmp
xor
xchg
pop
pop
mov
rol
jne
cmp
pop
and
inc
outs
clc
(bad)
inc
fist
ins
adc
sub
lahf
xchg
retf
sbb
lahf
scas
mov
cli
mov
push
adc
fdiv
dec
jmp
cli
jo
inc
jmp
(bad)
jmp
xchg
in
popa
xor
psrld
sti
push
(bad)
out
cli
mov
test
pop
aaa
mov
ret
dec
std
lods
(bad)
(bad)
(bad)
(bad)
jp
fwait
bnd
int3
jns
and
xadd
aad
fwait
jle
dec
ja
(bad)
popa
fsubr
imul
das
mov
lock
mov
call
jle
sbb
imul
fst
rcr
sbb
sub
into
mov
push
rol
in
jae
pop
xchg
imul
int
(bad)
fnsave
dec
mov
dec
cmp
into
js
adc
push
das
cli
(bad)
push
cmp
mov
lea
dec
aas
loop
pop
cmc
and
out
cmp
cmps
repz
lea
sahf
push
sbb
pop
je
mov
dec
mov
(bad)
dec
aam
ret
out
dec
repnz
ret
loop
(bad)
dec
call
mov
cli
shl
js
jae
jmp
rcr
mov
lods
ja
ds
xor
(bad)
pop
mov
mov
nop
mov
push
mov
mov
stos
cmp
xchg
mov
mov
(bad)
mov
stos
je
sbb
jne
pop
jmp
pop
mov
(bad)
push
mov
sbb
adc
int
pop
mov
fdiv
mov
daa
jge
popf
ja
clc
dec
adc
xor
push
adc
in
mov
(bad)
call
stos
loopne
int
push
mov
push
scas
cmp
adc
call
push
gs
xor
dec
fsubr
push
push
xchg
jmp
dec
inc
mov
shl
std
(bad)
push
jl
or
lea
dec
push
inc
mov
mov
cdq
jnp
jl
stos
das
cli
push
ja
fdiv
les
mov
adc
sbb
(bad)
call
cmp
and
not
fsub
push
mov
in
add
or
lahf
xchg
aam
test
in
mov
fdivr
(bad)
call
ret
retf
push
or
sub
jbe
adc
mov
adc
(bad)
aam
fnstcw
jp
adc
or
mov
push
xchg
sub
jnp
dec
cmp
lea
add
jmp
lods
pop
fisttp
or
push
mov
cld
mov
rol
(bad)
(bad)
jmp
mov
add
icebp
arpl
aas
enter
mov
retf
sti
(bad)
(bad)
and
jg
in
dec
cwde
(bad)
(bad)
call
inc
jbe
add
aaa
dec
loopne
inc
mov
dec
adc
adc
mov
scas
xchg
dec
mov
stos
inc
add
inc
in
std
movs
aam
add
imul
add
mov
call
fiadd
sub
cmp
pusha
cmps
outs
es
sti
xchg
lods
and
mov
std
jb
outs
in
(bad)
jmp
(bad)
jmp
jl
mov
icebp
mov
jae
mov
mov
sub
xor
inc
cli
(bad)
dec
js
inc
(bad)
popa
adc
jo
push
lods
data16
retf
(bad)
mov
arpl
in
mov
inc
push
shl
jnp
mov
cs
ret
dec
mov
fwait
cwde
jns
in
pop
mov
(bad)
(bad)
jg
and
jle
jno
das
xor
adc
add
lds
jg
retf
jge
(bad)
(bad)
fistp
xor
(bad)
sti
or
xchg
(bad)
inc
mov
mov
mov
add
daa
pop
adc
test
push
push
mov
add
push
cli
(bad)
retf
into
ins
pop
lods
push
inc
mov
in
(bad)
(bad)
(bad)
inc
inc
fcomp
aad
cwde
dec
aam
enter
inc
arpl
adc
mov
stc
stos
fdiv
xor
(bad)
call
fld
mov
mov
jge
jmp
add
movs
div
cmc
addr16
xchg
mov
(bad)
cmp
fistp
pop
xchg
pusha
dec
or
out
xor
xor
gs
fcomip
push
jno
cli
cld
sbb
cs
inc
test
cmp
push
mov
jmp
scas
out
sub
arpl
ss
adc
scas
cwde
in
inc
(bad)
(bad)
inc
lea
cli
fdivr
sub
xchg
(bad)
adc
push
(bad)
jg
mov
aad
gs
aad
loope
pushf
pop
mov
mov
mov
cdq
mov
(bad)
push
(bad)
(bad)
(bad)
mov
sub
mov
dec
iret
(bad)
mov
adc
or
or
jg
jle
into
jnp
xor
mov
pop
lods
imul
(bad)
or
arpl
and
(bad)
jmp
mov
inc
(bad)
push
pop
jne
or
mov
or
cmp
adc
scas
push
mov
sbb
sub
mov
jmp
jle
jmp
push
aaa
xchg
push
cmp
movs
inc
dec
(bad)
(bad)
jmp
jge
pop
jne
inc
ret
retf
mov
test
or
push
xchg
dec
jmp
cmp
inc
push
(bad)
push
fstp
enter
(bad)
out
or
push
push
gs
aad
add
lods
add
pop
cmp
pusha
loope
inc
movs
lea
dec
test
pop
inc
ror
jno
(bad)
out
loop
sub
xor
ficom
xchg
jg
add
push
jne
pop
lds
add
inc
jecxz
(bad)
cld
test
mov
push
dec
jnp
cli
outs
dec
lahf
(bad)
(bad)
dec
adc
std
jne
fcomi
mul
(bad)
cmc
xlat
pop
movs
jne
push
and
inc
mov
mov
inc
inc
dec
(bad)
push
enter
jnp
mov
or
xchg
arpl
add
ds
adc
outs
adc
daa
ret
aaa
dec
jle
test
pop
jo
jl
(bad)
(bad)
(bad)
mov
mov
popa
jae
mov
or
adc
inc
push
push
pushf
and
fdivr
adc
cmp
dec
ror
xchg
test
cmc
sbb
add
cdq
test
inc
xor
fcomip
(bad)
js
popf
pop
mov
lahf
xor
lock
fwait
xchg
sbb
bnd
int
(bad)
(bad)
inc
pop
cmp
mov
mov
(bad)
cmp
or
mov
mov
mov
or
mov
pop
xchg
(bad)
(bad)
(bad)
mov
aaa
mov
aas
inc
nop
or
(bad)
mov
xchg
mov
push
aad
shr
(bad)
(bad)
jg
and
in
jp
daa
into
mov
sub
clc
call
fwait
aaa
push
hlt
fild
xchg
inc
jecxz
cdq
popf
push
add
mov
into
add
pop
jbe
sar
scas
cli
call
pusha
mov
mov
cli
(bad)
or
add
ss
jo
push
add
sbb
dec
std
neg
xor
fcomi
(bad)
push
xchg
adc
sti
mov
or
jl
push
xor
js
mov
or
and
(bad)
(bad)
push
cld
into
rol
rcr
inc
add
cmps
push
les
jnp
push
jae
inc
call
xor
push
and
push
out
(bad)
lds
(bad)
call
mov
inc
out
test
sbb
sahf
test
inc
adc
(bad)
(bad)
(bad)
(bad)
ds
into
clts
xor
push
mov
lods
idiv
jo
mov
mov
(bad)
(bad)
(bad)
jmp
and
and
stc
cmp
shl
mov
xchg
pop
cmp
mov
(bad)
fild
jl
inc
or
push
sub
ror
ja
call
mov
movsx
push
inc
(bad)
call
mov
int
call
fild
ret
mov
xor
pop
add
jnp
cmps
xchg
jg
cmp
cmps
pop
loop
or
inc
clc
call
mov
dec
gs
(bad)
call
loopne
(bad)
call
aad
lock
pushf
fst
xor
(bad)
call
cdq
pop
ficomp
inc
add
jne
adc
sbb
push
imul
adc
fsubr
fs
mov
jmp
mov
nop
repz
and
into
scas
fcom
les
(bad)
mov
rcl
adc
jns
xchg
add
mov
test
or
dec
mul
mov
(bad)
jg
push
das
and
mov
popf
jecxz
jns
cmp
sti
arpl
sub
xchg
and
jne
fisub
or
fiadd
jno
sub
fimul
jge
clc
data16
out
inc
pop
jo
mov
(bad)
(bad)
jmp
in
inc
and
xor
cdq
arpl
pusha
inc
pop
pop
test
repnz
sar
mov
adc
push
imul
xor
js
fidivr
pop
or
inc
into
aam
mov
daa
test
shl
add
icebp
js
(bad)
call
sbb
sti
test
xor
lods
cmc
(bad)
xor
pop
stc
rcl
outs
pop
inc
aas
mov
std
jmp
retf
ror
push
repnz
test
cmp
adc
cmp
cmp
out
adc
std
stos
test
adc
add
sbb
sar
push
ss
add
int
push
ret
cdq
aaa
cmp
ins
(bad)
inc
loope
dec
xor
(bad)
jg
mov
push
icebp
dec
add
cwde
aam
sbb
(bad)
(bad)
(bad)
jmp
int
and
xor
jb
adc
idiv
std
loope
jns
mov
adc
(bad)
(bad)
call
sbb
push
jge
(bad)
retf
xchg
push
mov
cmp
(bad)
mov
pop
imul
cmp
xchg
shr
ins
jle
not
inc
ja
loopne
pop
mov
push
mov
inc
xlat
test
jg
add
sbb
push
xlat
fdivr
(bad)
(bad)
(bad)
(bad)
std
stos
rol
jge
in
test
sbb
and
jns
push
adc
push
cmc
sub
(bad)
(bad)
call
test
ss
repnz
push
scas
mov
aad
shl
test
movs
ja
adc
(bad)
(bad)
(bad)
(bad)
jmp
pop
ss
ins
mov
mov
sti
rcr
ror
(bad)
(bad)
(bad)
jmp
outs
test
je
adc
fisubr
inc
jge
(bad)
jae
jne
sbb
repz
jmp
fs
push
mov
xor
fdivr
mov
mov
(bad)
in
jb
inc
sbb
xchg
sub
mov
push
cmp
call
mov
mov
fld
inc
test
loop
scas
movs
pop
repnz
in
add
(bad)
(bad)
(bad)
(bad)
jge
adc
add
mov
xchg
imul
jle
addr16
sbb
or
(bad)
(bad)
call
fadd
loopne
call
call
aas
fadd
popa
fwait
mov
and
dec
cli
fsub
mov
sub
dec
outs
inc
fucomip
cmp
ins
call
add
inc
or
xchg
cmp
mov
jmp
jecxz
loope
(bad)
iret
fld
mov
sbb
xchg
ror
inc
(bad)
(bad)
(bad)
call
xchg
fwait
dec
icebp
test
scas
pop
push
inc
fistp
lds
(bad)
lods
daa
inc
pop
fdiv
mov
call
cwde
cmp
adc
popf
cmp
push
and
mov
jb
jp
bound
cmp
xcrypt-ctr
cmps
fcmove
xchg
mov
xlat
add
jb
sub
sbb
jge
cmp
mov
mov
mov
fnsave
clc
(bad)
(bad)
dec
ins
in
push
sbb
loope
xor
adc
test
dec
mov
fdivr
push
pop
ret
fsub
xor
cmc
jg
mov
sbb
cmp
call
test
loopne
das
inc
fadd
push
dec
loopne
push
scas
inc
fs
retf
add
xchg
mul
mov
test
push
cmc
jb
jge
sbb
or
cmp
aaa
mov
inc
cmp
int3
mov
xor
test
ds
push
and
mov
sbb
(bad)
mov
jb
inc
or
mov
gs
pushf
outs
test
add
call
imul
in
movs
add
(bad)
fbstp
mov
in
adc
shr
cmps
xchg
out
push
xchg
jnp
adc
sub
dec
jne
pop
movs
dec
cld
dec
mov
sbb
dec
adc
ins
adc
clc
mov
inc
push
cmp
fistp
fwait
lods
sar
push
int
add
inc
into
push
ret
(bad)
(bad)
jg
outs
cmp
loopne
in
in
cwde
and
mov
call
dec
into
(bad)
mov
xchg
cmp
mov
push
mov
(bad)
jmp
mov
push
movs
mov
mov
repnz
jns
adc
sub
jbe
dec
xchg
mov
push
neg
inc
arpl
dec
sub
(bad)
(bad)
(bad)
out
cmp
test
mov
(bad)
das
stos
lods
push
psadbw
sbb
sti
push
into
mov
cmc
pop
inc
xchg
lea
mov
push
(bad)
(bad)
jg
lock
aam
in
sub
je
adc
test
lea
idiv
mov
lock
sub
xchg
inc
cmc
jecxz
aad
pop
xor
scas
jecxz
adc
xchg
xchg
pop
xor
fnstcw
mov
int
(bad)
push
(bad)
dec
imul
test
cs
or
(bad)
(bad)
dec
(bad)
jbe
xor
jl
ss
aaa
(bad)
repz
gs
push
js
(bad)
(bad)
jmp
cmc
inc
adc
test
push
fbld
hlt
mov
inc
cdq
pop
mov
push
std
jae
(bad)
(bad)
call
dec
and
pushf
mov
jnp
repz
scas
jbe
mov
inc
mov
(bad)
(bad)
call
push
aad
add
fnsave
jge
sbb
test
cdq
cmc
adc
(bad)
sbb
iret
scas
mov
test
lds
jl
cmp
pop
mov
adc
jmp
jmp
dec
lock
jmp
and
pop
jge
movsx
push
loope
call
call
or
add
inc
sbb
jecxz
sbb
push
push
outs
adc
call
(bad)
(bad)
jmp
jnp
shl
mov
cld
popa
arpl
xchg
xor
repz
adc
mov
jmp
push
jbe
xchg
jge
(bad)
(bad)
(bad)
(bad)
sti
fcomi
ds
movs
hlt
xor
test
sbb
push
adc
pop
push
pop
mov
dec
fist
popa
js
pop
pop
cwde
jmp
gs
mov
fcomip
in
test
or
push
sbb
cmp
sbb
into
loop
(bad)
daa
mov
cli
daa
test
xor
into
sbb
mov
jmp
xchg
cs
cmp
or
lahf
and
dec
hlt
mov
ds
pushf
pop
and
push
pmaxsw
jecxz
mov
daa
lock
inc
dec
inc
cwde
xor
or
fs
jmp
mov
in
pop
push
add
push
movs
aad
int
popf
sub
cmp
cmp
jmp
test
xchg
cld
inc
ret
inc
push
inc
jne
sub
(bad)
jg
sub
inc
cmp
jb
leave
mov
add
test
(bad)
(bad)
(bad)
fadd
inc
cmp
mov
fild
mov
mov
out
jge
hlt
adc
dec
sti
into
ror
cwde
inc
cli
(bad)
(bad)
call
dec
pop
pop
adc
bound
not
pop
cmc
es
pushf
popf
push
mov
aad
(bad)
jmp
mov
and
pop
adc
push
cmp
std
mov
push
mov
dec
lds
ret
xor
ja
pusha
xor
mov
bound
std
(bad)
(bad)
jg
fs
jbe
add
jo
cmp
dec
pcmpeqw
mov
popa
ins
pandn
popf
add
retf
cmp
in
leave
adc
push
and
fcomp
pushf
mov
jno
add
sub
mov
add
xchg
and
addr16
adc
in
inc
or
call
add
sub
mov
adc
dec
test
or
das
fidivr
push
ret
mov
jb
inc
push
and
and
imul
cwde
pop
dec
mov
push
fdivr
pop
fidivr
stos
repnz
jmp
(bad)
(bad)
(bad)
(bad)
dec
jae
movs
repz
in
scas
mov
jmp
les
lods
lock
popa
stos
fs
inc
inc
repnz
(bad)
fcomip
adc
inc
dec
and
sbb
xor
out
outs
bswap
mov
sbb
mov
add
call
add
mov
mov
outs
call
jg
stos
push
inc
adc
xchg
imul
add
add
dec
jg
(bad)
jp
cs
(bad)
mov
sti
jmp
push
xchg
push
lods
stc
push
fwait
or
inc
rcr
mov
mov
cmp
(bad)
enter
nop
sbb
add
test
mov
mov
ror
or
mov
mov
jae
jnp
push
jl
push
lds
scas
ja
jae
add
(bad)
call
jp
dec
fwait
mov
cwde
test
jae
(bad)
dec
pop
(bad)
(bad)
(bad)
jmp
xchg
syscall
retf
sub
pop
outs
(bad)
or
and
mov
and
sbb
ins
dec
pop
sahf
dec
sahf
sub
loope
lock
std
ret
or
mov
ins
or
inc
fstp
fdiv
test
das
clc
(bad)
fbld
or
or
shr
shl
sbb
movs
dec
jb
(bad)
(bad)
(bad)
(bad)
fst
lock
xchg
idiv
jge
pop
(bad)
add
or
mov
into
(bad)
cli
(bad)
(bad)
dec
mov
and
(bad)
and
xchg
imul
pop
mov
lods
jns
(bad)
inc
shr
sub
mov
lods
or
fsubrp
and
push
xchg
clc
out
cwde
inc
cld
jne
out
sub
ja
xchg
adc
dec
popa
xchg
sbb
mov
das
push
cmp
jo
xor
loop
mov
call
sub
xchg
(bad)
cwde
jns
aaa
xor
int3
mov
adc
enter
mov
pop
fidiv
ror
or
jp
jg
push
std
pop
adc
stos
inc
pushf
push
movs
mov
jmp
sbb
xchg
push
(bad)
call
add
mov
mov
punpckldq
push
ins
ins
pop
cmp
popa
std
add
and
mov
imul
cdq
stos
jecxz
cmp
dec
adc
(bad)
jg
bound
sub
aam
mov
pop
pop
cmp
(bad)
out
xor
push
dec
das
jns
pop
mov
repz
and
push
sub
test
jmp
aas
outs
jl
jne
xor
cld
cmp
xchg
dec
fcomi
ins
popa
out
sbb
(bad)
mov
pop
pop
int3
mov
test
adc
cwde
push
aaa
and
cmp
mov
mov
mov
dec
jp
mov
xor
and
jb
lock
call
sbb
sbb
push
pushf
lods
cmp
jne
push
dec
adc
inc
outs
(bad)
das
sub
push
repz
jo
dec
call
test
ds
adc
mov
(bad)
out
add
ret
(bad)
(bad)
jge
lea
add
ins
add
mov
add
mov
add
(bad)
dec
sbb
push
popa
(bad)
repz
mov
sahf
adc
loopne
push
sub
outs
add
mov
sbb
mov
imul
dec
cmp
fnstsw
cs
jb
test
mov
dec
mov
scas
add
(bad)
fmul
dec
iret
js
push
call
mov
test
inc
push
aaa
and
fidivr
aad
pushf
sub
add
(bad)
(bad)
dec
push
dec
sbb
sti
ins
test
es
sub
stc
mov
(bad)
push
sbb
pop
mov
xchg
or
mov
cmc
cmp
and
popf
(bad)
(bad)
(bad)
dec
xor
dec
jle
jbe
std
and
lock
mov
mov
aam
inc
push
int3
xlat
mov
dec
jb
(bad)
jmp
(bad)
std
test
xor
and
or
fldenv
jle
dec
mov
and
in
add
mov
or
push
xor
or
popa
cmc
adc
gs
cmp
daa
ins
fld
jmp
and
aad
push
and
adc
pop
sbb
sbb
push
or
(bad)
call
(bad)
mov
mov
js
sbb
call
(bad)
fcomip
push
cmp
into
outs
ins
les
or
and
inc
loopne
or
in
or
into
cmp
jno
jns
mov
ficomp
scas
push
(bad)
push
xchg
pop
jo
or
pop
test
mov
or
dec
xor
adc
jns
cmc
lsl
out
adc
jmp
mov
jae
sbb
push
stos
mov
pop
add
jecxz
xchg
es
inc
das
(bad)
mov
call
dec
std
mov
xchg
js
js
and
xor
and
and
or
call
outs
or
mov
cmp
xchg
xchg
loope
(bad)
(bad)
call
not
fcom
arpl
(bad)
pushf
movs
fld
sbb
mov
lods
jmp
fisubr
bound
and
pop
mov
xchg
movs
and
add
sub
jmp
xor
jne
or
jle
inc
mov
inc
sbb
xchg
(bad)
(bad)
jmp
adc
inc
adc
ds
pop
cmp
xchg
pop
gs
call
cmp
push
lods
aad
pop
lock
jmp
and
mov
xchg
int
xchg
dec
inc
push
jb
inc
je
and
les
mov
into
outs
mov
jbe
(bad)
das
sub
xor
lds
pop
mov
(bad)
aaa
cwde
and
shl
jmp
push
scas
pusha
sahf
mov
int3
dec
jo
arpl
js
movs
imul
dec
or
call
rol
fnsave
mov
in
xchg
jg
cld
push
adc
dec
inc
hlt
sbb
(bad)
(bad)
jmp
xor
sub
gs
call
jl
fist
xchg
xlat
mov
sub
dec
out
sbb
push
dec
es
call
or
ja
out
mul
(bad)
xchg
add
rol
mov
pop
std
dec
mov
or
(bad)
test
mov
jne
sub
test
jl
(bad)
(bad)
(bad)
inc
aad
cmp
icebp
lods
(bad)
xor
xor
add
jns
adc
lock
(bad)
(bad)
fimul
aam
mov
ficomp
(bad)
push
stos
idiv
push
aam
imul
dec
repnz
push
out
out
dec
cmc
mov
mov
and
ror
call
out
(bad)
outs
xchg
and
scas
mov
(bad)
call
or
sbb
pop
std
ja
inc
test
loop
jmp
inc
xchg
daa
and
dec
dec
and
clc
inc
iret
add
jmp
sbb
xor
jbe
or
xlat
mov
sbb
test
rcl
jbe
fdivp
movs
xchg
pop
or
ficom
(bad)
(bad)
(bad)
jmp
add
xor
lea
and
mov
rol
inc
fidiv
dec
(bad)
mov
push
push
ror
push
push
ficom
lods
jle
inc
call
mov
bound
scas
je
inc
xor
fidiv
pop
mov
call
xor
enter
js
jle
adc
imul
fadd
xchg
(bad)
dec
push
xor
lds
mov
scas
jae
js
pop
jle
jg
(bad)
jmp
std
mov
add
xchg
cmp
adc
mov
(bad)
(bad)
(bad)
push
xchg
shl
inc
adc
cmp
dec
in
stos
psubusb
cmp
jp
add
inc
xor
mov
jecxz
daa
cmp
iret
xchg
(bad)
(bad)
out
clc
xchg
ja
pushf
push
pop
shl
shl
jmp
adc
mov
dec
mov
not
and
and
jg
push
adc
mov
cmc
add
push
jne
cs
loop
push
add
sar
lds
push
mov
sub
mov
adc
hlt
jbe
mov
mov
cmp
(bad)
(bad)
(bad)
mov
jg
js
test
rol
jg
pushf
add
push
sbb
das
clc
dec
sub
fisubr
inc
retf
push
cmp
and
or
mov
dec
sub
cmp
or
push
mov
sar
pop
icebp
push
jle
inc
gs
cmc
mov
push
out
add
data16
(bad)
call
mov
sbb
sbb
jmp
cmp
xchg
cdq
jns
call
sbb
inc
sahf
mov
dec
nop
jle
inc
adc
mov
jp
mov
jno
fcomp
cmp
call
fisub
pusha
out
mov
js
pop
(bad)
jmp
call
ins
push
or
or
push
mov
cli
call
sahf
ds
pop
call
aas
loopne
xor
loop
cmp
and
icebp
add
dec
(bad)
xor
ja
add
xor
shr
cs
(bad)
(bad)
cld
dec
iret
into
add
pushf
and
or
adc
push
push
mov
inc
add
add
dec
add
and
leave
into
cmp
push
adc
scas
(bad)
(bad)
fbld
in
xchg
gs
gs
inc
shr
inc
pop
xchg
popf
gs
or
div
xchg
xchg
xchg
outs
add
mov
push
push
pop
rcr
(bad)
mov
cdq
shr
pop
cmps
gs
xchg
movs
fcomp
(bad)
jmp
(bad)
mov
push
inc
dec
pop
sub
nop
mov
es
(bad)
call
add
dec
rcr
cmp
mov
ror
repz
(bad)
inc
bound
add
in
lea
adc
popa
mov
xchg
addr16
dec
add
ret
(bad)
mov
sub
shl
aad
adc
fist
cmp
push
(bad)
push
repz
fwait
call
jmp
(bad)
js
lods
mov
fwait
aas
xor
call
xchg
movs
out
pop
in
(bad)
and
(bad)
inc
push
movs
call
imul
movs
lahf
xor
neg
push
and
hlt
cld
jecxz
and
adc
xchg
cmp
and
pop
mov
cmp
add
jge
dec
(bad)
(bad)
(bad)
jmp
retf
pop
retf
outs
mov
pushf
fisub
aad
(bad)
(bad)
push
out
loopne
iret
mov
add
(bad)
(bad)
push
retf
movs
adc
push
test
sti
in
lahf
sub
sbb
enter
gs
(bad)
(bad)
dec
lods
inc
add
out
add
jne
pop
imul
xchg
mov
jb
push
dec
cmp
dec
lock
cmp
je
prefetch
xlat
xchg
dec
jno
(bad)
mov
add
or
(bad)
call
test
pop
inc
fld
ret
sbb
fist
jg
fcomp
mov
ins
or
inc
jbe
sbb
inc
scas
inc
jp
into
pushf
push
repnz
ja
adc
(bad)
inc
push
jecxz
xchg
xor
and
test
test
mov
test
(bad)
(bad)
call
push
push
mov
lock
fwait
cmp
call
in
jmp
add
add
pop
sbb
lahf
mov
add
in
mov
hlt
icebp
push
pop
bound
in
loope
pop
add
call
shl
clc
xchg
mov
ins
pop
xchg
mov
out
cli
pop
dec
push
jge
lods
mov
aad
xor
retf
fcomp
cmp
mov
scas
cli
cmp
jg
imul
aaa
inc
(bad)
mov
push
push
sti
aad
mov
call
mov
jl
cli
cli
cmp
add
pop
mov
inc
outs
pop
mov
mov
add
jl
addr16
call
adc
jne
jnp
dec
mov
call
or
inc
adc
inc
cmp
dec
and
inc
out
push
jne
nop
mov
(bad)
(bad)
dec
not
cld
and
neg
in
retf
sbb
jae
(bad)
(bad)
(bad)
cmp
or
jmp
push
je
stc
push
mov
retf
in
xlat
movs
push
addr16
std
retf
and
pop
into
sub
adc
adc
push
cmc
lods
sub
pop
retf
and
(bad)
(bad)
(bad)
call
in
test
jae
xor
(bad)
cmp
test
adc
xchg
cmp
or
mov
clc
pusha
inc
call
mov
fs
(bad)
(bad)
call
(bad)
push
push
cmps
ins
xchg
sbb
movs
mov
pop
sbb
(bad)
(bad)
jg
or
hlt
cmp
pop
icebp
mov
icebp
ja
shl
call
jo
and
xchg
inc
ret
loope
sahf
xor
and
fild
jmp
movs
(bad)
ins
push
cli
add
loopne
jno
(bad)
xor
mov
xchg
loope
add
adc
inc
std
(bad)
jg
xchg
jecxz
jo
int3
and
mov
jae
aaa
inc
in
mul
xor
and
sbb
les
jnp
pop
cdq
or
lods
(bad)
mov
or
call
lods
mov
mov
test
ss
sub
gs
xlat
or
out
cli
xor
dec
mov
cmp
add
pop
std
(bad)
jg
(bad)
(bad)
call
into
gs
xchg
outs
sub
adc
not
(bad)
(bad)
push
mov
cmp
or
push
dec
dec
aaa
xchg
std
pop
push
loopne
dec
cmp
adc
(bad)
(bad)
jmp
cbw
xchg
inc
pop
ins
sbb
loopne
mov
xor
nop
sbb
inc
hlt
scas
shr
mov
stc
sub
mov
fsub
mov
cs
adc
dec
arpl
inc
mov
stos
(bad)
cli
(bad)
jge
add
mov
jle
and
fsub
(bad)
call
loopne
mov
mov
cmp
pop
pop
scas
or
xchg
shl
push
xchg
(bad)
call
fwait
jbe
in
xchg
adc
cmp
jo
aam
aam
stos
push
fnstcw
(bad)
(bad)
jmp
xchg
adc
xchg
inc
lods
cmps
xchg
push
or
test
add
mov
xor
push
add
push
mov
ds
(bad)
push
cmp
mov
sub
jmp
in
cmp
cmp
scas
and
ins
sub
test
cmps
pushf
xchg
les
sbb
jmp
jecxz
add
inc
push
mov
cwde
mov
cmp
(bad)
(bad)
test
ja
and
push
xor
xchg
push
jae
add
ror
push
ins
or
ret
mov
fucomp
(bad)
sahf
lds
(bad)
fild
sbb
or
push
lea
jne
push
mov
sub
lods
and
xchg
(bad)
(bad)
(bad)
call
scas
dec
sahf
push
sbb
movntps
shl
inc
add
mov
dec
dec
and
mov
inc
inc
or
movs
test
ds
retf
sub
xor
push
cld
(bad)
jmp
mov
shl
popa
pop
pusha
xor
pop
mov
jecxz
lea
dec
call
push
rcr
std
push
and
add
adc
addr16
xchg
push
cmp
mov
push
mov
sub
and
shl
leave
inc
cld
push
aas
push
into
xor
scas
aam
push
sahf
in
add
jmp
jmp
or
not
and
mov
js
add
jg
or
push
call
cwde
push
call
(bad)
call
jecxz
shl
ret
das
sbb
test
jg
sub
push
push
add
fs
jmp
stos
ss
(bad)
(bad)
jmp
lods
aaa
cmp
xor
imul
data16
aaa
fstp
repnz
out
mov
add
adc
enter
std
sbb
test
sbb
neg
ss
adc
jo
or
inc
cmp
call
push
jp
xchg
inc
ret
inc
xchg
cmp
inc
pop
mov
out
mov
jmp
cmc
mov
xchg
dec
inc
adc
jle
jbe
xchg
aam
(bad)
(bad)
(bad)
jmp
rcr
push
and
rcl
add
imul
in
in
leave
adc
mov
push
or
push
mov
ret
test
dec
xchg
adc
icebp
xlat
adc
adc
jl
pop
xor
std
dec
fst
xchg
fsubr
xchg
push
call
retf
outs
add
std
mov
jmp
and
mov
sub
jecxz
jb
jae
mov
push
(bad)
(bad)
call
dec
js
into
mov
pop
mov
inc
in
mov
repnz
in
(bad)
(bad)
(bad)
call
jmp
push
dec
cmp
ins
push
dec
cmps
cmp
leave
pop
push
sti
and
call
popf
add
mov
lds
lea
inc
in
(bad)
add
dec
(bad)
(bad)
(bad)
fild
and
enter
dec
(bad)
sahf
mov
xor
sbb
pop
or
sbb
pcmpgtw
hlt
cmp
mov
cmp
cmp
(bad)
(bad)
mov
(bad)
push
xchg
lock
or
test
jp
ret
lock
inc
mov
cli
ss
mov
popa
ficomp
movs
or
stc
lods
jmp
jnp
(bad)
test
les
ret
inc
mov
and
shl
stos
shr
int3
jns
fsub
sbb
scas
push
push
imul
mov
not
cmp
or
int3
lahf
sti
jg
push
mov
scas
test
repz
imul
(bad)
(bad)
(bad)
jg
pop
or
leave
call
lds
enter
les
into
(bad)
aad
(bad)
call
cmc
cmp
adc
pop
adc
inc
stos
push
aaa
std
(bad)
jg
out
jl
cwde
push
push
dec
inc
and
adc
mov
mov
cmp
jmp
xchg
mov
idiv
push
jnp
push
sub
fbld
mov
jle
aad
dec
out
jnp
xchg
ficomp
cmp
dec
xor
pop
pop
and
mov
ror
ret
fwait
mov
pop
jg
sbb
int
ja
sbb
mov
jecxz
jmp
adc
je
sar
inc
sbb
mov
sbb
pop
test
push
call
jo
lods
jo
dec
jns
sub
cmp
cmps
lea
jae
add
push
je
sbb
jne
stos
shl
dec
(bad)
xor
clc
adc
in
cmp
inc
jns
(bad)
(bad)
call
jmp
ret
jmp
or
pop
xchg
arpl
cwde
nop
dec
jmp
(bad)
mov
out
mov
data16
jnp
push
popa
pop
imul
ja
add
jmp
jg
mov
inc
jecxz
mov
and
inc
js
cmp
call
(bad)
(bad)
push
cmc
mov
xchg
cmp
fs
std
retf
out
sar
xchg
sar
fs
jmp
sti
pop
dec
mov
push
add
or
das
clc
jg
jnp
or
fxch
pusha
fld
arpl
(bad)
imul
xor
push
ret
retf
inc
gs
gs
xor
mov
jmp
rcl
stos
inc
lods
jns
fwait
mov
xchg
inc
sub
test
jno
cmp
or
push
cmp
lds
mov
js
in
cmp
popa
sub
push
adc
mov
jne
jecxz
add
xchg
cmp
ret
push
push
jge
in
not
(bad)
inc
dec
inc
stos
and
sbb
test
outs
lea
jmp
inc
lock
or
repz
sbb
mov
jne
xchg
cwde
hlt
mov
mov
cli
(bad)
dec
sar
push
pop
mov
aas
mov
mov
stc
mov
popf
adc
jmp
fisub
inc
aam
test
cmc
cmc
push
sub
(bad)
mov
scas
add
arpl
(bad)
mov
lds
fxch
inc
cld
pop
lock
cmp
in
bound
cdq
xchg
inc
imul
(bad)
(bad)
jmp
(bad)
pusha
inc
ds
mov
or
pop
popa
add
lods
jg
mov
push
inc
scas
enter
pop
xchg
call
sar
ret
aaa
into
in
dec
(bad)
add
(bad)
call
add
and
add
scas
xchg
aam
call
retf
(bad)
(bad)
fisttp
and
adc
xor
fwait
repz
jns
adc
loopne
clc
(bad)
inc
and
mov
cmp
and
jp
sub
adc
or
test
add
cmps
cmp
jg
sub
inc
out
and
or
mov
push
icebp
dec
lock
jg
aas
adc
and
cmc
(bad)
out
add
or
pop
(bad)
(bad)
call
sbb
xor
gs
cmp
pop
mul
add
xchg
jl
and
push
mov
outs
add
lods
mov
mov
push
nop
shr
push
xchg
pop
(bad)
(bad)
(bad)
mov
xchg
movs
inc
std
test
inc
cmp
arpl
les
push
dec
fsubr
sub
xchg
rol
push
jnp
das
xchg
(bad)
jbe
xchg
int3
push
repnz
(bad)
jg
or
shl
fdiv
ins
daa
(bad)
test
(bad)
out
clc
pop
loopne
mov
cmp
adc
adc
ds
gs
(bad)
(bad)
inc
push
fld
add
ret
(bad)
cmp
arpl
or
(bad)
or
outs
inc
add
inc
add
mov
push
fdivr
(bad)
mov
pop
test
int
xchg
mov
mov
fxch
ret
(bad)
(bad)
call
sbb
sub
gs
adc
(bad)
sbb
jmp
mov
xor
sbb
add
(bad)
call
inc
lds
inc
mov
mov
sub
enter
jmp
xor
cmc
sar
jg
lods
(bad)
(bad)
(bad)
fistp
mov
cmp
bound
fcom
pushf
mov
xlat
and
fwait
or
xchg
add
or
adc
hlt
cmp
pop
sub
jg
sbb
popf
xor
cmc
dec
imul
inc
sbb
push
repnz
(bad)
call
fmulp
dec
or
dec
stos
into
shl
add
std
add
pop
and
outs
sub
(bad)
(bad)
call
xchg
mov
sbb
sub
inc
int
mov
jne
shl
push
test
mov
aad
hlt
add
in
pop
iret
and
(bad)
(bad)
dec
cwde
lods
or
jo
iret
and
std
push
dec
xor
in
in
jbe
push
mov
lea
xor
add
inc
cmp
jmp
(bad)
jecxz
sub
cmc
and
sbb
test
xor
mov
outs
mov
aam
sbb
push
mov
mov
jbe
add
xor
adc
jmp
ss
sti
mov
les
fcomip
(bad)
mov
xor
pop
arpl
inc
cwde
inc
cmp
push
int
mov
jmp
cmp
(bad)
(bad)
(bad)
fidiv
shr
inc
mov
repnz
push
mov
cli
loopne
fmul
(bad)
(bad)
(bad)
(bad)
(bad)
jns
xchg
push
in
ret
call
enter
in
dec
dec
or
xchg
cmp
add
loop
(bad)
inc
imul
pop
cmp
xchg
sub
scas
cmp
xchg
push
ss
(bad)
dec
cmp
outs
ret
pusha
add
mov
(bad)
push
sbb
push
inc
fdiv
inc
jne
ds
inc
sub
dec
fsubr
(bad)
jmp
cwde
xacquire
mov
fs
inc
aam
mov
ja
les
add
and
outs
shl
std
stos
push
jo
xchg
mov
pusha
ins
aaa
arpl
(bad)
mov
cmp
sbb
enter
mov
xchg
cmp
pop
aad
push
add
lods
lahf
and
dec
loopne
adc
xchg
pop
(bad)
(bad)
call
shl
(bad)
(bad)
pushf
sbb
inc
gs
xchg
dec
inc
aam
add
and
ins
xor
je
(bad)
hlt
call
lods
and
push
cmps
bsr
push
(bad)
(bad)
jmp
clc
push
push
pop
ret
fwait
mov
lea
fidiv
mov
add
xchg
xor
inc
loopne
push
jecxz
pop
push
xchg
xchg
mov
sub
push
sub
xor
(bad)
(bad)
jmp
add
mov
sbb
fsub
sti
fcom
inc
lds
pop
aaa
cld
(bad)
call
push
jge
or
js
xchg
xor
xchg
clc
pop
push
(bad)
mov
dec
cmp
push
cmp
pushf
mov
(bad)
(bad)
inc
mov
mov
push
test
repz
dec
cmp
xchg
xlat
sbb
adc
pop
loopne
(bad)
aaa
sub
(bad)
(bad)
(bad)
jg
lds
xchg
cmp
push
add
push
mov
xchg
sti
(bad)
in
in
mov
and
mov
xchg
push
xor
test
push
jne
dec
jo
cwde
aaa
rol
xchg
sbb
push
cmc
test
rol
sbb
lods
push
mov
test
xchg
xor
inc
dec
cld
jg
lods
xchg
jb
repz
push
inc
sbb
xor
push
popf
sbb
add
xor
jnp
ror
cli
hlt
add
fdiv
in
jmp
push
or
cmp
fs
pop
ror
jae
mov
sbb
cmc
mov
(bad)
jp
lock
jae
stc
cmp
add
jmp
aaa
out
(bad)
(bad)
(bad)
fbld
jg
push
mov
push
ja
outs
xchg
(bad)
loopne
test
(bad)
into
hlt
movs
pop
(bad)
popa
xchg
shl
xchg
(bad)
(bad)
(bad)
inc
pushf
cmp
outs
out
mov
mov
in
adc
call
push
xor
mov
lahf
mov
add
mov
push
mov
sub
sub
push
hlt
in
add
pop
add
dec
xor
dec
or
xchg
loope
jg
xor
lock
push
lahf
mov
and
xor
(bad)
hlt
(bad)
(bad)
mov
cmp
adc
int3
push
int3
das
jae
int
or
int
popa
push
xchg
sti
cmps
lea
rcr
(bad)
dec
xchg
push
jne
fidiv
sahf
cmp
fwait
stc
or
jge
test
dec
xor
js
push
call
daa
push
outs
fdivr
(bad)
jmp
sbb
dec
lea
and
inc
jbe
cmp
outs
inc
mov
sub
(bad)
jg
call
ss
ficom
je
xor
addr16
cs
aad
test
inc
sbb
daa
jns
inc
ja
jl
mov
imul
xor
pop
aaa
in
cmp
cmp
rol
inc
je
pop
ss
retf
(bad)
call
out
aad
stos
xchg
push
inc
scas
push
fxtract
daa
clc
(bad)
call
push
lds
packsswb
stos
dec
lods
pop
cli
adc
mov
(bad)
push
mov
jmp
sub
add
stos
mov
aam
cmp
pop
jmp
push
sbb
loope
xor
aas
test
or
sbb
pop
xchg
mov
jmp
inc
pop
jae
mov
inc
cwde
push
mov
dec
or
call
dec
push
sub
or
push
movs
or
adc
ss
fs
icebp
(bad)
(bad)
call
pop
es
cmc
sub
aam
ds
sbb
adc
div
sub
(bad)
mov
into
push
dec
pushf
fisttp
push
dec
cmp
mov
push
out
clc
(bad)
jmp
xor
test
inc
leave
pop
sub
enter
xchg
ja
cld
(bad)
(bad)
(bad)
std
jne
cmp
pop
mov
push
(bad)
jnp
fist
and
or
xchg
stc
cmp
sbb
cmp
jbe
pusha
out
xchg
daa
cmp
ins
repnz
aaa
mov
sbb
fidivr
push
clc
ja
fwait
pop
jmp
mov
cmps
mov
add
jecxz
outs
cmps
mov
ins
jg
stc
outs
(bad)
(bad)
push
lds
dec
out
pop
push
movs
or
and
cmp
adc
(bad)
jmp
or
test
sbb
sar
cmp
pop
dec
mov
(bad)
out
push
push
ss
movs
(bad)
adc
ds
and
xchg
xor
inc
dec
cmp
int
(bad)
jnp
sbb
fist
ds
repnz
jle
mov
jmp
imul
popa
aaa
jle
jnp
stos
inc
cwde
or
loop
sbb
cmp
and
cs
in
mov
ror
or
fwait
dec
test
xchg
mov
dec
dec
pushf
xlat
nop
gs
pop
loopne
clc
mov
popa
jecxz
mov
fwait
in
jg
or
xchg
int
mov
sbb
cmp
mov
inc
jle
movlps
daa
dec
imul
std
dec
(bad)
call
sbb
js
and
mov
enter
dec
fisubr
bnd
not
jo
das
(bad)
inc
sub
jge
dec
fild
lods
fsub
loop
xchg
cmc
pop
outs
fild
add
inc
es
pop
outs
mov
adc
xor
pop
fnstsw
es
aam
jnp
jmp
ret
scas
dec
push
out
mov
outs
sub
call
push
and
fstp
cmp
repnz
sbb
(bad)
(bad)
cwde
and
or
aam
ins
ds
popf
sub
mov
pop
mov
enter
inc
mov
lea
jecxz
mov
out
pop
daa
jne
dec
icebp
repnz
inc
lods
loopne
or
pop
sbb
cdq
sbb
jge
jne
std
(bad)
dec
pusha
mov
lea
dec
mov
cmp
(bad)
fisttp
or
ja
lock
outs
ja
std
(bad)
jmp
push
inc
cmp
sbb
push
xchg
dec
div
cmps
push
mov
ss
les
lds
(bad)
jg
nop
push
ds
inc
pop
jmp
inc
sbb
in
inc
les
xchg
stos
(bad)
(bad)
dec
es
ins
dec
inc
and
in
push
mov
mov
jmp
ss
adc
(bad)
(bad)
shl
sbb
cld
mov
or
hlt
ins
ficomp
or
push
ins
stos
mov
pop
jge
add
mov
dec
adc
mov
not
inc
push
(bad)
mov
jo
sbb
inc
mul
fcomi
pop
arpl
adc
cld
(bad)
jmp
xor
mov
push
jne
enter
mov
jnp
int3
or
(bad)
(bad)
(bad)
call
mov
jecxz
test
ret
and
clc
in
cmp
adc
xlat
(bad)
inc
sub
dec
(bad)
inc
push
push
fwait
inc
jnp
loope
dec
and
stc
sub
pusha
in
add
aaa
sub
test
sbb
ror
or
jae
sar
pop
rcl
push
xor
add
fcomip
(bad)
jmp
hlt
adc
out
(bad)
daa
repnz
fst
out
mov
test
mov
mov
inc
add
rcl
pop
dec
movs
dec
lods
adc
(bad)
(bad)
(bad)
(bad)
in
push
jecxz
pop
mov
mov
pop
mov
cmp
pushf
sub
xor
(bad)
(bad)
(bad)
(bad)
in
xchg
add
cli
(bad)
aam
xchg
mov
pop
add
xchg
je
push
mov
mov
dec
into
mov
test
mov
jae
ss
hlt
pop
(bad)
dec
fisttp
nop
jmp
(bad)
(bad)
inc
pusha
push
popa
sbb
aad
ja
mov
movs
mov
jae
fs
hlt
push
push
retf
xchg
(bad)
(bad)
(bad)
call
xchg
call
mov
repz
or
cld
push
test
jg
and
call
les
push
fdivp
adc
popa
clc
add
inc
mov
mov
push
pop
xchg
js
mov
outs
test
(bad)
mov
(bad)
call
pop
cmp
and
push
inc
stos
adc
aad
cwde
jp
xchg
repnz
xor
mov
and
fistp
fsubr
sbb
sbb
jp
inc
xchg
into
out
push
jp
cmovae
imul
cmp
mov
sub
sbb
adc
sub
(bad)
call
lods
xchg
shl
jne
and
and
mov
jmp
(bad)
mov
cmp
push
out
cwde
jbe
(bad)
sbb
(bad)
ffreep
sbb
jge
inc
adc
jge
xchg
inc
jae
mov
lods
cmp
dec
les
xor
mov
fcmovnbe
pop
loop
xchg
dec
stos
inc
(bad)
xor
shl
dec
xchg
movs
inc
xor
push
pop
inc
add
xor
test
sti
inc
dec
inc
mov
std
ja
fdivrp
std
sti
test
test
push
adc
das
popa
sbb
(bad)
fisttp
dec
hlt
add
lea
push
lds
(bad)
inc
movs
call
or
add
cs
sub
add
enter
inc
movs
imul
jne
movs
xor
stc
pop
jae
xor
ins
cmc
loopne
mov
repnz
mov
das
inc
sti
call
jne
outs
jbe
xor
inc
dec
sbb
pop
xor
(bad)
dec
js
(bad)
mov
movs
xor
mov
enter
pop
mov
and
mov
sub
sbb
rol
and
mov
sub
(bad)
and
je
fsubr
xor
(bad)
jmp
xchg
jl
mov
cmp
movs
fidivr
sbb
push
(bad)
cmp
push
std
push
adc
jns
dec
push
dec
cmc
push
stos
dec
jne
ret
stc
lea
jge
xor
fwait
inc
cmp
inc
pop
mov
ins
xchg
sahf
stc
and
or
mov
push
inc
cmp
stc
pop
into
sahf
fwait
je
pop
std
inc
push
int
xchg
xor
gs
and
imul
fs
xchg
sub
push
sar
hlt
add
mov
(bad)
(bad)
mov
xchg
imul
xchg
adc
mul
sti
push
pop
shl
push
shr
jb
call
mov
xchg
mov
into
pop
fsubrp
lock
cli
dec
std
jmp
inc
pushf
jae
dec
cld
call
or
cli
inc
push
adc
test
scas
jle
jmp
mov
add
(bad)
fst
cmc
data16
jae
jnp
test
push
xchg
test
(bad)
jmp
dec
or
aas
push
sbb
bound
add
fmul
loop
gs
mov
(bad)
(bad)
(bad)
jl
pusha
into
ss
in
pop
cmp
sti
mov
in
(bad)
call
dec
cmp
div
gs
inc
or
(bad)
(bad)
adc
push
dec
add
mov
xchg
dec
adc
add
dec
jecxz
inc
cmps
inc
(bad)
(bad)
jg
ficomp
fwait
adc
test
pushf
mov
loopne
push
pop
sbb
inc
inc
clc
dec
inc
lea
cmps
ins
cld
sti
adc
mov
sbb
(bad)
cmp
push
cmc
push
and
mov
in
add
adc
test
dec
fild
cmp
xchg
mov
pop
(bad)
(bad)
(bad)
(bad)
jl
pop
je
lods
inc
mov
stc
mov
outs
sbb
lock
sbb
sbb
repz
adc
jg
mov
mov
in
push
lea
(bad)
(bad)
fist
sti
clc
(bad)
cmp
mov
push
lea
(bad)
push
dec
repz
mov
in
arpl
jmp
and
or
(bad)
mov
xor
push
jno
sub
push
scas
push
inc
mov
call
cmp
cmp
xchg
fstp
out
xor
std
icebp
int
add
shl
loopne
(bad)
(bad)
(bad)
jmp
xor
push
(bad)
sub
sti
mov
out
aaa
sub
adc
xchg
(bad)
(bad)
jnp
dec
dec
mov
and
leave
aad
test
dec
or
lea
dec
daa
fxch
mov
loopne
mov
ss
adc
(bad)
push
loop
outs
bnd
adc
sbb
mov
xchg
add
push
add
sbb
sahf
add
xor
pop
cld
jmp
cmps
inc
lea
push
ins
xor
xor
clc
mov
jmp
mov
xchg
sbb
out
and
outs
test
jae
(bad)
(bad)
(bad)
jmp
push
xchg
cmc
inc
(bad)
and
sbb
xor
xchg
arpl
sbb
neg
ret
(bad)
push
fwait
lea
fs
(bad)
in
neg
test
mov
(bad)
jmp
mov
add
fwait
xor
xchg
daa
or
cmps
mov
(bad)
(bad)
push
jl
and
hlt
shl
cmp
fistp
push
cs
xor
sbb
std
leave
dec
aad
inc
cmp
jmp
push
xchg
xchg
sub
cmp
imul
icebp
mov
mov
jp
(bad)
(bad)
(bad)
push
call
pop
outs
add
popa
xchg
stc
fld
xchg
(bad)
(bad)
jbe
ss
and
inc
dec
(bad)
clc
fbstp
aad
dec
xor
(bad)
(bad)
call
push
call
or
fwait
xlat
push
movs
adc
enter
cmp
(bad)
(bad)
call
push
popa
retf
loopne
inc
add
xchg
xchg
pushf
test
imul
xlat
test
(bad)
pop
push
xchg
mov
call
imul
pop
ss
adc
movs
shr
or
push
daa
push
lods
mov
(bad)
pop
(bad)
mov
je
test
in
into
sub
mov
dec
sub
dec
hlt
outs
adc
mov
ins
(bad)
call
ficom
jmp
jle
stos
fdivr
sub
(bad)
mov
lods
push
pop
mov
lods
cmc
lods
push
lods
push
add
inc
push
shl
(bad)
(bad)
(bad)
dec
or
retf
push
cmp
pop
mov
lods
mov
cdq
push
push
mov
(bad)
(bad)
call
mov
fstp
in
push
jb
dec
sbb
mov
pop
adc
jecxz
lock
mov
xchg
loop
in
ret
sub
xchg
sbb
fs
sub
test
xchg
jb
retf
jmp
mov
aam
(bad)
mov
mov
ss
(bad)
(bad)
inc
push
out
jl
cmp
xor
sub
xor
cld
div
sub
adc
xchg
push
adc
push
cmp
(bad)
jg
loopne
push
inc
ins
lods
rep
cmp
int
cmc
push
iret
aaa
popf
xor
mov
(bad)
cld
inc
push
inc
aas
(bad)
jg
test
out
(bad)
repz
or
dec
(bad)
(bad)
push
pushf
cmp
add
xor
or
cmps
fdiv
jg
dec
push
adc
inc
jle
xor
mov
add
mov
pop
jno
ror
add
adc
dec
loope
leave
out
push
fbld
sbb
(bad)
push
adc
std
je
push
adc
sbb
push
pop
xchg
cmc
(bad)
push
je
es
xchg
mov
jo
lea
movs
push
inc
inc
add
outs
xor
cli
mov
push
xchg
and
(bad)
arpl
std
and
dec
clc
mov
in
jge
pop
jg
mov
dec
cli
clc
cwde
mov
idiv
(bad)
jmp
popa
aam
inc
in
jno
mov
loopne
jbe
sub
and
div
(bad)
mov
xchg
or
and
push
and
(bad)
(bad)
(bad)
inc
pop
fs
add
pop
mov
arpl
(bad)
mov
or
mov
push
or
call
or
gs
loop
push
int
or
pusha
inc
es
cld
mov
std
das
sti
or
clc
stos
mov
mov
inc
cmp
inc
dec
jge
mov
sbb
add
push
(bad)
sub
fcomp
pop
shl
aaa
hlt
nop
push
loop
or
or
call
dec
pop
call
(bad)
aas
inc
inc
add
fwait
or
jno
jge
dec
test
arpl
enter
(bad)
dec
xchg
in
loope
dec
fdiv
cmp
inc
(bad)
xor
fwait
dec
mov
fisttp
not
(bad)
(bad)
(bad)
jmp
xor
mov
add
sti
push
pop
fbld
in
loopne
sub
push
imul
(bad)
call
mov
jnp
ins
add
mov
push
ret
movs
pop
jecxz
inc
inc
test
mov
mov
inc
adc
(bad)
push
xor
mov
cmp
rcr
add
push
dec
mov
and
and
test
repnz
adc
dec
cmp
xor
test
cwde
xchg
push
in
mov
lock
inc
(bad)
(bad)
(bad)
(bad)
jle
outs
xor
adc
fimul
ds
out
inc
test
loop
iret
push
xor
cld
inc
adc
and
gs
pop
bound
shl
add
cdq
(bad)
xchg
push
mov
mov
jmp
push
shl
jne
push
sbb
push
or
jns
cmp
mov
aam
push
sbb
addr16
dec
add
push
dec
fdivr
dec
xchg
dec
js
or
xchg
jb
dec
lods
(bad)
(bad)
(bad)
(bad)
aas
ja
xor
dec
pop
dec
mov
int
lahf
shl
dec
sbb
cli
jecxz
fcomi
adc
idiv
stos
sar
fwait
div
adc
inc
push
cmc
pushf
sbb
push
enter
mov
mov
push
jns
enter
mov
dec
mov
bound
adc
lock
xchg
and
jne
add
(bad)
mov
call
outs
(bad)
(bad)
(bad)
(bad)
cmp
or
push
and
out
icebp
push
in
mov
fstp
pop
mov
mov
loopne
jmp
dec
and
and
pop
mov
test
call
jecxz
pop
ds
xchg
push
add
add
(bad)
jg
adc
mov
inc
test
xchg
inc
pop
div
inc
mov
(bad)
(bad)
mov
hlt
rcr
dec
inc
sbb
ss
out
ja
icebp
mov
out
popf
imul
inc
retf
pushf
std
xor
inc
test
add
test
aas
cdq
jecxz
cmp
(bad)
(bad)
call
mov
test
pop
push
jnp
mov
xchg
xchg
mov
mov
sub
inc
(bad)
out
pop
jge
xor
(bad)
cmp
lds
pop
jmp
jmp
add
cmp
inc
xor
mov
div
or
(bad)
jmp
jecxz
icebp
sbb
jno
add
fldcw
inc
clc
jb
pop
mov
jecxz
and
dec
sar
and
xor
cs
jg
std
dec
stc
sub
inc
sbb
sub
xchg
das
retf
ss
movs
add
out
push
mov
fwait
sbb
adc
cwde
xchg
(bad)
(bad)
mov
push
push
retf
add
jbe
xchg
icebp
mov
sbb
dec
mov
(bad)
(bad)
(bad)
push
and
imul
sbb
fcomp
nop
pushf
and
mov
dec
sbb
loop
pushf
push
sbb
sbb
lods
push
mov
(bad)
(bad)
mov
sbb
sbb
mov
scas
int3
mov
loopne
jg
sbb
jnp
std
(bad)
jmp
inc
jp
mov
pop
das
cmp
dec
retf
add
sbb
push
sub
mov
xor
ss
add
call
add
shl
dec
add
inc
in
sbb
pop
add
(bad)
(bad)
mov
adc
pop
ror
cli
popf
or
push
inc
inc
int
bound
jb
jo
dec
sbb
pop
popa
and
div
les
mov
outs
cli
sub
and
push
dec
jmp
lds
jmp
or
mov
mov
mov
sbb
or
(bad)
(bad)
jmp
add
cmc
adc
cmp
mov
xor
lea
hlt
or
jae
(bad)
(bad)
(bad)
in
cdq
aaa
call
add
mov
cmp
push
sbb
loopne
xchg
add
jne
(bad)
(bad)
sti
dec
retf
xchg
dec
inc
adc
adc
loop
popf
fdiv
push
scas
jecxz
das
jge
ss
(bad)
(bad)
dec
dec
sbb
xchg
mov
imul
pop
xchg
loop
push
mov
push
inc
call
xchg
or
(bad)
call
or
sbb
daa
inc
jne
fdiv
es
mov
enter
sub
or
push
adc
loope
or
fimul
clc
ja
(bad)
mov
jmp
loop
jo
or
out
jecxz
add
(bad)
(bad)
call
aas
repnz
mov
dec
ins
sbb
in
stc
dec
pop
mov
push
jbe
xor
icebp
dec
test
inc
ss
jecxz
aaa
push
mul
mov
outs
xchg
sub
cmc
out
ret
icebp
(bad)
call
jmp
cmp
call
mov
or
push
(bad)
fbld
adc
loopne
imul
cmp
dec
arpl
push
imul
(bad)
dec
and
adc
and
js
imul
call
cwde
xchg
jmp
loope
sbb
xchg
push
sub
push
cmp
pushf
(bad)
(bad)
call
inc
ja
jne
ins
add
xlat
ss
xor
(bad)
test
xor
cmp
sub
ins
aas
test
xchg
(bad)
(bad)
(bad)
mov
push
adc
ins
push
repnz
mov
or
mov
mov
sbb
call
int
cwde
ins
pop
aaa
(bad)
xchg
sub
aad
(bad)
dec
fwait
bound
(bad)
mov
add
shl
sbb
cld
inc
scas
xchg
sbb
clc
jbe
push
push
mov
sub
(bad)
xchg
cmp
fnsave
dec
div
push
dec
mov
inc
jbe
(bad)
(bad)
(bad)
cld
cli
ss
pop
or
je
js
js
or
adc
and
(bad)
jp
jg
call
inc
lea
cmc
jbe
(bad)
dec
cli
std
mov
in
dec
das
rcl
xlat
push
adc
jp
(bad)
(bad)
(bad)
inc
lea
push
call
ret
mov
cmp
test
rcr
mov
call
call
and
in
sbb
out
stos
push
pop
ins
imul
xor
push
sar
pusha
jge
movs
(bad)
test
add
cmps
lock
xchg
push
sar
(bad)
(bad)
(bad)
mov
call
or
fild
test
cdq
mov
mov
xchg
sub
xchg
div
mov
add
out
dec
dec
and
jmp
movs
call
xchg
xchg
sub
(bad)
add
in
jmp
mov
xor
mov
(bad)
(bad)
inc
dec
or
inc
outs
sbb
adc
jle
adc
inc
data16
mov
adc
or
cmp
(bad)
mov
xchg
cdq
ret
stos
add
popf
xchg
(bad)
ficomp
pop
ret
sub
mov
xor
(bad)
jmp
cmc
pop
jo
mov
inc
addr16
dec
lea
cmp
popf
adc
or
push
outs
cmp
xchg
test
sbb
sbb
shl
pop
inc
(bad)
(bad)
(bad)
call
add
xchg
add
xchg
std
ror
mov
das
pop
inc
test
clc
push
cdq
xchg
xor
not
adc
mov
mov
mov
or
lods
xchg
adc
fnstsw
sub
test
mov
sti
mov
mov
pop
mov
in
test
mov
sub
sar
dec
hlt
(bad)
(bad)
(bad)
call
xor
or
mov
dec
aad
push
jge
daa
push
mov
cmp
pop
add
movs
int3
pop
mov
xor
std
and
mov
lods
xchg
hlt
(bad)
jmp
mov
jp
cld
xchg
in
inc
sti
inc
mov
mov
mov
pop
lods
jecxz
fs
mov
xor
(bad)
(bad)
(bad)
call
jg
aad
mov
or
mov
icebp
xchg
add
sbb
cmp
mov
call
mov
jb
test
cmp
sbb
pop
and
mov
and
mov
pop
xor
mov
sbb
fs
lock
stos
sbb
cmc
movs
pusha
jae
ja
inc
icebp
xchg
mov
push
lahf
jge
(bad)
(bad)
jmp
fisttp
outs
cdq
daa
mov
sub
mov
outs
pop
dec
loopne
popa
mov
mov
movs
inc
inc
adc
sar
mov
nop
jmp
aas
js
inc
xor
xchg
gs
sbb
jecxz
jmp
adc
pushf
dec
inc
daa
fsubp
test
xchg
scas
adc
cmc
xor
or
mov
lea
in
aas
xchg
lds
inc
sbb
(bad)
(bad)
jg
and
addr16
fwait
cwde
popa
aad
push
jmp
mov
pusha
test
(bad)
(bad)
jmp
lock
stc
push
aam
popa
push
out
call
ins
jmp
test
(bad)
jmp
dec
out
call
mov
mov
jmp
push
mov
gs
mov
outs
adc
jmp
into
outs
xor
imul
ja
or
mov
and
movs
imul
xor
add
push
es
icebp
jg
es
(bad)
(bad)
(bad)
inc
jb
enter
fsub
jmp
add
cmp
add
pop
mov
out
loop
aaa
std
(bad)
push
imul
test
push
mov
add
cdq
fwait
mov
pop
cmp
in
or
cmp
test
loop
dec
pop
fisub
rcl
add
out
repnz
(bad)
mov
(bad)
mov
mov
pop
sbb
push
pushf
mov
(bad)
dec
cwde
outs
jae
or
(bad)
jmp
mov
not
mov
push
lods
add
es
(bad)
int3
shr
push
add
jmp
scas
in
mov
sub
xor
test
in
sub
loope
fild
mov
loopne
dec
enter
cwde
push
pop
sub
outs
xor
ins
lods
mov
(bad)
(bad)
(bad)
jmp
pushf
cmps
js
xchg
pusha
mov
gs
sbb
xchg
shl
call
mov
call
inc
add
into
ja
jno
xor
push
in
or
mov
into
(bad)
jmp
shr
dec
xor
ds
add
add
mov
div
xchg
scas
dec
jae
mov
fs
dec
(bad)
xor
xor
call
and
in
cmp
mov
mov
jge
(bad)
(bad)
push
cmp
push
(bad)
cmp
cs
sub
or
push
addr16
(bad)
inc
lds
mov
cmp
(bad)
inc
pop
xchg
push
cmc
out
xchg
xchg
repnz
in
repnz
jnp
mov
dec
das
cmp
pop
inc
xchg
in
mov
push
cmps
push
(bad)
xor
nop
adc
loope
daa
dec
enter
dec
aaa
daa
or
xlat
sub
into
mov
inc
and
dec
clc
(bad)
dec
imul
imul
cmps
or
fdivr
(bad)
jmp
rol
loopne
idiv
mov
adc
mov
stos
sub
pop
mov
xchg
lods
sar
xchg
adc
push
hlt
lea
lock
in
dec
aas
scas
lea
pop
inc
mov
inc
bound
test
call
dec
les
jle
out
js
sbb
xchg
into
push
xchg
(bad)
(bad)
(bad)
call
jne
cwde
mov
push
mov
sbb
pop
call
outs
add
mov
es
stos
lahf
and
push
inc
fcomp
das
inc
sbb
retf
and
leave
mov
gs
repz
adc
push
xor
aaa
mov
xlat
add
not
call
inc
or
push
cmc
and
(bad)
cmp
repz
and
outs
fsubp
fsub
cmp
(bad)
(bad)
jmp
das
add
fst
jne
out
call
cmps
jge
aad
pusha
out
sub
(bad)
call
pop
fldcw
pushf
mov
mov
mov
push
out
sar
jle
(bad)
(bad)
(bad)
inc
xor
shr
repnz
leave
aad
fild
inc
jb
jmp
(bad)
stos
jg
(bad)
push
push
rol
es
push
out
adc
sbb
fwait
inc
push
ret
jmp
push
mov
mov
enter
xchg
fcomip
jg
sbb
jo
sar
stos
mov
push
and
jp
cmp
(bad)
(bad)
mov
or
jb
adc
stos
mov
xlat
loope
sub
(bad)
push
cmp
jmp
gs
add
stos
shl
sqrtps
sti
fild
mov
xchg
adc
les
(bad)
cmp
sbb
and
aaa
adc
stos
and
mov
jp
inc
add
jmp
push
cmp
out
jne
fcomp
sti
adc
outs
cdq
shl
std
sbb
jmp
arpl
retf
cvtpi2ps
(bad)
push
cli
pushf
inc
mov
mov
loop
push
jmp
call
mov
(bad)
inc
mov
cli
(bad)
fild
inc
into
xor
retf
push
imul
xchg
test
inc
scas
mov
(bad)
dec
fyl2xp1
pop
hlt
add
jge
dec
(bad)
cmp
test
lock
cli
call
clc
aam
bound
inc
pop
mov
(bad)
dec
cmps
mov
sbb
dec
mov
add
dec
inc
pop
pusha
and
adc
jae
(bad)
(bad)
jmp
cli
mov
mov
dec
add
cmp
call
or
cld
cli
fdiv
pop
out
mov
inc
pop
sbb
cmp
call
mov
inc
dec
ins
jae
hlt
aaa
leave
cmp
test
mov
fild
mov
mov
mov
test
dec
adc
call
mov
fcmovnb
pushf
and
movs
fsubr
mov
addr16
mov
adc
xor
sub
inc
mov
dec
daa
or
retf
dec
stc
int
stos
nop
mov
and
movs
cmp
mov
or
test
inc
push
(bad)
(bad)
(bad)
jg
xchg
frstor
cwde
inc
inc
jmp
cmp
mov
inc
add
ret
mov
mov
and
mov
add
stos
xor
shr
push
fst
push
imul
adc
sahf
or
cmp
shl
(bad)
(bad)
jmp
mov
or
arpl
gs
cmp
push
cmp
and
dec
or
pop
and
mov
loop
cmp
push
cld
inc
sbb
je
rol
jg
enter
fdivr
fdiv
arpl
push
ficomp
lods
(bad)
(bad)
(bad)
jmp
xor
jne
adc
add
je
sub
add
repz
lahf
add
cmc
adc
call
push
into
fsub
push
mov
or
(bad)
in
call
(bad)
xor
cmp
cwde
mov
dec
loope
mov
retf
iret
rcr
jmp
push
test
cmp
xchg
popa
rol
(bad)
add
push
push
cmp
inc
(bad)
jg
jmp
mov
int
cmp
push
scas
in
loop
mov
stos
ret
enter
(bad)
jp
dec
and
stos
or
sbb
sbb
mov
mov
mov
(bad)
(bad)
inc
es
imul
mov
inc
outs
sbb
cmp
xchg
push
mov
and
(bad)
jmp
mov
in
(bad)
je
lods
push
outs
push
in
push
and
and
cld
cld
inc
aaa
and
and
xchg
sbb
push
sub
ins
inc
sub
aaa
cld
(bad)
(bad)
jmp
cmps
cwde
push
loop
imul
dec
jmp
push
call
mov
xchg
mul
inc
aas
mov
sub
lods
pop
ins
ss
ret
xor
(bad)
(bad)
(bad)
jg
cmp
pusha
test
movs
or
test
dec
aaa
pop
xchg
cmp
(bad)
dec
into
leave
mov
gs
adc
jecxz
xchg
jne
xchg
out
scas
add
jg
push
jbe
sti
push
enter
lea
push
mov
das
jg
js
mov
jge
mov
add
es
add
dec
fdivp
stos
(bad)
(bad)
(bad)
cmp
push
ins
jle
dec
jge
or
add
not
bound
(bad)
jmp
cmp
pushf
lds
and
add
sub
gs
(bad)
(bad)
inc
push
inc
or
dec
scas
call
and
dec
xchg
or
pop
sbb
(bad)
(bad)
jmp
shl
mov
aam
jg
xchg
dec
aaa
jbe
jns
mov
(bad)
(bad)
(bad)
push
ret
movs
mov
mov
stos
push
sub
xchg
and
arpl
xchg
dec
sbb
dec
fdivr
(bad)
out
adc
dec
je
mov
lock
into
in
shl
(bad)
(bad)
jmp
inc
add
push
ret
xchg
popa
loope
cmp
mov
jnp
inc
(bad)
(bad)
(bad)
(bad)
jmp
cmp
inc
ja
pushf
daa
push
repnz
stos
jg
mov
sbb
or
icebp
pop
ins
sbb
pushf
test
scas
int
mov
(bad)
call
inc
lar
pop
xchg
stos
add
sbb
fdivp
jmp
cmps
add
mov
mov
push
(bad)
(bad)
stc
and
dec
fst
fbstp
inc
sbb
push
fld
jge
popf
dec
and
pop
mov
(bad)
movs
(bad)
(bad)
jmp
push
ss
or
std
dec
jge
jnp
out
pop
adc
xor
sub
mov
or
dec
adc
mov
cmp
adc
adc
mov
add
sbb
sbb
out
jne
jg
ss
(bad)
fild
mov
outs
mov
push
test
xchg
call
icebp
mov
fistp
add
in
adc
loopne
mov
nop
mov
cmp
push
add
(bad)
call
pop
(bad)
test
(bad)
std
mul
lds
into
movs
(bad)
fsubr
aas
(bad)
(bad)
call
rol
loop
jns
sub
lds
aam
hlt
out
sahf
push
pop
ret
cmps
mov
jp
icebp
(bad)
push
call
pop
sub
sti
push
lods
popf
popa
in
add
pop
icebp
call
ins
xor
outs
inc
xchg
sahf
stos
push
(bad)
arpl
push
push
ins
lods
shl
(bad)
(bad)
fcomip
jp
and
push
lahf
sub
mov
jae
adc
cmp
push
fs
(bad)
(bad)
call
jmp
xor
cmp
adc
add
adc
test
ss
adc
movd
jmp
adc
push
retf
lahf
cli
(bad)
push
push
aaa
arpl
bound
fcmovu
popf
test
(bad)
(bad)
(bad)
jmp
or
fcmovbe
and
addr16
jne
mov
or
dec
(bad)
mov
aam
cmp
(bad)
(bad)
dec
xchg
add
dec
outs
or
ror
out
xor
xor
adc
add
test
jnp
cld
push
call
sbb
aas
movs
xchg
add
out
add
fsub
pop
and
(bad)
push
ja
fisttp
js
inc
or
or
lds
jae
inc
jne
jp
jno
pop
jg
mov
mov
jmp
mov
push
int3
ret
outs
sub
cld
fwait
mov
jmp
stos
pop
adc
gs
fcmove
aaa
(bad)
call
cld
mov
jne
push
pop
ins
lds
mov
mov
sbb
inc
popf
cmp
cli
hlt
shl
sub
push
cld
(bad)
(bad)
mov
(bad)
jnp
sub
add
cwde
cmp
and
push
push
sar
add
ds
push
mov
test
xchg
jle
push
inc
mov
mov
sub
xor
mov
int3
push
mov
inc
add
and
jmp
(bad)
(bad)
(bad)
mov
jmp
aaa
mov
jbe
mov
inc
inc
xchg
cwde
ret
(bad)
call
mov
(bad)
mov
(bad)
gs
das
test
aas
stos
mov
cmp
scas
lock
clc
jmp
or
retf
mov
ja
or
dec
cwde
mov
push
xchg
movs
push
sub
call
push
xchg
cmp
xchg
xchg
(bad)
dec
sbb
push
inc
std
add
jbe
ja
les
mov
xor
aaa
fmul
sti
jo
pop
mov
push
in
mov
sub
xchg
in
cmc
fidiv
ficom
xchg
(bad)
(bad)
jns
les
xor
icebp
(bad)
(bad)
mov
mov
cmp
pop
test
and
xchg
pop
popa
(bad)
cli
test
push
jo
(bad)
mov
push
cmp
ret
call
xor
ja
push
ja
pop
loopne
mov
fidiv
pop
ret
mov
adc
test
pop
int3
sbb
aad
pop
or
dec
mov
mov
cmc
rol
ficomp
(bad)
call
and
stos
fisttp
outs
fninit
fld
shr
icebp
clc
(bad)
dec
adc
jo
mov
scas
mov
pop
nop
jo
jmp
ret
mov
fisttp
xchg
pop
stc
or
dec
xchg
(bad)
(bad)
(bad)
inc
stos
cmc
in
xor
inc
sbb
sub
(bad)
push
data16
cld
(bad)
xor
add
ret
call
sbb
dec
jg
mov
pop
dec
ret
mov
jmp
movs
test
retf
xor
sub
pusha
popa
ret
mov
inc
cld
and
fwait
pop
inc
(bad)
(bad)
(bad)
inc
or
stc
daa
sbb
xor
pop
cmps
sub
(bad)
not
iret
out
das
cs
jnp
adc
jns
daa
or
pop
cmc
sahf
mov
xchg
js
inc
xchg
outs
add
dec
or
add
call
and
int
cmp
mov
enter
push
inc
dec
inc
in
and
mov
ins
outs
and
jbe
xchg
or
in
cli
or
push
xchg
ins
mov
stc
xchg
idiv
in
cmc
mov
movs
mov
xchg
mov
mov
shl
cli
jmp
in
push
das
adc
imul
js
retf
test
add
inc
sbb
js
or
lods
jne
mov
fcomip
(bad)
jl
pop
hlt
inc
push
mov
pop
into
push
mov
popa
adc
pop
push
shl
sbb
ficomp
mov
mov
(bad)
push
das
pop
dec
not
adc
iret
repnz
mov
xchg
fldcw
aad
cmp
(bad)
loop
mov
push
lods
(bad)
(bad)
(bad)
call
jmp
movs
xchg
stos
call
ror
dec
fwait
xchg
xor
js
aam
ret
dec
sub
xor
xor
inc
lock
daa
push
sbb
call
shl
and
icebp
(bad)
inc
mov
sub
sbb
add
addr16
cmps
popa
xchg
(bad)
in
(bad)
inc
shr
sbb
das
adc
add
adc
jmp
out
lods
sar
test
(bad)
adc
adc
std
repnz
imul
fs
cmp
add
(bad)
(bad)
inc
push
cmps
jle
lea
div
je
ror
inc
in
call
mov
cli
sbb
or
mov
loop
jp
xor
cmp
pop
pop
div
pop
cdq
dec
pop
mov
aam
pop
and
out
repz
fadd
jb
add
pop
not
inc
into
jecxz
mov
inc
or
mov
and
xchg
and
jecxz
outs
cli
mov
in
and
pushf
adc
push
cli
aad
test
aas
and
imul
jg
into
arpl
or
pushf
pop
jmp
mov
out
push
ja
cli
cwde
xor
pop
int
push
retf
(bad)
(bad)
adc
dec
cmps
cmc
pop
ss
inc
sbb
lods
(bad)
call
rcr
mov
std
adc
js
call
hlt
fwait
(bad)
(bad)
mov
punpckhbw
(bad)
repnz
xchg
inc
or
mov
dec
and
mov
arpl
mov
pusha
adc
call
rcr
or
sbb
sbb
outs
(bad)
push
push
bound
sbb
neg
cmp
sahf
cmp
ficomp
clc
jne
or
dec
and
add
pop
inc
cmp
aad
dec
call
cwde
call
jmp
jmp
jl
mov
mov
pop
es
sbb
movs
push
in
push
mov
or
(bad)
(bad)
(bad)
(bad)
js
sahf
enter
dec
lock
mov
std
movs
mov
mov
mov
mov
sub
cmc
fmul
clc
dec
test
cmp
cld
push
mov
scas
retf
sbb
loopne
in
pusha
frstor
sbb
xchg
lea
(bad)
(bad)
(bad)
inc
sar
ja
mov
mov
cmc
into
xchg
ja
sbb
sbb
fsubr
dec
or
shl
out
popa
mov
(bad)
dec
adc
lahf
sbb
xor
jb
in
stos
fdivr
(bad)
(bad)
call
test
push
fcmove
cli
jmp
push
sub
mul
cmps
jns
xor
cli
jl
rol
rol
test
xchg
cmps
jne
xchg
jno
adc
(bad)
(bad)
fild
daa
jmp
(bad)
js
jp
fsub
jge
dec
ror
xchg
add
(bad)
and
js
inc
cmps
aas
sbb
mov
pop
pushf
dec
pushf
jnp
iret
aaa
sbb
(bad)
(bad)
js
mov
std
cmp
inc
add
xor
xchg
dec
ins
(bad)
aad
push
dec
sbb
jns
add
add
xor
sbb
(bad)
(bad)
dec
push
jmp
cli
add
call
xchg
scas
xor
outs
fistp
(bad)
(bad)
(bad)
(bad)
dec
jg
dec
(bad)
cmp
in
iret
dec
mov
es
pop
arpl
(bad)
cmp
mov
popa
or
clc
jmp
add
lock
sub
(bad)
in
(bad)
dec
push
cmps
(bad)
arpl
shr
xchg
sbb
mov
sub
rol
cmc
cli
outs
call
cmp
adc
rcr
out
cdq
in
jge
rcl
das
push
pop
push
idiv
mov
add
popw
(bad)
mov
jg
mov
(bad)
rol
arpl
aaa
cld
(bad)
call
push
mov
retf
iret
sti
sbb
jbe
mov
jmp
mov
dec
out
data16
mul
jne
mov
(bad)
out
mov
jbe
dec
js
sub
add
add
daa
xchg
outs
cmps
jne
mov
repnz
(bad)
(bad)
dec
cmc
sti
push
adc
into
jp
sub
dec
dec
mov
stc
add
add
xor
cli
call
push
ins
jmp
mov
daa
mov
pop
pushfw
cmc
add
cld
aam
pushf
sbb
test
(bad)
(bad)
inc
adc
pop
js
inc
mov
fwait
neg
call
outs
fimul
jg
fdivrp
push
jg
xchg
inc
ja
shl
jmp
jmp
pop
fadd
add
or
mov
fnstenv
xchg
dec
pop
add
clc
push
inc
mov
adc
cs
movs
into
addr16
(bad)
(bad)
(bad)
jmp
sbb
jo
or
sbb
adc
daa
push
xchg
push
retf
cli
fistp
call
(bad)
mov
bound
jecxz
sti
retf
aam
imul
cli
in
xchg
shl
xor
(bad)
fist
std
leave
mov
push
repnz
pop
dec
std
mov
sub
das
cli
inc
das
xchg
push
inc
jmp
outs
push
dec
aam
and
push
div
jbe
lahf
push
icebp
mov
or
jecxz
add
out
stc
movs
xor
(bad)
(bad)
inc
xor
dec
sets
neg
mov
rcl
mov
jns
sub
mov
push
test
add
data16
sbb
add
jne
pop
sub
mov
add
pop
aam
xchg
push
daa
repnz
(bad)
(bad)
inc
xchg
push
ficom
push
scas
pop
cmp
scas
adc
inc
jmp
push
or
add
dec
inc
rol
std
inc
push
and
sbb
call
push
das
stos
xor
fnsave
mov
and
aaa
out
retf
mov
cwde
mov
add
(bad)
fdivr
(bad)
adc
adc
enter
int
push
inc
movs
or
cmps
and
imul
frstor
xor
pop
imul
sahf
lock
jmp
out
xor
push
lahf
rcr
push
scas
dec
jle
(bad)
out
mov
mov
neg
les
not
mov
add
pop
and
std
push
dec
jmp
ficom
aaa
rcl
push
pop
mov
mov
dec
or
aad
test
jne
bnd
jmp
mov
pop
cli
in
xchg
retf
pop
mov
push
pop
xchg
cmp
push
xlat
(bad)
jmp
add
xor
dec
pop
stc
pop
sub
shl
loop
mov
iret
xchg
mov
(bad)
(bad)
dec
aas
xor
dec
mov
jg
inc
call
adc
loope
sbb
movs
xchg
xchg
imul
mov
jo
mov
xchg
xchg
dec
jno
(bad)
cmp
adc
daa
shl
jmp
das
mov
inc
sbb
pop
adc
xor
inc
js
sub
add
mov
xchg
cdq
jge
add
cli
inc
sbb
cwde
stos
xor
aad
push
adc
mov
ins
inc
ret
(bad)
jmp
mov
sub
repnz
loope
push
push
push
jge
cmp
dec
(bad)
jmp
push
jae
xor
(bad)
jmp
mov
shl
in
inc
dec
mov
lock
(bad)
(bad)
mov
bound
jge
mov
test
pop
lock
mov
cmc
(bad)
(bad)
(bad)
(bad)
jg
push
in
mov
sar
cmp
pop
mov
pop
and
stc
and
gs
sti
in
jg
(bad)
call
popa
pop
add
(bad)
pop
mov
add
call
in
ret
and
mov
popf
xchg
xchg
and
out
popa
cmp
rcl
xchg
pop
mov
push
jecxz
cmc
ror
mov
xchg
stos
(bad)
and
(bad)
stos
mov
inc
addr16
in
push
and
xchg
aam
jne
push
jg
(bad)
out
out
movs
mov
(bad)
mov
int3
pushf
jge
mul
(bad)
(bad)
(bad)
jmp
mov
mov
fbld
jecxz
cmp
das
sahf
and
pop
aam
push
(bad)
(bad)
(bad)
push
push
cmc
jns
mov
fcom
mov
inc
hlt
lahf
(bad)
nop
push
jbe
(bad)
(bad)
(bad)
jns
inc
add
std
retf
push
add
outs
sbb
jge
ror
(bad)
call
cmp
inc
enter
cwde
(bad)
std
mov
aad
(bad)
(bad)
(bad)
dec
test
pop
ret
mov
cmp
ins
xchg
xchg
repnz
cmp
mov
ror
jbe
add
mov
mov
retf
cld
sbb
mov
sub
not
dec
inc
jno
add
(bad)
inc
push
and
mov
lds
div
adc
lods
js
lock
sub
sbb
std
retf
fst
nop
xchg
sbb
jp
mov
jne
xor
inc
cld
in
push
popa
dec
mov
test
pop
xor
out
cld
(bad)
(bad)
jg
fld
mov
or
mov
sub
mov
push
rcr
mov
test
inc
mov
inc
popf
sub
dec
sub
lea
adc
sti
inc
cld
cmp
sti
mov
push
je
xor
or
movs
(bad)
call
mov
gs
add
jg
sub
jae
jg
arpl
inc
push
push
out
mov
mov
mov
sbb
pop
(bad)
(bad)
call
mul
jns
ror
mov
mov
cmp
jmp
cld
jns
(bad)
(bad)
call
mov
and
inc
retf
cmps
sbb
cmp
inc
adc
push
lds
mov
repnz
std
cli
sub
push
fdiv
add
and
(bad)
push
ret
adc
daa
mov
dec
or
mov
push
jp
push
cld
call
dec
push
mov
sbb
ds
inc
aam
or
dec
aam
dec
clc
mov
int3
in
dec
mov
xchg
xchg
and
(bad)
and
cmp
dec
pop
add
sbb
or
adc
sub
jae
jg
dec
std
cli
jecxz
or
pop
cmp
pop
or
push
xchg
pusha
ret
fs
(bad)
(bad)
jmp
add
sub
in
int3
arpl
xchg
xor
std
ss
sub
dec
inc
(bad)
cmp
xchg
dec
lods
mov
dec
(bad)
dec
dec
shl
push
and
nop
mov
xchg
inc
cld
pop
mov
mov
cwde
and
cld
inc
push
(bad)
push
xor
shl
cmc
push
xor
lds
xchg
push
shufps
(bad)
(bad)
stc
mov
in
mov
loope
call
mov
std
popa
fwait
push
xor
clc
(bad)
call
jae
mov
mov
xchg
mov
jo
(bad)
jmp
test
fcomp
jnp
push
xchg
jecxz
imul
push
iret
jg
jmp
aaa
inc
mov
inc
popf
push
push
pop
and
xor
loopne
push
out
push
fwait
pop
adc
cmp
jmp
push
mov
fstp
jecxz
stos
js
mov
fs
movs
push
xor
mov
push
xchg
enter
fisub
xchg
popa
add
js
(bad)
call
stos
std
mov
test
xor
in
shl
add
movs
or
push
adc
push
cmp
cwde
xchg
punpckhdq
cmp
jns
stos
sti
ja
(bad)
(bad)
(bad)
jmp
xor
dec
push
pop
ficom
xchg
xchg
es
inc
xlat
cli
cmp
jmp
xor
push
stos
push
add
xchg
pusha
call
(bad)
(bad)
(bad)
inc
add
sbb
fdiv
push
pop
inc
inc
xor
dec
in
add
cmp
or
inc
loopne
shl
inc
jns
aaa
jo
mov
mov
(bad)
jg
ja
dec
jne
push
mov
js
push
not
push
cwde
(bad)
(bad)
(bad)
inc
inc
(bad)
fnstcw
jp
fdiv
pop
sub
adc
dec
js
pop
mov
sahf
clc
(bad)
jmp
sbb
inc
cmp
and
sub
jmp
ss
jnp
pusha
outs
inc
ficom
int3
fadd
pop
add
(bad)
jmp
jle
test
fs
movs
nop
push
rcr
jbe
jg
(bad)
jmp
jge
popf
jecxz
inc
xor
cmp
add
lock
and
dec
ins
cwde
dec
push
neg
xchg
into
cld
out
and
das
mov
(bad)
and
retf
inc
jne
(bad)
(bad)
jmp
int3
inc
and
in
add
mov
gs
xlat
cmp
fistp
mov
pusha
retf
add
xor
lods
push
aaa
jge
cld
mov
jne
adc
jge
je
pop
cmp
xor
mov
(bad)
call
je
xor
repz
imul
div
mov
jbe
ss
jne
xor
mov
sar
ret
fwait
in
aad
dec
mov
sbb
cmp
nop
iret
test
push
inc
dec
mov
add
xlat
jge
inc
xor
mov
hlt
div
cmp
test
ret
lock
stos
call
dec
xor
mov
jbe
jns
push
sbb
mov
(bad)
call
sbb
and
push
lock
fdivr
add
xor
std
outs
add
mov
jl
(bad)
je
cmp
jg
aad
sbb
aaa
cmp
push
popa
jge
add
aad
jnp
rol
xor
cli
jle
push
xor
dec
adc
push
push
aad
std
mov
jp
clc
(bad)
inc
int
push
mov
gs
test
add
mov
inc
popa
daa
lahf
and
mov
cli
xchg
adc
cmp
sbb
push
push
lea
mov
jg
imul
(bad)
mov
arpl
(bad)
lods
jne
cmp
neg
cmp
not
mov
fdivr
add
sub
fiadd
je
loop
cdq
(bad)
and
cmp
out
pop
cmp
or
sub
(bad)
jg
fldlg2
mov
mov
test
lea
xchg
sar
sbb
aaa
movs
ja
jns
or
push
stos
push
adc
push
inc
fst
retf
or
inc
dec
(bad)
fist
cwde
lods
sbb
jns
push
adc
xor
jo
push
(bad)
mov
(bad)
(bad)
dec
aam
test
add
sbb
lock
(bad)
(bad)
call
popa
jne
loope
jge
sbb
clc
loop
cdq
and
dec
popf
retf
jno
js
call
push
xor
shr
mov
push
inc
scas
mov
aaa
cld
addr16
add
in
hlt
push
aam
cmp
pop
mov
jmp
ret
rol
pop
sub
cli
(bad)
inc
dec
outs
test
cmp
sub
bound
push
dec
call
or
xor
xor
ud0
push
mov
pop
dec
cmp
jmp
in
outs
add
sub
cmp
cmc
and
adc
and
stos
mov
jg
daa
lock
sti
xlat
pop
out
lahf
pushf
(bad)
neg
inc
std
ja
shr
adc
dec
or
test
loopne
addr16
push
adc
xchg
mov
ror
jg
and
sub
xor
cmc
mov
imul
hlt
dec
adc
adc
cwde
cli
jg
adc
inc
add
xor
(bad)
dec
jne
jo
xor
push
cld
(bad)
cmp
std
xor
jmp
sbb
fst
push
add
daa
loopne
mov
ss
sahf
ret
pop
cmc
call
shl
xchg
loopne
add
in
in
add
int3
xchg
call
sbb
pop
test
cmp
or
cmc
mov
aam
sub
inc
pop
pop
mov
xor
sub
push
stos
jnp
sub
(bad)
aad
ds
lahf
retf
clc
clc
loop
std
(bad)
ret
mov
jns
cmp
jnp
sub
and
ins
and
lock
or
aam
ins
mov
aaa
out
(bad)
fisttp
push
push
fldenv
imul
mov
fldenv
je
inc
out
(bad)
(bad)
and
mov
or
dec
nop
ror
add
xor
mov
jo
pop
mov
lock
outs
mov
enter
mov
jecxz
inc
(bad)
(bad)
fcom
sub
push
call
adc
popa
(bad)
adc
xor
adc
sub
push
(bad)
mov
shr
pop
mov
or
clc
mov
inc
and
or
pop
ss
lea
(bad)
(bad)
mov
mov
ins
and
sahf
mov
cli
xlat
pop
hlt
mov
jle
xchg
fwait
inc
cli
push
cli
test
(bad)
ret
mov
out
xchg
sti
(bad)
in
out
add
fisub
out
and
xor
(bad)
(bad)
popf
in
mov
mov
scas
sub
fcomp
inc
jb
push
push
icebp
push
or
mov
lods
mov
sbb
ja
jmp
(bad)
sbb
xchg
out
movs
lahf
aas
xchg
jae
push
xchg
jnp
inc
push
ss
movs
aam
pop
add
lock
inc
or
sub
or
mov
jg
cmp
mov
mov
outs
adc
out
mov
add
ret
loopne
stos
gs
call
fcom
dec
fwait
(bad)
out
push
xchg
push
mov
xchg
sub
movs
mov
clc
popf
adc
fdivr
dec
mov
repnz
test
add
mov
pop
ret
std
xchg
in
pop
mov
aam
dec
sub
xor
mov
movs
pop
cmp
xor
cmp
xchg
push
jl
add
adc
inc
loop
mov
fisubr
in
jnp
(bad)
push
cwde
aam
jge
adc
retf
pop
jge
mov
xor
mov
(bad)
mov
jmp
xor
shl
xor
xor
dec
dec
mov
icebp
xchg
leave
cmc
(bad)
neg
mov
(bad)
jmp
in
xor
pop
mov
pushf
jno
daa
(bad)
fcmovu
dec
jle
pop
adc
dec
out
das
adc
aam
pop
sub
and
and
(bad)
stc
mov
(bad)
push
jle
push
pop
jbe
(bad)
jmp
cwde
out
fs
imul
mov
xor
push
jmp
ror
xor
and
jmp
lahf
sbb
adc
pop
mov
into
dec
pop
jo
add
ret
(bad)
xchg
addr16
call
push
mov
pop
cmp
fisubr
lods
push
cmc
add
in
cmps
and
iret
test
push
lods
lahf
jmp
(bad)
jg
push
js
adc
aam
int3
mov
or
cmp
or
dec
call
(bad)
fst
push
nop
jb
mov
inc
lods
mov
cli
and
inc
cld
ds
shl
dec
add
mov
xchg
pop
push
adc
push
loopne
test
push
mov
and
dec
jne
cmp
pusha
rol
mov
lods
clc
repnz
mov
loop
cmp
retf
adc
mov
jp
push
dec
(bad)
(bad)
(bad)
(bad)
inc
mov
inc
addr16
sahf
mov
inc
clc
xor
cmp
fisubr
sub
(bad)
inc
xor
js
cmps
pop
movs
call
lock
cld
pop
jp
or
push
out
mov
pop
push
mov
(bad)
js
aaa
lods
jo
(bad)
out
mov
mov
jge
hlt
out
mov
das
mov
jne
mov
xor
and
mov
(bad)
(bad)
test
sbb
rol
int
out
and
xchg
push
mov
dec
(bad)
mov
(bad)
retf
cwde
mov
inc
enter
sub
pop
ret
shl
out
lea
pop
movs
push
sub
push
nop
add
push
sar
inc
jl
inc
lods
cli
daa
or
push
int
pusha
push
pop
dec
adc
neg
push
clc
cmp
(bad)
call
aam
adc
sub
and
in
aaa
cmp
jecxz
arpl
(bad)
(bad)
call
ins
out
leave
rcl
psubq
in
dec
imul
scas
(bad)
bound
push
cmp
mov
mov
adc
movs
popa
inc
popa
shl
(bad)
jg
inc
bound
dec
lock
dec
jmp
jp
mov
mov
and
retf
add
jp
xor
(bad)
(bad)
(bad)
jg
repnz
xchg
lea
cmp
mov
out
push
add
pop
cld
sbb
mov
mov
std
mov
jmp
dec
cld
inc
push
cld
cmp
dec
mov
(bad)
call
adc
call
push
xchg
gs
pop
xor
mov
sub
or
dec
xchg
or
pop
sbb
in
and
(bad)
(bad)
call
call
fimul
and
cmc
(bad)
sub
(bad)
int3
rcl
ret
jne
cmp
fbld
test
push
into
pusha
mov
xchg
mov
mov
fnstsw
arpl
pop
ret
into
mov
cmc
sbb
sbb
jmp
lods
dec
pop
ret
lahf
fidivr
sub
sub
(bad)
cmp
dec
shl
and
add
xchg
test
sub
loop
mov
push
push
or
pop
xor
push
xchg
mov
dec
sub
push
push
mul
sahf
and
rol
mov
pop
push
adc
shl
xchg
hlt
mov
mov
clc
pushf
mov
xchg
(bad)
(bad)
inc
pusha
(bad)
mov
bound
cdq
les
stc
jecxz
out
(bad)
(bad)
call
ds
adc
xchg
retf
jl
mov
pop
xor
loop
sbb
jmp
lock
dec
push
(bad)
jmp
and
cdq
lahf
enter
inc
pop
icebp
sub
jl
dec
mov
jnp
xor
pushf
movs
mov
test
call
fdivr
es
cmp
or
daa
xor
xor
(bad)
(bad)
push
jns
in
jp
jne
ss
rcl
inc
aad
cmp
xchg
xor
out
fs
adc
xchg
and
xchg
outs
xchg
das
inc
fistp
or
jae
test
mov
sbb
add
ins
pop
add
mov
pop
ins
add
push
in
xchg
sub
call
pop
sub
jecxz
(bad)
jg
fsub
dec
shr
push
xor
pop
xlat
int
ins
xor
popf
pop
add
mov
dec
les
mov
mov
jg
sub
lock
push
sbb
outs
pusha
sbb
(bad)
call
push
loope
push
mov
and
mov
sbb
(bad)
test
dec
test
(bad)
(bad)
(bad)
jle
outs
and
test
push
popa
or
js
lds
emms
add
popa
ret
(bad)
jg
ret
mov
jg
pop
jnp
je
and
mov
out
cs
(bad)
(bad)
mov
dec
dec
xor
sub
inc
or
out
leave
pop
fcmovb
out
in
sbb
(bad)
(bad)
inc
add
sub
sub
dec
imul
out
push
lds
(bad)
push
jmp
or
neg
sub
inc
cmp
xor
test
jl
dec
outs
mov
jmp
aas
jle
daa
and
rol
cmc
(bad)
call
mov
push
and
call
inc
call
cmps
mov
call
ja
pop
xchg
(bad)
jg
or
dec
adc
stos
pop
xor
mov
mov
mov
shl
jecxz
clc
inc
leave
sub
rcr
mov
pop
jb
jae
aad
cmps
lock
(bad)
fidivr
xor
lahf
xor
mov
dec
jecxz
mov
test
(bad)
jmp
adc
sub
sub
pop
loopne
ss
cmps
mov
loop
movs
fmulp
in
pusha
enter
adc
push
mov
fcmove
call
popf
lods
inc
rol
xchg
mov
ins
paddusw
fwait
popa
(bad)
(bad)
push
mov
outs
dec
or
sub
or
push
jno
jb
lahf
inc
sbb
jle
pusha
lahf
cmp
xchg
into
pop
ja
push
into
les
lds
sub
fiadd
stos
adc
sbb
out
mov
mov
adc
mov
ja
inc
mov
in
sar
xchg
ds
cli
inc
mov
mov
dec
scas
shl
cwde
xchg
jmp
in
int
cmps
mov
xchg
inc
jnp
sar
movs
mov
outs
ret
jg
jmp
mov
repz
leave
xor
in
add
dec
jns
xor
pop
xor
add
and
setae
mov
inc
push
call
xchg
xchg
sub
lds
cmc
jg
mov
dec
or
sub
mov
cld
or
xchg
push
or
mov
(bad)
jg
stos
ins
mov
cmc
ss
pop
sbb
or
cmps
or
add
stos
ins
loop
loopne
and
loope
mov
movs
mov
lds
call
sub
adc
add
nop
fs
test
mov
(bad)
mov
push
inc
add
mov
stc
outs
loope
jg
sub
inc
test
cmp
scas
adc
fs
and
clc
or
adc
mov
pushf
adc
xor
(bad)
mov
and
test
out
push
mov
(bad)
(bad)
(bad)
dec
and
lahf
ret
ja
out
dec
adc
cld
xchg
int3
xchg
mov
pop
pop
or
into
test
pop
mov
aas
(bad)
out
and
xor
lds
call
cmp
loope
loop
mov
dec
or
dec
jecxz
stos
in
dec
outs
cmps
(bad)
(bad)
call
jae
adc
sub
push
xchg
inc
cld
stos
ja
shr
mov
jbe
ins
cmc
aas
mov
xor
sub
das
lods
and
sbb
mov
shl
lds
lea
push
xor
jo
pushf
lods
cld
es
neg
call
sbb
push
in
loope
sar
add
pop
retf
les
adc
mov
pushf
test
and
push
lods
pop
sar
lods
sti
pop
imul
ret
cmp
(bad)
aam
inc
std
call
(bad)
out
push
mov
cmp
fst
sbb
or
adc
retf
inc
int3
cmc
les
sbb
jle
adc
adc
cmp
and
ret
clc
sub
(bad)
push
fucomip
mov
sub
mov
ja
sbb
or
sbb
test
jo
mov
es
xchg
pop
jg
(bad)
sti
test
mov
push
xchg
movs
loopne
pop
cmp
push
pop
add
les
mov
(bad)
cmp
jp
sbb
stos
loop
clc
(bad)
movs
int
pop
lods
enter
add
mov
dec
adc
pop
adc
mov
add
jmp
dec
sub
add
int
rcr
aam
adc
and
out
xchg
retf
ror
sub
(bad)
(bad)
jg
stos
ss
pushf
lods
and
test
int3
mov
push
jg
das
inc
mov
test
outs
clc
mov
push
mov
push
lods
push
mov
(bad)
push
mov
vpsubd
cmc
push
sub
shr
cmp
ucomiss
or
jg
sub
lock
or
jmp
xor
iret
push
inc
fwait
xor
dec
xchg
sbb
(bad)
xor
lods
jno
mov
jle
pop
out
adc
rcl
loope
add
add
jnp
(bad)
fiadd
rcr
std
mov
sahf
leave
repnz
into
daa
aam
fcmovnb
add
mov
hlt
mov
aam
mov
(bad)
mov
lods
or
jle
lds
int3
jl
inc
retf
cmp
mov
popa
xlat
(bad)
stos
(bad)
(bad)
jg
or
pop
add
xchg
ftst
das
sti
je
adc
fcomp
pusha
or
rcl
(bad)
inc
cld
cmp
or
retf
sbb
sub
pop
pushf
daa
mov
sbb
test
pusha
pop
jmp
cs
sub
or
scas
push
mov
call
repnz
lods
fwait
xor
outs
add
pop
mul
xor
adc
popf
add
jmp
out
fsub
xchg
cmp
or
mov
jo
push
icebp
(bad)
inc
adc
icebp
push
xor
dec
lock
xchg
dec
adc
and
icebp
or
jmp
or
popa
sbb
sub
or
xchg
inc
adc
(bad)
and
jo
(bad)
adc
dec
call
sti
jmp
or
mov
cmp
jg
mov
cmps
xor
jp
jae
inc
aad
(bad)
jmp
jo
or
mov
and
push
lods
call
shl
shl
fwait
ror
into
adc
dec
dec
lds
jo
rcl
aad
jg
cmp
icebp
add
mov
mov
adc
popa
hlt
sbb
mov
call
jl
mov
loope
addr16
jl
pop
pop
(bad)
test
call
int3
and
(bad)
into
mov
or
pushf
fwait
cmp
icebp
jmp
push
jbe
xor
lea
pop
inc
pop
popf
int3
fxch
adc
lods
aad
jecxz
mov
or
call
scas
jb
outs
(bad)
push
outs
scas
cmp
fistp
add
ja
les
icebp
add
jmp
std
jg
mov
ss
pop
cli
outs
aam
inc
dec
cli
mov
cld
aaa
cli
(bad)
movs
sbb
ds
(bad)
(bad)
jg
cmp
(bad)
xor
dec
pop
xor
fcom
add
or
push
(bad)
mov
push
cmp
pop
adc
hlt
mov
pop
dec
mov
mov
pop
inc
push
jbe
push
xchg
inc
mov
pop
jecxz
dec
(bad)
xchg
mov
jmp
cmps
sbb
push
test
bound
mov
pop
or
xor
call
shl
mov
popf
xchg
jo
lods
sub
aaa
scas
(bad)
call
xor
mov
mov
lahf
test
xor
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
adc
pop
cli
lock
dec
cmp
cld
and
xchg
jg
jae
(bad)
pop
sub
(bad)
ds
pop
jmp
cdq
pusha
dec
dec
jae
loop
in
out
in
outs
cmp
enter
shl
iret
inc
or
push
sub
fcom
outs
sti
add
and
jnp
clc
ds
aam
(bad)
xchg
push
cmp
sbb
push
shl
add
fs
pop
or
jae
jae
in
dec
scas
test
cmp
ss
shl
retf
fcomip
call
popa
xchg
or
add
and
xor
call
add
push
or
cmp
ret
ins
mov
mov
dec
scas
outs
adc
jmp
adc
(bad)
popf
scas
in
and
mov
enter
and
fiadd
(bad)
pusha
xor
cld
adc
(bad)
(bad)
jg
inc
aas
popa
add
jp
dec
loope
dec
mov
data16
push
pop
shr
clc
fbld
dec
lea
imul
push
jle
std
cld
jp
popf
ins
add
outs
test
mov
data16
dec
out
enter
idiv
push
retf
aas
test
in
mov
mov
dec
mov
mov
sub
(bad)
clc
and
inc
addr16
int3
push
(bad)
into
int3
sub
int
mov
cmp
mov
mov
out
ja
test
pushf
mov
pop
inc
enter
push
(bad)
call
mov
add
sti
arpl
xchg
sti
adc
jl
in
movs
enter
mov
and
(bad)
(bad)
jmp
pop
in
into
jns
sub
cdq
cs
xchg
loope
or
mov
icebp
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
or
mov
push
ja
imul
or
ret
mov
jbe
fdivr
pop
ret
adc
add
cmp
mov
(bad)
jmp
ds
add
imul
mov
adc
and
outs
push
sbb
gs
mov
or
push
pop
mov
ss
adc
daa
into
sub
inc
sbb
xchg
int3
jno
sub
push
int3
dec
push
and
inc
push
icebp
cmp
and
jp
test
adc
repz
cmp
shl
push
(bad)
(bad)
fnstenv
sbb
mov
push
pusha
and
cmp
test
add
es
dec
adc
jb
data16
fdivr
ret
inc
cmp
nop
xchg
fcomip
cmp
pusha
jbe
cmp
mov
sbb
dec
add
sub
push
aaa
push
fcmovnb
daa
int3
retf
jbe
fiadd
mov
fwait
push
adc
or
jnp
jecxz
ins
loopne
dec
and
sbb
iret
int
retf
sar
hlt
jbe
fs
loopne
and
mov
stc
in
bound
lods
ja
mov
sbb
das
and
mov
out
sahf
(bad)
(bad)
fisttp
enter
stos
dec
stc
dec
hlt
call
je
jbe
inc
xchg
mov
inc
push
enter
jl
or
push
jns
sub
or
cmp
rdpmc
jmp
dec
(bad)
cmp
inc
scas
lods
lock
fucomip
fsubr
ds
gs
jl
dec
cmp
and
test
jmp
out
call
das
clc
outs
sahf
add
retf
sbb
inc
repz
pop
call
lea
push
imul
lods
jbe
lds
and
fwait
push
aaa
(bad)
imul
cld
cmp
fmulp
xchg
out
ret
pop
scas
cs
lods
ins
into
ss
into
add
scas
ror
mov
dec
push
sbb
dec
lods
sbb
test
xlat
fsub
(bad)
push
loope
xchg
jbe
jne
adc
stos
mov
fmul
out
(bad)
dec
imul
xchg
sbb
stos
inc
cli
popf
push
and
add
jmp
mov
aam
lahf
add
adc
jne
les
adc
adc
adc
pop
dec
ins
loopne
dec
loop
add
loopne
(bad)
(bad)
jmp
xchg
fidivr
ins
adc
pop
arpl
add
in
pop
xchg
mov
jmp
push
sub
xchg
ret
(bad)
call
mul
hlt
sbb
fldcw
jp
sbb
pop
std
(bad)
jmp
rol
jle
cmp
aam
mov
cld
xchg
ins
adc
clc
add
jg
fwait
es
adc
aaa
shr
mov
sbb
fiadd
pop
in
push
lahf
xchg
dec
scas
ret
and
push
retf
pop
or
imul
fisttp
pop
je
lods
stos
mov
inc
ins
imul
pop
jmp
sahf
cmp
pop
or
test
dec
pusha
sbb
push
inc
push
std
(bad)
call
int
xlat
mov
(bad)
sbb
nop
data16
adc
dec
fst
(bad)
call
movs
add
arpl
inc
imul
aam
pushf
je
and
pop
add
in
mov
mov
pop
mov
(bad)
and
adc
jg
js
pop
xchg
ret
rcr
or
(bad)
or
pop
sub
test
fs
dec
push
adc
fnstenv
add
in
bound
sbb
push
(bad)
mov
cmp
or
rep
jo
inc
aas
jmp
cwde
mov
aad
and
stc
inc
push
cmp
popa
jae
in
adc
jb
mov
adc
sar
xchg
movs
push
loopne
ds
dec
xchg
imul
retf
les
cmp
xchg
std
mov
jmp
pop
and
jge
adc
rol
aas
and
or
xchg
(bad)
int3
or
jmp
sti
popa
add
sbb
and
push
push
push
pop
mov
shr
ror
popf
fbstp
imul
dec
icebp
pusha
and
sahf
aas
mov
mov
aas
cmp
aaa
mov
fdivp
mov
mov
imul
ret
jo
aaa
popf
into
pop
or
aas
loop
ins
cli
mov
pop
mov
stc
mov
mov
add
mov
fbld
repz
faddp
sbb
jmp
lds
pop
in
(bad)
call
inc
dec
dec
mov
jne
pop
or
xchg
lds
(bad)
(bad)
in
mov
cmps
int3
add
jmp
loopne
fisubr
cmp
jp
mov
pop
out
xor
lods
std
mov
xchg
movs
call
loope
mov
pop
sub
push
fwait
hlt
xchg
jmp
adc
mov
pop
pop
push
mov
jmp
std
jo
bound
mov
cmc
(bad)
call
retf
lahf
fcomi
in
adc
mov
adc
adc
mov
mov
pop
hlt
(bad)
(bad)
cmp
out
pop
xchg
pop
fild
dec
out
dec
xlat
sbb
ja
xlat
ins
add
jmp
adc
inc
test
sbb
jmp
inc
fild
arpl
mov
lahf
jbe
int
xchg
pop
imul
push
sub
mov
fwait
clc
(bad)
dec
fild
cwde
sti
pop
dec
scas
push
jle
pop
inc
sbb
push
ds
push
(bad)
mov
pop
mov
mov
or
inc
and
in
xchg
sbb
sub
syscall
cwde
cs
jge
xor
lahf
(bad)
jmp
jp
adc
add
rcl
nop
ins
fcom
dec
std
(bad)
jmp
shl
int3
sbb
mov
sub
mov
out
mov
or
or
xor
pop
jbe
cmp
(bad)
call
fidivr
js
dec
jge
fadd
into
cs
mov
dec
in
xor
(bad)
jmp
aas
mov
fsubp
call
dec
les
in
and
jmp
add
aam
push
pop
mov
dec
or
push
aad
(bad)
in
push
aas
pop
mov
(bad)
sub
push
or
out
push
push
out
jp
pop
rcr
push
pop
loopne
cmp
mov
std
(bad)
(bad)
(bad)
(bad)
jg
out
out
xchg
neg
lahf
fnstsw
cmps
imul
les
mov
(bad)
(bad)
jmp
div
fidiv
dec
cmp
adc
mov
push
xchg
(bad)
(bad)
jmp
(bad)
pusha
add
popf
inc
fcom
lods
jecxz
cmps
sbb
stc
jne
cmp
stos
jg
dec
std
xor
mov
gs
cmp
or
adc
sub
call
mov
pop
cdq
jb
or
dec
int
xchg
js
jecxz
rol
cwde
sub
inc
and
aaa
cld
(bad)
inc
adc
sbb
sbb
jmp
mov
cmp
rcr
jle
or
sub
sar
add
cmp
jmp
fadd
or
mov
mov
popf
(bad)
fst
lock
adc
pop
jle
sbb
aaa
dec
ret
xchg
int
cmp
call
push
movs
outs
push
lods
jp
xchg
pop
lds
and
cmp
fcmovne
sar
(bad)
cmc
cmps
stos
push
push
xchg
sub
or
out
inc
cmp
std
(bad)
call
popw
sbb
addr16
dec
fistp
add
add
mov
sahf
push
mov
adc
shl
daa
movs
stos
cdq
sti
jp
pop
rol
push
ins
fwait
jecxz
std
(bad)
fdivr
and
dec
loop
sbb
shr
inc
call
cmp
(bad)
jmp
xchg
pop
add
movs
repz
fidiv
jne
pusha
aam
xor
inc
mov
add
mov
and
sar
aas
int3
int3
out
cdq
outs
aas
arpl
inc
stos
das
dec
stos
mov
jl
push
jge
hlt
(bad)
(bad)
jmp
jo
sub
sbb
push
add
in
adc
loop
pusha
and
(bad)
push
mov
adc
fcomip
sub
sbb
imul
push
daa
add
pop
and
test
call
(bad)
in
test
mov
ds
sub
ficom
jmp
sub
xor
iret
hlt
sub
and
sti
outs
pushf
mov
(bad)
mov
in
outs
lock
ret
and
push
mov
clc
sbb
or
xchg
mov
add
xor
mov
loope
(bad)
dec
add
inc
pop
into
mov
xchg
stos
repnz
cdq
inc
xor
push
jbe
mov
test
inc
clc
mov
ins
xor
or
dec
lahf
pusha
mov
dec
pop
das
lods
loop
aam
cmp
dec
sbb
pusha
mov
inc
cli
add
cmp
rol
aaa
mov
(bad)
sub
test
movs
pop
in
xchg
sti
mov
or
mov
jmp
cmp
xor
shr
push
and
fwait
mov
adc
jmp
outs
push
push
popa
push
retf
fmul
imul
(bad)
lods
das
fisub
stos
push
dec
into
call
shl
call
xlat
inc
and
movs
cwde
and
daa
jmp
aaa
scas
hlt
inc
or
ins
adc
call
push
push
push
mov
mov
mov
mov
pop
outs
mov
dec
mov
sbb
add
adc
push
(bad)
(bad)
jg
or
mov
inc
pop
add
xchg
pop
pop
dec
cli
lods
(bad)
(bad)
sbb
lea
pop
inc
pop
mov
dec
jp
fcmovne
xor
adc
push
cmc
(bad)
inc
cmp
in
push
(bad)
cmp
(bad)
ds
clc
clc
call
ret
mov
imul
popa
fstp
pop
xchg
fsubrp
mov
es
pop
xchg
aam
and
xchg
(bad)
dec
mov
fwait
mov
dec
push
push
in
and
test
push
xchg
imul
clc
push
sbb
scas
lea
dec
sbb
jmp
je
pop
(bad)
mov
retf
jg
pop
push
dec
cmp
add
dec
bound
popf
rcr
push
sub
sub
call
ja
in
std
mov
add
jmp
mov
and
(bad)
jge
add
adc
and
scas
ins
add
mov
gs
push
fwait
xchg
mov
inc
rcr
ins
dec
sbb
and
dec
dec
loop
(bad)
icebp
push
cmp
sbb
jecxz
call
and
aam
aam
or
push
jnp
jnp
xchg
movs
mov
mov
clc
ins
std
or
into
scas
xor
pushf
push
inc
add
dec
inc
ja
push
jmp
mov
jg
push
mov
dec
pop
ds
mov
sbb
(bad)
(bad)
(bad)
mov
sbb
lds
or
ss
sub
xchg
nop
sub
clc
test
stos
(bad)
(bad)
jmp
and
jns
and
xchg
cmc
jmp
jbe
xor
(bad)
jmp
inc
push
jno
dec
es
pusha
imul
jbe
in
cmp
mov
sar
loopne
sbb
fistp
retf
dec
movs
imul
ins
enter
inc
sti
js
dec
add
vunpcklpd
hlt
mov
or
ret
push
imul
and
mov
dec
push
sub
jmp
push
daa
pop
fadd
add
cmc
out
repz
fwait
in
pop
in
xchg
jl
cs
(bad)
(bad)
push
enter
cmc
fdiv
xchg
popa
fs
into
lahf
mov
jmp
leave
(bad)
pop
nop
jbe
call
loope
call
sar
or
clc
xchg
cld
xor
cmps
dec
pop
cmp
(bad)
(bad)
jmp
in
cmp
or
imul
test
mov
inc
les
fbld
dec
adc
add
mov
jbe
outs
int
outs
jae
call
test
mov
push
(bad)
aam
ficomp
jmp
xor
pop
movs
stc
cwde
test
add
(bad)
jmp
iret
lods
arpl
jo
retf
jno
nop
dec
pop
sbb
or
popa
jmp
pop
add
(bad)
dec
sub
mov
add
shr
(bad)
(bad)
out
call
fcomi
retf
push
or
xor
movs
sub
adc
add
cs
push
pop
inc
cmps
iret
dec
test
dec
lock
fiadd
(bad)
adc
and
sub
in
(bad)
call
in
push
inc
pop
rcr
push
imul
push
test
fild
addr16
ins
clc
fwait
gs
in
mov
xchg
add
cs
sub
jmp
nop
das
push
les
push
scas
out
sub
mov
push
and
(bad)
ss
aas
adc
jmp
pop
rcl
jne
pop
mov
xor
pop
inc
rcr
push
push
test
pop
add
mov
mov
scas
push
mov
rcr
sub
adc
sahf
add
cmp
(bad)
(bad)
fisub
sub
sub
and
jmp
cmps
addr16
clc
(bad)
(bad)
inc
jmp
mov
cs
inc
add
ins
adc
cmp
jle
jae
cwde
push
jae
(bad)
push
jb
popf
xor
push
jecxz
daa
mov
call
inc
and
push
cmp
mov
cmp
in
add
(bad)
(bad)
dec
ror
pop
mov
pop
inc
out
jae
and
adc
sub
jecxz
(bad)
push
fbld
scas
ins
lods
outs
ja
mov
push
fild
push
aad
enter
inc
fld
cmc
push
int3
lods
sbb
pcmpgtb
in
(bad)
jmp
outs
dec
shl
push
ret
mov
int
ret
arpl
test
add
and
cmps
mov
and
ret
dec
mov
fs
js
pop
popf
adc
aam
pusha
jge
les
loope
push
popf
inc
push
and
ror
fisub
es
mov
(bad)
(bad)
(bad)
call
add
popf
leave
and
scas
(bad)
popf
add
adc
or
shl
out
jle
dec
mov
and
stos
mov
aas
and
mov
(bad)
(bad)
dec
sub
cmp
sar
cmc
mov
bound
mov
in
add
out
xchg
idiv
pop
mov
pop
imul
cs
ins
adc
retf
ret
mov
(bad)
outs
cli
stos
pop
sub
dec
(bad)
cli
mov
mov
push
bound
movs
rcr
ds
retf
pop
jecxz
test
cld
scas
es
aad
mov
fnsave
xlat
inc
or
jl
imul
sub
imul
(bad)
add
retf
(bad)
(bad)
jg
add
pop
enter
repz
mov
sbb
mov
xchg
xor
jmp
dec
stos
std
fcomi
add
ds
cmp
sbb
mov
mov
xchg
outs
push
add
or
shl
in
scas
out
add
or
jecxz
push
or
adc
ja
xor
inc
les
repnz
cmp
cmp
mov
adc
icebp
or
xor
sbb
loopne
add
enter
fsub
inc
sahf
test
loopne
jno
(bad)
fcomip
(bad)
or
mov
pop
mov
pushf
and
push
bound
dec
js
xchg
push
clc
(bad)
(bad)
call
clc
mov
ss
and
nop
imul
sbb
ds
rcl
add
xchg
ffreep
call
ins
(bad)
js
pusha
push
push
cmp
hlt
xchg
mov
sub
push
push
jmp
pop
jne
test
(bad)
push
outs
and
jmp
jl
adc
dec
adc
dec
mov
dec
test
cli
jp
sbb
(bad)
es
cld
out
movs
jmp
fdivr
(bad)
(bad)
(bad)
jmp
and
(bad)
pop
imul
xor
mov
mov
inc
shr
call
cmovo
mov
into
and
ss
cdq
int
in
push
les
(bad)
mov
push
ret
imul
and
inc
inc
sbb
call
sbb
inc
inc
xchg
sbb
outs
pop
sub
nop
and
in
cmp
rcr
cmp
(bad)
out
clc
(bad)
fnsave
or
repz
cld
popa
jnp
std
gs
in
jmp
imul
in
call
cmc
mov
stos
sbb
mov
cmp
test
mov
test
pusha
push
int
xor
jmp
rcl
jmp
mov
lock
xchg
or
cmp
add
scas
adc
or
test
je
dec
fdivr
xchg
jmp
ret
fwait
pop
xchg
mov
cmps
xor
sub
push
adc
mov
add
retf
hlt
adc
jmp
cmps
cmp
das
adc
jle
cmp
mov
ss
test
push
cmps
cmp
mov
cdq
mov
call
js
xchg
in
push
dec
loopne
dec
push
pushf
and
(bad)
(bad)
dec
repz
cmp
and
jmp
aad
add
adc
leave
xchg
pop
and
or
jne
or
in
test
fist
cdq
in
mov
(bad)
mov
push
lock
dec
mov
push
add
push
test
mov
and
sub
(bad)
(bad)
out
sahf
js
stos
push
cs
pop
sahf
ror
xchg
mov
sub
stos
test
(bad)
(bad)
call
scas
push
das
mov
pop
les
sbb
dec
retf
push
ja
jae
adc
push
retf
pop
cmc
(bad)
call
mov
xchg
icebp
adc
outs
lods
ror
test
adc
or
xchg
add
xor
add
lds
and
mov
(bad)
(bad)
(bad)
inc
mov
aaa
icebp
mov
jl
ret
out
int
mov
loope
cmp
popa
dec
add
inc
fcom
and
lock
xor
fucomip
rcl
stos
in
push
scas
cmps
test
inc
inc
jmp
loop
loope
in
call
les
mov
sub
test
xor
mov
fwait
inc
stos
loopne
push
(bad)
push
lock
(bad)
jmp
mov
popf
shr
jl
jno
push
pop
add
xchg
movs
(bad)
aaa
std
add
xor
dec
mov
movq
(bad)
(bad)
mov
push
add
les
pop
pusha
xchg
or
lods
jae
mov
paddd
cli
xor
pop
dec
adc
leave
pusha
(bad)
mov
leave
ucomiss
sbb
hlt
addr16
fisub
(bad)
(bad)
(bad)
(bad)
jnp
xor
test
scas
fstp
xor
cmps
push
lea
cmp
inc
mov
push
ins
sar
(bad)
call
movs
push
int
mov
inc
pop
ins
das
outs
cmp
rol
scas
ret
sub
xor
sub
outs
stos
jb
adc
in
fadd
push
pop
mov
sar
call
lea
jns
fld
outs
fstp
mov
fs
into
mov
icebp
outs
mov
mov
or
inc
call
dec
cld
nop
mov
(bad)
sbb
std
jmp
aas
mov
adc
xor
bound
pop
imul
(bad)
jg
sub
mov
jmp
mov
jmp
loopne
js
add
mov
pop
push
pop
aam
cli
repnz
jb
cli
mov
xadd
push
sub
cmps
pop
fiadd
out
mov
sub
out
jmp
call
pop
xchg
mov
push
mov
cwde
add
xchg
cli
dec
leave
xor
push
lds
xchg
test
mov
push
test
push
(bad)
dec
neg
sahf
jge
lds
pop
pop
mov
and
mov
leave
fadd
jg
loop
loopne
call
(bad)
out
test
mov
cmp
rol
push
xor
pop
cmc
add
not
and
mov
and
stc
cmc
xor
add
sub
or
aas
inc
or
jg
rcr
fisubr
fadd
inc
cmp
or
outs
xchg
sbb
lea
outs
(bad)
scas
jne
sbb
inc
adc
push
jp
scas
jp
(bad)
(bad)
(bad)
jnp
cmp
cmp
push
jo
jns
popa
push
adc
dec
movs
xlat
xchg
outs
les
arpl
ja
mov
pop
cmp
loope
or
jp
inc
lea
fcomp
fcos
(bad)
or
pop
inc
cmp
sub
mov
add
test
push
pop
inc
addr16
(bad)
call
loop
lahf
mov
fsub
mov
push
sub
das
mov
mov
std
inc
std
fst
repnz
out
xor
jae
jg
xchg
pusha
add
(bad)
call
jmp
ins
sti
sub
bound
mov
mov
mov
jg
mov
mov
jmp
lds
adc
neg
popa
and
add
in
dec
mov
jmp
adc
push
call
push
call
or
into
outs
in
sbb
(bad)
nop
loopne
movs
add
pop
push
aam
add
in
data16
pop
(bad)
(bad)
cmp
and
out
jmp
idiv
iret
jle
les
add
(bad)
jmp
mov
sbb
xchg
fdiv
jne
add
and
inc
xor
mov
call
mov
lahf
hlt
add
(bad)
inc
dec
hlt
stos
stos
call
jl
xor
adc
(bad)
push
lods
dec
sbb
inc
and
xor
test
mov
ror
mov
and
sti
mov
jb
add
mov
call
xor
jl
imul
loopne
loopne
jae
cmp
movs
loope
pop
mov
dec
sti
and
cmp
add
jmp
setp
push
call
sar
inc
mov
enter
xchg
dec
dec
push
sti
inc
push
lds
xlat
test
scas
loop
push
sub
push
cdq
stos
cmp
fild
mov
std
call
push
xchg
xor
pop
xchg
pop
sub
and
jg
mov
aas
jl
inc
icebp
inc
mov
call
mov
shr
xchg
call
sti
mov
xor
sub
sbb
add
jbe
cmp
mov
mov
fsub
or
sbb
xor
adc
ror
and
(bad)
call
iret
sub
jl
or
lds
faddp
cli
(bad)
ds
inc
inc
dec
dec
push
lock
jns
int3
adc
mov
fadd
mov
mov
jmp
fidivr
push
fdivr
retf
daa
and
ja
into
outs
pop
add
lea
mov
add
aas
inc
jmp
pusha
push
(bad)
pop
pop
mov
and
lds
shl
cmp
jnp
push
push
inc
enterw
sub
add
shl
push
shl
push
das
and
or
pop
fist
mov
into
cmp
dec
mov
addr16
adc
or
pushf
cdq
scas
mov
jmp
fbstp
xchg
push
sbb
popa
sbb
movs
xor
pop
dec
or
dec
or
ins
in
mov
dec
pop
ret
(bad)
int3
add
das
push
mov
pusha
and
cmc
mov
(bad)
(bad)
dec
mov
sub
ja
mov
mov
sbb
sbb
xchg
push
adc
add
cs
in
adc
cdq
ficom
pop
jge
mov
test
(bad)
out
cld
jg
add
jmp
mov
mov
add
dec
int
(bad)
(bad)
dec
adc
lods
or
mov
or
sbb
ret
call
or
jle
bound
jmp
pop
mov
jmp
mov
stos
xor
xor
xchg
test
inc
jnp
push
pop
sub
mov
xchg
retf
jbe
or
int
xor
enter
out
jbe
fild
push
cmp
loope
pusha
addr16
jmp
mov
loop
and
loop
ret
sub
dec
cli
ffreep
sbb
shr
push
jb
scas
jae
mov
sub
test
cmp
loopne
or
push
fild
add
or
add
push
in
repz
xor
lock
fistp
and
mov
dec
xor
xchg
mov
pop
mov
outs
cmp
adc
mov
(bad)
leave
imul
push
pop
push
mov
ins
aaa
lds
add
and
jmp
pushf
mov
stc
bt
aaa
pop
mov
xlat
out
mov
in
test
ss
pusha
fdivrp
pop
cld
dec
cld
in
out
push
(bad)
fidivr
xor
es
rol
push
lock
test
ins
jo
xchg
and
call
adc
and
jnp
pop
ins
jl
mov
jmp
sub
out
call
(bad)
lahf
xchg
out
push
ret
les
stos
xor
fild
dec
test
add
xchg
xor
jmp
mov
adc
xchg
push
and
xchg
ins
(bad)
(bad)
(bad)
mov
mov
js
cmp
xchg
cmp
das
ss
cmp
cs
mov
sub
data16
je
jbe
mov
add
push
dec
aaa
and
or
xchg
inc
out
add
sbb
jmp
imul
add
dec
add
inc
movs
sub
les
loopne
jbe
mov
hlt
icebp
mov
cmp
outs
das
rdpmc
add
das
mov
rcl
or
sbb
fild
adc
push
mov
or
inc
rol
(bad)
mov
mov
pushf
and
and
mov
jmp
mov
bound
xor
daa
(bad)
sahf
ja
push
rcr
add
xor
ret
inc
mov
sbb
cmp
mov
cld
(bad)
(bad)
call
pop
and
popf
mov
adc
out
shl
add
clc
jg
inc
jmp
fs
pop
lds
(bad)
push
pop
push
mov
ret
pop
in
fistp
sbb
cld
mov
lods
in
or
(bad)
mov
or
enter
pop
lods
mov
or
and
push
cmc
mov
sub
xchg
es
adc
lahf
rol
outs
scas
adc
mov
push
mov
xchg
push
add
dec
jb
movs
xor
dec
pop
idiv
call
jmp
mov
adc
iret
call
xabort
sti
fistp
repz
scas
jbe
sbb
in
shr
and
outs
(bad)
movs
or
jmp
sub
cmc
daa
gs
fidiv
push
stos
dec
loop
in
icebp
dec
popf
(bad)
(bad)
mov
jmp
sub
jo
enter
es
jmp
xor
loopne
aad
outs
jne
das
into
jmp
rol
rol
mov
pusha
jmp
cld
jp
(bad)
mov
cmps
fs
cmps
or
stos
out
or
and
int
jmp
jp
fdivp
xor
inc
mov
mov
bound
mov
je
dec
inc
mov
jbe
cmp
cmp
xchg
and
outs
cdq
sub
(bad)
fbstp
outs
adc
xchg
jmp
bnd
popa
mov
add
and
lods
jg
add
xchg
stos
stos
in
arpl
mov
add
xchg
dec
mov
and
out
inc
aam
retf
jno
push
mov
rcl
loope
inc
pop
inc
test
xor
aaa
fucomip
leave
adc
(bad)
(bad)
(bad)
push
mov
aam
sub
ds
cmp
push
dec
jmp
inc
jecxz
push
inc
dec
pop
test
std
mov
mov
pop
sub
mov
fcomp
push
sub
rcr
nop
movs
ds
inc
sub
xor
or
sub
call
jl
f2xm1
mov
jle
cs
inc
fcmovne
clc
das
mov
pusha
fstp
int3
fidivr
and
bound
inc
add
clc
cli
inc
jmp
mov
fs
aad
loope
fnsave
(bad)
(bad)
(bad)
call
cvtpi2ps
adc
scas
pop
and
push
imul
lds
jl
fdivr
(bad)
(bad)
call
in
outs
push
outs
mul
sti
sub
call
fs
ja
mov
inc
repnz
add
mov
add
and
sub
add
push
dec
jmp
enter
mov
push
push
out
pop
sub
or
loop
mov
retf
sbb
scas
dec
outs
cwde
pop
cli
mov
stos
add
adc
fwait
or
pop
add
neg
jl
dec
mov
cld
outs
(bad)
scas
xchg
lods
cmp
add
aaa
and
icebp
fimul
ret
dec
test
jg
sbb
(bad)
jg
xor
mov
or
inc
pop
ret
gs
xor
or
mov
xor
cmp
and
jg
mov
(bad)
mov
adc
dec
xor
test
dec
call
pop
push
cld
call
push
(bad)
jo
fadd
dec
mov
(bad)
xchg
es
sbb
xchg
(bad)
aaa
jl
sub
pop
js
sub
std
(bad)
mov
mov
mov
int3
loope
into
jbe
pop
mov
repnz
ja
stos
fwait
lods
in
mov
and
scas
jo
dec
jo
jmp
pop
adc
fnsave
loopne
shl
jg
mov
cmc
rol
int
jmp
xor
ficomp
xor
push
add
jmp
shl
cmps
pop
dec
mov
dec
ds
sbb
mov
mov
sbb
gs
jmp
jl
enter
test
(bad)
call
(bad)
call
inc
mov
lahf
and
mov
sti
add
or
push
add
and
loope
retf
lds
das
and
cmp
dec
lea
push
jno
and
adc
sbb
cmp
in
push
test
mov
test
(bad)
jg
cdq
cmp
mov
ret
jnp
fisttp
dec
aas
popf
and
pushf
mov
pop
sub
or
jge
cdq
in
cmp
(bad)
(bad)
inc
and
aam
pop
int3
add
in
daa
adc
test
pop
xchg
xor
mov
jmp
cmps
in
mov
sub
retf
bnd
enter
aam
jmp
sbb
loopne
jmp
push
aas
pop
dec
icebp
jg
inc
aaa
jecxz
js
dec
fsub
call
iret
adc
dec
add
jg
outs
mov
mov
es
dec
jg
js
xchg
(bad)
(bad)
mov
cmps
or
dec
sbb
addr16
or
stos
ja
aam
neg
sahf
push
pushf
cmp
(bad)
(bad)
(bad)
jmp
inc
inc
lods
and
das
ror
nop
push
repz
mov
jecxz
div
inc
push
ret
ror
mov
ficomp
in
push
mov
cld
xor
dec
push
mov
imul
inc
(bad)
(bad)
jmp
pop
stos
adc
mov
in
sbb
sbb
(bad)
mov
xchg
cmp
popa
adc
(bad)
(bad)
std
jp
adc
(bad)
mov
and
cmps
cli
mov
sub
inc
mov
ja
mov
add
loopne
and
movs
fdivrp
test
outs
adc
sbb
jmp
mov
and
(bad)
fdiv
fld
mov
pushf
ror
sar
mov
jmp
fyl2x
add
push
push
xor
fild
ret
xor
(bad)
cli
mov
rep
not
add
mov
test
sti
jecxz
add
pushf
sub
cmp
add
cmp
mov
call
inc
jl
mov
(bad)
mov
push
xor
xor
cmp
ret
mov
or
(bad)
movs
mov
dec
push
stos
ds
push
jbe
cld
sahf
les
fs
shl
das
mov
cmp
(bad)
retf
jns
push
out
mov
loopne
cld
pop
pusha
dec
loopne
jns
hlt
je
cli
and
or
les
and
jbe
pop
loop
clc
(bad)
push
sbb
in
xor
repnz
push
call
dec
sar
call
xor
xor
or
jg
push
scas
sti
xchg
pop
push
jecxz
pop
or
jns
(bad)
dec
hlt
xor
hlt
or
push
ins
or
sbb
jno
cld
test
lods
(bad)
jle
cmc
add
sub
xor
adc
jmp
and
clc
(bad)
call
cld
inc
arpl
(bad)
push
cli
xchg
mov
cmp
ins
dec
ja
jmp
test
push
sub
and
std
rcr
dec
cmps
push
std
(bad)
inc
sbb
ror
aas
mov
sti
sub
(bad)
sub
(bad)
call
fs
cld
mov
and
sbb
mov
jns
(bad)
jg
add
mov
xchg
add
push
mov
pop
inc
cli
push
mov
adc
ins
add
cwde
push
mov
ret
pop
shl
test
fwait
sub
and
aad
in
add
(bad)
outs
mov
mov
cmp
mov
mov
imul
sbb
xchg
push
repz
call
(bad)
push
mov
pop
adc
je
test
hlt
push
mov
xor
adc
out
test
ds
jmp
and
xchg
(bad)
(bad)
push
mov
stc
addr16
sub
push
ficom
add
or
pop
xchg
(bad)
jg
aaa
std
call
dec
cmc
ja
inc
jb
test
ja
call
call
out
jbe
cmc
shr
ret
lea
inc
arpl
pop
into
hlt
push
inc
adc
(bad)
in
adc
loopne
adc
jge
pop
test
outs
and
xlat
mov
xor
add
int3
adc
in
add
jmp
mov
mov
cmc
push
cmp
(bad)
cmp
jge
jne
movs
pop
pop
push
mov
test
fdivr
adc
jge
movs
jp
inc
push
or
std
mov
test
jge
loop
clc
add
adc
sub
cmp
lds
xor
clc
test
pushf
movs
lods
in
je
sub
mov
ret
and
xchg
dec
cmp
div
fnsave
push
push
(bad)
std
add
mov
cmps
mov
out
loopne
and
jne
in
hlt
xor
cmp
cld
call
(bad)
cdq
leave
pop
sbb
call
dec
jbe
sti
mov
sbb
(bad)
pop
cmp
popa
xor
popf
add
jnp
cmp
jmp
inc
jne
pop
stos
inc
out
rol
xchg
inc
or
rol
call
icebp
xchg
js
fucomp
jne
cmp
ret
(bad)
std
pop
xor
nop
push
xor
in
jbe
ja
jbe
xor
call
or
jbe
aam
xor
xor
inc
and
(bad)
fbld
adc
jmp
push
jecxz
fidiv
mov
mov
push
mov
pop
mov
aaa
test
js
add
test
sub
push
cmp
fs
add
mov
inc
hlt
mov
fild
dec
(bad)
cmp
sbb
adc
inc
sbb
or
mov
rol
or
jb
push
aaa
push
jp
adc
call
jl
lods
add
jl
mov
push
je
jmp
adc
mov
addr16
xor
pop
mov
jge
call
shr
std
(bad)
push
es
cmp
sahf
fidiv
aas
test
fmul
mov
nop
idiv
ds
mov
stc
add
or
adc
xor
and
rcl
(bad)
cwde
test
test
mov
jbe
dec
(bad)
adc
imul
arpl
cmc
js
mov
(bad)
call
xor
pop
loope
hlt
push
push
and
push
adc
or
push
jl
scas
clc
mov
ds
sar
stc
adc
test
(bad)
(bad)
(bad)
dec
ret
(bad)
lahf
or
in
mov
(bad)
clc
ins
daa
neg
hlt
aas
sub
retf
sti
fisub
dec
out
clc
(bad)
call
mov
not
add
shl
push
in
or
sub
push
mov
outs
cli
adc
jne
lods
dec
mov
pop
enter
(bad)
jg
pusha
xor
test
les
push
das
and
push
sub
pop
ja
push
pushf
add
mov
sbb
clc
xchg
mov
into
sahf
mov
cmp
fstp
push
jmp
sub
cmc
clc
(bad)
call
enter
cld
jg
mov
push
fild
iret
sub
dec
mov
mov
aaa
enter
push
aas
shl
data16
repz
push
pushf
jns
pop
push
ja
std
hlt
shr
jl
inc
xchg
scas
adc
(bad)
(bad)
(bad)
(bad)
mov
out
imul
test
mov
sbb
or
jg
div
push
aad
inc
sbb
int
pop
pop
xor
sub
sbb
mov
add
(bad)
(bad)
inc
and
xor
pop
loopne
addr16
sbb
push
out
sbb
outs
push
retf
add
jmp
jmp
aas
jno
clc
mov
pushf
adc
xchg
out
jb
out
retf
sbb
in
outs
call
nop
lock
dec
fidivr
push
les
or
hlt
xchg
pop
scas
push
and
jg
popf
rol
and
mov
cmp
fcomp
mov
cmps
(bad)
(bad)
push
fwait
out
or
and
adc
add
mov
(bad)
jmp
jle
pop
(bad)
(bad)
bound
or
mov
hlt
loopne
into
clc
xlat
cmp
adc
(bad)
inc
clc
daa
sbb
add
iret
data16
mov
xchg
clc
xchg
(bad)
(bad)
(bad)
(bad)
jns
mov
cli
stos
(bad)
and
js
clc
mov
jge
or
mov
cmp
xchg
(bad)
call
pop
std
cmps
xchg
imul
adc
icebp
cli
out
fcomp
call
cmp
pop
cmp
inc
arpl
sbb
loopne
jno
and
out
addr16
sbb
std
aaa
adc
test
inc
into
test
push
or
jg
inc
xchg
jl
jne
std
push
jbe
arpl
xchg
mov
and
jne
outs
test
fcomip
inc
stc
adc
sbb
mov
inc
xor
add
gs
(bad)
fcomi
(bad)
adc
shl
les
pop
mov
xor
lds
test
cmp
mov
fisubr
cdq
mov
loop
outs
jbe
mul
std
js
pop
cmp
xchg
push
cmp
(bad)
mov
xor
adc
sbb
test
cmp
sbb
pop
adc
call
fcmovu
xor
sbb
push
rcl
xchg
xor
repz
jmp
xor
test
push
mov
xchg
adc
inc
ss
es
(bad)
call
cmp
sbb
inc
xlat
test
xchg
xchg
push
aaa
xor
cmp
sar
dec
jno
mov
(bad)
fnstcw
push
cdq
jo
push
add
nop
fsub
push
xchg
rcl
inc
jae
adc
adc
aam
mov
sbb
push
adc
sar
sub
mov
jb
mov
xchg
and
mov
xchg
loopne
fiadd
call
cmp
xor
adc
daa
push
jg
in
mov
push
sbb
stc
sbb
inc
pop
popf
dec
js
lock
(bad)
(bad)
(bad)
out
clc
call
mov
imul
sar
xchg
into
dec
mov
xor
or
ins
add
or
mov
je
outs
rcr
leave
outs
cmp
inc
(bad)
(bad)
(bad)
mov
test
shl
xchg
pusha
loopne
adc
jmp
ins
loop
xchg
test
push
je
cmc
adc
popf
add
movs
jecxz
sbb
ins
mov
jne
lods
ins
or
jmp
call
mov
shr
mov
cli
lock
and
mov
jo
cmc
dec
or
mov
xor
std
mov
int3
movs
cmc
jae
pop
push
xor
adc
movs
sbb
jl
jmp
xor
bound
std
mov
stos
and
je
pop
ins
fs
sbb
pop
mov
or
ffreep
(bad)
hlt
lahf
mov
mov
fbstp
pop
or
xor
dec
push
daa
movs
jmp
adc
ins
mov
sub
cmc
hlt
je
sbb
and
xchg
lds
mov
cmp
jl
dec
cwde
in
std
repnz
jle
xchg
xchg
mov
dec
shr
adc
shl
dec
mov
stos
cmps
jge
xchg
jl
hlt
lock
pushf
lahf
pop
(bad)
(bad)
(bad)
fsub
cld
or
mov
aaa
test
mov
pop
cmp
sbb
jmp
(bad)
jne
or
gs
push
mov
fild
mov
push
add
add
and
add
cmp
dec
adc
gs
aaa
xchg
out
ja
mov
xchg
jge
jle
(bad)
(bad)
jg
loope
movs
arpl
pop
hlt
dec
sbb
fs
or
scas
jne
enter
(bad)
(bad)
cmp
xor
test
out
mov
sbb
movs
sub
mov
jg
rcl
or
and
fs
sbb
mov
fs
jmp
xchg
aas
ins
ins
mov
cmp
neg
push
jne
cmp
lock
xor
retf
pop
and
cli
enter
sbb
adc
sar
push
(bad)
(bad)
jl
mov
inc
cli
xchg
ja
mov
mov
sbb
div
(bad)
(bad)
jmp
sub
dec
cmc
mov
or
pop
xchg
mov
mov
(bad)
inc
adc
push
test
and
fs
pop
test
jmp
adc
and
mov
dec
pushf
fs
neg
lock
mov
std
(bad)
(bad)
dec
mov
movs
mov
and
ins
mov
imul
test
ja
sub
push
aad
xchg
add
adc
xlat
xor
dec
adc
test
ds
xor
aaa
push
lods
mov
scas
jne
adc
sar
mov
pop
outs
ds
mov
neg
jns
push
fiadd
or
outs
ret
(bad)
cmp
xor
fwait
xor
lods
sub
push
sbb
dec
int3
xchg
aam
jmp
ss
cs
lods
add
(bad)
aaa
std
fild
mov
sbb
adc
pop
dec
add
daa
pop
inc
(bad)
sbb
je
cmc
shl
pop
mov
mov
jne
movs
ds
pop
cmc
call
frstor
ret
and
inc
je
sbb
outs
dec
pop
je
add
dec
or
aad
xor
mov
mov
outs
(bad)
push
xor
std
loopne
jge
cmc
sbb
push
xchg
mov
mov
add
or
mov
jge
dec
je
or
dec
xchg
fmul
(bad)
(bad)
push
mov
cmp
fs
mov
lea
je
adc
or
outs
aaa
mov
and
(bad)
aad
call
repnz
pushf
or
push
mov
call
loopne
or
xchg
aaa
scas
nop
stos
xor
mov
sbb
pop
mov
push
(bad)
and
push
cmc
(bad)
mov
test
or
div
lods
add
adc
ins
adc
js
cmps
jne
je
xchg
lock
ja
inc
adc
mov
and
mov
bound
test
pop
cmp
adc
mov
add
rcl
(bad)
(bad)
sub
xchg
std
sub
fs
je
std
xor
clc
(bad)
(bad)
jg
jb
addr16
add
movs
and
ins
fist
js
sbb
pop
cmc
in
mov
or
mov
jle
test
and
jnp
ins
aaa
dec
sti
(bad)
push
jne
fnstenv
jne
cmp
test
inc
push
cmp
mov
adc
mov
mov
jne
or
bound
in
mov
push
outs
mov
or
jne
jo
and
cmp
dec
test
sub
out
je
outs
mov
test
std
fcomip
call
add
push
adc
inc
shl
adc
inc
ins
fcomip
or
jbe
adc
sbb
add
jge
retf
add
(bad)
jmp
dec
xor
outs
mov
xor
bound
jmp
mov
rol
add
lods
nop
add
mov
adc
pop
test
test
jl
mov
loope
mov
fs
and
mov
xchg
test
xor
out
xor
out
clc
mov
std
fadd
sub
mov
sbb
adc
jl
ja
mov
ds
jecxz
xor
xor
(bad)
mov
add
pop
mov
xchg
sbb
add
sahf
(bad)
ja
sub
mov
cdq
mov
mov
(bad)
(bad)
call
sahf
add
sbb
retf
sub
jge
into
(bad)
std
int
add
inc
std
call
xchg
sbb
push
add
adc
adc
in
stos
pop
sub
adc
sbb
dec
xor
xor
(bad)
mov
ins
scas
jge
ficom
test
and
pusha
inc
ficom
jg
pop
out
mul
(bad)
call
sbb
xchg
mov
pop
push
call
mov
add
(bad)
inc
rcr
je
add
xchg
int3
test
jnp
addr16
fisubr
mov
mov
cmc
push
mov
fwait
push
dec
(bad)
sbb
mov
fmul
jnp
mov
aaa
push
xchg
cld
adc
sub
mov
sub
adc
add
jmp
xor
loope
push
test
je
mov
data16
imul
lea
or
xor
adc
add
scas
loop
cs
jg
out
clc
scas
(bad)
cmp
loope
mov
sub
dec
dec
repz
sbb
(bad)
pop
cmp
retf
cli
or
dec
mov
inc
mov
fadd
cli
in
pop
cmp
cdq
add
(bad)
cli
cmp
in
pop
adc
xor
call
adc
mov
das
xor
fld
push
xchg
push
sbb
dec
stos
out
pusha
xor
lock
mov
mov
cmp
push
or
hlt
pop
test
and
add
add
inc
jo
mov
sbb
inc
pop
call
cmc
xor
sbb
retf
std
stos
neg
jns
nop
jge
cmps
das
sar
mov
mov
mov
pop
shl
cwde
xor
into
das
ficom
cld
int3
mov
jmp
imul
fisttp
add
xchg
ss
pop
outs
xor
inc
idiv
cmp
xchg
(bad)
(bad)
jg
xchg
adc
inc
je
je
fs
loope
repz
sub
fdivr
or
xchg
in
movs
clc
mov
jmp
mov
cdq
outs
jge
mul
dec
std
lea
retf
mov
jg
outs
fnsetpm(287
or
repz
scas
std
aam
pusha
cmp
sub
ja
je
loop
clc
scas
dec
jl
scas
mov
popw
std
xchg
ds
rcl
cs
movs
mov
scas
push
cld
jb
inc
mov
js
cmp
or
xchg
ret
(bad)
(bad)
jmp
sub
xor
and
push
cmp
jns
mov
inc
jp
neg
mov
fnstcw
xor
pop
xchg
ret
xchg
mov
xor
xchg
xor
or
lods
xchg
hlt
movs
and
ss
popa
bound
cmp
aad
mov
and
add
or
sbb
jns
and
test
fdivp
inc
imul
cmp
add
xchg
xchg
leave
jbe
inc
stos
cmp
jge
mov
push
jl
out
ret
dec
(bad)
pop
pusha
loop
inc
pop
push
mov
mov
push
movs
inc
(bad)
dec
jl
clc
xlat
mov
popa
mov
outs
test
bound
add
push
lods
in
and
jb
(bad)
cs
(bad)
(bad)
push
jb
aad
int3
leave
mov
cmp
inc
mov
je
or
mov
inc
cld
(bad)
mov
(bad)
je
mov
adc
dec
ret
je
and
or
das
dec
mov
cmp
sbb
test
jmp
xchg
popa
jl
popf
pop
lods
out
je
jne
inc
das
cmp
outs
or
test
hlt
inc
cli
out
je
push
out
cli
mov
jno
or
cmp
xor
cmp
xor
inc
mov
push
mov
addr16
cli
xchg
adc
(bad)
xor
push
cmps
and
ds
jg
stc
outs
xor
stos
inc
cli
(bad)
lods
cmp
mov
sub
cli
dec
adc
inc
data16
js
std
retf
inc
sar
pop
adc
mov
mov
and
je
push
lock
adc
or
mov
mov
ins
mov
xor
div
mov
sub
in
mov
dec
sub
push
sub
call
rol
mov
bound
rcl
adc
mov
clc
pushf
adc
stos
mov
ja
xor
mov
cmps
bound
sub
stos
das
neg
clc
cli
fsubr
lods
arpl
and
ins
ret
out
mov
hlt
xchg
mov
or
sbb
hlt
jns
mov
clc
add
inc
hlt
and
cld
popa
test
gs
pop
xor
and
std
adc
mov
call
int3
cmc
xor
pop
leave
or
cmp
add
adc
xchg
dec
jle
sti
ja
sub
call
(bad)
fbld
fisub
cmp
ins
mov
popf
out
(bad)
icebp
or
push
jbe
mov
rcl
xor
inc
rcr
movs
push
ret
sbb
dec
mov
test
(bad)
scas
stos
clc
out
in
js
push
out
fsubr
sub
mov
add
dec
mov
mov
jmp
ret
je
push
xchg
loopne
jno
dec
and
(bad)
(bad)
push
shl
movs
adc
mov
xor
lods
pop
xchg
not
(bad)
cmp
jecxz
jmp
jmp
mov
add
cmc
jno
ficom
scas
inc
pop
stos
shl
nop
sbb
sar
jg
cld
ins
std
dec
(bad)
pop
hlt
jbe
mov
stos
dec
cld
push
mov
mul
mov
test
stos
and
mov
fstp
sbb
jg
je
test
xchg
jl
je
jmp
add
sub
loopne
(bad)
into
fstp
pop
les
cmp
call
xchg
test
mov
je
xchg
cld
call
or
sub
shl
das
pop
(bad)
push
mul
jae
or
call
push
sbb
je
adc
or
int3
pusha
cmp
jmp
cwde
into
test
je
xchg
jae
mov
cld
(bad)
call
mov
mov
inc
xchg
xchg
mov
sbb
fdivr
inc
xor
jne
cmp
fild
lods
cmp
mov
pop
and
adc
mov
add
mov
jne
cmps
mov
mov
clc
out
jbe
xor
(bad)
stc
pop
cmp
mov
cwde
mov
adc
movs
xor
cld
inc
int3
pop
test
xor
jbe
movs
imul
jmp
imul
cmc
lods
jnp
pop
fld
std
jo
(bad)
(bad)
call
fs
pushf
jl
mov
mov
xchg
loope
jp
cmp
mov
pop
add
dec
enter
inc
mov
mov
jae
xchg
adc
mov
je
mov
outs
mov
push
mov
push
gs
rol
and
pop
rol
push
push
cli
jg
repnz
push
jge
mov
(bad)
lock
adc
jne
jne
fdivr
jo
jecxz
dec
inc
or
xchg
push
pushf
jg
ss
pop
mov
mov
or
xchg
xchg
(bad)
pop
mov
hlt
cwde
sbb
dec
cmp
mov
lock
sbb
(bad)
std
lock
clc
inc
mov
bound
sti
or
ss
clc
in
jl
inc
xchg
clc
sbb
mov
add
inc
inc
inc
hlt
call
push
inc
mov
mov
sub
jbe
and
mov
stos
scas
aaa
std
out
lock
icebp
cmp
js
jmp
ret
outs
mov
xor
pop
pop
or
out
cmps
imul
push
dec
hlt
test
mov
cwde
cwde
or
pop
scas
cld
or
cmps
or
pushf
shl
cmp
or
dec
cmp
cmps
inc
(bad)
out
push
jecxz
mov
mov
fs
mov
je
mov
add
inc
fdivr
dec
jbe
pushf
ret
scas
je
ja
cmp
cmc
cmps
mov
mov
repnz
or
adc
jb
test
out
fsubr
ds
popf
gs
jge
jbe
pop
mul
(bad)
jg
hlt
mov
loope
repnz
mov
gs
jmp
add
push
or
mov
or
mov
mov
ror
mov
sbb
clc
xchg
les
(bad)
je
repnz
lods
dec
sti
inc
jbe
xor
and
mov
push
lock
dec
jne
jle
rol
lock
mov
cld
xor
outs
cs
adc
ret
call
xchg
mov
xchg
sbb
popa
adc
clc
div
add
add
dec
ds
and
mov
add
sahf
div
(bad)
mov
test
std
fwait
aam
sub
mov
dec
and
pop
mov
mov
push
add
cmps
scas
adc
mov
jle
stos
inc
call
sbb
mov
aam
pop
jmp
aam
adc
xchg
mov
sbb
push
fadd
inc
sbb
pop
das
add
scas
pop
cld
cmp
sbb
pop
(bad)
jl
mov
into
int3
das
inc
and
out
je
push
xor
aam
push
inc
jne
lods
ins
jl
ds
sub
ins
mov
mov
cmp
or
mov
and
adc
cmp
data16
xor
outs
dec
fmul
test
popf
hlt
loop
adc
(bad)
(bad)
inc
je
or
lahf
mov
fsubr
xchg
jle
mov
call
dec
xor
sbb
mov
lods
(bad)
call
ret
mov
inc
and
cli
test
(bad)
mov
lock
xor
sbb
sbb
cli
xor
sub
outs
js
mov
cli
imul
jmp
mov
add
hlt
or
sti
dec
or
or
push
popf
or
sbb
out
sub
stos
(bad)
mov
xor
sar
call
mov
clc
dec
sub
jge
jge
les
(bad)
push
leave
mov
popa
sti
sbb
shl
push
and
div
movs
test
idiv
mov
retf
adc
jle
add
pop
test
pushf
lods
sbb
rcr
mov
and
(bad)
xor
hlt
push
xor
push
hlt
retf
inc
in
(bad)
cld
and
dec
xchg
retf
enter
repnz
dec
cmp
cli
ret
je
adc
ss
(bad)
jg
jl
cmp
cld
xchg
add
sbb
(bad)
jb
jge
jb
outs
call
inc
push
hlt
popf
xchg
add
loop
inc
mov
or
fcomp
in
mov
(bad)
push
test
ins
push
pushf
add
mov
xchg
nop
es
jmp
pop
cmc
(bad)
(bad)
push
and
lahf
nop
test
je
push
add
(bad)
(bad)
(bad)
fistp
cli
test
hlt
push
jbe
jae
aaa
adc
pop
dec
scas
jne
sbb
push
push
jbe
xchg
(bad)
jl
cld
add
jge
imul
pop
clc
std
and
data16
xor
adc
std
(bad)
fild
pop
jae
mov
mov
movs
mov
aam
idiv
cmp
jp
fnsave
push
shr
mov
push
jp
je
movs
pop
jae
jb
pop
je
enter
not
fnstsw
add
test
les
(bad)
jg
add
pop
xor
pusha
mov
jg
daa
scas
clc
call
hlt
scas
int3
ss
pop
cmp
sbb
or
cmp
aaa
cld
outs
xor
hlt
or
xchg
dec
dec
fld
mov
dec
(bad)
hlt
sbb
mul
out
fcmovb
outs
mov
rcl
jecxz
push
ja
lahf
and
hlt
adc
test
mov
or
push
or
jg
mov
outs
mov
xor
out
stc
mov
fcmovbe
or
sub
push
data16
hlt
mov
mov
cli
or
push
push
add
add
and
cs
push
jmp
mov
sbb
jnp
fcomp
outs
bound
and
(bad)
dec
mov
and
test
(bad)
jmp
cli
into
hlt
inc
mov
inc
mov
(bad)
mov
rcl
cmc
pop
jle
dec
ret
mov
(bad)
call
cmp
push
mov
ja
sbb
add
jl
jno
icebp
scas
pop
push
adc
pop
ja
jp
dec
jae
add
adc
daa
xor
cdq
cmp
mov
jge
adc
add
adc
test
pop
in
dec
data16
cmps
imul
clc
sbb
jae
(bad)
(bad)
jg
stos
inc
mov
adc
mov
push
and
inc
add
mov
xchg
mov
mov
mov
inc
cmp
mov
mov
sbb
jg
jae
cli
cwde
loop
mov
enter
hlt
mov
push
sub
aaa
aam
jo
js
dec
std
(bad)
call
lahf
jo
dec
and
mov
mov
jp
mov
test
sub
icebp
jae
sub
mov
cmp
adc
xchg
sub
cmc
movs
xor
push
cmp
push
push
call
and
test
push
mov
pop
mov
xor
add
ins
imul
jmp
pushf
add
mov
int
cmp
jno
stos
mov
push
(bad)
fcomip
call
jmp
sahf
xor
or
xor
or
pop
jne
les
mov
push
cld
xchg
int3
adc
popf
addr16
pop
div
std
ja
mov
retf
jmp
int
jge
dec
push
lock
int
into
cmp
push
ret
inc
jmp
clc
in
(bad)
fild
je
dec
and
sbb
dec
std
xor
pushf
adc
shl
inc
jmp
shr
sahf
cdq
std
and
xor
push
cmp
pusha
dec
in
icebp
push
push
xor
and
pop
push
pop
push
inc
mov
dec
retf
xchg
stc
sbb
(bad)
std
adc
cli
(bad)
call
push
movs
aaa
mov
shl
dec
aaa
cli
push
mov
or
sbb
mov
(bad)
push
retf
cmp
mov
mov
mov
push
stos
mov
or
and
repnz
call
fidiv
movs
int3
sbb
push
out
out
xchg
xchg
out
(bad)
sub
and
xchg
in
(bad)
dec
jo
jne
adc
mov
lods
jns
jg
cmp
scas
jmp
sbb
inc
push
(bad)
mov
jb
pop
cld
(bad)
mov
fld
js
and
repnz
dec
mov
cmp
inc
adc
fcom
lods
call
mov
jl
mov
imul
jne
sbb
std
jb
call
jb
and
cld
jg
push
ins
retf
pop
ins
pop
add
xchg
neg
mov
repnz
js
push
fstp
and
cmp
ja
out
shl
mov
mov
mov
add
adc
ja
and
std
fisttp
lea
jp
cmps
je
mov
(bad)
(bad)
in
clc
inc
fs
cmp
les
xchg
je
xor
hlt
ret
cmp
mov
mov
and
and
fnstenv
sub
xchg
mov
jne
popa
aaa
into
push
sub
cmp
call
cmp
mov
sub
ins
ins
mov
ds
cmp
cmp
jge
jmp
jb
xchg
mov
ds
mov
fidivr
lock
mov
dec
jge
cmp
inc
cli
in
(bad)
cmp
in
sbb
mov
dec
rol
jnp
dec
call
js
into
nop
jl
mov
mov
scas
dec
cmp
ror
call
and
(bad)
(bad)
out
fcom
js
call
inc
xor
cli
sbb
pop
adc
ins
not
sar
sti
push
jl
cdq
fs
jo
sar
idiv
(bad)
jmp
js
aad
(bad)
jl
hlt
add
stos
mov
mov
jb
(bad)
add
mov
pop
jmp
clc
mov
mov
std
sbb
xchg
and
mov
and
add
xrelease
(bad)
jg
xchg
mov
js
ins
imul
call
push
inc
cmp
js
stos
sar
je
sbb
in
mov
or
jg
xchg
clc
mov
sbb
loope
ja
mov
(bad)
fwait
push
or
sahf
jbe
xchg
clc
pop
jmp
pushf
jge
repnz
add
(bad)
jmp
or
neg
neg
cmp
mov
call
(bad)
in
cmp
std
in
pop
js
xor
inc
inc
dec
js
cmp
inc
call
cmp
sbb
ret
and
fist
not
cmps
mov
aas
mov
jmp
lods
mov
adc
cmp
lods
and
fadd
lods
ret
cmp
push
mov
(bad)
mov
cmp
xor
iret
shr
mov
es
mov
cmp
xor
cmps
fsub
(bad)
or
(bad)
mov
sbb
popa
rcl
das
push
cli
scas
cmp
xchg
test
xor
add
mov
xor
(bad)
stos
pop
(bad)
(bad)
mov
cwde
sub
fadd
lods
int
dec
sahf
xor
fdivrp
ret
(bad)
(bad)
aas
das
mov
lods
mov
mov
mov
cmp
stos
adc
dec
cld
shl
mov
or
jp
mov
mov
fnstcw
clc
mov
mov
jns
(bad)
cmp
push
pusha
push
aaa
dec
xchg
pop
cmc
inc
or
retf
jmp
add
jno
push
ret
pop
in
stc
inc
or
sbb
mov
push
mov
dec
clc
test
int3
enter
scas
je
push
cmp
fild
les
in
sbb
in
call
mov
xchg
out
mov
xchg
sbb
je
jo
push
cmp
lock
aad
clc
stos
test
loope
ins
fidiv
mov
lds
xchg
idiv
cmp
jecxz
xor
mov
enter
mov
mov
and
mov
sub
call
rol
mul
push
push
inc
sub
jmp
inc
jo
pop
jne
push
and
cmp
sbb
push
cmp
(bad)
loop
xchg
loopne
add
dec
retf
or
mov
(bad)
bound
daa
(bad)
mov
je
mov
enter
push
dec
in
mov
mov
jb
and
jmp
ss
cmps
out
enter
loop
clc
adc
sub
mov
cli
ret
pop
lock
inc
mov
push
sar
jecxz
push
and
pusha
int3
sbb
mov
jg
jb
adc
mov
mov
and
mov
mov
add
mov
out
lods
mov
inc
(bad)
mov
std
jmp
popf
cmp
pop
mov
xor
clc
loopne
xor
(bad)
(bad)
(bad)
(bad)
mov
dec
je
jo
clc
fsub
mov
enter
std
mov
xor
(bad)
(bad)
call
es
std
test
xchg
stc
popa
jae
jbe
in
lods
(bad)
(bad)
fild
ret
lea
out
jae
std
std
xchg
add
adc
dec
and
and
(bad)
cli
call
xchg
icebp
mov
mov
mov
adc
hlt
call
jmp
gs
mov
mov
jge
sub
add
std
loop
cmp
cld
fst
ror
push
sbb
(bad)
out
adc
pop
xor
loop
or
mov
mov
(bad)
jg
(bad)
std
xchg
inc
ins
sub
mov
(bad)
(bad)
push
adc
fld
ja
cli
dec
jge
fdivr
ins
jecxz
or
call
ret
xor
jae
mov
mov
aaa
xor
(bad)
(bad)
in
call
fwait
xor
fistp
std
lods
push
les
lods
std
js
or
sbb
cmp
(bad)
outs
adc
xlat
cmp
push
xchg
loop
inc
and
push
cmc
cwde
jb
mov
push
and
lock
cmp
cmp
xchg
mov
or
pop
xor
in
push
jmp
repz
es
pop
xor
or
sbb
jmp
jmp
sub
mov
inc
hlt
sar
aam
sbb
add
call
add
(bad)
out
cmp
cmp
fadd
pop
mov
test
test
push
xchg
jnp
mov
ret
call
push
fst
lods
inc
sbb
ret
add
aad
xchg
test
ja
sbb
clc
(bad)
aas
or
cdq
call
push
cmp
cmp
retf
xchg
and
mov
add
pop
fiadd
cmp
jecxz
cli
adc
adc
cmp
dec
jmp
xchg
inc
cli
pop
mov
xor
call
push
push
aad
xchg
add
mov
fadd
adc
not
std
add
adc
ss
jne
adc
repz
add
inc
add
aad
leave
push
test
dec
fsubr
mov
andps
adc
(bad)
inc
ret
hlt
inc
xchg
cwde
add
push
shl
mov
add
xchg
aam
jne
lods
mov
push
mov
inc
jns
or
xchg
jmp
and
xchg
xchg
pop
je
jns
das
add
sbb
ins
call
jecxz
or
mov
push
shl
daa
addr16
ja
add
jecxz
dec
aaa
fcomp
ret
jns
and
(bad)
(bad)
call
sub
adc
dec
sbb
pusha
bound
in
fiadd
repnz
mov
mov
fprem
(bad)
push
dec
scas
aas
test
mov
cmc
fsub
pop
cli
(bad)
push
dec
clc
mov
and
jmp
(bad)
jmp
mov
fist
xor
or
call
test
(bad)
(bad)
(bad)
jmp
mov
xor
add
pop
pop
popa
imul
addr16
cmps
pop
mov
mov
mov
stos
popa
std
sub
ins
jp
add
adc
sar
push
ret
test
int3
inc
in
ins
ret
test
loop
sub
(bad)
(bad)
jg
mov
fsqrt
sbb
dec
lahf
or
shl
cmps
sub
push
jno
loope
fsub
daa
std
push
call
call
hlt
or
stos
call
aas
adc
and
outs
icebp
clc
mov
cld
(bad)
(bad)
push
adc
loop
clc
pusha
jg
and
outs
mov
xchg
imul
(bad)
(bad)
call
sbb
test
stc
lock
pop
(bad)
push
pusha
std
mov
js
jno
gs
(bad)
jmp
cmps
mov
sub
jno
push
sbb
jbe
or
push
out
outs
(bad)
(bad)
jg
lods
hlt
loope
inc
cli
xor
push
clc
pandn
leave
dec
push
jno
in
dec
mov
outs
jmp
xor
add
mov
rcl
retf
das
inc
add
add
rcl
mov
dec
call
(bad)
jmp
mov
dec
icebp
xor
pop
pop
ffree
push
pop
ror
in
scas
out
ret
out
outs
xor
aaa
sub
loopne
stc
(bad)
(bad)
(bad)
(bad)
dec
pop
xchg
add
call
std
imul
loope
shl
add
addr16
mov
js
xor
(bad)
(bad)
inc
jns
or
mov
pop
fld
loop
push
and
addr16
sub
adc
call
mov
xor
xor
xchg
neg
add
push
mov
jmp
inc
jmp
cmp
call
lahf
ror
push
test
add
xor
(bad)
(bad)
jmp
or
ss
aad
mov
and
cmp
and
out
mov
xchg
jo
jmp
loop
mov
push
jno
adc
mov
ret
xor
xchg
(bad)
inc
dec
leave
jg
jmp
mov
stos
mov
enter
push
(bad)
fimul
sbb
hlt
or
and
xchg
lahf
or
jg
loope
cli
iret
pop
push
mov
mov
(bad)
(bad)
call
jns
xchg
mov
lea
clc
and
cmp
imul
push
inc
inc
retf
push
adc
clc
sub
(bad)
(bad)
(bad)
mov
xor
clc
dec
cmp
imul
es
popa
or
aas
mov
(bad)
(bad)
inc
sub
jo
pop
mov
sub
jno
mov
sbb
clc
shl
or
cmp
cmp
(bad)
outs
cli
pop
adc
popa
scas
push
push
ror
push
xor
out
lock
jmp
xor
ret
repnz
in
stc
or
inc
idiv
add
sbb
lock
pusha
cdq
ret
add
push
and
ja
pop
mov
mov
call
mov
pop
cli
hlt
cmc
rcr
gs
(bad)
(bad)
dec
nop
bound
mov
icebp
add
mov
and
mov
or
idiv
or
(bad)
(bad)
(bad)
stc
sbb
sub
(bad)
and
(bad)
xchg
cmp
fstp
(bad)
mov
cmp
mov
mov
rcl
mov
(bad)
mov
mov
xor
sbb
mov
inc
addr16
rcr
adc
hlt
push
(bad)
sbb
sbb
leave
repz
pusha
mov
add
call
mov
sub
out
(bad)
(bad)
out
adc
mov
cmc
or
mov
je
(bad)
scas
and
xor
out
enter
cmps
push
xchg
aaa
hlt
(bad)
(bad)
fcmovne
cmp
hlt
iret
out
cmp
fldenv
mov
ins
jnp
push
fmul
ffreep
xchg
aas
movs
imul
add
jns
pop
mov
(bad)
(bad)
fild
sbb
or
out
mov
adc
sbb
(bad)
(bad)
(bad)
call
pop
ins
call
ins
daa
dec
or
add
js
xor
ret
dec
gs
test
ret
add
call
psubusw
dec
std
fnstenv
(bad)
cmp
push
push
(bad)
call
adc
cmp
pusha
mov
jo
cmp
mov
jp
cmp
addr16
gs
sbb
clc
out
dec
xchg
jns
lods
icebp
dec
add
cli
and
imul
inc
(bad)
(bad)
fld
push
add
mov
push
les
gs
lock
loope
(bad)
fcomip
mov
mov
mov
xor
sbb
adc
cmc
stos
(bad)
lock
(bad)
mov
add
mov
mov
dec
and
pop
sahf
cmps
jbe
hlt
push
(bad)
pop
hlt
fstp
jmp
adc
shl
ins
hlt
cmp
stc
rcr
or
sbb
push
jl
or
jmp
scas
xchg
pop
scas
xor
dec
ss
add
mov
repz
call
dec
into
cwde
fiadd
outs
inc
aam
scas
and
sub
test
inc
xchg
(bad)
jg
jmp
dec
push
mov
loope
cwde
leave
fadd
cmp
sub
mov
lock
or
call
jb
call
dec
push
sub
mov
add
and
xor
cmc
xchg
push
cmp
inc
mov
sub
idiv
(bad)
jmp
jmp
add
mov
push
cmp
sets
cli
(bad)
jmp
dec
jg
bndldx
sbb
call
pop
jbe
(bad)
cmp
push
inc
jg
stos
scas
pop
push
stc
add
mul
inc
push
sar
dec
xor
jno
hlt
(bad)
(bad)
inc
aaa
xor
cmp
aam
fild
add
push
into
sbb
std
(bad)
push
mov
xor
add
dec
imul
jg
test
sub
retf
sub
mov
icebp
jo
das
push
lea
hlt
push
imul
dec
(bad)
(bad)
inc
clc
(bad)
outs
cli
js
ret
ret
or
or
jp
jo
mov
(bad)
(bad)
jmp
enter
nop
stos
loope
aas
jp
cmp
test
movs
mov
loope
xchg
pop
mov
pop
ret
push
hlt
xchg
dec
inc
nop
adc
shl
into
std
call
test
cs
retf
jp
inc
stos
add
and
jno
and
das
add
mov
jmp
and
jp
jae
sbb
dec
fadd
pop
push
js
inc
cli
mov
mov
mov
and
out
jo
sub
pusha
mov
scas
pop
mov
call
or
cmps
dec
call
(bad)
mov
mov
sub
cli
scas
mov
jg
mov
mov
mov
idiv
add
xchg
clc
jg
push
fistp
cmps
pop
mov
fmul
pop
icebp
ret
ror
xor
ja
rcr
in
push
out
arpl
enter
call
cld
repnz
cwde
test
mov
sbb
mov
ins
and
sub
repz
cmp
(bad)
(bad)
(bad)
inc
scas
call
dec
jne
push
push
pusha
pusha
clc
adc
jp
loopne
jmp
cmp
pop
and
sub
or
(bad)
(bad)
call
test
sahf
dec
push
daa
hlt
or
popa
cmp
fcomip
pop
pop
cmp
std
xchg
and
mov
(bad)
call
inc
pop
clc
pop
add
sub
xchg
push
bound
stc
call
xchg
pop
add
outs
xor
bound
or
ret
and
add
iret
sbb
imul
xor
icebp
pop
(bad)
(bad)
dec
(bad)
rol
dec
clc
push
jns
call
test
cmc
and
jp
fimul
bound
mov
cs
cmp
clc
pop
popa
shl
(bad)
(bad)
(bad)
(bad)
push
mov
test
clc
mov
sbb
cmp
loopne
push
rcr
out
icebp
(bad)
outs
lods
inc
stos
hlt
pop
mov
jl
data16
(bad)
call
addr16
cdq
push
push
daa
sbb
xchg
xor
push
inc
jmp
mov
sub
jmp
dec
dec
loop
data16
stc
adc
out
adc
das
clc
ret
das
mov
aad
cwde
adc
adc
pushf
imul
dec
cmps
add
data16
(bad)
(bad)
call
cwde
adc
mov
sti
in
scas
sbb
fimul
mov
pop
je
and
mov
mov
cld
lods
adc
sub
cld
(bad)
dec
mov
neg
in
add
mov
ss
out
xchg
or
push
ss
je
adc
jg
test
in
mov
jl
(bad)
ins
or
xor
stos
sbb
fmul
(bad)
jg
lock
push
imul
scas
cmp
test
ret
xchg
aad
clc
mov
hlt
mov
mov
popf
sbb
ins
fsubr
mov
mov
gs
adc
lock
(bad)
call
pop
aad
ja
stos
adc
out
out
loop
(bad)
(bad)
(bad)
push
mov
pop
xchg
xchg
or
add
out
int
pop
cmp
enter
inc
add
retf
inc
(bad)
(bad)
(bad)
push
scas
or
ss
cs
jmp
jbe
loop
jns
mov
clc
out
dec
cmp
mov
push
push
clc
or
xchg
push
pop
inc
mov
sbb
inc
or
dec
das
lea
and
sub
jp
lock
icebp
dec
iret
dec
push
pop
arpl
push
dec
adc
in
inc
stos
outs
xchg
call
jne
(bad)
rol
call
fwait
adc
xchg
movs
jg
retf
push
add
jno
pop
xchg
retf
inc
mov
and
mov
sahf
bt
jl
(bad)
(bad)
sub
xchg
call
jle
iret
push
call
pop
popa
std
xor
or
xchg
xchg
call
mov
(bad)
jmp
and
mov
nop
push
mov
std
mov
ss
xchg
test
call
gs
daa
add
jmp
adc
popf
xor
sbb
push
retf
cld
xchg
out
(bad)
(bad)
(bad)
fild
imul
mov
push
xor
mov
mov
and
(bad)
jmp
loop
hlt
mov
fisttp
push
mov
dec
mov
je
aad
lods
call
or
movs
cwde
shr
pop
lea
in
and
or
es
mov
mov
fs
ins
scas
add
adc
xchg
das
mov
(bad)
xor
xor
xchg
mov
outs
retf
mov
inc
inc
cld
dec
push
hlt
shr
call
mov
mov
mov
movs
xor
int
or
(bad)
call
xchg
and
sbb
daa
adc
jg
mov
jnp
adc
into
addr16
adc
stos
inc
jecxz
inc
xor
(bad)
add
dec
and
inc
pop
out
mov
inc
pop
int3
xor
into
mov
mov
and
mov
aas
clc
inc
fsubr
pop
fist
adc
xchg
daa
call
adc
test
xchg
add
mov
aaa
add
dec
adc
jmp
jnp
loopne
lahf
jno
es
push
not
push
pop
inc
push
jmp
add
mov
retf
xor
jmp
push
bound
fmul
nop
push
dec
xchg
sahf
and
or
jmp
and
and
cwde
and
(bad)
(bad)
call
ret
cwde
push
gs
movs
cmp
bound
(bad)
cld
cdq
add
jmp
jg
mov
pop
shl
inc
cmp
mov
not
sbb
mov
in
aad
shr
mov
nop
(bad)
(bad)
(bad)
fisttp
arpl
jo
scas
lods
cmp
test
jns
mov
xor
mov
fisub
cmp
lahf
les
push
clc
or
jbe
mov
daa
sbb
jle
cmc
cwde
mov
sbb
cs
mov
std
(bad)
stc
push
mov
pop
rcpps
hlt
out
cmp
test
jmp
dec
idiv
call
xchg
cmp
jmp
and
into
xchg
dec
mov
xor
xchg
imul
xchg
push
xchg
test
test
adc
xor
ja
imul
test
adc
push
xchg
outs
sar
dec
pop
mov
jo
pop
sar
(bad)
call
stos
das
sbb
jp
jl
cmps
std
fidivr
inc
add
mov
sbb
sbb
or
xchg
fwait
loopne
stos
mov
sub
jne
aam
call
js
outs
daa
pop
popf
inc
push
imul
mov
sar
retf
push
and
pop
test
dec
adc
and
mov
mov
aaa
out
test
ret
xor
pop
imul
(bad)
cmp
sbb
add
xor
xor
rcr
push
mov
aas
inc
mov
ror
es
xor
jmp
cli
call
cld
inc
cs
clc
mov
jecxz
mov
add
mov
sbb
outs
clc
mul
xchg
dec
leave
pop
sub
mov
push
pop
movs
(bad)
aaa
(bad)
inc
push
dec
pop
inc
lea
cmps
(bad)
mov
outs
imul
(bad)
cmp
jne
out
push
nop
mov
cli
inc
mov
adc
xchg
(bad)
(bad)
frstor
scas
nop
mov
and
clc
dec
xchg
pop
push
stos
mov
fld
pop
ret
(bad)
push
or
and
stos
addr16
or
enter
(bad)
jg
in
mov
test
mov
pop
pop
sar
lods
mov
aam
sbb
mov
fstp
fdivr
and
mov
dec
pop
daa
pop
adc
mov
(bad)
sbb
(bad)
(bad)
(bad)
cli
push
(bad)
scas
adc
push
aam
mov
inc
out
fidivr
in
push
mov
(bad)
cmp
cmc
pusha
dec
(bad)
(bad)
jl
sahf
in
ins
pop
ja
(bad)
stos
icebp
test
jbe
mov
add
retf
(bad)
(bad)
dec
out
(bad)
mov
pop
add
call
aaa
test
lods
push
pop
push
inc
test
pop
and
das
into
lea
and
jae
into
ss
inc
cmp
lock
add
jbe
scas
mov
inc
std
(bad)
mov
cmps
pop
jg
lahf
outs
pop
and
pop
xchg
mov
jg
pop
aad
jp
test
jp
mov
mov
lahf
jle
pop
jmp
dec
adc
aam
mov
mov
adc
mov
mov
xor
pop
mov
out
push
(bad)
fadd
mov
repz
cmp
cs
(bad)
(bad)
(bad)
inc
mov
and
ins
cli
les
(bad)
fisttp
jl
repnz
ins
(bad)
call
jecxz
retf
add
mov
sub
add
or
fisttp
or
fwait
imul
(bad)
aas
mov
xchg
sub
adc
daa
mov
mov
js
adc
(bad)
adc
sbb
stos
aaa
or
ret
les
jb
pushf
lods
push
pusha
stc
pushf
mov
out
cmc
(bad)
mov
mov
(bad)
and
cmp
xchg
stos
push
dec
adc
xchg
(bad)
(bad)
cmp
pushf
nop
push
or
enter
test
rcl
mov
mov
imul
dec
lods
shl
clc
arpl
push
inc
(bad)
fisttp
stos
adc
mov
lock
push
add
mov
test
cs
jbe
cmps
cmc
int3
jge
(bad)
call
add
mov
jne
in
shr
jne
mov
lahf
mov
push
call
dec
xor
(bad)
xchg
fsub
popa
jmp
ins
xor
dec
loop
inc
fwait
sub
outs
(bad)
pop
jg
adc
pop
and
stc
outs
jae
sahf
les
cmp
aad
add
mov
not
ds
div
pop
mov
ins
dec
in
out
loop
cmp
sub
xor
mov
mov
pop
cld
push
sub
jns
inc
out
aaa
frstor
frstor
addr16
mov
inc
leave
cli
shl
addr16
jmp
sub
call
mov
aas
add
xchg
popa
mov
inc
pop
xchg
shl
or
xor
nop
add
test
sbb
pushf
pop
icebp
call
or
or
cmp
dec
add
outs
ins
call
mov
(bad)
(bad)
inc
outs
mov
pop
jmp
(bad)
repz
cmc
push
pop
je
push
jo
or
(bad)
xchg
add
das
adc
sub
mov
jmp
mov
add
(bad)
add
push
fisubr
(bad)
jmp
ror
mov
lock
xor
movs
mov
(bad)
neg
mov
xchg
call
pop
les
imul
and
xor
jne
inc
sbb
sbb
movs
pusha
lock
add
pop
cmp
sbb
adc
or
push
mul
mov
cmc
adc
lods
imul
(bad)
jmp
ins
dec
call
inc
lds
ja
repnz
sub
jmp
sti
add
pop
pop
loope
call
cs
or
add
dec
inc
ret
or
and
inc
xor
shr
mov
mov
and
dec
xchg
xor
push
jl
inc
mov
jecxz
pop
lock
inc
aam
jg
popa
cmps
inc
inc
lods
bound
imul
jge
stos
sub
jmp
fild
rcr
push
test
ins
jle
mov
(bad)
(bad)
mov
jecxz
imul
and
and
dec
in
ja
ret
test
lahf
sbb
mov
inc
daa
aas
inc
add
adc
mov
cmp
pop
sbb
ret
jmp
aaa
pop
loopne
and
cmp
js
jmp
add
xchg
ja
mov
mov
loopne
int
das
mov
rcr
(bad)
inc
mov
pop
fldcw
cmp
jmp
and
clc
adc
int
das
or
sbb
js
es
rcr
(bad)
dec
sub
and
and
les
mov
mov
sub
xlat
(bad)
(bad)
(bad)
call
fadd
pop
shl
cmp
fistp
out
fwait
test
jge
fwait
iret
dec
enter
stc
push
mov
adc
jno
sbb
or
push
loop
inc
pop
pop
and
das
nop
jmp
stos
repz
ins
ds
xlat
push
out
inc
xchg
push
int
xor
(bad)
mov
push
mov
cld
fsub
fisubr
test
addr16
or
mov
jle
test
pop
call
add
push
push
stos
dec
mov
fbld
loop
pop
pop
xchg
loope
pop
or
mov
dec
out
xor
ss
lahf
cmp
hlt
jmp
fldenv
push
fwait
adc
push
or
stos
dec
fistp
push
in
mov
jg
pusha
jle
xor
ds
fdiv
ins
cs
mov
pop
dec
fwait
pop
mov
pop
movs
fsub
push
(bad)
(bad)
mov
das
sbb
push
or
jl
jg
add
mov
nop
inc
mov
std
jg
or
test
adc
leave
sub
(bad)
inc
inc
push
(bad)
jg
popa
sub
mov
outs
daa
xor
push
add
(bad)
cmp
dec
push
pop
loopne
add
daa
dec
(bad)
(bad)
(bad)
call
inc
sbb
or
mov
mov
jmp
dec
mov
mov
or
bound
(bad)
(bad)
(bad)
cmp
mov
cmps
neg
add
push
xchg
(bad)
cmp
pop
jp
cli
lds
pop
jmp
sbb
je
mov
add
add
(bad)
cmp
xor
out
iret
and
cmc
imul
out
cdq
pop
jg
push
mov
cmps
ja
jae
pop
add
(bad)
stos
in
sbb
fmul
dec
add
or
pop
inc
push
movs
push
mov
lahf
clc
iret
xor
dec
cli
adc
dec
xchg
leave
jb
(bad)
call
add
dec
ss
imul
(bad)
inc
ficomp
lea
push
not
cdq
movs
adc
cmp
and
sbb
cmp
dec
mov
jmp
adc
inc
mov
xchg
das
ror
adc
clc
in
das
adc
int3
dec
jne
fsub
inc
mov
push
scas
mov
pop
xchg
ror
iret
inc
sbb
test
mov
jmp
retf
les
aad
cli
sahf
hlt
sub
inc
or
add
dec
pop
mov
fs
lods
in
push
adc
mov
xchg
ins
ds
jecxz
pop
push
lods
jle
push
sub
ja
lods
xchg
xchg
push
dec
mov
call
and
(bad)
(bad)
(bad)
(bad)
test
jl
shl
call
outs
repz
fs
test
repz
jmp
pop
jnp
xor
push
ror
add
xor
ret
adc
jmp
hlt
xor
ds
sub
sub
sub
or
or
adc
and
clc
gs
and
jae
cld
add
mov
inc
pusha
xlat
dec
ret
or
mov
(bad)
push
enter
call
xchg
sbb
xchg
cmps
push
xchg
inc
nop
cdq
(bad)
out
mov
sub
dec
aam
xor
mov
in
add
enter
cmc
sub
cwde
outs
inc
adc
adc
loope
test
retf
or
mov
xchg
cmp
mov
outs
aaa
cmp
mov
scas
lods
sbb
(bad)
jle
outs
jmp
mov
push
cmps
mov
outs
add
leave
arpl
(bad)
inc
sbb
dec
mov
fidivr
stc
lods
and
(bad)
jg
std
in
sbb
jbe
cmp
dec
jl
js
retf
pop
fbld
(bad)
push
out
push
popa
mov
sbb
pop
and
or
js
mov
mov
add
inc
out
dec
mov
xchg
movs
fs
call
test
xor
sbb
jmp
int
into
dec
fimul
jecxz
lock
loop
aad
jnp
outs
stos
ss
sub
xchg
sub
scas
in
cmc
push
inc
jbe
mov
adc
jns
sahf
imul
cmp
ret
push
mov
gs
mov
clc
aaa
adc
mov
jmp
jmp
in
jb
aaa
cld
(bad)
out
sbb
xor
in
sub
test
sub
retf
cmps
push
sub
fdivr
test
lea
(bad)
(bad)
inc
dec
rcr
movs
adc
fxsave
dec
rcl
push
cmp
(bad)
(bad)
jmp
out
movs
(bad)
and
adc
sub
fcomp
sbb
or
jg
daa
mov
enter
(bad)
cmp
jns
dec
inc
jp
mov
and
inc
mov
ss
ja
sbb
call
mov
fldcw
push
xchg
mov
adc
pusha
inc
mov
sbb
(bad)
(bad)
jmp
enter
pop
stos
popa
int
out
or
out
cmp
or
pop
jne
test
mov
aaa
fsubr
push
or
inc
aas
jl
jmp
mov
mov
add
clc
(bad)
inc
pop
popf
sahf
ret
cmp
mov
and
adc
sub
outs
push
mov
push
xor
lea
mov
setnp
call
leave
mov
(bad)
pop
adc
fs
call
rol
mov
(bad)
sti
inc
sahf
jbe
mov
jmp
add
mov
mov
out
mov
lock
dec
adc
es
das
cmp
mov
frstor
push
movs
ficomp
push
inc
(bad)
(bad)
mov
sbb
sbb
cld
call
fbld
pop
jp
inc
aam
sti
hlt
(bad)
fsub
sbb
add
(bad)
adc
and
das
cli
add
xor
dec
pop
inc
dec
adc
jecxz
xchg
icebp
jg
mov
sbb
fdiv
aaa
rcr
pusha
push
test
aaa
inc
sub
dec
std
push
ss
(bad)
test
inc
jmp
clc
es
fs
aas
push
es
dec
(bad)
jae
out
jg
cmp
das
jecxz
out
loope
mov
xor
test
dec
cmp
(bad)
cmp
sub
xchg
fsub
cmp
jmp
mov
mov
pushf
xchg
sti
stos
out
inc
iret
scas
cmp
in
cmps
push
jg
gs
es
test
bound
inc
mov
call
sti
add
jp
stc
push
pop
gs
test
push
jo
js
imul
jbe
rcl
(bad)
(bad)
dec
arpl
cld
cmp
or
dec
xor
jno
(bad)
cwd
dec
sti
xlat
and
cmps
jbe
xor
mov
inc
ins
mov
stos
jl
pop
add
xor
pop
movs
xor
jbe
mov
std
(bad)
popa
dec
nop
fldl2t
loope
sbb
add
pop
arpl
sub
cli
(bad)
fsubr
jge
pop
inc
(bad)
add
or
nop
cli
call
add
arpl
xlat
call
mov
mov
pushf
enter
scas
cmp
mov
or
xchg
ins
jp
fisub
outs
and
dec
shr
mov
ins
xchg
sub
and
in
in
sbb
cld
pop
cld
jg
dec
call
imul
imul
push
sbb
push
int3
add
pop
test
jmp
fimul
sbb
(bad)
push
dec
jne
das
xor
pop
add
sub
cmps
shl
(bad)
(bad)
jmp
dec
call
data16
push
cdq
push
dec
in
pop
xchg
retf
in
hlt
test
sar
stos
jge
imul
mov
xchg
stos
leave
aad
dec
rcr
sahf
jae
xchg
loop
push
adc
mov
inc
aas
idiv
(bad)
(bad)
call
cmp
cmps
int3
sub
int
xchg
leave
fsubrp
push
loope
pop
lahf
add
mov
or
(bad)
(bad)
(bad)
jl
jge
hlt
xor
mov
sub
pop
shl
(bad)
dec
nop
sub
mov
test
xchg
inc
push
fsub
fisttp
pop
data16
(bad)
(bad)
inc
sub
sti
gs
cwde
fimul
pop
div
mov
arpl
mov
jns
aaa
push
inc
(bad)
(bad)
(bad)
call
out
ds
push
or
and
mov
add
outs
call
(bad)
inc
cmp
lock
std
lea
mov
or
iret
sbb
in
dec
adc
mov
push
mov
mov
dec
pop
(bad)
out
dec
add
imul
push
sub
add
fcmovbe
sbb
mov
fwait
adc
push
sbb
mov
ret
mov
sub
dec
cmc
mov
lock
adc
sbb
loop
fist
pop
std
(bad)
fistp
and
pop
loopne
pop
mov
mov
dec
adc
push
leave
lea
add
jmp
ror
ss
enter
(bad)
(bad)
(bad)
(bad)
ds
xor
mov
push
leave
pushf
adc
stos
inc
aas
mov
jmp
(bad)
(bad)
fistp
(bad)
cmps
mov
fisub
mov
(bad)
addr16
imul
dec
sub
pop
loop
ins
aad
repz
pop
mov
push
(bad)
mov
inc
imul
icebp
int3
(bad)
or
add
jae
cmp
push
cmp
push
pop
sub
ja
(bad)
out
xor
ret
mov
fisubr
outs
cmp
inc
retf
cli
call
mov
sbb
mov
mov
mov
es
clc
js
xchg
adc
pop
sti
xor
mov
inc
pop
add
jle
call
jmp
es
mov
push
aam
push
push
sub
adc
pushf
mov
fld
sar
retf
add
pop
lods
mov
mov
fisub
sbb
inc
add
mov
or
fcom
(bad)
leave
es
(bad)
(bad)
fisttp
shr
enter
inc
seta
xor
btr
xchg
mov
adc
in
cmps
jg
mov
shl
ret
dec
(bad)
jmp
mov
push
add
mov
cmp
sbb
push
xchg
out
mov
add
fisub
xchg
jne
xor
add
sbb
mov
cld
loopne
fucomip
jo
and
pop
jnp
inc
add
fnstsw
add
(bad)
jle
call
add
(bad)
nop
mov
sbb
inc
or
dec
push
(bad)
adc
out
mov
rcr
mov
push
and
jmp
outs
cld
sar
stc
and
lea
call
je
push
adc
test
push
mov
pop
enter
pop
and
daa
push
jmp
adc
adc
or
lds
pop
inc
std
xor
sti
push
and
pusha
and
icebp
jns
add
(bad)
or
jmp
shl
(bad)
sub
stc
mov
std
inc
loopne
sar
sub
call
mov
mov
(bad)
bswap
scas
mov
pop
nop
fistp
aad
fdiv
mov
adc
push
push
sbb
add
mov
pop
popa
add
cmp
mov
bnd
fs
push
lods
mov
pop
push
(bad)
sub
push
push
pushf
dec
pusha
sbb
sbb
sub
cmc
dec
jmp
stc
xor
clc
mov
jbe
ror
test
(bad)
cmp
cmp
cwde
call
js
push
and
or
pop
and
mov
and
sti
add
adc
push
push
repz
(bad)
mov
xor
inc
sbb
add
in
call
adc
(bad)
lahf
inc
jmp
jmp
fnstenv
test
dec
pushf
sub
push
sub
xchg
jmp
bt
call
pusha
mov
mov
dec
xor
jmp
mov
rcr
and
test
cmp
(bad)
jae
cmc
xor
rol
sub
sub
cld
xor
xchg
inc
cmp
dec
jl
pusha
pusha
repz
jmp
pusha
adc
fisttp
movs
cmp
scas
or
ret
aaa
pushf
push
clc
dec
mov
or
in
shr
sar
push
leave
call
push
mov
rcl
test
div
call
or
push
jo
xor
jp
xor
sub
push
pop
std
lock
fsub
repnz
call
rcr
add
setp
cwde
shl
push
dec
push
rcr
dec
xchg
test
dec
(bad)
push
sbb
loope
fild
cmp
inc
hlt
popa
lock
push
push
mov
inc
test
pop
scas
xchg
mov
xor
call
sbb
test
mov
jge
scas
cmps
inc
push
pusha
hlt
push
lea
or
stc
and
call
xor
int
out
adc
(bad)
mov
lahf
cmp
inc
xchg
push
(bad)
push
adc
inc
loopne
test
aam
push
xor
cld
clc
dec
adc
pop
pop
mov
jb
adc
das
pop
cmp
stos
cmp
add
push
push
mov
aad
arpl
and
bswap
xchg
lahf
dec
xor
push
test
cmp
mov
enter
es
sub
xor
cmp
je
jg
stc
fisub
inc
pusha
cmp
test
inc
mov
(bad)
imul
neg
and
inc
lahf
mov
lods
add
in
jg
push
cmp
fidiv
icebp
movs
mov
push
movs
jbe
push
mov
mov
mov
bswap
mov
xchg
enter
(bad)
fcom
lea
and
xor
pusha
(bad)
and
pop
xor
ss
sub
pop
add
inc
rcr
cmps
lahf
ins
pushaw
cmp
push
jmp
adc
cwde
loop
add
cwde
test
mov
in
call
mov
lock
lds
loope
shr
add
clc
mov
ss
push
out
mov
mov
sbb
pop
fimul
lock
jg
(bad)
mov
fnsave
push
cmps
jne
adc
add
dec
shl
in
push
xor
mov
and
mov
dec
aad
es
ss
push
cmp
inc
out
loop
movs
push
add
dec
or
(bad)
mov
cmc
or
pop
shr
xor
mov
push
sbb
cmc
in
ror
outs
cmp
fistp
idiv
mov
pop
push
xor
jmp
pop
outs
repnz
or
rcl
cld
adc
test
cmc
push
call
jg
and
loope
mov
(bad)
(bad)
jne
and
adc
add
test
pop
fsubrp
and
and
pushf
jle
aad
sbb
loope
hlt
mov
clc
and
jbe
cmp
jle
add
mov
clc
pushf
clc
push
fidivr
push
out
jno
push
call
(bad)
jg
pop
hlt
out
cld
pusha
push
test
js
repnz
test
test
xor
push
mov
and
mov
lods
xlat
mov
inc
or
rcl
pop
pop
in
fs
es
push
add
lds
pop
aaa
cmp
pop
add
xor
daa
pop
shl
(bad)
mov
out
nop
mov
or
lea
add
mov
test
add
cmp
pusha
or
call
(bad)
sbb
sub
mov
loopne
ja
retf
pop
es
inc
xchg
stc
loopne
add
xor
rcl
jae
call
mov
push
out
loopne
retf
sbb
femms
mov
jmp
in
es
ret
cmp
sub
dec
or
inc
push
jmp
xor
add
sbb
adc
jns
push
mov
js
fmul
sbb
shl
icebp
pop
pop
test
jns
cmp
shl
ins
xor
pushf
inc
call
call
pusha
into
or
stc
pushf
dec
pushf
and
pop
inc
outs
pop
cmp
(bad)
sti
(bad)
ret
push
in
cmp
test
stc
add
jnp
cmc
loope
call
dec
paddd
sub
in
xor
sbb
pop
gs
cmp
mov
seta
mov
pop
xor
nop
mov
xchg
xor
mov
push
js
aad
cmps
loopne
pushf
fwait
pop
int3
mov
out
imul
shl
mov
pushf
imul
in
mov
jne
in
xchg
loop
(bad)
push
(bad)
xor
call
add
cwde
inc
or
pop
cmps
push
lahf
push
call
and
and
mov
add
loope
not
sbb
ret
xchg
fisubr
ja
push
loopne
ret
fstp
fadd
pop
or
or
mov
add
fmul
shl
or
minps
jmp
jmp
or
push
cmps
push
push
in
popa
pop
call
into
cwde
jbe
enter
mov
push
pop
and
add
bound
stos
clc
loopne
lds
test
sub
into
rcl
aad
cmc
outs
xchg
jae
cmp
push
mov
pop
loope
idiv
push
test
cmp
mov
es
dec
repnz
ret
push
lods
mov
cmp
test
cmp
sbb
(bad)
add
and
sub
pusha
aad
jo
outs
sbb
cli
ret
mov
mov
fistp
movs
mov
leave
(bad)
cmp
mov
add
into
add
jne
ret
cmp
push
loop
lock
and
push
stos
js
jb
lea
push
sub
repz
add
cmc
mul
clc
cmp
or
lods
rol
imul
xchg
pop
inc
dec
pop
call
stc
or
cmc
call
push
out
ret
enter
adc
sub
aaa
loopne
push
adc
inc
dec
xor
js
shr
call
stc
pusha
stc
push
sbb
sti
call
cli
rol
xor
getsec
inc
sub
push
inc
inc
jmp
shr
aas
cld
pop
xor
push
mov
mov
mov
xor
repnz
jl
hlt
push
daa
xchg
sbb
adc
mov
aaa
outs
je
add
lods
dec
inc
loop
pushf
mov
and
mov
sbb
jno
movs
jns
mov
push
sti
fcomp
aam
loope
and
jmp
jmp
mov
pusha
call
stos
sbb
pushf
test
cmc
push
ja
or
(bad)
in
aaa
add
out
push
jl
(bad)
jmp
shl
sub
inc
fadd
retf
popf
pusha
cmps
les
mul
mul
adc
sbb
jle
cwde
loope
out
das
and
pop
xor
inc
faddp
call
push
rcl
mov
fs
adc
stos
mov
adc
sbb
mov
lea
mov
in
dec
inc
rol
popa
jp
test
inc
dec
jmp
cmp
mov
xchg
pusha
or
xchg
jmp
push
jp
and
mov
xchg
stos
mov
xor
(bad)
mov
retf
cmp
aam
shl
add
test
(bad)
test
sbb
pop
mov
retf
pushf
in
push
sub
movs
scas
lock
adc
adc
push
ror
test
push
pop
scas
ror
fst
adc
enter
mov
dec
call
add
(bad)
fcomip
sete
into
shl
sub
jmp
jg
and
fs
rol
jns
lea
adc
mov
fldcw
push
jmp
je
(bad)
sbb
into
les
(bad)
cwde
dec
mov
pushf
repnz
xchg
mov
les
xchg
test
repz
cmp
fmul
mov
cs
cmp
cmps
stos
call
mov
call
sub
pop
jp
mov
fdivr
(bad)
neg
ret
in
cmc
adc
mov
je
fidivr
mov
ret
in
sahf
adc
sub
adc
sub
jns
xor
mov
dec
popa
xor
hlt
loop
mov
sub
aam
cwde
or
loopne
jecxz
lahf
adc
adc
xor
ret
pushf
cmp
fsubr
sar
xor
call
daa
aaa
in
pushf
jbe
sbb
int
repz
mov
xlat
dec
stos
mov
pop
push
jo
test
mov
dec
dec
mov
push
jge
mul
jb
push
call
push
or
jae
test
rcl
fld
stos
cmp
out
push
inc
push
ret
xor
and
into
ins
daa
fldenv
out
inc
fsubp
sar
push
bound
mov
outs
xchg
int
shl
dec
pop
cmp
dec
cmp
fidiv
sub
pop
xor
inc
(bad)
sbb
aas
daa
fidivr
cmp
push
std
xchg
mov
lock
lock
cmps
in
cmp
mov
mul
jnp
aaa
scas
addr16
mov
pop
xor
push
or
mov
ss
fnstsw
xlat
imul
xor
and
jo
mov
xor
cmp
mov
jbe
mov
aaa
cwde
jl
les
call
inc
sub
pop
in
xchg
out
jae
or
ja
das
add
sub
jle
xor
cmps
xor
and
lock
pop
outs
aas
out
sar
outs
ds
xchg
(bad)
sbb
push
sbb
div
sub
out
push
pop
sahf
gs
out
cmps
into
dec
das
cmp
xchg
pop
(bad)
mov
push
ds
push
mov
(bad)
jle
or
iret
arpl
dec
out
dec
ja
pop
fdivp
sar
out
fadd
loopne
push
scas
push
pop
jle
cmp
push
adc
push
pop
xchg
push
scas
out
es
out
loope
xchg
outs
aas
push
das
cli
push
pop
sbb
std
js
sub
inc
ja
push
outs
jno
out
mov
pop
popf
rol
aaa
xchg
femms
dec
jmp
fisttp
cmps
ja
xchg
push
inc
(bad)
js
pop
mov
push
lahf
into
lahf
inc
cwde
xor
sub
xchg
out
(bad)
out
pusha
jo
out
dec
cs
not
inc
out
iret
cmps
inc
out
push
into
push
xlat
icebp
jecxz
push
outs
push
daa
fadd
div
pop
xchg
addr16
fisttp
adc
cmp
pop
xor
fwait
xor
vpmacssdqh
pop
mov
popa
xchg
fimul
das
shl
xchg
int
push
sbb
add
jmp
loope
ja
inc
cmp
push
jmp
test
(bad)
in
enter
lea
cli
(bad)
mov
popa
mov
shl
pop
ret
mov
cli
ins
fdiv
stos
lock
je
push
jmp
jne
adc
js
call
add
inc
mov
fnstenv
cmps
shr
in
rol
jo
lock
push
xor
repz
repnz
cwde
cmc
stc
cmc
cmc
cwde
call
xor
(bad)
lea
cli
push
push
lea
cmp
jno
adc
lea
loope
or
pop
jmp
pop
cmp
imul
loopne
lock
xchg
lds
jp
lea
xchg
xor
sar
es
sbb
fnstcw
sub
shl
fist
out
les
ret
lock
mov
inc
or
lldt
(bad)
pushf
push
push
adc
sub
push
sub
sub
push
div
pop
push
addr16
shl
call
call
mov
or
and
adc
add
xchg
not
add
inc
shld
lea
shl
add
push
sub
pop
xlat
push
push
jo
loop
cmp
xchg
call
sub
daa
jmp
mov
cmovbe
pop
js
or
retf
add
cmp
sub
or
jmp
scas
outs
add
sub
push
mov
adc
popa
outs
adc
sub
pop
add
jmp
mov
or
add
hlt
inc
stos
inc
aas
jecxz
popa
mov
cmp
call
push
cli
cs
(bad)
loop
push
into
out
sahf
mov
ja
test
push
dec
adc
inc
xchg
cmp
(bad)
and
loop
mov
push
jmp
add
test
mov
lds
dec
mov
mov
not
(bad)
ret
movs
pushf
jl
mov
push
mov
mov
pop
clc
lea
aam
add
ret
dec
add
(bad)
mov
fistp
retf
cmp
gs
lods
jbe
lea
shl
enter
movs
std
call
(bad)
fdivr
retf
ja
rol
jmp
hlt
inc
leave
into
cwde
jmp
idiv
test
cli
adc
pop
data16
in
sbb
rcr
cmps
in
ret
add
lea
push
mov
call
pusha
inc
loop
popf
push
mov
inc
jns
call
inc
loopne
cmc
push
cmp
retf
into
test
and
push
inc
pusha
push
fnsave
fyl2xp1
movs
les
add
mov
and
sbb
loop
push
jmp
adc
xlat
mov
cli
sub
mov
retf
clc
lahf
push
(bad)
dec
neg
cmp
xchg
stos
clc
mov
pusha
adc
dec
pop
(bad)
pop
lods
(bad)
pusha
adc
es
jecxz
jne
or
sbb
ins
rcr
or
xchg
xor
pusha
or
mov
cld
or
jmp
pop
lahf
retf
push
mov
dec
pop
xor
dec
pop
lock
mov
xor
mov
push
add
popf
(bad)
xchg
xchg
mov
loopne
inc
jmp
pop
mov
ins
call
push
retf
es
fbstp
adc
inc
sbb
call
adc
fnsave
ficomp
or
pop
jnp
pop
push
lods
jnp
sub
cmp
inc
es
data16
dec
pop
adc
aaa
dec
mov
push
shr
xchg
pushf
xchg
sahf
or
jmp
js
loop
lahf
and
push
pop
das
sub
aas
fs
or
stc
clc
mov
cmp
push
cs
out
loopne
mov
sti
aam
jne
fucomi
adc
cmp
loop
mov
lods
add
inc
cmc
dec
es
inc
add
sbb
inc
mov
xor
mov
push
add
sar
cmp
pusha
xchg
dec
stos
call
push
stos
xchg
cs
pusha
push
mov
je
cs
shl
setnp
mov
cmp
cmc
jmp
push
jbe
add
xor
mov
ret
loop
pop
rcl
js
stos
or
pop
xchg
(bad)
loopne
jo
sbb
sbb
cmp
or
lock
jmp
inc
dec
push
push
test
out
lods
(bad)
das
mov
dec
sbb
aas
or
lds
pushf
pop
push
add
loopne
ret
add
int3
sti
lea
push
xchg
jmp
data16
je
outs
jg
(bad)
pshufw
fmulp
mov
push
or
test
push
xor
inc
jo
jle
cdq
shrd
push
rcl
pop
ret
imul
ds
(bad)
adc
gs
adc
fstp
test
mov
add
and
jmp
ss
add
mov
adc
cmc
jns
rcl
add
pusha
cwde
mov
sub
pusha
add
stc
fs
pop
cs
popa
mov
in
(bad)
jmp
loope
call
call
and
push
fisubr
mov
in
test
xor
sbb
xchg
std
push
mov
lock
jo
mov
je
movs
lea
rol
int
mov
ja
lods
xchg
add
(bad)
(bad)
out
cmp
dec
in
or
xchg
shl
test
bsf
das
shl
push
cmp
jmp
ror
outs
std
rol
out
jp
jmp
sbb
call
push
xchg
sub
inc
mov
clc
mov
xchg
call
adc
stos
scas
push
aas
push
std
jmp
jbe
xchg
in
js
gs
pushf
cs
mov
icebp
push
cmp
sub
adc
push
xchg
push
sldt
sbb
or
fstp
adc
cld
xor
adc
(bad)
loope
sti
xchg
stc
and
jmp
add
sbb
mov
out
add
add
ret
mov
push
pushf
daa
pushf
push
mov
movs
inc
jmp
test
call
loopne
mov
fsub
call
out
push
and
in
sub
ss
pusha
pushf
mov
ror
aas
push
push
pusha
push
ins
std
mov
stc
pusha
repz
out
cmp
xor
fs
clc
retf
(bad)
and
(bad)
es
aas
add
call
fdivr
push
loopne
sbb
setge
in
ror
xor
sbb
shr
mov
or
ror
jo
sar
fdiv
push
add
out
jecxz
or
or
xor
ds
pusha
and
push
mov
adc
add
push
push
push
int
jne
jle
pop
mov
pop
sub
je
sbb
shl
neg
pusha
int3
lock
pop
jl
and
pop
pop
test
ins
mov
mov
and
stos
cmc
sub
jo
or
das
psubb
int3
jg
add
data16
xor
push
or
sbb
out
xchg
xor
inc
and
nop
jle
inc
(bad)
idiv
mov
shl
pusha
adc
add
mov
jg
shl
shl
rdtsc
rol
push
call
pop
fimul
mov
lea
cmp
js
test
aad
popf
std
pop
das
push
lahf
cli
mov
push
aam
jl
jns
push
rol
mov
aaa
inc
fbstp
stos
and
inc
js
sub
xor
into
adc
dec
test
and
dec
clc
mov
inc
ret
stos
xchg
pushf
sub
or
xchg
sbb
fidivr
mov
not
cmp
loop
push
rol
dec
test
jmp
xchg
push
xchg
outs
es
js
js
xchg
xor
repz
pop
das
push
jmp
adc
push
in
inc
mov
add
push
jmp
sar
push
inc
clc
mov
outs
cmp
adc
adc
dec
call
inc
and
leave
add
xchg
add
pop
cmp
std
adc
loopne
mov
mov
pop
or
cmp
push
sub
les
push
call
cmp
mov
repz
cmc
cmp
add
imul
xor
bswap
or
push
ja
pop
sub
sub
stos
push
jnp
ret
pushf
fs
cmps
(bad)
out
pavgb
pop
std
pop
lds
or
mov
(bad)
xor
cmp
xor
pusha
ror
retw
arpl
call
in
adc
sbb
xchg
push
jo
mov
pop
lea
mov
jl
add
stos
xor
add
rcr
mov
push
ret
out
lock
pop
xor
add
add
sbb
loop
mov
fucompp
or
lods
inc
call
out
adc
(bad)
and
jmp
ror
jbe
call
mov
mov
mov
sbb
mov
sbb
lods
jl
push
sbb
pop
pop
retf
pop
jmp
sbb
lock
fiadd
mov
setnp
pop
dec
or
repnz
jmp
test
pop
in
mov
js
loopne
xor
in
jo
push
adc
(bad)
shl
call
xchg
cmp
fidiv
loope
push
or
mov
imul
jb
or
jmp
call
sahf
xchg
push
pusha
mov
int3
fsubr
and
jl
xor
int
call
loopne
inc
or
fadd
ror
daa
aad
jno
test
jo
cwde
sti
jmp
clc
add
pusha
or
(bad)
lods
xor
std
fcom
push
clc
mov
push
dec
jb
out
adc
adc
call
lods
scas
sub
retf
pop
mov
sti
es
push
call
cmc
dec
jp
pop
inc
popf
sbb
jge
cs
mov
push
inc
mov
nop
lds
pop
and
push
mov
push
sbb
push
push
aam
xchg
dec
jno
or
std
ret
push
jg
idiv
and
inc
(bad)
jb
pushf
mov
cmp
lods
or
loopne
lock
sar
scas
xchg
add
inc
sub
lock
call
call
pushf
push
adc
xor
push
ins
js
(bad)
not
inc
mov
cli
aad
mov
stos
jo
mov
test
clc
jmp
(bad)
xor
jb
mov
pop
jo
pusha
cmc
or
push
int3
add
cmc
inc
fstp
mov
lods
or
cwde
pop
ins
mov
cs
mov
mov
and
adc
sub
(bad)
fist
push
aas
bound
fcom
int3
out
push
es
and
mov
or
call
adc
cmp
pop
mov
out
int
lock
mov
fist
addr16
out
inc
jnp
sub
dec
jmp
add
jmp
adc
fsub
jmp
ror
inc
cmp
xor
mov
mov
mov
(bad)
test
shr
sub
pop
imul
push
inc
add
std
cmps
clc
add
bswap
mov
cld
add
movs
cmps
xor
xchg
push
mov
xor
inc
clc
(bad)
sti
test
pop
xor
cdq
imul
ins
or
adc
mov
pop
call
pushf
push
popa
cmp
hlt
call
jmp
inc
dec
push
call
fsubrp
inc
test
xchg
pop
sub
push
push
jmp
or
push
mov
neg
js
mov
aas
dec
mov
rcl
pop
jp
icebp
shr
fild
fldenv
lock
push
xor
inc
adc
sub
cwde
mov
xor
in
mov
or
inc
adc
xor
mov
dec
fdivr
lea
jb
mov
movs
pushf
adc
lods
push
sub
lock
cdq
pop
lahf
mov
loope
(bad)
jnp
pop
enter
mov
mov
sub
sub
sub
mov
lea
loope
mov
call
(bad)
xlat
adc
out
int
loope
xor
sub
xor
add
pusha
cmps
jecxz
inc
icebp
mov
jmp
sub
das
push
jno
out
test
jno
ja
pop
mov
(bad)
rcl
mov
and
stc
mov
push
jnp
and
lock
push
retf
ret
in
adc
imul
out
not
mov
pop
or
push
jmp
add
xor
js
xchg
jmp
hlt
xor
jo
mov
fnsave
sub
fld
sete
cmps
push
dec
fld
jbe
pusha
fwait
lds
repnz
mov
stos
ds
pop
lea
mov
add
test
dec
sbb
push
and
and
mov
push
pop
es
stos
jns
xchg
jmp
pop
rcl
fld
(bad)
loop
test
sub
faddp
aas
cmp
ss
push
push
pushf
test
xchg
or
adc
jnp
xlat
sar
xor
out
test
icebp
sbb
test
push
and
xor
scas
mov
nop
in
add
(bad)
push
inc
inc
dec
ffreep
stos
(bad)
std
mov
data16
push
pop
cmp
mov
call
aas
clc
sbb
(bad)
push
test
mov
nop
and
dec
out
sub
adc
inc
dec
je
push
mov
mov
(bad)
ins
ret
mov
in
xchg
addr16
pop
stos
cli
cmp
mov
in
sar
or
not
test
push
in
push
jg
sbb
retf
shr
repnz
outs
xchg
ret
popf
js
sahf
cs
jecxz
sbb
cmovs
mov
push
movs
cdq
(bad)
loopne
add
push
jecxz
and
bound
adc
xchg
xor
(bad)
and
pop
jmp
inc
cmp
push
outs
sub
jg
and
dec
in
pop
test
aas
loope
push
jmp
pop
rcr
ret
push
or
jmp
or
and
pushf
pop
sti
jg
push
cmp
mov
lds
push
inc
loop
sub
inc
xor
inc
clc
sbb
or
fs
repnz
inc
popa
call
in
xor
clc
adc
or
or
call
or
cmp
pushf
out
lock
rcl
inc
clc
and
adc
ret
mov
aam
mov
cmp
xchg
call
addr16
out
ret
dec
test
and
sbb
cmp
mov
ror
xabort
fisttp
ins
hlt
rcl
sub
mov
(bad)
movs
test
ins
bound
inc
ror
add
fist
pop
cld
add
pop
je
fdivr
test
scas
test
stos
shl
shr
push
mov
and
getsec
jecxz
adc
imul
lods
mov
out
jmp
and
cmps
jecxz
or
mov
and
adc
push
xchg
jmp
and
jmp
aam
out
cmp
sub
das
cmp
mov
ret
ins
mov
(bad)
mov
mov
test
push
psraw
push
inc
call
cmp
(bad)
(bad)
sti
neg
out
mov
jmp
(bad)
sub
dec
mov
hlt
pop
pop
out
(bad)
mov
adc
jmp
into
dec
pop
cmc
ret
shl
cmps
sub
mov
repnz
fcmovb
jg
pop
and
into
add
sar
jmp
sbb
jmp
jmp
xchg
test
jmp
sub
xchg
fcom
pusha
inc
inc
test
mov
jmp
pop
js
call
push
push
into
mov
adc
dec
pop
or
push
mov
sar
mov
jo
ja
out
or
pop
xlat
mov
mov
stos
mov
or
(bad)
cmp
inc
(bad)
pop
sub
dec
xchg
cmp
lea
pop
adc
inc
dec
pop
fild
sbb
or
sub
icebp
pop
das
pop
cmp
mov
sub
push
push
clc
cld
ins
adc
inc
fnstenv
iret
mov
and
in
sub
sahf
fiadd
jg
sbb
push
push
push
cli
push
sub
rcr
inc
hlt
add
loope
dec
jle
leave
popa
and
xchg
shl
add
(bad)
pusha
loopne
push
push
in
fwait
xor
cmp
pop
pop
stos
fst
aaa
fld
fsubr
fwait
aaa
sub
jecxz
pop
aas
call
sub
sbb
dec
mov
fcom
push
repz
js
or
cli
test
andnps
adc
adc
ins
and
push
push
pusha
fs
jns
out
mov
add
pop
pop
jnp
shl
int
jmp
pop
push
jo
sar
adc
popa
sub
bound
push
jo
mov
out
idiv
sbb
mov
int
gs
fwait
out
data16
or
repz
mov
push
dec
xor
mov
fbld
cmp
nop
or
inc
ret
sub
add
mov
aas
inc
(bad)
xor
push
adc
cmp
add
rcr
dec
mov
rol
jo
pop
xlat
cmp
cmps
or
jge
repz
imul
sbb
dec
sbb
add
dec
cmp
adc
fbstp
add
adc
add
xlat
fisttp
pop
jae
(bad)
ds
push
cmps
aam
pop
ror
add
aaa
and
std
cmp
xor
mov
push
jecxz
or
ret
cmp
(bad)
cmp
movs
cmp
cmp
cmp
mov
clc
push
and
jbe
jb
xchg
(bad)
dec
ret
and
xor
xor
cmp
aas
sbb
mov
inc
shl
ins
sbb
or
and
sbb
cs
rcr
push
and
je
dec
outs
mov
rcr
xor
xor
xchg
in
mov
(bad)
xor
xor
add
and
pop
inc
leave
add
pop
pop
sbb
xor
nop
add
dec
test
cmp
inc
ins
outs
jae
and
outs
cmp
push
sub
sbb
std
cmp
ins
cs
and
imul
jmp
xor
xor
ds
pusha
inc
adc
lods
fwait
adc
jb
loope
sbb
or
mov
inc
fstp
cmp
push
adc
jae
sbb
ins
or
mov
or
jb
sbb
pop
jne
sbb
mov
sbb
mov
cmp
jns
mov
or
das
sti
ss
add
push
adc
pusha
sbb
mov
dec
push
inc
mov
add
jecxz
add
sbb
xor
xor
sbb
sbb
test
and
shr
outs
cmp
data16
pop
inc
(bad)
xor
xor
xchg
icebp
popf
test
cmp
sbb
arpl
cmp
xor
and
sahf
jmp
cmp
push
or
arpl
scas
cmp
scas
in
icebp
test
xchg
inc
mov
cld
cmp
mov
add
add
fs
inc
xor
pusha
cmp
mov
fidivr
fild
sub
aaa
aas
inc
pop
arpl
imul
(bad)
aas
jne
pushf
or
xor
mov
cmc
fst
xor
je
(bad)
popf
out
xor
sbb
fs
mov
jl
xchg
xor
dec
xor
adc
inc
mov
mov
lods
sbb
ja
stos
jmp
xor
dec
adc
cmp
fcom
pop
add
xchg
mov
mov
push
cmp
xchg
cmp
cmp
fdivp
aad
sahf
ins
cmp
cmp
cmp
cmp
and
jl
test
ds
ds
mov
pop
repnz
bound
idiv
icebp
int3
inc
pop
gs
dec
jmp
mov
fisttp
pop
xor
xchg
ss
cli
retf
aaa
sbb
push
shl
add
xor
jmp
sbb
xor
je
inc
mov
inc
inc
cmps
fs
psrlw
push
jmp
sbb
lods
(bad)
sbb
jle
xor
dec
call
xchg
aaa
mov
or
adc
fild
cmp
cmp
inc
mov
push
sbb
cmp
mov
ror
lock
cmp
cmp
cmp
xor
xor
sub
mov
or
mov
scas
cmp
cwde
xor
mov
push
retfw
or
repnz
aas
(bad)
imul
mov
(bad)
jmp
xor
jecxz
inc
bound
jg
fwait
sub
mov
xor
dec
fcom
int
push
xor
xor
xor
xor
xor
dec
ret
or
lods
push
aad
loope
sbb
mov
cmps
jno
jbe
lahf
cmp
(bad)
shr
aaa
inc
(bad)
xor
sub
ror
in
retf
test
cmp
cmp
dec
pusha
xor
rol
scas
xor
xor
mov
movs
cdq
xor
add
imul
popf
data16
push
cmp
cmp
popa
cld
cmps
cmp
or
ret
fs
ins
mov
aas
js
dec
xchg
icebp
mov
loop
xor
jo
xchg
mov
stos
xor
loope
aaa
add
mov
inc
xor
mov
or
(bad)
jmp
lock
es
cmp
scas
and
lods
cmp
cmp
call
adc
jle
cmp
rol
dec
(bad)
or
(bad)
ds
retf
pop
mov
into
nop
cmps
je
xor
fwait
xor
or
mov
sbb
aas
(bad)
adc
ss
ss
mov
or
jae
nop
sub
out
push
dec
(bad)
push
aaa
or
inc
sub
push
inc
bound
mov
dec
jge
xchg
xor
adc
cmp
cmp
adc
jmp
test
mov
lock
repnz
fiadd
mov
sahf
xor
mov
push
jp
retf
and
enter
test
lods
add
je
or
inc
mov
push
adc
aaa
mov
dec
push
and
sub
gs
outs
aaa
jp
inc
xor
sub
mov
sub
adc
cmps
adc
and
inc
xchg
xchg
cmp
mov
imul
and
cmp
aas
sahf
or
lahf
aas
(bad)
mov
add
mov
or
sbb
aas
xor
mov
cmc
mov
aam
xchg
or
xor
mov
adc
pop
cmp
jl
dec
inc
push
xor
jno
xor
retf
mov
js
push
sbb
leave
cli
inc
rcl
ins
pop
inc
sahf
jg
mov
lds
cmp
xchg
cmp
xor
(bad)
or
xor
fwait
mov
in
arpl
add
in
nop
rcr
add
adc
or
push
mov
loopne
loopne
adc
mov
xchg
aaa
mov
cmp
jae
call
(bad)
loope
or
mov
mov
push
loope
(bad)
push
scas
data16
retf
jnp
and
and
ficomp
or
jo
xchg
mov
cdq
jecxz
mov
sar
cmp
lods
or
or
cmp
and
add
mov
jecxz
push
mov
xor
inc
rcr
xor
inc
xor
(bad)
aaa
jle
xor
xor
sbb
inc
mov
out
mov
or
cmp
cmp
leave
call
mov
sub
fwait
cmp
mov
mov
inc
adc
outs
popa
jl
push
retf
inc
xor
push
daa
bound
ss
sar
add
test
(bad)
ds
adc
push
(bad)
dec
pop
div
or
xor
xchg
shl
xchg
adc
cmc
adc
xor
retf
xor
mov
call
jg
xchg
stos
add
adc
div
cmp
cld
cmp
mov
xor
pop
rol
and
push
test
or
xor
pop
pop
pop
sbb
xor
cli
pop
xor
imul
icebp
xor
xor
sub
or
inc
inc
arpl
(bad)
aaa
xchg
jmp
cli
or
inc
xchg
push
out
(bad)
scas
mov
xor
cmp
es
cmp
loop
xor
daa
xor
aaa
sbb
push
(bad)
xor
cs
xor
jle
or
cmp
cmp
cmp
cmp
(bad)
jmp
mov
ret
xor
inc
mov
outs
adc
cli
inc
cmp
icebp
shl
sbb
jp
mov
into
xchg
(bad)
test
jmp
bnd
std
jmp
sbb
inc
pop
xor
je
mov
xor
mov
xchg
jno
popa
pop
or
inc
fsub
dec
ins
repnz
xor
push
or
cmc
ss
shr
inc
dec
jge
xchg
dec
(bad)
int
ds
cmp
data16
clc
cmp
cmp
jp
into
inc
sbb
scas
(bad)
push
sub
test
aas
mov
ret
js
sbb
xchg
inc
sbb
push
sbb
fistp
mov
xor
cli
div
bound
pop
push
cs
mov
xor
xor
xchg
cmp
push
daa
push
and
icebp
push
mov
enter
cmp
mov
imul
push
sub
scas
retf
or
push
(bad)
pop
xchg
xor
adc
ret
cmc
loope
push
mov
cwde
xor
ss
aaa
inc
and
adc
mov
jle
(bad)
repz
mov
cmp
xor
aas
fcom
clc
sahf
pop
inc
xor
scas
adc
imul
mov
ret
out
xor
call
mov
dec
adc
into
repnz
push
rcl
sbb
cli
mov
dec
sbb
stos
cmp
ds
sti
push
mov
dec
aas
inc
aas
xchg
jno
add
loopne
xchg
inc
and
mov
fld
xor
cli
sahf
xchg
mov
sti
mov
xor
lea
sub
dec
dec
sbb
sti
retf
push
ds
cmp
push
dec
out
nop
mov
mov
push
sub
cmp
gs
mov
push
pop
xchg
push
bnd
xchg
aas
mov
pop
add
out
(bad)
nop
mov
mov
pop
push
retf
shl
or
int
xlat
es
adc
sbb
ds
push
xor
mov
add
sbb
mov
or
xor
xor
sbb
xor
xor
and
cmp
cmp
sar
mov
xchg
push
pop
mov
cmp
cmp
cmp
sub
jno
add
cmp
retf
push
sub
pop
enter
inc
mov
or
inc
adc
or
push
mov
int3
pop
fs
xor
xor
mov
xor
xchg
jno
ss
loop
cmp
sbb
(bad)
jae
mov
inc
and
or
call
push
leave
push
mov
and
mov
xchg
dec
movs
dec
mov
mov
cmp
or
or
mov
mov
retf
fidivr
cmp
jno
xchg
lods
ds
inc
outs
mov
xchg
jb
pop
push
mov
outs
xor
(bad)
out
sub
add
push
cmp
js
mov
rcl
cmp
rcl
and
add
test
push
push
jl
mov
adc
aaa
cmp
movs
cmp
or
retfw
retf
adc
xchg
cmp
cmp
push
inc
nop
clc
cs
xchg
cmp
jge
scas
cld
aas
ror
(bad)
dec
sub
xlat
inc
(bad)
jnp
mov
and
je
push
xor
mov
inc
bound
into
fdivr
stos
mov
loopne
pop
jle
xor
imul
jno
out
xor
(bad)
push
mov
cmp
ins
cmp
push
(bad)
cmp
mov
pop
cmp
loop
test
mov
aam
cld
mov
dec
cli
jnp
xor
or
retf
icebp
int
cwde
rcl
jnp
repz
add
int
inc
jg
lods
xor
xor
xor
mov
xchg
xchg
inc
cmp
inc
xchg
push
ins
sbb
push
(bad)
fdivr
test
(bad)
aas
iret
(bad)
out
repz
dec
(bad)
pop
cli
pop
xor
dec
fild
xor
push
xor
retf
fiadd
popa
shr
xor
xor
inc
leave
clc
outs
push
xor
sti
aaa
(bad)
xchg
dec
fld
mov
mov
push
cmp
or
icebp
cmp
ins
bound
dec
sbb
test
fiadd
mov
icebp
inc
xor
cmp
xchg
rol
dec
cmp
push
arpl
sbb
xchg
cmp
cwde
retf
sub
sar
cmps
ds
pop
imul
xchg
outs
xor
jge
icebp
das
push
dec
xor
xor
int
xchg
push
xor
mov
cmc
dec
mov
jecxz
push
movs
adc
sbb
and
adc
sar
lock
retf
cmp
sub
mov
ret
mov
or
push
cmp
xor
xchg
inc
out
outs
push
jno
popa
sbb
push
(bad)
(bad)
ds
pushf
push
aas
in
lar
xor
adc
sub
inc
inc
out
mov
sbb
inc
push
aam
fadd
in
test
pop
add
mov
and
call
add
xchg
sub
mov
pop
(bad)
push
call
dec
ds
call
nop
idiv
scas
aas
test
xor
xor
out
hlt
jl
ins
sbb
xor
jne
sar
call
xlat
cmp
cmp
aam
mov
cwde
or
pop
(bad)
adc
ins
lock
inc
test
dec
cmp
cmp
mov
sbb
div
test
add
fcom
cmp
clc
ret
icebp
cmp
cmp
and
cmp
scas
jle
into
ret
ds
pop
adc
aaa
pusha
add
xor
jp
lods
push
jb
jmp
sbb
dec
cmp
xchg
rol
je
test
fnstcw
out
ror
xor
aas
xchg
mov
push
stos
pusha
imul
push
jbe
add
xor
and
mov
call
gs
xchg
dec
rol
push
outs
ja
cmc
inc
nop
sbb
xor
xor
mov
int3
clc
das
add
cmp
cmp
cmp
mov
add
jge
sbb
cmp
jp
cmp
dec
cmp
pop
cs
cmp
xchg
das
lock
mov
and
push
loopne
call
leave
clc
cmp
adc
sbb
xor
rcr
(bad)
and
ds
dec
push
mov
aaa
push
dec
clc
inc
cmp
inc
xchg
mov
cmp
cmp
xchg
xor
push
cmp
mov
xlat
iret
or
sbb
xchg
dec
xor
sbb
xor
xor
add
xchg
inc
inc
cmp
ret
cmp
retf
outs
jg
add
xor
xor
xor
cmp
mov
xor
dec
xor
or
sub
loope
jnp
stc
cmps
jne
fadd
out
mov
xchg
out
std
mov
cmp
xor
or
xor
push
jge
sahf
pop
out
sahf
cmp
cmp
ss
(bad)
adc
jno
ret
sbb
adc
ds
sub
pop
fnsave
out
or
ss
mov
stos
sub
test
xchg
mov
shr
cmc
pop
stos
jmp
dec
imul
aaa
dec
mov
push
push
ss
cmp
rcr
pop
outs
ss
cmp
jbe
bound
push
repz
repz
sar
aas
xor
xor
xor
repnz
xor
adc
xor
stos
jle
test
hlt
ss
xchg
call
test
or
dec
xor
in
push
jecxz
cli
mov
push
loopne
arpl
popa
sbb
(bad)
(bad)
lock
jnp
scas
aas
ds
ds
mov
push
xchg
gs
cli
xor
xchg
xchg
add
sbb
fdiv
inc
push
xor
mov
test
mov
mov
scas
sbb
mov
call
je
popf
xor
inc
adc
jg
shl
xor
xor
xor
dec
xor
out
adc
jecxz
push
cli
sub
xchg
adc
sbb
test
int
out
das
cmp
outs
retf
push
fsubr
add
daa
pop
pop
and
mov
push
loopne
(bad)
mov
pop
sub
jg
cmps
call
cmp
mov
jbe
cmp
outs
inc
test
cmp
cmp
cmps
push
(bad)
lods
pop
cli
ja
cmp
adc
jle
cmp
icebp
je
stos
fimul
pop
mov
(bad)
dec
nop
push
test
adc
fnstenv
or
push
or
call
xlat
cli
mov
dec
pop
jbe
mov
(bad)
push
adc
inc
pop
gs
push
mov
enter
xchg
sub
cmp
adc
(bad)
data16
rcr
out
mov
jmp
cmp
xchg
mov
add
cmp
jbe
sub
sbb
push
ret
movs
push
mov
(bad)
xor
push
push
or
scas
inc
neg
xor
xor
les
mov
push
leave
sub
cmp
stos
sti
adc
lock
push
sub
das
cmp
out
push
ja
xchg
cmps
(bad)
cmp
imul
mov
and
push
and
xor
mov
push
sub
inc
jp
xchg
call
inc
enter
retf
push
xor
push
sbb
ja
ret
push
scas
cmp
dec
cmp
xor
xor
adc
jb
cmp
shl
push
(bad)
cmp
into
call
arpl
call
ret
xchg
xor
or
jecxz
cmp
div
xchg
test
fs
(bad)
xor
inc
je
inc
mov
jo
push
(bad)
sar
aaa
xor
jns
int3
mov
sbb
outs
outs
inc
inc
or
inc
aaa
fs
adc
dec
xchg
shl
and
xor
enter
es
add
popa
bound
cmp
fsubr
jle
xor
xchg
jp
dec
aad
cmps
shl
inc
mov
(bad)
sbb
adc
push
push
mov
jp
xchg
ror
stos
and
mov
xchg
mov
mov
push
fidiv
les
jecxz
cmp
cs
shl
ficomp
xchg
jmp
call
push
sbb
and
hlt
xchg
nop
rcr
sbb
jne
ja
cmp
mov
mov
sbb
mov
loope
jmp
mov
dec
and
jne
aas
jle
mov
add
sub
outs
les
fiadd
xchg
mov
xor
dec
xchg
fisttp
xchg
mov
cmps
add
ret
cmps
or
(bad)
into
outs
fiadd
push
pop
push
or
pusha
sbb
sub
stos
cmc
push
retf
outs
or
inc
xor
ret
xor
pop
push
popa
shl
mov
bound
(bad)
mov
push
add
(bad)
ds
ss
lock
sbb
out
es
inc
adc
aaa
fs
loop
xchg
rol
sub
push
cmp
cmc
cmp
mov
cmp
data16
call
push
cmp
adc
cmp
xchg
retf
xchg
xor
inc
mov
fwait
cmp
cmp
add
pop
cmp
mov
mov
(bad)
cmp
xor
and
(bad)
or
sbb
sub
cmp
pop
(bad)
jo
adc
mov
xchg
outs
xor
cmp
jp
or
mov
inc
add
add
pop
cmp
ss
mov
jle
movs
xor
push
cld
mov
lea
cs
repz
add
aaa
icebp
repnz
inc
bound
outs
push
call
outs
(bad)
jle
add
xchg
(bad)
cmps
adc
out
cmp
out
pop
sbb
out
test
(bad)
fwait
mov
add
scas
cs
dec
cmp
bound
ins
(bad)
cmp
add
es
dec
rol
mov
adc
mov
cmp
cmp
cmps
int3
or
loope
in
cmp
int3
xor
sub
push
js
into
cmp
add
sbb
add
jge
mov
cmc
xchg
lods
mov
push
les
sbb
fwait
or
js
adc
xor
call
xor
mov
jmp
add
dec
inc
mov
(bad)
xor
(bad)
clc
jecxz
mov
adc
xor
fisub
sbb
mov
or
enter
adc
xor
aaa
dec
push
mov
(bad)
mov
(bad)
cmp
lea
(bad)
pushf
jb
aad
shr
jmp
xor
sahf
cmp
pop
xor
push
mov
rcl
div
mov
pop
(bad)
cmp
push
es
push
mov
mov
sbb
or
or
pop
sub
aad
jbe
mov
push
in
(bad)
mov
xchg
retf
data16
or
es
and
inc
ror
xor
jno
int
or
mov
jle
push
xor
dec
xor
fidiv
push
and
cmp
pop
jg
xor
add
xchg
mov
adc
lds
sub
add
mov
jmp
idiv
cmp
sub
sbb
dec
cmp
retf
cmp
fidivr
aas
cmps
xor
inc
mov
xor
sub
xchg
ss
mov
std
icebp
cmc
popf
jbe
aaa
mov
mov
adc
je
or
sbb
dec
mov
inc
test
adc
out
out
cmp
xchg
cmp
aas
cmp
loop
loopne
cmp
neg
pusha
jp
retf
js
add
jl
test
mov
test
icebp
rol
fsub
sar
pop
clc
mov
cmp
cmp
push
aas
loop
add
lea
pop
push
es
clc
das
outs
cdq
xor
jns
and
adc
int
mov
lods
data16
mov
cli
push
enter
stos
(bad)
cmc
jp
cmp
fld
aam
xchg
push
aaa
mov
cmp
outs
out
pop
pop
push
add
add
jb
xor
sbb
add
sbb
or
mov
mov
call
mov
pop
jle
pop
xor
arpl
iret
xor
push
pop
sbb
shl
mov
xchg
xor
cmp
dec
mov
cli
out
inc
mov
adc
stos
jp
push
daa
xor
xor
mov
xchg
inc
and
xor
ja
xor
jbe
dec
ss
cmp
nop
icebp
pop
ds
mov
add
(bad)
pop
(bad)
push
jae
mov
jbe
jp
push
mov
into
js
sbb
xchg
and
sbb
or
movs
cs
cmp
cmp
cmp
jae
popf
mov
adc
pop
or
cmp
data16
mov
bound
ds
adc
xor
and
mov
pop
add
jne
xchg
add
in
call
xor
(bad)
pop
or
sbb
add
shl
aaa
add
cmp
inc
push
push
adc
bound
mov
mov
(bad)
cmp
inc
cmp
xor
cmp
into
repnz
cs
ins
and
sbb
cmp
aaa
mov
add
or
pop
mov
mov
jle
mov
push
adc
cmp
cmp
ds
xor
cmp
push
jg
shr
dec
aaa
aas
ss
out
mov
jno
add
cmp
cmp
loopne
sti
mov
clc
popf
js
pop
adc
cmp
dec
not
arpl
jb
mov
push
xchg
xor
mov
lock
pop
fidivr
xor
xchg
add
mov
sub
cmp
push
xchg
sub
push
inc
sub
xchg
cs
jo
xor
push
xchg
mov
sub
xor
sahf
or
push
ja
inc
pop
inc
and
test
pop
mov
xor
inc
cmps
jo
pop
cmp
sub
sub
aaa
cmp
aas
push
inc
sbb
inc
cs
jge
xchg
cmp
and
jbe
popf
cmp
loope
cmps
add
push
pop
mov
inc
bound
push
shl
mov
(bad)
xor
mov
push
mov
retf
loop
push
xor
and
aas
xchg
outs
test
pop
add
inc
stos
sbb
das
shl
or
cli
xor
cmp
test
inc
or
dec
popw
jle
push
stos
push
xor
xor
push
xchg
push
movs
xchg
inc
loop
push
add
mov
mov
and
in
fs
(bad)
icebp
cmp
jmp
jbe
(bad)
mov
and
rcr
bound
mov
xchg
xor
xchg
mov
loopne
sbb
ret
jo
xor
push
test
mov
aaa
push
sub
sbb
xor
mov
sub
xchg
jo
test
mov
lds
aad
jae
push
repnz
push
push
nop
xor
push
cmp
dec
or
mov
ss
clc
mov
sub
push
cmp
dec
aad
loope
rcl
jbe
pop
cmp
les
shr
sbb
add
xchg
test
xchg
div
cld
mov
add
sub
pop
les
(bad)
mov
push
inc
sbb
mov
or
dec
sbb
xor
sub
jmp
push
dec
test
xor
out
inc
adc
shr
xor
jb
into
and
das
je
jg
stos
push
ss
ss
jmp
add
xor
mov
jns
fnstenv
jo
ret
and
cmp
sub
push
aas
call
jno
ja
nop
aas
xchg
mov
adc
xor
xor
cmp
cmp
or
sbb
or
xchg
fdivr
ret
mov
pop
add
jl
pusha
mov
xor
repnz
push
cld
jo
xor
mov
xor
out
scas
sub
mov
shl
mov
cs
loopne
xchg
ret
cmp
fisub
or
dec
adc
ja
(bad)
ins
cmp
jmp
inc
out
je
popf
test
lods
cmps
sub
repz
fcomp
test
test
push
jne
push
lods
jmp
xchg
mov
pop
sub
repnz
or
push
xor
sub
mov
sub
pop
dec
sbb
mov
ss
mov
fisub
aaa
dec
aaa
pop
inc
mov
jl
jbe
cmps
push
sub
fstp
mov
inc
and
cmp
push
sbb
mov
cmp
jb
push
cmp
add
mov
out
sbb
scas
push
rcr
out
aaa
mov
mov
add
xchg
icebp
test
mov
or
(bad)
push
inc
popf
ds
out
ds
lods
or
pop
add
sub
inc
lahf
pop
into
xor
lahf
adc
push
jg
mov
xchg
stos
jecxz
push
xor
mov
xchg
inc
mov
xor
push
mov
stos
xor
jo
scas
clc
inc
xor
outs
push
loop
sub
loopne
aaa
push
mov
add
sub
lock
add
cmps
cmp
test
ds
adc
add
rol
xor
adc
jno
gs
xor
push
sbb
and
sbb
mov
popf
push
enter
inc
cmps
fist
xor
xchg
clc
test
mov
cmp
daa
jno
mov
push
xor
ret
dec
sub
push
cmp
adc
jecxz
ret
cmp
cli
std
ds
inc
(bad)
mov
mov
or
jmp
pop
mov
adc
cmps
sbb
cld
pop
xchg
jno
xor
jns
test
xchg
aad
and
aam
out
push
mov
lods
push
jbe
mov
mov
inc
cmp
call
add
mov
dec
adc
adc
ret
rcr
xor
xor
sub
icebp
pop
ret
(bad)
jmp
adc
daa
mov
add
cmp
cmp
je
or
add
xor
xor
jmp
test
push
xor
xchg
or
xor
xlat
rcr
dec
inc
pop
fisub
xchg
sar
xor
xor
loop
jbe
mov
jbe
bound
jae
retf
outs
xor
push
test
cmp
outs
ss
jle
call
call
fs
mov
jmp
mov
stc
xchg
sbb
or
aaa
inc
into
push
xchg
jne
push
pop
sar
fild
jae
push
push
adc
jp
pop
jo
inc
test
xchg
ds
loope
ss
add
test
(bad)
push
push
cmp
xor
mov
inc
das
clc
cmp
pop
add
fist
inc
push
ins
sbb
ss
xor
xchg
mov
cmps
push
xchg
(bad)
(bad)
test
hlt
popf
rcr
cmp
cmp
jbe
into
jae
call
fdivp
stos
sbb
aaa
outs
push
and
sub
inc
cmp
dec
sbb
lods
cmp
stc
outs
ins
mov
jmp
cmp
mov
stc
mov
sub
idiv
sub
add
pop
ds
mov
adc
sar
(bad)
push
test
add
or
and
sub
xor
mov
push
(bad)
or
pop
push
mov
push
ss
pop
mov
pop
sbb
mov
jno
xor
adc
adc
mov
inc
es
dec
aas
pop
xchg
pop
jge
and
leave
mov
sar
add
repnz
push
sub
add
or
pop
add
jno
dec
push
mov
pop
popa
xchg
fidivr
call
test
push
mov
xor
je
lods
cmp
cmp
(bad)
mov
xor
cmp
cmp
ja
shr
loope
jb
fisub
push
test
mov
or
add
scas
adc
pop
mov
sbb
sbb
call
push
jecxz
icebp
bnd
ss
adc
push
scas
push
jbe
mov
stos
cmp
inc
movs
mov
fdivr
icebp
sub
sbb
jbe
lahf
cmp
fwait
icebp
cmp
cmp
loop
cmp
add
add
mov
iret
add
mul
jmp
aas
sub
mov
ss
xor
retf
or
jae
push
add
mov
xacquire
sub
jbe
inc
(bad)
rcr
xchg
inc
daa
xor
xor
imul
xchg
out
mov
sub
mov
retf
sub
push
mov
ss
xchg
add
xor
cld
xchg
jb
xchg
sbb
mov
or
cmp
inc
add
add
ror
or
sub
jb
mov
inc
sbb
cmp
bound
cmp
jo
add
neg
xchg
mov
cmp
(bad)
push
mov
sbb
jb
shl
push
loop
(bad)
fild
or
cmp
test
push
mov
adc
push
sub
jge
ret
push
xchg
outs
cs
xchg
fucomi
or
mov
(bad)
adc
mov
sub
loopne
js
sbb
lods
dec
jecxz
xor
xor
add
mov
mov
lods
xor
sbb
ficomp
cs
xor
xor
mul
jmp
jns
sahf
jmp
push
ficomp
imul
add
(bad)
pop
nop
push
nop
cmp
retf
push
clc
aaa
or
leave
xor
xchg
cwde
sub
es
shr
pop
out
mov
test
sub
sub
push
shl
fdivr
or
outs
into
test
call
or
(bad)
inc
rcr
or
inc
rcl
data16
sub
or
cmp
cmp
xchg
pop
scas
(bad)
pop
imul
scas
mov
push
add
mov
stc
das
adc
xchg
out
or
cmp
or
mov
pop
data16
mov
xchg
into
mov
and
adc
mov
stos
inc
lds
mov
test
out
(bad)
fadd
in
mov
div
mov
push
jb
xor
pop
mov
pop
cmps
and
mov
adc
outs
shr
push
jno
mov
or
xor
pop
xchg
(bad)
stos
add
push
xor
inc
cld
xchg
clc
inc
mov
jb
mov
fwait
xor
and
xor
push
mov
es
adc
dec
xor
pop
xor
inc
fild
bound
(bad)
icebp
push
xchg
dec
push
cli
leave
es
xor
xchg
adc
es
cli
adc
xor
enter
push
pop
xor
test
fwait
call
and
dec
xchg
int3
xchg
outs
push
push
(bad)
pop
jl
cmp
cmp
xchg
mov
add
jp
fcom
xor
xor
sub
pop
out
pop
ret
add
add
jle
add
outs
repnz
pop
pop
sub
aaa
ss
push
sub
add
adc
cmps
ja
mov
mov
cmp
push
xchg
cmp
mov
mov
cmps
out
add
movs
adc
and
or
push
dec
adc
ret
cmp
cs
mov
push
add
cli
add
test
xchg
xor
xor
jne
lock
pop
ss
push
inc
stos
cmp
push
mov
loop
push
loope
mov
dec
sbb
rep
and
das
inc
cmps
jae
(bad)
cmp
xor
cmp
lods
cdq
mov
inc
xchg
dec
dec
dec
mov
and
sbb
xor
dec
xor
mov
xor
(bad)
into
jmp
jno
leave
cmp
data16
jle
bnd
mov
aas
call
or
xor
xchg
jp
cmps
cs
das
xor
xor
inc
xor
stos
pop
pusha
cmp
pop
aaa
(bad)
cli
add
(bad)
cmp
out
add
or
inc
ret
xor
jbe
inc
mov
push
shl
push
cwde
xchg
pop
stc
push
add
mov
mov
sahf
xor
lds
scas
imul
aaa
cmp
frstor
dec
push
es
jecxz
cmp
push
bound
es
test
xor
mov
lahf
nop
jo
xor
xor
lea
fdivp
bound
int3
add
push
into
jbe
lea
dec
ss
sahf
cmp
push
lea
(bad)
call
mov
mov
fidivr
add
ret
retf
cmp
cmps
cmp
inc
mov
adc
push
call
rol
add
inc
adc
call
mov
shl
push
fadd
pop
xor
add
sub
cli
sub
pop
xchg
fs
lea
xor
stos
mov
mov
and
push
xor
mov
mov
mov
push
gs
lds
xor
out
cmp
lahf
out
aaa
fidivr
(bad)
mov
icebp
lock
jmp
dec
xor
and
add
mov
call
je
sbb
sub
out
cmp
cmp
jg
mov
test
sbb
shr
repnz
or
sbb
push
inc
es
cmp
sar
cs
into
pop
xchg
ds
jge
mov
mov
xchg
mov
mov
dec
leave
or
xor
outs
pop
xlat
sub
jne
aaa
push
xor
push
jmp
sar
xor
mov
cmp
mov
cmp
and
pop
and
cs
pop
mov
loopne
pop
push
and
push
jmp
adc
pushf
out
test
stos
inc
jecxz
pusha
xchg
outs
repz
or
cmp
cmp
push
(bad)
ror
loop
icebp
push
pop
test
add
add
ds
add
aas
ds
jb
ds
or
xchg
push
ds
int
or
jmp
mov
mov
scas
dec
sar
fld
push
(bad)
wrmsr
sub
dec
dec
arpl
ror
rcl
(bad)
not
(bad)
lea
cwde
inc
push
adc
cs
xor
xor
out
xor
test
sbb
sub
xor
inc
mov
data16
fdiv
hlt
jne
mov
xor
inc
das
push
xor
push
(bad)
ss
mov
fidivr
add
dec
ret
ret
cmp
adc
mov
cs
xor
iret
push
pop
pop
pop
test
lea
xor
(bad)
aaa
mov
cmp
fdiv
stos
jmp
rol
mov
in
add
inc
mov
jb
out
mov
cmp
sbb
push
cmp
stos
(bad)
xor
aaa
mov
add
aaa
mov
sahf
xor
push
lods
inc
sub
call
cmps
out
cs
dec
jecxz
clc
jno
dec
jle
cld
xor
aaa
cmps
shl
mov
cmp
add
adc
adc
xor
imul
call
push
dec
mov
xor
das
mov
xor
(bad)
mov
push
xchg
sahf
jecxz
dec
sub
mov
mov
cmp
mov
mov
sbb
mov
pop
add
xor
push
ss
(bad)
sbb
out
pop
push
cmp
mov
into
jo
xchg
adc
mov
inc
xor
jno
mov
adc
sub
fidivr
xchg
dec
leave
int
fisttp
test
cmp
cmp
aas
aad
sbb
bound
mov
mov
jb
xor
xor
cwde
sub
dec
loopne
scas
(bad)
in
dec
mov
mov
mov
jp
lea
cmps
or
add
arpl
xor
lods
dec
in
and
xor
test
pop
ror
sbb
popf
mov
bound
ret
retf
in
aam
or
ret
mov
enter
inc
rol
and
inc
mov
adc
out
ror
mov
jmp
mov
push
call
xor
push
out
sub
push
movs
xor
jg
dec
mov
sbb
scas
add
mov
mov
or
cmp
jmp
push
adc
cs
mov
inc
mov
fdiv
dec
dec
jne
out
adc
cmp
(bad)
inc
aas
cmps
sub
or
mov
scas
(bad)
xor
xor
(bad)
in
xor
push
das
cmp
mov
sbb
dec
cmp
dec
retf
lea
jno
sbb
adc
push
loopne
inc
and
xor
dec
adc
or
mov
ss
xchg
fidiv
inc
and
sahf
(bad)
outs
je
rcl
jl
sar
int3
push
stc
repnz
add
adc
jo
scas
outs
dec
inc
mov
mul
dec
xor
pop
push
sub
xor
icebp
cmc
sub
sub
xchg
mov
popa
cmp
jecxz
imul
movs
inc
jl
ins
cmc
rcl
add
cmp
jbe
push
xor
push
mov
or
mov
push
movs
push
cmp
xchg
idiv
adc
or
(bad)
stos
push
pop
sbb
cmp
push
(bad)
pop
test
(bad)
pop
daa
scas
or
sbb
mov
sub
push
xor
sub
in
mov
neg
rol
mov
push
stc
loopne
mov
cmp
pop
and
sub
xor
add
adc
jle
xchg
mov
pop
and
outs
sbb
pushf
outs
push
pop
mov
mov
mov
add
cmps
inc
ror
sub
add
rol
push
jl
data16
mov
mov
cmp
mov
(bad)
xchg
sbb
adc
call
xor
shr
(bad)
sar
jle
add
push
std
add
xor
popf
movs
es
mov
lods
push
popa
push
ja
xchg
ds
jecxz
lods
push
push
outs
push
mov
pop
dec
test
call
jmp
(bad)
dec
or
aaa
bound
clc
push
aaa
xor
adc
jg
jae
inc
cmp
inc
mov
repnz
adc
and
mov
test
mov
inc
ins
push
shr
adc
pop
jmp
push
sar
cmp
mov
push
bound
push
cmp
inc
sub
js
mov
push
xor
(bad)
mov
loop
xchg
jae
inc
xor
xor
cmp
push
lea
mov
push
test
and
imul
xor
pop
imul
popf
retf
sbb
test
loop
nop
ss
inc
mov
ror
xadd
pop
inc
add
scas
cli
xchg
les
dec
cmp
and
or
jb
test
ret
sar
sbb
cmp
push
add
retf
outs
xor
cmp
sahf
cmp
mov
pop
mov
xchg
push
ret
into
jno
add
and
movs
test
(bad)
xchg
ror
mov
sbb
pusha
inc
cmp
mov
jmp
cmp
(bad)
xlat
out
aas
outs
test
out
clc
ffreep
ins
fadd
push
push
js
mov
xor
inc
aad
and
add
test
test
or
shl
push
mov
(bad)
pop
pop
xchg
call
leave
add
(bad)
fldenv
xchg
les
(bad)
rol
mov
repnz
fadd
cdq
and
mov
fsubr
shl
fadd
je
sub
add
sub
xor
mov
aam
test
ret
mov
xor
sbb
add
test
xchg
fidiv
adc
inc
aaa
and
mov
mov
xchg
inc
rcr
push
cmp
or
cmp
ret
adc
mov
jl
mov
stos
enter
or
(bad)
cmp
and
cmps
mov
xchg
jmp
mov
dec
pop
pop
mov
outs
rcl
loop
loop
mov
or
push
stos
outs
rcr
jb
mov
xor
pop
mov
cs
(bad)
ds
shr
fwait
rcr
call
pop
fidiv
shl
sub
dec
jmp
xchg
ss
es
add
dec
push
lea
jp
(bad)
push
sbb
inc
jae
fidiv
push
rcr
bound
pop
mov
cmps
(bad)
or
cmp
popa
sub
xor
repnz
and
sbb
sar
push
(bad)
or
movs
aas
jp
dec
mov
movs
or
xor
lds
into
adc
lea
aas
add
dec
mov
adc
sub
cmp
add
xchg
xor
in
sub
dec
sbb
and
mov
pop
and
js
clc
mov
sub
ds
aad
iret
hlt
das
lock
xor
out
repnz
test
push
or
jmp
add
(bad)
cmp
outs
dec
mov
rcl
cmp
or
fist
push
jnp
inc
xor
mov
inc
inc
pop
outs
push
stc
inc
clc
cmp
cmp
sbb
aas
cmp
or
cmp
inc
mov
dec
inc
or
pop
aad
xchg
mov
dec
fsubp
or
or
pop
das
pop
in
dec
cmp
out
add
add
sub
gs
not
lods
inc
mov
ss
cmp
inc
and
add
lods
cs
jp
bound
fadd
cmc
icebp
pop
jle
xor
cmp
cmp
sub
clc
jl
mov
inc
cmp
scas
jp
push
and
xor
mov
jle
aas
stos
not
add
(bad)
adc
cwde
sub
into
(bad)
xor
mov
icebp
xor
xor
into
fmul
adc
push
cmp
(bad)
sub
mov
(bad)
cmp
retf
mov
call
mov
adc
(bad)
xor
cmp
xor
push
pop
repnz
and
xor
fisub
sbb
aam
mov
ret
mov
mov
aaa
shr
(bad)
cmp
imul
cmp
jg
nop
jle
mov
mov
cdq
mov
dec
inc
(bad)
xor
out
into
cmps
shl
adc
rcl
(bad)
push
or
xor
dec
ds
mov
bound
dec
ja
dec
cmp
idiv
push
ret
stos
mov
enter
or
cmp
pusha
test
inc
mov
inc
test
dec
and
sub
xchg
sar
or
mov
repnz
test
int
xor
add
pop
pop
jg
inc
mov
out
call
or
or
sbb
sub
call
int
mov
xor
mov
aaa
push
into
mov
add
push
push
cmc
inc
jno
cs
cwde
jle
adc
imul
jmp
gs
jne
out
jp
push
push
push
mov
rcr
iret
cmp
imul
mov
jne
mov
mov
test
xor
cmc
push
xor
xor
retf
xor
inc
xchg
sub
sbb
push
dec
push
cmp
xchg
sub
add
inc
adc
push
push
mov
or
lea
jmp
outs
xor
jp
cmp
rol
fidivr
or
cli
dec
cmp
cwde
or
mov
xor
ror
into
pop
inc
push
bound
jp
mov
push
stos
mov
fiadd
ds
mov
daa
jmp
dec
js
inc
xchg
or
dec
mov
jp
dec
popf
xchg
sbb
stos
adc
adc
(bad)
or
mov
gs
scas
inc
or
iret
pop
dec
inc
jmp
arpl
mov
lods
hlt
xor
jb
pop
mov
dec
ja
mov
sub
mov
sub
push
mov
mov
cmp
adc
sub
or
fidivr
xor
loop
aaa
jecxz
loope
pop
add
pop
call
xor
inc
loop
cmp
iret
push
or
sbb
or
out
cmp
shl
pusha
mov
test
mov
inc
dec
in
add
jmp
push
pusha
retf
add
cmps
xor
inc
and
jecxz
mov
ss
clc
mov
cmp
fnstsw
sub
and
xor
cli
popa
cmp
sbb
cmp
es
sbb
lds
jmp
cmp
mov
push
push
mov
rol
cmp
dec
dec
push
popf
cli
loope
jl
add
cs
sbb
push
inc
or
push
jo
imul
or
cmp
jb
pop
shr
adc
inc
scas
repnz
(bad)
ror
sub
jns
je
jmp
mov
cmps
push
xor
mov
fstp
adc
push
loopne
scas
push
ret
sub
sbb
mov
(bad)
sbb
and
dec
sub
pop
cwde
cmp
retf
shl
or
xor
xchg
fnsave
inc
xor
sbb
jmp
xor
ds
push
es
mov
jmp
sub
cmps
sbb
jo
push
cmp
add
jecxz
in
repnz
mov
push
mov
xchg
std
xor
mov
pop
pop
mov
or
xchg
jle
test
mov
retf
mov
cmp
icebp
add
cmp
aaa
dec
inc
movs
xchg
lock
scas
or
mov
xchg
xor
stos
xchg
push
xor
push
sbb
xor
mov
test
scas
push
(bad)
fimul
ficom
aaa
dec
and
push
data16
sub
sbb
cmp
inc
mov
cli
pop
call
arpl
fcmovbe
add
inc
cmps
cmp
lea
not
out
scas
nop
scas
nop
jbe
xor
retf
out
xor
cmps
(bad)
xor
mov
test
pop
mov
cli
or
cmp
sbb
inc
jne
icebp
push
cmp
sti
cmp
cmps
ret
cmp
call
pop
add
or
je
or
ds
mov
(bad)
fwait
or
add
call
fucomi
dec
ror
or
and
mov
js
or
add
jg
shl
xor
mov
xor
ss
xor
mov
aaa
rcl
cs
cmp
and
sub
or
ret
cmp
push
mov
bound
sub
pop
push
js
xor
in
push
mov
fadd
stos
xor
sub
pop
int
rcl
xchg
imul
and
cmp
cmps
mov
and
outs
nop
mov
jmp
loope
xor
cs
push
dec
add
icebp
push
fistp
sbb
sbb
pop
cmp
(bad)
sbb
test
xchg
mov
dec
out
je
mov
mov
stos
jne
sub
xor
cmp
cmp
pop
js
jb
or
mov
xor
movs
mov
sub
test
je
xchg
and
loop
adc
sub
or
xor
cmp
push
mov
cmp
pop
ds
cmp
(bad)
cmp
xor
cmp
rcl
sub
push
cmp
call
sbb
push
popa
mov
xchg
xchg
out
aas
sub
jne
mov
mov
outs
mov
xchg
sbb
push
push
call
cmp
push
jle
retf
mov
adc
push
loop
pop
aaa
sahf
push
jecxz
(bad)
mov
xor
xor
pop
push
pop
jb
mov
inc
es
sbb
mov
es
aaa
sub
dec
sar
push
sub
xor
push
fiadd
cmp
bound
mov
and
inc
inc
inc
and
mov
add
xchg
mov
mov
add
ss
ss
cmps
mov
into
sbb
out
mov
fmul
xchg
scas
ss
inc
mov
push
mov
push
outs
pop
mov
call
test
sar
adc
in
lods
add
pop
mov
push
test
fimul
stos
mov
and
jle
daa
mov
(bad)
push
xor
xor
mov
add
xor
call
cmp
push
mov
mov
or
jmp
or
data16
inc
and
(bad)
cmp
adc
inc
cmps
imul
daa
inc
pop
dec
pop
push
xor
aas
aaa
inc
pop
ret
inc
sbb
push
jne
jnp
xchg
adc
xchg
into
lahf
stos
call
dec
ret
fs
ja
iret
aaa
aad
loope
push
push
nop
lea
shl
push
sbb
cmps
and
dec
shl
pop
imul
fsub
or
adc
push
cmp
cmp
push
dec
xchg
sub
cmp
mov
retf
rcl
fidivr
cmp
inc
cmp
loop
or
xchg
mov
mov
test
pushf
cmp
loop
data16
mov
inc
xor
out
test
sar
pop
or
or
xchg
jo
xchg
rol
sbb
xor
loope
cs
mov
std
xor
pop
call
xor
mov
adc
xor
add
adc
push
xor
dec
clc
aaa
sti
sub
ret
jmp
cmps
int
xor
xchg
cli
test
test
into
inc
inc
fs
mov
fadd
mov
cmp
call
cmp
sbb
or
repnz
add
or
scas
cmp
call
pop
xchg
push
jmp
shl
call
xchg
lea
pop
push
xchg
mov
fdiv
ret
ins
jl
cmp
stos
xchg
js
push
addr16
daa
mov
aas
dec
xchg
or
add
retf
sar
fidiv
push
clc
(bad)
sub
aaa
pop
cmp
jae
push
loop
popf
test
xor
enter
xor
push
ror
fsubr
fwait
cmp
push
int
inc
mov
dec
push
add
xor
cmp
pop
or
xor
lahf
xor
test
and
add
inc
aam
push
test
mov
rcl
inc
into
outs
cmp
loopne
xor
pop
xor
and
xchg
cmp
ds
jae
adc
addr16
(bad)
and
inc
pop
dec
xchg
fwait
(bad)
pop
test
push
cli
or
mov
mov
fadd
xchg
ss
loop
push
test
xchg
adc
outs
adc
add
sahf
inc
(bad)
outs
adc
and
retf
sbb
cmps
loopne
pusha
fisubr
sub
push
mov
pop
push
xchg
mov
jle
pop
mov
xor
inc
adc
sbb
xchg
ret
into
ss
iret
or
or
sbb
mov
jo
sub
dec
cmp
inc
push
inc
add
adc
pcmpgtd
jo
inc
add
ins
lods
dec
je
push
sbb
or
xor
test
and
cmp
cmp
xchg
sbb
jnp
ret
jo
aas
repnz
scas
nop
inc
xor
jne
mov
dec
adc
mov
(bad)
loopne
sub
adc
cvtps2pd
mov
dec
adc
icebp
or
cmp
es
mov
push
add
in
push
bound
jp
icebp
iret
nop
push
adc
cmc
test
mov
fidiv
xchg
push
popa
outs
xchg
adc
dec
loope
add
xor
xchg
movs
mov
sbb
jmp
or
xor
sar
pop
bound
sbb
cmps
jo
jle
scas
adc
out
xchg
test
stos
ret
sti
mov
jo
aad
test
lds
lea
xchg
xor
lock
mov
xor
add
mov
bound
xor
pop
rcl
push
rol
jmp
ins
mov
mov
sar
sahf
jae
clc
inc
add
xor
fisub
(bad)
jmp
cli
push
adc
aaa
sbb
mov
aaa
jmp
cmp
cmps
out
jp
inc
adc
mov
aad
add
ret
and
push
fdivr
or
or
adc
(bad)
into
pop
aad
push
(bad)
sahf
call
shl
mov
jp
xor
jmp
and
sbb
(bad)
pop
jmp
mov
xor
pop
lods
xchg
out
loope
stos
inc
loope
jbe
xor
outs
jb
inc
add
adc
ja
je
movs
outs
retf
fsubr
or
repz
push
adc
shl
mov
repnz
xchg
sub
push
mov
arpl
fwait
call
or
jb
call
mov
pop
out
add
xor
push
and
sub
pop
sub
inc
or
jecxz
fcom
ss
aam
push
aas
xchg
push
into
xor
jle
lea
dec
and
push
aad
and
mov
xchg
xchg
pop
jge
into
pop
jmp
sbb
xor
adc
mov
test
(bad)
fistp
sbb
jp
fdivrp
test
(bad)
imul
push
les
inc
push
adc
push
fldcw
add
adc
xchg
aam
push
mov
loop
test
ss
inc
xchg
dec
(bad)
mov
cmps
and
xor
and
pop
cmp
dec
xor
xor
jge
and
jg
cmp
ds
aas
popa
out
mov
mov
push
or
fwait
bound
inc
xchg
push
xor
inc
popf
ror
ds
out
or
jbe
and
stos
or
push
xchg
shl
sbb
inc
inc
cld
in
outs
dec
xor
js
or
and
jp
outs
adc
cmp
(bad)
out
push
test
fwait
rcl
mov
add
mov
adc
push
addr16
mov
or
push
mov
xchg
cmp
push
or
or
fwait
retf
hlt
pop
(bad)
or
inc
add
push
out
mov
call
cmps
idiv
push
adc
cmps
add
clc
mov
push
push
xchg
xor
xor
push
(bad)
and
dec
shl
outs
push
xchg
retf
lock
mov
into
shl
xor
sahf
and
inc
xchg
sbb
fisub
cmp
xchg
jecxz
add
sub
jb
xchg
jbe
xor
rcl
icebp
fimul
fwait
ds
add
push
sahf
xor
ss
loope
repz
mov
inc
inc
inc
cs
ss
adc
jno
mov
sbb
push
inc
hlt
ins
or
bound
mov
popa
push
inc
or
cmp
add
dec
sub
inc
movs
dec
sbb
jns
xor
sahf
add
mov
ja
xchg
sbb
push
ss
mov
jbe
aad
adc
push
xor
out
xor
daa
stos
or
out
sub
adc
test
sbb
inc
cmps
ss
ds
mov
mov
jns
push
dec
lea
push
mov
je
cmp
repz
aas
xchg
popf
push
mov
cmp
pop
xchg
aas
dec
aas
jb
lods
push
out
int
div
pop
or
lock
dec
xor
sub
pusha
mov
add
push
dec
add
pop
cmovge
cmc
out
mov
adc
or
sbb
ret
sbb
and
or
test
push
push
test
mov
rol
daa
push
cmp
push
cmps
push
push
add
pop
repz
out
cmp
test
sub
inc
pop
sbb
daa
cmp
push
dec
cmp
or
stos
cmp
outs
sub
not
sbb
add
fstp
outs
sbb
dec
call
inc
push
into
(bad)
aad
sbb
mov
sahf
lods
mov
sar
cli
out
sub
out
inc
ret
pusha
or
or
sub
push
scas
neg
sub
imul
loop
push
mov
cmps
push
inc
push
add
xor
call
sub
shl
mov
pop
sub
mov
push
es
jmp
aad
outs
(bad)
adc
(bad)
cmp
inc
xchg
push
repnz
outs
push
add
ret
lods
(bad)
in
adc
ins
dec
push
xchg
mov
adc
push
add
push
xchg
lea
push
sbb
xchg
cli
push
push
(bad)
xor
cmp
imul
add
xlat
xor
loopne
rol
jbe
mov
inc
and
xchg
aam
inc
xchg
mov
jmp
push
daa
xor
xchg
nop
push
sahf
enter
dec
push
inc
push
mov
add
loope
adc
stos
xor
inc
xor
mov
xchg
aaa
jne
inc
stos
outs
out
int3
inc
xor
cli
out
pop
div
dec
test
mov
cmp
add
mov
inc
mov
out
xor
mov
mov
add
xor
push
pusha
arpl
push
cmp
sbb
sar
jb
loop
fidiv
add
jbe
pop
inc
int
outs
mov
xlat
arpl
and
sub
and
inc
mov
adc
lahf
sti
cs
sbb
shl
popa
aaa
jg
icebp
shr
cld
aas
cmp
cmp
jmp
mov
rsqrtps
cmp
daa
dec
xor
(bad)
pop
sub
loope
bound
adc
mov
lahf
push
popa
cmp
sbb
ins
mov
add
inc
mov
aaa
test
jl
add
and
outs
outs
jp
adc
sahf
jne
add
hlt
imul
iret
es
movs
mov
xor
int
xor
cmp
xor
or
call
xchg
aaa
adc
mov
dec
mov
adc
mov
(bad)
sbb
cmp
shl
push
xor
aam
xor
mov
into
xor
push
add
imul
xor
shr
add
aad
xchg
ret
adc
mov
cs
ret
sub
ds
pop
icebp
sub
loop
cmp
ja
dec
data16
das
xor
cs
or
mov
mov
cmp
sbb
dec
pop
test
ins
mov
cmps
xchg
mov
sbb
(bad)
lods
mov
push
call
adc
dec
mov
lds
mov
fwait
mov
or
test
mov
push
mov
push
movs
cs
into
xor
cmp
test
cmp
mov
cmp
add
lods
jbe
mov
pusha
outs
push
xchg
ss
dec
test
xor
adc
push
jbe
xchg
xor
push
cmp
xor
adc
dec
cli
das
stos
les
push
les
inc
cmp
mov
xchg
xor
xor
lock
xor
pop
stos
jb
mov
in
jmp
mov
bound
test
cmp
xor
dec
shl
cli
sub
dec
dec
sbb
test
call
push
fild
cmp
outs
aam
and
jb
loop
and
dec
sbb
fisub
lods
outs
je
ret
retf
mov
and
fidivr
call
nop
inc
cmps
adc
sahf
jle
mov
add
dec
repnz
cdq
call
call
cmp
jne
jne
pop
dec
das
ret
and
inc
test
or
xor
push
mov
xor
dec
jne
pop
ja
je
jnp
xchg
mov
cmps
stos
mov
jle
sub
xchg
push
adc
inc
sub
push
aad
aaa
loopne
(bad)
mov
aas
and
push
inc
cs
ret
mov
adc
or
add
xchg
das
push
loop
outs
push
dec
cmp
mov
mov
push
sti
push
or
push
xor
sub
adc
out
je
or
adc
push
sub
imul
xor
xchg
scas
(bad)
jmp
xchg
add
rcr
jae
push
loopne
retf
mov
retf
imul
lea
jbe
jge
mov
retf
pop
loopne
xor
pop
or
ret
xchg
xchg
pop
mov
int
popf
mov
adc
adc
dec
mov
cmp
mov
repz
fs
cmp
daa
and
add
xchg
ds
mov
sbb
mov
shr
add
sbb
push
mov
outs
push
xchg
lods
inc
push
mov
xchg
sbb
(bad)
cli
add
inc
adc
xchg
popf
inc
xor
push
adc
xchg
mov
cmp
cmp
jb
xor
mov
ret
sub
je
call
test
push
push
test
loop
push
mov
cmps
(bad)
jbe
mov
cs
stos
stos
mov
leave
ja
mov
je
dec
mov
push
rol
or
push
and
aas
cmp
push
push
ja
jle
sbb
fidivr
call
dec
or
push
xor
mov
jge
ror
call
fild
fs
mov
(bad)
xor
pop
jb
xchg
dec
add
mov
mov
push
mov
inc
xor
and
mov
jle
xor
mov
movs
or
push
retf
mov
inc
loop
stos
loop
push
sysenter
sbb
cmp
xor
call
fdiv
cli
mov
sbb
push
xchg
mov
mov
cmps
xor
mov
neg
mov
sub
or
or
add
(bad)
stc
mul
jb
shr
jno
test
pop
ret
je
add
sub
inc
call
cwde
ror
js
sub
or
(bad)
repnz
pop
imul
pop
mov
test
push
xchg
mov
xchg
loop
xor
cmp
adc
pusha
imul
sub
cmp
pop
cmp
or
or
out
sbb
add
fldcw
add
ss
sbb
lea
mov
stos
push
int
movs
xchg
or
gs
(bad)
sbb
(bad)
ins
inc
pop
xor
jle
add
and
fcomp
push
push
movs
iret
cwde
xor
ss
dec
sub
add
cmp
push
lea
popa
ret
push
inc
xchg
ins
(bad)
cs
push
aad
clc
lds
aas
jae
add
xor
ret
fidiv
outs
ss
push
jmp
outs
xor
mov
xchg
fcomip
inc
mov
xor
xchg
rcl
jmp
push
(bad)
add
sub
aaa
popa
test
idiv
aaa
xchg
jmp
xchg
mov
movs
bound
xor
loopne
cmp
mov
xor
aaa
or
orps
push
xchg
les
hlt
pop
mov
ds
xor
and
aaa
push
cmp
pop
adc
mov
test
loop
push
cmp
test
push
jl
retf
push
cmp
adc
push
add
xchg
outs
lods
xor
sahf
mov
pop
push
ss
add
pop
loop
sbb
jecxz
dec
push
ret
dec
push
pusha
dec
cwde
dec
inc
adc
scas
mov
xor
adc
jmp
and
movs
xlat
inc
jo
dec
dec
xor
mov
cmps
out
cli
movs
push
mov
sub
es
xor
sub
fdivrp
pop
sub
pop
repnz
push
retf
test
pop
in
xor
add
cmp
ficomp
gs
and
xor
and
xor
fadd
lds
pop
fidiv
cmc
dec
aaa
call
stos
fimul
dec
aas
or
add
int3
mov
dec
loope
retf
cmp
aad
pop
add
xchg
or
add
and
xor
inc
xor
repnz
ds
mov
out
mov
xchg
or
enter
mov
mov
pop
in
jmp
push
pop
adc
push
mov
ror
inc
sub
inc
cmps
cs
(bad)
icebp
rol
cs
and
imul
mov
add
ins
je
mov
cli
inc
cli
cmp
retf
(bad)
dec
xor
mov
test
ret
dec
(bad)
jmp
push
fisttp
sbb
(bad)
lea
cs
pop
cmp
add
dec
push
jo
xchg
cmp
inc
and
inc
into
cld
cmps
cs
mov
stos
lock
adc
add
dec
adc
xchg
outs
xchg
xor
inc
mov
mov
repnz
jp
call
xchg
aas
movs
shl
jo
inc
dec
xor
nop
xor
pop
or
mov
ret
(bad)
or
push
shl
mov
inc
gs
shl
xor
movs
jne
aad
into
loopne
outs
arpl
call
mov
pushf
and
inc
cdq
scas
push
jecxz
(bad)
mov
and
scas
pop
push
inc
sbb
inc
shl
mov
rcl
xor
fistp
add
inc
daa
ss
rcl
cmp
pop
adc
int
inc
cmp
or
xchg
xor
imul
test
lods
pop
outs
stc
push
test
lock
shl
fimul
retf
shl
jbe
add
push
ficom
xlat
outs
mov
adc
mov
mov
mov
in
neg
mov
add
jnp
push
add
mov
adc
inc
sub
xchg
dec
mov
xchg
xor
test
outs
cmp
out
in
cmp
push
ds
movs
xchg
adc
cli
cmc
inc
int
stos
ds
dec
or
or
and
inc
rcl
sub
sub
call
std
mov
and
sub
pop
or
cli
or
mov
dec
test
dec
sub
mov
cmp
mov
inc
add
adc
aaa
push
adc
push
adc
jp
(bad)
add
cmp
rol
push
mov
inc
cmp
push
aam
or
pop
jge
sub
adc
xor
or
push
mov
and
pop
fcom
jno
aam
mov
sub
cmp
inc
pop
dec
and
dec
fnstenv
xor
xor
into
fld
pop
pop
adc
outs
lods
xor
dec
aad
sbb
jl
into
push
pop
cwde
xor
adc
push
cmp
inc
aaa
jmp
jmp
retf
imul
sahf
mov
mov
xor
dec
xchg
push
mov
xor
(bad)
mov
fstp
cmp
mov
xchg
sti
mov
and
lods
push
out
dec
cmp
jmp
popf
push
inc
push
cmps
outs
push
sub
repnz
imul
cmps
sahf
jnp
or
mov
push
cmp
dec
retf
xor
inc
mov
mov
outs
shr
test
sub
movs
dec
mov
sub
inc
mov
add
mov
mov
push
movs
add
push
imul
add
push
mov
inc
call
les
sbb
xor
inc
shr
cdq
xor
and
xor
lods
fcom
inc
xchg
int3
outs
cmp
pop
xor
cwde
xchg
xlat
xor
icebp
cmp
push
push
rol
fadd
fld
int3
cmp
aaa
or
sbb
push
jl
push
add
ret
add
cmp
fisttp
push
inc
jg
idiv
test
jle
inc
popf
ret
pop
push
das
adc
adc
inc
movs
jne
cs
inc
push
addr16
adc
aaa
sbb
vcvtss2sd
dec
les
outs
lahf
mov
jo
ss
cmp
mov
inc
inc
aam
xor
mov
jb
mov
jnp
sti
xor
xor
aaa
jmp
sbb
(bad)
push
and
and
add
retf
jb
add
fsubr
idiv
fcmovu
inc
jp
fnstcw
mov
pandn
test
je
ja
loop
or
shl
mov
pusha
call
push
out
dec
pop
push
test
lea
ss
sub
call
test
sub
xchg
mov
mov
adc
mov
push
aad
xor
xchg
mov
push
lods
mov
jmp
jno
mov
push
(bad)
movsx
mov
or
xor
daa
add
mov
xor
xchg
dec
adc
imul
loop
pop
push
cli
sbb
jmp
loop
stos
dec
clc
test
ret
jo
das
push
or
xor
sbb
outs
adc
push
call
sub
xchg
sub
jno
or
push
dec
cs
xchg
cmp
xchg
xchg
rcl
add
mov
sub
mov
jne
dec
or
mov
cmp
add
aam
call
mov
cld
outs
xor
ss
sub
jbe
(bad)
fadd
(bad)
xchg
xor
push
mov
inc
sbb
dec
push
cmps
push
sub
pop
xor
jb
(bad)
dec
inc
xchg
lahf
ror
inc
add
add
xor
les
and
mov
mov
or
lea
mov
cmp
movs
sub
sub
and
xchg
je
or
sub
xchg
sub
add
aas
mov
push
mov
ret
sub
adc
jmp
dec
sahf
push
inc
pop
stos
xchg
xchg
call
xor
inc
aas
and
jne
fild
fbstp
mov
xchg
xor
push
push
sbb
stos
sbb
cmp
jbe
or
push
inc
inc
aaa
pop
data16
stos
mov
cmps
out
mov
sub
scas
xor
sub
cmp
inc
xchg
mov
push
jo
adc
cmp
xor
mov
rcr
adc
jo
sbb
inc
sub
sti
aad
push
xchg
pop
es
add
mov
jne
mov
push
clc
xor
and
or
inc
xor
icebp
sub
clts
mov
aam
or
nop
xor
sub
xor
or
repnz
test
loop
xor
pop
div
jmp
shl
push
aaa
call
sbb
xor
push
enter
mov
push
xchg
call
cwde
sbb
ss
cmp
and
mov
shl
sbb
cmp
cmp
rol
and
dec
fisttp
call
jmp
mov
mov
push
movs
inc
sub
mov
aad
adc
push
sub
jne
(bad)
(bad)
cmp
push
and
out
xor
test
cmp
pop
push
shl
adc
and
push
(bad)
sti
retf
and
test
xor
or
jp
add
push
dec
aad
pop
jle
cmps
sbb
inc
sub
push
jge
adc
jns
nop
sub
inc
and
(bad)
stos
sbb
ret
cs
sub
test
fiadd
xchg
out
push
add
aas
pop
xor
div
or
shl
push
sahf
stos
cmp
dec
imul
sbb
xor
test
mov
sbb
test
jne
js
push
ret
adc
push
push
mov
pop
push
xchg
add
mov
add
rol
push
add
push
mov
stos
jmp
mov
mov
push
retf
inc
movs
outs
sub
shl
adc
or
xor
xor
xor
sti
pop
jp
pop
shl
jecxz
sub
test
pop
out
xor
push
mov
sub
(bad)
les
mov
adc
test
mov
pop
mov
out
add
sub
sbb
push
ret
pop
jp
stos
cmp
cmp
sub
ret
xchg
sub
or
xor
das
es
call
xor
test
mov
loope
xor
push
and
push
dec
add
aaa
xchg
sbb
sar
retf
fwait
pop
add
xchg
lock
inc
mov
repnz
(bad)
and
lea
push
xchg
jg
cmps
adc
inc
xor
cmp
imul
bound
cmp
push
data16
fisub
mov
rcr
dec
jne
or
lea
push
sub
dec
adc
add
or
cs
je
dec
ss
fwait
inc
pop
mov
jbe
ds
dec
pop
rcl
das
pop
dec
adc
pop
cmp
je
mov
or
retf
es
stos
(bad)
icebp
mov
push
das
jnp
sub
dec
paddusb
jae
js
fwait
mov
mov
pop
jecxz
sbb
aas
jecxz
jp
xchg
push
jmp
mul
xor
cli
pop
jmp
mov
retf
int
fsubrp
repz
xor
inc
adc
int3
xor
add
xchg
dec
popf
inc
or
popa
sub
ficom
xchg
aam
ror
lods
xchg
or
mov
inc
cmps
pop
inc
jae
adc
call
xor
mov
adc
xchg
inc
dec
loopne
xor
pop
add
push
in
stos
xchg
call
and
add
inc
push
add
cmp
ret
out
ins
arpl
xchg
push
lahf
mov
cmc
push
pop
call
push
jno
pusha
sbb
pusha
cmp
adc
inc
inc
and
rcl
lahf
adc
push
pop
fstp
push
xchg
test
inc
not
shr
jecxz
pusha
xor
xchg
jmp
add
jmp
cmp
fsubr
aaa
sub
push
test
cmp
jl
push
inc
xchg
dec
fmul
stos
ficomp
inc
mov
sbb
jl
push
and
cmp
loop
loope
mov
ss
mov
xchg
sbb
mov
sbb
pop
pop
or
pushf
and
loop
retf
add
lods
cmp
sbb
sbb
dec
jne
test
pop
adc
sbb
jl
fdiv
mov
es
add
cmp
adc
fist
fadd
xor
cmps
cmps
hlt
fdivrp
out
mov
xchg
xor
dec
ret
dec
ficom
push
aaa
push
pop
ss
add
mov
add
sub
scas
cmps
sub
inc
pop
add
push
(bad)
out
mov
lea
adc
push
enter
push
(bad)
int3
xchg
push
es
or
paddb
add
or
or
adc
push
sub
push
inc
sub
xchg
add
shl
push
and
add
inc
rol
mov
add
pop
ds
mov
iret
xor
cmp
add
mov
add
iret
push
adc
shl
scas
mov
adc
mov
pop
test
ss
pop
mov
daa
inc
xchg
ror
test
es
cmp
inc
mov
retf
test
stos
mov
ret
mov
mov
push
mov
xor
(bad)
lock
pop
fild
test
mov
xor
rcr
cmp
je
and
xchg
add
ss
add
scas
inc
or
or
(bad)
pop
add
repnz
adc
add
fcmovb
pushf
add
mov
add
or
push
inc
pop
add
add
pop
ss
sbb
push
mov
mov
xchg
(bad)
xor
cmp
adc
ins
retf
rol
sbb
in
dec
cmps
cmps
shr
push
dec
push
sahf
sahf
dec
dec
aas
xor
xchg
adc
add
lock
ror
aaa
inc
ret
mov
mov
xchg
mov
jae
pop
adc
shr
add
inc
and
push
pop
inc
mov
out
cmp
ret
sbb
loope
ror
inc
lahf
xchg
xchg
(bad)
jecxz
jnp
outs
bound
(bad)
(bad)
mov
sbb
push
mov
punpcklbw
out
or
idiv
rcl
add
aaa
fwait
pop
pop
clc
inc
bound
ret
call
cmp
seta
test
mov
stos
call
jnp
add
push
mov
inc
js
jl
add
cwde
pop
adc
mov
mov
cmps
dec
popf
adc
pop
pusha
vmread
nop
(bad)
test
xchg
call
fadd
add
adc
mov
and
cmp
push
arpl
add
ret
mov
mov
push
mov
adc
push
pop
sub
sbb
inc
pop
mov
daa
mov
sbb
add
call
mov
xor
in
pusha
xor
test
push
pusha
add
mov
sbb
add
imul
cmp
push
push
push
push
sub
cmp
loopne
clc
pop
adc
test
and
mov
ret
mov
clc
cmc
jmp
jg
jae
push
ror
aas
jp
js
nop
imul
rcl
loopne
test
aam
lock
or
or
fist
add
call
and
adc
arpl
psubb
push
sahf
push
adc
sub
inc
add
add
pop
add
push
mov
test
inc
mov
sub
add
jo
sbb
ja
pop
js
js
nop
jg
push
(bad)
push
cmp
lea
cmp
push
or
call
movs
ror
enter
add
movs
add
jecxz
clc
es
adc
xlat
sbb
repz
fs
add
sbb
mov
shl
lea
call
push
js
pop
lods
ficom
pop
sbb
xor
push
push
dec
cmps
push
sbb
fistp
nop
pop
push
jmp
inc
outs
mov
push
or
and
and
cmp
push
sti
push
das
and
xchg
mov
mov
jg
push
mov
addr16
sub
inc
pop
pop
dec
jp
jmp
mov
pop
shl
add
aad
sbb
fisttp
add
shl
js
stos
stos
dec
dec
nop
jle
and
fcom
jmp
aaa
push
into
push
das
data16
pop
sub
sbb
cmp
enter
inc
call
adc
jb
jle
mov
xor
nop
xor
jle
xor
push
call
sti
add
sbb
mov
xlat
dec
shl
mov
mov
or
or
add
xchg
add
xor
outs
push
and
push
cwde
dec
mov
enter
and
loopne
clc
and
pop
sub
inc
pop
mov
sti
jo
mov
sbb
mov
mov
add
dec
pop
jp
sbb
inc
movs
repnz
pusha
xchg
inc
das
xor
nop
xchg
test
shl
das
hlt
pop
fcom
pop
pop
call
(bad)
mov
test
push
(bad)
push
pop
enter
mov
mov
cmp
repz
sbb
cmp
cmp
fs
movs
repz
jl
mov
pop
mov
fdivr
stc
stc
stc
lock
or
and
cmp
cmp
xlat
les
push
add
cmps
rcl
jl
movs
pop
shl
jb
adc
cld
sub
movs
push
push
push
add
inc
mov
push
push
fild
and
pop
movs
dec
push
adc
sub
inc
jmp
jo
mov
movs
dec
iret
mov
dec
and
out
mov
movs
daa
retf
xor
je
rcr
dec
pop
pusha
popf
aam
or
mov
add
je
sbb
sub
cld
add
adc
xchg
inc
jl
sub
mov
and
stc
imul
mov
mov
adc
loopne
pop
adc
mov
or
adc
iret
xor
fs
mov
mov
scas
pusha
xchg
or
push
push
push
dec
push
pusha
push
js
nop
mov
test
shl
pop
lock
or
and
cmp
test
out
push
or
je
cmp
aas
mov
mov
push
sub
pop
clc
mov
push
sbb
jle
xlat
mov
stos
push
pusha
xor
xor
mov
movs
xchg
jmp
push
test
push
into
sbb
jmp
je
xor
jmp
adc
xchg
js
mov
xor
mov
or
dec
jmp
cmp
push
xlat
push
xchg
push
lahf
enter
push
loopne
clc
mov
popf
lahf
mov
aaa
xor
aaa
dec
push
push
add
mov
dec
push
mov
jno
xchg
push
sbb
xor
dec
or
mov
pause
rcr
(bad)
aam
test
rcl
jge
adc
and
inc
and
push
outs
hlt
inc
push
hlt
inc
outs
xor
mov
enter
repnz
outs
push
clc
inc
pop
sub
mov
daa
pop
aam
mov
mov
mov
pop
mov
fdivr
movs
repz
or
or
xor
hlt
xchg
fwait
dec
ja
jmp
cmp
pop
test
rcl
loopne
in
push
dec
jmp
sub
sbb
scas
push
pop
or
aas
or
mov
mov
pop
ja
outs
adc
fs
xchg
sbb
pop
lods
mov
pop
addr16
aad
lods
pop
mov
inc
mov
aaa
rcr
mov
adc
pop
xor
pusha
jmp
nop
retf
test
push
into
mov
ds
jge
rcr
or
popf
test
cmp
push
sbb
aam
retf
push
call
mov
aam
inc
add
push
stos
pop
test
stos
loopne
add
add
push
jl
push
sub
stos
and
nop
mov
cmps
cli
sub
mov
mov
stos
stos
mov
stos
fdivr
lock
or
or
pop
out
push
(bad)
xor
push
xor
imul
pop
lods
aad
test
ror
jg
jae
scas
stos
mov
stos
and
addr16
pop
stos
mov
pop
push
push
mov
enter
or
psubb
dec
mov
sub
inc
xchg
push
mov
jo
lea
push
xchg
cli
mov
movs
mov
add
xor
dec
xchg
js
dec
xor
rcr
mov
sbb
stos
sub
mov
mov
add
inc
sbb
mov
shr
(bad)
push
iret
push
mov
pusha
xlat
inc
lea
and
jecxz
inc
imul
sub
push
xor
repz
js
loop
dec
add
dec
and
sbb
mov
xor
pop
add
lods
mov
sbb
div
mov
sbb
jmp
ffreep
test
inc
aam
sub
sbb
and
lods
xor
mov
sbb
into
retf
stos
push
mov
mov
stos
test
mov
sbb
test
mov
lahf
fwait
mov
add
xchg
mov
push
mov
test
jle
(bad)
sbb
jbe
add
and
cmps
mov
inc
js
nop
mov
mov
pop
sub
loopne
push
mov
or
jmp
inc
ds
xor
push
dec
mov
test
aam
fisub
imul
rsqrtps
outs
ror
scas
mov
pop
lock
xor
es
push
repnz
popa
xor
and
stos
sbb
sub
add
iret
mov
mov
inc
inc
addps
aas
test
idiv
pusha
push
and
clc
ds
in
ficom
jecxz
jecxz
ret
out
xchg
sub
xchg
ret
adc
pusha
aam
movs
sbb
test
cmps
sbb
xchg
push
fsub
jl
sub
mov
push
add
arpl
push
inc
mov
push
push
js
adc
xchg
add
fwait
sub
mov
ds
ds
add
inc
mov
and
xor
jae
jae
mov
aas
ins
jl
test
jae
aas
mov
int3
fmul
pop
pop
(bad)
aas
hlt
mov
fwait
cmp
sbb
push
xor
cmp
xor
je
push
xchg
xor
xor
aam
xor
out
xor
cld
xor
adc
sub
out
out
xor
pop
ins
xor
rol
mov
outs
outs
outs
outs
in
in
cld
xor
xor
xor
or
inc
xor
out
or
les
int3
inc
add
out
xor
inc
xchg
push
sbb
mul
xchg
xor
xor
or
shl
pop
xor
cmp
sbb
pushaw
push
add
dec
imul
or
push
(bad)
sbb
int3
or
dec
pop
push
ret
sub
out
rol
adc
jo
ds
ret
cli
xchg
stos
inc
sbb
add
inc
push
cmp
or
adc
xor
add
aam
scas
shl
ror
dec
cs
jecxz
js
inc
cmp
xor
pop
js
add
loope
mov
sbb
xchg
rcr
pop
ja
pop
sbb
loope
push
xchg
jbe
lods
xlat
out
mov
mov
enter
cmp
mov
mov
cmp
sub
mov
(bad)
pop
mov
push
xor
(bad)
(bad)
fidiv
out
xchg
jno
dec
into
outs
mov
xchg
ret
ror
jg
test
jae
mov
out
hlt
cmp
pop
loope
xlat
pop
xlat
nop
mov
jecxz
or
ficomp
sub
pusha
test
xchg
out
adc
sbb
popf
sahf
bound
and
inc
daa
push
fs
cwde
arpl
in
push
mov
popa
and
or
or
popa
and
out
and
xchg
lock
and
jecxz
rcl
xchg
or
cs
lods
xor
inc
sbb
dec
inc
add
xchg
sbb
sbb
mov
adc
mov
mov
mov
ret
add
and
(bad)
lds
inc
(bad)
push
jp
call
stos
add
adc
int
lock
cmp
adc
retf
inc
mov
in
mov
mov
adc
xchg
cmps
int3
pop
and
xor
mov
mov
daa
shl
xchg
jp
push
not
push
push
rcl
js
xchg
pop
ror
sub
push
add
xchg
inc
cmps
mov
leave
aad
loopne
add
rol
enter
xor
xor
inc
and
(bad)
mov
nop
push
(bad)
rol
sub
adc
ret
xor
cmp
pop
scas
jo
jns
test
xor
mov
jecxz
stos
dec
pop
inc
out
pop
movs
dec
mov
movs
dec
sti
sub
les
outs
inc
jmp
data16
push
stos
ins
(bad)
mov
inc
add
mov
pop
push
adc
lea
xor
mov
retf
(bad)
fisttp
loopne
ror
push
sub
or
push
fiadd
lds
xchg
sbb
cmp
sbb
xchg
cbw
loopne
sbb
and
xchg
push
pop
xchg
mov
inc
xor
cmp
ins
push
mov
rcl
rol
xor
adc
and
out
push
cwde
out
fmulp
test
nop
test
mov
scas
stos
mov
mov
pop
push
shr
test
sub
pop
dec
imul
jbe
fs
call
fdivr
shr
add
fstp
repnz
lock
cmp
mov
add
stos
push
lock
sbb
(bad)
cmps
mov
arpl
inc
rcpps
push
je
ins
jmp
dec
test
mov
sbb
push
push
mov
xchg
add
rol
jl
je
jbe
inc
adc
sbb
aam
xchg
xchg
or
sub
je
mov
stos
add
fdivr
nop
(bad)
sub
pop
cmp
int3
fsub
inc
adc
pop
dec
sub
loopne
xor
imul
test
add
mov
xor
cmp
push
xor
ror
sub
lea
arpl
loopne
or
in
pop
xchg
pop
push
aas
sub
add
adc
dec
or
popa
xchg
retf
imul
das
mov
mov
inc
hlt
sahf
jle
sar
inc
cmp
mov
adc
lods
jae
imul
jmp
aas
pop
or
lds
sbb
add
out
pop
push
sbb
or
shr
mov
out
and
adc
sbb
add
add
pop
sub
test
mov
sub
ret
dec
imul
rcl
push
stos
sub
loope
lea
ror
mov
inc
lods
rcr
dec
(bad)
stos
nop
add
ror
mov
sbb
pop
retf
mov
loope
mov
call
push
stos
push
cmp
test
in
lock
sbb
cmp
je
rol
jecxz
sub
(bad)
mov
sbb
xor
movs
or
call
in
sbb
add
add
aam
cmp
xor
sub
xchg
add
pop
add
sbb
adc
outs
inc
setne
mov
arpl
cmp
and
xor
dec
push
xor
and
rcl
mov
fdivp
adc
jl
add
icebp
mov
daa
pop
push
mov
das
test
int3
mov
pop
push
add
sub
xchg
pop
movs
or
ror
jbe
outs
adc
and
cs
dec
or
movsx
cld
ret
inc
pushf
sbb
sub
sub
pop
data16
js
mov
add
and
adc
scas
imul
jl
pop
js
pop
mov
inc
mov
and
push
lods
xchg
push
fidivr
dec
mov
icebp
pop
int3
sbb
lock
data16
inc
and
cmp
pop
test
mov
push
dec
or
dec
lock
dec
arpl
fwait
xchg
movs
or
ror
es
add
push
jb
adc
inc
dec
shl
pusha
add
add
loopne
adc
or
add
(bad)
or
sbb
pavgw
ret
inc
sahf
add
jae
dec
xor
cmp
pusha
test
mov
aaa
xor
pusha
xor
inc
nop
into
add
mov
in
jmp
(bad)
sub
sahf
lock
mov
add
mov
test
cmp
lahf
mov
ds
jg
push
sbb
and
xor
dec
rol
les
mov
fwait
loop
inc
xchg
ret
fistp
push
les
idiv
adc
adc
dec
pop
or
push
in
and
dec
xor
dec
sti
lock
sbb
sbb
pop
sbb
xor
pusha
and
mov
add
push
sub
pop
fsubr
dec
or
scas
mov
(bad)
push
shl
(bad)
scas
popa
sub
xchg
arpl
lea
mov
movs
push
ins
lods
mov
add
add
sub
add
jo
pusha
mov
call
rol
imul
add
fist
pop
pop
or
adc
xchg
jl
push
push
es
add
or
dec
sbb
adc
js
dec
pop
shl
xchg
push
mov
mov
sub
out
daa
ins
xor
xchg
cmps
dec
cmps
in
or
rcl
cmovnp
add
and
add
xor
mov
ret
dec
adc
call
push
sub
jle
push
(bad)
pop
aaa
sub
or
pop
xor
test
es
push
dec
pusha
mov
out
lods
inc
dec
xor
es
aad
xor
push
or
sub
mov
add
or
shr
call
enter
and
add
adc
xor
mov
push
idiv
push
dec
or
int3
(bad)
dec
stos
fcom
outs
sub
add
add
cmp
nop
rol
fmul
cmp
pop
fisubr
mov
cli
cmp
cli
mov
cs
mov
pop
or
mov
sub
inc
and
sbb
imul
stos
icebp
dec
inc
dec
push
push
enter
bound
jbe
inc
or
sub
add
mov
in
rcr
xor
add
jo
cmp
stos
ror
push
test
les
cli
xchg
mov
push
mov
cmp
sub
pop
push
loop
test
xchg
dec
movs
rcr
or
mov
xchg
dec
test
fsub
add
loopne
cmp
sub
jmp
jo
test
retf
icebp
popa
out
cmp
js
test
xchg
jge
sti
loop
mov
mov
dec
jecxz
mov
cs
sbb
pop
(bad)
xchg
in
xor
and
nop
adc
sar
ins
xor
test
sahf
repnz
cmp
pop
push
mov
jmp
xor
mov
cmp
or
xor
xchg
or
les
aam
mov
mov
rcl
cmp
lds
mov
push
pop
or
add
push
loopne
push
adc
xchg
lods
or
adc
push
xchg
(bad)
mov
neg
ds
ds
lahf
pusha
ss
mov
in
xor
adc
push
les
push
data16
pushf
out
test
sbb
cmps
mov
or
test
xchg
xchg
mov
adc
sbb
xor
push
push
pop
test
sahf
cmp
push
ds
sub
sub
cmps
jmp
jb
out
lods
cmp
mov
and
sub
je
call
pop
lahf
repnz
out
dec
mov
pusha
test
(bad)
sbb
sbb
sahf
dec
add
sbb
cmp
xchg
jl
add
xchg
or
add
(bad)
dec
pop
add
push
pop
not
add
adc
xor
or
inc
out
cmp
shr
inc
mov
xor
mov
cmps
add
pop
repnz
inc
inc
loop
bound
loop
mov
inc
add
test
push
scas
add
and
cmp
je
mov
adc
xor
sbb
fidiv
dec
fs
je
outs
or
or
ret
inc
jo
outs
adc
push
cmp
je
ret
add
xchg
push
jae
sbb
pop
push
sub
scas
je
nop
mov
xchg
fisttp
ja
data16
mov
clc
inc
outs
cmp
pop
repz
and
bswap
(bad)
in
or
add
add
adc
sbb
bound
adc
fnstsw
ja
adc
and
sub
push
xchg
pop
shl
sub
call
test
scas
or
xor
push
add
loopne
and
sahf
push
and
xchg
xor
or
mov
jecxz
call
movhps
pop
or
jo
or
cmp
push
cwde
mov
add
mov
sbb
sbb
xor
jmp
inc
mov
and
loopne
sub
ds
repnz
shl
sbb
cmp
retf
xchg
(bad)
(bad)
in
arpl
cmps
inc
add
(bad)
scas
push
adc
and
cmp
outs
mov
aaa
shr
inc
and
ja
pop
push
add
fadd
push
adc
retf
jp
push
fadd
mov
pop
ds
repnz
dec
das
test
add
or
or
dec
jp
jge
(bad)
je
pushf
(bad)
int3
(bad)
hlt
and
loopne
stos
scas
je
xchg
jl
loope
outs
les
cmps
jbe
out
loop
pushf
fwait
cmps
or
je
mov
les
shl
xor
jp
push
retf
(bad)
or
clc
lahf
nop
stos
sbb
pop
mov
scas
and
movs
lock
and
lods
cmp
xchg
fdiv
push
test
sub
ins
ret
(bad)
fistp
mov
loopne
hlt
add
or
mov
jmp
data16
xor
mov
add
mov
add
and
add
cmp
sub
xchg
sbb
jne
ror
div
aas
loope
and
pop
out
fwait
jo
sub
adc
je
cwde
sub
mov
dec
aam
adc
outs
jnp
mov
mov
mov
xor
dec
mov
add
stos
sbb
inc
inc
or
mov
js
inc
jp
pop
cmp
sbb
jl
fdiv
or
add
cs
lock
dec
push
dec
xchg
lods
ds
(bad)
icebp
jne
ins
repnz
jae
add
dec
mov
inc
mov
mov
push
or
pop
stos
pop
(bad)
ror
add
pop
ret
rcl
sbb
retf
shl
int3
call
mov
in
sahf
dec
or
cli
lods
ror
imul
ins
dec
or
call
mov
mov
or
ins
mov
shl
retf
push
sbb
push
adc
fsubr
cmp
lds
mov
popa
(bad)
or
out
sub
mov
add
or
xor
pop
test
sbb
sub
mov
in
scas
test
inc
outs
test
inc
call
add
xlat
mov
cmps
mov
mov
fadd
fist
inc
add
out
test
int
pushf
lods
cmp
in
jns
inc
inc
add
jnp
test
xchg
xor
daa
mov
or
mov
inc
test
cmps
adc
or
add
sbb
aam
mov
cmp
retf
dec
pop
scas
movs
ss
les
int3
dec
add
push
push
in
hlt
add
mov
and
xor
inc
iret
cmp
push
iret
ins
xor
mov
jl
mov
icebp
xor
retf
push
test
push
ja
push
test
push
jg
lea
xchg
push
and
lahf
lahf
loop
push
pusha
les
in
hlt
jno
push
cmp
sahf
mov
sbb
ficomp
mov
test
adc
mov
rep
push
or
sub
push
stos
mov
mov
outs
(bad)
or
je
adc
and
or
mov
rcr
test
jne
out
pop
test
test
or
js
mov
(bad)
stos
xor
cmp
inc
xchg
out
mov
lock
out
inc
jmp
mov
setne
jb
sbb
adc
jnp
adc
test
dec
push
rcl
icebp
inc
pop
bound
xor
loopne
mov
mov
loopne
mov
pop
scas
mov
test
das
adc
(bad)
inc
(bad)
push
xor
sub
add
xor
adc
inc
out
jmp
add
adc
jecxz
push
adc
add
inc
or
adc
jecxz
or
add
push
xor
(bad)
fcmovnbe
adc
aam
inc
adc
push
test
shr
adc
ret
push
xor
movs
and
aad
xlat
mov
aad
add
xlat
rcr
push
stos
sbb
retf
test
add
(bad)
add
xchg
scas
fild
xlat
rol
xchg
xor
push
inc
jmp
adc
adc
lahf
fwait
aad
stos
adc
push
(bad)
sbb
inc
mov
fcmovnbe
adc
pop
mov
jnp
sub
push
test
push
fild
(bad)
add
add
jae
dec
test
mov
mov
aad
xchg
inc
cmps
xor
pusha
shl
out
shr
push
aam
mov
rcl
movs
cmp
mov
in
or
or
or
scas
jp
jge
out
and
xchg
inc
call
mov
js
sub
dec
loope
jecxz
mov
lods
fimul
aam
mov
pusha
movs
test
inc
push
add
pop
and
push
sub
add
ins
shl
shr
sbb
cmp
cmp
js
xor
push
ret
add
add
jp
sub
adc
ret
test
mov
adc
add
cmp
and
adc
and
add
jns
and
sub
pop
in
mov
out
(bad)
std
std
and
pop
shr
xchg
push
(bad)
in
out
cmps
cs
pop
(bad)
out
mov
andps
movs
inc
fcomp
and
das
jle
jg
inc
add
add
add
xchg
push
add
sub
ds
clc
and
fst
push
add
xchg
jo
popf
add
enter
fcomp
xchg
(bad)
sub
scas
push
lahf
inc
push
pop
lea
cmp
aaa
add
push
enter
cmp
adc
mov
or
or
xor
xor
adc
jg
add
and
movq
cmp
cmovg
pop
jb
or
loop
stc
out
test
adc
push
push
push
and
add
sub
dec
movs
add
sub
and
(bad)
and
add
mov
and
inc
call
and
adc
ins
fst
fsubr
mov
cdq
or
push
sbb
rcpps
dec
or
inc
xor
test
gs
push
push
fidivr
mov
push
sahf
jne
cmp
ds
xchg
jmp
jnp
jmp
or
enter
call
inc
es
push
daa
rcl
ror
adc
xor
xlat
adc
pop
push
int
ret
clc
mov
int3
xchg
mov
jne
cmp
retf
hlt
inc
sub
and
pop
pop
dec
adc
adc
popf
adc
mov
aas
and
gs
ss
adc
in
movs
or
dec
repnz
xchg
or
fld
mov
test
mov
ss
retf
or
inc
ss
sbb
pop
sbb
je
jp
mov
jne
inc
pop
jmp
inc
dec
mov
es
xchg
not
cmps
sbb
call
mov
or
adc
dec
cmp
jge
mov
out
add
repnz
test
add
mov
inc
mov
or
ret
test
sbb
jl
mov
mov
mov
mov
mov
test
push
push
or
dec
inc
test
jne
mov
mov
mov
in
cmc
or
inc
inc
sub
fdivrp
mov
shl
inc
or
sub
or
and
mov
inc
cmp
adc
xor
imul
push
ins
push
add
inc
add
dec
mov
cli
stc
dec
faddp
imul
add
lods
mov
out
push
jg
mov
js
pop
cld
jmp
and
arpl
inc
movsx
xlat
pop
or
inc
add
xor
cld
inc
push
enter
(bad)
mov
dec
imul
lea
pop
jmp
test
lods
xlat
adc
cmp
dec
sbb
pusha
icebp
fisttp
push
lods
jae
sub
adc
mov
fiadd
ror
push
push
and
loopne
int
sub
popa
fcmovbe
imul
push
xor
lea
sbb
aaa
ds
mov
stc
call
jmp
push
int3
inc
call
outs
sar
jmp
sbb
cmp
mov
push
test
sub
inc
add
xchg
add
push
outs
cmp
jnp
std
pop
imul
push
pop
cmp
mov
cdq
xor
mov
cmps
stos
fdiv
leave
ret
sbb
dec
add
test
sar
test
pop
and
inc
pop
push
jle
rcr
cmp
adc
push
or
je
mov
push
aas
dec
sbb
add
add
sti
xchg
in
jp
cmp
and
mov
jge
jg
mov
imul
adc
stos
xchg
push
add
cmp
inc
add
sbb
pop
sub
add
hlt
mov
xor
jge
add
movs
leave
arpl
and
pop
hlt
xor
push
bound
fs
dec
pop
es
or
clc
and
push
repz
sbb
mov
fcomp
pop
cmp
push
ins
mov
push
mov
sub
jp
dec
push
push
xchg
push
xor
pop
rcr
loopne
sbb
loopne
fbstp
inc
ins
int
xchg
pop
mov
adc
add
dec
push
outs
mov
fadd
inc
push
popf
xchg
jo
repnz
jp
jle
mov
jnp
xor
jle
call
add
jbe
addr16
add
aam
push
sub
push
mov
outs
imul
mov
imul
mov
pop
jmp
int3
jecxz
leave
cmps
std
xchg
and
mov
mov
fucomip
sbb
xchg
(bad)
jmp
adc
adc
ret
adc
inc
adc
xlat
cmp
inc
pop
mov
rol
add
outs
sbb
shl
add
jmp
xchg
bound
enter
arpl
test
or
inc
add
xchg
sbb
les
popa
mov
jmp
test
(bad)
and
or
adc
call
ins
add
push
xchg
mov
add
scas
ja
shr
lods
mov
mov
sbb
mov
ret
inc
push
xor
fs
pop
ret
jge
dec
add
jle
push
popf
xor
sub
xor
push
mov
jo
push
es
dec
jmp
mov
or
adc
push
mov
xor
add
clc
push
pop
jmp
pushf
clc
jl
xchg
cmp
rol
jge
ficomp
leave
xchg
sub
xchg
jmp
sub
inc
and
imul
mov
mov
xchg
xor
jne
add
call
movs
cmp
push
jmp
adc
or
jl
and
push
xchg
sbb
jmp
push
jg
sbb
call
cmp
lods
adc
pusha
popf
and
iret
pop
stos
or
xchg
and
cmpxchg
cmp
rcl
adc
xchg
ja
nop
push
add
gs
xchg
sub
retf
jl
js
push
ror
push
cmp
aas
aas
push
out
adc
push
push
inc
cmp
or
mov
push
adc
inc
sub
add
adc
and
lea
push
mov
add
xor
loop
pop
sbb
mov
mov
test
add
pop
jbe
jle
nop
shr
das
add
mov
jae
inc
push
push
test
outs
or
mov
cmp
jl
mov
cli
cld
push
shl
adc
inc
xchg
sti
mov
retf
icebp
pop
and
jbe
pop
add
inc
ds
adc
xchg
cmp
ja
xor
adc
movs
add
xlat
repnz
sti
jo
push
xchg
cli
sbb
xchg
and
push
and
push
sahf
push
add
or
adc
mov
add
sub
adc
push
loop
or
pop
lods
rcl
xor
jp
inc
cmp
jl
pop
mov
test
clc
and
pop
or
aad
hlt
and
cmp
xchg
sti
or
in
and
or
stc
add
shr
jg
and
sbb
pop
push
mov
jno
jmp
arpl
pushf
dec
mov
les
adc
test
test
(bad)
pop
push
pop
cmp
jge
jge
dec
call
je
cmp
push
outs
mov
jmp
je
jmp
jns
jge
pop
pop
xlat
mov
sbb
leave
in
mov
mov
adc
add
setbe
mov
cmp
and
adc
cmp
or
es
aas
lock
into
push
adc
rcr
inc
loop
test
mov
mov
cmp
jae
test
cmp
test
xchg
push
add
sti
imul
mov
or
jo
pop
cmc
fiadd
push
or
dec
sti
push
cs
mov
or
lds
test
or
sub
pusha
jge
jle
fmul
and
(bad)
dec
hlt
fisubr
jmp
inc
sub
out
fsubp
mov
into
adc
push
or
shl
add
ss
inc
pop
mov
pop
mov
mov
push
and
push
add
(bad)
repnz
aaa
xor
sbb
adc
call
dec
add
cmp
outs
jmp
sub
push
sti
sbb
dec
jne
mov
sbb
adc
add
pop
pop
inc
jmp
imul
inc
clc
mov
push
mov
or
je
ret
fadd
inc
or
xchg
(bad)
loopne
pop
(bad)
xchg
push
std
or
sbb
pop
jle
lea
pusha
xor
ss
push
int3
out
sar
popf
call
add
outs
add
ret
and
shl
stos
sbb
and
sub
leave
fs
xor
or
inc
and
mov
jl
push
xor
jmp
push
in
or
mov
and
xor
push
dec
mov
aaa
or
and
or
push
pop
pop
sub
and
mov
int3
iret
stos
or
call
inc
arpl
pop
sbb
fidiv
jmp
or
fsub
adc
xchg
jne
je
loope
rcl
das
jmp
cmc
pop
push
xor
fistp
sbb
xchg
shl
push
dec
outs
adc
sbb
les
pop
push
jmp
ss
inc
cmp
shl
hlt
in
hlt
gs
clc
cmp
or
shl
add
jp
test
add
in
dec
sub
xor
sar
jae
and
pop
dec
mov
sub
sbb
es
les
inc
call
add
sbb
dec
adc
add
mov
add
mov
stc
adc
outs
jge
sbb
xor
div
adc
popa
in
add
add
push
adc
and
inc
or
dec
push
jg
daa
ss
push
push
call
mov
das
inc
hlt
fs
in
clc
inc
add
xor
mov
pop
lds
test
loopne
mov
xchg
and
add
jecxz
cmps
adc
ins
and
dec
push
push
cmp
or
cmp
xchg
out
aad
je
(bad)
adc
adc
push
imul
dec
jno
jmp
sub
mov
pop
ja
jl
xchg
mov
popa
mov
loop
dec
or
clc
jmp
ins
mov
int
sti
cmp
inc
cmp
jl
push
jge
daa
sbb
stos
pusha
cmp
dec
out
mov
and
dec
xchg
jl
pop
mov
add
sar
jmp
test
pop
and
clc
bound
les
test
sbb
dec
gs
clc
add
sub
fisttp
inc
hlt
cmp
pop
xor
call
push
or
or
xchg
stos
cmp
lods
xor
leave
jl
add
imul
shl
call
imul
mov
jne
mov
fimul
push
fist
xlat
xor
outs
or
cmp
add
pop
cmp
inc
scas
sbb
jbe
xchg
sbb
sbb
push
sub
push
ds
jno
pop
sbb
xor
not
dec
sbb
int
or
cmps
ds
mov
sbb
or
inc
inc
inc
and
and
dec
ror
pop
mov
(bad)
retf
ins
cmp
mov
pusha
add
(bad)
sub
sbb
push
ds
ins
enter
call
test
xor
ret
fild
retf
sbb
and
lods
call
icebp
or
(bad)
jmp
je
out
jno
pop
jecxz
push
fwait
stos
ins
xchg
cmp
xchg
push
xor
pushf
imul
rcl
xchg
sbb
push
jne
xor
shr
add
adc
xchg
rol
lods
out
into
add
cmp
jb
outs
aaa
and
cmc
outs
fcomp
mov
xchg
bound
jne
push
push
dec
add
(bad)
jmp
jbe
call
add
cmp
jne
inc
pop
cmp
jnp
fistp
stc
add
or
push
dec
jae
bound
jbe
dec
sbb
sbb
in
cmp
scas
inc
sub
pop
dec
jnp
lods
add
jne
sub
ja
loope
add
in
into
add
div
lock
sbb
and
push
pop
outs
out
clc
fst
add
mov
mov
fild
jnp
pop
fwait
push
gs
je
inc
test
xchg
sub
rcl
jmp
sti
push
push
or
scas
add
sub
aaa
cmp
call
and
into
inc
je
jnp
push
mov
and
pop
jle
push
mov
pushf
aam
add
sub
lock
sti
(bad)
jb
xchg
push
call
push
mov
ja
add
(bad)
je
push
push
push
call
xor
shl
stos
dec
sbb
and
jp
call
gs
push
add
cld
xchg
rcl
dec
dec
ja
dec
push
or
or
loopne
jnp
push
pop
sbb
out
add
je
sahf
push
cmp
out
enter
mov
pusha
dec
push
call
xor
fsubr
es
jne
cmp
fcmovbe
push
inc
inc
push
mov
mov
loopne
xchg
pop
pop
nop
or
inc
adc
xor
or
hlt
fstp
mov
lahf
out
sbb
call
cmp
pop
daa
dec
(bad)
lods
jb
loopne
mov
lea
push
inc
repnz
out
inc
adc
cmp
mov
add
jo
cs
into
add
rcr
inc
shr
das
xchg
pop
call
xor
dec
add
ret
out
push
adc
inc
push
js
xor
or
loop
adc
xor
ret
xor
pop
jns
loopne
inc
add
lds
mov
jae
lea
push
test
(bad)
xor
add
test
call
inc
jmp
mov
jecxz
add
dec
lea
mov
loopne
sbb
pop
pusha
xlat
add
call
inc
sub
mov
mov
fcomip
jle
outs
rol
dec
jne
xor
lea
cld
icebp
je
add
jnp
push
dec
mov
pop
mov
sub
inc
cmp
loope
jb
xchg
mov
aam
xlat
push
fild
and
mov
cmp
mov
push
std
js
sub
xchg
ja
call
inc
sub
sub
pop
pop
daa
and
and
ret
aas
cmp
jne
cmp
inc
inc
mov
sbb
or
push
adc
shr
and
sub
or
mov
inc
dec
mov
pop
mov
jle
mov
jle
or
add
loope
cdq
repnz
mov
fucomi
mov
imul
mov
shr
lds
shl
fst
and
xor
fld
data16
sub
add
xor
je
scas
(bad)
xchg
push
mov
cwde
sbb
push
jl
test
nop
ins
fcom
jp
add
mov
pop
adc
jne
or
add
retf
xchg
(bad)
mov
rol
cmp
add
add
xchg
mov
sar
shl
dec
dec
sahf
out
pop
push
sbb
or
sbb
inc
pop
stos
cmp
and
and
mov
mov
add
call
jmp
adc
enter
pop
and
mov
inc
mov
mov
adc
or
rcr
jle
push
mov
dec
in
retf
sbb
fwait
add
push
adc
xchg
dec
jns
jg
mov
xchg
scas
outs
inc
push
cmp
jge
adc
sar
cmp
ss
aas
jmp
int3
addr16
ret
jo
test
(bad)
push
push
addr16
ret
dec
or
or
adc
adc
xchg
cmps
sbb
push
jecxz
nop
ret
sbb
mov
jne
jecxz
sbb
cmc
jp
jne
sbb
hlt
pop
mov
push
mov
out
aas
sub
push
inc
cmp
je
pop
cmps
pop
mov
cmps
jle
scas
jl
sub
xchg
mov
shl
cmp
sar
add
je
cmp
pop
sub
add
aas
test
nop
push
mov
in
sub
femms
aas
cli
call
jne
dec
out
and
popf
movs
mov
je
mov
sahf
nop
push
xchg
jge
mov
test
fild
mov
add
outs
mov
mov
push
jmp
mov
dec
mov
and
mov
and
mov
push
jmp
sbb
or
pushf
dec
add
or
lds
mov
fmul
stos
cmp
mov
call
in
and
or
hlt
popa
mov
lods
adc
sbb
je
sub
adc
hlt
outs
inc
fsubr
pop
or
in
push
cmp
lock
jge
pop
in
ss
add
out
ins
pop
lods
sub
mov
iret
push
pop
dec
push
push
xor
push
call
or
push
inc
stos
icebp
mov
adc
add
or
push
and
inc
and
out
xor
or
inc
dec
movs
cmp
xchg
adc
sub
dec
jge
mov
imul
mov
inc
mov
out
push
gs
adc
xchg
(bad)
push
or
mov
jg
rol
invd
cmp
sbb
inc
push
or
pusha
je
ja
push
movs
inc
push
jecxz
fs
cld
dec
add
add
xor
cmc
popa
(bad)
add
lea
cmp
jge
lock
or
or
mov
push
cmps
les
jb
shl
dec
dec
xor
push
dec
push
dec
jo
dec
or
and
dec
addr16
sub
mov
lock
pop
pushf
fmul
push
cdq
jle
adc
dec
push
mov
xor
sub
sti
push
cmp
sub
jg
add
xor
aaa
or
or
test
and
cmp
and
ror
push
cmp
pop
cwde
xlat
cwde
movs
imul
adc
mov
xchg
add
jmp
or
inc
pusha
daa
mov
add
dec
jl
jnp
xor
je
stos
xchg
add
add
inc
xor
inc
push
sbb
and
jae
push
sbb
mov
pop
add
cmp
jbe
movs
sub
or
lahf
xchg
inc
and
xchg
xlat
inc
pop
aaa
fiadd
push
js
push
or
cs
ret
data16
out
push
lock
mov
hlt
adc
sti
ja
jb
dec
jl
mov
cmp
xchg
dec
dec
ret
sti
xor
cmps
pop
jge
stc
ret
outs
or
sbb
add
daa
in
jbe
push
mov
rol
popf
retf
dec
mov
dec
add
push
dec
xchg
je
pop
daa
shr
mov
daa
pop
add
push
cs
push
mov
ror
mov
xchg
je
or
inc
nop
fiadd
adc
add
jmp
cdq
adc
gs
mov
push
inc
xor
popf
call
in
sbb
cmp
cmp
je
or
mov
inc
popa
(bad)
push
mov
push
mov
mov
shl
int3
cmp
pop
push
jl
inc
and
adc
lods
or
in
jge
dec
retf
jle
and
in
inc
adc
and
sub
sahf
push
xor
or
sbb
out
shr
cmp
test
or
add
cmp
lods
xor
mov
cmp
mov
fcmovnb
push
(bad)
xor
rcr
cli
inc
lods
pop
fsubr
loop
mov
mov
mov
sub
adc
scas
jbe
ret
sahf
es
icebp
or
cmp
in
sub
push
dec
stc
and
pusha
cmp
xchg
inc
enter
lds
mov
je
push
or
cmp
cmps
in
fistp
loope
inc
and
sub
add
adc
or
mov
inc
jmp
pop
fisubr
xor
sub
push
and
xor
push
test
cs
jnp
shr
inc
inc
jl
neg
loopne
dec
call
xor
fnstsw
mov
add
adc
xor
std
outs
inc
int
call
cmp
jl
push
mov
mov
mov
add
leave
test
or
imul
xchg
retf
add
push
sbb
pop
lds
adc
(bad)
push
xor
lahf
jecxz
adc
adc
test
das
popa
or
cwde
ror
out
xor
jmp
jnp
int3
and
add
call
and
pop
pop
xor
inc
push
mov
mov
out
(bad)
rol
out
add
inc
add
xchg
jp
int3
push
pop
push
push
jmp
jne
add
or
hlt
add
and
lock
cdq
fstp
test
lock
movs
add
and
push
(bad)
sbb
lea
adc
into
mov
and
aam
or
in
mov
imul
sub
jecxz
cmp
lock
jae
jecxz
push
sti
or
hlt
ins
imul
fld1
cmp
inc
stos
in
push
cmp
in
cwde
push
lahf
cmp
pop
es
hlt
or
call
stos
shr
and
and
ins
jo
xchg
psubb
jle
and
icebp
pop
imul
cmp
(bad)
push
jne
xor
sbb
inc
(bad)
jne
in
add
in
sbb
sbb
sbb
sbb
jge
mov
xor
mov
and
xor
fidivr
mov
sbb
cmp
in
add
or
gs
out
dec
js
mov
mov
shr
aas
xor
cli
aam
call
stos
push
mov
stc
pop
loopne
retf
or
mov
fadd
xor
iret
add
out
pop
mov
sub
push
cmp
sti
and
scas
call
push
adc
ins
dec
push
loopne
and
push
push
mov
xor
add
mov
div
es
and
es
popa
mov
mov
(bad)
(bad)
cli
jge
sbb
in
inc
xchg
lods
cs
loopne
or
or
loop
mov
or
dec
add
add
sbb
cwde
and
cdq
or
ds
mov
cmp
add
sbb
and
cmp
jne
ret
sahf
popa
scas
cmp
jne
dec
adc
cwde
ds
packuswb
dec
mov
or
and
cdq
fs
pop
mov
sti
nop
dec
clc
push
mov
add
stc
and
adc
add
sbb
lahf
mov
in
in
mov
jns
nop
lock
or
add
addr16
mov
repnz
(bad)
clc
clc
dec
jle
adc
xchg
add
repnz
cmp
add
repnz
(bad)
clc
std
hlt
sub
or
or
sub
adc
or
lahf
or
ret
jb
inc
inc
(bad)
out
add
add
std
dec
add
stc
mov
xor
add
pop
add
and
mov
lds
das
mov
aaa
push
jnp
cmps
and
inc
add
push
or
add
int3
and
popa
sti
add
and
add
int3
daa
adc
sbb
jecxz
jbe
adc
pop
int3
adc
into
xchg
sub
jge
or
repz
push
inc
ja
(bad)
ja
pop
mov
mov
or
adc
jae
adc
ss
out
xor
jns
inc
adc
xor
inc
cmp
retf
add
and
push
push
sahf
xor
lods
inc
lahf
shl
and
or
data16
std
imul
xor
or
repz
and
or
inc
mov
(bad)
lock
or
fs
gs
popa
mov
cmp
daa
es
xlat
pop
and
ds
(bad)
shl
ret
out
mov
sbb
test
xor
add
and
ins
dec
sub
sbb
ror
ins
adc
not
adc
sub
pop
inc
mov
fld
dec
clc
dec
inc
cwde
outs
int3
(bad)
sub
or
xchg
push
mov
ret
inc
pushf
mov
retf
dec
jecxz
not
push
dec
seto
repz
push
call
cmps
stc
add
sub
out
sahf
out
jo
test
jbe
mov
clc
repz
repz
cmp
cmp
fs
mov
repz
hlt
ins
xchg
sahf
(bad)
push
dec
add
xchg
movs
mov
fiadd
push
inc
cwde
cmp
and
add
cmp
retf
rcl
mov
push
das
fcmove
dec
xchg
not
add
add
ja
pop
jae
outs
pop
jbe
ja
pop
push
jnp
xor
inc
xchg
add
xor
stos
mov
add
jle
sub
lahf
or
test
mov
aas
add
stos
fcmovu
sbb
lahf
sub
popa
add
add
xchg
iret
mov
ds
mov
sub
pop
adc
dec
add
add
push
int3
add
add
or
ins
sbb
(bad)
mul
fdiv
sub
aad
or
mov
in
xchg
push
ret
jne
mov
ret
test
adc
shl
pushf
cmp
mov
add
cmps
xlat
mov
repz
cmps
mov
repnz
lods
pop
mov
lock
dec
shr
imul
or
aas
cmp
nop
or
inc
sbb
idiv
push
mov
inc
adc
xor
add
sub
jo
xchg
inc
inc
mov
cmp
add
adc
scas
pop
sbb
sbb
mov
test
inc
outs
jae
cmp
mov
pop
sbb
ins
data16
ins
arpl
jp
add
dec
add
out
add
and
imul
mov
or
fnstenv
lock
cmp
jns
sbb
fidivr
jns
push
or
ret
xchg
pop
push
mov
outs
stc
add
sub
push
stc
outs
test
sub
inc
je
popa
arpl
xchg
pop
push
add
(bad)
adc
cmp
bound
cdq
dec
mov
popa
jo
and
push
adc
push
or
jns
test
inc
and
retf
adc
mov
add
jecxz
push
xchg
sub
mov
gs
rol
add
shr
push
push
test
inc
xor
ja
and
inc
ss
add
dec
jb
cli
dec
inc
dec
ret
push
sub
sbb
add
or
push
push
inc
dec
cs
or
push
aaa
add
xchg
xor
xor
adc
aas
cs
aam
test
lahf
sbb
pop
xchg
stos
pop
inc
ds
ss
arpl
push
into
and
inc
sub
mov
xor
mov
adc
sub
xchg
dec
pop
mov
loope
cmp
test
mov
jmp
daa
adc
sub
hlt
cwde
aas
sub
mov
cmps
fbstp
sub
dec
mov
xor
out
inc
movs
stos
dec
pop
xchg
fisttp
pusha
cmp
or
cmp
push
test
(bad)
test
push
sub
mov
push
push
cmps
das
push
push
cs
lds
imul
std
mov
out
dec
scas
fmul
mov
jle
cmp
adc
ret
xor
xor
or
mov
ret
inc
sub
and
mov
xor
mov
out
cmc
and
dec
nop
mov
leave
dec
mov
or
movs
mov
inc
cmp
mov
cmp
add
sub
and
stos
mov
mov
cmp
or
mov
mov
push
cdq
push
jmp
sub
cmp
jne
aam
pop
cmp
sbb
call
xor
sahf
push
add
inc
aam
test
ret
(bad)
push
mov
mov
push
leave
ror
pop
push
and
xchg
mov
loop
sar
add
push
inc
and
inc
lds
xchg
sahf
out
push
sub
pop
arpl
xor
dec
xchg
dec
mov
xor
xor
push
hlt
inc
rcl
mov
mov
or
xor
lock
or
adc
sub
add
shl
pop
dec
xchg
cld
jnp
and
pop
and
cmp
jge
mov
jge
aam
pushf
das
lahf
pop
mov
aam
push
outs
and
pusha
xor
leave
pop
add
dec
xor
adc
sub
adc
sub
fmul
out
rol
jle
sub
call
mov
repnz
jo
add
add
in
inc
sub
cmps
add
bound
out
adc
sub
inc
add
(bad)
(bad)
dec
outs
jo
dec
push
(bad)
cwde
fild
add
adc
cmp
dec
add
enter
add
sbb
xchg
repz
sbb
inc
dec
add
ficomp
nop
push
sahf
add
sbb
pop
and
in
pop
cmp
into
test
jne
push
inc
or
or
mov
mov
or
add
fistp
add
inc
and
sub
je
dec
adc
mov
dec
enter
mov
bound
push
pop
jnp
cmp
push
adc
popa
movs
aaa
inc
add
inc
pop
test
mov
shl
inc
push
dec
add
push
push
(bad)
dec
shl
cmps
pop
and
add
jbe
push
jo
(bad)
add
or
mov
xchg
add
(bad)
movs
iret
sub
fsubr
repnz
cwde
pop
pop
rol
sbb
cwde
fisttp
dec
xor
jnp
push
dec
data16
repnz
xor
push
push
int
sbb
inc
push
xchg
mov
movs
cli
add
jp
mov
adc
aaa
pop
add
movs
and
add
(bad)
lock
inc
xor
xor
push
inc
mov
mov
lea
xor
addr16
sub
push
fmul
sbb
sbb
lea
call
mov
movzx
scas
mov
dec
sbb
inc
push
mov
fs
pusha
daa
xor
jnp
stc
and
out
jg
or
vmaxss
mov
push
push
lds
rol
pop
and
or
or
and
mov
frstor
pop
or
push
stc
call
outs
push
dec
mov
inc
dec
mov
dec
mov
or
pop
pop
mov
jl
addr16
dec
mov
pop
pop
mov
sahf
retf
inc
shr
dec
or
out
or
outs
sub
or
je
(bad)
push
mov
inc
pop
ret
popf
push
or
call
or
rol
dec
cld
loop
ja
aam
js
call
and
add
add
out
lahf
inc
inc
imul
dec
and
sub
call
push
outs
jg
pop
pop
xchg
pop
xor
movq
adc
dec
xor
pop
es
loope
pop
pop
xor
xchg
and
sbb
es
cld
int
inc
js
adc
push
pop
pop
jbe
out
mov
mov
or
pop
pop
dec
retf
and
jg
pop
ins
inc
mov
push
ins
adc
pop
sub
inc
inc
neg
rcl
out
ins
fmul
clc
inc
fld
jae
pop
jmp
or
ins
imul
mov
or
jb
add
pop
aad
add
cmp
xor
mov
cmp
jecxz
inc
push
sbb
into
cmp
add
ret
add
ja
inc
test
xor
test
sbb
pop
jge
stos
add
repnz
ss
shl
inc
les
outs
aam
inc
dec
inc
pop
leave
sub
dec
adc
pushf
in
cmp
inc
jmp
in
mov
push
bnd
push
call
fstp
test
pop
jb
or
repz
leave
retf
xchg
pop
or
pusha
dec
enter
add
pop
leave
and
adc
jae
inc
into
inc
pop
ficomp
jle
and
or
and
aas
push
loopne
test
shl
cmp
push
fiadd
dec
mov
nop
pop
push
out
call
test
mov
inc
sub
dec
xor
cmp
js
push
(bad)
mov
imul
mov
and
adc
sti
out
jns
dec
dec
cmp
lods
mov
jb
sub
fnstcw
xchg
ja
cmp
push
jo
xor
sub
arpl
imul
js
dec
(bad)
daa
jg
cmp
repz
cmc
pop
pop
enter
ja
and
or
pusha
cli
pop
js
jnp
iret
xchg
and
adc
dec
or
cli
push
and
in
xor
dec
pushf
jge
stos
dec
lds
les
xchg
inc
inc
mov
int3
pop
push
or
adc
nop
addr16
and
add
ficom
cmp
xchg
pop
and
dec
cmp
je
inc
mov
fidiv
add
push
mov
sub
jnp
jg
adc
inc
mov
dec
add
cmp
jne
pop
js
sbb
call
cmp
mov
xor
or
retf
xchg
and
lds
aas
ds
or
and
push
or
xor
cmp
jmp
and
rol
fxch
shr
mov
push
mov
sbb
and
jo
jle
shl
(bad)
inc
mov
sar
jp
ror
ins
sub
pop
(bad)
xlat
cmp
dec
xor
mov
sub
mov
add
sub
sub
xchg
and
es
enter
xlat
and
fs
loope
jbe
jmp
cmp
jb
js
add
sbb
sbb
inc
inc
mov
and
and
jg
dec
test
xchg
xchg
cmp
in
enter
test
cmp
jnp
xchg
aas
test
sbb
fimul
shl
mov
iret
lea
enter
push
ror
(bad)
sahf
sub
enter
(bad)
xchg
mov
bnd
in
xchg
jb
dec
mov
xor
xchg
inc
mov
xor
inc
inc
mov
popf
xchg
and
and
pushf
lahf
enter
out
lea
in
xchg
nop
mov
xor
movs
lods
mov
sbb
xchg
lds
add
mov
js
push
and
and
lods
push
rep
enter
scas
ds
in
enter
mov
jb
jb
and
cld
cmp
cmp
xor
mov
and
inc
inc
dec
inc
mov
xchg
and
mov
xlat
iret
enter
inc
lea
cmp
jle
jne
inc
mov
jmp
and
mov
jmp
jmp
cs
je
fst
test
test
xchg
xchg
jbe
jge
out
mov
jae
jne
sub
sbb
idiv
inc
mov
dec
mov
xor
and
cwde
add
xor
scas
sbb
mov
adc
aas
cmp
repnz
imul
jle
and
add
inc
dec
mov
jmp
sub
jae
cmp
jl
mov
loop
push
adc
cmp
adc
clc
jbe
push
jbe
loope
jns
inc
arpl
dec
jmp
dec
add
dec
mov
cmp
adc
aaa
jmp
ror
pop
pusha
test
ror
and
jl
dec
(bad)
or
cmp
dec
lea
adc
mov
dec
mov
push
pop
push
ins
push
in
(bad)
dec
in
in
les
sub
adc
stc
push
loope
std
jnp
mov
pop
out
xchg
dec
jl
outs
sub
clc
xor
push
sbb
sub
sbb
pop
push
call
push
pop
sub
ja
dec
test
cmp
test
jge
adc
(bad)
cmp
dec
sti
(bad)
je
lock
cmc
sub
jne
cwde
inc
push
cmp
inc
add
mov
pop
adc
imul
and
arpl
loopne
and
xchg
jg
js
inc
(bad)
dec
or
add
(bad)
mov
adc
add
sbb
mov
in
fidiv
or
leave
lock
loope
cld
lea
call
mov
(bad)
outs
pop
sub
mov
push
mov
sti
push
ret
mov
push
fiadd
mov
cmp
jne
mov
push
push
(bad)
mov
jl
push
pop
shl
xor
daa
inc
aas
(bad)
test
divps
icebp
sub
or
or
mov
mov
movs
push
addr16
jmp
push
aas
push
add
push
cmp
and
jg
inc
mov
dec
and
inc
adc
push
add
sti
mov
jb
rol
ror
test
mov
fs
aad
sub
shl
mov
fiadd
out
push
sub
das
cmp
xor
inc
and
xor
in
imul
into
xchg
pop
adc
leave
mov
push
xchg
ror
(bad)
je
xchg
iret
sbb
and
call
push
pusha
aam
sub
into
push
jl
repz
dec
xor
cmp
ss
js
and
mov
pop
adc
int3
pop
sub
inc
fs
pop
xchg
xor
push
mov
aam
retf
test
iret
dec
les
test
mov
ds
push
cs
pusha
loop
adc
pop
dec
cmp
mov
mov
add
inc
ins
add
enter
cli
add
inc
dec
push
dec
add
or
arpl
in
xor
push
cmp
dec
and
pop
cwde
int
pusha
(bad)
dec
jae
push
push
dec
outs
int
jo
cmp
xchg
sbb
mov
pusha
fld
pop
enter
xor
outs
push
sbb
pushf
xchg
inc
rcr
pop
lea
aad
aaa
je
repz
ss
cmp
and
sub
stos
int3
and
int3
jae
imul
fs
add
and
test
(bad)
jp
iret
mov
int3
mov
sbb
imul
xchg
pop
enter
(bad)
stos
gs
or
aaa
jmp
popf
sbb
dec
clc
pop
push
jne
adc
inc
fs
push
jmp
call
pop
dec
sti
push
cdq
cmp
jne
test
cmp
pop
lahf
add
ss
in
dec
pop
lods
cmp
imul
dec
fldcw
add
mov
ss
(bad)
retf
shl
mov
pop
(bad)
mov
sbb
inc
sbb
lea
mov
add
mov
or
or
lods
std
xchg
and
sub
sbb
inc
inc
loop
test
sub
mov
inc
pop
jbe
(bad)
aas
lock
cmp
je
inc
cmp
je
dec
je
mov
mov
cmp
je
dec
sbb
shl
dec
lea
jg
xchg
(bad)
lods
shl
cmp
jne
not
jne
sbb
adc
add
push
mov
cmp
pop
xchg
ror
and
mov
outs
sar
hlt
mov
and
add
and
sub
mov
rol
iret
popa
adc
xchg
and
sub
dec
leave
enter
gs
jb
fs
addr16
gs
sbb
jb
mov
lods
imul
movs
ins
mov
inc
dec
inc
mov
jno
xchg
daa
and
add
xchg
inc
fisttp
in
les
sbb
jb
jns
std
xchg
je
inc
mov
shl
and
push
xchg
xchg
xchg
and
mov
enter
and
xor
fs
dec
xchg
sbb
cmc
add
inc
fimul
cmps
xor
add
inc
sbb
xchg
and
cdq
test
mov
imul
xor
mov
sbb
sbb
dec
inc
mov
xchg
daa
and
xchg
popa
clc
add
enter
cwde
dec
loope
call
mov
jb
mov
lods
add
cmp
mov
sti
test
inc
xlat
jne
and
mov
sbb
mov
fs
scas
sahf
cmp
mov
xchg
iret
enter
mov
imul
gs
movs
push
sub
pop
or
mov
rol
sti
jmp
pop
push
rcl
test
add
cmp
push
add
mov
mov
push
add
idiv
fdiv
sbb
and
sub
daa
dec
push
shr
add
cld
(bad)
sbb
out
cld
int3
adc
adc
inc
add
imul
je
push
add
imul
jmp
into
je
inc
fsubp
xchg
popf
xchg
test
sbb
push
dec
add
jo
popa
jae
loope
outs
mov
(bad)
rcr
sbb
push
outs
gs
sub
mov
push
daa
mov
sbb
dec
inc
cld
rol
(bad)
fldenv
xor
dec
lahf
mov
shr
adc
je
loopne
cmp
and
je
dec
(bad)
and
xchg
(bad)
and
je
jecxz
xlat
add
in
call
leave
cmps
and
mov
ret
jne
(bad)
es
out
test
add
cmp
add
xor
inc
test
push
(bad)
inc
inc
aad
cli
das
cmp
(bad)
out
pop
call
jae
dec
arpl
cmp
inc
add
add
cmp
push
dec
jo
jbe
fisub
sub
jbe
in
hlt
inc
es
cmp
call
out
jge
push
add
fcom
jl
inc
dec
xor
pop
cmp
std
dec
popa
loopne
(bad)
cmp
fimul
loope
sub
cmp
fdiv
push
push
loopne
sub
cmp
dec
push
mov
sbb
dec
mov
not
fst
inc
and
mov
hlt
dec
addr16
mov
jl
or
mov
push
sahf
dec
dec
or
adc
cmp
(bad)
or
or
and
add
jmp
movs
sbb
pop
adc
or
mov
push
push
xor
dec
arpl
aam
push
mov
scas
ror
dec
or
sub
test
xchg
dec
or
dec
clc
jnp
ins
adc
cmp
jge
pushf
and
or
das
push
dec
sbb
push
mov
inc
or
fbstp
dec
shl
out
shr
dec
icebp
mov
push
mov
inc
inc
jnp
aaa
lock
jp
pop
or
mov
mov
sbb
lea
xchg
and
cmp
push
gs
mov
push
add
jne
jge
in
mov
clc
sbb
add
test
inc
add
movs
popa
in
dec
call
pusha
cmps
out
add
jne
cmp
sub
or
pop
xchg
lods
dec
daa
or
xchg
xor
shr
shl
sar
cs
imul
jle
ror
lea
fcmovu
or
loop
or
push
add
adc
or
leave
ror
call
mov
fnstenv
repnz
push
or
ror
and
shr
retf
push
or
into
cmp
mov
jne
mov
jl
retf
pop
mov
pusha
not
call
xchg
repz
ret
into
inc
push
jnp
ret
test
inc
arpl
pop
ja
xor
push
or
sbb
js
or
pushf
mov
dec
jmp
inc
or
daa
add
mov
shr
pop
sti
xor
clc
call
add
loop
loop
fadd
xor
cmps
inc
(bad)
outs
mov
lea
cmp
jge
mov
mov
mov
sub
push
lock
xchg
mov
or
and
mov
call
push
jp
cmp
jnp
scas
pop
ret
push
(bad)
mov
dec
retf
sar
es
popf
or
jg
xchg
and
cmp
hlt
cld
in
aaa
call
jns
cmp
jge
inc
jnp
sbb
cmp
scas
push
ror
inc
and
xor
jmp
repz
arpl
retf
bound
adc
(bad)
mov
mov
pusha
hlt
mov
ins
cmp
jl
mov
stos
lea
out
mov
push
add
sar
lock
test
dec
cmp
sub
or
inc
pusha
push
inc
rcr
(bad)
aam
call
mov
add
mov
mov
sbb
dec
cmp
xor
push
sub
adc
pop
into
dec
(bad)
adc
sbb
xchg
loopne
lock
inc
add
retf
fild
pop
push
(bad)
loopne
(bad)
div
inc
jg
(bad)
adc
dec
rcr
xchg
hlt
fs
mov
or
add
add
popf
jae
lea
mov
cmp
aaa
fisubr
out
dec
lahf
sub
push
test
mov
xlat
fsub
arpl
out
or
cmp
pop
jnp
sub
inc
sub
mov
aas
dec
arpl
adc
cld
fs
cdq
fmul
lods
mov
mov
retf
or
(bad)
dec
pop
daa
movs
xchg
adc
and
mov
push
pop
inc
jl
add
add
adc
outs
cmp
loopne
cli
inc
cmp
or
(bad)
aad
pop
mov
inc
fdivr
inc
lea
inc
icebp
fbstp
(bad)
mov
jmp
inc
mov
imul
mov
lea
jnp
inc
push
dec
push
inc
pop
out
out
add
pop
and
shr
mov
and
in
dec
hlt
adc
aad
(bad)
ds
ja
push
adc
mov
stos
adc
add
adc
or
mov
jp
mov
mov
call
cmps
jmp
xor
ds
xor
mov
jne
sbb
scas
pop
or
and
jmp
adc
sub
jp
call
jmp
loop
pop
inc
and
push
aas
add
add
cs
call
pop
out
jmp
mov
scas
inc
dec
mov
push
pop
push
jnp
and
add
pop
clc
adc
stc
jo
add
popa
cli
jmp
add
pop
sahf
push
add
add
and
jnp
add
sub
call
adc
mov
loop
loope
jb
xchg
retf
mov
push
lods
add
jl
mov
ins
mov
mov
iret
in
cmp
in
push
jb
test
iret
lock
pop
mov
sbb
dec
mov
push
loopne
mov
fistp
fsub
push
add
sar
icebp
xor
add
call
push
dec
push
adc
dec
and
and
cli
lock
xchg
ror
clc
icebp
call
mov
and
adc
cmp
rcl
mov
adc
cmc
imul
adc
cmp
fwait
lock
retf
and
mov
dec
mov
and
mov
sbb
xchg
sti
sub
dec
xor
mov
mov
jo
cmp
lahf
jmp
push
pop
and
adc
jmp
add
jle
dec
test
not
gs
mov
push
mov
xchg
sub
adc
pop
mov
pop
sbb
or
mov
jp
scas
fisub
lock
jmp
mov
ret
mov
js
bound
jle
shl
push
mov
lea
fbld
dec
push
add
(bad)
mov
(bad)
xor
pop
and
jne
push
rol
pop
xor
inc
fistp
or
pushf
sahf
xchg
mov
xor
push
test
jne
inc
ret
inc
dec
or
out
adc
mov
pop
mov
mov
inc
and
cmc
fstp
loop
jmp
mov
pop
jmp
int3
push
in
mov
aaa
dec
push
cs
inc
sbb
adc
ss
inc
dec
(bad)
jl
add
dec
wrmsr
mov
mov
adc
jmp
retf
mov
and
rcr
outs
inc
lea
inc
call
add
pusha
and
jbe
dec
add
nop
push
cwde
das
scas
pop
push
and
dec
mov
lock
nop
add
fcmovb
mov
call
inc
retf
sar
mov
jmp
sbb
ss
push
cmp
cmps
repnz
pop
daa
inc
lods
push
in
push
sub
push
pop
mov
cmp
cmovno
adc
or
ret
add
jne
inc
bound
dec
rol
xor
call
sbb
clc
sub
punpcklbw
leave
xchg
cmc
sub
pop
pusha
iret
inc
dec
push
cmp
mov
sbb
and
mov
inc
in
and
out
add
lods
xlat
jl
das
and
jbe
inc
inc
cwde
jecxz
leave
adc
dec
arpl
jmp
outs
xor
push
cmp
je
xor
mov
add
rcr
cmp
mov
xchg
push
xchg
mov
je
mov
dec
imul
pop
pusha
add
loopne
mov
adc
add
inc
sub
call
sub
push
add
enter
mov
add
or
pusha
and
pop
loope
jmp
in
nop
loope
xchg
sub
aam
pop
or
inc
aas
xchg
lock
nop
imul
cmc
push
adc
sahf
xchg
and
cmp
test
mov
mov
jne
shl
inc
and
push
call
test
jmp
inc
sahf
dec
or
inc
or
inc
add
add
jmp
push
or
inc
not
jmp
not
aaa
mov
and
hlt
shl
not
les
movs
adc
sub
shl
xchg
or
mov
push
hlt
clc
adc
adc
or
push
pop
push
jmp
adc
push
jle
js
push
ret
js
push
loope
inc
mov
xor
inc
or
dec
pop
mov
dec
sub
movzx
inc
push
adc
sub
or
mov
rcl
fsubp
mov
jo
jmp
push
xor
push
clc
adc
cld
mov
add
scas
pusha
sub
js
call
mov
fdiv
repnz
shl
leave
sub
lock
dec
call
lods
mov
lea
(bad)
stos
mov
add
ja
jb
ins
mov
pop
sub
aaa
fidivr
icebp
and
inc
inc
inc
cmp
jge
sbb
jo
imul
sbb
and
je
sbb
shr
add
hlt
test
mov
fsubr
xor
sbb
je
stc
cdq
test
call
sbb
stc
inc
mov
je
sub
test
retf
jo
rdmsr
call
inc
mov
xor
rcr
cmp
sbb
stos
(bad)
mov
(bad)
or
sbb
jo
cmps
jmp
push
lods
sub
cmps
loop
pop
bound
in
pop
mov
add
in
jl
in
(bad)
mov
cs
inc
cmp
je
or
ins
pop
data16
cmp
xor
mov
loopne
dec
mov
cmp
ins
xlat
adc
mov
add
jge
inc
and
xchg
shl
cmc
cmps
test
inc
mov
xor
dec
les
cmp
add
mov
popf
call
dec
mov
cmp
mov
popa
xchg
movs
sub
ins
mov
jns
push
(bad)
xor
mov
adc
stos
in
iret
leave
nop
stos
jne
cmp
ror
adc
mov
or
movs
mov
mov
or
cmc
push
add
shl
retf
add
fcom
and
shl
lea
jecxz
inc
call
dec
imul
int
test
daa
call
sub
xor
dec
inc
dec
enter
lods
call
mov
or
dec
mov
inc
(bad)
retf
retf
dec
lods
dec
clc
add
aad
or
cld
sti
lods
jnp
mov
jl
jmp
and
data16
cmp
add
rcl
retf
ss
aam
and
fadd
fsubr
out
jns
fmul
push
adc
sbb
xchg
ret
lods
or
repz
sbb
sub
mov
add
(bad)
test
jecxz
push
jge
xor
pop
mov
add
jno
imul
fild
and
pop
xchg
add
jge
or
jmp
sbb
jne
dec
pop
push
adc
or
xchg
push
dec
data16
gs
retf
cmp
cmp
pusha
fs
and
add
movs
enter
dec
cmp
adc
loopne
or
and
popa
sbb
mov
dec
adc
dec
cmp
push
inc
mov
xor
jp
stos
add
sbb
retf
add
call
push
stc
out
dec
bound
cmp
add
or
fild
jmp
inc
call
jnp
int3
xor
inc
idiv
or
and
add
or
jo
or
das
jne
shr
cmovle
out
cmps
es
lahf
rcl
pop
inc
daa
test
dec
div
imul
pop
test
stos
arpl
mov
in
xchg
pop
fadd
sti
cmc
xchg
loop
lods
imul
ins
mov
in
pusha
ss
repz
push
and
mov
sti
and
mov
aaa
add
mov
mov
jbe
and
(bad)
aaa
jne
adc
das
sbb
or
gs
or
xor
cwde
mov
inc
adc
xor
pusha
(bad)
cmp
aad
add
shl
add
add
and
and
retf
shr
ss
or
(bad)
out
add
outs
and
icebp
jo
mov
(bad)
cmp
jbe
aas
and
mov
cmp
es
xchg
out
jle
mov
or
bound
imul
cmp
sub
push
js
popa
mov
movs
out
xor
inc
out
inc
gs
int3
fistp
sub
rol
in
cmp
or
cmp
aas
sbb
and
pop
sbb
pop
ja
sub
xor
je
(bad)
(bad)
shr
jmp
mov
(bad)
pop
in
add
enter
test
xchg
or
loope
je
xchg
push
shl
mov
adc
xlat
ss
inc
inc
jae
test
test
mov
sbb
push
mov
sub
mov
arpl
add
or
or
mov
sub
(bad)
mov
clc
mov
sub
jne
sub
movs
sbb
jl
(bad)
push
inc
mov
dec
mov
loop
adc
std
push
call
cwde
pop
data16
adc
ins
adc
mov
daa
add
cmps
pusha
add
es
cs
fnstcw
push
stos
icebp
lea
pop
xchg
sub
mov
jmp
sbb
retf
data16
int3
pop
dec
dec
adc
data16
inc
add
cmp
jg
dec
arpl
cmp
aad
cld
sub
sbb
das
xchg
add
out
(bad)
xchg
mov
mov
loop
adc
inc
mov
jmp
or
xlat
adc
dec
test
cmp
cmc
in
sbb
sbb
sbb
sti
mov
cmp
dec
push
dec
add
sbb
js
cmp
jge
xor
push
adc
inc
dec
add
sub
in
inc
cmp
and
jne
aam
push
sub
fdiv
mov
add
hlt
ret
or
jbe
sub
mov
popa
iret
mov
test
shl
retf
pop
mov
xchg
stos
mov
mov
lea
cli
add
mov
rcl
ins
jmp
jns
cmps
or
les
(bad)
das
dec
ja
jmp
(bad)
addr16
sti
(bad)
pop
clc
addr16
push
sub
fdivr
mov
push
fs
cmps
and
or
xor
cld
jmp
fimul
pop
jne
cs
pop
push
adc
gs
add
or
and
add
jl
cmps
push
sti
pop
or
push
(bad)
mov
mov
in
fsubr
iret
jp
cmps
mov
and
dec
enter
movs
not
mov
shl
mov
aad
sbb
jo
test
pop
js
jae
call
pop
pop
push
sub
(bad)
and
push
inc
xor
inc
adc
pop
retf
cmps
dec
lea
xchg
mov
and
and
push
fisttp
in
jmp
push
and
les
aam
jae
inc
mov
cmc
dec
mov
and
and
xchg
daa
nop
xlat
xor
add
and
pop
mov
inc
je
dec
dec
icebp
hlt
push
or
and
int3
(bad)
adc
xchg
mov
xchg
je
jnp
or
test
pop
jo
lock
pushf
and
dec
pop
sbb
adc
movsx
movs
xor
push
not
or
jg
cmp
je
or
mov
add
dec
rcl
and
test
mov
neg
mov
cmovne
imul
lea
inc
jle
pop
mov
mov
cmp
sbb
cld
mov
cmove
cmp
data16
call
xor
inc
loopne
adc
cdq
mov
jle
jmp
cmp
je
or
std
pop
(bad)
test
push
push
cmp
jl
cmp
ror
xor
(bad)
fist
jge
mov
inc
mov
imul
adc
adc
adc
add
add
(bad)
xor
jmp
repz
xor
js
jl
cmp
add
mov
xchg
stos
adc
or
jg
fnstenv
and
mov
dec
xor
cmp
jle
add
lds
cmp
ds
inc
push
sub
dec
mov
push
xor
in
je
push
dec
or
push
test
and
ins
movs
mov
(bad)
mov
jl
(bad)
lods
test
jmp
lock
xor
mov
jmp
adc
arpl
dec
add
test
and
aam
clc
scas
cli
(bad)
jp
pop
cmp
jl
jmp
pop
pop
pop
adc
push
clc
pop
xor
nop
lods
or
inc
inc
xchg
(bad)
stos
push
jecxz
mov
push
cdq
lea
repz
sub
pop
clc
adc
xor
and
or
stos
cmp
dec
cmp
add
cmp
or
sar
ins
pop
lock
fisttp
fmul
or
xor
jb
dec
lods
loopne
adc
pop
dec
and
shr
scas
leave
shr
or
test
sub
inc
mov
sbb
into
bound
repnz
jp
mov
xchg
jge
dec
sub
adc
xor
jle
or
hlt
xor
pop
cs
adc
and
or
or
out
les
rcl
rcl
aas
and
div
lock
jae
jb
or
data16
or
add
dec
bound
and
inc
push
add
inc
sub
ins
loopne
leave
xchg
jp
cdq
adc
ins
jb
or
retf
lods
sub
leave
sub
push
mov
std
das
rcr
cs
test
loope
dec
or
mov
xor
rcr
mov
and
mov
and
mov
xchg
mov
(bad)
adc
cmp
test
pop
and
mov
inc
or
jg
jns
jg
xor
mov
xchg
aas
rcr
rol
shl
push
cwde
adc
popf
fst
cmp
or
fwait
shl
add
inc
fs
mov
sbb
std
pop
in
inc
mov
sub
cwde
cmp
je
repnz
jnp
push
xor
js
add
mov
inc
ror
rol
outs
inc
pop
in
jge
mov
pop
les
cmp
das
fs
sti
je
cmp
cmp
cmp
idiv
cmp
es
jl
xor
pop
pop
or
jmp
rcr
jmp
adc
ror
into
js
in
mov
(bad)
cmps
pop
mov
movs
call
xchg
sub
cmps
(bad)
jo
sub
sbb
inc
mov
nop
into
sbb
lea
mov
mov
mov
je
mov
xor
inc
jnp
sbb
jmp
pop
fs
inc
cs
sub
loope
mov
clc
mov
jmp
push
cmp
xchg
mov
xor
mov
pop
and
xor
pop
imul
loop
add
loope
call
das
enter
call
add
xor
cmp
xor
inc
clc
sar
xor
ret
and
push
push
or
pushf
push
inc
adc
mov
stos
mov
es
jnp
inc
jmp
ins
jle
ror
imul
cld
or
lea
cld
push
push
adc
push
jb
dec
mov
movs
sti
sbb
imul
or
add
and
pop
lea
bound
ficomp
out
or
(bad)
mov
xchg
sti
or
xchg
fimul
nop
rol
cwde
das
js
imul
in
fsubr
dec
mov
or
dec
mov
lock
test
inc
loopne
or
jae
and
(bad)
je
dec
lods
pop
rol
fidiv
mov
(bad)
in
cmp
dec
es
sub
test
rcr
inc
outs
and
in
test
(bad)
cmp
daa
ror
adc
and
jmp
or
repz
repz
jl
or
adc
jbe
scas
(bad)
mov
xchg
out
(bad)
dec
loopne
xchg
sub
adc
shl
adc
adc
into
jl
fst
iret
call
shl
jp
jmp
int
mov
adc
add
sbb
cs
popf
pop
jle
sbb
aam
inc
pop
cmp
daa
test
sbb
and
loopne
fmul
sub
clc
aad
sti
jmp
pop
lea
or
sub
sub
cmp
add
push
dec
jmp
cwde
call
mov
mov
dec
xchg
adc
and
inc
xor
or
adc
mov
xchg
das
xor
inc
bnd
imul
lods
mov
add
loop
sub
mov
mov
jne
cmp
aas
or
or
dec
inc
dec
or
or
sti
rcr
scas
pop
cmp
loope
lods
jne
adc
xchg
out
adc
jne
sbb
jne
in
and
fistp
or
and
jmp
sbb
pop
out
dec
bswap
add
jb
mov
xor
or
or
cmp
stc
inc
ins
outs
ja
or
or
mov
dec
leave
and
sbb
fwait
push
or
jb
add
mov
jo
inc
imul
ins
ror
out
faddp
push
jg
and
push
movs
and
xlat
out
sti
adc
mov
pop
push
arpl
xor
fdivp
fisub
imul
imul
xor
add
jae
neg
leave
adc
je
lods
or
das
pop
and
push
pop
outs
sbb
imul
ficom
jecxz
sbb
dec
ds
out
mov
pop
mov
bound
imul
jo
dec
push
add
aaa
dec
nop
mov
ins
mov
mov
popa
out
loopne
xchg
fild
js
jae
push
mov
jae
jmp
sub
inc
mov
iret
and
loop
add
fnstsw
and
xor
mov
inc
dec
sub
xor
mov
push
jae
push
dec
shr
outs
std
lock
fild
add
add
adc
push
jnp
in
mov
aas
push
push
sbb
lods
fisttp
push
cmp
push
mov
inc
mov
jnp
mov
pop
mov
test
mov
jnp
xchg
aaa
inc
xchg
mov
rcr
pop
fisttp
repz
aas
push
add
out
xor
dec
xchg
(bad)
mov
add
push
mov
inc
xor
dec
retf
inc
pusha
fild
xor
mov
mov
inc
sahf
add
pusha
in
pop
adc
pop
fcmovnbe
push
lds
cmps
sti
lock
jmp
ret
dec
out
ja
mov
push
es
(bad)
jg
arpl
outs
xor
retf
push
inc
rol
mov
adc
lahf
adc
cmp
aas
aaa
mov
lds
lahf
push
outs
sub
or
lock
sahf
push
imul
sub
pop
lahf
pop
test
js
push
es
add
dec
pop
adc
pop
push
fdivr
dec
neg
push
adc
div
pop
or
dec
push
push
sbb
xlat
sub
dec
xor
cmp
push
mov
cmp
add
sbb
(bad)
push
or
in
(bad)
dec
pandn
pop
sbb
mov
rcl
pop
aaa
mov
cmp
jbe
push
leave
inc
push
inc
loop
repz
push
lods
lahf
xchg
(bad)
out
mov
dec
dec
sbb
jne
pop
scas
push
retf
jg
fcmovbe
xor
mov
and
aas
xor
mov
arpl
fisubr
inc
or
sbb
test
test
and
cs
pop
enter
(bad)
push
dec
pop
pop
daa
or
adc
push
inc
ss
jnp
fwait
nop
inc
mov
and
mov
call
xchg
pop
ret
(bad)
mov
pop
cmp
fsubr
adc
and
ds
pop
cmp
sbb
xor
and
aas
xor
xor
mov
xor
or
xor
jnp
pop
jmp
dec
sbb
loope
or
lock
push
sbb
xlat
(bad)
mov
retf
jmp
xor
mov
call
mov
arpl
(bad)
fisub
mov
or
ins
mov
add
shr
and
add
adc
cmp
cmovbe
push
xchg
fcmovne
mov
pop
test
xchg
xchg
xchg
xchg
push
xor
mov
not
in
mov
leave
leave
leave
call
xor
sbb
push
xor
inc
lock
dec
outs
sbb
fistp
wrmsr
inc
dec
xchg
xchg
xchg
xchg
push
push
pushf
leave
leave
enter
adc
fmul
leave
leave
leave
mov
leave
leave
leave
jp
pusha
push
leave
leave
leave
leave
dec
ss
or
in
in
adc
mov
in
mov
out
in
cmp
sbb
outs
push
adc
xchg
add
xchg
scas
imul
sahf
add
cmp
in
mov
(bad)
(bad)
dec
loopne
out
loope
or
scas
xchg
push
adc
push
sahf
outs
in
addr16
(bad)
(bad)
fisttp
sub
sbb
mov
div
dec
xor
jle
cdq
cmc
(bad)
(bad)
call
pop
push
jne
mov
dec
shr
dec
mov
mov
adc
fld
push
scas
lods
lods
mov
push
out
push
lock
out
iret
imul
jmp
cmp
cmp
inc
(bad)
popf
shr
data16
adc
imul
add
mov
inc
and
pop
sub
mov
gs
daa
xor
scas
bound
or
xor
xor
xchg
xor
add
xor
pop
icebp
cmp
push
inc
jle
dec
pop
add
sbb
add
or
xor
add
xor
in
idiv
rsqrtps
jo
xor
or
push
push
outs
fisttp
push
push
adc
lock
mov
(bad)
pop
out
pop
push
adc
xor
mov
loopne
ror
aas
gs
ror
cmp
add
xor
xor
add
rcr
mov
pop
push
push
push
jb
xor
sbb
fs
loopne
ins
push
or
jb
rcr
je
call
nop
add
sbb
mov
adc
and
mov
sahf
out
lahf
or
pop
push
xor
out
in
adc
adc
adc
adc
mov
add
popa
push
(bad)
lahf
jo
or
repnz
scas
push
cs
push
int3
outs
daa
clc
xor
loopne
rcr
sbb
sahf
adc
push
cwde
(bad)
or
rol
push
pusha
mov
sbb
repz
mov
push
or
sbb
shr
js
or
xchg
push
or
sub
or
add
add
(bad)
xor
pop
dec
lock
dec
jo
shl
sar
or
or
mov
out
adc
lock
loopne
ror
rol
pusha
push
push
ja
sbb
jae
add
add
aaa
les
cmp
adc
adc
adc
nop
mov
shl
and
add
scas
test
inc
jne
pop
adc
jns
leave
and
mov
or
and
inc
inc
dec
mov
add
jb
pmulhuw
in
mov
mov
add
nop
mov
and
fwait
xchg
mov
pop
pop
imul
shl
repz
mov
in
inc
adc
dec
fcom
inc
pushf
in
adc
dec
fcomp
fistp
(bad)
sar
push
ret
lock
mov
cmps
or
mov
out
test
and
sub
mov
div
jecxz
jbe
in
push
dec
repz
popf
es
es
sub
cmps
jge
call
js
test
sub
cs
jo
sahf
out
rol
rcr
mov
sti
es
push
mov
push
xor
push
cmp
repz
mov
mov
or
inc
adc
add
out
mov
mov
cs
dec
xor
jnp
int
pop
cs
xor
xor
call
in
lds
mov
xor
xor
in
push
call
addr16
repz
jo
les
stc
aaa
mov
jl
jne
aaa
sub
xor
cmps
stc
xor
pushf
sbb
add
enter
idiv
cmps
adc
mov
loope
addr16
cmp
cmp
fnstcw
cmp
das
in
cmp
int
cmp
jle
rol
das
call
push
test
add
addr16
jo
in
sti
data16
out
hlt
xchg
inc
pop
pushf
push
fld
sar
loopne
stos
inc
(bad)
push
fild
data16
movs
enter
push
inc
inc
pop
mov
xor
cmp
scas
dec
in
rcr
aaa
push
(bad)
dec
push
jae
cwde
mov
push
fdiv
dec
lock
pop
xor
push
dec
iret
repz
push
imul
push
in
fdiv
shl
mov
pop
les
and
pop
aaa
sti
out
jge
push
push
(bad)
jne
push
andps
sbb
sbb
sbb
aas
mov
mov
mov
push
ja
and
fidivr
jbe
jp
sahf
push
or
pop
and
dec
and
dec
or
xor
ja
jbe
push
push
enter
scas
jo
adc
inc
jo
adc
or
adc
arpl
call
out
iret
xor
add
bound
push
fwait
xlat
sahf
adc
ja
sbb
jo
xor
xor
pop
int
push
and
(bad)
fld
cdq
and
dec
push
xor
sti
loop
cmps
out
inc
add
xor
cmovne
dec
add
inc
or
xor
xchg
sbb
mov
sub
or
aaa
mov
imul
add
inc
xchg
ins
loop
(bad)
dec
fs
inc
outs
adc
lea
loop
xor
inc
sbb
dec
into
or
call
jae
pop
cmps
sbb
add
aas
aaa
scas
and
mov
push
mov
imul
and
jecxz
pop
sbb
pop
xchg
lahf
sub
inc
test
adc
and
push
dec
js
add
dec
enter
cmp
lods
in
inc
xchg
cmp
sbb
jnp
pop
adc
fcmovb
add
or
add
jno
add
lds
jns
and
ret
add
mov
enter
clc
add
sub
add
adc
sub
dec
gs
dec
adc
adc
mov
and
aaa
pop
push
rcr
das
(bad)
dec
ins
mov
outs
adc
ja
inc
dec
pop
test
mov
ja
repz
pop
ins
mov
xchg
fwait
es
jbe
push
adc
gs
and
jno
outs
mov
fcomp
outs
jno
or
bound
fcomp
mov
inc
jae
loope
retf
adc
xchg
and
push
gs
dec
ficomp
push
fild
jb
cs
pop
(bad)
xchg
or
add
mov
daa
push
jae
mov
jae
outs
shr
aas
inc
loope
ins
and
xchg
xchg
mov
neg
jnp
push
ins
imul
pop
pop
mov
test
pop
cmp
inc
dec
test
sbb
mov
adc
mov
cmp
dec
loopne
and
xor
popa
clc
ret
jns
jo
je
push
and
inc
adc
jno
rcl
jno
jnp
inc
inc
cmp
imul
inc
ret
and
std
push
lock
add
aaa
fidiv
rcl
adc
stc
sbb
call
out
clc
cmc
adc
lods
ins
cmc
and
popa
mov
dec
add
data16
pushf
push
add
inc
xchg
dec
js
movs
mov
jo
das
into
pop
cs
push
xchg
unpckhps
adc
adc
push
jae
xor
sub
or
rol
adc
daa
test
imul
push
pusha
or
xor
xchg
mov
pop
xor
add
push
popa
mov
or
or
add
bswap
adc
dec
xchg
push
and
and
enter
sub
or
and
(bad)
(bad)
(bad)
push
lahf
and
xchg
fstp
shr
jmp
mov
out
fwait
inc
jmp
add
fisubr
mov
jmp
es
cld
loope
inc
test
xchg
mov
(bad)
(bad)
dec
and
jo
into
popa
ins
(bad)
or
pop
dec
pop
test
push
dec
cmp
jmp
pop
xlat
dec
mov
arpl
jl
dec
cdq
cmps
jns
sahf
adc
jns
(bad)
xor
test
es
cmp
sub
fmul
lods
mov
inc
inc
in
inc
and
sub
cmp
(bad)
call
inc
shl
fsubr
inc
aas
and
cmc
pop
lds
cmps
addr16
jnp
adc
or
jno
cmp
stos
cmp
pop
fstp
(bad)
(bad)
mov
cwde
ss
push
shl
rcl
cs
sbb
pop
xchg
xor
das
clc
sub
fistp
mov
inc
add
sub
or
cmps
sub
ret
loopne
cmps
lock
or
xor
mov
sub
and
and
mov
inc
sub
xor
and
xor
sbb
sbb
inc
inc
rol
(bad)
dec
aam
in
dec
xor
inc
dec
or
adc
add
(bad)
inc
scas
into
retf
jp
xor
inc
jmp
dec
push
(bad)
clc
(bad)
(bad)
call
loope
sahf
mov
ins
push
dec
push
mov
sbb
call
add
(bad)
inc
scas
fistp
pop
dec
mov
mov
lds
push
cli
add
pusha
jecxz
push
lahf
add
pop
retf
xchg
dec
movs
inc
mov
push
inc
dec
outs
shl
xlat
cmp
in
ficomp
repz
adc
or
mov
(bad)
(bad)
jmp
movs
pop
mov
xchg
sbb
add
jle
fldcw
push
call
(bad)
jmp
fsub
cmp
sub
mov
and
in
jp
dec
fstp
inc
sbb
jmp
dec
and
ins
nop
jno
lods
dec
fist
jmp
movs
sbb
sar
jb
in
dec
popa
ds
into
pop
or
jne
and
adc
(bad)
jmp
(bad)
or
dec
mov
(bad)
movs
into
xchg
jb
add
sub
clc
add
jge
mov
xor
and
ds
outs
scas
jne
sub
or
xor
sbb
out
xor
xor
sbb
mov
xchg
nop
seto
loope
setle
xor
and
lds
adc
lods
inc
or
add
sub
and
push
addr16
cmp
ss
adc
adc
out
add
inc
sub
add
jnp
lods
jb
mov
(bad)
sbb
(bad)
(bad)
(bad)
call
lea
jge
xor
mov
fcomp
sub
in
pop
shl
enter
sub
(bad)
(bad)
call
retf
int3
mov
scas
or
ins
jae
lods
inc
inc
arpl
push
fadd
(bad)
and
(bad)
jmp
nop
mov
cmc
sbb
xor
mov
rol
or
dec
popa
int3
adc
std
(bad)
mov
cmp
cdq
mov
or
sbb
sub
popf
and
imul
adc
daa
imul
mov
loop
and
adc
(bad)
jg
clc
mov
and
daa
mov
(bad)
imul
xor
jecxz
movs
es
sub
(bad)
(bad)
(bad)
call
jg
popa
adc
jae
mov
movs
sbb
add
nop
inc
gs
sub
add
pop
xchg
movs
fs
imul
push
(bad)
add
aad
mov
dec
test
push
cmc
sub
pop
cwde
xlat
xor
add
stos
mov
sbb
add
sub
arpl
inc
add
aad
mov
cmps
pop
outs
sub
dec
loope
add
push
arpl
inc
rol
call
push
sub
sbb
jl
pusha
pop
mov
mov
jb
shl
out
xor
cdq
or
stc
dec
xor
pop
adc
inc
adc
add
je
std
stos
add
cmp
jg
adc
neg
fstp
inc
adc
inc
mov
out
sub
(bad)
jmp
mov
aas
pop
cmp
cli
adc
loopne
popa
js
mov
xor
scas
jmp
jge
mov
(bad)
(bad)
clc
adc
idiv
mov
dec
fsubr
pop
pop
aas
jbe
outs
dec
add
test
(bad)
mov
xor
mov
xor
nop
movs
pop
mov
(bad)
(bad)
(bad)
dec
jge
clc
jns
ins
push
jae
ja
shl
enter
add
loopne
ds
add
(bad)
(bad)
(bad)
js
and
mov
and
es
sbb
jo
push
movs
xchg
rsm
jo
in
lea
xchg
or
shl
xor
and
and
xor
mov
push
add
fdiv
push
or
(bad)
(bad)
(bad)
dec
js
mov
lahf
and
mov
movs
jb
(bad)
(bad)
push
push
(bad)
cwde
cmps
ror
mov
inc
jp
sbb
lds
retf
sti
xchg
mov
in
cmps
idiv
pop
mov
sbb
xor
xor
adc
jge
call
cmp
aam
(bad)
movs
iret
popf
mov
inc
or
or
outs
push
pop
aaa
cld
(bad)
push
add
ja
int3
adc
jmp
or
xchg
mov
add
push
ror
xchg
xchg
lea
bound
pop
fst
lea
inc
adc
mov
cmp
jmp
pop
lahf
pop
mov
dec
or
push
inc
test
clc
sbb
mov
or
(bad)
(bad)
jnp
mov
mov
cld
push
pop
or
jmp
fisubr
enter
(bad)
(bad)
(bad)
dec
(bad)
xchg
dec
dec
retf
sbb
aad
xchg
int3
jl
jb
(bad)
jmp
std
(bad)
(bad)
(bad)
dec
xchg
pop
xchg
fiadd
jge
or
mov
push
retf
fimul
movs
ja
jnp
push
inc
(bad)
(bad)
(bad)
call
outs
sub
cmp
push
or
jmp
daa
test
(bad)
popa
std
jle
jl
sbb
rol
ss
xchg
adc
adc
mov
int3
jno
call
mov
inc
add
cld
inc
sub
out
inc
test
(bad)
(bad)
inc
and
pop
mov
imul
dec
pushf
add
xchg
mov
xlat
std
pop
in
inc
jne
(bad)
(bad)
jg
hlt
in
fsub
data16
(bad)
test
repz
(bad)
jg
loope
pop
mov
sbb
cmp
jmp
imul
(bad)
jne
data16
je
push
mov
(bad)
(bad)
(bad)
call
mov
adc
shr
daa
jp
mov
and
cli
lock
xor
ds
mov
inc
inc
iret
into
daa
inc
ror
push
mov
mov
in
loope
call
loopne
(bad)
(bad)
jmp
lods
pop
movs
jno
mov
sbb
in
in
(bad)
call
push
xchg
and
bound
push
xor
add
(bad)
(bad)
mov
pop
lds
call
jmp
sbb
in
xor
cmp
stos
cmc
xor
push
mov
mov
sub
(bad)
(bad)
call
cs
xchg
inc
cdq
pop
pop
and
dec
mov
movs
cmp
mov
pop
cmp
mov
(bad)
(bad)
(bad)
(bad)
cmp
aas
rcl
dec
fist
mov
dec
or
mov
cld
(bad)
jmp
adc
rcr
cmp
jno
cli
(bad)
jg
jb
sbb
or
pop
mov
push
dec
mov
mov
nop
adc
fmul
scas
test
(bad)
jmp
stos
hlt
test
cmp
push
cmp
mov
loope
dec
jle
popa
add
xor
pushf
xor
push
dec
lea
and
enter
rcr
bound
push
sbb
push
std
push
push
or
les
pop
aad
test
call
packsswb
cld
pop
fcom
popa
call
stc
push
xchg
cli
sub
push
scas
popf
stos
push
(bad)
stos
stos
(bad)
in
enter
mov
ret
sti
xor
mul
add
dec
xor
imul
or
mov
adc
mov
call
call
loop
repz
dec
fcom
cmp
clc
or
rcr
xchg
jae
dec
cmp
and
scas
inc
jae
push
push
aaa
fnstsw
pop
xchg
das
push
inc
mov
mov
xchg
cmps
adc
mov
(bad)
call
iret
test
imul
in
(bad)
clc
ja
stos
inc
jecxz
add
(bad)
je
mov
jmp
mov
lahf
hlt
sti
mov
(bad)
(bad)
(bad)
mov
lds
test
out
push
in
and
adc
shr
dec
push
ficom
pusha
and
pop
(bad)
(bad)
(bad)
call
stos
jae
cmc
add
sub
(bad)
iret
push
(bad)
call
add
dec
jnp
inc
rcr
dec
sub
popa
push
jmp
mov
fwait
xchg
daa
mov
jmp
dec
pop
int
mov
out
pop
shl
fild
or
shr
jmp
sbb
lds
add
inc
push
xchg
mov
(bad)
jmp
loop
sub
xchg
stos
jmp
fidivr
jns
repnz
jg
call
adc
test
(bad)
es
jae
sahf
xchg
fdiv
or
(bad)
mov
pop
add
cwde
imul
in
rcl
push
push
jbe
mov
call
xor
std
not
add
or
add
dec
jmp
jmp
clc
clc
inc
pushf
cli
xchg
and
popa
out
imul
in
(bad)
std
push
std
getsec
pop
fs
addr16
push
sbb
jmp
xor
cdq
or
(bad)
call
sti
aaa
test
fucomp
jg
(bad)
(bad)
call
adc
fistp
cmc
in
cmps
in
push
jmp
mov
in
mov
pop
pop
cmp
clc
jmp
aas
mov
mov
(bad)
fptan
pop
pop
in
ss
pusha
in
ja
(bad)
dec
ss
mov
adc
pop
jae
pop
xor
(bad)
fnstcw
pop
es
loop
(bad)
(bad)
js
gs
sub
arpl
cli
cs
fnstsw
(bad)
lahf
dec
fistp
dec
push
push
xchg
xchg
push
jnp
mov
inc
push
imul
fsubrp
cld
pop
(bad)
(bad)
(bad)
jmp
mov
iret
hlt
dec
jecxz
(bad)
(bad)
xor
ret
and
fdivr
mov
jl
ins
sar
mov
mov
cmp
jecxz
cmp
outs
in
(bad)
aad
jg
jmp
std
idiv
cmp
jmp
ja
cli
movs
imul
je
pop
cmp
or
outs
arpl
aad
call
data16
enter
pop
push
inc
in
mov
ins
int
hlt
cmp
jge
mov
call
add
loope
cli
dec
cld
pop
hlt
dec
xchg
xor
(bad)
(bad)
aas
arpl
pop
inc
jl
mov
mov
int3
outs
outs
leave
xor
sbb
cmc
(bad)
(bad)
(bad)
fadd
dec
jns
out
arpl
mov
movs
add
xchg
sti
sub
lods
dec
sub
mov
in
mov
(bad)
dec
dec
sahf
jmp
ss
mov
test
aam
add
outs
ret
aaa
push
fcomi
(bad)
(bad)
(bad)
push
cmp
or
dec
cmp
jmp
out
bound
push
push
sbb
mov
shl
pop
cdq
mov
out
jecxz
iret
cvtpi2ps
cmp
add
(bad)
call
stc
mov
sti
fld
cmp
mov
sbb
bound
repnz
and
and
add
fmul
je
(bad)
ds
pop
mov
(bad)
push
mov
jge
push
sub
pop
call
push
(bad)
outs
jb
xchg
cld
ss
xor
out
sti
push
out
clc
(bad)
mov
cwde
cmp
cmps
aam
out
xchg
stos
ins
cmp
mov
jno
leave
inc
enter
out
cmc
sub
hlt
and
(bad)
(bad)
(bad)
(bad)
dec
fisttp
mov
ss
jl
(bad)
loopne
call
in
stc
pop
aam
test
int
cmp
sar
jmp
inc
outs
in
mov
movs
mov
out
xor
rcr
jmp
div
stc
sub
pop
xchg
daa
cli
mov
out
stos
(bad)
ja
into
iret
sub
stos
jp
(bad)
rcr
(bad)
(bad)
jmp
xchg
bnd
sbb
lds
add
push
into
outs
gs
out
mov
in
cld
mov
(bad)
std
sti
mov
fnstcw
test
aad
mov
sti
jae
lea
jge
mov
(bad)
(bad)
dec
inc
aam
mov
xrelease
aas
mov
mov
jp
or
dec
xchg
cmc
jmp
inc
xchg
mov
mov
outs
pusha
into
dec
(bad)
push
jl
out
clc
mov
scas
push
(bad)
adc
popf
or
pop
(bad)
(bad)
(bad)
push
mov
popf
jecxz
or
sbb
aad
xchg
data16
or
movs
dec
cli
xchg
push
jp
jmp
arpl
push
cmps
mov
cld
test
sub
sbb
das
add
xchg
jmp
in
fmul
dec
scas
stos
push
scas
jmp
xchg
push
push
mov
lods
sbb
outs
fstp
das
pop
gs
pushf
cli
sahf
adc
mov
push
pop
stos
jmp
out
jmp
cmp
ss
pop
sub
mov
jmp
out
add
(bad)
mov
popa
(bad)
(bad)
(bad)
dec
loop
jp
int3
addr16
jns
js
in
xchg
lea
ja
xchg
out
jg
call
ja
xchg
fbld
stc
cmc
pop
mov
(bad)
(bad)
stc
repz
(bad)
lahf
(bad)
jae
cld
les
cs
jg
sbb
sahf
cmp
xchg
pop
jbe
mov
(bad)
(bad)
(bad)
push
ror
popw
xchg
retf
out
and
in
push
sbb
xchg
stos
pop
lea
(bad)
(bad)
(bad)
jmp
into
int3
cmp
push
inc
add
enter
retf
scas
and
dec
sar
mov
pop
sub
call
arpl
xor
xor
mov
(bad)
pop
lods
lods
(bad)
ss
xchg
into
rcl
(bad)
jno
fcmovnb
push
(bad)
(bad)
(bad)
dec
imul
mov
jp
jmp
jnp
call
cdq
js
shl
(bad)
(bad)
jmp
and
test
jae
push
jge
fidivr
repnz
int3
adc
(bad)
mov
xchg
retf
in
ins
xchg
dec
call
xor
sub
lea
fdiv
(bad)
(bad)
jg
mov
dec
fst
sub
shl
stc
dec
sbb
stos
cs
ret
cmp
fs
sub
enter
cli
mov
(bad)
dec
div
cmps
push
cmp
xor
and
cmp
cli
or
ins
int3
jae
aam
retf
cli
push
retf
in
cmp
jno
lock
outs
(bad)
(bad)
(bad)
(bad)
cmp
sub
push
es
sbb
cmp
dec
in
imul
call
(bad)
push
aad
pop
jae
cwde
xor
and
test
mov
jbe
mov
sub
adc
cmc
ins
xor
jnp
inc
arpl
push
stos
inc
iret
dec
jmp
cmp
inc
pop
test
call
mov
or
mov
or
push
enter
(bad)
shr
cli
cmp
(bad)
jmp
sbb
out
lods
loop
(bad)
fs
(bad)
fdivr
(bad)
jmp
(bad)
fisttp
(bad)
mov
xchg
xchg
movs
(bad)
icebp
js
jo
(bad)
(bad)
inc
repnz
sbb
pop
int3
or
xchg
inc
hlt
retf
mov
sbb
(bad)
(bad)
(bad)
cmp
(bad)
cdq
jmp
jno
pop
pop
test
jae
adc
gs
sbb
outs
mov
loopne
jmp
ins
std
(bad)
inc
lods
int
(bad)
ds
repnz
mov
jp
cmps
retf
test
lods
jg
push
jmp
ins
xchg
ss
mov
outs
xchg
cli
jecxz
loopne
push
popa
cmp
out
lds
repz
(bad)
dec
stc
mov
jp
jns
int3
lods
push
mov
in
(bad)
fs
(bad)
(bad)
(bad)
(bad)
out
mov
dec
mov
cmc
mov
sbb
cld
pop
xchg
dec
les
xchg
call
call
test
outs
int3
jb
push
sbb
movs
mov
pop
fwait
mov
(bad)
dec
ins
jecxz
jns
mov
lahf
out
mov
mov
(bad)
leave
aad
(bad)
(bad)
jmp
repz
cmp
sub
dec
cmc
std
cmc
cld
into
ficom
mov
scas
fistp
(bad)
mov
pop
arpl
into
jmp
pushf
pop
leave
or
iret
(bad)
push
sub
arpl
call
leave
add
ds
adc
fs
(bad)
(bad)
jg
cmp
mov
xchg
mov
mov
outs
mov
(bad)
(bad)
out
clc
sbb
xor
scas
sub
shl
jmp
ror
jno
jg
jnp
xchg
jecxz
in
ds
(bad)
jmp
xor
mov
push
enter
mov
movs
push
sub
mov
bound
jmp
gs
(bad)
push
(bad)
sub
iret
mov
add
xchg
frstor
jmp
jp
sti
call
arpl
pop
mov
push
pop
mov
imul
(bad)
(bad)
(bad)
jmp
repnz
fsubr
scas
adc
mul
retf
icebp
out
pop
in
in
mov
jecxz
jmp
pushf
aaa
inc
pop
and
mov
retf
fcomp
mov
and
(bad)
dec
mov
lods
hlt
ds
aam
sub
out
jb
out
loopne
nop
sub
(bad)
(bad)
dec
mov
lods
out
pop
jae
cmp
jns
arpl
mov
pop
jb
push
ds
push
xchg
push
(bad)
repnz
cmp
cmc
or
loopne
sahf
int
mov
jge
pushf
or
(bad)
(bad)
(bad)
dec
jns
xor
xchg
movs
inc
into
arpl
xchg
jno
repz
pusha
sbb
fiadd
and
outs
js
js
xchg
test
cwde
sub
loop
jl
xor
mov
popf
sti
nop
sub
cmp
stos
jmp
popf
lods
sahf
int
cmc
push
sub
mov
xlat
popa
xchg
in
daa
movs
dec
push
mov
jl
xchg
scas
xchg
(bad)
call
lods
dec
repnz
lahf
cmp
pop
in
cdq
(bad)
ja
cli
fistp
mov
jle
or
jmp
das
or
leave
clc
dec
hlt
(bad)
(bad)
pop
dec
pop
call
ficomp
cmp
push
jne
call
sar
mov
loop
jecxz
cdq
aas
xchg
fcomp
mov
out
lahf
pop
mov
add
jo
pop
lods
pop
pop
mov
jg
call
sub
xchg
fst
mov
inc
(bad)
int3
mov
pop
jge
cmp
inc
in
jle
out
pop
xor
repnz
repz
out
data16
and
enter
(bad)
jmp
das
xchg
jmp
and
add
into
fcmovu
cli
cwde
aad
or
mov
push
retf
adc
jo
mov
(bad)
call
jp
(bad)
repz
cdq
scas
in
dec
out
std
ds
(bad)
pop
loop
adc
ins
xchg
and
xor
jmp
push
aaa
inc
repnz
pop
xchg
stc
pop
js
js
pop
xor
ja
mov
cmc
and
pop
mov
pop
aaa
jns
icebp
adc
cmp
jle
(bad)
(bad)
(bad)
(bad)
fnsave
repz
cli
inc
sti
cmp
lahf
out
push
stos
retf
mov
gs
repz
xchg
mov
mov
mov
xchg
aad
mov
add
lods
xchg
std
push
jns
push
cmp
(bad)
(bad)
push
fidiv
mov
iret
clc
ret
xor
fist
ins
out
loop
and
(bad)
(bad)
call
cmp
pop
dec
cmp
pop
pop
mov
(bad)
fimul
fidiv
test
dec
or
icebp
jle
mov
outs
movs
push
jge
sbb
and
pop
pop
jecxz
lahf
cmc
pop
(bad)
call
and
sbb
(bad)
idiv
push
leave
(bad)
retf
lods
or
mov
loopne
leave
fstp
iret
push
adc
call
push
cmps
clc
add
or
(bad)
(bad)
push
inc
jmp
push
hlt
retf
dec
mov
jnp
xor
(bad)
lods
mov
ror
pop
loopne
sub
(bad)
jle
ins
dec
loop
sti
dec
adc
dec
adc
fidiv
loopne
sbb
jmp
push
and
jmp
cli
call
inc
(bad)
(bad)
shr
and
jo
(bad)
call
fcomp
out
cli
inc
enter
call
inc
in
out
jns
or
sti
inc
(bad)
sbb
sbb
jmp
add
xchg
ret
call
rcr
retf
idiv
or
add
aaa
std
(bad)
jg
mov
(bad)
mov
rol
(bad)
(bad)
(bad)
inc
mov
jle
stc
psrlw
mov
cli
inc
mov
int
stc
xor
(bad)
jmp
xor
lds
mov
dec
inc
cmp
jg
(bad)
(bad)
(bad)
repnz
outs
mov
xchg
into
sbb
dec
iret
(bad)
pushfw
ret
call
mov
cmp
fldenv
addr16
(bad)
fbld
(bad)
jl
jae
out
cmps
jbe
data16
xchg
cli
ja
pop
cmp
jle
mov
adc
fild
pop
jmp
fmul
aad
fidivr
mov
ror
xor
dec
(bad)
(bad)
jmp
xchg
inc
std
and
ret
rol
cdq
add
out
fsub
test
jmp
sahf
jns
(bad)
(bad)
(bad)
jmp
jge
mov
scas
mov
push
jl
xor
sbb
hlt
add
jecxz
(bad)
mov
(bad)
(bad)
call
dec
push
cmp
je
xchg
inc
lock
pop
jge
and
(bad)
call
jb
fmul
js
cld
cli
out
push
dec
cmp
hlt
mov
(bad)
(bad)
inc
pop
and
imul
(bad)
mov
pop
cmp
jmp
cmps
mov
or
in
or
movs
mov
mov
cmps
mov
add
(bad)
mov
repnz
rcr
sbb
clc
lahf
mov
fwait
jmp
inc
pop
adc
(bad)
fcomip
call
ret
push
pop
xor
fdivr
cs
adc
sar
call
push
jp
cdq
dec
mov
stc
ins
jmp
jmp
xchg
pop
out
xor
movs
pop
mov
(bad)
(bad)
cld
outs
jnp
lods
mov
mov
jge
into
ret
and
shl
test
mov
std
lods
out
xor
std
dec
leave
adc
sahf
mov
mov
sub
cmp
(bad)
jmp
pusha
adc
addr16
mov
push
jp
mov
(bad)
(bad)
dec
(bad)
push
repnz
mov
fstp
imul
mov
loopne
(bad)
enter
pop
rcl
(bad)
call
rcl
cmp
lds
in
repnz
ins
loopne
inc
cs
pop
cld
sahf
(bad)
(bad)
(bad)
dec
gs
stos
sahf
fwait
or
mov
inc
std
push
(bad)
mov
pushf
hlt
pop
imul
cli
lahf
js
(bad)
jmp
xchg
push
test
sbb
(bad)
iret
mov
mov
(bad)
jmp
cmps
jae
ficom
loopne
xor
int3
bnd
jmp
cld
jbe
std
(bad)
jmp
xor
out
iret
xor
jp
push
(bad)
in
dec
ror
adc
outs
pop
sbb
ds
repnz
jae
nop
jle
call
lock
je
mov
ins
(bad)
(bad)
mov
not
jecxz
mov
imul
(bad)
jmp
xchg
outs
(bad)
mov
(bad)
jmp
cmp
jns
dec
int
ja
inc
(bad)
(bad)
mov
out
ja
and
add
and
pop
adc
cli
(bad)
cld
dec
fsubp
sub
out
fnstenv
cdq
out
lock
jne
daa
cli
adc
lahf
push
sahf
ja
test
pusha
imul
or
test
mov
mov
outs
gs
call
(bad)
hlt
dec
(bad)
call
das
and
and
(bad)
(bad)
push
add
jmp
pop
das
outs
jae
pop
enter
push
in
gs
dec
jg
cmp
mov
jne
cmc
(bad)
dec
daa
in
frstor
bound
push
sub
(bad)
(bad)
inc
lock
mov
and
jb
and
dec
loope
sub
pop
sub
call
call
jno
or
sbb
jnp
out
test
push
jno
add
stos
sti
mov
sbb
dec
pop
push
dec
mov
call
xor
movs
jmp
retf
add
sbb
jbe
hlt
stos
sub
fild
out
xchg
cmp
in
and
xchg
scas
aaa
xchg
xchg
(bad)
out
cli
jne
into
dec
inc
cmp
pop
or
jae
push
retf
les
mov
ss
por
shr
cmp
(bad)
(bad)
jmp
sbb
cmp
(bad)
mov
mov
sbb
ins
call
jnp
cmp
push
xchg
(bad)
xchg
mov
clc
(bad)
dec
cmps
scas
mul
xlat
mov
pushf
sub
pop
push
jp
jnp
adc
mov
movs
ds
sbb
das
dec
cld
sbb
dec
in
outs
push
in
popf
push
fistp
jle
rol
jns
(bad)
(bad)
dec
jb
out
ins
outs
loope
cld
into
dec
sbb
iret
into
xor
(bad)
out
clc
cwde
repnz
dec
mov
mov
(bad)
jno
ins
fisub
outs
stos
mov
sub
fsub
stos
sub
mov
imul
or
dec
pushf
sub
(bad)
(bad)
(bad)
clc
mov
popf
stos
push
mov
push
gs
cli
fsubrp
pop
and
push
in
cld
inc
mov
xchg
aad
jmp
inc
das
das
mov
sbb
jmp
in
and
das
das
or
jecxz
(bad)
jle
jae
aam
cmp
hlt
ret
push
jmp
mov
jbe
(bad)
(bad)
jmp
or
dec
and
cmp
in
push
sbb
jle
jg
push
mov
pop
cmps
xchg
scas
test
popf
pop
and
(bad)
(bad)
(bad)
push
mov
test
sbb
sbb
adc
push
iret
lods
dec
sahf
push
loopne
(bad)
(bad)
(bad)
pop
jp
mov
jge
dec
jns
xor
fxch
sbb
xchg
jp
call
(bad)
add
sti
mov
fiadd
cwde
iret
cmp
out
inc
fist
push
inc
push
mov
leave
(bad)
(bad)
jmp
xor
jno
mov
mov
repz
(bad)
mov
test
sbb
(bad)
out
mov
add
repnz
js
adc
scas
dec
sbb
ds
xor
mov
sbb
call
xor
cli
inc
imul
mov
mov
add
push
shl
aas
mov
adc
xor
pusha
lahf
cmp
(bad)
call
adc
jecxz
je
push
cmp
loopne
movs
cmp
fnsave
(bad)
(bad)
je
dec
jns
lock
mov
(bad)
cmp
mov
out
(bad)
xchg
aaa
enter
adc
mov
cmp
pop
cmp
xchg
out
mov
mov
fs
and
inc
mov
(bad)
(bad)
(bad)
jmp
pop
mov
mov
outs
mov
mov
in
fsub
mov
cmp
mov
cmp
call
imul
(bad)
jl
(bad)
stc
adc
adc
(bad)
(bad)
jg
inc
mov
loope
mov
jle
mov
xor
xchg
inc
std
push
mov
add
jmp
add
jg
sbb
dec
in
scas
fiadd
push
add
push
pop
aam
mov
vmptrst
pop
push
xor
(bad)
cmc
(bad)
call
mov
adc
enter
mov
shl
push
std
jg
pop
sbb
aas
pop
or
push
and
mov
sbb
std
or
callw
in
(bad)
call
sbb
arpl
xlat
jl
sti
outs
lds
call
mov
cmps
popa
mov
xor
(bad)
call
mov
and
popf
sbb
pop
shl
fnstcw
(bad)
(bad)
(bad)
inc
pop
cmp
sti
neg
inc
push
(bad)
mov
xchg
cmc
std
cmp
inc
cmps
lods
loop
(bad)
(bad)
mov
cwde
popa
pushf
mov
cmps
cld
sbb
mov
and
adc
mov
ret
das
lock
shl
repz
in
(bad)
(bad)
(bad)
mov
idiv
das
mov
or
call
rcr
mov
mov
inc
dec
lea
push
xchg
mov
inc
in
inc
ret
dec
(bad)
mov
mov
cld
adc
push
int3
add
sahf
cmp
xchg
sub
inc
fmul
in
mov
cmp
pop
retf
mov
das
clc
jecxz
loop
bound
push
bound
jnp
mov
dec
out
xchg
iret
jp
jecxz
je
cmp
inc
push
mov
inc
(bad)
mov
xor
cmp
cmp
pop
inc
xor
sbb
mov
mov
arpl
adc
(bad)
(bad)
jmp
icebp
add
jg
mov
iret
xor
add
hlt
loope
inc
xchg
aas
push
(bad)
(bad)
(bad)
push
fnsave
inc
out
sbb
ja
push
cs
xor
lea
aaa
neg
nop
jle
pop
mov
xor
addr16
mov
mov
jmp
icebp
das
sbb
je
inc
scas
(bad)
call
pop
out
ins
ins
and
sbb
sbb
mov
push
(bad)
(bad)
(bad)
call
push
jle
aad
push
mov
ins
xor
in
sbb
mov
(bad)
sbb
fmul
(bad)
call
and
and
pop
imul
(bad)
jmp
pop
sub
cmp
xchg
dec
popf
out
pop
sti
inc
movs
clc
(bad)
loopne
cli
jl
(bad)
stc
gs
(bad)
(bad)
mov
adc
in
xchg
sub
cmp
fdivrp
jnp
xor
out
add
(bad)
(bad)
jmp
push
mov
xchg
mov
xchg
xor
je
repnz
in
cmps
jmp
das
repz
jno
jae
push
cld
pop
loopne
jecxz
jmp
(bad)
(bad)
mov
shr
repnz
lahf
ins
mov
mov
idiv
mov
jnp
loopne
push
or
mov
adc
inc
add
(bad)
cmp
jno
(bad)
adc
fist
dec
add
xchg
jae
jle
inc
mov
xlat
cmp
call
(bad)
out
cmp
stos
scas
jg
mov
xchg
in
pop
jbe
out
cs
(bad)
dec
clc
into
sbb
clc
push
(bad)
ret
cmp
(bad)
jg
(bad)
shl
adc
push
jecxz
cmp
add
or
mov
in
das
jbe
push
add
(bad)
fcomip
inc
lock
mov
outs
or
(bad)
div
mov
aaa
adc
mov
stos
inc
pushf
push
mov
push
fmul
jmp
push
mov
scas
cmp
std
cmp
in
fadd
cmp
mov
xchg
inc
es
cli
(bad)
out
jb
xlat
pop
inc
jnp
bound
fild
call
or
pop
sbb
(bad)
(bad)
(bad)
(bad)
call
adc
std
loop
data16
sbb
sbb
retf
je
jns
sub
dec
retf
push
xchg
sar
out
inc
out
in
mov
push
aam
pop
les
fild
(bad)
(bad)
inc
mov
inc
mov
cmps
inc
mov
jbe
js
xchg
mov
mov
(bad)
call
daa
xchg
mov
pop
rcr
mov
ss
jecxz
jmp
sbb
dec
popa
daa
or
mov
fs
push
pop
mov
xlat
aaa
fdivr
dec
cld
jecxz
mov
leave
jge
adc
std
jg
(bad)
push
gs
lock
mov
gs
mov
dec
test
loope
adc
(bad)
call
iret
dec
adc
mov
out
stos
out
stos
sbb
dec
cmp
outs
inc
call
pushf
sub
imul
push
sub
xchg
ins
cld
jl
fnstcw
push
shl
xor
std
(bad)
(bad)
inc
jecxz
je
mov
ds
je
xchg
enter
loop
mov
rcr
dec
pop
ss
clc
or
daa
push
iret
xchg
sbb
mov
repnz
add
leave
or
mov
xchg
les
aas
(bad)
rcr
add
jmp
es
mov
fcomip
jmp
ja
leave
inc
pop
xchg
push
shl
dec
ret
push
jmp
icebp
add
fmul
pop
mov
jmp
pushf
cs
sbb
cmps
add
fld
adc
loopne
ja
std
inc
mov
aad
ficom
mov
movs
stc
xchg
pop
movs
shl
popf
pop
mov
jae
pop
cmp
call
dec
test
out
adc
imul
lock
(bad)
push
mov
stos
dec
sub
rol
les
mov
pop
adc
mov
add
sub
mov
mov
ret
jne
pop
push
jg
daa
xchg
psubw
(bad)
call
das
icebp
xor
enter
mov
in
pop
xor
cmp
ss
dec
es
(bad)
(bad)
call
sbb
jp
lahf
and
out
lods
dec
cmps
cli
mov
aaa
cmp
jecxz
jmp
push
rcr
(bad)
call
jno
cld
imul
ins
js
jecxz
jle
std
sub
fldz
call
(bad)
sahf
lahf
lods
xor
lods
push
jbe
daa
out
and
loopne
mov
call
addr16
pop
aas
sahf
inc
stc
push
sbb
(bad)
(bad)
mov
das
cmp
scas
fisub
mov
pop
pop
jns
test
(bad)
(bad)
dec
(bad)
pop
xchg
js
gs
sub
inc
cmp
xlat
lock
xlat
fcmovbe
out
push
enter
push
sahf
les
pop
jbe
idiv
fld
mov
mov
(bad)
scas
(bad)
push
adc
jge
retf
js
pop
dec
inc
sti
out
sbb
lahf
test
call
pop
dec
pop
call
lahf
aad
mov
jl
in
inc
and
jg
pop
xor
(bad)
je
xchg
mov
(bad)
(bad)
mov
cmc
xor
(bad)
xlat
mov
(bad)
sub
mov
jecxz
repz
(bad)
(bad)
(bad)
jmp
xor
cdq
and
jge
in
ja
movhps
test
jmp
pop
inc
std
dec
into
mov
(bad)
(bad)
(bad)
jns
repz
fcomp
shr
sbb
xor
dec
loopne
neg
cli
push
jmp
inc
scas
add
or
pop
lods
addr16
mov
fadd
mov
(bad)
(bad)
call
mov
test
xchg
adc
(bad)
jle
test
and
cld
mov
or
mov
cwde
(bad)
push
cmp
mov
out
xchg
fcmovnb
inc
jnp
mov
(bad)
(bad)
(bad)
cmp
inc
sbb
popa
cmp
add
mov
pushf
mov
clc
push
cmp
(bad)
call
in
mov
nop
mov
sbb
mov
mov
scas
xchg
add
jg
sub
add
(bad)
mov
in
xor
xchg
xchg
les
in
pop
ins
pop
fild
jne
hlt
mov
not
(bad)
call
xor
dec
jo
shl
adc
sbb
mov
out
mov
push
mov
pop
xor
retf
mul
mov
fsubp
or
out
xlat
in
das
adc
or
rcl
(bad)
(bad)
(bad)
dec
xlat
scas
xor
fstp
les
imul
pop
inc
(bad)
(bad)
cmc
rcl
(bad)
call
dec
add
js
shr
push
ds
cmp
repz
cmps
pop
aaa
std
push
sahf
(bad)
lock
mov
pop
pop
fistp
in
(bad)
push
jmp
rcr
mov
xor
jmp
test
shr
mov
or
std
mov
jo
clc
clc
js
(bad)
in
scas
js
jae
mov
jg
push
in
mov
push
ds
jmp
clc
inc
aaa
ins
sbb
cmc
push
(bad)
pop
xchg
dec
lahf
in
inc
push
loope
(bad)
jmp
inc
mov
js
daa
cmp
iret
push
(bad)
shr
addr16
(bad)
(bad)
push
cmps
jbe
xchg
mov
test
adc
add
mov
in
fs
dec
sar
in
sub
rcl
push
cmp
cmp
in
inc
test
mov
test
jmp
(bad)
call
dec
cmp
pop
out
iret
dec
jl
fisttp
lock
fcom
mov
fwait
dec
test
jbe
mov
std
imul
sub
icebp
sub
push
out
and
inc
mov
in
(bad)
std
sbb
or
dec
in
(bad)
nop
aas
pop
je
clc
(bad)
fbstp
(bad)
cmp
dec
dec
mov
sahf
inc
inc
cmc
mov
dec
fnstsw
mov
sbb
lahf
int3
xchg
cmc
lods
inc
sub
sbb
cmp
sbb
jl
or
inc
push
pop
mov
sub
imul
xor
mov
mov
cmps
fs
inc
or
retf
pop
pop
loop
es
cmp
lahf
sbb
push
jns
clc
jmp
test
push
das
add
repnz
pop
sar
push
cmps
(bad)
(bad)
(bad)
push
pop
popf
ja
push
pshufw
imul
or
push
(bad)
jno
shr
push
push
ds
sub
(bad)
jno
sub
jle
leave
pop
pushf
out
idiv
(bad)
push
pop
(bad)
ds
xchg
ret
into
test
pop
mov
ror
push
int
(bad)
jg
call
xor
ss
xlat
jbe
rcl
push
call
push
lock
mov
(bad)
(bad)
(bad)
fstp
lock
sar
mov
out
ret
jg
push
inc
push
(bad)
stos
(bad)
(bad)
(bad)
(bad)
jg
jge
xchg
std
adc
jl
clc
shl
ret
and
pop
rol
jle
sar
(bad)
dec
push
or
jb
(bad)
ss
jl
out
sub
out
sbb
out
idiv
pop
rol
in
add
jl
mov
mov
loop
out
mov
inc
pop
mov
mov
addr16
pmuludq
pop
(bad)
(bad)
(bad)
(bad)
jle
(bad)
cmp
pop
inc
cmp
not
xor
fs
loop
call
pop
cmc
(bad)
dec
gs
cmp
jle
mov
push
jmp
imul
adc
push
shr
(bad)
dec
adc
push
mov
xchg
clc
repnz
rcr
imul
adc
dec
(bad)
sub
int
sbb
push
ja
push
cmp
imul
je
xor
cmc
ja
push
jns
js
xchg
mov
sahf
or
sub
lock
jmp
jp
loop
mov
mov
xor
fild
aad
(bad)
call
test
adc
mov
jle
ds
inc
jg
(bad)
(bad)
(bad)
jg
mov
es
inc
xlat
iret
rcr
ins
loope
stc
outs
repnz
jmp
jnp
test
rol
fild
or
push
aaa
jecxz
mov
jp
mov
clc
jnp
ret
mov
out
scas
mov
jmp
mov
retf
mov
pop
pop
or
(bad)
push
ins
(bad)
(bad)
xchg
mov
xchg
cdq
inc
xchg
fwait
ja
xor
(bad)
push
cmp
push
mov
out
cmp
sub
gs
icebp
xor
fdiv
lods
(bad)
push
packuswb
out
mov
mov
outs
(bad)
test
ja
test
jae
cwde
mov
fcom
sbb
jae
bound
repz
(bad)
outs
or
jmp
ret
div
adc
dec
in
(bad)
sub
xchg
call
xchg
cmp
mov
stc
call
mov
loope
(bad)
shr
clc
push
xchg
pop
or
movs
shl
movs
in
mov
loope
cld
ret
aas
retf
inc
adc
call
jae
fistp
test
es
int3
je
cli
(bad)
(bad)
mov
lods
xor
(bad)
pop
jo
add
retf
jmp
movs
scas
cmp
sti
push
and
cmp
adc
pop
pop
outs
dec
cli
clc
sbb
add
pushf
sub
mov
add
retf
das
sbb
jno
(bad)
push
mov
(bad)
(bad)
out
add
xchg
mov
fld
cmp
mov
ja
mov
add
inc
fnstenv
push
jnp
shr
outs
loopne
into
dec
js
repnz
mov
call
lock
ins
retf
scas
icebp
pop
sar
xchg
imul
or
rep
je
add
dec
pop
pop
cmps
push
pop
nop
xchg
cmps
sbb
(bad)
(bad)
inc
sbb
mov
mov
shr
mov
jno
jmp
mov
ins
lahf
jmp
push
cmp
inc
pushf
popa
pop
loopne
mov
push
xor
mov
mov
loop
(bad)
jmp
ja
in
loop
lahf
mov
aaa
fs
clc
movs
sbb
sbb
dec
shr
repnz
test
nop
call
push
addr16
pusha
(bad)
(bad)
(bad)
(bad)
jmp
mov
out
adc
cdq
inc
jle
and
inc
mov
(bad)
repnz
fnsave
(bad)
(bad)
push
or
jb
arpl
int
sti
push
shr
add
ret
cmps
cmp
cmc
pop
sti
(bad)
(bad)
(bad)
(bad)
jmp
scas
dec
rcl
es
not
les
out
mov
xor
inc
lods
mov
cmp
clc
mov
into
es
ror
push
sub
sti
push
add
out
xchg
outs
outs
out
inc
jp
cmp
xchg
(bad)
mov
ins
mov
push
cmp
sbb
mov
(bad)
(bad)
jmp
dec
or
stc
push
arpl
mov
dec
push
mov
hlt
(bad)
call
cld
sbb
pop
test
cmps
pop
movs
xlat
adc
and
jle
(bad)
(bad)
(bad)
call
loop
pop
inc
scas
and
jle
popf
addr16
lods
dec
fdiv
loop
(bad)
(bad)
mov
dec
pop
mov
sar
mov
test
sub
cli
(bad)
(bad)
(bad)
jge
pop
loopne
ins
xchg
jmp
enter
dec
neg
cmc
adc
jo
retf
shl
outs
jmp
scas
or
mov
cmp
ret
push
sub
and
lods
add
inc
cld
push
cwde
(bad)
mov
jns
jle
lock
mov
xchg
(bad)
(bad)
(bad)
cmp
cmp
bswap
(bad)
dec
cmc
sbb
cmc
mov
hlt
add
dec
or
inc
add
aaa
(bad)
and
imul
(bad)
jmp
jg
push
push
cmp
stc
adc
mov
cwde
mov
xor
sub
mov
or
jmp
jl
cmp
(bad)
(bad)
mov
and
add
or
into
add
pop
popf
ret
jmp
(bad)
call
call
sbb
cmp
jnp
aam
stos
adc
pop
mov
iret
sar
cmp
dec
je
xchg
daa
xchg
fsub
sbb
(bad)
(bad)
inc
cmc
loop
dec
mov
xchg
fwait
lds
mov
pop
test
or
(bad)
and
cmps
hlt
jmp
inc
ret
dec
push
adc
out
les
(bad)
(bad)
cld
cmps
push
movs
(bad)
repz
sbb
jle
repz
pushf
loopne
dec
movs
add
aaa
sub
(bad)
fbld
adc
push
sbb
push
aas
mov
xchg
jbe
pop
(bad)
(bad)
dec
or
mov
in
sbb
mov
retf
push
js
icebp
mov
mov
add
adc
push
(bad)
(bad)
(bad)
jg
cmps
in
popf
pop
stos
sbb
loopne
inc
pusha
daa
mov
test
js
fiadd
pop
lods
mov
jnp
lds
hlt
cmp
cdq
push
mov
mov
mov
dec
dec
das
inc
pop
cmp
je
pop
xor
out
pop
adc
xchg
jp
push
in
je
gs
xchg
pushf
jo
push
push
sar
stc
(bad)
(bad)
fistp
pusha
std
in
and
pop
xor
xchg
std
add
pop
sar
cmovno
(bad)
(bad)
mov
push
sahf
pop
jnp
in
dec
lods
push
stc
xor
mov
(bad)
(bad)
dec
push
jns
bound
repz
pop
popa
sar
sbb
pop
jae
ror
stos
shl
(bad)
in
mov
ins
fnsave
cmp
fsubr
popf
add
addr16
or
(bad)
mov
js
mov
mov
in
jb
jns
mov
lea
aaa
add
adc
pop
lds
adc
push
add
inc
out
inc
(bad)
inc
jmp
inc
(bad)
out
int3
mov
cld
push
gs
pop
cmp
xchg
xchg
int3
xchg
sbb
enter
retf
call
cmp
mov
mov
(bad)
(bad)
call
jle
pop
add
lahf
jns
xor
add
mov
ja
fidivr
dec
imul
jg
out
dec
sbb
add
sub
sub
js
cmp
add
jl
fist
mov
clc
pop
int
ret
mov
fisubr
pop
in
out
mov
lock
ror
(bad)
(bad)
mov
sub
and
scas
mov
ins
std
dec
or
inc
push
add
xchg
addr16
(bad)
(bad)
jg
pop
arpl
out
xor
jg
cmc
bnd
into
jmp
enter
jg
(bad)
push
push
out
inc
fsubp
cmp
repz
lea
gs
js
cwde
xchg
fwait
jg
(bad)
(bad)
cld
mov
cli
loopne
aad
aam
cs
repz
mov
push
jo
es
mov
sbb
xchg
cmp
cmps
xor
mov
js
add
jne
jmp
loopne
or
clc
dec
jbe
jne
cs
test
leave
push
push
(bad)
mov
(bad)
jmp
push
nop
mov
mov
in
jle
or
shr
lods
push
lods
or
lock
pop
ins
xchg
sbb
and
xchg
mov
jg
fbld
shr
mov
mov
jo
mov
leave
pushf
push
outs
stos
(bad)
jmp
xor
or
push
cs
add
xchg
xchg
pop
sahf
cmc
jmp
jae
(bad)
(bad)
(bad)
jmp
jb
call
and
add
mov
xchg
imul
sti
ins
cmps
(bad)
(bad)
jmp
pop
retf
mov
pop
out
sbb
adc
or
mov
jns
adc
mov
inc
out
push
mov
test
sub
and
rdpmc
scas
inc
pop
adc
aam
lahf
push
enter
sbb
(bad)
dec
jp
push
stos
pop
mov
mov
ja
xchg
retf
shl
(bad)
(bad)
dec
adc
xor
fs
and
sar
in
mov
sub
mov
psadbw
(bad)
fld
pop
sub
stc
mov
add
cmc
fstp
popa
fstp
(bad)
(bad)
push
stc
sub
pop
pop
inc
cmp
data16
stos
imul
test
jno
gs
(bad)
(bad)
call
cld
pop
pop
out
inc
out
inc
jmp
sub
retf
mov
mov
xchg
xchg
xchg
(bad)
js
cmc
fcomip
call
xlat
imul
(bad)
nop
jg
hlt
adc
inc
cld
push
lock
daa
(bad)
(bad)
call
loopne
jl
jmp
gs
daa
sbb
lods
sar
lods
fild
pop
mov
std
(bad)
(bad)
inc
outs
cli
icebp
xor
cs
fnstenv
popa
push
enter
xchg
inc
cld
mov
jne
scas
sti
dec
mov
(bad)
(bad)
mov
fwait
push
sahf
sbb
mov
pop
xor
addr16
outs
mov
repnz
xchg
pop
scas
data16
(bad)
(bad)
call
push
adc
ins
cli
out
mov
popf
gs
test
mov
jl
(bad)
(bad)
(bad)
(bad)
jle
mov
mov
sbb
lea
fistp
nop
mov
(bad)
(bad)
dec
xchg
dec
adc
das
jle
jecxz
sbb
dec
pop
repz
iret
or
int3
sbb
cli
clc
xor
jle
fiadd
js
cli
sahf
push
sti
pop
repnz
inc
jg
jg
lock
(bad)
(bad)
in
lds
clc
mov
push
icebp
mov
lds
cmp
mov
or
mov
adc
xchg
cli
out
fiadd
clc
sbb
int3
pop
push
cmp
push
repz
std
mov
cmp
dec
cmp
inc
or
jecxz
sahf
pop
jp
shl
or
(bad)
cmp
stc
(bad)
inc
jmp
in
xor
dec
movs
pop
mov
xlat
push
into
fild
fadd
stos
in
push
sbb
mov
xchg
cmps
cmp
jecxz
xchg
pop
inc
and
jnp
jmp
mov
(bad)
push
or
cmp
push
mov
clc
mov
arpl
cmp
outs
mov
cld
dec
cs
shr
cli
adc
mov
jle
jge
sbb
dec
mov
push
fild
adc
push
adc
aam
imul
(bad)
cmp
shl
add
mov
(bad)
out
and
jb
in
inc
loopne
pop
inc
mov
in
jecxz
(bad)
fcomip
(bad)
f2xm1
or
data16
lods
fcomp
scas
jbe
mov
adc
jmp
dec
jo
cmps
fidiv
out
dec
das
clc
mov
mov
int3
imul
and
(bad)
jmp
cmp
mov
mov
lea
(bad)
xor
out
sub
mul
xor
in
pop
fsubrp
ins
shl
rcr
cmps
cmp
cmp
popf
rol
pop
sar
pop
sub
pop
jmp
mov
scas
call
stos
(bad)
(bad)
mov
add
lock
or
je
pop
js
bound
mov
dec
loopne
jbe
mul
pop
aam
stos
icebp
push
xchg
xchg
push
out
push
(bad)
(bad)
jmp
int
enter
movs
jb
addr16
dec
jno
mov
in
cmp
lods
not
jae
jae
mov
mov
lods
and
lods
(bad)
push
jmp
(bad)
jg
push
jmp
lea
dec
(bad)
(bad)
(bad)
jmp
pop
sbb
arpl
cmp
cmp
fnstcw
add
(bad)
mov
push
adc
lock
jmp
dec
inc
sbb
push
lahf
jnp
ud0
(bad)
(bad)
in
pop
xlat
in
jns
push
in
dec
hlt
mov
and
ficomp
hlt
popf
mov
inc
push
xchg
jmp
jmp
mov
mov
nop
cmp
stc
ins
je
or
ds
outs
clc
mov
pop
enter
jp
aad
les
mov
mov
(bad)
inc
push
xchg
xlat
test
fsub
enter
lods
scas
test
cs
inc
mov
jae
test
add
shl
outs
jbe
and
clc
xor
cmps
in
les
xchg
(bad)
(bad)
(bad)
jmp
jmp
arpl
inc
dec
jecxz
xor
cmps
jns
nop
xchg
repnz
xchg
test
inc
mov
push
push
dec
leave
(bad)
(bad)
(bad)
fistp
push
mov
dec
rcr
test
jo
add
mov
jge
clc
stos
out
mov
cld
(bad)
inc
jmp
mov
dec
push
jecxz
xchg
(bad)
pop
sbb
pop
neg
adc
pop
loopne
adc
push
pop
das
pusha
push
sti
int
mov
mov
jmp
idiv
(bad)
(bad)
(bad)
fsub
movs
or
sbb
mov
call
daa
jg
shl
(bad)
(bad)
fild
and
repz
ror
jge
es
pop
loop
xchg
mov
cli
call
gs
xor
cmp
bound
pop
aad
xchg
rcl
shr
(bad)
jl
out
cmps
xchg
(bad)
(bad)
(bad)
(bad)
fist
std
xlat
jne
nop
xlat
mov
xor
xchg
aaa
inc
hlt
fwait
fwait
arpl
movs
and
(bad)
call
sbb
xchg
fnstsw
and
xchg
out
jns
mov
cmp
(bad)
(bad)
(bad)
push
fisub
lahf
dec
mov
xor
add
pop
jae
popa
fldcw
and
jl
repnz
jg
cmp
cld
inc
xchg
cli
(bad)
(bad)
(bad)
call
ror
cli
sar
jge
sub
stc
push
neg
mov
mov
hlt
sar
push
dec
fs
repnz
xchg
xchg
jmp
aas
pop
mov
sbb
pop
fwait
test
jmp
aaa
inc
push
jo
(bad)
cmp
sti
xchg
cs
pop
lods
(bad)
stos
or
push
mov
test
sbb
call
test
pop
les
ret
lahf
mov
cmp
out
mov
call
mov
or
fnsave
int
aas
shl
xor
shr
sahf
enter
leave
(bad)
mov
push
fdivr
jle
jns
mov
sub
push
ins
add
sbb
jg
jle
dec
mov
mov
call
dec
cdq
pop
sbb
into
dec
mov
(bad)
(bad)
jmp
fadd
popf
bnd
mov
loopne
pop
scas
mov
les
call
outs
and
(bad)
std
sbb
repz
cld
xchg
cmc
inc
jnp
mov
pop
and
cmp
stos
retf
movd
repz
in
add
fsubr
sbb
mov
mov
fs
push
out
jecxz
std
mov
cmp
imul
repnz
push
pop
iret
pop
pusha
cli
(bad)
(bad)
jmp
popf
ja
repz
inc
cmc
je
push
cmp
je
lods
push
fsub
ins
movs
(bad)
dec
repnz
jb
push
(bad)
cwde
call
push
(bad)
fisttp
in
loopne
jg
fcomp
adc
outs
(bad)
popf
dec
xor
jge
cli
cmp
imul
(bad)
(bad)
jg
js
les
fidivr
jne
push
movs
cmp
jecxz
mov
pop
loopne
(bad)
add
icebp
mov
jmp
jecxz
lea
out
(bad)
sub
inc
ror
loopne
mov
xchg
inc
(bad)
es
dec
hlt
inc
mov
jns
inc
(bad)
push
nop
icebp
mov
fistp
and
cmps
sbb
scas
pop
repz
mov
inc
cmp
clc
fistp
mov
(bad)
stc
adc
jmp
popa
mov
loop
and
(bad)
push
aam
ror
sti
cmc
sbb
hlt
fs
clc
loop
(bad)
mov
std
ins
sbb
push
pop
cmps
jbe
fwait
ror
pop
imul
(bad)
(bad)
(bad)
mov
ins
stos
jbe
adc
out
sar
push
fist
or
sti
mov
call
jmp
sub
sbb
jp
data16
imul
(bad)
jmp
pop
in
stc
and
mov
sar
mov
(bad)
call
pop
cmp
xor
clc
ret
cmp
in
sbb
jp
adc
je
mov
(bad)
(bad)
(bad)
cmp
push
jb
(bad)
dec
ins
adc
in
xchg
rcr
cld
stos
and
mov
add
(bad)
(bad)
jl
dec
xor
jecxz
pop
call
xchg
add
mov
(bad)
retf
mov
xor
call
lods
jae
dec
aam
jg
sti
aam
cwde
aas
(bad)
jp
call
imul
jg
outs
mov
(bad)
fwait
cmp
bound
repz
int3
dec
sbb
pop
dec
ret
sti
pushf
int
add
cs
cdq
push
mov
iret
push
mov
(bad)
mov
lahf
inc
inc
push
das
test
(bad)
aaa
shr
sub
xor
add
jg
adc
mov
clc
and
sbb
repnz
mov
shl
sar
sbb
add
(bad)
aas
fsubr
cmp
outs
mov
stos
lods
retf
inc
aaa
lea
(bad)
push
jne
pop
sub
cmp
clc
test
stc
ror
mov
dec
(bad)
adc
mov
int3
cmp
stos
mov
xchg
dec
sbb
mov
jecxz
and
dec
pop
fcmovbe
ds
sub
pop
hlt
aam
cmc
call
imul
(bad)
(bad)
fistp
pop
mov
shl
xchg
les
ds
ss
pusha
scas
push
int3
daa
fcmovnbe
xlat
loop
ds
(bad)
mov
or
dec
dec
lods
or
pusha
enter
xor
mov
(bad)
(bad)
jmp
mov
xor
(bad)
rol
jnp
push
jnp
sti
nop
or
fwait
sti
mov
sbb
dec
test
(bad)
(bad)
push
loope
xchg
neg
mov
das
fwait
mov
jle
inc
jle
jle
imul
hlt
mov
in
ja
mov
les
aad
retf
(bad)
jmp
cmps
pop
pusha
popf
push
cdq
jmp
int3
add
push
out
xor
xchg
xor
bound
push
shl
pop
test
adc
sar
ins
mov
in
into
sar
jne
push
mov
pop
cli
dec
sub
fidiv
out
mov
bswap
sbb
stos
adc
(bad)
call
xor
retf
mov
daa
loope
mov
add
cmp
jb
adc
inc
jmp
xchg
cmp
loopne
jns
lahf
movs
lock
(bad)
cmp
test
int
mov
and
sub
cmps
jg
inc
loopne
push
mov
push
push
repz
lods
push
(bad)
rcr
clc
xor
out
inc
adc
ror
fidiv
(bad)
(bad)
mov
dec
sub
cmc
push
fwait
fwait
xchg
int
jo
push
jle
mov
cmp
cmps
or
dec
dec
or
push
mov
iret
pop
loopne
cli
jmp
or
pop
mov
ror
push
lahf
xchg
(bad)
(bad)
(bad)
inc
dec
lahf
outs
xchg
or
sbb
xchg
jns
push
adc
lods
sbb
push
adc
(bad)
(bad)
mov
add
sar
sub
pop
pop
push
repz
call
sub
retf
cmp
jns
mov
or
xor
(bad)
jmp
repnz
dec
mov
push
sti
das
jp
test
stc
push
ja
lods
dec
jg
jb
shl
pusha
xor
(bad)
push
icebp
pop
out
in
ds
lods
sbb
or
outs
lahf
add
cmp
(bad)
fbstp
push
ja
in
jge
enter
sub
mov
add
jmp
in
lock
cmp
call
repnz
(bad)
sub
outs
cmp
call
fwait
outs
lods
cmp
(bad)
adc
cmp
cmp
aaa
aas
adc
ds
(bad)
(bad)
(bad)
mov
mov
jge
(bad)
popa
(bad)
repz
jae
pop
xor
dec
mov
int3
repnz
and
dec
add
shr
pop
in
sbb
(bad)
cmp
fldcw
mov
cmps
call
pop
lea
ret
das
es
leave
or
mov
inc
cmp
pusha
fisubr
sbb
fwait
and
mov
fdivr
ret
jns
or
clc
(bad)
(bad)
dec
in
les
mov
loopne
inc
cmp
mov
jo
(bad)
fbld
push
push
push
inc
or
hlt
in
stos
and
iret
(bad)
(bad)
(bad)
inc
les
enter
xor
repz
pop
fidiv
(bad)
fldcw
aaa
pop
push
xchg
sbb
push
rol
in
adc
jg
std
adc
sbb
(bad)
(bad)
(bad)
out
in
cmps
xlat
dec
mov
scas
add
xor
cmp
lahf
cmp
shl
mov
out
(bad)
(bad)
(bad)
push
(bad)
outs
aad
out
add
std
bound
lahf
arpl
inc
arpl
mov
mov
mov
push
std
out
dec
dec
ret
cwde
leave
es
xchg
mov
jb
push
xchg
jmp
sti
cmp
(bad)
cli
ret
dec
clc
lods
xchg
iret
and
(bad)
jne
jl
dec
(bad)
jmp
imul
call
push
sti
push
mov
sti
fisubr
cli
(bad)
(bad)
jmp
push
ds
fistp
rcr
outs
pop
cwde
push
stc
stc
ds
(bad)
jmp
test
aas
imul
xchg
cmp
cdq
ret
leave
inc
mov
adc
cmp
(bad)
(bad)
dec
ja
fidivr
sub
adc
dec
mov
adc
hlt
mov
add
test
scas
mov
(bad)
(bad)
cmp
arpl
dec
neg
bound
pop
and
or
pop
ja
(bad)
(bad)
jmp
movs
mov
mov
mov
or
jne
jge
into
jbe
xchg
lds
(bad)
(bad)
(bad)
push
mov
pop
imul
loopne
pop
mov
inc
add
adc
fwait
mov
(bad)
(bad)
(bad)
call
hlt
repz
das
aad
pop
mov
sbb
ror
adc
mov
(bad)
(bad)
(bad)
(bad)
xor
fnstenv
cmp
jp
out
stos
xor
sbb
inc
xchg
jmp
mov
mov
out
and
(bad)
push
popf
jmp
(bad)
jmp
jp
cmps
shl
sbb
xchg
inc
sub
jg
xchg
mov
push
mov
into
cmp
pop
cld
les
push
loope
sti
jl
call
fcmovnbe
push
mov
inc
pop
xlat
mov
mov
(bad)
(bad)
(bad)
(bad)
jmp
xchg
retf
cmp
daa
xchg
pop
std
or
ret
ds
dec
inc
xchg
push
adc
loope
loop
(bad)
(bad)
call
jne
jle
ins
mov
and
xlat
retf
cmp
ret
xlat
xor
jle
(bad)
jg
(bad)
jmp
lods
pop
aad
adc
pop
sti
jbe
fistp
pop
outs
lea
mov
les
int
xchg
jns
shl
clc
xor
jno
hlt
sar
int3
iret
repnz
cmp
pop
scas
call
xor
inc
dec
stos
rcl
adc
xchg
call
jecxz
sub
jb
push
add
mov
jmp
mov
(bad)
(bad)
push
outs
xor
pop
scas
and
pop
addr16
lahf
adc
loop
cmps
push
pop
pushf
nop
pop
call
push
jmp
shl
xor
mov
inc
sti
aaa
adc
ss
call
or
out
leave
mov
test
je
pop
hlt
mov
jnp
das
stos
xor
sbb
mov
out
das
push
aad
adc
repz
dec
dec
or
push
pop
cmp
cli
push
(bad)
(bad)
call
pop
ret
cmp
adc
ficom
push
jp
(bad)
mov
or
xchg
bound
(bad)
(bad)
push
cmp
and
cmps
in
popa
mov
sub
es
xchg
push
loopne
(bad)
out
jecxz
or
mov
in
jb
out
cli
push
push
ins
cmp
xchg
imul
jl
cmp
jmp
inc
adc
enter
es
dec
in
jge
push
or
ss
out
aad
stc
loopne
(bad)
push
(bad)
(bad)
(bad)
(bad)
jns
retf
push
push
call
mov
out
cmp
(bad)
xchg
dec
sar
movs
jne
jg
or
cmp
pop
call
std
bound
cli
inc
sahf
stc
xor
jle
cmp
xor
hlt
(bad)
(bad)
inc
dec
or
lahf
jge
fsubr
fwait
dec
cli
jno
clc
aas
(bad)
(bad)
(bad)
push
lock
jecxz
mov
push
in
or
and
push
mov
mov
jne
mov
or
int3
sub
sar
push
fbstp
push
mov
(bad)
neg
mov
(bad)
jecxz
call
add
adc
in
pop
out
pop
fldcw
mov
mov
retf
pop
xchg
inc
loopne
(bad)
(bad)
(bad)
jmp
cmp
cmp
jecxz
mov
stc
hlt
retf
xchg
dec
cmps
jbe
loopne
mov
dec
add
cdq
or
(bad)
(bad)
jmp
inc
dec
popf
jg
jg
outs
sub
fist
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
mov
ins
les
dec
ja
pop
fild
outs
mov
xchg
pop
mov
fwait
add
(bad)
jg
cld
pop
sub
imul
iret
or
pop
cmp
sti
scas
adc
dec
test
cmp
scas
add
xchg
push
popf
xchg
fistp
inc
xchg
jmp
jg
pop
mov
cmpxchg
xor
js
mov
jb
in
mov
cli
sub
inc
lds
stos
add
(bad)
jmp
hlt
fistp
jg
data16
cmp
(bad)
jmp
test
(bad)
sbb
jmp
hlt
push
(bad)
(bad)
(bad)
(bad)
mov
cld
sub
iret
pop
call
push
pushf
jg
(bad)
mov
retf
sub
and
retf
pop
inc
sub
push
(bad)
mov
stos
xchg
call
cmp
sub
out
sbb
jae
(bad)
(bad)
(bad)
(bad)
clc
into
push
jg
dec
mov
rcl
movs
repnz
not
mov
movs
cwde
cmps
std
in
mov
call
call
ret
mov
cwde
das
aas
add
and
sbb
mov
test
lock
add
sub
leave
into
sub
sbb
sub
push
leave
clc
aam
cdq
repz
call
mov
ins
aaa
cmps
(bad)
lock
push
loop
dec
dec
add
pop
push
ret
or
(bad)
inc
push
out
lea
icebp
pop
push
mov
mov
stos
(bad)
add
fwait
pusha
cld
inc
push
scas
pop
or
shl
in
inc
(bad)
pop
in
lods
sub
(bad)
in
push
pop
outs
jno
xchg
inc
pusha
rcr
lahf
sbb
add
icebp
call
(bad)
not
pop
xor
ret
mov
push
mov
(bad)
jnp
stos
arpl
jmp
hlt
or
jmp
sub
mov
in
repnz
and
adc
(bad)
(bad)
dec
and
out
cmp
fsubp
icebp
sub
(bad)
jno
fcomp
sar
mov
(bad)
fistp
outs
push
mov
aaa
push
sar
sbb
sub
addr16
mov
cmp
popa
cwde
(bad)
(bad)
(bad)
jmp
ffreep
jmp
mov
imul
call
sbb
lahf
call
shl
aad
(bad)
movs
push
mov
cmc
lock
call
inc
push
mov
clc
cmp
mov
sahf
push
(bad)
out
mov
rcr
cmp
(bad)
ins
pop
and
xchg
mov
push
lock
(bad)
xchg
and
(bad)
(bad)
push
pushf
std
adc
cld
jnp
adc
(bad)
push
jecxz
cs
mov
jmp
xchg
jns
repz
das
clc
(bad)
call
ins
getsec
loope
test
sub
lea
dec
scas
ins
scas
pop
cmps
addr16
popa
(bad)
(bad)
(bad)
push
xchg
xchg
cld
fnstcw
push
jmp
jmp
int3
das
push
sbb
std
aaa
cld
lods
xchg
jmp
jo
xchg
mov
mov
cmps
test
jg
cmp
lahf
int3
in
popa
pop
ret
out
pop
(bad)
inc
mov
retf
addr16
xchg
addr16
(bad)
(bad)
jmp
mov
sar
mov
jmp
push
(bad)
movs
dec
enter
push
dec
stos
jns
inc
scas
cli
(bad)
jmp
out
mov
adc
retf
or
push
lahf
ret
jns
push
jmp
mov
(bad)
sub
mov
bound
(bad)
(bad)
inc
push
xchg
cmp
mov
(bad)
jp
call
cli
sbb
call
int3
pop
xor
sar
sub
(bad)
cmc
xor
jg
push
mov
mov
xchg
dec
sub
idiv
(bad)
(bad)
jmp
mov
dec
pop
mov
test
mov
inc
les
sub
sar
and
imul
(bad)
test
or
rcl
mov
out
test
(bad)
jmp
mov
fistp
std
dec
mov
in
push
cmp
mov
push
std
(bad)
retf
cmp
cmp
loop
adc
cmc
(bad)
(bad)
push
sbb
add
cmps
sti
int3
mov
movs
(bad)
popf
sub
(bad)
(bad)
sar
(bad)
(bad)
(bad)
aas
sti
xor
repz
push
ror
mov
repz
lahf
div
outs
adc
inc
ds
rcl
ins
mov
das
clc
call
adc
dec
mov
je
or
sub
jne
(bad)
(bad)
(bad)
push
mov
aam
scas
cmp
add
iret
mov
pop
aas
cdq
sar
or
pop
js
jb
call
adc
xchg
(bad)
mov
retf
or
push
adc
jg
jmp
aad
cmp
add
xor
jg
sub
jb
nop
xchg
into
add
arpl
and
dec
repz
adc
xchg
inc
and
(bad)
inc
dec
mov
pushf
mov
fisubr
adc
popa
push
cmp
je
(bad)
(bad)
(bad)
mov
mov
jle
inc
(bad)
fcomp
lds
and
sub
int3
cmp
jp
repnz
(bad)
(bad)
push
xchg
sahf
cmps
test
mov
cld
mov
sub
mov
mov
into
mov
add
(bad)
jg
sub
rcr
push
mov
jp
mov
jecxz
dec
mov
fcos
jmp
call
into
push
cld
mov
cld
and
retf
jno
aaa
or
mov
mov
mov
add
(bad)
outs
jmp
(bad)
inc
(bad)
retf
iret
pop
push
pop
int
jmp
xor
or
loopne
arpl
stos
fucomip
pop
xchg
fistp
sahf
scas
xchg
jg
fcomip
nop
inc
sub
addr16
pop
stos
cmp
sub
inc
jmp
popf
push
cmp
(bad)
(bad)
jmp
jno
mov
xchg
push
jnp
loop
pop
outs
mov
repz
dec
or
jae
adc
std
adc
jge
xor
jge
cdq
loopne
(bad)
leave
jmp
dec
fidiv
cdq
xor
sub
and
adc
scas
sti
aam
xchg
aad
sbb
and
dec
push
jmp
mov
mov
(bad)
jne
rol
inc
push
lods
pop
jp
aam
jae
in
pop
sbb
dec
das
fwait
outs
push
inc
adc
mov
div
mov
and
dec
(bad)
(bad)
(bad)
mov
idiv
stc
in
iret
and
xchg
gs
call
xchg
and
mov
mov
(bad)
(bad)
inc
pop
sub
stos
lds
or
pop
lods
pop
cmp
jns
pop
std
fadd
mov
and
lods
fcmove
in
int3
lahf
clc
push
jmp
(bad)
mov
(bad)
push
xor
inc
lea
clc
or
xlat
sub
outs
imul
adc
cmp
mov
(bad)
(bad)
jg
mov
sbb
test
int
fcomp
pop
xchg
dec
adc
test
(bad)
(bad)
(bad)
push
pop
jbe
aas
int
cmp
jle
addr16
xor
mov
test
inc
pop
out
(bad)
mov
std
push
jmp
in
mov
adc
add
outs
retf
inc
shl
push
iret
xchg
daa
mov
mov
(bad)
(bad)
(bad)
push
mov
push
mov
mov
out
dec
les
icebp
xchg
fnsave
jl
xchg
aas
sub
(bad)
jmp
mov
retw
les
adc
pushf
fimul
(bad)
mov
dec
sub
sti
das
pop
or
test
cmp
fs
(bad)
(bad)
call
repz
mov
scas
stc
dec
jle
lock
jne
ja
xchg
mov
(bad)
or
sbb
(bad)
(bad)
jmp
adc
jg
fsubp
mov
jbe
std
ja
daa
lea
call
push
mov
(bad)
jmp
das
mov
shr
push
jg
loopne
lock
scas
fstp
push
ret
mov
loop
inc
mov
(bad)
lods
jl
stc
(bad)
(bad)
mov
adc
shl
pop
push
xchg
pop
inc
lock
icebp
jnp
mov
pop
cmc
cmp
es
stos
or
jle
ret
add
stos
ror
(bad)
xchg
jg
inc
std
or
inc
leave
xchg
cwde
mov
dec
mov
dec
cli
out
leave
(bad)
stos
xchg
pop
fisttp
and
dec
cld
outs
cli
pusha
pop
push
cwde
outs
ds
fimul
xor
pop
std
(bad)
call
mov
adc
mov
pop
dec
fdiv
out
into
pop
mov
imul
mov
sbb
and
rcr
retf
lahf
sar
cmps
ret
(bad)
mov
push
mov
cs
test
aas
loope
retf
mov
and
sbb
add
(bad)
(bad)
(bad)
(bad)
call
bound
xchg
add
fucom
shr
neg
outs
enter
mov
lahf
loopne
(bad)
(bad)
inc
je
push
push
std
cld
lahf
std
dec
mov
ret
xchg
xchg
xchg
aam
push
mov
jmp
and
div
in
sbb
test
lock
test
out
(bad)
(bad)
in
jmp
repnz
push
repnz
mov
add
jno
movzx
stos
dec
fiadd
dec
(bad)
cmp
loop
les
out
shr
movs
cmc
(bad)
call
ficom
add
mov
ror
lahf
add
cmps
in
sahf
int3
por
hlt
push
icebp
(bad)
jg
dec
jle
daa
pop
(bad)
cli
scas
repz
leave
sti
mov
aad
or
(bad)
out
and
xchg
cmovp
cmps
not
inc
jns
jle
div
push
mov
jmp
pop
dec
xchg
push
sbb
loope
enter
push
shr
cwde
outs
pop
sbb
icebp
sbb
(bad)
fcomip
bound
mov
loop
loop
push
repz
push
stos
(bad)
(bad)
mov
daa
inc
div
das
jp
pop
sub
enter
cld
ficomp
inc
(bad)
(bad)
(bad)
(bad)
stc
aam
mov
loopne
outs
pop
outs
fs
and
paddusw
xchg
mov
idiv
cmps
pop
cdq
loopne
imul
dec
(bad)
and
xlat
mov
scas
lea
xor
adc
outs
shl
adc
jl
sub
xchg
ja
cmp
(bad)
icebp
dec
mov
pushf
repnz
mov
call
jle
jns
mov
fld
or
jge
dec
push
movs
jbe
loopne
in
sbb
imul
cwde
(bad)
sub
inc
shr
xlat
jmp
dec
stc
xlat
shr
add
jg
xchg
mov
sbb
or
mov
add
outs
mov
sub
sahf
pop
jge
cmc
pmuludq
push
sar
cli
outs
xchg
mov
lock
ror
mov
and
les
(bad)
call
imul
test
lahf
or
cmp
aaa
push
push
stos
inc
xor
cmp
(bad)
(bad)
jmp
cwde
inc
pushf
ret
jle
out
mov
ror
jbe
pmulhw
pop
loopne
xor
fimul
js
int
scas
mov
mov
push
aas
(bad)
(bad)
(bad)
out
int3
iret
mov
cs
loope
xor
fnstenv
retf
pop
jecxz
dec
mul
cmp
dec
(bad)
dec
sbb
pop
shl
out
das
jmp
stos
dec
loopne
mov
in
movs
call
sbb
mov
fild
mov
add
pop
pop
cmp
aas
lds
in
out
repnz
call
fucomi
inc
jmp
cmp
jb
ja
xor
retf
(bad)
(bad)
call
xor
jmp
repz
xchg
adc
cmc
jmp
(bad)
call
lods
mov
xor
pop
retf
repnz
clc
imul
jle
cld
dec
push
jecxz
cmps
out
pop
int3
iret
mov
(bad)
bound
inc
loop
pop
hlt
daa
dec
mov
add
xchg
push
(bad)
(bad)
jmp
call
paddsw
adc
push
mov
call
xor
push
xchg
pop
mov
imul
add
or
ins
sub
es
jecxz
(bad)
mov
out
fcom
(bad)
sbb
dec
cs
mov
fs
cli
call
jne
aad
retf
push
ss
dec
sahf
cmps
shl
mov
push
jmp
jl
pop
cmps
cmp
(bad)
jmp
jp
sbb
mov
ret
dec
fwait
stos
jg
dec
cld
fstp
jg
scas
cli
push
sti
sub
in
cmps
mov
mov
shl
jecxz
pop
add
(bad)
(bad)
jmp
lods
mov
jecxz
jne
idiv
mov
or
in
(bad)
mov
add
pop
(bad)
js
cli
pop
punpckhwd
(bad)
(bad)
dec
jbe
jno
repz
fisttp
xchg
rep
sahf
sahf
outs
cmp
out
push
retf
aam
or
inc
inc
in
inc
fst
clc
or
add
fiadd
mov
fcom
(bad)
mov
addr16
icebp
shr
loopne
or
xchg
(bad)
push
cmp
(bad)
(bad)
push
out
dec
xchg
leave
aam
jg
iret
jmp
xchg
xlat
arpl
jge
ins
push
rcr
(bad)
(bad)
push
retf
mov
sar
jecxz
aad
rcr
pusha
cli
mov
or
rcr
push
dec
jmp
fxch
stos
adc
jmp
pop
pop
dec
pop
sti
mov
(bad)
(bad)
call
dec
cld
and
pop
mov
(bad)
cmp
scas
ins
stos
bound
mov
hlt
stc
div
inc
and
lock
lock
push
push
js
call
fwait
adc
mov
outs
outs
(bad)
jmp
lahf
jns
sti
ins
fadd
(bad)
(bad)
sbb
test
fadd
inc
(bad)
or
sbb
imul
movs
mov
pop
dec
jge
push
(bad)
(bad)
(bad)
call
stc
push
jp
push
jg
jns
scas
xchg
inc
fwait
daa
(bad)
or
pop
xlat
mov
jecxz
sub
test
pop
cdq
into
and
jbe
jmp
jp
(bad)
(bad)
push
loop
mov
sahf
ins
dec
hlt
cmp
dec
pusha
hlt
call
adc
mov
fcomp
xchg
(bad)
(bad)
fcomip
(bad)
cli
int3
imul
mov
pop
pop
xlat
dec
jg
fwait
out
pop
jmp
js
(bad)
(bad)
(bad)
jns
adc
(bad)
fstp
aaa
xchg
sbb
(bad)
js
je
fmul
mov
ret
cmp
cmps
(bad)
(bad)
(bad)
jmp
jne
mov
and
add
aaa
out
fs
or
pop
movs
and
pop
loopne
push
cmp
add
jp
mov
jmp
sbb
out
call
bound
cmc
pop
dec
(bad)
lods
popa
mov
addr16
sbb
mov
add
fnsave
pop
loop
(bad)
push
push
xchg
ja
jmp
shl
jmp
mov
cmp
xchg
(bad)
(bad)
jg
test
(bad)
mov
and
gs
scas
xchg
xor
mov
imul
(bad)
push
ret
hlt
mov
ror
push
and
not
xchg
ror
dec
mov
mov
arpl
(bad)
(bad)
(bad)
dec
mov
sbb
ds
lahf
frstor
jl
retf
xchg
xor
out
imul
loope
or
mov
in
sub
mov
leave
mov
and
mov
stos
pop
aam
(bad)
jg
mov
ret
jp
dec
out
sub
adc
mov
pop
jmp
mov
lock
loop
stc
sahf
in
lahf
loop
mov
jl
jno
cmp
add
xor
mov
pop
cmc
(bad)
cld
pop
mov
mov
pop
sti
pusha
div
mov
mov
xor
jmp
add
out
push
fwait
(bad)
(bad)
(bad)
call
out
fwait
(bad)
xlat
ins
sub
mov
fst
dec
(bad)
cli
adc
or
call
mov
aam
ret
cli
xor
(bad)
(bad)
(bad)
(bad)
stc
cld
movs
outs
sbb
lods
xlat
outs
iret
xor
shr
jmp
aaa
gs
pop
aad
or
adc
stos
sub
fistp
pop
cmc
(bad)
call
ja
out
sbb
les
adc
cld
inc
sti
cli
add
pop
cmps
(bad)
(bad)
(bad)
jmp
movs
xchg
cmp
push
jge
dec
icebp
(bad)
sub
loope
xor
sub
dec
outs
xchg
loope
outs
std
xor
pop
(bad)
(bad)
(bad)
dec
fcmovne
or
sbb
sub
std
xchg
jo
adc
adc
pop
std
pop
loop
mov
icebp
(bad)
(bad)
(bad)
stc
push
in
push
stc
scas
mov
js
popa
ss
pop
aad
dec
stos
(bad)
(bad)
inc
inc
hlt
adc
mov
xor
or
pop
mul
push
(bad)
(bad)
jl
push
(bad)
mov
adc
or
fistp
pop
push
jns
add
out
xor
cs
or
push
(bad)
xchg
cmp
(bad)
push
test
es
ins
dec
cmp
int3
js
inc
int
mov
push
(bad)
mov
sar
cmp
aaa
xchg
ret
mov
cmc
frstor
mov
hlt
mov
mov
in
sbb
aas
or
fucomp
jns
push
outs
push
mov
loop
jmp
inc
mov
das
dec
jno
retf
test
mov
rcr
or
sub
stos
jge
adc
fidiv
mov
(bad)
(bad)
dec
call
out
(bad)
(bad)
outs
pusha
lahf
xor
sbb
or
(bad)
jmp
(bad)
je
pop
sub
jge
gs
mul
or
jle
pop
fiadd
push
(bad)
push
jmp
test
sbb
imul
in
sub
shr
movs
in
mov
fisub
call
dec
push
retf
push
lea
fild
adc
inc
hlt
push
jb
pop
xchg
push
stos
adc
xor
mov
std
inc
rcl
repz
or
std
retf
data16
(bad)
inc
repnz
lods
ja
sti
mov
mov
stos
cmp
jg
loop
call
in
(bad)
(bad)
inc
mov
cmp
hlt
jmp
icebp
pop
pop
jle
mov
das
les
pop
pop
rol
(bad)
(bad)
(bad)
call
(bad)
mov
push
dec
(bad)
cli
cmp
jbe
sub
xor
xchg
and
xor
(bad)
mov
inc
jg
js
cdq
mov
outs
jbe
test
clc
mov
jge
clc
movs
(bad)
(bad)
(bad)
dec
jmp
dec
lods
aam
test
repnz
repnz
jecxz
ret
lahf
out
inc
pop
(bad)
jmp
fbstp
fidiv
mov
jg
sar
pop
and
xchg
(bad)
pop
jb
cld
fcomip
xchg
call
jmp
iret
lods
xchg
aad
and
imul
cld
mov
inc
(bad)
mov
std
dec
pop
sub
into
pop
repnz
(bad)
(bad)
(bad)
jg
dec
hlt
fs
sar
adc
test
cli
outs
jne
std
mov
jno
add
mov
std
push
jnp
stos
lahf
ficomp
sbb
std
mov
call
xor
jle
imul
pop
pop
std
adc
jp
(bad)
(bad)
dec
call
fidivr
push
loopne
cdq
dec
mov
in
(bad)
std
sbb
aas
(bad)
push
div
pop
popa
sbb
leave
mov
lods
push
mov
retf
xchg
loop
lods
cld
daa
iret
retf
mov
xchg
inc
xlat
xor
and
add
stos
dec
xor
enter
adc
cmps
(bad)
jmp
hlt
pop
sub
imul
cmp
cmp
mov
xchg
pop
mov
stc
pop
mov
pop
test
mov
cmps
leavew
cli
addr16
fdivp
(bad)
(bad)
push
sahf
ffreep
out
pop
pushf
ins
out
mov
call
stos
xchg
add
shr
loopne
mov
dec
out
cmp
not
cmp
call
stos
add
fldenv
sar
scas
mov
mov
jp
sbb
lds
aad
(bad)
popf
mov
jecxz
mov
fadd
out
sti
call
pop
jns
jmp
or
mov
(bad)
(bad)
(bad)
mov
and
sbb
lahf
cmc
pop
mov
out
fnstcw
dec
jno
jne
ret
in
jnp
mov
(bad)
inc
push
push
int
mov
add
(bad)
mov
cmp
push
push
ss
and
cmp
or
(bad)
(bad)
(bad)
fistp
xchg
add
sub
inc
jmp
(bad)
(bad)
arpl
out
push
lods
(bad)
inc
cwde
mov
movs
xor
and
(bad)
jmp
mov
mov
inc
movlps
add
cmp
and
cmp
(bad)
dec
sti
sar
je
(bad)
movs
add
out
or
mov
jb
(bad)
(bad)
(bad)
dec
lock
popf
mov
mov
and
inc
das
jge
jle
jb
fstp
add
inc
push
adc
(bad)
(bad)
dec
cmp
loop
inc
adc
movs
std
std
and
(bad)
pop
and
shr
daa
push
out
sub
cld
mov
inc
mov
leave
fnstsw
inc
pop
lods
sbb
sub
mov
sti
pop
adc
imul
call
adc
cmp
cmp
(bad)
(bad)
call
jecxz
xchg
popa
aam
icebp
mov
jle
daa
out
cmp
(bad)
loop
sbb
ds
(bad)
(bad)
(bad)
jmp
xor
sbb
out
mov
ja
popf
mov
sti
cdq
mov
ja
jle
aad
xlat
fdiv
imul
out
loope
or
sar
inc
imul
xor
clc
mov
mov
shr
(bad)
(bad)
jmp
push
mov
push
adc
xchg
add
xchg
xchg
(bad)
clc
mov
cmp
popa
sbb
and
or
cmc
and
js
pusha
mov
inc
cld
arpl
inc
push
xchg
jecxz
sub
xlat
adc
adc
loopne
mov
pop
aas
push
push
std
hlt
ret
(bad)
(bad)
call
and
jl
out
add
jmp
in
pop
out
ins
outs
retf
xor
mov
or
xor
aas
inc
mov
inc
rcr
int3
je
dec
xor
push
cmp
inc
ds
sti
push
loop
jmp
mov
scas
cmc
stc
xchg
xchg
and
out
(bad)
(bad)
jmp
sbb
push
jno
std
int
mov
js
fwait
mov
mov
inc
push
in
cmp
add
push
sub
mov
pop
in
adc
(bad)
mov
cmps
sub
pop
cmps
js
push
fldenv
mov
rol
(bad)
push
sub
and
in
sahf
cmc
jmp
jmp
mov
enter
test
xchg
inc
sub
ret
cmp
and
inc
jo
arpl
sbb
mov
jp
mov
add
jg
xchg
or
ret
fistp
call
xchg
stos
jbe
fisttp
push
addr16
cmp
iret
jb
icebp
jg
adc
push
icebp
and
and
sbb
xchg
aam
push
fwait
sbb
inc
xchg
cmp
repnz
sahf
imul
mov
sar
push
clc
aaa
ficomp
(bad)
jg
dec
imul
fsubr
cmps
mov
inc
outs
xlat
jmp
adc
pop
sar
sahf
or
mov
jmp
ja
nop
shl
mov
cmp
jg
(bad)
cmp
aas
adc
and
cwde
icebp
push
popf
in
out
loopne
jg
les
pop
mov
test
jg
scas
add
mov
scas
dec
inc
cmp
mov
ins
fnsave
gs
push
std
test
les
fdivr
in
out
mov
aaa
jmp
mov
sbb
pop
cmp
clc
(bad)
(bad)
push
sbb
lds
sub
jmp
sub
ds
je
das
dec
cmp
aam
cli
stos
jp
(bad)
jg
mov
imul
std
or
pop
mov
mov
test
xor
std
push
pop
out
outs
out
(bad)
jmp
(bad)
jg
cmc
repz
and
ds
mov
ja
rol
mov
lods
(bad)
(bad)
fcomip
sti
pop
cmp
push
ret
popf
push
imul
jmp
push
mov
repnz
cmc
ror
inc
fsub
sar
mov
push
imul
pushf
test
dec
mov
push
cmp
push
jg
mov
xor
push
jmp
int
cmp
(bad)
data16
outs
call
out
(bad)
mov
ja
dec
cmp
iret
imul
and
imul
fisubr
mov
sub
(bad)
(bad)
dec
es
test
xchg
inc
daa
icebp
jecxz
outs
and
xchg
xlat
pop
(bad)
stc
and
sub
(bad)
(bad)
jmp
mov
pop
jne
ds
out
fistp
(bad)
sbb
mov
test
dec
call
cmp
mov
jmp
shl
fucomp
and
ja
fcmovnu
inc
cli
stc
cld
jno
setp
push
xor
ror
push
pop
mov
iret
arpl
(bad)
(bad)
mov
loopne
leave
in
rcl
xor
(bad)
in
fild
fisttp
stc
jle
jmp
mov
ds
pusha
jbe
dec
jmp
retf
out
sub
and
mov
(bad)
fsubr
das
daa
(bad)
je
call
gs
mov
scas
mov
(bad)
(bad)
jmp
push
std
js
loope
mov
pop
mov
sbb
mov
(bad)
lock
jmp
and
add
pop
(bad)
hlt
xor
inc
scas
cli
(bad)
call
scas
stos
xchg
mov
mov
jae
and
fist
jmp
lods
icebp
pop
cmp
mov
jl
jb
mov
hlt
inc
dec
bound
xchg
in
inc
(bad)
call
cld
(bad)
mov
cli
adc
ins
or
in
psubq
jb
mov
enter
mov
lods
fwait
gs
outs
cdq
cmp
fdivr
pusha
test
call
(bad)
(bad)
mov
mov
cs
adc
cmp
sbb
dec
pop
out
daa
sar
popf
dec
iretw
jmp
jl
(bad)
(bad)
(bad)
call
and
mov
sti
push
jo
xchg
sbb
mov
lds
mov
(bad)
(bad)
dec
into
(bad)
ins
pusha
mov
pop
inc
icebp
jl
shl
cmps
js
js
(bad)
(bad)
(bad)
jmp
cmc
xor
rcl
xor
jae
das
ins
fwait
cli
jp
xlat
jp
mov
retf
pop
adc
jne
lds
ror
jnp
sbb
icebp
mov
(bad)
mov
loop
into
xchg
mov
mov
(bad)
lock
(bad)
out
add
mov
lds
mov
jbe
(bad)
xor
jge
xor
call
mov
stos
push
add
out
inc
cli
pop
push
jb
jmp
adc
outs
(bad)
(bad)
inc
cmp
fnsave
mov
es
and
and
xchg
idiv
std
icebp
add
inc
jb
stc
inc
cmps
call
sbb
cmp
xor
popf
sar
mov
(bad)
call
test
sbb
pop
mov
pusha
(bad)
stc
ds
popa
mov
lds
cmp
call
cld
xor
fstp
lods
inc
pop
mov
push
mov
sar
sti
hlt
or
pop
sar
out
mov
mov
pop
aam
cli
or
in
inc
ret
sti
mov
(bad)
das
pop
in
ds
sbb
xchg
(bad)
and
push
retf
cld
cmp
xlat
nop
das
dec
push
cmp
sti
cdq
test
div
xchg
jb
sbb
push
movs
push
lods
(bad)
mov
(bad)
pop
xchg
dec
fscale
addr16
aas
es
push
ss
in
nop
lahf
xchg
std
retf
je
dec
(bad)
(bad)
(bad)
inc
jno
test
mov
das
bound
scas
enter
not
cmp
(bad)
pop
sub
cld
(bad)
push
jl
cmp
cmp
jb
cwde
sahf
ins
hlt
jo
push
xchg
(bad)
jmp
jno
sahf
cmc
xchg
jnp
scas
pop
out
adc
int3
arpl
(bad)
(bad)
(bad)
jmp
mov
retf
mov
repnz
cli
dec
sbb
jl
popf
fld
repnz
int
push
outs
into
add
jl
xchg
aad
sbb
sbb
mov
xor
(bad)
push
std
mov
sub
adc
int
loopne
pop
and
sbb
xchg
lods
addr16
cdq
mul
iret
aaa
inc
aam
pop
and
sub
nop
push
mov
cmps
(bad)
(bad)
call
std
inc
fsubr
push
cmp
jns
adc
int3
fstp
jmp
repnz
mul
add
mov
into
and
cmp
(bad)
xchg
or
(bad)
mov
add
iret
dec
inc
into
xchg
ret
mov
mov
mov
(bad)
(bad)
fistp
push
sub
jge
js
dec
sahf
int
int3
pop
mul
pop
lods
retf
lea
ds
call
jns
enter
(bad)
das
idiv
outs
jmp
bound
xlat
sub
dec
mov
jne
(bad)
mul
push
(bad)
jmp
nop
sti
loop
sbb
or
fld
cmp
rcl
jecxz
xor
(bad)
fild
xor
jecxz
les
mov
xchg
outs
adc
std
mov
xchg
xchg
(bad)
(bad)
jmp
in
jmp
inc
cmp
push
adc
push
clc
mov
jg
jge
outs
push
jp
lock
adc
sbb
fidivr
xor
xchg
cld
mov
ret
jmp
popf
mov
dec
jecxz
pop
jl
xchg
xor
in
addr16
mov
shl
add
inc
adc
or
(bad)
jmp
jnp
cmp
push
pop
push
fs
cmps
addr16
lods
es
jecxz
int3
jbe
add
(bad)
out
in
ret
pop
into
fidivr
je
push
push
inc
sub
js
jns
push
cld
push
sbb
xor
push
bound
iret
xchg
cld
outs
push
mov
rcr
add
inc
(bad)
ret
les
pop
push
pop
xchg
push
mov
xchg
jecxz
cld
sub
stos
scas
std
push
pcmpeqd
mov
mov
cld
(bad)
dec
iret
xchg
cmp
aam
jne
mov
call
shl
jmp
cmp
hlt
loope
push
data16
(bad)
(bad)
dec
push
dec
(bad)
sar
jnp
dec
xor
mov
out
jne
imul
add
lds
cs
(bad)
dec
xchg
mov
pop
jmp
imul
mov
cmp
stc
icebp
jae
sub
inc
outs
clc
(bad)
call
call
pop
mov
das
out
call
(bad)
jmp
shl
imul
test
ret
dec
icebp
movs
cdq
cmp
inc
dec
(bad)
dec
jle
outs
inc
scas
stc
das
ja
out
ret
cmps
movs
scas
and
push
cli
jno
mov
(bad)
(bad)
dec
mov
stos
xchg
sbb
stc
xor
jmp
dec
sar
dec
inc
push
jmp
and
jg
(bad)
jmp
pop
imul
ds
lock
lock
int3
mov
push
(bad)
(bad)
(bad)
(bad)
in
mov
iret
(bad)
pushf
push
test
mov
shr
cld
xchg
dec
(bad)
(bad)
out
cli
pop
inc
ss
push
or
xor
cld
jge
outs
add
jae
(bad)
mov
scas
jg
repnz
in
jnp
mov
out
(bad)
jmp
pop
(bad)
sbb
loop
cmc
shl
mov
scas
out
lock
call
idiv
mov
pushf
enter
push
dec
pop
jg
pop
std
retf
std
rcr
pop
pushf
ja
jp
fnsave
adc
and
ins
loope
call
not
out
bound
and
or
jmp
push
aas
sahf
inc
cli
jp
push
lock
ret
jp
hlt
rcl
std
pushf
popa
jnp
inc
(bad)
imul
call
cmps
inc
rol
lods
call
xor
jns
cli
(bad)
pop
dec
jle
inc
push
xchg
mov
out
fisttp
sti
cmp
push
and
enter
(bad)
(bad)
(bad)
push
(bad)
cs
js
pop
aad
pop
ds
jmp
rcr
xchg
jp
aaa
cmc
(bad)
(bad)
(bad)
jmp
mov
and
inc
fucom
sahf
stos
and
pop
out
mov
add
stos
imul
gs
aas
cld
xchg
(bad)
clc
push
(bad)
(bad)
(bad)
(bad)
jns
pushf
fwait
clc
sbb
xchg
in
aas
jmp
sub
xchg
pop
xor
cli
adc
aam
cmps
dec
inc
cmc
adc
(bad)
inc
cmp
jge
pop
push
cs
aaa
mov
mov
in
inc
clc
out
jge
fild
fisub
mov
push
cmps
(bad)
(bad)
(bad)
jmp
es
mov
cmovne
cmp
les
addr16
dec
loop
bnd
(bad)
repz
(bad)
inc
test
cmc
das
mov
aas
bound
stc
mov
(bad)
(bad)
call
outs
mov
js
shr
leave
jmp
pop
cld
addr16
jmp
jecxz
xor
pushf
int
sub
adc
movs
fild
dec
jmp
fild
(bad)
jge
aas
mov
call
into
mov
push
ss
imul
push
das
jle
sbb
(bad)
(bad)
in
outs
std
idiv
dec
jmp
fstp
mov
mov
mov
call
outs
stc
in
mov
jb
sub
mov
out
mov
pushf
mov
les
cmp
jmp
(bad)
push
ret
fimul
jne
pop
push
sub
(bad)
in
lods
cmp
lods
call
fisubr
pop
fist
jmp
(bad)
(bad)
cld
(bad)
jmp
push
repnz
addr16
movs
retf
push
jnp
inc
cmc
cld
push
lods
lods
fistp
mov
xchg
mov
xchg
scas
jbe
(bad)
mov
cmp
sub
sti
test
int3
mov
push
cld
pop
nop
scas
jno
and
(bad)
mov
enter
jle
adc
push
adc
addr16
in
jmp
sbb
dec
cmps
xchg
loop
call
push
(bad)
(bad)
outs
mov
scas
out
stc
jmp
cmc
fcomip
call
xchg
or
pushf
sar
jo
ds
mov
xlat
lahf
out
mov
(bad)
call
push
adc
in
stos
std
cmp
fsubr
(bad)
lea
adc
cdq
les
(bad)
xchg
pop
(bad)
fcomip
dec
or
in
sbb
xchg
in
fist
fsubr
ins
js
jne
(bad)
call
bound
int
push
mov
iret
lea
jno
lds
aaa
mov
ficomp
mov
mov
or
outs
repnz
inc
or
int
(bad)
fld
retf
pop
ja
clc
push
out
lds
cmp
out
data16
adc
repz
xchg
mov
das
(bad)
(bad)
jmp
mov
xchg
fild
xor
(bad)
or
cmp
mov
repnz
xor
(bad)
(bad)
(bad)
cmp
jbe
ss
leave
jne
jne
xlat
ja
xchg
adc
xor
dec
xchg
cmp
(bad)
mov
jns
fcomip
out
clc
movs
dec
cwde
addr16
push
mov
sbb
loop
jae
test
cmc
or
or
xor
jae
loop
add
fld
mov
mov
xchg
dec
(bad)
(bad)
(bad)
(bad)
out
jmp
inc
(bad)
push
inc
or
out
dec
push
ss
imul
pop
mov
(bad)
(bad)
(bad)
(bad)
std
sub
sbb
inc
add
aaa
pop
fcomp
mov
mov
outs
add
mov
pop
data16
sti
cmc
dec
jmp
sar
leave
mov
leave
in
push
mov
xor
(bad)
scas
js
hlt
data16
or
loopne
popf
out
dec
(bad)
dec
stc
jg
fwait
dec
cmp
not
push
jmp
adc
enter
xchg
mov
(bad)
(bad)
mov
leave
sub
cmp
jne
fild
xlat
or
mov
lea
mov
dec
sti
ss
or
(bad)
(bad)
push
push
int3
out
mov
paddd
fmul
jo
movs
mov
pop
scas
cdq
enter
cmps
ds
(bad)
(bad)
jmp
(bad)
cmp
mov
add
hlt
popa
fcomp
push
jmp
or
cmp
int3
fcomp
call
repz
dec
jnp
and
pop
fcom
imul
add
dec
mov
xchg
and
aad
dec
nop
cs
adc
aaa
cld
jmp
lds
or
lock
out
pop
xchg
push
outs
dec
add
(bad)
(bad)
(bad)
call
test
inc
sbb
cmp
out
rcl
push
out
xor
mov
cs
js
sub
(bad)
jg
xchg
(bad)
fimul
jle
push
add
xor
pop
jmp
pop
push
popa
push
cmps
ja
pop
adc
loop
pop
mov
(bad)
jmp
in
stos
fisubr
icebp
aad
out
add
inc
es
scas
das
clc
jmp
cli
cmp
cmc
add
push
cmp
in
(bad)
dec
aad
inc
mov
stc
sub
(bad)
jle
adc
or
push
push
repz
(bad)
jmp
add
jnp
and
mov
xchg
imul
mov
jb
(bad)
mov
rol
jge
out
mov
idiv
xlat
stos
(bad)
push
jmp
cmp
jne
sub
pop
inc
popf
sub
push
(bad)
call
push
cmp
in
push
in
pop
pushf
mov
sahf
bound
or
bound
int
mov
call
sbb
xchg
loop
(bad)
(bad)
push
dec
les
mov
inc
jne
push
mov
(bad)
aam
into
into
in
pop
addr16
adc
loop
xchg
jmp
push
clc
jl
jmp
mov
popf
push
pop
sub
test
jg
(bad)
xor
inc
icebp
enter
test
mov
xor
cs
push
std
lock
push
ins
repz
and
xchg
pop
add
push
adc
fild
ds
mov
xor
mov
mov
daa
mov
lods
test
jecxz
(bad)
(bad)
mov
jmp
mov
mov
cmc
sub
and
addr16
sub
imul
aas
jns
ret
mov
add
dec
add
(bad)
stos
adc
jnp
cmp
aad
mov
jl
not
pop
xchg
cmp
cmc
iret
sub
(bad)
dec
jne
dec
out
ins
dec
iret
je
sub
les
sti
cmp
int3
(bad)
mov
sbb
aad
xchg
sar
push
jbe
pop
mov
sub
cwde
mov
(bad)
jmp
cld
dec
mov
cmp
aas
into
clc
and
jae
mov
xchg
iret
pop
std
cmp
in
(bad)
jmp
(bad)
stc
mov
dec
ret
mov
cmp
jnp
xchg
jae
add
pushf
cmp
inc
adc
mov
fst
rcl
scas
cli
(bad)
in
lods
arpl
retf
aad
movs
stos
xor
mov
dec
cld
push
and
add
xlat
sbb
dec
push
cli
and
bound
neg
ja
fstp
dec
outs
lock
scas
pop
pop
push
fidiv
(bad)
(bad)
call
int3
jg
mov
ins
and
cmps
adc
push
div
addr16
pop
jecxz
jmp
cli
xchg
mov
mov
sbb
mov
sbb
repz
rcr
ds
sub
movs
sub
(bad)
call
(bad)
jmp
adc
cmp
aaa
sbb
sub
inc
cdq
pop
gs
aam
std
pop
cmp
fcomp
dec
inc
mov
mov
sbb
(bad)
leave
hlt
addr16
mov
xor
cwde
fwait
in
mov
add
out
dec
mov
cmps
arpl
jl
pop
(bad)
cmp
aad
(bad)
(bad)
(bad)
(bad)
cmp
xchg
cmp
jmp
jmp
mov
popf
sbb
or
mov
and
in
jnp
stos
push
test
pushf
mov
(bad)
push
pslld
and
sub
xchg
jecxz
jmp
xcrypt-cfb
cmps
es
movups
outs
cmp
(bad)
(bad)
jmp
fidivr
xor
ja
jg
hlt
stos
cmp
cmp
jle
ret
(bad)
fldlg2
(bad)
jmp
add
loop
enter
inc
sub
mov
addr16
outs
das
xchg
mov
out
retf
retf
jnp
mov
or
popa
mov
(bad)
(bad)
std
enter
mov
cmp
data16
jno
pop
mov
(bad)
cmp
or
mov
cmp
ja
iret
sti
push
ins
dec
cmp
mov
or
out
ins
addr16
(bad)
jg
dec
inc
outs
ret
inc
loop
mov
clc
repz
aam
mov
mov
inc
jne
mov
mov
sub
(bad)
(bad)
(bad)
stc
push
inc
cmp
retf
aad
aaa
xchg
sti
mov
rcr
dec
test
hlt
in
mov
loopne
xchg
jbe
dec
(bad)
jge
push
dec
arpl
out
adc
sbb
jl
clc
and
arpl
xchg
cld
loopne
mov
int3
mov
inc
(bad)
sti
jl
push
scas
push
jg
loopne
mov
cmp
repnz
call
push
in
mov
pop
pop
aad
loope
rcr
adc
xchg
push
jmp
out
clc
inc
sti
cmp
(bad)
fstp
jge
movs
cld
repnz
mov
mov
aaa
stos
adc
arpl
lock
adc
loopne
cmp
sbb
dec
sti
jmp
mov
sahf
push
outs
in
enter
adc
lahf
push
sar
inc
(bad)
(bad)
jle
in
cmp
sbb
loope
lds
xchg
mov
jb
es
stc
out
mov
inc
cld
mov
call
in
enter
adc
push
mov
das
push
mov
jb
jle
mov
hlt
scas
pop
mov
pop
or
leave
pop
sub
out
cmp
(bad)
(bad)
jg
mov
neg
ret
ror
fnstcw
dec
adc
imul
xchg
cmp
(bad)
(bad)
call
mov
push
ret
jnp
stos
adc
ret
cli
les
(bad)
cmp
call
or
mov
cld
(bad)
hlt
cmp
or
cmps
sub
loopne
inc
jp
(bad)
(bad)
(bad)
inc
hlt
mov
dec
repz
in
(bad)
imul
sahf
pusha
pop
ror
xchg
jl
mov
cmp
(bad)
(bad)
(bad)
fisubr
mov
lock
pop
das
jb
jge
mov
(bad)
pop
jl
or
std
out
stos
in
inc
add
(bad)
aas
sbb
sub
dec
jae
shl
fsincos
pusha
ins
xchg
repz
lahf
sbb
jge
pop
(bad)
(bad)
inc
pushf
push
cli
jbe
jecxz
stos
mov
scas
fcmovu
repz
jge
xchg
loop
(bad)
(bad)
jg
ds
mov
mov
push
test
jg
(bad)
cld
mov
stc
in
xor
(bad)
(bad)
jmp
int
jns
in
jp
outs
aas
loop
jg
retf
mov
jmp
fld
mov
(bad)
(bad)
jmp
mov
out
mov
enter
dec
push
jnp
rcr
out
push
jnp
cld
xchg
push
(bad)
scas
repz
lods
ret
aaa
sub
pop
scas
les
outs
pop
and
call
(bad)
lock
cld
cli
pop
adc
sub
std
scas
cmp
mov
inc
xor
and
fsubr
mov
inc
pushf
scas
pushf
mov
(bad)
push
and
call
aaa
fidiv
ror
outs
sbb
dec
inc
cld
xchg
jns
fbld
out
(bad)
cmc
sbb
sub
cmp
add
jmp
(bad)
jmp
pop
(bad)
mov
xor
inc
js
outs
xor
xchg
test
inc
jne
ins
adc
clc
mov
pop
les
aam
ret
mov
mov
(bad)
(bad)
retf
lods
nop
pop
sub
cli
pushf
and
adc
call
fadd
mov
retf
clc
dec
adc
lock
(bad)
(bad)
(bad)
jmp
add
out
xlat
ja
out
(bad)
push
std
sahf
push
cmps
enter
outs
out
aad
xchg
pop
call
(bad)
(bad)
mov
aas
pop
pusha
pop
jb
cmps
sub
retf
bound
pop
xor
cmps
out
jmp
in
pushf
iret
push
cld
out
or
shl
inc
xchg
(bad)
and
stc
inc
(bad)
adc
adc
leave
sahf
mov
mov
(bad)
call
push
test
int
std
int
mov
into
add
mov
or
out
mov
arpl
lahf
mov
dec
mov
mov
(bad)
adc
(bad)
(bad)
(bad)
(bad)
js
sub
call
xchg
inc
sahf
mov
push
lods
lods
rol
cmp
(bad)
cmp
inc
in
sub
sti
jb
rcr
repnz
pop
out
cmc
jle
(bad)
call
mov
sti
jmp
push
fucomip
cmp
(bad)
mov
jmp
cli
dec
fcomp
(bad)
mov
mov
mov
mov
(bad)
fcomip
jecxz
adc
stos
(bad)
icebp
jae
jp
outs
push
loop
mov
daa
(bad)
push
inc
into
pop
cmp
fild
push
mov
add
mov
stos
ret
(bad)
push
and
aas
mov
jne
adc
pop
sar
repz
adc
pop
push
cli
inc
sub
clc
sbb
jae
call
xchg
std
pop
fdivr
shl
in
fidivr
xchg
jnp
(bad)
(bad)
call
in
pushf
mov
mov
std
sub
test
pop
fdiv
cmc
repz
aad
push
retf
test
cmc
push
cli
push
inc
aaa
jge
enter
inc
dec
test
clc
(bad)
(bad)
jg
repnz
popw
addr16
pop
cmc
in
(bad)
mov
jle
jbe
fcos
jg
and
xchg
enter
(bad)
xor
loop
inc
sub
call
xor
aam
sub
sbb
scas
mov
xchg
mov
daa
(bad)
xchg
(bad)
fild
adc
hlt
fdivr
das
dec
jl
loop
(bad)
(bad)
jmp
mov
sub
mov
jmp
jno
ds
cld
icebp
push
shr
leave
mov
jae
das
mov
(bad)
(bad)
call
test
sbb
je
(bad)
movs
cli
sar
popf
aam
sar
mov
and
sub
(bad)
(bad)
(bad)
ds
cmc
in
daa
cld
(bad)
pop
stos
sti
fdivrp
lods
xchg
jg
pushf
pop
pop
jge
mov
(bad)
call
sub
out
lahf
imul
jg
mov
(bad)
(bad)
jg
les
outs
jne
adc
fcomp
dec
into
push
jnp
jp
xchg
into
cmps
popf
call
adc
mov
ins
(bad)
xlat
lahf
sub
mov
(bad)
jg
lahf
(bad)
(bad)
fscale
jg
(bad)
mov
jmp
js
xlat
adc
push
(bad)
dec
retf
jae
jle
pop
xchg
outs
int3
inc
sar
pop
std
(bad)
jns
movs
(bad)
jns
aam
pop
aas
cmps
pop
jecxz
jmp
std
mov
(bad)
(bad)
inc
enter
sar
mov
lods
push
dec
out
jns
iret
scas
sar
(bad)
(bad)
(bad)
jmp
inc
mov
std
mov
in
xlat
push
ss
jns
jb
and
aas
scas
(bad)
fcmovnu
icebp
jecxz
jns
ficomp
imul
out
lods
test
jne
bound
mov
xchg
(bad)
imul
ins
sahf
(bad)
out
cs
jb
pop
and
inc
mov
loop
cmp
or
fdivrp
loopne
jl
pop
mov
sub
pop
(bad)
(bad)
(bad)
(bad)
cli
xlat
cmp
pop
in
or
daa
xor
sar
idiv
jecxz
mov
and
(bad)
(bad)
inc
loope
leave
dec
test
ds
pop
mov
stc
ins
xchg
sti
(bad)
(bad)
clc
xchg
cmp
inc
leave
out
xchg
imul
sti
pop
fs
mov
mov
call
pop
lahf
loop
push
rcl
inc
loop
jmp
in
sti
fnstenv
out
test
pop
test
(bad)
jmp
adc
js
jbe
sti
mov
cmp
pop
dec
push
inc
jecxz
stos
pusha
loop
cli
pop
jmp
leave
inc
js
inc
(bad)
(bad)
(bad)
sti
mov
in
fdivr
dec
out
das
idiv
inc
std
jp
(bad)
fild
inc
and
call
mov
cld
jg
cmp
retf
xor
(bad)
jno
jb
addr16
clc
(bad)
jle
mov
iret
dec
popf
out
adc
and
scas
(bad)
(bad)
mov
xchg
repz
in
sar
push
lock
scas
and
cmp
(bad)
(bad)
(bad)
std
sti
and
mov
das
xchg
(bad)
cli
inc
fidivr
clc
ja
cmp
mov
or
mov
jg
repnz
xor
adc
mov
jl
std
(bad)
(bad)
inc
fs
ret
pop
xlat
and
inc
ins
in
mov
inc
into
dec
dec
retf
repz
mov
div
cs
mov
lods
inc
sti
mov
mov
shl
idiv
(bad)
clc
mov
inc
xchg
(bad)
mov
(bad)
mov
adc
(bad)
(bad)
mov
call
pushf
mov
mov
popf
fs
mov
fs
leave
stc
mov
xor
clc
arpl
push
movs
popf
push
(bad)
(bad)
(bad)
mov
fnsave
push
jmp
hlt
cmp
fisttp
div
cmc
jns
mov
clc
(bad)
in
sbb
fiadd
fisub
mov
dec
pusha
sbb
icebp
sbb
inc
in
(bad)
(bad)
jmp
xchg
jl
clc
inc
repnz
stos
mov
dec
mov
pop
jne
mov
xchg
mov
(bad)
(bad)
jmp
mov
mov
inc
jg
adc
hlt
stc
(bad)
jge
fisub
(bad)
(bad)
call
les
aas
test
inc
cmp
sti
push
mul
mov
dec
neg
pop
icebp
pop
ja
stos
(bad)
inc
and
fild
dec
out
xchg
inc
(bad)
cmp
(bad)
push
dec
pop
(bad)
(bad)
(bad)
jg
sub
clc
fadd
mov
iret
push
mov
mov
cmp
mov
mov
call
push
ja
out
and
sahf
push
jecxz
mov
fbld
neg
(bad)
call
int3
mov
dec
div
jge
adc
and
mov
fild
push
mov
dec
pop
add
outs
xor
cmc
xor
or
das
gs
push
push
repz
aaa
outs
ds
push
jmp
(bad)
(bad)
fild
pop
aas
jmp
cs
fs
bound
push
sti
cwde
fadd
dec
(bad)
in
or
mov
dec
in
jmp
call
call
loopne
sbb
pop
and
mov
xor
sub
pop
mov
pop
jmp
dec
loop
adc
mov
jle
(bad)
(bad)
mov
pop
or
std
pop
call
jle
test
add
cmp
or
mov
jmp
(bad)
jg
mov
jg
mov
aas
repnz
addr16
dec
xchg
jmp
sub
pushf
aam
fdivp
jmp
mov
pop
(bad)
enter
pop
(bad)
cmp
gs
ds
jle
ja
aaa
jo
jns
mov
leave
mov
fwait
les
jg
lds
stos
sub
int3
imul
pop
hlt
(bad)
(bad)
(bad)
jg
push
retf
sti
fidiv
in
fisttp
into
inc
in
jmp
push
(bad)
mov
adc
loop
xlat
jae
call
ins
push
push
or
lahf
xchg
cmp
jp
cmp
pop
pop
cdq
cwde
call
cmp
ins
pop
pop
in
bswap
idiv
(bad)
mov
dec
movs
aaa
or
repz
js
dec
lock
jg
add
lea
nop
push
vmulps
fsubr
mov
je
jg
call
pushf
cmps
addr16
jns
call
jg
cmc
aaa
xor
push
leave
(bad)
(bad)
(bad)
mov
sar
rcl
xor
cmp
rcl
aam
pop
push
cmp
inc
outs
cld
xor
adc
dec
out
xor
cmp
arpl
arpl
mov
push
in
cmp
dec
dec
sub
retf
add
jbe
and
xor
jl
mov
and
(bad)
call
es
iret
cmc
mov
push
push
push
retf
fld
aad
sbb
jle
cmp
jecxz
popa
int
(bad)
(bad)
out
mov
push
icebp
xchg
fmul
jmp
repnz
xchg
ss
xchg
scas
ds
mov
add
inc
into
jge
clc
pop
mov
add
repnz
dec
jp
push
enter
(bad)
jmp
ins
cld
adc
ret
pop
pop
dec
cmp
aad
add
sbb
clc
pop
inc
repnz
fcos
jmp
jnp
jge
fnstenv
jle
mov
ds
popa
cs
jmp
(bad)
inc
dec
(bad)
jo
sar
cmps
dec
ins
adc
dec
test
or
rcr
adc
jmp
add
xlat
xchg
repnz
rcl
cs
jp
pop
adc
(bad)
inc
adc
pop
mov
mov
sbb
fist
retf
xchg
call
or
sti
shl
sar
xchg
sbb
pop
stc
jmp
pop
jl
(bad)
(bad)
(bad)
mov
lahf
push
nop
lds
adc
xchg
and
mov
and
mov
scas
adc
mov
fimul
jmp
int3
cmp
(bad)
dec
or
mov
(bad)
mov
fimul
jg
jg
addr16
aam
iret
fwait
into
add
pop
ins
cmc
jl
or
push
(bad)
(bad)
mov
or
in
push
inc
test
xchg
addr16
mov
sbb
(bad)
mov
ret
fisttp
into
gs
mov
xchg
and
mov
call
pop
movs
adc
bound
jmp
or
mov
mov
jmp
push
sub
sub
jno
mov
xor
mov
imul
pop
out
xchg
mov
arpl
icebp
inc
sbb
in
push
stc
retf
cmp
daa
loop
mov
inc
ficomp
push
out
es
into
pop
(bad)
(bad)
(bad)
mov
cmps
sbb
test
hlt
push
dec
sar
jecxz
sub
add
loope
dec
mov
hlt
(bad)
(bad)
dec
mov
stos
mov
jne
or
lahf
ret
xchg
mov
mov
(bad)
(bad)
fistp
loope
std
hlt
pop
push
cli
xor
sub
js
add
(bad)
out
xchg
hlt
cmps
es
inc
pop
xchg
mov
lock
retf
cld
push
stc
sbb
inc
test
ins
in
xchg
aam
pop
inc
test
jae
iret
jbe
outs
sar
in
jle
call
iret
int3
mov
xchg
push
sti
repz
mov
(bad)
push
into
cmp
inc
cmp
sbb
mov
mov
add
ret
sar
outs
daa
lods
mov
std
(bad)
stos
pop
test
iret
pop
or
ror
(bad)
jg
and
pusha
in
scas
loopne
push
sub
sub
sbb
inc
movs
inc
mov
(bad)
(bad)
jg
and
jns
xlat
aas
push
dec
call
mov
scas
mov
in
mov
lods
into
jmp
jmp
push
cmp
call
les
fcomp
(bad)
fistp
scas
shr
mov
lods
or
call
jmp
out
xlat
lea
cmp
inc
cmp
inc
data16
lock
lea
movs
int
sbb
fucomi
mov
(bad)
mov
pop
lds
inc
add
adc
inc
cmp
xor
push
(bad)
(bad)
(bad)
jmp
rcl
scas
xchg
addr16
cmp
xchg
mov
xor
pop
push
rcl
(bad)
xchg
shr
pop
cmp
out
into
ja
mov
mul
push
push
out
int
(bad)
(bad)
call
sar
mov
cld
jno
rcl
cli
mov
jo
ficomp
nop
call
pop
push
das
fwait
jb
imul
pop
dec
minps
mov
xor
sar
call
popf
(bad)
xor
xor
pop
dec
or
mov
pop
arpl
bound
or
sub
loop
je
js
push
or
add
(bad)
(bad)
push
daa
push
pop
repnz
push
lea
jne
js
iret
arpl
or
sub
psadbw
jne
jmp
dec
loopne
dec
jmp
xor
mov
int3
(bad)
(bad)
dec
ret
sub
les
sbb
jmp
rcr
scas
(bad)
(bad)
(bad)
call
jg
lahf
dec
sahf
and
lock
rcr
in
mov
outs
mov
movs
cmc
(bad)
(bad)
out
cli
fsubr
push
(bad)
stc
inc
cmp
loopne
lea
loope
inc
sbb
and
pop
lock
(bad)
jnp
test
cmp
in
xor
in
mov
lods
push
popf
(bad)
(bad)
(bad)
call
aam
(bad)
shl
cmps
fs
imul
mov
add
xor
add
ja
fisttp
(bad)
(bad)
(bad)
jmp
aaa
(bad)
lahf
(bad)
pop
and
leave
cmp
mov
inc
pusha
aas
retf
cdq
icebp
data16
fnstenv
fisttp
mov
loopne
or
fbld
inc
pop
lahf
(bad)
(bad)
fcomip
sti
cmp
out
mov
mov
push
mov
les
(bad)
stc
loopne
cmp
add
(bad)
(bad)
call
out
or
arpl
scas
pop
in
mov
fsub
mov
jae
inc
cmc
or
sub
(bad)
jnp
mov
or
aad
iret
sbb
js
neg
lahf
stos
(bad)
cmc
mov
icebp
jp
mov
(bad)
fadd
mov
push
sub
dec
pop
outs
cmovle
ds
aas
jnp
xor
out
(bad)
mov
cli
(bad)
jmp
jmp
dec
cmp
add
aaa
inc
mov
cs
(bad)
sub
inc
ds
lds
pop
popa
sahf
hlt
mov
inc
mov
femms
test
sub
shr
fiadd
test
scas
test
adc
adc
adc
daa
es
(bad)
(bad)
(bad)
call
cld
lahf
adc
mov
cmc
nop
in
popa
cld
xor
xor
je
imul
mov
cld
jge
push
cmp
mov
and
cmp
jmp
push
(bad)
shl
nop
scas
clc
jno
ficom
jmp
pop
jo
in
in
(bad)
(bad)
(bad)
inc
sti
mov
xchg
xchg
outs
jmp
int3
push
jecxz
mov
out
out
(bad)
mov
clc
(bad)
push
inc
jno
dec
sti
rcl
sub
lahf
in
pop
jmp
jg
jmp
hlt
pop
sar
lahf
dec
shl
test
cwde
outs
mov
add
inc
sub
mov
pop
(bad)
(bad)
(bad)
jg
mov
dec
mov
mov
retf
xlat
mov
mov
jmp
jns
xlat
(bad)
(bad)
jmp
push
jno
(bad)
dec
pop
xchg
lock
mov
mov
add
xor
cmp
lods
mov
nop
xlat
jle
fcomp
ins
ds
fist
mov
(bad)
(bad)
jmp
iret
test
jbe
aad
add
push
in
loope
cdq
rol
pop
call
(bad)
(bad)
dec
xchg
and
ja
daa
call
jmp
inc
in
mul
xor
(bad)
fsub
test
or
pop
pop
les
clc
jge
fwait
(bad)
(bad)
(bad)
call
clc
push
call
cld
inc
test
xchg
fiadd
aam
test
(bad)
dec
hlt
(bad)
(bad)
push
sub
aam
xor
sub
dec
jecxz
out
mov
in
(bad)
(bad)
(bad)
fistp
mov
mov
into
add
psrlq
sbb
fsub
bound
ror
arpl
pop
sub
repz
scas
icebp
push
sbb
pushf
(bad)
scas
fdivrp
inc
inc
or
mov
(bad)
(bad)
(bad)
push
dec
fnstsw
xor
mov
pusha
int3
mov
or
stos
test
pop
xchg
and
cmc
(bad)
mov
iret
push
ret
cmps
push
mov
add
nop
repnz
(bad)
(bad)
call
sbb
xor
mov
pop
loop
dec
or
mov
dec
ss
dec
cmp
inc
mov
mov
fucomp
mov
or
pop
movs
jne
sub
sbb
gs
fcmovu
sahf
cmc
(bad)
(bad)
(bad)
mov
xor
cmp
or
iret
test
bnd
pop
imul
stc
mov
pusha
pop
aad
add
xor
mov
xchg
ss
and
retf
mov
out
(bad)
jg
push
adc
xlat
stos
cmc
gs
cld
in
gs
push
sahf
arpl
hlt
ret
jmp
pop
iret
out
cwde
mov
cli
or
mov
std
hlt
addr16
in
(bad)
cmc
adc
xchg
loope
jns
vmovq
(bad)
sbb
(bad)
call
push
sub
adc
pusha
sbb
pop
rsm
xchg
pop
xchg
mov
cmp
std
call
sahf
leave
cmp
lahf
cmp
xlat
mov
int
pop
cs
out
jo
(bad)
(bad)
(bad)
ffreep
cli
mov
inc
lods
fild
ins
push
(bad)
loop
dec
fsub
enter
fist
dec
xor
fcmove
or
push
aam
lock
pushf
ds
repnz
(bad)
(bad)
jmp
xchg
jnp
(bad)
or
push
push
pop
or
rcl
jmp
and
(bad)
(bad)
mov
and
out
jo
jecxz
xor
jnp
stos
and
(bad)
push
nop
jge
out
adc
imul
stc
jecxz
push
add
sub
cli
push
iret
std
jmp
call
(bad)
and
sbb
jb
stc
lods
(bad)
(bad)
(bad)
fisub
loop
ss
sub
repnz
(bad)
(bad)
mov
sub
xor
out
pop
(bad)
div
popa
into
(bad)
mov
or
jb
std
in
xchg
out
push
shr
hlt
(bad)
fistp
jecxz
loop
daa
cmp
cmp
xor
lods
cli
push
out
in
std
stos
cmp
ins
hlt
iret
jmp
cmc
call
pushf
mov
(bad)
ret
lock
cld
jb
push
int3
je
rcr
test
cld
imul
adc
int3
cmp
dec
jo
cmp
sub
dec
(bad)
(bad)
(bad)
push
int3
xor
and
jmp
push
ficomp
sub
div
xchg
jo
lds
das
adc
jmp
lock
aas
pop
leave
test
lea
adc
sahf
cmps
aad
push
(bad)
(bad)
out
sbb
mov
push
mov
fld
into
aaa
push
mov
(bad)
call
dec
fnsave
and
push
in
(bad)
je
cmp
fmul
daa
loopne
sar
rol
cld
sub
imul
dec
scas
(bad)
sbb
(bad)
jmp
mov
inc
stos
data16
popf
pop
inc
sbb
in
stos
lods
add
dec
dec
and
rcr
(bad)
(bad)
jmp
sahf
(bad)
stos
cdq
xor
out
xchg
mov
or
std
pop
mov
push
aam
push
inc
js
fcos
(bad)
(bad)
call
inc
or
mov
mov
jns
out
add
dec
test
lahf
cdq
push
daa
(bad)
(bad)
(bad)
(bad)
mov
idiv
sbb
jecxz
mov
add
pop
jge
into
add
mov
stc
and
jp
jmp
adc
mov
adc
pop
add
clc
enter
shl
xchg
mov
out
(bad)
(bad)
call
cli
sbb
xchg
or
sbb
(bad)
cmps
iret
cli
cmp
cmp
and
(bad)
(bad)
jmp
dec
das
je
cmp
xchg
pop
pop
jecxz
les
and
xchg
pop
popa
(bad)
call
cmp
and
push
int3
inc
(bad)
rcr
mov
dec
test
jae
(bad)
(bad)
(bad)
call
out
push
and
mov
aaa
test
les
test
push
iret
dec
imul
test
adc
shr
adc
jp
push
jg
push
cwde
(bad)
(bad)
(bad)
fbld
sub
iret
xchg
mov
sbb
xchg
inc
mov
jno
and
rcr
lahf
ret
adc
call
pop
jae
add
inc
leave
sti
gs
and
sbb
call
ret
imul
pop
mov
arpl
fnsave
call
sub
xor
(bad)
(bad)
(bad)
jmp
or
neg
cmp
js
mov
dec
scas
nop
mov
call
fnstsw
bound
cld
pushf
jp
fnstenv
mov
int
adc
(bad)
(bad)
inc
jp
jge
inc
xchg
jb
lahf
aas
lahf
outs
sub
rcl
pop
mov
(bad)
dec
fmulp
pop
xor
inc
in
push
or
mov
add
(bad)
std
in
xor
mov
in
push
pop
dec
and
popf
sbb
dec
loopne
lock
mov
fiadd
push
sub
jmp
and
mov
or
shl
add
(bad)
(bad)
(bad)
mov
adc
xchg
dec
repnz
retf
mov
popf
gs
dec
enter
(bad)
jg
adc
or
lods
scas
lods
inc
jmp
cld
fidivr
mov
(bad)
(bad)
call
test
push
mov
sbb
movd
scas
icebp
dec
mov
sbb
add
(bad)
mov
ja
mov
push
lods
dec
loopne
jbe
shr
(bad)
(bad)
dec
pop
stos
jnp
in
out
jp
sbb
jnp
gs
inc
ds
js
mov
(bad)
call
movs
inc
inc
fadd
mov
mov
outs
and
das
jbe
cld
xor
jmp
dec
(bad)
(bad)
(bad)
mov
xor
mov
jg
jns
outs
loop
mov
mov
dec
adc
imul
shl
fcom
and
or
iret
push
mov
sbb
mov
mov
arpl
cmp
enter
out
push
cld
(bad)
imul
xchg
mov
inc
aas
and
outs
cli
(bad)
call
repz
sbb
sbb
repnz
mov
cmp
jg
outs
jno
push
sbb
call
sub
outs
mov
popf
push
dec
jmp
xchg
mov
les
mov
call
(bad)
iret
aam
sbb
mov
sub
fdivr
cmp
mov
aad
jp
cld
xchg
sbb
out
adc
adc
push
cld
(bad)
(bad)
(bad)
(bad)
stc
cmp
pop
loope
jnp
(bad)
fbld
dec
lock
add
jnp
retf
adc
sti
xor
(bad)
(bad)
cmp
fisttp
fadd
jns
push
or
jg
dec
xchg
and
cmc
mov
enter
jmp
imul
adc
add
(bad)
call
mov
leave
mov
sub
repnz
inc
pop
sbb
dec
pop
cmp
xchg
test
xor
xchg
dec
ficom
jp
sbb
mov
(bad)
(bad)
jmp
xor
dec
push
test
xor
fs
pop
jmp
sub
pop
push
fwait
test
adc
dec
cld
jmp
pop
addr16
popf
push
mov
stc
or
dec
ret
cmp
in
lods
pop
mov
add
(bad)
(bad)
(bad)
(bad)
fsub
dec
and
icebp
push
in
fistp
retf
stc
push
sbb
ins
mov
jb
add
mov
inc
sahf
cdq
jl
push
jle
clc
cmp
call
xor
imul
out
clc
add
mov
sar
daa
enter
icebp
adc
adc
call
mov
iret
push
xor
dec
cmps
aaa
data16
out
clc
sub
or
cmps
sar
ja
add
call
cld
(bad)
cmp
pop
sbb
adc
push
retf
pusha
jl
out
stos
push
out
(bad)
(bad)
(bad)
jmp
imul
nop
clc
repnz
push
jo
mov
jmp
mov
pop
fcom
scas
aad
sar
(bad)
push
call
aaa
sub
inc
(bad)
(bad)
push
pop
hlt
sbb
aam
push
cmp
and
pop
aad
cdq
ja
(bad)
(bad)
fdivr
mov
pop
sti
mov
test
xor
pop
cmp
outs
push
ficom
(bad)
call
ret
lahf
xchg
cpuid
sbb
add
(bad)
(bad)
(bad)
(bad)
cmp
mov
cmp
ja
icebp
loope
scas
jae
add
(bad)
movs
xor
or
retf
inc
xchg
loop
jmp
sti
and
cmp
sar
addr16
dec
(bad)
mov
sahf
retf
mov
leave
stos
sbb
(bad)
(bad)
jmp
ss
fistp
push
inc
push
adc
jg
mov
mov
call
pop
mov
pop
loopne
stc
lods
sub
call
(bad)
out
daa
xor
mul
mov
jg
xor
rcl
scas
ret
mov
sub
(bad)
call
jmp
aas
das
clc
or
xchg
(bad)
jg
pop
xchg
repnz
out
pushf
je
shl
or
pop
fstp
icebp
push
push
cmps
pop
int
sti
xchg
dec
fdiv
jg
cmp
popf
dec
jecxz
jmp
adc
popf
add
xchg
bound
aaa
mov
(bad)
call
ret
xchg
push
mov
add
sbb
inc
xlat
pop
jo
jb
sahf
pop
adc
test
jae
dec
(bad)
(bad)
mov
cmp
mov
mov
test
loop
sti
adc
pop
lahf
cmp
cmps
repz
mov
data16
addr16
test
(bad)
(bad)
cmp
mov
mov
repz
cmp
xchg
dec
(bad)
(bad)
fild
jne
or
lods
or
jmp
mov
inc
jns
xchg
(bad)
sahf
lea
fisttp
jg
(bad)
movs
cmp
cs
(bad)
(bad)
(bad)
jge
mov
mov
or
jbe
test
or
cmp
push
xor
pop
sbb
pop
(bad)
dec
(bad)
lahf
mov
out
jae
hlt
xor
cmp
ja
inc
jecxz
jbe
sbb
sub
and
and
xor
sbb
push
popf
add
add
pop
(bad)
aad
pop
in
push
sub
mov
js
notrack
loopne
test
cmps
aad
xchg
outs
(bad)
jmp
push
cmp
out
and
(bad)
call
push
add
lods
jmp
push
loop
push
jmp
and
arpl
std
loopne
pop
loopne
pop
in
xchg
jp
adc
push
retf
mov
(bad)
mov
sub
fwait
aad
jns
je
leave
scas
(bad)
mov
(bad)
(bad)
(bad)
jmp
pop
mov
push
test
push
lods
pop
ficomp
pop
mov
xchg
push
out
int
jno
cmc
jae
(bad)
(bad)
push
ja
ror
jne
dec
dec
pushf
push
sub
cwde
jg
je
rcr
adc
(bad)
pop
add
in
rcl
jae
lahf
dec
xor
outs
jno
push
or
cld
jmp
and
out
pop
in
mov
xchg
adc
mov
(bad)
(bad)
mov
or
pop
xor
ins
fwait
cmp
add
or
xchg
fwait
out
jae
jnp
pop
xchg
mov
adc
jbe
scas
inc
jns
inc
(bad)
(bad)
(bad)
jmp
call
repnz
xor
inc
aas
mov
lahf
pop
jno
sub
xor
xchg
jg
gs
idiv
add
popf
mov
(bad)
(bad)
(bad)
dec
loop
jns
cmps
out
or
(bad)
mov
push
jbe
icebp
mul
(bad)
out
push
fistp
adc
inc
lock
sar
dec
scas
dec
neg
(bad)
cli
icebp
ins
pop
jecxz
(bad)
(bad)
jmp
jno
fs
cmps
ins
fiadd
nop
jg
lods
(bad)
pusha
xlat
sbb
jne
loop
clc
loope
adc
pop
(bad)
dec
cmp
fst
call
data16
xchg
loope
push
sub
xor
inc
hlt
and
(bad)
jmp
(bad)
aas
lds
mov
mov
aas
mov
div
sahf
fldcw
in
mov
mov
nop
bswap
dec
inc
jne
int
adc
(bad)
(bad)
(bad)
mov
mov
jns
adc
adc
dec
loop
sbb
pop
sub
mov
jmp
clc
call
je
addr16
jae
mov
mov
jmp
ins
push
inc
pop
popf
pusha
in
sub
jmp
sbb
scas
xchg
ja
jl
out
cmp
out
in
das
loopne
push
aam
(bad)
mov
and
js
out
daa
inc
aas
pop
cmp
jle
jnp
fmul
js
and
cli
call
iret
xlat
jmp
out
or
mov
mov
(bad)
mov
or
stc
mov
icebp
(bad)
mov
aas
mov
dec
push
lahf
cwde
clc
mov
arpl
sbb
adc
ss
push
rcr
lahf
jnp
(bad)
(bad)
mov
aad
jmp
ss
out
sar
jmp
icebp
cmps
cmps
push
loopne
jmp
iret
loope
fbld
test
xchg
dec
jp
mov
cmp
fdivr
cwde
xlat
xchg
lea
dec
jmp
(bad)
jg
cs
inc
lahf
xchg
mov
push
xchg
aaa
push
out
adc
mov
fcos
scas
xor
jp
test
call
aaa
imul
xor
cmp
sbb
imul
(bad)
push
xchg
mov
dec
dec
(bad)
call
sbb
jmp
mov
loope
pop
mov
xchg
sub
xchg
fldenv
out
xlat
imul
stos
fdivr
(bad)
(bad)
(bad)
out
mov
out
not
add
scas
loope
jbe
sub
adc
sbb
sub
jmp
sti
lods
outs
jmp
fld
(bad)
adc
and
jmp
mov
inc
enter
pop
es
int3
popa
push
repnz
call
push
mov
fisub
and
(bad)
dec
jg
arpl
out
cmc
ins
fwait
pop
jecxz
or
dec
(bad)
(bad)
(bad)
jg
sbb
inc
sbb
daa
mov
cli
jl
xchg
pop
pop
clc
ja
sub
xchg
and
mov
mov
fisub
out
or
xor
mov
(bad)
outs
xchg
scas
loop
cmp
cs
(bad)
mov
in
push
mov
jmp
dec
dec
xchg
aas
and
sub
daa
cmp
and
xchg
scas
mov
ret
jle
jle
sbb
(bad)
(bad)
call
retf
push
sub
arpl
dec
jns
cli
sbb
inc
cmp
gs
dec
aam
(bad)
(bad)
(bad)
fist
adc
aad
push
ror
(bad)
mov
jb
add
popa
in
adc
xor
pop
sub
retf
(bad)
mov
clc
imul
jnp
call
stos
popa
aas
(bad)
pop
(bad)
jmp
cmp
fnstcw
cs
cmp
mov
pop
inc
call
sbb
imul
lds
sahf
xchg
lods
jp
mov
or
jg
jp
xchg
pop
sub
cmc
fcomp
xor
jo
pushf
call
jo
add
push
fwait
popf
loop
sahf
mov
iret
(bad)
retf
xchg
outs
stos
cmc
(bad)
mov
ja
(bad)
(bad)
inc
pusha
mov
pop
sub
in
mov
repz
scas
cmc
adc
stc
jns
cmps
xor
mov
pop
cmp
es
ins
sbb
in
inc
(bad)
pop
mov
(bad)
(bad)
(bad)
inc
aas
or
ins
mov
mov
xor
jle
xor
cmp
jmp
ret
(bad)
jl
mov
popf
add
sub
ret
inc
sub
sbb
sub
gs
(bad)
(bad)
dec
lea
adc
dec
je
jp
inc
cld
xchg
mov
ins
sbb
mov
inc
sbb
xlat
loop
cdq
push
rcr
int3
div
jmp
(bad)
(bad)
call
mov
(bad)
sar
mov
movs
jge
pop
pop
in
adc
inc
jge
lds
scas
dec
jmp
sub
idiv
(bad)
(bad)
jg
sti
push
fidiv
icebp
std
cmp
pop
shr
mov
mov
cmp
xor
aaa
push
jl
in
clc
test
es
into
les
hlt
mov
mov
mov
add
push
jl
arpl
sar
cdq
mov
fistp
cld
jg
pop
inc
xchg
(bad)
enter
retf
ins
outs
jo
leave
outs
or
xor
cli
mov
leave
in
dec
sbb
push
mov
int
cs
mov
mov
fs
push
xor
mov
add
neg
call
cli
(bad)
push
fdivrp
xor
mov
mov
mov
sbb
jl
jmp
rol
jg
(bad)
inc
jecxz
mov
pop
jl
sbb
fs
sbb
ja
fnstcw
loop
fcomip
push
cmp
neg
aam
mov
ret
sti
or
lea
(bad)
(bad)
(bad)
dec
sar
fdiv
pusha
xchg
std
dec
cmp
cmp
mov
mov
(bad)
jmp
cmp
push
fidivr
mov
sub
jge
icebp
lods
jle
sbb
dec
loop
sub
shl
jmp
push
(bad)
(bad)
jmp
push
test
fwait
cld
test
xor
shl
nop
xchg
ficom
pop
jbe
std
das
clc
popf
xchg
lea
clc
mov
jne
jae
mov
mov
in
push
call
imul
mov
ss
mov
dec
imul
popa
mov
in
jle
fidiv
jle
and
cmps
mov
xchg
lods
sub
mul
ds
pop
inc
iret
stos
jmp
dec
cmp
icebp
cmp
daa
mov
(bad)
(bad)
jmp
xor
clc
(bad)
pop
repz
(bad)
fidiv
popf
ret
mov
pop
inc
ret
jp
mov
loop
clc
mov
iret
pop
in
and
jg
imul
je
dec
xchg
inc
adc
jmp
mov
cli
pop
dec
dec
call
mov
jmp
inc
push
jg
mov
rcl
stos
nop
ds
cli
xor
das
push
call
cdq
cmps
jns
test
movs
push
(bad)
(bad)
(bad)
jmp
jle
mov
call
sub
xor
add
addr16
add
and
(bad)
stos
aas
imul
xor
(bad)
jmp
or
pop
test
jmp
mov
jecxz
pop
xchg
inc
std
add
(bad)
(bad)
(bad)
(bad)
jmp
and
jns
movs
or
xchg
pop
fsub
fldcw
ror
ret
sqrtps
fld
in
clc
aad
sbb
cdq
pop
and
jns
ror
lods
fcom
inc
mov
dec
(bad)
int
adc
and
js
sahf
call
(bad)
inc
call
scas
dec
xchg
jns
jl
adc
dec
iret
rcr
jl
imul
pop
jle
(bad)
mov
cmp
ror
cmps
push
std
shr
sbb
(bad)
jg
pusha
or
fsub
add
pop
pop
pop
mov
call
loopne
arpl
mov
mov
xor
idiv
adc
call
popa
les
or
pushf
jecxz
jns
xchg
and
aam
ficom
stos
add
movs
(bad)
(bad)
mov
xchg
jno
les
mov
imul
push
call
fdiv
sbb
sahf
cdq
aas
gs
mov
loop
xchg
lea
jne
scas
shl
in
out
(bad)
jmp
in
out
mov
ror
jle
and
stc
ds
not
or
mov
dec
inc
adc
pop
stc
or
iret
sar
imul
mov
call
and
stc
jae
je
ficomp
cmp
fbld
sti
jns
std
jmp
iret
sbb
out
mov
cld
fcomip
jmp
pop
dec
xor
adc
jl
repnz
jecxz
ficom
out
(bad)
push
popf
addr16
(bad)
mov
aaa
sub
fidiv
jecxz
mov
(bad)
(bad)
mov
xor
xlat
in
in
lock
lahf
dec
lock
(bad)
call
mov
enter
mov
mov
mov
cwde
sar
lock
pop
cmp
mov
jmp
outs
xor
mov
pop
cld
(bad)
(bad)
jp
mov
and
push
dec
fsubr
add
pusha
push
js
daa
ret
mov
sub
cli
jle
pop
sub
cmc
add
xor
cwde
(bad)
jo
loopne
dec
cli
(bad)
fild
cmp
xor
xchg
sbb
(bad)
out
mov
fsub
cli
inc
pop
cmp
in
lods
jae
jp
stos
pop
pop
jbe
sar
stos
ins
not
push
jmp
pop
out
cmp
push
into
scas
jb
mov
outs
(bad)
xlat
pop
mov
bswap
jmp
(bad)
jmp
div
pop
mov
loop
gs
fistp
add
sub
jge
fisttp
test
clc
pop
test
call
ror
loop
out
cmps
pop
(bad)
cmp
je
test
mov
jmp
push
jge
fist
(bad)
(bad)
(bad)
push
ret
cld
add
call
inc
mov
mov
cli
repz
aad
jno
shl
push
xor
dec
pop
mov
mov
test
clc
(bad)
mov
cld
stos
dec
rcl
fldcw
sti
rep
pop
ficomp
test
push
std
cmp
mov
or
cmp
mov
fldcw
sbb
xlat
cmp
mov
(bad)
(bad)
push
jbe
daa
aad
(bad)
and
pop
jp
and
jge
mov
(bad)
pop
out
add
stos
add
mov
arpl
popf
(bad)
(bad)
(bad)
(bad)
fsubr
mov
out
adc
(bad)
or
and
cmp
into
fisttp
(bad)
inc
mov
add
ja
leave
enter
(bad)
jmp
inc
adc
cmp
outs
(bad)
jmp
call
jmp
add
js
fisttp
pop
das
loope
and
(bad)
(bad)
mov
sbb
add
dec
repz
cmps
stos
ficom
das
cli
outs
mov
call
push
in
cmp
jmp
clc
push
dec
ins
aas
add
int3
nop
sahf
jmp
jno
mov
(bad)
(bad)
dec
dec
call
fidiv
into
mov
pop
jne
js
dec
cld
repnz
cs
mov
fsub
sbb
test
(bad)
fist
(bad)
pop
iret
aad
test
adc
mov
push
in
mov
adc
xchg
sub
sar
movs
cli
inc
inc
(bad)
(bad)
mov
or
shr
mov
jmp
jne
(bad)
js
sar
(bad)
(bad)
(bad)
jg
inc
or
popf
data16
in
sbb
xor
test
jmp
repnz
jmp
call
idiv
(bad)
(bad)
(bad)
jmp
jl
mov
les
pop
pop
pushf
push
aas
fisub
test
sbb
inc
jl
aam
(bad)
dec
lock
and
retf
push
enter
mov
test
pop
fild
push
or
sbb
mov
enter
dec
or
push
stos
add
inc
inc
scas
fsub
(bad)
(bad)
(bad)
dec
mov
lods
mov
cmps
mov
dec
hlt
sub
das
sbb
mov
(bad)
(bad)
dec
inc
cmp
mov
out
sub
sub
andnps
push
pop
push
mov
xchg
test
adc
aaa
pop
xchg
xchg
sar
(bad)
jmp
pusha
dec
sub
cli
setl
or
js
clc
test
nop
add
into
jg
push
xor
(bad)
(bad)
call
mov
jle
movs
test
pop
push
jnp
sbb
pop
mov
js
mov
mov
xor
mov
fbstp
test
cli
jge
int3
clc
xchg
add
jl
cmps
xchg
mov
aas
mov
(bad)
(bad)
(bad)
jmp
sbb
sar
cmp
jp
jno
sbb
mov
(bad)
(bad)
(bad)
jns
pop
div
mov
jno
(bad)
les
daa
xchg
lahf
out
aas
out
adc
mov
mov
xchg
shl
mov
daa
add
fwait
data16
pop
xor
jmp
frstor
shl
rol
idiv
push
mov
or
(bad)
jg
cmp
lea
adc
daa
hlt
in
arpl
popa
call
push
push
xchg
cmc
aad
mov
js
push
in
mov
sub
fcomip
fcomip
xor
daa
pop
mov
dec
jecxz
xchg
scas
mov
dec
cmp
(bad)
jmp
pop
stc
sbb
sub
imul
add
mov
push
out
(bad)
(bad)
(bad)
jmp
push
icebp
test
fistp
cwde
pop
gs
mov
jno
push
out
sahf
(bad)
pop
icebp
push
add
adc
mov
retw
add
mov
cdq
cmp
inc
aas
stc
push
loop
stos
sti
movs
cmc
sub
inc
les
(bad)
(bad)
(bad)
call
ss
inc
xor
jb
mov
pop
mov
cmp
push
xor
(bad)
push
jbe
pushf
mov
xor
out
lods
pop
sbb
pop
jecxz
(bad)
(bad)
call
pop
push
add
les
sti
iret
mov
mov
push
sub
ja
cmp
(bad)
(bad)
(bad)
mov
rcr
aad
sar
test
gs
into
xchg
clc
add
(bad)
cmps
mov
jmp
mov
out
xor
xor
xchg
call
cld
pop
mov
cdq
sar
xchg
sbb
shl
gs
xor
call
icebp
popa
cmp
xor
stc
fdiv
les
repnz
sbb
inc
scas
das
inc
xchg
jecxz
iret
inc
aam
jp
mov
ds
jne
(bad)
(bad)
(bad)
inc
mov
test
int
dec
aad
jmp
lahf
jno
cli
rol
(bad)
(bad)
inc
int
jp
mov
jecxz
out
jle
push
test
(bad)
jns
in
imul
inc
iretw
sbb
mov
call
retf
leave
mov
fisub
pop
(bad)
dec
imul
sbb
push
mov
inc
mov
or
(bad)
(bad)
(bad)
push
sub
sbb
push
mov
into
and
mov
mov
sub
les
les
scas
mov
loope
dec
sahf
dec
in
aaa
aam
mov
push
cmp
ja
jae
xor
fld
js
fbld
ins
dec
add
ds
and
push
and
add
cs
or
sbb
jne
ret
jno
loop
(bad)
(bad)
(bad)
push
mov
in
iret
test
adc
mov
repz
ja
jmp
jmp
push
aad
mov
mov
movs
xchg
sti
jne
push
xchg
icebp
fisubr
sub
(bad)
cmp
(bad)
(bad)
(bad)
aas
xchg
jmp
stc
xchg
out
aam
jns
sbb
dec
lods
dec
adc
hlt
fwait
mov
pop
(bad)
(bad)
mov
ins
add
pushf
es
xor
pusha
(bad)
mov
aam
jnp
(bad)
(bad)
(bad)
dec
jle
mov
aam
cld
adc
ror
std
enter
call
stos
ret
ficom
or
push
test
adc
aas
or
(bad)
aas
out
jecxz
(bad)
(bad)
(bad)
jmp
jo
repz
ret
pop
pushf
jp
clc
jo
push
inc
sbb
jge
bound
push
cld
out
clc
arpl
cmp
pop
mov
mov
add
mov
fild
jmp
clc
pop
in
mov
adc
outs
sub
mov
jno
(bad)
(bad)
loope
dec
mov
loop
or
xchg
test
jle
(bad)
out
aad
icebp
add
mov
fimul
jg
add
stc
lea
out
dec
xchg
mov
xlat
mov
mov
mov
sti
jecxz
push
daa
xor
call
jecxz
(bad)
mov
jmp
jp
cmp
pop
out
lock
loop
sti
retf
cwde
mov
cmp
(bad)
call
mov
(bad)
neg
dec
daa
mov
fild
dec
(bad)
ins
sbb
mov
pop
(bad)
jne
jns
(bad)
(bad)
(bad)
dec
pop
push
aaa
sub
mov
adc
stc
mov
mov
loop
js
mov
sar
adc
popa
shr
xchg
daa
es
mov
jg
pop
push
out
shl
out
and
lods
out
jg
scas
push
fsubr
fdivr
in
push
cmp
jmp
jmp
fimul
jmp
daa
lock
jge
cli
dec
aad
push
retf
into
xchg
imul
das
mov
or
push
lahf
fdivr
test
dec
push
addr16
ins
stos
jbe
push
inc
push
test
ret
mov
or
mov
inc
loop
fdivr
(bad)
(bad)
jmp
dec
mov
shr
dec
cmp
jle
scas
xchg
xor
dec
lahf
sbb
pop
int
or
enter
fisubr
mov
xor
repnz
ror
jmp
ins
mov
(bad)
cmp
ret
add
addr16
pushf
sbb
fiadd
stc
sub
cs
sar
aas
mov
lock
push
stc
add
outs
dec
ret
fisub
ret
xor
jae
addr16
rcr
pop
push
fistp
sti
(bad)
dec
mov
mov
xchg
mov
push
mov
mov
loop
mov
(bad)
jg
jb
xchg
aas
and
in
pushf
ror
repnz
clc
(bad)
(bad)
mov
cmp
jg
gs
mov
mov
xchg
movs
sub
push
or
(bad)
sar
repnz
loope
xor
fdivp
pop
dec
mov
in
out
cmps
mov
pushf
add
add
(bad)
mov
and
test
and
dec
xchg
dec
(bad)
push
mov
loopne
clc
pop
fwait
and
xchg
cmc
ret
jnp
or
dec
nop
cmc
(bad)
call
pop
dec
(bad)
call
mov
sbb
clc
push
cld
call
jbe
dec
inc
pop
int
outs
and
cmp
clc
mov
adc
pop
jmp
jmp
nop
jl
mov
or
addr16
mov
adc
scas
xlat
cmp
or
(bad)
std
xlat
push
loopne
sahf
jmp
addr16
out
out
inc
les
out
fsub
(bad)
(bad)
(bad)
jmp
push
add
(bad)
aaa
or
push
lods
cmc
cmp
retf
and
lock
inc
jmp
mov
repz
adc
shl
mov
push
pushf
jae
xchg
cli
xlat
cs
xor
das
neg
popf
add
out
adc
(bad)
(bad)
jg
sti
mov
adc
or
adc
add
int3
or
mov
mov
(bad)
dec
test
push
sahf
sub
aaa
mov
mov
out
inc
add
push
(bad)
(bad)
(bad)
(bad)
in
push
ret
dec
test
mov
add
adc
xchg
sbb
(bad)
(bad)
jmp
(bad)
test
stc
mov
out
sbb
std
mov
pop
loop
(bad)
or
sbb
cmp
js
mov
and
inc
mov
imul
jo
ret
xlat
jns
jmp
inc
je
(bad)
(bad)
fild
sub
in
cmp
push
iret
jno
das
(bad)
jg
(bad)
loopne
repz
not
ds
(bad)
cld
sbb
retf
(bad)
(bad)
(bad)
call
fwait
mov
or
cmp
jl
xchg
int
mov
cmp
push
in
jmp
(bad)
(bad)
jle
sahf
or
mov
or
mov
ja
fdiv
mov
mov
lock
out
ds
movs
sti
pushf
lea
dec
jl
mov
(bad)
(bad)
(bad)
jmp
loop
jnp
outs
push
pop
inc
hlt
pop
jnp
hlt
add
mov
aas
xchg
jg
lods
and
jp
enter
jmp
add
popa
jnp
hlt
(bad)
jg
je
mov
pop
add
movs
xchg
cli
pop
push
popf
and
(bad)
fistp
pop
pop
pop
mov
call
jl
xchg
loop
dec
sahf
sti
push
out
(bad)
(bad)
push
into
movs
add
ds
dec
mov
add
jnp
jmp
(bad)
(bad)
(bad)
jg
push
cmps
retf
cmp
push
jge
js
ss
rsm
mov
in
jge
std
or
(bad)
sbb
pop
adc
mov
jmp
xchg
test
push
(bad)
ficomp
iret
cmp
(bad)
(bad)
dec
pop
cmp
test
mov
jecxz
in
ja
mul
aaa
popf
sbb
xchg
cli
(bad)
(bad)
(bad)
das
push
mov
popf
sbb
ins
xor
leave
jmp
push
sbb
loopne
cwde
das
clc
sar
(bad)
mov
sub
jo
out
and
xchg
inc
sub
ror
call
inc
xor
jge
cmp
pop
clc
clc
js
jmp
out
lock
(bad)
call
inc
xbegin
pop
pop
sub
and
test
(bad)
fbld
call
mov
mov
inc
push
fst
stos
pusha
ins
imul
out
cdq
and
mov
test
(bad)
(bad)
(bad)
jmp
mov
cmp
xlat
mov
das
das
in
lods
fiadd
iret
neg
sub
cli
xchg
cld
(bad)
sbb
dec
xchg
add
cdq
into
and
and
call
sub
je
ret
stos
(bad)
mov
mov
test
mov
inc
push
mov
fcomp
jmp
aaa
mov
ins
loopne
enter
pop
cmps
sub
sahf
add
call
fmul
adc
ins
mov
sahf
xor
js
(bad)
dec
jmp
mov
cmps
outs
xchg
(bad)
lahf
popa
pop
xor
out
mov
jmp
mov
cmp
js
out
stos
add
and
(bad)
dec
jae
pop
xlat
dec
jg
aas
xor
mov
mov
sbb
js
inc
xor
rcr
out
sbb
jmp
pusha
sbb
mov
les
xchg
adc
mov
call
xor
stc
bound
test
pop
in
sub
lea
lahf
xor
lds
call
(bad)
(bad)
push
add
jbe
xlat
mov
lock
mov
daa
fld
adc
ficomp
mov
(bad)
inc
loope
pop
jle
jle
icebp
add
or
arpl
push
push
sbb
ret
pop
mov
(bad)
fistp
and
add
cld
cmp
scas
and
aam
sbb
(bad)
fcomp
mov
scas
out
imul
cmc
xchg
and
stc
cmps
sub
ss
aaa
cld
(bad)
mov
xor
sbb
add
je
stos
add
fdivr
(bad)
(bad)
call
out
jecxz
sub
cwde
repnz
cwde
push
jae
scas
mov
test
or
jns
test
(bad)
call
jp
clc
mov
jmp
test
cld
pop
stos
arpl
pop
loope
mov
mov
retf
mov
jmp
jnp
sahf
mov
cmp
xchg
pushf
popf
call
cmp
scas
cld
(bad)
(bad)
(bad)
(bad)
jmp
mov
das
sbb
(bad)
loope
lea
repz
std
mov
(bad)
mov
dec
cmp
popf
mov
aam
in
call
mov
icebp
in
xchg
sub
mov
adc
fmul
add
rol
cs
imul
dec
aam
or
pop
sub
in
or
pop
(bad)
inc
call
cmp
inc
push
lods
aaa
and
push
push
mov
das
pop
sbb
cli
pop
pop
jmp
fwait
push
dec
cmps
mov
sahf
repnz
fsubp
adc
jno
xor
add
mov
fisub
pop
add
xchg
and
jnp
jmp
jg
lds
pop
dec
mov
or
out
cmp
fdivrp
(bad)
(bad)
push
jns
mov
push
cdq
cli
inc
in
mov
jmp
push
pusha
xchg
lahf
mov
repnz
fwait
add
cli
fild
pop
sar
iret
sti
jmp
(bad)
(bad)
jmp
fsubr
sahf
cmps
aas
sub
retf
ds
cmp
pop
pop
cli
pusha
push
sti
(bad)
(bad)
(bad)
call
(bad)
dec
mov
popa
pop
pop
adc
add
imul
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
mov
(bad)
leave
test
push
cmps
std
mov
and
aaa
cld
(bad)
call
stc
mov
push
mov
ss
inc
outs
out
pop
pop
pop
jnp
out
call
sti
test
jnp
bound
outs
mov
stc
scas
sbb
(bad)
cmp
sub
jnp
popf
ja
(bad)
(bad)
(bad)
jmp
in
inc
sahf
push
ret
pop
aad
mov
jo
lock
aas
jp
(bad)
(bad)
jmp
sbb
aaa
mov
pop
jmp
test
sub
dec
clc
stos
clc
sub
arpl
xchg
lock
adc
and
xchg
outs
idiv
mov
pop
addr16
mov
jae
mov
adc
inc
enter
(bad)
(bad)
mov
test
jg
cmp
sti
pop
xchg
in
cmps
adc
or
dec
and
ficomp
clc
fs
xchg
icebp
cld
sar
jmp
mov
push
inc
jle
dec
out
jno
outs
rcl
and
or
mov
lds
jmp
aad
je
(bad)
cmp
jnp
sbb
out
fsub
out
cmp
loop
sbb
pop
std
xchg
lods
mul
loopne
dec
retf
ja
call
add
fld
jne
adc
outs
lock
mov
and
(bad)
pop
pop
jne
push
mov
scas
hlt
(bad)
fild
ret
xchg
scas
push
pop
or
fcom
fcomip
pop
ins
iret
inc
std
xlat
adc
jbe
sar
mov
enter
cmc
loope
mov
fs
pop
cdq
mov
adc
jge
or
call
test
dec
into
repz
ja
retfw
pop
mov
sub
mov
not
cld
jecxz
(bad)
call
imul
mov
ja
mov
idiv
sbb
mov
(bad)
(bad)
(bad)
clc
lods
imul
faddp
in
adc
test
adc
pop
push
in
and
shl
dec
xchg
stos
inc
dec
dec
sti
sub
lahf
mov
push
cmp
dec
iret
jle
(bad)
jmp
je
(bad)
pop
jo
mov
sti
adc
dec
jmp
aam
push
sub
and
pop
mov
jmp
jmp
mov
cmc
push
cmc
cwde
fadd
retf
fidivr
loop
adc
jg
retf
cwde
inc
pop
pop
leave
xor
xchg
(bad)
(bad)
(bad)
js
cmp
iret
mov
push
leave
adc
adc
push
ficomp
push
mov
(bad)
(bad)
jmp
ins
mov
les
in
repz
sbb
push
jno
out
lds
shr
(bad)
(bad)
jmp
sar
adc
adc
(bad)
mov
les
xchg
js
(bad)
mov
imul
das
outs
xor
(bad)
jmp
push
jecxz
(bad)
push
push
cmps
lock
mov
je
retf
setge
(bad)
(bad)
out
out
imul
sub
enter
and
xchg
cmps
out
(bad)
in
fs
jp
inc
in
inc
(bad)
fsubr
int
movs
push
push
mov
mov
sbb
clc
pop
cld
sub
neg
add
(bad)
(bad)
mov
push
sub
call
enter
pop
adc
stos
(bad)
xor
mov
cmps
sti
fidiv
je
nop
mov
movs
repnz
scas
mov
jmp
xchg
jmp
sbb
lahf
loop
fcmovnb
mov
icebp
pop
into
scas
out
repz
daa
adc
ret
aam
jmp
mov
addr16
(bad)
call
(bad)
repz
retf
xor
inc
jne
sub
mov
or
pop
fwait
(bad)
(bad)
(bad)
(bad)
mov
sar
cmp
add
inc
sbb
pop
xchg
or
fwait
mov
ins
cli
ja
ss
fisub
pop
(bad)
(bad)
(bad)
call
lock
sar
movs
mov
(bad)
idiv
jb
scas
push
jne
xchg
xchg
add
jmp
aas
xchg
bound
(bad)
(bad)
(bad)
push
mov
lea
repnz
adc
jg
push
xchg
xor
fbld
sbb
(bad)
mov
scas
idiv
pop
loope
jmp
mov
mov
(bad)
dec
loopne
jmp
icebp
pushf
fnstsw
pop
jge
and
lods
pop
or
pop
or
mov
cmp
in
loopne
jg
ret
cli
xchg
mov
retf
jmp
mov
out
(bad)
(bad)
(bad)
(bad)
jmp
idiv
cmp
cs
cmp
adc
cld
add
mov
aaa
cmp
les
jmp
(bad)
jo
xchg
jp
stos
mov
(bad)
(bad)
cmp
outs
jp
div
and
adc
mov
stos
ins
(bad)
jmp
clc
int3
packsswb
jmp
mov
dec
stos
rol
jno
ss
call
xchg
cmp
dec
jmp
dec
lea
jp
call
in
repz
jb
jle
mov
das
push
icebp
loop
cs
fbstp
and
test
scas
push
fstp
add
test
cmp
jno
fistp
scas
jne
sbb
bound
(bad)
fistp
xor
rep
inc
jg
(bad)
(bad)
cmp
cdq
or
mov
pushf
enter
fmulp
sbb
aad
std
jmp
mov
sar
mov
(bad)
(bad)
call
sbb
mov
iret
pop
dec
neg
xchg
stc
jmp
(bad)
cmp
(bad)
jns
add
std
scas
push
push
add
lock
mov
cmc
mov
jmp
jmp
mov
rol
push
retf
jne
sub
push
std
(bad)
std
jl
ja
fdiv
xor
stc
in
mov
mov
std
pop
clc
outs
cli
movs
xchg
adc
add
ret
mov
push
inc
(bad)
movs
push
test
adc
out
pop
adc
aam
inc
lods
jae
mov
(bad)
(bad)
(bad)
jmp
adc
mov
outs
aaa
sub
aaa
out
adc
pop
call
in
fwait
push
ss
jge
sub
(bad)
(bad)
jg
pop
data16
xchg
sti
sar
mov
mov
mov
(bad)
(bad)
fistp
xor
(bad)
bswap
iret
mov
mov
pop
cmc
push
pop
xor
aaa
sbb
(bad)
(bad)
call
ret
push
adc
lods
mov
jnp
repnz
cmp
int
dec
stos
sti
inc
inc
mov
clc
das
icebp
aaa
jle
jb
fwait
push
inc
shr
(bad)
push
popa
adc
(bad)
jmp
dec
cwde
lock
cmp
loop
cmps
(bad)
icebp
in
adc
push
imul
push
inc
data16
pop
(bad)
cmp
fist
ja
mov
cmps
xor
sbb
push
outs
push
ds
(bad)
(bad)
(bad)
call
xchg
pop
sti
(bad)
iret
test
div
fcomp
xchg
and
fstp
mov
(bad)
(bad)
(bad)
call
mov
mov
jge
inc
les
lea
mov
pushf
pop
mov
pop
cmp
or
mov
js
stc
popf
in
fadd
clc
rcl
mul
arpl
imul
jno
jo
(bad)
dec
and
les
retf
jno
push
into
dec
push
std
mov
retf
scas
icebp
cmps
add
(bad)
(bad)
(bad)
push
adc
xor
or
shl
xlat
imul
and
xchg
stc
stos
cmp
pop
sti
js
mov
(bad)
(bad)
(bad)
(bad)
cmp
scas
dec
cld
and
outs
mov
dec
lds
cmp
jmp
jmp
sub
mov
add
pop
mov
cmp
add
sub
(bad)
(bad)
(bad)
push
enter
loop
repnz
ins
jmp
frstor
dec
jp
test
dec
(bad)
(bad)
(bad)
jmp
pop
bound
fldcw
xchg
out
lahf
mov
hlt
sub
arpl
into
ret
sar
cld
clc
mov
push
scas
cmps
test
(bad)
(bad)
jmp
popf
mov
mov
xchg
fstp
sub
cmc
fcmove
das
cmp
cmp
movs
outs
or
mov
nop
mov
(bad)
fbld
js
pop
(bad)
pop
retf
xchg
push
call
inc
mov
icebp
dec
adc
out
movnti
jl
xchg
mov
fwait
cmps
les
jb
mov
dec
clc
mov
(bad)
jg
(bad)
(bad)
call
pop
shl
imul
rcr
call
mov
push
movs
jbe
loopne
or
(bad)
in
(bad)
inc
(bad)
mov
sbb
in
add
shl
mov
inc
mov
dec
imul
pop
push
mov
call
mov
(bad)
(bad)
jg
sbb
stos
jnp
push
xor
dec
lea
cs
sub
adc
xlat
inc
jecxz
(bad)
(bad)
cmp
pop
and
xchg
push
mov
or
shl
fadd
mov
dec
out
(bad)
(bad)
mov
or
das
enter
mov
push
rol
adc
jp
shr
mov
movs
call
lock
xchg
loop
pop
sar
cli
aam
outs
xchg
xchg
jge
pushf
xchg
ds
push
fild
xor
jmp
cmp
mov
xor
adc
jecxz
add
mov
lods
cmp
(bad)
jmp
mov
inc
std
ja
movs
add
stos
cmps
out
sub
add
inc
jb
int
cmp
in
push
outs
adc
data16
(bad)
cmps
imul
jg
jmp
push
mov
jb
lods
cmps
xchg
mov
stos
cli
fsub
or
(bad)
call
cmp
dec
imul
cs
int3
or
in
sbb
sar
(bad)
inc
jno
jmp
dec
jecxz
push
pop
mov
push
sbb
(bad)
(bad)
(bad)
fild
into
adc
dec
mov
mov
add
ja
es
ja
cmc
mov
(bad)
aad
sar
jge
(bad)
outs
inc
ds
jmp
and
pusha
sub
sbb
(bad)
(bad)
mov
call
std
lods
mov
pop
js
xor
ret
sbb
dec
adc
imul
mov
mov
add
cmc
pop
ins
(bad)
inc
push
adc
push
xlat
sub
(bad)
push
or
mov
loopne
rol
cmps
(bad)
xchg
inc
out
ds
retf
ja
pop
dec
ror
lods
loope
pushf
rcl
and
pop
jbe
(bad)
(bad)
dec
dec
xor
in
imul
lods
or
shl
std
outs
adc
fwait
(bad)
(bad)
(bad)
inc
setns
shr
xor
popf
cmp
nop
mov
ds
std
dec
jmp
adc
or
int
inc
jae
xor
jns
(bad)
mov
mov
mov
jbe
xchg
mov
lds
std
ins
or
imul
movs
(bad)
(bad)
(bad)
jmp
iret
jg
or
ret
ret
cmp
ins
sub
(bad)
jge
xchg
movs
sub
test
and
fnstenv
cmp
(bad)
dec
jne
addr16
(bad)
dec
pop
fdivp
mov
sbb
and
push
int3
mov
mov
(bad)
(bad)
inc
mov
imul
mov
add
inc
les
mov
in
pusha
jns
(bad)
inc
cld
jae
xor
retf
bound
jg
shl
add
outs
sar
push
div
xchg
jl
mov
ret
mov
cmps
mov
fsub
sti
mov
jmp
jp
stos
mov
push
loopne
and
pop
(bad)
(bad)
call
iret
std
mov
scas
mov
jg
adc
stc
fidiv
add
mov
rcr
xchg
popa
mov
or
push
jnp
push
(bad)
stc
or
aam
call
cmp
inc
cmps
xchg
cmp
and
jl
pop
mov
pop
cmc
add
lods
cmp
jo
pop
add
mov
(bad)
call
pop
sahf
sbb
jns
lahf
adc
imul
pop
stc
mov
adc
(bad)
fisttp
(bad)
fisttp
in
leave
add
jmp
(bad)
das
leave
sahf
jg
sub
sbb
sahf
(bad)
(bad)
(bad)
call
retf
lea
lods
hlt
adc
sub
stos
mov
mov
(bad)
(bad)
(bad)
call
mov
pop
(bad)
data16
jno
jge
(bad)
out
sahf
dec
loopne
fwait
mov
add
and
in
add
sbb
and
(bad)
(bad)
jg
in
cmp
dec
dec
(bad)
fnstenv
int3
and
ins
je
sub
je
pop
pop
inc
mov
(bad)
(bad)
call
cdq
jg
or
je
push
iret
add
xchg
mov
leave
aas
jne
fld
ds
stos
jno
mov
mov
lahf
jbe
cmps
mov
push
(bad)
inc
xchg
fbld
inc
aas
test
dec
add
call
(bad)
adc
ja
lahf
jg
pushf
jae
or
xchg
dec
imul
jmp
pop
xchg
(bad)
inc
dec
mov
adc
xlat
les
and
arpl
sbb
clc
and
cli
out
xchg
(bad)
(bad)
(bad)
call
mov
scas
pop
jp
lea
jmp
pop
pop
jns
and
and
fsubr
sub
mov
mov
push
loop
sbb
jmp
movs
adc
dec
xor
pop
mov
popa
mov
clc
(bad)
dec
xchg
push
pop
in
pop
out
(bad)
fisubr
retf
mov
enter
icebp
mov
mov
lahf
pop
stos
jecxz
(bad)
jg
push
inc
xchg
setp
cmp
jge
jb
(bad)
sub
(bad)
(bad)
jmp
add
ins
call
imul
test
xchg
out
mov
xadd
jno
push
mov
jle
jg
or
enter
pop
loop
sbb
sub
(bad)
jmp
xor
aad
arpl
scas
mov
into
out
stc
lock
xchg
mov
aas
mov
aas
into
sub
outs
and
mov
cmc
(bad)
pusha
stc
fild
jne
icebp
or
inc
mov
fnsave
sub
pop
pop
aas
mov
push
pop
retf
in
cmps
adc
mov
jp
call
out
xor
out
mov
adc
(bad)
dec
fldenv
inc
pop
mov
push
pop
jae
fisubr
ja
inc
mov
pushf
ds
(bad)
mov
inc
xchg
lahf
pop
aam
add
out
dec
mov
ds
add
jg
push
mov
adc
out
dec
cmps
dec
push
or
dec
push
dec
ds
les
push
bndstx
(bad)
imul
cmp
sbb
imul
test
or
push
ror
(bad)
(bad)
mov
cmp
xchg
(bad)
mov
adc
cli
jl
or
and
add
imul
(bad)
(bad)
mov
(bad)
jmp
addr16
mov
cmps
repz
scas
cli
push
call
(bad)
inc
fist
cmp
in
leave
std
jp
repnz
(bad)
dec
inc
(bad)
mov
fcomip
mov
dec
mov
cmp
and
jecxz
bnd
shl
rdtsc
call
int
dec
push
call
ja
fiadd
repz
aam
clc
(bad)
jg
pop
fild
jmp
push
mov
stos
into
and
daa
outs
(bad)
(bad)
fcomip
jl
or
cmp
sbb
sub
jmp
test
ror
stos
cmp
mov
test
mov
loop
test
mov
(bad)
call
loop
in
dec
or
jo
(bad)
pop
sar
sbb
jmp
push
jo
jmp
dec
(bad)
(bad)
(bad)
call
cmp
mov
pop
ja
jb
loop
enter
loop
jb
sbb
cli
pop
adc
sub
sbb
xchg
jle
mov
jg
inc
ror
cli
scas
inc
repnz
ss
idiv
call
stos
cld
mov
xor
lods
ds
pop
jecxz
les
or
outs
nop
out
dec
and
cli
mov
pop
sbb
out
mov
cmp
(bad)
jnp
or
and
push
jns
in
lds
mov
pop
loopne
sub
(bad)
push
(bad)
dec
jno
aam
inc
jmp
cs
(bad)
sub
shl
mov
mov
retf
jl
sar
ds
jmp
mov
cmps
jae
mov
cmp
cli
jle
(bad)
jg
and
fs
push
xor
fwait
jmp
jae
add
(bad)
(bad)
push
mov
ret
or
fmul
push
jp
aas
ret
div
js
mov
pushf
sub
(bad)
(bad)
cli
push
xchg
shl
inc
and
jge
stc
repnz
pop
sbb
mov
sbb
call
mov
enter
or
(bad)
(bad)
(bad)
fild
ret
cmp
push
mov
inc
popf
int
test
adc
jmp
(bad)
dec
push
and
mov
xchg
pop
sahf
dec
or
aam
mov
leave
mov
dec
bound
mov
stc
dec
fmul
test
into
mov
jle
clc
(bad)
je
adc
aad
jmp
pushf
(bad)
(bad)
es
aas
jo
in
or
or
idiv
jns
(bad)
(bad)
(bad)
call
in
lea
neg
xor
out
aaa
mov
jl
xchg
into
dec
test
(bad)
hlt
dec
sbb
call
mov
lds
repnz
leave
retf
out
rcr
pop
pop
and
(bad)
(bad)
dec
les
out
fsubrp
sbb
jp
cmc
cdq
push
and
jmp
jnp
test
sahf
fdivr
neg
jecxz
cwde
push
or
inc
(bad)
(bad)
(bad)
push
pushf
das
out
xchg
out
or
cmc
or
dec
sti
cmp
ret
mov
jp
jmp
(bad)
(bad)
dec
fs
adc
mov
cs
mov
popf
sahf
das
jno
ja
les
cs
loopne
dec
pop
rcl
jmp
scas
iret
adc
mov
pop
push
jg
sti
mov
not
dec
mov
jg
loop
mov
out
(bad)
mov
jmp
stc
hlt
mov
pushf
mov
sbb
pop
jbe
test
dec
es
addps
mov
or
(bad)
(bad)
(bad)
jmp
aaa
imul
jnp
cmp
imul
add
aaa
jge
dec
cwde
mov
call
cmp
rcr
lahf
retf
mov
inc
lahf
or
mov
(bad)
(bad)
(bad)
push
jns
xor
jne
out
push
not
jmp
iret
retf
out
cdq
(bad)
pop
(bad)
(bad)
(bad)
(bad)
js
and
lock
in
push
jno
jecxz
cmps
aam
pop
lock
xor
(bad)
(bad)
cmp
cdq
dec
cli
(bad)
(bad)
inc
ds
jl
je
popa
pop
retf
cli
cmp
jmp
mov
mov
cs
fimul
(bad)
xor
daa
jno
mov
test
mov
mov
(bad)
fild
adc
into
add
sar
(bad)
fbld
jl
sbb
or
pop
cld
hlt
jnp
sbb
xchg
mov
iret
mov
inc
cli
pop
mov
(bad)
fistp
fbstp
leave
rcl
xor
pop
pop
mov
and
(bad)
push
popa
nop
out
(bad)
mov
and
ss
in
fcomp
jg
fld
jb
daa
xor
mov
add
(bad)
jg
sub
data16
mov
inc
xor
mov
push
mov
(bad)
(bad)
jg
inc
shl
and
dec
mov
retf
std
and
xor
aas
out
pop
(bad)
inc
ins
pop
xchg
jmp
outs
into
sub
(bad)
movs
push
aad
call
jns
das
cli
(bad)
jmp
pop
or
xchg
out
sti
jmp
cmp
sbb
fist
vpsubw
sub
out
lahf
mov
dec
dec
mov
jle
dec
das
sbb
adc
(bad)
mov
push
ins
push
jo
jmp
in
sub
inc
dec
mov
jmp
pop
pop
loopne
inc
or
scas
js
jo
jmp
jp
(bad)
mov
inc
inc
push
cmps
mov
dec
pop
and
xor
je
test
sub
sbb
mov
stos
mov
test
xor
stc
ror
gs
mov
(bad)
push
push
out
mov
or
retf
jg
sbb
fsub
lods
push
fwait
aaa
mov
pop
outs
cli
xchg
pop
aam
sub
(bad)
(bad)
jg
loop
mov
aad
mov
cmp
fbld
fucomip
in
push
ss
(bad)
(bad)
inc
call
outs
fidiv
fst
sbb
lahf
add
mov
test
or
sbb
(bad)
fld
mov
cmc
mov
jmp
jmp
push
leave
(bad)
cmp
test
mov
push
(bad)
mov
mov
pop
clc
pop
cmc
call
mov
mov
pop
push
into
cmp
jo
adc
push
xchg
in
push
(bad)
inc
loopne
out
push
adc
xor
sbb
ds
cmp
in
(bad)
(bad)
(bad)
dec
jno
cmc
xor
jmp
mov
xchg
lock
pop
xor
mov
clc
ins
jmp
or
xchg
push
fwait
lds
(bad)
shl
clc
popa
ret
je
jnp
dec
pushf
(bad)
popa
addr16
mov
(bad)
(bad)
jge
jo
cwde
out
fcmovnbe
push
hlt
and
(bad)
(bad)
inc
int
js
mov
xchg
xchg
cli
push
popf
popf
daa
test
sbb
jmp
sub
mov
mov
push
jl
mov
xor
(bad)
(bad)
mov
or
xor
jbe
lahf
movs
sub
out
jp
loopne
daa
not
mov
jge
out
xor
call
(bad)
jmp
pop
or
pop
call
inc
adc
cdq
rol
(bad)
mov
inc
(bad)
cmp
pop
sbb
in
add
ins
xchg
jp
das
and
repz
pusha
pusha
add
cmp
ficom
jmp
inc
movs
cli
pop
jp
mov
jmp
xor
cmp
addr16
mov
dec
popa
retf
push
call
xor
mov
xchg
fwait
adc
aas
add
jecxz
xor
ja
inc
push
push
sahf
aam
jle
dec
jns
add
adc
test
(bad)
movs
ja
sar
jae
(bad)
retf
js
jl
pop
xchg
(bad)
fisttp
jmp
pop
xor
dec
jne
in
push
mov
movs
push
sar
nop
cld
mov
mov
je
mul
and
cmp
das
pop
pop
pop
enter
ss
(bad)
jl
movs
hlt
sbb
outs
std
stos
mov
dec
pop
(bad)
(bad)
in
(bad)
fcmovnbe
xlat
cwde
jmp
cs
xor
jg
adc
mov
fs
(bad)
jmp
(bad)
dec
into
scas
xchg
jmp
cmps
mov
scas
clc
(bad)
jmp
ds
outs
push
mov
sahf
cld
cli
mov
mov
and
pop
(bad)
dec
fimul
pop
push
leave
jne
call
stos
jne
loopne
mov
in
cli
(bad)
(bad)
(bad)
jmp
leave
not
out
(bad)
and
sar
lahf
in
xor
neg
leave
cmc
push
(bad)
js
aaa
rcl
call
xchg
cli
mov
sti
imul
jg
fst
xlat
and
(bad)
push
sbb
test
hlt
mov
(bad)
(bad)
(bad)
cmps
(bad)
push
or
aam
add
outs
mov
aaa
retf
(bad)
mov
gs
jae
mov
inc
lock
cld
cmp
fbld
std
(bad)
(bad)
(bad)
js
je
push
sar
pop
mov
loopne
nop
jl
rcl
sbb
fld
sbb
(bad)
(bad)
aaa
jmp
pushf
iret
pop
test
mov
cmp
mov
push
out
xor
repnz
cmps
(bad)
sub
push
xchg
repnz
jmp
jp
jns
data16
xor
mov
iret
adc
jbe
(bad)
(bad)
(bad)
(bad)
fdivp
popf
and
inc
cmc
sub
jmp
mov
call
mov
inc
mov
ds
mov
stos
aas
jle
rol
popa
mov
out
aas
and
call
in
push
dec
std
sub
(bad)
(bad)
inc
dec
mov
jo
fs
gs
jmp
mov
test
xchg
jg
jmp
sar
movzx
(bad)
in
pop
add
popa
xchg
push
jmp
mov
cli
into
lock
adc
imul
jg
inc
jge
imul
(bad)
(bad)
call
call
jge
mov
xor
sub
js
inc
sti
inc
add
(bad)
(bad)
push
fs
aas
jecxz
cli
mov
mov
int
jmp
fsubr
(bad)
(bad)
jmp
int
jge
stos
sar
fadd
xchg
fimul
neg
loop
outs
cmc
scas
(bad)
(bad)
(bad)
jmp
add
mov
daa
gs
mov
dec
outs
add
mov
push
aaa
adc
and
push
fstp
iret
nop
out
cwde
sbb
pop
imul
cli
pop
inc
xor
fadd
fadd
in
mov
(bad)
dec
inc
cmp
aas
pop
jne
sti
imul
push
je
aam
outs
outs
jle
(bad)
(bad)
(bad)
jg
ins
js
mov
adc
aad
mov
add
push
out
push
jae
retf
xchg
jl
jmp
push
(bad)
call
fld
dec
out
pop
jmp
pop
rcr
jge
mov
dec
jecxz
(bad)
(bad)
(bad)
jmp
mov
pop
loopne
push
inc
cmp
xchg
ss
jae
mov
mov
and
pop
pop
outs
cmps
aaa
dec
jno
rcr
int
(bad)
ds
call
push
mov
dec
movs
int3
(bad)
and
ss
cdq
(bad)
(bad)
call
jnp
push
mov
mov
dec
add
mov
cmp
jae
int3
idiv
(bad)
(bad)
(bad)
hlt
xchg
ret
jae
sub
pop
push
popf
sub
retf
inc
pop
clc
sbb
(bad)
(bad)
(bad)
jg
or
retf
cmp
dec
loop
test
inc
jle
jns
jmp
stc
outs
(bad)
xlat
add
jmp
sub
data16
call
cld
out
aam
retf
sub
sar
into
push
push
repz
icebp
ins
leave
ret
(bad)
(bad)
(bad)
inc
sbb
call
mov
cmp
and
pusha
or
sbb
lds
push
inc
(bad)
ins
pop
icebp
(bad)
push
or
cli
scas
cdq
inc
pop
jl
cmps
das
xchg
inc
int
adc
into
pop
xchg
pop
pop
or
loopne
ror
lock
(bad)
push
loopne
jno
jmp
iret
jns
loope
and
daa
lea
(bad)
jg
(bad)
fidiv
(bad)
mov
cmp
call
rol
retf
jmp
ins
or
push
xlat
dec
das
imul
cmp
mov
push
pop
ds
fbld
jmp
je
cli
mov
cmp
fsubr
(bad)
or
in
and
test
fld
fs
and
cmp
or
outs
cmp
xchg
scas
push
xchg
mov
(bad)
call
and
int
sti
add
mov
mov
mov
sbb
jmp
fidiv
(bad)
aaa
cld
nop
mov
push
int3
and
nop
cmps
xor
mov
out
mov
and
jmp
mov
pop
jl
or
jg
idiv
push
mov
nop
lds
lea
ins
adc
mov
adc
mov
jno
add
inc
outs
dec
sar
das
adc
enter
sar
adc
ja
nop
inc
mov
inc
loope
(bad)
ficom
push
fild
les
(bad)
jmp
and
fnstenv
cmp
pop
repz
data16
popa
std
das
(bad)
(bad)
jmp
lds
mov
pandn
bswap
in
in
push
or
test
sub
fwait
dec
lock
mov
jae
push
mov
ss
(bad)
(bad)
fpatan
inc
pop
lods
mov
int
sub
into
test
out
mov
loopne
(bad)
call
mov
jmp
mov
add
pop
movs
clc
jno
(bad)
(bad)
call
jge
push
(bad)
dec
sbb
jg
aas
mov
mov
jle
xchg
sbb
cld
(bad)
inc
lahf
sahf
and
loop
jmp
cmp
ret
xchg
pop
fbstp
pop
cld
dec
aam
jb
clc
and
push
jp
mov
pop
fbstp
or
xor
lahf
cmc
ffreep
xchg
or
dec
icebp
jecxz
stc
jl
in
and
lds
dec
into
jg
std
(bad)
(bad)
(bad)
jmp
xor
dec
std
cmc
push
mov
or
das
pop
loope
mov
mov
(bad)
mov
popa
cmp
movs
add
sahf
into
leave
popa
mov
les
sub
(bad)
fcmovb
call
xor
jns
and
xor
cmp
aaa
pop
mov
xor
sbb
nop
cld
cmp
(bad)
mov
loop
mov
push
pop
out
movs
cli
add
cmps
cmc
cmp
out
clc
dec
pop
test
jge
nop
ror
loopne
std
fcomip
xor
repz
test
jg
in
push
fwait
iret
sbb
enter
fcom
jg
out
es
pop
sbb
xchg
pop
mov
dec
pushf
xor
pop
add
rcl
dec
(bad)
xchg
mov
ss
call
inc
in
mov
pop
mov
push
outs
sar
jmp
mov
int3
pop
jle
add
inc
or
jmp
xor
std
ror
pop
aas
data16
retf
in
(bad)
mov
retf
outs
xor
das
adc
(bad)
(bad)
jmp
std
sbb
imul
enter
push
ficomp
loop
scas
mov
jne
(bad)
jg
(bad)
sub
aad
std
dec
out
in
(bad)
imul
pop
xor
sti
sahf
imul
(bad)
dec
push
mov
xchg
retf
push
retf
nop
mov
mov
ds
(bad)
xor
(bad)
inc
in
xchg
adc
xchg
sbb
les
cmps
inc
or
(bad)
(bad)
mov
mov
jl
xchg
cld
hlt
mov
out
fistp
and
jns
mov
stc
and
(bad)
sbb
sbb
push
out
stos
push
scas
push
adc
lahf
ds
dec
mov
cs
adc
mov
jae
cmc
fwait
pop
mov
mov
pop
lds
stc
test
mov
jae
add
(bad)
(bad)
jg
(bad)
retf
popa
call
adc
cld
stc
jecxz
aam
repnz
push
std
test
out
(bad)
(bad)
(bad)
jmp
jecxz
aaa
ret
mov
or
iret
cmps
jae
add
inc
fcmove
mov
std
jmp
cmp
sbb
rcl
mov
sub
jp
dec
es
es
mov
dec
scas
aaa
cmp
hlt
js
mov
xchg
out
cdq
inc
daa
jg
mov
std
xlat
ins
lock
jmp
mov
dec
fidiv
icebp
dec
jl
add
dec
jmp
add
jg
sti
jl
nop
in
dec
mov
push
xchg
or
mov
add
call
xchg
repnz
jg
sub
add
add
pop
push
outs
stos
enter
add
xlat
xor
inc
mov
aaa
lods
or
fcomip
dec
aas
sub
cwde
or
je
cmp
test
(bad)
xor
je
lea
sub
(bad)
fld
test
cmps
call
(bad)
(bad)
jmp
mov
mov
pushf
sbb
pop
test
cmps
and
jle
jmp
sar
(bad)
(bad)
jg
mov
adc
xchg
fidivr
sbb
inc
les
out
minps
(bad)
shl
lds
(bad)
(bad)
call
mov
jbe
mov
xchg
adc
push
aam
mov
mov
add
push
in
sbb
mov
ret
push
pop
cmp
int3
hlt
inc
(bad)
(bad)
(bad)
push
xchg
test
or
adc
mov
cdq
aas
inc
cmp
mov
loop
jecxz
(bad)
(bad)
call
cmps
test
jne
and
into
nop
xor
test
jle
in
(bad)
imul
inc
fnstcw
movs
int3
adc
addr16
arpl
loop
(bad)
clc
stc
push
fld
jae
fidiv
(bad)
fist
out
jmp
pop
push
cmp
idiv
test
aas
jne
sub
pop
out
loopne
(bad)
(bad)
fimul
in
pop
cmp
xor
dec
scas
push
xor
or
push
inc
aam
iret
add
into
mov
shl
imul
(bad)
(bad)
(bad)
jmp
enter
stc
retf
dec
(bad)
dec
addr16
jp
stc
mov
jae
dec
sub
(bad)
(bad)
mov
xchg
push
adc
pop
nop
mov
call
mov
ins
jecxz
(bad)
mov
pop
add
shl
fwait
loope
or
int
xchg
adc
(bad)
dec
push
movs
jmp
retf
movs
sahf
xchg
and
scas
mov
jae
mov
xlat
(bad)
out
sahf
shl
test
clc
cld
cmp
or
or
fbstp
dec
xor
out
adc
(bad)
(bad)
inc
mov
scas
arpl
ds
mov
fisub
jns
inc
in
std
sub
mov
xor
js
dec
js
sbb
jecxz
jno
jb
jne
dec
(bad)
(bad)
(bad)
dec
sbb
mov
daa
dec
fmul
cmp
int3
cld
out
xchg
xlat
movs
(bad)
fsubr
mov
addr16
repnz
hlt
(bad)
(bad)
(bad)
jl
dec
mov
sbb
pop
data16
stos
xor
repz
sar
(bad)
call
imul
bnd
add
sub
xchg
pop
clc
mov
cmp
out
mov
xchg
enter
(bad)
or
xchg
std
sbb
(bad)
mov
aam
loop
mov
or
xchg
push
das
pop
mov
jle
or
pop
mov
mov
jmp
out
xchg
(bad)
(bad)
in
mov
ficomp
push
cld
(bad)
fld
leave
xchg
imul
dec
daa
adc
std
cwde
repz
lods
(bad)
jmp
sbb
aas
or
cli
(bad)
(bad)
pop
lods
dec
sbb
int3
out
scas
mov
push
iret
inc
loop
fistp
in
cwde
or
(bad)
fidivr
ja
out
cmps
inc
je
add
sub
jmp
mov
lock
add
(bad)
dec
add
loopne
xor
or
xchg
inc
out
div
mov
es
sub
ds
(bad)
(bad)
(bad)
(bad)
jle
jae
dec
stos
inc
jle
clc
jle
popa
mov
es
jae
cld
loop
in
push
push
retf
fbld
das
fstp
loop
xchg
mov
les
cmp
xchg
fdivr
outs
(bad)
(bad)
(bad)
call
mov
xor
leave
and
pop
jle
bound
mov
dec
into
outs
dec
aam
aam
(bad)
(bad)
(bad)
jnp
cmp
out
std
push
sti
jge
sbb
push
push
nop
push
in
jbe
addr16
or
mov
mov
repz
lods
and
xchg
aaa
mov
and
mov
test
(bad)
push
das
loope
pop
das
(bad)
(bad)
(bad)
push
push
std
or
pop
cs
bound
jge
add
jb
imul
ins
sbb
lock
(bad)
mov
jbe
lahf
mov
add
cmp
mov
mov
icebp
pop
dec
enter
pop
outs
test
das
xchg
or
stc
mov
outs
div
in
cdq
div
jno
(bad)
push
call
not
fld
test
js
lock
xor
je
adc
lahf
xchg
jmp
mov
(bad)
loope
(bad)
(bad)
(bad)
(bad)
stc
movs
hlt
rol
xor
jge
or
pushf
and
cdq
mov
pop
hlt
sar
(bad)
(bad)
jmp
and
adc
fadd
js
and
jne
lock
mov
es
mov
(bad)
mov
idiv
test
addr16
cmp
or
jo
iret
clc
inc
(bad)
(bad)
call
sub
lahf
mov
les
dec
test
in
jmp
(bad)
call
jne
mov
hlt
mov
call
cmp
(bad)
pop
push
cld
(bad)
(bad)
adc
xchg
bound
call
or
ins
push
sbb
(bad)
jg
ins
ins
shr
test
or
(bad)
movs
cmc
push
adc
int
or
out
aaa
add
js
fs
sahf
(bad)
(bad)
(bad)
call
or
jbe
pop
inc
jl
jl
scas
lods
fisttp
cld
sahf
pop
lods
adc
repz
enter
(bad)
(bad)
push
popf
add
xchg
loop
pop
popf
dec
les
adc
cmp
inc
jbe
ins
sbb
jg
(bad)
(bad)
(bad)
mov
mov
pop
jmp
iret
xchg
xor
xchg
mov
dec
call
jecxz
mov
xchg
sar
cmp
inc
out
cmp
ins
inc
jbe
jne
cmp
xchg
push
enter
or
stos
mov
mov
push
in
cs
cmps
mov
pop
movs
outs
scas
and
(bad)
sub
jmp
push
cli
mov
mov
cmp
into
dec
add
rcr
icebp
(bad)
call
lahf
data16
call
mov
xchg
emms
lahf
nop
out
jp
repnz
(bad)
(bad)
(bad)
(bad)
jnp
not
push
xor
add
jmp
div
xchg
sar
(bad)
(bad)
push
fcomp
int3
sub
mov
out
fstp
int
cmp
adc
call
cmp
shl
push
test
sub
push
xchg
fdivr
xor
mov
mov
into
(bad)
jmp
cwde
imul
inc
sub
jae
enter
cli
(bad)
rol
fcos
out
clc
push
ficom
xor
inc
sub
ins
push
out
fwait
inc
and
lock
stc
xchg
sahf
mov
pop
fld
call
enter
mov
sbb
fsub
push
ins
jns
cmps
and
(bad)
cmp
icebp
popf
and
inc
in
mov
fdivr
scas
clc
les
or
(bad)
dec
pusha
pushf
int
lahf
das
jne
(bad)
jge
clc
(bad)
xchg
ja
push
test
or
(bad)
(bad)
(bad)
(bad)
call
sahf
ja
dec
fiadd
stos
adc
ins
int3
pop
out
fcom
scas
stos
mov
neg
(bad)
(bad)
inc
mov
js
cmp
into
fmulp
jae
mov
test
mov
cmp
dec
std
test
push
(bad)
aam
loop
mov
push
sub
pop
cmp
push
cmps
cmp
jb
div
mov
inc
stc
jmp
idiv
(bad)
(bad)
(bad)
jle
or
or
jne
jbe
repnz
sbb
pushf
movs
adc
adc
and
lock
jg
(bad)
(bad)
(bad)
(bad)
stc
pop
sbb
iret
jl
push
jecxz
push
je
lods
push
pusha
jle
xor
adc
test
(bad)
(bad)
(bad)
push
call
fwait
mov
cdq
shl
adc
ficom
push
enter
test
jmp
xor
cmp
fdivr
in
fwait
inc
sub
mov
jno
(bad)
(bad)
mov
mov
mov
pushf
mov
je
(bad)
call
inc
lds
adc
call
dec
sub
lea
fbstp
retf
ret
xchg
mov
cli
clc
inc
inc
jmp
jmp
mov
aas
pop
out
ror
add
push
adc
jb
hlt
sub
pop
call
(bad)
call
vhaddpd
nop
fwait
test
div
dec
stos
into
jmp
xchg
and
mov
cwde
(bad)
(bad)
(bad)
inc
out
movs
pop
jno
jmp
je
jne
or
mov
sti
push
sti
pop
xlat
cdq
arpl
cli
add
mov
xchg
fstp
mov
mov
cli
imul
out
(bad)
sub
inc
loop
jmp
clc
dec
out
mov
call
(bad)
sub
push
and
mov
mov
fdiv
das
inc
xor
and
in
out
les
fsubr
dec
dec
xchg
jl
jle
test
or
(bad)
jb
sub
cmps
sbb
push
xchg
cli
push
xchg
pop
and
cli
jmp
dec
cdq
ins
and
jbe
movs
and
sbb
fadd
jmp
shl
pop
pop
fidiv
adc
js
into
out
(bad)
jg
call
enter
in
sub
mov
inc
mov
mov
call
or
into
cmp
daa
popf
pop
test
shr
jmp
call
std
(bad)
(bad)
pslld
pop
dec
shl
cwde
out
cld
push
(bad)
(bad)
(bad)
call
push
or
xor
retf
pop
inc
shl
inc
xor
cmp
sbb
xor
mov
stos
mov
cwde
lock
cmp
push
add
or
dec
bswap
jnp
push
mov
out
pop
push
das
es
pop
(bad)
mov
add
(bad)
(bad)
inc
cmc
mov
push
in
pop
mov
add
mov
fsub
cmp
mov
push
xchg
cmc
scas
loopne
gs
sub
(bad)
(bad)
(bad)
jmp
xor
xor
xchg
cmps
ds
pop
dec
test
xor
out
das
sahf
and
inc
(bad)
hlt
(bad)
(bad)
push
pop
scas
and
xor
mov
stos
xchg
jp
popf
mov
out
jne
dec
xchg
std
ja
fcomip
jl
add
xchg
dec
out
ret
and
inc
and
jp
cmc
jg
or
sahf
out
and
call
and
cmc
cmps
add
shl
out
pop
xchg
lods
mov
pop
pop
xlat
ja
fnstcw
cmp
sub
dec
inc
(bad)
(bad)
(bad)
mov
iret
hlt
icebp
shr
sbb
cmp
aam
loopne
xchg
push
clc
mov
mov
(bad)
mov
add
(bad)
cmc
ror
cmovbe
(bad)
mov
hlt
lds
outs
int3
out
inc
rcr
pop
sub
mov
stc
ds
jmp
sbb
jge
jecxz
push
push
sbb
xchg
and
jg
clc
sahf
repz
xchg
sbb
ins
xchg
xor
jl
dec
fchs
dec
jl
cmp
das
pop
mov
add
push
jmp
lds
xchg
add
mov
repnz
(bad)
(bad)
jmp
adc
dec
adc
jns
aas
lods
cld
in
cmc
lods
cdq
les
retf
sbb
sbb
call
movs
sti
adc
mov
(bad)
push
aad
into
fistp
fild
push
and
mov
ds
(bad)
cmp
mov
sbb
in
shr
jmp
(bad)
push
into
sbb
sbb
jns
lds
pop
mov
fst
xchg
leave
out
push
xchg
in
jmp
in
aad
in
clc
stos
popa
loop
mov
stc
movs
(bad)
out
(bad)
call
inc
jl
cmp
xor
stc
push
(bad)
(bad)
loopne
int
(bad)
(bad)
jmp
enter
add
push
pushf
and
cdq
jbe
popa
scas
loop
fadd
mov
cmp
or
(bad)
mov
xlat
mov
push
out
in
rcr
cmp
call
call
and
adc
movs
mov
cld
(bad)
js
jg
jmp
mov
lahf
sti
sbb
cmps
stc
nop
push
(bad)
cmp
out
cmp
or
cmp
call
inc
mov
fld
stos
ins
call
fistp
cmps
(bad)
(bad)
(bad)
dec
mov
mov
icebp
aad
jle
scas
loope
retf
jns
pop
std
adc
sar
(bad)
(bad)
fcomip
sub
lods
jb
(bad)
sbb
stos
and
cwde
out
repz
xor
jge
call
cld
in
inc
jmp
enter
sub
hlt
xchg
push
cld
fldenv
(bad)
std
(bad)
call
pop
stos
xor
push
mov
mov
(bad)
mov
mov
fisttp
(bad)
(bad)
(bad)
jge
bound
hlt
push
xor
cmps
mov
mov
jmp
retf
adc
push
and
fcmovnbe
test
add
not
and
idiv
cmps
scas
push
inc
push
(bad)
jmp
mov
(bad)
call
xor
(bad)
cwde
neg
inc
adc
(bad)
call
sbb
out
mov
ds
(bad)
call
(bad)
cwde
sbb
or
inc
dec
gs
clc
pusha
push
lock
in
outs
ins
sbb
call
outs
sub
pop
in
imul
jmp
or
mov
sub
in
jge
(bad)
jmp
jl
in
inc
subps
xor
jae
icebp
(bad)
(bad)
jmp
push
test
retf
mov
neg
fild
in
in
inc
idiv
scas
mov
jp
jne
dec
out
fstp
loop
fldenv
loopne
dec
jae
fisubr
addr16
aaa
bound
pop
sbb
std
les
xchg
sub
sub
ds
in
int3
sub
push
add
adc
mov
push
adc
iret
inc
xchg
in
inc
mov
lods
outs
lods
mov
fcomip
scas
dec
pop
in
cmps
mov
jl
adc
popf
mov
inc
pop
imul
enter
dec
repnz
ss
mov
stos
imul
jns
lods
es
(bad)
inc
jns
sub
push
pop
in
xor
fcomip
jmp
mov
ins
cmp
int
cmp
lock
pop
mov
call
jl
aad
xor
lock
jg
fdiv
add
cmps
inc
jmp
dec
repnz
sti
fstp
push
sbb
mov
in
jg
sub
sub
cmp
lock
and
call
xchg
loop
repnz
hlt
idiv
or
sub
(bad)
call
jmp
cmp
int
sub
and
popa
fs
ja
cmp
push
sbb
fisubr
xchg
not
mov
mov
stos
loop
std
pop
push
push
call
cmc
fild
mov
scas
mov
jl
js
adc
pop
cld
pop
mov
inc
int3
jecxz
(bad)
ins
pusha
pop
gs
mul
(bad)
dec
cmp
std
fcomip
dec
aad
cmp
sub
sahf
loop
in
pop
clc
mov
cmp
std
sub
ins
shl
les
cmp
in
and
push
call
push
aas
and
mov
jnp
jmp
test
sahf
mov
test
cld
jo
(bad)
push
stos
out
push
inc
loop
push
iret
scas
aad
inc
in
hlt
dec
pop
pushf
pop
pop
jle
add
add
push
sbb
in
(bad)
(bad)
jg
sahf
mov
int3
stc
xchg
push
sub
sar
out
jae
xchg
popa
std
jg
(bad)
mov
pop
(bad)
mov
pop
sub
mov
jle
iret
cdq
idiv
pop
cmc
call
jnp
pop
sbb
jns
(bad)
sbb
imul
popa
xchg
out
mov
es
jnp
pop
fidivr
xor
mov
or
(bad)
(bad)
(bad)
mov
fidivr
in
aas
sub
cmp
rol
(bad)
fcomp
ret
shl
sbb
pop
dec
and
sahf
inc
push
jae
mov
aaa
std
(bad)
jp
rcl
dec
rol
lods
cmp
add
dec
imul
add
(bad)
(bad)
dec
dec
aaa
movs
test
and
ffree
or
inc
jg
xor
inc
sti
icebp
add
hlt
jge
daa
scas
jbe
fcom
jb
sub
loope
or
push
call
xchg
mov
mov
ficomp
mov
mov
scas
push
push
cmps
(bad)
add
pop
aas
out
(bad)
(bad)
(bad)
push
jmp
xor
add
sbb
cwde
pop
jle
into
popa
in
loop
fist
out
cmp
gs
ds
loop
in
iret
inc
push
inc
psraw
mov
sbb
dec
int3
and
into
mov
call
sub
pop
push
(bad)
popa
adc
push
or
push
into
stc
iret
pop
lock
adc
and
adc
rol
mov
dec
jmp
adc
cmp
(bad)
(bad)
(bad)
jg
cwde
out
push
(bad)
repz
jno
test
inc
rcl
movs
jae
icebp
sbb
jbe
cli
sti
(bad)
call
ret
ficomp
pop
jno
in
pop
mov
push
in
cmp
call
adc
inc
mov
jno
aad
std
pop
jl
pop
cmp
mov
fadd
cmc
sub
pop
out
jmp
dec
sub
(bad)
in
call
aam
ficom
stc
push
cmp
stos
(bad)
sub
inc
loope
push
mov
nop
jmp
add
jmp
sbb
(bad)
repnz
comiss
xchg
jg
stos
pop
inc
retf
fwait
loop
jg
dec
xchg
jnp
(bad)
fisub
xchg
out
sbb
leave
clc
dec
or
sbb
jmp
aas
cmc
mov
(bad)
mov
or
inc
icebp
add
in
repz
dec
or
inc
xchg
icebp
inc
(bad)
scas
les
(bad)
(bad)
(bad)
cmp
mov
mov
pop
fscale
add
mov
push
ins
out
or
xor
pop
mov
mov
cmp
(bad)
addr16
icebp
cwde
in
je
(bad)
(bad)
(bad)
(bad)
mov
and
pop
xchg
jne
jae
mov
inc
cld
or
mov
fisttp
aad
push
xor
test
scas
sbb
inc
push
jo
popa
jmp
outs
call
(bad)
(bad)
(bad)
(bad)
fldenv
scas
xchg
shl
nop
xchg
pop
mov
aas
daa
into
repz
push
push
int
push
mov
(bad)
(bad)
jmp
cmps
jae
xor
jg
icebp
int3
pop
dec
cld
mov
aas
pop
adc
push
push
cs
mov
rcr
(bad)
xor
jae
mov
inc
lea
fadd
sbb
mov
inc
sti
cmp
(bad)
(bad)
push
fisttp
in
add
inc
adc
retf
mov
loop
xor
(bad)
(bad)
push
sahf
mov
mov
shl
push
jnp
jmp
cli
mov
mov
(bad)
(bad)
(bad)
push
ret
mov
ja
mov
push
loope
adc
mov
xchg
jae
icebp
ret
pop
(bad)
(bad)
inc
cmc
pop
dec
dec
xor
xor
dec
mov
sahf
jo
out
pop
scas
fwait
cmp
inc
xchg
out
mov
jne
repnz
and
pop
enter
(bad)
(bad)
(bad)
jmp
push
mov
nop
jns
retf
inc
aas
jo
bnd
fsub
jecxz
xchg
mov
btr
push
cwde
pop
jecxz
cmp
pop
fcom
les
loopne
mov
js
pushf
movs
jl
jecxz
inc
pop
stos
sub
jmp
movs
inc
ja
push
mov
push
stos
cmp
std
(bad)
(bad)
jg
or
xchg
retf
adc
cmp
pop
mov
stc
(bad)
jnp
push
jl
jg
ins
add
fwait
pop
and
fnstsw
jns
and
das
cmp
push
fild
cld
inc
stc
call
or
mov
adc
sbb
movsx
lock
call
dec
ror
cmps
adc
(bad)
xor
push
(bad)
(bad)
dec
sub
xchg
das
sub
rol
out
push
divps
lea
jmp
int
(bad)
(bad)
(bad)
inc
aad
dec
inc
cmp
fdiv
pop
ins
icebp
cmp
jg
cmp
mov
out
jmp
or
jmp
xlat
pop
add
ss
sbb
call
mov
loop
out
xor
sbb
(bad)
call
fist
add
sbb
out
and
cld
call
add
mov
and
xchg
jne
xchg
jo
ds
mov
(bad)
jg
inc
(bad)
outs
std
mov
xor
mov
(bad)
jmp
scas
enter
pop
pop
into
dec
repnz
imul
aas
shl
fwait
sub
push
inc
jl
std
(bad)
(bad)
jmp
push
xchg
push
retf
pop
cs
jle
clc
mov
(bad)
(bad)
cmps
repz
ss
pop
xchg
hlt
inc
sub
fisttp
xor
hlt
(bad)
(bad)
fisub
jmp
cmp
outs
xchg
loope
out
clc
(bad)
jg
ror
(bad)
out
jecxz
out
lods
mov
aam
add
or
test
cs
(bad)
call
fsubr
sar
xor
cmp
jecxz
out
aaa
scas
es
pop
inc
jg
fisubr
iret
push
mov
mov
mov
cmp
outs
mov
not
jmp
inc
cli
add
or
rol
(bad)
fwait
or
fnstcw
inc
jmp
test
jae
ja
mov
stos
(bad)
pop
hlt
mov
add
clc
es
pop
cmp
ins
pop
stc
mov
pop
nop
pop
or
fdivr
(bad)
jg
fbstp
js
out
xchg
mov
movs
mov
jge
lds
iret
pop
hlt
dec
mov
cmp
das
ins
push
jecxz
(bad)
(bad)
(bad)
(bad)
mov
pushf
mov
add
in
aas
movs
stc
jp
lock
xor
outs
cmps
std
xor
cmc
dec
xor
fiadd
mov
paddsb
and
call
jo
jns
sbb
std
enter
pop
sub
jae
and
sbb
(bad)
(bad)
jmp
dec
jmp
sbb
int3
in
fs
aas
aas
jge
pushf
cli
inc
div
sbb
bound
cli
(bad)
(bad)
inc
adc
jge
mov
dec
out
push
push
das
add
dec
stc
icebp
and
xor
xchg
sub
(bad)
(bad)
out
mov
jl
retf
movd
cmp
div
xlat
fdiv
movs
adc
(bad)
(bad)
(bad)
(bad)
and
inc
dec
fidivr
stc
jo
stos
adc
jmp
mov
jg
(bad)
call
xchg
xchg
test
scas
(bad)
(bad)
(bad)
pusha
push
call
out
retf
cmp
jg
out
inc
ds
jg
xor
(bad)
(bad)
call
not
xor
jle
xor
call
fs
fsub
and
(bad)
mov
sahf
test
ret
es
fstp
dec
cs
jge
idiv
(bad)
(bad)
(bad)
cmp
jnp
xor
mov
fisttp
xchg
cmp
jle
pop
idiv
(bad)
cmp
or
scas
jae
jo
and
add
add
test
fcomp
(bad)
sahf
pop
shr
cmps
rcl
test
outs
jnp
hlt
cmp
(bad)
sahf
pop
fst
sbb
xor
(bad)
popf
cmc
xchg
dec
jge
jge
jmp
hlt
ja
add
xchg
push
pand
call
ja
ins
ins
int
mov
mov
cmp
cmp
sbb
(bad)
(bad)
inc
lahf
xor
dec
jmp
mov
ds
std
lds
push
mov
ds
jmp
neg
cmc
(bad)
call
retf
(bad)
sub
jmp
enter
mov
push
dec
clc
jg
or
fidiv
sub
adc
adc
icebp
dec
mov
push
sbb
retf
shl
sbb
mov
jge
sub
(bad)
(bad)
mov
shr
mov
jg
pop
into
ret
fdivr
add
inc
xchg
(bad)
pop
icebp
data16
xchg
push
dec
pushf
ret
std
adc
jle
mov
ins
inc
outs
dec
ret
call
(bad)
test
jnp
mov
xchg
popf
out
jo
mov
fs
pop
ja
xor
jbe
add
pop
push
dec
test
sbb
(bad)
(bad)
inc
fucomp
ret
in
adc
test
dec
sahf
mov
mov
fst
mov
(bad)
(bad)
(bad)
push
jmp
cmp
mov
(bad)
xlat
inc
push
push
mov
out
(bad)
push
mov
js
sti
cwde
(bad)
(bad)
(bad)
(bad)
jmp
or
mov
test
jmp
pop
sbb
jle
mov
int
(bad)
(bad)
out
cli
js
in
sbb
cld
cmp
pop
cli
add
push
dec
movs
cmp
bound
(bad)
(bad)
(bad)
push
sub
ja
out
cmp
shl
cwde
sbb
or
mov
jb
add
push
repnz
ret
movs
mov
push
je
cmps
clc
je
sbb
(bad)
(bad)
(bad)
jmp
add
adc
mov
push
iret
aas
test
pop
call
inc
(bad)
(bad)
(bad)
call
add
push
aam
sahf
xor
arpl
mov
pop
fmul
mov
(bad)
int
mov
sbb
xchg
jl
inc
jno
jl
sbb
mov
push
lahf
mov
jbe
arpl
popa
or
mov
inc
push
popf
add
push
cli
(bad)
jmp
or
popa
(bad)
dec
call
sbb
bound
jno
xchg
adc
and
xchg
ja
(bad)
xchg
outs
dec
jecxz
xor
(bad)
cmp
stos
je
fstp
or
push
int3
(bad)
fucomip
cmp
sbb
cmc
xchg
sub
(bad)
(bad)
jg
aad
shl
leave
jecxz
int3
stos
test
movs
cmp
out
ret
cmp
jmp
push
loope
sub
cwde
jnp
sahf
jmp
push
pop
mov
fs
adc
out
arpl
mov
call
mov
pop
bound
pminsw
lods
inc
fmul
je
jne
sbb
inc
jle
lds
ins
mov
jb
(bad)
(bad)
jg
cmp
daa
cmps
cmp
push
sbb
jp
into
(bad)
(bad)
call
out
enter
lahf
not
int
je
jne
or
lds
shl
(bad)
inc
lea
jno
fimul
mov
jge
retf
clc
push
adc
mov
out
(bad)
(bad)
call
rcl
push
pushf
out
test
ss
mov
test
repnz
stc
and
(bad)
jmp
sbb
loope
test
jge
clc
hlt
rcr
std
jno
mov
call
pop
sar
cld
retf
fidiv
(bad)
(bad)
push
pop
sub
jae
cmps
fdivr
and
push
pop
int
out
cdq
mov
jmp
retf
pop
or
jmp
in
(bad)
aam
mov
(bad)
outs
pop
jmp
sub
sub
(bad)
(bad)
push
cmps
leave
cmp
cmc
pusha
hlt
call
adc
mov
inc
cld
jmp
or
jle
mov
jge
jecxz
addr16
jg
push
test
mov
in
cmp
(bad)
jno
arpl
inc
fnstcw
icebp
es
call
loop
ret
xchg
(bad)
sbb
pop
add
pop
(bad)
(bad)
(bad)
dec
das
iret
(bad)
cld
cmp
(bad)
fsub
das
cmp
aaa
mov
or
dec
popa
jmp
fwait
or
nop
popa
sbb
(bad)
aam
mov
push
inc
fisub
into
sti
(bad)
(bad)
(bad)
fild
inc
adc
imul
fsubr
inc
and
lods
sub
jae
pop
movs
xlat
cmp
sub
cs
(bad)
(bad)
push
sub
fsub
mov
sti
ds
test
jl
test
inc
sbb
or
mov
(bad)
jmp
xor
mov
(bad)
jne
iret
ror
cmps
jmp
push
fmul
out
dec
jb
dec
xor
mov
dec
out
out
pop
mov
adc
(bad)
(bad)
(bad)
call
or
mov
pop
(bad)
(bad)
ds
fistp
fadd
ret
(bad)
jmp
pop
icebp
and
std
mov
add
fild
(bad)
(bad)
mov
inc
xchg
sti
popa
cmp
add
xchg
aam
aam
mov
add
fild
push
data16
jno
imul
es
and
and
mov
neg
repnz
and
pop
mov
clc
gs
(bad)
(bad)
(bad)
call
cmp
mov
loopne
push
and
jbe
xchg
clc
xor
(bad)
(bad)
(bad)
fild
outs
shr
cmp
fisubr
lahf
add
and
mov
(bad)
(bad)
push
push
xchg
jecxz
fisttp
arpl
aas
retf
es
lods
cmp
or
jecxz
popf
mov
call
xlat
pop
mov
(bad)
pop
call
(bad)
mov
clc
sbb
popf
jmp
mov
hlt
sub
(bad)
mov
aam
sbb
dec
(bad)
outs
xor
add
out
(bad)
(bad)
(bad)
mov
cmp
mov
add
cmp
sbb
cmp
hlt
rol
inc
push
(bad)
inc
cdq
(bad)
scas
imul
adc
data16
(bad)
(bad)
(bad)
call
mov
dec
movs
mov
push
xchg
lahf
or
jl
pop
fild
sub
xchg
sub
dec
push
dec
loope
xor
xor
call
and
mov
or
jae
outs
cwde
dec
test
mov
fwait
out
mov
in
xor
cmp
clc
sub
lock
cdq
mov
inc
rcl
and
sti
push
inc
add
(bad)
(bad)
call
jl
push
xor
or
mov
push
and
mov
xor
sbb
sub
int3
pop
idiv
(bad)
jmp
fcomp
jmp
cld
cmp
repnz
dec
inc
jmp
(bad)
(bad)
(bad)
(bad)
aas
fbld
sub
sti
pop
movs
outs
cld
cwde
mov
inc
ds
int
push
ds
(bad)
inc
xchg
pop
call
dec
popa
test
ret
sbb
xchg
(bad)
(bad)
inc
xor
xor
gs
outs
outs
sub
ja
pop
leave
icebp
mov
pop
dec
outs
jne
fdiv
movs
mov
mov
hlt
loope
mov
cmc
inc
out
loope
imul
es
sub
call
mov
pop
jp
dec
popa
add
in
push
pop
addr16
pop
push
(bad)
cmp
call
mov
xchg
call
cmp
pop
setb
iret
jg
sahf
jo
cs
jmp
(bad)
inc
dec
push
fisttp
test
fs
mov
fsqrt
xor
mov
sub
mov
jb
lahf
inc
mov
mov
ds
mov
outs
mov
retf
shl
(bad)
(bad)
(bad)
(bad)
(bad)
mov
enter
ret
clc
jnp
into
sub
sbb
mov
jle
sti
(bad)
(bad)
(bad)
(bad)
(bad)
js
and
nop
cmps
push
jns
call
out
jne
arpl
mov
adc
mov
add
(bad)
(bad)
call
fdivr
or
sbb
pop
leave
jns
lock
stc
repnz
sbb
pop
(bad)
dec
inc
push
call
adc
cmps
call
jbe
addr16
out
pop
(bad)
call
xchg
mov
add
ds
dec
stc
rcl
(bad)
(bad)
(bad)
jg
lahf
(bad)
dec
inc
cmp
cmp
mov
dec
mov
vandnps
outs
pushf
loop
mov
(bad)
inc
and
aas
cmp
cmc
mov
call
push
pop
pop
daa
sub
pusha
jne
not
out
clc
ret
ds
push
pop
frstor
mov
jle
(bad)
(bad)
(bad)
jmp
aaa
mov
jmp
ds
js
pusha
cli
and
inc
mov
mov
(bad)
(bad)
jg
iret
push
(bad)
setno
cmps
daa
inc
int
jecxz
call
(bad)
pop
loope
and
push
(bad)
(bad)
dec
xchg
leave
test
jae
int
jl
or
cmp
mov
(bad)
inc
cli
or
scas
sar
nop
cmp
push
mov
cmps
(bad)
(bad)
(bad)
dec
jb
out
fisub
into
cli
sub
xchg
ins
push
das
cmp
ds
push
cld
mov
mov
lock
(bad)
(bad)
fisttp
nop
pushf
imul
adc
pusha
cmps
pop
pop
and
mov
je
and
or
sbb
xor
xchg
adc
push
mov
punpcklbw
cs
aas
inc
icebp
ds
jge
jmp
adc
(bad)
(bad)
(bad)
(bad)
mov
fldenv
(bad)
dec
jne
sbb
mov
mov
jecxz
(bad)
aas
or
mov
xor
cld
leave
jb
out
stos
ja
lahf
and
icebp
aaa
xlat
sub
(bad)
push
mov
aam
mov
mov
push
arpl
out
popf
mov
add
(bad)
push
in
sbb
sbb
jl
pop
cmp
mov
out
out
(bad)
test
hlt
sbb
(bad)
(bad)
(bad)
jmp
out
push
(bad)
and
retf
mov
pop
adc
stc
push
jnp
jmp
(bad)
mov
mov
int
out
push
aaa
std
jecxz
jg
(bad)
(bad)
(bad)
(bad)
sti
add
sbb
arpl
out
sub
repz
int
ds
jge
cdq
jmp
ins
ror
inc
push
(bad)
fstp
push
lods
mov
lock
(bad)
inc
call
aaa
fistp
jg
fistp
xchg
jmp
(bad)
dec
sbb
sbb
das
inc
(bad)
aad
or
fs
fsub
loop
in
pop
hlt
call
ror
mov
xor
pop
(bad)
out
mov
(bad)
(bad)
(bad)
jmp
sub
push
dec
xchg
punpckhwd
stc
and
lds
scas
inc
adc
and
pxor
cmp
mov
pop
pop
aas
retf
shl
leave
shr
cli
jmp
ret
adc
pop
shl
adc
ds
adc
jns
(bad)
(bad)
mov
movs
ret
mov
cs
in
stos
mov
xor
cmp
(bad)
(bad)
(bad)
jge
jecxz
outs
sahf
into
xchg
test
popa
rol
out
popf
loope
pop
cli
cmp
shl
jns
jae
(bad)
(bad)
(bad)
(bad)
mov
into
not
jnp
sub
cli
jnp
sub
pop
iret
inc
pop
in
not
call
cli
in
daa
push
or
cld
xchg
xchg
ja
push
mov
repz
out
out
push
(bad)
(bad)
(bad)
(bad)
fld
xchg
mov
shr
pop
xor
stc
and
(bad)
(bad)
jmp
int3
mov
push
lods
sub
adc
pop
xchg
es
(bad)
xchg
jp
sbb
xchg
inc
aaa
adc
cld
fsubr
jno
imul
mov
xchg
fsubr
jmp
dec
shl
jmp
rol
(bad)
cdq
push
shl
jmp
(bad)
sub
xchg
mov
cwde
out
popf
sub
outs
(bad)
fcomip
sahf
lock
mov
mov
out
fnstenv
sub
(bad)
(bad)
call
xchg
test
or
ror
aaa
push
scas
sub
jno
repz
sbb
je
xchg
adc
dec
mov
bound
repz
adc
out
xchg
icebp
or
fwait
dec
jmp
nop
sbb
ret
mov
push
push
or
scas
xchg
rcr
xchg
jae
pop
mov
aaa
call
(bad)
std
ins
mov
out
push
mov
or
mov
enter
add
popa
movlps
scas
push
clc
push
sub
jns
inc
xor
sar
rol
jno
cmp
mov
or
pop
not
aam
xor
pop
dec
popf
repnz
mov
(bad)
adc
std
push
ja
push
inc
pusha
ds
dec
(bad)
(bad)
jg
pop
push
sbb
lahf
ds
push
arpl
cmp
sar
jg
stos
test
or
fxch
ret
(bad)
iret
mov
jle
or
sti
addr16
mov
aam
sub
in
ja
sbb
rcl
or
inc
ficomp
test
mov
push
cmps
call
ins
arpl
jb
in
mov
push
or
xchg
lahf
aam
rol
(bad)
(bad)
(bad)
jmp
xchg
stc
inc
aas
mov
or
push
xchg
adc
mov
pop
sar
(bad)
call
fimul
mov
popa
push
jge
xor
sar
test
jmp
mov
(bad)
outs
scas
cmp
xor
enter
lods
push
push
cli
(bad)
jmp
popa
pop
in
dec
pop
and
outs
vpmovsxwd
cmps
aad
nop
test
or
jne
data16
(bad)
(bad)
jmp
js
mov
push
pop
test
pop
adc
das
pushf
test
jmp
(bad)
clc
pop
(bad)
push
xchg
int
test
arpl
jmp
push
pop
aas
mov
aad
outs
jbe
adc
jge
jl
mov
and
mov
mov
add
(bad)
(bad)
(bad)
cmp
(bad)
xlat
mov
xor
jecxz
push
lods
mov
mov
adc
nop
cld
push
and
lock
aas
shr
lods
push
pop
pop
enter
std
movs
jecxz
push
inc
sbb
dec
sub
mov
leave
xchg
pop
jnp
jp
jle
aaa
add
repnz
sub
(bad)
cmp
add
enter
scas
sbb
retf
nop
pushf
scas
addr16
shl
outs
and
mov
(bad)
mov
rcl
into
rcr
mov
cmps
push
push
push
mov
xchg
loop
or
bnd
(bad)
(bad)
(bad)
call
or
pop
shr
xchg
lods
xchg
ficom
out
inc
idiv
jmp
pop
cdq
fwait
outs
hlt
das
movs
clc
shl
iret
outs
pop
sahf
pop
call
int
xchg
bound
(bad)
jmp
pop
add
mov
scas
imul
xchg
ds
scas
xor
jns
(bad)
(bad)
dec
push
das
shl
in
inc
pop
fsubrp
ins
scas
push
dec
lds
shr
inc
jp
fdivr
into
pop
sbb
aaa
pop
sub
jmp
loope
mov
hlt
ror
call
clc
cld
add
add
mov
into
cmps
mov
pop
and
jmp
jle
ret
ficom
mov
scas
jmp
fstp
(bad)
mov
cli
pop
ror
mov
inc
cld
outs
or
cmp
aaa
in
jmp
push
lock
test
fcomip
call
pop
mov
inc
into
cmp
fisubr
lahf
and
stc
pushf
loope
(bad)
mov
jmp
in
cmp
jnp
pusha
clc
stc
xor
cli
jl
sti
pop
mov
call
pushf
loop
inc
das
and
mov
movs
jge
(bad)
mov
add
das
dec
daa
ins
push
xor
js
ja
add
jmp
and
adc
aaa
inc
retf
loope
cmp
in
jp
mov
shl
jmp
cli
sbb
or
ja
in
test
stc
outs
sbb
sub
mov
push
inc
imul
sar
mov
push
repnz
sub
mov
jne
fnstcw
push
mov
push
mov
jae
mov
into
sti
cwde
push
dec
outs
out
and
push
ss
(bad)
out
cli
(bad)
mov
iret
and
lock
adc
adc
hlt
jg
pop
stos
pop
push
fcomp
(bad)
(bad)
cmp
push
sbb
mov
mov
dec
not
mov
out
jne
inc
cmc
lds
mov
(bad)
(bad)
out
or
jg
addr16
(bad)
sahf
imul
adc
(bad)
fild
int
pop
movs
test
mov
shl
je
inc
icebp
push
in
aas
rcr
outs
cli
(bad)
(bad)
jnp
pop
dec
jle
or
push
push
cwde
iret
test
into
and
aad
(bad)
jmp
add
(bad)
mov
fisubr
jne
mov
call
mov
neg
int3
fsubp
mov
int
add
sub
call
shr
fwait
test
cmp
xor
fs
jmp
cdq
sbb
sbb
fdivr
sahf
cmp
xlat
or
cmp
push
retf
xor
loop
std
pushf
pop
mov
rcr
jnp
sub
xlat
mov
jno
add
fild
repz
sbb
das
jns
mov
fwait
(bad)
call
cld
ins
std
sar
pusha
xchg
push
js
sbb
aas
jbe
dec
sti
pusha
dec
(bad)
cwde
movntq
out
mov
scas
(bad)
(bad)
(bad)
dec
sti
nop
out
enter
hlt
xchg
pop
sub
jo
mov
sbb
in
ins
shl
repz
inc
mov
ss
mov
je
mov
pop
or
hlt
mov
sub
(bad)
(bad)
jg
retf
inc
(bad)
cdq
fucomp
dec
jecxz
sub
retf
xor
xchg
(bad)
(bad)
(bad)
(bad)
jl
cmc
fwait
push
cmp
dec
lds
jns
lods
mov
(bad)
out
stos
xor
push
cmp
(bad)
(bad)
(bad)
jmp
daa
mov
and
out
add
dec
xchg
push
and
xchg
lahf
or
fiadd
mov
push
mov
(bad)
(bad)
mov
popf
inc
push
pop
cmp
mov
addr16
adc
mov
(bad)
addr16
cmp
(bad)
movs
not
or
stc
sar
call
popa
xchg
loop
shl
in
xchg
xchg
mov
aaa
adc
add
dec
jp
or
(bad)
jmp
jno
cmps
les
jg
(bad)
fiadd
xchg
mov
pusha
push
in
test
jns
xchg
cdq
iret
imul
iret
(bad)
(bad)
(bad)
out
ins
call
inc
cs
(bad)
inc
cmp
inc
inc
pop
inc
inc
hlt
push
fisub
xchg
cmp
and
adc
icebp
call
jp
addr16
(bad)
pop
xchg
into
retf
clc
sbb
jno
xchg
loopne
or
inc
jno
(bad)
(bad)
dec
jbe
or
call
movs
fistp
sub
(bad)
ds
cli
(bad)
dec
adc
cld
push
out
and
jae
mov
cmp
out
xor
or
(bad)
(bad)
mov
inc
enter
sar
dec
aad
mov
imul
(bad)
(bad)
(bad)
push
cld
cmp
sti
cli
adc
int
cmp
fsubr
mov
push
sar
rol
jl
cmp
jmp
rcr
push
cmps
(bad)
(bad)
call
and
inc
jge
mov
cmp
(bad)
jg
jl
outs
or
arpl
aam
dec
std
mov
leave
xlat
cmp
jp
mov
mov
jmp
jo
(bad)
fcomip
cmp
xor
js
lock
inc
ja
out
test
xchg
(bad)
(bad)
call
std
ins
pop
jno
sbb
cmc
adc
mov
call
(bad)
(bad)
(bad)
(bad)
(bad)
jg
push
fst
(bad)
out
leave
(bad)
cdq
push
pop
aaa
mov
hlt
add
xor
lock
cmp
(bad)
(bad)
jmp
pop
cwde
lahf
cmp
sbb
jnp
sub
jns
xchg
loop
lods
out
mov
add
pop
mov
repnz
cmc
or
or
mov
jecxz
jns
xchg
push
js
iret
cmc
push
fild
pop
mov
test
jns
popf
fcomp
(bad)
(bad)
(bad)
dec
mov
imul
int3
ss
or
sub
jmp
fdiv
push
lock
jge
dec
pop
stos
mov
xchg
movs
pop
ret
mov
inc
push
sti
and
dec
pop
mov
out
mov
cmp
xchg
outs
ss
jg
int3
push
dec
retf
inc
aas
gs
lahf
push
xchg
jecxz
(bad)
(bad)
(bad)
(bad)
jmp
inc
fild
repz
fadd
mov
js
inc
mov
(bad)
(bad)
push
sar
inc
in
pop
fstp
(bad)
dec
cmp
movs
push
stos
inc
xor
fdivr
icebp
sar
mov
jle
fisub
(bad)
(bad)
push
or
jmp
int3
dec
dec
shl
sub
and
test
icebp
adc
(bad)
(bad)
(bad)
(bad)
(bad)
cld
sub
jge
(bad)
xlat
mov
lods
sbb
out
(bad)
lahf
mov
les
and
out
(bad)
(bad)
jmp
dec
(bad)
js
movs
ds
sbb
repnz
jbe
mov
jg
loope
mov
(bad)
adc
(bad)
(bad)
call
jnp
jns
jmp
jg
pop
in
test
ins
es
mov
cmp
(bad)
(bad)
jmp
jbe
or
cmp
(bad)
adc
push
adc
mov
stc
or
(bad)
(bad)
(bad)
dec
adc
xor
jecxz
aam
ss
ds
lea
add
xor
outs
sbb
(bad)
(bad)
call
mov
fcomp
pop
pop
jmp
xchg
iret
fstp
mov
(bad)
(bad)
(bad)
push
pop
in
mov
sub
xor
aas
mov
dec
shl
sbb
pop
retf
loopne
mov
call
iret
sbb
jl
cmp
pop
pop
pop
inc
jno
sahf
aas
(bad)
(bad)
push
add
push
loop
sub
addr16
xor
mov
lods
sub
jg
test
sahf
and
mov
in
fimul
jge
cli
cmp
sbb
mov
sbb
out
sbb
jmp
out
cmp
jmp
sub
xlat
jl
fsub
and
and
(bad)
mov
out
add
xor
imul
xor
cmp
loopne
sbb
jg
aas
int3
and
xor
xor
daa
jb
and
fisub
ffreep
in
cmps
pop
iret
adc
int
cmp
nop
arpl
dec
and
fmul
jp
fcomp
pop
call
(bad)
cli
jno
aaa
mov
hlt
retf
dec
int3
jle
dec
inc
jg
dec
repnz
lahf
bswap
(bad)
(bad)
out
(bad)
popa
pop
retf
adc
(bad)
cli
lods
push
popf
sub
cmps
jmp
rcr
mov
ss
jo
push
push
icebp
xchg
aad
or
(bad)
(bad)
(bad)
mov
cmps
pusha
movs
jge
and
jge
aaa
cli
js
sti
outs
and
xor
mov
std
(bad)
(bad)
call
mov
xchg
aas
sar
data16
adc
xchg
sti
inc
jo
and
xchg
mov
mov
jge
stos
ins
inc
mov
inc
lea
mov
popa
inc
cmc
add
imul
scas
outs
js
popa
les
jns
(bad)
(bad)
(bad)
jg
mov
(bad)
rcr
mul
push
xor
jo
jmp
int3
adc
xor
fiadd
lahf
add
(bad)
(bad)
fmul
fcomp
data16
test
push
push
mov
(bad)
(bad)
jg
mov
jle
jmp
imul
pop
movs
je
adc
sub
(bad)
cmp
or
jle
add
cld
push
push
aad
mov
cli
mov
rcl
fcmovbe
in
xor
(bad)
(bad)
jmp
push
(bad)
pop
jno
adc
adc
(bad)
ins
add
ds
cmp
sbb
les
in
outs
pop
add
push
hlt
jge
sub
pop
sti
add
das
pop
xor
call
lods
mov
add
js
inc
mov
and
sub
jp
(bad)
into
lea
(bad)
dec
loop
(bad)
(bad)
(bad)
fimul
cli
int
sbb
inc
lahf
iret
out
mov
scas
sbb
fstp
dec
rcl
ret
sar
shr
stos
adc
(bad)
je
dec
fstp
cwde
cmp
jg
(bad)
jmp
mov
dec
repnz
out
xor
xchg
dec
pop
inc
jmp
mov
jmp
(bad)
push
or
pop
pop
xor
pop
call
add
mov
jl
cmp
(bad)
mov
and
and
mov
pop
nop
jmp
(bad)
sub
fld
aaa
dec
call
inc
aad
and
xlat
pop
jbe
mov
int3
cmp
sbb
loopne
out
into
jne
jmp
sub
dec
add
mov
aam
sar
jmp
sar
addr16
in
mov
inc
xlat
mov
out
nop
(bad)
cmps
inc
imul
mov
mov
cmp
repz
sbb
add
cdq
sub
add
xor
dec
mov
xlat
xchg
ins
pop
mov
call
ret
iret
sti
dec
adc
push
adc
or
scas
sar
in
mov
stc
in
mov
pop
sbb
cmps
push
jle
sbb
xlat
cld
pop
mov
sar
scas
sbb
or
jl
xchg
mov
jmp
stc
adc
add
adc
pop
lods
inc
repz
add
xor
inc
dec
jl
sbb
push
mov
mov
jg
into
or
sbb
test
stc
lock
jnp
cdq
inc
(bad)
ja
(bad)
(bad)
push
or
lods
fst
push
loop
outs
dec
and
jge
mov
lds
cmp
add
hlt
(bad)
call
add
iret
dec
mov
sub
xor
fbld
ja
pop
rcl
push
jo
cmp
xor
inc
repnz
les
daa
fmul
inc
bswap
cmp
inc
jge
xchg
and
(bad)
(bad)
(bad)
call
xlat
jmp
retf
pop
push
cmp
sbb
fxch
retf
out
enter
std
inc
and
push
mov
cli
(bad)
jmp
test
or
jmp
mov
enter
aaa
push
add
push
pushf
jmp
xchg
and
cmc
cmp
inc
ss
cmc
(bad)
(bad)
(bad)
inc
pop
dec
iret
cdq
inc
jle
jno
out
sti
fimul
xchg
inc
jle
fadd
dec
loope
jg
mov
(bad)
(bad)
ficom
cmp
stc
loopne
(bad)
(bad)
imul
outs
shl
push
add
mov
push
std
(bad)
mov
adc
mov
sub
xchg
or
(bad)
call
scas
je
sbb
aas
repnz
xchg
ins
in
outs
aas
(bad)
(bad)
(bad)
push
mov
loopne
aas
or
jno
aad
add
arpl
addr16
cmp
ror
xchg
push
clc
mov
pushf
jne
sub
mov
fucomi
lods
mov
call
push
fadd
inc
stos
(bad)
dec
fcmovb
sbb
mov
pop
push
cmp
jae
std
int
sub
call
pop
mov
dec
xrelease
pop
jge
cmp
jnp
or
pushf
mov
jns
(bad)
(bad)
(bad)
(bad)
mov
xchg
(bad)
jbe
push
stos
or
push
(bad)
retf
movs
out
sar
pushf
loope
and
fld
(bad)
dec
jmp
dec
xor
xor
lock
mov
(bad)
fidiv
out
aam
xor
dec
push
jge
(bad)
out
daa
dec
enter
mov
mov
mov
cld
jbe
ja
daa
push
fisubr
movs
push
mov
add
jmp
mov
xchg
(bad)
lods
stos
and
(bad)
aas
test
push
push
mov
test
hlt
popa
sahf
aad
movs
fbld
(bad)
mul
imul
cmc
stos
lods
mov
xchg
(bad)
(bad)
(bad)
mov
and
pop
loopne
add
cdq
arpl
dec
scas
call
cdq
inc
sbb
call
jle
in
add
fstp
ja
out
pop
xchg
jg
cs
push
sar
not
(bad)
(bad)
push
ror
xor
mov
cld
outs
push
or
iret
add
div
rcl
(bad)
fist
mov
repnz
jae
repz
mov
pop
gs
sbb
outs
in
inc
cld
addr16
push
mov
jmp
sahf
inc
dec
push
hlt
jb
test
shl
out
(bad)
call
stos
sahf
(bad)
push
cmp
pop
fsubr
and
mov
ins
mov
jmp
test
icebp
(bad)
ds
lahf
test
loope
(bad)
push
inc
jmp
add
je
mov
add
hlt
push
imul
(bad)
push
dec
jg
jge
in
ud0
mov
push
lds
sub
fstp
lds
sub
and
nop
movs
loope
pushf
pop
or
mov
cmp
(bad)
(bad)
(bad)
jmp
ret
je
mov
lods
push
inc
cld
xchg
iret
pusha
sbb
call
mov
jae
and
inc
fimul
leave
mov
adc
jmp
lds
repnz
pop
inc
fidivr
scas
mov
mov
mov
loopne
dec
iret
xor
imul
cdq
xor
mov
fld
outs
jae
xor
jne
(bad)
call
mov
repz
jg
jle
mov
hlt
sti
jg
call
dec
int
xchg
cli
(bad)
(bad)
(bad)
mov
test
test
push
out
pop
lods
daa
inc
lahf
jecxz
aam
clc
inc
(bad)
std
jg
fwait
push
xchg
mov
sbb
push
push
cdq
les
jbe
and
pushf
ficomp
pop
sti
jns
clc
(bad)
(bad)
jmp
cmp
rol
cli
in
jecxz
ret
adc
cmp
jbe
or
pop
(bad)
test
in
sbb
iret
test
repz
xchg
mov
push
in
dec
and
or
xchg
push
xchg
push
aaa
jae
into
call
sbb
push
jne
inc
sbb
jmp
loop
int3
pop
rcr
ret
jmp
dec
dec
jp
inc
mov
popa
in
and
cmp
stos
(bad)
(bad)
(bad)
(bad)
call
pop
stos
es
mov
movs
cmp
inc
arpl
mov
jns
in
push
cld
ds
(bad)
(bad)
jmp
push
hlt
cwde
or
add
cld
dec
pop
jge
fisttp
sar
add
jle
sbb
mov
(bad)
pop
mov
into
jae
lods
jecxz
push
fwait
rol
xlat
jno
add
mov
stos
add
cmp
and
ret
(bad)
mov
cdq
out
inc
es
mov
push
mov
icebp
fidivr
sar
std
lods
(bad)
(bad)
inc
jmp
mov
aaa
ins
ss
daa
jns
aaa
or
mov
in
ins
dec
fldcw
call
push
inc
cmp
xor
pop
or
push
ret
mov
jg
pop
loop
push
or
cld
arpl
push
aas
xchg
stc
mov
jns
jnp
stos
inc
jmp
xor
ins
or
(bad)
jg
iret
stc
inc
outs
fisub
push
push
jecxz
das
test
jnp
imul
(bad)
aad
pushf
iret
je
sub
jmp
xor
retf
pop
or
rcr
test
call
dec
ret
mov
and
push
and
test
aas
cmp
dec
popf
cli
mov
jae
or
jmp
addr16
mov
(bad)
(bad)
(bad)
(bad)
call
xor
(bad)
lods
loope
lock
fld
cmp
popa
jbe
mov
push
mov
retf
and
cmp
call
dec
jecxz
call
repz
movs
cli
inc
mov
shr
mov
cmp
(bad)
out
stos
js
fdivr
push
push
push
repnz
stc
(bad)
(bad)
mov
test
int
jmp
sti
loop
dec
jle
(bad)
(bad)
call
jo
rcr
jge
add
mov
mov
cli
jmp
mov
cld
shl
(bad)
inc
cmp
jl
xor
test
sub
push
ins
out
clc
jle
daa
rol
lods
(bad)
call
stos
push
xchg
jo
iret
xchg
(bad)
xchg
sub
or
add
imul
stos
inc
sub
mov
(bad)
(bad)
inc
inc
jecxz
loop
pop
repnz
ds
iret
lea
or
cli
push
push
push
push
icebp
jnp
clc
mov
cs
(bad)
(bad)
in
fild
mov
or
sbb
lds
leave
fdecstp
arpl
(bad)
(bad)
inc
cli
div
sub
in
xchg
call
mov
out
outs
jmp
(bad)
(bad)
mov
fimul
adc
fsubr
pop
aad
push
jns
stc
pop
jmp
mov
mov
pop
ins
(bad)
push
xchg
test
ficomp
(bad)
dec
mov
dec
fdivp
ror
push
cli
fcmovnbe
scas
push
imul
mov
push
fucomip
jg
inc
xchg
repnz
test
mov
call
loop
(bad)
mov
cld
in
cmp
stc
in
xchg
aaa
mov
fild
mov
mov
stos
xor
icebp
in
xchg
fwait
and
out
iret
or
(bad)
(bad)
(bad)
sti
cmp
jg
(bad)
fadd
mov
jmp
rcr
fistp
and
inc
js
mov
sbb
int
test
mov
sub
push
xor
call
loopne
repz
cmp
data16
mov
aaa
or
or
repnz
(bad)
(bad)
push
push
xor
adc
outs
jecxz
int
mov
outs
mov
call
pop
stos
or
push
push
sar
jno
(bad)
aaa
jno
sbb
mov
lahf
fadd
mov
stos
outs
fnsave
aas
or
out
mov
js
sahf
mov
or
push
cmp
out
in
es
push
int
(bad)
(bad)
call
(bad)
dec
jmp
push
cmp
fadd
jge
dec
dec
in
inc
jg
adc
jmp
(bad)
(bad)
fild
ficomp
test
push
dec
push
nop
(bad)
outs
ret
mov
sti
sbb
loope
(bad)
jmp
pop
sbb
add
aam
loope
jle
sbb
pop
jne
ins
(bad)
(bad)
(bad)
call
adc
out
(bad)
mov
dec
sahf
pop
gs
in
jge
call
(bad)
(bad)
(bad)
aas
shr
(bad)
adc
pop
xchg
and
pop
mov
xchg
lods
shr
pop
inc
mov
mov
imul
int
adc
jne
test
hlt
fbstp
sbb
sti
aaa
mov
jmp
push
pop
adc
sti
sar
or
les
lods
add
jns
mov
jg
mov
inc
sbb
sub
fcomp
(bad)
(bad)
(bad)
mov
ins
jmp
push
in
xchg
repz
mov
jmp
mov
and
(bad)
jg
imul
aam
and
dec
fsubp
repz
hlt
mov
mov
into
(bad)
cld
xchg
das
jae
outs
clc
scas
push
mov
pop
(bad)
pop
scas
add
xchg
in
out
sub
(bad)
(bad)
(bad)
(bad)
fadd
cmp
dec
fadd
jge
inc
loopne
cmp
push
pop
int3
fldcw
add
mov
xchg
mov
fucom
xchg
icebp
repz
ds
pop
loopne
xchg
cwde
xor
out
retf
sbb
push
movs
sbb
adc
jnp
aaa
sbb
(bad)
(bad)
jmp
adc
out
mov
jno
cmp
das
test
add
xlat
jbe
ins
jb
push
fcomip
(bad)
(bad)
fcomp
ret
sbb
fisubr
in
jb
adc
lahf
clc
call
mov
call
pop
xor
iret
xor
lahf
xchg
pop
dec
shr
popa
sbb
call
clc
call
jecxz
mov
sbb
stc
retf
dec
cmp
inc
push
or
push
std
xor
data16
push
add
enter
sahf
movs
pop
jns
ja
cmp
mov
loopne
(bad)
(bad)
(bad)
jmp
mov
adc
jge
or
loope
push
into
imul
clc
xor
(bad)
jmp
push
out
add
stos
jno
or
jb
test
mov
lods
sbb
(bad)
(bad)
mov
ret
cmp
stos
mov
popf
outs
cmp
(bad)
mov
mov
and
daa
shr
cli
add
sub
pop
call
or
jge
stos
leave
fs
dec
sbb
scas
pop
or
xchg
(bad)
(bad)
(bad)
fst
pushf
(bad)
aam
(bad)
les
vmovss
outs
jae
sbb
and
jl
(bad)
pusha
repnz
aad
cwde
maxps
outs
inc
(bad)
aad
scas
jecxz
mov
lock
adc
out
loope
fcmovu
fnsave
cmc
inc
fcom
or
shl
mov
adc
dec
lock
jmp
push
adc
out
ins
or
sar
adc
(bad)
(bad)
push
xchg
mov
push
mov
fxch
mov
pop
mov
(bad)
(bad)
push
out
jl
into
(bad)
xchg
lods
mov
mul
into
jbe
jge
sbb
mov
in
out
jl
int
dec
ret
cmp
fbld
sahf
in
(bad)
(bad)
call
push
(bad)
jmp
cmc
mov
mov
inc
sub
repz
mov
jecxz
fidiv
(bad)
(bad)
(bad)
push
mov
xchg
pop
rcl
xchg
mov
pop
popa
mov
jle
cmc
push
mov
fldcw
pop
add
jl
mov
sar
mov
popa
xchg
in
cmp
jle
jmp
(bad)
jmp
push
imul
push
push
add
ds
push
jne
inc
pop
(bad)
(bad)
mov
mov
(bad)
popa
fsubrp
or
mov
outs
jg
add
imul
inc
pop
push
lock
mov
inc
mov
sbb
aas
mov
imul
mov
movs
test
adc
push
mov
sbb
fdivr
test
jae
push
out
cli
(bad)
inc
ss
cli
sbb
sbb
idiv
(bad)
(bad)
(bad)
(bad)
cmp
neg
scas
mov
dec
jge
(bad)
jmp
stos
jbe
mov
push
sbb
retf
cmps
loop
sbb
jmp
(bad)
(bad)
(bad)
(bad)
in
and
rcr
mov
push
push
jmp
stos
fwait
std
pop
sahf
xor
inc
dec
ds
cli
jg
and
fbstp
xor
pop
mov
push
aam
pop
loope
call
mov
sbb
call
out
inc
out
nop
sar
pop
in
mov
mov
lock
retf
ins
xchg
lods
jge
ds
sar
(bad)
jmp
xor
jo
outs
mov
mov
out
push
mov
sub
pusha
in
je
fild
ss
cmc
idiv
shl
mov
test
pop
ins
pop
int3
mov
into
sub
jle
dec
shr
(bad)
call
leave
(bad)
shr
in
cmp
scas
ja
lods
(bad)
test
add
inc
xchg
popf
(bad)
test
out
out
pop
mov
dec
xchg
std
sahf
mov
jmp
leave
adc
mov
call
call
push
add
sar
cdq
stos
outs
repz
jmp
xor
and
pop
sub
hlt
cdq
push
mov
dec
out
fild
movs
shl
pop
neg
scas
dec
fist
lds
repz
jg
jns
xchg
es
(bad)
(bad)
jmp
cmps
xor
dec
or
cmp
loop
xchg
repnz
sbb
or
jns
pop
xor
(bad)
(bad)
dec
xor
jb
cmp
nop
cmps
iret
jnp
in
stc
dec
sbb
or
sbb
(bad)
jmp
jg
mov
dec
cli
sbb
sub
and
(bad)
in
(bad)
inc
fdivr
aad
repz
jge
lock
add
mov
(bad)
(bad)
(bad)
inc
dec
cmp
sar
jg
arpl
push
aas
jle
pop
fdivr
(bad)
ins
loop
sub
dec
add
(bad)
jg
(bad)
fild
add
test
dec
jbe
repz
test
lock
cmps
(bad)
dec
fs
xchg
(bad)
xlat
out
outs
cmp
xor
dec
loope
jge
(bad)
(bad)
fsub
ds
jl
jnp
sbb
xchg
cli
outs
test
clc
call
dec
es
addr16
mov
aaa
dec
fsub
jmp
(bad)
jmp
imul
mov
mov
xchg
lock
(bad)
fild
(bad)
call
lahf
mov
mov
jne
dec
fs
(bad)
(bad)
push
js
dec
out
xchg
jle
jge
jbe
fistp
mov
jnp
sbb
call
(bad)
pop
call
push
inc
pop
int3
and
cwde
imul
fwait
je
pop
sbb
cmp
call
mov
aam
cmps
xor
sub
int
pop
(bad)
dec
push
push
and
out
dec
xchg
pop
popf
adc
movs
movs
cmp
push
imul
dec
fbstp
push
sbb
mov
stos
sbb
add
add
inc
mov
mov
push
(bad)
(bad)
(bad)
mov
call
pop
pop
mov
mov
fild
scas
arpl
push
pushf
fld
pop
dec
sar
xor
in
sahf
jle
inc
(bad)
fld
leave
call
clc
xchg
mov
rol
jle
loop
cmp
(bad)
jo
mov
jmp
cmp
cwde
cmp
push
in
cwde
mov
push
(bad)
sti
ret
ds
call
addr16
jbe
retf
cmp
(bad)
(bad)
jg
shl
ret
out
jle
push
xchg
fidiv
ds
mov
iret
inc
jns
lahf
(bad)
sahf
call
(bad)
(bad)
cld
call
out
gs
xor
jns
jo
cmp
fs
xchg
sub
(bad)
dec
mov
mov
loopne
pop
pop
pop
ja
daa
pop
dec
bound
(bad)
(bad)
call
mov
cmp
jge
mov
pop
jae
(bad)
icebp
push
cld
xor
in
es
or
push
loopne
(bad)
push
cmp
pop
outs
fsub
xchg
dec
fnstenv
push
and
fwait
ja
pop
push
das
mov
(bad)
(bad)
(bad)
inc
push
std
xor
stc
retf
int3
inc
cdq
cmc
mov
inc
sbb
aam
pop
mov
mov
(bad)
cmp
mov
clc
es
mov
sar
fwait
and
dec
clc
xchg
enter
jbe
(bad)
(bad)
mov
sbb
shl
xor
aas
sub
mov
adc
pop
jecxz
dec
fdivp
aaa
sbb
mov
pop
add
mov
jmp
push
ja
and
(bad)
xor
pop
(bad)
mov
retf
mov
loopne
(bad)
(bad)
aam
and
mov
dec
ds
jmp
inc
(bad)
(bad)
(bad)
mov
aas
pop
or
jp
mov
and
ins
daa
adc
ja
pop
mov
push
sbb
mov
cmc
xchg
pushf
inc
sbb
test
xor
push
sub
push
pushf
add
(bad)
aas
or
jl
jno
into
dec
push
push
(bad)
push
(bad)
(bad)
jmp
retf
push
aas
das
mov
addr16
fistp
jns
imul
test
cmp
(bad)
jmp
imul
ja
fnstcw
xor
int3
pop
inc
lods
mov
mov
sbb
dec
(bad)
out
mov
push
ins
xchg
(bad)
in
sub
(bad)
(bad)
(bad)
(bad)
mov
ficom
push
retf
xchg
call
cli
outs
xchg
pop
xor
mov
(bad)
(bad)
(bad)
mov
push
mov
clc
adc
cmp
xchg
stos
cmp
(bad)
jg
add
stc
movs
pop
sub
push
cs
adc
into
lods
cmc
cmc
(bad)
dec
sbb
aad
(bad)
(bad)
(bad)
push
cmps
in
test
push
int
retf
fisub
out
cmps
sbb
(bad)
js
retf
into
(bad)
(bad)
(bad)
inc
fistp
imul
fild
int3
sub
add
aas
int
lods
rcl
inc
dec
(bad)
jmp
add
push
cmp
fcom
ret
mov
xchg
stos
adc
shl
mov
hlt
xor
test
fdivr
(bad)
(bad)
call
cmp
mov
jb
mov
cli
jge
je
addr16
push
and
sub
add
popa
jnp
aaa
scas
xor
sar
cli
push
call
mov
jne
mov
jmp
imul
mov
hlt
repz
or
xor
fistp
push
jl
jne
pop
cmc
cld
xchg
mov
daa
(bad)
shr
(bad)
(bad)
inc
push
lods
or
pop
inc
or
outs
loopne
(bad)
call
push
ins
ss
jg
or
hlt
stos
popf
lock
sub
inc
in
ret
not
jmp
xchg
cmp
(bad)
(bad)
call
mov
je
xchg
hlt
jnp
adc
push
lock
dec
mov
clc
dec
mov
xor
out
push
cmp
iret
ds
fs
cli
rcl
(bad)
(bad)
push
hlt
scas
test
fidivr
mov
mov
js
jecxz
(bad)
(bad)
std
int3
out
aam
movs
pop
and
(bad)
test
jp
aaa
ret
test
ins
jmp
sbb
out
div
js
ins
dec
mov
cmps
retf
ja
sar
(bad)
push
jge
loop
(bad)
(bad)
inc
in
repz
iret
sahf
test
push
neg
in
push
dec
idiv
jmp
in
cmp
add
inc
push
fisttp
mov
push
stos
test
(bad)
(bad)
call
aam
jle
jbe
out
iret
inc
sub
pop
adc
jp
enter
jmp
sar
(bad)
(bad)
call
cmp
icebp
mov
(bad)
in
mov
jae
icebp
das
not
inc
(bad)
jg
push
mov
scas
icebp
mov
rol
sub
aas
retf
retf
fadd
out
int3
push
inc
fidiv
bound
inc
imul
(bad)
jmp
xchg
aam
xor
mov
(bad)
mov
push
aam
leave
jg
or
inc
call
dec
(bad)
(bad)
(bad)
inc
adc
fcomp
aad
push
push
jecxz
cld
fidiv
(bad)
pop
xchg
clc
pop
jg
test
std
stc
mov
stc
mov
or
inc
fsub
mov
inc
push
xchg
jb
ja
retf
mov
push
inc
int3
cmp
jbe
(bad)
mov
jbe
push
int3
mov
cmp
(bad)
call
xchg
sar
adc
(bad)
js
das
hlt
(bad)
(bad)
dec
xchg
sbb
fidivr
test
in
push
cmc
ror
xchg
fwait
repnz
jmp
dec
das
(bad)
fdiv
inc
(bad)
jmp
pop
fld
cmp
in
push
cmp
mov
(bad)
addr16
daa
ja
(bad)
jmp
repz
scas
push
jb
adc
bound
lahf
call
(bad)
imul
inc
ja
pop
retf
out
sub
mov
jno
jp
(bad)
(bad)
inc
or
sub
jmp
out
xchg
scas
mov
pop
xchg
jnp
std
call
lods
jle
imul
jbe
aaa
out
sbb
clc
fist
push
enter
retf
xchg
in
ds
inc
repz
jmp
fiadd
mov
jmp
fcmovbe
fiadd
and
bound
xor
hlt
lods
in
(bad)
mov
(bad)
(bad)
inc
into
fwait
addr16
nop
leave
add
mov
push
mov
mov
sbb
(bad)
jmp
push
jmp
xchg
cmc
push
mov
mul
pop
scas
mov
jmp
ror
(bad)
push
cmp
sbb
out
call
enter
cmp
(bad)
mov
ficomp
(bad)
shl
mov
mov
dec
mov
mov
sar
(bad)
mov
sub
mov
mov
loop
retf
(bad)
gs
cmp
into
cdq
dec
test
or
out
mov
stos
dec
(bad)
(bad)
jmp
addr16
xchg
jnp
cwde
in
shl
jge
cmp
jmp
pop
xor
mov
add
jl
outs
mov
add
call
mov
inc
mov
adc
mov
(bad)
fist
aaa
mov
cmp
loopne
(bad)
call
(bad)
(bad)
jmp
inc
mov
push
pop
adc
add
mov
call
imul
fiadd
push
out
or
(bad)
call
adc
xchg
mov
push
sti
repz
cli
sub
aad
hlt
cmp
ins
jno
call
sbb
(bad)
stc
push
xlat
and
cdq
(bad)
jmp
cmps
cmp
stc
cmp
cmc
dec
(bad)
imul
loope
xlat
or
cmp
dec
jns
ds
or
popf
test
inc
test
(bad)
(bad)
inc
jmp
shr
in
xchg
xor
jmp
push
pop
fistp
cmp
(bad)
(bad)
jmp
pop
je
sti
pop
stc
ja
xor
(bad)
and
xlat
cli
pop
inc
lods
inc
dec
fmul
cmp
push
jp
(bad)
(bad)
inc
(bad)
hlt
scas
lock
cmps
(bad)
push
sbb
shl
ficom
dec
loope
sbb
movs
mov
repnz
xor
and
jle
loope
jmp
aas
aas
ins
lahf
fldcw
mov
sbb
lahf
leave
sbb
fild
dec
lods
mov
call
enter
pop
fcom
scas
shr
adc
in
push
cs
cld
in
int
fwait
adc
ret
pop
(bad)
(bad)
(bad)
jg
div
cmp
cmp
out
stos
aas
pop
mov
adc
pop
repz
mov
iret
ret
test
mov
nop
jns
outs
mov
mov
dec
setne
mov
icebp
loop
xor
loopne
add
arpl
cs
aam
cmp
in
in
scas
lea
(bad)
loopne
ja
lods
push
jmp
call
cld
or
(bad)
popf
clc
xchg
push
fcmovbe
lock
(bad)
(bad)
call
inc
jae
call
and
stos
outs
cmp
dec
ss
cmp
(bad)
inc
ror
int3
leave
jne
fdiv
xor
imul
add
dec
mov
call
fidivr
ror
lock
retf
and
add
lds
jg
fcomip
out
ret
out
stc
es
cs
pop
push
lods
icebp
(bad)
(bad)
dec
pop
aas
pushf
sbb
stos
adc
jno
stos
xlat
xor
shl
frstor
cdq
int
dec
sbb
jmp
adc
dec
pop
sub
mov
mov
movs
cmp
repz
inc
sahf
bnd
out
(bad)
(bad)
dec
or
push
jmp
shl
inc
aas
iret
cmp
mov
pusha
jle
pusha
shr
xchg
rcr
add
(bad)
(bad)
call
int3
xor
mov
or
cmp
int
xor
push
lock
test
not
rcr
repnz
cli
(bad)
dec
dec
js
(bad)
jae
in
into
inc
cmc
fwait
xor
xor
out
inc
std
test
std
out
sbb
sbb
xchg
loop
xor
das
cli
jg
outs
icebp
push
xchg
sahf
or
aaa
jnp
or
cmp
es
cdq
fs
jg
dec
ror
pop
out
mul
out
fmul
adc
lods
icebp
iret
repz
clc
(bad)
push
hlt
mov
pushf
push
leave
int3
pusha
lahf
push
pop
test
jbe
loop
mov
cmc
out
cli
(bad)
(bad)
cmp
inc
jnp
jg
pop
push
out
push
jge
dec
xor
jae
cli
pop
call
push
aaa
leave
outs
lods
cwde
pop
js
jecxz
mov
inc
jo
out
dec
xchg
daa
xor
cmp
sahf
and
jge
adc
sti
out
sub
stos
icebp
mov
inc
push
in
cmps
aam
(bad)
jl
popf
adc
outs
xchg
mov
jmp
idiv
add
nop
jo
sbb
lds
sbb
pushf
xor
addr16
jecxz
(bad)
mov
(bad)
mov
mul
cmp
and
inc
mov
fwait
mov
xchg
in
jg
(bad)
mov
xchg
iret
movs
repz
adc
test
outs
ds
(bad)
sti
inc
jg
pop
ret
popa
stos
inc
cld
ss
out
jle
cld
fst
out
mov
mov
mov
pop
fwait
(bad)
(bad)
jmp
fiadd
xor
scas
fisttp
out
in
adc
sar
mov
call
mov
aas
or
clc
cdq
jnp
cmp
add
jl
push
hlt
pop
pop
(bad)
mov
mov
inc
adc
(bad)
inc
cmp
fld
add
test
pop
(bad)
(bad)
mov
cs
lock
mov
cmp
(bad)
das
mov
cmp
mov
jo
add
cli
(bad)
(bad)
jmp
mov
fwait
ret
fs
ins
pusha
iret
iret
push
adc
aas
push
ds
daa
sbb
dec
enter
movs
rcl
call
sbb
push
(bad)
pusha
mov
mov
inc
cld
lea
sub
xor
jmp
add
gs
(bad)
(bad)
(bad)
jg
jae
daa
ds
mov
fidivr
int
inc
xor
pop
jg
cmp
and
push
pusha
out
mov
jmp
jnp
lock
jecxz
retf
or
(bad)
(bad)
jmp
jg
jne
mov
mov
idiv
pop
icebp
aaa
inc
stos
test
cmps
cmps
stc
enter
mov
fld
push
mov
cli
(bad)
sub
(bad)
(bad)
(bad)
dec
jp
mov
enter
icebp
popf
addr16
outs
mov
icebp
mov
dec
pop
popa
mov
mov
fistp
sbb
dec
popa
jg
jle
dec
sahf
mov
aad
clc
jbe
(bad)
dec
lock
mov
loop
daa
cmps
rol
ins
xchg
add
out
or
inc
aaa
out
push
mov
les
(bad)
dec
push
mov
sub
jno
inc
lds
cmp
cmp
(bad)
(bad)
(bad)
call
sub
mov
mov
addr16
aas
les
(bad)
sti
add
call
add
jae
pop
sub
and
dec
adc
or
outs
sbb
xor
dec
retf
cmp
(bad)
call
mov
lds
out
and
out
ins
das
in
pop
ret
(bad)
(bad)
fild
inc
iret
fldenv
int
out
dec
scas
and
push
lahf
sbb
jg
xlat
inc
(bad)
fucomip
xor
scas
xchg
sub
add
jno
sub
(bad)
call
dec
jl
sbb
pop
or
mov
hlt
(bad)
nop
sbb
test
jno
pop
cmp
push
add
or
inc
inc
lea
jp
(bad)
(bad)
(bad)
call
xor
mov
sub
and
lds
inc
sar
clc
mov
sbb
call
(bad)
out
jo
cmps
jge
cmp
pusha
jmp
aaa
je
pop
mov
(bad)
push
mov
or
out
in
idiv
or
loop
adc
(bad)
jg
(bad)
cmp
push
lds
mov
cmp
xchg
dec
xor
mov
mov
add
inc
sbb
(bad)
(bad)
call
mov
in
out
cmp
jecxz
sub
mov
rcl
test
out
cmps
mov
fsub
xchg
ficom
(bad)
imul
(bad)
(bad)
cli
mov
(bad)
or
pop
inc
outs
fnstenv
cs
jge
mov
pop
xchg
cli
mov
outs
(bad)
(bad)
jmp
fidiv
mov
loope
dec
mov
or
loop
cmp
test
inc
clc
scas
cmp
shr
in
ror
(bad)
gs
scas
clc
ja
adc
cmp
icebp
out
jnp
(bad)
(bad)
jmp
(bad)
dec
push
inc
inc
das
test
cmps
out
aam
and
xlat
(bad)
fisttp
cmp
pop
scas
mov
(bad)
(bad)
(bad)
call
div
or
xor
neg
sbb
stos
cdq
sub
xchg
lock
stos
ret
clc
jge
add
mov
add
xor
mov
popf
dec
movs
and
mov
cmp
(bad)
call
fadd
dec
add
push
push
mov
inc
aad
pop
fwait
(bad)
push
xchg
jo
scas
mov
(bad)
(bad)
(bad)
cmp
cmps
push
addr16
outs
inc
push
jns
push
cs
xor
movs
shl
jecxz
leave
pop
int
jle
(bad)
fcomip
stc
push
in
sub
out
rcr
jmp
mov
out
ret
mov
mov
loop
and
leave
push
mov
jbe
adc
js
data16
cld
in
xor
cmp
jecxz
pop
std
hlt
idiv
cmp
jmp
push
pop
and
aaa
test
fwait
out
or
pop
dec
call
jg
pop
out
lods
in
mov
outs
aad
pop
(bad)
and
push
lods
imul
cli
mov
sbb
out
cmp
cld
jb
adc
xchg
cmp
aad
jo
jbe
cmp
sbb
shr
mov
cmp
mov
push
ret
(bad)
(bad)
(bad)
call
fcom
lods
and
loopne
out
loope
std
mov
jecxz
iret
int3
mov
(bad)
(bad)
(bad)
inc
pop
(bad)
xchg
cmp
mov
sbb
fild
shl
dec
pop
inc
call
jbe
push
std
(bad)
cmp
dec
mov
in
arpl
enter
daa
sub
lahf
jmp
movzx
mov
lahf
loop
cmc
add
clc
mov
push
mov
(bad)
call
mov
xlat
imul
cmp
lock
pop
sbb
mov
and
pop
std
bound
(bad)
clc
mov
inc
dec
cs
inc
xlat
jp
sar
mov
sti
dec
cmps
cs
mov
cmc
repnz
ins
out
or
call
sbb
mov
retf
test
jg
adc
push
pop
sub
call
icebp
mov
in
pop
les
pushf
leave
dec
mov
loopne
aad
leave
mov
lods
mov
rcl
cmps
jecxz
stos
ror
mov
dec
ss
jg
mov
pushf
xchg
je
or
pop
cmp
jecxz
hlt
sbb
pop
test
(bad)
jg
push
daa
jl
mov
cld
retf
mov
cmc
push
xor
fidivr
lahf
push
pop
lock
jg
adc
xor
cmps
scas
enter
div
mov
sub
out
dec
jle
jno
(bad)
(bad)
fcmove
pusha
mov
(bad)
(bad)
jg
out
mov
mov
cmp
call
(bad)
std
les
fnsave
jecxz
(bad)
jmp
xchg
xchg
or
inc
jl
jmp
ss
popa
pop
adc
ror
loope
jne
call
mov
fiadd
cmp
rcl
leave
mov
xchg
add
(bad)
jmp
or
and
clc
pop
sti
(bad)
sbb
loopne
adc
sub
mov
call
iret
(bad)
jmp
cmp
loop
stc
xor
jmp
dec
cmp
pop
mov
push
xchg
clc
pushf
jmp
sar
or
stos
cmc
pop
jmp
push
dec
pushf
enter
out
sub
dec
fadd
and
jmp
cld
(bad)
(bad)
(bad)
fbstp
xor
sar
xor
xchg
mov
and
sbb
mov
(bad)
cmp
fwait
sub
cmp
cld
sbb
imul
dec
inc
(bad)
(bad)
fistp
and
rcr
lock
pop
pop
jmp
dec
mov
(bad)
(bad)
in
push
ret
push
cmps
gs
aas
(bad)
enter
pop
push
jbe
out
test
dec
pop
(bad)
(bad)
jmp
jl
repz
push
nop
popf
out
int
inc
iret
jae
scas
jle
cmps
stc
mov
ja
or
loope
push
hlt
mov
shr
stc
dec
les
std
add
mov
aaa
push
mov
call
push
jae
ins
cs
jmp
aas
jge
sbb
(bad)
(bad)
inc
cld
sub
or
aas
not
add
jl
mov
test
jns
cwde
or
in
(bad)
(bad)
push
outs
jle
fidivr
fnstenv
adc
pushf
cdq
scas
sbb
add
popf
cld
(bad)
(bad)
(bad)
inc
repz
mov
xor
push
mov
std
movs
iret
adc
xchg
gs
out
call
adc
aaa
add
fnstsw
(bad)
(bad)
(bad)
push
xchg
loopne
imul
lods
sbb
leave
mov
jmp
mov
test
ds
(bad)
(bad)
(bad)
aas
clc
jl
stc
hlt
psubd
call
mov
mov
loopne
dec
cli
popfw
dec
(bad)
mov
sub
pusha
je
adc
repnz
vpsubsb
and
cli
call
arpl
push
add
cmps
lock
cmp
mov
rcl
mov
sbb
call
add
data16
cmp
nop
call
inc
(bad)
xchg
cli
cmp
enter
xlat
xchg
test
ficomp
stos
cmp
jg
addr16
cmp
mov
jmp
add
imul
or
out
lds
lock
cld
div
jl
mov
aas
xchg
adc
sub
mov
mov
sti
xor
fsub
aaa
or
icebp
xchg
inc
inc
cmp
cwde
inc
test
(bad)
jmp
pop
ret
jnp
movs
call
jne
ret
xor
and
push
fistp
shl
jg
(bad)
(bad)
(bad)
jmp
es
jge
mov
repz
call
aad
cmp
fnstcw
(bad)
(bad)
push
and
pop
cmc
inc
pop
shr
nop
lar
scas
mov
ds
pop
(bad)
(bad)
jmp
push
pop
or
mov
xor
xlat
mov
cmp
fisttp
jae
outs
rcr
out
or
int
(bad)
and
jg
and
mov
aas
mov
push
(bad)
(bad)
(bad)
inc
dec
sar
jge
(bad)
mov
inc
rcr
add
cld
shl
dec
ss
enter
cld
sti
add
and
jae
imul
mov
mov
out
dec
lea
out
pop
stos
sbb
inc
sbb
(bad)
(bad)
push
and
imul
pop
cmp
push
cli
jae
int3
xlat
les
(bad)
(bad)
call
push
push
mov
adc
ds
in
cld
cdq
or
mov
mov
push
mov
test
(bad)
mov
inc
rol
popa
(bad)
xor
sub
jns
sub
jge
mov
out
xor
sar
mov
pop
cli
jg
dec
dec
lahf
sub
adc
(bad)
(bad)
(bad)
(bad)
sti
test
inc
idiv
xchg
(bad)
jge
inc
lods
or
mov
add
or
daa
rol
(bad)
(bad)
fscale
push
sub
mov
cmp
in
mov
push
rcl
dec
in
add
scas
and
mov
xor
push
stos
mov
xor
(bad)
call
out
pop
lods
pslld
mov
bound
add
xlat
jmp
(bad)
(bad)
(bad)
mov
xchg
stos
cmp
sar
push
push
retf
popf
aas
ret
js
mov
inc
pop
push
or
mov
(bad)
std
inc
rcr
(bad)
(bad)
(bad)
inc
cmp
(bad)
aaa
cmp
pop
lock
(bad)
cmp
cli
inc
(bad)
cli
sbb
ret
jnp
add
push
int
cmp
cmp
mov
mov
aaa
std
inc
ret
call
out
popf
and
loop
sub
lods
mov
test
sahf
not
sar
mov
dec
jne
scas
stos
jmp
push
retf
inc
lods
cmps
outs
outs
xchg
xor
push
mov
jmp
jno
jmp
icebp
xor
rcr
sbb
out
or
(bad)
out
clc
test
stc
cmp
add
out
ror
sub
mov
sar
jno
pop
loopne
push
pop
(bad)
push
and
cli
push
out
mov
(bad)
push
cmps
idiv
(bad)
(bad)
jmp
dec
dec
jle
mov
mov
jge
xor
test
jle
(bad)
(bad)
(bad)
call
ret
jp
fcmovne
jmp
in
imul
je
ins
add
retf
rcr
(bad)
jmp
ficom
and
icebp
sub
jmp
mov
sub
cmp
dec
fs
mov
and
(bad)
dec
add
dec
mov
ret
out
sub
jmp
lods
xchg
int3
in
push
push
dec
push
add
iret
pop
lock
dec
push
cli
push
outs
cmp
mov
enter
movs
rcr
mov
shl
call
xor
pop
dec
dec
daa
data16
fisub
popf
mov
xor
in
das
inc
sub
aad
inc
pop
jp
xchg
addr16
fbld
stc
push
(bad)
(bad)
mov
std
xchg
xchg
stc
pop
cmps
scas
jb
add
arpl
div
adc
pop
jmp
pushf
scas
pop
inc
jp
loope
pop
adc
call
and
adc
fisttp
jae
pop
dec
push
pop
push
out
(bad)
push
in
sbb
hlt
adc
cmp
push
mov
cld
pop
pop
jge
bnd
jmp
pushf
pop
mov
clc
hlt
jns
cli
nop
icebp
(bad)
call
arpl
inc
inc
retf
pop
mov
inc
xchg
(bad)
(bad)
call
jne
inc
xchg
daa
loop
clc
sti
in
cmps
outs
cmp
sub
xchg
(bad)
(bad)
dec
adc
xchg
lock
cdq
std
sub
int
clc
pop
dec
cmp
aaa
xchg
std
mul
xlat
out
imul
cld
cmps
jns
(bad)
(bad)
(bad)
clc
jne
mov
mov
and
pop
jae
hlt
repz
cmc
inc
adc
je
out
ds
(bad)
jg
hlt
movs
inc
fstp
sub
mov
inc
xor
out
cli
(bad)
(bad)
(bad)
jmp
fmul
mov
jb
leave
popf
stc
popa
cmps
shl
add
push
aas
lahf
rcl
mov
es
iret
xor
push
sbb
fild
pop
jle
pop
jg
(bad)
call
and
sbb
cmc
xchg
push
push
out
les
mov
imul
push
jne
adc
mov
push
jmp
sahf
scas
cmp
fnstsw
cld
pop
cdq
iret
jg
dec
inc
(bad)
addr16
ds
or
(bad)
(bad)
(bad)
push
and
or
lods
push
outs
xor
es
jae
xchg
xchg
cli
icebp
jmp
push
in
sbb
jle
icebp
inc
(bad)
je
in
imul
nop
sbb
sub
popa
(bad)
(bad)
fdiv
pop
ins
shr
fbld
xchg
sbb
pmulhuw
sbb
(bad)
(bad)
(bad)
jmp
mov
push
jns
and
fistp
std
enter
mov
stos
(bad)
(bad)
push
pusha
pop
push
aas
mov
mov
dec
and
jmp
je
neg
mov
dec
lock
movs
fnstcw
push
arpl
and
iret
jno
cld
lds
pop
repz
(bad)
lahf
fwait
test
out
or
(bad)
jg
pop
or
push
adc
pop
jle
mov
xor
cmc
cmc
and
rcl
pop
cmps
push
xchg
movs
int3
adc
loop
add
(bad)
(bad)
call
inc
pop
repz
pop
popa
mov
cmps
add
sbb
mov
add
(bad)
inc
sbb
jae
lds
lea
mov
aas
push
inc
jmp
js
or
(bad)
jmp
inc
(bad)
cmp
das
das
(bad)
jl
jne
test
adc
std
(bad)
call
cmps
dec
cli
mov
jmp
inc
lahf
jns
ret
jmp
jge
mov
(bad)
jmp
fucomp
daa
cmp
sbb
jmp
lock
mov
cld
add
stos
or
sbb
inc
ja
stos
and
cmp
les
aam
in
out
gs
call
cmc
call
mov
in
push
(bad)
(bad)
(bad)
(bad)
fucomi
aam
js
jnp
out
enter
mov
add
test
push
popa
aam
jmp
(bad)
sbb
out
add
ficom
jp
fcom
push
(bad)
cld
and
pop
add
jnp
mov
(bad)
(bad)
inc
xlat
test
xor
scas
out
dec
loopne
call
loopne
dec
sbb
mov
and
loope
adc
aaa
std
loop
in
or
call
jp
dec
cmc
out
inc
jmp
or
cdq
mov
inc
jg
pop
jnp
test
retw
xchg
mul
jno
inc
cmc
test
stc
js
scas
pushf
(bad)
(bad)
(bad)
jg
pushw
jb
ja
aad
mov
out
outs
lahf
paddb
int
in
pop
xchg
mov
cmps
xchg
call
call
push
pop
mov
lock
dec
aam
mov
js
(bad)
hlt
(bad)
(bad)
inc
shl
lock
movs
and
hlt
pushf
mov
stc
int3
adc
add
(bad)
clc
movs
scas
jnp
jl
or
dec
jg
dec
add
dec
xchg
(bad)
jg
aaa
sub
stos
lahf
mov
(bad)
jg
clc
sbb
pop
push
test
xchg
out
jne
into
jle
popf
push
iret
in
jecxz
(bad)
inc
js
inc
mov
xchg
push
sbb
sbb
jno
jns
repz
jae
and
aaa
cdq
and
fmul
inc
gs
jg
pop
sub
inc
add
cmc
adc
(bad)
(bad)
inc
jbe
(bad)
and
repz
nop
stos
stos
(bad)
in
aas
loop
scas
(bad)
loop
movs
pop
mov
stos
std
test
mov
pusha
(bad)
ss
add
mov
int3
mov
xor
cdq
clc
inc
dec
shl
loope
pop
(bad)
jmp
es
fwait
jo
neg
sbb
fnsave
dec
std
mov
xor
sbb
xchg
dec
hlt
in
xchg
pop
sbb
cmp
test
dec
dec
push
popa
mov
jge
cmc
mov
xor
rcl
(bad)
mov
mov
es
in
jge
hlt
mov
out
or
cdq
stc
cmp
lahf
inc
push
lods
xor
sub
adc
dec
fmulp
fmul
mov
jno
imul
outs
movs
lods
xchg
pop
pop
inc
dec
jp
in
mov
mov
sbb
mov
mov
std
sub
cdq
loop
mov
xchg
dec
push
std
mov
inc
mov
jecxz
(bad)
or
jle
cli
sti
imul
mov
jp
call
icebp
jae
clc
adc
fistp
or
mov
dec
jl
call
xchg
(bad)
in
ins
int3
cmp
inc
cmp
movs
mov
mov
jg
inc
adc
ror
test
cmp
je
inc
(bad)
(bad)
(bad)
dec
sti
xor
xlat
add
mov
(bad)
out
lds
cmp
sub
mov
dec
(bad)
(bad)
(bad)
dec
mov
shl
mov
or
sub
iret
mov
(bad)
arpl
or
imul
sbb
adc
dec
mov
adc
and
call
out
jmp
push
(bad)
(bad)
(bad)
jmp
ffree
sbb
push
pop
pop
cmc
cdq
fcomp
ja
std
ja
neg
and
fcomp
or
pop
aam
repz
(bad)
(bad)
call
jnp
ins
pop
outs
sub
cli
cli
in
sub
aas
xchg
cmp
ret
repz
outs
(bad)
(bad)
(bad)
dec
loopne
call
icebp
icebp
call
xchg
cmc
cld
sub
call
and
aas
xchg
hlt
repz
arpl
mov
int
popf
mov
(bad)
mov
sti
pop
adc
adc
cmp
test
jl
xchg
sbb
loopne
jp
fs
(bad)
(bad)
mov
cmps
xchg
xor
iret
mov
mov
aas
cwde
lahf
(bad)
mov
and
(bad)
inc
pop
push
xor
adc
cmps
inc
xor
sbb
pop
mov
mov
popf
loope
jge
and
jo
(bad)
cmp
sar
dec
cdq
pop
out
and
rol
(bad)
(bad)
(bad)
out
mov
out
loopne
sbb
or
mov
in
addr16
mov
jecxz
(bad)
jmp
mov
(bad)
mov
rcr
adc
test
cmp
call
outs
xor
sub
mov
mov
ds
fwait
and
push
cmp
ins
out
(bad)
jecxz
(bad)
ss
dec
cmc
cmc
and
cmp
shr
mov
push
sbb
jmp
arpl
xchg
add
je
jmp
das
push
movs
popa
sar
mov
(bad)
je
in
repz
xchg
ja
(bad)
lock
aad
(bad)
out
cld
aad
fsubr
jns
jecxz
pop
cli
call
jbe
adc
cmp
out
cmp
adc
iret
push
cmp
inc
or
or
sti
stc
sbb
idiv
cmps
push
jo
(bad)
(bad)
(bad)
dec
xchg
cwde
popa
jae
outs
les
or
or
or
mov
in
imul
(bad)
dec
mov
push
hlt
sbb
dec
push
in
and
out
fist
sbb
jmp
cld
(bad)
fistp
scas
xchg
into
int3
inc
jge
inc
or
mov
xchg
mov
pop
xchg
sbb
or
sbb
pop
lahf
or
mov
sti
push
jmp
dec
fst
mov
jp
push
ror
sahf
movs
movs
jmp
aas
xchg
inc
retf
je
loop
cld
clc
out
sar
(bad)
(bad)
(bad)
(bad)
jmp
xchg
call
sar
xor
adc
(bad)
(bad)
(bad)
clc
addr16
xchg
jl
out
jns
pop
cmp
jbe
mov
jo
xor
mov
xor
out
push
mov
cmp
jecxz
iret
jmp
and
(bad)
call
sahf
ficomp
jno
cmp
ins
aam
lock
pop
inc
mov
jae
sbb
(bad)
(bad)
jg
fild
push
sbb
in
cmps
stc
inc
sbb
dec
je
adc
add
(bad)
(bad)
call
inc
mov
aaa
adc
add
pop
mov
out
and
jbe
punpckhbw
inc
and
test
pop
arpl
pop
push
fs
mov
aaa
movs
cmp
icebp
clc
cmp
std
xchg
repz
add
fisubr
or
inc
stos
adc
mov
xchg
sub
jne
mov
std
iret
(bad)
sub
jmp
ror
mov
ret
scas
sbb
bound
into
jmp
cli
mov
pop
jl
outs
mov
mov
loop
lock
(bad)
(bad)
call
ror
imul
test
paddb
cmps
adc
jle
adc
jns
cld
mov
lea
(bad)
popf
ret
mov
mov
hlt
(bad)
dec
pop
xchg
imul
jmp
mov
out
mov
clc
dec
mov
jmp
mov
(bad)
jmp
push
test
mov
ds
sbb
mov
mov
mov
lods
sahf
push
cmp
(bad)
fnstcw
(bad)
(bad)
and
jns
scas
ins
loope
ds
or
retf
outs
sbb
add
(bad)
jecxz
test
cmps
rcl
sar
(bad)
push
out
nop
call
lahf
sar
aad
fwait
mov
cli
(bad)
mov
mov
das
push
sub
outs
adc
xchg
lahf
pop
cld
push
jnp
jg
sub
inc
daa
cwde
scas
call
cmp
xor
xlat
(bad)
(bad)
(bad)
(bad)
mov
loopne
dec
loopne
or
ss
fild
mov
into
ins
rol
push
mov
(bad)
(bad)
(bad)
(bad)
jp
aas
call
call
imul
cmps
stc
mov
neg
aam
(bad)
(bad)
dec
and
popf
cmp
xchg
addr16
jbe
scas
xchg
(bad)
(bad)
mov
push
(bad)
(bad)
inc
pop
jmp
xlat
jns
jge
bnd
shl
fwait
dec
fcmove
jmp
stc
cmp
jle
neg
(bad)
push
cld
in
jae
xchg
jbe
pop
in
jnp
sbb
and
loop
push
pop
add
push
sar
(bad)
(bad)
(bad)
sti
inc
sbb
mov
movs
pop
es
push
test
aas
aad
hlt
xor
jg
(bad)
(bad)
(bad)
mov
into
dec
out
out
fcmovnbe
cdq
and
lods
(bad)
fld
xchg
leave
into
mov
pop
pop
lock
call
loop
xchg
mov
jmp
(bad)
pop
jmp
cmp
aaa
inc
(bad)
call
mov
push
jl
aam
mov
pop
aam
ficom
hlt
pushf
jns
fwait
out
cmc
mov
(bad)
dec
(bad)
scas
daa
inc
cmps
iret
out
or
push
jmp
(bad)
sbb
push
mov
int
adc
repnz
inc
jno
lods
(bad)
jmp
or
shr
pop
lahf
pop
outs
lds
jmp
cmp
mov
add
sub
mov
jbe
lock
mov
call
ret
push
in
(bad)
(bad)
in
dec
mov
mov
jecxz
sti
in
mov
shr
test
addr16
test
add
(bad)
(bad)
(bad)
jle
out
imul
sub
icebp
dec
adc
mov
sar
scas
mov
outs
imul
sbb
pop
mov
jge
outs
sti
inc
push
adc
and
and
mov
sbb
out
ins
in
fwait
mov
call
shr
lahf
mov
inc
mov
jecxz
rcr
aam
adc
dec
adc
or
mov
cmp
xchg
ror
mov
sbb
in
dec
jle
into
jg
(bad)
cld
add
(bad)
jg
inc
add
shr
sub
stos
(bad)
jmp
mov
or
scas
clc
(bad)
out
movs
xor
adc
sub
lods
int
lods
call
idiv
pop
push
adc
hlt
popf
int
push
(bad)
push
fcom
dec
dec
es
xor
jge
shl
fistp
call
cmp
dec
inc
daa
dec
repz
out
das
imul
xchg
dec
fidivr
shl
lods
ins
fwait
test
stos
xor
out
and
lea
bound
(bad)
push
mov
cmp
sbb
add
call
cld
inc
outs
les
push
add
movs
mov
or
call
mov
(bad)
dec
jno
ds
xchg
repnz
mov
das
mov
outs
dec
icebp
(bad)
(bad)
dec
mov
les
mov
inc
mov
adc
mov
aad
or
push
jmp
mov
add
fdivrp
pop
cld
push
mov
ret
rep
movs
das
cwde
cmp
iret
dec
fsubr
adc
sub
(bad)
sub
dec
hlt
lds
movs
add
inc
and
mov
dec
outs
xchg
mov
retf
push
lods
pop
mov
out
mov
(bad)
call
cmps
in
add
mov
repz
jle
aas
pop
bound
pop
jle
sub
(bad)
(bad)
jg
stc
sub
popa
mov
pop
int3
lds
mov
js
pop
loope
jae
test
loopne
(bad)
(bad)
jmp
jnp
jp
and
xor
(bad)
pop
fnstcw
jmp
retf
imul
(bad)
(bad)
std
mov
adc
lahf
rcr
out
dec
lods
or
push
loopne
xchg
(bad)
pop
mov
out
and
sub
(bad)
(bad)
aas
add
outs
sub
xchg
icebp
push
cmp
out
shl
and
push
icebp
mov
fsubp
cmp
loope
call
xchg
in
mov
rcl
mov
lahf
or
(bad)
imul
mov
(bad)
mov
je
and
loopne
jbe
mov
fild
push
add
int
not
out
lahf
xor
(bad)
push
movs
aaa
js
cmp
test
sbb
(bad)
fist
lahf
fs
mov
pop
sub
push
cmps
mov
lock
sub
outs
pop
shr
(bad)
mov
xor
fidiv
loop
(bad)
jle
shl
clc
jmp
lahf
(bad)
fbld
mov
ficom
repnz
shr
(bad)
jl
sbb
jmp
hlt
cmp
xchg
mov
out
jno
mov
(bad)
(bad)
inc
xor
jne
mov
mov
sub
clc
and
ror
fld
pop
loope
mov
(bad)
(bad)
(bad)
call
mov
movs
jno
and
sub
imul
in
fwait
loope
test
jae
test
xlat
mov
test
in
(bad)
out
loop
rol
into
xor
xchg
add
(bad)
(bad)
jg
sar
mov
inc
cli
sti
ret
adc
cmp
jmp
movs
(bad)
jmp
lea
sbb
frstor
je
push
mov
jge
movs
and
dec
ins
and
ja
repz
hlt
(bad)
dec
or
cmp
dec
es
mov
or
int
jbe
call
push
shr
js
sahf
ins
std
cmp
(bad)
jge
popf
cs
jl
(bad)
in
sbb
(bad)
loope
sar
(bad)
js
inc
mov
sbb
jns
cs
inc
test
mov
(bad)
jmp
or
or
aad
or
dec
stos
(bad)
(bad)
(bad)
inc
cmp
xchg
gs
mov
jo
outs
xor
bound
call
push
outs
imul
leave
aas
addr16
rcr
dec
es
mov
sahf
mov
(bad)
fistp
in
jg
mov
stos
(bad)
call
dec
ins
mov
aas
int
sbb
(bad)
repz
mov
(bad)
(bad)
fiadd
inc
adc
jge
sti
mov
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
test
fwait
je
mov
lea
mov
loopne
in
jle
jmp
rep
dec
hlt
in
push
loope
xor
sahf
xchg
and
xchg
add
(bad)
jmp
rcl
cli
jno
jmp
dec
jbe
xor
jmp
ja
(bad)
(bad)
jmp
scas
scas
adc
movs
cmp
fnstenv
mov
in
dec
mul
mov
sub
lea
fcomp
outs
cmp
sub
(bad)
jg
or
jnp
mov
adc
xor
push
sar
inc
adc
dec
retf
push
icebp
iret
pop
and
fidivr
pop
sub
dec
das
cmps
pop
cs
dec
inc
fcmovb
bound
sub
xchg
pop
and
fwait
xor
in
into
mov
cmp
cdq
fsub
(bad)
(bad)
(bad)
(bad)
cli
mov
sar
shr
neg
xchg
setb
fidiv
sub
frstor
mov
iret
jg
add
pop
std
inc
pop
imul
fdiv
es
mov
jmp
cli
mov
pop
mov
sbb
ret
jno
lods
sbb
cmps
push
(bad)
(bad)
(bad)
jmp
cdq
aam
add
pop
xchg
cmp
xchg
clc
pop
(bad)
jno
into
std
cwde
mov
nop
sar
into
jbe
pop
mov
(bad)
(bad)
inc
or
arpl
inc
stc
stos
(bad)
dec
dec
sbb
outs
mov
mov
and
imul
adc
call
lods
fwait
jp
lahf
mov
ror
and
in
cmc
sbb
test
inc
push
xrelease
stos
das
xor
dec
shl
sub
mov
fwait
std
mov
jmp
jmp
jbe
repz
fcomp
and
arpl
mov
repz
mov
repz
or
(bad)
cmp
(bad)
jmp
push
hlt
or
sub
out
ss
mov
inc
clc
push
cld
lea
mov
ret
iret
shl
cld
adc
cmp
pop
xchg
cmp
cmp
movs
fs
sbb
and
inc
jnp
push
pop
sbb
es
add
out
repz
outs
mov
int
dec
mov
(bad)
(bad)
call
gs
jmp
pusha
fild
aam
aad
and
cld
fidivr
test
adc
das
fidiv
jno
(bad)
jecxz
out
xor
fisttp
push
jns
xchg
jle
fwait
pop
jbe
fstp
pushf
push
gs
mov
aam
stos
inc
icebp
and
pop
arpl
scas
mov
aad
gs
jmp
(bad)
icebp
mov
int3
xor
sub
pop
mov
es
cdq
out
lods
call
(bad)
jge
jbe
repnz
clc
(bad)
(bad)
(bad)
rcl
jecxz
sub
sar
fadd
push
shl
(bad)
(bad)
dec
aad
xor
je
fwait
lea
call
daa
(bad)
cmp
inc
idiv
js
adc
push
call
cmps
ds
imul
loopne
mov
outs
jl
(bad)
(bad)
(bad)
(bad)
jmp
push
jg
in
mov
into
mov
inc
fist
add
sbb
hlt
clc
jns
hlt
shl
adc
jl
mov
(bad)
jmp
out
sbb
push
mov
jbe
popa
mov
adc
adc
jb
popf
or
push
mov
mov
call
jmp
jg
mov
jmp
(bad)
jmp
stos
stos
cs
call
mov
pop
jae
dec
(bad)
(bad)
(bad)
(bad)
cmp
inc
mov
repz
xlat
fiadd
(bad)
mov
sbb
xor
cmp
in
retf
scas
pop
out
call
dec
pop
fsubrp
jne
cmp
loop
out
loopne
push
cli
dec
xor
in
and
inc
inc
fild
mov
add
mov
jmp
data16
mov
inc
hlt
jl
(bad)
aam
iret
xor
push
inc
xlat
(bad)
out
adc
(bad)
(bad)
mov
and
mov
mov
xor
push
shl
ret
add
(bad)
fild
jne
dec
or
mov
xor
pop
(bad)
(bad)
(bad)
dec
out
inc
clc
jbe
lahf
fidivr
add
loope
mov
aam
pop
div
(bad)
xchg
in
mov
(bad)
(bad)
push
scas
shl
fisttp
inc
jp
in
loope
inc
(bad)
std
push
lahf
bound
jg
stos
and
jmp
sub
rcr
(bad)
(bad)
(bad)
jmp
test
jmp
lea
(bad)
add
adc
popf
fs
cld
(bad)
(bad)
push
push
xchg
leave
(bad)
mov
xchg
mov
sub
(bad)
mov
(bad)
push
jno
jg
or
shr
clc
aas
aas
div
pop
scas
shl
enter
ror
cmps
sbb
mov
xor
mov
add
mov
push
push
pop
test
inc
cld
call
cmps
not
(bad)
fisttp
pop
mov
fmul
imul
jmp
cmp
lods
sub
lea
aam
add
dec
xchg
xlat
cmp
gs
(bad)
mov
cmps
sbb
mov
out
jmp
jo
test
sub
call
xor
or
jl
jne
icebp
in
ffreep
out
(bad)
sub
jns
loopne
jg
push
stc
jecxz
cwde
push
stos
sub
jg
mov
fld
sub
aas
pop
and
ja
(bad)
(bad)
(bad)
cli
cwde
pop
das
(bad)
out
repz
mov
xchg
mov
(bad)
(bad)
jmp
sub
into
xor
pop
bound
jp
mov
clc
les
(bad)
(bad)
(bad)
fisttp
shl
xchg
(bad)
out
mov
pop
das
fdivr
mov
push
out
iret
scas
mov
(bad)
jnp
xchg
imul
sar
outs
jp
pusha
fdivr
(bad)
(bad)
call
mov
aam
js
adc
scas
push
cmps
mov
mov
xor
xor
outs
(bad)
call
out
inc
or
inc
push
jns
ret
lahf
out
adc
xchg
div
das
cli
(bad)
(bad)
cmp
fadd
call
cmp
in
add
mov
xor
(bad)
inc
loop
jo
jns
jb
xchg
iret
push
std
ret
test
loop
out
cli
(bad)
jg
nop
xlat
cli
dec
aam
addr16
std
(bad)
out
stos
dec
out
test
lahf
or
fcom
pop
jae
cmp
std
and
or
jns
cmp
(bad)
push
sbb
mov
lea
test
(bad)
xchg
mov
ret
pushf
jmp
mov
jmp
xor
sar
scas
into
and
iret
movs
mov
mov
(bad)
cmp
fld
sti
push
(bad)
outs
popa
outs
jbe
pop
adc
das
pop
cmpxchg
scas
xchg
loopne
std
(bad)
inc
pop
mov
jmp
fild
shl
test
(bad)
mov
add
(bad)
mov
jmp
rcr
dec
fsubr
sbb
loope
sub
mov
std
mov
pop
add
push
sar
mov
cmp
mov
sub
mov
sti
mov
scas
addr16
sbb
(bad)
stc
rol
int
mov
xor
mov
lea
scas
repz
ds
cmp
lods
(bad)
(bad)
jg
add
popf
xlat
jo
inc
jns
sbb
frstor
adc
fistp
cli
mov
enter
mov
or
fsubr
int
jmp
sahf
js
shl
mov
lods
mov
or
call
call
pop
xlat
pop
cmp
push
stos
dec
xchg
(bad)
mov
les
cwde
cmp
lahf
cmps
jmp
(bad)
(bad)
inc
lock
xor
adc
inc
fwait
jmp
jno
inc
out
shl
jecxz
int
push
(bad)
(bad)
(bad)
push
test
ret
sub
pushf
jp
sbb
fisttp
lahf
jmp
sbb
shl
test
and
inc
outs
lds
mov
inc
inc
jmp
push
mov
push
daa
in
into
stos
(bad)
fbld
pop
sbb
sbb
mov
(bad)
(bad)
inc
dec
out
out
fisttp
iret
outs
mov
icebp
xor
fwait
dec
jg
out
jg
or
int3
mov
pusha
or
pop
ss
clc
inc
fcmovnu
sub
sub
test
(bad)
(bad)
jmp
outs
clc
dec
out
ja
inc
fmulp
inc
rcr
fistp
jmp
dec
test
cmp
stos
adc
adc
and
call
prefetcht2
inc
jno
mov
mov
test
jne
scas
bound
int3
js
out
ret
retf
popf
sbb
clc
add
(bad)
(bad)
call
cwde
jmp
addr16
call
mov
out
pop
out
pushf
xchg
into
cmps
mov
jmp
mov
or
(bad)
dec
inc
addr16
push
mov
stc
inc
pop
cmp
popa
outs
dec
jo
hlt
(bad)
(bad)
(bad)
jmp
loope
das
out
wbinvd
sar
cwde
pop
popa
icebp
imul
pop
addr16
jle
push
std
call
dec
add
xchg
into
addr16
mov
cmp
(bad)
(bad)
call
data16
jmp
ja
repz
in
cld
mov
xchg
sti
repz
sbb
jp
and
jmp
jmp
fiadd
pop
pop
sub
(bad)
(bad)
mov
test
retf
dec
shl
out
inc
neg
call
call
cmps
mov
gs
jge
(bad)
xlat
cwde
and
lahf
mov
jne
adc
xor
(bad)
dec
pop
jnp
adc
xor
popw
cmc
call
push
call
mov
inc
outs
cdq
aad
(bad)
pop
jp
mov
mov
(bad)
(bad)
jg
(bad)
popf
xor
loopne
pop
cmp
dec
fld
mov
inc
mov
aam
cld
ins
das
xor
aas
inc
std
call
lock
mov
sub
setp
(bad)
cmp
push
shl
push
hlt
adc
xchg
jns
rep
xchg
xor
out
push
cld
jmp
jg
retf
daa
mov
push
mov
mov
and
cwde
hlt
jns
imul
mov
push
les
sbb
cmc
mov
lods
xor
test
lea
sar
aad
dec
mov
movs
test
out
xor
shl
xchg
(bad)
inc
push
bnd
in
test
movs
cli
xchg
pop
sbb
dec
push
std
jmp
cmps
aam
cmp
fnstcw
repz
mov
aas
fwait
sub
in
(bad)
(bad)
(bad)
(bad)
frstor
imul
dec
pop
iret
xor
cmp
add
stos
sahf
out
sbb
enter
(bad)
(bad)
call
or
aam
inc
mov
in
mov
sbb
and
(bad)
(bad)
(bad)
(bad)
mov
jg
(bad)
mov
les
dec
call
xchg
add
inc
inc
cld
or
(bad)
push
(bad)
out
push
fsubrp
lods
jp
add
mov
fild
fisub
cld
mov
(bad)
sbb
mov
loop
loop
(bad)
(bad)
dec
pop
sbb
sar
stos
popf
out
pop
sub
jmp
jae
xchg
ss
das
jle
jp
dec
pop
out
dec
ja
cld
cmp
sub
stc
sub
(bad)
fimul
adc
mov
(bad)
(bad)
(bad)
call
popf
mov
cmp
dec
jl
and
sub
mov
dec
adc
sar
outs
mov
inc
xor
sbb
call
aam
adc
std
inc
xor
out
ficom
lds
cmp
pop
aad
js
jl
inc
push
cmp
pop
cli
push
cwde
(bad)
push
loope
mov
xchg
outs
and
mov
rcl
(bad)
call
jmp
jle
pop
adc
(bad)
(bad)
call
fmulp
in
push
scas
je
stos
stc
adc
fisttp
pop
and
adc
cmp
in
(bad)
(bad)
(bad)
cmp
mul
add
adc
mov
fcom
daa
xchg
xchg
pop
xor
mov
and
mov
push
fbstp
xchg
imul
mov
jae
mov
mov
xlat
leave
sar
jmp
jge
out
push
xor
sbb
enter
cmps
out
jae
cld
nop
loop
shl
dec
lods
mov
(bad)
(bad)
call
sbb
std
mov
sahf
mov
das
mov
out
aaa
mov
cmp
jl
xchg
cmp
mov
push
int3
or
jl
jle
sbb
cmp
mov
inc
(bad)
push
aam
lahf
pop
test
xchg
(bad)
call
ret
xchg
mov
or
push
lods
enter
in
dec
fiadd
(bad)
or
cmp
jg
fnsave
or
(bad)
(bad)
(bad)
jle
mov
(bad)
mov
push
cmps
push
sar
sahf
mov
push
add
push
or
adc
out
(bad)
repz
icebp
push
in
out
push
(bad)
(bad)
(bad)
inc
sbb
repz
(bad)
call
jge
cld
cmps
cmps
ficomp
jmp
(bad)
jmp
cdq
adc
bnd
(bad)
adc
cmps
shl
out
imul
call
mov
pop
loop
inc
call
mov
js
stc
push
repnz
sub
in
(bad)
(bad)
(bad)
push
xor
xchg
sbb
mov
xchg
inc
sahf
mov
stos
movs
aad
xchg
mov
jge
fistp
mov
cmp
mov
inc
out
lds
mov
aad
pop
jl
push
repz
stc
mov
ja
dec
xchg
(bad)
(bad)
push
inc
push
mov
jae
pop
into
pop
cmp
out
ds
xchg
lock
push
mov
add
into
jecxz
sbb
repz
push
inc
sbb
mov
fisub
mov
int
retf
mov
mov
push
jmp
ins
xor
add
(bad)
dec
xchg
lock
xor
jle
cmp
ret
mov
sbb
mov
sub
shr
(bad)
call
retf
dec
repz
pop
iret
inc
sti
cli
sbb
jp
sub
popf
in
(bad)
xor
sub
sbb
jmp
mov
test
sahf
mov
and
pushf
xchg
(bad)
loop
mov
pop
scas
mov
stc
aaa
mov
out
ds
inc
ss
inc
cs
jg
sub
mov
inc
shr
ror
(bad)
jmp
pop
ja
arpl
nop
xor
mov
jns
mov
pop
mov
inc
test
lock
or
rcr
cmp
mov
xchg
pop
scas
rcl
pop
(bad)
jns
lds
out
test
(bad)
jg
xchg
test
sub
push
mov
int
xor
push
(bad)
jg
push
(bad)
(bad)
(bad)
dec
jae
mov
jae
mov
jle
int
xor
mov
(bad)
sbb
sbb
dec
push
stos
sbb
in
cdq
stos
stc
in
leave
aam
mov
(bad)
(bad)
(bad)
jmp
mov
mov
push
scas
push
imul
dec
cmps
fisubr
jae
jmp
icebp
fwait
pushf
scas
jg
(bad)
jge
fld
enter
loop
(bad)
out
cmp
stos
xor
(bad)
(bad)
dec
jmp
aas
jae
outs
inc
(bad)
mov
(bad)
sbb
pop
scas
sbb
scas
aam
test
dec
jmp
fidiv
out
shl
sbb
les
xchg
add
jmp
sti
pop
mov
call
add
cmp
js
xchg
in
(bad)
jo
jg
and
out
push
in
icebp
add
scas
push
cmp
xor
jle
mov
xchg
xor
aaa
push
out
fimul
and
call
repz
push
pop
mov
inc
inc
retf
clc
das
bound
js
and
jmp
loop
xlat
pop
aaa
mov
inc
aaa
fst
std
sub
sbb
pop
add
loope
into
xor
int3
fsub
push
cmc
pop
(bad)
in
ins
call
(bad)
(bad)
jmp
les
add
xlat
mov
mov
test
icebp
mov
ds
adc
call
add
xchg
aas
mov
xchg
test
retf
dec
jg
dec
pop
jle
mov
cmps
popf
xchg
(bad)
(bad)
(bad)
fild
push
mul
jmp
lods
add
inc
push
and
rcl
mov
pop
or
xor
fimul
sub
cmps
int3
mov
(bad)
(bad)
bound
push
js
test
jns
inc
cmp
xlat
sar
(bad)
push
and
mov
inc
ret
jnp
leave
out
pop
(bad)
fadd
fsubr
iret
setnp
mov
dec
mov
add
aas
and
cwde
mov
lods
add
jl
jg
dec
xchg
cli
(bad)
std
fdiv
mov
pushf
xchg
sar
ja
sbb
cli
push
jb
sbb
push
(bad)
(bad)
(bad)
jmp
or
cld
xor
mov
sbb
sar
sar
xor
mov
scas
bound
rcl
out
(bad)
mov
jno
and
sahf
lods
pop
fwait
push
hlt
imul
(bad)
jg
call
enter
std
pusha
xchg
mov
xor
mov
push
pop
movs
(bad)
jmp
rol
test
ds
jle
int
(bad)
jg
(bad)
hlt
pusha
dec
sbb
or
xor
mov
ins
xor
jg
or
ins
mov
sbb
mov
jg
fst
sbb
in
mov
jno
mov
sbb
jns
cmp
jmp
outs
mov
int3
mov
cmc
sti
dec
in
cmc
scas
fcmove
pop
add
jmp
loopne
add
fucom
mov
repz
jmp
mov
xchg
jb
jp
push
test
nop
jle
sub
lods
in
out
popf
push
ds
(bad)
(bad)
jmp
aad
xchg
test
(bad)
fisub
xchg
xchg
dec
xchg
inc
in
sub
add
jg
jle
cwde
popf
(bad)
(bad)
(bad)
inc
mov
pop
dec
es
out
gs
out
jg
lods
xlat
sub
cmp
add
iret
cmps
cmc
(bad)
(bad)
jmp
movs
mov
shr
jae
lock
call
push
jge
cli
stc
retf
mov
mov
mov
scas
clc
pop
adc
pop
aam
or
(bad)
adc
jmp
int
mov
xlat
fdivrp
int
mov
pop
(bad)
cs
xchg
(bad)
adc
lods
(bad)
cli
(bad)
(bad)
(bad)
jmp
add
sub
sbb
inc
sbb
test
jg
mov
and
mov
cmp
(bad)
inc
fisubr
xlat
add
idiv
mov
bound
push
pop
(bad)
(bad)
call
test
imul
jne
stc
fbstp
lock
xchg
sar
cmp
nop
ret
push
call
(bad)
cmps
aam
fistp
jnp
mov
jnp
inc
dec
jg
cmp
(bad)
mov
mov
mov
out
rol
clc
pop
cmp
repz
pop
mov
xor
push
out
aad
stos
pop
cmp
lock
lods
adc
shl
(bad)
jg
xchg
in
rcl
xchg
lock
enter
mov
out
leave
retf
sbb
outs
clc
push
xor
mov
sbb
pop
mov
loope
(bad)
mov
loopne
add
data16
cmp
dec
pop
sbb
sar
(bad)
mov
imul
jg
scas
ds
cmp
mul
add
mov
mov
jnp
sbb
inc
iret
ja
push
mov
lahf
test
call
lahf
idiv
or
mov
or
xor
mov
call
dec
rcl
pop
pop
ret
daa
ins
ds
rol
in
jge
mov
jns
ja
pop
mov
call
cli
popa
outs
xor
mov
jne
out
inc
imul
sbb
call
enter
dec
dec
test
xor
dec
inc
jle
mov
outs
pop
ins
int3
xchg
inc
(bad)
mov
and
mov
pop
mov
sbb
mov
dec
xchg
hlt
xor
test
(bad)
cld
or
fadd
aas
xor
std
loopne
(bad)
(bad)
(bad)
jmp
mov
xchg
sbb
mov
ins
(bad)
and
test
(bad)
(bad)
retf
in
retf
test
(bad)
clc
mov
mov
ss
movs
cld
(bad)
scas
pop
icebp
pop
dec
daa
call
and
sbb
(bad)
(bad)
call
push
mov
jmp
mov
add
mov
out
call
mov
jnp
jae
das
pop
sbb
xchg
jmp
fucomp
(bad)
mov
in
fnstenv
dec
pop
cld
call
(bad)
mov
cmp
stos
push
jge
jmp
hlt
push
jg
das
clc
push
adc
pop
fild
bound
inc
mov
(bad)
jg
call
cmp
fmul
push
les
clc
sti
cwde
lds
jp
cmps
xor
(bad)
in
dec
popa
(bad)
in
pusha
cs
pushf
movs
sti
fdivr
and
fdivp
push
dec
outs
lahf
(bad)
jmp
out
mov
or
cmp
jle
adc
push
xchg
jmp
or
push
(bad)
call
ja
daa
popf
push
ss
rol
enter
jmp
pop
movs
stc
(bad)
(bad)
(bad)
inc
mov
sti
or
jge
imul
or
mov
aam
(bad)
inc
jp
sub
lea
outs
sub
xor
out
(bad)
call
clc
movs
out
cmp
sub
xchg
das
jno
pop
sub
add
or
cmp
push
cld
in
mov
pop
cmp
pop
je
sahf
push
out
ds
pop
push
or
or
or
and
or
in
popf
pop
mov
outs
(bad)
inc
in
cmp
or
mov
(bad)
xchg
arpl
cmp
(bad)
(bad)
(bad)
push
arpl
sbb
xchg
mov
mov
gs
adc
mov
(bad)
(bad)
(bad)
inc
or
or
loopne
mov
sbb
sbb
pop
(bad)
(bad)
(bad)
jmp
mov
lods
es
add
jnp
inc
sbb
push
sti
jl
imul
js
(bad)
(bad)
(bad)
inc
std
inc
sub
cmp
cmp
sbb
(bad)
sub
jge
mov
jo
push
xchg
(bad)
(bad)
cmp
leave
test
popa
mov
sub
jnp
or
sbb
jbe
pushf
pop
cmp
and
add
or
and
pop
(bad)
sti
jle
cwde
xchg
rcr
(bad)
jg
dec
enter
sub
pop
aaa
cmps
lods
fcmove
jle
cmp
jmp
in
and
and
(bad)
fisubr
cmp
mov
jecxz
test
pop
mov
(bad)
mov
outs
pop
and
inc
(bad)
js
cmp
cmp
js
push
ds
aad
mov
(bad)
jmp
dec
cld
rcr
push
out
jbe
(bad)
(bad)
inc
aad
fcompp
and
sub
inc
idiv
pusha
cmp
pop
sub
cmps
outs
(bad)
(bad)
(bad)
call
jne
dec
jne
ret
sbb
pop
add
jg
jg
shl
rol
popa
(bad)
pop
push
cmc
mov
(bad)
jmp
push
call
out
cld
pop
push
test
aas
shl
xchg
mov
call
shr
ror
(bad)
call
pop
(bad)
je
rcr
mov
hlt
es
outs
ss
outs
in
(bad)
bound
cli
(bad)
jnp
jmp
mov
pop
cli
nop
aaa
std
inc
mov
call
xchg
cmps
mov
cs
jae
sbb
dec
test
sbb
mov
xchg
fdivr
(bad)
call
imul
sub
mov
mov
test
xlat
icebp
push
(bad)
out
(bad)
(bad)
cli
sti
jae
mov
in
mov
icebp
mov
into
jnp
jmp
fcomip
dec
out
or
push
pusha
push
adc
xchg
psllq
jb
(bad)
(bad)
(bad)
dec
xchg
cli
aas
dec
push
iret
sub
xchg
adc
fld
rcl
push
test
mov
stc
cmp
imul
hlt
mov
das
fisttp
call
inc
loopne
sbb
(bad)
jb
clc
mov
push
push
aam
inc
jp
in
or
(bad)
inc
test
sbb
push
lahf
sti
xchg
call
fldcw
xor
push
mov
sbb
hlt
pop
jmp
cli
jae
in
mov
movs
sub
mov
cmp
jmp
dec
in
sahf
xchg
jne
jmp
jmp
push
push
xchg
jo
clc
cmps
jmp
fadd
inc
mov
sbb
sub
(bad)
(bad)
mov
xchg
addr16
pop
gs
fbstp
mov
dec
pop
or
xchg
loopne
jg
xchg
mov
sbb
mov
pushf
push
inc
mov
pop
(bad)
(bad)
in
pop
popf
lock
mov
mov
pop
adc
jl
fdivr
out
icebp
(bad)
(bad)
(bad)
call
fistp
(bad)
enter
dec
aaa
mov
(bad)
jle
jle
push
cmp
in
jmp
imul
test
call
mov
push
aaa
fwait
sar
repz
cmp
out
jmp
aad
call
pop
js
mov
pop
mov
and
(bad)
(bad)
btc
call
out
popa
jle
xchg
cmp
(bad)
(bad)
(bad)
fistp
mov
adc
cmp
loope
pop
pop
inc
cvtps2pd
aas
outs
sub
cmp
hlt
clc
pop
icebp
dec
cmps
(bad)
sahf
xchg
push
push
outs
push
sub
jg
sar
scas
sbb
jge
rcr
repz
mov
(bad)
mov
pop
sub
mov
std
(bad)
mov
xchg
mov
in
push
push
xor
push
sub
xchg
jbe
(bad)
(bad)
call
in
jbe
jmp
aas
pop
fisub
lods
dec
push
sti
jnp
jns
sar
aaa
jne
dec
clc
rol
(bad)
call
push
jp
(bad)
and
div
sub
push
mov
add
test
jne
shl
adc
call
inc
ins
xchg
loope
fst
fild
fdiv
fnstenv
(bad)
(bad)
mov
push
add
and
lods
aad
push
ret
leave
retf
dec
leave
jmp
(bad)
(bad)
inc
arpl
cmp
mov
fsubr
cld
adc
ror
jo
inc
lds
dec
inc
dec
or
(bad)
(bad)
sti
xor
(bad)
sbb
cld
add
fisttp
and
das
loopne
scas
lods
stc
cs
ins
or
iret
add
fmul
lock
(bad)
jmp
in
cmp
out
iret
push
pop
out
cmps
test
mov
mov
fnstcw
(bad)
push
neg
push
jb
push
jmp
icebp
mov
aam
xchg
fwait
(bad)
(bad)
(bad)
push
fmul
lea
xchg
inc
and
aam
cmp
and
xor
pop
mov
gs
sar
stc
push
je
mov
sahf
(bad)
idiv
(bad)
call
cli
push
jge
cdq
stos
out
aas
popf
das
or
lods
fbstp
jnp
(bad)
(bad)
(bad)
call
jge
adc
pushf
sbb
leave
adc
cs
mov
dec
dec
pop
mov
test
(bad)
dec
ds
mov
xchg
dec
stos
mov
mov
mov
pop
or
mov
or
hlt
xchg
rcr
rcr
(bad)
retf
pop
push
mov
lock
adc
fcomp
(bad)
adc
jmp
adc
sub
jle
loop
stos
jle
cmp
adc
dec
inc
(bad)
jle
xchg
mov
fs
sar
mov
jo
sbb
cmc
mov
and
lock
call
ins
push
cld
iret
repnz
adc
push
(bad)
push
adc
cmps
pop
jp
lods
push
(bad)
stc
pop
pop
dec
sub
ret
outs
lock
retf
push
retf
(bad)
(bad)
(bad)
call
icebp
bound
(bad)
shl
jae
stc
fdivr
into
sti
xchg
jmp
xor
xchg
push
(bad)
(bad)
inc
add
addr16
stos
or
sbb
data16
fneni(8087
jg
(bad)
mov
sbb
cmps
nop
push
pop
jnp
(bad)
add
sub
or
add
cmc
pop
or
jmp
xor
add
jg
(bad)
call
into
cs
ins
push
call
mov
xchg
out
adc
call
(bad)
cmp
sti
shl
(bad)
out
icebp
xchg
mov
jne
repz
push
aas
xor
(bad)
dec
loopne
jb
inc
lock
jl
retf
lea
xor
xchg
call
lock
cs
and
xchg
cmps
and
(bad)
jmp
stos
test
or
mov
mov
jbe
lods
test
jg
mov
lea
and
shl
(bad)
(bad)
(bad)
(bad)
call
outs
das
xor
xchg
push
inc
icebp
(bad)
and
cmp
xor
sbb
imul
in
in
(bad)
(bad)
(bad)
jmp
(bad)
and
cmp
xor
scas
jmp
jnp
jle
pop
outs
repnz
mov
retf
push
shl
xor
test
shr
push
mov
int
sub
imul
pop
pop
lds
(bad)
jg
mov
mov
jge
cld
les
lahf
cmc
dec
in
push
mov
xor
std
sub
or
mov
inc
cmp
mov
repz
repz
xor
out
mov
push
(bad)
ins
adc
movs
enter
cmp
(bad)
(bad)
(bad)
call
in
pop
push
sbb
mov
test
stos
and
mov
push
das
scas
ror
(bad)
(bad)
jl
lods
add
adc
stos
add
mov
scas
pop
(bad)
cmp
jl
out
fnsave
jmp
(bad)
(bad)
dec
jne
push
cld
ins
out
push
lods
xchg
cli
cmc
jno
mov
hlt
jg
jnp
fbld
mov
(bad)
dec
lock
jno
inc
test
test
sbb
nop
in
push
iret
mov
jge
adc
(bad)
(bad)
dec
gs
loopne
jno
loope
fstp
add
xor
jo
jmp
mov
rol
aaa
push
pop
pop
hlt
sub
jge
addr16
mov
shl
and
push
std
lock
popa
add
icebp
pop
mov
mov
mov
(bad)
(bad)
fbstp
aaa
and
mov
(bad)
jbe
out
scas
out
ss
ror
pusha
sahf
icebp
jg
or
sub
cmp
not
jmp
(bad)
(bad)
(bad)
mov
mov
loope
imul
fisub
add
xor
and
push
cmp
stos
(bad)
(bad)
(bad)
mov
xchg
mov
out
pushf
scas
xchg
cdq
push
(bad)
into
jnp
not
jae
or
push
fistp
cli
push
sbb
test
add
xchg
call
pop
push
jp
or
jnp
sahf
in
shl
inc
cmp
push
in
hlt
(bad)
(bad)
jmp
push
pop
mov
xchg
iret
ret
inc
stc
cmp
or
cmp
push
mov
loopne
fcomp
sbb
aad
cmps
mov
(bad)
(bad)
(bad)
cld
das
pop
call
psadbw
lds
lds
pop
sar
jl
cs
ds
std
repz
stos
data16
int3
je
xor
out
cmp
lock
(bad)
call
dec
fist
xor
xchg
sub
inc
popf
into
popf
arpl
out
xchg
dec
sbb
mov
mov
mov
pop
(bad)
fimul
(bad)
jmp
jp
jl
das
push
jbe
out
or
jnp
sub
cs
fild
dec
rcr
lock
(bad)
call
aas
dec
fld
ss
pop
cwde
cmp
loopne
cmps
xor
call
rol
stos
out
mov
jmp
ret
(bad)
(bad)
jmp
mov
call
cmp
stc
jbe
movd
repz
mov
jns
imul
out
xor
test
mov
cdq
sar
jmp
clc
daa
mov
leave
cmps
xchg
int
add
je
ja
out
mov
mov
stos
jg
pop
(bad)
(bad)
(bad)
call
cmp
jbe
jnp
test
or
frstor
jg
mov
xchg
aaa
sti
sti
and
add
push
cli
call
rcr
(bad)
dec
ret
mov
fwait
inc
cld
mov
dec
fsubr
test
(bad)
dec
rol
sub
scas
fidivr
aas
ins
outs
dec
lock
push
movs
mov
aaa
sbb
repz
aas
xlat
pop
inc
mov
aam
sub
xbegin
(bad)
(bad)
call
xor
and
mov
movs
xor
adc
adc
stos
repnz
sbb
push
dec
xchg
imul
pop
adc
out
out
std
(bad)
jmp
fisttp
int
add
mov
ja
das
rcr
mov
(bad)
std
jmp
dec
and
cmp
call
out
dec
mov
mov
mov
jl
sub
(bad)
dec
jmp
mov
je
cmps
pop
popf
movs
out
retf
(bad)
dec
(bad)
bnd
dec
dec
mov
call
sbb
cmp
dec
jmp
loopne
data16
sahf
mov
cli
push
push
js
das
jge
add
(bad)
(bad)
(bad)
mov
sbb
push
cmp
xchg
mov
or
mov
sbb
(bad)
pusha
mov
test
fild
adc
cmp
fdivr
sbb
inc
out
mov
cli
loopne
test
movd
repz
(bad)
(bad)
dec
xchg
fistp
jmp
mov
int
jge
bnd
jmp
inc
cmp
push
call
jl
adc
mov
test
cmp
fsub
stos
pop
and
xor
std
(bad)
(bad)
jmp
jg
addr16
fldcw
imul
jmp
cdq
pop
leave
xchg
sub
mov
clc
xchg
push
cmc
(bad)
call
and
stos
mov
xchg
jnp
sar
imul
push
jg
jmp
mov
nop
pop
imul
xchg
sbb
mov
daa
fsubr
lock
iret
addr16
jnp
cmp
dec
pop
xor
mov
ret
mov
pop
out
mov
(bad)
(bad)
jmp
ja
sbb
popa
push
les
xor
sub
jecxz
fidivr
mov
stos
(bad)
(bad)
sar
jmp
aaa
hlt
jge
jnp
cmps
push
mov
mov
(bad)
(bad)
(bad)
inc
loop
dec
ret
loope
scas
mov
xchg
(bad)
(bad)
push
sub
mov
iret
xor
das
add
lods
es
xchg
fnstcw
into
(bad)
(bad)
(bad)
push
arpl
jp
shl
pop
jno
pop
repz
inc
repz
mov
out
pop
xchg
repnz
xchg
xchg
jb
dec
imul
in
movs
push
lahf
cwde
xchg
lock
(bad)
push
fwait
ret
sub
jecxz
inc
(bad)
cmp
pop
fisttp
push
movs
sub
jg
(bad)
push
jle
add
test
fucom
scas
xor
mov
mov
fldcw
cwde
stos
adc
sub
not
int
cmps
mov
xchg
pop
cmp
or
xor
push
(bad)
mov
fstp
or
cmp
sub
mov
(bad)
into
sar
call
inc
icebp
jae
xchg
sub
rdmsr
mov
neg
push
div
je
bound
fiadd
(bad)
(bad)
jbe
(bad)
(bad)
mov
movs
mov
movs
jge
retf
test
jmp
xchg
sti
jl
mov
gs
mov
jle
jne
dec
aam
lods
out
clc
mov
lods
cld
inc
xchg
(bad)
pop
sbb
std
pop
fs
test
lahf
push
jmp
ds
clc
pop
and
fcomip
out
jp
(bad)
xor
packssdw
retf
adc
sub
pop
pushf
outs
(bad)
jmp
mov
adc
adc
jno
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
pop
hlt
pop
ss
loop
(bad)
test
push
rcr
pop
mov
outs
popa
in
push
jge
fbld
mov
fst
call
fsub
adc
icebp
push
sbb
aas
ret
lods
dec
(bad)
(bad)
(bad)
push
xchg
dec
push
push
aam
shr
ret
data16
ret
pop
rcr
addr16
fistp
(bad)
(bad)
dec
pop
(bad)
adc
out
xchg
ja
lahf
xchg
fidivr
xchg
lods
(bad)
jmp
pop
dec
lods
call
js
repz
mov
cmp
dec
push
hlt
xor
sbb
sub
mov
scas
(bad)
inc
sbb
sub
add
add
pushf
iret
(bad)
(bad)
(bad)
call
cmc
push
in
fidiv
ds
or
adc
test
pop
cld
call
jo
mov
xor
popf
repnz
adc
cli
(bad)
mov
pushf
dec
mov
jne
inc
pop
fdivp
add
das
std
(bad)
(bad)
inc
out
les
enter
and
es
dec
mov
mov
xor
(bad)
jg
lock
sub
pop
pop
(bad)
pop
pop
jne
out
mov
adc
fdivr
jg
(bad)
aam
mov
repz
lods
push
push
xor
sti
inc
into
jae
out
jl
std
mov
fld
lea
scas
mov
fild
pusha
push
(bad)
neg
lock
jmp
iret
mov
rol
jge
scas
or
dec
xchg
push
dec
inc
sahf
int3
jb
or
xlat
ds
mov
imul
mov
dec
jb
in
fwait
cmps
cmps
sbb
(bad)
call
scas
push
mov
aas
dec
pushf
add
dec
call
sar
inc
jle
repnz
add
(bad)
inc
jecxz
xor
lea
mov
push
mov
dec
push
in
outs
sbb
mov
xchg
xlat
aaa
out
ins
fwait
sahf
push
cmp
(bad)
call
cmp
lahf
pushf
fild
outs
das
mov
aad
inc
fnsave
mov
lock
(bad)
(bad)
call
fs
test
ds
cmp
cmp
pusha
pop
xor
test
into
and
(bad)
(bad)
inc
mov
std
inc
stos
cmp
lock
pop
into
or
test
fwait
mov
mov
jmp
mul
fsubr
jg
or
movs
sbb
repnz
pop
daa
(bad)
(bad)
jg
call
adc
mov
pop
fwait
mov
in
cmp
and
mov
(bad)
call
bound
and
inc
dec
inc
mov
ds
(bad)
jmp
sti
pop
repz
out
xchg
push
frstor
ins
pop
add
xchg
popf
push
out
xchg
hlt
call
inc
add
arpl
mov
push
xchg
(bad)
mov
and
mov
and
push
stc
jae
mov
sub
(bad)
(bad)
(bad)
fsubr
sub
fdivrp
push
and
test
xor
into
lods
ret
cmp
clc
cmp
cs
(bad)
(bad)
call
arpl
idiv
mov
(bad)
repz
dec
dec
jge
arpl
out
fisttp
(bad)
(bad)
push
pop
(bad)
mov
jnp
cmp
cli
push
cmps
cs
movsx
bound
outs
call
jbe
retf
lahf
push
fdiv
loop
jne
and
outs
mov
xchg
adc
(bad)
call
fldcw
sar
cmp
scas
scas
das
mov
aaa
cmp
nop
cli
out
adc
mov
pop
(bad)
(bad)
(bad)
mov
jmp
xchg
cmp
(bad)
stos
mov
jle
in
call
out
pop
(bad)
(bad)
(bad)
(bad)
dec
pop
sub
add
imul
xchg
sub
jle
lods
xchg
dec
int
sub
mov
std
fcomp
scas
das
cmps
xor
clc
mov
add
loopne
call
cmc
cli
jle
adc
div
jmp
lods
stc
cmp
aam
popf
inc
sahf
fbld
mov
repnz
loopne
cmp
dec
bound
out
out
adc
(bad)
mov
or
enter
sti
cmp
je
jmp
fcomip
fidivr
jmp
jne
add
xor
mov
pop
das
ret
cwde
(bad)
(bad)
(bad)
mov
push
nop
cld
shr
jl
push
into
xchg
call
pop
mov
cld
jp
shl
lods
(bad)
mov
sbb
std
pop
enter
call
aam
xchg
xlat
inc
push
mov
cli
(bad)
jp
test
ins
into
adc
push
dec
xlat
and
adc
(bad)
iret
push
mov
and
fadd
sub
popa
xor
out
mov
xor
jns
bound
add
mov
xor
inc
loopne
jmp
dec
sbb
mov
jnp
mov
mov
les
cwde
sub
mov
mov
out
arpl
lds
cmp
out
fcomip
rep
(bad)
(bad)
(bad)
dec
mov
sub
adc
mov
cmp
aaa
aam
fadd
pop
rcl
inc
clc
sar
(bad)
(bad)
jmp
sub
jmp
sahf
out
fstp
jbe
repnz
ds
pop
scas
addr16
mov
sbb
pop
mov
pop
in
adc
mov
(bad)
fcomip
sbb
or
xchg
ss
inc
sub
clc
ret
div
out
add
add
cmp
xor
movs
out
scas
out
xchg
fidivr
(bad)
call
test
xchg
jl
in
jne
out
jmp
andps
push
in
stc
xor
mov
das
and
xchg
mov
mov
out
sti
es
sbb
call
mov
add
cmp
inc
jb
or
(bad)
pop
cmp
push
(bad)
(bad)
jmp
ja
lahf
into
xchg
sub
push
outs
stos
lods
(bad)
(bad)
(bad)
(bad)
jg
addr16
push
(bad)
in
iret
stc
adc
sti
inc
aad
add
sbb
ss
sti
sbb
imul
mov
mov
inc
pop
loope
addr16
sar
adc
push
or
ins
test
dec
or
aam
sbb
xchg
loope
cmp
and
mov
(bad)
cld
jno
repnz
add
mov
xor
les
mov
call
mov
out
jp
cwde
ret
int3
pop
cmp
mov
std
(bad)
(bad)
jle
mov
imul
lea
sub
sub
clc
dec
cli
jg
jle
sbb
xchg
sub
call
inc
jbe
dec
sbb
xchg
sti
bound
sbb
sub
sar
(bad)
call
sbb
aam
and
xchg
outs
int
aam
sti
cmps
loope
dec
mov
adc
fst
sbb
fsub
pop
sbb
test
(bad)
(bad)
(bad)
jmp
mov
push
into
push
outs
pushf
mov
ds
idiv
scas
fistp
iret
mov
push
data16
mov
fmul
les
mov
stos
shr
(bad)
mov
mov
out
or
imul
jns
das
and
jg
adc
pop
dec
cli
(bad)
in
adc
and
pop
xor
lock
(bad)
inc
and
(bad)
outs
and
js
jae
jecxz
push
(bad)
or
ud0
xchg
mov
xchg
cmp
pop
dec
sub
adc
retf
not
jno
sub
jb
xchg
pop
popa
fadd
mov
dec
mov
mov
(bad)
(bad)
(bad)
jmp
test
mov
out
push
stos
mov
lock
jmp
sub
xor
pop
cmc
out
dec
xchg
adc
xchg
xchg
repz
adc
xor
adc
pop
mov
call
enter
push
jmp
push
in
outs
and
(bad)
jmp
out
ins
xchg
popa
out
dec
cmps
mov
(bad)
xor
leave
jle
aad
push
jge
pop
(bad)
sti
adc
movs
sub
and
sahf
jmp
adc
lods
(bad)
(bad)
(bad)
push
and
dec
in
mov
ja
test
push
jb
mov
dec
cmp
push
cmp
(bad)
(bad)
jmp
sti
and
daa
out
pop
mov
dec
fwait
dec
sub
rol
xchg
fdiv
xor
(bad)
jmp
adc
add
lea
sub
cmp
stc
push
hlt
sub
(bad)
(bad)
(bad)
dec
pop
mov
add
mov
mov
fdivr
out
push
sbb
push
pop
dec
push
push
shl
mov
punpckhbw
inc
jnp
sbb
sahf
dec
xchg
ss
(bad)
(bad)
(bad)
call
xor
stos
mov
lods
push
cmp
sbb
push
inc
pop
psrld
shl
(bad)
jg
fs
add
xchg
ins
dec
jnp
outs
out
clc
mov
enter
mov
xchg
into
(bad)
fwait
sbb
pop
cld
call
aas
push
(bad)
xchg
mov
sbb
add
aam
sub
inc
jecxz
(bad)
scas
cli
sub
call
call
sub
pushf
sub
retf
ds
xor
jmp
pop
or
mov
(bad)
shl
push
into
mov
xor
sub
ss
cmps
loop
stc
jmp
repz
(bad)
ins
out
test
dec
leave
adc
push
jg
cmp
xchg
ret
int3
jmp
jecxz
fcmovnbe
and
push
into
pop
dec
(bad)
(bad)
(bad)
dec
xchg
push
shr
arpl
loop
and
neg
dec
push
hlt
jle
jns
aam
(bad)
(bad)
(bad)
call
jecxz
pushf
out
jmp
jb
mov
and
out
inc
pop
pop
les
adc
bnd
add
sahf
pop
sub
dec
adc
lock
dec
dec
fwait
add
mov
sbb
mov
jmp
fistp
pop
pushf
mov
ror
movs
and
(bad)
(bad)
cmp
cmps
mul
rcl
(bad)
ror
pop
inc
std
pushf
xchg
and
mov
cmp
mov
rol
jbe
inc
xlat
add
out
jmp
(bad)
mov
(bad)
cmp
mov
mov
ja
pop
daa
jg
or
ds
loope
mov
outs
add
call
fsubr
call
fnstsw
pusha
in
shl
dec
(bad)
push
pop
mov
jo
sbb
jbe
lods
inc
(bad)
(bad)
(bad)
dec
lds
sub
clc
mov
sub
inc
push
out
xchg
stos
xchg
ss
sub
test
(bad)
mov
scas
push
jo
pop
mov
xchg
mov
pop
jle
jle
dec
xor
cmps
and
sahf
fstp
std
popa
repz
adc
shr
jmp
dec
jecxz
cdq
clc
(bad)
call
cli
or
adc
pop
cs
addr16
fnstcw
(bad)
(bad)
call
arpl
jo
and
lods
enter
adc
adc
inc
fcomip
cmp
hlt
(bad)
(bad)
jmp
(bad)
and
cmps
pop
push
aaa
dec
mov
sub
test
mov
std
xchg
fist
dec
imul
cmp
mov
int
adc
ja
push
sbb
into
mov
out
mov
adc
imul
aam
aas
std
ret
jp
cli
jae
or
push
and
(bad)
call
(bad)
add
sbb
fbld
push
movs
xchg
add
stos
xchg
xor
inc
fst
(bad)
(bad)
(bad)
cmp
mov
push
lock
outs
aam
xchg
loopne
rcl
dec
aad
push
repz
inc
add
dec
test
sbb
push
mov
test
call
dec
dec
popa
pop
sbb
and
mov
in
jae
push
jmp
clc
xchg
mov
mov
xchg
mov
sub
out
(bad)
(bad)
(bad)
call
movs
mov
outs
in
div
stc
add
mov
(bad)
sbb
push
enter
push
or
test
pop
mov
push
xor
aas
mov
mov
(bad)
mov
jnp
mov
(bad)
icebp
adc
mov
xor
int
dec
imul
jmp
ss
popa
std
xor
(bad)
dec
mov
fcom
clc
or
mov
xor
pop
xchg
in
mov
test
push
or
imul
gs
push
or
repnz
mov
or
jecxz
(bad)
call
pop
fcomp
aaa
leave
xor
(bad)
adc
loop
cli
or
mov
add
cmp
mov
inc
mov
push
and
(bad)
inc
ret
mov
inc
(bad)
push
mov
jp
ret
sbb
add
fsub
std
(bad)
dec
dec
mov
add
push
pop
int
cli
push
pop
stos
lahf
jge
repz
mov
(bad)
(bad)
push
loopne
fdivr
mov
fwait
push
sbb
fldcw
enter
scas
sbb
xchg
sbb
mov
outs
lods
ja
pop
lock
faddp
xor
push
(bad)
(bad)
(bad)
push
aad
jmp
stos
aas
inc
(bad)
fsubr
retf
cmp
or
data16
xor
add
sbb
sbb
imul
div
hlt
imul
out
xchg
movs
push
mov
mov
ficom
jle
sbb
cwde
jecxz
add
cli
jmp
push
pop
in
pop
fwait
call
out
not
push
push
rcr
(bad)
std
retf
scas
mov
(bad)
ja
and
dec
fcomip
(bad)
call
push
in
test
ins
cmp
lods
aaa
mov
stos
repnz
pop
stos
loop
das
add
std
daa
test
fdivr
les
pop
js
popa
loopne
inc
call
or
int3
mov
sbb
mov
or
stos
lock
call
dec
aaa
sbb
pop
jb
xor
xor
sub
cmps
aas
fcomp
xor
cmp
or
std
js
scas
shr
xlat
addr16
pop
sbb
enter
int
mov
scas
mov
xchg
dec
iret
jns
jo
lahf
dec
lods
xlat
repnz
out
cmp
test
(bad)
(bad)
mov
and
xor
mov
inc
fbstp
(bad)
cmps
or
(bad)
dec
mov
xlat
loop
pushf
ja
push
fincstp
(bad)
not
xchg
xor
ins
xchg
repz
adc
(bad)
(bad)
(bad)
push
repz
cdq
jg
jns
popf
pop
pop
sar
pop
lea
inc
mov
imul
(bad)
(bad)
call
pop
xchg
xchg
mov
ins
xor
cdq
dec
aas
sbb
lock
out
ret
xchg
dec
(bad)
jmp
mov
cmps
icebp
test
xchg
xchg
test
movs
inc
lds
mov
loop
je
or
stos
pop
sub
fdiv
fidiv
xchg
mov
lods
adc
data16
sbb
call
dec
jg
movs
(bad)
call
sti
xlat
stos
pop
mov
daa
aaa
pop
mov
in
aam
and
jmp
out
leave
ror
es
push
or
int
scas
pop
xchg
scas
xchg
ins
cmc
fldenv
pop
jne
sub
and
nop
mov
cli
dec
xchg
(bad)
(bad)
(bad)
mov
pop
mov
mov
rol
ja
retf
ja
cmc
push
jmp
jmp
dec
fcmovu
push
movs
popf
dec
cmp
gs
pop
clc
jmp
loopne
jle
add
mov
dec
sbb
scas
sbb
hlt
push
inc
mov
jno
mov
xchg
sar
mov
dec
call
std
mov
mov
dec
xlat
dec
xor
xchg
loope
lahf
mov
and
fild
push
mov
(bad)
(bad)
out
adc
xor
xlat
(bad)
jbe
in
scas
loopne
inc
call
jmp
dec
loop
call
lods
stc
mov
jae
dec
sub
fwait
cmc
(bad)
(bad)
mov
in
push
js
mov
sbb
movs
sub
lahf
xchg
xchg
sbb
sub
inc
popa
sub
stc
retf
test
out
clc
ja
ja
ja
mov
neg
sar
xchg
jnp
call
inc
aas
mov
xlat
ja
sahf
mov
(bad)
(bad)
(bad)
sbb
popf
imul
out
cmp
in
or
fnsave
sub
in
cwde
inc
imul
jmp
push
sub
push
fisttp
gs
cmp
inc
jb
call
or
sub
aad
add
cmps
imul
xor
inc
mov
mov
adc
mov
popf
std
int3
xchg
and
adc
sub
nop
in
ds
mov
jg
loope
into
mov
repz
lahf
mov
jl
aas
out
cmp
div
cmp
mov
mov
mov
data16
dec
or
jmp
jmp
mov
jmp
lock
sti
aas
test
sub
into
xchg
cmp
cmp
(bad)
inc
jp
push
inc
sahf
push
xor
cli
outs
jle
cld
std
jmp
call
sbb
pop
es
aas
imul
ins
out
pop
hlt
or
cmp
mov
call
idiv
or
cli
sub
add
daa
jle
stc
mov
(bad)
(bad)
jmp
jb
shl
xchg
jg
inc
ds
or
(bad)
push
int3
jge
and
inc
mov
nop
out
pop
(bad)
(bad)
(bad)
jmp
xchg
into
sti
int
adc
xor
shr
add
jae
(bad)
mov
shr
xchg
not
repz
lods
lds
and
cmc
xor
dec
inc
pop
(bad)
loop
arpl
sub
jmp
rol
icebp
or
or
inc
loop
sub
adc
repz
sbb
stc
iret
pop
push
xlat
add
jmp
push
std
cmps
lahf
push
test
mov
icebp
pop
cmps
cld
(bad)
(bad)
(bad)
(bad)
fistp
push
inc
mov
jecxz
add
sub
sub
mov
pusha
or
push
(bad)
in
(bad)
dec
(bad)
(bad)
jg
hlt
fwait
dec
fcomp
int
mov
(bad)
out
nop
aaa
cld
cld
sub
fldcw
push
jg
(bad)
(bad)
(bad)
jg
dec
loopne
ds
fidiv
fadd
movs
inc
lahf
fisttp
jmp
cmp
(bad)
(bad)
jmp
or
jmp
jge
inc
mov
push
icebp
std
push
lods
call
pop
(bad)
inc
xor
xchg
(bad)
aad
bound
add
or
(bad)
(bad)
jmp
inc
push
pop
out
mov
pop
sub
jmp
xchg
jge
(bad)
out
push
dec
sub
sub
and
add
cld
retf
jmp
dec
push
repnz
(bad)
(bad)
(bad)
(bad)
mov
out
cmp
sbb
shl
mov
xor
sub
outs
clc
(bad)
push
(bad)
lods
loope
(bad)
in
jo
outs
div
test
jp
jo
scas
mov
dec
xchg
adc
imul
sbb
call
ds
push
hlt
iret
xchg
xchg
or
(bad)
(bad)
jmp
imul
mov
nop
(bad)
adc
inc
ds
cs
aaa
sbb
push
fadd
xlat
adc
pop
pop
(bad)
(bad)
(bad)
jmp
xchg
adc
jmp
xlat
dec
in
pop
iret
loopne
(bad)
fsub
(bad)
fcmovb
jl
pushf
popf
ret
loope
ret
cmp
ds
repz
(bad)
stos
mov
mov
mov
pushf
rcl
(bad)
(bad)
(bad)
(bad)
xchg
(bad)
hlt
pop
xchg
test
outs
fidiv
neg
pushf
repnz
clc
sbb
cld
fmul
fidiv
fadd
call
inc
(bad)
outs
push
cmp
jns
aaa
mov
mov
std
sbb
cld
inc
fisttp
sahf
scas
xlat
xor
sbb
dec
inc
bound
aas
push
sahf
ffree
cmp
mov
mov
xrelease
std
(bad)
push
iret
cmp
pop
loopne
call
dec
xchg
repz
pushf
and
or
hlt
cdq
adc
stos
loope
(bad)
inc
xchg
dec
sub
idiv
adc
ror
call
std
cmp
fadd
mul
mov
mov
test
inc
aad
hlt
push
inc
call
repz
(bad)
(bad)
(bad)
fistp
xlat
mov
lock
xor
jbe
jno
push
xlat
ins
(bad)
jmp
push
stos
adc
es
(bad)
mov
das
fsub
js
ins
and
(bad)
(bad)
jmp
ja
scas
or
into
rol
inc
dec
jnp
(bad)
and
and
cmp
pop
lds
jmp
lds
mov
shr
in
lds
movs
mov
jmp
push
aaa
ins
(bad)
(bad)
(bad)
dec
mov
cmp
ins
cmps
cmp
push
cli
call
outs
dec
aas
cmc
sbb
aaa
add
jecxz
mov
mov
or
call
add
inc
cmps
call
out
or
not
mov
loopne
mov
cmp
mov
mov
jmp
mov
and
jg
inc
cmp
jge
mov
xchg
dec
cmp
fcmovb
adc
adc
fwait
pop
xchg
(bad)
(bad)
(bad)
(bad)
jmp
enter
test
out
(bad)
xchg
adc
pushf
or
xchg
cmp
(bad)
(bad)
out
cli
hlt
cld
data16
adc
lahf
fadd
and
add
fcmovne
mov
push
dec
mov
das
leave
fmul
imul
cmps
(bad)
adc
les
mov
jnp
out
das
and
es
(bad)
(bad)
(bad)
dec
and
mov
call
test
ret
cwde
pop
xor
cli
jmp
add
arpl
sub
cmp
cmp
mov
jg
sbb
(bad)
stos
popa
sahf
and
fsubr
std
lea
ins
aas
stos
loop
add
cmp
(bad)
jo
sahf
imul
xchg
jge
clc
stc
addr16
aas
sbb
and
mov
and
mov
sbb
les
cld
dec
xchg
jle
test
sub
imul
dec
xchg
xor
pop
mov
lahf
movs
std
call
mov
out
inc
shl
arpl
call
jae
or
scas
fdiv
sbb
imul
fcomip
ja
loop
psubq
cmp
mov
adc
(bad)
(bad)
cmp
(bad)
repnz
nop
ror
and
push
repz
loopne
cmc
dec
mov
scas
xchg
aad
pop
xchg
test
mov
fimul
sub
lock
(bad)
(bad)
(bad)
mov
adc
mov
jl
or
(bad)
ds
sub
cli
mov
call
out
cld
ja
(bad)
jmp
out
jle
imul
scas
mov
icebp
mov
adc
adc
shr
add
mov
pop
shl
xor
(bad)
(bad)
call
mov
bound
pop
cmc
adc
xlat
jmp
jge
fild
(bad)
(bad)
fcom
xchg
ret
mov
stc
mov
call
push
jno
out
movs
(bad)
xchg
pop
mov
cmc
mov
dec
adc
and
and
or
dec
inc
(bad)
cli
sti
clc
call
inc
pop
mul
push
outs
ret
jmp
mov
loopne
pusha
aas
mov
aas
sub
push
fadd
jp
lds
std
jne
call
adc
popf
jp
sub
sar
push
test
pop
icebp
movs
lds
int
xor
jae
retf
xchg
adc
js
(bad)
(bad)
(bad)
call
push
repz
test
icebp
test
js
test
fwait
cmp
mov
or
jmp
outs
call
aaa
xor
rol
test
xchg
xchg
and
scas
call
es
es
jmp
outs
les
jg
mov
jecxz
out
in
pop
ja
inc
mov
pusha
inc
pushf
jbe
xor
call
push
xchg
js
cmps
or
dec
out
inc
jg
popf
lods
out
adc
add
dec
inc
jle
cmp
cmp
mov
mov
cli
sub
sbb
fisubr
mov
enter
push
mov
inc
ja
(bad)
(bad)
(bad)
fisttp
inc
inc
cmp
jg
ret
pandn
xchg
pop
sbb
(bad)
(bad)
(bad)
fld
cmp
push
repnz
or
xchg
(bad)
(bad)
(bad)
jg
(bad)
xor
mov
mov
int3
adc
leave
test
js
imul
mov
(bad)
(bad)
push
cmc
adc
outs
repnz
cmp
xchg
jg
sub
cmp
mov
in
push
sub
jmp
lods
out
js
inc
pop
ror
adc
(bad)
fadd
mov
(bad)
(bad)
(bad)
(bad)
mov
scas
xor
lahf
inc
les
pop
out
out
push
jbe
or
mov
xchg
and
jle
les
mov
les
lea
push
(bad)
(bad)
jmp
pop
dec
out
adc
cmp
test
lock
xchg
mov
jns
sbb
(bad)
mov
pop
inc
jmp
nop
xchg
aam
adc
mov
(bad)
stc
repnz
sub
out
in
pop
jbe
ins
inc
mov
sbb
fist
push
xlat
fst
(bad)
(bad)
call
lea
xchg
mov
jg
mov
xchg
repnz
mov
or
cmp
jne
and
mov
lea
call
lock
js
xor
sahf
cs
mov
cmp
les
and
cmp
popa
test
outs
cmp
ja
jg
ss
ds
add
fmul
xor
(bad)
(bad)
inc
mov
mov
jns
jmp
sti
cmps
into
add
daa
pop
and
call
jmp
fild
pop
(bad)
loopne
and
aas
mov
sub
and
inc
loop
(bad)
jns
pop
addr16
add
pushf
inc
mov
or
dec
loop
or
jmp
jmp
push
mov
(bad)
(bad)
mov
cmp
mov
dec
jmp
aad
push
out
or
cmp
sbb
(bad)
(bad)
jmp
mov
adc
movs
jmp
(bad)
jnp
rcl
out
mov
inc
(bad)
jmp
mov
mov
add
sahf
dec
aas
pop
dec
push
stos
sti
(bad)
push
sub
push
adc
xor
jnp
in
arpl
aam
adc
xlat
fisub
push
js
mov
retf
(bad)
inc
int
nop
mov
pop
dec
push
test
inc
sub
idiv
mov
push
stc
or
jg
push
icebp
dec
xchg
pop
xlat
in
pusha
dec
jmp
pop
inc
(bad)
(bad)
(bad)
call
icebp
pushf
jb
(bad)
jl
jns
stos
aam
push
test
daa
pushfw
push
rcl
ret
rol
pop
shl
(bad)
(bad)
call
rcr
jne
sub
les
call
xchg
or
loop
sbb
xchg
cld
push
imul
shr
lds
movs
mov
and
(bad)
cmp
cld
xchg
sub
lock
imul
out
sbb
cs
ds
sar
and
pop
lock
(bad)
cld
xor
outs
fst
(bad)
cmp
add
icebp
test
push
neg
jmp
jnp
(bad)
(bad)
inc
enter
push
bound
scas
xlat
mov
mov
or
mov
cld
(bad)
(bad)
(bad)
(bad)
cmp
pushf
jo
mov
add
int3
cli
mov
stos
rcl
mov
leave
add
call
sub
lds
sub
repnz
fsubr
cmp
(bad)
(bad)
call
test
clc
dec
into
sbb
mov
cld
loope
aad
mov
ja
cmps
mov
hlt
(bad)
push
mov
in
mov
daa
test
bound
loop
in
fisub
(bad)
(bad)
dec
out
inc
fsubr
inc
out
mov
aad
cmp
fdivr
(bad)
fcomip
vpsubd
jns
mov
in
das
dec
pop
mov
xlat
xlat
xchg
mov
(bad)
call
iret
pusha
lahf
dec
in
das
sbb
adc
cwde
iret
in
mov
fisubr
pop
jnp
(bad)
jbe
sub
adc
and
lds
sub
arpl
lock
jg
xor
mov
ret
xlat
mov
xchg
mov
xor
in
(bad)
jmp
mov
nop
(bad)
mov
(bad)
(bad)
adc
and
or
cmp
and
pop
(bad)
(bad)
(bad)
jmp
ja
pop
movs
fsubr
fwait
and
bound
mov
cli
mov
shl
xor
stos
jae
in
jge
fs
xchg
xchg
ds
push
aad
(bad)
(bad)
call
ficom
aas
out
pop
add
adc
in
ds
(bad)
(bad)
mov
adc
out
cli
sbb
mov
(bad)
(bad)
mov
fwait
ds
dec
adc
outs
add
mov
cmc
xchg
or
jmp
xchg
int3
inc
in
mov
popa
leave
rol
stc
or
or
mov
sbb
jle
cmp
(bad)
(bad)
(bad)
call
addr16
jmp
xlat
addr16
cwde
retf
or
adc
sbb
and
sub
pop
(bad)
call
test
mov
mov
xor
mov
call
aad
ficom
bswap
xlat
ret
(bad)
call
aam
sbb
dec
adc
fisubr
dec
mov
(bad)
xchg
out
imul
jae
sar
(bad)
call
leave
out
cmp
out
pop
sbb
js
mov
stc
call
aad
imul
and
cli
mov
sub
fidiv
xchg
xchg
sbb
jg
inc
fs
test
pop
scas
or
scas
mov
movs
pop
jbe
or
jae
in
in
or
and
fdivr
mov
call
jl
fwait
and
mov
out
fwait
xchg
xchg
jo
test
(bad)
(bad)
(bad)
mov
cmp
out
icebp
mov
and
sbb
push
cmp
jge
xor
cmp
pop
sbb
or
(bad)
(bad)
(bad)
(bad)
std
mov
loop
dec
aam
jmp
xlat
(bad)
lods
ss
jmp
psubb
jmp
stos
int
sbb
inc
test
shl
adc
(bad)
(bad)
push
jb
push
inc
mov
jnp
jbe
add
lds
add
jmp
jnp
std
inc
mov
(bad)
(bad)
cmp
iret
test
fiadd
mov
cmp
pop
or
jnp
ret
(bad)
push
lods
sbb
cmp
aas
push
mov
add
outs
idiv
sbb
pop
call
jb
and
add
jecxz
sti
sub
popa
adc
inc
ss
sahf
jp
xchg
hlt
outs
fbld
in
fcomp
dec
dec
repnz
adc
aaa
adc
in
xor
bound
cmc
fcom
inc
inc
cmp
into
cmp
not
pop
jle
push
jno
cmc
pop
test
(bad)
call
or
pop
js
stc
dec
mov
test
mov
dec
test
mov
pop
inc
xchg
pop
inc
sahf
lea
push
pop
and
inc
or
test
and
sti
(bad)
(bad)
out
and
hlt
pop
in
and
pop
int3
lahf
bound
mov
push
call
inc
(bad)
cmp
cdq
pop
sub
sbb
sahf
movs
xchg
inc
jae
mov
sbb
call
pop
mov
inc
cmp
xor
xchg
adc
mov
in
loopne
addr16
lods
push
(bad)
push
bnd
repnz
in
cmp
in
ds
add
inc
adc
cmps
cli
retf
das
fdivr
add
inc
sar
(bad)
(bad)
dec
out
and
mov
fiadd
stc
(bad)
out
xor
inc
outs
xchg
mov
pop
(bad)
(bad)
(bad)
dec
and
fisub
mov
jp
push
and
idiv
fscale
ficom
gs
das
sar
and
aam
loope
call
mov
push
sub
(bad)
jb
dec
call
xchg
fwait
push
data16
(bad)
cld
add
add
(bad)
mov
inc
repnz
jmp
sar
xrelease
fild
fisub
in
fwait
popa
cld
call
popa
xchg
in
daa
inc
scas
cmp
xchg
mov
inc
jge
cmc
or
bound
cwde
lahf
xchg
cdq
loopne
fisttp
add
in
into
mov
outs
lea
into
(bad)
sub
call
test
cmps
xor
orps
jmp
(bad)
pop
dec
(bad)
xor
xor
sbb
add
scas
das
rcr
push
ds
ret
add
inc
sti
(bad)
xchg
mov
aaa
dec
lahf
into
(bad)
mov
or
jne
cmc
ret
mov
mov
(bad)
jae
jbe
lock
(bad)
dec
sbb
sub
cmp
ror
fstp
cli
push
ins
rcl
fild
mov
(bad)
xor
into
xchg
pop
and
cli
enter
sar
scas
call
pop
lds
out
out
mov
and
pop
mov
(bad)
(bad)
(bad)
(bad)
cmp
sbb
clc
shl
clc
cmp
outs
xchg
inc
jmp
sbb
(bad)
(bad)
push
int3
and
es
cmc
in
aam
mov
rcl
pop
push
jo
adc
cld
call
scas
xlat
ret
sar
loop
mov
dec
mov
or
(bad)
or
aad
adc
retf
idiv
add
callw
inc
ret
mov
enter
sbb
sub
fsubr
scas
es
(bad)
(bad)
mov
xchg
mov
dec
push
mov
jae
rol
call
mov
jg
call
xlat
and
repnz
cli
(bad)
(bad)
(bad)
jmp
std
jp
inc
xchg
repnz
mul
xor
cmp
js
in
xchg
in
fcomp
out
pop
dec
dec
das
sar
sub
(bad)
(bad)
inc
cli
mov
inc
or
call
dec
inc
mov
pop
pop
jnp
stos
or
cli
icebp
(bad)
out
cli
std
sbb
push
lods
dec
enter
clc
rcr
jecxz
add
rcl
sub
bound
(bad)
(bad)
(bad)
jge
mov
int
(bad)
hlt
rcr
mov
cld
push
xor
inc
pop
xor
test
jg
ret
mov
mov
into
ins
fst
or
sbb
dec
call
cmp
test
pop
das
inc
jl
jmp
adc
out
mov
mov
pusha
popf
mov
sbb
rcr
(bad)
(bad)
call
outs
push
out
xchg
fimul
jno
push
mov
call
pop
outs
cld
call
aam
mov
out
iret
in
inc
daa
lock
xchg
stc
xchg
out
add
sbb
loopne
inc
inc
adc
mov
ucomiss
call
cld
lea
push
loop
test
pop
fadd
jge
pop
dec
popa
jp
sbb
scas
retf
ja
(bad)
(bad)
jmp
push
mov
pushf
pop
add
cli
push
xor
mov
sbb
cwde
js
addr16
jle
(bad)
dec
cmps
push
mov
xchg
jae
mov
outs
dec
rcl
outs
pop
mov
adc
je
xchg
test
(bad)
(bad)
(bad)
call
ds
xlat
popa
mov
cdq
mov
jle
sub
jge
mov
fdivr
mov
test
sub
pop
jmp
and
ins
sub
jnp
mov
push
adc
clc
xor
jl
push
mov
stos
cld
les
inc
(bad)
(bad)
(bad)
jmp
out
imul
shl
out
push
xlat
aas
jl
fisub
popa
(bad)
mov
sar
push
or
mov
fs
xlat
ins
pop
enter
adc
call
add
sub
mov
xchg
cmps
push
and
clc
mov
sbb
test
movs
loopne
cmc
(bad)
fadd
addr16
push
mov
ficomp
xchg
(bad)
call
test
jmp
mov
jl
mov
jo
adc
jp
cmc
(bad)
(bad)
xchg
(bad)
scas
sbb
int3
sti
call
je
loop
push
inc
pop
cdq
push
imul
(bad)
xchg
scas
inc
dec
add
cwde
inc
pop
pop
mov
iret
repz
dec
cmp
(bad)
jmp
shr
out
mov
push
inc
or
out
sub
call
(bad)
(bad)
(bad)
(bad)
inc
lock
sbb
jp
mov
pusha
jl
sbb
mov
cmp
out
mov
cmp
jmp
mov
call
enter
hlt
int
xchg
dec
jo
sub
enter
mov
sub
(bad)
(bad)
jg
sub
loope
mov
scas
sub
cmp
mov
imul
dec
sahf
xor
retf
cmp
scas
ds
fst
xchg
inc
(bad)
call
std
fcomp
in
inc
stc
xor
sbb
adc
dec
(bad)
(bad)
(bad)
(bad)
call
dec
loop
ror
daa
dec
hlt
imul
cmp
pop
aaa
pop
cwde
mov
cli
sub
(bad)
(bad)
(bad)
(bad)
fsub
pop
jp
out
scas
mov
ss
rcl
mov
std
fimul
ficom
inc
(bad)
aam
dec
or
cmp
fdivr
mov
movs
push
stos
lahf
sar
(bad)
(bad)
jnp
repnz
(bad)
and
lods
cli
lods
test
in
push
inc
sbb
jmp
ja
std
stos
pop
in
lds
das
inc
test
cdq
lahf
ins
out
cmp
inc
(bad)
(bad)
mov
sti
ja
arpl
retf
xlat
pop
in
sbb
(bad)
(bad)
mov
cli
test
loop
push
mul
das
mov
jne
inc
jg
in
mov
jecxz
rcl
pop
cmp
(bad)
(bad)
(bad)
jmp
(bad)
out
dec
xchg
xor
into
out
mov
sar
fidiv
add
jecxz
jge
fnstsw
(bad)
jae
jl
test
fstp
jmp
popf
fimul
pushf
imul
jp
(bad)
call
(bad)
(bad)
fs
adc
iret
call
dec
mov
out
int3
jl
iret
push
adc
fild
jmp
cmp
inc
loop
jl
arpl
jmp
adc
out
inc
xchg
or
push
(bad)
sti
xchg
(bad)
retf
sahf
mov
(bad)
(bad)
(bad)
call
loopne
adc
cld
shl
ds
push
(bad)
mov
mov
je
mov
div
test
pop
mov
adc
mov
adc
arpl
fcos
ja
cli
and
rol
and
sbb
leave
push
int3
pop
inc
call
lds
inc
cmc
jmp
mov
int
out
out
scas
or
mov
test
neg
pop
mov
mov
jmp
(bad)
xchg
ja
mov
ret
aad
jmp
ja
cwde
cmp
inc
xor
(bad)
(bad)
(bad)
mov
lds
and
pushf
es
push
mov
pop
fwait
leave
sub
cmp
and
ds
mov
push
xchg
pop
cmp
mov
mov
xchg
adc
pop
ins
jmp
jmp
xchg
in
iret
fadd
mov
imul
(bad)
(bad)
jmp
xchg
call
nop
call
push
test
std
imul
fwait
sti
push
loopne
cmc
cs
pop
ret
loope
jp
push
jno
movs
mov
pop
nop
(bad)
call
add
call
or
sub
mov
js
sub
jo
add
pushf
mov
pop
jg
movs
jmp
pop
popf
ja
adc
outs
retf
cmp
std
jmp
les
scas
(bad)
outs
jo
loopne
ins
adc
hlt
iret
ja
out
mov
adc
jbe
jnp
(bad)
daa
test
cmc
(bad)
(bad)
(bad)
(bad)
cmp
jnp
pop
ins
test
int3
test
cmp
cld
dec
retf
pop
inc
push
pop
jl
(bad)
(bad)
call
cmc
pop
into
mov
gs
mov
shl
ins
fs
inc
out
pop
fisubr
or
shl
add
in
jle
inc
cmps
ss
(bad)
cld
into
(bad)
(bad)
(bad)
call
push
or
and
jmp
pop
das
pop
out
add
jno
add
adc
(bad)
(bad)
mov
gs
mov
jne
xor
int3
(bad)
push
ud0
call
mov
out
jne
fadd
cmp
scas
sbb
aad
and
cmp
mov
pop
jb
adc
jno
or
push
std
push
jbe
sub
and
mov
loope
aam
outs
(bad)
(bad)
jg
push
adc
dec
sbb
cmp
cmps
arpl
imul
(bad)
clc
(bad)
xchg
dec
out
jl
mov
hlt
iret
dec
popf
fiadd
cwde
xor
sar
scas
int3
add
por
scas
lods
and
cmp
ror
leave
(bad)
pusha
xor
cli
adc
jge
enter
or
mov
cmp
lock
call
xchg
(bad)
call
cmp
sbb
xchg
mov
dec
pop
dec
cmps
cmc
(bad)
out
push
mov
xchg
into
(bad)
mov
sbb
std
(bad)
call
jmp
cli
in
fst
mov
sahf
inc
pop
movs
cmp
ret
sub
stos
mov
(bad)
mov
int
loope
jecxz
mov
cmp
std
jns
sar
(bad)
(bad)
jg
push
test
add
test
std
outs
cmp
in
pop
adc
ret
mov
xor
(bad)
mov
push
jge
aas
out
imul
(bad)
pop
mov
sub
mov
jmp
stc
xchg
es
pop
pushf
fbld
(bad)
mov
xor
mov
mov
call
sbb
arpl
pop
jge
movs
call
fsubr
inc
sahf
outs
(bad)
cmc
cld
call
(bad)
call
leave
clc
fldcw
mov
jg
adc
clc
lahf
mov
dec
or
pop
push
into
icebp
push
jb
std
(bad)
(bad)
jno
imul
not
mov
imul
pop
outs
or
outs
inc
fisubr
(bad)
mov
add
mov
mov
mov
mov
out
call
dec
mov
neg
std
(bad)
call
outs
sbb
xchg
dec
loopne
cmp
out
add
test
cmp
wrmsr
sbb
(bad)
(bad)
call
aam
stc
mov
lods
dec
fwait
and
setbe
stc
pop
pop
fwait
or
push
sahf
mov
cs
aam
(bad)
jg
aas
cmps
jp
(bad)
jne
aas
aam
fprem
dec
fsubr
dec
test
mov
and
cmp
jmp
aad
add
jmp
ins
mov
jge
jl
jae
(bad)
(bad)
call
add
adc
in
mov
in
xlat
dec
enter
sub
leave
add
xchg
mov
clc
mov
(bad)
cmp
mov
in
aam
push
jl
idiv
push
jne
ins
in
std
inc
mov
leave
aam
(bad)
(bad)
(bad)
(bad)
jmp
stos
push
push
std
xor
inc
punpcklwd
fucomip
popa
jb
sbb
pop
mov
jle
(bad)
(bad)
jmp
mov
xchg
mov
in
xor
clc
mov
pop
pop
cmp
push
cwde
sbb
or
scas
aam
xchg
jmp
mov
fistp
jg
pop
stc
outs
push
jae
jns
hlt
mov
sub
or
into
push
movs
(bad)
fcomip
jmp
fsubr
cmp
cwde
fbstp
ds
(bad)
(bad)
frstor
rcl
nop
aas
std
dec
pushf
and
mov
rcr
std
or
jmp
inc
std
mov
xlat
adc
cmc
shr
gs
pop
inc
aas
std
(bad)
call
(bad)
lahf
xor
add
fidiv
out
sub
jg
sar
mov
mov
cmp
test
neg
sahf
adc
(bad)
addr16
adc
cli
mov
pop
xchg
repz
cmp
(bad)
jmp
ret
imul
xlat
jb
movs
clc
dec
add
sub
jp
mov
fisubr
test
ja
retf
sub
bound
inc
mov
mov
dec
daa
in
push
(bad)
cmp
pop
imul
stos
jle
loope
jnp
pop
cli
inc
pusha
jbe
sbb
pop
pop
push
nop
(bad)
(bad)
push
inc
xchg
(bad)
mov
leave
mov
add
sti
sbb
inc
mov
out
nop
cmp
xchg
xor
sub
push
dec
(bad)
inc
nop
(bad)
jmp
or
aas
mov
mov
inc
(bad)
mov
scas
cld
ds
(bad)
jg
lahf
ins
(bad)
jns
pop
lods
cwde
outs
je
stos
lods
inc
lahf
fadd
ds
(bad)
jmp
mov
clc
js
in
ret
xchg
in
(bad)
lahf
(bad)
stos
iret
test
pop
(bad)
(bad)
(bad)
push
mov
(bad)
js
clc
push
mov
scas
xchg
mov
enter
ficom
mov
sbb
stos
dec
scas
dec
cmps
jne
out
xlat
mov
mov
(bad)
lods
clc
aad
mov
in
stc
sti
push
call
das
dec
in
js
push
jne
call
sbb
sbb
out
mov
pop
mov
push
pop
lods
mov
push
jl
sub
push
je
adc
(bad)
(bad)
out
imul
repnz
(bad)
jns
jp
cmp
retf
outs
dec
pop
xchg
sbb
cli
mov
(bad)
mov
lods
(bad)
jmp
fisubr
jle
repnz
sub
sahf
aad
jl
push
xchg
clc
push
jmp
sar
(bad)
jmp
pop
into
aas
js
imul
repz
aam
mov
xchg
repnz
in
(bad)
mov
or
pop
nop
repz
stos
and
ds
(bad)
push
call
sub
xchg
pushf
aaa
sub
jmp
stc
jmp
xchg
lahf
scas
out
(bad)
xchg
stos
jns
(bad)
cmc
xchg
sbb
fcomip
(bad)
jg
pop
popa
scas
push
ins
inc
aad
stc
pop
dec
mov
bnd
les
jg
je
jmp
call
mov
pop
xor
inc
mov
(bad)
je
jmp
in
mov
and
pop
rcl
call
call
xchg
cmp
or
out
(bad)
(bad)
(bad)
call
inc
cld
cmp
xchg
xor
test
retf
test
mov
(bad)
dec
pop
push
adc
mov
(bad)
jmp
sub
mov
movs
xor
test
pop
mov
out
mov
mov
out
mov
pop
cli
jmp
sub
sbb
pop
hlt
call
add
inc
and
sub
fsubr
jle
lods
neg
cmp
(bad)
(bad)
in
xlat
loopne
push
dec
movs
inc
fdivr
pop
jecxz
push
shr
retf
repz
(bad)
outs
push
outs
iret
mov
into
outs
cmc
mov
push
mov
sahf
and
add
int
mov
and
shr
rol
xor
cs
(bad)
inc
shr
and
lea
jno
jb
pop
int
push
dec
mov
movs
pop
jo
es
popf
test
retf
jg
inc
cmp
or
das
mov
hlt
leave
jmp
ret
adc
aad
adc
cmp
repnz
jle
test
dec
in
sti
jnp
dec
hlt
imul
call
pop
ret
cmp
(bad)
call
loopne
jl
jp
push
sbb
mov
cld
ret
cld
aas
jmp
(bad)
(bad)
(bad)
call
test
mov
sbb
sub
nop
pop
jmp
mov
ficom
cmc
dec
pop
cmp
add
push
call
ud0
popf
pop
sti
stos
out
lods
sbb
xchg
(bad)
(bad)
jmp
mov
jmp
ficom
repnz
sub
pop
scas
fisub
imul
fbstp
and
push
stos
cmc
push
add
fld
pop
lods
mov
jmp
fcom
sub
adc
pop
js
out
int
(bad)
(bad)
(bad)
push
pop
aam
cmps
inc
xchg
out
push
fidiv
(bad)
sar
call
cli
cmp
jecxz
cmp
lods
cmps
xlat
call
mov
jb
sti
or
xchg
mov
rcl
push
imul
call
ins
(bad)
or
push
mov
sbb
jmp
(bad)
push
mov
movs
shl
in
mov
fidivr
and
mov
dec
shr
mov
sti
std
cli
int3
stos
jmp
push
push
and
(bad)
dec
jl
into
cs
jecxz
add
loop
adc
mov
out
pop
xor
or
ins
(bad)
mov
out
sbb
call
fbstp
(bad)
call
jnp
test
xchg
inc
push
out
add
in
int3
mov
mov
pop
lea
mov
rcr
cmps
xchg
in
ja
push
xchg
(bad)
mov
test
mov
or
cmps
jmp
test
leave
repz
mov
jecxz
jp
ds
daa
js
(bad)
(bad)
(bad)
(bad)
cld
sbb
cld
cs
std
mov
pcmpeqw
es
enter
pop
mov
jg
(bad)
mov
ds
mov
dec
adc
idiv
pop
or
hlt
adc
jmp
jg
cmp
jl
js
repnz
lods
mov
loope
(bad)
(bad)
(bad)
(bad)
(bad)
cwde
in
adc
dec
sbb
xlat
sar
sar
(bad)
mov
dec
add
mov
enter
dec
push
ins
scas
(bad)
sub
push
inc
jl
mov
scas
xor
pushf
into
mov
cmp
(bad)
(bad)
inc
cmc
inc
add
mov
push
scas
pop
inc
jmp
adc
lds
pushf
push
mov
(bad)
imul
mov
arpl
mov
bound
push
pop
pop
mov
in
cli
xchg
mov
(bad)
(bad)
(bad)
(bad)
fist
sbb
ss
arpl
push
clc
(bad)
movs
mov
push
mov
out
or
xor
popa
outs
in
cmps
das
stos
lock
(bad)
jg
popa
xchg
jp
out
dec
xchg
dec
ds
fild
pop
fidivr
mov
cmp
sbb
mov
test
mov
into
dec
popf
outs
mov
std
xchg
fwait
clc
mov
mov
dec
outs
and
add
(bad)
(bad)
mov
dec
std
movs
pop
xlat
ror
pop
cmp
jmp
(bad)
cdq
clc
(bad)
inc
mov
fldenv
jmp
ja
jnp
dec
and
(bad)
rol
add
jp
and
fwait
push
sub
push
hlt
mov
sahf
adc
(bad)
dec
sub
(bad)
push
(bad)
es
xchg
jmp
dec
xlat
xor
(bad)
jmp
frstor
out
std
nop
lods
lods
in
dec
ror
mov
cmp
(bad)
(bad)
(bad)
(bad)
out
rcr
hlt
nop
jg
aam
repnz
push
cld
dec
xor
int3
dec
retf
sub
jmp
call
fwait
in
mov
cmp
nop
repz
stos
pop
stc
push
adc
mov
sub
pop
call
icebp
sbb
push
scas
sub
inc
cmc
xor
sar
dec
icebp
or
jle
mov
das
repnz
pushf
push
(bad)
(bad)
call
push
cmp
ins
test
xchg
lahf
jg
stc
mov
ror
xor
out
pop
pop
cli
(bad)
(bad)
jmp
dec
jne
mov
retf
jns
sbb
leave
adc
pop
rcl
pop
fnsave
lock
inc
mov
loop
push
(bad)
call
lock
mov
scas
mov
pop
clc
sub
dec
imul
(bad)
jmp
adc
mov
dec
jne
jns
jne
ror
les
or
lock
lods
mov
cld
outs
cmp
mov
jg
or
clc
push
lods
js
mov
(bad)
(bad)
(bad)
jmp
adc
loopne
jbe
cmc
call
loopne
daa
or
pusha
ds
call
and
adc
mov
inc
or
push
mov
icebp
(bad)
jmp
pusha
test
shr
sahf
ja
sub
xor
inc
sar
mov
in
cmp
jnp
daa
mov
xor
sbb
retf
call
pop
mov
std
fadd
mov
jne
cmp
(bad)
adc
retf
loope
sar
fmul
std
mov
add
jne
hlt
(bad)
push
mov
fisub
pop
sti
mov
lea
jp
retf
cmc
and
push
push
pop
shr
or
push
(bad)
(bad)
inc
add
lahf
push
pop
call
dec
and
jb
sbb
xor
adc
xchg
fild
xlat
(bad)
jle
ja
adc
test
mov
(bad)
in
aaa
cs
dec
xchg
jmp
and
sub
pushf
pop
cmc
xchg
je
adc
(bad)
mov
mov
call
out
sub
jns
loope
(bad)
(bad)
(bad)
call
in
cmp
test
test
push
outs
fistp
in
mov
xor
xchg
call
fs
fiadd
cld
(bad)
call
cli
mov
pusha
push
sahf
pop
mov
addr16
jmp
dec
mov
cmc
std
inc
inc
dec
repz
xchg
sub
sar
(bad)
es
lods
sub
(bad)
(bad)
dec
int3
movs
jbe
in
(bad)
mov
mov
mov
mov
pop
sub
mov
(bad)
bnd
shl
mov
shr
or
dec
clc
(bad)
dec
aam
inc
mov
jge
jp
or
stos
into
test
(bad)
jmp
jle
lahf
repnz
test
into
add
imul
(bad)
dec
xchg
lods
stos
pop
mov
lds
mov
into
push
inc
adc
lock
in
(bad)
inc
cmp
or
jo
pusha
pop
sbb
xchg
nop
shl
popa
in
frstor
shld
pop
dec
out
cmp
(bad)
(bad)
push
push
je
in
xor
das
fistp
sbb
xor
out
mov
test
jns
jmp
leave
scas
icebp
cld
and
aas
xchg
xlat
adc
aad
ret
out
xor
shl
push
aad
inc
lea
sahf
stos
ret
movs
aaa
std
adc
(bad)
fs
rol
inc
shl
mov
mov
push
sbb
lock
jg
std
ja
add
(bad)
(bad)
aas
arpl
not
jbe
jnp
sub
mov
mov
mov
xlat
lea
inc
sbb
(bad)
(bad)
push
adc
jne
jno
out
fidivr
int
inc
scas
inc
jno
sti
movs
mov
movntps
into
enter
loop
ret
hlt
push
int3
mov
jmp
pop
xor
(bad)
cmp
mov
sub
or
fwait
mov
mov
mov
ficom
dec
call
jg
leave
sbb
ds
add
(bad)
(bad)
(bad)
call
fisttp
cs
dec
jl
mov
pop
aas
outs
mov
inc
mov
fistp
sbb
call
jge
out
popa
int
jle
retf
adc
imul
push
fisttp
dec
mov
iret
mov
inc
mov
call
sahf
mov
fild
sub
xor
or
in
pmulhw
mov
retf
out
dec
cli
fsubr
mov
scas
cmp
cmp
ds
(bad)
(bad)
jmp
push
mov
sahf
adc
pushf
das
data16
fldenv
ds
retf
lock
xchg
mov
sub
mov
cld
or
xchg
mov
sar
cmp
data16
sbb
(bad)
(bad)
dec
mov
bound
not
mov
call
(bad)
clc
adc
sub
(bad)
(bad)
(bad)
inc
adc
je
lock
and
imul
das
aad
jns
repz
repz
aaa
xchg
(bad)
(bad)
(bad)
jmp
(bad)
lods
xor
lods
add
cs
or
push
in
dec
mov
icebp
cli
and
icebp
repz
xor
xlat
jne
jb
fs
and
popa
aas
add
(bad)
out
inc
cmp
lods
rol
cmp
(bad)
icebp
mov
and
repnz
mov
icebp
retf
mov
push
fdiv
(bad)
(bad)
(bad)
dec
push
mov
out
adc
sbb
(bad)
retf
jns
mov
out
(bad)
(bad)
(bad)
(bad)
js
sbb
cmp
scas
clc
mov
jno
test
jl
jno
stos
enter
rcl
or
scas
adc
pop
mov
scas
adc
ret
loop
pushf
iret
and
push
loopne
test
mov
fidiv
push
or
call
xchg
shr
aam
mov
pushf
mov
ja
aad
or
out
xor
cs
(bad)
(bad)
dec
adc
ja
bound
nop
(bad)
xchg
test
push
and
(bad)
(bad)
(bad)
(bad)
ds
jno
pop
cmps
or
pushf
xchg
loope
and
add
dec
nop
aas
sbb
loopne
movs
pop
jecxz
(bad)
jmp
pusha
adc
loopne
fwait
ds
(bad)
daa
test
mov
(bad)
(bad)
mov
lahf
cmp
test
(bad)
fisttp
lahf
sub
lock
xchg
cli
(bad)
(bad)
dec
out
fdivr
iret
jg
jbe
pop
jecxz
popf
aaa
mov
jnp
sbb
scas
fxch
mov
push
push
jno
in
leave
jne
hlt
jg
add
lahf
data16
mov
js
(bad)
push
aaa
cmps
cmps
out
fwait
inc
pop
add
pop
xlat
mov
(bad)
call
push
enter
xchg
add
pop
cmp
sti
(bad)
outs
jle
add
call
mov
mov
stos
and
(bad)
(bad)
(bad)
fbld
xchg
push
mov
cmp
ror
ja
xchg
dec
xor
inc
pop
push
not
mov
loopne
inc
cmp
leave
push
xchg
lock
repnz
inc
and
mov
inc
pop
shr
(bad)
xor
addr16
jecxz
ret
ds
xlat
fdivr
lds
iret
jl
popf
les
loope
(bad)
(bad)
(bad)
jg
xor
pop
icebp
hlt
jne
bnd
loope
loope
stos
sub
push
xor
cmps
frstor
loop
(bad)
and
jmp
cli
inc
aam
loopne
call
in
jae
mov
mov
(bad)
(bad)
(bad)
call
cli
clc
mov
dec
mov
add
inc
sahf
int
mov
outs
test
mov
cld
test
shr
lahf
pop
(bad)
(bad)
push
dec
jge
out
jmp
pop
out
push
push
enter
xor
(bad)
inc
mov
(bad)
loope
pop
lods
push
fdiv
sbb
sub
or
dec
mov
sbb
ret
add
pop
and
push
out
sbb
ins
cwde
je
(bad)
(bad)
call
pop
adc
mov
pminsw
or
xchg
test
in
repnz
fstp
cwde
(bad)
(bad)
push
sahf
pop
jg
jl
adc
cmp
shr
sar
mov
jmp
fidivr
psrlq
outs
mov
pop
mul
cs
shl
js
push
das
fwait
and
fisubr
loopne
mov
mov
icebp
sub
jns
out
xchg
jecxz
xor
out
inc
ds
iret
inc
jge
and
jmp
adc
or
jp
outs
inc
cli
adc
push
and
xchg
xchg
sbb
pop
je
jns
into
adc
enter
lock
fimul
setg
mov
xlat
xor
test
(bad)
push
jle
cmp
jne
idiv
pushf
outs
(bad)
push
fs
call
loopne
lock
jno
out
dec
inc
add
inc
clc
loope
ret
jnp
rol
into
addr16
(bad)
push
out
in
push
jge
lods
iret
sub
push
jb
mov
je
(bad)
(bad)
jg
cmps
xchg
jb
inc
jg
not
xchg
hlt
inc
lods
fmul
push
push
lods
(bad)
jmp
adc
adc
(bad)
pop
adc
adc
lea
mov
sti
dec
fmul
inc
call
shr
call
cmp
fnsave
sbb
(bad)
popa
mov
pop
jbe
jecxz
mov
out
cli
push
rol
js
push
or
sar
int
cmp
adc
mov
sub
push
push
stos
icebp
add
dec
mov
test
add
fild
popa
out
mov
arpl
xchg
cmp
cmp
dec
push
cli
inc
inc
lds
call
mov
fmul
pop
and
inc
inc
fbstp
and
pushf
cmps
push
inc
cmp
aas
or
mov
jo
in
mov
fmul
lods
mov
(bad)
call
xor
(bad)
sti
lds
jno
je
dec
or
adc
mov
loop
sbb
scas
(bad)
cmps
fdiv
or
mov
pushf
mov
xchg
xchg
adc
lds
fsub
rcl
jmp
loope
(bad)
(bad)
jg
enter
stos
aad
cmp
jmp
mov
or
(bad)
(bad)
dec
jl
cmp
test
ret
adc
add
fwait
inc
cmp
mov
inc
jmp
shr
pop
pop
aad
std
pop
fucomi
ins
pop
imul
repz
and
cld
lahf
(bad)
and
(bad)
(bad)
call
mov
sbb
pmulhuw
and
mov
(bad)
jns
aas
dec
aam
(bad)
(bad)
fnstsw
sti
mov
pop
leave
imul
les
test
cli
out
cld
in
(bad)
(bad)
jmp
pop
push
gs
cld
(bad)
movs
imul
jg
mov
mov
dec
enter
(bad)
mov
lock
cli
test
clc
sahf
cld
mov
gs
ret
push
mov
pop
pop
int
(bad)
jmp
mov
push
ret
xor
lahf
std
scas
(bad)
or
cmps
das
test
call
aas
std
push
jmp
mov
call
outs
xchg
std
aaa
cld
out
sbb
push
shr
jne
mul
xchg
(bad)
jno
dec
sub
aas
xlat
mov
fst
loop
pushf
and
push
mov
(bad)
call
fild
stos
jp
jae
sub
mov
jle
(bad)
jmp
popf
jb
push
cli
enter
(bad)
shl
push
jne
fstp
addr16
lea
lods
add
dec
rcr
das
scas
lock
cmp
bound
pop
xchg
out
(bad)
mov
inc
mov
cmc
fidivr
(bad)
(bad)
(bad)
out
pop
out
dec
aas
pop
ds
sub
mov
dec
loop
pop
in
xlat
sub
bound
mov
int
push
dec
jns
mov
nop
(bad)
push
push
xchg
test
dec
dec
mov
inc
jmp
lahf
push
js
ins
jns
cmp
xchg
(bad)
fbld
das
xor
fbstp
dec
out
dec
mov
mov
loopne
mov
shl
pop
inc
(bad)
mov
mov
mov
jmp
arpl
(bad)
(bad)
(bad)
dec
jno
in
call
stc
ins
leave
test
pushf
(bad)
fwait
jp
fidiv
fistp
call
out
mov
and
xor
iret
fs
jno
mov
jmp
pop
test
das
add
ds
sbb
add
fidiv
scas
sub
(bad)
pop
fucom
add
or
ds
cli
(bad)
mov
add
cmp
mov
xchg
dec
adc
fbstp
ins
clc
dec
shr
(bad)
mov
fldenv
or
or
iret
test
dec
in
mov
push
data16
mov
(bad)
or
add
cmc
inc
neg
mov
jle
popa
shl
pop
clc
(bad)
(bad)
call
test
sbb
pop
and
mov
pop
add
mov
jmp
mov
cs
addr16
rol
add
aaa
push
scas
jae
cs
call
and
ret
or
sar
xor
mov
(bad)
jmp
leave
and
jns
call
inc
shl
(bad)
(bad)
call
push
or
inc
mov
jge
inc
ficom
je
loope
dec
das
jmp
shl
jae
popf
push
cld
dec
mov
mov
imul
leave
or
test
das
(bad)
out
push
(bad)
adc
cmps
jle
scas
jl
xchg
or
int
jle
mov
dec
jns
cmp
sbb
jmp
in
test
popa
(bad)
(bad)
(bad)
call
lods
call
aad
ds
mov
ret
add
jecxz
(bad)
push
adc
dec
ja
ss
int3
push
mov
enter
adc
(bad)
fisttp
outs
pop
in
dec
add
retf
push
(bad)
(bad)
(bad)
mov
movs
adc
push
das
jbe
clc
ins
or
scas
xchg
sub
cmc
mov
push
adc
xor
dec
mov
(bad)
(bad)
fild
lahf
add
pop
sbb
jmp
or
into
out
ret
out
(bad)
sub
(bad)
(bad)
push
xchg
std
or
inc
xchg
pop
jb
mov
xor
fstp
push
inc
mov
in
mov
cld
(bad)
in
gs
xchg
dec
scas
or
sub
cmp
(bad)
(bad)
mov
pop
dec
sub
rcr
test
jnp
inc
mov
cld
(bad)
inc
test
or
cmp
pop
cld
xchg
or
xchg
loopne
sti
inc
cmps
jge
(bad)
(bad)
jg
scas
mov
arpl
popf
add
outs
or
sbb
cmps
push
call
jmp
(bad)
sub
pop
jb
fwait
nop
fisub
and
xchg
mov
xor
pop
retf
ret
sar
inc
lock
and
and
mov
aaa
adc
cmp
push
je
fld
(bad)
jmp
xor
adc
popa
push
rcl
call
push
les
add
sub
clc
fimul
cmp
test
aaa
add
xchg
out
sub
pop
xor
pop
adc
push
jno
push
sti
mov
cld
(bad)
jmp
test
pop
iret
fsubr
lahf
dec
inc
dec
jle
xlat
(bad)
inc
mov
mov
gs
cli
mov
xchg
cmp
jo
pushf
ret
pop
pop
xchg
xlat
repz
sbb
sbb
mov
pushf
or
(bad)
(bad)
mov
cli
sub
cmp
mov
test
imul
ja
(bad)
jmp
es
out
lods
push
pop
cli
cmp
loopne
xchg
cld
cmp
lahf
test
js
cmc
(bad)
call
adc
and
xchg
pop
push
aas
inc
jmp
test
idiv
(bad)
jmp
mov
mov
push
test
imul
or
in
push
jno
pop
sbb
(bad)
(bad)
(bad)
(bad)
sub
bnd
stos
cwde
fcmovne
inc
push
daa
addr16
push
pop
mov
aas
inc
mov
xchg
jmp
(bad)
(bad)
(bad)
inc
pop
dec
cmp
mov
jg
fwait
in
cmp
sub
into
xchg
pop
jb
mov
mov
(bad)
jmp
ficomp
sub
jge
inc
outs
fwait
mov
dec
cmps
sub
push
out
js
(bad)
mov
test
fs
lock
stc
inc
inc
into
dec
dec
pop
stc
mov
jmp
pop
in
pop
clc
pusha
dec
jns
lock
ficomp
sub
push
dec
mov
mov
(bad)
inc
mov
aas
mov
cmp
inc
loop
(bad)
(bad)
(bad)
(bad)
jg
pop
scas
in
fwait
aam
(bad)
ins
inc
adc
call
in
aam
add
data16
js
(bad)
jg
mov
jae
ror
push
jae
out
stos
rcl
xor
xor
push
mov
sbb
push
jbe
cmc
loop
(bad)
data16
(bad)
(bad)
jg
fisubr
lahf
lea
and
out
pop
popa
lahf
imul
sahf
mov
inc
div
imul
fs
ret
cmps
lock
mov
mov
fwait
jne
(bad)
(bad)
(bad)
(bad)
in
xor
push
scas
stc
mov
sbb
xchg
out
mov
jl
add
es
xor
push
nop
repz
and
in
pop
ret
mov
xchg
xchg
cld
rcr
pop
mov
pop
icebp
mov
outs
movs
pop
movs
hlt
icebp
push
push
aas
(bad)
dec
test
aam
hlt
jge
repz
mov
(bad)
(bad)
jge
sbb
cmp
cmp
jmp
outs
sub
call
neg
mov
xchg
(bad)
(bad)
(bad)
mov
mov
push
lea
xlat
jmp
add
aas
dec
cli
(bad)
cmps
scas
mov
xlat
inc
xlat
popa
dec
enter
test
sbb
adc
cmp
add
out
dec
jmp
hlt
outs
dec
rcl
movs
pop
or
inc
(bad)
das
cli
ds
mov
cld
jg
jmp
mov
xor
push
jmp
push
scas
movs
mul
pop
ja
scas
and
lds
outs
mov
cmp
mov
inc
jge
and
jne
adc
pop
daa
lods
jl
cmp
cmc
test
cli
jl
outs
fcomip
mov
jmp
call
push
cmp
(bad)
in
sbb
mov
inc
int3
inc
ja
push
add
pushf
cmp
xor
mov
cmps
call
ror
mov
test
jmp
sbb
stc
sub
call
outs
aam
jmp
adc
rol
jle
int
or
cmp
sahf
(bad)
(bad)
cmp
mov
ds
jae
or
cmps
call
dec
outs
je
cmp
mov
jae
jp
xor
(bad)
(bad)
(bad)
jmp
mov
and
cmps
mov
add
sub
clc
mov
(bad)
out
or
inc
scas
retf
fsub
pusha
mov
retf
stos
sahf
pop
std
iret
(bad)
(bad)
call
je
sub
mov
icebp
aaa
cmps
stc
not
int3
adc
clc
jne
sbb
aam
xor
(bad)
(bad)
inc
int3
mov
dec
inc
and
aaa
fimul
iret
xor
mov
loop
mov
(bad)
inc
daa
and
movs
das
gs
clc
cmc
adc
dec
cs
pop
xor
lods
(bad)
call
lea
outs
xchg
or
jnp
mov
fcomip
jg
push
push
jno
test
shl
les
pop
xchg
dec
call
mov
repnz
pop
cmp
cmp
loopne
dec
rcr
mov
movs
xchg
enter
xor
dec
nop
js
shl
ss
cmp
mov
ja
fwait
and
push
jmp
bound
pop
push
push
push
je
jmp
xor
jecxz
jnp
retf
arpl
push
repz
(bad)
out
stc
or
xchg
je
clc
mov
(bad)
(bad)
mov
inc
jl
fldz
cmp
adc
push
jmp
and
out
jae
int
or
pop
nop
pop
ror
in
push
popf
lock
pop
in
sub
out
sbb
cmps
jmp
xor
jg
rol
jl
int3
xchg
dec
or
(bad)
jmp
pop
(bad)
sti
dec
stos
leave
jecxz
add
ja
std
mov
mov
rcr
sub
repnz
retw
jne
adc
leave
je
icebp
cmps
fadd
(bad)
(bad)
(bad)
(bad)
in
inc
sbb
dec
lock
mov
cmp
pop
ins
jns
aaa
pop
jmp
push
mov
call
(bad)
sbb
not
and
repz
scas
cli
push
(bad)
(bad)
(bad)
jg
stos
test
int
scas
or
xor
cmp
aas
push
scas
mov
stos
add
jg
push
in
nop
inc
cmp
push
je
or
pop
add
(bad)
(bad)
mov
inc
test
mov
sbb
jmp
push
mov
out
sbb
pcmpeqd
xchg
jp
movs
jge
jns
mov
add
pop
or
inc
mov
into
pop
hlt
jmp
mov
push
out
mov
int3
cmc
cmc
adc
adc
xchg
ja
sub
pop
imul
(bad)
call
sub
jmp
jb
dec
dec
scas
iret
aam
ret
lods
pop
jno
call
cmc
or
jns
fdivrp
shl
mov
mov
inc
push
iret
mov
adc
call
out
popa
push
jge
xchg
mov
(bad)
jno
dec
jmp
leave
mov
rcl
cmps
enter
std
(bad)
inc
fld
cld
pop
popf
dec
dec
dec
mov
adc
xor
data16
push
int3
dec
aaa
xor
repz
inc
mov
cmp
shl
in
and
clc
fmul
pop
and
pop
mov
lahf
jg
jo
into
and
sar
sub
outs
sub
shl
ins
mov
mov
pop
mov
lock
pop
pop
sub
ins
ins
and
in
jae
jl
xchg
outs
icebp
(bad)
jmp
cli
jmp
inc
shr
push
push
rcpps
xchg
js
jge
call
cld
(bad)
mov
aas
inc
fucomp
fidivr
movs
pushf
push
mov
ins
xor
xchg
(bad)
push
loop
mov
jge
cmc
into
imul
scas
push
(bad)
push
xchg
mov
out
adc
pop
xchg
in
inc
pop
jae
(bad)
out
cli
sbb
loope
scas
sbb
stos
es
(bad)
(bad)
jg
loop
inc
fdiv
push
stc
cmp
pop
adc
push
jne
les
jae
or
outs
cli
xchg
xchg
jecxz
out
ret
(bad)
out
adc
push
mov
mov
lds
lock
loop
mov
pop
cli
call
imul
and
sahf
inc
pop
xchg
jecxz
addr16
cmp
add
sbb
mov
cmp
cwde
dec
cdq
retf
xchg
cli
jmp
and
(bad)
in
sahf
ret
in
jg
jne
sti
sahf
jnp
inc
adc
dec
cdq
cld
pop
int3
fisttp
pop
sbb
(bad)
clc
sub
dec
shl
mov
out
xchg
in
mov
cmp
call
cmp
pop
rcr
xlat
(bad)
ins
scas
enter
cmp
jns
mov
(bad)
(bad)
(bad)
jmp
mov
clc
aas
mov
add
xchg
mov
push
in
loope
shl
cli
pop
lods
sbb
jl
jge
call
fs
rcr
push
jl
sbb
ret
mov
icebp
(bad)
cmp
popa
inc
or
pop
rol
or
(bad)
push
data16
mov
fs
cdq
(bad)
stos
aaa
clc
and
js
jge
in
sub
(bad)
(bad)
inc
aam
bound
daa
cmp
aas
jg
fsubr
jno
inc
rcr
std
cmp
mov
(bad)
dec
adc
std
or
inc
sub
out
int
mov
pop
sub
mov
pop
xchg
pop
in
mov
jae
(bad)
(bad)
inc
dec
pop
xlat
fsubr
sahf
jle
sub
mov
mov
xchg
adc
test
dec
or
outs
dec
and
xlat
daa
lahf
arpl
fcomp
and
mov
cmp
pop
outs
mov
fld
call
xchg
cmc
(bad)
jg
jno
arpl
push
cmp
repz
jg
mov
inc
fidivr
outs
div
cld
(bad)
call
(bad)
js
retf
out
into
(bad)
jns
(bad)
jg
adc
mov
dec
leave
rcl
das
and
dec
jmp
pop
push
ror
in
call
dec
inc
outs
test
xchg
out
xchg
lods
je
jl
mov
imul
pop
outs
push
fwait
push
jo
mov
call
xchg
(bad)
pop
aas
test
in
dec
pop
jle
out
cli
pop
loopne
stc
lock
jns
in
push
in
movhps
dec
sub
dec
pop
retf
dec
push
inc
ds
(bad)
outs
cli
fdiv
push
adc
ds
(bad)
call
sub
stos
cs
neg
sbb
iret
sbb
ss
fmul
imul
mov
outs
test
or
sbb
cmps
mov
rol
jg
sub
jle
iret
js
clc
and
push
sahf
inc
(bad)
mov
test
mov
pop
sub
fdivr
(bad)
(bad)
jmp
pop
push
hlt
cmp
jne
iret
retf
pusha
push
cmp
mov
cli
das
clc
call
xchg
inc
retf
jne
sub
mov
push
push
jmp
push
jbe
ja
adc
xchg
aas
mov
imul
add
and
(bad)
(bad)
jmp
push
mov
loopne
mov
shl
test
pop
stos
mov
add
(bad)
(bad)
(bad)
call
in
(bad)
cmp
add
ins
repnz
mov
out
ret
pop
sbb
es
(bad)
(bad)
(bad)
jmp
ficomp
mov
cmps
add
loope
cld
dec
arpl
cmps
jmp
loopne
pop
jns
call
mov
sahf
movs
es
fsub
(bad)
(bad)
jmp
js
stc
xor
out
aas
jmp
jg
out
int3
sub
call
mov
and
scas
int
xchg
aas
xor
inc
or
fbstp
addr16
cmp
and
xchg
mov
jne
fwait
cwde
mov
xlat
(bad)
(bad)
(bad)
mov
imul
jne
(bad)
mov
push
mov
sti
(bad)
dec
push
jo
enter
(bad)
inc
fnsave
jmp
out
ins
aad
lahf
movs
fcom
mov
jmp
push
mov
aam
xor
jmp
arpl
mov
cmc
push
sub
std
jmp
jnp
enter
pop
sub
pushf
mov
std
dec
(bad)
jge
sar
lock
cwde
mov
dec
mov
mov
xor
shl
or
push
cmc
sbb
stc
popa
test
in
test
jmp
adc
mov
sbb
adc
scas
mov
jmp
fst
(bad)
(bad)
(bad)
jmp
scas
pop
test
xor
inc
mov
xor
aad
les
push
(bad)
(bad)
call
pop
cmp
aad
xor
fnstcw
xor
rcl
dec
(bad)
(bad)
out
cli
nop
lahf
mov
idiv
sahf
sbb
es
xchg
rcl
cmp
inc
call
xor
cmp
push
xlat
popf
and
add
lds
repnz
push
call
add
outs
imul
jne
jge
mov
(bad)
push
js
(bad)
jae
shr
mov
cmp
push
call
jl
jmp
(bad)
in
jmp
or
(bad)
adc
sbb
aam
(bad)
(bad)
mov
ror
mov
or
jge
rcr
xchg
add
stos
xor
mov
ret
push
pushf
imul
loopne
out
ins
out
(bad)
(bad)
(bad)
(bad)
jmp
mov
pushf
in
dec
test
pop
hlt
je
push
out
sbb
std
pop
jns
jo
add
mov
cmc
dec
popf
push
(bad)
jmp
ins
(bad)
cld
aad
out
jmp
sahf
mov
out
clc
shr
push
clc
(bad)
(bad)
call
inc
lods
out
lds
int
pop
in
ja
out
push
ret
pop
sbb
and
(bad)
mov
aaa
(bad)
jge
ds
add
push
repz
ds
mov
outs
jno
dec
jno
fwait
mov
ss
mov
icebp
std
loope
mov
adc
lods
pop
lock
and
pop
sub
mov
fnstsw
lods
(bad)
neg
inc
jno
dec
push
ret
dec
std
fwait
jle
pop
adc
das
jns
(bad)
(bad)
(bad)
(bad)
push
cmp
ret
aas
sbb
and
icebp
arpl
pop
outs
iret
fnsave
mov
add
lea
(bad)
dec
std
clc
cs
out
jno
xor
bound
adc
pop
lock
push
daa
call
(bad)
(bad)
jmp
in
scas
hlt
ror
into
or
cld
sub
loop
dec
ds
clc
inc
pop
jmp
lock
mov
jl
js
push
xor
xchg
pop
inc
test
fidiv
sub
ja
sar
(bad)
pop
push
loopne
ins
fnstsw
(bad)
jg
cmp
cmp
push
mov
hlt
cmp
mov
les
fcomp
shl
not
pop
leave
fsubr
(bad)
dec
clc
test
fcomp
pop
xchg
jmp
push
sub
adc
mov
ins
leave
sub
rol
fwait
pop
jg
dec
mov
dec
jmp
push
and
dec
lahf
cld
jmp
dec
pop
jl
and
int
dec
adc
(bad)
mov
cmps
(bad)
(bad)
(bad)
(bad)
out
je
ret
dec
(bad)
sub
ins
cli
mov
out
jmp
jb
std
(bad)
(bad)
push
mov
clc
std
jecxz
scas
daa
or
xchg
push
scas
das
in
clc
add
call
sbb
daa
(bad)
inc
push
xor
mov
fisubr
(bad)
dec
stos
dec
stc
and
(bad)
pop
cld
inc
cmc
popf
jp
jbe
jge
jecxz
xor
jae
out
sub
loop
(bad)
(bad)
(bad)
jmp
cmp
cli
xchg
inc
mov
movs
push
out
(bad)
jmp
xchg
xor
stos
sub
out
cmp
cmp
hlt
and
std
xchg
aaa
push
push
(bad)
call
ret
(bad)
inc
xor
mov
jnp
cmp
add
or
dec
cmp
movs
ret
adc
(bad)
(bad)
(bad)
call
or
or
gs
xchg
jg
jp
jl
xlat
in
mov
(bad)
sti
fisubr
add
sar
inc
push
(bad)
fild
push
xor
jg
xor
loope
icebp
das
mov
(bad)
(bad)
jmp
dec
movs
and
les
xchg
jecxz
xchg
sub
lock
fdivr
and
xlat
iret
mov
dec
(bad)
pop
adc
fwait
cmp
nop
(bad)
jg
jmp
jg
cwde
jo
cs
pusha
dec
and
sbb
pop
and
(bad)
(bad)
(bad)
inc
cmc
mov
jp
xor
retf
retf
fwait
rcr
push
ror
cs
(bad)
(bad)
(bad)
dec
int3
adc
dec
ret
(bad)
sbb
dec
mov
jno
mov
sbb
shl
mov
(bad)
(bad)
cld
lds
retf
sbb
mov
movs
jmp
lahf
scas
mov
shl
mov
scas
push
cmps
std
mov
ss
aas
stos
stos
mov
les
cmp
ins
push
push
(bad)
jg
pusha
inc
test
fsubr
mov
(bad)
(bad)
call
adc
ins
push
cmp
sahf
mov
scas
aad
out
stc
sti
sar
xchg
adc
jae
jb
jp
(bad)
(bad)
jmp
hlt
inc
cmp
mov
out
rcr
or
cli
sbb
pop
pop
cmp
int
stc
cmp
in
sub
sub
movs
pushf
je
dec
leave
imul
pop
sti
sub
jmp
pop
stc
mul
test
sub
inc
sti
repz
pop
or
fcomip
push
push
add
add
and
(bad)
inc
aas
pop
mov
push
js
scas
mov
scas
jl
jl
std
jmp
cmps
std
mov
ret
inc
mov
cmps
push
xor
mov
leave
jb
loop
cld
stos
repnz
push
xchg
in
sbb
outs
js
inc
cmp
movs
out
shr
mov
iret
mov
add
jg
xor
(bad)
ffreep
mov
(bad)
mov
pop
je
(bad)
call
movq
stc
or
(bad)
in
pop
ret
pop
outs
and
(bad)
dec
mov
popf
fsubr
mov
stos
ret
add
cmp
and
(bad)
cld
into
pushf
cs
icebp
cmc
xchg
icebp
ret
jl
in
out
mov
pusha
repz
mov
rol
(bad)
jg
xchg
mov
pop
les
or
cmp
adc
pop
mov
xor
clc
pop
std
(bad)
(bad)
call
call
out
adc
lods
xor
scas
mov
jns
lds
std
sbb
push
rol
cmp
push
stos
aam
outs
cli
(bad)
(bad)
jmp
dec
sbb
sub
pop
cdq
fnstcw
test
jae
scas
pop
jl
sub
(bad)
(bad)
(bad)
out
out
(bad)
jo
xchg
rcl
sbb
outs
or
ds
fild
imul
adc
or
(bad)
cmp
cmps
repnz
mov
push
sar
jg
je
in
sbb
scas
fnsave
ds
out
ja
lods
cdq
add
xor
dec
loopne
push
int3
xor
and
out
xor
xchg
(bad)
pop
std
xchg
mov
ja
mov
jae
pop
fstp
mov
data16
sbb
fild
out
shr
clc
ins
je
movs
sub
(bad)
inc
js
inc
mov
jne
repnz
inc
lea
cmc
push
mov
(bad)
idiv
(bad)
(bad)
(bad)
call
jg
or
mov
(bad)
(bad)
fs
iret
repz
js
sub
cmps
test
loopne
pop
mov
(bad)
pop
inc
and
(bad)
cmp
dec
pop
pop
or
pop
pop
(bad)
(bad)
(bad)
fild
ds
lahf
call
ret
fcomip
push
addr16
mov
imul
adc
enter
jp
ins
in
pop
in
in
jmp
ins
jge
les
out
shl
ss
mov
(bad)
std
sub
cli
add
(bad)
sti
seta
movs
repz
je
je
iret
mov
in
cmps
jnp
fcomip
jg
mov
mov
pop
retf
jg
jns
(bad)
jg
mov
shl
into
cmc
(bad)
das
ds
stc
out
jecxz
lahf
dec
aaa
jle
lock
fldpi
or
call
xor
mov
sub
lahf
aad
jg
fcom
inc
jb
scas
sbb
ficom
es
pop
fidiv
ss
mov
(bad)
call
rcl
(bad)
fmul
imul
popf
aas
pushf
mov
pop
mov
cmc
fistp
jle
out
nop
shr
cmps
fidivr
pop
outs
jne
(bad)
mov
or
dec
fwait
(bad)
mov
ja
adc
icebp
mov
mov
(bad)
mov
(bad)
mov
hlt
fist
cs
dec
pop
in
(bad)
std
es
mov
sbb
jge
jmp
aam
pop
neg
sti
loop
rcl
xor
mov
jmp
and
mov
sar
jg
push
sbb
lahf
jne
mov
mov
ret
jg
aaa
cld
dec
dec
pop
xor
jbe
jecxz
dec
inc
add
fimul
or
sbb
clc
mov
repnz
(bad)
in
jne
mov
(bad)
inc
cmc
mov
cli
rol
mov
mov
test
(bad)
(bad)
(bad)
(bad)
sti
inc
dec
sbb
mov
adc
iret
push
out
sahf
int
and
test
icebp
jmp
dec
push
xor
jb
fcomp
call
mov
icebp
xlat
test
inc
aam
call
rcr
pop
loope
sbb
je
sti
jg
cmc
cmp
cmp
(bad)
mov
scas
(bad)
sbb
pop
scas
rcr
jo
inc
dec
lock
sti
hlt
mov
fidivr
sub
test
mov
sub
jge
pop
sub
mov
ja
cmps
pop
outs
loopne
inc
(bad)
div
ret
test
(bad)
(bad)
(bad)
jmp
neg
movs
mov
jmp
lahf
pop
and
jns
cli
test
cmp
hlt
jae
pop
pop
push
push
fwait
mov
jg
pop
cs
jmp
mov
adc
pop
outs
inc
jmp
pushf
dec
inc
xchg
mov
jno
inc
mov
push
mov
out
or
jmp
and
mov
mov
cmp
ja
stos
adc
(bad)
(bad)
jg
or
scas
movs
cmp
jmp
nop
imul
cmp
xchg
fwait
popf
(bad)
jmp
and
not
pushf
and
push
push
fidivr
jmp
(bad)
mov
test
ret
xchg
(bad)
mov
sar
cmc
jne
retf
into
inc
jno
dec
adc
inc
mov
mov
fiadd
pop
movs
mov
je
push
dec
call
fcomip
add
cld
pop
pop
std
jnp
cmp
clc
out
out
lods
(bad)
(bad)
(bad)
push
push
mov
addr16
scas
sbb
pop
lahf
in
sub
(bad)
(bad)
(bad)
dec
icebp
fiadd
pop
mov
mov
fadd
or
jmp
out
dec
iret
sar
pop
lock
repz
dec
jge
pop
xor
mov
stos
(bad)
fucomi
lea
mov
clc
fst
(bad)
jae
cld
fbstp
add
lods
xor
aas
ja
rol
aaa
jl
add
ss
arpl
gs
jmp
or
cld
lods
fwait
push
mov
or
jecxz
push
or
push
inc
(bad)
out
fdivr
cmp
(bad)
fst
sub
addr16
idiv
xor
adc
jp
test
and
(bad)
(bad)
jmp
cmp
cwde
icebp
out
popa
arpl
xor
shr
shl
push
retf
(bad)
(bad)
(bad)
inc
xchg
hlt
addr16
sbb
mov
push
inc
cs
sub
aad
(bad)
(bad)
(bad)
mov
test
push
mov
mov
out
xchg
icebp
sbb
push
std
inc
ret
mov
ss
fisttp
ss
mov
pushf
xor
and
pushf
pusha
fnstsw
aas
cmp
(bad)
mov
std
or
xchg
mov
daa
add
xchg
jp
daa
sbb
loop
call
mov
push
std
test
dec
in
bound
rcr
sar
inc
imul
repz
push
mov
rol
xlat
out
dec
(bad)
(bad)
(bad)
mov
push
int
push
jle
icebp
push
cmp
stos
xor
jmp
(bad)
call
adc
pop
or
xchg
jecxz
cmp
push
(bad)
(bad)
(bad)
(bad)
inc
mov
pop
mov
js
or
imul
popa
into
push
jnp
int3
cmp
push
cli
inc
dec
sbb
cmps
retf
inc
xor
sbb
(bad)
(bad)
call
push
popf
hlt
mov
jmp
push
bound
(bad)
pop
jp
neg
fwait
out
and
in
sbb
mov
(bad)
and
addr16
popf
sbb
xchg
and
push
dec
mov
cmp
adc
clc
push
dec
lods
mov
(bad)
(bad)
push
mov
sahf
cmps
xlat
repz
mov
push
gs
emms
and
(bad)
push
(bad)
(bad)
jmp
shl
aam
(bad)
mov
ins
lock
sahf
mov
(bad)
call
and
jmp
stc
fistp
iret
sahf
popf
jno
(bad)
jmp
loop
push
das
jne
loope
pop
sub
aaa
outs
push
shl
pop
mov
(bad)
(bad)
call
or
in
jae
ror
shl
sahf
push
dec
cmp
pop
xchg
addps
jmp
add
sub
call
xchg
sub
(bad)
(bad)
jmp
mov
push
out
push
adc
in
aaa
fld
test
dec
dec
cmp
inc
addr16
sbb
stos
jle
and
js
loop
(bad)
push
add
stos
sub
pop
mov
mov
mov
or
stc
(bad)
(bad)
push
xor
enter
push
in
and
int3
and
das
adc
dec
sbb
cli
(bad)
(bad)
inc
xchg
sti
inc
out
jg
cmps
jle
ja
popa
jmp
jnp
ja
mov
jp
das
cli
das
push
xor
(bad)
or
ret
fiadd
(bad)
(bad)
dec
loopne
lahf
push
sub
cdq
pop
mov
clc
dec
mov
cmc
cmp
mov
jo
dec
mov
(bad)
(bad)
inc
fmul
ret
aaa
ins
out
mov
xor
bnd
fcomp
mov
push
ret
xchg
sub
(bad)
(bad)
jmp
fldcw
out
mov
push
cmp
jge
call
and
clc
call
loopne
test
stos
or
cld
pop
sbb
repnz
out
or
loop
inc
sahf
dec
icebp
pop
jmp
dec
jns
pop
(bad)
(bad)
(bad)
call
in
(bad)
xchg
or
test
call
aad
aam
adc
push
pop
scas
add
mov
sar
test
add
std
aad
clc
nop
out
inc
ffree
movs
add
push
cld
push
jle
mov
jp
mov
jnp
enter
cwde
aam
aad
or
push
add
mov
stc
xlat
inc
pop
call
(bad)
inc
cmp
sti
mov
fucom
test
bndstx
jg
xchg
ja
cs
sahf
scas
icebp
ret
(bad)
(bad)
jg
dec
retf
cmp
dec
(bad)
es
sub
mov
(bad)
jmp
jp
sbb
pop
adc
mov
int
dec
adc
push
xlat
call
jg
js
and
std
dec
mov
shl
in
pop
out
ins
sbb
bound
add
movs
inc
cs
pop
(bad)
pop
inc
aas
retf
lds
(bad)
(bad)
(bad)
jmp
cmp
mov
pop
and
neg
lahf
int
cmp
push
jne
inc
push
mov
(bad)
(bad)
call
(bad)
cli
fistp
mov
mov
adc
mov
sahf
adc
add
call
loopne
adc
jo
sub
mov
inc
adc
icebp
es
jmp
mov
sbb
sar
das
hlt
pop
ins
add
call
dec
loopne
push
inc
fs
or
fstp
sub
int3
mov
shl
mov
(bad)
call
inc
(bad)
jmp
mov
imul
mov
fnsave
adc
js
(bad)
mov
mov
cmps
fucom
arpl
sbb
adc
push
cmp
scas
clc
mov
pusha
pop
xlat
sar
and
cmps
fwait
in
dec
push
(bad)
cmp
adc
(bad)
rol
cmp
inc
jge
dec
dec
mov
loop
ficomp
adc
mov
inc
sbb
outs
mov
dec
rcr
dec
inc
pop
inc
sbb
call
cmps
sar
fild
push
aas
into
and
push
sbb
adc
neg
adc
ins
(bad)
cmps
jle
ins
std
jmp
fwait
inc
adc
pop
outs
mov
xor
(bad)
jg
add
aad
fs
aaa
(bad)
pop
ret
pop
enter
jmp
clc
cmps
xor
icebp
(bad)
cmp
daa
adc
pop
sar
shl
icebp
(bad)
jmp
shl
mov
mov
dec
in
cmps
enter
repnz
in
loopne
adc
and
leave
fcmovb
adc
popa
sub
cli
jno
jmp
out
push
out
cwde
mov
(bad)
(bad)
push
in
lock
inc
arpl
xor
jne
in
pushf
jb
jo
retf
popf
or
lods
mov
(bad)
in
mov
xchg
loop
ds
clc
and
and
in
imul
(bad)
jmp
movs
jecxz
call
sbb
sahf
daa
loope
pop
and
lods
(bad)
sbb
call
das
mov
push
push
int3
pop
dec
cld
call
xchg
pop
cmc
shl
pop
fild
jmp
pop
mov
vsqrtsd
add
push
movs
(bad)
outs
in
call
xor
lods
call
std
cmc
(bad)
int
adc
jae
mov
jo
fwait
sub
out
stos
mov
add
rol
jp
xbegin
cmc
das
lods
mov
loopne
out
jb
imul
cmps
jmp
retf
aas
xchg
ds
(bad)
(bad)
jmp
lock
adc
mov
inc
jge
es
jecxz
ret
dec
xor
mov
sbb
push
pop
in
rcr
mov
test
sub
dec
aaa
leave
fild
jecxz
ins
cmps
(bad)
jmp
clc
jmp
adc
aad
mov
das
not
mul
(bad)
(bad)
jmp
mov
cdq
fstp
lock
sbb
shr
cmp
inc
jle
(bad)
js
(bad)
(bad)
dec
aas
dec
mov
jo
add
(bad)
ja
retf
repnz
scas
xchg
jbe
cli
(bad)
repz
lock
push
repz
popf
imul
push
repz
mov
ret
push
sbb
cli
sub
stc
outs
loope
into
je
jmp
cmp
iret
jmp
mov
xor
rol
jne
sar
xor
dec
addr16
popf
test
sub
aad
pop
pop
les
sub
out
xchg
mov
cmp
(bad)
push
(bad)
leave
dec
xlat
pop
xlat
jns
lods
mov
retf
push
push
cmp
mul
jl
(bad)
(bad)
call
std
sub
stos
xor
cs
cdq
pcmpgtb
iret
rcl
mov
das
mov
or
(bad)
(bad)
call
adc
cmp
pop
stc
push
test
retf
sbb
(bad)
sbb
ret
pop
inc
jg
hlt
fcmovb
retf
and
aas
cdq
dec
ds
mov
call
adc
jnp
sar
or
mov
mov
pusha
cld
adc
(bad)
jmp
dec
test
mov
mov
movs
sti
cli
cld
(bad)
jg
or
ror
cmp
sub
(bad)
(bad)
(bad)
push
push
lahf
xorps
ins
sbb
sbb
dec
sub
loop
scas
mov
dec
pop
out
pop
(bad)
(bad)
cmp
cmps
(bad)
cmp
sub
out
fcom
push
loop
mov
hlt
js
call
xor
popf
xchg
mov
jbe
add
dec
pusha
and
cmp
mov
inc
clc
iret
inc
sub
xchg
cld
dec
fild
mov
popf
sbb
(bad)
xchg
and
(bad)
(bad)
dec
aaa
out
es
aas
iret
or
stos
rcr
popa
and
scas
jmp
adc
inc
pop
or
pop
(bad)
nop
mov
add
jmp
stos
fcmovnbe
jmp
stos
add
jno
(bad)
lods
add
cmc
cs
jmp
dec
dec
push
stos
sbb
cs
cmc
nop
mov
dec
(bad)
sub
mov
sub
(bad)
jmp
retf
add
cmps
addr16
mov
das
test
pop
(bad)
jmp
or
pop
in
cmps
mov
sbb
(bad)
(bad)
(bad)
call
aad
push
mov
jg
sub
clc
add
jno
pop
loope
shr
(bad)
(bad)
push
cmp
mov
or
(bad)
push
mov
int
loop
push
cmp
call
out
cmps
icebp
(bad)
cmp
xchg
pop
or
jge
push
jmp
(bad)
fnstsw
jne
lahf
fsubr
psubb
xor
mov
push
cld
mov
push
mov
jp
leave
(bad)
call
leave
bound
and
(bad)
dec
inc
icebp
xchg
inc
mov
cmp
rcr
inc
sbb
ffree
pop
outs
mov
push
retf
mov
in
cld
fsub
or
inc
in
adc
jg
add
jnp
ror
out
push
out
fdiv
jae
idiv
ja
pop
inc
jo
(bad)
mov
lock
(bad)
cmp
scas
rol
jmp
push
mov
jns
lods
sahf
xchg
and
inc
mov
mov
out
out
cwde
sub
mov
shl
repz
adc
dec
stos
dec
repnz
stos
add
adc
ret
scas
add
scas
int3
retf
mov
sub
push
sbb
test
lock
adc
stos
ja
rep
(bad)
(bad)
out
pop
add
mov
pop
ja
dec
jmp
xchg
dec
or
xchg
push
(bad)
(bad)
call
in
cmp
mov
hlt
xor
mov
addr16
data16
enter
clc
aas
dec
push
adc
retf
cmp
push
test
(bad)
(bad)
jg
jl
mov
jle
loopne
in
repnz
sub
lahf
xor
mov
(bad)
(bad)
(bad)
jg
cmps
ds
test
aad
mov
ss
cmps
sar
pop
add
xor
cmp
(bad)
out
enter
mov
xchg
test
pushf
jbe
pop
cmps
aaa
or
dec
mov
pop
ror
xchg
inc
in
sub
fild
repz
daa
adc
out
iret
cmp
xchg
lahf
mov
pop
js
inc
jno
pushf
lds
cmp
ss
jmp
leave
add
js
lock
push
jbe
sub
pop
sahf
mov
(bad)
(bad)
cmp
ins
imul
fldenv
mov
mov
stc
iret
stc
in
adc
mov
fnsave
out
sbb
std
cmp
mov
jge
retf
and
sbb
aas
js
pushf
jmp
push
sub
shr
jnp
and
loope
jle
in
popa
dec
loopne
(bad)
mov
jg
jg
scas
fimul
test
push
or
(bad)
jo
xor
jl
(bad)
(bad)
(bad)
mov
mov
(bad)
jns
daa
dec
into
nop
daa
or
loopne
imul
(bad)
(bad)
mov
in
aad
mov
cmp
xchg
(bad)
pxor
je
adc
in
add
inc
cld
outs
outs
out
mov
xchg
sbb
test
jge
jl
(bad)
js
xchg
test
jg
xchg
loop
pop
(bad)
fs
(bad)
(bad)
jmp
(bad)
adc
(bad)
mov
pop
jae
sub
hlt
sub
imul
loopne
dec
jg
das
shl
jg
pushf
jns
jl
(bad)
(bad)
(bad)
dec
dec
and
nop
jg
out
push
fbstp
jecxz
movs
leave
pop
push
mov
cli
out
jmp
inc
div
xchg
ja
mov
mov
mov
xacquire
lahf
push
and
call
in
je
ret
fcomp
mov
call
in
add
push
mov
arpl
ror
jl
movs
mov
(bad)
call
mul
loopne
push
pop
fs
pop
daa
leave
fistp
jecxz
aad
stc
movs
and
lock
cmp
lock
movs
lock
lods
repz
jg
cmp
(bad)
call
mov
movs
das
xchg
push
mov
jmp
add
scas
jmp
add
jo
pop
outs
mov
dec
daa
cmc
cli
pop
stc
out
xchg
mov
mov
mov
pop
mov
hlt
sbb
sti
int3
adc
dec
call
(bad)
inc
(bad)
leave
push
and
sahf
shl
and
xchg
shl
stc
call
clc
jbe
pop
fisttp
out
cmp
cmp
mov
stc
push
call
stos
fwait
stos
fs
(bad)
(bad)
jmp
(bad)
cmc
repnz
enter
dec
dec
into
sbb
retf
enter
movs
and
xchg
and
adc
push
push
or
jmp
dec
out
(bad)
cmps
cmp
shr
out
sub
shl
xor
in
dec
dec
mov
popf
test
cld
test
xor
push
and
cmc
idiv
push
jl
dec
add
into
sub
hlt
mov
fcomp
mov
les
cld
aam
ret
adc
lahf
enter
mov
sub
xor
test
push
movs
add
mov
inc
jmp
mov
(bad)
jg
dec
push
loope
iret
shl
push
idiv
dec
and
ins
jnp
js
(bad)
(bad)
(bad)
(bad)
cli
adc
fsub
stos
sub
xchg
cmp
pusha
add
das
clc
jmp
addr16
cli
movs
sbb
cwde
dec
test
dec
jns
mov
mov
adc
fwait
out
into
js
sub
(bad)
(bad)
inc
pop
xlat
arpl
sub
ret
inc
jns
push
adc
xchg
daa
sbb
loope
(bad)
(bad)
mov
fdivr
or
out
(bad)
push
sbb
outs
ret
pop
add
in
pushf
pop
(bad)
jmp
ror
push
std
stc
loopne
popf
pusha
(bad)
out
sub
sar
jle
scas
mov
dec
outs
mov
test
jns
icebp
call
js
in
mov
(bad)
cld
add
scas
idiv
es
(bad)
call
xchg
mov
inc
xchg
repz
add
(bad)
ins
retf
(bad)
pop
jg
(bad)
cmp
mov
jmp
loop
and
dec
test
jecxz
(bad)
mov
aaa
fwait
clc
jmp
pusha
lds
lods
xchg
add
dec
ds
sti
ror
mov
pop
stc
fmul
add
sub
mov
lea
lock
in
jecxz
inc
xchg
or
add
ret
xchg
fxch
sar
mov
fld
loop
cli
(bad)
(bad)
call
dec
icebp
sub
iret
es
cmc
mov
int
jle
mov
mov
popa
xor
(bad)
(bad)
(bad)
jg
neg
shr
push
mov
in
test
aad
aad
mov
jge
mov
(bad)
(bad)
call
not
inc
jp
lock
pushf
rcr
sbb
xchg
adc
sub
push
and
dec
cmp
mov
out
pop
dec
jmp
pushf
cmp
(bad)
cli
(bad)
(bad)
cld
cmps
jmp
fmul
cmp
mov
adc
test
fcomp
(bad)
mov
sbb
dec
mov
sbb
xor
scas
sub
jecxz
stos
das
cld
inc
inc
pop
mov
cli
jne
pop
(bad)
dec
lock
mov
and
(bad)
mul
mov
and
scas
data16
in
(bad)
jmp
in
inc
inc
cmp
sub
clc
pop
fwait
mov
pushf
pop
jle
mov
sti
(bad)
(bad)
dec
cs
sar
xchg
push
lock
mov
sar
sti
outs
loopne
or
pop
or
(bad)
dec
jo
rcr
call
inc
es
mov
inc
iret
outs
mov
(bad)
(bad)
dec
mov
mul
sti
stos
iret
ds
dec
sbb
mov
sub
(bad)
std
shl
retf
cld
inc
std
dec
(bad)
js
(bad)
scas
pop
out
loopne
cwde
(bad)
std
push
push
push
cdq
jo
loopne
pop
jmp
or
cmp
sub
pop
jle
fisttp
(bad)
dec
xchg
out
sbb
cld
arpl
mov
(bad)
(bad)
cld
out
cmp
xor
jnp
repz
and
adc
jmp
jmp
(bad)
jmp
loope
dec
pushf
addr16
xchg
cld
lock
shr
icebp
jmp
push
(bad)
mov
jge
fistp
jmp
ins
dec
data16
mov
xor
jle
pushf
ss
adc
sbb
mov
nop
fwait
mov
push
pop
sbb
shr
mov
mov
out
mov
mov
scas
or
adc
dec
repz
cmps
das
outs
sbb
mov
dec
adc
sub
pop
pop
jo
out
cmp
xchg
lds
xchg
and
push
adc
out
push
(bad)
(bad)
(bad)
(bad)
rol
add
(bad)
(bad)
(bad)
mov
mov
into
sar
push
pop
jg
test
and
xor
iret
jns
adc
pop
add
(bad)
jmp
stos
rcr
inc
fsub
sti
mov
sti
cmp
call
mov
rcr
jge
enter
cmp
fld
cs
and
inc
cld
mov
xor
jmp
mov
cmp
stos
xchg
cmp
jmp
push
(bad)
inc
imul
and
sbb
stos
cmps
mov
mov
outs
lock
push
inc
loope
pop
xchg
rcl
push
xor
fstp
pop
je
cmp
fidiv
stos
rcr
cmp
jno
lock
shr
sbb
das
pop
jmp
cmc
xchg
dec
sbb
outs
sub
(bad)
push
xchg
xor
rcr
mov
pop
lock
push
std
in
loope
sub
stos
pop
adc
mov
mov
popa
ds
fwait
test
loope
cmp
aam
mov
aaa
gs
mov
(bad)
jg
gs
loope
inc
test
stos
inc
std
vmovdqu
in
clc
sar
(bad)
(bad)
(bad)
call
cld
ins
(bad)
cmp
test
cmp
inc
sub
out
dec
jno
push
(bad)
out
stc
sbb
(bad)
(bad)
jmp
xlat
rol
popa
cs
mov
mov
rcr
stc
cwde
retf
fadd
repnz
(bad)
enter
rol
jmp
loopne
inc
idiv
loope
jno
loop
scas
loop
div
aad
jmp
in
cmp
das
pop
or
add
pop
adc
in
mov
icebp
in
scas
mov
ds
(bad)
(bad)
push
movs
loope
loope
xlat
pop
fld
aas
arpl
inc
jle
retf
stos
cmps
dec
push
loop
retf
dec
jl
(bad)
(bad)
jmp
(bad)
cwde
mov
shl
repz
out
bt
jecxz
push
adc
pmaddwd
(bad)
(bad)
inc
ja
test
scas
in
adc
jl
cmp
cwde
mov
sub
in
mov
inc
cmp
adc
jb
aaa
sbb
inc
std
daa
pop
ins
add
jl
daa
jmp
(bad)
mov
push
addr16
jge
lock
inc
sbb
(bad)
(bad)
push
(bad)
cmc
in
clc
(bad)
call
fiadd
popa
dec
(bad)
(bad)
loop
cmp
rol
or
shr
jg
mov
fistp
stos
xchg
inc
mov
ins
nop
xor
sar
fwait
cmp
jecxz
xor
inc
adc
mov
test
xor
cmp
(bad)
(bad)
(bad)
push
sbb
outs
ret
mov
pop
push
mov
inc
jl
pop
mov
xchg
int
or
(bad)
inc
adc
xchg
pop
or
add
and
aad
mov
(bad)
dec
push
mov
add
mov
and
(bad)
(bad)
call
lods
jb
mov
retf
in
xchg
pop
cmp
mov
cmp
pop
(bad)
(bad)
(bad)
dec
outs
pushf
mov
jae
call
pop
scas
cld
jecxz
into
scas
mov
cmp
jmp
or
sahf
(bad)
(bad)
jno
inc
out
jne
mov
add
movs
pushf
data16
daa
(bad)
(bad)
jg
hlt
mov
test
imul
or
sbb
xor
in
cmp
(bad)
xchg
(bad)
(bad)
inc
jno
iret
pushf
fisub
cmp
int3
fild
dec
mulps
gs
mov
(bad)
(bad)
(bad)
cmp
fld
ins
ss
ss
sar
es
js
push
sbb
sti
jp
mov
cmp
xchg
push
stos
cmp
sti
loope
cmp
popf
or
sub
mov
(bad)
in
(bad)
mov
out
out
sub
sti
push
mov
in
mov
movs
test
jg
and
push
dec
xchg
loop
fcmovnbe
loopne
pop
jne
outs
(bad)
(bad)
push
mov
out
push
xor
das
xor
(bad)
cmp
fistp
cmp
add
ins
mov
pop
ja
(bad)
(bad)
js
rcr
pop
jmp
mov
add
in
xchg
fiadd
dec
clc
(bad)
mov
add
fdiv
retf
out
aaa
aaa
clc
out
pop
scas
jp
fcomip
scas
movs
shl
jnp
sti
outs
mov
and
clc
fild
(bad)
out
sbb
aaa
cwde
clc
jmp
outs
sub
pushf
cmps
js
lahf
jecxz
rcl
pop
std
(bad)
call
add
xchg
or
ret
inc
sbb
cli
adc
adc
outs
stos
adc
movs
(bad)
sub
popa
jle
call
mov
stos
cmp
loopne
add
mov
cmp
aad
(bad)
(bad)
cmp
add
in
and
sbb
cdq
retf
jmp
das
pushf
push
lea
xchg
(bad)
js
fs
mov
outs
push
clc
js
cmp
(bad)
(bad)
mov
mov
out
mov
ins
pop
icebp
cmp
push
(bad)
stc
inc
mov
cli
pop
cmc
(bad)
(bad)
cmp
int3
imul
jg
out
sti
in
(bad)
cli
jmp
mov
sub
inc
lds
sbb
loop
lods
daa
dec
add
cmps
dec
out
sbb
lahf
dec
cmp
cmp
sub
movs
(bad)
(bad)
mov
mov
test
mov
out
ins
out
bound
jb
adc
iret
popa
nop
call
add
retf
push
(bad)
(bad)
jmp
sub
cmp
dec
stc
xor
stos
in
xchg
push
jno
sub
push
ror
adc
push
xor
clc
(bad)
(bad)
call
ret
mov
in
call
lock
cli
jl
retf
mov
dec
dec
inc
hlt
jnp
call
mov
(bad)
in
std
jl
xchg
fs
aaa
leave
dec
cli
retf
out
stos
or
je
xchg
cmps
jg
(bad)
mov
mov
(bad)
mov
cmp
and
dec
inc
int3
dec
out
xor
mov
or
push
and
sahf
add
(bad)
(bad)
cmp
cmp
fistp
cmps
pop
iret
loopne
pushf
dec
jmp
pop
push
add
fisub
mov
mov
fidiv
jmp
sub
jg
fistp
add
pop
in
mov
repnz
(bad)
(bad)
inc
ds
cmp
add
ret
hlt
xchg
je
fisub
(bad)
(bad)
(bad)
cli
test
cmp
jb
cld
fstp
jb
jmp
arpl
pop
mov
(bad)
in
pop
adc
and
in
outs
imul
xlat
ins
push
ror
fwait
(bad)
fwait
and
mov
ror
mov
icebp
pop
pop
aad
push
jbe
inc
out
popa
xor
js
mov
lods
aad
clc
imul
cli
mov
mov
mov
dec
cmps
inc
jbe
jg
imul
out
mov
mov
call
(bad)
(bad)
push
test
(bad)
jo
popf
loopne
sub
push
sbb
fcomp
xor
(bad)
(bad)
(bad)
inc
hlt
inc
push
jge
movs
sub
hlt
pop
scas
cmp
and
std
dec
out
sbb
jle
hlt
js
fisub
push
xchg
jl
xlat
dec
ins
int
push
pop
sahf
xor
xchg
lahf
adc
int
adc
sub
imul
(bad)
(bad)
(bad)
(bad)
(bad)
rol
cdq
pop
cmp
popa
mov
dec
pusha
outs
pop
jo
dec
dec
dec
pop
arpl
(bad)
inc
push
mov
cs
jae
cmp
jg
jno
push
loope
jge
cs
(bad)
fdivr
shl
fucomp
adc
sbb
out
stos
mov
mov
xchg
(bad)
call
(bad)
jbe
sbb
je
int3
(bad)
sar
jno
scas
push
fimul
adc
push
push
inc
fstp
push
rol
mov
pop
inc
push
dec
push
pop
inc
in
pop
and
stos
and
(bad)
(bad)
out
xor
xchg
icebp
dec
jmp
dec
cli
cmp
mov
inc
(bad)
fld
mov
(bad)
(bad)
(bad)
mov
(bad)
into
xchg
inc
cli
mov
js
pop
dec
push
stc
or
and
jmp
fistp
jae
sbb
mov
(bad)
cmp
mov
xchg
leave
out
jnp
sub
mov
call
and
inc
dec
scas
les
shl
nop
pusha
repz
and
(bad)
push
(bad)
(bad)
(bad)
dec
pop
dec
je
ja
fidivr
ret
ret
sti
lds
pop
(bad)
xacquire
add
and
icebp
sub
mov
(bad)
mov
pop
mov
dec
std
lea
mov
sub
xor
ins
and
std
jmp
mov
push
cmps
stos
lock
cmp
mov
les
inc
ss
mov
inc
add
xchg
sub
dec
dec
sbb
dec
jno
in
std
push
xchg
dec
cmp
push
pop
mov
ins
or
(bad)
(bad)
(bad)
jg
or
xchg
out
jecxz
jno
jmp
es
xchg
and
das
xchg
gs
cld
(bad)
push
fnsave
call
adc
mov
dec
dec
js
inc
add
inc
out
aaa
xchg
aam
cmp
xor
stos
mov
cmp
bound
add
mov
icebp
fwait
pop
repz
int
xchg
push
dec
inc
pop
js
hlt
mov
outs
mov
xor
scas
movs
or
cmp
mov
out
mov
js
sub
(bad)
(bad)
(bad)
push
fadd
repnz
mov
or
(bad)
leave
mov
and
jmp
test
xchg
ret
(bad)
(bad)
(bad)
cli
sti
mov
xchg
cmp
adc
or
add
das
fld
mov
(bad)
(bad)
jg
or
cli
loopne
div
lods
and
jno
clc
iret
scas
cmp
(bad)
(bad)
pusha
out
(bad)
(bad)
(bad)
call
or
jmp
cs
and
scas
push
mov
cwde
pop
stos
imul
div
in
aaa
in
fs
sbb
cmp
push
mov
clc
xchg
in
sbb
test
push
jl
mov
sbb
or
gs
push
xchg
or
jmp
cmp
pushf
sbb
adc
add
jle
leave
mov
scas
fsub
pop
icebp
jne
push
add
or
divps
jg
out
and
pop
enter
aaa
std
adc
cmp
sbb
mov
in
retf
(bad)
(bad)
(bad)
(bad)
in
mov
out
scas
je
enter
and
dec
std
popa
mov
and
add
(bad)
(bad)
(bad)
pop
xchg
imul
(bad)
lods
dec
cld
out
ror
dec
cwde
cmps
mov
(bad)
xchg
addr16
xor
xchg
mov
push
jmp
mov
dec
lock
les
iret
push
aad
mov
sub
popf
or
mov
pushf
cmp
mov
mov
pushf
aaa
push
stos
add
cs
out
jns
rcr
pop
mov
pop
push
mov
add
dec
dec
in
rcl
or
daa
push
fdivr
mov
jmp
aaa
sahf
inc
pop
ins
lock
dec
sub
push
jecxz
lahf
test
lds
jecxz
fist
(bad)
(bad)
call
rcr
in
out
jmp
cmp
repz
fld
and
xlat
mov
(bad)
jmp
in
gs
or
sub
shl
push
xor
ds
xor
dec
lock
fcomp
popa
addr16
and
pop
inc
inc
imul
call
sti
pop
cld
fwait
and
movs
add
(bad)
inc
fbstp
jle
xor
andnps
jne
fwait
stc
popf
pop
pop
out
ss
(bad)
(bad)
(bad)
push
aad
dec
in
lods
xchg
sub
div
sub
idiv
aaa
scas
(bad)
cld
dec
bnd
(bad)
jmp
(bad)
jb
rcl
adc
jnp
arpl
mov
scas
call
call
jp
jl
hlt
retf
arpl
retf
sbb
clc
fnsave
(bad)
jl
iret
dec
xlat
inc
not
dec
xchg
cmp
inc
lods
cs
data16
aam
in
sahf
sbb
std
adc
leave
inc
push
jae
push
or
int3
(bad)
retf
ds
pop
(bad)
out
sub
scas
or
push
movs
xor
std
call
pop
sbb
out
(bad)
loopne
pop
jno
lahf
sub
jnp
push
mov
cmp
sahf
mov
dec
cmc
mul
pop
fisttp
mov
scas
dec
push
or
in
call
cwde
ror
lock
jns
retf
jmp
rcr
mov
and
cmc
push
loop
ds
sub
mul
fidivr
(bad)
(bad)
(bad)
jg
xor
or
ret
aad
neg
add
sar
pop
mov
pop
adc
jmp
mov
sti
or
add
jns
xchg
loopne
jae
lods
or
push
(bad)
mov
dec
dec
loopne
push
aas
int3
loop
cmp
and
mov
pop
cli
loope
repnz
into
push
loope
les
xchg
(bad)
(bad)
mov
outs
(bad)
jmp
pop
fucomip
ror
xchg
(bad)
(bad)
dec
sbb
mov
ror
ja
mov
enter
fld
mov
cld
mov
jo
(bad)
(bad)
inc
mov
cmp
shl
mov
sbb
retf
out
stos
and
repnz
in
jecxz
push
mov
ins
in
jae
adc
(bad)
(bad)
(bad)
call
js
movs
(bad)
sub
cdq
dec
xor
ds
not
pop
leave
bound
(bad)
call
adc
pop
sbb
mov
push
xor
(bad)
sahf
jg
cmc
sar
fist
data16
out
mov
das
mov
int3
xchg
xor
pop
jle
mov
inc
aaa
cli
inc
jmp
out
mov
das
dec
test
into
fwait
mov
jmp
jge
jle
mov
xchg
add
mov
xor
pop
std
push
mov
out
imul
dec
or
mov
clc
mov
retf
cld
test
mov
(bad)
(bad)
(bad)
out
aam
out
nop
into
xchg
ds
mov
pop
vpshaq
fbld
(bad)
(bad)
(bad)
(bad)
(bad)
clc
das
fnstcw
mov
call
(bad)
mov
ss
out
mov
dec
and
repnz
or
(bad)
cmp
ret
jp
test
icebp
jg
test
mov
mov
fnsave
adc
sub
or
ret
push
fidiv
mov
(bad)
(bad)
call
ins
push
jmp
sahf
icebp
push
xchg
outs
dec
out
dec
js
cmp
jg
inc
sahf
(bad)
(bad)
(bad)
call
and
push
xchg
lahf
cmp
into
iret
jge
gs
out
or
inc
xor
mov
sti
cmc
(bad)
(bad)
jg
test
clc
popa
lea
jge
retf
pop
hlt
pusha
sahf
stc
(bad)
call
fldenv
sub
lds
jns
ror
push
pop
gs
adc
pop
pop
add
ja
aas
js
(bad)
mov
mov
test
push
mov
sbb
cli
jns
sbb
movs
jae
retf
mov
jge
pop
test
or
daa
pop
xlat
sub
cmp
frstor
std
bound
in
sub
fild
sbb
clc
movs
mov
lods
xor
lods
in
fist
ds
(bad)
loopne
in
ffreep
neg
sub
jecxz
push
xchg
inc
jle
sahf
dec
lods
jno
cdq
add
add
stos
inc
xor
dec
inc
(bad)
jae
idiv
gs
movs
(bad)
jno
mov
cmp
call
xchg
test
pushf
xor
out
mov
jne
leave
(bad)
(bad)
(bad)
(bad)
in
push
stc
sub
mov
pop
push
mov
sbb
mov
mov
test
cmc
mov
enter
js
jmp
cld
scas
add
aas
(bad)
jle
jg
imul
xor
cli
mov
jne
mov
(bad)
push
cs
pop
push
enter
jns
outs
aam
jecxz
sbb
mov
push
jmp
loope
xchg
push
cwde
xchg
jmp
(bad)
or
mov
out
bound
jecxz
add
xchg
jmp
mov
stc
or
push
cmp
cld
fisub
pcmpeqw
call
sbb
clc
(bad)
mov
mov
dec
and
sti
cmps
lock
and
ret
je
rcr
jmp
js
frstor
jae
in
nop
jno
jecxz
in
lock
and
(bad)
(bad)
(bad)
(bad)
dec
sub
hlt
rcr
ror
add
xor
retf
pop
outs
adc
jecxz
movs
aad
(bad)
(bad)
inc
cmp
fstp
mov
mov
sub
fdivr
jne
pop
fcomp
shl
int3
arpl
sub
sbb
(bad)
(bad)
mov
outs
iret
lock
nop
repnz
sti
stos
dec
ret
aaa
movs
stos
push
std
les
leave
pop
mov
jg
ins
and
fisubr
scas
repz
mov
xchg
fdiv
push
(bad)
(bad)
(bad)
push
jmp
adc
out
(bad)
jnp
jle
out
shl
fadd
out
aam
shl
and
push
nop
aam
retf
fmul
enter
leave
cmp
pop
outs
test
mov
jmp
xor
push
xchg
push
sti
call
mov
(bad)
in
mov
outs
jne
stos
jle
pop
mov
out
stos
sbb
arpl
mov
cli
sub
stc
aam
xor
xchg
mov
ror
mov
pop
inc
gs
jmp
add
idiv
call
dec
push
add
(bad)
mov
out
ins
jmp
(bad)
(bad)
call
fbstp
mov
addr16
cmp
mov
lock
scas
fld
out
call
fwait
mov
outs
inc
out
cli
mov
mov
cs
mov
retf
jecxz
pushf
ret
imul
mov
aad
lods
(bad)
mov
pop
xchg
mov
ficomp
(bad)
cli
adc
jg
loopne
stc
jg
(bad)
(bad)
(bad)
call
or
int
fbstp
or
shr
out
pusha
pop
fild
cli
mov
(bad)
(bad)
(bad)
jmp
xlat
inc
scas
icebp
dec
sbb
add
xlat
sar
sahf
pop
add
mov
jae
pop
lock
outs
mov
sbb
bound
jbe
or
mov
out
cmp
jge
(bad)
lods
cli
rcl
push
rcl
and
fidiv
in
jne
out
(bad)
cld
aaa
fsubr
repnz
add
or
(bad)
(bad)
call
mov
cmp
fcmovnu
pop
xchg
hlt
inc
inc
in
xlat
clc
bswap
fbstp
js
adc
mov
into
jmp
cmp
cmp
paddsb
push
popf
dec
xlat
test
cld
pop
rcl
(bad)
(bad)
(bad)
mov
fs
pop
push
in
stc
jecxz
pop
inc
pop
fisttp
xrelease
lock
sbb
(bad)
(bad)
fcomip
pop
xor
xchg
lods
sub
xchg
cld
or
mov
sti
jbe
sub
(bad)
call
xchg
inc
enter
outs
ror
out
mov
sbb
in
inc
pop
out
popf
jecxz
ror
dec
std
call
xchg
xchg
and
std
cmps
scas
jmp
dec
popf
iret
xlat
test
aam
sbb
jns
push
stos
pusha
popf
and
(bad)
mov
cmp
fnsave
xor
pop
fstp
inc
sub
sub
sahf
sar
shl
xor
scas
ins
es
out
pop
pop
gs
mov
ror
mov
aas
(bad)
add
xor
pop
repnz
out
jbe
ins
(bad)
(bad)
jmp
cdq
outs
das
xchg
into
js
(bad)
fnstcw
or
mov
loopne
adc
js
iret
jle
(bad)
test
mov
ret
(bad)
(bad)
mov
idiv
int
add
cmp
mov
nop
dec
cld
(bad)
jg
shr
jg
jl
cli
int
jne
pop
jmp
(bad)
mov
mov
mov
jmp
pop
inc
sbb
mov
mov
(bad)
pop
call
adc
call
adc
daa
mov
xchg
mov
retf
(bad)
mov
js
(bad)
push
xchg
jbe
cmp
sub
jecxz
inc
cs
mov
jmp
push
sti
pop
es
aad
ret
jae
js
movs
clc
or
js
pop
data16
ins
call
inc
cld
cwde
dec
cwde
mov
es
out
dec
sbb
stos
jl
mov
popa
out
mov
das
clc
and
xor
jle
iret
test
repz
mov
in
and
xchg
cld
adc
(bad)
jmp
jmp
fst
xor
sbb
sbb
pop
jmp
xlat
loopne
call
fist
jg
(bad)
inc
and
je
(bad)
add
add
loop
out
push
pop
jle
inc
loopne
pop
scas
ins
cmp
jle
inc
ja
push
inc
inc
add
fsubp
aad
scas
xlat
loope
pop
push
adc
mov
inc
ficomp
jmp
add
mov
movs
jg
dec
cdq
jge
cmc
cwde
(bad)
adc
pop
and
(bad)
(bad)
jmp
scas
xor
mov
stc
nop
ds
imul
in
std
sbb
icebp
call
(bad)
mov
cld
jl
mov
(bad)
(bad)
call
nop
mov
mov
push
jl
inc
fild
push
xchg
es
and
mov
jne
gs
stos
(bad)
jmp
cmp
ret
repnz
sahf
inc
sub
pop
sub
repz
loop
ss
jnp
data16
outs
add
movs
stos
push
or
jmp
mov
jg
retf
push
jp
sub
cmps
cli
cmp
enter
mov
and
rcr
cmc
rcl
(bad)
jmp
jp
sahf
es
aas
sti
into
cld
push
mov
sub
push
jmp
mov
popa
mov
dec
push
jmp
icebp
ss
data16
leave
fimul
loopne
sti
ja
sub
(bad)
push
ret
cmp
jle
adc
mov
push
icebp
mov
mov
push
retf
loop
(bad)
(bad)
sub
push
stos
or
push
push
add
cld
cs
mov
std
add
inc
fld
xchg
inc
cs
or
jp
pop
push
les
inc
cs
sar
(bad)
jmp
add
(bad)
js
test
test
stos
les
inc
xchg
aam
(bad)
cmp
(bad)
adc
scas
cmp
push
mov
(bad)
(bad)
test
neg
mov
loope
dec
jmp
mov
push
xor
das
xlat
data16
add
(bad)
call
add
xchg
jmp
ja
out
je
xchg
or
xchg
mov
xchg
or
jne
ja
cmc
mov
sbb
jmp
imul
int3
(bad)
mov
aaa
repnz
cmp
out
mov
addr16
(bad)
addr16
jge
outs
aaa
pop
shl
ret
shl
mov
(bad)
inc
cmp
mov
les
fcmovu
pop
mov
adc
cmps
push
call
jmp
pop
(bad)
jle
stc
leave
mov
sub
xchg
push
sub
(bad)
push
inc
sbb
js
out
pop
push
pushf
loope
inc
(bad)
adc
xor
jge
mov
jle
shl
jnp
shl
cmp
popa
pop
icebp
push
adc
mov
cmp
jge
leave
(bad)
bnd
hlt
sub
(bad)
inc
pop
rcr
pop
sub
add
repnz
mov
ss
hlt
jmp
mov
into
pop
inc
std
jecxz
and
loopne
sub
jbe
div
adc
arpl
call
xchg
jmp
popf
cs
(bad)
mov
cmp
hlt
(bad)
push
jmp
xor
dec
sbb
int3
jae
mov
xchg
xlat
jmp
push
in
(bad)
in
lock
sahf
cs
cli
hlt
push
std
(bad)
call
mov
push
xchg
popa
mov
mov
dec
std
movs
popf
mov
(bad)
jp
lods
call
xchg
fisttp
clc
movs
xor
das
sub
int
pop
in
add
jbe
adc
xchg
gs
or
dec
clc
sbb
ror
sti
movs
lahf
mov
cmp
(bad)
cmp
shr
adc
(bad)
call
xor
sar
jmp
sub
clc
mov
pop
adc
sub
jg
(bad)
(bad)
mov
out
jge
cld
xchg
jle
loop
mul
mov
(bad)
hlt
mov
hlt
cmc
(bad)
mov
adc
and
cmp
mov
out
mov
shl
fbld
loop
(bad)
fisttp
fbld
mov
cmp
mov
push
iret
fsqrt
mov
inc
jmp
push
lock
xor
(bad)
inc
je
cmp
lahf
int
mov
cld
push
cmp
inc
cld
adc
sti
stc
aam
repnz
es
sbb
adc
(bad)
push
pop
out
(bad)
mov
jb
dec
scas
xchg
push
dec
std
int
jnp
nop
aad
push
mov
cmc
(bad)
fpatan
leave
scas
movs
or
fucomip
jne
jmp
sub
les
(bad)
dec
jle
push
ficomp
sbb
cli
aaa
call
sti
inc
mov
out
xchg
and
or
lods
sbb
jmp
das
clc
(bad)
out
test
push
arpl
inc
mov
loope
pop
mov
pop
(bad)
hlt
call
(bad)
jmp
std
ret
(bad)
push
push
or
ja
jo
ss
and
(bad)
inc
push
rcl
stc
imul
stc
dec
mov
xchg
out
repnz
idiv
dec
sub
(bad)
(bad)
call
in
xor
in
push
outs
movs
jl
mov
fwait
(bad)
sbb
adc
mov
cmp
stos
int3
aad
loopne
(bad)
(bad)
inc
jle
or
out
popa
fisttp
scas
cmp
and
(bad)
(bad)
(bad)
(bad)
mov
outs
jns
aaa
adc
int
xchg
xchg
clc
fsubr
repz
cmp
pushf
and
add
dec
xchg
std
sbb
sub
loop
sbb
pushf
fwait
jmp
ret
mov
push
loop
cld
sbb
push
ret
pop
cmp
cmp
add
lods
hlt
push
iret
(bad)
dec
add
dec
push
jo
or
and
mov
ins
(bad)
jmp
(bad)
(bad)
(bad)
in
jno
mov
imul
call
sahf
mov
das
aad
call
mov
mov
add
fbld
push
(bad)
psraw
jb
cwde
loop
loopne
push
jae
xor
scas
popf
call
sbb
jno
xchg
adc
sar
aaa
cld
pop
xchg
mov
push
dec
cmp
jg
fisub
mov
lock
retf
iret
rcr
pop
pop
jns
shl
xchg
fwait
xchg
(bad)
(bad)
movs
push
(bad)
fisub
loopne
aaa
jb
adc
stos
cmp
call
sbb
mul
(bad)
(bad)
inc
stc
loop
jbe
aaa
cmp
mov
push
mov
sar
cmp
stc
hlt
fld
mov
and
inc
push
inc
(bad)
or
xchg
or
dec
pop
cli
pop
xchg
sahf
retf
cmps
ss
(bad)
iret
outs
cmp
lock
cld
cmp
inc
pop
nop
jnp
iret
mov
popf
xchg
outs
stc
push
(bad)
jnp
sbb
xchg
adc
cld
jno
ret
scas
inc
pop
fwait
clc
jmp
test
mov
jns
push
(bad)
(bad)
jg
mov
shl
enter
dec
dec
jo
mov
(bad)
(bad)
inc
jae
ins
ds
outs
mov
(bad)
sti
loope
adc
aaa
ja
in
cwde
sar
xor
mov
addr16
call
sub
xlat
sub
sub
jl
shl
(bad)
ds
call
and
mov
mov
jnp
cs
push
adc
cmp
xor
cmps
mov
inc
(bad)
cmp
fisttp
sub
fdivr
or
sti
scas
push
cld
xchg
sbb
clc
int
mov
mov
pop
cmp
jl
push
icebp
pusha
clc
sub
and
pop
(bad)
(bad)
inc
xchg
xor
stc
pushf
cld
fstp
dec
push
fsubr
fcomip
loopne
and
xchg
shr
dec
out
sub
and
sbb
pusha
adc
mov
jmp
(bad)
dec
gs
loope
test
out
adc
jp
dec
adc
add
dec
fist
inc
leave
adc
mov
push
xchg
jmp
repnz
(bad)
(bad)
push
sbb
aam
mov
pop
push
loopne
bnd
adc
or
adc
cmps
and
or
out
xor
popa
pop
out
jecxz
dec
inc
pop
inc
push
hlt
ds
arpl
adc
(bad)
mov
hlt
loope
sar
call
sar
inc
jbe
or
(bad)
(bad)
dec
xchg
pop
sar
push
and
mov
std
sbb
repz
and
inc
cli
add
lahf
push
push
das
push
and
add
adc
lods
frstor
jge
mov
mov
bound
xchg
loop
call
xlat
mov
into
fs
adc
dec
mov
lock
adc
push
ins
outs
loop
xchg
int3
sub
sar
push
fbld
mov
lods
xor
fld
(bad)
sbb
(bad)
mov
or
ja
data16
jmp
test
mov
in
pop
sub
mov
and
adc
out
xor
mov
pop
loopne
lds
add
(bad)
(bad)
(bad)
(bad)
inc
aaa
sbb
ret
repz
shr
(bad)
sbb
pusha
loope
xchg
mov
popf
cmps
inc
jp
dec
inc
(bad)
mov
cld
fcomip
call
dec
xchg
dec
clc
inc
out
mov
inc
popf
cmp
inc
jb
adc
mov
into
(bad)
(bad)
(bad)
call
mov
cmp
clc
mov
xchg
fcom
xchg
push
pop
fcomip
(bad)
push
dec
xchg
cld
push
sub
dec
add
mov
inc
inc
std
movs
adc
and
push
pop
aam
dec
jg
jmp
cmp
or
aam
(bad)
dec
jmp
mov
(bad)
les
call
(bad)
inc
dec
sub
mov
adc
jmp
sub
xchg
xchg
out
cwde
jg
fnsave
idiv
js
fldenv
std
lods
sub
jnp
leave
sar
cli
in
ja
rol
xor
push
xlat
push
mov
add
push
sbb
call
scas
ja
aad
push
mov
cli
aad
mov
mov
pop
and
out
(bad)
cli
sub
mov
inc
cli
push
leave
jge
scas
in
jns
(bad)
out
clc
(bad)
(bad)
sub
cmps
shl
popa
jb
test
int3
add
cdq
aam
sbb
lea
shr
jmp
mov
cwde
or
(bad)
(bad)
fld
mov
jnp
sar
mov
dec
xor
add
add
jg
test
hlt
sub
idiv
push
mov
mov
ss
in
mov
pushf
xchg
fsub
lds
sbb
inc
jne
cmps
leave
outs
dec
cmp
in
or
out
imul
cmp
sar
push
dec
repnz
mov
test
icebp
movs
ds
jnp
loopne
cmp
sbb
call
int
cmc
mov
hlt
push
into
(bad)
das
(bad)
fcomip
data16
js
inc
outs
dec
xchg
sbb
dec
in
mov
leave
push
rcr
dec
xchg
call
jmp
push
in
ret
inc
xor
jo
stos
(bad)
push
test
pop
data16
(bad)
jmp
sahf
dec
xor
lea
jae
dec
jg
stc
mov
or
jle
jae
idiv
(bad)
(bad)
(bad)
jge
add
sub
pop
test
jne
push
jmp
out
inc
les
shr
push
fidiv
(bad)
(bad)
(bad)
jmp
xchg
pop
call
push
dec
pop
dec
push
jge
aaa
dec
cmp
jnp
ret
icebp
xchg
std
js
push
cmc
and
icebp
nop
dec
mov
inc
jmp
fistp
and
pop
mov
shr
pop
xchg
call
add
dec
dec
(bad)
mov
jmp
or
jmp
xchg
in
jmp
mov
mov
xor
neg
mov
push
loope
and
sbb
pop
ja
xchg
(bad)
xor
retf
jmp
bound
es
and
(bad)
(bad)
stc
sub
mov
dec
fistp
xor
mov
repnz
icebp
jle
push
out
mov
and
mov
fisttp
ins
push
js
call
cmp
xchg
adc
fwait
dec
in
xchg
adc
mov
(bad)
(bad)
(bad)
cmp
jmp
ds
jbe
lods
cmp
xchg
push
icebp
and
mov
adc
(bad)
dec
gs
clc
leave
les
pop
stos
pop
sar
cmp
cli
(bad)
fild
shr
mov
iret
mov
cmp
pop
cmc
jmp
sbb
mov
and
pop
jle
or
and
(bad)
not
outs
pop
icebp
(bad)
(bad)
jg
dec
loop
test
leave
sbb
sub
repz
and
jecxz
repnz
(bad)
dec
jb
loope
stc
fadd
(bad)
xchg
pop
loopne
sub
jns
inc
mov
(bad)
cmp
lahf
push
push
push
arpl
scas
add
fldenv
mov
cld
xchg
or
sbb
push
xchg
ins
ficom
shr
clc
jmp
pop
aaa
jg
inc
mov
jae
add
sbb
dec
cli
and
in
jle
stc
dec
dec
fwait
dec
xchg
fst
call
lahf
cld
hlt
in
mov
je
sub
inc
or
outs
std
push
adc
nop
jle
pop
hlt
xchg
aas
mov
jl
arpl
stos
push
mov
dec
mov
push
jmp
clc
pop
inc
fbld
cmp
rcr
and
arpl
das
mov
leave
outs
ficom
adc
je
call
addr16
out
sbb
leave
retf
push
(bad)
dec
inc
stc
pop
mov
in
retf
dec
mov
mov
(bad)
retf
loopne
sub
or
fs
and
jle
pop
loopne
sub
in
scas
rcl
push
(bad)
(bad)
mov
pop
jnp
scas
xchg
fcom
mov
imul
adc
fcomp
(bad)
call
out
clc
inc
sub
stos
add
dec
mov
jbe
hlt
scas
call
mov
and
pop
hlt
pop
sub
xchg
(bad)
(bad)
std
repz
dec
lods
push
shl
in
mov
pop
push
dec
add
cmp
cld
or
(bad)
(bad)
(bad)
call
cmc
push
jns
lods
ins
jnp
cld
aas
xchg
adc
xchg
pop
jg
sbb
lods
pop
ret
rcl
cwde
adc
(bad)
(bad)
inc
jbe
jmp
mov
xchg
aad
hlt
inc
and
cmp
inc
mov
stos
aad
cmp
mov
dec
(bad)
push
sti
iret
push
mov
push
lods
shr
xor
cmp
add
add
les
sahf
ins
cmc
pop
pusha
push
dec
sbb
loope
jmp
or
popf
hlt
(bad)
sub
test
cdq
sub
adc
(bad)
(bad)
(bad)
jmp
push
xchg
and
xor
push
cli
xor
pusha
test
loop
push
dec
(bad)
push
std
es
rcl
in
adc
xor
jge
jae
dec
sub
(bad)
(bad)
(bad)
xor
js
inc
jp
sub
cmp
dec
ins
fdiv
inc
not
sbb
outs
sar
fcomip
push
dec
pop
fimul
pop
(bad)
inc
iret
sbb
in
pusha
mov
jo
push
daa
or
sub
cmp
xor
mov
lahf
je
cmps
mov
pop
adc
(bad)
shl
mov
cmps
adc
mov
ss
dec
lahf
and
add
(bad)
mov
mov
pop
out
dec
cmp
dec
mov
mov
and
(bad)
(bad)
(bad)
call
mov
fisubr
mov
outs
xor
into
mov
(bad)
fld
dec
add
repnz
mov
pushf
das
pop
mov
enter
(bad)
mov
mov
adc
imul
cmp
int
out
push
pop
scas
retf
(bad)
(bad)
call
sahf
jp
mov
ficomp
popa
xchg
hlt
test
cmc
jmp
(bad)
(bad)
fcomip
jge
sahf
or
lds
push
dec
pop
jl
neg
scas
mov
(bad)
sti
push
(bad)
std
loopne
mov
mov
enter
stc
loopne
ds
xchg
push
mov
jmp
outs
or
push
add
and
in
cmp
dec
int
(bad)
(bad)
(bad)
call
xor
mov
lock
cmps
frstor
out
push
imul
aad
xchg
(bad)
clc
sar
pop
cld
retf
arpl
xchg
ficomp
repnz
call
mov
or
(bad)
fnstenv
mov
lahf
(bad)
leave
dec
aas
mov
fld
(bad)
jae
fcmove
xchg
es
(bad)
(bad)
(bad)
cld
sub
das
lock
lods
into
fs
loopne
mov
cmps
setle
(bad)
repz
dec
cmp
or
push
sub
mov
lea
ret
(bad)
xchg
adc
jg
(bad)
stc
sbb
out
movs
cmp
push
pushf
adc
sub
jl
(bad)
mov
inc
cli
mov
scas
popa
or
or
repz
(bad)
(bad)
inc
outs
out
mov
xor
mov
jle
retf
add
dec
cmps
push
inc
faddp
xchg
sbb
(bad)
jmp
(bad)
pushf
(bad)
sahf
jle
cli
out
icebp
popf
(bad)
fisttp
jmp
(bad)
in
push
and
jg
jmp
clc
outs
adc
push
inc
jmp
xchg
pushf
(bad)
(bad)
(bad)
(bad)
sti
ins
dec
jno
jl
dec
xchg
xor
les
mov
jge
icebp
stc
jecxz
pop
lock
cmp
push
mov
cmp
jecxz
nop
iret
ret
movs
enterw
loop
rol
dec
test
jmp
mov
or
jne
lods
adc
int
ja
cmps
neg
and
mov
bound
test
data16
push
sbb
das
jge
hlt
lods
(bad)
call
fisub
rol
jecxz
imul
les
call
push
sar
stos
or
(bad)
test
mov
cmp
sti
fidivr
hlt
es
xchg
les
popa
(bad)
cwde
inc
(bad)
(bad)
(bad)
(bad)
clc
jl
mov
adc
xor
pextrw
mov
imul
(bad)
(bad)
(bad)
push
seta
into
xlat
sahf
cwde
test
push
mov
mov
pop
pusha
mov
(bad)
(bad)
(bad)
cmp
fmul
mov
sbb
jnp
sbb
jnp
test
and
mov
(bad)
fsub
mov
outs
iret
push
jno
mov
mov
push
sbb
retf
movs
loopne
fdiv
leave
push
call
out
addr16
out
(bad)
mov
pop
ffreep
pop
into
imul
std
(bad)
(bad)
mov
cs
repnz
xchg
or
lea
jno
into
stc
xchg
xchg
sbb
mov
dec
sar
or
inc
xchg
ror
xchg
jle
icebp
pop
xor
pop
inc
sahf
(bad)
adc
popf
jmp
mov
mov
dec
sti
loop
retf
inc
idiv
hlt
test
sbb
aam
jmp
jmp
adc
pop
fisub
stc
jnp
jbe
xchg
jl
mov
gs
(bad)
(bad)
(bad)
call
cdq
jae
mov
mov
push
addr16
daa
iret
jmp
cmp
jmp
cmps
sub
(bad)
(bad)
(bad)
push
inc
ja
cmp
dec
sahf
loope
mov
mov
mov
hlt
push
sahf
dec
push
mov
jmp
dec
into
adc
leave
popf
lods
or
out
xor
daa
cmp
mov
pop
mov
(bad)
mov
lock
mov
js
jge
xlat
push
leave
test
lahf
(bad)
(bad)
(bad)
jmp
mov
push
(bad)
sti
aad
jl
cld
lea
aaa
jp
repz
dec
enter
dec
lock
in
loopne
cwde
mov
loop
jnp
xor
ins
(bad)
(bad)
cmp
and
adc
push
adc
rep
into
(bad)
ds
jae
mov
int
fcomip
fbld
popa
pop
(bad)
fcomp
lock
repz
pop
cmp
pushf
cmp
sbb
cli
dec
hlt
jp
mov
jecxz
inc
inc
outs
cli
sub
(bad)
aas
(bad)
(bad)
add
mov
(bad)
(bad)
dec
loopne
into
outs
mov
mov
iret
rcr
adc
outs
cmp
fist
(bad)
call
mov
mov
(bad)
outs
(bad)
fdivr
and
(bad)
inc
mov
loope
jmp
in
cwde
pop
outs
or
les
(bad)
stc
add
jg
cld
or
sub
mov
mov
(bad)
jmp
loope
int3
fild
fsub
not
test
mov
mov
retf
inc
hlt
(bad)
(bad)
jge
mov
ss
xor
cdq
pushf
fiadd
iret
into
mov
xchg
call
gs
or
aad
test
cmp
fstp
sub
cdq
mov
stos
jl
jg
in
mov
sub
rol
scas
out
sub
jmp
mov
ret
jg
inc
(bad)
pusha
(bad)
dec
sti
xor
test
sar
xor
(bad)
icebp
add
and
imul
dec
fistp
cmp
test
loop
jle
dec
icebp
or
call
cmp
dec
in
ins
add
jg
push
or
jmp
ins
jb
cld
mov
mov
(bad)
mov
les
shr
mov
rcl
jno
loopne
cmp
sub
push
leave
cmps
mov
aaa
and
into
scas
cmps
add
inc
idiv
fsub
(bad)
xor
pop
hlt
push
adc
mov
lods
dec
add
into
lahf
mov
repnz
jmp
adc
dec
jne
addr16
mul
or
mov
ja
cli
jmp
in
mov
mov
mov
dec
xchg
fnsave
dec
mov
fdivp
sar
cmps
inc
out
and
dec
xchg
(bad)
(bad)
dec
cli
sar
xchg
bound
aas
jg
out
sbb
cld
and
ja
sub
mov
cmp
xchg
fcomi
mov
cli
out
clc
mov
iret
scas
pusha
mov
jb
pavgw
(bad)
fcomip
inc
pusha
jnp
shr
cli
in
push
adc
mov
jb
dec
(bad)
(bad)
dec
mov
pop
enter
test
cs
dec
pop
mov
(bad)
cld
pop
scas
int3
daa
leave
mov
ins
mov
clc
sub
cmp
or
mov
hlt
mov
(bad)
ja
dec
mov
das
or
sbb
js
sbb
inc
scas
fabs
pop
mov
mov
enter
mov
pop
jmp
ret
mov
jno
out
in
cmp
test
cmp
pop
mov
cld
or
call
loopne
jl
fidivr
inc
and
mov
push
(bad)
jmp
nop
out
sub
jmp
repnz
in
enter
push
std
into
cmc
lahf
and
jnp
hlt
xchg
scas
in
push
dec
(bad)
fsubr
test
mov
in
inc
jecxz
(bad)
ds
mov
add
dec
mov
repz
push
retf
mov
inc
test
push
leave
(bad)
mov
ja
inc
pop
cmp
loope
cmp
xchg
jge
pop
xlat
inc
out
ss
test
out
jl
push
retf
add
loope
or
in
movs
pslld
jbe
(bad)
jg
mov
out
xor
mov
cmp
sti
cld
(bad)
adc
and
je
jl
(bad)
(bad)
call
outs
xchg
in
popf
leave
(bad)
movs
clc
cmp
hlt
cld
es
fbld
mov
test
and
(bad)
(bad)
mov
cmc
dec
lahf
popf
xor
add
(bad)
mov
cmp
test
(bad)
call
fs
lock
loop
xchg
cld
pop
lahf
iret
cmp
mov
push
inc
repz
aam
sar
jg
lahf
out
pop
xchg
inc
repnz
cmp
add
sbb
shl
adc
push
lahf
dec
jno
push
rcl
in
xor
(bad)
dec
ins
movs
inc
hlt
jge
(bad)
add
retf
xor
inc
sahf
fs
(bad)
fld
(bad)
ja
inc
mov
push
add
xchg
out
into
pop
fcomp
(bad)
(bad)
(bad)
inc
jecxz
or
jle
xchg
sahf
cld
adc
rcr
stos
clc
(bad)
(bad)
call
repnz
cmp
xor
push
or
hlt
cmp
or
sub
mov
loop
(bad)
jmp
add
daa
iret
outs
mov
fnstcw
pusha
adc
jp
loopne
(bad)
fisttp
shl
push
cs
sbb
cld
xor
dec
idiv
(bad)
(bad)
jle
jno
jnp
xlat
mov
jecxz
loopne
repnz
inc
dec
in
adc
out
ror
test
(bad)
(bad)
ffree
pop
add
(bad)
les
js
mov
mov
scas
in
jne
jmp
sbb
mov
lds
repnz
sbb
dec
in
xor
hlt
dec
movzx
push
test
push
xchg
aas
cmc
cmps
ret
daa
test
sub
push
push
mov
out
inc
xchg
mov
addr16
lods
pop
paddb
push
sub
mov
(bad)
jmp
loopne
or
and
push
(bad)
call
lods
test
jno
out
jnp
mov
adc
inc
aas
pop
call
jg
es
das
out
lock
data16
add
neg
(bad)
(bad)
dec
adc
ret
inc
or
inc
pop
mov
std
xchg
ins
popf
xchg
push
(bad)
push
lock
es
mov
mov
ror
jb
or
test
push
mov
fbld
sti
push
pop
scas
add
clc
jmp
add
cs
push
sahf
cmps
mov
shl
cmp
sub
or
pop
cdq
clc
(bad)
(bad)
shl
int
lods
adc
xchg
pushf
sub
call
cli
sahf
mov
fisttp
mov
mov
movs
popf
retf
(bad)
(bad)
call
pop
das
out
pop
adc
rsqrtps
aaa
cmp
push
loopne
jnp
fucomip
(bad)
jnp
fdivr
cmp
cmpxchg
in
mov
mov
jg
fild
cmps
jl
push
mov
or
repnz
push
add
fbld
(bad)
(bad)
jg
cmp
push
cmp
add
pop
cli
jb
add
and
shl
xchg
mov
add
ds
cli
sub
cld
sbb
icebp
les
mov
(bad)
jmp
sbb
xchg
mov
daa
xchg
cli
in
cmp
add
int3
(bad)
adc
sbb
jnp
sbb
push
arpl
or
dec
push
push
out
bound
hlt
(bad)
(bad)
(bad)
jl
dec
hlt
pop
sub
das
arpl
fidivr
or
icebp
push
pop
lods
xor
fwait
es
(bad)
(bad)
jg
or
sub
js
mov
ds
mov
and
in
clc
xchg
leave
pop
loopne
push
push
pop
hlt
fdiv
and
in
or
dec
js
retf
aas
sub
ficom
sbb
ins
cli
rcl
int3
sbb
retf
adc
out
jbe
inc
(bad)
lahf
lea
(bad)
call
push
xchg
pop
pop
or
push
lods
jae
lea
jmp
mov
jb
sbb
out
sbb
mov
lock
mov
(bad)
(bad)
(bad)
jmp
iret
pop
xchg
inc
rol
push
jno
jle
mov
mov
stos
call
sub
(bad)
call
aas
mov
std
xchg
push
cmp
(bad)
mul
and
pop
sub
push
mov
inc
bound
fbstp
(bad)
ret
mov
aas
sti
stos
gs
inc
xchg
sbb
nop
(bad)
fistp
push
xor
jge
lods
iret
das
cli
(bad)
call
stc
aad
lods
mov
std
push
scas
scas
jp
and
jecxz
fistp
xchg
inc
push
rol
mov
sub
mov
mov
jl
jb
lea
rol
mov
xor
jmp
add
lds
cmps
and
fistp
sub
(bad)
(bad)
cmp
dec
scas
outs
jno
addr16
(bad)
mul
gs
mov
dec
sbb
ins
out
or
jp
aam
inc
push
std
add
pop
(bad)
(bad)
(bad)
jg
clc
or
scas
test
repnz
sub
cmp
xor
into
loopne
pop
push
xchg
mov
sub
pop
les
mov
jne
cmp
(bad)
jle
neg
push
ins
cwde
stc
or
ss
jbe
(bad)
(bad)
(bad)
(bad)
push
push
in
imul
push
loope
clc
nop
(bad)
pop
std
or
add
lods
jb
(bad)
xchg
lahf
repz
and
in
jl
adc
(bad)
rcl
xor
stc
(bad)
(bad)
(bad)
jmp
push
sbb
lods
cmp
xchg
loop
retf
idiv
push
hlt
out
(bad)
sti
adc
dec
mov
in
dec
call
into
clc
adc
push
aam
or
pop
(bad)
(bad)
(bad)
jmp
pop
inc
pushf
repnz
out
jmp
sti
cmp
stc
stos
xchg
jnp
xor
stos
movs
lds
push
dec
cmps
cld
test
sti
idiv
fcomip
pop
fadd
out
mov
dec
ret
stos
add
pop
hlt
lock
jl
test
int3
jg
add
xchg
(bad)
sti
rol
(bad)
(bad)
(bad)
jmp
daa
lods
dec
in
leave
jae
pop
push
jns
(bad)
pop
pop
jne
data16
loope
jmp
pop
(bad)
mov
repz
mov
or
dec
dec
xchg
push
ja
aas
jg
(bad)
push
(bad)
retf
aam
jle
les
(bad)
mov
or
jmp
xchg
test
sbb
jge
lea
cli
cmps
popf
add
fwait
(bad)
(bad)
mov
loope
aaa
clc
test
push
(bad)
enter
std
sub
jbe
pop
(bad)
(bad)
(bad)
(bad)
jmp
repnz
pop
jg
loope
dec
pop
jle
mov
fnstenv
fs
out
sub
clc
(bad)
dec
xchg
cmps
jle
jmp
fild
in
ss
clc
cmp
aad
call
dec
(bad)
push
jnp
loopne
jge
jmp
jmp
jmp
(bad)
fist
pop
dec
pop
xchg
jo
das
mov
mov
add
call
stc
lds
mov
mov
vucomisd
or
mov
jmp
std
mov
adc
jge
stc
rol
test
aas
sbb
mov
lock
stos
push
cmp
ret
aas
dec
sahf
xchg
shl
jmp
xchg
es
pop
sahf
mov
lods
sahf
aaa
icebp
and
mov
or
fstp
lock
call
jbe
pop
add
sub
mov
push
mov
bnd
ret
(bad)
push
clc
ss
jnp
aas
mov
fwait
jbe
add
ret
add
pop
std
mov
inc
fs
stc
cmp
push
mov
and
(bad)
(bad)
(bad)
(bad)
cld
jae
xor
loopne
mov
pop
ins
stos
retf
sbb
pop
mov
pop
adc
(bad)
(bad)
dec
add
xor
sbb
jge
inc
inc
xor
js
repz
mov
test
pop
(bad)
cmp
push
jne
dec
or
not
int
sub
pop
cmc
push
pop
fbld
repz
mov
fdivr
(bad)
(bad)
jmp
sub
cmp
lock
mov
in
sbb
fsub
ds
mov
jmp
or
not
lods
and
les
jecxz
or
popa
shl
add
out
scas
or
(bad)
(bad)
cmp
cs
ret
ficomp
out
sbb
fiadd
inc
adc
pop
fwait
idiv
call
sti
gs
cmp
mov
into
sbb
sar
iret
inc
fild
add
(bad)
(bad)
aas
ret
jb
sbb
ror
clc
(bad)
(bad)
(bad)
out
pop
clc
mov
mov
inc
pop
aaa
pop
stc
push
add
jnp
fst
xor
push
add
ss
cmp
add
ja
(bad)
(bad)
jmp
out
movs
addr16
xchg
sti
xor
fsubr
jmp
inc
(bad)
(bad)
jg
mov
jl
dec
xchg
mov
int
js
add
(bad)
outs
and
cmp
(bad)
cmp
imul
mov
sub
into
jns
bound
out
adc
add
mov
adc
xchg
inc
xchg
fwait
(bad)
jg
in
jne
int
add
sbb
mov
popa
push
fnop
(bad)
cmps
jno
cld
aad
pop
icebp
fwait
xor
mul
(bad)
(bad)
push
pop
js
cld
iret
xlat
push
push
ja
das
fisttp
retf
mov
arpl
hlt
pop
mov
aaa
cmc
push
adc
adc
movs
and
adc
aas
sub
push
out
mov
xchg
das
cli
(bad)
(bad)
jge
(bad)
mov
shl
test
fsub
in
jae
xchg
and
inc
mov
pop
loopne
mov
fisub
mov
jo
out
outs
lods
mov
imul
(bad)
jg
loop
xor
out
adc
cdq
mov
jecxz
add
jmp
and
dec
sbb
mov
add
jle
(bad)
mov
(bad)
fnop
(bad)
inc
(bad)
lahf
adc
or
(bad)
(bad)
(bad)
jmp
mov
icebp
sti
cli
add
mov
lahf
int
mov
retf
pop
cmp
test
pushf
addr16
sub
test
(bad)
(bad)
(bad)
push
pop
xor
mov
push
in
imul
sbb
push
cmp
into
dec
stos
cs
cmp
jmp
iret
pop
inc
pop
xchg
mov
ds
push
adc
(bad)
(bad)
(bad)
(bad)
aas
xor
fmul
push
test
sbb
push
jno
mov
fisttp
push
jno
cmps
add
(bad)
push
out
fs
cmp
into
(bad)
fxch
cmp
clc
mov
inc
retf
stos
out
cs
sub
sbb
inc
je
adc
outs
hlt
xor
cwde
aam
ud0
nop
popa
lock
xchg
loopne
out
xchg
(bad)
mov
call
cld
or
mov
jo
dec
add
repz
(bad)
(bad)
(bad)
(bad)
fst
adc
test
loope
sahf
mov
loop
cmp
aam
and
mov
data16
inc
adc
add
cmc
dec
dec
sub
repz
(bad)
inc
adc
int3
xchg
retf
or
fisub
jge
mov
out
mov
or
(bad)
(bad)
jmp
pop
and
xchg
cmp
push
mov
cmps
(bad)
sbb
dec
leave
cmp
test
(bad)
push
pop
sar
data16
arpl
rcl
outs
icebp
and
mov
popf
push
enter
cld
dec
jl
jl
inc
shl
sub
scas
inc
push
sbb
push
int3
cmp
sar
(bad)
(bad)
call
fidivr
int3
cmp
jno
pop
cli
imul
outs
mov
xor
jae
mov
(bad)
(bad)
(bad)
fst
into
cwde
ret
push
jmp
rcl
inc
scas
and
stc
sahf
mov
(bad)
(bad)
call
in
mov
pop
nop
mov
cmp
rcr
sbb
(bad)
in
adc
fcom
nop
sbb
(bad)
(bad)
call
pop
addr16
xchg
xchg
mov
pop
mov
cmp
fld
sbb
int3
arpl
(bad)
(bad)
(bad)
(bad)
jl
and
mov
jae
into
mov
(bad)
fcomp
aad
lea
mov
mov
(bad)
das
xchg
out
xor
sbb
inc
retf
icebp
fisttp
and
xchg
mov
(bad)
(bad)
call
mov
cld
int3
push
stc
add
fmul
mov
sti
pushf
call
std
dec
mov
xchg
push
mov
in
stos
pop
out
sbb
icebp
jecxz
adc
outs
cli
call
jbe
sbb
fdivr
out
ret
ins
je
test
jecxz
(bad)
(bad)
(bad)
jmp
sahf
jmp
or
cs
aas
fldenv
adc
pop
leave
or
and
jp
iret
lods
pop
mov
(bad)
cld
fsub
or
sti
xchg
pushf
mov
call
mov
movs
mov
adc
(bad)
(bad)
call
fist
mov
mov
xchg
mov
xlat
sub
fild
jge
sub
out
cld
(bad)
push
xor
jecxz
fadd
(bad)
ds
xchg
das
mov
pop
jno
xchg
addr16
ja
and
loop
push
(bad)
dec
les
xor
retf
cmp
adc
jg
ds
hlt
stos
push
mov
in
arpl
cmp
add
out
mov
pop
(bad)
mov
(bad)
(bad)
dec
mov
dec
pop
inc
retf
mov
ret
ins
adc
adc
inc
mov
dec
repnz
pop
outs
push
icebp
data16
(bad)
inc
sub
push
das
pop
in
ja
aaa
jecxz
call
mov
or
cmc
call
(bad)
jmp
es
sbb
mov
jmp
es
(bad)
pop
call
iret
bound
mov
jae
push
mov
(bad)
(bad)
(bad)
dec
out
iret
adc
adc
xlat
test
cld
mov
xor
(bad)
jge
mov
ins
(bad)
jmp
enter
xor
shl
pop
not
retf
cwde
test
cwde
rcl
pop
inc
outs
ja
imul
fidivr
dec
clc
sbb
dec
push
in
push
out
rcr
(bad)
in
out
std
in
add
sub
cmp
or
(bad)
mov
rcl
cmp
jge
fwait
inc
jl
test
mov
mov
mov
cmp
ror
repnz
lods
jae
movs
push
pop
call
out
jno
addr16
xor
imul
push
call
mov
mov
mov
movs
xor
(bad)
out
xchg
lock
push
rcl
ret
push
jne
fld
sbb
das
inc
test
xchg
rcr
lock
mov
int
(bad)
(bad)
(bad)
call
sti
into
(bad)
(bad)
fwait
xchg
jae
pop
mov
ret
std
fisub
fsubr
clc
inc
xchg
(bad)
and
jg
add
aas
adc
arpl
ja
lods
lahf
jl
gs
mov
(bad)
pop
scas
dec
cmc
out
movs
ret
cld
(bad)
dec
lock
mov
jo
(bad)
addr16
pop
ret
mov
mov
outs
ret
or
mov
xlat
mov
xchg
mov
(bad)
lahf
stos
rcr
dec
push
cli
(bad)
jmp
das
pop
(bad)
sub
stos
(bad)
cmp
ror
in
out
daa
adc
(bad)
(bad)
jmp
test
gs
clts
jg
cli
or
in
adc
retf
cli
fist
jmp
jnp
retf
mov
mov
cmp
iret
pop
dec
sar
(bad)
(bad)
jmp
xchg
cmps
cmp
pop
fwait
mov
fidiv
push
xchg
(bad)
outs
jb
sbb
add
(bad)
(bad)
(bad)
in
jb
scas
sbb
dec
je
xlat
adc
into
sbb
and
xor
lock
or
sub
repz
(bad)
call
scas
cmp
sub
dec
pop
(bad)
adc
call
cmp
pop
sub
mov
cld
pushf
sahf
bound
push
stc
inc
pop
outs
inc
mov
(bad)
sbb
add
repnz
pop
test
or
xchg
xor
sub
sar
mov
data16
sub
arpl
(bad)
(bad)
(bad)
jmp
ficomp
sbb
dec
sbb
ret
dec
adc
pop
fmulp
jmp
jmp
and
mov
sar
outs
cli
(bad)
out
ins
adc
cmp
cmp
rcl
xor
cld
jg
repnz
push
jo
inc
fisttp
jg
cld
jg
jg
sbb
lods
iret
shr
push
fadd
mov
sbb
or
cli
(bad)
mov
push
mov
cmp
into
pop
out
mov
iret
fldcw
test
hlt
xchg
mov
jb
lods
call
cmp
jno
push
js
jg
imul
pop
xchg
and
(bad)
jmp
pop
(bad)
fbld
sbb
repnz
push
push
imul
cmp
pop
hlt
hlt
das
adc
ins
std
mov
inc
sbb
cli
(bad)
(bad)
dec
jmp
fnstsw
aaa
jmp
cwde
(bad)
push
sbb
cmp
mov
outs
pop
aas
aad
jae
adc
mov
icebp
fsub
or
mov
dec
int
stos
popa
std
cmp
repz
cmps
(bad)
(bad)
(bad)
out
fcom
aam
jecxz
mov
sub
or
cli
pop
ss
gs
mov
jp
outs
(bad)
(bad)
jg
out
mov
outs
data16
and
jl
cmp
xor
and
mov
aaa
std
push
push
xchg
or
and
dec
sbb
adc
hlt
jl
(bad)
lock
jecxz
(bad)
mov
into
fimul
fisttp
cmc
or
cld
das
cli
cmp
call
outs
sbb
js
cmp
pop
add
sub
gs
(bad)
cmc
rol
mov
and
or
jmp
repz
dec
jl
ds
call
nop
into
mov
std
adc
and
cli
out
js
sti
ror
test
movs
cmp
adc
xchg
inc
sbb
addr16
xchg
(bad)
fisttp
lahf
aaa
loope
jle
xchg
push
std
outs
ds
mov
ss
gs
or
jl
or
idiv
push
push
sub
inc
dec
(bad)
stc
pop
adc
sub
xchg
test
lock
loope
inc
loopne
gs
(bad)
inc
jne
pop
rcr
pop
xor
(bad)
(bad)
jmp
inc
rcr
in
rol
xor
push
call
ja
pop
or
idiv
mov
pop
adc
xchg
xlat
cs
push
cmp
leave
mov
cmc
movs
rcl
out
xor
(bad)
(bad)
jg
pusha
cli
loop
int
out
das
and
cld
xchg
icebp
(bad)
jle
sti
push
xlat
pop
pop
xchg
clc
lock
jecxz
jle
out
(bad)
mov
add
mov
add
and
fwait
leave
mov
push
ins
out
repnz
mov
aad
aas
push
push
ret
(bad)
dec
xlat
pop
jns
pop
jmp
cmp
lods
or
pop
std
(bad)
(bad)
call
jge
(bad)
mov
out
pop
fwait
or
in
shl
sbb
cmp
mov
jmp
pop
rcl
adc
bound
jb
xor
imul
(bad)
push
xor
mov
sbb
xor
ins
retf
pop
pop
aas
je
xchg
fwait
mov
sahf
mov
pop
pusha
sub
popa
jo
iret
mov
jg
add
jmp
fwait
test
ja
(bad)
(bad)
(bad)
call
inc
jle
ds
std
xchg
xor
mov
mov
(bad)
aam
ss
sahf
and
jmp
(bad)
outs
repnz
in
sub
data16
imul
mov
jl
shl
imul
cli
call
sub
mov
xchg
sbb
push
stos
hlt
stos
mov
or
jecxz
(bad)
fsubr
(bad)
(bad)
(bad)
jmp
ds
pop
or
rcr
sbb
add
call
push
das
aas
movs
xor
cmp
jmp
inc
xor
aam
stos
mov
int3
fadd
neg
mov
jmp
(bad)
(bad)
fild
movs
test
das
cmc
sbb
mov
lock
lahf
dec
jl
pop
lock
dec
sbb
sahf
sub
jae
test
cmc
push
fneni(8087
pusha
shl
(bad)
(bad)
jmp
and
out
pusha
push
retf
daa
and
mov
sbb
add
fidivr
aas
mov
mov
loope
(bad)
call
jo
mov
lock
addr16
jne
fmul
iret
cmps
cmp
stos
or
(bad)
adc
push
dec
inc
scas
or
leave
idiv
hlt
cmp
(bad)
cmp
dec
movs
jecxz
or
ins
ja
int3
stc
pop
popa
mov
sub
stc
sahf
addr16
fwait
repz
mov
xchg
test
(bad)
in
pop
add
mov
dec
lea
xchg
shr
shr
dec
jmp
jle
jle
mov
jmp
mov
mov
cs
in
repz
loope
mov
mov
js
fld
cmp
fcom
pop
and
fcomp
cmp
call
pusha
imul
xor
mov
test
mov
dec
mov
or
jb
push
imul
lods
sbb
sahf
inc
fcomp
mov
imul
mov
cld
(bad)
in
pushf
loopne
xor
je
jecxz
push
mov
retf
(bad)
cdq
adc
jp
mov
(bad)
inc
out
and
shr
inc
scas
adc
in
mov
clc
jmp
cld
and
dec
loop
in
das
pop
push
cvtpi2ps
cmps
or
jae
mov
popf
mov
js
push
lods
out
or
arpl
cmp
(bad)
inc
movs
in
shl
jg
(bad)
stc
ficom
mov
(bad)
(bad)
inc
jmp
(bad)
push
psubw
dec
int3
nop
fstp
jae
ud0
inc
test
ss
clc
mov
in
push
(bad)
inc
mov
out
inc
cmp
icebp
mul
(bad)
out
clc
call
out
in
stc
dec
rcr
into
scas
test
arpl
daa
jecxz
out
out
scas
inc
mov
jmp
mov
sbb
dec
aam
sti
pop
in
cwde
repz
ss
mov
jge
out
or
cdq
stos
fnstcw
ds
(bad)
fild
dec
clc
jno
jo
fisttp
pop
loop
or
cli
call
jo
cld
addr16
imul
(bad)
(bad)
(bad)
push
mov
or
dec
and
mov
mov
xchg
les
push
mov
add
js
inc
pop
jbe
fdiv
adc
fxtract
loop
mov
and
pop
cmp
cmp
push
mov
push
sbb
out
lock
les
into
lahf
(bad)
cli
dec
out
mov
imul
add
(bad)
(bad)
(bad)
(bad)
mov
sbb
sbb
sar
mov
in
das
ins
sub
cmovne
rcl
(bad)
popf
inc
cmp
clc
fcmovnu
cwde
jae
sbb
call
pop
ja
iret
popa
push
ins
and
out
adc
loopne
ret
repz
lods
aam
fild
(bad)
stos
pop
cmp
clc
and
popf
push
nop
lods
push
int3
mov
add
std
enter
jns
mov
pop
out
add
ja
enter
in
outs
sub
mov
gs
jg
inc
inc
retf
mov
fild
push
and
xchg
es
jl
aaa
cmps
test
call
cli
bound
pop
cdq
push
test
ds
out
inc
or
xchg
jae
test
call
mov
(bad)
out
gs
jb
mov
cwde
stos
and
xchg
sahf
addr16
(bad)
inc
mov
lea
(bad)
loop
push
nop
das
mov
loopne
(bad)
jns
ret
(bad)
dec
ins
stos
jo
scas
mov
(bad)
popf
push
outs
mov
push
cld
scas
xor
je
enter
xchg
gs
dec
ret
(bad)
inc
ins
mov
cdq
jae
in
cli
sbb
fcom
mov
out
dec
fdivr
jmp
out
rcr
ins
xchg
jno
jb
das
adc
jecxz
mov
jg
cli
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
dec
fadd
and
dec
ret
and
xor
sahf
cmp
shl
(bad)
push
leave
jns
ins
call
(bad)
jmp
das
iret
cmps
jne
jo
ud0
sub
mov
rcr
test
ss
js
cli
mov
jg
cmp
cmp
fsubr
mov
jp
cli
clc
(bad)
(bad)
push
inc
lock
and
mov
mov
inc
mov
xchg
pop
pushf
cmp
add
loopne
mov
jo
jmp
les
out
in
inc
mov
sbb
add
jp
xlat
jmp
(bad)
dec
sbb
es
enter
stc
dec
dec
fisttp
dec
mov
jp
mov
(bad)
adc
fdivr
cdq
jmp
(bad)
jmp
(bad)
cmc
int
add
mov
aaa
outs
adc
fbld
sbb
jmp
jo
hlt
inc
sar
xchg
cmps
pop
mov
call
jg
call
sub
out
mov
dec
lock
stc
dec
ja
pop
or
jg
in
jmp
shr
cmc
mov
(bad)
mov
scas
dec
enter
ret
aas
(bad)
(bad)
(bad)
jmp
icebp
es
rol
into
push
dec
jae
(bad)
and
out
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
cmps
mov
push
popa
mov
popf
mov
mov
push
adc
fadd
icebp
and
pop
push
aas
leave
cmp
jnp
push
push
scas
mov
jg
and
push
dec
(bad)
(bad)
out
clc
repz
jge
jecxz
cmp
outs
ss
hlt
or
dec
je
and
mov
lea
jo
call
sub
xor
icebp
mov
xchg
or
repz
loopne
gs
(bad)
pop
push
mov
(bad)
(bad)
(bad)
jg
mov
cmp
adc
inc
adc
sahf
inc
and
mov
pop
xchg
(bad)
(bad)
jmp
mov
leave
mov
fcmovb
fnstenv
cs
dec
mov
(bad)
(bad)
call
iret
push
neg
push
pushf
imul
pop
frstor
jb
bound
std
aas
(bad)
idiv
jg
or
mov
xchg
jg
call
inc
add
or
scas
inc
mov
sub
lods
(bad)
call
cmp
fwait
rol
stc
adc
jecxz
pop
mov
lock
push
les
ja
add
xor
push
cmc
jle
hlt
idiv
(bad)
(bad)
fistp
fdiv
addr16
pop
loope
adc
mov
xchg
sahf
sbb
sti
test
cmp
and
outs
int3
mov
mov
mov
shr
mov
xchg
cmc
mov
and
(bad)
imul
dec
cld
mov
mov
sbb
pop
aam
inc
out
movs
loope
call
mov
jnp
cmps
rcl
mov
imul
rep
in
xor
stc
xor
ins
sbb
dec
or
sbb
dec
xchg
retf
or
adc
and
push
aaa
sbb
sbb
repz
daa
xor
jecxz
js
cld
(bad)
jmp
outs
gs
rep
fcmovnb
and
mov
cmps
cli
es
push
(bad)
call
and
ins
jge
xchg
pop
stos
adc
push
adc
push
mov
syscall
pop
pop
jl
pop
(bad)
dec
cs
push
imul
(bad)
(bad)
fist
ret
call
xor
call
das
sar
retf
es
les
jmp
and
mov
(bad)
(bad)
fdiv
jge
jp
shl
fs
aad
mov
push
jb
hlt
outs
(bad)
fbstp
cmps
pop
(bad)
(bad)
call
mov
aas
in
cs
mov
mov
(bad)
(bad)
(bad)
push
ja
jno
out
push
call
test
std
rol
add
cmps
mov
hlt
sbb
(bad)
std
ins
jno
out
(bad)
or
cvtdq2ps
out
xor
sbb
repnz
(bad)
ror
fild
(bad)
(bad)
(bad)
cmp
std
push
pop
test
loop
pop
into
mov
add
outs
loope
out
push
fisttp
jp
cwde
mov
jns
pop
sti
int
mov
imul
ins
int3
xchg
int3
cmp
jl
lods
iret
icebp
jmp
pushf
fidivr
ret
std
aaa
mov
sub
js
xchg
int3
(bad)
hlt
mov
test
xor
(bad)
push
stos
imul
jmp
mov
retf
jg
mov
std
data16
mov
les
push
jno
pop
in
mov
pop
cmc
mov
add
jp
pop
in
mov
out
adc
out
sub
loop
mov
sbb
mov
(bad)
jo
(bad)
(bad)
jmp
(bad)
std
fisttp
xchg
sub
xchg
xor
mov
test
dec
enter
pop
pop
(bad)
sbb
les
push
pop
iret
push
mov
xchg
outs
jmp
pop
(bad)
(bad)
aas
mov
pop
popa
shl
xchg
das
inc
mov
and
mov
add
mov
in
gs
mov
test
stos
nop
hlt
mov
mov
aaa
fdivr
mov
gs
fmul
dec
and
lock
(bad)
lods
dec
mov
(bad)
(bad)
call
(bad)
leave
imul
(bad)
ror
push
cmp
xchg
addr16
cmp
leave
repnz
(bad)
call
mov
mov
push
int3
js
dec
rol
test
gs
push
xor
cmc
mov
xlat
dec
pushf
sbb
js
or
inc
nop
mov
xchg
mov
mov
mov
mov
pop
test
adc
xchg
mov
and
pop
pop
mov
inc
int3
lds
test
cli
dec
(bad)
push
std
in
in
add
push
iret
jb
imul
jle
fst
rol
imul
scas
clc
(bad)
call
pop
repz
es
push
ins
dec
loopne
fisub
sbb
gs
je
not
hlt
cmp
scas
out
and
sahf
cmp
fisttp
loope
stos
dec
adc
mov
xchg
test
test
jo
call
cmp
jmp
jae
pop
(bad)
call
push
xchg
or
adc
push
movs
mov
sti
out
dec
sahf
ret
pop
hlt
(bad)
call
dec
retf
mov
(bad)
sub
push
out
nop
mov
jnp
(bad)
dec
mov
arpl
pop
outs
ja
stos
xchg
retf
sti
cld
sbb
mov
call
sti
jne
mov
movs
mov
sbb
(bad)
jmp
std
fist
inc
mov
pop
mov
mov
xchg
xlat
lods
imul
mov
pop
sub
out
(bad)
call
pop
pop
push
mov
jle
int
cmp
mov
js
xchg
inc
idiv
(bad)
jg
cld
std
mov
in
mov
jl
test
ins
retf
sbb
mov
mov
dec
add
pop
lock
lea
lds
dec
in
jge
jmp
cs
js
outs
sbb
or
movs
push
lock
dec
xchg
cmp
sti
mov
add
(bad)
(bad)
(bad)
out
leave
(bad)
and
sub
mov
out
ficom
pop
mov
hlt
ret
xor
ins
test
les
push
fdivr
das
and
jg
int3
adc
inc
inc
iret
cld
sar
(bad)
(bad)
(bad)
jg
cmp
rcr
mov
scas
rcl
cdq
mov
sbb
(bad)
(bad)
(bad)
(bad)
cmp
int3
stc
add
sub
pop
mov
inc
stos
push
lods
ret
inc
mov
xchg
out
shl
cmp
scas
pop
push
and
stc
xchg
call
mov
into
xchg
dec
div
pop
mov
stc
push
lahf
(bad)
call
(bad)
pop
dec
pop
imul
mov
jecxz
jmp
(bad)
(bad)
(bad)
(bad)
mov
jns
cmps
fisubr
sbb
jp
xchg
xchg
aaa
mov
mov
xor
jp
adc
jb
push
xchg
ds
(bad)
(bad)
clc
ja
into
jns
mov
mov
mov
lahf
mov
mov
mov
jmp
(bad)
in
call
loop
pushf
jmp
push
(bad)
mov
(bad)
ins
clc
pop
jmp
pop
sti
cmp
mov
(bad)
push
mov
in
(bad)
cmp
adc
push
loop
cmp
xchg
xchg
cmps
sbb
sbb
inc
sar
push
mov
push
xchg
xor
mov
mov
(bad)
fcmovne
aad
movq
jmp
inc
js
hlt
addr16
or
(bad)
sub
xlat
jmp
bound
jg
dec
clc
in
cli
lock
in
stos
sbb
(bad)
jmp
push
pushf
and
das
jmp
mov
(bad)
std
inc
repz
push
les
call
(bad)
gs
pop
sub
jmp
push
in
(bad)
(bad)
(bad)
jmp
pop
out
fwait
cmp
cmp
pop
ins
xor
sbb
rcr
push
sbb
(bad)
jg
lea
and
mov
inc
lahf
gs
inc
lock
mov
fild
add
push
sub
lods
jnp
mov
call
in
out
(bad)
imul
add
mov
inc
mov
mov
adc
sbb
jl
dec
mov
pop
dec
mov
(bad)
(bad)
call
dec
jb
lock
std
adc
imul
test
mov
(bad)
dec
clc
mov
bnd
imul
push
ja
cmp
or
repz
adc
fcomip
(bad)
(bad)
jnp
test
imul
jns
hlt
cmp
or
xchg
outs
mov
xor
and
mov
inc
mov
pop
arpl
sbb
icebp
test
xor
ins
pop
push
adc
cmc
dec
std
mov
jns
add
mov
(bad)
ds
(bad)
call
jae
sub
inc
xchg
aas
dec
or
mov
cmc
cmp
retf
jno
test
pop
(bad)
(bad)
(bad)
call
push
push
outs
xchg
retf
lea
iret
mov
(bad)
ret
mov
fist
test
call
(bad)
jmp
and
dec
leave
outs
int3
(bad)
fist
cmp
mov
add
test
cmc
jle
mov
call
lods
or
clc
sbb
js
outs
push
sub
data16
(bad)
(bad)
(bad)
jmp
pop
enter
mov
adc
in
jmp
mov
push
jp
dec
loope
sub
retf
and
cmp
xchg
pop
cld
pop
(bad)
mov
fwait
inc
ins
cmp
ins
dec
(bad)
(bad)
dec
xlat
in
imul
test
lods
mov
sub
and
cmc
(bad)
(bad)
dec
xor
sbb
sbb
icebp
(bad)
shr
std
mov
pop
or
jge
jl
dec
(bad)
pop
cld
retf
pop
jns
mov
aas
xor
mov
ret
adc
je
loopne
stos
(bad)
jmp
(bad)
div
pushf
sub
jbe
dec
loopne
xor
fst
(bad)
(bad)
jg
mov
pop
jne
retf
gs
xchg
adc
stos
sub
fcmovu
xor
sub
sbb
jae
call
xchg
push
jl
push
clc
or
call
lock
mov
push
repz
(bad)
(bad)
(bad)
fdivr
mov
and
jnp
mov
push
adc
or
icebp
cmp
(bad)
and
dec
arpl
ficom
push
xlat
lods
(bad)
sub
jl
jg
into
(bad)
fcomip
add
push
out
jne
mov
ret
mov
out
fsub
jmp
(bad)
movs
cdq
ins
pop
bnd
std
sub
outs
adc
pop
xchg
mov
add
ins
add
push
fidiv
std
(bad)
call
jae
lea
mov
push
sub
jg
pop
inc
pop
push
(bad)
jg
ins
(bad)
cmc
adc
mov
pusha
fnstsw
sbb
ja
xchg
(bad)
jmp
inc
jp
jbe
dec
pop
daa
scas
jo
test
mov
adc
icebp
cmp
jbe
lods
adc
cwde
stos
lods
adc
retf
(bad)
adc
pop
mov
sub
(bad)
sbb
and
and
xchg
xor
cmps
(bad)
test
ins
mov
jne
ss
scas
sbb
mov
(bad)
sub
mov
pop
test
jbe
push
and
mov
cld
(bad)
jmp
or
fild
pop
(bad)
pop
fdiv
push
mov
(bad)
(bad)
jmp
iret
push
cs
scas
js
dec
jns
scas
ror
and
mov
out
dec
pop
test
(bad)
dec
fdiv
and
inc
mov
jne
jge
lahf
inc
mov
fist
(bad)
out
sub
(bad)
(bad)
push
gs
stos
mov
mov
lods
in
add
cld
(bad)
fist
loope
imul
dec
mov
mov
cmps
cli
adc
fisttp
cld
inc
cmp
dec
sub
jg
pop
lea
iret
test
inc
fsub
or
rcl
fwait
mov
add
(bad)
inc
mov
sbb
pusha
das
lods
aad
inc
jecxz
daa
pusha
mov
cmc
(bad)
inc
sub
push
dec
jg
jge
mov
popf
inc
es
(bad)
fistp
cmp
repnz
enter
mov
std
cwde
lock
dec
xchg
hlt
jle
lods
sbb
sar
(bad)
dec
dec
fisubr
cmp
imul
call
in
test
or
test
jo
fmul
in
and
jae
jno
imul
mov
enter
outs
int3
mov
jge
mov
xor
jge
cli
lock
call
outs
mov
pop
mov
fsubr
push
retf
and
(bad)
xchg
ja
(bad)
(bad)
push
imul
push
jmp
and
mov
(bad)
icebp
xlat
in
lock
or
fwait
xchg
and
outs
clc
outs
movs
push
dec
pushf
xchg
pop
icebp
outs
clc
inc
(bad)
fcomp
mov
cld
jmp
xchg
aaa
sti
add
(bad)
jmp
(bad)
mov
xor
ja
dec
adc
mov
call
mov
cmc
mov
mov
mov
mov
xlat
aad
call
rcr
test
shl
mov
inc
jmp
loop
inc
stos
imul
icebp
cli
ds
(bad)
shl
ds
inc
mov
out
mov
dec
jle
dec
adc
stos
ret
lock
(bad)
cmps
jg
dec
out
fist
loopne
sub
mov
aaa
sar
mov
jmp
test
pushf
mov
rcl
stos
(bad)
jg
inc
mov
or
fwait
mov
ss
mov
pop
cmp
(bad)
(bad)
(bad)
(bad)
jge
ins
test
(bad)
sub
mov
xchg
jbe
mov
mov
xor
(bad)
push
imul
xchg
jmp
out
sub
mov
push
data16
call
dec
mov
push
jno
mov
call
mov
push
out
fbstp
pop
out
push
das
jae
scas
cdq
repz
lock
cwde
and
arpl
cmc
inc
sbb
popf
jbe
xchg
(bad)
inc
cli
xchg
adc
repnz
mov
push
mov
jmp
aas
and
push
cmps
enter
or
push
fsubr
push
cmp
xor
mov
pop
sub
mov
mov
adc
das
xchg
inc
inc
sti
idiv
mov
pop
(bad)
push
mov
jmp
xchg
adc
and
outs
mov
mov
out
fsubr
or
fnsave
lahf
gs
lds
jmp
or
pop
jmp
sub
inc
jmp
(bad)
(bad)
clc
cvtps2pd
loop
(bad)
dec
mov
loop
pusha
xchg
cs
std
jae
pop
je
(bad)
(bad)
dec
jmp
add
cmp
xchg
sbb
mov
(bad)
pop
mov
pop
adc
(bad)
dec
and
cld
pop
mov
jne
jns
pop
sbb
sub
fild
lods
outs
xchg
data16
add
retw
js
(bad)
jmp
ss
popa
aas
mov
ds
push
sbb
xor
sbb
mov
sbb
les
xor
imul
and
(bad)
push
dec
adc
sbb
and
and
mov
(bad)
xchg
xchg
push
fst
mov
repz
push
dec
(bad)
pop
cmp
outs
(bad)
dec
rol
fdivr
ret
shl
(bad)
stos
ins
into
adc
xchg
xchg
stos
maskmovq
mov
jmp
mov
scas
xchg
pop
stc
shl
fwait
(bad)
outs
clc
(bad)
cmp
add
enter
movs
xchg
mov
jb
sti
mov
(bad)
(bad)
jmp
ficomp
jns
in
into
movs
xchg
mov
or
pop
mov
jmp
test
mov
(bad)
dec
and
cwde
daa
lock
fsub
mov
nop
lock
or
out
mov
pop
out
test
or
and
(bad)
call
addr16
sub
xlat
and
icebp
adc
fst
mov
mov
adc
aaa
adc
fisubr
xchg
dec
mov
jne
out
(bad)
in
jg
fucomp
sbb
shl
(bad)
push
adc
push
cs
(bad)
repz
clc
out
pop
popa
pop
jbe
dec
cmps
mov
jne
mov
adc
scas
popa
dec
jg
retf
mov
and
push
cmovs
jg
call
xlat
in
mov
dec
or
(bad)
mov
mov
sub
dec
sbb
cmp
ret
xchg
dec
pop
add
outs
inc
(bad)
(bad)
jg
mov
div
stos
ds
inc
xor
(bad)
paddusw
(bad)
mov
leave
pop
dec
push
and
sbb
mov
xor
pop
cmc
(bad)
dec
in
les
pop
fidiv
mov
pushf
add
pop
mov
inc
shl
mov
outs
hlt
mov
and
loopne
(bad)
mov
(bad)
pop
jp
lock
fistp
sbb
mov
movs
iret
iret
mov
and
popf
xor
pop
pop
cmp
add
(bad)
(bad)
mov
cmp
iret
sub
jno
and
pop
mov
push
fcomip
(bad)
call
loopne
frstor
call
fwait
(bad)
test
xor
mov
adc
cdq
out
mov
inc
(bad)
aaa
xchg
ja
mov
sbb
sbb
mov
fisttp
rcr
(bad)
xchg
xchg
(bad)
jecxz
pop
ins
mov
(bad)
pop
mov
lods
adc
mov
add
push
pop
push
popf
jne
add
add
jmp
js
jo
xchg
jp
or
and
inc
les
in
jge
mov
mov
loop
inc
inc
retf
or
jmp
hlt
in
pop
pop
shl
push
xchg
popa
pop
(bad)
fisttp
jge
and
inc
les
cdq
(bad)
jmp
call
cmp
div
dec
jl
inc
jle
push
int3
test
ins
add
jg
dec
addr16
fdiv
fcom
or
(bad)
(bad)
loopne
(bad)
loop
test
dec
push
and
xor
cmp
loopne
sub
mov
mov
xor
(bad)
(bad)
call
inc
adc
mov
add
mov
inc
mov
(bad)
stc
cmp
mov
loop
mov
pushf
sbb
(bad)
cmp
ss
xchg
mov
xlat
dec
cmp
test
cwde
xchg
jmp
xchg
fist
sbb
cmps
leave
sar
in
sub
repnz
jne
push
mov
sti
pushf
or
xchg
scas
pop
repz
call
fcmovu
dec
mov
adc
add
arpl
(bad)
(bad)
(bad)
call
cli
xchg
inc
mov
mov
inc
mov
mov
adc
pop
cmps
adc
daa
mov
(bad)
dec
loop
inc
into
ret
retf
push
mov
enter
jg
(bad)
mov
leave
ret
and
mov
dec
mov
in
clc
stc
aam
(bad)
mov
adc
cld
inc
and
sahf
push
mov
retf
(bad)
std
mov
(bad)
(bad)
(bad)
(bad)
mov
daa
jp
add
je
inc
pop
jmp
mov
mov
(bad)
(bad)
jmp
sub
add
pop
push
jl
aad
cmp
mov
icebp
(bad)
fcomip
vshufpd
mov
(bad)
adc
xor
or
int
icebp
jg
and
imul
mov
ds
pop
ror
pop
fidiv
mov
jmp
mov
es
call
movs
pop
in
dec
dec
dec
add
dec
sub
xor
dec
out
jns
push
xchg
leave
test
cmp
psubd
(bad)
loopne
std
cmp
movs
push
inc
retf
add
dec
jp
jae
repnz
dec
dec
sbb
(bad)
dec
arpl
call
scas
icebp
jge
mov
adc
in
icebp
mov
pop
cmc
pop
adc
aaa
cmp
pop
fwait
pop
inc
and
pop
out
repnz
aam
(bad)
(bad)
inc
sub
cmps
sub
shr
cmp
mov
fld
shr
inc
std
(bad)
(bad)
call
fucomip
out
cmp
adc
loopne
jp
stos
fidiv
xchg
je
mov
pop
scas
jb
add
int3
push
sub
cli
nop
out
fstp
sbb
dec
mov
div
or
dec
adc
(bad)
(bad)
(bad)
push
cmp
cmp
xor
cmps
jns
repz
test
xchg
xchg
aas
stos
mov
std
stos
xor
fabs
mov
add
mov
sub
movs
nop
pusha
lock
jns
stc
(bad)
(bad)
(bad)
jmp
inc
xchg
sti
fwait
fs
into
jne
enter
cdq
clc
(bad)
or
dec
(bad)
and
test
xchg
(bad)
jmp
(bad)
icebp
or
pusha
adc
aaa
lock
mov
cmp
(bad)
(bad)
inc
jge
add
ins
std
mov
dec
gs
gs
test
out
dec
mov
int3
mov
adc
call
ins
repnz
(bad)
push
push
push
loopne
jne
push
xchg
mov
das
cld
stc
or
into
not
and
or
repz
adc
(bad)
(bad)
(bad)
push
xchg
daa
jo
nop
inc
sub
pop
dec
cwde
cld
test
mov
je
in
ret
mov
mov
dec
movs
loop
pop
cdq
cli
jmp
or
mov
ret
or
std
int
(bad)
(bad)
(bad)
(bad)
jp
mov
adc
add
and
mov
in
fcomp
mov
xor
and
cmps
icebp
(bad)
fcomip
movs
repnz
das
fs
cmp
pop
mov
jns
hlt
(bad)
call
in
dec
ss
(bad)
mov
dec
stos
stos
ds
or
sahf
pop
sbb
push
xlat
cwde
cdq
lock
(bad)
call
inc
sti
xchg
mov
nop
sti
and
xor
cmp
inc
jl
gs
mov
(bad)
(bad)
(bad)
(bad)
aas
data16
sub
loop
dec
jb
aaa
hlt
xchg
shr
sub
aad
aam
jg
das
adc
push
xchg
mov
sbb
in
sbb
jge
cdq
test
aam
(bad)
fcomip
cli
and
mov
dec
inc
sar
(bad)
cmps
enter
cmp
adc
and
in
cmc
push
std
inc
add
and
outs
icebp
out
in
inc
idiv
jge
mov
sar
(bad)
call
out
es
mov
mov
dec
lock
out
push
mov
iret
push
cmp
icebp
out
jp
sbb
dec
dec
outs
mov
(bad)
(bad)
(bad)
(bad)
in
in
not
cwde
popa
iret
call
push
out
(bad)
sub
jle
xchg
in
or
aad
int3
imul
cli
(bad)
inc
cld
and
hlt
lods
sbb
leave
cli
jg
jmp
and
mov
(bad)
fwait
(bad)
(bad)
call
jmp
cmp
(bad)
xor
repz
pop
mov
cs
clc
cs
cmp
dec
fmul
lea
(bad)
(bad)
dec
ds
sti
ror
xchg
cmp
lds
jmp
(bad)
(bad)
call
call
add
rcr
aas
and
cwde
lock
mov
mov
mov
mov
dec
sbb
stos
mov
xchg
sbb
adc
push
push
mov
push
out
or
mov
out
lea
popf
es
(bad)
mov
push
jg
ret
cld
movs
fsubr
(bad)
neg
outs
mov
mov
push
push
shl
cmp
sub
xcrypt-ecb
cmps
mov
xor
adc
out
inc
xchg
mov
fiadd
call
std
sbb
jno
out
(bad)
(bad)
mov
inc
(bad)
mov
pop
cmp
loop
les
inc
push
xor
jb
sahf
jns
push
into
jae
rcl
(bad)
call
and
pop
clc
int
icebp
xchg
ja
dec
leave
idiv
mov
movs
pop
sbb
(bad)
(bad)
jg
jp
inc
jl
sahf
mov
repz
xlat
fistp
mov
data16
inc
mov
repnz
jle
add
mov
mov
pop
jecxz
or
ret
fisttp
cdq
mov
mov
cld
(bad)
(bad)
fbld
mov
repz
cmp
call
(bad)
(bad)
(bad)
inc
cmp
loope
and
pop
ds
inc
aas
loopne
pop
xor
add
cmp
call
(bad)
jge
mov
adc
jle
ds
aaa
jg
(bad)
dec
fcomp
mov
jne
cmp
mov
add
mov
fcomip
scas
jmp
jbe
mov
js
adc
into
or
(bad)
les
jmp
sub
pmaxsw
pop
adc
xchg
shl
cmp
jge
lds
ficom
scas
out
les
push
aaa
sahf
xor
cmp
loope
fidiv
(bad)
(bad)
(bad)
fidiv
inc
jl
inc
loop
xor
jno
ins
push
xor
jg
(bad)
(bad)
das
ja
test
stos
mov
out
fadd
pop
shr
movs
dec
xor
pop
leave
add
addr16
jb
(bad)
mov
call
(bad)
cmp
mov
xchg
mov
imul
inc
jg
or
lock
(bad)
jg
sahf
push
(bad)
xlat
addr16
mov
mov
in
cmps
sbb
std
add
and
pusha
adc
mov
outs
adc
pusha
ja
push
scas
out
aam
jne
test
es
dec
div
dec
stos
push
inc
shl
mov
and
(bad)
(bad)
dec
mov
sti
out
sub
cwde
imul
std
gs
pandn
in
nop
pop
into
dec
nop
xchg
pop
stc
(bad)
(bad)
jg
dec
xlat
add
cvtdq2ps
add
ja
pop
jae
xor
fdivr
sbb
lods
lock
inc
sub
test
inc
jno
ror
loop
jle
int3
mov
inc
mov
(bad)
(bad)
(bad)
mov
test
xchg
and
pop
(bad)
bound
and
xor
jmp
sub
or
xor
daa
popa
enter
cwde
aaa
add
cli
rol
in
push
(bad)
fs
and
outs
sub
mov
aas
mov
stc
inc
sti
out
xchg
mov
sub
add
add
scas
xor
mov
adc
push
and
mov
pop
test
adc
loopne
mov
fst
or
sbb
jo
jmp
cmps
call
sti
or
cld
mov
mov
sub
pop
add
adc
jmp
(bad)
(bad)
(bad)
cmp
ret
scas
sbb
cdq
mov
retf
rcr
inc
push
inc
in
push
dec
(bad)
rcr
loopne
(bad)
jo
iret
cdq
(bad)
mov
mov
repz
lds
xor
jle
inc
jne
xchg
adc
cmp
jg
dec
sub
cmp
cs
mov
or
cmp
inc
jp
jo
mov
hlt
inc
test
(bad)
jg
(bad)
cmp
push
pop
mov
xchg
sbb
bound
adc
(bad)
(bad)
dec
jl
stos
mov
call
out
jne
sbb
repz
sbb
fnstcw
dec
ret
je
aaa
out
dec
pushf
ins
je
cmp
sub
fisttp
(bad)
aaa
inc
push
js
jmp
mov
mov
jmp
cmp
jno
jnp
pop
ss
mov
into
gs
(bad)
(bad)
(bad)
(bad)
mov
add
(bad)
hlt
aad
add
and
stos
xor
dec
lds
std
sar
jmp
les
mov
daa
sub
jns
cmp
aaa
stc
stc
mov
(bad)
(bad)
jmp
xor
sub
jp
call
and
push
or
(bad)
cmp
in
int
jno
(bad)
(bad)
(bad)
call
repz
ret
add
pop
lds
outs
into
in
mov
mov
jle
(bad)
(bad)
(bad)
mov
pop
fcos
adc
out
out
int3
loopne
test
ins
adc
lods
js
add
clc
mov
mov
jg
mov
inc
popf
sub
fmul
lock
(bad)
dec
lods
mov
loop
stc
(bad)
xlat
call
dec
sub
(bad)
adc
(bad)
jg
mov
mov
fbstp
ret
inc
xchg
outs
int
iret
outs
in
jmp
pop
jne
add
leave
inc
dec
out
call
adc
push
jmp
jp
sbb
jns
pop
pop
cld
ja
inc
cwde
push
sub
(bad)
shl
mov
mov
sub
lock
mov
pop
gs
cdq
add
mov
cmp
shl
jge
(bad)
(bad)
push
in
pop
xchg
inc
add
sbb
pop
jl
(bad)
das
repnz
(bad)
push
adc
xchg
(bad)
(bad)
call
jae
(bad)
mov
in
pushf
mov
xchg
sar
fld
mov
(bad)
jg
ins
neg
sbb
and
mov
xor
mov
ror
add
push
inc
mov
(bad)
inc
aad
fdiv
lock
jle
xchg
sub
fiadd
jg
sti
fldenv
xchg
aaa
stos
pop
movs
push
pop
mov
cmp
jmp
dec
lods
mov
pop
inc
adc
es
je
cmps
sahf
cmp
ret
xor
aaa
std
adc
pop
repnz
ins
fild
(bad)
out
cmp
mov
lods
in
xor
(bad)
retf
pop
pop
sub
dec
lock
mov
mov
(bad)
inc
jns
dec
pop
inc
jo
sub
call
jle
into
(bad)
loope
mov
not
jmp
das
jno
mov
or
sti
pop
retf
pop
ss
sbb
test
inc
pop
mov
sbb
leave
shl
sbb
pop
cmp
ins
addr16
adc
jl
inc
push
jg
cwde
daa
mov
inc
jae
out
outs
sbb
cmp
ss
(bad)
or
cli
pop
mov
jne
(bad)
jmp
retf
mov
repnz
scas
int
pshufw
retf
mov
(bad)
(bad)
mov
pop
adc
stc
or
xlat
sub
lahf
push
pusha
sbb
pop
(bad)
(bad)
(bad)
call
(bad)
loop
nop
jmp
sbb
and
das
stos
sub
in
pop
xor
fdiv
(bad)
(bad)
jmp
clc
cmp
popf
out
add
arpl
inc
sti
dec
push
jmp
repnz
pop
sbb
(bad)
(bad)
(bad)
in
cdq
push
dec
test
loopne
stc
in
lock
popa
push
xchg
inc
or
push
test
in
pop
out
inc
lods
mov
pop
out
stos
mov
movs
jecxz
pop
hlt
ins
sub
cld
(bad)
jmp
mov
jecxz
lods
jl
scas
and
lea
out
push
jg
mov
inc
les
div
sbb
mov
(bad)
(bad)
fist
retf
in
mov
push
jne
xchg
jecxz
and
pushf
out
mov
out
pop
inc
(bad)
(bad)
(bad)
inc
jmp
mov
mov
mov
out
jns
movs
and
mov
push
push
cmc
sbb
pop
mov
push
into
repnz
sbb
(bad)
(bad)
out
cmp
test
enter
dec
inc
inc
cmp
inc
ins
(bad)
mov
sahf
mov
aam
xchg
stos
popf
pop
fcmove
xchg
outs
ds
call
(bad)
jmp
aas
mov
repnz
xor
push
mov
sti
nop
dec
jge
jmp
dec
std
and
inc
(bad)
(bad)
(bad)
call
mov
jp
stos
mov
movs
xor
loop
out
fwait
daa
stos
or
(bad)
fst
out
retf
stos
and
fdivrp
jle
(bad)
inc
addr16
xor
mov
push
(bad)
xor
scas
inc
bound
(bad)
mov
push
fcomi
lock
in
movs
push
stos
push
xchg
mov
mul
cmp
test
or
fldcw
nop
scas
bts
inc
pop
cmp
push
stos
call
adc
pop
add
(bad)
jmp
data16
outs
inc
xchg
xchg
lea
cdq
int3
not
nop
(bad)
jmp
fadd
mov
push
cdq
xchg
ja
mov
mov
(bad)
(bad)
call
or
out
bound
das
xchg
sub
loopne
pop
(bad)
mov
mov
or
jo
in
out
frstor
jle
push
hlt
jns
lods
cmc
cmp
pop
fadd
xchg
and
push
cld
inc
cli
dec
inc
jmp
aas
sub
ret
cmc
sbb
retf
mov
(bad)
(bad)
call
(bad)
cli
or
cmc
inc
outs
std
mov
leave
xchg
xor
and
lods
cmp
jle
jl
dec
hlt
add
inc
jns
dec
mov
mov
clc
cmp
cwde
(bad)
(bad)
jg
out
add
mov
mov
stos
(bad)
in
inc
or
into
rol
dec
lock
les
mov
sub
lahf
pop
mov
mov
mov
adc
jne
pusha
dec
cmp
in
ds
or
sbb
(bad)
(bad)
dec
jl
inc
jg
and
out
les
int3
dec
inc
in
fwait
cmps
ret
mov
adc
pop
iret
out
mov
loop
xchg
or
sub
mov
(bad)
jge
rol
add
lahf
xor
(bad)
(bad)
fcomip
sub
dec
add
aaa
jle
cmp
pop
pop
mov
mov
push
je
pop
test
inc
pushf
jmp
sahf
sti
(bad)
(bad)
(bad)
jmp
outs
sub
jne
bound
in
fpatan
sar
(bad)
imul
mov
(bad)
inc
std
outs
lahf
mov
cmc
sub
jg
jae
pop
outs
push
mov
rcr
pop
dec
inc
pop
and
pop
push
repz
lahf
(bad)
push
stos
adc
call
pusha
mov
js
movs
inc
fild
cmc
jmp
rcr
jecxz
clc
jecxz
in
sbb
(bad)
push
pop
ins
int
pop
repnz
jbe
out
and
pop
stc
add
fimul
add
jnp
fist
cmc
lahf
sbb
xlat
cld
mov
repz
stos
mov
and
mov
das
cmp
jmp
mov
cmp
dec
push
div
dec
cmp
not
cmp
jmp
dec
and
pop
or
shl
mov
setle
stos
(bad)
dec
pop
call
loopne
clc
outs
jmp
fadd
adc
loop
push
xchg
cmp
(bad)
(bad)
call
pcmpgtb
or
cmps
mov
ret
test
je
cmp
and
cmc
(bad)
dec
jge
into
jmp
int
inc
sub
sub
dec
or
aas
or
cmp
scas
movs
mov
(bad)
lea
sub
dec
bound
enter
cmp
(bad)
dec
xchg
es
pusha
ret
in
sti
sbb
les
cwde
cmp
fistp
mov
cwde
jnp
and
jmp
push
fdivr
adc
(bad)
cli
fstp
cwde
sti
mov
(bad)
(bad)
call
fwait
sbb
pop
pushw
and
cmp
mov
dec
fcomip
dec
mov
idiv
push
enter
cmp
lock
inc
cmp
scas
retf
int3
mov
and
push
shl
stc
and
or
lahf
xlat
fiadd
aas
out
out
fcomp
(bad)
cmp
lods
and
std
sub
mov
pop
mov
and
xchg
(bad)
(bad)
push
pop
iret
jnp
es
xchg
sub
jno
dec
mov
movs
pop
cwde
fiadd
and
adc
(bad)
jmp
fist
es
mov
or
mov
mov
push
(bad)
(bad)
mov
cwde
xchg
outs
jno
fcomp
cmp
mul
adc
jae
call
(bad)
out
jp
addr16
jmp
sub
mov
add
push
loop
adc
aas
fwait
jno
cmp
and
mov
adc
dec
inc
hlt
mov
call
lock
call
add
mov
jg
and
lds
xchg
jmp
add
sub
call
daa
and
(bad)
pop
pushf
stos
dec
inc
add
jmp
outs
mov
lock
adc
pusha
iret
adc
push
(bad)
(bad)
(bad)
dec
test
xor
nop
popf
dec
fidivr
push
shl
or
push
bnd
adc
jmp
mov
aaa
pop
cmp
call
les
mov
mov
rsqrtps
jbe
lods
sbb
(bad)
push
mov
cmc
es
pop
pop
(bad)
aaa
retf
mov
dec
mov
(bad)
(bad)
jg
loopne
mov
xchg
xchg
and
cli
movs
out
(bad)
pop
mov
xor
sbb
pop
hlt
(bad)
inc
std
int
(bad)
jne
inc
jne
jle
pop
cli
ja
push
loop
lea
outs
add
and
ror
add
pop
add
es
aaa
or
add
jl
jnp
std
lods
jns
repnz
arpl
dec
loope
in
dec
and
inc
pop
cmp
int3
push
les
sar
pop
js
adc
cwde
push
es
or
outs
nop
jbe
clc
jge
aaa
sub
js
arpl
push
jl
xchg
shl
mov
jbe
sbb
in
stc
pop
(bad)
(bad)
(bad)
dec
push
fimul
int
mov
sbb
or
jecxz
mov
in
(bad)
jg
cmp
cmp
or
and
xlat
popf
and
(bad)
cld
xchg
xchg
jg
js
pop
test
cld
cmp
push
adc
dec
mov
or
stc
out
fisttp
pop
ins
xor
mov
jb
les
(bad)
(bad)
(bad)
(bad)
cmp
in
mov
sahf
mov
jbe
mov
int3
cmp
mov
mov
jg
(bad)
push
push
(bad)
mul
dec
jle
aaa
int
ins
jbe
jge
inc
and
mov
(bad)
mov
iret
pop
mov
rol
(bad)
jg
fucom
pop
cmps
jne
clc
addr16
fnclex
mov
dec
ret
mov
(bad)
(bad)
jmp
sub
pop
or
lods
fisubr
hlt
js
push
fcomip
int3
das
outs
clc
ja
jo
sar
imul
(bad)
jmp
dec
loope
mov
js
in
stc
mov
inc
xchg
or
xchg
test
(bad)
mov
rcr
cmc
imul
jecxz
dec
adc
retf
addr16
lods
cld
push
sub
cmp
add
xchg
mov
jb
and
test
stos
retf
ret
(bad)
call
sub
push
sahf
sub
ins
test
jg
(bad)
call
fist
jg
mov
loopne
mov
push
scas
clc
(bad)
call
mov
ins
jmp
std
mov
jae
mov
inc
push
retf
rol
test
out
jb
leave
je
mov
pusha
xlat
push
jecxz
jmp
dec
out
fistp
repnz
mov
(bad)
mov
pop
inc
jnp
mov
(bad)
adc
mov
out
xlat
setge
(bad)
cmp
daa
enter
cld
icebp
stos
xchg
loop
mov
inc
cmp
xchg
cwde
add
dec
repnz
sbb
mov
and
les
cmp
lahf
stos
into
adc
mov
clc
(bad)
jnp
outs
loop
aad
xor
fcmovnb
call
xchg
scas
push
cmp
clc
pop
std
enter
xor
pop
(bad)
sub
push
fs
fmulp
inc
dec
lock
into
mov
sbb
jecxz
out
bswap
xor
pop
loopne
(bad)
aas
or
retf
pop
cmp
cmp
push
enter
cmp
mov
loopne
mov
das
jl
sbb
jo
out
clc
(bad)
call
enter
or
dec
pop
outs
ins
dec
hlt
cwde
js
stc
cmps
adc
mov
dec
sahf
mov
ret
mov
leave
js
fcomip
fidiv
jnp
pushf
scas
(bad)
js
xchg
mov
(bad)
dec
inc
sub
push
add
ins
xor
mov
and
(bad)
fdivrp
call
call
out
mov
mov
repnz
(bad)
dec
movs
jge
sbb
inc
ins
ds
cmps
add
jmp
xchg
lahf
ins
ins
enter
(bad)
sbb
pop
ins
inc
adc
push
(bad)
(bad)
(bad)
push
or
es
je
cmp
xlat
push
retf
jg
lock
inc
pushf
(bad)
(bad)
mov
mov
loop
fwait
inc
push
jmp
and
cli
fwait
mov
mov
jmp
inc
das
or
jne
sbb
(bad)
out
clc
lods
push
test
inc
cld
mov
sbb
fst
sub
mov
mov
outs
xor
cmc
cmp
out
out
adc
inc
cmp
dec
scas
div
dec
js
fxch
xchg
(bad)
(bad)
mov
ret
pop
dec
imul
push
push
jg
adc
scas
fist
dec
lahf
and
push
stc
sbb
xchg
push
adc
jg
mov
outs
push
ret
leave
pop
(bad)
jmp
rcr
(bad)
push
inc
mov
dec
cmp
in
into
ret
jno
out
lea
sahf
push
call
push
lods
pop
pusha
std
push
and
jmp
lea
aaa
std
jg
js
xchg
pop
adc
icebp
push
add
shl
cdq
xchg
cdq
maxps
movs
jmp
mov
ds
(bad)
jg
mov
pop
dec
call
ror
addr16
mov
xchg
ret
mov
sar
(bad)
call
(bad)
dec
sahf
cmp
retf
or
push
sti
(bad)
(bad)
call
cmc
xchg
push
lock
add
ret
(bad)
jmp
jmp
adc
(bad)
jg
aam
fst
mov
fsubp
sbb
push
push
adc
pop
and
sahf
pop
jg
jl
xchg
lock
mov
repz
ret
pop
icebp
mov
pop
xchg
shl
push
sbb
xchg
std
out
ss
push
imul
jp
push
ins
(bad)
jmp
sub
jns
daa
out
ret
ds
(bad)
out
dec
sbb
and
adc
jmp
dec
cli
mov
mov
adc
push
leave
(bad)
(bad)
(bad)
mov
cmp
repnz
or
push
std
fdiv
or
arpl
nop
mov
sar
jmp
adc
scas
jl
or
cmp
lods
aas
add
addr16
hlt
inc
pop
mov
das
test
loopne
mov
jl
add
sub
pusha
sbb
mov
sbb
je
fwait
mov
fprem
cs
mov
iret
shl
jp
mov
ja
call
cmp
mov
jp
mov
nop
pop
arpl
mov
cmp
mov
je
repz
(bad)
(bad)
jmp
fisub
xchg
push
pop
ret
dec
(bad)
jno
and
les
sub
pop
pop
mov
ja
inc
adc
pop
js
pop
out
out
loope
scas
pop
xor
(bad)
(bad)
(bad)
stc
outs
sbb
or
xchg
bound
or
jns
stos
inc
div
(bad)
(bad)
mov
cmps
sub
add
(bad)
loop
mov
icebp
sub
fdivr
inc
pop
pop
xchg
ror
call
jns
fnstsw
mov
inc
fisub
(bad)
push
dec
mov
out
dec
nop
jmp
(bad)
(bad)
(bad)
inc
inc
jg
add
jle
lds
aad
push
or
in
jne
xor
ds
jmp
arpl
scas
outs
aam
inc
sbb
adc
(bad)
jnp
jnp
mov
int
(bad)
(bad)
(bad)
mov
sar
dec
pop
push
fmul
rcl
or
xor
shl
adc
and
call
sbb
push
test
add
iret
(bad)
lahf
(bad)
jmp
shl
adc
push
sbb
adc
fisttp
call
popa
jle
(bad)
(bad)
jmp
dec
sub
inc
add
pop
inc
add
jmp
mov
ja
pop
pop
repnz
push
mov
inc
das
cli
jns
arpl
fs
mov
xor
jg
(bad)
(bad)
(bad)
(bad)
jl
mov
sub
les
mov
enter
int3
cli
dec
inc
scas
cli
jmp
imul
clc
aaa
cmc
out
in
(bad)
jmp
(bad)
(bad)
(bad)
dec
in
out
cmc
loope
ds
popa
out
test
shl
mov
cmps
sbb
mov
sti
cmps
jecxz
add
sahf
inc
adc
mov
data16
jno
mov
(bad)
(bad)
in
fild
jnp
(bad)
test
jl
icebp
xor
dec
cmp
loop
stc
mov
(bad)
jmp
adc
out
test
fmul
and
ror
stc
in
dec
sbb
(bad)
dec
pusha
(bad)
popa
inc
sahf
ins
or
jp
fdivr
xor
(bad)
call
popw
ss
mov
ret
(bad)
xchg
repz
mov
fcomp
call
cmp
adc
mov
cmp
xchg
cmp
daa
jmp
scas
shr
arpl
or
fadd
movs
xchg
std
adc
push
in
fucom
or
cmps
mov
lahf
fs
push
mov
mov
mov
pop
(bad)
(bad)
mov
adc
ror
pop
lea
push
imul
aas
loopne
(bad)
(bad)
cmp
popf
xchg
mov
mov
and
cmp
in
sub
cmp
dec
(bad)
pop
or
outs
or
div
loopne
enter
(bad)
enter
and
cmp
std
dec
(bad)
(bad)
(bad)
call
shl
jns
das
mov
not
int3
adc
enter
call
push
in
pop
icebp
push
sbb
popa
push
movs
dec
mov
cmp
dec
xchg
and
loope
ja
pushf
imul
cld
call
movs
ins
push
mov
or
mul
(bad)
(bad)
jg
or
xor
aam
mov
pop
mov
fadd
or
jle
mov
call
xchg
enter
jb
out
xchg
mov
mov
inc
test
aaa
xchg
xchg
mov
adc
xor
sub
shr
lods
stc
jg
or
(bad)
jmp
pop
(bad)
and
inc
xchg
pop
mov
(bad)
idiv
stos
mov
and
xchg
cmp
sbb
mov
call
enter
inc
sub
jge
push
sub
clc
call
pop
mov
adc
in
mov
dec
jge
push
inc
in
bound
sbb
add
jg
xlat
pop
ror
test
cld
out
aaa
in
hlt
add
inc
loopne
mov
xchg
(bad)
in
in
mov
(bad)
aas
imul
loope
jmp
lock
das
mov
cmc
call
out
push
mov
out
(bad)
stc
cmc
xor
out
jmp
mov
clc
cmps
add
scas
push
xor
test
sub
adc
imul
xlat
dec
mov
into
jecxz
arpl
sbb
das
aam
(bad)
(bad)
(bad)
push
cmp
xor
mov
adc
fwait
push
jmp
sbb
mov
enter
cld
jmp
cld
imul
shr
enter
retf
cs
lea
push
es
adc
pop
(bad)
(bad)
mov
fdivr
stc
cli
pop
jp
push
jno
sbb
hlt
pop
fidiv
jbe
out
mov
push
inc
cdq
jae
pushf
sub
scas
inc
addr16
push
aad
call
xchg
xor
xchg
xchg
mov
call
es
repz
xor
add
dec
xchg
jl
cmp
lea
and
int3
xor
cmp
stos
(bad)
in
int
jae
or
fcomp
pushf
outs
je
mov
(bad)
cmp
sub
mul
sbb
sahf
cmp
fnsave
fild
js
pushf
fwait
and
popf
les
mov
scas
jnp
enter
loopne
push
sbb
(bad)
(bad)
jg
in
sub
push
int
mov
mov
adc
(bad)
inc
test
aas
test
xchg
jecxz
cmp
jmp
adc
pop
mov
sub
int
push
inc
jmp
xchg
mov
clc
add
add
jne
push
aad
pusha
mov
inc
(bad)
call
adc
mov
leave
fisub
push
pslld
jae
loop
sub
test
jo
push
push
out
add
les
sub
jmp
das
mov
(bad)
push
jns
repnz
sti
or
push
pop
cmp
mov
sbb
push
jno
(bad)
call
(bad)
outs
jmp
icebp
prefetch
pop
(bad)
addr16
pop
iret
out
push
cmps
(bad)
leave
ss
pop
add
(bad)
jmp
sar
pop
and
jge
push
pop
xor
pop
cmp
(bad)
call
inc
mov
mov
lock
or
gs
loopne
cmps
enter
pop
ret
es
adc
xchg
and
sub
push
mov
out
mov
mov
lds
pushf
and
repnz
ror
push
add
ret
add
mov
dec
dec
clc
inc
sbb
dec
pusha
iret
push
mov
jmp
push
and
mov
cmp
nop
or
ret
popf
pop
cld
scas
xor
or
shr
les
mov
das
jecxz
(bad)
(bad)
call
mov
mov
jmp
daa
das
inc
mov
pop
(bad)
or
sbb
retf
xor
cld
jbe
jl
imul
add
jmp
test
cmps
xchg
idiv
xchg
or
lods
mov
(bad)
call
in
sahf
jecxz
aam
leave
jns
lock
add
loop
cmp
dec
call
cmc
movs
js
mov
or
stos
(bad)
(bad)
(bad)
in
jae
sbb
lds
rcr
fcomp
repz
pop
idiv
push
jg
inc
ss
(bad)
(bad)
jmp
cmp
movs
and
adc
pop
dec
mov
xchg
cmp
push
pop
mov
(bad)
(bad)
jmp
leave
les
cmp
xlat
mov
push
cmps
sub
cmp
sbb
call
mov
stos
sub
push
push
mov
popf
cmp
mov
adc
push
icebp
fidivr
ss
lahf
lds
in
cmp
ret
xor
rcl
pop
fs
es
ror
or
push
cmps
mov
sub
add
movs
push
(bad)
(bad)
(bad)
call
icebp
pop
or
das
jbe
fbstp
inc
cs
scas
pop
cs
sub
push
push
mov
lahf
cmc
mov
aas
(bad)
cld
aas
lahf
sbb
lahf
das
cmps
cmp
fimul
call
pop
sahf
jle
iret
popf
lock
scas
lahf
dec
jp
inc
sti
fild
or
mov
stc
dec
sti
push
ss
fidiv
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
xchg
xchg
in
in
popa
xchg
pop
push
dec
push
lock
inc
dec
ins
test
adc
xor
js
aaa
call
repnz
scas
push
mov
mov
(bad)
and
xchg
push
pop
xchg
clc
(bad)
push
sbb
mov
or
mov
nop
or
std
pop
jle
cs
ret
in
push
inc
adc
mov
loop
int
add
(bad)
(bad)
cmp
ss
fild
mov
in
lea
aaa
popf
mov
(bad)
jg
fs
std
sbb
xchg
outs
sbb
xor
xor
(bad)
inc
imul
or
rcl
icebp
mov
retfw
cwde
lahf
hlt
sbb
dec
js
js
mov
push
mov
mov
sub
cmp
push
(bad)
test
push
sub
(bad)
(bad)
(bad)
push
outs
inc
sbb
add
xor
or
pop
icebp
lock
rcr
lea
std
add
test
inc
mov
das
cmc
jle
ja
in
cs
call
jne
out
adc
pop
sti
outs
cmp
scas
cli
mov
dec
out
push
jb
cs
cmp
inc
mov
mov
push
lods
push
(bad)
cmp
outs
and
dec
int3
sbb
dec
sub
jne
test
adc
popf
popa
iret
add
or
sub
data16
inc
hlt
test
xchg
scas
jae
push
fwait
mov
(bad)
push
jge
outs
mov
push
int3
sub
fs
movs
scas
lds
(bad)
call
movs
or
mov
mov
aas
mov
push
mov
fadd
xchg
clc
push
xor
out
sar
or
push
dec
jg
(bad)
jg
shl
pop
lahf
je
xchg
mov
push
adc
fstp
sti
(bad)
mov
or
cmps
push
mov
data16
hlt
mov
push
loope
test
sub
cmc
push
aam
mov
dec
ss
(bad)
nop
(bad)
stc
mov
(bad)
fisttp
mov
les
into
or
mov
lds
(bad)
(bad)
(bad)
(bad)
fistp
pop
(bad)
test
mov
sbb
jmp
push
push
(bad)
jecxz
fs
jg
mov
jle
cmp
jbe
dec
enter
adc
mov
daa
pop
das
jle
mov
(bad)
jg
xor
outs
rcr
ds
fbld
cdq
rcl
(bad)
(bad)
jg
es
or
cmp
cs
inc
xchg
das
movs
rol
ja
sar
retf
mov
mov
jmp
mov
call
mov
jge
ins
clc
dec
xor
jo
cs
xor
pop
dec
ds
(bad)
(bad)
(bad)
outs
fmul
ins
dec
test
test
xchg
mov
outs
jne
add
xchg
mov
(bad)
jmp
cmp
popa
mov
cld
ficom
push
xor
outs
js
dec
mov
jle
xor
iret
(bad)
cli
pop
jmp
outs
(bad)
fistp
repnz
dec
adc
je
ficomp
leave
sahf
mov
scas
in
sti
sub
sub
cmp
(bad)
mov
jno
aad
mov
adc
mov
inc
lock
call
in
ficom
ss
add
cmp
inc
bound
aaa
sbb
cwde
fbld
out
add
xchg
test
jno
data16
scas
enter
(bad)
dec
sbb
out
repz
clc
retf
mov
loop
pop
lock
adc
ror
test
dec
movs
out
bound
repnz
xchg
ret
stos
add
dec
push
push
mov
xor
or
iret
stos
mov
push
ret
psubb
pop
ja
cmp
js
sbb
jge
loop
xchg
pop
jecxz
sbb
inc
mov
pop
(bad)
jg
add
fld
out
lods
(bad)
sbb
and
(bad)
(bad)
jmp
aad
outs
fdiv
out
adc
(bad)
test
add
test
jmp
or
cmp
push
inc
sbb
jb
dec
cli
gs
in
(bad)
call
inc
ret
push
(bad)
cld
inc
or
xor
or
jg
sub
stos
(bad)
movs
mov
add
or
mov
mov
dec
ud0
iret
pop
(bad)
(bad)
sub
(bad)
jg
dec
mov
jge
dec
xchg
cwde
xchg
popa
fisub
jb
dec
clc
pop
xor
adc
(bad)
(bad)
(bad)
cmp
cdq
mov
cli
mov
cli
sahf
pop
mov
popf
das
outs
push
mov
mov
push
sar
dec
xchg
inc
mov
or
cli
ja
dec
pushf
adc
(bad)
inc
imul
sbb
(bad)
addr16
sbb
(bad)
(bad)
jmp
in
das
test
retf
outs
or
(bad)
jmp
dec
adc
push
push
cwde
adc
ret
dec
sub
jecxz
mov
enter
xor
into
jae
pop
sub
dec
cmps
mul
fwait
(bad)
(bad)
fsubr
jl
fwait
xor
jp
jo
dec
xchg
repz
jp
dec
ret
mov
or
ror
adc
addr16
(bad)
(bad)
dec
xchg
or
stc
iret
mov
add
(bad)
cmp
push
rcl
inc
jge
imul
jecxz
std
fistp
mov
std
add
jno
lods
mov
add
lock
jle
fst
add
pop
shr
jnp
sahf
out
push
int3
cmps
push
mov
(bad)
push
loop
push
int
xlat
xchg
xor
call
retf
pusha
jge
pop
fimul
pop
in
scas
cli
(bad)
jmp
mov
ja
jnp
cli
mov
inc
test
loope
jmp
in
outs
sahf
clc
pop
movs
push
imul
pop
sbb
push
ret
std
mov
mov
sbb
jp
aas
lock
int
lock
jbe
pop
std
repnz
cmp
(bad)
(bad)
fucom
jg
cld
frstor
push
lods
icebp
ja
(bad)
fbstp
mov
mov
mov
shr
cmp
(bad)
inc
aad
icebp
repz
imul
repnz
stc
scas
les
dec
inc
adc
call
dec
sar
arpl
pop
dec
xchg
shr
xchg
loop
push
(bad)
cmps
xor
jmp
lahf
mov
pop
mov
daa
cmc
jo
(bad)
(bad)
(bad)
fisub
out
cmp
mov
xor
sub
adc
clc
cmp
repnz
mov
and
pop
(bad)
pop
lea
stos
mov
mov
imul
mov
sti
(bad)
in
(bad)
popf
push
(bad)
(bad)
mov
mov
jmp
fnstsw
imul
sub
mov
cmps
adc
adc
xor
cmp
pop
cmc
add
lods
push
shl
das
cli
sbb
ins
sbb
xlat
in
adc
adc
jb
pop
js
ds
mul
xchg
(bad)
call
jg
xlat
not
loopne
test
and
std
and
call
(bad)
jmp
sti
mov
push
(bad)
lods
jns
in
cmp
jno
push
in
fcomip
dec
call
cmc
ins
ins
ins
xchg
hlt
and
mov
(bad)
jg
out
mov
dec
mov
imul
jp
xor
push
outs
xor
cdq
ret
into
out
pushf
mov
(bad)
call
ins
sbb
cmp
cmc
xor
fbld
mov
xor
std
bound
fimul
jne
dec
and
mov
jmp
dec
clc
mov
shl
push
xchg
push
inc
cmp
cs
pop
out
fs
(bad)
dec
(bad)
xor
mov
xchg
int3
mov
fdivr
aad
jo
push
loopne
(bad)
mov
mov
sar
mov
(bad)
loopne
cmp
cmp
mov
(bad)
(bad)
jge
and
imul
inc
or
aas
xchg
out
outs
je
mov
sbb
xchg
in
(bad)
cld
(bad)
(bad)
call
inc
jb
(bad)
rcr
adc
inc
rcl
lea
retf
cmp
aam
jge
lods
jl
(bad)
call
outs
push
mov
movs
nop
inc
and
idiv
mov
add
cmc
dec
jne
int
lock
or
cli
dec
mov
push
add
shl
mov
data16
out
out
(bad)
pop
out
(bad)
(bad)
(bad)
(bad)
mov
mov
and
cwde
fs
mov
jmp
push
pop
jns
push
jne
push
in
mov
clc
ficomp
movs
xchg
outs
lahf
rol
jmp
clc
sahf
jo
cmp
(bad)
jg
xor
jnp
push
fistp
jp
in
mov
jae
adc
add
push
ins
aaa
jl
mov
popa
popf
and
(bad)
call
cmp
test
in
dec
sub
bound
retf
xor
add
clc
(bad)
cmp
inc
loop
cld
jnp
mov
cld
(bad)
push
mov
(bad)
fwait
pop
push
int
xor
dec
sbb
popa
dec
cld
(bad)
(bad)
jg
inc
loop
cmp
enter
dec
jmp
dec
cli
(bad)
bound
dec
xor
add
inc
sar
arpl
cmp
imul
test
xor
(bad)
ret
(bad)
(bad)
jg
jecxz
sahf
xchg
cmps
pop
fwait
jnp
std
cs
outs
in
jae
sbb
(bad)
jg
sbb
in
test
inc
sahf
jg
mov
test
es
push
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jbe
outs
pop
sbb
pop
dec
fisttp
mov
cmp
dec
fdivp
inc
je
push
(bad)
sbb
scas
mov
and
stos
pmaddwd
sar
(bad)
jg
push
out
and
add
ret
jae
jp
xrelease
sti
(bad)
(bad)
call
jno
dec
push
out
pop
mov
jne
fcmovne
add
cmc
lods
jp
jg
or
cld
je
xchg
and
in
dec
inc
cld
mov
test
mov
push
sar
int
mov
cdq
inc
out
inc
cmps
push
xor
aam
cmp
imul
jb
lods
xor
enter
mov
mov
lods
stos
(bad)
das
or
(bad)
(bad)
(bad)
call
jl
sti
pop
xlat
fistp
jp
ds
arpl
shr
aaa
xchg
ret
jge
int3
mov
mov
aad
xor
mov
(bad)
cmp
into
int3
(bad)
push
int3
cmps
retf
(bad)
(bad)
push
adc
adc
(bad)
lea
pop
jnp
dec
push
out
repnz
adc
shr
cmp
ja
push
mov
fcomp
ss
fisub
in
loope
mov
pop
add
pop
into
jecxz
push
(bad)
mov
aaa
cmp
(bad)
(bad)
jmp
xchg
pop
pop
(bad)
stc
pushf
ja
pandn
ins
or
jge
xchg
and
xor
mov
inc
into
fld
dec
hlt
xor
pop
lods
xchg
jg
add
lahf
out
mov
jb
sbb
mov
pop
mov
mov
les
sub
mov
mov
je
(bad)
xlat
(bad)
dec
fistp
mov
mov
cmp
cmp
ss
jg
fild
push
cmp
sub
adc
xor
sahf
jl
scas
in
cmp
jo
(bad)
(bad)
call
add
movs
mov
jmp
jae
imul
pop
ins
pushf
pushf
(bad)
(bad)
(bad)
(bad)
dec
sbb
(bad)
popf
pusha
and
cli
jle
test
fistp
mov
(bad)
cdq
sub
in
div
xlat
xchg
cmc
jmp
test
in
mov
daa
or
lock
retw
and
lock
jne
mov
push
inc
cld
push
or
retf
push
mov
or
push
in
fsubr
daa
call
inc
punpckldq
inc
dec
jg
daa
fldcw
out
mov
pop
sar
jmp
adc
push
ret
ror
or
fisttp
(bad)
jg
jp
fldcw
fdivr
pop
or
pushf
mov
and
add
hlt
or
push
adc
push
and
sub
and
scas
xlat
or
out
mov
mov
jb
jmp
push
mov
cld
dec
scas
jmp
mov
mov
sub
out
fimul
stos
jecxz
fdiv
lods
mov
sar
mov
(bad)
mov
xlat
inc
das
sahf
mov
lea
cli
shr
(bad)
dec
cdq
adc
stos
fwait
pop
mov
js
cmp
in
cmp
bound
aam
(bad)
(bad)
mov
es
imul
jmp
cdq
int
fisttp
inc
(bad)
(bad)
(bad)
call
sahf
ret
div
call
add
icebp
lea
enter
push
pusha
lahf
xchg
(bad)
(bad)
(bad)
or
out
add
jb
imul
sbb
clc
pop
lahf
fsubr
(bad)
dec
movs
into
jo
scas
mov
jae
pop
and
xor
mov
(bad)
dec
in
cmp
shl
jbe
gs
retf
cwde
ret
pop
cmp
mov
fninit
hlt
(bad)
(bad)
(bad)
mov
out
loopne
(bad)
(bad)
test
jno
jmp
inc
pop
sbb
aam
mov
cli
xchg
mov
(bad)
(bad)
mov
(bad)
jne
(bad)
out
sbb
mov
aaa
cmp
add
data16
icebp
(bad)
mov
add
mov
mov
fld
js
mov
aad
and
retf
push
(bad)
(bad)
mov
leave
stos
sar
add
mov
(bad)
mov
clc
add
push
xchg
dec
js
cmp
push
imul
and
cmp
iret
(bad)
icebp
out
es
mov
in
jbe
push
(bad)
call
add
out
pusha
sti
les
cmp
or
pop
cli
xchg
loopne
sbb
and
inc
std
fbstp
aad
lock
pop
mov
push
cld
push
xchg
ins
mov
mov
(bad)
call
fimul
dec
mov
and
push
mov
sub
xor
imul
cmp
(bad)
push
cmp
and
inc
xchg
push
xor
jne
mov
loope
(bad)
(bad)
(bad)
jg
push
mov
adc
xor
(bad)
sub
pop
dec
jmp
xchg
sbb
jle
jnp
xchg
cmp
shr
(bad)
jmp
mov
sbb
stos
xchg
data16
ds
lods
or
jnp
retf
adc
(bad)
(bad)
(bad)
mov
or
and
rol
psubusb
inc
es
icebp
scas
inc
das
mov
adc
dec
sub
cli
test
adc
pop
cmc
movs
adc
dec
cli
push
cmp
inc
(bad)
(bad)
inc
aas
mov
adc
retf
inc
icebp
add
cmp
jecxz
xchg
shr
(bad)
call
das
xchg
mov
sbb
mov
lock
fs
fldenv
(bad)
push
leave
test
mov
xchg
cmps
pop
mov
and
jp
call
ret
mov
div
popa
mov
call
(bad)
mov
loop
or
bound
movs
push
xchg
mov
int3
unpcklps
ret
out
fist
cwde
out
push
cmp
pop
cmp
int3
adc
cmp
fwait
int3
xor
stc
aam
dec
(bad)
mov
pop
or
sbb
(bad)
jno
idiv
stc
outs
inc
jecxz
sbb
(bad)
(bad)
inc
shl
clc
mov
or
scas
daa
test
ficomp
ror
add
rcr
mov
mov
hlt
das
retf
(bad)
(bad)
call
pop
jmp
sbb
jne
enter
iret
(bad)
loop
loopne
add
sbb
(bad)
call
push
test
das
mov
aas
sti
int
fst
sbb
pop
gs
(bad)
jg
xchg
sub
lds
or
in
pop
jmp
dec
xor
mov
cmps
mov
gs
mov
pop
fmul
int3
icebp
(bad)
jg
cld
xor
or
jle
div
adc
test
ins
or
push
je
iret
fdivr
add
test
mov
inc
scas
out
leave
dec
loop
cmp
out
in
in
sub
xchg
in
sti
mov
or
(bad)
mov
data16
jp
mov
xchg
cli
mov
enter
js
pop
and
aam
sahf
or
jecxz
add
add
sbb
mov
loopne
mov
inc
cmp
sub
dec
mov
and
push
mov
repz
fcomip
jmp
pop
aaa
fidivr
and
scas
cmp
dec
pushf
xor
ss
add
fldcw
test
mov
clc
stc
inc
inc
iret
das
adc
sbb
sar
or
mov
push
inc
loop
push
out
mov
outs
bound
or
movs
mov
adc
pop
sub
fmul
jmp
push
mov
mov
xor
test
or
dec
mov
loop
call
in
cdq
mov
loope
cmp
mov
xor
repz
dec
cmps
cmp
(bad)
cmp
in
fs
stos
inc
mov
or
mov
(bad)
(bad)
call
fs
pop
pop
add
xor
iret
cmps
cmc
mov
call
or
call
leave
jnp
pop
fwait
into
mov
(bad)
(bad)
(bad)
jg
fld
mov
sbb
in
mov
shl
cmp
movs
dec
aad
pop
inc
push
call
std
push
lods
shr
jmp
ja
jge
out
xor
(bad)
jmp
mov
aas
cmps
popf
pop
dec
xor
(bad)
push
mov
mov
push
clc
jnp
daa
fs
mov
std
ret
mov
adc
(bad)
(bad)
(bad)
mov
adc
lds
sub
imul
test
cmp
fcmove
int3
fist
(bad)
(bad)
dec
retf
cmp
xor
mov
jb
scas
or
lahf
ins
scas
sbb
pop
call
call
sbb
mov
add
popf
adc
retf
fnstsw
inc
sbb
(bad)
(bad)
fcomip
or
push
pop
push
jne
int3
add
xlat
adc
jle
pop
xor
pop
inc
inc
cli
jno
jbe
cmp
shr
push
mul
std
sar
call
addr16
cli
neg
(bad)
(bad)
fcomip
outs
xchg
sbb
data16
or
cld
xchg
mov
fistp
jmp
rol
fild
std
jne
xor
(bad)
(bad)
test
pop
imul
lods
cmps
call
call
sbb
enter
mov
and
mov
(bad)
(bad)
(bad)
(bad)
dec
sbb
hlt
add
jnp
mov
shl
out
mov
retf
(bad)
(bad)
jmp
ja
repz
sub
stos
cmp
jp
xor
or
inc
fs
(bad)
(bad)
dec
out
inc
xchg
xchg
or
enter
pop
loop
(bad)
pop
push
cmc
pop
sahf
and
inc
je
add
iret
mov
arpl
push
xchg
adc
jo
pop
ret
out
mov
sar
js
(bad)
(bad)
mov
inc
pushf
sbb
sbb
sahf
ret
stc
les
sti
or
(bad)
(bad)
push
add
or
shr
fmulp
sti
sub
idiv
jg
(bad)
cld
or
mov
and
inc
test
(bad)
lock
in
addr16
sub
(bad)
(bad)
jmp
mov
mov
push
cmps
adc
sbb
out
aad
jg
out
inc
sbb
(bad)
dec
cs
sbb
adc
pop
mov
int
aas
clc
cli
or
mov
xchg
sbb
xor
into
mov
and
mov
aad
cwde
(bad)
(bad)
jg
xor
jb
push
(bad)
mul
sbb
cs
adc
bound
cwde
jge
sub
ret
fldpi
push
(bad)
(bad)
cld
xor
sub
xor
dec
push
in
xlat
in
ss
pusha
pushf
dec
test
jae
(bad)
call
sbb
rcr
out
test
jno
and
iret
(bad)
(bad)
push
push
pop
pusha
pop
loop
rcl
and
jle
push
nop
jb
ficom
nop
adc
mov
lahf
clc
add
sub
sbb
das
and
lock
retf
xchg
into
jmp
xchg
rcl
repnz
scas
jmp
aas
gs
inc
and
popf
ss
jae
popf
dec
pusha
fdivr
xor
in
and
mov
sbb
call
mov
sbb
loop
in
scas
dec
(bad)
int
jnp
xchg
push
jg
mov
(bad)
(bad)
jmp
retf
push
pusha
or
popa
mov
int3
inc
jl
mov
mov
and
pop
sub
loopne
ds
(bad)
call
xchg
mov
out
xchg
inc
cmps
clc
mov
jne
leave
mov
(bad)
(bad)
(bad)
aas
xchg
cmp
aam
mov
clc
cmp
fidiv
shl
clc
jg
push
cwde
ret
jle
mov
sub
out
cmp
movs
push
pop
dec
jge
(bad)
inc
sbb
outs
out
(bad)
jbe
fild
dec
mov
stos
(bad)
(bad)
fmul
cdq
outs
jmp
idiv
xor
es
sbb
repnz
(bad)
fucomi
repz
mov
les
out
mov
shl
ja
mov
sbb
dec
xor
jge
in
jp
loop
out
clc
(bad)
dec
aaa
add
rol
jbe
outs
cmp
pop
cmp
jmp
stc
inc
(bad)
(bad)
push
xchg
gs
daa
repnz
psubsw
sbb
jnp
jmp
mov
pushf
aas
mov
dec
xlat
xlat
sbb
mov
or
scas
adc
leave
jae
mov
fisubr
lahf
jmp
pop
icebp
mov
cdq
dec
jmp
push
cmc
test
inc
fidiv
mov
out
movs
outs
lods
fstp
xlat
loop
mov
jne
xchg
call
rol
lds
stos
and
into
(bad)
push
es
and
pop
cmp
neg
push
sub
dec
adc
std
jno
jle
and
xchg
ja
pop
mov
dec
jg
pop
data16
mov
iret
sbb
ret
test
sub
dec
dec
push
pop
mov
jl
add
mov
add
adc
xor
or
dec
ss
inc
daa
sbb
(bad)
(bad)
(bad)
(bad)
cmp
inc
(bad)
mov
iret
sub
xchg
ret
scas
mov
mov
mov
icebp
mov
adc
cs
inc
icebp
nop
js
out
mov
shl
sti
mov
(bad)
inc
js
mov
dec
cli
push
sub
adc
or
mov
(bad)
(bad)
(bad)
fild
push
add
ja
mov
or
mov
or
(bad)
mov
mov
xor
pop
dec
sub
scas
js
pop
cmp
pop
movs
push
test
sub
push
pop
sbb
(bad)
(bad)
(bad)
push
or
(bad)
das
in
add
push
ret
lahf
and
jae
xchg
adc
retf
lahf
inc
cmp
ror
lods
into
xchg
enter
stc
mov
mov
cld
jns
outs
call
mov
into
xchg
fsubp
(bad)
jg
ins
dec
add
adc
sahf
das
addps
cmp
inc
cld
mov
add
(bad)
mov
inc
jecxz
mov
and
aas
xlat
mov
std
add
dec
pop
jg
sbb
jmp
cmp
jne
adc
pop
push
ret
mov
mov
xor
js
xchg
(bad)
ins
mov
xor
pushf
(bad)
ds
jmp
lods
cmps
xchg
loope
dec
call
adc
loopne
mul
cmps
cmp
(bad)
(bad)
and
outs
leave
aam
fcom
xchg
push
xor
dec
cmp
gs
pop
mov
clc
(bad)
(bad)
(bad)
mov
push
shr
cmp
ja
adc
enter
dec
std
jmp
dec
(bad)
sbb
lahf
test
cdq
iret
add
cmovnp
or
dec
and
fs
xchg
cmp
loopne
cmp
push
outs
repz
js
inc
jno
cld
sbb
or
or
cmps
fldcw
xchg
pop
xchg
clc
jg
and
push
stos
out
mov
shl
(bad)
(bad)
(bad)
out
cli
cmp
cmp
jns
jge
je
sub
stc
and
test
fisub
cmp
(bad)
(bad)
jmp
sbb
mov
mov
pop
cmp
cmp
jb
sbb
cld
jnp
jnp
cwde
xor
nop
mov
jl
(bad)
jmp
out
push
adc
mov
mov
pop
js
xchg
lahf
es
(bad)
(bad)
(bad)
jmp
div
hlt
sub
or
sbb
and
loopne
and
out
and
or
or
ror
xor
mov
mov
mov
test
movs
call
cdq
pop
xlat
aad
pop
and
loop
mov
cmc
stos
mov
fld
mov
out
std
(bad)
(bad)
(bad)
call
popa
xchg
pop
div
sahf
out
stc
(bad)
jl
xchg
leave
mov
addr16
cmc
push
push
addr16
push
hlt
(bad)
(bad)
(bad)
call
add
fwait
ss
cs
add
fimul
(bad)
(bad)
(bad)
push
addr16
out
cmp
jle
inc
ret
dec
add
das
xor
add
push
lods
addr16
sar
dec
movs
mov
lock
xor
inc
scas
mov
(bad)
(bad)
jg
cld
sub
in
inc
scas
pop
mov
jb
sub
lea
rcl
pop
fnstenv
movs
iret
(bad)
(bad)
(bad)
jmp
fs
ret
call
hlt
cdq
dec
fisub
out
daa
mov
js
xchg
sbb
(bad)
fbstp
(bad)
jge
scas
int
dec
adc
mov
pushf
and
mov
and
bound
cmps
(bad)
out
(bad)
(bad)
mov
mov
scas
imul
xchg
fsubr
xor
(bad)
inc
push
sub
cmps
hlt
test
mov
fsub
imul
test
jge
fisubr
adc
jae
dec
out
mov
xchg
cli
test
addr16
cmp
call
mov
xchg
call
ds
mov
add
lahf
ret
out
int
ja
cmp
jmp
or
in
adc
mov
xchg
or
pop
and
fisttp
push
mov
push
pushf
iret
inc
test
pop
icebp
push
and
arpl
mov
sub
iret
or
xlat
jmp
inc
out
stc
ja
sar
push
scas
adc
cli
and
cmp
xchg
xor
or
call
cwde
jp
xorps
push
movs
and
and
lock
add
mov
lods
das
(bad)
(bad)
call
in
ror
jmp
loop
in
popf
pushf
pop
sar
pop
jmp
(bad)
call
std
mov
push
inc
rol
jp
xor
fcmovnu
inc
jecxz
fcmovnu
or
inc
(bad)
ins
sar
add
jmp
xor
cli
icebp
clc
adc
jb
fdivr
imul
aaa
std
jmp
push
pop
sub
xchg
jmp
sbb
sbb
cmp
jb
das
call
jmp
add
das
movs
pushf
push
aas
sar
lds
adc
jmp
inc
and
mov
in
xor
fsubr
mov
pop
shr
sub
leave
sbb
jae
inc
into
jle
(bad)
(bad)
dec
mov
shl
lahf
(bad)
nop
scas
adc
cdq
push
hlt
sbb
rcl
ret
(bad)
(bad)
jmp
sbb
sar
jnp
out
in
mov
xor
sub
(bad)
jle
xor
jg
mov
xchg
or
fwait
test
push
(bad)
(bad)
call
repnz
iret
push
(bad)
stc
ret
add
add
xchg
xchg
div
retf
(bad)
fild
fidiv
(bad)
popa
jns
in
sbb
sub
in
pop
mov
mov
test
ret
dec
ds
mov
(bad)
icebp
inc
mov
adc
icebp
mov
out
mov
loopne
jbe
cld
(bad)
(bad)
call
cmc
loop
xor
pushf
rcl
jmp
jne
fistp
aas
lods
dec
retf
ret
(bad)
call
push
dec
arpl
sbb
pop
mov
and
pop
out
sahf
(bad)
(bad)
(bad)
jg
mov
dec
sar
call
in
loopne
aad
(bad)
jne
in
daa
not
jb
hlt
mov
jmp
sub
loopne
ret
sub
fistp
or
retf
or
loop
pop
rcr
retf
stc
in
imul
mov
sub
es
xchg
pop
dec
out
iret
cs
loopne
jmp
pop
fwait
loope
ffree
mov
shl
cs
lock
and
mov
jmp
test
sbb
xor
and
pop
add
pusha
loop
stos
(bad)
clc
lds
call
dec
sbb
gs
jmp
(bad)
mov
(bad)
inc
sub
jae
jmp
mov
jp
(bad)
mov
loope
das
or
sub
shl
call
ja
call
sub
sbb
xor
adc
(bad)
jnp
leave
ret
xor
add
mov
mov
push
jne
ja
inc
jnp
and
and
jmp
test
jmp
pop
push
pushf
dec
cmp
aas
pop
out
addr16
cs
scas
sub
pop
jmp
les
cld
imul
(bad)
(bad)
(bad)
inc
add
mov
push
fs
in
les
pop
sub
das
xchg
js
jg
jmp
mov
dec
lahf
sahf
inc
lods
xchg
jb
enter
sbb
hlt
shr
call
(bad)
xchg
adc
loopne
xchg
(bad)
call
imul
cli
cmp
sti
aas
inc
jmp
out
or
mov
(bad)
jmp
aam
mov
push
push
add
sbb
daa
mov
gs
sbb
std
das
clc
jge
or
das
cld
arpl
mov
mov
std
or
out
adc
pop
cwde
call
or
cmp
push
shl
lods
or
and
jmp
lock
sti
hlt
js
dec
ins
xchg
pushf
das
clc
sti
xchg
call
jmp
xor
xchg
mov
mov
(bad)
nop
inc
(bad)
jmp
(bad)
(bad)
(bad)
call
hlt
mov
in
inc
rcr
mov
loop
stos
adc
mov
cmps
(bad)
in
inc
cmp
stos
movs
sbb
jg
jg
and
xchg
js
ret
add
out
in
lods
mov
loope
dec
(bad)
lods
xor
fistp
iret
mov
jmp
aad
bound
or
dec
lock
push
and
(bad)
call
cmp
not
in
or
loop
rcl
outs
inc
pop
xchg
(bad)
stos
mov
mov
cli
(bad)
call
repnz
mov
movs
dec
fcomp
loope
ror
jmp
in
cmp
fist
test
(bad)
cmc
jg
or
lock
dec
inc
xchg
jnp
cmc
mov
cld
sbb
out
dec
addr16
mov
jle
xchg
iret
sbb
(bad)
mov
pop
pop
scas
imul
pusha
sbb
pop
and
(bad)
push
jle
fadd
popa
mov
(bad)
mov
push
fst
dec
jo
or
jmp
mov
push
sub
call
fist
xchg
fild
xchg
(bad)
xlat
dec
push
mov
and
mov
(bad)
(bad)
jmp
fucomi
cmps
mov
addr16
jge
mov
gs
sbb
mov
xor
std
mov
rcr
adc
(bad)
(bad)
jmp
lods
push
jmp
xchg
std
jl
pop
fmul
mov
pushf
fadd
je
dec
push
dec
jl
mov
(bad)
jg
and
icebp
movs
in
dec
push
enter
inc
cmp
sbb
rol
(bad)
cdq
adc
(bad)
(bad)
mov
jge
cmp
inc
dec
xchg
cmps
enter
push
inc
mov
mov
gs
push
test
test
xchg
mov
push
lock
(bad)
out
sbb
ds
(bad)
(bad)
(bad)
(bad)
jg
movs
push
shr
cmp
loop
lods
fstp
call
mov
stc
in
adc
or
(bad)
iret
pop
das
xor
push
in
inc
mov
out
sbb
dec
js
add
xchg
dec
enter
(bad)
jg
mov
je
icebp
jb
push
jnp
inc
cdq
xchg
sbb
(bad)
(bad)
lods
(bad)
cld
dec
(bad)
sti
cmp
ins
sbb
pop
ds
into
out
and
cdq
(bad)
push
xor
fidiv
les
dec
test
or
mov
lock
ret
(bad)
push
popf
ret
push
and
mov
ins
xchg
mov
sbb
and
arpl
(bad)
jmp
loop
aad
popf
adc
movs
inc
pop
addr16
adc
pop
pop
std
adc
pop
dec
(bad)
ftst
je
(bad)
(bad)
(bad)
inc
push
mov
mov
jb
ds
mov
and
popa
mov
call
xor
stos
test
out
adc
out
push
xor
(bad)
in
aaa
mov
in
(bad)
mov
pop
in
mov
ins
sbb
and
pushf
pop
int
jp
mov
jmp
add
mov
fcmovnb
cmp
loopne
fs
loopne
popf
int
dec
adc
(bad)
out
clc
mov
inc
jno
jno
xor
loop
xchg
jle
mov
dec
sub
es
(bad)
je
(bad)
(bad)
call
div
xor
test
fmul
sbb
xchg
push
mov
leave
imul
(bad)
(bad)
(bad)
dec
das
out
nop
stos
fwait
shl
jecxz
sub
or
(bad)
mov
lods
xchg
(bad)
lock
(bad)
inc
scas
into
movs
cli
retf
(bad)
pop
mov
sub
sub
inc
pushf
sub
cli
pop
sub
and
ins
cmp
(bad)
mov
(bad)
inc
fdivr
imul
push
or
outs
out
in
sub
je
shr
das
sahf
pxor
add
mov
pop
out
mov
pop
fxtract
dec
(bad)
sub
stos
mov
(bad)
cmp
stc
cmp
push
inc
aaa
retf
mov
(bad)
(bad)
(bad)
call
ins
push
outs
adc
xchg
jo
and
iret
or
sbb
lea
(bad)
(bad)
fcomip
jne
movs
loopne
xchg
and
stos
in
pop
and
ja
outs
sub
dec
adc
call
dec
mov
in
test
mov
xchg
js
imul
jge
mov
and
(bad)
sub
jg
fs
das
sar
jmp
mov
clc
jmp
(bad)
(bad)
(bad)
inc
dec
jmp
imul
add
inc
adc
fcomip
(bad)
call
inc
cs
arpl
xor
ret
jno
mov
inc
jb
push
call
xchg
out
sub
or
or
scas
cmp
mov
aas
adc
push
movs
outs
(bad)
clc
xchg
push
mov
xchg
or
inc
or
(bad)
mov
(bad)
in
lods
jecxz
lods
inc
xchg
fidiv
sbb
jg
cli
mov
lock
jmp
leave
adc
fist
retf
(bad)
(bad)
(bad)
inc
ret
dec
adc
mov
mov
inc
icebp
xchg
pop
arpl
pop
cmp
(bad)
sti
jle
data16
push
cld
fild
mov
pop
test
mov
mov
or
push
inc
dec
(bad)
(bad)
(bad)
call
sbb
test
sub
add
pop
leave
sbb
jmp
int3
mov
mov
sub
mov
scas
inc
js
test
mov
aam
mov
xor
inc
out
pop
call
dec
and
sti
sbb
hlt
test
out
das
(bad)
(bad)
(bad)
jmp
lods
xchg
mul
or
sbb
cmp
or
clc
cmp
lods
jp
(bad)
(bad)
call
clc
add
cdq
outs
les
pushf
mov
(bad)
(bad)
jmp
push
repnz
adc
mov
int
dec
push
out
dec
je
add
cmp
xor
mov
dec
rcr
xchg
mov
daa
inc
inc
mov
ror
jmp
add
out
(bad)
mov
cmps
sbb
mov
mov
call
inc
xor
jmp
inc
mov
mov
pop
jle
add
cs
sub
mov
bound
mov
out
movs
data16
(bad)
call
and
aaa
(bad)
scas
mov
es
cmps
dec
es
xchg
(bad)
jmp
out
shl
int3
adc
inc
jecxz
inc
sbb
clc
test
jge
int
add
mov
mov
push
cmp
sub
xchg
lods
push
(bad)
mov
call
and
dec
fld
(bad)
dec
mov
(bad)
mov
pusha
jmp
dec
cs
jp
cs
mov
clc
(bad)
jmp
cli
mov
fwait
inc
(bad)
je
stos
cld
pop
jbe
push
mov
mov
xchg
mov
mov
(bad)
(bad)
(bad)
dec
std
or
lahf
xor
inc
push
in
dec
outs
aaa
xor
(bad)
mov
and
loop
loopne
outs
or
pushf
daa
je
loop
icebp
in
pop
imul
jp
and
in
push
cdq
pop
add
sar
push
and
clc
test
mov
popa
push
outs
mov
scas
adc
inc
mov
rcr
pop
outs
or
sbb
mov
jge
clc
xor
jle
jo
jb
aaa
cmp
xchg
bound
icebp
test
mov
cmps
test
test
xlat
sar
ret
(bad)
jmp
ins
iret
rol
stc
add
and
arpl
into
jecxz
je
gs
cld
sbb
jg
and
jle
xor
fldcw
psllw
lock
call
(bad)
jnp
or
xchg
pop
cwde
sar
add
push
sbb
(bad)
fistp
sbb
jo
sbb
sbb
loopne
inc
mov
lods
mov
es
call
lahf
push
or
movs
jns
inc
out
push
pop
jmp
fs
mov
(bad)
(bad)
(bad)
(bad)
js
jl
cmp
cmp
mov
es
mov
cdq
cld
and
dec
mov
xor
cmp
(bad)
call
mov
call
hlt
sub
aad
jmp
data16
xor
mov
mov
popa
sbb
(bad)
(bad)
call
xor
adc
xchg
mov
shr
std
shl
in
(bad)
jmp
mov
loopne
shl
cdq
sub
(bad)
out
jmp
mov
(bad)
call
sub
in
adc
pushf
sar
jg
arpl
mov
div
scas
xlat
hlt
into
jl
jl
push
std
or
cld
(bad)
fcomip
jmp
je
add
jb
xchg
xchg
cmp
cmc
sub
std
pop
movs
lods
imul
mov
push
scas
xor
xor
test
(bad)
(bad)
jg
ret
jl
cld
pop
mov
dec
out
pop
sbb
arpl
pop
imul
mov
scas
test
pusha
das
psrld
and
enter
mov
jo
ret
(bad)
inc
cld
cmp
arpl
test
ror
sub
jge
outs
sar
push
ins
push
popa
jge
lahf
aam
jmp
add
add
jg
xor
sbb
pop
pop
mov
scas
pcmpgtb
(bad)
(bad)
push
sbb
loopne
call
cli
pop
mov
cdq
sub
lods
dec
repz
jmp
daa
jo
iret
call
aas
fsub
or
fisub
inc
jmp
cwde
xchg
lods
je
stos
outs
pop
cmp
lock
pop
movs
pop
movs
cmp
test
pop
outs
add
lods
scas
outs
pop
test
sub
mov
pop
dec
imul
sub
mov
fnstsw
idiv
(bad)
(bad)
(bad)
(bad)
jns
idiv
and
jnp
pusha
call
xchg
dec
mov
cmps
jo
movs
addr16
(bad)
lods
jg
(bad)
std
mov
and
mul
xor
and
mov
(bad)
(bad)
call
je
std
push
add
pop
xchg
jmp
xchg
fidivr
out
rol
paddb
(bad)
(bad)
(bad)
(bad)
mov
aas
in
jecxz
pushf
addr16
xchg
repz
push
jne
into
push
(bad)
imul
cmps
cmps
mov
sub
out
push
shl
(bad)
cmp
push
test
nop
inc
xchg
sbb
out
mov
(bad)
stc
aam
xor
loopne
jb
(bad)
jg
mov
pop
pop
pop
(bad)
inc
test
retf
sub
push
push
lock
mov
jge
not
in
fsubr
cmps
xor
(bad)
(bad)
std
fwait
data16
inc
jge
jmp
fsubrp
fwait
repz
inc
fild
pop
pop
cmc
inc
clc
jae
gs
ret
jnp
scas
adc
mov
arpl
mov
scas
movs
retf
out
ffreep
(bad)
push
aam
xlat
sub
jl
hlt
mov
sub
xchg
push
jg
ss
cld
lahf
popf
jmp
mov
xchg
add
xchg
mov
ss
repz
(bad)
dec
fisub
pop
mov
shl
rol
mov
inc
sar
int3
dec
imul
sbb
dec
or
pop
out
arpl
(bad)
(bad)
inc
mov
mov
out
movs
dec
mov
xchg
test
cmc
mov
inc
in
(bad)
(bad)
(bad)
fcom
pusha
mov
inc
call
pop
sar
int
fcmovnb
cmc
popa
or
stos
mov
dec
test
add
mov
mov
ss
jmp
gs
(bad)
push
sbb
push
test
aas
xchg
ds
pop
in
push
int
cdq
aam
mov
hlt
lds
jne
das
push
push
int
xor
(bad)
mov
cmp
mov
mov
xor
(bad)
and
mul
push
mov
or
pop
cmp
pop
mov
sar
xor
shl
(bad)
(bad)
(bad)
(bad)
in
or
sbb
fiadd
(bad)
pop
fmul
push
mov
push
xlat
xchg
dec
mov
push
iret
cmp
(bad)
xchg
cmp
in
retf
mov
pop
hlt
cmp
jns
(bad)
(bad)
dec
ds
dec
cmp
xchg
retf
push
sub
icebp
dec
in
imul
mov
leave
rol
cmps
idiv
inc
jmp
dec
outs
or
std
rcr
push
mov
into
or
adc
mov
(bad)
inc
sub
xor
jb
loopne
lahf
fidiv
dec
or
mov
popf
inc
jb
icebp
inc
in
dec
out
mov
frstor
ret
add
xchg
cmp
dec
jl
in
mov
cmp
(bad)
dec
sbb
aam
iret
push
cld
adc
or
lahf
js
sti
pop
loopne
stos
add
jmp
cli
test
cs
pop
cmps
and
cmp
fisubr
data16
or
(bad)
repnz
jge
jmp
inc
cld
(bad)
dec
push
ss
dec
jmp
rcr
pop
add
cmp
pop
adc
addr16
xchg
cli
jmp
push
push
aad
push
out
sbb
sbb
je
cs
xor
stos
or
sub
stos
aaa
xor
js
scas
jg
imul
xchg
or
jl
adc
cmc
aaa
imul
push
mov
(bad)
pushf
or
fild
lods
jg
movs
aad
stos
fsqrt
mov
(bad)
fild
push
aam
sub
retf
mov
fisubr
pop
xchg
idiv
sar
int
mov
shl
push
xor
jae
call
jmp
mov
cmps
(bad)
leave
cmp
xchg
cdq
ss
cli
in
inc
inc
cmp
repnz
enter
inc
jge
retf
ficom
std
not
jns
jmp
in
mul
dec
cmp
ret
clc
jg
shl
pop
pusha
pop
(bad)
mov
lods
(bad)
(bad)
dec
mov
jnp
xor
cmp
outs
xlat
js
ja
push
test
fcomip
push
out
imul
xchg
iret
retf
aad
js
(bad)
jno
mov
enter
loopne
sbb
or
jo
jmp
inc
jl
ja
mov
lods
loop
ficomp
jmp
mov
out
ins
call
out
and
sar
jg
push
in
push
movs
fisttp
fild
mov
xchg
xor
gs
fcomip
call
mov
shr
fld
jns
pop
add
movs
and
retf
cld
or
(bad)
(bad)
(bad)
sti
mov
lock
xor
sbb
cmp
push
inc
(bad)
xchg
sub
cmp
shl
push
out
fisttp
(bad)
jg
push
sbb
fsub
outs
aaa
lods
loopne
push
out
dec
aaa
sub
mov
push
mov
inc
jecxz
popa
sbb
mov
mov
pop
retf
cli
add
or
rcl
mov
cmp
aaa
sbb
(bad)
pop
outs
fild
push
mov
std
(bad)
mov
fs
sbb
pop
cwde
(bad)
jbe
stc
lods
push
shr
imul
(bad)
(bad)
push
movs
retf
sbb
dec
pop
jne
ds
dec
jmp
jnp
sub
jmp
loopne
jmp
cmc
jbe
push
sti
sar
xchg
jg
pop
cld
add
push
test
pop
sbb
out
pushf
or
cmps
sbb
push
push
pop
push
je
jbe
aas
ror
ja
gs
jae
xor
scas
(bad)
(bad)
(bad)
fld
mov
call
sbb
in
jl
xor
fdivrp
pop
mov
(bad)
(bad)
dec
jg
mov
pop
mov
xor
cld
jg
loop
movs
mov
(bad)
(bad)
(bad)
mov
into
xor
addr16
test
xchg
cmp
cmc
outs
or
cmc
(bad)
inc
cmps
fsubr
inc
ins
mov
leave
retf
mov
add
(bad)
jmp
cmc
inc
ret
repnz
sub
cwde
(bad)
cmc
aam
cmp
push
sbb
jg
mov
ss
fst
into
fwait
pop
xor
dec
es
jmp
xor
pop
call
fistp
push
scas
icebp
in
daa
daa
test
in
cmp
cmp
loopne
rep
(bad)
scas
and
cmp
(bad)
(bad)
dec
scas
into
test
int3
addr16
fcomip
(bad)
(bad)
call
pop
rol
jne
sbb
dec
mov
dec
xor
push
test
aas
stos
or
test
(bad)
fcomip
call
stos
cmp
mov
sar
(bad)
jmp
enter
jge
push
mov
pop
das
sbb
sbb
(bad)
loope
jmp
sti
jb
out
cmc
das
cli
mov
enter
out
xchg
dec
mov
mov
xor
outs
sahf
dec
cdq
js
scas
mov
sbb
push
jg
mov
dec
pop
jmp
mov
mov
jmp
cmp
(bad)
(bad)
(bad)
jmp
mov
cmp
sbb
addr16
js
mov
addr16
mov
(bad)
pop
iret
ins
ds
ja
ret
inc
in
or
aas
add
xlat
jmp
fucomp
int3
pop
fsub
mov
sub
movs
idiv
sub
or
dec
dec
jg
and
fdivrp
test
or
add
sub
pop
pop
xchg
aam
hlt
(bad)
(bad)
in
jo
inc
(bad)
call
xchg
(bad)
jp
mov
mov
popf
inc
gs
pop
push
push
sbb
movs
mov
test
fimul
fistp
enter
aam
loopne
adc
out
xor
arpl
mov
sbb
test
jae
into
jnp
cld
mov
popa
inc
cld
dec
lods
pop
xchg
(bad)
(bad)
call
push
adc
addr16
loop
cmc
mov
cwde
mov
popf
outs
test
scas
xchg
in
dec
add
push
dec
push
cmp
movs
aaa
adc
imul
ja
pusha
dec
push
fs
cmp
cmp
stos
jg
(bad)
push
iret
sar
ds
jmp
xor
sub
(bad)
cmp
rcr
dec
lea
add
sbb
xlat
or
sbb
and
mov
jmp
shl
cmps
adc
jns
cmp
pop
hlt
sar
iret
or
mov
jne
pop
mov
and
sbb
cmp
lock
popf
adc
ds
jg
jmp
hlt
sti
and
or
dec
mov
call
mov
push
nop
(bad)
and
es
je
cmp
jbe
xchg
push
xchg
(bad)
lds
mov
sti
inc
loop
cwde
mov
lds
out
clc
jmp
scas
nop
cli
xchg
pop
sbb
and
mov
mov
ja
enter
ins
push
in
sar
sbb
(bad)
xchg
jmp
call
mov
mov
in
mov
clc
jnp
cmp
cli
retf
sub
pop
lock
(bad)
mov
xor
jne
int
sub
sbb
push
push
sti
(bad)
jg
xlat
xchg
dec
pusha
mov
bound
xchg
cli
daa
ret
jne
push
(bad)
jmp
or
push
ret
js
repnz
popa
push
hlt
cmp
cmps
lock
(bad)
call
add
ins
outs
cmp
and
add
mov
out
mov
(bad)
(bad)
call
sti
sahf
(bad)
fidivr
xchg
out
out
clc
or
and
jg
(bad)
call
aam
repz
xchg
mov
sub
ret
dec
std
push
fnstsw
jle
push
inc
(bad)
add
sar
out
rol
jmp
sbb
pop
pop
sbb
mov
pop
cmps
imul
dec
enter
jg
jl
mov
stos
daa
jb
mov
jg
xlat
push
cmp
or
sti
dec
out
inc
mov
idiv
cmp
movs
addr16
aaa
jbe
cmps
push
js
xor
(bad)
call
cli
(bad)
(bad)
(bad)
jmp
mov
adc
sti
lahf
inc
jp
sbb
imul
retf
fdiv
cli
mov
adc
js
cli
push
xlat
cmps
loopne
fidiv
(bad)
dec
sbb
mov
push
and
jg
mov
jmp
(bad)
call
pushf
dec
mov
push
mov
repz
les
(bad)
dec
iret
xchg
cli
dec
jb
push
shl
xchg
push
xor
popf
add
es
test
ror
pop
out
ror
in
in
add
(bad)
(bad)
jmp
lods
cmps
loop
sub
pop
jo
cs
loopne
add
pop
mov
fisub
cmp
push
(bad)
push
adc
std
cmp
jg
out
aam
add
jecxz
popf
push
xor
ss
sbb
mov
iret
movs
scas
dec
cmp
jbe
or
call
test
pop
push
inc
not
mov
mov
test
mov
push
(bad)
(bad)
(bad)
inc
cmp
and
in
cmp
test
std
clc
aas
xchg
mov
adc
cmp
xor
test
movs
pop
pop
addr16
sahf
push
fwait
adc
jmp
stos
adc
jne
mov
arpl
(bad)
(bad)
jmp
lods
jg
pop
js
loopne
js
imul
(bad)
std
jecxz
mov
std
fwait
cmp
(bad)
(bad)
(bad)
(bad)
jmp
std
call
jle
xor
jl
std
add
aas
loope
(bad)
(bad)
dec
push
pusha
setg
imul
ret
data16
add
ins
pop
push
mov
add
sti
out
inc
sub
mov
dec
loope
jl
mov
adc
pop
test
and
push
dec
pop
repz
sbb
add
mov
(bad)
mov
sbb
(bad)
dec
movs
sar
jbe
add
jge
js
in
movs
enter
(bad)
(bad)
(bad)
push
ret
cmp
pop
mov
jp
inc
lds
cmp
and
(bad)
jg
icebp
adc
fisttp
mov
cmp
stos
jp
daa
retf
ret
sbb
jmp
(bad)
mov
cli
jmp
push
mov
adc
lock
mov
inc
inc
(bad)
(bad)
(bad)
jg
mov
dec
jmp
in
add
popf
shr
pop
in
push
iret
inc
add
jecxz
stc
or
sub
adc
popf
enter
ret
js
cmps
loop
sbb
out
hlt
inc
enter
pop
hlt
xchg
arpl
push
mov
mov
sbb
xchg
add
hlt
ret
pop
jns
push
mov
shr
and
jg
sub
sub
or
pop
or
xor
xchg
jle
cmc
mov
es
jmp
std
ins
shr
leave
aas
xor
movs
les
jecxz
pop
push
(bad)
sbb
enter
xor
fstp
enter
push
and
daa
mov
cmc
jp
mov
ficom
xlat
push
(bad)
jl
dec
fs
xchg
or
(bad)
into
ins
ss
movs
iret
pop
call
dec
mov
cwde
push
out
retf
fadd
dec
xchg
jo
push
clc
jg
sub
pop
loop
sbb
fstp
inc
idiv
(bad)
jmp
sbb
xor
loop
ds
mov
aas
pop
and
pop
push
jmp
jge
ret
xchg
jecxz
jbe
not
push
pop
jmp
jo
pusha
pop
mov
jl
pop
(bad)
dec
ficomp
in
mov
das
and
xchg
jbe
mov
push
js
fwait
imul
int3
js
sahf
push
mov
mov
data16
in
jecxz
aam
cs
fsubr
fucomi
xchg
xchg
dec
and
or
pop
repnz
jmp
(bad)
(bad)
jmp
xchg
lods
bound
xor
cld
cli
pop
cdq
imul
div
jae
in
(bad)
mov
lock
loop
and
out
retf
nop
mov
sbb
cli
cmp
out
sub
adc
dec
jb
sahf
and
mov
ror
xchg
dec
sbb
lock
lock
(bad)
in
cmp
outs
ret
and
das
js
imul
mov
cmp
or
dec
pop
dec
and
fist
adc
test
scas
(bad)
pop
xchg
add
add
fcos
inc
mov
out
sti
(bad)
cmp
jecxz
(bad)
mov
iret
inc
pshufw
xchg
outs
in
dec
jo
add
dec
jne
mov
aam
add
mov
pop
xor
or
(bad)
mov
inc
sbb
outs
imul
mov
std
and
mov
imul
aam
pop
mov
shl
daa
(bad)
fcmovnbe
retf
xchg
sbb
add
add
cmps
jo
std
adc
inc
sub
(bad)
(bad)
(bad)
jmp
inc
jmp
fnstenv
inc
mov
mov
stc
mov
test
inc
not
jmp
in
xchg
mov
and
dec
mov
jnp
mov
jmp
cdq
dec
rol
jge
adc
mov
test
(bad)
(bad)
mov
cwde
out
pop
mov
cmp
jnp
mov
lock
loopne
test
out
xlat
dec
dec
mov
xor
dec
aas
jne
pushf
(bad)
rcr
xchg
mov
mov
(bad)
fs
cs
mov
jecxz
and
pusha
inc
mov
sbb
outs
mov
(bad)
fcomip
sbb
arpl
pop
mov
mov
mov
fild
hlt
jnp
mov
and
das
outs
nop
jl
in
(bad)
(bad)
fild
js
je
das
xchg
cmp
in
fbld
jo
loop
ret
imul
adc
(bad)
mov
js
mov
fcom
(bad)
jle
gs
sbb
xchg
adc
test
dec
add
jge
(bad)
(bad)
(bad)
(bad)
mov
aad
mov
mov
cmps
jmp
xor
mov
loope
(bad)
xor
(bad)
jmp
fcom
add
in
movs
data16
sub
cs
repnz
jmp
sar
jne
daa
lods
mov
fadd
mov
(bad)
jge
cdq
cmp
cli
xor
addr16
scas
mov
xchg
cmp
into
mov
ja
(bad)
call
test
popf
sbb
scas
shr
cli
leave
imul
addr16
adc
jbe
mov
jmp
lods
sti
dec
cli
or
push
sub
(bad)
(bad)
cmp
and
fnstcw
out
retf
call
shr
sbb
jg
lock
ds
into
inc
in
xor
mov
jns
(bad)
dec
lock
mov
xchg
mov
inc
imul
xor
cmp
dec
jbe
cli
sub
outs
xor
and
push
cs
adc
pop
mov
aad
hlt
js
push
leave
xchg
dec
(bad)
test
or
cmp
sbb
pusha
icebp
jecxz
aaa
out
adc
mov
xchg
mov
mov
(bad)
(bad)
jmp
fsub
mov
mov
sti
mov
mov
adc
xchg
(bad)
call
cld
xlat
pop
mov
aad
sbb
jl
fnop
rcl
arpl
ins
(bad)
(bad)
(bad)
(bad)
in
pushf
hlt
cdq
mov
into
jl
jge
sub
add
xchg
push
cmp
(bad)
(bad)
(bad)
(bad)
aas
leave
cmp
push
ins
ins
popf
adc
lods
aas
call
loope
mov
in
cmc
(bad)
call
jmp
cli
daa
mov
js
xchg
dec
pop
and
aas
cdq
gs
inc
push
sbb
fld
shl
into
sbb
ss
pop
push
jmp
lods
xchg
mov
repz
cli
(bad)
cmps
mov
mov
sbb
fsub
test
inc
clc
inc
jmp
push
xchg
popf
test
out
(bad)
(bad)
mov
jb
(bad)
mov
std
cmp
(bad)
cmp
lahf
(bad)
dec
push
lea
mov
pop
sar
lods
ret
out
cmovp
loope
cld
sub
xchg
mov
mov
sbb
mov
clc
fisub
mov
ret
dec
repnz
sub
or
inc
cld
(bad)
call
add
xor
(bad)
and
mov
into
mov
and
inc
xor
pop
int3
mov
mov
mov
std
add
sub
add
inc
iret
(bad)
and
pop
je
in
push
dec
inc
clc
or
inc
(bad)
mov
cli
adc
jne
popf
shl
int
fxch
pop
adc
pop
call
pusha
int
sbb
(bad)
(bad)
(bad)
jmp
lods
int
dec
mov
xchg
jp
vdivps
jg
test
xchg
adc
fcomip
(bad)
mov
xor
pop
mov
push
inc
fmul
cmp
leave
fwait
gs
hlt
es
cmp
sub
pop
in
inc
xchg
lock
in
stos
cmp
int3
in
loopne
pop
push
inc
out
sti
mov
lahf
clc
arpl
(bad)
jg
xchg
(bad)
outs
mov
cmps
in
ret
pushf
push
retf
mov
sub
fwait
clc
pop
push
adc
mov
retf
sar
(bad)
push
jb
sti
cli
lods
mov
jp
push
rol
xchg
pop
or
(bad)
xor
and
(bad)
(bad)
(bad)
(bad)
call
or
ds
push
and
js
(bad)
sahf
jbe
cmp
call
iret
or
aas
adc
(bad)
call
and
dec
movs
cdq
dec
push
mov
fwait
dec
cli
xchg
sub
(bad)
(bad)
jg
mov
in
cmp
outs
lea
ins
mov
popa
popf
xor
pop
(bad)
(bad)
(bad)
call
jnp
popaw
fnsave
cmps
sub
icebp
cmp
cmps
push
or
je
(bad)
bound
jge
(bad)
(bad)
(bad)
cmp
sbb
fmul
or
cmp
in
pop
add
neg
icebp
adc
push
clc
push
jmp
cld
xchg
jae
inc
(bad)
mov
pop
stos
repz
jmp
dec
in
in
pop
inc
and
sbb
out
stc
pop
push
(bad)
out
add
outs
int3
xchg
mov
adc
sar
call
cmp
add
push
sahf
hlt
jns
out
lahf
adc
in
add
aaa
pushf
pop
movs
mov
cli
shl
dec
sbb
lea
cmc
push
sar
fsub
es
cld
jmp
cwde
pop
add
mov
jno
mov
into
popf
loop
xor
movs
or
adc
and
xchg
or
std
xchg
mov
(bad)
aam
adc
data16
jle
xor
ret
xchg
(bad)
(bad)
jg
dec
cld
sahf
in
pop
stc
mov
or
dec
popa
dec
ret
adc
pop
repnz
mov
jecxz
dec
jo
ds
mov
(bad)
inc
cld
sub
dec
je
mov
cmp
popf
and
loopne
fbstp
scas
add
jmp
sub
sbb
icebp
mov
pop
sahf
iret
ja
mov
(bad)
(bad)
push
iret
jecxz
pop
in
mov
xor
shr
mov
sar
inc
leave
sbb
ds
cld
sar
leave
cmp
call
rol
imul
jp
fwait
in
(bad)
(bad)
dec
pop
(bad)
sti
fidivr
dec
push
cld
pop
dec
outs
ror
and
es
lods
frstor
adc
xchg
(bad)
(bad)
(bad)
(bad)
jle
out
jle
mov
clc
jg
mov
in
fstp
push
call
push
loop
jg
pop
lock
(bad)
(bad)
(bad)
std
or
sti
daa
jmp
stc
aad
test
bswap
inc
clc
shl
(bad)
icebp
mov
ds
loope
push
std
(bad)
jmp
pop
and
out
aam
adc
inc
jno
xchg
stos
push
ret
(bad)
(bad)
inc
(bad)
(bad)
mov
jb
and
xor
sbb
icebp
(bad)
jg
pop
dec
dec
dec
mov
sub
jmp
je
popf
ret
mov
ret
mov
in
dec
lock
jo
sar
(bad)
jg
out
adc
xor
inc
outs
aaa
and
mov
scas
lahf
lea
shl
aaa
xor
jmp
cs
sahf
push
call
repnz
xor
xchg
mov
(bad)
(bad)
(bad)
dec
sbb
mov
xor
and
stc
or
and
neg
repz
or
sbb
dec
into
sar
xchg
shl
jmp
pushf
aaa
xor
jle
addr16
inc
jns
xlat
or
sub
stos
jl
push
movs
mov
xlat
(bad)
jmp
jp
loope
imul
and
pop
int3
jl
xchg
(bad)
ins
dec
jp
mov
std
jmp
out
aaa
les
add
mov
fld
dec
(bad)
jmp
jp
sub
cmps
dec
push
jbe
test
aas
cmps
push
sar
(bad)
sbb
(bad)
jmp
retf
mov
gs
push
repz
icebp
popa
aas
retf
aam
test
cli
(bad)
fisttp
scas
xor
sub
out
cwde
hlt
mov
mov
outs
loopne
or
lahf
mov
cmc
pushf
cli
dec
jmp
nop
and
xchg
hlt
sub
or
fst
(bad)
jmp
or
and
xchg
addr16
dec
out
jmp
pop
mov
mov
mov
jmp
fwait
mov
fnstenv
lds
int3
dec
push
and
pop
cld
lea
movs
mov
adc
lahf
not
adc
mov
jns
mov
fmul
in
adc
xor
push
push
add
cmps
cdq
(bad)
outs
mov
jne
arpl
adc
pop
iret
gs
fucomp
xchg
jnp
xchg
call
fwait
stc
adc
jb
and
hlt
iret
inc
mov
add
out
dec
call
mov
(bad)
jmp
xchg
dec
loop
jns
gs
jb
sub
jmp
mov
lea
jg
test
adc
and
xor
ja
lahf
out
dec
(bad)
(bad)
(bad)
push
mov
daa
push
ror
pushf
bound
xchg
dec
mov
(bad)
(bad)
(bad)
call
(bad)
jle
scas
retf
xor
sub
sub
mov
scas
mov
outs
pop
scas
(bad)
(bad)
jmp
and
imul
mov
sbb
mov
mov
aas
jle
(bad)
(bad)
dec
fstp
jmp
push
cmc
add
rcl
aam
push
(bad)
into
daa
sbb
or
fnstcw
rcl
retf
jp
into
mov
push
jg
in
loopne
push
out
in
out
mov
(bad)
(bad)
call
jne
mov
dec
push
xor
mul
sbb
mov
aas
mov
or
loope
pop
pop
hlt
stos
sub
imul
(bad)
mov
pop
pop
daa
je
sahf
xchg
push
lods
(bad)
(bad)
(bad)
call
mov
sub
mov
dec
and
movs
repz
cld
inc
inc
in
addr16
sbb
or
(bad)
mov
xchg
fs
adc
pusha
sbb
ja
(bad)
(bad)
dec
mov
movs
sar
dec
jmp
pop
mov
(bad)
mov
repz
(bad)
(bad)
jg
mov
jp
call
aam
mov
mov
xchg
dec
data16
sub
or
mov
aas
loopne
cmps
cmc
push
stos
(bad)
(bad)
jmp
dec
jmp
pop
mov
push
scas
lods
cmps
(bad)
cli
push
sub
in
(bad)
(bad)
(bad)
(bad)
jle
jp
mov
adc
mov
pop
vprotb
adc
fsubr
scas
mov
xchg
(bad)
(bad)
(bad)
out
into
out
ret
pop
cmp
psrad
js
outs
mov
call
jmp
dec
mov
cmp
clc
add
adc
cmp
js
fst
jmp
cld
push
or
pushf
xchg
mov
sbb
mov
push
out
mov
push
cld
jb
dec
push
idiv
(bad)
(bad)
(bad)
call
inc
cwde
and
push
mov
ficomp
mov
mov
lahf
push
icebp
pop
xchg
addr16
fisttp
lock
(bad)
(bad)
xchg
aam
stc
push
jle
rcr
xor
dec
push
adc
push
into
push
fdiv
ret
daa
(bad)
(bad)
(bad)
call
fwait
jb
leave
fidivr
and
pop
jmp
retf
mul
or
ret
xchg
imul
out
pop
movs
sbb
cmp
or
or
stos
aad
cmp
outs
cmp
(bad)
(bad)
push
push
dec
mov
imul
cmp
jae
imul
aam
(bad)
(bad)
(bad)
jmp
gs
or
inc
jge
(bad)
xor
pushf
mov
in
xchg
sbb
fbld
mov
inc
in
mov
mov
sbb
movs
scas
push
lahf
and
out
pusha
call
push
pop
cli
(bad)
call
arpl
test
rol
lock
mov
adc
call
je
mov
jbe
clc
lahf
jge
arpl
mov
(bad)
(bad)
out
add
dec
std
aas
hlt
bound
shl
mov
cmc
sbb
(bad)
(bad)
inc
out
sbb
(bad)
add
pop
in
jb
mov
scas
adc
mov
inc
out
stc
pop
fnclex
inc
test
(bad)
(bad)
(bad)
mov
outs
retf
sbb
imul
nop
loopne
out
loope
into
out
(bad)
jle
retf
mov
push
jno
movs
mov
div
sbb
fdivrp
ja
rcr
cld
out
retf
stc
out
add
xor
mov
repz
and
jmp
or
lahf
dec
jecxz
test
sahf
(bad)
(bad)
mov
ja
stc
push
in
neg
ja
jb
mov
jo
sbb
cmc
(bad)
(bad)
(bad)
(bad)
mov
and
lock
popa
cmp
sti
push
outs
inc
hlt
fiadd
jmp
lods
scas
adc
clc
and
in
fmul
repnz
and
(bad)
jmp
bound
cmp
lock
mov
add
(bad)
inc
scas
bound
pop
pop
(bad)
jnp
or
dec
pusha
push
cmps
lahf
sbb
pop
fnstsw
jge
aad
(bad)
(bad)
inc
cld
mov
call
daa
(bad)
data16
and
bswap
add
mov
inc
das
nop
aas
xchg
int3
mov
cwde
std
cmp
fdivrp
mov
pop
loope
idiv
(bad)
(bad)
(bad)
fbstp
xchg
cmp
rcl
outs
in
push
loop
(bad)
(bad)
(bad)
jno
arpl
jns
pop
add
aaa
lock
pop
adc
pop
jl
shl
adc
into
(bad)
clc
(bad)
(bad)
(bad)
mov
inc
and
fxam
pusha
aam
xchg
(bad)
in
push
inc
push
cmp
and
in
cmps
inc
(bad)
inc
inc
cwde
clc
popa
iret
cmp
lea
push
icebp
push
inc
and
aaa
retf
clc
(bad)
mov
pop
addr16
je
js
sar
je
add
pop
cmp
out
test
cld
and
popf
movs
mov
xchg
push
repz
jle
call
pop
(bad)
mov
out
out
out
addr16
dec
or
retf
(bad)
(bad)
(bad)
(bad)
cmp
div
rol
jg
dec
cld
jae
and
pop
mov
dec
(bad)
jl
loop
(bad)
mov
cld
mov
sub
rol
test
or
(bad)
(bad)
call
test
in
nop
das
mov
clc
int
loopne
stos
jne
clc
or
inc
jae
push
out
sub
dec
fucom
xchg
dec
iret
in
sti
repz
out
iret
(bad)
jmp
mov
xlat
and
sbb
xchg
cmp
fsubr
sar
in
clc
(bad)
jmp
dec
scas
mov
outs
xlat
jl
fld
(bad)
(bad)
fbstp
enter
div
pop
cdq
cmps
xchg
pop
outs
adc
movs
in
fcomip
inc
lods
lahf
cli
out
fbld
das
(bad)
jge
sti
mov
dec
(bad)
out
cmp
(bad)
repnz
scas
xor
adc
dec
stos
clc
push
push
jbe
cdq
pop
mov
xchg
xchg
pop
enter
(bad)
(bad)
mov
pushf
cmps
and
sub
out
aaa
es
loopne
or
inc
sbb
mov
(bad)
(bad)
(bad)
(bad)
fdiv
ss
jp
iret
jne
push
pusha
cld
jge
rcr
add
fcom
(bad)
std
(bad)
dec
out
call
ss
mov
aaa
not
inc
add
ja
push
mov
sbb
xchg
add
js
jae
scas
ins
mov
cmc
add
mov
not
fidivr
push
sahf
pop
mov
aaa
inc
cmp
inc
stc
fst
pop
or
sub
sbb
dec
cmps
push
dec
inc
jle
repz
outs
sub
lock
xchg
ror
mul
cmps
loope
mov
add
push
loopne
inc
jbe
or
lea
inc
jne
daa
xchg
sub
or
push
jo
lods
pop
cmp
sub
mov
sub
cmp
(bad)
(bad)
mov
and
cmps
jb
dec
pop
adc
add
adc
idiv
and
repz
sub
rep
push
push
repz
jmp
clc
inc
lds
pop
sbb
das
ja
mov
jmp
(bad)
mov
sbb
add
shl
fidiv
mov
sbb
cmp
push
(bad)
(bad)
cmp
cmp
outs
pop
mov
lods
xor
std
(bad)
(bad)
dec
xlat
in
sub
jae
movs
pop
cmp
retf
loop
jbe
loope
mov
call
loop
sti
test
repnz
mov
in
xchg
cmp
cmc
sbb
jle
(bad)
jnp
sub
fdivr
cmp
mul
loope
sub
sub
fcomip
jmp
outs
mov
mov
lahf
popf
jb
pushf
sti
pop
stc
je
jmp
mov
mov
dec
sbb
imul
(bad)
(bad)
inc
test
(bad)
push
mov
and
adc
sbb
xor
cld
(bad)
(bad)
jmp
dec
mov
and
stos
jb
mov
pop
call
outs
push
loopne
sub
xor
ret
sub
adc
pop
cmp
imul
(bad)
call
xchg
sti
repnz
(bad)
cmp
cmp
(bad)
fld
ret
jo
lea
std
jmp
pop
sbb
out
aad
jnp
mov
lahf
xlat
cli
iret
jp
lods
(bad)
(bad)
fist
fdivr
fdivr
xor
aas
out
inc
fwait
push
std
add
fwait
cmp
sti
or
(bad)
fld
retf
mov
(bad)
(bad)
(bad)
inc
pop
hlt
pop
sbb
cmp
scas
gs
pop
mov
pop
in
mov
inc
inc
pop
imul
fsubr
mov
fcmovnu
xor
pop
scas
scas
(bad)
inc
sub
jl
push
nop
dec
or
sbb
(bad)
mov
aas
int
scas
adc
cld
push
cmp
jge
jmp
imul
mov
cmc
dec
cdq
scas
mov
sub
pop
lods
inc
sti
out
fmul
sub
cmps
sbb
cmp
ds
sti
pop
scas
popf
push
mov
add
mov
inc
inc
push
(bad)
jmp
or
fld
fstp
lods
push
neg
cld
jo
inc
dec
cmc
sub
or
jmp
fistp
push
inc
cmp
test
inc
sub
enter
sbb
rcl
(bad)
cmp
aaa
lods
outs
shl
movs
into
mov
imul
inc
sbb
pop
cld
out
sub
test
test
jmp
xchg
jne
test
jbe
(bad)
(bad)
inc
lock
(bad)
gs
push
shr
movs
mov
lods
rcl
(bad)
adc
jae
pop
cmp
repz
pop
pop
mov
shl
call
(bad)
mov
jnp
mov
es
pop
pusha
daa
inc
std
dec
in
add
dec
dec
inc
gs
addr16
iret
les
(bad)
(bad)
(bad)
jmp
call
jnp
cld
(bad)
popf
fdivr
pop
sbb
test
pop
fist
rcr
inc
add
cs
mov
dec
xor
(bad)
(bad)
(bad)
jmp
or
xchg
aas
xor
retf
fisttp
inc
icebp
vmread
in
ins
sbb
mov
add
and
mov
adc
in
scas
jecxz
ror
(bad)
(bad)
push
mov
and
repnz
stos
mov
outs
xor
jo
ja
sar
(bad)
(bad)
(bad)
ds
fist
cld
pop
data16
scas
arpl
inc
cmc
adc
aaa
cld
add
cmp
aaa
xchg
(bad)
sar
jg
imul
cli
mov
out
out
lods
rol
(bad)
(bad)
push
test
and
sbb
pop
adc
fcmove
(bad)
dec
lock
popf
pushf
je
stos
mov
cmp
xor
(bad)
(bad)
jmp
jno
dec
ret
jae
jnp
jmp
aas
movs
data16
xchg
mov
xor
(bad)
jmp
fcom
fcmovnbe
ror
out
nop
jns
aas
pop
mov
leave
cmp
aam
mov
mov
push
daa
repz
scas
mov
in
jbe
pop
hlt
(bad)
jmp
div
fsub
sbb
xchg
aas
jno
mov
cld
in
dec
push
mov
or
scas
add
mov
call
and
add
mov
adc
repnz
sar
(bad)
fild
jmp
cmc
mov
cmps
pop
mov
mov
pop
fmul
fmul
cmp
sub
pop
sbb
(bad)
(bad)
jmp
hlt
add
ret
mov
jno
jo
mov
cli
and
xor
das
jne
(bad)
dec
aaa
or
cmps
pop
in
mov
dec
dec
sbb
(bad)
(bad)
call
mov
(bad)
out
test
(bad)
cld
add
or
cwde
add
inc
mov
sub
in
cld
push
mov
jg
jmp
jns
dec
mov
sti
mov
jnp
pop
dec
adc
jo
(bad)
(bad)
(bad)
mov
xor
jecxz
(bad)
clc
xor
test
out
dec
stos
push
pop
out
cmp
ja
fld
(bad)
dec
xor
pop
sbb
cmps
movs
jl
dec
retf
daa
out
js
loope
test
jmp
std
xor
lock
ss
jge
and
xor
loope
sub
cld
pop
jnp
sub
push
nop
ror
cmp
mov
nop
lock
inc
cli
add
cmp
cmp
pop
adc
adc
or
cld
(bad)
mov
fidivr
pushf
xlat
mul
mov
dec
jo
or
cld
daa
shl
cmp
(bad)
push
loop
jb
cmp
or
std
and
sar
aam
adc
imul
dec
jo
mov
into
shl
fbld
out
es
(bad)
push
adc
cmp
pop
rol
jno
loopne
shr
(bad)
jmp
jle
mov
(bad)
sub
push
xchg
bswap
arpl
pop
fcom
sub
(bad)
(bad)
(bad)
(bad)
fisub
repz
pushf
xchg
cld
lods
mov
mov
sahf
jno
shl
cmp
pop
adc
xor
ror
lock
sbb
adc
out
dec
pushf
fstp
mov
(bad)
jmp
dec
cdq
push
sahf
pushf
cmp
ins
mov
xchg
push
loop
call
dec
loopne
loopne
retf
bound
xchg
out
mov
mov
loopne
cld
in
imul
aas
jle
jle
dec
cld
jg
mov
push
sub
rcr
xchg
fbstp
inc
jmp
mov
dec
add
ds
std
cmp
dec
fs
push
aaa
mov
inc
adc
inc
ror
stos
loope
pop
idiv
imul
rol
adc
icebp
shl
push
jne
inc
fwait
addr16
into
xchg
int3
cmp
(bad)
(bad)
jge
jns
pop
add
iret
pop
pushf
dec
outs
xor
inc
sbb
push
shl
sbb
icebp
(bad)
mov
ins
xchg
and
lods
fsub
xor
loop
push
aad
jne
data16
jb
retf
(bad)
(bad)
(bad)
jmp
ja
scas
or
not
std
xchg
xchg
(bad)
leave
and
mov
jbe
retf
(bad)
imul
(bad)
(bad)
jg
sti
xchg
push
inc
xor
or
bound
repz
dec
adc
fwait
dec
dec
sar
das
inc
(bad)
repnz
dec
mul
add
mov
add
jo
mov
call
in
mov
outs
test
mov
ja
push
rol
sub
inc
dec
and
retf
in
(bad)
(bad)
jg
cmps
or
aas
mov
ja
push
xlat
xchg
pop
mov
dec
stc
clc
(bad)
(bad)
jmp
scas
in
xchg
jne
psrad
call
mov
dec
push
jmp
arpl
add
js
dec
or
(bad)
push
xchg
mov
iret
imul
sub
fistp
test
repz
add
(bad)
(bad)
push
push
mov
shl
push
aaa
sbb
(bad)
cmc
adc
push
mov
push
add
cmp
(bad)
mov
(bad)
mov
sbb
fwait
cmc
xlat
or
adc
adc
dec
jo
jl
pusha
pop
shl
pop
dec
ds
(bad)
(bad)
(bad)
inc
dec
adc
test
fist
int3
cmp
in
pop
(bad)
aas
xlat
out
push
(bad)
(bad)
(bad)
push
jg
push
jmp
push
popf
ds
mov
in
imul
scas
ds
xor
aas
les
lock
cmp
lea
cmp
adc
fist
xchg
adc
(bad)
jg
iret
push
push
lods
fiadd
call
push
mov
mov
mov
pop
(bad)
(bad)
jg
adc
mov
push
js
in
push
retf
jmp
cli
dec
(bad)
(bad)
(bad)
dec
jnp
fcom
jns
scas
(bad)
jecxz
lods
outs
jg
dec
gs
stc
cmp
push
cld
call
jae
pmovmskb
loope
ins
mov
pop
mov
fstp
(bad)
jl
cli
(bad)
call
and
pop
iret
pop
sti
jns
fbstp
call
pop
(bad)
push
dec
inc
inc
addr16
retf
mov
(bad)
js
push
cmp
xor
jg
lods
das
xor
imul
icebp
add
(bad)
fcomip
jmp
mov
std
dec
xor
in
inc
lods
dec
imul
(bad)
jmp
jecxz
or
push
push
mov
pop
sub
in
loope
in
fnstsw
mov
shl
inc
test
out
xchg
mov
movs
cmp
(bad)
sub
adc
push
in
popa
loopne
mov
sbb
cmps
outs
jp
(bad)
(bad)
(bad)
push
mov
ss
jae
mov
jb
fist
fld
xlat
add
(bad)
push
xor
in
fs
xchg
stos
rcl
dec
ins
pop
lock
mov
sar
sbb
clc
(bad)
call
xchg
sbb
jo
mov
cmp
mov
fstp
js
and
fisttp
sub
call
mul
(bad)
(bad)
jg
pop
adc
add
retf
mov
mov
lods
push
loopne
mov
rcl
cld
(bad)
(bad)
dec
or
in
out
and
leave
fnsave
add
adc
jg
add
jg
and
je
call
into
js
xlat
or
mov
jmp
adc
mov
dec
outs
mov
in
mov
push
into
das
mov
jg
inc
cld
xchg
(bad)
sub
mov
popa
repnz
(bad)
(bad)
(bad)
call
and
sub
pop
mul
shr
sar
aam
shr
dec
out
(bad)
or
xchg
das
arpl
mov
(bad)
call
push
ret
ror
or
mov
jns
aas
movs
pop
gs
xchg
test
push
fsubr
clc
call
mov
das
jno
xlat
pop
jge
mov
scas
jne
repz
push
cmp
push
mov
out
leave
xlat
in
loope
repz
(bad)
dec
or
paddw
call
sub
aad
loopne
(bad)
not
adc
jecxz
or
(bad)
(bad)
(bad)
(bad)
stc
xor
adc
out
imul
sbb
mov
and
retf
dec
mov
mov
mov
mov
shl
outs
xchg
enter
not
shr
aad
pop
inc
jmp
jp
xchg
add
ins
mov
js
(bad)
(bad)
jmp
test
push
mov
mov
pop
outs
test
mov
lock
xor
mov
xor
cld
data16
ret
add
or
aad
(bad)
(bad)
call
(bad)
mov
sbb
jmp
ffree
shr
jle
(bad)
es
scas
pushf
ins
or
(bad)
(bad)
(bad)
inc
enter
fwait
retf
jb
in
mov
push
pop
push
push
and
mov
aad
(bad)
dec
sbb
jbe
jb
idiv
stc
xchg
fisttp
mov
(bad)
push
jmp
imul
stc
mov
dec
leave
imul
pop
outs
or
or
sbb
outs
dec
mov
(bad)
div
(bad)
(bad)
mov
retf
mov
lahf
scas
int3
popf
call
push
sub
leave
aaa
sub
or
sbb
cmc
push
(bad)
(bad)
(bad)
dec
push
pop
sub
fst
stos
jle
pop
pop
sar
sbb
jbe
pop
adc
sbb
outs
adc
addr16
fbld
pushf
xchg
out
rcl
ins
sbb
leave
ret
xchg
xor
in
cmps
pop
sbb
paddb
(bad)
mov
lods
add
jle
ins
in
nop
mov
mov
idiv
(bad)
(bad)
call
aas
loope
bound
mov
xchg
(bad)
imul
xchg
xchg
add
iret
sar
inc
ret
call
push
pop
(bad)
(bad)
(bad)
aas
adc
jp
dec
lahf
pop
jp
mov
mov
jb
cdq
in
dec
mov
xlat
test
(bad)
fcomi
push
push
fld
jecxz
xor
lods
sar
dec
lods
add
(bad)
(bad)
(bad)
jmp
jae
adc
pop
js
mov
dec
jnp
mov
xor
jecxz
and
pop
cmp
jmp
mov
sub
(bad)
sti
mov
jl
in
cmp
push
mov
xchg
cld
adc
add
nop
push
xchg
call
fdivrp
(bad)
(bad)
push
mov
add
mov
stc
xchg
loopne
add
pusha
xchg
pop
mov
xchg
(bad)
aad
(bad)
(bad)
(bad)
jmp
dec
in
cld
fsubr
push
mov
mov
aam
jb
shr
movs
cwde
(bad)
call
adc
loope
stos
mov
out
push
sub
push
fmul
inc
data16
(bad)
(bad)
push
scas
jg
sbb
out
cmp
cmp
xchg
repz
xchg
add
jge
loopne
loope
ss
xchg
(bad)
(bad)
in
jge
out
xchg
data16
push
jne
(bad)
pop
cmps
test
lock
(bad)
jmp
loope
aam
push
(bad)
ins
test
dec
adc
(bad)
(bad)
(bad)
cli
and
adc
push
sub
fmul
pop
je
dec
test
ins
fbld
xchg
cmps
add
jo
pushf
fiadd
out
mov
pop
mov
inc
adc
mov
(bad)
call
cwde
jg
lods
mov
aas
add
fucomp
sbb
mov
cmc
mov
(bad)
dec
enter
jle
cmp
pushf
pop
push
fisttp
std
pop
push
(bad)
(bad)
mov
neg
push
add
push
dec
inc
cld
nop
xchg
fs
sar
or
push
scas
sub
mov
inc
test
stos
mov
jae
in
fnsave
fild
std
lds
(bad)
jmp
jp
adc
sub
bound
in
retf
outs
das
lahf
lods
gs
jg
outs
(bad)
cmp
jg
xor
sub
fs
xchg
sub
fnclex
jne
xor
rcl
(bad)
(bad)
(bad)
mov
loop
mov
cmp
into
xchg
sahf
sar
push
das
mov
int
jle
cmp
inc
lock
scas
sub
scas
add
mov
mov
push
pop
push
loopne
sbb
lock
push
xchg
jp
push
pop
sbb
jge
retf
mov
push
shl
jecxz
and
(bad)
ins
sbb
(bad)
aaa
mov
retf
idiv
pop
xchg
out
jns
push
(bad)
mov
jno
pop
cld
sar
cs
pop
ret
pop
iret
stos
clc
rep
addr16
(bad)
(bad)
jg
in
and
ins
fdiv
pop
movs
sub
out
jp
xchg
jge
or
fbld
(bad)
(bad)
call
mov
les
push
pop
out
in
(bad)
ja
ficomp
scas
addr16
push
fstp
(bad)
(bad)
inc
inc
ins
js
push
sti
mov
dec
mov
(bad)
stc
or
out
call
call
pop
push
(bad)
out
jge
icebp
add
je
sahf
cmp
int3
pop
rol
fild
mov
jmp
scas
mov
jae
jnp
test
data16
mov
(bad)
jmp
add
loop
adc
xchg
fdivr
mov
push
popf
(bad)
(bad)
(bad)
jmp
and
mov
jno
or
retf
(bad)
(bad)
push
xchg
sar
aad
inc
lock
(bad)
inc
mov
popw
ins
cmps
dec
mov
ds
fs
(bad)
in
(bad)
ds
stos
mov
ret
hlt
adc
cld
adc
movs
test
out
cmp
cmps
js
mov
sub
mov
mov
test
jg
js
xchg
fmul
icebp
cs
(bad)
mov
cmp
div
jmp
xchg
shl
cld
mov
scas
icebp
mov
jl
test
std
(bad)
mov
cdq
test
xchg
test
daa
daa
sbb
push
inc
fiadd
push
cmc
(bad)
push
in
scas
jecxz
jns
sbb
ja
aam
mov
cmp
data16
xor
sub
push
(bad)
call
mov
aam
pop
sub
add
jnp
(bad)
(bad)
(bad)
jg
stc
sub
aas
nop
test
cs
inc
daa
in
sub
pop
retf
sbb
jns
mov
(bad)
(bad)
dec
jecxz
les
jb
pop
cmp
inc
sbb
stc
push
rcl
(bad)
jg
cmp
mov
jmp
mov
push
lahf
sub
pop
xchg
out
cld
call
clc
out
xor
jg
mov
mov
dec
loop
pop
xchg
mov
inc
push
out
out
xor
daa
jne
dec
cmc
scas
adc
jecxz
mov
in
cli
and
icebp
cmp
loop
push
lahf
cld
aad
fwait
jnp
mov
push
push
or
xchg
jbe
cmps
sti
ror
loope
loope
or
hlt
pop
data16
mov
jmp
push
out
int
test
sub
out
cld
cmps
and
and
mov
jmp
push
les
and
pop
and
shl
(bad)
lahf
and
mov
jae
neg
stos
pop
lock
das
sti
jle
jmp
cmp
mov
loop
mov
ds
dec
pop
shl
sbb
loopne
call
jmp
pop
xchg
sub
idiv
pop
setae
pop
es
(bad)
jge
aad
pop
cld
outs
xor
mov
in
mov
or
(bad)
mov
icebp
out
aam
mov
jg
out
int
pop
jb
aaa
je
mov
jmp
inc
jb
adc
js
retf
imul
jmp
sti
jbe
jo
jl
add
jmp
sar
inc
jl
aam
or
data16
xor
sar
and
jg
(bad)
and
xlat
sub
jmp
mov
jne
pop
out
repnz
call
xchg
mov
sti
push
or
data16
dec
outs
mov
pop
scas
(bad)
(bad)
(bad)
push
(bad)
clc
pop
shl
mov
stos
or
out
icebp
add
out
cmp
jmp
sbb
(bad)
jg
call
out
in
cmp
lock
icebp
dec
cwde
push
cmc
add
js
xchg
jecxz
pusha
pop
sar
(bad)
jg
xchg
adc
xchg
nop
mov
sar
push
pop
jno
or
push
cmp
jl
not
popf
scas
clc
mov
je
push
mov
(bad)
push
daa
push
aad
(bad)
mov
cmps
cmp
sbb
movs
jns
mov
sbb
jne
mov
and
repz
cmp
add
(bad)
jg
ret
add
dec
dec
(bad)
mov
mov
mov
inc
repz
jo
int
aaa
cs
xor
adc
lock
cmp
pop
hlt
add
(bad)
(bad)
dec
call
push
pop
sbb
shl
or
scas
pop
inc
popf
cmp
mov
retf
mov
xlat
bound
sbb
push
(bad)
(bad)
mov
ss
pushf
push
data16
add
pushf
push
jmp
adc
hlt
(bad)
(bad)
in
mov
cld
or
cmps
pop
out
and
cmp
cmp
(bad)
(bad)
(bad)
push
jbe
in
aam
leave
xor
mov
out
or
sbb
movs
jb
add
(bad)
(bad)
call
pop
into
scas
sub
fstp
lock
adc
gs
mov
sbb
(bad)
fnstenv
(bad)
(bad)
jg
out
fdiv
pop
imul
inc
popa
jmp
jno
outs
xchg
in
xor
mov
ss
fcomip
jg
jmp
out
(bad)
cli
and
jmp
(bad)
in
jmp
jnp
stc
jne
cwde
(bad)
cli
(bad)
call
dec
xor
xchg
cdq
push
retf
hlt
cmp
mov
pusha
xor
add
mov
ds
shl
pop
mov
(bad)
(bad)
dec
pop
lods
mov
mov
sahf
in
enter
jg
fbstp
sar
(bad)
mov
jp
sar
rcl
int
sbb
jno
(bad)
(bad)
(bad)
jge
lods
xor
mov
fist
cmp
outs
iret
stc
push
hlt
test
adc
fistp
lds
pop
dec
sbb
mov
scas
jp
(bad)
xchg
sbb
mov
stos
pop
mov
(bad)
push
sbb
jbe
(bad)
(bad)
cmp
cmp
arpl
jle
lahf
in
daa
aam
arpl
and
sbb
lods
push
sahf
xchg
(bad)
(bad)
jmp
call
mov
out
jecxz
pop
iret
pop
out
cmp
ror
dec
push
div
(bad)
(bad)
call
(bad)
mov
call
sbb
fnstcw
mov
(bad)
fbstp
sbb
ss
in
adc
jnp
push
clc
pop
jbe
inc
fbld
and
(bad)
jg
fs
mov
pop
mov
mov
add
in
loopne
pop
mov
cmps
(bad)
(bad)
push
test
(bad)
scas
sbb
pop
shr
lahf
dec
sbb
cli
pop
add
mov
jg
clc
jns
fdiv
jmp
push
add
add
retf
hlt
clc
xor
add
adc
cli
push
mov
mov
mov
inc
and
xchg
mov
inc
cmp
dec
jmp
loop
mov
mov
pop
imul
mov
scas
ss
mov
pop
das
std
or
lahf
sbb
or
jg
push
pop
hlt
sbb
cmp
shl
sub
cli
push
mov
mov
sbb
mov
mov
cld
push
(bad)
xchg
jle
sbb
ror
call
cdq
push
fiadd
sbb
leave
call
in
xchg
add
fs
xor
or
lock
or
daa
sub
fdiv
lea
dec
gs
das
mov
mov
jecxz
(bad)
inc
mov
sub
sti
push
add
mov
xchg
arpl
std
les
xchg
daa
inc
(bad)
(bad)
(bad)
(bad)
(bad)
js
div
jp
(bad)
sub
call
icebp
xchg
adc
(bad)
cld
sbb
ins
std
jmp
pop
loopne
in
add
cmp
jp
in
sub
lods
in
mov
fsub
stos
cld
inc
adc
hlt
iret
push
aas
test
push
dec
ins
cmps
icebp
xchg
xchg
push
inc
(bad)
(bad)
jno
mov
(bad)
mov
scas
pop
push
or
cli
push
dec
push
imul
(bad)
jmp
jno
push
(bad)
ffreep
jmp
push
and
sub
cmp
jo
inc
or
rol
(bad)
call
aad
xor
mov
inc
imul
xchg
lods
mov
(bad)
(bad)
dec
outs
adc
scas
outs
es
xchg
jne
std
dec
jp
push
hlt
push
xchg
dec
or
out
shr
or
(bad)
dec
adc
xchg
mov
out
push
idiv
arpl
(bad)
mov
dec
dec
loope
mov
push
adc
add
ret
xlat
add
mov
sub
xlat
test
gs
push
ret
loope
cld
sbb
push
stc
mov
gs
(bad)
jmp
cld
movs
scas
stc
jbe
call
pop
jmp
mov
out
sbb
mov
std
dec
je
jmp
gs
idiv
std
jg
clc
mov
jne
into
repz
jp
jmp
sbb
into
and
xlat
xor
fwait
sub
mov
pusha
xchg
mov
movs
cld
xchg
xlat
(bad)
cmp
cmp
cld
(bad)
jns
push
inc
mov
(bad)
(bad)
call
out
ucomiss
cmp
cmp
jmp
jae
call
fisub
(bad)
cmp
jecxz
cwde
inc
jne
enter
cmp
adc
jle
ret
retf
xchg
mov
push
aad
call
lds
aad
jmp
jae
pop
(bad)
(bad)
(bad)
inc
xchg
call
mov
mov
ud0
dec
inc
push
jo
and
or
hlt
arpl
iret
fnstsw
mov
lahf
std
(bad)
(bad)
mov
mov
out
ret
rcr
fsubr
aad
jecxz
push
cmp
mov
and
test
(bad)
in
pop
add
jmp
movd
mov
clc
leave
sbb
pop
int3
sub
(bad)
(bad)
jmp
jl
cli
inc
in
jo
sbb
(bad)
not
push
neg
mov
xor
jg
lea
(bad)
(bad)
jmp
iret
mov
xchg
pop
fist
fidivr
pusha
div
cmc
fild
mov
adc
push
mov
in
cdq
xchg
add
jp
sahf
sar
pop
cld
mov
loop
sar
xchg
dec
jno
sar
sub
int
pop
jg
(bad)
call
test
cmovge
(bad)
test
inc
aaa
jl
mov
(bad)
(bad)
(bad)
jmp
xor
idiv
sub
(bad)
fstp
xchg
out
lea
jg
sar
jmp
add
dec
and
std
loope
pop
push
outs
daa
mov
xor
adc
call
ret
jne
(bad)
std
movs
or
adc
scas
mov
cld
fdivr
ja
call
or
popf
scas
jo
or
sti
xchg
mov
xchg
scas
cmps
inc
cmp
lods
dec
adc
sbb
xchg
inc
aas
popf
mov
push
jae
fdivr
jmp
cdq
fst
jne
(bad)
repz
shl
cmp
cld
ret
sub
repz
inc
dec
jno
vandnpd
push
shl
pop
xchg
cld
movs
inc
(bad)
and
(bad)
(bad)
(bad)
(bad)
mov
xchg
cmp
fdivr
push
jg
jno
ret
ficomp
into
arpl
inc
xchg
(bad)
out
xor
mov
cmp
mov
pop
mov
xchg
pop
aas
cmp
(bad)
in
jmp
movs
ds
(bad)
out
fistp
inc
jg
pop
mov
sub
xor
mov
push
jns
(bad)
(bad)
(bad)
inc
jmp
mov
mov
je
pop
arpl
std
std
adc
popa
push
mov
pushf
push
sti
cmp
popf
cdq
(bad)
(bad)
(bad)
dec
push
mov
lahf
pop
outs
mul
pushf
out
fld
icebp
js
sbb
retf
xchg
add
gs
(bad)
(bad)
(bad)
stc
adc
mov
int
mov
push
jmp
cli
lds
aaa
call
mov
into
(bad)
(bad)
(bad)
dec
inc
xchg
shl
pop
out
sub
fisub
mov
xor
(bad)
(bad)
dec
inc
and
cmp
in
jg
sbb
inc
inc
cs
dec
(bad)
pop
or
test
adc
sbb
add
or
mov
adc
(bad)
int3
sbb
mov
inc
mov
or
add
and
int3
jg
mov
or
adc
mov
add
imul
(bad)
fimul
xchg
cdq
cwde
stos
call
fldcw
repz
fs
mov
(bad)
(bad)
call
mov
push
scas
movs
ror
sub
sahf
push
std
mov
movs
(bad)
(bad)
jmp
push
xchg
in
stos
aas
movs
jo
and
pop
push
xor
cs
cld
(bad)
mov
pop
pop
xchg
out
test
aam
sti
pop
inc
xchg
cmp
push
sbb
push
jge
outs
and
fsub
(bad)
dec
mov
out
dec
jecxz
loope
(bad)
inc
js
mov
pop
inc
imul
aas
cli
call
cmp
push
rcr
(bad)
(bad)
mov
aaa
aaa
(bad)
ds
or
in
je
retf
sub
scas
ss
in
pop
mov
clc
jp
cs
repz
(bad)
(bad)
(bad)
(bad)
adc
cmps
std
cmp
mov
push
jmp
xor
cmp
mov
mov
(bad)
mov
dec
cs
popf
xchg
cmp
adc
and
adc
iret
or
push
dec
retf
add
(bad)
(bad)
call
xor
xchg
pop
sti
adc
test
mov
fcmovne
adc
add
ins
in
inc
test
add
or
jno
cdq
sub
adc
(bad)
ja
into
mov
xchg
(bad)
(bad)
(bad)
mov
out
dec
(bad)
push
jge
xor
push
add
mov
out
sti
or
xor
lahf
pusha
sti
inc
jne
xchg
xor
pop
(bad)
jmp
cdq
mov
enter
cmp
xlat
call
call
inc
fisubr
aas
dec
fisttp
jmp
pop
add
push
into
mov
popf
xchg
pop
add
mov
sahf
push
test
pushf
das
call
cld
call
push
mov
fs
jns
and
xlat
mov
stos
ror
dec
call
scas
adc
sbb
cld
push
xor
call
ror
mov
pop
(bad)
(bad)
sti
push
je
(bad)
dec
loopne
mov
(bad)
(bad)
xor
xchg
jmp
dec
bound
in
inc
jp
cmp
hlt
xchg
scas
xchg
push
in
sti
jle
mov
aas
(bad)
mov
sti
jecxz
jno
(bad)
cmp
nop
fs
call
push
pop
clc
mov
js
jecxz
(bad)
in
(bad)
mov
mov
bound
jno
xor
xor
cli
pop
aam
lds
jmp
mov
cs
jb
dec
fdivp
inc
xchg
(bad)
xor
fist
fisttp
xchg
popa
outs
mov
and
or
outs
xor
scas
gs
ins
(bad)
dec
ds
xor
jl
das
ror
mov
mov
cmp
cs
push
xlat
sbb
lock
(bad)
dec
jg
mov
in
pop
lock
push
push
ror
jl
aas
mov
call
aas
jge
xchg
mov
sbb
pop
sbb
(bad)
jmp
repnz
out
cmp
cmp
add
xor
push
push
adc
mov
cld
inc
fcom
nop
pop
daa
sahf
pop
inc
aad
addr16
shl
mov
(bad)
mov
sar
jl
pop
icebp
cmp
dec
in
(bad)
inc
xchg
sar
inc
(bad)
cmc
mov
repz
cmp
hlt
cmp
sar
les
fsincos
sbb
ret
fcomp
sub
call
inc
aas
inc
jmp
push
scas
push
(bad)
pop
hlt
cld
cmps
retf
jecxz
pop
jge
in
(bad)
inc
inc
fisttp
dec
(bad)
jp
add
iret
imul
and
xchg
xchg
lahf
add
(bad)
(bad)
cld
pop
cmp
mov
adc
pop
pop
movlps
std
xor
push
cmc
jle
jnp
(bad)
(bad)
mov
add
pop
std
cld
sub
popf
jge
pop
pop
dec
(bad)
cmc
add
(bad)
(bad)
call
mov
add
repnz
inc
das
lock
fdivr
loop
ja
das
pushf
mov
scas
into
sti
sar
rcr
jl
dec
adc
pop
lock
inc
or
sub
hlt
pop
arpl
jnp
(bad)
push
mul
pop
(bad)
(bad)
(bad)
call
jecxz
loopne
in
mov
les
aas
es
jae
aam
mov
cli
(bad)
sbb
add
out
clc
sahf
cs
xchg
pusha
jmp
lea
mov
jecxz
jecxz
jg
mov
and
pop
jb
jg
mov
(bad)
out
xchg
(bad)
dec
and
pop
mov
push
jmp
cmp
dec
cld
inc
daa
push
rcr
xchg
test
add
aam
icebp
add
sbb
mov
mov
jne
imul
cdq
repnz
jne
out
jne
sbb
add
mov
pop
out
scas
imul
adc
fcomip
jg
ret
out
jmp
mov
inc
mov
shl
(bad)
(bad)
(bad)
inc
add
jns
mov
cmp
outs
lahf
jle
xor
scas
loope
add
div
sti
call
ret
iret
or
jnp
std
mov
fucom
mov
xor
call
out
sub
cs
hlt
in
add
(bad)
fistp
scas
pop
dec
hlt
cmp
test
add
jmp
jle
inc
je
(bad)
mov
js
jno
in
adc
(bad)
(bad)
(bad)
(bad)
inc
cld
into
enter
mov
inc
push
lds
push
rol
gs
lahf
pop
shl
and
pusha
(bad)
(bad)
(bad)
mov
mov
jb
or
push
(bad)
sbb
fdivr
or
jns
mov
retf
test
cli
xlat
xlat
pop
sti
jl
stos
cmc
add
jp
mov
pop
xchg
(bad)
lds
repnz
mov
sub
push
pop
jmp
rol
(bad)
dec
test
arpl
mov
fstp
and
jecxz
fist
xor
leave
fisttp
push
or
fld
sbb
test
inc
and
fstp
push
pushf
sbb
pop
xchg
lock
jmp
mov
sbb
cld
rol
scas
mov
jmp
(bad)
jmp
mov
dec
imul
pop
or
mov
(bad)
(bad)
in
push
jl
pusha
cwde
sahf
aaa
int3
hlt
into
and
bound
and
mov
je
push
jmp
call
jle
outs
mov
aas
in
adc
mov
(bad)
mov
scas
jno
sub
cmp
mov
icebp
iret
inc
call
cmps
lock
push
jnp
sbb
sti
(bad)
(bad)
(bad)
call
jmp
jle
mov
stc
fstp
mov
fimul
jnp
out
add
mov
add
(bad)
(bad)
fisttp
pop
xor
loope
scas
cmp
mov
test
mov
mov
sahf
dec
js
mov
pop
(bad)
jnp
add
movs
in
sti
xor
(bad)
(bad)
jg
xor
dec
ins
pusha
hlt
repz
ds
lea
rcl
hlt
add
repz
ss
xor
xor
pop
std
add
ret
jecxz
(bad)
(bad)
jge
bound
pop
nop
xchg
out
mov
cmp
in
jmp
xlat
dec
loope
rcl
fild
int3
into
pop
jp
jmp
mov
adc
mov
cli
jo
mov
std
je
test
dec
add
dec
aaa
adc
call
imul
stc
add
mov
std
(bad)
fcmovu
addr16
inc
loope
pop
sub
jmp
(bad)
mov
dec
(bad)
jge
jp
pop
push
mov
mov
stc
addr16
(bad)
(bad)
mov
inc
cmps
mov
hlt
shl
mov
xor
(bad)
clc
call
xor
outs
das
test
mov
(bad)
cld
aad
retf
and
xlat
push
call
jno
call
(bad)
jmp
lahf
outs
and
(bad)
sub
cli
mov
mov
out
(bad)
outs
hlt
or
jl
sub
cmc
inc
push
jbe
pop
or
call
inc
(bad)
(bad)
(bad)
inc
mov
mov
mov
add
and
mov
push
idiv
hlt
add
xor
sbb
call
mov
shl
mov
clc
adc
(bad)
(bad)
(bad)
(bad)
clc
arpl
sub
xor
xlat
sti
(bad)
sbb
xor
adc
pop
or
call
hlt
loop
enter
out
repnz
xchg
loope
ja
(bad)
(bad)
push
mov
cdq
mov
mov
and
inc
aas
lahf
sbb
ja
adc
jmp
(bad)
jmp
call
sub
dec
les
test
(bad)
adc
idiv
pop
(bad)
mov
aas
jb
(bad)
cld
and
repz
xlat
and
aas
push
mov
int3
pushf
push
dec
xor
stos
repz
out
loop
repnz
jae
pop
pop
popa
cli
jmp
(bad)
iret
sbb
(bad)
dec
inc
(bad)
inc
mov
scas
adc
ds
jg
add
repnz
mov
sbb
push
loopne
dec
sbb
lea
shr
rcr
data16
mov
rcr
into
dec
mov
mov
inc
(bad)
(bad)
fcomip
sahf
daa
cwde
fnstsw
mov
ficom
fcmovb
repz
cld
repz
out
ret
sti
outs
push
mov
in
jne
arpl
call
and
jno
push
je
pop
(bad)
gs
(bad)
in
mov
inc
(bad)
dec
xchg
and
fisttp
cld
iret
in
lea
cmp
jns
(bad)
dec
pop
sbb
xchg
xchg
scas
mov
pop
adc
dec
aad
fild
(bad)
(bad)
(bad)
jmp
add
enter
pop
mov
push
cmps
addr16
pop
and
bound
(bad)
jmp
ror
pop
pop
sar
pop
ins
mov
test
repz
stos
ja
mov
push
ldmxcsr
sar
aad
xor
adc
stos
mov
pop
js
cmp
or
fistp
ret
(bad)
jg
cld
jle
mov
jl
fwait
int
jo
int3
stc
mov
jbe
sar
(bad)
(bad)
mov
inc
cmps
pop
dec
xchg
lods
jecxz
std
cmp
cli
fs
std
sbb
jl
es
mov
test
fldcw
dec
and
cmp
je
pop
mov
fcomip
das
clc
mov
call
inc
sbb
fwait
push
daa
mov
sbb
imul
(bad)
xlat
enter
shl
sar
(bad)
fcomip
dec
xchg
daa
ret
xor
mov
sti
ret
fidivr
xor
push
cld
pop
push
push
cmc
fldenv
or
fidivr
fisttp
adc
in
(bad)
in
xor
pop
je
sbb
adc
(bad)
(bad)
(bad)
jle
jecxz
mov
arpl
pop
xchg
pop
sbb
fcmovu
test
hlt
(bad)
(bad)
push
ret
sbb
jg
xlat
in
mov
loop
hlt
pop
dec
mov
mov
(bad)
(bad)
(bad)
push
sahf
cmpxchg
repz
cmp
icebp
sub
scas
mov
ja
imul
jbe
in
(bad)
(bad)
jmp
cli
adc
(bad)
outs
cmps
mov
in
(bad)
(bad)
out
xor
jbe
hlt
sbb
push
(bad)
sbb
outs
cmp
jle
call
(bad)
mov
clc
stos
icebp
mov
cmps
ret
pop
shl
xchg
ret
(bad)
mov
mov
push
pop
fdivr
(bad)
adc
jle
push
inc
mov
stos
in
xlat
arpl
jg
(bad)
call
sbb
mov
iret
jge
jb
sbb
scas
lods
mov
clc
(bad)
push
stos
mov
cmp
mov
inc
push
in
sub
inc
push
adc
add
ins
cs
push
in
pop
xchg
xlat
cmc
imul
jle
jne
adc
add
mov
loope
xor
(bad)
push
and
mov
movs
jne
fdivrp
fwait
xchg
xlat
movs
(bad)
jg
call
mov
mov
repz
(bad)
call
pop
sbb
push
aas
xchg
or
clc
sbb
jl
movsx
into
and
dec
inc
call
pop
inc
out
mov
clc
(bad)
(bad)
mov
lahf
clc
inc
jle
not
mov
sbb
cmc
cwde
pop
aam
(bad)
fmul
(bad)
(bad)
out
push
pop
xchg
fs
call
repz
mov
xchg
add
mov
pop
pcmpgtb
call
aam
sub
call
cmp
dec
push
mov
out
dec
mov
push
fistp
sbb
jno
sub
(bad)
(bad)
(bad)
(bad)
jg
dec
fdiv
into
les
test
xlat
jnp
jle
dec
das
repnz
xchg
sahf
push
(bad)
(bad)
call
mov
not
cld
mov
pop
outs
inc
adc
data16
jns
pop
pusha
jb
jne
scas
mov
(bad)
jmp
loop
ins
stos
xor
mov
rcr
pop
out
jl
cmc
into
jle
cmps
mov
(bad)
inc
out
dec
mov
sahf
(bad)
ret
repz
and
aam
mov
(bad)
push
pop
ror
jns
je
inc
pop
mov
inc
mov
push
cmp
xor
aaa
or
call
add
cmp
cmps
push
out
inc
jmp
cli
sahf
jmp
call
(bad)
mov
adc
icebp
(bad)
(bad)
in
clc
adc
seto
inc
mov
out
xor
fistp
lahf
test
jmp
mov
jnp
clc
scas
(bad)
mov
test
iret
mov
mov
jg
mov
call
out
push
and
push
cmps
ds
push
hlt
cmc
sub
repz
jg
outs
sub
pushf
jmp
and
iret
jecxz
inc
jmp
(bad)
push
loopne
(bad)
(bad)
(bad)
mov
out
clc
fs
push
xor
in
out
imul
pop
cmp
scas
jno
xchg
adc
call
in
dec
push
pop
xchg
cli
mov
jp
in
std
sbb
push
pushf
add
(bad)
cmp
cmp
hlt
shl
pop
and
sti
dec
sahf
fs
mov
add
jnp
aas
(bad)
xor
fisubr
sbb
sti
pop
scas
clc
dec
leave
out
(bad)
call
xchg
out
or
add
(bad)
push
jecxz
adc
loope
xor
mov
int3
pop
repz
(bad)
(bad)
fbstp
sub
mov
repnz
inc
pop
xlat
loop
or
dec
ja
mov
clc
ins
iret
lods
and
sub
sar
mov
xchg
adc
mov
in
inc
fsubr
jle
icebp
ret
movs
inc
outs
dec
sar
inc
clc
xor
cmp
jge
(bad)
js
(bad)
(bad)
jmp
dec
jno
test
retf
(bad)
repz
cmp
sbb
mov
fdivr
(bad)
(bad)
fisttp
les
xchg
loop
dec
lahf
jb
push
repnz
jnp
cld
fcmovb
pop
iret
(bad)
(bad)
call
mov
ds
add
in
mov
mov
ds
(bad)
mov
(bad)
fidiv
cli
ds
movs
test
xchg
test
cli
jae
or
lods
ins
jmp
add
mov
(bad)
xor
and
mov
push
cmp
ror
pop
(bad)
mov
cmc
cmp
xor
ds
pop
or
mov
mov
iret
out
(bad)
(bad)
mov
idiv
(bad)
fsubr
push
sbb
cld
pop
in
addr16
sub
inc
imul
and
sbb
js
clc
xchg
das
into
mov
cmp
(bad)
dec
fistp
cmc
sub
cmp
inc
push
xor
shr
mov
rcl
push
xchg
je
and
mov
jle
(bad)
jg
stos
mul
and
and
mov
push
inc
out
hlt
push
adc
(bad)
jl
fcom
ror
les
aas
mov
xchg
call
sbb
das
pop
int3
scas
push
push
iret
and
(bad)
(bad)
call
retf
in
xchg
pop
and
mov
outs
add
lds
fild
cmp
sar
repnz
mov
dec
jg
inc
std
cmp
(bad)
(bad)
call
mov
inc
xchg
mov
cmc
or
jecxz
push
lahf
lds
inc
imul
(bad)
call
sub
mov
stos
clc
jp
dec
pushf
into
or
in
inc
fild
bound
xchg
mov
mov
out
test
ud0
push
rcl
repz
sbb
add
stos
sahf
mov
cmp
jmp
push
call
cmps
ds
jl
gs
(bad)
(bad)
inc
jg
xor
xor
fistp
(bad)
std
jg
sub
inc
pxor
addr16
dec
pushf
pop
test
rcr
lahf
sbb
out
push
jle
(bad)
(bad)
mov
je
xor
popf
inc
scas
movs
fstp
jle
or
pop
mov
sbb
dec
lfs
and
(bad)
cld
mov
call
(bad)
test
pop
sahf
clc
mov
cmps
repnz
push
push
fwait
pop
jg
jecxz
icebp
mov
movs
jo
lods
(bad)
(bad)
call
dec
sub
jne
push
fdivr
jb
cmc
clc
push
sub
jecxz
pop
xor
(bad)
call
sti
popa
out
call
popa
sbb
out
pop
fsubp
cld
jmp
mov
push
jg
or
ins
mov
js
test
mov
in
or
ss
mov
sub
and
adc
retf
pop
out
bound
xchg
sti
fistp
xchg
dec
in
xchg
ss
stc
sbb
arpl
pop
fs
and
movs
add
(bad)
(bad)
fild
jae
sbb
sbb
and
jl
jmp
xchg
in
(bad)
jg
dec
fcomp
enter
xor
fistp
shl
das
mov
xor
icebp
lock
jg
call
xchg
mov
iret
dec
jle
sbb
adc
fild
repnz
ins
cmps
stos
lahf
cld
jp
loope
(bad)
inc
mov
push
xlat
popa
cld
in
xchg
sbb
mov
(bad)
and
push
call
nop
add
mov
fnstsw
(bad)
pop
ins
mov
jle
inc
dec
cmps
mov
cmp
(bad)
mov
popa
rol
or
sar
push
jmp
and
mov
in
popf
test
enter
cmp
dec
adc
(bad)
aam
fcmovnb
jl
retf
xchg
push
mov
(bad)
(bad)
dec
pop
in
aaa
stos
sbb
jnp
test
stos
xor
adc
and
(bad)
dec
cmp
out
pop
dec
xor
fild
mov
in
hlt
icebp
dec
adc
pop
in
sub
push
lahf
(bad)
or
in
inc
retf
push
pop
jl
lods
jo
imul
test
mov
hlt
mov
push
(bad)
call
std
mov
enter
mov
sbb
adc
arpl
mov
fbstp
cmp
test
mov
inc
pop
push
lds
lods
cmps
ret
push
mov
or
(bad)
jmp
shr
push
add
imul
test
mov
das
xor
(bad)
out
clc
(bad)
jg
or
fdivr
(bad)
outs
add
sbb
jl
or
jg
or
(bad)
outs
push
daa
in
pushf
ja
fwait
cmps
dec
sub
(bad)
(bad)
(bad)
mov
test
arpl
mov
cmc
sbb
or
xchg
cmp
repz
or
xchg
push
popa
jb
aam
cmp
and
aaa
loopne
in
and
xchg
jbe
shl
sbb
and
mov
mov
mov
jg
inc
inc
(bad)
adc
lock
pop
rol
retf
adc
(bad)
arpl
xchg
(bad)
(bad)
cmp
jmp
(bad)
out
adc
pop
xor
pop
cs
xor
das
repz
(bad)
(bad)
push
inc
cmp
mov
in
scas
xchg
sbb
popa
xor
and
call
cld
scas
dec
fwait
movs
jp
inc
bound
retf
sub
scas
in
(bad)
(bad)
(bad)
push
aam
xor
lahf
iret
or
and
mov
out
jbe
or
jmp
cmp
sbb
push
jmp
sbb
loopne
data16
sbb
das
aam
push
call
call
popf
push
in
add
pusha
mov
ret
dec
into
test
mov
test
pop
dec
(bad)
in
mov
out
shr
mov
loope
jns
icebp
jl
dec
mov
popf
jmp
(bad)
(bad)
(bad)
inc
std
pop
push
pop
dec
xlat
idiv
sbb
jl
mov
in
jp
adc
ret
mov
sbb
data16
loopne
xlat
(bad)
jle
pop
je
xchg
(bad)
xchg
in
mov
cmp
push
jns
(bad)
(bad)
(bad)
inc
mov
sub
(bad)
jmp
ds
pop
ror
sub
ficomp
call
sbb
mov
es
pop
mov
mov
dec
push
inc
mov
jp
inc
jns
push
outs
sbb
dec
push
mov
sub
out
jecxz
cmps
dec
adc
(bad)
fst
js
hlt
jne
mov
mov
add
pop
push
push
(bad)
fisttp
vmwrite
mov
cld
push
sub
mov
cdq
into
sti
mov
ja
(bad)
test
bound
daa
in
ficom
lea
fcmovb
stc
sub
xchg
(bad)
(bad)
(bad)
jmp
sub
add
push
cmc
pop
clc
les
jmp
jns
adc
ins
jg
sbb
shld
mov
pop
mov
ds
hlt
ror
pop
clc
jg
mov
mov
sub
not
mov
mov
(bad)
cld
mov
(bad)
mov
pop
pop
push
fwait
aam
in
sbb
in
sbb
add
pop
pop
cmp
in
(bad)
clc
push
dec
cmp
outs
das
sbb
addr16
dec
cs
fistp
retf
clc
inc
cmp
lods
fwait
add
in
call
jle
add
push
add
test
ins
stos
aam
jnp
mov
(bad)
jmp
repnz
out
test
mov
xchg
mov
fisttp
retf
stc
push
pop
or
push
push
outs
add
std
inc
sub
(bad)
mov
retf
mov
in
push
push
stos
pop
(bad)
(bad)
(bad)
jmp
dec
xor
dec
ror
mov
xchg
enter
jae
clc
outs
sbb
test
bound
clc
leave
(bad)
inc
cli
add
xor
mov
mov
je
pop
add
(bad)
call
inc
push
mov
sbb
leave
(bad)
aad
mov
mov
cdq
push
leave
ins
adc
les
push
(bad)
mov
movs
clc
(bad)
out
in
int
movs
push
out
(bad)
aam
stos
imul
lock
call
push
aam
call
ins
aam
push
xchg
sar
(bad)
aas
xchg
iret
rcr
sub
mov
dec
pop
lahf
lds
ja
pop
daa
mov
add
jmp
imul
(bad)
loop
(bad)
dec
jle
repz
leave
gs
pop
test
jnp
sti
cld
(bad)
movs
out
test
js
std
mov
add
(bad)
mov
test
lods
mov
fistp
fcmovnbe
in
push
(bad)
jge
movs
mov
cs
jecxz
or
jmp
push
lahf
lock
(bad)
push
cld
cmp
pop
mov
or
outs
ins
mov
cmp
xchg
fwait
adc
xor
push
dec
hlt
cmp
dec
popa
jbe
cmc
push
cmp
jl
hlt
ins
inc
mov
jmp
(bad)
out
cli
mov
push
jg
mov
cmp
in
lahf
xlat
xor
fistp
dec
cmp
rcl
cli
xlat
into
xor
std
and
repnz
retf
das
jmp
xor
lods
imul
and
ja
(bad)
call
add
test
aas
push
pop
dec
pop
(bad)
(bad)
(bad)
inc
leave
and
sub
loop
mov
(bad)
jns
sti
scas
sub
(bad)
(bad)
(bad)
dec
lds
fst
cmps
mov
jns
je
jae
push
fcmovnu
push
ds
sbb
enter
sub
(bad)
(bad)
jmp
mov
jbe
push
push
cdq
cmp
cdq
adc
into
push
scas
fisttp
(bad)
dec
dec
push
pop
es
imul
inc
jnp
or
add
push
adc
sub
in
or
(bad)
(bad)
jg
add
pusha
push
pop
lea
lahf
pop
mov
pop
mov
and
xor
ins
ds
(bad)
(bad)
mov
mov
xlat
mov
ret
movs
ss
clc
fadd
xchg
shl
inc
pop
jnp
(bad)
(bad)
(bad)
cld
push
mov
test
jmp
aas
loop
mov
(bad)
repnz
mov
or
std
ror
mov
mov
(bad)
test
or
fld
(bad)
(bad)
fild
int3
sbb
sub
dec
dec
ret
int
repnz
jecxz
(bad)
(bad)
(bad)
jnp
xchg
sbb
push
sti
fidivr
scas
mov
int3
jae
sti
(bad)
dec
(bad)
(bad)
fimul
cld
(bad)
mov
in
test
loopne
clc
push
dec
push
xchg
sti
mov
es
inc
sbb
jnp
call
ds
hlt
call
push
sub
(bad)
fdiv
data16
dec
(bad)
fild
pushf
lods
sar
mov
(bad)
adc
xchg
iret
fdiv
ins
retf
and
(bad)
clc
(bad)
out
sbb
aaa
mov
or
add
outs
test
sub
call
neg
jg
mov
out
adc
cwde
outs
repnz
aad
std
(bad)
push
call
aas
mov
mov
call
adc
pop
mov
xor
mov
stos
xlat
test
add
cli
ret
retf
adc
(bad)
(bad)
ins
cmp
pop
in
dec
cld
adc
lahf
sbb
push
jns
std
out
fiadd
dec
daa
inc
xchg
outs
dec
mov
pop
add
dec
fs
(bad)
(bad)
(bad)
call
cmp
ficom
(bad)
loopne
xchg
jbe
inc
(bad)
jg
arpl
in
test
call
mov
and
loop
xor
aam
xchg
js
jae
pop
mov
mov
into
mov
(bad)
(bad)
call
fsincos
fstp
jg
cld
into
adc
icebp
pop
jns
xor
hlt
or
cmps
sbb
lds
(bad)
push
sub
repz
iret
sbb
out
push
fst
mov
sbb
fs
mov
cwde
push
cwde
pop
cli
mov
in
in
in
mov
fild
imul
ss
outs
(bad)
call
popw
sahf
lock
jg
mov
dec
fdiv
loop
fisttp
sti
repz
sbb
call
inc
fsubr
pop
sub
pop
outs
mov
maxps
fstp
scas
mov
adc
iret
xor
jae
icebp
pushf
or
loop
xchg
mov
(bad)
nop
les
adc
and
inc
push
xor
cmps
(bad)
(bad)
jmp
out
adc
xor
cmp
dec
hlt
sub
ins
sub
push
and
fidivr
mov
mov
mov
sar
mov
fdivr
mov
add
jg
jmp
sti
in
or
(bad)
jbe
cmps
mov
mov
and
add
aam
aaa
out
(bad)
imul
xchg
dec
(bad)
(bad)
(bad)
mov
mov
cs
ret
repz
sub
push
dec
mov
xchg
jbe
lahf
rol
add
call
jg
mov
dec
add
call
or
fcmovnu
scas
jmp
lahf
bound
pop
cmp
dec
xchg
jle
jb
scas
imul
and
lea
(bad)
jmp
fisubr
sbb
pop
mov
(bad)
daa
mov
shr
retf
call
(bad)
(bad)
(bad)
ds
adc
inc
test
in
pop
mov
mov
retf
mov
inc
aas
sahf
jmp
scas
pusha
loopne
clc
lock
hlt
and
ficom
mov
cld
aaa
(bad)
(bad)
(bad)
call
(bad)
fnstsw
xchg
jmp
and
sub
outs
ins
movs
fnstcw
sbb
inc
(bad)
fcomip
adc
in
push
cmp
and
jmp
dec
(bad)
cli
(bad)
(bad)
(bad)
(bad)
lea
mov
retf
and
out
and
push
aam
sbb
cli
(bad)
inc
xor
mov
call
mov
outs
or
call
jp
aad
mov
jns
inc
jmp
push
add
mov
mov
jmp
pop
inc
sti
cld
sbb
push
jo
fstp
stos
adc
dec
sar
(bad)
mov
enter
or
ror
mov
cli
hlt
(bad)
adc
ret
jp
push
iret
sbb
(bad)
icebp
cmp
push
dec
xchg
icebp
jmp
mov
mov
jmp
scas
das
daa
movs
mov
popf
xor
sti
sbb
outs
lods
inc
fwait
out
fld
xor
adc
(bad)
jg
fucomip
ins
movs
jmp
ins
scas
fadd
and
pop
repz
(bad)
mov
jl
loop
in
pop
jle
mov
dec
push
xchg
xchg
jmp
dec
jbe
mov
cmp
xchg
loopne
jmp
cwde
mov
lahf
scas
leave
stos
icebp
and
(bad)
call
(bad)
dec
test
rcl
ins
lods
sub
call
cwde
data16
fldenv
jge
xor
mov
jns
mov
movs
mov
jmp
jne
clc
mov
xchg
mov
fwait
cdq
push
pavgw
sub
mov
in
sub
adc
out
mov
cmp
out
add
stos
inc
xchg
ja
(bad)
(bad)
(bad)
dec
in
inc
xchg
out
push
lahf
aam
aam
scas
xchg
push
(bad)
idiv
repnz
adc
outs
scas
cs
gs
aad
lock
mov
fwait
push
mov
push
out
mov
aam
sbb
mov
(bad)
inc
jno
fndisi(8087
inc
jl
mov
fadd
shl
fldenv
shl
dec
(bad)
(bad)
jge
inc
jne
arpl
outs
cmp
cs
retf
aas
mov
adc
dec
pop
out
cli
jg
sbb
call
jle
sbb
jns
scas
sbb
jmp
js
ret
xabort
movs
aad
hlt
xor
test
test
cld
loope
stos
push
inc
cmp
push
xor
mov
push
jg
(bad)
mov
int
jp
(bad)
jne
jmp
out
mov
(bad)
call
movs
in
call
es
(bad)
adc
in
pusha
cmps
pop
shl
loope
lea
sbb
(bad)
(bad)
push
retf
cmp
push
mov
(bad)
(bad)
(bad)
mov
push
cli
ret
fwait
test
scas
dec
ss
scas
xchg
dec
push
xchg
jg
cmp
(bad)
(bad)
call
cld
and
jmp
sar
iret
dec
mov
fstp
scas
push
sub
mov
mov
mov
leave
repnz
dec
cmp
iret
daa
xchg
pop
adc
inc
jle
pusha
fcmovnb
(bad)
fsubr
(bad)
(bad)
(bad)
call
repnz
xlat
fwait
daa
daa
jnp
daa
(bad)
push
rcl
jle
nop
loop
jle
add
int
sub
(bad)
call
retf
test
jne
jno
xchg
push
(bad)
sbb
div
(bad)
(bad)
mov
xor
mov
push
addr16
enter
mov
and
cmp
and
int3
rcl
daa
push
aas
loopne
iret
sub
iret
mov
lds
push
push
sub
cmp
xchg
lock
daa
sbb
clc
push
test
dec
outs
loope
dec
pop
clc
mov
daa
(bad)
aam
add
(bad)
call
jge
xor
daa
imul
sub
jp
test
sub
cli
call
outs
dec
(bad)
test
push
loop
dec
xor
jmp
sub
cli
aas
(bad)
xor
ret
lea
pop
dec
and
mov
(bad)
(bad)
fimul
pop
jl
jae
(bad)
push
or
icebp
mov
mov
ja
pop
imul
repz
fistp
ja
iret
or
jns
lods
repz
out
cmp
mov
xchg
xchg
push
jle
dec
(bad)
call
push
or
add
jb
adc
add
(bad)
aas
daa
repz
in
or
mov
dec
test
std
or
dec
fimul
xchg
test
adc
mov
pop
scas
adc
cmp
mov
mov
cmp
push
mov
dec
xor
outs
mov
dec
pusha
call
hlt
call
(bad)
(bad)
mov
movs
push
stos
mov
inc
(bad)
jmp
out
jmp
sub
(bad)
(bad)
call
lds
cmp
movs
mov
add
mov
push
loop
push
fcom
(bad)
(bad)
(bad)
jl
xchg
aam
jno
repz
sti
push
es
push
sub
mov
cmp
stc
shl
jo
add
pop
push
nop
scas
push
cmps
pop
nop
aas
cmp
fxch
adc
cmp
std
push
sub
ds
cs
inc
jb
sub
inc
popw
mov
ret
jle
and
jecxz
leave
lods
add
jae
pop
push
std
jno
xor
outs
inc
outs
enter
(bad)
xor
int3
in
mov
stc
aas
cmp
fadd
pop
test
clc
jecxz
es
(bad)
(bad)
call
mov
mov
cs
(bad)
mov
rcr
out
in
int3
call
call
frstor
out
xchg
inc
icebp
(bad)
xor
fcomp
mov
ficom
pop
xor
aaa
std
stos
jae
(bad)
mov
sbb
pand
jmp
mov
inc
(bad)
popf
leave
mov
mov
add
stos
and
dec
sub
fbstp
pusha
into
xor
mov
rcl
or
ins
xor
shufps
sar
xor
jmp
cli
sbb
cmp
(bad)
jmp
cmp
xchg
dec
lahf
sbb
dec
test
ss
jmp
push
xor
cli
mov
mov
xor
out
sbb
push
cld
shr
xchg
out
xor
add
mov
loopne
(bad)
push
stos
inc
repz
loope
push
jns
enter
in
nop
fst
call
call
adc
cmp
jp
jae
push
mov
scas
es
(bad)
ror
jmp
mov
push
gs
std
dec
cmp
addr16
xchg
push
enter
push
sahf
loop
sub
sahf
nop
cld
jecxz
(bad)
(bad)
call
inc
out
gs
xor
dec
sbb
fdiv
popf
daa
cld
pop
jbe
cmc
adc
adc
sub
cmp
out
dec
lods
push
pusha
addr16
sahf
push
inc
mov
inc
aas
pop
adc
or
loope
cmp
xlat
adc
clc
jge
xor
call
mov
std
dec
cld
jnp
jle
int3
ss
jbe
mov
(bad)
jg
in
jno
rcl
iret
repz
(bad)
bswap
scas
xor
(bad)
jle
lds
sar
rcr
adc
stc
loop
pop
mov
imul
(bad)
push
cmp
mov
arpl
mov
push
sub
(bad)
mov
test
cmps
(bad)
in
mov
and
jge
lods
mov
pop
adc
shl
pop
pop
sbb
sti
mov
sahf
jo
into
sbb
pop
cmc
ins
inc
fnsave
push
repz
(bad)
(bad)
dec
scas
ficom
idiv
js
mov
xchg
and
clc
and
outs
xchg
jl
add
lock
test
inc
shl
jg
fiadd
(bad)
pop
test
pop
stos
mov
call
stos
xchg
scas
sub
and
mov
xchg
mov
idiv
enter
lock
outs
faddp
rcr
idiv
(bad)
aad
inc
lock
dec
mov
pop
ja
(bad)
retf
cli
jecxz
sbb
push
push
cmp
jl
mov
arpl
rcr
sub
push
(bad)
pop
fist
(bad)
(bad)
inc
push
bound
fisttp
pop
xor
fnstcw
mov
pusha
in
outs
dec
into
fs
push
clc
xchg
mov
xlat
cmovb
mov
inc
mov
push
add
xor
jb
push
(bad)
out
jbe
jmp
jns
(bad)
push
cdq
fstp
idiv
ror
sahf
cld
jnp
jl
xchg
add
cdq
pop
xchg
(bad)
dec
dec
and
xor
and
imul
(bad)
mov
mov
pop
sub
add
jbe
(bad)
test
test
jmp
clc
(bad)
cmp
mov
push
mul
pop
push
cmp
fimul
jno
xor
pop
ds
aam
std
(bad)
jmp
xchg
sbb
jmp
xor
enter
ins
xchg
sbb
xchg
lods
(bad)
mov
mov
push
jmp
aad
mov
dec
pop
dec
cmps
loop
mov
jg
test
test
dec
adc
pop
sub
jnp
in
(bad)
(bad)
(bad)
fild
je
stos
loope
push
out
lds
cmp
mov
xchg
out
idiv
mov
cmp
and
jg
out
fst
scas
mov
xor
dec
lock
inc
cmp
(bad)
stos
cmc
cmp
jmp
xchg
mov
gs
cld
jo
pop
mul
push
dec
mov
popa
xlat
in
xchg
pop
aas
jbe
cmp
pushf
or
jg
add
push
mov
cmp
inc
xchg
lock
outs
(bad)
test
test
test
stos
sub
imul
pop
out
ds
pop
jne
mov
push
jnp
jl
cmp
sti
retf
aaa
or
pop
nop
les
jns
icebp
hlt
sbb
(bad)
(bad)
push
xchg
dec
lods
xchg
iret
shl
inc
add
cdq
out
cmp
jle
inc
(bad)
mov
jmp
movs
(bad)
popa
aaa
jo
mov
xor
stc
dec
push
je
sti
and
movs
(bad)
push
mov
mov
outs
enter
pop
sub
fimul
aaa
ret
xchg
mov
in
(bad)
dec
and
cli
(bad)
cmp
icebp
(bad)
jmp
es
sub
ret
enter
adc
jo
pop
jmp
cli
call
cli
jbe
mov
mov
test
(bad)
(bad)
jmp
sbb
fisttp
hlt
into
mov
enter
sub
mov
std
das
xor
test
xchg
mov
fidiv
cdq
test
stos
jp
retf
sub
mov
or
inc
cmp
push
inc
(bad)
ficomp
and
(bad)
fst
stos
retf
scas
les
mov
fwait
and
sbb
shl
dec
(bad)
(bad)
(bad)
(bad)
fild
pop
and
ins
dec
shl
ret
inc
pop
leave
cmp
pop
or
xor
inc
cli
mov
jle
stos
in
and
push
(bad)
(bad)
push
sahf
(bad)
jmp
pop
xchg
repnz
fcomip
add
push
push
ds
(bad)
(bad)
(bad)
dec
dec
xlat
repz
pop
mov
inc
cmc
mov
and
sbb
xor
shl
(bad)
(bad)
dec
pop
xchg
sahf
scas
enter
pop
sub
fild
sahf
addr16
jno
(bad)
(bad)
call
cmp
bound
std
jecxz
lods
mov
and
mov
push
jne
popa
lahf
mov
jmp
inc
(bad)
aas
mov
idiv
fcmove
sar
push
hlt
dec
int
adc
push
inc
ret
dec
imul
cli
pop
jg
inc
cld
adc
arpl
sar
pop
add
inc
push
mov
clc
push
jmp
push
scas
jns
scas
loope
inc
out
dec
aam
push
(bad)
(bad)
(bad)
(bad)
push
sti
scas
cwde
fsubp
mov
mov
leave
cmc
mov
jmp
pusha
imul
clc
mov
int3
sbb
aas
addr16
add
(bad)
mov
jle
(bad)
(bad)
jmp
dec
fimul
ja
gs
sub
leave
adc
pop
add
push
and
(bad)
jno
fwait
jbe
push
imul
xchg
sbb
(bad)
pushf
test
mov
ror
jne
jns
mov
xchg
into
fwait
(bad)
(bad)
(bad)
jmp
inc
(bad)
mov
shl
dec
sub
cmps
cmps
(bad)
xor
jmp
(bad)
jg
std
mul
(bad)
lock
in
and
repz
shl
(bad)
jg
(bad)
jmp
cli
xor
int
xchg
cmp
adc
push
mov
aas
(bad)
cmp
dec
mov
cld
mov
test
xchg
(bad)
(bad)
(bad)
push
lods
imul
push
push
mov
out
mov
lods
mov
ror
(bad)
pop
out
test
dec
cmp
fbstp
leave
out
mov
push
sar
clc
mov
xor
xchg
pop
xchg
xlat
and
mov
call
sbb
mov
cmc
push
std
add
mov
sbb
and
pop
ret
pushw
adc
cmp
jbe
mov
outs
mov
jno
pop
and
inc
add
gs
pop
aad
in
cld
pop
daa
jl
inc
in
test
xchg
jl
cmc
mov
clc
fstp
adc
dec
arpl
cmp
jle
add
(bad)
fistp
aas
fidivr
jne
idiv
lods
lods
adc
sub
ins
cmps
hlt
popf
ins
test
cwde
inc
mov
mov
es
test
cs
lahf
js
add
xchg
mov
push
aad
jg
dec
jl
lock
int
add
cmp
sbb
inc
movs
dec
rcr
pusha
jbe
mov
loopne
int3
pusha
sbb
jmp
adc
xor
jmp
call
cld
bound
cmp
or
pusha
fdiv
jp
jbe
call
call
jmp
loope
dec
(bad)
js
sub
call
imul
dec
mov
jnp
xlat
dec
cmc
dec
mov
sbb
fcom
or
pop
hlt
test
retf
fidiv
mov
push
iret
mov
cdq
cmp
test
cld
inc
movs
es
iret
jmp
das
mov
mov
xchg
add
xchg
(bad)
(bad)
(bad)
inc
push
inc
(bad)
jg
retf
cdq
push
jbe
inc
sahf
(bad)
sar
xor
or
xor
repnz
dec
pop
adc
pmuludq
add
popf
xor
jg
(bad)
(bad)
dec
mov
mov
stos
cld
dec
bound
rcr
(bad)
fistp
cld
jmp
call
jecxz
lahf
daa
xchg
imul
ds
add
sbb
push
cld
push
stos
or
jg
and
pop
push
mov
lahf
sub
cmp
(bad)
(bad)
(bad)
in
(bad)
cmp
out
pop
jmp
fmul
int
dec
sti
jl
jmp
popf
aam
cmp
and
rol
cwde
mov
(bad)
out
mov
or
mov
mov
or
aad
cmps
dec
pmullw
test
add
pop
inc
pop
(bad)
xchg
stos
jmp
(bad)
(bad)
(bad)
jmp
ja
mov
pop
cmovp
and
mov
std
sub
call
scas
(bad)
push
dec
jecxz
add
outs
inc
fild
jle
(bad)
out
cli
mov
aam
jno
pop
popf
pop
pop
pop
clc
retf
push
and
imul
stc
loopne
(bad)
(bad)
push
pop
jne
mov
jge
or
inc
fprem1
and
das
ficomp
add
faddp
mov
xchg
ds
(bad)
(bad)
(bad)
push
push
xchg
xor
jmp
les
out
push
jle
cmp
mov
arpl
cmp
(bad)
mov
aam
test
shr
xchg
std
mov
adc
and
(bad)
dec
pop
pop
mov
xor
adc
mov
enter
mov
jl
or
xchg
dec
mov
mov
movs
ins
xor
mov
dec
cli
jnp
aaa
adc
push
(bad)
inc
jg
scas
push
aaa
dec
mov
cmp
push
in
call
adc
js
ja
fisttp
pushf
(bad)
(bad)
(bad)
jg
imul
cmps
retf
dec
shr
jo
aas
mov
dec
pushf
xor
addr16
push
or
xlat
push
iret
dec
loope
test
cmp
ror
cs
in
call
cmps
das
dec
in
dec
rol
xchg
dec
pop
pushf
aaa
addr16
cs
(bad)
inc
pop
ror
clc
mov
cld
mov
std
jae
jno
cli
and
jg
push
jae
or
sbb
cmps
sbb
(bad)
fcom
inc
sbb
mov
and
sti
test
adc
loop
shr
xchg
loop
mov
and
push
icebp
mov
cld
add
xor
ins
mov
iret
aad
fmulp
sahf
cmp
jg
or
dec
call
mov
sub
push
mov
(bad)
sbb
push
(bad)
bound
push
mov
fs
into
pop
ret
repz
scas
and
(bad)
jmp
pop
jae
push
shl
test
into
neg
mov
lock
(bad)
(bad)
dec
xchg
mov
scas
pop
push
fild
inc
icebp
adc
sub
test
pop
push
xchg
jg
push
sbb
and
dec
call
(bad)
call
ficomp
aam
ficomp
hlt
stc
cmp
lods
pop
popa
out
dec
popa
in
das
(bad)
pop
dec
outs
repz
and
shr
and
inc
(bad)
(bad)
(bad)
(bad)
sti
pop
or
add
mov
cmp
aas
daa
outs
arpl
jne
jle
adc
mov
push
leave
(bad)
cmps
hlt
cmp
mov
fcomip
inc
jl
loop
or
ja
or
(bad)
(bad)
(bad)
(bad)
mov
dec
add
xor
clc
push
ret
das
cmp
jle
mov
inc
cmp
std
push
outs
xchg
dec
test
mov
movs
and
cmc
(bad)
jg
iret
iret
jnp
mov
mov
xor
push
push
popf
call
push
in
inc
test
sbb
or
push
inc
stc
pop
scas
adc
or
js
gs
push
test
or
sbb
adc
(bad)
push
ffree
jmp
lock
fist
cmc
(bad)
xchg
hlt
cmps
les
imul
cmp
fdivr
(bad)
jae
cmp
in
jmp
fdivr
sbb
iret
cmp
out
(bad)
sbb
sahf
mov
xor
test
sub
fiadd
fistp
int3
out
retf
push
shl
and
test
lock
(bad)
(bad)
mov
jge
push
mov
dec
dec
mov
push
ret
js
or
(bad)
adc
cmps
cmp
jmp
cli
enter
shl
(bad)
cdq
adc
or
loop
jmp
lahf
in
aam
adc
or
clc
(bad)
(bad)
jmp
jmp
shl
xor
nop
repnz
(bad)
jbe
(bad)
(bad)
jmp
mov
lahf
(bad)
adc
pop
imul
mov
xor
xlat
(bad)
(bad)
jmp
pop
add
mov
ret
pop
pop
shl
push
repnz
adc
repz
call
adc
movs
push
and
push
sbb
pop
add
cli
retf
in
(bad)
(bad)
call
mov
pop
and
push
call
mov
mov
aas
xor
int
xor
rcl
mov
sahf
fcmovnbe
cmp
imul
addr16
mov
mov
push
xor
das
adc
test
mov
jmp
dec
movs
pop
pop
je
(bad)
(bad)
(bad)
call
ret
mov
neg
adc
scas
jb
xor
dec
adc
mov
imul
pop
push
sub
mov
cli
popf
mov
mov
pop
and
cli
xchg
lea
in
mov
rcr
xchg
xchg
imul
pushf
hlt
cmp
pop
dec
mov
ret
sar
sar
mov
jns
imul
dec
jbe
lods
push
add
mov
cdq
and
xor
js
hlt
arpl
ret
sbb
mov
pop
cmps
mov
(bad)
push
or
out
aam
test
(bad)
mov
enter
dec
xor
loop
pop
icebp
arpl
(bad)
(bad)
jmp
test
mov
inc
and
sub
fsub
jp
mov
loop
in
outs
bound
or
call
xchg
mov
das
movs
out
outs
int
retf
jg
mov
xor
sahf
into
or
(bad)
(bad)
(bad)
push
es
push
lods
pop
sub
add
mov
cmc
lock
pop
sbb
mov
pop
in
aas
popf
(bad)
jge
hlt
mov
cdq
test
and
daa
pusha
push
bound
lea
or
pushf
out
push
lock
arpl
jl
fmul
pushf
mov
lods
loopne
leave
popf
(bad)
dec
popw
mov
cmp
aas
nop
dec
cli
and
xlat
dec
push
inc
cli
push
cs
pop
retf
(bad)
and
cli
or
retf
outs
lods
add
out
mov
loop
(bad)
jg
aaa
outs
adc
push
or
leave
pop
sahf
sbb
mov
(bad)
(bad)
push
(bad)
jg
xchg
sub
push
cmp
jg
(bad)
in
iret
lock
mov
ds
and
les
clc
cmc
es
xor
mov
enter
cmp
add
add
ret
pop
mov
loop
or
cmps
(bad)
je
xbegin
push
inc
mov
nop
lock
and
sbb
retf
xchg
or
addr16
fs
fnsave
(bad)
pop
gs
sub
pop
cmp
dec
popf
test
(bad)
mov
jmp
jmp
jno
jmp
leave
mov
loopne
pop
sub
pushf
mov
fsubr
pop
or
xor
loop
(bad)
(bad)
(bad)
jmp
sbb
sar
mov
pop
dec
jmp
in
stc
dec
jp
mov
js
shr
mov
imul
fwait
cmp
scas
adc
jne
frstor
out
(bad)
(bad)
(bad)
call
cmp
rol
sbb
xor
neg
jl
test
clc
fist
jl
sbb
jecxz
or
dec
push
es
fwait
mov
cmp
pop
sti
int
fistp
cmc
ffreep
jbe
jo
dec
imul
inc
clc
push
(bad)
push
add
je
mov
bnd
js
ins
xchg
into
int
cld
inc
in
or
lahf
popa
jp
stos
test
(bad)
jg
addr16
mov
jbe
pop
loopne
cdq
push
jl
call
cmp
sub
push
arpl
fild
dec
xchg
and
dec
int3
sub
inc
xchg
inc
(bad)
mov
(bad)
dec
xor
sub
in
sub
enter
enter
icebp
outs
ret
arpl
or
mov
push
imul
outs
adc
and
(bad)
mov
cmp
lock
fisttp
mov
ret
loopne
mov
ret
not
jge
into
xchg
xor
pop
add
(bad)
inc
jnp
or
xor
cdq
ins
retf
mov
imul
xchg
jb
and
dec
loopne
out
sub
fistp
sti
(bad)
push
stos
add
lods
xor
(bad)
dec
iret
pushf
js
xchg
cmp
arpl
jmp
push
pusha
je
not
std
(bad)
(bad)
(bad)
jp
cld
jg
scas
sub
push
lock
mov
mov
retf
clc
or
pop
in
sub
ja
mov
cmps
mov
inc
stc
mov
loop
mov
lds
push
pop
mov
mov
ret
sbb
fcomp
lahf
sub
jmp
dec
loopne
jne
or
fsubr
out
jns
dec
clc
dec
sar
stos
xchg
sbb
js
repnz
mov
in
sti
mov
(bad)
arpl
out
jmp
enter
jg
test
addr16
(bad)
mov
pushf
pop
adc
push
push
cmp
push
or
pop
das
loop
das
ror
jmp
xor
sahf
cmps
jmp
add
call
cli
adc
mov
cwde
addr16
pop
retf
sbb
(bad)
mov
repnz
inc
push
add
sti
jnp
in
cwd
loop
icebp
inc
dec
pop
dec
cli
jmp
cdq
inc
jle
and
add
(bad)
dec
mov
pop
nop
push
das
dec
in
jbe
daa
push
retf
test
dec
xchg
mov
(bad)
fcomip
xor
push
pop
mov
and
out
aaa
jns
(bad)
mov
(bad)
push
cmc
repz
jbe
inc
(bad)
(bad)
push
inc
jg
(bad)
das
lock
enter
jbe
lock
call
or
(bad)
(bad)
inc
std
cmp
ror
jp
mov
outs
push
in
out
sti
sbb
daa
jmp
hlt
(bad)
idiv
(bad)
jmp
aas
mov
cmc
rol
sub
mov
cmp
gs
jmp
dec
mov
cmp
fld
jne
mov
int
push
lock
fld
loope
cmp
xchg
pop
jmp
jae
ins
(bad)
jmp
jmp
jbe
movs
and
adc
inc
out
cli
mov
xchg
iret
cmps
div
call
(bad)
jmp
xchg
jo
pop
adc
fmul
(bad)
mov
cmp
jg
mov
(bad)
(bad)
(bad)
call
or
stos
leave
sub
fs
inc
jmp
dec
jb
push
(bad)
(bad)
inc
xchg
movs
or
fwait
ss
add
cmp
fmul
stc
push
cmp
ja
hlt
mov
push
mov
xor
(bad)
(bad)
mov
jnp
aas
repz
std
push
outs
xlat
lea
in
scas
ss
or
test
add
call
(bad)
(bad)
(bad)
call
iret
xchg
push
xor
sub
mov
jo
stc
imul
out
mov
and
mov
cld
jecxz
push
inc
std
idiv
sti
(bad)
(bad)
call
inc
push
jmp
push
cwde
jmp
test
(bad)
jg
push
lds
cmp
sub
inc
scas
out
jecxz
cmp
icebp
test
and
(bad)
(bad)
jg
cld
imul
push
je
dec
cmp
(bad)
aaa
test
or
movs
retf
push
lods
in
scas
clc
(bad)
inc
pop
xchg
out
fwait
sbb
mov
sub
mov
lock
(bad)
jg
sub
inc
(bad)
js
jbe
rol
sub
pop
scas
imul
mov
(bad)
call
mov
fcmove
jecxz
push
push
xchg
lahf
mov
daa
stc
arpl
pop
hlt
mov
xor
mov
(bad)
mov
leave
hlt
xchg
(bad)
(bad)
(bad)
jmp
pushf
or
and
dec
mov
cmp
sub
cmp
pushf
mov
in
ja
pop
sub
mov
sahf
inc
mov
cwde
sahf
cmp
inc
call
or
pop
xor
stos
push
or
(bad)
(bad)
(bad)
pop
mov
cwde
mov
xor
mov
call
aaa
cld
jmp
jmp
or
dec
adc
push
daa
movs
hlt
add
out
mov
add
mov
xchg
stos
sub
pop
outs
cmp
(bad)
push
adc
test
rol
jmp
push
test
(bad)
into
daa
hlt
adc
dec
js
loope
(bad)
jmp
dec
mov
xchg
scas
jmp
loope
sub
pop
int3
(bad)
jmp
shl
xchg
push
mov
pushf
push
mov
fs
sub
push
mov
inc
stc
rcr
xchg
aas
xchg
mov
push
pop
neg
in
ja
fdivrp
(bad)
jg
jne
loopne
aas
enter
outs
mov
jnp
sbb
inc
jno
dec
and
fisttp
ins
pop
inc
xor
cli
mov
pop
(bad)
jmp
retf
cmc
mov
cmp
lods
xor
pop
cmc
dec
dec
mov
rcr
pop
jae
(bad)
(bad)
(bad)
(bad)
mov
in
mov
(bad)
xor
push
in
push
sub
lahf
pop
int
or
shl
(bad)
push
fdivr
xor
jo
xchg
(bad)
jns
dec
xchg
out
into
mov
mov
cmp
ficomp
pop
dec
jmp
fsubr
cmp
repz
add
pop
shl
stos
sbb
cs
(bad)
(bad)
jmp
scas
sbb
add
xchg
jle
or
push
adc
inc
inc
dec
outs
or
(bad)
(bad)
push
push
inc
pop
loope
fyl2x
shr
rol
add
ja
add
push
push
nop
(bad)
(bad)
jmp
adc
push
jne
stos
sar
mov
into
push
(bad)
bound
(bad)
std
(bad)
(bad)
call
sbb
jnp
add
sub
push
cmp
aaa
outs
fstp
fs
lods
dec
jl
pop
ss
out
sahf
mov
adc
mov
(bad)
jg
fdiv
mov
mov
std
in
in
mov
jge
clc
or
or
leave
jnp
leave
pop
mov
dec
xlat
call
and
in
xchg
sub
(bad)
(bad)
call
(bad)
mov
imul
dec
iret
leave
pop
data16
sub
das
ss
sub
or
(bad)
rol
ficom
(bad)
dec
imul
jmp
sbb
cmp
jecxz
(bad)
cmp
das
sbb
dec
xchg
daa
int3
push
mov
fdivrp
(bad)
(bad)
push
xchg
stc
fcmovnu
or
in
test
xchg
adc
aaa
enter
push
icebp
cmp
fnstcw
std
test
ins
test
jo
sbb
or
ss
ja
add
je
das
mov
mov
lea
cmp
sbb
jo
fbstp
or
bound
jle
in
(bad)
xchg
fsubr
or
test
adc
xchg
sbb
loop
jmp
outs
outs
addr16
or
imul
jl
pop
in
cmp
test
dec
pop
aaa
adc
cmps
and
retf
popf
test
ds
gs
call
ds
clc
test
(bad)
call
mov
mov
adc
jne
cmp
adc
(bad)
(bad)
(bad)
jmp
sar
mov
inc
inc
sub
inc
mov
xchg
addr16
mov
(bad)
mov
jmp
jmp
int
xchg
cli
cmp
xor
lock
ficom
call
(bad)
call
mov
loope
sbb
movs
mov
mov
(bad)
and
sti
or
and
push
sub
aas
mov
pop
fs
inc
cld
dec
lods
push
xchg
sbb
outs
std
clc
test
clc
loope
xchg
and
mov
or
xchg
mov
(bad)
(bad)
fild
sti
and
dec
mov
xchg
ja
in
mov
mul
jae
lods
sti
ficom
(bad)
call
jnp
aaa
in
(bad)
sti
(bad)
pop
dec
sub
adc
push
gs
(bad)
jmp
(bad)
jle
jg
fisub
jbe
push
xchg
sub
jecxz
mov
mov
cmp
daa
scas
cli
jecxz
lods
fadd
repz
dec
repz
adc
hlt
or
fwait
cld
cli
(bad)
(bad)
call
or
lea
and
xor
cmc
test
call
sbb
ds
clc
and
push
retf
call
scas
mov
jg
cmp
aam
dec
or
outs
mov
lock
mov
mov
clc
cmp
and
arpl
inc
stc
sbb
pop
mov
out
movs
mov
jmp
clc
scas
data16
popa
fbstp
cmp
loop
adc
jne
mov
(bad)
(bad)
(bad)
(bad)
mov
test
add
repnz
fsubr
sub
jle
sbb
jmp
(bad)
sti
push
clc
mov
pop
loope
mov
(bad)
fmulp
(bad)
jge
das
enter
psubusb
mov
mov
and
and
rcr
xor
out
mov
ins
call
mov
popf
sbb
addr16
call
add
(bad)
(bad)
fcomip
mov
jecxz
aam
pop
out
mov
scas
in
test
adc
cmp
pop
(bad)
jno
mov
dec
jl
stos
xlat
mov
jp
pop
push
pop
(bad)
fbstp
rcl
out
inc
and
adc
pop
sub
mov
jmp
cli
(bad)
jns
mov
dec
shl
imul
repz
cmp
aad
xor
cld
cdq
jo
inc
jnp
js
dec
cmc
sti
sub
(bad)
(bad)
(bad)
fistp
into
jg
mov
mov
iret
jmp
outs
and
inc
jle
stc
adc
(bad)
(bad)
(bad)
fcomi
loopne
cmp
fsubp
in
(bad)
int
push
outs
movs
sar
out
jmp
shl
(bad)
push
call
iret
jb
movs
sub
dec
mov
loope
jb
clc
ss
mov
jg
ret
repz
clc
lock
ror
ret
jb
pop
es
pusha
mov
stc
jnp
(bad)
outs
mov
adc
cli
xchg
repnz
mov
cwde
sahf
push
sbb
mov
xchg
cmps
mov
lods
stos
fnstenv
aas
fidiv
mov
hlt
aaa
(bad)
and
jl
bound
xchg
test
xchg
and
dec
icebp
sbb
inc
cmp
arpl
jb
fistp
in
ret
cmp
rcl
cli
fcmovne
sub
(bad)
jmp
(bad)
std
or
xor
test
inc
jle
pop
sti
dec
(bad)
stos
les
xchg
fld
jbe
aas
out
mov
jg
mov
aaa
mov
imul
jl
mul
or
cli
jg
pop
and
jge
enter
es
shr
sbb
xchg
in
dec
dec
bnd
ins
inc
cmovl
sbb
stos
addr16
xlat
adc
(bad)
(bad)
(bad)
jmp
and
hlt
movs
test
popf
dec
jle
push
repz
push
jle
ret
xchg
arpl
jo
dec
mov
mov
arpl
call
loopne
push
sub
jecxz
push
std
mov
ss
cmp
pop
shl
dec
mov
sbb
outs
and
sti
aas
dec
mov
arpl
scas
imul
cmp
outs
pop
aam
scas
jmp
and
jg
xchg
jbe
outs
adc
xchg
(bad)
imul
xor
cmp
stc
sar
ins
clc
cmp
out
call
lock
in
mov
rcr
ds
clc
add
addr16
push
mov
ret
(bad)
jmp
fisttp
cmp
sub
jmp
aam
xchg
jo
adc
mov
dec
push
xlat
imul
cmp
repz
(bad)
repnz
pop
adc
(bad)
(bad)
jmp
mov
xchg
mov
and
mov
fdiv
ja
and
fmul
mov
adc
dec
mov
or
push
call
out
pop
in
cli
call
dec
sbb
jno
in
aas
es
je
xlat
xchg
(bad)
(bad)
mov
xor
fs
retf
lods
(bad)
push
cmova
call
inc
js
inc
pop
loopne
cld
gs
mov
sub
movs
and
cmc
int3
test
mov
mov
ret
mov
jge
sbb
call
ja
ja
xchg
mov
fild
add
rcl
(bad)
jg
mov
clc
popf
xlat
and
fidiv
stc
dec
clc
lods
adc
jmp
mov
(bad)
inc
ss
mov
inc
imul
retf
jne
jmp
(bad)
mov
xor
das
call
popf
fild
gs
fsubr
jmp
cld
shr
out
adc
xchg
in
xlat
jae
cmp
inc
out
(bad)
not
mov
outs
(bad)
ja
push
stos
je
fucomip
mov
fbstp
call
xor
test
push
add
scas
jns
retf
and
repz
xchg
mov
or
(bad)
(bad)
jg
dec
jg
fmul
arpl
pop
jle
retf
out
mov
pop
ret
iret
jg
jmp
jmp
push
gs
stos
adc
(bad)
call
(bad)
call
xor
cmp
loope
adc
fst
fisttp
mov
(bad)
(bad)
dec
xchg
jle
sbb
cld
movs
hlt
dec
inc
fimul
xchg
sahf
xchg
fdiv
sub
lock
sbb
(bad)
push
test
stc
aam
pop
fiadd
imul
fidiv
call
jmp
(bad)
and
(bad)
ins
cmps
inc
adc
push
arpl
jnp
jle
push
pop
push
pop
inc
cld
(bad)
(bad)
mov
cmp
add
int
out
push
adc
iret
popf
popf
xchg
mov
or
push
add
push
jnp
jmp
push
xor
lds
retf
mov
call
lahf
inc
repz
mov
ja
xchg
mov
(bad)
(bad)
push
lahf
mov
(bad)
cli
popf
mov
push
dec
and
aaa
xor
mov
movs
mov
ds
(bad)
(bad)
dec
jl
retf
lahf
mov
jns
retf
xchg
fnsave
lods
mov
push
push
sub
pop
(bad)
(bad)
jle
inc
cmp
jp
clc
stos
pop
or
and
fild
jo
les
cmp
fxch
pushf
dec
pop
(bad)
sahf
sbb
pop
popf
jge
js
sub
loopne
xor
mov
jbe
(bad)
(bad)
out
mov
mov
pop
mov
and
jnp
jae
mov
cmp
push
movs
jle
jmp
cmp
sbb
jecxz
(bad)
mov
jno
aas
push
cmc
je
fnstenv
push
into
mov
jns
xor
in
and
loope
or
repnz
(bad)
jmp
nop
lock
fimul
mov
aas
ret
pop
xlat
(bad)
(bad)
(bad)
out
enter
inc
gs
loop
stos
loope
inc
fdiv
push
and
stos
div
fstp
pop
out
fadd
inc
adc
dec
(bad)
sbb
(bad)
mov
lods
movs
xchg
jl
(bad)
jmp
mov
push
repnz
das
mov
sti
add
xchg
xchg
adc
jecxz
(bad)
(bad)
(bad)
(bad)
fbstp
push
jg
(bad)
fld
fsubr
cld
mov
aas
ds
pushf
xchg
xor
(bad)
(bad)
jg
in
sub
cmc
pop
dec
(bad)
hlt
gs
adc
or
cmp
push
scas
je
cmc
push
cld
(bad)
(bad)
cmp
(bad)
aas
dec
xor
shl
jno
xor
iret
jo
addr16
lahf
mov
fcompp
stos
stos
das
xchg
dec
out
std
xchg
iret
mov
dec
call
pop
hlt
jb
fldcw
xor
out
inc
cmp
(bad)
jmp
and
adc
arpl
fsub
dec
cs
push
fisubr
sti
jmp
inc
jg
jmp
mov
jge
or
test
cld
dec
cmp
loopne
pop
movs
and
mov
cli
dec
jge
mov
pusha
jecxz
scas
inc
jecxz
add
push
clc
std
nop
(bad)
jecxz
hlt
pop
cmps
iret
or
pop
and
js
sub
cmps
push
inc
cld
jno
cld
jno
cmp
mov
test
push
push
mov
sbb
lock
call
fsubr
cmp
xor
pop
sub
adc
ss
push
xlat
lds
dec
(bad)
mov
inc
out
stos
sar
push
loop
mov
jns
inc
popf
call
(bad)
(bad)
(bad)
(bad)
push
jns
push
inc
jge
mov
rcl
xchg
cmps
imul
(bad)
(bad)
(bad)
push
movs
adc
adc
pop
mov
repnz
cmp
mov
(bad)
(bad)
stc
dec
jns
outs
xchg
popf
enter
jl
push
cmc
shl
icebp
shl
movs
dec
(bad)
jg
xchg
aad
sahf
stos
lea
pop
add
or
mov
xor
mov
jmp
xlat
pop
call
fcomp
js
repnz
ret
out
xchg
aaa
in
xchg
add
ds
std
adc
push
in
inc
sar
mov
push
cmps
xchg
pop
int3
(bad)
sbb
jno
pop
adc
pop
sub
ss
clc
int3
je
cld
mov
(bad)
dec
les
xor
outs
jp
ret
scas
xor
and
add
sbb
push
add
popf
loop
push
cli
(bad)
fdiv
xlat
cmps
cli
push
push
cmc
in
aaa
(bad)
das
push
sub
push
clc
xchg
fdiv
stos
dec
cmps
mov
std
int3
fcomp
pushf
cmc
mov
(bad)
out
cli
add
fucom
leave
dec
sub
xchg
pop
adc
dec
hlt
ins
push
(bad)
call
rcr
sti
xchg
inc
pop
call
daa
jns
(bad)
(bad)
call
xor
cmps
xor
mov
shl
fisub
and
jne
inc
aam
scas
(bad)
(bad)
in
(bad)
movs
repz
(bad)
lods
(bad)
out
add
das
jmp
mov
sub
pop
cmc
sub
push
mov
out
xchg
xor
(bad)
out
out
jmp
mov
test
mov
call
xchg
in
fnstcw
(bad)
out
icebp
fnstsw
(bad)
jmp
adc
jae
pause
scas
adc
imul
stos
or
outs
(bad)
inc
fild
sbb
sbb
inc
add
cmp
iret
jmp
repz
imul
ss
repz
jge
ret
outs
repnz
iret
mov
in
sbb
pop
xlat
add
call
mov
loop
(bad)
mov
inc
mov
(bad)
(bad)
jmp
pushf
in
sub
sar
push
addr16
xor
pop
jne
into
mov
jecxz
mov
sub
inc
push
lds
cmc
fistp
fisubr
xor
or
(bad)
(bad)
dec
(bad)
js
jne
fcmovb
cmp
fbld
out
adc
pop
pop
pusha
out
push
xchg
adc
ja
(bad)
mov
into
or
cmps
mul
xor
add
push
pop
aaa
aaa
repnz
(bad)
(bad)
jmp
and
mov
(bad)
fisub
leave
jp
addr16
lods
inc
bound
in
scas
movs
cmc
(bad)
(bad)
jmp
xor
cmc
sar
jb
push
repnz
jns
sar
jle
(bad)
sbb
neg
retf
popf
add
jmp
das
ss
jo
mov
outs
mov
pop
rcr
sub
push
jmp
(bad)
(bad)
(bad)
inc
mov
mov
imul
in
cmc
iret
out
(bad)
div
call
add
ret
neg
jg
adc
lods
in
fst
mov
push
xlat
xchg
aaa
pop
stos
inc
push
cmp
jmp
jmp
mov
shr
cmc
retf
lods
cs
(bad)
(bad)
mov
mov
add
dec
addr16
cli
jmp
in
and
mov
(bad)
(bad)
(bad)
jg
jnp
add
jmp
fwait
in
pop
shl
icebp
popf
mov
jmp
(bad)
(bad)
push
mov
jle
fiadd
add
xchg
sbb
mov
push
dec
pop
add
popf
out
ja
dec
int3
lahf
add
mov
add
cmp
inc
ss
call
fbld
mov
fild
addr16
fcos
push
mov
out
cwde
cmps
ss
hlt
adc
dec
or
fstp
das
clc
jl
test
pop
mov
push
out
test
addr16
(bad)
call
sub
into
inc
jne
loopne
cmc
add
jmp
xchg
cmp
jae
hlt
mov
leave
mov
pop
(bad)
js
and
cs
push
fidiv
ud0
pop
fmul
add
scas
fwait
cmp
or
(bad)
out
adc
out
mov
loopne
pop
ja
sub
mov
fwait
imul
out
cdq
icebp
je
nop
out
mov
iret
(bad)
imul
pusha
out
icebp
pop
jp
repnz
call
jne
inc
rcl
repnz
dec
sbb
inc
loop
popf
aam
mov
fs
scas
pop
cmc
push
and
fbstp
ltr
sub
out
pusha
xlat
inc
cmp
fstp
and
sub
aam
xchg
mov
xor
call
adc
(bad)
out
cli
(bad)
jg
int3
sbb
repz
dec
popa
inc
xchg
mov
push
jg
(bad)
jmp
mov
cs
dec
jmp
dec
mov
pop
aam
jmp
dec
sahf
jmp
popa
mov
ins
push
ret
jge
or
dec
lods
neg
mov
mov
mov
cmps
mov
push
mov
shr
xchg
jno
(bad)
xchg
std
inc
sti
xlat
enter
daa
sbb
or
inc
ds
inc
lea
jp
into
mov
(bad)
(bad)
(bad)
mov
es
call
push
cmp
jnp
loop
push
shl
xlat
sbb
add
jmp
adc
mov
enter
push
(bad)
je
les
fisttp
and
icebp
fld
aaa
(bad)
(bad)
in
dec
jl
or
jge
test
outs
mov
and
(bad)
(bad)
push
xchg
clc
jle
mov
icebp
aam
fs
pushf
sbb
or
pop
aaa
xor
pop
cmp
ja
imul
cwde
aad
push
clc
mov
jae
(bad)
out
mov
(bad)
(bad)
(bad)
(bad)
jle
scas
add
loop
fidiv
sahf
fild
out
mov
mov
mov
hlt
sbb
push
(bad)
lds
mov
mov
das
adc
push
fstp
pop
jecxz
(bad)
(bad)
mov
pop
or
pushf
mov
lahf
xchg
shl
data16
xchg
jnp
(bad)
(bad)
(bad)
push
jmp
xlat
out
mov
jge
out
and
cmp
mov
jnp
sub
mov
cmp
aas
repz
aaa
pop
and
loope
rcr
fs
das
sub
and
sar
push
mov
adc
mov
push
or
stc
dec
femms
hlt
in
psubusw
jmp
scas
and
xchg
clc
call
int
add
dec
pop
inc
or
mov
xlat
sub
frstor
int
pop
hlt
or
xor
mov
(bad)
inc
stos
or
cmp
jnp
es
dec
cmp
cmp
repz
repz
inc
xor
scas
pop
jae
pop
(bad)
(bad)
dec
lods
fistp
fstp
test
dec
xor
cmp
(bad)
(bad)
(bad)
inc
sahf
cmp
jle
fcomp
out
pop
into
mov
pop
pop
stc
sahf
iret
sub
sub
daa
jg
test
out
mov
mov
fwait
pop
push
idiv
(bad)
(bad)
push
jmp
pop
and
mov
cmp
mov
mov
sar
mov
pop
dec
jecxz
icebp
push
js
xchg
dec
loop
jno
mov
pop
jecxz
ins
inc
jle
dec
mov
(bad)
pop
mov
not
(bad)
(bad)
(bad)
mov
fild
mov
pop
push
lea
mov
hlt
(bad)
(bad)
dec
jns
adc
jns
push
mov
iret
sti
xor
rcl
cmp
mov
mov
(bad)
mov
fst
fwait
dec
pusha
lds
mov
aad
stos
mov
push
jno
(bad)
gs
sar
pop
pop
lds
fs
pop
dec
clc
call
(bad)
jp
popf
repnz
cmp
sbb
(bad)
jg
(bad)
mov
popf
mov
jnp
enter
pop
retf
std
cs
mov
mov
push
loope
popf
xchg
jle
repnz
adc
cs
mov
add
iret
jbe
(bad)
mov
mov
push
mov
out
add
pop
sbb
adc
popa
lods
xchg
ror
pop
popa
lock
out
gs
xlat
aaa
or
ins
pop
inc
cld
mov
(bad)
call
jmp
pop
xchg
adc
aam
pop
and
cli
push
shr
std
xchg
out
or
add
(bad)
(bad)
(bad)
call
mov
aaa
pusha
sbb
popa
(bad)
mov
ja
jmp
jl
sahf
ja
std
in
fcomip
push
push
cmp
mov
sbb
dec
call
not
arpl
and
or
into
(bad)
jmp
jl
jno
dec
imul
test
jo
jp
and
sbb
cld
adc
fwait
bound
push
stos
xor
push
out
scas
(bad)
std
pop
in
mov
(bad)
jmp
daa
mov
sahf
sbb
ss
jno
xchg
jae
pop
cmc
bound
out
mov
repnz
(bad)
(bad)
push
popf
mov
call
lods
scas
mov
sbb
mov
jl
scas
cli
push
mov
icebp
sub
mov
xchg
cmps
lock
inc
mov
outs
inc
fistp
push
xchg
cmp
inc
(bad)
cld
inc
add
sbb
adc
scas
fs
(bad)
(bad)
(bad)
ret
retf
mov
lea
fld
cmps
adc
gs
(bad)
jg
add
cdq
iret
ins
xchg
das
xor
jno
sbb
jnp
popf
pop
neg
inc
xchg
(bad)
(bad)
(bad)
(bad)
call
inc
sub
inc
jl
jbe
pop
dec
retf
pop
pop
dec
and
js
sbb
jmp
(bad)
(bad)
mov
xor
xor
retf
mov
in
mov
sti
jl
dec
mov
adc
out
lock
push
cmp
dec
loopne
pushf
sbb
add
int
repz
call
dec
cli
pop
mov
jmp
retf
aaa
lods
cmps
enter
int
cmp
adc
arpl
int3
push
inc
mov
sub
lods
(bad)
(bad)
(bad)
call
(bad)
dec
sar
cwde
mov
je
addr16
dec
push
or
push
movs
arpl
(bad)
(bad)
jmp
outs
adc
daa
clc
inc
cmp
jle
in
adc
inc
sub
loopne
in
and
gs
jmp
fdiv
dec
ret
not
mov
cld
test
pop
push
add
mov
stos
cmps
mov
ret
data16
cmp
(bad)
(bad)
(bad)
dec
fistp
mov
adc
fdiv
mov
movs
mov
xor
(bad)
(bad)
jg
(bad)
loopne
or
jl
jmp
cmp
push
ins
jmp
(bad)
(bad)
fsubr
pop
dec
movs
std
es
adc
pop
jno
jmp
jae
cmps
jo
jmp
jns
out
lahf
neg
cmp
inc
ror
neg
lods
add
je
inc
(bad)
(bad)
mov
inc
jp
repnz
sub
jae
je
or
sub
repz
inc
out
pop
lods
test
mov
cmp
icebp
(bad)
jmp
fcmovnb
sti
mov
shr
(bad)
(bad)
(bad)
out
mov
iret
xor
pop
fmul
sub
(bad)
addr16
syscall
sahf
pop
rcl
mov
fisttp
pop
(bad)
jg
aaa
lahf
sbb
imul
mov
retf
or
fwait
(bad)
cld
pop
mov
push
addr16
in
call
push
fisubr
push
pushf
into
sti
(bad)
(bad)
push
cmps
ds
loop
lods
sbb
(bad)
cmp
int3
push
mov
sbb
icebp
inc
dec
jg
push
mov
pop
jmp
test
and
cli
mov
rcr
int3
(bad)
mov
das
adc
add
arpl
mov
jmp
bound
mov
jmp
fst
push
clc
adc
cmc
(bad)
(bad)
cmp
aam
call
into
ins
retf
out
addr16
mov
out
fdivrp
(bad)
(bad)
jmp
xor
lock
mov
ss
in
cmps
mov
into
loopne
and
jnp
aam
fistp
(bad)
push
int3
out
push
stc
push
jl
cmp
jl
imul
pop
test
fcmovne
fbld
adc
jge
cdq
dec
ins
aas
dec
mov
retf
in
mov
or
inc
pop
xchg
jbe
es
jno
inc
push
push
(bad)
(bad)
dec
xor
(bad)
push
(bad)
jg
dec
jns
pop
and
cld
pop
mov
cmc
cmp
(bad)
call
sub
inc
pop
cmp
and
or
jg
frstor
repz
scas
mov
arpl
or
or
out
cmps
mov
inc
loope
pop
ja
jns
push
jg
lock
inc
dec
push
lods
not
repnz
mov
lds
pop
in
or
(bad)
cmp
scas
sub
pop
stc
xlat
and
dec
cli
(bad)
call
xchg
xor
pop
fild
add
clc
(bad)
jmp
xchg
aas
outs
jp
push
jmp
jg
cmp
jmp
clc
(bad)
jmp
rcr
xor
mov
mov
add
ret
inc
in
std
mov
sbb
xchg
out
ja
inc
call
cwde
mov
dec
mov
pop
lahf
add
fcomip
sbb
cdq
aas
add
dec
ss
iret
ss
dec
mov
inc
std
xor
ins
mov
idiv
cmp
mov
enter
call
test
(bad)
dec
sbb
sub
pop
add
fs
out
push
call
aas
loope
(bad)
jmp
out
pop
retf
jp
push
cli
push
jg
mov
in
sti
call
inc
fimul
lods
test
sub
(bad)
(bad)
jmp
or
lahf
test
fsubr
jnp
lahf
mov
sahf
pop
jo
sbb
cmps
icebp
cmp
(bad)
(bad)
(bad)
aas
cmp
jp
mov
cmc
or
push
clc
pop
pop
pop
xchg
inc
popa
out
(bad)
cmp
test
pop
fld
dec
adc
fidiv
dec
hlt
pop
imul
(bad)
inc
mov
stos
add
add
call
pushf
clc
lea
mov
xchg
pop
pop
cmp
sbb
mov
retf
clc
(bad)
fistp
jg
loopne
pop
test
fcom
jmp
in
jno
dec
mov
jle
imul
loope
sti
jg
ror
(bad)
call
mov
push
mov
jg
int
jb
jge
outs
(bad)
lock
fistp
mov
scas
sar
cmp
stos
rcl
(bad)
mov
jmp
pop
pop
ffree
repnz
push
mov
(bad)
nop
mov
ds
(bad)
jmp
sub
xor
aaa
into
xchg
clc
dec
xor
jae
pop
cli
es
mov
int
adc
popf
hlt
mov
aas
fidivr
xchg
push
(bad)
dec
call
std
jle
mov
or
pop
pop
lahf
fld
pop
and
push
inc
(bad)
(bad)
(bad)
fidiv
add
icebp
or
push
jecxz
dec
arpl
mov
or
sti
(bad)
fcmovnu
add
outs
call
push
cld
imul
dec
sar
push
mov
mov
jl
loopne
movs
enter
ds
sbb
lds
add
dec
jae
mov
jno
jmp
jnp
jns
ror
cmps
call
adc
(bad)
call
dec
(bad)
fdivp
mov
shl
out
lods
stc
out
push
pop
push
pop
inc
cli
pop
sub
std
dec
mov
mov
inc
mov
push
jae
jecxz
enter
loop
shl
int
in
jnp
(bad)
push
push
inc
cmovbe
mov
push
and
les
mov
neg
test
call
jl
dec
jl
(bad)
jg
push
and
(bad)
(bad)
fistp
aas
(bad)
iret
sar
(bad)
(bad)
mov
iret
in
data16
adc
mov
les
int
ret
mov
sar
fst
fidivr
aam
mov
cmp
mov
pushf
(bad)
ds
fucomip
(bad)
(bad)
fild
je
dec
cld
rol
dec
jae
or
out
not
in
cld
retf
das
(bad)
repz
inc
shl
lahf
push
(bad)
(bad)
jmp
jmp
(bad)
add
lahf
dec
cli
or
daa
repnz
fisub
ins
fmul
mov
push
cld
(bad)
mov
fbstp
iret
repnz
push
jg
sbb
cld
dec
mov
cli
mov
int3
xchg
aas
pop
fs
aas
jb
pusha
cmps
aaa
dec
std
jne
sar
outs
push
leave
mov
lds
adc
cli
xor
mov
call
jmp
xchg
jg
scas
push
out
scas
sub
cmps
sti
(bad)
(bad)
(bad)
(bad)
stc
clc
mov
call
cmp
xchg
jecxz
mov
sub
(bad)
in
xor
cmps
out
cli
(bad)
(bad)
cld
xchg
sub
mov
in
mov
addr16
adc
xlat
pusha
push
call
jmp
ja
hlt
gs
stc
stc
data16
mov
fistp
mov
outs
sub
int3
call
cmc
mov
xor
xchg
fist
daa
pop
add
aas
int3
mov
(bad)
jmp
mov
sti
push
fcom
sub
ret
pop
pusha
jg
mov
jg
aaa
xor
sti
arpl
pop
sub
and
inc
js
stos
(bad)
in
frstor
sahf
fimul
mov
mov
jae
retf
pop
mov
fcmove
repz
(bad)
mov
loope
cmp
lock
fild
outs
(bad)
cs
das
cmp
xlat
retf
inc
jo
(bad)
call
sbb
pop
ret
mov
stc
mov
pop
jecxz
and
jbe
(bad)
(bad)
fbstp
adc
xor
xchg
(bad)
out
or
hlt
imul
ins
mov
(bad)
(bad)
push
cmp
mov
jns
add
lds
lahf
jmp
sbb
jne
aaa
pop
out
xchg
adc
jecxz
in
jecxz
xlat
clc
pushf
mov
dec
jg
sti
sub
mov
(bad)
(bad)
jmp
fisub
cli
jp
mov
sub
and
das
(bad)
repz
pop
fs
enter
(bad)
inc
fist
xchg
cmp
sahf
cmps
sahf
mov
inc
add
cmps
mov
pusha
jnp
or
(bad)
(bad)
call
push
xchg
jecxz
mov
(bad)
push
mov
sahf
cdq
leave
out
div
dec
pop
lea
std
(bad)
(bad)
hlt
cmps
outs
mul
loop
call
lahf
std
jp
(bad)
(bad)
(bad)
jg
mov
adc
dec
(bad)
jle
ja
jo
in
mov
movd
test
pop
in
jl
call
es
jns
or
adc
add
js
inc
cld
(bad)
std
xor
out
mov
(bad)
(bad)
(bad)
jg
inc
(bad)
aaa
rcr
push
pop
lahf
dec
sti
imul
dec
push
push
(bad)
jg
(bad)
out
arpl
mov
jne
add
arpl
pop
lods
fs
cmp
cmp
mov
sti
lock
jg
aas
jle
(bad)
(bad)
inc
xchg
jnp
fcom
jnp
jecxz
xchg
xchg
pop
les
mov
hlt
std
pop
mov
dec
xor
(bad)
std
mov
(bad)
jp
jmp
pop
mov
push
mov
iret
cmc
scas
daa
mov
jg
push
fld
sar
mov
(bad)
cmp
add
sti
test
mov
dec
(bad)
(bad)
mov
(bad)
stc
and
sbb
xchg
mov
cld
loope
(bad)
call
lods
xchg
out
lahf
fmul
aaa
or
jmp
mov
jb
fs
jg
lods
adc
shr
pop
jns
dec
clc
xchg
addr16
int
jg
test
dec
mov
mov
mov
(bad)
dec
xor
(bad)
(bad)
push
xor
dec
into
pop
loope
stos
jle
mov
push
aas
aad
xor
outs
jecxz
jmp
(bad)
(bad)
mov
fistp
jl
xchg
pop
cmp
fnstenv
cmp
jmp
scas
aas
test
cdq
imul
pushf
out
imul
or
lods
sbb
mov
jecxz
sub
and
xor
adc
aaa
retf
xor
(bad)
(bad)
(bad)
mov
fild
mov
data16
lahf
add
loop
(bad)
outs
popa
mov
fistp
(bad)
(bad)
(bad)
inc
clc
mov
pusha
jbe
lods
or
add
dec
jg
jl
xor
mov
cmc
dec
das
fidivr
je
jecxz
fstp
or
jg
inc
(bad)
cld
cdq
jmp
retf
inc
xchg
iret
cmp
call
cmp
jmp
mov
sbb
ins
out
sti
dec
mov
jle
test
ds
fiadd
(bad)
push
sub
inc
rcr
push
icebp
jl
(bad)
test
mov
adc
call
nop
cmp
cs
add
xor
pop
xchg
std
mov
pop
push
or
loope
iret
jge
jns
xchg
fwait
add
dec
fcomp
xchg
sub
sar
scas
(bad)
(bad)
jmp
mov
dec
pushf
cmps
push
sti
ret
adc
push
(bad)
(bad)
call
jns
sti
pop
rol
jno
icebp
fmulp
scas
inc
pop
jecxz
mov
jecxz
mov
(bad)
call
mov
adc
xor
jge
loop
popa
or
cwde
pop
cld
mul
push
xor
ficom
push
cmps
es
inc
clc
or
adc
hlt
or
fwait
std
(bad)
(bad)
call
push
(bad)
jg
fld
imul
and
mov
or
sub
ds
jnp
mov
add
mov
repnz
cs
outs
stc
push
ins
fucomp
(bad)
daa
ja
(bad)
(bad)
call
dec
pop
scas
addr16
jmp
mov
jae
sub
leave
lahf
imul
(bad)
ffreep
add
add
jno
lock
in
out
dec
repz
sar
leave
div
sub
push
in
pop
(bad)
in
sahf
inc
std
enter
cmp
(bad)
(bad)
(bad)
push
jo
in
daa
loop
sub
dec
fsub
aaa
mov
push
fwait
gs
ds
sbb
loope
pop
jmp
xor
dec
fld
aaa
cwde
sar
sub
inc
(bad)
adc
and
(bad)
pop
retf
jecxz
fs
xchg
comiss
(bad)
jecxz
inc
add
xchg
inc
cld
cmp
(bad)
mov
jmp
pushf
ins
lock
dec
daa
xor
(bad)
(bad)
call
pop
push
jle
(bad)
sti
xor
mov
inc
mov
scas
cmp
cmp
xlat
dec
out
inc
mov
repz
enter
and
(bad)
(bad)
inc
jmp
mov
neg
cmp
and
(bad)
lods
movs
mov
jmp
sbb
nop
aas
sar
push
jo
push
aas
imul
lock
pop
and
into
hlt
dec
adc
stos
ss
(bad)
(bad)
cmp
dec
pand
ja
retf
mov
lods
jae
push
xchg
mov
aam
sub
(bad)
call
xchg
repz
dec
sbb
pop
or
adc
jg
(bad)
inc
loopne
cmp
push
sahf
stos
loope
cmp
cmp
and
fstp
inc
fsub
imul
mov
push
lock
jg
fsub
sbb
fptan
test
cld
push
jg
sub
neg
fdivrp
and
add
jle
lods
push
div
ret
ja
mov
cmc
mov
outs
in
test
jo
and
out
xlat
push
jle
and
or
in
shl
fwait
xchg
data16
adc
mov
push
out
mov
push
stos
fcmove
out
add
jb
jp
mov
(bad)
(bad)
(bad)
cld
js
psubd
std
rcl
test
into
repnz
add
sub
(bad)
push
es
dec
cdq
mov
into
adc
mov
jmp
(bad)
jp
outs
aam
(bad)
and
jle
jmp
mov
inc
push
xor
push
mov
cmp
pop
js
inc
or
nop
xchg
fdivr
ret
or
(bad)
(bad)
jg
out
bnd
std
pop
xchg
das
push
jle
cli
jmp
loop
jo
xor
(bad)
mov
pop
xor
(bad)
(bad)
(bad)
in
jae
out
popa
sbb
loop
repz
rol
inc
mov
cli
push
adc
(bad)
fdivr
and
jbe
push
aam
mov
pop
jl
adc
push
call
mov
mov
mov
(bad)
sub
dec
test
sub
inc
jl
scas
xchg
pop
stc
dec
cmp
mov
jnp
dec
leave
jp
lods
push
push
mov
push
xor
or
adc
in
jmp
jo
test
out
pop
movs
jl
cld
(bad)
jg
sar
cmp
fdivr
sbb
scas
pop
das
inc
mov
inc
jg
pop
xchg
cld
scas
clc
aaa
mov
fbld
mov
int3
call
jge
rcl
fdiv
pop
sbb
jp
or
pop
mov
cmp
mov
fdivr
fmul
lods
dec
inc
pop
xor
outs
cdq
xor
sub
(bad)
fdiv
add
mov
jmp
fidiv
push
mov
mov
mov
mov
xchg
mov
movs
repz
sub
inc
cmp
mov
adc
ret
dec
pop
(bad)
js
std
and
inc
jg
mov
xchg
(bad)
fild
adc
sbb
lods
mov
loop
xor
(bad)
(bad)
fcmovnu
into
xor
iret
jg
pop
out
fs
mov
mov
outs
sbb
xchg
add
not
(bad)
call
stos
test
popa
jle
cmp
xor
iret
pop
vmread
fcomp
push
mov
daa
retf
jle
fwait
(bad)
jmp
adc
das
sbb
out
and
or
adc
enter
jbe
clc
pop
xor
adc
pop
add
xchg
ror
dec
sbb
lock
dec
les
cmp
or
(bad)
iret
and
imul
cli
dec
imul
into
jo
(bad)
sbb
test
or
mov
mov
or
push
(bad)
(bad)
jg
rol
jne
jle
mov
loope
repnz
call
mov
inc
jge
call
call
fild
out
add
out
faddp
repnz
pop
out
mov
(bad)
in
(bad)
call
mov
or
sti
aam
cmc
aaa
jmp
jmp
lds
xchg
cmp
mov
or
hlt
jmp
jmp
cmp
mov
and
(bad)
(bad)
fmul
lods
out
scas
sahf
mov
sbb
frstor
clc
fcomip
fist
jg
pop
out
mov
push
jnp
jecxz
in
ss
dec
or
sbb
arpl
idiv
sar
jmp
retf
add
mov
out
popf
sub
repz
shl
das
or
push
push
add
enter
mov
jnp
push
cli
call
fcmovnu
loope
mov
fdiv
test
jns
cld
aaa
fadd
das
int3
mov
repnz
lods
push
test
pop
pusha
mov
out
mov
jg
or
add
jg
iret
push
fmulp
gs
fst
icebp
mov
jne
cmps
adc
(bad)
jmp
ret
fcomp
movs
out
inc
jg
out
in
jecxz
clc
cmp
push
fnsave
inc
and
aas
lods
fld
test
(bad)
fild
je
addr16
xor
xchg
xor
(bad)
fist
xor
popa
ficomp
test
les
aaa
int3
clc
shl
xchg
cmp
pop
push
jle
xchg
sub
ins
xor
div
icebp
in
call
scas
(bad)
jno
xor
mov
cmp
dec
dec
enter
(bad)
jp
out
add
retf
lahf
test
fisttp
cmp
mov
(bad)
jmp
adc
out
fcomp
cld
stc
aaa
fistp
adc
push
jmp
lock
out
mov
mov
mov
sti
jb
add
jle
jle
mov
sub
leave
(bad)
lods
je
cli
xchg
iret
pop
rcr
add
sti
mov
std
(bad)
jmp
jg
stc
jle
dec
mov
in
push
int3
push
imul
fcomip
(bad)
call
ins
inc
(bad)
outs
rcr
add
hlt
neg
pop
push
add
fdecstp
jp
cli
(bad)
out
(bad)
out
ja
pop
xchg
shl
dec
ds
add
pop
pop
out
jnp
dec
jg
mov
pop
sub
add
mov
mov
jns
inc
mov
loop
daa
jmp
or
(bad)
jg
stc
inc
add
out
inc
jmp
es
imul
jb
jns
(bad)
(bad)
(bad)
ds
push
outs
out
pop
and
cli
adc
nop
cmps
ret
sbb
in
jmp
inc
sti
cmps
dec
out
icebp
mov
enter
lahf
mov
jmp
in
ja
cs
adc
mov
std
jmp
xchg
or
jae
es
xor
pushf
popa
loopne
mov
loope
mov
adc
mov
lds
(bad)
neg
icebp
mov
dec
jl
icebp
dec
adc
cmp
sti
pop
icebp
gs
add
sbb
mov
jmp
cli
into
mov
clc
mov
mov
jl
les
dec
push
loop
and
(bad)
inc
daa
push
in
(bad)
cmc
dec
addr16
std
mov
pop
jle
(bad)
fdiv
popf
loop
adc
aas
mov
or
jnp
add
rcl
mov
not
ret
stc
and
cmp
jge
xchg
aam
push
ins
lahf
sbb
push
call
(bad)
xlat
push
mov
pop
cmp
sar
je
(bad)
(bad)
dec
cli
mov
push
mov
mov
mov
mov
jmp
loope
xor
inc
pop
je
iret
test
arpl
mov
xchg
pop
int3
sbb
retf
inc
and
(bad)
(bad)
jg
dec
call
pop
call
cld
inc
sar
add
es
ss
dec
mov
sbb
mov
mov
xor
retf
sbb
loope
fwait
stos
push
cmp
mov
shl
je
xor
push
dec
push
lods
aaa
les
clc
sbb
mov
dec
fisttp
and
loop
mov
fistp
popf
call
pop
loop
retf
neg
mov
gs
mov
xor
lock
add
out
es
pop
sbb
fistp
adc
shr
sbb
cmp
jns
jmp
cmp
or
ss
mov
inc
and
pop
into
mov
loope
adc
es
sahf
xlat
ret
cld
das
or
dec
addr16
iret
mov
(bad)
call
jbe
mov
cmp
mov
cld
jnp
lahf
js
or
add
fsubr
fwait
xlat
test
mov
lock
cmp
or
push
fwait
pop
cdq
jp
repnz
mov
out
push
sahf
(bad)
mov
cmps
sbb
ror
mov
(bad)
(bad)
jmp
retf
cld
scas
cmp
les
jl
outs
inc
push
out
pop
mov
mov
or
mov
div
sub
(bad)
(bad)
mov
rcr
pop
mov
sub
xlat
jg
mov
icebp
aas
or
sub
mov
cld
(bad)
(bad)
inc
clc
repz
push
add
fmul
jmp
jmp
out
sbb
dec
arpl
clc
pop
(bad)
(bad)
push
cmps
iret
pop
iret
pop
test
sub
loop
das
mov
and
mov
push
dec
cmps
or
dec
clc
enter
iret
cmp
popf
mov
push
sahf
arpl
mov
pop
lahf
idiv
fist
(bad)
(bad)
(bad)
call
cmp
test
jmp
data16
and
xor
in
sar
(bad)
inc
push
stc
mov
add
mov
stos
add
jecxz
stc
sub
add
and
jns
pusha
xchg
(bad)
mov
lds
loopne
das
mov
jmp
or
sbb
cmp
jo
test
cli
dec
cli
dec
daa
imul
int
out
stos
ficom
pop
fild
(bad)
in
jle
(bad)
and
jnp
sahf
aaa
xor
mov
(bad)
std
jns
je
pop
and
in
mov
popf
jmp
(bad)
std
mov
sbb
(bad)
fsubr
ins
dec
in
mov
jl
adc
inc
jp
std
(bad)
jg
loopne
(bad)
fmulp
sahf
mov
pop
xor
mov
cmp
inc
jmp
jle
iret
cwde
loope
mov
pop
scas
fwait
iret
loop
push
or
cwde
(bad)
das
jmp
dec
jno
jmp
sbb
stos
adc
sbb
or
outs
push
cwde
cli
call
push
fdivr
in
les
sub
xlat
xchg
jnp
jg
push
dec
clc
and
pop
les
jge
mov
out
call
mov
mov
(bad)
(bad)
(bad)
dec
sti
pop
adc
xchg
mov
xchg
je
das
call
cmp
and
inc
dec
jmp
push
mov
rcl
inc
(bad)
mov
inc
mov
adc
fcmovu
(bad)
(bad)
(bad)
(bad)
push
fnstcw
inc
pop
mov
(bad)
iret
add
dec
bsr
retf
fadd
jl
(bad)
fsubr
loopne
pop
mov
(bad)
fcomip
dec
jae
adc
sub
repnz
push
pop
out
jbe
mov
icebp
(bad)
cmp
jle
repz
retf
(bad)
hlt
(bad)
sbb
xor
dec
outs
dec
fiadd
sar
cmps
fmul
cmp
leave
mov
arpl
lea
hlt
jl
(bad)
(bad)
jmp
call
(bad)
mov
mov
hlt
addr16
sahf
adc
push
sbb
dec
fnstcw
loopne
xor
mov
jle
repz
(bad)
jb
pop
in
sbb
out
lods
sar
(bad)
(bad)
(bad)
push
jae
sahf
and
cmp
cli
nop
pop
sbb
fsub
mov
icebp
clc
push
dec
sbb
jmp
cwde
push
ins
retf
fisttp
mov
jnp
fimul
or
xor
popf
cmp
mov
sbb
sub
pop
test
pop
(bad)
popa
sbb
fimul
mov
test
sti
mov
jbe
pop
das
cli
inc
sahf
jnp
jg
(bad)
dec
jo
call
repz
mov
in
jns
fwait
inc
or
in
(bad)
(bad)
jmp
repz
das
loopne
or
xor
push
cmp
(bad)
jmp
mov
fcom
push
ret
les
pop
pop
int3
sti
fstcw
and
push
adc
mov
in
in
inc
outs
cli
dec
push
ds
jnp
jbe
cdq
ins
in
cmc
test
imul
leave
and
fistp
(bad)
jg
stos
clc
int3
loopne
mov
ja
jno
std
inc
loop
push
jl
sar
(bad)
(bad)
(bad)
jmp
push
xor
sbb
push
jns
cmp
mov
pop
outs
in
cmps
aas
cld
leave
fcomip
(bad)
dec
lahf
jmp
mov
ret
test
popa
out
sahf
dec
cmp
call
push
sti
sbb
sub
jg
jo
outs
mov
or
ds
push
jmp
add
push
cmc
imul
jo
push
sti
fist
jp
(bad)
imul
cmp
fcom
retf
cld
(bad)
(bad)
call
in
movs
pop
mov
cmps
mov
inc
pop
ret
mov
add
arpl
fnsave
cld
call
and
fadd
loop
lea
loopne
call
pusha
mov
mov
std
test
pop
jg
aas
int3
(bad)
int3
leave
mov
cwde
loope
scas
scas
out
cli
mov
xor
jns
fistp
sub
lock
popa
pushf
repz
mov
maskmovq
neg
out
(bad)
mov
add
mov
jmp
xchg
out
int
xchg
or
sub
loopne
(bad)
(bad)
(bad)
mov
int
pop
jbe
jmp
arpl
(bad)
push
ret
dec
not
sub
dec
xchg
mov
(bad)
xor
movs
test
sbb
(bad)
dec
add
cli
imul
popf
iret
mov
aaa
dec
jl
loope
cli
dec
mov
cdq
sbb
in
mov
xchg
(bad)
(bad)
(bad)
dec
int
jae
loope
loop
repz
enter
ds
es
cmp
call
test
cmp
popa
pop
out
es
sbb
adc
loope
jecxz
dec
loope
inc
fidiv
cld
add
sar
pop
lahf
fisubr
call
mov
pop
sbb
ja
or
jge
icebp
in
and
xor
inc
xchg
call
scas
ret
loope
mov
in
fstp
call
out
mov
(bad)
mov
sbb
jmp
dec
mov
inc
cmp
xchg
adc
push
inc
gs
in
mov
jg
(bad)
dec
mov
adc
out
jg
pop
cmp
cmp
in
xchg
jmp
call
mov
shr
in
arpl
adc
mov
mov
mov
shr
stos
outs
fbld
add
(bad)
stc
mov
dec
jo
xchg
test
mov
outs
push
call
adc
out
or
jp
fmul
(bad)
out
hlt
ss
mov
push
jg
pop
int3
(bad)
stos
mov
ret
push
cmp
pop
ja
stc
into
mov
(bad)
(bad)
call
daa
pop
out
cmp
mov
(bad)
sbb
shl
mov
je
out
mov
mov
test
sbb
les
mov
scas
pusha
lock
int
jmp
ja
jge
jo
adc
mov
mov
(bad)
(bad)
stc
ins
lods
ja
iret
and
xor
popf
or
xor
icebp
xchg
out
popa
mov
outs
hlt
xor
jnp
sahf
mov
mov
repz
sub
mov
stos
pusha
fdiv
or
lahf
pusha
(bad)
mov
(bad)
movs
(bad)
cmp
or
mul
pop
cmc
(bad)
jns
pop
aam
fcomi
mov
into
int3
add
fidiv
inc
iretw
loopne
jne
shl
mov
jmp
and
dec
pop
loop
dec
(bad)
xor
jle
jb
movs
cmp
clc
inc
retf
add
fwait
mov
cmp
jmp
inc
ds
(bad)
and
les
arpl
push
mov
pop
inc
pop
(bad)
dec
pop
add
int
inc
xor
retf
jae
(bad)
fisttp
int3
jle
inc
repnz
std
cmp
or
call
das
dec
repz
mov
icebp
jle
xor
mov
enter
fwait
jp
inc
fcomp
mov
loope
in
mov
inc
cmp
add
sub
adc
add
(bad)
jmp
xchg
daa
fisub
retf
loop
(bad)
dec
js
loopne
fisubr
push
in
push
pop
clc
(bad)
jg
dec
iret
das
mov
leave
ffreep
cmp
adc
push
jmp
push
jg
fs
mov
sub
sub
retf
add
xchg
sti
(bad)
mov
fwait
xchg
jb
movs
fcom
sub
das
in
sub
std
pop
retf
mov
add
hlt
mov
sbb
(bad)
mov
jns
dec
mov
int3
into
ins
fisubr
jmp
fstp
sti
mov
ret
(bad)
jmp
(bad)
push
jmp
jecxz
not
cli
scas
fdiv
pop
loopne
jg
call
hlt
mov
retf
pop
jmp
add
pop
adc
rol
push
jmp
test
hlt
mov
outs
mov
mov
test
adc
sub
pop
lock
(bad)
mov
pop
shl
jb
xor
imul
iret
lods
pop
loopne
dec
jp
repz
js
(bad)
adc
call
ins
jno
or
(bad)
(bad)
jmp
iret
xor
xor
cli
out
sbb
sbb
popf
hlt
shr
pop
pop
ins
pop
(bad)
(bad)
(bad)
jg
ds
fsub
iret
xadd
jne
mov
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
call
jno
loope
in
mov
jb
int
mov
lock
es
rcl
mov
jg
push
shl
push
out
not
or
inc
cld
pop
les
psrad
loop
add
dec
mov
jmp
xchg
pop
inc
lahf
les
mov
jo
test
mov
jnp
addr16
jl
push
call
fwait
(bad)
jmp
(bad)
cmp
jae
cmp
cld
push
pop
fiadd
imul
adc
(bad)
jmp
jmp
sbb
sub
enter
jge
sti
stc
adc
dec
loopne
inc
jmp
inc
out
in
sar
add
das
shl
mov
test
fisttp
(bad)
(bad)
(bad)
call
fwait
ds
clc
js
or
jmp
sub
imul
mov
and
pop
jge
sub
pop
cld
adc
fwait
cs
mov
fimul
mov
cmps
popa
cmp
fcomp
mov
and
(bad)
(bad)
out
xor
pop
test
mov
in
call
fadd
jmp
(bad)
cld
fcmovne
pop
xchg
aam
imul
ss
dec
lock
jo
adc
rcr
jns
stos
and
lahf
imul
(bad)
mov
(bad)
cmc
dec
cli
in
cmc
xor
adc
mov
xchg
clc
ins
push
xchg
mov
push
std
js
sbb
inc
out
xor
clc
adc
and
push
mov
outs
xchg
cld
jle
imul
cs
aas
scas
jnp
les
xor
outs
lds
jg
or
call
(bad)
ret
mov
int
ficomp
jg
(bad)
push
lock
stos
movs
mov
jmp
pop
cwde
jno
add
sbb
ret
push
aaa
jmp
pop
mov
jg
stc
ror
(bad)
(bad)
push
pop
addr16
fsubr
ret
into
mov
xchg
(bad)
cmp
out
fnstcw
repnz
ds
outs
mov
and
jg
inc
icebp
add
stos
nop
dec
jne
jo
xchg
scas
mov
(bad)
(bad)
(bad)
jmp
nop
(bad)
add
add
jmp
jmp
aaa
xchg
scas
inc
push
xor
sti
call
fdivr
sti
xchg
cmps
pop
imul
hlt
mov
xchg
(bad)
jmp
push
jmp
data16
pusha
mov
jo
(bad)
neg
aam
cli
pop
mov
cwde
daa
(bad)
fcmovne
movs
jbe
adc
(bad)
jmp
mov
psubq
in
inc
mov
int
push
outs
jmp
adc
out
(bad)
(bad)
jmp
std
mov
jle
cli
ins
icebp
cmp
sti
dec
and
sbb
xor
scas
call
scas
movs
test
cmp
fldcw
pmaxub
xchg
mov
sbb
scas
out
mov
ds
ret
jne
push
loop
ret
(bad)
call
repnz
jnp
pop
retf
lahf
inc
mov
sahf
push
in
mov
push
jmp
lahf
aad
sub
jg
(bad)
jmp
xlat
fld
ret
jp
repz
repz
xor
sti
aaa
push
sar
hlt
inc
fsubr
or
mov
call
(bad)
inc
ror
pop
sub
xchg
sub
nop
(bad)
out
sub
rcl
scas
icebp
(bad)
neg
inc
inc
ja
and
xor
(bad)
mov
and
push
push
xchg
frstor
loopne
sbb
cwde
aaa
push
sar
into
popa
sar
stos
stos
cmp
(bad)
pop
test
jecxz
adc
mov
fwait
nop
xchg
test
push
(bad)
push
dec
push
push
popa
fild
jns
test
mov
outs
xchg
popa
inc
(bad)
(bad)
(bad)
call
inc
xchg
std
jnp
mov
jnp
fdiv
push
sub
ds
into
mov
(bad)
jmp
(bad)
dec
jae
xor
sbb
sub
call
inc
out
(bad)
(bad)
call
inc
fild
hlt
pushf
inc
jg
ror
or
test
out
adc
push
call
(bad)
mov
(bad)
mov
sbb
jle
pop
mov
add
lahf
mov
mov
cld
aam
test
dec
xchg
es
out
adc
xlat
les
mov
call
xor
adc
(bad)
scas
jl
cld
pushf
sbb
mov
cmp
add
push
out
or
lods
cmp
fcmovnb
ds
stc
jecxz
lods
xchg
(bad)
(bad)
(bad)
inc
pop
mov
mov
mov
fidivr
xor
in
paddw
lea
(bad)
jmp
inc
jg
pop
addr16
test
jle
mov
cmps
(bad)
mov
clc
outs
(bad)
pop
sbb
add
fs
(bad)
xchg
dec
jle
loopne
and
cmp
repz
out
fisttp
adc
test
lahf
jl
mov
cs
mov
or
(bad)
call
fcomip
push
stc
out
xor
mov
mov
mov
das
sub
mov
rol
sti
xchg
pop
daa
and
add
cli
dec
sub
les
pop
jge
pop
mov
(bad)
jmp
add
lods
clc
movs
xchg
fimul
unpckhps
ins
mov
and
(bad)
fisttp
addr16
jle
retf
sbb
mov
cld
(bad)
fcomip
scas
cmp
(bad)
std
(bad)
leave
(bad)
xor
stos
cmp
cli
mov
cs
aas
movs
push
push
cld
or
xor
clc
(bad)
call
cmp
in
in
gs
push
or
jnp
jl
adc
jg
sub
fwait
and
arpl
sbb
and
adc
fisttp
or
icebp
mov
stos
adc
jmp
push
sub
loopne
inc
std
push
out
lea
inc
cmp
fcomip
(bad)
jne
out
jecxz
dec
pop
pop
pop
call
sbb
lods
pop
shl
ret
imul
adc
out
outs
out
xchg
and
(bad)
out
mov
or
in
pop
adc
adc
les
jl
retf
xchg
ins
sbb
stc
(bad)
jmp
mov
jno
pop
movs
movs
jbe
psllq
cmp
jle
dec
adc
xor
in
jmp
dec
ss
icebp
in
out
xchg
inc
(bad)
pop
clc
out
sub
dec
push
sbb
cmp
pop
pop
icebp
movs
sub
icebp
std
inc
jl
call
and
jno
pop
push
mov
sub
enter
mov
(bad)
aad
ds
sbb
dec
sub
xchg
outs
dec
loopne
mov
call
call
mov
into
dec
cmp
cld
mul
fild
std
(bad)
(bad)
(bad)
mov
mov
sahf
pop
out
ror
cmp
dec
jb
mov
retf
add
aas
(bad)
(bad)
(bad)
mov
pop
rol
cs
jno
nop
inc
(bad)
in
push
sbb
cs
(bad)
fild
repz
xchg
(bad)
retf
std
jmp
fdiv
xchg
and
inc
mov
fisub
shl
cmp
(bad)
call
inc
jge
cmp
(bad)
xchg
dec
jno
pop
sub
js
jg
sub
jmp
adc
jecxz
jecxz
cld
stc
test
test
mov
in
movs
mov
addr16
push
out
(bad)
xchg
(bad)
cli
popa
or
push
(bad)
mov
imul
aas
xor
jge
into
leave
in
idiv
mov
xchg
push
pop
jno
(bad)
aas
mov
repnz
and
pop
hlt
test
enter
aas
adc
mov
and
and
sub
(bad)
pop
hlt
add
push
hlt
inc
pushf
push
call
pop
mov
daa
ja
push
jp
sbb
xor
aas
or
adc
jg
adc
fsubr
push
sahf
shl
mov
lock
sti
xchg
sub
inc
rol
jne
out
xor
rol
and
dec
test
frstor
hlt
fadd
shl
dec
push
aad
stos
jp
(bad)
inc
aaa
pop
call
stos
sahf
push
push
pavgb
sbb
(bad)
aad
pusha
(bad)
out
in
fistp
push
fist
add
jp
mul
arpl
idiv
(bad)
mov
jg
aad
adc
pop
rep
repz
dec
sar
pushf
(bad)
fbstp
lahf
fs
(bad)
cmp
adc
(bad)
cmps
mov
sahf
mov
mov
cmp
jmp
into
rcr
ins
jne
(bad)
push
lods
stos
repz
outs
int
lods
add
inc
mov
pop
sahf
mov
fist
xor
jp
cmp
push
retf
mov
dec
pop
mov
pop
mov
loopne
jg
mov
ret
cmp
jge
inc
xchg
mov
call
cld
(bad)
mov
mov
sub
mov
mov
sar
xlat
(bad)
cmp
inc
hlt
jg
mov
mov
xchg
jle
add
cwde
pop
int
dec
inc
clc
stos
or
rcl
into
clc
adc
test
dec
pusha
(bad)
mov
ss
and
mov
(bad)
inc
pop
mov
xchg
into
adc
arpl
fwait
inc
push
pusha
call
dec
pop
test
int
cmp
clc
mov
sub
jle
sub
and
in
std
or
repz
and
(bad)
jmp
ja
jg
inc
(bad)
mov
push
pop
std
lds
ret
ds
sbb
fild
ds
(bad)
fisttp
(bad)
fiadd
addr16
cmp
es
inc
mov
rol
jle
mov
inc
fild
push
push
retf
jno
int
out
mov
jge
dec
mov
dec
inc
dec
xchg
call
jnp
xchg
adc
xor
cmp
xlat
lds
jnp
es
mov
clc
(bad)
jmp
jno
(bad)
stc
ret
loop
sub
or
data16
xor
lock
(bad)
jmp
mov
and
inc
stc
jl
ret
fimul
mov
pop
das
push
ds
cmc
nop
neg
mov
(bad)
(bad)
mov
ds
mov
das
test
mov
cld
cmp
dec
cld
mov
mov
into
and
cmp
fbld
dec
jo
fsubr
shl
cmp
dec
mov
lock
pushf
into
in
xchg
inc
push
iret
addr16
in
pop
add
pop
cmp
dec
in
push
aam
jecxz
mov
xchg
test
(bad)
std
xchg
scas
neg
pop
fcmovnb
(bad)
jmp
add
xor
sahf
(bad)
mov
lahf
xchg
xlat
mov
xor
jg
lock
sub
jle
sbb
add
sbb
scas
xchg
outs
cmps
loope
jmp
fwait
sbb
sbb
pop
es
test
(bad)
dec
sbb
mov
xor
dec
inc
(bad)
(bad)
(bad)
jg
jmp
scas
retf
mov
mov
les
cmc
shr
bound
test
fwait
(bad)
in
push
(bad)
pop
inc
out
call
cld
jle
jns
not
icebp
sbb
leave
(bad)
(bad)
(bad)
jmp
push
stc
inc
mov
jno
(bad)
icebp
cmp
ja
icebp
test
mov
jb
mul
(bad)
(bad)
inc
cwde
icebp
push
popf
das
sti
sti
outs
adc
(bad)
xchg
test
in
adc
stc
and
aaa
(bad)
fbstp
sbb
cmp
movs
out
aad
cld
data16
jg
cld
jecxz
ja
scas
clc
(bad)
push
jmp
inc
xchg
div
jge
pop
xchg
(bad)
test
daa
clc
mov
(bad)
fcomip
int3
mov
std
mov
out
or
cmp
jmp
pop
mov
(bad)
in
fcmovnbe
sahf
add
sub
mov
ins
ltr
es
jnp
stos
(bad)
pop
mov
mul
hlt
rcr
out
mov
jmp
test
out
sub
(bad)
call
mov
iret
lahf
loopne
add
ret
cli
adc
bound
outs
call
aad
and
stc
mov
mul
jns
xchg
fist
jmp
std
nop
xchg
out
dec
std
nop
push
or
scas
ret
mov
and
sub
fild
pop
retf
imul
repnz
push
dec
xchg
fstp
or
xor
jne
pop
mov
sti
sbb
inc
fcomp
xchg
jecxz
dec
xchg
(bad)
jmp
mov
fbstp
xchg
iret
inc
mul
or
addr16
mov
aas
fist
call
lock
xlat
xor
mov
scas
scas
sbb
test
(bad)
(bad)
dec
mov
or
out
in
mov
mov
push
ins
mov
sbb
into
pop
mov
cld
xchg
test
jo
shl
dec
jg
mov
imul
push
adc
cmp
or
retf
call
cli
js
loop
into
pop
in
cld
adc
test
popa
jmp
into
push
call
adc
loop
mov
sub
daa
icebp
loop
jmp
addr16
scas
and
dec
mov
in
jnp
xchg
inc
cld
movs
fmul
imul
and
push
repnz
jb
push
cs
cdq
jmp
push
in
sbb
(bad)
cmp
adc
mov
(bad)
in
(bad)
dec
cmp
cmp
clc
(bad)
cmp
xor
mov
(bad)
jg
lea
jbe
inc
jg
popf
lods
jg
mov
pushf
push
dec
and
mov
inc
inc
jnp
add
xor
add
(bad)
(bad)
(bad)
(bad)
jle
jl
pop
xor
cmp
out
les
call
adc
mov
fcomip
scas
clc
xchg
rol
pop
out
mov
mov
add
(bad)
jmp
mov
sbb
pop
aam
sahf
int
and
dec
xor
pop
jge
out
inc
jecxz
(bad)
push
out
into
xor
(bad)
stc
sbb
sbb
(bad)
out
mov
pop
push
(bad)
mov
out
pop
and
xchg
push
mov
call
loopne
popa
(bad)
push
and
mov
mov
adc
scas
arpl
pop
(bad)
(bad)
dec
sbb
loop
mov
es
pop
dec
repnz
xchg
in
mov
iret
(bad)
mov
pop
pop
jecxz
mov
std
or
jnp
outs
mov
cli
inc
(bad)
push
out
xchg
mov
or
cld
test
sti
mov
mov
retf
xchg
xor
ja
mov
jmp
ja
jmp
mov
mov
into
loopne
cmc
jbe
inc
aas
ss
cmp
out
mov
mov
call
add
jl
fwait
imul
pop
push
inc
stos
cwde
xchg
mov
aad
jmp
fs
mov
stos
mov
into
pop
adc
stos
jb
xchg
or
add
cs
jbe
cmp
xchg
add
fdivp
push
cli
cmp
enter
lds
ds
xchg
sub
fs
jmp
(bad)
or
mov
jecxz
mov
adc
ret
loop
jmp
shr
push
enter
scas
(bad)
or
jmp
cld
jg
inc
add
retf
mov
out
cmc
mov
push
adc
retf
call
iret
fwait
xchg
cwde
aaa
pop
jg
cmp
mov
push
mov
(bad)
(bad)
(bad)
(bad)
jmp
push
test
loopne
sahf
aam
stc
aas
retf
xchg
jns
ror
dec
cmp
sub
xor
cmp
jl
inc
or
out
jmp
pop
sub
lock
xor
ror
inc
jp
mov
pop
and
inc
cwde
dec
cli
addr16
pop
iret
jno
sbb
cmp
(bad)
call
jmp
je
mov
xor
in
ficom
(bad)
inc
sti
sub
add
fidivr
jo
sbb
scas
or
(bad)
(bad)
movs
fdiv
mov
test
push
lock
cs
in
(bad)
(bad)
fbstp
push
scas
xor
sbb
ret
in
mov
lods
fwait
outs
cli
push
pop
scas
mov
retf
jne
xchg
mov
xchg
imul
xlat
xchg
mov
push
ror
imul
in
call
dec
jb
call
ret
pop
xchg
in
neg
cld
call
xchg
mov
and
sbb
add
cwde
bnd
scas
cdq
adc
cld
dec
retf
ins
jp
pop
test
mov
inc
jb
outs
(bad)
mov
je
cmp
adc
icebp
int
jno
leave
jno
retf
inc
inc
sti
jo
cmp
sti
lods
pop
(bad)
(bad)
(bad)
fistp
iret
mov
inc
mov
cmp
es
icebp
sbb
dec
(bad)
(bad)
(bad)
jmp
imul
das
inc
mov
cmps
and
inc
iret
jmp
jns
stc
jmp
outs
lods
mov
scas
das
lahf
xlat
nop
pop
outs
xchg
pop
test
jecxz
mov
xchg
jnp
cmp
push
adc
sbb
sub
dec
sar
jl
xlat
cmps
out
out
push
cmc
(bad)
mov
inc
adc
aaa
movs
jns
bound
push
cs
(bad)
xchg
in
mov
xor
mov
outs
sub
ja
or
scas
and
clc
(bad)
dec
xchg
out
xchg
pop
mov
jae
cmp
scas
and
es
fistp
in
pop
add
mov
(bad)
not
mov
outs
xor
(bad)
inc
dec
jecxz
xchg
jmp
sub
pop
pop
scas
mov
push
in
ror
push
movs
popf
movs
pushf
stos
inc
push
loop
lods
cmp
neg
fild
fcmovu
outs
pop
ds
adc
aas
in
dec
push
arpl
fisubr
mov
das
clc
xchg
pop
call
mov
and
sub
in
lods
sub
fdivr
cmp
dec
cmp
dec
cmp
sub
movs
movs
dec
lock
xchg
scas
clc
adc
(bad)
(bad)
out
leave
jns
jge
or
repnz
out
repnz
push
mov
dec
imul
lods
dec
push
iret
inc
jecxz
(bad)
inc
(bad)
std
popf
and
out
jmp
and
mov
outs
stc
and
add
pop
sub
scas
out
mov
out
(bad)
out
cli
mov
cmp
leave
lods
mov
lods
data16
mov
cmp
jne
sbb
push
std
sbb
inc
std
push
or
mov
push
xor
cs
dec
sahf
jecxz
jg
and
sbb
dec
movs
in
mov
jg
repz
in
aas
loopne
sbb
jmp
cld
dec
out
data16
in
fisubr
fcom
inc
sub
xor
idiv
mov
in
sar
push
into
fwait
jmp
add
cld
push
leave
xor
pop
push
fld
add
jo
inc
dec
(bad)
(bad)
jmp
outs
das
or
pop
js
repz
pushf
push
repz
jl
repnz
jmp
pop
sub
aaa
dec
outs
mov
xchg
in
fist
movs
shr
mov
rcl
call
or
add
add
out
cmp
hlt
xchg
loop
inc
aaa
adc
mov
adc
mov
outs
(bad)
push
add
shl
test
hlt
adc
hlt
xor
hlt
jae
fwait
fwait
(bad)
call
push
add
imul
adc
mov
iret
mov
(bad)
cmp
cmp
imul
rcl
mov
pop
or
ficom
xchg
popf
iret
dec
out
inc
sbb
sub
mov
cmps
loop
fcom
(bad)
xor
(bad)
jmp
lods
js
xchg
dec
push
cmp
stc
jns
jo
pop
mov
cmp
inc
addr16
mov
fcom
outs
in
outs
(bad)
push
dec
mov
in
rol
mov
es
inc
out
xor
inc
pop
aas
clc
mov
out
push
cmp
mov
push
push
fstp
cli
setno
jmp
push
into
shl
push
loope
jmp
scas
not
scas
mov
push
xor
mov
hlt
dec
gs
bound
retf
(bad)
(bad)
(bad)
(bad)
cmp
fidivr
in
mov
pop
and
jno
(bad)
xchg
shl
mov
jmp
ins
(bad)
out
mov
mov
push
adc
stos
and
lods
(bad)
in
push
in
sbb
xchg
shl
pop
sbb
add
xor
das
(bad)
pop
test
xchg
shl
jmp
call
(bad)
jns
mov
lock
cmps
mov
fist
sbb
pop
stos
test
in
(bad)
dec
mov
push
dec
(bad)
sub
movs
in
inc
xor
ficom
mov
xchg
std
test
and
mov
(bad)
xchg
jge
cmps
in
cmp
retf
mov
neg
(bad)
adc
(bad)
sub
cmp
loope
jge
mov
jno
mov
mov
cs
fstp
div
jnp
mov
mov
sti
adc
ins
pop
cmp
lods
call
fiadd
(bad)
adc
sti
dec
push
fldcw
repz
jmp
es
sbb
cmp
(bad)
call
cmps
mov
sub
retf
fst
out
add
sbb
sbb
pop
lock
call
daa
cmc
retf
test
sub
popa
push
pop
maskmovq
not
xchg
cwde
push
(bad)
ret
(bad)
(bad)
(bad)
(bad)
jge
cmp
mov
push
jle
cs
in
cld
inc
pop
retf
dec
stc
lea
pop
cld
xchg
xchg
jmp
fcmovnbe
xchg
mov
in
(bad)
xchg
mov
movs
jmp
pusha
js
pop
push
xchg
je
cs
jmp
out
dec
(bad)
xchg
jne
adc
push
(bad)
dec
dec
icebp
outs
jge
push
mov
(bad)
adc
mov
aam
in
hlt
arpl
jmp
in
call
jbe
mov
cmp
add
loop
and
pop
cmp
(bad)
(bad)
inc
mov
into
loop
mov
pusha
jb
sbb
mul
mov
or
push
xchg
in
pop
outs
or
call
repz
sub
cmp
cwde
jecxz
outs
xchg
test
add
in
ins
pop
cli
inc
jae
adc
(bad)
arpl
(bad)
(bad)
jmp
clc
jns
lock
mov
(bad)
mov
fst
loopne
and
call
jmp
scas
sar
mov
rol
jecxz
movs
cmps
push
xchg
adc
mov
cmc
enter
cld
jge
jmp
pop
mov
jp
into
push
jmp
jecxz
adc
lahf
jmp
(bad)
cmp
scas
(bad)
shl
scas
xchg
icebp
pop
cld
out
dec
iret
cmp
xor
cmp
dec
(bad)
fdiv
repz
inc
stc
xchg
mov
mov
arpl
ja
(bad)
dec
nop
mov
cmc
push
ds
jnp
ldmxcsr
sub
loopne
xchg
bound
adc
adc
(bad)
jmp
jp
inc
mov
aam
mov
jbe
jns
idiv
(bad)
mov
ds
lods
mov
jp
jle
hlt
mov
xchg
mov
retf
jp
and
