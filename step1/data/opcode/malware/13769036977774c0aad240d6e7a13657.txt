push
outs
(bad)
call
in
sub
mov
mov
or
enter
inc
cmp
inc
cld
mov
mov
pop
ret
int3
add
idiv
pop
fcomp
push
push
mov
pushf
in
outs
sti
call
push
push
push
mov
xor
push
lea
lock
in
repz
mov
loopne
inc
sub
adc
jae
fdivrp
or
out
movzx
test
je
cmp
sub
in
in
dec
in
test
or
stc
mov
test
xchg
fmul
or
repnz
or
push
jmp
ret
mov
pop
pusha
ins
sti
add
or
dec
jmp
xor
pop
pop
pop
pop
ror
fbstp
inc
xchg
or
sub
mov
adc
shl
enter
cs
lea
ja
(bad)
std
ret
(bad)
sbb
jne
push
mov
or
outs
pop
movs
sbb
mov
push
sub
or
loop
int3
push
dec
ins
adc
mov
pop
add
hlt
fcom
or
leave
add
aam
jnp
inc
or
adc
xor
add
ror
ret
add
dec
cmps
lahf
mov
push
(bad)
in
mov
in
mov
ret
mov
fld
and
arpl
cmp
add
push
pushf
sbb
sbb
sbb
mov
inc
test
push
(bad)
adc
sar
cs
sbb
(bad)
out
mov
fwait
adc
test
xchg
jnp
push
cmps
repnz
pop
call
pmulhuw
test
or
stc
in
mov
ret
xchg
enter
or
add
jmp
cmp
int
mov
jl
pop
jb
and
and
in
inc
call
xor
nop
jmp
xor
mov
ret
add
cmp
sbb
pop
jmp
sti
enter
add
out
ror
or
rcl
xchg
(bad)
rol
pop
jg
movs
jecxz
es
push
jno
sub
mov
add
push
lods
les
mov
xchg
cmp
and
push
movs
jp
mov
add
jmp
xchg
fdiv
adc
jae
fwait
retf
shl
jmp
leave
xchg
ret
jl
and
enter
push
jnp
loopne
(bad)
jmp
dec
movs
ret
lea
int3
xlat
mov
jl
sbb
xor
pop
or
in
inc
cmps
adc
paddq
aam
fwait
mov
test
aam
cmp
mov
or
adc
inc
mov
test
pop
add
outs
cmp
push
jg
bnd
mov
push
sar
mov
jne
in
add
arpl
lods
jg
es
lock
(bad)
shr
pop
cmp
or
cmp
and
mov
xlat
jnp
mov
adc
jg
mov
jl
in
sub
lahf
xor
and
mov
mov
pop
ins
sub
xchg
mov
pushf
cmps
inc
cmp
or
in
push
pop
outs
pop
stos
add
ss
adc
push
inc
or
inc
push
cmp
in
sbb
sub
sub
inc
xor
mov
jo
and
dec
call
inc
pop
push
std
call
loopne
fdivr
rcr
push
cmp
push
xor
es
push
lock
cmps
sub
mov
push
fsub
jge
dec
pop
ins
loopne
lods
push
call
xor
mov
gs
xor
jmp
jmp
mov
pop
popa
jmp
xchg
xor
or
or
es
push
and
sub
in
ins
and
jl
add
test
in
sbb
push
repnz
mov
sbb
(bad)
sbb
iret
xor
pusha
je
ss
loopne
jp
fdivr
mov
mov
fisubr
inc
jmp
adc
xchg
sbb
add
(bad)
and
mov
add
std
les
lock
push
push
adc
(bad)
shl
sub
movs
std
stos
shl
cmp
add
(bad)
jmp
cmp
mov
pushf
shl
out
imul
lods
std
sub
test
lea
sbb
add
cwde
add
dec
rol
dec
mov
add
inc
cmp
dec
aaa
mov
loope
mov
adc
mov
add
pusha
retf
lods
lea
int3
sbb
mov
js
sub
daa
pop
gs
dec
jmp
cwde
mov
fs
sbb
push
stos
loop
inc
retf
pop
(bad)
xchg
add
mov
push
jecxz
fstp
into
call
jecxz
out
push
or
out
pop
enter
add
sbb
inc
out
and
inc
mul
inc
repnz
int3
sti
jb
jecxz
cld
call
sbb
sti
loopne
test
push
push
push
pop
cmp
push
or
or
sti
or
xchg
xchg
add
push
mov
outs
pop
cmp
sti
fs
adc
mov
inc
xor
nop
jne
jo
inc
test
xchg
lea
pop
adc
jg
iret
test
push
sbb
and
adc
adc
mov
mov
test
rol
xchg
ror
rcr
push
or
jle
push
inc
mov
dec
add
sar
enter
or
repz
cmp
enter
ret
mov
cld
(bad)
lock
movs
(bad)
fldln2
xchg
je
or
retf
jge
cmp
nop
adc
mov
fbstp
popf
stc
or
sub
test
jne
inc
push
lock
push
mov
sub
sar
(bad)
lock
push
rol
stc
ins
call
adc
cmp
das
mov
mov
pusha
and
inc
mov
or
xchg
and
nop
sbb
scas
rol
je
fdivr
push
cmp
sbb
ret
data16
cmp
xor
xchg
sbb
loopne
fsubr
(bad)
(bad)
dec
js
sti
in
push
(bad)
test
loopne
xlat
cwde
in
fcomp
mov
xor
or
cs
loope
adc
jp
jl
(bad)
hlt
sub
cmp
jbe
xor
rol
shl
out
adc
inc
jnp
loop
mov
clc
mov
push
cld
bound
cmp
sbb
cmp
cmp
jne
mov
rol
mov
add
adc
bound
jnp
fcomp
mov
ss
sub
lahf
jne
fiadd
hlt
adc
cmp
dec
add
pop
or
cmp
dec
pop
mov
or
mov
add
and
hlt
pop
adc
add
or
in
sti
dec
push
neg
lea
jne
push
stc
nop
retf
and
jnp
inc
movs
fld
or
and
icebp
sbb
jg
movs
and
call
jbe
repz
in
fist
cmp
(bad)
and
xor
lahf
and
jmp
hlt
adc
pop
leave
hlt
lahf
or
sub
scas
fdiv
mov
lock
cmc
inc
xor
call
rol
es
mov
out
and
aas
imul
push
ins
stc
les
push
xchg
cmc
cmp
enter
jmp
pop
pop
arpl
jp
add
enter
xchg
mov
les
hlt
and
push
inc
mov
add
dec
imul
adc
cld
out
push
sbb
je
call
into
mov
adc
push
popa
pop
lods
push
pushf
fwait
mov
sbb
mov
adc
add
mov
int3
int3
mov
cdq
fld
repnz
shr
sub
cmp
add
and
sahf
and
xchg
and
pop
sub
imul
push
in
loop
adc
fsub
test
push
mul
in
in
add
cmp
outs
fbstp
add
ud0
push
loop
mov
adc
(bad)
in
add
pusha
jnp
mov
push
les
pop
push
loopne
pop
push
in
mov
jge
shr
fadd
sbb
dec
inc
hlt
jno
mov
add
test
imul
ins
xchg
cmc
mov
adc
dec
dec
or
shl
push
fsubr
js
or
rol
or
hlt
hlt
adc
xchg
mov
mov
adc
int
sahf
rol
mov
pop
outs
les
mov
imul
sbb
mov
xchg
mov
not
adc
rol
mov
js
sbb
js
mov
retf
call
mov
xlat
ins
xchg
cmps
mov
add
dec
or
call
out
nop
fidivr
pushf
test
pop
movs
int3
adc
pop
movs
jnp
jne
inc
mov
adc
mov
ret
sbb
lods
push
sbb
mov
jnp
jl
mov
(bad)
mov
push
push
pushf
xchg
or
xchg
clc
sub
push
shl
xchg
push
cld
mov
pop
xchg
mov
add
mov
je
lods
fdiv
mov
jg
cmp
mov
pushf
lock
push
lock
push
cmp
clc
hlt
lock
xor
call
and
je
(bad)
es
xchg
(bad)
inc
jle
int3
in
daa
dec
pop
movs
cmp
inc
lock
xchg
cmps
mov
add
lock
hlt
je
or
je
pop
and
scas
or
push
xor
adc
or
in
ja
xchg
je
xor
je
ds
push
pop
sahf
cmps
shl
or
movs
cmp
sub
movs
sbb
ds
in
ret
outs
inc
shr
popf
aaa
cld
jmp
jns
cmp
xchg
and
or
push
cld
jmp
inc
adc
sbb
jne
jle
add
cmp
cmp
ja
or
cdq
mov
pop
lods
inc
ret
or
ror
mov
lods
mov
or
iret
or
push
add
in
dec
cmp
sbb
lock
pop
and
add
into
inc
pop
dec
add
jmp
cmc
jns
(bad)
je
dec
adc
inc
sbb
cmp
xchg
fs
jecxz
std
pop
jmp
push
add
inc
adc
fld
es
fsubr
push
mov
or
and
push
stc
adc
pop
dec
mov
jno
push
mov
mov
retf
and
sbb
loopne
loopne
inc
or
or
jp
mov
mov
test
fs
jg
push
daa
cmp
jmp
stc
cmc
loope
je
loop
lods
sbb
fldl2t
test
fsubr
popa
ins
push
popf
add
fcomp
je
mov
arpl
popa
or
jg
idiv
xor
mov
and
es
imul
or
cmp
cmc
adc
jbe
mov
jns
lock
cmp
jae
xchg
push
outs
cmc
pop
mov
xor
mov
div
jnp
adc
lea
test
mov
push
or
push
test
add
pop
shr
cmp
jae
loopne
imul
inc
loopne
mov
jbe
mov
push
(bad)
shl
inc
lock
cmp
mov
popa
jne
lea
lods
push
loopne
iret
push
add
jo
loopne
push
call
push
push
sbb
mov
mov
fdiv
push
cmp
rcr
pop
xor
xchg
jp
lods
xchg
fcomp
ds
loop
je
sub
ret
clc
test
ret
shl
ins
xor
xchg
and
xchg
add
mov
ja
(bad)
xor
outs
mov
repnz
in
mov
sbb
sbb
mov
add
xchg
xor
add
in
je
(bad)
adc
cmp
(bad)
jmp
out
(bad)
pop
dec
jns
adc
inc
fdiv
add
mov
jbe
aad
mov
movs
aad
dec
jmp
inc
inc
mov
mov
sar
push
in
sub
pop
cld
in
jne
dec
in
das
dec
pop
das
stos
or
dec
jmp
push
cs
jl
lock
ins
push
or
loope
cs
lods
pop
rcl
loope
mov
ss
cdq
rol
or
pop
(bad)
or
cs
sbb
fbld
popa
and
jne
shl
shl
mov
pop
pop
ja
mov
jge
ja
push
jmp
pop
ret
cdq
jmp
jae
and
or
xchg
jo
cmp
aas
pop
jg
sbb
push
jecxz
push
xlat
sbb
test
jo
push
sub
adc
jne
sti
test
xor
mov
cdq
pop
or
push
adc
inc
jnp
dec
dec
add
xchg
pop
and
mov
sbb
mov
adc
adc
aas
mov
adc
jl
push
or
lods
xor
push
xor
cmp
jl
mov
sub
pop
push
syscall
ret
mov
sti
in
hlt
sbb
xchg
das
dec
and
cmps
add
adc
popa
inc
or
and
inc
ss
xchg
add
or
add
or
pop
adc
push
out
nop
jne
pop
jg
ins
jb
gs
rcr
in
lock
fwait
out
mov
lock
inc
inc
in
ja
stos
js
push
popa
or
sub
pop
add
imul
sbb
fcomp
imul
sub
(bad)
push
pop
lea
mov
adc
sub
jnp
mov
add
cmp
jne
xor
mov
mov
add
test
xor
xor
int
ror
inc
leave
and
push
xor
mov
push
icebp
je
repnz
hlt
mov
xor
in
call
imul
sub
mov
sbb
sbb
out
push
and
add
cmp
js
rol
lods
pop
loopne
adc
test
xor
movs
pop
test
imul
cmp
adc
dec
fwait
mov
add
adc
(bad)
cdq
cmp
ins
add
int3
mov
jno
bound
inc
jg
cmp
arpl
adc
cdq
jns
jae
ret
add
jmp
dec
aas
mov
jbe
xchg
idiv
xchg
pop
loope
or
mov
ss
les
adc
or
jne
retf
pushf
rcl
in
xchg
or
adc
pop
and
test
sub
add
or
adc
pop
and
in
and
or
and
dec
jg
outs
lods
nop
inc
xor
mov
add
jo
adc
ret
pop
inc
sub
shld
sbb
mov
cli
inc
les
mov
jnp
jne
adc
cmp
je
add
cmp
(bad)
mov
loopne
xor
adc
shl
stos
mov
adc
or
int3
xor
dec
in
sbb
pop
pop
test
lds
mov
lods
mov
mov
xor
jnp
mov
outs
pop
mov
mov
or
or
jg
in
cmp
sub
push
sbb
lods
scas
sbb
mov
sub
rcl
fldcw
hlt
(bad)
fisubr
out
int3
outs
lahf
icebp
outs
pop
mov
adc
int3
int3
sub
pop
push
mov
iret
retf
sub
sub
xor
in
fidiv
jnp
push
movs
push
jg
xor
cwde
dec
adc
loop
inc
sub
pop
xor
cmp
and
pop
lods
fwait
inc
imul
push
cs
mov
arpl
add
int3
aas
mov
xor
or
and
pop
pushf
shl
adc
js
jne
lods
xchg
gs
cmps
outs
cwde
adc
xchg
loopne
mov
mov
es
in
and
outs
in
lock
jecxz
popf
in
repz
movs
out
push
clc
jp
loope
add
fxtract
cmp
mov
and
push
xor
loop
adc
pop
aas
(bad)
push
mov
pop
sbb
fist
adc
jp
add
sbb
xchg
push
scas
sti
add
fidivr
mov
dec
mov
into
push
movs
pop
jbe
sbb
(bad)
add
mov
lods
sub
inc
shr
sub
call
xor
imul
jmp
dec
adc
dec
or
inc
push
mov
das
outs
in
movs
jbe
stos
rol
mov
mov
cld
(bad)
jne
cdq
sub
shl
push
loope
addps
cmp
mov
xchg
scas
or
add
and
or
mov
xchg
in
in
aaa
push
mov
mov
or
inc
sub
cld
add
mov
jle
inc
push
adc
sub
pop
sub
mov
data16
mov
sbb
pusha
add
mov
sbb
pop
shr
adc
pop
test
mov
mov
mov
ret
aam
(bad)
stc
ror
cmp
sub
js
mov
clc
lea
das
ror
mov
hlt
mov
int3
mov
repz
je
mov
aas
mov
mov
sar
in
pop
loopne
push
cmp
and
mov
lds
or
cld
mov
sub
mov
inc
in
add
sti
add
loope
je
xchg
arpl
push
pop
mov
aaa
test
nop
hlt
in
arpl
inc
pushf
(bad)
add
mov
arpl
pop
sub
mov
or
pop
push
push
sbb
and
or
add
adc
xchg
cmp
addr16
mov
push
retf
gs
fist
adc
mov
test
fidivr
sub
iret
fcmovne
or
loope
jae
test
loopne
scas
push
mov
adc
jp
push
push
cmp
pop
imul
(bad)
or
popa
dec
jae
dec
dec
inc
sbb
(bad)
mov
dec
icebp
or
mov
inc
push
jle
add
add
sbb
in
mov
push
adc
xor
xor
(bad)
aas
mov
shl
mov
mov
test
cmp
lea
push
xchg
xor
aam
lods
mov
cmp
scas
jo
mov
stos
pop
xchg
dec
rcr
jne
outs
loopne
or
cmps
cli
movs
cmp
push
movs
add
mov
out
inc
adc
cwde
sti
pop
scas
push
jl
jg
xchg
cmp
jbe
xchg
jg
outs
inc
sub
sbb
pop
(bad)
enter
xorps
cmps
cdq
add
push
adc
xchg
lock
adc
mov
sub
mov
call
inc
int3
cmp
jne
pusha
loopne
or
xor
mov
test
ror
pushf
mov
shl
dec
dec
mov
pop
adc
push
adc
add
sbb
aam
dec
push
ror
cmps
fdiv
ins
or
inc
cmp
fist
push
out
jge
or
push
inc
fild
inc
ins
mov
imul
or
cmps
or
mov
add
jmp
mov
ins
jne
mov
mov
repz
mov
jne
mov
xor
fwait
jne
dec
daa
and
fld
jae
sub
fdivp
pushf
cmp
add
sar
test
xor
and
inc
sub
sbb
add
pop
mov
rol
add
outs
and
inc
push
jp
inc
push
adc
nop
test
je
nop
sbb
lods
fs
adc
mov
sbb
lods
mov
mov
pop
push
imul
je
fs
ins
jbe
sub
sbb
imul
ror
int3
popf
ss
pop
loope
aaa
add
lds
hlt
dec
sbb
je
in
xor
jmp
cmps
call
or
cmp
int3
test
xor
cmp
add
mov
pop
nop
hlt
ds
imul
mov
nop
jbe
repnz
in
cmc
jo
sar
repnz
shl
inc
stos
sub
sub
mov
pushf
enter
call
jns
addr16
mov
mov
or
inc
cld
pop
lods
pop
mov
jns
int3
and
repnz
js
sbb
dec
stc
lods
dec
stos
retf
cmp
lods
sub
mov
fstcw
aaa
xchg
loope
out
xor
cmp
inc
xchg
loop
hlt
push
xor
push
mov
int3
mov
inc
pop
jp
aas
jge
xor
test
addr16
imul
in
sbb
adc
pop
sbb
adc
xor
ret
bnd
fsubr
add
adc
mov
jo
or
push
and
or
jo
adc
and
frstor
mov
or
les
popa
inc
cmp
ret
jle
cmp
mov
lock
ffree
sti
cmp
or
int3
rcl
sub
inc
movs
and
bound
mov
mov
ins
and
and
js
movs
cmp
pop
mov
lahf
xor
in
jne
into
arpl
lahf
inc
inc
and
shl
fist
pop
sub
es
adc
cmp
ret
mov
mov
xchg
push
pop
ja
or
or
sub
pop
jmp
shl
sub
and
popf
(bad)
sub
es
push
jae
sub
arpl
jge
add
pop
cmp
ins
(bad)
dec
das
mov
push
addr16
add
enter
hlt
push
xor
mov
mov
or
loop
or
mov
jg
push
xchg
push
lds
inc
aaa
ss
or
xchg
sub
sbb
and
add
cmp
mov
or
ins
popf
or
pushf
xchg
pop
adc
xor
dec
repnz
mov
xchg
adc
pushf
inc
int3
xor
mov
push
lods
stos
je
sbb
and
sbb
adc
add
or
jae
outs
xor
je
mov
popa
sbb
bound
cmps
jp
xor
ins
push
jmp
or
sbb
popa
test
mov
mov
push
ja
push
xor
or
lea
fsub
add
retf
jmp
mov
and
mov
fld
xor
pop
mov
adc
adc
cmp
push
xchg
pop
(bad)
and
aas
enter
dec
or
or
push
push
or
and
ins
shl
xchg
not
ja
loope
or
aas
in
int3
call
cdq
loope
or
or
(bad)
mov
int
xchg
mov
xchg
and
xchg
adc
or
femms
inc
scas
sub
add
fmul
and
pop
ds
sub
aas
add
fstp
sub
add
push
mov
or
mov
or
sbb
imul
jns
fdiv
leave
outs
loopne
enter
in
ret
sbb
rol
jge
or
stos
xor
fnstsw
pop
mov
outs
cwde
jmp
xor
mov
test
push
jge
add
xor
inc
add
or
jnp
test
mov
jno
not
push
lods
int3
rol
pusha
push
(bad)
mov
out
loopne
and
xchg
ret
sub
ret
les
pusha
fcomp
hlt
adc
xchg
jl
call
and
xchg
out
repz
sbb
mov
and
or
hlt
mov
aas
inc
or
scas
inc
clc
enter
cwde
sub
arpl
(bad)
or
sbb
add
add
mov
retf
and
cmp
ja
dec
js
jne
sub
sub
sbb
mov
adc
fild
enter
cmp
push
shl
xchg
or
push
aam
add
out
push
sbb
sbb
push
xor
call
mov
mov
ins
mov
je
xor
adc
push
push
dec
add
aam
pop
je
mov
mov
add
movs
fcos
mov
les
or
cmp
inc
or
adc
push
dec
sub
push
mov
dec
movs
add
(bad)
jb
lods
sbb
(bad)
cmp
mov
adc
in
add
nop
fisub
cmp
or
imul
je
rcr
in
enter
mov
xchg
stos
aam
(bad)
enter
in
jb
sbb
ret
lahf
cmp
test
inc
add
ins
shl
inc
dec
pop
pop
mov
cmp
inc
fadd
aad
mov
fs
push
jb
addr16
cli
enter
mov
add
push
loope
inc
add
call
(bad)
and
and
add
or
adc
xchg
adc
mov
push
jg
out
dec
add
test
xor
cmp
xchg
adc
adc
add
push
dec
inc
call
mov
xchg
sub
inc
sbb
sbb
or
mov
pusha
inc
xor
or
clc
push
pop
stos
cmp
jne
jge
int3
popf
mov
cmp
mov
into
xchg
dec
loopne
std
or
adc
xchg
push
mov
xor
pop
mov
push
or
adc
push
inc
or
(bad)
dec
mov
clc
inc
call
jne
dec
push
sub
je
clc
jmp
jmp
or
add
dec
cwde
dec
adc
jnp
not
adc
push
adc
bound
jne
dec
je
retf
mov
in
repnz
sub
iret
cmp
shl
push
aas
dec
pop
xchg
jno
rcr
dec
pop
sub
push
out
or
ins
loope
aas
movs
dec
cmp
push
fmul
mov
out
sbb
inc
sub
test
sub
sbb
sar
jle
test
push
sbb
into
mov
jge
icebp
in
pop
inc
mov
shl
xor
pop
cmc
or
dec
sbb
sbb
mov
jmp
jns
xor
adc
das
push
sbb
and
inc
repz
adc
daa
jl
or
pop
xchg
or
inc
adc
sub
dec
ror
or
shl
dec
dec
dec
push
hlt
lods
xchg
popf
popa
scas
adc
add
pop
(bad)
xor
mov
clc
into
fwait
push
dec
mov
in
stc
dec
lods
add
mov
inc
test
mov
fadd
inc
mov
mov
xchg
and
int3
sbb
lea
aaa
dec
lds
shr
loop
leave
scas
mov
ret
aas
jecxz
in
adc
or
nop
lea
xor
xchg
sub
mov
jo
or
clc
lock
dec
int3
xchg
inc
mov
add
add
or
and
sbb
jl
mov
dec
dec
pusha
movs
ret
scas
(bad)
push
in
pusha
inc
jb
xor
add
sbb
pop
cmp
inc
jo
mov
mov
lods
pop
dec
sbb
(bad)
fbld
adc
jnp
fmul
cld
imul
mov
fst
cmps
or
and
lea
sbb
fistp
and
pushf
adc
leave
sbb
or
mov
and
fild
sbb
dec
sub
and
xchg
push
push
and
je
adc
test
and
in
pop
in
call
push
test
adc
aaa
repnz
sbb
and
test
push
std
lock
mov
cmc
cmp
pushf
adc
jbe
fs
add
sbb
jb
gs
sbb
js
mov
daa
xchg
dec
repnz
je
clc
in
jmp
pusha
dec
add
mov
push
add
dec
ins
fcomp
dec
lods
in
in
jmp
pop
sbb
dec
cdq
pop
mov
movs
or
call
cmp
push
push
push
nop
fst
push
jmp
fdivr
jl
cmp
xchg
loopne
pop
in
dec
pop
movs
loopne
push
push
sbb
enter
es
imul
dec
jg
add
push
pop
mov
daa
(bad)
fist
dec
outs
or
imul
push
xor
ins
mov
cs
jmp
xchg
or
inc
cs
and
cmp
push
pusha
adc
lea
push
jl
dec
jp
dec
fidivr
push
jge
shl
push
sbb
loopne
out
jbe
jno
cmp
loopne
int3
add
sub
(bad)
stc
cli
and
add
xchg
lea
pop
in
inc
jb
mov
push
mov
loope
mov
push
jmp
mov
dec
adc
aas
nop
or
shl
adc
add
or
int3
jo
pop
les
test
jmp
add
fistp
or
push
repnz
movs
ror
mov
jg
mov
or
pop
jg
iret
add
int3
inc
lock
adc
(bad)
adc
int3
lahf
push
cld
ins
(bad)
in
push
sub
mov
add
mov
pop
mov
fbld
jl
cwde
enter
inc
sub
(bad)
xor
sbb
cmp
mov
jmp
jmp
ficom
ds
dec
lds
add
cmp
je
push
mov
inc
sub
int3
out
dec
lds
jecxz
fs
stos
inc
dec
or
pop
cmc
scas
pusha
push
int3
rcl
or
pop
ret
push
add
lock
cmp
shl
or
int3
push
ret
push
pop
repz
or
mov
mov
ret
mov
mov
push
mov
mov
dec
aas
movs
adc
daa
pop
lods
lahf
(bad)
push
ficomp
dec
add
push
sub
loop
add
enter
jne
fadd
mov
pop
inc
loop
mov
mov
jge
or
dec
adc
sub
inc
push
mov
ins
data16
mov
push
adc
cmps
cs
sub
hlt
push
push
or
push
push
cmp
jmp
retf
es
push
in
push
dec
(bad)
xchg
pop
mov
push
dec
in
leave
gs
push
pushf
test
test
call
mov
add
dec
mov
retf
mov
push
fistp
sbb
aam
cmp
fistp
xchg
icebp
test
push
inc
or
mov
jl
cmp
cmp
aaa
rcr
xor
mov
loop
inc
inc
movs
jp
or
mov
mov
push
add
xor
or
arpl
mov
jo
mov
dec
ds
sub
movs
cld
gs
rcr
jg
es
mov
and
pop
or
adc
xor
dec
fadd
out
push
push
fld
mov
lahf
and
push
or
test
mov
jg
dec
cmp
pop
xor
js
dec
pop
push
aam
and
in
imul
pusha
inc
test
lahf
jbe
cmp
jns
or
fcomp
sub
mov
mov
repnz
push
pop
xor
xor
fcos
repnz
add
or
adc
xchg
call
test
nop
sbb
jmp
mov
dec
adc
sar
sub
push
test
rol
adc
in
or
lds
adc
cs
sahf
mov
jne
dec
gs
aad
adc
int3
pusha
pop
pop
and
inc
lods
call
outs
xor
sar
and
rol
xchg
xor
add
push
arpl
sub
dec
lods
movs
dec
repz
jg
sbb
test
push
lock
inc
jnp
sti
jl
daa
xor
lock
push
add
adc
mov
adc
dec
mov
adc
mov
movs
rcl
in
in
sbb
inc
out
clc
loopne
jmp
jmp
add
in
test
add
inc
cld
adc
push
(bad)
nop
add
adc
lea
test
cmp
sbb
pop
xor
and
leave
inc
xor
and
pusha
test
mov
xlat
xchg
xlat
pop
loop
mov
arpl
dec
inc
es
sbb
cld
dec
ret
or
frstor
cmp
dec
in
lock
test
leave
in
in
lock
or
push
stc
push
dec
in
xchg
dec
cs
in
lock
lock
adc
jo
mov
shl
sbb
hlt
xor
inc
lock
sub
sub
icebp
lock
call
cmp
fisub
dec
push
call
and
lods
lahf
stos
push
mov
jmp
and
mov
inc
push
mov
test
clc
aas
inc
or
cmps
pusha
dec
pop
jno
fbld
sub
inc
ja
push
mov
mov
dec
(bad)
jno
cmp
dec
aas
jb
push
or
add
push
aas
mov
cmp
lock
xor
mov
cli
adc
add
rol
mov
mov
ins
xchg
pop
cmp
adc
inc
cmp
inc
js
lds
fs
or
jecxz
or
rcr
push
enter
arpl
ficom
aas
adc
xchg
push
retf
scas
pop
out
and
clc
push
clc
(bad)
int
jbe
pop
pop
hlt
nop
iret
push
xor
jg
data16
xchg
or
sbb
or
shl
cmp
jg
xor
inc
push
call
sbb
in
and
push
mov
jl
arpl
mov
pop
sbb
test
pop
imul
sbb
or
add
in
mov
data16
adc
aas
sbb
cli
jne
shl
add
pop
pop
aaa
add
mov
fimul
dec
js
gs
rcr
sar
test
leave
mov
add
cld
jns
pop
les
fcmovnu
push
add
jns
lds
mov
jg
lods
push
or
adc
adc
inc
inc
arpl
xchg
pusha
pop
push
push
push
sub
adc
add
ret
or
cmp
and
xor
imul
cs
sar
dec
test
mov
mov
and
sbb
xchg
loope
jmp
jmp
cmp
shl
call
dec
in
inc
pop
and
or
push
stos
lock
lock
mov
sbb
loopne
add
and
add
and
fcomp
sub
xor
enter
test
xchg
mov
pop
js
xor
sbb
push
jae
cmp
xchg
pop
fild
inc
or
inc
imul
and
sbb
aam
xor
dec
inc
and
sbb
jae
in
in
into
mov
or
and
mov
(bad)
dec
clc
pop
sar
xor
mov
gs
fmul
sbb
adc
dec
or
sub
mov
gs
xchg
xor
jno
or
clc
inc
pusha
jne
inc
push
mov
mov
mov
push
ins
mov
sub
push
(bad)
je
adc
lds
pop
mov
adc
adc
inc
cmp
adc
and
sub
xor
jno
or
jne
enter
adc
call
sub
and
add
cmps
mov
pusha
cld
lods
cs
sub
and
push
cmp
pop
jmp
and
xor
xor
(bad)
lds
pusha
mov
(bad)
jmp
(bad)
sbb
loope
jg
bound
adc
int3
dec
mov
pop
adc
inc
clc
rol
cmp
jne
adc
lock
sbb
cmps
push
test
sub
dec
sbb
lds
cmp
jg
fist
jo
(bad)
or
bound
inc
pushf
scas
mov
lds
shr
call
and
adc
hlt
mov
pop
into
add
and
push
stos
ret
dec
xchg
jne
bound
add
or
shl
push
jo
mov
movs
lds
mov
test
popa
scas
call
shr
jno
ret
bound
js
in
and
bound
fist
push
in
std
add
cwde
ret
pop
cmp
push
add
imul
pop
or
or
imul
pop
jno
pop
cmps
and
mov
jmp
adc
jmp
loopne
loopne
aaa
sti
add
adc
xor
mov
pop
dec
adc
popa
dec
push
icebp
jmp
cmp
jb
ins
repz
inc
adc
adc
inc
call
scas
and
or
movs
(bad)
sti
push
pop
push
fist
mov
test
mov
or
adc
addr16
das
loopne
and
jae
aam
dec
rol
aam
push
int3
xchg
pop
js
mov
scas
and
mov
sbb
movups
dec
inc
mov
sbb
in
call
mov
mov
fisttp
push
shl
mov
mov
mov
movs
pop
sbb
inc
stc
aaa
or
pop
in
push
mov
stos
(bad)
fistp
lahf
je
pop
dec
adc
mov
aad
pop
in
mov
pop
mov
test
ds
mov
jns
add
mov
loop
mov
jae
call
sbb
pop
adc
mov
sbb
xchg
pop
(bad)
push
xchg
loope
inc
jp
pop
rcl
fsub
jbe
sahf
push
sub
ret
sbb
test
jmp
xlat
jo
imul
fld
jo
adc
pop
inc
adc
adc
or
or
jmp
add
rol
pop
or
mov
inc
jmp
or
sub
jg
jl
aas
add
jge
adc
mov
jne
adc
sti
mov
push
les
lahf
adc
xchg
fld
jmp
or
mov
jmp
or
push
add
(bad)
jl
add
sbb
fist
and
pushf
sbb
or
xlat
lea
retw
push
dec
ins
pop
add
leave
iret
fild
mov
push
fs
xor
std
shl
inc
or
or
in
cmp
cld
out
dec
mov
loopne
dec
fmul
push
push
ret
mov
sbb
mov
fdiv
mov
test
ror
push
lock
in
inc
mov
xchg
fistp
jo
ja
das
das
adc
mov
call
xchg
sub
cmp
adc
fadd
sub
jo
and
mov
push
add
scas
mov
call
leave
sub
xchg
xor
jno
popf
fsub
gs
sahf
enter
push
out
scas
lods
clc
pushf
or
push
mov
cdq
cmps
inc
fcom
and
add
and
add
test
mov
and
in
std
or
adc
nop
test
fwait
jb
push
jb
hlt
call
call
inc
and
sub
in
std
adc
cmp
dec
mov
scas
inc
mov
ffreep
mov
je
int3
xchg
adc
mov
inc
shl
cwde
in
push
das
cmp
adc
add
push
test
popa
enter
fcmovne
pop
or
arpl
add
push
jne
dec
call
pusha
das
mov
(bad)
not
fsubr
sahf
(bad)
js
push
mov
add
test
mov
cmp
popa
sub
push
jne
out
dec
mov
mov
fs
or
test
jo
sbb
lock
mov
lods
fisub
adc
sahf
xor
xor
fadd
stos
mov
jae
les
in
sub
mov
and
leave
adc
es
mov
popa
and
mov
mov
or
adc
sbb
xchg
push
idiv
adc
in
in
xchg
sbb
enter
add
xor
data16
mov
mov
or
jo
push
xchg
cmp
in
pop
int3
cmp
push
adc
retf
mov
add
div
ror
and
loopne
dec
inc
hlt
jmp
mov
fdivr
mov
je
pop
xor
xchg
in
in
rcr
push
out
inc
fadd
shr
sub
or
pushf
push
fsubr
push
in
xor
add
popf
push
daa
pop
push
stc
mov
mov
cmp
or
xor
(bad)
les
xor
cmp
test
and
out
ror
je
add
jge
mov
mov
or
add
mov
inc
jp
rcl
push
cmp
mov
cs
jb
add
sub
add
les
sbb
popa
loopne
dec
movzx
dec
pop
ins
sbb
add
push
xor
sub
push
loopne
and
push
dec
inc
push
pusha
or
cwde
sub
test
in
jne
xchg
xchg
pop
clc
dec
xchg
or
add
mov
xchg
xor
cmp
jae
repnz
sbb
or
pop
in
push
adc
fsubr
jle
sbb
jmp
mov
and
or
xor
shl
dec
lahf
mov
jmp
outs
in
sbb
aam
cmps
sar
or
int3
js
les
sbb
lock
xor
push
in
je
inc
in
cs
cmp
push
jl
sub
sub
and
push
add
cmp
and
adc
push
shl
in
add
adc
adc
inc
mov
mov
call
add
scas
cmp
cmp
mov
xor
cmps
jmp
out
fsubr
add
hlt
into
xor
xchg
aad
push
ds
mov
loopne
repnz
js
int
xor
dec
sar
xchg
dec
push
fdiv
push
push
clc
icebp
sahf
pop
ror
inc
cmps
sbb
push
sar
mov
sahf
xor
inc
mov
out
push
in
adc
fmul
iret
push
jle
iret
push
mov
retf
retf
ret
aam
push
mov
adc
cmps
mov
jne
cs
daa
mov
cs
xchg
push
jmp
xacquire
inc
xchg
lea
loop
fisub
stos
lods
mov
add
push
jnp
xor
addr16
xor
cmps
cld
ins
mov
jne
xchg
add
test
sub
in
sub
cdq
and
scas
je
ret
or
ret
mov
sub
jle
test
mov
and
lods
mov
xchg
sub
push
add
retf
jnp
dec
mov
or
mov
das
mov
adc
pop
push
adc
jae
dec
nop
nop
retf
cmps
jb
nop
ror
js
push
clc
repz
cwde
add
jmp
push
fild
sub
cwde
mov
add
push
xor
mov
cmps
imul
cmp
jl
(bad)
push
retf
or
lea
(bad)
shl
xchg
xor
dec
mov
jl
sub
cli
sub
fiadd
scas
pop
mov
sub
call
push
mov
add
or
adc
pop
in
mov
(bad)
cmps
lock
lock
dec
xchg
cmp
cmp
or
cmp
in
xchg
cmp
test
test
loope
dec
(bad)
sub
sub
dec
ret
sbb
mov
cmp
cmp
push
xor
or
adc
or
out
lea
retf
jo
fcom
xor
xor
xor
dec
inc
cmps
dec
loope
adc
dec
mov
shl
pop
adc
inc
cmp
shr
js
bound
icebp
mov
sar
xlat
xchg
je
sub
or
xchg
push
lods
xchg
dec
leave
mov
mov
aad
pop
inc
xchg
mov
stos
test
jo
lods
adc
aas
push
and
and
mov
mov
and
fild
add
in
adc
jb
pusha
push
mov
pop
xor
aaa
mov
cmp
ror
xchg
inc
pop
mov
xchg
loope
add
push
jb
cmc
ret
jo
in
mov
loope
and
test
pop
inc
pop
in
jp
push
js
xchg
adc
add
push
loope
adc
and
rcl
push
rcl
and
fdivr
adc
mov
xor
mov
sbb
pusha
mov
mov
inc
mov
push
cmc
aaa
cwde
fwait
je
pop
cs
adc
add
jmp
sbb
mov
ja
or
add
jb
sbb
ja
pop
sbb
xchg
ja
nop
pop
add
mov
or
call
ins
xchg
movs
and
cmp
test
call
cmp
jne
out
ja
inc
jp
mov
in
out
xor
sbb
retf
mov
push
xor
add
loopne
enter
dec
xchg
test
fdiv
dec
pop
sar
push
jmp
movs
in
mov
loope
cwde
and
int3
enter
cdq
inc
add
mov
push
add
pop
pusha
or
mov
push
fmul
in
dec
or
les
sbb
and
aaa
jne
out
std
and
and
(bad)
dec
sub
pop
nop
daa
(bad)
hlt
inc
das
cmp
mov
fmul
sub
pop
rcl
mov
stos
cmp
pop
mov
or
push
mov
dec
mov
adc
inc
pusha
inc
mov
mov
inc
movs
pop
or
pop
dec
(bad)
jl
pop
movzx
cmp
jge
mov
dec
adc
fcom
outs
cmp
xchg
or
iret
cld
enter
inc
pop
add
in
in
inc
test
cmc
dec
lock
or
sbb
xchg
pop
add
shl
and
push
dec
sbb
and
mov
jmp
leave
push
inc
out
ficomp
mov
add
push
inc
pusha
jecxz
add
int3
dec
pop
inc
sar
xor
in
call
jae
add
xchg
sbb
adc
test
or
mov
test
xchg
(bad)
in
js
inc
test
jecxz
pushf
mov
pushf
adc
outs
add
xor
pusha
push
rcl
mov
inc
or
or
push
shl
nop
sbb
and
das
or
cmp
sbb
cmp
xor
test
jne
cmp
jbe
or
or
loopne
inc
cmps
stos
and
xchg
cmps
pop
inc
mov
cld
in
test
enter
int
stc
movs
mov
mov
ret
jns
(bad)
and
mov
add
bound
sub
and
clc
loop
mov
or
das
les
inc
nop
inc
js
add
lahf
add
cmp
fcom
mov
sbb
rol
or
jmp
cld
inc
push
lea
mov
jo
inc
mov
mov
cmc
mov
sub
in
mov
xor
add
imul
sti
rcl
mov
lock
and
jl
mov
clc
pop
pop
push
mov
sbb
and
xor
xor
dec
pop
adc
shl
adc
cmp
push
in
mov
(bad)
sub
je
test
mov
dec
jne
push
xor
jo
enter
inc
imul
xor
ror
pop
mov
fsubr
test
js
cmp
or
loop
xor
stos
psubb
or
inc
cmps
adc
mov
xor
fsubr
cwde
dec
dec
push
leave
mov
ds
rcr
es
leave
shl
call
inc
or
stos
es
push
pop
xor
xor
xchg
or
in
add
inc
popa
mov
xchg
enter
sbb
sbb
in
movs
push
shr
pop
cld
retf
mov
dec
push
ret
sub
fsubr
sub
jmp
hlt
scas
pop
push
add
push
outs
int3
enter
lds
xchg
mov
inc
push
in
add
scas
or
xchg
xor
cmp
xchg
pop
dec
lock
sar
jge
les
sub
ss
dec
mov
cmp
in
mov
outs
xchg
add
mov
mov
in
xchg
jle
and
push
out
cmp
rcl
in
cmp
mov
mov
fsub
xchg
mov
loopne
fucomi
sub
test
xchg
movs
lock
inc
mov
jle
pop
rcl
jmp
jmp
cmp
fs
js
shr
xor
fisub
mov
int3
push
and
mov
xor
loopne
(bad)
fst
cmp
lea
ds
xchg
in
int3
rol
mov
clc
cdq
cmps
sbb
or
mov
inc
stos
stos
mov
in
add
je
mov
les
das
mov
(bad)
add
mov
test
jb
fimul
cmp
enter
mov
fistp
add
lods
inc
loopne
add
jmp
add
fcmovu
movs
clc
pop
test
xor
aas
and
add
cmps
call
push
rcr
clc
adc
test
imul
mov
xchg
or
sub
fmul
movs
pop
push
popa
pusha
test
cli
jge
adc
push
je
pop
sbb
cwde
scas
hlt
je
jecxz
outs
imul
loopne
adc
in
add
fcomp
pop
icebp
and
dec
or
mov
mov
jge
add
mov
add
mov
pop
enter
test
out
data16
and
fimul
fidiv
and
pop
pushf
or
imul
imul
fistp
cmp
and
lods
loopne
loopne
nop
test
pop
add
jae
repnz
dec
aam
call
int3
push
sbb
ins
(bad)
inc
cmp
dec
scas
or
(bad)
dec
mov
mov
js
add
dec
sub
rcl
int3
ds
push
xchg
mov
into
push
ret
ret
push
mov
mov
pop
stos
daa
jl
mov
out
mov
or
mov
test
test
pop
adc
int3
nop
mov
fsubr
mov
mov
inc
or
push
cmp
in
lea
ds
jp
pop
add
out
imul
out
aam
or
lock
shr
mov
push
inc
dec
aaa
adc
xchg
mov
adc
sar
fisttp
jb
jl
retf
in
jmp
jmp
ds
imul
mov
inc
das
mov
xor
ret
sbb
and
pop
push
jmp
out
inc
cwde
test
in
push
clc
call
adc
sub
hlt
retf
fsubr
pop
dec
mov
dec
push
and
movs
inc
jb
cmp
sub
pop
pop
sbb
inc
add
inc
(bad)
jnp
push
sub
mov
sub
xor
test
test
sub
mov
dec
push
xor
adc
sub
test
or
aam
push
inc
in
pop
int3
add
xlat
pop
push
dec
sti
or
shl
pop
aam
add
jg
loope
ror
pop
cmc
loopne
push
push
test
popf
add
inc
mov
push
inc
cmp
adc
loopne
mov
mov
imul
loope
push
cmp
dec
in
pop
into
lods
or
add
mov
push
and
call
dec
push
retf
add
mov
ret
mov
adc
sub
and
push
pop
test
ins
hlt
mov
lods
add
mov
(bad)
jmp
shl
in
inc
cwde
mov
shl
scas
adc
sub
xchg
ins
fdivr
rol
cmp
pop
sub
inc
daa
test
mov
sub
pop
xor
mov
xlat
mov
fs
cwde
rcr
movs
push
inc
xchg
and
(bad)
pop
test
add
xor
mov
ror
test
push
lods
loopne
or
mov
fwait
mov
add
arpl
pop
loopne
(bad)
enter
adc
jmp
jo
mov
rcl
rcr
jno
and
pushf
push
bound
call
into
inc
lods
mov
jae
xor
mov
pushf
and
lds
mov
mov
mov
or
jmp
pop
loop
mov
not
jmp
push
mov
and
loope
dec
cmp
jecxz
mov
jecxz
mov
and
test
dec
pop
and
pop
sbb
test
sub
in
push
sbb
inc
push
push
js
inc
cmp
dec
repnz
mov
loopne
loope
ins
dec
jmp
adc
lock
idiv
inc
ret
(bad)
adc
cmp
pop
xchg
cwde
shl
cmps
les
lahf
xor
addr16
push
call
mov
popf
mov
mov
int3
inc
repz
or
clc
retf
cdq
adc
sbb
xchg
push
hlt
arpl
rcl
retf
iret
pusha
jle
add
jbe
mov
or
and
jns
add
mov
retf
leave
sbb
stos
dec
retf
pop
cdq
mov
push
xor
or
add
inc
shl
mov
lahf
sub
js
mov
aaa
cmp
push
xor
daa
jo
test
xor
call
mov
push
std
adc
inc
mov
sbb
popf
clc
dec
sbb
nop
add
jo
and
xchg
lods
xor
mov
xchg
pop
or
and
push
enter
retf
cmp
es
pushf
xchg
mov
push
adc
pop
cmps
add
mov
xchg
in
loop
test
add
sub
xor
mov
popa
or
data16
fwait
arpl
arpl
mov
push
in
pop
cmp
fisttp
test
push
retf
mov
loopne
mov
sub
mov
add
pop
lods
and
xor
inc
mov
cmp
loopne
add
movs
push
xor
mov
adc
or
sar
xchg
int3
jmp
dec
popa
nop
cmp
mov
test
ror
movs
inc
shl
shr
add
push
add
xchg
rcl
mov
cmp
shl
cmps
enter
lods
(bad)
jl
cwde
ret
jo
test
cmp
or
add
ret
or
or
mov
mov
vmwrite
mov
mov
xchg
sbb
add
enter
inc
dec
and
push
inc
call
in
or
inc
in
add
movzx
jp
adc
dec
add
jno
sbb
push
aaa
sbb
mov
outs
cmps
leave
mov
in
mov
or
mov
aam
cmp
jne
add
adc
adc
sbb
aam
enter
ins
cmp
or
mov
dec
mov
(bad)
clc
mov
push
cmc
cmp
iret
rol
add
ins
adc
or
jmp
and
scas
and
leave
mov
push
push
(bad)
lock
test
cmp
fs
test
sbb
test
or
add
sbb
jmp
add
sbb
add
sbb
xchg
inc
jb
mov
scas
mov
mov
sbb
mul
fdiv
inc
push
pop
rcr
scas
rcr
sar
xchg
ror
inc
push
dec
mov
rcl
jmp
fisub
popa
and
adc
adc
cwde
jo
mov
int3
adc
aam
push
xchg
retf
dec
das
mov
pushf
lea
add
dec
mov
adc
scas
lock
loope
js
add
cdq
sbb
xor
cmp
jne
push
call
dec
movs
adc
xor
xchg
pop
mov
pushf
cwde
inc
or
adc
dec
in
pusha
lods
cmp
cdq
in
pop
dec
dec
ret
cmp
mov
push
cld
lahf
mov
or
(bad)
mov
inc
jl
(bad)
lods
jae
dec
mov
mov
push
pop
ins
paddw
push
sbb
or
mov
cwde
push
ud1
push
arpl
lods
lods
rol
jns
je
xchg
push
fisub
push
cld
enter
push
stc
cmp
lea
push
(bad)
enter
xchg
in
ins
mov
enter
cmp
mov
js
xor
inc
inc
and
cmc
pop
xchg
add
adc
or
mov
popf
sbb
mov
push
inc
and
fdiv
or
xchg
and
mov
mov
ss
ins
lds
lock
adc
push
aas
outs
lock
push
outs
shr
out
push
cmps
ret
xor
enter
sar
pusha
push
sbb
xor
adc
jle
imul
jle
add
test
popf
or
xor
ror
or
push
jmp
nop
push
in
mov
nop
adc
xchg
mov
add
cmp
pop
add
aam
mov
sub
ins
pop
out
cmp
sbb
retf
rcl
dec
les
jbe
jmp
and
stc
cmp
jae
imul
(bad)
loop
jmp
jne
push
xchg
rcl
test
adc
mov
mov
and
jmp
test
test
adc
scas
rdtsc
pop
js
pop
jno
jg
mov
dec
(bad)
mov
loope
sti
cmps
xor
pushf
jb
jo
imul
fld
imul
cld
jne
inc
or
mov
test
pop
cs
or
jae
jno
ret
pop
push
push
mov
nop
test
or
(bad)
cmp
cmp
das
mov
add
and
inc
outs
inc
pushf
mov
movs
mov
add
pop
adc
cmp
aam
pop
fxtract
jle
popa
daa
adc
jmp
dec
mov
hlt
dec
leave
dec
imul
mov
cmp
mov
jmp
sbb
adc
repnz
ret
aas
sub
pusha
cmp
mov
cs
vpmadcswd
sbb
xlat
and
repz
mov
inc
js
test
pop
inc
pop
fwait
or
add
inc
push
mov
xchg
fld
mov
pop
xchg
pop
add
(bad)
sahf
lods
sbb
cmp
jmp
outs
mov
pop
jmp
dec
xor
push
ror
rcl
out
adc
xchg
push
pusha
and
xor
inc
movs
push
movs
add
fmul
ror
dec
pop
pop
mov
test
jbe
add
fild
jne
jne
dec
jle
sbb
fild
pinsrw
add
add
lods
repz
loopne
rcl
(bad)
cmp
mov
cmp
and
mov
jo
cmp
dec
aam
sub
add
arpl
pushf
xor
xor
xchg
xchg
inc
pop
push
inc
push
add
imul
mov
mov
dec
les
push
jne
cdq
inc
test
fnstcw
pop
js
int
jne
repz
(bad)
shl
leave
cmp
rcr
push
push
ja
pop
sbb
gs
or
cmp
add
lock
add
mov
inc
outs
jno
pop
sub
sbb
mov
mov
push
aas
jnp
inc
add
callw
adc
enter
in
sub
sbb
sub
sbb
mov
aam
sar
bound
push
xchg
pop
push
ja
ss
bound
jne
fimul
push
mov
xor
or
inc
dec
idiv
not
push
push
pusha
loope
and
cmps
cmp
in
ret
pusha
add
inc
pop
daa
and
mov
(bad)
clc
(bad)
loopne
ror
adc
fist
push
add
shl
pop
add
sbb
sub
pop
mov
retf
enter
mov
stos
mov
out
ins
and
popf
cmc
ins
aas
pushf
dec
lds
add
jb
add
or
or
inc
pusha
add
enter
add
dec
push
xor
dec
in
gs
jg
pop
add
add
int
xchg
pop
jo
mov
jo
ins
aad
loopne
pop
fild
movs
xor
pusha
test
xchg
pop
xor
jbe
jecxz
es
or
jne
cmp
arpl
in
push
cmp
enter
clc
imul
jecxz
into
scas
jmp
cmp
sbb
or
aam
cmc
std
call
adc
imul
shl
pop
les
bound
sub
fcomp
aad
xor
outs
add
or
mov
lods
hlt
push
push
fadd
dec
jae
adc
mov
jmp
jmp
or
cmp
aam
sub
cmp
dec
lods
push
lahf
sub
xchg
xor
js
pop
ret
sbb
dec
lds
add
adc
pop
loopne
pop
and
pmulhw
sub
fsub
(bad)
and
test
push
xor
jo
aad
fcomp
add
or
add
fsubr
or
dec
pop
push
aam
push
fcomip
inc
adc
sysret
sub
call
xchg
movzx
cmp
xchg
or
add
or
mov
hlt
jne
add
loopne
adc
jmp
rcl
jmp
pop
cdq
mov
sub
mov
aas
mov
xchg
cmp
stos
or
or
add
pop
(bad)
int3
(bad)
pop
cmp
dec
push
(bad)
sbb
fisttp
and
fsubr
imul
push
imul
ret
pop
mov
xchg
out
hlt
xchg
or
or
jl
popf
test
mov
xlat
sbb
and
fld
mov
add
or
cmp
(bad)
in
addr16
mov
xchg
sbb
and
adc
jae
sub
out
sahf
jg
hlt
mov
xor
loopne
rol
pop
add
(bad)
or
xor
nop
out
mov
lock
sbb
dec
cmp
inc
xchg
add
popa
call
enter
xlat
call
mov
cld
das
push
lahf
fmul
add
fmul
push
in
jmp
test
enter
adc
stc
or
pop
stc
inc
xlat
or
sub
adc
retf
sbb
pop
add
add
lahf
sub
mov
add
(bad)
fst
ja
or
ret
sar
adc
stos
or
nop
add
or
or
adc
inc
jecxz
mov
adc
popf
pop
adc
adc
inc
adc
and
mov
push
or
adc
repnz
or
ret
ret
lods
repnz
adc
mov
enter
cmp
xchg
mov
push
in
sahf
es
not
rcl
call
push
xlat
xchg
mov
jo
or
lods
inc
cwde
xor
fistp
rcr
inc
cmp
add
push
fnsave
and
test
cld
stos
pop
test
je
sbb
int
push
dec
loopne
pop
or
lahf
mov
mov
jo
cli
jmp
xchg
xor
dec
add
iret
mov
inc
jg
loope
cmp
loop
add
call
sbb
push
push
call
lahf
aam
shl
adc
add
push
dec
pop
mov
aad
mov
dec
push
or
mov
mov
ins
inc
or
add
mov
dec
or
lods
or
or
rcr
sar
lea
mov
and
test
fadd
movs
test
dec
dec
jae
fdivr
jnp
shl
cmp
or
aam
or
je
pushf
cmps
cmc
pop
sub
fiadd
pusha
mov
mov
fsub
repnz
add
enter
inc
ror
ins
adc
retf
pop
inc
dec
in
es
add
and
jmp
jge
iret
add
cmp
(bad)
iret
jmp
dec
mov
(bad)
fdiv
push
int
cmps
movs
cmp
into
into
adc
mov
(bad)
(bad)
xor
call
cmp
clc
ret
dec
cmc
jae
adc
inc
ja
mov
xchg
sbb
sub
mov
mov
adc
sub
adc
sti
push
test
and
mov
inc
push
addr16
mov
mov
sbb
cmps
nop
lods
inc
sbb
inc
pusha
loope
mov
popa
cs
or
call
sar
aam
(bad)
mul
mov
fidiv
in
mov
aam
leave
fisubr
xor
cmp
je
clts
rol
jg
loopne
sbb
xchg
lods
dec
movs
cmc
int3
or
add
sbb
vpmacssww
jmp
lods
test
in
inc
adc
and
lea
push
push
dec
sbb
rol
dec
push
pop
mov
or
repz
mov
cmp
jl
mov
jbe
aaa
mov
adc
push
jo
and
enter
loopne
pop
enter
adc
pop
ret
xor
(bad)
mov
lea
dec
pop
add
and
pop
pop
adc
or
fs
iret
push
mov
inc
sub
pop
and
inc
mov
lods
sub
loope
mov
pop
push
mov
loope
xor
fist
sub
les
xlat
xchg
mov
fucomip
cli
push
push
push
jo
push
add
les
stos
test
push
mov
cs
arpl
jmp
sub
pop
inc
and
pop
sub
xchg
and
and
push
mov
in
ds
push
pop
add
or
jo
sbb
inc
jb
mov
and
mov
or
mov
mov
push
push
ror
mov
cdq
scas
xchg
idiv
jl
adc
ja
jecxz
and
sub
and
dec
ins
sti
cdq
push
xor
out
ss
or
pop
jg
sub
and
or
and
cmp
pop
fist
outs
xchg
mov
(bad)
or
sbb
es
adc
js
cmps
pusha
rcl
je
xor
jno
test
in
movsd
or
adc
push
ucomisd
lahf
test
jnp
and
das
das
fs
mov
jle
or
mov
lea
mov
pop
xchg
mov
xor
adc
iret
arpl
test
or
mov
add
mov
das
sub
add
out
ret
jbe
pushf
lea
enter
adc
inc
inc
fiadd
jno
jb
mov
xchg
sub
lds
cmp
mov
inc
call
call
and
push
pushf
cmp
and
inc
aas
movs
push
xchg
fstp
push
mov
faddp
push
test
inc
push
jne
out
rcr
(bad)
ficomp
mov
xchg
popf
nop
jg
mov
movs
sbb
and
mov
sbb
cs
int
and
mov
xchg
out
and
sbb
jb
pop
jg
test
mov
add
(bad)
fcomp
fsub
cmc
sbb
(bad)
and
mov
xor
sub
cmp
jmp
jmp
jmp
dec
add
fnstsw
push
sbb
xor
pop
and
sbb
cmp
je
or
add
xor
test
stos
(bad)
dec
adc
es
aaa
pop
push
movs
out
cmps
test
mov
mov
and
pop
iret
cld
ins
or
mov
fstp
ret
fcom
aas
cmp
and
jb
sub
xor
pop
or
out
ja
ss
sbb
adc
sbb
jae
cs
and
sub
rcr
push
xor
pop
fiadd
jmp
and
add
aas
sub
fisttp
lods
mov
dec
mov
add
xchg
call
mov
pusha
adc
cdq
pop
or
out
sbb
push
xchg
pop
aas
jl
push
push
jno
(bad)
jl
and
push
int3
les
mov
pop
mov
sbb
or
push
add
(bad)
pop
jmp
js
icebp
mov
jae
or
loopne
popf
js
and
xchg
clc
push
lock
sbb
repz
mov
inc
call
lods
ror
jmp
push
cmp
lds
cld
lds
lock
add
adc
loopne
mov
jo
shl
sbb
test
or
xchg
and
imul
add
jle
stc
fstp
(bad)
mov
push
addr16
mov
push
pop
mov
jge
mov
inc
jle
xchg
cld
es
mov
adc
sti
pop
mov
clc
add
dec
sbb
aas
daa
jge
pop
push
test
jmp
test
ret
mov
cmp
outs
add
je
jne
sbb
cmc
or
cmps
outs
sub
pop
push
hlt
adc
daa
xchg
add
clc
clc
dec
pop
adc
inc
sub
add
out
es
add
aas
or
cmp
push
sub
jg
cmp
and
pop
out
and
je
sub
dec
dec
and
cs
and
mov
popf
sbb
sub
out
fiadd
loop
mov
dec
jl
add
mov
dec
adc
loop
dec
push
jl
mov
add
push
adc
out
mov
data16
sbb
(bad)
xchg
retf
adc
inc
sub
mov
sbb
mov
mov
in
enter
std
mov
xor
dec
lahf
cli
mov
inc
dec
sti
popa
cld
gs
and
mov
stos
sti
cli
arpl
loop
leave
cli
mov
es
pop
xchg
dec
xor
jb
jbe
mov
sbb
cmp
je
adc
in
clc
add
mov
and
xor
or
sbb
xor
adc
mov
sub
ja
stc
sub
mov
push
cmp
mov
js
sbb
push
add
mov
mov
push
mov
push
jp
pop
and
dec
inc
xchg
mov
adc
sbb
adc
ins
cdq
mov
imul
std
mov
ror
add
adc
sbb
xchg
movs
lea
jnp
scas
xor
or
mov
jge
bound
inc
dec
jg
jg
gs
or
push
pop
lods
xor
inc
mov
push
sub
sub
jnp
cld
es
xor
mov
(bad)
ins
cwde
adc
mov
mov
push
add
pop
mov
or
ret
movs
(bad)
and
mov
inc
xor
xchg
retf
xchg
test
loopne
push
cld
fsubr
arpl
mov
push
mov
pusha
in
mov
popa
pop
sub
xchg
sub
cmp
cmp
cld
mov
js
push
sub
sbb
xor
inc
inc
mov
dec
(bad)
jmp
test
push
inc
das
jg
test
test
jle
mov
cmp
mov
cmp
jae
pop
xor
xor
shl
pop
movs
mov
push
das
xchg
rol
mov
or
addr16
test
cmp
in
inc
movs
cmp
shl
cmp
adc
sub
mov
cmp
inc
or
lods
mov
or
cmp
sar
jo
rol
movs
push
cwde
pop
movs
adc
mov
data16
cmp
sbb
lea
int3
xor
adc
ins
dec
jecxz
fisttp
jne
push
test
push
neg
test
mov
jp
dec
mov
add
pop
sbb
cmp
xor
dec
sbb
ficomp
push
jae
push
add
iret
das
test
add
xchg
sbb
ror
dec
or
push
xor
lock
inc
iret
pop
clc
adc
dec
sub
sub
and
and
lahf
add
out
dec
je
daa
outs
xor
mov
mov
lods
clc
jmp
xor
xor
je
add
clc
sti
ss
popa
ins
pop
sbb
xor
outs
push
mov
sub
hlt
adc
inc
out
outs
jmp
sbb
loopne
ret
(bad)
add
lds
xchg
and
js
inc
cmp
fsubr
xlat
je
mov
nop
push
pop
leave
test
and
pop
dec
cmps
test
test
dec
mov
push
mov
stos
sbb
mov
add
ficom
sub
test
loopne
fld
jo
adc
fmul
and
mov
adc
hlt
cwde
add
mov
or
mov
frstor
cmp
adc
mov
repnz
(bad)
mov
mov
outs
pop
pop
xchg
push
sbb
shr
mov
push
or
push
adc
mov
pop
ret
mov
and
movs
fsubr
add
jae
or
xor
mov
add
sahf
dec
nop
add
xchg
and
push
test
pusha
ror
movs
jl
sub
cld
lods
cmp
sbb
or
add
and
ror
fdiv
mov
icebp
xchg
nop
or
movs
mov
mov
fs
cmp
push
imul
fcom
mov
in
scas
rcr
scas
push
and
pop
mov
push
jl
jmp
je
test
pop
lods
sbb
pop
add
dec
(bad)
lock
adc
js
loopne
test
cmc
lea
push
movs
rcl
mov
adc
data16
or
lahf
stos
call
(bad)
xor
push
loope
mov
dec
mov
bound
jbe
imul
mov
in
test
and
int3
push
and
mov
add
mov
out
in
pop
or
test
add
add
or
jno
mov
mov
sub
cmp
(bad)
mov
inc
scas
mov
(bad)
pop
sub
adc
fistp
fnstenv
adc
add
dec
shl
enter
stos
or
pop
push
adc
(bad)
int3
mov
or
popa
adc
cdq
dec
and
and
mov
cmps
pop
push
mov
cli
fisub
cmps
or
xor
push
in
outs
test
popa
pop
inc
sbb
push
cmp
mov
in
adc
test
mov
inc
sbb
jmp
adc
fcom
clc
ja
jno
mov
lea
xor
pusha
and
or
rol
and
pop
inc
jmp
test
ss
or
sbb
dec
push
pop
pop
test
mov
jmp
imul
push
bound
or
sbb
jmp
jns
or
dec
hlt
add
je
cmp
dec
add
cmp
enter
cld
sub
(bad)
pop
xor
adc
add
dec
dec
adc
ins
mov
adc
add
dec
mov
jecxz
in
(bad)
add
fcom
or
jb
xchg
repnz
xchg
dec
push
xor
stc
pop
inc
cmps
call
push
inc
enter
out
jl
popa
push
enter
and
mov
push
nop
or
js
inc
dec
and
add
and
inc
add
(bad)
and
icebp
push
jno
nop
or
mov
dec
xchg
aas
pop
lods
nop
outs
xchg
sbb
mov
enter
and
sub
loop
adc
pop
adc
(bad)
add
mov
dec
cs
dec
test
hlt
std
push
jmp
loope
lock
mov
or
jmp
or
inc
loopne
or
and
pop
cli
cmp
ret
jp
sub
mov
cdq
loopne
cdq
inc
or
inc
sub
add
in
test
clc
jl
or
cmps
add
pop
add
pushf
or
xor
dec
adc
sub
fcom
mov
add
mov
pop
sub
inc
mov
(bad)
cld
lahf
mov
or
push
adc
add
mov
dec
sub
int
inc
ret
dec
pop
inc
mov
mov
stos
mov
fistp
cmp
push
je
sbb
adc
mov
mov
repz
lock
ins
cmp
pop
jbe
callw
jno
data16
xchg
sbb
out
dec
mov
and
adc
dec
psraw
push
aad
xor
pusha
icebp
lea
push
pop
dec
jmp
test
inc
push
add
push
mov
mov
(bad)
mov
mov
xchg
sbb
lods
cmc
mov
cmc
int3
and
mov
ss
mov
aas
nop
in
repnz
ins
adc
das
mov
jb
in
cmc
in
cmc
in
repnz
push
cmc
in
test
add
fsubr
jns
fadd
inc
repnz
inc
in
push
jns
adc
add
dec
add
fcom
adc
cmc
in
xchg
in
lods
or
adc
adc
push
adc
pop
dec
xor
adc
shr
ret
and
or
mov
cdq
push
cld
cs
loope
and
fistp
sbb
and
and
and
mov
sbb
je
xchg
push
test
mov
dec
outs
add
stc
mov
in
call
xchg
add
mov
dec
call
xchg
fmul
(bad)
jmp
cmp
or
jmp
pop
add
ds
jmp
idiv
fwait
sub
mov
and
add
add
jae
dec
add
jg
xchg
adc
addr16
cli
jl
(bad)
fld
inc
pop
push
and
or
jae
out
push
test
inc
mul
inc
cwde
jnp
xor
push
sar
inc
push
cmp
call
cmp
lods
imul
loopne
sbb
out
jbe
mov
sub
lea
in
push
or
jmp
inc
je
fnsave
adc
sbb
xor
sub
xor
and
movs
enter
cs
ja
cmp
sub
adc
shl
fimul
add
dec
loope
push
add
sbb
mov
or
add
or
push
enter
div
dec
adc
arpl
or
sbb
cwde
mov
rol
stc
sub
leave
aam
and
jb
push
aas
pop
mov
jle
lahf
xor
add
pop
(bad)
nop
imul
dec
(bad)
and
sbb
and
jg
add
inc
sbb
and
pop
lea
aaa
ret
fild
cmp
pop
enter
outs
adc
push
stos
fild
pop
xor
xor
clc
and
das
retf
aas
lods
pop
inc
or
pop
int
or
dec
inc
xor
popa
add
fmul
ja
retf
call
outs
jno
retf
cmp
inc
sub
or
mov
imul
or
adc
dec
jno
inc
add
fadd
add
mov
and
or
lahf
push
or
aam
leave
ja
jg
add
adc
and
pushf
or
out
pop
push
push
es
push
std
push
std
jle
mov
jge
rep
pop
lea
jge
mov
iret
sbb
jns
mov
test
mov
repz
inc
(bad)
mov
mov
lea
lds
push
mov
pop
sbb
cmp
(bad)
jo
xchg
mov
pop
mov
and
xchg
mov
adc
add
inc
mov
lea
ret
out
les
xchg
cmp
push
aam
in
mov
mov
dec
inc
add
add
lds
cs
lahf
add
hlt
call
fcom
dec
sbb
ret
and
adc
ror
or
pushf
or
dec
mov
dec
mov
mov
inc
fcomp
aam
aam
mov
jbe
mov
retf
mov
cmps
xor
or
sbb
push
dec
mov
or
xor
adc
mov
push
xchg
cld
(bad)
fcom
lods
push
test
stos
pop
icebp
push
push
es
mov
mov
push
pushf
dec
mov
cs
dec
mov
sub
fcmovb
pop
or
addr16
sbb
mov
mov
dec
jecxz
or
shr
int3
push
fdiv
jmp
rol
rep
xchg
cmp
pop
mov
rol
shl
cmp
enter
add
add
sbb
pop
xchg
cmp
pop
xor
pop
sub
mov
and
mov
aad
add
adc
mov
inc
and
sbb
scas
mov
in
sahf
jg
push
jecxz
adc
mov
xor
push
dec
pop
or
out
shl
jno
push
jge
dec
pop
and
sbb
inc
ror
pop
pushf
mov
mov
or
push
add
jg
and
xor
add
sbb
(bad)
or
sub
add
pop
nop
iret
inc
push
in
pop
mov
add
cdq
sbb
fisubr
hlt
jmp
pop
cmp
data16
adc
cmp
inc
push
lods
lock
adc
and
cmp
mov
inc
push
(bad)
and
add
mov
lahf
adc
shl
cmp
inc
and
and
ja
lea
mov
mov
dec
mov
ret
adc
adc
dec
scas
push
in
adc
lahf
mov
pop
sbb
in
call
in
add
hlt
jmp
sub
add
add
pop
adc
in
push
or
fmul
mov
mov
push
sti
or
mov
and
je
sub
sbb
or
mov
xchg
add
test
mov
frstor
and
rol
jo
cmp
sbb
pushf
mov
ss
cmp
push
or
jb
(bad)
jno
push
inc
mov
fadd
lock
pusha
push
in
xor
inc
fdivr
rcl
dec
aam
ins
int3
and
cmp
and
les
idiv
lea
jmp
pop
sub
or
rcl
inc
and
jecxz
inc
cmps
sbb
and
cwde
rol
jne
mov
mov
and
jbe
ror
xor
inc
or
jge
xor
jecxz
inc
dec
or
sub
and
dec
mov
test
adc
inc
leave
cmp
pop
adc
daa
jl
push
xor
loopne
add
mov
jmp
inc
adc
mov
les
mov
or
add
add
dec
pop
sbb
and
or
push
xchg
lgdtd
fcomp
mov
jg
and
and
cmc
add
mov
mov
mov
lahf
lods
jle
adc
sbb
add
push
movs
leave
cmp
mov
inc
pop
and
jmp
jbe
pcmpeqb
addr16
sub
jo
jbe
mov
lds
mov
shl
movs
adc
in
add
ss
sbb
pop
xchg
call
push
push
aam
dec
in
xor
or
and
cwde
sub
dec
clc
(bad)
add
xor
loopne
and
mov
jg
ja
ret
sbb
in
sar
cwde
lea
cmp
pop
push
and
fild
mov
dec
cmp
lods
jbe
adc
xor
jle
mov
mov
lea
push
(bad)
ds
push
cmp
sbb
(bad)
pop
arpl
xor
cmps
mov
add
add
int3
fcom
out
(bad)
neg
jl
push
ja
lahf
cwde
cmp
inc
ds
sbb
(bad)
leave
fbld
dec
push
cmp
lds
sbb
or
pop
push
outs
pop
sub
cmps
hlt
hlt
nop
dec
cmps
xchg
add
push
es
aaa
inc
push
adc
int3
stc
fst
xchg
movs
cld
fs
(bad)
push
(bad)
or
or
outs
or
hlt
lock
push
mov
jmp
int3
push
dec
leave
cmp
dec
jmp
push
push
mov
push
cwde
ss
arpl
xor
pop
in
inc
or
(bad)
jmp
mov
mov
mov
mov
das
fdiv
jo
jbe
bound
mov
jl
mov
inc
sub
xor
mov
imul
(bad)
icebp
sub
sub
xor
add
dec
cmp
jo
outs
or
aam
in
or
sbb
adc
repz
int3
xchg
lods
pushf
xor
rcr
shl
mov
xor
lea
mov
lea
loopne
inc
or
mov
push
push
push
mov
cmps
daa
mov
add
push
cmp
sbb
ss
call
into
ret
sub
hlt
push
cli
mov
loope
sbb
xor
dec
fst
xchg
ficom
jl
cmp
xor
jbe
je
out
sbb
cmps
(bad)
pop
and
je
xor
cmc
aaa
sbb
fnstcw
cmp
cmp
push
dec
add
pushf
push
aas
add
cmp
cli
sbb
clc
out
sub
inc
loope
cmp
or
inc
jg
pop
pop
pop
mov
pop
aad
jl
pop
mov
fstp
add
ins
iret
mov
sar
mov
mov
call
mov
push
ja
pop
pop
lock
xor
jecxz
lock
mov
pop
pop
pop
push
ret
stc
fist
aas
cmps
mov
fcmovu
push
mov
add
or
xchg
sub
mov
icebp
xchg
or
cli
int
or
or
or
ret
cmovbe
dec
push
xor
push
cdq
enter
mov
inc
add
pop
sbb
in
cli
xor
and
adc
mov
dec
push
loop
cmp
inc
sub
xlat
js
fidivr
in
and
or
jo
xor
jb
mov
imul
ret
iret
enter
cmp
add
inc
add
add
(bad)
pop
cmps
and
mov
push
jmp
add
std
outs
loope
or
and
or
(bad)
hlt
push
push
retf
call
scas
add
push
mov
add
pop
cmp
call
jl
pop
mov
pop
out
nop
mov
div
std
push
push
dec
addr16
fadd
add
dec
push
loop
sar
mov
add
lock
inc
imul
push
push
adc
mov
rcr
fdivr
ins
push
test
add
pminsw
mov
ins
fadd
pop
push
ins
pop
xor
or
imul
jbe
cmp
data16
addr16
js
std
jmp
mov
push
mov
jg
push
sbb
lea
cmp
ja
sub
sbb
or
sub
adc
jne
arpl
aas
push
pop
and
pop
adc
push
cmp
sar
hlt
aas
pop
cmps
jg
(bad)
movzx
movzx
and
outs
mov
sar
sub
(bad)
mov
mov
mov
mov
pop
jmp
and
or
add
xor
hlt
inc
clc
into
push
push
xor
xor
adc
push
sbb
jno
and
sub
sahf
add
ror
cld
adc
adc
(bad)
std
shl
or
pop
pop
pop
leave
stc
lahf
jb
lods
dec
call
dec
inc
push
push
or
mov
adc
push
jmp
xor
clc
mov
and
and
std
inc
test
je
pusha
test
je
mov
mov
cmp
inc
or
adc
cmp
lock
adc
push
bound
test
je
push
push
hlt
not
loopne
or
pop
jmp
cmp
pop
loope
push
aaa
mov
pop
je
enter
out
pop
push
fs
add
retf
push
pop
push
push
push
xor
jl
push
add
jns
stos
dec
push
cdq
pop
dec
push
pop
add
lea
repz
dec
xchg
js
sbb
pop
loopne
ror
pop
es
pop
pop
scas
cld
fbstp
sub
pop
mov
repz
sar
or
inc
or
jl
inc
pop
pop
shl
aad
fisttp
lea
test
js
xor
xchg
and
imul
fisub
mov
add
cmp
popa
je
mov
jg
xor
mov
ins
repnz
add
test
mov
sbb
(bad)
cmp
jae
mov
jge
mov
xor
retf
movq
jl
gs
push
out
mov
jp
or
xor
clc
cmp
cwde
jecxz
punpckhwd
jno
les
jnp
icebp
lods
inc
les
les
cli
push
sub
inc
mov
out
and
and
cmp
sbb
cmp
sub
and
sub
iret
sub
mov
cs
out
(bad)
in
inc
mov
and
inc
dec
mov
mov
dec
ror
or
xchg
std
adc
ja
inc
stc
mov
leave
mov
js
or
push
pushf
(bad)
add
adc
adc
dec
xor
fmul
ret
cdq
mov
or
adc
retf
and
adc
shl
or
jb
xor
ficom
jmp
js
lods
cmc
cmc
or
ins
xlat
cvttps2pi
and
sub
mov
jp
adc
cmp
jnp
dec
nop
inc
or
mov
cmp
outs
dec
in
or
and
mov
adc
jl
sbb
adc
jg
mov
xor
shl
inc
cmp
jg
pop
jne
pop
sub
mulps
cmp
jge
mov
add
inc
test
push
int3
cmp
push
sub
add
jg
xor
adc
mov
iret
add
jne
xor
(bad)
mov
mov
push
push
fisubr
add
adc
je
lock
jle
mov
or
inc
nop
pop
cmp
mov
ss
add
dec
dec
xor
jmp
test
in
stc
mov
sub
cld
scas
outs
or
mov
lea
jmp
lea
data16
test
inc
call
retf
mov
or
or
nop
sub
sub
push
fadd
sub
or
sbb
ror
fs
push
sub
pop
add
jmp
xchg
mov
aad
fiadd
mov
or
push
stos
pop
jns
mov
xor
cs
push
aas
in
mov
cmp
add
or
fmul
iret
sbb
mov
mov
jb
dec
or
jp
pop
sub
add
push
loop
(bad)
inc
ins
push
pop
arpl
ins
add
out
or
out
add
imul
test
movs
mov
ja
movs
sbb
cmp
mov
cmps
test
loop
mov
adc
add
mov
xor
fwait
iret
out
pop
jmp
or
inc
mov
jne
cmp
adc
jbe
cmp
ret
mov
ins
shl
ret
mov
imul
and
add
outs
xor
(bad)
es
sbb
mov
pop
mov
mov
or
xchg
lahf
push
and
and
rcr
loope
add
fidiv
mov
scas
inc
adc
add
sub
mov
(bad)
push
adc
std
fbstp
inc
pop
pop
ret
mov
mov
pop
inc
sahf
bound
pop
xchg
bound
cli
dec
sbb
or
and
test
test
push
scas
jle
add
jg
and
or
icebp
pop
stos
xchg
mov
add
sar
xchg
fidiv
retf
mov
sub
or
movs
and
(bad)
pop
mov
mov
add
xor
xor
pop
add
int3
jle
cs
xor
in
and
dec
inc
cdq
data16
mov
stos
es
ss
sub
ret
adc
or
xchg
cld
sub
(bad)
jg
push
push
mov
adc
jl
or
ror
jbe
cmp
jb
aas
bt
rep
cwde
sub
cmp
int3
cmp
call
mov
pop
or
push
dec
lock
mov
sbb
cmps
test
and
ja
(bad)
xchg
add
add
imul
jmp
pop
lea
and
jae
movq
push
lods
jge
sub
or
(bad)
cvttps2pi
push
arpl
outs
xlat
mov
cmp
add
dec
hlt
inc
hlt
push
(bad)
idiv
pop
adc
sub
xor
in
outs
push
cmp
(bad)
jg
sbb
ret
push
fiadd
sbb
in
outs
and
xor
ins
sbb
add
enter
mov
or
xchg
dec
or
push
mov
enter
cli
jmp
sbb
add
js
imul
jg
dec
sbb
adc
call
mov
add
mov
aas
inc
loopne
jne
shr
and
mov
jb
rep
jp
cmp
(bad)
mov
ja
je
add
xor
push
jns
(bad)
enter
or
sub
scas
std
inc
and
mov
mov
mov
mov
or
scas
adc
(bad)
mov
or
aaa
dec
add
mov
dec
inc
add
add
or
pushf
push
xchg
push
mov
jns
out
jl
ins
mov
mov
cmp
(bad)
in
call
iret
repz
hlt
hlt
clc
clc
lods
or
repz
push
mov
clc
fld
xor
retf
lock
ret
nop
inc
pop
popa
mov
pop
sti
and
ret
push
and
push
lea
jl
adc
or
into
mov
out
push
cmp
fst
inc
xchg
stc
sub
pop
or
mov
mov
mov
add
mov
add
push
adc
inc
push
out
push
add
lods
pop
push
mov
cmp
pop
add
push
push
repz
or
mov
or
push
sbb
repz
and
xor
dec
cmp
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
inc
xor
inc
or
pop
cmp
mov
test
pop
adc
and
inc
jecxz
dec
pop
push
mov
je
outs
pop
or
rol
rol
pop
je
cmp
nop
dec
push
rcl
mov
push
pop
lods
jg
push
dec
and
push
jg
sti
jl
lods
shl
or
jbe
jle
xor
es
jg
jg
jo
mov
pop
mov
or
mov
jne
pop
movs
add
pop
lea
or
push
out
inc
out
and
out
xor
cmp
mov
mov
test
mov
xor
je
add
ins
inc
inc
push
idiv
mov
add
aas
and
push
mov
retf
ret
cmp
pop
shr
dec
pop
or
bound
fs
inc
jmp
sub
clc
aaa
movs
scas
dec
nop
out
imul
add
add
xor
in
das
fcomp
pushf
inc
pop
and
ins
inc
mov
inc
in
inc
jl
test
int3
inc
sub
add
aas
pop
inc
jnp
adc
dec
or
push
iret
repz
xor
and
adc
pushf
pop
inc
test
pop
inc
inc
push
push
jl
inc
aas
and
jns
hlt
inc
movs
inc
mov
inc
pop
nop
or
sub
push
inc
add
inc
adc
hlt
inc
fisubr
repnz
inc
mov
or
repz
repz
mov
xchg
aas
inc
adc
outs
jno
inc
fiadd
sbb
inc
aas
push
cmc
inc
adc
pop
push
push
mov
push
pop
movs
loope
inc
or
add
add
pop
xchg
sbb
cmc
sbb
pop
inc
pop
xor
add
lock
sbb
xor
push
test
mov
jo
lock
nop
mov
(bad)
xor
mov
aam
leave
jne
enter
pop
sar
dec
pop
in
xchg
fld
out
aaa
sub
aam
adc
and
sar
or
push
lock
mov
out
out
inc
add
mov
loop
in
and
cwde
outs
imul
xchg
lock
adc
cmp
je
call
jo
jg
js
add
into
in
loopne
add
xchg
add
mov
push
mov
je
mov
cmp
js
push
popa
(bad)
cmps
sahf
dec
fs
adc
push
pop
mov
inc
mov
xchg
or
ds
add
mov
fs
or
push
add
xor
and
loopne
ficomp
add
fmul
dec
or
fld
and
add
shl
or
cmp
cwde
jne
in
or
mov
cmp
rol
or
mov
xchg
xor
call
push
inc
ficomp
mov
pop
mov
hlt
fdivr
addr16
sub
lea
xor
(bad)
test
mov
inc
mov
xor
add
cld
fadd
jb
push
push
mov
retf
jmp
mov
adc
ds
sar
pop
ror
mov
jno
jg
dec
add
mov
xor
cmp
pop
mov
rol
pop
mov
xor
mov
sbb
add
mov
pushw
jecxz
xchg
hlt
sub
mov
lea
fcom
mov
les
cmp
adc
mov
sub
cmp
xchg
mov
add
cmc
push
leave
test
setg
lea
inc
mov
fwait
or
jle
inc
add
repnz
add
into
retf
push
dec
add
adc
xchg
cmps
cdq
sbb
inc
rol
lock
dec
xor
cmp
je
sub
and
pushf
adc
or
daa
nop
addr16
out
add
mov
imul
pop
or
mov
jns
or
push
or
in
cdq
inc
xor
xchg
sub
or
or
movs
pusha
and
jb
pop
and
and
and
in
movs
push
(bad)
setl
dec
jle
adc
add
adc
push
dec
and
and
dec
adc
push
in
repnz
adc
push
push
push
dec
and
adc
call
or
adc
and
add
adc
dec
and
push
push
jge
pop
call
sbb
nop
inc
sbb
sbb
add
push
sbb
daa
nop
sbb
add
sbb
add
sbb
adc
fs
add
push
or
sbb
in
cdq
inc
pop
pop
pop
sti
call
pop
sub
add
add
cmp
jae
out
js
repz
pop
pop
ja
lds
inc
or
sbb
in
ins
xor
jecxz
in
push
inc
es
in
out
out
mov
out
movs
sub
call
push
call
or
jmp
sbb
inc
call
jns
adc
mov
in
inc
in
in
add
sahf
retf
or
out
out
or
lock
fs
icebp
xchg
icebp
enter
cld
add
repnz
adc
add
repz
cmp
cmp
jmp
cmc
cmp
dec
mov
inc
neg
jae
add
xchg
push
sbb
clc
clc
repnz
fdivr
jmp
stc
enter
int
sub
test
adc
jo
cmp
jne
cld
enter
pushf
adc
fdivr
cmp
add
cmp
inc
(bad)
dec
or
push
or
or
mov
sbb
inc
jecxz
shl
cmp
mov
pop
cmp
in
cwde
xchg
es
push
movs
test
out
out
mov
loopne
push
fild
and
push
add
xchg
push
add
push
sub
fadd
lods
(bad)
jmp
mov
inc
sub
dec
push
sub
inc
out
out
mov
jmp
or
inc
lock
dec
rol
push
sub
lods
std
repz
sub
hlt
inc
hlt
pusha
mov
cmp
div
adc
add
div
jmp
mov
push
lds
push
mov
retf
pop
jge
sti
sti
and
ins
inc
sti
jmp
add
cld
arpl
or
(bad)
out
pop
cwde
inc
out
inc
push
dec
in
or
xor
push
push
add
adc
push
loop
jns
adc
xchg
sti
jecxz
jecxz
pop
add
inc
and
mov
jae
dec
rcr
retf
or
out
(bad)
cli
out
jge
leave
sub
cli
mov
adc
xchg
cli
jmp
jmp
sbb
int
cli
adc
dec
xor
dec
in
stc
out
out
out
jmp
sar
out
int
jge
leave
scas
stc
lea
int
mov
repnz
jmp
cmp
int
stc
idiv
retf
stc
mov
cmc
sar
ins
mov
div
test
mov
int3
inc
dec
xor
test
pop
cmp
cli
xor
push
movs
cli
cli
jmp
xor
sub
dec
int
xchg
push
mov
(bad)
data16
imul
imul
or
inc
leave
sub
sbb
push
lods
adc
mul
sub
push
mov
pop
in
jmp
jmp
dec
int
mov
lods
sub
or
and
jmp
scas
jmp
iret
xor
in
in
leave
cmc
pusha
add
push
in
in
in
movs
cmp
in
jp
mov
pop
sub
test
xor
icebp
icebp
dec
mov
push
icebp
mov
jno
repnz
loop
mov
jmp
rol
pop
sbb
cmc
cmc
cmc
movs
inc
or
pusha
test
dec
hlt
lods
sub
in
add
stc
stc
add
repz
push
aam
and
adc
xlat
dec
lods
sub
pop
adc
dec
inc
inc
out
jle
ins
push
pusha
js
les
loopne
std
int3
inc
fbld
cmps
rcl
xor
lock
test
sbb
inc
and
enter
add
dec
sub
add
inc
stos
(bad)
jne
js
cmps
loopne
adc
or
sti
jns
fadd
cmp
jmp
xchg
movs
cs
adc
jae
bound
and
stos
adc
dec
push
push
xor
pop
dec
push
push
int
mov
cdq
pop
into
pop
mov
mov
repz
sbb
pop
cmps
fldcw
dec
mov
push
or
jl
int
dec
not
jno
pop
cmps
stc
mov
pusha
movs
push
(bad)
fcmovb
dec
(bad)
or
mov
xor
sbb
pop
div
outs
add
push
mov
xor
xor
jmp
imul
test
je
push
sti
outs
push
or
test
mov
pop
pop
cs
jecxz
call
sub
push
or
push
mov
pop
movs
inc
xchg
sbb
(bad)
cld
push
stos
test
sbb
imul
sbb
je
ret
sbb
pop
push
cmp
nop
inc
adc
lahf
mov
push
add
cs
push
mov
push
push
pop
mov
mov
rcl
sbb
mov
mov
inc
out
xor
jne
pop
mov
mov
cld
outs
pop
iret
pop
and
shl
ja
push
push
mov
push
jb
pop
loopne
dec
bound
push
cmp
int3
add
ss
loope
loopne
outs
es
pop
cmp
push
arpl
std
bound
out
sbb
movs
pop
jmp
inc
(bad)
pop
dec
jl
xchg
or
shl
fidiv
adc
les
sub
mov
rep
jmp
dec
cmp
pop
ret
pop
mov
jb
neg
mov
or
ror
sahf
outs
mov
jne
mov
cmp
ror
adc
scas
push
rep
imul
mov
or
out
pop
ret
or
retf
add
xor
add
clc
sete
icebp
call
cs
xchg
ror
adc
pop
push
sub
pop
into
ins
rol
dec
adc
pop
pushf
and
lea
sbb
in
add
dec
clc
mov
and
sub
or
push
sbb
data16
(bad)
je
add
jge
or
push
sbb
imul
jmp
movs
mov
shl
mov
sbb
adc
inc
pop
mov
sub
push
cmp
jge
add
xor
push
int3
fstp
popf
test
and
mov
sbb
sbb
shl
mov
mov
lea
cmp
mov
(bad)
jnp
shr
inc
gs
mov
dec
outs
xchg
jnp
and
(bad)
(bad)
das
test
cmp
(bad)
sub
sar
push
add
mov
dec
add
mov
out
add
push
test
dec
pop
fist
addr16
sbb
popa
pop
fisttp
cmc
test
sbb
jecxz
addr16
push
mov
stos
(bad)
fcom
arpl
sbb
call
inc
jecxz
push
jne
icebp
(bad)
or
push
loopne
jne
(bad)
jbe
sbb
inc
or
jne
pop
mov
shr
push
(bad)
in
sar
cli
cmps
add
push
add
stos
movs
js
out
inc
and
jne
push
and
loop
loop
test
inc
and
je
add
std
das
inc
and
dec
add
push
or
mov
stc
inc
jmp
mov
pop
sbb
popf
pusha
and
jb
in
mov
hlt
or
call
inc
cmp
inc
adc
pop
imul
movs
adc
jecxz
scas
fbstp
(bad)
div
cmp
ja
xor
scas
sti
neg
shr
xchg
mov
xor
push
mov
dec
sbb
add
shl
inc
test
sub
loop
je
mov
pop
xor
in
sub
push
and
frstor
adc
dec
or
push
fadd
jo
lock
jb
into
(bad)
adc
pop
push
xchg
aam
jo
jbe
or
jne
ins
pop
mov
cdq
xor
leave
cld
movs
xchg
aam
loop
mov
out
jecxz
jbe
ja
pop
add
sub
sar
add
mov
push
test
jmp
pushf
dec
xchg
push
jmp
mov
adc
hlt
sub
pop
adc
out
and
cmp
rol
mov
cmc
xchg
hlt
push
cmp
sub
ret
add
inc
rcl
mov
jmp
popa
test
adc
inc
outs
enter
cmp
xchg
(bad)
iret
idiv
shl
cld
inc
pop
lock
and
dec
rol
jb
retf
test
mov
mov
push
repnz
cld
repz
or
loopne
jle
call
pop
into
inc
jle
push
xchg
shl
add
inc
mov
dec
and
fisttp
sub
sbb
jmp
test
and
push
nop
out
ds
arpl
mov
push
dec
popa
push
and
pop
ret
sub
push
add
or
mov
cli
xor
retf
or
adc
ins
cmp
call
mov
nop
inc
cmp
push
movs
mov
inc
jmp
cmp
cmp
punpckldq
shl
mov
or
sub
cs
pop
les
leave
sbb
aas
popa
scas
aas
add
inc
cld
or
and
aam
fiadd
sbb
pop
pop
add
push
ror
push
add
daa
mov
push
sub
outs
cmp
mov
or
fdiv
adc
pop
pop
mov
and
out
mov
test
mov
test
adc
test
mov
mov
jl
push
jne
pop
push
ret
push
in
pop
xor
xchg
mov
or
and
test
cwde
or
cmp
mov
das
lds
into
push
add
mov
push
mul
and
mov
in
jo
push
outs
jp
loop
cmc
pop
jo
push
inc
pop
inc
add
es
jecxz
xor
jmp
or
add
sar
dec
fidivr
cmp
retf
and
add
cmps
push
push
inc
ss
ds
push
pop
or
rol
cmp
push
jecxz
push
push
inc
adc
test
and
shl
pop
cli
aas
mov
pop
mov
sub
mov
jecxz
add
pop
dec
pop
sbb
sub
je
std
pop
pop
pop
jmp
adc
jbe
jb
sub
and
hlt
or
loop
clc
pop
sbb
aas
push
test
xor
and
bnd
push
sub
inc
mov
loope
int
jge
(bad)
jne
data16
std
pop
pop
nop
jecxz
pop
or
sbb
xchg
and
push
pop
or
repz
pop
rol
jne
stos
add
dec
neg
cmp
and
jno
jge
loop
pop
adc
xor
mov
(bad)
lea
cmp
inc
aam
ins
push
mov
pop
div
je
push
shr
(bad)
mov
adc
cmp
dec
or
push
sub
inc
xchg
dec
mov
add
push
aaa
jne
or
out
out
inc
fcomp
add
jmp
cli
outs
sub
jg
push
push
iret
mov
pusha
pop
fcomp
ret
add
in
ror
adc
push
jb
daa
push
mov
ret
add
ret
retf
je
mov
mov
fnstenv
jne
sbb
adc
add
or
jge
or
add
arpl
shr
(bad)
jne
pop
ret
push
in
or
retf
mov
std
stc
xor
xor
inc
add
loope
jns
xlat
sub
xor
je
shr
adc
xchg
outs
mov
add
enter
(bad)
jp
(bad)
pop
or
cld
ins
adc
cmp
inc
xor
cmp
(bad)
adc
fsubr
rol
and
pop
adc
mov
adc
or
jmp
cmp
push
mov
add
stc
and
loop
cmp
movs
fst
in
lea
sbb
sbb
jg
dec
stos
push
sbb
data16
shl
add
jmp
pop
ins
fild
or
je
(bad)
jmp
dec
adc
pop
pop
sbb
jmp
cmp
or
add
cmp
jbe
pop
xor
repnz
jo
les
(bad)
(bad)
mov
icebp
rol
pushf
sub
push
push
xchg
in
int3
pop
push
xchg
inc
mov
movs
jle
bts
cmps
shl
jmp
add
ss
mov
xor
push
test
in
and
jo
xchg
sub
mov
test
push
pop
adc
add
push
push
push
or
scas
daa
or
iret
push
xchg
xor
add
stc
and
mov
and
test
mov
aam
sub
and
or
in
jg
clc
data16
lods
aam
or
in
and
add
daa
es
neg
or
je
imul
test
lock
loopne
imul
mov
and
push
adc
sbb
mov
mov
fist
push
or
pop
stos
mov
cmc
mov
push
ror
push
ror
adc
or
push
inc
into
push
jbe
jg
lods
jmp
inc
dec
dec
or
std
pop
mov
pusha
inc
into
data16
xor
inc
and
sbb
inc
jmp
jmp
icebp
push
sbb
adc
adc
and
lods
jno
fdiv
imul
sbb
sub
pop
arpl
imul
loopne
mov
jae
call
sahf
xor
dec
popa
or
add
sbb
retf
inc
add
(bad)
scas
movs
rcl
mov
scas
xor
xchg
out
push
cmp
int3
mov
mov
in
sub
ret
pop
pop
xchg
pusha
xor
xor
leave
cmp
pop
pop
mov
sbb
je
rol
into
mov
sbb
jmp
add
int3
ins
add
push
pop
push
enter
xor
sbb
fcomp
inc
push
frstor
test
in
pop
ror
pop
push
in
push
gs
ins
add
sbb
enter
xor
adc
jp
add
clc
aam
xchg
push
clc
lahf
xchg
sar
arpl
mov
add
jecxz
mov
rcr
stos
cmp
rcr
mov
jl
inc
mov
push
cmps
dec
adc
push
mov
or
fs
test
mov
(bad)
cs
sbb
mov
jle
rcl
or
fild
inc
pop
call
das
movs
push
cmps
inc
(bad)
jmp
fidivr
ins
aad
std
ja
cmp
jbe
xchg
adc
fidiv
pop
std
rcr
aam
lea
sbb
sub
call
jp
pop
addr16
push
sbb
sbb
lock
(bad)
sbb
cld
mov
pop
jae
test
std
inc
es
sub
add
cmp
lock
pop
mov
movs
cld
push
into
mov
cwde
dec
add
mov
jge
daa
push
cmp
mov
sub
test
add
popa
ins
lock
adc
lods
fwait
dec
paddsw
cmp
add
lods
das
gs
pop
sub
xchg
or
shl
adc
lods
xchg
or
shr
lock
movs
xchg
add
scas
(bad)
sbb
cmp
and
stos
jge
clc
dec
or
arpl
pop
add
cmc
jg
push
push
jmp
movs
mov
cld
adc
clc
push
mov
push
add
sbb
leave
push
outs
pop
mov
int
in
lods
jnp
add
push
push
xor
pop
aam
jb
les
push
cmp
jmp
push
mov
mov
das
test
je
and
add
nop
jo
rcr
mov
mov
daa
add
leave
rcr
sbb
add
cmp
pop
scas
gs
push
cmc
sbb
dec
repz
add
cmp
mov
in
fs
test
lods
push
or
mov
dec
lods
sbb
jge
xor
add
sub
ins
adc
sub
je
jmp
add
jecxz
test
jne
test
jp
mov
mov
mov
pop
not
mov
addr16
test
mov
and
push
sub
cmp
je
pop
jmp
call
jg
sbb
mov
push
scas
push
pusha
std
inc
dec
pop
daa
cmps
(bad)
or
jmp
push
into
add
arpl
(bad)
cmp
loop
pop
mov
push
or
js
push
sbb
enter
jge
std
pop
push
xor
cs
inc
lock
iret
jne
or
gs
das
push
or
loope
test
imul
data16
cs
mov
mov
fwait
adc
fcomp
mov
(bad)
fstp
pop
xchg
or
sbb
lds
nop
push
cmp
xchg
dec
xchg
nop
mov
push
pop
cwde
(bad)
dec
cli
data16
inc
sub
push
or
ja
cld
mov
mov
fstp
mov
inc
les
adc
inc
cmp
stos
popa
jne
jbe
sub
jae
lahf
cmp
jmp
jb
fidiv
mov
fisttp
clc
retf
sbb
sub
sar
je
jle
push
rol
in
repz
or
mov
inc
add
and
and
adc
inc
jb
lahf
add
and
leave
push
add
mov
and
or
jmp
outs
or
outs
add
dec
lods
jp
push
leave
adc
dec
jmp
ins
add
shl
div
fcomp
(bad)
out
mov
jmp
mov
xor
dec
arpl
inc
push
xor
aas
fwait
(bad)
fidivr
aam
xchg
fmul
in
mov
mov
outs
fisubr
push
(bad)
ret
jne
push
push
pop
sbb
push
vpmacsww
xchg
xor
sti
inc
or
dec
enter
sbb
fcom
in
aam
ficom
pop
jmp
pop
stos
cmp
adc
xor
jbe
and
adc
popa
std
outs
loopne
ret
mov
inc
cmp
mov
mov
aaa
mov
ja
sbb
clc
mov
or
mov
or
mov
pop
(bad)
(bad)
push
push
inc
push
sti
push
cli
dec
int3
push
setno
add
adc
pop
in
mov
sbb
or
push
jg
dec
(bad)
shl
xor
pop
out
je
mov
and
and
mov
adc
push
shr
cmp
push
jmp
cmp
jle
into
cmp
(bad)
cmp
fcmovbe
loopne
sbb
xchg
and
pop
mov
aaa
rcr
outs
jge
mov
(bad)
sti
in
sbb
sub
mov
call
cmps
mov
sbb
xchg
inc
add
mov
xchg
mov
sbb
and
clc
mov
fadd
or
xor
into
cmp
pop
call
pusha
in
push
mov
fcomp
cld
jmp
and
dec
cmp
dec
xchg
jnp
and
sbb
add
and
ret
sbb
div
pop
rcl
pop
mov
lock
mov
or
ins
lahf
aam
je
es
dec
jnp
pushf
aam
push
loopne
loope
dec
retf
in
retf
xor
pop
jmp
xchg
push
ja
mov
jae
and
aad
jl
pop
(bad)
stc
adc
inc
adc
mov
sbb
out
test
pop
xor
pop
fistp
bound
sub
inc
jmp
dec
adc
push
inc
fs
(bad)
(bad)
dec
cmp
lea
jl
addr16
das
shl
repnz
scas
add
enter
mov
or
pop
clc
cmp
cmp
push
jecxz
les
cmp
aaa
inc
add
mov
inc
xchg
movs
pop
or
ror
inc
ror
(bad)
in
adc
ret
fdivr
adc
add
out
or
fld
cmps
(bad)
cmp
ds
cmps
xchg
out
xchg
add
and
adc
icebp
fbstp
pop
push
push
(bad)
mov
loopne
inc
mov
mov
dec
and
or
cmp
jg
jne
je
shl
in
mov
xor
retf
lea
cld
adc
test
je
mov
or
repz
push
push
cmp
inc
inc
and
je
leave
in
xchg
scas
and
or
(bad)
inc
sbb
push
ret
iret
jle
push
fprem
ins
jb
pop
push
or
rol
gs
imul
mov
xor
or
shl
bound
inc
test
dec
outs
in
pusha
mov
inc
popa
jo
xchg
mov
out
cmp
cmp
mov
push
(bad)
test
inc
pop
mov
clc
shl
cmp
dec
mov
(bad)
std
add
mov
sub
cmp
inc
cmp
test
ret
sti
xchg
cdq
stos
aam
xchg
cmp
pop
movs
pop
out
and
xchg
pop
add
pop
cdq
cmp
or
and
push
test
je
pop
push
in
xchg
cmp
(bad)
ss
jb
(bad)
mov
ins
loopne
push
add
cmp
lahf
cmps
repnz
adc
or
jne
push
clc
cwde
les
push
dec
inc
sbb
push
mov
fs
and
je
dec
outs
sbb
mov
in
inc
sbb
inc
xchg
nop
dec
adc
and
jb
adc
sbb
clc
adc
xor
stos
das
ins
pop
test
in
enter
inc
cld
mov
nop
mov
push
jbe
sbb
gs
stc
rcl
or
mov
in
rcr
mov
sar
mov
mov
inc
adc
jecxz
xor
push
hlt
inc
cmp
pusha
jne
jbe
lds
sub
jge
push
adc
cmp
mov
ins
jbe
mov
mov
add
inc
or
aas
mov
mov
cmp
data16
jbe
push
push
xor
xchg
mov
ficom
push
pusha
lock
or
push
sub
ins
lock
xchg
or
cmp
push
push
push
xor
adc
or
add
and
fidiv
dec
pop
xor
cmp
shl
int3
enter
cmp
inc
cmp
jle
cmp
inc
ds
and
sbb
sbb
loop
or
pop
or
push
pusha
dec
in
retf
bound
fld
cmp
cmp
js
icebp
adc
shl
inc
fnstenv
push
lahf
jge
add
adc
arpl
push
ss
push
addr16
in
jne
push
fadd
adc
popa
prefetch
shr
call
pop
dec
inc
adc
and
dec
fs
mov
cwde
aad
nop
xor
inc
sbb
cli
jno
sbb
sbb
cmp
test
fmul
jg
mov
add
clc
cmps
jno
outs
inc
jmp
or
adc
jl
cmp
jl
mov
lock
jne
sbb
mov
or
sub
scas
dec
cmp
mov
pop
sbb
in
bnd
loope
test
adc
push
push
sbb
xor
adc
mov
mov
mov
or
gs
je
out
imul
mov
jnp
test
cmp
jle
cwde
add
repnz
outs
cwde
push
test
dec
sub
hlt
sahf
sub
icebp
sbb
shl
push
out
mov
inc
jp
imul
arpl
test
pop
test
cld
out
add
jbe
lea
dec
xor
lods
rol
fs
js
jb
push
cmp
jae
lea
sub
lea
pop
pop
or
xchg
nop
(bad)
cmp
stos
jle
xchg
mov
mov
fdivr
or
test
ret
lods
test
es
ret
or
add
jmp
fdivr
or
mov
dec
sub
js
or
in
dec
sbb
mov
shl
setp
and
int3
loopne
xor
mov
daa
dec
sbb
push
inc
nop
addr16
dec
rcl
test
hlt
adc
popa
mov
jne
mov
clc
loopne
shr
shr
or
dec
stos
inc
and
out
or
jae
stos
and
push
sahf
jns
pop
and
icebp
test
jg
push
pop
push
add
mov
or
inc
mov
or
(bad)
mov
test
jmp
inc
retf
cmp
pusha
or
dec
xor
pop
push
cmp
cmp
jne
add
dec
mov
add
sbb
repz
out
pop
(bad)
mov
inc
stos
(bad)
(bad)
test
into
fcos
ror
or
cli
xor
mov
aas
add
ret
mov
sbb
add
add
and
pushf
loopne
mov
xor
loopne
jle
dec
inc
loopne
sub
push
inc
and
test
cmps
mov
xchg
js
outs
cmp
dec
mov
test
js
fsub
xor
retf
lea
cmp
(bad)
cmp
clc
jg
stos
jle
shl
jle
sbb
pop
hlt
clc
adc
hlt
pusha
cmp
sar
add
add
mov
ja
or
out
lea
shl
sbb
mov
jecxz
inc
into
cmp
clc
lock
pop
and
add
inc
or
enter
jle
mov
and
add
shl
daa
jle
dec
arpl
jle
jo
loop
xor
in
stos
repnz
enter
lods
push
stos
cld
mov
mov
mov
inc
lods
dec
cmp
jl
ror
fistp
in
xor
sbb
cmp
in
push
and
mov
jno
add
cmp
mov
adc
or
add
mov
cmp
jg
mov
stc
jmp
lea
add
cmps
cmp
push
push
push
jle
adc
xor
dec
sub
sbb
inc
call
push
into
xchg
fs
fsubr
sbb
inc
or
pop
jo
mov
int3
test
fsub
jp
stos
dec
arpl
add
in
cmps
aam
cmp
adc
xchg
cmps
adc
mov
and
and
js
movs
pusha
dec
pop
mov
test
outs
mov
rcl
dec
pop
cld
adc
pop
or
and
outs
push
sbb
pop
jmp
jb
mov
add
mov
ja
aaa
cmp
pop
push
jae
imul
aas
add
das
aaa
jmp
cmp
cmp
ja
popf
je
xchg
push
popf
xchg
rcr
sbb
lock
jo
jecxz
add
add
xchg
pop
xchg
loopne
push
jmp
inc
aam
push
sti
test
mov
gs
jae
shr
das
xor
cmp
nop
add
jno
mov
call
adc
inc
dec
adc
sub
mov
sbb
sub
je
xchg
cmp
xor
add
sbb
inc
xchg
dec
daa
es
xchg
add
push
fisttp
inc
out
movs
jl
lods
jge
or
push
hlt
dec
xchg
loopne
jmp
or
movs
add
lds
adc
xlat
and
xor
mov
adc
pop
jmp
sbb
add
push
cmp
jb
imul
sti
cmps
jecxz
and
sub
je
cmp
add
aaa
cmp
jne
push
push
fsubr
or
jmp
inc
or
adc
aad
and
je
mov
adc
jb
cmp
jbe
push
xchg
into
push
clc
or
fstp
dec
and
pop
das
mov
and
ret
cmp
mov
icebp
and
test
lahf
push
mov
call
xchg
out
pop
push
add
ret
xchg
lock
inc
pop
sbb
shl
pop
add
call
or
adc
sbb
or
add
lock
stc
jnp
aas
lods
adc
jle
pop
or
fisttp
fsubp
add
pop
js
stos
ror
rcr
enter
add
xchg
fsub
sbb
xchg
repz
lahf
adc
dec
dec
imul
xor
and
jl
jmp
inc
sub
outs
jle
push
ror
jecxz
add
cmc
push
jp
clc
pop
xor
scas
sbb
push
mov
cmp
clc
pop
or
ja
leave
fcom
rcr
fild
stos
cmp
jge
das
xchg
pusha
cmp
je
jne
and
jmp
xchg
jno
inc
or
arpl
pop
add
or
push
cmc
xor
mov
stc
inc
xchg
sbb
jle
or
clc
mov
mov
or
icebp
(bad)
in
push
adc
push
pop
jmp
(bad)
push
pop
cmp
sbb
rcr
and
ins
mov
mov
mov
call
jne
inc
add
pop
xor
cmp
mov
clc
xor
addr16
outs
inc
pop
es
ret
mov
cmp
js
jnp
and
sub
and
pop
stos
xor
xlat
loope
mov
xor
out
add
aaa
je
and
or
mov
movs
in
cmps
jnp
pushw
adc
xor
push
add
into
popf
je
pop
pop
int
mov
xchg
add
cmps
push
adc
mov
xchg
(bad)
inc
or
add
stos
xor
add
sub
cmp
sub
mov
cmp
sbb
rcl
mov
xchg
and
jae
xor
inc
dec
xor
push
ret
out
(bad)
push
ret
push
mov
sbb
push
xchg
out
fcom
popf
test
add
lods
add
sahf
jmp
call
test
add
xchg
or
pop
adc
or
or
lahf
mul
sbb
movs
jbe
test
stc
cs
jae
push
sbb
sub
mov
mov
push
add
fistp
cmps
mov
jnp
dec
fild
in
pop
jmp
add
cmp
outs
and
call
sbb
cmp
leave
mov
or
or
cmp
and
or
test
mov
sbb
in
leave
mov
ins
or
xor
xchg
loopne
rcl
enter
jns
mov
jo
div
jl
pusha
stos
add
push
je
sbb
add
push
shl
push
push
fiadd
push
addr16
jbe
mov
sbb
mov
jb
nop
or
adc
int3
sbb
sbb
in
and
and
out
enter
and
sub
sub
xor
xor
cmp
mov
cmp
inc
mov
call
inc
cld
dec
jb
nop
retf
dec
sub
gs
add
dec
add
pop
in
and
retf
sbb
lods
adc
icebp
xchg
ins
pop
mov
enter
mov
and
add
add
adc
xchg
inc
cmp
sub
movs
push
inc
mov
and
push
mov
rcr
and
pushf
loopne
fcomp
enter
loope
add
fistp
push
sbb
dec
or
or
cmp
test
lahf
imul
pop
jo
push
lock
daa
inc
int3
dec
loopne
mov
pop
sbb
adc
add
mov
inc
xor
std
add
xor
mov
pushf
popa
pop
jmp
retf
sub
push
mov
inc
xchg
loop
add
add
push
push
fldenv
sbb
jo
daa
cmc
adc
pop
fwait
or
aas
adc
das
mov
clc
je
dec
jmp
adc
jg
sbb
and
shl
or
test
and
ret
sub
and
mov
les
cmp
inc
in
or
and
adc
enter
les
mov
push
or
and
add
test
rcr
daa
es
cmp
sbb
add
out
ins
mov
jae
push
shr
mov
mov
xor
jmp
fwait
imul
(bad)
rcr
or
jne
test
sti
std
sti
add
jb
cmp
or
cmp
add
jo
ret
out
leave
mov
in
xchg
add
xor
pop
std
sar
sub
test
jns
mov
inc
inc
pop
and
add
into
jle
xor
xor
mov
push
mov
push
je
idiv
shr
mov
jle
jle
pushf
enter
pop
mov
mov
rcr
gs
or
dec
dec
cli
aas
adc
idiv
sbb
or
mov
kxnorw
retf
call
idiv
and
aad
jge
xchg
fist
scas
lods
pop
aas
or
inc
add
rcl
mov
pop
xchg
mov
adc
unpckhps
or
xor
add
jmp
sbb
cmp
or
push
stos
push
mov
inc
movs
mov
outs
shl
and
lea
pop
jg
loope
add
mov
adc
adc
fs
push
pop
ficom
icebp
and
and
lods
arpl
ins
push
sbb
add
pop
and
sub
sbb
jmp
(bad)
clc
push
pop
push
pop
sub
mov
add
sahf
pcmpgtd
inc
mov
or
and
xchg
ror
sub
icebp
adc
js
je
push
(bad)
outs
xchg
xchg
add
and
add
sub
vsqrtsd
dec
mov
dec
hlt
add
adc
fst
out
adc
mov
cmp
and
push
fstcw
jne
ins
out
mov
adc
shr
bound
fsqrt
push
push
add
test
mov
pusha
jmp
jp
dec
lock
sub
call
mov
push
jmp
dec
sbb
jmp
sub
int3
leave
ret
fstp
fld
pop
mov
inc
xor
add
cwde
sub
fdiv
scas
lock
sbb
or
pop
hlt
adc
les
scas
add
xor
sbb
inc
push
lea
xchg
(bad)
je
shr
sbb
into
xor
sub
inc
imul
or
test
inc
add
add
adc
fs
clc
or
mov
mov
icebp
scas
or
stos
es
cmovo
mov
xchg
sbb
sbb
mov
mov
hlt
mov
(bad)
mov
inc
fst
sub
jb
cld
sbb
into
push
psubsb
int3
cmp
mov
jnp
popa
mov
mov
jp
push
stos
clc
movs
cmp
adc
in
enter
inc
pop
pop
dec
pop
xor
dec
enter
(bad)
data16
retf
rol
aaa
jne
sti
inc
and
inc
jmp
ret
jmp
sbb
(bad)
add
dec
ss
arpl
pusha
js
pop
xor
xor
nop
je
cmp
dec
(bad)
(bad)
xchg
push
ins
aad
cmc
and
pop
sar
sbb
sbb
and
(bad)
adc
jmp
aad
push
mov
pop
inc
or
popa
sub
jmp
push
pop
jae
xchg
sub
retf
add
adc
enter
jae
xor
or
sbb
clc
add
cli
add
aam
dec
daa
xchg
xchg
and
mov
xor
mov
mov
and
(bad)
pop
dec
inc
push
inc
pop
(bad)
scas
mov
inc
jl
cmp
popf
pop
add
jle
jne
add
sub
ins
inc
fs
xchg
test
movs
test
and
xchg
xchg
dec
gs
xchg
mov
mov
jmp
xor
lea
mov
mov
inc
pop
jecxz
push
pop
mov
rcl
jmp
fistp
mov
pop
dec
scas
mov
sbb
add
or
inc
in
and
dec
pop
pop
add
sub
in
enter
cmp
mov
inc
inc
inc
out
(bad)
pop
push
dec
dec
cmp
popa
mov
xchg
pop
push
mov
push
jbe
mov
sbb
push
ret
xchg
mov
dec
out
aam
lods
(bad)
stos
xchg
mov
idiv
jbe
and
sub
cmp
xchg
adc
js
mov
enter
int
leave
sbb
pop
dec
pop
xchg
sbb
outs
dec
sbb
inc
pop
or
bound
inc
sbb
xchg
pop
imul
test
sub
scas
jne
push
fistp
aaa
lock
xor
dec
jle
call
fst
sbb
sub
dec
add
in
gs
mov
xor
add
push
sub
mov
call
js
nop
xor
inc
lock
out
lock
add
push
pop
mov
xor
test
(bad)
sbb
bound
cmps
loope
stos
xchg
cli
jo
in
cmc
add
inc
ins
and
push
bound
xchg
and
jns
jge
or
jle
pop
and
popa
add
lahf
mov
mov
and
jecxz
arpl
sbb
ss
mov
mov
push
jle
test
retf
std
or
mov
cmp
jne
xchg
icebp
test
inc
xchg
dec
daa
mov
pop
out
jecxz
pusha
or
push
inc
shr
and
add
and
dec
(bad)
pop
outs
add
cdq
mov
dec
out
push
je
inc
cmp
sbb
cmps
add
pop
push
inc
out
nop
pop
je
push
and
jnp
add
movs
or
pusha
cmp
pop
pop
inc
ja
dec
rcr
(bad)
call
sbb
in
fwait
sbb
sbb
mov
and
sub
adc
adc
jbe
xchg
sar
sub
inc
mov
addr16
das
fbstp
jl
mov
adc
movs
push
cs
ins
movs
push
jb
(bad)
ror
dec
push
dec
cmp
sub
push
out
loope
stos
sub
add
and
pushf
jbe
test
loope
aam
cmps
jne
lods
cld
in
pop
test
stc
fmul
rcl
jp
test
add
sbb
rol
mov
xchg
cmps
inc
mov
cs
push
repnz
retf
in
xchg
shr
mov
icebp
sub
sbb
lods
dec
cmp
xor
imul
rol
leave
aam
sbb
inc
or
adc
sbb
and
adc
and
js
int3
fs
je
and
mov
jge
nop
sub
or
aad
clc
cmp
jb
idiv
pop
push
push
inc
push
dec
int3
push
jnp
lock
call
fdivr
dec
in
add
scas
arpl
push
sub
pushf
mov
clc
jmp
push
pushf
scas
and
xchg
and
sbb
add
mov
adc
and
jl
mov
add
inc
pop
rcl
arpl
je
sbb
into
inc
xchg
ins
push
stos
mov
jo
inc
sbb
je
pop
mov
push
adc
add
xlat
or
enter
mov
mov
rol
and
push
(bad)
or
dec
xor
inc
push
sub
add
cwde
inc
pop
jo
or
adc
(bad)
mov
mov
push
fstp
mov
or
jo
xlat
adc
jne
xchg
test
sub
inc
sub
xor
xor
and
fcomp
push
mov
sbb
add
rcl
inc
sbb
mov
aaa
retf
push
aaa
inc
lods
inc
scas
sub
add
test
fwait
hlt
xchg
call
mov
pop
dec
(bad)
jg
mov
je
pop
retf
mov
mov
(bad)
jmp
sbb
je
inc
cmp
lea
adc
mov
aad
and
inc
pushf
ss
pushf
inc
jmp
in
out
in
int3
add
movs
rol
shl
sbb
loopne
rol
fisub
mov
add
adc
push
dec
push
and
je
fcomp
icebp
cli
push
cli
daa
adc
cmp
jp
add
idiv
jg
cmp
or
mov
and
mov
and
mov
or
jle
and
mov
mov
mov
mov
mov
fidivr
or
add
push
adc
aam
add
sar
addr16
int3
mov
in
test
sar
push
and
cmp
mov
push
sti
cld
aam
mov
push
adc
retf
add
pop
je
xor
pop
or
je
mov
call
dec
test
jne
mov
dec
mov
(bad)
push
mov
and
shl
hlt
out
add
jmp
push
cwde
push
inc
add
add
jne
lea
xchg
ins
popa
inc
dec
or
pop
and
inc
loope
jp
lock
and
mov
pushf
imul
jo
or
int3
jecxz
movs
loopne
pop
add
inc
hlt
cmp
xchg
mov
repz
lods
adc
aaa
push
movsx
or
dec
bound
ror
sub
push
inc
(bad)
jmp
das
xor
inc
xor
pop
dec
js
and
mov
and
retf
fwait
inc
jmp
sbb
jne
or
mov
add
jmp
push
cmp
push
daa
sbb
in
add
sub
out
push
and
sbb
cmp
mov
or
jbe
mov
or
call
or
mov
ror
sbb
mov
sbb
mov
jne
lock
push
sub
or
test
mov
(bad)
aas
jae
pusha
cmp
test
adc
leave
add
cmp
push
xchg
das
sti
cmps
je
jg
add
jnp
fcomp
mov
jl
dec
dec
adc
unpcklps
mov
hlt
loope
sbb
mov
sub
sbb
jae
call
mov
inc
or
fld
hlt
and
add
pushf
adc
add
repnz
loope
pop
and
sbb
add
adc
or
mov
mov
pop
sti
pop
mov
test
data16
or
jne
dec
js
rol
dec
inc
(bad)
and
add
leave
mov
call
out
mov
je
add
and
cmp
xor
cmp
sbb
dec
inc
xchg
fist
cmp
pop
inc
inc
je
push
xor
jne
test
dec
jnp
pusha
and
jns
lods
and
add
or
xchg
add
jmp
dec
xor
je
mov
pop
add
pop
retf
and
and
or
or
cmps
xchg
push
sahf
xchg
xor
out
loopne
mov
stos
push
mov
pop
adc
push
jbe
or
pop
or
adc
xchg
sbb
fild
(bad)
sbb
retf
add
jg
cld
add
xor
pop
call
pop
or
lods
inc
loop
(bad)
test
test
mov
add
push
je
ja
lea
adc
add
push
push
gs
push
hlt
cld
mov
in
adc
rcr
jp
ret
dec
je
pop
popw
mov
mov
sbb
out
pop
adc
add
xchg
cmp
addr16
nop
pop
sub
nop
add
stos
push
add
or
test
out
jb
lsl
pop
mov
sti
adc
add
icebp
fwait
sub
call
mov
push
or
shl
inc
jmp
shr
cmp
inc
push
nop
neg
fdiv
sbb
mov
mov
dec
dec
in
dec
mov
dec
in
call
pop
mov
dec
mov
adc
adc
push
adc
and
mov
push
ror
iret
in
xor
int3
sub
loopne
or
inc
aas
call
stos
sub
push
jno
pop
call
push
pop
je
sar
(bad)
(bad)
mul
clc
(bad)
sub
adc
cmc
dec
cmp
pushf
imul
or
pop
mov
xor
test
dec
add
push
push
pop
iret
(bad)
arpl
test
ja
mov
mov
sbb
rol
inc
or
xchg
jmp
pop
add
pusha
sahf
inc
add
and
rcr
mov
sub
mov
je
(bad)
scas
and
add
sbb
jnp
xchg
push
mov
add
(bad)
jg
push
mov
(bad)
lahf
fnstcw
cmp
cmp
pop
mov
or
sar
pop
pop
and
cdq
es
add
mov
cmp
mov
int3
stc
std
pop
pop
xor
mov
jns
jns
sbb
mov
loopne
pushf
pop
(bad)
xchg
jbe
iret
mov
pop
test
call
push
sub
add
cmps
stos
in
fmul
popa
nop
scas
call
sahf
pop
imul
xor
in
add
loop
repz
mov
push
shl
push
push
ins
or
or
cmps
or
dec
or
into
push
and
cmc
sbb
adc
imul
mov
or
adc
inc
or
sub
mov
push
in
out
or
or
inc
push
lea
inc
and
ror
adc
div
dec
mov
iret
fistp
gs
fisttp
fsubr
inc
inc
aaa
or
push
enter
or
pop
movs
dec
push
hlt
out
pop
out
loop
in
fbld
mov
leave
push
add
fld
mov
outs
jne
pop
adc
imul
gs
jne
clc
outs
je
ins
jne
and
ja
imul
lock
dec
sub
mov
cmp
sbb
jo
cmp
push
push
add
push
add
or
push
xor
test
pushf
retf
je
push
push
cmp
cmovp
mov
or
(bad)
xor
push
in
jg
jecxz
popa
outs
dec
xor
or
cmp
mov
pop
sbb
inc
add
mov
gs
fld
cmps
dec
lods
shr
lds
imul
xor
mov
(bad)
or
movs
loopne
cli
dec
lea
pop
sbb
int3
jbe
in
or
xor
repnz
loopne
(bad)
fdiv
fcomp
int3
xchg
xchg
fbld
(bad)
in
popf
enter
xchg
xchg
les
cwde
sbb
cwde
inc
mov
fisttp
ror
push
push
and
dec
add
loopne
sbb
in
pop
ins
mov
adc
push
lock
ficom
inc
sub
push
mov
pop
dec
inc
or
add
bound
loopne
mov
jmp
push
ret
and
(bad)
fwait
add
pop
sbb
add
push
xchg
pop
xor
enter
add
lahf
adc
or
and
leave
cmp
test
neg
jl
push
and
not
add
clc
scas
call
pop
or
or
js
in
je
or
xor
xor
or
jle
dec
mov
jno
(bad)
retf
sub
mov
loop
mov
test
push
xor
jl
test
ror
arpl
inc
or
mov
xchg
or
cmp
mov
xor
hlt
add
aaa
hlt
dec
out
popf
mov
push
and
(bad)
adc
sti
fistp
rcl
push
push
gs
mov
mov
push
lahf
jle
test
(bad)
mov
pop
daa
or
jb
push
push
ja
test
dec
pop
sahf
cmp
push
xchg
cmp
add
adc
pop
lahf
loopne
int
mov
xchg
jne
jmp
pusha
mov
dec
push
jmp
add
mov
fadd
cwde
cmc
pop
add
nop
sub
je
mov
add
sub
dec
add
jmp
call
aam
(bad)
or
inc
jae
push
or
xor
dec
pusha
inc
shl
adc
pop
or
mov
cmp
cmc
leave
ror
popw
lods
mov
adc
movs
mov
outs
fidivr
out
cli
cmp
imul
pusha
popa
jo
loope
ret
das
cmp
mov
and
add
fiadd
pop
je
outs
jae
movs
add
or
xor
push
sub
pusha
jo
mov
dec
hlt
dec
aaa
jp
add
lods
fst
or
xor
out
(bad)
outs
mov
jmp
dec
std
push
jecxz
mov
inc
inc
cli
pop
pop
ret
neg
add
sub
push
mov
pop
call
arpl
aas
push
dec
int
ret
bound
pop
cld
adc
mov
sub
daa
sub
adc
lea
push
pop
aam
inc
mov
add
adc
cmp
mov
call
add
ret
lahf
or
aas
jne
cmp
mov
mov
iret
add
sbb
inc
push
xor
call
add
or
pop
push
js
sub
add
loopne
sub
inc
cmp
adc
and
mov
enter
inc
pop
push
lea
push
addr16
test
repnz
enter
mov
les
push
out
xchg
shr
sbb
retf
or
loop
add
leave
arpl
stc
(bad)
(bad)
jg
add
sbb
repz
pop
mov
test
loopne
mov
cmp
loopne
fmul
mov
test
(bad)
out
mov
jge
ins
ss
pushf
ins
lock
mov
jbe
or
lea
cmp
ja
or
mov
movsx
add
mov
dec
mov
(bad)
lods
mov
adc
mov
loope
adc
loope
pop
fadd
sub
lea
movs
mov
lea
outs
jae
mov
repnz
je
sbb
mov
or
dec
dec
addr16
add
sbb
sub
fmulp
or
fcomp
add
std
outs
cmp
jmp
or
add
jecxz
stc
sub
mov
dec
xor
cld
ror
pop
mov
fldcw
ds
jp
fsubr
mov
mov
mov
sub
rcl
enter
les
adc
pop
mov
imul
fdiv
jno
or
imul
jmp
xor
int3
dec
je
or
out
dec
out
xchg
sub
xor
(bad)
lods
and
push
push
scas
scas
cmp
lods
pusha
repnz
adc
add
mov
sbb
xchg
lods
xor
(bad)
jnp
int3
adc
cmp
outs
add
shl
cmp
fs
pop
cmp
push
mov
outs
call
movs
mov
xor
jecxz
rcl
or
in
inc
movs
dec
cmp
loopne
jg
xchg
push
mov
fisubr
mov
sar
outs
bound
test
in
bound
mov
mov
inc
jl
dec
sar
or
(bad)
cwde
rol
or
jno
xchg
xchg
inc
cmp
adc
mov
mov
shl
(bad)
dec
push
mov
mov
test
add
enter
mov
push
inc
adc
add
add
call
push
add
jne
mov
add
push
les
call
ror
cmp
je
push
repz
sar
xchg
mov
aam
and
dec
cmp
jo
pop
daa
int3
out
sahf
mov
jg
leave
je
movzx
daa
cli
call
cs
inc
push
add
call
imul
fsub
lods
test
in
jo
imul
cwde
sub
sub
mov
sbb
sahf
push
jl
arpl
leave
shl
sbb
or
fadd
out
scas
mov
jecxz
add
mov
sbb
mov
mov
punpckhwd
xor
jns
clc
and
cmp
jns
test
jns
repnz
dec
inc
sar
clc
jge
jg
int3
push
ins
test
add
lock
add
dec
mov
icebp
lds
mov
fidiv
mov
jno
fild
div
sbb
jne
adc
xchg
dec
cmp
pusha
ret
push
jae
cmp
mov
add
inc
mov
and
or
gs
pop
jecxz
cmp
ds
call
dec
loopne
adc
sub
hlt
arpl
xor
or
lds
and
in
sub
(bad)
std
sbb
adc
dec
scas
mov
adc
push
adc
sub
dec
lds
popf
push
fcom
in
pop
jae
cld
test
pusha
adc
stos
sub
pop
gs
jge
hlt
push
sbb
push
and
cmp
int3
add
loop
mov
add
mov
or
inc
push
add
jmp
adc
fld
jmp
and
ins
cdq
(bad)
sahf
dec
cld
mov
daa
sbb
add
(bad)
cmp
jg
jl
cmp
jae
neg
adc
neg
jns
test
add
test
sbb
pop
jecxz
mov
(bad)
mov
mov
repz
dec
fmul
jo
jg
aaa
inc
fild
rol
cdq
push
xchg
add
or
rcl
pop
mov
sbb
jge
jecxz
jle
add
mov
mov
xchg
push
inc
and
cmp
pusha
cmp
ss
je
loopne
cmc
fisttp
das
mov
jmp
movs
add
add
test
cmp
ret
adc
or
push
shl
sub
sub
int3
dec
ret
jmp
scas
add
and
add
jmp
inc
xor
mov
sub
push
xchg
xor
or
push
xchg
push
xor
neg
pop
sub
fwait
retf
pop
lea
es
aaa
mov
or
mov
je
xchg
add
sbb
mov
test
pop
dec
pushf
inc
lods
je
push
jns
into
dec
add
add
cdq
cld
push
push
add
inc
jnp
jp
mov
fwait
std
out
aas
cmp
fiadd
sbb
mov
loop
and
or
add
xchg
jmp
test
or
jl
jmp
mov
xchg
mov
js
xor
je
xor
mov
push
sbb
cmp
repz
test
ret
(bad)
sub
or
inc
jmp
push
shl
idiv
cmc
leave
mov
pop
rol
mov
iret
sar
inc
xchg
aam
xor
lock
imul
and
sub
(bad)
jmp
popf
add
out
push
aad
adc
sub
adc
dec
in
xchg
xor
mov
sub
dec
dec
lds
mov
push
out
xor
data16
mov
add
gs
mov
sbb
fs
test
pop
or
sub
test
adc
push
and
out
jmp
mov
mov
rol
push
test
mov
rol
or
inc
push
sti
adc
mov
add
adc
loop
sub
xor
in
push
adc
or
clc
not
push
shl
xchg
inc
or
add
test
shr
or
add
push
xor
or
pop
(bad)
sbb
mov
bound
sub
dec
sbb
xchg
call
push
push
push
scas
xor
sbb
push
in
inc
clc
out
jmp
inc
sbb
dec
iret
in
pop
adc
cmp
popa
and
aas
leave
pop
and
aad
or
or
push
adc
push
test
cli
fiadd
cmp
xchg
loopne
sub
add
pop
push
add
inc
adc
push
daa
(bad)
pop
ret
aas
add
and
out
dec
push
jge
mov
aaa
ror
push
jae
sti
fcom
test
out
movs
out
add
inc
and
xor
(bad)
arpl
rcl
mov
mov
inc
repz
add
mov
add
xchg
push
mov
sub
pop
add
lds
div
or
mov
arpl
mov
push
shl
rcr
or
in
inc
test
pop
(bad)
mov
fbld
add
aad
xor
lods
xchg
cdq
inc
js
jge
stos
add
pop
or
push
mov
(bad)
jg
mov
add
sar
cmp
mov
(bad)
mov
not
test
sbb
sbb
mov
mov
mov
or
lods
les
fnsave
push
adc
add
and
push
add
sub
scas
inc
ins
outs
arpl
test
push
pop
inc
mov
inc
inc
arpl
add
jb
dec
shl
fidivr
mov
fistp
mov
xor
xor
and
sbb
adc
xor
mov
jbe
in
sbb
push
cmp
test
mov
outs
ret
or
inc
mov
adc
pop
mov
mov
nop
jecxz
dec
aam
mov
and
pop
ret
pop
jge
ja
inc
jo
xchg
out
out
pusha
mov
push
xchg
pusha
ja
push
pop
int3
cmp
sub
dec
fnstenv
stos
dec
fild
pop
pop
adc
rol
jmp
shl
rcr
add
fcmovnb
gs
mov
lea
add
(bad)
rol
loopne
and
push
arpl
lock
dec
in
inc
pop
mov
push
clc
ret
mov
mov
frstor
jl
gs
add
inc
add
(bad)
dec
jo
lds
jp
mov
inc
retf
sub
add
push
pop
ins
push
(bad)
cmp
mov
sub
cmp
fsub
jmp
scas
push
inc
cdq
xchg
mov
cmp
sbb
fadd
or
je
mov
jo
push
in
add
inc
out
ret
mov
and
or
popf
inc
mov
mov
(bad)
fdivr
ja
sar
cmp
pop
das
bound
add
retf
sbb
xchg
aas
jae
out
sub
mov
aas
shl
int
xor
mov
inc
jge
inc
test
pusha
cdq
mov
daa
clc
push
jne
xchg
mov
inc
inc
mov
push
es
pop
push
add
adc
test
cmp
sub
pop
cmp
test
add
mov
rcr
popf
sub
aam
cmp
cmp
push
call
jne
adc
xchg
and
add
rol
xchg
push
add
outs
inc
xor
jne
push
sbb
shl
scas
sub
xor
push
cmp
sbb
mov
adc
cmc
mov
pop
pop
pop
mov
or
pop
ja
sbb
xchg
fwait
and
pop
adc
out
(bad)
sub
clc
stc
or
test
retf
jae
clc
ds
in
imul
pop
repnz
xor
cmp
add
cmps
shr
or
dec
jmp
mov
into
shr
sub
or
xlat
nop
add
ins
xchg
leave
out
je
lea
xlat
push
mov
or
cmp
push
and
lea
lods
cmps
sar
sbb
imul
iret
lock
scas
arpl
mov
sub
fstp
loopne
jne
sti
dec
enter
sub
mov
adc
xor
push
or
or
sub
arpl
pop
pop
clc
pop
ds
adc
mov
jmp
rcr
aas
push
cmc
jmp
mov
clc
pop
aad
stos
add
je
cmp
pop
xor
cmp
and
lea
sub
aas
add
scas
test
inc
fisttp
and
jno
ret
pop
adc
add
sub
fcomp
pusha
je
add
adc
adc
push
or
fwait
lds
or
test
mov
ja
ror
add
and
jno
adc
cmp
call
push
add
push
test
or
cmp
fsub
shl
inc
add
mov
mov
mov
test
xchg
rcl
inc
aaa
xor
adc
rcr
dec
call
inc
add
cmp
or
bound
mov
or
cdq
and
jp
add
add
mov
or
adc
dec
and
dec
test
in
lods
xor
push
mov
pop
retf
add
hlt
jmp
dec
lds
loopne
fimul
or
mov
mov
or
les
mov
and
ret
add
mov
mov
call
int3
pop
ret
and
add
add
dec
pusha
adc
push
out
add
hlt
out
xlat
jg
mov
out
or
or
jmp
in
loope
mov
jl
mov
loopne
in
inc
rcl
test
mov
(bad)
loopne
inc
mov
inc
add
mov
fsub
jb
inc
dec
test
cmp
idiv
inc
push
mov
(bad)
inc
lahf
ins
les
xor
ins
stos
cmp
lahf
jbe
adc
pusha
and
out
sbb
xchg
add
popf
shr
mov
pop
mov
push
data16
push
sub
mov
jnp
or
dec
retf
sub
jl
sub
std
(bad)
adc
fs
cmps
repz
popf
mov
cld
pop
fs
inc
frstor
push
mov
jb
jg
jl
mov
cmp
lock
(bad)
(bad)
enter
mov
ror
sub
sub
inc
enter
cmp
inc
and
add
push
sub
dec
sub
inc
push
ss
shl
mov
push
or
adc
ret
daa
(bad)
bndstx
out
add
or
je
dec
je
push
shl
mov
mov
inc
inc
cmp
jb
ret
cli
(bad)
lods
call
xor
call
fld
outs
cmp
xchg
not
aaa
sub
(bad)
add
adc
ja
mov
inc
xor
jae
daa
dec
pusha
and
cmp
jg
fidivr
or
inc
inc
cmp
mov
cmc
xor
jnp
pop
xchg
push
push
(bad)
arpl
xor
sub
pop
xor
clc
ja
add
test
pushf
jnp
test
in
(bad)
test
das
mov
add
inc
jne
shr
sub
cwde
neg
add
inc
sub
or
(bad)
adc
iret
pop
and
cmp
push
test
jne
jo
out
and
xor
js
xchg
cmp
jge
or
and
jecxz
pop
xchg
xchg
xchg
test
jo
dec
and
sbb
je
push
mov
inc
(bad)
adc
dec
mov
inc
adc
mov
sub
lods
sub
push
push
(bad)
test
ja
push
push
call
add
add
sub
arpl
xlat
jmp
add
add
cmp
or
xor
adc
add
por
daa
ror
sub
dec
(bad)
xchg
test
pop
mov
xor
daa
and
mov
sbb
jbe
inc
adc
push
mov
cwde
cld
test
daa
adc
test
aad
xchg
jb
xchg
dec
loopne
je
sub
or
cld
sbb
xchg
or
add
push
sbb
ins
retf
dec
test
ins
mov
push
sub
push
add
pop
and
sub
gs
mov
jle
mov
jns
jae
pop
enter
push
or
nop
test
or
push
and
inc
stc
int3
jg
or
add
clc
push
push
mov
aad
push
cmp
sub
push
push
cli
sbb
inc
inc
add
push
inc
pop
daa
or
je
add
adc
cmp
rol
inc
cld
clc
out
jno
cli
push
mov
or
sbb
adc
cs
rcl
fidivr
inc
mov
jg
cwde
push
and
retf
cmps
push
das
jl
mov
pop
push
jg
push
pop
lea
xor
jnp
or
in
push
movs
into
add
sub
jnp
push
or
sahf
jge
push
daa
ret
adc
jne
mov
mov
nop
xchg
arpl
loope
outs
xchg
movs
(bad)
xor
pop
in
push
js
pop
cmp
jne
dec
sar
adc
int3
pop
mov
popa
pop
xor
(bad)
call
sub
sbb
adc
inc
ins
aaa
shl
out
sub
and
cwde
sbb
sbb
popa
add
cmp
pop
adc
pushf
jge
push
stc
lock
jg
mov
mov
cmp
mov
shl
jg
ficomp
movs
repnz
or
aaa
ret
movs
xchg
int3
shl
mov
nop
cmp
call
sub
int
jle
jbe
mov
push
cs
xlat
pop
enter
xlat
xlat
fidivr
lods
sbb
add
pop
sub
test
sbb
xor
aas
lock
je
rcr
shr
jo
rcr
push
xor
push
or
aaa
xor
xlat
xor
and
dec
jecxz
inc
pop
jmp
add
mov
add
xchg
push
xor
xor
not
pop
rol
fimul
and
push
fldl2t
mov
push
(bad)
js
push
jecxz
mov
ins
mov
or
dec
mov
pusha
lea
stos
or
or
into
jne
outs
sub
loopne
sbb
cmp
push
scas
xor
adc
test
add
loop
or
ret
push
hlt
fsubr
sub
es
or
fdiv
or
xchg
aaa
jp
dec
js
mov
mov
mov
pushf
xchg
data16
je
pusha
aam
mov
jmp
cmp
mov
pop
pop
pop
leave
mov
scas
adc
and
leave
cwde
xchg
cmp
xor
push
push
sbb
add
in
mov
and
or
pop
add
push
jmp
ret
sbb
mov
jmp
cld
jo
pop
or
outs
xchg
adc
fstp
pop
jmp
das
fs
ss
add
aas
inc
pop
pop
stos
cs
jo
and
add
scas
cwde
cmp
xchg
inc
mov
xor
jp
sar
outs
push
adc
in
xor
or
sar
(bad)
jnp
push
jns
int3
and
mov
jnp
dec
je
jae
adc
imul
shl
shr
jmp
or
sbb
sti
push
inc
cmp
pop
cmp
aas
adc
lea
or
bound
bound
pusha
add
jecxz
xor
push
xchg
sub
inc
lea
pop
sbb
cmp
in
and
pop
hlt
cwde
inc
dec
fcomp
bound
inc
aaa
push
push
dec
sub
pop
push
cmp
or
test
jno
push
or
add
in
push
call
pop
data16
mov
sbb
(bad)
mov
add
adc
cmps
inc
leave
add
jno
adc
jmp
ds
mov
and
pusha
lea
inc
loopne
add
mov
sbb
movs
cs
sub
int3
sbb
call
add
push
push
clc
(bad)
sbb
cmp
push
enter
sub
jmp
xor
jne
jae
ficom
jae
mov
fidiv
imul
jne
enter
fisubr
mov
cwde
mov
cld
xchg
inc
shl
shr
adc
or
mov
rcr
test
jo
imul
adc
test
push
(bad)
rep
adc
in
jecxz
ja
jns
add
stos
es
hlt
sbb
sbb
test
lods
mov
xor
jle
lea
pop
fcmovu
push
mov
inc
pop
cmp
call
dec
fdivr
clc
jnp
in
jmp
sbb
mov
push
add
jb
jne
add
sub
xor
pushf
out
and
push
daa
sahf
inc
popf
adc
mov
jg
shl
movs
sbb
mov
out
or
cwde
add
or
and
cmps
daa
fnstcw
hlt
push
fistp
call
xlat
push
and
mov
iret
jmp
aaa
push
lock
adc
inc
jmp
jmp
add
xlat
sub
mov
jo
fiadd
mov
push
call
and
fs
iret
outs
and
rcr
pop
addr16
jns
and
icebp
xchg
sub
pop
imul
ficomp
pop
fdivr
pop
cmc
imul
mov
shr
outs
add
sub
outs
pop
sbb
rcl
and
add
jp
inc
(bad)
fstp
adc
jae
inc
add
dec
xor
or
lds
lods
sbb
ret
dec
jns
cmp
(bad)
push
add
pop
add
cld
adc
mov
push
cmp
out
push
push
add
clc
lea
adc
mov
mov
aaa
std
shl
jno
fisttp
inc
cmp
jl
mov
pop
rcl
jnp
add
mov
repnz
addr16
mov
dec
jo
and
push
inc
scas
pop
and
mov
ficom
aam
pop
inc
add
add
or
dec
or
rcl
sbb
mov
pop
(bad)
and
add
popa
adc
lea
imul
test
jo
inc
cmp
push
(bad)
mov
or
push
in
add
movs
nop
shl
inc
je
xor
adc
push
jge
loopne
imul
xor
jmp
jmp
pop
ds
cmp
(bad)
(bad)
and
xor
and
scas
adc
push
fidivr
jnp
dec
test
pop
push
lea
data16
ja
dec
and
pop
push
push
sbb
push
pop
stos
enter
les
test
es
push
push
fiadd
out
sub
lea
push
icebp
rol
movs
stos
shl
or
add
push
int3
sub
out
xor
iret
mov
aad
and
fs
or
push
iret
or
sub
sbb
ins
sbb
sbb
mov
sbb
mov
push
adc
pop
cld
jne
outs
div
movs
mov
(bad)
sti
pusha
xchg
test
mov
test
dec
dec
adc
stos
mov
inc
repnz
test
cmp
mov
or
push
jmp
icebp
dec
mov
ror
add
repz
xor
mov
clc
in
add
dec
nop
push
jle
inc
adc
add
dec
rcl
pop
shl
dec
inc
pop
(bad)
mov
jo
enter
stc
punpckhbw
adc
and
cmp
push
sbb
cmp
mov
pop
dec
mov
adc
and
cmp
iret
call
inc
push
add
cmp
jo
shl
(bad)
cmp
cmp
hlt
cmp
(bad)
xchg
repz
inc
xor
mov
push
push
jns
pop
jo
(bad)
les
dec
cmp
lahf
add
add
mov
icebp
jno
xchg
mov
xor
je
je
inc
mov
mov
inc
xor
int3
and
aaa
add
push
push
cmps
dec
sbb
push
mov
push
dec
aad
sub
inc
cmps
ja
push
movs
imul
or
ret
and
arpl
and
ror
inc
mov
push
(bad)
clc
cmp
jle
mov
pop
jmp
(bad)
pop
dec
mov
fwait
ins
push
ror
or
add
popf
xor
inc
add
and
or
out
jnp
jecxz
dec
int3
cmp
std
add
ret
jmp
xchg
movs
sti
(bad)
movs
in
jo
lea
cmp
lahf
mov
fmul
popa
and
(bad)
xor
jae
or
mov
movs
test
adc
pushf
adc
dec
dec
and
mov
inc
sub
into
mov
test
mov
mov
rcr
in
aaa
push
jmp
std
pop
sub
rcr
movs
call
sub
call
lock
cmp
les
dec
int3
(bad)
enter
pop
aas
pop
cmp
xchg
movs
mov
sbb
mov
out
scas
les
fwait
cmp
and
xchg
xchg
inc
mov
scas
(bad)
out
icebp
xor
addr16
cmp
jl
sbb
add
add
push
or
stos
jg
push
scas
rol
outs
jb
push
test
xor
mov
or
jg
in
push
add
add
out
sar
test
dec
inc
add
add
js
js
mov
inc
rol
mov
mov
fldcw
mov
mov
pop
aaa
sbb
push
lds
jo
(bad)
ret
mov
or
push
es
pop
or
shl
loop
cmps
xlat
xchg
nop
cld
mov
pop
je
mov
cmp
leave
mov
inc
dec
jge
add
ds
hlt
in
fisubr
cmp
test
xchg
sbb
adc
ins
scas
xor
mov
xor
adc
push
sbb
pop
push
push
inc
push
pop
adc
or
inc
stos
or
sub
add
shl
ret
push
in
hlt
mov
add
in
push
mov
pop
push
in
or
add
or
push
add
outs
and
mov
ror
push
push
jl
or
shl
movs
stos
aam
add
out
xchg
add
mov
lds
fsub
lea
inc
sbb
jmp
ins
and
(bad)
ror
sub
push
push
inc
lea
pop
rol
add
mov
fucomp
cmp
push
rcl
retf
add
pop
mov
pop
sar
jne
add
inc
push
inc
hlt
(bad)
cmp
mov
mov
add
adc
ds
jne
jecxz
or
test
jg
mov
cmp
ja
xor
fbstp
push
inc
push
push
and
add
loope
stos
gs
xchg
add
jg
add
inc
and
cmp
jbe
loop
mov
sbb
push
(bad)
or
jmp
inc
dec
or
movs
xchg
adc
mov
add
loop
or
sub
and
sbb
jge
mov
or
ret
ins
loopne
mul
or
in
mov
out
aam
adc
call
adc
mov
sbb
ja
add
cmps
cmp
inc
jbe
or
repz
test
aad
jne
cmp
dec
mov
push
scas
adc
cmc
dec
test
fsubr
(bad)
sti
inc
fidiv
or
cld
mov
(bad)
cvttps2pi
add
mov
in
in
xor
int
push
ja
dec
pop
or
push
lods
inc
hlt
mov
push
and
mov
mov
mov
sbb
add
or
fcom
out
xor
adc
push
mov
popa
xor
scas
and
jbe
and
add
or
xchg
cmp
add
push
movs
mov
fdiv
mov
push
cmp
loop
add
ret
call
or
sub
xor
movzx
data16
jo
xor
inc
sub
pop
push
jg
out
mov
jmp
jne
adc
pop
jne
mov
and
mov
loopne
(bad)
int
loope
inc
cmc
or
sbb
xchg
retf
inc
cmp
push
stos
cs
mov
pusha
fimul
jb
jge
ret
and
xchg
imul
mov
es
push
jecxz
pushf
outs
push
cmps
add
lahf
call
sub
daa
lahf
sbb
js
sub
sbb
jnp
cmp
cmp
mov
dec
arpl
xor
add
mov
mov
push
mov
inc
out
shr
and
mov
out
lods
or
mov
or
and
mov
pop
clc
hlt
jmp
loopne
jne
push
jno
lods
add
xchg
jge
retf
cld
call
jmp
sub
inc
mov
adc
jbe
lock
xchg
ret
xor
add
sbb
push
push
dec
adc
xchg
cmp
add
mov
jg
rol
adc
ror
mov
mov
fiadd
pop
add
jb
outs
call
sbb
enter
neg
movs
(bad)
or
outs
call
ds
add
xor
mov
mov
mov
or
jo
mov
and
lea
sbb
pop
sub
or
add
ret
jbe
inc
adc
jne
push
mov
xchg
cld
loopne
push
xor
aaa
or
ror
jecxz
jae
(bad)
inc
sub
push
inc
or
dec
and
retf
data16
pop
popa
mov
or
mov
(bad)
jmp
sahf
adc
push
pusha
sub
pop
pop
xchg
mov
aam
je
pop
mov
pop
sub
mov
xchg
add
add
adc
and
or
mov
das
and
mov
sub
or
das
sti
jno
xchg
mov
pop
inc
push
movs
adc
call
add
inc
pop
jg
add
lock
ja
mov
xchg
inc
or
xor
cmp
xor
in
add
jnp
mov
mov
push
sbb
mov
or
loop
scas
loope
add
xchg
dec
repnz
adc
and
ja
dec
pop
mov
test
(bad)
lds
sar
mov
mov
ins
adc
mov
movs
xchg
xor
inc
inc
jl
jmp
sbb
adc
dec
sbb
adc
pop
in
push
sub
pop
push
and
adc
ja
adc
pop
std
dec
dec
jle
add
sub
push
mov
mov
sub
add
mov
sti
fld
ds
xor
inc
jmp
xor
fwait
mov
or
mov
mov
pop
jl
ret
mov
mov
inc
jmp
dec
adc
cmp
jge
mov
pop
sub
jmp
jmp
mov
jmp
add
cmp
test
outs
or
jecxz
add
inc
test
sbb
(bad)
pushw
push
pop
mov
jne
in
and
mov
(bad)
cmp
push
int3
repnz
into
xor
cmp
mov
out
call
push
jmp
les
mov
inc
mov
scas
push
mov
sub
cmp
fisubr
ins
ret
out
(bad)
enter
pop
call
out
jb
je
mov
and
push
rol
stos
shr
push
mov
test
jne
mov
mov
inc
fild
add
stc
xchg
out
pushf
add
fsub
xchg
xchg
loopne
add
jne
jle
ret
or
(bad)
cmp
and
loope
in
in
jp
mov
sbb
xor
out
pop
sar
enter
inc
inc
shl
add
loope
lock
jle
add
dec
or
inc
inc
cmp
jbe
jo
adc
hlt
cmp
cmp
adc
xchg
add
mov
mov
sub
test
xchg
push
xchg
pop
adc
loope
loop
add
add
icebp
imul
pop
add
and
xor
rcr
xor
and
cwde
lods
ja
and
jmp
ins
push
mov
pop
stc
cli
and
and
cld
push
clc
mov
mov
lods
mov
and
pusha
and
push
add
inc
mov
inc
loopne
dec
push
ficom
inc
or
dec
(bad)
rol
jae
adc
mov
push
sbb
and
inc
sbb
test
unpcklps
xchg
jp
imul
dec
and
dec
add
cs
push
enter
and
push
iret
fdiv
sbb
push
cmp
add
xchg
pop
xchg
lods
cmp
push
lods
add
jle
enter
in
sub
adc
add
and
mov
and
xor
int3
push
and
es
dec
out
inc
dec
jl
add
sub
jmp
xchg
cmp
mov
cmp
data16
mov
or
cmp
ja
inc
das
movs
mov
adc
je
sub
test
icebp
mov
add
sub
sub
fadd
xchg
cmp
fwait
add
push
mov
sbb
or
xor
repz
pusha
cmp
ficom
je
push
and
or
or
icebp
inc
jne
and
cmp
data16
xor
and
pop
cmp
scas
inc
add
pusha
add
push
push
cmp
je
cmp
je
cmp
je
clc
jg
add
inc
mov
iret
add
or
test
cmp
jl
mov
or
cmp
sub
dec
aad
jbe
ins
imul
je
push
loop
test
or
ret
fdivr
xchg
(bad)
popa
aas
jg
ret
jnp
xchg
xlat
inc
cwde
aaa
inc
and
cmp
push
ret
inc
cld
fadd
add
movs
and
bound
push
je
push
push
je
sub
sbb
lock
xor
mov
scas
adc
cmp
mov
iret
pop
popf
out
xor
xchg
test
fsub
leave
push
or
and
add
test
rol
jle
push
sbb
push
or
push
pop
xor
(bad)
cmp
ret
pop
dec
cmp
je
lock
popf
(bad)
push
cmp
add
stc
pop
fs
pop
popa
pop
add
mov
mov
or
sub
push
push
and
xor
add
das
and
data16
std
push
stos
loopne
mov
sbb
or
push
in
ds
mov
pop
js
inc
mov
or
adc
dec
adc
pop
push
adc
add
push
push
push
push
push
aad
mov
mov
mov
or
jge
jmp
mov
or
xor
sbb
adc
std
jg
loop
xor
add
bnd
lea
lea
pop
adc
sti
int3
in
fisttp
loopne
and
popa
mov
xchg
sub
pop
sbb
fild
dec
pusha
mov
fdiv
jmp
enter
cdq
stos
pop
push
adc
xor
pop
inc
mov
push
or
sbb
sbb
mov
retf
out
jmp
in
push
shr
pusha
sahf
pop
and
rol
aaa
mov
inc
cmp
xor
out
outs
loop
imul
mov
loope
outs
shr
call
or
mov
enter
mov
jo
clc
push
fnstcw
stc
sub
inc
or
imul
mov
fucomip
push
inc
pop
lods
(bad)
clc
xchg
leave
jns
jae
mov
fs
and
sar
push
jo
push
jmp
dec
(bad)
cmps
retf
push
adc
rcl
cli
xchg
idiv
in
xor
dec
add
shl
jnp
xor
ror
fwait
adc
fs
add
fdiv
or
inc
(bad)
or
pop
sub
shr
xor
pushf
pop
frstor
jo
jl
or
cmp
sub
mov
sti
cmp
add
add
leave
repz
add
add
ins
dec
push
cmp
pop
popf
mov
inc
mov
sbb
xor
mov
inc
cmps
push
movs
lods
xchg
shl
jge
repz
xchg
into
xor
pushf
and
(bad)
mov
dec
nop
sbb
mov
icebp
and
retf
clc
or
add
pop
add
pusha
mov
(bad)
arpl
retf
popf
popf
loopne
ds
mov
icebp
xor
pop
stc
jnp
xor
cmp
push
push
imul
(bad)
ins
scas
jns
mov
lock
or
add
mov
int3
xor
into
adc
sbb
sbb
in
mov
pop
dec
scas
inc
push
adc
push
stc
pop
adc
(bad)
stc
xor
sar
pop
movs
sbb
dec
push
fs
pop
rcr
sti
aaa
icebp
add
or
push
loope
shl
ret
pop
test
xor
fsubr
inc
mov
jb
dec
push
js
push
adc
jp
or
fwait
add
je
int3
mov
push
or
mov
pop
jne
stos
clc
daa
ror
push
je
sti
mov
dec
in
mov
ja
mov
mov
hlt
sti
test
push
add
pcmpeqb
in
je
dec
je
pop
push
test
xchg
sbb
sub
or
add
stc
bound
jbe
daa
xor
movs
sti
test
stos
add
xchg
dec
int
push
or
and
fwait
push
mov
jo
and
jne
sbb
sub
sbb
jmp
push
adc
mov
fist
adc
sar
jge
mov
imul
pop
pop
and
test
dec
jmp
imul
rol
ss
and
push
test
nop
mov
loopne
les
test
pop
cmp
adc
inc
adc
inc
in
dec
jge
xor
xor
jno
mov
out
mov
imul
sbb
fwait
adc
jb
and
sub
mov
jne
jmp
push
fldz
fucom
fnstsw
in
mov
or
(bad)
cld
scas
push
xchg
mov
(bad)
test
cmp
jl
stc
test
adc
push
fnstcw
add
outs
inc
jne
cmps
test
jne
sub
pop
in
outs
mov
sbb
je
movs
mov
mov
mov
push
push
xchg
fneni(8087
add
or
pop
sbb
push
fstp
cld
mov
and
pop
nop
mov
fstp
and
add
pop
clc
test
out
(bad)
sbb
mov
add
cmp
mov
mov
call
inc
shl
and
retf
clc
bound
std
mov
ins
push
imul
inc
xchg
mov
inc
add
iret
movs
jge
(bad)
popf
xor
add
ret
leave
sti
fcomp
lea
gs
xor
mov
and
mov
push
sbb
(bad)
call
test
add
add
(bad)
lea
pop
sub
jmp
sub
dec
jae
daa
push
or
push
shr
fldcw
je
dec
leave
adc
mov
test
adc
fucompp
pop
mov
pop
outs
(bad)
cmp
int
or
cli
jecxz
hlt
test
mov
add
cli
repz
cmp
ss
sub
leave
inc
jmp
retf
push
fcom
ror
add
cli
(bad)
xor
dec
or
into
adc
dec
jnp
push
fidivr
push
hlt
test
repnz
sbb
push
inc
dec
inc
sub
or
or
shr
dec
jne
fst
mov
mov
jmp
push
pusha
pop
push
adc
std
ja
dec
shl
push
sub
xor
inc
jmp
movs
push
cmps
sub
outs
dec
xchg
dec
addr16
sbb
je
fisttp
jmp
jl
loopne
mov
in
test
sub
je
xchg
xor
sbb
imul
xchg
xchg
data16
or
sar
mov
outs
xchg
xchg
mov
loopne
xor
jb
int3
or
xor
shl
shr
leave
in
inc
dec
add
call
push
div
add
cmc
mov
test
mov
mov
and
int
push
add
dec
or
or
int
int
adc
and
and
or
xor
xor
and
pop
dec
jmp
mov
push
mov
movs
(bad)
in
add
adc
lock
and
mov
push
clc
dec
fisub
jl
and
jecxz
int
ror
out
or
xor
adc
inc
mov
loopne
jnp
loope
xor
sub
sub
and
mov
add
fstp
cmp
(bad)
ins
mov
xor
loope
add
push
jmp
scas
xchg
addr16
rol
jecxz
data16
pop
imul
pusha
fld
dec
sbb
mov
ficom
mov
imul
bound
and
adc
sti
jns
dec
in
test
outs
push
fbld
inc
add
je
add
dec
jne
or
sub
std
sub
lods
jmp
test
call
jnp
je
or
pop
sbb
jmp
and
outs
div
add
adc
jo
mov
inc
fld
fstp
jmp
fisttp
add
jns
add
push
fmul
pop
mov
sbb
sub
mov
sbb
jl
jl
pop
fsubr
icebp
dec
mov
sbb
push
or
in
out
adc
push
lods
jle
adc
push
rol
and
enter
mov
and
pop
fnstsw
fnclex
movsx
sar
fstp
fmul
add
call
mov
jbe
aad
mov
or
outs
mov
xchg
sub
or
sub
jg
fistp
fist
fwait
push
and
fwait
sbb
mov
test
call
sbb
fldpi
xor
ffree
push
xchg
cmps
mov
mov
fild
or
pop
data16
pusha
and
daa
sub
(bad)
inc
popa
je
inc
je
dec
out
enter
xor
add
push
stos
test
jl
pop
popa
dec
jmp
xor
pop
sub
or
stos
(bad)
mov
add
hlt
xchg
push
adc
push
mov
and
cmp
add
pop
add
jbe
call
mov
jne
dec
adc
push
loop
jne
in
js
push
lock
inc
sbb
lea
push
lock
add
lock
sub
test
xchg
cmp
jne
sbb
aaa
mov
mov
xchg
icebp
add
mov
enter
mov
loop
retf
push
xchg
addr16
adc
jnp
leave
adc
shl
inc
add
xchg
lock
jnp
or
sbb
movs
pop
cmp
lods
dec
and
fimul
sub
ret
daa
cmps
push
je
inc
rcr
cwde
pop
lock
pop
loop
aam
pop
hlt
or
or
shl
pop
sti
or
xor
inc
xor
into
aam
adc
xchg
hlt
js
(bad)
or
enter
sbb
push
fadd
mov
lock
dec
xchg
inc
adc
fdiv
sbb
xor
jle
adc
push
jge
push
add
adc
add
sbb
loop
out
push
and
add
cmp
ret
jmp
fwait
sar
enter
adc
call
in
inc
test
or
scas
data16
or
mov
cmp
mov
cmp
xchg
or
mov
mov
dec
jmp
push
sub
add
sub
inc
pop
inc
adc
push
in
not
xchg
lock
sti
mov
push
or
xchg
inc
mov
call
jmp
fsubr
dec
clc
sbb
js
jg
and
cmps
add
pop
out
and
jmp
adc
xchg
pop
mov
push
cmp
jl
jmp
retf
push
push
push
pop
mov
xor
cld
out
or
inc
div
dec
sbb
cmp
jb
ror
dec
dec
call
pop
or
pushf
jbe
dec
pop
test
push
inc
push
es
mov
push
shr
out
adc
cs
pop
and
push
imul
fist
mov
jb
sbb
movs
ret
mov
add
jmp
push
sub
push
dec
cmp
daa
(bad)
loope
cmp
addr16
inc
jmp
cmp
movs
pop
test
lea
adc
in
dec
lock
and
mov
ret
inc
out
ret
or
sub
push
add
movs
pop
je
dec
add
dec
cmps
aam
add
pop
dec
dec
popa
push
add
pusha
icebp
jns
neg
dec
int3
pop
cmp
jl
in
jmp
push
or
pop
push
add
add
lods
push
test
jo
push
add
call
femms
jmp
vxorps
push
add
es
or
mov
(bad)
mov
xor
movs
scas
femms
mov
or
adc
add
jmp
or
jmp
sub
les
cmp
fsubr
aam
nop
sahf
into
and
enter
add
pusha
or
not
leave
cmp
pop
sbb
xchg
out
imul
call
sub
or
push
sub
adc
push
push
dec
int3
xor
inc
cmps
dec
jne
mov
push
pop
mov
fs
clc
or
fist
push
(bad)
sbb
adc
adc
cmp
mov
xchg
inc
sbb
push
dec
mov
xchg
jmp
lock
sub
in
or
in
pop
pop
cmp
outs
out
in
xor
xlat
push
clc
neg
jmp
xchg
mov
xchg
cmp
jl
push
push
imul
xor
xchg
adc
mov
(bad)
imul
leave
sub
push
sbb
loop
xchg
shr
ins
push
das
push
sub
add
mov
fsubr
xor
(bad)
push
inc
call
or
push
push
dec
push
or
xor
or
in
fs
sbb
xor
dec
jnp
shr
imul
add
add
ja
sar
push
outs
cmp
clc
cld
jl
cmp
lock
bound
loopne
mov
inc
or
add
stc
mov
pop
shl
or
jbe
ret
jmp
das
jne
push
inc
mov
add
addr16
hlt
scas
mov
push
outs
jno
jle
bnd
mov
lock
enter
xlat
or
jne
mov
inc
xchg
or
je
cmp
das
add
and
dec
cmp
push
js
jle
imul
inc
dec
mov
imul
inc
inc
mov
pop
sbb
popa
int
iret
or
xchg
dec
xchg
and
je
push
sbb
clc
push
outs
out
adc
or
or
adc
cmp
add
and
movsx
int3
mov
(bad)
test
mov
pop
call
js
add
add
aam
push
xlat
and
mov
mov
or
repz
cmp
jge
inc
mov
out
fcomp
dec
and
lea
sub
xchg
or
add
push
push
cmps
mov
push
add
add
fs
or
cmp
inc
or
add
fisttp
int
xchg
in
cmp
jb
or
test
jne
call
push
xor
push
daa
push
or
daa
cmp
stos
inc
pop
push
sub
pop
cld
enter
or
mov
lock
cmp
sub
aaa
(bad)
enter
out
or
(bad)
cmps
jo
(bad)
pop
push
and
push
push
mov
jne
pop
retf
pop
fistp
inc
mov
mov
cs
push
cmp
jne
dec
pop
fiadd
and
cmp
clc
clc
out
sbb
sub
ret
mov
out
je
clc
jmp
add
rcr
pop
mov
pop
add
add
int
xlat
and
rcr
dec
lods
call
or
pop
rcl
inc
loope
xchg
xchg
nop
addr16
cmc
jg
adc
add
inc
cmp
jne
mov
or
(bad)
mov
jmp
mov
mov
imul
fldcw
fxam
imul
fnstsw
(bad)
jg
add
shl
sar
rol
mov
and
xlat
xchg
mov
loope
test
add
xchg
mov
and
fxch
iret
cmp
ins
das
and
rol
mov
mov
movs
sub
or
in
or
pop
stc
fnstsw
and
fadd
adc
idiv
xor
or
bound
icebp
fmul
test
ret
sbb
addr16
add
pop
jbe
(bad)
or
or
mov
and
nop
(bad)
adc
mov
arpl
mov
pop
(bad)
loopne
xchg
aam
pop
xlat
bound
inc
sbb
or
adc
push
or
dec
cmp
push
push
sub
into
cmps
push
jo
xchg
and
jne
pusha
jg
fldcw
adc
imul
add
rcr
fsub
jb
popa
loope
imul
std
fstp
ret
aaa
lds
call
retf
sbb
fldcw
sbb
ret
inc
inc
ret
inc
mov
movs
mov
icebp
ret
sahf
pop
push
xchg
fcmovnu
cmp
and
movs
pop
push
sar
shld
shl
push
add
or
fld
or
jl
ret
bound
clc
and
outs
cmp
pop
pop
sbb
push
fbld
sbb
data16
adc
pop
adc
rol
in
retf
push
dec
or
add
stos
jmp
daa
je
sub
jne
sbb
ins
cmps
das
cmp
call
sbb
jge
add
mov
fsubr
jmp
jbe
push
jae
fmul
fsub
jmp
push
les
jbe
aam
push
lods
sbb
add
mov
and
mov
push
push
pop
and
rcr
push
ret
sub
popa
pop
jmp
sbb
dec
cmp
enter
add
jne
pop
data16
push
xor
sbb
cmp
jb
push
dec
mov
inc
mov
jge
js
and
shl
xchg
movs
mov
lahf
(bad)
push
movs
add
dec
jge
sub
rcl
lock
adc
test
add
in
adc
cmp
xchg
mov
push
xor
(bad)
cmps
cmp
jl
cmp
pop
ret
adc
enter
or
dec
std
push
call
popa
xchg
mov
mov
jecxz
out
pop
jbe
aam
cmp
mov
shr
fadd
jbe
inc
adc
cmp
xchg
cpuid
neg
push
pop
dec
inc
test
push
mul
pop
inc
dec
jne
fs
repnz
in
inc
mov
dec
jl
pop
mov
mov
push
enter
(bad)
sti
and
loop
mov
dec
mov
test
mov
add
out
add
arpl
add
sub
add
xor
das
and
icebp
sub
mov
loope
add
dec
cmps
fadd
fsubrp
les
test
mov
add
push
inc
pop
jmp
out
jp
or
rol
and
out
lods
add
nop
sub
adc
inc
or
(bad)
call
mov
fsubr
cmp
add
sub
idiv
adc
fdivr
jne
xchg
movs
xor
fist
push
push
ret
push
sub
push
fsubrp
add
or
mov
lds
daa
sbb
sbb
mov
mov
cmp
and
pushf
xchg
(bad)
hlt
call
add
xor
ja
lock
xchg
add
int3
pop
(bad)
sbb
push
add
add
in
sbb
cmp
cmp
call
dec
in
call
mov
call
or
adc
js
das
es
inc
push
call
adc
jne
adc
call
mov
clc
frstor
inc
sbb
mov
cdq
das
or
push
xor
adc
or
test
add
xor
sub
retf
ret
dec
aas
and
xor
sbb
add
adc
dec
pop
jmp
or
fcom
sbb
aas
pop
or
xor
add
inc
sub
addr16
pop
push
mov
mov
sbb
sub
sbb
xchg
xchg
out
xor
mov
add
fld
sbb
inc
sbb
loope
add
pop
cld
test
je
mov
mov
(bad)
(bad)
and
rol
xor
add
cmp
push
retf
add
jne
sub
cdq
mov
push
pop
(bad)
jg
test
sbb
add
add
adc
add
mov
dec
and
dec
sub
ror
dec
enter
rcr
fnstcw
xchg
or
sbb
mov
inc
enter
adc
pop
mov
cmps
dec
cdq
pop
push
push
mov
cmps
dec
pusha
mov
pop
xchg
into
cmps
mov
mov
lods
fs
push
retf
or
or
mov
or
or
and
jb
or
lea
ror
add
lahf
mov
jo
pop
ja
cs
cmp
push
call
pop
pusha
loopne
add
imul
loope
cmc
mov
in
and
and
push
int
sbb
mov
and
push
outs
or
adc
das
xor
add
add
pop
addr16
cdq
mul
jo
cmps
inc
shl
loopne
stc
pop
add
fidivr
js
or
jae
aas
xor
leave
adc
or
mov
xor
or
jl
and
pusha
mov
mov
pusha
stc
sahf
cmp
das
xor
sbb
mov
mov
(bad)
sbb
xchg
or
int3
dec
rol
cwde
outs
bound
sbb
or
in
loopne
inc
scas
pop
leave
and
add
mov
in
loopne
xchg
jl
dec
mov
enter
in
and
in
and
call
mov
fdivr
sbb
cmp
jns
and
nop
in
call
test
pop
in
in
jl
push
call
retf
and
repz
push
cdq
xchg
mov
call
loopne
loopne
adc
sub
inc
pop
dec
mov
fnop
and
icebp
push
call
in
loopne
xor
in
shl
retf
test
lods
inc
es
and
add
push
fs
fsubr
test
rcr
retf
pop
aam
test
inc
cs
(bad)
fcom
push
mov
in
iret
cld
add
push
push
enter
fadd
push
or
adc
and
dec
mov
or
ror
jb
and
mov
dec
fcom
xor
inc
stc
es
add
mov
je
ror
or
jns
stos
sub
data16
push
sub
les
ss
add
push
or
sbb
jg
mov
movs
and
add
jmp
mov
xor
not
push
add
mov
dec
add
cwde
inc
mov
pop
lea
mov
xor
jg
bound
fbstp
ret
cdq
sub
mov
pop
cmp
mov
cmp
js
cmp
test
pop
jae
(bad)
shl
or
es
or
imul
push
push
arpl
or
call
mov
mov
dec
loopne
xchg
movs
mov
sbb
push
sub
adc
jmp
add
sbb
lea
rol
mov
call
shl
je
or
imul
or
push
pop
mov
push
xchg
or
fcomi
add
rcl
imul
sub
fdecstp
adc
adc
and
addr16
movs
test
sub
sbb
loope
js
jmp
sbb
sub
and
inc
or
adc
loop
nop
cmps
adc
lock
out
pop
push
and
shr
inc
push
pop
add
push
inc
std
ins
push
test
(bad)
out
in
std
push
jbe
dec
sub
sbb
adc
and
lahf
or
(bad)
fadd
add
xor
pop
ret
add
push
pop
mov
xor
and
rcr
adc
(bad)
inc
add
and
or
adc
sbb
mov
and
retf
or
xor
fadd
jg
mov
(bad)
fisubr
shl
ret
jge
pop
aam
pop
gs
dec
add
pop
dec
inc
or
ret
add
stos
into
push
push
scas
cmc
nop
sub
inc
or
or
dec
fdiv
mov
clc
cmp
and
int3
pop
sub
jmp
push
es
outs
loop
pop
or
push
xor
push
loop
das
sar
sbb
add
das
into
inc
jg
les
fs
bound
lea
loope
dec
mov
pop
pop
inc
stos
add
and
pusha
loope
push
mov
add
jo
mov
mov
pop
(bad)
in
xor
rcl
xchg
xchg
sub
push
pusha
push
inc
pusha
cmp
jae
mov
sar
inc
mov
inc
lock
jns
js
ret
cmp
xchg
rcl
xchg
xchg
push
push
push
int
hlt
jmp
or
jmp
neg
add
mov
push
mov
adc
(bad)
(bad)
adc
xchg
pushf
cmp
push
ss
fcomp
pop
shl
push
push
pushf
pop
push
jbe
ss
ss
std
ret
mov
pop
push
in
imul
dec
push
jmp
mov
sbb
je
pop
rcr
popa
dec
mov
add
pop
mov
adc
adc
lods
ret
(bad)
pop
pop
or
adc
dec
push
pushw
sbb
inc
dec
push
and
movs
pusha
push
inc
cli
sub
adc
cmp
jl
push
xor
iret
je
inc
jmp
adc
jb
cmp
mov
add
outs
jmp
arpl
imul
and
push
dec
in
pop
aam
jecxz
sub
iret
sub
and
dec
ins
sti
cmp
or
jo
sbb
adc
sub
add
icebp
inc
dec
push
push
sbb
(bad)
loope
loopne
int3
jnp
push
iret
push
leave
fidiv
scas
add
leave
and
dec
ror
cmp
jge
stc
test
test
ret
add
add
sub
dec
pusha
and
arpl
(bad)
push
pop
mov
mov
adc
or
ins
ds
or
shl
dec
add
repnz
rcl
inc
jecxz
ret
mov
sbb
test
inc
(bad)
leave
lds
int
sti
adc
test
retf
push
cmp
or
ret
fsubr
rcl
dec
push
push
or
jmp
lahf
fs
mov
int
jae
push
pop
daa
adc
xchg
sbb
push
mov
pop
cmp
les
cmp
push
jle
test
inc
sbb
or
mov
adc
aas
test
cmp
dec
out
mov
adc
sar
or
js
call
add
in
(bad)
jle
rol
sbb
sbb
cmp
dec
inc
mov
sub
add
and
dec
add
and
sbb
jle
pop
pop
push
pop
arpl
inc
pop
pop
dec
mov
test
aaa
jb
hlt
pop
je
loopne
add
sbb
je
mov
xor
cmps
jmp
sub
(bad)
add
and
(bad)
inc
data16
sbb
push
sbb
rol
sbb
sbb
ss
jo
mov
shl
in
jle
pop
push
xchg
adc
sub
shl
mov
into
ja
ret
stc
mov
jp
add
out
push
aaa
pusha
or
and
or
stos
clc
add
mov
and
dec
movs
lock
shr
repz
sub
jbe
mov
dec
(bad)
cmp
cdq
cmp
and
hlt
loope
dec
xchg
rcr
test
clc
jae
lea
mov
xor
loope
popf
cmp
jp
push
inc
in
pop
movs
inc
push
xchg
lods
push
mov
mov
ss
fnstenv
dec
sub
je
stos
or
jl
xor
outs
jne
lock
mov
out
es
cdq
cli
add
add
sbb
aad
jmp
jl
add
xchg
add
jmp
push
mov
je
push
push
jmp
sub
(bad)
mov
or
nop
ret
sbb
adc
add
mov
jp
dec
push
popa
jp
dec
adc
in
hlt
js
mov
pusha
or
cdq
push
mov
or
pop
lock
rcl
dec
inc
inc
xor
or
repz
fcomp
jge
(bad)
pop
adc
das
cli
mov
add
jmp
or
sub
(bad)
ss
ja
cs
cmp
pop
in
cmp
and
push
es
ins
jo
mov
mov
fidivr
push
push
test
std
sbb
pusha
cli
inc
es
div
gs
and
push
loopne
push
(bad)
xor
lds
fmul
(bad)
add
dec
retf
xchg
and
push
adc
cmp
jmp
out
(bad)
adc
sahf
gs
inc
push
or
lea
cmp
jae
loop
ret
mov
clc
add
adc
je
clc
rol
sbb
pop
pusha
push
pop
cdq
cmp
push
hlt
pop
mov
push
pop
inc
push
(bad)
jmp
jl
sub
sbb
add
out
mov
mov
mov
jp
movs
cdq
and
jecxz
loopne
rol
inc
push
add
cdq
loop
bnd
(bad)
inc
jmp
mov
dec
in
mov
mov
push
cmp
sbb
add
sub
shl
or
je
xlat
sbb
mov
push
jmp
por
pop
adc
sti
sbb
jno
xor
stc
and
jb
pop
mov
loopne
je
xor
ins
jg
test
fsubr
dec
je
jbe
mov
mov
sbb
jge
sbb
aas
cmp
push
pop
cmp
adc
aam
sbb
test
outs
or
shr
es
pop
and
jmp
add
adc
int
xor
adc
ror
sbb
je
test
and
jl
dec
xor
cmp
rcl
int
pushf
dec
mov
dec
movs
fimul
push
mov
and
ins
fsubrp
in
or
or
jmp
cmp
mov
stc
mov
xchg
dec
adc
cmp
int
sbb
inc
aaa
jecxz
dec
sub
sbb
js
push
sbb
and
fmulp
cmp
push
jns
dec
fsub
xchg
clc
(bad)
dec
push
pop
iret
aas
jmp
push
push
push
add
dec
and
mov
retf
mov
sub
cdq
fisubr
ficom
push
sub
imul
xor
and
ins
scas
movs
sub
sub
push
jae
mov
pusha
sbb
and
sub
sub
dec
dec
jae
push
mov
xchg
jbe
cs
das
imul
jp
add
mov
adc
and
sub
inc
pop
mov
push
mov
in
fwait
xor
cwde
shl
mov
adc
adc
add
js
mov
(bad)
jg
jo
jmp
in
xor
cmp
sub
mov
inc
cmp
mov
mov
and
repnz
cmc
test
stc
lea
ins
repz
xor
mov
inc
inc
popf
sahf
adc
mov
retf
jp
clc
xchg
add
rol
data16
or
inc
sbb
adc
xor
mov
or
sub
xchg
rol
and
inc
inc
push
fnstenv
sbb
test
div
mov
lods
cdq
repnz
mov
or
movs
adc
pop
nop
inc
call
movs
cdq
xor
ror
xor
ret
and
(bad)
mov
stos
xchg
cmps
out
fwait
pop
aas
lahf
jp
xchg
mov
mov
into
push
int3
aad
adc
cld
dec
jp
ficomp
cmp
mov
(bad)
xor
xchg
jbe
imul
inc
mov
sbb
add
add
or
call
and
cwde
xchg
data16
and
mov
call
push
das
sahf
inc
mov
mov
imul
int
jno
mov
xchg
loop
fidivr
add
pop
ins
sbb
fadd
pop
js
jb
cmp
xchg
test
sub
mov
push
pop
mov
pusha
invd
mov
xor
dec
adc
mov
add
jg
or
leave
leave
leave
or
adc
daa
daa
mov
ss
sub
daa
daa
daa
xor
cmp
push
daa
cmp
inc
and
inc
pushf
pushf
pushf
fmul
dec
dec
push
push
daa
daa
pop
pushf
pop
add
daa
daa
daa
push
and
daa
js
mov
and
jns
mov
xchg
cwde
pushf
es
fs
mov
fs
dec
mov
dec
es
dec
xor
mov
fcomp
dec
xor
and
in
xor
and
shr
lock
and
dec
hlt
clc
cld
and
cmp
add
or
and
dec
fwait
or
adc
dec
xor
sbb
and
xor
and
sub
xor
and
xor
cmp
enter
gs
dec
fs
dec
cmps
lahf
dec
push
push
xchg
dec
es
pop
pop
pusha
adc
pusha
arpl
sub
push
add
movs
call
inc
inc
push
gs
sub
inc
push
mov
adc
cmp
inc
jmp
test
loopne
mov
adc
xchg
or
xor
xchg
daa
jns
add
mov
mov
data16
dec
aas
add
lahf
mov
std
je
xchg
or
inc
not
xor
mov
jl
add
pop
lea
and
fdiv
xor
clc
push
or
ja
(bad)
push
daa
jl
adc
call
pop
nop
data16
push
push
push
cs
xchg
sub
xor
shl
sub
sub
xor
movs
xor
xor
ror
das
sbb
jae
int
cmp
ror
inc
inc
inc
inc
and
dec
dec
ror
jae
dec
push
dec
int
xor
push
dec
pop
dec
or
jae
pop
dec
pusha
nop
xor
ror
dec
dec
jae
int
cmp
inc
ror
cmp
and
jl
xor
mov
cmp
or
test
lods
popf
cdq
xchg
mov
or
inc
nop
sub
inc
xchg
inc
cwde
in
inc
shr
pusha
pushf
sub
sub
mov
and
push
ja
ret
lods
cmp
add
mov
sbb
shl
nop
jl
ret
les
enter
in
and
ss
retf
xchg
pop
aaa
aam
cs
jb
fsubr
fsubr
leave
gs
loopne
in
xchg
and
xchg
xor
xor
inc
sbb
hlt
dec
cs
jb
clc
inc
dec
pop
leave
gs
dec
xchg
nop
jl
shl
add
dec
jbe
xchg
retf
or
dec
mov
adc
adc
dec
pop
scas
gs
sbb
scas
in
in
imul
and
(bad)
cmp
sub
sub
cmp
dec
cs
xor
leave
cmp
in
and
inc
retf
nop
pop
xchg
push
jb
xchg
inc
dec
sub
fist
sub
xor
int3
mov
ins
pop
xor
lock
jmp
(bad)
sub
addr16
sbb
out
pop
xor
dec
cld
adc
push
push
and
xchg
add
mov
mov
test
sbb
add
push
inc
aam
pop
mov
xor
pop
push
lea
mov
add
mov
sub
push
cmp
add
or
mov
push
add
add
cmp
lock
mov
adc
shr
out
pop
add
pop
cmp
pop
jne
call
pop
xor
add
dec
push
mov
fisttp
xor
inc
add
imul
ret
mov
and
mov
push
sub
jne
sub
cld
mov
aaa
xor
daa
or
sub
jmp
add
or
rcr
test
ds
shl
ror
bound
mov
ror
add
cld
sub
movs
push
shl
popw
enter
cmp
jne
mov
inc
call
dec
inc
jge
pop
sub
xor
fdiv
cmp
ret
sub
(bad)
jo
(bad)
or
or
je
add
sbb
lock
push
push
jne
imul
add
or
sbb
mov
mov
lahf
sub
cmps
fadd
sti
lea
or
pop
inc
ud1
and
int
inc
dec
mov
jl
in
jge
rol
pop
js
push
ins
fadd
mov
xchg
clc
pop
jmp
add
pop
fadd
cwde
shr
push
das
mov
or
lods
ins
ds
movups
push
test
mov
sbb
lods
lods
sbb
adc
sbb
add
pop
xchg
add
and
or
or
mov
mov
clc
jb
or
or
lahf
pop
shl
pop
inc
jmp
mov
pop
les
mov
add
icebp
jae
sahf
sub
dec
adc
fstp
leave
add
inc
clc
mov
lock
in
inc
std
xor
jne
and
cli
dec
mov
push
lahf
sub
lea
aad
or
push
jnp
outs
aas
mov
jecxz
mov
lea
mov
or
xor
fst
or
rol
add
neg
jne
cmp
adc
popw
adc
xchg
call
push
jmp
add
sub
or
cmp
rcl
jns
add
push
adc
fadd
and
test
out
test
xor
mov
dec
sbb
or
push
push
mov
pop
and
cmps
push
es
jmp
cdq
xchg
push
outs
push
pushf
or
mov
maskmovq
test
movs
movs
jne
das
xchg
pop
mov
ins
or
lock
inc
lock
mov
inc
mov
sub
lods
push
aaa
or
xchg
pop
out
xchg
mov
mov
dec
sub
xchg
or
add
push
fsubp
push
and
inc
dec
adc
cmp
shl
xlat
push
pop
pop
or
fbld
fnstsw
test
adc
xchg
push
push
cmp
or
imul
and
scas
inc
(bad)
not
inc
or
imul
push
cwde
or
fsub
das
mov
(bad)
fistp
pop
jmp
pop
add
ja
fistp
shl
cmps
xchg
(bad)
leave
pop
stos
je
add
inc
push
cld
scas
ins
inc
mov
sub
add
or
or
sub
movs
add
leave
ins
enter
mov
pop
inc
aaa
es
sub
push
mov
ss
aas
jo
push
push
push
jge
outs
pop
pusha
hlt
push
push
xor
inc
pop
adc
aaa
jae
push
jg
pop
jne
or
sub
call
mov
popa
or
dec
mov
and
xchg
popa
je
or
dec
mov
sub
loopne
es
mov
add
mov
adc
add
jecxz
pop
lea
xchg
imul
and
and
inc
shr
sbb
push
dec
push
jge
push
dec
push
xchg
jb
xor
push
sbb
ins
push
adc
addr16
(bad)
add
dec
jno
cs
mov
pop
xor
fadd
out
xchg
push
sbb
movs
xor
cmp
mov
rcr
adc
dec
das
and
and
retf
mov
and
add
jl
repz
cmove
xor
mov
mov
mov
inc
fsubr
mov
add
inc
arpl
or
xchg
test
test
push
and
or
mov
imul
push
movs
rol
xor
in
push
and
push
test
mov
push
add
daa
add
lods
loopne
jecxz
sti
fwait
lea
mov
inc
test
or
inc
gs
test
cmp
retf
mov
(bad)
push
rcr
fimul
ret
fadd
das
push
in
je
adc
pop
popf
pop
add
popa
fldenv
jnp
cdq
je
inc
dec
lea
daa
jl
or
push
cmp
xor
xchg
xor
dec
(bad)
nop
sbb
fcomp
jne
mov
xor
adc
xor
pop
push
dec
cmps
or
mov
stc
add
stos
rol
(bad)
(bad)
outs
or
and
or
inc
or
or
xor
shr
mov
jnp
xchg
jne
xchg
xor
daa
int3
lock
mov
add
add
inc
in
test
or
or
mov
leave
sub
pop
lea
sbb
push
mul
inc
pop
pusha
pop
movs
lahf
cs
je
fcos
cmps
imul
and
pop
push
(bad)
dec
test
stc
pop
leave
mov
shr
icebp
jb
int3
pop
jnp
push
mov
push
push
dec
adc
and
test
mov
sub
pop
pop
popa
ds
aas
sbb
into
icebp
sahf
fld
push
add
test
out
pop
sub
jbe
lods
cmps
mov
ret
push
pop
xchg
sar
add
shr
jne
jecxz
mov
test
rcl
pop
sbb
imul
jl
push
push
and
mov
xor
sar
mov
ret
dec
les
jl
push
add
xor
fcom
add
sub
pop
jl
enter
jecxz
xor
int3
hlt
gs
dec
jae
add
(bad)
jle
pop
rcr
pop
mov
pop
sub
jno
jbe
mov
mov
arpl
or
shl
test
shl
mov
test
sbb
cmp
pop
cli
out
cdq
clc
and
pop
cmp
sbb
pop
mov
push
scas
push
add
bound
or
add
sbb
push
dec
jmp
adc
jo
or
mov
dec
jge
enter
test
pop
jmp
inc
xor
out
adc
or
inc
and
jne
out
test
mov
or
ficomp
xchg
or
jmp
mov
lods
mov
and
and
mov
call
rcr
jae
pop
in
push
fs
add
sar
sub
ret
daa
fidiv
xlat
mov
inc
sub
add
or
adc
daa
adc
scas
mov
dec
or
sbb
lahf
or
pop
or
inc
inc
rcr
cli
rcr
sbb
jg
(bad)
fnstcw
sbb
xchg
xchg
pop
retf
add
lock
mov
fiadd
mov
xchg
(bad)
jno
sbb
jl
mov
sbb
xlat
push
add
ss
int
xor
push
sub
xchg
and
adc
pop
and
cld
sub
pop
(bad)
sbb
js
xlat
xor
push
pop
icebp
mov
and
int3
mov
dec
retf
adc
inc
xchg
adc
pop
inc
pop
pop
push
push
jno
mov
push
sub
jns
out
nop
fbld
pop
dec
and
xor
mov
or
jle
hlt
aaa
and
test
push
pop
je
rcr
xor
mov
fs
jne
mov
and
jmp
mov
pop
add
pop
dec
(bad)
jmp
shl
popf
jbe
xor
inc
push
ins
xchg
pop
faddp
mov
pop
cmp
push
cdq
outs
jbe
mov
pop
sub
fcmovnu
pusha
fild
out
or
fiadd
push
adc
cld
push
aad
or
jmp
sbb
mov
xchg
push
(bad)
cmps
jo
cmp
sbb
pop
pop
jns
sbb
xor
push
inc
cmp
jge
clc
xchg
or
push
push
xchg
sbb
jae
pop
and
call
adc
or
aaa
pusha
or
or
je
iret
or
in
mov
daa
shl
add
sbb
sbb
loop
ror
mov
movs
mov
inc
pop
shl
or
xchg
inc
xchg
add
jno
cld
cld
(bad)
fbstp
or
ja
add
jmp
and
jb
adc
and
xchg
push
jmp
push
shr
fcomp
adc
nop
test
fdivr
sbb
loopne
or
inc
rol
shr
je
cmp
xchg
bound
dec
jnp
xchg
jbe
hlt
(bad)
cld
cld
cld
inc
pop
pop
jae
mov
inc
inc
inc
cmp
adc
mov
lahf
xor
sub
es
rcr
cmps
add
or
fcom
test
ins
(bad)
jne
test
(bad)
(bad)
hlt
jecxz
cmp
out
sbb
dec
or
push
rol
xchg
adc
ss
fneni(8087
ss
rcr
je
ss
xor
js
push
fwait
and
int3
push
push
mov
sar
repz
jmp
or
jne
sbb
or
outs
mov
in
loopne
pop
dec
enter
je
or
mov
inc
or
rol
cmp
arpl
adc
loopne
xor
pop
and
push
shl
adc
test
inc
ret
pop
hlt
test
add
dec
(bad)
jg
add
shr
je
popa
adc
push
sub
pop
dec
or
add
adc
add
movs
ja
pusha
lock
cmp
push
add
adc
movsx
cmp
push
pop
push
jns
pop
ret
sub
je
push
sub
sbb
jo
adc
cmp
add
or
xor
push
sbb
add
dec
and
jmp
je
mov
dec
jmp
cmp
dec
js
js
or
inc
push
mov
test
jmp
xor
xor
int
or
sub
and
or
push
lods
and
sbb
ret
fisttp
fst
mov
add
adc
cmp
js
cmp
or
xchg
into
adc
jmp
or
add
push
popf
jnp
mov
retf
adc
out
and
or
test
push
adc
adc
loopne
cmp
sub
imul
bound
sub
add
inc
inc
or
mov
mov
inc
cmp
hlt
clc
inc
pop
xor
sub
ss
in
mov
ret
movs
in
out
inc
add
push
pop
inc
lds
cmp
push
jg
push
xor
mov
mov
jae
aas
std
(bad)
rol
sbb
out
cdq
(bad)
mov
add
cmp
loop
in
cmp
mov
fimul
add
inc
dec
xor
push
ret
mov
ins
sbb
retf
push
into
xor
dec
(bad)
and
pop
mov
and
mov
dec
jl
sbb
mov
cwde
add
inc
inc
hlt
popf
pushf
add
pop
xchg
enter
aam
movs
mov
dec
sbb
cld
scas
sub
dec
int3
test
popa
xchg
fcom
repnz
push
sbb
fcomp
pop
or
adc
je
fsubr
add
mov
add
xchg
fldcw
popf
push
sub
pop
mov
adc
test
sbb
dec
outs
sub
inc
inc
cmp
sahf
out
add
add
add
jmp
addr16
pop
add
pop
jp
add
or
or
add
aaa
push
jmp
in
test
add
mov
and
outs
(bad)
cmps
and
cwde
mov
imul
inc
ins
add
lahf
cmp
fs
call
icebp
jbe
test
jbe
or
cmp
out
jmp
pusha
nop
sbb
add
xchg
jo
add
das
adc
adc
sbb
push
sbb
or
pop
sub
add
xchg
test
das
stc
pop
xchg
jbe
scas
sub
sub
jae
add
add
sahf
ins
mov
call
add
push
lss
xchg
lahf
neg
xchg
jne
and
test
mov
je
dec
jne
xchg
and
sub
cmc
jmp
enter
pusha
mov
adc
retf
lock
mov
aaa
movs
(bad)
fadd
lock
jg
mov
(bad)
lds
mov
inc
adc
mov
and
xor
mov
xchg
sti
out
xor
adc
dec
add
mov
loope
or
mov
cmp
xor
mov
scas
mov
and
cmp
jo
sar
cmp
mov
push
mov
adc
push
aaa
sbb
loopne
cmps
mov
retf
lea
adc
mov
pop
out
cwde
or
sar
test
dec
cmp
sub
rcl
test
add
add
xchg
sbb
jle
ret
(bad)
iret
xor
inc
icebp
cld
dec
div
adc
and
pop
jmp
mov
retfw
pop
sbb
pop
sub
inc
mov
test
push
daa
into
xor
and
mov
rol
sub
pop
fucomip
dec
call
xchg
mov
dec
je
aas
jmp
ja
push
div
in
sub
xchg
loopne
dec
dec
jmp
les
adc
ja
stc
enter
sub
lods
dec
dec
add
sti
push
adc
and
push
movs
ud2
add
lds
ja
xor
add
fisttp
lock
jo
and
fstp
cs
mov
sub
xor
dec
stc
in
fnstenv
push
je
retf
push
xlat
retf
jne
mov
cli
out
bsr
add
out
shl
out
inc
adc
jmp
push
inc
fldenv
fcom
loope
shr
shl
aaa
dec
and
pop
dec
inc
ret
ins
adc
ins
cmp
(bad)
aad
jle
push
mov
inc
je
inc
sub
sbb
in
push
and
sahf
or
arpl
inc
lea
inc
rcr
fbstp
cmp
or
pop
lock
(bad)
cld
clc
clc
and
push
or
bsf
add
jmp
test
or
push
repnz
and
dec
xor
std
sbb
add
pop
mov
ins
(bad)
cld
ror
or
xchg
mov
add
add
and
lock
data16
inc
mov
xchg
push
ja
push
lea
test
inc
sbb
xor
xor
add
pop
mov
inc
jl
fcmovb
jg
call
push
js
cmp
jl
sbb
dec
cmp
je
or
inc
cli
inc
xchg
sbb
inc
mov
inc
fadd
out
fist
enter
mov
push
xor
lahf
push
add
aam
lock
or
mov
or
sub
cmp
sub
and
adc
(bad)
popa
mov
clc
jmp
push
add
add
rol
jno
fdiv
mov
cmp
mov
push
xchg
js
xor
test
or
shr
je
out
mov
or
repz
add
jne
and
cmp
and
cmp
or
enter
inc
jmp
and
jmp
sbb
sub
mov
shr
mov
repz
nop
mov
jae
mov
fild
outs
adc
jmp
(bad)
neg
(bad)
mov
icebp
mov
jns
clc
or
push
cmp
mov
or
popf
xor
xchg
and
sar
add
add
imul
or
es
movs
movs
xor
test
fmul
dec
shl
jmp
and
xchg
lock
pop
dec
lea
add
push
xor
xor
pop
or
inc
dec
jge
inc
inc
cs
idiv
xchg
sub
mov
sbb
push
retf
mov
xor
push
push
jmp
push
sub
mov
icebp
sbb
push
adc
sbb
jge
movs
inc
leave
dec
jns
add
dec
jne
pop
pop
pop
(bad)
stos
in
(bad)
hlt
cmp
jae
or
jae
lods
rcl
jmp
or
loope
shr
sub
push
icebp
movs
hlt
paddb
add
test
inc
addr16
call
cmps
lock
out
push
jb
sbb
clc
or
mov
inc
mov
adc
retf
addr16
data16
inc
je
jne
push
mov
into
mov
clc
pop
or
rcl
shr
jmp
adc
fcomp
out
adc
sub
addr16
cmc
outs
inc
sbb
ds
inc
add
xor
cwde
js
xchg
les
movs
out
add
sbb
not
shl
mov
push
add
cld
or
imul
or
xor
inc
cmp
jnp
in
push
sub
enter
cmps
(bad)
sbb
les
or
and
sub
jbe
fcom
mov
mov
add
add
push
dec
movs
add
cmp
xchg
add
hlt
xchg
call
ja
loopne
aam
jp
adc
xlat
popf
hlt
jmp
mov
mov
shr
push
out
loopne
sbb
push
jl
cld
loop
add
push
push
or
int
or
test
rcr
sub
jecxz
pop
mov
enter
push
shl
xchg
cmps
sub
setbe
or
and
lock
or
repz
in
sub
lahf
sar
and
adc
and
add
pop
shl
dec
aaa
adc
pop
rcl
sub
lods
jb
adc
rol
loopne
adc
add
dec
imul
retf
sub
or
jmp
dec
add
jmp
bsf
add
sub
call
leave
cmp
cmovne
fimul
dec
dec
out
shl
js
retf
je
dec
push
sub
push
push
or
push
ds
adc
imul
movs
scas
fdiv
xor
add
inc
push
pop
cli
xchg
je
xor
push
stos
push
div
and
or
xor
les
in
ret
(bad)
std
sub
cld
cmp
je
lock
adc
cli
jmp
and
pop
cli
repz
push
iret
jmp
pop
retf
push
mov
or
cld
test
ja
mov
loopne
daa
mov
cwde
lods
out
push
lods
ins
xchg
adc
adc
xchg
jne
test
push
push
or
ror
bnd
or
push
push
popa
outs
or
jb
push
push
ja
cmp
dec
add
jno
mov
cmp
or
js
xchg
outs
adc
mov
leave
adc
or
pop
and
or
lods
retf
ret
jno
stc
fsubr
jmp
add
dec
fbld
div
xchg
(bad)
rcl
or
jle
inc
nop
sbb
pop
xor
je
or
cmp
test
pop
jb
sub
mov
push
les
and
mov
or
jbe
sbb
mov
adc
jmp
jbe
je
sub
sub
or
mov
or
or
dec
mov
dec
rcr
int
shl
add
psubusw
ja
dec
add
push
jne
mov
dec
enter
ss
sbb
add
mov
clc
sahf
fcomi
xchg
jmp
sub
sbb
je
cld
stos
call
sar
enter
or
leave
rcr
or
rcl
punpckhdq
ret
xchg
nop
sub
mov
sbb
cmp
jne
and
sbb
add
div
cld
adc
mov
mov
sar
add
xor
loop
mov
sub
add
sahf
push
fs
adc
daa
inc
outs
push
lea
fcom
push
mov
push
jae
ja
test
mov
dec
adc
or
mov
jae
add
sti
add
in
or
mov
div
shl
into
jbe
mov
sub
dec
icebp
sqrtps
jo
adc
cmp
lock
sub
push
pop
mov
rcr
add
sbb
imul
stos
or
or
inc
and
fiadd
popf
cli
ss
cmps
jo
ret
push
cmp
xchg
pop
push
inc
fwait
push
add
mov
hlt
or
and
sbb
int3
mov
inc
cmp
mov
xor
retf
sbb
pop
or
add
mov
fbstp
pop
outs
pop
add
movs
cmp
out
jb
mov
push
jo
pop
or
adc
jmp
jg
test
ret
cli
sub
xor
rol
cli
or
lock
mov
dec
pushf
jmp
inc
or
jl
mov
fist
or
es
pushf
movs
mov
xor
rcr
test
stos
xor
test
jl
mov
inc
test
shr
(bad)
mov
jne
adc
inc
add
push
push
jo
xor
adc
push
retf
push
dec
aaa
mov
or
or
add
movsx
pop
(bad)
pop
stos
aad
adc
sub
mov
jne
or
mov
jl
and
or
ins
imul
loop
loope
das
jmp
inc
mov
ret
test
push
bound
sub
add
adc
imul
ficomp
rol
movs
and
xor
daa
fiadd
mov
jecxz
or
inc
push
xchg
add
(bad)
inc
aas
sahf
into
add
add
push
jge
cmc
mov
loopne
cmp
in
mov
and
test
popa
mov
dec
inc
clc
jl
(bad)
jl
push
(bad)
imul
xchg
ja
popw
dec
mov
fmul
in
dec
movs
dec
fadd
movs
pop
and
add
pusha
pop
mov
shl
loope
loope
mov
leave
loopne
sub
dec
jmp
push
in
rcr
inc
xchg
push
sbb
movs
xchg
adc
or
push
nop
iret
jle
sub
xchg
or
(bad)
jl
fidivr
mov
fcompp
and
mov
mov
test
inc
sub
or
jmp
pop
and
jne
test
enter
cmp
aas
inc
mov
scas
retf
jb
cmp
jae
aam
das
add
dec
mov
js
daa
push
retf
pop
add
jge
(bad)
ins
lock
outs
cmp
jns
push
mov
repnz
inc
and
call
adc
neg
pusha
add
rep
dec
loopne
mov
sub
cld
je
inc
mov
add
push
or
test
shl
repnz
sbb
add
dec
xlat
push
cmp
inc
movs
adc
mul
sti
shl
sub
pop
inc
sbb
and
aas
xor
sub
mov
popf
lock
and
ds
sub
(bad)
sub
sbb
fidivr
(bad)
push
in
add
sub
sbb
sub
outs
sbb
or
cli
mov
jmp
jns
test
inc
test
mov
pushf
aam
repnz
cdq
adc
jbe
xor
lods
mov
ss
movs
and
mov
or
inc
sbb
out
adc
push
call
dec
sub
dec
pop
sahf
sub
sub
sub
dec
push
jnp
or
or
jne
aam
sub
repnz
jno
sub
or
cs
xlat
add
fsubr
xor
or
sub
not
or
xor
in
call
into
sbb
loopne
pop
sbb
int3
inc
dec
pop
jl
or
cs
std
or
cmp
jl
icebp
jmp
pop
outs
je
in
cmp
mov
cmp
xchg
inc
push
int3
popa
icebp
xor
mov
add
rol
bound
or
inc
mov
sub
icebp
sub
cmp
push
(bad)
mov
aas
inc
inc
ror
sti
and
and
inc
ret
and
loope
aas
or
xchg
repz
mov
sub
mov
cmp
rcr
lods
push
push
mov
dec
dec
inc
add
push
sbb
xor
mov
shl
div
aaa
jecxz
jge
mov
lock
jne
add
inc
hlt
add
sbb
jne
aaa
fwait
pop
enter
cmp
jle
jns
and
push
jge
add
push
add
cmp
xchg
sbb
daa
fist
or
mov
or
cwde
xor
inc
add
bound
js
add
hlt
data16
or
xor
inc
add
ins
ret
cmp
fwait
push
add
or
je
mov
ins
popf
into
fmul
out
fimul
or
xchg
aad
cdq
add
push
pop
ds
iret
cmp
(bad)
mov
dec
jmp
and
add
lock
lock
jmp
xor
call
adc
lahf
xchg
ins
mov
dec
pop
out
jmp
sbb
pop
fwait
push
pushf
scas
jbe
mov
add
lods
sbb
sub
sub
fwait
xor
jle
jle
sub
add
pop
or
call
scas
cmp
jbe
add
retf
add
call
adc
mov
push
add
inc
mov
repnz
mov
push
cs
int3
xor
pop
inc
dec
sub
push
in
cmp
dec
repz
mov
adc
rol
add
mov
shr
push
lods
cmps
dec
test
add
std
adc
mov
or
adc
push
xchg
out
cmp
loopne
xor
loop
dec
(bad)
pop
cwde
shl
add
or
(bad)
les
mov
retf
jae
jnp
push
daa
xchg
and
sub
jo
rcr
or
pop
cmp
pop
xchg
mov
movs
jmp
mov
add
je
aam
into
or
cmps
push
mov
pop
and
out
retf
mov
fstp
dec
mov
or
mov
or
jo
inc
mov
mov
sbb
sub
test
(bad)
rol
lock
sub
mov
fidivr
jmp
push
or
repz
scas
push
ins
mov
xchg
pushf
push
call
jbe
mov
cmp
jl
inc
mov
lods
dec
push
inc
mov
xchg
cli
cmp
cmp
mov
push
mov
or
stc
ss
push
push
pop
cdq
in
stos
mov
push
sar
imul
add
ja
test
adc
jne
gs
test
add
mov
pusha
sub
pusha
into
in
(bad)
push
cmp
mov
mov
es
and
sbb
add
loopne
mov
push
push
movups
movs
add
push
add
nop
ret
shl
sbb
enter
jmp
push
mov
jb
mov
sub
out
es
or
dec
mov
push
into
pusha
dec
je
cmp
pop
mov
movs
and
and
mov
icebp
inc
cli
and
pop
ror
(bad)
jmp
sub
clc
gs
dec
and
ja
push
or
fsub
and
test
pop
inc
dec
jnp
or
mov
inc
into
push
fdivrp
jne
aaa
inc
lss
or
pop
nop
cmp
je
push
or
nop
lea
jl
or
jle
lea
inc
lock
cmp
mov
int
sub
clc
mov
jp
mov
cmp
inc
push
shr
test
rol
mov
sbb
jmp
pushf
jo
add
sbb
test
mov
nop
and
fld
add
fcmovbe
jg
ins
cmp
into
push
fdiv
adc
cmps
push
(bad)
cmp
mov
mov
jmp
mov
or
and
rol
ror
jge
cdq
dec
sub
fs
jg
shl
xlat
or
xor
jns
mov
lods
xor
cwde
div
es
inc
aam
je
inc
dec
es
(bad)
aaa
shr
push
shr
or
mov
loope
shr
shr
or
inc
cld
out
sub
into
push
push
cli
cdq
and
pop
je
test
rol
jbe
or
stos
aam
jmp
and
and
rcl
fmul
or
mov
mov
inc
fisttp
jne
xor
dec
shl
and
sub
push
mov
ja
aam
fiadd
or
inc
mov
dec
js
fisubr
pop
adc
pop
mov
inc
mov
jae
jb
or
dec
les
rol
push
sbb
jmp
ror
push
push
mov
data16
out
add
les
xor
xor
rcl
sub
adc
loop
mov
xor
or
sbb
pop
add
and
mov
mov
xor
jp
das
clc
push
rcr
mov
inc
xchg
hlt
(bad)
inc
or
add
push
cmp
nop
popf
xchg
inc
add
push
dec
xchg
jp
pop
int
jns
xchg
ja
mov
adc
sub
mov
and
mov
mov
fsub
(bad)
push
push
mov
fmul
fdivr
aas
aas
nop
mov
sahf
mov
pop
push
mov
or
xchg
adc
cmp
sti
pop
adc
adc
lods
xchg
repz
mov
add
mov
add
jo
and
add
les
hlt
out
call
mov
and
mov
call
pop
push
mov
mul
sub
push
xor
xor
push
fisttp
xor
lods
or
jmp
push
test
mov
sub
repz
imul
cli
scas
test
rcr
add
mov
adc
ret
call
loop
bound
pop
and
fst
xor
mov
in
imul
movs
add
or
std
mov
outs
jae
and
push
jo
dec
pushf
or
call
sar
push
mov
dec
loope
call
(bad)
(bad)
xlat
or
xor
or
inc
and
add
mov
std
and
cmp
add
add
hlt
adc
mov
jae
sti
push
push
cmp
xchg
adc
ins
push
xor
ja
data16
clc
inc
call
push
(bad)
jmp
and
add
mov
pop
scas
add
or
jne
sbb
pusha
out
outs
lea
call
or
aam
jl
add
scas
cmp
mov
loopne
aas
push
lea
mov
jb
push
cmp
(bad)
test
xchg
mov
test
jb
or
out
outs
xchg
jp
pop
mov
inc
imul
stos
shl
or
mov
gs
(bad)
ja
dec
sbb
add
rol
mov
hlt
mov
add
push
cmp
hlt
add
add
(bad)
cmps
cld
jo
sub
mov
jno
jns
adc
jmp
cmp
or
mov
test
mov
in
cmp
or
fild
int3
mov
jmp
sbb
test
je
push
add
fadd
data16
lock
sub
gs
cdq
lock
leave
inc
dec
repnz
sbb
stc
mul
ret
inc
cli
test
push
repnz
mov
or
cmp
adc
rol
outs
mov
jmp
add
call
push
icebp
push
daa
xchg
mov
test
pop
push
push
add
jmp
stos
inc
scas
icebp
cmp
jb
jnp
aam
cmp
mov
mov
jge
movs
loopne
xchg
mov
adc
pop
js
clc
pop
test
inc
call
enter
xor
nop
cld
imul
xchg
add
sbb
push
xor
fmul
aam
add
mov
mov
dec
aam
hlt
pop
jbe
jle
or
or
jp
cmp
sub
cmp
call
xor
adc
push
std
cwde
mov
push
jmp
inc
push
dec
jbe
or
xor
push
adc
cmp
sbb
clc
loopne
std
mov
jle
call
or
aas
fistp
cmp
push
jne
rol
dec
in
les
mov
dec
lock
loop
sbb
shl
movs
lods
stc
mov
sahf
xchg
sub
mov
cli
(bad)
jl
jl
shl
test
adc
add
pop
retf
jmp
pop
mov
cmps
test
movs
leave
push
and
or
pop
dec
sbb
adc
retf
loop
pop
xor
adc
int
cmps
jne
mov
lods
pushf
out
add
sbb
inc
not
pop
and
xor
push
xchg
das
mov
jo
adc
or
mov
and
enter
fs
pop
sbb
ss
sbb
or
adc
aas
xchg
or
inc
xchg
add
add
mov
mov
pop
sbb
pop
mov
fcomp
shr
cmp
popa
cmps
pop
inc
mov
neg
or
or
pop
scas
sbb
jmp
out
je
pop
loope
jb
push
xchg
and
sub
sbb
call
cmp
push
cmp
xor
movs
sbb
sbb
pop
mov
lea
movs
mov
fidiv
xor
or
pop
icebp
outs
dec
mov
movs
jo
enter
mov
adc
add
out
icebp
jbe
adc
cmp
cli
inc
sbb
mov
mov
test
pop
add
aas
mov
in
mov
or
mov
sbb
stos
pop
inc
dec
xchg
sub
push
xadd
mov
mov
fdivr
(bad)
(bad)
cmp
jl
jmp
cmp
jne
mov
dec
ss
push
add
loop
call
push
(bad)
nop
nop
sub
sub
mov
movsx
mov
cwde
inc
mov
cmp
out
xchg
out
xor
inc
int3
ss
imul
jl
xor
xor
pavgw
push
add
(bad)
xor
movs
pop
pop
out
adc
or
adc
inc
fisttp
cmp
pop
(bad)
mov
mov
cmp
and
cmp
je
cmp
mov
rcr
and
into
mov
pop
and
pop
pop
cmp
pop
ret
pusha
retf
or
inc
mov
pop
pop
sub
cld
push
fbld
adc
add
or
test
add
adc
inc
mov
add
push
or
cmps
outs
mov
cmp
jmp
cmp
repnz
test
(bad)
fs
test
or
jmp
popf
lahf
sti
push
dec
out
cmp
jne
sub
jmp
and
mov
adc
xor
iret
cwde
mov
or
not
and
in
cmp
out
xor
fs
xchg
xchg
repnz
rol
add
fldcw
mov
mov
jb
xor
pop
into
into
cmp
fs
into
into
fimul
in
xchg
lock
je
push
jno
cmp
retf
jne
or
push
outs
jo
jns
adc
sub
dec
into
jnp
xor
scas
xor
mov
aaa
or
loopne
hlt
test
jns
mul
sub
xlat
loope
call
repz
lods
jmp
sub
ins
cli
add
cmp
retf
leave
out
inc
and
jmp
push
pop
sub
js
aaa
pop
jl
jp
inc
sub
xor
or
sar
pop
add
and
movs
cmp
mov
pop
pop
mov
push
jo
add
adc
mov
sbb
nop
pop
or
jbe
xor
or
test
retf
push
pop
push
push
ficomp
jbe
inc
or
add
add
push
xchg
cmps
rol
adc
and
adc
push
sub
stos
sub
push
aad
test
loope
sar
jne
stos
out
dec
cmp
push
sub
sub
les
inc
adc
add
jl
or
or
push
or
cmp
lea
and
add
add
push
push
movs
aas
inc
mov
jmp
adc
sub
shl
out
pop
pop
fnsave
pop
fwait
iret
pop
or
stc
or
or
xchg
jno
js
or
pop
pop
getsec
or
neg
arpl
daa
jl
adc
jne
sbb
dec
movs
gs
and
sbb
sub
or
xchg
or
gs
dec
or
test
jg
xchg
pop
jbe
push
lea
ja
jb
cmc
nop
inc
adc
jecxz
xor
fiadd
popa
dec
scas
(bad)
push
dec
pop
js
sbb
dec
mov
and
sbb
shl
mov
and
cwde
mov
cmp
mov
call
add
lods
cmp
cli
xor
fld
fimul
mov
pop
and
int
mov
enter
loopne
push
outs
ja
push
sub
mov
in
cwde
inc
xchg
cli
push
icebp
sbb
aam
and
cmps
push
leave
mov
pop
xchg
mov
inc
push
inc
ins
mov
(bad)
aas
xor
mov
mov
mov
dec
and
mov
je
and
das
xor
cmp
jb
cmp
ja
add
cmp
adc
push
xchg
or
sar
test
jle
jb
sbb
mov
cld
sub
in
sbb
pop
in
(bad)
sar
adc
(bad)
xchg
push
aam
push
dec
push
mov
push
clc
push
fadd
adc
add
hlt
push
clc
(bad)
icebp
or
dec
stc
test
test
cmp
sahf
mov
or
(bad)
sbb
inc
in
jmp
popa
mov
dec
(bad)
adc
je
aaa
sbb
lock
in
add
jge
add
fs
call
or
or
cmp
mov
inc
shr
dec
rcl
jge
jne
shl
or
es
lahf
aas
or
adc
ret
push
push
ret
push
sbb
add
dec
pop
lea
and
push
out
push
neg
loopne
jp
ret
adc
cmps
pushf
add
mov
adc
sar
sbb
outs
or
loop
push
dec
ror
cld
adc
retf
xor
dec
fdivp
(bad)
jae
fs
pop
les
mov
xlat
sbb
rol
je
adc
cwde
ror
or
mov
jb
adc
and
hlt
sar
test
aad
cmp
jae
dec
out
(bad)
adc
mov
pop
xor
cdq
fst
or
fistp
xor
lock
jecxz
or
dec
bnd
sub
lea
daa
pop
mov
add
inc
push
xchg
fist
jns
in
movs
lea
or
xor
in
mov
test
xchg
push
jb
pop
sbb
sbb
dec
es
stc
cld
pop
push
add
jnp
inc
cmp
fld
loopne
daa
jg
(bad)
push
aam
sub
adc
xchg
jnp
push
sbb
xor
mov
lods
xlat
pop
and
dec
sub
mov
adc
inc
xor
rcr
pop
cwde
in
adc
push
fdiv
jb
dec
sbb
test
stos
adc
ret
jmp
pop
mov
mov
pop
mov
sub
enter
stc
ret
xchg
lds
arpl
test
mov
inc
add
in
or
iret
in
xchg
imul
ret
pop
sbb
cmp
pop
pop
mov
sbb
mov
or
and
lock
adc
and
mov
aas
enter
add
clc
push
push
lahf
xlat
add
pushf
adc
or
sbb
mov
and
jno
fwait
push
mov
jecxz
ror
mov
lahf
mov
sub
fs
push
cmp
jmp
mov
pop
dec
mov
mov
mov
dec
push
clc
mov
fdiv
aas
aam
and
push
int3
pop
dec
and
out
dec
add
jmp
push
aam
movs
or
and
mov
cmps
adc
test
pop
or
imul
cmp
stos
adc
or
pop
enter
sub
or
(bad)
arpl
shr
call
nop
les
(bad)
push
inc
lahf
in
xchg
xor
or
sbb
jmp
rol
cmp
push
in
dec
(bad)
call
cmp
shl
or
sub
(bad)
sub
popa
call
cmp
sbb
in
lahf
aam
rcr
mov
cmp
dec
add
mov
or
push
or
jo
adc
(bad)
cmps
movs
lods
enter
stc
pop
jb
or
add
inc
leave
add
repnz
jg
inc
dec
leave
(bad)
fdiv
dec
pop
adc
leave
jo
cmp
in
(bad)
enter
mov
cmps
push
enter
xchg
mov
push
repnz
mov
adc
xor
mov
nop
inc
xchg
adc
fs
icebp
sub
jo
mov
or
dec
or
test
hlt
out
dec
push
or
cmp
mov
bound
adc
loop
mov
in
dec
and
repz
test
psubsb
adc
sbb
jbe
dec
les
pop
mov
dec
adc
fxch
lahf
test
sub
xor
mov
xlat
jmp
lds
loope
pop
ins
push
jmp
fistp
inc
lock
pop
mov
or
or
mov
mov
inc
jg
ret
and
jno
pop
les
inc
mov
xor
pop
call
fmul
aas
int3
clc
xor
and
mov
jmp
sbb
ret
and
adc
and
mov
adc
(bad)
cmp
iret
ins
xor
fwait
nop
add
jl
push
test
pop
xchg
inc
jne
inc
iret
push
cwde
ror
xchg
sbb
cld
push
mov
call
jns
pop
pop
fbstp
mov
and
movs
jns
dec
inc
push
push
jecxz
loopne
mov
mov
mov
pushf
mov
mov
pop
shl
cmp
add
cwde
push
pusha
leave
xchg
jo
xchg
dec
or
mov
ins
mov
lahf
mov
pushf
adc
cmp
pop
hlt
aas
dec
loopne
mov
mov
push
jae
or
repnz
mov
xchg
ds
add
inc
test
xor
xchg
mov
dec
ds
les
push
sar
adc
mov
pop
shl
push
fxch
mov
ds
adc
inc
in
test
fmul
mov
out
inc
out
xchg
add
mov
(bad)
xchg
or
je
and
push
pop
dec
jmp
and
cld
mov
inc
les
mov
loopne
lock
add
cmc
mov
retf
arpl
je
(bad)
adc
data16
push
shl
jl
loop
inc
and
pop
jmp
and
js
jns
add
sahf
jb
add
inc
adc
inc
add
neg
mov
cs
jl
jne
sar
cmp
jnp
push
push
pusha
and
aas
push
add
inc
add
outs
(bad)
(bad)
mov
fild
div
mov
out
and
popa
fs
ds
jmp
popa
ins
ins
outs
arpl
imul
and
pop
jo
mov
out
repz
sahf
mov
pop
adc
add
addr16
jns
(bad)
inc
jo
push
inc
aaa
dec
mov
cmp
lahf
adc
data16
imul
movs
and
push
lock
add
add
xlat
imul
push
cld
adc
fsubr
jns
out
stos
sub
push
pop
dec
outs
dec
jnp
add
inc
hlt
pmaddwd
iret
fwait
mov
or
push
push
or
fs
push
out
add
in
in
mov
daa
or
setae
jns
add
test
fs
cmp
and
aam
das
out
jg
push
sahf
aaa
or
dec
sahf
cmps
mov
popa
jecxz
loopne
stc
pop
sbb
push
add
push
dec
mov
add
sbb
and
add
pop
outs
out
xor
das
adc
daa
out
sahf
imul
inc
push
pop
inc
push
sahf
xor
sahf
out
aam
call
int
aaa
adc
push
xor
idiv
cmp
push
adc
push
es
repz
mov
pushf
dec
sar
iret
fiadd
sahf
out
push
inc
in
hlt
inc
repz
repz
cmp
dec
sub
iret
repz
fisttp
cmp
cmp
repz
xor
ja
or
push
add
mov
push
sahf
out
sahf
aam
in
cld
pop
out
and
jle
fsubr
push
push
inc
sahf
out
sahf
or
and
out
push
mov
js
out
ins
rcl
ins
popf
cld
cmp
(bad)
pxor
or
out
out
hlt
adc
sbb
daa
sub
push
jns
cmp
xor
inc
sbb
pop
fucom
(bad)
popa
fist
iret
sbb
cmp
push
mov
je
jne
jbe
jp
out
ja
or
jns
test
aaa
cmp
jnp
sbb
jl
cmp
push
push
pop
adc
jnp
xor
add
adc
mov
cwde
jge
jle
shl
pop
hlt
or
sbb
in
sahf
aaa
jo
fadd
lock
mov
test
or
fild
push
push
fwait
sahf
out
ins
and
or
repz
mov
dec
mov
cmp
cmp
fisttp
pop
cld
dec
repz
sbb
jb
cmp
repz
dec
mov
shl
inc
jb
imul
outs
pop
sar
out
imul
and
je
outs
outs
and
mov
(bad)
arpl
jbe
arpl
outs
popa
ins
ds
xor
cdq
xchg
aaa
and
and
jae
jne
push
bound
fldenv
jae
test
jb
sub
imul
arpl
jns
mov
je
outs
jbe
ins
imul
addr16
outs
cmc
fbstp
ja
sbb
fwait
outs
out
test
ins
xor
jnp
sbb
sub
mov
ins
xor
mov
popa
bound
repnz
call
ins
jg
ror
mov
xor
or
and
arpl
adc
sahf
xchg
and
outs
popa
jmp
pop
mov
gs
fistp
pop
jb
iret
pusha
inc
outs
mov
popa
fs
int3
data16
pop
imul
ss
push
das
or
call
call
mov
push
pop
jns
mov
pop
ins
add
sbb
jo
addr16
xchg
daa
jo
jae
pop
fsubr
and
mov
mov
xor
cmp
adc
push
pop
jbe
fild
fisub
pusha
adc
sub
and
movs
popa
addr16
sbb
outs
je
sbb
add
mov
mov
pop
imul
out
ins
pushf
fs
jp
ins
xchg
fwait
mov
xor
xor
and
ja
pop
adc
jp
mov
inc
pop
sub
sbb
push
ins
lock
scas
aas
xchg
pop
mov
lods
test
pop
mov
dec
imul
ins
xor
inc
lods
sbb
ja
ins
sub
mov
and
das
and
push
inc
data16
out
dec
jno
inc
daa
push
mov
stc
das
xor
push
fsubp
jecxz
outs
ins
outs
push
and
push
mov
daa
addr16
add
rcl
jo
adc
inc
and
xor
mov
aas
xchg
and
dec
add
(bad)
jle
data16
ins
push
jge
popa
jo
ja
fiadd
xor
movs
and
outs
push
bound
mov
mov
dec
and
and
mov
rol
shr
push
jo
add
popa
xor
sbb
je
push
mov
push
lock
imul
or
fbld
pop
jb
push
mov
and
or
and
xchg
stos
inc
xor
cmp
add
push
in
xor
das
pop
aaa
and
pop
pop
dec
mov
cmp
pop
sbb
mov
inc
xlat
add
aaa
icebp
pop
mov
push
fcomp
pop
lds
pop
loop
rcr
add
jae
bound
xchg
das
pop
sbb
cld
xor
ret
fcomp
lea
and
movs
faddp
and
arpl
jns
test
popf
mov
(bad)
fs
sub
sbb
sbb
sbb
xchg
or
jns
pop
icebp
jb
or
mov
je
push
mov
mov
mov
mov
pop
das
aas
xor
in
xor
data16
or
cmp
cld
ins
mov
jne
pop
push
cdq
add
mov
jae
push
popf
push
xor
in
fnstenv
call
jge
into
inc
es
shl
xor
pop
call
out
ds
clc
cld
add
add
pop
xlat
rcr
bound
ja
sub
repz
sub
sub
pop
loop
bound
add
adc
repz
or
and
sub
cmp
repz
or
xor
aam
jbe
push
nop
sbb
jmp
push
pop
inc
into
add
rcr
scas
pop
pusha
pop
push
mov
jnp
pop
inc
shl
push
mov
and
loopne
dec
loope
(bad)
and
fwait
out
mov
sbb
push
rcl
movs
jl
xchg
add
push
lock
adc
xchg
jl
rcl
and
ja
jo
pop
adc
pop
nop
mov
jg
cmp
sub
xor
ss
cmp
sar
pop
addr16
push
ins
ins
adc
sbb
jno
jno
ins
jne
ja
jns
add
adc
adc
or
or
or
std
inc
lahf
inc
sub
sbb
pop
push
adc
adc
sahf
cmps
add
femms
or
push
inc
inc
inc
inc
inc
inc
inc
add
add
push
pop
rol
dec
or
or
int3
cmp
outs
sbb
push
xor
and
nop
cmp
mov
mov
push
lods
or
adc
jg
icebp
jmp
jbe
add
add
pop
dec
call
(bad)
aas
call
dec
add
or
int
jns
push
das
push
int3
pop
test
mov
and
ins
dec
and
(bad)
jmp
sub
dec
sar
inc
aam
mov
fistp
(bad)
xchg
sar
rcl
lods
nop
(bad)
pop
call
adc
jg
iret
adc
mov
call
scas
cmps
mov
and
fstp
push
xchg
mov
inc
(bad)
(bad)
imul
aas
add
jl
pop
loope
jns
xor
into
fcomi
daa
push
lods
inc
cld
call
jb
das
ss
mov
ds
(bad)
(bad)
aas
add
jae
jno
hlt
dec
call
push
mov
xor
leave
mov
xor
test
and
pop
add
pop
mov
mov
mov
jbe
lahf
mov
add
fld
xor
inc
cmp
aas
rol
cwde
dec
addr16
out
rcr
jg
clc
dec
jno
and
gs
sahf
mov
dec
jo
std
push
xchg
scas
ins
aaa
cs
inc
cmp
(bad)
push
push
(bad)
call
jns
xchg
test
cmps
inc
pop
fwait
cmps
stc
sbb
(bad)
adc
sbb
push
pop
cmp
push
sbb
jo
(bad)
fnstsw
xor
fwait
mov
jmp
push
outs
imul
lods
nop
movs
arpl
push
aas
fcom
mov
in
pop
pop
add
mov
and
and
and
and
add
add
adc
inc
ja
add
cmp
mov
add
add
dec
cmp
add
ja
shr
popf
add
aaa
adc
mov
add
or
shr
add
(bad)
out
add
test
mov
nop
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
(bad)
(bad)
push
mov
mov
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
(bad)
call
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
adc
push
push
div
clc
stc
cli
sti
cld
adc
(bad)
dec
adc
sbb
sbb
push
pop
and
and
and
es
clc
(bad)
adc
sub
sub
sub
cs
out
cmp
cmp
ds
inc
xchg
add
stos
loopne
pop
pusha
aas
jnp
jge
jg
bound
call
xor
jg
inc
dec
dec
dec
dec
dec
dec
dec
dec
sahf
push
retf
jo
mov
pop
(bad)
aas
sldt
jbe
dec
add
jbe
add
inc
scas
inc
mov
imul
mov
or
adc
stos
ins
add
inc
ins
jae
out
jle
add
pop
inc
jb
cmova
push
mul
fld
pop
push
dec
outs
imul
adc
push
fild
movs
inc
js
and
push
ins
popa
jo
outs
dec
lahf
adc
and
jo
push
cwde
push
je
arpl
jne
and
gs
dec
and
iret
xor
push
(bad)
ds
pop
mov
push
inc
mov
adc
jae
jbe
mov
mov
xchg
(bad)
pop
mov
push
nop
jae
push
jmp
cmp
retf
dec
dec
imul
jb
push
push
mov
jb
inc
shl
jnp
inc
adc
cmp
jne
bound
ss
outs
addr16
pop
sbb
xor
ss
jno
outs
push
lods
dec
pop
or
mov
rol
pushf
push
cmc
imul
outs
popa
addr16
adc
jo
mov
je
outs
addr16
out
test
and
test
pop
repz
ins
imul
outs
aas
push
and
push
mov
adc
dec
jbe
dec
jae
push
sbb
mov
dec
inc
dec
jmp
sub
dec
fs
or
push
add
jns
out
add
add
sahf
push
xor
cmp
inc
jns
out
or
push
or
jns
out
or
or
sahf
push
jo
js
cmp
jns
mov
nop
adc
jns
out
adc
adc
sahf
push
mov
mov
out
sbb
sbb
sbb
jns
out
sbb
out
sahf
pop
lock
cmp
jnp
xor
push
or
adc
cmp
repz
and
cmp
sub
xor
cmp
cmp
repz
sub
push
repz
repz
iret
repz
push
cmp
repz
mov
nop
repz
repz
cwde
inc
mov
iret
test
mov
mov
cmp
dec
enter
cmp
repz
fmul
dec
into
repz
call
repz
xchg
add
pop
or
lods
xchg
into
adc
in
add
sbb
push
and
xor
out
add
add
sahf
out
pop
pusha
or
jns
or
test
jns
out
or
out
sahf
out
adc
adc
sahf
out
sahf
adc
adc
adc
xor
out
adc
sbb
cmp
repz
and
sub
repz
sbb
sbb
sbb
cmp
pop
pop
push
repz
and
iret
repz
and
cmp
repz
mov
cmp
repz
loopne
in
cmps
stc
cmp
sub
sub
out
sahf
sbb
sub
xor
inc
ss
aaa
pop
out
sahf
out
cmp
sahf
out
sahf
jl
mov
xchg
aas
jns
out
mov
out
sahf
out
les
int
jns
call
add
cmp
repz
dec
sbb
repz
repz
xor
dec
iret
repz
dec
push
push
push
pusha
push
cmp
repz
push
js
mov
cmp
repz
imul
mov
rcr
fadd
call
repz
add
cmp
repz
and
xor
repz
push
cmp
dec
sbb
cmp
ins
cmp
nop
inc
pushf
imul
les
pop
sahf
out
sahf
fmul
call
repz
je
into
push
or
and
out
cmp
xor
adc
jns
out
dec
pop
pop
or
sahf
out
jo
jl
adc
dec
not
movs
adc
dec
push
imul
adc
adc
adc
mov
xor
adc
pop
sbb
adc
sahf
out
or
or
out
jns
out
sbb
pop
sahf
rcl
ins
sbb
push
test
dec
movs
jmp
test
jnp
push
imul
cmps
and
and
and
popf
dec
movs
clc
and
or
adc
repz
add
and
sub
cmp
sub
sub
sub
movs
test
xor
imul
lods
rcl
cwde
xor
cmp
mov
push
imul
sahf
rcl
aam
loopne
in
iret
cmps
rcl
dec
add
dec
int
test
add
sub
xor
sbb
push
inc
cdq
lock
sub
push
repz
jne
dec
push
fmul
pop
fisub
cmp
mov
mov
iret
repz
xchg
aad
shl
cmp
rep
test
repz
(bad)
rcr
fadd
push
hlt
mov
iret
jnp
sbb
sub
or
push
and
or
fwait
or
out
iret
fwait
mov
push
dec
inc
pop
push
jge
pop
push
sahf
pusha
mov
js
inc
repz
out
sub
inc
push
nop
iret
repz
xchg
add
js
repz
test
push
mov
iret
repz
ss
push
mov
stos
or
fwait
add
inc
push
in
cwde
or
fwait
xchg
push
hlt
dec
xchg
or
xlat
xor
or
out
sahf
out
and
xor
cmp
outs
push
lds
jns
out
(bad)
ins
sar
out
sahf
dec
test
nop
shl
mov
push
pushf
ror
test
iret
repz
mov
ror
mov
iret
repz
shl
lock
lods
or
out
sahf
out
xchg
and
sub
out
sahf
mov
dec
repz
out
fistp
push
mov
push
cmps
cmp
cs
sahf
mov
inc
jns
es
push
pop
js
dec
xlat
cs
mov
iret
jnp
xchg
daa
or
mov
cmp
repz
scas
loopne
in
inc
sub
repz
mov
daa
or
aaa
outs
dec
pop
mov
sbb
dec
jo
fwait
adc
iret
(bad)
repz
inc
pop
data16
repz
or
sub
cmp
repz
pop
push
pop
fs
aaa
jmp
into
push
in
iret
repz
(bad)
xchg
push
mov
out
int
(bad)
xchg
push
push
pop
repz
fwait
aaa
mov
lods
(bad)
repz
js
cmp
es
adc
les
push
aam
inc
xor
loopne
repz
jns
and
sbb
or
jae
mov
sub
adc
sbb
outs
dec
cmp
aaa
cmp
sahf
out
sahf
push
cmp
mov
repz
jns
popf
push
dec
ja
outs
data16
jne
push
ja
push
jo
xchg
out
xchg
jle
push
push
xchg
cmp
mov
xchg
lea
ss
push
jle
adc
lods
fidivr
xor
push
out
push
push
push
les
out
cwde
ror
out
test
push
sub
repz
pop
rcl
pop
out
outs
bound
cmp
sbb
jns
cmps
xor
pushf
mov
(bad)
dec
push
pop
pop
push
cmp
repz
push
pusha
mov
iret
repz
cmp
retf
mov
daa
sbb
sar
mov
push
int3
ret
sahf
out
in
cld
cmps
jg
idiv
push
sub
outs
cmp
push
push
pop
aaa
xor
inc
jp
cmp
xchg
push
mov
iret
repz
cmp
pusha
adc
ins
sahf
mov
cmp
sbb
push
cmp
repz
nop
pop
into
mov
pushf
jl
jp
cmps
push
and
js
push
push
mov
push
xor
rcr
fdivr
daa
mov
push
imul
repz
sub
fsub
stos
pop
jns
iret
repz
fs
scas
mov
packsswb
setl
inc
push
das
jae
dec
fwait
jl
fs
gs
xchg
fdecstp
movd
imul
mov
dec
imul
add
in
jbe
cmp
jo
pop
jb
in
mov
jb
push
jno
jb
in
je
push
fcmovnu
(bad)
fs
outs
bound
fistp
ins
(bad)
ins
pop
ds
sub
mov
(bad)
scas
ins
cs
mov
popa
jg
outs
imul
mov
ja
jne
(bad)
mov
addr16
sub
gs
or
das
popa
pop
outs
outs
lock
jo
fild
jns
fs
fdiv
jbe
sub
sbb
aas
push
inc
js
or
scas
ds
pop
inc
push
inc
add
mov
fnsave
push
sub
jb
cmp
inc
add
cmp
push
jne
mov
ja
push
pop
je
out
mov
stos
retf
push
xchg
out
mov
mov
(bad)
loopne
pop
fimul
jo
scas
mov
push
mov
push
jb
push
lock
push
pop
push
movs
in
clc
aas
dec
xlat
mov
jbe
cmp
inc
ds
pop
jb
sub
imul
dec
jg
retf
dec
ret
mov
rcl
pop
mov
pop
mov
out
ins
xlat
jmp
out
mov
sub
outs
push
or
pop
pop
imul
stos
sbb
mov
pop
dec
dec
ds
sbb
xchg
pop
mov
(bad)
mov
iret
xlat
inc
cmps
outs
stc
sbb
dec
fbstp
dec
mov
jo
(bad)
gs
das
jae
out
repnz
(bad)
imul
inc
repnz
dec
das
push
mov
push
pushf
inc
push
ja
es
div
dec
xchg
mov
je
gs
sbb
jbe
ins
pop
jb
jae
mov
dec
arpl
ss
js
xchg
out
out
sub
(bad)
jmp
mov
jno
xor
add
js
out
ret
ins
cmps
dec
sbb
push
pop
pop
xor
lahf
mov
daa
xlat
pop
imul
inc
scas
pop
lds
jle
jg
xor
movs
push
jnp
pop
mov
pop
mov
inc
adc
ins
inc
mul
push
mov
add
inc
add
mov
inc
dec
test
out
add
lods
loopne
or
cmps
xchg
fisub
aas
xchg
push
add
stc
nop
das
dec
add
add
xlat
fidiv
test
jo
mov
(bad)
push
nop
cmps
ins
retf
mov
jbe
cs
pop
(bad)
mov
iretw
outs
(bad)
dec
pop
jae
and
inc
fist
cmp
rol
scas
push
das
inc
ins
ret
in
inc
inc
outs
scas
popa
or
sbb
daa
pop
push
mov
xchg
inc
dec
xchg
pop
push
stc
sub
dec
dec
push
je
fist
xchg
push
dec
addr16
dec
data16
addr16
aaa
pop
inc
xor
outs
ds
fdiv
mov
inc
dec
jg
push
out
call
dec
inc
not
outs
(bad)
scas
pop
inc
inc
dec
das
outs
mov
sub
dec
inc
inc
pop
push
scas
pop
fwait
sbb
push
das
push
in
xlat
sbb
adc
add
imul
add
dec
(bad)
push
jo
mov
pop
mov
in
ins
neg
aas
data16
xlat
or
fidiv
jl
add
dec
pop
inc
xchg
(bad)
pop
imul
imul
jl
add
add
and
out
jb
das
jno
xchg
fdiv
ja
(bad)
in
pushf
pop
addr16
or
popa
inc
add
ins
mov
inc
or
or
movs
mov
cs
ja
sbb
mov
ret
ja
mov
pop
bound
fisttp
pop
push
mov
mov
pop
retf
aad
jmp
or
out
cmp
dec
pop
bound
enter
jp
pop
(bad)
addr16
arpl
xchg
sbb
jo
push
adc
add
fwait
lds
ficom
ja
inc
pop
mov
pop
jnp
outs
pop
arpl
ins
das
es
mov
fs
stc
nop
imul
add
add
ins
add
add
cdq
test
pop
gs
rcl
cmp
pop
xor
ja
aaa
gs
xchg
mov
or
or
or
pop
dec
(bad)
xlat
pop
push
and
fdiv
ins
dec
das
out
lahf
mov
adc
ja
imul
pop
les
sbb
inc
or
push
jecxz
xlat
popa
ret
pop
mov
(bad)
dec
loop
(bad)
ins
pop
or
push
jbe
sub
push
jp
adc
pop
(bad)
xchg
sbb
in
pop
pop
dec
jb
jns
loope
jecxz
inc
or
out
sbb
jg
out
mov
stos
outs
outs
mov
pop
jb
das
pop
inc
jbe
sub
out
js
xchg
xchg
xchg
addr16
cwde
cs
outs
or
jae
outs
xor
and
mov
or
fisub
sti
sub
jae
and
xlat
or
jae
div
(bad)
call
dec
xchg
retf
ja
pop
or
imul
dec
adc
pop
enter
imul
push
cdq
lea
sti
pop
jae
mov
(bad)
jno
ins
pop
das
mov
jo
jg
pop
pop
inc
jnp
stc
jae
jo
pop
jbe
scas
loopne
repz
div
imul
jo
ror
ins
push
gs
lods
add
dec
or
ror
jne
loopne
repnz
jne
and
data16
rcr
xchg
test
sbb
out
mov
aad
mov
arpl
jb
outs
pop
push
sahf
pop
ins
add
addr16
ja
iret
add
and
push
sbb
in
lea
mov
nop
xchg
xchg
leave
and
mov
push
jne
jbe
xchg
xchg
xchg
jb
mov
inc
outs
jb
js
icebp
push
push
inc
shr
xor
cmp
or
mov
xor
jne
mov
sbb
scas
neg
pusha
test
mov
adc
xchg
scas
cmp
push
outs
inc
mov
ins
ja
mov
xor
scas
jp
outs
cmp
sbb
sub
and
mov
fwait
cli
and
mov
sbb
and
and
sbb
fidivr
cmp
mov
pop
mov
sub
jnp
fisub
outs
dec
imul
add
cs
imul
enter
jo
cmp
jnp
je
ins
xlat
je
push
jo
and
jae
aas
cs
push
mov
scas
xor
xor
lock
bound
shl
sub
scas
sbb
cmp
xor
out
mov
ins
iret
xor
ds
arpl
outs
xor
(bad)
push
outs
xor
es
out
ret
sbb
imul
aad
imul
fdiv
fist
(bad)
push
adc
push
pop
(bad)
cmps
xchg
mov
sub
(bad)
xor
xor
lds
adc
sub
ja
out
ins
sbb
xchg
add
icebp
outs
cs
fs
cli
mov
daa
popa
imul
jae
aas
or
(bad)
ret
and
mov
cs
mov
(bad)
adc
mov
repz
add
and
dec
fisttp
mov
cmc
(bad)
pop
ins
push
pop
mov
jge
addr16
(bad)
jns
jo
pusha
repnz
pop
dec
je
lods
ficom
(bad)
fbstp
dec
mov
sbb
mov
push
jb
js
xor
jb
shl
xchg
stos
and
data16
pop
cmps
loope
dec
sub
inc
push
arpl
xor
mov
mov
popa
push
outs
inc
scas
mov
out
jae
cmp
js
daa
dec
jbe
scas
xor
out
fmul
es
aas
and
addr16
sar
sub
cmps
arpl
push
push
rcr
addr16
jge
push
xor
push
pop
fld
outs
dec
inc
push
cmp
ss
into
xchg
ins
dec
adc
out
outs
sahf
out
ds
cmp
or
repz
xor
adc
shr
adc
adc
push
cmps
stc
cmp
sbb
sbb
sbb
sar
sbb
push
push
je
dec
imul
push
and
imul
sbb
cmp
repz
jl
cwde
(bad)
mov
out
xor
out
clc
mov
push
imul
sbb
mov
mov
inc
and
jo
mov
ds
mov
mov
pop
jg
jge
sti
fwait
imul
or
(bad)
cs
sahf
addr16
out
jecxz
jae
jl
js
aaa
push
iret
mov
pop
ret
and
sbb
fimul
jmp
pop
lock
out
out
arpl
xlat
bound
pcmpgtw
arpl
fst
cmp
ins
sub
outs
mov
add
adc
xor
add
and
push
pop
stos
test
xor
and
fisttp
or
pusha
test
js
or
fcmovnu
cdq
jns
pop
add
sbb
push
jne
shl
dec
test
jbe
mov
push
push
mov
push
cs
ss
mov
cmovbe
jmp
iret
adc
adc
pop
jb
outs
jbe
mov
adc
daa
dec
popa
mov
bound
popa
and
push
dec
sub
out
ins
push
mov
or
outs
push
dec
arpl
dec
outs
xlat
fs
arpl
jns
fcompp
sub
jb
pop
push
arpl
imul
in
jbe
mov
test
pop
jbe
cmps
outs
adc
idiv
in
inc
dec
push
push
dec
dec
das
fs
jns
add
(bad)
jg
sahf
dec
and
sub
dec
cmp
cmp
jne
test
xchg
cmp
push
gs
arpl
fcmovnbe
jge
pop
inc
mov
jnp
sbb
jg
(bad)
mov
(bad)
and
mov
in
jb
iret
pop
fucomip
sub
in
dec
daa
dec
mov
call
pop
inc
inc
pop
jns
pop
mov
dec
jne
ins
aas
es
loope
cmps
gs
sahf
outs
cmp
xchg
or
jne
iret
jb
(bad)
fidivr
mov
aaa
out
bsf
js
sub
imul
sub
sub
pop
mov
bound
jb
pop
lds
or
das
inc
inc
daa
ja
push
test
push
dec
add
jbe
out
add
jmp
outs
aaa
jbe
add
and
dec
fmul
pop
test
add
ret
jp
and
(bad)
loopne
or
and
pop
jl
and
movs
jns
inc
inc
add
dec
cmp
dec
inc
mov
dec
loopne
xor
add
addr16
inc
das
push
pop
xor
dec
dec
and
arpl
push
ss
es
(bad)
jnp
in
push
pop
dec
dec
das
add
sub
ins
sbb
cmp
sub
mov
pop
push
sub
fs
movd
fadd
pop
icebp
leave
push
push
arpl
push
push
inc
sub
cmp
xor
dec
popf
push
dec
dec
inc
dec
sbb
cwde
pop
xor
sti
push
(bad)
inc
loopne
imul
pop
adc
xchg
dec
fucomip
push
sub
ja
outs
addr16
xor
fild
dec
imul
fnstsw
popa
xor
xor
xor
dec
loopne
rdmsr
outs
shl
jae
cmp
rcl
data16
pusha
dec
loope
outs
fldcw
xor
sahf
loopne
arpl
jns
mov
outs
add
mov
xor
xor
adc
mov
(bad)
pushw
cmp
lods
push
inc
add
add
hlt
loop
add
sbb
sbb
shl
add
add
ret
mov
aas
and
in
xchg
lahf
into
push
add
pop
lock
jg
fwait
jge
sbb
jg
adc
(bad)
cwde
ror
addr16
add
mov
inc
aaa
mov
pop
aam
mov
mov
add
rol
jbe
ror
ret
inc
mov
es
sbb
outs
daa
push
into
jne
(bad)
dec
jg
bound
sub
sahf
movs
mov
scas
jecxz
jecxz
je
call
cld
sahf
out
or
adc
sub
scas
mov
push
ss
xchg
dec
add
ds
cmp
push
je
es
sahf
ja
jl
test
mov
fisub
and
test
lods
loop
repz
push
mov
iret
repz
int3
rcl
fdiv
cmp
repz
in
in
out
cmp
lock
clc
cld
add
sahf
out
sahf
add
or
adc
jns
out
and
cmp
jns
out
jl
mov
lahf
cld
sbb
inc
pop
and
in
clc
add
iret
repz
mov
pop
je
iret
repz
mov
push
loope
cmp
push
js
enter
adc
sahf
cmps
pop
pop
bound
xor
xchg
es
popa
ins
mov
fs
ins
je
jae
popa
(bad)
neg
push
data16
push
xor
je
ss
movs
mov
jb
arpl
les
cwde
outs
ss
cmp
mov
cli
ins
pop
mov
ds
cmp
stos
test
jge
cmp
pop
dec
push
out
repz
lods
inc
sub
xlat
call
aas
and
xchg
cmp
ds
push
sub
sub
mov
push
repz
sub
sub
cli
jns
fnstcw
inc
cmp
data16
fist
bound
test
add
pusha
call
cmc
pop
data16
and
pop
and
fs
jae
cmp
mov
jbe
repnz
shl
daa
daa
pop
bound
cmp
fcom
xor
fadd
jb
jae
mov
jnp
jg
jge
imul
(bad)
cmp
aas
jne
adc
inc
imul
jo
xchg
nop
aaa
in
dec
pop
mov
gs
ror
or
popa
mov
cs
push
pusha
jne
das
mov
xchg
dec
mov
fild
push
push
push
push
dec
ja
sbb
(bad)
pop
pop
push
in
mov
ins
mov
jo
jae
out
dec
mov
test
cmp
or
cs
xchg
inc
dec
add
les
inc
dec
lahf
push
xor
test
test
and
test
out
pop
cmp
inc
nop
aaa
mov
pop
loopne
data16
inc
rcl
and
push
scas
(bad)
rol
pop
je
fs
push
scas
and
neg
mov
ins
or
pop
jnp
pop
mov
jb
jns
mov
dec
dec
or
pop
callw
nop
daa
mov
hlt
or
std
in
add
add
push
xchg
inc
dec
pop
test
add
push
or
sub
cmp
inc
pop
js
push
mov
int3
xor
push
mov
into
js
jo
add
jnp
cwde
jnp
cld
cs
xchg
les
pop
cmp
xchg
dec
xor
inc
jo
ss
dec
outs
sub
push
xchg
cmp
cmp
call
out
imul
das
nop
pop
and
cmps
loopne
fist
xor
pop
mov
dec
sahf
(bad)
pop
dec
les
add
fsubr
daa
iret
dec
sbb
pop
iret
leave
jae
push
push
jl
mov
pushf
cmp
inc
enter
imul
clc
inc
xlat
sbb
daa
iret
int
pop
inc
mov
in
jecxz
js
inc
push
cwde
dec
sahf
xchg
out
ror
fsub
test
xchg
push
push
cmp
in
dec
jo
pop
xchg
push
jbe
cmp
mov
enter
xor
and
repnz
cmp
inc
ins
inc
cmp
iret
leave
movs
inc
les
in
stc
pushf
inc
adc
xchg
out
push
dec
je
out
cmp
inc
mov
xchg
fcom
push
and
into
jae
mov
push
mov
xchg
push
(bad)
nop
ss
pop
pop
jmp
arpl
add
stos
daa
movd
push
sub
fstp
mov
sbb
mov
inc
fs
xchg
out
dec
adc
imul
inc
loope
cmp
jae
xor
pop
dec
shr
xchg
fild
bound
jmp
jne
sub
xor
imul
das
mov
aad
adc
bound
pusha
imul
iret
inc
push
pop
aas
jnp
dec
pusha
push
jae
je
sub
push
cmc
pop
(bad)
imul
aas
ficomp
arpl
outs
addr16
ins
movs
mov
das
jae
push
bound
push
pop
aas
dec
cmc
inc
and
aas
cmps
js
pop
add
imul
inc
mov
out
addr16
call
mov
aas
jg
add
popf
out
sahf
push
gs
rdtsc
or
push
inc
bt
pusha
fbstp
mov
jnp
outs
cmp
inc
movs
mov
imul
mov
jnp
imul
inc
push
add
das
jg
dec
xlat
pop
retf
mov
pop
out
lahf
das
cmp
lods
imul
xchg
mov
inc
popa
xchg
aas
fistp
aaa
ja
ret
sbb
push
in
jnp
inc
fisub
mov
aam
dec
fs
jecxz
add
ret
repz
sar
lods
out
inc
arpl
das
pusha
mov
dec
aas
fistp
in
inc
jae
jbe
mov
stos
aas
pop
cmp
jnp
mov
jne
xchg
sub
xchg
js
or
sbb
ret
daa
fadd
pop
add
pusha
shl
mov
aaa
jne
push
ins
out
push
outs
dec
jne
retf
imul
aas
stos
outs
jp
cmp
push
inc
pushw
rol
add
outs
dec
mov
mov
dec
les
inc
pop
cli
les
inc
aam
outs
mov
pop
pop
daa
inc
cld
pop
cmp
daa
pop
sbb
mov
push
sub
in
int
(bad)
cmp
jbe
push
push
into
mov
das
pop
cmp
pop
clc
xor
dec
neg
jns
lods
call
loop
aaa
loopne
cld
sbb
sub
adc
push
add
sub
in
adc
cmp
pop
cmp
inc
pop
ficom
xchg
inc
loope
add
push
scas
mov
popa
pop
dec
and
xchg
adc
cdq
jg
xchg
ins
push
jmp
sub
push
into
bnd
popa
push
mov
outs
ret
dec
(bad)
dec
outs
sub
daa
sub
dec
sub
loope
(bad)
xchg
aaa
pop
cmp
pop
inc
mov
sub
sub
(bad)
jne
add
pop
imul
fadd
inc
fwait
mov
out
icebp
pop
mov
push
dec
pop
add
daa
or
sbb
adc
repnz
movs
mov
sbb
jo
sub
mov
test
int3
and
inc
dec
jae
dec
inc
add
push
ud0
(bad)
(bad)
jns
cmp
dec
xor
inc
dec
pop
outs
inc
ins
ss
dec
dec
dec
dec
xor
imul
(bad)
(bad)
cmp
xor
imul
jns
aaa
outs
ss
je
outs
push
popa
js
imul
outs
aad
call
cmp
pop
xor
bound
outs
(bad)
(bad)
(bad)
call
dec
imul
jns
inc
dec
push
push
dec
outs
inc
push
xor
cmp
inc
dec
dec
jns
(bad)
(bad)
(bad)
call
fs
push
jno
push
inc
inc
jno
arpl
outs
dec
ss
jo
jno
dec
push
dec
inc
xor
jne
push
aaa
xor
fs
push
pop
push
dec
ins
push
xor
outs
imul
jb
jns
jno
lods
pusha
ror
aaa
ja
dec
ins
dec
ins
dec
xor
(bad)
(bad)
(bad)
call
dec
push
inc
push
inc
dec
jns
xor
dec
push
ins
ins
je
jbe
jbe
popa
(bad)
(bad)
(bad)
jmp
cmp
push
ja
inc
push
jns
push
pop
popa
push
dec
dec
jae
push
dec
js
jno
pop
imul
(bad)
jmp
xor
dec
dec
inc
xor
inc
inc
addr16
cmp
ja
inc
jne
outs
jb
push
jne
ins
dec
(bad)
(bad)
fbstp
inc
ins
dec
(bad)
addr16
dec
xor
inc
push
addr16
ins
jp
(bad)
call
(bad)
ja
push
jp
xor
ds
jno
inc
push
outs
addr16
inc
inc
cmp
dec
inc
dec
imul
dec
outs
arpl
inc
jns
repnz
bound
in
pop
sub
xor
xor
push
cmp
push
dec
fs
xor
dec
xchg
add
outs
jo
inc
jae
dec
jo
bound
xor
sti
(bad)
fild
adc
dec
outs
xor
inc
dec
xor
dec
mov
or
xor
dec
push
jo
addr16
xor
xor
inc
mov
icebp
jo
arpl
inc
push
jo
jp
adc
cmp
neg
jle
xor
jb
out
inc
xor
push
aaa
sbb
jne
xor
mov
ja
inc
push
je
pop
jno
hlt
in
push
inc
je
push
push
xor
cld
inc
popa
ss
push
inc
dec
jae
xor
mov
push
inc
inc
xor
xor
push
dec
xor
cli
imul
into
arpl
jp
mov
jns
inc
jae
pop
icebp
neg
pop
jne
jp
push
imul
rcr
je
dec
ja
lods
loope
push
dec
mov
cmp
int3
cmp
das
clc
fbstp
movs
jno
xor
xor
ins
push
inc
push
push
arpl
push
(bad)
(bad)
(bad)
jmp
push
push
inc
cmp
dec
xor
push
dec
jne
xor
jne
dec
push
jb
cmp
cld
dec
jae
dec
js
js
dec
jno
dec
xor
jne
es
inc
ret
(bad)
call
inc
pop
xor
xor
xor
inc
cmp
push
jae
(bad)
(bad)
jg
push
outs
jae
cmps
inc
push
inc
aaa
inc
push
pop
dec
ss
cmp
xor
arpl
ja
mov
dec
ja
xor
dec
dec
mov
clc
push
inc
ins
dec
push
outs
ja
jae
lock
js
arpl
xor
sub
fadd
jb
loop
sbb
jbe
imul
push
push
jno
inc
pop
or
das
clc
aaa
mov
imul
inc
inc
outs
xor
inc
into
inc
xor
dec
push
and
xor
retf
jno
push
push
arpl
inc
jbe
and
inc
dec
pop
inc
inc
dec
xor
push
add
jmp
inc
xor
dec
inc
dec
jne
outs
dec
dec
mov
push
jge
mov
push
dec
jne
jns
addr16
pop
inc
imul
jp
jbe
xor
les
inc
inc
sbb
lock
dec
popa
inc
dec
ins
inc
xor
scas
xor
sahf
cwde
or
bound
pop
test
jno
jb
xor
inc
dec
xor
aaa
bound
loop
xchg
push
ja
push
push
push
cmp
gs
mov
xor
xchg
inc
push
sub
test
imul
cmp
dec
cmp
ins
mov
js
push
push
outs
push
inc
inc
cmp
ins
pop
jae
inc
push
xor
fcomip
jbe
je
jle
dec
inc
jae
dec
ins
test
outs
xor
pop
pusha
mov
sub
hlt
push
xor
pop
not
mov
fdivr
jbe
inc
rol
cwde
push
ins
push
xor
mov
js
push
push
xor
ja
je
add
xor
aaa
push
pop
imul
jb
sub
fmul
push
cmp
dec
js
push
ins
dec
push
popa
inc
inc
inc
dec
test
(bad)
out
fimul
inc
inc
enter
inc
bound
loop
mov
outs
bound
imul
bound
shl
xor
push
pop
ja
inc
cmc
mov
outs
pop
ins
call
jns
mov
dec
inc
jp
outs
je
cmp
cmp
fs
cmp
inc
mov
adc
js
imul
pop
inc
inc
jp
push
and
dec
jb
pusha
dec
cmps
inc
ja
scas
pop
xor
inc
push
inc
jae
dec
push
push
ja
ss
ja
xor
inc
push
jp
(bad)
fs
jae
add
push
ins
mov
xor
fsub
jae
add
inc
mov
push
sbb
dec
inc
dec
jo
shl
inc
dec
in
inc
cmp
js
gs
cmps
dec
imul
outs
push
test
rcr
shl
inc
je
inc
jns
fs
popa
jmp
dec
imul
jno
outs
arpl
mov
mov
fs
sbb
dec
inc
bound
fsub
mov
cmps
pop
(bad)
pop
push
je
loop
outs
xor
cmp
dec
mov
and
or
inc
pop
dec
imul
bound
into
xor
bound
lods
into
dec
add
aaa
push
dec
ins
popa
in
mov
sub
inc
js
push
pop
gs
xor
dec
nop
outs
scas
jmp
inc
jbe
imul
cmp
mov
jle
jb
xor
bound
sub
push
push
arpl
push
ins
dec
xor
aaa
in
add
jb
dec
dec
xor
jp
jbe
mov
inc
imul
xchg
popa
imul
loope
enter
xor
xchg
fwait
pop
mov
push
jb
jo
jne
jmp
js
ins
mov
xor
mov
addr16
ret
add
dec
je
push
jo
sar
mov
inc
js
out
ins
xor
outs
dec
je
mov
inc
push
push
les
push
ins
push
mov
jae
push
push
xor
cmps
mov
jo
push
dec
dec
je
mov
inc
popa
jo
ja
pop
inc
jne
push
push
ins
xor
test
push
jle
push
fisttp
dec
imul
pop
ins
fcomip
aaa
sbb
jne
ins
imul
dec
xor
outs
dec
shr
sbb
fs
leave
aam
and
mov
push
push
pusha
jo
inc
inc
imul
jg
or
outs
cmp
jno
dec
push
aaa
pusha
push
xchg
loop
popa
jbe
pop
inc
retf
(bad)
push
data16
ss
inc
dec
pop
dec
inc
jno
inc
xor
inc
inc
gs
push
sbb
retf
add
fs
push
inc
inc
adc
push
bound
mov
ficom
xor
inc
pop
dec
push
dec
push
or
mov
cwde
push
jbe
imul
mov
push
push
pop
ins
xor
jb
cmp
cmp
push
push
xchg
aam
push
dec
outs
js
push
cmp
sbb
pushf
imul
fsubr
xor
dec
or
outs
ins
push
gs
jb
loopne
inc
xor
gs
cmp
inc
out
push
push
push
xor
jno
push
addr16
push
push
and
xor
xor
fdiv
jmp
dec
inc
loop
push
pusha
push
jo
jp
arpl
and
jmp
inc
add
fs
inc
cmp
je
(bad)
jp
push
imul
arpl
mov
push
cmp
dec
dec
add
jns
pop
dec
sar
jbe
add
js
dec
push
inc
xor
add
sub
jb
inc
dec
inc
xchg
add
dec
cmp
pop
sbb
xor
xor
popa
dec
imul
xor
sbb
add
dec
cmp
push
cwde
cmps
jmp
push
(bad)
pop
or
data16
add
xor
cmps
xor
test
xchg
int3
arpl
jns
xor
je
pop
inc
mov
xor
mov
push
push
fmul
movs
aaa
ja
or
pusha
ret
loop
ss
jb
jno
push
xor
jb
scas
mov
push
inc
cmp
in
inc
cmp
jb
jne
mov
js
cwde
push
inc
push
push
push
xor
loopne
pusha
adc
push
outs
enter
rcl
and
jle
imul
fs
mov
dec
push
bound
jae
fdiv
or
mov
xor
gs
call
jns
dec
dec
inc
xor
sbb
outs
dec
popa
fbld
sub
inc
push
add
adc
ins
fs
push
arpl
sahf
cmp
pusha
dec
inc
call
pop
pop
js
xor
cmp
inc
inc
mov
sti
fcomip
xor
xor
xor
inc
dec
ja
push
or
jb
push
push
push
cld
mov
pop
xor
xor
inc
outs
push
test
mov
push
inc
adc
js
in
fwait
in
jae
xor
xor
dec
js
mov
ins
stos
dec
popa
es
push
cmp
jne
push
jb
loopne
pop
jo
dec
push
imul
push
call
fdiv
push
jns
into
jp
movs
je
ss
add
stos
lock
jbe
push
push
aaa
cmp
cmp
scas
jg
js
ins
push
xor
dec
nop
inc
bound
inc
jno
bound
sbb
xor
fs
inc
ins
pop
rcl
jbe
push
push
mov
or
scas
push
jae
js
bound
je
xor
adc
lea
mov
ss
push
jl
push
add
(bad)
jno
xor
pop
inc
(bad)
inc
jns
ins
je
dec
push
inc
dec
js
dec
xor
imul
inc
push
adc
pop
popa
jmp
outs
jno
retf
jne
sahf
inc
dec
stos
in
push
xor
inc
je
test
xor
sar
xor
push
ss
push
pop
or
xor
inc
pusha
je
or
jg
ins
dec
nop
dec
xor
push
inc
push
jae
dec
jns
jno
add
loopne
test
adc
push
gs
inc
ja
repnz
push
or
fistp
xor
push
dec
inc
pop
loop
js
dec
or
cmp
hlt
(bad)
mov
bound
ins
popa
ins
push
xor
xor
fadd
ins
outs
ins
mov
push
cmp
xor
push
jbe
inc
inc
jns
push
jno
lock
loopne
inc
je
cmp
push
fs
lds
pop
dec
imul
jp
arpl
dec
push
jno
cmp
adc
jae
xor
pop
pop
in
add
stos
jb
push
push
ss
addr16
aaa
sub
pop
push
jbe
inc
sbb
gs
pop
add
dec
xor
test
xor
(bad)
outs
cwde
imul
bound
jae
dec
dec
jb
mov
jns
arpl
dec
push
inc
addr16
loope
or
add
outs
push
ja
pop
push
add
jle
adc
imul
pop
inc
(bad)
shl
inc
test
push
jp
jns
xor
(bad)
mov
outs
inc
gs
inc
ss
ja
call
inc
dec
push
sub
mov
mov
ins
ins
dec
pop
jmp
js
jns
inc
addr16
outs
(bad)
jo
ins
or
jbe
cmp
cmp
cli
scas
pop
xor
push
outs
jno
xor
pop
arpl
(bad)
pop
fsubr
adc
popa
dec
popa
shr
inc
adc
or
aad
ss
xor
ret
inc
imul
bound
push
xor
push
in
jb
xor
dec
inc
popa
data16
push
gs
lods
mov
xor
push
clc
aaa
arpl
push
inc
ins
dec
pop
dec
xor
xor
push
dec
xor
sub
mov
jle
imul
pushf
pop
jo
dec
add
popa
push
push
cmp
mov
bnd
cmp
fbstp
ins
call
inc
push
jb
(bad)
jecxz
push
dec
jne
push
push
push
imul
dec
lock
push
inc
arpl
(bad)
xor
sub
idiv
push
fidiv
sub
jno
push
dec
dec
dec
jp
ds
sbb
pop
aaa
push
and
push
sub
retf
or
inc
outs
inc
js
js
xor
mov
mov
lock
dec
push
mov
or
dec
pop
in
sbb
bound
ins
fwait
scas
inc
dec
sub
cmp
popa
imul
add
jb
jb
lods
push
imul
sub
addr16
jae
in
mov
imul
sahf
retf
jns
push
mov
push
ins
loop
ret
pop
dec
inc
jo
or
lock
xor
dec
push
imul
rcr
push
push
(bad)
jne
ins
inc
dec
aaa
dec
stos
popa
xor
add
gs
jo
pop
jno
dec
cmp
dec
xor
push
js
outs
dec
retf
or
pop
adc
out
pop
aaa
jbe
jb
dec
imul
adc
je
ja
xor
mov
dec
jno
xor
xor
jbe
jmp
inc
dec
inc
dec
cmp
bound
xor
jp
mov
mov
out
or
xor
dec
sbb
inc
jb
push
push
dec
dec
xor
js
cmp
sub
jo
inc
outs
fisubr
jb
fsubr
cmp
ss
mov
mov
push
jo
add
and
add
js
call
jp
outs
xor
js
push
sbb
cmp
fadd
stos
outs
mov
jno
push
xor
hlt
imul
es
shr
jb
jb
add
mov
xor
jae
cli
inc
and
dec
dec
aaa
dec
pop
jne
inc
dec
lock
xor
push
push
push
addr16
inc
xor
mov
push
addr16
enter
add
mov
xor
push
push
sub
or
add
cli
cmp
cmp
dec
inc
jae
inc
xlat
mov
jae
dec
jne
xor
loopne
sbb
sbb
and
dec
arpl
das
rol
xchg
xor
ins
fs
pop
popa
dec
dec
lock
mov
loopne
xor
jp
push
aaa
xor
xchg
dec
push
data16
pop
enter
cwde
or
rol
dec
xor
imul
pop
push
push
push
arpl
inc
imul
inc
les
ret
push
dec
outs
dec
mov
aaa
ja
push
dec
arpl
push
cmp
inc
inc
push
add
lods
dec
out
imul
ss
pop
xchg
outs
jne
jo
jns
push
cmp
pop
mov
mov
arpl
cmp
jp
(bad)
js
cwde
rcr
push
dec
dec
push
jmp
(bad)
add
pop
inc
xchg
test
outs
xchg
sbb
xor
xor
xor
jp
push
jns
push
mov
data16
inc
jbe
jbe
adc
ins
push
dec
or
sub
push
outs
imul
pop
dec
mov
or
add
popa
xor
push
mov
(bad)
cmp
mov
jno
fs
jbe
sbb
push
fs
jb
icebp
stos
sbb
lods
dec
dec
jns
push
les
push
nop
ins
xor
xor
mov
pop
call
xor
dec
dec
test
push
aad
dec
fadd
push
dec
push
cmp
and
add
xchg
push
dec
jo
push
test
sbb
push
jb
lods
dec
sub
push
les
mov
dec
jae
xchg
jb
pop
(bad)
jp
dec
fisttp
inc
pushf
jae
cld
mov
xor
xchg
ret
dec
dec
in
pop
dec
push
xor
xor
aaa
ins
push
add
mov
sub
cmp
push
outs
inc
(bad)
dec
push
jno
dec
push
inc
inc
scas
push
lds
outs
inc
jp
inc
push
cmp
das
mov
xchg
dec
push
les
jl
mov
jno
ds
dec
pop
push
inc
dec
stos
mov
xor
gs
xor
outs
jo
mov
xor
push
cmp
rcr
jp
jns
xor
sbb
inc
jae
retf
pop
cli
popa
jb
js
lods
pusha
dec
or
xor
dec
inc
or
shl
pop
pop
push
retf
addr16
dec
push
or
dec
je
out
mov
jg
dec
js
cmp
pop
push
ss
bound
arpl
sbb
pop
pushf
jbe
gs
push
dec
outs
icebp
push
push
xchg
pop
ret
push
jo
inc
(bad)
sbb
inc
dec
xor
inc
push
retf
pop
fs
fs
das
xchg
bound
push
push
ins
mov
bound
data16
js
ins
push
xchg
ja
mov
inc
outs
jb
xor
inc
pop
rol
je
sbb
inc
inc
pop
fs
mov
ret
int
xor
fs
data16
jno
push
bound
push
cmc
cmps
pop
cld
ss
bound
mov
fistp
push
dec
jbe
pop
imul
jne
push
shr
aam
call
add
bnd
dec
sub
inc
rcr
mov
push
gs
mov
das
inc
dec
ds
dec
xor
xor
outs
js
data16
fsub
sub
mov
inc
jmp
arpl
jo
inc
mov
dec
dec
jns
dec
movs
jo
fmulp
mov
(bad)
push
inc
pop
mov
jae
repnz
fs
adc
inc
xor
ins
int3
dec
ja
mov
push
jne
inc
dec
pop
xor
jl
jmp
xor
xor
outs
cmp
xor
inc
push
call
xor
outs
dec
outs
inc
or
jns
inc
push
xchg
adc
jne
push
dec
dec
add
cli
jb
xor
adc
push
push
jp
jb
inc
ret
push
jo
ss
gs
dec
fs
in
enter
addr16
push
outs
sub
loope
xor
inc
fsubr
xchg
push
xor
push
push
fs
mov
push
je
push
js
jne
inc
jbe
es
ffree
dec
push
push
push
mov
or
pop
push
mov
jle
dec
mov
dec
dec
arpl
inc
jae
ss
dec
call
inc
push
inc
push
inc
gs
inc
inc
jb
arpl
outs
popa
dec
js
push
jno
jle
pop
push
xor
cmp
jmp
fs
push
jp
bound
imul
dec
jns
jb
or
dec
jb
pop
aaa
xor
jae
sar
mov
push
cmp
dec
xor
push
push
dec
jp
xor
pop
sub
jle
jno
push
dec
push
lock
push
fcomip
sbb
mov
jbe
outs
gs
push
gs
addr16
mov
push
fcomp
js
js
clc
outs
xor
inc
js
add
fsubrp
sub
scas
add
(bad)
push
push
push
cs
push
push
es
cmps
inc
xor
dec
pop
pop
mov
outs
push
inc
mov
inc
sub
cmp
cld
jp
popa
dec
xor
dec
retf
lock
dec
push
jbe
imul
ins
popa
gs
in
aaa
mov
dec
ins
push
push
push
jp
push
ins
xor
push
inc
jmp
jno
ss
mov
mov
xchg
xor
fs
inc
dec
ret
jo
aaa
or
xor
pop
add
dec
cli
test
ja
call
mov
imul
push
sbb
jo
and
add
shl
dec
xor
push
imul
inc
dec
pop
jo
lock
adc
inc
add
out
xor
push
adc
jo
jno
pop
cli
gs
popa
mov
jno
push
je
push
jae
aaa
xor
jbe
inc
ret
loop
dec
fs
push
ins
imul
ins
dec
mov
inc
sub
pop
add
push
jb
inc
push
inc
out
xor
inc
and
sbb
das
mov
push
(bad)
xor
jno
push
mov
or
xor
inc
push
inc
push
inc
xor
mov
fs
xor
pop
bound
xor
jns
dec
cmp
jbe
mov
inc
js
inc
int3
js
mov
pop
xchg
xchg
imul
jnp
lods
mov
imul
dec
arpl
mov
push
je
xor
mov
dec
inc
outs
cwde
push
ja
enter
sbb
inc
aaa
jno
bound
push
sub
pop
call
fsubr
dec
mov
stos
jbe
outs
js
outs
imul
ins
jmp
push
dec
inc
jp
jp
add
popaw
sbb
inc
xor
js
loope
outs
mov
push
push
jo
mov
xor
push
add
sub
cmp
outs
jb
in
push
xlat
or
outs
ins
pop
ja
xor
push
mov
dec
arpl
xor
mov
xor
xor
jb
data16
push
ins
sub
xchg
dec
inc
lock
jno
dec
jp
push
xor
sub
dec
inc
push
fmul
shl
inc
xchg
jmp
mov
xor
dec
inc
push
fidiv
ins
jns
dec
jp
inc
push
bound
push
call
std
cmp
js
push
repnz
pop
and
pop
arpl
aaa
inc
xor
ret
sbb
jne
addr16
push
movs
ds
inc
outs
push
sahf
dec
dec
loopne
mov
cmp
jp
imul
jae
aaa
js
or
je
ss
fs
ja
dec
pop
dec
xor
push
inc
or
push
inc
jle
stos
mov
and
dec
dec
outs
jns
push
mov
push
push
push
cdq
push
fbstp
imul
xor
xchg
ja
stos
scas
push
cwde
mov
pop
jl
aaa
mov
cli
jne
dec
jne
js
inc
aam
js
ins
dec
push
push
loopne
mov
inc
inc
cmp
data16
push
mov
inc
ds
dec
xor
ret
mov
push
fs
push
inc
dec
inc
push
stos
cmp
jbe
push
dec
jne
xor
(bad)
push
adc
outs
xor
mov
ja
jl
xor
mov
or
pusha
aaa
push
push
and
push
sbb
dec
pop
push
inc
push
xor
xlat
push
sub
jae
ds
push
inc
jp
or
sahf
cmp
push
bound
dec
pushf
inc
jmp
xor
dec
arpl
push
xor
gs
push
addr16
xor
jns
call
cmp
fadd
jo
push
bound
popa
shl
inc
addr16
push
xor
pop
fdiv
call
cmp
out
dec
inc
jns
push
lods
fmul
inc
aaa
(bad)
inc
inc
add
ins
mov
ror
pop
dec
imul
push
bound
inc
jbe
mov
cmp
mov
test
ins
dec
(bad)
inc
ss
jl
loopne
inc
jne
jmp
pop
mov
hlt
cmp
cwde
dec
outs
jne
arpl
mov
add
jbe
push
rcl
jo
pop
pop
sti
cmp
imul
dec
xchg
stos
sbb
dec
jbe
inc
mov
add
push
inc
clc
dec
call
mov
jl
push
push
push
bound
addr16
cmc
sbb
dec
push
jo
inc
dec
dec
pop
push
addr16
popa
push
inc
sbb
xor
adc
pop
ins
jo
pop
lods
arpl
xor
push
ss
push
data16
aam
fwait
or
dec
imul
push
and
je
jns
ins
ds
xchg
call
jb
aaa
jae
dec
jae
push
push
ss
dec
push
pushf
jno
into
jo
inc
fstp
xor
jmp
mov
xor
cmp
js
xor
xor
xor
ror
int3
push
cmp
jo
cmc
outs
je
jp
jno
inc
stos
fcomp
aaa
cmp
fcom
ss
inc
jno
sub
jmp
dec
inc
sub
push
xor
push
inc
test
cld
mov
cmp
je
sub
cmp
lods
mov
je
pop
inc
push
xor
push
pop
shl
ret
jmp
hlt
jo
ins
xor
loop
stos
lods
xor
xchg
jp
mov
fs
dec
call
inc
jne
cmp
inc
jp
fidiv
ror
aam
xor
push
cmp
loopne
inc
clc
jno
imul
adc
imul
or
add
js
jns
outs
pop
pop
push
add
push
push
jns
push
push
arpl
xor
les
ss
pop
push
push
dec
(bad)
jmp
jne
inc
bound
push
jae
bound
pop
cmc
mov
imul
addr16
inc
pop
inc
xor
push
fwait
call
push
adc
ins
pop
mov
jl
das
rcl
fdivr
inc
xor
js
aaa
pop
pop
inc
or
std
push
push
jae
jp
jo
pop
inc
push
sub
inc
mov
sbb
push
outs
xor
popa
push
add
loopne
mov
push
jbe
imul
fs
in
dec
push
jb
cmp
mov
(bad)
push
jo
aaa
(bad)
cmp
ss
inc
push
hlt
in
mov
push
arpl
ret
js
dec
add
(bad)
jne
xor
in
inc
push
mov
xor
test
dec
add
loopne
test
je
cmp
cmp
push
mov
ins
imul
mov
neg
cwde
jp
dec
loopne
push
dec
dec
xor
inc
js
inc
jo
lds
add
and
jne
jmp
push
mov
mov
sti
inc
dec
imul
cwde
ins
bound
jbe
dec
inc
dec
pop
icebp
add
imul
inc
popa
aad
jno
push
inc
xchg
imul
jns
pop
push
inc
scas
mov
jb
mov
ja
sbb
inc
jae
cwde
sub
mov
dec
imul
inc
ss
inc
xchg
ja
mov
call
inc
pop
jne
stc
aaa
dec
dec
gs
jp
ins
ins
outs
arpl
push
push
or
mov
inc
imul
ins
ss
mov
xor
bound
nop
push
sub
xor
dec
mov
push
outs
push
bound
push
dec
xchg
call
pop
xor
inc
add
pop
dec
imul
jbe
push
mov
dec
push
arpl
jbe
ja
xor
rol
adc
inc
stos
inc
mov
inc
mov
aaa
push
ss
mov
jle
mov
inc
jne
addr16
data16
xor
cli
arpl
sbb
xor
sbb
outs
ss
sub
push
push
jb
rcl
cmp
jbe
sahf
dec
inc
add
mov
xor
cmp
out
push
push
cmp
jp
inc
pop
pop
loop
xor
mov
ja
test
scas
lea
jle
push
xor
clc
outs
ja
push
push
xor
dec
push
push
push
call
push
mov
inc
dec
push
inc
inc
push
push
fnsave
mov
cmp
xor
arpl
cs
inc
inc
je
ret
mov
inc
push
(bad)
jb
mov
pop
ss
add
fisttp
jb
js
not
pop
mov
inc
js
jb
inc
xor
outs
push
sar
inc
jae
push
push
xor
data16
or
arpl
push
fmul
cmp
push
jo
add
dec
cs
shl
sub
dec
outs
sub
bound
add
pop
or
xor
push
xor
fadd
push
arpl
xchg
pop
data16
dec
ja
mov
fs
cmp
ins
dec
xor
adc
cmps
push
data16
jb
(bad)
lds
dec
ja
fisubr
out
adc
jbe
inc
dec
ins
xchg
ja
mov
and
xor
xor
cmp
cmps
in
imul
push
push
push
je
inc
jp
xor
pop
push
cmp
aaa
mov
dec
cmc
dec
cmp
inc
xor
bound
out
pop
hlt
dec
push
mov
ins
loopne
scas
jmp
xor
xor
xor
outs
js
aaa
in
push
jp
jle
sbb
js
push
inc
push
pop
and
es
dec
inc
add
ins
jns
jno
push
js
inc
addr16
push
jb
push
push
push
ret
lods
cmp
mov
push
inc
popa
retf
jge
push
call
cmp
aaa
dec
pop
test
ss
shl
jp
add
dec
xor
adc
push
inc
push
mov
inc
(bad)
scas
out
cmp
pop
fbstp
dec
xor
sbb
jno
dec
dec
push
jns
jp
into
mov
bound
jb
gs
shl
cmps
and
popa
fisubr
jns
push
sbb
arpl
push
push
dec
into
inc
push
push
je
mov
xor
xor
inc
outs
jbe
xor
xor
loop
push
inc
xor
arpl
push
ss
inc
callw
ret
push
mov
push
into
jns
inc
cmp
je
mov
push
jns
jo
cmp
ins
mov
xor
push
inc
dec
dec
xor
cmp
test
clc
pop
cmp
imul
stos
fimul
aaa
xor
jl
jne
push
mov
cmp
mov
push
dec
jns
inc
pop
hlt
addr16
dec
push
push
jl
mov
dec
inc
cs
add
rcr
outs
(bad)
imul
cmp
outs
dec
inc
xor
xchg
ins
jmp
push
dec
pop
gs
inc
fs
jne
mov
into
inc
inc
ret
mov
ins
xor
dec
adc
out
cmp
inc
dec
xor
in
or
sar
jo
mov
ss
(bad)
scas
dec
push
ins
push
mov
dec
je
addr16
fwait
push
rcr
jbe
inc
push
jno
imul
shl
inc
push
loopne
push
out
ss
push
push
jae
push
popa
dec
jbe
imul
outs
dec
inc
adc
cmp
int3
aaa
aaa
xor
mov
add
bound
add
call
xchg
loope
lods
int3
aaa
push
ret
xor
gs
push
xor
cs
xor
pushf
outs
aam
jp
add
xor
rcl
add
gs
push
xor
fdiv
adc
xor
or
pop
dec
ins
outs
ss
jne
push
xor
sbb
aaa
js
jp
or
pop
shl
dec
inc
push
jnp
test
dec
jae
inc
or
(bad)
aaa
cld
popa
push
inc
aaa
arpl
jno
dec
inc
dec
dec
retf
(bad)
sub
jo
jmp
add
jle
data16
adc
dec
xor
dec
clc
xor
cmp
test
dec
and
inc
inc
jno
fild
xchg
pop
inc
push
push
imul
dec
(bad)
or
mov
dec
aaa
sub
mov
mov
push
xor
or
nop
das
mov
imul
data16
popa
push
ss
push
dec
data16
inc
or
pop
bound
jns
add
test
dec
(bad)
inc
jbe
aaa
xor
inc
jo
cmp
jp
mov
dec
aaa
inc
jo
fs
pop
xor
ins
and
fs
ss
dec
jns
addr16
cmp
lea
enter
jbe
arpl
xor
pop
loopne
hlt
dec
push
ins
pop
jp
mov
outs
jb
inc
outs
inc
js
mov
sub
stos
cli
push
loopne
into
xor
ret
stos
and
(bad)
jae
ins
dec
data16
loopne
pop
idiv
xor
xor
ins
pop
inc
push
bound
addr16
push
outs
sub
push
inc
xor
dec
sub
xor
ins
dec
push
ja
jl
jae
mov
xor
dec
dec
jbe
imul
outs
ss
push
dec
inc
call
mov
cmp
dec
dec
dec
xor
ins
inc
push
xor
mov
mov
push
xor
push
jbe
cmps
push
inc
gs
bound
sub
push
jb
shl
(bad)
popa
dec
jmp
loop
pushf
push
outs
pop
inc
lods
pop
je
dec
hlt
pop
dec
jo
bound
xor
dec
ins
repnz
imul
push
dec
xor
ss
ins
push
sar
dec
retf
ja
adc
dec
pop
inc
add
sub
in
pop
jmp
jno
outs
imul
(bad)
out
xor
xchg
or
mov
xor
inc
sbb
ins
nop
jno
jbe
cmp
add
dec
arpl
sbb
movs
push
inc
xor
inc
pusha
pop
mov
int3
dec
arpl
dec
(bad)
cli
adc
push
dec
cmp
inc
arpl
push
push
ret
or
cmp
jp
push
jno
imul
fdiv
push
sbb
xor
mov
xchg
outs
dec
cmp
xor
jo
jecxz
bound
inc
dec
push
jle
popa
cmp
adc
outs
dec
arpl
test
fs
mov
push
mov
mov
cmp
ja
addr16
add
mov
push
jno
push
xor
loop
dec
dec
push
xor
int3
push
stos
sub
pop
cmp
mov
dec
add
push
not
jne
popa
dec
je
cmp
mov
mov
ret
push
data16
push
stos
adc
push
jae
arpl
sub
cmps
push
outs
inc
dec
inc
je
dec
cmp
ins
push
push
gs
dec
xor
repnz
shl
mov
test
cli
xor
xor
inc
sub
cli
or
imul
enter
bound
bound
inc
addr16
add
pusha
push
mov
dec
push
sub
push
ins
cmp
inc
inc
push
addr16
dec
jae
pop
cmp
outs
push
dec
push
sub
pop
js
xchg
inc
adc
inc
scas
inc
das
clc
outs
xor
jp
push
inc
inc
jno
sub
inc
jbe
movs
pop
adc
push
aaa
xor
mov
fisttp
jbe
sahf
inc
addr16
push
outs
inc
xor
mov
jo
sbb
pusha
push
add
fisttp
popa
aaa
dec
push
jns
addr16
and
loope
je
enter
or
cmc
xor
dec
gs
es
aad
cs
push
xor
push
push
push
cdq
jbe
adc
push
sahf
add
xor
inc
push
ins
mov
dec
popa
push
inc
jp
in
push
xor
xor
dec
cmp
push
xchg
push
hlt
fwait
push
push
outs
popa
jae
imul
dec
pop
aaa
sub
jbe
outs
xor
cwde
inc
inc
xor
push
push
(bad)
xor
and
dec
test
adc
xor
bound
xor
push
xchg
inc
dec
jbe
jae
jo
jo
inc
push
push
mov
jbe
add
dec
push
dec
push
or
pushf
jae
dec
cmp
push
inc
ins
pusha
ret
inc
sbb
fs
inc
inc
mov
repnz
xor
imul
inc
(bad)
xchg
push
xor
ffree
pop
push
outs
es
je
aaa
jo
shl
inc
inc
shr
adc
imul
jns
jns
dec
dec
pop
outs
sahf
mov
aam
xor
aaa
mov
dec
(bad)
inc
xor
aaa
inc
inc
push
dec
addr16
xor
arpl
inc
ins
ja
cmp
bound
jno
jne
lods
aaa
addr16
adc
pop
add
outs
cmp
and
outs
and
cmp
cmp
and
imul
cld
cld
dec
loopne
cld
jno
mov
push
jns
xor
jae
sub
jne
inc
bound
pop
dec
aaa
dec
outs
and
ret
inc
dec
int3
add
push
icebp
scas
add
push
push
fs
shr
ins
outs
inc
push
cld
add
dec
pop
sbb
push
je
dec
data16
push
mov
ret
xor
xor
jle
mov
push
ja
(bad)
dec
xor
push
icebp
add
cwde
jp
push
inc
push
push
sbb
fidiv
fs
lods
jp
inc
inc
pop
dec
popa
adc
cmps
adc
jns
mov
dec
push
inc
or
aaa
pop
push
xor
inc
inc
adc
sub
dec
dec
push
xor
dec
push
(bad)
jo
outs
jae
dec
inc
jns
jb
dec
dec
push
jp
inc
inc
mov
js
cmp
inc
push
jae
mov
jbe
pop
inc
push
mov
fidiv
inc
dec
jbe
(bad)
cmp
mov
sbb
arpl
jns
xor
imul
push
sub
push
inc
fcom
cld
es
inc
push
push
push
jb
inc
jb
sbb
enter
dec
je
outs
pop
jo
push
push
inc
xchg
push
or
scas
loopne
pop
or
pop
xor
jo
inc
dec
imul
jmp
jno
pushw
call
push
addr16
popa
and
pusha
push
loopne
jl
ins
push
inc
inc
jne
dec
mov
pop
sub
push
inc
ins
push
imul
jb
ins
(bad)
push
pop
add
mov
aaa
push
ja
bound
inc
xor
add
mov
xchg
ss
je
mov
in
push
mov
sbb
popa
loopne
cli
push
sub
popa
arpl
jb
ja
test
jb
gs
jbe
pop
and
adc
cmp
push
jae
add
jmp
(bad)
lods
or
mov
xor
jno
dec
add
or
push
push
test
out
push
inc
jbe
jo
mov
push
outs
ja
inc
push
jns
ins
or
sub
jo
dec
fcmovbe
loope
nop
mov
pop
xor
add
js
jne
fcom
pusha
inc
push
fmul
push
inc
gs
sub
adc
inc
push
fs
sub
jno
je
sub
push
sti
jne
xor
push
pop
cmp
cwde
ss
sub
xor
xor
inc
mov
xor
ss
mov
push
push
clc
cs
aad
arpl
xor
inc
push
fs
xor
pop
mov
xor
push
mov
xor
movs
ss
xor
inc
fs
(bad)
or
jne
data16
sbb
fwait
(bad)
popa
inc
imul
dec
dec
push
outs
bound
xor
xchg
push
pop
push
xchg
mov
cmp
(bad)
jle
cmp
ret
xchg
jl
pop
jp
add
add
pop
push
inc
xchg
test
outs
push
ins
pusha
sbb
push
pusha
dec
push
ror
outs
nop
adc
xor
jne
inc
xor
jp
pop
inc
popa
imul
push
stos
js
inc
push
adc
push
push
mov
add
pop
and
mov
fs
push
jg
add
mov
xor
push
adc
xchg
inc
push
dec
je
push
xor
dec
inc
aaa
aaa
jl
jns
pop
lods
xor
and
sbb
ja
adc
loope
clc
cmp
dec
push
adc
jmp
push
gs
fsub
retf
shl
pusha
int3
dec
mov
je
mov
add
pop
pusha
push
cld
stos
mov
arpl
idiv
ins
jns
cmp
pop
push
or
sub
ins
ins
mov
pop
inc
push
dec
push
rcr
dec
sbb
cdq
push
push
pop
fidiv
and
jo
xchg
or
inc
xchg
adc
xchg
shl
pop
dec
dec
test
push
mov
gs
es
addr16
push
or
dec
rcr
and
jns
hlt
pop
out
xor
mov
popa
gs
and
dec
inc
adc
push
inc
fs
cmc
outs
mov
jae
js
dec
push
jns
jp
fsub
mov
mov
adc
xor
push
dec
inc
cmp
jo
push
ror
inc
fsubr
jo
sub
jo
xor
ja
xor
dec
arpl
xchg
push
popa
ja
popa
add
je
ret
pusha
push
xor
and
dec
(bad)
ret
jb
dec
jae
xor
mov
xor
addr16
push
dec
ja
xchg
mov
dec
mov
push
pop
jl
data16
inc
ds
dec
pop
xchg
imul
sub
into
data16
scas
inc
or
dec
outs
inc
out
push
xor
and
lock
jo
and
pop
mov
cli
push
push
jbe
mov
outs
mov
call
stos
jmp
cli
mov
dec
dec
inc
mov
push
ja
jbe
imul
add
int3
loop
loopne
push
inc
dec
cld
sub
dec
push
aaa
inc
inc
ja
gs
addr16
mov
sbb
outs
addr16
dec
xor
dec
push
push
push
imul
ss
push
aaa
outs
dec
push
mov
stc
aaa
push
jo
inc
(bad)
outs
jle
dec
xor
jno
inc
cwde
hlt
cmp
cmp
xor
push
pushf
jo
mov
arpl
mov
xchg
(bad)
dec
into
inc
inc
pop
xchg
pop
push
fimul
mov
sub
add
(bad)
xchg
repnz
mov
es
ins
rcr
jnp
pop
mov
jmp
outs
xor
dec
dec
je
dec
and
mov
fs
loop
loop
or
cmp
dec
xchg
push
xor
js
dec
fs
push
inc
and
jbe
jb
ins
je
or
mov
mov
inc
xor
imul
xchg
sub
inc
pop
jno
outs
stos
js
xor
push
jp
inc
(bad)
dec
adc
dec
fistp
pop
inc
pop
push
data16
push
push
push
(bad)
xor
addr16
shl
es
ss
outs
push
push
push
push
dec
outs
in
(bad)
sbb
push
inc
sbb
adc
jae
icebp
add
push
mov
imul
test
fisub
ins
dec
bound
cmp
adc
pop
jne
inc
mov
push
add
jbe
push
push
jbe
ja
adc
jns
jns
inc
dec
arpl
dec
jbe
jmp
out
pop
jle
push
cmp
ja
pop
inc
push
push
jns
mov
or
arpl
sbb
jns
push
and
jae
xor
loop
add
add
mov
imul
mov
inc
xor
inc
jb
push
imul
loope
add
imul
stos
add
pusha
pushf
or
pusha
add
push
inc
retf
or
inc
cmp
push
inc
shl
ins
dec
dec
push
ins
sbb
sub
shl
xor
jp
ds
mov
jb
dec
outs
dec
xor
aam
jb
dec
dec
xor
jne
push
adc
xor
inc
imul
clc
push
jne
jbe
jb
push
bound
sbb
ins
push
push
ja
xor
les
popa
dec
arpl
xchg
inc
xchg
jo
jb
stos
and
or
xor
bound
sbb
push
mov
rcl
and
jl
xor
pop
js
popa
jbe
inc
gs
pop
mov
sub
xor
cmp
push
cmp
inc
ja
mov
dec
cld
jns
(bad)
ins
add
neg
gs
fistp
ss
sbb
xor
jno
inc
inc
outs
jne
shl
sub
popa
xor
dec
bound
xor
stos
dec
retf
xchg
mov
ss
jbe
clc
es
bound
push
mov
and
gs
fadd
cmp
pusha
outs
push
inc
dec
jno
arpl
jecxz
outs
fsub
jbe
jp
js
jae
ja
bound
push
test
inc
dec
mov
mov
outs
sar
xor
(bad)
inc
mov
fdiv
pushf
push
push
movs
inc
aaa
push
jb
jno
popa
sub
push
push
pushf
lods
pop
mov
mov
xor
popa
push
loop
xor
jmp
pop
mov
push
dec
push
jp
imul
xor
push
addr16
xor
fs
scas
add
(bad)
ins
push
inc
xor
dec
outs
mov
jbe
(bad)
cmp
in
sub
sub
jo
dec
xchg
dec
sub
jb
push
ja
push
push
loopne
nop
addr16
push
xchg
pop
cmp
gs
dec
inc
inc
je
dec
push
ret
fs
call
ss
mov
lds
jbe
addr16
push
ja
jp
data16
xor
fidiv
aaa
push
push
mov
ds
cmp
dec
jne
xor
mov
dec
dec
inc
pushw
xor
movs
inc
push
pusha
cli
mov
inc
xor
outs
pop
xor
xor
cmp
xor
inc
push
inc
adc
bound
ror
and
jmp
push
call
mov
xor
imul
push
jb
js
push
push
inc
jb
add
sbb
inc
push
pop
inc
popa
arpl
push
dec
imul
aam
add
pop
cmp
dec
inc
push
push
gs
mov
dec
imul
cmps
push
ret
ss
hlt
push
push
aaa
push
jns
imul
arpl
hlt
mov
dec
fidiv
call
cld
mov
jo
xor
dec
xor
mov
out
dec
push
jg
loopne
mov
push
push
xor
jae
aam
add
or
jbe
sbb
xor
data16
in
push
test
xor
push
fmul
xor
jbe
and
push
push
imul
push
xor
or
test
movs
push
jb
bound
dec
inc
xchg
inc
inc
aad
in
inc
jbe
js
sahf
lods
xor
cmp
call
or
jle
dec
inc
dec
je
ins
inc
jns
inc
inc
or
sbb
pop
dec
push
inc
push
loopne
adc
jno
cmp
dec
imul
adc
fwait
push
or
inc
ins
push
push
mov
int3
dec
jb
cmp
dec
outs
pop
xchg
add
adc
(bad)
out
clc
dec
dec
inc
xor
dec
xor
js
inc
bound
xor
cwde
retf
mov
into
push
arpl
ja
call
enterw
jg
ins
push
jae
jbe
dec
inc
xor
push
sbb
inc
push
fs
push
xchg
jne
xor
xor
data16
dec
outs
jbe
sbb
test
icebp
or
sbb
inc
push
xor
jp
ins
push
cs
xchg
inc
jno
push
pop
data16
jmp
inc
dec
xor
arpl
mov
imul
imul
addr16
sub
icebp
jns
xor
ins
push
not
shl
dec
add
push
ja
mov
adc
push
jns
retf
stos
xchg
and
jb
mov
popa
ret
xor
jbe
push
xor
inc
dec
push
and
popa
imul
fdiv
push
dec
push
push
inc
ins
push
cs
dec
push
arpl
push
inc
or
inc
push
fcom
sbb
xor
jae
dec
sbb
or
loopne
xor
ins
push
shr
inc
cmp
outs
dec
push
cmp
dec
jo
dec
aaa
push
xor
jecxz
adc
je
imul
dec
jmp
jns
inc
push
inc
inc
imul
dec
push
icebp
xchg
jb
xor
cmp
stos
or
loopne
(bad)
push
push
mov
jne
ss
aaa
jae
xor
inc
imul
clc
mov
call
push
jo
dec
inc
jp
mov
pushf
aam
dec
inc
push
dec
cmp
add
call
ss
pop
push
push
push
jns
push
aam
mov
fdiv
jo
cmc
pop
mov
cmp
jns
imul
xor
ins
cmp
int3
pop
gs
push
push
xor
outs
dec
inc
adc
or
inc
je
cmp
push
je
jno
inc
cmp
jo
pop
or
outs
xchg
jge
cmp
xor
dec
push
popa
inc
pop
cli
dec
inc
sar
xor
cmp
inc
push
mov
dec
or
je
cs
xor
add
aad
ins
stos
pop
push
jmp
xor
dec
clc
(bad)
adc
popa
fs
jae
dec
jp
add
push
dec
xchg
js
dec
out
inc
push
dec
pop
je
dec
jne
or
lock
vaddss
inc
push
inc
pop
push
shl
xor
push
imul
pop
scas
add
popa
ja
dec
icebp
call
sub
cmp
punpcklwd
push
inc
inc
xchg
sub
cmps
xor
inc
inc
inc
js
mov
sbb
pushf
push
jle
dec
cs
mov
jmp
inc
push
push
push
cmc
or
dec
inc
xor
imul
sar
ja
inc
aaa
dec
ss
sti
out
ins
xor
pop
inc
imul
add
inc
dec
cs
jo
push
inc
inc
xor
and
inc
inc
scas
pop
mov
repnz
xor
jmp
push
icebp
cmp
inc
ins
xor
arpl
push
inc
inc
je
outs
dec
inc
cmp
fcom
cmp
enter
push
push
xor
adc
cmps
xchg
dec
inc
pop
jge
cmps
loopne
outs
dec
xor
push
xor
imul
ja
ja
fs
add
(bad)
es
jmp
cs
dec
dec
sub
addr16
inc
jbe
inc
pop
aam
js
push
sub
jp
sub
jb
cmp
or
dec
bound
sub
out
cli
pop
cld
inc
xor
push
push
jbe
xor
repnz
jne
add
ins
jp
es
push
jbe
sub
mov
cmp
mov
jg
inc
dec
sbb
jbe
xor
imul
push
xchg
outs
jmp
adc
dec
push
pop
pop
and
js
shr
xor
addr16
mov
push
xor
fsub
push
push
outs
adc
cli
dec
xor
inc
outs
gs
jbe
or
or
inc
sub
inc
push
je
popa
xlat
inc
mov
push
xor
loopne
xor
push
jno
inc
push
jno
stos
jmp
gs
and
shl
aas
and
xor
data16
fs
dec
imul
add
cmp
rcr
jno
jb
xor
push
push
push
popa
arpl
fistp
jle
push
fisub
addr16
inc
pop
sbb
inc
stos
imul
stos
or
addr16
push
shl
rcr
mov
dec
push
jbe
xor
add
mov
sub
push
push
ins
add
les
cmp
imul
add
outs
cmp
je
ret
shl
xor
inc
inc
push
pop
inc
cmp
mov
add
xor
pop
imul
addr16
sbb
add
push
xor
aam
jle
loope
lock
xor
adc
cmc
cs
bound
retf
push
outs
dec
lds
sub
push
push
push
out
push
bound
hlt
mov
cmp
(bad)
adc
xor
push
cmp
pop
and
icebp
outs
xor
out
in
ins
pop
jb
push
push
adc
call
ret
aaa
loop
xor
mov
adc
ds
jbe
inc
push
xchg
dec
sub
je
xor
xor
inc
xor
ds
aam
fiadd
outs
xor
mov
push
inc
dec
adc
ja
inc
jno
ds
js
dec
les
out
addr16
and
hlt
or
imul
push
call
ins
movs
test
ror
mov
push
dec
dec
ss
sbb
xor
ins
push
dec
xor
sbb
out
cwde
addr16
push
pop
ins
loopne
jae
push
and
xor
ins
jle
cwde
cwde
inc
sar
push
fs
fs
jae
ins
dec
mov
and
add
nop
rol
ins
je
jne
in
je
jns
test
push
pop
push
gs
push
ror
push
xor
adc
cmp
dec
fwait
loope
stos
and
arpl
or
arpl
jne
add
dec
push
dec
sub
test
push
ins
mov
rcr
dec
jbe
outs
out
xor
inc
dec
push
dec
inc
test
dec
sub
js
mov
jo
push
dec
push
dec
mov
and
js
dec
inc
mov
imul
inc
loop
mov
rcr
jp
jo
push
dec
mov
rcl
std
outs
cmp
push
in
xor
dec
cmp
dec
inc
test
sub
loop
(bad)
push
cmp
ret
push
push
inc
or
add
jo
push
pop
stos
or
xor
dec
sub
cli
data16
jo
add
xor
aas
ss
xor
repnz
outs
dec
fs
push
xor
outs
clc
xor
je
ja
fs
xor
cmp
loopne
push
jb
xchg
pop
imul
aad
cmc
inc
imul
jo
inc
inc
inc
jns
cmp
inc
ret
mov
push
push
imul
std
dec
xor
xor
dec
add
sub
mov
aam
pop
js
dec
pop
jno
dec
dec
xor
dec
out
add
dec
ins
xor
jb
mov
sub
je
cmp
dec
inc
mov
push
fs
push
mov
push
rol
mov
jo
call
inc
ss
jo
arpl
gs
xor
sbb
mov
push
ret
scas
adc
jne
xor
xor
dec
adc
ins
imul
push
xor
imul
xchg
dec
ins
in
push
xchg
xchg
shl
imul
sub
or
sbb
and
xor
dec
jne
js
xor
push
push
push
rcl
push
xchg
les
ss
data16
push
jne
jae
jns
mov
(bad)
add
jp
imul
mov
dec
mov
push
jo
call
scas
dec
dec
addr16
jmp
xor
jno
outs
xor
mov
jbe
call
jae
aaa
dec
mov
pushf
xor
inc
js
cmp
sbb
je
add
ret
sbb
xor
push
xor
in
fwait
imul
inc
dec
les
jae
dec
cmp
call
dec
adc
push
dec
inc
popa
push
push
push
sahf
inc
shr
(bad)
xor
push
push
inc
(bad)
addr16
mov
bound
cmp
dec
ins
inc
imul
cmp
inc
mov
or
mov
mov
inc
ja
cmp
sbb
out
jb
xor
xor
xor
mov
push
outs
cmp
mov
jne
(bad)
push
push
push
imul
push
xor
out
cmp
mov
pop
arpl
mov
aaa
scas
jo
pop
in
cli
push
push
jle
dec
bound
bound
mov
push
cmp
inc
xor
(bad)
pop
adc
arpl
dec
xor
xor
cli
pop
sub
jp
add
inc
push
outs
gs
mov
pusha
(bad)
dec
inc
shr
inc
clc
inc
js
push
bound
cmp
pop
inc
dec
jns
inc
dec
(bad)
or
xchg
bound
pop
cmc
adc
jbe
push
sub
mov
popa
dec
xor
js
jno
outs
xor
data16
fcomp
inc
xor
stos
pusha
lds
push
jbe
ss
arpl
imul
xor
aaa
jae
ins
jns
inc
dec
push
dec
push
je
pop
mov
jp
(bad)
pop
ins
add
cs
cld
inc
shl
push
push
je
ja
ror
hlt
mov
jno
cmp
push
jb
mov
adc
ins
add
jo
jo
mov
ss
loop
jno
call
imul
push
aad
inc
mov
xor
push
arpl
gs
popa
outs
jae
inc
ins
push
in
movs
adc
inc
inc
sar
inc
imul
push
inc
gs
clc
mov
sub
pop
ins
adc
cld
pop
jbe
jo
rcl
(bad)
ss
jne
jbe
pop
sub
xor
popa
outs
push
push
fmul
pop
aaa
jbe
cwde
loop
fistp
push
dec
ja
ja
inc
jae
ja
ret
retf
fcom
inc
jp
dec
push
inc
sub
cmp
(bad)
add
push
dec
cld
xchg
call
and
ja
gs
push
xlat
xchg
adc
inc
aam
push
inc
mov
xchg
je
adc
arpl
push
arpl
push
data16
je
xor
push
push
pop
bound
aaa
std
mov
enter
push
cmp
inc
push
xchg
cld
push
shr
dec
gs
push
push
push
pop
scas
aam
ja
outs
js
mov
dec
js
push
sub
inc
push
dec
ins
jbe
ja
jb
scas
cmp
push
inc
bound
xor
bound
imul
cmp
addr16
push
lea
push
jp
push
fs
inc
ror
jno
jl
icebp
jne
inc
push
ins
data16
cmp
neg
ss
inc
jp
push
xor
xor
lods
and
ror
nop
arpl
ins
(bad)
loopne
adc
cmp
inc
cmp
xchg
mov
xor
and
imul
jae
push
outs
push
jae
jo
inc
js
pop
dec
xor
mov
stos
test
imul
jo
xor
(bad)
pop
push
test
mov
shr
sbb
push
mov
sub
push
xchg
mov
mov
cmp
inc
ins
imul
jmp
xor
push
inc
push
xor
dec
inc
fs
pop
dec
push
icebp
inc
call
arpl
dec
cmp
sbb
push
inc
xor
js
imul
push
xchg
inc
inc
fs
push
push
jae
mov
outs
mov
cmp
cmp
jno
ins
dec
push
ss
js
je
js
movs
fmul
and
inc
jb
or
mov
imul
xchg
sbb
jae
jns
push
inc
xchg
and
scas
dec
mov
jp
outs
add
popa
adc
pop
std
addr16
pop
inc
xor
inc
xor
cmp
adc
ins
imul
js
outs
or
inc
ss
adc
mov
push
inc
jno
popa
test
add
dec
jns
jp
aaa
xor
and
push
pop
inc
and
aam
add
ss
dec
pop
test
sub
dec
dec
enter
scas
mov
ja
push
dec
bound
dec
xor
es
shl
inc
dec
into
mov
ss
inc
inc
inc
dec
mov
xor
fidiv
in
ror
inc
imul
test
push
pop
push
ja
xor
popa
and
clc
mov
dec
or
xchg
adc
fiadd
push
clc
xor
inc
jo
dec
outs
dec
sbb
dec
adc
mov
and
ins
push
push
mov
gs
jbe
mov
(bad)
push
add
xchg
xor
bound
mov
jo
or
xor
mov
jno
mov
or
push
and
push
cmp
or
cmp
xor
push
push
pop
inc
cld
jecxz
dec
mov
cmp
loop
fs
xor
add
xor
dec
pop
xor
arpl
in
adc
out
cmp
data16
inc
pop
sub
push
ss
cmp
adc
mov
push
cmp
gs
push
xor
imul
push
jo
jp
push
dec
cmps
adc
je
pop
inc
jbe
clc
jg
dec
je
jbe
inc
inc
xor
xor
dec
xor
or
sbb
jb
push
cld
ins
ror
inc
mov
jo
ss
push
inc
gs
dec
mov
test
cli
outs
inc
test
call
push
dec
outs
adc
sub
or
inc
lods
addr16
ins
xor
jg
add
(bad)
jne
inc
inc
push
xor
pop
xor
push
pusha
inc
push
jbe
xor
cmp
(bad)
push
dec
call
push
imul
fild
out
push
dec
inc
xor
inc
push
dec
ins
jns
loopne
dec
cmps
loopne
pop
in
push
jo
dec
mov
mov
xor
mov
call
push
int
xchg
dec
dec
out
int3
dec
add
push
inc
call
outs
bnd
pop
cdq
inc
pop
cs
pop
mov
or
sahf
pop
dec
push
sub
adc
inc
mov
ja
inc
das
xchg
cmp
sbb
cld
jne
jne
inc
push
or
adc
call
push
outs
inc
xor
dec
xor
imul
mov
add
add
push
inc
inc
jl
mov
imul
stos
adc
ins
and
movs
int3
adc
dec
ss
xor
dec
or
inc
outs
cmp
mov
jmp
xor
outs
outs
inc
aaa
cld
(bad)
icebp
dec
mov
int3
dec
ret
push
std
xchg
ret
dec
jle
dec
imul
and
popa
bound
outs
add
mov
lock
dec
jns
xor
dec
push
fdiv
push
aad
jno
jb
loop
call
dec
push
das
add
add
inc
jae
push
push
mov
fdiv
aaa
gs
fimul
sbb
outs
test
push
push
push
clc
aaa
or
shl
inc
push
inc
push
push
mov
inc
push
dec
mov
arpl
fld
and
or
push
inc
(bad)
popa
push
cs
icebp
xchg
dec
imul
sbb
cs
ins
jno
mov
sbb
xor
adc
sbb
dec
jmp
fs
or
mov
mov
jo
cld
dec
mov
xor
xor
xor
xor
je
bound
push
in
fild
jbe
dec
addr16
inc
ins
dec
mov
push
scas
adc
pop
inc
cli
jo
xor
cmp
sbb
jbe
cld
mov
cmp
or
outs
cli
mov
arpl
imul
in
outs
inc
je
push
adc
cli
dec
jbe
mov
je
imul
fs
push
inc
bound
ins
inc
fisttp
mov
push
and
push
outs
ss
dec
ret
aaa
xor
add
jae
(bad)
pop
mov
add
push
mul
int
movs
xchg
addr16
mov
cmp
jae
cmp
mov
outs
dec
ss
aaa
push
mov
dec
dec
push
push
ss
js
sahf
push
pop
jno
retf
or
mov
push
jbe
inc
stos
push
out
xchg
fsubr
xor
js
push
loopne
shl
les
jns
inc
jp
out
pop
push
call
sub
dec
dec
(bad)
stos
pop
mov
inc
ja
dec
push
push
ja
fs
addr16
addr16
pop
int3
push
sar
fistp
aaa
jp
cmp
inc
dec
test
ss
push
shr
in
loopne
xor
mov
mov
push
xor
add
push
bound
arpl
xor
dec
shl
mov
and
dec
call
dec
bound
imul
add
dec
imul
ret
gs
ficom
sub
jne
je
jp
in
inc
jno
dec
bound
adc
pushw
sbb
mul
in
add
inc
bound
jl
and
test
or
jo
mov
sub
mov
push
inc
jb
inc
ss
add
ins
jp
bound
mov
add
rol
cld
push
mov
push
arpl
push
xor
outs
xchg
push
or
loopne
jno
jle
push
mov
inc
push
fadd
jb
jne
not
xchg
dec
dec
or
cmp
shl
test
push
inc
(bad)
(bad)
enter
arpl
sub
je
dec
dec
xor
stos
mov
je
mov
ja
jne
mov
push
push
call
scas
push
or
imul
dec
arpl
dec
xor
mov
push
ja
push
out
cli
out
jo
inc
jae
xor
or
jb
jb
push
js
push
inc
and
dec
imul
dec
sub
scas
pop
bound
test
or
pop
adc
xor
cmc
dec
and
js
push
bound
aad
mov
ins
jns
jp
inc
jo
lock
bound
xor
inc
bound
xchg
and
push
retf
add
xchg
push
jge
popa
dec
xor
jae
cmp
and
js
xor
ss
mov
ret
data16
xor
inc
jb
pusha
inc
inc
add
jb
dec
mov
sub
ja
call
jne
jp
push
push
sub
mov
cmp
jbe
xor
inc
je
inc
inc
inc
popa
xchg
dec
push
cmp
shl
mov
push
and
inc
js
pop
lods
stos
loope
outs
jns
dec
nop
xor
gs
pop
std
pop
and
dec
imul
xor
pop
stos
sub
dec
push
jl
push
shl
and
ret
push
mov
call
jno
mov
aam
and
dec
hlt
addr16
fs
inc
add
jbe
les
inc
xor
pop
movs
inc
cli
dec
jns
xor
shl
out
jae
push
push
(bad)
stos
mov
xor
push
push
push
inc
inc
push
pop
fs
mov
and
ins
xor
fwait
ror
imul
inc
xor
ja
ins
sub
dec
pop
outs
bound
mov
mov
jg
inc
inc
push
jne
lock
cmp
mov
push
ds
ins
push
xor
mov
sub
push
retf
dec
bound
fadd
xor
mov
into
xor
movs
xor
(bad)
mov
aaa
mov
ja
mov
imul
sbb
xor
push
dec
inc
inc
gs
dec
js
data16
rcr
mov
dec
dec
sbb
push
aaa
arpl
imul
dec
inc
cmp
sub
dec
adc
imul
ss
imul
add
cli
inc
and
push
jne
adc
mov
inc
xor
cld
bound
sbb
push
push
add
cmp
out
nop
mov
cld
je
dec
push
add
inc
add
sbb
jne
dec
push
push
bound
inc
je
and
add
ins
push
pop
imul
fmul
xor
aaa
ret
push
jmp
cmp
imul
popa
pop
fisub
gs
xor
pop
clc
jbe
dec
dec
out
aaa
inc
ja
call
adc
cmp
ja
inc
sub
adc
jo
push
push
push
sub
xor
inc
cmp
pop
gs
cmps
dec
data16
jns
dec
mov
adc
jo
or
js
push
js
pusha
push
push
push
inc
xor
dec
fbstp
lock
inc
push
push
dec
fwait
mov
xor
retf
outs
dec
aaa
add
xchg
ss
sbb
inc
in
cmp
inc
pop
mov
bound
ins
js
je
in
xor
sar
fiadd
ins
movs
jb
ja
jns
inc
mov
int
xchg
popa
arpl
sahf
add
cmp
pop
and
and
call
push
adc
outs
push
aaa
outs
jne
dec
fs
pop
ins
test
adc
bound
ins
jno
xor
mov
xor
outs
xor
arpl
push
cli
xchg
lock
push
push
adc
xor
popa
push
imul
dec
js
ins
xchg
jp
pop
aam
jecxz
jbe
in
jne
pushf
xor
mov
ret
xor
imul
xchg
je
mov
jmp
inc
data16
xor
pop
sbb
sbb
dec
and
jmp
imul
push
push
add
fidivr
jmp
clc
(bad)
jg
bound
sbb
inc
jns
inc
dec
dec
pop
xor
js
fs
and
jbe
xor
scas
dec
mov
inc
push
inc
inc
jmp
push
inc
push
cmp
xor
or
inc
stos
push
push
xor
inc
xor
outs
xor
shl
push
dec
push
jl
inc
std
jmp
push
xor
arpl
push
jae
jne
mov
jae
outs
inc
jae
js
push
bound
push
dec
push
push
stos
xor
xchg
cmp
jae
inc
jl
pop
xchg
fidivr
dec
xor
xor
dec
xor
pop
inc
add
push
push
data16
add
aaa
je
inc
in
outs
cmp
arpl
xchg
sbb
dec
out
cmp
push
popaw
dec
je
dec
jb
outs
js
arpl
test
hlt
popa
mov
fs
je
or
loopne
push
push
dec
push
cs
push
shl
add
sbb
cmp
add
pop
outs
aaa
push
ret
inc
ror
dec
popa
into
dec
adc
dec
inc
test
jo
les
push
mov
jp
inc
push
cmp
inc
add
mov
ins
jno
rcl
js
outs
sbb
push
dec
inc
mov
imul
push
inc
jns
jo
xor
and
addr16
js
pop
cwde
dec
inc
jmp
xor
sub
mov
push
pushw
inc
xchg
inc
or
or
scas
mov
adc
pop
(bad)
inc
push
dec
inc
rcl
cmc
out
ja
fs
imul
ins
inc
stos
push
stos
cwde
dec
xor
xchg
mov
jb
push
sub
xchg
jb
aaa
imul
xor
movs
cli
xor
cmp
pusha
adc
call
rcl
jae
bound
stos
mov
fs
outs
jns
mov
in
dec
push
mov
and
xor
dec
push
shl
push
outs
cmp
jbe
test
aaa
sbb
dec
xor
push
je
in
inc
mov
dec
dec
push
jbe
gs
inc
dec
push
push
dec
inc
inc
inc
xor
xchg
repnz
inc
xor
dec
pop
inc
cwde
inc
ins
dec
push
xor
adc
inc
jbe
inc
push
or
inc
out
dec
jle
dec
addr16
inc
push
jno
push
inc
push
push
inc
pop
mov
dec
xor
inc
xor
mov
cmps
push
aam
inc
adc
inc
fiadd
ins
xchg
push
xchg
jb
jo
jbe
mov
sub
imul
ins
fcom
inc
xor
xor
popa
push
ja
ja
dec
aaa
cmp
mul
add
xchg
aaa
jb
cwde
ret
sbb
pop
bound
(bad)
inc
jne
sub
dec
or
pop
imul
jae
inc
mov
inc
jb
push
scas
add
ss
inc
fs
push
outs
ss
inc
dec
cli
push
mov
addr16
js
fwait
icebp
pop
movs
push
retf
adc
dec
inc
or
push
ins
jns
outs
lgdtd
jae
jae
jmp
jp
push
xor
dec
dec
jae
inc
dec
scas
xor
xchg
inc
fs
push
outs
popa
fdiv
or
inc
push
popa
push
push
outs
fnstsw
stos
xchg
gs
xor
inc
push
js
pop
imul
mov
jno
mov
xor
dec
dec
dec
mov
cmp
xor
popa
push
aad
mov
bound
adc
xor
jbe
data16
popa
push
mov
inc
dec
dec
dec
push
xor
ins
mov
cs
aaa
lods
dec
cmc
pop
push
ss
ins
je
xor
xchg
push
dec
push
ret
push
and
push
dec
arpl
mov
jno
popa
push
mov
pop
jne
dec
push
push
push
bound
push
inc
cmp
ja
cmp
xchg
push
push
pushf
inc
mov
cmp
sub
hlt
inc
outs
inc
push
push
xor
xchg
xchg
ja
dec
imul
dec
mov
inc
jb
mov
sbb
mov
(bad)
arpl
ins
add
add
dec
fs
push
xor
cmp
data16
fucomp
push
aaa
inc
inc
fs
imul
xor
push
cmp
jbe
or
and
cli
outs
pop
shl
push
in
pop
ds
imul
std
outs
(bad)
push
pop
dec
arpl
inc
js
ins
push
jp
xor
nop
push
test
lock
ret
inc
inc
sub
addr16
or
xchg
inc
xchg
jne
push
rcl
inc
xor
sub
ins
addr16
adc
popa
jl
inc
xor
fstp
scas
jle
xor
aaa
dec
addr16
ja
popa
imul
es
xchg
dec
ja
dec
dec
jno
mov
cs
popa
xor
stos
add
loop
hlt
in
xor
or
scas
dec
and
cmp
jne
push
mov
add
pop
xor
cmp
inc
add
sub
push
dec
inc
xor
or
push
(bad)
fistp
fdiv
inc
dec
jns
fdiv
data16
movs
dec
pop
jo
xor
jp
push
add
sub
hlt
push
dec
inc
repnz
jl
jae
js
(bad)
pop
pop
ret
or
imul
cmp
mov
adc
outs
inc
outs
fwait
test
xor
and
xchg
bound
xor
test
fild
and
push
arpl
(bad)
adc
pop
sub
dec
cmp
addr16
add
imul
loop
push
and
inc
inc
inc
mov
push
xor
sbb
mov
gs
fs
jns
outs
ins
or
in
jns
dec
outs
push
and
push
clc
js
inc
imul
sub
dec
dec
into
pop
add
mov
dec
adc
aas
sub
inc
imul
jno
ds
adc
mov
shl
xor
ss
pop
add
bound
mov
push
xchg
ror
or
cmp
xchg
jb
jo
sub
jb
push
push
pop
sub
xchg
bound
dec
xor
mov
dec
arpl
outs
jp
scas
xor
xchg
test
xchg
push
or
stos
imul
or
jbe
es
cmp
jo
jns
nop
jge
xchg
jns
inc
ja
cmps
push
sub
push
test
jbe
or
lods
out
retf
cs
adc
mov
xor
gs
inc
push
and
ss
jb
inc
push
ja
dec
push
pop
xor
adc
push
arpl
bound
test
jmp
and
sub
push
jo
popa
(bad)
(bad)
aas
mov
pop
inc
arpl
bound
outs
jne
push
jae
jbe
jb
push
inc
daa
jle
rcl
jbe
outs
dec
dec
imul
js
rcl
std
scas
(bad)
or
(bad)
in
gs
pop
xor
cs
mov
inc
xor
push
adc
mov
xor
dec
jbe
push
push
or
push
bound
test
out
add
dec
push
retf
ror
ss
mov
push
inc
xor
ins
call
dec
mov
push
dec
dec
retf
jae
cli
add
jno
push
outs
xor
fs
call
lods
push
push
push
push
cmc
sbb
mov
xor
mov
push
or
lock
jno
js
lahf
sub
mov
push
scas
inc
sbb
add
push
xor
xor
dec
outs
popa
inc
repnz
loopne
aaa
hlt
pop
jae
push
pop
or
sub
bound
jae
pop
jae
push
push
outs
push
sbb
sbb
push
jo
mov
inc
pop
cmp
push
shr
(bad)
(bad)
jp
push
imul
imul
jno
inc
xor
jle
adc
outs
push
push
inc
dec
xor
dec
push
push
bound
es
data16
addr16
push
mov
lods
xor
push
inc
pop
cmp
push
push
pop
and
aad
and
outs
or
push
or
jbe
adc
push
rcl
mov
sahf
pop
sbb
pop
jp
outs
inc
(bad)
in
aad
dec
inc
ins
inc
outs
jbe
jns
je
mov
push
dec
push
xor
dec
inc
rcl
push
imul
and
or
pusha
push
fisubr
inc
jl
xor
sar
dec
ja
ja
imul
inc
js
sub
imul
xchg
arpl
xor
aaa
bound
lock
mov
jne
popa
inc
push
cmp
add
outs
ins
dec
jbe
int3
sbb
popa
outs
ins
dec
cmp
data16
popa
jne
push
and
jno
sbb
cmps
xor
les
push
jno
push
dec
cmp
dec
push
push
lock
add
cwde
or
jbe
ss
or
push
adc
test
pop
jo
dec
inc
gs
rol
pop
ins
or
jno
inc
dec
pop
fs
ja
and
or
push
outs
xor
ret
pushf
push
push
aaa
xor
jle
imul
lea
inc
outs
push
test
js
sbb
jmp
mov
sub
push
jp
inc
ins
cld
and
jg
pop
sub
gs
aaa
push
dec
jae
jo
fstp
aam
dec
outs
dec
cmp
test
pop
adc
inc
inc
outs
test
dec
ins
pop
ret
jb
clc
push
push
dec
push
js
push
add
jne
js
inc
push
mov
push
stos
push
xor
fs
inc
outs
dec
dec
push
inc
ret
push
xor
clc
inc
ss
test
fs
mov
fisubr
adc
pop
loop
aad
or
push
dec
lahf
inc
imul
and
xor
movs
and
jne
xor
inc
fs
push
adc
xor
push
or
nop
retf
mov
outs
xchg
ret
push
cmc
jp
jne
pushf
ss
adc
push
and
dec
aaa
jns
enter
ins
xor
pushw
fiadd
test
mov
cmps
pusha
jns
adc
loopne
cli
pop
popa
push
xor
ins
xor
mov
push
cmp
xor
xchg
in
out
and
xor
inc
jne
jo
inc
xor
bound
outs
jne
dec
jo
sub
mov
xor
jns
bound
pop
outs
inc
add
ja
dec
push
xor
call
jle
gs
push
dec
push
sbb
mov
inc
push
inc
jno
dec
loop
push
or
xor
and
dec
outs
ss
sub
xchg
jo
fdiv
add
mov
push
push
je
sbb
jmp
je
outs
inc
sbb
dec
mov
jne
dec
jle
sub
jne
data16
dec
push
push
bound
mov
pop
aaa
inc
arpl
inc
cmp
cld
jmp
push
xor
cmp
push
xor
jns
sbb
sbb
push
mov
enter
dec
inc
icebp
adc
shr
dec
je
xchg
retf
imul
int
ja
push
jp
sbb
mov
xor
imul
lock
push
ja
ss
addr16
fidiv
jno
xchg
inc
push
cmp
inc
cld
push
add
xor
xor
loop
cli
push
dec
xor
push
xor
mov
push
adc
adc
dec
sub
test
xchg
cmc
dec
aaa
jp
pop
dec
popa
xor
mov
jge
jne
dec
push
jmp
push
adc
imul
loopne
test
ja
dec
ss
clc
scas
pop
dec
je
xor
jae
push
dec
outs
mov
dec
js
ja
dec
xchg
ror
pop
push
or
dec
scas
imul
push
adc
bound
mov
sub
xchg
mov
ins
cmp
push
cld
xchg
test
xor
imul
inc
bound
and
sbb
add
push
js
dec
jae
xor
mov
popa
dec
cld
jbe
cs
mov
xor
cmp
pushf
test
cmc
push
cmc
sbb
xor
ja
jbe
and
xor
dec
sub
or
push
mov
adc
jo
xor
or
outs
fs
lds
or
xor
or
js
and
push
inc
outs
jns
pushw
push
dec
mov
xor
jns
adc
or
inc
cmp
jae
xchg
inc
jae
les
mov
out
ins
and
pop
fbstp
jns
out
ss
inc
xor
outs
xor
dec
popa
dec
sbb
popa
test
ins
int3
dec
push
sbb
push
mov
js
adc
dec
inc
pop
ja
push
push
imul
mov
imul
dec
outs
xor
push
pop
jne
push
sar
aaa
dec
dec
dec
jo
inc
push
(bad)
push
sahf
addr16
dec
shl
sbb
int
sbb
mov
cli
mov
push
imul
and
call
jb
push
inc
pop
add
shl
aam
mov
mov
jbe
jae
xchg
sahf
dec
sbb
push
push
hlt
mov
movs
xor
ins
inc
imul
adc
xor
aad
and
or
jno
test
mov
jo
push
dec
cmp
jbe
dec
pop
mov
xor
clc
xor
add
fdivr
inc
hlt
gs
aam
shl
ins
xor
hlt
jb
jb
mov
enter
dec
add
jo
jae
xor
dec
inc
ins
push
jae
jae
mov
push
xor
or
add
mov
js
xor
push
pop
loopne
outs
dec
outs
mov
inc
cmp
cli
sbb
push
push
arpl
dec
pop
dec
je
dec
inc
xchg
adc
mov
xor
cmp
inc
cmps
cmps
inc
sbb
jp
pop
jns
pusha
sub
cmp
jp
push
xor
aad
fcom
ins
pop
pop
lea
loopne
push
inc
dec
mov
rol
repnz
cmp
inc
push
push
mov
mov
and
outs
ret
xor
xor
fs
push
jp
adc
imul
dec
mov
push
dec
js
add
aaa
dec
pop
dec
dec
jbe
mov
call
jae
retf
add
bound
or
jo
imul
push
jns
jno
arpl
push
pop
imul
arpl
and
je
mov
sbb
cli
inc
data16
mov
stos
jb
mov
push
sub
sbb
shl
pop
xchg
mul
jbe
cmp
mov
fnstsw
push
mov
inc
xor
dec
inc
pop
fs
mov
cmp
rol
dec
push
push
mov
cmp
cmp
sbb
arpl
add
push
jbe
mov
lods
sbb
outs
mov
inc
fs
jae
dec
dec
dec
xor
stos
outs
loope
je
adc
xor
dec
mov
inc
inc
ja
pop
xor
push
or
clc
dec
xor
inc
pop
dec
push
jae
cmp
push
mov
cmp
dec
js
pop
inc
mov
mov
jmp
add
inc
aam
push
aad
popa
les
pop
retf
add
xchg
and
adc
dec
adc
in
je
jb
dec
xor
dec
popa
fs
cmps
ja
jns
jb
push
ss
inc
fs
jb
mov
cmp
push
jno
push
ss
into
push
add
mov
or
es
push
jne
dec
loopne
inc
mov
sub
push
add
call
mov
cmp
push
outs
jo
arpl
adc
cmp
mov
mov
call
outs
ret
ret
fdiv
cmp
je
mov
inc
dec
lods
xchg
fisub
xor
mov
inc
aaa
push
dec
popa
push
push
mov
dec
dec
xor
into
ss
outs
add
fs
push
dec
inc
scas
fcmovbe
cmc
dec
ins
dec
pop
mov
sbb
push
ss
mov
outs
inc
mov
push
push
xor
add
cmps
jbe
jne
inc
inc
dec
xor
add
sub
add
jmp
mov
push
or
jno
jecxz
cld
pop
ins
ja
inc
jno
inc
inc
inc
stos
jg
pop
scas
outs
xchg
mov
jp
push
dec
mov
jo
ret
jns
inc
xor
pop
je
push
ja
jns
inc
add
dec
pushf
xor
ins
ja
outs
je
push
jmp
push
jbe
inc
mov
and
inc
dec
inc
push
inc
dec
dec
dec
jecxz
ror
loopne
xor
push
push
data16
pop
mov
inc
cmp
cmp
shl
into
dec
jo
jne
sbb
jne
adc
push
push
or
cmc
inc
push
cmps
bound
fs
xor
dec
ss
push
inc
dec
push
push
sub
js
test
inc
inc
sub
and
cdq
test
xor
arpl
jb
mov
push
dec
xor
xor
cmp
dec
ja
add
dec
dec
push
xor
push
ins
mov
stos
and
mov
xor
or
xor
inc
push
inc
dec
push
ins
dec
mov
push
add
jb
int3
xor
aaa
adc
add
xor
popa
imul
dec
jae
inc
xor
xor
pop
add
mov
push
xchg
(bad)
fisubr
movs
sahf
dec
xchg
inc
jp
xor
cld
outs
arpl
cmp
push
dec
mov
or
test
pop
push
push
mov
pop
xchg
inc
inc
arpl
xor
push
gs
jp
jno
dec
jg
sbb
jb
bound
cmp
xor
add
movs
push
enter
inc
xor
inc
cli
push
xchg
gs
enter
mov
xor
push
push
sbb
jmp
js
push
mov
push
mov
fwait
movs
outs
popa
inc
jno
push
je
xor
nop
jbe
aaa
jne
imul
bound
inc
cmp
or
inc
push
inc
push
push
bound
bound
dec
mov
ja
xchg
sbb
pop
xor
inc
push
dec
inc
outs
scas
xor
xor
push
add
data16
je
dec
inc
and
mov
shl
dec
outs
mov
dec
inc
push
xchg
jne
or
test
dec
push
jae
xchg
pop
dec
nop
jge
and
dec
cmps
inc
dec
push
add
ins
inc
push
outs
xor
aaa
inc
push
jne
aam
adc
sbb
mov
or
push
jbe
pop
inc
shl
jb
lock
inc
xor
jp
push
or
xor
inc
rcl
inc
push
pop
mov
inc
imul
pop
bound
dec
inc
cmps
xor
dec
sbb
or
shl
pop
jae
jns
xor
cmps
inc
push
cmp
jno
or
mov
das
imul
ja
push
dec
mov
push
cmp
bound
push
xor
xor
ins
data16
mov
fadd
dec
xor
inc
and
cmp
pop
stos
add
xor
xor
xor
jo
and
xor
rcr
aaa
mov
jl
(bad)
retf
xlat
mov
ror
pop
sub
xor
mov
pop
dec
lods
test
jae
jns
dec
xor
movs
aaa
xor
stos
js
ins
mov
xor
push
or
xchg
je
adc
aad
sub
data16
dec
mul
fbld
inc
mov
xor
bound
cli
mov
aaa
mov
data16
outs
push
xchg
add
clc
cmp
aam
call
inc
push
stos
ja
inc
dec
outs
dec
mov
inc
imul
xor
or
push
cwde
jp
ja
retf
push
aaa
mov
dec
adc
ja
cmp
adc
loop
or
mov
jns
inc
jne
dec
inc
outs
add
jno
sbb
ins
inc
adc
pusha
fsub
sbb
sub
inc
xlat
add
fistp
push
js
dec
loop
jae
jle
add
sbb
jbe
and
jno
cld
xor
ds
std
mov
cmp
xor
sub
xor
inc
push
mov
sub
pop
mov
dec
inc
adc
push
out
dec
xlat
shl
js
nop
dec
push
neg
push
xchg
adc
inc
add
pop
dec
cmps
xchg
xor
sub
ins
inc
push
and
xor
jp
jae
push
pusha
inc
pop
shl
fcom
jno
xchg
xor
jb
inc
shr
je
inc
push
or
js
push
and
inc
gs
lods
inc
add
lods
mov
dec
jns
pop
pop
mov
inc
outs
stos
mov
dec
mul
xor
outs
dec
push
loopne
cmps
cmps
pop
retf
dec
mov
js
inc
inc
bound
dec
div
in
mov
cmp
dec
addr16
inc
xor
je
dec
push
push
jns
ds
adc
dec
push
jl
std
fld
dec
(bad)
call
push
outs
jo
ss
or
outs
dec
sar
outs
dec
ins
push
jp
jbe
inc
es
cs
lock
popaw
imul
push
dec
bound
mul
dec
aaa
jle
fs
fbld
fimul
pushw
jo
push
jae
cmp
mov
xor
gs
jno
dec
jb
mov
dec
loop
jae
add
scas
xor
inc
imul
inc
push
mov
xor
inc
push
push
mov
and
int3
or
jne
outs
jle
ins
dec
retf
xor
xor
outs
js
cmp
jo
shr
es
xor
and
dec
imul
push
sub
push
inc
outs
sub
arpl
push
ds
outs
sub
loopne
jns
pop
dec
push
in
nop
imul
cmp
jo
jae
xor
mov
xor
push
call
(bad)
data16
add
adc
les
jb
sub
add
aam
mov
sub
xor
jne
dec
cs
popa
and
pop
adc
push
adc
leave
jle
jae
jo
dec
nop
sub
dec
fsubr
arpl
imul
mov
push
inc
imul
mov
dec
stos
inc
popa
push
addr16
inc
arpl
pop
(bad)
ret
pop
dec
pop
jmp
lds
bound
shl
int3
rol
ret
adc
jb
pop
and
popa
inc
and
ss
cmps
jo
mov
popa
push
push
adc
push
push
sbb
movs
xor
dec
dec
sbb
push
dec
inc
xchg
or
dec
les
es
add
outs
test
add
pop
push
xor
ins
dec
pop
shr
add
dec
push
addr16
push
addr16
ins
push
fidiv
stos
ins
inc
sub
cmp
jns
fdivr
dec
rcl
inc
inc
outs
push
pop
ja
inc
cmps
push
add
lods
xor
push
xchg
shr
les
stos
(bad)
aad
imul
test
or
dec
bound
push
sub
ja
arpl
push
jns
bound
mov
dec
in
xchg
movs
jno
or
add
jp
arpl
sbb
jo
push
jae
inc
cmp
ins
push
inc
mov
push
xor
cwde
ds
xor
cmp
sub
push
dec
sbb
mov
dec
inc
fs
dec
popa
imul
mov
shl
push
ret
adc
clc
push
push
test
dec
jl
aaa
push
mov
push
sbb
mov
xor
inc
inc
push
ror
gs
out
dec
aad
or
xor
sahf
arpl
xor
inc
xor
jno
push
inc
push
test
add
push
sbb
or
jb
dec
add
push
sbb
test
inc
adc
jbe
dec
xor
jb
push
fadd
mov
jbe
mov
fwait
pop
sub
popa
push
xor
xchg
shl
xor
shl
jno
push
cmp
cmp
push
jns
xor
xor
pop
inc
adc
lock
push
je
pop
mov
data16
push
dec
adc
push
test
jne
inc
push
lods
aaa
push
push
test
(bad)
imul
scas
push
ret
inc
dec
gs
aaa
aaa
jns
ja
dec
jbe
xor
inc
ja
out
ins
xor
les
inc
mov
js
push
lock
mov
xor
js
inc
jne
jno
xor
popa
loop
xchg
dec
jne
dec
ja
jne
add
arpl
add
add
(bad)
push
push
sub
ss
push
cld
pop
fist
sub
push
or
jne
dec
jp
popa
adc
test
ss
push
into
je
inc
xor
fs
dec
pop
lods
fwait
add
aaa
inc
ins
mov
ja
sub
and
dec
outs
mov
jbe
lock
ds
dec
cmp
bound
dec
aaa
inc
cmp
dec
imul
outs
bound
pop
xor
sub
gs
mov
popa
sub
aaa
pop
xor
inc
xor
inc
push
dec
dec
inc
lock
pushf
jp
inc
push
dec
ins
dec
or
add
or
dec
ins
xchg
stos
jmp
rol
add
(bad)
and
push
dec
push
add
je
push
dec
push
inc
imul
inc
jbe
add
dec
pop
push
push
mov
add
push
into
lock
and
mov
dec
bound
dec
xchg
dec
jno
jo
sub
idiv
push
(bad)
stos
clc
push
shl
xor
dec
add
push
xor
xor
inc
xor
dec
xor
jbe
in
adc
fcomp
cmp
in
inc
inc
sbb
mov
dec
push
dec
call
dec
es
rcr
imul
mov
aam
xor
inc
jbe
inc
xor
outs
inc
inc
cmps
shl
inc
inc
dec
inc
out
nop
xor
mov
inc
jbe
push
push
dec
outs
push
sbb
int
imul
jbe
js
imul
(bad)
pop
sub
ss
jno
push
push
dec
js
fisttp
shl
pop
pop
xor
fbld
push
ins
bound
inc
js
sub
mov
push
js
push
xor
push
and
dec
mov
push
scas
mov
xor
js
data16
push
outs
adc
xor
iret
stos
or
xchg
lods
adc
das
aaa
inc
test
daa
cmp
mov
push
inc
jbe
adc
or
push
dec
or
cmp
ficom
pusha
xchg
fwait
in
mov
inc
into
mov
cmp
push
jno
push
ins
push
pop
adc
out
mov
ins
aaa
dec
pusha
movs
push
stos
sbb
pop
sub
mov
push
push
and
jb
push
xchg
les
into
jb
push
fs
out
test
rol
push
jle
cli
dec
xor
pop
std
add
push
nop
ins
inc
bound
push
in
inc
push
cmp
sbb
push
sar
dec
imul
or
xor
mov
cs
into
je
push
inc
push
ins
dec
sbb
xor
xor
jne
pop
nop
add
dec
inc
push
xchg
jno
push
push
push
js
push
sub
or
imul
or
push
cs
jecxz
push
jo
imul
inc
gs
inc
xchg
test
push
shr
lock
cdq
mov
dec
push
enter
add
pop
add
in
mov
repnz
outs
cmp
push
and
dec
test
(bad)
xchg
fcom
dec
sub
dec
dec
mov
or
add
ja
push
test
(bad)
imul
cmp
(bad)
jae
dec
cmp
inc
ss
dec
cmp
sar
pop
lock
push
dec
js
jb
xor
jno
imul
mov
jne
xor
jb
sub
fcomp
pop
dec
push
test
mov
inc
outs
dec
sar
jo
clc
outs
adc
ins
dec
jae
ja
jb
push
xor
jmp
xor
lock
es
data16
and
outs
push
push
ins
dec
inc
mov
xor
inc
fs
xor
je
dec
pop
mov
(bad)
jns
push
cwde
pop
mov
mov
push
ins
xor
pop
mov
loop
ins
mov
arpl
dec
popa
cmp
push
push
cmp
push
imul
adc
(bad)
dec
inc
loopne
hlt
dec
push
addr16
cli
shr
xor
sbb
outs
pop
pusha
push
inc
retf
div
jo
mov
outs
je
inc
les
push
xor
or
and
pop
dec
pusha
gs
(bad)
pop
inc
add
inc
dec
popa
popa
ins
pop
push
dec
inc
aaa
push
lods
dec
popa
cwde
push
push
push
add
pop
mov
ja
add
push
ins
push
sub
jns
push
cmp
inc
ss
loopne
mov
adc
inc
dec
arpl
loope
das
adc
jbe
inc
jb
push
ret
outs
push
imul
jno
push
push
inc
jns
jb
rcr
add
push
arpl
adc
das
xchg
xor
dec
push
mov
xor
mov
outs
and
cmp
gs
inc
jbe
cs
mov
bound
imul
adc
pop
dec
inc
cmp
push
repnz
jae
push
lock
jbe
push
dec
arpl
dec
jae
popa
xor
ja
outs
add
push
and
push
push
dec
(bad)
clc
sbb
lods
push
push
arpl
inc
push
icebp
data16
outs
fmul
jo
outs
ss
push
cmp
cmp
jbe
pop
inc
pop
jl
jae
out
ss
je
ins
clc
outs
add
dec
jp
add
cmp
jno
imul
push
add
xor
inc
dec
imul
jno
xor
jo
ret
scas
xor
jne
inc
jb
push
js
xor
mov
cwde
aaa
jne
ja
xor
push
pop
mov
pop
xor
arpl
lock
sbb
inc
cmp
sbb
sub
ja
inc
xor
dec
lods
or
fwait
add
jae
inc
push
push
pop
jbe
jne
pop
mov
xor
aaa
popa
cmp
dec
cmp
neg
mov
dec
clc
ins
fdiv
imul
jo
mov
xor
inc
imul
dec
xchg
xor
dec
cmp
sbb
cs
dec
imul
inc
push
add
push
xor
outs
xor
loopne
inc
ins
cmp
push
addr16
adc
cmp
inc
xor
ins
jns
ins
int3
jg
sbb
cmp
jb
dec
push
push
aaa
push
dec
inc
dec
or
add
xor
out
and
(bad)
xchg
ja
inc
aaa
stos
movs
inc
loope
dec
ss
and
inc
fsubr
loopne
xor
stos
(bad)
aad
dec
data16
jno
ins
xor
or
stos
inc
call
ss
shl
out
inc
js
cld
stos
cmc
mov
and
je
aaa
ins
dec
dec
xor
xor
mov
pop
push
inc
aaa
push
push
push
dec
retf
gs
jne
scas
fidiv
mov
dec
inc
fs
mov
popa
imul
push
push
out
inc
imul
push
pop
sub
push
push
gs
inc
jle
outs
jns
inc
pusha
mov
pop
adc
mov
push
dec
fs
jne
mov
xor
cmp
pop
cmps
sub
pop
mov
jg
jbe
jne
inc
addr16
jbe
xor
aaa
frstor
js
jno
xor
imul
push
or
push
xor
mov
(bad)
popa
push
sbb
xor
push
ror
push
imul
xor
add
sub
or
add
fs
pop
xor
inc
mov
inc
mov
ja
pop
inc
push
call
push
dec
popa
test
xchg
stos
(bad)
ins
or
push
scas
push
in
mov
push
mov
xchg
inc
push
imul
cmp
push
cwde
xor
inc
dec
push
jo
lock
data16
and
dec
imul
or
and
xor
js
inc
and
xor
int3
xor
icebp
adc
inc
push
xor
cli
push
dec
inc
xor
pop
dec
jo
xor
or
call
data16
push
bound
jb
rcl
sbb
push
jbe
shl
outs
push
xor
imul
add
call
bound
jbe
inc
arpl
push
bound
xchg
add
inc
aaa
adc
push
shl
push
outs
jno
outs
inc
sbb
dec
call
jb
cmp
jo
add
dec
js
cmp
fidivr
inc
push
jne
popa
inc
push
inc
ja
dec
xor
arpl
jo
cmps
inc
xor
adc
cld
mov
xor
jns
popa
and
fcmovbe
add
push
jns
inc
dec
daa
jne
and
push
cli
stos
pusha
push
js
xor
sub
aaa
jo
cli
mov
pop
data16
push
dec
nop
arpl
cmp
ins
dec
dec
outs
jle
jl
push
pop
aaa
xor
aaa
cmp
push
mov
inc
jb
add
mov
xor
retf
adc
sbb
xchg
mov
popa
jle
lods
add
jmp
inc
clc
popa
push
retf
call
dec
inc
push
jp
xchg
mov
add
inc
add
mov
sub
outs
js
push
popa
dec
imul
cmp
fwait
movs
or
inc
jp
xchg
ins
mov
pop
xor
push
pop
gs
ins
inc
and
jne
push
push
in
push
sar
cmp
dec
xor
jp
rol
xor
je
stos
add
imul
adc
dec
repnz
sahf
inc
jp
push
pop
scas
adc
inc
dec
dec
stos
addr16
das
pop
mov
pop
out
inc
pop
into
dec
push
dec
dec
jne
xor
adc
inc
ja
ins
jbe
jl
add
test
data16
inc
lods
mov
push
push
xor
ss
dec
dec
mov
or
push
adc
add
push
mov
fwait
sub
add
xchg
xor
push
dec
inc
fidiv
dec
cmps
jg
push
mov
jbe
jno
ins
outs
jns
outs
mov
jb
cmp
cmp
jns
or
in
test
or
int3
or
add
jb
sub
(bad)
mov
push
xor
mov
push
mov
xor
push
xor
add
call
pusha
sub
push
inc
xchg
mov
adc
js
js
and
jne
in
cmp
fs
in
mov
rcr
inc
push
and
lea
mov
into
pop
or
push
dec
dec
xchg
push
xor
jg
rcr
loopne
push
inc
jns
arpl
push
inc
xor
push
into
dec
ds
ins
clc
ret
dec
jb
dec
jbe
arpl
jo
xor
inc
inc
pop
pop
push
ja
ins
rcr
fisttp
repnz
dec
dec
dec
xor
or
movs
pop
test
lods
dec
pop
dec
cmp
and
cmps
xor
push
test
shl
arpl
dec
jns
dec
sahf
cmp
ret
fsubr
jb
dec
dec
jne
push
pop
dec
data16
or
imul
imul
add
repnz
outs
inc
push
lea
mov
dec
mov
xor
dec
push
inc
pop
and
dec
hlt
hlt
push
jp
adc
push
dec
jbe
pop
repnz
jo
push
popa
pop
hlt
aam
inc
je
push
jae
dec
mov
lods
bound
xchg
pop
adc
nop
jle
push
imul
imul
dec
stos
add
mov
push
fdivr
lods
mov
jne
inc
stos
jae
dec
outs
dec
dec
inc
push
dec
mov
pop
sbb
dec
mov
dec
push
hlt
pop
adc
push
ds
push
gs
bound
add
cs
xor
or
mov
dec
push
pop
push
push
dec
push
mov
jae
retf
into
ins
mov
inc
ja
xor
retfw
fcom
jge
inc
push
data16
inc
je
jb
and
add
push
jl
aaa
push
sbb
jbe
dec
bound
push
inc
enter
adc
cli
cs
ins
imul
fisubr
addr16
ret
push
dec
mov
cmp
(bad)
pop
pop
dec
inc
jns
js
push
cmp
push
popa
jb
pop
ret
pop
inc
push
loopne
dec
test
in
clc
dec
imul
or
push
bound
data16
inc
jbe
dec
test
dec
into
mov
push
dec
outs
mov
shl
pop
outs
ja
mov
inc
inc
lods
test
sbb
inc
xor
mov
mov
add
popa
jp
je
adc
call
sbb
aaa
add
ins
mov
jp
xor
dec
popa
outs
test
mov
lea
call
jns
cwde
dec
dec
xchg
sbb
cmp
ja
or
rcl
jo
dec
outs
and
pop
aaa
mov
jmp
inc
dec
jbe
jne
xor
jno
ja
jne
inc
imul
inc
dec
push
sub
sub
push
xor
lods
jb
pop
in
push
inc
fs
inc
add
xor
outs
popa
pop
xor
jb
add
fs
addr16
sbb
push
push
popa
inc
outs
adc
add
push
push
retfw
fs
je
or
imul
inc
scas
outs
push
jae
mov
out
cli
outs
dec
fs
dec
addr16
xor
imul
add
jno
jbe
mov
adc
xchg
jns
xchg
ja
bound
pop
sub
push
xor
imul
adc
ja
fcom
stos
movs
test
inc
je
xor
dec
xor
ss
push
fild
ja
inc
dec
cmp
push
cmp
ss
js
mov
sub
cmp
inc
xor
adc
pop
inc
ins
retf
and
fs
inc
push
jbe
fdiv
pop
dec
addr16
mov
push
ins
xor
test
test
loopne
je
xor
cdq
sbb
cmp
cmp
add
dec
aaa
imul
push
push
sbb
dec
jbe
enter
xchg
in
push
mov
xor
jl
inc
mov
test
imul
push
sub
sub
gs
xor
nop
xor
data16
dec
jo
je
or
data16
addr16
inc
mov
imul
js
mov
mov
push
je
arpl
xor
pop
adc
xchg
inc
jno
push
cmp
jns
sbb
test
dec
dec
add
xchg
jp
cmp
sub
dec
inc
jo
dec
arpl
gs
(bad)
xor
fs
adc
loopne
inc
fs
outs
dec
pop
(bad)
sub
adc
and
and
push
imul
fadd
dec
xor
cmp
pop
add
cmps
data16
inc
xor
add
xor
fidivr
inc
dec
jo
bound
cmp
sub
jno
add
jae
(bad)
xor
inc
xchg
and
and
mul
ins
dec
inc
mov
inc
addr16
ja
add
dec
arpl
push
sahf
bound
xor
mov
movs
inc
xor
ret
dec
jb
enter
pop
dec
dec
fisubr
push
push
test
sbb
(bad)
sbb
aad
nop
pop
jo
mov
cmps
add
arpl
loope
jmp
outs
imul
push
adc
lock
pop
mov
aaa
jo
jno
nop
jp
or
(bad)
leave
in
push
push
test
adc
push
jo
jbe
xchg
or
xor
inc
jecxz
mov
ja
jae
fs
xor
aaa
pusha
push
xchg
call
dec
dec
dec
sub
gs
pusha
cwde
sbb
es
xchg
ficom
out
inc
and
out
popa
inc
bound
inc
sub
sub
dec
imul
push
xor
pushw
cmp
ins
pop
cld
pop
inc
dec
imul
dec
push
mov
movs
or
pop
jp
cmp
popf
xchg
in
call
push
test
jne
add
push
xor
bound
push
inc
adc
fs
push
jbe
inc
ins
jae
js
daa
add
mov
jo
aam
bound
xchg
retf
lods
xor
aaa
pusha
and
in
sub
xor
push
inc
add
xor
inc
inc
push
cmp
sub
pop
dec
jno
in
verw
js
gs
shr
aad
fidiv
cmp
inc
les
jae
jne
jo
dec
mov
dec
movs
push
clc
ja
push
pop
push
mov
cmp
push
inc
imul
or
jmp
push
nop
or
and
push
rcr
jbe
mov
push
sbb
mov
ins
out
dec
jb
mov
xor
xchg
mov
mov
mov
mov
bound
xor
inc
mov
outs
jae
jns
xor
inc
jns
xchg
adc
dec
inc
loop
push
pusha
xchg
bound
dec
push
(bad)
dec
push
int3
(bad)
ds
loope
pop
add
inc
arpl
icebp
or
pusha
ins
push
imul
pop
imul
scas
push
push
mov
push
into
dec
push
dec
outs
arpl
jb
pop
add
push
xchg
(bad)
push
outs
addr16
ins
inc
inc
aad
inc
stos
push
fsubr
pop
je
sbb
pop
sbb
push
outs
xor
inc
push
popa
pop
cwde
cli
fwait
add
jae
data16
inc
mov
or
pop
pop
bound
pop
jle
jl
popa
sub
xor
push
push
gs
jp
push
rcl
sbb
push
jo
jle
movs
adc
dec
sahf
inc
or
les
dec
xor
dec
out
pop
addr16
call
dec
gs
add
dec
int3
stos
xor
fmul
or
push
add
adc
xor
aaa
and
jne
dec
xor
stos
or
cli
mov
jno
xor
add
dec
inc
popa
dec
ja
imul
dec
or
pop
outs
out
add
mov
sbb
push
lea
cli
cwde
push
hlt
push
fs
shl
inc
imul
pop
imul
inc
push
adc
pushw
and
int3
push
add
gs
inc
aad
xor
jp
inc
jae
into
pop
xchg
mov
outs
dec
(bad)
and
sbb
dec
xor
inc
pusha
or
push
mov
xchg
xchg
mov
pop
cmp
cli
and
inc
cmp
loope
mov
push
inc
push
inc
outs
push
push
jae
ja
imul
add
dec
aaa
inc
rcl
enter
dec
arpl
data16
test
jbe
xchg
rcl
jg
je
sub
je
js
xor
push
inc
xchg
ret
xor
outs
test
pop
call
gs
add
push
dec
ja
test
shr
loopne
adc
push
add
inc
push
jne
push
inc
push
out
sar
pop
jbe
jns
sub
inc
dec
push
les
sbb
stos
fadd
dec
jle
push
mov
rcl
push
clc
cmp
inc
bound
jno
xor
mov
xchg
popa
add
or
inc
js
jbe
dec
ss
push
test
les
jno
aaa
dec
xor
adc
nop
inc
je
outs
xchg
push
jl
popa
push
xor
add
mov
push
xor
adc
add
fs
aaa
popa
cmp
popa
int
or
push
push
fadd
fldcw
jo
mov
push
dec
aam
sbb
mov
clc
jp
dec
jno
stos
add
or
test
in
or
scas
pop
jbe
xor
adc
aaa
scas
dec
xchg
xor
mov
fwait
movs
dec
ret
dec
mov
push
inc
pop
arpl
inc
inc
ins
push
or
dec
jae
inc
inc
mov
dec
in
pop
cmp
mov
push
dec
push
push
sub
cmp
dec
add
mov
push
inc
ret
ja
and
xor
push
outs
pop
pop
jge
cmp
addr16
or
ja
push
push
xor
jo
adc
xor
xchg
neg
dec
je
pusha
adc
xor
push
jne
aam
cmp
shr
dec
dec
push
inc
data16
popa
inc
lds
dec
inc
add
test
sbb
xor
pushf
jae
jbe
lds
sbb
mov
add
jne
retf
push
or
sub
imul
dec
shr
fs
push
cmp
sub
or
add
aaa
dec
inc
xor
jbe
add
jmp
aaa
pop
push
inc
inc
jp
push
sar
xor
jb
js
inc
jp
sbb
pop
add
js
js
sbb
mov
add
div
or
dec
es
aas
pop
mov
push
jne
cmp
dec
ret
ds
inc
addr16
addr16
imul
adc
inc
popa
dec
add
add
inc
pop
push
(bad)
xlat
and
dec
sub
dec
push
hlt
dec
pop
repnz
aam
ins
jne
dec
mov
adc
inc
or
add
or
mov
call
js
cmp
ins
and
cmp
out
ja
addr16
test
in
adc
sub
pop
stos
dec
arpl
xor
jg
add
dec
xor
xor
dec
dec
xor
or
dec
xor
imul
call
xor
aam
lock
loop
add
sbb
jb
push
push
or
shl
xchg
ins
inc
inc
add
bound
imul
inc
push
add
dec
mov
shr
jp
jae
(bad)
push
dec
in
inc
aaa
cld
outs
outs
arpl
push
les
jno
xor
arpl
shr
sub
call
jl
or
inc
xchg
je
jne
mov
icebp
sbb
xchg
ss
inc
xor
push
jbe
xchg
sbb
push
imul
mul
push
inc
push
outs
pushf
dec
jns
push
push
or
retf
(bad)
ins
or
dec
or
test
inc
jp
push
data16
and
pop
adc
mov
outs
mov
and
jp
ja
adc
cmp
popa
jmp
data16
push
cmp
loop
or
sahf
dec
ins
cmps
cmp
push
mov
dec
xor
outs
arpl
ret
les
push
xchg
stos
mov
add
inc
xor
loopne
sbb
xchg
inc
test
and
adc
push
mov
inc
imul
les
inc
mov
sbb
jns
arpl
xchg
repnz
inc
jl
sub
test
outs
push
and
or
les
xor
push
sub
inc
push
repnz
outs
pop
push
shl
call
xor
es
ja
push
mov
jae
or
bound
push
xor
mov
outs
mov
dec
(bad)
push
mov
inc
pop
je
je
outs
gs
dec
inc
fisttp
rcl
gs
dec
ins
inc
jbe
push
dec
outs
enter
mov
inc
outs
xor
fs
dec
jbe
jp
jae
jb
pop
push
sbb
add
out
xor
add
dec
sbb
ret
jo
cld
push
adc
test
xchg
add
xor
cli
jno
sbb
aam
jne
jno
pushf
dec
push
cwde
scas
or
arpl
popa
adc
sub
push
(bad)
js
js
js
clc
and
retf
dec
gs
js
push
jp
cs
pop
push
xor
je
add
push
cmp
xor
ins
push
or
aam
outs
fisub
clc
pop
add
inc
push
xor
inc
ja
dec
dec
mov
mov
xor
and
ins
and
enter
push
dec
or
or
push
cmp
dec
jbe
sbb
push
sahf
push
jo
out
push
sbb
or
sbb
addr16
sbb
cmp
inc
ins
push
push
push
dec
pop
inc
or
jb
stos
or
gs
xor
jbe
mov
xor
mov
data16
push
mov
cli
inc
push
imul
add
mov
inc
arpl
js
lods
mov
call
stos
dec
xor
imul
sbb
inc
mov
scas
and
push
push
jne
(bad)
mov
jb
test
gs
sub
dec
clc
in
sbb
dec
jae
add
jno
push
push
mov
mov
bound
xor
xor
xchg
dec
push
ins
fidiv
jle
adc
fs
jne
scas
ja
or
dec
sar
push
or
js
push
outs
dec
repnz
aaa
cmp
inc
cmp
jo
push
cwde
ins
push
push
cmp
imul
imul
inc
mov
or
xlat
lea
inc
out
dec
cli
or
jno
push
pop
push
xor
ins
mov
(bad)
and
ret
pop
ret
adc
lods
sub
mov
enter
xor
dec
mov
inc
dec
pop
dec
push
adc
fidivr
xor
adc
push
les
xor
adc
dec
inc
or
dec
inc
lods
outs
pop
push
or
inc
inc
ss
push
push
outs
push
jp
outs
out
xchg
sub
xor
xor
xor
sbb
and
imul
adc
jp
mov
mov
xor
xor
nop
clc
popa
gs
push
inc
jp
pop
aam
ror
push
push
push
xor
ja
push
push
sub
mov
xchg
js
inc
mov
fsub
push
jb
bound
inc
jo
add
xchg
pop
pop
repnz
aam
push
jb
xor
outs
data16
inc
add
out
mov
xor
clc
bound
xchg
dec
jne
mov
jo
jb
jns
cmp
fs
push
xchg
push
mov
xor
arpl
adc
call
dec
jns
imul
fmul
xchg
and
fs
push
(bad)
push
in
sbb
push
cmp
js
ins
ins
pop
sbb
dec
data16
cmp
sub
mov
dec
push
push
mov
lds
inc
icebp
xor
jne
mov
push
arpl
push
js
fisub
mov
js
sub
pop
push
adc
xchg
jp
(bad)
adc
je
dec
cmp
jns
adc
bound
push
dec
pop
test
dec
adc
jnp
or
ss
jb
dec
pop
adc
daa
add
daa
fcomp
sbb
sub
test
sub
outs
(bad)
push
dec
fsub
push
xchg
push
sub
jne
or
outs
inc
out
xchg
mov
inc
js
iret
outs
ss
push
pop
outs
sbb
dec
push
xor
add
imul
xchg
mov
xor
scas
push
outs
push
stos
jmp
push
inc
cmp
inc
jbe
outs
push
push
ss
dec
fdivr
inc
inc
dec
ins
jae
push
arpl
or
ja
dec
clc
scas
aam
outs
push
cmp
xor
outs
push
(bad)
mov
jno
inc
fs
pop
push
and
xchg
push
dec
dec
jbe
jo
mov
push
add
(bad)
lock
xchg
adc
out
pop
xor
add
rol
repz
pop
adc
push
out
push
push
xchg
cmps
jae
sahf
out
jge
je
outs
(bad)
ins
dec
gs
push
xor
and
scas
fld
imul
or
add
gs
jnp
mov
div
bound
inc
jnp
in
loopne
or
inc
pop
sub
arpl
cmps
sbb
mov
xor
inc
loop
sub
push
pop
outs
dec
push
das
and
push
ret
arpl
adc
inc
or
cs
je
jb
pop
cmp
cmp
mov
pop
add
mov
bnd
cli
outs
out
inc
loope
inc
cmp
dec
push
push
pop
loope
pop
fs
or
out
mov
pop
jbe
xchg
out
pop
in
or
addr16
push
mov
push
push
mov
mov
dec
(bad)
jae
stos
or
push
cli
mov
mov
inc
push
aaa
inc
push
outs
jb
push
ss
and
fs
outs
je
inc
aaa
jo
mov
mov
(bad)
aaa
inc
gs
out
xor
imul
xor
xor
push
push
xor
aaa
fimul
dec
js
dec
cmp
push
xor
ja
hlt
cmp
dec
and
jbe
jp
data16
push
bound
clc
jmp
dec
dec
jae
js
ins
ss
ja
push
dec
mov
jb
xor
test
js
je
in
je
jne
je
fcomp
movs
add
enter
dec
and
cli
(bad)
mov
popa
dec
ss
arpl
jne
push
pop
xor
dec
ja
arpl
(bad)
mov
xor
push
dec
dec
ja
jns
ins
outs
xor
xor
xor
xor
jg
arpl
push
jb
push
dec
cmp
sub
push
cli
pop
jo
xor
push
jmp
aaa
imul
popa
pop
test
inc
pop
jae
cmp
cli
push
imul
aaa
dec
imul
push
jg
mov
xor
aaa
inc
dec
push
jne
icebp
add
push
jns
xor
neg
inc
mov
push
mov
push
xor
scas
push
mov
push
dec
push
je
jae
imul
inc
js
ins
xor
dec
(bad)
fld
aaa
jp
push
arpl
dec
ja
mov
or
push
push
outs
jp
xor
mov
xor
jno
cmp
inc
dec
push
hlt
push
push
popa
xchg
jl
mov
dec
(bad)
shr
jne
lock
cmp
push
fs
push
jle
or
ins
in
inc
xor
pop
push
xchg
and
(bad)
out
imul
mov
je
xor
mov
mov
mov
push
popa
push
push
inc
jno
inc
push
ins
bound
add
cmp
jns
push
dec
xor
dec
imul
ins
sub
push
adc
ins
dec
push
pushf
inc
xor
jno
mov
inc
sbb
jbe
jno
inc
jbe
cmp
outs
jmp
je
dec
inc
inc
int3
test
stos
or
xor
push
ins
push
sbb
inc
xchg
pop
jp
push
dec
(bad)
push
div
xor
dec
jp
jno
xor
imul
ror
xor
inc
add
xor
imul
or
ror
xor
xor
or
ins
jae
add
dec
push
push
adc
fdivp
outs
mov
xor
cmp
push
inc
push
inc
ja
fsubr
xor
dec
sbb
mov
pop
jb
gs
popa
push
xor
fs
cmp
dec
fimul
cld
mov
loop
pop
aaa
push
xor
or
inc
xchg
pop
jle
xor
inc
push
add
fadd
and
inc
dec
pop
in
fistp
ss
push
xor
xor
inc
ins
mov
adc
xor
push
push
mov
xchg
jmp
aam
pusha
pop
inc
xchg
ins
add
push
jbe
jb
je
jbe
jne
pop
push
mov
pop
add
outs
dec
aaa
xor
dec
ins
xchg
arpl
mov
arpl
cmp
test
ins
mov
mov
xor
xor
add
in
jp
dec
adc
xor
push
add
(bad)
inc
push
dec
pop
xor
push
xor
(bad)
dec
imul
js
jp
cmp
shl
pop
nop
lods
outs
les
xor
bound
dec
push
push
in
cmps
call
cmp
push
push
pusha
mov
jb
mov
mov
ins
dec
push
bound
cmp
pushf
dec
cmp
movs
jp
push
jp
push
xor
pusha
fstp
add
pop
inc
and
dec
nop
fs
ins
ins
cwde
fs
inc
popa
push
(bad)
out
in
ss
push
sub
inc
aaa
fld
and
mov
dec
inc
xchg
and
xchg
inc
xor
add
xor
and
push
and
xor
adc
adc
pop
inc
imul
jne
arpl
push
pop
ins
adc
dec
inc
sub
jno
push
xor
call
push
xor
jb
push
lock
jne
jl
movs
fdiv
ins
je
movs
inc
add
test
mov
xor
je
push
jb
add
jg
mov
dec
push
arpl
push
ins
inc
xchg
mov
arpl
pop
movs
add
push
ins
ret
mov
inc
sub
push
gs
pop
lds
ja
mov
add
xor
dec
inc
jne
add
add
dec
dec
out
jp
add
sub
aad
dec
dec
ss
dec
movs
xchg
pop
and
push
inc
or
dec
imul
bound
push
or
test
mov
mov
stos
add
out
push
push
xor
push
xor
js
add
xor
dec
add
cmc
add
je
push
test
addr16
push
mov
bound
mov
retf
(bad)
and
js
push
push
inc
rcl
xchg
sbb
fdivr
push
fisubr
mov
fs
or
push
jbe
inc
xchg
dec
arpl
xor
inc
inc
bound
int3
add
add
add
xor
mov
push
outs
imul
shl
sub
enter
push
inc
cwde
push
pop
mov
dec
call
xchg
inc
xor
cs
or
xor
gs
push
pop
scas
adc
mov
outs
push
push
fisubr
jne
das
push
push
in
inc
gs
inc
dec
fcmovb
inc
sub
jp
inc
jle
(bad)
(bad)
ja
inc
push
cmp
pop
shr
cmp
cmp
dec
inc
rcr
inc
xor
push
inc
ja
add
cmp
adc
js
ret
jb
pop
stos
test
dec
gs
lods
xor
xor
push
nop
ret
jno
clc
jb
push
daa
add
add
les
push
rol
xor
dec
dec
shl
dec
call
and
adc
jge
adc
bound
arpl
ja
outs
push
or
cld
bound
inc
add
sub
jbe
cmp
hlt
popf
push
xor
test
xchg
call
ins
dec
inc
jns
adc
shl
outs
xor
inc
dec
arpl
jae
mov
jo
xor
dec
pop
xor
cmp
(bad)
adc
dec
les
ja
out
call
xor
jno
xor
aad
dec
inc
mov
add
js
dec
push
mov
sub
add
inc
mov
inc
imul
add
adc
push
test
shl
push
sbb
data16
push
jbe
je
pop
aad
jle
fidivr
push
adc
adc
fs
fisub
xor
dec
push
popa
add
inc
out
ins
push
dec
retf
loopne
(bad)
jne
cs
inc
enter
je
jno
mov
mov
mov
gs
or
ja
dec
push
jbe
jle
xchg
adc
ins
push
cmp
push
xor
test
cmp
dec
jb
inc
arpl
data16
ret
add
push
movs
dec
push
push
in
ror
xor
dec
pop
xor
shr
ret
pop
mov
pop
jl
jb
pop
push
push
jb
or
push
addr16
xor
enter
sub
dec
inc
ins
jb
(bad)
jbe
push
jbe
inc
push
pop
dec
ins
mov
mov
dec
gs
inc
add
push
xor
in
inc
or
loopne
push
outs
fsub
jbe
cmp
or
pop
dec
mov
dec
push
or
mov
sub
and
dec
es
add
xor
ins
aam
inc
ins
cmp
push
add
pop
push
bound
pusha
ror
fidiv
xor
lods
bound
sub
xor
push
fs
outs
jb
mov
sub
loope
jns
inc
pop
push
nop
cmp
or
icebp
push
jo
inc
push
sahf
imul
xor
inc
mov
jbe
push
scas
cmps
dec
push
jne
sbb
jmp
pusha
clc
inc
jne
popa
jo
xor
sub
push
xor
es
rol
mov
mov
pop
mov
push
dec
sub
inc
imul
sbb
jo
dec
jp
push
into
push
jno
cmp
adc
dec
add
fidivr
push
fs
imul
in
push
cmp
call
inc
jo
jns
xor
rol
outs
sbb
push
adc
or
push
lods
xchg
rol
aam
dec
or
push
cmp
out
inc
adc
inc
sub
xchg
jmp
je
mov
fbld
les
dec
push
xor
xor
dec
popa
dec
mov
pusha
je
mov
jno
push
dec
jb
and
jo
sbb
dec
or
movs
mov
loopne
jb
adc
sub
xchg
jbe
push
clc
xchg
add
inc
dec
xor
out
arpl
popa
je
les
or
dec
cmp
or
add
pop
js
xchg
push
mov
push
push
push
outs
dec
push
add
xchg
ror
gs
jb
sub
test
dec
inc
add
stos
jo
mov
and
test
dec
dec
push
cmp
(bad)
pop
xor
imul
bound
mov
dec
mov
stos
add
pop
mov
sub
add
cmp
push
sbb
push
outs
enter
add
sub
add
dec
push
ficom
shr
dec
push
inc
jge
mov
jo
inc
xor
outs
dec
inc
fbld
ins
ror
ins
popa
push
push
inc
fs
jns
push
outs
(bad)
fs
cwde
adc
add
mov
bound
outs
ret
push
mov
loopne
fs
or
inc
icebp
dec
sar
push
arpl
fiadd
or
add
jo
adc
push
push
dec
jbe
inc
scas
push
dec
mov
outs
xor
xchg
mov
clc
push
les
cmp
xor
or
add
add
xor
mov
inc
xor
pop
dec
loopne
add
cmp
fcomp
cmp
inc
jp
cs
mov
xor
and
xchg
retf
je
cmp
ficomp
pusha
push
fdivrp
addr16
dec
push
dec
xchg
xchg
push
mov
shl
sbb
inc
popa
cmps
adc
ins
jne
cmp
cmps
dec
test
cmps
shl
nop
cwde
inc
push
outs
dec
cmp
or
mov
sub
adc
fisub
bound
fbld
mov
dec
dec
adc
pop
cmp
popa
pop
inc
and
je
pop
imul
push
arpl
mov
jne
dec
dec
scas
je
shl
arpl
push
in
push
push
push
sbb
or
shl
arpl
cld
xor
sub
mov
ss
ins
pop
das
clc
dec
jb
inc
push
add
bound
in
push
jp
cmp
imul
xor
stos
sbb
clc
popa
ins
dec
sbb
pusha
adc
push
mov
call
imul
js
bound
dec
dec
push
push
add
cwde
data16
fs
mov
dec
pop
lock
fcomp
dec
addr16
jno
xor
stos
xor
bound
mov
mov
mov
ins
pop
dec
xor
jg
xor
xor
je
pop
push
data16
mov
jb
arpl
fs
add
imul
out
xor
fiadd
ret
or
jns
mov
test
push
inc
dec
mov
mov
imul
inc
xor
outs
cld
fwait
inc
xor
mov
inc
arpl
inc
dec
push
push
xchg
test
js
xor
mov
add
arpl
stos
or
ficom
dec
xchg
inc
dec
cmp
push
inc
hlt
cmp
xor
ja
pusha
int
push
sub
or
push
dec
fs
inc
inc
sar
inc
pop
pop
dec
dec
inc
js
outs
(bad)
jbe
dec
mov
outs
push
inc
push
popa
add
push
xor
(bad)
popa
mov
fmul
retf
inc
inc
ds
dec
sbb
popf
add
inc
xor
jp
ins
mov
xlat
push
pop
jp
mov
stos
ret
xchg
js
sub
mov
push
jp
push
ins
scas
adc
je
(bad)
dec
add
jno
jne
js
xor
pop
and
add
xor
add
push
push
sub
push
pusha
stos
stos
push
bound
test
fiadd
inc
or
xor
rcr
ret
imul
fmul
ds
inc
jae
fmul
jbe
dec
loopne
outs
push
neg
bound
jae
dec
mov
cmp
data16
dec
pop
dec
js
leave
fs
test
into
fs
imul
adc
and
imul
imul
xor
ja
jmp
out
mov
mov
ja
js
rol
sbb
pusha
jb
ja
mov
fidivr
or
pusha
mov
xchg
movs
pop
retf
add
push
push
push
inc
aaa
sbb
loopne
and
adc
push
and
jne
jns
sar
shl
inc
xchg
imul
or
outs
push
push
or
pusha
mov
mov
dec
aam
outs
popa
aad
pop
fcom
mov
ja
add
mov
or
ins
dec
ins
ins
push
add
dec
and
push
add
test
test
test
cwde
cmp
stos
push
pop
push
mov
push
js
pusha
push
adc
ss
inc
xor
xlat
add
push
push
mov
dec
hlt
push
ss
cmp
loopne
push
xchg
xchg
(bad)
not
dec
jne
stos
mov
pop
and
daa
retf
aaa
xor
hlt
and
xchg
(bad)
scas
push
jb
push
jbe
dec
inc
and
test
pop
add
je
and
or
pusha
data16
loopne
xor
fsub
out
pop
fs
dec
push
push
loop
and
adc
ret
cld
pop
add
xchg
aam
arpl
jnp
and
js
and
loopne
mov
dec
inc
dec
xor
push
inc
add
retf
cmp
in
sub
push
xor
jp
dec
or
inc
and
fs
pop
mov
aaa
dec
or
jns
je
dec
push
int3
xchg
sbb
dec
jae
in
add
pushf
dec
xchg
add
push
ja
mov
bound
fs
jne
and
test
aam
data16
enter
jbe
js
sub
outs
data16
push
dec
clc
and
inc
cmp
adc
mov
inc
mul
das
xor
xor
xor
add
push
call
test
and
sub
gs
data16
movs
dec
ins
inc
ins
push
push
dec
dec
ss
ja
xor
dec
cwde
pop
push
cmp
dec
jp
imul
or
ss
outs
js
inc
push
xor
pusha
and
dec
dec
test
data16
push
loopne
push
loope
cmp
enter
fadd
inc
fs
sbb
dec
icebp
bound
out
pop
cmp
adc
push
xor
mov
inc
sub
inc
fs
in
movs
clc
ficomp
loopne
mov
jno
(bad)
push
aaa
ins
aaa
outs
push
or
xchg
push
bound
add
data16
inc
adc
fsubr
dec
inc
ins
ror
repnz
ss
js
add
les
ins
cmp
dec
xor
pop
or
jns
push
inc
mov
push
bound
inc
jp
fs
adc
lock
jo
je
dec
jns
xor
mov
and
jb
fs
add
push
lods
scas
js
mov
loope
imul
(bad)
dec
js
fistp
push
ss
ja
xor
inc
ja
dec
aaa
add
mov
inc
inc
mov
lods
add
les
shl
pop
mov
push
mov
fs
arpl
mov
dec
retf
imul
mov
push
hlt
inc
ins
inc
pop
cli
add
mov
inc
fisub
cs
inc
adc
pop
sub
mov
dec
imul
fcom
and
pop
jne
push
dec
ss
sub
jno
push
inc
ins
cs
dec
xchg
nop
cli
cmp
jns
cmp
jns
js
je
pop
jne
gs
ins
popa
xor
push
push
movs
stos
jo
cli
add
and
dec
or
mov
jo
add
xor
push
imul
pusha
scas
sub
(bad)
fs
mov
(bad)
push
push
xchg
mov
cmp
ror
mov
bound
dec
ins
stos
sbb
dec
xor
jmp
add
nop
gs
push
dec
scas
sub
add
outs
imul
inc
pop
test
xor
imul
inc
push
mov
jae
xor
addr16
mov
and
rcl
out
pop
push
adc
ins
push
scas
dec
aam
mov
arpl
mov
ja
push
outs
loop
inc
pop
outs
jne
test
pusha
push
adc
movs
ds
cld
cmps
add
and
dec
dec
jo
mov
ret
push
inc
shl
inc
inc
jo
and
aam
jb
push
push
mov
arpl
ja
inc
jbe
arpl
inc
dec
inc
fs
sub
sub
fs
js
mov
mov
pop
outs
xor
push
mov
not
dec
push
pop
test
xor
jbe
fwait
pop
test
push
mov
adc
inc
add
push
dec
cmp
mov
outs
imul
ja
or
ss
je
pop
cmp
cld
push
fs
js
inc
inc
and
dec
push
dec
push
inc
xor
sbb
push
jo
ins
dec
js
and
loope
arpl
je
pop
movs
ss
jb
mov
inc
push
mov
xor
adc
addr16
add
push
cmps
jp
aaa
adc
and
cmp
mov
fild
add
push
hlt
jb
inc
push
add
ins
push
push
xor
sahf
add
sub
into
inc
je
or
test
dec
fsub
and
fdiv
dec
lock
cld
imul
cmp
mov
dec
dec
and
sub
push
dec
inc
dec
push
fcomp
mov
outs
mov
inc
xchg
lods
dec
outs
fs
add
push
xor
js
ins
mov
clc
or
cmp
dec
fs
pop
inc
fisub
imul
jp
fisub
ss
js
scas
add
sub
dec
adc
mov
xor
call
pop
jns
fiadd
arpl
adc
adc
dec
scas
jbe
xor
or
fisttp
dec
push
ss
push
add
inc
mov
xor
in
rcl
out
inc
xchg
mov
call
rcr
push
jne
inc
mov
je
push
int
xchg
ins
sub
and
cmp
sbb
jp
push
jo
sub
sbb
push
arpl
inc
and
cld
outs
push
pop
dec
inc
bound
sar
outs
bound
add
mov
scas
push
arpl
mov
imul
xor
push
dec
add
add
dec
je
xlat
test
dec
cmp
pop
xor
outs
dec
and
jbe
xchg
add
in
fwait
sub
js
ja
dec
jl
inc
jo
jbe
xor
dec
inc
jb
inc
mov
retf
push
mov
mov
jae
pop
dec
xchg
xor
add
dec
inc
push
dec
push
jno
ins
push
outs
xor
je
push
outs
pop
dec
je
dec
xor
xor
add
push
push
popa
add
stos
aaa
dec
add
sub
xor
xchg
dec
lock
outs
jbe
cwde
retf
xor
and
mul
movs
xchg
add
mov
adc
ret
inc
jb
adc
or
xor
dec
xchg
sbb
add
gs
popa
dec
push
jae
dec
add
cmp
call
fs
cli
sub
lock
ss
dec
fisubr
es
inc
outs
push
xor
dec
ins
xor
adc
inc
push
int3
inc
xchg
retf
xchg
hlt
scas
outs
push
push
push
jo
push
pop
inc
inc
dec
ret
pop
pop
pop
xlat
call
imul
push
bound
sub
push
xor
inc
dec
jb
jge
xor
sbb
jp
inc
lods
ss
push
mov
dec
jne
js
jo
push
sub
nop
enter
lds
cmp
imul
push
pop
xor
outs
xor
icebp
mov
push
inc
jae
xchg
mov
jns
inc
aaa
mov
push
inc
sub
and
sub
push
xchg
les
xor
push
cwde
ja
inc
push
dec
cmp
or
mov
jns
mov
inc
aad
rol
or
fisub
loope
inc
push
sub
xor
sub
or
push
xchg
scas
pop
push
jb
test
je
stos
push
jecxz
dec
jp
inc
ins
push
xchg
dec
lock
jbe
jbe
xor
aad
lds
add
jns
xor
pop
hlt
fs
push
dec
ret
jno
mov
movs
call
sbb
jge
xor
dec
imul
int3
lds
out
fs
jbe
ror
and
jne
outs
inc
in
push
icebp
pop
cli
jo
js
outs
jae
aaa
push
cmps
jno
movs
inc
inc
fs
mov
cmp
pop
rol
push
dec
bound
stos
inc
pusha
loope
inc
cmp
inc
dec
in
push
add
dec
push
cmp
dec
push
imul
aaa
test
je
div
jae
hlt
test
cwde
test
mov
push
or
jo
dec
test
or
lods
mov
and
loop
inc
inc
js
add
inc
push
enter
mov
aaa
clc
ret
ins
and
mov
js
inc
neg
jb
add
mov
sub
cmps
adc
jp
sar
pushf
dec
mov
in
xchg
push
jbe
dec
xor
neg
or
hlt
imul
dec
outs
adc
push
add
xor
retf
arpl
xchg
push
inc
test
push
pop
test
sbb
pushf
adc
inc
push
xor
add
push
pop
test
push
xchg
fdiv
inc
and
jne
push
mov
bnd
add
ss
shr
push
adc
or
adc
pop
call
jae
xchg
hlt
dec
outs
mov
rcl
ja
push
inc
call
or
outs
(bad)
cld
je
jb
ins
cmp
aam
adc
inc
push
gs
pop
mov
mov
push
push
mov
mov
ja
jb
lds
xor
cmp
sbb
or
push
ss
inc
ja
bound
mov
dec
inc
xor
xchg
mov
dec
push
push
dec
ss
sub
(bad)
bound
ins
std
pop
mov
xor
js
ins
dec
outs
mov
xor
popa
ss
adc
cmp
push
mov
call
sbb
jp
push
dec
sahf
je
fs
mov
outs
pop
dec
xor
mov
inc
jno
push
cs
pop
push
or
jp
inc
push
cmp
adc
inc
inc
adc
in
dec
jp
inc
mov
cmp
dec
dec
xor
adc
aam
push
push
push
push
popa
js
dec
bound
cwde
ins
xor
test
cmp
es
and
mov
xor
mov
nop
lods
imul
pop
mov
aad
add
pushf
pop
inc
gs
sub
xor
mov
xor
outs
jg
sbb
arpl
inc
dec
push
dec
or
inc
outs
dec
xor
stos
add
xor
mov
popa
sbb
outs
mov
ins
loop
sub
pop
jne
jle
mov
test
arpl
xor
jo
dec
aaa
ins
aaa
or
int3
push
popa
dec
cmp
mov
loop
addr16
push
sub
aad
js
ja
push
cwde
sbb
sbb
dec
mov
sub
dec
js
retf
popa
sub
xor
inc
xor
dec
test
xor
inc
inc
je
bound
(bad)
fwait
inc
mov
xor
push
bound
or
mov
jbe
xor
pop
cmp
aaa
ss
cli
xor
push
mov
arpl
dec
dec
xor
inc
add
adc
xchg
jle
adc
pop
(bad)
bound
xor
dec
ja
fmul
outs
dec
inc
push
movs
xor
jae
lods
mov
cld
pop
js
push
inc
inc
fs
jns
push
xor
push
jmp
jbe
bound
dec
mov
pop
nop
push
fs
or
add
push
test
xchg
inc
cwde
dec
push
push
mov
inc
mov
movs
xchg
dec
stos
inc
jbe
addr16
dec
loopne
loopne
inc
inc
inc
push
mov
push
je
outs
push
push
bound
sub
dec
je
push
dec
imul
push
or
dec
sub
sbb
pop
lock
xor
outs
and
pop
dec
push
inc
jp
jecxz
push
push
mov
je
push
dec
inc
add
pop
pop
popa
mov
outs
push
imul
mov
jmp
fs
gs
xchg
jle
out
dec
inc
inc
xor
div
loopne
mov
jo
retf
aaa
bound
aaa
add
sbb
arpl
xchg
enter
xchg
jp
(bad)
and
dec
inc
call
pushf
aaa
jo
push
push
sub
push
mov
jns
arpl
inc
dec
or
mov
loopne
in
pop
fadd
outs
inc
fs
ss
test
add
or
jbe
shl
pop
jl
push
dec
gs
movs
shl
dec
js
dec
js
sub
outs
or
loopne
ins
adc
jae
call
bound
dec
ss
pushw
add
push
or
xlat
add
mov
pushf
jp
inc
inc
inc
xor
rcl
int3
loop
mov
mov
dec
ret
je
inc
jno
scas
mov
mov
aaa
ja
xchg
inc
data16
ret
inc
popa
xor
ja
jp
dec
sub
dec
aam
movs
imul
sub
arpl
or
int3
add
xor
outs
clc
gs
push
jbe
jno
jp
sbb
fdivr
ja
dec
es
jb
mov
jae
ja
pop
and
adc
mov
xor
popf
test
gs
dec
sbb
mov
cmp
xchg
dec
dec
inc
pop
push
jbe
push
pop
adc
xor
loope
lods
add
cwde
je
adc
jne
jmp
imul
jae
inc
push
push
dec
ins
push
jae
inc
ins
inc
inc
inc
jbe
popa
ins
loope
and
dec
outs
xor
push
adc
and
ret
ins
ror
sub
add
pusha
push
adc
mov
dec
pop
outs
inc
cmp
sub
push
sub
mov
jo
cwde
inc
fadd
xchg
add
jb
ins
sub
sbb
pusha
dec
adc
jne
inc
push
or
and
push
dec
js
jb
dec
mov
cmp
inc
bound
cld
pop
into
pop
push
inc
dec
push
dec
inc
dec
dec
ins
inc
aaa
add
ss
and
hlt
inc
jns
bound
call
dec
xor
and
stos
ss
js
dec
xor
push
adc
add
dec
cs
jae
push
dec
jne
mov
cmp
pop
push
push
jo
mov
pushf
gs
fistp
inc
push
push
and
addr16
jno
inc
mov
test
pop
dec
imul
imul
xchg
mov
push
xchg
jb
out
pop
push
and
pop
imul
jb
mov
sbb
std
sub
inc
jbe
cwde
inc
addr16
inc
inc
bound
or
icebp
mov
xor
push
inc
cmp
stos
mov
xchg
bound
push
loope
add
test
gs
inc
inc
shl
fild
lods
out
(bad)
pop
sub
ds
xor
es
jo
sub
and
xor
jo
push
jl
mov
ficom
adc
shl
inc
pop
jae
inc
dec
xor
je
dec
and
mov
dec
mov
jo
push
jmp
push
dec
ss
push
xor
pushf
movs
push
dec
mov
add
jl
push
adc
and
xchg
adc
or
adc
pop
or
jno
jp
scas
addr16
and
ja
bnd
xchg
adc
popa
dec
loop
movs
fs
add
ficom
dec
je
adc
mov
add
jp
addr16
add
cmps
adc
mov
bound
jb
add
dec
jne
add
or
and
ror
sub
lahf
inc
xor
jp
cld
ret
fwait
pop
ins
or
jo
sahf
dec
cmp
int3
shr
pop
inc
or
mov
push
ds
imul
dec
ret
jb
dec
sbb
mov
loope
call
outs
dec
loopne
jns
outs
pop
cmp
jno
adc
jo
sbb
push
pushf
cmps
(bad)
ins
je
sub
ss
dec
cmps
or
push
sub
jl
xor
les
mov
dec
xor
add
sub
pop
pop
pop
bound
imul
pop
inc
addr16
sbb
push
imul
icebp
aad
mov
mov
sbb
jns
jae
in
xor
push
pop
outs
adc
mov
cmp
inc
dec
dec
dec
push
adc
push
push
dec
push
push
pop
xor
pop
push
je
mov
dec
xor
mov
push
add
cld
in
inc
lods
outs
mov
inc
xor
sahf
push
jno
push
push
xor
mov
add
xchg
test
dec
pop
out
js
movs
pushf
cmp
dec
pop
popa
repnz
push
jmp
push
push
jns
inc
dec
arpl
dec
pop
popa
test
inc
sar
ins
xor
je
mov
out
jno
ss
pop
mov
push
outs
data16
js
xchg
adc
jae
cwde
mov
and
push
jae
inc
js
dec
shl
fsub
shr
retf
clc
push
ror
popa
cmp
ins
dec
inc
(bad)
sbb
mov
je
push
xchg
adc
jmp
xor
inc
jno
fwait
inc
mov
popa
sub
ja
jns
adc
push
inc
sbb
js
lock
xor
fs
aaa
push
add
imul
dec
loope
imul
addr16
data16
aaa
add
stos
js
push
outs
arpl
jo
stos
add
(bad)
jns
arpl
jae
sbb
or
ins
test
loopne
xor
cmps
in
popa
aaa
push
dec
mov
add
test
and
push
or
adc
gs
imul
add
ja
outs
cli
and
push
jo
dec
inc
adc
inc
jae
dec
inc
jno
loope
push
jbe
ins
jb
dec
push
jbe
or
jmp
or
aaa
int3
mov
push
dec
dec
dec
inc
test
mov
cwde
xor
xor
jne
outs
out
mov
imul
sub
mov
mov
out
rcr
retf
xor
fs
pop
dec
xor
ret
and
cmp
imul
add
stos
pop
les
addr16
push
inc
inc
push
inc
jb
dec
push
xor
pop
add
and
push
mov
cwde
inc
push
int3
and
jp
les
fcom
sbb
fs
inc
jp
pop
mov
mov
push
pushf
inc
mov
add
jbe
std
or
push
jb
jbe
dec
dec
inc
cmp
sar
dec
push
inc
dec
inc
and
sub
push
loopne
adc
dec
inc
inc
push
or
xor
and
adc
int3
pop
dec
push
or
mov
mov
and
test
dec
push
dec
mov
js
sbb
in
and
inc
outs
mov
nop
cmp
adc
pop
jle
ins
jno
jo
inc
inc
dec
add
xor
mov
inc
xor
pop
dec
movs
adc
mov
sbb
xor
sbb
dec
in
in
push
je
mov
movs
or
mov
es
add
and
shr
dec
push
test
and
or
pusha
pop
popa
pusha
inc
addr16
adc
dec
aad
push
cmp
ja
jns
push
and
dec
push
ins
jmp
mov
xor
mov
push
nop
mov
or
add
xor
jbe
dec
push
ss
cmp
cmp
outs
push
mov
mov
inc
data16
push
dec
je
add
mov
je
push
sub
jo
dec
add
(bad)
popa
cmp
push
cli
xchg
ficom
ins
push
jb
push
stos
cmp
test
push
loopne
gs
aam
mov
pop
ins
inc
add
dec
aam
inc
mov
ss
xchg
loopne
dec
nop
loop
push
ins
je
xchg
adc
test
out
and
jbe
jbe
mov
ins
sub
scas
pop
loope
mov
jb
outs
pushf
jo
inc
xor
inc
es
mov
pop
movs
fsub
cs
ins
xor
sub
outs
inc
ins
inc
pop
dec
inc
cmp
add
xor
pop
or
inc
or
dec
ins
xchg
aaa
mov
xor
push
outs
les
mov
push
dec
inc
adc
jp
xor
or
xor
data16
pop
push
adc
inc
push
inc
jg
jmp
xor
aaa
mov
fwait
loopne
mov
arpl
xor
inc
xor
jo
push
xor
xor
jno
ja
or
enter
and
jno
push
jne
aad
out
push
dec
addr16
cld
and
fs
arpl
ja
push
mov
bound
push
xor
or
sbb
sahf
mov
inc
hlt
ins
addr16
push
sbb
imul
sub
dec
push
cmp
push
cmp
dec
push
adc
pop
(bad)
xor
mov
pop
xor
inc
jbe
pop
jno
cdq
loop
sahf
inc
xor
jae
push
add
jo
shr
mov
push
sub
mov
add
adc
ins
scas
mov
dec
lods
retf
and
xor
pop
mov
or
add
push
cmp
fs
xchg
push
dec
je
adc
xor
push
push
push
mov
push
jb
inc
loopne
adc
sbb
adc
cmps
inc
dec
dec
out
mov
ret
fdiv
xchg
mov
imul
or
inc
xor
aaa
and
nop
je
xor
push
adc
retf
ins
pop
mov
inc
jp
inc
dec
cmp
xchg
inc
or
sbb
xchg
add
dec
mov
bound
xor
dec
mov
(bad)
push
outs
inc
inc
inc
push
sub
jno
add
push
jp
push
ja
in
xchg
popf
push
sbb
add
aaa
cmp
pop
ins
xchg
cmp
inc
mov
popa
xor
mov
pop
adc
jo
imul
fsub
fcmovb
pop
xor
cmps
pop
jp
mov
add
pop
ret
inc
mov
or
adc
push
inc
adc
pop
cmp
ss
icebp
ja
sub
imul
or
sbb
xor
imul
loop
fcom
or
dec
outs
xor
cmp
popa
push
adc
dec
push
dec
pop
ins
xchg
jmp
cmp
dec
push
icebp
push
data16
sbb
or
je
inc
dec
mov
dec
mov
push
ins
push
jne
bound
push
js
push
sahf
pop
dec
shl
in
inc
dec
inc
add
jo
sbb
std
push
outs
xor
pop
fs
xor
dec
je
and
xchg
lock
popa
xor
push
arpl
cwde
faddp
adc
jb
pop
inc
adc
ins
mov
ins
mov
jp
cwde
(bad)
das
pop
inc
imul
push
jae
push
cmp
adc
sbb
fwait
adc
sub
sbb
add
cmps
jp
outs
jns
je
push
scas
dec
sub
push
push
(bad)
mov
sahf
add
imul
rol
mov
xchg
cmp
pop
jo
fbld
ins
inc
jns
stos
and
push
mov
mov
(bad)
inc
gs
push
or
add
dec
dec
fimul
retf
mov
inc
jns
or
inc
add
dec
add
sub
jne
dec
inc
pusha
adc
call
cli
ins
push
jbe
outs
xor
push
test
push
jb
ret
add
cmp
call
int3
inc
loop
cs
inc
dec
xor
inc
sub
sbb
adc
imul
push
push
sbb
mov
push
jb
jg
hlt
rcr
push
je
ja
push
push
outs
js
bound
outs
jno
adc
push
(bad)
dec
dec
xor
xor
add
cwde
data16
add
xchg
xor
pop
(bad)
pop
push
inc
push
outs
les
imul
xor
inc
push
lods
loopne
bound
push
je
outs
ins
gs
ret
sub
hlt
push
push
dec
cmp
imul
push
push
ins
js
in
push
or
xor
adc
push
xor
inc
jmp
ins
pop
inc
inc
cmp
dec
or
jb
sbb
js
jb
inc
adc
and
popa
out
and
inc
test
jb
call
or
jne
aaa
sahf
inc
mov
xor
fld
jl
push
dec
cmp
jo
popa
push
inc
test
jp
adc
pop
cmp
inc
pop
dec
mov
adc
scas
inc
adc
add
xor
push
cmp
inc
push
scas
data16
dec
mov
push
ins
inc
bound
pop
ss
inc
inc
push
adc
(bad)
push
xor
fs
imul
xchg
push
inc
ins
mov
push
inc
dec
ss
jb
xchg
dec
and
inc
pop
jo
push
inc
movs
pop
inc
push
cmps
adc
lock
gs
sbb
rcr
add
xor
xor
xor
adc
and
push
cmps
lods
push
dec
out
fidiv
ss
dec
adc
jmp
dec
cmp
add
mov
jb
push
dec
outs
outs
dec
inc
test
inc
sub
add
in
dec
cwde
dec
dec
push
xor
scas
push
jno
dec
mov
add
jae
or
inc
hlt
ins
and
dec
mov
jbe
je
aaa
dec
aaa
mov
loopne
js
(bad)
push
sub
out
push
ss
bound
dec
imul
mov
xor
jne
mov
adc
not
inc
loopne
mov
hlt
pop
pop
bound
inc
mov
outs
adc
push
jne
imul
cmp
push
push
xor
dec
jbe
ins
inc
and
add
js
out
push
inc
data16
add
dec
rcr
ss
jb
jns
inc
data16
jne
bound
ss
ss
stos
dec
mov
dec
push
adc
cwde
inc
repnz
and
bound
popa
rol
addr16
cmp
push
je
xor
pop
mov
xor
add
cmp
dec
push
fdiv
(bad)
dec
mov
out
push
inc
push
jno
push
xor
mov
jne
or
shl
push
jp
retf
jns
and
or
dec
xchg
les
fcom
cmp
fs
jbe
imul
ins
pop
push
push
inc
xor
adc
out
add
adc
push
inc
imul
push
push
mov
lods
add
sub
mov
aaa
and
arpl
hlt
dec
mov
dec
xor
ds
enter
ret
jo
sbb
sbb
jb
or
and
scas
inc
imul
push
xor
jb
js
and
cli
push
dec
xor
inc
jp
icebp
cmp
push
xchg
jne
inc
mov
xor
dec
fsub
sahf
imul
pop
inc
push
mov
gs
push
js
movs
bound
or
fs
sahf
outs
jne
dec
inc
or
push
pop
retf
imul
adc
or
mov
imul
xor
inc
imul
mov
cli
mov
into
jno
xor
outs
arpl
xor
es
sbb
inc
add
js
sub
add
inc
and
mov
dec
jae
jne
dec
outs
fs
cmp
add
cmp
dec
inc
imul
sbb
push
jno
push
inc
or
inc
fdiv
push
fs
call
ret
inc
inc
push
scas
push
js
mov
add
inc
(bad)
xor
push
push
add
jae
fcomp
mov
cmp
push
jne
inc
sbb
dec
cmps
or
dec
inc
mov
dec
cmp
mov
inc
ins
dec
dec
les
push
je
push
dec
js
mov
mov
or
jp
retf
jo
dec
lods
inc
pop
cmps
dec
or
jb
adc
cmps
push
push
imul
push
je
pop
or
inc
inc
bound
push
inc
aam
mov
add
push
dec
sbb
in
pop
mov
push
sub
inc
jae
imul
ins
adc
inc
sub
fidiv
jae
inc
xor
or
bound
ins
push
mov
pushf
addr16
and
or
dec
xchg
xchg
fist
dec
jle
push
push
jo
push
pop
fimul
lds
shl
shr
jns
or
icebp
stos
add
jo
push
jo
fs
push
adc
xor
adc
loopne
push
jbe
pop
push
(bad)
dec
cmc
xchg
inc
int3
xchg
jo
ja
adc
and
jle
js
push
push
jb
nop
popa
lods
fwait
sbb
stos
rol
push
or
arpl
xlat
dec
or
arpl
popaw
push
int3
add
outs
lods
mov
adc
xor
xor
jo
fcom
push
cmp
xor
js
je
push
mov
and
pusha
sbb
call
fcmovu
scas
add
mov
(bad)
int3
push
arpl
xor
dec
sub
bound
push
movs
mov
data16
inc
jle
push
rol
pushf
ss
out
ja
dec
and
push
mov
xor
ds
push
fs
movs
in
cmp
jbe
dec
ins
inc
cwde
inc
loopne
call
fsub
imul
mov
addr16
mov
addr16
jb
lock
push
push
je
xor
into
outs
push
xor
lods
mov
jle
xchg
mov
clc
mov
add
xchg
xchg
add
adc
pop
add
dec
imul
pop
into
test
xor
xchg
ret
ret
add
ja
xor
inc
mov
or
push
sub
outs
xor
mov
dec
inc
data16
dec
addr16
pop
xor
mov
hlt
les
jno
aaa
sub
fisttp
je
jl
ins
data16
adc
and
lock
or
lods
inc
push
push
inc
dec
xor
push
inc
pusha
dec
lock
sar
push
xor
jle
inc
movs
dec
jbe
push
add
and
mov
into
popf
add
out
cmps
jns
arpl
push
imul
dec
js
xchg
push
fsubr
hlt
mov
scas
jb
sub
jne
push
outs
inc
pusha
bound
mov
sbb
lahf
ja
push
ja
retf
not
mov
int
inc
add
in
mov
push
sbb
inc
enter
sub
call
cmp
push
shr
dec
jp
or
sbb
shl
imul
inc
fs
je
fiadd
xor
jp
xor
jno
jno
mov
sahf
dec
push
inc
push
arpl
pusha
imul
dec
jb
dec
push
inc
push
adc
xor
dec
out
inc
dec
aaa
xor
ja
inc
hlt
cmp
gs
call
pop
push
xor
shr
mov
jo
bound
imul
push
inc
jae
jne
mov
cs
dec
cmc
mov
dec
add
xor
push
xor
push
jo
push
aaa
push
inc
rcl
jno
cmp
mov
popa
push
inc
xor
pop
loop
xor
pop
xor
in
outs
js
dec
ins
xchg
cwde
push
pop
push
jne
push
fs
jne
dec
adc
jmp
fdivr
fwait
or
js
inc
xor
js
dec
push
ins
inc
cmps
mov
sahf
jbe
mov
in
sbb
push
daa
push
rol
or
fistp
push
jne
arpl
adc
mov
push
lods
push
jno
outs
or
adc
outs
push
inc
add
and
rcr
mov
ja
addr16
dec
inc
dec
adc
mov
add
push
inc
jae
je
push
rcr
or
je
mov
mov
pop
dec
pop
push
cs
cs
sbb
adc
pop
fadd
mov
ds
imul
push
jae
sub
hlt
push
sub
ins
imul
mov
push
je
pop
dec
cmp
dec
and
dec
xchg
and
fsubr
push
mov
inc
pop
jb
inc
mov
inc
int3
mov
push
sar
add
jae
inc
stos
adc
rcl
dec
int3
dec
ds
jbe
fwait
sub
cmp
test
dec
inc
jp
xor
daa
sub
inc
xor
adc
jb
cmp
aaa
pop
mov
pop
gs
mov
push
dec
jae
call
xor
ins
inc
jo
test
fwait
sub
dec
xor
inc
dec
je
fs
xchg
clc
aaa
lods
or
inc
jbe
popa
xor
dec
arpl
xor
xor
dec
xchg
add
sub
lods
add
adc
mov
data16
sub
mov
xor
aaa
dec
jbe
and
xor
sub
add
add
dec
dec
aaa
dec
data16
push
imul
and
jb
fwait
lea
xchg
add
retf
and
xor
inc
jp
dec
add
push
jp
js
mov
outs
fcom
adc
outs
cs
cmp
pop
pop
mov
sbb
and
mov
mov
outs
bound
fs
jno
jp
inc
sub
push
jno
push
sbb
fsub
bound
dec
pusha
add
xor
xor
xor
(bad)
cmp
sbb
cmps
cli
push
je
aam
retf
inc
sub
(bad)
xchg
add
pop
imul
xor
dec
test
or
inc
aaa
mov
nop
jne
and
add
rol
jbe
mov
dec
jb
sub
push
and
and
fdiv
mov
sbb
aaa
mov
retf
in
mov
ja
jp
mov
add
mov
push
and
bound
call
imul
loopne
mov
popa
push
jb
xor
popa
xor
test
cs
xchg
in
push
sbb
shr
push
push
dec
dec
outs
add
call
fbstp
int3
dec
xor
inc
cmp
loope
pop
lea
outs
xchg
imul
xor
jmp
jl
jp
adc
jmp
call
ins
add
or
mov
add
inc
xor
xor
mov
jbe
dec
outs
mov
jbe
push
inc
pop
ror
pushf
inc
add
ins
dec
pop
dec
add
sbb
jbe
xor
or
xor
sbb
inc
xchg
ret
sbb
addr16
inc
push
daa
add
imul
dec
push
jno
jbe
(bad)
push
dec
outs
shl
jae
xor
push
jb
or
inc
loopne
rol
sbb
dec
inc
push
popa
inc
aam
rol
or
xor
cmp
inc
sub
loopne
ss
xor
cld
cmps
ja
inc
cmp
out
imul
push
sbb
sub
pop
sbb
jb
ds
and
nop
test
imul
push
add
xchg
lock
add
fs
shr
or
js
outs
pop
cmp
xchg
test
(bad)
push
dec
adc
imul
cli
pop
imul
pop
mov
jb
in
jp
inc
add
inc
cmp
shl
mov
xor
inc
push
aaa
push
push
jns
bound
jns
push
sbb
dec
push
xor
add
es
dec
shr
push
push
xchg
xor
pop
pop
xor
inc
cs
sbb
cwde
or
test
mov
cmp
ins
ret
add
and
adc
xor
push
xor
add
push
xor
test
jae
rol
lock
dec
or
pop
push
ret
dec
inc
xchg
cmp
retf
jp
push
dec
mov
jp
inc
inc
mov
xchg
ss
add
loope
dec
outs
xor
or
mov
xor
xor
push
shl
cwde
inc
inc
xor
pusha
inc
add
dec
arpl
inc
or
xchg
ins
xchg
outs
mov
cmp
scas
nop
arpl
data16
push
or
mov
push
bound
inc
adc
cmp
test
rol
adc
jne
adc
jbe
ins
pusha
or
xchg
nop
in
jbe
sbb
push
sub
fimul
fs
push
mov
js
dec
ins
test
call
ret
mov
(bad)
mov
jbe
inc
inc
dec
cld
mov
inc
arpl
xor
ins
cmp
fdiv
test
int3
push
es
inc
jp
mov
aaa
jbe
fwait
sbb
mov
aaa
mov
outs
outs
and
xor
fs
mov
bound
cmp
fistp
add
mov
dec
pop
mov
push
jae
jo
mov
xor
push
repnz
jbe
outs
push
inc
in
rcr
push
dec
pusha
pop
mov
not
dec
dec
mov
inc
retf
sbb
inc
xchg
fidiv
xchg
popa
push
dec
jb
add
aaa
inc
(bad)
pop
js
inc
dec
and
or
ss
es
and
dec
inc
push
sub
push
retf
aaa
inc
push
fcomp
inc
jns
inc
bound
inc
push
loope
test
push
adc
push
lds
(bad)
push
sbb
add
cmp
ins
mov
and
arpl
data16
jl
dec
jmp
jae
cmp
sbb
and
sub
push
int3
inc
jg
loope
retf
cmp
inc
jo
dec
xor
mov
test
arpl
pusha
jae
ja
push
adc
addr16
ins
outs
mov
dec
fisub
push
ret
imul
adc
or
ins
mov
jmp
push
out
mov
pop
dec
push
cmps
jp
ins
or
shl
inc
xchg
js
push
xchg
add
jmp
mov
pop
adc
outs
repnz
je
jne
jb
fs
pop
inc
dec
dec
dec
(bad)
lock
sub
xor
dec
jae
inc
xor
sbb
inc
js
push
in
jmp
inc
bound
pop
clc
aaa
push
jp
push
jb
ins
outs
jno
cmp
into
dec
inc
inc
or
sbb
push
sbb
push
fmul
gs
je
inc
pop
dec
dec
pop
mov
add
rol
sbb
push
dec
inc
mov
sbb
dec
je
jo
mov
jb
arpl
(bad)
aad
(bad)
mov
jbe
push
aaa
dec
push
jbe
cmp
add
leave
stos
adc
mov
pop
sbb
inc
sub
push
ret
xchg
rol
inc
pop
inc
aaa
mov
fsubr
jne
jp
ins
fisub
inc
loope
or
fcom
dec
xor
nop
push
arpl
push
in
xor
dec
push
in
push
pop
xor
jbe
ins
ss
xchg
push
pop
push
inc
push
test
es
push
dec
dec
push
dec
or
adc
jae
bound
or
ins
ja
pop
inc
je
inc
push
push
sbb
int
adc
cmps
outs
xor
or
aam
and
js
adc
cmp
xor
enter
xor
pop
fidivr
mov
jae
inc
jbe
lods
fmul
cli
dec
push
inc
jne
imul
nop
popa
xor
xor
add
mov
dec
xor
xchg
xchg
inc
test
out
sub
cmp
jo
popa
fisub
xchg
les
enter
pusha
adc
pop
sar
imul
pop
outs
adc
jbe
inc
jb
xor
inc
dec
push
xor
sbb
push
cli
dec
dec
push
jbe
mov
into
js
popf
ror
dec
push
hlt
bound
int3
mov
xchg
enter
dec
inc
mov
cmp
pop
mov
int3
outs
cmp
outs
mov
xchg
and
cmp
push
fidivr
outs
xor
ins
jb
or
sbb
aad
and
dec
dec
fs
loopne
loopne
imul
dec
jbe
js
dec
jmp
push
push
pop
and
aaa
jmp
jp
push
push
clc
push
mov
push
dec
jbe
fisubr
dec
push
arpl
gs
inc
cmp
xor
dec
mov
ret
push
xchg
jo
jne
hlt
push
dec
push
add
add
mov
jns
or
dec
and
mov
push
int3
xor
clc
dec
bound
inc
adc
bound
push
shl
inc
jbe
out
hlt
int
shl
push
xor
dec
outs
outs
push
xor
in
je
inc
js
cs
sbb
test
je
cs
pop
jns
xor
ins
jns
push
xor
imul
je
cmps
pusha
mov
sbb
xor
push
adc
push
dec
ins
rol
retf
jp
push
pop
ins
shl
test
test
dec
mov
fld
mov
(bad)
fs
adc
fs
or
or
je
adc
dec
push
push
mov
mov
jno
mov
push
lds
push
mov
and
imul
pop
mov
outs
inc
in
push
je
inc
imul
shr
les
mov
push
dec
loopne
add
push
mov
sahf
push
jns
outs
ins
xor
inc
imul
arpl
ins
cmp
push
pop
bnd
pop
push
jo
ficom
jo
dec
loope
scas
mov
xor
popa
hlt
addr16
push
sbb
and
dec
inc
dec
cmp
push
cwde
jp
push
xor
daa
and
pop
jo
js
data16
test
and
stos
and
cmp
ja
xor
push
imul
inc
loope
js
pop
fidivr
push
sbb
shl
imul
inc
repz
js
xor
clc
dec
xor
sub
push
add
dec
addr16
pop
push
aad
xor
xor
scas
sub
sbb
ja
xor
loopne
add
js
push
xor
pushf
inc
inc
inc
and
push
inc
pop
push
mov
push
inc
inc
sub
ret
inc
jno
arpl
inc
and
ja
or
pop
imul
push
xor
xchg
push
fidiv
inc
ins
inc
push
add
push
ss
movs
sub
jne
inc
pusha
lods
adc
jne
or
ins
inc
sbb
xor
and
js
dec
xor
aam
xor
aam
jb
push
jb
add
fild
dec
test
lock
mov
cmp
inc
inc
and
and
rol
mov
jne
repnz
data16
sub
loope
mov
dec
push
popa
shl
xchg
shl
gs
mov
dec
jb
rcl
call
inc
push
pop
or
ja
cli
adc
call
xor
add
and
fcom
jns
mov
sbb
gs
pusha
push
and
push
retf
test
mov
(bad)
adc
and
outs
lods
vmovups
push
add
push
dec
xor
dec
arpl
ins
sub
jle
pop
in
test
push
sub
jle
push
imul
push
je
data16
jl
push
ins
pop
adc
dec
dec
cmp
jno
mov
add
xor
inc
push
adc
push
push
push
sbb
out
jno
cmp
(bad)
mov
jns
or
push
sub
push
xchg
dec
push
cmp
mov
xor
std
xchg
push
jb
xor
jo
push
sbb
pusha
ins
pop
das
mov
cmp
mov
ins
fst
sub
sbb
mov
ss
xchg
add
js
lods
outs
push
xchg
dec
pop
inc
inc
mov
push
and
sbb
fisub
xor
push
push
inc
cmp
xor
fs
push
and
inc
mov
push
jp
fidiv
int
dec
cmp
mov
mov
add
push
xor
inc
loop
xchg
(bad)
je
(bad)
pop
dec
inc
outs
dec
data16
aaa
ss
dec
jne
push
dec
jo
dec
gs
jae
mov
jp
add
inc
sbb
rcr
fs
sub
sub
ss
cs
add
mul
aaa
arpl
ret
dec
(bad)
add
inc
repnz
mov
jmp
jo
or
imul
aaa
dec
data16
pop
cs
xor
mov
stos
jae
sub
inc
clc
or
call
pop
dec
dec
fcom
jb
cmp
dec
mov
mov
xor
sbb
dec
bound
call
pop
loope
ins
mov
loopne
jo
add
imul
fs
ss
sub
mov
dec
push
ins
dec
jno
jae
push
hlt
and
dec
leave
and
add
fisubr
inc
mov
(bad)
jo
inc
js
adc
jbe
inc
rcl
bound
sbb
inc
pop
imul
mov
push
adc
pop
int3
dec
arpl
mov
dec
push
sahf
xor
ins
ja
hlt
popa
sbb
jns
(bad)
fiadd
js
dec
mov
or
fsubr
ins
dec
dec
(bad)
enter
mov
push
adc
loopne
push
push
mov
or
imul
or
dec
add
inc
arpl
cmp
hlt
inc
(bad)
jp
lock
fidiv
popa
mov
add
xchg
dec
or
test
push
inc
sbb
ret
add
cli
dec
inc
dec
add
outs
inc
jbe
jo
jns
or
mov
je
sbb
sbb
nop
arpl
(bad)
and
push
cmps
push
outs
dec
push
add
xor
ror
adc
jo
aam
adc
je
or
pop
pop
dec
sub
cmp
xor
sub
ins
sub
xor
aaa
ds
inc
dec
hlt
jmp
jp
retf
xor
xchg
or
push
mov
push
xchg
and
add
pusha
dec
cs
inc
int
jg
xor
xor
jno
mov
mov
aaa
test
inc
test
xor
test
inc
xor
xor
inc
jae
jb
push
lock
test
fs
clc
popa
xor
and
jns
and
dec
sub
movs
sub
bound
xor
inc
push
sub
(bad)
gs
fs
xor
jne
fsubr
jmp
adc
(bad)
or
les
ss
inc
push
push
adc
inc
dec
cmp
ss
ins
dec
push
push
push
sahf
js
int3
ror
(bad)
dec
push
xchg
adc
add
cmp
shl
add
dec
shl
inc
add
rcl
jne
push
pop
sub
jo
sub
imul
imul
and
jp
fs
xor
pop
sahf
jp
mul
push
dec
int3
add
ins
jb
data16
adc
fidivr
movs
sub
jne
inc
xchg
add
and
je
ins
push
out
and
bound
add
mov
dec
dec
push
jp
loopne
and
arpl
or
push
jb
push
inc
push
push
jne
sub
arpl
arpl
dec
mov
or
ins
xor
cli
push
cmp
push
mov
xor
lea
popa
popaw
mov
xor
inc
push
inc
mov
ja
inc
(bad)
in
push
inc
inc
xor
dec
push
xor
or
(bad)
ss
shr
inc
inc
inc
inc
jae
scas
jne
dec
mov
push
sbb
sbb
push
dec
inc
xchg
test
or
dec
or
push
or
sub
ss
ror
sub
push
call
or
xor
ins
xor
loopne
ss
imul
push
mov
and
xor
sub
scas
pushf
ja
clc
fucomip
push
bound
jno
xor
pop
jo
jbe
mov
mov
push
jnp
shr
ss
inc
dec
jbe
and
xchg
call
ins
push
sub
fsubr
(bad)
ja
cmp
outs
inc
xor
push
js
mov
push
push
xor
dec
xchg
movs
push
push
bound
mov
push
mov
(bad)
push
or
stos
arpl
js
jae
sbb
scas
cli
arpl
test
jbe
imul
cs
push
cli
dec
les
cmps
dec
pop
cmp
mov
xor
shl
mov
js
push
dec
mov
cmp
inc
xor
xchg
jno
sub
jae
mov
bound
aaa
jns
dec
dec
jbe
cmc
push
sub
dec
gs
inc
push
xor
ss
dec
shl
cdq
retf
(bad)
jo
and
mov
push
mov
inc
inc
fs
xchg
xor
push
sbb
ja
lock
inc
inc
movs
mov
xchg
hlt
push
cmp
cs
inc
les
push
icebp
pop
dec
lock
imul
push
enter
add
push
into
dec
adc
mov
mov
jno
xchg
inc
pusha
xor
bound
loopne
inc
push
sbb
mov
xchg
inc
mov
mov
fadd
lock
push
dec
add
sub
jp
push
cmp
cs
push
xor
shr
js
scas
and
add
outs
outs
push
dec
push
inc
xor
pop
ret
cwde
push
jno
test
movs
add
ss
gs
cmp
movs
je
add
xchg
fs
call
cmp
push
clc
jo
push
dec
xchg
les
(bad)
dec
ins
xor
sub
or
adc
or
push
in
jle
push
scas
push
sub
xor
call
xor
les
push
xor
push
stos
dec
cmp
push
rcl
jle
jno
push
push
xchg
push
test
fisub
jne
mov
ins
inc
inc
stos
push
inc
xor
cmps
loopne
shr
mov
clc
in
adc
add
adc
xchg
mul
inc
push
les
add
push
in
xor
ss
inc
sub
sub
addr16
cld
xor
loop
push
ins
dec
call
push
push
dec
inc
cmp
lods
xchg
mov
jmp
cmp
mov
mul
pop
inc
shl
xor
jo
dec
jp
js
xchg
ins
push
adc
push
dec
xor
into
xor
arpl
inc
fwait
sbb
fimul
inc
inc
xchg
adc
jne
fisubr
lods
scas
jb
sub
push
aam
cmp
test
or
inc
cmp
push
jb
sub
sub
sub
jmp
into
sbb
push
or
ss
ins
outs
and
scas
mov
adc
mov
or
icebp
mov
push
dec
inc
(bad)
bound
add
inc
sbb
ror
call
or
jo
xor
push
push
cld
data16
and
inc
push
xor
retf
xor
fdivr
jo
dec
ret
dec
and
push
push
push
add
pop
push
ja
jbe
jno
push
push
sbb
mov
es
jb
inc
test
adc
push
or
arpl
movs
pop
popf
jb
ss
xor
mov
adc
or
ins
jp
mov
add
adc
lods
push
add
sbb
imul
aaa
inc
inc
js
push
sbb
dec
push
push
mov
cmp
inc
push
gs
sbb
outs
jae
cmp
sub
jo
gs
mov
push
inc
inc
push
cmp
je
push
add
dec
jo
push
xor
xchg
push
das
das
ja
fnsave
gs
jae
call
cmp
pop
outs
aaa
and
(bad)
mov
lock
jbe
push
pusha
jo
js
outs
dec
jbe
jno
add
push
push
jp
add
popa
xchg
inc
dec
rcl
or
scas
and
sbb
ret
mov
fsub
mov
jb
out
aaa
add
outs
es
imul
pop
popa
mov
dec
inc
imul
pop
movs
push
mov
fiadd
push
imul
push
es
(bad)
cmp
push
outs
push
adc
dec
dec
cmp
inc
pusha
xchg
js
inc
add
dec
xor
pusha
push
shl
jo
jb
test
movs
ss
cli
or
push
or
outs
push
je
push
test
mov
dec
jne
jae
mov
(bad)
inc
dec
loop
inc
outs
in
xor
dec
ins
push
imul
add
je
push
jmp
xchg
retf
mov
jo
inc
test
sub
aad
add
fs
dec
pop
jb
jo
xor
add
or
outs
push
dec
adc
inc
jo
push
imul
or
add
push
push
imul
and
xor
add
dec
bound
imul
push
sub
cli
dec
imul
test
and
and
jbe
xor
or
les
and
les
inc
pop
dec
and
dec
je
and
ss
mov
push
dec
inc
(bad)
gs
scas
rol
add
je
imul
inc
ins
xor
jo
xor
adc
jbe
jp
xchg
ret
push
ss
gs
inc
pusha
ins
sub
movs
int3
shr
rcl
push
inc
push
jo
or
fcomp
fnstenv
jbe
xor
push
xor
xor
or
adc
dec
cmp
push
push
pop
or
jmp
cld
add
movs
add
sub
arpl
dec
push
mov
push
mov
xor
imul
ins
data16
js
cmp
stos
jb
dec
pop
mov
cmp
dec
xor
test
xor
pusha
outs
inc
pop
ins
mov
int3
mov
ins
and
test
dec
(bad)
loopne
xor
jb
out
jbe
jbe
xor
xchg
in
dec
inc
push
aaa
push
push
js
or
xor
std
ja
push
bound
addr16
inc
dec
push
dec
push
or
dec
dec
push
xor
outs
push
add
xor
xor
push
dec
movs
in
dec
mov
ret
fbld
cmp
jp
les
xor
jae
fwait
xchg
push
push
imul
push
push
dec
push
xchg
mov
pop
mov
fs
pop
je
jbe
inc
jbe
xor
push
mov
add
ja
add
test
push
call
xchg
dec
ins
jno
popa
test
aaa
test
arpl
ins
int3
xor
adc
mov
mov
or
outs
pop
scas
push
adc
cmp
es
or
add
push
jno
jae
dec
inc
jne
jbe
ret
lods
pusha
xor
mov
xor
xchg
fcom
mov
jne
xor
push
popa
lock
pop
and
dec
aaa
popa
loopne
push
js
push
dec
add
int3
dec
fcomp
shr
jo
jo
xchg
loop
add
pop
aaa
cwde
dec
push
add
add
aaa
cmp
push
xor
dec
ss
inc
test
cwde
jo
and
push
xor
retf
fst
or
cmps
jb
jae
push
jo
clc
out
je
add
data16
xchg
pusha
adc
mov
inc
fs
xchg
gs
ins
loop
dec
inc
outs
inc
inc
inc
inc
out
push
sbb
push
jno
or
jne
cmp
or
addr16
xor
popa
xchg
outs
xchg
popa
ss
dec
jbe
mov
in
adc
mov
mov
inc
jns
push
pop
xor
push
cmp
dec
mov
daa
add
lods
push
bound
scas
pop
ins
sbb
jb
inc
dec
adc
sub
inc
cld
sbb
dec
sub
inc
jae
gs
push
pop
test
mov
cli
aam
out
add
bound
inc
push
xor
ins
mov
in
push
pop
(bad)
clc
je
inc
push
xor
clc
fs
push
push
pop
fs
imul
inc
gs
adc
push
xor
jno
and
mov
in
clc
ja
ins
mov
and
imul
mov
bound
stos
pop
ss
inc
inc
dec
mov
dec
bound
inc
xor
pop
push
inc
sub
in
xchg
sbb
ins
clc
jae
cmc
stos
out
mov
cmps
arpl
inc
push
fistp
call
push
pop
fidiv
fs
sub
dec
push
dec
hlt
and
test
bound
jb
inc
cwde
or
dec
inc
outs
mov
sub
xor
fisub
adc
loopne
push
sbb
in
outs
push
dec
sbb
jl
ret
mov
popa
inc
pusha
mov
ss
dec
jp
push
dec
sub
dec
push
inc
xchg
mov
fld
mov
jp
xor
jp
call
push
inc
mov
or
mov
(bad)
dec
cli
mov
xor
sbb
ins
outs
push
jne
xor
push
push
pop
inc
xor
dec
xlat
ja
inc
div
add
mov
pop
jb
fst
les
scas
retf
rcr
stos
fist
outs
out
outs
outs
inc
dec
inc
pop
dec
sti
ss
cmp
jp
push
in
(bad)
mov
sbb
fwait
xchg
add
push
inc
fisttp
sbb
repnz
add
lods
gs
rcl
jbe
mov
dec
push
inc
cwde
jle
add
es
ins
inc
jb
xor
sub
pop
out
inc
imul
and
je
push
ror
in
gs
outs
cs
dec
ins
jp
test
add
push
ja
or
ja
je
push
dec
dec
dec
lock
bound
push
jp
test
push
imul
xor
sub
scas
inc
cs
xor
and
ins
xor
xor
jle
push
ins
scas
aam
mov
push
imul
ss
js
xor
add
xchg
dec
fsub
stos
pop
mov
ja
rol
or
and
cmp
cmp
and
leave
imul
push
push
jae
ss
pusha
pusha
push
ins
jbe
je
mov
inc
sbb
adc
fidiv
cs
shr
loopne
dec
outs
xor
push
adc
and
inc
scas
out
jp
sub
push
js
push
dec
push
jl
aad
sbb
jb
fs
bound
push
push
push
ss
mov
dec
jmp
xor
push
jae
inc
xor
push
ins
inc
(bad)
inc
push
xor
sahf
test
out
outs
dec
xchg
loope
push
xor
push
ja
jae
test
aam
pushf
je
jbe
inc
inc
imul
call
dec
xchg
int3
ss
mov
mov
push
outs
test
mov
inc
jmp
xor
sbb
jb
xor
addr16
inc
arpl
adc
mov
cwde
ja
inc
rcl
fdiv
imul
ret
dec
fs
je
or
inc
retf
inc
jo
push
adc
adc
dec
stos
fs
ins
inc
inc
into
cmp
and
mov
test
push
jo
call
add
dec
and
xor
lods
push
inc
dec
add
sub
mov
loope
cmp
inc
mov
jno
out
jo
cmps
pop
or
test
mov
inc
xchg
jbe
dec
dec
xchg
jle
cmp
pop
dec
jae
es
(bad)
in
push
popa
jns
dec
addr16
test
push
not
mov
push
jb
dec
jp
and
loop
in
sar
sbb
xor
mov
ja
popa
push
imul
(bad)
loop
outs
jo
ds
jb
inc
dec
inc
jae
inc
push
dec
pop
push
mov
stos
inc
jae
push
fcomp
cmps
mov
data16
push
inc
sub
je
jo
stos
jmp
aaa
mov
jns
cli
dec
lock
xor
inc
pop
or
mov
inc
xchg
cmp
aaa
and
jae
ret
js
xchg
bound
xchg
out
mov
jns
dec
ins
jbe
fwait
leave
stos
les
mov
popa
xor
je
imul
add
and
inc
pop
inc
dec
push
inc
push
mov
and
push
dec
dec
inc
jp
add
push
cmp
push
loop
ficom
loope
inc
jp
mov
arpl
inc
add
popa
ja
inc
pop
aaa
push
xor
imul
or
inc
push
inc
aam
inc
mov
fs
js
dec
jo
arpl
sub
xor
fnstenv
pop
outs
push
jae
bound
push
adc
pop
ins
dec
xor
ins
jne
pop
inc
les
dec
xor
add
inc
mov
cs
fs
push
ret
outs
and
ss
mov
cmp
push
fsub
pusha
push
jno
ja
sbb
jo
xor
ficomp
mov
stos
or
retf
pop
xor
cld
push
and
adc
xor
test
dec
xor
outs
movs
inc
xchg
xor
xchg
sub
rcr
dec
or
sub
xor
enter
sbb
mov
(bad)
div
push
and
adc
or
xor
shl
aaa
mov
out
push
jmp
jb
xor
pop
(bad)
outs
pop
gs
xchg
gs
push
xor
je
xor
inc
retf
data16
xor
inc
adc
inc
aaa
xor
in
adc
jl
cmp
jne
dec
push
data16
(bad)
jno
repnz
adc
popa
inc
push
ja
test
push
je
push
adc
push
not
adc
bound
pop
shl
les
jno
inc
push
mov
push
inc
push
and
cmps
fs
mov
inc
aam
jno
cld
xchg
(bad)
cmps
dec
xor
inc
jns
pop
imul
push
mov
push
adc
pop
jmp
ss
gs
jb
dec
ins
pop
push
add
arpl
shl
addr16
ins
arpl
inc
dec
test
ret
sub
push
in
xchg
test
push
bound
jbe
data16
fld
and
inc
push
fmul
shl
sbb
mov
fs
dec
inc
inc
push
in
adc
stos
(bad)
xor
dec
mov
mov
les
mov
ins
adc
cmp
aam
cs
jl
adc
sub
mov
imul
clc
push
dec
js
jns
scas
fsub
ds
push
je
dec
pop
jns
sbb
inc
inc
pop
dec
xchg
ins
sub
dec
sub
je
sbb
ja
cs
data16
and
nop
ja
push
or
inc
jbe
outs
inc
xor
cmp
jp
inc
imul
add
mov
scas
pop
popa
sbb
push
sub
push
adc
mov
in
push
or
push
pop
inc
mov
jne
jmp
dec
dec
dec
xchg
mov
add
aam
enter
mov
arpl
jns
int3
add
mov
add
repnz
dec
js
cmc
inc
adc
dec
inc
cmp
jo
xor
mov
jns
arpl
call
push
pop
dec
aaa
clc
and
cld
popa
or
dec
dec
cmps
pusha
popa
sub
int3
jmp
cmps
xchg
bound
imul
push
arpl
jle
les
or
push
xor
xchg
and
mov
inc
adc
jb
xor
push
push
jo
jns
or
sbb
test
push
push
jne
test
and
jbe
jns
mov
mov
jbe
rcl
mov
mov
jmp
jb
xor
les
mov
loopne
bound
in
inc
ss
xchg
push
loopne
and
fisubr
in
pusha
fcom
adc
pop
xchg
dec
ins
and
inc
ss
pop
or
inc
inc
inc
inc
xchg
xor
xor
adc
dec
sub
in
push
pop
sub
add
dec
data16
shl
pusha
xor
es
bound
jb
add
inc
fistp
jae
imul
fcomp
cmps
push
sub
xchg
cs
xor
xor
mov
add
cmp
or
in
adc
call
gs
add
dec
mov
pop
into
inc
mov
or
outs
push
aaa
push
xor
jl
and
add
js
hlt
gs
or
push
push
es
mov
js
jae
mov
call
inc
shr
(bad)
scas
pop
add
imul
dec
ror
mov
push
dec
jp
mov
inc
jns
push
jns
dec
pusha
mov
fstp
popa
mov
fdiv
xchg
lods
adc
cmp
mov
dec
inc
outs
mov
fs
je
outs
dec
enter
outs
adc
mov
push
ins
dec
push
inc
aam
inc
test
sbb
dec
inc
outs
pop
popa
push
scas
push
hlt
push
inc
inc
jb
jno
push
sbb
xchg
enter
add
mov
pop
outs
push
stc
dec
addr16
xchg
dec
out
pusha
and
xchg
inc
add
int3
and
clc
fs
ds
pop
inc
push
sub
xor
cmp
push
xor
jo
or
data16
inc
add
mov
push
je
sbb
sbb
jp
loopne
cmp
push
push
inc
ja
and
dec
xor
jo
or
lods
pop
cld
jae
push
pop
pop
data16
mov
cmp
and
inc
imul
push
xor
fidiv
adc
jno
and
stos
daa
test
fs
jae
or
push
add
jo
(bad)
push
cmps
or
sub
inc
dec
jg
test
inc
inc
pop
dec
and
xor
sbb
imul
dec
inc
mov
aaa
add
loop
and
jb
xor
inc
movs
cmp
std
and
repnz
xor
cmp
adc
add
and
ins
jne
bound
cmp
jns
dec
jne
sub
out
xchg
pop
mov
je
sbb
jp
pop
popa
dec
lock
xor
imul
jl
test
inc
ja
ret
xor
cmp
dec
xchg
sbb
jle
adc
bound
or
addr16
ja
push
inc
jle
in
inc
inc
xchg
push
and
inc
aam
jecxz
push
outs
push
push
xor
jno
mov
ins
inc
inc
push
test
adc
ins
mov
sub
mov
inc
dec
xchg
push
adc
jno
push
dec
adc
adc
cs
rol
pop
xchg
push
cld
test
xchg
pop
xor
lock
pop
aaa
ins
bnd
push
sbb
pop
movs
cmp
cs
into
dec
xor
push
xor
jmp
ins
push
dec
fsub
imul
dec
jne
popa
adc
xor
pop
mov
xor
mov
imul
xor
cmp
dec
lock
enter
outs
jle
ins
shr
clc
dec
jb
cmp
inc
movs
xor
dec
push
out
xchg
movs
fs
or
inc
adc
xor
mov
scas
xor
or
arpl
mov
ss
push
push
add
push
mov
xchg
js
dec
gs
dec
add
stos
dec
data16
push
add
inc
adc
sub
dec
xor
call
js
mov
sub
outs
dec
imul
or
dec
push
dec
and
pop
cmps
je
pop
out
push
jb
add
jbe
ins
dec
ds
int
cmps
mov
popa
pusha
push
cmp
loopne
ja
push
cwde
je
jp
inc
push
push
dec
sub
dec
dec
jp
pop
int3
rcr
addr16
nop
push
add
data16
pop
sbb
dec
cmp
dec
sbb
js
xor
js
je
inc
push
lods
sbb
sub
or
mov
inc
sbb
dec
ss
sbb
sbb
cmp
bound
xor
add
xor
push
xor
sub
mov
push
jno
jo
xor
adc
dec
addr16
pop
push
mov
adc
xchg
dec
and
test
dec
jne
sbb
imul
inc
rcl
mov
sbb
les
loope
popa
xor
jo
cmp
xor
jb
je
dec
xor
push
retf
add
outs
inc
ins
sbb
test
xor
jbe
jne
ficom
jo
je
dec
imul
call
mov
jns
inc
jp
dec
push
adc
and
dec
pushf
mov
mov
enter
and
mov
dec
and
test
call
jo
sub
push
sub
push
jne
out
inc
dec
hlt
xor
loopne
add
cld
outs
dec
out
inc
push
jae
push
ins
inc
or
mov
mov
mov
pop
xchg
jns
jae
adc
fisub
jb
mov
xor
aaa
sbb
mov
imul
sahf
call
int3
lods
(bad)
inc
dec
push
push
jb
sbb
inc
outs
test
xor
jne
inc
add
test
retf
dec
sbb
push
or
sbb
xor
lock
xor
sub
sahf
push
pushw
push
je
into
pop
pusha
adc
cli
sbb
mov
gs
dec
pop
mov
dec
jae
push
inc
and
xchg
xchg
dec
pushf
imul
push
sbb
outs
je
and
add
inc
outs
test
je
aaa
adc
pop
fist
add
outs
and
sbb
push
push
mov
inc
arpl
jae
xchg
inc
inc
jb
push
push
and
sahf
xchg
fs
xor
adc
xchg
adc
fs
bound
mov
sbb
push
jns
mov
push
push
push
(bad)
mov
mov
jno
push
jo
inc
and
nop
pushf
popa
mov
fcom
add
arpl
inc
pop
dec
fcmovbe
dec
xor
inc
rol
inc
inc
jp
sub
cld
dec
ss
inc
pop
clc
add
inc
add
outs
or
push
adc
cs
(bad)
xor
lods
es
inc
enter
or
push
ins
jbe
or
cmp
push
out
push
mov
and
jno
hlt
int
or
push
bound
jns
dec
mov
xchg
dec
fsub
fadd
rol
mov
jb
outs
addr16
add
dec
js
aaa
js
adc
stos
mov
push
ins
push
add
adc
dec
imul
imul
dec
or
xor
adc
xchg
loopne
dec
push
dec
sahf
or
scas
ins
inc
mov
xchg
push
jns
dec
aaa
adc
inc
ss
bound
pop
jo
push
pop
sub
sub
ret
push
dec
aad
xor
pop
lock
daa
or
stos
stos
add
inc
fsub
add
sbb
inc
inc
stos
popa
sub
inc
cmp
jb
or
jecxz
es
bound
adc
jno
je
ja
pop
adc
bound
jae
js
lods
xor
test
mov
mov
mov
push
xor
fs
xor
lods
rol
jg
push
dec
inc
inc
xor
push
pop
mov
addr16
scas
adc
rol
inc
ror
jo
xor
cld
xor
ror
jp
push
sbb
mov
xchg
rol
dec
jb
in
xchg
ja
push
xchg
je
inc
js
sub
out
push
add
inc
inc
outs
inc
dec
add
and
push
es
and
ds
aam
ins
xor
cmps
inc
push
ins
or
push
data16
inc
dec
shl
xor
loopne
imul
mov
js
xor
xor
and
pop
clc
push
and
outs
and
sub
aas
mov
cmp
pop
dec
jae
jb
xor
fidiv
mov
fcom
jmp
dec
dec
dec
xor
push
dec
movs
test
sbb
adc
xor
aaa
dec
ss
xchg
and
adc
xor
ja
out
(bad)
fwait
push
inc
mov
inc
jp
push
pop
ins
sar
dec
fs
fucomi
mov
je
inc
pop
xor
xor
dec
popa
push
pop
loope
mov
mov
clc
rol
ror
jp
dec
pop
push
add
mov
js
dec
push
inc
inc
test
cmp
mov
push
mov
pop
inc
ret
xchg
push
arpl
cmp
cs
sbb
dec
inc
ss
imul
ficom
inc
push
adc
shl
inc
ja
xor
pop
push
mov
and
and
inc
jns
jne
adc
mov
jbe
arpl
or
or
sbb
jl
add
popa
inc
ins
push
inc
push
add
mov
sub
cmp
and
ins
fs
jl
push
inc
push
ins
push
push
and
cmp
test
inc
dec
mov
jbe
clc
push
inc
or
aad
sub
cmp
test
dec
inc
sub
pop
js
mov
cmp
ss
xor
shl
inc
loop
xor
outs
push
add
sahf
imul
inc
outs
add
adc
dec
sbb
mulps
pop
mov
aam
xor
mov
add
pop
stos
aaa
sbb
inc
push
arpl
jns
aaa
fs
ror
popa
dec
cs
or
push
inc
and
inc
add
push
dec
shl
mov
or
dec
push
out
or
hlt
fidiv
mov
inc
inc
push
test
dec
ins
pop
ss
es
ins
mov
inc
imul
add
js
fidiv
inc
js
and
push
arpl
jb
imul
fs
inc
push
xchg
jb
sbb
xor
push
push
mov
jmp
lahf
nop
add
push
imul
and
push
jo
jmp
hlt
ja
bound
je
aam
jp
cmp
sub
xchg
retf
push
mov
inc
adc
repnz
mov
push
sbb
push
stos
xor
mov
push
mov
add
pusha
inc
inc
dec
jbe
mov
das
or
inc
jne
inc
inc
imul
in
inc
and
test
dec
dec
shl
dec
cld
fs
pop
sub
leave
cmp
ja
dec
js
dec
xor
jp
add
fdiv
and
and
sbb
test
mov
js
push
jmp
pusha
add
push
dec
jne
and
imul
pop
or
jae
or
rol
jbe
ss
push
push
xchg
push
xor
add
inc
sbb
inc
push
fisttp
xor
imul
add
xor
jmp
outs
adc
xor
ins
outs
mov
push
push
sbb
fcom
fwait
sub
mov
sbb
push
ins
add
push
test
ret
and
adc
and
inc
cmp
pushf
inc
pop
enter
ret
cmp
xor
dec
idiv
adc
push
movs
push
cmp
add
ins
jne
pusha
pop
xchg
sub
or
xchg
jo
inc
adc
jb
sub
ins
stos
jns
jbe
mov
pop
dec
adc
add
push
arpl
adc
out
mov
or
jne
sub
js
rcl
or
push
jne
add
test
add
dec
dec
push
cmp
dec
jno
ror
and
push
and
mov
cmp
push
pushf
xor
mov
pop
inc
sub
inc
xchg
adc
retf
fidivr
sub
(bad)
cwde
or
imul
jno
(bad)
fcom
cdq
(bad)
jle
ja
arpl
push
and
test
pop
cmp
pop
sbb
pop
mov
xor
push
push
jb
add
adc
pusha
pop
sub
fs
dec
pop
mov
aaa
xchg
ja
xor
sub
addr16
jns
ins
push
push
sbb
ins
mov
in
inc
ret
data16
inc
jbe
fild
push
call
add
mov
sbb
ss
fidivr
push
inc
add
add
push
push
push
call
outs
pop
inc
dec
je
or
dec
xor
xchg
shl
pop
data16
popa
xchg
mov
cwde
inc
fs
mov
pop
add
js
inc
sbb
ror
xor
dec
imul
mov
push
arpl
cmc
or
mov
inc
jb
inc
push
js
add
aad
inc
outs
enter
push
and
js
outs
ins
inc
ja
xor
jmp
daa
mov
(bad)
jb
push
jae
bound
push
(bad)
outs
pop
jl
fcomp
popa
outs
aad
shl
xor
call
sahf
pushf
hlt
inc
push
sbb
jne
arpl
xchg
inc
inc
xor
xor
jae
scas
dec
hlt
inc
ins
xor
add
xor
(bad)
imul
popf
adc
dec
push
aaa
rcl
clc
push
inc
dec
cwde
jne
or
stos
dec
aad
ror
popa
fidivr
dec
imul
dec
gs
loope
and
push
loope
sub
shl
aaa
addr16
dec
push
test
cmp
cmp
add
outs
sahf
push
inc
loop
push
ins
xor
push
push
jl
push
push
and
mov
jns
push
es
loopne
ror
push
dec
bound
push
add
shl
or
push
jo
jp
cmp
dec
out
mov
outs
push
cs
into
mov
ror
or
inc
hlt
ss
push
mov
js
rcr
mov
dec
xor
popa
sub
cmp
shr
inc
ins
jmp
ja
(bad)
movs
addr16
dec
imul
push
inc
add
and
ds
fisubr
mov
test
dec
push
bound
jo
push
sbb
test
mov
xchg
sbb
ss
push
jbe
dec
gs
add
fisub
cld
pusha
jno
jae
nop
test
cmps
jo
ja
dec
imul
sub
shl
mov
ds
out
dec
add
call
inc
jb
xor
cli
xor
push
jns
jle
mov
inc
pop
in
hlt
push
mov
push
loopne
push
aaa
inc
adc
adc
ror
sub
push
adc
pusha
js
arpl
jo
and
push
push
jne
ja
sbb
and
xor
adc
xchg
jne
jp
and
jb
jl
loopne
push
jb
dec
ins
xchg
(bad)
stos
outs
dec
push
dec
inc
cmp
dec
ja
cmp
aaa
mov
dec
dec
xor
cmp
sub
mov
push
xor
jbe
mov
dec
data16
jae
ret
sbb
inc
push
adc
jl
push
cdq
call
jbe
(bad)
imul
ss
inc
or
inc
adc
mov
inc
xor
data16
mov
jne
call
push
pushf
mov
inc
out
call
inc
add
dec
add
aam
outs
add
dec
push
inc
push
mov
pusha
dec
ja
cmp
cmp
pop
mov
ins
dec
push
dec
dec
push
push
xchg
or
mov
inc
jae
data16
mov
mov
mov
dec
arpl
gs
mov
(bad)
xor
dec
or
(bad)
xor
jno
add
nop
cld
push
and
dec
(bad)
pop
pop
jo
adc
rol
or
inc
dec
jbe
bound
cs
and
push
data16
stos
ins
xor
pop
push
fisub
es
ins
jne
sbb
pop
ss
pop
ins
ds
sub
hlt
je
movs
loope
and
add
jb
cmps
fwait
or
in
jb
xor
fcomp
fs
jbe
fsubr
pop
mov
and
js
push
dec
or
and
js
cmp
inc
or
adc
dec
ins
adc
cs
mov
retf
pop
push
mov
inc
adc
dec
mov
add
adc
mov
adc
jp
inc
loopne
push
(bad)
ficomp
test
js
call
inc
shl
outs
cmp
addr16
push
and
sub
push
fs
popa
jo
bound
adc
sub
fcom
sbb
pop
inc
push
mov
(bad)
(bad)
jp
push
inc
cmp
inc
ror
pop
mov
imul
push
push
push
ins
arpl
mov
sbb
adc
add
dec
mov
jle
or
push
cmp
mov
add
pop
lock
or
inc
xor
shr
xchg
in
je
je
push
push
pop
mov
jno
mov
jo
push
push
adc
inc
push
xchg
pop
dec
in
mov
cli
inc
dec
ins
dec
pop
add
adc
inc
arpl
sbb
push
dec
imul
inc
jno
mov
retf
inc
mov
sub
pop
push
push
outs
inc
scas
or
push
dec
test
xor
addr16
je
mov
or
sbb
add
hlt
cmp
fs
add
movs
pusha
mov
xor
jb
cmp
inc
inc
push
gs
inc
mov
shl
je
inc
push
and
repnz
call
jb
mov
push
dec
dec
mov
sbb
push
shr
pop
push
ja
push
or
in
not
push
mov
sbb
inc
std
or
js
push
xor
or
mov
xor
jae
je
dec
xor
ins
mov
pop
push
cs
mov
push
xor
out
push
jp
ss
push
sub
jo
or
dec
jb
cmp
push
jns
dec
or
jb
sub
push
lods
fcmove
push
add
adc
shl
outs
mov
out
loop
jmp
pushf
xchg
pop
sbb
push
push
pop
and
add
mov
mov
dec
push
mov
fisub
dec
push
xor
xor
call
inc
inc
push
inc
popf
pusha
push
inc
arpl
sbb
xor
dec
es
inc
arpl
sub
ins
(bad)
arpl
and
sbb
call
cmp
je
pushf
jbe
retf
in
inc
inc
inc
inc
push
js
popa
jns
inc
mov
adc
push
into
or
pushf
pop
ret
mov
xchg
gs
icebp
sub
push
outs
adc
inc
scas
and
mov
add
addr16
and
mov
outs
jp
push
ins
adc
and
cmp
ss
cwde
or
add
sub
mov
push
stos
mov
movs
mov
add
shl
xor
js
gs
call
arpl
push
loope
mov
dec
js
sub
call
add
push
dec
ins
sbb
add
jbe
outs
je
clc
add
lds
sbb
outs
ins
aaa
int
mov
inc
dec
aaa
xor
jbe
ins
dec
push
cmp
imul
lods
pop
push
xor
or
mov
jp
dec
and
xor
mov
pop
jb
or
dec
xor
push
bound
je
dec
inc
lds
(bad)
mov
jbe
mov
dec
dec
inc
mov
ret
data16
mov
or
ja
movs
gs
jns
dec
imul
test
dec
cwde
cmp
add
cmp
push
inc
inc
xchg
mov
inc
or
popa
xor
jns
data16
dec
push
or
loopne
addr16
cmp
pop
xor
or
inc
jbe
fld
in
shl
jne
gs
add
mov
shl
test
les
mov
inc
ins
cwde
gs
dec
dec
push
jp
dec
inc
xor
fldcw
and
fisubr
adc
mov
add
ins
clc
pop
mov
scas
dec
sub
jo
mov
lods
add
or
sbb
dec
jp
test
fist
push
dec
cmp
test
loope
jl
push
sbb
dec
(bad)
pushf
je
loopne
(bad)
mov
sub
xor
pop
push
xor
es
xchg
push
jle
push
mov
or
adc
jb
inc
inc
mov
xchg
mov
add
repz
mov
data16
push
fs
xor
pop
inc
inc
dec
test
test
out
push
inc
inc
stos
inc
adc
dec
and
push
pop
xor
imul
dec
dec
jae
mov
cmp
inc
sbb
xor
xor
jbe
inc
jo
ret
mov
xor
je
jae
and
je
xor
push
inc
fsub
shl
ss
or
inc
dec
mov
dec
dec
inc
xchg
or
dec
ret
push
mov
push
inc
xchg
xor
adc
sub
push
shl
sbb
jp
cmp
arpl
imul
dec
dec
popa
mov
inc
push
ins
dec
sub
dec
adc
outs
add
add
fs
dec
mov
or
inc
ins
mov
cdq
add
mov
ins
ins
xor
stos
ficom
mov
push
xor
mov
dec
xor
rol
push
enter
ins
aam
push
push
mov
gs
inc
sub
into
outs
dec
dec
push
mov
push
outs
xor
outs
and
(bad)
cmp
inc
jae
inc
push
add
dec
push
mov
stos
add
inc
or
call
xor
test
push
inc
mov
pop
and
or
je
xor
push
leave
xor
jmp
out
bound
ja
or
xchg
hlt
push
imul
call
sub
cmp
adc
push
xchg
xabort
sbb
push
push
dec
popa
sbb
daa
mov
data16
push
push
dec
retf
xor
push
mov
not
sub
xchg
(bad)
fcomp
pop
inc
test
add
(bad)
data16
stos
push
or
add
imul
inc
or
jno
or
sahf
push
ss
add
outs
outs
mov
mov
outs
outs
push
push
arpl
icebp
push
sbb
pop
jbe
stos
push
retf
mov
inc
test
dec
xor
test
mov
es
dec
xor
cmp
mov
popa
test
loop
sub
rol
outs
scas
jo
inc
test
inc
test
xchg
retf
lods
inc
xor
outs
dec
in
mov
ja
bound
ins
push
jno
push
je
dec
and
add
cmp
dec
jno
ins
dec
fadd
and
scas
pop
sub
int3
inc
jbe
inc
in
mov
mov
push
dec
ja
jo
add
fs
movs
adc
jo
aaa
push
mov
mov
fsubr
inc
outs
xchg
pop
lods
push
dec
add
sbb
div
jno
jle
dec
jmp
sub
push
xchg
cdq
call
dec
mov
mov
jne
jno
pop
push
dec
nop
push
cmp
dec
inc
jae
sbb
inc
add
dec
popa
addr16
test
ss
jbe
inc
jo
jbe
dec
retf
lods
mov
xor
jg
lock
push
push
adc
ins
push
js
and
sbb
xor
lds
pop
xor
add
push
jno
dec
aad
inc
xor
xor
inc
mov
test
inc
dec
pop
mov
fiadd
dec
push
mov
push
add
in
pop
aad
inc
cs
inc
or
cmp
xchg
xchg
adc
cwde
adc
test
fisubr
push
inc
fdiv
inc
outs
fs
jbe
push
or
jno
dec
pop
cmp
inc
adc
ins
mov
ja
push
call
pop
popa
ja
fwait
add
es
dec
dec
inc
add
call
cmp
dec
fs
je
mov
dec
ss
jbe
bound
popa
mov
loope
fs
add
in
outs
pop
sbb
in
xor
ins
cmp
push
pop
gs
daa
or
adc
jp
clc
dec
sbb
ins
cmp
cli
xchg
dec
dec
cmp
outs
push
(bad)
push
inc
scas
xchg
fs
push
dec
inc
cwde
sbb
sbb
push
inc
xchg
lea
gs
adc
aam
push
popa
clc
push
push
xor
sub
out
inc
ds
push
dec
outs
pop
cmp
dec
nop
outs
push
aad
dec
cmps
aaa
xchg
cs
or
dec
xchg
callw
jecxz
sbb
xor
dec
div
inc
inc
dec
inc
xor
inc
scas
cmp
xor
add
or
push
inc
loopne
add
mov
xor
les
xor
sub
push
or
xor
jbe
je
test
les
pop
push
mov
or
jb
lods
push
stos
add
icebp
inc
fs
xor
xor
sbb
(bad)
xor
pop
mov
inc
push
or
adc
dec
dec
ins
adc
mov
add
scas
mov
add
cmp
push
inc
sub
push
dec
pop
cmps
or
inc
mov
add
dec
lods
jp
cs
dec
inc
push
js
push
push
imul
add
(bad)
sub
push
sbb
pop
xor
xor
jbe
and
jo
adc
sub
retf
ins
sbb
add
dec
mov
mov
inc
ja
inc
mov
popaw
jns
fisttp
pop
push
push
dec
inc
pop
movs
aad
lea
fcom
js
mov
outs
inc
es
pop
inc
dec
jle
dec
dec
push
pop
inc
or
popa
and
and
sbb
jbe
push
pop
xor
add
mov
push
imul
es
add
mov
test
inc
js
(bad)
cmp
jo
outs
test
aaa
and
mov
xchg
fs
push
inc
pop
outs
jbe
mov
aam
jp
retf
jo
ins
add
push
push
push
stos
stos
inc
cli
arpl
inc
push
mov
xor
inc
mov
ins
cli
imul
xor
mov
adc
xor
or
test
es
push
ret
cmps
jb
dec
ins
rol
fld
push
bound
mov
and
jno
fisub
call
ins
dec
inc
or
dec
fisub
loop
mov
mov
arpl
and
movs
ret
ret
aam
pusha
dec
xor
call
inc
cmp
dec
add
xchg
jae
popa
aaa
mov
cs
jb
push
mov
cmp
push
inc
call
jo
push
je
aaa
ss
test
add
dec
bound
jno
out
dec
adc
mov
cmp
imul
pop
dec
ror
sub
pop
jno
fwait
jl
inc
xor
jae
outs
arpl
push
push
enter
inc
push
inc
xchg
and
sub
shl
es
push
sbb
cmps
pop
pop
push
arpl
sub
ins
push
pop
push
ins
push
push
xor
gs
jbe
xor
adc
xchg
jne
xchg
dec
shr
pop
ins
test
adc
xor
cmp
push
movs
mov
dec
xor
outs
push
xor
xchg
ret
mov
imul
rcl
sbb
stos
inc
jmp
add
jl
push
mov
addr16
je
adc
push
mov
jb
mov
xor
dec
add
call
jne
cli
outs
xchg
ret
movs
add
pop
sbb
test
mov
xor
sub
push
push
rcl
jne
sbb
dec
inc
push
cmp
push
stos
xor
dec
jmp
jns
dec
xchg
test
jns
dec
pop
push
mov
inc
xor
push
mov
jbe
or
inc
adc
mov
popa
push
addr16
sbb
inc
push
cmp
jp
mov
jbe
stos
add
add
cld
dec
push
or
xor
xchg
out
xor
adc
ss
imul
xor
ror
or
dec
fwait
xchg
stos
fiadd
push
loopne
xor
dec
je
mov
dec
js
js
xor
mov
inc
and
lds
inc
xchg
jle
or
je
shl
adc
jbe
pusha
loop
dec
(bad)
dec
sbb
or
outs
push
inc
ja
mov
ss
or
(bad)
je
cs
jbe
jb
sub
and
dec
mov
inc
and
inc
push
mov
popa
inc
and
add
mov
push
xchg
dec
push
ins
push
aaa
lods
or
ins
arpl
add
imul
jle
push
xor
jns
jb
pop
inc
sbb
fwait
push
dec
xor
pop
imul
pop
shl
dec
xor
or
popa
mov
jae
jb
jmp
push
fsub
std
pop
cwde
(bad)
push
xchg
inc
push
push
dec
ficom
xor
inc
add
lods
push
inc
nop
ja
add
dec
outs
adc
inc
push
cmp
jbe
aaa
inc
push
cmp
lock
push
ss
bound
jb
pop
test
xchg
pop
xchg
push
jp
les
add
ja
inc
cmps
push
es
dec
ja
rol
mov
jo
sbb
jo
adc
fdiv
mov
inc
cwde
inc
test
rcr
dec
mov
pop
adc
xor
mov
dec
dec
push
mov
inc
(bad)
jns
fmul
mov
xor
ss
or
jbe
dec
outs
adc
fiadd
rol
mov
(bad)
or
jns
inc
sbb
push
and
inc
xor
jbe
xor
mov
in
es
cs
pusha
xor
mov
adc
and
popa
sbb
arpl
xor
mul
aad
xor
push
and
test
movs
mov
xor
dec
jo
inc
js
xor
retf
movs
and
fstp
push
dec
enter
push
dec
jbe
test
outs
cmp
push
push
inc
mov
js
lahf
stos
and
ins
pop
inc
mov
jno
pop
pop
dec
ficomp
outs
adc
jmp
aaa
mov
ss
mov
push
xchg
stos
bound
mov
add
adc
add
pusha
dec
enter
aam
add
dec
add
inc
js
fnstenv
retf
jo
inc
adc
mov
inc
(bad)
ror
stos
mov
xchg
dec
cmp
inc
mov
dec
outs
ds
mov
pop
gs
dec
push
adc
xchg
call
and
add
dec
sub
inc
hlt
or
mov
clc
mov
ins
shl
dec
ret
jns
retf
xor
push
inc
inc
mov
je
jae
cmp
mov
arpl
pop
fcom
and
shr
ret
outs
stos
xor
and
sbb
push
xchg
and
jbe
xor
xor
or
(bad)
bound
ins
mov
sub
imul
dec
mov
jbe
xor
mov
inc
outs
mov
lock
dec
sub
push
xchg
retf
pop
aam
or
and
dec
push
push
xor
loope
mov
je
dec
xor
ins
inc
inc
imul
add
aaa
nop
mov
dec
inc
fdiv
mov
pop
addr16
push
and
push
mov
outs
clc
daa
mov
stos
shl
int3
test
pop
add
add
stos
mov
jbe
push
inc
fs
inc
mov
dec
pop
dec
inc
sbb
pop
inc
push
or
push
je
inc
mov
dec
ja
adc
into
test
dec
push
pop
add
xor
inc
push
push
push
popa
mov
sub
mov
sbb
xor
ins
dec
dec
adc
pop
ins
pushf
inc
push
inc
cmp
lods
xchg
inc
and
jbe
movs
dec
inc
nop
imul
shr
inc
push
bound
inc
fist
push
dec
push
inc
push
addr16
inc
sub
call
add
test
shl
test
ins
lock
ins
inc
sub
ja
jecxz
sub
xor
jae
imul
xor
xor
and
pop
push
push
cli
push
jmp
add
or
mov
inc
inc
ss
int3
ins
cwde
call
arpl
adc
dec
test
sub
jbe
push
jg
push
mov
inc
push
bound
dec
jno
ja
push
outs
je
lods
add
js
adc
je
inc
xchg
lea
cmp
hlt
add
popa
inc
bound
or
popa
inc
fmul
stos
pusha
sub
push
mov
and
xor
popa
dec
rol
outs
adc
push
cmp
pop
jns
sbb
addr16
mov
push
push
adc
adc
aam
jne
sbb
adc
repnz
inc
cmp
pop
adc
xor
inc
call
push
add
xor
ret
add
mov
(bad)
retf
inc
es
jne
ja
inc
or
add
aam
cld
inc
dec
adc
aaa
adc
push
popa
stos
push
ret
out
pop
xor
test
xor
xchg
xchg
ret
cmp
arpl
aam
add
sbb
dec
inc
inc
test
sahf
and
outs
cwde
or
mov
jae
sbb
repnz
cmp
dec
inc
push
xchg
clc
push
add
lea
into
ja
jns
xchg
inc
inc
pusha
gs
test
pop
xor
jge
jo
xor
cmp
je
ins
dec
add
push
mov
push
bound
xor
push
data16
bound
sub
stos
push
gs
jb
pop
ror
mov
call
add
mov
es
add
or
outs
push
and
and
xchg
or
loopne
ja
push
xor
cs
dec
sar
outs
cmp
adc
xor
xchg
xor
mov
push
push
jb
inc
inc
mov
mov
xlat
inc
push
add
jo
xor
sbb
inc
ins
out
dec
sub
mov
push
inc
jno
xor
repz
jbe
aaa
gs
outs
inc
inc
jae
pop
add
lock
popa
xor
popa
test
or
cmp
pushf
outs
sbb
jbe
je
idiv
cli
cmps
sub
xor
add
mov
add
sub
fsubr
sub
cmps
imul
imul
sub
retf
jb
rol
mov
sub
xchg
adc
dec
inc
mov
xor
icebp
fmul
inc
jo
dec
xor
ja
or
inc
or
push
shl
arpl
sbb
push
cld
inc
jp
movs
or
sbb
adc
mov
mov
or
les
dec
sub
popa
ins
test
popa
call
cmp
xchg
jne
jbe
adc
movs
jo
das
xchg
mov
outs
push
add
mov
dec
ja
js
xor
es
and
or
pop
xor
ret
mov
push
push
sbb
inc
xchg
and
xor
dec
pop
arpl
sub
outs
aaa
dec
xchg
popa
dec
jae
in
jae
adc
add
cld
xchg
mov
inc
out
or
aaa
aaa
fcmove
sub
or
xchg
arpl
jbe
xor
aad
sbb
push
push
pop
dec
inc
push
xor
dec
(bad)
push
test
mov
jmp
add
je
pop
test
adc
aaa
xchg
jae
outs
inc
add
adc
gs
sbb
mov
ss
dec
stos
push
mov
sbb
shr
adc
push
push
ins
pop
push
mov
push
imul
std
push
clc
push
dec
push
xor
dec
cmp
dec
jb
sbb
push
inc
nop
or
and
call
mov
jnp
cmp
push
inc
jp
dec
loope
ds
inc
ins
loop
xor
pop
mov
mov
pop
jne
dec
jns
es
dec
(bad)
ins
dec
or
pop
dec
rcr
dec
outs
dec
push
and
xchg
xchg
mov
cdq
xchg
add
add
dec
push
pop
push
xor
mov
jae
mov
mov
push
js
mov
xchg
mov
add
push
add
cs
(bad)
jns
dec
dec
ret
xor
popa
push
je
xor
jbe
inc
dec
call
fsub
aaa
pushf
gs
js
ja
push
and
ins
push
jne
inc
je
fs
rdmsr
and
push
adc
push
lock
dec
inc
pop
sbb
push
pop
cmp
js
push
dec
cmp
dec
dec
jno
bound
inc
and
add
and
jae
sbb
cmps
jg
add
push
add
inc
push
jns
dec
dec
push
push
add
xchg
mov
popa
push
pusha
pop
push
pop
add
les
sbb
and
jb
adc
dec
dec
xor
adc
xchg
cs
sbb
sbb
sub
inc
mov
push
es
ins
xchg
movs
inc
adc
test
push
xor
sub
dec
sbb
xchg
mov
sar
add
cwde
xor
jno
mov
xor
jp
inc
adc
dec
cmps
dec
or
adc
xor
rcl
xor
mov
es
repnz
popa
pop
outs
jns
dec
push
fs
jns
addr16
and
cmp
or
cmp
push
push
inc
icebp
inc
cs
sbb
xor
push
push
inc
and
sbb
mov
mov
adc
sbb
add
jbe
mov
dec
or
js
out
mov
out
int3
cwde
loop
or
movs
mov
inc
addr16
clc
cmp
push
dec
and
inc
push
retf
or
xchg
cmc
dec
jbe
or
pop
sub
xor
ror
test
dec
sub
mov
push
adc
ins
adc
jo
mov
push
popa
push
sub
adc
sub
push
push
cmp
test
adc
jp
sub
jl
push
jne
inc
inc
jne
movs
mov
dec
cs
inc
jp
mov
inc
pop
push
sbb
add
and
ins
push
adc
inc
popa
dec
jne
cld
add
push
cmp
addr16
add
in
sbb
push
and
mov
sbb
inc
data16
push
mov
push
test
inc
test
inc
jbe
sub
pusha
xor
pop
add
mov
mov
loopne
push
inc
and
cwde
pop
bound
cs
sub
xor
and
xor
shr
les
dec
not
xchg
mov
aaa
xchg
push
and
dec
arpl
jae
call
pop
inc
cmp
inc
xchg
dec
int
jg
pop
xor
push
ins
xor
mov
test
dec
nop
inc
push
js
or
pop
mov
out
inc
imul
sub
push
push
mov
cmp
jl
imul
xchg
aam
scas
shl
add
fidiv
scas
push
jae
bound
inc
loop
(bad)
callw
gs
inc
rcl
addr16
outs
push
add
shl
popa
test
cs
nop
hlt
pop
shl
mov
push
mov
or
pusha
outs
push
xor
int
push
imul
adc
push
cmp
push
shr
push
xor
dec
jbe
dec
jns
cmp
inc
cld
push
and
cmp
add
mov
cmp
arpl
ds
outs
stos
rcr
in
mov
sbb
inc
xchg
push
test
gs
pusha
ins
mov
xor
inc
inc
dec
push
jbe
adc
adc
push
jno
or
xor
push
mov
sub
js
js
outs
int3
aaa
xor
mov
jne
push
push
mov
push
lds
je
fs
bound
xor
outs
add
test
push
loopne
xchg
mov
push
dec
mov
dec
or
and
js
sub
inc
and
jns
xor
sub
and
je
sbb
push
xor
cmps
sbb
rcl
push
dec
cmp
bound
inc
sub
mov
sub
inc
aaa
call
les
imul
or
xor
enter
dec
cs
es
and
jae
xchg
cmp
ins
dec
inc
push
and
stos
add
pop
jae
mov
push
or
xor
and
arpl
push
push
xor
add
push
pop
xchg
ret
lock
mul
jo
inc
rol
fiadd
dec
xor
jo
ins
xchg
or
pop
or
ja
inc
xor
adc
cmp
or
test
xor
inc
jae
add
fs
xor
inc
imul
(bad)
xor
inc
push
jg
jp
jns
inc
jb
cmp
clc
jno
popa
push
fisub
add
push
sar
arpl
int3
fmul
add
outs
inc
rol
jp
movs
push
loop
imul
push
enter
fs
inc
sti
add
ja
imul
outs
int3
jb
xchg
retf
add
jmp
xor
add
sub
div
ret
aam
xor
pop
xor
pop
bound
mov
mov
cmp
and
adc
pop
retf
outs
mov
xchg
les
xor
dec
inc
xchg
shr
xchg
push
xchg
movs
sbb
outs
outs
movs
nop
jo
add
dec
dec
js
fs
sub
inc
push
push
push
cld
lods
leave
(bad)
es
dec
xor
pop
clc
inc
or
loopne
add
and
adc
and
ins
push
pop
cmps
push
arpl
sbb
pop
fwait
enter
inc
mov
push
pop
xor
push
inc
pop
mov
ins
addr16
xor
aaa
jo
loopne
mov
push
pop
outs
cmp
imul
in
xor
cmp
mov
jo
data16
adc
inc
jmp
loope
mov
cmp
add
jp
pop
jb
inc
fs
push
cmp
stos
ins
mov
movs
mov
adc
outs
loop
add
inc
xor
xchg
pop
push
add
dec
gs
dec
je
pop
adc
push
inc
dec
js
sub
cdq
cmp
popa
test
sub
imul
or
pop
xor
mov
stos
inc
hlt
push
push
push
add
jp
push
not
inc
out
sub
adc
add
and
sub
cli
jne
inc
enter
xor
(bad)
cmps
jns
dec
inc
cmp
push
test
sub
dec
aaa
gs
xchg
adc
and
push
aaa
add
mov
ins
xor
jl
dec
or
or
jb
dec
dec
jae
outs
aaa
push
bound
and
push
ja
cmp
je
fsub
xor
mov
push
imul
add
jmp
push
mov
cmc
push
gs
and
xor
ins
dec
sub
sub
aaa
outs
cli
push
sar
dec
xor
imul
shr
push
bound
mov
push
icebp
outs
adc
jae
jbe
aaa
cmp
push
cmp
adc
push
inc
cmp
push
push
xor
xchg
lock
ins
dec
test
push
push
cs
xor
pop
and
sbb
xchg
imul
or
nop
sub
inc
sub
fdiv
scas
jbe
cmp
dec
mov
(bad)
mov
popa
push
icebp
push
push
add
es
push
fs
dec
adc
sbb
xor
loope
test
adc
inc
xor
mov
jbe
call
ins
ins
xchg
sub
dec
xor
sbb
inc
mov
movs
sub
scas
inc
xor
push
mov
push
inc
inc
cs
xor
cmp
mov
xchg
jp
(bad)
sbb
bound
dec
sub
test
ss
mov
cmps
test
sub
pop
xor
dec
loope
jno
inc
xor
xchg
push
dec
jo
cwde
dec
pop
mov
inc
push
push
cli
dec
sub
cmp
arpl
push
xor
cdq
xchg
xor
push
idiv
add
dec
adc
jbe
test
sub
lods
add
jl
ss
or
movs
(bad)
dec
int
xor
inc
xchg
add
dec
imul
xor
mov
ins
dec
in
popa
pop
jns
push
lock
ror
xor
outs
ins
into
rcl
jl
gs
jp
push
push
lock
shr
or
jle
push
(bad)
dec
cmp
jp
aaa
push
pop
adc
inc
(bad)
not
cmp
and
addr16
push
mov
imul
pop
cmps
add
sub
add
inc
inc
(bad)
inc
inc
xor
dec
outs
into
xor
inc
sub
xor
daa
hlt
call
arpl
inc
jae
push
jb
or
mov
push
inc
push
cmp
cwde
dec
sub
test
into
push
adc
mov
inc
ins
xor
inc
mov
dec
je
add
test
test
push
push
push
pop
mov
or
outs
sub
imul
mov
shl
pop
jo
jb
push
xchg
pop
xor
xchg
mov
in
jae
inc
mov
in
ror
out
ins
push
call
push
dec
push
dec
addr16
js
jns
pop
imul
push
imul
stos
sub
cmp
xor
pop
add
mov
fist
sub
data16
scas
or
popa
je
jbe
add
or
idiv
jno
jmp
push
jno
jbe
push
jbe
or
and
ins
lea
adc
push
inc
enter
add
push
addr16
push
inc
or
fild
and
les
push
inc
sbb
xor
inc
jb
mov
imul
inc
cli
bound
pop
xor
jmp
xor
adc
adc
imul
inc
add
ds
adc
fcom
inc
outs
pop
outs
push
push
gs
push
push
dec
aaa
xor
adc
cmp
dec
pop
pop
dec
es
xchg
imul
xlat
gs
dec
in
or
xor
stos
inc
imul
sbb
dec
add
ins
dec
xor
in
mov
push
inc
pop
inc
fs
inc
in
shl
push
add
and
xor
jbe
sbb
or
add
adc
fld
dec
inc
xor
cmp
jbe
or
push
and
lock
lods
adc
push
js
adc
cmp
adc
sbb
add
mov
dec
and
xor
pop
outs
je
out
xor
ins
mov
ja
popa
test
push
inc
dec
pop
xor
cmp
push
cmp
inc
lock
dec
adc
mov
dec
shl
jbe
dec
push
mov
and
cwde
bound
push
xchg
shr
or
push
push
xor
js
fs
ret
lock
dec
jp
jno
jle
cmp
inc
inc
push
dec
fs
cmps
add
lock
xor
and
aaa
ins
inc
push
shl
inc
mov
push
fmul
jns
jl
imul
or
xor
push
outs
cmp
shl
inc
dec
inc
adc
push
shl
cwde
arpl
mov
inc
(bad)
dec
je
je
xor
data16
pop
push
mov
scas
xor
jle
push
push
aaa
inc
imul
or
push
inc
push
mov
push
push
ja
retf
xchg
add
loop
outs
imul
scas
mov
dec
xor
dec
inc
fs
mov
imul
test
test
mov
out
pusha
xchg
push
adc
adc
dec
pop
xchg
dec
fisub
push
add
push
jae
dec
test
(bad)
bound
sub
xchg
dec
jb
dec
lock
inc
xor
outs
jbe
jb
inc
dec
pop
adc
jb
jno
inc
popa
inc
push
xchg
popa
ret
jp
out
data16
xor
jp
and
movs
test
ror
push
inc
and
fwait
ret
ins
push
jmp
jp
bound
fst
fisub
jmp
dec
inc
push
dec
ins
outs
inc
inc
and
loopne
xchg
ins
jp
ret
mov
inc
push
jbe
sbb
rol
add
add
xor
sbb
inc
js
arpl
xchg
adc
pop
adc
cs
dec
test
or
mov
lods
xchg
push
pop
xor
dec
inc
push
shl
mov
icebp
cs
outs
pop
push
push
push
inc
mov
push
and
jbe
test
inc
sbb
xor
mov
dec
jb
stos
movs
sub
inc
aaa
and
add
bound
ss
xor
dec
loopne
add
cmp
sbb
or
jp
call
sbb
nop
addr16
xchg
jmp
add
sbb
inc
dec
push
mov
cmp
ins
inc
add
je
data16
add
bound
jae
cmp
mov
pop
retf
mov
ss
xchg
movs
jne
push
lock
dec
jno
ror
dec
add
mov
gs
jl
push
mov
out
xor
dec
inc
or
cmp
dec
ins
addr16
push
bound
push
mov
bound
out
stos
and
or
or
jno
jns
fsubp
mov
jno
inc
jb
xor
outs
rol
adc
data16
dec
mov
dec
aam
add
test
call
xor
jb
push
jbe
in
mov
test
popa
loopne
aam
pop
or
add
mov
sub
mov
je
jns
pusha
xchg
adc
xor
mov
jo
gs
inc
ins
and
xchg
test
inc
push
fisub
ds
xor
dec
data16
mov
jae
popa
jbe
shr
jmp
test
dec
pop
or
adc
jbe
bound
movs
mov
push
pop
jb
adc
call
adc
cmp
dec
xor
nop
ret
and
pusha
pop
es
dec
pop
mov
jbe
mov
pop
add
xor
call
add
adc
push
jbe
dec
dec
dec
and
in
fs
jmp
inc
dec
push
inc
push
push
dec
jbe
addr16
ret
and
mov
cmp
pop
cmp
or
push
push
push
inc
lods
sub
pop
pushf
inc
pop
gs
bnd
ins
je
ss
and
dec
inc
mov
cmp
push
xor
or
pop
ja
or
aaa
mov
dec
jo
bound
cmp
js
push
adc
pusha
mov
xchg
arpl
mov
or
add
jp
jns
add
dec
gs
scas
into
dec
inc
inc
ss
dec
jns
retf
gs
dec
movs
push
sub
test
mov
and
in
pusha
call
clc
xor
dec
add
inc
outs
add
mov
xchg
dec
xor
dec
fs
jmp
pop
aad
push
test
xor
mov
fs
push
rol
push
es
gs
push
imul
add
xchg
push
adc
shl
jb
test
inc
or
cld
xor
imul
add
shl
cmp
call
xchg
mov
fimul
dec
jne
rcl
mov
xor
stos
js
sub
sbb
jo
jl
dec
imul
dec
jne
push
add
pusha
pop
inc
adc
mov
or
lods
es
fisttp
pop
xor
ins
je
test
fisub
dec
cli
outs
pop
jo
lods
js
inc
xor
push
push
dec
jo
cmp
inc
dec
push
add
xor
dec
hlt
pushf
cwde
push
mov
jae
sbb
xor
stos
shl
sub
movs
test
pop
pusha
ret
lock
data16
push
inc
add
sbb
inc
jo
adc
icebp
fwait
pop
jb
call
jne
rcl
fimul
inc
imul
dec
sbb
push
xor
ja
jno
cmp
xor
jbe
out
push
cmps
push
and
call
dec
jp
mov
loopne
rcr
add
xor
push
jb
or
loopne
fnstsw
push
push
or
imul
aam
and
out
jo
xor
loopne
jno
test
pop
ss
push
les
inc
push
adc
movs
jb
xor
push
test
push
sub
inc
or
sub
dec
inc
hlt
data16
jo
stos
call
inc
xor
cli
push
shl
sbb
push
dec
add
dec
mov
aam
cld
or
inc
push
xor
inc
mov
and
cmp
rol
test
mov
mov
and
data16
outs
dec
mov
push
dec
cli
xor
mov
outs
imul
test
arpl
and
inc
jo
jne
sub
loop
push
jo
pusha
adc
jp
push
cmp
xchg
add
hlt
xor
xor
xor
push
imul
cmp
cmp
sub
fs
inc
dec
pushf
aam
mov
inc
data16
ins
fcom
push
jo
rcr
mov
push
push
bound
hlt
imul
push
push
je
and
pop
xor
xor
inc
mov
inc
pop
xor
es
retf
inc
push
ficomp
inc
push
sbb
adc
push
jp
inc
gs
xchg
push
nop
stos
(bad)
add
xchg
add
push
imul
ins
ja
xor
ja
xor
adc
push
push
inc
dec
sbb
je
and
jns
aaa
jne
sub
or
js
inc
dec
cmp
ins
(bad)
mov
inc
jp
bound
call
dec
test
pop
fs
js
jo
adc
xor
outs
dec
push
inc
shl
ss
ins
je
inc
inc
xchg
test
mov
inc
sbb
ret
xchg
push
shl
push
inc
test
jb
cmp
mov
mov
cmp
mov
jo
push
cs
mov
in
jne
push
xor
cmp
mov
je
in
ja
and
outs
and
add
sbb
test
cmp
push
sub
addr16
jo
and
push
not
and
icebp
adc
xor
je
jae
and
and
jb
adc
sub
jo
es
or
push
dec
rcr
nop
ret
dec
enter
sbb
mov
fs
jno
xchg
mov
clc
outs
dec
sub
ret
arpl
push
mov
xor
cmp
bound
bound
lods
xor
mov
pop
push
dec
inc
es
mov
nop
and
cmp
jb
or
retf
sbb
cmp
sbb
jo
ss
pop
add
xor
popa
pop
jo
mov
inc
dec
sbb
pop
add
inc
push
mov
fcom
sbb
cmp
xor
push
sbb
ss
and
cmp
push
in
and
lds
jbe
outs
jae
ins
inc
push
push
mov
clc
ins
mov
xchg
mov
popa
fs
xor
jne
xchg
xor
or
daa
test
inc
push
sub
push
dec
arpl
mov
add
inc
mov
dec
jo
push
ror
outs
dec
dec
jl
out
or
lds
ins
pop
xor
rcl
xor
xor
dec
push
push
xor
imul
xchg
test
xlat
adc
sar
push
mov
(bad)
dec
push
jbe
cmp
push
inc
push
ss
sbb
sub
push
dec
popa
outs
ins
xchg
ret
add
inc
jno
inc
shl
cmp
push
jne
fst
popa
js
jo
mov
mov
imul
inc
dec
xchg
and
push
jb
sub
dec
jb
adc
mov
xor
push
cli
jae
jmp
cs
xchg
push
push
jno
mov
push
inc
or
sbb
daa
dec
sub
jge
jne
push
pop
push
jbe
mov
add
dec
inc
or
stos
lea
jne
repnz
cmps
mov
push
out
cmps
sbb
je
sbb
push
push
inc
push
fistp
push
dec
addr16
dec
dec
lock
jbe
xor
and
cmp
xlat
push
arpl
push
inc
jae
gs
loopne
sbb
push
xor
test
cdq
mov
in
mov
rcl
push
push
jo
ins
push
mov
mov
inc
cli
mov
inc
cmps
inc
xor
or
mov
inc
dec
mov
pusha
xor
sub
jne
js
xor
xor
pop
dec
dec
je
pop
jne
aaa
mov
xor
jp
mov
lock
cmp
xchg
pop
jns
pop
jp
dec
cmp
movs
popa
xor
ins
fisttp
mov
inc
xor
or
pop
xchg
mov
cmp
imul
arpl
je
mov
xor
aaa
arpl
les
dec
mov
inc
pop
imul
adc
js
pop
imul
xor
xor
inc
or
sub
fdivr
fs
popa
xchg
inc
and
adc
data16
gs
adc
inc
xor
int3
pop
bound
dec
xchg
and
jp
mov
inc
imul
sub
pop
mov
inc
xchg
mov
hlt
push
jb
or
jae
nop
xchg
mov
fimul
push
lock
inc
aaa
jb
xor
xchg
(bad)
outs
mov
inc
push
xor
pop
inc
inc
int3
jle
push
push
xor
nop
inc
fs
push
mov
inc
in
cs
outs
bound
out
popa
mov
or
add
or
xchg
fs
call
add
adc
imul
nop
push
ss
ss
or
jp
dec
jb
outs
pop
pushf
push
mov
aaa
or
pop
pop
aad
imul
es
mov
sub
ucomiss
lods
push
arpl
inc
pop
and
push
mov
outs
dec
sub
imul
push
push
xchg
bound
fs
push
dec
test
push
xchg
(bad)
lods
adc
add
jmp
inc
and
cs
cmp
ins
push
sar
inc
push
gs
dec
push
jbe
push
push
xor
cmc
inc
aaa
inc
retf
jne
js
aaa
push
jae
popa
jo
sbb
enter
or
dec
adc
(bad)
jo
inc
test
adc
sbb
xor
and
jbe
xchg
sbb
or
push
clc
or
add
inc
jne
bound
cs
int
cmps
jb
rcl
mov
call
xor
pop
test
push
or
aaa
outs
mov
push
loopne
movs
outs
ss
xor
test
push
mov
mov
pop
bound
jno
mov
mov
inc
fcomp
xchg
cdq
jbe
mov
inc
xor
lods
xor
ss
jno
fidiv
sbb
and
js
inc
inc
shl
sbb
pop
mov
adc
rcl
xor
outs
add
loope
stos
dec
push
js
test
mov
test
jb
jo
sub
mov
add
push
push
add
scas
pop
scas
gs
add
sub
push
add
xor
call
ja
mov
inc
data16
outs
jbe
jno
push
jo
inc
shl
nop
xchg
mov
dec
mov
inc
cwde
sub
push
xor
add
or
push
imul
xor
dec
test
push
add
ret
xchg
in
sbb
ins
inc
aaa
jp
adc
arpl
xor
ja
outs
mov
inc
dec
inc
dec
or
xor
sub
pop
dec
mov
inc
push
mov
dec
mov
fs
cmp
in
inc
adc
push
xor
inc
jmp
jno
mov
test
jno
or
arpl
push
shr
inc
jb
inc
jp
dec
xor
inc
clc
dec
ja
and
inc
mov
sbb
jne
xor
and
xor
dec
cmp
imul
pop
pop
mov
mov
inc
movs
data16
(bad)
or
or
xchg
dec
xor
xor
and
jbe
cmp
or
stos
(bad)
call
imul
pop
push
popa
ins
aaa
jmp
fs
imul
inc
gs
inc
push
cmp
gs
cmp
inc
push
sbb
sub
imul
xchg
xor
enter
and
fs
jle
push
add
ja
push
dec
dec
xor
xor
jne
cmp
and
imul
push
dec
pop
xor
test
(bad)
jae
adc
or
inc
inc
inc
aam
mov
cmp
dec
xor
cmp
fdiv
ja
inc
push
add
inc
inc
add
out
jo
mov
and
imul
pop
or
cmp
pop
cmp
inc
dec
dec
jo
or
mov
pop
dec
imul
mov
dec
movs
(bad)
inc
mov
jo
push
and
pop
push
sbb
and
xor
xor
mov
jb
jbe
mov
dec
xor
push
out
dec
inc
js
xor
dec
cmp
and
mov
adc
outs
xchg
or
inc
jno
cmp
adc
push
cmp
xor
push
arpl
or
or
call
sbb
dec
push
test
mov
repnz
test
push
ins
push
push
dec
adc
xor
daa
lea
sbb
aad
cs
ins
ret
mov
push
and
sub
push
outs
outs
cld
mov
push
push
dec
ins
and
dec
xor
dec
push
push
or
outs
call
data16
push
push
les
xor
or
lods
inc
jbe
xor
jo
jb
push
pop
mov
or
mov
je
xor
(bad)
ja
xor
xor
pusha
(bad)
push
clc
xor
(bad)
lds
test
imul
adc
mov
test
push
dec
add
imul
retf
jo
push
xchg
cwde
pop
mov
xchg
or
div
cmps
dec
push
dec
push
jo
and
imul
pop
ins
push
push
push
push
pusha
pusha
xchg
push
push
gs
sub
in
test
shl
dec
not
(bad)
retf
jmp
inc
es
xchg
xor
mov
aaa
push
xor
push
sbb
push
jle
pop
sub
and
inc
dec
ins
dec
inc
js
add
sub
sbb
dec
pop
jns
rcl
or
and
ret
inc
imul
xor
push
mov
adc
ins
push
push
push
cs
stos
pop
int
loop
pop
push
pop
or
test
xor
push
dec
push
and
inc
or
pop
popf
inc
aad
jle
inc
data16
dec
aaa
and
imul
inc
je
jne
ss
dec
sub
inc
sub
fsub
or
popa
shl
mov
gs
xchg
inc
inc
mov
adc
mov
pop
inc
je
push
jp
inc
ja
adc
xor
popa
jge
aam
mov
xor
fs
scas
sub
into
jp
(bad)
outs
js
jno
add
sbb
outs
xor
inc
hlt
inc
jae
sbb
out
ja
mov
cs
in
xor
aaa
adc
nop
xchg
xchg
sbb
dec
pusha
rcr
and
and
inc
(bad)
in
push
adc
dec
nop
arpl
aaa
ins
popa
or
jne
aam
fwait
add
add
(bad)
push
xor
dec
gs
ins
dec
aaa
xchg
ss
adc
sbb
push
hlt
push
sbb
cs
arpl
push
cwde
push
dec
dec
jne
pop
push
push
test
inc
xor
add
jns
cs
outs
sbb
jbe
mov
fwait
xchg
jbe
imul
jp
or
fwait
je
loopne
dec
add
inc
ror
sub
push
jo
xor
movs
cmp
shl
pop
adc
push
ss
push
xchg
fdivp
mov
mov
jp
add
xor
or
stos
push
push
mov
gs
push
push
(bad)
jmp
or
jb
movs
es
pop
pusha
push
push
retf
add
lock
xor
sbb
sub
jbe
jae
arpl
mov
push
in
jo
xor
mov
jns
loop
fnsave
add
push
call
ins
pop
dec
push
inc
push
dec
xor
sbb
push
inc
dec
ins
jo
push
(bad)
dec
push
inc
in
adc
data16
xchg
mov
add
js
push
jbe
test
cmp
sbb
push
rol
push
mov
inc
pop
or
movs
sbb
add
adc
inc
jae
gs
out
fisub
mov
inc
nop
inc
aaa
adc
add
movs
push
pop
jbe
dec
xchg
sub
jb
aaa
pop
or
inc
ins
dec
(bad)
mov
adc
jne
inc
pop
mov
push
push
jmp
pop
inc
add
add
dec
push
cwde
mov
dec
mov
outs
adc
push
out
inc
inc
push
push
cmp
xchg
jo
dec
push
imul
pop
push
inc
js
fs
push
jns
mov
xchg
cdq
sub
ins
dec
jbe
ss
shr
jb
inc
rol
and
ss
dec
jp
imul
dec
mov
inc
leave
or
cmp
gs
xor
push
cmp
cld
popa
ins
push
adc
dec
jmp
mov
dec
push
xor
outs
stos
outs
ja
push
xor
(bad)
inc
sub
xchg
and
and
mov
xor
dec
jp
xor
sub
movs
ret
gs
imul
xor
xlat
test
sbb
jns
push
push
push
push
outs
inc
data16
xchg
shr
bound
jo
dec
fsub
lods
fidiv
or
cld
inc
xor
xor
or
jp
dec
fild
rcr
outs
dec
gs
xor
add
ror
test
aam
ins
ja
xchg
ins
push
hlt
arpl
(bad)
and
mov
jb
popa
jbe
push
pop
pop
xchg
xor
inc
mov
jmp
push
jne
jl
add
push
jno
dec
jb
push
cmp
out
mov
cmp
mov
aam
je
mov
push
inc
sahf
dec
int3
push
in
jo
ja
jbe
aaa
test
mov
js
cmps
jl
sub
and
ficomp
push
inc
xor
aaa
sub
cs
dec
dec
dec
and
retf
jl
out
arpl
cwde
jo
or
pop
push
ret
aam
fcomp
rol
or
cmps
fwait
or
pop
fs
push
ins
push
ins
or
push
data16
ja
je
data16
mov
and
outs
sub
xor
dec
ins
push
add
data16
or
pop
gs
addr16
or
mov
pusha
outs
push
bound
cwde
push
cmp
and
(bad)
in
call
pop
cs
dec
imul
test
js
push
mov
hlt
gs
xor
mov
sbb
mov
add
pop
inc
imul
adc
xor
inc
ss
cmps
or
mov
inc
imul
xor
mov
inc
sbb
sub
xor
pop
push
data16
pop
shr
popa
call
repnz
jp
xor
jne
sub
push
loopne
mov
xor
int
xchg
adc
outs
ins
cld
inc
popa
mov
add
gs
inc
ins
inc
outs
outs
loopne
retf
dec
fmul
xor
pop
cmp
xchg
jno
or
mov
mov
pop
xchg
movs
cmps
dec
scas
xchg
pushf
push
jns
jbe
pop
xor
adc
inc
push
into
push
rol
inc
adc
jne
xor
push
mov
push
add
call
jp
les
ins
push
(bad)
dec
dec
cdq
test
nop
dec
and
stos
xor
xchg
push
and
jae
cli
dec
dec
adc
and
movs
or
or
xor
xchg
or
inc
outs
mov
stos
call
ja
push
or
loop
dec
or
mov
push
push
cdq
push
pushf
ss
repnz
int3
cmps
mov
mov
scas
add
xor
jno
jb
sub
pop
ins
rcl
push
mov
inc
ins
jp
inc
sub
add
push
dec
ins
push
call
shl
adc
ins
dec
push
add
ins
cmps
out
push
mov
cmps
xor
pop
push
jno
out
or
jg
aaa
xor
push
inc
push
xor
out
inc
ja
or
dec
dec
xor
bound
ins
mov
jo
jne
xor
inc
dec
add
xor
add
add
es
xchg
mov
jo
mov
test
cli
gs
push
sahf
push
ja
add
nop
add
test
inc
dec
bound
adc
xor
dec
jno
outs
mov
mov
arpl
jbe
and
add
ret
out
push
cmp
rol
sbb
pop
popa
adc
pop
push
adc
out
cwde
xchg
fsubp
push
jmp
push
inc
or
in
jb
xor
cmps
xchg
jns
jne
push
or
movs
dec
jmp
fimul
sbb
js
imul
stos
fidivr
xchg
pop
movs
sbb
dec
add
xor
xchg
push
cmp
jo
or
or
lods
fimul
inc
and
push
mov
inc
push
adc
pop
mov
push
or
adc
call
push
arpl
imul
ds
pop
imul
inc
data16
push
nop
or
cmp
xchg
jns
add
xor
pop
movs
arpl
push
jp
sub
dec
jb
lds
js
je
shl
jp
mov
push
(bad)
mov
jb
xor
sbb
adc
je
or
or
mov
gs
xor
inc
inc
addr16
jmp
jbe
jp
inc
sbb
pop
mov
adc
jmp
cmp
pop
xchg
retf
loope
call
adc
mov
gs
inc
into
fcom
inc
movs
data16
sbb
outs
inc
mov
jne
or
pop
push
int3
test
pop
rcl
sbb
add
outs
push
pop
call
dec
push
inc
push
pop
xor
push
or
or
fcomi
es
dec
hlt
push
xor
pop
pop
test
push
bound
jno
dec
test
xor
xchg
sbb
enter
adc
in
ins
inc
and
sbb
out
mov
pushf
xor
nop
scas
adc
dec
inc
pop
fcomp
stos
bound
push
fs
or
outs
add
js
dec
push
dec
movs
inc
adc
outs
outs
inc
jle
adc
push
push
clc
and
push
ins
pop
jbe
jae
push
sahf
xor
aaa
add
inc
xor
cmps
mov
adc
pop
adc
popa
push
ja
ret
push
retf
ins
ret
mov
push
gs
jbe
jno
pop
push
mov
test
push
mov
push
cmps
je
push
fadd
lods
pop
bound
jbe
scas
dec
xchg
les
ss
aam
mov
jae
mov
push
adc
add
(bad)
and
and
popa
jo
pop
mov
jns
out
dec
stos
pop
inc
add
xor
mov
inc
adc
stos
ficom
out
imul
pop
outs
es
and
cmps
ins
ins
mov
xor
pop
xor
push
xor
inc
and
jp
sub
add
or
sbb
inc
sbb
mov
pop
and
push
dec
(bad)
fcom
inc
dec
cmp
mov
and
adc
cmp
shl
ret
xor
ja
push
sub
imul
stos
out
test
pop
push
dec
push
sbb
sub
cmp
mov
outs
fs
xor
jne
mov
cmp
cmps
xor
test
mov
push
xchg
or
jno
into
inc
xor
lds
gs
dec
shr
sub
add
adc
push
jo
add
mov
dec
imul
xchg
xchg
mov
push
sub
jns
pusha
push
add
ss
inc
jbe
cmps
pop
pop
jp
dec
mov
inc
jb
pusha
je
push
and
pop
xor
cwde
jbe
call
xor
ss
adc
push
pusha
sub
fisub
js
imul
dec
push
pusha
cld
dec
in
sbb
xor
js
dec
mov
inc
test
xchg
mov
xchg
and
retf
push
inc
and
fidiv
into
cmp
mov
xor
rcl
push
scas
sub
mov
inc
xor
dec
jp
jne
outs
push
xchg
sbb
xchg
pushf
ins
or
push
test
popa
mov
sub
bound
cs
inc
outs
xor
cmp
jo
je
xchg
push
mov
pop
push
xor
into
push
repnz
mov
cs
xor
inc
bound
pop
sar
pop
ins
add
push
jmp
dec
jbe
mov
cmp
dec
in
add
ror
inc
jo
mov
addr16
mov
or
xchg
imul
outs
jb
xor
inc
push
dec
push
push
push
int3
sbb
outs
es
inc
or
xor
je
sub
push
push
movs
mov
call
xor
scas
dec
xor
out
dec
outs
xor
sub
push
jns
sbb
outs
push
adc
aaa
jo
push
dec
xor
dec
or
mov
or
fsubr
push
push
int3
push
xor
and
xchg
fisub
lock
mov
xor
dec
dec
adc
pop
jo
xor
stos
stos
test
arpl
inc
ins
int3
push
adc
lods
mov
and
mov
rol
xor
push
sub
xchg
jl
dec
dec
inc
push
and
mov
fs
xchg
fld
mov
push
add
dec
fs
inc
bound
mov
push
call
pop
push
fdiv
mov
dec
hlt
dec
push
addr16
jb
pop
aaa
cwde
sbb
retf
les
jne
scas
(bad)
adc
imul
mov
adc
es
adc
jne
push
xor
inc
aaa
js
inc
in
dec
cmp
mov
jbe
or
inc
gs
mov
outs
fwait
(bad)
jns
push
bound
xor
outs
push
or
ss
js
jb
dec
push
jbe
add
je
pushf
xor
jb
jae
fwait
lods
adc
xor
add
pop
arpl
jno
push
stos
xor
jo
add
and
sub
jle
es
xor
jno
jbe
je
inc
jbe
fs
imul
stos
int3
inc
push
rcl
dec
nop
xor
jns
jp
je
and
imul
leave
fsub
inc
arpl
sbb
outs
dec
inc
outs
sahf
int3
xor
push
sbb
sahf
push
adc
cmps
and
mov
sub
jo
(bad)
xor
clc
push
or
jae
push
imul
sub
or
ins
jle
mov
dec
cmp
push
add
mov
fmulp
mov
(bad)
pusha
gs
fs
jbe
stos
jg
test
stos
xor
cmp
ss
dec
inc
xchg
jno
inc
push
je
cmp
loop
(bad)
xor
jo
lods
jg
(bad)
or
push
push
xor
push
ss
xor
pop
ffree
xor
inc
add
adc
and
in
je
mov
cli
dec
je
push
es
xor
and
push
add
or
and
dec
pop
dec
jbe
mov
ss
xor
mov
cmp
aam
hlt
data16
dec
pusha
xchg
imul
(bad)
dec
and
push
push
dec
push
imul
sbb
inc
push
push
and
ret
ss
push
imul
mov
imul
push
dec
loopne
or
dec
stos
lods
xor
mov
dec
cmp
or
shr
jno
sbb
push
dec
ss
popf
mov
mov
xchg
inc
inc
push
outs
and
fdiv
inc
mov
sbb
popa
cwde
clc
shr
je
push
dec
add
push
sub
shl
mov
les
adc
in
xchg
add
push
jne
xchg
jo
and
aaa
push
push
fimul
pop
into
jne
dec
push
call
inc
outs
push
jae
pop
sub
test
les
pop
push
jp
test
pop
and
xor
bound
dec
dec
and
dec
xor
sbb
out
push
cwde
or
fwait
sbb
push
mov
sub
inc
adc
xor
ror
nop
adc
add
jne
inc
pop
aam
add
jb
push
push
push
pop
inc
inc
fs
adc
dec
ret
inc
jge
push
and
xor
inc
imul
push
ja
jbe
pop
mov
mov
push
dec
push
je
add
mov
and
cmps
sub
xor
mov
push
lods
push
xor
xchg
mov
pop
jno
cmp
arpl
mov
mov
sub
es
fs
xchg
xor
mov
test
dec
add
or
adc
inc
mov
adc
dec
ret
jb
inc
sbb
push
xchg
mov
es
xor
mov
inc
je
push
xor
fcom
cwde
xor
bound
xchg
push
sbb
mov
test
jle
gs
dec
push
push
adc
inc
cs
push
sahf
rcl
xor
jl
jo
jo
test
dec
jle
(bad)
jl
ja
jns
and
shl
sahf
dec
cs
popa
add
add
cdq
and
fs
and
add
adc
push
pop
sbb
or
dec
cdq
xchg
mov
xor
fsub
in
fs
and
sub
add
sbb
dec
ins
lock
adc
inc
and
rcl
ins
repnz
ficom
leave
xchg
ins
inc
add
popa
pop
xchg
mov
xor
adc
imul
sbb
or
push
aad
cmp
cli
inc
sub
dec
xor
dec
data16
fisub
pop
jae
gs
inc
push
or
bound
pop
or
mov
cwde
and
sbb
inc
div
sub
inc
push
inc
dec
push
inc
dec
ins
ds
bound
push
inc
xor
pop
jae
neg
aam
call
jns
push
dec
sub
int3
push
push
inc
xchg
mov
arpl
sub
add
push
jb
cmp
and
sub
push
or
sub
push
es
test
mov
es
cmp
dec
pop
dec
cld
xchg
mov
inc
inc
jae
push
test
mov
jmp
adc
es
sahf
push
inc
rcr
xor
inc
push
aaa
inc
pop
and
xor
sub
xchg
mov
scas
xor
icebp
inc
popa
dec
fs
js
push
push
sub
jle
jne
lods
inc
xor
je
dec
inc
push
popa
fwait
leave
mov
outs
data16
stos
and
sub
cli
enter
jo
mov
pop
inc
or
ins
inc
data16
jp
sub
movs
and
movs
mov
movs
inc
inc
push
call
or
push
mov
inc
shl
jne
sbb
movs
push
or
push
nop
not
inc
and
loop
inc
pop
or
pop
push
add
daa
mov
push
mov
jne
xor
ds
inc
xor
push
ss
add
xor
dec
outs
cmp
popa
cmps
imul
push
scas
and
adc
dec
adc
mov
outs
push
mov
adc
or
dec
dec
aad
and
mov
add
xor
jno
into
imul
movs
or
xor
xchg
and
push
test
xor
dec
leave
jo
pop
out
push
push
inc
outs
and
lea
test
jo
inc
in
imul
push
dec
bound
dec
test
push
inc
cmp
inc
xchg
inc
neg
adc
inc
movs
mov
cwde
inc
call
adc
sbb
inc
aaa
cmp
jmp
test
jne
push
jae
push
dec
push
dec
push
arpl
outs
cmp
retf
cli
or
ret
dec
imul
stos
mov
enterw
push
popa
push
mov
adc
inc
push
xor
push
xor
dec
dec
sub
scas
shl
int3
addr16
xor
and
mov
movs
out
mov
xor
push
data16
xchg
push
imul
xchg
aaa
add
add
loopne
aaa
ins
sbb
mov
imul
ret
scas
dec
cdq
inc
inc
addr16
xchg
inc
sub
ds
sbb
ins
push
cld
push
mov
cmp
xor
mov
or
ror
inc
push
inc
out
pop
push
sub
je
jae
ins
out
xor
inc
add
ins
test
jbe
outs
mov
ss
inc
or
push
sbb
push
cwde
push
fs
ss
dec
mov
out
cmp
mov
add
inc
xor
push
sbb
or
sbb
push
push
and
fbld
bound
inc
imul
test
pushf
bound
sub
cmp
jo
shl
loop
fwait
nop
retf
push
cli
xchg
cmps
lods
mov
xchg
xchg
add
jo
mov
inc
push
push
adc
lods
mov
ins
add
inc
lock
push
outs
dec
and
push
inc
cmp
cs
rcl
ja
add
ja
into
aad
ins
loop
push
dec
lock
lea
add
mov
pop
pop
xchg
push
mov
mov
push
inc
loop
and
push
add
push
mov
push
ss
push
ds
xor
js
or
test
fs
dec
mov
push
push
jne
pop
mov
sub
add
mov
mov
lods
pop
inc
fs
xchg
jecxz
add
cmp
add
push
pusha
add
sub
dec
in
inc
inc
pop
mov
jb
inc
add
bound
sbb
xor
push
es
and
pop
enter
push
lock
clc
scas
es
dec
sub
dec
outs
aaa
mov
sbb
push
aaa
retf
add
adc
sub
ret
dec
enter
lock
push
add
push
dec
pop
push
mov
inc
aaa
sbb
push
ss
aaa
ja
dec
outs
add
inc
cmp
mov
inc
or
and
hlt
xor
rol
or
mov
xchg
gs
dec
fs
scas
pushf
sahf
fist
add
pop
enter
ins
ret
shr
out
xor
dec
bound
or
in
imul
clc
xor
js
daa
add
add
and
add
push
lods
dec
jbe
fisttp
sub
jns
jl
push
adc
popa
cdq
aam
bound
pop
(bad)
push
push
(bad)
(bad)
and
xchg
xchg
pusha
inc
ins
inc
and
add
aad
arpl
dec
xor
test
xor
jl
push
jle
dec
jae
fs
add
lods
sbb
push
push
inc
push
(bad)
adc
dec
dec
and
jbe
pop
mov
fiadd
sub
push
cmp
clc
out
push
loopne
inc
push
xor
dec
push
jp
xor
lods
ja
sub
hlt
push
jp
push
movs
je
leave
ins
adc
sbb
or
xchg
stos
loop
test
dec
pushf
test
sub
cs
xor
shl
xor
inc
fidiv
outs
push
push
adc
xor
push
xchg
push
xor
xor
inc
test
inc
js
cmp
ret
ror
fs
or
jle
pop
or
and
push
cmp
pop
lods
cmp
arpl
outs
inc
push
mov
sub
jo
fs
sbb
jbe
in
movs
add
adc
dec
add
pop
data16
xchg
adc
pop
sub
and
xor
mov
data16
call
aam
data16
push
pop
outs
inc
cmp
and
push
imul
xchg
sbb
scas
push
xchg
mov
ret
(bad)
fs
xchg
les
cld
leave
test
push
dec
popa
dec
sbb
stos
sub
xchg
or
xchg
call
imul
push
mov
xchg
jno
ins
adc
out
adc
fst
or
sbb
mov
jae
dec
pushf
ss
movs
xchg
dec
or
std
int
ins
cmp
dec
push
inc
fadd
or
push
bound
cs
cmp
gs
sbb
and
cmp
ja
outs
add
push
loopne
jae
push
dec
inc
aad
xor
cmp
(bad)
fimul
push
dec
push
jmp
arpl
out
push
push
sbb
push
cmp
xchg
sub
aam
aam
pop
xor
mov
mov
xor
mov
sbb
cs
adc
inc
jo
push
test
rol
data16
imul
div
push
mov
or
or
cmp
ds
inc
fisttp
push
push
xchg
data16
jne
fs
push
aaa
mov
popa
inc
ret
jmp
inc
dec
jl
cld
and
xor
dec
dec
ins
push
addr16
cmps
mov
mov
push
push
adc
test
inc
add
inc
push
dec
mov
push
xor
inc
jae
imul
jno
dec
add
sub
xor
les
jle
or
xor
imul
adc
es
bound
jae
dec
jns
and
pop
outs
dec
push
mov
xor
ins
inc
and
adc
jo
push
xor
and
test
into
add
and
xor
mov
add
xor
aaa
inc
imul
jp
ret
mov
push
xor
adc
pop
dec
js
dec
jo
mov
fdiv
inc
dec
fs
bound
sub
ins
xor
sbb
push
adc
sbb
pop
fs
pop
(bad)
cmp
jl
push
inc
push
popa
push
xor
jae
test
mov
jo
sub
pop
add
push
add
pop
push
call
add
ins
arpl
xor
outs
sub
and
xchg
imul
jbe
cwde
aam
or
push
clc
xchg
and
dec
push
div
jb
ss
sbb
xor
test
or
pop
mov
sbb
pusha
or
mov
mov
fs
xchg
push
aam
ret
in
test
dec
dec
or
addr16
imul
adc
inc
and
mov
ja
int3
and
fdivr
jbe
mov
inc
dec
inc
inc
xchg
mov
push
inc
dec
inc
or
dec
sub
fidiv
cmp
push
ins
adc
cmp
push
dec
and
test
jns
push
jns
inc
in
xor
adc
jle
fs
sub
push
test
add
mov
mov
rol
dec
jp
out
push
xor
and
movs
xchg
bound
mov
dec
imul
clc
xor
outs
fidiv
aam
aaa
or
jo
ss
je
jae
jp
xor
inc
xor
dec
add
xchg
imul
dec
dec
push
jno
mov
fisub
movs
rol
je
push
imul
mov
out
sub
jo
cmps
mov
xchg
ins
je
cmps
and
movs
push
pop
cdq
fmul
test
out
arpl
outs
imul
imul
dec
dec
je
push
bnd
jne
add
aaa
es
xor
nop
mov
test
mov
add
push
jle
inc
add
mov
and
inc
call
sub
inc
in
dec
imul
or
enter
fidiv
mov
push
jns
gs
and
enter
bound
add
push
adc
ror
aaa
dec
in
test
int3
adc
and
mul
push
ss
call
mov
imul
shl
xor
add
pop
fmul
inc
jno
push
in
or
dec
(bad)
mov
mov
jne
dec
dec
inc
mov
inc
xchg
xor
cld
inc
inc
xchg
pusha
xor
loopne
dec
ss
inc
push
bound
pop
fiadd
push
jbe
dec
out
push
cmp
addr16
dec
aad
pop
mov
dec
mov
je
xor
xor
aad
mov
xchg
and
push
nop
sbb
ins
ins
or
xchg
lds
xor
repnz
retf
and
jo
jae
fwait
adc
inc
xchg
xor
dec
sub
jp
sub
test
add
push
adc
jbe
retf
or
dec
mov
dec
inc
xor
mov
ja
push
rcl
inc
mov
and
push
or
loop
aad
sbb
cs
add
mov
cmp
jle
sbb
clc
outs
push
push
mov
or
es
xor
push
jbe
xor
or
retf
push
dec
mov
ins
aaa
or
outs
mov
dec
dec
inc
add
fcom
or
test
out
jb
jbe
push
sub
xchg
push
or
push
ja
xor
xor
and
push
imul
push
call
add
jbe
xor
or
pop
adc
pop
aad
data16
jb
xchg
mov
pop
clc
or
xor
or
and
push
ds
stos
dec
pop
and
inc
jo
stos
or
xor
pusha
and
jecxz
stos
push
imul
rcl
push
cs
xor
push
dec
push
gs
dec
lock
hlt
dec
pop
dec
xor
mov
outs
adc
cmp
out
xchg
or
aaa
xor
mov
xor
pop
jb
push
je
sbb
bound
gs
cmp
pop
add
mov
jo
fs
ja
jle
adc
lods
inc
shl
aaa
shl
imul
jne
or
push
dec
sub
addr16
ja
jbe
aam
adc
or
jns
int3
push
mov
gs
add
dec
jbe
inc
dec
push
adc
or
adc
xchg
test
cmp
pop
mov
inc
fidivr
cmp
aam
and
sub
ja
adc
sbb
ja
pop
movs
outs
pop
push
data16
push
and
xor
add
rcl
les
bound
adc
into
push
jne
pop
dec
dec
pop
test
ss
dec
gs
inc
test
pop
aad
mov
dec
inc
pop
jb
push
aaa
mov
inc
dec
inc
sbb
cmp
ss
sub
pop
sub
push
and
popa
movs
push
pop
popa
push
shl
mov
dec
mov
inc
outs
or
mov
push
adc
adc
xor
mov
int3
xchg
xor
inc
xor
jmp
xor
js
ins
push
gs
sub
adc
or
call
not
pop
xor
push
push
or
ja
arpl
push
imul
test
inc
js
sbb
pushf
hlt
ss
push
mov
clc
cmp
outs
inc
xchg
sbb
add
inc
bound
dec
and
ss
mov
fimul
xchg
ins
dec
cld
xchg
inc
sub
inc
adc
xor
repnz
data16
scas
add
call
or
mov
or
nop
jb
add
pushf
pop
test
les
xchg
popa
mov
inc
jno
or
scas
mov
cmp
dec
inc
push
fs
sbb
or
cmp
cmp
mov
jmp
add
adc
jo
ins
xchg
nop
addr16
pop
push
xor
adc
mov
sbb
inc
cmps
xor
pop
adc
jp
dec
push
mov
jo
pop
xor
arpl
mov
cs
sub
dec
imul
dec
in
loopne
mov
push
inc
and
pushf
and
inc
mov
aaa
arpl
imul
pop
push
push
push
inc
dec
dec
inc
xchg
add
xchg
lods
imul
pop
adc
mov
mov
dec
jb
push
jbe
xor
rol
xchg
ss
dec
inc
xor
in
adc
push
mov
jbe
or
or
push
jg
jle
pop
test
je
fs
fs
push
sub
movs
xchg
sub
and
or
add
mov
and
xor
add
push
push
pop
push
xchg
nop
retf
mov
inc
adc
push
xor
xor
ja
sub
add
adc
push
cmp
dec
jo
dec
pusha
sbb
sar
inc
add
xchg
dec
aaa
dec
ja
pop
push
nop
push
mov
pop
inc
outs
jl
fs
push
and
fimul
cmp
js
push
adc
jns
dec
aad
fiadd
dec
push
ins
aam
fsub
dec
jb
mov
loopne
les
mov
push
push
mov
push
sbb
fs
arpl
sbb
cmp
lock
fs
push
xchg
and
pop
pusha
sub
sar
pop
je
cmp
stos
mov
add
inc
push
sahf
jo
add
cld
push
sub
mov
ins
cmp
jmp
pop
adc
adc
dec
or
jl
inc
dec
xor
mov
je
push
call
inc
dec
jo
popa
xchg
add
adc
idiv
pop
inc
loope
pop
aaa
test
and
sbb
call
push
inc
cmp
addr16
push
jecxz
fs
ss
dec
inc
dec
fs
or
outs
imul
add
jo
jle
gs
jno
inc
add
inc
pop
ins
les
mov
enter
addr16
inc
(bad)
mov
imul
nop
dec
test
jno
into
popa
push
inc
xchg
call
pop
bound
inc
inc
imul
cs
adc
ss
pushf
imul
and
dec
inc
or
or
ins
dec
aad
loopne
push
jae
push
clc
dec
mov
test
xor
pusha
jne
push
fidiv
js
pusha
pop
mov
push
cwde
gs
sbb
dec
movs
fdivr
aam
mov
xchg
sub
in
or
xchg
pop
xchg
xchg
mov
push
outs
push
loope
mov
or
pop
and
push
enter
add
mov
mov
dec
pop
push
sub
js
xor
outs
enter
neg
push
dec
cmp
lock
ss
inc
fidiv
jb
outs
dec
aad
dec
push
ror
ret
dec
retf
add
mov
dec
dec
movs
inc
hlt
add
loopne
pop
inc
add
ins
ins
adc
data16
movs
sub
aaa
push
jns
stos
or
jp
cli
cs
jb
push
push
cld
imul
push
cmps
mov
imul
dec
jbe
inc
das
push
fld
push
push
adc
jb
sbb
test
ins
js
ja
sub
dec
imul
adc
xor
inc
pushf
dec
or
cmp
test
sub
les
test
aas
cld
jno
push
pop
js
cmp
dec
outs
call
mov
fsub
call
in
mov
dec
shl
and
je
push
adc
mov
inc
arpl
dec
inc
jmp
dec
ins
xchg
adc
les
mov
ds
xor
sub
add
cmp
add
jmp
add
xor
xor
(bad)
sub
xor
xor
push
cmp
xor
ffreep
dec
cmp
dec
outs
je
and
add
add
shl
and
outs
xor
ins
jne
adc
dec
sbb
arpl
push
push
xchg
sub
jae
test
push
adc
pop
pushf
xor
push
xchg
mov
xor
add
push
mov
dec
push
inc
out
cmp
inc
aaa
push
xor
retf
push
test
mov
js
mov
push
je
inc
dec
dec
nop
push
ins
or
adc
sub
movs
imul
mov
dec
jp
in
xor
call
lods
popf
push
push
adc
push
jbe
dec
push
xor
aaa
jo
pop
pusha
fimul
js
push
jl
jmp
add
add
je
dec
fisubr
icebp
xor
inc
dec
in
jbe
jno
dec
adc
sub
pop
int
inc
outs
cmp
pop
xor
cmp
dec
dec
data16
test
aaa
mov
mov
ins
cli
rol
popf
lock
add
adc
push
and
lods
jp
inc
push
inc
add
in
xor
fiadd
imul
or
sub
jbe
mov
enter
xor
add
enter
test
(bad)
ror
and
jle
sub
lock
inc
add
enter
push
bound
add
ds
data16
loop
ss
sbb
movs
dec
mul
push
add
mov
cli
arpl
sub
int
jns
gs
test
and
rol
pop
dec
jp
data16
mov
shl
jae
int
clc
popf
jbe
dec
outs
push
jno
out
pop
cwde
jae
or
dec
dec
sbb
add
xor
inc
push
mov
aaa
es
pop
dec
mov
outs
pop
inc
aaa
xor
imul
bound
aaa
or
dec
outs
outs
dec
mov
inc
or
dec
fsubr
push
mov
es
call
dec
jbe
mov
push
inc
retf
xor
imul
dec
push
sub
sub
imul
inc
ins
inc
xchg
dec
mov
popa
es
push
mov
aaa
lods
cwde
jo
in
push
jae
xor
mov
inc
push
push
xchg
cdq
push
push
sahf
outs
mov
sbb
sahf
gs
adc
cmp
push
push
xor
pop
add
xchg
jo
cli
fisubr
stos
cs
inc
addr16
mov
sub
xchg
pop
xor
xchg
jbe
je
call
aad
sub
dec
sub
mov
xor
retf
test
pop
imul
inc
gs
mov
inc
aaa
mov
inc
outs
push
inc
bound
mov
fild
loopne
mov
xchg
test
push
outs
inc
xor
dec
inc
test
adc
or
ja
xchg
inc
add
add
pop
in
rol
dec
sub
xchg
mov
es
push
(bad)
xor
jmp
outs
push
cwde
adc
pop
xor
push
inc
adc
sbb
inc
mov
mov
add
stos
out
xchg
mov
adc
outs
fs
push
xor
xchg
inc
add
test
jl
fs
je
xor
sub
dec
outs
xor
mov
call
pushf
jae
push
nop
imul
into
push
ins
ret
aaa
(bad)
addr16
push
dec
pop
ins
lods
inc
add
js
test
pop
xor
jbe
or
add
jle
shl
les
xor
call
pusha
aaa
sub
cli
push
retf
arpl
add
movs
xchg
call
dec
int3
les
ins
imul
ret
mov
(bad)
fidivr
cmp
sub
cmps
mov
xor
sub
mov
adc
jae
push
or
adc
ror
push
jbe
loop
inc
sub
dec
xor
pop
add
inc
je
push
xchg
cli
push
and
inc
push
push
bound
in
xor
in
xchg
pusha
and
push
outs
inc
popa
jb
xor
sbb
push
aaa
or
adc
jae
inc
xchg
sbb
test
jle
push
pushf
bound
dec
jbe
lock
xor
ret
xor
loop
adc
outs
shl
xchg
mov
push
push
jno
push
inc
add
fsub
pop
pop
imul
dec
je
add
push
inc
hlt
cli
add
enter
push
cmp
jb
push
outs
addr16
xor
push
enter
inc
inc
call
dec
pop
stos
imul
enter
push
shl
mov
xchg
cmp
adc
xchg
dec
jb
ss
test
jo
in
and
pushf
pop
mov
shr
shl
dec
js
sub
pop
or
sub
push
pop
sbb
sub
xor
ja
dec
dec
bound
add
movs
jmp
push
and
xchg
push
xchg
inc
push
push
aam
mov
pop
int3
inc
push
or
or
push
push
jb
aaa
cmps
adc
jo
out
mov
adc
gs
movs
adc
xor
push
pop
(bad)
jb
pop
fldenv
fdiv
jo
xor
mov
int
or
add
push
pop
or
jmp
addr16
lods
dec
fsub
loop
bound
test
push
cmp
and
push
ror
mov
jno
or
addr16
imul
inc
(bad)
push
and
test
and
inc
into
push
nop
push
pop
dec
cmps
jae
mov
outs
fld
inc
mov
imul
cmp
stos
inc
cmp
cli
and
arpl
jmp
adc
dec
movs
mov
or
je
js
(bad)
aad
add
mov
and
es
loopne
push
and
sub
jp
fisubr
inc
les
dec
shl
mov
push
inc
bound
xchg
push
loop
push
push
out
inc
test
adc
dec
xor
outs
(bad)
or
pop
cmp
test
dec
xor
test
fcomp
scas
aaa
mov
bound
and
jl
aam
dec
push
dec
inc
outs
add
add
add
fadd
inc
jecxz
fiadd
mov
enter
dec
or
pop
call
cwde
(bad)
inc
mov
mov
pusha
in
xor
dec
push
cli
aaa
js
inc
xchg
or
aaa
imul
cmps
xchg
fs
push
mov
sbb
xchg
imul
jo
pop
xor
loop
sub
fidiv
push
and
add
push
and
sub
sbb
aad
lahf
mov
push
jo
pop
(bad)
or
xchg
push
ds
push
pop
daa
mov
push
or
enter
sub
push
cmp
bound
loopne
push
add
and
xor
xchg
mov
or
sub
adc
push
push
arpl
mov
mov
inc
movs
bound
push
sbb
cli
or
add
jae
dec
lods
push
and
imul
adc
add
test
jo
mov
push
push
xor
call
in
add
les
movs
ror
adc
inc
push
outs
bound
ss
xor
push
push
cmp
inc
bound
aaa
sbb
xchg
rcl
data16
sub
push
fimul
test
dec
or
add
adc
and
aam
or
dec
add
lea
dec
cwde
push
push
push
inc
jns
pop
add
pop
jne
add
inc
ins
add
pop
pop
add
or
inc
sbb
cmp
je
inc
and
push
cmp
inc
push
in
xor
xchg
push
adc
dec
not
addr16
adc
jae
adc
fimul
sbb
jbe
mov
sub
ins
nop
xor
mov
inc
inc
gs
popa
shr
jmp
inc
pop
push
inc
fs
inc
fiadd
or
or
clc
bound
leave
mov
je
ficom
shl
dec
xor
dec
outs
loopne
xchg
jne
xchg
xchg
int3
and
or
popa
sub
xor
pop
aaa
inc
dec
clc
ins
mov
dec
push
fcmovbe
cmp
mov
test
fiadd
inc
inc
mov
stc
push
dec
ins
arpl
push
ins
data16
xor
or
jl
cmp
fwait
test
lods
push
inc
xor
clc
push
jno
xor
pop
push
test
xchg
adc
fwait
test
or
push
outs
dec
adc
shl
lods
pop
adc
xchg
rcl
dec
popa
mov
jne
inc
imul
or
dec
dec
test
dec
ficom
add
or
lods
sub
push
mov
push
dec
das
push
sub
push
inc
(bad)
stos
jbe
pop
dec
fdiv
ins
jne
jmp
lods
mov
push
jb
dec
mov
dec
xor
loope
mov
dec
push
ins
addr16
add
mov
imul
arpl
aaa
or
or
test
gs
fs
cmp
add
dec
jno
sub
cmp
jmp
and
lock
jp
inc
(bad)
or
add
clc
push
inc
dec
imul
dec
mov
addr16
push
inc
pop
movs
push
(bad)
mov
or
jne
outs
test
adc
inc
arpl
data16
fsub
jns
mov
inc
(bad)
fmul
outs
mov
dec
je
push
push
movs
ja
push
jns
test
fwait
push
popa
dec
call
enter
push
adc
jbe
div
inc
outs
je
sbb
popa
pop
test
ss
sub
mov
xor
fisub
push
add
movs
xchg
jle
add
jo
and
mov
js
push
xchg
xchg
cmp
inc
imul
call
rcr
cmp
hlt
cdq
cmp
mov
jo
xor
cs
sub
xchg
add
inc
dec
inc
xor
add
xor
cmps
xor
push
mov
pop
dec
dec
aam
mov
add
inc
push
cld
js
in
dec
add
and
inc
fld
jo
mov
stos
inc
pop
bound
pop
imul
and
or
pop
or
inc
or
pop
xchg
pop
and
arpl
ins
nop
popa
(bad)
and
imul
call
xor
bound
push
or
add
pusha
ds
inc
out
jno
ss
sub
inc
xor
pop
mov
push
sbb
sbb
xor
js
dec
je
not
mov
xchg
mov
push
push
js
jbe
test
movs
(bad)
clc
push
sar
dec
inc
call
push
inc
sbb
mov
add
add
test
dec
jae
xor
or
add
mov
jmp
les
test
arpl
sub
dec
je
hlt
sub
ins
pop
sar
gs
xor
push
ret
and
add
pusha
inc
mov
aaa
dec
pop
xor
mov
dec
je
aaa
dec
xor
or
sub
cmp
jb
dec
les
stos
jb
mov
js
popa
outs
add
sbb
jbe
sub
(bad)
adc
dec
or
movs
dec
xchg
push
fcom
mov
fs
push
js
xor
cmp
mov
mov
xchg
sub
pop
mov
xor
inc
inc
fimul
inc
cwde
sub
mov
call
cmp
rcr
js
loop
dec
adc
cwde
int3
inc
and
mov
inc
aaa
aaa
push
inc
movs
js
dec
ret
gs
ret
sub
loopne
pop
xor
jo
je
popa
push
jns
xor
fmul
imul
cmp
inc
add
dec
pop
ins
dec
aad
push
sbb
bound
in
push
and
je
pusha
mov
shr
hlt
call
ret
lock
ja
inc
inc
xor
inc
push
push
push
mov
and
push
inc
inc
or
loopne
push
and
les
or
je
sbb
and
ins
ss
fsub
cmp
(bad)
loopne
lods
push
into
imul
jno
inc
push
dec
inc
mov
(bad)
jo
inc
sub
push
push
jp
sahf
ins
push
pop
aam
ins
pop
inc
ret
leave
sub
pop
xchg
stos
mov
xchg
arpl
sbb
jno
sbb
lods
push
ss
inc
je
sub
call
inc
shl
push
xchg
push
xor
sbb
or
test
fmul
in
inc
adc
jp
adc
ja
xchg
jbe
dec
movs
inc
fcom
push
(bad)
push
add
test
sbb
jne
adc
inc
jp
xor
cdq
int3
pop
xor
xor
or
sub
or
test
cwde
jbe
addr16
test
clc
enter
mov
pop
in
push
add
inc
ins
xchg
enter
rol
imul
xor
shl
test
call
movs
jb
dec
and
int3
mov
dec
mov
mov
out
sub
sub
add
dec
inc
mov
inc
inc
push
pop
popa
(bad)
push
mov
inc
adc
pop
ficom
cmovno
add
mov
xchg
pusha
ins
test
mov
test
dec
sbb
jae
jbe
shl
inc
pop
inc
push
xor
gs
xor
and
sbb
pop
sub
push
jae
mul
dec
add
push
xabort
jne
or
jno
push
cld
xor
arpl
cli
movs
pop
inc
cmovl
add
(bad)
pop
dec
imul
push
loop
xor
sub
inc
xor
outs
es
push
xor
mov
ins
push
outs
bound
adc
cs
into
inc
push
dec
inc
add
jne
push
mov
mov
adc
push
xchg
inc
js
test
outs
arpl
inc
clc
dec
xchg
fs
out
and
mov
dec
jb
pop
jo
icebp
push
jo
xor
dec
inc
push
clc
popa
push
add
add
xor
add
mov
or
dec
cmp
jne
or
mov
xchg
sub
pop
add
lods
adc
and
dec
movs
stos
pusha
add
aam
mov
push
cmp
ja
outs
js
ret
inc
and
arpl
jne
jbe
fsubr
retf
les
inc
xchg
loop
inc
ins
jb
gs
xchg
mov
mov
sbb
dec
dec
mov
xor
outs
mov
inc
xchg
and
push
in
cmp
push
pop
sub
dec
ins
push
inc
mov
popa
jle
stos
rol
inc
ror
cmps
loope
fdiv
and
push
mov
push
imul
push
sbb
loop
pop
or
ja
enter
aad
fs
les
es
loope
jne
ret
mov
push
add
inc
jl
xchg
stos
cmp
push
ins
pop
push
mov
push
inc
bound
push
dec
cmp
pop
and
mov
in
inc
add
sub
jb
(bad)
cld
push
shl
jb
pop
icebp
sub
adc
inc
push
xor
fidiv
jo
fcmovu
push
add
xchg
push
imul
mov
inc
imul
test
dec
inc
push
sbb
mov
push
add
xor
sbb
sub
add
popa
cmp
or
mov
pop
push
xor
js
inc
add
pop
xor
(bad)
rcl
push
shr
pop
test
test
dec
loop
jp
ja
lods
push
cwde
xor
jb
push
xor
xor
dec
push
(bad)
jmp
in
sub
adc
es
ins
and
out
jns
mov
cmp
pop
xor
dec
dec
popa
xchg
jns
(bad)
or
sbb
mov
fnsave
scas
dec
xor
rol
ss
add
mov
pop
outs
ds
pop
inc
bound
enter
mov
jno
les
push
inc
push
ret
imul
add
(bad)
in
nop
in
adc
sbb
xor
test
dec
xor
adc
call
xor
cs
cmp
inc
sub
pop
sub
jo
outs
ja
cmp
arpl
rol
popa
aaa
inc
sub
and
inc
shl
and
popa
inc
inc
test
push
adc
aam
mov
pop
dec
gs
fs
and
ror
mov
imul
dec
ret
mov
push
ret
(bad)
cli
dec
imul
pop
dec
aad
push
pop
loopne
ins
xor
mov
stos
dec
ss
push
or
movs
mov
sub
adc
int3
mov
das
stos
add
sbb
push
add
mov
retf
push
push
dec
push
outs
xchg
xor
inc
push
xor
cmc
or
and
outs
fs
inc
push
sbb
fadd
push
xor
push
ja
mov
cs
or
fs
inc
and
les
ret
in
and
fwait
dec
pusha
cwde
in
pop
inc
inc
das
inc
and
xor
retf
inc
jne
mov
inc
sub
adc
add
gs
xor
push
rol
xor
add
push
bound
mov
cmp
bound
retf
fs
mov
jns
shl
push
inc
and
and
add
push
nop
inc
ins
xor
cmp
lods
xor
(bad)
jae
fisubr
aaa
add
inc
jbe
fdiv
push
cmp
mov
dec
sub
pop
imul
inc
dec
pop
shl
add
or
xor
out
enter
or
xor
scas
mov
aaa
add
addr16
mov
mov
js
xor
push
js
push
sub
jp
pop
jnp
mov
out
and
add
adc
push
dec
jae
lock
fsub
in
rcr
mov
mov
and
jbe
dec
push
add
sbb
ins
popa
rcr
mov
dec
inc
mov
cs
mov
test
arpl
pushf
mov
sbb
cmp
dec
aad
lods
dec
shr
in
ins
shr
push
mov
mov
sbb
rcl
inc
retf
add
add
aaa
push
push
mov
add
stos
inc
sbb
inc
jmp
je
dec
add
mov
dec
inc
adc
inc
or
inc
imul
sub
ins
push
push
addr16
xchg
push
mov
inc
push
sub
outs
xor
push
push
popa
cwde
inc
push
pop
ja
push
sbb
inc
dec
jbe
push
xor
mov
(bad)
dec
xor
add
push
fs
adc
sub
ret
dec
mov
ss
xor
rcl
add
mov
lds
ss
jp
imul
inc
adc
jo
mov
jne
adc
mov
popa
dec
fs
fs
pop
bound
sbb
add
data16
fcom
mov
add
or
bound
mov
or
push
test
inc
data16
ins
push
cwde
jo
shl
and
xor
push
push
add
sub
jb
or
push
(bad)
loopne
pop
pop
pusha
add
dec
dec
les
push
jmp
adc
in
add
xor
test
aam
pop
mov
je
inc
loopne
dec
dec
shl
mov
inc
pop
mov
jo
outs
outs
inc
inc
push
push
rcl
outs
mov
inc
mov
dec
stos
inc
xor
cmp
jmp
push
inc
jbe
ins
arpl
jp
outs
data16
aam
xor
push
mov
lods
inc
sub
std
je
dec
dec
dec
outs
mov
inc
dec
dec
inc
in
sbb
push
push
clc
fadd
fadd
or
jno
mov
mov
pop
gs
out
xor
js
dec
push
hlt
dec
jbe
adc
test
push
hlt
dec
xor
push
out
inc
pop
shr
les
mov
addr16
aaa
add
sbb
outs
cmp
add
je
inc
inc
into
push
xor
jbe
or
bound
into
mov
sub
mov
xor
popa
inc
xor
js
jbe
ja
adc
push
dec
xor
inc
jne
dec
div
push
jne
ss
push
cmps
cmc
lds
ss
cmp
push
inc
inc
add
js
or
pop
inc
and
pop
push
movs
or
lds
push
dec
(bad)
cmp
jbe
cmp
push
ins
not
dec
mov
dec
call
mov
mov
mov
ror
xor
push
loop
push
mov
mov
sub
or
inc
inc
retf
and
dec
mov
xchg
mov
imul
push
shl
and
inc
ret
outs
push
nop
jae
imul
and
inc
je
or
mov
loop
sbb
fnstenv
mov
out
call
aaa
inc
jne
jno
aad
test
dec
or
lods
mov
fs
ds
or
dec
jb
mov
call
xor
and
clc
dec
imul
loopne
clc
xor
sbb
add
jns
xor
push
es
cmp
jne
mov
inc
outs
xor
fwait
sub
xor
ja
dec
inc
and
dec
add
add
or
and
or
mov
adc
jo
jo
ret
lods
mov
mov
js
or
dec
push
sar
xor
mov
sar
inc
popa
ja
xor
inc
push
loopne
cmp
push
js
sub
jo
aam
inc
xchg
in
retf
inc
add
or
stos
jo
cld
pop
dec
rol
outs
outs
popa
cmp
inc
jbe
pop
ins
cwde
outs
ss
xor
or
ss
adc
push
outs
test
jmp
fs
dec
xor
xor
sub
in
pusha
xchg
shr
ins
and
inc
inc
add
adc
ret
and
add
aam
aam
mov
add
mov
push
push
dec
add
xor
je
add
test
adc
push
fcom
cmp
stos
adc
dec
inc
pop
dec
mov
xor
or
enter
push
mov
int
popa
pop
and
movs
ss
push
add
inc
adc
push
jbe
jl
out
imul
xor
jle
loop
xchg
pop
ret
movs
test
dec
mov
je
in
jns
aaa
add
dec
imul
add
int3
ret
or
test
shr
jbe
popa
fld
or
dec
gs
jbe
sub
(bad)
data16
push
ins
mov
pop
xor
outs
mov
dec
les
dec
sub
jae
and
push
mov
jns
xor
add
push
inc
xor
scas
dec
hlt
dec
add
push
cli
jbe
pop
cmp
jo
cs
dec
xor
dec
mov
and
and
cmp
les
add
adc
sbb
mov
or
cmp
ja
sub
inc
enter
push
jbe
dec
inc
add
push
jp
sbb
or
or
dec
push
ds
or
fisub
push
cmp
leave
mov
sbb
push
retf
or
dec
jne
and
xor
adc
jo
push
bound
mov
and
outs
cmp
push
push
fcomp
push
fcmovb
aaa
xchg
xor
bound
push
xor
pop
call
mov
xchg
mov
push
adc
loope
pop
dec
pop
je
je
ss
retf
dec
ret
call
or
xchg
push
in
je
test
cmp
pop
and
and
or
dec
fs
je
mov
les
popa
cmp
inc
xor
outs
dec
dec
and
cli
cmp
jmp
inc
data16
inc
adc
js
xor
add
and
inc
cwde
xor
xor
dec
push
mov
ss
ins
inc
sbb
retf
and
cmps
pop
and
jo
data16
and
imul
push
ins
adc
sub
arpl
push
ror
dec
jo
sbb
sub
and
js
push
push
adc
mov
push
mov
imul
xor
push
test
or
pop
(bad)
popa
inc
dec
test
inc
ficom
inc
pop
push
xor
push
nop
or
sub
mov
loopne
call
mov
push
add
shl
add
es
(bad)
repnz
bnd
mov
push
aam
inc
sub
adc
ins
xor
add
or
push
and
push
es
add
(bad)
push
ins
fs
or
pop
test
xor
xor
outs
ins
mov
ins
push
cmp
push
sub
add
into
hlt
and
add
stos
jb
(bad)
fdivr
retf
(bad)
add
js
add
xchg
cli
xor
pusha
xor
ja
inc
dec
and
dec
jb
ror
mov
jbe
(bad)
je
test
sub
es
inc
mov
dec
cwde
or
xchg
shr
dec
je
fisttp
sub
mov
gs
sub
jo
add
cmp
push
cmp
xchg
aam
mov
inc
bound
inc
inc
ror
dec
ins
imul
jno
xor
add
sub
or
cmp
adc
bound
dec
inc
sub
jle
adc
or
outs
inc
cmp
dec
lea
sub
sbb
inc
add
cmp
dec
arpl
jb
pusha
jmp
inc
aaa
xor
dec
xor
jo
in
in
mov
cmp
push
inc
or
push
xchg
and
pusha
pop
mov
outs
inc
cli
dec
jbe
loop
aam
pusha
inc
jno
jno
pop
push
loopne
inc
pop
push
xor
addr16
push
dec
je
xor
int
arpl
adc
sbb
xchg
push
pop
inc
test
or
adc
jp
add
or
cli
dec
or
dec
xor
sbb
push
mov
and
or
outs
dec
sub
arpl
xchg
mov
pop
dec
xor
pusha
push
scas
movs
hlt
pop
push
jo
inc
dec
fs
sar
add
push
mov
push
cmp
dec
js
adc
pop
push
jno
test
mov
ins
dec
aam
add
ss
inc
sub
dec
test
ror
and
mov
sub
cmp
push
mov
add
push
push
mov
dec
sbb
aam
adc
xor
adc
rcl
push
xchg
in
jmp
shl
jmp
fidiv
popa
add
add
ret
jne
push
push
sbb
mov
ins
jecxz
jbe
xor
retf
inc
bound
cwde
mov
movs
or
arpl
mov
arpl
xor
jp
mov
push
push
push
ins
repnz
cs
rcl
mov
sbb
add
mov
ret
aaa
push
outs
call
out
push
xor
push
xchg
inc
dec
push
dec
jp
push
enter
hlt
xor
test
ret
xor
mov
sub
dec
arpl
jp
data16
mov
mov
pusha
or
je
push
bound
inc
inc
mov
inc
cs
sbb
jno
push
sub
adc
add
dec
cs
aaa
push
aam
add
sub
mov
inc
jl
adc
into
fs
xor
je
and
inc
push
add
push
push
xor
js
and
push
cmps
sbb
and
ins
mov
jbe
dec
jno
pop
and
pop
ins
je
xor
jne
cmp
push
xor
jne
cmp
jbe
push
inc
pop
push
ss
bound
pop
inc
fimul
dec
js
adc
and
and
push
ss
xchg
ret
dec
inc
imul
fdiv
jae
dec
pop
mov
jns
cmp
rcr
in
push
xor
jne
pusha
fld
dec
shl
js
mov
out
xor
call
outs
mov
adc
js
push
je
adc
jb
sub
test
sbb
add
sub
rcr
add
xor
inc
add
dec
jb
adc
ins
xor
popa
dec
movs
sahf
push
push
jno
in
or
cmp
xor
cmp
pop
popa
pop
ins
jns
inc
fs
pop
inc
in
mov
pop
aaa
in
push
lahf
ss
loopne
jae
xor
test
or
imul
mov
add
repnz
nop
retf
dec
in
mov
add
jne
jbe
test
push
mov
adc
pop
cmps
ja
outs
push
xor
mov
aam
aad
mov
adc
pop
jb
cmp
adc
and
mov
inc
jne
mov
nop
mov
mov
xor
adc
jb
push
cmp
add
dec
add
cmp
call
jae
fist
inc
or
cmp
jno
jp
pop
dec
mov
into
xor
lea
and
xchg
add
inc
mov
je
xor
push
jno
cmps
int3
jbe
aaa
push
shr
out
jp
mov
sub
fadd
test
adc
sub
ss
popa
cmp
addr16
adc
add
mov
push
add
inc
inc
jo
inc
je
std
jb
push
js
push
mov
inc
inc
xchg
fwait
js
xor
stos
mov
pop
push
ins
inc
pop
add
push
jle
cmp
outs
xor
dec
xor
je
or
xchg
jno
mov
clc
pop
mov
xor
inc
ja
inc
inc
push
push
inc
push
mov
inc
test
inc
call
loop
xor
xchg
pusha
adc
xor
dec
add
pop
inc
jb
dec
inc
pop
inc
adc
ins
inc
xor
push
sbb
sbb
inc
ret
pop
jmp
arpl
ins
in
nop
inc
sub
cmp
push
call
push
inc
pop
outs
push
xchg
adc
dec
div
test
dec
popf
pop
inc
mov
mov
mov
mov
xor
popa
or
popa
mov
call
pop
bound
mov
xor
push
xor
xor
ss
mov
fdiv
gs
mov
xor
xor
adc
bound
inc
pop
xor
cmp
push
fs
add
cs
dec
sub
outs
outs
add
mov
inc
and
cmp
outs
js
xor
ss
and
scas
ins
stos
xor
push
mov
add
test
jno
ss
push
inc
cld
xor
sub
xor
xchg
call
call
sbb
mov
push
push
sub
push
sub
push
dec
call
dec
ins
cwde
push
gs
xchg
xchg
mov
pop
bound
loop
xchg
fs
pop
jle
and
mov
fmulp
and
adc
outs
jp
adc
adc
popa
dec
outs
retf
ror
mov
outs
inc
pop
adc
and
push
mov
inc
bound
xchg
push
dec
adc
sti
lahf
mov
(bad)
xor
jb
outs
inc
mov
push
push
imul
inc
test
mov
jo
pusha
js
jo
xchg
xchg
dec
push
or
push
in
fiadd
add
or
or
jle
data16
xor
xchg
sar
sub
push
push
dec
push
xchg
movs
es
data16
popf
ror
bnd
jae
xor
adc
dec
push
outs
push
dec
loopne
jl
or
sbb
dec
int
mov
adc
(bad)
xchg
sbb
shr
jle
xchg
rcr
cmp
push
adc
bound
xchg
fmul
cld
dec
inc
sub
or
inc
dec
fs
fst
aam
dec
dec
bound
test
movs
out
push
mov
or
rcl
push
pop
imul
mov
or
test
retf
sub
and
cmps
push
fs
rcl
mov
fsub
cdq
test
push
pop
outs
dec
inc
add
inc
mov
or
dec
ja
stos
and
and
imul
xor
js
push
lock
inc
imul
xor
xor
ret
(bad)
dec
or
xchg
mov
ins
cmp
outs
(bad)
inc
cmp
push
push
imul
mov
inc
jno
or
and
pop
pop
adc
int3
inc
mov
add
cmp
dec
sbb
ror
pop
cmps
addr16
jo
jp
dec
push
call
push
ror
mov
dec
dec
inc
or
call
in
outs
je
data16
inc
es
xchg
clc
cmp
cmp
call
mov
je
jno
sub
inc
push
xor
bound
pop
aam
add
ins
cmp
pop
adc
pusha
aaa
push
dec
xor
cmp
pop
and
add
ins
add
and
jp
test
mov
(bad)
cmp
push
cld
push
in
inc
pop
cli
dec
xor
dec
imul
pop
and
xor
sub
push
cmp
sub
pusha
jbe
xchg
inc
xor
jp
jno
push
fidiv
sbb
and
xor
sub
outs
dec
je
or
pop
clc
sub
xchg
xchg
push
cld
push
loop
push
rol
fs
push
pop
or
(bad)
pushf
arpl
mov
cmp
dec
pop
ins
push
js
popa
xor
add
aam
xor
cld
sbb
mov
bound
xor
cmp
loop
push
ins
jb
test
inc
inc
push
push
dec
push
dec
cmp
outs
pushf
jns
inc
arpl
aaa
push
xor
inc
imul
jns
push
inc
mov
inc
jb
dec
xor
inc
and
cmp
cld
add
mov
data16
je
rol
push
sub
xor
cmp
gs
es
test
shl
retf
outs
jecxz
dec
dec
arpl
call
popa
outs
or
sbb
sub
xor
push
jo
dec
ss
ror
dec
push
or
sbb
gs
outs
ins
es
int3
jp
mov
loop
jo
outs
je
dec
mov
test
push
sahf
xor
call
push
sub
lods
or
cmp
add
test
gs
sbb
and
mov
push
push
call
movs
popa
mov
sub
leave
outs
call
jne
jp
inc
jae
pop
or
push
fs
sub
xchg
xor
inc
xor
push
xor
push
inc
pop
loopne
dec
test
add
xor
daa
test
xchg
ds
jb
jp
out
xor
xor
sub
sbb
call
push
in
add
out
mov
inc
push
enter
or
push
adc
push
push
rcr
or
inc
inc
inc
push
xor
dec
sbb
jne
mov
mov
push
or
xchg
ss
jb
mov
dec
stos
jbe
movs
push
cmc
cmovp
outs
outs
xor
movs
sbb
push
push
dec
dec
les
pop
mov
lds
loopne
jne
mov
inc
dec
loopne
xchg
loopne
hlt
mov
rcl
mov
int
and
ficom
dec
add
mov
jle
lock
or
push
fadd
outs
jo
push
bound
clc
pop
xor
(bad)
push
out
dec
imul
adc
adc
sub
sbb
ins
xor
push
test
jp
sbb
pusha
inc
mov
popa
adc
ret
sbb
inc
add
push
dec
push
je
outs
lea
push
loopne
xor
dec
cmps
dec
ja
and
xor
lock
push
retf
xor
xchg
mov
lock
fwait
ret
ins
jns
inc
ins
xor
dec
or
mov
mov
mov
and
xor
jbe
ins
and
xor
push
or
xor
mov
fs
add
inc
mov
retf
js
ins
data16
jns
inc
adc
sub
push
or
data16
js
dec
ror
mov
xor
add
jo
push
sub
push
loop
imul
es
in
mov
shl
dec
xor
push
push
movs
pop
and
push
(bad)
sub
push
inc
push
jno
dec
js
ins
xchg
mov
or
or
and
mov
fidiv
xor
sub
or
add
inc
jb
ss
loop
dec
ss
and
lods
ret
movs
je
bound
sub
inc
xchg
(bad)
dec
add
cmp
inc
inc
clc
aad
push
sbb
jae
push
push
mov
push
ins
dec
lea
push
cmps
scas
add
ret
mov
dec
push
dec
adc
and
adc
jb
cmps
pop
mov
xor
inc
(bad)
loopne
dec
les
dec
sbb
pop
push
or
xchg
ret
xchg
(bad)
dec
pusha
or
xor
push
outs
aaa
retf
push
nop
jp
test
adc
add
push
jp
popa
push
je
xor
mov
and
fimul
js
imul
(bad)
(bad)
xchg
loope
mov
gs
pop
jb
mov
mov
retf
inc
bound
push
and
je
dec
add
mov
push
fadd
push
push
xchg
xor
xor
add
out
inc
jp
xor
add
and
jno
push
and
sbb
sahf
xchg
dec
imul
push
push
cmp
in
add
inc
inc
mov
stos
shr
xchg
in
xchg
push
pusha
dec
dec
adc
gs
lea
xor
xchg
adc
and
je
jb
jo
sub
xchg
or
push
jns
add
(bad)
retf
ja
xor
or
add
sahf
inc
imul
jmp
(bad)
jno
push
pop
and
(bad)
inc
sbb
dec
imul
jns
push
pusha
movs
movs
sub
xor
xor
jbe
or
push
in
dec
sbb
loop
lods
adc
arpl
inc
fs
xor
xor
or
jno
or
add
jp
add
push
sbb
add
arpl
adc
push
jns
pop
aaa
fnsave
(bad)
imul
pop
mov
inc
or
out
adc
push
dec
sar
stos
xor
pop
mov
add
push
push
ds
stos
mov
adc
outs
cmp
add
nop
push
cs
cli
sbb
(bad)
jo
push
jns
push
push
sbb
pop
inc
push
mov
add
cs
dec
bound
cmp
pop
ret
mov
jmp
xor
add
scas
and
xchg
dec
sub
mov
gs
and
add
sub
cmp
sahf
sub
aam
push
ss
inc
push
(bad)
mov
add
or
xor
bound
xchg
add
adc
mov
jae
push
xchg
es
mov
cmps
addr16
push
dec
popa
inc
ins
movs
inc
push
adc
and
jne
xor
sub
cli
xor
jne
imul
test
dec
xor
sub
xor
add
bound
ja
aaa
mov
jo
adc
arpl
xor
(bad)
in
adc
xor
adc
sbb
add
dec
push
test
or
dec
adc
add
dec
ins
fiadd
push
pop
stos
pop
inc
inc
inc
cmp
dec
mov
test
test
dec
dec
xor
jnp
mov
outs
inc
es
cdq
xchg
cli
inc
cli
dec
pop
or
push
loopne
sbb
lods
jns
cwde
inc
outs
enter
ss
add
or
inc
ja
cdq
dec
dec
hlt
bound
ror
jne
jo
add
retf
push
aaa
add
inc
push
mov
dec
bound
ret
inc
push
mov
pusha
mov
daa
xlat
ja
cmp
cmp
jp
push
mov
mov
xor
jb
push
rcl
out
push
push
xor
dec
addr16
dec
xor
dec
mov
and
ins
es
push
jmp
stos
add
loop
inc
add
dec
sub
inc
shr
jb
hlt
xor
test
dec
je
pop
push
gs
cmp
add
push
ins
stos
add
xchg
xor
xor
adc
inc
or
and
xor
cmps
pop
aam
call
cmp
or
mov
push
and
or
icebp
dec
mov
jae
inc
dec
pusha
stos
mov
pop
fmul
mov
fidivr
push
push
dec
push
xor
push
fadd
ja
inc
xor
push
dec
enter
pop
stos
push
cmps
xchg
outs
dec
jmp
dec
jae
lods
inc
xor
dec
or
jns
inc
leave
shr
inc
ja
push
enter
lock
imul
les
sub
pop
aad
push
pop
ja
pop
pop
aaa
xor
popa
fsub
outs
bound
jp
dec
sbb
cwde
xor
cmp
jno
inc
inc
dec
push
lods
adc
mov
jle
xor
mov
adc
inc
adc
dec
scas
dec
add
in
test
data16
or
outs
cmps
push
adc
jne
inc
xchg
hlt
cmps
add
xor
xchg
or
and
mov
popa
mov
fs
test
inc
or
add
push
js
dec
jp
mov
push
cmp
js
ror
ins
sub
mov
add
inc
sub
into
dec
mov
and
pushf
imul
xor
enter
dec
add
jbe
loop
push
ins
push
push
mov
dec
sub
xor
icebp
adc
push
push
ds
cmps
in
movs
pop
adc
inc
and
popa
sahf
push
jp
mov
fs
cmp
ret
or
jae
jg
or
dec
inc
jbe
popa
inc
jns
or
add
push
stos
or
and
cs
mov
xor
push
add
xor
sub
ss
or
mov
bound
adc
lea
xlat
adc
xor
outs
movs
sub
pop
js
jno
jo
ss
and
xor
xor
xchg
mov
dec
pop
fimul
js
push
jp
adc
add
pushf
inc
inc
cmp
push
cmp
dec
clc
push
jmp
or
nop
mov
inc
inc
xor
push
call
pushf
enter
int3
call
mov
jp
push
scas
stos
add
into
outs
cmp
xchg
xchg
mov
jo
dec
rcl
ins
add
repnz
xor
bound
inc
mov
in
ins
inc
inc
jmp
and
es
je
cmp
mov
lods
sbb
sub
sbb
and
daa
popa
push
pop
fs
fcomp
dec
and
ret
aaa
sub
jbe
ins
cmp
xchg
dec
outs
add
add
push
dec
push
arpl
mov
push
sbb
mov
dec
xor
push
dec
xor
dec
fisubr
pop
mov
jne
push
cwde
aaa
sub
loope
mov
jb
loopne
addr16
inc
inc
stos
pusha
aaa
mov
mov
out
push
xor
and
jo
jmp
movs
cmp
cwde
or
xor
add
mov
xchg
push
cmp
push
dec
outs
push
cmp
mov
arpl
jbe
jo
mov
xor
push
rcl
mov
cs
xor
sub
sub
inc
in
pusha
pop
inc
arpl
call
test
(bad)
enter
js
inc
mov
jl
mov
dec
inc
push
adc
lods
inc
push
adc
and
stos
and
or
and
push
fistp
cld
push
data16
jbe
fs
test
push
ins
cs
ficomp
adc
sub
xor
rcl
xor
push
adc
xor
inc
pop
fadd
inc
shl
popa
fsub
arpl
push
or
outs
inc
xor
ins
rol
out
outs
push
popa
push
jmp
gs
dec
int3
shr
sbb
cmp
outs
push
sbb
inc
and
(bad)
dec
test
push
loope
aad
jo
pop
(bad)
ins
int
enter
fs
pop
inc
or
adc
out
enter
or
inc
test
daa
add
adc
cli
sbb
push
js
retf
retf
fimul
outs
cmp
ins
popa
inc
ins
pop
xor
sub
stos
nop
sub
dec
inc
out
and
jp
popa
dec
ja
retf
dec
movs
lock
imul
inc
add
jb
ficom
inc
jecxz
fs
inc
inc
cmps
ret
sub
inc
dec
push
popa
xor
dec
loop
jl
loope
retf
ins
dec
and
push
imul
imul
mov
ja
xchg
pop
ret
pop
shl
ror
pusha
(bad)
test
fst
xor
cdq
test
adc
jp
inc
or
inc
mov
dec
add
test
ins
retf
lock
push
dec
mov
push
xor
imul
bound
adc
pop
dec
dec
js
dec
add
dec
inc
or
adc
push
push
jb
movs
nop
mov
outs
jno
div
in
pop
aam
dec
push
adc
mov
aaa
push
loop
stos
push
add
push
jle
dec
push
xor
or
stos
push
pop
pop
in
and
push
cld
push
pop
push
xor
adc
mov
inc
ja
push
dec
mov
fidiv
fs
push
pop
bound
inc
push
xor
and
add
sbb
repnz
sbb
(bad)
pop
ins
imul
jne
mov
aam
mov
push
call
jp
jmp
ja
push
bound
mov
sub
addr16
les
sbb
nop
(bad)
jne
(bad)
adc
dec
sub
mov
jb
ret
pop
mov
push
dec
addr16
ins
sub
sbb
and
add
or
cmp
add
jmp
inc
xchg
add
push
xor
sub
je
add
dec
ss
cwde
mov
mov
push
push
js
arpl
inc
mov
push
imul
dec
fs
stos
ret
lods
adc
shl
sub
dec
cmps
push
adc
inc
cmp
bound
stos
retf
loopne
adc
pusha
push
mov
js
dec
dec
inc
or
or
jo
inc
add
jo
add
sub
sub
dec
shr
dec
pop
sbb
movs
and
bound
dec
pop
(bad)
cmp
jb
aaa
outs
adc
and
call
cwde
xor
adc
push
pusha
enter
dec
xor
inc
xor
or
push
xor
sahf
fs
cld
mov
ja
xor
push
shr
js
xchg
add
stos
aaa
aam
dec
pop
ins
push
mov
inc
imul
push
adc
pop
inc
and
sbb
xchg
or
add
xchg
les
ds
or
inc
loopne
popa
mov
add
or
pop
jle
dec
ja
scas
cwde
push
outs
sub
out
outs
cmp
push
mov
(bad)
dec
ins
mov
imul
inc
push
jo
pusha
std
int
dec
inc
cmp
bound
aad
mov
(bad)
adc
add
sbb
leave
mov
data16
dec
push
shl
gs
cdq
lods
fwait
loop
ja
dec
jl
cmp
mov
push
ss
mov
mov
imul
jns
dec
pop
and
add
xor
mov
pop
outs
test
inc
in
add
movs
imul
cmps
stos
add
push
jo
nop
pop
and
dec
xchg
inc
outs
dec
xor
or
test
and
popa
shl
movs
shl
dec
ins
imul
push
sbb
dec
sub
adc
pop
outs
or
and
fs
or
sub
inc
jns
int3
inc
fadd
mov
sub
add
push
mov
add
dec
jns
inc
jb
bound
sub
inc
dec
mov
inc
add
leave
add
jl
add
fcom
push
ja
scas
sub
cmps
test
sahf
jp
sub
cmp
cwde
add
jno
les
mov
inc
xor
or
inc
je
stos
ins
or
sub
sub
xor
mov
xor
mov
mov
cmps
int3
gs
dec
mov
xor
mov
scas
dec
dec
add
jle
(bad)
bound
inc
inc
ins
dec
push
xor
popa
ins
popa
out
ins
and
dec
jmp
ins
lods
and
or
fadd
shr
inc
xchg
dec
dec
and
xor
fs
and
add
dec
rol
je
dec
add
jne
xor
dec
inc
shl
pusha
dec
xor
dec
jbe
gs
sub
sbb
add
push
aaa
fs
int3
(bad)
ins
popa
xor
inc
arpl
pushf
xor
outs
in
bound
bound
add
imul
mov
xchg
sbb
add
jbe
add
js
test
xor
js
mov
ins
sbb
push
push
lock
cmp
pop
sub
fidiv
push
dec
das
xor
xor
loop
into
inc
outs
push
inc
sub
test
js
jo
dec
push
sub
push
push
je
sbb
popaw
js
push
mov
dec
jno
inc
fs
adc
or
popa
inc
and
test
ins
jp
push
ds
rol
sub
jns
push
xchg
sbb
ins
xor
aad
mov
push
push
push
mov
sub
xor
jbe
jo
xchg
add
mov
mov
sub
(bad)
inc
mov
pop
outs
js
sub
xchg
pop
push
int3
dec
mov
add
js
int3
jmp
jne
jae
xor
push
push
pop
add
loop
pushf
xor
outs
jb
cmp
dec
ins
shr
sub
xor
fiadd
sbb
rol
adc
inc
push
gs
add
je
inc
push
les
ficom
inc
adc
jle
ins
xor
sub
sbb
inc
aad
fwait
cmp
shl
push
arpl
cmps
xor
xchg
jo
jle
aam
inc
rcl
ins
mov
dec
xchg
js
push
outs
pop
xor
or
gs
ins
shl
add
rol
jge
repnz
push
ins
xor
frstor
inc
push
pop
and
pop
push
adc
dec
push
arpl
imul
mov
xor
call
call
push
push
imul
dec
pop
ja
adc
test
sub
mov
imul
inc
inc
cld
push
outs
mov
dec
jb
adc
dec
mov
dec
sbb
jo
mov
xchg
mov
rcr
fidiv
fisub
push
rol
mov
add
xchg
add
xor
repnz
add
xchg
mov
and
and
cs
imul
or
mov
inc
in
or
jo
and
inc
adc
jbe
mov
dec
cld
inc
ins
aaa
outs
hlt
retf
mov
push
jp
les
mov
push
jns
outs
inc
repnz
mov
dec
sub
repnz
or
adc
pushw
ins
xchg
rcl
pop
ins
push
jbe
push
sub
cmp
push
mov
jp
push
add
mov
cs
popa
push
je
cmp
ins
push
test
or
sub
push
dec
or
js
retf
inc
inc
xchg
hlt
adc
jp
inc
dec
js
ret
push
gs
test
dec
inc
xchg
mov
xchg
or
mov
in
inc
cwde
test
pushf
retf
ins
cmp
dec
scas
es
add
lods
inc
adc
push
mov
pop
mov
sahf
mov
arpl
jne
mov
lds
in
xor
xchg
xchg
inc
and
aam
call
adc
or
sub
push
inc
sub
sub
xor
push
push
dec
pop
out
movs
mov
pop
outs
cmp
out
mov
xor
or
hlt
pusha
dec
dec
push
fild
out
ja
push
push
jo
xor
in
ficomp
scas
xchg
jne
imul
ins
xor
stos
in
bound
dec
push
add
add
push
dec
inc
mov
pop
imul
outs
push
dec
pop
inc
test
pusha
movs
shr
and
push
arpl
sub
sbb
rcl
call
ins
es
inc
aaa
loop
pop
add
mov
call
mov
dec
inc
xchg
add
cmp
sub
mov
nop
adc
xchg
jecxz
imul
push
imul
push
ds
sbb
xchg
movs
push
jp
push
push
xchg
or
push
sahf
gs
push
outs
inc
jl
fadd
add
and
dec
jae
inc
sub
push
dec
call
enter
bound
call
outs
xor
fsub
push
inc
pop
jmp
push
cmp
jne
cmps
push
adc
ret
jno
mov
jae
jbe
dec
data16
dec
jae
push
push
pushf
pushf
or
push
es
push
dec
stos
inc
lods
inc
push
add
test
pusha
fdiv
mov
jno
fadd
inc
or
cld
out
inc
stos
ja
pop
jb
ins
dec
dec
push
add
mov
popa
and
stos
add
dec
fidiv
or
hlt
push
pop
dec
shl
push
or
xor
dec
and
dec
push
cld
ret
inc
add
mov
sbb
xor
push
rol
retf
push
aam
inc
push
or
sub
cld
lea
imul
adc
inc
out
push
mov
ror
or
push
dec
push
popa
dec
xor
pop
in
inc
sbb
pop
dec
and
aaa
mov
inc
lods
ins
mov
pop
fs
push
test
pop
test
xor
int3
mov
sbb
jae
push
rcl
xor
ja
push
jmp
inc
test
out
pop
jae
mov
ja
bnd
xor
mov
or
call
jne
push
pop
loopne
and
mov
pop
push
xor
and
data16
call
or
dec
cli
inc
pop
xor
mov
push
hlt
dec
sbb
cmp
ins
pop
fs
sbb
inc
bound
xor
gs
xchg
mov
stos
lods
cmp
inc
stos
and
mov
rcl
pop
dec
xor
push
retf
inc
push
test
mov
or
mov
ds
sahf
push
sbb
and
and
fdiv
stos
test
ret
push
cmp
jl
stos
push
dec
xor
(bad)
dec
add
dec
(bad)
mov
outs
outs
imul
push
ret
sub
xor
call
ficom
popa
ins
push
push
sbb
xchg
or
mov
outs
fs
mov
add
add
dec
(bad)
add
ss
inc
jns
pusha
dec
popa
mov
xchg
or
inc
cmc
or
outs
push
xchg
jle
xchg
adc
push
jae
jo
dec
jns
or
pusha
jbe
xchg
mov
sub
mov
cmp
fwait
xor
sub
xor
sbb
push
les
or
stos
lock
xor
in
or
xor
sub
push
addr16
mov
(bad)
stos
xor
push
pop
jb
or
dec
push
push
xchg
inc
pop
xor
pusha
pop
cmp
xchg
xchg
sub
push
(bad)
jp
xchg
mov
xor
mov
push
push
xchg
dec
ret
ja
dec
movs
jo
jb
jp
jb
xor
cmp
cmc
and
out
mov
das
xchg
dec
push
test
push
ins
test
sbb
push
push
mov
out
and
xchg
scas
cli
xor
push
dec
xchg
adc
push
push
inc
(bad)
or
mov
mov
dec
pop
xchg
test
imul
adc
sub
or
test
(bad)
aaa
aam
jno
mov
jb
xor
data16
pop
inc
aaa
xchg
js
xchg
push
je
lods
mov
popa
adc
dec
jb
cs
mov
cmp
outs
aaa
inc
int3
ins
mov
push
cld
xchg
push
jae
dec
mov
sbb
sub
jbe
dec
push
movs
mov
adc
or
pop
add
jbe
add
push
ins
mov
and
imul
push
cdq
jb
sbb
nop
out
xor
sub
add
addr16
cli
push
and
jo
inc
imul
fmul
dec
mov
retf
dec
scas
ds
xor
or
inc
enter
mov
jne
dec
mov
xor
into
inc
mov
mov
inc
mov
and
xchg
xor
mov
dec
pushf
inc
push
pop
sub
push
jno
(bad)
adc
xor
data16
dec
jmp
xor
mov
sbb
push
arpl
push
or
push
ins
push
dec
outs
jmp
push
mov
ins
int3
dec
dec
dec
pusha
pop
or
out
xor
leave
and
xchg
inc
mov
xor
loopne
shr
aaa
push
inc
ins
bound
out
scas
adc
test
rcl
je
je
add
arpl
mov
sub
ss
xchg
push
ja
addr16
movs
test
jbe
push
inc
in
push
pop
icebp
push
xchg
je
inc
jno
ins
cwde
fs
push
add
sbb
pusha
aam
dec
jl
xor
xor
or
xor
call
push
inc
push
xor
xchg
shl
ss
xchg
adc
xor
dec
adc
adc
cmps
je
mov
outs
les
and
dec
inc
outs
add
adc
inc
xchg
mul
sub
jae
add
call
dec
jns
pop
pop
pusha
pop
shr
dec
ins
dec
mov
add
jp
popa
loopne
push
add
cmp
int3
movs
mov
xchg
push
les
inc
ins
cmp
xor
arpl
xor
bound
ins
dec
inc
jb
pop
in
mov
cdq
or
push
jmp
cmp
jmp
sbb
imul
push
inc
and
jo
outs
mov
adc
imul
push
sub
lock
sbb
xor
es
shr
xor
(bad)
jp
(bad)
push
push
xchg
test
inc
jle
and
pop
add
add
jo
mov
inc
sub
jp
push
call
cmp
xchg
xchg
push
inc
bound
or
cmp
push
rcl
les
outs
xor
rol
cwde
xor
push
dec
jns
jb
inc
add
push
inc
fdiv
cmp
pop
ins
lods
adc
int3
pop
cmp
add
and
add
cmp
inc
shl
push
dec
add
add
je
bound
dec
ds
loope
retf
push
jae
cmp
xchg
test
mov
aam
jae
push
xor
xchg
jb
inc
stos
fdecstp
dec
out
push
pusha
sbb
ja
jb
lods
jo
add
inc
imul
and
aaa
adc
push
xor
sub
je
mov
inc
add
in
addr16
scas
push
jne
push
loopne
inc
dec
dec
mov
and
dec
sub
pop
ss
mov
dec
jl
adc
jae
gs
push
cmp
add
imul
inc
push
xor
cmp
sub
arpl
push
inc
cmp
adc
sub
cmp
bound
rcl
ins
aaa
gs
pop
inc
dec
xchg
call
xchg
inc
jle
dec
xchg
les
or
inc
in
push
push
xchg
cwde
pop
jbe
ins
lahf
and
sub
push
push
dec
(bad)
dec
add
dec
arpl
cmp
push
sar
dec
dec
xor
arpl
mov
push
outs
retf
push
fsubr
jno
push
sbb
mov
sbb
dec
imul
add
lods
les
push
add
ret
loope
mov
leave
popa
push
out
mov
in
jb
aaa
adc
inc
and
sub
dec
push
addr16
aaa
add
dec
mov
cmps
mov
nop
enter
push
pushf
xor
push
lds
push
sahf
pushw
aaa
or
inc
inc
xor
(bad)
(bad)
sub
retf
mov
mov
sbb
fimul
les
scas
and
outs
rcr
push
pushf
inc
push
clc
cs
adc
xor
cmp
pushf
dec
cwde
mov
lock
je
mov
or
ja
aam
push
xor
and
inc
pop
xor
jmp
dec
dec
dec
push
imul
ins
inc
jns
sub
push
inc
mov
inc
push
lods
mov
jno
xor
inc
jle
sub
inc
dec
div
and
sbb
mov
pop
inc
outs
push
fs
or
push
pop
mov
jns
mov
add
sbb
add
dec
adc
sub
pushf
shl
dec
push
ins
shr
sub
sbb
dec
push
pop
sub
add
or
ins
push
inc
not
push
xor
ja
gs
dec
inc
mov
add
pusha
sub
sub
lods
push
adc
or
sub
shr
cmp
inc
push
sub
imul
(bad)
clc
push
and
xor
dec
or
add
and
add
mov
dec
dec
fiadd
push
call
add
add
call
dec
cwde
push
retf
in
stos
ins
sub
ds
test
jb
test
sar
push
push
inc
push
pop
je
push
cmp
adc
ins
pusha
gs
ins
xor
or
push
test
popa
ins
push
cmps
inc
xor
add
dec
push
xor
pop
inc
dec
dec
scas
lods
outs
inc
mov
push
adc
rcr
mov
and
jl
stos
inc
push
lea
xor
dec
cmp
sbb
adc
and
add
add
dec
dec
ins
js
dec
xchg
ins
xor
xchg
sbb
and
sub
cmp
push
test
sbb
stos
xchg
push
cmp
push
push
dec
aam
and
ficom
shl
pushf
call
dec
test
jbe
cmp
xchg
xor
push
xchg
mov
data16
xchg
add
add
mov
bound
cld
pop
inc
inc
dec
inc
sub
inc
cmp
outs
ins
push
(bad)
ja
loop
mov
jbe
add
pop
jb
sub
inc
and
jae
or
loop
push
inc
add
lea
sbb
arpl
inc
sub
xchg
pop
jo
push
aaa
addr16
adc
ficom
mov
imul
sub
movs
add
enter
dec
pop
and
cs
je
retf
sub
call
adc
pushf
sbb
aad
test
push
push
sub
jp
bound
inc
test
cmps
dec
push
sub
inc
sbb
jp
in
dec
inc
pop
sub
push
ss
jbe
outs
jb
push
ins
div
outs
mov
test
test
push
fwait
leave
rcr
push
inc
dec
push
dec
push
imul
and
shr
adc
outs
sub
ret
pushw
jb
outs
pushf
inc
push
adc
push
ret
mov
loop
call
jle
je
mov
inc
push
fcom
ror
les
sub
fs
out
mov
xchg
add
or
rol
pop
fiadd
bound
mov
hlt
retf
cli
aaa
xchg
mov
add
push
mov
push
retf
lock
jecxz
jns
mov
nop
stos
inc
jb
ret
sub
lods
mov
jo
adc
xor
(bad)
fmulp
add
jno
addr16
push
loopne
fs
call
neg
inc
mov
xor
jb
dec
add
inc
mov
push
push
ss
jp
inc
ins
xor
lds
imul
xor
dec
jle
push
add
sub
push
push
nop
(bad)
fcom
rol
push
ja
push
or
dec
push
push
mov
mov
adc
mov
dec
addr16
xchg
call
outs
dec
dec
popa
bound
xchg
cmps
fs
push
jne
stos
gs
mov
inc
imul
call
cld
jo
xchg
push
cmps
adc
push
jae
imul
imul
push
cmp
mov
ins
push
dec
and
int3
dec
adc
pop
jb
cmp
test
test
jo
xor
pushf
push
sub
pop
or
imul
xor
mov
imul
es
dec
outs
aaa
call
inc
xor
inc
push
adc
add
cmp
xor
inc
(bad)
loopne
adc
dec
push
outs
adc
test
inc
inc
inc
inc
stos
xor
jns
add
arpl
jno
xor
ds
jle
cmp
sub
imul
dec
data16
bound
rcl
mov
or
ins
dec
adc
mov
inc
xchg
pop
sub
inc
test
mov
push
pushf
es
xchg
or
into
dec
ss
pop
dec
mov
xor
pop
cmp
push
add
(bad)
push
leave
or
je
arpl
xor
add
cmp
hlt
outs
mov
inc
dec
stos
ficomp
mov
(bad)
(bad)
jne
push
pop
sub
dec
dec
inc
ret
push
fisubr
mov
sub
cwde
or
or
inc
xchg
pusha
loop
cmp
jne
and
and
pushf
adc
sub
sahf
fs
lods
jl
mov
gs
aaa
push
xor
cld
loop
push
dec
pusha
mov
pop
mov
mov
add
ins
mov
adc
dec
cli
adc
js
push
je
shl
xchg
mov
dec
xor
outs
dec
xchg
jno
mov
inc
dec
dec
imul
xor
cwde
xchg
xchg
fisubr
sbb
pop
mov
push
jne
rcl
cmps
arpl
push
xchg
aam
inc
int3
enter
push
loopne
push
outs
pop
xor
push
and
rol
jmp
aam
pushf
adc
popa
xchg
add
jne
js
mov
and
dec
inc
out
xchg
outs
mov
popa
ja
fcom
jns
dec
push
jno
pop
aad
cmp
dec
xor
jo
test
push
mov
outs
inc
adc
push
retf
popa
push
aaa
jns
mov
push
push
arpl
shl
inc
jbe
xor
das
test
add
fidiv
cmp
sub
xor
or
ficomp
cmp
jb
cdq
add
or
jo
in
bound
pop
jbe
rol
adc
ss
pop
sub
sbb
cmp
outs
push
sub
sbb
mov
pop
fs
jmp
push
inc
inc
pop
jne
ja
add
sbb
mov
adc
jle
push
movs
les
call
and
inc
rcl
(bad)
data16
test
ja
je
dec
push
push
cmp
stos
adc
ret
cmp
and
fcmovb
imul
push
ins
push
aaa
cmp
retf
cmc
mov
jns
jo
push
mov
loopne
push
push
sbb
mov
push
mov
mov
inc
xchg
or
bound
jo
dec
inc
dec
jo
push
mov
int3
push
xor
push
shl
push
inc
mov
loope
into
aaa
sbb
mov
mov
or
rol
dec
retf
aad
adc
jp
push
pop
and
push
push
mov
push
xor
sub
or
ror
ret
pusha
adc
mov
or
jns
push
aaa
push
xchg
push
push
fs
je
mov
imul
out
fadd
jbe
jl
outs
ins
push
les
dec
pop
and
aam
bound
inc
cmp
das
sub
cmp
inc
enter
imul
xchg
cmp
push
adc
adc
outs
adc
sub
pushf
dec
lds
or
jo
ins
mov
dec
es
nop
xchg
xor
(bad)
int
sub
outs
dec
pop
mov
dec
mov
push
push
retf
push
sbb
addr16
mov
ss
ja
push
inc
inc
les
xor
mov
inc
jae
mov
ins
test
push
aaa
add
adc
add
aaa
mov
ins
je
jp
sbb
hlt
push
xor
inc
retf
call
xor
adc
add
jp
test
push
js
arpl
and
push
sub
xor
xchg
push
and
xchg
or
and
popa
xchg
imul
adc
push
cmp
imul
pop
js
or
cmps
mov
jne
inc
sbb
jp
shl
dec
jns
popa
sub
nop
cs
bound
cmps
movs
aad
sbb
sbb
inc
cmp
shr
jno
inc
sahf
pop
jbe
sub
fs
(bad)
retf
mov
imul
push
dec
adc
ins
inc
jbe
jo
sbb
xchg
ins
inc
mov
ss
inc
fs
imul
dec
pop
inc
dec
mov
aad
adc
ss
xor
imul
test
cmp
or
imul
jg
cwde
push
cmp
push
push
xor
xor
jae
xchg
dec
jno
mov
cmp
dec
cmp
mov
mov
lock
inc
xchg
add
cli
dec
rcr
xchg
call
xor
aaa
addr16
push
jae
dec
nop
fs
xchg
mov
shr
xor
xor
add
sub
push
je
cdq
popa
cmp
jp
fnsave
push
sar
xor
add
push
ins
inc
inc
js
xchg
add
jl
adc
adc
js
inc
push
add
mov
pop
je
sub
mov
xor
cli
(bad)
and
jno
push
push
inc
out
js
or
dec
push
arpl
push
mov
inc
sub
add
rol
outs
inc
sbb
push
adc
xor
dec
int3
xor
cmps
cli
movs
dec
inc
fwait
bound
rcl
xor
inc
inc
or
inc
popa
gs
mov
test
ror
xor
push
jmp
xor
scas
aas
or
push
dec
inc
adc
shl
adc
push
add
or
xor
xor
adc
movs
cs
jmp
cmp
shl
jp
lds
loopne
dec
scas
xor
add
sub
mov
inc
cmps
add
pop
push
adc
or
sbb
dec
outs
dec
imul
inc
bound
push
dec
inc
dec
shl
call
inc
sub
mov
xor
xor
mov
adc
mov
and
popa
push
popa
cmp
jb
mov
call
inc
push
jbe
adc
xchg
push
xor
(bad)
cmp
push
int3
push
or
dec
push
add
jle
sub
gs
push
dec
push
(bad)
call
mov
push
out
ins
xchg
mov
push
ins
add
mov
int3
in
dec
xor
outs
ret
jmp
bound
data16
fisubr
sub
mov
jns
sahf
xor
inc
addr16
jmp
sub
sub
or
aad
inc
loop
es
and
aam
mov
(bad)
dec
shr
cli
push
inc
fdiv
sbb
jno
outs
pop
or
ss
je
(bad)
and
mov
push
pop
push
aad
xor
(bad)
lods
dec
cmp
cmp
pop
or
push
dec
xor
into
mov
push
dec
mov
cmp
jne
jns
imul
cmp
adc
inc
mov
mov
inc
pushf
dec
je
add
mov
push
shl
cmp
inc
xor
bound
pop
nop
or
fs
cmp
sbb
adc
add
dec
nop
les
adc
mov
and
add
add
sub
or
push
jl
xor
dec
inc
dec
add
es
mov
inc
push
xor
jbe
adc
adc
jmp
xor
jne
cmp
dec
inc
xor
adc
or
jne
jns
dec
inc
add
jle
sub
js
jp
inc
bound
pop
dec
cdq
lock
jno
xor
aad
push
inc
mov
xchg
add
dec
sbb
push
cs
stos
and
jno
loopne
stos
rcl
or
fsub
pusha
inc
pop
pop
movs
data16
push
xchg
not
adc
int
mov
sbb
add
inc
fs
dec
outs
aam
and
push
mov
test
cld
es
out
fisubr
dec
push
adc
sub
fdiv
jne
and
(bad)
retf
inc
movs
in
repnz
push
fcom
mov
(bad)
ja
shr
leave
jl
pop
ss
outs
add
outs
cmc
cmps
(bad)
inc
test
lods
xchg
outs
js
inc
rcl
and
jne
inc
data16
leave
inc
leave
inc
fs
pusha
mov
cmp
sub
cdq
or
cld
adc
xchg
jo
mov
dec
or
push
cmp
arpl
sub
sbb
pop
inc
(bad)
call
and
aaa
outs
dec
ins
dec
jbe
dec
bound
mov
adc
dec
xor
and
push
fbld
aaa
xor
jo
rol
mov
push
mov
int
push
imul
les
dec
outs
jbe
cmps
movs
jo
fadd
adc
push
test
arpl
dec
es
pusha
out
outs
je
sub
cmp
push
xor
mov
inc
(bad)
aaa
and
mov
push
push
call
dec
jp
adc
add
push
ins
dec
inc
loope
mov
xor
lock
mov
sub
mov
inc
loop
mov
xor
aam
dec
sub
fimul
add
fs
sbb
or
jno
push
clc
aaa
mov
ret
lock
lods
dec
or
mov
pop
aaa
cdq
test
xchg
push
inc
ins
loopne
or
sub
ficom
cs
fadd
or
cwde
inc
ins
add
and
pop
scas
cmps
ds
scas
imul
movs
sub
ror
or
ja
inc
nop
imul
pusha
adc
push
add
adc
jne
js
aam
shr
xor
mov
sub
test
jp
jmp
dec
in
inc
cs
inc
and
mov
imul
dec
mov
mov
xor
dec
jb
dec
es
loope
cli
and
retf
or
xor
lock
ss
outs
shr
loope
sub
inc
ins
xchg
sub
dec
sahf
fs
dec
(bad)
enter
pushf
xor
cs
jb
xchg
rol
jb
xchg
inc
jo
pop
pop
adc
inc
pop
inc
outs
push
repnz
inc
dec
test
cwde
pushf
push
movs
cmps
je
out
push
icebp
xor
je
data16
rcr
fs
dec
ins
inc
sbb
xchg
push
ss
dec
call
inc
retf
xor
je
push
inc
jno
bound
jmp
push
pop
push
cli
or
cwde
inc
and
pop
cli
sbb
ja
add
jb
xor
mov
mul
arpl
push
jp
js
ins
mov
adc
inc
mov
push
stos
pusha
or
push
popa
xchg
push
mov
retf
sbb
jbe
push
push
add
or
jp
xchg
mov
push
or
pop
test
(bad)
push
dec
cwde
ins
adc
aaa
test
enter
push
xor
jb
add
sub
dec
mov
add
(bad)
and
cs
xor
xor
ret
add
rcl
test
je
arpl
inc
sub
pop
test
inc
dec
dec
sub
movs
test
loope
mov
pop
gs
add
je
cmp
scas
and
push
jb
js
push
xchg
dec
js
jb
cdq
push
xchg
es
dec
or
gs
add
mov
ins
jno
jb
lods
inc
ja
push
xor
ja
dec
push
movs
ja
fdiv
sub
sub
ss
push
(bad)
retf
pop
add
enter
lods
pop
gs
push
mov
inc
jns
fs
movs
sub
rcl
dec
shl
ins
jne
add
and
mov
mov
add
mov
arpl
mov
push
inc
sbb
test
mov
lock
or
dec
jp
xor
pop
aam
ins
outs
jns
aaa
adc
jnp
imul
xlat
out
enter
adc
sbb
rol
jo
xor
dec
mov
je
int3
dec
dec
imul
adc
push
jb
mov
mov
xor
bound
mov
mov
bound
mov
mov
jb
bound
jno
push
xor
pop
inc
and
jbe
data16
adc
or
xor
jns
jne
ins
adc
xor
sub
mov
shr
xchg
sbb
xchg
nop
pushf
lods
into
or
dec
sbb
int3
mov
and
or
sbb
jb
mov
sbb
adc
pusha
xor
add
cmp
ins
pop
xchg
pusha
xor
xlat
test
pop
into
push
outs
inc
push
push
ja
shl
inc
int3
sahf
xor
add
fs
or
add
mov
ins
dec
pusha
jmp
mov
xor
pop
jo
mov
call
ret
inc
dec
imul
or
out
and
sub
dec
push
outs
push
add
hlt
test
push
bound
int3
ret
add
sbb
push
fs
inc
jae
sub
lods
dec
pushf
dec
movs
sub
add
test
add
add
push
cmps
inc
imul
bndldx
nop
imul
xor
rol
ins
sub
xchg
hlt
push
call
ficom
test
push
pop
or
ss
jmp
imul
pop
inc
xor
pushf
push
xchg
sbb
xor
frstor
gs
cmp
inc
push
test
sub
jno
pop
dec
test
dec
push
ins
add
in
in
nop
movs
add
xor
test
inc
ret
and
sub
shl
push
mov
fcom
mov
lock
lods
push
add
fsub
test
push
or
out
xchg
xor
or
scas
sbb
sub
push
inc
shr
push
out
sbb
inc
mov
dec
mov
or
cmp
pushf
bound
dec
in
jp
dec
add
test
mov
dec
push
cmp
jbe
xor
fs
pop
aam
xor
xor
inc
mov
pusha
mov
ror
ret
dec
inc
adc
dec
dec
add
add
sahf
dec
popa
push
inc
or
xor
mov
xchg
in
fld
fadd
push
push
popa
cmps
dec
jne
inc
xor
xchg
mov
sahf
xor
pop
and
cwde
add
aaa
fisub
or
clc
shr
inc
fs
pop
jg
mov
dec
ins
cmp
inc
fimul
or
enter
imul
loop
test
cmp
push
xor
les
sbb
or
dec
dec
ins
push
sub
pop
cwde
jb
add
pop
js
add
xor
mov
imul
je
xor
cwde
jo
clc
enter
pop
or
inc
push
jae
inc
push
sbb
mov
in
ins
outs
xchg
push
shl
jno
pushf
les
jmp
inc
lock
jb
je
ins
inc
push
gs
pop
push
sub
fsubr
popa
mov
mov
or
bound
daa
xor
pop
arpl
mov
nop
jo
push
call
mov
sub
mov
or
shl
inc
adc
mov
dec
adc
aaa
mov
hlt
dec
in
mov
add
jle
bound
gs
mov
push
jbe
call
push
pop
mov
mov
add
loope
dec
mov
jp
lock
push
jp
aaa
nop
fwait
add
inc
cwde
lea
inc
push
outs
dec
dec
add
and
ret
dec
mov
dec
mov
js
jns
or
pop
push
data16
cmp
dec
retf
cmc
imul
popa
xor
rcr
push
outs
jae
push
jb
add
mov
dec
jb
(bad)
movs
push
inc
outs
cmp
push
jmp
fimul
xchg
push
pushw
loopne
mov
dec
xor
mov
dec
xor
(bad)
jmp
jo
stos
sbb
adc
rol
neg
les
mov
xchg
pop
push
arpl
xchg
push
mov
pop
cmp
(bad)
sbb
aam
xor
loopne
jno
push
cld
inc
push
jno
push
es
sbb
push
push
cmp
ror
in
adc
dec
jae
outs
pop
out
jo
ss
mov
les
mov
adc
push
pusha
sub
pop
mov
fist
jbe
inc
dec
push
or
dec
dec
addr16
or
or
sub
xor
ss
mov
push
bound
jbe
pop
fdiv
movs
dec
inc
cwde
inc
xor
and
jbe
inc
mov
sbb
xchg
push
mov
xchg
jbe
xor
pop
add
push
sbb
push
hlt
push
jmp
data16
push
inc
push
cmp
outs
xchg
ficomp
out
push
imul
adc
jnp
ins
inc
aaa
mov
shl
or
enter
daa
or
add
bound
sub
dec
outs
inc
stos
gs
int3
mov
push
dec
mov
push
add
dec
push
dec
push
jb
sub
push
pop
xor
push
rcl
retf
dec
xor
inc
sar
bound
inc
xchg
into
scas
movs
movs
adc
in
ss
xor
cmps
dec
xchg
or
mov
inc
test
push
rol
nop
js
mov
xor
add
cmp
mov
clc
sbb
aaa
cwde
inc
les
bound
push
ins
inc
je
pop
and
mov
xchg
fadd
cmp
out
push
leave
and
test
outs
dec
push
inc
push
push
add
bound
rcl
dec
xor
repnz
ins
jae
call
xor
into
push
dec
jmp
cmps
push
mov
dec
mov
dec
and
sbb
ds
imul
mov
dec
jg
add
fs
push
inc
dec
pop
jbe
sub
jb
je
loopne
out
push
data16
or
sub
ficom
mov
sub
xor
call
inc
mov
movs
mov
stos
aam
inc
add
test
mov
ins
dec
mov
cmp
mov
adc
dec
jp
jo
sub
mov
jecxz
add
push
xor
rol
jp
inc
xor
js
mov
in
push
or
lods
mov
cmps
popa
enter
mov
jae
inc
jbe
xchg
xchg
xchg
jo
sub
mov
es
dec
jb
xor
xor
and
mov
jae
xor
popa
push
dec
ja
mov
mov
add
out
xor
dec
inc
out
add
inc
push
push
dec
inc
add
mov
inc
mov
xor
xchg
in
push
dec
and
push
pop
retf
mov
movs
aaa
xor
jb
inc
cmp
inc
inc
sub
xor
inc
add
ins
(bad)
jne
or
inc
cmp
mov
or
js
jbe
lock
xlat
scas
xchg
jb
jbe
xor
aad
mov
inc
add
sub
inc
xchg
add
inc
dec
pusha
add
pop
mov
dec
sbb
push
jne
xchg
sbb
ins
call
je
inc
dec
push
rcl
adc
xchg
mov
add
jl
dec
push
ins
push
push
sub
xchg
dec
outs
push
bound
or
push
(bad)
ins
bound
sub
xor
inc
cld
xchg
loop
add
cli
cmp
add
pop
push
dec
and
and
fs
sub
mov
jb
mov
aaa
imul
fsub
retf
fs
sub
push
sbb
outs
push
ins
jne
and
inc
jo
outs
sub
mov
popa
pushf
or
inc
nop
stos
imul
add
outs
pop
and
ss
outs
ins
sub
xor
xchg
cld
push
add
or
dec
xor
push
mov
dec
sub
pop
test
or
nop
jb
mov
adc
aaa
inc
mov
js
and
movs
sahf
(bad)
imul
fld
jbe
adc
xor
and
push
aaa
dec
fmul
out
push
jo
mov
push
jne
xor
loopne
enter
push
inc
adc
mov
dec
enter
jbe
xor
xor
cs
data16
pusha
adc
jb
sub
mov
ret
dec
stos
outs
out
test
adc
test
mov
push
and
jo
data16
jmp
xchg
test
mov
mov
push
push
xchg
lock
and
jae
imul
dec
sub
adc
les
pop
xchg
jno
aam
xchg
test
sbb
adc
xor
mov
pop
mov
or
stos
fst
xchg
sub
outs
nop
push
xor
sub
add
jmp
mov
add
or
ss
and
test
mov
(bad)
push
xor
cs
mov
jl
jae
mov
mov
mov
cmp
dec
or
mov
add
add
adc
imul
or
xor
cmp
call
inc
dec
xor
adc
xchg
add
cmp
lods
jmp
data16
jb
pop
xor
sub
mov
cmp
inc
ror
js
sub
adc
gs
inc
cmp
xchg
(bad)
jno
push
mov
mov
mov
add
xor
push
xchg
(bad)
adc
push
adc
ins
adc
xor
jo
fmul
xor
stos
and
jl
mov
shl
push
adc
mov
inc
or
mov
mov
sbb
mov
ror
xor
and
retf
mov
add
mov
int3
movs
or
je
push
cwde
sub
adc
jb
xor
lock
push
sbb
mov
inc
dec
add
mov
cmps
jp
test
ins
dec
and
cs
inc
push
sub
inc
mov
jbe
mov
xor
je
outs
js
movs
je
ins
push
inc
pop
sbb
xchg
and
lods
outs
dec
push
jo
mov
xor
add
add
dec
call
add
inc
inc
dec
push
jno
jb
push
push
mov
adc
inc
rcr
dec
movs
jo
push
popa
fidivr
mov
sub
sahf
dec
push
inc
imul
dec
xor
adc
add
inc
ins
push
inc
imul
cs
jb
push
cmp
test
mov
inc
jne
push
mov
jp
sub
xor
add
add
data16
pop
xor
pushf
push
hlt
mov
adc
pop
imul
sbb
xchg
aam
jbe
outs
sbb
mov
bound
inc
lods
mov
ror
cs
push
retf
mov
fdiv
dec
add
aad
shl
ins
push
inc
add
repnz
lock
fs
cdq
jo
inc
lock
ret
and
push
and
inc
dec
inc
aam
push
mov
inc
bound
fdiv
push
retf
je
sub
bound
push
loope
push
outs
outs
and
adc
out
in
jp
dec
add
pop
dec
je
xor
push
xchg
pop
dec
gs
and
aam
ds
and
add
jle
ss
mov
push
xchg
or
mov
pop
dec
xor
mov
into
dec
pop
push
or
mov
(bad)
sub
loop
push
jae
xor
pop
ret
push
push
mov
xor
add
dec
imul
int3
out
retf
ja
jo
push
or
test
or
test
jb
call
jmp
push
ret
or
adc
call
pusha
cmp
sbb
cld
inc
outs
dec
dec
push
push
push
bound
scas
dec
inc
pop
mov
push
and
xor
xor
add
adc
or
xchg
mov
xchg
push
sahf
ror
mov
adc
push
arpl
fs
int3
xor
adc
mov
cmp
jae
bound
xor
loope
inc
pop
jle
xor
and
into
inc
push
fdivr
xor
sbb
or
pop
or
and
push
push
loopne
xchg
inc
pushf
ja
adc
push
push
push
push
or
pop
xor
pop
sub
aam
inc
(bad)
enter
sub
je
pop
xor
dec
jmp
out
jle
inc
adc
ror
push
fisub
js
outs
adc
dec
and
mov
push
inc
push
out
xchg
sbb
sbb
ja
add
dec
xor
call
jp
sbb
push
test
pushf
jmp
sub
push
add
dec
ret
mov
and
jl
leave
or
sbb
movs
inc
push
dec
dec
jle
aad
mov
sub
inc
inc
xchg
call
jb
xor
js
add
jne
jbe
or
dec
push
je
xor
and
inc
xchg
gs
mov
push
push
xor
pop
jb
(bad)
loopne
or
cld
retf
movs
mov
inc
popa
push
aaa
pop
jne
neg
(bad)
imul
mov
retf
and
xchg
shl
adc
pop
cwde
dec
xor
adc
popa
mov
mov
xchg
loop
jns
pop
add
or
hlt
(bad)
xchg
sub
mov
inc
dec
push
(bad)
fs
sub
and
xchg
and
gs
ins
xchg
mov
add
loop
add
or
add
inc
sub
shl
pop
mov
mov
inc
xor
loope
mov
fs
mov
push
push
xchg
inc
sbb
xor
shl
mov
gs
out
sahf
sbb
fmul
mov
je
push
jo
push
mov
rol
gs
jmp
outs
outs
fs
xchg
push
and
aam
push
inc
outs
or
addr16
xor
push
sbb
test
xchg
outs
push
fwait
dec
sub
jp
mov
sub
push
inc
retf
xchg
cdq
adc
adc
pop
loopne
ss
push
sub
inc
dec
ret
and
jl
or
test
pop
pop
push
dec
les
jb
xor
xchg
ins
rcr
xchg
dec
sub
xchg
enter
imul
jle
and
inc
shl
es
adc
cmp
test
aam
cld
arpl
rcl
adc
mov
push
sub
push
test
cmp
and
outs
js
lods
or
xor
jo
jp
or
add
adc
xchg
cwde
inc
sub
dec
xchg
push
dec
bound
push
mov
ins
dec
jns
pop
ja
inc
repnz
cmp
lock
push
or
or
(bad)
loopne
dec
inc
mov
xor
fdiv
imul
dec
arpl
inc
movs
mov
js
loopne
inc
mov
inc
fsub
or
xor
xor
dec
jno
dec
xor
pusha
or
jp
mov
mov
test
loopne
je
aaa
jbe
inc
dec
pusha
mov
mov
add
cmc
dec
addr16
push
outs
adc
or
push
add
mov
or
sbb
test
mov
sbb
ins
fs
push
inc
retf
inc
mov
aaa
or
mov
dec
arpl
or
mov
mul
stos
push
test
add
push
mov
fdiv
sbb
test
cmp
inc
pop
mov
cwde
xchg
bound
ins
enter
xor
and
xor
mov
pop
pop
adc
test
adc
aaa
adc
xchg
dec
or
adc
aam
or
loopne
dec
retf
jno
mov
xor
xchg
ins
repnz
add
xchg
inc
add
lea
gs
xor
add
and
fidiv
fiadd
add
dec
dec
dec
test
xchg
enter
loopne
loopne
pop
lds
aam
push
cmp
hlt
das
and
dec
mov
loope
stos
inc
push
adc
cmp
bound
adc
xor
gs
test
xor
push
js
sub
jne
jae
fadd
xor
and
push
jno
or
adc
add
xor
mov
jp
jno
ficomp
test
test
push
cmp
push
adc
adc
push
ins
and
movs
add
(bad)
pop
movs
push
cmp
mov
push
mov
push
outs
call
es
jb
and
dec
inc
mov
fadd
or
pop
pop
push
cmps
mov
pusha
push
enter
add
xchg
cli
loopne
shl
push
(bad)
dec
inc
mov
push
lods
out
xchg
mov
je
xchg
jo
jp
imul
jo
push
pop
cmps
and
xor
add
mov
pop
jl
push
cs
adc
arpl
bound
mov
adc
sbb
sahf
popa
dec
xor
jbe
push
sub
xor
ins
mov
inc
xchg
xor
cwde
jae
jp
loop
mov
cmp
push
push
and
jns
sub
mov
adc
jo
in
push
or
inc
xor
ror
movs
push
inc
push
outs
enter
add
xchg
movs
jp
outs
mov
jo
xchg
and
cmp
not
push
xchg
push
and
jno
add
clc
dec
jb
js
xchg
push
jae
mov
inc
push
cmp
inc
enter
inc
cmp
adc
sbb
push
sbb
push
enter
and
test
ss
xor
test
xor
inc
daa
test
lds
test
(bad)
test
sbb
ret
push
pop
lea
push
xchg
mov
xor
push
lods
add
mov
push
shl
add
ins
imul
test
add
ss
xor
clc
add
mov
mov
es
aaa
movs
fs
adc
inc
add
jbe
out
xchg
add
bound
sahf
mov
xor
xor
push
and
out
xor
xchg
adc
push
add
mov
ja
dec
push
inc
adc
and
push
and
imul
lock
jmp
and
cli
data16
dec
outs
xor
or
gs
and
dec
bound
pop
push
xchg
or
jl
jne
test
push
jbe
mov
je
mov
imul
retf
enter
fimul
push
inc
dec
movs
int3
fadd
and
xchg
sbb
addr16
sbb
cmp
popf
xor
add
and
or
jae
push
add
xor
dec
inc
adc
sub
inc
call
pop
sub
jp
loopne
pop
mov
fwait
dec
loopne
inc
ins
sub
dec
mov
sub
push
xchg
nop
adc
stos
sbb
ja
jb
test
es
inc
outs
sbb
jp
inc
cmp
dec
cmp
push
lods
push
js
dec
add
in
sub
inc
cmp
add
sub
add
add
pop
or
sub
or
xor
dec
and
dec
cli
cs
bound
outs
xor
cmp
mov
xchg
xor
ror
cwde
and
gs
cmp
mov
add
mov
mov
push
or
(bad)
inc
dec
dec
xchg
dec
xor
add
xchg
pop
retf
xchg
sub
(bad)
sub
adc
or
push
inc
xor
jbe
movs
push
inc
push
das
adc
mov
push
dec
dec
push
gs
push
clc
inc
mov
dec
pusha
inc
cmp
or
xor
inc
clc
or
and
sub
ror
push
imul
cs
jb
icebp
push
lods
cwde
ins
pusha
push
xor
xor
fsub
and
or
push
or
xchg
lock
xchg
push
nop
inc
jl
and
inc
jmp
push
pusha
leave
loope
add
jo
push
xchg
dec
bound
call
add
jl
mov
shl
dec
mov
shl
int3
cwde
xor
dec
dec
push
add
xor
sub
lock
sbb
ss
xchg
int3
dec
push
push
dec
push
fcomp
test
popa
repnz
adc
lods
cld
push
nop
dec
sub
xchg
add
add
and
das
adc
push
data16
xchg
add
mov
lods
data16
outs
ins
mov
inc
push
pop
dec
push
ja
stos
xchg
aam
inc
add
sbb
js
mov
push
outs
push
push
jp
push
xor
dec
dec
sub
fwait
xor
or
inc
jb
xor
lea
arpl
bound
add
lods
outs
xor
dec
aaa
xor
adc
call
mov
stos
sub
xchg
xor
pop
xor
push
mov
popa
jge
outs
inc
xor
jns
xor
dec
push
outs
mov
inc
xor
jo
pop
inc
jns
or
imul
jne
ror
push
ins
xor
xchg
adc
jbe
inc
push
add
lea
jb
push
jmp
mov
fs
xor
push
dec
cmp
mov
dec
sahf
dec
and
outs
or
or
mov
aam
sbb
imul
inc
sub
mov
fs
dec
push
push
test
push
gs
and
adc
mov
js
adc
push
ss
in
les
dec
aaa
dec
inc
xchg
scas
pop
test
test
and
cs
retf
xchg
call
adc
es
push
sbb
xor
xchg
or
data16
dec
mov
add
loop
or
ss
cmp
ins
pop
test
fsub
push
and
add
add
pop
cld
jp
stos
mov
addr16
dec
and
test
and
ss
data16
inc
sbb
retf
jo
fidiv
pop
push
xor
sub
and
xor
xor
dec
outs
lock
inc
rol
jae
call
mov
bnd
adc
in
repnz
test
outs
dec
mov
jo
enter
xor
outs
nop
dec
sub
push
pop
and
retf
or
fs
(bad)
inc
ja
push
jbe
call
enter
push
adc
pop
ja
push
or
cli
cmp
enter
(bad)
and
push
inc
rol
or
sub
xor
mov
add
push
cmp
mov
xor
test
dec
popf
pop
push
inc
jno
or
xchg
sbb
ds
and
xlat
outs
fdiv
xor
test
jno
sub
jb
xor
sub
loope
enter
adc
mov
and
call
inc
mov
push
scas
cmps
ss
and
sub
shl
fdiv
mov
push
out
pusha
sub
inc
xor
dec
adc
loop
outs
add
(bad)
xor
enter
mov
fs
je
inc
jns
dec
jmp
inc
inc
ja
dec
sbb
test
inc
jo
clc
dec
retf
inc
xor
and
addr16
addr16
scas
mov
outs
dec
movs
push
or
dec
dec
push
cs
push
sub
mov
jne
dec
xor
inc
cwde
add
or
push
imul
push
and
jno
dec
retf
dec
shl
push
push
int3
xchg
ret
and
jb
cmp
push
adc
push
jecxz
fs
push
dec
push
stos
push
push
js
adc
dec
shr
xor
clc
jne
and
mov
(bad)
outs
jne
movs
bound
(bad)
inc
sbb
and
inc
aaa
or
or
jmp
push
ins
xor
dec
push
retf
xor
fs
cmps
and
jne
mov
inc
sub
inc
jbe
and
xor
test
push
push
and
or
movs
pop
xor
clc
js
dec
aad
push
push
cwde
xchg
inc
and
lock
push
mov
mov
sub
mov
shl
sbb
inc
or
out
push
fmul
fs
addr16
call
pop
dec
stos
add
pusha
mov
push
mov
pop
mov
hlt
pushf
xor
add
push
mov
jp
dec
dec
mov
mov
or
imul
dec
add
sbb
adc
dec
jne
and
imul
dec
xor
adc
nop
ins
dec
push
and
imul
fiadd
sbb
lods
movs
lods
xchg
cmp
push
ins
xor
mov
call
and
arpl
or
sbb
or
jle
out
mov
adc
mov
mov
xor
add
inc
fsub
outs
leave
sub
not
push
push
imul
js
mov
ret
inc
lods
test
sbb
bnd
pop
xor
and
pop
push
mov
inc
inc
outs
inc
ins
mov
and
adc
mov
es
jne
pop
sub
or
or
inc
or
push
dec
sahf
push
prefetcht1
adc
cmp
loopne
aaa
push
mov
mov
inc
mov
ins
jl
push
mov
pop
mov
push
sub
inc
push
pop
ds
shr
inc
jp
cmp
inc
popa
xor
clc
push
mov
add
adc
adc
push
dec
es
cs
push
add
or
inc
lods
and
dec
push
jb
bound
ins
mov
inc
mov
ins
js
ins
rol
inc
imul
xchg
lods
inc
dec
fadd
jo
xor
shl
movs
ss
sbb
pop
test
inc
push
push
je
pop
(bad)
rol
xor
scas
mov
(bad)
bound
mov
dec
add
push
xchg
rcl
xor
push
or
xor
pop
pusha
fimul
fs
fwait
pop
adc
pop
les
dec
adc
dec
push
clc
push
dec
sub
ds
ins
ins
adc
js
dec
and
or
or
push
cmp
sbb
(bad)
xchg
jns
nop
pop
add
rol
shr
mov
outs
push
hlt
xor
sbb
inc
ins
jo
pop
push
add
dec
cwde
pop
imul
adc
jp
and
jl
dec
addr16
inc
fsub
loopne
dec
push
push
mov
jns
push
dec
dec
add
pop
xchg
js
jae
sahf
imul
push
pop
imul
pop
test
and
(bad)
mov
inc
movs
mov
data16
mov
test
cmp
gs
dec
mov
adc
push
fimul
retf
xchg
xor
pushf
and
xor
xchg
enter
mov
pop
ins
push
xor
add
cmp
dec
add
fdivr
mov
and
push
add
and
es
nop
jo
ror
jb
rol
enter
add
dec
dec
ins
inc
adc
xor
push
pop
inc
(bad)
jb
xor
int3
pop
sub
inc
ins
es
push
aad
in
dec
cmp
xor
push
inc
pop
fst
or
sub
mov
push
add
sbb
add
addr16
sbb
les
jbe
add
dec
and
xchg
cmps
xchg
and
cmps
cwde
mov
ins
push
xor
bound
cwde
mov
xor
dec
mov
xchg
sub
gs
adc
jl
xor
pop
pushf
add
pop
ins
jge
push
dec
jno
repnz
xchg
mov
push
ins
dec
adc
push
je
adc
inc
adc
add
ins
push
cs
push
ds
pop
test
cmp
bound
test
call
add
adc
inc
adc
dec
pop
inc
jb
push
imul
push
push
cmp
add
fs
test
inc
(bad)
sub
pop
jae
adc
outs
fs
shr
pop
mov
cli
push
outs
xor
call
sbb
dec
push
or
mov
push
test
jne
aad
or
retf
dec
xor
push
and
sbb
xor
xor
mov
dec
push
inc
xor
ja
jae
mov
push
push
arpl
inc
frstor
ret
xor
lds
inc
inc
push
js
push
sub
ins
mov
jb
adc
stos
test
jns
in
xor
dec
dec
ins
pusha
outs
dec
mov
push
add
jne
add
leave
loopne
hlt
push
push
push
mov
sub
pusha
or
cmp
sub
mov
and
push
mov
and
and
push
xor
inc
ret
outs
js
xor
dec
test
dec
mov
sbb
fs
sbb
or
enter
fsub
add
mov
mov
jp
or
push
ss
dec
add
and
sbb
xor
cmps
inc
add
sbb
shl
into
mov
sub
push
pusha
xor
aaa
xor
cmp
or
cli
gs
data16
hlt
ss
jp
repnz
retf
mov
out
lds
jne
mov
imul
dec
mov
pop
push
ja
sahf
add
jo
cmp
imul
ss
stos
dec
push
sbb
ins
gs
adc
mov
imul
mov
movs
outs
sbb
data16
xor
jne
pop
popa
sub
cld
loopne
dec
or
outs
(bad)
jbe
fs
push
jbe
lock
push
cmp
jl
xor
dec
mov
xor
loop
cmp
add
xor
mov
rcr
inc
mov
xor
push
adc
push
inc
xchg
ret
dec
add
loopne
call
xor
imul
add
push
push
dec
je
dec
add
add
mov
inc
jbe
inc
sbb
and
jb
push
dec
add
mov
js
and
outs
mov
xor
dec
jns
dec
push
or
ins
je
jo
sub
jb
hlt
es
push
outs
push
jo
jle
inc
jne
xor
or
aaa
scas
cmps
pop
pop
data16
outs
popa
push
push
mov
sbb
inc
xor
sahf
aaa
ds
inc
jne
dec
mov
adc
adc
sub
jp
xor
mov
xor
push
bound
jb
jp
inc
(bad)
dec
pop
mov
inc
mov
xor
adc
dec
jp
xchg
push
pushf
add
cmp
add
push
dec
call
push
xchg
(bad)
push
ret
mov
pop
push
push
mov
push
fcom
push
jno
jbe
inc
les
jbe
inc
xor
outs
push
inc
dec
sub
xor
xor
xchg
je
pop
scas
mov
popa
ins
add
and
xor
inc
and
fild
dec
jp
out
xor
bound
addr16
jbe
push
popa
sbb
adc
loop
xchg
dec
dec
stos
push
(bad)
sbb
movs
mov
cmp
jo
pop
outs
push
bound
dec
outs
xor
inc
xor
jb
fs
inc
lods
xor
push
jbe
adc
mov
clc
mov
jmp
call
test
int3
xor
push
push
cmp
data16
adc
xor
jb
xchg
fadd
es
mov
jne
out
xor
clc
push
lea
sbb
shr
dec
ins
jb
int3
gs
push
mov
push
scas
xor
and
dec
add
adc
push
lods
inc
inc
dec
push
xchg
icebp
movs
push
push
xor
xchg
lock
cmp
sbb
and
mov
jae
inc
xor
or
dec
xor
and
fsubr
bound
rcr
clc
outs
outs
adc
pop
je
or
bound
fdivr
push
inc
push
push
or
jl
xchg
xor
loope
movs
jo
cmp
adc
or
push
test
inc
or
dec
mov
je
add
imul
inc
adc
out
not
pop
mov
mov
push
inc
xchg
adc
cmp
mov
add
add
cmp
inc
loopne
sbb
outs
inc
push
push
jo
es
push
xor
scas
ins
bound
add
fiadd
or
xor
sbb
shl
push
ficom
cmp
lock
cwde
enter
dec
add
les
(bad)
push
dec
ss
call
call
fiadd
imul
add
or
xor
or
inc
bound
inc
push
sub
call
push
jbe
cwde
ret
je
sub
add
push
cs
add
sbb
int3
pusha
arpl
or
xor
jns
inc
push
dec
or
aaa
mov
inc
lods
jo
adc
bound
outs
xor
xchg
sub
push
add
test
mov
pop
jp
retfw
mov
outs
xor
inc
test
je
push
gs
xor
imul
pop
pop
xor
aaa
add
dec
pop
data16
pop
inc
dec
gs
sbb
gs
jle
or
dec
inc
mov
push
add
jo
jae
dec
dec
inc
div
inc
mov
xor
adc
push
es
jae
sbb
sub
push
mov
mov
or
push
rcl
push
aaa
fdivr
outs
les
sbb
jne
test
bound
(bad)
call
xchg
inc
cmp
outs
jns
xor
jbe
test
call
int
pop
dec
xchg
data16
inc
mov
outs
jno
sbb
cmps
cmp
dec
test
dec
dec
jo
dec
push
xor
mov
int3
lock
xor
push
add
pop
imul
xchg
dec
inc
outs
xor
pusha
mov
cmp
and
fs
jb
mov
push
call
and
mov
loop
pop
outs
fsubrp
mov
dec
push
or
sub
xor
dec
test
adc
sbb
test
or
outs
dec
data16
cmp
mov
into
cmp
push
inc
push
adc
popa
js
ins
add
or
jp
or
xor
cmp
or
fs
imul
push
push
or
cdq
push
and
or
push
jmp
fs
fs
adc
sbb
push
push
mov
xor
xchg
xor
popa
push
jb
rcl
cli
xor
push
(bad)
inc
jo
add
xor
fisubr
ficom
in
movs
lock
inc
push
adc
movs
cmp
fs
push
adc
popa
(bad)
out
bound
push
or
fs
je
pusha
sub
(bad)
in
nop
shl
jns
push
inc
add
test
and
push
inc
pusha
enter
movs
add
test
inc
pop
ins
push
jno
arpl
dec
hlt
rcl
into
push
test
xchg
xor
xor
aam
sbb
mov
mov
pop
ins
xor
mov
dec
aaa
pop
outs
ins
pop
call
inc
inc
and
or
jo
dec
mov
adc
add
outs
cwde
test
pop
jne
push
sbb
mov
push
jl
push
mov
jbe
pusha
jb
ins
add
xchg
and
dec
or
push
arpl
add
shr
jne
lock
mov
test
retf
push
push
dec
mov
push
mov
xor
stos
xor
pop
imul
push
xor
int
ficomp
jo
jns
inc
pushf
push
adc
adc
push
push
push
add
lock
data16
arpl
test
mov
jbe
push
inc
pusha
mov
addr16
test
jmp
inc
movs
bound
or
push
sub
add
fadd
jbe
shr
xor
cmp
inc
fs
mov
or
cmp
or
out
(bad)
ja
je
xor
pop
mov
and
inc
mov
ins
or
dec
adc
jns
add
sbb
push
adc
or
dec
mov
in
fmul
lods
xchg
sub
xchg
push
pop
popa
cmp
xor
mov
sub
xor
or
(bad)
sahf
sub
adc
mov
sbb
fsubr
stos
add
outs
push
dec
push
bound
inc
and
test
mov
and
fild
out
push
jb
fcom
sbb
sub
push
push
clc
or
pusha
dec
inc
dec
jo
push
xor
dec
xchg
mov
outs
out
xor
xor
inc
ins
gs
sbb
dec
pushf
push
and
mov
push
inc
jbe
jae
mov
xchg
rol
cmp
sar
lods
inc
xchg
mov
push
fs
dec
sub
pop
or
and
jne
push
sub
push
xor
jp
lds
inc
jno
mov
movs
add
xor
dec
push
daa
mov
inc
addr16
mov
scas
xor
inc
add
jmp
push
or
movs
lea
and
mov
ins
imul
xchg
fdivr
retf
push
cs
mov
add
sbb
fimul
push
stos
jne
outs
je
and
add
test
popa
arpl
or
xchg
add
push
jb
cwde
ret
jp
push
mov
pushf
ins
jo
dec
mov
ins
mov
and
jbe
pop
jo
sub
add
push
arpl
lock
test
scas
js
jp
or
sub
sbb
jno
push
xor
shl
adc
or
pop
xchg
mov
push
jb
jb
mov
je
or
cmp
jne
adc
add
sub
sub
lds
inc
inc
fs
addr16
ss
xor
arpl
cmp
cs
(bad)
push
bound
lods
mov
inc
loopne
mov
dec
push
mov
outs
es
ss
inc
xor
sub
imul
lods
adc
push
inc
or
sub
jbe
push
and
or
push
sub
test
inc
inc
push
add
sbb
cli
xor
mov
aad
addr16
xchg
popa
test
loope
inc
xor
mov
aam
into
push
adc
xchg
and
add
retf
sbb
push
(bad)
lods
adc
enter
in
xor
pop
push
repnz
daa
aad
stos
push
pop
inc
xor
dec
dec
cmps
inc
cmp
mov
and
sub
cwde
and
lea
mov
adc
sbb
ja
xor
xchg
push
hlt
adc
push
jle
push
push
or
pushf
mov
in
and
aam
js
data16
adc
int3
jo
pop
adc
lods
jbe
and
jp
inc
xor
adc
fmul
sar
add
data16
ret
push
add
mov
test
imul
loopne
shl
push
bound
dec
xor
aam
outs
ins
and
mov
inc
inc
dec
inc
xor
push
mov
and
mov
call
sub
in
and
pop
sbb
test
retf
push
push
or
test
inc
retf
dec
push
pop
jae
or
test
dec
imul
ins
shl
imul
add
cmp
push
aaa
add
or
cmp
jbe
lods
int3
sbb
sbb
dec
push
ja
sub
int3
dec
pop
call
xor
jle
cmp
push
fs
cmp
pop
xor
pushf
add
popf
lock
xor
jno
pop
inc
push
icebp
push
or
cmp
sub
cld
and
add
xor
push
fwait
jbe
push
dec
xor
dec
ret
pusha
stos
retf
fsubr
xor
dec
inc
rcl
or
cwde
add
push
leave
jo
inc
dec
inc
popf
adc
sub
rcl
cmp
push
retf
inc
push
ret
or
xchg
je
(bad)
mov
cmp
push
dec
ins
fcom
sub
or
test
xor
or
inc
push
jp
outs
repnz
dec
rol
push
inc
inc
add
ins
pusha
inc
dec
add
inc
pop
fs
mov
add
mov
mov
xchg
leave
clc
es
js
sbb
jo
push
jmp
jp
push
push
inc
dec
pop
shr
push
inc
push
enter
ins
inc
add
mov
ret
jb
and
loopne
xchg
outs
xor
ret
and
xor
jo
bound
sbb
pop
ins
sahf
add
or
and
cld
inc
or
in
pop
hlt
xchg
test
push
inc
bound
xchg
pusha
or
sub
dec
ins
std
xor
inc
inc
push
ins
add
sub
nop
call
imul
push
adc
add
stos
call
dec
inc
xor
push
outs
dec
mov
scas
into
loopne
pusha
xor
je
pop
and
movs
or
add
out
or
ror
adc
aam
gs
dec
sub
(bad)
push
inc
dec
push
jp
and
test
inc
outs
push
push
sbb
dec
popa
rcr
add
es
and
popf
xchg
ins
push
outs
mov
ja
jae
and
sbb
push
cmp
inc
(bad)
sahf
ins
inc
movs
push
add
sbb
cli
cmp
popa
push
push
imul
outs
ror
ins
adc
loopne
push
xor
shl
fwait
in
xor
retf
aad
inc
mov
ret
cmps
jno
cmp
push
fst
add
aam
dec
pop
fs
add
inc
or
dec
bound
inc
cmp
inc
or
mov
add
push
push
add
add
push
call
or
data16
add
pop
pop
xor
xor
aaa
adc
or
sbb
mov
inc
mov
and
shr
cmp
mov
les
add
xchg
and
add
inc
js
or
push
push
movs
add
dec
jno
push
inc
and
xor
cmps
hlt
adc
fcomp
jns
xchg
xchg
push
mov
dec
push
and
inc
sbb
dec
cmp
mov
jmp
(bad)
xor
dec
push
jp
les
fs
inc
dec
jp
and
inc
mov
add
sbb
push
dec
ret
ret
stos
ja
push
jl
pop
es
int3
push
pop
push
repnz
aaa
outs
jno
push
popa
stos
test
jne
cmp
pop
rcr
loopne
outs
push
jno
push
adc
ins
mov
sub
mov
cmp
jb
pop
push
enter
sub
in
les
mov
data16
push
aaa
pop
add
xchg
dec
cs
mov
inc
jl
xor
mov
push
adc
dec
sub
fs
xor
bnd
outs
inc
call
mov
push
xor
add
ja
inc
xchg
fs
xor
sbb
jmp
fwait
hlt
xor
jne
out
and
push
imul
add
or
pusha
xor
bound
in
gs
or
cs
fmulp
dec
bound
mov
sub
lea
bound
pushw
jl
push
imul
xor
cmp
mov
dec
jp
sub
mov
dec
gs
out
add
fdiv
sub
in
fs
push
cld
and
inc
and
jae
outs
cmp
sub
jl
arpl
es
sub
sub
pop
ror
cmps
dec
in
inc
xor
pop
adc
xor
add
popa
popa
test
ds
aaa
adc
cmp
bnd
bound
test
adc
push
push
frstor
int3
push
bound
and
pushf
fcom
push
outs
dec
dec
aam
aaa
push
fcmovu
mov
imul
push
push
xchg
dec
js
inc
or
sub
sub
add
add
xor
int3
mov
enter
pop
les
fdivr
add
popa
aaa
inc
les
xchg
add
mov
xchg
rcl
ret
test
dec
sbb
jno
xchg
pop
pusha
mov
xor
cdq
or
nop
push
xor
dec
mov
pop
xor
push
enter
xor
and
je
xchg
adc
gs
add
xchg
mov
xor
adc
xchg
inc
loope
mov
add
xor
inc
enter
jns
dec
jmp
mov
push
adc
sub
or
dec
fidivr
or
sub
jmp
push
mov
sbb
cmp
push
outs
imul
popw
or
scas
out
push
addr16
mov
adc
shl
adc
add
mov
or
call
xchg
fst
idiv
xchg
add
popa
adc
test
inc
push
nop
xor
cld
adc
xor
add
jo
sub
into
int3
int3
push
dec
or
je
test
push
adc
push
mov
movs
rol
inc
ins
pop
cmp
add
adc
xchg
sbb
mov
cmp
shl
adc
adc
xchg
pop
or
dec
and
ds
es
cmp
jo
or
sbb
sub
add
push
js
gs
adc
jmp
inc
pop
clc
aam
shl
push
mov
inc
and
sbb
push
jns
push
push
push
sahf
xchg
push
add
push
add
imul
and
xchg
mov
outs
ret
xchg
adc
ror
jns
dec
push
mov
in
push
push
adc
(bad)
fsubr
push
or
fimul
push
js
jbe
or
pop
inc
and
(bad)
and
add
jne
sub
pop
cmp
xor
(bad)
in
pop
and
sbb
outs
sbb
push
push
inc
push
push
sbb
dec
in
push
movs
aam
test
mov
sbb
mov
push
dec
bnd
outs
pop
shl
test
push
adc
sbb
retf
sbb
jp
add
push
push
pop
adc
ss
stos
popa
and
jmp
pop
jle
xor
jne
outs
add
sbb
dec
push
push
or
xchg
xor
dec
outs
push
fs
or
push
sbb
mov
outs
mov
xor
imul
sbb
xor
dec
or
mov
movs
cmp
pop
inc
dec
fcom
test
jmp
fsubr
dec
or
fsubr
cs
imul
xchg
lods
js
hlt
jno
call
pusha
jae
outs
mov
or
xor
inc
cli
(bad)
popa
mov
add
inc
xor
sbb
or
jb
bound
dec
sub
mov
jno
cmp
jo
ins
data16
mov
jns
dec
jae
jo
cmp
sub
test
aam
or
sbb
push
sub
fdiv
jb
push
add
ins
fidivr
mov
push
repz
cmp
add
pop
dec
imul
bound
test
xchg
xor
xor
push
xor
test
fwait
mov
jle
inc
xchg
rol
je
inc
adc
movs
les
dec
push
dec
nop
xchg
xchg
mov
mov
or
outs
push
stos
cmp
or
outs
dec
push
cmp
lods
sub
inc
inc
sub
out
xor
or
fs
adc
dec
pusha
popa
push
jl
sub
inc
push
fwait
dec
or
and
fs
xchg
mov
imul
push
pushf
inc
outs
xor
adc
push
lock
jb
movs
push
sub
ret
jp
mov
mov
jb
jo
mov
cmp
cdq
sub
add
dec
arpl
or
add
mov
mov
adc
push
shl
fs
popa
sub
mov
movs
movs
adc
jo
cs
outs
es
cld
pushf
dec
push
xor
and
cwde
pop
pusha
add
pop
ds
nop
inc
fadd
cmp
push
sbb
add
int3
sub
xor
jne
in
push
push
jns
jp
push
dec
dec
jne
call
push
and
fs
dec
add
push
ss
add
aas
pop
jo
dec
xor
(bad)
sub
fs
out
outs
xor
imul
push
or
push
xchg
mov
in
addr16
data16
adc
ss
add
or
xor
cmp
pop
cld
xor
and
jp
jbe
add
pop
ins
cwde
xor
sbb
ret
outs
jp
dec
adc
jne
push
inc
rol
inc
ds
dec
xor
inc
xor
shl
pop
bound
adc
add
imul
dec
push
xchg
adc
xchg
push
xor
inc
xor
loop
add
test
inc
xor
add
push
pusha
push
test
mov
pop
jo
push
fcom
sbb
push
data16
data16
fst
sbb
inc
sub
test
(bad)
aam
ins
cwde
and
push
outs
inc
jo
test
outs
push
sbb
ins
pusha
rcl
or
retf
adc
(bad)
je
sahf
push
jb
adc
cmp
ins
mov
add
retf
data16
jns
shr
inc
adc
dec
sbb
(bad)
dec
xor
xor
and
repnz
or
inc
ror
ror
pop
mov
stos
push
imul
add
push
xchg
xor
(bad)
cmp
jmp
pusha
and
popa
cld
xchg
inc
xor
movs
push
adc
push
push
push
jl
push
ins
sub
pop
jbe
and
ja
mov
jns
inc
enter
sbb
adc
imul
push
mov
scas
or
xchg
push
dec
push
push
adc
es
dec
movs
adc
cli
sub
or
push
jbe
push
xor
dec
adc
push
adc
mov
rol
or
mov
sbb
sbb
jne
imul
push
push
and
and
cwde
fwait
inc
xchg
or
ins
out
inc
add
and
dec
popa
inc
mov
inc
rol
inc
dec
call
dec
jp
aaa
pop
test
inc
xchg
jb
dec
(bad)
cmp
rol
push
js
fs
and
shl
adc
call
pop
adc
ss
or
fldcw
cmp
dec
cmp
push
xchg
inc
jbe
inc
inc
inc
push
and
push
add
les
xor
push
adc
mov
ja
fs
cmp
push
dec
mov
sbb
dec
xor
mov
jp
push
pop
add
cmp
mov
js
and
jne
outs
ins
mov
test
push
mov
cs
cld
sbb
xor
push
popa
inc
inc
shl
dec
ins
add
or
sub
js
ja
dec
and
adc
test
jo
pop
inc
push
add
adc
sub
lock
mov
dec
jl
xor
repnz
shl
(bad)
dec
xor
out
push
jo
outs
xchg
push
dec
sbb
dec
jbe
pop
xchg
jns
adc
jb
push
ins
cmp
nop
push
enter
lock
enter
add
ins
ins
(bad)
adc
dec
sub
repnz
add
je
inc
jmp
and
jns
push
rcr
and
cmp
ins
adc
lods
dec
sub
pop
add
je
cmp
(bad)
xor
mov
sub
push
mov
push
lds
test
cli
jae
sub
push
les
jmp
sub
dec
dec
push
imul
adc
push
(bad)
js
xor
mov
push
movs
stos
mov
xor
pop
mov
add
mov
jb
push
pop
test
jo
jno
sbb
pusha
ret
sub
or
adc
inc
cmp
pop
sbb
popf
test
push
xor
jne
cld
out
sub
imul
ja
cmps
lea
lock
movs
dec
cwde
dec
inc
dec
mov
mov
add
fsub
dec
dec
xlat
or
outs
xchg
mov
fld
ss
jle
js
dec
popa
jno
outs
xor
fisubr
ins
jo
push
mov
inc
loop
mov
mov
xor
adc
rcr
sub
lods
mov
movs
mov
js
xor
je
push
stos
xor
add
dec
jb
inc
popf
mov
cmp
jbe
add
mov
js
ins
hlt
push
or
xchg
movs
(bad)
xor
jp
rcl
lock
in
mov
dec
add
push
sub
push
xchg
test
pop
push
ret
push
bound
bound
ret
push
jns
fidivr
sbb
xor
push
sbb
stos
adc
xor
xchg
jno
sbb
sub
mov
mov
jb
mov
push
js
inc
pop
(bad)
shl
int3
add
cwde
push
je
or
ins
cmp
push
call
lds
add
ret
sub
outs
inc
jns
rol
in
push
mov
xor
ret
and
jl
mov
xor
rol
adc
mov
xor
jno
xchg
xor
push
jae
add
je
inc
add
xor
mov
xchg
jae
mov
or
push
js
pop
leave
rcl
push
(bad)
dec
imul
xor
xor
inc
push
sahf
push
push
ja
xchg
adc
jmp
push
je
inc
adc
push
data16
adc
aaa
or
bound
xor
jo
pushf
fcomp
adc
dec
mov
xchg
xchg
imul
push
aad
cmp
adc
inc
cmps
and
scas
push
add
movs
aad
shr
inc
and
inc
loopne
cwde
scas
xor
dec
cmp
adc
cs
je
or
cwde
dec
pusha
shr
fsub
outs
inc
mov
mov
and
bnd
mov
retf
jne
cmp
jle
add
jb
inc
pop
imul
add
cwde
mov
mov
ins
mov
js
add
loop
push
mov
inc
loop
sbb
pop
bound
and
ds
adc
xchg
jb
jns
xchg
add
sub
cs
add
dec
out
pop
cmp
push
popa
mov
(bad)
outs
mov
outs
mov
push
addr16
call
imul
test
push
les
outs
inc
sub
push
lods
jp
push
lods
arpl
fs
and
push
push
sbb
xor
test
jb
rcl
stos
fs
test
add
push
je
lock
pop
nop
out
and
pusha
cmp
ins
cmp
jl
xor
xor
sub
cmp
push
push
adc
inc
jp
dec
cmp
xor
bound
or
sub
inc
dec
xor
bound
inc
pop
mov
jle
rol
xor
or
mov
jbe
xor
adc
inc
hlt
popa
fcom
jbe
sub
popa
inc
popa
outs
xor
(bad)
(bad)
pop
fsubr
push
jo
pop
outs
shl
push
push
stos
mov
inc
test
outs
hlt
push
jno
test
pop
add
push
rol
ins
xor
inc
into
movs
jno
xor
ret
push
js
xor
jne
inc
and
adc
and
or
add
sbb
dec
or
mov
sbb
mov
sub
and
out
mov
es
push
pop
imul
call
push
mov
inc
dec
xor
(bad)
jle
push
jns
inc
jb
pop
inc
ret
add
and
ss
stos
or
jbe
xor
bound
sbb
xor
sbb
jmp
push
cmps
inc
gs
ss
sbb
es
jo
dec
sbb
dec
dec
inc
push
dec
cmp
add
imul
jns
jne
xchg
push
int3
and
out
lods
dec
gs
nop
fidiv
and
dec
out
jle
push
icebp
or
add
cmp
inc
jbe
push
fild
inc
sub
imul
add
dec
ss
xor
hlt
add
dec
xor
outs
loop
sbb
pop
and
xchg
xor
or
ror
add
sbb
dec
push
pushf
shr
int
test
lods
inc
dec
pop
xor
stos
adc
dec
dec
push
pop
dec
inc
xor
add
retf
and
hlt
shl
and
int
xor
ss
mov
adc
int
test
mov
jo
data16
add
cmps
hlt
push
xchg
xchg
popa
pop
ror
je
shr
mov
push
ret
js
pop
xor
dec
inc
jb
test
dec
add
repnz
jecxz
xchg
cmp
cs
pop
fisubr
outs
push
push
inc
xor
sbb
cmp
pop
inc
dec
push
stos
push
mov
xchg
push
test
sub
data16
dec
pop
or
push
mov
adc
ins
fs
dec
(bad)
push
xor
xor
add
xor
xchg
ins
push
jae
ss
xor
xor
add
clc
mov
bound
jb
xor
lock
aad
jno
inc
dec
addr16
jbe
jo
mov
outs
enter
push
dec
into
inc
jne
sbb
inc
int3
test
sub
mov
or
sahf
ret
inc
jns
fwait
xor
mov
nop
push
icebp
or
inc
ds
outs
xor
dec
mov
sub
addr16
mov
in
dec
je
jp
sub
je
inc
fs
xor
mov
push
dec
xor
shl
dec
or
push
push
xor
xor
push
dec
or
test
xchg
adc
mov
dec
call
lock
enter
inc
js
outs
out
movs
movs
jo
mov
add
ds
outs
test
cmp
sbb
xchg
push
xor
ins
mov
push
cmp
push
ss
add
mov
push
clc
push
inc
and
jl
add
fdivr
add
push
out
inc
(bad)
nop
bound
or
push
mov
pop
xor
sub
dec
jb
out
push
mov
popa
call
adc
xor
dec
cmp
push
lds
push
push
dec
and
les
or
cmp
inc
jb
mov
pop
dec
pop
loop
outs
jge
dec
push
mov
jns
jns
mov
mov
push
add
inc
cmp
add
inc
fs
aam
dec
sbb
inc
test
and
mov
gs
adc
pusha
mov
imul
sbb
push
push
xor
(bad)
sub
mov
push
inc
jl
xor
inc
pop
dec
xor
jo
mov
nop
loopne
cmp
cmc
xchg
dec
mov
xchg
xor
cmp
push
sbb
and
adc
push
inc
je
addr16
dec
dec
sub
inc
cmp
or
lods
mov
mov
and
add
rol
test
fiadd
bound
inc
cmps
sub
jne
lock
dec
loop
adc
sub
push
xor
or
loope
ins
cmp
loopne
add
add
cmp
lea
gs
outs
jl
adc
xor
inc
jns
cmp
cmp
push
sub
mov
push
mov
and
ret
rcl
inc
push
mov
dec
loope
out
push
push
xchg
dec
jne
out
cmps
fs
sbb
inc
popa
xor
sbb
bound
or
push
mov
or
dec
js
pop
popa
xor
and
sub
pop
xchg
(bad)
xor
dec
mov
outs
cmp
inc
shl
adc
jl
adc
sar
dec
and
mov
xchg
and
dec
pop
call
mov
cli
data16
mov
inc
ins
inc
out
xor
add
add
bound
xor
jecxz
xor
dec
cmp
aam
pop
adc
jo
fst
xchg
or
movs
mov
jb
push
pop
pop
fs
ss
push
js
jb
cmps
inc
jo
retf
jb
fs
pop
xor
push
pusha
test
push
sub
add
push
xchg
int3
inc
sub
and
shl
xor
aam
or
test
push
push
pusha
push
out
xchg
jb
xor
sub
daa
xor
imul
test
xchg
add
mov
sbb
pop
dec
jp
sahf
inc
stos
dec
or
adc
es
push
adc
aaa
aaa
sbb
adc
adc
(bad)
shr
nop
and
sbb
es
aad
add
es
inc
loope
fidivr
in
mov
in
push
call
cwde
pop
shr
xor
push
push
add
mov
out
or
push
inc
adc
push
into
inc
sub
clc
ss
jo
dec
mov
aam
push
xor
adc
jp
inc
and
hlt
push
cs
inc
or
imul
adc
retf
xchg
mov
mov
lods
mov
inc
imul
xor
inc
cwde
loopne
pop
pop
scas
loop
(bad)
popf
mov
xor
inc
lock
push
push
add
cwde
mov
pushf
and
shl
inc
or
pop
push
xor
mov
mov
pushf
inc
add
push
gs
loop
jb
cmps
jbe
and
ja
retf
out
rcr
sar
push
mov
mov
push
pop
add
jo
pusha
rol
rcl
xchg
inc
and
cli
mov
push
mov
jo
inc
or
pushf
cmp
mov
aaa
sbb
dec
pushf
fs
push
mov
aaa
lods
dec
fs
gs
sub
(bad)
les
aam
data16
sub
push
adc
xor
inc
je
icebp
add
and
xor
xor
fs
push
pop
push
push
dec
dec
dec
pushf
push
xor
push
inc
push
mov
xchg
inc
inc
clc
dec
adc
jbe
sbb
cld
push
imul
mov
ins
dec
ss
add
xchg
mov
sub
add
lods
add
or
retf
mov
pop
xchg
jp
xchg
in
cmp
addr16
dec
add
rol
bound
jns
mov
retf
retf
xor
add
and
mov
mov
dec
addr16
push
xor
inc
pop
jb
jae
push
and
dec
jmp
clc
scas
jns
mov
jo
hlt
lock
cdq
dec
cmp
imul
stos
push
(bad)
or
fcomp
dec
push
je
test
inc
int3
data16
jne
scas
and
and
or
dec
inc
loopne
aad
sbb
push
push
or
ins
js
int
js
imul
jp
add
or
or
sahf
add
shl
and
mov
dec
pop
and
(bad)
gs
sbb
pop
and
adc
mov
lods
jo
sub
pushf
push
(bad)
dec
sub
or
push
repnz
xor
outs
push
adc
lods
jbe
dec
jb
ins
adc
sub
adc
mov
dec
stos
xchg
jae
hlt
test
cmp
or
xor
and
and
fist
in
or
out
and
add
call
push
js
jp
movs
lods
inc
pop
xchg
dec
push
push
and
rcl
xor
push
outs
jl
jne
je
pop
adc
jbe
pop
inc
ss
mov
xchg
dec
jns
fwait
pop
sub
and
jmp
imul
jbe
ja
adc
jb
sub
add
xchg
pusha
xor
add
inc
push
jno
data16
outs
aaa
jae
ins
hlt
push
pop
add
or
jle
lds
jo
pop
imul
call
dec
ficom
pop
inc
fs
adc
aam
add
push
xor
cli
adc
push
pop
addr16
add
inc
or
nop
retf
(bad)
bound
push
adc
les
sub
push
inc
xor
sahf
les
mov
jb
push
xchg
xor
push
xchg
ror
jle
dec
xchg
adc
and
gs
sub
mov
add
out
aam
inc
mov
cmps
pop
push
imul
jno
and
xchg
data16
push
pop
pop
gs
mov
adc
sub
ret
jmp
push
add
jp
cmp
cmps
aam
add
mov
dec
add
fidivr
loopne
pusha
xor
sbb
inc
pusha
ins
and
mov
ret
call
jmp
dec
push
push
imul
inc
arpl
inc
add
fisubr
xor
xchg
retf
inc
and
shl
mov
outs
xor
xchg
push
xor
inc
dec
mov
mov
dec
jb
sub
mov
dec
pop
arpl
mov
es
pop
push
add
je
push
ja
add
dec
jb
inc
sub
sub
cld
bound
xchg
add
push
jae
imul
adc
jb
and
xor
ins
cmp
or
push
bnd
push
popa
loopne
push
add
inc
lock
outs
sub
dec
and
retf
mov
add
ss
adc
jp
inc
mov
xchg
addr16
out
mov
(bad)
jb
sbb
xor
dec
inc
imul
outs
bound
adc
fadd
sbb
push
add
dec
lods
popa
push
push
push
ficom
fsubr
jae
push
mov
mov
xor
xchg
pop
pop
inc
add
addr16
mov
pushf
xor
xor
sub
cmps
jmp
jbe
dec
je
push
mov
inc
je
jmp
adc
addr16
add
jo
push
mov
enter
adc
xchg
leave
push
inc
je
lods
pop
or
loop
and
sbb
mov
push
popa
adc
push
xor
xchg
inc
add
mov
pop
mov
push
ss
shl
sbb
shl
jae
dec
push
push
and
jo
sbb
movs
int
push
test
dec
bound
fwait
ss
xor
fs
enter
inc
cmp
cmp
sbb
call
leave
nop
(bad)
jne
ss
clc
scas
adc
hlt
add
or
enter
push
or
and
push
fisubr
and
push
xchg
pop
mov
sbb
nop
jo
sub
sub
xor
mov
and
add
jo
es
rcr
fcomp
sbb
pushf
push
ss
xor
push
mov
lock
push
sbb
test
ret
lock
imul
gs
inc
ins
inc
xor
scas
push
ss
mov
inc
xchg
movs
js
js
push
ja
add
push
cmp
mul
push
mov
rol
inc
adc
cwde
push
mov
add
outs
popa
in
xchg
jno
je
nop
imul
stos
dec
rol
gs
sub
dec
pusha
pop
dec
sbb
xchg
cmp
xchg
gs
rcr
nop
jle
xor
xor
jo
cmp
es
or
aam
sub
jo
dec
xor
cs
push
sbb
push
cdq
add
ja
mov
jno
and
retf
or
dec
mov
sub
add
enter
adc
push
ins
loopne
xor
push
jns
add
cmp
pop
push
stos
and
mov
mov
mov
xor
ss
and
push
and
punpckhdq
and
sbb
stos
out
dec
lock
inc
push
inc
outs
push
push
or
lods
push
add
imul
xor
es
xchg
rcr
adc
xchg
clc
(bad)
dec
fs
xchg
add
nop
movs
adc
mov
(bad)
push
sub
shr
xor
mov
xchg
jb
test
xor
add
xor
and
mov
adc
dec
inc
fisub
or
lock
mov
or
xor
add
xor
and
ror
mov
sub
mov
adc
sbb
sbb
in
ins
mov
popa
(bad)
pop
jae
push
pop
in
push
dec
dec
adc
add
dec
mov
xchg
or
lock
adc
(bad)
jne
pop
inc
pop
mov
jbe
sub
adc
pusha
ins
jl
dec
inc
mov
dec
sub
aaa
pop
or
jns
xor
rcl
dec
push
cwde
sub
ret
dec
cmp
dec
movs
push
ss
push
mov
test
fs
mov
inc
les
jb
adc
es
push
mov
rcr
push
mov
jmp
stos
mov
jbe
dec
xchg
popa
inc
sub
mov
pushf
jle
sub
inc
lods
sub
retf
mov
adc
imul
out
and
dec
xchg
data16
inc
mov
cmp
fs
xchg
jp
outs
cmp
test
jp
mov
es
cwde
and
mov
or
ins
adc
dec
dec
xchg
inc
in
ins
ss
stos
inc
inc
add
arpl
ins
pop
sbb
jp
jle
adc
xchg
cmp
push
sub
imul
push
push
(bad)
aad
out
inc
inc
dec
aaa
pop
mov
dec
je
inc
cmp
clc
aaa
dec
inc
push
dec
xchg
sub
aaa
sbb
xor
dec
add
or
mov
dec
inc
add
dec
ret
mov
adc
xchg
inc
rcl
enter
mov
addr16
aad
cwde
(bad)
mov
dec
and
ss
or
push
or
pop
jo
add
enter
mov
add
cmp
sbb
pop
xor
cmp
push
cwde
ins
test
cmps
inc
scas
adc
shl
dec
xor
mov
push
mov
or
inc
or
inc
mov
enter
push
fwait
xor
popa
lods
dec
add
cmp
pop
ret
jecxz
add
dec
mov
adc
pushf
mov
inc
push
inc
pusha
imul
and
push
adc
gs
pop
mov
mov
fs
xchg
loopne
jbe
push
push
mov
mov
ins
out
push
nop
dec
pop
jb
inc
xor
mov
inc
je
xchg
xchg
enter
les
mov
test
ins
pushf
dec
push
mov
jne
inc
cmp
mov
push
mov
outs
sbb
dec
push
cmp
dec
jbe
pop
ret
push
push
jo
xchg
push
xor
xor
cmp
mul
ret
jle
jno
shr
gs
adc
push
fs
xchg
xor
mov
jns
xchg
dec
js
jo
mov
dec
enter
pop
test
jb
es
or
push
dec
movs
test
in
xchg
push
js
inc
dec
inc
lock
inc
inc
jbe
dec
xchg
push
mov
imul
or
dec
cbw
sbb
push
shl
xchg
mov
pop
(bad)
enter
add
or
in
and
imul
fcom
sub
push
push
adc
ja
ss
sub
adc
and
sbb
cmp
sub
add
sub
mov
inc
push
and
shr
outs
shr
ss
push
xor
xchg
retf
or
adc
int3
jbe
push
jno
cmp
ror
jp
mov
dec
mov
sub
dec
ins
push
push
ror
pusha
js
imul
inc
jo
js
dec
inc
sub
outs
cmp
fidiv
push
fild
sub
ins
pop
add
xor
push
dec
rcl
push
inc
cli
or
aam
or
xor
mov
pusha
fs
or
push
xor
mov
dec
popa
je
movs
fld
ins
xor
sub
jl
dec
inc
adc
xor
into
add
push
add
dec
bound
aam
and
cmps
inc
sub
jmp
cmp
nop
sbb
inc
dec
and
xor
jb
add
xor
out
fcom
mov
outs
sbb
stos
mov
dec
imul
fsub
cli
mov
and
into
stos
inc
and
jb
xchg
inc
adc
inc
add
mov
int3
inc
or
push
xor
dec
push
add
mov
mov
retf
inc
ins
hlt
repnz
adc
add
inc
pusha
dec
xor
adc
push
push
push
xchg
or
adc
sbb
fs
pop
bound
or
push
cmp
inc
pop
je
mov
outs
xor
push
sub
popa
stos
dec
push
adc
js
dec
dec
add
and
jbe
push
jne
test
sub
into
lods
aad
adc
mov
and
ins
addr16
xchg
inc
add
es
and
and
push
jns
inc
sbb
adc
inc
xor
xchg
call
bound
jo
stos
fcomp
addr16
gs
xchg
les
sbb
mov
ss
lock
cmp
popa
sbb
mov
shl
ins
inc
mov
lock
inc
ins
test
popa
mov
mov
call
push
je
push
fs
int3
loopne
mov
jbe
outs
test
mov
shl
ins
ja
add
test
jbe
dec
and
xchg
mov
inc
push
lods
inc
into
into
push
dec
je
add
push
les
aam
mov
sub
or
jle
rol
ja
inc
add
push
push
inc
inc
and
xchg
enter
jbe
mov
je
push
push
mov
pop
imul
ss
push
add
mov
ja
imul
gs
cs
xchg
push
push
push
push
in
xor
jo
inc
div
mov
bound
dec
mov
cs
aam
js
and
push
imul
jo
loope
or
inc
imul
rcl
push
push
retf
jb
outs
pop
dec
inc
and
ret
add
inc
push
aam
cmp
inc
sbb
add
scas
test
inc
xlat
outs
dec
call
push
shr
xchg
sahf
mov
rol
fdiv
pop
mov
mov
dec
pop
dec
sahf
nop
sbb
inc
push
and
movs
sub
or
mov
jo
mov
xor
pop
movs
fiadd
mov
xlat
int
pop
mov
sbb
rol
les
pusha
push
xchg
xchg
dec
cmp
inc
push
dec
or
stos
cmps
adc
jb
ins
ins
inc
pop
adc
inc
or
cwde
cmp
push
xchg
call
dec
bound
cmp
loop
mov
inc
aaa
ins
dec
outs
popf
and
xor
pop
scas
outs
push
sbb
push
outs
je
and
mov
arpl
sub
push
arpl
gs
ins
inc
add
dec
ins
inc
popa
retf
mov
ja
push
xor
shl
mov
cmp
sub
outs
push
push
imul
add
pop
push
add
inc
ins
call
push
clc
inc
fdivr
mov
dec
lods
push
push
aam
or
inc
jo
push
inc
inc
movs
test
mov
jb
jmp
add
pop
imul
pusha
dec
fadd
push
inc
adc
and
fiadd
push
xchg
int3
push
add
cmp
loopne
hlt
fcomp
or
jle
mov
inc
mov
cdq
jb
xchg
add
mov
mov
inc
retf
xchg
sub
jle
push
and
push
jno
hlt
push
sub
push
mov
adc
inc
(bad)
int
add
pop
push
cwde
sub
test
shl
cwde
dec
push
sub
popa
pop
add
dec
scas
dec
cmp
and
or
pop
xchg
sahf
push
bound
rol
push
jae
dec
dec
dec
stos
or
dec
int
mov
mov
add
push
fs
cmp
stos
repnz
mov
push
xor
and
dec
push
fwait
jo
or
nop
outs
fadd
or
xchg
dec
jae
cmp
and
sbb
dec
aad
add
add
dec
inc
add
shl
call
add
mov
lock
cmp
xchg
push
push
xor
push
sbb
push
ret
jns
cmp
or
add
dec
sub
adc
or
inc
push
cmp
and
mov
(bad)
out
push
shr
and
inc
xor
dec
mov
sar
fdivr
inc
inc
(bad)
xor
xchg
pusha
jmp
mov
sbb
or
cli
fs
mov
jae
xchg
js
sbb
ror
addr16
lods
push
add
or
push
addr16
int3
dec
dec
cmp
aaa
sub
or
xor
je
and
leave
sbb
in
mov
push
inc
jl
push
shl
retf
jo
mov
mov
dec
bound
test
hlt
es
mov
xor
les
jle
push
je
ss
ja
imul
lock
aad
push
clc
xchg
push
xchg
adc
jno
pop
or
sbb
dec
inc
add
xchg
shr
cmp
xor
pop
adc
xchg
push
push
arpl
mov
push
(bad)
push
inc
data16
mov
add
imul
pusha
add
xor
cld
push
stos
movs
add
cmp
add
push
xor
lock
add
and
imul
dec
fs
adc
jns
in
test
or
dec
or
add
mov
add
js
push
inc
lea
cmp
push
adc
test
or
and
push
in
retf
mov
int3
push
push
inc
test
fisub
adc
push
push
mov
in
cmp
or
push
push
adc
aam
mov
les
xor
sbb
xchg
inc
pop
les
adc
gs
cmp
pop
dec
cmp
add
ins
cmps
push
push
or
inc
call
(bad)
push
pop
jp
dec
mov
inc
inc
les
mov
dec
mov
sub
out
nop
or
mov
jl
mov
arpl
push
mov
jl
outs
dec
mov
test
pop
mov
add
ins
pop
pop
ret
push
ss
jo
or
call
inc
sbb
sahf
inc
and
push
xchg
push
mov
push
push
jb
shl
(bad)
push
inc
stos
dec
mov
out
xchg
outs
adc
adc
int3
dec
mov
(bad)
mov
and
outs
ins
push
aaa
mov
test
or
movs
push
cmp
cmp
add
ret
and
xchg
jl
pop
in
push
mov
int3
push
pop
jo
sub
fs
mov
pop
mov
adc
xor
test
data16
enter
dec
jp
aaa
push
dec
cmp
mov
sub
neg
push
jb
aam
scas
ss
dec
push
je
ja
cmp
dec
pop
dec
and
adc
inc
inc
jmp
inc
sbb
xchg
inc
jp
outs
inc
push
or
inc
jnp
inc
inc
push
je
jp
add
xchg
push
jne
jne
inc
arpl
mov
fs
test
cs
or
sahf
push
xchg
sub
push
jo
movs
rol
mov
(bad)
jbe
pop
and
bound
cli
aam
mov
pop
movs
stos
sub
or
add
mov
test
gs
outs
pop
xor
push
and
clc
dec
adc
inc
xlat
mov
dec
shl
hlt
inc
loopne
es
push
inc
call
shr
sub
push
inc
xchg
je
xor
cli
sub
xor
xor
and
pusha
ffreep
gs
outs
push
jns
lods
push
test
adc
cmp
test
push
inc
push
push
dec
push
sbb
dec
jp
or
xchg
xor
jb
js
or
inc
jp
cmp
sub
movs
nop
push
les
and
out
cmp
rcr
dec
shl
xor
and
sbb
push
imul
jp
inc
dec
test
push
mov
add
add
inc
and
push
pop
add
fmul
outs
xor
outs
inc
fwait
call
dec
arpl
mov
push
sbb
sub
xchg
push
inc
dec
inc
or
(bad)
in
movs
outs
leave
sub
nop
inc
or
dec
inc
sbb
xchg
inc
jo
adc
push
into
stos
mov
xchg
arpl
ins
xor
inc
jle
pusha
add
int3
cmp
dec
in
cs
push
add
mov
mov
sub
pop
xor
push
adc
add
repnz
inc
shl
imul
shl
push
outs
inc
test
dec
push
lock
es
ret
fs
pop
add
dec
data16
mov
inc
les
add
ins
push
add
mov
inc
and
stos
push
push
call
adc
es
add
and
int
int3
jb
pusha
leave
sub
outs
jne
dec
shl
fmul
sahf
dec
ins
loopne
shr
pusha
(bad)
loopne
push
outs
inc
add
sbb
push
dec
jbe
xor
aaa
jno
ins
test
mov
push
push
or
(bad)
dec
push
je
pop
jbe
outs
cmp
and
popa
les
retf
stos
lods
bound
popa
test
cld
fs
push
data16
push
(bad)
dec
add
arpl
sub
xor
jmp
jbe
xor
inc
pop
fwait
cmp
xor
aaa
xor
jno
jl
popa
data16
sbb
inc
pop
push
push
in
fs
fs
mov
(bad)
fimul
ret
push
ins
loopne
xchg
inc
xchg
jbe
ret
inc
ss
nop
cmc
push
jae
inc
xchg
push
xor
jbe
mov
pop
inc
in
jno
mov
push
bound
or
push
and
adc
add
add
inc
lock
ins
test
inc
les
pop
jp
call
and
sub
test
xchg
adc
(bad)
dec
xor
or
call
inc
loop
ret
pop
push
rcl
dec
inc
dec
adc
pop
(bad)
aam
and
inc
fwait
sub
sub
data16
call
fidiv
cmp
ja
add
(bad)
push
adc
rol
sub
popa
cmp
add
cld
push
test
(bad)
aam
outs
sub
lods
add
aaa
mov
sub
mov
dec
push
ret
ret
sbb
xor
jns
push
loopne
pop
arpl
jo
ins
push
call
add
cmp
dec
aaa
xor
outs
push
or
cmp
data16
bound
add
add
inc
cli
imul
in
inc
dec
pop
ss
ret
push
and
mov
add
add
push
lods
retf
sub
outs
addr16
dec
cmp
cmp
aam
inc
shl
je
push
rol
push
gs
pop
dec
push
les
pop
shl
sbb
xchg
mov
out
les
jo
lods
mov
or
jl
mov
push
in
hlt
xchg
in
add
jl
addr16
test
dec
add
les
or
dec
sbb
jae
or
or
push
inc
sbb
into
int3
in
mov
dec
jne
stos
movs
adc
xor
xchg
shr
sub
cmps
aas
aam
aaa
scas
inc
mov
dec
xor
ins
ins
or
xor
xchg
xor
ins
jae
xor
outs
jne
cmp
ins
jo
xor
sub
bound
push
inc
xchg
xchg
add
cli
or
inc
addr16
inc
mov
test
popa
pop
imul
call
or
inc
dec
inc
jne
in
xchg
pop
ret
and
dec
cmp
outs
inc
push
into
adc
pop
rol
sbb
jb
dec
lods
(bad)
arpl
jo
dec
push
dec
movs
add
jne
dec
int3
nop
jo
pop
push
mov
push
adc
adc
mov
dec
dec
sub
mov
enter
push
into
push
inc
jbe
cmp
xor
es
xchg
out
xor
lods
aad
jne
pop
push
in
mov
stos
push
adc
bound
pop
jno
xor
dec
push
cmp
jno
xor
adc
push
scas
mov
push
loop
dec
push
add
cmp
add
inc
imul
add
test
inc
or
outs
inc
dec
clc
or
in
push
retf
jb
int3
outs
push
inc
xor
inc
dec
xor
popa
jp
shr
js
xchg
xchg
out
dec
call
inc
stos
xor
or
cmp
sub
sbb
push
jp
in
push
cmp
call
xor
inc
push
xor
add
push
leave
sub
mov
js
dec
adc
mov
mov
add
push
xchg
test
jbe
lods
dec
push
cdq
add
pop
(bad)
retf
push
cwde
sub
adc
push
or
fwait
adc
test
push
push
cmp
cmp
push
pushf
add
jo
outs
jecxz
pop
inc
data16
ss
imul
dec
mov
shr
sbb
jne
mov
popa
aaa
or
push
push
mov
adc
popa
dec
inc
or
jne
push
mov
jo
data16
mov
cmps
cmp
xor
inc
inc
outs
adc
adc
xor
sub
adc
xchg
fadd
push
ins
sub
popa
xchg
mov
js
xchg
dec
inc
fidiv
mov
push
push
adc
mov
mov
or
(bad)
and
or
push
inc
push
movs
mov
outs
adc
mov
adc
or
xor
pop
inc
push
out
fidivr
push
or
xchg
repnz
xor
xchg
mov
jo
stos
inc
movs
ins
rcr
push
mov
jp
xchg
sahf
add
(bad)
addr16
jmp
and
inc
xor
rcr
inc
inc
sub
or
xor
push
data16
or
xor
cmp
push
fidiv
pop
stos
fdivr
jge
inc
addr16
xor
dec
ret
or
ins
mov
adc
add
pushf
les
mov
test
ror
ficom
dec
cwde
jle
mov
push
add
sub
scas
call
je
and
xchg
or
push
clc
cmps
stos
and
sbb
mov
push
push
or
mov
movs
ss
ins
dec
pushf
add
ss
outs
nop
mov
cmp
cwde
hlt
add
or
data16
push
and
in
out
mov
stos
retf
jle
add
mov
inc
bound
enter
add
mov
dec
dec
push
ficom
inc
or
sbb
sbb
cmp
dec
sub
mov
push
fadd
outs
push
test
ret
cs
add
push
push
cmp
push
inc
mov
lods
xchg
je
adc
push
inc
es
outs
xor
jmp
sahf
gs
and
hlt
dec
dec
fidiv
inc
jb
jle
push
inc
jne
add
inc
outs
cmp
pusha
sbb
or
js
jbe
pop
push
cmp
ret
push
or
push
pop
push
test
and
inc
add
adc
cs
cmps
push
and
or
cmp
dec
dec
jb
test
push
and
mov
push
add
xor
add
loopne
jb
sbb
fidivr
dec
mov
popa
jo
call
add
jns
dec
(bad)
mov
xor
lods
cmp
outs
bound
(bad)
dec
addr16
inc
shl
in
test
mov
je
(bad)
cmp
inc
ss
add
push
pusha
dec
enter
add
gs
mov
jo
jno
push
cdq
fiadd
push
xor
lods
jle
xor
cmp
test
jmp
adc
push
outs
push
popf
nop
pop
push
(bad)
shr
sub
mov
aam
jp
dec
je
test
pusha
or
cmps
rol
mov
fadd
loop
dec
and
pop
cs
push
lock
xor
inc
ins
push
mov
pop
scas
dec
loopne
call
and
add
fdiv
mov
push
add
and
mov
mov
jb
inc
cwde
addr16
and
add
sbb
sahf
push
push
dec
fadd
push
fisub
inc
mov
lods
cmp
test
push
dec
or
inc
call
pop
dec
xchg
inc
stos
data16
ror
shl
push
fisubr
add
push
ds
push
cmps
movs
jo
cmps
int3
sbb
outs
ss
dec
sub
xor
bound
mov
sbb
dec
jne
out
adc
cmp
sub
dec
dec
push
mov
dec
add
jne
dec
xchg
sbb
inc
xor
xor
and
dec
jno
push
cmp
or
xchg
call
push
addr16
outs
or
xor
push
in
xchg
(bad)
ja
inc
jo
push
fiadd
bound
in
inc
xor
or
xor
add
stos
sub
test
push
ins
loopne
(bad)
jp
push
inc
clc
cmp
adc
xor
inc
jo
loopne
cwde
push
adc
push
sub
pop
aam
inc
mov
push
xchg
test
pusha
xor
mov
dec
push
fadd
mov
cmp
add
and
inc
dec
mov
adc
mov
rcl
dec
push
mov
push
popa
add
jbe
dec
push
cmp
inc
add
(bad)
push
dec
stos
pop
dec
pop
enter
sbb
push
pop
inc
fs
jl
push
fs
sub
and
and
clc
xor
mov
push
mov
push
hlt
mov
sub
dec
outs
push
and
dec
inc
inc
inc
movs
bound
pop
gs
into
popa
push
push
in
sub
inc
or
je
jno
push
add
add
(bad)
icebp
adc
inc
dec
xor
stos
outs
xor
xchg
inc
add
add
or
sub
add
add
ror
pop
and
and
ja
movs
dec
sub
bound
mov
cmps
pusha
fiadd
mov
loop
sbb
cld
cli
push
push
ret
inc
jp
adc
add
fcom
sub
add
nop
adc
mov
inc
cwde
or
or
imul
xchg
xor
add
call
ins
push
jo
test
dec
push
mov
or
add
test
test
ret
cli
xor
mov
push
and
dec
pop
scas
dec
xor
sbb
push
add
xchg
dec
and
and
inc
or
push
dec
xor
cmp
add
inc
cs
or
loop
cmps
jo
idiv
ins
jne
inc
popa
loopne
ss
push
nop
add
mov
jle
movs
mov
jl
inc
out
pop
mov
mov
or
mov
dec
mov
clc
popa
pop
and
data16
mov
nop
fsub
pusha
mov
inc
mov
push
jne
test
pop
push
inc
cmp
adc
push
xor
inc
cwde
jmp
push
push
dec
enter
fs
or
mov
dec
mov
adc
lods
inc
and
pop
pop
jmp
xchg
int3
push
sub
outs
xor
xchg
push
mov
add
rcr
bound
sub
scas
int3
nop
arpl
movs
mov
ss
and
mov
outs
dec
and
or
or
rol
sub
movs
sub
je
dec
aaa
addr16
sub
lods
rcl
les
call
test
mov
inc
push
xor
je
cli
inc
or
pop
retf
xor
or
push
imul
xchg
inc
(bad)
(bad)
bound
xchg
xor
cmp
dec
push
hlt
pop
dec
pushf
mov
sbb
xor
xchg
mov
xor
add
outs
popa
jb
fs
ins
adc
push
fiadd
popa
sub
(bad)
outs
xor
or
pop
xchg
cmp
in
push
push
(bad)
push
push
(bad)
sub
cmp
or
fidiv
inc
ret
out
jae
inc
xor
inc
mov
jno
xor
push
xor
mov
aam
idiv
jo
sub
mov
sub
xchg
outs
xchg
dec
push
and
dec
retf
fdiv
push
dec
jb
retf
push
dec
outs
test
out
inc
xor
pop
push
or
arpl
jp
mov
loop
inc
add
sub
xchg
call
fwait
and
pushf
xchg
mov
dec
add
movs
mov
dec
push
je
push
ins
test
sahf
loopne
aaa
out
fs
(bad)
jp
xor
cmp
add
push
fiadd
push
xor
adc
out
lock
push
pop
jae
cli
xor
je
cwde
sub
mov
callw
jb
jbe
mov
outs
mov
enter
gs
push
mov
loope
mov
adc
cdq
dec
add
mov
jb
xchg
push
push
xor
jb
fisub
pop
push
mov
retf
popa
cs
inc
adc
adc
pop
xor
aaa
dec
adc
dec
xor
aam
mov
or
and
bound
data16
add
jmp
push
push
loopne
push
in
push
or
push
push
cs
jle
dec
push
cmp
xchg
jo
cmp
dec
sub
or
dec
sub
sbb
inc
sub
movs
add
sbb
test
jo
dec
shl
push
pop
jo
adc
imul
retf
in
xor
sbb
shl
aaa
inc
push
mov
nop
dec
push
nop
xchg
inc
and
add
dec
push
inc
popa
imul
arpl
cmp
data16
dec
pop
sbb
scas
aaa
bound
outs
inc
je
push
adc
retf
inc
cmp
and
inc
data16
inc
mov
add
inc
mov
xor
nop
inc
aam
enter
mov
outs
js
adc
jg
cwde
shl
inc
ins
add
push
push
sbb
push
pushaw
adc
push
add
mov
push
dec
pushf
sub
lds
mov
jne
jne
in
sahf
xchg
and
inc
adc
fisttp
push
cmp
fs
jo
or
repnz
ja
leave
sbb
push
adc
sar
add
mov
xor
fwait
add
imul
jl
bound
mov
push
cmp
push
mov
push
mov
sbb
test
push
rol
loope
cs
or
rcl
xor
ins
mov
mov
push
data16
push
xor
ins
xchg
stos
mov
push
or
test
jno
aam
fiadd
xor
sbb
jae
push
fisubr
xor
or
imul
inc
cmp
ins
ss
adc
jbe
add
or
movs
add
stos
adc
outs
xor
dec
inc
cli
sbb
ja
push
imul
xor
jmp
jae
xor
xor
push
sbb
mov
les
push
aaa
jo
or
sbb
call
ins
sub
pop
and
inc
lods
mov
xor
es
fs
sbb
mov
inc
fdivrp
in
or
and
cs
js
mov
jno
jbe
sub
ins
jo
inc
dec
push
xor
jo
adc
mov
dec
scas
push
in
add
ins
push
inc
idiv
ins
sbb
gs
and
outs
jns
add
xchg
sub
loop
adc
hlt
cmp
mov
xor
sub
xor
bound
inc
inc
push
mov
mov
ds
scas
xor
mov
push
je
enter
(bad)
dec
jae
pop
sbb
xchg
inc
aam
sub
and
dec
test
or
xor
test
popa
fs
cmp
push
aam
push
adc
bound
xor
push
dec
pusha
mov
pusha
push
ss
mov
xchg
mov
dec
push
bound
lods
xor
dec
neg
push
xor
jne
sub
xor
push
call
cmps
sbb
inc
ins
inc
and
dec
sub
push
jb
push
dec
ror
mov
xor
inc
imul
out
dec
cmp
adc
dec
mov
arpl
add
or
push
imul
push
sbb
dec
sub
xchg
mov
mov
ficom
or
or
lds
sbb
pushf
adc
xor
jb
add
xor
stos
(bad)
jne
aaa
add
add
js
push
cmps
adc
cld
sub
add
je
xor
sub
mov
int3
xchg
ss
outs
and
push
push
in
call
add
sbb
in
mov
jbe
imul
jne
push
and
pop
inc
hlt
cmps
xor
dec
js
jbe
jmp
sub
data16
js
dec
ret
adc
xchg
push
mov
xor
mov
mov
push
sbb
pop
inc
js
cmps
aad
mov
dec
push
push
aaa
push
xor
xor
test
aaa
inc
adc
xor
push
pop
dec
push
pop
push
sub
outs
inc
push
stos
cdq
mov
in
mov
gs
es
movs
lods
add
icebp
adc
push
cmp
push
adc
sub
mov
inc
dec
xor
jo
popa
mov
adc
outs
xor
mov
dec
or
jo
js
sub
popa
call
adc
loop
add
cmp
or
dec
shr
mov
push
fcom
aad
jbe
out
outs
push
push
jno
je
test
inc
add
dec
jns
or
or
xor
pop
(bad)
mov
push
dec
js
int
cs
dec
or
xor
cmps
bound
outs
xchg
dec
ss
mov
push
push
pop
stos
sub
inc
je
cmp
xor
xor
pop
dec
add
mov
xor
jo
rol
aaa
fwait
push
fs
ss
xor
and
pop
sub
add
or
jl
cmp
and
dec
je
xor
xchg
push
imul
add
sahf
inc
push
adc
cmp
or
or
add
addr16
and
push
jns
mov
cmp
pop
mov
stos
shr
xor
and
ja
pusha
fisubr
shl
xchg
sub
inc
in
and
mov
inc
sub
dec
mov
inc
xor
movs
xchg
mov
push
pop
push
sbb
inc
jae
repnz
jae
add
out
popa
imul
inc
ins
sub
add
push
xor
xchg
es
rol
dec
xchg
inc
jp
or
dec
and
dec
dec
enter
pop
pushf
push
push
cli
inc
cmp
xchg
fst
pop
test
dec
and
mov
sbb
dec
inc
scas
sbb
or
push
xor
push
aam
push
outs
sbb
dec
jle
imul
dec
lods
inc
mov
mov
add
xchg
or
dec
jo
pop
add
aaa
jne
jl
xchg
imul
xor
ins
add
sbb
call
arpl
data16
xchg
sbb
dec
push
cs
ficom
test
ins
push
sbb
ret
push
push
addr16
push
add
adc
push
push
data16
popa
adc
sub
push
test
clc
pusha
xchg
loopne
gs
push
ins
test
adc
test
mov
jp
or
and
inc
push
dec
mov
xor
inc
fisttp
sahf
jmp
push
jns
ins
js
jo
cmp
ja
mov
xor
adc
movs
js
outs
inc
dec
jae
push
adc
inc
call
sar
jns
movs
push
inc
call
push
cmp
popa
or
jmp
inc
add
push
sbb
cmp
addr16
xor
jp
dec
push
js
or
stos
dec
or
ds
jbe
jbe
rol
sbb
and
cs
je
jne
push
xchg
push
push
call
in
inc
sbb
add
push
mov
pushf
xor
arpl
dec
sub
bound
push
xor
mov
jno
jp
dec
pusha
and
dec
ins
xchg
ret
nop
(bad)
out
lods
imul
add
xor
rcr
dec
or
dec
popa
jo
cli
int3
xchg
adc
mov
sbb
inc
adc
jle
sbb
inc
ss
js
and
movs
mov
xor
(bad)
or
cmp
mov
dec
fsubr
shl
or
push
fs
inc
inc
xor
sub
jo
fs
push
mov
adc
loopne
mov
push
push
adc
outs
jb
test
push
jp
jle
jp
mov
sbb
in
outs
dec
imul
movs
or
and
pop
add
jb
or
or
or
push
rcl
mov
jns
into
mov
call
sub
adc
inc
rol
jo
mov
add
push
imul
jo
push
gs
ret
ins
inc
cmp
xchg
cmp
pop
rol
inc
xchg
rol
dec
adc
je
and
mov
mov
jno
arpl
pop
or
push
imul
push
adc
movs
gs
cmp
fadd
pop
cmp
or
and
sahf
inc
or
and
or
add
xchg
mov
outs
mov
xchg
icebp
data16
dec
ins
inc
loopne
push
dec
ins
xor
and
ret
and
dec
je
sub
rol
cmp
test
push
dec
call
aaa
shr
(bad)
in
push
or
inc
outs
mov
sbb
pop
push
inc
fidiv
and
adc
push
add
xor
or
ss
dec
ins
sbb
inc
addr16
sar
pushf
push
dec
hlt
and
imul
(bad)
push
adc
les
jo
jns
popa
xor
pop
cmp
jo
xchg
xchg
sub
mov
hlt
jbe
add
push
ret
mov
push
imul
cli
cs
dec
adc
jmp
retf
add
bound
retf
xor
cwde
je
and
pop
outs
fs
push
pop
xor
push
fwait
or
push
ins
inc
dec
int3
inc
or
dec
add
jp
push
pusha
fs
shr
in
jbe
ins
sub
and
dec
or
ins
xor
call
dec
test
aaa
cwde
jo
arpl
and
or
ja
xor
adc
add
mov
cmp
ds
int3
ins
lock
push
dec
cmp
out
jo
inc
loopne
test
cmp
inc
mov
push
inc
dec
out
xor
pop
mov
(bad)
dec
push
pop
jmp
xor
push
movs
pop
and
dec
jne
add
loopne
ins
sub
dec
enter
scas
bound
mov
inc
std
and
mov
inc
dec
or
dec
push
cmp
or
dec
bound
jo
dec
xor
mov
dec
ss
adc
pop
mov
adc
ins
push
push
mov
add
sbb
pushf
xchg
in
scas
and
dec
push
jne
dec
xor
push
inc
mov
inc
push
xor
add
test
pop
pusha
push
ror
lods
dec
push
push
add
sub
mov
mov
cld
jb
inc
pop
sbb
add
or
aad
xchg
dec
js
ja
or
movs
scas
xor
ret
gs
xchg
jb
pop
je
fidiv
inc
add
gs
pop
push
sub
add
aam
dec
or
inc
push
dec
arpl
nop
or
daa
cmp
sub
dec
push
cmps
sbb
dec
pop
push
fs
jns
bound
test
inc
sahf
shl
loopne
push
dec
cmp
in
sub
lods
shl
data16
or
test
add
or
dec
sbb
fs
imul
xchg
add
fs
push
push
outs
xor
inc
and
out
lock
adc
popa
inc
dec
inc
add
ins
adc
inc
lds
xor
xchg
inc
shr
jbe
add
ret
or
jo
add
or
ins
xor
and
rol
jno
sub
ret
movs
sbb
inc
jne
rcl
dec
inc
into
(bad)
pop
bound
jl
jns
mov
xchg
or
adc
push
pop
sbb
js
test
sub
or
push
jp
jbe
adc
fimul
push
imul
dec
jp
push
sbb
(bad)
jae
sbb
push
pop
je
ret
push
mov
inc
push
jns
push
sbb
push
bound
ret
xchg
push
movs
dec
mov
inc
xor
adc
je
outs
aaa
nop
call
xor
push
mov
mov
les
adc
mov
push
and
mov
je
add
sbb
push
xchg
inc
pop
out
dec
xor
imul
inc
aaa
xchg
jbe
xor
inc
add
mov
in
sub
sub
movs
movs
and
fs
ss
jae
pop
jb
xor
push
pushf
dec
xor
mov
cmps
adc
jno
cmp
arpl
dec
loope
and
push
dec
add
and
mov
push
daa
xor
push
xor
aaa
inc
enter
inc
movs
retf
or
dec
mov
or
or
jne
fnstenv
mov
mov
xchg
push
xor
jbe
add
cmc
call
push
push
ss
loopne
jl
xor
pop
out
add
sbb
dec
gs
xor
and
mov
jne
js
or
fs
js
push
inc
sub
sub
add
inc
mov
jo
jo
fs
(bad)
fsub
fld
push
push
sbb
shr
xor
dec
inc
inc
xor
adc
ret
xor
push
add
cs
jl
inc
shl
inc
outs
push
sub
call
pop
nop
mov
inc
add
dec
adc
fwait
pop
dec
inc
into
xor
dec
xor
jb
ret
clc
xchg
ss
pop
dec
inc
test
mov
outs
push
mov
push
je
gs
sbb
jo
rcl
loopne
xor
xor
mov
aaa
mov
push
and
mov
or
movs
jo
test
mov
or
into
ja
or
repnz
(bad)
jbe
xor
or
pop
xchg
or
xor
lock
xchg
or
adc
inc
push
xor
sbb
jbe
dec
movs
mov
rcr
push
pop
jns
sbb
fimul
push
xor
pushf
push
push
mov
hlt
xchg
test
pop
sbb
inc
repnz
push
(bad)
cdq
push
push
pusha
xor
outs
jno
xchg
pop
enter
test
lods
and
add
stos
push
xchg
fcom
ror
or
jl
popa
mov
add
js
repnz
ins
inc
sub
sub
dec
inc
cli
inc
mov
retf
adc
test
or
mov
shl
dec
push
and
push
sub
xchg
ret
scas
aad
sar
adc
cld
movs
cwde
push
test
push
lock
jo
xchg
pop
or
cmp
popa
inc
and
fdivr
or
inc
frstor
imul
cmp
(bad)
pop
ins
dec
shl
test
call
dec
mov
js
and
push
dec
cli
ins
inc
or
dec
outs
push
(bad)
int
dec
or
or
push
pushf
sub
or
and
aaa
cs
jo
push
test
xor
xor
push
scas
(bad)
aam
imul
data16
xor
ror
test
inc
or
adc
call
mov
inc
inc
(bad)
mov
dec
popa
gs
dec
aaa
dec
push
and
mov
es
ret
outs
je
xor
retf
ins
pop
adc
jbe
dec
cmp
imul
cmp
dec
pushf
push
cwde
dec
add
ret
and
retf
pop
and
pop
ins
adc
sub
and
and
sbb
inc
inc
sub
inc
sub
and
push
push
movs
inc
push
push
sub
lock
dec
inc
push
push
mov
adc
xor
cwde
xor
push
imul
clc
arpl
inc
inc
imul
and
sbb
fisubr
push
pop
retf
data16
mov
push
xor
xor
jbe
push
xor
add
ds
xchg
mov
adc
fiadd
push
sub
jbe
jns
push
(bad)
sub
aaa
and
imul
push
push
xchg
imul
adc
mov
push
dec
dec
and
add
jbe
sbb
or
add
(bad)
rcr
fiadd
pushf
mov
jbe
jb
push
add
fsub
mov
jo
push
call
fs
inc
push
retf
xchg
inc
movs
ins
cdq
dec
sub
idiv
hlt
adc
or
ret
dec
jne
and
add
push
ret
popa
xor
fadd
cdq
or
pushf
xor
pop
mov
dec
push
or
mov
lods
cld
dec
or
sbb
adc
fs
add
mov
inc
mov
push
inc
inc
jl
in
mov
outs
jge
push
cmp
push
outs
xor
or
push
cmps
loop
pusha
jmp
js
jl
cs
bound
and
ja
add
xor
sbb
shl
ror
jae
fisub
aaa
add
ins
pop
aad
mov
push
push
fwait
xor
jp
outs
push
push
push
jne
or
mov
lock
or
dec
adc
xor
mov
addr16
dec
jns
leave
inc
or
ret
shl
jo
aad
pop
push
dec
dec
cmp
outs
dec
jp
or
ja
jl
add
pop
or
or
fs
or
clc
push
fs
xor
inc
push
jno
push
dec
xor
dec
fidiv
ins
dec
cli
push
retf
push
sub
cwde
jmp
adc
jns
mov
enter
inc
sub
mov
xor
mov
call
sub
adc
push
jmp
pop
je
aaa
dec
or
inc
fiadd
sub
pusha
push
pop
fsubr
fs
and
xchg
adc
mov
add
outs
aam
mov
lods
imul
ss
xchg
nop
or
jae
add
push
call
adc
inc
push
mov
add
mov
push
inc
int3
sub
inc
es
sar
stos
add
push
xchg
mov
sbb
dec
push
fcom
test
mov
add
popa
mov
dec
jo
out
pushw
adc
js
(bad)
ss
dec
inc
push
sahf
scas
outs
push
cmp
movs
dec
dec
xor
mov
push
ins
pop
push
pop
push
sub
inc
push
ss
js
js
aaa
pop
push
push
push
dec
dec
inc
xchg
dec
cwde
inc
mov
mov
movs
cmps
test
mov
dec
push
or
sub
pop
add
dec
xchg
push
sub
adc
push
addr16
je
jbe
mov
push
cmp
sub
fcom
jo
adc
xchg
push
push
inc
pop
or
inc
addr16
add
push
ins
inc
dec
mov
sbb
mov
and
add
scas
cli
mov
in
mov
push
inc
loop
ss
inc
xchg
aam
jns
ins
mov
push
popa
xor
inc
lods
jb
and
push
dec
aad
or
dec
mov
inc
or
popa
add
inc
mov
data16
gs
ja
jne
rol
dec
and
push
xchg
adc
dec
jo
out
and
mov
and
adc
add
cs
cwde
outs
data16
inc
and
sub
(bad)
outs
pop
js
dec
add
sub
xor
outs
mov
push
adc
add
cmp
inc
push
loope
js
cmp
popa
add
adc
cmps
cmp
outs
mov
mov
push
push
inc
jae
sub
jbe
pop
add
xor
dec
outs
adc
and
outs
popa
inc
and
adc
add
out
cli
popa
xor
aam
stos
cmp
mov
add
movs
mov
add
or
outs
push
xchg
mov
pop
push
ins
jb
mov
or
adc
dec
outs
(bad)
push
dec
xor
or
push
sub
pop
outs
jb
rcl
cwde
cmp
sahf
mov
xor
pop
sbb
push
cwde
jo
test
dec
push
ret
cli
push
xchg
stos
inc
scas
pop
jno
cmp
mov
add
dec
ins
xchg
pop
inc
mov
xlat
jno
adc
fidivr
imul
ss
dec
sub
dec
cmp
mov
je
fwait
add
movs
xchg
jo
nop
cmp
shl
push
or
outs
pop
add
dec
dec
je
pop
add
or
and
mov
push
xor
js
mov
mov
inc
jno
inc
scas
movs
inc
inc
or
and
bound
ja
cmp
xchg
push
rcr
jmp
inc
into
fld
inc
push
(bad)
js
sahf
jb
rcl
dec
push
xchg
push
sahf
inc
enter
dec
in
sbb
xor
and
xor
and
sub
stos
or
inc
and
dec
push
xchg
dec
popa
int3
shl
je
mov
push
add
jo
pop
inc
mov
push
sub
and
jo
aad
(bad)
pop
dec
push
mov
sub
cmp
add
sub
xor
stos
mov
js
out
jno
pop
add
jo
inc
or
and
pop
pop
push
cwde
dec
cmp
stos
mov
xchg
mov
push
mov
js
pop
inc
or
sub
sbb
xor
test
popa
hlt
sub
sar
jp
ins
push
mov
call
dec
and
sbb
add
sbb
int3
push
dec
pop
inc
sub
out
outs
mov
and
push
jne
jb
imul
dec
imul
mov
inc
mov
push
push
js
jbe
shl
rcl
cmp
sub
popa
je
dec
push
push
sbb
cwde
xchg
mov
dec
jae
ss
or
loopne
enter
aad
sbb
xor
ret
rcl
leave
call
inc
sbb
and
xor
lock
dec
inc
inc
jo
push
xor
mov
adc
push
sub
jle
jne
mov
cwde
add
pop
test
imul
inc
dec
mov
xor
and
enter
pop
xchg
stos
pusha
stos
ins
lods
pusha
jmp
pushaw
cmp
es
sub
push
sub
mov
inc
jmp
dec
mov
and
push
add
aaa
push
hlt
inc
jb
xor
fcom
sub
push
add
cmps
bound
adc
jmp
xchg
dec
jbe
ins
push
push
jo
out
pop
dec
ficomp
dec
push
adc
jbe
xor
jmp
test
xor
mov
cmp
push
stos
inc
add
inc
push
shl
cld
xor
loopne
mov
inc
bound
cmp
mov
sbb
cmp
sub
pop
movs
or
jns
or
add
add
pop
imul
pop
mov
push
xor
imul
(bad)
xor
push
jb
dec
pop
shl
imul
gs
add
mov
dec
pushf
lods
dec
sbb
stos
cmp
lods
lds
and
dec
sub
push
popa
call
mov
mov
dec
jne
and
mov
pop
mov
ss
cwde
mov
sub
xor
test
test
dec
data16
outs
push
mov
xchg
aam
dec
cmps
fstp
xor
lods
jecxz
push
dec
adc
dec
sub
data16
popa
test
mov
xor
fs
cmp
xor
jno
mov
jmp
and
mov
sub
sbb
popa
dec
xor
push
sbb
push
gs
inc
push
jbe
aaa
add
inc
dec
enter
xor
scas
push
cwde
retf
(bad)
sbb
xchg
sub
pop
lods
cld
mov
sahf
push
dec
push
mov
inc
sbb
inc
inc
mov
aam
push
inc
xchg
ja
xor
test
loopne
xor
jb
les
inc
push
inc
push
sbb
addr16
dec
dec
add
sbb
and
add
push
je
adc
xor
push
ds
add
sbb
sbb
add
mov
outs
out
pushw
inc
add
xchg
sar
xchg
mov
mov
scas
aam
mov
retf
add
call
push
cmp
add
cmp
mov
xor
int3
xchg
mov
xchg
push
push
out
imul
rol
ss
cmp
movs
add
scas
cmp
cmp
adc
or
inc
outs
push
cmp
dec
test
adc
cmp
xor
fmul
or
shl
dec
jo
ss
xchg
ins
cmp
add
out
push
dec
and
push
inc
dec
or
bound
inc
push
ror
ins
xor
sbb
inc
fmul
add
or
push
inc
test
dec
xor
cmp
dec
push
bnd
cmp
dec
ins
or
push
dec
pop
arpl
lds
aas
push
into
mov
jo
cmps
pop
out
inc
mov
push
es
or
dec
cs
in
ds
out
cmps
test
push
inc
mov
mov
adc
or
rcr
sub
inc
push
pushf
and
xchg
lods
inc
push
mov
shl
or
mov
dec
and
xchg
pop
retf
push
mov
push
mov
xor
pop
and
jbe
mov
sub
inc
inc
xor
dec
xor
pop
push
inc
inc
xor
int3
movs
inc
or
or
cs
fidivr
inc
cwde
push
ins
loopne
cmp
bound
xor
dec
jno
ins
imul
ja
ror
push
mov
dec
xchg
add
pop
or
mov
push
and
xor
dec
xor
add
inc
pop
sub
inc
xchg
pop
jp
int
mov
gs
dec
aaa
mov
cmp
js
xchg
mov
outs
push
ds
imul
fld
xchg
inc
cmps
jae
dec
or
mov
mov
inc
inc
dec
dec
jp
jo
cs
push
push
push
aam
inc
ins
loope
push
dec
pop
push
push
push
push
cmp
sbb
mov
inc
xor
(bad)
sub
ret
dec
dec
inc
inc
lods
push
fidiv
push
push
stos
(bad)
ins
cmp
dec
sub
jo
mov
jl
mov
push
(bad)
scas
push
fisubr
jo
nop
data16
nop
icebp
es
mov
inc
xchg
or
jo
add
aam
mov
add
mov
repnz
add
sar
dec
outs
js
lods
push
stos
mov
sbb
jl
mov
shl
rol
cdq
sub
ret
jmp
inc
dec
loopne
mov
mov
cli
inc
pop
inc
push
aaa
jbe
shl
sub
mov
sbb
sbb
inc
push
or
add
call
inc
nop
cld
fs
pushf
test
arpl
movs
xchg
rol
mov
je
xor
outs
add
or
cld
popa
sbb
and
dec
pop
cmc
loop
xor
push
out
dec
mov
push
frstor
inc
dec
addr16
push
add
push
jo
ins
popa
xchg
shl
xor
sub
dec
gs
bound
adc
jp
jo
adc
xor
adc
xchg
stos
ror
call
or
fidivr
ss
dec
push
dec
or
stos
pop
jmp
xor
add
xor
dec
add
or
rcr
dec
pop
sub
or
and
jp
cwde
add
jbe
pusha
fadd
jno
dec
push
or
neg
rcl
cs
dec
push
mov
push
xchg
mov
ins
mov
and
add
xchg
push
js
pop
and
sbb
xor
push
loopne
pusha
cmp
js
push
sbb
popf
xor
lods
dec
push
push
dec
adc
mov
cmp
cmp
je
dec
push
cmp
sbb
inc
lock
movs
mov
xor
sbb
xchg
push
jo
sbb
adc
loope
pop
test
pusha
outs
add
test
cmps
and
add
cmp
stos
sub
int3
jo
pop
rcr
dec
inc
jb
popa
add
sbb
dec
inc
inc
enter
xor
(bad)
dec
push
xor
xchg
add
ins
adc
or
push
inc
inc
xchg
ret
jbe
inc
shl
in
les
mov
push
sub
add
arpl
mov
test
and
and
jae
mov
inc
adc
xor
xor
mov
push
dec
xor
sbb
dec
jo
jne
or
inc
add
add
pop
dec
inc
or
outs
inc
or
rcr
or
nop
mov
cmp
lds
clc
jno
cli
inc
dec
xchg
add
add
or
push
pop
adc
mov
add
adc
gs
test
dec
outs
dec
je
outs
push
push
rcl
fcmove
or
pop
loop
lods
dec
add
pop
push
inc
dec
loope
out
dec
pop
xchg
push
pop
dec
dec
mov
adc
sub
sub
sbb
inc
push
push
add
test
push
test
or
add
je
nop
shl
xchg
je
je
mov
sbb
push
in
fadd
data16
js
lods
adc
inc
inc
push
and
ja
sbb
popa
nop
jne
dec
dec
imul
xor
inc
adc
adc
outs
jp
gs
je
pop
adc
test
xor
ds
popa
sbb
push
sub
(bad)
loopne
push
fsubr
aaa
xor
data16
imul
jns
jbe
mov
dec
inc
scas
or
adc
fadd
and
lock
jle
inc
test
bound
int3
jp
jbe
mov
mov
sub
adc
movs
cwde
movs
jb
push
fimul
push
out
xchg
imul
pop
inc
call
adc
adc
xchg
lods
fsub
add
fcom
shr
mov
fs
jo
in
dec
jne
jo
loopne
or
dec
mov
sbb
popa
push
nop
jo
inc
fadd
inc
retf
xchg
and
add
out
rcl
in
popa
or
cmp
xchg
es
inc
push
xchg
(bad)
test
dec
or
imul
dec
pushf
sbb
pop
test
jle
daa
or
aaa
sub
dec
lods
inc
push
nop
fiadd
les
push
imul
adc
imul
and
xchg
clc
mov
adc
dec
adc
add
add
sub
inc
dec
push
xor
pop
and
or
jb
loop
and
jne
rol
adc
add
push
jo
inc
nop
mov
adc
sbb
xor
retf
ror
inc
cs
cwde
inc
jne
or
je
pop
inc
mov
push
jo
jbe
sbb
sub
add
cmp
rol
push
add
push
fadd
out
mov
cmp
cmps
sub
xor
and
jmp
dec
mov
enter
xor
fisubr
pop
popa
aam
push
jo
sti
push
xor
jp
inc
cmp
je
es
test
mov
jno
ins
cld
push
jne
dec
push
dec
test
push
xor
xchg
xchg
or
sub
test
cwde
add
addr16
ins
push
nop
xchg
test
push
mov
dec
xor
push
xor
add
jbe
xor
and
inc
inc
scas
dec
repnz
call
fisub
inc
dec
inc
test
or
mov
jae
fwait
movs
cli
ins
jns
loopne
data16
imul
sub
ins
jne
je
test
or
xor
push
retf
fs
rcr
mov
and
push
adc
xor
inc
mov
push
xor
cmp
stos
push
pop
inc
adc
sbb
push
pop
mov
jbe
cmps
and
push
xor
sbb
pop
mov
stos
fsub
jp
shr
cld
gs
add
inc
add
stos
add
sahf
add
or
and
push
rcl
push
jle
mov
xchg
sar
sbb
clc
dec
add
jne
inc
jno
ins
dec
cwde
add
dec
jl
jae
push
push
mov
adc
adc
dec
cli
in
jl
and
add
jb
pop
and
xor
jle
or
or
add
or
or
imul
clc
push
(bad)
sub
and
inc
pushf
inc
pusha
popa
mov
dec
jbe
sbb
aam
jp
fs
xor
inc
mov
in
xor
add
adc
inc
arpl
push
lock
pop
or
sub
dec
popa
xchg
sbb
jge
cmp
ret
xchg
mov
inc
sbb
xor
stos
pop
dec
mov
js
out
les
push
push
fs
cmp
inc
mov
inc
xchg
push
xor
jp
fs
test
xlat
bound
inc
retf
dec
inc
stos
enter
jne
fs
es
sub
xor
sbb
push
shl
addr16
adc
sub
push
inc
mov
jns
ss
sub
mov
add
pushw
int3
jo
(bad)
and
dec
and
mov
push
mov
push
jne
or
pusha
outs
sbb
inc
sbb
call
adc
push
(bad)
push
push
or
xor
xor
push
adc
dec
push
inc
jae
dec
fs
or
out
and
icebp
push
aaa
jo
push
or
and
jbe
ja
inc
and
and
fld
or
shr
fsub
pusha
sar
mov
xor
mov
mov
dec
sbb
sbb
sub
sub
(bad)
rol
push
inc
inc
add
outs
jns
fs
fild
ret
aam
adc
xor
or
push
mov
jmp
cmp
push
inc
test
inc
jl
xor
add
xchg
dec
lock
rol
or
ror
push
cld
inc
inc
push
outs
xchg
popa
add
mov
test
push
jge
arpl
cwde
ficom
xchg
jns
inc
mov
push
xor
and
movs
add
or
or
pop
hlt
jp
in
ins
jno
dec
(bad)
(bad)
and
rol
push
out
stos
les
or
shl
dec
and
jle
adc
adc
fs
stos
xor
pop
in
xchg
js
loop
mov
retf
dec
adc
push
adc
sub
ins
outs
outs
dec
bound
jae
sub
dec
jb
xor
jae
mov
arpl
gs
sbb
sub
stos
or
add
sbb
inc
mov
mov
dec
push
outs
adc
inc
push
nop
and
add
fadd
xor
addr16
sbb
adc
or
inc
mov
mov
add
cmp
ficom
pusha
xchg
sar
jae
adc
push
pusha
push
cwde
push
je
outs
call
push
test
mov
cli
xor
mov
add
gs
(bad)
inc
imul
add
sub
stos
sub
ss
jp
mov
jle
lods
mov
xor
push
outs
pop
push
adc
sbb
push
pop
cmp
xor
aad
and
inc
outs
push
adc
sbb
arpl
(bad)
push
inc
push
inc
or
sahf
add
imul
cmp
cmp
mov
loopne
xchg
xchg
or
data16
outs
push
jo
jno
outs
push
aam
sbb
xchg
hlt
stos
xor
and
pusha
fwait
inc
xor
out
ss
mov
cs
xor
mov
xor
and
dec
xor
push
in
aad
cmp
imul
add
dec
outs
add
sub
imul
out
xchg
sub
push
push
push
data16
inc
inc
imul
add
and
data16
jne
add
pushf
xchg
xor
and
push
ds
movs
or
loop
pop
or
out
ins
loop
sub
dec
data16
jb
stos
add
jo
push
adc
or
dec
add
mov
xor
dec
les
xor
sbb
inc
aad
add
pop
dec
adc
retf
ret
(bad)
arpl
jp
into
enter
js
jp
jo
dec
pop
add
push
push
and
dec
inc
add
mov
mov
add
jle
scas
adc
push
shl
inc
jne
xor
xchg
movs
pop
pop
outs
and
xor
push
ss
aaa
mov
sbb
cmp
push
cs
and
rol
out
fiadd
inc
cmp
imul
dec
xchg
xor
jne
or
push
xchg
call
xor
mov
popf
(bad)
pop
test
dec
xchg
pop
fwait
pushf
call
inc
es
call
and
mov
inc
or
outs
cwde
lods
push
or
push
xor
inc
in
scas
push
sbb
mov
call
and
mov
js
mov
cld
push
inc
lea
fimul
test
and
push
sub
dec
ss
repnz
fs
or
push
cwde
or
ins
cdq
jo
push
push
add
mov
pop
outs
inc
xchg
shl
push
jae
dec
test
jo
int3
push
nop
shl
jb
jo
adc
jno
mov
imul
or
sub
push
xor
inc
inc
inc
add
add
push
adc
sub
push
rol
cdq
rcr
add
sbb
mov
push
addr16
dec
push
add
inc
loop
cmp
inc
xchg
rcl
lods
or
push
xor
jns
or
je
and
ret
hlt
bound
push
and
mov
nop
dec
sub
jne
add
ret
loopne
sahf
cld
mov
dec
ret
stos
jp
sbb
xchg
test
xchg
push
jb
movs
loopne
dec
xchg
(bad)
lock
and
pop
xchg
add
inc
push
mov
mov
push
sbb
dec
rol
out
adc
les
pop
dec
outs
add
pop
fisub
mov
mov
push
test
test
out
mov
loop
aaa
jae
mov
pop
cmps
cmp
xchg
push
movs
mov
hlt
loopne
out
add
lods
xchg
ret
ja
jp
test
push
mov
jl
xor
sub
fisub
add
xor
nop
push
pop
ja
xor
xchg
(bad)
aam
and
jp
movs
push
jo
push
outs
mov
and
or
adc
aaa
adc
and
push
push
push
inc
cmovge
ret
ror
xchg
and
aaa
outs
push
retf
push
test
mov
cmp
mov
imul
outs
inc
ins
cmp
lea
push
mov
jb
cwde
and
add
push
or
call
push
fdiv
xor
sub
in
ins
arpl
pop
xor
call
fs
and
add
nop
dec
dec
jp
add
push
out
dec
ror
xor
jo
or
push
xor
je
inc
cmp
loopne
sub
inc
cmp
xchg
cmps
cmp
inc
inc
ret
mov
sub
mov
jbe
mov
mov
or
dec
call
ret
(bad)
ins
test
add
pusha
cmp
test
and
lock
pop
js
push
jb
arpl
xor
call
sub
adc
push
lods
imul
mov
(bad)
mov
jae
push
sub
jle
dec
sahf
pop
and
mov
les
ret
dec
pop
cwde
push
dec
popa
sbb
adc
out
and
or
ret
fs
sub
pop
or
or
pusha
adc
int3
push
push
loopne
or
add
sbb
cmp
jp
fwait
or
adc
sbb
mov
pushf
dec
or
adc
jbe
adc
fs
je
cwde
bnd
add
cmp
sbb
mov
xor
inc
sbb
jno
mov
inc
add
pop
xor
ins
rcl
shl
fsub
add
push
adc
icebp
mov
pop
push
inc
push
je
xchg
fsubr
fdivr
cld
or
or
stos
(bad)
inc
ins
jbe
jo
and
push
mov
(bad)
xor
dec
mov
or
js
aaa
mov
dec
jo
lock
jae
pop
xor
jno
jns
and
or
dec
dec
push
push
pop
es
inc
movs
jb
xor
or
out
cmp
xchg
shl
add
inc
xor
mov
dec
call
push
fwait
mov
xor
add
mov
push
push
adc
outs
je
gs
mov
xor
sub
arpl
int
add
mov
cld
cmp
pop
movs
mov
outs
popa
sub
xor
fcomp
mov
add
xchg
retf
sahf
cmp
and
push
imul
xchg
xor
mov
sbb
xchg
inc
xor
push
pop
add
jae
ds
pusha
inc
repnz
jb
add
push
mov
clc
add
or
outs
adc
xor
lds
gs
pop
mov
xor
cwde
sahf
dec
or
push
inc
mov
xor
gs
inc
mov
fsubr
or
inc
popa
fs
inc
or
xchg
push
retf
or
fidiv
fidiv
inc
inc
jb
inc
mov
inc
inc
add
shl
push
shr
ret
add
adc
push
or
xor
fs
xor
outs
inc
pop
jb
xchg
xchg
neg
xchg
add
inc
mov
adc
stos
stos
push
jmp
in
in
dec
int3
mov
arpl
push
data16
adc
inc
push
bound
jo
xor
and
mov
xchg
inc
pop
jp
fs
inc
jmp
or
dec
or
push
mov
enter
dec
data16
inc
es
push
pop
sbb
push
xor
repnz
pop
xor
gs
dec
sub
or
or
sub
or
inc
xchg
aam
js
cmp
xchg
test
jo
inc
repnz
or
push
dec
je
jbe
mov
cmp
mov
pop
dec
jbe
push
adc
sbb
push
pop
not
je
mov
push
sbb
mov
jae
dec
shl
jo
ror
sbb
push
push
mov
hlt
sbb
add
add
stos
mov
inc
pop
mov
cdq
xchg
or
dec
xor
imul
shl
arpl
out
inc
imul
push
loope
adc
bound
pop
add
xor
(bad)
add
and
aaa
fisub
jmp
and
and
pop
and
mov
xlat
push
jns
loopne
into
inc
push
add
pop
rol
dec
scas
dec
outs
imul
push
adc
nop
xor
dec
je
jbe
xor
sbb
ja
outs
sub
outs
sbb
inc
push
xor
pop
inc
js
dec
xchg
mov
jbe
ss
xor
mov
dec
(bad)
xor
pop
inc
jmp
pop
call
movs
mov
sub
call
and
sahf
and
test
rcr
mov
mov
push
popa
sub
sub
fcom
jbe
aaa
ror
sub
je
add
shr
fild
imul
add
cmp
dec
push
dec
add
mov
xor
(bad)
jns
jo
pushf
rcr
push
mov
xor
jg
pop
push
jb
or
inc
or
xchg
or
mov
jb
push
mov
(bad)
les
fld
pop
dec
inc
aaa
mov
xor
stos
or
dec
push
and
mov
dec
or
inc
dec
ss
jb
mov
gs
push
nop
inc
xor
push
imul
ret
push
dec
pushf
push
mov
fs
inc
pop
push
sub
fimul
outs
mov
xor
push
aam
mov
push
push
ins
cs
rol
outs
xor
push
leave
jmp
shl
mov
xor
xor
nop
inc
or
cmp
ror
mov
sub
cmps
aam
fst
imul
mov
pushf
test
dec
fs
push
mov
ja
push
adc
out
push
inc
ret
out
xor
movs
mov
cwde
adc
adc
inc
push
adc
pop
mov
push
add
dec
sub
scas
inc
inc
inc
cmp
jmp
jl
inc
enter
or
sub
jo
xor
leave
scas
out
cmp
sub
pop
inc
push
inc
sub
cmp
xor
mov
(bad)
inc
dec
ins
or
pop
(bad)
out
inc
mov
xchg
xor
xor
xchg
push
inc
les
pop
enter
jo
dec
inc
ins
mov
and
mov
pop
shl
push
cli
nop
les
outs
dec
outs
xor
imul
add
mov
pop
lods
hlt
arpl
dec
add
push
mov
rcl
xor
cmps
add
or
ds
aaa
push
ins
and
inc
push
ins
loopne
clc
ja
daa
push
les
push
addr16
sbb
gs
in
sar
call
test
jle
jp
mov
push
adc
in
shl
pushf
cs
add
cmp
test
les
enter
or
pushf
pop
jb
and
inc
ss
push
dec
cmps
arpl
out
push
sub
mov
movs
push
adc
sbb
cmp
es
sub
add
popa
xor
add
xchg
lods
callw
ja
je
mov
or
push
inc
int3
sar
push
sub
(bad)
cmp
xor
call
cmp
jo
push
or
push
loop
shr
nop
ins
imul
inc
pusha
adc
es
add
xchg
ret
addr16
dec
or
mov
or
sar
push
inc
imul
je
fdivp
mov
repnz
imul
ror
mov
dec
xchg
ror
push
aam
xlat
popa
xchg
inc
les
js
dec
push
or
push
bound
push
movs
ja
inc
jbe
push
dec
dec
imul
xor
add
clc
and
cwde
jl
mov
xor
movs
inc
mov
rol
xchg
dec
sub
xor
add
fidivr
xor
inc
ins
fadd
xor
inc
adc
dec
add
pop
and
mov
test
popf
loopne
outs
mov
inc
push
mov
popa
lock
inc
push
sbb
stos
shl
push
popa
inc
and
lock
dec
sar
or
sub
test
dec
jb
inc
adc
inc
mov
loope
push
rcl
or
add
jb
dec
aaa
dec
movs
inc
mov
loopne
cmp
mov
sbb
ror
lods
adc
ret
arpl
inc
(bad)
adc
push
push
je
inc
jne
jo
fdiv
stos
arpl
mov
adc
mov
inc
jb
(bad)
nop
sbb
les
cmp
dec
mov
dec
clc
inc
and
xor
sub
cs
shl
clc
js
adc
cmp
popa
mov
xor
fcom
or
mov
inc
cld
je
pop
push
adc
data16
dec
xchg
and
push
inc
xchg
ss
inc
daa
xor
pushf
jbe
or
xor
xsaves
cwde
fsubr
cmovge
pop
sbb
jae
inc
aam
jne
pop
push
or
je
gs
xor
test
dec
jge
cmps
arpl
test
ss
inc
ja
imul
sub
add
pop
lea
or
push
add
data16
pop
fwait
sub
dec
dec
ret
add
xchg
in
(bad)
(bad)
and
callw
cmp
pusha
add
push
xor
inc
mov
dec
push
or
stos
pusha
ret
mov
dec
ins
push
sub
or
xor
xor
lods
push
jp
and
add
outs
jmp
or
xor
sub
ret
push
or
push
xor
jo
nop
fsubr
xor
dec
ror
or
sbb
mov
int3
dec
push
inc
outs
cmp
ret
cmps
sub
ss
sub
fstp
mov
ds
jbe
mov
sub
fs
xor
cmps
jbe
inc
xchg
add
add
or
in
add
cmp
dec
imul
add
aaa
adc
push
lea
cmp
adc
sub
sub
sub
cdq
ins
adc
inc
ins
add
shr
adc
cmp
inc
stos
fsubr
or
xor
cs
pop
cli
cmp
ret
add
and
xor
inc
pop
sub
bound
adc
cs
sub
imul
adc
push
cmps
dec
cmp
stos
push
inc
sbb
and
push
loopne
add
jne
movs
mov
or
dec
dec
push
ins
jle
cwde
mov
xchg
jp
dec
stos
test
and
aam
loopne
or
mov
xchg
add
arpl
push
inc
pusha
call
mov
dec
push
ror
adc
and
inc
dec
cs
js
fs
push
dec
add
cmp
dec
sbb
inc
xor
xor
dec
dec
mov
(bad)
cmp
add
add
(bad)
int3
jno
xor
sub
jbe
xor
sub
data16
push
ss
adc
pop
or
pop
push
mov
xor
mov
aas
loopne
pop
push
pop
dec
and
push
push
cmp
call
dec
xchg
fmul
push
loop
fcom
or
push
xor
jne
sub
mov
fcom
ficomp
inc
stos
test
push
retfw
pop
mov
cmp
jb
sub
push
push
call
dec
inc
jmp
or
xchg
or
sar
outs
push
xor
pusha
xor
sbb
sbb
bound
inc
or
push
nop
mov
pop
je
dec
jae
or
inc
test
mov
inc
shl
sbb
mov
out
popa
das
xchg
and
je
ins
xchg
push
adc
sub
scas
repnz
and
ins
and
ror
mov
dec
and
popa
push
(bad)
push
outs
jb
sub
shl
mov
xor
outs
push
nop
jle
ss
dec
jne
int3
and
dec
or
jne
inc
sub
aaa
mov
call
push
mov
ins
or
lods
sub
push
and
popa
adc
ret
push
cwde
or
into
jne
push
adc
jns
imul
mov
cwde
test
je
push
jo
pusha
mov
ja
push
adc
xor
sbb
js
and
push
dec
cli
clc
cmp
popa
inc
mov
loopne
in
fs
mov
add
push
pop
dec
dec
jo
sub
stos
dec
push
push
push
fimul
dec
push
sbb
mov
adc
sahf
inc
pop
bnd
xor
ins
push
push
pop
push
rol
(bad)
jmp
inc
outs
shr
or
lock
xchg
outs
test
jbe
mov
xchg
movs
(bad)
fdiv
xor
dec
fisubr
je
popf
pop
add
outs
xor
dec
inc
fs
push
(bad)
imul
imul
mov
inc
add
pop
movs
adc
pop
dec
(bad)
enter
arpl
add
inc
push
fld
jmp
cmp
data16
push
clc
movs
jo
xor
jmp
xor
ja
dec
ret
cld
jne
ins
push
or
jl
nop
push
pop
mov
push
outs
push
xor
sahf
push
pop
jns
dec
daa
mov
mov
dec
push
xor
xor
mov
into
jbe
enter
js
shl
dec
dec
push
cmps
or
gs
add
xor
push
je
push
bound
clc
inc
push
pop
jno
retf
xor
cld
dec
imul
cmp
jo
cmp
push
retf
mov
bound
mov
pop
add
mov
pop
push
je
fld
dec
jb
inc
xor
and
xor
stos
jne
push
shl
mov
nop
xchg
arpl
arpl
push
push
xchg
cmp
shr
shl
fs
add
mov
cli
js
ja
push
sbb
inc
mov
pusha
push
popa
pop
and
sbb
loopne
in
js
jb
or
xchg
fadd
adc
ss
ins
xor
jno
sub
or
add
retf
or
or
test
cli
jbe
add
test
stos
stos
test
scas
pop
loopne
add
inc
push
mov
test
dec
nop
xor
add
cwde
mov
or
mov
call
jae
pop
push
xor
mov
xor
adc
stos
enter
data16
push
test
dec
push
mov
inc
dec
clc
scas
add
xor
outs
cmp
mov
xor
ins
mov
lock
push
outs
sub
xor
add
xor
pop
clc
push
ins
xor
cmp
dec
and
pop
add
xchg
add
dec
and
imul
je
retf
mov
inc
inc
cmp
sub
dec
(bad)
or
inc
pop
inc
xor
push
push
fsubrp
imul
xor
mov
inc
sbb
js
push
or
sub
les
jne
into
xchg
stos
mov
dec
mov
ja
cld
dec
adc
sub
xor
or
and
mov
dec
sbb
xchg
cwde
sub
mov
fwait
dec
mov
push
jo
xchg
ficom
out
jo
xor
jne
fidivr
dec
and
adc
nop
sub
push
jp
inc
pop
inc
add
sbb
retf
sbb
cmps
sbb
fild
pushw
or
and
push
xchg
inc
nop
xor
fs
fdiv
ins
mov
fmul
or
pop
jns
lods
mov
and
jl
mov
addr16
or
and
es
jo
fisubr
adc
xor
mov
mov
int3
add
adc
sti
push
push
inc
addr16
loopne
mov
add
add
sbb
dec
and
data16
loopne
aam
sub
ja
add
push
or
imul
loop
dec
lods
movs
adc
adc
sbb
nop
dec
jo
adc
fdivr
inc
or
outs
push
sbb
jl
and
mov
mov
daa
cmc
dec
dec
pop
and
js
push
dec
push
push
dec
add
add
loopne
mov
imul
add
add
inc
xchg
adc
push
mov
test
fisttp
ja
dec
jb
sub
or
(bad)
(bad)
les
imul
fcom
inc
jns
add
or
push
call
push
mov
inc
push
bound
fcom
es
fwait
and
mov
adc
fs
movs
sbb
pop
dec
mov
mov
xchg
push
or
cmps
xor
fs
push
sbb
sbb
in
xchg
xor
cmp
sub
xor
outs
xor
enter
shr
mov
mov
and
test
out
pop
loopne
xchg
ror
pop
ret
sbb
sub
or
sub
or
jo
push
xchg
inc
xor
pusha
jae
push
pop
lea
xor
push
retf
adc
mov
enter
sub
sub
inc
loopne
sbb
pop
mov
mov
mov
push
popa
cld
scas
or
addr16
xor
inc
mov
sub
jae
or
pop
xor
push
mov
data16
and
nop
adc
mov
icebp
test
fsubr
aam
idiv
push
aam
dec
ds
bnd
sub
mov
xor
push
push
xor
or
jns
cwde
movs
popa
xchg
push
push
cs
test
stos
sar
add
mov
push
dec
sub
sub
rol
xor
inc
mov
mov
dec
xor
fidivr
ins
imul
xchg
or
inc
cs
push
dec
add
jp
xchg
pop
gs
retf
sbb
call
addr16
sbb
dec
xor
stos
loopne
mov
xchg
jo
jno
push
push
jbe
push
or
fisub
bound
push
(bad)
ror
outs
test
jo
movs
mov
js
adc
sub
shr
les
xor
push
cmp
outs
dec
adc
nop
cmp
xor
js
push
test
sbb
dec
dec
inc
cmp
ins
ss
inc
inc
outs
or
pusha
in
xor
imul
push
ss
out
inc
adc
sub
dec
dec
sbb
arpl
push
or
imul
or
inc
inc
push
aad
shl
cld
dec
imul
fimul
hlt
jns
shl
jbe
les
sbb
ss
es
dec
inc
popa
xor
inc
test
test
mov
movs
in
dec
jp
inc
adc
jns
ss
push
clc
shr
sbb
pop
sub
inc
shl
push
or
pop
mov
xor
movs
ja
inc
data16
mov
mov
xchg
push
idiv
(bad)
push
movs
push
(bad)
mov
push
push
xor
cs
lea
loop
add
xchg
push
ss
mov
xor
test
cmps
(bad)
mov
add
inc
push
mov
mov
repz
push
jns
sbb
or
push
jno
jp
inc
mov
dec
add
adc
adc
add
push
add
adc
dec
pusha
pop
out
data16
(bad)
cmp
movs
push
push
xor
inc
enter
pop
adc
fsub
xor
frstor
cmp
addr16
popa
push
add
retf
inc
xor
(bad)
(bad)
xor
bound
inc
dec
pusha
lock
aam
or
xor
lds
adc
push
jo
dec
lds
data16
inc
sbb
jp
retf
ret
cld
dec
dec
push
inc
sub
adc
push
jae
je
xchg
cmp
jno
inc
pushf
lods
adc
push
xchg
dec
fmul
imul
push
xchg
test
adc
imul
arpl
jo
scas
push
add
xchg
test
adc
ror
cmp
movs
outs
mov
add
mov
loopne
or
mov
push
pop
fsubr
(bad)
push
xchg
add
mov
pusha
push
test
push
jbe
inc
pop
dec
sub
inc
sahf
pop
and
adc
inc
ss
pop
outs
leave
mov
and
add
dec
in
call
and
push
add
sbb
sbb
out
xchg
push
jp
xor
(bad)
(bad)
mov
cmp
mov
pop
jne
call
jo
outs
cmp
fidivr
pop
pop
sub
(bad)
cwde
push
dec
popa
inc
add
bound
or
or
dec
(bad)
(bad)
(bad)
sbb
push
je
xor
bound
xor
xchg
inc
push
ss
cli
mov
jae
inc
xchg
ds
or
dec
jo
inc
shl
sub
int3
pushf
call
pop
xor
test
mov
rcl
dec
and
jp
inc
cmp
mov
call
enter
push
adc
movs
cli
inc
mov
test
fcmovu
outs
ja
mov
mov
cmp
arpl
shr
sbb
call
or
mov
and
dec
sub
pop
jb
or
lods
push
push
or
aad
ins
inc
lock
cs
cmps
mov
jp
lods
xchg
push
rol
push
xor
popa
inc
add
dec
adc
xor
cs
inc
inc
cmp
xor
mov
sub
inc
shr
ins
mov
adc
jb
test
jo
add
add
or
mov
sbb
pushf
inc
outs
fadd
add
inc
sub
and
push
add
or
fidiv
jmp
inc
call
shl
inc
xor
push
fwait
add
xchg
bound
loopne
mov
outs
popa
scas
xor
pushf
fs
sub
xor
sub
sar
or
add
sbb
adc
pop
xor
stos
adc
push
add
inc
jl
push
push
push
cs
jbe
pop
cmp
xchg
add
int3
xor
call
adc
push
and
arpl
mov
into
xor
mov
xor
or
sub
bound
aas
pop
xor
add
loopne
mov
pop
mov
dec
or
outs
sar
pop
or
test
pop
mov
pop
and
pop
push
jle
mov
push
in
cmp
gs
jmp
ss
and
call
imul
adc
pop
imul
out
mov
bound
push
adc
mov
inc
add
adc
push
pop
cmp
jne
inc
js
push
shl
add
movs
out
nop
out
push
lods
push
addr16
sub
push
push
add
push
add
sbb
ret
sbb
or
test
add
mov
nop
cmps
inc
mov
jbe
dec
push
jp
nop
imul
enter
xor
inc
sub
loopne
sbb
addr16
inc
jns
dec
enter
inc
popa
push
and
add
inc
push
mov
mov
ja
mov
inc
imul
or
fidiv
sub
gs
sub
add
shl
jne
add
ins
push
push
or
push
pop
test
dec
ret
and
or
je
stos
sub
sbb
push
popa
adc
or
jbe
cmps
push
loopne
push
pop
inc
inc
fcmovnb
inc
adc
imul
sub
xor
jno
test
jno
and
xchg
adc
xor
aaa
outs
je
sbb
scas
push
xchg
aaa
ins
ss
and
in
add
aad
outs
xor
xor
sub
in
push
xchg
push
push
sti
push
jp
inc
add
ss
inc
or
push
sbb
cmp
xchg
fisubr
ja
outs
dec
mov
xor
add
ds
or
dec
loopne
or
inc
mov
mov
inc
(bad)
mov
xor
ficom
jp
and
pop
push
or
ficom
ins
mov
and
inc
fcom
dec
cmp
or
and
cmps
and
sahf
xchg
stos
dec
popa
outs
add
mov
dec
aaa
aaa
xor
fist
sbb
(bad)
popa
dec
inc
add
lea
scas
push
add
mov
and
sbb
push
push
rcl
pop
pop
dec
dec
jae
adc
mov
add
stos
mov
test
sub
mov
sbb
push
xor
mov
inc
push
movs
shl
add
sub
inc
retf
adc
pusha
sbb
sahf
adc
jmp
inc
in
inc
lods
div
push
imul
test
inc
jo
push
xor
dec
jmp
jp
ja
dec
mov
jbe
ss
or
ss
sub
and
sub
fs
or
xchg
sub
mov
push
mov
or
loope
rcl
ret
inc
or
aam
ss
pop
sub
xor
sbb
xchg
int3
fs
xor
xor
cmp
fsubrp
dec
mov
stos
push
inc
adc
push
add
push
es
sub
ins
jmp
pop
ins
test
jbe
pop
and
xor
and
inc
inc
pusha
push
pusha
push
lock
and
pop
popa
mov
or
cmp
sbb
add
loope
push
sub
jae
pusha
and
imul
xor
adc
dec
jno
and
adc
xchg
cld
pop
mov
pop
mov
and
or
lock
and
fcom
sar
add
dec
cmp
add
mov
jecxz
xchg
je
jmp
outs
push
push
jle
mov
dec
or
adc
mov
ja
push
repnz
inc
xor
or
fst
bound
aaa
fs
mov
rcl
push
cmp
shl
bound
push
mov
jbe
xor
xchg
dec
xor
pushf
push
sbb
dec
and
nop
cli
push
inc
gs
pusha
mov
push
es
jmp
mov
int3
enter
and
inc
ins
adc
push
xor
mov
xchg
add
adc
sub
sub
xchg
repnz
or
inc
in
inc
mov
xchg
cmp
mov
imul
push
inc
add
inc
mov
sub
fs
pop
mov
sbb
scas
pop
lock
fs
jo
ret
adc
aaa
add
push
pop
fwait
or
push
retf
dec
adc
ret
mov
ins
xor
dec
and
xor
mov
adc
xor
ret
aam
xor
xor
es
push
sbb
ins
jmp
add
inc
data16
xchg
call
leave
xchg
jmp
pop
xchg
push
mov
and
sahf
inc
arpl
inc
js
mov
(bad)
mov
jo
mov
adc
cld
xor
fcom
in
inc
jb
mov
cmps
pop
loopne
(bad)
mov
xor
cmp
mov
add
and
sbb
jp
xor
shr
mov
sahf
outs
gs
push
jo
xchg
call
inc
sub
xchg
cs
inc
imul
mov
dec
fucom
push
push
sbb
outs
js
xor
fwait
mov
jne
push
and
fs
dec
add
xor
mov
xchg
push
xor
push
dec
add
add
or
outs
and
int
inc
pushf
test
jne
xor
mov
aam
pusha
mov
push
adc
or
xor
movs
jbe
into
bound
outs
(bad)
rol
push
lock
add
inc
mov
or
push
outs
dec
push
pop
lds
js
inc
dec
push
aaa
add
inc
or
dec
dec
add
es
push
add
jno
lock
xchg
mov
inc
inc
(bad)
xchg
or
xor
xor
jmp
xor
push
inc
outs
mov
mov
rcl
dec
jbe
mov
push
sbb
adc
gs
dec
inc
in
jo
mov
inc
adc
jo
push
adc
fs
mov
add
dec
cld
adc
inc
jb
dec
dec
inc
cmp
push
sub
(bad)
gs
push
cmp
xor
push
call
add
inc
js
bound
mov
lods
inc
push
pusha
cmps
lea
jbe
dec
dec
and
fbstp
inc
xor
dec
into
cmps
add
xor
mov
pop
or
stos
imul
inc
jl
push
loopne
inc
test
dec
nop
xor
stos
dec
xor
xor
nop
jp
data16
push
outs
mov
shr
push
inc
dec
add
mov
push
push
sbb
repnz
sub
outs
dec
push
adc
and
in
or
jo
sbb
bound
ret
stos
call
test
and
ins
jo
push
cmp
inc
push
xchg
sahf
dec
data16
pusha
cmp
xor
xor
cs
(bad)
sbb
xor
inc
push
push
add
inc
add
push
shr
push
popa
inc
and
fs
push
sbb
sbb
xor
or
and
retf
es
mov
pop
jb
and
adc
ds
pop
ret
add
add
push
push
push
push
jbe
pop
add
sbb
aaa
mov
cwde
and
je
add
stos
les
test
mov
xchg
inc
aaa
push
and
push
mov
ins
bound
mov
movs
clc
ja
dec
pusha
retf
jmp
stos
jb
enter
adc
jb
jle
add
lock
mov
xor
ins
addr16
push
sub
adc
out
pop
outs
jg
add
inc
mov
jmp
rol
popa
ret
inc
jbe
xor
sub
leave
aam
sub
push
push
test
je
jl
jo
pop
aam
push
mov
xor
push
mov
cwde
(bad)
jp
dec
adc
test
inc
popf
xchg
lock
xor
outs
in
test
mov
mov
je
dec
sub
jb
sbb
call
mov
aam
cmp
add
ss
pop
hlt
mov
or
xor
imul
mov
adc
mov
jo
ss
sahf
mov
sbb
cwde
popa
xchg
imul
ins
jne
int3
and
adc
pop
sub
mov
sbb
shl
adc
add
xor
or
adc
sub
dec
add
frstor
pop
imul
mov
and
add
test
adc
pop
sub
dec
adc
xor
ins
bound
stos
add
imul
loopne
push
stos
bound
and
mov
pusha
sub
hlt
inc
dec
dec
outs
ret
les
inc
ss
test
cmp
retf
jp
inc
int3
int3
xchg
add
ins
bound
arpl
cs
dec
cmp
stos
mov
dec
pop
jne
push
xor
xor
sub
and
push
loop
push
dec
push
jl
outs
inc
fst
outs
xor
ins
je
jmp
ss
mov
es
dec
push
and
add
push
cwde
mov
mov
shl
test
loopne
lock
test
stos
jle
and
adc
mov
add
add
push
adc
push
mov
lods
sbb
xor
test
push
inc
jne
inc
mov
es
inc
(bad)
mov
adc
mov
call
mov
pop
js
xor
push
aam
xor
push
shl
xchg
bound
mov
fmul
dec
add
push
push
imul
cmp
dec
dec
loop
sub
pop
jp
inc
xor
shr
xor
xchg
or
push
xor
dec
add
xor
push
aaa
xchg
mov
inc
nop
rcl
or
retf
enter
xchg
mov
jo
test
inc
push
inc
mov
mov
outs
outs
ja
mov
inc
ja
mov
adc
dec
xor
adc
call
jb
and
adc
dec
push
imul
or
push
js
(bad)
dec
add
retf
and
inc
push
xchg
mul
push
hlt
sub
jmp
jae
adc
xor
fcom
add
and
push
ds
scas
cmp
mov
mov
mov
mov
adc
ss
jbe
addr16
push
popf
push
dec
push
push
aaa
sub
adc
data16
ins
dec
xchg
inc
push
xchg
fcom
pop
shl
ins
stos
loopne
push
dec
or
ins
add
dec
inc
or
xchg
mov
mov
inc
dec
xor
ret
push
outs
inc
dec
sub
pop
outs
push
data16
mov
push
dec
cmp
ja
cmp
adc
add
jb
mov
imul
jp
push
sbb
mov
adc
arpl
or
and
xor
fmul
and
outs
or
push
or
mov
push
call
adc
sahf
(bad)
bound
jne
test
mov
dec
js
or
inc
xor
and
cmps
test
jo
sub
cmp
dec
gs
sbb
aam
in
push
fsub
sbb
retf
push
xchg
outs
loope
or
inc
(bad)
test
sbb
loopne
ins
data16
sub
xor
sbb
nop
add
ds
cmp
or
xor
shr
push
and
xor
or
sbb
ret
jne
sbb
mov
sub
dec
ror
sbb
sbb
call
cmp
xor
mov
aaa
pop
jle
adc
arpl
mov
mov
fiadd
bound
jp
push
add
jp
ins
inc
dec
pop
gs
adc
inc
imul
cmp
push
mov
cmp
inc
mov
ret
adc
test
push
dec
nop
jne
std
fs
call
mov
stos
pop
addr16
adc
xor
pop
add
dec
sbb
and
test
and
xchg
imul
pusha
and
adc
jne
sub
or
jl
js
inc
adc
jo
push
push
jb
fimul
xchg
enter
sub
push
les
jae
clc
cmps
sub
fmul
arpl
xchg
dec
inc
push
cmp
arpl
push
jo
xchg
cmp
mov
inc
push
and
and
jno
pushf
nop
mov
jo
and
out
xchg
stos
add
stos
push
pop
inc
cmp
or
inc
outs
mov
adc
shl
lock
scas
xchg
xchg
inc
jo
inc
je
ficomp
or
push
cmps
xor
push
in
mov
inc
inc
ret
push
cmp
cmp
aaa
add
xor
jbe
dec
data16
dec
movs
es
inc
mov
xor
xor
dec
dec
jg
inc
data16
mov
jb
ror
daa
rol
shl
mov
or
mov
ja
and
jne
repnz
jne
jmp
test
pop
or
sub
jmp
mov
adc
inc
push
xor
pop
bound
inc
ins
data16
outs
outs
fs
push
or
mov
and
add
cwde
pop
xor
adc
or
mov
jno
and
xor
and
xor
bound
add
mov
clc
js
xor
adc
adc
or
mov
ins
mov
dec
arpl
dec
push
inc
pop
outs
adc
cwde
inc
mov
outs
mov
arpl
stos
ins
loopne
mov
xchg
jno
inc
adc
dec
js
fadd
xor
retf
inc
call
xchg
jbe
sbb
mov
shr
adc
retf
dec
mov
jb
test
jle
xchg
sbb
scas
ss
mov
add
leave
mov
cwde
or
outs
retf
dec
add
fs
test
loop
sub
mov
outs
ins
repnz
inc
push
adc
push
jns
nop
mov
lods
dec
push
add
dec
jo
retf
popa
adc
imul
push
mov
add
inc
push
mov
fmul
or
xor
add
enter
fs
xor
aam
add
push
addr16
mov
add
fs
adc
xor
cmp
add
cmp
jmp
add
ja
push
and
push
push
and
adc
jo
mov
dec
test
outs
inc
shl
inc
shl
stos
clc
push
inc
js
xor
sub
push
adc
sbb
and
mov
mov
cmp
inc
jmp
dec
or
add
adc
bound
xchg
bound
sbb
xor
hlt
arpl
adc
sub
push
xchg
inc
jno
movs
imul
bound
or
int
inc
xchg
inc
push
popa
xchg
adc
and
ss
fcmove
test
add
cs
push
test
xchg
mov
pop
test
cwde
in
cmps
aaa
js
es
or
or
mov
mov
popf
pop
add
dec
inc
jns
outs
adc
sub
xchg
dec
push
sub
int3
adc
pop
xchg
push
mov
shr
sub
adc
and
rol
dec
or
call
lahf
pop
fisub
dec
jle
outs
cmp
adc
sub
dec
inc
out
outs
mov
push
add
idiv
test
pop
inc
pusha
int3
adc
xchg
cmp
xor
fs
xor
cmp
xchg
xor
xor
cmps
arpl
or
jo
mov
pop
cwde
jae
dec
xor
adc
cmp
xor
bound
inc
fs
test
loop
ja
stos
add
push
add
xchg
add
popa
sub
fisub
repnz
mov
xor
push
ins
xchg
je
inc
add
lods
gs
jp
ret
rcr
out
cmp
je
xor
in
cmps
(bad)
push
mov
addr16
push
fidivr
push
push
cld
push
les
mov
ss
push
xchg
jae
push
adc
and
dec
dec
add
sbb
jp
pop
ins
push
xchg
cld
push
ins
stos
add
mov
jns
dec
shl
xor
or
gs
inc
fisub
push
inc
data16
fiadd
dec
pusha
test
dec
inc
es
jbe
test
dec
mov
outs
push
ins
data16
es
jl
mov
inc
and
dec
xchg
xor
ins
je
add
ja
push
outs
inc
repnz
jbe
mov
jae
arpl
int3
test
push
cmp
fs
add
jo
push
ss
sub
xchg
movs
adc
xchg
mov
in
lock
mov
inc
push
pop
sbb
inc
xor
sbb
cmp
or
ins
lock
or
int3
add
push
xchg
xor
dec
adc
clc
add
dec
shl
push
jb
add
push
push
js
adc
fsub
test
dec
xor
test
les
push
and
mov
push
xor
and
adc
mov
or
in
and
and
in
and
add
add
stos
sub
mov
add
push
rol
push
mov
push
xor
fwait
inc
sar
es
mov
clc
xlat
push
mov
addr16
dec
(bad)
test
mov
jne
es
inc
scas
push
xor
or
push
jno
pop
retf
and
dec
scas
test
loopne
mul
lock
or
or
(bad)
push
or
gs
nop
fdiv
dec
dec
mov
fs
cmp
mov
pop
jno
add
cmps
aaa
test
or
inc
retf
push
dec
fs
je
mov
test
sub
ds
inc
xor
test
push
and
add
dec
adc
push
es
ins
ss
movs
mov
push
xor
mov
sbb
je
cdq
sbb
loop
sbb
xor
add
jp
fcmovnu
mov
inc
ins
add
nop
fsub
inc
xchg
inc
push
xchg
mov
imul
add
and
add
mov
add
sub
in
dec
loopne
test
movs
push
sub
or
and
push
outs
dec
outs
cwde
outs
fidivr
pop
jo
adc
(bad)
outs
data16
add
push
pushf
push
mov
call
mov
inc
pop
imul
xor
inc
jae
push
adc
es
inc
clc
test
out
dec
push
push
or
jno
retf
add
das
xor
mov
push
jp
dec
inc
push
push
ins
add
push
and
sbb
and
push
push
sbb
inc
dec
mov
pop
pop
nop
adc
adc
push
aaa
cmp
outs
scas
and
jae
push
add
add
loopne
push
xchg
es
mov
cmps
ret
inc
mov
test
xchg
fiadd
xor
dec
inc
inc
add
in
mov
es
mov
push
push
cmp
jo
xor
sub
cli
(bad)
sub
es
xor
das
cmp
pushf
fadd
push
es
mov
inc
mov
inc
dec
jb
inc
bound
fs
mov
pushf
push
mov
dec
jmp
sbb
ss
jb
pop
jae
pop
inc
inc
push
adc
xor
test
inc
arpl
pop
push
ret
mov
cld
jne
push
sbb
xor
pop
push
cwde
inc
or
shr
xchg
outs
scas
repnz
pop
out
xor
ror
cmp
dec
ins
inc
loopne
fmul
mov
dec
mov
arpl
adc
dec
cmp
arpl
mov
jo
dec
xor
sub
add
cli
push
xor
aam
mov
inc
xor
inc
mov
xchg
add
loopne
js
cwde
sbb
push
mov
ins
call
jbe
fdivr
jp
xor
push
adc
xor
test
or
inc
stos
aam
inc
dec
push
or
jb
cwde
rol
xchg
and
js
dec
push
call
push
js
adc
test
cwde
push
sbb
fsub
sub
sbb
stos
inc
or
fsubrp
inc
add
or
inc
data16
or
(bad)
jno
or
ins
jbe
jne
push
clc
xor
sub
test
mov
mov
xchg
and
sbb
xor
mov
dec
mov
jne
or
push
bound
mov
push
add
push
cdq
ss
push
sahf
cwde
dec
test
pop
sub
rcl
cwde
dec
dec
cmp
xor
js
lea
test
fdiv
or
xchg
ins
or
test
mov
cmp
and
shl
mov
mov
adc
xor
ins
gs
push
ret
adc
mov
xchg
mov
jne
mov
adc
pushf
sbb
cdq
sub
in
jb
fs
xor
and
repnz
push
push
inc
pop
in
jo
ins
push
pop
jno
test
dec
arpl
gs
mov
adc
adc
js
je
add
or
dec
jbe
push
cld
sub
bound
jp
imul
in
sub
movs
jo
cmp
add
adc
adc
or
or
outs
stos
xchg
sub
sbb
add
push
nop
fisub
jo
fcom
shl
xchg
ror
inc
add
push
out
xor
inc
push
dec
jne
inc
inc
or
and
adc
movs
add
mov
inc
cmps
cmp
push
and
or
add
adc
jo
or
push
ja
add
ror
cli
push
push
pop
retf
call
popa
adc
xchg
test
outs
les
jb
xor
popf
and
push
sub
in
scas
addr16
mov
push
pop
mov
push
outs
ins
test
cmp
mov
inc
inc
pushf
add
sub
dec
cld
inc
cmps
or
je
test
pop
sbb
and
ins
jp
mov
xchg
and
cmps
pushf
ss
push
push
inc
xchg
mov
dec
les
pop
dec
pop
dec
adc
add
adc
push
add
or
mov
scas
mov
mov
(bad)
hlt
push
or
aad
dec
test
push
sub
ss
push
cwde
ror
mov
inc
inc
and
mov
xchg
pop
stos
bound
add
ret
push
bound
mov
sub
inc
pusha
or
sub
je
mov
sbb
movs
inc
sub
mov
inc
push
fiadd
arpl
sub
or
cwde
in
or
jl
cli
dec
sbb
sub
push
stos
dec
ins
inc
inc
or
jle
adc
jp
cwde
xchg
mov
xchg
inc
push
(bad)
sbb
push
call
mov
cmps
ins
pop
xor
add
int3
stos
fcom
push
inc
mov
fs
push
jb
jb
xchg
cs
push
xchg
outs
stos
ja
inc
lea
xchg
arpl
add
cmp
dec
push
mov
ret
fsub
push
ss
add
and
cwde
xor
dec
shl
es
inc
and
or
jo
inc
inc
mov
adc
int3
inc
ins
(bad)
jbe
push
mov
jo
inc
and
or
aaa
jne
inc
add
inc
add
and
js
push
xor
adc
push
mov
lods
pop
adc
dec
outs
mov
dec
mov
ins
fiadd
add
push
jbe
mov
xchg
inc
xor
addr16
xchg
mov
jo
sub
je
dec
sbb
inc
or
push
pop
mov
add
mov
inc
mov
adc
xchg
xor
imul
add
ins
cld
adc
or
jbe
inc
push
mov
movs
sub
push
cmp
inc
push
pop
(bad)
into
or
inc
fadd
add
xor
in
push
fiadd
xor
in
adc
pusha
inc
xor
lods
nop
pop
dec
pop
push
lods
push
push
loope
movs
les
adc
sub
pop
xchg
aam
lods
in
inc
ret
and
push
and
cs
add
dec
add
dec
or
add
inc
xchg
inc
dec
inc
add
pop
loopne
jle
mov
inc
cmps
inc
ret
shl
adc
jne
push
mov
xchg
inc
test
cmps
mov
cli
dec
xor
or
pop
enter
push
dec
mov
inc
shr
jne
pop
ret
inc
inc
aas
cwde
dec
ja
inc
mov
popa
inc
inc
xor
push
push
jmp
aam
mov
and
call
mov
push
dec
dec
push
pop
cmp
outs
callw
sahf
out
les
dec
or
xchg
or
add
scas
push
sbb
adc
dec
push
xor
rcl
and
push
sub
add
inc
sbb
xor
mov
dec
imul
add
cld
jo
push
inc
mov
shl
aaa
addr16
inc
jo
sub
or
shr
mov
mov
dec
inc
mov
inc
mov
push
mov
jo
aam
pop
ins
push
fs
imul
call
sub
mov
inc
aaa
and
inc
or
stos
data16
ss
push
xchg
xor
mov
adc
rcl
sub
pop
xor
inc
push
es
int3
xchg
(bad)
enter
add
add
push
mov
pusha
fdiv
inc
test
enter
push
fs
jp
cwde
out
arpl
mov
sbb
push
dec
je
push
xchg
add
ror
xchg
outs
push
pop
and
adc
fsub
and
adc
stos
loopne
scas
mov
mov
and
mov
fimul
inc
dec
xor
mov
imul
jbe
add
gs
popa
shr
jp
push
jne
shl
test
xchg
pop
mov
jb
stos
inc
(bad)
mov
pop
dec
dec
test
inc
add
stos
dec
jno
aam
sbb
cwde
dec
xchg
dec
adc
mov
dec
adc
test
push
hlt
dec
mov
inc
xor
les
mov
push
dec
test
push
je
mov
xchg
sbb
mov
add
push
push
mov
arpl
xor
outs
push
lock
pop
or
es
xor
inc
dec
add
pop
inc
leave
or
sbb
sub
xor
inc
imul
push
test
and
in
int3
cmp
fiadd
addr16
ins
xchg
inc
es
xor
xor
ins
daa
push
ins
or
or
push
pusha
cmp
push
sbb
addr16
rcr
jo
dec
jmp
push
inc
xor
xchg
sub
inc
adc
pop
push
xor
xor
inc
stos
and
push
imul
mov
xor
pop
dec
sbb
stos
mov
dec
imul
mov
mov
jbe
xor
addr16
ja
dec
push
adc
jmp
or
push
mov
mov
push
mov
je
cs
lock
adc
ins
scas
push
pop
push
xchg
test
imul
out
mov
sbb
jbe
retf
mov
bound
mov
es
and
into
dec
add
out
add
je
imul
je
push
push
aad
call
or
pop
inc
fadd
add
mov
mov
stos
nop
add
in
xor
inc
or
dec
pop
(bad)
push
push
add
jecxz
es
je
ss
or
fidiv
nop
and
add
cld
sbb
jo
xchg
adc
data16
inc
gs
dec
sub
jno
inc
pop
xchg
enter
dec
mov
scas
push
cmps
add
inc
mov
push
or
or
push
or
and
inc
(bad)
jae
adc
clc
retf
sub
cwde
nop
in
inc
ins
outs
pop
xor
xchg
ret
jbe
xor
sub
popa
enter
or
inc
fs
retf
dec
cli
sub
mov
jo
push
leave
add
ds
adc
xchg
adc
dec
repnz
es
imul
xchg
adc
sub
ret
ins
ins
mov
sub
pop
jbe
mov
fistp
push
adc
test
add
dec
xor
cmp
inc
and
push
adc
mov
je
data16
mov
push
push
push
movs
add
loopne
cs
test
dec
inc
jo
inc
sub
dec
xor
mov
cmp
fimul
push
je
push
mov
pop
gs
and
dec
test
mov
pushf
dec
dec
mov
jne
dec
push
xor
retf
and
adc
and
mov
inc
jns
mov
inc
imul
jns
adc
popa
arpl
push
adc
pop
mov
and
dec
cmps
mov
aad
test
push
aam
mov
adc
dec
lock
and
pop
js
adc
xchg
xchg
push
imul
add
outs
push
ins
mov
cwde
inc
push
push
mov
xchg
fs
mov
dec
test
mov
cmp
bound
inc
mov
test
cmp
call
loope
push
ins
(bad)
outs
(bad)
fsub
arpl
push
pop
fimul
dec
repnz
lods
add
inc
fimul
sbb
ss
imul
adc
inc
push
dec
jno
add
(bad)
je
dec
jo
dec
xchg
inc
mov
jne
cwde
inc
push
push
scas
test
push
fisub
xor
inc
and
dec
xor
xor
ss
in
add
sbb
dec
pushf
nop
xor
into
inc
inc
jp
cs
xlat
sub
push
(bad)
test
es
sbb
mov
xchg
ins
xchg
outs
add
movs
xlat
inc
(bad)
fsub
rcl
test
pop
rcl
inc
popa
inc
xor
jns
daa
je
sub
cmp
mov
jb
inc
adc
outs
sub
sbb
aam
dec
movs
push
fidivr
repnz
dec
add
or
popa
xchg
popa
xchg
sbb
pop
ins
sbb
ret
push
rol
and
mov
test
cld
ins
push
sbb
mov
arpl
dec
ins
inc
add
mov
inc
test
pop
push
cli
jns
push
inc
test
dec
adc
cmp
pop
xchg
arpl
dec
add
js
xor
cmp
push
xor
add
(bad)
or
aaa
inc
inc
jae
jne
enter
ja
adc
push
and
sbb
in
jp
xchg
gs
inc
retf
repnz
add
push
xor
je
mov
xor
adc
push
inc
pop
mov
jo
cmp
xor
pop
xor
xchg
movs
xchg
and
js
jne
bound
ins
test
xlat
fwait
mov
inc
push
xor
repnz
or
sub
xor
jl
jns
mov
push
cmps
jb
pop
jmp
(bad)
push
xor
xor
stos
push
push
dec
jo
mov
outs
inc
ds
je
jp
and
and
inc
push
scas
add
xor
outs
xchg
stos
or
ret
add
dec
dec
data16
xor
push
sbb
sub
push
jp
imul
dec
jl
in
add
ret
sub
ins
fdiv
push
outs
push
dec
push
push
and
sbb
or
inc
ror
inc
push
aam
shl
push
ss
sbb
ret
int3
cmp
bound
xor
cld
xor
call
mov
dec
ins
jge
push
jns
sbb
sub
mov
push
test
sbb
into
jo
mov
sahf
popa
jl
xchg
sub
and
mov
mov
ss
test
add
or
mov
loop
cmp
xchg
add
je
(bad)
imul
mov
cwde
sbb
adc
jo
push
outs
push
xor
or
push
ficom
test
push
dec
fs
adc
push
push
add
shl
push
aaa
lods
ret
push
dec
js
cmps
and
xor
ins
or
xor
push
sub
sub
push
jp
outs
(bad)
add
xor
adc
pop
pop
outs
inc
outs
mov
push
push
fiadd
and
ret
xchg
fadd
inc
popa
push
cs
inc
push
push
xor
sbb
add
fidivr
aad
inc
es
dec
movs
test
adc
cs
and
fimul
inc
dec
jb
fs
push
adc
xchg
cmp
ss
pusha
dec
popa
jo
imul
xchg
sub
jbe
test
je
push
push
outs
xor
dec
push
cwd
add
inc
or
pop
sub
cld
aaa
add
push
dec
data16
xor
jle
push
push
push
xor
pop
xor
push
push
dec
and
push
jno
sub
add
popa
mov
loopne
sbb
xchg
push
adc
xchg
adc
xor
pop
xchg
dec
push
dec
sub
inc
push
adc
push
xchg
inc
out
xor
sub
push
test
ins
mov
test
add
push
and
add
pop
in
mov
xchg
add
mov
dec
pusha
add
mov
add
jno
pop
dec
fisttp
jne
mov
jae
mov
outs
inc
adc
rol
jp
push
jae
xchg
fld
push
in
sub
dec
and
sbb
bound
mov
xchg
cmp
mov
adc
sub
pop
adc
arpl
(bad)
dec
ins
inc
mov
inc
movs
xor
scas
or
ja
ficomp
push
or
add
push
push
mov
pop
push
jmp
addr16
inc
and
or
mov
sbb
sub
pop
xor
cmp
inc
jo
adc
cmp
cmp
ins
adc
js
je
dec
pop
es
mov
mov
xor
bound
arpl
xor
inc
dec
mov
and
retf
sub
and
aam
inc
popa
lock
or
push
into
bound
fadd
mov
cmp
ds
sub
adc
inc
cs
pushf
push
jmp
lock
lods
cmps
ja
push
ins
addr16
mov
push
xchg
push
loopne
dec
mov
pusha
xchg
mov
dec
jae
mov
cmp
popa
loopne
mov
sub
je
mov
dec
test
test
mov
aad
cld
nop
pop
int3
dec
test
push
xchg
cmp
push
inc
and
jo
xor
lds
push
mov
push
inc
jbe
push
imul
and
mov
dec
dec
int3
and
dec
sub
mov
rcl
cmps
in
sub
add
add
ja
sbb
rcl
inc
stos
mov
xor
jae
inc
dec
jns
adc
dec
fs
adc
mov
enter
xor
inc
xchg
dec
and
loopne
call
jne
mov
xchg
pusha
cmp
pop
dec
hlt
sub
sub
sub
add
inc
test
xor
push
(bad)
cdq
fsub
pop
mov
mov
push
push
cmp
jo
test
sbb
mov
push
add
push
ins
ins
push
or
gs
sbb
fisubr
adc
mov
dec
lods
xor
xchg
push
or
jo
push
push
and
sbb
xor
push
sub
test
add
cdq
or
push
ret
or
imul
ret
nop
mov
push
inc
ret
inc
add
jo
xor
test
scas
ss
arpl
cli
inc
stos
adc
fimul
push
xchg
adc
inc
ins
test
les
dec
ins
push
inc
adc
sub
inc
pop
test
jno
push
inc
dec
mov
stos
push
cmps
xor
push
xchg
lods
fmul
lds
imul
cmp
retf
push
adc
call
sub
xor
push
mov
pop
xchg
dec
add
stos
jno
adc
adc
xor
mov
xchg
mov
inc
add
xchg
add
or
or
sti
push
push
dec
xor
addr16
push
inc
aad
ds
push
fs
sub
sub
enter
push
pop
xchg
xor
outs
xacquire
or
push
inc
inc
bound
jo
mov
mov
and
sbb
pop
push
mov
das
and
bound
dec
and
mov
jne
mov
scas
push
jno
cs
and
cmps
pop
adc
mov
jne
pushf
and
pop
or
mov
addr16
inc
mov
test
shl
ins
pop
imul
shl
inc
jmp
enter
sbb
jmp
je
ja
jo
dec
or
mov
add
int3
adc
dec
dec
push
out
js
add
sub
ds
xchg
mov
adc
push
pop
jle
cmp
inc
bound
xor
xor
ins
in
push
and
lock
mov
cli
mov
push
imul
push
inc
or
or
sbb
and
sbb
cmp
push
mov
push
jae
mov
pop
ja
inc
jle
push
xchg
add
shl
es
fs
cmp
rcl
ficom
adc
and
xchg
and
push
add
addr16
sub
call
das
push
xor
bound
push
addr16
sub
mov
push
bound
dec
bound
retf
es
outs
dec
fs
jnp
ins
cmps
jp
add
push
push
hlt
push
jle
or
xchg
inc
pop
imul
jp
sub
add
mov
gs
inc
popa
add
push
xor
dec
cmp
pop
cmp
mov
push
pop
ins
xor
outs
(bad)
jb
je
movs
push
pop
fs
xchg
push
xchg
or
add
les
lods
or
call
sbb
and
push
dec
dec
xor
or
sar
push
arpl
pop
push
lds
adc
dec
scas
test
inc
ds
call
or
add
sbb
loop
inc
adc
jl
xor
add
test
cmp
mov
cmp
imul
ss
test
push
pop
pusha
xor
pop
push
mov
es
test
and
and
(bad)
cld
add
xchg
gs
test
or
arpl
mov
add
jo
mov
push
or
test
xchg
xor
dec
mov
inc
or
push
inc
jp
data16
push
mov
dec
addr16
mov
fld
fs
dec
pop
xor
pop
popa
xor
push
cmp
mov
dec
inc
bound
test
adc
jb
les
xor
jb
fdivr
dec
(bad)
jns
cmp
adc
push
push
jb
or
adc
sbb
pop
sub
loopne
loop
imul
or
and
and
in
push
jp
dec
xor
call
cld
push
and
and
push
aas
cmps
ss
shl
out
jp
jne
or
cmp
or
or
push
dec
or
inc
pop
dec
retf
into
fidivr
jmp
gs
ss
out
cli
jl
lods
aad
cmp
je
daa
sub
fidiv
mov
cmp
xor
add
push
inc
add
push
jo
and
add
je
fcmovb
xor
imul
ins
sub
mov
xchg
cli
jbe
fisub
addr16
push
ins
dec
cwde
outs
push
pop
add
lock
dec
add
leave
ins
inc
mov
and
pop
sar
dec
mov
pop
add
(bad)
fnsave
call
push
sub
les
xor
sbb
inc
mov
xor
xchg
adc
je
sub
inc
inc
ja
movs
xor
ror
adc
or
cmp
das
cld
push
mov
test
nop
jle
fadd
mov
into
fs
and
test
dec
js
pushw
push
dec
imul
imul
dec
sub
cmp
ja
mov
xchg
xor
es
outs
mov
inc
push
xchg
adc
adc
mov
stos
movs
jb
push
cmp
stos
test
mov
je
add
call
and
cs
(bad)
adc
xor
cmp
inc
(bad)
jbe
addr16
jp
rol
mov
dec
cmp
push
and
pusha
inc
dec
shr
test
push
jp
adc
jne
inc
mov
push
add
push
int3
dec
inc
popa
mov
pop
popa
cs
inc
sahf
in
or
cmp
cld
inc
inc
xor
nop
push
add
imul
sub
in
movs
mov
hlt
test
inc
push
ss
and
imul
je
and
popa
xor
test
xor
mov
mov
ss
xor
and
push
sub
push
push
fwait
cdq
mov
pop
sub
cmp
nop
add
arpl
xchg
loopne
add
sub
popa
mov
mov
add
dec
push
loop
xchg
and
add
cli
adc
and
imul
outs
push
inc
call
and
inc
push
cmp
adc
or
je
jbe
adc
mov
das
mov
inc
and
sahf
and
xor
inc
push
mov
loopne
imul
or
(bad)
mov
dec
mov
cmp
dec
mov
inc
jae
call
dec
xchg
inc
and
sub
popa
stos
inc
cmp
jne
test
sbb
retf
add
bound
dec
mov
sbb
push
sub
out
mov
xor
xchg
or
add
dec
adc
adc
dec
push
movs
or
dec
and
nop
push
enter
pop
movs
push
inc
leave
pop
in
hlt
ins
push
sbb
jp
ret
push
outs
inc
fcomp
cmp
mov
cmp
ret
lods
add
add
jle
add
adc
les
outs
sub
es
add
mov
sar
bound
js
inc
mov
dec
stos
inc
js
jbe
or
(bad)
or
dec
inc
pop
cmps
pop
inc
add
adc
retf
push
jo
xor
inc
xor
inc
or
sub
mov
fdiv
xor
push
es
push
mov
adc
push
adc
push
adc
add
mov
bound
retf
aaa
or
shl
or
push
adc
ins
std
stos
dec
mov
inc
cmp
cmp
test
jp
xor
test
xor
inc
cli
sub
es
dec
xor
mov
adc
xchg
cs
retf
bound
jns
add
test
inc
outs
jle
mov
push
aad
daa
enter
jbe
xor
add
test
sub
inc
inc
xor
outs
sbb
sub
or
add
popa
inc
pop
and
retf
push
ins
(bad)
push
sub
cs
lods
xor
fwait
loopne
jns
pop
mov
mov
call
dec
movs
and
sbb
call
mov
xor
mov
push
outs
or
add
jle
push
hlt
jp
ror
or
test
dec
mov
cs
mov
push
cmp
or
xor
and
push
xor
mov
pusha
sbb
dec
inc
rcl
dec
inc
dec
and
push
add
inc
xor
or
push
fwait
mov
fs
push
je
ror
addr16
dec
xchg
stos
lods
inc
(bad)
and
and
push
cmp
leave
movs
ss
call
cwde
mov
mov
jb
jne
xor
jmp
data16
mov
test
cs
dec
nop
stos
test
call
inc
or
xor
sub
inc
cwde
arpl
mov
pusha
ss
sub
adc
sub
push
lds
xor
sbb
pusha
or
add
dec
test
int3
jns
ret
loopne
jbe
js
adc
sahf
inc
jb
cmp
xchg
sub
or
add
inc
push
ret
push
pop
xor
fidiv
loopne
stos
in
xchg
cwde
xchg
js
into
jae
call
fisubr
je
push
push
mov
retf
xchg
xor
inc
js
sbb
sahf
dec
add
stos
sub
cld
jbe
add
leave
sub
call
dec
push
mov
sahf
dec
inc
sahf
lds
inc
test
or
(bad)
lea
pop
js
push
inc
or
or
push
int3
add
add
cmp
xchg
sbb
scas
xor
mov
or
push
pusha
ss
mov
jo
sbb
inc
ja
jo
mov
retf
push
cwde
outs
test
pop
push
xchg
lea
bound
dec
icebp
sub
dec
data16
xor
add
jbe
mov
push
test
sub
fs
dec
or
xor
xor
test
popa
ret
js
push
dec
cmps
dec
enter
jb
adc
xchg
push
add
pusha
push
push
add
mov
push
or
pusha
adc
bound
push
jne
dec
hlt
add
dec
dec
jb
xchg
add
arpl
cs
cwde
dec
push
jl
adc
or
cmps
xchg
mov
add
push
push
stos
and
in
rcr
mov
xchg
push
dec
and
movs
mov
inc
pop
push
movs
push
jns
xor
adc
fdiv
aam
push
mov
ins
jno
les
mov
ficom
hlt
jbe
int3
mov
add
dec
push
add
add
push
sbb
or
mov
dec
push
dec
lods
inc
mov
ins
or
push
popa
int3
push
cs
and
push
xchg
push
adc
xchg
mov
adc
jo
bound
mov
inc
and
pop
or
ret
mov
xor
pushf
outs
inc
push
dec
and
leave
and
outs
xchg
push
jp
inc
dec
or
arpl
mov
add
jb
mov
and
call
adc
pop
push
scas
cmp
sahf
xor
xor
dec
popf
xchg
add
fs
cli
mov
sbb
xchg
push
xchg
je
fs
dec
mov
or
test
add
xchg
push
push
mov
sbb
sub
stos
lock
stos
test
or
push
mov
adc
loop
hlt
bound
shl
sub
push
jo
sbb
and
fwait
(bad)
nop
sub
push
push
(bad)
cmp
jne
push
or
dec
lods
adc
gs
inc
mov
bound
or
outs
shr
or
add
sbb
pusha
mov
push
js
sbb
add
ret
ss
jne
test
dec
outs
rol
in
sub
sbb
cmp
mov
adc
inc
xchg
mov
sbb
xor
dec
scas
xor
jo
ror
add
imul
pop
sub
mov
dec
dec
repnz
inc
adc
push
pushf
inc
and
js
xchg
rcl
mov
inc
popa
dec
push
mov
mov
jno
movs
(bad)
push
outs
jae
or
and
and
inc
jo
mov
push
ins
pop
mov
push
push
aam
inc
push
inc
dec
arpl
ja
xchg
mov
jp
dec
sbb
ins
bound
retf
cmp
rol
call
inc
data16
xor
data16
push
xor
in
ins
popa
mov
arpl
mov
add
retf
adc
xchg
xor
ret
bound
or
es
fs
xor
mov
xor
pushf
add
loopne
int3
add
mov
and
xchg
jbe
xor
ror
sbb
nop
xor
enter
push
add
xor
ins
mov
xor
dec
push
nop
add
push
jo
dec
xor
retf
pop
xor
sbb
and
and
sar
dec
pushaw
xchg
pop
mov
inc
push
xor
xchg
jo
dec
push
push
add
pusha
jae
adc
mov
mov
mov
xor
fiadd
mov
cwde
adc
sbb
jo
call
addr16
inc
sub
push
cmp
mov
hlt
enter
jno
xchg
push
jae
add
or
push
mov
ss
inc
inc
push
adc
js
scas
ss
xor
sub
inc
adc
pushf
mov
mov
pop
xchg
jl
or
push
mov
jo
test
push
push
add
add
and
data16
xor
inc
lods
sbb
dec
or
outs
inc
mov
bound
pop
and
dec
dec
ror
mov
stos
mov
push
xor
push
sub
imul
xor
sub
push
int3
outs
add
add
mov
mov
jb
push
and
mov
ins
inc
inc
cs
push
sbb
hlt
dec
fisubr
push
inc
dec
aam
inc
ins
push
stos
test
dec
bound
repnz
data16
jns
xchg
and
cmps
ss
inc
js
je
xchg
clc
push
sbb
push
push
rol
lods
ins
or
dec
push
push
or
arpl
or
dec
cmps
push
dec
push
xchg
int3
and
inc
in
sub
xchg
gs
jne
mov
pop
dec
xor
or
aaa
dec
jb
xor
fiadd
sbb
sub
dec
add
out
sub
jbe
and
je
loop
or
pop
adc
adc
clc
xchg
and
push
push
inc
stos
mov
ins
stos
cmp
lods
jo
add
jl
or
addr16
cdq
inc
lds
imul
shr
dec
inc
inc
push
shl
inc
aaa
push
je
aad
cdq
test
dec
popa
add
jo
ror
(bad)
push
aam
pop
sahf
dec
(bad)
lock
nop
inc
push
shr
add
retf
or
jo
push
(bad)
js
in
and
or
push
ficom
cmp
pusha
push
fdivr
shl
mov
or
enter
jbe
sbb
add
and
fwait
sub
inc
bound
pusha
and
scas
sahf
mov
xchg
push
fsub
mov
dec
imul
sub
fs
add
inc
cld
or
push
sub
dec
mov
pop
jno
cld
(bad)
fisttp
adc
inc
mov
adc
mov
ins
dec
dec
stos
dec
je
clc
mov
dec
pop
jbe
push
fcomp
push
adc
xor
adc
mov
and
bound
sbb
xor
mov
scas
rol
in
dec
cmps
xor
ret
and
dec
push
fidivr
fadd
mov
rol
adc
fsubr
je
lods
cmps
push
dec
popa
push
push
or
ret
sar
fmul
adc
ins
inc
or
ja
sbb
sub
push
and
xor
adc
jne
dec
mov
clc
push
xchg
aam
cwde
ins
inc
dec
push
adc
cmps
jns
in
loop
adc
inc
push
stos
adc
ds
popa
pop
or
lods
popa
cwde
pop
ins
push
push
sub
leave
shl
jae
dec
cmp
dec
cmp
fsub
ror
push
ins
add
and
retf
sub
dec
ror
popa
lea
gs
les
jno
jbe
inc
sbb
add
mov
or
xor
scas
jo
push
inc
xor
cmp
adc
sub
xchg
(bad)
jo
ins
les
inc
push
jbe
dec
pop
pop
cmp
push
push
xor
call
mov
icebp
push
inc
arpl
loope
and
into
push
cmp
or
add
add
xor
outs
addr16
push
les
fs
inc
shl
adc
push
xor
mov
nop
retf
xor
gs
cld
imul
sub
hlt
js
mov
add
add
test
mov
(bad)
mov
retf
fsubp
mov
sub
mov
aaa
xor
push
dec
retf
mov
and
in
imul
call
push
ficom
gs
cmp
or
sub
push
inc
inc
imul
aam
pusha
dec
cwde
push
adc
inc
sub
xchg
adc
mov
cdq
inc
sub
or
push
add
loope
push
in
push
ret
xor
hlt
xor
lods
mov
inc
xor
dec
adc
outs
sbb
sbb
add
inc
push
pop
movs
dec
sbb
ins
enter
mov
xchg
adc
jne
xchg
and
jp
xchg
or
dec
mov
push
cmp
push
scas
mov
sbb
dec
inc
inc
dec
cs
and
inc
sub
dec
push
jo
add
sub
inc
dec
jne
and
mov
scas
and
add
add
inc
mov
pop
loop
inc
loopne
in
fiadd
pop
or
mov
xor
inc
ret
sub
dec
out
cs
nop
int3
gs
sahf
jne
sub
dec
dec
lds
push
mov
jmp
js
out
shr
mov
mov
cld
jl
pop
aam
call
sbb
data16
push
inc
inc
dec
(bad)
lock
imul
popa
inc
dec
sbb
pop
xor
push
dec
sbb
bound
mov
ret
dec
push
push
mov
les
push
push
sbb
je
dec
xchg
xor
xor
sbb
into
dec
sbb
popa
dec
call
(bad)
push
fs
xchg
test
cli
push
mov
inc
add
push
xor
adc
xchg
into
mov
les
xor
push
push
inc
out
or
fs
(bad)
in
push
mov
xor
ja
mov
pop
popa
call
stos
stos
and
xor
push
pop
xor
sbb
enter
and
and
loopne
xor
pop
jae
bound
dec
popa
and
xor
push
pop
dec
jne
sub
dec
mov
pop
mov
adc
sub
push
mov
push
cs
fs
inc
pop
loop
xor
aam
je
shl
cli
sbb
mov
addr16
rcl
dec
fsubr
add
out
pop
jbe
jb
mov
jp
ins
cdq
popa
mov
(bad)
mov
or
push
add
adc
mov
pop
popa
push
and
push
push
sub
xor
and
or
es
add
cmp
test
mov
ins
push
adc
or
pop
mov
mov
push
popa
mov
or
test
mov
out
xor
mov
ss
ins
mov
push
or
lods
shl
int3
push
xor
add
sbb
je
mov
pop
xchg
outs
sbb
xchg
or
inc
ror
ret
cmp
dec
fs
push
loop
mov
popa
push
aam
pusha
push
(bad)
add
pushf
adc
mov
add
add
push
xchg
inc
xor
sbb
sbb
mov
sub
inc
dec
xor
mov
int3
or
xor
shr
and
dec
inc
cmp
inc
js
cli
adc
push
push
call
cmp
push
dec
sub
enter
add
xor
jo
dec
outs
lods
cmps
pop
fisubr
dec
jae
xchg
test
push
jl
popa
test
xor
call
sub
or
mov
or
inc
push
and
adc
js
mov
pop
add
imul
ins
xchg
mov
ss
xor
add
stos
pusha
xor
ss
and
cmp
ins
dec
fs
aam
sub
add
int3
mov
push
jb
in
dec
dec
and
scas
pop
push
xchg
shl
(bad)
rol
adc
xor
adc
inc
add
imul
mov
into
ins
add
push
mov
pop
xchg
xchg
push
push
push
inc
mov
ss
dec
sbb
dec
enter
push
stos
push
jb
jo
les
data16
adc
xchg
popa
aas
or
into
push
mov
adc
push
popa
ret
dec
ret
push
sbb
fst
sbb
loop
loopne
push
dec
inc
adc
sbb
stos
imul
mov
jae
dec
imul
inc
fs
cld
lock
and
adc
xor
and
push
arpl
xor
push
pusha
or
inc
sub
cmp
push
mov
mov
sub
push
dec
ret
dec
push
dec
adc
mov
jno
push
mov
je
jb
push
inc
aaa
ins
pop
mov
call
ins
ins
mov
push
mov
dec
sahf
and
push
jae
xor
into
movs
(bad)
ins
dec
push
inc
cmp
inc
dec
dec
fcmovu
xchg
jbe
dec
jmp
cmps
shl
push
hlt
inc
xor
mov
dec
shr
outs
push
inc
push
push
(bad)
retf
pushf
jae
shr
inc
jo
retf
push
bound
(bad)
and
adc
dec
sbb
fcmovbe
or
inc
dec
sbb
mov
fnop
bound
adc
fild
mov
dec
xor
cwde
push
fimul
sbb
cmp
jne
or
add
jo
mov
add
adc
cmp
add
add
sbb
pop
push
push
jns
fdiv
dec
push
or
sub
test
dec
sub
jae
in
pop
jno
xchg
hlt
dec
int3
push
mov
cmp
aam
pop
dec
cmp
xor
sub
push
push
pusha
stos
sub
fsub
and
inc
out
xor
jbe
xor
inc
push
push
push
xor
mov
sbb
jo
ins
inc
xor
dec
popa
sub
test
push
adc
ret
(bad)
mov
aam
inc
adc
pop
or
cli
dec
cmps
and
shl
inc
push
cmp
jbe
inc
inc
lock
sar
movs
aam
dec
retf
lea
arpl
jno
test
rol
mov
inc
ficomp
adc
daa
inc
cld
ss
bound
aad
movs
or
ds
or
push
int3
inc
add
int3
rcr
fsub
pusha
mov
clc
cwde
push
call
addr16
outs
jae
xor
cwde
dec
sub
out
cwde
xor
sub
mov
fcmovnbe
or
arpl
push
jne
adc
add
xor
sub
mov
mov
xor
je
and
dec
or
ja
mov
cmp
cmp
ins
xchg
add
cld
in
adc
stos
js
xor
mov
xor
or
aaa
sbb
pusha
inc
js
mov
retf
push
push
sub
jb
mov
mov
(bad)
dec
test
and
and
pushf
js
push
stos
and
xor
loopne
mov
adc
out
xor
mov
out
outs
pop
and
dec
add
cs
push
sub
push
(bad)
cs
dec
mov
dec
xor
cmp
xor
push
aad
push
setle
add
pusha
movs
cmc
jbe
outs
jo
or
lock
dec
inc
adc
inc
push
dec
xor
scas
xor
bound
movs
jae
inc
inc
test
movs
cmp
push
les
jb
mov
add
pop
rcl
js
sub
mov
push
adc
dec
push
ss
xor
push
xor
add
ficom
loopne
mov
push
dec
mov
push
sub
add
cmp
lock
mov
jle
push
ror
cs
int3
jo
sbb
dec
fs
js
imul
xchg
pop
push
push
jne
push
push
(bad)
mov
push
loop
test
xor
push
nop
jo
or
inc
mov
leave
adc
or
or
add
in
sahf
pop
push
inc
dec
mov
imul
sbb
(bad)
add
push
add
push
outs
push
fld
nop
push
inc
popa
push
fadd
ss
inc
mov
add
mov
inc
and
mov
add
imul
rol
test
stos
dec
jl
xor
push
inc
test
repnz
imul
imul
out
bound
ficom
add
jns
push
es
push
push
xor
sbb
push
push
imul
or
jns
inc
sbb
xor
push
mov
js
test
ins
xor
dec
mov
add
es
scas
push
jecxz
cmp
popa
je
dec
dec
in
mov
mov
mov
push
imul
inc
adc
xor
popa
xchg
cmps
dec
arpl
jae
cli
sub
add
(bad)
int3
loop
push
dec
xchg
data16
shl
bound
fs
adc
ss
mov
sub
or
xor
js
jae
outs
sbb
gs
test
dec
ret
sub
inc
rcr
dec
fmul
inc
arpl
call
add
adc
movs
call
gs
add
sub
xor
xchg
inc
cs
pop
into
add
push
enterw
pop
fsubr
jns
cs
adc
enter
pop
mov
lea
je
xor
xor
lods
dec
or
mov
ss
push
dec
push
or
or
and
jae
inc
xor
sbb
gs
or
push
mov
inc
adc
outs
push
aad
push
test
jae
sub
xor
xchg
outs
xor
push
jno
bound
outs
cmp
xchg
sbb
ss
jno
in
inc
add
jne
call
push
dec
js
push
mov
xor
pop
mov
pushw
sbb
mov
push
xchg
cmps
mov
nop
ret
jb
pop
mov
ss
and
pop
inc
dec
fs
aad
rcl
sar
push
mov
dec
fisub
ficom
dec
es
jo
mov
xchg
jle
scas
dec
shr
pushw
or
sbb
xor
inc
sbb
out
mov
jo
cmp
and
mov
js
inc
ficom
inc
sub
data16
pop
inc
xchg
add
hlt
test
xor
jns
xor
hlt
cli
inc
inc
pop
add
jne
inc
scas
or
jmp
cmp
or
cld
sub
inc
push
mov
ret
push
mov
inc
inc
ds
jmp
jno
ins
lock
add
push
and
xor
jecxz
mov
mov
imul
push
push
hlt
pop
arpl
mov
xor
fiadd
inc
push
push
cmp
and
jne
cmp
sub
retf
cmps
inc
jle
push
adc
push
ret
and
fdiv
push
sbb
mov
add
nop
dec
dec
add
adc
cmp
mov
stos
sub
add
sub
outs
jb
or
push
inc
and
push
sub
xchg
push
xor
dec
cmp
cmps
fiadd
xchg
in
xor
adc
mov
fs
int
xchg
es
xor
push
aaa
dec
jbe
rcl
sbb
sub
push
les
or
adc
sbb
add
data16
inc
xor
js
jbe
xchg
xor
pop
inc
jb
xor
cmp
mov
loopne
or
dec
xor
scas
data16
mov
ficomp
je
or
push
ins
adc
leave
adc
add
test
and
push
xchg
popa
xor
add
fs
(bad)
dec
clc
js
xor
push
adc
or
and
pusha
pushf
cs
inc
ret
push
mov
cli
cmp
dec
xchg
mov
(bad)
push
shr
outs
jno
xor
rcr
in
mov
cmp
je
pop
imul
es
cmp
dec
push
adc
ja
push
bound
mov
ins
sbb
int3
cmp
ins
ss
adc
int
add
push
int3
cmp
dec
int3
push
xchg
je
mov
jne
push
or
push
shl
aam
or
sub
mov
xchg
je
push
add
and
stos
pop
ja
inc
xchg
add
data16
or
sub
push
retfw
ss
mov
xchg
xchg
add
dec
jb
rol
xchg
dec
dec
jp
pop
add
sub
arpl
inc
js
adc
and
add
dec
adc
outs
fs
mov
dec
mov
sbb
hlt
or
push
push
xchg
int3
push
outs
xor
je
inc
int
ins
or
fisttp
xor
and
dec
jo
and
xchg
sar
outs
push
outs
ins
mov
jo
jne
push
adc
jp
xor
test
cmp
jae
mov
adc
and
push
dec
cmps
imul
push
inc
shr
imul
dec
adc
rol
xor
xchg
inc
add
sbb
push
hlt
mov
imul
mov
imul
nop
sbb
push
dec
stos
jp
data16
cmp
jbe
imul
inc
mov
pop
add
sub
push
xor
dec
add
xchg
call
xor
or
mov
xor
ret
add
adc
and
mov
cmp
sub
push
xor
or
rcr
push
push
sbb
jmp
in
inc
daa
add
pop
xchg
xchg
inc
xor
push
push
or
repnz
ins
enter
pop
inc
push
retf
cmp
je
cmp
jb
inc
aad
mov
fcmovbe
and
sbb
jo
sub
pusha
inc
jb
or
xchg
cmp
inc
inc
call
outs
inc
lods
dec
pop
mov
es
jo
xchg
sub
mov
inc
xor
retf
sbb
push
and
adc
add
xchg
aam
inc
add
retf
in
inc
sbb
out
data16
and
and
(bad)
je
xor
jno
add
add
adc
sbb
jne
fist
dec
inc
rcl
inc
push
pop
dec
pop
push
pop
in
push
lock
push
or
or
mov
(bad)
push
test
dec
xchg
dec
ret
push
es
push
es
movs
and
mov
js
push
push
inc
sahf
ins
in
dec
test
add
adc
dec
sub
ins
js
popa
inc
mov
xor
addr16
pop
je
ins
data16
cmp
xor
xor
xor
(bad)
mov
push
clc
adc
pop
mov
push
push
addr16
pusha
or
jmp
xor
sub
popa
dec
scas
push
add
dec
inc
sub
(bad)
fadd
sub
jl
inc
js
adc
push
xor
mov
fcom
dec
ret
popa
adc
imul
cmp
movs
outs
add
test
xchg
sub
xchg
test
xor
cmps
cmp
sahf
cmp
adc
push
push
fiadd
push
dec
add
xor
sub
inc
js
sub
inc
sub
and
cmp
push
inc
and
and
mov
mov
inc
dec
cmp
xor
test
ds
jb
mov
add
dec
sahf
es
aam
or
mov
jp
mov
xor
inc
pop
call
xor
jne
cmp
xor
sub
sub
test
jp
jae
sub
bound
test
xchg
nop
enter
push
pusha
dec
mov
ds
inc
push
mov
data16
shl
shr
jns
and
ins
ror
or
cmp
cmp
jo
ror
mov
dec
enter
add
adc
outs
sbb
push
mov
ficom
inc
inc
sbb
adc
push
mov
data16
push
inc
dec
aaa
add
(bad)
loopne
inc
pop
mov
outs
fsubr
dec
sub
xchg
push
call
ja
pop
add
pop
jp
mov
and
sbb
inc
rol
jb
test
cdq
xchg
add
xor
arpl
jb
inc
dec
in
sbb
enter
bound
push
ins
push
fisubr
bound
xor
adc
push
xchg
ret
push
push
or
dec
stos
into
push
push
sbb
or
jp
pusha
inc
dec
fsub
sub
addr16
dec
mov
jae
push
xor
loop
xor
xchg
mov
test
inc
je
add
or
xor
xor
xor
test
fidivr
sub
push
addr16
les
popa
mov
push
pop
bound
or
adc
push
mov
sbb
gs
add
push
push
shr
retf
shr
mov
fmul
cwde
inc
and
ss
push
push
jb
imul
cmp
popa
test
repnz
aaa
dec
mov
and
cmp
dec
scas
dec
rcr
inc
add
xor
cmp
clc
data16
in
jbe
popa
dec
xchg
mov
or
mov
in
repnz
inc
je
sub
cmps
jno
dec
outs
mov
dec
and
xchg
xchg
jo
aas
push
sub
mov
stos
and
add
lods
or
ret
push
test
xor
mov
push
xchg
push
cwde
in
mov
sbb
and
and
bound
cld
jbe
sbb
scas
or
(bad)
mov
(bad)
dec
or
rcl
inc
or
loope
je
sub
adc
pop
ins
dec
cmps
fs
sbb
test
adc
ret
mov
adc
add
inc
enter
dec
and
sbb
sub
dec
rol
adc
enter
mov
int
xor
mov
jl
xor
jp
xor
mov
push
cmp
inc
je
and
adc
test
push
xor
inc
cmp
mov
dec
sub
gs
test
jb
outs
inc
pop
mov
js
repnz
mov
adc
push
retf
adc
dec
xor
in
adc
jbe
mov
mov
adc
adc
test
mov
imul
add
stos
dec
add
and
ins
ja
popa
xor
mov
fiadd
add
call
enter
push
mov
push
xor
xchg
push
lods
dec
jbe
bound
ins
push
or
inc
fisub
retf
stos
push
ret
gs
inc
add
mov
clc
jns
mov
or
inc
add
jmp
mov
xchg
fs
add
rcl
aam
gs
jae
and
jne
adc
xchg
add
repnz
es
push
pusha
pusha
imul
addr16
adc
mov
cli
add
add
movs
fdiv
ret
inc
xor
ins
fsub
xor
inc
cmp
push
push
and
jo
push
inc
cmps
xor
pop
pusha
and
or
xor
cli
or
jp
pop
add
jns
add
adc
inc
rol
cwde
inc
sbb
pop
xor
cmp
dec
data16
xor
add
lods
inc
xchg
call
xor
pop
icebp
add
inc
push
scas
pop
and
dec
pushf
jb
sub
or
cmp
push
outs
imul
mov
outs
add
(bad)
inc
jle
test
or
and
push
pusha
gs
jno
or
inc
int3
push
fdiv
sbb
inc
mov
inc
arpl
add
or
mov
push
adc
gs
push
dec
shl
ins
inc
cmc
push
dec
dec
cmp
mov
inc
push
ins
add
imul
push
ret
add
fisttp
inc
shl
nop
sbb
sub
push
xchg
xchg
aam
dec
mov
push
cmps
adc
xor
adc
arpl
fdiv
push
adc
add
nop
and
add
lea
add
lods
and
aam
or
xor
jl
xor
xor
imul
push
xor
inc
(bad)
rcl
add
sub
in
je
or
pushf
push
lds
pop
ins
inc
sub
xor
inc
les
or
sbb
sbb
pop
adc
data16
lods
movs
(bad)
js
xor
add
or
sbb
pusha
inc
cmp
ins
and
ret
add
xchg
add
mov
xor
adc
sub
dec
into
sahf
push
sub
ins
dec
pop
xor
sub
mov
sbb
jne
push
mov
dec
pop
inc
push
jne
ins
jo
sub
push
jmp
jo
inc
xor
dec
call
data16
rol
jbe
dec
call
data16
mov
sub
and
test
push
adc
lods
dec
xor
popa
adc
imul
dec
adc
mov
inc
gs
or
or
mov
mov
adc
push
fs
xor
jb
push
or
imul
pushf
les
push
fcomp
or
cmp
outs
dec
dec
bound
jb
inc
es
dec
dec
sbb
bound
mov
scas
jae
xor
sub
xchg
gs
rol
and
cmp
push
imul
xor
sub
outs
push
sub
sub
and
shl
and
or
xor
arpl
or
cmps
add
arpl
stos
inc
dec
stos
add
jae
xchg
sbb
mov
push
jae
xchg
gs
and
mov
and
fidiv
and
xchg
and
sbb
mov
ror
xchg
mov
cs
inc
cdq
dec
mov
movs
(bad)
xor
push
movs
cmp
dec
push
mov
adc
test
js
les
push
inc
pop
fisub
adc
sub
sub
xchg
xor
ja
sbb
sub
jo
(bad)
loopne
cs
and
mov
jne
add
ja
and
loop
pop
and
mov
mov
ror
dec
mov
or
mov
fwait
adc
inc
es
push
add
pop
dec
xor
adc
mov
push
inc
adc
sbb
xchg
xchg
call
pop
sahf
push
pop
dec
inc
loopne
sub
push
fcom
pusha
xchg
inc
jbe
inc
mov
jbe
pop
push
jb
inc
inc
or
and
dec
dec
dec
dec
and
pop
mov
sub
xchg
xor
inc
inc
mov
xor
inc
add
jp
inc
push
fwait
add
or
popa
aaa
lods
push
(bad)
xor
call
dec
inc
inc
sub
popa
mov
aam
test
gs
adc
push
sbb
pushf
(bad)
dec
dec
sub
je
imul
add
jno
pop
xchg
enter
or
test
dec
dec
lock
adc
dec
pusha
or
jp
gs
call
xchg
jle
or
jbe
data16
sbb
or
ins
xor
and
data16
enter
sub
pop
je
inc
xor
add
mov
mov
jo
xor
ret
or
push
xchg
call
dec
jno
popa
dec
push
adc
cmp
adc
pop
pop
pop
or
push
add
inc
and
push
dec
and
xor
sahf
and
fs
push
sbb
popa
call
xchg
stos
(bad)
addr16
and
add
dec
call
ja
sbb
call
cmp
jle
push
inc
push
push
fs
rol
inc
jns
cs
nop
push
push
addr16
jne
dec
mov
inc
inc
dec
mov
adc
fs
ins
adc
mov
call
outs
jl
imul
push
jns
sub
dec
adc
or
adc
jp
cli
push
out
dec
or
sub
ja
inc
outs
sbb
adc
sbb
adc
sahf
outs
xor
mov
inc
icebp
jb
adc
dec
add
nop
call
adc
mov
cwde
jo
mov
sub
cwde
mov
ds
jo
aaa
or
jns
xor
mov
jmp
test
inc
inc
push
lock
inc
dec
fmul
cwde
enter
push
adc
inc
push
shr
inc
pop
in
jns
inc
inc
xchg
sub
push
rcr
jmp
jmp
lds
dec
inc
aaa
inc
xchg
fs
dec
inc
outs
inc
xor
inc
bound
adc
push
sbb
jae
ja
push
or
add
clc
cwde
push
daa
aam
aam
jb
add
imul
add
ins
shr
and
inc
inc
inc
inc
mov
js
inc
mov
add
dec
addr16
push
dec
(bad)
push
inc
or
nop
sub
popa
or
cmps
adc
arpl
stos
xor
inc
push
mov
dec
mov
dec
loopne
pusha
sub
push
push
push
test
cmp
or
add
xor
pop
pop
adc
pop
fsubr
sub
bound
das
nop
pop
int3
(bad)
popa
dec
inc
dec
and
shl
or
jo
outs
inc
stos
sbb
adc
add
scas
sub
adc
mov
jmp
movs
dec
xor
push
push
or
sub
push
ficom
cwde
mov
scas
xor
imul
xor
dec
xor
xor
add
imul
inc
repnz
add
pop
imul
adc
cmp
or
and
jbe
test
(bad)
imul
data16
aam
fisubr
ja
dec
je
fist
push
mov
xor
call
add
adc
loopne
call
push
and
mov
les
cdq
test
mov
stos
jns
call
lods
test
xor
sbb
add
je
and
xchg
mov
outs
jno
xchg
and
fild
mov
movs
int3
out
dec
xor
test
loopne
dec
push
test
aad
xor
inc
cwde
adc
inc
stos
mov
xchg
movs
push
inc
les
or
inc
bound
mov
dec
xor
push
dec
dec
jbe
xor
adc
ja
cmp
cmp
and
stos
adc
push
jmp
cmp
xor
pop
xchg
and
gs
sub
mov
dec
dec
jno
mov
and
and
dec
imul
cwde
push
sub
call
sbb
or
push
dec
dec
sbb
bound
or
call
sub
add
cdq
adc
push
dec
mov
into
push
js
inc
data16
(bad)
repnz
test
and
add
add
cmp
imul
retf
adc
scas
clc
and
loopne
je
dec
mov
mov
popa
push
mov
inc
mov
mov
dec
adc
dec
aaa
push
xor
xlat
or
pop
dec
inc
ins
ret
push
ret
movs
push
adc
or
fs
cmps
inc
xor
jns
pop
loopne
sbb
sub
mov
cmps
ins
dec
push
jno
cmp
add
ins
inc
pop
push
add
jl
add
dec
test
mov
into
sub
fdivr
aaa
test
ss
es
dec
inc
imul
push
ins
or
and
or
in
dec
imul
fiadd
movs
or
test
push
adc
xchg
ins
dec
xor
mov
jmp
dec
xchg
pusha
jmp
sub
xchg
test
mov
mov
test
sub
lock
mov
mov
push
dec
aaa
outs
bound
cmp
and
xor
adc
cli
push
dec
push
add
jns
not
outs
adc
std
inc
push
xor
dec
push
xor
mov
sbb
pop
or
call
push
sbb
fs
xchg
retf
nop
jb
xor
sub
sbb
inc
inc
enter
loope
jb
pop
neg
dec
sbb
shr
nop
jne
push
loop
adc
pop
push
cmp
xor
js
ss
inc
inc
push
mov
jl
push
xchg
dec
and
adc
push
push
or
jo
push
fdivr
outs
aaa
imul
loop
outs
mov
adc
push
(bad)
fist
call
pusha
jb
js
push
inc
jb
mov
inc
pop
dec
test
adc
dec
pushf
xor
and
dec
sub
add
xor
adc
fidivr
xchg
(bad)
dec
xchg
dec
fs
and
or
xchg
mov
jmp
dec
dec
sbb
test
add
leave
aad
movs
call
mov
jp
mov
push
xor
fs
outs
adc
inc
push
xchg
or
movs
mov
adc
cmc
nop
adc
push
mov
jb
push
hlt
arpl
push
dec
mov
dec
push
cmp
push
movs
cmps
movs
xor
pop
adc
xchg
sub
call
mov
imul
sbb
bound
push
mov
das
or
lds
push
dec
(bad)
aaa
dec
call
inc
xchg
mov
jbe
dec
xchg
outs
and
les
add
call
lods
xor
xchg
adc
or
jns
push
jbe
test
int3
dec
xor
push
ins
adc
push
fisubr
fmul
jne
test
push
stos
ins
(bad)
outs
dec
mov
adc
xor
sub
cbw
or
clc
and
ret
sbb
dec
mov
pusha
sub
xor
ja
jb
sahf
xor
inc
dec
imul
push
cmp
sub
or
mov
adc
pop
and
and
push
push
cdq
and
mov
push
inc
clc
push
cmp
xchg
ret
pusha
and
xchg
xchg
mov
jp
arpl
arpl
add
xor
pop
jo
mov
xchg
dec
fld
lods
pop
xlat
push
or
xor
shr
add
inc
cmp
inc
xor
or
in
xor
mov
and
repnz
inc
or
hlt
js
push
dec
inc
cmp
xchg
inc
xor
pop
inc
scas
push
and
xchg
jb
bound
cli
push
inc
inc
xchg
add
nop
bound
bound
inc
(bad)
sub
dec
fwait
or
push
ss
dec
xor
int3
mov
pushf
shl
outs
jae
mov
push
cmp
jns
or
rol
(bad)
movs
mov
push
push
dec
push
int3
(bad)
xor
inc
es
jle
push
add
test
xor
inc
jp
inc
jo
sub
xchg
cmp
and
ins
popa
push
ret
mov
xor
mov
adc
push
or
jns
add
cwde
inc
fdiv
push
mov
mov
add
ins
dec
fs
adc
sub
imul
movs
adc
inc
push
xchg
adc
push
je
push
or
dec
repnz
push
call
push
inc
ss
and
push
hlt
inc
xor
sahf
mov
or
push
sbb
cli
loop
inc
dec
dec
dec
jne
fadd
outs
sbb
dec
je
add
movs
test
adc
add
aad
push
bound
jb
mov
push
loopne
xor
cwde
adc
and
movs
and
in
or
mov
mov
xchg
addr16
aaa
bound
bound
fdiv
push
inc
sub
push
gs
dec
cmps
dec
mov
fs
retf
nop
clc
inc
xor
aaa
and
xor
rcr
jl
fsubr
scas
jp
loopne
pop
es
dec
inc
mov
inc
pop
push
jno
pushf
sub
jo
mov
push
mov
push
push
mov
cwde
mov
add
jo
mov
xor
or
xor
cmps
add
push
dec
mov
test
push
push
lds
je
add
shl
pop
jbe
jmp
xor
adc
push
or
cli
sub
dec
push
enter
pop
or
bound
or
fdivr
cld
inc
ins
sub
test
je
cmp
bound
cwde
adc
dec
xor
dec
aam
adc
xor
retf
push
push
push
dec
jbe
int3
imul
test
outs
push
ins
and
push
cmp
inc
xor
mov
or
cwde
ss
mov
dec
push
outs
jbe
pop
adc
add
or
pop
inc
js
or
pop
cs
inc
mov
add
or
jbe
dec
arpl
outs
jp
aad
rol
push
js
movs
mov
xor
arpl
cdq
ins
cwde
sbb
push
inc
pop
push
sbb
inc
es
cwde
imul
dec
or
outs
cmp
jmp
inc
add
xchg
dec
add
add
aam
mov
inc
sub
inc
inc
mov
push
jbe
pop
imul
dec
cmp
adc
mov
push
and
jo
push
or
xor
enter
inc
call
shl
aaa
fadd
mov
inc
ja
dec
ja
jo
push
ins
adc
inc
mov
movs
bnd
sbb
mov
test
adc
ds
push
or
pop
or
dec
push
or
fidiv
fsub
ret
scas
data16
inc
push
nop
inc
and
push
push
push
lock
js
inc
jb
cmp
int
loope
pop
addr16
pop
cs
inc
cwde
ins
test
rol
cmp
sub
or
dec
or
pop
jle
push
jp
stos
add
ins
fdiv
push
test
xchg
retf
fdivr
xchg
retf
or
mov
or
xchg
cs
jo
dec
imul
jo
and
dec
jp
nop
and
stos
(bad)
sbb
je
inc
and
jae
mov
xchg
push
aad
inc
(bad)
push
cmp
xor
dec
xor
dec
jle
ja
or
adc
add
ficom
mov
adc
fs
adc
inc
adc
push
xor
xor
dec
pop
js
call
test
add
test
add
pop
or
mov
ret
pusha
pop
test
push
inc
mov
enter
add
test
mov
imul
int3
sub
(bad)
enter
dec
mov
ja
pop
xchg
mov
loop
shr
pop
loop
stos
sbb
cmp
movs
popa
aam
imul
dec
cmps
dec
dec
push
xchg
jo
shl
dec
sub
enter
inc
jl
add
add
inc
xor
scas
test
xchg
push
inc
adc
not
addr16
sbb
xchg
and
mov
mov
sub
inc
sub
dec
mov
mov
jno
push
fbstp
push
push
mov
aaa
(bad)
or
shl
xor
div
push
jno
dec
stos
and
and
into
xor
dec
adc
inc
js
mov
push
push
imul
inc
and
mov
shl
push
(bad)
pop
lods
xchg
inc
xor
push
(bad)
ja
hlt
push
inc
dec
dec
inc
inc
dec
bound
je
test
jae
outs
cmp
push
outs
cmp
adc
aaa
add
adc
fimul
push
xchg
call
and
or
addr16
xor
and
lods
je
shl
add
add
repnz
test
ins
aaa
into
jae
jbe
imul
gs
int3
call
inc
xor
push
bound
or
mov
and
mov
data16
add
sbb
jb
mov
adc
add
shr
pop
fwait
dec
sahf
mov
adc
xor
or
mov
stos
or
scas
inc
jp
cmp
inc
or
pop
add
out
or
dec
scas
xor
jo
or
or
(bad)
add
sub
inc
nop
ret
lea
dec
xor
es
jmp
mov
push
int3
push
xchg
popa
adc
add
sahf
xor
outs
inc
or
adc
fs
(bad)
push
jae
inc
mov
xchg
push
ficom
push
je
mov
jp
mov
or
adc
adc
test
inc
call
(bad)
mov
cmp
imul
es
popa
mov
shl
add
cmps
cmp
cdq
dec
pop
xor
mov
pop
shl
add
cwde
outs
push
loop
adc
stos
push
sub
imul
js
add
inc
and
push
jb
or
push
dec
dec
es
call
fs
aam
add
sub
imul
sub
add
and
pop
add
(bad)
xor
mov
xor
ss
and
enter
push
jmp
dec
ja
push
sar
and
sbb
push
rol
inc
sbb
xchg
xor
adc
bnd
xchg
stos
fmul
jno
movs
test
ret
sbb
hlt
gs
leave
xor
sub
movs
mov
push
push
inc
push
ret
cmp
jo
inc
push
sub
jle
mov
aaa
adc
add
ss
push
inc
ins
push
cwde
es
cmp
mov
sub
push
xor
aam
mov
test
lods
or
or
adc
fnstenv
xchg
js
aaa
dec
sbb
push
fsubr
aaa
in
xor
adc
cwde
xor
and
gs
fadd
mov
add
pop
mov
push
ss
ja
imul
pop
inc
inc
pop
add
dec
cmp
or
arpl
pop
pusha
or
ss
and
data16
fwait
jbe
test
inc
xor
pop
push
push
or
xchg
or
in
call
cmp
inc
je
inc
cmp
dec
rol
call
mov
push
popa
out
lea
repnz
jp
add
inc
add
sub
sbb
sub
div
or
push
pop
xor
mov
dec
and
or
add
repnz
dec
push
sbb
mov
mov
jp
call
seta
test
ret
mov
nop
xchg
push
inc
test
xchg
loopne
mov
out
jp
inc
aad
mov
dec
(bad)
add
dec
in
mov
int
inc
jns
jmp
jp
jb
cmp
xchg
adc
outs
inc
retf
and
mov
pop
ss
push
add
jne
push
mov
adc
and
clc
jle
push
aaa
dec
pushf
fsub
sub
mov
mov
jno
ss
call
push
sbb
test
push
loopne
jp
push
data16
dec
dec
or
sbb
test
mov
gs
dec
cwd
add
add
sub
xor
inc
and
test
int
push
add
fcomp
push
push
popa
lea
xchg
push
sub
es
pop
fdiv
outs
push
mov
jae
xor
and
sub
gs
cmp
or
cmp
jae
gs
push
inc
mov
jo
sub
js
dec
mov
fcmovnbe
or
outs
inc
je
mov
push
mov
inc
jbe
mov
push
aam
pop
cmps
xor
test
std
cld
ss
ins
sbb
sbb
inc
nop
adc
jl
loope
xor
aam
inc
xchg
add
jb
dec
mov
or
xor
mov
mov
sub
pop
and
push
out
push
push
adc
or
mov
je
shl
inc
and
fmul
pusha
mov
push
popa
pop
sahf
or
imul
and
push
pop
xor
retf
sub
dec
mov
xor
sub
pop
push
pop
adc
push
mov
inc
retf
cwde
inc
gs
cli
sahf
and
jno
xor
or
inc
and
enter
push
popa
call
pusha
push
adc
sub
sub
cmp
aad
loop
jb
xchg
add
gs
js
mov
add
dec
rcr
(bad)
imul
mov
mov
mov
cwde
cs
adc
and
push
xchg
mov
inc
dec
dec
dec
cmp
push
push
ret
lods
mov
mov
xchg
add
mov
xor
mov
sub
jl
push
test
enter
xor
movs
push
push
adc
and
ss
or
xor
mov
mov
dec
add
dec
push
add
mov
add
jo
inc
ret
push
mov
pop
imul
inc
aaa
xchg
ret
push
ret
or
(bad)
outs
inc
outs
add
and
dec
cmps
add
xchg
mov
cmp
push
push
or
jb
or
xor
je
sbb
jae
dec
movs
loopne
and
aam
xor
push
inc
aad
jo
xor
into
js
pop
dec
inc
test
xor
test
inc
mov
ins
hlt
dec
dec
push
adc
dec
mov
add
lahf
es
push
push
mov
retf
lods
es
xor
retf
shl
out
data16
or
cmp
call
xchg
push
xor
xor
xchg
mov
dec
loopne
jmp
inc
inc
cwde
push
addr16
mov
test
aaa
aad
ror
call
push
xchg
dec
or
loopne
sbb
adc
stos
dec
or
inc
fadd
loope
ss
movs
xchg
add
retf
xor
adc
mov
xchg
mov
fadd
jae
inc
push
cmp
ror
or
pop
ja
jp
or
push
sbb
test
clc
inc
adc
xor
and
sbb
fldenv
int3
xchg
sahf
dec
pusha
xchg
popa
pushf
or
add
mov
jno
imul
or
xor
ss
ja
shl
pusha
and
aaa
xor
or
adc
test
dec
fidiv
mov
addr16
aad
aad
cmp
imul
sub
pop
outs
ss
xchg
or
sub
fldenv
les
jo
push
addr16
inc
xchg
inc
pop
cwde
xor
or
aaa
mov
imul
inc
je
push
push
dec
ss
and
sub
sbb
and
and
pushw
inc
jae
xor
push
cdq
push
cmps
add
xchg
mov
cmp
nop
cs
pop
pusha
imul
jae
or
sbb
pop
adc
aaa
inc
cmp
inc
js
aad
cwde
clc
push
imul
and
and
dec
xor
imul
inc
dec
ins
sub
xor
mov
push
call
pop
inc
mov
loopne
cwde
hlt
add
and
stos
adc
inc
xchg
ror
dec
loopne
mov
inc
fsubr
jb
mov
push
mov
xor
xor
pop
mov
imul
fcomp
jno
mov
sbb
sub
push
xor
dec
fs
push
push
arpl
lods
jbe
add
test
ret
sub
mov
out
rol
cmps
push
mov
aam
pop
push
dec
out
movs
movs
ss
push
clc
dec
jne
or
ds
enter
cmp
xchg
adc
inc
push
jl
sahf
and
bound
retf
inc
pop
push
(bad)
stos
and
and
rol
cmp
ret
ds
adc
mov
push
jbe
arpl
stos
movs
gs
dec
jp
xchg
test
inc
push
push
outs
ins
hlt
pusha
adc
popa
push
push
int3
xor
or
sbb
jp
mov
xchg
and
mov
adc
push
push
dec
adc
push
fs
pop
pop
outs
or
arpl
xchg
dec
fs
mov
mov
imul
jno
pop
bound
inc
movs
inc
mov
push
(bad)
rcl
add
call
mov
dec
xor
push
retf
in
aam
adc
push
mov
test
pop
fdiv
leave
push
outs
push
add
and
pop
nop
bound
push
push
jp
inc
adc
mov
pop
inc
inc
jp
xor
or
mov
cmp
xchg
push
push
sub
xchg
lock
out
xor
pop
jae
jne
cmp
inc
mov
pop
xchg
shr
dec
or
add
and
(bad)
add
adc
add
scas
aam
ins
ins
fidiv
loopne
add
push
mov
pusha
mov
call
dec
test
xor
aad
adc
inc
sub
sub
mov
bound
jb
shl
pusha
ret
or
dec
fs
push
lods
cmp
cmp
push
pop
outs
or
inc
push
add
ja
jns
adc
orps
clc
arpl
loopne
gs
cwde
add
or
and
enter
push
add
outs
cmps
sbb
mov
jns
add
push
fidivr
in
xor
outs
test
mov
retf
xor
outs
push
jb
push
nop
jae
in
mov
cwde
push
mov
and
inc
imul
or
mov
xchg
int3
add
sub
lods
add
push
sbb
clc
mov
or
xchg
ins
adc
aaa
ins
push
jo
sub
inc
and
cdq
mov
pop
add
sub
adc
and
mov
or
lock
or
nop
inc
outs
add
lods
cmp
ins
ret
bound
cmp
cli
in
pop
and
push
push
arpl
or
push
(bad)
shr
ins
push
sbb
in
xchg
or
mov
dec
dec
push
mov
add
dec
outs
dec
inc
mov
sub
xor
cmp
rcr
xor
les
xor
xor
test
push
fs
or
cdq
or
xchg
adc
sub
inc
inc
cmps
xor
adc
sbb
mov
jo
cwde
add
xor
xor
js
and
sub
call
cwde
inc
or
sbb
sahf
inc
xor
xor
aaa
adc
push
test
dec
push
adc
inc
stos
mov
daa
mov
mov
sbb
fsub
enter
xor
nop
adc
inc
xor
push
and
jno
add
cmp
push
test
movs
mov
and
mov
retf
jle
mov
dec
js
clc
xor
rcl
dec
and
gs
enter
push
inc
xor
xchg
and
stos
or
loop
xor
adc
dec
push
pusha
xchg
mov
cmp
mov
and
or
push
and
push
out
dec
sbb
or
scas
fiadd
xor
(bad)
loopne
or
adc
mov
cdq
fadd
jae
aam
sub
mov
fwait
inc
adc
clc
addr16
cmp
pop
stos
push
sub
sub
imul
mov
enter
and
mov
push
dec
push
jecxz
or
mov
or
adc
xchg
xor
jo
inc
xchg
dec
or
cs
adc
aad
outs
es
and
xor
es
mov
ror
and
mov
cmps
and
dec
sub
test
inc
mov
sbb
test
jmp
in
lods
inc
ins
mov
addr16
sub
js
leave
mov
fs
les
dec
pop
fs
and
dec
ja
movs
add
(bad)
xor
mov
rol
add
mov
push
and
fadd
out
sbb
jo
popa
jp
push
or
fsub
adc
or
push
or
add
xchg
in
aam
sbb
stos
mov
shl
xor
cmp
jne
xor
movs
or
outs
popa
inc
fiadd
aaa
jne
imul
add
and
rol
xor
call
push
dec
jmp
add
ficom
pushf
movs
gs
arpl
nop
pop
(bad)
es
bound
in
mov
xchg
sub
inc
add
xor
arpl
push
push
test
and
dec
shl
cmp
inc
call
mov
retf
push
add
mov
call
jns
mov
cs
ins
xor
gs
addr16
push
add
sub
push
xor
cmp
int3
fiadd
mov
inc
dec
push
mov
inc
es
mov
xchg
push
push
dec
jo
(bad)
dec
cld
dec
push
push
sbb
nop
test
je
mov
inc
mov
sub
inc
push
adc
jle
daa
lods
cs
inc
jp
mov
or
mov
rcl
mov
push
inc
adc
cli
inc
pop
mov
je
dec
xor
call
scas
push
loopne
xor
mov
and
test
leave
and
push
jbe
jbe
push
push
adc
mov
addr16
loopne
pushw
outs
push
les
inc
xchg
or
inc
add
or
bound
push
pusha
mov
retf
and
call
ds
adc
mov
test
xchg
adc
xor
jae
add
es
push
arpl
pusha
inc
pusha
xchg
and
or
push
xchg
sbb
mov
inc
shr
ja
push
bound
mov
adc
cmp
dec
push
push
ror
xchg
dec
gs
ss
sbb
dec
ficomp
xor
dec
push
jo
pop
inc
push
adc
sub
rol
and
scas
adc
lods
imul
nop
add
xor
and
push
sbb
ss
mov
ins
nop
call
lods
jb
out
es
mov
and
mov
fs
inc
or
ret
test
dec
push
int
dec
or
bound
pop
fs
or
shl
sub
sub
test
dec
cmp
retf
or
cmp
fdiv
push
rol
inc
or
sbb
aam
sub
xchg
add
push
dec
xor
es
test
push
pushf
dec
pop
push
js
leave
dec
fdiv
xor
retf
and
imul
push
loopne
sahf
inc
or
scas
inc
shl
mov
cmp
adc
jbe
fiadd
and
cmps
adc
and
or
sar
dec
push
and
gs
pop
mov
mov
push
inc
(bad)
(bad)
movs
push
nop
jo
xor
nop
mov
cmps
lods
xor
sub
cs
shl
inc
dec
push
and
mov
call
dec
push
cmp
dec
or
adc
and
bnd
pop
push
mov
lock
and
add
xor
push
lock
dec
bound
adc
xchg
add
outs
jb
inc
push
add
or
jo
add
xor
add
or
cmp
test
mov
push
cmp
push
jp
sbb
imul
or
test
lock
call
push
shr
and
xor
add
xor
imul
inc
bound
arpl
xchg
or
div
dec
sub
push
xor
mov
sub
test
rol
ins
push
jle
je
add
push
outs
sbb
push
dec
sub
je
sub
xchg
cmp
push
gs
cmps
or
dec
adc
add
mov
cmp
ret
sbb
inc
and
jne
dec
shl
push
in
pusha
xor
in
xor
and
call
aam
jl
jb
pop
mov
push
cmp
mov
in
test
xor
dec
jb
jmp
xor
dec
fidiv
popa
fs
imul
xor
es
jmp
mov
push
data16
lods
dec
mov
inc
fidiv
pop
push
retf
or
xchg
lock
pop
mul
dec
inc
outs
je
retf
push
xlat
dec
pop
addr16
push
or
pop
push
sub
push
adc
inc
stos
mov
retf
gs
push
retf
adc
imul
fisubr
gs
test
push
es
imul
and
push
ins
xor
mul
push
lock
inc
adc
add
xchg
push
dec
test
and
inc
loop
cmp
js
push
push
js
arpl
jo
dec
imul
and
out
jb
mov
gs
jbe
mov
out
inc
mov
or
adc
adc
aam
sub
xor
enter
add
xor
add
loopne
call
push
dec
pop
inc
test
inc
mov
dec
xchg
dec
dec
fsubr
outs
cmp
sbb
xor
jo
lock
ins
pusha
sbb
xor
je
dec
mov
xchg
push
dec
cli
scas
adc
ins
jg
pop
add
ror
xor
shl
shl
xor
add
jb
inc
xor
or
push
test
jp
jl
bound
add
fdiv
or
inc
adc
adc
or
add
sbb
xchg
dec
fs
retf
push
dec
xor
nop
outs
out
cmps
dec
or
sub
add
push
dec
cwde
js
mov
adc
inc
jb
call
cmps
jne
ins
push
and
shl
mov
inc
pop
push
push
mov
sbb
xor
push
test
dec
scas
retf
add
push
inc
inc
inc
or
add
dec
ficomp
push
push
aaa
pushf
outs
dec
dec
fiadd
dec
xor
jo
test
or
push
mov
or
adc
and
or
mov
xor
and
lods
dec
gs
jp
int3
in
jmp
push
adc
movs
xchg
fs
mov
leave
jp
aaa
push
or
outs
and
inc
cld
dec
inc
push
jo
fs
hlt
jb
retf
lea
xor
rol
loope
and
pop
shl
ret
stos
aam
push
dec
je
es
sub
ins
dec
push
adc
and
nop
push
adc
(bad)
aam
(bad)
fcomp
adc
xchg
pop
ja
push
call
inc
data16
ror
or
mov
cs
and
lods
lock
inc
dec
je
adc
es
dec
push
fs
mov
jmp
cmp
inc
dec
and
jne
repnz
retf
cmp
icebp
icebp
int
push
push
dec
ja
mov
xor
mov
xor
inc
ss
add
sub
ror
xor
and
inc
sbb
xchg
xor
arpl
pusha
push
dec
dec
pusha
adc
int3
fisubr
std
push
adc
ss
xor
pop
sub
mov
jo
ds
jo
mov
and
mov
mov
xor
add
call
xchg
and
jo
or
es
rcl
arpl
mov
scas
inc
enter
xor
(bad)
mov
test
pop
xor
inc
xchg
add
xor
add
imul
ficom
movs
and
test
pusha
dec
and
sub
sub
loope
scas
cld
adc
dec
call
inc
ss
mov
mov
imul
push
pop
pusha
and
sbb
dec
cmp
aam
adc
enter
test
push
ja
int3
gs
sub
or
pop
or
inc
fs
xchg
ret
or
adc
add
or
and
or
pushf
adc
inc
pushf
adc
movs
push
push
aad
cmp
jo
inc
adc
push
push
pop
hlt
sbb
pop
bound
or
in
jmp
add
push
dec
push
adc
add
jbe
or
pop
sub
inc
aaa
inc
mov
cmp
xchg
mov
adc
loope
or
dec
popa
jae
push
and
ss
shl
ret
push
push
xchg
lock
xor
push
aam
int3
add
push
xor
inc
xor
mov
mov
mov
push
jle
retf
or
and
or
jb
dec
hlt
adc
cmps
not
add
push
cdq
stos
and
push
clc
cmp
add
inc
data16
lock
push
in
inc
adc
push
xor
add
xor
dec
or
xor
loopne
mov
dec
cmp
(bad)
push
loop
or
sub
push
xchg
jbe
xchg
ss
cmp
out
add
push
outs
fsub
jl
inc
daa
enter
mov
pusha
es
xor
dec
popa
in
adc
outs
push
mov
les
sub
xor
mov
mov
or
mov
mov
mov
mov
cdq
sub
dec
cmp
gs
inc
adc
je
dec
mov
pusha
test
and
or
xor
ins
sahf
jae
dec
je
sahf
push
cmp
xor
xchg
xchg
push
add
inc
mov
je
push
push
push
inc
data16
rol
adc
imul
inc
lock
cmp
sub
mov
in
sbb
popa
cli
push
adc
inc
inc
push
xor
ja
cmp
js
dec
retf
dec
(bad)
js
scas
cmp
or
fdivr
jae
or
dec
loopne
jbe
adc
push
cld
sub
rcr
push
push
sub
xor
test
inc
xor
popa
inc
movs
test
dec
imul
push
jp
cmp
adc
inc
push
and
and
(bad)
mov
dec
push
mov
xchg
push
add
adc
add
inc
daa
add
xchg
or
cs
dec
add
dec
dec
add
mov
imul
in
outs
test
xor
xor
imul
add
ds
out
mov
movs
jno
xchg
int3
test
inc
xor
pushf
lock
xor
inc
mov
cwde
test
dec
and
data16
dec
aaa
imul
jbe
ret
mov
ror
cwde
adc
bound
or
jo
dec
retf
jo
les
dec
xor
xor
js
dec
pusha
add
or
or
push
and
sub
xchg
arpl
dec
cs
jo
adc
dec
jb
leave
xchg
and
adc
xchg
enter
mov
out
(bad)
retf
xchg
push
dec
inc
or
sbb
or
arpl
or
sbb
mov
dec
push
or
jns
in
mov
mov
xor
stos
dec
adc
fwait
adc
je
retf
stos
xchg
push
hlt
xchg
or
inc
outs
pusha
or
stos
sub
adc
inc
in
inc
mov
and
cmp
inc
pusha
jnp
adc
retf
dec
xor
outs
pop
ret
sub
fwait
jmp
jae
jl
push
loopne
ss
dec
dec
mov
inc
dec
jno
mov
push
add
popa
clc
inc
outs
sub
add
imul
nop
arpl
sbb
jl
xchg
dec
push
int3
xchg
gs
dec
push
inc
in
inc
jo
lods
or
js
enter
rcl
pop
pop
ret
sbb
push
sbb
outs
xor
inc
shr
sub
je
jp
popa
fisttp
dec
sub
pusha
loope
push
div
mov
sbb
mov
adc
adc
or
imul
inc
jae
lods
dec
xchg
dec
add
fs
adc
outs
dec
jmp
popa
xchg
inc
inc
xchg
add
ins
bnd
aaa
or
sbb
popa
dec
xchg
xor
inc
es
dec
or
fwait
inc
xor
mov
pop
jb
and
adc
arpl
cwde
jb
xor
push
adc
pusha
jno
lea
movs
and
in
movs
imul
or
dec
imul
mov
inc
mov
mov
cwde
call
dec
inc
and
arpl
or
sbb
push
xor
xchg
mov
dec
dec
adc
pop
and
ficomp
mov
cmp
test
test
or
push
adc
and
xor
add
sub
fbld
adc
xor
jno
les
adc
cli
jmp
adc
adc
cs
mov
fs
mov
inc
data16
jo
pop
add
jae
adc
adc
add
imul
push
inc
jp
push
dec
dec
gs
mov
es
retf
or
ret
add
enter
add
add
xchg
xchg
push
push
jno
pop
inc
test
test
push
call
push
add
ja
inc
dec
xchg
xchg
mov
push
cmc
stos
es
pop
jmp
mov
dec
gs
les
test
xchg
or
clc
jb
xchg
mov
pop
retf
mov
mov
int3
dec
in
or
and
retf
add
push
ret
xchg
xor
push
popa
cs
push
xor
in
xor
cmp
imul
(bad)
mov
sbb
inc
in
call
pusha
sbb
add
outs
or
cwde
sbb
cmp
dec
mov
outs
fdiv
ss
adc
int3
ss
pop
dec
xchg
add
adc
cmp
and
or
mov
js
outs
movs
shl
jo
add
int3
mov
jb
or
jo
sub
dec
xor
push
inc
dec
xchg
add
push
scas
popa
inc
loop
retf
and
lods
cwde
fcom
push
mov
shl
xor
push
test
xchg
inc
or
sbb
jl
pushf
dec
push
push
pop
xor
jne
adc
adc
int3
dec
push
push
xor
cmp
ret
dec
jbe
push
xchg
push
inc
dec
push
push
push
inc
inc
inc
pop
pop
ret
xchg
inc
adc
dec
in
adc
out
ja
fwait
movs
inc
push
pop
mov
cmp
push
push
adc
add
and
bound
inc
xor
(bad)
xor
sbb
pushf
popa
cmp
jo
sub
push
cdq
retf
add
inc
data16
es
jo
dec
call
lods
push
push
xor
fimul
mov
jbe
dec
sub
stos
js
push
bound
xor
js
push
mov
xor
jb
cmp
inc
or
push
xor
or
xchg
arpl
aam
inc
call
mov
mov
sbb
ss
loopne
je
push
bound
je
shl
jno
pop
add
dec
dec
dec
or
inc
inc
sub
add
sub
dec
dec
leave
fdivr
push
sub
dec
xchg
or
and
in
adc
cdq
xchg
xor
push
inc
xchg
or
or
adc
add
mov
adc
cld
xor
(bad)
jmp
push
pop
sar
bound
jns
fnsave
jo
cmps
sub
imul
pop
test
dec
push
nop
push
adc
dec
test
sub
sbb
push
adc
xchg
ror
xor
ss
push
add
dec
sbb
sub
add
pop
aam
(bad)
inc
jb
loop
sbb
(bad)
ins
jo
adc
mov
inc
inc
lods
cs
dec
cmp
cld
xchg
inc
ins
xor
dec
cmp
push
push
or
push
cmp
sub
sub
or
test
sub
cld
jb
jb
dec
cmp
jb
fild
ins
inc
adc
or
mov
mov
dec
jb
es
lds
and
xor
xor
imul
add
inc
(bad)
mov
mov
(bad)
push
add
cmp
xchg
inc
and
sub
sub
mov
popa
shl
adc
add
inc
dec
push
add
or
push
test
arpl
mov
add
mov
js
inc
dec
adc
popa
popf
ss
push
imul
arpl
inc
adc
dec
jo
and
push
mov
adc
jbe
xor
jo
ficom
dec
ss
push
or
xor
push
and
scas
outs
add
xchg
mov
fisubr
push
ins
call
adc
sbb
dec
or
fs
xchg
sbb
pop
pop
jb
push
and
dec
inc
lea
cmp
push
xchg
inc
dec
mov
and
je
jns
inc
pop
mov
push
mov
cmp
movs
inc
pop
adc
or
jb
adc
adc
jmp
push
jmp
pushf
loop
xor
push
stos
jns
jae
ins
or
inc
imul
mov
cmp
inc
cmp
and
js
mov
push
xor
pop
or
adc
call
or
mov
mov
pop
push
ret
jo
dec
sahf
sbb
call
push
xor
popf
push
and
mov
outs
xor
jmp
push
sub
pop
push
ins
xchg
or
mov
fs
dec
cmps
dec
shl
push
push
pop
add
push
inc
je
ret
xchg
mov
data16
or
sbb
jecxz
push
inc
pushf
call
loope
not
shr
ins
fs
cs
arpl
xor
xor
push
jo
rcl
dec
xor
sub
popa
adc
lods
pop
push
pop
mov
jbe
dec
dec
dec
add
fcom
inc
pop
xor
xchg
push
xor
xchg
cli
sub
xor
inc
ins
xchg
xor
jb
mov
mov
xor
push
xchg
ret
jle
scas
jae
mov
inc
adc
inc
out
and
loope
ret
int3
add
dec
ror
adc
cmp
dec
popa
adc
mov
nop
push
mov
ja
lea
sub
les
gs
inc
pop
inc
call
(bad)
xor
xor
push
xor
pop
sbb
adc
lea
cmp
inc
adc
adc
pusha
call
push
add
adc
dec
nop
push
sub
outs
mov
or
in
nop
jne
aaa
jmp
jo
jo
xchg
mov
cwde
cld
mov
inc
pop
dec
aam
int3
adc
imul
push
aaa
int3
dec
cmps
outs
add
push
popa
add
mov
aaa
add
add
jne
inc
cmp
or
add
inc
adc
aad
sub
fsubr
call
jae
outs
arpl
inc
dec
loopne
add
push
in
adc
lock
mov
aam
shr
fmul
or
ret
sub
cs
(bad)
jo
adc
dec
bound
mov
and
adc
or
adc
fdiv
lods
or
ss
or
pop
loopne
fwait
cmp
fisub
ret
mov
push
push
ss
xor
sub
jb
mov
call
xchg
push
ficom
ficomp
push
in
dec
loope
add
adc
loop
data16
dec
pop
or
dec
or
test
xor
scas
add
push
test
and
ins
xchg
and
bound
cli
jb
(bad)
js
enter
call
and
test
enter
pop
jbe
mov
or
loopne
arpl
cmp
mov
(bad)
nop
inc
push
arpl
cmp
cmp
push
dec
xor
adc
or
push
enter
data16
push
sub
inc
inc
js
mov
cmp
xor
mov
fsub
sub
jbe
adc
fcom
dec
adc
cwde
popa
push
cmp
dec
push
bound
push
adc
mov
popa
ror
inc
outs
push
and
aad
addr16
xor
ss
movs
pop
or
inc
push
dec
test
dec
cwde
push
dec
inc
ror
push
repnz
dec
adc
add
add
jb
or
pop
jmp
mov
jno
or
movs
or
dec
jns
add
arpl
pop
lods
push
dec
rol
bound
jmp
imul
inc
out
push
enter
mov
or
add
mov
inc
and
outs
test
and
sbb
pusha
xlat
sub
pusha
pusha
addr16
inc
inc
sahf
outs
(bad)
ja
ror
xchg
ds
jo
jne
mov
dec
and
inc
mov
sbb
add
sar
push
cmp
and
mov
xor
js
or
and
in
dec
jo
mov
loop
sbb
fstp
ins
inc
push
xor
mov
sbb
xor
or
pusha
adc
cli
mov
pop
ficomp
jl
push
pop
les
push
adc
dec
clc
dec
push
jae
sub
cdq
loop
out
mov
xor
sub
dec
mov
xchg
es
fdiv
imul
and
jno
push
sub
sub
xchg
pusha
dec
arpl
mov
aam
pop
es
pop
stos
rol
mov
xor
adc
inc
xor
xor
xchg
push
inc
or
popf
cwde
push
push
ss
call
rcr
jl
xchg
pushf
xchg
inc
pop
ficomp
jle
adc
sub
adc
cs
cdq
inc
xchg
jne
pop
sub
inc
add
or
sbb
call
movs
fwait
and
xchg
stos
dec
and
sub
jne
stos
retf
test
inc
mov
push
imul
addr16
or
xchg
push
push
push
jmp
inc
dec
mov
nop
in
cmps
ins
imul
add
mov
inc
call
je
dec
sub
sbb
fcom
push
loopne
bound
push
ja
ins
xchg
inc
and
mov
add
sub
movs
add
mov
ja
ja
lea
mov
dec
dec
xor
sub
pop
inc
shl
inc
loop
inc
loopne
fs
es
cwde
mov
movs
test
cmp
call
fs
popa
pop
and
and
pop
xor
push
add
aam
adc
cmp
and
push
ja
jb
push
xor
cmp
call
pop
mov
inc
mov
dec
dec
je
dec
jne
xchg
dec
or
outs
push
sbb
pop
cmps
inc
rcl
sub
test
and
pop
pop
push
test
sub
popa
fwait
xchg
(bad)
add
stos
push
inc
jno
pop
adc
push
js
cmp
inc
cmp
jne
push
sub
add
ins
inc
push
fidiv
neg
xchg
loopne
mov
xor
xor
push
mov
aaa
arpl
mov
js
push
fs
dec
xor
mov
push
xor
push
test
mov
outs
retf
add
ret
int3
nop
repnz
or
jp
xchg
or
mov
mov
sub
mov
rcr
inc
inc
sbb
dec
dec
add
sub
ss
call
push
call
dec
xchg
mov
mov
add
gs
cmp
xchg
test
and
out
sub
xor
ret
inc
cmp
push
push
xchg
fwait
sub
int3
imul
inc
xor
jbe
mov
jo
push
jae
dec
rol
push
sar
es
jo
jns
push
call
xor
loopne
adc
xor
or
mov
inc
in
adc
je
push
inc
dec
outs
ss
and
add
or
xor
dec
adc
ins
stos
into
dec
js
jns
dec
retf
adc
enter
pop
push
and
xor
add
ret
push
jmp
push
push
push
into
imul
cmp
and
adc
imul
enter
fsub
cli
ins
push
dec
movs
sbb
sub
rcr
mov
xor
and
clc
push
pop
adc
sub
retf
mov
push
dec
adc
test
mov
bound
test
jb
test
xor
dec
mov
sbb
adc
adc
mov
and
inc
sub
push
pop
scas
pop
pop
jbe
cmp
shl
sbb
jl
js
and
movs
xor
and
stos
or
inc
inc
jns
mov
test
adc
mov
cmp
or
push
and
movs
push
or
push
or
dec
pushf
or
cmp
adc
inc
push
pusha
loope
mov
test
movs
fmul
push
ret
xor
xchg
push
xor
jp
in
mov
cs
or
mov
and
mul
dec
and
mov
push
push
pusha
push
add
cmp
lods
inc
jo
sub
or
xor
or
xor
xchg
lods
jl
push
ins
xor
mov
call
popa
cdq
add
and
div
call
in
sub
dec
inc
push
pop
lods
bound
or
push
push
xchg
inc
push
int3
outs
sbb
cwde
or
pop
mov
sbb
cmps
jne
and
mov
xor
xchg
adc
in
outs
inc
dec
cwde
scas
test
and
dec
mov
push
in
movs
xor
inc
push
adc
mov
jbe
xor
bound
sub
dec
cmp
(bad)
cli
fs
fiadd
dec
cld
adc
inc
add
add
dec
push
xchg
pop
inc
dec
push
aam
data16
js
sahf
xor
add
dec
mov
or
loop
push
push
pop
jo
outs
jb
or
ss
pop
jns
aam
mov
ins
inc
xor
xor
push
test
or
pushf
ins
xor
fs
mov
les
ds
add
inc
lods
xor
jle
cmps
add
lods
(bad)
sbb
scas
adc
mov
ins
xor
rol
jbe
dec
popa
bound
or
inc
or
push
push
mov
dec
xor
or
or
cmps
mov
sar
add
mov
add
sbb
sub
push
cmp
mov
add
or
pop
and
and
mov
cmp
fidivr
inc
popa
shr
add
adc
ins
push
imul
or
out
xor
stos
pop
xor
inc
outs
cmp
test
mov
fcom
cmp
cli
js
adc
sbb
add
xor
mov
pop
and
out
push
inc
add
xchg
or
sahf
into
imul
ret
(bad)
sahf
add
inc
dec
mov
or
or
je
cmp
mov
mov
inc
mov
jp
cmp
dec
shl
xchg
xchg
mov
pusha
sub
pop
xor
dec
mov
inc
and
mov
imul
jns
hlt
addr16
sub
data16
and
call
rol
adc
jmp
jmp
or
(bad)
jae
or
xor
or
add
hlt
data16
sub
mov
cmps
and
xchg
test
xor
ins
dec
or
xchg
xchg
push
dec
out
inc
sbb
int3
xchg
add
mov
je
movs
push
add
xor
sub
stos
push
push
jo
dec
inc
dec
cmp
add
out
fs
adc
outs
js
rcl
add
add
test
in
cmp
xchg
fld
jne
cmp
dec
mov
sub
cmp
push
adc
scas
push
jae
cmp
dec
shr
gs
jb
ds
ins
mov
imul
sbb
adc
xor
ror
test
adc
je
add
push
push
cmps
push
xor
clc
mov
jo
dec
dec
or
in
shl
jle
data16
dec
pop
bound
out
mov
call
fs
inc
(bad)
mov
test
or
inc
dec
sbb
cmp
cdq
cli
jbe
push
addr16
movs
xor
stos
mov
mov
stos
test
push
sub
inc
inc
push
dec
push
xchg
shr
push
inc
sub
in
xor
movs
(bad)
into
dec
imul
sbb
mov
mov
into
adc
sub
call
pusha
push
dec
sbb
adc
sub
jp
and
xchg
add
or
adc
jmp
es
push
inc
push
je
adc
push
push
or
cwde
pusha
je
imul
cmps
push
or
sbb
les
push
cmp
push
push
jae
call
add
lock
loope
adc
dec
bound
outs
xor
dec
into
ja
and
push
sbb
xor
jae
cmp
jo
push
hlt
js
mov
loope
hlt
fs
dec
adc
push
je
push
arpl
jne
mov
pop
push
fisub
ss
and
inc
push
mov
movs
xor
xchg
inc
pop
je
mov
dec
inc
shl
rol
pusha
pop
sub
and
scas
mov
add
mov
add
arpl
lods
dec
ins
add
ret
push
or
xor
xchg
dec
inc
test
jb
push
retf
adc
push
outs
js
shl
mov
ss
mov
cmp
jb
pop
inc
call
push
shl
push
or
push
mov
inc
pop
retf
fsubr
scas
arpl
push
data16
adc
dec
call
ret
xchg
sbb
push
mov
sbb
sub
add
js
inc
cmp
inc
push
arpl
add
outs
in
push
mov
dec
xor
add
jmp
inc
pop
dec
cdq
or
call
and
sub
stos
xor
mov
ins
ret
pop
dec
xor
push
adc
inc
dec
cmp
pushw
push
bound
bound
les
sub
xor
shl
sub
sub
sbb
inc
push
inc
js
sbb
mov
sub
pusha
add
mov
ins
adc
push
bound
push
fwait
call
dec
int3
or
mov
aad
ret
cs
mov
mov
pop
call
out
dec
mov
or
shl
cs
mov
and
jo
js
call
test
outs
mov
pop
xchg
push
ss
mov
inc
sbb
nop
ja
repnz
or
push
and
push
inc
aam
inc
in
xchg
imul
stos
inc
add
fld
inc
push
push
jmp
cmp
dec
mov
gs
loop
push
add
inc
aaa
mov
dec
xchg
dec
shl
dec
inc
outs
dec
jo
dec
stos
xor
xchg
js
sbb
dec
pop
mov
inc
pop
rcl
pushf
xor
adc
xchg
sub
push
dec
data16
adc
push
call
hlt
enter
mov
adc
inc
inc
pop
inc
push
test
or
popa
xor
outs
xor
push
xor
or
push
sub
cmp
push
xor
add
xchg
cwde
lods
pop
push
fcom
push
push
dec
sbb
dec
(bad)
adc
adc
inc
mov
dec
inc
add
or
sbb
xchg
ja
push
xchg
jp
sbb
gs
jo
cli
pushf
push
xchg
adc
cmp
dec
push
or
cwde
add
cld
and
fs
jae
cld
and
retf
dec
jp
fiadd
jbe
pop
xor
jno
xor
inc
mov
es
fs
sbb
sub
scas
retf
les
add
sub
test
sub
sbb
sub
jns
push
adc
enter
dec
inc
dec
cmps
cmps
mov
dec
pop
ins
add
or
push
mov
xchg
movs
ss
dec
sub
adc
inc
push
inc
push
test
aam
jb
mov
mov
mov
stos
pusha
inc
cmp
jno
mov
sbb
daa
jno
out
push
cmp
xor
arpl
cmps
and
sub
popa
out
in
push
or
push
or
sbb
pop
jo
inc
in
add
xchg
and
sbb
clc
add
xor
pushw
sbb
jae
mov
ins
mov
pusha
push
imul
(bad)
mov
add
js
cs
rcl
retf
push
(bad)
sbb
inc
hlt
push
ins
imul
adc
push
adc
jne
jmp
test
ds
xor
mov
je
jo
pop
js
outs
push
push
shl
popa
xchg
or
pop
xchg
cli
push
pusha
push
gs
sub
dec
ins
dec
fs
jmp
cmp
fisub
jno
add
arpl
xchg
xor
nop
shl
jne
dec
push
popa
ins
or
xchg
and
cmp
push
dec
xor
or
pop
cdq
stos
and
js
push
ins
xor
pushf
push
adc
and
pop
and
bound
or
in
push
inc
jmp
(bad)
pop
ss
jb
leave
outs
nop
mov
push
jb
cmps
or
dec
adc
les
push
ds
stos
xchg
push
mov
inc
pop
inc
dec
stos
lea
js
or
push
test
sbb
add
lods
es
push
jbe
bound
adc
inc
popa
mov
inc
xor
ja
out
imul
pop
aam
bound
fs
and
ret
inc
test
rcl
sbb
push
xor
or
fnstcw
ins
mov
xor
mov
imul
mov
enter
add
ins
push
or
xor
mov
pop
sub
dec
mov
in
mov
dec
data16
movs
pop
xor
inc
and
push
pop
nop
add
dec
and
add
sbb
and
or
inc
mov
pop
dec
cld
bound
bound
dec
ja
mov
push
aaa
or
ins
pusha
mov
and
cs
push
dec
dec
ins
mov
dec
sbb
mov
(bad)
xor
xor
dec
lods
dec
movs
add
push
ja
mov
ins
cld
cmp
fs
dec
stos
mov
shr
cmp
push
in
fstp
cmp
fisub
rcl
dec
jp
xor
cmp
push
or
(bad)
push
imul
pop
mov
ins
dec
popa
xchg
push
and
add
sbb
sub
sub
inc
sbb
push
push
or
xor
mov
mov
call
fsubr
test
aam
es
fs
mov
sbb
les
inc
ror
push
jo
or
js
popf
mov
cmps
int3
pusha
push
cmps
(bad)
xchg
dec
push
jmp
sbb
bound
dec
rcl
mov
sbb
addr16
jbe
push
jns
dec
jb
rol
sahf
and
xchg
inc
data16
xchg
sub
sbb
inc
shr
pusha
pop
or
jbe
xor
outs
cs
mov
jb
cli
or
pop
je
aam
je
cmp
mov
fs
add
cmp
inc
and
add
ja
push
pop
and
xor
adc
clc
dec
test
addr16
xor
xchg
in
mov
ins
push
test
dec
adc
pushf
push
inc
jmp
push
outs
imul
inc
popa
push
add
add
xchg
adc
or
xchg
in
add
and
add
pushf
or
sbb
sub
xor
test
dec
mov
jae
jno
lds
sub
inc
aaa
push
adc
xchg
loopne
pop
retf
inc
fadd
sub
fmul
sub
aam
mov
adc
dec
mov
add
fst
push
jbe
movs
sub
loop
and
jb
add
xor
enter
xchg
fnstcw
jno
popa
outs
test
dec
push
cs
and
inc
and
lods
adc
inc
js
cmp
lea
or
add
xlat
xor
push
xchg
xor
add
je
and
inc
test
jns
xor
popa
sbb
or
dec
imul
pop
inc
xor
push
inc
dec
jb
mov
dec
stos
xor
pop
xor
or
xchg
test
adc
push
pushf
dec
cmps
xchg
and
fdivr
inc
(bad)
sbb
ins
fadd
mov
push
sahf
jns
and
or
sbb
sbb
arpl
xchg
int3
outs
mov
xor
xchg
adc
inc
add
push
xchg
call
call
rcl
add
cmps
jb
mov
push
adc
loope
call
sub
inc
test
ret
jno
or
sbb
cmp
sub
pop
push
dec
ds
dec
hlt
cmp
inc
ror
or
xchg
es
pushf
push
dec
outs
mov
inc
dec
xor
and
pop
inc
movs
popa
test
ja
xor
xchg
sbb
inc
cwde
mov
pop
or
push
bound
je
pusha
inc
jb
mov
add
inc
dec
mov
push
pop
push
pop
xchg
dec
dec
inc
xor
and
test
push
xor
(bad)
les
movs
out
xor
dec
outs
push
and
sub
adc
pusha
sub
mov
xor
xchg
add
cs
jno
je
push
and
sub
dec
add
or
xor
inc
gs
and
sbb
push
add
arpl
push
test
outs
add
jae
push
add
dec
retf
push
jb
inc
js
fidiv
mov
push
rcr
ja
and
jp
ins
dec
rcr
inc
sub
sahf
dec
mov
push
imul
cmp
or
xchg
enter
push
sbb
xchg
fcomp
push
inc
or
scas
inc
or
jns
xor
or
fisubr
data16
push
fsub
into
push
dec
inc
sub
out
jp
push
xor
dec
push
jmp
ret
push
data16
add
inc
pop
and
dec
xor
dec
mov
call
arpl
jbe
fwait
retf
adc
sub
jo
or
xor
push
ins
xchg
ret
xchg
dec
dec
push
push
jmp
mov
imul
push
pop
push
mov
push
or
popa
push
add
es
xor
sub
stos
jmp
push
xor
pusha
mov
jno
call
push
inc
lods
pop
add
adc
dec
and
sbb
or
enter
jbe
xor
add
sub
dec
push
dec
ja
sbb
adc
pop
or
pushf
xchg
sbb
aaa
in
into
pop
mov
push
add
jno
or
mov
or
dec
or
add
or
cmp
add
movs
pop
fisub
sbb
sub
cli
movs
inc
xor
push
imul
cmp
inc
adc
jae
ins
cdq
or
ds
mov
cmp
and
inc
in
aam
inc
inc
test
push
stos
or
fisubr
call
mov
out
inc
outs
xor
mov
push
in
movs
jb
xor
adc
inc
push
gs
or
inc
push
inc
jmp
cmp
xor
fmul
call
sbb
mov
push
xchg
mov
sbb
fs
push
imul
xor
push
sub
adc
mov
rol
sub
dec
dec
shr
xor
lods
adc
dec
sub
ja
cmp
test
mov
fs
inc
or
inc
dec
xchg
aam
dec
dec
push
sbb
push
nop
dec
aaa
dec
push
movs
mov
bound
jbe
imul
dec
ins
data16
dec
nop
and
push
or
xchg
or
sub
pop
mov
adc
movs
ss
out
sub
mov
lods
adc
inc
loop
xchg
add
dec
adc
push
mov
sub
push
and
add
bound
xchg
or
push
add
mov
mov
and
pop
jl
popa
pop
je
jns
ins
ins
mov
push
or
pushw
mov
pop
xchg
lods
je
fcom
dec
dec
adc
or
jp
mov
and
dec
dec
mov
dec
pop
add
xchg
and
jne
cmp
lods
in
or
add
outs
xor
xor
cmp
mov
dec
imul
dec
jge
inc
inc
mov
push
sbb
xor
sub
(bad)
and
sub
(bad)
gs
rcl
or
adc
inc
je
aaa
repnz
aaa
xor
lods
or
inc
dec
fs
push
outs
or
inc
xor
adc
test
xor
fisub
(bad)
sbb
ins
adc
cmp
push
test
push
aad
sub
ins
aam
or
int3
cs
push
adc
ss
or
xor
inc
out
mov
push
sub
clc
adc
call
mov
jb
xchg
dec
adc
in
and
mov
or
add
pop
mov
in
sub
mov
jne
xor
and
es
xor
shl
arpl
adc
cmp
test
sbb
xor
jne
sbb
inc
push
cdq
cmp
sub
ret
and
cwde
test
inc
mov
push
adc
sbb
push
mov
xor
cmp
push
adc
dec
adc
push
inc
mov
pop
dec
aam
mov
dec
pushaw
xchg
dec
dec
push
stos
or
inc
call
xchg
sub
and
inc
sbb
or
mov
dec
fadd
stos
dec
or
ss
scas
dec
adc
inc
cmp
adc
sub
or
ret
and
call
push
jb
xchg
sbb
push
lods
xor
data16
inc
cdq
jbe
xor
xchg
dec
popf
imul
or
jp
mov
adc
cdq
mov
fs
cmp
imul
jne
fwait
shl
stos
in
not
jp
call
push
add
ins
loopne
cmps
or
add
ficom
mov
cs
inc
int3
mov
sub
movs
fisub
and
adc
inc
retf
dec
loop
into
lods
mov
nop
in
nop
pushw
mov
inc
aaa
fidivr
or
sbb
inc
jo
lea
and
aaa
xor
add
mov
fdiv
push
xchg
push
xchg
xchg
inc
les
xchg
inc
pop
add
sub
mov
dec
jne
cwde
addr16
adc
inc
retf
mov
adc
or
test
outs
push
inc
sub
aad
inc
sub
cmp
lods
and
outs
push
test
or
xor
add
ss
push
push
xchg
imul
and
sub
cmp
jmp
or
bound
adc
or
nop
aam
add
arpl
dec
dec
mov
xchg
inc
call
nop
push
sub
data16
push
xor
push
mov
mov
inc
scas
xor
push
or
xor
push
add
stos
xor
adc
push
xchg
jo
gs
push
sbb
js
dec
add
or
popa
push
inc
or
add
mov
xor
retf
bound
xor
movs
mov
add
push
xchg
pop
push
inc
xchg
sbb
fsub
add
ss
cld
add
sbb
push
push
sub
enter
data16
loopne
test
dec
ja
inc
dec
and
add
outs
pop
arpl
mov
xchg
add
push
mov
xchg
add
adc
outs
pop
jns
pop
push
dec
sub
addr16
mov
dec
imul
sub
ins
mov
push
xor
dec
mul
adc
push
retf
push
push
adc
push
xor
test
mov
add
test
bound
mov
mov
dec
ret
out
sub
push
(bad)
shl
or
inc
imul
ret
popa
call
dec
xchg
retf
movs
shl
(bad)
aam
add
nop
push
sahf
push
and
cmps
jo
jne
dec
push
js
dec
push
xchg
inc
adc
inc
sub
inc
(bad)
dec
test
add
mov
mov
ins
bound
add
sub
mov
push
cmp
retf
xchg
sbb
mov
push
rcr
push
jo
in
fs
or
xor
outs
fs
sub
dec
call
push
sub
or
mov
and
pop
enter
sub
jp
sbb
add
dec
in
inc
imul
xor
jl
dec
gs
test
inc
mov
and
and
add
jecxz
movs
mov
jp
int3
add
or
loope
mov
push
cmp
push
add
(bad)
data16
bound
arpl
stos
mov
adc
movs
or
dec
js
call
sub
sub
ins
or
pop
xor
jle
mov
je
inc
add
inc
in
inc
les
les
xchg
xor
xchg
add
test
or
in
dec
inc
jmp
push
jne
inc
mov
inc
xor
jg
dec
bound
jno
ins
adc
push
pushf
es
and
push
call
add
sbb
ins
aaa
pushf
xor
mov
sub
sub
adc
inc
mov
jle
push
inc
outs
mov
push
inc
test
sub
gs
(bad)
popa
in
adc
test
sbb
loop
imul
dec
jo
dec
or
push
mov
ins
test
pop
nop
or
inc
jb
mov
sub
xor
or
adc
push
shr
cmps
adc
inc
cmp
push
or
pop
outs
ret
push
and
mov
pop
vrsqrtss
scas
bound
sar
mov
or
pop
push
jne
aam
dec
data16
add
xor
retf
sub
mov
mov
jb
adc
jle
(bad)
ins
add
pop
mov
cld
stos
inc
sub
jne
inc
xor
enter
push
jl
xor
popa
push
ins
add
dec
fdivr
sub
or
dec
xor
dec
xor
inc
mov
xchg
adc
push
push
jmp
stos
add
or
dec
or
inc
sbb
aaa
inc
dec
inc
lods
cs
bound
jo
push
mov
jb
xchg
or
mov
cmp
xor
ins
xor
and
dec
ins
xor
mov
sub
or
jmp
adc
and
clc
add
pusha
jo
xor
xor
xor
gs
add
inc
or
xor
push
add
or
jb
xor
mov
mov
outs
dec
xchg
mov
push
xor
inc
adc
xor
in
xor
inc
je
sbb
(bad)
mov
jne
push
out
dec
mov
stos
push
and
mov
adc
push
bound
xor
jb
xor
imul
adc
rol
push
inc
lods
or
shr
inc
add
dec
sub
push
ins
jne
es
add
test
nop
fidiv
mov
fimul
aam
dec
push
dec
mov
sub
adc
inc
add
test
dec
aam
xor
sub
dec
xor
add
bound
call
pop
inc
jno
jne
les
xor
push
or
adc
push
push
pop
outs
test
xor
pop
cli
xor
xor
pop
xor
inc
xor
shr
xchg
or
sub
mov
jo
add
and
fisttp
xor
xor
jp
jb
mov
cmp
sbb
ins
jp
test
add
sub
sbb
int
sbb
jp
or
pusha
outs
mov
xor
mov
shr
pop
inc
add
aad
nop
inc
inc
push
inc
fs
push
dec
xor
(bad)
push
test
push
inc
dec
xor
mov
jns
cdq
jbe
add
add
je
dec
scas
or
mov
sub
add
cmp
nop
cmp
push
push
dec
mov
push
jb
imul
adc
xor
adc
popa
xor
adc
dec
and
xor
mov
movs
dec
push
push
push
sbb
dec
jp
inc
sub
adc
add
jp
cmp
dec
ret
adc
popa
xor
or
dec
ins
scas
mov
arpl
and
jle
jp
push
pop
retf
mov
sbb
mov
push
and
push
cs
mov
dec
pop
xchg
sub
in
int3
xchg
loop
inc
push
sub
enter
dec
xor
adc
dec
sbb
call
or
mov
out
arpl
sbb
and
or
jno
push
adc
(bad)
xor
rcl
sbb
push
enter
retf
push
jmp
cld
inc
and
inc
fs
call
add
hlt
fiadd
jne
test
inc
add
cmps
or
nop
jbe
popa
mov
and
xor
pop
adc
fs
add
dec
and
mov
and
pusha
push
adc
dec
or
repnz
add
popa
sub
rol
popf
add
ja
cmp
and
dec
inc
fisub
sub
dec
jb
or
in
lods
sbb
inc
ror
xchg
data16
and
aaa
je
and
xchg
test
push
xor
jge
or
addr16
inc
jb
ficomp
ss
inc
push
mov
movs
adc
stos
and
es
test
or
cmp
adc
fidivr
push
dec
mov
mov
jne
hlt
sbb
pop
xor
adc
stos
xchg
ret
jl
cld
mov
push
cmp
push
pushf
ds
sub
pusha
xchg
adc
xor
les
sbb
mov
mov
movs
out
lods
dec
outs
xor
xor
sub
rcl
push
into
mov
jp
or
add
and
aam
cld
xor
adc
push
ja
push
cmp
jno
in
mov
inc
dec
enter
aam
bound
adc
inc
inc
push
add
cs
loopne
adc
add
mov
es
push
dec
outs
pop
xchg
xchg
sub
push
andnps
dec
ins
outs
bound
inc
dec
retf
mov
rol
pop
add
pop
mov
pop
cmp
mov
imul
add
dec
jle
aam
xor
ins
addr16
sbb
add
enter
sub
arpl
call
xchg
add
mov
add
inc
xchg
ins
imul
rol
test
ss
sub
lods
mov
dec
adc
inc
add
push
(bad)
push
adc
xchg
(bad)
scas
xor
pop
mov
dec
cli
or
mov
nop
add
int3
and
leave
adc
add
push
out
xor
push
lock
enter
inc
add
cmp
addr16
sub
dec
ins
and
and
pusha
mov
and
sbb
dec
outs
push
xor
push
push
sbb
(bad)
push
imul
xor
dec
bound
mov
ins
dec
sbb
mov
cs
xchg
adc
inc
arpl
scas
retf
or
sbb
sub
xor
stos
pop
adc
enter
inc
or
ret
mov
or
push
not
mov
pop
push
call
mov
push
into
inc
push
push
jp
bound
bound
push
mov
loope
sbb
cmp
jle
push
ins
ss
and
cmp
inc
outs
movs
push
dec
and
xchg
int3
push
or
outs
xor
stos
lock
imul
mov
jp
fld
push
mov
ins
pop
inc
retf
inc
pop
inc
fwait
inc
and
inc
inc
call
sbb
movs
push
jo
sub
push
test
loopne
imul
sub
push
mov
mov
sbb
cmp
out
bound
dec
mov
test
test
aad
jo
popa
and
push
dec
lock
pop
adc
adc
test
cmp
inc
jae
xor
sub
inc
mov
in
jo
sub
xchg
ins
jo
inc
mov
lock
fidiv
aad
dec
mul
jp
mov
push
mov
inc
dec
push
sbb
inc
movs
xor
adc
or
push
mov
jbe
push
dec
add
mov
or
adc
inc
add
movs
test
(bad)
cmp
mov
mov
dec
cwde
mov
cdq
nop
or
push
mov
imul
add
out
and
inc
jns
outs
xchg
fwait
push
int3
or
repnz
lock
dec
jne
fs
les
add
stos
mov
mov
xor
add
push
cdq
mov
adc
xchg
dec
fsub
adc
mov
dec
jae
add
jmp
lock
jo
ds
test
imul
dec
jo
cmp
xor
bound
and
and
add
xchg
stos
repnz
loop
cld
dec
bound
pop
add
push
inc
stos
mov
mov
mov
and
xchg
inc
or
xor
inc
push
popa
mov
dec
movs
popa
add
jmp
ins
cmps
mov
es
in
dec
sub
rol
in
imul
addr16
fwait
xor
test
mov
dec
test
push
adc
in
inc
dec
pop
inc
fidivr
or
push
inc
xor
aam
push
xor
or
les
mov
xchg
dec
xor
add
mov
push
push
pushf
jp
inc
push
shr
mov
fild
push
jb
xchg
dec
add
add
inc
xor
and
jbe
adc
aam
or
gs
and
outs
jo
jmp
and
push
and
xchg
dec
dec
xor
push
mov
sbb
push
data16
or
sbb
and
xchg
sbb
imul
xchg
jno
and
dec
sbb
loopne
aam
inc
dec
aam
jmp
mov
pop
dec
push
mov
add
add
and
push
inc
stos
inc
cmp
cmp
adc
mov
pop
clc
and
push
shl
dec
xor
inc
lds
push
xor
adc
int3
sbb
ss
push
call
dec
push
into
dec
bound
aaa
sub
xor
push
ins
xchg
dec
push
or
outs
retf
adc
scas
dec
mov
jb
call
add
sub
sub
scas
xchg
addr16
adc
cld
inc
sub
inc
repnz
push
dec
jne
test
retf
dec
xor
cdq
sub
(bad)
dec
js
pop
push
call
inc
es
jl
es
add
pop
popa
sbb
push
and
sub
dec
mov
js
dec
inc
inc
test
mov
arpl
popa
push
adc
cmp
ss
sbb
pop
popa
or
adc
bound
imul
sbb
sub
aaa
push
ins
not
add
icebp
dec
gs
add
add
dec
imul
push
(bad)
lods
add
xchg
int3
xchg
rol
inc
jns
xor
cmp
jle
push
jne
pop
pusha
or
fcomp
dec
sub
or
xor
xchg
or
pop
push
cmp
stos
clc
mov
pop
add
push
and
push
push
inc
xchg
rcr
cmp
pop
adc
xchg
or
pop
mov
inc
mov
je
push
jmp
js
xor
push
mov
or
aad
xor
pop
outs
xchg
shl
dec
sub
add
sub
inc
stos
xor
test
movs
add
imul
inc
pop
movs
xor
mov
push
loopne
es
fs
sbb
inc
in
test
mov
sub
lods
jo
div
sub
popa
ss
and
push
jp
cmp
ret
popa
mov
pusha
pop
aam
leave
mov
and
sbb
int3
mov
daa
inc
sbb
dec
cmp
aam
inc
scas
dec
or
mov
push
inc
push
fmul
sub
mov
outs
and
nop
push
cwde
inc
add
jo
sbb
xor
es
mov
add
pop
or
inc
ins
out
pop
xchg
add
add
xchg
dec
dec
xor
add
test
imul
dec
data16
data16
ss
add
ja
push
push
pop
jo
data16
xor
push
popa
adc
je
or
inc
je
adc
int3
mov
movs
aam
adc
push
ja
js
jb
mov
push
push
add
dec
call
or
je
and
cmc
xor
out
inc
mov
ficom
das
sbb
cmps
dec
ins
adc
es
push
mov
adc
int
cs
push
pushw
adc
lock
and
mov
sbb
outs
mov
test
xor
scas
xchg
push
xchg
fdivr
sbb
mov
dec
dec
sub
mov
jp
xor
mov
clc
ss
inc
mov
and
je
clc
fdiv
mov
cmp
pusha
xor
(bad)
adc
push
mov
fs
ficom
outs
jo
xor
test
outs
dec
dec
adc
lds
pusha
xor
call
push
idiv
add
add
ins
dec
imul
push
leave
jo
jo
aam
jp
xchg
xchg
jb
nop
int3
jo
inc
cmp
inc
inc
dec
sub
and
dec
mov
push
add
cmps
jp
cmp
mov
and
or
adc
mov
imul
add
push
sbb
push
inc
ss
mov
push
or
inc
xor
movs
adc
inc
inc
xor
mov
fisub
fld
inc
xchg
push
xor
les
mov
ja
aad
pusha
scas
lock
ins
mov
mov
jmp
cmp
adc
pop
inc
push
push
arpl
cdq
mov
mov
data16
mov
xor
inc
stos
mov
jmp
stos
push
or
and
xor
jb
add
cmps
xor
add
pop
lods
push
push
mov
fadd
adc
outs
out
sbb
gs
dec
dec
in
add
push
sar
and
sahf
pusha
inc
loopne
push
mov
adc
and
inc
push
adc
push
jno
mov
adc
add
jb
pop
test
dec
push
mov
rcl
push
adc
add
push
hlt
dec
test
push
pop
pop
adc
pop
sbb
cmp
sub
push
add
bound
dec
xchg
ret
push
pop
add
push
push
adc
ss
sub
inc
inc
mov
es
sbb
mov
or
xchg
pop
xchg
inc
xor
jbe
push
ins
dec
outs
je
mov
test
enter
xchg
jno
popa
dec
add
xor
js
push
push
fidivr
cwde
mov
push
dec
inc
(bad)
push
push
into
xor
inc
adc
inc
stos
mov
push
push
pop
or
dec
in
enter
xchg
or
add
pop
sbb
push
sbb
movs
mov
and
add
xchg
jo
inc
push
aam
xchg
sbb
clc
and
xchg
mov
add
add
adc
outs
jo
add
and
les
popa
mov
xor
sub
dec
push
das
add
outs
bound
imul
arpl
push
inc
adc
mov
outs
out
push
jb
dec
ins
test
or
mov
int3
mov
sbb
loope
outs
push
cmp
inc
imul
sub
dec
fs
ss
add
ret
adc
pop
jb
outs
aaa
sub
aam
in
popa
sub
jo
or
jl
les
add
bound
outs
aaa
ret
popa
shl
inc
ror
in
bound
push
mov
mov
in
add
push
and
scas
inc
adc
test
je
js
or
je
xor
inc
sbb
xor
jo
cmps
inc
adc
jg
loope
and
inc
push
jae
push
jo
push
push
mov
mov
repnz
pusha
adc
sub
dec
inc
push
(bad)
rcl
ins
jo
push
push
add
inc
mov
cmp
retf
aaa
inc
cmps
cwde
add
push
sbb
ds
cmps
retf
push
sub
mov
repnz
push
rol
int3
inc
inc
jb
and
or
ds
fdivr
inc
dec
sar
adc
pop
xchg
fisub
dec
inc
inc
cmp
in
xor
cmp
rol
dec
cmp
scas
fdiv
rcl
dec
loop
dec
data16
sbb
push
push
cmp
xor
pop
inc
push
add
or
imul
jae
aaa
test
xchg
bound
add
xchg
inc
xchg
shl
adc
or
mov
jno
and
push
inc
sbb
dec
mov
add
ud2
inc
xor
push
push
add
inc
cld
sub
adc
inc
pushf
push
push
mov
inc
scas
xor
in
sbb
inc
jns
push
data16
imul
cmp
mov
xor
xchg
shl
inc
jle
xor
xchg
pop
(bad)
adc
sbb
and
or
ds
inc
ins
stos
jl
in
adc
das
mov
mov
dec
outs
je
outs
int3
sbb
sub
imul
sub
and
dec
test
sub
push
test
xchg
sbb
ss
mov
or
dec
cmp
into
add
adc
xchg
out
mov
cs
cmp
push
or
add
outs
push
fisubr
shl
aaa
push
adc
push
sbb
adc
adc
data16
sub
inc
add
test
xor
xor
bound
aam
call
add
adc
push
xchg
je
sub
cmps
jbe
jb
jmp
or
push
stos
nop
dec
sub
jne
sub
enter
adc
mov
addr16
ins
dec
jb
cmp
and
es
mov
js
popa
add
scas
mov
gs
push
pop
push
inc
mov
or
je
xchg
jo
push
add
pop
data16
mov
lods
inc
push
adc
inc
shl
cdq
imul
(bad)
popa
xor
dec
xor
mov
cmp
fs
pop
test
mov
retf
dec
adc
xchg
mov
jne
pop
rol
ror
je
push
adc
or
outs
test
scas
inc
push
adc
bound
sub
cmps
sub
je
pop
dec
mov
mul
repnz
cdq
or
lods
add
inc
mov
shl
js
and
push
in
push
addr16
jno
or
inc
in
cmp
push
inc
test
adc
sub
data16
test
jns
or
and
mov
int
jo
dec
jb
inc
jb
jno
xchg
dec
pushf
hlt
test
in
pusha
mov
loopne
push
mov
and
add
ss
movs
push
shr
movs
push
shl
jle
jae
push
xor
adc
test
push
jp
mov
bound
int3
sbb
adc
sub
dec
cli
fcom
jbe
(bad)
repnz
outs
imul
mov
mov
and
lods
cmp
sub
fimul
or
sbb
sbb
inc
sbb
xchg
nop
sub
cwde
pusha
push
mov
dec
push
jo
push
inc
mov
mov
imul
rcl
or
pop
push
and
jns
dec
jns
push
outs
les
xlat
mov
push
push
xor
mov
test
xchg
shl
sar
xchg
rcl
or
push
sub
push
or
jp
aaa
cwde
dec
inc
inc
jb
push
and
push
xor
js
pop
dec
ret
fsub
dec
xchg
ss
mov
cld
xor
add
rol
cmp
loopne
add
in
cld
mov
fsub
mov
jp
pop
push
rcr
xor
push
je
aaa
pop
jo
xor
pop
pop
or
inc
or
cmp
push
imul
test
dec
dec
mov
adc
adc
push
dec
ror
loopne
push
stos
pop
or
push
cmps
scas
inc
shl
xor
mov
adc
aaa
jae
dec
mov
clc
or
push
lds
pop
push
add
loopne
xchg
and
jb
push
retf
leave
xor
fisub
fcomp
inc
xchg
jp
fadd
shl
push
xor
mov
js
pushf
retf
mov
js
adc
sub
add
shl
add
imul
push
mov
pop
inc
sub
xor
pop
mov
inc
mov
mov
push
adc
pusha
adc
and
int
add
push
mov
jb
push
inc
js
test
cmps
and
pushf
ja
and
add
sub
xchg
dec
mov
xchg
jb
xchg
and
dec
dec
pop
jne
(bad)
and
pop
push
jp
dec
push
je
push
or
cmp
inc
mov
inc
cmp
or
bound
xchg
loopne
jle
mov
add
push
xchg
pop
mulps
push
or
add
pop
inc
(bad)
dec
adc
dec
retf
xor
retf
dec
test
mov
push
add
rol
inc
and
pop
push
jbe
mov
xchg
mov
pop
and
pusha
cmp
push
push
push
add
dec
popa
push
out
push
pop
and
add
bound
test
inc
inc
push
inc
ror
xor
dec
dec
lock
or
and
inc
dec
push
cmp
mov
scas
mov
gs
mov
jno
mov
pop
pop
mov
push
xor
push
movs
push
ret
push
add
shr
xor
ins
inc
xchg
or
add
jb
jno
cmps
inc
pop
js
test
dec
mov
add
inc
inc
dec
lock
addr16
pop
mov
addr16
adc
outs
push
mov
inc
ss
sbb
test
enter
xor
push
xor
sub
outs
pushf
inc
jbe
jo
test
mov
lock
or
scas
ret
push
jp
dec
mov
or
jp
push
mov
or
push
or
mov
bound
push
test
pop
inc
inc
repnz
jp
mov
lock
xchg
cmp
(bad)
pop
movs
mov
mov
es
loopne
dec
inc
jb
push
movs
and
mov
inc
outs
or
pop
adc
lock
addr16
or
dec
push
jo
add
mov
xor
test
(bad)
popa
inc
arpl
dec
loope
sub
nop
sbb
test
inc
neg
or
(bad)
push
repnz
push
xchg
push
clc
xor
push
inc
and
cmp
in
inc
dec
pusha
mov
xor
dec
and
push
mov
js
fadd
adc
mov
mov
cmp
inc
shr
and
jmp
and
into
adc
shl
add
inc
aaa
and
cs
js
inc
jb
movs
xor
mov
jne
mov
mov
push
push
imul
int3
add
and
hlt
outs
retf
mov
aam
inc
xchg
mov
nop
sub
adc
inc
xor
and
inc
cmc
dec
outs
dec
inc
lods
cmp
mov
ficom
push
fs
jno
inc
(bad)
push
ins
jp
dec
xor
ja
popa
ret
adc
cs
and
pushf
dec
push
sbb
dec
or
dec
sub
jo
nop
push
aaa
dec
dec
adc
lods
or
ins
sub
cmp
test
push
jb
dec
and
inc
outs
push
loop
push
adc
adc
xchg
retf
jp
mov
les
jb
mov
push
cmps
movs
inc
arpl
cwde
or
adc
and
loop
loope
add
sub
aaa
xchg
pop
dec
enter
sub
push
pop
js
adc
push
mov
test
movs
and
jo
fs
fs
movs
test
mul
imul
test
add
inc
jg
pop
inc
jp
into
ret
or
jmp
enter
or
xor
add
dec
mov
or
sbb
rcr
pop
cmp
fs
(bad)
cmp
pusha
push
xor
push
inc
push
add
push
hlt
pop
inc
ins
adc
clc
call
and
push
test
adc
cwde
push
nop
adc
loopne
mov
stos
mov
push
js
inc
ins
hlt
inc
loopne
push
fisubr
arpl
xor
dec
mov
push
push
or
cs
dec
dec
xchg
jmp
adc
(bad)
cli
adc
js
xchg
movs
inc
test
push
js
dec
xchg
add
call
push
push
imul
pusha
xchg
push
cmp
dec
fdiv
ret
sub
inc
push
test
or
jo
mov
in
stos
dec
xor
shl
test
loopne
or
stos
and
imul
sub
sub
gs
jne
lods
dec
adc
loop
xchg
adc
adc
test
add
adc
test
or
adc
and
and
aam
pop
mov
pop
and
cwde
data16
adc
push
leave
mov
adc
arpl
pop
js
bound
inc
add
test
cs
sbb
mov
dec
inc
repnz
dec
inc
or
sub
ss
outs
dec
ror
jno
sbb
jae
movs
gs
or
xchg
fwait
push
sahf
mov
imul
outs
call
(bad)
cmp
push
mov
adc
enter
mov
mov
inc
sbb
xor
ss
sub
jae
inc
ss
push
ins
retf
add
inc
add
push
js
sub
sbb
inc
and
dec
nop
xchg
push
sbb
lock
jbe
jo
or
call
push
dec
or
ret
(bad)
lods
sbb
dec
pop
or
scas
xor
or
into
jle
(bad)
push
mov
popa
or
sbb
bound
rol
push
push
adc
adc
cmp
mov
mov
mov
in
bound
sub
inc
inc
sbb
sub
ss
add
push
adc
retf
xchg
cmp
jp
push
jmp
movs
or
inc
or
mov
dec
inc
xor
jb
ins
ret
push
mov
inc
push
sub
ret
add
data16
push
mov
sbb
lock
sbb
pop
outs
and
push
popa
push
jae
xchg
xor
sar
sbb
push
sub
push
(bad)
mov
sahf
mov
dec
and
jns
add
xor
mov
ja
adc
cmps
mov
inc
adc
jo
xchg
mov
into
cmp
xor
adc
mov
add
shl
dec
fdiv
add
add
inc
and
and
pop
add
cmps
out
push
or
pop
test
fs
cmp
adc
ja
add
and
test
imul
aad
add
cwde
and
xchg
push
inc
or
aaa
mov
and
add
jb
push
fs
add
rcr
shl
cmp
inc
adc
lods
or
inc
pop
xor
add
ret
rol
test
ret
adc
sbb
adc
call
addr16
xor
imul
inc
nop
pop
outs
or
mov
xchg
push
pusha
xor
adc
jl
mov
jp
push
push
push
pop
xor
or
or
inc
push
sahf
ins
fidivr
push
cdq
push
jns
and
mov
sbb
xchg
(bad)
data16
and
les
or
cmp
jne
and
add
cmp
jb
test
pop
jl
or
and
sub
add
bound
push
gs
inc
mov
loopne
sbb
sub
js
je
adc
push
out
push
pop
cwd
add
leave
xor
enter
sub
jb
and
and
xor
outs
or
jb
inc
mov
ds
dec
outs
adc
popa
dec
jb
push
jo
add
imul
dec
ret
mov
xchg
mov
mov
inc
and
jb
enter
sbb
dec
or
or
ins
cwde
lods
add
dec
inc
sbb
push
jp
push
adc
dec
stos
mov
scas
jae
push
cmp
mov
inc
sub
ret
mul
or
dec
inc
adc
push
sahf
pop
push
cdq
pop
stos
loop
ins
and
dec
jae
or
inc
call
xchg
dec
jbe
xor
cli
cmp
adc
xor
dec
inc
dec
pop
xchg
movs
push
cld
cwde
aam
mov
les
and
shl
dec
ins
or
add
or
dec
sbb
sub
in
ins
jl
push
push
popa
jns
push
dec
sbb
shl
nop
stos
adc
movs
mov
test
retf
sti
add
push
jb
push
xchg
ror
mov
lods
inc
inc
shr
or
push
enter
inc
inc
mov
leave
mov
enter
sbb
push
(bad)
loopne
sub
outs
push
push
adc
push
es
inc
jne
cdq
mov
add
imul
sbb
inc
mov
push
outs
push
xor
push
or
adc
xchg
dec
xchg
ss
mov
cmp
ins
or
retf
push
mov
jb
push
or
push
inc
in
mov
push
mov
dec
stos
add
shl
cs
jb
or
pop
adc
push
push
cmp
cwde
push
push
inc
loop
sub
sar
cwde
test
mov
xor
xor
push
push
jns
nop
add
shl
mov
out
dec
ins
outs
es
pop
xor
xchg
and
mov
inc
and
and
inc
or
xchg
retf
pusha
pop
adc
push
jo
and
pop
adc
es
add
dec
test
xchg
add
adc
xor
cli
xor
pop
fidiv
add
retf
push
push
ins
cmp
in
pop
sbb
test
and
push
cmps
aam
or
dec
dec
bound
add
lock
call
outs
xchg
push
sub
add
fwait
add
push
push
ja
push
mov
inc
inc
or
push
cwde
jo
mov
mov
push
push
outs
dec
push
stos
push
bound
test
cmps
mov
cmps
mov
mov
xor
jb
push
dec
xor
or
dec
mov
add
ret
cmp
or
or
inc
dec
js
inc
or
scas
je
xor
dec
fs
push
dec
push
dec
xor
xor
mov
inc
cli
push
dec
lock
ins
test
pop
inc
in
jo
and
sbb
xchg
jbe
enter
mov
mov
sub
sub
cs
add
ss
fmul
ins
movs
adc
cmp
mov
jp
push
sub
cwde
inc
and
mov
mov
cld
xor
pop
inc
jle
push
xor
cmp
sahf
cwde
push
arpl
push
add
add
retf
dec
mov
ins
cmp
mov
fld
jno
pop
enter
fs
push
add
cmps
lock
xor
cwde
nop
or
out
stos
add
push
je
pop
add
nop
shr
push
mov
jp
or
outs
xor
scas
cmps
push
push
ins
out
push
int3
aaa
adc
mov
cmp
push
mov
jp
inc
cli
add
dec
pop
xchg
(bad)
push
inc
fnsave
outs
inc
pop
dec
dec
push
sbb
add
or
je
dec
shr
dec
data16
sub
xor
xchg
outs
call
xor
fsubp
jb
add
shr
push
cli
push
pushw
push
push
and
aam
bound
shl
push
mov
test
cmp
push
jp
scas
mov
aam
out
ins
push
ins
add
xchg
in
dec
dec
push
loopne
add
mov
popa
aaa
sahf
pop
outs
inc
push
je
lods
or
imul
cld
push
(bad)
ins
outs
adc
cmps
ins
dec
movs
dec
gs
(bad)
dec
push
inc
adc
pop
mov
aad
ins
xchg
ja
loopne
sbb
imul
push
mov
adc
test
dec
xor
adc
inc
or
loop
or
(bad)
dec
pop
pop
stos
push
dec
jmp
bound
add
push
pop
or
pushf
(bad)
xchg
push
push
adc
mov
jb
add
push
dec
arpl
cmp
inc
push
inc
jmp
inc
gs
clc
or
stos
and
cwde
ss
call
mov
push
adc
inc
call
push
xor
cmps
cwde
push
inc
data16
movs
dec
cmp
leave
push
xchg
and
cmp
clc
or
cwde
inc
and
push
inc
jl
popa
sbb
fcomp
mov
imul
pusha
popa
ss
pop
stos
cs
imul
inc
inc
loop
and
inc
test
ins
dec
hlt
xor
dec
push
sub
movs
in
test
jo
push
fimul
push
bound
imul
xchg
adc
add
dec
shl
push
dec
imul
bound
push
stos
inc
push
dec
push
cmp
pop
or
clc
push
imul
pop
out
bound
pop
and
je
jl
add
inc
push
cld
je
xor
push
xor
dec
push
jbe
dec
push
adc
xor
push
pop
inc
push
jl
fisub
push
bound
dec
or
push
push
or
and
pop
aam
xchg
add
cs
dec
test
push
push
movs
gs
push
aaa
bound
pop
fcom
pop
pop
dec
push
adc
(bad)
pop
imul
xor
call
push
xchg
scas
sub
mov
lods
shl
mov
inc
xor
sbb
or
test
and
scas
pop
adc
fs
inc
int
js
cli
clc
mov
test
push
push
sbb
push
fs
adc
rcr
hlt
cmp
pusha
pop
sub
rcl
mov
test
and
mov
xchg
or
xchg
add
ins
lods
add
and
jle
add
adc
inc
sub
ret
sub
push
ins
sbb
push
inc
xor
sub
(bad)
bound
es
push
loop
or
fld
clc
push
push
fld
adc
retf
data16
mov
sub
push
(bad)
sbb
mov
and
mov
push
push
xchg
ins
mov
or
jbe
push
dec
stos
add
push
jne
cmp
rol
loope
clc
popa
add
xor
xor
and
lea
pop
cs
int3
xor
mov
bound
jne
add
mov
push
rcl
adc
adc
xchg
shr
inc
push
xor
add
or
mov
idiv
nop
ret
test
test
cs
rcl
stos
sbb
nop
push
inc
xor
inc
sub
push
inc
loope
dec
push
retf
imul
mov
ss
sbb
in
call
cmp
ja
scas
pop
inc
or
ins
fs
or
sub
add
movs
xor
inc
mov
test
pop
add
out
push
sub
push
adc
imul
xchg
data16
test
xchg
push
movs
pop
fidivr
xor
mov
dec
sbb
inc
dec
aam
popa
cwde
sub
cmp
add
push
and
mov
dec
xor
js
xor
mov
inc
push
inc
test
inc
or
stos
pop
jo
xor
sub
mov
pop
inc
pop
mov
shl
dec
fs
mov
jo
add
imul
xchg
ror
dec
mov
ss
dec
adc
push
lock
cwde
fcom
dec
sub
lock
mov
movs
cmp
inc
inc
bound
mov
inc
or
xor
push
adc
dec
bound
fisub
cwde
imul
push
ror
push
mov
ret
xchg
sbb
push
or
test
xchg
adc
xchg
shl
dec
int3
mov
ret
ins
push
push
fild
and
dec
xchg
mov
ror
clc
ja
in
and
and
cs
inc
and
sub
mov
push
movs
cwde
xchg
pushf
push
nop
ss
hlt
mov
push
push
rol
and
jbe
push
inc
adc
add
or
xor
xchg
or
push
mov
sbb
xchg
push
pushf
push
inc
dec
popa
xchg
ins
inc
push
xchg
add
or
lea
xor
push
sbb
adc
call
pop
ret
add
and
test
sub
xor
jp
push
push
jbe
xor
fisub
mov
push
sub
pop
xor
push
pop
mov
mov
and
sub
(bad)
(bad)
cwde
test
mov
inc
jl
jp
inc
add
xchg
test
test
dec
imul
xor
sub
adc
rcl
xor
inc
push
xchg
push
call
push
ins
push
jle
shl
test
test
rcl
jo
outs
pop
xor
pop
or
mov
mov
outs
adc
dec
imul
push
bound
push
out
mov
imul
push
pop
push
fwait
sub
dec
stos
test
xchg
xchg
xor
push
add
pop
mov
add
or
push
adc
dec
push
and
inc
data16
push
rol
ins
jo
into
rcl
sub
js
outs
jae
xor
cdq
add
inc
push
add
mov
push
jbe
sbb
call
hlt
cdq
fmul
test
dec
adc
scas
xchg
mov
xor
push
dec
fmul
lods
push
call
mov
aaa
sub
push
and
inc
arpl
or
adc
mov
mov
dec
inc
and
rol
pop
push
or
ins
je
pop
xor
xor
or
or
inc
ins
mov
sub
rcr
add
mov
pusha
test
or
push
xchg
test
cs
dec
es
or
inc
sahf
shl
add
out
into
xor
jmp
and
cwde
nop
mov
pop
push
xchg
mov
dec
sub
ror
dec
and
popa
dec
adc
or
inc
push
data16
ss
test
movs
mov
fs
stos
fld1
jo
sbb
push
out
retf
push
jbe
mov
aam
ret
mov
loopne
cwde
pop
xor
ins
nop
pop
(bad)
retf
adc
adc
lds
push
scas
call
xor
push
sub
add
xor
inc
inc
sub
jl
push
dec
pop
ret
dec
add
and
inc
sub
or
es
fs
outs
ret
inc
mov
jo
popa
shr
push
sub
dec
mov
sbb
mov
sub
inc
aaa
clc
sbb
add
(bad)
out
inc
inc
inc
xchg
jp
xchg
rcr
push
cmp
xor
push
mov
aad
push
imul
jo
jo
mov
or
adc
cmp
sub
gs
push
sub
mov
pop
mov
push
add
push
adc
xor
gs
fisub
cmp
sub
dec
bnd
inc
das
jo
adc
mov
mov
adc
ins
movs
inc
mov
sbb
jns
pop
inc
aaa
jo
les
rcr
xor
dec
mov
push
stos
(bad)
mov
arpl
xor
xchg
or
sub
movs
jno
push
add
sbb
inc
xchg
ins
push
inc
sub
add
xor
and
push
(bad)
sub
fld
outs
push
pop
or
outs
fs
adc
sub
je
pop
and
dec
enter
mov
inc
mov
xor
or
ins
pop
push
arpl
inc
jmp
dec
retf
or
mov
ja
popa
test
inc
repnz
dec
jp
or
sbb
and
dec
sbb
jb
les
int3
add
adc
cld
stos
shl
cmp
adc
mov
xchg
cld
pop
pop
add
in
inc
and
inc
adc
shl
xor
mov
pop
outs
cmp
inc
test
push
call
and
enter
push
pop
fbstp
cmp
imul
jbe
adc
xor
loopne
add
inc
jbe
or
push
mov
add
sub
adc
mov
sar
xchg
aad
dec
dec
ja
push
fidivr
push
or
enter
inc
shl
cli
jbe
inc
push
push
cmp
das
rol
dec
push
push
imul
push
pop
or
xor
xchg
push
inc
fiadd
in
mov
call
(bad)
clc
je
pop
adc
dec
adc
xor
add
retf
push
xor
pop
dec
push
inc
push
int3
fisubr
mov
push
bound
xchg
jp
cdq
or
movs
xor
mov
fisub
jne
fs
push
adc
inc
push
inc
fild
into
jb
jp
dec
mov
jmp
jb
outs
mov
ins
jns
and
out
dec
addr16
push
dec
or
mov
inc
xchg
dec
inc
ret
jle
in
or
inc
or
mov
add
inc
sub
adc
add
adc
sub
or
int3
movs
mov
mov
test
mov
xor
sub
jae
add
rol
cwde
cmp
jecxz
add
xor
stos
ret
xchg
push
pusha
inc
sub
gs
xor
or
push
ror
mov
mov
adc
xchg
push
mov
mov
sub
movs
mov
mov
mov
js
pop
inc
ret
fsubr
inc
dec
mov
cli
jbe
inc
inc
inc
and
imul
inc
repnz
and
inc
mov
jno
sbb
adc
(bad)
xchg
push
push
clc
push
xor
stos
sbb
dec
dec
inc
ins
mov
dec
lods
and
dec
push
cs
(bad)
retf
jp
jne
sub
push
pusha
push
sbb
pop
aaa
push
ins
je
push
sub
aam
add
inc
push
arpl
test
test
(bad)
pusha
or
add
xchg
sub
xor
push
sbb
jne
jbe
mov
ins
sub
into
rcr
add
or
or
popa
pop
xor
lahf
xchg
cmp
addr16
sbb
test
xchg
je
test
xchg
stos
cwde
adc
add
mov
dec
cld
xor
push
or
repnz
push
retf
xor
xchg
pop
shr
mov
sub
dec
enter
int3
cmp
or
mov
inc
xchg
enter
or
dec
imul
(bad)
inc
inc
int3
sahf
push
jno
fs
loop
dec
push
add
test
dec
pop
aad
rcr
xor
fwait
pop
xlat
ins
outs
fisubr
retf
cmp
xor
push
ins
cs
xor
and
or
jp
outs
push
mov
jb
aaa
push
stos
dec
sar
xor
loop
xor
jae
push
xchg
inc
clc
cli
add
pusha
call
push
pop
inc
sar
je
push
add
xchg
mov
rcl
jne
mov
outs
adc
(bad)
aam
fs
adc
mov
add
cmp
push
fs
sub
inc
in
add
repnz
push
add
inc
xchg
js
outs
cld
dec
pop
dec
add
sub
dec
lds
lods
data16
inc
xchg
and
stos
cs
xor
push
xor
jo
or
sbb
ss
xor
mov
mov
xor
push
xchg
add
adc
mov
loopne
or
inc
or
mov
push
mov
fidivr
push
inc
add
ins
int
inc
and
add
lods
cmp
inc
xor
sbb
lods
adc
inc
adc
dec
ja
pusha
bound
mov
sub
xchg
test
inc
xchg
xor
jle
sub
enter
inc
inc
push
mov
bound
push
imul
stos
xchg
mov
and
dec
or
mov
push
or
push
cmp
inc
dec
dec
data16
inc
inc
fdivr
movs
ins
stos
xor
dec
mov
sahf
jbe
xor
sbb
cmp
xor
jo
fsub
push
ins
jne
fiadd
data16
inc
cdq
popa
int3
sbb
inc
and
imul
and
jno
cmp
mov
push
shl
sub
dec
push
ins
add
jno
jno
fsubr
xchg
push
inc
inc
inc
imul
ins
jmp
arpl
sbb
cmp
data16
(bad)
sub
push
mov
add
push
xor
je
or
inc
in
xor
jb
pop
in
dec
mov
xor
adc
inc
add
into
push
push
add
test
pop
scas
aaa
je
push
xchg
xchg
and
inc
mov
dec
pop
outs
inc
ins
xor
dec
xchg
sub
jne
clc
lods
pop
fldcw
pop
imul
lods
sahf
adc
inc
inc
mov
adc
add
or
rcr
push
hlt
or
shl
in
sbb
push
call
mov
xchg
in
add
js
shl
inc
push
movs
cli
addr16
sbb
or
push
ret
outs
cs
je
and
xor
lock
or
push
xchg
inc
push
xor
dec
push
mov
jae
xor
jle
test
pop
push
sub
push
push
xchg
div
xchg
ds
dec
inc
sbb
pusha
gs
add
scas
leave
inc
in
push
dec
xor
inc
push
mov
push
or
pop
jl
out
mov
and
push
dec
dec
sub
adc
inc
(bad)
adc
sub
jo
xor
cmp
add
xor
imul
test
mov
scas
dec
stos
shl
dec
enter
adc
pop
xor
push
sub
mov
dec
adc
cwde
pop
xor
dec
gs
push
in
inc
and
xchg
add
test
add
inc
dec
scas
dec
and
ret
mov
push
add
test
cmps
xchg
test
inc
es
dec
add
adc
xchg
outs
inc
outs
jle
pusha
add
cmps
fs
scas
loopne
push
xor
pop
cmp
mov
inc
xor
push
pop
pop
xor
add
cwde
xchg
jae
jns
test
and
ss
and
outs
push
push
data16
inc
in
adc
xor
push
push
push
push
ds
xor
sub
loopne
inc
mov
jle
repnz
pop
and
in
out
enter
and
inc
and
inc
inc
out
pushf
gs
outs
ins
inc
aaa
mov
ins
arpl
jp
push
add
jne
cwde
sub
mov
inc
mov
inc
jo
push
loopne
retf
and
push
xor
adc
lds
rcl
arpl
loopne
push
xlat
adc
mov
adc
mov
pop
data16
fcom
cli
or
je
xor
leave
dec
push
loop
dec
push
cmp
dec
add
inc
add
pusha
push
cmps
js
lds
popa
sub
imul
repnz
ds
mov
adc
cs
xor
sub
ins
sbb
dec
and
dec
sbb
push
je
sub
mov
jle
push
add
jp
sub
rcl
push
inc
js
inc
mov
(bad)
enter
jl
popaw
mov
add
fmul
cmps
ror
or
pop
pop
ror
and
push
outs
pusha
push
loope
add
mov
sbb
xchg
retf
and
dec
xchg
test
aam
(bad)
imul
pop
movs
imul
xor
gs
or
and
fsubr
je
push
mov
imul
xchg
bound
shl
mov
nop
inc
push
push
inc
hlt
inc
xchg
and
push
sbb
push
dec
inc
adc
dec
pop
push
dec
stos
push
mov
and
or
(bad)
adc
add
pop
popa
sub
sub
dec
add
movs
call
mov
mov
cmp
ins
and
push
pop
xor
sbb
nop
xchg
dec
mov
or
and
or
inc
jecxz
jno
(bad)
xchg
inc
sub
(bad)
loopne
cmp
xor
xor
hlt
inc
inc
push
or
fsub
sub
jb
inc
push
inc
xchg
mov
dec
jae
scas
arpl
pop
inc
adc
pop
dec
push
push
push
lods
bound
push
or
pusha
(bad)
(bad)
pop
arpl
jp
js
stos
add
xor
jae
lea
add
popa
or
mov
jl
inc
enter
ins
sub
sahf
xor
int
sub
std
inc
inc
imul
xor
sub
dec
dec
adc
xor
and
add
sub
add
js
ror
in
shl
inc
fs
mov
movs
fld
call
adc
call
add
xchg
aad
retf
mov
or
ins
add
dec
xchg
shl
loope
pop
dec
(bad)
loop
or
pushf
dec
dec
dec
ret
shr
and
pusha
xchg
mov
and
adc
ds
jne
cmp
push
adc
push
ins
mov
cmp
adc
add
xchg
and
or
in
pop
or
sub
fsub
retf
adc
add
outs
jbe
jp
sub
dec
dec
ds
xor
mov
cmp
add
jo
xchg
inc
xor
call
imul
and
ret
inc
add
sbb
push
inc
jb
jle
xor
aaa
sub
xor
push
cmps
xor
inc
inc
inc
or
mov
test
cmp
mov
or
add
push
add
movs
test
mov
inc
ficom
inc
xchg
jne
xor
cmp
sub
add
sub
inc
pop
or
cmp
xor
fs
or
loope
inc
xor
and
les
add
pushf
fsubr
shr
xor
je
push
sbb
inc
je
and
int3
dec
fcomp
sub
pusha
fsub
xchg
(bad)
jne
dec
into
adc
call
push
hlt
inc
data16
(bad)
js
sbb
inc
es
dec
and
ins
mov
retf
outs
and
loopne
xor
(bad)
dec
popa
inc
fs
hlt
jns
call
pop
jno
push
mov
retf
or
(bad)
jae
add
hlt
jp
imul
outs
inc
cmps
dec
add
and
jo
inc
dec
push
push
pop
adc
ss
xor
test
gs
xor
xor
pushf
cs
sub
bound
inc
jmp
aam
dec
cmp
push
pop
cs
ret
push
rol
adc
es
scas
ja
xchg
inc
sub
pop
mov
sub
mov
adc
dec
jbe
inc
das
inc
and
scas
xor
push
inc
push
and
and
dec
mov
xor
xor
dec
dec
mov
mov
add
dec
(bad)
hlt
fld
test
jns
dec
push
push
sub
add
cdq
pop
and
pusha
xor
ja
jle
dec
push
inc
pop
imul
icebp
add
push
adc
ins
inc
aad
adc
dec
pop
add
jl
xchg
dec
imul
and
or
ja
mov
mov
inc
movs
add
stos
dec
mov
dec
xchg
loope
sbb
inc
imul
or
jae
push
fs
cmp
out
inc
adc
push
jp
js
ret
ins
js
inc
jns
add
inc
fcmovb
or
adc
dec
call
add
add
cmps
(bad)
mov
or
rol
rcr
add
cld
and
xchg
in
push
push
out
or
aaa
fiadd
xchg
adc
mov
imul
mov
cwde
aaa
dec
ss
inc
jo
rcl
push
mov
les
hlt
jno
xchg
(bad)
sub
inc
cwde
xor
push
push
ss
inc
loopne
inc
xchg
and
and
jbe
xchg
jmp
cld
xor
rcl
dec
imul
imul
or
and
sbb
or
inc
inc
and
faddp
lea
cwde
cwde
push
sbb
push
inc
jb
add
add
add
and
clc
xor
add
jb
cmp
pop
push
xchg
loopne
rol
gs
inc
xchg
dec
xor
xor
add
data16
movs
add
scas
push
dec
add
push
jb
call
jae
je
cmp
xor
ins
imul
mov
lock
mov
adc
daa
mov
call
outs
xchg
jno
cwde
add
push
inc
xchg
jp
pop
ss
jbe
les
dec
dec
xor
adc
inc
jp
pop
cli
cmp
dec
jo
js
push
push
imul
xchg
inc
(bad)
test
and
lods
cmps
inc
cmp
sbb
shr
aaa
mov
jno
jno
sbb
push
and
jo
data16
jo
adc
out
push
cmp
int3
shl
dec
push
les
(bad)
jmp
push
xchg
cwde
xor
or
mov
popa
sub
or
inc
mov
call
mov
mov
adc
inc
(bad)
jo
inc
inc
hlt
cmp
push
add
mov
les
ret
fcom
jne
xor
ins
call
cli
sbb
loopne
retf
addr16
sahf
ret
or
mov
add
or
dec
adc
add
pushf
inc
ins
add
adc
dec
mov
mov
inc
push
inc
inc
xchg
test
push
push
(bad)
push
push
sub
movs
mov
jo
repnz
sbb
pop
push
movs
test
clc
dec
dec
sub
xchg
adc
cmp
sub
lock
mov
jbe
outs
mov
sahf
dec
or
and
jne
dec
lods
aaa
xchg
mov
push
les
jns
ins
test
sub
ss
mov
arpl
or
jbe
mov
nop
fs
sbb
(bad)
push
sub
mov
sub
stos
push
js
push
stos
push
(bad)
js
push
jo
xor
js
add
shl
ret
pop
les
stos
or
enter
inc
mov
stos
ror
outs
push
bound
inc
rcr
sbb
mov
pushf
mov
outs
inc
adc
ds
dec
fwait
adc
lods
imul
stos
push
adc
xor
mov
xor
call
test
int3
jae
add
pop
stos
push
inc
ds
xor
pop
or
jmp
or
mov
es
es
and
aad
push
out
xor
loopne
movs
test
ds
fs
fimul
clc
lock
add
push
in
loopne
cmps
xchg
push
cwde
imul
bound
xor
mov
popa
push
cdq
and
push
mov
pop
cmp
xor
stos
pop
cmp
dec
in
sub
jo
and
data16
mov
mov
push
shr
addr16
int3
pusha
lods
add
or
es
jo
inc
ss
dec
sub
dec
xor
xor
push
pushf
pop
adc
mov
inc
push
push
add
or
test
jne
imul
pop
mov
retf
inc
jo
jo
dec
inc
ds
add
xchg
xchg
rcl
xchg
adc
adc
enter
sub
dec
sbb
fcom
inc
aad
mov
inc
jmp
cld
dec
pop
in
pop
mov
jno
xchg
mov
push
push
inc
xchg
sahf
cmp
mov
or
jl
xchg
xchg
and
in
fimul
sbb
mov
push
push
ret
inc
jo
add
movs
dec
mov
mov
push
cli
inc
push
les
mov
xchg
test
sbb
dec
inc
add
jo
shl
imul
xor
rcl
sub
xor
and
sbb
sub
adc
add
outs
inc
dec
xor
adc
mov
outs
arpl
xor
push
pop
cmps
je
sub
sub
or
mov
cmp
mov
inc
dec
xor
inc
push
inc
stos
push
dec
and
sbb
inc
adc
dec
xor
outs
cdq
lods
inc
stos
cld
dec
in
cmp
ror
push
mov
loop
adc
xor
push
shr
imul
dec
jb
add
gs
movs
call
sub
imul
inc
jo
fsub
cmps
mov
push
loope
sbb
test
jbe
or
dec
or
ins
pop
fmul
xor
add
fimul
ins
adc
hlt
ins
ss
push
xchg
stos
div
add
mov
(bad)
sub
shl
ss
xor
xchg
sahf
push
popa
adc
pushf
cld
inc
ret
add
js
dec
dec
dec
inc
enter
fs
adc
xchg
dec
xor
rcl
push
inc
push
push
and
mov
fcom
call
push
push
mov
inc
inc
jno
xor
rol
data16
jne
xchg
dec
jp
inc
push
(bad)
shr
push
or
adc
push
add
lods
or
xor
or
cs
outs
sbb
daa
and
jae
add
mov
cwde
rcl
popa
in
xor
es
xor
mov
xchg
data16
add
dec
and
add
call
nop
aam
inc
les
scas
adc
pop
push
xor
dec
adc
mov
xor
xor
popa
xor
inc
les
pop
fs
adc
inc
jb
cwde
xor
es
jno
js
add
mov
inc
xor
and
push
mov
inc
test
add
adc
cmps
add
pushf
xchg
dec
or
push
and
mov
adc
inc
or
adc
jb
and
test
jbe
aaa
fsub
imul
push
dec
bound
sub
push
xor
push
ins
push
sbb
jne
adc
retf
mov
sub
lods
adc
add
in
and
sbb
add
test
pop
inc
test
push
inc
cmp
loopne
stos
sub
sub
or
cmp
xor
ins
test
add
jae
inc
mov
lods
adc
and
push
sub
pop
push
push
jb
pop
test
adc
sbb
retf
test
jb
pop
test
stos
bound
test
inc
addr16
jae
xchg
or
es
loopne
xchg
icebp
and
out
jns
push
xchg
inc
push
jae
xchg
dec
(bad)
sbb
push
xchg
fcom
mov
stos
push
inc
stos
inc
popa
mov
push
shl
mov
xor
push
out
call
bound
or
cdq
aam
mov
push
dec
xchg
test
shr
push
dec
jns
retf
dec
and
shl
add
inc
aam
and
xchg
adc
dec
scas
jbe
mov
call
push
jo
sub
add
jmp
jb
cmp
adc
fs
aaa
js
pop
push
and
ins
pop
ins
inc
xchg
jo
fidivr
add
je
cmps
add
mov
int3
js
xlat
pusha
adc
ja
jae
dec
or
xchg
dec
ret
call
addr16
jne
adc
sbb
push
sbb
push
mov
retf
jl
cmp
pop
sbb
cmp
push
popa
cli
pop
or
add
pop
xor
or
push
pop
push
mov
pop
xor
pop
mov
test
movs
bound
ins
add
js
(bad)
mov
popa
call
mov
test
or
ins
add
add
cmp
and
bound
xor
add
push
xchg
dec
scas
into
mov
test
cdq
test
ror
xor
or
cmp
loopne
clc
data16
ss
push
outs
xor
rol
mov
stos
add
and
call
int3
test
dec
sub
stos
push
outs
jb
sbb
inc
xchg
cmp
int
push
mov
mov
dec
in
or
pop
sub
push
mov
jbe
xchg
mov
push
enter
outs
popf
add
xor
mov
outs
outs
inc
je
pop
push
jp
jbe
ficom
cmp
and
add
inc
add
mov
add
dec
ins
dec
pop
and
pop
push
or
adc
xchg
add
cdq
fsub
xor
push
popa
ficom
arpl
cmps
imul
sub
rcl
movs
push
out
pop
xor
xchg
mov
push
int3
mov
pop
popa
dec
hlt
mov
ins
sbb
sub
add
sbb
inc
jo
enter
add
inc
adc
inc
lods
in
mov
nop
inc
or
ja
push
dec
sub
pushf
inc
js
pusha
push
enter
es
nop
inc
mov
outs
or
push
data16
es
sub
dec
push
cmp
dec
push
jp
rcl
loopne
ins
in
loope
cmp
push
imul
or
inc
mov
or
mov
cmp
xchg
push
ror
mov
jo
and
outs
cwde
or
pop
pop
push
inc
ds
inc
outs
push
add
ds
push
and
xacquire
in
and
(bad)
jno
jmp
bound
add
rol
cmps
add
push
bound
bound
dec
sub
mov
sbb
inc
and
ds
sbb
inc
adc
add
mov
push
je
adc
xor
mov
add
add
xor
xor
data16
xor
sub
add
xor
push
xor
push
jp
push
xor
xor
mov
xor
inc
dec
imul
dec
adc
push
or
mov
cmp
gs
imul
xor
jne
aam
add
gs
or
push
mov
add
push
and
stos
mov
retf
sub
lea
jmp
dec
jl
inc
and
push
rol
es
push
jl
push
je
adc
loopne
push
jae
ja
or
adc
xor
jbe
pop
es
mov
cwde
add
int3
mov
mov
data16
xchg
xor
pop
js
dec
push
lea
fadd
push
add
inc
dec
and
ins
outs
mov
fsubr
dec
dec
add
inc
sbb
outs
sbb
add
mov
and
jno
dec
pop
mov
inc
ss
or
pusha
dec
jns
jle
clc
xchg
lea
push
cdq
call
push
adc
dec
sar
xor
inc
inc
hlt
mov
push
aad
int3
pop
pop
inc
push
imul
ins
lock
adc
clc
aaa
jns
xor
adc
je
hlt
add
xchg
rcr
and
outs
inc
push
and
outs
add
inc
call
in
add
jp
outs
dec
dec
ret
and
in
fadd
es
scas
sub
test
pop
jb
xor
cmc
outs
jbe
pop
gs
inc
xor
pop
out
adc
adc
test
and
adc
test
ja
dec
or
das
enter
sub
test
xchg
push
adc
jmp
push
test
imul
dec
adc
and
push
xor
xor
cmps
inc
and
popf
sbb
call
call
adc
push
hlt
dec
or
jle
dec
dec
ret
push
shl
pushw
push
sbb
fmul
pop
push
aam
inc
rcl
nop
dec
les
jle
dec
scas
mov
or
cs
inc
adc
popa
js
test
push
inc
mov
ret
je
and
pusha
jmp
fdiv
and
daa
mov
shl
sbb
sbb
or
mov
inc
push
mov
mov
test
dec
adc
push
xchg
inc
xor
popa
inc
stos
dec
fisubr
(bad)
push
movs
js
xor
bound
add
sbb
dec
push
cmp
push
xor
inc
xor
xor
dec
call
xchg
or
add
imul
add
test
adc
add
push
sub
push
mov
push
stos
dec
sub
mov
sbb
xlat
es
outs
push
(bad)
push
gs
xchg
add
and
(bad)
into
xchg
dec
cwde
imul
xor
jbe
ins
and
cmp
aaa
mov
push
push
push
inc
push
fsub
and
int
dec
push
push
push
adc
pop
inc
or
mov
xchg
push
pop
nop
shr
jbe
push
dec
push
adc
adc
sbb
adc
fadd
adc
push
push
inc
dec
xor
retf
pop
push
jle
dec
and
pop
retf
push
xor
mov
clc
dec
outs
nop
je
test
xor
push
imul
sbb
bound
sbb
sub
bound
mov
jo
aam
pop
ins
sahf
inc
outs
aaa
ficom
ds
cmps
push
outs
data16
add
and
sbb
mov
add
data16
and
push
mov
in
and
xor
dec
arpl
push
inc
rol
inc
pusha
xor
adc
mov
dec
aaa
jae
stos
fs
ret
or
dec
test
retf
dec
push
je
outs
pop
and
mov
adc
xchg
add
(bad)
xchg
call
je
add
xchg
or
pop
inc
scas
and
cmp
sbb
inc
aaa
push
aaa
jmp
cmp
fcmovu
mov
nop
xor
jmp
mov
jne
and
xor
bound
jno
mov
xor
xchg
ins
cmps
or
dec
pop
xchg
data16
je
retf
in
arpl
adc
add
push
rcr
push
and
dec
loop
pop
inc
push
lods
lock
adc
add
sbb
mov
jo
push
and
push
bound
xchg
push
push
outs
inc
mov
mov
cmp
jo
jo
nop
inc
add
xor
add
fs
dec
ja
gs
ins
push
mov
xchg
mov
popa
push
mov
add
jae
sub
push
sbb
sahf
sub
and
inc
inc
push
push
out
pushf
nop
sbb
ret
adc
out
inc
es
or
cmp
mov
xchg
xor
pop
mov
mov
inc
dec
scas
mov
adc
int
jp
mov
inc
ins
inc
pop
xchg
xchg
test
cmp
outs
pop
adc
sbb
dec
jno
data16
jp
ins
xor
xor
xor
mov
pop
sbb
dec
push
or
mov
or
push
inc
data16
dec
or
cmp
hlt
(bad)
lods
mov
lds
imul
mov
dec
sub
jb
ja
outs
jmp
jns
mov
scas
mov
imul
jp
loop
xor
aad
popa
add
outs
dec
fisubr
jle
cmp
or
sbb
xor
mov
dec
mov
shr
fld
push
push
jmp
fisttp
xor
sbb
dec
adc
xor
inc
sbb
mov
int
adc
xchg
mov
sub
loopne
pop
sub
call
test
push
sbb
adc
xchg
push
xor
je
xor
pop
addr16
sub
arpl
nop
inc
xor
mov
inc
inc
push
add
dec
or
sub
mov
inc
mov
sub
dec
sbb
pop
popf
adc
jp
add
sbb
test
test
dec
adc
jb
shr
out
or
sub
or
inc
xor
fidiv
pop
adc
add
sub
adc
pop
inc
adc
xchg
rol
xor
pop
or
inc
xor
adc
inc
aam
int3
push
or
xchg
ins
jb
popa
es
call
and
xchg
ror
jo
imul
aam
inc
sbb
and
push
rol
xor
jle
je
stos
inc
inc
jne
popa
dec
adc
inc
sbb
enter
loop
mov
pop
push
ins
pop
xor
jbe
aam
cmp
push
mov
pop
xchg
or
cmp
dec
sbb
push
push
mov
jle
(bad)
nop
bound
inc
pop
cmp
or
scas
push
pop
xor
addr16
cmp
xor
and
je
push
inc
or
mov
dec
inc
imul
cwde
outs
mov
adc
mov
pop
push
ja
ss
jae
shl
mov
ret
mov
push
cmp
jo
test
dec
inc
pusha
push
push
dec
pushf
test
pusha
out
ins
or
loopne
test
inc
cmp
dec
or
test
arpl
jbe
js
adc
mov
pusha
pop
add
dec
push
or
inc
call
bound
dec
aaa
add
adc
xor
push
push
push
xor
mov
dec
fisub
enter
mov
xchg
jmp
je
call
push
xor
mov
dec
mov
pusha
inc
mov
(bad)
push
and
in
add
add
adc
and
push
pop
or
add
push
es
outs
dec
jo
dec
je
xor
jno
or
pop
and
test
dec
stos
call
push
push
gs
inc
(bad)
dec
movs
push
dec
and
fsubr
jae
cmp
sbb
or
push
shl
push
dec
call
dec
inc
push
shl
call
dec
sbb
inc
push
adc
mov
sbb
fisub
mov
push
push
popa
call
jmp
mov
sub
outs
jb
push
test
adc
arpl
je
push
mov
mov
ins
pop
push
stos
outs
push
aaa
dec
inc
aaa
push
or
push
retf
push
gs
fisubr
aaa
dec
jl
rcr
jb
xor
sub
and
cwde
inc
xor
jae
push
jmp
jp
jns
push
adc
sbb
stos
sub
dec
xor
popa
jb
or
and
ins
ret
retf
outs
inc
push
push
push
test
pop
inc
push
fldcw
xor
or
or
add
mov
mov
popf
lods
js
push
push
add
or
lock
cmp
push
dec
cmp
js
popa
push
dec
clc
jmp
into
aam
add
inc
hlt
mov
fst
mov
jno
js
add
inc
or
jbe
inc
pop
dec
int3
jp
jne
fimul
xor
cmp
loop
push
and
aam
arpl
cmp
sbb
gs
sbb
xor
clc
push
pop
add
test
mov
loop
js
enter
jecxz
movs
ins
mov
jne
ins
add
inc
adc
or
dec
scas
lock
and
fdivr
inc
pop
cmps
lea
test
xor
push
dec
cmp
mov
push
push
dec
or
stos
or
imul
add
test
ins
sbb
nop
and
mov
adc
mov
dec
push
mov
or
push
push
dec
push
pop
or
inc
push
dec
into
bound
in
push
test
fmul
jmp
outs
inc
bound
add
leave
dec
or
jb
or
adc
mov
test
dec
jle
push
call
mov
push
inc
mov
retf
lahf
pop
dec
pop
rcl
inc
inc
outs
jb
ret
mov
xchg
push
sub
push
add
bound
je
add
add
cmp
add
into
adc
jo
mov
mov
push
(bad)
jo
test
cwde
sbb
scas
or
jb
test
ret
dec
je
sbb
pop
sbb
xor
ss
ins
and
jne
inc
ins
call
nop
outs
dec
jbe
add
mov
and
stos
xor
ret
pushf
push
fimul
mov
xor
addr16
jl
adc
(bad)
mov
sub
push
xchg
adc
cdq
sub
movs
sub
sbb
adc
push
push
popf
dec
xor
je
adc
push
sbb
dec
xor
ins
push
mov
adc
add
repnz
xor
xor
jb
jo
add
gs
cwde
in
stos
inc
gs
push
xchg
fadd
xor
dec
push
and
clc
and
mov
jp
push
add
inc
dec
add
mov
outs
repnz
xor
or
mov
lock
adc
add
and
push
pop
addr16
shr
adc
test
and
nop
ds
or
dec
push
jle
adc
dec
sub
push
adc
push
in
push
push
cs
dec
lods
push
add
inc
fadd
outs
xor
mov
cmp
int
popa
and
jo
mov
dec
dec
add
pusha
jo
cwde
shl
shr
xchg
dec
and
push
je
push
sbb
sub
xor
lods
xchg
test
add
push
push
enter
loopne
dec
in
pusha
jo
mov
rcr
pop
mov
ja
pop
movs
arpl
sub
and
and
addr16
mov
movs
outs
cmp
add
test
ficomp
and
outs
clc
pop
and
test
dec
push
push
xlat
add
sbb
inc
jbe
adc
dec
inc
xor
jbe
add
or
or
or
ss
adc
or
adc
dec
add
test
adc
test
push
xor
and
jb
mov
sub
adc
sbb
cmps
es
dec
je
and
add
or
call
sbb
sub
xor
mov
lea
jbe
xor
add
add
push
add
pusha
jle
mov
mov
dec
xchg
or
sbb
imul
shl
mov
bound
pop
rcl
push
jno
ins
inc
push
or
sub
xchg
jno
ror
or
jne
jo
mov
inc
sbb
xchg
int3
mov
shl
mov
jle
or
sub
add
cs
xor
or
ins
test
mov
(bad)
dec
dec
sbb
push
jbe
push
inc
pop
(bad)
imul
jno
and
dec
pop
(bad)
mov
outs
push
in
cs
pop
dec
dec
div
jle
push
(bad)
ins
cmp
jbe
push
xchg
or
int3
dec
sub
test
ds
dec
cmp
or
nop
inc
add
inc
push
dec
add
jno
push
mov
xor
dec
push
or
rcr
mov
sub
inc
mov
jns
push
add
dec
sub
ja
mov
test
ss
imul
dec
or
bound
inc
mov
xor
loopne
and
xchg
dec
enter
clc
popa
dec
and
bnd
jmp
jbe
push
pop
push
adc
mov
lock
add
cmp
bound
xchg
lods
ja
sub
sbb
rol
inc
cmps
es
push
es
pop
dec
bound
test
bound
xchg
inc
repnz
xchg
adc
fsubr
adc
xchg
xchg
ins
push
(bad)
jae
mov
push
jbe
fadd
test
jb
jp
jns
xor
xchg
inc
xchg
fild
ins
stos
jmp
mov
je
in
xchg
inc
adc
push
mov
inc
inc
adc
daa
call
call
xor
movs
or
or
loopne
jbe
test
fisubr
(bad)
ins
xor
dec
push
test
mov
cmp
push
xchg
push
push
cmp
sbb
pop
and
add
pusha
and
push
add
add
rol
dec
test
or
je
mov
xor
retf
xor
inc
or
add
or
dec
push
bound
push
dec
test
and
int3
movs
pop
repnz
outs
dec
inc
xor
push
outs
fiadd
and
xchg
or
and
and
and
aaa
push
aaa
arpl
push
pop
test
push
mov
xor
xor
add
popa
es
cmp
adc
dec
inc
je
jl
cmp
sub
loop
cmp
scas
int3
sbb
in
cld
push
or
push
jb
pop
mov
dec
inc
add
pop
jae
movs
and
xor
push
cmp
inc
or
push
xor
pop
sub
sar
test
or
xchg
ret
xchg
or
pop
imul
inc
mov
(bad)
pusha
push
frstor
xor
push
push
mov
ins
loope
inc
add
adc
hlt
addr16
sbb
jo
dec
pop
jae
rcr
mov
pusha
retf
jp
xchg
mov
jo
mov
and
jb
xchg
imul
or
pusha
add
push
nop
dec
push
mov
adc
dec
fs
xor
push
xor
jo
inc
mov
pop
xor
inc
dec
ins
push
xor
repnz
push
mov
and
sub
je
lods
mov
cmp
enter
xor
fdivrp
jbe
mov
ds
movs
js
ret
jno
(bad)
enter
push
jp
adc
jl
adc
inc
mov
add
push
enter
adc
ds
(bad)
inc
lods
and
call
lock
sbb
mov
sar
xor
sbb
adc
push
or
fild
xor
add
pop
sahf
jb
pop
into
jae
ret
adc
sbb
or
or
mov
dec
adc
mov
mov
pushf
jne
or
inc
dec
test
xor
sub
and
enter
and
bound
je
test
sub
and
sbb
je
sub
je
mov
xor
in
xchg
outs
ror
push
imul
popa
sbb
pop
test
or
test
add
and
xchg
add
add
fsub
or
enter
sub
fwait
ror
xchg
or
push
dec
ins
xor
(bad)
lods
xor
push
arpl
xchg
mov
and
fs
sub
ss
push
(bad)
and
je
xor
inc
test
addr16
loopne
ds
dec
call
aam
out
push
mov
sbb
cmp
test
outs
or
push
movs
dec
jns
sbb
add
pushf
jl
fs
mov
cmp
dec
sbb
mov
push
data16
leave
and
or
adc
sbb
mov
dec
call
int3
push
push
movs
add
cmp
outs
dec
sbb
sbb
loop
ja
dec
xchg
pushf
bound
or
test
or
dec
cmp
mov
pop
or
jo
push
mov
fild
xor
and
sub
adc
nop
dec
in
adc
sbb
mov
jbe
or
and
or
xor
inc
xchg
mov
adc
lods
(bad)
js
cmp
pop
xchg
test
adc
call
or
push
sbb
mov
sbb
add
les
dec
in
jne
push
push
adc
ficomp
push
mov
mov
(bad)
ficom
jno
jo
push
or
ja
inc
call
mov
sub
dec
xor
push
test
push
ja
push
sub
cmps
jo
jb
cs
sbb
cmp
jb
ret
pop
xor
shl
(bad)
sbb
ror
adc
sub
adc
and
and
cmp
push
ins
ins
pop
dec
sub
or
adc
imul
or
les
cwde
push
mov
inc
dec
inc
adc
jp
imul
push
sbb
inc
aad
mov
fisub
jbe
ss
push
push
je
cmp
adc
inc
mov
jno
push
xor
xor
add
test
xchg
push
inc
bound
mov
xor
pop
jo
mov
inc
inc
call
out
mov
(bad)
cmp
outs
ja
inc
adc
inc
sbb
dec
push
xor
jno
lock
jae
adc
inc
sbb
push
push
jno
shr
push
dec
data16
pop
push
addr16
dec
js
aaa
fs
xor
or
and
or
xchg
ss
xchg
xchg
push
imul
and
ins
cmp
in
in
sub
out
data16
mov
inc
dec
xchg
fsub
push
gs
inc
push
rcl
xchg
push
inc
dec
rol
pop
add
outs
dec
push
es
push
loopne
inc
add
mov
dec
and
es
xchg
inc
add
bound
jo
inc
xchg
or
jo
xchg
aam
stos
dec
adc
xor
or
cld
aam
lock
or
sub
push
mov
jb
pusha
(bad)
mov
or
int
push
je
arpl
inc
out
mov
rcr
add
pop
dec
xor
xchg
enter
shl
fld
mov
mov
mov
inc
push
pop
and
fdiv
les
loope
retf
cmp
arpl
adc
or
inc
sub
xchg
or
pop
in
push
mov
cmp
add
lock
mov
push
add
add
mov
dec
or
pop
mov
mov
push
cmp
outs
mov
or
jge
inc
push
dec
fcomp
dec
bound
pop
cmps
arpl
push
nop
nop
jbe
push
add
js
push
stos
push
bound
rol
data16
and
or
loope
push
jb
sbb
or
add
push
ins
test
pop
sub
xchg
and
or
push
adc
add
pop
push
adc
gs
xor
inc
test
mov
inc
ins
sub
xor
inc
dec
add
mov
add
pop
cli
add
bound
jp
bound
add
leave
sbb
lods
ins
push
push
add
sub
cmps
shr
mov
or
sub
adc
add
or
add
pop
in
les
dec
xor
mov
adc
imul
popa
fiadd
imul
push
stos
push
sbb
cmps
sbb
dec
cwde
rol
xchg
popa
jbe
inc
sub
dec
or
aam
xor
push
call
arpl
jns
mov
test
jb
mov
adc
cmp
pusha
add
rcl
stos
adc
push
pushf
dec
adc
inc
outs
ret
mov
push
test
dec
adc
dec
ficom
je
scas
add
add
push
inc
inc
mov
xor
add
add
enter
mov
ficomp
cmp
cmp
push
adc
cwde
pusha
fsubp
es
push
push
mov
mov
pop
cmp
popa
add
push
xor
mov
loop
dec
xor
es
jp
nop
push
call
cli
push
fs
mul
pusha
mov
inc
mov
inc
and
fisub
dec
sub
loope
pusha
sub
push
sub
adc
fsubr
dec
add
adc
and
retfw
push
pop
js
es
xchg
mov
mov
pop
dec
push
shl
pop
(bad)
cdq
inc
shl
outs
mov
nop
add
lahf
add
inc
ss
or
xchg
xor
push
loopne
aam
xor
xchg
and
inc
add
and
dec
or
jle
mov
add
lock
or
xchg
and
les
dec
lds
lock
push
ds
add
xchg
test
or
jne
nop
dec
je
inc
dec
mov
retf
and
jb
add
and
xor
dec
inc
mov
fdiv
inc
inc
add
push
add
push
dec
cmps
pop
jne
inc
dec
push
jo
push
xor
scas
dec
adc
ret
stos
inc
pop
mov
dec
push
push
stos
aad
popa
sahf
push
icebp
dec
adc
dec
popa
dec
dec
or
movs
mov
dec
add
push
mov
fs
fiadd
inc
xchg
pop
add
jo
push
(bad)
push
test
dec
jge
shl
cmp
fcom
push
xor
xor
fadd
cmps
add
dec
out
ins
nop
loope
in
xor
push
sbb
dec
adc
in
inc
push
cli
mov
adc
push
mov
pop
xchg
cmp
or
xchg
loop
ins
cld
fs
push
inc
push
adc
js
je
or
pushf
adc
aaa
sbb
adc
outs
into
jbe
push
and
dec
gs
bound
aam
add
or
outs
bnd
leave
and
in
jl
lods
test
fsubr
mov
jbe
movs
xor
dec
cmps
jb
xor
xor
loopne
test
in
out
inc
sub
lods
ficom
(bad)
out
adc
and
xchg
pop
jle
xor
inc
mov
push
enter
bound
pop
inc
xor
mov
inc
cmps
sbb
sbb
mov
inc
mov
shl
or
adc
mov
mov
inc
mov
je
mov
rol
dec
and
dec
and
ds
inc
adc
aaa
or
aaa
push
(bad)
xchg
mov
shr
ins
dec
dec
sub
mov
retf
pop
mov
and
je
sub
dec
dec
adc
xor
jge
mov
xor
jmp
scas
sub
inc
xor
or
mov
xchg
xchg
pop
mov
push
adc
push
rcl
dec
cmp
or
sbb
dec
jo
jp
cs
inc
and
push
push
pop
in
fimul
jb
dec
mov
push
retf
inc
jle
jb
(bad)
inc
dec
loop
ja
fidiv
ret
and
inc
xor
into
sbb
sub
push
xor
cmp
sbb
sub
add
xor
push
or
or
cwde
arpl
dec
test
shl
test
nop
sub
adc
xchg
xchg
sbb
scas
pop
mov
dec
fiadd
jbe
sub
add
push
scas
xchg
(bad)
pop
dec
inc
call
mov
stos
jl
call
ins
neg
mov
mov
pusha
inc
dec
sub
push
ss
mov
inc
repnz
cmp
mov
cmp
ret
jb
xchg
push
mov
push
xchg
mov
fiadd
xor
ret
mov
push
push
pop
es
push
and
ins
inc
dec
xor
dec
popa
cmp
loopne
jo
inc
push
rcl
adc
(bad)
jno
aas
inc
xchg
in
add
dec
aam
ss
movs
frstor
ret
loop
imul
ss
ficom
jne
gs
adc
or
and
push
adc
ins
push
push
cmp
add
movs
xchg
jo
or
or
frstor
imul
aaa
xchg
in
retf
mov
xchg
sbb
and
pop
cmps
add
xchg
enter
bound
sub
push
xor
adc
mov
nop
popa
in
and
aad
jmp
jbe
outs
sub
ret
mov
xor
jb
js
imul
mov
pop
and
dec
ins
movs
add
add
call
mov
add
push
dec
inc
sbb
retf
and
dec
sub
in
aaa
jae
bound
sbb
les
adc
fsub
add
sub
ret
xor
xchg
in
push
inc
sub
cld
jb
cs
adc
test
xor
add
adc
cmp
inc
fcomp
inc
call
cmp
push
push
and
clc
xor
adc
inc
imul
lock
mov
push
inc
pop
inc
out
addr16
popa
push
adc
mov
mov
mov
fcmovb
enter
hlt
int3
inc
mov
arpl
test
cmp
imul
or
gs
call
inc
push
xor
sub
add
or
cmp
je
jb
adc
mov
add
mov
push
push
pop
sub
xor
push
push
sbb
adc
test
les
shl
xchg
sbb
ss
into
and
xor
jb
jmp
push
xor
adc
pop
and
xchg
mov
push
out
xor
repnz
push
add
cwde
cwde
pop
xor
jecxz
rcr
hlt
pop
jb
sub
add
stos
pop
ins
jo
jp
xchg
pop
sub
adc
fcom
mov
inc
pop
xor
sub
push
pop
dec
stos
cmps
and
push
jne
add
push
ins
or
or
adc
push
mov
jbe
nop
dec
ret
bound
push
inc
xchg
inc
inc
mov
js
xchg
ret
add
lods
dec
mov
outs
dec
inc
adc
jo
adc
xrelease
xor
ins
dec
jp
xchg
inc
xchg
or
push
and
xor
jp
xor
jo
pop
test
and
adc
push
adc
shl
or
inc
ins
add
sar
jns
adc
sbb
xchg
jb
jo
bound
call
cmp
test
scas
add
inc
ja
mov
jb
mov
gs
and
test
int
add
pop
xchg
xchg
cmp
push
push
shl
adc
clc
loopne
cwde
or
mov
jo
pusha
push
cmp
outs
xchg
sbb
dec
sahf
push
push
ret
sub
gs
pop
add
adc
sub
ins
sub
or
push
test
push
inc
in
int3
popa
push
push
xchg
aaa
cmp
fs
xor
dec
pushf
and
bound
xor
ja
or
(bad)
mov
push
ss
xor
fsubr
xor
bound
rol
push
test
jl
jl
xor
mov
push
je
retf
push
cmps
push
jo
push
push
fadd
inc
pop
movs
push
inc
pop
push
push
mov
cmps
xor
xor
push
mov
add
ins
xor
sbb
adc
dec
jns
or
shr
and
test
cmp
push
in
add
outs
fs
or
inc
mov
and
dec
and
mov
pop
dec
sub
xor
jno
and
push
sahf
retf
cmp
test
and
push
es
aad
inc
jl
retf
mov
jno
inc
cmp
add
mov
xor
inc
sub
xor
add
jno
xor
mov
cmp
adc
inc
sbb
ror
arpl
rcl
sub
dec
sub
push
push
bound
push
lods
xchg
ror
fdiv
inc
xchg
call
sbb
adc
ret
inc
or
retf
push
hlt
mov
xor
fadd
adc
ss
adc
push
(bad)
ins
loopne
push
or
dec
data16
rcl
push
hlt
push
bound
inc
ins
push
or
pop
lods
jb
mov
push
dec
adc
xor
jb
cmps
push
adc
push
rol
and
xchg
idiv
(bad)
xor
aas
inc
mov
pop
dec
cmp
addr16
push
xchg
xor
jo
or
xor
retf
or
(bad)
dec
dec
imul
fisub
adc
dec
push
cmp
in
sub
dec
gs
mov
adc
mov
push
or
nop
xor
inc
(bad)
ins
ficom
jbe
jo
out
xor
and
pusha
jmp
xor
inc
sub
pusha
mov
pop
rcl
inc
or
xor
jp
mov
and
and
add
xor
push
push
shl
mov
rol
and
inc
fisubr
pusha
mov
push
push
scas
push
mov
mov
cmp
push
mov
dec
jo
shl
xor
aam
and
or
add
test
push
add
inc
xchg
shl
ins
and
inc
adc
or
inc
lods
dec
ss
test
cmp
pusha
sub
mov
mov
push
ds
mov
enter
mov
jb
popa
pop
mov
imul
dec
xor
push
je
jl
inc
loope
adc
inc
and
dec
sbb
cmp
jo
pop
int3
jns
and
bound
pusha
stos
and
mov
lock
push
push
add
or
movs
imul
test
aad
push
js
pop
call
stos
or
test
mov
jmp
retf
push
cli
arpl
mov
add
or
jo
dec
popa
inc
fs
pop
ins
mov
loop
dec
jo
ins
or
push
adc
je
or
sbb
ins
shr
cdq
adc
mov
sbb
mov
imul
sub
sub
or
adc
nop
call
mov
mov
mov
test
aaa
imul
jae
ror
sbb
or
fs
outs
push
dec
dec
jb
inc
pop
push
mov
inc
dec
mov
call
ret
dec
sub
xor
and
and
inc
mov
jo
dec
or
dec
jb
fadd
sub
jp
in
jne
inc
add
in
repnz
push
xor
adc
jbe
sub
adc
add
outs
mov
inc
and
jp
xchg
mov
inc
mov
inc
push
mov
mov
shl
popa
mov
mov
dec
cmp
adc
cwde
mov
ret
push
xor
push
push
ret
in
mov
ss
stos
gs
rol
add
je
or
jo
push
sub
add
sub
or
mov
bound
sub
push
movs
popa
push
pop
aaa
outs
push
call
jge
push
ss
xor
or
call
xor
test
aaa
push
jno
push
xchg
ficom
cmps
push
dec
push
jp
xchg
and
mov
inc
loop
add
push
jb
add
mov
push
retf
sub
sub
mov
ss
arpl
mov
outs
add
and
inc
dec
cmp
adc
mov
push
mov
js
push
das
cmp
xor
jno
test
push
ss
clc
jb
push
sbb
pop
test
mov
pop
xor
dec
xor
xor
ja
dec
and
add
push
xchg
inc
inc
dec
push
fiadd
adc
push
aaa
mov
adc
jo
les
dec
sbb
xchg
ja
popa
stos
cmp
lock
jp
push
in
arpl
dec
push
dec
push
xor
movs
xchg
adc
dec
adc
add
test
add
push
mov
dec
xor
or
add
push
push
fdiv
sahf
add
xchg
xchg
push
je
xchg
dec
adc
mov
push
dec
inc
pop
nop
inc
or
sahf
inc
push
gs
inc
and
test
sbb
xor
dec
xchg
mov
push
xchg
test
pop
jl
adc
or
or
xchg
inc
adc
dec
push
add
cli
cmp
into
xor
jo
and
rol
nop
nop
test
add
fwait
add
inc
pop
push
ret
cs
(bad)
or
push
push
mov
mov
pop
dec
retf
ja
mov
dec
sbb
sbb
es
inc
movs
dec
popa
jae
dec
inc
push
aam
es
xchg
jb
dec
push
pop
mov
mov
mov
pushf
test
xchg
inc
inc
push
or
jne
pop
jo
inc
or
inc
add
lock
jo
push
dec
mov
mov
jno
inc
inc
add
push
inc
sub
popa
adc
test
shl
inc
fcomp
adc
push
dec
adc
data16
sub
and
ja
jb
es
inc
xor
ror
jbe
jl
movs
outs
retf
dec
and
call
mov
(bad)
(bad)
inc
xor
fcomp
data16
mov
or
inc
dec
jo
pop
jo
loope
push
cs
inc
dec
int3
xchg
(bad)
ins
and
jns
mov
or
adc
gs
fadd
push
push
jo
icebp
retf
jae
push
aaa
dec
add
sbb
dec
xor
xor
jns
mov
dec
inc
mov
jo
sub
jae
fs
(bad)
adc
inc
push
fmul
inc
dec
push
or
mov
add
adc
adc
call
test
mov
dec
data16
lds
sbb
jne
pop
and
xor
movs
push
xor
adc
jno
mov
sbb
adc
sub
xchg
sahf
outs
jae
nop
cmps
jbe
or
push
xor
push
dec
popa
(bad)
loop
out
cmp
adc
or
lods
push
imul
push
cmps
jp
jl
sbb
push
push
cmp
movs
bound
ja
mov
sub
push
dec
jno
xor
or
inc
sub
sbb
test
add
popa
push
into
jae
or
arpl
pop
cmp
sbb
dec
test
arpl
adc
int3
dec
dec
aad
mov
or
push
push
pop
or
add
dec
shr
inc
ss
adc
imul
mov
sub
dec
sbb
pop
sbb
jmp
add
xchg
jmp
push
sar
aad
mov
jne
fcmovu
or
pop
addr16
cwde
xchg
mov
and
jo
pusha
push
dec
push
xchg
or
inc
and
out
pop
dec
jno
push
inc
pusha
sub
(bad)
sub
cmp
movs
add
call
push
adc
add
pop
push
cwde
pop
xor
xor
push
and
push
pop
daa
sub
pop
(bad)
shl
mov
dec
adc
fs
jb
adc
ja
mov
stos
push
xor
push
lods
jb
pusha
adc
xchg
push
sub
data16
mov
(bad)
mov
cmps
push
or
scas
xor
sub
pop
call
mov
and
sub
mov
add
je
or
dec
fdiv
loopne
push
hlt
inc
xor
add
je
rcl
sub
lods
push
pusha
ss
test
test
sub
pop
sbb
cmp
adc
add
or
dec
leave
repnz
arpl
data16
lock
or
push
add
pop
mov
push
mov
push
arpl
xchg
adc
cmp
inc
mov
popa
jbe
nop
and
inc
cmp
push
aad
bound
dec
sbb
cmp
fsub
adc
sbb
mov
push
ins
imul
push
cwde
inc
or
mov
add
push
or
mov
push
mov
aad
imul
cwde
jo
fs
ins
(bad)
movs
and
or
xor
add
push
xchg
fisubr
xor
loop
cmp
shl
xchg
mov
add
test
xchg
push
loop
jns
and
add
jne
mov
fsub
scas
jns
sub
fwait
in
jb
push
push
push
dec
push
outs
sbb
xchg
adc
inc
cmp
sbb
sbb
fdiv
pop
ins
test
adc
inc
test
gs
push
pop
xor
adc
push
fsubr
ss
xor
jne
xor
setne
push
mov
test
xor
js
add
ds
xor
jb
and
dec
jbe
and
xor
or
jl
cs
sub
mov
cmp
stos
mov
pop
sbb
rcl
mov
inc
dec
push
call
xchg
test
das
xchg
ret
pop
outs
ret
mov
imul
inc
or
xor
or
add
pop
data16
inc
xor
aaa
in
rol
cmp
push
mov
jne
push
mov
js
shl
mov
add
or
fsub
pop
jl
xor
dec
stos
scas
outs
add
test
mov
add
nop
push
outs
loopne
mov
xor
inc
mov
inc
adc
outs
ds
sub
push
sbb
mov
push
add
sub
lock
xor
and
es
push
scas
push
cdq
xor
dec
add
or
mov
inc
imul
dec
dec
jne
mov
je
ins
and
mov
mov
inc
stos
loop
mov
jns
mov
push
addr16
xor
and
or
or
fst
dec
ds
push
adc
sbb
sbb
(bad)
rol
je
add
inc
sub
dec
(bad)
mov
mov
test
les
add
dec
xchg
pushf
pop
and
inc
xor
or
xchg
xor
push
push
sbb
mov
pop
add
mov
xor
sub
dec
mov
add
inc
fidiv
xor
adc
xor
mov
outs
mov
dec
xor
jo
es
jmp
pushf
loop
xchg
xchg
outs
push
sub
add
je
test
jo
dec
mov
and
inc
sub
inc
dec
enter
pop
pop
ins
fs
and
push
mov
jbe
and
sub
adc
loop
jp
pop
or
fmul
lods
movs
push
test
je
adc
add
pop
push
adc
mov
hlt
jb
inc
inc
popf
xchg
inc
out
fidiv
or
sub
push
sub
dec
stos
inc
nop
add
ins
inc
and
dec
pop
inc
dec
jae
enter
add
outs
retf
push
add
aam
bound
fdiv
test
mov
inc
push
and
in
add
inc
push
jmp
bound
cmp
icebp
outs
dec
push
bound
adc
xor
jb
jo
sub
and
push
arpl
push
sbb
pop
fisub
popa
cmp
push
push
pushf
imul
bound
aaa
je
fisttp
je
push
dec
inc
dec
repnz
clc
add
or
add
aad
inc
mov
dec
sub
add
loopne
or
les
and
sbb
mov
xchg
(bad)
sub
into
mov
stos
pop
push
xor
mov
inc
add
xchg
push
js
test
dec
ret
push
inc
rcl
adc
hlt
xchg
xor
in
nop
xor
loopne
int3
push
dec
je
loop
pop
adc
adc
or
or
sub
inc
stos
cmp
enter
add
aaa
dec
pusha
xor
xchg
add
adc
inc
popa
push
mov
mov
aaa
sub
imul
mov
ret
ins
push
push
push
xchg
xor
fidiv
push
cmp
or
fwait
adc
es
sbb
inc
and
push
inc
pop
sbb
xor
mov
xchg
push
ret
jb
xchg
add
cmp
jp
xor
jae
pop
aad
dec
mov
ss
loop
jp
sbb
xor
int3
sbb
inc
xor
test
movs
or
jo
shl
sbb
push
xor
mov
call
add
add
push
movs
xor
movs
add
adc
add
stos
ret
sub
loop
into
imul
jo
inc
jb
test
clc
ret
push
rol
mov
push
adc
adc
add
data16
or
nop
test
push
imul
mov
retf
xor
cmp
jns
and
mov
mov
xchg
pusha
mov
test
or
mov
dec
push
ret
hlt
sub
add
inc
popa
push
fs
push
inc
add
and
add
sbb
inc
jmp
and
inc
cld
mov
dec
test
stos
push
scas
es
mov
xor
fwait
lea
dec
push
test
add
push
xor
and
mov
dec
dec
add
dec
inc
movs
ja
sbb
test
cmp
imul
cmp
loopne
sbb
xor
lahf
or
inc
add
enter
push
lods
inc
outs
dec
bound
xchg
sub
shl
shr
jno
sbb
mov
inc
push
push
push
dec
test
test
mov
mov
mov
xor
xor
imul
and
sbb
ret
test
cmp
dec
or
ins
cmp
push
mov
adc
and
xchg
and
enter
movs
or
stos
add
xor
sbb
dec
in
add
adc
xchg
xor
jb
adc
test
cli
push
adc
sub
outs
sbb
stos
inc
ror
es
pop
inc
pushf
sbb
(bad)
inc
rol
sbb
xor
add
into
push
mov
pop
sub
inc
je
call
sub
pusha
inc
inc
xchg
mov
mov
lods
mov
ins
xchg
adc
add
rcl
imul
shr
retf
ins
stos
pop
add
or
(bad)
mov
test
mov
xchg
loope
sbb
cli
add
stos
ds
push
fnstenv
push
sub
cmp
sbb
push
xor
cmp
sub
or
ret
add
inc
inc
or
or
inc
es
sub
and
stos
sbb
mov
pop
push
fs
add
js
ins
lock
or
icebp
or
dec
cmp
inc
js
xor
mov
xor
movs
movs
xor
pop
inc
test
cmp
nop
push
aaa
xchg
xchg
and
xor
xor
ss
push
mov
or
dec
sahf
add
test
addr16
fisubr
push
ja
inc
cmp
pusha
test
call
inc
dec
mov
inc
inc
adc
fadd
sbb
or
and
xor
push
sub
add
push
push
bound
enter
adc
and
cmp
mov
dec
jp
in
push
(bad)
adc
loop
inc
retf
xor
push
and
mov
push
imul
cmp
inc
adc
push
test
sub
mov
jns
add
push
ins
ror
xchg
add
inc
pusha
inc
jno
pop
push
push
add
outs
add
enter
or
pushf
xchg
adc
stos
into
xor
push
ins
adc
pop
push
inc
les
test
stos
sahf
pusha
xor
in
fs
push
test
cmp
stos
adc
test
mov
nop
add
or
shl
dec
xor
mov
ins
je
xor
pop
in
jl
sub
or
cld
ss
adc
and
and
jo
mov
adc
or
test
rol
adc
xchg
mov
test
test
xchg
mov
or
push
mov
inc
shr
mov
add
xor
add
lods
clc
inc
pushf
pop
jne
and
and
mov
in
add
fdivr
sub
dec
push
add
fiadd
mov
xchg
rcr
clc
shl
cmp
push
gs
dec
inc
retf
add
enter
push
outs
xor
les
es
outs
add
aaa
cmp
and
xor
(bad)
xor
mov
xchg
fnstenv
nop
js
loopne
mov
add
push
imul
or
inc
movs
lock
or
push
or
jbe
cld
dec
mov
sub
add
ss
sbb
adc
push
adc
cmps
xor
es
jo
push
dec
or
cmp
dec
dec
mov
pop
inc
cwde
sub
ficomp
xchg
push
fadd
xor
sbb
imul
pop
add
push
adc
xor
je
test
inc
jbe
cmp
ss
add
mov
fimul
push
push
jb
push
shl
xor
mov
mov
shr
es
adc
shr
(bad)
dec
dec
jp
mov
lods
push
add
add
je
push
sbb
push
push
mov
or
mov
rcr
test
mov
and
test
and
xor
and
test
mov
xor
jbe
mov
inc
or
js
or
inc
clc
sub
mov
inc
mov
mov
inc
loope
ret
or
sbb
ret
cmp
push
inc
or
inc
test
outs
int
rol
or
nop
push
push
xor
inc
fcom
int3
jmp
cmp
add
dec
dec
cld
(bad)
push
sbb
inc
jns
into
(bad)
sub
mov
inc
push
jmp
test
mov
cwde
sbb
fadd
xchg
inc
inc
sahf
mov
push
mov
inc
dec
sbb
outs
rcl
push
and
pushw
and
and
movs
jp
imul
jo
fs
retf
fs
xchg
bound
test
inc
bound
or
enter
push
mov
pop
cmp
push
inc
inc
add
push
mov
fmul
popa
push
arpl
push
js
push
sahf
fs
jne
in
jb
mov
mov
adc
pop
push
cmp
jmp
les
or
cli
jne
cmp
xor
jbe
pop
aad
idiv
and
mov
mov
xor
pop
or
ss
bound
pop
xor
rol
mov
jno
sbb
inc
push
push
push
(bad)
push
pusha
add
and
add
mov
add
ins
(bad)
mov
push
xor
add
repnz
ins
push
cmp
shl
jmp
inc
dec
out
dec
outs
ss
sbb
stos
push
add
inc
inc
and
and
pusha
aaa
fs
dec
sbb
fs
push
jbe
xor
xchg
inc
pop
ret
sbb
fimul
ins
mov
add
data16
dec
push
push
adc
pop
or
sub
sub
repnz
adc
push
enter
cmps
add
retf
lods
in
in
xor
scas
xor
pop
adc
push
lock
dec
mov
jbe
inc
pusha
inc
bound
jo
sub
(bad)
push
nop
retf
imul
adc
mov
sbb
mov
movs
or
mov
ja
adc
test
xchg
pop
shl
jo
mov
sbb
lods
push
xchg
inc
(bad)
push
imul
push
mov
pop
(bad)
leave
clc
ss
inc
or
mov
je
dec
push
add
jae
add
clc
xor
push
add
inc
mov
dec
inc
dec
inc
adc
adc
sub
mov
mov
adc
cmp
inc
or
or
mov
and
sbb
mov
test
push
inc
jb
outs
(bad)
fsubr
adc
jb
arpl
pop
fs
cmp
ret
adc
inc
cdq
dec
push
push
ins
inc
add
push
jae
(bad)
ins
add
inc
mov
les
xchg
in
push
pop
jno
or
xchg
xchg
mov
xor
ins
cmp
ins
fisttp
xor
dec
push
sbb
shr
rcl
dec
mov
dec
int3
inc
in
popa
xor
dec
call
data16
sbb
inc
inc
or
cmp
shl
xchg
sub
(bad)
dec
add
xchg
inc
adc
mov
outs
out
dec
rol
fidivr
test
push
es
dec
cmp
dec
push
aam
jmp
inc
fs
push
push
xchg
je
popa
xchg
mov
dec
xor
add
imul
push
outs
sbb
je
xor
aam
sbb
push
cmp
dec
push
inc
dec
ins
jno
popa
sub
push
cmps
movs
es
inc
dec
dec
jo
data16
mov
add
push
sbb
mov
leave
nop
retf
mov
add
xchg
imul
pusha
sub
inc
sbb
je
aaa
lods
mov
xchg
cli
imul
js
ficom
aam
xchg
sar
xor
xchg
push
and
sub
xor
mov
cmp
mov
jmp
fs
xchg
and
push
imul
push
pusha
push
test
or
movs
les
dec
xchg
dec
xor
inc
inc
(bad)
pop
data16
push
pop
in
inc
int3
jp
add
push
jb
add
inc
cmp
dec
add
shl
xor
aaa
sub
dec
inc
je
or
clc
je
sbb
ret
es
into
outs
pusha
pop
test
nop
adc
pop
add
imul
push
shl
and
sub
mov
jb
ret
push
xor
add
mov
dec
sub
mov
xor
add
xor
shl
bound
inc
push
mov
inc
mov
push
inc
imul
gs
and
fisubr
retf
popa
jne
ja
jp
or
inc
push
adc
ss
inc
stos
add
mov
dec
and
cli
and
mov
and
xor
inc
inc
mov
fmul
inc
push
add
nop
rcl
cmp
or
xchg
loope
or
inc
les
outs
inc
and
inc
sbb
or
ss
outs
dec
test
aam
cmp
jp
and
es
cs
addr16
imul
ror
sahf
add
push
bound
sub
or
xor
or
sub
add
sbb
dec
pop
fs
add
int3
and
out
push
fsubr
pop
xchg
sar
enter
bound
xchg
add
nop
mov
xchg
mov
cmp
int3
je
mov
mov
add
dec
aaa
cwde
xchg
inc
inc
dec
and
out
push
jae
jb
push
js
mov
add
gs
repnz
push
xor
cmp
xchg
or
inc
and
ret
push
fcom
rcl
lods
outs
jp
xchg
jo
enter
mov
pushf
inc
and
sub
dec
jecxz
ss
pushf
ins
xor
aad
cld
dec
mov
mov
fisub
inc
dec
push
push
push
xchg
fadd
xor
or
ins
dec
dec
mov
push
pop
dec
jle
push
and
push
adc
push
inc
and
mov
sbb
int3
nop
ins
xchg
jl
aaa
jp
xchg
inc
pop
pusha
xchg
push
outs
inc
xor
pusha
xchg
ret
jl
inc
and
and
jp
push
add
es
dec
or
aaa
gs
and
test
mov
adc
cs
cli
(bad)
push
imul
dec
dec
pusha
dec
dec
mov
inc
imul
push
arpl
and
loopne
pop
rcr
pop
pusha
adc
mov
popa
mov
push
dec
mov
inc
adc
jns
sub
cs
and
jb
or
jae
out
bound
add
xor
dec
push
add
xchg
mov
jp
rcr
ret
or
jb
jo
add
mov
bound
inc
test
jmp
pop
pop
jo
xor
dec
and
(bad)
mov
test
pop
nop
test
sbb
inc
dec
or
push
add
sub
xor
daa
inc
mov
mov
sbb
mov
jo
adc
int3
and
mov
adc
xor
cmp
retf
pop
sbb
push
popa
aaa
xor
push
or
pop
pop
sub
inc
jmp
jb
or
add
and
adc
xchg
push
xchg
push
xchg
mov
mov
les
mov
inc
or
and
jmp
mov
or
dec
xor
jo
sbb
lods
mov
fidivr
adc
or
cmp
and
inc
xor
je
outs
dec
push
inc
sbb
test
test
push
push
xor
cwde
xor
js
add
outs
dec
and
xor
bound
mov
dec
outs
les
jns
mov
dec
sbb
bound
sub
stos
fs
adc
leave
cmc
cdq
adc
ss
int
xchg
ret
fiadd
test
ret
inc
retf
mov
sbb
inc
fidiv
fmul
aaa
adc
sub
pop
imul
push
cwde
sub
or
xor
push
xor
js
ss
push
and
enter
inc
ss
(bad)
pop
jae
lock
(bad)
sbb
inc
cmps
xor
in
jb
add
pop
xor
add
xor
dec
sbb
pop
aam
adc
xor
in
outs
push
cwde
push
mov
jbe
jo
xor
add
shl
add
pop
lds
xchg
aaa
inc
and
rol
ss
fimul
dec
inc
dec
cmp
fisub
cmp
test
imul
inc
add
fwait
mov
sbb
mov
cli
movs
add
xor
or
inc
add
es
inc
push
jmp
ss
push
adc
jo
add
dec
xchg
and
imul
out
and
or
mov
sbb
dec
out
adc
push
pop
dec
mov
push
dec
leave
test
sub
xor
outs
sbb
sbb
xor
add
ins
or
into
bound
inc
push
push
jo
call
jp
sbb
ret
sub
fiadd
push
imul
mov
inc
or
dec
adc
ins
cwde
sub
dec
lock
mov
pop
(bad)
cmps
and
popa
or
push
inc
xor
mov
push
fs
jno
sub
mov
dec
inc
push
mov
in
fld
xor
jb
adc
mov
or
xchg
inc
inc
mov
push
mov
arpl
ss
jo
xor
xor
adc
and
call
sbb
mov
ror
jg
dec
adc
dec
mov
xor
sub
push
mov
mov
repnz
sbb
and
push
je
jne
mov
pop
add
cld
out
mov
enter
leave
xchg
ret
xchg
stos
into
outs
fdivr
fld
sbb
jl
cld
dec
inc
call
jne
dec
jo
pop
dec
nop
xor
scas
cmps
mov
ins
mov
inc
rol
or
je
mov
xor
test
or
and
mov
xchg
inc
and
sbb
push
jo
mov
ins
inc
loopne
lock
and
mov
inc
inc
dec
push
mov
mov
pop
lods
xor
sbb
ins
dec
add
mov
cmp
dec
mov
lea
pop
out
xor
dec
pop
pusha
dec
xor
movs
add
sub
sub
cmp
jmp
and
jo
add
cwde
nop
rcr
inc
gs
add
dec
dec
sbb
enter
push
movs
(bad)
fmul
int
inc
ss
je
ins
or
jge
inc
aaa
outs
jns
jno
dec
ss
mov
xor
xor
push
xor
popa
push
sbb
int
inc
pop
and
int3
adc
jne
arpl
sub
movs
mov
dec
fs
or
adc
add
jb
test
(bad)
push
and
pop
add
addr16
shl
cwde
mov
add
add
push
sbb
xor
xor
mov
or
push
jo
push
pop
sub
push
test
push
imul
dec
inc
dec
and
int3
dec
cld
push
xor
arpl
inc
addr16
adc
inc
dec
sbb
lea
add
outs
push
push
cmp
push
cmp
jbe
gs
(bad)
arpl
lods
push
xor
xor
xchg
add
xor
cmp
cmp
les
lock
test
add
cs
push
loope
sbb
xor
dec
outs
and
jo
xor
dec
cmp
push
pusha
add
cli
add
pop
and
inc
dec
dec
mov
pop
adc
dec
jb
not
adc
push
add
push
inc
and
add
add
xchg
or
sub
cmp
cmc
push
push
xor
mov
retf
outs
xor
xor
jb
push
aaa
and
nop
adc
arpl
dec
inc
and
test
sub
jp
inc
add
add
popa
or
adc
push
sbb
jo
in
or
xor
test
aam
xor
rcl
and
rcl
or
movs
adc
and
movs
mov
or
rcr
inc
cwde
sub
sbb
add
(bad)
cmp
dec
mov
dec
push
jb
dec
inc
and
xor
xchg
push
cwde
or
adc
data16
add
stos
dec
ret
inc
inc
push
mov
lods
xor
pop
and
movs
ss
pop
sbb
test
or
pop
sub
outs
lea
aaa
add
inc
bound
cld
dec
fcomp
jno
jns
ret
sbb
mov
sbb
jmp
pop
push
xor
push
mov
fs
xchg
or
lods
mov
movs
mov
outs
mov
add
mov
dec
xor
inc
and
adc
test
xchg
push
inc
rol
sbb
rcl
rol
retf
jbe
pop
inc
add
xchg
rcl
fwait
test
sub
add
xchg
jb
and
pop
loopne
push
push
xchg
fld
xor
je
in
es
dec
jb
scas
dec
inc
jp
and
dec
rol
push
push
fdivr
and
jo
mov
push
adc
popa
xor
xchg
jo
jbe
or
add
dec
mov
jbe
xor
push
cmp
and
push
ins
push
jno
mov
or
add
dec
inc
in
adc
mov
inc
cmp
cwde
mov
sub
adc
or
add
jl
movs
cs
jl
inc
jae
jae
ret
jbe
push
xor
sbb
or
nop
cli
arpl
cdq
test
jbe
inc
xor
dec
mov
xchg
xor
xchg
push
add
adc
cs
pop
push
sub
pusha
mov
jb
push
add
inc
mov
xor
dec
fs
cdq
and
push
inc
daa
fs
ficom
adc
hlt
sub
js
push
or
adc
inc
dec
add
or
loopne
stos
fimul
add
xor
es
inc
pop
adc
fs
sbb
xor
dec
imul
or
or
adc
jne
adc
int3
dec
push
or
pusha
and
push
cmp
sahf
inc
and
add
or
ficom
jo
daa
add
add
cmp
lods
jb
jp
mov
inc
js
ss
jo
or
xchg
inc
push
dec
test
shl
push
push
adc
inc
mov
stos
ret
sub
ins
xor
fs
or
pusha
sub
aaa
dec
ds
addr16
adc
mov
jbe
xchg
retf
or
inc
das
mov
je
dec
ja
ja
sbb
sbb
sbb
pop
inc
sbb
push
clc
add
cdq
xchg
mov
add
es
cwde
fadd
cmp
jle
cmp
ret
push
push
and
push
pop
xchg
cdq
test
data16
jne
push
adc
push
sbb
push
mov
mov
sbb
pusha
mov
push
dec
jo
arpl
cmp
or
fs
popa
xchg
adc
adc
adc
data16
pop
push
jns
sub
das
push
xor
cmp
ss
adc
mov
outs
test
fadd
dec
je
fadd
outs
mov
lods
xchg
push
cmp
inc
xor
test
push
ss
mov
js
cwde
add
cwde
ror
push
ins
cwde
add
push
inc
push
push
push
add
ins
ins
jb
mov
loopne
dec
in
add
inc
add
add
jl
jo
es
mov
loop
dec
or
fs
or
pushf
ins
stos
xchg
rcr
push
fdiv
popa
push
sub
mov
and
retf
pusha
and
mov
add
out
gs
sub
mov
push
jo
cwde
jno
and
dec
jo
adc
xor
cwde
bound
mov
cmp
rcl
xor
inc
push
push
or
adc
adc
xor
inc
dec
mov
cmp
pop
mov
dec
sub
or
sub
imul
push
loopne
push
xor
cld
push
je
jbe
inc
movs
adc
inc
dec
adc
es
test
push
add
cmp
(bad)
bound
push
dec
jbe
xchg
dec
ss
or
and
pusha
push
gs
and
in
mov
add
adc
loop
jbe
cs
test
test
push
out
retf
dec
cdq
test
xchg
test
add
jno
inc
ds
push
inc
add
pusha
inc
pop
sub
xor
add
loope
xchg
imul
and
inc
stos
lods
pop
shl
mov
push
mov
mov
dec
pop
fisubr
inc
xor
dec
movs
and
inc
jl
mov
mov
and
shl
mov
lods
outs
sbb
pusha
xchg
and
imul
ja
xor
jae
movs
xor
mov
dec
retf
jl
call
in
vrsqrtps
rcl
inc
stos
retf
xor
inc
inc
push
add
bound
xor
gs
outs
adc
scas
fsub
push
adc
int3
jo
sub
mov
(bad)
dec
shr
mov
adc
mov
sub
sub
sub
js
jns
push
xchg
xor
dec
popa
sub
clc
or
mov
dec
sub
xchg
cmp
push
es
mov
ror
inc
(bad)
gs
rcr
mov
add
add
sub
xchg
add
cmp
in
pop
xor
sub
mov
outs
jp
adc
data16
adc
mov
dec
pop
inc
dec
push
mov
jle
add
push
mov
js
loope
loopne
enter
inc
add
and
stos
inc
inc
or
pop
sub
je
add
cmp
mov
inc
add
or
mov
add
adc
dec
shl
xchg
pusha
test
inc
mov
cwde
dec
or
pop
clc
adc
or
ins
sub
and
push
mov
xor
je
push
cs
data16
shl
push
inc
pusha
or
sub
adc
dec
inc
jmp
inc
ja
dec
gs
push
mov
dec
push
test
call
js
outs
call
cwde
inc
xor
sbb
pop
sub
push
or
dec
gs
sbb
xor
or
adc
dec
pop
push
pop
push
push
ins
test
dec
or
or
inc
mov
inc
movs
xor
ins
jp
xor
outs
loopne
imul
mov
pop
inc
je
es
inc
pop
cs
pusha
jge
test
clc
ss
cmp
adc
or
push
dec
push
pop
and
sub
dec
dec
ret
pop
and
cmp
inc
test
add
sub
xchg
shl
or
push
outs
inc
xor
mov
jae
push
retf
ret
push
xchg
pop
inc
pop
pop
fidiv
xchg
push
mov
and
xchg
aam
shl
ins
or
and
ficom
inc
xchg
mov
stos
sahf
dec
bnd
call
push
jno
je
or
jp
mov
dec
ret
jbe
and
mov
loop
xor
push
inc
(bad)
data16
pop
jle
nop
jbe
inc
xchg
ins
add
(bad)
outs
ss
and
mov
inc
sub
cmp
in
ret
dec
inc
gs
ror
or
test
cmp
adc
call
and
cmp
retf
nop
enter
and
mov
jp
cmp
cmp
xor
add
add
mov
jns
pop
inc
add
mov
or
push
push
pusha
nop
pop
pop
or
push
or
jp
dec
dec
jae
dec
ins
sbb
bound
add
sub
sbb
mov
xchg
shl
ins
inc
les
push
retf
sub
jo
push
imul
and
imul
shl
mov
je
addr16
push
dec
xor
ins
xchg
push
movs
adc
cs
push
mov
adc
mov
sbb
inc
dec
jns
retf
dec
pushf
and
test
call
or
inc
or
sbb
push
or
stos
inc
imul
xor
pusha
pop
xor
ror
outs
xor
inc
dec
out
cmp
outs
dec
ins
or
pop
push
push
or
dec
shl
lock
push
fimul
push
xor
inc
mov
xchg
sahf
retf
sbb
inc
inc
add
add
mov
xor
inc
adc
cmps
dec
or
jb
cmp
inc
add
outs
sub
and
or
xchg
fimul
addr16
push
jbe
push
push
imul
and
push
sbb
adc
cmp
push
mov
shr
out
jne
xor
test
pop
and
xor
jl
adc
nop
mov
cmp
test
pop
xor
dec
inc
or
lods
dec
bound
dec
inc
jl
aaa
pop
stos
xchg
into
sbb
inc
xor
inc
outs
add
nop
add
or
cs
aad
loopne
inc
pop
and
push
clc
fidiv
pop
inc
dec
xor
fild
inc
lods
inc
mov
and
gs
mov
imul
mov
hlt
loopne
pusha
dec
pop
xor
es
js
dec
out
jne
push
adc
mov
adc
fsub
outs
sbb
mov
adc
popa
push
add
jbe
mov
xor
mov
push
aam
movs
adc
sbb
imul
movs
mov
ds
mov
ror
fs
dec
or
mov
cmp
imul
mov
in
jp
loopne
mov
addr16
add
jp
push
push
pop
cmp
pusha
add
imul
inc
mov
jb
hlt
jne
adc
aad
shl
push
imul
add
xchg
inc
pop
inc
inc
fisttp
dec
popa
jp
out
xchg
movs
cmp
cmps
add
push
arpl
int3
dec
jo
and
and
add
cmp
int3
dec
inc
les
or
push
dec
xor
pop
imul
push
push
mov
sbb
xchg
push
xlat
push
inc
popa
cli
sbb
mov
push
adc
cld
push
push
pop
inc
sbb
push
jp
imul
jb
pop
inc
add
xor
dec
ins
xor
mov
push
mov
loop
sub
scas
cwde
push
ret
mov
push
rcl
dec
ins
push
add
sub
mov
xor
inc
into
ja
adc
loope
mov
ss
sub
and
popa
ror
inc
neg
inc
js
push
or
or
pop
jno
adc
xor
add
or
lods
dec
add
sub
popa
retf
xor
pop
push
ins
ds
cmp
sar
xor
push
imul
or
dec
or
scas
adc
mov
inc
mov
loopne
adc
or
and
stos
rol
add
cmps
pusha
gs
or
sub
fisubr
cmp
push
popa
inc
push
push
xchg
je
dec
inc
push
sub
add
mov
and
dec
div
test
inc
adc
lock
ins
jb
loop
adc
outs
jp
arpl
xchg
fisubr
xor
scas
ss
push
shl
retf
sbb
div
inc
mov
loopne
dec
push
or
imul
(bad)
jo
call
into
shl
jmp
push
push
call
je
(bad)
fsubr
inc
adc
push
jae
mov
pushf
push
es
dec
cmp
sbb
sbb
(bad)
sub
ja
jo
cmp
enter
pop
sbb
test
cld
mov
mov
je
dec
xor
xor
mov
retf
outs
pop
dec
mov
arpl
inc
xchg
aam
imul
aaa
ins
fsubr
mov
jo
adc
cmp
push
ins
frstor
dec
dec
inc
add
mov
les
test
mov
jl
dec
xor
mov
ins
xchg
mov
sahf
fdiv
loop
ins
push
int
adc
inc
jo
(bad)
je
mov
or
cmps
pop
aam
inc
mov
xor
fidiv
or
adc
dec
retf
ins
dec
mov
or
add
mov
sub
adc
or
jb
outs
dec
leave
and
stos
clc
pop
jae
cdq
sub
hlt
idiv
sub
add
mov
jo
push
aaa
xor
push
ja
xor
mov
xor
xchg
inc
rcr
pop
and
fs
xor
cld
jb
dec
test
push
fs
mov
jo
stos
test
shr
add
ret
or
aaa
sahf
push
and
sub
test
push
sub
and
stos
lds
cwde
dec
jbe
imul
mov
add
and
inc
xor
jne
inc
push
pushf
dec
popa
xor
cmp
jns
jno
popa
add
adc
jp
mov
add
dec
into
pop
in
mov
xor
retf
adc
jb
(bad)
xor
lea
test
adc
aad
dec
mov
xor
clc
xlat
sub
push
mov
cmp
inc
mov
mov
mov
dec
out
call
loope
mov
lods
stos
push
xchg
outs
inc
push
(bad)
aad
dec
cmp
dec
xor
cmp
and
test
rcl
push
in
add
inc
cwde
fsub
add
lods
cmp
xor
int3
fcom
int3
test
test
aam
in
dec
dec
push
mov
test
push
sar
xor
into
out
sbb
add
jbe
sub
push
jo
push
cmp
or
and
or
fisub
inc
adc
mov
xchg
cdq
fadd
inc
mov
add
inc
push
dec
mov
in
pusha
inc
add
shl
jb
shl
sar
push
mov
and
out
dec
xchg
mov
sbb
mov
cwde
dec
into
or
push
ds
dec
bound
pop
mov
push
and
add
arpl
cwde
mov
cmp
dec
stos
inc
test
lods
mov
push
or
add
scas
addr16
inc
sub
and
xchg
xchg
mov
repnz
jne
jo
inc
push
inc
push
nop
push
aam
mov
test
cmp
loopne
test
ss
inc
xor
adc
jb
mov
ins
add
mov
cmp
shr
shr
cs
push
loopne
adc
nop
or
pop
nop
mov
dec
test
dec
dec
adc
push
push
xchg
push
mov
push
push
ins
add
sub
adc
imul
adc
jp
bound
fimul
add
xor
mov
xlat
imul
test
ins
xor
out
push
dec
jp
push
dec
js
inc
popf
les
call
add
popa
stos
js
call
inc
cmp
ror
dec
push
inc
dec
(bad)
nop
push
push
add
inc
or
jbe
jge
mov
push
ins
push
sbb
sub
movs
test
cmp
jp
mov
sbb
bound
xor
mov
jo
in
mov
mov
int3
cmp
and
inc
pop
scas
imul
outs
mov
and
push
xchg
dec
add
pop
xor
or
mov
push
leave
jle
mov
xor
xor
and
leave
mov
ss
jo
cmp
cmps
sbb
fucomp
ins
xchg
pop
dec
inc
inc
inc
xchg
mov
cmp
push
idiv
outs
dec
xor
addr16
xchg
push
sub
sahf
mov
lock
(bad)
jne
sub
mov
jns
test
xchg
rcr
adc
sub
mov
mov
call
add
cs
push
xor
inc
sbb
imul
dec
fadd
pusha
cwde
mov
movs
sub
sub
ss
test
add
push
ins
je
stos
and
xor
outs
data16
dec
push
push
call
add
mov
or
call
add
je
cmps
push
or
push
mov
dec
fbld
xor
inc
ret
dec
dec
bound
shl
test
es
push
mov
aam
bound
dec
or
ss
outs
aam
dec
sub
push
push
int3
push
xchg
cmp
int3
inc
xchg
sub
jbe
inc
inc
xchg
inc
push
fimul
xor
in
jmp
inc
repnz
adc
cmps
xchg
push
and
ins
push
jb
xor
sar
inc
jo
add
pop
push
mov
test
cmp
xor
loopne
pop
mov
jbe
xchg
add
enter
popa
fadd
clc
push
stos
xor
pushf
ins
test
adc
mov
and
inc
stos
dec
push
into
outs
retf
dec
or
sbb
fs
sub
add
leave
sbb
push
cmp
push
xor
xor
or
cmp
xor
pusha
jl
outs
push
movs
es
call
inc
aam
and
add
mov
repnz
adc
xor
pop
test
push
in
mov
inc
(bad)
frstor
dec
fild
pusha
jae
push
push
int3
ret
or
data16
push
add
push
outs
inc
gs
retf
sbb
jae
fdiv
fbld
gs
dec
dec
jmp
outs
mov
call
outs
and
je
mov
pop
inc
xchg
ins
movs
pop
inc
shr
push
adc
push
loopne
or
sbb
into
or
imul
and
jbe
push
push
or
pop
mov
or
dec
pop
js
add
js
cmp
or
push
shl
mov
push
cwde
mov
or
xor
push
jb
add
add
add
add
(bad)
ret
pusha
jp
dec
dec
ss
sub
retf
add
enter
xchg
inc
push
adc
je
and
rcr
or
inc
push
cmps
or
mov
ds
mov
aam
xchg
(bad)
enter
mov
jo
popa
add
add
push
shl
test
add
shl
dec
sub
and
shl
adc
cmp
data16
sbb
sub
xchg
jo
pop
add
push
xchg
push
rcl
xchg
mov
or
pop
xchg
dec
xchg
lods
cmp
push
lock
xor
push
pusha
hlt
xchg
push
test
push
adc
mov
and
or
outs
retf
enter
inc
push
xor
jmp
dec
and
aad
stos
xor
bound
add
push
aaa
dec
inc
mov
push
sbb
cmp
pop
hlt
mov
sub
shr
bound
cmp
je
mov
xor
popa
mov
pop
push
or
or
add
sar
outs
mov
dec
or
pop
push
inc
or
push
xchg
cmp
cli
mov
inc
or
push
cmp
gs
xor
adc
pop
sub
or
or
or
neg
pop
nop
nop
retf
mov
hlt
fimul
int3
inc
sbb
aaa
mov
popa
cmp
or
add
(bad)
bound
stos
and
cmp
push
cmp
and
arpl
leave
in
aad
xor
push
dec
and
and
and
xor
dec
mov
ds
push
loope
test
fidiv
leave
scas
ret
ja
in
ret
mov
fisttp
jne
fistp
mov
inc
inc
sub
cdq
add
int3
and
loop
mov
xchg
add
cmps
add
ins
sbb
lock
fsubr
inc
or
push
dec
push
daa
and
enter
adc
mov
test
sbb
sbb
pop
xchg
and
ds
inc
retf
sub
bound
mov
jns
inc
mov
mov
jo
inc
adc
sub
fmul
inc
jo
jb
dec
push
or
xor
js
xor
xchg
gs
pop
mov
jb
pop
stos
add
data16
not
mov
test
int3
jp
add
jo
push
push
push
push
shr
ds
dec
aaa
xchg
mov
(bad)
(bad)
inc
add
xor
push
mov
or
int3
cmp
cmp
xor
jb
mov
push
pop
cwde
push
jb
mov
push
push
ror
push
and
data16
xor
mov
push
push
xchg
ret
push
pop
movs
inc
in
fs
test
xchg
test
and
cmps
or
push
jp
dec
(bad)
and
or
xor
stos
xchg
jbe
xor
aad
pop
push
jns
or
inc
dec
rcr
push
add
inc
into
cmp
mov
movs
pop
sbb
imul
jo
fs
push
nop
int
sbb
xor
call
sub
(bad)
jns
sub
movs
adc
clc
jp
(bad)
clc
dec
or
sar
push
mov
dec
fs
sub
adc
dec
and
dec
ror
add
loopne
fadd
sub
and
and
add
jno
icebp
call
shr
dec
push
dec
push
enter
xor
or
sbb
dec
test
test
or
adc
sub
jo
dec
jp
test
inc
les
imul
retf
bound
xor
pop
jo
inc
dec
(bad)
dec
mov
xor
pop
leave
movs
adc
inc
outs
xor
lock
ror
call
lea
mov
xchg
ret
clc
jb
fs
adc
cmp
push
stos
aam
xor
pop
dec
jae
arpl
aaa
cmp
mov
dec
push
mov
arpl
adc
jb
dec
xor
pop
adc
dec
mov
jmp
adc
mov
push
push
sub
stos
imul
or
dec
push
inc
sbb
jl
add
dec
loope
push
cli
add
jae
sub
inc
cmp
mov
xor
fsub
imul
push
push
sub
push
sbb
(bad)
retf
xchg
mov
dec
inc
xor
push
adc
push
and
sbb
fsubp
rcr
and
push
jne
inc
add
push
push
push
ror
push
dec
mov
dec
test
mov
inc
sub
push
xchg
adc
imul
mov
(bad)
xchg
or
aad
sub
jmp
cmp
dec
and
es
mov
add
inc
xor
bound
imul
or
xor
mov
add
add
add
mov
jle
add
add
pusha
push
inc
jl
fsub
xchg
enter
xor
or
test
cli
and
push
sbb
mov
pop
push
nop
outs
push
ins
cdq
ss
mov
bound
mov
hlt
push
aaa
lods
mov
jb
test
push
sub
fs
and
inc
or
inc
or
inc
add
xor
xchg
ror
addr16
add
and
push
fisubr
push
dec
data16
dec
push
add
xor
xchg
push
jae
ins
sub
shr
xchg
dec
popa
enter
fs
push
xchg
add
mov
frstor
test
popa
sbb
and
add
sub
and
pop
sub
push
xor
or
push
push
mov
push
outs
pop
inc
retf
xor
pop
xchg
inc
retf
lods
mov
jno
push
add
cmp
call
inc
push
or
jmp
mov
adc
cwde
adc
inc
lods
cli
inc
inc
retf
jo
lods
sbb
dec
retf
inc
xchg
ss
cmp
or
test
push
push
xor
sbb
pusha
inc
popa
pop
jmp
out
imul
xor
jb
mov
mov
or
and
or
push
(bad)
mov
popa
mov
fld
ror
inc
into
pop
push
jb
sbb
stos
les
mov
and
mov
pushf
cmp
add
xchg
mov
pop
push
adc
xchg
repnz
ins
dec
push
rcl
inc
jo
jo
ins
outs
out
ss
sbb
push
ss
xor
adc
or
add
stos
mov
mov
push
add
inc
dec
and
lods
gs
aaa
lods
and
nop
ss
cmp
xor
xchg
ins
or
sbb
add
neg
ss
add
ins
ins
mov
adc
push
jp
jns
arpl
inc
mov
cwde
xchg
add
sbb
dec
call
dec
dec
or
test
sub
mov
sub
cdq
cmp
movs
test
push
mov
xor
jmp
mov
sub
push
mov
call
sub
xchg
and
xchg
test
fmul
inc
mov
je
xor
pop
dec
jb
mov
mov
dec
cmp
loope
jb
push
inc
push
mov
cmp
ja
pop
sbb
inc
adc
fwait
xchg
xchg
or
dec
mov
push
jle
ror
inc
je
dec
mov
movs
push
ins
outs
shr
test
push
in
out
xchg
push
es
and
mov
push
push
rcr
ret
mov
push
clc
mov
imul
and
cs
add
dec
push
loop
bound
retf
shl
push
es
ins
sbb
cld
rol
xchg
mov
xchg
or
xchg
sbb
rol
adc
outs
or
shl
push
xor
or
xchg
dec
inc
push
xor
mov
add
sbb
stos
pop
jp
xor
jmp
ja
mov
push
push
inc
stos
or
or
bound
add
xchg
or
mov
push
push
js
adc
nop
hlt
push
mov
adc
in
jo
test
mov
inc
mov
shr
loop
inc
mov
xchg
adc
push
lods
dec
lahf
or
jbe
test
xor
add
or
dec
xor
nop
inc
push
mov
int3
imul
cmp
inc
xor
add
xor
jb
js
or
pop
mov
push
push
leave
dec
dec
push
add
popa
adc
dec
aam
adc
js
je
jb
push
shl
or
dec
data16
xor
sub
popa
lea
jno
cmp
xor
and
shl
sbb
adc
popa
mov
test
gs
ins
add
adc
push
gs
outs
test
push
add
outs
mov
and
or
xor
nop
imul
push
rol
push
xor
dec
push
or
or
dec
fadd
sbb
adc
pop
and
mov
push
js
dec
push
cmp
nop
ficomp
jmp
jbe
mov
cmp
and
inc
rol
jbe
adc
push
call
mov
sbb
call
call
bound
inc
retf
fcmove
dec
add
and
enter
rol
arpl
add
dec
lock
pushf
ja
dec
sub
and
xchg
test
inc
dec
outs
mov
ja
rcl
inc
retf
xor
nop
ss
js
test
xor
int3
add
add
inc
dec
xor
xchg
aad
inc
test
bound
movs
movs
xor
jle
ins
mov
inc
xor
push
in
xchg
and
jp
sub
(bad)
shr
sub
cld
inc
jb
or
inc
adc
ss
mov
mov
in
(bad)
mov
xor
test
and
adc
fidiv
xor
inc
push
jl
bound
push
mov
imul
outs
push
xor
test
dec
add
mov
add
inc
pop
push
test
xor
dec
mov
adc
sub
ins
popa
xor
cmp
push
mov
jbe
push
sar
dec
cmp
je
push
nop
popa
sbb
dec
inc
cmp
mov
or
push
jp
push
out
call
xchg
pop
inc
inc
repnz
inc
dec
lods
add
imul
dec
shr
test
or
pushf
dec
in
arpl
or
test
xor
test
inc
push
cmp
inc
rcr
rcl
adc
scas
data16
sub
cwde
push
loopne
sub
mov
test
dec
rol
lods
inc
rcl
mov
ret
add
and
sub
adc
jbe
dec
movs
push
adc
ja
mov
dec
dec
xchg
movs
add
out
xchg
jb
push
push
sub
push
ss
mov
cmp
cmp
int3
ds
ins
inc
fisub
cmps
mov
jae
pop
xchg
sbb
jno
cmp
test
dec
and
push
ffree
outs
dec
jae
cmp
push
push
push
inc
pop
inc
dec
xor
mov
and
dec
ins
popa
fmul
cwde
or
dec
or
inc
add
sub
inc
int3
or
test
mov
out
inc
inc
mov
in
xor
mov
ins
push
dec
test
cmp
add
mov
push
aam
jbe
xor
sbb
dec
cmp
inc
add
dec
(bad)
fcomp
ficom
push
dec
in
inc
fidivr
mov
mov
push
mov
pop
and
sbb
add
xor
or
mov
xor
jae
push
je
xor
lods
mov
push
inc
test
bound
xchg
dec
inc
adc
or
cmp
sbb
and
inc
add
mov
ss
push
int3
aam
enter
push
and
loopne
nop
mov
js
cwde
push
and
fadd
push
adc
add
ins
stos
sar
add
push
nop
pop
xor
add
aad
dec
pusha
xor
or
scas
sub
pop
pop
inc
cmp
addr16
mov
xor
or
mov
sub
jo
outs
lock
mov
and
xor
ins
mov
scas
jmp
sub
mov
and
mov
cwde
nop
and
addr16
ss
pusha
cmp
dec
push
jns
(bad)
jne
sbb
sub
mov
inc
inc
movs
add
mov
test
out
imul
push
xor
push
ja
adc
mov
mov
popa
ja
inc
mov
div
dec
out
data16
dec
sbb
pushf
push
jbe
sbb
xor
sub
and
jle
add
or
jo
sbb
jmp
cs
ja
fs
inc
dec
pop
fsub
pusha
fadd
mov
xchg
push
cld
fidivr
lods
and
repnz
mov
pop
out
ins
adc
sub
js
inc
rol
dec
xor
xor
dec
jbe
add
mov
and
mov
push
es
xor
jne
dec
cmp
cs
test
scas
mov
push
mov
push
push
inc
pop
inc
adc
pop
imul
dec
dec
ins
push
arpl
je
inc
sub
push
or
fmul
lea
push
push
pop
push
lods
push
sbb
adc
mov
and
jno
adc
push
fwait
test
xchg
inc
mov
push
push
fcom
or
ds
or
out
mov
adc
xor
jl
sbb
sbb
adc
xor
(bad)
adc
je
dec
xchg
and
mov
es
or
in
call
inc
push
mov
shl
adc
je
mov
ret
adc
xor
sbb
inc
cmp
cmp
mov
stos
(bad)
inc
push
add
inc
fmul
jmp
adc
and
jbe
mov
jo
dec
inc
or
xor
mov
es
cli
jns
push
or
inc
cmps
and
push
cld
mov
call
aaa
or
sub
add
xor
shr
ret
ss
pusha
dec
inc
cli
adc
or
add
push
push
and
test
push
ins
cmp
cli
js
or
and
adc
push
inc
dec
mov
fidivr
push
sbb
into
cli
je
adc
out
inc
push
sbb
adc
shl
movs
pop
dec
or
retf
add
adc
inc
xchg
push
clc
inc
inc
jp
aaa
push
cmc
push
test
ja
outs
dec
cmps
or
push
or
jmp
push
jmp
outs
mov
aaa
dec
lods
inc
mov
xchg
jae
and
push
xchg
mov
adc
adc
cmp
push
and
arpl
pop
and
test
int3
add
sub
or
jbe
dec
movs
jb
fwait
lods
outs
inc
adc
mov
push
adc
fwait
dec
movs
xor
nop
inc
movs
inc
inc
and
aad
inc
bound
dec
ja
xlat
es
ds
and
loope
jno
js
aam
cmp
aam
leave
ins
fcomp
in
push
dec
add
scas
mov
stos
mov
je
push
sub
dec
sub
sub
in
or
inc
pop
or
ss
les
xor
(bad)
push
push
push
pop
call
je
jmp
dec
xor
fiadd
or
or
and
arpl
inc
repnz
or
test
jae
or
in
je
dec
mov
xchg
push
je
xchg
add
add
pop
inc
pusha
jb
add
mov
dec
dec
inc
inc
cmps
and
add
retf
or
mov
adc
mov
in
daa
aam
sbb
ins
mov
ds
jbe
jo
xlat
xor
ds
call
inc
push
arpl
sbb
mov
inc
pop
gs
inc
and
sub
pop
jns
add
retf
bound
mov
fdiv
and
mov
push
cmp
push
and
mov
mov
sbb
cmp
push
mov
add
enter
jns
inc
sub
inc
jbe
xchg
retf
cli
xchg
ret
test
sbb
and
mov
push
ins
sar
push
inc
add
and
mov
mov
dec
jb
ins
jae
jns
sub
(bad)
addr16
xchg
ja
xor
xor
sub
jo
xchg
add
push
xor
xor
push
jo
inc
push
or
test
cmps
in
adc
dec
dec
popa
scas
sbb
xor
dec
jp
and
push
cmp
pop
push
cmp
add
cld
fs
xor
jbe
imul
mov
jbe
cmc
retf
push
push
stos
jo
fimul
js
inc
add
jo
sub
cbw
bound
dec
jmp
sub
mov
push
cmp
clc
dec
sbb
push
xchg
add
fiadd
xor
fs
movs
add
cmps
pop
xor
mov
inc
adc
or
fdiv
cmp
jo
inc
cmp
sbb
or
sub
mov
pusha
dec
sbb
inc
push
cmp
inc
int3
test
nop
shl
push
or
outs
add
shl
fsub
ret
jo
jno
push
jb
cs
loopne
sub
fadd
xor
jmp
inc
ins
jne
clc
dec
bound
pop
fs
or
je
adc
jmp
mov
push
arpl
mov
popa
test
js
push
mov
dec
pusha
push
or
mov
outs
imul
xor
inc
mov
add
add
jbe
jns
push
dec
ja
inc
push
inc
jp
mov
inc
rol
add
jb
imul
mov
mov
cli
jle
int
pop
pop
mov
dec
mov
push
daa
pushf
ins
sub
in
in
push
sub
ins
imul
dec
inc
adc
dec
push
mov
shl
or
or
jno
add
pop
fdiv
dec
pop
inc
mov
xor
add
mov
pop
scas
mov
and
cli
inc
inc
push
inc
test
push
fmul
jns
pop
push
outs
add
pop
hlt
inc
pop
enter
push
ins
sub
lods
push
and
jbe
dec
dec
push
push
data16
scas
sub
dec
xor
(bad)
pop
add
and
and
(bad)
pop
add
add
test
dec
cmp
or
inc
xchg
and
cmp
or
and
je
sbb
test
pop
or
push
mov
data16
int
rcr
mov
jp
pop
and
bound
shl
jne
fcomp
mov
adc
aam
adc
jb
push
cwde
clc
rcl
ds
adc
xchg
pop
(bad)
bound
or
xchg
rcl
fmul
ins
push
push
cmp
sub
or
and
dec
and
fsubrp
and
pusha
es
call
adc
xchg
inc
jo
imul
push
nop
inc
xor
push
nop
dec
pusha
out
xchg
pop
adc
inc
push
cmp
pop
outs
dec
pusha
in
mov
loopne
mov
xchg
mov
ins
xor
xor
test
push
xor
je
mov
add
dec
loopne
adc
mov
in
bound
or
dec
mov
push
and
xor
xor
push
es
push
push
sub
nop
xor
sub
inc
fld
jmp
pop
push
pop
pushf
push
out
push
pop
ins
pop
jne
mov
inc
add
add
adc
dec
arpl
(bad)
pop
data16
ret
fwait
test
inc
mov
jge
and
pusha
jp
cmp
jae
ins
inc
dec
xor
fsubr
dec
jp
cmp
inc
push
ins
or
sbb
mov
xor
outs
mov
push
add
pop
data16
add
or
xor
sbb
add
xchg
test
xchg
nop
outs
lods
cmps
sub
inc
xchg
or
jbe
test
mov
push
dec
sub
and
jle
lods
sbb
cmps
sub
ins
sub
sub
inc
push
fadd
lock
mov
cmps
and
ss
xchg
mov
test
fcom
popa
dec
jbe
mov
sub
pop
mov
pop
retf
rcl
jns
xor
jp
add
mov
xchg
xor
(bad)
bound
and
call
pusha
data16
or
in
fcom
xor
jbe
push
adc
scas
xor
adc
sub
call
loope
shl
enter
add
imul
dec
sub
ss
sub
outs
sub
outs
ins
adc
push
pop
es
add
data16
aam
sbb
adc
push
or
dec
mov
inc
imul
sbb
dec
and
and
test
dec
jb
add
stos
loop
(bad)
movs
push
dec
clc
call
in
jle
xchg
xchg
pop
push
lods
mov
push
imul
add
call
retf
xchg
mov
mov
addr16
or
pusha
add
fsub
dec
adc
push
pusha
xor
nop
sbb
mov
add
push
cmp
and
inc
xor
call
push
sub
sbb
ss
inc
push
mov
mov
enter
push
outs
rcr
cdq
jecxz
mov
push
jp
retf
test
or
in
xor
add
adc
sub
test
stos
cmps
dec
xchg
xor
stos
and
retf
sbb
clc
dec
mov
hlt
pusha
mov
add
shl
outs
rcl
lods
and
dec
push
dec
adc
lock
nop
test
and
and
inc
push
movs
mov
dec
lds
test
jno
adc
push
loope
add
push
adc
mov
mov
xor
bound
or
in
or
cmp
in
adc
xor
movs
add
inc
inc
dec
mov
ss
or
test
ins
pop
and
fcom
jp
inc
dec
push
movs
lea
rol
xor
fimul
inc
rol
jbe
bound
data16
inc
pop
or
sahf
dec
inc
mov
push
push
add
cwde
or
add
lds
add
cmp
sub
sub
dec
stos
mov
xor
xor
jmp
sahf
imul
data16
push
cld
test
loopne
adc
dec
push
movs
sbb
into
inc
push
(bad)
shr
and
nop
outs
mov
loopne
pop
bound
xchg
cmp
scas
mov
arpl
cmps
loopne
je
repnz
pop
ins
lock
fs
and
pusha
je
nop
pop
movs
sub
jl
inc
dec
add
jl
in
xchg
or
mov
movs
xor
adc
sbb
ss
and
popa
cmp
push
fisub
sub
mov
sub
loop
popa
or
jbe
push
add
and
imul
aaa
add
add
cmp
adc
or
inc
pop
or
push
dec
push
push
aam
adc
jns
xchg
cwde
dec
add
sbb
push
inc
mov
in
push
je
add
jb
xchg
popa
mov
fimul
sahf
push
es
push
repnz
inc
pop
or
call
add
mov
push
inc
test
call
sbb
mov
popa
mov
js
push
test
jmp
frstor
jno
and
xor
lock
pop
loopne
es
dec
mov
mov
push
sub
fimul
mov
push
es
lods
push
inc
push
inc
sub
xor
mov
dec
push
push
dec
cmp
pop
add
ror
mov
inc
cmp
mov
dec
inc
add
or
sahf
fdiv
data16
push
mov
pop
add
dec
out
mov
in
add
dec
mov
inc
sub
cwde
dec
inc
xor
inc
test
add
jo
and
imul
je
push
test
aam
dec
rol
push
dec
or
xchg
popa
inc
sbb
fmul
xor
xor
and
push
cs
je
jae
mov
and
stos
es
pusha
dec
out
jmp
jo
data16
pop
sub
and
sbb
add
movs
inc
xchg
in
mov
add
inc
xchg
or
jb
dec
nop
inc
mov
or
push
test
adc
sub
push
je
bound
shl
push
xchg
xchg
popa
add
ja
inc
push
push
clc
ret
ret
je
out
sub
loop
xor
push
data16
push
inc
cwde
adc
or
add
push
inc
popa
cmp
aad
xchg
es
xor
rol
retf
sub
ss
inc
sbb
push
jp
in
shl
mov
sub
and
clc
jbe
or
jb
mov
sbb
push
mov
adc
adc
xchg
mov
pop
add
push
inc
xor
pushf
jae
mov
push
inc
xor
dec
push
pop
dec
cwde
stos
cs
bound
xor
ss
fsub
cmps
dec
ss
call
retf
jbe
ror
int3
xor
push
out
jo
push
inc
xor
xor
xor
pop
inc
outs
cs
push
ins
int
cmp
lock
inc
inc
inc
inc
stos
push
(bad)
rcl
ret
jbe
dec
test
dec
sub
pop
and
mov
dec
add
cmp
jbe
and
inc
sbb
arpl
xchg
push
dec
xor
jo
pop
shl
test
or
adc
(bad)
push
or
and
inc
pop
mov
test
push
sbb
cld
nop
jl
cwde
ficom
jmp
ror
push
or
adc
sbb
push
cwde
imul
jo
dec
hlt
push
in
push
pop
inc
xchg
and
bound
int3
ds
mov
push
adc
pusha
leave
add
adc
dec
sub
jb
push
xlat
inc
push
jo
pop
hlt
inc
inc
push
mov
push
movs
xchg
pop
xchg
movs
push
jmp
or
mov
ss
shr
sub
dec
xchg
xor
dec
mov
fs
or
mov
dec
add
nop
push
fmul
and
push
jb
rol
movs
es
or
xor
ins
aad
mov
cli
inc
inc
add
push
mov
dec
push
xor
bnd
ficom
movs
imul
mov
xor
ds
jne
add
dec
(bad)
test
adc
pop
imul
test
inc
jne
and
or
stos
push
cwde
inc
mov
and
xchg
add
xor
lods
xchg
mov
jo
jb
xor
data16
aaa
mov
mov
xchg
stos
lock
pusha
test
aaa
add
push
and
push
rcl
mov
and
adc
pop
xor
fs
xor
int3
inc
inc
xchg
and
retf
test
(bad)
jae
aam
shl
inc
cmps
cmp
push
dec
and
ins
inc
dec
add
lea
push
pop
dec
push
pop
add
push
dec
push
sub
push
push
push
inc
jno
and
out
cld
test
push
cmp
sub
test
and
jns
fisub
retf
adc
add
push
or
jle
(bad)
dec
sub
inc
(bad)
scas
mov
clc
fiadd
sub
sbb
adc
in
push
and
sahf
jbe
pop
push
in
ss
xchg
or
call
mov
push
les
adc
fidiv
add
ror
retf
stos
fcom
xchg
mov
les
outs
arpl
test
and
push
movs
nop
in
inc
add
xchg
push
pop
lock
int3
xor
cwde
push
cli
inc
clc
inc
stos
push
mov
jp
pop
pop
fld
adc
add
es
xor
int3
inc
ins
xor
mov
adc
inc
fs
inc
ins
stos
pop
push
sub
adc
add
push
or
adc
fisubr
inc
in
add
and
and
jp
jp
popa
jo
test
adc
cs
(bad)
pop
push
sub
push
ds
push
mov
dec
sub
dec
and
inc
sub
inc
lock
xor
test
clc
dec
enter
xchg
push
stos
lea
into
jbe
xor
jb
or
es
xchg
and
aam
inc
sub
mov
mov
xchg
xor
imul
adc
and
call
(bad)
es
movs
aam
inc
cmp
and
pop
and
jb
cmp
or
bound
mov
cmp
jbe
xchg
aam
cmp
xor
lds
aam
adc
jb
je
inc
dec
mov
cdq
and
jb
and
add
mov
inc
shl
mov
ja
xor
js
inc
adc
test
rol
dec
inc
rcr
mov
cmp
dec
adc
inc
sub
add
ds
arpl
push
xor
outs
pop
sub
leave
xor
xor
push
xor
push
push
pop
mov
push
xor
or
dec
or
cmps
or
push
loop
jns
hlt
and
or
jbe
ins
and
pusha
or
mov
fwait
xchg
ja
dec
dec
js
push
inc
(bad)
and
in
sahf
ss
popa
dec
in
shl
add
pop
push
sub
lea
xor
jae
ficomp
jb
xor
addr16
mov
arpl
inc
dec
popa
sub
inc
mov
push
pop
(bad)
cmp
inc
je
push
pushf
mov
add
jp
push
add
push
or
cmp
or
dec
add
sar
jno
push
pop
aaa
popa
xchg
dec
outs
pop
add
xor
push
and
and
fcomp
mov
xor
aam
mov
xor
dec
xor
nop
out
shl
pop
dec
cmp
bound
outs
mov
or
call
dec
xor
xchg
xor
popa
sub
sub
pusha
cmp
mov
cs
jne
aaa
and
fdivr
cs
xor
loopne
mov
xchg
mov
xor
mov
int3
jle
outs
xchg
jo
aam
jno
sub
push
mov
adc
push
pop
adc
fadd
nop
call
ins
dec
add
sub
outs
call
repnz
pop
out
out
add
push
aam
push
pop
mov
dec
mov
cs
outs
inc
sub
xor
imul
xor
pop
outs
test
cmp
push
dec
or
dec
inc
clc
dec
ss
cmp
xor
add
arpl
xchg
movs
cs
nop
and
loopne
ja
pusha
mov
dec
aaa
pop
xor
dec
pop
je
mov
sahf
popa
xor
test
xor
arpl
add
or
and
xchg
sbb
inc
in
je
mov
push
cmp
xor
pop
dec
inc
inc
mov
test
imul
push
jo
and
or
and
out
mov
mov
stos
rcl
aad
xor
and
dec
push
lods
sahf
jb
test
pop
mov
nop
push
and
push
mov
in
push
or
jne
push
push
add
sub
pop
bound
inc
add
cmps
movs
xchg
shl
xchg
ret
and
cwde
fisubr
add
and
sub
cmp
add
add
xchg
jbe
enter
outs
into
push
mov
push
loope
adc
inc
dec
imul
es
jl
cli
sbb
push
fimul
mov
mov
outs
fwait
xchg
shr
dec
dec
popa
or
call
add
ins
cwde
cli
sub
mov
jns
cmp
push
movs
push
out
push
mov
mov
push
push
sbb
sub
jle
push
sub
push
sbb
aam
mov
jns
push
ja
or
push
push
aaa
je
adc
xor
lock
ins
mov
out
pop
push
sbb
add
adc
sub
adc
es
loopne
js
xor
sar
inc
adc
adc
jbe
push
retf
xor
inc
or
out
adc
mov
dec
dec
mov
adc
mov
and
pusha
push
add
fs
sub
add
sbb
inc
cmp
dec
shr
add
push
bound
jo
sahf
sub
add
sub
push
push
pushf
in
mov
sbb
or
push
dec
fadd
loopne
mov
test
xor
adc
push
dec
add
mov
xor
add
inc
xor
cld
ss
or
cwde
call
test
dec
dec
ins
mov
push
sub
test
xor
adc
push
(bad)
xor
sub
sub
mov
popa
sbb
xchg
pop
ror
fdiv
pushf
inc
dec
mov
retw
and
mov
ins
ror
jne
outs
or
xchg
push
push
or
outs
rcl
push
and
loope
pop
push
aaa
dec
hlt
fcmove
mov
and
or
cwde
call
push
push
push
pop
mov
mov
dec
push
fimul
xor
adc
enter
dec
mov
pop
sub
cmp
movs
rcl
and
dec
mov
mov
mov
xchg
enter
jo
dec
push
push
cli
lods
int3
inc
xchg
in
adc
xchg
dec
adc
cmp
dec
ja
add
test
push
xor
test
push
nop
fs
inc
mov
and
sahf
mov
push
adc
xor
adc
or
mov
push
sbb
xor
imul
push
xchg
les
push
inc
loop
adc
sub
mov
sub
xor
cmp
mov
jbe
cmp
jo
xor
xor
scas
dec
ds
sbb
jno
push
adc
inc
call
clc
dec
dec
dec
int3
js
jb
adc
rcl
xchg
mov
and
xchg
test
mov
xor
lock
add
adc
or
rcl
arpl
mov
enter
and
scas
cmps
add
popf
xchg
inc
sub
jbe
in
cmps
mov
ss
adc
push
popa
push
adc
je
inc
or
mov
xor
pop
sub
or
add
push
or
push
pop
push
ds
adc
mov
or
add
push
mov
mov
inc
je
push
inc
dec
bound
daa
add
and
lods
data16
hlt
sub
cwde
push
popa
cmp
mov
jp
sahf
jo
add
adc
push
scas
pop
xchg
push
sar
push
jl
sbb
sbb
in
jo
xlat
cdq
and
push
fadd
push
push
add
fdiv
push
bound
dec
push
add
fisubr
lea
ins
xor
in
xchg
cwde
adc
ss
adc
jle
retf
loopne
pusha
dec
mov
and
xor
mov
sbb
sub
add
jno
pop
es
dec
add
fsub
mov
mov
sbb
sub
in
movs
push
push
and
cmp
loop
inc
add
xchg
pushf
retf
and
jb
call
push
xlat
lock
jle
(bad)
enter
arpl
dec
inc
sub
mov
sub
jp
dec
push
(bad)
push
je
stos
add
jno
gs
push
adc
adc
pop
dec
lea
retf
adc
cmps
mov
xchg
imul
sbb
or
cdq
xor
xor
push
sbb
(bad)
xchg
cmp
cli
lods
inc
add
js
dec
pusha
sbb
or
add
xor
sbb
gs
ror
ret
data16
inc
shl
jbe
cmp
and
push
ss
or
cmp
inc
shl
fmul
xchg
shl
add
or
retf
add
call
jne
push
ror
sbb
push
xor
fist
add
push
or
enter
(bad)
pop
gs
les
popa
mov
or
dec
inc
and
inc
cmps
pop
xor
mov
sbb
and
inc
dec
sbb
mov
sub
call
(bad)
call
adc
arpl
call
jb
pop
jo
jb
push
inc
dec
mov
ins
push
push
adc
jle
nop
dec
stos
fist
or
ficom
es
or
je
jb
mov
fld
ins
arpl
int3
mov
push
push
xor
xchg
call
mov
jno
or
inc
push
retf
mov
les
sahf
mov
push
lds
mov
mov
adc
xor
inc
ins
js
dec
popa
add
pop
xor
fs
mov
test
add
inc
and
sbb
and
add
(bad)
dec
fld
xchg
jno
or
jbe
inc
cmps
popa
(bad)
outs
xor
push
adc
pop
dec
scas
push
shl
push
dec
xor
push
adc
sub
dec
je
jno
xchg
in
push
and
test
mov
push
add
xchg
shl
mov
push
pop
retf
inc
add
popa
outs
sbb
xor
retf
and
xor
pop
fadd
push
adc
add
push
jo
push
or
imul
nop
push
call
dec
cli
push
pop
add
adc
pop
push
push
aaa
test
xchg
leave
js
enter
ret
ss
xor
int3
dec
and
push
xor
dec
rol
inc
sub
dec
outs
lods
mov
mov
xor
cmp
ror
ins
outs
mov
daa
sub
push
add
mov
sbb
pop
es
inc
ins
mov
and
test
cmp
sbb
jo
push
xchg
fidiv
mov
test
gs
dec
or
ins
jne
sub
xor
cli
add
arpl
inc
mov
ds
test
sbb
mov
shr
add
or
mov
mov
pushw
xor
or
or
xor
xchg
push
bound
fsub
cld
xor
cmp
jmp
xor
and
mov
xchg
ret
(bad)
ss
mov
dec
imul
dec
pop
popa
jo
jns
ss
lea
sub
xor
xor
push
and
gs
and
adc
hlt
(bad)
mov
cmp
xchg
mov
cmp
add
test
sbb
dec
push
sbb
pop
(bad)
push
out
or
xchg
add
push
xchg
xchg
mov
xor
add
(bad)
mov
mov
sahf
mov
imul
mov
jne
mov
pop
cmp
mov
mov
adc
pushf
xor
push
sub
sub
push
inc
inc
xor
add
xor
dec
lea
test
or
sub
shr
inc
push
retf
js
xor
pushf
jge
mov
cmps
mov
loope
sub
or
xchg
outs
cs
and
xor
push
pop
sub
jns
arpl
out
mov
inc
ins
xchg
mov
or
shl
mov
dec
cwde
and
and
imul
aad
dec
data16
xor
adc
sub
and
push
js
inc
shl
stos
sbb
add
and
pop
sub
cld
jno
add
add
test
or
push
hlt
or
lods
push
cmp
push
or
xor
pusha
or
imul
inc
rcl
inc
mov
inc
shr
pop
dec
xor
and
or
jbe
sbb
ins
mov
bound
add
sbb
sub
and
ficom
jno
ja
jo
adc
mov
dec
inc
jb
xchg
mov
xor
test
xchg
cmp
lock
adc
pop
dec
sub
add
push
push
mov
imul
nop
mov
xor
and
mov
fs
jp
pushf
add
or
cs
pop
xor
xchg
adc
cmps
push
push
push
or
xor
ss
push
int
test
dec
or
lods
out
xchg
mov
jne
push
jo
jne
sahf
gs
mov
push
inc
push
add
loopne
push
nop
outs
or
add
or
adc
fs
pusha
adc
and
popa
repnz
aad
shl
imul
aam
push
pop
outs
js
leave
sbb
sbb
add
sbb
mov
ret
mov
or
sub
push
adc
xchg
mov
js
push
dec
xor
dec
fidiv
mov
enter
jae
pop
stos
and
aam
push
or
and
xchg
push
jb
inc
or
lock
ret
mov
ins
ds
xchg
jne
xor
or
push
mov
jbe
je
push
loopne
xchg
and
adc
or
dec
xchg
imul
mov
inc
pop
sub
inc
or
push
ret
mov
xchg
cld
jb
movs
push
push
pop
in
outs
jbe
pop
loopne
push
and
data16
pop
or
cdq
pop
push
jne
dec
outs
push
add
adc
gs
inc
jo
add
mov
loopne
les
in
test
sub
push
sub
arpl
sbb
dec
in
sub
ret
adc
movs
mov
cs
push
cli
mov
sbb
cmp
or
sbb
popa
cwde
dec
call
enter
push
adc
inc
cmp
dec
sbb
mov
mov
js
xchg
push
or
cmp
xor
push
shl
pop
nop
inc
xchg
push
mov
and
push
pop
add
xchg
xchg
or
ss
mov
je
jo
mov
sub
mov
xchg
push
xor
ret
or
cmp
in
push
adc
jns
ss
add
call
jo
pop
(bad)
les
retf
test
mov
pop
add
add
xchg
pop
xor
push
jne
imul
push
cmps
mov
jbe
jae
popa
xor
dec
out
mov
add
dec
mov
add
inc
add
jbe
clc
jb
mov
popa
call
dec
test
xchg
inc
(bad)
sub
sub
ss
push
jns
ss
add
inc
data16
inc
xchg
and
inc
dec
ja
mov
and
cmp
add
dec
add
stos
inc
adc
(bad)
leave
loopne
mov
mov
xor
adc
push
xor
aad
cmp
dec
dec
data16
popa
scas
or
ins
ss
add
retf
nop
dec
add
sbb
mov
adc
cmps
(bad)
jmp
pop
ss
sbb
call
jns
mov
xor
xor
es
int
jo
jo
inc
dec
outs
adc
test
inc
xor
cli
jae
dec
outs
or
mov
add
inc
mov
and
cwde
fmul
cs
push
inc
pop
dec
push
mov
add
call
inc
xchg
jb
xor
fcomp
xor
outs
shr
jne
sbb
pop
or
pop
or
das
pushf
loopne
dec
push
inc
and
mov
call
and
ror
mov
es
je
adc
push
repnz
and
push
out
mov
(bad)
sub
push
inc
es
xchg
xchg
out
or
mov
add
add
push
add
outs
xor
sbb
dec
lock
mov
adc
sub
push
and
add
scas
inc
fcom
ins
movs
fdiv
sub
dec
sbb
rcl
dec
inc
jl
inc
dec
and
push
push
add
pop
dec
gs
call
pop
mov
xchg
inc
ins
test
push
push
jbe
push
dec
js
sbb
fadd
mov
or
mov
xchg
inc
loope
or
and
cld
pop
dec
shl
sbb
ins
mov
add
ins
fcom
xchg
pop
pushf
inc
mov
fiadd
jo
outs
shl
add
add
ret
rcl
and
mov
arpl
in
(bad)
push
cmp
push
push
push
movs
xor
(bad)
xor
pushf
push
push
in
or
inc
inc
add
test
jne
pop
inc
adc
mov
inc
sbb
pop
imul
dec
rcr
mov
xor
xor
mov
push
mov
xor
add
pop
mov
jno
push
(bad)
push
xchg
jbe
cmp
je
scas
outs
add
inc
ficomp
sub
dec
cwde
add
test
fdiv
add
and
sbb
ret
xchg
out
lods
sub
xchg
inc
xor
xchg
add
xor
and
sub
in
sbb
(bad)
mov
cmp
mov
xor
jns
loopne
add
or
int
fimul
push
jne
sbb
pop
mov
or
sub
shr
sub
jo
add
inc
xor
pop
imul
sbb
inc
add
arpl
push
retf
out
inc
pop
pop
je
or
jns
xchg
push
xchg
arpl
je
out
push
retf
and
mov
aam
xor
jl
ins
rcl
add
push
fdiv
inc
pop
jmp
jbe
arpl
mov
add
mov
push
xor
mov
aam
dec
or
outs
int3
xor
or
sub
mov
mov
cmp
jb
add
push
bound
rcl
dec
push
cs
enter
adc
jae
jne
xchg
and
clc
nop
mov
dec
bound
mov
add
xchg
bound
or
add
mov
adc
cmp
mov
jl
adc
adc
inc
mov
adc
push
push
(bad)
jmp
imul
push
addr16
dec
add
ficom
xchg
inc
xor
xchg
cmp
arpl
push
push
call
push
jle
xchg
xchg
loopne
push
fadd
cli
dec
adc
mov
add
xor
dec
and
pusha
ins
stos
inc
dec
or
push
pop
mov
fsubr
out
push
jne
jae
adc
test
xor
xor
and
dec
or
pop
pop
jp
push
ins
inc
sub
push
inc
jae
ss
test
mov
lods
xchg
push
aaa
mov
sbb
adc
add
inc
into
dec
in
int3
in
sbb
jbe
or
mov
dec
ins
push
js
jp
mov
dec
test
bound
and
jmp
and
push
ja
shr
cs
sbb
inc
push
repnz
mov
and
push
fisub
push
mov
cwde
test
sbb
pop
inc
inc
inc
xor
mov
xchg
push
pop
push
mov
adc
stos
mov
add
xchg
fidivr
xchg
call
push
retf
rcr
pusha
dec
inc
in
call
adc
push
ins
push
les
jbe
cmp
fidiv
or
cmp
jp
or
mov
dec
or
inc
mov
and
xchg
xor
push
push
sub
xchg
call
aaa
add
or
or
sub
push
and
outs
inc
outs
jb
movs
jbe
xor
or
ss
je
mov
movs
retf
adc
test
pop
dec
dec
add
loop
dec
or
xor
jns
cwde
bound
fidiv
gs
inc
pop
shl
cmp
outs
data16
adc
push
gs
push
push
xor
shl
cmp
push
cmp
pop
and
mov
jo
xchg
push
dec
jl
xchg
add
dec
ret
lock
mov
mov
fidiv
test
nop
mov
movs
enter
jmp
pop
push
inc
ins
jecxz
stos
add
imul
xchg
arpl
loop
(bad)
fs
cmp
push
xchg
push
jb
outs
clc
ret
jo
add
fadd
xor
cs
push
add
ja
xor
dec
xor
mov
mov
les
mov
test
pushf
add
dec
sahf
jbe
imul
ins
add
jp
dec
adc
mov
test
xchg
adc
xlat
dec
dec
inc
xor
mov
jae
popa
adc
js
inc
jo
pushf
mov
xchg
sahf
js
and
sub
bound
stos
jecxz
dec
push
push
jb
mov
jmp
add
mov
xor
or
stos
repnz
call
sub
je
call
pop
push
bound
stos
mov
push
(bad)
dec
add
data16
or
push
loop
js
rcl
sbb
adc
sub
nop
pusha
and
inc
jmp
test
popa
(bad)
adc
test
test
inc
xor
in
mov
adc
inc
inc
adc
data16
in
and
test
inc
jo
inc
lods
sbb
(bad)
jo
stos
sbb
lea
push
push
xor
daa
hlt
inc
push
jne
pop
and
xchg
xchg
cwde
push
inc
dec
outs
push
inc
dec
inc
int3
test
push
push
pop
sbb
mov
je
sub
dec
xor
push
cmp
arpl
add
cmp
jb
inc
es
ss
add
movs
jp
push
jo
add
js
ret
add
add
adc
inc
cdq
sbb
sahf
fwait
inc
adc
test
in
ror
jl
add
(bad)
lock
push
stos
pop
inc
inc
dec
dec
jo
sbb
arpl
repnz
daa
xor
or
dec
sub
inc
dec
or
push
pop
sub
add
cmp
test
daa
aad
inc
out
jne
xchg
xchg
push
dec
inc
mov
in
mov
push
jbe
sub
mov
aaa
push
add
es
and
into
adc
dec
sub
push
repnz
adc
push
cmp
addr16
xor
xor
lea
and
xor
and
mov
push
call
dec
ficomp
xor
pushf
ss
gs
and
mov
(bad)
mov
mov
xchg
mov
push
and
and
mov
lock
mov
dec
cmp
add
add
scas
(bad)
gs
xor
bound
and
retf
push
call
ja
or
push
dec
add
les
inc
xor
adc
push
xchg
movs
xchg
arpl
adc
or
lods
add
add
fs
push
inc
hlt
push
dec
adc
dec
inc
inc
pop
loop
inc
adc
mov
loop
pop
xor
mov
or
xor
push
push
test
fmul
sub
mov
ins
inc
retf
push
and
xchg
aad
je
xor
aad
test
inc
popa
out
jb
in
add
imul
jmp
jns
mov
dec
adc
mov
rol
js
cmp
stos
bound
aad
add
sahf
xor
pop
aam
mov
mov
dec
outs
adc
aaa
push
jle
inc
dec
cdq
sub
xor
test
movs
mov
push
push
cmps
push
or
add
adc
push
mov
shr
dec
mov
test
or
add
lock
ja
outs
ret
bound
push
add
add
nop
inc
dec
jecxz
add
mov
mov
xchg
xor
nop
push
xor
jae
xchg
xchg
and
mov
and
(bad)
js
inc
push
and
dec
sub
push
and
test
sub
pop
and
leave
xchg
mov
or
push
cld
ins
or
mov
fidiv
inc
dec
fidiv
xchg
and
jbe
inc
dec
frstor
mov
sbb
shl
xor
pushf
sbb
ss
pop
je
xor
aam
mov
adc
push
adc
xor
cli
cmp
nop
xchg
xchg
add
xchg
dec
lods
jae
jne
adc
js
dec
inc
shl
and
dec
retf
inc
add
mul
or
mov
imul
fsub
xor
xor
pusha
gs
or
mov
xchg
push
(bad)
dec
imul
fwait
mov
dec
cmp
xor
and
test
jno
xchg
sbb
pusha
xor
and
push
jae
push
adc
pop
hlt
fs
cmp
inc
jbe
or
sbb
inc
test
xor
or
lods
pop
push
push
dec
xchg
mov
inc
push
popa
or
sub
ds
push
sub
push
fsubr
xchg
rol
int3
cmp
fst
mov
jno
jo
or
sar
xchg
push
aam
and
bound
gs
int3
or
fdiv
cmps
bound
push
mov
test
arpl
add
pop
fisubr
jmp
cmp
nop
push
pusha
xor
es
push
and
mov
inc
retf
dec
inc
pusha
xor
mov
jb
push
test
ss
sub
or
inc
ja
adc
fisubr
push
fs
adc
inc
xor
dec
mov
out
push
or
or
call
sbb
inc
xor
aam
mov
fcomp
jp
cwde
inc
cdq
xchg
xchg
(bad)
in
fcom
test
(bad)
mov
pop
jno
xchg
xor
add
sar
mov
push
je
xor
and
retf
cmp
or
fwait
scas
cmp
xchg
cli
xor
and
mov
push
int3
dec
dec
imul
test
mov
mov
ins
and
mov
dec
pop
ss
mov
cmp
inc
fs
adc
and
push
vptestnmb
or
imul
add
mov
sub
inc
dec
xor
inc
dec
inc
jle
leave
and
cdq
cmps
mov
jle
call
data16
mov
stos
mov
pushf
push
fsubr
aaa
cmp
add
or
inc
pop
sbb
push
dec
dec
sub
js
push
add
div
dec
repnz
push
outs
adc
inc
add
pusha
jne
add
inc
add
push
xor
test
push
jo
push
ret
push
push
xor
and
repnz
in
out
push
imul
xor
dec
jb
add
and
gs
cwde
call
js
addr16
and
mov
dec
jbe
jo
(bad)
jb
bound
push
or
adc
out
mov
adc
mov
nop
pop
jb
sahf
cmp
inc
pop
mov
les
js
dec
or
pushf
fcom
push
pop
push
xchg
xchg
aam
and
xor
push
ss
es
add
call
push
mov
in
mov
arpl
push
push
push
call
je
bound
pushf
push
jmp
dec
inc
fimul
sub
cmps
bound
lods
push
push
fsub
movs
add
aaa
shl
imul
ins
adc
mov
push
jne
sbb
cmp
dec
test
add
popa
cmp
add
adc
adc
test
shl
mov
pushf
rol
pushf
ficom
xchg
jo
mov
nop
les
fsub
in
adc
lds
popa
mov
push
movs
push
shl
mov
in
xor
inc
ss
dec
sub
pop
push
cwde
sbb
les
and
test
add
and
adc
pop
add
test
pop
loope
or
cmp
mov
inc
pop
inc
mov
nop
jp
jbe
pop
and
aaa
and
cmp
xchg
sub
inc
add
in
xchg
ror
cmp
ret
ror
xor
sbb
outs
xor
push
mov
or
add
inc
ret
cwde
push
push
sub
push
ret
mov
adc
dec
xor
xor
test
ds
sub
sahf
ja
xor
retf
push
les
jns
or
jbe
cmp
dec
push
in
gs
out
test
int3
jb
cld
or
cdq
test
fidiv
cmp
adc
or
dec
cmp
cmp
mov
ins
push
dec
ins
sub
push
mov
xor
aaa
push
or
add
fs
dec
inc
lock
es
adc
bound
ret
push
or
popa
mov
add
jbe
jo
fmul
push
dec
jmp
fcom
and
inc
aam
or
dec
sub
or
add
ret
loop
dec
push
mov
(bad)
jo
pop
mov
pop
jo
inc
and
and
dec
cwde
add
push
pop
(bad)
jmp
mov
arpl
nop
jo
push
add
nop
add
pop
fiadd
mov
test
loop
popa
jae
mov
sub
mov
ins
lock
aad
mov
bound
cs
push
mov
jo
bound
fiadd
or
push
fisub
loop
inc
inc
or
data16
push
adc
adc
loop
fs
mov
xchg
or
daa
cmc
xor
push
enter
dec
es
jo
pop
popa
rcl
push
add
js
add
cmps
add
mov
enter
cmp
arpl
dec
rol
leave
lods
sbb
inc
and
add
mov
aam
fs
shr
and
call
ret
push
dec
or
mov
push
add
jb
data16
inc
cmp
sahf
dec
ins
and
mov
xchg
jo
push
jns
addr16
add
adc
mov
adc
push
xchg
push
xor
cmp
push
inc
les
xor
jno
and
cmp
stos
push
adc
jp
loop
or
enter
cmp
aam
test
inc
js
xor
xor
jne
clc
ins
dec
rcl
xor
gs
shl
push
mov
pop
imul
or
and
call
js
jmp
adc
lods
adc
dec
xor
ss
sahf
pop
int3
mov
out
and
cwde
xor
retf
inc
pop
sub
leave
sbb
test
ror
sbb
jp
arpl
adc
push
sbb
loop
push
inc
xor
or
lods
xlat
xchg
ret
inc
mov
fs
mov
inc
popf
mov
inc
pusha
xchg
inc
add
outs
pusha
bound
aaa
test
add
mov
ds
sbb
pop
rol
data16
test
push
fsub
xor
xor
or
push
out
xor
and
out
xor
outs
dec
inc
aaa
movs
mov
inc
and
sub
and
test
jns
mov
jb
xor
xor
xor
and
sbb
push
push
push
or
gs
aaa
jne
push
adc
cli
ins
imul
shr
dec
stos
sub
or
or
pop
push
cmp
ss
sub
mov
out
ins
xchg
dec
inc
push
adc
int3
xchg
adc
loope
add
sahf
jno
cmp
inc
ja
push
rol
dec
es
push
mov
jne
jne
push
or
or
repnz
cmp
adc
test
loopne
test
xor
or
call
rcl
xor
jo
inc
mov
add
and
inc
push
test
ja
add
shl
pop
jne
call
dec
inc
ret
pushf
add
and
xchg
ins
mov
je
xor
dec
push
lea
dec
push
pop
xor
xor
sub
push
push
dec
pop
sbb
or
inc
gs
pop
sub
push
inc
xor
ja
xor
adc
rol
or
loop
in
bound
call
pop
or
or
adc
retf
adc
push
xchg
pop
les
dec
push
mov
mov
bound
cmp
bound
push
add
mov
je
xor
push
data16
jb
inc
add
in
xchg
push
add
inc
fs
retf
adc
or
adc
cmp
mov
xchg
xor
push
mov
call
fisubr
sub
ficom
push
or
xor
cs
push
xchg
xor
jmp
dec
mov
outs
dec
mov
rcl
inc
fiadd
sbb
call
inc
int
fs
sbb
dec
sbb
rol
inc
dec
enter
mov
or
jo
daa
gs
cmps
ss
arpl
nop
xchg
xor
inc
pop
add
rcl
dec
push
lods
mov
loop
call
sahf
pusha
push
fmul
inc
ret
or
mov
adc
pop
add
nop
adc
lea
mov
xchg
push
jle
idiv
inc
mov
pop
xor
je
test
arpl
or
mov
cmps
mov
dec
test
inc
pop
int3
mov
div
int3
or
pop
retf
cdq
add
push
mov
add
ss
test
and
les
push
sub
imul
gs
mov
mov
push
cmp
sub
push
adc
jp
inc
sub
bound
push
addr16
mov
js
pop
inc
inc
pop
adc
mov
ret
popa
pop
xor
push
inc
jmp
add
cmps
mov
inc
bound
shr
xor
loop
bound
rcl
shl
pop
push
add
pop
push
or
mov
imul
xor
and
dec
(bad)
push
sub
adc
xchg
ja
xor
inc
xor
call
xor
push
or
push
pop
es
or
cmps
lock
xchg
mov
ins
rcl
dec
jae
push
inc
jo
ror
push
or
les
mov
sub
popa
push
les
inc
sahf
movs
fs
jb
nop
outs
push
pop
and
fsub
outs
push
jne
lods
xor
ins
adc
jp
mov
ror
imul
mov
inc
imul
mov
add
sub
add
inc
mov
cwde
push
inc
cmp
xchg
dec
push
jns
cwde
push
xchg
add
rcl
jae
adc
pusha
xor
mov
cmc
sub
call
mov
dec
mov
add
dec
bound
clc
jmp
es
push
jb
inc
jns
sbb
add
outs
xor
cmp
dec
or
ret
shl
push
hlt
and
inc
data16
pusha
xchg
inc
js
dec
inc
push
inc
sbb
pusha
ss
pushf
xor
inc
or
add
xor
shl
cmp
ins
dec
sbb
ja
popa
sbb
mov
push
jle
inc
inc
or
sub
fwait
mov
jno
popa
inc
or
mov
popa
loop
jp
sbb
push
imul
and
sar
add
add
stos
push
mov
push
and
dec
push
add
sbb
xor
retf
push
sub
xchg
push
inc
in
ins
dec
or
adc
xchg
jne
or
or
or
dec
mov
inc
dec
cmp
adc
add
add
arpl
es
jns
inc
sub
inc
fs
xor
sub
mov
dec
inc
imul
and
imul
xchg
bound
in
push
push
popa
xor
sahf
ror
and
or
and
shl
push
xchg
sbb
xor
push
sbb
dec
mov
add
adc
dec
(bad)
adc
dec
and
je
sub
sub
pop
sub
test
inc
inc
push
fimul
mov
inc
fisubr
push
daa
mov
dec
dec
jmp
push
push
fs
aam
push
and
test
inc
inc
cmps
in
add
imul
mov
push
inc
push
dec
add
mov
dec
dec
cmp
and
in
push
xchg
add
bound
add
adc
mov
imul
ja
loopne
stos
inc
push
inc
dec
jae
dec
bound
test
ret
test
sbb
xor
dec
sbb
xor
out
bound
fiadd
and
imul
dec
jb
ret
je
cmp
push
or
cmp
xor
push
or
popa
loopne
sub
js
mov
retf
cs
sbb
and
push
call
out
arpl
clc
enter
outs
outs
push
xchg
test
jno
dec
push
test
jmp
es
adc
jge
call
clc
or
imul
into
nop
ins
jp
sub
aaa
sub
jne
inc
mov
xor
and
push
(bad)
test
or
(bad)
retf
xor
mov
mov
idiv
dec
jmp
sub
js
xor
mov
jne
lods
outs
push
sahf
inc
jbe
test
sbb
push
dec
ret
dec
push
data16
pusha
mov
adc
push
inc
dec
xor
add
mov
xchg
mov
jmp
in
jae
cmp
test
sbb
sub
push
and
sbb
mov
loop
in
push
dec
pop
push
xor
adc
data16
push
sbb
add
add
loop
ret
pop
out
dec
xchg
or
dec
retf
add
sub
push
ret
sbb
sbb
or
clc
jl
add
jno
sbb
nop
inc
lods
or
fs
push
jecxz
clc
push
dec
dec
push
or
mov
dec
jno
dec
or
loopne
push
and
push
hlt
pop
mov
es
enter
push
test
dec
jb
in
imul
xor
adc
cwde
mov
sub
xor
jb
inc
add
dec
inc
or
cmp
sbb
inc
push
push
push
add
xchg
neg
pusha
cli
mov
pusha
popa
mov
mov
inc
dec
les
xor
xor
push
fs
and
inc
mov
je
xor
mov
dec
inc
ret
mov
xchg
mov
repnz
add
test
sar
enter
mov
sbb
mov
add
jb
cld
jno
pop
dec
xchg
push
and
inc
add
inc
fdiv
bound
mov
sub
push
out
adc
dec
jp
push
int3
les
inc
gs
pusha
hlt
add
adc
mov
add
mov
and
rol
mov
enter
or
push
push
movs
push
bound
movs
cmp
aaa
aam
and
push
xor
xchg
xor
dec
and
in
add
push
xor
xor
mov
es
mov
mov
xor
inc
cli
xchg
xchg
aam
rcl
mov
aam
gs
dec
or
retf
add
bnd
data16
inc
mov
dec
xor
and
add
xor
inc
mov
inc
outs
pusha
arpl
mov
cmp
imul
(bad)
jb
mov
adc
popa
ficom
inc
sub
test
into
mov
jbe
and
jae
dec
ret
xor
dec
jbe
xor
sbb
int3
mov
cmps
out
jo
leave
or
dec
rcl
cmps
test
and
call
sub
jno
inc
push
test
cwde
xchg
popa
jo
stos
dec
and
data16
ins
loopne
push
pusha
mov
xor
ficom
jne
jbe
and
popa
pop
and
xor
inc
or
and
je
inc
xchg
push
fcmovbe
dec
imul
shl
mov
aam
outs
or
xchg
fwait
test
xchg
nop
nop
cmps
lock
xchg
or
enter
jbe
dec
jb
mov
dec
pop
inc
add
movs
in
fisubr
lods
xchg
imul
mov
sbb
jl
xor
imul
dec
cld
inc
pop
xor
push
ss
add
in
jb
inc
ins
cmp
imul
inc
retf
cmps
cmp
dec
dec
dec
add
pusha
dec
aaa
or
xchg
imul
inc
dec
push
push
push
sub
aam
jo
inc
dec
jo
int3
xor
push
(bad)
jo
retf
dec
arpl
sbb
je
push
mov
jmp
bound
dec
jne
cld
dec
je
mov
clc
xor
xchg
inc
fisub
pushf
dec
sub
call
cs
xor
xchg
mov
test
pusha
popa
add
sbb
retf
outs
push
mov
push
push
nop
dec
jb
ss
sub
jno
data16
fld
mov
jo
ja
arpl
xor
xor
loopne
mov
dec
popa
inc
jl
adc
sbb
test
sbb
retf
arpl
mov
push
or
sbb
pop
push
push
push
ficom
xchg
adc
call
xor
push
or
xchg
sub
adc
nop
test
push
pop
sbb
out
push
add
pop
ja
or
jo
dec
push
inc
popa
add
data16
sub
or
rol
js
xchg
cmp
adc
mov
add
inc
and
loope
movs
add
mov
movs
push
hlt
inc
sbb
xchg
mov
push
js
leave
rol
push
mov
cdq
aam
and
js
xchg
gs
je
mov
ss
pop
je
jae
in
shl
dec
mov
or
jo
fsubr
jp
push
push
push
cdq
dec
enter
mov
test
add
sbb
mov
out
push
push
mov
or
and
push
inc
test
cdq
mov
mov
dec
jo
mov
jno
mov
inc
xor
popa
push
in
inc
movs
mov
ficom
pop
inc
inc
retf
mov
cwde
push
cmp
ja
push
and
mov
imul
add
cmps
push
mov
fmul
add
xchg
push
cmps
stos
push
or
push
nop
adc
pop
cs
mov
inc
test
push
pop
xchg
dec
test
and
adc
add
cmp
mov
sub
mov
jbe
mov
add
sbb
ins
xor
push
xchg
xor
and
mov
test
(bad)
xchg
shl
cwde
fs
mov
and
ret
or
je
ins
outs
push
push
adc
or
cmp
or
inc
mov
sub
les
inc
popf
mov
adc
cmps
ins
sub
inc
loope
mov
sbb
add
dec
aaa
bound
push
dec
jp
dec
dec
push
add
int3
cs
hlt
aad
loopne
dec
jb
dec
(bad)
or
xchg
sbb
repnz
dec
adc
adc
shl
mov
add
mov
aaa
inc
(bad)
ins
sbb
jbe
inc
imul
mov
push
test
cli
mov
or
imul
xchg
and
add
sahf
push
sbb
cs
or
adc
and
push
rcl
add
dec
into
xchg
push
outs
adc
adc
cmp
pop
inc
arpl
adc
bound
push
clc
xor
test
and
retf
loope
and
xchg
mov
add
jo
ret
pop
retf
out
loopne
mov
pushw
inc
dec
and
or
movs
ins
adc
jb
inc
shl
xor
add
mov
mov
adc
xchg
add
pop
lea
mov
jbe
into
xor
inc
xchg
inc
xchg
push
or
fcom
jbe
stos
popa
pop
jbe
and
mov
mov
push
mov
inc
inc
scas
dec
and
inc
sub
dec
rcr
xchg
retf
cwde
cmp
add
inc
rol
adc
inc
(bad)
(bad)
dec
dec
pushf
imul
or
push
pop
mov
mov
loopne
xchg
or
push
push
push
movs
pop
push
imul
jno
cmp
test
sbb
xor
xor
in
adc
or
or
test
dec
imul
pop
or
pop
and
xor
cmc
sub
jne
ss
adc
add
pop
jo
inc
mov
je
xor
outs
inc
push
push
xchg
mov
mov
mov
and
mov
push
rcl
sub
inc
arpl
sbb
nop
jo
rcl
ins
ds
cs
xchg
pop
stos
bnd
adc
pop
jo
mov
imul
arpl
pop
mov
jbe
gs
xchg
sbb
jne
sub
push
mov
sbb
xor
sub
xor
ss
fsub
sub
ss
dec
popa
call
mov
or
mov
nop
push
add
cld
sbb
mov
ins
inc
push
(bad)
fs
add
bound
inc
add
mov
lods
jb
jns
test
scas
push
inc
or
call
cmps
into
and
adc
aaa
inc
or
imul
push
inc
xor
fimul
push
push
test
mov
fiadd
inc
inc
and
adc
and
inc
lahf
add
push
or
inc
and
and
mov
cld
dec
mov
jmp
xor
dec
or
test
mov
dec
das
(bad)
gs
xchg
inc
inc
push
cmps
aaa
sbb
add
bound
movs
inc
gs
sbb
sub
push
retf
shr
xchg
lods
push
fdivr
pusha
push
and
push
pop
inc
cli
test
mov
mov
jb
add
push
pusha
inc
or
jae
mov
mov
rol
bound
popa
dec
or
or
data16
sub
and
push
xchg
mov
pop
mov
push
rcr
lods
sub
mov
xchg
or
rol
mov
or
cmps
ins
jb
inc
ja
inc
dec
push
push
jp
aad
jb
ins
bound
push
and
inc
bound
adc
inc
dec
dec
xor
(bad)
stos
and
jno
jae
aam
add
ins
dec
push
xlat
addr16
in
mov
outs
push
test
push
imul
dec
mov
dec
cld
mov
add
or
xchg
and
dec
imul
inc
fs
dec
ret
jbe
cwde
mov
leave
and
adc
mov
(bad)
jae
pop
inc
mov
pop
test
cmp
pop
cmp
add
es
add
inc
xchg
or
ins
test
push
xchg
push
inc
adc
aad
mov
shl
pop
inc
ror
bound
fsubr
adc
rcr
or
inc
je
inc
mov
ret
xor
test
or
mov
ror
cmp
addr16
pusha
mov
dec
mov
ss
loop
mov
repnz
push
les
(bad)
ins
gs
js
xor
loop
outs
add
jne
xor
and
cwde
in
idiv
sub
sbb
inc
test
inc
scas
inc
inc
jl
rol
out
dec
shr
fs
pusha
pop
dec
mov
ins
push
xor
sub
fadd
es
jmp
ins
test
jbe
cs
data16
pusha
ret
push
lods
cmp
add
clc
and
ins
je
pop
add
(bad)
ss
inc
push
sub
inc
out
xor
xor
addr16
add
push
xchg
sub
pop
ja
arpl
add
xor
rcl
push
sub
or
push
les
or
jno
dec
inc
xor
add
sbb
popa
dec
cld
jp
sub
aad
cmp
inc
jne
ret
dec
mov
jb
movs
push
mov
mov
inc
cmps
pusha
and
sbb
outs
jl
stos
xchg
xchg
xchg
adc
xor
je
and
push
mov
push
xor
add
jl
xor
adc
imul
jl
adc
add
mov
mov
push
outs
leave
and
enter
inc
mov
add
xor
test
les
xor
sbb
adc
movs
sub
dec
leave
sbb
inc
inc
pushf
push
js
inc
adc
dec
adc
inc
jb
nop
or
pusha
je
xchg
scas
xchg
sbb
xor
cmps
and
xor
mov
call
or
push
dec
call
aam
leave
push
in
push
xchg
ins
js
xor
bound
pop
push
lock
push
push
mov
push
pop
xchg
or
inc
dec
inc
ret
je
addr16
add
pop
retf
adc
gs
js
pop
xchg
ret
adc
xchg
adc
pusha
ror
dec
inc
push
push
(bad)
les
sub
add
sub
ins
and
push
call
xor
outs
dec
dec
fmulp
pop
push
push
push
add
dec
jb
dec
ins
ror
pop
loopne
dec
push
pop
or
fwait
pop
sbb
push
inc
jb
cld
or
push
nop
shr
loopne
mov
add
xor
shl
(bad)
jo
rol
loopne
call
sub
or
es
dec
lods
mov
and
dec
inc
outs
jb
mov
push
ja
gs
(bad)
xor
xor
push
jo
push
bound
xor
fwait
or
and
push
imul
daa
inc
inc
inc
call
xchg
test
inc
push
push
enter
scas
adc
or
mov
repnz
scas
push
imul
mov
sbb
rcr
test
inc
sbb
add
jle
or
popa
push
adc
push
pop
inc
push
mov
cmps
call
test
stos
fs
scas
add
add
rcl
push
jns
imul
fsubr
or
and
push
xor
movs
cmp
bound
test
cwde
je
js
or
mov
dec
push
and
imul
mov
js
push
push
outs
stos
add
sbb
adc
cs
xor
or
cmps
xor
mov
xchg
inc
and
retf
loope
and
mov
ds
ss
or
xor
inc
jle
and
add
dec
dec
call
adc
dec
dec
push
xchg
ins
push
xor
push
adc
mov
in
(bad)
ja
add
mov
cmp
inc
js
pop
push
int3
jbe
push
rol
adc
sbb
xor
or
cli
adc
dec
push
push
sbb
ret
push
push
arpl
push
pop
jo
lods
xor
or
push
jae
add
cdq
out
jbe
push
add
adc
adc
les
add
scas
imul
jo
call
push
cmps
data16
add
stos
shl
es
jne
or
and
shl
xchg
inc
push
data16
add
mov
fidiv
aam
sub
in
retf
or
inc
call
or
or
sub
mov
dec
nop
mov
xchg
rcl
jne
pop
sub
xchg
dec
jno
loop
mov
adc
cmp
or
dec
aad
loop
dec
push
push
inc
dec
inc
inc
xor
mov
add
(bad)
xor
sub
mov
push
aaa
dec
xchg
mov
adc
jp
cmp
and
and
push
ins
es
adc
sub
push
inc
xchg
push
jp
xchg
jo
add
test
lock
fisubr
mov
xor
int3
inc
push
in
or
inc
jo
dec
adc
add
and
aaa
imul
mov
jae
push
push
movs
popa
push
push
pusha
sbb
test
add
addr16
push
rol
add
loop
ins
inc
cs
dec
loope
dec
and
inc
inc
pop
jns
fs
add
scas
inc
test
adc
add
cs
dec
push
add
inc
shl
dec
mov
or
dec
pop
in
mov
stos
dec
sbb
repnz
jno
outs
and
mov
mov
pusha
xchg
jbe
adc
adc
xchg
or
mov
lock
es
mov
or
outs
or
and
sbb
inc
popa
and
sbb
mov
dec
push
xchg
imul
ja
add
retf
dec
fs
add
stc
pop
inc
dec
push
retf
adc
cwde
or
pop
dec
mov
retf
pusha
or
push
aam
add
push
mov
outs
adc
inc
mul
dec
dec
mov
je
movs
mov
cmps
jbe
imul
test
xchg
push
cmp
cmp
jo
push
dec
pop
and
cmp
sub
test
push
test
ror
xor
mov
push
sbb
push
cmp
ins
inc
test
jne
ret
add
shl
and
scas
fisubr
es
dec
jo
aaa
loopne
pop
push
and
cli
xor
push
jo
mov
cmp
jp
les
clc
jae
push
mov
(bad)
mov
nop
adc
xor
adc
sbb
pop
dec
mov
out
outs
dec
push
xor
push
bound
adc
mov
xor
push
and
ja
pop
push
fld
mov
es
mov
nop
ss
push
push
ins
cld
dec
or
ins
xchg
dec
dec
inc
es
fdivp
test
int3
adc
mov
je
lods
lods
adc
push
push
jb
les
sub
mov
sbb
push
js
inc
push
xchg
xor
jne
jne
popa
jl
cwde
addr16
and
fs
(bad)
test
dec
dec
aad
pop
mov
cmps
jno
xor
retf
or
and
outs
push
xchg
inc
add
adc
xchg
ror
push
cwde
fsub
push
sbb
bound
cmp
outs
sbb
push
aam
inc
mov
add
test
pop
mov
jno
and
shl
bound
adc
dec
aam
jbe
data16
addr16
mov
mov
fs
and
add
inc
inc
add
mov
sub
outs
test
ins
push
xor
sbb
push
and
dec
dec
and
mov
or
push
xchg
xchg
xor
ins
dec
add
rcr
and
shl
cmp
dec
sub
sbb
cmp
dec
add
push
stos
add
mov
push
ins
pop
dec
dec
dec
push
dec
xor
xor
int3
push
xchg
dec
dec
xchg
inc
bound
mov
js
cmps
push
les
mov
or
xor
inc
gs
mov
and
pop
mov
push
mov
mov
mov
pop
pushf
or
dec
enter
call
enter
pop
or
push
test
add
push
sbb
ficomp
pop
aaa
jle
outs
dec
inc
dec
inc
xchg
sub
sub
push
xor
push
les
or
push
push
mov
or
and
and
push
dec
lock
dec
jb
push
mov
outs
inc
inc
adc
lods
inc
add
(bad)
les
mov
pop
mov
push
popa
aam
addr16
and
mov
imul
and
mov
or
adc
test
dec
wbinvd
test
xor
pop
or
or
xor
push
sub
and
mov
(bad)
movs
xor
push
test
xor
bnd
(bad)
or
inc
pop
cld
push
push
push
retf
push
or
inc
dec
or
dec
mov
pushf
mov
cmp
enter
xor
mov
xor
cs
sub
push
sbb
xor
inc
ds
or
adc
xchg
pop
xchg
xchg
not
mov
fadd
ins
adc
ret
xchg
mov
inc
dec
mov
add
cmp
xchg
push
jbe
cwde
pop
mov
push
and
into
enter
dec
mov
push
test
adc
mov
add
fs
push
pop
dec
add
(bad)
dec
ins
mov
sbb
push
arpl
adc
cs
arpl
fadd
in
mov
dec
xor
mov
xor
push
cmp
jmp
dec
push
ror
sub
inc
mul
or
push
mov
clc
jae
aaa
sbb
and
push
ja
add
push
aam
push
sbb
test
js
(bad)
out
imul
dec
push
call
and
nop
or
rol
inc
mov
pushf
or
mov
or
dec
xor
stos
sub
cs
dec
inc
push
push
sub
push
push
or
out
imul
jo
push
push
shr
cwde
and
and
test
sub
sub
push
arpl
inc
dec
add
xor
add
xor
mov
push
lods
dec
jo
or
leave
(bad)
jbe
mov
cmp
aam
sbb
je
cmp
jmp
pusha
dec
popa
ret
stos
sub
ficomp
outs
dec
sbb
test
push
(bad)
or
push
mov
inc
rol
inc
add
enter
mov
adc
inc
jl
dec
push
add
mov
ins
shl
xor
fisubr
cmps
push
add
les
add
in
push
fadd
call
or
mov
xchg
jbe
add
pop
sub
add
bound
shl
pop
inc
push
lods
xchg
dec
cli
cli
mov
add
sbb
jno
fs
rol
add
stos
fmul
es
push
aam
mov
adc
popa
add
pop
inc
outs
and
inc
push
je
xor
(bad)
aaa
arpl
push
data16
xchg
xchg
es
ror
ins
fadd
ins
or
xchg
rcl
jo
hlt
outs
movs
je
jbe
aaa
jo
outs
cmp
cs
pop
out
push
and
sub
cs
xor
dec
pusha
dec
scas
popa
arpl
imul
dec
sbb
add
dec
sub
dec
outs
add
adc
xor
or
and
xor
adc
cmps
sbb
xchg
xor
dec
jo
push
dec
pop
cs
popf
adc
bound
shr
push
ja
sub
sbb
mov
imul
mov
cmp
and
ds
movs
adc
sub
and
test
push
gs
js
or
sbb
adc
jb
pop
sbb
(bad)
dec
popa
cli
call
(bad)
push
imul
mov
jbe
adc
in
mov
sbb
xchg
sbb
into
imul
sub
mov
cmp
mov
and
shl
inc
mov
fs
inc
sbb
sbb
lock
sub
jmp
dec
adc
xchg
mov
ss
movs
mov
mov
adc
jno
push
push
push
or
aam
add
push
dec
ret
xor
stos
inc
into
dec
rcl
add
push
inc
cmp
outs
inc
push
and
mov
fs
arpl
ficomp
adc
call
aam
mov
push
(bad)
rol
xor
or
pushf
ins
dec
sub
push
mov
push
pushf
or
jo
je
adc
adc
mov
add
mov
sbb
aam
pop
test
and
scas
xor
push
jne
mov
aad
xchg
ins
cmp
outs
inc
mov
mov
push
mov
sub
xchg
adc
mov
add
jbe
inc
bound
xor
sahf
dec
arpl
or
inc
and
data16
repnz
add
movs
imul
jns
or
in
inc
(bad)
jle
or
xor
and
in
mov
adc
ins
scas
sub
pusha
mov
inc
dec
rcl
push
les
pusha
lods
inc
stos
jns
dec
ret
sbb
gs
aam
dec
xchg
xchg
movs
mov
gs
into
movs
stos
add
push
jae
mov
jb
push
push
or
add
rol
or
addr16
and
and
dec
sbb
xchg
mov
ss
jo
pusha
push
call
pop
popa
(bad)
pop
push
xor
or
es
adc
aam
push
pop
mov
xchg
test
xchg
xor
sbb
push
jb
outs
out
or
xchg
and
inc
out
inc
outs
xor
data16
sbb
push
pusha
or
aad
imul
dec
mov
loopne
mov
adc
sbb
bound
test
outs
jp
pusha
adc
or
je
ficom
jp
push
mov
dec
xchg
adc
push
pop
js
ror
mov
push
leave
add
xchg
add
push
ins
pop
cmp
and
xchg
dec
mov
out
mov
out
jp
xor
ret
fidiv
pop
aaa
xor
sub
test
xchg
cmp
inc
pop
sub
ds
cld
mov
or
mov
test
add
add
xchg
retf
bound
ins
push
sbb
mov
push
dec
shr
shl
pop
enter
jb
and
adc
addr16
call
pop
push
jl
dec
sbb
push
mov
call
es
dec
fsubr
nop
add
aam
or
adc
push
dec
add
sbb
push
add
pop
xchg
jo
mov
pop
dec
sub
adc
xor
scas
adc
cs
int3
movs
fisubr
test
xor
cwde
lods
dec
add
es
or
idiv
retf
xchg
pop
and
aam
pop
or
or
aaa
popa
sbb
lock
fidiv
jne
and
ins
add
dec
jo
xor
dec
dec
ja
ror
or
loopne
xchg
sub
and
bts
sub
mov
mov
outs
dec
push
aam
movs
and
sub
xchg
add
pop
data16
dec
adc
dec
es
aaa
add
jno
push
fadd
push
mov
addr16
pop
outs
test
fwait
test
retf
add
inc
sbb
inc
shl
xor
mov
push
inc
push
or
es
mov
sbb
cld
pop
dec
ret
mov
add
dec
sub
sahf
and
popa
fsub
inc
loop
imul
xor
shr
lods
xor
js
xor
jo
pusha
dec
push
mov
xchg
adc
push
call
add
push
or
mov
or
mov
js
mov
js
es
push
cwde
jb
jae
add
retf
inc
es
movs
or
xor
inc
outs
xor
stos
dec
outs
push
push
or
and
jns
sbb
push
fs
jne
push
ss
jno
mov
dec
gs
dec
mov
xor
mov
pop
push
xchg
inc
dec
test
nop
test
dec
les
or
and
cmp
inc
js
xchg
add
push
jecxz
inc
ins
mov
xor
ins
imul
push
out
fmul
mov
inc
les
dec
add
inc
dec
add
enter
mov
and
pop
add
inc
add
loop
and
xchg
test
outs
ret
fidiv
or
fild
test
pop
push
xor
and
rol
sbb
xor
loopne
jo
xchg
add
xchg
in
je
push
dec
cmps
mov
push
adc
(bad)
bnd
hlt
adc
ret
je
test
xchg
cmp
pusha
pusha
call
inc
push
mov
test
addr16
dec
jo
dec
inc
sbb
fcmovb
es
ret
sub
pop
sbb
imul
xor
push
stos
xor
add
pop
push
outs
sbb
push
dec
into
js
outs
add
je
xchg
dec
js
sbb
or
add
popa
cs
dec
adc
rcl
adc
jne
xchg
loope
or
fs
dec
adc
(bad)
push
inc
ror
(bad)
xchg
rol
or
adc
test
pusha
inc
data16
inc
mov
scas
xor
sub
dec
sahf
dec
dec
jne
xor
ret
test
jbe
mov
push
add
sub
mov
push
cmp
or
(bad)
jecxz
ss
outs
cmp
dec
sbb
xor
pop
xchg
outs
jb
push
stos
xor
sub
rol
jae
jo
and
mov
sahf
fldenv
or
and
dec
and
jo
push
mov
mov
push
xor
jb
dec
xor
jo
inc
scas
push
cmps
nop
dec
xor
cld
outs
fld1
jo
aam
dec
loopne
and
loopne
xor
mov
xor
push
xor
jo
mov
xor
int3
xchg
addr16
jp
clc
mov
fs
hlt
(bad)
jo
mov
fmul
imul
or
add
push
or
or
inc
cwde
add
cmps
push
mov
pop
aaa
add
adc
and
popa
push
jo
mov
push
outs
jp
fsub
mov
push
aaa
inc
inc
xchg
cwde
nop
inc
or
inc
ss
push
inc
rcr
push
sub
mov
and
movs
push
and
sub
sub
inc
cs
call
call
push
int3
mov
or
inc
inc
jo
push
inc
dec
call
xor
pusha
inc
or
xor
adc
inc
inc
out
jb
ja
fwait
cmp
inc
and
inc
bound
sub
lea
outs
add
adc
cmps
or
xor
dec
je
je
nop
jo
(bad)
pop
push
inc
and
scas
popa
push
pusha
push
arpl
test
inc
pop
adc
jb
dec
inc
mov
jo
lods
xor
sbb
adc
cwde
lea
push
sbb
jns
push
push
push
call
push
xor
inc
mov
mov
mov
jmp
adc
loope
push
mov
inc
scas
aaa
mov
xor
push
lods
imul
or
inc
mov
clc
xor
stos
mov
or
dec
(bad)
inc
test
bound
add
popa
add
xchg
add
ret
xor
add
shl
or
enter
rcl
jns
xchg
movs
sub
jo
pop
mov
xchg
loopne
push
les
add
adc
data16
add
imul
inc
jl
inc
test
xor
sub
imul
or
movs
sbb
or
addr16
mov
inc
add
les
sub
nop
add
xchg
push
jnp
xor
ja
xor
cwde
inc
mov
test
mov
fsubr
and
lods
shl
push
ss
push
xchg
shr
sub
int
bound
sub
sub
or
cwde
ins
dec
or
ins
mov
sub
adc
add
rcl
popf
xchg
in
shr
addr16
add
cdq
call
inc
xchg
sbb
test
shl
cmp
mov
aad
mov
push
aad
mov
adc
dec
add
adc
or
mov
xchg
imul
and
int3
xor
xchg
sub
inc
cs
xchg
xchg
lods
(bad)
xchg
loop
sub
jp
outs
movs
sub
cwde
mov
sbb
push
push
and
sub
out
mov
xor
mov
add
mov
or
inc
adc
ins
movs
mov
cmp
push
cs
aam
dec
xchg
mov
xchg
jp
xchg
inc
out
add
adc
and
xor
inc
inc
xchg
ret
ins
dec
enter
add
inc
inc
test
jo
loopne
pushf
les
and
mov
xor
sub
inc
mov
pop
fcmovu
cwde
outs
push
jb
cmp
bound
ins
imul
inc
inc
movs
aaa
xchg
sub
push
dec
mov
inc
cmp
inc
dec
jmp
dec
push
adc
aaa
ins
ror
jns
jb
xor
push
inc
inc
and
jb
inc
xchg
cmp
inc
mov
or
stos
dec
shr
std
and
outs
push
popa
inc
dec
xchg
adc
fcmove
adc
dec
xor
les
or
hlt
pushf
mov
mov
mov
test
call
sub
sbb
imul
popa
data16
adc
(bad)
test
mov
arpl
pop
dec
push
rcl
cmp
adc
or
pop
push
add
data16
retf
in
dec
sbb
test
mov
jb
adc
push
mov
jp
push
push
adc
jp
mov
mov
aam
xor
push
push
add
jb
xor
adc
sbb
jmp
cmp
js
mov
mov
mov
retf
add
xor
mov
sbb
jb
and
sahf
dec
push
cmp
dec
cwde
sub
push
pop
int
push
push
jbe
pop
gs
mov
inc
and
jmp
dec
cmp
outs
call
add
add
or
pusha
sub
cs
jne
xor
adc
jo
test
push
push
mov
inc
and
pop
aam
jbe
bound
inc
dec
mov
mov
stos
xchg
add
ds
xor
add
push
dec
ins
sub
daa
sub
or
ins
enter
xor
jne
popa
sub
cmp
xor
pop
pop
sub
add
and
(bad)
jo
adc
ins
mov
test
jbe
dec
dec
sbb
add
push
mov
pop
push
int3
nop
pop
inc
mov
xor
(bad)
mov
inc
and
ds
dec
cmp
and
and
fisub
test
ret
xchg
push
add
add
or
push
pop
jp
mov
inc
xor
ja
inc
test
mov
sub
cmp
pop
test
dec
fidiv
or
dec
shr
js
ja
push
fs
arpl
jne
shl
mov
sub
nop
pop
xor
out
dec
out
and
xor
xor
fiadd
push
xor
ret
cdq
add
jo
add
sub
or
retf
imul
mov
cld
xchg
mov
xchg
test
inc
je
and
sub
test
cmp
aam
and
inc
jo
inc
xor
loope
int3
xchg
xor
je
inc
sbb
cwde
inc
cmp
leave
hlt
xchg
ja
push
dec
or
and
xchg
and
xchg
sub
in
cmp
arpl
sbb
inc
mov
cmp
inc
aad
xor
mov
shl
call
push
sub
ins
clc
or
xchg
outs
js
dec
push
jo
push
adc
lea
lock
pop
and
xchg
push
je
adc
push
jae
mov
push
jne
je
imul
add
fidivr
imul
or
mov
push
ja
sbb
retf
pop
pop
mov
adc
inc
fcmove
test
ins
pushf
(bad)
mov
adc
arpl
cwde
test
push
jb
es
add
mov
add
and
imul
dec
pop
jb
xor
push
fcom
xor
inc
(bad)
outs
hlt
pop
test
and
pop
ins
fcom
cmps
sbb
data16
push
dec
shl
je
sub
scas
xchg
rol
leave
ret
mov
and
mov
js
xchg
(bad)
and
popa
add
xchg
stos
or
or
mov
je
and
push
jp
mov
add
ins
xchg
sub
nop
dec
ret
dec
data16
mov
sub
cmp
dec
push
in
xchg
test
add
or
push
adc
jb
xor
adc
jo
jo
mov
dec
loopne
xchg
cdq
add
ins
or
inc
jb
jb
loope
push
pop
xor
adc
pushf
push
fcmovu
dec
add
cmps
cmps
cmp
adc
or
and
or
cmps
inc
test
adc
mov
imul
dec
cdq
nop
dec
ins
xor
nop
mov
cmps
in
mov
pusha
rcl
ins
(bad)
push
push
dec
arpl
dec
dec
or
rcl
cmc
sbb
fcom
pop
add
jbe
lock
pop
sub
push
or
push
adc
dec
les
sbb
and
sub
ins
rcl
add
inc
jp
repnz
adc
loopne
push
data16
push
and
sbb
adc
dec
arpl
ins
dec
mov
test
shl
sub
ins
xor
pusha
movs
cmp
xor
adc
pop
out
push
xor
dec
adc
rol
xchg
sub
aam
or
popa
ins
mov
and
or
xor
out
mov
inc
ret
or
sub
rol
dec
bound
add
xchg
out
xchg
inc
add
ror
ins
imul
inc
hlt
xchg
dec
or
or
mov
xor
xor
inc
test
adc
and
adc
sub
repnz
dec
add
movs
and
adc
inc
sbb
js
push
jp
ins
int
adc
pop
retf
(bad)
pop
push
add
xor
outs
push
dec
adc
xor
push
inc
rcr
cs
gs
outs
leave
xor
adc
fisubr
popa
xchg
arpl
mov
adc
nop
dec
mov
xchg
enter
nop
xchg
cmp
inc
xchg
xor
add
inc
pushw
mov
push
out
inc
(bad)
mov
sbb
push
cmp
push
in
int
mov
adc
sbb
mov
dec
aad
jne
xor
xor
add
pop
ins
dec
xor
jb
dec
jns
inc
mov
cmp
inc
ds
mov
add
and
cli
push
add
outs
sbb
mov
dec
movs
or
push
inc
inc
push
pop
outs
sbb
and
movs
push
retf
dec
pop
xor
mov
jp
shl
xchg
fs
sub
add
int3
xor
imul
inc
aad
adc
fadd
popa
pop
cmp
push
push
imul
push
or
push
test
add
and
sbb
scas
xor
cdq
inc
xchg
add
xchg
push
ins
dec
nop
aam
mov
inc
imul
loopne
jmp
out
dec
(bad)
xor
push
inc
std
xor
dec
popa
add
ss
push
inc
dec
ror
xchg
adc
sub
add
sbb
nop
cmp
mov
or
xor
and
push
push
mov
xchg
mov
retf
fadd
pushf
mov
jb
jbe
aam
add
inc
inc
outs
or
je
ds
or
jp
lahf
or
ins
and
push
test
cmp
les
test
test
push
ret
pushf
push
push
(bad)
aaa
push
mov
xor
adc
scas
loopne
mov
arpl
pushf
or
push
or
add
inc
push
fiadd
or
or
adc
adc
adc
cmp
add
xchg
xor
xor
and
add
pop
cmps
and
imul
pop
dec
add
movs
cmp
ins
and
or
dec
cs
inc
xlat
mov
pushf
push
inc
scas
jmp
arpl
mov
push
dec
add
mov
call
and
xchg
fcom
shr
xchg
and
dec
xor
ret
dec
mov
or
adc
mov
xor
into
xor
in
or
fdivr
xor
push
les
dec
push
jb
mov
(bad)
push
xchg
sar
adc
fs
sub
jmp
push
push
clc
or
mov
push
xor
ret
mov
cmps
fs
imul
push
mov
sbb
mov
inc
push
or
add
mov
and
shr
or
push
sbb
fdivp
push
test
dec
imul
dec
mov
xor
test
bound
cmp
inc
sbb
jo
inc
call
jbe
test
bound
cmp
in
add
jns
sbb
adc
fdiv
ret
mov
jne
ss
rol
aam
push
jbe
xchg
pusha
push
pop
push
adc
push
out
movs
ss
rcl
mov
pusha
xchg
dec
movs
loope
loope
pushf
xor
and
add
xor
sub
pop
mov
add
js
call
adc
xor
pop
dec
xor
add
add
add
push
loope
fimul
jbe
push
mov
push
addr16
call
sub
push
sbb
ja
mov
mov
nop
adc
xor
bound
push
dec
inc
lock
jae
jbe
dec
adc
test
bound
lods
test
test
dec
arpl
mov
dec
cmp
sbb
cmp
fadd
ret
fimul
add
inc
add
dec
imul
leave
out
sub
or
in
cld
push
push
je
jno
dec
dec
pop
jp
adc
sub
fs
adc
dec
xor
adc
xchg
xchg
push
or
jo
xchg
and
or
(bad)
pop
push
push
or
cld
inc
outs
push
dec
sbb
xor
test
jl
inc
push
aam
push
add
ins
pop
jmp
jbe
pop
ret
push
and
adc
test
ror
gs
sub
dec
mov
dec
push
and
push
sbb
cmp
xor
push
aad
cmp
add
into
les
sbb
and
sahf
dec
jno
push
ss
or
jbe
mov
cmp
sbb
aaa
add
test
adc
jmp
dec
mov
mov
cli
bound
dec
inc
push
add
add
ds
and
xor
dec
or
add
cmp
adc
sbb
bound
pop
add
pop
outs
cdq
cs
pop
mov
push
mov
pusha
push
push
movs
sub
jp
xor
jne
or
retf
push
mov
sub
cmp
(bad)
xor
push
jo
jo
mov
push
pushf
inc
inc
push
add
jb
outs
add
xor
fs
and
loopne
inc
je
test
push
sub
add
sbb
cmp
inc
pop
loope
lods
push
add
pop
loop
xor
adc
add
mov
push
xchg
in
mov
add
and
inc
adc
push
push
push
aaa
or
inc
mov
adc
popa
push
push
ins
adc
jmp
or
pop
jp
jbe
mov
dec
push
sbb
xor
fdiv
add
push
add
push
adc
in
bound
add
jns
push
js
push
mov
and
mov
pusha
lods
sub
test
mov
push
test
push
xchg
pusha
ss
es
and
sbb
inc
sub
add
xor
or
shl
pusha
nop
mov
dec
push
push
jne
add
or
mov
and
leave
add
inc
int3
loopne
pop
lea
fisubr
out
mov
aam
shl
arpl
or
push
push
test
out
shl
data16
int
dec
repnz
inc
push
add
push
sub
push
mov
and
adc
xchg
loop
inc
cs
rcl
add
dec
mov
shr
int3
push
fstp
or
call
push
mov
xor
imul
jecxz
dec
jae
ss
ins
add
or
inc
push
push
mov
sbb
dec
mov
test
repnz
inc
mov
xchg
retf
fdivr
sbb
dec
gs
mov
pop
es
and
nop
push
adc
mov
sbb
sub
and
add
push
mov
xchg
cmp
push
cld
inc
pop
or
or
jb
or
dec
inc
fimul
push
add
dec
hlt
push
xchg
or
mov
inc
push
pop
mov
push
xor
pushf
push
xchg
popa
sbb
dec
mov
cwde
push
cmp
add
push
inc
pushf
sbb
and
and
xchg
data16
jp
or
push
pushf
dec
inc
sub
mov
rol
cmp
jne
xor
mov
xchg
push
xor
pop
mov
pop
ss
or
outs
mov
lods
adc
dec
es
push
cmps
jp
add
add
cmp
xchg
pop
add
xor
and
pop
jno
mov
pop
cld
push
push
pop
mov
xor
dec
push
add
inc
cmps
ja
lods
sbb
in
dec
inc
outs
add
nop
push
pop
and
inc
xor
mov
cmp
inc
dec
ret
push
dec
jbe
cwde
repnz
ret
fcom
inc
bound
and
sbb
inc
push
mov
cmps
hlt
mov
mov
and
push
scas
adc
ret
inc
test
rcl
dec
add
inc
push
adc
in
pop
dec
sbb
sbb
sbb
nop
jle
(bad)
push
jno
pop
sub
add
xchg
and
faddp
inc
adc
and
sub
or
xchg
adc
test
pop
mov
sub
ror
pusha
or
add
movs
das
and
shl
push
cmp
push
movs
jo
push
bnd
fisubr
and
loopne
test
xchg
fs
mov
test
and
jns
or
mov
jae
js
ss
outs
inc
repnz
add
and
sbb
rcr
jp
push
or
je
popa
xchg
xor
leave
and
pushf
lods
loop
inc
mov
addr16
movs
xor
sub
in
loope
pop
sub
push
dec
xor
pop
adc
or
cld
imul
xchg
xor
loop
bound
xor
or
dec
div
push
jp
adc
jo
(bad)
jl
inc
loopne
xchg
dec
mov
inc
ret
mov
fdiv
xchg
test
nop
int3
int3
push
dec
add
dec
inc
and
push
xchg
push
dec
mov
push
xchg
dec
nop
jns
js
push
cs
or
mov
push
lock
lock
inc
outs
push
inc
and
inc
in
retf
loop
(bad)
and
dec
fs
popa
push
outs
push
je
jb
push
je
test
pusha
cmp
or
xor
inc
rcr
fadd
dec
add
or
inc
pop
jb
push
xchg
inc
push
push
in
sbb
and
sub
inc
jne
fidiv
push
ins
retf
xor
cmp
in
mov
retf
xor
push
xchg
dec
jo
add
and
xchg
jl
bound
xor
jo
or
push
jle
dec
push
dec
imul
arpl
push
xor
push
push
test
popa
stos
push
push
addr16
pop
push
push
js
lea
pusha
sahf
les
add
inc
xor
push
push
daa
sub
sub
push
pop
push
sub
cwde
jo
sahf
or
push
jle
es
cmps
stos
sub
inc
mov
dec
je
ja
(bad)
jbe
inc
mov
test
sbb
push
inc
xchg
dec
test
and
sbb
mov
movs
add
pusha
sub
lock
ja
nop
xchg
enter
leave
call
call
and
lods
aad
cmp
inc
cmps
or
mov
mov
fs
sub
and
inc
mov
bound
test
iret
cmp
sbb
fs
mov
test
add
call
dec
cld
xor
adc
enter
nop
cmp
in
rcl
inc
inc
call
xor
add
outs
push
sbb
add
dec
in
outs
push
fsub
addr16
mov
xor
rol
imul
and
adc
int3
jle
mov
jbe
inc
ins
and
mov
dec
and
ror
popa
shl
cmps
adc
add
lods
pop
fistp
imul
push
xor
aaa
push
cmc
or
adc
pusha
cmp
and
xchg
sub
push
push
popa
inc
cmps
add
add
cmp
mov
or
inc
data16
pop
jp
loope
hlt
adc
adc
or
push
jb
pop
pop
xor
pop
or
xor
sbb
mov
ss
push
jl
ins
cwde
or
cmps
or
ror
ret
and
sbb
inc
sbb
pusha
or
xor
or
pusha
enter
dec
cs
fs
mov
add
stos
add
aam
or
push
in
ds
mov
inc
js
xchg
xor
push
sub
sub
fsubr
pop
and
test
out
nop
lods
dec
pop
xchg
and
cmp
out
retf
pop
aam
je
inc
fwait
sub
jno
cmps
rcl
sbb
pop
dec
or
(bad)
fwait
sub
xchg
adc
cmp
and
add
mov
test
sub
jl
mov
xor
(bad)
loopne
imul
xor
mov
mov
mov
xchg
or
pop
test
xchg
sub
xchg
(bad)
and
inc
push
cs
push
dec
rol
sub
add
inc
mov
stos
mov
inc
xchg
mov
xor
fsubr
mov
push
add
xchg
adc
xor
xor
adc
inc
inc
dec
sub
test
aad
adc
push
push
les
sub
xor
or
jbe
movs
shl
movs
or
and
jbe
ror
shl
daa
dec
inc
dec
and
mov
cmps
mov
jl
xchg
sbb
fwait
dec
pop
inc
je
push
add
inc
push
call
push
and
loop
outs
lods
dec
mov
dec
and
and
push
inc
push
jb
lods
shl
(bad)
dec
test
cwde
jo
in
push
push
dec
cmp
jbe
jp
or
sub
dec
or
dec
mov
bound
xor
add
add
inc
aaa
push
and
scas
jno
jno
xor
and
xor
dec
mov
add
xchg
or
out
sbb
popa
push
call
sbb
jne
mov
sbb
cs
add
add
mov
mov
test
inc
sbb
sub
mov
add
xchg
gs
adc
jo
data16
js
enter
mov
dec
cmps
mov
sub
add
fs
dec
add
out
xor
out
xor
push
mov
popa
cmps
cmp
outs
imul
xchg
xchg
hlt
outs
push
xor
sbb
xchg
xchg
add
aam
inc
add
push
sbb
ins
sbb
jo
xor
mov
add
jmp
inc
inc
add
xchg
push
sti
sbb
xor
pop
int3
jb
and
mov
mov
xchg
js
movs
xor
pop
imul
mov
push
sub
ins
cmp
add
dec
lock
adc
dec
scas
imul
adc
push
data16
push
and
add
mov
inc
(bad)
push
mov
inc
ins
popa
call
push
and
int
inc
push
xor
jl
es
mov
jo
and
sub
sub
or
in
call
xchg
rol
in
xor
out
xchg
adc
add
add
push
add
dec
mov
(bad)
jbe
lock
dec
nop
loope
push
dec
in
rcl
data16
add
push
(bad)
inc
dec
bound
fiadd
enter
dec
sub
jb
dec
push
push
push
inc
retf
test
add
dec
and
jo
xor
clc
dec
retf
mov
mov
mov
dec
mov
gs
xor
mov
dec
xor
data16
push
jb
inc
mov
jb
pop
pop
adc
test
xor
add
or
sbb
shr
ss
dec
xchg
mov
pop
test
test
or
dec
adc
and
fdivr
rol
mov
or
jb
pop
or
dec
int3
push
or
pushf
xor
mov
and
retf
add
ds
mov
xor
ins
and
shl
loopne
or
je
sbb
dec
push
mov
stos
mov
pop
and
xor
enter
sub
ins
ror
inc
xor
xor
pop
push
clc
xor
or
push
addr16
sbb
sahf
(bad)
xchg
and
cs
(bad)
js
ins
leave
adc
add
fsub
stos
fs
jl
mov
push
inc
push
outs
add
mov
or
sbb
inc
push
mov
je
bound
data16
push
adc
bound
sub
xor
mov
inc
jmp
push
mov
xchg
test
push
cs
add
adc
in
sub
ins
or
sbb
fwait
xchg
cmp
pop
rol
sub
lods
or
dec
or
xor
dec
mov
push
pop
inc
xor
xchg
and
jbe
popa
cs
cs
fist
pusha
(bad)
push
(bad)
jb
xor
add
mov
mov
xor
and
xchg
ss
or
mov
je
lock
call
inc
dec
or
sbb
add
test
inc
or
sahf
xor
mov
jae
adc
es
xor
data16
xchg
pop
cwde
mov
outs
and
and
cmp
push
adc
dec
je
inc
or
call
add
adc
sub
add
xchg
inc
test
popa
cli
outs
or
xchg
stos
mov
push
mov
data16
add
dec
jne
add
and
add
dec
xchg
add
mov
stos
push
inc
jb
xor
cld
gs
push
(bad)
outs
je
popa
xchg
aad
ins
and
fs
xchg
lods
push
shl
and
adc
cs
jne
ror
xor
push
retf
add
ror
dec
dec
loope
add
add
push
aad
jns
dec
xchg
xor
mov
sub
pop
push
inc
and
or
test
and
jbe
mov
xor
fidivr
sub
movs
inc
push
sub
pusha
(bad)
into
push
sbb
xor
jno
nop
inc
es
inc
mov
push
mov
or
sbb
push
addr16
push
jae
push
adc
test
ss
data16
mov
(bad)
add
les
push
mov
add
add
xchg
push
push
retf
test
or
push
adc
adc
or
pop
dec
adc
inc
push
pop
aad
mov
push
dec
push
xor
fs
cs
jne
dec
dec
xor
push
push
dec
retf
add
mov
ins
xchg
dec
daa
and
or
mov
jmp
adc
xchg
test
arpl
and
push
dec
popa
cwde
inc
sub
loopne
add
push
aam
outs
scas
xchg
enter
gs
cmp
inc
mov
pop
adc
pop
cmps
call
sub
shl
push
add
(bad)
and
lds
inc
fadd
add
inc
push
clc
inc
add
gs
push
add
fs
int3
fs
rcl
test
dec
scas
mov
jb
sub
jle
dec
inc
mov
xor
ficom
sub
sbb
add
cmp
pop
xchg
jno
sar
add
xchg
and
jmp
push
fs
inc
jecxz
hlt
bound
xchg
pop
pop
adc
cmp
adc
mov
lods
pop
cmp
mov
adc
and
or
xor
push
clc
dec
cmp
add
sbb
push
push
je
mov
and
inc
test
pushf
push
adc
or
push
loope
sub
push
sbb
inc
xchg
pusha
jbe
fild
mov
push
push
hlt
xor
xchg
pop
and
test
adc
dec
les
pusha
and
or
inc
les
inc
xchg
add
xchg
or
and
and
push
sbb
mov
fs
push
jmp
test
push
push
jmp
or
dec
sub
adc
pop
(bad)
out
mov
mov
jl
fs
inc
cld
push
inc
dec
dec
pusha
mov
add
fldenv
mov
push
js
mov
push
push
stos
call
ja
jo
(bad)
inc
xor
and
dec
xchg
push
add
es
push
push
xchg
cmps
fadd
pop
adc
push
or
mov
mov
xor
mov
sbb
push
or
cmp
xor
or
loope
and
and
push
dec
fimul
pop
dec
popa
dec
adc
add
push
or
push
dec
jle
(bad)
movs
inc
fisubr
and
cmp
add
dec
adc
mov
cmp
inc
mov
xchg
fs
movs
aam
ret
and
sbb
mov
pop
inc
adc
outs
or
(bad)
xor
or
adc
shl
hlt
outs
mov
jmp
inc
sub
jo
ins
out
add
xor
jp
adc
movs
movs
and
imul
sub
inc
inc
push
test
pushf
(bad)
xor
dec
xchg
adc
ins
pop
cmp
sbb
xchg
retf
aad
test
data16
addr16
loopne
xor
or
hlt
outs
add
push
je
sub
sbb
add
sahf
mov
jp
push
outs
jo
mov
adc
jmp
xchg
adc
add
imul
pusha
dec
mov
add
push
out
jbe
sbb
add
and
xor
mov
xchg
and
cmp
or
inc
fs
and
cmp
popa
gs
xor
les
dec
mov
jno
xor
inc
xor
and
jbe
dec
push
lods
push
daa
adc
and
es
and
inc
add
je
add
xchg
scas
jl
and
aad
pop
or
dec
sbb
cmp
xchg
mov
ret
sub
outs
xchg
cdq
adc
jl
bound
mov
hlt
dec
bound
loopne
pop
js
scas
mov
dec
adc
outs
inc
jb
add
or
gs
gs
xchg
lock
cs
call
or
sub
shr
or
jns
sub
dec
ss
ss
push
sbb
push
push
inc
out
dec
sbb
xor
push
push
xchg
ins
add
xor
cs
dec
ins
xor
outs
dec
pusha
mov
lods
inc
and
xchg
pop
fbld
add
and
cwde
mov
mov
fs
sub
inc
inc
jmp
inc
dec
xor
adc
xchg
jns
jle
dec
sbb
jno
fcom
mov
dec
jl
push
ss
gs
add
dec
out
je
cli
loopne
push
jne
push
mov
adc
lea
inc
ss
es
iret
xchg
push
sub
in
xor
or
loopne
rcr
push
jecxz
inc
dec
dec
push
es
xor
pusha
sub
and
xchg
adc
adc
rcl
xor
in
outs
jne
dec
outs
inc
lods
mov
inc
push
or
cmp
xor
adc
daa
sbb
push
lods
xchg
mov
in
addr16
test
and
mov
xor
ret
call
outs
ss
cmp
or
sbb
inc
adc
jns
test
xor
mov
int3
and
xchg
mov
mov
pushf
and
rol
jo
nop
aam
or
inc
dec
mov
push
dec
and
cmp
jo
push
sbb
dec
(bad)
xchg
je
(bad)
dec
int3
dec
add
push
sbb
mov
inc
xor
fdivr
ins
jl
data16
cmp
dec
or
push
sbb
push
xor
rcl
int
xchg
jb
fisub
bound
mov
mov
push
cmp
push
xor
xchg
inc
lods
push
adc
(bad)
dec
sub
aaa
sub
sbb
jp
imul
or
aaa
xor
jb
xchg
xchg
jo
(bad)
out
and
pop
inc
stos
sbb
inc
jle
call
call
adc
mov
and
mov
gs
mov
push
fs
pop
imul
xlat
xchg
and
dec
dec
call
add
mov
xor
in
add
call
das
xor
dec
push
stos
fiadd
ja
mov
cmp
mov
in
inc
push
mov
mov
sub
xchg
xor
and
and
js
test
inc
push
push
gs
movs
mov
or
mov
jo
cdq
stos
cmps
shl
imul
pop
add
(bad)
mov
je
dec
shr
adc
mov
popa
push
loopne
inc
and
push
pop
push
dec
bound
mov
push
and
jb
push
push
and
adc
xor
and
mov
xor
(bad)
retf
sub
xor
pop
or
mov
out
push
push
push
and
xor
jmp
inc
ins
inc
sti
enter
cmp
retfw
pop
push
call
pop
mov
enter
push
enter
imul
mov
add
in
add
js
inc
nop
loopne
push
inc
sbb
mov
push
xchg
adc
sub
aam
ss
inc
push
imul
adc
pop
sub
gs
call
and
ds
mov
sub
ret
push
mov
es
(bad)
nop
loopne
rcl
xor
xor
push
push
and
gs
jp
or
cdq
inc
mov
xor
jns
xor
mov
push
aam
inc
push
stos
sub
inc
xchg
xor
jp
push
xor
pusha
ins
mov
add
loop
inc
push
push
dec
add
sbb
mov
ror
jbe
movs
mov
inc
push
inc
mov
cmp
sbb
js
jb
inc
cwde
adc
test
into
xor
or
in
push
imul
aam
popa
fcmovu
xchg
inc
push
rol
jns
push
je
mov
cmp
outs
fs
je
or
push
adc
xchg
push
mov
inc
ins
xor
ja
or
mov
mov
dec
xor
popa
shr
je
bnd
jb
cmps
ins
cwde
add
add
outs
xchg
fs
inc
outs
dec
dec
mov
xchg
mov
mov
movs
mov
cmps
mov
int
or
add
pop
sbb
mov
sub
popf
sub
jo
push
addr16
fisub
push
pop
push
dec
aaa
lock
push
inc
mov
bound
loopne
and
add
jb
clc
bound
xor
mov
cmp
stos
outs
mov
dec
ret
cmp
call
mov
push
cmp
sbb
mov
push
sub
add
mov
adc
dec
arpl
jne
push
push
lock
les
retf
inc
dec
pop
add
pop
nop
jmp
cmp
movs
or
push
or
xchg
rol
stos
or
cmps
push
dec
lods
dec
outs
dec
push
xor
sbb
aaa
add
and
sbb
push
push
sub
and
ins
inc
or
jb
push
pop
push
das
dec
inc
dec
push
xor
dec
sbb
outs
or
inc
call
push
adc
mov
xchg
je
push
pop
mov
cmps
loopne
jne
es
popa
xor
adc
cwde
pop
pop
push
mov
sbb
ret
inc
cmp
test
je
pop
stos
jb
adc
and
add
cmps
and
push
cmp
dec
sub
or
mov
test
push
cmp
inc
add
out
inc
sub
or
int3
xchg
shl
or
or
nop
pop
bound
push
cmp
call
sub
and
pop
and
add
inc
mov
or
or
shl
pop
lods
dec
dec
push
(bad)
jl
jb
adc
fcom
mov
mov
fld1
int3
ins
mov
mov
dec
and
xchg
sub
or
aam
es
or
lods
sub
int
push
arpl
mov
add
fs
mov
mov
loopne
rcr
pop
push
sub
inc
push
add
xor
aam
out
jmp
and
sbb
cmp
cmp
nop
test
add
pop
cmps
push
nop
xchg
push
pushf
test
jne
sahf
sub
cmp
push
dec
sar
push
inc
jo
(bad)
cmp
pusha
mov
addr16
or
xchg
ss
in
pop
fsubr
ss
adc
push
sub
cli
mov
push
or
gs
les
add
add
or
dec
xor
sub
jbe
ja
push
inc
pop
push
inc
or
mov
sbb
add
add
dec
int3
(bad)
xor
or
jbe
xchg
stos
add
push
aaa
es
je
fadd
dec
ror
pusha
sub
jo
popa
cmp
sbb
ror
cmp
jp
imul
jbe
xor
and
add
adc
ret
pop
fwait
mov
jp
inc
stos
adc
call
jns
pop
sbb
ins
js
pop
push
push
dec
adc
add
add
outs
jbe
sub
add
xor
cmp
adc
fisubr
cmp
xor
ja
inc
or
xor
pop
inc
jb
sbb
inc
inc
hlt
lds
inc
push
push
jae
push
mov
or
test
xor
int3
jo
mov
sbb
sub
inc
inc
ja
push
add
stos
mov
int3
mov
push
(bad)
fdiv
inc
adc
lods
dec
js
cli
push
mov
jo
inc
and
inc
sub
scas
add
popf
nop
inc
xchg
aam
bound
test
pop
pop
shl
mov
movs
inc
xor
dec
inc
ins
test
adc
inc
cmp
push
addr16
cmp
inc
outs
addr16
pop
xchg
fisubr
inc
dec
ds
add
dec
sub
inc
aad
push
inc
or
inc
push
xor
sbb
xor
sbb
dec
call
mov
jbe
mov
push
xor
shl
add
and
enter
and
push
adc
imul
xor
test
aaa
jns
mov
inc
jno
test
movs
lock
jp
data16
nop
adc
call
(bad)
gs
dec
je
pop
add
outs
outs
loop
xor
stos
mov
aam
outs
(bad)
push
xor
pusha
dec
sub
add
bound
hlt
push
xor
ret
sub
(bad)
add
mov
inc
xchg
inc
inc
nop
sbb
cmp
add
dec
fwait
ret
inc
or
inc
mov
sbb
inc
inc
mov
push
adc
xchg
(bad)
cmps
and
gs
inc
dec
pop
push
inc
ror
aaa
imul
jb
mov
je
mov
ss
jp
inc
and
popa
xor
mov
pop
jbe
sub
push
sub
jae
jb
sub
stos
stos
invd
adc
es
adc
sub
lea
xor
movs
push
pop
nop
xor
imul
fdiv
pop
shl
bound
inc
cwde
ja
sbb
push
xchg
je
and
pushf
xor
adc
cmp
adc
sub
les
dec
add
ins
test
les
bound
ins
or
mov
imul
push
add
call
push
xor
sub
push
nop
mov
sbb
inc
and
xchg
pop
fs
aam
xor
dec
xchg
inc
mov
jne
xor
jno
imul
mov
lds
xor
pop
jne
sub
push
adc
add
scas
cmp
or
mov
inc
or
mov
dec
mov
ds
ins
test
xchg
mov
or
pop
push
fcmovb
fdiv
jbe
xchg
shl
fs
in
sahf
inc
push
bound
int
mov
jp
outs
dec
fdivr
ss
or
push
inc
bnd
dec
adc
stos
push
push
sahf
push
mov
push
xor
jno
inc
push
inc
push
jo
and
mov
gs
jo
jbe
push
xor
pop
fwait
inc
mov
or
and
cli
and
out
xor
mov
push
inc
adc
ss
cmp
xor
add
dec
xor
mov
cld
movs
push
popa
adc
sub
bound
adc
dec
nop
adc
mov
ss
jbe
adc
sub
inc
inc
jp
rcl
enter
push
loope
xor
ror
dec
sub
add
or
fidiv
outs
push
adc
mov
mov
arpl
inc
popa
ins
movs
xchg
movs
mov
jb
shl
outs
xor
retf
shr
dec
je
sbb
adc
div
movs
leave
push
sub
outs
inc
test
inc
push
xor
add
es
mov
dec
pop
and
push
or
push
(bad)
scas
adc
test
and
mov
cli
dec
push
push
outs
sbb
(bad)
popa
add
jmp
push
and
push
xor
mov
add
mov
aaa
inc
ret
movs
js
xor
dec
add
xor
or
push
dec
ror
dec
push
jo
or
push
push
sbb
cmp
jmp
dec
fadd
mov
inc
stos
cwde
push
sbb
xor
sbb
mov
xchg
test
popa
loop
and
or
fs
in
add
or
(bad)
pusha
add
inc
push
loopne
in
dec
js
jb
mov
push
dec
nop
push
cmp
mov
cmp
push
and
xchg
cdq
xchg
or
mov
in
adc
push
or
popa
adc
shl
or
dec
sbb
dec
je
jne
jo
dec
popa
adc
push
inc
popa
retf
dec
adc
dec
push
in
ss
pop
popa
dec
dec
shl
push
push
fwait
ins
mov
inc
and
(bad)
retf
mov
adc
inc
hlt
mov
mov
jae
mov
mov
retf
push
jne
outs
xor
inc
dec
dec
inc
xchg
sbb
xor
adc
jne
pop
and
ins
popa
cs
jne
fs
push
mov
fmul
mov
imul
je
cmp
sub
push
sbb
cmp
xor
dec
inc
(bad)
dec
sub
stos
xor
and
add
add
and
pop
fcom
data16
cmp
sbb
mov
add
push
sbb
dec
pop
push
popa
xor
test
xchg
mov
mov
pop
or
xor
pop
cmps
mov
push
enter
imul
ret
leave
mov
adc
call
xchg
call
clc
jb
xor
jb
adc
cmp
mov
popf
jo
test
dec
ins
add
imul
push
test
sbb
xchg
or
add
shl
in
xor
jne
jb
mov
xor
xor
and
sub
jne
ins
mov
lds
je
xor
add
cmp
outs
adc
les
sub
adc
mov
xchg
sub
dec
leave
add
pop
push
mov
xor
mov
and
xchg
stos
xchg
push
adc
xchg
inc
xchg
test
add
push
or
sub
data16
cmps
sbb
aam
sbb
ds
fadd
push
enter
test
mov
inc
push
cmp
adc
sub
pop
popa
dec
and
inc
dec
inc
adc
or
add
cmps
nop
scas
xor
mov
and
pop
cmps
arpl
ja
mov
dec
sub
pushf
jbe
adc
or
pusha
xchg
mov
mov
jle
push
xchg
loop
inc
mov
sub
jle
add
add
imul
test
leave
add
loop
xchg
fs
adc
loop
cmp
jb
inc
popa
push
cs
mov
imul
add
mov
dec
push
loope
test
mov
xor
push
outs
adc
push
add
inc
xor
pop
inc
cmp
nop
pop
or
inc
sub
dec
adc
jo
fsubr
es
arpl
inc
adc
push
test
xor
jne
or
test
pop
sub
add
mov
jbe
pop
lea
push
inc
cmp
mov
add
add
adc
push
je
fsub
inc
test
xor
popa
xor
ds
inc
push
push
inc
push
add
cmp
sbb
inc
xor
push
add
sub
ins
imul
ja
int3
or
pushf
push
jbe
inc
ins
hlt
test
sbb
cmps
test
shl
mov
cmp
sar
sub
add
inc
push
and
push
test
mov
and
fs
push
popa
jbe
mov
inc
jb
js
pop
and
inc
test
inc
add
test
xchg
or
add
aaa
cwde
and
push
push
sbb
cmp
push
dec
xor
push
push
rol
data16
add
or
xchg
push
sub
aam
leave
ins
retf
cmp
sbb
dec
or
outs
pop
sbb
jne
scas
ins
aam
sbb
xchg
outs
pop
mov
inc
xchg
pop
xchg
inc
mov
movs
clc
push
inc
ss
test
add
add
popa
adc
hlt
or
inc
in
adc
ins
xor
outs
xor
data16
test
inc
or
ss
jne
data16
out
pop
in
lock
inc
mov
pop
jb
jb
mov
inc
jl
inc
push
adc
inc
dec
inc
or
test
pop
pushf
xor
adc
or
inc
sub
test
sbb
or
inc
push
xor
push
xchg
inc
pop
data16
inc
and
mov
ss
push
adc
xor
jbe
test
sub
mov
int3
xor
test
ins
dec
stos
sub
or
xor
sub
int3
jbe
add
fimul
jo
sbb
sub
jmp
dec
pop
jae
ins
inc
and
adc
xchg
dec
or
jge
pop
ss
inc
push
cmp
sbb
pop
popa
push
jmp
mov
jb
arpl
outs
aaa
dec
sub
or
add
pop
outs
dec
rol
dec
xchg
mov
or
push
and
lods
pop
inc
fcom
jae
push
jl
add
js
push
inc
inc
test
test
xchg
mov
push
dec
gs
inc
xor
(bad)
dec
fs
lods
xor
dec
adc
push
push
push
fcom
and
mov
or
or
sub
pop
dec
lods
push
call
xchg
push
adc
add
stos
fmul
js
sbb
inc
push
es
sub
or
xchg
inc
xor
xchg
add
ins
dec
xchg
adc
push
or
mov
pusha
dec
outs
add
and
pushf
cmp
or
loopne
add
jno
jb
adc
dec
call
and
add
movs
adc
sbb
adc
xor
js
jmp
je
mov
push
and
repnz
pop
imul
movs
inc
cli
and
or
mov
jae
int3
push
push
xchg
adc
jb
or
dec
ins
add
or
mov
jb
popa
jo
jmp
xchg
sbb
mov
xor
inc
xor
dec
retf
xor
add
xchg
(bad)
cmp
or
add
xchg
dec
pop
(bad)
test
mov
mov
pop
inc
dec
xor
adc
inc
dec
push
imul
vpaddsb
push
push
rcl
add
mov
popa
xor
mov
xchg
shl
push
push
bound
xchg
mov
add
(bad)
data16
jo
jae
adc
xor
xchg
and
dec
lods
cmp
leave
push
pushf
push
sub
add
mov
add
fidiv
sbb
dec
rcl
jmp
test
dec
jge
adc
test
data16
push
aaa
xor
ss
ja
ss
cmp
xor
mov
add
cwde
ss
pop
pusha
xchg
rcl
cmp
jbe
lea
pop
and
jno
push
sbb
dec
jns
sbb
dec
lock
dec
push
in
and
xchg
cli
sbb
cs
push
or
mov
dec
jne
je
adc
adc
add
xor
push
xor
or
fwait
inc
xor
sub
push
mov
or
adc
push
add
pop
sub
js
push
add
or
mov
ret
imul
inc
mov
sub
ja
sbb
xchg
and
or
sbb
dec
add
or
mov
cmp
les
aaa
xor
cld
fsubr
xor
adc
test
push
dec
add
push
sub
ret
retf
cmp
inc
sub
stos
add
adc
dec
shl
ret
sub
test
push
sub
add
movs
sbb
push
add
dec
fst
leave
(bad)
xor
js
push
xchg
inc
(bad)
mov
sub
push
shr
gs
call
add
outs
loopne
cmp
or
mov
ins
popa
mov
dec
popa
adc
mov
lods
dec
ins
push
popa
nop
(bad)
int
xor
out
mov
js
jo
pop
jne
shl
retf
xor
call
call
fs
inc
pop
pop
mov
add
add
push
loopne
cmp
jbe
push
pop
jp
push
add
cdq
push
dec
repnz
sub
test
cdq
or
xchg
pushf
cmp
ins
jne
pusha
jmp
cmp
scas
cmp
adc
jmp
aam
and
push
and
jo
aaa
movs
mov
mov
popaw
mov
jo
push
sahf
cmp
dec
xchg
push
cmp
xor
data16
inc
add
jb
jbe
add
stos
xchg
inc
ss
inc
call
cmp
push
mov
jmp
dec
mov
outs
je
jle
cs
sub
ins
lea
push
dec
cmps
inc
data16
adc
mov
loope
adc
aaa
inc
pop
test
gs
or
les
xor
je
imul
adc
jns
sub
sub
xor
add
inc
sbb
push
es
dec
shl
dec
cmp
jmp
fdiv
mov
or
pop
and
add
cmp
bound
or
adc
xchg
cmp
inc
sbb
fs
loopne
add
adc
push
sahf
dec
xor
xchg
xor
ret
ds
push
inc
mov
movs
pop
cmp
push
push
dec
or
adc
or
cmps
and
or
ja
adc
movs
xor
loopne
xor
or
sub
ins
inc
imul
call
mov
add
mov
dec
or
sbb
test
ds
nop
retf
jl
xchg
add
xchg
mov
inc
push
adc
push
bound
scas
jo
bound
cmp
movs
out
call
dec
ja
push
xchg
pop
push
inc
test
stos
pushf
xor
jbe
pushf
jb
in
nop
xor
bound
pushf
mov
loopne
or
outs
inc
push
add
(bad)
les
jbe
popa
inc
dec
add
push
add
dec
imul
mov
cmp
ret
or
adc
jo
outs
adc
or
xchg
mov
fs
and
pushf
es
add
inc
adc
mov
jno
push
ss
mov
dec
cs
and
outs
jp
stos
lods
rol
inc
push
and
mov
inc
jno
xchg
push
sbb
jbe
push
sub
aad
nop
push
loopne
shl
ds
inc
xchg
mov
push
test
add
fiadd
es
push
push
dec
mov
and
and
sub
mov
mov
pushf
push
dec
enter
fdivr
pop
and
popa
xchg
pop
mov
sub
ins
mov
sbb
jns
sub
push
aam
push
mov
fs
cmps
aam
dec
ret
dec
ror
mov
push
inc
test
stos
test
dec
xchg
xchg
adc
inc
jmp
mov
push
mov
dec
test
or
and
push
dec
fs
dec
inc
xchg
lock
adc
cmp
adc
ret
mov
and
jbe
sbb
test
imul
ins
aam
push
add
ds
push
test
loopne
ja
push
adc
dec
push
adc
push
push
and
sub
sbb
add
outs
or
enter
dec
xchg
or
adc
or
fs
ficom
adc
dec
and
inc
dec
jns
imul
retf
mov
cmp
enter
pop
ins
dec
or
clc
add
inc
dec
inc
repnz
and
xor
enter
test
jo
ret
mov
pop
lea
dec
ficom
jo
jne
jo
stos
jne
fmul
mov
movs
js
add
or
cli
push
repnz
jns
cdq
push
shr
shl
or
dec
test
push
mov
cli
push
fs
fadd
test
ins
imul
call
xchg
xchg
inc
js
or
xor
mov
outs
je
jae
call
inc
xor
sub
and
enter
test
int
out
adc
inc
xor
fs
sbb
and
jb
push
jb
xor
sub
jmp
sub
test
cmp
inc
sbb
in
ins
xor
mov
inc
pusha
sub
ins
je
push
dec
jb
shr
pop
or
mov
xchg
mov
dec
push
aad
enter
aam
adc
cmp
pop
dec
retf
int3
les
dec
or
loopne
adc
mov
and
and
dec
push
in
call
push
inc
mov
lds
popa
int3
mov
mov
out
and
cmps
je
call
lds
adc
xor
xor
xor
dec
jb
adc
pusha
cmps
add
enter
and
dec
ins
push
cmp
mov
fld
push
fs
call
add
add
shl
pop
adc
dec
cli
xor
sub
mov
push
cs
sbb
or
inc
dec
push
ret
jno
ds
cdq
and
(bad)
xor
imul
sub
dec
or
sbb
ins
add
mov
and
push
ins
jb
push
test
call
js
xor
fadd
and
movs
pop
rol
test
jo
dec
mov
or
shl
dec
fwait
xor
xor
push
dec
push
xchg
icebp
and
mov
dec
push
pop
das
fidiv
push
push
mov
retf
mov
cmp
nop
loopne
add
test
mov
and
inc
pop
xor
mov
sbb
and
mov
mov
xchg
push
and
and
jbe
sbb
and
push
xchg
les
popa
mov
push
xor
mov
test
or
ins
loopne
test
xor
push
fs
pop
xchg
mov
jp
arpl
and
add
mov
cli
jno
nop
adc
and
ss
cmp
and
pop
mov
cdq
and
outs
cmp
dec
ret
cmp
dec
push
push
lods
inc
pushf
sub
dec
xchg
jp
adc
add
cld
adc
popa
sbb
rcr
in
dec
adc
and
push
mov
add
or
leave
into
js
jno
inc
js
fs
xchg
add
fs
cwde
inc
mov
call
mov
test
dec
les
inc
bound
inc
and
xchg
sbb
and
inc
bound
and
adc
mov
outs
push
inc
sbb
and
outs
retw
mov
push
clc
sahf
popa
xchg
add
js
mov
sbb
es
test
adc
push
xor
data16
inc
in
fcom
adc
push
jle
push
jae
ss
adc
push
mov
test
push
adc
fdiv
ins
mov
dec
push
adc
push
push
sbb
clc
loopne
jno
cmp
cmp
es
and
or
xor
retf
add
xchg
bound
push
xchg
ins
cmp
xor
push
js
and
mov
cmp
push
ja
cwde
loope
mov
scas
fadd
jp
cmp
xchg
test
hlt
ja
outs
inc
test
ss
inc
mov
push
mov
sub
xchg
cdq
inc
xchg
mov
or
adc
mov
sub
push
dec
pusha
push
push
gs
xchg
dec
outs
mov
test
outs
push
mov
mov
(bad)
push
int3
xor
fadd
les
and
dec
lds
cs
clc
sub
add
sub
add
xor
mov
jp
add
adc
jno
and
ins
sbb
cmp
ret
xor
add
je
cdq
sub
mov
enter
xor
retf
xchg
hlt
add
add
data16
and
or
cwde
dec
or
push
or
gs
jae
or
in
fidivr
sbb
push
(bad)
cli
dec
inc
xor
jo
dec
adc
add
inc
je
ja
sbb
dec
or
cwde
aam
mov
inc
test
xchg
les
retf
mov
gs
xlat
es
aaa
xor
sub
dec
test
xor
inc
push
pop
jo
pop
push
jbe
aaa
inc
ss
mov
pushf
call
inc
dec
cmp
and
mov
test
sub
add
out
enter
dec
push
push
pop
or
xor
mov
stos
and
mov
push
sbb
push
and
mov
icebp
cli
sub
push
ins
push
xor
sbb
inc
push
outs
fcomp
sub
or
and
ins
gs
inc
ins
mov
jo
push
dec
out
inc
jb
test
jo
xchg
push
or
add
call
and
popa
sbb
add
jb
mov
adc
into
xor
(bad)
lock
fisub
out
mov
xchg
popa
sub
add
je
mov
bound
xor
mov
lods
stos
scas
dec
jb
jns
mov
jle
or
or
dec
mov
mov
outs
fs
adc
xor
sub
loopne
popa
adc
push
push
stos
sub
int3
xor
xchg
push
mov
mov
inc
jo
inc
ss
or
rol
xchg
mov
xchg
push
dec
rcl
jne
jb
bound
dec
mov
mov
ins
push
movs
xchg
jb
mov
mov
call
and
and
call
push
cmp
push
movs
popa
add
repnz
push
and
dec
es
not
xchg
add
dec
inc
aam
fisubr
cwde
push
jb
sahf
sub
add
movs
push
mov
jp
and
pop
xor
or
push
push
outs
sbb
mov
dec
cmps
push
adc
sub
inc
jb
push
dec
add
adc
xchg
sbb
cmp
and
add
loope
mov
and
test
mov
jo
shl
sub
cwde
imul
adc
int3
fs
cmp
bound
xor
dec
jmp
pop
imul
aaa
mov
gs
lock
xor
lock
sbb
cmp
outs
dec
dec
out
cs
jo
sub
sbb
shr
dec
mov
and
sbb
xor
mov
popa
sub
bound
push
ret
dec
retf
mov
fs
ss
pop
(bad)
(bad)
and
inc
mul
jmp
jbe
fmul
xchg
loope
outs
xor
ins
inc
adc
inc
add
fwait
dec
fs
or
gs
push
dec
arpl
push
xchg
outs
sbb
mov
inc
ror
aad
jno
cli
mov
test
jbe
push
add
sbb
and
int3
add
outs
stos
(bad)
int3
adc
push
cwde
adc
ret
pop
xchg
stos
xor
jp
add
add
mov
fisubr
xor
add
dec
or
inc
dec
js
fcmove
xchg
mov
fdivr
imul
mov
popa
jbe
inc
adc
and
aad
pushf
xor
xor
push
jp
xor
adc
sbb
bnd
jbe
stos
and
pop
jb
js
cmp
mov
inc
ficom
add
loope
inc
mov
hlt
(bad)
test
or
and
gs
sub
xor
and
dec
cmps
add
xor
dec
jmp
sub
jbe
push
and
cli
xor
mov
scas
dec
sub
bound
inc
pop
and
jo
pop
dec
aam
pop
add
dec
push
arpl
inc
mov
jns
fs
or
xor
daa
add
or
mov
aam
pop
or
shl
js
xor
cmps
fsub
xchg
pop
xor
and
sub
in
shl
jle
test
jae
xchg
cwd
sub
or
xchg
or
test
jl
cmp
je
or
sub
sub
dec
push
mov
xor
movs
add
jle
les
xchg
adc
les
and
fsub
mov
test
outs
jno
push
inc
leave
or
dec
lods
sbb
sbb
in
push
mov
jo
inc
outs
inc
push
add
in
loope
sub
pop
adc
test
shl
sub
inc
aam
or
push
bound
inc
and
dec
adc
xor
inc
rcl
add
loopne
cmc
sar
dec
inc
mov
test
sar
mov
sub
push
sub
jo
xchg
sub
xchg
xor
dec
jo
push
leave
push
push
test
push
ins
adc
adc
popa
push
xchg
call
cmp
cmp
call
xor
push
pop
sub
les
adc
add
ret
xchg
or
push
push
jb
adc
movs
call
and
shl
xchg
jno
dec
sbb
xor
jbe
aas
dec
loop
push
fs
push
dec
dec
and
pop
cli
jae
mov
cs
dec
push
inc
xchg
add
ret
xor
dec
push
lock
mov
xor
pop
nop
call
push
imul
loop
lock
sub
dec
pop
imul
ror
test
adc
stos
adc
xchg
in
inc
push
(bad)
or
xor
or
push
mov
jp
mov
push
pushf
ret
in
ins
jo
add
jo
pop
mov
mov
inc
mov
push
adc
mov
mov
or
inc
leave
test
pop
repnz
dec
sbb
js
push
fisub
ds
dec
push
sub
add
gs
(bad)
retf
add
ins
lock
lods
push
outs
dec
xor
sbb
stos
cmp
movs
shr
jns
pushw
nop
and
repnz
ins
es
pop
mov
push
jbe
adc
loopne
push
push
addr16
adc
aaa
js
sub
sbb
inc
inc
jmp
jns
add
ficom
inc
push
adc
xor
ins
push
xor
and
or
push
mov
cmc
pop
nop
jb
imul
dec
scas
aaa
shl
add
pop
pop
int3
adc
adc
stos
shl
xchg
jmp
retf
lock
shl
nop
sahf
adc
sub
inc
mov
int3
push
mov
mov
test
clc
dec
add
inc
ins
xchg
xor
ja
xor
cdq
mov
mov
mov
sub
xor
and
jns
dec
xor
inc
ja
dec
mov
add
adc
inc
adc
stos
retf
push
push
arpl
jbe
inc
mov
and
push
add
push
mov
dec
push
adc
cmp
xchg
bound
dec
xor
or
fld
imul
imul
ss
sub
xchg
push
(bad)
inc
ins
jo
mov
mov
push
jb
adc
mov
les
dec
cmps
pop
jp
test
dec
adc
push
mov
push
cdq
or
sbb
(bad)
mul
adc
in
retf
cli
inc
adc
dec
xor
cdq
inc
mov
xchg
cli
or
push
(bad)
outs
or
pusha
inc
push
push
push
inc
inc
loope
inc
jmp
cmp
inc
inc
xor
and
mov
enter
push
int3
mov
lds
push
stos
push
dec
or
test
xchg
cdq
adc
and
adc
jl
jle
mov
push
mov
mov
jns
inc
push
jo
or
inc
nop
les
loope
mov
push
cs
repnz
dec
xor
push
jp
and
imul
cmp
fisubr
xor
adc
and
dec
sbb
push
movs
or
or
add
add
inc
sbb
bound
pop
sbb
push
test
out
inc
push
mov
ins
mov
or
jb
stos
xor
dec
nop
test
je
aaa
pop
or
pusha
sbb
push
push
dec
retf
sbb
in
ins
xor
adc
push
aam
nop
out
jo
je
xor
inc
inc
and
push
push
or
add
nop
pop
mov
dec
pop
arpl
push
and
xchg
int3
retf
sbb
push
add
jmp
pushf
ss
add
gs
pop
jp
push
ins
ret
rcr
jb
cmp
ins
sbb
ins
test
mov
enter
inc
xchg
jl
pop
sbb
sahf
cmps
mov
shr
adc
shl
dec
jb
test
push
push
ins
(bad)
push
push
xor
xor
into
dec
xchg
adc
retf
movs
xor
pop
ins
leave
mov
aaa
ins
xor
test
sbb
stos
xchg
xor
push
imul
adc
xchg
jo
mov
and
shr
retf
mov
je
mov
in
ins
arpl
jb
adc
jb
and
dec
ss
push
jl
xchg
add
jl
test
add
pop
hlt
or
add
add
les
retf
or
bound
adc
inc
mov
imul
nop
ss
mov
stos
jbe
(bad)
fadd
add
mov
(bad)
ret
adc
lods
xchg
bnd
xor
leave
sub
sub
xor
inc
sbb
inc
sub
and
call
nop
or
add
mov
nop
popa
inc
int3
mov
mov
data16
pop
sbb
adc
into
jp
push
add
jl
inc
dec
or
jb
aaa
dec
call
push
xchg
fadd
or
hlt
pop
addr16
or
mov
adc
xchg
inc
dec
stos
sbb
mov
fsubr
dec
dec
call
xor
test
dec
dec
adc
in
jno
mov
fs
leave
in
dec
outs
lods
jp
jb
push
and
inc
lock
xchg
adc
test
cmc
add
pop
jbe
sub
movs
stos
jle
add
fwait
xor
push
and
add
xor
call
xchg
adc
int3
rcr
inc
in
xchg
add
mov
adc
push
xchg
outs
(bad)
jns
rcl
loope
ins
and
ss
test
dec
jl
dec
and
mov
or
push
bound
pop
and
pop
xor
js
sub
push
mov
mov
ret
mov
mov
test
jmp
mov
inc
jno
arpl
dec
ror
test
push
fs
push
xor
mov
jb
xchg
xchg
mov
jmp
pop
dec
stos
add
dec
loopne
outs
arpl
and
inc
jmp
jne
dec
push
and
cwde
cwde
sbb
cmp
sbb
pop
inc
ss
ret
or
and
mov
xor
adc
xchg
dec
movs
or
ja
mov
mov
pushf
outs
(bad)
(bad)
outs
adc
dec
push
jns
bound
aad
mov
outs
sub
ins
xor
xchg
cmp
jb
jne
pop
sbb
push
and
movs
pusha
xchg
and
or
cmp
xor
fistp
or
or
addr16
mov
dec
inc
cmps
xor
xchg
jne
ins
gs
test
dec
les
dec
xor
adc
adc
pop
movs
push
mov
add
adc
mov
mov
push
inc
ficomp
xor
inc
inc
add
push
xor
mov
push
push
or
test
repnz
push
je
add
push
xor
add
or
jbe
and
jo
inc
dec
sub
test
popa
ja
xchg
inc
and
pushf
adc
or
adc
mov
xchg
sbb
xchg
mov
test
sub
pop
add
pop
je
xor
add
nop
inc
mov
pop
jns
data16
(bad)
xor
or
cmp
inc
push
ss
(bad)
lods
shl
adc
(bad)
aaa
pop
dec
adc
call
jle
adc
dec
bound
xchg
add
xchg
fiadd
add
pop
pop
jns
mov
xchg
stos
push
xor
inc
and
repnz
hlt
inc
mov
repnz
xchg
bound
cmps
pop
(bad)
loopne
cmp
xor
cdq
pop
jo
dec
popa
inc
jecxz
pop
and
dec
popa
ins
ss
mov
bound
sub
int3
mov
adc
rol
inc
mov
ss
push
push
imul
push
add
xchg
je
push
inc
inc
mov
xor
shl
fld
into
jbe
test
or
mov
inc
adc
and
test
xchg
stos
push
sbb
push
jo
aam
inc
sub
xor
stos
adc
sbb
call
push
js
outs
push
and
and
cs
xor
adc
adc
add
mov
push
dec
in
dec
les
lock
dec
or
shr
je
dec
mov
mov
adc
inc
sub
les
cli
push
cmp
shl
(bad)
xor
push
and
push
adc
movs
sbb
add
jbe
cmp
inc
test
je
jo
ins
rcl
and
ins
add
into
cmp
or
add
dec
add
dec
jno
xor
cs
sub
jp
popa
retf
ins
mov
inc
gs
xchg
sub
outs
or
or
or
mov
xchg
fisubr
push
ins
sub
push
bound
cmps
push
mov
fcom
in
mov
shl
cmp
or
xchg
inc
cwde
sub
add
shl
inc
pop
mov
xor
je
(bad)
ja
add
inc
and
dec
or
or
fs
lock
push
mov
test
inc
mov
or
push
loop
pop
sub
xor
xor
aam
ror
push
mov
les
pusha
rol
xor
and
dec
and
pusha
stos
dec
dec
idiv
xor
mov
bound
xchg
push
cmp
dec
cwde
dec
mov
mov
mov
adc
je
leave
popa
and
jl
out
and
inc
xor
sub
and
cwde
sub
and
je
add
sub
or
mov
fsubr
add
(bad)
arpl
ja
push
xor
loopne
inc
push
ror
movs
ins
dec
inc
adc
imul
bound
js
inc
mov
(bad)
dec
push
xor
daa
push
fsub
nop
or
fisub
in
jo
cmp
imul
movs
cwde
xor
push
xor
jp
add
popa
fs
xchg
xor
xchg
xchg
(bad)
leave
jbe
out
call
fs
sbb
or
ins
ins
shl
js
sbb
mov
push
mov
push
jo
sub
ins
adc
sbb
add
call
xchg
mov
push
je
sub
ins
leave
inc
aam
cwde
dec
inc
push
adc
(bad)
and
mov
mov
push
jbe
or
popa
and
mov
jns
xor
popa
or
adc
loop
sbb
rcl
imul
shl
int3
lods
ds
or
pop
fsqrt
or
inc
xor
outs
add
add
add
push
ins
cli
cmp
lods
ss
push
popa
pop
push
pop
movs
or
or
push
outs
addr16
dec
dec
dec
or
and
add
lods
ins
adc
dec
or
fsub
push
cs
cmp
mov
popa
rcr
lea
cmp
fdiv
pusha
imul
push
js
pop
add
sub
jne
mov
rcl
cmp
inc
cmp
push
fadd
imul
sbb
loop
dec
movs
popa
xor
dec
rol
leave
int3
jmp
sub
call
pushf
or
jmp
pop
jo
fimul
dec
dec
add
or
sar
xor
or
push
add
push
mov
adc
fidivr
jo
add
xor
dec
addr16
add
mov
inc
cmp
add
sbb
xchg
add
aam
gs
mov
rol
and
or
xchg
inc
cmp
je
or
test
push
test
pop
xor
push
cld
push
adc
(bad)
xor
outs
cld
dec
stos
add
addr16
jae
dec
leave
xor
nop
retf
rcl
or
sub
jo
aam
mov
add
pushf
xchg
jp
mov
push
shl
sbb
pop
xchg
mov
adc
adc
int3
bound
inc
sub
mov
xor
xchg
or
int3
sbb
add
add
inc
push
ret
cs
arpl
ret
dec
leave
mov
adc
sub
not
mov
pusha
jo
adc
test
jp
imul
mov
mov
leave
xchg
inc
pop
xchg
mov
xchg
sub
mov
aaa
inc
adc
pusha
adc
pop
sbb
test
push
int3
push
push
fsub
fidiv
sbb
pop
fldcw
mov
data16
ins
cmp
sub
pusha
in
xor
(bad)
cmps
repnz
add
xchg
push
dec
sub
dec
dec
retf
sub
xor
lea
push
push
inc
sub
sub
js
jle
pop
imul
test
xchg
jle
or
pusha
add
movs
add
inc
sbb
aaa
and
call
cmp
inc
sbb
stos
shl
mov
dec
xor
xor
retf
ins
mov
in
test
outs
(bad)
ins
push
sub
xor
fdiv
sub
dec
ins
fsubr
inc
or
mov
je
push
pusha
fs
dec
push
or
jo
lods
xor
test
xchg
push
shl
or
loopne
call
js
rcr
adc
push
sub
inc
add
fcmovb
xor
or
ss
cmp
jbe
cmp
xchg
jbe
add
adc
push
dec
dec
add
jne
vpinsrq
cwde
nop
or
retf
xor
add
ins
and
push
cmps
or
xor
xor
xchg
or
adc
bound
and
sub
out
sub
mov
fs
or
inc
inc
sbb
cwde
push
push
mov
sbb
pushf
jb
push
add
dec
mul
xor
push
xchg
(bad)
ss
out
mov
sbb
dec
ins
or
inc
fdiv
bound
and
js
int
lods
and
or
lods
inc
push
sub
jne
inc
in
xor
add
push
ins
xchg
or
bound
gs
xchg
dec
adc
mov
jl
dec
fs
inc
shl
js
add
es
ja
ret
jbe
fdiv
js
lea
es
xor
add
imul
push
push
adc
les
rol
dec
push
test
adc
mov
sub
add
add
fadd
inc
inc
(bad)
sbb
xchg
add
push
inc
adc
dec
sar
test
cmps
cmp
xor
dec
push
dec
adc
mov
cmps
push
mov
xor
bound
sub
add
(bad)
(bad)
dec
jb
popa
lods
dec
test
push
add
dec
push
test
fs
pushf
inc
mov
ficom
test
gs
cs
add
inc
mov
and
dec
dec
xchg
push
mov
mov
outs
pusha
sub
xchg
inc
pop
mov
int3
ror
int3
and
xor
mov
sub
nop
fdiv
sbb
add
push
sbb
mov
dec
dec
outs
or
dec
adc
fadd
and
jae
leave
pusha
adc
cwde
lods
xor
adc
sub
or
repnz
imul
push
ins
loope
addr16
push
inc
push
or
dec
adc
jbe
add
sub
pop
xchg
mov
sub
scas
push
adc
mov
sub
cdq
dec
inc
dec
test
push
xchg
inc
xchg
sbb
outs
adc
nop
push
inc
(bad)
ja
add
mov
ret
test
lods
push
lock
movs
cmps
jbe
rol
or
xchg
ror
cld
or
adc
aaa
test
or
mov
add
xor
inc
sbb
add
rol
ds
cmp
nop
stos
push
cli
sub
ss
push
push
shl
jne
push
xchg
shl
test
pop
dec
sbb
fidiv
fs
push
or
inc
nop
and
or
add
pop
mov
pop
jle
je
and
lds
int3
je
xchg
pop
adc
imul
iret
add
ins
mov
pop
xor
data16
je
jne
inc
mov
lock
mov
push
xchg
je
repnz
jo
add
adc
sub
mov
hlt
push
inc
jb
xchg
add
popa
inc
add
xchg
xor
out
cmps
movs
add
je
inc
call
sbb
(bad)
mov
or
jl
inc
test
jle
int
mov
cld
bound
push
int3
retf
xor
ficom
add
cmp
ja
mov
push
mov
sub
or
dec
or
mov
push
add
push
adc
mov
loopne
mov
push
push
(bad)
and
ja
mov
and
xor
dec
ret
and
xor
jmp
mov
inc
push
mov
mov
adc
or
push
fs
jne
dec
rol
push
or
push
ins
bound
dec
push
outs
sahf
outs
out
dec
mov
ins
cdq
(bad)
add
xor
sub
fisubr
bound
sbb
add
je
sub
scas
or
adc
add
mov
mov
inc
inc
push
push
mov
add
sbb
mov
loop
stos
dec
adc
xor
mov
inc
bound
test
sub
or
push
jo
xor
jp
cwde
dec
inc
cmp
fs
inc
les
fwait
xor
loopne
in
loope
cld
(bad)
test
dec
je
push
and
push
push
xor
push
push
and
enter
sbb
dec
ds
fs
bound
adc
mov
dec
add
mov
shl
sbb
fs
dec
(bad)
fwait
lods
pop
pop
into
sbb
xor
push
add
test
hlt
daa
xchg
xor
clc
dec
xor
push
sbb
adc
jbe
push
xor
mov
mov
ror
call
ins
ret
ret
add
or
add
add
mov
cmp
fs
adc
dec
mov
inc
inc
dec
or
push
dec
dec
xlat
jle
mov
int
sub
jp
push
pop
push
js
fmul
out
jp
sbb
or
lods
fs
pop
mov
xor
imul
cmp
nop
aaa
dec
adc
cwde
and
stos
xchg
imul
rol
mov
fidiv
retf
sub
pushf
pop
pop
jno
sbb
xor
mov
jo
xchg
jbe
retf
mov
jb
fwait
popa
sub
(bad)
push
jns
dec
inc
cmps
jae
ss
es
(bad)
fmul
inc
into
pushf
inc
jbe
sub
int3
dec
jne
ins
xor
ror
jmp
(bad)
xchg
outs
enter
fcmovbe
mov
rol
add
fcmovb
xor
sub
sub
add
push
repnz
shr
popa
outs
adc
xor
aaa
aaa
push
mov
pop
inc
jo
push
or
test
push
xor
lock
rcl
pop
xor
mov
and
xor
ins
call
pop
push
dec
push
mov
push
in
and
shl
or
je
and
enter
pusha
push
push
pop
or
sub
xchg
retf
mov
mov
push
arpl
push
cs
int3
xchg
ror
mov
xor
fnstsw
xor
dec
cs
sub
cs
or
xor
or
xor
mov
push
or
xchg
sar
outs
fmul
ins
xor
bound
push
dec
pusha
and
dec
mov
stos
rol
adc
mov
sub
mov
fadd
lea
je
test
addr16
mov
enter
and
outs
adc
xor
shl
pusha
dec
lods
imul
xchg
push
or
loop
push
adc
and
js
popa
nop
adc
mov
push
mov
add
dec
aad
imul
push
dec
mov
add
gs
add
jo
jmp
int3
jg
xchg
call
jb
ss
xor
jne
xchg
add
xchg
add
pushf
call
add
jae
ins
cmp
push
xor
pop
mov
sbb
or
movs
xchg
loop
fsubr
add
push
mov
shl
inc
inc
sbb
pop
add
push
add
and
je
inc
sbb
mov
add
cwde
and
jl
shl
sar
imul
push
stos
ins
rcr
ins
ret
jo
loop
jp
call
stos
dec
test
pop
cmp
mov
xchg
mov
shl
adc
adc
bound
aad
sbb
or
shl
jbe
xor
push
pop
dec
push
pushf
xor
test
add
jo
add
cmps
test
add
bnd
sub
movs
sbb
inc
mov
adc
hlt
jo
sub
or
push
add
xor
mov
xchg
adc
fidivr
test
push
test
je
and
ins
mov
or
cmp
sbb
pop
adc
push
xchg
lea
pop
dec
dec
xchg
inc
out
xor
sbb
add
xor
aaa
adc
outs
imul
pop
push
jo
adc
jno
rol
test
push
rcr
inc
fnstenv
test
and
mov
xor
push
les
push
cld
pop
retf
adc
sub
mov
xor
sub
xor
sbb
sbb
jbe
adc
dec
jb
xor
inc
add
into
pop
pop
and
push
add
or
sbb
pushf
gs
pop
int
and
ja
push
pop
or
mov
inc
xor
mov
sub
and
xchg
leave
push
xchg
sub
test
sbb
bound
jo
mov
push
mov
xchg
sbb
fld
and
addr16
xchg
add
inc
es
or
xor
jo
adc
loop
sbb
mov
arpl
jbe
jns
cwde
inc
test
jo
ds
jb
test
je
lea
mov
movs
jae
daa
or
sub
lea
loop
in
push
push
sub
xor
push
dec
jp
inc
dec
ins
inc
ficomp
fmul
out
and
mov
xchg
add
call
mov
movs
add
push
mov
in
dec
jo
xor
cld
test
push
xchg
or
add
mov
out
mov
pop
and
xor
sbb
mov
or
arpl
add
adc
fdiv
add
pusha
lock
inc
or
inc
test
xor
mov
push
loopne
cmp
inc
inc
ss
push
sub
mov
xchg
cs
add
mov
add
xchg
mov
push
je
add
popa
gs
push
call
dec
xor
dec
push
and
inc
xor
retf
adc
popa
call
push
mov
bound
outs
xor
dec
bound
test
xor
push
dec
mov
into
push
shr
add
jo
dec
jbe
popa
adc
sbb
xor
and
out
add
js
pop
mov
les
dec
xor
ret
cs
or
inc
lock
inc
shr
ins
adc
es
add
ins
jns
adc
xor
xchg
sbb
pop
call
in
push
dec
adc
cs
or
shl
test
inc
add
xor
fisubr
pop
popa
push
or
ret
pop
dec
enter
(bad)
mov
jl
(bad)
clc
test
jo
adc
test
xchg
call
cs
lock
push
fs
add
adc
lock
xchg
push
inc
(bad)
add
mov
lock
sbb
je
dec
rol
adc
fcom
or
or
ficom
or
loop
or
call
es
inc
adc
and
xor
or
loop
dec
inc
dec
pop
fcomp
add
sar
or
or
push
push
xor
dec
inc
adc
or
(bad)
sbb
ins
add
inc
adc
xor
and
add
arpl
pop
xchg
es
push
add
push
sub
adc
inc
call
dec
dec
or
and
xchg
enter
inc
and
mov
inc
or
nop
lods
ja
cdq
sub
hlt
(bad)
and
xchg
inc
add
push
hlt
inc
pop
lock
and
es
cmps
push
pop
cmp
adc
push
sub
inc
sub
fisubr
mov
push
add
ja
bound
into
jp
ret
inc
or
sahf
daa
test
dec
push
inc
dec
xor
mov
push
push
fs
jb
adc
xchg
imul
sbb
push
push
add
jb
or
push
sbb
add
push
push
add
cmp
sbb
dec
cs
imul
inc
xchg
test
jns
dec
imul
dec
push
or
ins
fsubrp
sbb
jb
(bad)
push
sub
outs
xor
aaa
fwait
sub
inc
rcl
xchg
movs
fisub
jb
push
movs
inc
inc
pusha
inc
push
fimul
xor
pop
xor
pop
cs
adc
test
sub
adc
sbb
mov
or
dec
mov
mov
adc
cmp
repnz
xor
jns
adc
xor
or
lods
xchg
retf
xchg
inc
adc
sub
push
inc
jmp
mov
pop
loopne
dec
mov
stos
push
push
ret
push
sbb
dec
adc
push
out
pop
inc
cmp
cmps
inc
sub
jb
jo
test
push
test
imul
push
jo
push
bound
xchg
retf
and
stos
xor
mov
inc
es
inc
xchg
inc
xchg
push
rcl
adc
fdiv
mov
pop
pop
jns
push
cmps
data16
push
pop
dec
xchg
ret
push
dec
ds
js
inc
mov
push
push
dec
jo
inc
enter
adc
inc
push
add
outs
push
inc
sbb
sub
sbb
adc
xor
adc
add
dec
push
push
mov
or
xor
xor
inc
push
push
and
popa
jb
outs
mov
call
and
shr
nop
push
xor
dec
inc
push
lock
jp
mov
pop
inc
lock
mov
add
jbe
ret
add
(bad)
ror
or
inc
mov
test
xor
mov
pop
push
sub
add
jmp
mov
or
fisub
pop
xchg
test
cmps
loopne
sub
inc
jne
sar
push
jmp
mov
movs
adc
cwde
pop
pushf
rcr
sbb
je
jp
xor
gs
inc
jae
outs
add
outs
cmp
inc
mov
in
pop
xor
push
xor
add
outs
sub
add
xor
inc
retf
cmc
inc
add
push
sbb
push
xor
dec
pop
cs
or
xor
push
shl
test
rcr
loop
jno
inc
xor
and
out
ins
inc
lds
xor
rol
scas
ja
push
shl
xor
test
enter
xor
hlt
addr16
jb
call
popa
fldcw
out
inc
cwde
pop
sub
mov
add
push
push
movs
jo
dec
in
add
and
sbb
push
jb
nop
or
mov
data16
and
or
ficom
and
jmp
icebp
imul
mov
sub
push
loopne
daa
jne
cmp
xchg
loopne
mov
cmp
push
adc
add
jo
mov
sbb
in
inc
pop
xlat
inc
mov
sub
push
addr16
dec
inc
or
inc
repnz
aam
js
push
in
dec
ins
inc
cmps
fs
ins
fs
nop
xor
push
aam
inc
cwde
imul
fst
mov
mov
and
data16
pushf
dec
inc
mov
or
or
retf
outs
adc
xor
inc
cmovae
cwde
or
retf
jp
pop
inc
adc
sub
inc
mov
ins
cmp
jmp
out
or
sbb
sub
inc
push
adc
xor
mov
inc
mov
inc
mov
dec
or
enter
mov
and
xor
xchg
push
push
mov
jp
mov
mov
cs
push
sbb
inc
push
inc
xchg
or
int3
bound
push
xor
cs
cmp
inc
push
repnz
ficom
int
scas
inc
add
push
xor
in
push
inc
in
adc
pushf
xchg
imul
rcr
and
scas
inc
dec
add
adc
push
js
xor
rol
mov
push
and
adc
mov
add
sub
xor
js
dec
ins
jne
ins
dec
pop
test
push
dec
dec
sbb
sbb
fs
sub
push
sub
dec
cmp
add
jp
aaa
adc
adc
cmp
add
push
mov
mov
dec
or
add
gs
fs
and
sub
xchg
jp
retf
push
add
jne
cli
sub
push
dec
dec
test
pop
ret
dec
inc
xor
arpl
jp
inc
xor
leave
nop
add
sub
sbb
jb
imul
xor
and
xchg
adc
aaa
fsubr
cld
sbb
sbb
out
out
bound
fs
mov
xor
ret
xor
mov
js
dec
dec
adc
stos
and
inc
test
test
fisttp
jo
call
fwait
mov
mov
add
inc
push
push
cmps
out
dec
inc
add
and
push
cwde
mov
pop
in
push
stos
push
push
jae
add
dec
ret
push
pusha
dec
xchg
cli
outs
ret
shr
add
mov
mov
and
dec
sbb
sbb
xchg
adc
pop
push
mov
sbb
mov
je
pop
and
rcl
xchg
sbb
inc
push
jl
mov
call
xor
push
mov
sub
enter
or
dec
loop
add
data16
jp
push
jns
push
js
inc
adc
adc
(bad)
data16
ins
jp
sub
sbb
mov
inc
push
imul
jb
(bad)
xor
mov
leave
and
mov
jne
push
push
xor
xchg
retf
(bad)
sbb
xchg
mov
xor
or
and
in
movs
nop
push
mov
xchg
or
fdiv
nop
dec
inc
ja
retf
ss
movs
les
jb
push
out
add
cmps
xor
es
xor
push
mov
xor
jno
clc
clc
mov
dec
dec
or
popa
or
pusha
mov
lock
or
push
ins
mov
push
div
or
inc
scas
mov
inc
adc
jbe
push
dec
jo
adc
add
xchg
movs
inc
add
cmp
push
je
push
push
mov
popa
ins
cli
and
cmp
dec
mov
dec
jmp
mov
mov
sbb
push
test
xchg
jle
ror
inc
es
loop
adc
push
mov
call
xor
push
inc
enter
out
sub
jne
jae
or
sub
dec
retf
sbb
ja
xchg
fwait
adc
dec
movs
jb
push
je
and
out
xor
pop
scas
dec
neg
mov
push
cwde
jne
jbe
add
push
push
add
mov
in
push
add
jp
clc
xchg
enter
dec
jae
and
or
mov
dec
pop
add
add
stos
sub
push
shr
mov
xor
mov
push
fs
fs
mov
push
dec
dec
pop
ds
sbb
in
sar
push
and
and
sub
ficomp
pop
push
dec
ss
dec
dec
loope
retf
inc
jno
bound
or
jo
push
or
and
push
adc
mov
das
mov
or
stos
gs
bound
xlat
fisub
adc
jbe
retf
dec
sbb
mov
sub
jle
cmps
and
pop
xor
mov
push
dec
mov
jp
mov
xor
or
bound
pushf
jne
nop
push
pop
mov
jo
xor
inc
int
jl
mov
xchg
or
add
mov
adc
int3
data16
pop
or
dec
push
popa
xor
adc
into
adc
jb
test
pusha
call
pushf
pushf
unpcklps
adc
push
xor
ficom
loop
mov
dec
xor
mov
xor
xor
xchg
retf
add
sub
dec
push
lock
mov
push
inc
es
movs
pop
ss
retf
pop
adc
dec
jl
add
add
sbb
sbb
dec
xor
push
stos
push
lods
push
ja
in
xor
adc
pop
sub
sahf
fdiv
adc
fld
sbb
popa
mov
dec
aaa
push
sub
and
pop
xor
(bad)
cmps
adc
inc
outs
lea
push
adc
and
cwde
test
jbe
(bad)
lds
jp
jbe
push
xchg
lock
ins
pop
push
sub
inc
fisub
pop
jbe
jae
lock
movs
xchg
mov
aaa
cmp
adc
mov
dec
inc
cwde
ror
retf
sub
adc
stos
loop
xor
dec
out
push
sbb
ret
test
test
daa
pop
cwde
jno
jo
fwait
lea
mov
inc
push
gs
pop
ds
bound
gs
imul
in
push
and
es
push
sub
sub
add
test
xchg
ins
add
add
mov
adc
adc
add
inc
mov
xor
inc
enter
mov
or
sbb
or
int
loope
push
jo
push
push
(bad)
push
xchg
push
xor
out
adc
adc
test
inc
adc
dec
xor
dec
push
fld
xor
fiadd
and
sbb
mov
jae
stos
outs
es
xor
repz
xchg
mov
imul
dec
bound
adc
or
cmp
cmp
dec
inc
(bad)
lock
cli
retf
inc
add
sub
push
xchg
and
dec
dec
xor
adc
xchg
push
mov
outs
call
adc
push
in
jbe
inc
fmul
loope
mov
xor
and
add
push
push
mov
jno
adc
test
dec
ins
bound
bound
inc
inc
lock
push
add
add
(bad)
cmps
and
ins
xor
outs
or
xchg
leave
pushf
cmp
adc
push
add
inc
inc
test
cmps
jbe
lods
dec
and
push
push
sahf
xor
push
xchg
and
shl
jnp
xchg
mov
es
inc
or
push
mov
mov
rcl
and
inc
cmps
lods
mov
adc
aad
sub
xchg
push
inc
push
pop
xor
dec
outs
(bad)
or
dec
lea
push
sub
mov
adc
and
aam
xor
test
mov
add
push
je
adc
mov
jbe
adc
mov
or
mov
retf
les
lods
inc
cdq
popa
enter
imul
dec
add
dec
push
xchg
cmp
xor
cs
je
dec
jb
imul
or
inc
push
or
inc
test
test
stos
cbw
hlt
mov
lods
mov
push
jns
dec
inc
sbb
data16
xor
sbb
sbb
inc
inc
mov
jbe
test
add
adc
retw
test
bound
sahf
xchg
ret
sub
xor
or
test
xchg
xor
sub
es
push
add
and
sub
jno
js
es
je
ss
js
or
test
jbe
mov
xor
stos
or
js
add
adc
push
inc
scas
mov
les
loope
or
xor
xchg
les
dec
fs
int
ss
xor
push
xor
ds
mov
jb
dec
jns
jle
push
adc
sbb
ins
jns
cmp
dec
pop
jo
dec
pushf
or
ins
or
mov
xor
push
push
push
sbb
lods
stos
xor
xor
push
pushf
mov
xor
nop
push
stos
or
push
xor
ins
ret
push
or
dec
ja
jb
xor
add
adc
xor
gs
cmp
add
add
xor
sbb
xor
hlt
js
add
push
ds
xor
inc
test
out
pusha
test
test
bnd
add
call
inc
stos
xchg
sbb
ins
xor
xor
sub
and
je
or
pop
xchg
dec
push
adc
push
and
push
ficom
nop
sbb
inc
push
add
test
xor
add
movs
push
test
cwde
ins
push
cs
inc
cmps
ja
jne
or
mov
push
js
push
push
mov
test
xor
mov
push
dec
aam
dec
jo
(bad)
sub
push
push
or
test
push
sahf
or
loopne
or
dec
xor
inc
mov
movs
sub
fs
adc
fs
inc
and
test
xor
imul
xor
stos
dec
jns
les
enter
sub
add
in
test
data16
sub
shr
inc
movs
adc
xor
or
mov
and
push
test
dec
retf
add
xchg
das
add
jno
gs
fmul
push
in
add
out
jo
les
mov
inc
xor
aad
loope
(bad)
ja
inc
push
nop
or
cmp
cld
sbb
(bad)
push
sub
dec
inc
jb
jo
and
daa
jp
sub
adc
mov
and
dec
jmp
and
cs
sub
push
ficom
enter
push
dec
inc
mov
add
jmp
dec
and
cmp
add
dec
inc
faddp
bound
adc
fs
js
push
push
ins
xchg
xor
inc
(bad)
dec
cdq
js
dec
and
test
add
push
sbb
xor
adc
mov
xor
ret
and
mov
add
cmp
push
or
bound
je
push
dec
inc
xor
stos
mov
push
in
imul
xor
cmps
test
xchg
inc
sbb
inc
push
mov
xor
xor
push
shl
sahf
stos
dec
je
dec
call
push
popa
or
jmp
lods
pushf
sbb
push
add
fs
and
sub
dec
mov
jbe
sbb
adc
push
xor
pop
test
jns
xor
adc
mov
nop
outs
inc
mov
push
leave
jmp
enter
inc
cmp
fsubr
cld
imul
sub
sub
sbb
add
or
jo
mov
push
mov
and
adc
out
outs
pop
pusha
add
mov
xor
test
adc
or
sub
and
sahf
imul
add
add
or
or
cwde
sub
sbb
mov
push
lods
xchg
adc
pop
push
and
jb
and
inc
and
sub
data16
or
jns
and
movs
dec
rcr
mov
retf
inc
push
out
push
jbe
dec
stos
mov
jb
pop
sub
ds
bound
lahf
sub
push
fsub
xor
inc
sbb
fs
lods
pusha
and
and
adc
xchg
sbb
imul
jo
stos
sbb
pusha
or
sub
dec
sbb
fiadd
push
xor
sub
add
cmps
push
and
hlt
xchg
je
test
jmp
dec
mov
xor
inc
xor
dec
cmp
mov
jmp
sbb
push
(bad)
xchg
je
adc
xchg
je
(bad)
push
int3
push
and
movs
loopne
lock
repnz
neg
or
add
in
xor
push
fwait
push
sub
sbb
dec
inc
xor
or
loopne
xchg
or
adc
adc
outs
je
bound
inc
adc
bound
pop
mov
mov
xchg
inc
mov
push
dec
inc
pop
mov
inc
fcom
or
loop
cmp
push
and
push
push
inc
sub
addr16
or
inc
js
addr16
dec
or
mov
cmp
mov
add
push
dec
test
xchg
or
inc
jb
push
aad
jmp
inc
ins
mov
push
cmp
ins
mov
in
inc
rcr
inc
push
outs
push
or
mov
xchg
pusha
adc
rol
cs
inc
push
popa
push
xchg
sub
retf
push
fimul
and
push
sub
mov
mov
xor
enter
push
fisub
inc
mov
push
add
int3
inc
dec
jbe
test
jo
in
inc
mov
imul
xchg
xor
adc
mov
push
xchg
jne
inc
push
jne
xchg
dec
sub
xor
push
dec
jb
jb
pop
loopne
add
xchg
mov
and
adc
pop
jbe
xchg
mov
out
inc
mov
pop
push
or
inc
xchg
cmp
enter
jp
and
ins
jle
pop
and
adc
add
mov
sbb
jo
dec
xchg
push
cwde
lock
popa
adc
push
test
je
inc
push
inc
push
int3
movs
or
enter
shr
outs
(bad)
pop
imul
sub
shl
mov
(bad)
jae
scas
dec
inc
dec
sub
inc
xor
sbb
jmp
ror
retf
mov
and
sbb
or
mov
stos
dec
or
adc
xchg
push
jl
xor
movs
dec
mov
inc
data16
sbb
scas
pop
jle
fs
dec
and
add
push
push
shl
cmp
test
loopne
dec
test
cmps
popa
bound
and
xor
jae
and
test
or
call
sahf
into
xor
push
inc
inc
inc
inc
out
xor
pusha
adc
inc
push
sahf
jno
adc
and
bound
sub
leave
sub
mov
push
xchg
mov
jb
mov
mov
cs
adc
stos
add
popa
push
push
stos
push
sahf
dec
push
adc
sub
push
xor
inc
test
xor
dec
xchg
arpl
ins
sbb
pop
ss
adc
test
xor
add
dec
in
cmp
dec
push
sbb
push
dec
jl
dec
and
fdiv
or
stos
or
pop
(bad)
pop
mov
dec
sub
cs
mov
inc
retf
ss
add
jo
xchg
push
ja
sahf
mov
mov
mov
(bad)
mov
or
nop
xor
sbb
(bad)
test
dec
outs
xor
xor
pop
xchg
pop
pusha
xor
shl
ins
inc
pop
fst
and
xchg
dec
xor
mov
jne
xor
test
adc
sub
imul
mov
test
push
dec
mov
movs
and
dec
je
ins
and
push
sub
mov
xchg
(bad)
hlt
ror
xor
push
push
data16
adc
add
add
pop
add
ins
adc
bound
rcl
add
lods
jp
jbe
movs
movs
nop
data16
add
mov
push
push
jns
dec
or
push
mov
pop
push
and
(bad)
xor
cwde
and
je
sbb
es
fisttp
add
sbb
dec
xor
cwde
js
fidiv
enter
and
inc
sub
cmc
or
xchg
push
dec
sub
mov
bound
fisub
and
dec
or
stos
or
movs
or
sub
push
stos
lea
push
out
and
push
jb
inc
mov
adc
lods
hlt
dec
mov
test
jae
sbb
cmp
xor
ret
add
adc
push
test
and
push
and
adc
and
ss
add
xchg
js
xor
fs
push
or
xchg
push
ins
push
jbe
push
ret
push
cmp
pusha
movs
add
sub
push
sub
mov
dec
mov
add
imul
in
bound
push
movs
xor
push
je
je
js
pop
dec
(bad)
jns
loopne
push
mov
jo
sbb
and
pop
dec
add
inc
jae
xor
pop
adc
mov
add
les
cwde
data16
pusha
cmp
add
cmp
push
inc
sbb
and
sub
inc
sub
inc
mov
js
(bad)
fdiv
or
or
les
cmp
inc
dec
fs
xchg
ss
dec
ins
ret
push
inc
adc
lock
inc
jo
jle
add
mov
movs
imul
ins
(bad)
lock
mov
bound
cmp
or
add
push
aaa
repnz
pop
dec
in
add
mov
mov
loopne
nop
sub
push
xchg
add
les
fsub
mov
sub
xchg
inc
cdq
inc
and
xor
add
ss
inc
inc
jne
xor
inc
and
jl
inc
push
jp
ins
sbb
(bad)
ja
scas
dec
add
bound
daa
sbb
out
in
or
test
imul
fs
popa
les
jb
mov
jne
inc
inc
mov
jae
dec
sub
mov
hlt
je
inc
je
in
and
sahf
js
xchg
and
(bad)
ins
add
inc
mov
test
mov
je
sub
lock
rol
aam
inc
push
sub
pop
or
mov
ss
bound
mov
sbb
out
inc
xor
push
adc
test
test
gs
retf
sub
popa
mov
inc
movs
mov
xchg
out
jb
push
adc
and
sbb
pusha
push
jl
push
push
sbb
jbe
adc
adc
xchg
push
clc
aam
and
mov
bound
inc
test
sub
mov
imul
shl
xchg
mov
add
adc
ss
push
mov
loopne
jle
or
bound
mov
jo
jp
sbb
cmp
xor
int3
push
mov
enter
pusha
push
rcr
in
and
pop
xor
inc
movs
inc
gs
fadd
xchg
or
mov
add
adc
into
push
or
push
inc
xchg
nop
pop
nop
xchg
push
mov
(bad)
push
add
adc
push
and
mov
mov
inc
retf
add
xor
pusha
inc
popa
cmps
repnz
and
push
adc
sub
cmp
je
jle
xor
dec
(bad)
push
mov
scas
xor
popf
and
cmp
or
sahf
xor
or
aam
leave
add
out
es
and
pop
aam
clc
jbe
mov
jb
data16
fmul
jne
push
xor
pusha
add
xor
outs
inc
popa
inc
mov
pop
into
xor
dec
xor
or
imul
push
nop
xor
jp
sar
inc
push
inc
push
jo
cmp
push
and
inc
adc
xchg
test
pop
and
sbb
pop
xor
inc
enter
les
adc
pop
jb
sahf
xor
adc
or
inc
xor
mov
xchg
fadd
add
sbb
int
pusha
xchg
into
mov
jbe
fwait
lods
dec
lods
ins
inc
mov
push
and
test
loope
inc
xchg
bound
inc
out
ins
xor
or
jbe
sub
add
shl
push
push
xor
retf
sub
dec
and
or
or
or
mov
sub
or
inc
mov
lods
xchg
les
pop
outs
cwde
fisub
fcom
adc
data16
dec
or
test
test
clc
push
inc
and
cmp
pop
in
mov
retf
ins
xor
push
xor
adc
je
fist
or
mov
cmp
adc
or
sub
bound
inc
dec
jo
dec
gs
inc
cmp
cmovae
push
dec
inc
inc
ror
test
xor
and
dec
fs
push
and
call
shl
xchg
mov
mov
ja
imul
arpl
push
adc
pop
pusha
or
jb
arpl
or
inc
sbb
ror
dec
inc
inc
inc
lods
and
and
dec
ja
push
and
xor
xor
adc
dec
outs
pop
adc
fmul
sub
pop
push
out
pushf
push
sub
add
imul
dec
ins
and
mov
ret
in
movs
mov
les
sub
pop
push
dec
dec
dec
je
outs
inc
in
and
mov
push
mov
loopne
sahf
push
cmp
sub
sub
scas
jp
add
push
ins
arpl
out
pop
and
test
add
adc
dec
test
sub
(bad)
retf
and
dec
and
cmp
mov
dec
dec
inc
xor
data16
sub
data16
enter
dec
cwde
mov
outs
jp
ins
dec
mov
int
lods
addr16
sbb
loope
dec
fisub
fs
cmp
xor
out
aaa
and
push
and
and
adc
sub
ja
aaa
push
mov
faddp
(bad)
fsub
bound
cmp
and
or
and
inc
test
cdq
pop
xchg
inc
adc
adc
inc
mov
mov
cmp
out
push
aaa
adc
xchg
retf
mov
push
or
ss
mov
cld
and
xor
ja
xor
mov
xchg
cwde
add
or
or
add
xchg
fcmovbe
xchg
sbb
inc
xor
mov
loopne
pop
(bad)
mov
jo
sub
cmp
nop
ins
or
lods
and
pop
push
sbb
dec
sahf
xor
inc
push
cmp
cmp
pop
rol
or
ss
xor
mov
dec
push
mov
inc
shl
push
xor
push
or
mov
movs
or
jbe
outs
dec
mov
inc
mov
jae
mov
xchg
sbb
inc
xor
rol
jns
xchg
mov
enter
gs
and
dec
or
out
cld
mov
stos
and
inc
mov
cmp
call
push
jns
xor
outs
mov
xchg
enter
stos
add
loop
push
pop
add
into
and
mov
xor
loopne
pop
inc
popa
retf
pusha
shl
adc
and
push
inc
ss
or
sub
mov
jns
push
int3
loopne
pop
jb
xor
jne
enter
or
adc
popa
push
xchg
popa
inc
mov
dec
cmp
dec
outs
addr16
add
ror
cli
push
and
bound
inc
push
cmp
(bad)
mov
data16
adc
adc
lahf
ss
adc
inc
push
inc
dec
sbb
retf
enter
mov
ss
dec
bound
mov
data16
mov
pop
test
hlt
jmp
add
or
imul
sbb
adc
xor
cld
sub
push
xchg
inc
push
pop
bound
cs
pusha
dec
cmps
push
inc
bound
int3
sbb
inc
and
inc
mov
mov
push
add
inc
jo
or
and
push
adc
aam
xor
adc
mov
push
dec
jae
fimul
sbb
jo
adc
mov
(bad)
push
inc
clc
in
ins
nop
fwait
ret
inc
dec
js
pushf
sub
xchg
add
inc
in
add
jb
add
sub
int
and
adc
push
push
pusha
inc
xchg
adc
mov
push
xor
push
movs
push
xor
int3
shl
outs
lods
pop
mov
adc
ret
call
sub
enter
movs
nop
push
and
mov
add
dec
push
push
sub
dec
dec
stos
popa
enter
mov
mov
test
bound
push
or
dec
shl
push
popa
jns
addr16
adc
and
push
xor
push
xchg
pop
dec
pop
or
cwde
mov
mov
mov
sbb
mov
mov
ins
outs
es
sub
ret
jo
xchg
or
dec
loopne
push
or
je
dec
and
sahf
ss
xchg
test
jbe
pop
adc
hlt
inc
inc
inc
rol
ins
nop
pusha
push
(bad)
test
jo
aam
gs
movs
dec
pop
call
adc
mov
pop
jo
sar
or
xchg
shl
cmp
dec
jecxz
mov
pop
ret
lea
and
adc
out
jmp
push
xor
xor
outs
fs
ins
pop
xor
sbb
push
data16
ins
inc
inc
dec
push
add
pop
pushf
push
push
leave
ins
jmp
mov
add
mov
out
fdiv
leave
or
jb
rol
jmp
mov
inc
fisub
dec
dec
dec
xor
mov
into
xor
push
xor
push
pop
test
dec
push
lods
dec
inc
fs
mov
fs
push
addr16
xor
xchg
xor
out
and
ret
stos
push
adc
ficomp
les
add
adc
shr
xor
push
movs
sbb
ss
aaa
add
xchg
movs
push
push
xor
ins
call
adc
mov
add
or
into
outs
push
pusha
stos
push
hlt
gs
mov
pop
xchg
inc
test
mov
and
outs
push
dec
add
and
repnz
outs
sub
mov
(bad)
jbe
or
test
push
retf
mov
lods
arpl
movs
xor
sub
push
or
test
ficomp
or
mov
xchg
cdq
data16
or
or
and
or
add
retf
cmp
dec
movs
mov
add
jbe
or
cmp
adc
mov
xor
add
xor
mov
inc
inc
push
into
pop
dec
dec
fwait
push
push
push
add
loopne
rol
add
scas
push
arpl
push
mov
jns
loope
gs
(bad)
sbb
fsub
xchg
push
gs
push
adc
les
enter
adc
push
inc
adc
add
jbe
add
fs
xor
outs
add
add
xor
imul
cld
mov
mov
mov
inc
retf
or
inc
or
scas
adc
adc
mov
loop
pop
or
inc
push
mov
push
imul
adc
int3
xor
and
xchg
push
adc
js
pop
inc
sbb
cwde
dec
test
ret
and
jb
bound
add
cwde
les
adc
aas
ja
sub
dec
and
mov
xchg
push
push
sub
test
ins
enter
or
pop
lock
inc
push
inc
pop
jne
sub
icebp
shl
imul
inc
popa
pop
popa
cli
imul
and
daa
loope
add
cmps
adc
push
pop
js
popa
in
xchg
cs
popa
dec
inc
lea
xor
(bad)
inc
dec
gs
pop
aam
test
push
add
jp
add
test
add
dec
ins
mov
enter
pop
adc
inc
inc
xor
adc
inc
inc
pusha
stos
les
mov
dec
inc
xchg
add
xor
outs
xor
ins
jo
or
pusha
sahf
hlt
mov
push
shr
test
bound
dec
push
retf
cs
push
push
and
mov
mov
dec
push
add
inc
xor
pusha
lods
and
push
sbb
je
add
test
inc
mov
inc
dec
mov
adc
lock
outs
adc
inc
nop
inc
hlt
(bad)
inc
or
xor
cmp
push
adc
shr
dec
xchg
adc
adc
loopne
inc
stos
int
push
shl
add
call
or
mov
hlt
jp
xchg
ficom
mov
cwde
and
add
mov
cmps
xor
aaa
xor
push
bound
shr
int3
es
sub
push
je
adc
push
dec
imul
xor
sbb
push
ja
jo
xor
inc
arpl
sub
ins
ss
dec
repnz
xchg
add
les
pop
mov
mov
sub
jbe
data16
pop
call
int
inc
xor
or
push
(bad)
data16
jo
push
clc
add
aaa
int3
mov
int
xor
jne
dec
fs
(bad)
cs
pop
clc
dec
adc
push
adc
repnz
aad
xor
push
push
fs
pusha
jne
jmp
or
js
sbb
test
jmp
jle
aam
cmp
and
jl
add
shl
inc
push
mov
data16
aaa
xchg
inc
ins
aaa
inc
pusha
pop
pop
and
loop
addr16
inc
jecxz
outs
dec
or
or
aam
jp
dec
or
xor
sar
cmp
fmul
mov
xor
imul
inc
fidivr
sahf
ss
data16
and
xchg
or
(bad)
pop
inc
xor
popa
test
stos
shl
mov
jns
cmp
ret
imul
dec
xor
mov
and
inc
test
movs
add
out
dec
pop
js
adc
test
movs
add
jae
cmp
mov
push
adc
push
fcom
inc
mov
dec
mov
push
loopne
sub
and
or
arpl
push
and
xchg
inc
bound
adc
es
cmp
mov
popa
imul
mov
add
inc
inc
pop
retf
pop
push
scas
xchg
imul
jno
xchg
bound
out
mov
xor
ret
or
imul
add
cs
pop
dec
cmp
add
cmp
pop
xor
test
pop
add
call
sub
stos
and
jbe
cmp
aaa
mov
and
push
push
jmp
push
jp
imul
sbb
dec
sbb
retf
xor
and
add
inc
hlt
ss
and
sub
ds
pushf
mov
xor
shl
pusha
in
pop
sub
and
add
push
xor
inc
adc
push
mov
push
sub
jns
inc
push
outs
add
push
or
ins
imul
fmul
pop
jp
dec
scas
and
test
bound
xor
add
xor
xchg
pushw
sub
lods
mov
call
call
cmp
and
adc
sub
push
in
push
test
inc
fwait
inc
shl
mov
gs
(bad)
xor
xor
adc
push
je
sbb
add
push
dec
rcl
lea
mov
call
movs
add
sub
cmp
cld
push
fs
add
push
add
push
inc
(bad)
adc
inc
inc
adc
or
outs
push
ja
fimul
or
test
xor
mov
and
jo
cdq
adc
fiadd
dec
push
cmp
inc
cmp
dec
ins
xchg
outs
js
je
mov
inc
mov
push
pop
dec
xor
cmp
xchg
ss
aaa
mov
adc
jns
mov
add
dec
fwait
pushf
adc
arpl
test
and
inc
xor
sbb
popa
add
pop
and
inc
adc
adc
addr16
or
or
test
test
xchg
inc
inc
sbb
dec
add
xor
inc
bnd
push
push
(bad)
push
xor
xor
xor
push
push
add
int3
push
mov
ss
adc
sbb
pop
adc
sbb
mov
push
mov
outs
xor
push
push
add
inc
adc
cmp
nop
test
push
fist
adc
push
data16
loop
jb
dec
push
rcr
add
scas
and
cmp
mov
cmp
push
or
add
push
add
outs
or
push
sub
imul
retf
dec
(bad)
jl
inc
dec
add
push
cmp
hlt
push
es
jo
and
int3
scas
dec
sub
sbb
add
dec
mov
mov
mov
mov
aaa
pusha
outs
jns
or
mov
cmp
pop
xor
push
adc
dec
jmp
imul
push
inc
add
sub
add
hlt
inc
and
mov
cs
pop
adc
push
stos
cmp
jmp
dec
inc
cmp
add
adc
inc
ficom
bound
push
outs
cmp
add
and
mov
and
add
outs
ss
stos
enter
mul
sbb
scas
mov
xor
adc
shl
pop
add
xor
movs
inc
push
cmp
sub
bound
enter
inc
inc
mov
and
inc
or
xchg
stos
pop
inc
cmp
push
fstp
(bad)
inc
arpl
stos
rcr
mov
sub
ficom
call
xor
mov
dec
sbb
js
fsub
xchg
dec
fwait
add
je
aaa
mov
pop
jne
dec
call
jp
mov
push
mov
xor
mov
and
inc
js
inc
xchg
dec
sbb
daa
add
pop
outs
sbb
xor
dec
sbb
cmp
test
pop
inc
bound
sahf
mov
jo
sbb
fwait
inc
inc
ins
sub
xchg
popa
mov
add
or
fs
inc
dec
jo
sbb
ret
push
push
add
jae
mov
jns
push
sbb
mov
ret
fdiv
mov
push
stos
dec
push
xor
scas
add
pop
xchg
push
push
push
mov
add
dec
test
jmp
push
push
dec
mov
out
ret
sub
push
pop
in
stos
enter
ins
xor
inc
mov
js
push
inc
push
mov
or
ficom
bound
loopne
mov
dec
cs
push
adc
ins
sbb
xchg
jo
add
or
sub
jns
aaa
sub
mov
pop
adc
inc
sub
and
aaa
js
out
mov
dec
adc
or
rcr
rcl
dec
mov
mov
mov
xchg
outs
xor
xor
(bad)
cmp
add
jmp
pop
call
mov
inc
js
fs
and
push
stos
test
push
retf
inc
add
xor
fadd
inc
and
nop
pop
push
ss
add
shr
cmp
ret
and
test
and
movs
add
adc
cmp
adc
push
sub
push
outs
(bad)
gs
retf
fadd
inc
(bad)
add
inc
js
dec
and
jns
scas
leave
popa
xor
loop
mov
mov
or
cld
push
pop
cwde
lea
add
stos
dec
call
add
bound
sub
add
dec
mov
mov
xor
sbb
test
add
inc
or
(bad)
loopne
add
dec
mov
inc
je
call
xor
xchg
in
and
and
call
cdq
dec
not
dec
dec
cmp
outs
shl
and
jb
dec
adc
ds
mov
inc
mov
inc
test
add
shl
fsub
and
lods
pop
push
push
js
cwde
inc
inc
xchg
push
ja
pop
adc
jb
jl
and
xchg
sbb
sub
inc
mov
xchg
sub
dec
jb
push
push
cmp
sub
inc
jne
cmp
xchg
rcl
inc
mov
popa
test
dec
inc
mov
mov
cmp
rol
fcom
jmp
dec
dec
inc
je
loopne
not
xor
adc
into
bound
adc
pop
je
inc
jmp
mov
xor
inc
or
push
inc
push
inc
or
data16
mov
bound
rol
and
mov
(bad)
stos
fcom
fs
mov
add
enter
xchg
ins
mov
push
sub
push
cmp
xor
adc
inc
adc
inc
adc
xchg
add
push
movs
(bad)
fdivr
sub
add
jae
dec
mov
sub
js
add
sub
mov
push
xor
push
push
cmps
xchg
and
rol
mov
inc
test
cli
xor
inc
inc
je
mov
xor
mov
xchg
jno
or
int3
retf
add
fsub
jb
xchg
ins
and
nop
mov
leave
mov
push
test
sub
push
or
sub
push
jb
or
xor
adc
mov
xchg
movs
xchg
xchg
push
sbb
jge
jo
push
or
cs
inc
dec
ins
adc
aam
pop
push
or
jb
fs
xchg
xchg
sahf
and
ss
arpl
mov
adc
push
cmps
xor
out
push
cmps
add
or
arpl
sub
and
mov
or
sub
nop
jbe
shl
and
push
ins
les
and
add
xor
sub
cwde
and
cmp
mov
jo
scas
push
aam
pusha
imul
push
push
ret
repnz
push
xchg
aam
xor
add
adc
push
adc
inc
push
ins
cmp
fsubr
(bad)
dec
retf
push
jb
aaa
lods
enter
(bad)
clc
mov
add
add
jns
imul
in
test
inc
cmp
pusha
jo
cdq
adc
mov
sub
or
bound
inc
fsubr
sbb
fisub
push
loopne
dec
ret
inc
dec
es
ins
jne
imul
pop
cvtps2pd
inc
mov
xor
push
dec
dec
nop
or
sbb
inc
sbb
ret
and
ss
enter
or
sub
inc
mov
xchg
shr
add
sub
dec
mov
enter
pop
test
inc
jne
dec
aaa
mov
jb
sbb
fwait
jb
adc
aam
inc
shl
shr
dec
ret
popa
push
and
or
adc
hlt
add
int3
dec
xchg
or
inc
stos
or
pop
ja
inc
add
pop
adc
aaa
imul
sub
sub
into
adc
sub
loopne
cdq
adc
jl
xchg
call
jge
push
and
mov
cmp
mov
test
jp
add
mov
mov
ins
pusha
sub
dec
cmp
lods
ins
mov
mov
sahf
inc
inc
add
or
inc
push
mov
ds
jns
jle
call
(bad)
bound
add
lock
test
or
inc
sbb
ret
push
mov
movs
call
add
push
jp
dec
pusha
lods
test
pop
fimul
jp
ror
sub
push
nop
add
sub
jb
push
cwde
repnz
cwde
les
outs
dec
stos
add
js
jbe
rol
scas
push
push
js
outs
jbe
or
push
dec
inc
sub
mov
mov
inc
jmp
hlt
pop
ins
adc
popa
push
(bad)
je
xor
ss
mov
mov
push
push
push
mov
popa
inc
push
xor
mov
pop
cmps
mov
mov
sbb
ins
and
outs
dec
sbb
sbb
add
cs
inc
popa
cmp
xor
mov
dec
adc
ret
and
or
push
lea
outs
xor
jp
inc
sbb
nop
retf
loopne
cli
or
push
jo
inc
adc
xchg
aaa
xor
xor
push
jno
inc
adc
sub
pop
inc
adc
cmp
push
add
and
jno
jle
sbb
mov
add
jb
jne
call
aam
jno
and
add
pop
bound
shr
add
push
movs
test
jo
sbb
mov
or
xchg
cmp
dec
fadd
xor
jo
pusha
mov
sbb
dec
hlt
add
scas
outs
pop
add
rol
inc
push
xchg
mov
jl
lds
imul
aam
dec
mov
mov
jne
mov
mov
leave
push
adc
in
cld
push
inc
test
sbb
sbb
(bad)
xchg
mov
add
lock
mov
sub
mov
push
add
xor
jmp
mov
enter
cmps
mov
push
sub
inc
je
cmp
out
cld
or
jns
and
and
dec
or
mov
dec
add
loop
cs
xor
xor
dec
inc
mov
sub
add
sub
dec
push
mov
mov
inc
or
mov
cwde
jb
xchg
movs
mov
or
pop
mov
cmp
push
cmp
inc
ret
jb
pop
outs
dec
and
or
sub
dec
adc
pushf
xchg
xor
cwde
or
fcom
xchg
sbb
lods
cwde
outs
pushf
dec
xor
outs
mov
push
add
adc
cmps
pusha
mov
jle
sub
stos
mov
mov
adc
ins
sbb
inc
retf
data16
clc
mov
jnp
shl
push
add
pop
sub
js
hlt
xor
repnz
adc
mov
mov
sbb
adc
xor
loop
and
stos
cmp
cs
add
dec
int
push
or
call
aam
es
pop
sbb
inc
xor
loop
adc
jp
jl
or
dec
repnz
pop
les
push
jns
ins
adc
jp
bound
pop
js
mov
and
add
xor
je
inc
push
movs
dec
inc
push
dec
gs
sbb
jo
cld
push
in
outs
push
inc
mov
xor
bound
js
dec
pop
push
mov
scas
inc
xor
and
or
jp
xchg
adc
mov
sbb
inc
and
push
xchg
or
jo
shl
add
push
jo
sbb
mov
pushf
push
inc
add
push
cli
or
sub
dec
xor
adc
xor
xor
pop
and
jne
les
dec
dec
mov
push
pop
push
jbe
xor
xor
ins
stos
push
xchg
mov
js
ret
dec
push
xor
push
mov
or
pop
sub
loop
jno
mov
jno
pop
xor
push
inc
add
jb
sbb
xor
arpl
ror
jae
inc
push
and
add
push
fcmovnb
in
xor
arpl
es
dec
add
mov
ja
or
call
rcl
sbb
adc
and
mov
daa
sub
loopne
inc
dec
jbe
xor
mov
or
sbb
call
jne
xor
or
dec
sbb
mov
addr16
jp
mov
mov
pop
nop
push
inc
pop
push
cld
or
adc
fs
mov
(bad)
js
add
and
js
and
outs
add
add
popa
jne
ret
cwde
mov
popa
inc
retf
imul
inc
inc
popf
popa
ret
add
ret
fdiv
cli
inc
mov
and
mov
repnz
pop
mov
pop
xchg
bound
test
inc
sbb
dec
mov
test
cmp
ret
test
jae
mov
dec
js
xchg
dec
add
pusha
ds
adc
dec
into
gs
fadd
sub
push
mov
retf
push
js
push
jbe
jp
sub
inc
es
add
pop
xchg
rcl
cwde
xchg
adc
cs
or
add
ss
imul
xor
test
inc
add
or
xchg
sub
adc
call
sbb
mov
ret
mov
jo
push
inc
rol
inc
dec
mov
or
push
xchg
movs
inc
ins
xchg
hlt
adc
gs
sub
xor
dec
test
or
push
xor
sbb
mov
clc
dec
js
push
inc
nop
call
scas
mov
ds
fisub
cs
push
inc
test
dec
mov
add
adc
mov
cs
xor
push
adc
call
add
push
adc
dec
dec
add
cmps
push
aam
dec
mov
mov
jp
pushf
adc
ja
lock
sub
outs
inc
pop
jl
adc
test
out
push
jb
mov
or
imul
inc
push
dec
in
ds
or
mov
dec
clc
jno
cmp
and
je
xor
cld
inc
in
push
push
sub
xchg
pop
nop
mov
and
loope
js
or
test
mov
and
addr16
jb
add
ins
scas
mov
xchg
xor
jbe
pop
or
and
adc
inc
jne
rol
sbb
push
mov
dec
pop
push
imul
mov
push
dec
dec
js
jae
adc
xor
mov
and
jae
and
(bad)
inc
cld
cmp
test
ins
push
je
loopne
fs
test
es
arpl
inc
dec
inc
mov
xchg
mov
lock
cmp
leave
rcr
js
adc
and
int3
xor
and
(bad)
or
xor
cdq
xchg
mov
stos
inc
mov
gs
pusha
call
adc
or
or
xor
or
mov
add
popa
push
mov
mov
add
outs
dec
dec
fdiv
jo
cwde
ss
add
mov
xchg
shl
dec
sub
and
cmp
push
add
push
ds
(bad)
pop
adc
jne
test
or
push
xchg
inc
call
mov
pusha
xor
xchg
movs
test
xchg
mov
cwde
cld
(bad)
and
test
push
cli
push
adc
sub
push
mov
shr
add
add
pop
or
xchg
inc
xchg
lods
bound
jb
jo
push
push
push
test
jns
push
xor
(bad)
aam
add
add
pop
dec
inc
or
inc
imul
mov
stos
inc
adc
sbb
xor
ficomp
add
faddp
pop
nop
pop
mul
sub
pop
or
xor
sub
pop
stos
adc
ret
push
or
sub
test
sub
mov
xor
jns
outs
movs
add
xor
and
sub
enter
adc
xor
cdq
pushf
adc
mov
lock
push
sub
mov
nop
pop
jo
ins
xor
sub
jbe
push
push
xchg
inc
fiadd
pushf
shl
sahf
jmp
push
jp
and
out
pushw
loopne
pushf
mov
pop
add
jne
push
pop
sub
push
pushf
inc
loope
push
addr16
call
xor
sbb
ins
retf
imul
jmp
add
call
xor
push
xchg
imul
adc
dec
dec
and
and
jbe
loopne
dec
sbb
add
shl
mov
ins
sbb
loop
shl
lods
add
push
jp
dec
push
or
sahf
shl
and
test
stos
xor
jbe
mov
mov
push
ins
inc
or
push
fidiv
sbb
mov
inc
aad
xchg
fisub
add
fidiv
inc
call
pop
pushf
popa
inc
test
mov
scas
out
push
xor
push
adc
mov
xor
add
lea
aam
mov
dec
gs
lods
fsubr
push
and
xor
jmp
(bad)
push
jl
ret
int3
push
aaa
inc
adc
imul
cli
cmps
int3
arpl
dec
add
sbb
shl
or
adc
inc
mov
int3
push
mov
out
stos
rcl
or
loopne
dec
jmp
xor
rol
xor
sbb
sub
dec
dec
pushf
push
add
jo
xchg
push
retf
add
fsubr
or
loopne
add
or
adc
add
dec
shl
gs
test
inc
inc
add
jno
inc
xor
lods
and
mov
add
je
xor
shl
cs
sub
out
inc
call
mov
xchg
imul
jo
pop
mov
sbb
inc
stos
movs
add
cmps
cmp
lds
loopne
adc
dec
cmp
inc
cmp
xor
data16
and
push
mov
imul
mov
push
mov
xchg
fmulp
xchg
int3
les
fadd
sbb
xor
xor
dec
sbb
inc
cs
cdq
sbb
jo
push
sbb
arpl
jl
inc
addr16
pop
cmp
inc
cmp
adc
sub
add
add
and
hlt
call
add
mov
cmps
bound
xor
or
call
push
sbb
and
test
or
jb
adc
dec
les
fst
and
fwait
add
mov
or
ret
rol
fdiv
leave
push
(bad)
pop
sub
push
add
mov
mov
jnp
xchg
(bad)
and
in
sub
add
dec
sub
cmp
test
mov
xlat
dec
mov
aaa
outs
mov
push
push
inc
or
es
pop
arpl
adc
js
add
push
add
and
jns
inc
inc
dec
add
adc
and
add
movs
xchg
gs
lea
lods
dec
je
push
sub
popa
dec
imul
inc
adc
or
(bad)
add
mov
bound
add
mov
sbb
jns
jbe
nop
retf
test
imul
test
dec
in
outs
ja
sbb
sbb
adc
xor
lods
xor
push
int
mov
xor
cs
les
add
add
push
jb
popa
jo
sub
mov
imul
xchg
je
dec
mov
inc
inc
bound
and
inc
jne
ds
(bad)
ss
and
push
cmp
push
and
xchg
push
mov
xchg
push
sub
push
enter
pop
xor
push
mov
cmp
add
les
movs
sub
sub
inc
sub
dec
and
dec
xor
bound
mov
xor
xor
inc
dec
and
cdq
mov
fidiv
jb
sahf
xor
and
push
inc
adc
cmp
je
xor
push
sub
inc
dec
(bad)
in
out
mov
push
inc
push
xor
xor
test
and
inc
adc
sub
xchg
adc
add
push
js
stos
adc
fs
ins
sub
jb
ins
sbb
stos
(bad)
xor
sbb
stos
inc
fwait
push
cmp
inc
dec
div
cmp
arpl
enter
loopne
xor
push
sub
push
add
jns
shl
mov
sbb
xchg
ins
push
xor
push
pop
jb
push
dec
or
dec
fcmovu
es
inc
xchg
push
imul
sbb
test
jmp
inc
imul
push
adc
mov
nop
leave
inc
dec
sbb
jb
xchg
fsubr
add
cli
fimul
mov
ja
js
imul
xor
or
xor
jmp
fs
dec
xor
loopne
push
popa
inc
inc
xor
rol
jns
or
dec
loop
dec
dec
dec
cmp
lods
dec
ins
popa
push
xchg
clc
outs
sub
and
xchg
bound
je
and
push
xchg
dec
adc
aam
add
adc
inc
mov
nop
inc
ficom
retf
fs
add
add
push
push
inc
pop
jne
sub
jne
popa
aam
mov
jp
sub
inc
push
inc
push
pop
adc
dec
ins
adc
push
mov
push
xchg
push
js
fdiv
dec
popa
arpl
fdiv
push
push
data16
dec
test
aaa
or
into
push
inc
es
mov
mov
push
dec
jle
aad
test
inc
and
or
dec
jbe
push
sbb
mov
adc
or
add
adc
xchg
inc
inc
les
cdq
dec
inc
ror
jo
add
ins
add
inc
inc
push
push
mov
push
les
pusha
push
mov
and
movs
cmps
push
pushf
inc
mov
nop
loopne
(bad)
pop
and
adc
sbb
call
and
push
test
test
push
cs
jo
rol
jp
call
stos
imul
bound
dec
xor
repnz
pop
mov
imul
test
xor
xor
sbb
add
stos
push
(bad)
jbe
sub
gs
sbb
and
push
enter
xchg
or
ja
add
imul
and
adc
outs
in
or
fisubr
ret
out
or
dec
jno
cmp
sub
push
xchg
aam
push
pop
(bad)
dec
xor
imul
stos
mov
adc
imul
ins
mov
div
imul
cwde
mov
add
jp
mul
xor
sbb
pop
es
dec
test
or
mov
xchg
cdq
ins
nop
push
inc
lea
xor
jmp
enter
pop
push
(bad)
inc
push
test
retf
inc
or
pusha
cmps
mov
out
jno
push
xor
push
pop
cmps
inc
add
lods
or
xor
push
push
push
inc
add
test
gs
push
(bad)
add
or
movs
xchg
out
xchg
pusha
sub
outs
mov
inc
bound
imul
inc
xchg
inc
ins
and
inc
push
xor
push
and
push
xor
inc
dec
mov
add
inc
ins
push
pop
sbb
push
xchg
repnz
mov
cmp
dec
outs
ds
dec
fdivrp
adc
adc
imul
and
gs
rcl
pusha
xchg
xchg
sbb
mov
pop
dec
dec
dec
fimul
xor
mul
and
or
test
rcl
mov
pushf
xchg
cmp
and
inc
cmps
mov
inc
ins
fidivr
xchg
lods
mov
xor
inc
push
push
push
pusha
(bad)
pop
shr
outs
jo
sub
inc
bound
sbb
push
mov
enter
fidivr
jl
push
jp
jp
push
cwde
jb
enter
nop
dec
scas
ss
adc
sub
inc
jae
and
dec
sbb
pusha
(bad)
out
or
dec
mov
xchg
pop
gs
sub
inc
dec
dec
sbb
xor
push
fst
or
dec
ds
push
push
inc
dec
data16
sbb
les
adc
pop
adc
push
dec
pop
aaa
sub
or
test
jo
les
push
jl
xor
enter
push
outs
inc
or
pusha
jl
cli
dec
adc
test
dec
jb
rol
ds
xchg
push
shl
sbb
ror
xor
out
dec
add
push
xchg
add
mov
dec
ds
mov
mov
push
cmp
mov
test
xchg
xchg
inc
pop
cli
or
pusha
dec
adc
add
dec
arpl
jbe
push
xor
jb
xor
inc
shl
sahf
movs
jb
nop
jle
mov
mov
adc
cld
xor
in
nop
dec
xor
xor
jns
add
ror
xchg
sbb
mov
les
dec
leave
inc
dec
push
out
adc
push
inc
cwde
movs
and
jno
fld
sbb
dec
aam
add
add
clc
(bad)
xor
cwde
(bad)
push
push
push
scas
xchg
fcom
aad
ins
loop
fdiv
xor
xchg
jge
js
push
adc
stos
pushf
xchg
jb
xor
cs
sub
les
mov
push
push
nop
mov
pusha
movs
add
sbb
shl
cmp
aam
shl
cmps
popa
push
test
xor
outs
test
dec
sub
scas
call
jb
sub
or
mov
inc
enter
fcom
push
mov
mov
mov
xor
mov
inc
dec
pop
sbb
xor
and
dec
jbe
pop
test
sbb
add
push
mov
add
loop
xor
int3
enter
push
outs
xchg
inc
test
outs
jns
mov
(bad)
(bad)
mov
inc
clc
sub
adc
mov
fs
inc
loope
xchg
xchg
mov
adc
clc
arpl
xchg
push
pop
or
ja
mov
nop
test
push
xor
lods
ss
gs
test
fs
test
aam
dec
sub
xor
pusha
imul
and
call
adc
addr16
add
es
push
div
add
ins
and
jo
ret
pop
add
dec
sub
xchg
pusha
or
xor
xchg
sub
and
data16
dec
or
pop
pop
aad
sbb
fidivr
inc
and
add
push
inc
mov
and
add
inc
push
mov
test
je
dec
cmp
and
cmps
adc
mov
retf
retf
dec
adc
test
push
sar
or
jne
sub
mov
and
inc
sub
xchg
pushf
push
fmul
pop
inc
or
rcl
fs
addr16
or
jbe
xor
jno
inc
aam
fisubr
add
inc
loop
push
imul
add
movs
push
adc
jo
and
movs
add
xchg
inc
xor
repnz
and
add
test
shl
xor
adc
mov
js
sbb
push
arpl
add
push
mov
data16
bound
clc
inc
out
add
push
push
and
xor
retf
and
call
test
ins
sbb
enter
dec
mov
inc
add
bound
cmp
add
push
push
push
sub
xchg
xchg
push
les
xchg
mov
or
xor
mov
retf
xchg
test
jb
xor
mov
arpl
sub
and
dec
mov
push
outs
cmp
ret
ret
push
pop
dec
xor
adc
jae
inc
cdq
or
xchg
cmp
and
cmp
ja
ret
dec
inc
mov
aaa
jp
movs
es
xacquire
xchg
cld
pusha
adc
ins
or
(bad)
shl
data16
and
xchg
inc
or
nop
inc
dec
sbb
push
rol
jp
jne
xchg
xor
push
mov
or
push
add
adc
inc
or
mov
xchg
push
push
sub
nop
arpl
dec
in
push
and
ret
adc
enter
mov
xor
dec
inc
mov
mov
add
sar
xchg
cli
cs
js
outs
or
nop
inc
and
sahf
cmp
outs
dec
inc
cmp
ins
sbb
aam
xor
mov
dec
mov
mov
in
arpl
inc
inc
xor
retf
pusha
mov
or
xor
call
or
or
fadd
push
sub
xchg
call
inc
adc
pop
mov
test
pushf
push
mov
mov
xchg
bound
call
jbe
push
push
inc
mov
fiadd
push
inc
push
rol
xchg
mov
cli
add
rol
push
fs
retf
add
or
inc
xor
dec
xor
adc
and
xchg
call
or
pop
add
and
mov
sahf
mov
xlat
and
jno
dec
xor
outs
push
cwde
add
and
xor
and
js
add
nop
pop
push
sbb
pop
adc
sub
dec
inc
add
fadd
adc
mov
loopne
push
dec
sub
fisubr
mov
or
call
aaa
add
out
push
mov
js
inc
loope
mov
adc
xchg
push
pushf
or
clc
xor
mov
dec
in
es
push
and
pop
jmp
stos
sub
push
jne
adc
pop
sub
ficomp
cdq
xchg
fchs
dec
mov
sar
add
adc
xchg
adc
inc
pop
or
push
xchg
add
dec
es
enter
inc
je
pusha
inc
je
jecxz
ror
push
in
push
je
add
xchg
inc
(bad)
dec
dec
cmp
ret
add
mov
or
mov
pop
aam
lds
mov
inc
js
imul
push
fs
pop
test
cld
pushaw
mov
mov
sbb
pop
dec
inc
rol
ja
inc
ins
xchg
mov
pop
mov
jb
adc
add
test
jmp
push
mov
push
arpl
add
js
rol
cwde
sbb
je
lahf
adc
add
imul
outs
cmp
add
pusha
push
sub
mov
jb
and
push
dec
popa
xor
ror
mov
sbb
shl
mov
jb
and
pop
ror
sub
xor
inc
fadd
fs
or
outs
add
dec
fsubrp
xchg
and
imul
push
and
pop
add
dec
movs
ins
ret
mov
and
mov
dec
cmp
sbb
adc
out
ds
xor
je
jle
sbb
xor
jno
rol
and
cmp
cli
ins
sahf
dec
pop
adc
and
mov
xchg
cmp
push
xor
imul
dec
sbb
fdiv
mov
imul
fcom
retf
mov
push
adc
push
in
fs
jns
ins
push
xchg
xor
popa
sub
test
or
push
(bad)
sub
and
and
fldcw
push
imul
pop
shr
fimul
or
pop
adc
fs
and
sbb
sub
imul
xor
dec
xchg
popa
popa
dec
mov
cwde
adc
mov
loop
stos
nop
jo
add
push
or
inc
pop
es
pop
nop
and
mov
inc
jae
xchg
shr
inc
push
pop
inc
dec
push
add
pop
mov
mov
jp
popa
adc
cmps
mov
stos
push
loope
ins
mov
cmp
cmps
sub
push
push
inc
adc
mov
movs
js
add
stos
sub
mov
dec
scas
cmp
inc
jne
cwde
sub
test
cs
mov
jp
aaa
push
ficom
or
test
clc
xor
imul
sub
or
pop
or
stos
add
outs
in
es
in
or
xor
sub
cmp
add
sub
sub
and
cmp
cwde
arpl
jmp
in
ins
add
in
bound
or
mov
mov
xchg
inc
jmp
mov
hlt
enter
push
or
push
adc
mov
enter
sbb
rol
cmps
add
es
mov
add
out
push
ss
adc
and
nop
stos
shl
push
push
imul
dec
mov
pop
retf
push
jmp
es
bound
test
xchg
enter
mov
dec
add
add
cli
xor
or
adc
push
xor
and
push
xor
test
pusha
aam
sbb
int3
mov
data16
loope
pop
inc
or
cwde
push
popa
ret
sub
jb
push
xchg
add
inc
aaa
dec
push
xchg
sbb
icebp
push
add
push
fs
inc
cwde
stos
xchg
and
push
push
fisubr
pop
add
call
push
inc
inc
mov
dec
pop
adc
cmp
test
adc
dec
mov
jbe
mov
add
xchg
sbb
mov
out
sub
or
test
push
inc
rcl
mov
and
pop
je
bound
mov
dec
bound
push
je
xor
xor
mov
imul
add
dec
cwde
or
cs
add
and
dec
sub
inc
xor
xchg
mov
push
arpl
adc
dec
call
es
jl
push
imul
xor
xchg
add
es
inc
or
push
mov
mov
sub
or
xchg
push
sub
push
dec
ss
fwait
mov
and
adc
stos
cwde
dec
je
add
ds
inc
mov
xchg
mov
dec
and
cmp
inc
push
hlt
push
mov
push
sub
add
cmp
mov
jbe
in
jb
add
cmp
push
xor
out
xor
add
push
xor
shl
inc
in
stos
dec
pop
bound
mov
dec
pop
dec
adc
xor
push
xor
test
pusha
sub
in
pop
int3
inc
mov
push
adc
jp
out
inc
inc
and
dec
cwde
mov
push
dec
inc
add
cmp
or
jno
inc
add
add
test
jns
and
add
out
and
sbb
cmps
fadd
pusha
dec
movs
jo
ret
mov
dec
jns
sub
(bad)
retf
test
outs
dec
xor
add
jb
bound
jmp
aam
bound
push
ja
add
mov
and
hlt
dec
ss
mov
cdq
add
ss
cmp
les
inc
jb
out
push
es
test
xchg
add
pushf
adc
aam
ins
push
sub
mov
cmps
test
inc
adc
push
add
mov
and
shl
mov
pop
add
aam
inc
ret
fs
push
jo
mov
cmp
inc
adc
call
mov
push
cmps
pusha
add
push
mov
aaa
sub
adc
cmp
push
push
retf
push
test
ss
ret
inc
stos
cmp
sub
cmp
call
fcom
push
cmp
call
mov
leave
xchg
je
or
jmp
or
jo
push
dec
fs
xchg
or
enter
add
jno
push
cmp
add
push
xchg
pop
mov
dec
fs
push
add
and
movs
js
push
pop
xor
scas
ins
xor
push
or
ror
or
dec
and
cwde
ins
ret
dec
pop
xchg
inc
ret
pushfw
mov
add
imul
test
outs
adc
cwde
mul
in
pop
inc
inc
imul
sbb
cmp
bound
fisub
push
and
inc
cli
push
in
and
ins
inc
dec
cwde
(bad)
ds
push
xor
mov
mov
jp
sub
dec
xchg
xchg
or
jp
mov
push
aad
dec
retf
inc
(bad)
sbb
push
pusha
dec
je
sbb
mov
cmp
dec
popa
inc
pop
loop
dec
jbe
xchg
dec
and
dec
push
push
pusha
adc
stos
loopne
jb
push
add
fs
adc
ja
lock
xchg
xor
push
int3
jb
mov
add
mov
dec
push
inc
test
sbb
shl
xchg
rcl
jp
sub
xchg
sbb
mov
xchg
or
cmps
sbb
arpl
pusha
xor
test
inc
cwde
and
xchg
fcomp
loopne
and
push
daa
or
rol
pusha
or
inc
inc
aad
or
mov
out
pop
inc
inc
and
xchg
icebp
xchg
ins
je
inc
xor
fidivr
mov
dec
outs
mov
dec
sbb
and
lods
cmps
xor
repnz
adc
xor
fs
mov
les
mov
fs
(bad)
imul
xor
mov
add
inc
sub
js
pusha
jb
dec
add
aad
adc
inc
je
dec
test
call
pop
push
xor
hlt
imul
fs
mov
xlat
mov
dec
dec
cmp
sbb
add
pusha
push
test
or
push
and
or
pushf
mov
es
les
push
inc
call
js
or
add
push
adc
and
je
mov
or
and
aam
inc
clc
mov
pop
xor
inc
mov
cdq
push
adc
pushf
jo
js
adc
adc
cmp
push
dec
enter
push
xchg
sbb
ins
cmp
push
or
scas
inc
xor
pushf
add
cld
or
adc
jne
rol
jne
mov
js
push
push
bound
in
out
xor
mov
adc
add
sbb
and
or
and
aaa
mov
mov
inc
fwait
xor
arpl
xor
inc
add
push
sub
js
pop
and
int3
push
or
dec
push
popa
add
nop
fs
adc
add
dec
int3
rcl
enter
push
dec
ret
movs
movs
push
sbb
push
ins
inc
inc
fcomp
sbb
das
xchg
or
ins
xchg
inc
push
xor
rcr
pop
push
fiadd
retf
adc
jbe
or
and
mov
sub
xchg
sbb
sbb
push
dec
sbb
out
inc
xor
sub
outs
dec
and
sub
dec
pusha
add
ss
inc
xor
addr16
inc
or
push
or
fcmovu
pop
xor
jae
pop
sub
les
jb
inc
sub
movs
xor
cmp
mov
sbb
add
push
dec
in
or
cmp
jbe
mov
into
outs
add
or
dec
int3
xor
inc
fcom
sub
push
outs
xor
loopne
or
sbb
test
(bad)
inc
outs
hlt
inc
and
clc
push
xchg
inc
cwde
add
dec
in
xchg
stos
and
xor
mov
test
pop
fadd
inc
mov
cld
inc
and
add
je
pop
test
xchg
retf
lods
add
mov
inc
adc
push
jl
add
sub
dec
sub
inc
pop
les
mov
xor
and
jne
pop
xor
adc
xchg
adc
cmp
inc
xchg
mov
mov
adc
sub
push
rol
or
sub
mov
movs
js
jb
and
mov
and
into
(bad)
dec
inc
popa
sub
test
(bad)
pop
push
cs
add
movs
cmps
add
inc
dec
fdivr
pusha
mov
adc
dec
rol
sbb
inc
xor
cli
xchg
add
outs
jp
mov
(bad)
fcomp
mov
mov
or
mov
adc
inc
popa
mov
cmp
push
cmps
push
outs
jns
loopne
lea
cwde
movs
es
jb
and
push
inc
sbb
enter
xchg
add
fcmovbe
add
mov
mov
retf
push
bound
sbb
cwde
mov
xchg
mov
(bad)
jb
sub
push
ins
and
pusha
inc
jb
dec
(bad)
and
call
je
or
mov
mov
xor
mov
xchg
(bad)
nop
push
sar
jbe
dec
addr16
dec
push
mov
mov
movs
push
(bad)
push
xchg
sub
scas
push
and
cmp
fadd
push
and
sub
xor
call
push
dec
sub
or
adc
inc
shl
rol
or
push
pusha
aad
aam
inc
(bad)
dec
jne
jbe
xchg
add
push
jbe
outs
add
push
mov
ror
inc
or
jno
adc
xchg
push
cwde
test
add
nop
retf
cmp
mov
arpl
fiadd
xor
xor
call
addr16
jb
and
mov
mov
dec
inc
cdq
inc
pop
cmps
dec
push
or
adc
and
adc
jo
xor
ret
data16
sbb
ss
or
xchg
cmp
outs
fld
xchg
inc
push
xor
adc
add
adc
fcom
dec
sbb
sub
ja
pop
imul
add
retf
and
pop
(bad)
dec
and
cmp
es
add
or
pop
cs
push
pop
push
call
push
push
inc
jbe
(bad)
shl
adc
sub
push
xchg
movs
xchg
dec
int3
(bad)
dec
or
xor
push
sub
outs
gs
add
cs
call
cli
dec
push
adc
xchg
lock
loopne
push
cmps
push
push
rol
push
cmp
mov
push
push
int3
sbb
and
lds
nop
lods
push
rol
loopne
xor
inc
inc
inc
retf
add
aam
retf
js
dec
pop
xor
xor
repnz
jbe
or
dec
dec
cli
inc
xchg
pusha
xchg
jae
push
mov
inc
push
sbb
test
jb
aam
xchg
mov
push
cmp
inc
xchg
inc
push
mov
jae
dec
adc
sub
push
jmp
inc
jp
outs
xchg
rcl
push
loop
push
add
inc
push
push
add
in
jle
adc
sub
ss
adc
xchg
or
ins
inc
ins
push
inc
pop
mov
jb
xchg
mov
push
dec
xor
inc
inc
push
mov
popa
xchg
push
inc
adc
adc
adc
inc
je
adc
dec
xor
mov
js
arpl
dec
mov
pop
gs
rcl
push
les
ins
or
push
mov
add
dec
xor
and
ins
adc
inc
dec
inc
mov
dec
dec
pushw
push
cmp
fisubr
or
ja
pop
dec
dec
in
xchg
inc
mov
sbb
ds
pop
aaa
mov
xchg
push
xchg
int3
inc
push
adc
xchg
sub
and
ins
call
inc
fs
or
xor
pop
push
adc
or
push
fiadd
hlt
inc
or
or
and
dec
ss
mov
je
and
gs
mov
pop
xor
retf
cmp
push
inc
xor
sbb
mov
(bad)
pop
bound
ss
dec
ret
inc
shr
push
pop
sar
in
ins
push
or
and
fild
sbb
call
push
push
pop
movs
adc
rol
adc
fs
sub
adc
cld
add
adc
inc
fcomp
shl
push
sub
inc
data16
cmps
dec
xor
jne
xor
hlt
sahf
cdq
or
cmp
push
mov
outs
jmp
inc
test
mov
xor
fidiv
or
inc
jl
sub
shr
(bad)
push
je
inc
sbb
mov
movs
int3
adc
je
or
ins
movs
fsub
cli
dec
xor
or
mov
pusha
and
fdiv
or
inc
add
inc
sub
inc
sub
cmp
xor
movs
jno
mov
mov
lods
inc
jae
inc
push
(bad)
shl
xchg
dec
mov
dec
aam
push
ins
cli
push
imul
repnz
mov
aaa
add
sbb
je
dec
test
or
cli
push
sub
add
dec
rcr
inc
push
push
cdq
mov
jb
cmps
push
sub
cld
outs
or
or
mov
ins
xor
mov
xor
test
(bad)
inc
loop
sub
cmp
inc
sub
mov
leave
shr
mov
push
or
mov
cmp
dec
adc
inc
xor
sub
loop
xchg
push
or
mov
xor
mov
adc
push
fimul
xchg
inc
mov
data16
xor
inc
push
push
mov
push
mov
and
xchg
(bad)
cmps
inc
mov
adc
add
sbb
shl
jae
or
(bad)
jne
dec
cmp
sub
imul
sub
inc
pushf
test
test
push
xor
pop
mov
inc
sbb
pop
in
outs
cwde
js
scas
pop
push
loopne
sbb
add
jbe
xchg
push
push
lods
dec
jno
jno
or
int3
push
pop
jb
cmp
ins
dec
stos
and
fisub
or
push
pop
ss
stos
dec
push
cmp
js
push
cwde
ds
or
jp
dec
test
inc
dec
pop
jbe
push
lods
ins
xchg
cmc
and
ss
arpl
gs
dec
popa
push
xor
dec
dec
arpl
int3
push
aad
ins
bound
sbb
inc
loope
fcomp
push
jbe
jb
pop
add
scas
jge
dec
dec
fiadd
dec
xor
mov
push
js
imul
bound
adc
in
or
outs
mov
add
push
out
mov
pop
ins
retf
sub
xor
ss
ficom
dec
inc
mov
xchg
mov
push
pusha
cmp
dec
xchg
jo
mov
test
inc
enter
ins
addr16
hlt
nop
mov
jno
push
add
imul
adc
adc
imul
mov
fwait
jb
and
add
push
mov
mov
adc
adc
sub
pop
test
jo
push
push
xor
pop
jns
sbb
call
inc
(bad)
xchg
cmp
push
push
push
into
inc
loopne
imul
sub
rol
(bad)
fiadd
pop
xchg
cli
xor
mov
int3
shr
sahf
dec
bound
mov
and
adc
and
test
push
dec
xchg
imul
ret
or
push
dec
call
dec
shl
shr
imul
jb
dec
out
sub
push
sub
int3
and
push
and
xor
popa
adc
fist
pop
mov
push
loopne
push
call
arpl
jmp
ret
mov
mov
outs
xor
or
and
push
sub
aaa
test
pop
and
jbe
pop
mov
movs
mov
mov
out
data16
in
je
add
fiadd
ds
push
sbb
pop
mov
xchg
add
or
adc
aaa
mov
xor
dec
mov
cld
nop
jb
xchg
cwde
dec
and
inc
loop
sbb
mov
idiv
mov
bound
nop
jbe
loopne
aam
retf
add
pop
rol
mov
ss
bound
into
jo
xor
fist
dec
dec
test
mov
hlt
jp
cmp
fcomp
jb
cmp
and
dec
shl
mov
not
in
and
hlt
sahf
or
add
mov
xchg
data16
test
or
inc
inc
add
out
or
pusha
adc
add
push
imul
add
push
inc
ret
scas
hlt
dec
pop
test
dec
cmp
push
inc
stos
adc
dec
shr
adc
push
push
sub
dec
jo
cli
dec
xor
or
xor
call
adc
or
or
xor
sub
pop
ret
push
ins
stos
or
jae
xor
int3
fs
adc
mov
dec
and
sbb
dec
dec
dec
and
js
adc
jp
stos
ss
fs
(bad)
jae
nop
imul
dec
outs
sub
ss
push
imul
stos
sbb
or
inc
adc
imul
add
jno
and
and
into
push
jle
aad
push
cmps
add
dec
data16
outs
inc
push
lods
or
adc
ror
bound
sbb
(bad)
push
cwde
or
lock
ret
add
xor
pop
mov
adc
jb
xchg
or
mov
xchg
popa
add
ins
lods
xor
mov
inc
or
je
dec
push
mov
mov
cmps
aas
mov
inc
dec
outs
jo
in
push
pushf
adc
dec
inc
mov
enter
mov
xchg
pusha
outs
mov
and
push
nop
test
je
xor
dec
fwait
dec
loopne
add
retf
je
push
xchg
or
rcr
xor
adc
cmp
lods
inc
xor
dec
jb
adc
and
sahf
inc
push
xor
or
inc
mov
xchg
clc
xor
push
cs
add
xor
sbb
adc
jne
jmp
ret
or
je
or
cmp
cmp
xor
fmul
inc
or
pop
test
leave
scas
push
add
push
cwde
dec
adc
inc
loop
dec
push
add
xchg
mov
adc
jle
fadd
loopne
in
push
bound
sub
out
outs
cmp
fs
ins
imul
fs
xchg
add
inc
shl
push
and
rol
xor
outs
cdq
jp
pop
retf
inc
je
pop
ja
dec
mov
jp
and
xchg
push
add
cmp
jns
inc
add
or
inc
loopne
cmc
add
jne
sahf
ret
cmps
test
push
sub
fs
mov
enter
inc
jl
inc
test
mov
rol
mov
out
xor
xor
rcl
enter
or
xor
adc
mov
mov
cmp
mov
mov
jo
sub
outs
and
cmps
mov
or
fdiv
movs
popa
mov
push
xor
adc
fdivr
xor
and
dec
jae
mov
dec
lods
dec
or
shr
enter
mov
int3
add
dec
imul
add
xor
sbb
popf
es
push
(bad)
fsubr
mov
lods
jp
test
adc
clc
jne
popa
adc
dec
retf
inc
add
inc
test
push
push
rcl
or
mov
aam
jle
cwde
pop
rol
movs
lods
sbb
cmps
and
stos
add
out
jo
jb
in
gs
sub
test
mov
adc
push
push
fsub
or
xor
xchg
pusha
test
inc
and
push
push
call
jb
push
dec
test
push
jns
data16
push
or
sahf
xor
jo
xor
push
movs
push
and
test
jp
sbb
test
xchg
je
aam
xor
xor
jb
jp
mov
jns
call
in
and
ret
mov
(bad)
stos
sahf
xor
xor
cli
bound
jb
fcmovbe
cmp
jmp
adc
mov
xor
push
fs
push
add
mov
retf
add
inc
adc
pusha
xchg
push
fcom
mov
jb
add
or
push
inc
pop
xor
adc
push
nop
jb
pop
ror
mov
xor
dec
(bad)
push
fsub
mov
rcl
cli
add
pop
pop
lock
dec
cmp
cli
or
mov
jmp
add
mov
adc
inc
pop
inc
out
adc
js
arpl
push
dec
push
popa
push
push
jbe
ins
clc
cmp
push
push
ins
push
push
mov
inc
pop
shr
sub
outs
and
call
dec
or
xor
inc
add
add
or
(bad)
clc
xor
push
and
xchg
pusha
or
jp
pop
add
adc
cmp
dec
retf
mov
sbb
dec
push
ret
mov
sub
adc
cmp
dec
push
ret
add
dec
ins
add
stos
xor
ins
loopne
mov
push
push
push
nop
xchg
and
test
push
adc
xchg
mov
retf
add
pop
sbb
sar
jbe
and
add
push
movs
xor
shl
jbe
sbb
cwde
outs
cmp
push
dec
mov
push
cmp
dec
outs
add
out
add
sbb
push
sbb
sub
jb
sbb
dec
jmp
mov
int3
push
cmp
add
in
ds
and
ds
mov
fimul
sahf
add
pop
loope
add
dec
push
lods
push
cmp
sub
add
cmp
cs
push
pop
cmp
fld
add
aaa
lods
movs
jp
stos
jge
add
aaa
add
cmp
int3
sub
xchg
xor
dec
clc
push
push
push
stos
call
mov
inc
arpl
hlt
adc
in
mov
xor
add
sub
add
nop
je
test
in
outs
dec
add
in
popa
hlt
outs
jbe
and
mov
xchg
sub
xor
push
outs
inc
ret
lods
jle
dec
dec
push
adc
outs
call
movs
loop
push
push
jae
cld
les
xor
mov
jne
nop
and
cmp
add
pusha
(bad)
aad
lods
xor
(bad)
push
add
into
dec
inc
dec
push
add
inc
add
push
adc
push
sbb
add
aaa
pop
mov
push
cmp
ja
jae
sbb
add
je
push
jae
dec
and
cwde
(bad)
lock
adc
stos
sbb
jb
popa
push
push
movs
adc
cmps
inc
sbb
pusha
nop
lock
xor
xor
sub
add
cmp
je
pop
scas
imul
div
dec
inc
es
hlt
dec
sub
or
dec
outs
jo
sub
and
push
ror
shl
jae
push
sbb
inc
imul
or
ret
or
cld
jbe
adc
inc
sub
xchg
mov
push
(bad)
xchg
xor
xchg
push
stos
push
add
aaa
jb
or
add
imul
inc
xchg
mov
or
xor
sbb
fcom
cwde
dec
xchg
pop
push
lods
mov
mov
push
sahf
es
mov
ss
nop
jo
xchg
mov
js
aaa
(bad)
pop
adc
push
jbe
rol
adc
stos
push
int3
adc
inc
outs
jle
add
in
inc
xchg
and
push
jno
call
les
jmp
inc
outs
popa
adc
push
shl
jp
test
or
inc
pop
or
sub
cs
gs
cmp
add
arpl
ret
inc
xor
add
mov
mov
push
pop
dec
cmp
sbb
sbb
or
test
je
dec
inc
fimul
adc
movs
jo
popa
xor
cmp
sahf
dec
sub
jp
push
push
xchg
imul
push
outs
push
xor
daa
cdq
jb
repnz
rol
jp
push
push
xor
push
push
ret
or
hlt
dec
dec
rcl
inc
jae
jle
xchg
movs
bound
adc
xchg
xor
add
and
test
mov
test
pop
and
mov
pop
dec
outs
inc
push
pop
push
js
jp
pop
loope
retf
js
arpl
push
test
adc
push
retf
imul
inc
sub
mov
inc
pusha
pop
ds
xchg
(bad)
je
test
enter
or
dec
inc
push
test
add
and
cmp
dec
xor
mov
and
test
movs
and
and
push
mov
xor
jno
stos
xchg
rol
adc
jb
je
movs
inc
jo
cld
ins
ja
inc
pop
sub
jno
sbb
dec
ins
add
or
hlt
dec
fiadd
pop
addr16
aam
jmp
mov
mov
adc
xchg
js
add
inc
or
or
cwde
test
pop
and
xor
inc
xor
cmp
pushw
ja
xor
in
xor
adc
movs
add
xchg
sub
dec
mov
mov
je
add
adc
adc
or
jo
or
call
js
inc
add
adc
jbe
out
xor
add
inc
inc
dec
dec
in
pop
bound
je
or
pop
ret
mov
cmp
push
out
add
push
rcr
push
arpl
push
sub
gs
push
inc
xor
jns
adc
jb
mov
push
aam
mov
push
dec
inc
jo
gs
pusha
dec
mov
data16
and
neg
stos
mov
mov
inc
mov
or
scas
mov
adc
xor
clc
cmp
int
push
in
(bad)
lock
xor
dec
dec
pusha
lods
xor
inc
cmp
jno
inc
stos
rcr
sub
cmps
inc
or
push
outs
or
push
add
clc
jp
cld
xor
xor
mov
inc
xchg
movs
or
shl
retf
jne
dec
lock
imul
xchg
jp
and
mov
pop
lods
sub
es
dec
push
push
inc
or
jo
or
ins
rcl
xor
adc
dec
push
inc
test
or
lea
clc
add
and
pushf
clc
loopne
xchg
rol
xchg
rcl
fcomp
jae
push
xchg
inc
jae
sbb
add
xor
je
push
inc
add
ins
dec
pushf
mov
push
xchg
sbb
mov
fcom
xor
inc
in
shr
push
out
dec
pushf
gs
dec
mov
and
and
fisubr
inc
mov
imul
sbb
push
sbb
push
popa
adc
call
jp
sbb
shl
outs
cmp
and
and
mov
push
mov
dec
add
ins
fs
xor
add
push
adc
cmps
call
test
imul
inc
pop
dec
dec
gs
fisttp
outs
ins
rcl
aad
outs
and
bound
jo
and
xor
push
pop
add
pop
dec
test
enter
xor
dec
aam
mov
test
nop
push
sub
adc
shl
push
xor
adc
and
in
outs
sub
movs
enter
dec
push
fsub
stos
push
push
and
js
mov
xchg
add
addr16
jae
xchg
sub
adc
pusha
push
call
ss
inc
push
sub
xchg
fisub
or
xchg
and
mov
or
fs
or
ss
shl
adc
jo
mov
adc
and
add
stos
test
add
push
ret
and
add
mov
test
inc
pushf
xor
adc
pushf
dec
mov
xchg
cmp
dec
enter
mov
push
retf
stos
or
addr16
mov
shl
outs
fs
and
sahf
jbe
mov
inc
pop
xor
pop
dec
ret
dec
dec
mov
add
and
mov
movs
int3
mov
rcl
stos
jl
div
inc
push
jne
inc
add
xor
inc
inc
gs
mov
sbb
dec
js
repnz
sbb
int3
js
pop
pushw
or
mov
ins
add
xor
test
shl
xchg
xchg
dec
or
ds
push
mov
and
inc
sub
push
ficom
nop
inc
shr
jmp
stos
jns
mov
(bad)
cmp
push
xor
push
jno
or
mov
push
loop
sbb
call
adc
jb
movs
adc
popa
inc
shl
xor
nop
rcl
bound
inc
mov
idiv
scas
pop
sar
adc
mov
cmp
js
and
xchg
inc
add
out
dec
mov
cmps
je
lods
jp
xchg
jmp
adc
or
dec
mov
jo
xchg
leave
fdiv
push
fmul
fsub
imul
mov
inc
xor
test
ja
je
mov
push
jb
push
and
or
sub
dec
mov
stos
sbb
data16
out
fisubr
add
sub
jo
cmp
sbb
adc
add
pop
push
test
push
ret
into
add
movs
sub
adc
cmp
sbb
(bad)
in
dec
mov
(bad)
push
gs
and
adc
bound
mov
fidiv
sbb
int3
lods
pop
xchg
dec
jle
ss
cmp
dec
xchg
sub
rcl
enter
mov
dec
push
xlat
bound
js
ror
jb
inc
js
xchg
cli
outs
popa
pop
add
mov
mov
sub
push
or
push
into
and
push
and
nop
mov
fmul
sbb
dec
cli
sub
dec
add
inc
mov
push
add
jb
pusha
jo
mov
aam
push
and
fadd
sub
inc
mov
inc
or
mov
or
inc
jns
shl
fcomp
push
dec
push
bound
stos
mov
dec
sbb
cmp
jo
xchg
sbb
(bad)
ds
pop
adc
push
adc
adc
ins
and
jns
push
add
dec
gs
jp
inc
inc
inc
outs
retf
and
enter
dec
data16
bound
jne
adc
movs
xchg
adc
sbb
jp
jne
adc
test
inc
xchg
add
jo
retf
shl
dec
dec
call
loopne
dec
dec
or
push
mov
sbb
cmps
jbe
push
xor
xor
adc
popa
sub
xor
sbb
fs
jo
shr
inc
hlt
retf
inc
inc
xchg
pop
outs
lock
nop
add
fisubr
xor
stos
sar
lock
test
sbb
push
call
push
push
shl
and
xor
lods
into
inc
sbb
add
push
popa
xor
ins
sub
adc
mov
inc
nop
jbe
pop
out
popa
cmps
cmp
call
xchg
add
scas
push
outs
cwde
gs
enter
stos
retf
inc
dec
fidiv
cmp
enter
inc
repnz
scas
add
mov
loopne
sbb
mov
or
adc
mov
pop
inc
push
ins
xor
jo
mov
or
xor
bound
popa
nop
inc
bound
dec
jae
add
add
mov
pop
jbe
bound
retf
add
cmp
adc
dec
mov
test
dec
dec
or
es
inc
sub
jbe
mov
gs
dec
ret
inc
jp
sbb
ret
into
movs
inc
dec
inc
je
push
sbb
push
pop
movs
xor
cmp
jl
movs
dec
dec
dec
mov
popa
inc
out
jbe
xor
and
push
push
adc
pop
and
add
add
or
js
push
ret
lods
in
dec
xchg
cmp
pop
enter
cwde
or
mov
push
test
fs
bound
dec
sbb
pop
jns
je
adc
scas
dec
bound
push
cmp
fucomi
xchg
js
je
adc
dec
push
movs
adc
and
sbb
add
mov
stos
inc
push
dec
push
jle
cmp
add
push
jno
inc
push
push
dec
outs
dec
rcr
lds
pop
jb
and
je
adc
dec
aaa
inc
(bad)
mov
clc
cld
adc
ss
inc
nop
push
mov
addr16
jp
mov
cdq
mov
dec
mov
call
nop
push
mov
inc
cs
imul
hlt
xor
ins
xor
inc
push
pushf
jne
adc
add
inc
sbb
mov
and
(bad)
retf
out
pop
push
xor
es
sbb
push
cs
lock
aad
xchg
loopne
inc
jbe
xor
les
inc
xchg
dec
dec
and
fwait
clc
cli
push
add
xchg
adc
dec
fs
out
loop
inc
push
or
ss
push
ins
sub
ins
stos
dec
jno
mov
jp
cmp
and
loope
sub
xor
sub
movs
fcom
retf
xor
in
jle
mov
push
test
and
rcr
pop
and
sub
xchg
xor
call
push
call
cmp
add
xchg
add
(bad)
clc
add
dec
ret
and
shl
imul
mov
and
adc
push
gs
data16
pop
push
or
dec
fs
sbb
ins
push
sahf
jb
retf
push
mov
pop
test
in
xor
rcl
adc
push
popa
ss
jno
xor
scas
inc
or
xor
mov
popa
(bad)
sbb
aad
inc
xchg
loop
jb
cmp
or
js
add
cmp
in
mov
push
outs
fiadd
mov
cwde
mov
pop
and
push
mov
sahf
jbe
xor
cmp
push
mov
aaa
and
mov
rcl
push
ds
imul
mov
mov
mov
sbb
inc
xchg
add
mov
jbe
adc
mov
jb
inc
pinsrw
push
push
sub
adc
fdiv
push
adc
inc
mov
push
dec
adc
push
cli
nop
xchg
add
cmps
dec
gs
fwait
clc
fsubr
pop
loopne
dec
push
inc
add
dec
or
mov
mov
hlt
nop
push
sub
test
cld
push
les
mov
push
mov
xor
cmp
push
shr
push
push
mov
shr
sub
imul
test
mov
movs
xor
(bad)
dec
push
movs
push
push
or
sub
xor
cmp
add
ss
mov
cmp
and
pushf
xchg
sub
add
fsub
or
es
fsubr
fwait
or
mov
push
out
mov
rcl
xor
cmp
outs
adc
add
adc
mov
push
js
mov
jbe
or
xchg
xchg
add
jl
pop
aam
dec
pop
inc
push
scas
sbb
mov
div
pop
js
fst
loopne
inc
jne
pop
pusha
dec
add
add
mov
jp
or
bound
pop
add
ins
or
enter
mov
adc
nop
je
mov
push
pop
xchg
pop
data16
ins
push
add
lods
adc
bound
push
mov
rol
imul
add
je
cmp
xchg
dec
xor
add
adc
and
xchg
cdq
add
dec
dec
and
jae
dec
jno
dec
add
xchg
jmp
dec
push
outs
into
or
jne
lock
push
inc
cld
inc
inc
xor
aam
and
retf
and
les
ss
and
pop
xchg
dec
inc
imul
jbe
and
xchg
xchg
and
dec
sub
call
dec
out
pusha
or
sub
clc
mov
push
(bad)
adc
adc
push
sbb
xchg
(bad)
adc
ja
add
or
call
xor
data16
jno
jb
adc
add
dec
inc
out
mov
dec
push
jmp
dec
cmps
jbe
xor
sbb
les
push
cmp
mov
and
inc
inc
add
ficomp
aad
ins
push
sbb
pop
jl
movs
push
dec
inc
bound
cmp
rol
inc
in
push
gs
push
adc
jmp
enter
mov
inc
push
inc
test
movs
push
loop
or
xchg
fwait
push
inc
sbb
push
nop
dec
mov
dec
fcomp
test
pusha
test
ja
cmp
ror
cmp
popa
js
jno
mov
movs
adc
jl
push
into
bound
cmp
aad
aam
dec
inc
shr
or
mov
js
rol
jo
add
ins
add
lea
mov
mov
push
mov
xor
push
or
push
je
push
cli
xor
xor
push
xchg
or
cli
dec
pushf
mov
fwait
nop
push
pop
js
inc
pop
pop
inc
push
mov
push
stos
and
les
(bad)
je
ins
and
nop
fadd
and
mov
dec
sbb
ror
inc
test
dec
fdiv
dec
dec
jmp
test
push
sub
(bad)
das
fidiv
cmp
je
or
jp
or
lds
fcom
aaa
push
pop
xchg
or
cmp
push
xchg
adc
pop
jo
inc
inc
or
les
dec
js
dec
or
adc
xchg
jb
test
push
xchg
sub
xchg
jbe
inc
arpl
jb
sub
sbb
cli
push
pop
mov
call
add
ins
fs
mov
cwde
xor
sbb
xchg
sbb
shl
push
pusha
sbb
add
inc
sub
xchg
inc
imul
stos
dec
jb
call
jno
(bad)
adc
lods
(bad)
xor
jne
dec
mov
dec
sub
and
mov
push
dec
pop
inc
inc
xor
add
pushf
test
and
and
movs
push
jno
adc
inc
in
sar
dec
dec
into
scas
mov
jmp
sub
xor
lods
mov
mov
push
adc
fs
rol
retf
sub
cli
ss
outs
push
xchg
in
pop
mov
jmp
mov
pushf
sub
pusha
cwde
call
loopne
adc
inc
data16
or
push
inc
int
sbb
mov
and
mov
fsubr
xchg
adc
pop
jo
stos
call
bound
jo
mov
jo
nop
sub
inc
cwde
or
popa
ss
and
or
inc
enter
mov
push
add
xchg
xchg
and
cli
nop
adc
pop
sbb
loop
aaa
mov
jle
dec
xchg
sub
xchg
retf
xor
mov
jo
or
mov
mov
xor
cld
js
enter
push
arpl
fisub
pop
xchg
fwait
xchg
loop
in
jbe
dec
xchg
pop
(bad)
cs
and
pop
ss
cmp
mov
dec
test
jle
push
mov
adc
test
jbe
xor
push
push
cwde
or
cmp
jmp
mov
int3
add
and
ds
add
int3
add
ss
sbb
push
xor
push
sbb
xchg
xchg
cli
inc
dec
dec
rcl
push
ret
adc
inc
xor
sbb
es
ret
push
sbb
imul
mov
xor
dec
imul
sbb
inc
push
test
or
call
pop
add
cmp
add
pop
dec
dec
push
dec
xor
and
dec
push
mov
mov
nop
sub
adc
push
add
cmp
lock
call
inc
cwde
or
mov
fisub
inc
movs
sub
jmp
and
jle
xchg
ret
push
dec
mov
dec
mov
adc
cmp
pop
int3
ds
adc
xor
rol
inc
or
and
inc
dec
pop
add
sub
enter
inc
dec
xchg
mov
dec
jns
xchg
jb
test
push
rol
push
pop
fs
jae
cdq
add
and
xchg
adc
ins
push
dec
adc
imul
dec
push
inc
pop
sbb
jp
mov
sbb
leave
push
es
cmp
or
call
movs
xchg
aam
loop
bound
mov
ins
mov
mov
lods
xchg
jb
or
adc
aam
dec
mov
adc
dec
je
sbb
enter
sbb
retf
dec
push
test
mov
fadd
and
ins
or
in
push
cmps
or
jp
inc
push
call
call
inc
xor
mov
adc
or
and
xor
adc
ret
mov
bound
mov
jp
fdiv
lock
mov
xchg
js
add
or
and
js
pusha
and
xchg
pushw
mov
xor
sub
fstp
sbb
scas
ins
into
aaa
push
call
push
push
push
xchg
pusha
xor
enter
call
popa
shl
xchg
in
loop
ins
dec
xor
dec
mul
or
outs
ja
dec
lods
mov
push
and
dec
ss
inc
sub
jl
add
and
dec
into
enter
or
xor
mov
pop
xor
ins
sub
gs
hlt
rcl
aam
sbb
or
or
sub
call
inc
dec
or
(bad)
dec
addr16
jmp
(bad)
mov
jne
bound
push
push
xchg
rcr
retf
pop
sbb
sbb
or
xchg
add
ret
adc
push
sub
push
push
inc
dec
loopne
sub
pop
int3
jo
mov
inc
ins
push
sbb
stos
test
pop
je
rol
nop
stos
dec
or
test
inc
nop
jae
inc
pop
fwait
adc
push
test
push
fs
xor
xchg
adc
mov
cmps
xor
rcl
adc
push
(bad)
xor
jne
push
adc
test
add
or
addr16
jb
push
rol
xchg
nop
nop
fwait
loopne
push
xchg
xchg
inc
sbb
ins
add
js
jl
xchg
push
retf
outs
repnz
dec
sbb
add
mov
retf
sbb
sahf
test
ret
inc
jp
or
add
clc
pop
cmp
sbb
mov
cld
cwde
mov
or
inc
push
ins
sbb
adc
nop
pop
and
mov
loopne
inc
or
nop
inc
ins
dec
pusha
cmps
shl
and
mov
xchg
mov
ins
xor
dec
inc
xor
dec
je
cs
es
push
push
outs
add
pushf
fiadd
inc
inc
adc
pop
pop
int3
push
call
aaa
or
cmps
mov
jbe
or
imul
inc
dec
fmul
dec
adc
xchg
jbe
cmp
and
ins
jl
dec
or
pop
xor
or
adc
dec
dec
aam
inc
test
jno
push
arpl
and
jb
cmp
dec
xchg
js
add
jmp
pop
fmul
sub
(bad)
and
xor
mov
jb
sahf
xchg
sbb
mov
sbb
add
in
pop
ja
fimul
xchg
in
cmp
sub
or
push
imul
cmp
test
ss
test
sbb
add
jo
sub
in
bound
loopne
hlt
cwde
shl
add
xchg
and
fs
sub
dec
retf
repnz
in
xchg
push
add
adc
ds
push
mov
loopne
pop
or
adc
sub
inc
data16
inc
jl
or
fst
mov
nop
mov
sbb
test
mov
adc
sbb
arpl
push
adc
loopne
or
mov
leave
sub
repnz
cwde
sub
scas
or
les
push
imul
mov
cmp
test
inc
inc
push
mov
sbb
ret
mov
stos
enter
jno
cmp
jo
xchg
aam
inc
stos
add
mov
inc
sub
inc
mov
add
pop
push
push
je
fadd
rcl
dec
cmp
xor
jbe
mov
jns
fisub
and
mov
ja
fmul
or
jbe
xor
inc
sbb
sar
cmps
jno
push
imul
sbb
enter
pusha
push
mov
in
sbb
dec
es
in
and
inc
int3
inc
inc
mov
enter
call
push
dec
inc
mov
jp
push
mov
fs
jns
sub
xchg
jle
scas
fs
push
test
out
imul
loope
cli
dec
xchg
popa
xchg
add
add
pusha
xchg
xchg
xchg
inc
nop
inc
es
sub
(bad)
call
bound
dec
or
cli
inc
mov
cmp
je
adc
out
xor
or
xchg
cwde
or
aad
pop
es
push
adc
cdq
jo
or
push
ja
jp
jae
or
or
test
aaa
push
movs
or
or
xchg
push
xchg
dec
es
or
ja
sub
push
cmp
push
push
sub
lock
push
sbb
sahf
push
dec
mov
inc
inc
mov
push
into
popa
push
dec
add
enter
xchg
push
sub
or
push
stos
xor
mov
retw
push
outs
inc
mov
push
mov
mov
xor
xchg
push
or
and
loop
mov
stos
fimul
push
push
test
movs
and
jnp
or
sub
ins
xchg
push
test
add
or
xchg
inc
xchg
add
push
rcl
je
sub
mov
nop
or
inc
outs
and
jle
mov
dec
dec
(bad)
xchg
or
lock
xor
add
push
jno
jae
or
mov
jo
sub
xchg
les
mov
or
dec
add
stos
xchg
and
test
arpl
jns
push
mov
rcr
adc
jp
pop
imul
or
add
or
loopne
enter
and
inc
push
pop
dec
es
push
pusha
dec
add
shl
mov
mov
rol
mov
pop
test
retf
or
pusha
adc
xor
hlt
dec
es
inc
jp
xchg
xchg
sub
mov
jb
sbb
rcl
out
push
dec
cmp
push
or
ss
add
jo
data16
xor
mov
push
jbe
push
add
pushw
xchg
call
adc
rol
cwde
add
dec
xor
push
jbe
adc
mov
sub
push
ins
arpl
xchg
mov
dec
dec
fsub
inc
push
inc
dec
je
out
add
loopne
add
fnstcw
dec
jmp
(bad)
and
(bad)
mov
add
add
inc
lea
adc
xchg
or
or
and
dec
test
icebp
xchg
cmp
je
xchg
adc
outs
xchg
pop
xor
jo
dec
je
jno
or
inc
adc
or
mov
inc
ins
adc
cmps
xor
mov
push
icebp
add
loop
pop
push
add
add
retf
pop
mov
dec
jbe
push
or
push
int3
xchg
or
and
popa
sbb
pushf
push
xor
push
and
add
and
mov
adc
pusha
mov
div
js
adc
jae
inc
push
xor
fwait
adc
mov
and
invd
push
pop
pop
cwde
aaa
repnz
ins
add
popf
xchg
and
push
imul
imul
and
inc
xchg
adc
je
hlt
xor
sbb
pusha
dec
fs
arpl
mov
push
lods
xchg
and
cmp
mov
cdq
sbb
aam
adc
sbb
inc
xor
test
rcl
dec
arpl
push
nop
fadd
add
or
mov
in
inc
mov
ss
leave
push
pop
or
dec
push
cmp
arpl
or
inc
dec
fisub
xchg
push
push
or
or
cli
adc
nop
inc
inc
jo
jmp
rol
jmp
push
jmp
mov
(bad)
add
xor
test
xchg
test
push
outs
dec
or
and
inc
sub
xchg
jle
fs
xor
sub
push
ss
inc
inc
sbb
in
mov
bnd
gs
xchg
push
push
lahf
xchg
shl
push
adc
xor
xor
sbb
push
nop
dec
xor
pop
fdiv
push
pusha
adc
push
push
inc
hlt
ss
dec
and
cmps
mov
mov
push
out
pop
sbb
mov
cmps
leave
and
cmp
jo
or
inc
popf
cwde
push
push
push
pop
lea
dec
add
and
sar
push
outs
aaa
mov
mov
sbb
fwait
inc
and
push
repnz
inc
test
and
sub
adc
xor
test
xor
je
push
or
mov
mov
push
or
add
xor
cmp
or
repnz
xor
mov
mov
je
inc
or
push
dec
sub
or
cwde
inc
dec
mov
add
cld
retf
inc
pop
mov
push
or
adc
mov
sub
sbb
add
repnz
(bad)
aam
sub
inc
outs
and
and
push
rcr
arpl
out
push
bound
dec
sub
mul
and
pop
add
adc
sbb
xor
xchg
mov
cmp
in
retf
push
sbb
loop
adc
push
sbb
mov
lock
ja
mov
dec
dec
or
test
call
adc
and
and
sub
fs
fadd
shl
sbb
pushf
push
jb
and
cmp
dec
xor
dec
xchg
lock
fs
jb
int3
push
push
xor
mov
nop
in
dec
xor
push
jae
add
dec
xchg
test
pop
sub
test
mov
dec
pushf
xor
mov
lock
pop
cmp
inc
push
xor
nop
out
(bad)
sub
adc
inc
jb
clc
add
lods
loope
out
ret
in
mov
in
adc
mov
nop
mov
imul
out
loopne
mov
inc
and
test
and
ss
or
add
xchg
or
ja
inc
jb
scas
sub
mov
push
test
test
cmp
xchg
loop
or
add
push
lods
inc
jo
cld
dec
push
ins
je
stos
mov
inc
in
out
adc
push
xchg
call
add
sub
ret
xor
dec
adc
mov
dec
outs
xor
mov
sbb
int3
loopne
cmp
rol
ss
jmp
stos
jbe
xor
mov
inc
mov
add
js
dec
or
nop
gs
add
or
inc
xor
sub
and
es
loope
lock
jb
jp
call
int3
sub
cwde
dec
inc
push
mov
adc
pop
ss
and
xor
xor
and
dec
cld
mov
xor
dec
add
mov
mov
or
pop
push
inc
push
dec
inc
aad
or
aad
loopne
xor
jbe
inc
popa
mov
jb
xor
ins
mov
shr
pop
outs
arpl
dec
pop
test
xor
add
ret
gs
add
repnz
and
pop
cli
inc
pop
adc
mov
gs
leave
ins
push
push
enter
or
rcr
adc
cmp
sbb
xor
push
jbe
mov
or
push
sub
add
popa
stos
hlt
dec
or
inc
dec
mov
push
data16
and
mov
test
icebp
sub
out
inc
or
test
and
inc
fdiv
add
add
dec
loop
mov
nop
pop
jmp
int3
xor
loop
jbe
inc
or
inc
xor
xchg
xchg
or
mov
dec
movs
in
ret
fs
push
push
add
xor
push
shl
adc
ror
push
out
jns
mov
cwde
bound
and
ja
push
dec
adc
inc
xor
imul
arpl
lods
add
les
outs
and
sub
xor
adc
xchg
sbb
fidivr
enter
fmul
nop
jo
dec
push
mov
or
in
pusha
es
mov
adc
cmp
adc
adc
sbb
add
xor
push
xor
je
push
add
inc
cmp
mov
push
cs
mov
pushf
mov
and
bound
xchg
or
mov
je
add
jle
pop
scas
es
imul
xchg
mov
cmp
xchg
xor
and
push
inc
mov
fistp
xor
and
loope
xor
addr16
in
and
push
popf
ss
movs
cs
add
dec
sub
dec
sbb
add
sub
cs
add
adc
push
dec
scas
(bad)
jne
shl
push
push
mov
retf
ss
jp
and
cs
and
out
dec
inc
pop
repnz
loop
xor
xchg
dec
adc
mov
add
push
imul
ins
mov
mov
ss
inc
mov
sub
ret
dec
xchg
dec
ror
pop
pop
mov
sbb
push
call
adc
push
dec
xor
int3
cmp
sub
dec
and
clc
enter
loopne
or
adc
mov
adc
and
cmp
inc
je
or
retf
fidiv
test
lea
dec
out
inc
mov
xor
inc
xor
daa
mov
push
pop
ins
mov
push
je
outs
pop
xor
push
push
test
push
adc
stos
cmp
jae
sbb
in
xchg
cmp
push
inc
pop
xchg
jb
push
push
icebp
pusha
pop
push
inc
push
ss
mov
push
inc
xor
ror
add
push
inc
inc
test
push
jle
ss
loope
and
xchg
ficom
xor
xchg
sbb
hlt
loopne
cmp
scas
aam
adc
imul
arpl
ret
add
jbe
daa
pusha
push
scas
adc
fiadd
sub
xor
repnz
inc
call
popf
mov
nop
fidiv
push
adc
xor
inc
outs
imul
fisubr
les
bound
and
or
js
in
add
sahf
fimul
pusha
test
lock
push
mov
cmp
dec
inc
imul
xchg
add
cli
push
cdq
test
xor
mov
adc
(bad)
jo
ret
inc
add
or
test
dec
cmps
dec
js
es
add
xor
pusha
shl
mov
sub
movs
xor
pushf
jne
or
add
es
retf
test
movs
inc
dec
out
add
aam
or
les
xor
pusha
or
inc
inc
add
mov
or
nop
mov
push
dec
or
or
jle
inc
sub
fsubr
sbb
sub
push
test
pop
in
push
stos
mov
mov
shr
mov
dec
js
dec
test
push
push
inc
and
and
and
pop
inc
jns
jo
inc
pop
shl
test
dec
and
add
mov
sbb
fmul
push
and
push
push
test
inc
push
in
cmp
test
inc
outs
lods
sbb
sbb
adc
adc
pusha
dec
arpl
xlat
cmp
jmp
mov
inc
sub
lock
mov
push
mov
(bad)
xchg
ins
js
mov
imul
inc
push
jbe
jp
or
test
add
gs
in
push
dec
dec
movs
add
push
or
cmp
inc
loopne
mov
mov
sub
push
mov
mov
aaa
xor
xor
mov
adc
aaa
mov
mov
dec
or
mov
adc
cmp
rcr
ret
mov
xchg
or
data16
push
xchg
stos
or
push
fsub
pop
mov
xor
pop
adc
clc
sbb
mov
or
sub
out
adc
xchg
add
addr16
push
add
ret
call
or
ror
dec
pushf
ret
ret
push
push
and
and
sbb
pop
dec
adc
std
and
push
ins
mov
js
cld
xchg
adc
test
xor
push
adc
call
stos
add
pop
cs
or
cmp
push
pushf
xor
sbb
and
jmp
xchg
pop
and
push
jbe
push
mov
pop
and
pop
js
mov
inc
mov
mov
movs
inc
pop
sbb
jne
add
mov
mov
imul
jno
adc
xchg
stos
adc
cdq
ds
dec
inc
push
fs
push
cmp
pusha
aad
dec
push
mov
dec
push
test
jp
mov
jbe
adc
inc
inc
inc
fs
mov
inc
(bad)
xchg
imul
jns
push
daa
lods
dec
jb
in
add
stos
nop
add
push
and
xor
mov
or
sub
popa
cli
les
inc
adc
mov
cmp
push
outs
xchg
movs
or
add
cmps
add
ss
adc
imul
ror
scas
sbb
add
dec
push
sbb
xor
inc
and
push
outs
out
jb
je
add
cmp
bound
xchg
xchg
pusha
or
out
dec
add
sbb
dec
pop
push
lods
add
adc
and
clc
push
mov
add
xchg
xor
jb
xchg
jo
pop
push
push
and
loop
push
js
fisubr
ja
adc
test
jne
data16
push
xlat
pop
movs
ss
je
ds
in
sub
inc
in
ret
push
inc
rol
mov
loopne
or
sub
xor
cli
imul
adc
sbb
sub
xchg
inc
and
mov
sbb
jmp
xchg
mov
xor
imul
jp
jbe
nop
in
add
inc
cli
push
mov
loope
dec
aaa
sbb
push
mov
pop
test
pusha
out
jne
push
mov
push
sahf
pusha
test
mov
xchg
mov
push
mov
inc
fimul
push
push
pop
mov
push
add
and
movs
mov
mov
xor
bound
sub
fld
inc
mov
push
xor
ret
xor
movs
movs
adc
pushf
clc
out
jb
xor
add
fdiv
mov
dec
neg
loope
xor
xchg
out
push
and
adc
xor
push
xor
pop
popa
jb
push
inc
dec
push
mov
test
mov
cmp
inc
scas
js
push
adc
sbb
inc
data16
rcl
inc
fs
mov
outs
add
dec
out
pusha
mov
stos
cmp
jb
or
push
sub
inc
adc
xor
inc
outs
mov
xor
dec
loopne
mov
mov
in
movs
jmp
xchg
and
push
xchg
pusha
bound
cmp
call
push
inc
movzx
mov
and
in
mov
or
push
xor
lods
mov
adc
fdivr
movs
push
adc
pop
loop
dec
add
inc
enter
xchg
xchg
lods
mov
jo
es
stos
bound
jo
es
xchg
adc
data16
sub
pop
dec
dec
lock
jp
outs
mov
xor
add
ret
dec
ret
and
movs
fcom
mov
adc
inc
pop
adc
aaa
nop
stos
fs
test
in
push
cs
xor
pop
xchg
ds
xor
cmp
or
push
movs
sbb
xchg
jle
imul
jl
pusha
mov
and
xchg
loope
jbe
fadd
je
fsubr
xor
data16
or
or
fs
in
xor
movs
dec
pop
stos
(bad)
push
sub
cmp
pop
rcl
or
ret
cs
lea
add
dec
and
adc
in
push
xor
inc
jno
and
adc
fs
sub
ja
push
enter
cmp
push
inc
inc
push
shr
xchg
inc
clc
dec
(bad)
retf
and
sub
add
dec
jbe
inc
inc
leave
ds
jbe
call
outs
jle
xor
push
mov
ds
xchg
mov
mov
nop
push
push
data16
push
(bad)
ins
and
push
mov
pop
dec
xlat
sub
push
add
inc
es
mov
xor
inc
es
dec
sub
inc
dec
xor
inc
or
cmps
push
or
test
inc
push
add
pop
inc
stos
imul
push
push
inc
inc
jb
movs
loope
test
cld
arpl
fadd
adc
inc
add
inc
ins
nop
and
dec
and
and
(bad)
mov
add
xor
mov
ss
xor
retf
mov
jl
sub
stos
pop
inc
push
add
rcl
arpl
inc
push
add
inc
push
or
dec
test
push
lods
sbb
dec
data16
push
cmp
and
loopne
mov
push
sbb
ret
push
mov
sub
inc
in
push
xor
cwde
xchg
movs
popa
dec
mov
dec
je
gs
jp
imul
jae
dec
sahf
mov
imul
retf
and
or
pop
pusha
or
es
pop
rol
js
outs
xchg
sbb
add
fcom
sub
popa
xor
xor
test
push
push
or
leave
je
inc
scas
cs
inc
rol
sbb
dec
add
push
sbb
jne
data16
push
xor
aaa
inc
nop
jb
xor
xor
mov
mov
dec
and
dec
cdq
push
adc
mov
cmp
xor
ins
cwde
dec
push
shl
shr
inc
sub
jmp
push
ficomp
push
dec
push
in
add
jb
popa
push
inc
push
call
aaa
bound
xchg
xor
pusha
or
mov
adc
dec
cli
sbb
jp
test
dec
stos
test
sbb
in
jp
xchg
mov
push
mov
jo
push
jb
test
popa
test
pop
xchg
sbb
sbb
fs
je
xchg
(bad)
fistp
popa
push
inc
popa
inc
mov
outs
dec
push
mov
mov
inc
sbb
dec
inc
add
(bad)
es
arpl
xor
lea
xor
sub
push
shl
add
ins
dec
xor
fucomi
add
dec
xchg
adc
jl
pop
in
push
add
pusha
push
push
jp
inc
loop
jno
and
adc
or
rol
push
jno
shl
sub
xor
sbb
inc
push
sub
xchg
sub
mov
xchg
out
jo
or
push
jle
sub
ficomp
outs
es
push
jno
fisubr
or
ds
dec
inc
jo
or
je
mov
or
imul
fidiv
jp
mov
aaa
and
neg
xor
xor
pop
stos
pop
call
jp
pop
xor
jbe
dec
aaa
sbb
or
ret
es
push
popf
ss
fcomp
xor
adc
jb
int3
adc
xor
add
lock
xchg
xor
dec
pop
push
inc
sub
mov
and
je
stos
ficom
dec
and
add
sbb
sub
push
sbb
push
outs
dec
push
xor
dec
and
cdq
dec
or
xor
cmp
dec
cs
pop
call
xchg
xchg
xchg
retf
push
xchg
mov
jns
inc
mov
xchg
es
mov
fld
xor
or
jno
add
push
lds
inc
enter
xor
adc
jne
mov
cmp
sbb
movs
push
dec
sbb
xchg
add
jns
sbb
les
pop
xor
pop
push
add
add
in
mov
push
nop
jae
pop
adc
xor
addr16
fs
jbe
dec
ins
loopne
cs
add
dec
inc
and
adc
and
popa
adc
not
inc
inc
push
pop
push
sub
add
js
dec
cdq
popa
rol
inc
fmul
bound
xor
adc
sub
(bad)
fcom
add
aad
pusha
add
call
pop
sbb
ins
and
mov
push
stos
jo
fisubr
ss
mov
or
pushf
cmps
jno
mov
xor
bound
push
xchg
or
pushf
hlt
ret
sub
push
add
shr
sub
adc
cmp
pop
es
cs
jns
push
ja
mov
cmp
jne
xchg
adc
sbb
sbb
stos
ss
mov
ror
outs
jp
push
aaa
inc
xchg
shr
dec
push
inc
inc
imul
or
shr
dec
adc
push
dec
lods
xor
out
xchg
ins
mov
push
ins
mov
les
inc
push
jno
add
inc
jae
adc
cmp
bound
or
inc
inc
push
inc
xchg
sub
push
cmp
cld
inc
cmp
push
enter
cmp
cs
push
and
jb
dec
cli
mov
dec
push
xor
sub
push
in
xor
out
xchg
xchg
jae
mov
inc
adc
push
dec
sbb
adc
jmp
push
xor
xchg
aaa
push
push
xor
sahf
lds
xchg
or
sub
scas
inc
retf
mov
jae
and
pop
dec
je
push
clc
rol
add
pop
inc
sub
or
adc
jle
cmp
in
sbb
movs
dec
inc
push
xor
test
sub
sbb
and
sbb
inc
and
loopne
sub
or
adc
mov
push
push
add
adc
jo
jb
ins
data16
lock
dec
nop
ja
enter
push
cmps
mov
inc
fs
nop
ss
pushf
dec
sub
xchg
push
xor
inc
or
mov
inc
sub
add
xlat
jns
push
push
add
in
pusha
xor
push
or
inc
and
shl
inc
fs
les
inc
cmps
fs
xchg
push
ins
test
push
push
mov
or
outs
in
popa
jp
rol
jo
and
rol
inc
ror
push
mov
and
fisubr
add
mov
pop
push
mov
cli
inc
mov
ret
dec
fs
rcl
retf
mov
push
loopne
mov
push
daa
push
cmp
ins
pop
push
mov
retf
xor
push
jp
clc
xor
or
push
xchg
adc
nop
cmp
in
or
inc
jno
push
jp
dec
mov
fimul
xor
inc
jl
inc
pop
jp
add
call
add
inc
in
push
adc
dec
(bad)
retf
xchg
and
call
cmp
fmul
jno
js
ins
xchg
add
imul
les
jns
hlt
imul
pop
and
add
inc
mov
sub
popa
cmp
inc
lds
dec
loop
fiadd
dec
outs
sbb
cmp
sbb
mov
push
xchg
outs
inc
cmp
dec
ja
lock
aam
(bad)
xchg
test
aam
es
enter
shr
sub
sbb
jo
or
mov
mov
ins
push
mov
add
xor
arpl
rcl
jl
push
push
clc
ins
sbb
jno
je
dec
adc
dec
shr
inc
inc
inc
mov
and
test
xchg
push
sub
inc
and
sub
mov
ror
inc
(bad)
mov
sub
mov
bound
ret
loope
arpl
sbb
inc
cmp
mov
shr
jle
mov
fs
fsubp
cdq
push
and
mov
xor
mov
pop
push
aam
push
add
xchg
inc
mov
xor
adc
xchg
dec
dec
xchg
or
sbb
xchg
push
(bad)
mov
push
mov
sbb
cld
inc
jno
inc
cld
jb
adc
add
dec
ret
sbb
push
js
test
movs
sbb
inc
loopne
movs
mov
xchg
mov
inc
nop
out
inc
(bad)
call
fsubr
dec
mov
mov
cli
jne
imul
or
or
xchg
shr
and
cmp
adc
inc
and
xchg
jbe
cmp
adc
mov
add
stos
(bad)
outs
jo
xchg
add
xchg
dec
push
push
push
inc
imul
test
ficom
pop
xchg
push
push
gs
and
sbb
test
scas
and
xor
or
cwde
cmp
push
or
xchg
sub
and
ins
cmp
and
test
and
ds
inc
sub
and
inc
jns
xor
cmp
sub
push
push
lds
add
jbe
jp
jno
pop
jae
ror
inc
add
mov
add
mov
adc
je
mov
jl
cmp
xor
mov
mov
inc
xchg
popa
sub
inc
inc
fld
pop
inc
xchg
retf
jo
pushf
adc
add
xor
push
inc
dec
ror
dec
shr
mov
or
sbb
inc
mov
pop
push
add
loope
aad
(bad)
aaa
mov
rol
sub
dec
sub
movs
push
movs
push
or
or
jo
jl
adc
movs
dec
and
call
sub
dec
cmp
call
push
inc
movs
jb
in
adc
add
stos
push
xor
popa
inc
inc
or
ror
inc
cmp
xor
jmp
fadd
movs
stos
es
bound
push
push
jle
or
dec
add
or
(bad)
or
dec
push
cli
inc
call
push
xor
mov
and
xor
popa
dec
or
cwde
movs
scas
popa
or
xor
imul
add
dec
mov
ins
adc
inc
jp
push
aad
shl
or
test
loopne
mov
mov
inc
add
mov
xchg
data16
test
mov
and
and
nop
or
pop
xor
dec
xchg
or
mov
stos
fwait
fwait
js
push
ja
(bad)
movs
push
call
lahf
and
sbb
bound
or
cmp
jbe
jp
sub
arpl
(bad)
cli
imul
retf
xchg
shr
xchg
jb
gs
and
push
xor
sub
push
add
pop
mov
adc
and
loope
inc
dec
jb
fidivr
xchg
push
arpl
xor
cmp
inc
es
and
mov
adc
cmp
shr
enter
mov
and
inc
mov
sub
mov
dec
adc
dec
xor
outs
dec
xor
push
mov
push
ret
sub
cmps
sbb
mov
dec
dec
cld
push
aad
ret
mov
cmps
xor
or
adc
adc
add
movs
cld
sub
jmp
gs
xchg
ficom
push
push
and
lea
arpl
or
push
in
dec
jo
mov
hlt
inc
or
dec
sbb
rcl
nop
aaa
add
test
inc
rcr
(bad)
or
push
xor
xor
or
nop
pusha
gs
xor
dec
or
xchg
push
mov
lock
ret
popa
popa
into
je
adc
mul
jno
ins
xor
jne
(bad)
cli
test
sub
pushf
sbb
clc
fisubr
adc
stos
jne
dec
cmp
rcl
add
mov
test
test
ss
push
adc
call
or
arpl
xor
imul
fisttp
push
inc
addr16
mov
dec
es
je
xchg
push
add
ret
and
xchg
cmp
les
lods
add
stos
add
push
or
pusha
or
ror
loopne
inc
dec
push
xchg
cwde
clc
cmp
cmp
outs
push
call
into
push
mov
push
gs
ss
push
push
ins
ss
ins
xor
call
ss
xor
push
pop
push
ins
sbb
and
scas
call
or
push
mov
rcr
dec
xchg
and
movs
pushf
and
mov
and
xchg
push
mov
adc
aaa
jmp
pusha
je
dec
jno
jbe
mov
or
inc
pop
and
mov
loop
add
ss
mov
add
pushf
inc
mov
jne
xor
and
mov
test
test
imul
ss
ret
mov
push
dec
adc
jae
mov
outs
push
sbb
ja
dec
push
sbb
nop
adc
push
cmp
push
inc
push
cld
inc
xor
and
sub
jp
push
inc
ret
and
push
or
enter
outs
jmp
outs
pop
cmp
add
push
mov
bound
fadd
test
sub
pop
nop
push
fnstenv
in
outs
ins
lock
mov
cmp
mov
clc
inc
int3
push
xchg
in
mov
adc
xchg
mov
mov
cmp
xchg
dec
or
inc
shl
add
cdq
fs
outs
mov
mov
jb
or
inc
in
push
dec
push
mov
outs
jp
and
pop
cwde
cmp
(bad)
stos
dec
add
push
out
jns
test
xchg
jmp
gs
into
push
mov
inc
dec
xor
and
push
dec
cwde
xor
test
js
add
test
mov
pop
or
mov
bound
mov
inc
sub
or
dec
cmps
cmp
jno
cmp
call
out
or
sub
data16
or
cs
xchg
in
cmp
adc
or
push
and
jp
inc
ins
into
es
jo
jbe
inc
jl
mov
xor
dec
je
adc
shl
pop
call
jp
mov
cmp
in
xor
es
dec
dec
ss
mov
mov
int3
push
push
mov
push
mov
and
dec
pop
push
loope
aam
push
push
and
push
xor
pusha
adc
inc
mov
mov
call
je
mov
add
test
push
inc
loopne
push
jae
mov
(bad)
pushf
cmp
in
xor
gs
pushf
inc
cs
xchg
or
and
jo
sub
mov
push
add
dec
pop
sbb
adc
mov
js
(bad)
xchg
or
push
xchg
add
enter
pusha
mov
cmp
xor
xchg
sar
xor
xor
sbb
dec
loope
or
dec
jo
hlt
inc
mov
xor
or
test
aam
or
or
aaa
push
fwait
push
dec
mov
ror
xchg
adc
or
inc
push
mov
test
xchg
mov
xor
test
inc
push
jo
cmp
mov
or
dec
inc
test
sbb
es
pop
loopne
cmp
sbb
or
fmul
pop
sbb
xor
dec
mov
mov
movs
xor
bound
mov
es
pop
jae
xor
and
fsubr
xor
outs
push
mov
out
gs
fiadd
dec
xor
mov
jns
and
rol
imul
scas
aad
je
dec
push
adc
jmp
inc
cmc
ret
push
fs
inc
js
jno
ss
adc
push
mov
push
dec
and
mov
cwde
jl
jp
int
cmp
xor
jae
push
push
pushw
outs
bound
rol
call
test
arpl
adc
and
xor
and
aam
ret
adc
inc
arpl
fs
je
push
aam
cmp
lods
cwde
and
gs
mov
pusha
(bad)
mov
sub
jne
sub
inc
adc
and
retf
mov
and
add
arpl
dec
inc
dec
bound
cmps
outs
inc
or
cld
jno
xor
xchg
sub
push
add
ss
or
dec
lods
shr
les
mov
adc
mov
out
fimul
dec
fwait
add
adc
nop
inc
dec
mov
mov
imul
jae
push
cwde
xor
jbe
ss
push
xchg
adc
xchg
in
push
call
jp
sbb
outs
dec
adc
dec
xor
add
pushf
ds
mov
jb
jae
pop
fld
or
lods
popa
dec
jbe
jno
push
sahf
cmps
cmp
outs
push
jb
pusha
ror
push
cmp
rol
inc
and
mov
int
and
fcom
or
inc
and
add
add
mov
pushf
mov
xor
dec
inc
xor
and
sbb
add
(bad)
dec
sub
inc
push
mov
sub
aam
mov
addr16
adc
call
inc
movs
sahf
sub
push
sub
push
mov
dec
test
dec
bound
pushf
adc
adc
adc
xchg
add
add
add
and
nop
int3
mov
jo
mov
dec
imul
xor
jne
dec
xchg
add
dec
cmp
xor
cmp
xchg
sub
mov
xor
xor
mov
cmps
jno
sbb
sbb
xchg
outs
sbb
mov
push
jo
mov
lock
xor
add
aam
test
cs
inc
aaa
ins
cwde
imul
into
dec
jbe
push
xor
in
fiadd
repnz
xor
mov
xor
push
jns
dec
inc
mov
jo
dec
dec
pusha
add
outs
fdiv
pusha
add
bound
cmp
mov
and
dec
call
push
adc
test
push
pushf
ret
add
ret
movs
push
je
push
dec
and
add
mov
mov
xchg
mov
outs
inc
add
xchg
adc
stos
push
sbb
dec
push
cdq
add
add
dec
dec
daa
mov
dec
xchg
xor
inc
dec
xor
cmps
and
mov
add
jns
sbb
mov
popa
sbb
push
int3
pop
or
xchg
inc
inc
adc
retf
mov
and
stos
add
cmp
push
push
dec
mov
mov
push
aam
mov
stos
imul
push
jbe
pop
inc
push
pop
mov
or
call
dec
outs
push
push
push
js
adc
jo
or
add
mov
fdivr
inc
fs
pop
inc
push
mov
es
fidiv
push
into
in
add
mov
mov
or
push
adc
repnz
aaa
mov
sub
aad
xor
mov
inc
leave
shr
inc
retf
inc
mov
xor
nop
inc
dec
sub
fidiv
or
mov
mov
clc
add
inc
sbb
inc
mov
sbb
ins
inc
loopne
mov
pusha
outs
inc
ja
sbb
dec
sbb
jo
sub
ins
je
dec
fmul
adc
mov
lea
mov
cwde
dec
jp
adc
ficom
inc
push
inc
ss
mov
xor
ss
daa
and
and
and
mov
xor
add
mov
and
mov
mov
xor
outs
addr16
ss
pusha
push
mov
outs
or
cmp
xchg
fs
rol
adc
clc
test
loopne
inc
dec
test
cmp
sbb
inc
adc
and
daa
movs
(bad)
or
dec
jp
add
jns
pop
mov
or
sar
leave
pusha
retf
add
adc
push
clc
add
fwait
into
fimul
data16
je
lods
or
pop
in
jns
int
push
fcomp
dec
jb
or
cmp
repnz
push
sbb
inc
push
ss
test
call
cmp
push
ds
shr
enter
sub
imul
or
or
xor
pushf
ss
xor
inc
dec
or
push
xor
push
push
jp
dec
ins
sub
adc
fimul
jmp
push
loopne
push
inc
mov
adc
push
or
cmp
xchg
fcmovnbe
inc
pusha
arpl
dec
sub
(bad)
push
push
leave
or
xor
jmp
ins
sub
fst
inc
ficom
arpl
cwde
test
xor
inc
xor
push
push
push
pushf
jp
add
mov
or
inc
pop
mov
aad
pop
in
dec
jmp
push
mov
cmp
push
inc
push
cmps
mov
push
sbb
imul
nop
retf
call
retf
inc
retf
adc
js
shl
jne
and
or
ror
(bad)
mov
nop
xchg
mov
mov
pop
push
and
cmp
sbb
push
pop
pop
outs
ss
push
inc
repnz
jb
test
push
push
jne
jmp
and
or
add
into
into
stos
test
inc
dec
loopne
jle
push
push
sub
dec
movs
push
pop
fcmovnbe
ret
jne
imul
pusha
sbb
out
xchg
xchg
call
xor
dec
pushf
push
or
fadd
cwde
xor
cdq
sub
mov
jb
jmp
adc
adc
inc
sbb
xor
xor
xchg
inc
ja
ins
leave
push
pop
add
retf
cmp
adc
js
dec
icebp
xchg
add
bnd
push
shr
mov
and
add
xor
or
and
dec
push
add
dec
outs
inc
scas
push
nop
mov
sub
jae
ins
popf
inc
lods
and
jne
or
rcl
lods
xor
push
mov
push
inc
dec
mov
test
gs
push
add
bound
les
and
dec
mov
cs
push
inc
mov
mov
hlt
ja
inc
shl
pop
push
into
aam
push
or
(bad)
imul
(bad)
rol
aam
sbb
sbb
stos
mov
ret
or
inc
loopne
mov
mov
add
outs
push
loopne
or
jo
cdq
fs
ficom
or
xchg
fs
xchg
cli
mov
ins
and
je
add
mov
jl
popa
call
xor
adc
push
and
and
dec
xor
dec
js
push
jp
push
test
test
dec
sub
outs
pop
ins
in
movs
pusha
mov
push
dec
ret
add
mov
ins
mov
add
dec
jp
add
cwde
arpl
scas
int3
xor
cmp
xor
push
mov
add
push
push
push
jmp
dec
adc
pop
int
push
push
fmul
ret
popa
test
shr
push
add
jp
jae
xchg
(bad)
fidivr
add
dec
add
push
jmp
add
inc
pop
test
mov
fcmovu
or
aam
dec
arpl
push
push
adc
dec
and
push
mov
(bad)
popa
ins
add
xor
adc
or
adc
inc
in
add
xor
mov
imul
add
aam
dec
add
aaa
fs
sbb
fdivr
inc
inc
inc
ret
inc
imul
xor
lods
fist
push
push
ins
stos
add
sub
dec
loopne
push
outs
sbb
mov
jle
adc
or
data16
push
push
es
out
mov
xchg
pop
in
shl
dec
js
push
shr
mov
mov
out
ss
and
jo
fdiv
add
je
in
dec
pop
add
mov
inc
bound
push
jno
sub
cli
inc
sub
push
mov
rcl
push
idiv
xchg
mov
push
in
xor
xor
ret
data16
xor
sub
pop
cwde
add
pop
inc
pop
inc
js
bound
push
mov
pop
sar
push
data16
push
dec
add
rol
cmps
cs
push
jp
or
stos
mov
stos
jns
xchg
addr16
xor
jo
ss
popa
pushf
dec
adc
test
outs
push
inc
daa
dec
ins
push
imul
xchg
add
stos
jo
test
aaa
es
ss
sub
pop
loope
mov
dec
adc
mov
dec
dec
push
test
xchg
mov
(bad)
in
push
and
mov
push
pop
inc
push
sub
sbb
xor
sub
or
fdivr
dec
dec
xchg
and
pop
scas
xor
mov
adc
mov
push
or
arpl
xor
gs
enter
mov
adc
or
or
push
arpl
xchg
fimul
push
push
xor
inc
adc
sbb
lock
cmp
xor
mov
add
inc
adc
test
and
inc
and
push
inc
call
test
retf
dec
in
push
fs
inc
add
fs
lods
cmp
push
call
fs
sub
xor
ss
dec
and
in
into
push
inc
sub
or
xor
or
fs
dec
stos
fs
inc
dec
adc
sbb
cmp
clc
push
push
lods
dec
popa
bound
mov
jo
xor
mov
push
add
test
or
inc
xor
adc
pop
aam
add
rol
in
push
push
and
jl
and
push
jl
push
push
push
xchg
or
or
adc
mov
es
push
dec
dec
dec
mov
add
push
add
and
cdq
and
add
and
push
cmp
push
inc
inc
imul
cdq
adc
call
movs
xchg
stos
sub
push
nop
push
adc
nop
pop
adc
sub
mov
xchg
stos
jns
retf
push
and
shr
push
sub
add
or
pop
xor
inc
and
pushf
adc
sbb
sub
push
mov
loop
push
mov
inc
inc
add
jp
or
dec
outs
nop
movs
or
jo
ss
adc
xchg
dec
rol
loope
mov
xor
movs
pushf
and
call
or
inc
xor
sbb
mov
jb
pop
or
pusha
fidivr
fs
add
inc
push
xchg
outs
add
(bad)
jo
xor
and
lock
and
xor
add
xor
dec
movs
popf
adc
adc
or
mov
pop
test
adc
outs
add
mov
mov
dec
inc
nop
mov
cdq
push
and
dec
push
ss
and
mov
arpl
inc
add
loop
push
sbb
out
jp
push
and
cmps
cmp
adc
or
inc
jp
sbb
push
sub
push
loopne
sub
outs
inc
push
dec
mov
dec
push
mov
mov
sub
clc
mov
xchg
or
in
xor
(bad)
rcr
xor
adc
dec
push
inc
imul
push
push
or
and
aaa
and
push
dec
(bad)
lods
push
loopne
inc
(bad)
test
lock
test
and
push
mov
mov
or
aam
ret
xchg
adc
xchg
fs
add
inc
dec
ins
test
lock
sub
jns
cmps
dec
jl
dec
or
sub
mov
adc
paddd
mov
jbe
dec
xchg
adc
xor
dec
sub
dec
dec
dec
jae
and
in
add
imul
or
jbe
or
into
add
push
mov
inc
data16
push
adc
sub
clc
or
imul
sub
or
dec
popa
stos
gs
aam
dec
push
dec
inc
sub
in
mov
out
call
jns
cmp
cmp
cmp
bound
jae
add
xchg
inc
or
and
mov
loop
stos
mov
out
lock
inc
pop
push
pop
push
dec
jbe
jne
shl
aam
push
js
lock
call
gs
mov
mov
mov
push
xchg
or
ja
mov
outs
cmp
daa
inc
sub
pop
jns
dec
cwde
inc
xor
or
adc
loopne
add
fisub
bound
or
scas
inc
adc
sub
in
jne
push
xor
push
jne
push
push
cmp
inc
pop
jb
xchg
bound
add
inc
jbe
outs
je
loope
retf
jae
fcmovu
ss
dec
jmp
push
shl
push
out
add
outs
stos
inc
ins
cmp
outs
push
mov
inc
into
adc
mov
add
xchg
push
mov
xor
push
lock
sub
or
mov
push
mov
add
jb
dec
dec
gs
je
stos
jbe
dec
cmp
dec
shr
mov
add
popa
call
mov
js
cli
adc
inc
push
inc
into
and
ss
and
fadd
js
xchg
or
or
or
pusha
mov
push
loopne
inc
dec
or
ins
add
mov
fadd
or
test
add
ins
and
pop
adc
adc
push
or
shl
js
push
popa
xchg
inc
mov
imul
sbb
test
cwde
dec
inc
and
mov
ret
sub
adc
outs
dec
dec
xor
mov
mov
push
sub
pop
pop
or
mov
inc
les
add
and
cli
pop
aad
retf
sbb
and
data16
and
test
into
loopne
mov
popa
adc
inc
sbb
inc
and
push
cmps
mov
fadd
jno
xchg
data16
push
nop
pop
aam
pop
push
dec
push
lods
or
dec
dec
pushf
xchg
rcl
adc
sub
test
dec
fcom
xor
jno
pop
xor
sbb
lods
dec
sbb
shl
jbe
cwde
sar
sub
cmp
adc
jo
sbb
mov
mov
shl
xchg
ins
and
add
stos
xor
sub
sub
adc
enter
lds
add
popa
fs
adc
and
jo
add
in
aam
call
jmp
pop
mov
xchg
push
add
dec
(bad)
inc
sub
mov
xchg
or
dec
or
adc
sub
mov
loop
popa
inc
xchg
test
inc
scas
cmps
cmp
add
inc
push
add
adc
add
cmp
test
push
out
mov
mov
dec
dec
push
push
shl
dec
xor
dec
or
data16
ror
mov
pop
xor
add
lds
jbe
push
push
push
loop
xor
sbb
je
hlt
adc
cmp
inc
jae
dec
data16
push
adc
jo
loop
dec
or
test
out
pop
xchg
cmp
pusha
push
stos
pop
outs
xor
mov
shl
in
outs
jae
jle
gs
sub
popa
xchg
inc
jbe
add
dec
push
pop
ja
inc
test
cmp
xchg
nop
sbb
les
xor
pop
xor
push
mov
inc
cmp
scas
adc
mov
inc
ja
ss
pushf
add
and
add
push
inc
and
hlt
outs
in
jp
adc
xor
rcl
jbe
mov
and
inc
ss
adc
cs
add
adc
lods
or
fisub
and
shl
inc
into
data16
sbb
loopne
inc
fcom
inc
fwait
stos
or
push
dec
mov
inc
ret
pop
ss
push
pop
xchg
fsub
dec
outs
popa
push
sub
add
fidivr
call
or
dec
dec
xchg
xchg
enter
inc
xor
imul
cli
aaa
sbb
cwde
pop
cld
in
jo
xor
or
(bad)
cmp
movs
sbb
push
pop
ret
dec
inc
cmc
sbb
push
aad
or
sub
push
cdq
pop
and
test
push
dec
sbb
retf
mov
inc
cmp
scas
jne
mov
dec
sbb
push
lods
sub
shl
je
jo
(bad)
cwde
test
enter
push
or
sbb
sub
data16
push
in
call
stos
add
les
push
ins
inc
and
push
enter
xor
xor
les
dec
leave
inc
push
pusha
push
xchg
pop
stos
dec
push
inc
push
or
and
or
inc
xchg
jbe
add
mov
sub
int3
add
mov
push
addr16
addr16
mov
js
add
pop
cmp
dec
inc
adc
xor
xchg
xor
jae
fwait
add
movs
jo
push
ins
push
jp
dec
sub
fsub
jno
sub
add
nop
add
les
rcl
jle
jne
ret
aam
inc
inc
fmul
js
enter
sbb
or
mov
stos
sbb
jo
pop
imul
xor
sbb
retf
cdq
add
lods
popa
sub
push
mov
mov
dec
sbb
stos
xor
inc
pop
sbb
push
ja
int3
in
cmp
scas
mov
inc
popa
mov
stos
fs
or
js
or
push
mov
push
pop
sbb
pop
push
inc
retf
inc
cld
sbb
test
xchg
imul
fimul
xor
jl
sbb
push
add
(bad)
dec
scas
inc
outs
push
adc
or
add
bound
cli
jb
call
adc
inc
jne
stos
sbb
mov
enter
mov
push
imul
dec
mov
cmp
adc
adc
dec
es
dec
add
or
fmul
push
add
push
mov
pop
data16
and
sub
jo
fs
and
xor
sub
hlt
call
cmp
cwde
pushf
xchg
adc
mov
push
popa
adc
xor
adc
ds
push
pushf
sub
(bad)
(bad)
(bad)
cvtdq2ps
cmp
outs
mov
movs
nop
test
aaa
push
mov
fcomp
popa
jne
mov
fiadd
mov
outs
je
xchg
xor
and
dec
cwde
cmp
and
cwde
inc
adc
sbb
dec
ficom
inc
dec
stos
sbb
inc
gs
aad
and
js
inc
cmp
gs
ds
jg
inc
ja
jl
push
mov
xchg
mov
mov
movs
sbb
dec
stos
xchg
ror
call
arpl
ins
dec
inc
ins
enter
xor
ins
cmp
cmp
cmp
adc
stos
enter
dec
jl
push
or
adc
xchg
shl
gs
aaa
arpl
mov
xchg
mov
push
addr16
mov
xor
shl
outs
outs
adc
mov
xchg
js
dec
test
stos
and
sub
loope
adc
mov
cli
mov
or
xchg
and
ins
jp
dec
xor
fiadd
ds
and
add
dec
jo
xchg
in
clc
scas
inc
aam
xor
jo
or
dec
cmp
add
mov
test
fild
inc
mov
xor
inc
dec
or
or
mov
clc
pop
push
bound
push
add
fidiv
les
cmp
mov
push
inc
xor
inc
sbb
test
add
ret
lods
mov
retf
test
stos
jbe
and
add
movs
mov
xchg
cwde
and
mov
adc
bound
inc
xor
push
xor
pushf
xor
mov
and
shr
test
imul
add
jno
call
mov
fiadd
push
xor
xor
adc
bound
or
int3
inc
or
sub
inc
mov
push
add
and
outs
add
push
rol
dec
xor
loop
or
mov
add
test
retf
jo
xor
or
push
shl
aad
and
adc
sbb
dec
or
enter
les
retf
cmps
sbb
jns
nop
push
fadd
ds
dec
dec
mov
mov
out
sbb
sbb
pushf
dec
or
jle
inc
mov
mov
jb
bound
sub
sbb
push
arpl
cs
inc
cmp
pop
pop
hlt
movs
add
int3
ins
mov
xor
mov
ins
loop
addr16
or
xor
and
push
dec
inc
jo
cmp
sub
push
je
je
je
pop
push
or
rcl
push
mov
mov
pop
jo
mov
test
in
dec
addr16
and
leave
dec
cmp
pusha
(bad)
mov
push
(bad)
enter
xchg
push
mov
mov
inc
sbb
fs
jb
inc
dec
shl
and
jb
imul
mov
xor
inc
lods
sub
ins
jae
push
cmps
or
test
pop
jbe
sub
mov
jo
dec
inc
xor
ins
mov
(bad)
mov
loopne
push
add
adc
mov
(bad)
mov
mov
push
adc
(bad)
jo
retf
dec
xchg
add
(bad)
push
sbb
scas
mov
mov
pop
jb
ins
shl
and
dec
(bad)
push
jns
push
in
push
inc
gs
ss
mov
cmps
nop
dec
jbe
test
fdivr
push
es
push
ds
test
add
hlt
inc
dec
stos
inc
bound
dec
or
inc
or
push
dec
push
xchg
jbe
pop
jl
jbe
mov
add
mov
dec
mov
dec
dec
xor
xor
mov
add
addr16
add
test
push
xor
inc
xchg
or
dec
mov
adc
sub
xchg
cdq
add
cmp
test
jp
out
xchg
add
jb
add
dec
sub
adc
aad
enter
push
loopne
cwde
pop
push
or
adc
xor
mov
inc
int3
in
mov
in
cs
lods
sbb
sub
inc
pusha
mov
out
dec
call
sub
enter
dec
inc
pop
xchg
call
mov
jne
xchg
fcom
dec
inc
mov
xchg
mov
inc
ins
mov
je
push
shl
jp
or
shl
add
call
data16
repnz
gs
sbb
sub
(bad)
mov
dec
push
cdq
dec
mov
dec
push
or
xor
fiadd
ss
push
jns
xor
or
adc
loop
adc
xchg
jle
mov
je
fiadd
test
jb
inc
sbb
sbb
inc
push
push
mov
and
push
xchg
mov
pushf
adc
rcl
mov
add
ss
cwde
jbe
sbb
jo
mov
call
push
into
mov
and
push
inc
jp
fadd
adc
add
push
or
out
ror
inc
mov
lods
or
mov
outs
test
in
push
fcom
xor
fsubr
xor
test
sub
and
or
inc
hlt
cs
loopne
push
push
dec
push
aam
mov
cmp
data16
cmp
sub
fimul
push
mov
test
sub
data16
push
sahf
in
pop
dec
add
mov
call
push
fsub
mov
dec
dec
add
mov
ret
push
pop
mov
mov
push
inc
gs
push
enter
add
ret
ins
push
push
fiadd
push
mov
mov
xchg
outs
mov
dec
adc
je
cs
aam
retf
retf
mov
loopne
data16
mov
sahf
into
inc
or
cs
ins
test
lock
sub
xor
imul
test
add
inc
add
call
inc
push
xor
pusha
inc
pusha
mov
mov
test
and
les
inc
pop
and
add
fsubp
dec
cdq
or
add
push
dec
bound
fs
call
sbb
mov
push
xchg
movs
inc
adc
loopne
dec
mov
inc
or
ds
sbb
mov
nop
pop
into
sub
mov
pushf
push
daa
and
in
push
aad
ret
dec
add
xchg
and
cmp
fisub
dec
jb
add
add
lock
dec
ss
gs
pusha
inc
inc
leave
fs
push
push
ins
mov
inc
or
nop
push
rcr
(bad)
xor
xchg
xor
inc
inc
mov
xor
lock
adc
jo
test
add
fs
gs
(bad)
cld
push
fadd
xchg
or
stos
inc
nop
bound
push
inc
test
dec
mov
ins
and
xor
xchg
and
xchg
sub
pop
sbb
adc
xchg
xor
test
jp
jl
sbb
rol
push
fs
push
clc
clc
lods
xor
hlt
jae
int3
xchg
lock
or
aam
xor
ss
sahf
cwde
outs
ss
ss
add
push
push
test
push
push
or
cmps
adc
pop
xchg
mov
adc
adc
or
sub
retf
je
rcl
inc
outs
les
jo
arpl
push
pop
xor
jno
xchg
and
js
(bad)
xor
mov
mov
push
popa
fwait
retf
or
jae
aam
cmps
xchg
retf
mov
fild
xchg
sub
jo
push
sbb
ja
lods
dec
and
inc
or
loope
and
inc
inc
or
test
mov
add
retf
and
xchg
xchg
xchg
loope
(bad)
pop
sbb
retf
dec
ret
or
push
dec
and
mov
xor
test
inc
xor
push
sbb
pop
cs
or
sub
add
mov
adc
pop
test
push
mov
aaa
inc
ficomp
push
xor
xor
retf
and
cmp
inc
pop
mov
outs
fimul
out
push
test
push
and
call
push
mov
adc
stos
leave
push
dec
in
sub
xchg
outs
rol
shl
xor
push
xor
xchg
cmp
jo
fwait
push
push
push
dec
outs
xchg
gs
adc
jbe
push
ss
or
loopne
dec
js
dec
inc
adc
sub
xchg
or
xchg
push
movs
jne
pop
ja
inc
sbb
cmp
inc
xchg
ds
add
nop
fdiv
xchg
mov
test
mov
(bad)
ins
test
jns
stos
ror
mov
inc
jmp
imul
pop
jno
cmp
mov
push
imul
adc
inc
out
rcl
xchg
inc
or
imul
push
cmps
and
xor
pop
lods
bound
add
jbe
inc
inc
sbb
and
add
cs
ja
push
push
popa
inc
daa
and
into
and
dec
aad
push
pop
inc
xor
inc
add
ret
inc
adc
dec
jbe
in
ss
gs
lock
int3
cmps
dec
sub
fs
push
movs
jmp
sub
and
retf
dec
inc
sbb
pop
fdivr
je
arpl
cwde
popa
pushf
clc
inc
and
dec
nop
adc
loopne
sbb
js
push
sub
mov
add
adc
movs
cmps
in
cs
dec
inc
pop
xor
rol
ins
push
or
mov
fs
or
add
push
xchg
push
cmp
inc
push
xor
dec
push
imul
xor
lods
addr16
xor
pushf
mov
mov
inc
ins
cmp
je
add
mov
sub
push
xchg
push
retf
loopne
inc
mov
enter
mov
adc
and
inc
loopne
and
loop
pop
xor
cld
xor
sub
push
mov
or
cli
movs
loopne
adc
(bad)
pop
imul
jb
mov
or
lods
xor
(bad)
or
imul
imul
or
scas
sbb
dec
inc
and
lea
adc
dec
pop
push
xchg
and
xor
or
mov
fisubr
lods
or
push
dec
js
sbb
sbb
loopne
inc
cld
call
lods
loopne
adc
dec
je
sub
pushf
imul
add
cmps
or
imul
cmp
pushf
xchg
stos
inc
xor
dec
or
cmp
dec
outs
or
mov
test
inc
and
inc
or
shl
jae
outs
inc
dec
ficom
xchg
mov
push
call
(bad)
mov
push
test
xchg
xor
cmp
dec
inc
aad
mov
inc
mov
jbe
cmp
or
rcl
xor
or
popf
or
mov
add
test
pop
jb
sub
dec
and
ret
jo
sub
and
imul
push
enter
add
addr16
js
fwait
call
mov
fs
inc
adc
mov
jno
inc
push
in
cmp
retf
dec
push
sub
xchg
shl
inc
xchg
dec
add
add
movs
add
push
pop
xchg
push
fdivr
inc
pop
mov
add
retf
or
sub
inc
mov
ret
ins
push
mov
jne
xchg
je
outs
pop
xor
ds
adc
push
call
pop
pushf
xor
outs
out
and
fs
or
gs
(bad)
mov
sbb
push
fcmovbe
mov
push
xor
dec
add
inc
xor
pop
jl
push
dec
ins
mov
inc
sbb
mov
pusha
xchg
sub
test
ss
dec
inc
mov
push
popa
push
outs
inc
push
fcom
call
mov
mov
push
stos
test
popa
cld
xchg
es
mov
jb
jl
inc
dec
test
push
sbb
les
pop
mov
dec
xchg
out
fiadd
shl
lods
adc
gs
ret
and
inc
sbb
test
ja
cs
movs
ins
shl
xchg
lock
xor
add
outs
in
ret
and
xchg
into
push
(bad)
sbb
inc
and
outs
fs
push
dec
cld
popa
and
jne
cmps
adc
mov
out
js
ret
lock
aaa
xor
mov
mov
sub
and
dec
lods
jp
inc
inc
sub
sub
or
fadd
mov
in
and
loopne
cmps
inc
imul
mov
inc
ss
push
cmp
xor
jno
inc
and
add
inc
sbb
push
xchg
dec
mov
or
push
or
add
add
add
xchg
mov
je
retf
nop
call
push
inc
dec
mov
or
ins
inc
xor
xchg
sbb
inc
ds
xchg
sub
dec
js
adc
sahf
jb
xchg
fidiv
lock
sahf
pop
xor
sub
jp
fs
fs
push
cmps
int
jbe
ins
push
fisubr
and
inc
xchg
dec
and
sbb
pusha
test
sbb
movs
rol
ror
mov
movs
or
sbb
mov
cwde
or
sub
shl
movs
gs
sbb
inc
sub
xor
jnp
fsubr
sbb
int3
jne
cmp
xor
pop
or
push
pop
and
or
stos
fist
add
(bad)
jo
adc
push
arpl
(bad)
jp
jns
inc
test
mov
shl
dec
xor
scas
adc
rol
inc
int3
push
pop
add
sub
mov
dec
cmp
jne
add
pusha
arpl
movs
xchg
fsubr
xor
dec
xor
cmp
inc
mov
(bad)
xchg
sub
push
loope
inc
stos
mov
sbb
jbe
enter
inc
push
dec
push
sub
mov
or
cmp
imul
or
inc
jp
sbb
ror
inc
mov
aaa
aam
inc
or
push
push
movs
add
mov
enter
ins
cwde
retf
sahf
call
xchg
cmp
cmp
mov
dec
fcomp
inc
cmp
push
sub
add
xchg
add
xchg
xchg
pushf
sbb
in
xor
clc
xor
aam
test
inc
jmp
rol
xchg
pop
push
fcom
aaa
add
bound
inc
add
xchg
ins
mov
inc
adc
pop
inc
and
mov
pop
aaa
jne
stos
js
outs
pop
jns
lods
or
and
add
bound
mov
je
data16
inc
xor
idiv
dec
ss
cmp
sbb
xor
dec
ret
loope
mov
je
inc
repnz
js
data16
and
mov
or
nop
je
je
xchg
mov
push
adc
gs
push
sub
sahf
dec
or
aaa
cmp
cwde
cmps
jbe
jno
xor
xor
shr
cwde
dec
pusha
test
cli
dec
sub
ror
ins
push
add
add
dec
adc
outs
inc
mov
xor
mov
jne
enter
inc
jmp
xor
movs
push
shr
je
bound
adc
ficomp
cmp
add
and
loope
inc
jb
add
adc
and
and
and
aaa
and
inc
into
push
pop
mov
jmp
mov
dec
xchg
mov
xchg
sbb
sbb
mov
pop
or
retf
lock
sub
add
cmp
stos
mov
es
mov
push
push
adc
fadd
fadd
in
hlt
inc
aam
adc
and
retf
push
addr16
inc
ret
dec
mov
mov
xor
nop
mov
push
push
cmp
es
pusha
ins
ja
mov
mov
add
js
es
sub
push
loop
xchg
mov
ins
pop
dec
dec
mov
sub
inc
mov
int3
pop
mov
movs
cmp
xor
sub
inc
int3
push
jne
inc
inc
es
js
adc
add
sbb
dec
and
sbb
rcl
sbb
cmps
call
hlt
enter
add
mov
pop
rol
push
dec
jecxz
dec
jmp
push
test
cdq
push
push
fsubr
inc
adc
or
cmp
test
push
or
repnz
add
xor
fisub
mov
inc
mov
push
lods
mov
shl
push
push
imul
sub
gs
sub
retf
cmp
repnz
outs
ins
jbe
cmp
loopne
push
or
dec
inc
ret
imul
xor
jns
xor
xor
mov
pop
pop
xor
sub
test
dec
out
popa
push
adc
pop
cs
cmp
xor
inc
or
add
adc
fadd
inc
jns
xor
pop
adc
out
add
xor
inc
push
xor
push
ja
cmp
mov
xchg
and
xor
call
push
mov
xchg
dec
and
add
dec
push
test
sbb
push
inc
push
push
xchg
dec
push
ds
outs
inc
xor
imul
test
push
popa
pushf
inc
out
pop
sub
sub
push
or
mov
pop
ss
rcl
push
test
pusha
or
dec
test
push
and
dec
push
fidiv
call
mov
into
xor
inc
in
dec
push
jae
add
pusha
mov
jno
int3
ins
jo
jno
je
test
cdq
fdivr
cmp
cmp
inc
fdiv
push
push
push
popa
push
int
dec
cmp
adc
(bad)
and
in
sbb
cmp
je
add
mov
mov
mov
outs
(bad)
movs
push
dec
xchg
nop
add
pop
and
or
and
mov
cwde
mov
xchg
in
popf
xor
ss
push
xchg
mov
bound
mov
shl
mov
sub
adc
dec
xchg
ret
in
xor
push
push
dec
ret
test
jp
xchg
pop
pop
or
cmc
adc
inc
xor
dec
push
pusha
mov
aam
xor
adc
in
dec
inc
xchg
adc
push
push
movs
movs
adc
dec
xchg
imul
sbb
add
mov
popa
fdivr
pop
push
or
mov
jo
fcmove
in
inc
fs
push
sub
mov
adc
les
inc
stos
or
cmp
pop
add
shr
inc
add
mov
sub
sub
push
ja
xor
or
push
and
fcom
movs
stos
inc
mov
push
or
push
push
push
adc
fadd
inc
add
sub
push
pop
xchg
pop
and
add
or
sub
cmp
sbb
xor
nop
test
jns
dec
mov
inc
cli
ins
jbe
test
jo
xchg
ficom
es
dec
pop
cmps
pop
push
xor
test
adc
xor
sbb
xchg
xchg
cmps
pop
push
add
or
loopne
shr
adc
jl
scas
dec
xor
or
add
dec
call
sub
dec
inc
add
jb
mov
cld
jb
fadd
cmp
inc
dec
add
jp
fs
push
jne
or
sahf
xor
fdivr
cld
jg
dec
aam
push
inc
imul
inc
imul
xchg
sub
inc
dec
mov
mov
outs
xchg
adc
daa
mov
enter
lods
xor
cmp
retf
cmp
xchg
add
mov
cs
pop
xchg
sbb
or
dec
gs
jbe
push
push
or
sbb
hlt
mov
mov
or
test
mov
data16
add
add
or
loope
cmps
daa
shl
add
inc
pop
mov
cmp
sub
int3
adc
xchg
xor
mov
aas
arpl
ja
add
ins
or
jg
add
xchg
cmps
xlat
outs
push
lahf
dec
add
push
aas
movs
push
jo
add
mov
adc
add
dec
stos
mov
push
nop
shl
fstp
push
jo
mov
push
sbb
fs
xor
loopne
dec
enter
das
xor
mov
jno
scas
cs
xor
in
mov
mov
add
gs
pusha
jnp
pop
xlat
leave
jae
push
cmps
sbb
push
or
leave
leave
leave
adc
pop
push
mov
push
and
add
daa
or
inc
xor
push
imul
add
shr
test
gs
ds
fldcw
dec
jne
push
ins
ins
fs
ror
cmp
ins
jne
pop
movs
dec
ja
mov
xlat
fisttp
inc
das
test
mov
mov
leave
cmps
mov
fld
addr16
push
rcl
(bad)
loopne
push
rol
out
mov
inc
mov
fld
dec
sbb
pusha
jo
xor
sti
mov
cmp
lods
(bad)
stos
push
adc
(bad)
movs
movs
push
lock
add
mov
xchg
push
call
leave
add
jp
mov
xchg
stos
cmp
push
addr16
aas
mov
or
or
movs
xor
xor
mov
or
jo
dec
pop
push
fidiv
xor
es
cdq
mov
ins
fsubr
mov
in
fiadd
aas
mov
adc
in
and
sbb
clc
add
cs
cdq
sbb
cmp
jnp
jge
call
lahf
(bad)
push
repnz
cmp
ja
cs
lahf
pop
test
pop
test
mov
in
cs
xchg
int
popf
and
inc
mov
and
stos
jne
jmp
xor
cmp
aas
add
addr16
stc
(bad)
lahf
daa
aaa
and
dec
pop
clc
sbb
rcr
into
(bad)
outs
xchg
fsub
int3
push
jae
sahf
fsubr
inc
xchg
cmp
cmps
std
outs
fs
push
mov
cmp
repz
pushf
pop
loope
loope
ins
or
add
add
dec
sti
pop
in
stc
outs
add
mov
mov
dec
or
out
out
or
das
xor
ja
scas
aas
or
cmp
push
push
in
rcr
dec
jnp
iret
leave
and
hlt
sbb
es
es
popf
cmp
cld
nop
inc
scas
in
add
movs
popf
rcr
inc
xchg
jg
cs
pop
xlat
sub
push
shr
das
inc
jno
out
push
xor
mov
mov
mov
pop
int3
mov
cmps
fs
lock
nop
sahf
les
hlt
mov
and
add
fbstp
pop
and
lock
hlt
jns
inc
lahf
adc
push
mov
shr
daa
xchg
outs
stc
lds
jmp
jge
fsub
mov
sahf
add
push
adc
(bad)
dec
aam
push
pusha
shr
mov
aaa
out
(bad)
nop
xchg
fcom
mov
out
nop
pop
int3
movs
mov
sub
pushf
jle
and
add
mov
daa
addr16
adc
ja
or
xchg
outs
sub
cmps
mov
mov
push
ss
mov
out
add
mov
cli
xlat
aaa
push
mov
add
pop
mov
push
xor
pop
xlat
ss
hlt
mov
mov
or
jg
jg
lahf
mov
mov
dec
dec
or
shl
xchg
and
adc
mov
mov
(bad)
mov
mov
pushf
mov
or
and
rol
dec
push
jl
shl
adc
pop
loopne
mov
add
mov
add
add
(bad)
cmp
adc
(bad)
pop
in
in
add
add
dec
cs
add
enter
mov
or
hlt
rol
jns
clts
fidiv
pusha
fs
add
mov
rcl
sbb
pop
inc
stos
cmp
movs
inc
mov
neg
bound
inc
pop
and
adc
call
in
pop
(bad)
inc
dec
movs
into
in
sbb
lahf
stos
js
pop
dec
daa
cmp
jb
push
dec
mov
out
sahf
add
add
mov
stc
cmp
sub
iret
sar
ja
sbb
jns
test
or
repz
cmp
sahf
out
mov
xor
inc
push
js
lahf
out
mov
pop
jns
iret
xrelease
sahf
ja
out
clc
sub
cmp
repz
dec
mov
shl
sahf
cmps
stc
sbb
mov
dec
js
shl
out
sahf
out
mov
iret
repz
add
xor
cmp
mov
enter
outs
rol
mov
and
pop
cmp
scas
in
in
adc
or
jae
aaa
fidivr
andps
stos
pop
jnp
scas
cmp
mov
mov
mov
inc
add
fistp
pop
aaa
inc
pop
push
xor
cmps
cmps
cmp
pusha
push
xchg
call
jle
clc
add
test
lahf
mov
mov
cmp
test
pop
mov
es
adc
(bad)
daa
mov
in
int3
nop
ss
aas
dec
mov
xchg
aam
rol
bound
cmp
jg
fs
inc
or
imul
push
sub
push
ins
jg
rol
aas
xor
test
icebp
outs
shl
es
ja
sbb
inc
push
(bad)
sbb
and
dec
in
enter
cmp
or
mov
pop
pop
mov
test
(bad)
out
enter
int3
stos
fsubr
in
stos
pop
aaa
mov
enter
cmp
cmps
rol
jne
stos
jg
out
cmp
dec
push
iret
fs
aas
jb
cmp
sahf
test
mov
dec
xchg
pushf
in
clc
mov
and
sbb
pop
jl
dec
and
pop
lods
dec
mov
xor
push
or
das
fs
dec
mov
cmp
dec
and
fstp
pushf
test
cmp
je
ss
ds
ins
js
aas
inc
inc
loop
icebp
fisub
iret
jmp
pushf
sub
ror
cmc
loop
dec
cli
cmp
dec
adc
leave
sti
aas
inc
add
or
or
or
and
ss
adc
mov
pop
and
push
out
or
push
bswap
cmp
cmp
loop
add
(bad)
nop
cmp
mov
out
fsubr
push
imul
stc
xchg
out
test
test
pop
jb
adc
and
daa
push
jnp
aaa
mov
jae
adc
outs
or
pop
jecxz
das
out
mov
mov
mov
jle
dec
jo
lods
add
into
dec
(bad)
mov
xchg
loopne
xor
lahf
inc
outs
ins
pusha
cs
pop
daa
lar
xchg
xchg
in
sti
cmp
sbb
enter
inc
pop
sbb
pop
push
scas
inc
push
inc
leave
inc
xor
inc
mov
mov
pushf
ror
xchg
addr16
lock
hlt
out
sbb
adc
ja
and
xchg
sbb
xor
repz
fmul
add
add
push
sub
xlat
add
dec
pop
ret
xchg
jns
dec
mov
mov
adc
in
test
adc
bnd
aaa
addr16
push
inc
or
jbe
out
scas
sub
ret
lock
outs
scas
add
inc
inc
inc
enter
jns
and
das
pop
inc
pop
sub
push
push
adc
xchg
push
cmp
addr16
scas
das
xchg
dec
mov
mov
and
pop
xor
cmp
dec
enter
cmps
dec
mov
and
sbb
sbb
jl
mov
mov
pop
jb
jb
clc
xchg
in
xchg
mov
mov
aaa
aad
lock
sti
push
add
adc
add
cs
add
sub
enter
mov
scas
enter
adc
and
in
and
fs
mov
js
cmp
das
rcr
add
dec
es
mov
iret
ror
fild
add
leave
test
out
mov
add
loopne
enter
mov
leave
lock
or
xor
inc
(bad)
pop
clc
mov
pop
fstp
inc
sub
sbb
leave
mov
mov
jl
jg
inc
sub
mov
mov
xchg
cmp
mov
sbb
jae
inc
pop
add
mov
dec
mov
cmps
loope
add
xchg
mov
fwait
push
shl
enter
push
mov
mov
mov
cdq
div
jg
js
xchg
repnz
jnp
mov
mov
out
aas
addr16
dec
dec
jnp
mov
mov
sub
mov
adc
xor
call
daa
push
mov
xchg
pop
leave
and
and
fs
mov
shl
cld
mov
mov
sub
mov
push
lock
add
adc
addr16
jg
outs
sbb
xor
daa
scas
pop
loopne
(bad)
sbb
and
adc
dec
mov
movs
mov
rcl
adc
je
test
test
gs
inc
ins
mov
mov
pop
lock
cmp
punpcklbw
pop
add
dec
(bad)
cmp
sbb
scas
add
cmp
add
add
adc
pop
push
add
fbld
add
rcl
mov
jno
pushf
jecxz
shl
fadd
push
das
das
mov
adc
inc
rol
inc
push
imul
scas
sub
rol
dec
and
mov
adc
loop
inc
lahf
or
les
test
or
cdq
in
mov
or
pop
jb
jb
loopne
or
jb
sahf
adc
and
cdq
in
pushf
cmp
in
ins
enter
jl
nop
xchg
dec
pop
int3
pushf
(bad)
aam
mov
fwait
sbb
push
enter
ret
inc
ret
enter
ins
call
cwde
pop
cdq
add
nop
out
int3
add
test
les
addr16
aas
push
mov
fs
sbb
or
pop
cwde
ja
les
fistp
jns
inc
add
push
push
es
adc
sahf
out
or
repnz
sub
add
add
or
push
or
cmp
repz
sub
aaa
or
pop
xor
pop
test
xchg
popf
xchg
call
(bad)
push
mov
adc
dec
xchg
daa
xchg
xchg
mov
sar
and
add
pop
ret
dec
cmps
les
(bad)
das
add
cmps
cwde
(bad)
adc
lock
add
adc
mov
jg
cs
inc
push
push
pop
mov
jb
inc
add
push
inc
ret
xor
mov
and
and
add
outs
pop
cmc
jbe
outs
aas
add
in
imul
daa
test
or
out
jp
and
arpl
fcmovb
sub
cmps
xor
inc
dec
and
and
dec
cs
push
jb
and
mov
test
clc
ja
dec
and
cs
mov
sbb
push
dec
inc
xchg
push
xchg
call
adc
call
xor
rol
inc
pop
push
aas
xchg
pop
sbb
pop
lock
and
es
aas
add
les
inc
xor
add
dec
push
ror
inc
sbb
and
or
movs
sub
mov
dec
pop
ret
add
add
loopne
xlat
push
mov
outs
dec
or
(bad)
sub
fwait
add
rcl
mov
inc
fsubp
cs
push
out
ss
hlt
inc
jg
test
clc
sub
dec
mov
pop
cs
ins
sub
pop
push
ins
mov
aas
pop
sub
cwde
jg
out
add
jmp
add
ins
dec
and
iret
repz
add
add
leave
repz
or
or
xchg
fisttp
aaa
or
leave
mov
adc
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
ins
push
and
in
sbb
jb
pop
and
out
xchg
fild
xchg
fmul
sahf
sub
dec
outs
pop
pushf
mov
into
aas
xlat
sbb
fadd
(bad)
movs
jg
sbb
jne
shr
scas
cwde
inc
adc
ja
inc
inc
bound
or
pop
inc
daa
sub
sbb
movs
push
lods
stc
sahf
out
mov
les
xor
iret
repz
cmp
cmp
inc
dec
dec
cmp
repz
pop
pusha
push
test
sahf
mov
mov
sahf
out
mov
repz
call
jns
out
push
or
and
xor
push
out
sahf
out
sbb
push
jo
cmp
jns
nop
cwde
test
fdivrp
sahf
out
fdiv
mov
pop
push
sbb
sahf
out
and
xor
inc
out
jns
out
push
pop
fs
pop
je
leave
repz
cwde
movs
mov
mov
enter
cld
adc
lahf
out
fiadd
sub
dec
jo
add
add
or
dec
pop
add
pop
scas
push
push
outs
cwde
jmp
sbb
inc
add
(bad)
test
jp
jmp
add
movs
add
(bad)
pushf
cmp
and
fisttp
mov
fdivr
jle
test
shl
dec
data16
cmp
stc
call
iret
mov
in
call
ja
jle
adc
push
ficomp
mov
cmps
in
fidiv
rcr
fsubp
stc
jb
jle
test
adc
or
test
adc
std
and
inc
xor
aas
mov
mov
mov
cld
cmp
sub
and
sbb
pusha
sbb
fdiv
cmp
pop
jo
js
imul
push
mov
cmp
cwde
adc
iret
repz
adc
repz
or
adc
int3
sbb
sbb
adc
repz
sbb
push
hlt
imul
and
and
jns
out
and
and
sahf
sbb
adc
add
and
push
add
mov
pop
push
aaa
mov
inc
out
sbb
test
jo
icebp
iret
cmp
push
inc
push
(bad)
movs
cs
repnz
pop
leave
inc
rol
add
add
and
jns
pushf
sub
xchg
es
mov
push
pop
ja
jns
out
mov
repnz
jns
ds
das
dec
ins
add
push
pop
out
sahf
out
xchg
mov
repz
inc
cmp
adc
xor
ins
fnstcw
xlat
daa
add
cld
shl
scas
or
add
xor
fbld
xchg
cmp
rcr
inc
pop
enter
psubw
push
ret
(bad)
enter
hlt
adc
mov
repnz
add
leave
sbb
into
sbb
ror
and
sahf
mov
(bad)
(bad)
(bad)
jmp
test
lds
std
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
push
(bad)
(bad)
mov
adc
mov
dec
js
inc
outs
(bad)
loopne
jmp
(bad)
inc
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
(bad)
jmp
int3
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
xor
(bad)
inc
int3
(bad)
xchg
push
cmps
scas
mov
or
add
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
(bad)
(bad)
(bad)
call
pop
cmps
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
dec
pop
fld
xchg
and
and
add
popa
int
sti
add
xlat
mov
(bad)
mov
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
sbb
lds
mov
ins
scas
add
aas
xor
aad
mov
(bad)
(bad)
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
(bad)
(bad)
(bad)
(bad)
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
(bad)
(bad)
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movs
jmp
jg
(bad)
(bad)
(bad)
jmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
(bad)
(bad)
(bad)
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
jecxz
push
adc
mov
sub
dec
in
ss
(bad)
(bad)
fild
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
in
mov
std
or
pop
fiadd
into
ror
add
cmps
fmul
fisttp
sbb
syscall
cmp
addr16
ins
mov
fadd
movs
jb
sbb
lods
mov
cmps
jae
shl
add
jb
test
xor
lahf
push
int3
inc
dec
fs
inc
ror
aas
imul
aas
push
lock
push
xor
out
and
gs
add
jae
fadd
pop
loope
pop
lods
or
jns
inc
pop
mov
add
aad
inc
outs
add
add
fmul
out
and
dec
scas
add
add
movs
inc
(bad)
xchg
mov
inc
push
sbb
jmp
inc
aas
inc
push
dec
aas
push
pop
jno
inc
aas
mov
and
mov
mov
inc
push
ja
push
xor
xchg
lock
mov
mov
inc
cmp
arpl
sbb
push
sbb
popa
add
mov
outs
jne
jo
jbe
outs
cs
push
or
inc
rol
inc
ja
jecxz
pop
sub
popa
adc
xchg
test
push
aad
add
sub
mov
add
add
nop
sub
pop
add
lock
and
adc
adc
enter
dec
pop
adc
inc
adc
dec
sti
inc
loopne
jge
outs
sub
fimul
sub
jns
jnp
mov
sub
outs
push
sub
pop
gs
(bad)
test
dec
jnp
(bad)
clc
sgdtd
mov
sti
xchg
or
retf
fwait
cmp
dec
push
out
cmp
xor
push
imul
xchg
stos
add
push
dec
push
push
fsubr
addr16
mov
add
adc
(bad)
inc
or
inc
lds
add
jb
inc
sti
mov
into
jbe
pop
xlat
mov
repz
xor
add
inc
jnp
mov
outs
scas
je
sub
sub
inc
add
mov
xor
push
add
cmp
push
iret
cmp
repz
jb
and
pop
sti
pop
dec
add
add
mov
pop
fld
adc
pushf
cld
dec
cmp
pop
arpl
(bad)
(bad)
(bad)
jmp
fldenv
mov
test
addr16
scas
dec
push
imul
xor
dec
sub
push
or
gs
xor
dec
cmp
or
(bad)
(bad)
(bad)
push
dec
pusha
inc
or
gs
push
cmp
scas
js
das
hlt
jae
sub
(bad)
(bad)
sti
jmp
sbb
cli
outs
scas
jbe
push
mov
pusha
pop
push
cwde
push
add
mov
aas
fisttp
adc
test
scas
test
jg
cld
ins
pop
mov
pushf
mov
sub
jmp
adc
jl
ins
dec
add
sbb
ins
daa
shl
pop
rcl
mov
push
push
ds
outs
data16
das
inc
arpl
jge
inc
ds
movs
jns
push
adc
data16
cmps
sbb
out
inc
dec
in
es
jne
js
mov
jbe
pop
loope
leave
pop
out
cmp
or
shl
ins
jecxz
mov
mov
fild
imul
pusha
dec
sub
add
lahf
bound
cmp
inc
adc
ins
stc
outs
aas
jg
and
xchg
dec
dec
dec
inc
popa
inc
cmp
fnstcw
into
aas
push
sub
mov
inc
sub
dec
pop
es
imul
jbe
dec
rcr
lahf
out
outs
fucomi
ins
mov
inc
lahf
and
aas
cmp
arpl
popa
push
push
ror
add
fild
dec
jl
push
mov
dec
int
or
lods
movs
xchg
bound
inc
ins
outs
out
push
jecxz
mov
mov
cdq
(bad)
jecxz
push
xor
mov
xchg
test
mov
pop
call
adc
out
call
mov
fcmovne
stos
jmp
jo
scas
adc
stos
dec
xchg
ss
out
das
dec
dec
mov
mov
je
ds
cmp
lock
js
(bad)
outs
push
mov
cld
push
(bad)
ss
call
push
sub
or
(bad)
(bad)
(bad)
dec
leave
lds
mov
pushf
sbb
sbb
movs
push
mov
(bad)
(bad)
jg
and
test
ret
pop
imul
jge
ret
pop
add
sbb
ret
inc
pushf
ret
inc
or
call
cld
mov
jmp
pop
fs
mov
cmc
add
out
(bad)
dec
adc
adc
sub
test
mov
outs
mov
add
jmp
pop
movs
call
jl
mov
dec
or
add
retf
lea
pop
and
(bad)
cmp
adc
xor
rol
dec
add
loopne
(bad)
call
mov
sar
rol
push
call
mov
imul
neg
mov
cdq
dec
call
mov
(bad)
or
xor
in
cdq
and
(bad)
mov
js
sbb
xchg
mov
jl
fldenv
cmovge
cmp
lock
pushf
xchg
sub
add
ret
movs
mov
jmp
mov
out
mov
mov
out
jl
xchg
xchg
cmp
or
cmp
lods
aas
add
sub
ins
xlat
popa
clc
fldenv
leave
jl
pop
dec
mov
push
inc
ins
retf
mov
adc
call
cwde
jo
outs
sub
mov
sbb
cmp
adc
cmp
cmp
and
pop
mov
ja
dec
pusha
retf
movs
xor
(bad)
call
jns
cmp
cmp
jmp
stos
loopne
dec
jb
and
sub
inc
or
mov
inc
xchg
ret
jg
into
scas
sbb
mov
stos
mov
and
sub
popfw
gs
push
dec
adc
push
sub
xor
clc
(bad)
aaa
mov
mov
or
pushf
out
int
jg
loope
scas
sub
ins
mov
dec
bound
pop
and
cld
mov
shl
in
jae
outs
cld
push
mov
or
shr
mov
pop
arpl
imul
ins
(bad)
call
or
mov
shl
popf
xchg
mov
jecxz
ret
or
mov
loope
mov
out
jecxz
mov
aas
push
inc
test
adc
pop
ror
mov
add
lock
call
dec
rol
mov
outs
rcl
mov
and
xchg
cmp
adc
sar
ror
or
jmp
dec
push
(bad)
ss
out
cmp
push
ss
pop
or
push
jecxz
or
imul
adc
movs
(bad)
aas
pop
std
mov
jecxz
int3
mov
ret
(bad)
out
sbb
sub
mov
dec
push
xor
or
les
(bad)
(bad)
inc
leave
js
pop
ret
shl
jns
add
add
fldenv
dec
push
call
repz
bound
iret
adc
xchg
mov
xor
(bad)
adc
or
or
jmp
mov
inc
cmp
out
cmc
jecxz
mov
aad
pop
outs
mov
sbb
push
mov
stos
loopne
mov
ds
or
jbe
stos
xchg
push
mov
sub
ds
rcl
push
jg
retf
shl
sbb
cdq
ret
dec
or
sub
sar
mov
outs
jno
leave
adc
test
inc
std
sub
clc
aas
cmp
mov
inc
outs
pop
jge
call
sahf
jne
retf
aaa
and
inc
out
aaa
or
rcr
inc
jmp
sti
aaa
push
inc
push
push
jbe
mov
mov
inc
dec
add
pop
rol
imul
fdivrp
push
jnp
pop
xor
sbb
pop
and
push
dec
jmp
cmp
sbb
inc
lea
sub
(bad)
(bad)
(bad)
fstp
outs
mov
or
sbb
jmp
pop
dec
(bad)
jns
dec
mov
pop
mov
jg
inc
fs
xchg
cmp
push
xor
popa
into
cmp
imul
bound
js
push
sbb
mov
xor
xor
add
mov
xor
dec
(bad)
shr
(bad)
dec
in
mov
sbb
fstp
cmp
sub
ret
dec
test
fistp
mov
scas
cmp
movs
popa
stos
sbb
std
aas
loopne
pop
inc
(bad)
out
sub
jecxz
mov
psubsw
scas
clc
(bad)
jmp
mov
lea
or
out
es
dec
inc
cmp
add
mov
add
sub
mov
inc
push
push
mov
mov
push
mov
jmp
out
xor
mov
pop
mov
inc
ins
and
xlat
and
ins
sbb
mov
mov
add
cmp
xchg
mov
mov
xchg
cld
jmp
cmp
nop
(bad)
inc
lock
push
arpl
push
add
je
mov
xchg
cmp
push
call
or
adc
or
xor
sbb
mov
jg
push
xchg
je
(bad)
dec
cdq
jg
leave
sbb
sbb
pop
lahf
loopne
sbb
mov
dec
addr16
mov
cmp
in
xchg
cmps
pushf
ret
(bad)
addr16
outs
pop
or
xor
mov
mov
add
shl
data16
fdivrp
jmp
dec
add
sbb
outs
xor
push
popf
and
jb
adc
sub
or
or
jl
mov
out
loop
(bad)
(bad)
fistp
push
shr
jbe
data16
sbb
icebp
cmp
or
mov
fs
in
inc
paddw
out
pop
lahf
test
(bad)
adc
sti
jmp
sbb
rol
pop
lahf
outs
sbb
cmc
mov
and
daa
jl
cmps
pop
mov
add
call
pop
jl
retf
shr
mov
outs
out
fndisi(8087
mov
fidiv
or
xchg
mov
cmp
(bad)
outs
pop
loopne
push
mov
and
sbb
out
clc
(bad)
imul
mov
mov
mov
cmc
mov
mov
mov
mov
sub
push
cmp
scas
inc
add
dec
cli
out
ja
mov
adc
cdq
das
imul
icebp
cmp
push
cs
mov
jmp
adc
ins
and
or
xchg
add
mov
push
jl
push
mov
call
cmp
std
jae
lahf
fimul
pushf
sbb
xor
jno
pop
test
xchg
jae
bound
pop
mov
mov
movs
adc
lods
call
push
dec
inc
mov
cmp
ss
jle
dec
jo
scas
ret
mov
pop
test
loop
pop
outs
in
daa
imul
cmc
aas
cmp
rcl
xor
sub
out
pop
jge
test
in
sub
push
mov
rol
mov
shl
popf
mov
inc
xchg
mov
mov
fldcw
xor
fisttp
mov
xchg
cmp
pop
cmp
(bad)
push
cld
mov
pop
push
push
xchg
push
aas
adc
dec
ret
shr
and
cmp
cli
in
xchg
mov
neg
push
and
push
es
cmps
cs
mov
jg
(bad)
ins
ret
add
in
jae
dec
mov
dec
mov
(bad)
(bad)
pop
or
aaa
dec
push
mov
hlt
and
sti
jbe
addr16
cdq
cmp
clc
das
movs
adc
icebp
mov
mov
ror
mov
out
add
mov
or
ret
mov
into
rcr
inc
jle
(bad)
push
or
ins
mov
imul
nop
pop
pop
mov
mov
xchg
mov
xor
sbb
and
push
jmp
call
add
sub
imul
sbb
inc
not
loop
fidiv
je
ret
xchg
(bad)
loopne
cmps
adc
outs
push
push
jle
xchg
mov
or
mov
pop
movs
jle
in
ds
out
jle
stos
mov
add
adc
jb
mov
cmp
mov
repz
test
(bad)
(bad)
jmp
add
dec
dec
mov
fidiv
ret
dec
lock
outs
in
cmps
cdq
ds
or
(bad)
call
xchg
add
sub
lds
pop
popa
mov
mov
cmp
mov
movs
mov
pop
shr
test
sub
mov
stos
movs
sub
mov
movs
mov
jno
cmp
jp
jb
cmp
fild
imul
push
repz
cmp
cmp
or
mov
bound
mov
xchg
dec
cwde
cld
popf
(bad)
jb
adc
retf
movs
pushf
xchg
outs
dec
(bad)
mov
adc
fadd
adc
jmp
jmp
dec
sbb
test
mov
inc
dec
xor
aas
xchg
ins
sbb
cmps
mov
call
arpl
xor
or
mov
mov
inc
or
mov
shr
jge
dec
es
fstp
inc
into
push
pop
retf
pop
mov
push
ret
cmp
dec
dec
and
int3
in
std
vlddqu
adc
out
jmp
(bad)
out
jmp
sub
dec
add
lahf
test
sbb
pop
sub
add
mov
pushf
pop
inc
mov
or
in
sbb
inc
or
mov
adc
adc
int3
stc
adc
xchg
in
dec
or
icebp
call
clc
sahf
pop
pop
sub
popa
adc
pusha
push
pop
cmp
sbb
pmulhw
or
sbb
pop
mov
inc
cwde
inc
add
add
outs
lods
mov
push
cli
jmp
mov
das
pop
bound
sbb
inc
retf
call
fiadd
loop
push
mov
push
cmp
(bad)
fcomip
jmp
daa
lahf
out
adc
inc
or
rcr
ret
mov
aaa
jmp
add
arpl
mov
and
push
pop
adc
push
sahf
sbb
cmp
jmp
inc
call
add
ror
repnz
xchg
adc
mov
sub
fisubr
mov
(bad)
pop
push
jmp
es
in
sub
dec
or
aad
(bad)
push
xlat
out
or
pusha
inc
mov
mov
jno
cli
out
shr
pusha
out
pop
xchg
push
ins
int
dec
push
(bad)
lock
(bad)
mov
dec
xor
pop
loope
pop
lock
cdq
push
sub
frstor
mov
ret
mov
pop
retf
push
adc
dec
add
movs
inc
cmp
aas
(bad)
(bad)
jmp
pop
push
jecxz
sar
pop
ja
and
loope
popf
mov
push
mov
loop
(bad)
(bad)
out
pop
jae
mov
not
pop
mov
jg
mov
mov
sar
fimul
es
das
xor
or
mov
or
xchg
sahf
pop
add
xchg
(bad)
test
add
jle
cmc
mov
pusha
pop
lock
cmps
pusha
push
mov
dec
push
or
push
test
adc
cmps
add
push
pop
dec
fld
jg
jmp
nop
sbb
fisub
xor
loopne
jmp
push
mov
mov
gs
call
inc
idiv
in
outs
(bad)
(bad)
call
sbb
das
(bad)
out
test
jp
cmp
iret
test
idiv
add
lds
mov
dec
jbe
in
mov
xor
mov
or
pusha
push
in
mov
(bad)
jmp
imul
sbb
adc
sub
jge
leave
shr
or
and
rcr
pop
pop
cmp
dec
ins
dec
xor
test
lea
mov
jmp
jecxz
ret
cld
(bad)
dec
shl
mov
adc
or
(bad)
les
push
push
mov
lahf
push
dec
pop
retf
inc
shld
push
shl
mov
or
shl
movs
popa
inc
lods
and
aas
lods
call
mov
push
into
movs
rol
out
fimul
xor
clc
jmp
dec
ss
bound
xor
loop
jo
repnz
jp
(bad)
cmps
add
retf
mov
add
cmp
and
(bad)
mov
inc
mul
stos
test
das
bnd
jle
data16
add
hlt
dec
retf
sahf
push
aaa
add
lock
cdq
ins
clc
mov
aas
out
js
shl
mov
and
icebp
inc
and
add
mov
outs
mov
push
push
nop
mov
out
xchg
or
cmp
loop
arpl
mov
arpl
(bad)
jmp
lock
jecxz
mov
mov
xchg
mov
das
dec
(bad)
sub
xor
xchg
mov
push
out
in
cs
ret
arpl
popf
cmp
push
cld
sbb
rcr
loope
pop
dec
dec
xor
sub
das
ss
or
outs
int
xor
(bad)
jmp
in
adc
or
in
out
mov
xchg
mov
lods
aas
jg
dec
scas
inc
push
mov
loope
pop
push
imul
clc
jne
mov
push
mov
inc
push
loopne
pop
add
pop
inc
lods
cmps
rcl
fld
inc
scas
call
sbb
and
movs
adc
pop
push
(bad)
cdq
das
sar
mov
mov
mov
rcr
pop
test
adc
out
fs
inc
fcomp
test
clc
aaa
mov
sub
adc
dec
ret
sbb
repnz
shl
xor
(bad)
in
xor
es
mov
(bad)
enter
loope
outs
sub
push
movs
push
popa
push
sbb
test
sub
xlat
es
xchg
lods
jo
mov
cmp
outs
mov
dec
es
inc
std
cmp
into
mov
push
cmp
jge
inc
mov
dec
push
inc
sbb
jne
(bad)
sub
pop
sbb
and
gs
adc
jg
test
mov
(bad)
push
or
lods
popa
jnp
in
add
mov
jmp
pop
mov
xor
cmp
pop
fdivp
shl
or
(bad)
mov
sub
pop
hlt
outs
(bad)
or
or
mov
gs
push
pop
xor
js
jnp
(bad)
mov
(bad)
or
aaa
push
out
aas
add
adc
dec
dec
scas
mov
or
(bad)
stc
push
ret
fbstp
jo
jmp
xor
jecxz
and
sbb
and
jns
js
loop
dec
or
xchg
es
jg
add
push
loop
inc
(bad)
lods
mov
adc
cmps
pop
push
lahf
hlt
(bad)
jmp
leave
push
mov
adc
movs
inc
imul
xchg
jae
lds
dec
or
sbb
aaa
jb
cmp
mov
sar
xor
push
je
(bad)
call
mov
push
jmp
sbb
adc
mov
or
and
aas
adc
fwait
sub
rcl
sub
add
push
adc
or
movs
mov
jp
push
es
add
pop
add
cs
lock
mov
(bad)
leave
jl
dec
ds
mov
cmp
jge
push
clc
xchg
loopne
adc
and
adc
inc
mov
push
push
sbb
(bad)
call
sar
add
scas
rcl
jl
cmp
push
mov
jp
mov
inc
daa
out
rcr
mov
pop
push
mov
cwde
(bad)
in
mov
aam
das
icebp
int
pop
lock
dec
call
bound
es
cmp
stos
call
push
ds
mov
inc
and
jmp
or
dec
retf
das
outs
xchg
dec
and
add
inc
out
or
icebp
sub
pop
and
test
xor
aas
cmp
mov
test
cmp
jg
xchg
cli
stos
mov
push
lahf
shl
dec
jns
sbb
cmp
push
lds
mov
and
out
iret
ja
or
xor
call
and
pop
retf
push
call
call
cmp
iret
xchg
mov
leave
dec
xchg
mov
xchg
xchg
rcl
dec
in
pushf
cmp
pop
add
scas
cdq
movs
ins
push
sbb
mov
add
ror
pop
mov
call
mov
hlt
lods
sbb
add
mov
not
mov
push
xchg
adc
push
stos
push
inc
cmp
movs
jno
ret
inc
lods
adc
sahf
cmp
or
addr16
out
clc
dec
dec
int3
stc
adc
scas
jne
mov
pop
sbb
sub
rcl
outs
lock
adc
sub
imul
xor
jno
mov
xchg
repnz
adc
jbe
add
repnz
dec
sbb
xchg
mov
scas
dec
ins
and
pop
sub
aas
dec
mov
push
sub
pusha
adc
pop
and
shr
popf
lea
dec
push
add
mov
ficomp
mov
mov
inc
or
dec
outs
mov
jle
shr
mov
pop
div
sar
inc
retf
mov
mov
scas
inc
ret
call
jmp
iret
repnz
push
popf
dec
(bad)
sbb
outs
mov
stos
jmp
mov
popa
push
loopne
stos
psllw
out
fs
mov
loopne
lods
adc
inc
xor
les
sahf
into
cmp
cs
push
out
xchg
sbb
in
(bad)
fbstp
stos
push
or
aaa
bound
std
or
dec
jne
cmp
sub
es
icebp
inc
shl
sub
lock
shl
xchg
popa
add
mov
push
jns
dec
ret
dec
xchg
call
fist
rol
sbb
lds
mov
sbb
sbb
dec
(bad)
aas
mov
out
mov
push
inc
sub
fmul
sub
pusha
(bad)
into
push
cmp
xor
cli
inc
adc
clc
mov
loop
mov
icebp
ja
mov
sahf
shl
jge
push
loope
pop
sbb
(bad)
in
sbb
push
out
and
pop
test
retw
xchg
mov
add
imul
mov
add
cmp
imul
call
lock
sbb
pop
(bad)
pop
mov
je
inc
add
shl
es
ja
jg
test
or
scas
repnz
adc
sahf
retf
(bad)
cmp
dec
jl
mov
in
xor
je
jle
mov
push
clc
jmp
cmp
call
mov
jl
pop
arpl
stos
xchg
loop
add
jp
dec
push
cdq
sub
push
je
push
shl
(bad)
sub
(bad)
pop
pop
push
add
mov
cmp
inc
adc
fs
inc
fsubr
push
pusha
inc
or
add
mov
es
ja
pop
ret
fstp
cmp
mov
ja
outs
and
sub
push
mov
jecxz
cld
out
data16
call
lea
(bad)
mov
mov
daa
pop
jbe
repnz
out
and
xor
add
dec
ds
adc
pushw
jno
jl
icebp
retf
xor
jbe
add
(bad)
xchg
push
js
pop
cmp
adc
dec
ret
mov
out
mov
pop
pop
and
mov
add
retf
cmp
dec
push
mov
std
jno
test
add
rcl
dec
jp
adc
add
test
push
mov
std
aaa
retf
(bad)
push
add
mov
sbb
dec
data16
jmp
out
cmps
or
push
xchg
call
sbb
out
xor
mov
jmp
mov
lods
xchg
pop
icebp
push
out
mov
sbb
mov
push
adc
mov
cmc
cmp
pop
cmp
jp
jmp
lahf
(bad)
mov
xchg
mov
jmp
mov
mov
and
(bad)
push
out
inc
push
clc
call
fmul
adc
push
lods
(bad)
jl
loop
dec
call
cmc
dec
aaa
jmp
adc
cdq
pop
pop
shl
cmp
cmc
sahf
jnp
(bad)
(bad)
stos
mov
fs
mov
scas
mov
xchg
(bad)
iret
fldcw
pop
mov
mov
mov
rcl
inc
scas
pop
mov
pop
or
mov
cmp
mov
jnp
test
add
outs
loop
sbb
ds
push
lods
and
adc
dec
je
jae
dec
sar
xor
xor
inc
mov
inc
rol
punpcklbw
popa
mov
xlat
inc
mov
imul
mov
pop
lock
xchg
data16
inc
sub
ja
push
cmp
outs
jmp
imul
aas
push
or
ins
loopne
arpl
not
push
das
pop
lock
inc
pusha
add
sbb
in
pop
xor
sub
test
or
inc
cmp
adc
xchg
outs
stos
xor
(bad)
aas
adc
cmps
push
add
movs
les
bound
sub
cmp
mov
mov
or
test
ss
pop
xor
retf
push
cmp
ds
xlat
ror
int3
sbb
cmp
push
jb
push
loope
mov
mov
add
shl
mov
push
jbe
arpl
jo
lods
or
inc
mov
sbb
iret
push
bound
push
sub
sub
stos
xchg
out
imul
or
adc
gs
fsub
pop
push
mov
xor
cmp
mov
inc
cmp
xor
call
add
mov
in
pop
pop
loopne
jmp
daa
jp
push
dec
dec
ret
jecxz
(bad)
hlt
sbb
in
dec
jp
in
call
ret
pop
push
ds
jbe
pop
xchg
sbb
jmp
inc
ss
jg
movs
push
or
jecxz
les
shl
add
sbb
aaa
add
or
lods
add
out
push
push
mov
cs
das
add
xor
adc
stos
(bad)
sub
bound
lea
add
loope
mov
scas
(bad)
xchg
xchg
push
sub
mov
mov
dec
ins
ds
mov
push
(bad)
jo
jb
mov
push
dec
mov
(bad)
and
enter
fimul
or
mov
jmp
pop
into
aaa
sbb
vpunpckhdq
pop
cmp
inc
adc
pop
push
push
dec
stos
jno
sbb
loope
outs
push
cmp
xchg
jb
ret
mov
in
addr16
xor
outs
mov
inc
add
pop
xor
ins
mov
jg
jno
jl
fdivr
cmp
out
inc
sbb
push
jecxz
push
add
outs
xlat
mov
rol
jnp
or
pop
pop
aad
imul
push
inc
pop
ret
dec
call
cdq
lea
and
mov
sbb
out
dec
div
inc
gs
cld
dec
retf
jno
adc
mov
mov
push
mov
jl
(bad)
sbb
inc
mov
dec
shr
out
in
push
fimul
stos
xor
sbb
push
ror
lods
push
popa
add
jae
mov
adc
aad
add
cmp
adc
or
adc
(bad)
or
loopne
mov
mov
(bad)
adc
or
sbb
or
mov
retf
cs
cwde
mov
rcr
jg
ret
icebp
cdq
not
push
mov
fistp
sbb
cli
in
or
rcr
ret
mov
push
dec
dec
mov
seto
and
sub
cmp
push
fist
aas
dec
add
adc
loope
nop
xor
dec
mov
callw
push
arpl
or
test
push
pop
cmp
aaa
jmp
dec
rol
xor
pop
push
jb
cld
dec
sub
jb
xor
sbb
arpl
add
mov
mov
js
sub
mov
jmp
add
adc
push
je
mov
ja
xchg
push
pop
bound
loopne
call
outs
mov
sub
cmp
test
ret
pop
daa
sar
scas
xor
mov
repnz
je
push
movs
outs
mov
(bad)
(bad)
sbb
pop
xchg
sub
addr16
(bad)
pop
call
int
ss
adc
ret
push
out
add
mov
(bad)
ret
add
arpl
ret
mov
in
pop
cmp
add
retw
xchg
dec
ret
jb
je
dec
mov
(bad)
in
es
lahf
cmp
out
ss
xchg
outs
dec
repnz
fst
sub
out
jle
scas
popa
dec
(bad)
jle
scas
es
sub
jecxz
mov
xlat
(bad)
mov
xchg
jmp
jno
shr
jge
xchg
jo
cmp
dec
fild
cmp
pop
scas
popa
idiv
das
data16
int3
jmp
push
pop
cmp
jb
rcr
in
addr16
mov
push
fdivrp
sbb
into
nop
xchg
xchg
adc
cmp
xor
sti
stos
sbb
rol
inc
sbb
sar
xchg
jne
mov
in
bound
stos
(bad)
dec
mov
shr
pop
popa
(bad)
loope
mov
ds
pop
out
pop
call
ds
adc
adc
inc
dec
pop
sbb
xchg
iret
and
imul
call
xchg
sbb
ds
ret
adc
fucomp
sub
mov
out
fwait
pop
hlt
jg
fwait
xchg
aas
push
pop
mov
sbb
jecxz
sbb
mov
push
ret
sbb
adc
ins
loopne
add
(bad)
mul
pop
mov
inc
push
jo
addr16
xchg
jmp
jae
mov
sub
xchg
mov
mov
dec
and
ds
xchg
ja
icebp
pop
ret
jp
dec
movs
jno
sbb
adc
mov
mov
(bad)
xchg
cld
add
mov
cmps
mov
xchg
call
dec
fidiv
pop
loope
mov
mov
cmp
mov
shl
ss
nop
mov
jecxz
push
pop
fisubr
(bad)
pop
in
fcmovnu
fdivp
mov
ins
rcr
pop
mov
push
cmp
cli
call
dec
pop
shl
lea
call
arpl
add
sub
xchg
adc
cmps
cli
das
retf
out
pop
call
loop
outs
rol
add
mov
sub
mov
retf
add
aas
mov
cmp
dec
shl
ret
aaa
sbb
or
in
xchg
jmp
nop
sbb
cmp
add
or
jmp
or
jb
outs
mov
or
clc
push
mov
scas
sub
dec
xchg
in
arpl
jp
cmc
ret
jp
jns
mov
out
xchg
mov
or
lock
mov
cmp
mov
fs
lock
in
pop
outs
(bad)
cs
out
loope
inc
test
sbb
imul
cld
inc
retf
xor
popa
mov
dec
loopne
push
loope
mov
ja
and
cmp
mov
adc
sbb
pushf
(bad)
icebp
pop
pop
mov
mov
push
mov
shr
dec
repnz
push
push
push
dec
cmp
hlt
add
pop
pop
or
xor
mov
lahf
fld
neg
int3
inc
in
cli
jmp
adc
cmp
cs
retf
sub
stc
sub
add
rcl
ds
shl
movs
ins
ret
ss
dec
add
inc
pusha
or
mov
cmps
mov
push
mov
and
inc
loope
mov
and
sub
lea
repz
push
push
pop
frstor
mov
ret
inc
ins
push
add
jmp
xchg
mov
jmp
(bad)
(bad)
mov
jecxz
pop
jmp
out
and
cmp
(bad)
call
sub
ret
dec
jmp
and
pop
adc
and
sub
rcr
shr
loopne
pop
dec
add
enter
arpl
add
jmp
mov
imul
inc
xchg
stos
lds
stos
mov
push
clc
or
push
jecxz
mov
xor
pop
mov
ficomp
push
mov
mov
pop
or
in
lods
add
jns
out
ds
inc
loop
dec
or
(bad)
jmp
or
mov
jmp
mov
aaa
push
rol
bound
stos
ds
(bad)
jmp
test
or
dec
mov
jbe
out
pusha
dec
add
push
pusha
ins
leave
lds
jg
push
push
xor
pop
mov
mov
sub
xor
ds
(bad)
mov
sahf
aas
mov
sub
mov
sub
(bad)
mov
cmp
adc
cmp
adc
pop
jg
shl
xor
inc
or
or
imul
sbb
call
pop
dec
arpl
push
sub
sar
push
sbb
xor
add
dec
mov
jl
jle
mov
test
sub
push
sub
push
stos
ss
shl
mov
inc
xchg
cmp
xchg
xlat
test
ja
inc
mov
push
out
sub
mov
fcom
stos
bound
push
and
pushf
xchg
cmp
sub
sbb
cmp
jge
dec
scas
or
mov
inc
mov
sar
or
jg
bound
popa
ds
es
aas
enter
push
(bad)
push
mov
push
push
push
mov
push
jmp
inc
adc
add
movs
mov
xchg
sbb
inc
adc
xchg
inc
jl
sbb
enter
mov
(bad)
ins
ss
mov
out
adc
and
(bad)
in
lahf
ins
xchg
or
movs
xor
std
pop
in
cmp
jmp
or
xchg
ret
les
ss
inc
movs
scas
cmc
ja
mov
fs
(bad)
pusha
inc
stos
pop
rcr
mov
or
imul
outs
lahf
mov
scas
mov
or
push
mov
cdq
in
inc
mov
(bad)
aaa
inc
sar
push
mov
cmp
adc
stos
test
pop
popf
aas
(bad)
call
loop
sbb
pop
ins
ds
push
jns
fstp
in
add
outs
pop
dec
mov
imul
ret
not
mov
push
(bad)
fild
cdq
call
mov
shr
jbe
xor
mov
or
ret
sub
xchg
adc
jnp
cmps
dec
clc
mov
xchg
mov
jns
sahf
or
and
jle
pop
push
xchg
arpl
mov
test
mov
sbb
shr
icebp
cmp
js
and
mov
add
push
and
pop
inc
push
aaa
pop
lahf
das
ins
retf
cli
stos
jmp
inc
(bad)
xchg
out
xor
push
add
sbb
daa
pusha
loop
sbb
(bad)
push
mov
mov
dec
jge
push
shl
xchg
popa
cmp
in
dec
xchg
add
pop
rcr
jp
mov
pushf
sbb
xchg
or
loopne
sub
pop
jmp
(bad)
in
pop
lahf
xor
lahf
or
sbb
push
(bad)
pop
pop
push
loope
mov
cmp
aad
iret
cmp
jle
in
mov
aam
retf
push
loopne
ud1
jmp
aaa
es
dec
push
(bad)
cmps
mov
adc
shr
add
pop
je
and
int3
pop
sub
push
jge
pop
pop
test
jb
push
mov
mov
arpl
(bad)
loopne
push
adc
adc
sbb
xor
and
push
mov
push
xor
and
aad
mov
ret
out
push
cmp
dec
bound
jle
jmp
sahf
rcr
mov
mov
mov
das
inc
add
jg
xor
leave
jl
dec
aas
pop
outs
pop
movs
and
sbb
xchg
mov
in
jg
jl
mov
mov
outs
push
pop
shl
jmp
push
cmp
cs
mov
and
sbb
sbb
add
fisubr
sub
sbb
aaa
ret
inc
nop
ret
or
and
jo
xchg
fsub
inc
push
cmps
jmp
cmp
sbb
push
cmp
scas
aam
call
psubw
jo
in
push
imul
(bad)
mov
add
mov
leavew
mov
pop
pop
dec
and
dec
imul
inc
cwde
or
or
rcl
rol
push
vcvtss2si
adc
pop
sub
adc
pop
cmp
ret
inc
sub
cmps
mov
clc
rol
jnp
dec
push
mov
in
jo
inc
or
mov
cmps
or
pop
dec
outs
jp
pop
mov
aaa
add
mov
add
imul
sbb
jmp
xchg
inc
add
pop
shl
xchg
(bad)
js
and
or
push
jbe
xlat
ret
mov
sbb
mov
dec
jl
or
lahf
iret
(bad)
(bad)
jp
std
and
sub
push
(bad)
cmp
fcmovb
sub
clc
jecxz
gs
fisub
popa
xlat
sbb
cli
sbb
das
mov
sub
fcmove
jle
pop
arpl
sbb
cmp
scas
or
push
sbb
mov
cmps
(bad)
inc
dec
sbb
ins
mov
out
cmp
jp
sub
sbb
pop
ins
adc
call
out
cld
lods
aaa
or
cs
lods
test
mov
pop
cli
dec
jo
lock
jno
sub
adc
in
add
dec
sbb
prefetch
dec
mov
mov
and
add
outs
pop
or
push
mov
clc
sbb
imul
jnp
add
mov
inc
icebp
outs
jle
shl
pop
or
cmp
or
cmp
ret
aas
rcl
(bad)
jmp
adc
push
pusha
mov
add
or
dec
cmp
dec
test
data16
(bad)
sahf
sbb
in
xor
loope
jno
inc
pop
or
or
add
cs
in
push
out
popf
dec
test
pop
test
sahf
inc
outs
pop
ret
js
call
movs
sar
jge
ret
pop
jae
cmp
push
pop
add
mov
(bad)
call
scas
sub
je
outs
dec
int3
loop
add
sub
stos
and
xchg
loop
into
inc
jmp
leave
jle
pop
cmp
and
scas
dec
ret
retf
int
or
xlat
xor
sub
or
mov
test
retf
imul
addr16
add
out
lods
fst
inc
push
mov
mov
out
sbb
dec
jmp
cdq
mov
and
or
out
xor
bsr
int3
or
aas
icebp
jo
addr16
adc
sbb
jmp
test
add
cmp
inc
(bad)
sti
loopne
outs
adc
mov
js
cdq
out
sub
inc
imul
and
and
and
lods
jne
push
push
jl
and
enter
dec
les
mov
mov
push
mov
or
jno
sub
jbe
pop
add
scas
jbe
adc
or
push
push
adc
sub
loop
inc
pop
popa
loopne
cmp
cdq
dec
mov
adc
sub
push
fidiv
mov
pushf
jne
adc
and
push
push
xor
sub
jmp
aas
lahf
sar
shl
xchg
aaa
lds
xor
je
mov
test
loop
test
shl
dec
ins
mov
cs
push
pop
jae
xchg
adc
push
sub
cli
cmp
inc
nop
sbb
and
mov
cld
add
jg
jbe
dec
push
jge
stc
pop
jns
inc
iret
inc
ss
jmp
sbb
adc
lock
loopne
add
xor
(bad)
cmp
dec
popa
sbb
loop
or
test
idiv
sbb
mov
addr16
inc
ret
jmp
mov
(bad)
and
add
daa
bound
(bad)
mov
push
dec
push
sbb
aad
mov
jnp
push
and
arpl
mov
pop
in
pushf
inc
mov
pop
cdq
adc
stos
hlt
push
loopne
pop
xchg
scas
loopne
dec
dec
and
dec
outs
mov
dec
ret
jnp
int
adc
push
(bad)
int
rol
ds
or
call
dec
repz
mov
mov
pop
push
mov
cmp
dec
sub
push
xchg
and
(bad)
mov
sahf
retf
inc
loopne
push
cmp
jae
pop
cmp
jecxz
lahf
or
mov
out
mov
mov
das
hlt
adc
out
sahf
xlat
in
jnp
out
rcr
mov
or
mov
jno
ds
out
sub
das
xchg
jmp
cdq
push
inc
mov
push
cmp
mov
(bad)
aaa
iret
push
adc
(bad)
or
iret
movs
pop
push
pop
push
jno
clc
fcomip
push
dec
push
ror
sbb
in
cwde
call
mov
cld
push
cld
aaa
xlat
cs
nop
sbb
sbb
adc
hlt
mov
mov
repnz
inc
ror
push
bound
rol
(bad)
mov
(bad)
mov
lds
loopne
out
sub
jp
mov
or
cwde
mov
mov
ja
jmp
mov
push
(bad)
mov
push
sbb
pop
mov
mov
xchg
add
xor
pop
mov
xchg
inc
jae
pushf
(bad)
pushf
jg
fnstsw
mov
jb
clc
scas
ret
and
and
xchg
dec
test
test
call
lds
cmps
xlat
push
xchg
loopne
movs
mov
les
mov
aam
repnz
sub
fisttp
adc
xchg
pop
and
jp
es
adc
cmp
out
out
and
cmp
mov
pop
ins
ret
mov
xchg
adc
(bad)
(bad)
push
mov
jno
ret
sbb
cmp
loope
pop
mov
inc
cmp
cmp
(bad)
and
movs
pop
clc
stos
enter
add
jle
(bad)
dec
popa
jge
pop
cmps
enter
inc
adc
push
(bad)
(bad)
adc
xor
ins
sub
add
aas
dec
out
(bad)
ret
clc
addr16
sub
dec
sbb
pop
mov
inc
add
adc
js
add
outs
push
rcr
sti
dec
xor
and
jle
lods
icebp
in
ds
inc
jge
hlt
rcr
pop
jo
das
scas
xor
paddb
enter
push
jle
into
std
cdq
cmp
inc
je
push
loop
(bad)
add
add
bound
xor
cmps
aaa
push
and
neg
es
mov
push
pop
xchg
inc
test
mov
ins
ins
call
mov
stos
dec
ds
cmps
or
test
push
push
rol
fwait
sahf
xor
push
dec
mov
sbb
add
mov
add
add
test
push
push
(bad)
and
add
loope
ror
popf
sbb
aas
mov
fwait
xlat
out
or
adc
icebp
fistp
jmp
retf
xor
adc
fist
jg
pop
or
mov
iret
fisubr
xor
clc
xchg
das
fwait
xlat
inc
push
sbb
(bad)
(bad)
imul
into
mov
movs
pusha
jb
cmc
arpl
outs
push
rol
push
loope
test
cmps
adc
test
movq
jmp
jmp
push
and
sbb
or
(bad)
(bad)
sbb
sbb
inc
xchg
(bad)
mov
in
mov
bound
push
or
ss
icebp
scas
or
rcr
ficomp
push
scas
clc
adc
mov
pop
inc
add
jo
jmp
lods
stos
lea
pop
in
daa
xchg
out
mov
inc
cmc
ins
(bad)
sbb
ss
mov
retf
aad
bound
(bad)
cmp
xor
mov
mov
imul
lods
pop
cwde
dec
xchg
scas
add
inc
cmp
adc
out
jno
cmp
push
or
jmp
inc
outs
stos
dec
lds
pop
jae
out
push
cmp
add
xor
add
add
retf
pop
jo
pushf
mov
stos
bound
lock
repnz
pop
jbe
outs
cmp
ins
or
loopne
pop
dec
mov
mov
and
cdq
pop
into
(bad)
or
addr16
add
adc
icebp
sbb
mov
ror
jp
(bad)
push
push
inc
sbb
push
dec
mov
cli
rcr
call
int3
push
in
imul
adc
push
inc
lods
imul
dec
xchg
push
xchg
push
sbb
mov
rcr
xchg
add
add
cmp
(bad)
into
xchg
fidiv
pop
ins
push
out
jbe
pop
rol
popa
ins
adc
jle
xor
and
push
adc
mov
push
ins
sbb
loop
mov
sbb
push
std
push
pop
dec
call
(bad)
sub
add
mov
lds
push
movs
sbb
push
faddp
jmp
add
pop
cld
cli
iret
test
ins
div
or
cmp
shr
xchg
outs
retf
in
lock
pop
xor
xchg
pop
ret
xor
pop
movs
ins
jmp
fwait
pop
mov
imul
push
sar
(bad)
mov
ss
push
adc
inc
mov
cli
sub
out
jo
cmp
les
in
cs
add
jp
repnz
mov
inc
push
or
ins
sbb
mov
into
mov
mov
iret
fwait
clc
lds
cli
mov
jmp
loope
imul
aaa
mov
cwde
cmp
mov
lahf
call
shr
adc
cmp
jo
mov
pop
or
bound
pop
push
loop
mov
ins
test
sbb
les
inc
movs
or
mov
out
dec
mov
cmc
out
sub
(bad)
outs
push
into
mov
dec
jmp
movs
ds
sub
jle
jbe
ins
inc
mov
xchg
jb
jg
out
mov
push
xchg
adc
std
rol
movs
rcl
and
dec
jb
(bad)
das
mov
hsubpd
retf
add
xor
lahf
test
pop
pop
jbe
popa
add
sbb
ds
std
(bad)
cmp
sbb
(bad)
or
in
je
or
mov
mov
mov
inc
movs
bound
jp
(bad)
(bad)
std
cs
imul
fwait
sbb
xchg
push
imul
xor
pop
and
xor
mov
jl
or
clc
and
xor
cmp
and
pop
sub
inc
dec
mov
dec
(bad)
add
xchg
neg
loope
mov
pop
scas
mov
hlt
inc
dec
add
popf
outs
cmp
and
pop
into
retf
ds
and
cmp
jnp
cli
pushf
push
inc
mov
sar
mov
outs
push
movs
xor
fwait
push
(bad)
jg
shl
out
and
or
pop
cmp
aad
imul
and
xor
or
xor
int
retf
mov
jmp
mov
lods
adc
push
out
xor
cmps
test
call
shl
dec
or
sbb
shl
jge
in
js
ret
or
dec
stos
and
pop
scas
sbb
addr16
add
jmp
mov
add
jmp
ror
mov
xchg
dec
ins
xor
mov
jp
dec
enter
(bad)
xchg
mov
xchg
push
push
inc
cli
lods
ja
stos
push
lock
sbb
in
loope
sahf
das
addr16
mov
dec
leave
mov
movs
pop
sbb
or
ror
loop
mov
dec
jae
dec
mov
jmp
sbb
mov
(bad)
(bad)
in
out
ret
inc
js
pop
mov
outs
enter
leave
addr16
adc
mov
xor
pop
fwait
xor
sub
rcr
mov
xor
sub
loop
inc
push
ds
pop
xchg
bound
xchg
cli
or
(bad)
jl
push
jge
(bad)
addr16
fidiv
clc
xor
stos
arpl
cmps
stos
aam
ja
mov
dec
mov
cmp
mov
pop
movs
out
in
push
cwde
test
dec
inc
xor
sub
das
in
push
mov
out
adc
into
out
or
or
inc
add
cmp
sahf
mov
push
xor
outs
loopne
mov
or
rcl
sahf
jmp
or
adc
cmp
cmp
adc
xor
in
and
fbld
sbb
(bad)
pop
call
xchg
pop
mov
inc
test
dec
mov
icebp
adc
mov
mov
fimul
cmp
xlat
(bad)
scas
out
ret
add
dec
fwait
xchg
scas
call
pop
adc
ret
inc
jl
mov
xchg
add
or
push
es
dec
ret
shl
shr
pop
or
lahf
or
add
js
imul
jae
bound
mov
sub
push
mov
mov
inc
aaa
aas
in
shl
adc
shr
jg
or
jnp
or
test
jecxz
sbb
sahf
mov
out
pop
inc
adc
outs
popa
movs
sbb
scas
xchg
cmp
xchg
neg
call
mov
dec
push
dec
ror
jns
ficom
mov
mov
push
or
(bad)
mov
sahf
cmp
mov
mov
sub
xlat
pushf
add
mov
(bad)
adc
std
ds
movs
dec
push
xor
imul
xor
fidiv
cld
push
cmp
stos
call
ret
add
mov
push
sbb
clc
aas
loope
add
in
movs
shr
fs
mov
scas
faddp
adc
fwait
mov
mov
cmp
stos
loopne
jae
push
jb
daa
dec
mov
inc
sub
sub
test
cdq
cmps
inc
cs
mov
shl
sub
mov
push
nop
add
(bad)
mov
ror
pop
arpl
stos
add
xchg
fidiv
xchg
jmp
bound
mov
adc
pusha
inc
(bad)
dec
test
pop
and
or
sub
xchg
stc
mov
in
push
dec
adc
push
cmp
add
(bad)
sub
aaa
jecxz
js
push
jl
pusha
loop
and
adc
cld
sub
outs
cli
in
dec
mov
mov
mov
dec
or
sbb
jae
xchg
fiadd
inc
mov
test
xor
mov
inc
mov
sahf
xchg
mov
das
out
shr
lds
mov
adc
rol
icebp
mov
cmp
mov
push
or
xchg
clc
add
test
ret
adc
push
test
cld
aas
pop
sub
imul
ret
xchg
stc
mov
push
(bad)
cmp
fisub
shr
loope
mov
loop
jo
out
jnp
and
test
fimul
sub
xchg
jg
std
push
jl
into
cmps
cmps
jle
ins
jnp
sar
push
(bad)
fild
stc
add
and
mov
sub
or
add
sub
pop
or
out
sbb
cli
mov
dec
outs
add
xor
test
mov
cli
int
xchg
jmp
jmp
push
call
ficomp
jb
mov
inc
add
(bad)
cmp
mov
scas
mov
pop
xchg
inc
push
mov
scas
test
cmp
jb
sub
stos
ret
jmp
xor
sbb
sbb
pop
or
arpl
lods
cmc
mov
add
aaa
imul
push
xlat
cs
jo
mov
sub
f2xm1
aaa
std
pop
retf
push
mov
xor
sub
add
ins
mov
loopne
or
pop
add
ja
(bad)
xlat
test
movs
adc
scas
jbe
jns
cmps
outs
shr
popa
push
jl
and
bound
mov
adc
dec
push
mov
outs
mov
push
pop
xchg
adc
mov
or
or
pop
jg
out
mov
scas
push
aad
jg
outs
mov
scas
test
jmp
wbinvd
xlat
jo
js
and
loope
sahf
fst
mov
xchg
or
push
jecxz
push
sbb
inc
sub
call
mov
mov
adc
mov
mov
out
rol
cmp
adc
imul
pushf
cmp
and
mov
out
xchg
mov
inc
inc
shl
push
sbb
push
rcl
inc
test
out
sub
cld
sbb
shl
das
push
loopne
and
xchg
repz
xor
test
jp
cwde
push
xchg
pop
mov
inc
shr
add
and
lock
clc
jbe
fstp
xchg
mov
(bad)
in
jb
addr16
mov
sbb
out
not
repnz
or
retf
inc
(bad)
fiadd
cld
mov
sub
xor
cmp
xor
inc
and
mov
dec
jae
dec
xor
dec
xchg
jmp
or
mov
pop
movs
scas
xchg
dec
and
sahf
and
jle
nop
dec
jl
sub
les
jmp
and
jle
not
mov
or
inc
leave
jl
pop
ret
adc
cmp
xor
sbb
mov
dec
pushf
mov
jmp
into
shr
dec
pop
(bad)
(bad)
hlt
rcl
daa
xor
push
pop
icebp
outs
clc
fcmovbe
stc
mov
enter
pop
or
pop
push
aaa
cmp
pop
clc
mov
mov
es
or
(bad)
aaa
adc
sbb
es
ror
es
xchg
cli
scas
test
sbb
dec
(bad)
out
inc
xchg
xor
cld
sub
aam
push
mov
ja
outs
jp
or
cmp
add
and
jbe
adc
mov
outs
sbb
sub
mov
outs
xor
or
(bad)
out
and
or
push
clc
rol
das
jp
dec
pop
and
pop
mov
psllw
(bad)
jns
xor
add
fdiv
lods
mov
dec
popf
and
and
mov
arpl
xor
popa
add
ins
xchg
mov
dec
pushf
sbb
(bad)
(bad)
pop
lds
ss
push
test
push
in
cmp
mov
imul
sahf
xchg
sbb
shl
dec
dec
loope
mov
pop
das
cmp
mov
sbb
sbb
imul
jmp
mov
mov
jns
sbb
mov
pop
xchg
bound
pop
push
nop
inc
push
in
das
in
xor
dec
loope
mov
in
mov
pop
add
call
mov
fidivr
jbe
fiadd
pop
lock
jmp
cmp
ret
lahf
(bad)
xchg
push
mov
arpl
cmps
inc
xor
mov
sbb
in
rol
xchg
push
into
add
or
xchg
mov
jp
cmp
push
jg
jle
sbb
inc
mov
dec
xor
stos
and
sub
xchg
shl
imul
sar
sub
mov
sar
xor
pop
pop
(bad)
aam
lds
push
push
into
fist
and
push
xchg
adc
shl
cmps
mov
dec
sub
in
daa
pushw
xor
dec
add
sar
cmc
jg
not
and
jbe
sbb
jne
adc
add
mov
outs
push
jmp
shl
retf
ret
mov
mov
mov
imul
out
arpl
push
adc
mov
and
and
test
and
popa
mov
sar
pushf
and
inc
cmp
lock
daa
imul
outs
daa
mov
fdiv
fcomp
xchg
add
(bad)
(bad)
inc
ss
inc
out
cmp
and
xor
inc
add
jle
push
inc
ret
in
push
or
jle
add
adc
je
into
les
mov
in
adc
adc
(bad)
mov
cli
das
lock
push
pop
div
cmp
push
test
adc
dec
jl
adc
in
fwait
inc
xchg
jp
and
xor
shl
out
push
shr
or
cmps
jns
sti
mov
push
jmp
push
push
add
jmp
sub
ret
push
je
sub
push
mov
sbb
xchg
out
xor
pop
mov
lahf
lock
popa
(bad)
ds
mov
shl
jmp
retf
imul
mov
jb
xor
nop
inc
mov
out
sbb
push
adc
sbb
or
dec
xor
inc
repnz
gs
adc
ss
cmp
ficom
or
pop
adc
out
mov
cmps
push
add
xor
sbb
and
aam
cmps
mov
pushf
push
xor
adc
adc
(bad)
movs
icebp
sbb
and
loopne
inc
retf
ins
dec
mov
mov
dec
dec
add
sbb
movs
adc
ja
out
mov
mov
sub
inc
les
fwait
cmp
std
or
jge
pop
jecxz
fimul
aad
and
sbb
mov
pop
pop
std
or
mov
cmp
xchg
pop
sahf
mov
mov
test
sub
or
cmc
shr
cmp
inc
loope
mov
pushf
fisubr
daa
lock
jecxz
jmp
lock
enter
aad
push
mov
dec
mov
mov
xchg
call
add
jmp
mov
jmp
push
outs
mov
stos
or
cmp
pop
jg
ret
rcr
mov
loop
cwde
outs
inc
dec
data16
mov
outs
mov
das
jno
or
jmp
or
dec
sar
gs
cmp
pop
aam
add
in
(bad)
inc
inc
pop
sahf
imul
mov
or
jmp
push
out
or
jb
imul
add
xchg
ret
into
jno
dec
pop
out
mov
cs
call
mov
loop
aaa
or
pop
xchg
mov
ficom
mov
mov
adc
(bad)
pop
out
mov
cld
mov
popa
shl
add
call
add
dec
xchg
out
cmp
test
popa
inc
mov
ret
push
sub
loope
test
ret
add
xchg
inc
aad
jmp
mov
shr
scas
xor
add
mov
jns
cdq
push
mov
test
out
popa
jp
xor
rcr
call
movs
mov
mov
data16
out
lds
stos
mov
jnp
(bad)
fild
outs
or
adc
cmps
lahf
je
aad
pusha
stos
leave
jns
dec
cmp
cs
adc
push
xchg
push
add
pop
mov
call
push
ins
inc
xchg
test
push
dec
jmp
das
lods
inc
cs
retf
arpl
mov
xor
sub
mov
dec
jmp
pop
lea
sbb
js
(bad)
mov
dec
loop
xchg
push
cmp
jbe
mov
dec
std
(bad)
out
fwait
call
aas
cli
cmps
mov
sub
ficomp
call
and
add
sbb
rcl
(bad)
cs
adc
test
(bad)
mov
sahf
mov
test
jmp
retf
pop
cmp
aaa
stc
arpl
mov
inc
and
jp
mov
dec
(bad)
xor
rol
scas
push
ret
xor
test
jg
push
or
or
imul
ficomp
mov
shl
ds
outs
rol
add
das
test
mov
jmp
movaps
push
jno
clc
cmp
imul
aas
mov
(bad)
icebp
loopne
jg
push
es
sbb
jl
or
jp
inc
cs
mov
pop
hlt
sbb
nop
fiadd
or
leave
sub
adc
(bad)
in
sbb
mov
dec
hlt
xor
int
sti
sbb
and
and
xchg
icebp
cmp
or
mov
jmp
ret
cmps
cmps
jp
hlt
jnp
cmps
test
pop
mov
dec
call
mov
data16
push
mov
pop
jg
bound
cmp
or
mov
and
jbe
cmp
aaa
mov
sbb
pop
or
mov
mov
pop
jp
pop
xchg
xor
dec
and
clc
sbb
sbb
sbb
adc
loop
jle
push
mov
and
daa
fwait
div
or
call
js
pop
lahf
push
call
(bad)
xchg
xchg
nop
and
test
cs
addr16
ret
adc
das
adc
add
pop
dec
loopne
mov
sub
mov
xchg
cmp
in
jmp
loop
mov
adc
xchg
mov
mov
enter
cmc
inc
call
mov
xor
mov
xchg
cli
in
mov
cmps
push
es
(bad)
push
call
bound
pop
adc
inc
mov
mov
ficomp
jp
fdiv
cmp
or
mov
and
loop
outs
or
mov
js
jo
(bad)
mov
mov
push
inc
shr
xor
ret
sbb
inc
nop
xor
pop
inc
out
aas
add
fnstsw
jecxz
pop
outs
(bad)
test
(bad)
(bad)
mov
and
xor
mov
inc
add
ret
push
aaa
dec
mov
scas
call
fist
clc
adc
jg
cdq
enter
cs
sar
shl
(bad)
push
xchg
inc
je
cwde
mov
scas
or
(bad)
(bad)
mov
sbb
mov
imul
jg
out
cmp
dec
cmp
nop
cmp
sbb
xchg
enter
and
mov
mov
pop
add
imul
xchg
loopne
xchg
lock
adc
adc
enter
sar
push
adc
push
sbb
in
jle
jo
jmp
push
sub
mov
inc
inc
addr16
and
adc
jmp
adc
xor
jbe
out
lock
out
sub
(bad)
out
cmps
inc
bound
mov
mov
fs
sbb
cmps
cmc
mov
fistp
sar
scas
jmp
cmp
aaa
enter
add
js
loop
outs
bound
out
jp
add
loopne
dec
xor
mov
mov
mov
popa
cld
push
scas
dec
dec
jge
dec
or
dec
aad
std
xchg
loop
add
repz
add
jge
aas
or
sbb
sbb
pop
mov
push
test
inc
dec
out
aaa
or
or
jmp
cli
pop
push
pop
lahf
mov
inc
stc
dec
jnp
arpl
fimul
push
sbb
mov
stos
mov
loop
ss
sub
outs
push
(bad)
ret
sbb
retf
xor
mov
not
bnd
mov
mov
and
sti
xchg
jmp
jg
int
push
push
mov
data16
ret
push
push
adc
inc
wbinvd
or
adc
sub
stos
jno
shl
mov
xchg
mov
sub
mov
pusha
cmp
push
test
cmps
(bad)
sbb
xchg
outs
adc
dec
mov
lods
adc
stos
lock
inc
sub
jp
gs
cli
(bad)
xor
stos
sbb
mov
cwde
fisttp
sbb
(bad)
ret
sub
lock
aas
push
sar
cli
aam
xchg
outs
pop
fistp
add
and
mov
stc
adc
arpl
adc
mov
vmovaps
xlat
mov
mov
jg
cld
mov
(bad)
daa
push
sub
dec
ds
jb
mov
int
mov
in
cmps
ins
xlat
cmps
push
jle
xlat
aas
xchg
push
adc
mov
xchg
mov
lods
xchg
inc
test
ret
inc
mov
out
xor
(bad)
push
mov
push
cmp
fs
gs
mov
out
sub
push
xor
(bad)
or
jno
jg
mov
xchg
mov
jmp
inc
dec
ins
leave
leave
ins
sbb
es
es
mov
movs
dec
js
mov
mov
push
(bad)
or
sub
xchg
add
push
addr16
xchg
pusha
in
popa
jnp
jle
sub
adc
push
fld
adc
(bad)
or
das
inc
das
sar
mov
inc
mov
or
pop
test
mov
rol
mov
loopne
sub
stos
xor
sub
adc
mov
lds
xor
jmp
xchg
jno
outs
outs
sahf
or
jecxz
popa
dec
(bad)
dec
aas
sub
test
cmps
mov
or
nop
mov
fwait
jmp
xor
icebp
pop
jp
pushf
adc
pop
dec
sti
aaa
daa
jne
mov
jecxz
stos
add
jmp
lods
scas
add
mov
bnd
adc
shl
jae
outs
ret
fwait
add
or
add
inc
and
lock
jmp
sub
vpunpcklbw
jg
dec
inc
adc
mov
ins
inc
lahf
sub
daa
or
bound
pushf
test
out
push
add
cmp
sub
shr
adc
mov
sub
dec
(bad)
rol
xor
in
movs
ss
cmp
bound
xchg
inc
xor
cmp
pop
in
jno
xor
(bad)
mov
sbb
sub
push
add
jg
arpl
outs
scas
(bad)
mov
ss
add
mov
mov
test
cmp
shr
cmps
into
leave
stc
sub
add
scas
call
arpl
shr
pop
ret
ret
or
stos
push
pop
stos
add
mov
mov
jo
sub
out
push
jg
cld
jg
ss
stos
sbb
push
dec
(bad)
out
add
out
(bad)
add
adc
je
mov
push
pop
jmp
loope
outs
mov
xor
jb
push
dec
mov
inc
or
push
movs
adc
xchg
mov
mov
mov
in
sbb
and
cli
jmp
arpl
enter
xchg
fisub
test
mov
xchg
test
adc
cmp
adc
push
sbb
scas
leave
xchg
aas
std
mov
mov
icebp
xchg
or
xchg
aas
dec
hlt
push
cli
in
stos
pop
call
out
adc
and
inc
xchg
xchg
ret
inc
pusha
int
call
hlt
(bad)
cmp
jbe
push
inc
push
fwait
or
pop
lahf
mov
loope
inc
(bad)
fbld
xchg
aas
pop
(bad)
adc
jmp
fisttp
mov
inc
and
popa
inc
fs
iret
and
hlt
imul
ror
sahf
in
(bad)
mov
fcomp
jl
sub
xchg
push
(bad)
adc
mov
dec
fsub
test
sub
sub
fidivr
sub
std
inc
jl
lock
jbe
push
adc
repz
call
lds
loop
pop
jle
cdq
sub
out
sbb
ss
sti
pop
fs
push
sub
leave
dec
push
(bad)
mov
cmp
push
mov
mov
loopne
push
arpl
scas
cmp
xor
mov
movsx
mov
mov
dec
xor
mov
adc
inc
in
ss
mov
scas
xor
jp
loop
in
ja
cmp
(bad)
push
pop
jbe
dec
cmp
dec
inc
add
jbe
push
sbb
or
push
mov
ja
add
xchg
sbb
xor
sub
or
das
aaa
mov
cli
ss
mov
push
sbb
cmp
adc
mov
xchg
sub
push
mov
outs
jae
sbb
aas
sbb
dec
jmp
push
rcl
or
pop
sbb
imul
lahf
or
add
es
adc
and
aaa
push
add
add
add
iret
in
jns
and
dec
pop
cmp
fild
sub
movs
ins
jmp
jbe
and
popa
shr
xchg
fist
icebp
dec
inc
mov
aaa
fwait
inc
xchg
inc
xchg
sbb
pop
loope
std
sti
sub
dec
jmp
dec
pop
mov
jno
cs
xor
pop
sub
test
mov
or
aas
push
ret
mov
(bad)
pop
outs
or
cmc
jg
paddsw
inc
test
and
aas
xor
and
mov
inc
mov
push
cmps
inc
pusha
sub
(bad)
sbb
imul
pop
adc
cmp
mov
lods
ds
lods
sahf
fnstsw
js
xchg
pop
jl
sbb
mov
jmp
jle
aas
in
xor
out
cli
sbb
stos
and
aad
jg
jo
jb
mov
jae
xor
loop
jne
cli
pusha
cmp
xchg
jno
je
jbe
inc
push
fidivr
outs
jle
movs
ror
push
mov
repnz
push
inc
ret
push
mov
std
pop
popf
push
mov
nop
mov
sbb
les
movs
or
out
mov
loopne
cli
jg
shr
pop
cmps
cmp
clc
dec
push
scas
shl
push
inc
mov
mov
push
popf
mov
imul
pop
add
xchg
mov
fcomp
jl
mov
mov
mov
test
lea
or
or
jo
dec
mov
imul
adc
loope
sahf
pusha
dec
clc
inc
mov
jmp
xor
adc
mov
mov
ds
stos
push
aas
jmp
shr
test
stc
(bad)
sbb
test
aam
jne
inc
adc
or
jnp
xchg
(bad)
mov
enter
add
adc
test
jle
es
jmp
das
mov
adc
xchg
ins
test
test
push
imul
jmp
test
cmps
and
jmp
dec
loop
push
(bad)
dec
nop
mov
adc
xchg
xor
add
popa
add
xchg
inc
push
dec
dec
std
stos
mov
into
xor
xor
xor
cmp
sbb
cli
mov
xchg
xchg
jno
and
in
sbb
inc
jb
arpl
jns
xchg
adc
or
adc
sbb
cmp
aaa
inc
daa
ja
dec
mov
adc
cs
leave
cmc
push
mov
fcmovbe
mov
mov
xlat
test
mov
mov
movs
jne
add
dec
mov
or
jle
(bad)
adc
test
and
ds
mov
push
(bad)
and
sbb
pop
xor
(bad)
in
pxor
or
ret
out
fsubp
pop
aad
sub
or
dec
jmp
dec
lds
popa
jecxz
loop
pop
pop
or
jbe
xchg
inc
jmp
mov
(bad)
pop
xchg
pushf
mov
out
xchg
retf
add
lea
sbb
fs
xor
dec
loopne
pop
ins
sub
call
jecxz
pop
mov
ja
jb
das
mov
cmovnp
(bad)
xor
jns
in
mov
add
outs
aaa
ficomp
fwait
cwde
aaa
or
jp
mov
mov
outs
push
ret
push
call
pop
mov
out
inc
cmp
inc
(bad)
dec
push
loop
cmp
push
dec
sub
das
sub
push
push
cmp
jnp
cmc
mov
inc
mov
fwait
imul
aaa
adc
test
shr
mov
retf
sbb
xor
loop
mov
cmps
add
push
int
lea
pop
stos
inc
jecxz
mov
jno
dec
scas
fs
and
push
push
mov
dec
inc
add
(bad)
repz
fs
mov
mov
or
dec
mov
aaa
out
sub
push
fsubr
pushf
fs
aas
in
add
(bad)
das
ss
mov
in
jo
inc
ret
imul
and
xchg
inc
jg
cmp
pop
mov
jmp
dec
dec
mov
mov
jecxz
jae
fdivr
jae
ja
int
push
cmp
cmovge
call
jl
(bad)
test
xchg
adc
push
mov
imul
addr16
test
clc
repz
push
jl
mov
frstor
push
stos
test
(bad)
adc
or
movs
pop
ret
fcmovne
and
lahf
add
shr
xor
sub
pop
dec
xor
out
sahf
test
into
not
inc
call
rcl
cmp
hlt
jnp
push
pop
sar
and
xlat
jg
cmp
bound
sub
(bad)
cmp
test
adc
xchg
jno
rol
popa
fistp
inc
jbe
add
and
push
cmp
or
aas
xchg
lea
mov
mov
inc
push
push
outs
mov
mov
fsub
ret
or
inc
ret
add
push
lea
mov
add
xchg
clc
push
imul
push
pop
fiadd
inc
test
cmp
xor
rcl
mov
ror
pop
mov
dec
sahf
mov
pop
into
retf
mov
lea
stos
mov
test
or
xor
shr
sbb
xchg
add
test
cld
xchg
sub
xor
dec
pavgw
(bad)
into
mov
mov
dec
or
imul
jbe
xor
addr16
hlt
sbb
test
push
jmp
and
arpl
sbb
fwait
sub
sbb
pop
mov
or
mov
out
and
add
inc
in
dec
addr16
jo
(bad)
mov
icebp
sbb
icebp
cmp
and
and
(bad)
mov
or
cli
xor
cmp
sbb
jp
add
adc
dec
je
and
les
(bad)
push
xchg
loope
or
imul
pop
push
mov
leave
sbb
push
xchg
into
jp
pop
mov
enter
pop
outs
shl
mov
mov
sub
stos
outs
xor
mov
jg
push
addr16
rcr
cmp
mov
sub
pusha
cmc
push
mov
or
and
out
inc
(bad)
loop
sub
and
ror
xchg
adc
dec
scas
out
mov
jmp
cs
jmp
popa
push
jae
pop
sub
and
js
mov
inc
jbe
jmp
test
ret
lock
mov
fwait
xor
lods
dec
xchg
fs
sub
ror
or
mov
sbb
adc
out
pop
outs
fiadd
pop
adc
push
mov
inc
iret
pop
repnz
es
mov
lock
cmps
imul
outs
pop
daa
xor
mov
cmp
test
out
pop
pop
or
hlt
daa
and
dec
ret
jns
cmp
push
mov
sbb
ja
iret
rcl
add
pop
imul
out
test
inc
ja
push
fsubp
pop
sbb
or
into
inc
cmps
dec
pop
(bad)
push
cmp
mov
adc
call
push
push
push
fsubr
inc
sbb
rcr
or
mov
test
inc
xor
es
mov
or
out
jle
daa
outs
or
mov
fmul
pop
xchg
arpl
popa
cmp
lods
ret
inc
fs
hlt
call
aas
push
scas
stos
test
push
xor
push
push
adc
aad
rcl
xchg
pop
mov
cld
sub
or
xchg
mov
es
mov
dec
addr16
addr16
cmp
ret
sbb
cwde
cld
lea
cli
sahf
push
fimul
mov
adc
xchg
adc
push
sbb
pop
mov
test
cmp
add
clc
popa
jne
sbb
jg
fiadd
stos
pslld
cmp
out
das
mov
jg
push
push
psrld
pop
mov
adc
pop
ja
xchg
mov
mov
mov
adc
push
rol
add
ret
mov
je
add
mov
jmp
and
mov
inc
psubusw
pop
ss
stos
imul
fs
repnz
inc
rol
push
mov
mov
rcl
imul
stos
cmp
push
in
pop
sub
dec
mov
mov
jle
mov
mov
mov
add
cmp
test
push
in
mov
mov
push
push
out
add
add
pusha
jl
in
xlat
sbb
and
jp
mov
and
ror
adc
inc
(bad)
or
ins
loopne
push
and
repz
out
pusha
push
mov
das
jle
cld
or
aas
loope
add
es
mov
inc
pop
in
xchg
or
mov
push
jo
add
bound
(bad)
jle
inc
xchg
pop
ins
call
and
add
add
(bad)
jno
mov
outs
dec
inc
es
adc
arpl
xor
aam
jb
mov
and
push
push
pop
mov
loop
or
mov
in
cs
scas
jle
icebp
cmp
mov
call
inc
push
stos
add
and
mov
loop
cmps
mov
jge
sahf
stc
push
xor
fiadd
push
or
cmp
cmp
or
dec
test
mov
into
add
xor
sub
adc
cmp
out
cld
das
out
cmc
loope
and
cmp
jno
sbb
aaa
rcl
and
es
jmp
mov
loop
jg
lods
dec
jmp
push
and
jb
out
mov
test
rol
jb
mov
push
pop
inc
adc
add
call
loop
mov
pop
in
adc
sub
dec
loop
inc
mov
mov
cmp
lea
mov
xchg
test
adc
jg
mov
scas
push
mov
lods
ret
xchg
popf
add
call
mov
jl
mov
(bad)
enter
fisub
sahf
popa
mov
and
jb
stc
aam
xchg
add
(bad)
push
pop
add
mul
push
and
dec
(bad)
jecxz
pop
std
pop
add
push
les
popa
sahf
inc
call
aad
call
add
xor
mov
dec
js
mov
add
test
xor
pushf
scas
adc
dec
lahf
hlt
shr
xor
xchg
jns
push
add
push
out
add
shl
jge
mov
dec
and
iret
adc
cmps
movs
push
mov
jmp
dec
cmps
mov
mov
xchg
out
cmp
push
mov
lahf
push
data16
sub
xor
sbb
or
mov
fwait
dec
loop
jo
mov
pop
mov
add
sub
vcvtdq2pd
dec
daa
add
(bad)
fisttp
icebp
inc
jmp
mov
pop
hlt
fsub
in
dec
push
add
ja
inc
movs
xchg
sbb
sbb
inc
cwde
mov
fs
outs
jmp
retf
push
rol
out
cmps
mov
mov
stos
scas
mov
xchg
sbb
pop
aam
mov
cmp
in
add
cs
call
push
imul
repnz
jg
mov
aad
sbb
aas
jp
out
das
lahf
out
popf
jnp
dec
outs
push
jmp
fwait
push
sbb
mov
sbb
ds
test
dec
cli
pop
sub
add
shl
sub
or
sub
repz
ret
mov
stos
ins
push
mov
push
xchg
call
jmp
jmp
xor
outs
test
(bad)
jae
push
adc
ret
add
cdq
mov
ret
and
or
push
cmps
(bad)
(bad)
inc
in
in
loop
mov
imul
cmp
inc
test
dec
outs
push
test
outs
mov
outs
clc
mov
mov
jmp
ror
lods
ins
fisttp
in
adc
sbb
pop
mov
push
retw
jbe
in
lods
push
addr16
(bad)
mov
cs
mov
sbb
jmp
cmc
cmp
push
movs
(bad)
cld
in
pusha
adc
imul
div
xlat
push
outs
add
daa
pop
mov
adc
xor
(bad)
lods
xchg
shr
add
lods
stos
add
shl
add
call
mov
or
pop
inc
lea
mov
dec
stos
mov
mov
or
aad
jecxz
out
add
(bad)
inc
cdq
rcl
or
idiv
das
(bad)
dec
ins
mov
mov
aaa
jae
inc
ja
popf
cmp
fwait
inc
jne
cmp
sbb
imul
jl
jle
xchg
dec
jge
sbb
jl
or
add
xchg
aas
bound
fiadd
or
sbb
push
(bad)
scas
or
or
es
xor
pusha
mov
mov
and
xor
ds
mov
cli
dec
sub
mov
xor
les
test
cmp
cmps
rcr
fisub
shl
idiv
test
test
sahf
and
mov
jo
add
add
mov
sar
retf
movs
and
imul
mov
push
dec
mov
ss
or
and
pop
sar
dec
jmp
aad
ins
add
jecxz
mov
inc
mov
(bad)
ins
sbb
sub
mov
push
pop
inc
bound
ds
outs
add
cwde
loop
loope
lods
rol
or
push
outs
push
adc
not
mov
jmp
sub
add
mov
icebp
push
jb
push
push
sbb
fs
add
sbb
jmp
rcl
(bad)
std
ror
mov
adc
push
call
and
xor
xchg
push
mov
das
add
outs
cmp
jg
dec
mov
mov
lods
cmp
pusha
push
aam
retf
ins
jbe
and
ficomp
push
or
movs
push
aad
sbb
clc
dec
inc
pop
call
cmps
imul
mov
add
xchg
push
jae
dec
aaa
jbe
sub
pop
loopne
mov
shl
imul
and
pop
test
retf
cmp
stos
bound
adc
movs
mov
add
mov
mov
xchg
add
aad
jle
shl
mov
(bad)
scas
sar
and
add
jecxz
dec
dec
jmp
aas
repnz
mov
leave
test
jmp
mov
mov
retf
(bad)
(bad)
fbld
mov
sub
add
dec
call
enter
stc
xor
or
lds
xchg
inc
cmp
cmp
pushf
outs
xor
(bad)
jg
mov
push
pop
dec
adc
call
(bad)
in
cli
out
daa
add
pushf
add
jmp
mov
cs
stos
stos
mov
push
imul
pop
push
je
cmps
hlt
out
les
jle
ret
(bad)
clc
mov
push
call
xor
iret
test
mov
daa
jo
xchg
mov
enter
xchg
jg
retf
cmp
pop
mov
sar
lock
push
js
aaa
pop
push
cmp
mov
or
lock
mov
inc
pushf
sbb
push
mov
mov
add
mov
loope
cld
inc
pop
les
pop
jbe
fsub
add
or
(bad)
push
movs
cmp
and
loopne
add
jae
(bad)
mov
ret
or
mov
mov
mov
add
mov
sub
ret
imul
das
ret
cvtps2pi
ds
(bad)
mov
push
add
xor
outs
xor
inc
lods
push
or
push
shl
in
sbb
mov
push
mov
sbb
pop
cmp
jecxz
or
push
or
jns
sbb
jmp
clc
mov
lods
fidivr
lea
jg
fnsave
dec
xchg
lods
cdq
movs
inc
stc
ins
mov
call
jnp
les
inc
cmp
and
scas
push
mov
sub
xor
jmp
(bad)
dec
imul
adc
jmp
sbb
ins
sbb
sbb
push
neg
fbld
(bad)
xchg
lahf
add
dec
pop
lahf
stos
inc
test
lock
push
or
cmp
add
add
ror
sbb
test
push
jbe
cdq
das
mov
pop
rol
mov
jp
aam
jb
push
les
stos
jle
and
lds
mov
fs
inc
cmp
and
bnd
pop
test
push
jle
cld
mov
in
push
sub
pop
jmp
push
mov
mov
sub
add
mov
mov
call
dec
into
repnz
push
es
rcr
fdivr
mov
add
addr16
pusha
add
mov
dec
inc
fiadd
mov
es
hlt
mov
outs
push
lods
and
add
xchg
clc
push
aaa
cmp
in
fild
and
dec
mov
pop
adc
adc
js
xor
jns
cwde
ins
pop
jecxz
or
push
mov
cli
add
(bad)
mov
bound
and
dec
das
pop
movs
outs
arpl
out
inc
test
push
loope
bndldx
fiadd
or
inc
outs
(bad)
mov
cmp
pop
xor
cli
aaa
cmp
adc
(bad)
jmp
push
cmp
jp
imul
jl
xor
mov
pusha
aas
xor
stos
dec
xor
pmullw
dec
loop
(bad)
ds
lods
cmc
mov
stos
pop
outs
push
add
mov
fisubr
cs
inc
aam
mov
scas
pop
fimul
in
sub
jmp
retf
ins
(bad)
pop
xchg
mov
in
pop
add
or
inc
ins
mov
lock
shr
jo
cmp
dec
xchg
int
dec
xchg
dec
loope
sar
xchg
or
jg
adc
push
ret
push
dec
pop
add
lea
ret
outs
in
dec
icebp
nop
shl
xor
std
lea
loopne
cwde
ret
in
or
outs
bound
iret
or
mov
popa
loop
and
shl
push
es
(bad)
(bad)
(bad)
mov
fsub
sbb
cmp
add
lods
aas
pusha
call
ficomp
push
outs
addr16
xor
ds
imul
dec
xchg
inc
mov
dec
inc
sbb
or
popf
aas
mov
or
(bad)
fmul
outs
dec
ret
push
mov
leave
fadd
mov
scas
int
dec
or
jnp
sub
addr16
jo
out
dec
dec
or
(bad)
fsubp
(bad)
fnstcw
arpl
sub
sti
cmp
outs
adc
sub
pop
call
nop
pop
dec
push
fwait
cld
lds
fs
xor
add
test
push
inc
outs
lock
mov
mov
sbb
adc
push
retf
mov
xchg
cmp
ja
(bad)
push
clc
jg
pop
add
mov
mov
jmp
pop
xchg
imul
test
inc
sti
or
mov
scas
imul
sbb
or
or
mov
mov
mov
mov
addr16
dec
push
lods
ds
cdq
lock
mov
dec
mov
ins
dec
or
in
fcomip
jge
cmp
arpl
xchg
test
movs
setno
in
xchg
inc
fsub
jge
pop
inc
mov
mov
mov
mov
sahf
xor
add
add
adc
test
scas
js
mul
das
mov
mov
cmps
or
push
data16
inc
in
pop
dec
popa
inc
mov
push
mov
addr16
scas
inc
out
pusha
sub
aas
add
cmp
sbb
adc
jmp
gs
inc
out
sub
adc
lods
fwait
dec
loope
push
sbb
mov
ja
inc
outs
jo
xlat
addr16
dec
mov
test
loopne
mov
int
push
xchg
gs
jo
lock
(bad)
sbb
ja
retf
scas
nop
rol
mov
(bad)
push
xchg
pusha
add
ret
mov
add
inc
mov
in
cmp
rol
ins
push
pop
hlt
outs
dec
retf
or
xchg
dec
inc
lods
nop
push
fs
stos
mov
scas
add
cmp
mov
pusha
bound
jp
add
jno
shl
jns
rcl
add
mov
movs
hlt
inc
por
mov
inc
daa
and
test
jbe
or
cmps
arpl
ret
xchg
nop
call
pop
dec
or
mov
cmps
push
push
and
rcl
jns
cmp
arpl
jge
push
pop
call
imul
in
mov
jle
(bad)
aas
adc
push
dec
sar
jae
ja
inc
jmp
pop
mov
mov
test
sbb
jp
xor
push
js
rcr
sbb
popa
daa
outs
fs
mov
jne
jae
sar
pop
sbb
push
mov
dec
fs
mov
cmps
mov
cld
xchg
hlt
mov
nop
mov
xor
clc
pop
dec
mov
outs
adc
jb
cmovge
or
pop
mov
xchg
out
xor
pusha
sahf
aas
xor
sbb
and
pop
cwde
addr16
movs
test
pop
or
movs
cmp
cvtdq2ps
pop
cld
mov
dec
dec
call
mov
cld
addr16
jle
pushf
mov
jle
ss
cdq
dec
push
jle
mov
xor
js
sbb
pop
xor
jmp
popa
mov
or
mov
int3
mov
repnz
jmp
dec
ficomp
sbb
shl
and
or
cmc
pop
mov
sar
inc
or
cli
cli
mov
cmp
pop
xlat
sub
mov
push
push
adc
adc
push
scas
inc
push
popf
xchg
sub
xchg
dec
xchg
add
inc
push
xor
aas
and
jnp
mov
pop
ds
retf
mov
test
loope
iret
pushf
sahf
cmp
or
les
es
add
mov
std
mov
scas
movs
sub
pop
push
push
aas
cmp
pop
arpl
add
test
popa
mov
mov
dec
dec
gs
das
shl
aas
(bad)
adc
ds
push
ins
retf
mov
adc
call
ja
pop
pusha
retf
adc
inc
xchg
xchg
push
pop
inc
scas
sbb
push
mov
push
mov
sbb
jno
cmp
adc
mov
jbe
and
movs
mov
xor
push
rcr
(bad)
xchg
inc
adc
mov
sbb
enter
pop
mov
inc
or
shl
sbb
push
xor
jge
pop
or
inc
push
sub
scas
mov
test
jb
es
or
adc
mov
inc
sar
aaa
aad
ins
lock
add
(bad)
fidivr
imul
adc
cli
repz
loopne
add
push
jmp
sbb
push
push
cmps
xchg
cwde
js
sub
dec
mov
push
xchg
inc
stos
jbe
mov
pop
mov
sahf
push
adc
test
dec
mov
pop
outs
mov
push
xchg
rol
cmp
test
test
das
outs
add
in
jno
xchg
scas
(bad)
call
bound
or
rcr
and
adc
retf
and
test
call
sub
popf
inc
jmp
bound
pop
ret
pop
fiadd
nop
ror
cld
fidiv
xlat
adc
cmp
aas
or
mov
loopne
mov
and
add
cdq
pop
test
pop
leave
pop
shr
mov
ss
xor
add
inc
mov
jb
imul
outs
bound
push
(bad)
cmp
push
pop
cs
adc
into
add
rcl
cmps
mov
xor
cs
pop
inc
mov
adc
test
jmp
dec
sbb
inc
fiadd
mov
xor
xor
loope
mov
and
mov
das
data16
gs
outs
xor
(bad)
jg
ins
cmps
mov
mov
sbb
ins
inc
js
adc
mov
jmp
push
sub
mov
and
imul
ds
test
neg
fidiv
adc
mov
psubq
cmp
(bad)
scas
push
push
cld
pop
push
sub
push
mov
or
xlat
stos
(bad)
and
lock
jp
sbb
lahf
iret
imul
pusha
or
sahf
push
loope
(bad)
adc
sbb
add
movs
jb
popa
icebp
push
cmp
push
shl
push
xchg
cmp
or
pusha
popf
sbb
ss
dec
clc
retf
dec
sub
aas
cmps
sub
add
mov
inc
mov
cmps
add
retf
cmp
mov
into
jp
mov
dec
add
jmp
xor
sahf
mov
sbb
pop
ret
sub
ret
push
pusha
icebp
aas
call
ret
fisub
and
xor
ins
stc
dec
mov
push
or
(bad)
pusha
mov
sahf
mov
lods
(bad)
and
adc
adc
arpl
push
mov
and
mov
or
add
add
pop
outs
mov
inc
arpl
jg
out
retf
aam
repz
sbb
movs
jle
mov
or
xor
adc
mov
xor
leave
imul
movs
add
enter
fwait
mov
jg
rcl
xor
push
dec
test
adc
pop
or
dec
xchg
pop
test
pop
mov
je
lods
ins
push
inc
mov
xor
sbb
sbb
(bad)
dec
xor
popf
ret
mov
scas
imul
repz
cli
inc
cmp
adc
(bad)
mov
sbb
mov
lock
xor
loopne
dec
sbb
or
sbb
adc
out
daa
xchg
cmps
sbb
cs
cli
pop
cmp
xor
add
gs
es
in
mov
pop
or
xchg
mov
out
push
mov
pop
push
sbb
retf
lods
xor
out
inc
add
and
dec
lods
ds
sbb
out
xor
mov
sbb
les
rcl
stos
cmps
mov
push
dec
inc
lods
push
cmp
loop
mov
push
in
retf
cwde
adc
jmp
and
ret
call
add
xor
and
jl
mov
dec
inc
div
aaa
sub
cld
popa
popf
or
aas
adc
push
mov
inc
dec
ror
add
sub
pop
and
(bad)
mov
dec
dec
pop
dec
loope
lods
shr
and
mov
imul
stos
imul
jb
mov
sbb
push
jmp
push
sub
add
js
or
inc
xchg
mov
adc
or
out
or
repz
add
(bad)
mov
jge
inc
loop
call
sub
hlt
mov
mov
pop
imul
push
daa
rcr
mov
mov
shl
push
xor
data16
outs
cmps
push
add
in
mov
and
fs
fimul
push
das
cli
add
inc
mov
scas
es
ror
sti
fisttp
shl
xor
push
cmp
out
adc
inc
clc
lahf
pop
loopne
dec
ja
retf
xor
data16
inc
cmp
add
ror
xor
mov
test
out
sbb
repz
jmp
push
imul
dec
add
stos
push
inc
and
jbe
dec
push
mov
popf
out
mov
leave
in
push
mov
arpl
jg
xor
test
pop
into
sahf
aaa
in
sbb
or
ficomp
adc
jmp
retf
es
adc
mov
enter
fcom
pushf
push
jp
lods
jg
sti
sbb
jmp
or
cmps
mov
movs
call
jecxz
xor
stos
pop
outs
xor
ins
push
push
js
scas
ret
out
mov
adc
pop
lock
inc
push
jno
jp
fwait
adc
mov
xlat
xchg
outs
cmp
mov
xor
and
mov
loop
dec
scas
ret
xchg
daa
ins
in
and
push
add
loopne
lods
stos
adc
aas
xchg
mov
pop
ror
stos
and
call
mov
xor
pop
(bad)
add
js
pop
sbb
or
enter
movs
dec
bound
sub
jmp
arpl
mov
repnz
test
xchg
rcr
mov
mov
cmp
not
stos
and
sbb
in
dec
adc
add
lock
and
and
add
aaa
(bad)
shl
sahf
add
and
inc
std
rol
retf
mov
(bad)
or
jbe
sub
jno
mov
push
call
std
sbb
cmp
ret
clc
fistp
xor
jae
dec
lds
pop
dec
push
loop
adc
pop
xchg
push
(bad)
jge
daa
and
aas
add
fild
bound
mov
push
push
outs
push
pop
jecxz
imul
dec
sub
mov
adc
sbb
(bad)
and
icebp
shl
cmp
inc
inc
outs
jbe
cmp
jmp
dec
sahf
and
dec
mov
pop
sbb
retf
inc
(bad)
adc
dec
clc
adc
dec
mov
inc
pushf
sbb
jl
or
outs
mov
nop
add
stc
mov
jge
adc
pop
test
(bad)
js
push
add
ficomp
cmp
push
mov
jns
mov
inc
enter
pop
(bad)
rcl
mov
loope
dec
shr
sub
sbb
outs
mov
idiv
pop
es
pop
loope
push
mov
sub
cmp
add
push
xor
mov
adc
(bad)
lods
dec
cs
pop
(bad)
in
or
mov
push
stos
shl
and
add
push
adc
mov
jl
stos
ret
push
pop
jge
mov
cmp
iret
xor
add
and
push
loope
bound
movs
movs
out
mov
call
cmp
add
int3
stos
arpl
jae
hlt
pop
fild
xchg
out
push
ja
jg
lock
sar
and
push
fild
mov
pop
add
sub
jp
pop
adc
mov
in
gs
dec
dec
xchg
add
mov
add
fisub
xchg
pop
cmp
mov
jl
adc
mov
inc
pop
dec
loope
out
sbb
adc
rcl
mov
out
and
jle
fisubr
lock
test
ins
sbb
jg
add
xchg
xor
add
inc
jbe
dec
mov
and
inc
jnp
pop
add
cmp
or
adc
or
repz
bound
mov
test
xchg
sub
clc
adc
mov
xor
push
jo
jp
aad
cmp
jecxz
push
ror
lods
mov
(bad)
cmp
mov
pop
mov
nop
(bad)
and
inc
mov
and
mov
sbb
push
sub
push
push
adc
inc
outs
out
mov
add
fcmovu
mov
pop
push
adc
mov
inc
mov
hlt
sub
fisttp
popf
(bad)
ja
pop
dec
hlt
imul
mov
sub
fsubr
jae
cmp
into
clc
cwde
pop
pop
sahf
mov
jl
cld
popf
pop
std
jecxz
dec
rcl
stos
adc
ds
sar
add
and
cmp
ja
sbb
xchg
dec
dec
data16
(bad)
sbb
sahf
out
xor
repnz
mov
pop
xchg
xchg
mov
inc
scas
sar
push
add
adc
pop
movs
xchg
jmp
sar
xchg
push
inc
jne
mov
pop
das
xchg
adc
fs
ficomp
in
mov
cmps
ins
loope
mov
mov
push
xchg
or
dec
rcl
inc
retf
in
fcomp
repnz
ins
or
retf
frstor
and
cs
pop
xchg
loope
push
mov
mov
xchg
mov
mov
call
and
sar
fcomp
push
push
inc
inc
add
pop
xchg
push
push
loopne
arpl
jge
cmc
push
sbb
call
and
ret
out
pop
fwait
and
mov
sub
cmp
xchg
or
sbb
jmp
bound
push
xchg
cwde
ret
inc
shl
jo
hlt
out
cs
iret
in
pop
sbb
push
mov
ja
push
xchg
js
pop
mov
adc
pop
dec
popf
cmp
jno
leave
adc
call
mov
clc
add
imul
and
push
pop
mov
outs
cmp
and
stos
(bad)
int3
nop
jle
daa
xchg
js
mov
sahf
aaa
add
mov
cs
test
or
jp
lock
loop
push
push
stos
jns
mov
popa
data16
cmps
ror
cmps
mov
mov
pop
das
xor
cmc
jcxz
psubw
fnstenv
(bad)
and
mov
mov
in
adc
add
aas
out
cmp
mov
xchg
ins
ror
push
push
and
jp
jbe
push
fistp
or
aaa
mov
mov
mov
dec
pop
inc
cmp
mov
mov
lahf
push
call
fs
mov
push
sbb
dec
pop
and
lahf
pop
js
mov
pop
sbb
add
in
and
xchg
ror
lock
fadd
pop
cld
mov
std
push
imul
add
cmp
pop
adc
loope
add
pop
dec
cmp
add
inc
push
mov
add
stos
jmp
clc
sub
ret
(bad)
cld
inc
jp
in
xchg
add
fisubr
mov
loopne
out
sti
daa
mov
mov
fimul
stc
xchg
in
jle
push
jb
pusha
inc
int
fiadd
inc
adc
push
push
xchg
jecxz
mov
push
or
sbb
mov
aaa
jecxz
dec
outs
mov
mov
inc
mov
mov
div
xor
and
repnz
rcr
mov
cmp
repz
pop
mov
push
cdq
sahf
loopne
sub
mov
sub
mov
mov
inc
movs
mov
jecxz
daa
jno
mov
ret
cs
inc
in
push
jmp
icebp
mov
mov
mov
jmp
cmp
or
or
lock
jg
ds
call
std
shl
add
nop
dec
sbb
(bad)
cli
loope
or
cmp
ror
test
cmps
jmp
mov
fidiv
jo
icebp
es
push
push
aas
xchg
jle
es
(bad)
ja
ret
int
ss
adc
xor
out
pop
test
outs
inc
dec
movs
cmp
sbb
or
in
pop
cmps
push
pop
outs
dec
mov
in
stos
shr
xor
xchg
inc
or
es
mov
loop
pop
(bad)
loopne
push
xor
cmp
cld
or
repnz
cwde
inc
mov
mov
xchg
and
fistp
and
in
cmp
pop
cwde
mov
sub
mov
dec
xor
or
xchg
stc
cmps
mov
out
mov
call
inc
test
sub
lock
xchg
cmp
ret
sbb
mov
xor
mov
cmps
or
shl
cwde
(bad)
pop
jbe
sar
mov
dec
add
dec
outs
add
cdq
and
ret
sbb
adc
cmp
aas
js
ins
dec
dec
jns
repz
sub
clc
add
in
(bad)
rcl
shl
push
jmp
imul
push
mov
jmp
icebp
rcr
inc
xlat
mov
sahf
jae
xchg
sub
lock
push
movs
mov
fwait
add
(bad)
pop
push
jmp
leave
repz
cmps
xchg
inc
and
sub
loope
enter
xor
sub
jp
pushf
jmp
repz
loopne
aas
mov
xchg
mov
mov
(bad)
repnz
(bad)
cld
mov
nop
mov
sub
nop
cmps
pop
push
in
inc
mov
sub
ja
mov
repnz
and
mov
jecxz
pushf
xchg
(bad)
out
xor
mov
sub
repnz
arpl
repnz
(bad)
cmp
jl
jbe
cmp
cld
xor
aas
mov
adc
push
push
mov
dec
daa
add
out
fist
push
mov
ror
pop
ret
adc
and
jno
addr16
inc
ret
and
ficomp
ret
mov
imul
dec
call
add
stos
push
fimul
pop
cli
pop
test
dec
inc
mov
es
push
in
add
sar
xchg
mov
or
lock
and
xor
adc
cmp
call
sbb
add
or
fdivr
jbe
add
js
pop
mov
jp
push
ret
push
es
mov
inc
mov
lock
push
inc
ret
or
mov
test
movs
cli
inc
push
xchg
pop
cmc
sbb
mov
dec
mov
imul
or
push
pop
fnstsw
fstp
popa
movs
arpl
xchg
out
pop
cli
push
(bad)
cs
(bad)
and
fwait
nop
gs
ja
mov
cmp
or
shr
or
sbb
paddw
lock
mov
pop
dec
lahf
add
daa
push
xchg
retf
push
daa
ins
mov
cs
outs
lahf
sub
mov
or
loopne
sar
push
mov
aas
mov
and
inc
stos
dec
mov
pop
inc
test
call
outs
xor
mov
xchg
xchg
xchg
das
or
xchg
mov
push
mov
inc
fldcw
(bad)
sub
mov
repz
inc
push
(bad)
in
sbb
push
jae
push
add
inc
pop
xchg
and
addr16
sbb
xor
push
jb
sahf
imul
mov
inc
es
sbb
push
pop
push
and
push
aaa
cmps
push
push
and
mov
mov
jp
push
adc
shl
cld
jp
les
pop
(bad)
cmp
pop
and
call
out
jmp
cmp
mov
sbb
aas
fmul
mov
in
cmp
std
in
push
xor
xor
and
popa
xlat
dec
add
sub
lahf
pusha
pop
mov
mov
mul
sub
sub
das
sbb
jecxz
push
mov
pop
mov
fadd
inc
mov
mov
add
ret
push
(bad)
mov
cmp
(bad)
outs
mov
push
pop
inc
mov
clc
cmp
es
retf
in
push
jp
je
cmps
test
and
push
cwde
mov
or
mov
movs
(bad)
into
add
cli
(bad)
push
jno
sbb
(bad)
iret
fcom
push
push
inc
and
mov
in
adc
out
add
sub
add
cmp
repz
ficomp
push
and
jns
dec
or
cmp
outs
mov
adc
and
inc
xor
sbb
es
jmp
cld
mov
(bad)
mov
sub
or
loope
test
cmp
addr16
push
clc
dec
mov
stos
pop
adc
sbb
or
fcmovbe
test
push
loop
add
cmp
sbb
pop
jmp
add
cmc
inc
mov
imul
retf
mov
pop
test
sbb
fimul
xchg
stos
add
adc
and
push
stc
es
ss
ins
outs
dec
jle
ret
sub
xor
out
and
sub
lds
mov
sahf
les
outs
das
arpl
fs
adc
pop
mov
ret
mov
mov
lds
or
inc
mov
icebp
aad
push
xchg
xchg
jno
or
es
outs
push
and
xchg
pop
out
pop
in
sub
arpl
ds
mov
or
outs
(bad)
mov
hlt
(bad)
clc
jecxz
iret
or
shl
mov
xor
imul
out
ins
dec
adc
or
ror
xchg
pop
xor
or
stos
and
and
sub
inc
xchg
aaa
inc
pop
(bad)
popa
mov
mov
and
in
or
cmps
out
cmps
fcmove
clc
vpmaxsw
pop
stos
mov
sbb
jmp
pop
xor
out
mov
call
scas
in
push
in
in
sub
and
add
and
cmps
(bad)
sti
jl
inc
dec
stos
cmc
dec
cmp
mov
jmp
adc
push
std
jmp
fs
jg
xor
dec
ror
movs
ins
adc
jg
inc
cs
or
cmc
adc
dec
test
or
jb
imul
leave
sbb
movs
ins
cli
and
and
inc
mov
ins
pop
loope
and
outs
mov
jne
jle
add
lea
dec
pop
mov
cmp
lahf
xchg
repnz
(bad)
mov
push
pop
mov
or
(bad)
ins
ins
inc
(bad)
(bad)
(bad)
movs
jno
mov
mov
movs
jp
test
xchg
aas
sahf
and
dec
shl
sbb
fst
addr16
sbb
pop
shr
mov
sahf
imul
xor
or
xor
push
push
push
in
movs
lds
repz
clc
ss
jmp
inc
xor
cmp
shl
adc
pop
popw
mov
lods
fwait
ror
out
div
mov
rcr
cmp
popa
imul
mov
loopne
add
imul
daa
push
es
loop
(bad)
jmp
lds
pop
inc
mov
push
xor
mov
les
jmp
cmp
(bad)
into
imul
dec
xchg
xchg
jmp
adc
cld
pop
push
jne
mov
shr
mov
push
aam
xchg
mov
xor
loopne
cmps
or
adc
je
sbb
shl
xor
add
jge
sbb
aad
loop
imul
into
rcl
jge
xor
clc
hlt
rol
loopne
push
pop
push
aaa
mov
das
push
and
(bad)
dec
mov
jecxz
bound
cs
clc
icebp
scas
push
stos
aaa
push
mov
in
cmp
dec
shl
mov
jmp
push
fsub
out
fadd
cs
out
mov
jg
repz
cmp
shl
repnz
mov
mov
mov
dec
mov
dec
daa
es
adc
xor
out
lahf
ds
mov
sub
mov
dec
jne
or
leave
dec
adc
out
rcl
outs
lds
cli
adc
sub
(bad)
sti
ins
jbe
mov
fs
mov
cdq
outs
mov
mov
dec
repnz
mov
push
lock
jmp
push
sub
and
ret
sub
shl
cmps
push
les
mov
mov
retf
inc
add
das
inc
ins
push
pop
loopne
rol
ins
sub
pop
lock
or
outs
jp
pop
pop
push
add
popa
rol
or
sub
fistp
int
mov
imul
shr
sbb
adc
mov
add
imul
and
push
inc
dec
cmp
and
mov
sbb
or
and
push
aad
push
cs
push
inc
fimul
dec
pop
xor
or
(bad)
push
sbb
outs
jmp
je
test
jle
add
jae
xor
or
mov
and
sbb
jnp
jmp
adc
jo
and
ret
ffree
pop
sub
mov
jle
xchg
mov
aas
mov
mov
test
push
shr
push
cmps
pand
shl
shl
jg
jns
jmp
mov
mov
imul
std
jg
loope
(bad)
sub
xor
aas
rcr
jg
xchg
or
sub
imul
mov
fmul
add
ins
xor
(bad)
xchg
dec
and
jbe
retf
outs
addr16
retf
jbe
das
jmp
test
(bad)
lds
mov
pusha
and
sbb
fisubr
pop
mov
(bad)
in
jmp
bound
and
add
ret
mov
test
fstp
ja
mov
(bad)
ins
pop
rol
es
cs
popf
add
mov
out
push
call
push
sar
jecxz
inc
sahf
(bad)
mov
jno
dec
xor
test
in
(bad)
call
sub
cmp
jle
imul
add
imul
js
inc
cmp
push
imul
mov
dec
pop
cs
cmp
jbe
or
js
or
cld
and
and
pop
sti
loop
push
(bad)
add
leave
cli
scas
xor
mov
movs
mov
out
inc
ret
or
outs
cli
fnstsw
mov
jnp
jns
inc
fwait
ds
shl
push
inc
jnp
push
shl
inc
cmps
push
and
(bad)
(bad)
enter
mov
sub
ja
rcl
sub
xchg
sbb
out
test
pop
test
dec
and
mov
mov
int3
adc
ins
push
inc
add
and
sar
data16
mov
or
cmp
xchg
rol
(bad)
iret
repnz
cli
adc
and
ss
mov
ret
mov
arpl
xchg
iret
not
xor
pop
sbb
adc
std
fwait
out
cs
mov
test
nop
or
xor
add
popa
add
pop
adc
xor
fimul
stos
dec
mov
inc
ins
pop
(bad)
jmp
jae
dec
ins
shl
rcr
push
shr
pop
mov
push
scas
xor
aaa
loope
clc
ss
sbb
pop
inc
sar
mov
mov
mov
lods
adc
pop
retf
sub
jbe
pop
sbb
or
sbb
jge
pop
cmps
rcl
rol
add
ds
lea
jle
(bad)
(bad)
out
cmps
loopne
ds
add
mov
lds
push
mov
or
aam
mov
or
jae
jecxz
mov
(bad)
std
rol
or
retf
(bad)
das
add
pop
ds
push
inc
das
sbb
retf
sbb
and
lods
mov
jg
cmp
(bad)
repnz
pop
dec
lock
(bad)
ins
loope
push
jbe
fdivrp
daa
add
or
bound
lock
cmp
cmp
call
jbe
into
adc
mov
mov
sub
inc
repnz
out
jmp
inc
cmp
push
or
test
mov
pusha
ds
or
scas
mov
xchg
cmp
push
and
iret
inc
inc
sahf
test
pop
loopne
dec
cmp
sub
xchg
pusha
jae
jp
lahf
lds
test
cli
push
jg
icebp
outs
jecxz
sbb
dec
leave
rcl
xchg
std
(bad)
aas
and
inc
push
push
and
cmp
mov
adc
mov
(bad)
jbe
sbb
mov
dec
mov
daa
loop
bound
stos
push
lds
test
push
inc
adc
mov
push
push
(bad)
push
aad
and
and
test
push
out
mov
fld
jbe
fist
xchg
jg
dec
mov
adc
xchg
cmp
mov
into
movs
push
clc
(bad)
cmp
pop
xor
jbe
data16
outs
data16
sub
inc
dec
ds
test
jnp
push
cld
pop
mov
mov
xchg
popa
cs
icebp
add
sar
bound
out
(bad)
cmp
shl
hlt
mov
cmp
mov
mov
sbb
inc
fcomip
(bad)
sar
stos
adc
outs
jae
int
inc
mov
add
ror
add
pop
mov
bound
mov
repnz
ror
mov
mov
inc
test
or
leave
arpl
and
xchg
and
push
js
fiadd
ss
fwait
pop
inc
mov
js
jp
shr
loop
loop
lahf
cmps
dec
dec
mov
adc
and
mov
sbb
stc
das
and
cld
out
sbb
call
fisub
test
jns
push
imul
imul
jmp
sbb
mov
clc
cmps
jmp
xchg
mov
fsubrp
test
ss
inc
xor
sbb
jmp
mov
push
mov
movs
cmps
mov
xchg
sub
xor
(bad)
adc
hlt
(bad)
xchg
lods
mov
cmp
mov
sar
pop
xor
xor
inc
arpl
dec
ds
mov
pop
and
inc
push
mov
enter
shr
pushf
dec
ret
sbb
cld
or
movs
dec
dec
ror
(bad)
loopne
les
dec
adc
dec
add
loope
push
outs
mov
mov
ret
push
mov
jo
cmps
sub
stos
fbld
(bad)
and
add
xchg
pop
mov
adc
cs
and
daa
out
xchg
(bad)
aam
outs
repnz
imul
push
mov
adc
loop
adc
ret
mov
imul
jp
stos
jnp
mov
aaa
push
mul
xchg
iret
sbb
push
pop
hlt
fwait
test
movs
out
adc
jae
jo
push
sub
mov
sbb
adc
mov
daa
cli
bound
ins
adc
xchg
cmp
call
adc
lods
pop
inc
sbb
inc
lods
and
inc
in
popa
cmp
test
mov
sbb
adc
icebp
mov
clc
cmp
ins
ror
inc
cld
rcr
test
out
repnz
or
push
sbb
jg
or
dec
mov
mov
pop
hlt
ja
jno
xor
aaa
xor
sahf
sub
in
ins
call
pop
icebp
cmp
arpl
xchg
lock
add
push
push
or
loop
push
lahf
mov
push
add
pop
(bad)
lds
dec
add
cs
xchg
div
call
scas
push
inc
mov
fwait
adc
jbe
xchg
push
pop
loopne
ror
lods
(bad)
popa
jbe
mov
adc
jmp
test
jb
jecxz
jnp
mov
jmp
xchg
out
movs
adc
cmp
(bad)
mov
pop
jb
adc
cmp
cdq
aas
pop
(bad)
out
cmp
mov
adc
arpl
mov
mov
xchg
add
iret
retf
mov
aam
adc
mov
mov
movs
push
adc
add
inc
scas
jmp
jno
mov
clc
mov
outs
fs
(bad)
mov
pop
push
xor
mov
(bad)
and
(bad)
pusha
rol
sti
adc
jo
aaa
mov
sub
(bad)
mov
inc
shr
stos
xor
xchg
popa
dec
cdq
and
jnp
mov
or
neg
mov
xchg
into
cmp
cmp
inc
mov
sub
cwde
add
cdq
inc
push
push
cmp
pop
dec
pop
aas
cmp
mov
add
rol
mov
xor
mov
add
jbe
in
pop
jb
or
bound
dec
scas
jp
fstp
pop
fwait
push
mov
popa
inc
(bad)
into
call
mov
xchg
daa
xchg
dec
hlt
ret
out
es
pop
xchg
cmp
aas
aas
enter
imul
in
xor
cmp
sbb
add
cmp
imul
in
retf
dec
stos
cld
inc
mov
(bad)
rcl
int
ja
pop
sub
(bad)
out
out
push
jmp
lock
addr16
cli
scas
shl
dec
jo
ret
mov
mov
jb
add
cli
sub
outs
(bad)
fild
and
inc
scas
and
fwait
inc
jg
dec
jmp
mov
cmps
pop
xchg
mov
mov
xchg
aaa
dec
mov
ja
sub
retf
cmps
push
lods
dec
ss
dec
xor
sbb
xchg
(bad)
mul
push
add
mov
dec
mov
mov
mov
xchg
dec
mov
rol
arpl
xchg
imul
push
int
mov
popf
push
and
or
dec
add
sbb
mov
push
(bad)
aaa
mov
loope
pop
mov
paddsw
rcl
les
in
lods
mov
ja
hlt
popa
ret
mov
adc
xor
dec
out
inc
rcl
lods
into
mov
add
hlt
push
pop
mov
sbb
stc
cld
in
add
arpl
xchg
fisttp
(bad)
jle
and
push
sub
pop
cmp
xchg
es
jg
dec
xchg
adc
cmps
mov
pushf
mov
sub
dec
(bad)
cmps
and
add
mov
bound
popw
push
imul
bound
fucomip
push
mov
fist
mov
mov
push
out
rcl
mov
ror
sub
sub
jmp
inc
imul
dec
inc
sub
and
gs
and
xor
out
adc
and
dec
dec
rol
xor
pop
sahf
aad
or
add
fcmovbe
loopne
adc
jmp
ds
lds
add
inc
xchg
idiv
cmp
shr
cmp
fisttp
or
lahf
data16
pop
ror
mov
adc
xchg
adc
ins
es
jnp
mov
pop
sub
inc
pop
mov
movs
repnz
mov
imul
fnstcw
hlt
push
mov
dec
mov
repnz
repnz
adc
jmp
xchg
lock
in
add
aad
mov
sub
pop
stc
lds
and
inc
fbld
popa
shl
xchg
cld
inc
push
(bad)
push
push
pop
das
adc
cmps
sahf
in
pop
mov
mov
das
shr
mov
mov
ins
jmp
outs
out
inc
push
out
mov
push
add
push
jne
inc
sbb
jo
cmp
pop
sub
push
xchg
scas
(bad)
add
in
fwait
cmps
scas
(bad)
ror
or
mov
in
pop
cmp
push
loopne
mov
(bad)
pop
fs
ss
sbb
inc
mov
push
cmps
xchg
adc
aaa
dec
mov
xchg
cmp
popa
dec
mov
mov
xchg
push
add
sub
fwait
and
cs
push
push
bound
cmp
movs
jb
cs
xor
or
jno
cmp
imul
nop
outs
cmps
cmp
mov
inc
ss
in
jbe
mov
jge
push
or
push
je
je
and
ret
mov
clc
test
addr16
dec
pop
sbb
adc
cmps
pop
(bad)
adc
mov
jno
ds
out
dec
out
je
pop
dec
gs
dec
(bad)
sbb
xor
mov
movs
push
(bad)
xor
jle
test
push
adc
adc
add
repnz
xchg
test
outs
retf
add
mov
adc
cmp
shl
push
scas
jmp
cmp
dec
rcl
stc
push
jnp
ucomiss
outs
mov
pop
dec
repnz
sbb
or
out
push
addr16
pop
push
mov
mov
cmps
adc
add
ficom
mov
mov
pop
inc
mov
push
pop
inc
sub
movs
rcl
dec
in
dec
jmp
mov
in
cmp
cmps
add
mov
xlat
dec
inc
ror
(bad)
sbb
lds
mov
push
cmp
mov
dec
dec
pop
push
in
jge
into
mov
sub
pop
es
mov
mov
xor
mov
mov
shl
pop
add
div
pusha
ins
pop
xor
(bad)
(bad)
jb
das
ins
add
sub
pusha
das
ja
mov
(bad)
jge
pop
jle
cmp
dec
add
stc
pop
or
mov
aam
in
in
dec
outs
mov
jne
inc
sub
pop
and
mov
mov
sub
mov
adc
fistp
sub
sub
and
adc
xchg
ret
mov
or
sub
call
call
or
or
pop
inc
add
pop
inc
cmps
imul
sbb
lods
fwait
cmp
xchg
add
jp
outs
push
jecxz
and
ror
imul
mov
fisubr
mov
add
stc
mov
mov
add
lahf
push
fdivr
cmp
out
retf
dec
cmp
iret
push
call
cmp
ret
mov
hlt
mov
dec
mul
pop
nop
iret
ss
cmp
sbb
xor
xor
mov
xchg
push
sbb
jmp
mov
dec
popa
call
fs
loopne
ins
mov
cmps
cs
cmp
mov
add
or
imul
ins
sub
inc
(bad)
shr
call
outs
jbe
dec
mov
cs
out
mov
outs
adc
mov
cmp
ror
ss
sbb
sub
sbb
fnstcw
sahf
push
(bad)
push
xlat
popf
jne
(bad)
or
add
aas
outs
mov
jnp
imul
or
ja
push
repnz
sbb
cmps
jo
pop
mov
aad
cmp
inc
push
cmp
add
push
sub
std
in
fisub
lods
pop
cmp
mov
push
das
test
add
adc
sbb
fcomip
jmp
cmps
sbb
enter
add
lock
push
mov
cmp
imul
enter
ror
dec
pop
das
xor
out
inc
mov
pop
mov
adc
loop
adc
and
test
(bad)
les
addr16
sbb
daa
call
cmp
fidiv
add
xchg
mov
push
mov
mov
add
xchg
mov
loopne
lods
cs
jns
sub
adc
push
lea
mov
aad
sub
and
push
sbb
jl
gs
ss
pop
jecxz
mov
pop
push
sub
cmp
rcl
add
pop
gs
mov
jne
sub
adc
sub
imul
add
add
dec
fisub
repnz
xor
mov
adc
and
fiadd
enter
xchg
ror
cmp
mov
mov
add
dec
(bad)
push
push
cmp
mov
xor
shr
into
ss
jmp
cmp
ja
mov
out
sbb
(bad)
pop
pop
repz
mov
in
or
call
adc
dec
cmps
push
xor
sub
fimul
mov
jno
in
add
mov
cdq
push
(bad)
mov
add
xchg
ds
sub
xchg
inc
ret
push
adc
in
add
mov
(bad)
stc
inc
xchg
std
pop
outs
test
sahf
mov
push
jb
in
inc
add
movs
sbb
xchg
rcr
push
and
ja
sbb
jp
and
daa
pusha
inc
mov
sub
call
repnz
mov
jne
daa
inc
fs
jns
xchg
sbb
dec
jbe
push
xchg
cmp
fiadd
sbb
aaa
dec
arpl
imul
mov
xor
outs
inc
lock
sbb
cmp
repz
int
and
xchg
push
jle
pop
gs
pop
xchg
and
xchg
and
dec
aas
xchg
and
(bad)
retf
sub
mov
std
test
int3
or
mov
push
jle
sbb
loop
adc
test
cmp
add
aad
sbb
fidiv
pop
xchg
sti
pop
lock
jb
inc
mov
pop
fbstp
adc
cli
mov
fisubr
hlt
call
aad
out
xchg
or
pop
hlt
dec
ret
mov
or
push
sahf
scas
push
test
adc
push
jmp
dec
adc
cmp
mov
push
mov
popa
lods
scas
push
jno
jp
outs
xor
cli
jo
gs
sub
mov
pop
push
push
repz
aaa
jmp
movs
jnp
sbb
les
in
add
xchg
ror
daa
mov
pop
sub
xor
dec
add
inc
loopne
dec
xchg
add
pop
xor
test
in
rol
fild
or
lock
xor
dec
add
jle
shr
pop
jmp
add
les
(bad)
mov
jecxz
test
retf
sub
xchg
adc
jno
pusha
fsubr
cs
fldcw
fisubr
bound
ds
cmp
je
push
inc
adc
push
push
mov
add
loopne
sahf
and
mov
add
test
mov
imul
sbb
or
and
daa
pop
adc
sti
xor
daa
xchg
pusha
xchg
int
adc
push
(bad)
push
mov
loop
pop
xor
jmp
or
mov
or
pop
in
js
add
aas
fcmove
cmp
pop
add
in
ror
fisubr
mov
movs
test
add
fstp
mov
daa
mov
cmp
sub
int
retf
cmp
sub
add
dec
dec
sbb
push
scas
xchg
and
loop
mov
jnp
aas
add
daa
jmp
imul
mov
sar
pop
popa
(bad)
inc
cmp
jmp
retf
ds
push
loopne
push
jmp
and
inc
xlat
sub
aaa
pop
mov
pusha
xor
sahf
push
or
jge
push
sbb
mov
mov
leave
mov
addr16
jbe
enter
ficom
cld
mov
mov
ror
repz
cmp
repnz
and
ror
push
stos
dec
jne
fcmove
mov
popa
das
lods
imul
pop
(bad)
sub
icebp
cmps
imul
enter
(bad)
popaw
mov
and
sub
push
adc
push
test
out
add
add
lahf
xchg
jbe
int
dec
jg
xor
add
test
push
adc
adc
dec
les
sub
push
jle
mov
stos
cmc
dec
dec
(bad)
mov
imul
mov
jl
call
movs
xchg
shl
test
ja
addr16
daa
dec
fs
inc
out
mov
or
cmp
pop
pop
mov
(bad)
out
scas
and
rcl
pop
add
retf
gs
xchg
xchg
retf
dec
(bad)
stc
and
push
jns
lock
pusha
test
lods
cmp
ja
out
loopne
dec
in
dec
and
stos
push
and
cmp
sbb
add
adc
cmps
xor
dec
jmp
rcr
retf
out
sbb
add
ret
retf
pop
pop
into
mov
arpl
cmc
das
mov
jbe
or
add
mov
dec
mov
push
pop
cmc
jg
data16
or
pop
outs
lods
mov
xchg
mov
inc
push
jmp
mov
dec
out
je
(bad)
sbb
outs
jmp
pop
cmps
aas
jp
es
popa
xor
repnz
rcl
rol
popa
and
jmp
pop
es
mov
data16
or
push
or
sbb
call
cdq
dec
cmp
cwde
jg
repnz
loope
movs
icebp
and
jo
and
lahf
inc
lods
ret
adc
cmp
call
mov
inc
rcl
cmp
call
pop
jmp
dec
and
(bad)
jmp
sub
cmp
dec
cmp
out
sbb
inc
mov
call
cs
or
out
or
or
fild
mov
clc
in
adc
xor
cmp
aas
mov
mov
mov
shl
mov
shr
or
dec
ins
jp
adc
std
mov
jecxz
shr
es
add
ret
out
adc
or
inc
(bad)
cmp
cmp
push
ret
jmp
push
das
adc
les
push
ficom
fwait
push
dec
pop
shl
ret
sub
sbb
pop
mul
hlt
add
retf
lahf
(bad)
call
pop
jp
js
adc
test
mov
ins
jecxz
sahf
dec
or
push
mov
xchg
aad
retf
cmps
add
mov
pop
inc
(bad)
sbb
ret
add
adc
test
pusha
adc
dec
push
pusha
movs
test
add
sbb
push
pop
es
push
inc
xchg
ret
jle
jp
popa
ins
sbb
inc
lock
(bad)
mov
sub
and
jnp
add
add
(bad)
(bad)
jg
or
pop
or
cmps
mov
adc
cmp
ds
les
or
dec
sub
dec
or
ins
fisttp
int
(bad)
cmps
xchg
inc
sub
and
es
sbb
mov
mov
mov
les
(bad)
pusha
pop
inc
inc
adc
push
xlat
psubusw
jmp
xchg
push
xlat
sub
cmp
les
xor
ss
in
jo
popa
(bad)
xchg
out
xor
sbb
loope
dec
cmc
data16
push
test
mov
push
jle
mov
adc
push
test
push
pop
jbe
pop
rol
aam
mov
fsub
and
aas
sbb
sbb
xor
popa
aaa
sub
les
test
adc
repz
pushf
ffreep
mov
mov
xchg
or
push
add
cmp
dec
retf
inc
push
dec
loope
xor
jnp
(bad)
mov
jae
ret
jns
sbb
sbb
sub
or
adc
dec
jo
fisub
add
fcmovbe
inc
ret
sbb
imul
daa
retf
ins
aas
or
pop
sbb
xor
pop
inc
mov
scas
dec
xchg
add
dec
pop
jg
inc
pusha
out
lock
adc
pop
add
jle
xor
pop
fs
dec
cld
jge
pop
push
adc
sahf
push
call
fidivr
bound
js
out
xor
aaa
mov
add
dec
push
mov
xor
jge
push
push
add
ss
dec
xor
push
mov
jmp
push
adc
psadbw
cli
adc
jnp
pop
cmp
loope
push
adc
stos
cmp
mov
inc
pop
and
push
adc
movs
push
mov
push
dec
mov
and
movs
xor
or
pop
add
jge
(bad)
mov
(bad)
cmp
gs
adc
push
fidiv
ret
xor
mov
mov
les
(bad)
leave
and
adc
xchg
sbb
adc
rcr
mov
pop
mov
repnz
test
push
leave
inc
jae
retf
mov
lea
jo
sbb
icebp
push
sti
sti
xchg
cli
jg
jecxz
dec
mov
cmp
dec
bound
dec
stos
dec
rol
gs
sub
test
push
add
stos
lock
call
or
dec
arpl
add
mov
(bad)
das
jp
push
mov
rcl
pop
pop
cmps
ds
push
xchg
outs
popa
and
aaa
cli
test
dec
mov
pushf
and
mov
pop
dec
daa
jge
adc
in
adc
cmp
sbb
test
jbe
ret
inc
arpl
mov
and
and
(bad)
out
es
test
test
jb
adc
or
mov
add
mov
pop
xchg
jnp
xor
(bad)
sub
pop
test
sar
pop
jbe
mov
cmps
test
bound
or
xchg
jo
push
jmp
xor
retf
inc
push
mov
loop
imul
test
das
shl
jnp
push
aas
cmp
cmps
add
jmp
or
inc
pop
adc
sub
aas
ss
or
add
push
scas
imul
xor
ret
pusha
lods
fisub
and
xchg
sbb
je
icebp
jne
(bad)
pop
bound
dec
adc
aas
(bad)
xor
jmp
jnp
dec
(bad)
sub
mov
rol
add
out
out
adc
sub
mov
mov
retf
or
inc
and
fbld
mov
jne
icebp
pop
dec
mov
(bad)
out
add
dec
cmp
fidiv
xchg
mov
xor
loop
jmp
jge
clc
mov
cmp
cmp
in
ja
pop
aam
repz
and
(bad)
xchg
mov
(bad)
cmp
fdiv
data16
add
dec
out
std
add
add
xchg
retf
inc
inc
mov
mov
sahf
sbb
xor
mov
pop
xchg
imul
cmp
push
cmp
sub
aas
loope
adc
int
repz
xchg
adc
popf
and
shl
mov
inc
ret
push
sub
mov
lock
rol
cmp
ds
jmp
add
jae
dec
addr16
jmp
scas
cmp
jno
adc
sbb
sbb
mov
push
pushf
cmp
sbb
and
(bad)
adc
loop
shl
push
push
outs
loopne
(bad)
mov
or
cli
jg
aad
dec
xchg
push
rcl
arpl
add
add
cmp
and
and
push
(bad)
mov
iret
and
fwait
xchg
pop
gs
and
and
jbe
in
dec
bound
data16
and
and
data16
add
test
sbb
in
xor
sbb
in
leave
js
cvtpi2ps
mov
pop
arpl
push
retf
jbe
mov
lock
mov
loop
das
push
shr
adc
(bad)
std
dec
pop
mov
je
xchg
mov
inc
pop
popf
aas
or
adc
jmp
inc
push
mov
jbe
push
and
push
jg
sbb
mov
and
jno
pusha
cmp
sahf
mov
push
pop
shr
pop
or
cld
call
xor
jnp
dec
cmp
sbb
push
cwde
lods
cs
sub
scas
cmp
jns
pop
call
jg
lods
inc
sub
fcom
mov
jmp
pop
dec
jmp
(bad)
into
inc
cmc
jmp
js
shl
add
imul
loop
xchg
adc
std
je
mov
adc
xchg
cmp
cmp
inc
jb
ins
jmp
cs
jle
push
ds
sbb
iret
and
es
mov
sbb
movs
adc
int3
fwait
scas
jmp
and
loopne
pop
push
cs
or
adc
jmp
inc
jae
div
rcl
sub
nop
or
push
mov
push
shl
sbb
dec
jmp
loopne
stc
push
cs
jbe
xchg
pop
push
bound
into
xchg
jns
ss
or
jp
add
push
ss
shl
fisubr
je
call
add
dec
push
pop
mov
aas
sbb
pop
idiv
inc
adc
sub
add
inc
jecxz
pop
add
(bad)
xchg
adc
dec
cmc
(bad)
sub
push
les
inc
xor
das
push
shl
jne
rol
mov
lea
cmp
jnp
mov
stos
jecxz
shr
sbb
scas
outs
cwde
mov
jb
jecxz
fisttp
dec
(bad)
into
pop
ret
sti
inc
pusha
ss
and
mov
bound
mov
aaa
in
adc
imul
add
shl
mov
push
jmp
ja
leave
sar
mov
or
dec
or
lock
adc
mov
xor
sub
cmp
gs
fsubp
pop
add
or
mov
iret
inc
inc
ja
ja
sbb
rcl
xor
adc
cmp
dec
push
rol
(bad)
jg
xor
dec
cmp
in
dec
movs
das
pop
add
mov
sub
(bad)
ficomp
in
push
push
inc
bnd
sahf
jg
sub
(bad)
push
xchg
enter
jo
or
aad
add
cmp
mov
dec
shl
pop
jmp
ja
pop
mov
clc
inc
dec
bound
pop
(bad)
sub
rcr
icebp
popf
es
cmp
jl
sub
sbb
adc
pop
jecxz
inc
mov
lahf
add
out
ret
outs
jb
xor
inc
push
jo
adc
call
in
mov
jmp
sar
jmp
call
xchg
push
xlat
aaa
into
cdq
dec
sbb
sti
das
mov
je
cmc
mov
or
sub
retfw
test
mov
shl
loop
jb
ss
mov
rcr
stos
or
jg
rcr
fs
jno
push
stos
pop
push
push
dec
pop
jecxz
push
push
jg
sbb
mov
sbb
das
rcr
mov
mov
xor
arpl
adc
mov
add
add
scas
sbb
mov
retf
inc
stos
mov
sbb
ds
xor
loop
ficom
daa
xor
mov
and
(bad)
mov
icebp
and
pop
xchg
cmps
jns
pusha
add
mov
in
ror
dec
dec
call
push
icebp
ret
fsub
push
pushf
pop
lock
aam
xor
in
mov
dec
adc
outs
call
cmp
popa
mov
or
or
jb
retf
ins
mov
mov
fmulp
movs
mov
loop
dec
jne
inc
inc
stos
movs
(bad)
not
inc
rcr
mov
stos
aas
cmp
and
(bad)
push
daa
(bad)
sub
xor
retf
lahf
data16
pop
push
mov
addr16
popa
mov
mov
fbstp
(bad)
pop
and
mov
cmp
jne
push
std
xor
and
push
push
jbe
mov
xchg
outs
lock
mov
inc
add
push
jns
cvtps2pd
cs
ins
loopne
add
push
cld
dec
imul
jl
in
dec
shl
ja
sbb
ss
jecxz
loopne
loope
and
call
movs
dec
cli
dec
dec
mov
jae
sub
push
retf
fwait
sub
rol
sbb
dec
outs
adc
(bad)
arpl
popa
aaa
adc
outs
jmp
sbb
mov
adc
(bad)
es
xor
adc
ficomp
loop
and
xor
inc
add
imul
and
sub
out
sahf
and
add
adc
sbb
cmp
push
ret
inc
jle
std
mov
mov
lock
cmp
rcr
add
test
jb
dec
jg
retf
movs
sub
mov
cmp
mov
idiv
xor
scas
test
jno
mov
and
das
or
mov
xor
jmp
push
cmp
cmp
ins
adc
jno
or
sbb
or
fwait
cmp
loope
hlt
or
or
lods
rol
xor
inc
dec
mov
or
and
xor
cdq
dec
sub
sbb
jmp
(bad)
jnp
es
divps
inc
jne
mov
or
add
cmp
jb
xchg
lds
mov
repnz
jo
mov
scas
(bad)
cmp
bound
mov
adc
pop
mov
adc
rcr
inc
sbb
test
mov
loop
and
cmps
in
or
xlat
mov
mov
mov
inc
out
inc
inc
outs
repnz
addr16
inc
loop
ds
mov
test
inc
or
retf
cmp
scas
dec
cmp
(bad)
and
fwait
pusha
loope
xor
xchg
pop
cmp
cmp
mov
mov
mov
mov
pop
push
imul
movs
add
adc
in
(bad)
mov
add
mov
mov
rcr
cmp
inc
xchg
cld
sub
(bad)
sbb
cmp
pop
xchg
add
add
dec
or
ins
or
lock
icebp
sti
scas
dec
add
pop
popa
outs
and
pusha
(bad)
pop
dec
sbb
mov
sahf
sub
icebp
jle
mov
popf
ins
test
xor
jmp
jo
clc
xor
and
mov
or
gs
neg
cmp
mov
call
inc
mov
(bad)
test
and
jmp
mov
add
addr16
and
fwait
pusha
mov
paddsw
aaa
stos
fld
mov
xchg
clc
jns
adc
or
push
test
dec
dec
mov
jl
dec
cmp
pop
dec
repnz
es
inc
push
and
(bad)
aam
(bad)
(bad)
(bad)
adc
jo
mov
(bad)
jb
retf
imul
aaa
add
adc
hlt
adc
inc
sub
imul
(bad)
sbb
or
jb
push
dec
imul
mov
and
loope
pop
jmp
mov
int3
(bad)
and
mov
inc
mov
xchg
repnz
leave
addr16
add
pop
cmp
sahf
in
movs
faddp
adc
add
jmp
xor
bts
scas
aad
jle
(bad)
sub
into
xchg
push
call
das
fild
and
jp
outs
stos
or
mov
push
test
cmp
jecxz
sub
sbb
loop
movs
sub
mov
(bad)
sbb
(bad)
iret
into
test
push
add
(bad)
scas
bound
mov
(bad)
out
mov
addr16
xor
or
and
add
xchg
mov
jb
xchg
mov
xchg
std
push
fbld
and
add
xor
jle
dec
sbb
stos
outs
inc
sbb
inc
mov
scas
cs
sbb
ja
push
mov
add
mov
mov
mov
(bad)
cmp
fs
scas
jns
cmp
adc
out
jae
pop
mov
loope
js
sub
rcl
inc
xchg
icebp
aaa
icebp
push
hlt
add
dec
push
lods
mov
jb
lahf
mov
fst
scas
push
imul
sbb
lea
inc
cmp
(bad)
not
add
mov
or
cmp
fisub
test
or
pusha
adc
(bad)
jg
sbb
or
mov
mov
fisubr
sbb
adc
cmp
mov
rcr
jmp
push
mov
xchg
xchg
push
sbb
push
imul
pop
out
adc
mov
pusha
jg
lods
dec
push
pop
xchg
inc
adc
jl
push
jb
mov
fcom
ins
div
adc
dec
leave
dec
(bad)
mov
pop
sub
sahf
int
fmul
imul
jle
push
imul
adc
inc
shl
movs
outs
clc
dec
adc
mov
add
loopne
cli
fld
or
add
jmp
test
mov
xchg
icebp
mov
pop
jbe
inc
mov
xchg
das
push
enter
nop
xchg
scas
in
mov
js
pop
jns
ins
pop
jno
lea
repnz
xchg
adc
das
(bad)
(bad)
out
jbe
rcl
jno
or
mov
pop
test
cmp
fisub
add
(bad)
mov
ss
or
or
cli
sbb
sbb
in
mov
adc
pop
rol
test
or
shr
adc
(bad)
mov
push
adc
lahf
jl
icebp
push
mov
push
loop
push
(bad)
in
mov
daa
shl
aaa
hlt
aas
gs
push
js
and
mov
mov
dec
outs
xlat
ss
(bad)
(bad)
sbb
xchg
fyl2xp1
cmp
mov
mov
(bad)
inc
or
sbb
repnz
pop
popa
ins
outs
rcr
cli
jg
push
jmp
dec
inc
cmp
popf
ins
inc
cmps
daa
push
ret
dec
mov
jb
sbb
push
test
fisubr
lock
cmp
xlat
idiv
retf
inc
(bad)
sti
push
repnz
dec
push
ds
imul
mov
push
dec
jne
mov
(bad)
mov
xchg
shl
jle
jbe
(bad)
dec
fmul
(bad)
mov
push
(bad)
(bad)
ss
push
lahf
inc
xchg
mov
mov
cli
cmp
std
or
out
out
movs
int
jnp
mov
out
mov
sbb
fidivr
sbb
adc
mov
bound
dec
push
scas
adc
inc
ss
or
xchg
or
ds
and
jo
je
jmp
sahf
in
fidivr
pop
jp
push
(bad)
dec
rcr
mov
mov
data16
aad
into
cli
xor
jle
out
or
aaa
xor
bound
aas
cmp
mov
add
mov
add
or
mov
inc
outs
add
and
mov
(bad)
push
cmp
shr
dec
into
rcl
repz
inc
cmp
pop
fnstcw
cs
inc
call
int
(bad)
dec
ss
xchg
jmp
xor
add
cmp
dec
push
xchg
add
(bad)
arpl
ss
dec
cmp
jnp
mov
sub
pop
scas
jmp
mov
xchg
sbb
jg
cmp
adc
jl
cmp
gs
enter
jno
in
gs
mov
ret
push
enter
out
ins
retf
test
xchg
and
jnp
xchg
sbb
jp
test
xchg
pop
fdiv
cmps
or
and
push
push
inc
mov
jns
fld
lahf
int
call
test
mov
ror
pushf
and
das
loop
push
loope
mov
pop
add
jne
jl
pop
push
pop
and
jnp
jmp
ficom
dec
xor
fnstenv
pshufw
mov
ret
xchg
addr16
lock
(bad)
pop
sbb
mov
xor
or
mov
int3
ret
push
sub
outs
adc
shld
add
pop
push
dec
retf
jge
fwait
retf
add
hlt
dec
cmp
mov
pop
inc
daa
mov
mov
ss
push
push
dec
xchg
or
dec
or
push
or
pop
cs
xchg
adc
addr16
push
aas
dec
mov
pop
xchg
loop
adc
rcl
mov
ror
data16
cs
call
push
pop
ins
je
jge
dec
fadd
jo
je
fiadd
cmp
cmp
inc
mov
mov
and
(bad)
leave
out
sbb
dec
push
push
test
cmps
movs
call
adc
hlt
inc
push
(bad)
inc
inc
ss
sbb
or
rol
mov
daa
ret
add
jg
dec
sub
call
and
add
ja
out
repnz
aas
push
and
bswap
cmps
ins
add
jl
in
inc
add
loope
(bad)
lea
sub
xor
jp
jne
mov
jmp
pop
jbe
imul
dec
cmp
(bad)
es
xchg
sbb
pop
ins
dec
cmp
sub
inc
in
(bad)
and
(bad)
push
repz
jbe
js
in
and
bound
and
jp
fisub
cmps
scas
push
jecxz
mov
xor
pop
add
jo
push
inc
test
mov
or
cmp
xchg
xchg
dec
mov
inc
sub
sbb
mov
jae
mov
repnz
sub
jmp
cmp
mov
test
jns
sbb
cwde
ret
sbb
mov
std
push
push
ins
fs
inc
cli
not
jmp
jbe
stos
sbb
xor
cdq
test
ds
mov
out
in
loop
mov
pop
movs
and
(bad)
push
mov
sbb
shl
call
ret
call
fcom
fsubr
enter
push
cmp
inc
ins
scas
in
leave
in
inc
dec
mov
imul
xchg
push
bound
dec
imul
(bad)
repnz
mov
fist
add
mov
js
test
test
mov
imul
ror
aas
dec
sbb
inc
iret
es
hlt
sub
js
and
adc
sbb
dec
ins
jp
push
sbb
push
pop
dec
pop
into
je
shl
retf
(bad)
jne
xor
xchg
retf
adc
sbb
mov
and
add
cli
jg
outs
cdq
outs
pop
rcr
xchg
dec
into
arpl
and
pop
inc
mov
push
ins
sub
sub
ds
push
fisub
fisttp
stc
test
xor
pop
ins
sbb
das
scas
dec
mov
jno
inc
push
mov
pop
mov
pop
push
pop
ins
loopne
jo
jl
cmp
lods
lea
inc
and
pop
xchg
retf
push
pop
ficomp
repz
jae
sbb
cmp
jns
and
mov
pop
loopne
add
mov
add
outs
or
jmp
xor
pop
nop
movs
icebp
mov
inc
hlt
jb
xchg
retf
mov
mov
(bad)
pop
push
cmp
push
cwde
push
into
je
or
rol
scas
jnp
or
add
fwait
(bad)
shr
ja
add
nop
dec
mov
and
and
movs
(bad)
rol
sbb
xlat
loop
xchg
xchg
adc
dec
pop
jle
int3
push
ror
xchg
inc
mov
test
mov
cmp
loope
inc
dec
mov
sbb
dec
push
enter
push
jbe
enter
inc
pop
inc
sub
mov
ja
sbb
ret
mov
scas
and
dec
push
push
outs
(bad)
mov
out
imul
loop
sub
jnp
pusha
sub
add
xchg
sub
pop
mov
mov
das
jno
in
(bad)
jb
pop
jmp
mov
cmp
adc
push
mov
cmp
push
cmp
sbb
outs
in
jno
jge
sahf
add
icebp
das
popf
fldcw
xchg
pop
sti
pop
push
fiadd
xlat
jmp
dec
out
das
jmp
out
daa
outs
mov
in
mov
dec
inc
jnp
mov
dec
retf
sub
iret
adc
mov
and
and
mov
sbb
pop
loop
retf
gs
mov
xchg
jge
xchg
retf
push
out
xchg
xchg
lea
call
retf
xor
push
dec
mov
adc
add
jg
cwde
dec
mov
inc
rol
dec
bound
sub
and
mov
push
fs
ror
and
es
daa
add
out
jecxz
cli
push
cmp
pop
or
mov
pusha
jno
adc
sub
and
sbb
inc
fld
fwait
(bad)
or
jae
and
cmp
adc
aam
xchg
imul
add
lods
rol
and
clc
mov
mov
mov
mov
inc
imul
pushf
inc
mov
cmp
mov
(bad)
and
fisub
lock
push
clc
mov
lahf
je
(bad)
xchg
and
sbb
mov
mov
pop
adc
in
and
test
mov
nop
int
rcl
jns
clc
in
outs
(bad)
fisub
scas
xor
rcl
call
pusha
lods
mov
sub
repnz
pop
mov
movs
sbb
loop
retf
call
or
jmp
fild
sbb
pop
movs
fwait
push
daa
push
ja
jle
shl
imul
in
push
sbb
sbb
and
outs
xor
mov
adc
in
les
dec
cmps
movs
xchg
test
and
xchg
mov
add
inc
iret
arpl
xor
imul
ret
push
test
sub
gs
cs
and
call
rsqrtps
jg
pop
and
pop
jnp
mov
pop
xchg
jbe
ret
sahf
sbb
and
dec
imul
xor
xor
push
data16
push
retf
clc
or
jae
sahf
mov
sbb
mov
inc
out
mov
pop
sub
inc
fisttp
mov
push
push
push
jb
mov
out
jb
mov
add
jbe
aaa
lock
mov
jbe
push
jp
xor
and
(bad)
lahf
stos
aas
mov
ror
fwait
or
enter
lahf
pop
std
mov
loop
ds
ud0
ret
cmps
adc
inc
popa
and
pop
xchg
sbb
xor
sub
out
adc
inc
out
add
pop
fwait
push
mov
fs
push
outs
xor
das
push
pop
sahf
mov
xor
pop
pop
retf
aaa
inc
or
xor
inc
add
mov
jg
sbb
(bad)
js
xchg
push
cmp
inc
lahf
xchg
aad
into
enter
es
push
sbb
jp
cmp
push
ror
and
std
cli
nop
mov
mov
sub
xchg
jno
xchg
loop
sbb
or
push
arpl
push
push
cmp
pushf
sub
outs
inc
push
pusha
ret
pop
ins
adc
inc
call
enter
mov
outs
in
jle
or
dec
jmp
aaa
fcmovnb
mov
sbb
cdq
(bad)
push
(bad)
in
test
clc
cmp
push
ret
cmp
cmp
jecxz
pop
add
test
mov
mov
call
inc
sbb
adc
call
sbb
ins
add
lar
cs
cwde
add
mov
dec
shl
adc
dec
repz
movs
adc
in
popf
xlat
ror
xor
lea
pop
fisubr
pop
push
cli
cmp
addr16
cld
and
sub
into
daa
push
repnz
test
xlat
les
ins
mov
je
enter
jns
dec
add
jnp
cmp
sar
sub
fneni(8087
or
sbb
ja
clc
stos
xchg
mov
das
push
xchg
sbb
outs
(bad)
mov
adc
push
cmps
mov
ins
ds
das
and
push
push
pop
popa
push
sbb
jo
inc
mov
push
test
pop
idiv
sbb
cmp
add
mov
or
ss
sub
movs
shl
adc
aas
jmp
adc
or
jbe
sar
out
ret
ror
jecxz
adc
mov
sub
jbe
dec
add
sub
mov
sbb
ror
daa
dec
loop
adc
shl
adc
fcmove
adc
push
into
rol
mov
repz
inc
cmp
mov
ret
inc
bnd
rdtsc
jo
into
or
loope
jge
pop
inc
push
push
sbb
push
inc
jnp
enter
cs
dec
push
enter
sub
push
enter
into
dec
pop
adc
enter
xchg
call
and
xchg
and
and
ror
mov
mov
xchg
push
adc
sbb
stos
mov
ret
inc
je
jae
imul
fwait
mov
addr16
xor
icebp
pushf
cmc
mov
or
cs
ss
in
aam
das
jle
sub
aam
retf
loopne
lock
fwait
mov
xchg
mov
loopne
ret
push
adc
mov
ja
call
xchg
dec
mov
inc
mov
xor
mov
dec
fdivp
mov
add
inc
and
xchg
jg
and
das
ss
mov
pop
push
outs
ret
jb
leave
in
sbb
xor
or
sub
bound
setg
gs
jno
dec
jg
sbb
outs
push
dec
(bad)
shr
fld
inc
ja
jne
add
or
push
push
push
push
retf
pushf
mov
loope
icebp
addr16
adc
(bad)
neg
or
lea
rcr
dec
add
icebp
adc
jae
data16
jg
cmp
inc
mov
push
xor
loop
sahf
pop
sub
ja
adc
pop
pop
push
aas
add
std
lods
imul
mov
dec
xor
push
sbb
in
push
push
sbb
out
mov
cld
jbe
and
xor
addr16
mov
sub
icebp
jno
sbb
cs
or
fdiv
data16
sub
out
mov
dec
outs
cmp
xor
adc
pop
pop
pushf
and
push
(bad)
loopne
clc
inc
mov
test
inc
repnz
(bad)
(bad)
sahf
mov
gs
dec
rcr
xchg
pop
hlt
jbe
inc
jp
xor
dec
movs
sub
push
lock
cmps
pop
xchg
add
mov
sbb
ret
push
jecxz
inc
mov
jp
loope
add
in
dec
pop
sbb
inc
inc
sub
cmps
gs
sahf
pop
dec
add
mov
inc
(bad)
jnp
xor
call
imul
sub
inc
mov
jge
outs
ret
ret
mov
nop
mov
jnp
xor
push
cmp
xor
pop
pop
sub
jmp
sub
es
popa
in
xchg
lock
shl
int
add
mov
mov
test
dec
adc
or
inc
mov
sub
in
pop
outs
dec
pop
rol
push
movs
pop
mov
inc
or
clc
adc
test
cli
std
cmps
sbb
add
push
push
aas
push
mov
xor
mov
test
push
ret
sbb
or
push
mov
mov
ret
(bad)
bound
cmp
inc
mov
mov
push
out
push
je
(bad)
(bad)
jg
sub
cdq
out
call
cdq
and
dec
xor
outs
cmp
sub
or
xchg
out
adc
outs
arpl
mov
enter
out
mov
outs
outs
jp
and
adc
xor
aad
gs
xchg
mov
les
rcr
and
and
jbe
adc
or
mul
paddw
mov
loope
ins
inc
ja
enter
mov
cmp
sahf
aaa
loop
mov
test
mov
das
daa
cdq
mov
cmp
and
test
mov
xor
adc
add
dec
rcl
imul
add
mov
xor
mov
xchg
mov
jmp
pop
pop
stos
test
pop
mov
test
loope
out
push
dec
or
dec
mov
test
mov
xor
pushw
mov
lahf
hlt
inc
and
nop
ja
xor
add
push
cmp
push
push
pop
ret
or
push
comiss
pop
ret
ret
sub
xchg
jecxz
mov
push
sbb
mov
es
xor
pushf
inc
add
lods
jbe
jg
aas
mov
push
neg
pushf
dec
daa
inc
sub
pop
jp
rcr
jns
sbb
(bad)
out
push
leave
shl
xchg
push
popa
stos
inc
mov
mul
pop
jp
dec
call
shl
cli
pop
mov
loope
rol
or
sbb
jae
pop
adc
cs
cli
add
push
loop
leave
repz
ret
(bad)
les
iret
add
or
mov
scas
fldenv
fisub
mov
(bad)
aas
fisubr
or
jmp
push
or
xchg
scas
aaa
push
jnp
mov
pop
stc
sub
stc
xor
aaa
ss
call
icebp
xchg
fld
ret
add
xchg
push
jmp
xchg
nop
jo
imul
xchg
and
dec
dec
pop
xor
lds
sub
pop
adc
out
xor
(bad)
push
pop
and
push
mov
(bad)
mov
popa
lods
(bad)
ss
bound
packuswb
loopne
mov
in
daa
ja
lea
inc
int
bound
outs
pop
mov
rcl
fs
sbb
mov
adc
mov
pop
das
push
inc
jb
pusha
mov
(bad)
and
ret
inc
cmp
xor
sbb
pop
push
(bad)
adc
push
adc
(bad)
call
les
cmp
xchg
mov
jbe
out
sti
call
mov
xchg
std
mov
mov
inc
ficomp
mov
add
and
xor
inc
frstor
xchg
rol
adc
leave
out
pop
jmp
add
mov
mov
cmc
cmps
(bad)
jl
call
loop
stos
mov
push
dec
xchg
xor
and
ds
and
xor
jp
dec
mov
sbb
push
jmp
cli
mov
std
data16
ret
inc
mov
pop
call
or
adc
pop
or
nop
retf
pushf
cdq
(bad)
pop
and
inc
jns
mov
mov
stc
sub
addr16
icebp
cmp
xchg
xchg
inc
adc
int
fimul
test
das
push
push
sub
inc
jbe
daa
xchg
nop
and
xchg
mov
or
xchg
inc
test
sahf
add
pushf
cmp
pop
xchg
adc
xchg
push
jns
pusha
pushf
dec
or
lahf
jg
(bad)
les
out
cmp
push
xchg
cmps
add
leave
jl
jns
jno
jae
mov
mov
call
mov
push
out
jmp
sbb
pop
or
adc
sahf
inc
js
outs
mov
mov
lahf
mov
adc
sbb
pop
idiv
dec
mov
leave
pop
add
xor
imul
in
and
cmps
push
xchg
cmc
jecxz
jne
pop
shr
push
sub
sbb
(bad)
outs
xchg
aad
jbe
sub
or
mov
nop
xchg
fwait
rol
inc
popf
aas
dec
sbb
jns
jnp
iret
ret
pop
into
xchg
jmp
loope
sbb
test
(bad)
push
add
mov
ins
or
gs
or
sbb
repnz
outs
stos
add
jae
adc
cld
xor
sub
pop
les
push
aaa
mov
dec
stos
pop
pop
ins
mov
mov
adc
cdq
push
out
and
xchg
sbb
and
dec
sub
push
dec
repnz
scas
and
pop
add
cmp
das
mov
es
mov
pop
pop
daa
rcr
loop
test
out
lea
add
add
cmp
shr
pop
rcr
popa
ds
pop
sar
cmp
sti
mov
retf
jmp
adc
add
jmp
adc
xor
jle
loopne
push
adc
xor
(bad)
jmp
and
outs
ins
outs
mov
sub
daa
add
or
cmps
cwde
mov
clc
add
repnz
call
out
xchg
leave
mov
in
scas
fadd
out
mov
inc
in
push
cld
rcl
mov
ret
dec
dec
xor
adc
mov
and
cmp
retf
and
cmps
pop
cdq
es
lahf
movs
ret
or
(bad)
(bad)
rol
add
inc
or
pop
add
mov
jecxz
mov
out
push
test
xchg
lock
push
out
and
mov
sbb
pop
mov
sub
adc
sbb
pop
add
xchg
fs
gs
fsub
or
pop
jns
fisubr
rcl
mov
std
dec
mov
dec
and
or
dec
cmp
sub
jmp
pop
inc
mov
mov
mov
jecxz
add
and
add
add
and
pand
addr16
(bad)
stc
jne
jno
adc
movs
push
push
inc
pop
(bad)
imul
retf
sub
jl
add
xchg
sbb
call
pop
pusha
jecxz
dec
or
cmp
mov
push
and
les
dec
shr
and
inc
push
and
loopne
clc
jg
nop
les
xor
sub
push
add
out
or
push
div
sub
imul
lahf
mov
jnp
gs
std
sahf
repnz
movs
iret
inc
in
xchg
stc
shl
mov
cmps
fidiv
imul
cwde
in
add
pop
mov
rep
push
pop
cli
inc
fmul
cmc
push
inc
or
addr16
loope
addr16
out
dec
imul
cmp
jmp
and
xor
aaa
lock
add
repnz
jbe
jge
imul
xor
mov
mov
mov
inc
push
add
dec
and
add
aaa
add
mov
xor
daa
lock
in
pop
xchg
icebp
or
push
inc
imul
adc
sub
nop
push
and
and
mov
jg
mov
inc
nop
clc
add
pop
rcr
pop
push
adc
mov
into
add
arpl
(bad)
arpl
in
inc
loopne
fadd
mov
iret
mov
add
mov
inc
inc
ret
arpl
loop
push
cld
aaa
lea
mov
and
jecxz
dec
inc
fistp
(bad)
xlat
out
fidiv
push
inc
jg
clc
sbb
fnsave
ds
dec
stos
mov
and
inc
mov
jle
test
cmps
popf
add
movs
ja
iret
repz
add
sub
add
mov
inc
cmps
or
mov
ret
aam
int
ss
push
hlt
js
and
daa
push
(bad)
xchg
inc
(bad)
push
dec
pop
mov
or
mov
cmp
xor
aad
adc
lahf
bound
stos
movs
mov
add
icebp
push
dec
mov
adc
jmp
inc
and
cmc
sbb
data16
out
shr
dec
leave
out
xchg
out
movs
cli
(bad)
mov
dec
fwait
ret
cld
test
push
in
lods
fstp
jmp
cli
xchg
add
sahf
sbb
js
icebp
inc
mov
cs
std
ja
pop
mov
add
xchg
and
int
arpl
fs
dec
loop
mov
mov
pop
inc
xchg
sub
or
adc
scas
xchg
mov
jl
sbb
loop
sti
sbb
inc
and
stos
data16
mov
addr16
pop
cs
or
bound
jno
shr
out
(bad)
xchg
mov
jno
and
push
pop
scas
sub
bound
mov
jmp
in
xor
push
out
and
int
cli
test
rcl
or
pop
mov
xchg
imul
test
or
(bad)
pop
sub
mov
xchg
cmp
movs
adc
sbb
inc
ins
jecxz
mov
aad
jmp
or
sub
pop
icebp
mov
pop
jb
xchg
pop
sbb
jmp
sbb
xchg
mov
cdq
mov
popa
das
jns
jo
dec
push
(bad)
lea
push
jmp
jns
das
jno
jns
sbb
ret
jmp
(bad)
retf
jae
add
fwait
retf
inc
sbb
ror
push
pop
mov
das
and
mov
mov
push
ret
xchg
xchg
(bad)
popa
ret
std
adc
dec
cmp
cmp
add
mov
fistp
arpl
stc
add
lock
sahf
aaa
repz
outs
inc
test
cmp
cmp
push
adc
sahf
jle
sub
pop
call
ins
jmp
cmp
jmp
mov
aad
arpl
jle
icebp
stos
push
(bad)
inc
pop
dec
cmps
mov
sbb
jno
inc
rcl
push
loope
mov
sbb
retf
lods
cli
pop
push
cmps
test
jae
mov
rol
repz
call
pusha
sub
or
xor
adc
fisttp
pop
(bad)
retf
rcr
call
push
dec
imul
mov
add
push
inc
repz
pop
xchg
sar
pop
shl
or
add
adc
push
mov
repz
sbb
sbb
inc
mov
pushf
mov
inc
fsubp
(bad)
(bad)
repnz
jb
and
neg
out
mov
push
push
movs
jb
out
int3
cmp
inc
imul
xchg
mov
pop
lahf
jno
xor
pop
push
add
xchg
adc
pusha
xchg
sub
add
jle
lods
popf
imul
iret
cmc
xor
call
not
fwait
pop
pop
jmp
ins
mov
jg
fist
jle
popf
dec
jecxz
xor
pop
or
rcr
jae
retf
add
dec
adc
cmp
pop
xchg
cmp
cmp
add
or
sub
test
popf
pop
cld
rcl
push
shl
pop
sbb
lods
sbb
fnstenv
dec
mov
mov
(bad)
retf
fisttp
mov
fscale
xchg
jp
pop
add
mov
inc
add
mov
mov
nop
bound
dec
fwait
mov
imul
inc
mov
sub
dec
mov
add
push
les
mov
adc
fadd
jge
outs
clc
test
sbb
fild
ss
jo
out
add
dec
loope
out
jne
mov
jp
push
cmps
xor
jnp
xchg
jmp
hlt
cmp
dec
dec
in
fistp
cli
imul
pop
es
mov
xchg
xchg
js
sub
add
push
push
out
shl
push
mov
lahf
dec
add
inc
jmp
mov
in
dec
mov
cwde
retf
ja
push
jno
push
pop
(bad)
sbb
jl
cmp
movd
dec
ja
mov
retf
fwait
cmp
mov
pop
fcomi
and
mov
test
add
aas
les
sahf
dec
jecxz
ja
adc
push
icebp
push
mov
mov
push
call
and
dec
jno
das
hlt
cld
je
pop
fisub
pop
inc
inc
jb
ds
add
mov
fwait
out
push
push
cmps
out
jns
(bad)
mov
fwait
and
jmp
jp
xchg
xchg
popa
cmp
push
xchg
loope
inc
cmp
imul
popa
dec
loopne
sbb
cmp
pop
test
popa
repz
cmp
xor
pop
or
pop
push
push
jecxz
inc
push
jmp
ins
dec
or
fld
bound
mov
mov
repz
aaa
add
idiv
mov
mov
cmp
mov
mov
push
data16
mov
mov
rcl
and
mov
push
pop
xchg
out
call
pavgb
out
ja
adc
and
xchg
inc
mov
jp
xor
xor
add
shl
jg
iret
adc
inc
mov
mov
dec
aas
mov
xchg
xchg
adc
imul
xchg
push
cwde
(bad)
mov
out
xor
add
add
sahf
(bad)
fsub
cmp
clc
inc
js
arpl
and
push
es
and
xor
mov
mov
add
jns
fucomi
daa
adc
int3
daa
xchg
popa
stos
push
jle
push
dec
jg
out
cmp
outs
popa
test
das
and
mov
xchg
push
and
test
cmps
(bad)
mov
dec
call
dec
dec
inc
test
repz
or
mov
cmc
call
adc
xor
inc
jb
iret
scas
mov
jmp
test
mov
jmp
push
jmp
mov
dec
jmp
shl
pop
retf
das
mov
cmps
pop
arpl
or
add
mov
dec
mov
enter
jmp
aad
push
mov
(bad)
mov
xor
push
add
push
mov
mov
add
lock
jl
inc
jle
mov
hlt
retf
pop
sbb
jp
xor
lds
dec
push
int
jmp
or
setbe
jmp
pop
mov
cli
rol
bound
call
(bad)
xor
je
bound
scas
dec
lock
das
mov
sar
jb
loope
sub
enter
add
or
fsub
jns
xchg
mov
js
mov
sub
lock
xlat
push
cmp
in
add
pop
xchg
push
loop
lock
sar
xor
push
jns
jno
jp
sbb
test
and
push
retf
push
(bad)
int
push
pop
enter
sbb
push
call
xor
sbb
or
repnz
sub
pop
push
ds
bound
inc
(bad)
stc
inc
and
ins
mov
push
jnp
xchg
hlt
sbb
jg
cld
cmp
pop
fild
mov
(bad)
mov
pop
je
movs
mov
test
cwde
push
cdq
shl
pop
out
xlat
jbe
jl
jno
ss
shr
xchg
imul
add
out
cld
aad
ret
pop
push
test
jns
lea
movs
adc
sar
les
pop
xlat
inc
sbb
rol
push
sbb
sub
jns
add
std
ss
push
fisub
and
fisub
xchg
cmp
xchg
mov
xor
popa
push
shl
mov
mov
dec
sahf
arpl
in
(bad)
adc
js
bound
mov
jl
test
fiadd
mov
add
mov
pop
jge
icebp
daa
mov
xchg
jg
push
daa
(bad)
dec
iret
lods
mov
mov
mov
lahf
clc
cmp
pop
adc
mov
sub
cmp
inc
xchg
int
push
push
mov
xchg
cs
pop
dec
mov
sbb
jge
pop
add
cmp
cs
test
push
xchg
add
nop
mov
xchg
xchg
bound
adc
outs
inc
cld
stc
jns
out
cdq
push
and
mov
xchg
jg
enter
mov
push
dec
enter
bound
retf
(bad)
cmc
ss
sahf
mov
inc
inc
adc
push
fs
jmp
push
fimul
(bad)
jg
call
hlt
lahf
stc
mov
cmp
mov
xor
xrelease
push
sbb
repz
(bad)
sub
mov
inc
mov
or
cmps
mov
ins
imul
cs
aad
es
pop
adc
xchg
push
push
pop
mov
pop
dec
jle
(bad)
and
sbb
xlat
ins
sbb
ins
rol
mov
push
and
cmc
pop
out
sbb
pop
xor
add
fwait
adc
add
xor
rol
int3
sbb
pop
cmp
or
sub
test
and
ret
push
xor
add
dec
dec
mov
jbe
and
lahf
scas
dec
cld
push
imul
push
(bad)
test
pop
lods
mov
inc
scas
and
arpl
mov
push
call
and
push
gs
push
(bad)
in
enter
mov
lea
dec
pop
cmp
outs
pop
out
pop
jmp
dec
cld
(bad)
in
enter
fidivr
mov
push
or
jl
sub
add
iret
pop
sti
loope
add
dec
xor
je
mov
push
movs
stc
push
data16
push
mov
xor
stc
cmp
push
push
(bad)
push
pop
call
iret
pusha
(bad)
(bad)
movs
stc
push
ins
mov
aas
push
stc
cmp
and
test
inc
add
add
xchg
retf
inc
and
and
(bad)
adc
retf
rcl
inc
ds
jns
and
jp
ins
ffreep
in
aaa
cmp
inc
mov
mov
or
call
iret
mov
out
xchg
fcmovnu
push
push
push
fisttp
mov
inc
mov
push
daa
or
and
mov
push
push
popw
dec
mov
loop
pop
xchg
push
fimul
imul
popa
mov
mov
cwde
movs
or
je
push
sub
push
add
retf
cmp
pandn
dec
js
test
cmp
hlt
jbe
mov
push
arpl
arpl
fimul
mov
cli
or
stos
arpl
mov
pop
loop
or
or
clc
jle
stos
push
scas
loop
cs
xadd
das
push
mov
outs
cmp
lds
and
xchg
out
retf
data16
pop
packuswb
mov
sub
rol
repnz
cmp
dec
pusha
mov
xchg
mov
lahf
mov
sbb
repnz
pop
psubb
or
cs
dec
aad
stos
sub
rcl
addr16
jp
pop
mov
pop
aas
ds
ds
dec
inc
and
das
js
call
fwait
ret
icebp
mov
out
outs
mov
mov
mov
retf
xchg
mov
out
mov
lock
scas
dec
mov
paddb
mov
cs
scas
or
pop
data16
push
xchg
xchg
mov
and
mov
(bad)
mov
mov
enter
cmp
mov
mov
adc
fdivr
push
ror
mov
xchg
imul
adc
mov
pop
mov
fwait
loope
adc
xchg
jmp
sbb
dec
leave
jns
sbb
sub
adc
and
add
push
add
je
cld
inc
inc
or
scas
pop
push
mov
lahf
or
arpl
cmp
(bad)
rcl
mov
sar
outs
test
xchg
ret
mov
pop
dec
mov
retf
inc
sub
lea
mov
adc
repz
pop
pop
cmp
sbb
xor
inc
movs
adc
(bad)
out
mov
push
mov
mov
cmp
xchg
add
stos
push
inc
jl
call
pop
rcl
jno
adc
sbb
pop
std
xor
mov
shl
inc
call
sbb
xor
jmp
loopne
imul
jl
data16
pop
into
(bad)
hlt
adc
cmp
retf
repnz
adc
adc
mov
inc
data16
call
sbb
outs
xor
mov
rol
pop
adc
dec
mov
imul
stc
mov
xchg
mov
in
mov
leave
jg
lock
test
jecxz
jp
retf
xor
loope
(bad)
dec
lea
cmps
inc
call
ja
movs
popf
bound
adc
cli
push
mov
lea
loopne
sub
loop
and
pop
int3
and
repnz
repnz
pop
lods
adc
inc
pusha
ror
pop
cmps
fbld
dec
mov
pop
and
dec
fnsave
push
or
push
fsubr
rcr
outs
fiadd
sahf
mov
shr
cdq
and
jmp
cmp
xchg
ret
loopne
mov
or
movs
push
or
jp
jg
and
jmp
mov
mov
mov
bound
push
mov
pop
mov
jo
(bad)
xor
shl
pop
rcr
jmp
pop
in
pop
jae
and
adc
pop
sub
bnd
movs
jbe
lea
dec
or
enter
mov
mov
scas
fs
imul
push
(bad)
jae
jo
shr
retf
retf
dec
pop
mov
fmul
mov
das
sbb
xchg
push
push
enter
lods
inc
js
cmps
cmps
loopne
(bad)
and
adc
retf
mulps
mov
and
xchg
mov
inc
dec
leave
(bad)
adc
mov
dec
add
xchg
mov
pop
add
shr
cmp
jmp
loopne
dec
mov
(bad)
pop
frstor
sbb
inc
sbb
test
mov
xchg
es
pop
xlat
pushf
sbb
sbb
lahf
sub
pop
fwait
inc
dec
loope
dec
rol
cmp
mov
and
dec
push
nop
dec
test
fwait
pop
sub
mov
add
push
int
add
sub
(bad)
xchg
mov
mov
mov
mov
mov
and
add
jnp
out
push
jge
jno
lock
es
jmp
mov
fldcw
sti
shr
mov
pop
sbb
lahf
add
test
ror
call
rol
pop
mov
pop
jecxz
dec
(bad)
into
xchg
pop
call
movs
push
inc
test
mov
mov
dec
outs
out
mov
sbb
push
repnz
mov
jp
movs
repnz
mov
movs
iret
imul
jns
dec
loopne
inc
or
scas
rol
inc
jmp
fiadd
jmp
sub
adc
adc
in
ins
out
rol
arpl
test
inc
xor
(bad)
ficomp
mov
in
xor
sbb
test
lock
inc
in
mov
out
inc
xchg
enter
out
adc
fld
xor
loop
daa
(bad)
sar
retf
add
or
sub
rol
jmp
loopne
arpl
push
mov
mov
imul
mov
dec
in
mov
mov
test
inc
inc
outs
shl
in
or
inc
cmps
dec
dec
popa
mov
xchg
push
imul
movs
sbb
mov
and
push
or
cmps
and
add
popa
and
(bad)
test
int
mov
pop
jnp
cmp
je
xchg
mov
jne
pop
loope
mov
pop
dec
push
mov
rol
ss
pop
leave
mov
push
sub
not
jmp
or
imul
add
loopne
ret
lea
jmp
inc
xchg
imul
sbb
out
add
gs
push
pop
ret
add
mov
ss
inc
sbb
(bad)
daa
xchg
repnz
adc
mov
jmp
nop
jnp
aam
aas
hlt
int
sahf
adc
mov
mov
dec
dec
shr
lahf
xchg
xchg
push
or
or
xchg
retf
adc
int
push
cwde
sub
mov
ss
dec
dec
push
inc
adc
in
jp
sub
xor
pop
jmp
stos
aas
ds
mov
out
push
push
je
adc
retf
arpl
push
xchg
fucomi
out
cli
fistp
xchg
cdq
daa
dec
hlt
pop
xchg
sbb
test
jle
adc
inc
pop
fprem
pop
jmp
imul
lea
mov
inc
mov
sbb
inc
aas
add
and
(bad)
jp
dec
pop
shl
test
into
ficomp
scas
test
imul
add
push
jle
scas
mov
dec
cs
mov
xchg
outs
mov
test
retf
cmp
pop
xchg
(bad)
xor
inc
clc
cmp
call
jl
cli
dec
out
xchg
fimul
gs
scas
retf
out
jg
mov
inc
jnp
stos
jl
xchg
dec
femms
into
jnp
mov
test
mov
push
fldcw
shr
jecxz
fild
jmp
hlt
xchg
inc
icebp
xor
es
ror
shr
mov
rcr
xchg
sub
add
pcmpgtd
xchg
cmps
fist
push
nop
loop
(bad)
(bad)
mov
cmps
fild
xchg
mov
ins
or
inc
sub
xor
cmp
and
lods
xchg
enter
rol
mov
adc
stos
cmp
sub
vmwrite
ds
push
bound
sbb
test
mov
mov
jnp
(bad)
xor
mov
lock
sbb
sub
xchg
pop
cmp
stos
cli
in
fwait
mov
outs
mov
ja
sar
out
js
(bad)
xchg
ds
ret
jl
adc
fwait
and
push
mov
dec
inc
sub
in
das
gs
idiv
mov
cmps
or
mov
shr
mov
out
xchg
jo
cdq
mov
add
push
sahf
loope
jg
ficom
sahf
(bad)
adc
imul
rcr
pop
dec
and
pop
mov
dec
clc
out
adc
push
pop
push
(bad)
sbb
out
cli
aas
jmp
adc
dec
sti
dec
pusha
ret
or
add
pusha
xlat
bound
scas
es
sbb
mov
into
jo
or
pop
call
std
(bad)
out
adc
outs
mov
ss
fldenv
test
inc
adc
cmp
pusha
dec
repz
sbb
ins
xor
xchg
cmp
push
mov
aaa
push
mov
out
dec
clc
add
or
adc
rcr
fbstp
sbb
jmp
out
ds
ja
jmp
movs
bnd
shl
pop
inc
mov
push
xor
std
mov
mov
mov
ss
fild
fdiv
call
pop
adc
mov
pop
sbb
test
push
shl
imul
js
loope
cmp
xor
cmps
jg
cmps
scas
cmc
push
add
movs
(bad)
xchg
jle
and
scas
sar
ret
imul
ret
jmp
fidivr
inc
mov
jmp
ret
mov
cwde
cmp
sbb
aam
popa
call
es
jb
jae
lds
pop
add
push
lods
mov
shl
sub
mov
out
in
jo
push
mov
sub
dec
mov
add
jne
(bad)
push
ins
movs
push
int
nop
push
inc
int3
test
xor
sub
xchg
fwait
rcl
dec
xor
inc
outs
add
pop
adc
add
mov
sub
fwait
in
pop
adc
aaa
in
loope
xchg
sahf
pop
xchg
aas
adc
mov
movs
jbe
ret
call
sbb
cmp
add
loop
jb
mov
lock
ficom
cmp
push
mov
fisttp
scas
sbb
push
mov
jae
fst
dec
fild
and
and
adc
outs
mov
or
call
mov
retf
imul
sub
mov
mov
jae
(bad)
ins
jecxz
loop
dec
jne
adc
popa
adc
sbb
and
xchg
div
div
jp
pop
adc
jno
in
jmp
pop
inc
push
adc
aaa
sti
xchg
cmp
mov
jmp
jle
add
mov
fs
retf
es
pop
adc
inc
mov
dec
fisubr
xchg
sahf
jnp
outs
rol
nop
or
adc
cli
and
jge
(bad)
mov
adc
(bad)
call
je
jno
and
mov
mov
dec
jnp
xor
or
fcmovu
ss
add
cdq
pop
xchg
out
psubsw
nop
mov
ret
jl
push
loope
aad
or
jle
xor
clc
imul
aas
lea
add
xchg
retf
pop
les
popf
mov
sbb
je
and
call
movs
mov
mov
xor
mov
icebp
mov
push
xor
pop
or
xchg
das
or
sub
ror
add
sar
shl
sbb
mov
hlt
pop
sbb
sbb
rol
repnz
bound
pop
and
repnz
sbb
ret
test
cmps
(bad)
mov
pushf
mov
sar
pushf
mov
adc
repz
mov
sbb
shr
xchg
ds
jecxz
jg
sbb
push
inc
inc
push
adc
sub
sahf
call
mov
lea
push
pop
mov
imul
or
(bad)
adc
data16
pop
call
mov
lock
mov
pop
xor
push
push
jo
jle
or
fidiv
sbb
hlt
or
dec
or
jmp
pop
imul
dec
xor
sahf
adc
lds
sbb
cmp
mov
push
outs
imul
add
push
inc
scas
and
jmp
cmp
jnp
fsubr
xchg
xchg
and
mov
pop
dec
ret
sbb
xchg
push
inc
outs
xor
push
mov
stos
cmp
jno
jl
inc
mov
inc
inc
cs
outs
add
(bad)
movq
sbb
test
jmp
fsubrp
inc
mov
sbb
mov
jo
imul
ins
dec
dec
xchg
ror
loope
jmp
xor
into
ror
mov
push
dec
dec
xor
pop
sub
je
scas
push
sub
(bad)
cmp
fstp
test
es
nop
cmp
mov
mov
mov
dec
out
addr16
mov
add
jge
iret
ficom
dec
imul
jg
clc
in
pop
jnp
mov
inc
pop
scas
or
movs
jo
push
inc
mov
jmp
sub
in
cdq
aaa
push
popa
xchg
add
add
mov
in
adc
push
addr16
mov
push
out
mov
loopne
mov
mov
add
retf
ja
cmp
inc
retf
jge
mov
pop
adc
ror
pushw
push
dec
and
loop
test
leave
mov
mov
es
sbb
(bad)
mov
leave
cdq
or
inc
dec
mov
jecxz
imul
out
ins
retf
fild
movs
les
jecxz
scas
arpl
sbb
sub
loope
(bad)
or
icebp
ficomp
cmp
pop
lock
or
jge
sahf
push
popf
jl
aas
test
xchg
push
or
outs
inc
cmps
lea
fcomp
(bad)
cmp
or
into
jg
movs
sub
daa
call
fbld
sbb
xor
jecxz
or
push
jne
leave
mov
sub
sbb
xchg
add
pusha
inc
xchg
(bad)
and
test
sbb
sbb
sub
pop
rcr
loopne
mov
es
call
mov
jb
sbb
jg
sahf
or
loopne
loopne
je
and
repnz
and
adc
pop
mov
mov
cmp
dec
pop
in
sub
mov
sub
and
stos
xchg
sbb
repnz
out
call
shr
xchg
adc
or
add
or
or
das
call
mov
mov
sbb
xor
adc
test
xchg
jae
push
shl
arpl
arpl
jmp
push
cdq
dec
adc
out
push
sbb
cdq
jns
inc
scas
pop
shl
inc
out
in
inc
sbb
add
lahf
fidivr
pop
data16
and
je
dec
div
fimul
cmps
sub
cmps
inc
mov
je
xor
add
(bad)
lods
mov
pop
and
or
dec
jmp
movs
dec
lahf
push
sbb
test
ret
mov
bound
sub
and
sbb
gs
xor
push
mov
fsubrp
xor
push
popa
sahf
hlt
stc
and
icebp
jge
ss
ret
dec
das
push
(bad)
mov
idiv
rcl
push
mov
ret
push
cmp
mov
pop
mov
push
pop
mov
inc
xchg
pop
rcr
mov
cld
xor
push
push
cmp
mov
cmp
inc
dec
pop
(bad)
hlt
pop
fsub
popw
jae
enter
dec
movs
ror
push
dec
jp
pop
xchg
xchg
sar
(bad)
loop
xchg
les
cmp
(bad)
repnz
repz
dec
nop
call
push
outs
or
sahf
mov
sahf
jmp
add
or
sub
retf
sbb
sbb
ds
pop
into
fwait
mov
out
cld
ss
ds
imul
mov
and
cdq
jbe
rcl
pop
dec
std
in
into
push
ja
imul
test
test
jle
lock
neg
inc
push
mov
pop
pop
ret
pop
mov
retf
sub
test
ds
sub
mov
mov
or
jnp
cmp
and
daa
rol
les
cmp
movs
out
sbb
mov
push
jnp
jecxz
call
xchg
daa
cmp
jecxz
pop
scas
inc
push
popa
nop
sbb
xor
and
movs
jbe
ret
dec
sar
sahf
jb
fwait
cmp
push
jmp
xchg
sbb
in
xlat
xchg
lods
bound
inc
pop
pop
cmp
sbb
mov
test
push
sub
out
pop
jl
leave
lods
loop
ins
repz
js
adc
stos
dec
mov
aas
fucompp
sbb
sbb
lock
aas
sub
loop
mov
jl
push
adc
test
cdq
pop
inc
add
xchg
xor
add
jae
dec
add
pop
adc
mov
(bad)
or
inc
cld
cmp
lea
inc
sti
test
sbb
dec
ficomp
sbb
mov
mov
sub
sbb
fmul
inc
mov
xlat
xor
add
xor
adc
dec
fucomip
push
cmp
pop
repnz
pop
mov
dec
sub
push
xor
or
xchg
aas
or
popa
adc
mov
jl
sub
clc
add
ins
xchg
cmp
or
pop
(bad)
push
data16
loope
aaa
test
inc
mov
mov
dec
outs
jmp
sub
ja
stc
aam
mov
and
adc
(bad)
cmp
cmps
dec
sbb
repz
es
push
dec
clc
push
pop
dec
mov
aas
(bad)
ret
and
push
push
xor
cmp
mul
ins
sbb
retf
cs
xor
cmp
jle
fwait
xchg
sbb
xor
and
repnz
and
dec
iret
or
in
jmp
das
xchg
add
retf
retf
in
lods
or
unpcklps
push
test
imul
xor
or
and
sti
xchg
sub
icebp
dec
dec
cwde
mov
pop
cs
inc
mov
stc
add
lahf
lahf
jb
pushf
inc
icebp
or
jne
repnz
repnz
or
in
aas
mov
or
inc
and
xor
retf
in
xor
mov
pop
cs
adc
in
sahf
scas
mov
pop
adc
adc
mov
fsub
dec
in
sub
popa
nop
fidivr
cmp
inc
and
popa
ret
clc
pop
retf
sub
xchg
push
mov
ret
fidiv
jns
push
inc
es
mov
xlat
outs
jne
fcmove
fsub
mov
mov
or
gs
or
pop
(bad)
cs
rol
sbb
mov
popf
cmp
mov
mov
xor
push
dec
jp
hlt
outs
call
cmp
sbb
sbb
arpl
outs
pop
add
jmp
jbe
pop
pop
pop
cmp
cmp
mov
xor
call
mov
push
adc
add
movs
call
rcr
mov
data16
push
add
stc
fistp
(bad)
push
xor
pop
dec
imul
test
dec
add
pop
pushw
stos
icebp
jmp
ret
call
and
xor
jp
xchg
lock
jmp
(bad)
dec
aam
test
xor
mov
inc
ret
pop
sub
push
mov
sahf
cmp
add
dec
fcmovbe
leave
cdq
lea
sub
and
lahf
mov
dec
pop
imul
das
leave
out
pop
pop
mov
arpl
dec
cli
push
or
pop
sub
call
ds
(bad)
js
outs
mov
scas
cwde
movs
mov
inc
movs
sar
mov
mov
and
mov
rol
(bad)
xchg
pop
clc
sbb
mov
and
add
movs
sub
mov
pop
push
outs
add
das
mov
add
sub
add
xchg
sbb
pop
mov
jne
adc
popa
and
lock
mov
add
sub
(bad)
rol
ins
and
mov
push
es
or
push
jecxz
cld
(bad)
cmps
cmp
add
call
shr
mov
add
mov
(bad)
push
mov
ficomp
mov
and
push
shl
fisubr
add
pop
clc
retf
loopne
outs
pop
or
and
adc
push
bound
pop
int
or
(bad)
mov
icebp
add
pop
mov
dec
mov
hlt
add
pop
ds
mov
pop
push
mov
or
mov
jl
and
enter
sub
int3
adc
cdq
movs
or
push
mov
and
cld
in
test
call
sub
icebp
xchg
xor
cmp
outs
and
mov
aam
dec
jo
mov
mov
jb
cmc
inc
retf
sbb
shl
xchg
sub
popf
movs
repnz
or
(bad)
out
leave
out
lahf
cmp
jle
mov
xchg
aam
test
pop
retf
sub
mov
pop
sar
push
jns
xchg
jge
jne
or
jb
jg
xor
enter
jle
je
sub
cmp
push
call
push
shl
xchg
daa
iret
and
cld
in
sbb
les
cmp
jns
mov
cld
nop
dec
mov
leave
xchg
xchg
dec
push
call
lea
xor
frstor
call
and
sub
das
and
rdmsr
mov
add
inc
mov
hlt
add
call
pop
in
ins
rcl
xchg
out
inc
test
in
push
loop
into
fisttp
push
jmp
mov
into
push
fidiv
leave
xchg
retf
jns
mov
in
movs
push
sar
pushf
xchg
retf
push
push
dec
mov
mov
pop
and
xchg
enter
or
dec
sbb
jle
sbb
xchg
pop
cs
xchg
scas
push
out
sbb
mov
(bad)
jb
addr16
cmps
push
and
cs
dec
mov
inc
mov
mov
lahf
sbb
cld
dec
mov
xchg
mov
aam
gs
xchg
mov
sbb
sahf
lahf
sbb
test
test
dec
fsubrp
lds
das
in
repnz
and
pop
sbb
jl
adc
shl
fild
lea
outs
les
test
(bad)
mov
add
xchg
fild
in
xchg
(bad)
(bad)
cmp
sbb
hlt
inc
repz
dec
sbb
jb
or
jp
jo
jmp
cmp
pop
mov
rcr
hlt
call
add
add
nop
and
xor
and
iret
push
push
out
mov
or
mov
or
mov
sbb
xor
xor
mov
pop
shl
sbb
dec
mov
into
iret
or
xchg
sbb
ror
nop
mov
leave
mov
inc
arpl
push
adc
and
ret
mov
cmp
(bad)
(bad)
or
(bad)
scas
sar
bound
push
pop
xchg
push
or
adc
lock
mov
push
add
jecxz
jbe
cwde
lods
xor
mov
jmp
dec
or
ret
cmp
fiadd
dec
daa
bound
adc
xor
cdq
ret
lods
scas
jle
jmp
lea
xchg
dec
sbb
and
shl
ins
push
and
leave
jl
inc
and
jl
jmp
fild
sub
imul
jno
int
sub
adc
and
out
fwait
mov
add
dec
pslld
mov
pop
movs
movs
push
mov
mov
and
mov
test
retf
dec
shl
and
dec
and
hlt
mov
dec
inc
and
popf
ret
retf
cmp
or
and
es
jmp
fadd
sbb
ja
and
add
arpl
icebp
(bad)
pop
stos
test
jg
add
or
mov
push
or
into
fbstp
test
call
dec
mov
mov
inc
or
pslld
xor
mov
push
test
cmps
add
lahf
push
das
dec
imul
stos
fwait
or
inc
fwait
ror
adc
bound
clc
add
les
jg
cli
js
dec
aas
das
retf
mov
add
mov
dec
pop
(bad)
push
clc
jp
jo
cld
sub
sbb
shr
mov
sbb
sar
sahf
or
mov
test
fs
fsubrp
adc
add
mov
(bad)
or
test
push
xor
xor
add
mov
mov
add
retf
dec
jae
xchg
mov
add
mov
sbb
enter
jp
sub
inc
outs
push
pop
dec
outs
mov
add
jb
movs
xchg
cmc
retf
bound
push
dec
cmp
sub
sub
fcompp
jbe
sub
mov
out
or
add
imul
or
test
xor
dec
mov
(bad)
imul
repz
imul
(bad)
call
xor
int
daa
pop
sahf
loop
loopne
add
mov
or
out
or
sbb
bound
push
pop
pop
dec
enter
pusha
inc
mov
enter
mov
dec
(bad)
pop
dec
popa
test
enter
les
mov
fwait
add
mov
ss
sub
outs
or
test
pop
adc
xchg
ret
and
into
outs
jle
aad
pop
dec
pusha
scas
mov
mov
jmp
ins
mov
jno
mov
ret
cli
(bad)
shr
iret
jo
jnp
add
mov
test
pop
stc
inc
sahf
fwait
jne
mov
outs
fld
loope
inc
mov
sbb
push
sti
rcr
mov
add
rcl
push
cmc
mov
mov
mov
push
lods
xchg
loop
bnd
push
pop
(bad)
dec
pusha
jne
aas
(bad)
ins
pop
rcl
add
in
pop
xor
pop
jle
loopne
ds
out
cmp
dec
pop
scas
mov
aaa
pop
jns
sub
pop
aas
sbb
cmp
mov
icebp
movs
mov
xor
jmp
lock
lahf
sbb
or
shl
xor
mov
mov
stc
in
push
bound
cmp
and
xchg
cmp
dec
or
imul
aas
xchg
sub
mov
dec
or
and
push
jecxz
ror
push
pop
mul
xor
hlt
pop
sub
sbb
add
repnz
xchg
add
sbb
sahf
(bad)
in
retf
push
mov
repnz
aad
mov
imul
pop
or
sbb
or
mov
xor
adc
into
xor
push
xchg
xchg
dec
and
aad
lahf
mov
xchg
idiv
lods
pop
xor
jne
or
aaa
xchg
aad
adc
mov
mov
jg
add
and
aas
xor
adc
in
call
cmp
mov
push
jl
push
fst
xlat
es
sbb
cmps
test
cmp
xchg
jle
push
fbld
movs
push
test
dec
mov
scas
leave
ds
xchg
into
or
adc
stos
loopne
fimul
inc
ss
pop
fistp
ja
adc
rcr
xchg
mov
call
or
or
push
outs
push
cdq
or
cmc
or
mov
push
sahf
out
adc
ja
jp
xor
dec
loop
(bad)
pop
cmps
mov
add
push
or
sub
enter
(bad)
pop
inc
add
jg
repnz
shl
(bad)
jbe
ret
inc
mov
ds
ins
call
mov
and
mov
imul
sahf
jb
jp
rcl
mov
(bad)
cli
xor
push
jne
dec
jg
xor
xchg
mov
loop
xchg
sub
xor
mov
add
push
and
jno
sbb
cmp
pop
sbb
repz
cwde
ss
out
cmp
inc
je
push
ror
sbb
retf
inc
xchg
mov
fadd
or
es
xor
sub
adc
mov
and
cmp
loop
xor
es
mov
aas
test
mov
int3
cmp
std
xchg
fs
cmp
retf
push
cmp
add
jecxz
sub
(bad)
outs
xchg
outs
fistp
jmp
retf
out
shr
dec
cmp
call
add
lods
and
ins
cmp
stos
mov
loop
or
cli
mov
pop
or
jg
or
cmp
xchg
jmp
pop
adc
or
mov
mov
mov
mov
xchg
loope
or
fld
xchg
adc
mov
pop
pop
test
push
gs
mov
xchg
test
add
sbb
aas
in
xchg
or
fdivrp
push
outs
mov
fwait
bound
mov
jg
scas
rol
push
push
fcmovne
call
sbb
pop
dec
push
mov
movs
and
xor
pop
push
cwde
mov
setb
call
add
ret
mov
jmp
mov
pop
jae
stos
cli
push
inc
mov
js
adc
movs
dec
add
xchg
std
fistp
adc
xchg
movs
int
and
imul
and
aam
inc
sbb
sti
push
bound
ins
mov
mov
and
sbb
xor
xor
mov
push
push
pop
jp
sbb
mov
add
das
cmp
push
fisttp
jmp
rol
iret
test
mov
test
push
dec
mov
ds
repnz
xor
sti
jmp
pop
and
jbe
jno
xchg
xor
js
jbe
and
jmp
cwde
pusha
xchg
icebp
lods
xor
xchg
out
jb
mov
pop
ror
mov
push
shl
mov
mov
ficom
sbb
out
pusha
pop
xchg
mov
mov
mov
int
adc
(bad)
loope
jmp
leave
and
mov
lods
aas
bound
stos
add
adc
adc
inc
or
or
sub
je
loopne
mov
jne
push
std
jp
sbb
or
push
iret
repz
xchg
pop
(bad)
jnp
clc
cli
xchg
fs
mov
test
aas
movs
xor
leave
mov
ror
cwde
sub
cmp
pusha
cld
mov
mov
daa
add
push
sub
repz
das
stc
jb
mov
cwde
lea
adc
jb
loopne
(bad)
ds
add
ret
(bad)
push
adc
dec
and
loope
pop
arpl
jmp
sahf
jns
repnz
push
scas
imul
mov
mov
ret
mov
pop
and
push
ins
ins
cmps
in
repnz
jp
test
daa
push
jb
pop
jbe
push
rcr
pop
sti
xchg
or
or
dec
in
aas
push
mov
xor
add
dec
pop
inc
dec
and
add
jmp
call
xchg
out
sub
dec
xor
(bad)
or
ins
push
shl
jae
adc
mov
daa
popa
data16
imul
scas
fcmovu
(bad)
dec
pushf
push
xchg
cmc
es
add
sub
xor
ret
out
fnstcw
rcl
sahf
cmp
and
inc
es
loopne
xor
fwait
or
mov
ss
push
push
loope
ficom
or
add
es
ins
inc
xor
cdq
sub
and
lea
mov
cmp
or
sbb
and
jo
dec
mov
aas
xchg
fadd
add
and
push
or
adc
mov
or
dec
cmp
mov
icebp
dec
das
xchg
add
jns
clc
and
cmp
out
push
jmp
lea
cmp
and
push
jle
ret
jle
fisub
inc
cdq
popf
mul
aas
push
and
dec
push
jb
jg
pop
pop
movs
dec
fiadd
push
jp
aaa
xchg
(bad)
and
fisub
jmp
xor
mov
iret
sub
inc
sar
aaa
outs
dec
xchg
sar
adc
mov
nop
(bad)
mov
sar
gs
mov
add
(bad)
dec
cmp
add
inc
and
add
xor
repz
sti
push
popa
and
fsubr
call
mov
jg
arpl
ret
lds
jle
dec
dec
test
add
push
ret
mov
movs
adc
xor
mov
pop
ja
or
add
sub
dec
mov
or
cmp
out
add
scas
les
xchg
add
xchg
(bad)
or
outs
fisttp
retf
jge
mov
loopne
out
cld
retf
(bad)
jg
mov
pop
icebp
sbb
enter
jo
or
jecxz
jg
cmp
cwde
ss
and
add
les
cs
pop
push
cmp
imul
xor
inc
inc
inc
dec
cmps
add
push
pextrw
mov
and
lods
dec
cli
jne
mov
shl
pop
mov
jns
outs
maxps
sub
jecxz
dec
(bad)
shr
push
mov
(bad)
into
jp
cmps
test
mov
(bad)
das
mov
outs
xor
xchg
mov
(bad)
jg
pop
and
mov
dec
(bad)
pop
mov
cmp
std
les
ss
pop
arpl
push
mov
xor
(bad)
adc
dec
dec
sub
mov
and
xchg
mov
imul
jp
jmp
inc
out
mov
icebp
call
mov
(bad)
dec
and
fild
fdivr
iret
mov
jp
push
jbe
jecxz
jmp
dec
and
or
sahf
xchg
aad
ins
cmp
and
icebp
cs
jb
add
or
jb
outs
(bad)
outs
inc
cmc
outs
inc
es
mov
pop
push
xchg
and
das
or
add
mov
add
and
xchg
inc
(bad)
jecxz
loop
in
jg
add
pop
pop
fild
jg
scas
add
push
mov
sbb
bound
test
(bad)
lods
jmp
jp
imul
or
push
psubw
out
movs
jmp
lea
push
xchg
inc
cld
xchg
mov
add
jo
inc
and
cmp
push
sbb
mov
jno
fisttp
int3
out
sub
ss
rcl
add
pusha
push
(bad)
lods
pop
(bad)
int3
push
mov
repnz
or
mov
(bad)
push
test
lar
jp
enter
es
jmp
cwde
mov
(bad)
dec
push
not
outs
push
push
sub
dec
dec
icebp
cmp
hlt
in
sub
mov
scas
sbb
sahf
mov
add
push
bound
dec
sub
sti
out
xchg
imul
lea
mov
cmps
jmp
sub
arpl
repz
inc
cmp
sub
loope
cmp
stos
test
xor
push
adc
aas
ins
inc
adc
mov
mov
sbb
jle
adc
outs
mov
inc
in
add
loope
and
ror
(bad)
into
sbb
jns
jp
shr
in
mov
jge
mov
pop
pushf
push
aam
or
dec
out
mov
push
jne
or
test
dec
cmps
mov
sub
loop
sub
jp
mov
dec
sti
sub
fwait
loopne
add
bound
call
mov
sbb
or
inc
cmps
push
xchg
jo
mov
mov
push
dec
and
loopne
fidiv
popa
(bad)
adc
lea
or
sub
nop
pop
sbb
mov
pop
(bad)
in
jg
test
dec
aaa
add
jle
(bad)
jmp
vpmacssdql
push
push
sub
fwait
xor
mov
lds
outs
pop
jmp
inc
sar
stos
add
adc
xor
test
and
jb
cli
mov
push
out
lea
lahf
push
outs
(bad)
mov
fcomp
ja
sub
sbb
aaa
mov
jnp
xchg
cmp
shl
and
shr
jmp
rcr
mov
dec
jmp
mov
loope
mov
push
out
pop
or
lock
les
adc
push
mov
rol
into
ds
inc
rcl
mov
and
stc
add
lods
xor
jle
dec
rcr
stos
pop
inc
and
cmp
ret
cld
xchg
fsubr
adc
(bad)
mov
jae
xlat
shl
inc
int
sub
push
adc
jb
jge
mov
aas
add
jno
adc
xchg
mov
add
mov
(bad)
sbb
int3
inc
cmp
add
ja
sbb
adc
dec
or
aam
sub
bound
pop
adc
call
jns
mov
or
cld
cdq
add
test
mov
mov
add
or
push
fcmovu
daa
sub
mov
add
shl
pop
push
cmp
push
adc
push
js
fcmovbe
sub
xchg
mov
das
dec
fiadd
mov
(bad)
cli
and
imul
cmp
mov
test
mov
imul
call
sub
dec
loop
data16
push
jo
add
call
lock
iret
movs
cmp
jecxz
add
add
in
pop
nop
neg
pop
xchg
cwde
jb
mov
das
push
pop
rcr
mov
aaa
jl
push
dec
mov
test
xor
jmp
call
mov
add
fs
shl
dec
out
or
ret
xor
push
outs
sbb
jecxz
and
pop
push
(bad)
aad
ins
fdiv
xor
add
mov
sub
pop
pop
into
inc
or
adc
sahf
xchg
cmp
cli
movs
(bad)
aaa
cmp
call
adc
test
lods
mov
out
js
repnz
in
imul
jns
cli
or
imul
xor
push
dec
add
cmp
and
pop
mov
sahf
cs
aas
adc
cld
pop
adc
daa
push
pop
mov
jge
and
fld
adc
dec
ret
mov
push
ret
aaa
mov
imul
sbb
jae
add
cmp
in
sbb
xor
jmp
dec
sar
sbb
fcom
retf
xor
daa
fidiv
loop
ret
push
fld
inc
inc
ret
pop
retf
loopne
movs
adc
xor
ret
jnp
hlt
sub
adc
xor
or
xchg
or
ret
ss
mul
xor
cmc
mov
push
xlat
or
xchg
inc
xchg
inc
xchg
inc
lahf
ret
cmp
dec
mov
ret
imul
aas
jmp
sbb
es
add
imul
or
pop
call
in
inc
aad
shl
pop
retf
or
inc
adc
femms
loopne
inc
add
inc
enter
ret
es
ja
fimul
xor
ds
icebp
sbb
loope
push
call
pop
and
jmp
adc
outs
cs
or
or
lea
mov
xchg
pop
xor
sahf
cmp
jp
jb
inc
mov
inc
es
jae
xor
mov
outs
add
or
in
mov
and
repnz
inc
je
lea
push
xor
sub
pop
scas
jp
dec
fwait
xor
test
xor
clc
inc
mov
pusha
pop
shl
ja
fndisi(8087
retf
push
pop
fidiv
push
or
xor
cli
outs
sahf
adc
mov
or
sbb
push
dec
call
push
pop
or
inc
mov
imul
or
mov
push
mov
or
(bad)
push
inc
and
ds
sub
mov
mov
(bad)
jle
mov
inc
adc
push
data16
xor
sar
bound
dec
xor
add
pop
lods
and
and
dec
not
or
arpl
fwait
cli
lahf
mov
pusha
cmp
xchg
cmp
or
or
lahf
pop
lods
adc
lods
pop
or
cmp
add
pop
mov
scas
sbb
mov
push
and
fwait
mov
push
mov
push
ror
pop
xchg
mov
ret
mov
mov
mov
jp
jmp
pusha
pusha
ret
jp
pop
ss
or
pop
imul
aas
aaa
loop
leave
rol
ficomp
mov
ror
inc
pop
(bad)
call
pop
adc
xchg
mov
movs
retf
add
jmp
enter
push
ins
ror
xchg
pushf
pop
dec
jge
sbb
and
push
sbb
mov
pusha
fild
div
dec
jecxz
jp
in
fs
mov
imul
or
xor
push
movs
xchg
inc
mov
clc
inc
cld
cvtps2pd
sub
sbb
or
add
fs
rcr
inc
pop
inc
lahf
xchg
pop
push
dec
cmp
call
pop
int3
iret
adc
push
cmps
ret
jns
mov
sar
pop
ins
jmp
shr
add
stos
lea
xchg
mov
dec
sbb
fwait
add
dec
xchg
repnz
mov
mov
mov
push
or
cmp
adc
pop
push
push
js
fsubp
fild
pop
enter
(bad)
pusha
push
mov
adc
sub
jb
stc
jb
data16
mov
xchg
popf
mov
or
outs
jo
bound
inc
xchg
ud1
xlat
aaa
bound
mov
adc
dec
jmp
inc
pop
adc
cmp
(bad)
jle
add
jmp
sbb
jp
mov
and
(bad)
es
adc
rol
add
push
jmp
clc
xchg
popf
arpl
pop
push
jge
mov
mov
inc
jecxz
retf
mov
imul
sub
inc
test
pop
rcl
and
ja
push
outs
push
cs
(bad)
push
fisubr
pop
pop
push
mov
sub
push
jg
inc
mov
push
pop
push
cmp
add
jbe
(bad)
xor
cdq
cmps
add
neg
aas
jmp
or
mov
cmp
cs
loope
dec
push
lods
xchg
mov
ins
(bad)
pop
lock
adc
pop
leave
cli
(bad)
aas
push
shl
and
js
movs
adc
or
mov
mov
out
stos
dec
jecxz
cmp
ror
jmp
mov
inc
outs
cwde
inc
lds
jns
loope
ret
loop
cmp
inc
(bad)
sub
into
push
add
inc
mov
jbe
dec
xchg
adc
(bad)
jl
mov
mov
clc
sub
or
cmp
adc
jb
jns
mov
push
sbb
pop
imul
inc
inc
pop
push
pop
or
mov
push
push
adc
ins
inc
test
jns
dec
data16
fcom
and
popa
jmp
mov
xchg
mov
daa
pop
jb
adc
cli
call
fwait
dec
(bad)
cmp
call
pusha
mov
icebp
push
rcr
add
or
mov
sub
xchg
imul
mov
rol
mov
ror
pop
(bad)
mov
xchg
push
xor
pop
sbb
add
sahf
in
arpl
mov
push
shl
push
in
std
retf
(bad)
sbb
mov
and
fisttp
dec
xor
mov
inc
inc
mov
dec
ins
jecxz
push
push
cmp
das
test
and
inc
fldenv
dec
inc
inc
out
inc
add
cmp
dec
loop
sbb
mov
(bad)
and
and
pop
and
jo
ret
imul
aaa
sub
movs
outs
push
xor
aaa
xchg
leave
xchg
jnp
into
xchg
fstp
push
dec
loop
mov
test
(bad)
shl
sbb
pop
inc
(bad)
stos
rcr
int
arpl
mov
scas
(bad)
sbb
imul
sahf
or
sbb
xor
pop
call
push
and
mov
xchg
loop
js
mov
push
clc
xchg
cld
retf
popf
mov
nop
popa
push
adc
outs
xchg
mov
repnz
inc
and
cmps
inc
mov
cmp
in
pop
(bad)
sbb
dec
adc
mov
add
movs
pop
and
and
loope
adc
pop
test
sub
mov
jb
clc
adc
hlt
fs
xchg
dec
scas
xor
dec
cmps
in
or
mov
in
int
das
cmp
clc
inc
mov
test
test
mov
cmp
loope
lods
(bad)
arpl
(bad)
icebp
cmps
rcl
sbb
pop
in
xchg
dec
add
scas
xchg
jg
dec
or
ss
mov
or
stos
or
add
push
mov
imul
das
sub
ins
inc
pop
cli
dec
mov
out
arpl
jecxz
ficomp
pusha
stos
call
add
mov
sub
daa
lods
adc
pop
mov
fst
dec
and
pop
scas
and
mov
outs
cmp
sar
and
cmp
pusha
push
add
xor
adc
out
mov
sbb
dec
pop
mov
push
add
and
(bad)
jg
adc
sbb
cmp
adc
jno
xor
pop
push
(bad)
jg
pop
push
call
pop
bound
dec
pop
sar
icebp
outs
leave
jl
(bad)
popa
jmp
out
xchg
and
sbb
xchg
aas
mov
push
wbinvd
sbb
xor
adc
mov
push
mov
inc
stos
shr
leave
(bad)
ret
sbb
mov
push
dec
push
shl
mov
mov
adc
jmp
add
cmp
adc
cmp
mov
lahf
pop
add
add
clc
test
sub
adc
hlt
lods
mov
or
mov
add
test
out
rol
das
loope
test
sub
or
in
stos
call
shr
cmp
adc
bound
pop
mov
dec
or
es
sar
aad
xor
stc
sti
imul
sub
push
mov
mov
mov
icebp
ja
loop
shr
lods
(bad)
sub
dec
mov
fwait
add
pop
lea
enter
sbb
dec
mov
sbb
mov
mov
jl
loop
(bad)
push
outs
xor
pop
rol
push
stos
and
data16
retf
stos
fdivr
mov
mov
fcom
inc
xchg
pop
sub
pop
sar
stos
add
pop
pop
sub
sub
add
and
pusha
or
push
aas
dec
inc
mov
mov
sahf
jmp
shld
cmp
mov
xchg
dec
add
ss
push
repnz
aam
pop
mov
inc
loopne
add
sti
mov
test
cmp
aas
sbb
mov
cmp
add
add
bound
fild
jmp
(bad)
mov
or
call
mov
ds
leave
pop
push
lea
loop
pop
xchg
in
add
push
inc
test
mov
pop
shr
and
add
push
mov
ret
sbb
leave
call
cmc
dec
cmp
adc
mov
push
(bad)
outs
push
mov
or
pop
jbe
outs
mov
pop
push
jo
fwait
mov
cmp
jne
dec
pop
add
into
or
xor
cli
dec
mov
out
out
shl
cmp
and
pop
fnstcw
and
sub
lock
jb
test
imul
jbe
and
shl
dec
dec
or
pop
adc
fcomip
xchg
(bad)
pop
rcr
retf
daa
inc
scas
cli
iret
adc
pop
cmp
pop
dec
jle
jge
retf
inc
and
push
dec
and
scas
add
loop
mov
add
(bad)
cmp
jle
or
or
es
das
add
enter
xor
pusha
xchg
sub
fidivr
(bad)
jmp
push
pop
jl
jl
cmp
mov
shl
cmp
popa
push
jns
fld
scas
push
mov
push
adc
inc
mov
pop
lea
sub
cmp
sahf
or
inc
aas
push
add
xchg
inc
and
push
and
fs
or
scas
cdq
lahf
outs
pushf
movs
xor
daa
pushf
pop
mov
(bad)
jp
sbb
mov
and
leave
or
(bad)
jmp
sub
aam
lock
add
add
add
dec
sbb
and
inc
data16
push
mov
test
sbb
mov
dec
jmp
sub
in
packssdw
adc
push
jne
xchg
mov
sbb
loopne
inc
and
jg
iret
add
xchg
sbb
fild
mov
sar
call
ret
lods
(bad)
inc
add
cmps
sbb
push
stos
icebp
adc
popa
dec
pop
push
call
addr16
jp
icebp
retf
rcr
and
pop
fs
inc
imul
xlat
into
dec
sub
gs
cmp
cmp
dec
xchg
mov
mov
dec
ror
cld
out
adc
fisttp
sbb
pop
xchg
pop
and
mov
scas
dec
xchg
mov
sub
cs
sar
and
inc
in
mov
ins
adc
adc
xchg
xchg
xchg
jp
cmp
ret
test
sbb
out
pushf
js
ret
ror
xchg
inc
mov
iret
(bad)
es
vmwrite
mov
add
(bad)
dec
jp
push
jbe
pushf
mov
mov
cmp
int3
dec
mov
push
les
mov
daa
add
jo
jp
pop
xchg
(bad)
loopne
ja
jmp
mov
sub
mov
sub
gs
iret
and
and
dec
add
sbb
mov
mov
mov
sub
bound
cmc
mov
pop
jmp
aas
in
pop
(bad)
test
cdq
imul
in
adc
cmp
pop
xchg
mov
stos
mov
xchg
or
dec
ret
push
shl
fcom
lahf
addr16
cmps
int3
xchg
push
mov
cmp
aaa
pop
pop
jno
dec
bound
lea
and
push
mov
dec
mov
push
cmp
jne
mov
das
sar
jle
mov
dec
fistp
mov
repz
sub
(bad)
inc
gs
icebp
dec
jmp
ins
outs
pop
and
sbb
or
jp
sti
mov
adc
mov
jb
adc
addr16
inc
imul
dec
inc
mov
clc
mov
dec
aas
bound
sub
(bad)
mov
pop
sbb
sbb
mov
mov
test
and
mov
pop
neg
adc
jmp
mov
(bad)
fwait
inc
int3
mov
cli
inc
mov
pop
lods
push
add
call
or
nop
(bad)
xchg
lods
mov
iret
push
add
add
in
or
pop
xchg
mov
push
mov
in
mov
mov
pop
xchg
movs
shl
and
lahf
pop
rcl
mul
mov
add
sahf
cmps
pusha
dec
mov
mov
into
aam
dec
push
pop
cld
mov
shl
fwait
out
cli
(bad)
aas
push
out
in
outs
inc
(bad)
xor
and
dec
mov
ss
(bad)
sub
adc
das
inc
sbb
mov
sub
sbb
xor
push
add
test
inc
add
data16
sbb
jmp
pusha
fld
dec
jmp
mov
lods
lds
pop
inc
and
(bad)
xchg
retf
cmps
icebp
mov
outs
cmp
iret
fisub
outs
jle
leave
sti
pusha
and
mov
push
mov
jge
test
mov
adc
jo
adc
or
push
in
bound
cmps
sub
lahf
outs
mov
and
test
sbb
dec
cmp
popf
(bad)
call
pop
(bad)
into
out
xchg
sbb
xchg
cmp
std
imul
pop
dec
push
in
std
pop
jg
add
jnp
dec
inc
mov
jp
pop
rcr
jp
(bad)
or
push
rol
(bad)
es
out
xor
fwait
or
pusha
xchg
adc
lods
pop
jmp
inc
dec
out
fmul
pusha
or
dec
adc
scas
into
jl
stos
inc
xchg
mov
inc
arpl
inc
push
mov
loopne
add
push
movs
mov
loope
xchg
ss
pop
pushfw
xchg
dec
pop
jge
add
push
retf
dec
loopne
pusha
loopne
or
ds
push
dec
pop
fdivr
fist
ins
mov
cmp
ins
movs
ss
shl
clc
rol
dec
(bad)
iret
neg
push
add
add
addr16
mov
jmp
aas
add
mov
iret
mov
aaa
sbb
push
mov
pop
ins
cmp
add
pop
cmp
jbe
mov
das
push
jne
(bad)
aas
add
sbb
push
push
cmp
xchg
into
mov
or
push
dec
es
(bad)
out
xor
test
es
aaa
fdiv
jmp
movs
mov
pop
pavgb
(bad)
clc
cmps
push
pusha
scas
or
and
pop
adc
jb
mov
push
retf
out
adc
dec
xor
arpl
jle
test
inc
js
dec
push
inc
mov
je
xchg
dec
lds
sub
push
mov
imul
hlt
aaa
inc
sbb
sbb
shl
retf
cmp
sub
dec
mov
add
dec
jno
adc
sub
adc
(bad)
fnstenv
push
call
ins
rol
les
push
int3
outs
xor
sahf
pop
inc
inc
push
jg
jb
mov
sbb
push
outs
ja
jo
cmp
mov
push
data16
hlt
sub
jb
push
adc
dec
cmp
fnstenv
xor
test
mov
(bad)
xchg
adc
fist
out
fist
inc
mov
add
cmp
hlt
shl
jns
push
shr
dec
or
sbb
xchg
jp
mov
shr
shr
aam
jge
rol
fimul
push
mov
mov
(bad)
add
in
imul
and
xchg
mov
jg
cmc
xchg
jmp
inc
pop
inc
add
xor
fld
js
inc
adc
(bad)
push
cld
jl
xor
imul
ins
ret
aaa
dec
or
imul
xchg
ss
adc
(bad)
or
das
adc
aas
adc
dec
pop
xor
push
pop
mov
add
pop
mov
mov
push
(bad)
ja
or
gs
push
ret
push
(bad)
lods
call
and
jns
stc
cwde
in
(bad)
adc
cmp
in
xchg
outs
shr
(bad)
cmps
adc
jg
dec
cmp
imul
imul
dec
(bad)
dec
daa
stos
les
xchg
dec
data16
or
aas
jmp
or
call
mov
jl
ret
mov
mov
dec
add
pop
mov
inc
adc
sbb
cmp
mov
mov
stos
push
add
icebp
(bad)
jge
inc
inc
pop
push
push
and
inc
enter
daa
push
movs
jno
sbb
rol
daa
add
test
imul
push
sar
pop
mov
dec
push
adc
push
jbe
cmc
call
sti
pop
movs
leave
xchg
push
cmps
es
cdq
push
pop
mov
cmp
mov
into
rol
add
push
mov
inc
or
div
adc
dec
das
mov
pop
or
aam
inc
out
jmp
dec
mov
ds
scas
xor
add
mov
push
add
mov
(bad)
xchg
mov
repnz
push
cmp
jmp
(bad)
sub
adc
or
dec
jb
jp
xchg
push
ja
aaa
fcmovne
jmp
in
iret
mov
cmc
bound
cmc
dec
jmp
movs
leave
inc
outs
mov
cmp
or
inc
jle
enter
out
push
outs
fcmovb
(bad)
int3
inc
add
(bad)
cmp
adc
or
aaa
sbb
mov
out
ins
int
dec
shl
xchg
stos
inc
mov
pop
sub
call
pop
mov
mov
add
ret
les
sti
lea
pop
add
enter
adc
mov
xlat
mov
cli
rcr
ret
out
pop
shr
fmul
test
xchg
and
mov
fadd
jmp
repz
mov
mov
add
pusha
rcr
ror
add
xchg
mov
push
js
push
add
or
sub
add
cs
ins
std
add
fs
ds
xchg
and
inc
sub
js
xchg
mov
jne
xor
cmp
fs
mov
xchg
sti
popf
ins
adc
push
jecxz
repz
pop
nop
push
out
ds
push
lahf
(bad)
(bad)
jg
jno
call
pop
cmp
cmps
dec
call
xchg
ss
dec
ins
shl
adc
bound
add
aaa
sub
aaa
jne
sub
imul
push
add
lock
call
iret
rcl
push
add
jmp
or
add
or
retf
jg
jbe
pop
and
pusha
jno
xor
adc
inc
ror
movs
xor
add
pop
ds
mov
jmp
sub
out
push
pop
cmp
ficom
adc
mov
ror
outs
bound
arpl
aas
mov
dec
icebp
jmp
imul
enter
mov
ins
bound
xchg
sub
and
mov
dec
imul
pop
xchg
pop
imul
mov
bound
or
xchg
inc
cli
xchg
movs
cmovae
pop
mov
mov
pop
das
lock
es
mov
mov
cdq
mov
lds
xor
dec
jne
pusha
call
into
aaa
or
shr
sub
dec
out
loope
fiadd
cdq
mov
or
xchg
sbb
adc
or
and
mov
hlt
(bad)
retf
pop
jne
and
inc
pop
hlt
(bad)
cmps
cmps
add
push
add
inc
fwait
sub
cmp
cs
pop
sbb
mov
js
add
jg
push
(bad)
add
ds
mov
add
ss
mul
ins
cmp
mov
add
jae
pop
leave
stc
inc
cmp
cmc
jbe
ficom
jno
call
or
cmp
bound
mov
pop
sbb
(bad)
mov
lahf
int
push
xchg
cs
cld
cmp
loop
es
(bad)
in
pop
cli
cs
adc
add
jbe
xor
mov
cmp
test
xchg
loopne
sar
outs
ds
or
mov
pop
add
sbb
(bad)
cs
fcomip
adc
leave
jmp
cs
mov
neg
push
cmp
mov
and
(bad)
out
lahf
push
sbb
sbb
es
mov
call
xor
mov
scas
inc
and
mov
repnz
pop
dec
mov
adc
fidivr
or
sbb
mov
rol
push
in
pop
imul
ins
mov
adc
lods
je
push
test
mov
push
loopne
sar
inc
xor
push
push
jmp
add
aaa
(bad)
outs
push
cli
dec
arpl
mov
or
rcr
fiadd
or
inc
add
popa
cmp
out
loopne
fs
pop
outs
cld
in
pop
loope
dec
push
add
push
or
inc
ret
call
push
aas
call
sbb
(bad)
push
lods
mov
nop
sbb
dec
sbb
ins
mov
xor
xor
push
cmp
(bad)
rol
jg
es
leave
(bad)
push
cmp
(bad)
test
pop
out
mov
sbb
mov
fiadd
sahf
cmp
and
jne
clc
outs
sbb
ss
sub
inc
mov
push
add
cmp
jl
push
(bad)
sbb
adc
mov
ret
mov
or
dec
aam
out
mov
sub
mov
mov
push
cmp
and
inc
pop
gs
add
push
sar
push
mov
xchg
pop
outs
cld
sub
jge
test
je
imul
test
call
es
mov
shr
mov
retf
dec
xlat
xor
sbb
inc
cwde
inc
test
inc
popa
out
pop
out
jle
mov
xchg
sub
test
adc
ins
mov
pusha
ins
(bad)
push
aaa
popf
sbb
inc
xor
je
push
jnp
inc
call
or
mov
pop
jbe
daa
dec
add
cmp
add
dec
pop
pop
jmp
xor
test
mov
out
and
or
jecxz
cs
pop
push
sub
arpl
add
adc
and
rcl
jmp
push
sahf
add
mov
jle
xchg
push
cmps
fbld
mov
hlt
mov
mov
popa
jbe
or
test
pop
pop
fdivp
mov
and
das
xchg
in
mov
or
mov
cs
inc
mov
mov
push
and
jb
ss
xchg
jmp
mov
pop
ds
jae
cs
jb
adc
test
mov
addr16
xchg
out
sbb
or
xchg
sar
mov
add
cmps
pop
scas
mov
dec
sub
cmp
cmps
mov
mov
icebp
in
hlt
aaa
(bad)
pop
call
push
mov
adc
adc
xor
in
setg
sub
call
loopne
mov
dec
(bad)
xlat
ja
sbb
mov
pusha
pop
xor
pop
mov
and
cli
pop
dec
jb
pop
push
fwait
retf
inc
dec
leave
dec
pop
lahf
pop
add
fwait
cmp
push
mov
mov
std
dec
and
repnz
out
or
mov
call
loope
jp
xchg
mov
push
cli
xor
cmp
rol
mov
inc
inc
es
jbe
imul
pop
shl
dec
shr
adc
inc
or
(bad)
or
sbb
jg
push
aam
int
dec
sub
mov
mov
push
sbb
sub
mov
in
out
ret
shr
xor
call
ja
imul
adc
inc
in
sbb
cmp
adc
das
and
ret
daa
cmp
outs
popa
mov
rol
jbe
fiadd
pop
mov
dec
inc
pop
xchg
push
(bad)
fidivr
sbb
or
mov
inc
div
jb
mov
mov
mov
aaa
mov
and
jmp
add
adc
mov
pusha
add
and
pop
or
sbb
loop
out
ret
lahf
ss
xor
cmp
enter
xchg
outs
pop
stc
cmp
inc
mov
push
adc
dec
pusha
cmps
sub
dec
fucompp
aaa
test
push
or
or
retf
mov
adc
adc
mov
jl
mov
pop
jnp
push
mov
and
jnp
pop
mov
daa
fcom
jne
repz
sbb
cmps
inc
(bad)
pop
pop
push
js
dec
add
inc
stos
push
push
inc
xor
mov
cli
jp
push
test
xor
sub
mov
jg
inc
je
nop
retf
test
in
inc
cli
ja
pop
dec
and
or
ficomp
fild
push
retf
mov
(bad)
sbb
push
fwait
add
out
xor
sbb
leave
cmp
inc
sub
push
cld
dec
(bad)
call
dec
dec
xor
mov
out
mov
pushf
sbb
ins
call
fdiv
ror
fist
imul
dec
jne
ret
nop
call
aad
push
add
pop
jle
inc
add
daa
cs
push
pop
pushf
jp
jl
or
or
push
bound
xor
and
pop
lods
mov
xor
imul
in
inc
repnz
mov
loop
test
sub
add
ror
pop
jp
idiv
dec
or
adc
rol
scas
or
lock
retf
fistp
and
inc
wbinvd
adc
sub
mov
add
pusha
sahf
loopne
sbb
add
sub
or
pop
push
and
mov
or
jnp
(bad)
cmp
pop
jnp
add
loopne
pop
push
xlat
mov
xchg
bound
xor
out
mov
mov
aaa
sub
fild
ja
repnz
int
shr
int3
mov
pusha
cmp
test
rcr
pop
push
jb
adc
add
mov
add
inc
jmp
adc
dec
xchg
fidiv
shr
cld
dec
add
xchg
shl
dec
add
push
lea
pop
adc
pop
hlt
sbb
jl
or
(bad)
imul
test
fwait
mov
lea
mov
push
mov
mov
lahf
test
cdq
mov
xor
inc
add
loop
test
idiv
xchg
pop
mov
jmp
xchg
ds
fwait
mov
psubsw
pop
call
(bad)
out
mov
pusha
xchg
mov
fbld
and
pushf
aas
pop
test
loope
xor
xor
bound
push
fnstcw
push
bound
xchg
push
cdq
(bad)
fadd
pusha
pop
pop
scas
mov
lahf
repnz
xor
pushw
jmp
sar
(bad)
arpl
mov
dec
movs
cmc
pop
add
test
iret
retf
stos
cmps
sub
mov
mov
mov
jb
mov
inc
mov
imul
fisttp
jbe
pop
dec
mov
sbb
adc
sbb
scas
rcr
clc
scas
les
call
add
push
pushf
sbb
dec
test
mov
dec
sahf
inc
sbb
pop
xchg
(bad)
mov
fstp
repnz
sub
dec
lea
bnd
lea
push
fisttp
adc
bound
mov
mov
xchg
retf
sub
cmp
inc
cs
mov
or
jo
mov
retf
sbb
mov
and
or
les
sar
outs
adc
aad
call
ret
pop
adc
test
movs
call
pop
ds
push
movs
dec
push
lahf
inc
sti
(bad)
in
mov
ficomp
inc
gs
xchg
or
pop
mov
mov
or
cmp
sbb
call
lahf
mov
sbb
lods
jmp
retf
lods
xchg
dec
por
cmp
icebp
pop
gs
mov
push
or
cs
push
add
adc
sbb
xor
pop
lods
dec
push
call
movs
pushf
out
pop
and
jg
pop
(bad)
(bad)
(bad)
je
sahf
stc
rcl
fstp
stc
sbb
add
cli
jmp
mov
aaa
adc
push
adc
and
mov
jmp
pop
xchg
aas
movs
call
inc
out
inc
test
js
shl
imul
pop
aas
inc
lea
pop
scas
xor
inc
pop
(bad)
imul
sub
mov
jp
inc
push
jb
mov
xchg
or
rol
in
outs
dec
mov
addr16
fisubr
ret
or
in
push
in
clc
aad
sub
xchg
mov
dec
call
dec
rcl
push
fimul
mov
xchg
mov
inc
jmp
popa
in
fstp
int
js
lods
xor
mov
jmp
dec
das
mov
leave
out
fld
or
into
xchg
pop
test
xchg
mov
push
js
and
add
add
mov
or
cmp
loop
add
jmp
jl
retf
out
mov
ds
cs
in
dec
test
add
push
(bad)
movs
adc
imul
mov
pop
cmp
add
jmp
cs
or
mov
xchg
and
lock
jnp
jl
adc
fistp
sbb
mov
call
push
xchg
mov
loopne
mov
mov
or
add
imul
pusha
jae
jns
push
xchg
add
pop
add
pop
or
jb
and
pop
push
inc
mov
sub
and
(bad)
das
and
aas
adc
sbb
(bad)
pop
jmp
popf
cli
mov
cs
out
pop
xchg
test
(bad)
jbe
cld
in
mov
movs
sahf
daa
fld
jg
inc
fs
mov
push
dec
(bad)
push
or
jmp
daa
test
add
addr16
in
scas
mov
fistp
mov
cmp
mov
sbb
pop
fimul
adc
xor
scas
push
lds
or
inc
js
cmp
jg
js
mov
jecxz
(bad)
mov
call
sub
pushf
sbb
adc
popf
push
push
cs
aas
sbb
enter
adc
jecxz
dec
xchg
retf
out
jmp
loop
cld
push
sbb
xor
lea
jecxz
jne
ds
mov
fs
xor
sbb
sub
pop
lea
fs
loopne
ds
mov
inc
and
leave
std
ins
dec
xlat
iret
xchg
xor
adc
and
xchg
cmp
xchg
dec
pop
les
imul
cld
push
or
push
adc
sbb
xchg
add
and
jne
dec
xchg
(bad)
push
daa
jae
ds
sbb
sub
sub
leave
jmp
and
inc
mov
cdq
add
sbb
adc
mov
rol
jmp
and
loopne
mov
push
or
hlt
setnp
movs
dec
repnz
push
mov
add
lea
shr
in
or
adc
ds
and
dec
retf
outs
and
mov
xchg
cdq
jb
add
lds
inc
push
push
add
jmp
add
cmc
aaa
ret
or
adc
pop
xchg
adc
movs
jmp
data16
dec
push
sub
dec
pop
inc
sbb
push
mov
shr
or
jmp
pop
sbb
outs
jbe
imul
or
xchg
retf
ds
icebp
out
aam
mov
mov
and
jnp
inc
mov
scas
fnstcw
gs
inc
or
xor
or
sub
dec
dec
out
or
outs
inc
push
and
push
rol
mov
adc
popa
pop
das
test
loop
call
dec
cmps
rcl
out
add
test
add
sti
xchg
ror
or
cs
add
ds
bound
mov
pusha
dec
xchg
jg
int
mov
sbb
mov
(bad)
cs
inc
loop
cmp
and
mov
mov
xchg
mov
and
xchg
sbb
(bad)
mov
clc
(bad)
iret
mov
or
sbb
inc
jmp
imul
ds
imul
sub
cmp
pop
clc
add
lahf
inc
js
sbb
lods
sub
shl
inc
mov
jg
cli
cmp
out
add
pop
aad
mov
and
jb
sub
mov
ret
and
add
push
nop
or
dec
mov
push
xchg
out
pop
add
imul
mov
xchg
jae
jnp
fisub
inc
aas
dec
movzx
jo
jne
pop
stos
mov
push
mov
int
or
push
jmp
mov
aas
push
(bad)
in
outs
sub
mov
out
jns
(bad)
(bad)
mov
pop
outs
popa
jae
sub
mov
(bad)
sub
ins
adc
sbb
and
in
(bad)
fisubr
lahf
adc
inc
and
inc
les
out
mov
jg
sbb
mov
iret
sahf
test
fstp
jmp
mov
push
(bad)
ror
movs
pop
mov
shl
aas
int
dec
into
pop
mov
jb
repnz
push
jge
les
imul
dec
mov
jmp
(bad)
shl
pushf
sbb
outs
stc
lahf
dec
sbb
and
sub
cmc
mov
jmp
push
and
xor
outs
mov
sar
add
sub
dec
cmp
mov
add
mov
xchg
mov
lods
out
outs
bound
pop
mov
aad
ins
std
loope
mov
xor
add
(bad)
je
popf
(bad)
inc
frstor
adc
retf
addr16
push
pop
fcmovb
aam
js
inc
mov
push
cmps
loopne
push
mov
(bad)
outs
pop
pop
ins
fsubrp
jle
addr16
dec
aaa
das
and
pop
enter
cwde
mov
add
mov
mov
mov
cli
dec
sub
rcl
imul
add
lock
jb
pop
mov
sbb
jmp
xor
psubsw
sub
sub
rol
loop
int
rcr
pop
xchg
cmp
mov
lea
lahf
xchg
sub
dec
mov
(bad)
jmp
test
xor
ins
jae
fadd
aas
adc
cmp
out
add
add
mov
xor
xor
(bad)
cmp
push
lahf
cmp
outs
dec
clc
push
cmp
mov
imul
fistp
jg
jp
mov
xchg
xchg
popa
cmps
outs
or
cmp
dec
ret
xor
add
(bad)
mov
dec
dec
mov
add
test
jle
jecxz
pop
(bad)
lods
dec
dec
mov
out
add
das
pop
es
dec
fs
or
dec
fwait
cli
pop
inc
cmps
test
mov
cmps
cli
call
jge
add
mov
cmp
push
mov
test
and
mov
or
nop
push
pusha
popf
ret
jb
icebp
mov
xchg
mov
loop
sbb
sti
js
add
adc
add
sbb
add
mov
(bad)
repnz
pop
cmp
lods
aas
dec
std
xchg
ds
dec
imul
fstp
scas
jecxz
pop
mov
imul
mov
xor
push
pop
or
inc
loopne
xor
dec
mov
jg
sub
jnp
iret
push
push
cmp
add
ucomiss
dec
mov
cmp
outs
sbb
sbb
lods
mov
or
mov
ror
mov
mov
dec
outs
stos
adc
ins
dec
mov
(bad)
int
popf
add
push
repnz
mov
daa
stc
repz
xchg
imul
sbb
mov
aam
mov
pop
dec
mov
movs
mov
pusha
ret
adc
xor
push
rol
cmp
out
jmp
fldcw
xor
jbe
jmp
inc
lods
xor
enter
aad
mov
cmc
clc
push
or
or
add
adc
adc
ror
or
(bad)
(bad)
(bad)
mov
pop
sbb
fild
jne
adc
ss
or
das
cwde
jg
jo
das
jbe
sbb
or
pop
dec
(bad)
(bad)
fcomip
ds
lahf
mov
pop
pop
jbe
inc
and
inc
dec
sbb
inc
cmp
add
lea
push
jne
je
ss
lock
mov
and
call
pop
dec
ds
add
call
add
leave
jle
push
mov
or
jae
fadd
out
gs
push
add
sbb
(bad)
xchg
icebp
inc
adc
sub
adc
sbb
mov
push
lahf
dec
lock
mov
xchg
(bad)
xchg
std
mov
lods
lods
mov
test
pop
or
dec
ror
movs
aas
enter
adc
push
add
retf
int3
xchg
out
add
fist
ja
sar
repz
adc
adc
xchg
dec
fs
cs
xor
push
dec
xchg
xor
inc
dec
repnz
mov
add
mov
sar
pusha
jbe
inc
cdq
les
leave
sahf
(bad)
call
inc
scas
cmp
cwde
jb
adc
add
cmp
jno
out
pop
call
mov
dec
inc
inc
pop
daa
daa
test
cli
or
push
inc
pop
inc
mov
mov
cdq
scas
or
out
xchg
ror
add
pop
(bad)
dec
test
sub
push
push
cmp
push
mov
mov
mov
and
add
loope
push
jmp
mov
jbe
pop
dec
jecxz
call
mov
push
jbe
(bad)
xchg
out
sbb
or
xchg
push
sbb
push
pop
cmp
push
jle
bound
movs
xchg
mov
aas
ins
xor
push
push
call
loop
stos
arpl
fld
push
xchg
push
cld
mov
mov
push
imul
dec
jmp
add
dec
mov
call
inc
and
add
ficom
out
adc
mov
add
clc
fistp
mov
push
adc
jae
mov
bound
mov
pop
mov
xlat
iret
mov
jmp
jmp
jns
(bad)
loope
pop
sub
pop
adc
rcr
ror
cmp
or
movs
cmps
cmp
push
call
(bad)
jno
jo
xchg
test
shl
enter
popf
xchg
add
dec
cmp
cmp
cmp
into
mov
rcl
mov
ja
push
ret
cmp
or
xchg
repnz
jmp
xor
sub
sub
push
movs
mov
or
inc
jmp
(bad)
aam
(bad)
sub
inc
pop
movs
(bad)
sbb
bound
cmp
jg
pop
mov
fisttp
mov
xchg
xor
dec
test
push
call
xor
mov
xchg
lods
inc
mov
jg
es
ret
mov
push
popf
rol
fdivr
in
jae
mov
dec
adc
add
xchg
pop
fwait
and
nop
or
sbb
inc
cs
lock
push
cmp
jne
sbb
jg
popf
add
cmp
jl
sub
into
pop
sbb
(bad)
mov
sahf
aaa
push
fwait
push
arpl
shr
repz
lea
add
aad
adc
je
inc
jbe
cmp
aas
mov
shr
pop
or
add
dec
jmp
pop
add
test
fldcw
mov
cmp
pop
cmp
cmp
stos
test
mov
loopne
or
std
add
sub
loope
push
in
dec
ret
cmp
inc
add
adc
lock
pop
push
push
xchg
push
ret
sbb
and
inc
or
push
cmp
retf
mov
ror
popf
or
jl
imul
or
adc
mov
ds
cmp
push
inc
scas
aas
ins
lods
popa
jle
add
or
pop
mov
mov
ja
adc
imul
inc
mov
call
inc
adc
pop
push
lods
mov
ins
xor
push
cmp
xchg
stos
imul
add
add
arpl
dec
inc
pop
adc
enter
dec
out
(bad)
rcr
xchg
sbb
scas
and
add
xor
hlt
inc
push
adc
push
in
and
jecxz
inc
lea
jmp
shl
mov
lock
sbb
pop
ret
into
je
or
jmp
sub
mov
cdq
add
icebp
mov
ins
ss
shl
or
ret
popf
fsubrp
rcr
lds
mov
mov
pop
mov
fisub
sbb
sub
mov
jbe
mov
pop
and
adc
cld
adc
cmp
push
and
dec
fidivr
test
data16
iret
mov
jbe
mov
adc
lahf
mov
mov
(bad)
cdq
or
xor
adc
pop
pop
dec
and
jg
stos
pop
push
mov
jno
popa
and
pop
push
mov
inc
push
sbb
cmp
xor
add
lods
call
or
adc
jle
pop
sub
sbb
sbb
adc
mov
inc
or
fsubr
cmps
sbb
into
and
cmp
ss
inc
ret
and
xor
inc
call
(bad)
jae
jecxz
jecxz
cmp
cs
shr
cmp
mov
add
sbb
(bad)
sub
retf
sahf
mov
cmp
add
push
mov
adc
imul
sbb
push
aaa
icebp
jecxz
rol
or
data16
or
sub
es
les
inc
(bad)
(bad)
das
inc
add
outs
pop
(bad)
iret
bound
ins
ds
(bad)
call
mov
xor
dec
add
jle
and
add
pop
add
pop
adc
xchg
sub
jle
and
call
fild
and
call
into
in
lds
xor
mov
cmp
jg
test
sub
push
shl
fild
retf
push
das
ja
popa
inc
sbb
cmp
dec
cs
fs
push
aas
je
aas
pop
test
push
cmovbe
dec
shl
sar
out
imul
xchg
scas
dec
sub
push
add
clc
outs
add
popa
test
(bad)
lock
add
inc
and
mov
iret
sbb
dec
pop
cli
push
dec
loope
dec
or
push
push
mov
inc
sbb
push
xchg
cmp
xor
retf
icebp
and
push
adc
jle
and
jg
push
loope
add
js
dec
clc
sub
adc
movs
popf
sub
arpl
fild
jnp
or
sbb
out
aam
shr
out
xlat
mov
outs
fiadd
xchg
imul
fadd
sbb
sub
mov
pop
addr16
(bad)
mov
cmp
pop
das
jg
inc
xor
psubsb
push
call
dec
lahf
add
mov
scas
and
xchg
pop
pop
add
xlat
mov
cmp
push
dec
push
or
adc
(bad)
jmp
push
xor
cmp
or
cs
xchg
icebp
push
inc
rol
cdq
or
push
pop
movs
and
cmp
pop
or
scas
imul
sub
lea
outs
ret
ins
out
jb
push
shr
mov
aam
mov
fst
mov
xchg
or
mov
mov
add
mov
fld
jl
mov
cdq
ss
popf
ins
xchg
or
pop
rcl
lock
(bad)
dec
pusha
mov
pop
mov
bound
add
ss
add
adc
xchg
push
mov
and
xchg
inc
lds
dec
ror
jmp
or
imul
adc
pop
inc
cmp
xor
push
xchg
mov
and
push
cmp
ss
das
xor
cmp
sar
aad
xchg
call
jb
retf
push
loop
fldenv
cmps
ficom
inc
inc
pusha
mov
push
in
sub
(bad)
loop
pop
add
push
pop
pop
dec
movs
pop
retf
addr16
add
call
and
cmp
stos
jecxz
cld
data16
mov
adc
out
fild
jns
push
in
and
arpl
pop
pop
and
sbb
(bad)
ds
jns
jmp
add
add
inc
cmps
push
iret
mov
mov
mov
out
and
jle
and
ins
inc
cmps
add
jle
imul
jmp
shl
mov
pop
mov
out
jge
add
out
in
inc
pop
adc
jle
jp
push
cld
xchg
push
add
call
into
iret
sbb
push
sbb
add
inc
or
add
or
mov
push
xchg
pop
sub
data16
fld
neg
sahf
lods
sar
jmp
adc
xchg
ret
mov
retf
imul
mov
dec
in
inc
push
mov
push
add
lahf
ret
add
dec
jl
adc
adc
movs
jmp
add
stos
lea
call
pusha
out
or
jmp
mov
pop
clc
push
mov
sbb
and
and
(bad)
addr16
rcr
push
ins
mov
inc
(bad)
mov
es
dec
jne
inc
(bad)
cmp
ins
cmp
xchg
or
push
sar
pop
or
dec
lea
ds
jl
sbb
push
mov
test
push
jmp
scas
and
(bad)
faddp
ss
adc
and
pop
add
dec
iret
es
cmps
or
outs
les
test
rol
jne
sub
or
cdq
cmps
xchg
aaa
xlat
repnz
dec
mov
test
cs
xchg
aas
push
movs
out
sahf
scas
pop
in
shl
or
mov
adc
push
jne
mov
adc
or
loop
dec
mov
cmps
dec
loope
or
xchg
adc
nop
adc
or
push
out
adc
push
mov
icebp
das
ds
xchg
push
leave
mov
or
loop
mov
inc
xor
(bad)
pop
mov
stos
(bad)
cmps
call
push
xchg
stc
xchg
sub
mov
(bad)
inc
push
adc
ja
or
pop
mov
mov
push
stos
dec
cmp
pop
jbe
data16
sbb
cld
xor
icebp
pop
ret
call
jbe
push
mov
(bad)
jmp
add
stos
jbe
cli
xchg
add
mov
cmp
pusha
(bad)
fidiv
shl
mov
or
std
push
loopne
cmps
jno
or
ss
test
jns
sub
dec
gs
sbb
out
ss
daa
inc
shl
rcl
jg
pushf
or
std
push
aam
rdmsr
pop
ins
aas
retf
pop
mov
or
and
fs
sbb
ins
mov
inc
inc
call
gs
sbb
test
jg
shr
ds
adc
and
pop
sbb
or
mov
push
leave
out
and
icebp
stos
pop
mov
fidiv
sbb
retf
das
inc
popf
xor
sbb
call
mov
cs
cmc
(bad)
push
inc
mov
adc
aad
ins
into
mov
test
add
in
loopne
ins
fistp
mov
js
shl
mov
inc
push
jae
call
add
pop
inc
call
rcr
sub
dec
les
daa
sahf
movs
add
push
lahf
xchg
push
cmp
rcr
add
add
dec
pop
call
inc
mov
into
aaa
ss
or
jp
mov
pop
and
rcr
adc
dec
xor
addr16
not
jb
cmp
rol
sbb
and
retf
add
mov
sbb
and
sbb
mov
cmps
call
addr16
ficomp
xchg
lds
mov
inc
ss
and
xchg
cmp
icebp
iret
add
jl
sbb
out
data16
sub
or
retf
adc
inc
sub
push
fs
cli
test
daa
imul
jmp
jo
dec
push
inc
leave
shl
cmp
lahf
cmp
pop
adc
push
adc
mov
aas
jns
cli
pusha
dec
sbb
aas
jl
fucomi
xchg
pop
push
into
mov
pop
dec
sub
lahf
mul
mov
rol
pop
outs
out
cmps
stos
dec
xor
mov
pop
jns
mov
daa
add
mov
imul
sub
or
push
dec
cs
test
push
mov
and
jle
sbb
jg
rol
sub
sub
fdivp
add
jnp
or
push
popa
mov
dec
pop
je
ror
and
push
(bad)
jg
inc
push
push
sbb
call
dec
or
adc
inc
sub
stos
push
shl
das
loope
jge
or
(bad)
ss
ret
pop
dec
and
ds
push
imul
dec
mov
mov
pop
stos
xchg
mov
icebp
add
test
adc
add
mov
test
rcl
pop
dec
lahf
(bad)
mov
loopne
bswap
pop
retf
adc
imul
dec
cmps
es
or
mov
aas
pop
sti
(bad)
dec
mov
sub
mov
lahf
je
adc
sahf
mov
scas
shl
xchg
add
mov
inc
cmp
scas
mov
inc
bound
mov
stc
out
sub
and
movs
mov
ins
sbb
cmps
push
or
add
push
es
sub
sahf
mov
mov
mov
mov
pop
push
aaa
adc
push
into
ja
popf
gs
mov
dec
push
or
mov
sub
dec
cld
mov
ss
movs
dec
or
xor
mov
dec
mov
stos
sub
push
shl
cmp
lea
add
xchg
(bad)
cmp
push
jle
jmp
push
mov
icebp
in
jmp
xchg
fwait
call
ret
mov
pusha
jp
push
xor
sub
jmp
pop
jo
jp
xchg
xchg
rol
jle
push
push
push
loop
adc
inc
push
dec
es
mov
mov
test
cdq
xor
adc
jge
xor
mov
cld
pop
xor
add
adc
enter
lea
inc
xor
out
add
push
dec
ret
push
xchg
cld
repnz
lsl
jo
fst
or
imul
lock
pop
bound
cmp
rcl
sub
gs
call
sbb
(bad)
cmp
leave
popf
xchg
xchg
xchg
dec
jl
pop
jle
dec
bound
push
cmp
ret
int
repz
sub
add
dec
aas
dec
jmp
ret
lods
into
adc
outs
add
mov
pop
xadd
mov
mov
and
jae
fsubr
das
retf
add
sbb
scas
add
cmp
mov
into
mov
xchg
jg
inc
cmp
lock
push
push
les
iret
mov
add
cs
push
clc
mov
aas
int
cmps
mov
xchg
aas
test
mov
xor
dec
mov
xchg
call
sbb
data16
es
jo
loopne
mov
dec
add
add
neg
or
xor
test
add
pop
sbb
mov
mov
jle
mov
(bad)
rep
xor
call
add
mov
into
add
outs
das
or
dec
or
lods
mov
sub
adc
adc
and
or
sub
outs
push
sub
push
dec
scas
sar
jg
push
outs
add
inc
(bad)
icebp
pop
adc
pop
pop
add
inc
cmp
inc
sbb
in
ins
(bad)
outs
mov
mov
or
push
aad
add
call
pop
es
pop
(bad)
fidiv
xor
clc
ss
adc
jmp
ds
cwde
mov
add
cmps
(bad)
jbe
push
pop
xor
xor
mov
jmp
push
in
add
ret
mov
pop
add
inc
daa
dec
fadd
aas
rol
test
sahf
out
sbb
or
xor
mov
adc
xor
fmul
stos
fimul
or
pop
not
mov
pop
inc
arpl
push
sub
popw
int
mov
int3
xchg
xchg
pop
inc
cmp
inc
mov
ret
ror
shl
outs
adc
outs
mov
sbb
mov
scas
mov
mov
mov
jo
lods
test
cmp
test
inc
in
ror
add
push
mov
or
shl
test
push
je
shr
out
mov
push
cmp
inc
ss
mov
adc
mov
mov
enter
dec
scas
sahf
rsm
loope
or
add
jb
popa
je
ret
xor
and
jno
sub
and
data16
add
imul
mov
mov
jmp
push
cld
jae
pop
jns
imul
xor
lock
pop
xchg
lods
pop
fcomp
icebp
pop
xchg
cmp
test
call
es
pop
js
mov
retf
popa
xchg
add
xchg
or
sub
out
test
(bad)
aad
pop
call
bound
(bad)
push
xchg
movs
sub
jecxz
adc
mov
dec
sbb
and
pusha
dec
mov
xor
ins
jmp
int
pop
adc
and
xchg
arpl
iret
test
xor
repz
fsub
ret
jp
xor
or
or
xchg
mov
stos
test
(bad)
mov
call
xor
mov
mov
adc
test
test
xlat
arpl
push
add
cmp
add
jp
push
adc
jle
pusha
std
fild
jb
outs
mov
add
xchg
xchg
push
out
push
ret
aas
lea
inc
add
nop
mov
pop
mov
mov
xchg
ret
jl
push
xchg
sub
add
pop
loopne
mov
pop
xor
and
sbb
(bad)
cli
sub
into
dec
push
setae
ds
mov
mov
dec
cmp
inc
iret
add
repnz
sahf
jecxz
cmps
rcl
fs
xchg
or
push
loop
bound
mov
mov
stos
shr
out
mov
dec
xor
push
clc
push
call
add
(bad)
pop
or
mov
sbb
outs
mov
and
lds
outs
rcl
gs
(bad)
rol
jb
into
ret
fild
es
adc
fimul
pusha
and
pop
mov
(bad)
ret
daa
in
sbb
ret
sub
call
mov
mov
sbb
jecxz
inc
mov
std
pop
pop
lods
aas
add
in
mov
add
lahf
mov
dec
pusha
jecxz
or
jge
push
push
dec
call
dec
cmp
pop
pop
jnp
dec
cli
mov
cmp
or
aad
les
sahf
in
pop
pop
mov
aam
scas
ret
cli
mov
shl
call
call
mov
icebp
pop
(bad)
xchg
bound
mov
jo
sub
push
test
mov
jmp
mov
sub
adc
ss
call
retf
mov
outs
mov
mov
imul
jmp
push
into
pop
es
in
cmps
cdq
add
xchg
xor
add
out
adc
jb
out
add
pop
push
(bad)
mov
repz
push
or
dec
jmp
adc
push
add
rcr
or
dec
sti
sbb
adc
adc
adc
adc
sbb
repnz
scas
jg
(bad)
adc
pop
ins
jmp
push
adc
inc
rcl
mov
(bad)
sbb
jg
(bad)
aas
outs
jnp
bound
popa
add
jns
add
jmp
outs
xchg
xchg
mov
pop
push
ret
es
jae
mov
jle
dec
cmp
pop
cs
iret
push
ret
xchg
cs
dec
shl
adc
adc
outs
adc
mov
fcomp
cmp
mov
mov
in
fdiv
jae
pusha
mov
or
inc
sbb
sub
movs
and
lods
ss
mov
sbb
push
push
dec
dec
dec
rol
adc
and
fwait
cmp
push
imul
scas
daa
inc
fist
cmc
dec
jbe
shr
lds
call
aam
outs
stos
das
mov
(bad)
leave
mov
xor
fld
xor
add
and
lods
add
pop
aas
or
imul
dec
(bad)
sub
rcl
push
mov
jecxz
stos
inc
loope
inc
add
push
mov
ret
jp
ja
mov
out
rol
leave
sbb
(bad)
dec
into
ret
mov
inc
mov
sbb
push
ror
je
test
cmp
test
inc
aas
pop
push
xchg
inc
push
jb
outs
and
push
mov
dec
fcomp
push
lods
jmp
iret
out
repnz
push
out
data16
fistp
jb
adc
enter
repz
push
add
xor
adc
sub
sbb
inc
add
call
aas
mov
clc
inc
sbb
mov
and
xchg
pop
adc
jns
repnz
cmps
adc
sar
das
mov
push
out
movs
loopne
pop
sbb
push
out
push
outs
movs
inc
loopne
int3
sub
mov
test
push
in
sahf
lock
or
repz
sbb
fnstenv
or
xchg
inc
aaa
js
jmp
jns
inc
inc
lods
and
retf
aas
push
lds
jb
jb
inc
test
jb
stos
mov
mov
dec
pop
or
push
lahf
(bad)
loop
sbb
ret
rcr
es
sahf
jno
jl
add
add
cmc
jg
push
cli
cmps
(bad)
push
shr
pushf
add
shr
data16
fisttp
jecxz
or
dec
xor
xchg
jbe
mov
sbb
mov
mov
adc
jecxz
inc
jne
or
lock
leave
and
mov
and
mov
sbb
rol
shr
push
mov
hlt
hlt
(bad)
cdq
imul
and
test
out
add
ins
and
mov
ret
sub
add
dec
mov
loopne
sub
leave
stc
arpl
or
lods
or
cmp
inc
fnstsw
es
xchg
pop
add
inc
sti
aad
arpl
clc
pop
xchg
mov
dec
xor
out
pop
mov
scas
sub
push
and
fcmovu
inc
dec
mov
(bad)
inc
jb
imul
lods
pop
and
jmp
ja
xchg
bound
mov
or
loope
or
mov
scas
imul
repnz
and
or
mov
leave
inc
into
jmp
mov
das
lock
cli
ficomp
mov
mov
xor
inc
jl
cmp
ss
sahf
ds
add
ds
adc
mov
jmp
call
sub
lea
mov
adc
(bad)
push
dec
pop
push
sbb
pop
and
sbb
rcr
sub
lea
xor
add
pop
jl
pop
loope
mov
jns
pop
mov
pop
sub
(bad)
js
jecxz
pop
call
jns
xchg
sbb
or
sub
sbb
xor
out
mov
and
loopne
or
popa
sar
nop
enter
sahf
imul
jmp
out
out
mov
add
sub
push
imul
arpl
ret
inc
ins
mov
lods
loopne
mov
cmp
adc
cmp
or
out
(bad)
inc
cmps
adc
dec
xor
int
imul
jbe
xchg
dec
inc
add
test
fist
data16
daa
pop
mov
or
sub
lahf
cmps
fldcw
push
mov
mov
ins
cmps
repnz
cmps
inc
test
xchg
imul
cmc
xlat
mov
push
sbb
repnz
into
test
jge
xor
or
push
(bad)
push
dec
call
add
add
and
popf
ret
pop
out
add
mov
or
mov
es
out
xor
jae
and
mov
outs
stos
shr
pop
mov
add
scas
out
es
fwait
(bad)
xchg
sahf
out
add
mov
out
adc
cwde
(bad)
jbe
fdiv
push
or
jae
stc
xchg
ret
sbb
movs
jmp
or
push
adc
dec
ss
or
mov
mov
add
sub
and
and
movs
rol
dec
(bad)
popa
mov
jo
sbb
mov
cmp
lods
into
mov
mov
pop
jp
imul
aad
lock
(bad)
pop
test
pop
stos
enter
das
sar
adc
ret
dec
add
mov
fidiv
mov
or
push
pop
movs
mov
bound
xchg
jp
popf
mov
inc
add
jp
xor
lock
pop
xor
in
dec
push
push
cs
fld
sahf
leave
shl
cmp
or
push
lea
xchg
sbb
ss
dec
stos
and
int
test
std
stc
push
int
mov
test
cmc
pop
xchg
loopne
or
daa
imul
push
jmp
mov
jmp
push
shl
cmp
rcr
not
adc
(bad)
not
stos
es
sahf
movs
push
ds
lock
or
pop
inc
je
imul
or
cs
pop
cmp
mov
gs
je
out
fsub
(bad)
mov
(bad)
data16
or
into
dec
push
inc
clc
fwait
cli
jmp
pusha
into
mov
nop
test
lock
cli
xchg
xor
std
imul
add
mul
cmp
mov
xor
mov
bound
aam
stos
cmp
cmp
sahf
cld
sub
push
fiadd
pop
mov
retf
sub
cmps
es
pop
or
inc
adc
std
retf
ror
out
(bad)
pop
sbb
mov
retf
cwde
cwde
clc
push
push
es
mov
add
rol
mov
mov
pop
mov
outs
mov
mov
bound
cmc
pop
jp
es
cmp
push
std
dec
fld
dec
mov
mov
add
cmp
xchg
jmp
sar
mov
adc
fadd
dec
inc
shl
imul
xor
bound
arpl
rol
retf
mov
adc
mov
add
data16
xchg
adc
ins
push
sbb
mov
es
inc
gs
je
leave
jg
pop
dec
aaa
xchg
inc
and
retf
xchg
inc
test
pop
lock
shl
or
enter
loop
test
cmp
jo
mov
cmc
repnz
out
mov
jbe
pop
stos
or
fld
push
das
sbb
and
cmp
inc
js
imul
ror
add
rcl
dec
mov
mov
push
inc
sbb
or
inc
cli
inc
add
mov
adc
pop
mov
outs
rol
call
popf
dec
call
ror
xor
and
cli
call
pop
les
rcl
or
dec
push
mov
push
sbb
cmp
add
outs
das
xor
es
ds
pop
ret
rcr
push
out
mov
aaa
es
xor
sub
aam
mov
lock
mov
cwde
push
outs
(bad)
es
dec
out
loopne
stos
dec
jmp
push
adc
pop
mov
jnp
push
adc
addr16
inc
inc
mov
push
add
jmp
fist
es
adc
bound
push
cmp
cli
fwait
outs
inc
test
fiadd
fstp
dec
(bad)
inc
jae
or
dec
mov
add
mov
push
dec
sbb
xor
sub
push
lds
sub
pop
stos
out
loop
or
sub
inc
inc
ret
shr
mov
(bad)
(bad)
sub
add
(bad)
(bad)
mov
(bad)
imul
adc
push
jmp
cmp
jno
inc
and
daa
ss
dec
mov
jbe
loopne
shl
jle
stc
jmp
add
int
(bad)
cmp
push
add
xor
or
add
into
add
fistp
adc
xor
gs
aaa
add
add
bound
mov
fs
mov
lock
daa
test
shl
push
add
dec
jbe
retf
jae
(bad)
cmp
pop
arpl
pop
add
push
adc
adc
cli
add
jo
mov
add
leave
(bad)
data16
adc
fisttp
shl
push
imul
out
mov
addr16
sub
pusha
retf
adc
or
aaa
call
mov
aaa
imul
push
loope
push
push
adc
out
and
mov
cmps
mov
add
ja
das
mov
xchg
push
repz
and
retf
std
pop
jno
jg
sub
fstp
pop
add
stos
cmp
sbb
adc
pop
mov
or
fcomp
inc
retf
and
shl
jmp
out
stc
dec
adc
mov
and
fld1
out
cmp
mov
dec
sbb
add
rcl
jne
frstor
dec
mov
or
or
es
clc
jbe
ins
and
xchg
push
add
dec
and
sub
adc
dec
int
pop
jp
jl
das
outs
call
and
(bad)
mov
pop
xchg
adc
mov
jmp
cmp
jns
add
mov
dec
fiadd
mov
mov
push
sbb
mov
push
rcr
mov
jecxz
popf
std
pop
aad
or
ds
pop
adc
(bad)
jle
or
in
ins
stc
(bad)
adc
mov
out
out
lds
jnp
(bad)
xlat
rcr
push
mov
(bad)
mov
out
mov
call
ja
lahf
or
mov
es
stc
icebp
jbe
dec
push
stos
loope
xchg
jmp
jmp
addr16
or
movs
inc
dec
push
sbb
cmp
and
sar
jo
and
inc
js
xchg
push
aad
xlat
add
aaa
ret
jmp
sbb
add
jge
stos
dec
pushf
cmps
cs
push
inc
repnz
jmp
mov
push
or
xor
fwait
inc
mov
jecxz
sub
pop
xchg
cmp
jo
es
or
adc
jp
or
(bad)
cmp
lds
or
cmps
push
dec
add
dec
or
(bad)
mov
scas
pop
out
jecxz
retf
xor
loope
jnp
push
sti
cmp
jle
adc
or
es
lds
adc
dec
cdq
fwait
mov
gs
xor
pop
arpl
mov
mov
mov
ficom
in
dec
mov
movs
hlt
and
mov
xchg
pop
add
inc
pop
dec
ds
or
loopne
jge
sub
shl
imul
and
aas
xchg
mov
les
mov
xchg
mov
xchg
outs
jge
adc
cmp
inc
jmp
add
jg
lahf
add
pop
and
pop
adc
addr16
scas
loopne
cmp
out
jnp
data16
icebp
pop
fild
add
ror
inc
push
repnz
jnp
sbb
and
cmps
sbb
scas
or
mov
inc
in
or
mov
and
cmp
mov
inc
jbe
or
inc
test
inc
imul
jbe
jmp
dec
repz
push
cmp
dec
add
jo
sahf
pusha
pop
inc
jle
(bad)
push
sub
daa
jg
stos
cmp
inc
js
xor
mov
xchg
xor
mov
outs
fdivr
pop
add
jb
mov
mov
add
and
sbb
test
jb
mov
ror
jp
adc
xor
shl
sub
add
inc
loope
pusha
call
ins
inc
call
xchg
ja
jmp
sbb
dec
outs
movs
jbe
or
xchg
mov
(bad)
(bad)
call
or
dec
sub
inc
mov
shl
cmp
cdq
cmp
sbb
fwait
aaa
sub
(bad)
sbb
sbb
pop
stos
push
lds
(bad)
push
xchg
jg
arpl
bnd
adc
repz
pop
pop
in
or
nop
jbe
aas
push
add
push
cmp
jae
jge
mov
ja
push
and
(bad)
fidivr
pop
add
xor
movs
add
mov
mov
imul
cli
push
mov
in
and
add
nop
mov
push
push
push
cwde
mov
in
xchg
mov
nop
inc
push
movs
xchg
leave
pop
add
in
dec
xor
aas
(bad)
push
fcmovbe
call
adc
cli
push
into
lahf
dec
cmp
and
out
and
mov
inc
rcr
bound
jnp
ficom
sub
call
(bad)
add
outs
mov
cmps
mov
fimul
pop
lods
retf
sbb
adc
jne
loope
ins
sbb
sbb
outs
xor
jnp
out
mov
pop
(bad)
push
adc
or
jle
and
jp
daa
out
mov
mov
popa
ret
add
mov
mov
add
leave
push
fwait
inc
pusha
shl
cli
sub
repnz
xchg
add
jo
(bad)
cwde
(bad)
jecxz
push
push
dec
dec
and
es
cwde
add
inc
call
mov
ret
or
xor
adc
push
add
lock
add
pushf
and
add
xor
jb
fbld
aad
mov
fld
sbb
sub
repz
or
dec
dec
in
repz
popf
dec
scas
test
cmp
test
ss
fisub
data16
or
and
xor
mov
xchg
das
add
push
aaa
inc
push
dec
daa
and
xchg
fcomp
xor
and
sahf
gs
sub
and
out
mov
out
inc
jmp
mov
div
loopne
jnp
push
jp
adc
mov
mov
scas
xchg
push
mov
jbe
jne
push
js
jns
imul
pop
inc
sbb
mov
sub
fwait
inc
scas
xchg
dec
ret
xchg
or
mov
je
lods
or
adc
ret
arpl
ds
xor
mov
dec
push
repnz
jb
imul
or
cmp
icebp
pop
movs
imul
repz
jno
cmp
pop
cmps
arpl
mov
jns
adc
push
dec
loope
mov
add
outs
mov
add
aad
and
ds
sbb
cli
mov
loop
outs
cli
jge
pop
xchg
sbb
dec
jae
dec
outs
(bad)
bound
xor
push
mov
dec
clc
mov
jecxz
inc
aad
cmp
es
into
outs
sahf
loope
push
xlat
pop
push
ror
jecxz
push
sbb
fs
bnd
dec
call
push
leave
clc
or
neg
sar
inc
add
sahf
cmp
cwde
lea
sbb
fucomip
pop
jge
ror
outs
addr16
ficom
jne
push
out
movs
dec
sbb
mov
push
jbe
(bad)
add
add
push
es
and
out
rol
jae
inc
add
push
sar
retf
xchg
stc
mov
enter
xor
shl
psubw
pop
mov
or
mov
fldenv
ins
mov
add
pop
aaa
and
ss
xlat
push
sahf
jecxz
sbb
dec
and
imul
xchg
cmp
fwait
push
ds
pop
inc
mov
mov
fimul
add
sub
data16
pop
test
push
push
cmps
jle
jne
ret
mov
push
fisttp
sbb
shl
shl
lods
or
(bad)
jle
sar
xchg
cmp
fs
add
inc
mov
cmp
push
add
adc
mov
popa
jnp
inc
cli
shr
mov
leave
jnp
comiss
test
mov
inc
retf
xor
xor
in
adc
push
pop
lahf
jmp
adc
jmp
pop
in
jp
and
mov
mov
mov
aam
sahf
jbe
push
pushf
xor
jmp
ds
js
jnp
cdq
dec
push
call
shl
push
int3
loopne
push
push
cmps
adc
stc
mov
push
xor
fs
ss
fisttp
mov
jg
mov
ret
push
outs
mov
add
scas
add
(bad)
pop
mov
shl
xchg
sub
je
dec
push
add
gs
daa
ds
push
xchg
loope
and
adc
add
out
imul
or
inc
ss
pop
xor
mov
(bad)
xchg
pop
test
pop
aaa
mov
sbb
jbe
addr16
sbb
lods
push
out
mov
es
test
imul
xor
mov
cmps
lahf
xchg
fdivr
or
test
push
mov
xchg
push
cmp
imul
sub
or
mov
mov
mov
jge
cmp
xchg
dec
jae
xlat
mov
retf
adc
stos
lock
jle
jae
(bad)
jp
repz
pusha
jecxz
out
fwait
in
cwde
or
shl
xor
dec
aaa
pusha
loopne
push
popf
mov
(bad)
push
jns
xchg
pop
(bad)
jmp
test
dec
jmp
push
neg
pop
mov
jge
cs
push
adc
sbb
iret
add
inc
xchg
adc
mov
cs
or
or
push
popf
fcmovu
addr16
or
inc
int
xor
addr16
ret
pop
pop
sub
jl
ins
enter
mov
sahf
rcl
aas
pop
sub
and
nop
retf
jns
xchg
int
mov
mov
jl
cmp
lahf
and
outs
sbb
rol
je
mov
int3
push
ds
pop
and
push
push
addr16
psubsw
cmp
retf
adc
inc
push
pop
scas
pop
clc
dec
add
xor
ss
rep
test
sbb
and
iret
fs
mov
jle
mov
dec
pop
jae
test
mov
and
es
mov
jl
push
and
push
cld
xchg
mov
dec
js
dec
inc
lahf
adc
add
fisttp
ds
stos
inc
fimul
mov
xor
arpl
inc
adc
push
mov
addr16
rol
out
inc
sub
adc
fcom
(bad)
xchg
add
popf
cmps
inc
pop
popa
mov
fimul
cmp
cmps
xor
and
outs
mov
icebp
adc
outs
sahf
mov
jmp
pop
dec
jle
lahf
and
mov
mov
or
mov
jmp
cmp
dec
movs
repnz
das
push
int3
imul
inc
mov
mov
ds
cli
xchg
sbb
pop
inc
mov
shr
or
and
int
ds
(bad)
rol
push
in
cmp
push
lds
sbb
in
test
sbb
in
dec
loop
xor
outs
mov
mov
push
es
lock
fcmovne
loope
popf
scas
xchg
jle
dec
fldenv
push
adc
push
movs
jmp
imul
and
xchg
mov
or
outs
adc
and
leave
mov
je
xchg
adc
mov
dec
repz
pop
push
mov
loope
arpl
push
mov
adc
lea
scas
sbb
dec
pop
les
aaa
pop
xor
mov
clc
nop
pop
xchg
and
sub
aaa
push
mov
add
mov
dec
dec
inc
and
cmc
pop
inc
(bad)
sub
push
push
push
sub
add
(bad)
test
mov
leave
scas
pop
inc
jo
xchg
repz
inc
pop
mov
loopne
jns
add
mov
xor
xchg
jb
arpl
pusha
pop
mov
cmp
jnp
add
mov
addr16
ja
pop
shl
mov
loopne
scas
stos
xchg
xor
test
mov
mov
inc
sub
add
jmp
sbb
jmp
add
add
(bad)
jnp
(bad)
imul
js
xor
nop
push
inc
mov
dec
cmps
inc
xchg
pop
mov
sub
std
ficom
aaa
jo
adc
jae
ror
ficom
sub
jmp
ret
and
sub
dec
addr16
popa
test
jle
jle
fmul
in
push
(bad)
jmp
dec
shl
mov
into
push
cli
adc
sbb
mov
xor
mov
xor
repz
push
ss
mov
adc
jle
adc
inc
es
scas
xchg
sub
nop
xchg
bnd
pushf
cmp
jp
cli
mov
adc
push
xchg
jno
xchg
push
ret
xor
sti
xchg
push
test
add
cmp
imul
or
clc
mov
popf
not
sub
jae
mov
aaa
arpl
inc
in
rcl
xchg
inc
mov
dec
dec
in
movs
outs
xchg
retf
ret
outs
mov
adc
mov
ss
pop
fidivr
or
repnz
dec
dec
fs
pop
and
inc
mov
lahf
xor
inc
push
outs
(bad)
mov
movs
repnz
aaa
jmp
inc
push
je
mov
ds
adc
iret
or
out
les
cwde
adc
ror
and
sub
and
jmp
fild
or
sahf
push
dec
aaa
sub
add
add
shr
in
and
cwde
aas
xor
(bad)
cmp
mov
test
push
or
add
mov
fs
scas
in
movs
repnz
dec
jle
fs
movs
ds
pop
jo
div
mov
fwait
lea
cmp
xor
jnp
jo
mov
popa
cmp
inc
ror
push
mov
or
mov
or
adc
or
js
mov
outs
jne
aaa
das
mov
call
cmp
out
(bad)
aam
push
inc
cmc
scas
les
dec
add
and
call
fdiv
lock
retf
fadd
xor
sbb
push
bound
add
bound
pop
add
sbb
sub
adc
add
repz
(bad)
cld
xor
mov
push
sbb
dec
arpl
repnz
inc
loope
pop
cmp
call
add
and
and
mov
pusha
sbb
cmps
inc
push
cmp
push
push
dec
dec
mov
cmps
add
dec
cmp
mov
xor
mov
clc
push
cmps
dec
call
mov
lds
retf
cwde
sbb
retf
jae
bound
pop
push
inc
inc
mov
scas
dec
jb
in
adc
xor
add
pop
cmp
dec
add
into
cmp
inc
mov
cmp
xor
mov
push
mov
sub
cli
stos
xlat
cmp
dec
dec
mov
test
ds
in
sbb
and
ins
fidivr
bound
pop
and
adc
cmp
inc
and
aaa
or
xchg
fwait
pop
repnz
inc
bound
pop
adc
repnz
cwde
test
popf
in
fs
mov
add
test
mov
sbb
add
pop
cmps
fld
xor
loope
lea
mov
and
xchg
mov
add
das
push
sub
je
inc
stos
dec
cld
cli
push
jg
mov
rol
or
lods
addr16
(bad)
loopne
and
inc
mov
repz
mov
aas
dec
sub
dec
xchg
jp
ret
aam
dec
mov
cwde
nop
jl
xchg
pusha
arpl
add
test
cmps
loopne
and
push
sbb
mov
sub
cld
jp
jo
daa
adc
cs
mov
xor
push
(bad)
push
adc
ins
push
and
mov
clc
cmps
cwde
and
or
loope
pop
pop
shl
xchg
jne
xchg
mov
sbb
retf
les
mov
mov
adc
popa
into
mov
cmp
pop
jmp
jl
or
bound
inc
outs
repnz
mov
scas
popf
cld
cmps
ds
sub
mov
adc
push
adc
and
jns
jns
inc
aas
call
movs
imul
push
inc
inc
jb
dec
jb
sahf
test
push
cmp
xor
cmp
sub
(bad)
mov
mov
mul
mov
jae
bound
(bad)
lock
(bad)
mov
sti
inc
pop
sbb
and
mov
inc
popa
and
pop
pop
call
cld
aam
cmps
popa
jae
js
sub
push
inc
pop
(bad)
scas
mov
and
push
sbb
mov
popf
mov
jae
sbb
ror
xchg
sbb
ins
jmp
lea
ret
out
aam
(bad)
bnd
ret
cmp
pop
inc
out
dec
xchg
jmp
movs
mov
xor
mov
in
call
pusha
sbb
movs
or
or
mov
push
bnd
shl
stos
ret
mov
stos
test
icebp
adc
cmps
and
outs
mov
adc
push
mov
xor
dec
loope
mov
push
cld
add
mov
xchg
or
push
adc
cmp
and
and
sbb
adc
(bad)
mov
mov
jge
push
in
mov
inc
add
sbb
push
jno
push
xor
push
mov
outs
pop
add
or
pop
add
inc
push
mov
(bad)
xchg
call
mov
and
retf
mov
lock
xor
sbb
dec
push
fst
mov
and
mov
mov
sahf
movs
mov
pop
cmps
push
gs
cmp
push
or
pop
cvtps2pd
rcl
imul
jge
retf
out
inc
mov
mov
sbb
(bad)
outs
push
pop
pop
mov
xchg
mov
imul
cmp
les
std
out
or
mov
push
fdiv
mov
and
mov
movs
in
dec
out
test
xchg
in
(bad)
jmp
or
inc
cmp
inc
push
inc
pop
adc
fist
push
mov
js
mov
push
and
adc
xor
pop
mov
ja
mov
add
xor
pop
xor
rol
stos
jo
jmp
jecxz
add
jo
mov
mov
inc
imul
retf
stos
inc
lods
imul
xchg
mov
cwde
daa
push
push
rol
pop
xchg
pop
(bad)
ficomp
mov
cmp
mov
jle
cmp
xor
sbb
clc
sub
inc
jmp
pop
clc
adc
imul
mov
jg
inc
jmp
pop
mov
ret
jp
jo
mov
mov
xor
popa
das
jg
mov
mov
adc
pop
cdq
push
jno
stos
push
push
test
shl
add
stc
lahf
sub
jmp
add
dec
pop
sbb
and
out
scas
or
cmp
inc
ja
ds
sbb
out
or
jae
lods
mov
dec
outs
push
daa
pop
movs
cmp
sub
dec
mov
and
jmp
add
fisttp
add
dec
sahf
or
lods
ds
icebp
dec
inc
imul
jmp
dec
xchg
inc
sub
ret
pop
popa
add
arpl
jbe
mov
jle
jmp
or
fstp
jmp
xchg
bound
mov
pop
stos
mov
ss
jmp
rcl
lea
or
dec
push
out
and
or
mov
push
push
jb
inc
mov
inc
jmp
call
and
sbb
jecxz
dec
add
push
and
push
jle
loopne
mov
adc
and
inc
add
mov
add
gs
dec
aaa
bound
(bad)
jb
mov
fwait
dec
shl
repnz
sub
mov
(bad)
mov
pop
dec
mov
xor
mov
outs
mov
popa
xchg
das
push
adc
sbb
jae
push
xchg
push
inc
mov
inc
sub
mov
je
retf
sbb
cmp
xor
mov
dec
loope
cmp
dec
cli
cs
call
push
mov
inc
fwait
and
(bad)
and
and
es
mov
test
sub
cld
mov
push
push
inc
push
inc
mov
push
outs
std
sub
mov
jecxz
or
sbb
jbe
pop
jns
leave
aam
cwde
pop
jbe
push
mov
(bad)
rcl
mov
enterw
test
mov
pusha
cdq
inc
(bad)
mov
mov
ins
bound
(bad)
cli
fwait
add
xchg
add
xor
mov
pop
adc
or
mov
or
adc
pop
mov
mov
mov
or
inc
push
sar
cs
js
or
movs
das
mov
mov
mov
adc
sub
repnz
aam
add
enter
lods
(bad)
nop
pop
or
mov
rcl
xchg
outs
sbb
movs
mov
cmp
aad
test
inc
call
rcl
ficomp
xor
fimul
mov
xchg
aas
iret
(bad)
outs
bound
xor
mov
repnz
movs
mov
iret
dec
push
jmp
mov
push
and
ja
push
call
xor
sbb
ja
or
add
dec
mov
push
imul
sbb
std
xor
repnz
andnps
sbb
pop
inc
inc
(bad)
mov
add
rcl
imul
jp
add
pop
dec
cmps
adc
sbb
mov
arpl
jg
loop
jle
mov
scas
pop
scas
rcl
ds
repz
imul
dec
out
mov
outs
shl
inc
pop
push
xor
fist
push
int
xchg
and
push
adc
or
cmps
ficomp
(bad)
rcr
xor
mul
mov
cdq
fcomp
ret
in
mov
test
dec
push
sbb
mov
fst
scas
mov
lock
push
jnp
gs
mov
sub
fwait
mov
fcom
je
bound
push
ss
imul
jge
(bad)
fist
outs
mov
mov
dec
(bad)
cmp
sbb
dec
out
cmps
mov
dec
les
jne
fisub
stos
xchg
std
imul
pop
mov
clc
bound
sbb
iret
repz
push
inc
inc
mov
test
mov
scas
push
outs
out
add
sbb
cmc
aaa
jo
push
inc
jecxz
and
les
xchg
aaa
outs
pop
mov
jmp
out
sub
call
inc
mov
mov
es
mov
sub
xor
imul
cld
out
mov
push
outs
or
push
and
sbb
mov
dec
mov
push
ins
inc
loopne
mov
outs
ds
cmp
inc
popf
inc
pop
bnd
jmp
std
mov
enter
dec
xchg
leave
push
add
sub
repz
mov
test
ret
sar
mov
adc
clc
sbb
ja
mov
xor
pop
es
jns
jle
(bad)
push
das
ja
push
jge
mov
ins
adc
in
sbb
call
push
ret
xor
ss
jno
add
add
out
jnp
loopne
inc
mov
xchg
cmp
clc
add
rcr
aam
inc
lds
cli
mov
or
or
or
data16
xlat
ret
pop
jecxz
mov
repz
xchg
test
xchg
pop
xchg
sub
mov
xchg
popa
push
(bad)
popf
popa
ja
mov
sub
add
jle
(bad)
fs
repnz
xor
xchg
or
std
nop
inc
adc
push
inc
pop
mov
pop
pop
ja
ins
std
and
sub
gs
aas
in
pop
sub
daa
adc
cmps
lahf
sub
out
mov
push
sub
loopne
aas
call
iret
push
cmps
jg
lock
add
and
sbb
mov
jg
mov
pusha
sbb
mov
imul
mov
mov
cmp
sbb
adc
nop
xchg
add
mov
aas
pop
inc
pop
dec
jae
repnz
bound
inc
cld
shl
jmp
ins
mov
addr16
xchg
fidivr
jno
push
cmp
mov
pop
mov
addr16
movs
pop
mov
in
pop
xchg
jge
(bad)
retf
rol
mov
cdq
ja
sbb
scas
hlt
xor
cmp
imul
data16
mov
or
jmp
pop
cmp
mov
mov
lds
and
and
or
or
jge
mov
ficom
sahf
xchg
xchg
out
imul
mov
sahf
das
and
pop
(bad)
jg
inc
jg
jns
call
lahf
in
ss
ror
inc
pushf
xchg
push
imul
cli
xchg
or
inc
scas
sbb
test
(bad)
jg
mov
popa
cmp
adc
pop
adc
adc
cmp
dec
push
aaa
inc
xor
inc
mov
jne
cmp
data16
inc
sub
in
push
mov
(bad)
outs
sub
es
mov
rcr
rcl
sti
mov
and
repz
cmp
les
xlat
inc
xchg
mov
ds
out
std
mov
arpl
add
ja
pop
mov
mov
and
sbb
repnz
pop
out
call
aas
gs
mov
fsub
and
or
jg
xchg
mov
cmp
xchg
jg
out
or
mov
jl
inc
pop
in
xor
push
imul
push
aaa
bound
add
and
xor
adc
scas
imul
loope
add
out
loopne
push
nop
retf
aam
(bad)
mov
mov
mov
and
jl
sahf
cli
mov
mov
mov
scas
dec
jae
xchg
push
daa
loopne
test
dec
dec
(bad)
repz
sbb
dec
adc
xor
int
jno
add
(bad)
inc
pop
in
or
fdiv
dec
or
aam
rcl
icebp
stc
sbb
arpl
sbb
xor
cmp
pop
nop
retf
pop
mov
jl
dec
gs
push
fs
mov
fwait
retf
jo
jmp
cld
xor
fiadd
imul
push
mov
xchg
inc
js
std
xor
lock
and
retf
fimul
fisub
cmps
and
xor
loopne
xor
inc
dec
or
mov
(bad)
cld
mov
xor
sub
into
add
ret
xchg
dec
shr
pop
js
mov
fwait
or
and
movs
aam
lock
dec
outs
xchg
push
(bad)
add
cli
clc
and
lods
and
inc
inc
jns
jp
ds
leave
inc
pop
leave
fist
sub
inc
fcmovne
fisttp
popa
mov
dec
add
push
outs
vpunpckhqdq
in
jo
pop
les
mov
clc
bound
push
out
jne
mov
repz
pop
mov
out
add
and
sar
out
pop
mov
lgs
stc
es
adc
sub
add
or
xor
dec
cmp
push
loop
clc
repz
sbb
ds
adc
cmp
pusha
lahf
(bad)
cmps
sbb
pop
cli
gs
pop
sub
adc
sahf
mov
cmp
pop
leave
jl
outs
movs
or
push
sub
sbb
cs
mov
and
mov
xor
stos
dec
and
dec
mov
or
out
inc
mov
das
mov
movs
add
loop
add
iret
repz
fisubr
cmp
dec
inc
cs
or
dec
scas
jmp
inc
mov
scas
mov
aas
icebp
add
jl
loop
add
test
sbb
(bad)
lahf
dec
and
jecxz
out
(bad)
stc
stc
fadd
mov
push
jle
in
movs
mov
jns
cmps
mov
dec
inc
(bad)
jbe
xchg
aaa
xchg
xchg
mov
or
stc
rol
jle
inc
or
xlat
fld
fwait
js
push
mov
imul
or
mov
syscall
fisttp
jnp
out
(bad)
push
ret
test
mov
mov
ret
jp
sahf
ds
add
or
ret
jb
push
sub
bound
mov
loope
cmps
xchg
or
and
inc
or
inc
or
add
jp
jecxz
or
dec
jle
in
add
shl
dec
fs
or
repnz
fistp
xor
mov
cmp
repz
mov
adc
xchg
mov
loope
cmps
imul
stos
push
or
sub
(bad)
push
sbb
loopne
or
(bad)
xchg
lock
mov
mov
dec
adc
xor
sbb
mov
adc
mov
fcom
repnz
sbb
jg
xchg
js
test
jb
push
adc
inc
jle
ins
jmp
ret
mov
pop
jmp
pop
sbb
jl
idiv
push
clc
daa
outs
outs
(bad)
in
mov
outs
lods
aaa
dec
xchg
gs
bound
sbb
dec
retf
pop
pop
push
inc
mov
jae
lock
loope
xchg
jmp
loopne
push
sbb
js
mov
push
call
rcl
cld
pusha
int3
add
fcomp
jp
inc
sub
repz
push
xchg
ins
inc
outs
lods
aas
retf
mov
push
enter
test
das
cmps
adc
(bad)
cmp
mov
fwait
push
fwait
xlat
test
pop
mov
xchg
fs
lock
xchg
int3
mov
mov
and
cli
mov
xchg
arpl
pop
push
bound
(bad)
fild
sar
push
push
xor
pop
cli
sub
mov
xchg
pushf
ret
xor
adc
mov
es
pop
cli
adc
nop
shr
pushf
xchg
mov
movs
mov
or
pusha
xor
retf
in
or
shl
mov
dec
xor
xor
fwait
int
xchg
inc
inc
pusha
aad
jae
out
xchg
nop
mov
pop
xor
or
rol
add
or
mov
xor
push
imul
fiadd
xchg
or
retf
push
pusha
xlat
dec
imul
loop
rcr
movs
jmp
retf
cwde
rol
(bad)
mov
loope
jmp
sub
mov
adc
push
inc
mov
sbb
mov
push
clc
pop
inc
dec
outs
das
dec
mov
jle
call
jmp
ja
lods
jg
cmp
xlat
out
mov
jo
jae
rol
or
das
sbb
fld
push
pusha
pop
bound
dec
adc
mov
mov
mov
(bad)
xchg
mov
ja
in
cmp
dec
xor
mov
js
pop
pop
adc
mov
lods
aaa
inc
and
out
daa
movs
daa
sbb
es
cmp
add
pop
sub
shl
dec
xor
shl
mov
es
or
jb
lods
test
mov
loop
loope
dec
mov
or
ds
xor
ins
or
(bad)
fcmovnb
push
or
dec
rol
call
and
add
mov
pop
out
or
fidivr
pop
lahf
cwde
push
loopne
sar
test
mov
pushf
dec
cmp
test
sbb
pushf
daa
stos
scas
data16
and
jg
add
dec
arpl
or
mov
nop
push
push
pop
pop
xor
stc
xor
add
in
cmp
pop
adc
loope
pop
daa
stos
lods
movs
pushf
xchg
push
pop
dec
and
mov
mov
fisttp
dec
out
add
xor
shl
and
cmps
pop
adc
push
shl
dec
add
mov
loope
mov
cmc
fst
inc
psubusw
sti
cmp
mov
mov
pop
imul
imul
sub
sub
pop
jmp
and
mov
mov
mov
or
jae
popa
xchg
sahf
adc
xor
in
add
(bad)
ror
mov
inc
rcl
pop
inc
jle
inc
imul
or
jae
push
shr
test
add
push
mov
outs
dec
and
inc
fsub
pop
xchg
mov
dec
dec
es
inc
add
cmps
das
outs
popa
inc
mov
mov
fidiv
add
dec
mov
xor
dec
adc
mov
ins
test
xchg
dec
add
bound
adc
retf
cmp
inc
pop
jecxz
test
xor
std
jl
aaa
pop
mov
dec
add
data16
scas
lds
cmp
or
(bad)
(bad)
pop
inc
loopne
xchg
mov
repnz
mov
pop
jecxz
outs
xchg
dec
mov
fwait
inc
add
cmp
push
outs
clc
or
mov
cmp
push
xor
inc
imul
shl
sahf
xchg
jmp
dec
pop
push
mov
dec
pop
pop
jecxz
shr
(bad)
call
dec
jl
inc
mov
mov
movs
fadd
hlt
jge
mov
xchg
ins
loopne
(bad)
retf
shl
fsubr
gs
fwait
jl
movs
pop
movs
inc
loopne
ror
jg
fwait
sub
test
mov
in
pop
pop
pop
data16
add
add
js
xchg
outs
adc
icebp
jbe
sbb
cmp
ret
(bad)
mov
pop
xchg
xchg
add
pusha
sbb
cmp
test
jne
idiv
jg
rcl
jle
repz
cdq
movs
loope
push
cli
pop
imul
xor
dec
xchg
and
or
std
sub
scas
inc
mov
push
sbb
sahf
js
mov
xchg
ret
adc
pop
mov
xchg
test
and
mov
js
inc
mov
jp
sbb
add
call
xchg
or
pop
push
ss
add
bound
mov
dec
(bad)
rol
jb
in
leave
xchg
das
cmp
jae
out
das
xchg
add
or
imul
add
xchg
pushf
call
stc
sbb
and
lahf
imul
cmp
ds
arpl
ins
jns
and
mov
sub
setae
adc
es
pop
or
ins
adc
xchg
or
mov
outs
scas
add
lar
add
push
add
or
sub
inc
lahf
inc
clc
mov
test
in
loop
mov
push
pop
add
and
adc
repnz
sub
push
fisttp
cmp
das
movs
ds
pop
inc
aas
add
mov
adc
inc
cmp
loopne
add
or
sar
shr
addr16
out
or
mov
gs
push
and
push
dec
dec
push
daa
jmp
scas
mov
arpl
mov
sbb
and
call
in
js
fs
movs
sub
push
jns
jmp
push
dec
div
mov
sub
ja
jle
retf
jbe
sbb
(bad)
leave
jl
popf
add
pop
push
add
mov
test
ins
ss
daa
mov
add
sahf
xor
add
sbb
aad
add
loopne
and
mov
out
pop
sbb
add
jbe
xor
xchg
retf
add
jp
xor
mov
inc
pushf
add
sar
dec
or
add
fimul
and
clc
data16
mov
xchg
adc
loopne
(bad)
es
jb
sub
and
add
push
dec
shl
(bad)
jae
mov
ja
cli
(bad)
pop
push
mov
lea
push
push
and
ficomp
ds
xor
sub
mov
add
and
sbb
loopne
(bad)
das
sbb
add
mov
push
lea
pusha
(bad)
int3
gs
jge
inc
or
xchg
dec
inc
gs
pop
xor
mov
inc
cmps
dec
call
dec
retf
adc
and
jbe
push
ficomp
xor
cmp
inc
loope
movhps
aaa
pop
push
push
pop
or
inc
push
cs
movs
sbb
ret
outs
es
lahf
pushf
pop
add
retf
ja
push
ret
dec
or
xchg
in
pop
pushf
jge
or
mov
dec
mov
rcl
xchg
pop
mov
scas
and
cmp
data16
in
mov
jb
cli
jmp
cmps
adc
mov
ds
or
loopne
cmp
das
enter
xchg
ds
mov
loop
push
repz
dec
and
inc
mov
sub
mov
xchg
loopne
shr
cli
jmp
push
mov
stos
and
sub
movs
jb
addr16
add
(bad)
sbb
cli
iret
add
sbb
pavgb
jl
mov
in
mov
xchg
add
adc
dec
xlat
mov
das
pop
mov
dec
jb
jne
sbb
pop
and
das
adc
es
pmulhw
inc
sbb
dec
cmp
jo
pop
inc
cmp
mov
shr
add
(bad)
pop
xor
test
aad
hlt
xor
(bad)
jmp
xor
pop
cmps
gs
retf
test
sbb
xchg
mov
in
aaa
lock
jnp
jmp
rcl
dec
inc
and
inc
pop
jno
mov
mul
test
pop
adc
outs
test
mul
add
jns
inc
jg
or
ins
test
cli
je
inc
aaa
leave
adc
add
cmp
xor
mov
adc
(bad)
ja
dec
faddp
out
cmp
push
mov
lods
(bad)
mov
or
jb
sbb
retf
jecxz
mov
jmp
dec
ins
lea
push
sbb
xchg
mov
sbb
adc
out
adc
push
mov
xor
ror
das
xchg
add
add
push
dec
rep
rol
mov
push
pop
or
arpl
jg
loop
out
or
jmp
rcl
out
nop
pop
xor
stos
mov
cmps
inc
cmp
daa
xor
inc
adc
stos
dec
std
out
lea
mov
mov
(bad)
inc
sub
push
sbb
(bad)
mov
sbb
pop
ror
mov
test
cs
xchg
jle
dec
scas
aam
sub
pop
pop
aas
sbb
sahf
dec
jmp
loope
mov
pop
das
mov
cli
in
aad
enter
xor
lods
rcl
push
cs
retf
nop
jno
into
sbb
inc
sub
das
xchg
fstp
shr
or
jecxz
mov
pop
data16
mov
mov
mov
sub
das
push
jmp
pop
push
ins
push
cmp
data16
dec
add
aam
popa
aas
sahf
or
mov
imul
out
dec
add
lahf
sbb
dec
test
cmp
addr16
jmp
aas
or
xor
add
or
das
sbb
sub
sbb
ret
mov
ficom
js
call
jl
dec
cmp
sub
pop
mov
pop
mov
lods
mov
pusha
add
cmp
add
test
fsub
fld
dec
je
enter
pusha
out
or
rcr
out
mov
xchg
nop
stc
cld
xor
cmp
mov
mov
add
mov
(bad)
sub
cs
jecxz
mov
call
pusha
xor
adc
mov
push
hlt
rsm
repz
(bad)
sbb
inc
adc
mov
dec
(bad)
xlat
call
sbb
call
xchg
xchg
dec
mov
loopne
shl
dec
test
movs
mov
retf
leave
or
leave
dec
cmps
test
cmp
mov
and
inc
jl
mov
gs
std
or
mov
mov
and
jmp
xchg
cmp
dec
call
sbb
inc
xchg
call
xchg
movs
adc
imul
out
(bad)
es
or
cli
mov
mov
sbb
cmp
outs
add
cmp
cmp
xor
stos
(bad)
cld
aas
adc
xchg
aas
(bad)
fs
jnp
aas
icebp
cmp
xor
sub
popaw
xchg
mov
rcr
and
and
addr16
dec
push
loop
mov
bound
xor
fidiv
mov
mov
dec
stos
nop
pop
sub
adc
imul
movs
sbb
rcl
cmps
sbb
mov
mov
test
jle
cmp
inc
ins
jmp
popa
push
pop
sar
retf
sbb
pop
jle
mov
movs
xchg
xchg
aas
sbb
add
popa
add
push
js
add
movs
ficom
loope
and
push
popa
mov
jp
jge
cmp
jecxz
mov
sub
in
into
lock
scas
dec
jmp
or
add
outs
mov
jae
jecxz
jnp
call
sub
xor
mov
out
pop
mov
adc
dec
loop
pop
push
add
xchg
or
add
jmp
inc
add
movs
dec
jl
popf
fild
movs
ss
mov
add
inc
in
push
cmp
xor
jo
and
jle
gs
jg
imul
push
pop
pop
and
rcl
sahf
push
mov
and
push
call
push
test
ret
add
or
jecxz
movd
enter
mov
mov
xor
icebp
pop
jbe
sub
sar
dec
cmp
mov
or
push
ins
xchg
outs
cmp
sbb
sub
xor
int
adc
cmp
shl
cld
push
xor
push
out
(bad)
jp
call
dec
scas
push
pop
dec
test
rol
jle
aas
mov
inc
jmp
jp
scas
cmp
(bad)
cwde
push
jge
dec
sbb
retf
outs
add
jge
push
inc
bound
jle
dec
and
jmp
xchg
fsubr
cmp
pusha
or
mov
sub
aaa
(bad)
xchg
dec
rol
xchg
ss
sbb
outs
push
or
mov
dec
cmc
push
cmps
push
jp
repz
and
in
mov
das
nop
inc
aaa
xor
inc
call
jge
cmp
or
and
cmp
cmp
add
mov
imul
shl
outs
dec
and
arpl
call
dec
xchg
rcr
mov
js
outs
outs
int3
sub
leave
dec
xchg
push
or
add
jle
ds
ret
xor
xor
cwde
dec
mov
cmp
cwde
pop
xlat
inc
ins
repnz
stos
(bad)
(bad)
mov
xchg
ror
cdq
ret
fiadd
mov
xchg
pop
xchg
cmp
out
xchg
cs
shrd
inc
mov
push
mov
dec
cmp
fsubrp
fst
sub
pop
scas
pop
push
cli
push
sbb
inc
jg
cmc
adc
cmp
loop
inc
fsubr
mov
xchg
mov
and
hlt
and
pop
mov
sbb
add
sbb
inc
xor
outs
push
addr16
xor
jnp
or
aam
arpl
xor
and
or
inc
sbb
(bad)
stc
cmc
dec
xlat
push
add
or
inc
mov
scas
inc
inc
add
sbb
xchg
shl
sub
adc
jno
cli
dec
iret
shr
outs
jbe
dec
or
xchg
mov
mov
jnp
shl
data16
mov
ins
xchg
pop
mov
stc
add
into
cmps
cli
add
push
ds
je
cs
bnd
in
mov
in
sbb
mov
push
scas
cmp
jae
pop
sar
and
out
or
call
lock
hlt
pop
xchg
mov
ds
cdq
sbb
or
or
push
(bad)
pop
test
add
pusha
xchg
in
jb
push
loope
pop
out
dec
in
xor
jmp
outs
std
pop
xor
push
inc
jb
bound
mov
rcr
retf
mov
mov
(bad)
dec
and
sub
mov
mov
pusha
add
mov
adc
fsub
sar
mov
mov
and
call
cs
mov
mov
sub
adc
push
adc
dec
mov
mov
pop
pusha
movs
inc
dec
mov
and
enter
ret
ins
bound
dec
loopne
jb
jbe
mov
ins
inc
and
pop
(bad)
xlat
xchg
add
pop
retf
xchg
push
ins
pop
sahf
adc
cdq
rcr
out
mov
inc
dec
push
cld
jmp
pop
push
cmp
sub
and
adc
daa
mov
fcom
push
dec
adc
cs
cmp
jecxz
test
dec
mov
mov
call
xor
imul
jno
rcl
adc
dec
cdq
jo
repz
cmps
add
push
clc
push
mov
loop
ret
dec
ins
ret
xor
ror
(bad)
data16
test
ins
xchg
jge
mov
lds
add
aas
sub
inc
jns
dec
js
pop
movs
in
sbb
hlt
ja
rcr
test
inc
and
jbe
xchg
ins
sub
rcl
outs
xchg
cmp
jp
jmp
dec
(bad)
mov
lods
add
pop
adc
mov
jp
sub
mov
or
aam
mov
test
xchg
jmp
pop
(bad)
outs
bound
out
jp
aas
xchg
out
nop
cmc
jge
sub
xchg
cmps
sbb
not
daa
push
dec
xchg
sahf
test
add
jg
lock
push
mov
cdq
push
jno
sbb
cmp
add
(bad)
cdq
and
stos
fimul
mov
push
pop
inc
sahf
sub
and
mov
cmp
lods
xchg
and
test
xchg
push
in
addr16
pop
add
dec
sbb
pop
and
(bad)
fnstsw
or
test
lahf
cmp
adc
xor
mov
sbb
enterw
adc
imul
xchg
xor
inc
ins
gs
adc
out
xor
and
rol
adc
js
mov
rcr
jbe
lds
popf
sbb
mov
cmps
(bad)
mov
das
xor
add
pop
dec
iret
jbe
mov
add
pop
jbe
outs
add
push
add
fldenv
cmp
stos
mov
add
dec
push
sar
clc
sar
add
mov
mov
lds
mov
icebp
and
push
jle
mov
call
sar
mov
outs
dec
jmp
push
jmp
inc
xlat
inc
ficom
or
inc
ds
ds
push
or
mov
push
push
(bad)
data16
(bad)
or
ret
sbb
fimul
sub
ret
ins
fsub
dec
add
cdq
(bad)
jno
push
and
xor
mov
cmps
sbb
adc
adc
jg
mov
add
repz
xor
les
mov
pop
adc
jmp
iret
dec
outs
call
inc
inc
add
add
mov
xor
xchg
das
xor
ds
xchg
dec
js
jle
xor
xchg
test
push
pop
jne
ins
push
push
repnz
inc
imul
call
in
pop
mov
jbe
xlat
add
xor
stos
cmp
add
cmp
lahf
xchg
dec
or
push
push
ret
inc
pop
or
inc
adc
call
jns
inc
sahf
nop
pop
dec
stc
dec
xor
xchg
push
mov
les
bound
pop
shl
xchg
mov
cmp
inc
mov
mov
sub
fcomp
rcl
mov
add
(bad)
and
xchg
hlt
mov
aam
in
fwait
mov
ja
or
outs
lods
aam
mov
std
jns
(bad)
or
aad
push
xchg
inc
inc
add
outs
shr
repz
mov
repz
aad
sub
sti
push
fisubr
pusha
dec
in
or
xor
inc
sar
and
js
(bad)
pop
mov
mov
inc
pusha
jno
int
jae
fcom
dec
inc
add
cmps
pop
mov
mov
or
pop
movs
push
mov
fwait
outs
xchg
or
pop
jmp
add
and
outs
mov
imul
lds
fsubrp
push
push
outs
js
rcl
dec
dec
dec
pop
ins
loopne
mov
pusha
jl
push
jbe
out
xchg
sub
jnp
cmp
aaa
(bad)
dec
inc
xchg
mov
mov
jns
test
xor
cdq
js
outs
dec
ins
outs
out
(bad)
jmp
mov
mov
jns
fwait
xchg
sahf
movs
dec
add
inc
add
pop
mov
test
js
jae
out
pop
dec
loopne
lods
in
bound
or
pop
push
(bad)
mov
js
shl
out
imul
fld
rol
xchg
or
loopne
mov
push
mov
ja
scas
(bad)
call
jb
mov
jecxz
(bad)
jmp
or
jmp
dec
add
mov
mov
sub
dec
sbb
gs
add
pop
inc
pop
jecxz
sbb
lea
cmp
cdq
lea
sbb
aas
jmp
xor
push
retf
dec
pop
and
xor
sti
mov
sbb
fs
mov
xchg
imul
(bad)
jg
lock
fadd
aas
(bad)
push
rcr
les
fadd
xchg
push
inc
mov
icebp
mov
(bad)
adc
mov
iret
sbb
icebp
out
jle
fcmovne
xor
call
inc
sahf
mov
sub
pop
add
xor
cmp
jl
mov
add
cli
jnp
test
cmps
popa
mov
mov
outs
adc
call
and
aam
int
cmp
jmp
push
imul
test
popa
mov
icebp
push
jg
icebp
cld
dec
mov
sub
sbb
mov
adc
fmul
(bad)
(bad)
data16
add
stos
outs
pop
add
jbe
xchg
push
into
addr16
fbld
or
mov
pop
pop
sub
push
je
sub
cmp
add
push
pusha
lds
xor
inc
sbb
push
sbb
sub
loop
push
cs
fisttp
pop
sub
xor
sub
xchg
popa
adc
adc
cmp
pop
add
cmp
aas
ret
dec
aam
sahf
inc
sbb
out
sbb
gs
pop
jge
je
push
pop
xlat
xor
pop
inc
into
into
sub
dec
pop
lock
or
sbb
dec
dec
push
aas
aad
faddp
inc
dec
or
xor
push
mov
and
xor
adc
mov
dec
push
loope
rcr
xchg
in
movs
imul
mov
and
and
ret
pop
mov
in
ds
jp
dec
jmp
mov
cli
sbb
xchg
addr16
xchg
rcl
dec
(bad)
pop
ficomp
jmp
add
dec
xchg
sahf
ficomp
mov
(bad)
and
rol
cmp
rcr
and
and
int
or
mov
inc
mov
inc
sahf
das
ja
cmps
bound
ror
(bad)
scas
test
call
rol
sahf
cmp
aaa
xchg
mov
push
mov
cmps
jmp
pop
or
fsubr
pop
es
sub
pusha
xchg
sbb
sbb
mov
and
pop
cmps
cld
sbb
gs
xor
mov
loop
or
sub
(bad)
xchg
push
outs
in
daa
cmps
fnstenv
xor
pop
jle
dec
ret
or
nop
sbb
sar
push
jmp
retf
(bad)
(bad)
add
in
jbe
in
xchg
xchg
outs
xor
dec
add
pop
cmc
xadd
mov
jp
mov
sbb
push
iret
or
push
in
bound
stos
cmp
push
aas
inc
push
pop
pop
or
out
repnz
ret
test
push
adc
push
xchg
out
icebp
dec
pop
mov
push
xchg
sbb
cli
push
test
cmp
sbb
mov
xor
cmp
dec
loop
or
clc
jnp
mov
xor
int3
push
sbb
movs
cmp
test
mov
xchg
lods
pop
xor
js
scas
scas
js
jg
mov
push
adc
jecxz
pop
popf
adc
mov
or
pop
pop
repnz
pusha
aam
ins
or
leave
mov
(bad)
mov
jecxz
lods
pop
dec
lea
retf
jg
add
jle
adc
in
cmp
adc
pop
ror
mov
mov
adc
rcl
fbld
call
popa
ins
xlat
shl
(bad)
xchg
shl
and
int
das
sbb
outs
std
jae
jl
xchg
leave
in
mov
(bad)
push
movs
rcl
xchg
icebp
cmps
or
outs
repnz
inc
fimul
je
invd
mov
arpl
mov
out
(bad)
xchg
add
jns
jo
and
dec
popa
xor
test
and
cmp
out
shl
xchg
stc
sahf
lock
and
test
add
shl
inc
imul
or
retf
xchg
fstp
ss
push
or
cld
dec
or
mov
push
dec
adc
mov
sbb
cmp
std
sbb
into
pop
sub
or
ror
mov
int
pop
addr16
mov
xchg
les
(bad)
mov
shl
jo
cmps
add
push
out
xchg
mov
and
adc
outs
pop
idiv
sbb
mov
arpl
call
addr16
mov
cmps
add
or
sbb
sbb
mov
sub
ror
push
add
mov
and
jae
add
and
aaa
pop
jecxz
adc
dec
call
pop
sub
scas
test
sar
jp
push
adc
jbe
or
mov
adc
ficomp
or
and
leave
jmp
lahf
inc
mov
jl
mov
or
cmp
lods
mov
mov
mov
or
sub
(bad)
sub
rcr
jp
bound
fwait
cli
pop
loopne
add
sti
out
bound
push
je
dec
shl
mov
int3
adc
call
scas
adc
lea
jl
js
mov
pop
push
ins
add
pop
cmp
and
jl
pop
test
ret
cmp
pop
xor
jp
mov
jp
pushf
pop
jge
pop
mov
adc
jbe
adc
dec
les
jb
adc
je
xchg
xchg
jge
mov
pusha
push
jno
push
jp
lea
pusha
and
jle
stos
(bad)
or
(bad)
pop
lock
rcl
and
push
iret
adc
and
jg
and
inc
dec
and
jge
jg
out
mov
mov
or
addr16
mov
mov
pusha
call
jb
movs
adc
mov
scas
push
and
es
loopne
jecxz
push
jecxz
pusha
push
add
or
(bad)
call
scas
mov
pop
shr
daa
inc
mov
cmp
test
cmp
fiadd
repz
sbb
ins
mov
cmp
aam
push
jl
sbb
pop
repnz
sbb
add
jle
cmp
lods
or
xor
jno
dec
sub
cmp
cmp
xchg
retf
adc
movs
movs
mov
enter
ret
shr
repnz
ss
cmp
(bad)
adc
mov
rcr
dec
retf
dec
mov
enter
es
imul
scas
or
mov
xchg
inc
dec
mov
inc
aaa
retf
cs
sbb
xchg
push
mov
test
push
sbb
xchg
dec
cmp
mov
imul
ins
mov
retf
cwde
arpl
adc
pop
sbb
ret
pop
pushf
daa
jp
push
push
push
push
mov
stc
cmp
pop
mov
fild
jb
imul
ds
jp
inc
jl
sub
and
push
jp
dec
push
pop
test
inc
stos
adc
inc
xor
mov
inc
push
push
movs
lds
loope
les
imul
cld
les
ret
inc
arpl
sar
or
pop
dec
xor
cs
add
mov
popf
out
mov
mov
iret
jmp
pop
and
jp
xchg
sub
test
ficom
data16
pop
mov
loopne
lods
mov
xor
jb
imul
xor
test
inc
popa
add
add
sub
ss
or
sbb
sbb
mov
out
xchg
adc
retf
xchg
aaa
dec
(bad)
js
ss
jl
mov
xlat
mov
sbb
adc
(bad)
cmp
clc
mov
out
mov
mov
push
data16
in
test
xor
mov
add
shl
jl
mov
xchg
(bad)
push
xor
inc
test
or
dec
jge
data16
dec
mov
mov
adc
mov
push
mov
aad
cmp
jmp
lods
and
pop
arpl
xor
imul
xchg
shr
cli
imul
pop
mov
jae
punpckldq
and
test
xor
dec
dec
jmp
cli
or
hlt
mov
aaa
adc
sbb
mov
xor
aas
add
mov
out
(bad)
aas
es
fwait
movs
mov
xor
nop
pop
jnp
rcpps
sub
or
xor
lods
clc
sahf
es
fimul
inc
jbe
dec
(bad)
icebp
sbb
mov
xor
push
lock
mov
dec
(bad)
push
jb
bsf
in
popa
sbb
outs
add
outs
lahf
imul
dec
jecxz
sub
pop
sub
xor
pop
sbb
nop
add
lods
jno
mov
add
push
push
mov
mov
pop
inc
lahf
mov
xor
push
call
pop
addr16
fwait
nop
inc
add
push
xchg
mov
cmp
repnz
call
dec
xchg
dec
mov
inc
adc
into
and
mov
xlat
mov
and
fisttp
jl
push
dec
mov
jle
mov
mov
add
mov
xchg
and
popf
fisub
mov
iret
dec
push
xor
dec
push
dec
xchg
jle
mov
pop
cmp
sar
xor
or
pop
imul
cdq
shl
xchg
pop
(bad)
cmc
rol
inc
bound
das
pop
push
iret
and
cmp
pushf
sbb
addr16
aaa
iret
imul
mov
xor
and
or
inc
outs
sbb
sar
add
xlat
mov
movs
adc
dec
jns
add
out
xchg
push
lods
arpl
cmp
ss
push
popa
fld
xchg
outs
jecxz
jp
xchg
cld
jmp
sbb
mov
mov
fsub
dec
out
in
push
test
push
lahf
sub
cmc
mov
jne
in
cmp
imul
mov
sbb
popf
mov
or
push
push
mov
mov
adc
outs
adc
fldenv
adc
dec
push
inc
popa
add
sub
gs
cmp
ror
cmp
push
sar
in
sar
imul
mov
or
xchg
xchg
retf
inc
mov
sbb
int
lea
call
mov
and
(bad)
cmp
fisub
ja
ds
ds
mov
cmp
ins
mov
push
or
jp
or
cmp
jnp
cmp
pop
(bad)
jmp
jno
lds
jl
es
jne
dec
loop
mov
inc
add
sub
or
pop
test
fidiv
jmp
dec
(bad)
(bad)
mov
push
cmp
je
popa
dec
mov
push
sahf
inc
push
aaa
xchg
shl
std
jecxz
mov
xor
dec
mov
xlat
je
out
and
hlt
xor
push
mov
mov
push
cmp
dec
add
adc
or
mov
out
mov
mov
jmp
sub
fwait
mov
repz
ss
lock
inc
push
neg
xchg
or
pop
push
fsubr
loope
fs
pop
and
and
out
test
push
adc
aas
jmp
daa
or
repnz
sbb
jle
fs
ret
adc
or
rcl
xchg
mov
gs
fidivr
and
jecxz
imul
xchg
inc
push
pop
sbb
sub
bound
push
movs
outs
push
add
pop
out
mov
push
repnz
pop
shr
push
nop
mov
cli
out
data16
out
mov
inc
sub
sub
(bad)
pop
cmc
mov
inc
push
and
(bad)
push
jo
es
pop
jo
inc
outs
pop
adc
dec
es
rcl
loop
out
mov
fs
push
out
push
mov
xlat
(bad)
push
jge
add
jg
add
popa
pusha
(bad)
mul
neg
arpl
out
add
dec
push
xchg
aas
adc
mov
fdivr
pop
cs
imul
ss
nop
push
adc
sub
pusha
sar
jns
jecxz
push
rol
imul
aas
jo
pop
xchg
jns
dec
add
test
and
aas
adc
xor
aaa
mov
cmp
sbb
dec
ficomp
dec
aam
or
mov
aaa
and
or
mov
fistp
es
inc
mov
ds
popa
aad
cmc
jl
retf
es
(bad)
call
and
sub
xchg
pop
inc
mov
dec
outs
sbb
mov
xchg
inc
mov
mov
cmc
sub
data16
jmp
sbb
sbb
add
sub
and
call
fcmovb
mov
in
pushf
mov
hlt
and
rcr
inc
push
repz
out
xor
cmp
arpl
sub
jo
mov
xor
ss
xchg
jg
pop
nop
mov
cmps
adc
sbb
cli
pop
pop
cmp
mov
or
fwait
aaa
mov
xor
dec
repz
pop
pop
sbb
and
js
cmp
or
and
pop
call
inc
lds
mov
clc
add
loope
xlat
push
or
dec
mov
sar
dec
cs
and
xchg
retf
jae
dec
mov
add
mov
cdq
mov
daa
mov
and
lea
mov
and
inc
inc
test
imul
rcl
fist
(bad)
push
push
ret
arpl
mov
addr16
xchg
xor
inc
adc
inc
dec
cmps
pop
pop
sub
ret
and
dec
push
je
test
aas
imul
pop
cmp
out
push
pop
pop
arpl
repnz
xor
mov
or
pop
and
mov
inc
pusha
mov
mov
jle
pop
mov
pusha
outs
pop
popa
push
jle
rol
ss
mov
push
push
push
div
mov
mov
push
sbb
out
loope
cmp
in
pop
mov
pusha
pop
pop
push
jb
mov
add
and
les
push
sub
xor
(bad)
out
adc
int
sbb
jno
xchg
cmp
mov
dec
inc
in
into
or
shr
pop
pop
jle
mov
inc
cmp
retf
(bad)
xor
repnz
ret
sub
mov
loope
jb
mov
outs
push
fisttp
push
push
repz
cmps
jp
push
sbb
aas
dec
cmp
push
pop
or
jmp
ja
xor
ror
aas
mov
jle
jbe
sar
mov
call
cli
dec
add
add
push
inc
cmp
push
sub
ja
push
adc
mov
test
xor
repnz
test
or
ret
ret
inc
pusha
mov
add
push
inc
outs
out
call
in
(bad)
movs
pop
addr16
call
test
stc
jl
into
outs
add
rol
mov
mov
cmp
jle
nop
cmp
pushf
shl
push
sub
push
add
lock
cmp
aaa
push
dec
push
cmp
cmp
add
outs
push
shr
jle
xchg
cdq
mov
dec
adc
jg
or
cs
push
out
daa
in
fild
or
pushw
sbb
(bad)
cs
fldcw
push
(bad)
push
mov
je
dec
pusha
jp
sbb
inc
outs
mov
sub
ltr
ins
icebp
icebp
and
add
sahf
fwait
dec
arpl
jle
sti
test
push
push
(bad)
cmp
imul
ins
addr16
test
int
sahf
cld
push
inc
push
push
and
mov
cwde
in
repz
mov
push
jp
pop
sbb
add
cmp
es
sub
jb
fwait
int
dec
sub
or
popf
fwait
int
repz
popa
sub
cmp
ins
ss
das
push
packuswb
sbb
mov
pop
sahf
daa
sub
dec
retf
int
mov
and
lds
push
mov
ins
ss
add
clc
cmps
pusha
mov
push
push
cmp
mov
mov
mov
lods
mov
lahf
fisub
mov
push
or
scas
stos
lock
pop
or
ficom
call
jbe
push
sub
xchg
rcl
ins
(bad)
pop
mov
mov
aam
and
add
inc
sbb
clc
movs
or
imul
dec
add
mov
data16
js
(bad)
adc
or
(bad)
mov
pusha
xor
retf
and
fs
repz
rol
sbb
mov
jae
jg
xor
adc
(bad)
dec
add
cmps
adc
jp
push
add
sub
test
into
add
mov
fisubr
pop
ret
movs
in
xor
shl
pusha
and
add
pop
clc
test
xchg
je
mov
or
xor
mov
fistp
dec
push
loop
inc
jle
movs
shl
add
fwait
mov
cli
daa
mov
mov
loopne
pop
dec
in
bound
add
fdivr
dec
addr16
ficom
outs
ins
dec
push
test
jecxz
dec
add
js
rol
pusha
sahf
mov
push
ja
into
sbb
inc
js
push
lods
dec
adc
mov
rcl
xchg
lods
rcr
lock
(bad)
scas
xor
cmp
jmp
rol
sub
sbb
repz
pop
cmp
test
dec
addr16
scas
arpl
inc
push
add
clc
adc
pop
sbb
mov
or
sub
bound
mov
daa
add
lock
stos
jl
into
mov
out
xor
xchg
push
dec
sub
(bad)
jge
cmp
fwait
mov
pop
out
(bad)
ins
loopne
and
in
pop
loope
xor
cmp
in
outs
loope
jg
into
jmp
add
outs
add
sub
test
push
clc
in
cmp
xor
xchg
mov
xor
push
add
jbe
pop
outs
pop
pushf
ret
dec
rol
fwait
repz
fwait
inc
shl
(bad)
jnp
or
mov
inc
cld
mov
mov
and
lods
cmps
mov
test
outs
push
fimul
sbb
cld
push
into
mov
retf
ins
sub
(bad)
push
xchg
aas
mov
and
das
ds
loopne
adc
xor
inc
cmp
jecxz
cmp
push
inc
mov
sbb
push
sub
sub
jne
jbe
pop
add
movs
push
or
rcr
cli
ror
mov
inc
shr
mov
push
jne
and
dec
data16
shl
xchg
or
pop
mov
or
adc
in
movs
pushf
cmp
xchg
push
or
not
dec
pop
ror
test
dec
out
int
pusha
jge
cmp
or
or
aaa
push
pop
add
mov
fwait
push
cmp
mov
inc
addr16
and
(bad)
push
push
out
xchg
push
in
mov
jnp
add
cs
dec
aaa
pop
xor
movs
sbb
aaa
out
sub
add
cmps
push
sahf
cmps
out
push
into
cmp
pop
adc
(bad)
pop
das
sbb
ds
and
adc
and
sub
push
pop
inc
and
jbe
or
aad
dec
lea
xor
jno
jg
leave
mov
add
sub
or
sbb
adc
clc
ja
outs
in
jae
xor
or
cmc
inc
ret
dec
loope
sub
jae
push
push
sub
xor
xor
dec
in
xchg
outs
or
jecxz
int
mov
scas
jp
or
(bad)
adc
call
int
inc
pop
shr
inc
ficom
xchg
sbb
idiv
(bad)
mov
lods
out
jns
push
in
sbb
pop
sub
sbb
dec
push
std
push
pop
scas
lahf
inc
mov
shl
in
es
and
(bad)
sub
pop
and
call
sbb
adc
mov
loope
jae
std
cwde
cwde
mov
adc
sar
jle
mov
dec
adc
adc
(bad)
cld
xchg
mov
mov
retf
push
outs
mov
adc
loope
pop
cmp
mov
and
push
setne
push
or
(bad)
pop
ret
mov
mov
pop
fdiv
jnp
dec
adc
xchg
(bad)
inc
jg
pop
and
mov
call
mov
sub
inc
ret
mov
xchg
add
push
push
push
(bad)
ret
push
cmps
dec
aas
xor
jp
mov
adc
push
and
repnz
shl
mov
sbb
inc
mov
pushf
cmp
ffreep
retf
pop
dec
jecxz
call
movs
adc
sar
call
jge
test
and
dec
or
mov
or
sub
in
stos
pop
enter
adc
sub
or
push
dec
outs
push
nop
fwait
xchg
pop
fsubr
cmps
shl
jmp
add
nop
aas
pop
mov
pop
inc
add
xlat
mov
sub
(bad)
in
mov
inc
cmp
mov
or
jle
shr
dec
and
inc
mov
das
ror
addr16
jmp
(bad)
(bad)
jmp
rcr
xor
or
xor
add
(bad)
add
jbe
imul
adc
mov
addr16
rep
push
mov
mov
jbe
add
jbe
xor
add
(bad)
fs
inc
dec
sub
jae
adc
xor
dec
aad
fimul
sbb
inc
add
mov
sbb
and
popa
or
shl
je
ret
or
out
shl
pop
lock
cmp
shl
cmp
jb
adc
add
(bad)
enter
ss
sub
es
das
test
push
inc
xchg
ins
int3
sbb
sbb
and
xor
das
xor
inc
mov
sub
adc
dec
or
sbb
and
add
lahf
aas
aas
jp
or
test
ds
cmp
popf
pop
or
cmp
inc
not
(bad)
frndint
xor
or
out
jmp
sbb
mov
dec
jmp
es
mov
mov
iret
and
sbb
xchg
push
add
retf
jmp
xchg
push
fwait
or
or
or
push
jle
icebp
push
push
scas
ret
adc
(bad)
and
dec
push
push
mov
mov
ins
pop
jb
cmp
add
add
xor
push
shl
and
xor
loop
fisttp
pop
jp
ss
loope
adc
nop
jno
inc
inc
out
sbb
cli
es
inc
jbe
dec
mov
iret
push
mov
adc
loope
addr16
add
push
outs
mov
mov
(bad)
adc
mov
inc
es
jmp
loopne
out
xor
dec
inc
xchg
xchg
xchg
mov
or
stos
jno
loop
sub
pop
adc
add
mov
fist
mov
cmps
mov
or
retf
cmps
cmp
mov
(bad)
lds
adc
mov
inc
shl
xor
jbe
loope
add
adc
push
(bad)
inc
push
pop
xor
dec
or
mov
mov
call
jp
mov
sbb
mov
das
(bad)
ds
cs
add
icebp
(bad)
(bad)
mov
jnp
imul
push
mov
adc
loopne
repnz
push
add
jg
dec
push
(bad)
mov
ret
fidivr
mov
mov
push
js
sbb
iret
mov
and
int3
xchg
pop
mov
popf
mov
stos
xor
hlt
push
pop
add
dec
cdq
cli
imul
pop
clc
aas
xchg
inc
movs
and
mov
dec
xor
and
and
adc
in
je
lods
sbb
push
gs
test
bound
mov
out
mov
lock
fimul
dec
pop
scas
pop
push
mov
sbb
ret
ret
mov
cwde
add
in
mov
and
ds
cmp
(bad)
and
(bad)
cmova
rol
sbb
inc
or
test
xchg
inc
jbe
adc
jo
pop
push
jecxz
xchg
push
mov
push
push
xchg
and
jle
call
dec
cmp
mov
cmp
cmc
push
xlat
cmp
ret
jnp
or
popf
or
mov
mov
inc
pushf
repnz
mov
popf
push
or
jecxz
test
push
jl
add
sub
sbb
mov
inc
jmp
add
into
xor
outs
arpl
clc
ins
sahf
push
movs
lea
ror
sbb
out
loope
jp
cmp
and
sbb
push
mov
add
cld
jg
ss
mov
sub
mov
add
rcr
and
push
ins
jp
ss
es
sbb
push
fistp
imul
add
dec
ds
test
mov
call
push
mul
cmc
add
push
push
inc
fisttp
xchg
dec
mov
jno
adc
lea
out
jp
jne
pop
xor
inc
mov
call
div
outs
ss
fwait
mov
rcr
cmps
icebp
call
mov
and
adc
cli
jmp
sub
sub
add
(bad)
addr16
xor
repnz
mul
xchg
int3
dec
mov
pop
mov
leave
shr
xlat
out
sbb
adc
jo
pop
enter
or
loopne
leave
retf
enter
scas
inc
mov
inc
imul
cld
xchg
and
or
cs
in
es
mov
jl
xor
push
rcl
(bad)
pop
push
adc
and
or
jmp
ins
cmp
cmp
and
mov
sub
pop
push
push
jmp
stc
cmp
sub
in
in
call
pop
jecxz
xchg
out
cld
or
addr16
mov
jno
fldenv
sbb
pop
mov
mov
xchg
rcl
into
bound
ds
push
fiadd
mov
push
pusha
stos
inc
ds
inc
call
cdq
xchg
lar
sub
setp
push
js
out
aad
mov
xchg
and
mov
mov
mov
and
pop
add
pop
inc
aam
jg
inc
jle
call
popa
loop
inc
mov
pop
and
sbb
aam
pop
ins
add
xor
pop
iret
stos
jp
dec
push
sbb
mov
das
pop
in
sbb
or
rol
cmp
adc
loop
movs
loop
stos
or
push
add
aaa
jp
push
lahf
mov
cmp
das
cmp
out
inc
push
dec
aas
scas
push
xchg
movs
dec
pop
cli
mov
xchg
or
xchg
sub
jns
(bad)
out
inc
push
aas
dec
jle
push
dec
push
xchg
pop
sub
scas
jns
lss
repz
jno
xchg
push
push
fcomp
mov
into
mov
mov
out
push
lods
and
sahf
outs
cmps
mov
movs
ja
not
sar
jmp
xchg
pop
out
push
aad
icebp
xor
icebp
cwde
adc
adc
mov
mov
pop
sahf
add
(bad)
out
test
push
cld
out
xor
test
cmps
add
push
test
xchg
mov
les
cli
dec
mov
xor
mov
xchg
retf
jecxz
push
fdivr
jo
das
gs
sahf
mov
push
xchg
call
loop
(bad)
mov
in
pop
out
jno
je
popa
inc
lock
pop
stc
xchg
cld
in
pop
xlat
test
pop
add
and
xor
mov
and
ficom
push
add
loop
inc
js
movs
mov
pop
imul
dec
gs
movs
aam
push
jb
pop
mov
imul
push
pop
ficom
add
call
ins
cmp
adc
stos
test
retf
mov
(bad)
sub
add
cwde
cmp
repnz
inc
call
test
pop
cmp
cmps
bound
push
neg
inc
mov
adc
fild
sub
stos
inc
das
dec
int3
inc
mov
push
popf
retf
(bad)
(bad)
cld
bound
fcom
mov
sbb
dec
inc
stc
pop
adc
int3
mov
pop
or
dec
outs
mov
ret
dec
push
sub
jmp
xchg
xlat
push
cmp
xlat
aad
xchg
fistp
mov
mov
xchg
cmp
adc
cmps
pushf
xchg
imul
xchg
mov
bound
ret
inc
and
adc
nop
push
cmp
mov
stos
shl
call
test
mov
adc
xchg
inc
xchg
mov
inc
test
div
int
xchg
iret
std
xchg
mov
xchg
mov
add
cmps
out
fidivr
fmul
sbb
sbb
repnz
push
mov
sti
test
jge
test
mov
push
cmc
aas
push
sub
jp
retf
ins
mov
inc
inc
bound
sub
mov
mov
mov
nop
and
repnz
or
sbb
dec
inc
(bad)
xor
mov
mov
sar
xor
push
sti
sahf
and
fiadd
mov
mov
adc
popa
or
movs
movs
arpl
pop
loop
repz
jmp
rcr
mov
sbb
adc
outs
and
cmc
pop
les
push
mov
sbb
popa
add
icebp
xor
fdivr
mov
sub
lahf
sbb
xchg
je
inc
xor
jle
fisttp
stc
(bad)
(bad)
dec
mov
dec
call
mov
pop
inc
sahf
call
cmp
ja
imul
or
addr16
or
test
dec
push
jno
push
and
jecxz
mov
scas
icebp
shr
xlat
ins
lahf
lods
xor
fst
jp
add
adc
push
(bad)
(bad)
ret
leave
fisub
outs
xchg
movs
retf
sbb
cli
and
xchg
iret
push
jmp
mov
ds
mov
rcl
jmp
mov
clc
fadd
push
in
inc
lds
cmps
dec
mov
mov
adc
adc
inc
or
pop
and
mov
and
mov
hlt
sub
cmps
adc
or
push
adc
pop
aad
push
(bad)
call
or
mov
jnp
pop
out
adc
dec
and
pop
or
push
inc
mov
fimul
popa
pusha
aas
or
jl
adc
popf
imul
xor
les
clc
inc
jmp
iret
xchg
inc
pop
data16
sbb
push
push
scas
inc
les
mov
bound
(bad)
mov
add
push
add
fiadd
mov
mov
ins
das
popf
pop
xchg
sub
mov
div
xor
arpl
(bad)
cli
or
jbe
and
add
pusha
xor
or
pusha
cmps
out
mov
dec
int
mov
test
xor
arpl
cmps
ins
inc
mov
add
dec
cmp
mov
stos
sbb
xor
mov
sub
jle
mov
jb
push
add
add
and
dec
add
jo
cmps
hlt
sbb
push
std
ss
jg
hlt
retf
pop
out
leave
dec
cwde
push
(bad)
clc
and
cmp
fidiv
jbe
arpl
fs
push
ds
jne
mov
and
stos
sub
push
mov
push
neg
mov
inc
xchg
inc
cmps
mov
sbb
sbb
cs
out
jge
sub
sbb
test
cmp
les
test
iret
mov
adc
mov
cmc
xchg
mov
lahf
lock
jbe
or
pop
sbb
shr
jno
mov
mov
xchg
(bad)
shl
mov
push
ins
call
ret
jl
loop
pop
mov
and
cmc
mov
push
jb
pop
xor
loopne
push
xor
(bad)
adc
(bad)
push
xor
mov
and
(bad)
pop
sbb
sti
push
push
cld
pop
inc
clc
jns
and
mov
jbe
in
mov
sub
les
mov
(bad)
in
add
mov
shr
shr
cmps
clc
cmp
and
ja
jmp
pop
enter
mov
mov
or
ja
push
dec
pop
cmps
(bad)
sub
outs
xchg
ds
jmp
arpl
inc
int3
mov
loop
push
mov
and
sub
inc
arpl
dec
xor
fsub
pushf
sbb
push
mov
loop
and
push
lock
jbe
mov
ds
add
pop
xor
mov
sahf
cs
loop
sub
(bad)
(bad)
push
(bad)
pop
push
push
(bad)
push
and
(bad)
popa
and
push
push
in
jl
dec
mov
inc
jnp
ds
xor
pop
mov
mov
call
and
sbb
(bad)
push
mov
out
inc
rol
cmp
sti
addr16
jb
ret
push
sbb
fist
pop
xchg
and
push
jl
sbb
and
cmps
inc
lods
sbb
jns
jb
dec
jno
add
dec
mov
in
(bad)
cli
cs
jl
jl
xchg
aas
push
push
in
sbb
add
dec
loop
rol
jmp
scas
jo
sbb
and
mov
mov
aad
adc
inc
je
test
sbb
iret
js
cmp
sbb
movs
movs
(bad)
sbb
cmp
add
(bad)
inc
loope
or
or
les
adc
cmovbe
cmp
mov
adc
ret
mov
in
movs
mov
cdq
cli
retf
xor
test
mov
bound
jecxz
xor
dec
mov
push
mov
outs
xchg
pop
int
lahf
sbb
fild
dec
xor
xchg
pop
mov
mov
sahf
add
test
cmp
dec
loopne
dec
(bad)
int3
xchg
dec
daa
or
mov
aad
mov
shl
loop
ret
shl
scas
push
jmp
push
add
dec
inc
mov
push
adc
dec
mov
lods
xchg
or
add
pop
imul
das
lock
jnp
cli
mov
sub
ss
scas
not
cdq
pusha
jb
popa
imul
adc
jmp
fisttp
mov
ret
repz
mov
inc
sub
inc
str
jle
pushf
push
add
ds
inc
push
adc
sub
mov
dec
pop
push
sub
pop
jmp
popf
push
mov
push
fdivr
popa
sub
retf
xchg
xchg
div
call
icebp
dec
dec
arpl
pop
adc
jae
jle
jmp
mov
jne
adc
ja
ror
aas
ss
xchg
and
mov
add
out
push
daa
or
dec
mov
push
mov
in
in
ins
sbb
cld
ret
pop
sbb
push
mov
mov
inc
ror
xchg
mov
je
fstp
mov
sub
dec
sub
inc
fxch
retf
xchg
adc
outs
out
push
mov
or
inc
bound
mov
xchg
dec
add
xor
mov
jne
stc
pop
jmp
stos
push
xchg
sub
scas
test
imul
imul
dec
mov
dec
shl
mov
aas
inc
cmp
ret
mov
dec
iret
jbe
(bad)
adc
jb
xor
push
jp
pop
mov
push
cmps
outs
push
push
iret
mov
fs
out
dec
sbb
ja
pop
and
sbb
(bad)
lds
and
or
es
or
mov
xor
dec
add
mov
js
jno
sub
add
pop
or
outs
call
mov
cmp
dec
bound
inc
and
inc
es
xor
inc
inc
mov
cmp
nop
mov
stos
in
mov
test
stc
dec
adc
adc
sub
js
or
aaa
mov
addr16
mov
and
jmp
xchg
inc
jae
or
(bad)
(bad)
jle
(bad)
mov
push
and
imul
add
adc
inc
pop
jbe
ret
mov
(bad)
stc
inc
push
xchg
or
push
mov
pop
xchg
shl
cs
mov
ret
popa
fstp
jno
jecxz
pop
jp
ret
push
pusha
and
sbb
in
lock
shl
jae
mov
stos
stos
mov
or
pop
ret
shl
sbb
mov
push
add
movs
ret
jle
pusha
inc
and
mov
mov
dec
lods
lea
or
jecxz
rol
mov
aad
loope
or
xor
and
rcr
stc
inc
retf
cwde
inc
cmp
shl
dec
fimul
push
fimul
push
add
hlt
mov
gs
fnstcw
int
push
or
push
cs
mov
jmp
jb
loope
nop
mov
and
retf
jg
cmp
push
loope
(bad)
xchg
in
ret
xlat
adc
fisubr
fld
mov
push
add
mov
retf
cld
dec
jmp
pop
ret
shr
mov
inc
fs
cmp
inc
pop
ror
es
adc
or
cmp
add
pop
jg
cmp
and
ds
mov
stos
xchg
cwde
dec
xchg
not
out
push
test
lahf
xchg
dec
cmp
inc
pop
arpl
adc
out
add
push
jmp
lods
adc
inc
pop
push
mov
add
and
add
mov
not
and
jae
into
(bad)
mov
jns
test
jle
sbb
mov
outs
inc
shr
jbe
dec
jmp
cmp
sbb
imul
cmp
aas
hlt
fwait
mov
lock
popf
mov
fucom
shr
sbb
adc
loope
ss
adc
or
push
lods
push
inc
js
dec
in
cmp
xor
push
imul
xchg
sbb
call
jmp
ins
lahf
inc
adc
ror
mov
push
call
les
ds
mov
sbb
xchg
cs
shr
sub
imul
imul
sar
or
lahf
jmp
test
inc
adc
and
test
or
adc
or
push
ret
inc
xchg
add
lds
(bad)
xor
imul
test
pop
mov
ds
adc
test
imul
xor
mov
pop
dec
int
jp
mov
add
ins
call
aas
inc
js
push
shr
or
jmp
cmp
add
push
xlat
imul
hlt
ret
ds
add
ja
mov
and
adc
cli
mov
fiadd
(bad)
mov
sbb
test
popa
and
inc
dec
(bad)
dec
dec
nop
sar
jl
nop
pushf
adc
test
(bad)
jnp
ds
aaa
cmp
pop
mov
ins
into
(bad)
dec
sbb
ss
dec
clc
dec
in
cmps
scas
dec
jp
pop
pop
outs
push
addr16
(bad)
pop
out
xchg
jo
add
stos
in
dec
or
iret
xchg
or
xor
shl
mov
push
xlat
mov
mov
add
pop
lods
gs
mov
xchg
dec
push
adc
pop
sbb
push
aas
pop
dec
ins
cli
int
dec
jl
or
adc
push
sub
adc
push
push
push
cmp
push
mov
rcl
pop
sub
ds
loope
mov
dec
pop
outs
pusha
inc
fisubr
repnz
adc
out
adc
dec
xchg
mov
pusha
scas
ret
push
pusha
push
push
sbb
jae
pusha
push
mov
add
jae
sub
loop
and
hlt
jb
push
fidiv
ds
dec
sub
adc
(bad)
adc
jle
sub
add
sbb
dec
test
call
ret
cmp
out
imul
sahf
inc
or
gs
sbb
mov
or
jbe
and
jg
inc
push
cmp
xor
(bad)
push
xlat
addr16
jmp
and
jb
adc
sbb
call
adc
jg
lahf
sbb
cs
jl
les
sbb
push
push
add
adc
add
push
and
out
mov
aam
pop
push
jbe
add
jg
pop
dec
push
cmp
lea
jp
dec
out
dec
scas
(bad)
or
outs
push
cmps
(bad)
pusha
sahf
mov
mov
into
mov
mov
inc
push
cdq
cdq
mov
or
push
xchg
push
push
push
mov
cmp
cmp
dec
cdq
xor
dec
pop
dec
mov
or
test
das
push
push
sub
pop
pop
add
stc
or
add
sub
jb
xlat
ja
popa
(bad)
cmp
cmp
adc
mov
shl
jne
jp
or
xchg
pop
or
dec
pop
shr
push
pop
pop
jbe
inc
sbb
jl
aaa
mov
push
addr16
xor
xchg
jle
jle
xor
aas
add
mov
add
les
add
aaa
cmp
aad
or
sub
xchg
cmp
sub
bound
(bad)
out
xchg
dec
das
add
jl
jo
inc
inc
add
dec
adc
mov
push
stc
push
adc
repz
jae
imul
(bad)
add
mov
sub
call
dec
shr
cmps
pop
imul
cmp
pop
mov
outs
test
cmp
xchg
add
arpl
(bad)
and
pushf
nop
cwde
pop
mov
adc
dec
or
ret
aaa
jge
dec
xor
cmp
push
or
adc
push
dec
or
xchg
dec
pop
sub
cwde
or
mov
sub
push
and
(bad)
and
dec
inc
xor
pop
retw
call
push
scas
mov
add
jmp
sub
cmp
add
ja
push
sbb
(bad)
out
cmc
add
fdivr
cs
data16
ins
mov
inc
sbb
mov
jmp
and
aaa
test
pop
repnz
mov
in
sub
push
dec
pop
push
pop
aam
aam
mov
pusha
mov
adc
data16
(bad)
mov
mov
je
push
mov
pushf
rol
ins
push
retf
icebp
and
xor
imul
cmp
loop
mov
test
sti
dec
lea
inc
loope
adc
cmp
or
mov
xchg
fsubp
cli
ins
sub
jg
sub
sahf
xchg
sti
movs
sahf
dec
jecxz
jecxz
mov
pop
adc
pop
scas
scas
cmps
(bad)
clc
add
sub
les
js
push
cmps
neg
sbb
pop
ror
std
shl
cmp
mov
jnp
push
push
and
test
pop
mov
call
add
aas
cld
cmps
mov
push
call
sub
and
ins
pop
ds
cmp
add
xchg
addr16
popf
fisub
out
stos
mov
stos
and
mov
xor
adc
mov
jo
mov
mov
cmps
ror
xchg
mov
daa
es
(bad)
jle
movs
rol
push
sbb
dec
(bad)
inc
(bad)
rcr
sub
xor
pusha
in
pop
test
inc
cmp
dec
or
jmp
and
out
push
dec
jmp
lea
sub
push
loope
xor
sbb
dec
adc
(bad)
pop
ret
xor
mov
test
push
jg
fwait
rcr
mov
adc
ret
xor
ret
mov
(bad)
pop
dec
cmp
(bad)
scas
jae
mov
sbb
out
sbb
mov
jbe
repnz
jp
mov
repz
aam
xor
or
pop
push
repnz
mov
cmps
js
ja
sub
das
repz
call
or
lahf
jno
pop
rol
mov
shl
loop
mov
ret
adc
jbe
and
xchg
push
aas
add
rcl
and
test
ins
lahf
pop
sbb
or
dec
shr
pop
movs
fwait
add
add
mov
dec
jnp
or
cmp
cmp
mov
pushf
call
outs
test
test
xchg
popa
cmp
rol
fisttp
sbb
adc
nop
xchg
nop
int
lods
push
dec
fs
loope
sti
dec
or
mov
ficomp
scas
je
(bad)
or
bound
js
cmp
addr16
or
sbb
retf
inc
or
les
cmps
in
or
sahf
adc
and
rcl
mov
pop
rcr
cs
pushf
or
jbe
mov
push
mov
dec
je
fidivr
cmp
(bad)
stos
cmp
ror
adc
mov
sbb
and
adc
fwait
cmps
ins
sub
xchg
ins
or
and
and
jae
jecxz
std
sub
das
outs
mov
nop
les
es
ja
into
mov
xchg
int
cmc
arpl
cli
pop
add
scas
xchg
and
mov
mov
in
or
push
mov
test
push
dec
xor
jne
fcmovnu
rcr
popf
mov
cmp
lods
xchg
xchg
shl
sbb
or
pop
fisttp
jmp
or
dec
or
mov
sbb
shr
retf
mov
adc
or
rol
and
call
or
cmp
jno
test
jl
cmp
aaa
jl
lock
leave
loop
pop
imul
pop
and
out
les
pop
call
lahf
push
dec
mov
inc
and
xor
inc
pushf
xlat
cmps
or
(bad)
push
add
ret
mov
add
retf
mov
xor
jnp
inc
jne
adc
adc
sbb
shr
fimul
cmp
inc
sub
test
dec
push
(bad)
cmp
xchg
adc
inc
inc
(bad)
jbe
out
mov
pop
adc
ret
mov
inc
jg
dec
pusha
push
test
jmp
cmp
dec
cmps
sti
pop
dec
addps
pop
push
push
jo
stos
xchg
das
inc
test
pop
or
jbe
inc
push
(bad)
jmp
adc
out
retf
inc
mov
ds
or
imul
imul
mov
push
jp
aad
inc
sub
add
mov
mov
or
xor
adc
jmp
sub
jp
and
pop
in
or
sub
mov
neg
and
es
ds
xchg
or
cmps
pop
push
or
adc
push
(bad)
leave
jl
adc
(bad)
test
and
out
shr
inc
push
sbb
lods
ins
fcomp
dec
inc
in
add
jmp
retf
js
jecxz
xor
mov
dec
jmp
adc
jb
shl
lds
loop
pop
js
scas
ss
sub
xor
pop
ja
aas
and
sbb
xchg
not
push
or
inc
jbe
dec
xchg
mov
mov
push
cli
sbb
inc
mov
cmp
std
mov
jbe
cmp
sbb
xchg
mov
pop
bound
mov
add
push
ja
fucomip
xor
sbb
push
mov
popa
sub
gs
mov
ds
jge
in
rcr
push
in
mov
ret
and
sub
sbb
test
or
mov
cmps
push
jp
cli
sbb
fs
mov
call
stc
or
jne
mov
(bad)
int3
imul
jle
not
fs
cmp
push
mov
shl
iret
push
push
(bad)
es
pushf
xchg
xchg
sahf
push
je
dec
dec
add
add
push
inc
mov
push
add
dec
fst
pop
mov
das
out
adc
sub
dec
jae
cmc
cmp
out
mov
and
adc
xor
pop
retf
and
repnz
pop
ss
mov
(bad)
adc
outs
lock
adc
or
mov
stos
imul
jbe
aas
aas
int3
xlat
xchg
cld
mov
push
xor
cmp
mov
and
pop
data16
sbb
mov
inc
fsubr
clc
inc
aam
repnz
call
pop
jl
push
pop
in
inc
jge
mov
add
jle
xchg
clc
mov
mov
(bad)
xor
or
outs
or
sahf
out
imul
push
(bad)
cmp
rol
ss
inc
enter
into
ds
cmp
test
bound
dec
adc
dec
or
mov
pop
or
pushf
mov
mov
cmp
push
pop
dec
stos
cmp
sbb
lea
sub
inc
dec
rcr
push
into
cli
inc
mov
and
pushf
mov
add
stos
push
push
push
clc
cmp
jnp
in
lock
jl
xchg
pop
pop
jg
cmp
retf
cmp
cwde
mov
ss
push
out
mov
vpminub
jp
imul
mov
or
(bad)
pop
push
and
ins
aad
fisttp
add
fs
scas
mov
enter
icebp
in
cmp
imul
aaa
xor
mov
add
mov
sub
push
push
in
test
cmp
aaa
push
shl
xchg
call
(bad)
imul
dec
arpl
into
outs
xor
fdiv
scas
push
not
arpl
(bad)
outs
mov
or
stc
adc
adc
shr
xor
push
aas
jp
adc
test
retf
cmp
(bad)
cli
js
lods
and
out
xchg
mov
cmp
mov
out
or
pop
dec
and
mov
xchg
mov
aam
pop
jo
lea
cmp
out
push
push
in
ret
sahf
pop
xchg
jecxz
add
jmp
inc
and
daa
xchg
in
cmp
(bad)
or
ins
or
adc
push
fwait
xor
add
pop
test
sbb
sbb
dec
pop
mov
test
pop
xor
pop
adc
mov
repnz
ret
cli
loop
mov
dec
or
pop
lock
add
lar
es
push
mov
pop
lea
xchg
xchg
mov
in
clc
push
sbb
mov
mov
mov
push
mov
sbb
mov
mov
loope
adc
mov
sub
xchg
fucom
je
pop
inc
jle
test
mov
shr
cld
popf
popa
or
push
mov
xlat
mov
mov
adc
dec
jnp
pop
or
cmp
or
mov
test
jnp
pusha
mov
xchg
call
dec
or
add
outs
leave
jns
dec
ret
loop
pop
or
add
mov
and
retf
add
inc
repz
test
adc
inc
ror
test
daa
outs
outs
ds
xor
lock
mov
jl
ds
add
add
and
arpl
mov
pop
aam
fisub
into
xchg
dec
sbb
push
bnd
add
repnz
mov
adc
fimul
pop
xchg
sub
aaa
pop
dec
fmul
and
cli
lods
stos
inc
push
(bad)
rol
in
push
pushf
and
xlat
test
sahf
out
and
mov
mov
cmp
push
sbb
inc
push
jb
or
mov
cdq
std
sub
gs
mov
mov
ja
into
sbb
add
cmp
pop
into
popa
rcr
lea
dec
dec
mov
call
rol
pop
mov
add
repz
inc
cmp
loopne
cmp
fs
xor
dec
stos
mov
push
dec
add
xor
jp
or
push
mov
mov
icebp
stos
(bad)
outs
inc
push
scas
dec
inc
dec
xor
add
test
jmp
icebp
and
inc
sbb
dec
jp
mov
ja
or
in
ja
cmc
imul
xor
sbb
mov
mov
add
mov
repz
mov
scas
test
movs
pop
bound
xor
test
sbb
sar
stos
shl
push
xor
fimul
dec
dec
call
mov
call
push
mov
retf
ficom
mov
or
ss
dec
dec
add
ret
mov
add
add
mov
pop
mov
sub
stos
repnz
mov
xchg
out
cmps
aaa
lock
cwde
inc
js
fild
daa
push
jecxz
popf
xchg
push
mov
mov
test
mov
je
sbb
shr
clc
lahf
add
push
adc
pop
mov
dec
data16
xor
mov
jbe
xchg
loopne
push
retf
aas
jp
or
nop
scas
ret
cmp
pop
test
fcomp
cmp
push
sbb
xlat
into
mov
push
movs
or
cmp
popa
cmp
or
aas
ffree
push
(bad)
xchg
movs
and
ficomp
or
pop
or
out
loop
add
sbb
jae
sbb
test
dec
cmps
push
add
sbb
fimul
por
outs
dec
pop
push
cmp
jae
outs
xchg
add
jnp
rol
loop
test
jb
mov
xlat
rcl
push
pop
stos
fstp
push
pop
lods
int
addr16
cmc
(bad)
fisub
(bad)
ret
lea
imul
add
test
adc
(bad)
mov
test
pop
xchg
pop
in
in
pop
addr16
add
(bad)
mov
adc
inc
jns
cmps
mov
or
ror
mov
scas
mov
dec
(bad)
and
jg
test
mov
sar
mov
pusha
imul
add
cmps
or
(bad)
sub
xchg
lahf
cli
scas
lea
ror
cmc
dec
jge
sbb
ror
imul
(bad)
in
or
xchg
or
or
(bad)
jl
add
add
adc
sbb
aas
gs
dec
gs
mov
add
dec
pusha
int
daa
jg
sbb
mov
outs
jne
shld
out
jecxz
jmp
push
clc
fdivr
pop
push
ss
das
mov
gs
mov
in
mov
(bad)
mul
xor
sahf
jmp
mov
out
dec
ss
cmp
test
gs
xor
dec
test
push
pop
iret
xchg
scas
lods
rol
ins
ret
pushf
imul
into
cmp
cmovo
xchg
imul
xchg
push
stc
leave
test
jmp
xor
add
pop
imul
pop
bound
push
scas
test
imul
mov
or
cs
dec
repz
and
ffree
fs
pusha
or
iret
call
sar
loopne
mov
(bad)
sbb
sbb
dec
push
out
sub
xchg
jmp
cmp
sub
adc
out
ror
pop
repnz
cwde
pop
das
mov
jb
sbb
mov
repnz
cmp
and
test
dec
add
(bad)
dec
dec
sub
movs
xor
push
adc
push
adc
inc
sbb
push
cmp
test
or
xchg
cld
stc
dec
and
add
sahf
inc
les
jl
or
rcl
push
xchg
(bad)
sub
and
or
or
and
ss
retf
sti
adc
scas
addr16
mov
jo
pop
add
arpl
mov
shr
(bad)
outs
dec
xchg
gs
dec
sti
gs
xchg
sbb
popa
in
push
fimul
lahf
add
xor
mov
xchg
data16
sub
aaa
jmp
repnz
mov
add
push
pop
scas
dec
dec
ret
or
inc
fs
ja
ret
fnstenv
inc
jmp
sub
mov
mov
dec
xchg
mov
test
cld
add
fsub
in
sub
loopne
inc
adc
div
rcl
mov
add
dec
mov
add
fist
adc
jae
mov
dec
xchg
mov
dec
add
mov
push
call
cld
add
mov
xor
in
lock
je
pop
inc
add
popa
cmp
mov
ficom
jbe
rcr
pop
fsub
inc
jbe
clc
and
mov
out
cmp
adc
out
sbb
mov
mov
stc
xchg
cmps
test
sub
stos
ss
mov
aaa
pop
loopne
add
mov
mov
pop
mov
and
ds
and
and
ds
add
lods
mov
idiv
(bad)
enter
mov
xchg
jno
loope
lods
ss
dec
push
cmp
push
retf
shr
popa
out
dec
mov
iret
cmps
or
(bad)
jmp
pushf
jl
mov
ret
mov
and
mov
xchg
test
xchg
data16
push
data16
leave
clc
xchg
xor
adc
push
xchg
outs
call
add
push
adc
mov
sahf
pop
pushf
ins
outs
and
sub
jl
pop
clc
add
repz
cld
inc
syscall
cld
jecxz
xor
add
loopne
pop
fsub
out
call
or
pop
xor
out
inc
inc
cmp
fnstsw
loope
mov
(bad)
in
jle
fadd
lahf
mov
aas
je
add
jmp
add
mov
xlat
mov
leave
add
add
idiv
cs
dec
outs
movs
dec
das
cmps
sahf
dec
fbstp
push
mov
popf
add
(bad)
cmps
sbb
or
retf
pop
add
cld
ror
mov
jl
add
xchg
(bad)
and
ret
push
ret
pop
cs
and
xchg
shl
add
add
fimul
pop
movs
stc
pop
aas
je
dec
pop
mov
pop
adc
xchg
mov
enter
jno
mov
jecxz
fwait
mov
jge
xchg
jb
inc
adc
in
mov
loope
mov
lods
outs
xchg
sahf
xchg
pop
dec
in
inc
jle
ror
cmp
xor
sbb
push
mov
mov
jmp
shl
mov
dec
std
gs
imul
jne
and
loop
inc
mov
add
dec
push
and
dec
rcl
pop
imul
repnz
cmp
ds
pop
inc
cmc
rcr
cwde
sbb
add
push
stos
outs
imul
pusha
aad
xchg
int
jbe
cmps
pop
sahf
inc
je
add
dec
dec
mov
jb
sub
lock
cmp
dec
test
pusha
repz
sub
adc
in
add
data16
adc
xor
sub
scas
outs
out
dec
mov
add
inc
inc
rcl
xor
mov
pop
cs
xor
push
pushf
addr16
js
xchg
mov
fidiv
jmp
call
out
jmp
mov
es
je
iret
imul
leave
rcr
xor
movs
push
ja
add
pop
imul
clc
retf
fldcw
lahf
daa
xor
mov
repz
fstp
xor
ins
sub
mov
inc
jg
fidivr
push
aam
lock
mov
fs
inc
add
daa
dec
adc
push
es
es
outs
(bad)
dec
sahf
or
shr
add
xor
sub
jbe
adc
mov
mov
imul
ret
(bad)
sub
dec
mov
das
pop
jg
aam
xchg
fimul
dec
cmps
mov
bswap
xchg
push
les
pop
and
mov
lahf
or
mov
pusha
ds
jae
(bad)
and
sbb
jae
add
mov
dec
mov
imul
pop
add
mov
fsub
pop
xchg
and
leave
pop
adc
data16
jl
ret
ret
dec
mov
rcl
jbe
inc
xor
push
push
inc
dec
outs
xchg
ss
pop
sub
jl
xor
(bad)
mov
sub
add
sub
push
ins
or
lds
xor
add
cs
imul
mov
dec
pop
cmp
and
cwde
dec
dec
push
in
or
call
add
(bad)
rcl
(bad)
cmp
add
loop
pop
pop
clc
sub
push
js
add
or
adc
rcl
pop
pop
xchg
ins
cmp
inc
jl
adc
jle
mov
inc
aas
inc
in
int
push
and
or
dec
fsubrp
xchg
int3
pop
pop
popa
cmps
inc
out
cmp
push
pop
inc
mov
sahf
retf
jb
cli
pusha
leave
or
call
jo
call
rol
les
out
popa
lock
inc
aas
pop
pop
xor
gs
arpl
push
scas
sahf
mov
mov
paddsw
xor
jg
or
js
and
or
ja
dec
ja
imul
add
rcr
push
retf
mul
push
jecxz
repz
xor
adc
imul
xor
push
test
hlt
outs
or
mov
leave
mov
inc
inc
shl
call
push
dec
pslld
mov
mov
xchg
sbb
int3
mov
adc
sbb
pusha
mov
push
mov
inc
mov
into
pop
shl
or
push
mov
out
test
push
adc
shl
dec
sbb
outs
mov
pop
pusha
push
sahf
rcr
mov
mov
cmp
outs
out
outs
loope
cmp
neg
aam
fcom
mov
add
cmp
cmp
mov
mov
dec
sbb
and
aas
jno
or
pop
xchg
ror
aas
data16
lods
or
movs
test
push
fimul
sbb
repnz
push
ss
sbb
pop
xchg
pop
pop
cmps
iret
cs
fdivr
bound
push
dec
jl
enter
gs
je
(bad)
cwde
cmps
push
push
xchg
out
jb
data16
cld
add
pop
xchg
(bad)
or
lahf
leave
icebp
ja
push
dec
pop
rcl
mov
lahf
push
and
mov
push
mov
mov
loop
cmc
popa
adc
mov
adc
or
bound
popa
test
adc
fwait
(bad)
mov
popa
mov
xor
cmc
dec
rcr
and
or
out
pushw
mov
mov
fimul
fwait
movs
test
dec
jmp
cmc
xchg
mov
lea
and
and
aas
stc
pusha
mov
xchg
and
cmp
shl
aad
mov
in
jp
inc
push
les
jno
add
rol
xchg
ret
sbb
pop
adc
jo
dec
cmp
xor
mov
push
ficomp
out
push
xor
sbb
aas
adc
xor
(bad)
xchg
jo
retf
loope
leave
cli
jg
or
sahf
cmp
pusha
inc
adc
dec
jecxz
ficomp
adc
dec
sub
test
int
sbb
ret
popa
cwde
or
xchg
ss
call
and
mov
jle
ins
push
aas
sbb
mov
ja
pop
inc
inc
pop
add
adc
pop
inc
push
push
jp
mov
sar
sub
les
push
pop
dec
inc
out
push
jmp
or
push
out
sub
xchg
xchg
adc
scas
cmps
push
mov
sub
mov
rol
js
push
outs
mov
push
jg
mov
cli
sub
pushf
ret
xchg
dec
xchg
dec
cmp
cld
loope
ins
or
lods
push
mov
lahf
jl
(bad)
jb
inc
mov
sub
or
adc
(bad)
push
or
stos
pop
pop
outs
and
add
inc
adc
add
and
inc
outs
ins
jge
js
rcl
loopne
jp
mov
pop
fisub
dec
and
sbb
add
jnp
ins
inc
cli
dec
or
pop
mov
std
shl
push
push
sub
mov
cmp
sub
jmp
shl
dec
adc
idiv
sub
adc
repz
call
ds
sar
xchg
jle
adc
ret
push
xchg
mov
cmp
sbb
out
(bad)
ins
xor
mov
pusha
inc
and
pop
mov
push
jb
mov
pop
retf
push
push
or
mov
fcmovu
aas
rcr
dec
or
cmp
out
out
outs
xchg
fwait
das
jmp
push
scas
pop
jl
lods
xor
push
fdiv
popa
ins
pop
mov
mov
test
sub
inc
mov
xchg
sbb
sub
cmp
fwait
ins
jmp
add
movs
push
bound
(bad)
pop
les
(bad)
dec
loopne
push
js
(bad)
pop
stos
cmps
cld
leave
jle
(bad)
frstor
and
xor
mov
inc
push
mov
mov
adc
inc
loope
test
or
mov
out
mov
mov
es
inc
and
pushf
es
das
pusha
repz
sahf
inc
ds
jp
pop
pop
les
(bad)
push
imul
lea
or
push
clc
stos
ins
push
data16
add
into
add
iret
aas
adc
outs
inc
cmp
(bad)
lahf
fidiv
inc
adc
ds
inc
push
jmp
outs
jg
rcl
sbb
ins
pop
fbld
mov
call
and
mov
cmps
xchg
push
aad
sbb
push
dec
clc
sub
mov
jo
test
cmp
jle
inc
ror
mov
jp
push
sti
xchg
and
adc
or
sbb
leave
or
sbb
mov
xchg
ret
push
fnstcw
stc
mov
and
push
out
adc
or
push
loopne
sti
push
sub
jge
xor
dec
fwait
retf
out
dec
and
in
rol
fdivrp
inc
cld
leave
int
xchg
cs
fst
sahf
sub
outs
mov
aaa
scas
push
add
jno
push
call
cmps
imul
rcl
(bad)
iret
