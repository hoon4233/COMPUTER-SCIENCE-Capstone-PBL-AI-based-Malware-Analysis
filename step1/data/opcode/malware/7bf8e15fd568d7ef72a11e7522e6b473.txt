pusha
inc
sldt
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
or
sub
add
or
add
push
sub
add
or
add
xor
add
add
adc
add
add
and
add
jo
add
add
sub
add
outs
adc
push
add
or
push
add
add
add
add
push
add
pop
add
or
add
sbb
add
add
adc
add
sub
adc
add
sub
add
adc
and
add
or
lea
add
add
push
or
adc
add
add
pop
and
add
add
pushf
pop
pop
pop
or
push
xor
sub
adc
add
add
add
add
xor
add
add
adc
add
add
sbb
add
or
sub
sub
add
push
sub
push
adc
or
add
sub
add
or
xor
jnp
add
add
sbb
add
sub
add
add
add
add
mov
pop
sub
add
add
mov
pop
pop
add
add
add
add
outs
push
add
or
lea
add
add
add
or
sub
xor
add
add
add
add
jae
add
or
push
push
pop
jl
and
add
shr
push
add
add
or
push
sub
adc
add
mov
add
add
add
add
add
pop
adc
or
sub
add
push
es
or
or
or
add
popf
pop
pop
pop
or
push
mov
in
add
sub
add
or
jb
add
jo
and
add
cmp
add
and
daa
add
add
pop
adc
push
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
aaa
add
jo
adc
sbb
jo
adc
push
jb
add
jo
adc
pop
or
add
jo
adc
pop
or
add
jo
adc
pop
or
add
jo
adc
pop
or
sbb
add
adc
pop
or
jo
adc
pop
push
jb
add
jo
adc
pop
(bad)
imul
jo
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
or
add
adc
pop
adc
jo
adc
pop
push
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
cmc
add
jo
adc
pop
sbb
jo
adc
pop
push
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
and
add
jo
adc
pop
and
add
jo
adc
pop
and
add
jo
adc
pop
and
add
jo
adc
pop
and
fild
jo
adc
pop
and
jo
adc
pop
es
add
pop
pop
daa
jb
add
pop
pop
sub
add
pop
pop
sub
add
pop
pop
sub
add
pop
pop
sub
add
pop
pop
sub
in
add
pop
pop
sub
jo
adc
pop
cs
push
add
adc
pop
das
jb
push
add
adc
pop
xor
push
add
adc
pop
xor
push
add
adc
pop
xor
push
add
adc
pop
xor
push
add
adc
pop
xor
jecxz
add
adc
pop
xor
jo
adc
pop
ss
pop
add
adc
pop
aaa
jb
pop
add
adc
pop
cmp
pop
add
adc
pop
cmp
pop
add
adc
pop
cmp
pop
add
adc
pop
cmp
pop
add
adc
pop
cmp
out
pop
add
adc
pop
cmp
jo
adc
pop
ds
or
jo
adc
pop
aas
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pusha
jb
or
jo
adc
pop
popa
jb
or
jo
adc
pop
bound
or
jo
adc
pop
arpl
or
jo
adc
pop
fs
or
pop
pop
gs
or
pop
pop
data16
or
pop
pop
addr16
or
pop
pop
push
jo
adc
pop
imul
adc
pop
push
sti
or
pop
pop
imul
add
adc
pop
ins
jb
push
add
adc
pop
ins
jb
push
add
adc
pop
outs
jb
push
add
adc
pop
outs
jb
push
add
adc
pop
jo
popf
push
add
adc
pop
jno
ror
jo
adc
pop
jb
fisttp
add
adc
pop
jae
out
push
add
adc
pop
je
sbb
add
adc
pop
jne
cmp
adc
pop
jbe
push
(bad)
jo
adc
pop
ja
ja
add
adc
pop
js
xchg
(bad)
jo
adc
pop
jns
test
adc
pop
jp
ror
jo
adc
pop
jnp
(bad)
add
adc
pop
jl
icebp
(bad)
jo
adc
pop
jge
sbb
add
adc
pop
jle
aaa
adc
jo
adc
pop
jg
inc
adc
jo
adc
and
imul
jo
adc
and
adc
pop
and
popf
adc
jo
adc
and
mov
add
adc
and
adc
jo
adc
and
loope
add
adc
and
stc
adc
jo
adc
and
adc
add
adc
and
cmp
adc
and
pop
adc
jo
adc
and
jnp
add
adc
and
mov
add
adc
and
adc
jo
adc
and
ret
adc
jo
adc
and
out
adc
jo
adc
and
or
adc
and
xor
add
adc
and
dec
adc
jo
adc
and
adc
jo
adc
and
lea
add
adc
and
adc
jo
adc
and
mov
add
adc
and
rcl
add
adc
and
icebp
adc
jo
adc
and
sbb
add
adc
and
cmp
add
adc
and
push
adc
jo
adc
and
ja
add
adc
and
adc
jo
adc
and
test
adc
and
(bad)
adc
jo
adc
and
jmp
adc
and
add
jo
adc
and
sub
adc
and
pop
adc
jo
adc
and
jnp
add
adc
and
adc
jo
adc
and
aad
add
adc
and
jmp
add
adc
or
adc
sub
or
or
add
push
adc
and
add
je
add
sbb
add
adc
add
adc
xchg
pop
push
popa
rcr
push
adc
adc
add
add
push
adc
pop
pop
adc
adc
adc
mov
scas
add
add
add
outs
and
jp
sub
add
add
add
or
jnp
add
add
add
or
add
daa
add
or
add
xor
lock
add
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
sub
add
outs
sub
jnp
add
add
outs
add
or
jnp
add
add
outs
das
add
or
jnp
add
add
or
add
or
add
or
jnp
add
add
pop
adc
add
or
jnp
add
add
pop
pop
daa
jae
add
or
add
or
jnp
add
add
outs
xor
jnp
add
add
daa
adc
add
or
jnp
add
add
adc
add
or
jnp
add
add
inc
pop
add
push
jae
add
or
add
or
jnp
add
add
cmp
add
outs
sub
jnp
add
add
outs
add
or
jnp
add
add
outs
das
add
or
jnp
add
add
adc
or
xor
add
outs
xor
add
add
add
add
xor
add
or
jnp
add
add
outs
cmp
add
add
add
add
adc
push
jae
add
or
add
or
jnp
add
add
daa
adc
add
or
jnp
add
add
outs
cmp
add
add
add
add
inc
or
aaa
add
or
add
or
jnp
add
add
outs
cmp
jnp
add
add
add
or
add
or
jnp
add
add
outs
add
or
jnp
add
add
outs
das
add
or
jnp
add
add
loopne
add
pop
pop
jae
add
or
add
or
jnp
add
add
inc
adc
add
or
jnp
add
add
dec
pop
or
add
or
add
or
jnp
add
add
push
adc
add
or
jnp
add
add
inc
push
add
push
jae
add
or
add
or
jnp
add
add
outs
add
or
jnp
add
add
outs
das
add
or
jnp
add
add
fild
add
pop
inc
jae
add
or
add
or
jnp
add
add
pop
adc
add
or
jnp
add
add
xchg
add
add
and
add
or
add
or
jnp
add
add
daa
adc
add
or
jnp
add
add
add
add
outs
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
inc
add
or
add
or
jnp
add
add
inc
add
or
add
or
jnp
add
add
outs
das
add
or
jnp
add
add
fwait
add
add
aaa
jae
add
or
add
or
jnp
add
add
outs
adc
add
or
jnp
add
add
ins
pop
es
add
or
add
or
jnp
add
add
outs
xor
jnp
add
add
adc
jnp
add
add
outs
inc
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
and
add
add
mov
xor
add
sub
add
add
inc
add
or
jnp
add
add
inc
add
or
sub
or
jnp
add
add
inc
add
or
sub
or
jnp
add
add
inc
add
or
sub
or
jnp
add
add
inc
add
or
sub
or
jnp
add
add
inc
add
or
sub
or
jnp
add
add
inc
add
or
jb
adc
add
or
add
push
push
add
push
jae
add
or
inc
add
or
push
sub
add
add
dec
add
or
inc
repnz
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
mov
test
sahf
cld
mov
fdivr
push
adc
mov
call
and
enter
out
js
adc
jnp
xchg
inc
or
cwde
mov
scas
call
sbb
xchg
popf
pop
out
popf
inc
pop
pop
sahf
test
pushf
lahf
scas
iret
pop
mov
daa
repz
lods
imul
pop
jle
cmps
ret
cmps
mov
sbb
sbb
pop
scas
jb
inc
scas
cdq
(bad)
push
scas
lods
sbb
mov
data16
repnz
jl
sbb
mov
outs
outs
mov
cmp
mov
ds
sar
repz
mov
faddp
and
mov
ret
mov
inc
retf
enter
leave
jl
ror
jnp
ins
retf
imul
(bad)
sbb
in
inc
(bad)
iret
cs
xlat
dec
cmc
ja
jg
pand
adc
fadd
jno
loop
xor
in
lahf
inc
out
xchg
out
rcl
call
mov
shr
ficomp
push
dec
xlat
cmps
out
pop
imul
es
push
hlt
ja
cs
mov
not
cmp
int3
mov
jno
push
ret
push
(bad)
cld
pop
xchg
(bad)
(bad)
in
call
xchg
sub
ja
mov
push
xchg
fwait
pop
or
or
(bad)
lock
sti
or
jle
or
or
mov
xchg
push
ss
adc
push
push
jg
call
(bad)
xchg
outs
pop
(bad)
sbb
cmps
mov
xchg
sbb
xchg
or
sbb
data16
pop
call
and
add
add
push
and
mov
and
adc
fisub
pop
push
frstor
pop
mov
sub
fwait
mov
lods
push
retf
cs
ins
stos
das
mov
loopne
icebp
clc
xor
or
xor
jb
xor
fucomp
xor
jno
sbb
cmp
nop
daa
cmp
movs
mov
ficomp
inc
fcom
inc
mov
sub
dec
cli
mov
mov
dec
dec
loope
push
shr
push
test
pop
addr16
push
pop
cmp
dec
pop
mov
pusha
jne
dec
fs
and
and
imul
jecxz
ins
push
std
fwait
jno
cmp
jns
jge
jp
popf
add
pop
(bad)
jge
add
add
adc
add
add
ficom
add
jo
add
leave
push
add
mov
adc
add
add
add
in
adc
add
add
mov
push
add
add
add
adc
add
jo
add
pop
adc
add
or
add
add
rcl
add
mov
add
add
add
add
add
add
mov
sldt
jecxz
add
out
add
sbb
add
pop
add
add
add
add
add
add
add
or
add
add
and
add
movs
add
add
add
add
adc
add
or
add
or
add
add
in
add
push
or
add
add
add
pop
push
add
inc
add
add
or
add
sub
add
or
add
push
add
add
or
add
add
aad
add
mov
add
add
or
add
adc
add
or
add
push
add
das
pop
add
xchg
add
pusha
or
add
or
add
add
add
jnp
add
mov
adc
add
adc
add
add
add
adc
add
adc
add
dec
or
add
or
add
or
add
add
add
add
push
push
add
lock
add
or
add
push
add
xor
or
add
add
fisttp
add
jl
add
lods
add
add
add
add
or
add
add
xchg
adc
add
add
mov
add
imul
add
or
add
adc
add
bound
add
inc
push
add
pop
add
add
jge
add
adc
add
jb
add
ret
add
add
adc
add
or
add
inc
or
add
add
xchg
adc
add
add
add
adc
add
push
add
fild
add
mov
add
lock
add
gs
add
je
add
xchg
sldt
fadd
add
loope
add
mov
adc
add
add
pop
add
add
add
add
or
add
add
add
add
lea
add
arpl
add
sldt
jns
add
mov
sldt
jb
add
lea
add
and
add
push
add
push
add
jne
push
add
add
add
and
dec
dec
push
adc
jle
ds
jg
jle
jle
ds
cmp
jg
ds
adc
inc
pop
adc
jo
xor
add
push
or
push
jle
jle
jle
or
jmp
pop
into
aaa
add
or
push
mov
shl
or
hlt
jle
call
mov
hlt
jle
dec
jo
jle
jmp
dec
add
adc
dec
adc
pop
pop
sbb
jg
shl
mov
jg
sbb
add
or
cmp
cmp
(bad)
ds
add
sbb
push
add
gs
inc
mov
adc
test
jnp
add
or
sbb
sbb
push
hlt
jle
xor
or
shl
push
hlt
jle
dec
jle
out
hlt
jle
dec
or
pop
ss
add
and
dec
jle
jle
rcl
cmp
pop
sbb
aam
sbb
pop
pop
sbb
cmp
lea
push
shr
dec
jle
jg
shl
jle
or
or
pop
jle
inc
mov
jle
hlt
jle
pop
dec
push
dec
push
pop
pop
push
add
push
aas
push
or
or
or
inc
mov
jle
pop
jle
add
add
push
aas
push
jle
adc
out
shl
mov
push
sahf
in
add
sbb
push
jle
jle
or
jle
jle
ds
test
gs
jle
add
add
aas
push
test
mov
(bad)
aam
jle
jle
mov
inc
mov
or
or
push
rcr
add
adc
push
inc
mov
rcl
(bad)
dec
hlt
jle
xor
add
push
ds
jle
jle
rcl
pop
shl
xor
push
sbb
or
inc
pop
jle
sbb
cmp
jle
or
push
ds
push
inc
add
sbb
sbb
or
push
ds
hlt
jle
adc
pop
pop
aas
push
sbb
lea
dec
push
jg
inc
pop
rcl
jle
push
or
or
pop
jg
cmp
add
and
push
dec
push
adc
scas
gs
ds
pop
pop
or
push
jle
rcl
call
jle
or
add
adc
push
sbb
jg
dec
push
dec
push
hlt
jle
push
jle
mov
outs
mov
push
adc
aam
shl
push
dec
push
jle
sbb
rcl
pop
jle
cmp
cmp
ds
or
push
inc
pop
jle
cmp
hlt
jle
add
jle
or
sbb
inc
pop
mov
or
aam
cmp
jg
hlt
jle
cmp
rcl
dec
jle
jo
jle
jle
cmp
add
and
push
jle
or
push
jle
jle
inc
pop
jle
hlt
jle
push
aas
push
dec
push
hlt
jle
push
sbb
add
push
dec
push
(bad)
sti
add
or
or
pop
sbb
lea
rcl
dec
aas
push
jmp
lea
dec
ins
call
jle
aas
push
hlt
jle
adc
add
or
hlt
jle
sbb
push
jle
cmp
scas
gs
gs
ds
or
add
sbb
push
jle
jle
sbb
(bad)
ds
sbb
mov
imul
add
sbb
push
jg
jle
dec
push
ins
call
scas
gs
pop
or
pop
ds
add
sbb
push
jg
jle
adc
inc
pop
jle
mov
jle
aas
push
sbb
pop
add
ins
add
adc
push
dec
push
jo
ds
ds
pop
pop
inc
pop
test
add
and
push
dec
push
cmp
aam
out
jle
sbb
inc
pop
inc
pop
or
jle
out
dec
push
ds
jo
jle
or
add
sbb
push
rcl
lea
jle
gs
shl
pop
or
out
cmps
mov
add
ds
or
aas
push
or
jle
jle
aam
test
add
ds
ds
test
call
jle
ds
jle
fcmovu
add
adc
push
adc
hlt
jle
pop
ds
mov
cmp
test
hlt
add
sbb
push
cmp
hlt
jle
or
jle
jle
jle
sbb
lea
push
or
add
ds
add
push
add
(bad)
jle
sbb
push
jle
cmp
jle
jle
ds
sbb
jle
cmp
add
adc
push
jle
or
ds
jle
jg
hlt
jle
add
add
ds
jle
test
adc
cmp
jle
jle
test
mov
dec
add
push
ds
jle
sbb
pop
ins
call
adc
push
or
pop
scas
gs
sbb
jle
lea
jl
add
out
aas
push
jle
inc
pop
ins
call
or
dec
push
cmp
pop
pop
or
imul
push
add
adc
test
push
hlt
jle
test
push
jmp
jle
jle
push
jle
jmp
add
sbb
ds
hlt
jle
pop
jle
jle
jle
jle
sbb
out
jle
adc
jle
or
jle
jle
jle
scas
gs
jle
inc
pop
jle
js
add
sbb
inc
pop
ins
call
inc
pop
cmp
jle
jle
sbb
jle
cmp
add
sub
scas
gs
call
adc
dec
push
aam
ds
jo
ds
hlt
jle
cmp
jg
jle
jmp
add
sub
ins
call
jle
jle
jg
jmp
or
pop
hlt
jle
cmp
push
add
(bad)
aam
inc
sbb
sub
aas
push
or
pop
dec
push
or
jle
sbb
or
jle
ds
rcl
jle
cmp
lea
push
loopne
add
push
adc
pop
pop
sbb
pop
sbb
jle
push
cmp
ds
jp
add
adc
jle
scas
gs
jle
adc
jle
shl
push
adc
add
adc
cmp
shl
or
out
jle
or
add
adc
jmp
push
hlt
jle
mov
dec
mov
sbb
pop
or
or
or
out
or
jg
shl
dec
shl
push
loop
add
cmp
jle
add
xor
jle
aas
push
jle
jle
sbb
imul
jle
jle
inc
pop
inc
mov
push
jle
hlt
jle
lea
pop
jl
add
cmp
pop
pop
jle
aam
cmp
ds
add
pop
inc
pop
jle
ds
sbb
or
dec
push
mov
or
sbb
push
iret
add
sub
pop
jle
sbb
arpl
dec
or
ins
call
jle
ds
aas
push
aas
push
jle
sbb
xor
pop
jle
ds
test
cmp
push
ds
test
jle
push
or
pop
jle
aam
jle
or
add
and
pop
jg
cmp
sbb
pop
ds
sbb
push
pop
pop
jle
jle
test
add
inc
pop
ds
ds
cmp
jle
jle
test
push
jle
shl
cmp
push
jle
add
sbb
mov
sbb
imul
dec
dec
push
aam
ds
jle
inc
mov
pop
jle
scas
or
jle
sbb
add
inc
pop
jo
pop
pop
ds
cmp
hlt
jle
sbb
addr16
add
ds
dec
push
adc
ds
shl
dec
jle
ins
call
pop
out
jle
mov
out
mov
ds
ds
scas
gs
ds
shl
add
or
cmp
ins
call
inc
mov
push
add
call
sub
jle
ds
jle
aam
inc
pop
adc
aam
hlt
jle
adc
scas
gs
add
cmp
add
add
mov
cmp
jle
cmp
jmp
arpl
dec
jle
jle
or
addr16
add
jmp
call
jle
sbb
push
sbb
or
sbb
dec
sbb
add
pop
pop
ds
test
mov
pop
jmp
mov
pop
dec
push
dec
push
ds
jmp
sbb
hlt
add
hlt
jle
call
out
jle
jle
ds
mov
sbb
cmp
jle
cmp
jle
jg
pop
pop
mov
or
add
pop
pop
cmp
or
mov
jmp
pop
push
add
pop
or
pop
test
cmp
cmp
cmp
push
or
cs
add
pop
ds
jle
pop
pop
sbb
pop
jle
aam
jle
les
sbb
pop
shl
(bad)
jle
ds
inc
mov
cmp
rcl
arpl
mov
pop
pop
push
add
pop
jle
jle
or
aas
push
jle
or
push
jle
adc
aam
jg
inc
mov
jle
push
or
mov
jle
jle
adc
clc
jno
add
mov
test
or
jmp
push
jle
sbb
mov
add
mov
cmp
scas
gs
ds
jo
out
rcl
push
or
push
sbb
test
shl
push
inc
mov
ds
pop
pop
jle
inc
pop
cmp
sbb
jle
or
cmp
shl
cmp
cmp
pop
pop
(bad)
mov
add
shl
jle
push
jo
out
jle
out
add
cmp
or
or
jle
cmp
pusha
int3
push
add
arpl
jle
xor
jle
jle
or
jo
jle
cli
loop
add
arpl
or
hlt
jle
cmp
push
test
push
test
sbb
or
push
jle
xchg
stc
push
add
arpl
pop
pop
aas
push
jle
hlt
jle
xor
hlt
jle
push
adc
add
shl
xor
scas
cmp
jle
jle
jle
jg
ds
enter
sbb
arpl
jle
jle
inc
pop
out
or
ds
inc
pop
or
jle
bound
or
call
jle
jg
cmp
jle
shl
push
cld
push
pop
add
scas
gs
jle
mov
jle
cmp
inc
mov
scas
gs
jle
ds
jle
aam
inc
pop
dec
push
hlt
jle
push
cmp
xor
addr16
hlt
jle
push
cmp
mov
jle
ds
jle
inc
mov
dec
hlt
jle
gs
or
cmp
and
jle
retf
add
jo
ins
call
dec
push
sbb
or
aas
push
sbb
jle
jmp
aam
or
dec
or
dec
scas
or
mov
imul
push
sbb
push
cmp
jle
ds
out
jle
inc
pop
add
aam
or
(bad)
aas
push
dec
push
ins
call
test
pop
or
sub
scas
gs
push
rcl
sbb
imul
mov
jle
jo
test
repnz
add
hlt
jle
dec
sbb
jle
jle
jle
ds
or
pop
jle
pop
pop
jle
jle
int3
or
add
jle
push
cmp
or
inc
pop
or
adc
scas
gs
jle
mov
popw
or
adc
jle
push
or
jle
sbb
pop
out
jle
add
or
and
jle
push
jle
sbb
mov
ins
call
rcl
cmp
pop
sbb
out
hlt
jle
(bad)
call
hlt
jle
push
jle
ds
aam
aam
aas
push
sbb
mov
cmp
jle
or
xor
or
sbb
jle
jle
mov
ds
aam
hlt
jle
push
cmp
hlt
jle
cmp
arpl
add
jle
cmp
jle
ds
hlt
jle
sbb
push
shl
xor
mov
sbb
cmp
push
or
jle
mov
or
sub
jle
cmp
push
cmp
ds
sbb
push
sbb
sbb
ins
call
add
cmp
lea
jle
add
jle
cmp
pop
aam
or
cmp
ds
scas
gs
aam
shl
pop
ds
out
jg
aam
pushf
mov
jle
mov
push
ds
rcl
cmp
pop
or
or
sbb
imul
(bad)
ss
add
hlt
jle
mov
aas
push
or
sub
jg
jle
jle
dec
push
pop
pop
adc
sbb
jmp
dec
sbb
pop
or
jle
sbb
pop
ds
or
cmp
scas
gs
jle
sbb
push
or
and
or
push
inc
mov
jle
cmp
mov
hlt
jle
jle
push
dec
push
jle
or
pop
jle
add
or
sub
cmp
pop
pop
jle
jmp
dec
pop
pop
ins
call
jle
jle
hlt
jle
dec
or
or
ds
sahf
or
sbb
cmp
sbb
arpl
cmp
add
push
sbb
or
cmp
or
sbb
adc
sbb
pop
or
push
inc
mov
cmp
jle
dec
push
rcr
add
jle
or
sbb
ds
sbb
jle
jle
sbb
or
pop
jle
mov
aam
sbb
ins
jb
add
or
jle
aam
ins
call
jle
inc
pop
push
mov
add
cmp
cmp
mov
sbb
push
or
adc
jg
jle
test
adc
jle
jle
jle
ds
mov
jle
ds
shl
push
inc
pop
ds
jle
hlt
jle
pop
out
jle
dec
push
jo
cmp
cmp
jle
rcl
pop
ins
call
jle
or
mov
mov
push
pop
pop
ds
jle
ds
hlt
jle
sub
or
and
ds
jmp
add
call
out
jle
test
push
outs
jecxz
add
jle
out
sbb
cmp
add
inc
mov
aam
aas
push
or
or
adc
sbb
ds
sbb
mov
jle
jle
sbb
add
jle
adc
or
sbb
aam
jmp
call
cmp
or
and
adc
jo
sbb
cmp
or
out
hlt
jle
call
jle
jmp
add
jle
cmp
or
rcl
dec
test
adc
imul
dec
add
or
ds
dec
push
jo
or
sub
cmp
aam
ds
jg
aas
push
jle
hlt
jle
push
jle
jle
out
or
or
ds
jle
scas
cmp
ds
or
add
jle
pop
pop
aam
or
aas
push
mov
jle
jle
jle
jmp
or
mov
ds
cmp
ds
pop
pop
inc
pop
ds
or
and
mov
hlt
jle
rcl
push
ds
scas
gs
or
pop
jle
jle
adc
jle
jle
jo
fsubr
sub
aas
push
cmp
jle
ds
sbb
jle
mov
ds
inc
pop
add
push
shl
xor
add
jle
scas
gs
jle
jle
sbb
cmp
ds
sbb
sbb
add
jle
jo
shl
mov
push
ds
mov
add
pop
pop
pop
sbb
xor
jg
ds
cmps
repnz
and
xor
hlt
jle
pop
or
mov
jo
hlt
jle
dec
scas
gs
pop
jle
aam
aam
jle
jle
add
or
add
jle
hlt
jle
(bad)
jle
ds
sbb
call
cmp
dec
ds
jle
aam
aam
jle
je
or
es
jle
out
inc
pop
sbb
sbb
or
call
shl
dec
inc
pop
hlt
jle
dec
or
sbb
jle
cmp
jle
out
jle
test
lea
pop
test
or
and
cmp
gs
ds
jle
jle
pop
pop
rcl
add
or
dec
jle
jle
cmp
ds
inc
jp
add
jle
jle
jle
or
push
jle
ins
call
cmp
sub
hlt
jle
pop
hlt
jle
cmps
or
push
jle
jle
sbb
push
ds
aas
push
shl
push
jle
jle
hlt
jle
cmp
jmp
jle
jle
sbb
call
or
mov
jle
cmp
dec
push
scas
or
lea
hlt
jle
cmp
mov
push
stos
aam
add
jle
jg
out
ins
call
or
or
es
jg
jle
hlt
jle
push
jle
or
jle
mov
aam
jle
ds
jle
ins
call
sbb
add
jle
test
push
jle
cmp
jle
or
jle
sbb
jle
jle
jg
js
or
sbb
test
xor
ins
call
sbb
push
adc
or
and
inc
mov
pop
shl
pop
aas
push
jg
rcl
push
cmp
jle
jle
aas
push
jle
jle
sbb
lods
inc
or
cs
inc
mov
push
test
pop
jmp
mov
mov
sbb
ds
or
addr16
scas
cmp
inc
pop
or
sub
sbb
push
hlt
jle
push
jmp
mov
shl
mov
mov
ds
jle
inc
mov
loopne
or
cs
cmp
test
pop
jle
jle
jle
adc
hlt
jle
push
sbb
cmp
mov
ds
jle
cmp
jle
jp
or
push
jle
jmp
or
push
adc
jle
jg
jle
jle
pop
pop
jle
hlt
jle
mov
mov
dec
add
pop
jle
hlt
jle
push
test
add
mov
push
or
pop
pop
or
aas
push
shl
pop
dec
push
jo
or
push
dec
int
add
jg
inc
pop
or
inc
mov
mov
loop
or
adc
inc
pop
hlt
jle
pop
jle
ds
sbb
(bad)
jl
or
sub
mov
arpl
xor
gs
jle
push
rcl
pop
jle
aam
jle
jo
jo
jle
ds
ds
inc
mov
push
jle
push
adc
adc
ds
mov
ins
call
jmp
cmp
pop
sbb
mov
hlt
jle
daa
or
jle
jle
sbb
call
ins
call
mov
jle
or
or
hlt
jle
jle
imul
pop
aas
push
in
or
sbb
jle
jle
jmp
imul
pop
pop
pop
test
inc
mov
sbb
or
addr16
push
jg
or
push
rcl
push
hlt
jle
gs
out
shl
(bad)
jle
or
jle
jle
jle
sbb
mov
aam
mov
sbb
cmp
adc
aam
inc
pop
jle
jle
jle
or
pop
sbb
add
mov
hlt
jle
pop
test
push
rcl
push
ds
jo
or
dec
scas
or
adc
pop
pop
out
jle
ds
jle
aam
ins
call
sub
push
aas
push
jle
jg
jg
jmp
push
ds
inc
mov
sbb
dec
push
hlt
jle
pop
aas
push
test
cmp
ds
scas
gs
push
add
pop
or
jle
push
pop
pop
inc
pop
sbb
or
sbb
or
cmp
jle
or
jle
or
push
jle
cmp
push
add
cmp
jle
jle
rcl
pop
ds
jle
inc
pop
pop
pop
jo
shl
gs
push
dec
and
add
jmp
dec
or
ds
sbb
pop
jg
call
jmp
gs
jg
or
dec
jle
ds
or
(bad)
jg
jle
jle
aam
add
dec
or
and
(bad)
jo
dec
push
ins
call
jle
jle
inc
pop
cmp
test
dec
aam
sbb
push
add
jmp
push
or
jle
inc
mov
mov
push
add
ins
call
ds
jle
shl
sbb
mov
or
cmp
aas
push
jle
jle
adc
ds
aas
push
or
jle
lea
push
add
ins
call
jle
jle
shl
or
adc
jle
jle
jle
or
push
or
push
add
call
inc
pop
inc
mov
jle
xor
inc
pop
test
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
cmps
add
add
add
add
cmp
mov
xchg
scas
in
mov
mov
in
xchg
in
mov
scas
mov
mov
call
xchg
out
xchg
in
xchg
in
mov
mov
in
mov
nop
mov
add
add
xor
xchg
cmps
in
mov
mov
jmp
popf
jmp
mov
nop
mov
mov
in
mov
mov
out
xchg
push
add
add
xor
mov
in
mov
test
jmp
mov
mov
mov
in
mov
scas
mov
nop
mov
mov
push
add
call
mov
mov
test
in
popf
in
xchg
jmp
mov
mov
mov
mov
in
mov
mov
in
mov
push
add
add
call
and
mov
mov
mov
in
mov
pop
add
add
scas
mov
mov
in
mov
test
out
mov
scas
xchg
call
mov
mov
test
mov
call
mov
movs
mov
mov
out
mov
or
add
cmp
mov
mov
in
mov
mov
in
mov
nop
mov
mov
mov
in
mov
mov
scas
xchg
out
scas
call
mov
or
add
inc
call
mov
mov
in
mov
mov
call
mov
mov
in
mov
xchg
scas
in
mov
mov
in
and
mov
movs
mov
or
add
sub
movs
mov
nop
mov
mov
in
xchg
in
mov
mov
in
mov
test
in
mov
popf
mov
mov
push
or
add
inc
call
mov
nop
mov
test
mov
call
mov
nop
mov
popf
mov
nop
mov
popf
mov
nop
mov
xchg
scas
in
mov
nop
mov
add
out
nop
call
xchg
in
mov
mov
out
mov
mov
push
or
out
mov
mov
mov
in
mov
nop
mov
nop
mov
nop
mov
(bad)
nop
in
xchg
in
mov
movs
mov
push
add
add
in
cmps
in
mov
mov
out
scas
in
pushf
in
popf
call
mov
mov
push
sldt
add
jmp
mov
mov
call
mov
mov
mov
push
adc
add
cmp
mov
call
mov
xchg
scas
in
mov
mov
mov
in
pushf
in
mov
mov
out
xchg
in
popf
call
add
add
call
mov
xchg
scas
call
mov
mov
in
mov
mov
call
mov
mov
push
adc
add
ss
mov
mov
(bad)
nop
out
mov
mov
mov
call
xchg
mov
mov
in
mov
test
adc
add
sbb
mov
call
nop
call
mov
xchg
cmps
call
mov
adc
add
inc
in
mov
mov
test
mov
in
and
xchg
out
mov
mov
nop
mov
mov
in
mov
mov
in
cmps
out
mov
mov
in
mov
add
mov
in
mov
nop
mov
mov
call
xchg
push
add
add
in
mov
nop
mov
mov
mov
mov
push
pop
add
add
in
mov
popf
mov
nop
mov
mov
call
lods
in
popf
push
sbb
add
daa
call
mov
nop
mov
nop
mov
mov
in
cmps
call
mov
popf
mov
sbb
add
sbb
mov
in
mov
scas
xchg
in
mov
mov
out
nop
push
sbb
add
inc
jmp
pushf
call
mov
nop
mov
(bad)
nop
call
pushf
call
pushf
in
mov
mov
call
mov
mov
nop
mov
mov
call
add
add
out
mov
mov
call
mov
nop
mov
mov
call
xchg
call
mov
add
call
mov
mov
test
in
xchg
in
mov
mov
mov
call
mov
nop
mov
nop
mov
mov
sbb
call
xchg
out
xchg
in
mov
test
mov
call
mov
test
call
add
add
in
mov
mov
mov
in
mov
mov
add
xor
mov
mov
in
mov
mov
nop
mov
nop
mov
mov
call
pushf
call
mov
and
add
sub
mov
call
mov
mov
call
mov
mov
nop
mov
nop
mov
mov
add
in
mov
mov
test
mov
mov
test
test
nop
mov
mov
in
mov
and
add
xor
mov
mov
in
xchg
in
mov
nop
mov
mov
mov
call
mov
mov
popf
mov
and
add
sbb
mov
in
mov
mov
in
mov
mov
jmp
add
add
call
popf
in
mov
mov
call
mov
mov
call
add
add
in
mov
mov
out
xchg
out
nop
in
mov
mov
mov
mov
mov
in
mov
nop
mov
add
mov
in
mov
nop
mov
mov
xchg
cmps
out
nop
call
mov
scas
mov
mov
mov
call
mov
mov
push
daa
add
add
in
mov
nop
mov
mov
mov
mov
call
cmps
in
add
add
add
in
mov
test
call
mov
test
nop
mov
mov
sub
add
sub
mov
in
mov
nop
mov
mov
nop
mov
mov
xchg
scas
out
mov
movs
mov
sub
add
sub
mov
test
in
mov
nop
mov
(bad)
nop
in
cmps
call
mov
mov
mov
add
aas
in
sub
mov
mov
in
sub
mov
scas
xchg
in
and
xchg
out
mov
mov
xchg
scas
in
mov
mov
mov
add
mov
in
mov
mov
mov
mov
mov
mov
call
xchg
in
mov
mov
mov
call
mov
mov
in
xchg
push
sub
in
mov
mov
mov
mov
mov
out
scas
out
scas
call
mov
add
in
mov
mov
in
mov
mov
call
mov
das
add
add
in
mov
scas
mov
test
mov
mov
in
mov
test
mov
in
mov
xor
add
cmp
test
out
scas
jmp
mov
mov
test
nop
mov
nop
mov
mov
movs
mov
mov
in
add
add
add
in
mov
test
xchg
scas
in
pushf
in
mov
mov
call
xchg
jmp
cmps
call
mov
nop
mov
xor
add
xor
mov
mov
out
nop
in
mov
test
mov
mov
call
mov
mov
test
push
xor
add
daa
in
mov
mov
call
mov
mov
in
sub
mov
mov
mov
push
xor
add
and
(bad)
nop
call
mov
xchg
scas
in
mov
mov
mov
nop
mov
add
nop
mov
mov
call
mov
scas
mov
mov
mov
mov
nop
mov
add
add
in
and
xchg
in
mov
mov
in
pushf
out
mov
aaa
add
add
in
pushf
jmp
and
mov
mov
movs
mov
mov
call
mov
mov
call
mov
mov
out
xchg
push
cmp
add
sub
scas
mov
mov
in
popf
call
mov
mov
mov
out
xchg
in
and
mov
add
jmp
mov
mov
mov
mov
mov
call
mov
mov
in
mov
cmp
add
sbb
xchg
cmps
in
sub
mov
scas
mov
nop
mov
nop
mov
cmp
add
xor
mov
popf
mov
test
call
mov
mov
in
cmps
out
mov
test
call
mov
mov
nop
mov
cmp
add
inc
out
nop
call
mov
mov
call
mov
scas
mov
nop
mov
mov
test
out
mov
mov
nop
mov
mov
nop
mov
cmp
in
and
mov
mov
out
mov
scas
xchg
call
mov
test
nop
mov
mov
in
mov
xchg
scas
in
mov
mov
push
add
add
call
mov
test
out
mov
mov
aas
add
add
in
mov
mov
nop
mov
mov
nop
mov
mov
out
nop
in
popf
out
nop
in
mov
inc
add
add
call
popf
call
mov
mov
call
mov
scas
xchg
call
mov
scas
mov
xchg
scas
out
mov
movs
mov
nop
mov
mov
in
pushf
push
inc
add
add
test
mov
mov
(bad)
nop
call
mov
nop
mov
mov
call
mov
mov
call
pushf
call
mov
nop
mov
inc
add
add
out
mov
mov
call
mov
mov
call
mov
mov
(bad)
nop
in
popf
push
inc
add
add
call
mov
(bad)
nop
call
xchg
in
mov
mov
in
xchg
in
popf
in
mov
mov
in
mov
add
call
mov
mov
in
mov
mov
inc
add
add
mov
mov
call
mov
mov
test
call
mov
nop
mov
mov
call
mov
nop
mov
popf
mov
mov
mov
out
xchg
push
inc
add
add
mov
scas
mov
mov
in
xchg
call
mov
mov
out
mov
nop
mov
mov
call
mov
nop
mov
mov
call
mov
add
in
mov
mov
in
xchg
in
pushf
call
nop
call
mov
mov
add
cmp
mov
xchg
cmps
in
and
nop
call
popf
call
pushf
in
mov
test
call
xchg
(bad)
nop
in
popf
in
and
add
add
out
scas
in
mov
test
out
nop
in
mov
mov
mov
in
mov
mov
nop
mov
dec
add
add
mov
out
mov
mov
out
xchg
in
mov
nop
mov
mov
call
mov
nop
mov
xchg
scas
in
mov
mov
call
popf
in
mov
mov
add
xor
mov
in
mov
mov
scas
xchg
out
xchg
in
mov
mov
test
mov
mov
push
dec
add
add
mov
mov
mov
mov
call
mov
scas
mov
nop
mov
mov
dec
add
add
cmps
call
mov
xchg
cmps
in
mov
nop
mov
xchg
scas
out
xchg
in
mov
dec
add
add
call
xchg
in
xchg
in
cmps
call
mov
scas
xchg
jmp
mov
dec
add
add
out
xchg
in
cmps
in
mov
mov
scas
mov
mov
push
add
add
mov
mov
call
mov
mov
in
and
cmps
in
mov
mov
movs
mov
scas
mov
mov
mov
mov
mov
push
add
add
call
scas
in
mov
test
mov
test
call
mov
nop
mov
mov
out
nop
call
add
add
out
mov
nop
mov
test
in
mov
test
jmp
xchg
in
xchg
call
mov
test
in
cmps
out
mov
mov
add
push
in
mov
nop
mov
mov
call
mov
mov
mov
add
out
mov
mov
nop
mov
nop
mov
mov
in
mov
test
jmp
mov
mov
in
sub
mov
mov
call
mov
add
call
mov
xchg
cmps
in
mov
mov
mov
mov
call
mov
mov
call
mov
push
add
add
in
xchg
in
xchg
call
cmps
in
mov
mov
out
mov
mov
call
mov
add
mov
call
mov
mov
call
mov
nop
mov
mov
out
xchg
call
xchg
mov
in
mov
mov
mov
mov
push
pop
add
add
mov
in
sub
mov
nop
mov
mov
mov
mov
out
mov
pop
add
add
(bad)
nop
in
xchg
call
mov
mov
in
sub
pushf
call
mov
mov
(bad)
nop
call
mov
nop
mov
pop
add
add
call
mov
mov
call
mov
(bad)
nop
call
mov
scas
xchg
call
mov
test
out
nop
in
and
add
add
call
mov
mov
in
mov
nop
mov
popf
mov
mov
out
scas
in
xchg
call
xchg
out
xchg
call
mov
pop
add
add
in
pushf
in
sub
mov
mov
call
mov
test
call
mov
add
call
mov
mov
call
mov
test
in
mov
mov
in
mov
pop
add
add
in
mov
movs
mov
mov
in
sub
mov
mov
mov
in
and
add
add
in
mov
mov
mov
mov
mov
xchg
scas
call
pushf
push
pusha
add
add
mov
mov
in
mov
mov
mov
call
xchg
in
mov
add
out
scas
out
mov
scas
mov
test
call
mov
mov
push
bound
add
inc
in
mov
mov
test
call
mov
mov
in
pushf
in
xchg
in
mov
test
scas
mov
mov
in
mov
test
out
mov
mov
call
mov
arpl
add
sbb
mov
mov
popf
mov
mov
out
mov
add
add
in
mov
nop
mov
mov
call
mov
nop
mov
xchg
scas
out
scas
out
mov
nop
mov
mov
call
xchg
call
mov
add
add
in
mov
mov
mov
mov
test
out
xchg
in
pushf
in
xchg
call
mov
mov
mov
in
mov
add
mov
mov
nop
mov
mov
mov
call
mov
add
mov
nop
mov
scas
xchg
call
sub
stos
in
cmps
out
xchg
call
and
mov
test
mov
out
mov
mov
push
call
mov
mov
in
mov
mov
mov
scas
xchg
in
sub
mov
mov
in
popf
push
imul
(bad)
nop
call
mov
mov
in
cmps
in
mov
mov
mov
in
mov
mov
call
add
add
out
mov
movs
mov
nop
mov
mov
mov
in
mov
(bad)
nop
in
mov
(bad)
nop
call
xchg
out
xchg
in
pushf
call
add
add
movs
mov
mov
call
mov
xchg
scas
out
mov
nop
mov
mov
mov
mov
popf
mov
mov
nop
mov
mov
ins
add
add
in
sub
xchg
test
in
mov
mov
mov
call
nop
in
mov
mov
mov
push
ins
add
add
in
mov
mov
out
xchg
in
cmps
call
pushf
in
and
mov
xchg
cmps
call
cmps
in
mov
nop
mov
mov
add
in
mov
test
in
mov
nop
mov
mov
in
xchg
in
xchg
in
mov
popf
mov
mov
push
outs
add
add
in
xchg
call
xchg
in
mov
mov
call
add
add
in
mov
mov
mov
call
mov
mov
out
xchg
in
mov
scas
xchg
push
jno
add
sbb
mov
nop
mov
mov
call
popf
push
jb
add
xor
mov
in
xchg
call
mov
mov
nop
mov
(bad)
nop
call
mov
mov
in
xchg
out
mov
jae
add
and
mov
in
mov
mov
call
lods
in
mov
mov
call
mov
mov
add
sbb
mov
call
scas
call
mov
mov
nop
mov
add
out
mov
nop
mov
nop
mov
mov
call
mov
mov
mov
mov
out
scas
call
mov
mov
mov
mov
add
in
mov
mov
in
sub
popf
in
mov
mov
call
mov
mov
call
mov
mov
add
push
in
cmps
call
mov
mov
in
mov
mov
push
js
add
xor
nop
mov
nop
mov
mov
call
popf
in
xchg
in
cmps
call
mov
mov
test
call
mov
add
mov
in
mov
movs
mov
mov
mov
mov
mov
jp
add
sbb
mov
mov
call
xchg
out
xchg
call
add
add
in
mov
mov
in
mov
mov
mov
scas
mov
nop
mov
jl
add
and
mov
in
mov
mov
mov
in
mov
xchg
cmps
call
mov
add
call
popf
in
and
and
pushf
call
mov
mov
mov
add
cmp
mov
out
mov
mov
mov
movs
mov
nop
mov
test
in
mov
mov
in
and
mov
mov
in
mov
jg
add
daa
in
mov
mov
mov
call
mov
scas
mov
nop
mov
xchg
scas
out
mov
add
add
mov
call
mov
mov
push
add
mov
mov
out
nop
call
xchg
test
out
mov
mov
in
cmps
call
mov
test
nop
mov
add
add
call
mov
mov
jmp
mov
movs
mov
add
add
in
mov
mov
out
scas
call
mov
xchg
cmps
in
xchg
in
mov
nop
mov
test
call
add
add
mov
in
pushf
call
mov
mov
in
and
xchg
call
xchg
in
xchg
call
add
add
call
mov
nop
mov
scas
mov
mov
mov
add
out
nop
out
mov
mov
mov
nop
mov
mov
out
mov
mov
add
out
scas
call
mov
mov
mov
in
mov
mov
call
add
add
mov
nop
mov
test
call
mov
nop
mov
mov
add
cmp
mov
in
mov
mov
nop
mov
mov
nop
mov
xchg
scas
call
xchg
test
in
xchg
call
mov
mov
add
sub
nop
mov
mov
in
mov
mov
test
in
mov
mov
call
mov
scas
xchg
in
pushf
push
mov
add
sub
mov
mov
in
mov
mov
call
scas
in
sub
mov
test
add
mov
mov
call
lods
push
lea
add
daa
call
xchg
in
mov
mov
scas
xchg
call
mov
nop
mov
mov
mov
add
in
mov
mov
in
mov
nop
mov
xchg
scas
call
nop
in
and
xchg
in
cmps
push
pop
add
aas
in
mov
mov
out
nop
jmp
mov
nop
mov
mov
in
mov
mov
mov
test
mov
scas
mov
mov
add
in
mov
(bad)
nop
call
mov
mov
in
xchg
call
xchg
out
nop
call
mov
scas
mov
test
push
xchg
add
add
call
mov
xchg
cmps
call
mov
mov
mov
call
mov
mov
in
mov
mov
mov
push
xchg
add
add
mov
mov
in
mov
mov
mov
mov
call
mov
add
mov
mov
mov
test
mov
in
mov
mov
add
cmp
mov
in
mov
(bad)
nop
call
mov
mov
in
xchg
in
mov
mov
in
popf
out
mov
mov
mov
xchg
add
add
mov
xchg
cmps
out
nop
call
cmps
push
xchg
add
add
call
mov
mov
test
in
xchg
in
mov
mov
push
xchg
add
add
in
mov
mov
call
cmps
call
mov
mov
mov
xchg
cmps
in
mov
cwde
add
add
mov
call
mov
mov
movs
mov
mov
mov
in
popf
in
mov
cdq
add
add
scas
xchg
in
mov
mov
in
mov
test
jmp
mov
mov
in
mov
mov
call
scas
in
mov
mov
add
test
call
mov
test
movs
mov
nop
mov
test
in
mov
mov
fwait
add
add
mov
test
mov
in
xchg
out
scas
in
and
mov
add
out
nop
out
mov
nop
mov
xchg
cmps
call
cmps
in
sub
mov
mov
mov
call
mov
add
mov
mov
test
push
sahf
add
add
call
mov
mov
nop
mov
mov
in
xchg
out
mov
(bad)
nop
out
scas
call
pushf
out
scas
in
mov
add
call
mov
mov
out
nop
call
mov
nop
mov
mov
jmp
mov
mov
add
in
mov
mov
scas
mov
mov
call
mov
mov
call
mov
mov
in
cmps
push
mov
in
mov
scas
xchg
in
mov
mov
in
mov
nop
mov
mov
out
mov
mov
push
mov
out
xchg
in
mov
mov
in
mov
xchg
scas
in
mov
mov
call
mov
mov
mov
in
mov
mov
xchg
cmps
call
add
add
mov
out
mov
test
in
mov
popf
mov
test
mov
in
xchg
in
mov
xchg
scas
call
cmps
out
nop
call
mov
(bad)
nop
call
mov
movs
add
add
call
mov
test
mov
out
mov
nop
mov
mov
in
pushf
in
mov
nop
mov
add
test
in
mov
mov
call
mov
mov
xchg
cmps
call
xchg
call
mov
test
call
mov
mov
mov
call
add
add
mov
mov
in
mov
nop
mov
test
mov
call
mov
mov
mov
mov
mov
in
mov
cmps
add
add
out
mov
mov
mov
mov
in
mov
mov
add
in
xchg
out
mov
test
in
popf
in
mov
xchg
cmps
call
mov
mov
in
xchg
call
mov
mov
call
mov
mov
push
add
jmp
inc
cli
scas
fisttp
add
icebp
stos
push
cmp
mov
xchg
fcomp
imul
add
ds
xchg
aam
pushf
out
in
xchg
mov
add
clc
popf
int3
or
xchg
jecxz
cmc
mov
sbb
adc
shl
sbb
push
push
stc
shl
je
push
sub
push
jge
pop
outs
add
ja
shl
cld
add
lahf
stc
mov
jb
pusha
and
sahf
(bad)
lock
xlat
mov
add
xchg
and
sbb
mov
push
pop
jmp
ins
das
jns
fimul
dec
sbb
shl
and
addr16
xchg
frstor
xchg
lock
test
gs
sub
(bad)
pop
mov
xchg
push
jp
jno
sub
fs
cdq
adc
repz
xchg
adc
mov
xchg
push
dec
data16
sahf
int
fistp
out
jp
xchg
sub
push
adc
dec
or
inc
adc
sbb
jne
fsubr
pop
pop
or
push
or
cdq
out
cmps
xor
and
mov
test
retf
mov
sbb
or
or
scas
fisttp
xlat
xchg
fild
retf
shl
dec
pusha
inc
pop
push
mov
sbb
retf
xchg
shl
ins
ins
push
dec
dec
aas
test
or
xor
push
dec
mov
(bad)
fistp
aas
push
adc
push
jmp
pushf
into
movs
rcr
stc
enter
add
sub
fadd
jb
nop
(bad)
sub
aam
std
stos
jno
cmps
cmc
jo
push
inc
cmp
sbb
bound
inc
xchg
rcr
movs
sbb
pop
sbb
in
xchg
ds
call
push
sub
ror
imul
enter
or
ror
add
scas
in
dec
sbb
js
int
mov
mov
jg
xor
inc
xchg
fstp
test
icebp
jo
adc
ret
stos
enter
jae
mov
xchg
out
or
js
push
stos
lds
repz
sbb
call
vmread
jns
cld
(bad)
inc
adc
scas
clc
ret
cmp
inc
daa
cld
mov
shr
pop
jno
push
popf
jmp
sbb
mov
test
(bad)
lods
cmc
sub
stos
cmc
nop
shl
popf
shl
or
out
in
in
cmp
xlat
mov
and
xchg
movs
imul
in
xchg
cmc
mov
xchg
adc
inc
xor
hlt
enter
dec
or
jmp
es
or
outs
adc
cld
mov
cmp
cmp
cli
lods
mov
cmp
shl
mov
rcr
or
jg
call
add
inc
pop
sub
push
retf
shr
cmp
aaa
pusha
and
(bad)
loop
sub
mov
jnp
dec
sbb
add
jo
in
sbb
sbb
mov
fcmovnb
mov
out
cmps
and
daa
jno
xchg
mov
pop
dec
cmp
(bad)
(bad)
stos
sti
nop
cmp
mov
mov
add
xchg
adc
and
cmp
dec
add
movs
jge
dec
sub
sar
das
imul
push
adc
push
sub
into
adc
pusha
sub
xlat
test
xchg
rol
push
fs
add
or
fisttp
push
call
sbb
xchg
clc
scas
jmp
cmc
mov
(bad)
mov
mov
xor
pop
sub
stc
adc
dec
cmp
mov
cdq
fsubr
mov
pop
fs
inc
mov
addr16
cmp
shl
mov
out
mov
jb
mov
xchg
xchg
shr
sahf
imul
inc
push
es
jp
mov
std
cmp
cs
mov
pop
or
push
push
add
sbb
jnp
inc
cmp
sbb
nop
(bad)
test
mov
jbe
jae
retf
cdq
(bad)
aaa
pop
cmp
not
cwde
out
cmps
fld
add
inc
ds
mov
ror
arpl
inc
jecxz
sbb
jne
bound
fbstp
inc
xor
int3
xchg
dec
pop
add
jmp
push
add
adc
cli
cmps
in
sub
pop
pop
es
mov
dec
push
hlt
(bad)
mov
xchg
rol
jmp
mov
lods
cld
xchg
call
shr
cmps
imul
add
mov
inc
pop
add
mov
je
(bad)
mov
pop
into
aam
daa
cwde
fnstenv
mov
push
cmp
xchg
clc
mov
dec
or
xor
nop
adc
xor
into
lods
(bad)
mov
inc
xchg
mov
aad
adc
push
push
xchg
repnz
scas
(bad)
fiadd
and
scas
fistp
pop
dec
and
push
out
cmp
test
mov
xchg
rcr
mov
aaa
inc
cmp
ja
in
and
std
mov
pop
sbb
retf
cli
ret
mov
fisttp
inc
sub
jecxz
fcom
mov
aaa
addr16
pop
(bad)
imul
ds
mov
loopne
les
cmp
mov
pop
xor
retf
lea
sbb
cbw
xlat
pop
xor
cmp
mov
push
adc
call
movs
loopne
leave
add
add
dec
or
jae
push
pop
jp
mov
dec
or
rcl
sbb
dec
loop
inc
aaa
pusha
adc
jns
inc
push
jge
or
in
fldcw
clc
ss
dec
mov
fisubr
xchg
std
xchg
test
call
xchg
mov
into
pushf
std
cwde
shl
arpl
imul
popa
or
sub
or
cdq
ror
mov
shl
in
test
paddsw
push
sub
rcl
mov
sahf
leave
or
push
inc
adc
inc
and
mov
jns
inc
pop
push
es
fisubr
inc
xor
clc
add
jge
xchg
outs
adc
iret
inc
jmp
mov
ins
cmp
in
mov
pop
add
push
std
xchg
loopne
repnz
wrmsr
test
xchg
xchg
xchg
scas
sub
pop
sub
nop
rcr
or
jo
xchg
in
lods
jmp
popf
retf
(bad)
push
clc
fs
ret
std
mov
cmovae
cmps
neg
ds
dec
xor
lods
leave
cwde
out
jb
push
imul
pop
push
scas
cmc
cdq
nop
clc
fwait
(bad)
dec
in
lods
addr16
pop
add
jae
or
mul
lods
dec
daa
ror
mov
add
inc
add
push
leave
cwde
cmp
ins
aas
xor
rcl
jl
xchg
or
push
add
repnz
loopne
aam
pusha
test
jl
in
or
out
fdiv
test
dec
shr
enter
lds
xor
inc
in
push
jne
jle
pop
jne
mov
arpl
xor
cmp
pop
xor
mov
inc
push
dec
enter
enter
ret
movzx
pop
sbb
imul
shl
lahf
jnp
(bad)
lock
ins
sbb
out
and
pop
adc
neg
and
imul
push
mov
mov
sbb
pop
add
stc
test
popa
adc
jae
jbe
(bad)
mov
fisub
cmp
dec
push
sahf
fld
push
and
loop
loop
cwde
fcom
inc
jl
pop
arpl
add
cmp
jnp
pusha
xor
xchg
scas
pop
wrmsr
jne
or
jnp
retf
test
in
out
ja
stos
pusha
and
push
pop
lds
loop
shl
pop
pop
movs
clc
test
stos
enter
cld
mov
das
ja
and
and
ret
or
dec
cmp
leave
add
shl
cmp
jl
cwde
mov
push
addr16
cmps
imul
cmp
xchg
mov
sub
outs
popf
aam
aad
ret
mov
test
mov
icebp
cmp
adc
adc
push
push
adc
sub
xchg
shl
pop
push
push
inc
push
xor
pusha
and
mov
or
inc
sbb
add
or
popa
mov
sub
mov
popa
sub
xor
xor
outs
pop
or
cs
cmc
mov
jmp
outs
and
fdivr
imul
ins
push
push
add
push
mov
fcom
inc
cmc
mov
repz
jbe
push
jnp
jns
mov
xor
enter
xchg
aas
ja
xchg
(bad)
lods
lds
mov
hlt
scas
mov
sbb
ds
inc
jne
inc
nop
mov
pop
je
push
xor
inc
sub
sbb
cmp
je
push
pop
jle
adc
push
jecxz
in
hlt
mov
hlt
popa
xor
clc
pop
adc
jo
ins
cmp
mov
sar
xchg
mov
pop
mov
push
add
ficomp
movs
into
jmp
shl
movs
imul
or
sbb
push
adc
inc
sub
frstor
imul
mov
and
aad
xor
hlt
mov
test
push
gs
cmc
mov
sbb
pop
or
aas
das
call
cs
inc
adc
xor
int
xchg
or
fidivr
jne
push
dec
adc
pop
cs
inc
sub
mov
jg
add
(bad)
in
mov
cmps
adc
mov
jge
jmp
out
(bad)
(bad)
stos
inc
push
mov
dec
test
lahf
fidiv
inc
setnp
and
ins
cmp
mov
mov
icebp
pop
adc
(bad)
or
mov
outs
shl
int
pop
add
lea
add
retf
les
(bad)
pop
and
int3
ins
dec
sub
xchg
push
pop
pop
mov
test
js
mov
mov
mov
fsubr
mov
mov
sbb
call
push
push
or
dec
pop
pop
xchg
int
xchg
xlat
mov
xlat
pusha
sbb
adc
rcl
push
sbb
or
xchg
cmp
push
in
scas
mov
aam
fild
pop
pop
add
push
cmp
lahf
std
lods
(bad)
ss
mov
retf
cmp
push
and
retf
mov
sub
pop
pushf
aad
hlt
mov
ds
imul
cli
mov
rol
arpl
adc
push
cmp
sbb
jnp
retf
mov
push
push
imul
scas
fstp
inc
adc
pop
jbe
xchg
ret
out
test
jbe
js
or
aas
push
adc
stos
xchg
js
cs
mov
sbb
push
xchg
fisubr
popa
adc
sub
mov
mov
mov
movs
jmp
adc
dec
sbb
leave
lock
mov
xchg
cmps
neg
xchg
jp
in
dec
adc
add
mov
lods
fmul
enter
int3
scas
xor
cmp
add
imul
mov
stos
inc
xor
pop
sbb
add
xchg
cli
cdq
jmp
adc
inc
stos
repz
adc
aaa
jbe
rcr
dec
mov
dec
ss
adc
cli
mov
adc
mov
loopne
mov
out
and
cmp
cmp
rcl
imul
inc
adc
jae
pop
je
imul
out
add
repz
sub
pop
das
outs
sub
xor
mov
popf
fucomp
mov
xchg
rol
ja
xchg
mov
(bad)
mov
dec
cmp
sbb
sub
jge
pop
mov
sub
je
in
cmps
fadd
push
sub
loop
popa
xor
adc
test
xchg
movs
fdiv
jle
aam
in
test
jmp
sub
push
pop
jmp
hlt
enter
adc
push
add
jo
push
addr16
iret
mov
movs
call
add
cmp
ficomp
jne
scas
fisttp
call
ret
and
jbe
(bad)
mov
je
(bad)
mov
setb
test
pop
jmp
pop
lods
pop
dec
and
jae
cli
add
sub
inc
pusha
cmp
not
mov
aas
jae
int
cmp
loop
cld
test
cmps
cmc
mov
add
pop
or
imul
shl
sbb
jecxz
cwde
rol
pop
repnz
(bad)
in
add
pop
xchg
mov
imul
and
mov
inc
sbb
(bad)
mov
movs
jmp
or
mov
jbe
ins
cmp
jp
ret
xor
or
xchg
shr
mov
mov
test
lods
pusha
sub
mov
push
or
add
call
std
mov
xor
sbb
jl
popa
ss
xchg
and
inc
and
imul
repz
dec
or
mov
fmul
xor
inc
and
cdq
(bad)
inc
cmp
pop
lods
adc
jns
push
pop
imul
dec
xor
(bad)
imul
imul
add
test
outs
das
jns
pop
and
ror
loop
imul
imul
mov
cmp
dec
and
pop
lock
(bad)
adc
inc
add
stos
out
call
cld
scas
les
xchg
fild
pop
loop
ret
test
enter
jne
stc
sub
stos
(bad)
and
push
dec
aaa
outs
cmp
sbb
(bad)
dec
pcmpgtd
push
ss
mov
pop
push
adc
or
into
mov
(bad)
sub
(bad)
jmp
inc
call
imul
stc
test
pop
adc
jno
inc
dec
pop
xor
stc
mov
pop
sub
inc
xchg
xlat
(bad)
cli
lahf
into
out
fidivr
enter
in
test
mov
js
jns
jb
out
jae
pop
or
mov
sub
fisttp
inc
stos
out
cmp
js
fimul
jmp
dec
sbb
jecxz
mov
mov
ror
xor
movs
mov
dec
test
push
xor
popa
add
cmps
dec
ds
add
sub
dec
sub
pop
lahf
neg
mov
lods
sti
imul
sbb
add
jo
pop
pop
retf
inc
pop
outs
pop
or
jp
xchg
fild
xor
mov
mov
mov
sbb
cmps
das
addr16
outs
inc
lock
jle
mov
call
jg
pop
sbb
cmp
call
fcomp
in
sub
pop
sbb
scas
cmc
call
cmp
aaa
jae
loopne
push
jnp
adc
in
xchg
mov
mov
hlt
mov
inc
push
ins
sbb
pop
sbb
ins
lods
(bad)
mov
shl
push
pushf
sbb
fdiv
mov
jmp
retf
dec
ja
jg
fistp
jl
jg
mov
ins
cmp
int3
xchg
inc
push
shr
sub
(bad)
std
xlat
cmps
out
gs
enter
jg
pop
add
inc
sbb
or
dec
sbb
in
fstp
aad
and
inc
add
cmps
sub
mov
or
inc
sub
fisttp
inc
sbb
pop
push
adc
sub
pop
add
push
push
sub
mov
cdq
in
mov
pop
or
mov
das
pop
adc
in
mov
ds
fwait
fwait
mov
xchg
mov
cmp
xor
div
jp
inc
aas
addr16
lods
lock
push
add
mov
ror
adc
sub
outs
sub
mov
cmp
jo
cmp
dec
and
mov
mov
inc
loop
std
stos
out
mov
rep
mov
pop
bound
clc
mov
mov
mov
rcr
ins
adc
pop
int3
movs
jge
push
adc
cmp
cdq
add
inc
add
dec
xor
das
ror
aaa
xchg
sbb
jb
outs
cmp
arpl
push
and
jne
push
cmp
movs
mov
test
and
lods
push
aaa
pop
repz
xchg
xor
xor
jg
xor
xchg
push
xchg
fisttp
mov
and
in
test
icebp
test
fcomp
xor
pusha
sub
push
sub
gs
push
push
jnp
repz
out
mov
sbb
(bad)
xor
mov
and
cmovle
(bad)
(bad)
aad
out
or
enter
push
sbb
mov
xchg
mov
and
repz
or
(bad)
xchg
std
xchg
test
and
push
mov
cmovg
ins
or
jnp
sub
fs
fbld
outs
sbb
sub
cld
mov
mov
mov
mov
popf
lods
fimul
cmp
xchg
retf
add
inc
sub
pinsrw
mov
push
scas
test
mov
mov
add
imul
sahf
leave
mov
(bad)
mov
xorps
mov
pop
stc
mov
mov
push
push
les
clc
add
rol
and
(bad)
outs
jns
scas
fistp
push
jb
jns
ret
inc
mov
ins
in
std
stos
out
loopne
add
jns
repnz
push
cmp
dec
and
mov
jle
add
ins
sub
jmp
dec
int
stos
and
jge
jle
rcl
ret
mul
push
daa
jo
out
mov
test
xor
jge
ins
cmp
xchg
adc
dec
inc
add
imul
mov
ret
sub
dec
add
push
cmps
mul
ja
pusha
push
das
mov
adc
jns
xor
adc
xor
pinsrw
lock
and
jns
pop
push
lods
loope
fisttp
mov
xorps
sub
(bad)
dec
aas
jle
jbe
lds
mov
je
jg
mov
jne
xor
ror
cmp
mov
push
gs
mov
bound
xchg
lds
aaa
mov
fimul
sahf
fcomp
stc
scas
jmp
dec
sbb
mov
jp
mov
(bad)
out
jge
sbb
push
sbb
sub
dec
sbb
stos
std
(bad)
into
jmp
outs
push
gs
inc
mov
mov
adc
lods
call
or
movs
pop
jmp
mov
pop
push
jae
movs
int3
mov
retf
aam
pushf
ret
rol
inc
ss
movs
add
pop
mov
int3
lahf
retf
mov
pop
or
fidivr
jbe
inc
sbb
data16
and
scas
retf
mov
xchg
jae
xlat
mov
xor
and
in
cmp
dec
mul
(bad)
fadd
movs
jnp
push
cmp
mov
inc
adc
inc
movs
hlt
mov
push
lahf
mov
cmp
mov
aad
xlat
daa
outs
dec
sbb
sbb
mov
cdq
test
outs
mov
xchg
sub
aam
jmp
inc
push
sbb
mov
sbb
jae
jecxz
cmp
fdiv
xchg
in
mov
sub
and
aad
lahf
mov
movs
rol
sbb
dec
pop
hlt
scas
cld
mov
xor
imul
and
push
push
and
pop
mov
repz
imul
cmp
fist
pop
ss
adc
pop
and
pop
cmp
jecxz
nop
push
lds
inc
pop
xor
in
sbb
sub
std
mov
daa
adc
mov
add
xchg
push
add
mov
mov
dec
xor
lock
loopne
into
xchg
sti
xchg
test
scas
pop
pop
and
andps
dec
xor
sub
push
fwait
aam
hlt
fisubr
add
cdq
rol
cwde
iret
cmps
leave
xchg
sbb
dec
sub
push
xor
add
jg
dec
adc
cld
outs
fmul
jne
je
add
adc
je
jb
mov
loop
sbb
cmp
call
mov
pop
ss
adc
rol
pop
into
jge
sub
xor
xchg
scas
mov
shr
das
sub
or
div
adc
bnd
sub
adc
pop
jmp
(bad)
stos
hlt
test
xchg
into
stos
repz
mov
mov
xchg
sbb
push
shl
sub
(bad)
mov
dec
rol
adc
cmp
dec
int3
mov
data16
pop
add
gs
push
and
gs
scas
lea
xor
add
nop
mov
sar
pop
push
inc
xlat
push
repnz
pop
into
inc
add
or
cmc
xchg
cmps
mov
icebp
sub
loopne
loopne
add
mov
ret
push
push
sbb
mov
mov
or
and
je
(bad)
leave
cdq
scas
mov
jb
ss
push
lds
mov
xchg
xchg
into
jp
push
push
pop
adc
std
stos
lods
xchg
push
cs
dec
cli
scas
stos
mov
sar
xor
and
cmc
popf
stos
mov
imul
mul
cdq
xchg
stos
repz
call
into
xchg
int
movs
lock
faddp
scas
jmp
pop
sub
jge
lea
data16
xchg
or
xor
pop
sub
push
mov
mov
rcl
test
shl
adc
out
movs
mov
xor
clc
cmps
xchg
test
aas
cmp
lea
das
sbb
imul
cmp
mov
mov
cmp
mov
aad
stc
idiv
mov
enter
sbb
outs
(bad)
lea
and
pusha
or
aaa
ins
xor
pusha
or
jno
ins
adc
dec
sub
xor
dec
xor
pop
movq
push
add
push
or
and
rep
pop
arpl
pushf
in
mov
out
les
xor
adc
ret
ins
fimul
dec
(bad)
nop
cmp
repz
(bad)
xchg
rcr
cmp
sbb
imul
ret
ins
(bad)
sub
imul
aad
mov
das
fs
sbb
sbb
push
dec
ds
add
inc
push
pop
push
xor
push
cs
gs
xchg
rcr
mov
mov
mov
fisttp
jp
jnp
adc
jb
inc
hlt
mov
fistp
mov
popa
sub
sbb
dec
or
jne
adc
pop
shr
adc
ins
fadd
push
xor
dec
xor
dec
pcmpgtw
outs
fisttp
push
into
pop
sbb
push
xor
fisubr
or
or
shr
mov
adc
or
mov
fsubr
xchg
fisub
ins
add
(bad)
imul
fst
dec
lods
ins
cmp
jg
cdq
les
and
jo
xchg
clc
mov
dec
cmp
ret
in
aad
xor
dec
retf
cmps
mov
loop
xchg
sbb
jo
fimul
ja
adc
push
ins
fimul
mov
inc
jmp
cld
ja
xchg
mov
pop
or
cli
jge
mov
xchg
cli
mov
ret
mov
sar
adc
mov
inc
push
jl
fwait
sub
dec
or
xor
js
call
inc
cwde
int3
jg
inc
or
sub
mov
sbb
ds
shr
and
add
clc
jbe
xchg
xchg
dec
or
or
push
(bad)
pusha
xlat
xor
stos
pop
push
in
js
mov
mov
sbb
cmp
mov
shl
aaa
rsqrtps
data16
gs
pop
or
hlt
mov
test
cmps
sbb
pop
adc
js
sbb
adc
je
jb
mov
loop
sbb
pusha
push
push
xor
dec
fnstsw
scas
lahf
lea
push
pop
sbb
lds
ins
out
ins
pop
push
cmp
std
jge
dec
pop
aas
sub
and
movs
sbb
and
push
fst
mov
xchg
mov
cmp
mov
(bad)
rcr
dec
or
inc
xor
jns
cdq
jmp
sbb
jno
jne
push
ss
adc
or
ins
pop
or
xchg
repz
repz
fsub
gs
out
scas
lods
mov
xor
xor
ficom
imul
and
ror
jbe
push
add
xor
pop
and
dec
add
jne
es
and
movq
inc
add
popf
iret
(bad)
xchg
lds
sar
mov
movs
lock
test
lods
jmp
or
sahf
int3
scas
out
movs
int
out
xchg
aad
shl
mov
mov
mov
mov
and
sbb
jbe
push
call
(bad)
ins
pop
xor
jp
jl
cmp
dec
sbb
sub
inc
mul
xchg
cwde
xchg
scas
cmc
(bad)
(bad)
mov
sbb
push
xor
inc
cmp
cmp
gs
inc
add
ss
pop
push
dec
sbb
cmp
data16
jne
jge
pop
or
dec
or
ds
push
cmp
imul
pusha
jecxz
cli
stos
popf
sahf
pushf
shr
imul
or
ins
in
push
xchg
mov
mov
add
and
rcr
scas
movs
pusha
cmp
pop
fst
pop
adc
push
add
popa
or
sbb
imul
jo
bound
push
sbb
push
or
imul
push
sbb
imul
or
push
pop
adc
pusha
and
ss
add
xchg
hlt
mov
gs
adc
in
sar
push
shl
sbb
adc
jmp
repnz
mov
push
push
out
cmc
scas
call
pop
xor
or
arpl
inc
adc
jae
push
adc
imul
dec
sub
pop
sbb
push
and
imul
sbb
jnp
pop
sbb
popa
sbb
js
popa
cmp
pop
adc
inc
sub
pop
arpl
jne
ins
add
xor
adc
js
cmps
mov
lahf
iret
jl
outs
add
daa
sbb
pop
loop
stos
sub
das
pop
dec
mov
les
adc
jno
ins
pop
adc
xchg
cli
xchg
icebp
adc
aam
jmp
leave
call
ficomp
loope
jmp
call
jecxz
rcl
test
mov
cwde
int3
mov
mov
out
sbb
cs
rcr
xchg
push
jl
sahf
mov
inc
sub
(bad)
jle
jb
xchg
sub
or
aaa
andps
dec
fistp
jmp
cmp
fidiv
stc
mov
mov
xchg
ret
xchg
icebp
mov
fimul
retf
xchg
shr
test
mov
fcomp
mov
cmc
mov
mov
stos
cld
push
out
fnstcw
cmp
jo
inc
adc
js
inc
add
or
arpl
and
data16
inc
lds
inc
lds
sub
ja
xchg
movs
cmps
movs
out
(bad)
pop
xor
cmp
pop
(bad)
sbb
outs
xor
or
inc
adc
dec
sbb
ins
and
push
cmp
inc
push
push
adc
sub
pop
push
dec
or
cmp
pop
xor
pusha
and
push
or
pop
cmp
dec
add
or
push
mov
loopne
aaa
xor
dec
or
sub
add
push
aad
mov
aad
ds
inc
cmc
mov
outs
imul
sub
cmp
jno
cmp
ret
fild
fild
ret
xchg
loop
ror
jmp
mov
xchg
loopne
in
ror
retf
sub
into
mov
mov
sbb
xor
into
movs
sub
jge
aad
push
or
dec
sub
dec
push
and
dec
add
and
jg
fwait
lods
scas
lods
push
es
push
loop
mov
xchg
fldenv
outs
sub
cmp
in
test
aad
cld
mov
enter
cmc
(bad)
xlat
test
xchg
shl
in
cwde
iret
mov
xlat
xchg
test
xchg
rol
mov
xchg
(bad)
(bad)
mov
les
fsub
and
ja
jne
and
dec
sbb
push
loope
sub
add
jne
popf
popf
fwait
scas
out
leave
pop
sbb
pop
xor
fst
mov
inc
iret
ja
cmp
xor
add
jg
dec
adc
jne
push
push
inc
cs
or
dec
adc
push
add
aas
inc
sbb
lahf
iret
mov
push
cmp
jo
pusha
and
mov
stos
in
cmps
sub
dec
adc
pop
mov
mov
mov
mov
into
fdiv
xlat
lahf
adc
pop
sbb
sub
ja
call
rol
xor
dec
imul
(bad)
(bad)
out
mov
sahf
jmp
movs
cmc
sahf
not
(bad)
(bad)
cmc
lods
(bad)
mov
jmp
inc
sub
fs
adc
jge
jb
cli
sbb
ja
bound
mov
aas
jmp
leave
adc
mov
inc
and
outs
pop
adc
xchg
sti
mov
xchg
adc
sub
cmp
push
xor
pop
or
cs
push
inc
(bad)
push
les
lea
xor
sahf
shr
ret
mov
mov
sti
test
mov
call
xchg
rcl
rcr
jmp
cld
movs
push
stos
std
mov
adc
retf
ja
push
adc
rol
sbb
xchg
mov
test
cmp
xor
dec
or
add
int
sahf
mov
cmp
sbb
ins
fimul
jae
jb
jnp
cmp
sahf
fcomp
xchg
rol
into
cdq
call
adc
xchg
rcl
imul
ins
shl
(bad)
pop
sbb
xchg
push
xchg
xchg
fdivp
inc
xor
xchg
lds
(bad)
and
das
outs
and
push
cmp
xor
jmp
mov
cmp
jae
pushf
lahf
mov
jo
or
xlat
cmp
into
test
mov
xlat
xchg
movs
in
clc
scas
ficomp
out
in
hlt
mov
out
in
test
mov
enter
hlt
stos
in
sar
adc
imul
(bad)
mov
add
pop
ds
pop
cmp
pushf
fldenv
loopne
jecxz
sbb
mov
lods
loope
rol
(bad)
call
fst
sbb
ss
sub
dec
or
addr16
pop
xor
and
ss
dec
aaa
outs
cmp
cs
pop
sub
and
jae
sahf
sbb
xor
daa
dec
pop
dec
add
push
add
dec
add
fnsave
iret
mov
loope
out
in
int
imul
(bad)
(bad)
out
mov
mov
out
mov
lock
in
test
xchg
cld
fistp
push
(bad)
dec
pop
and
push
or
aaa
pop
xor
and
ss
dec
aaa
outs
cmp
cs
pop
sub
and
inc
add
outs
aas
push
cmp
sub
ds
inc
xor
gs
iret
mov
in
dec
cmp
inc
push
arpl
arpl
int3
push
lock
mov
mov
mov
fimul
jae
jb
pop
pop
adc
js
xchg
xchg
cwde
mov
dec
fmul
adc
aas
outs
fmul
movs
xchg
xchg
sbb
cwde
clc
or
sbb
mov
loop
shl
mov
mov
call
rol
loopne
ror
cdq
cmp
jl
ror
inc
sub
adc
jae
(bad)
fistp
cld
mov
icebp
dec
(bad)
or
sbb
(bad)
mov
mov
and
add
mov
les
or
mov
test
mov
mov
fmul
leave
xchg
ret
test
mov
lock
ficomp
leave
mov
in
xlat
mov
cdq
loopne
loop
mov
cwde
iret
(bad)
xchg
mov
push
cmp
sub
inc
xor
sbb
dec
xor
push
pop
push
js
arpl
js
bound
dec
add
push
aaa
imul
or
jg
dec
adc
inc
and
inc
push
jo
inc
sbb
pop
push
jnp
pop
or
push
add
ja
inc
sbb
dec
sub
dec
or
jle
push
push
push
inc
and
aam
retf
cmps
repz
cli
mov
scas
retf
xchg
cli
mov
xchg
sbb
push
pop
add
cwde
retf
mov
mul
in
mov
cmps
loopne
loopne
fst
leave
or
in
mov
mov
clc
mov
mov
loopne
aam
div
int
lds
aad
repnz
xchg
mov
mov
fsubr
cmc
test
or
mov
js
inc
mov
pusha
add
fsubr
jg
dec
dec
push
jl
js
jnp
imul
cmp
adc
xor
sub
pop
or
inc
jb
ja
sbb
loopne
jmp
int
iret
mov
lds
ret
lahf
enter
mov
mov
jne
jg
sbb
lods
in
(bad)
popa
cdq
iret
mov
int
add
pop
dec
cmp
pop
mov
adc
cdq
je
paddb
inc
mov
cwde
jo
mov
jge
xchg
jbe
adc
push
lock
mov
mov
xchg
mov
mov
(bad)
fwait
lahf
jo
xchg
jns
cmp
sbb
pop
mov
inc
mov
mov
(bad)
xor
inc
mov
sbb
cmp
aas
sbb
pop
pop
push
push
ss
xor
push
inc
movs
pushf
data16
sub
dec
lds
aad
adc
int
mov
fwait
jo
jge
dec
and
int
enter
hlt
lahf
not
cmp
inc
xchg
xor
xor
mov
jae
fadd
out
and
or
cli
neg
repnz
inc
cmps
jnp
shl
mov
pop
inc
sub
in
jmp
and
inc
jecxz
nop
mov
mov
mov
(bad)
fcom
imul
scas
popf
pop
(bad)
clc
or
push
dec
add
loop
mov
push
popa
mov
push
mov
adc
xchg
dec
jb
aad
or
jle
lahf
xor
mov
inc
fsub
xor
mov
add
repz
sub
push
cmc
and
dec
and
add
shl
fst
jmp
xchg
mov
movs
push
xchg
fstp
cli
jbe
mov
pop
cdq
mov
in
adc
push
je
(bad)
pusha
out
mov
inc
and
lods
mov
popa
ss
sbb
mov
cwde
and
les
sub
cld
jae
push
fist
(bad)
pop
nop
call
push
mov
lea
jge
stos
in
push
pop
mov
(bad)
jmp
aaa
xchg
mov
xor
aaa
xbegin
loop
fs
push
shl
std
mov
push
sub
fistp
test
sbb
xchg
inc
dec
cs
dec
aam
in
icebp
ret
test
dec
ins
test
mov
jns
popa
sub
(bad)
mov
fwait
rcr
(bad)
push
mov
sub
test
test
xchg
rcl
adc
ror
fwait
(bad)
and
loope
and
push
cmp
or
xchg
std
dec
pop
cmp
jecxz
adc
bound
sub
and
shr
test
sub
(bad)
ds
les
xchg
jno
adc
mov
cmp
(bad)
sbb
rcl
inc
mov
jne
dec
pop
jb
jg
sub
in
das
or
or
test
push
call
inc
pop
xchg
sub
stos
adc
pushf
mov
mov
jnp
in
shl
lds
test
das
pop
cmp
or
xor
fist
mov
cmp
adc
and
or
enter
xchg
add
sahf
std
mov
xchg
mov
(bad)
fcomip
cmp
or
pop
dec
mov
pop
cmp
bound
(bad)
cmp
enter
or
mov
int
xchg
movs
lods
jg
mov
(bad)
jo
(bad)
jmp
test
sbb
or
mov
push
aas
pop
(bad)
sub
shl
daa
aas
add
std
pop
inc
sub
aaa
loopne
add
pop
jne
js
movs
and
jmp
gs
retf
xor
jl
ror
xchg
cmp
pop
mov
sub
push
cmp
imul
mov
adc
neg
inc
xlat
dec
add
xor
test
sahf
pop
jo
int3
mov
and
pop
push
out
mov
mov
sub
jo
aaa
sub
and
push
daa
iret
fwait
mov
out
(bad)
mov
xchg
in
nop
pop
int
and
xchg
mov
movs
mov
xchg
lea
pop
add
rol
xor
push
lahf
rol
test
xlat
fst
stos
lods
fidivr
pop
loop
or
adc
push
add
movs
rcl
push
cwde
lods
xchg
or
or
int3
mov
adc
pop
jbe
push
popf
xor
lods
pop
push
push
mov
pushf
pushf
add
cmc
push
add
out
add
and
push
iret
pop
xchg
add
out
iret
cmp
ins
shl
lods
mov
sub
sub
jno
cmp
jb
or
sub
repz
in
push
mov
pop
cmc
ss
sbb
jo
xchg
push
ss
jp
jne
xor
scas
xlat
out
xchg
mov
sbb
pop
js
pop
clc
and
test
retf
shr
mov
clc
push
and
sub
pop
(bad)
dec
bound
bnd
xor
inc
leave
xchg
int3
nop
outs
sub
popa
es
and
dec
adc
xchg
and
pop
or
dec
jmp
loopne
mov
cld
cmp
dec
mov
test
clc
sub
push
xor
jbe
or
das
inc
sbb
ret
mov
(bad)
mov
(bad)
or
stc
mov
ja
cwde
sub
sbb
push
retf
xchg
lods
jns
mov
xor
leave
sub
and
fst
and
int
or
ret
es
jo
dec
add
xchg
pop
rcr
mov
das
adc
retf
add
sbb
aam
mov
loop
rol
pop
rcr
outs
popf
dec
cmp
sub
jmp
enter
inc
(bad)
fld
rcr
ror
push
(bad)
sub
imul
push
jb
mov
sub
aad
in
div
pop
add
repz
pushf
pop
jbe
dec
adc
jmp
mov
lods
pushw
sub
popa
cmps
enter
stc
jb
out
and
push
xchg
and
adc
(bad)
and
add
cmps
mov
xchg
fstp
jg
jge
leave
iret
pusha
data16
xchg
sbb
std
mov
loop
pop
retf
jns
movs
pop
xchg
movs
mov
retf
pop
xor
xor
xor
aad
dec
fist
neg
inc
add
xchg
push
add
push
or
cdq
fwait
rcl
(bad)
mov
fimul
cmps
out
add
mov
mov
(bad)
mov
mov
pop
sbb
call
sub
js
jo
loope
cwde
int3
ds
(bad)
daa
jg
pushf
jne
into
lahf
xchg
(bad)
outs
push
pop
or
push
dec
imul
rol
test
adc
sahf
jns
(bad)
xchg
mov
cmp
adc
leave
mov
int3
mov
int3
xchg
ins
sub
lods
jbe
or
cli
xchg
leave
sahf
out
dec
rcr
xlat
push
add
or
push
hlt
mov
into
push
add
mov
repnz
mov
sub
shl
aam
fwait
ret
cmp
xchg
lahf
into
fwait
int3
push
outs
retf
pushf
push
mov
jecxz
or
mov
sahf
(bad)
cmp
fcomp
push
ds
sahf
out
imul
test
jecxz
jo
mov
mov
xlat
xchg
inc
movs
in
add
mov
lods
addr16
dec
call
cmps
cwde
fsubr
sbb
test
ins
test
push
movs
iret
ja
adc
lock
xchg
cmp
cmps
mov
scas
jle
std
mov
addr16
jbe
in
adc
js
dec
push
xor
in
mov
xor
sub
(bad)
aas
push
sbb
jmp
fadd
retf
and
mov
cs
lea
les
xlat
sub
sub
xor
mov
xchg
mov
mov
push
or
xchg
outs
or
ret
mov
adc
pop
rep
dec
or
(bad)
xor
test
mov
sbb
mov
and
mov
cmp
mov
jle
add
pusha
mov
iret
adc
cmp
mov
dec
add
test
mov
push
adc
mov
adc
pop
xchg
add
jge
out
push
mov
es
rol
sbb
in
ins
sub
sub
arpl
sub
jmp
lock
and
data16
data16
loop
mov
xchg
jl
ret
xchg
inc
sub
inc
out
or
sbb
xchg
pusha
add
mov
and
loop
gs
mov
add
out
scas
sahf
ror
repz
fs
or
and
in
mov
pop
fisttp
into
xchg
or
jle
mov
pop
sbb
inc
movs
std
push
adc
scas
inc
adc
inc
stos
ret
sub
xchg
inc
or
jne
sbb
jge
add
jg
push
(bad)
xchg
xchg
les
push
retf
pushf
ficom
pop
iret
xchg
movlps
nop
inc
add
test
mov
cmp
sub
pushf
fnstsw
mov
scas
jg
sbb
movs
dec
adc
mov
retf
push
add
mov
lock
(bad)
into
mov
mov
mov
das
hlt
lods
imul
sbb
sub
js
mov
ins
push
out
mov
test
jl
ds
shl
movs
int
or
lods
popf
rcl
call
stos
inc
or
mov
(bad)
xchg
std
mov
pop
adc
inc
sub
inc
add
push
sti
and
jecxz
cmp
lods
inc
add
stos
inc
push
adc
pop
add
push
fnstcw
jl
popf
lahf
into
sub
fisubr
cmps
push
rcl
inc
mov
jae
div
push
push
neg
cld
mov
adc
inc
(bad)
popf
cdq
int
je
jecxz
push
lds
adc
sub
dec
cmps
out
sbb
pop
jmp
jb
fisttp
dec
xchg
shl
sub
dec
clc
mov
gs
or
cmc
jno
das
ja
mov
push
sbb
into
inc
or
inc
mov
aaa
push
leave
popf
jle
(bad)
mov
shr
pop
push
out
mov
sahf
neg
cmc
mov
out
inc
sbb
shl
arpl
mov
pop
sbb
pop
aaa
inc
loope
cmp
dec
into
lods
ficomp
ins
xor
dec
mov
ins
fidiv
xchg
frstor
out
inc
adc
mov
in
pop
adc
add
iret
cwde
jnp
or
fimul
outs
retf
lahf
nop
aam
or
mov
xchg
mov
inc
adc
mov
mov
stc
jae
aaa
jnp
xchg
repnz
(bad)
lahf
int3
jns
mov
and
xchg
imul
out
inc
push
ss
sbb
in
mov
aam
dec
or
lea
enter
xchg
rcl
imul
fs
test
push
pop
sbb
int3
pop
pop
aaa
pop
push
jne
xlat
inc
add
mov
dec
int
mov
push
adc
fs
fst
push
push
int3
movs
xchg
loope
push
adc
sti
inc
and
in
lods
data16
pusha
jmp
test
jnp
in
fsubr
mov
aas
ins
cli
lods
aad
mov
das
daa
push
mov
push
sub
fs
xchg
fld
hlt
mov
adc
mov
mov
lahf
fisubr
int
int3
pushf
mov
xor
xchg
imul
add
jge
stos
xchg
rcl
or
lods
leave
mov
jmp
add
imul
pop
push
xor
jae
test
fdivr
sbb
fisttp
xchg
mov
in
mov
dec
ret
mov
fcomp
jo
mov
add
lock
ds
fimul
sub
mov
loope
or
xchg
iret
data16
nop
ins
pop
cmp
ret
aaa
fs
popf
inc
and
bound
movs
lds
es
sub
scas
xchg
in
sub
mov
fidivr
sub
add
mov
lods
xchg
in
mov
push
add
mov
push
dec
xlat
mov
cmps
fdivr
inc
add
dec
xchg
xor
retf
(bad)
fist
jne
jno
pop
ss
cmps
(bad)
ds
fisubr
js
call
mov
push
adc
iret
or
push
sar
inc
mov
ret
xchg
ret
cmp
cdq
xchg
sar
pop
add
push
(bad)
not
sbb
repnz
sbb
mov
jnp
dec
sub
dec
test
inc
xor
pop
lods
jmp
cld
xchg
addr16
mov
pop
iret
mov
enter
popa
ret
lock
out
ins
sub
jne
(bad)
(bad)
adc
movs
arpl
out
xchg
repnz
and
stos
out
pop
and
mov
ins
sub
gs
out
popa
aaa
out
jp
leave
mov
xchg
data16
xor
inc
call
cdq
in
das
pop
mov
sub
out
and
mov
xor
jmp
(bad)
fmul
pop
mov
dec
fsubr
add
movs
ins
push
(bad)
mov
jp
cmp
mov
dec
mov
sbb
cmc
inc
adc
push
(bad)
mov
loope
aaa
or
xor
xchg
push
push
scas
(bad)
inc
mov
pop
and
pop
neg
pop
sub
ins
aam
outs
cmp
xchg
pop
test
mov
lock
outs
sbb
jbe
sbb
mov
shl
shl
xlat
xchg
popa
enter
in
xchg
les
cmp
push
sub
mov
push
fisub
cmps
xlat
mov
sbb
loope
(bad)
jmp
mov
iret
cmp
fistp
dec
cmp
outs
fcomp
js
in
jo
in
bound
in
repz
mov
xlat
sub
leave
jge
daa
pop
movs
hlt
or
ret
movs
sar
adc
sub
sti
aas
dec
retf
fidivr
cmp
mov
jmp
mov
jnp
mov
shl
push
mov
fist
adc
(bad)
push
adc
xor
mov
aas
out
je
std
mov
inc
push
sbb
xchg
mov
pop
sub
shl
enter
sbb
jnp
cmp
inc
test
cmp
int
push
mov
imul
aaa
or
jae
push
and
inc
scas
xchg
ret
nop
clc
pop
sub
jge
test
out
and
mov
adc
pop
std
mov
daa
dec
iret
mov
jecxz
jp
pop
or
pop
mov
xchg
shl
out
mov
inc
mov
scas
lahf
jmp
scas
stc
jnp
aaa
inc
mov
cmp
out
adc
push
aad
mov
inc
add
lahf
cmp
fisttp
add
pop
ss
xor
(bad)
fldenv
xor
(bad)
sub
test
push
add
mov
ins
sub
inc
shl
mov
mov
push
das
sbb
in
dec
sub
cmp
mov
cmp
cmc
pop
es
mov
inc
test
xchg
jl
adc
push
mov
pop
jbe
call
dec
aas
sbb
leave
daa
pop
mov
push
add
ja
mov
dec
cmp
mov
mov
xlat
jae
sbb
mov
mov
jmp
mov
iret
jne
retf
mov
cld
mov
mov
mov
xor
sub
sbb
test
mov
sub
jl
sub
jb
jbe
aas
sti
(bad)
jnp
cld
mov
pushw
pop
ins
test
push
scas
std
and
mov
mov
enter
jmp
inc
shl
test
das
jl
repz
xor
jle
(bad)
shl
fldenv
mov
aad
jns
movs
mov
or
aad
jb
in
xchg
jns
adc
cmc
add
leave
aas
dec
mov
ds
call
sub
mov
addr16
cdq
jne
icebp
cdq
outs
sbb
retf
jmp
sbb
movs
sahf
jmp
push
sbb
mov
imul
arpl
cmp
pop
mov
cmp
mov
jmp
fild
sbb
mov
loop
fisttp
jnp
sub
mov
adc
mov
(bad)
sub
lds
bound
mov
inc
movs
cld
inc
add
mov
leave
mov
arpl
(bad)
pushf
arpl
sub
lahf
mov
xor
sbb
push
jmp
je
sub
push
dec
jmp
sub
fidivr
out
cmps
mov
push
adc
jp
fbstp
and
lds
xor
retf
push
xor
mov
ja
add
cld
push
add
mov
shr
add
in
es
mov
push
lock
call
xchg
inc
sub
mov
loope
xchg
stc
xor
dec
stos
out
xor
xchg
pushf
fdivr
cmps
test
mov
push
int3
cmps
sahf
std
dec
sbb
push
or
push
test
mov
in
adc
jg
or
movs
popa
add
inc
mov
daa
outs
enter
xchg
shr
jp
sub
pop
jecxz
mov
cmp
mov
retf
(bad)
stos
loop
pop
iret
mov
jmp
adc
xor
jne
fst
or
jns
call
gs
mov
int3
pop
adc
dec
test
inc
and
mov
jl
out
movs
loope
sub
cmp
pop
pop
test
pop
add
(bad)
mov
xchg
(bad)
sub
mov
push
xor
scas
mov
push
add
pop
int3
fwait
xlat
xchg
ins
and
pop
cs
lods
inc
push
es
cmps
mov
sahf
jo
ss
aad
sahf
sar
das
inc
shl
mov
das
adc
popf
int3
pop
pextrw
lods
push
push
sbb
mov
sub
invd
pop
scas
jmp
pop
sbb
push
ret
xchg
js
sbb
bnd
adc
lods
outs
or
(bad)
out
stos
addr16
cmps
mov
imul
mov
into
xchg
imul
push
pop
sub
mov
pop
push
ret
test
hlt
popf
xchg
(bad)
xor
lea
es
sbb
mov
add
test
into
pop
por
mov
lds
jae
mov
mov
jae
add
bnd
push
pop
movs
repz
cmp
inc
or
(bad)
fidiv
sbb
enter
xor
int
mov
mov
jmp
outs
cli
mov
into
cs
fidivr
cmps
out
and
xchg
xchg
ror
sub
movs
int
maskmovq
div
(bad)
lods
jne
push
add
dec
ficom
les
out
jb
leave
mov
stos
leave
dec
push
leave
lea
mov
rol
fstp
aam
daa
retf
cs
mov
aas
ss
pop
rol
cld
stos
dec
or
mov
lock
xchg
rcr
push
imul
cmps
neg
icebp
cwde
test
inc
add
xchg
stc
sub
xchg
inc
add
bound
pop
mul
into
cdq
add
arpl
mov
in
movs
push
push
adc
fdivr
ds
call
add
jmp
jle
mov
mov
cwde
fcomp
xor
shl
cmp
in
jg
pop
or
jnp
enter
jnp
test
out
sbb
cmps
dec
push
aaa
jbe
cmps
ins
ss
je
out
xor
ficom
sub
xchg
cmps
icebp
inc
sub
cdq
(bad)
into
and
fild
fmul
pop
mov
inc
add
pop
les
mov
push
sbb
push
cmc
sahf
ins
push
call
add
dec
mov
dec
mov
dec
and
inc
rcl
lds
adc
fwait
scas
div
xor
xchg
outs
mov
ds
xor
jle
out
pop
push
or
out
and
mov
lods
sti
jp
in
mov
sub
mov
out
xchg
(bad)
je
hlt
lods
jno
and
mov
addr16
and
stc
mov
aam
dec
sbb
jmp
daa
jg
cmps
test
xchg
lds
or
pushf
fstp
mov
add
aad
mov
and
xchg
mov
jnp
push
inc
mov
dec
int
sbb
sub
push
in
movs
push
mov
cmp
call
jl
(bad)
jb
out
jge
adc
push
inc
cmps
loop
or
jno
mov
stos
movs
jmp
ret
aaa
out
imul
movs
xchg
and
sahf
xchg
(bad)
jg
daa
jo
cwde
inc
push
add
mov
inc
and
push
(bad)
xchg
mov
and
in
fs
(bad)
pop
or
xchg
test
jle
repnz
push
jne
in
jg
loopne
bound
jecxz
mov
pop
or
mov
nop
rcr
pop
inc
stos
sar
pop
mov
inc
or
nop
aam
sbb
push
mov
dec
movs
jmp
fidivr
sbb
test
xchg
popa
fstp
adc
arpl
jbe
loope
xor
cmp
jns
stc
jne
sbb
adc
mov
add
fwait
int3
cmp
dec
rol
ja
ror
adc
pop
sbb
in
adc
push
xlat
dec
and
lods
xchg
aam
jb
nop
or
stos
jmp
data16
lahf
mov
mov
addr16
xor
aaa
jnp
xchg
xchg
jmp
dec
cmps
repz
add
pop
fld
int3
popf
popa
ss
test
push
aad
imul
aaa
jae
popf
xchg
int3
adc
xor
lods
mov
pusha
aaa
or
enter
mov
sub
adc
mov
das
jmp
lods
les
jmp
inc
ret
rol
retf
and
inc
mov
je
or
jmp
mov
je
repnz
ficom
mov
xor
ins
cmps
iret
push
pop
cmp
test
mov
cmp
mov
ret
js
sub
out
xor
shl
xchg
popa
sub
add
icebp
dec
or
jbe
in
or
mov
int
xor
jae
loope
add
inc
retf
cld
dec
das
or
add
or
pusha
call
mov
aam
mov
stos
call
aaa
xor
std
pop
sbb
mov
and
cmp
out
dec
test
dec
das
or
add
xchg
sar
out
mov
lds
sbb
and
fiadd
inc
retf
(bad)
mov
cmp
int
jae
repnz
add
inc
rol
(bad)
lahf
inc
add
test
(bad)
out
sbb
popa
cmp
mov
cmps
out
or
int3
mov
cmp
xlat
dec
and
sahf
mov
dec
add
jp
xor
mov
cmp
xchg
jb
loope
jno
cmp
lds
lods
not
sbb
xchg
jbe
xchg
popf
fnstenv
loope
xchg
push
mov
dec
add
test
in
stos
out
or
xchg
jnp
aaa
jae
in
add
push
das
outs
in
mov
cld
lahf
mov
ins
sub
(bad)
fs
jle
xchg
test
je
or
neg
call
ins
mov
pop
loopne
mov
push
lea
out
scas
clc
sub
fst
leave
stos
inc
adc
mov
scas
lods
jmp
pop
jle
call
enter
das
dec
rcl
movs
loopne
imul
(bad)
fimul
popa
mov
inc
scas
hlt
push
cmp
jge
xor
pop
sbb
cdq
add
leave
xor
jg
(bad)
mov
mov
es
icebp
movs
xchg
aad
xor
mov
loope
jne
das
inc
cmps
icebp
sub
test
cmp
pop
jecxz
adc
dec
lods
in
push
ret
xchg
arpl
jg
loop
inc
movs
jmp
sahf
std
daa
jae
xchg
inc
fstp
add
lds
outs
mov
xchg
sahf
std
and
dec
add
daa
mul
xlat
and
push
jne
int3
ss
out
inc
push
sbb
imul
cmps
lock
cmp
fld
adc
add
lods
outs
sub
(bad)
enter
psubsb
loope
scas
lds
ds
mov
rol
pop
aaa
sbb
cdq
inc
or
sar
ret
xchg
in
popa
mul
pusha
aaa
jmp
mov
test
adc
out
sbb
jge
aaa
pusha
add
adc
push
(bad)
lods
imul
ss
mov
clc
test
xor
mov
or
xchg
xchg
repnz
xchg
fstp
mov
mov
add
(bad)
ins
and
fwait
arpl
sub
icebp
pop
sbb
imul
mov
loope
fist
out
call
inc
test
dec
push
adc
lea
stos
mov
sahf
addr16
mov
add
xchg
jb
repnz
inc
adc
dec
mov
data16
movs
call
loop
cmp
mov
les
ficom
xor
lahf
popf
fld
or
mov
enter
jg
movs
call
lds
loopne
xchg
sar
mov
enter
mov
sar
ficom
dec
sub
lahf
dec
or
inc
repnz
nop
aam
imul
aam
add
push
add
(bad)
or
mov
(bad)
daa
arpl
fwait
jo
add
sbb
fadd
test
imul
mov
int
bound
jmp
pop
pop
add
test
mov
pop
pop
cmp
xchg
cmp
cdq
mov
sub
mov
jb
lea
jo
sti
es
mov
sbb
scas
mov
sub
xchg
xchg
fist
pop
or
pop
pop
(bad)
mov
cs
mov
in
sub
test
hlt
xchg
mov
push
push
add
lods
xchg
ror
push
mul
add
out
test
mov
ds
xchg
call
aam
inc
fisttp
aad
adc
mov
test
int3
mov
or
call
icebp
mov
leave
jl
out
test
scas
xchg
fcom
adc
mov
retf
cmp
jle
add
aam
retf
call
inc
mov
test
push
mov
jmp
add
ds
dec
xchg
aad
pop
or
cmp
dec
test
sahf
rcr
neg
ret
xchg
xchg
mov
inc
add
xchg
xchg
mov
and
adc
scas
out
cmps
loopne
ins
xor
movs
aas
(bad)
xchg
pop
mov
cmp
dec
jb
(bad)
push
xchg
or
das
leave
inc
ins
imul
xchg
rcl
repz
sar
mov
pop
inc
call
and
jmp
xchg
sub
ins
loop
scas
ss
mov
lods
cld
jnp
mov
repnz
ret
mov
mov
mov
sub
in
xchg
movs
xor
cwde
(bad)
pusha
js
das
mov
cmp
ins
push
and
add
mov
call
and
jns
sub
cmp
sti
psubusw
sub
call
out
jl
mov
mov
out
cmp
daa
xor
cli
mov
mov
inc
mov
sub
cmc
repz
pusha
xor
leave
dec
(bad)
jmp
pusha
push
mov
push
xchg
fdivr
pop
cwde
push
xchg
dec
stc
pop
cmp
mov
jb
loop
xchg
out
dec
xchg
bound
push
xchg
cmp
test
mov
or
xor
xor
dec
mov
jge
movs
loope
mov
or
sub
xchg
mov
dec
push
sbb
stos
xchg
xor
sub
push
add
dec
inc
ds
dec
loope
xchg
sub
adc
mov
cmp
pusha
aam
test
adc
or
push
pop
mov
neg
test
push
or
add
pop
adc
pusha
and
adc
call
in
mov
xchg
fisubr
pop
push
jp
push
dec
cli
fwait
inc
xor
sti
sbb
inc
leave
adc
adc
adc
mov
add
(bad)
enter
add
push
stos
rol
mov
inc
ins
dec
xor
add
push
fcmovnu
aas
dec
call
icebp
inc
ja
aad
sub
pop
xchg
sub
adc
xchg
addr16
jnp
std
(bad)
xor
ror
lahf
push
jno
push
pusha
lahf
adc
dec
mov
retf
repz
sar
popf
push
mov
ret
sub
mov
xchg
popf
iret
cmps
loope
xor
xor
(bad)
cmc
mov
fisub
adc
mov
xor
mov
je
mov
adc
cmps
pop
shr
pop
repz
sub
xchg
jae
adc
mov
js
mov
lahf
stos
sbb
and
push
enter
xchg
jge
mov
pop
dec
mov
(bad)
push
adc
inc
hlt
xchg
fsub
ret
je
icebp
stos
outs
aas
rcr
mov
in
enter
jmp
jle
test
int3
test
cmp
jae
ror
push
cld
sar
mov
pop
jne
add
push
jge
and
mov
mov
push
xor
pusha
(bad)
and
sub
test
iret
or
sti
sbb
jne
fwait
les
lods
fs
inc
pop
out
sub
xor
mov
out
inc
dec
sub
daa
jo
cld
xlat
or
ins
add
pop
cmp
fmul
fcomp
iret
jle
and
js
jle
dec
stc
aas
sbb
mov
ficom
cmp
imul
ficomp
sub
pop
sbb
mov
sub
repz
out
fcomp
test
outs
xchg
jno
mov
mov
pusha
sbb
jg
jle
mov
push
jb
int3
psrad
xlat
push
jecxz
xchg
sbb
jecxz
inc
loop
xchg
sar
mov
mov
dec
jmp
ins
inc
sbb
sub
and
push
mov
shl
cli
sbb
loop
(bad)
js
bound
sbb
jns
jnp
sbb
jne
or
je
add
mov
rcr
or
push
mov
gs
inc
cmc
push
mov
mov
sub
dec
scas
pop
ins
dec
sub
push
bound
stos
(bad)
adc
movs
pusha
fld
xor
sbb
retf
xchg
xor
pop
(bad)
sar
push
dec
pop
xchg
dec
pop
add
sub
imul
aas
(bad)
retf
(bad)
pushf
inc
dec
xor
dec
mov
shr
mov
cmp
jge
lea
aaa
retf
call
std
or
jb
inc
push
call
dec
arpl
shl
outs
cmp
mov
adc
lds
pusha
jne
jp
imul
pop
push
or
or
gs
in
int
fisttp
in
push
jecxz
and
lock
retf
mov
cld
sub
mov
out
ret
popa
nop
add
or
fs
loopne
retf
clc
inc
push
addr16
ja
mov
pop
and
mov
mov
ins
jae
and
mov
jl
push
sub
les
push
je
push
jmp
jmp
fnstenv
inc
scas
and
cmp
in
jmp
dec
aam
sub
dec
ss
xchg
push
(bad)
fwait
mov
aam
xchg
(bad)
int
and
mov
inc
inc
add
int
(bad)
stos
dec
inc
inc
inc
clc
mov
sti
mov
jmp
push
add
jbe
xchg
push
push
cmp
or
jne
test
add
pop
or
loopne
shl
cdq
mov
push
(bad)
enter
in
stos
outs
ins
sub
inc
sar
and
popa
cmps
mov
xchg
daa
dec
dec
movntq
mov
sbb
popf
lock
push
aaa
adc
xor
outs
ins
daa
cld
mov
pop
jecxz
imul
add
repnz
outs
sub
call
dec
fsubr
adc
(bad)
(bad)
or
int
scas
add
push
das
cld
xor
scas
push
fs
mov
cmps
mov
stc
(bad)
cmp
pop
outs
dec
or
int3
fsub
inc
jmp
xchg
add
shl
jmp
adc
mov
aad
sub
es
push
xchg
fnstcw
stc
(bad)
pusha
dec
fdivr
(bad)
aas
push
mov
push
xchg
add
sar
or
jo
imul
popa
and
add
push
popa
jmp
cmps
mov
mov
stos
out
test
cdq
mov
add
je
jb
data16
dec
cmc
rol
push
fxch
stc
pop
mov
repnz
mov
fwait
mov
add
xor
sbb
pop
pop
mov
mov
in
ret
std
(bad)
jmp
push
push
out
or
inc
push
lahf
xlat
test
sti
daa
bound
enter
inc
mov
retf
push
(bad)
cmc
mov
stos
in
ds
scas
sub
addr16
adc
dec
cdq
jns
pop
cmp
fstp
xor
xor
test
cmps
imul
jae
fs
repz
scas
loope
add
pop
add
pop
leave
aas
mov
lds
cli
push
push
scas
xor
outs
(bad)
or
fwait
scas
pop
dec
pusha
ins
pop
mov
shr
imul
ss
push
jp
stos
dec
or
popa
jns
xor
inc
dec
rcr
ldmxcsr
mov
inc
pop
retf
out
xor
or
push
push
pop
or
jns
loopne
jo
hlt
jecxz
or
push
(bad)
jmp
(bad)
enter
dec
xchg
outs
xlat
sub
jnp
lock
ror
push
cmp
add
test
push
dec
aad
sub
dec
pop
jmp
rcr
pop
jno
push
mov
jno
pop
pushf
add
jno
inc
popf
push
add
add
repz
mov
mov
jl
in
adc
fwait
sub
cmps
jno
pop
pop
addr16
dec
imul
xlat
xlat
xor
call
xor
sub
pop
cmps
lahf
retf
cld
fild
stc
sub
aas
xchg
pop
sbb
mov
shr
movs
mov
sbb
sbb
add
or
arpl
mov
sbb
mov
movs
add
sbb
add
in
call
sbb
dec
bound
push
xor
xor
and
ror
cwde
sub
cmp
push
pushf
pop
push
and
in
aas
cmp
pop
fwait
cmp
mov
test
shr
xchg
clc
test
jle
out
adc
adc
xchg
or
add
mov
fwait
sbb
push
cdq
pop
test
xchg
add
outs
in
out
dec
jle
adc
push
mov
ror
fwait
jae
lea
pop
inc
cmp
mov
pusha
aaa
push
sahf
dec
cwde
dec
inc
pop
inc
rol
adc
adc
xchg
je
iret
fsubp
fstp
mov
fnsave
mov
push
movs
xor
xor
pop
ja
xlat
adc
fdivr
aad
pop
jp
xor
ret
(bad)
jg
retf
lea
(bad)
and
or
xor
mov
or
adc
mov
xchg
stc
sbb
mov
dec
mov
clc
daa
xchg
jl
ret
repz
xchg
shr
mov
add
sbb
and
daa
jmp
outs
fsub
sar
in
aam
mov
xor
xor
cmp
mov
mov
cmc
jmp
pop
jnp
xlat
in
in
push
addr16
ja
lods
fs
jnp
inc
push
cmps
std
stos
mov
hlt
and
push
push
or
jne
jnp
xchg
adc
pop
mov
pop
xlat
call
mov
xchg
clc
cli
aas
xchg
in
pop
pop
pop
jmp
push
ret
ja
test
pop
ja
inc
push
or
adc
pop
and
cwde
mov
lds
dec
and
sbb
mov
mov
out
out
sti
cmp
hlt
je
inc
or
ficom
push
sbb
mov
movs
mov
or
call
sbb
pushf
mov
dec
mov
loopne
mov
lods
and
push
punpckhbw
fs
scas
jnp
cmps
ins
adc
inc
xchg
sbb
clc
js
cmp
(bad)
sub
(bad)
jae
cmps
add
and
in
xlat
sbb
and
fist
cwde
ss
nop
ret
fs
add
ficomp
mov
mov
push
dec
outs
push
ret
scas
in
mov
pop
push
loope
out
fsubr
clc
pop
pop
test
cmp
cmc
shl
dec
cmp
adc
leave
jle
add
dec
das
lea
test
vpcmov
push
mov
pop
test
les
push
sbb
mov
loopne
(bad)
cmp
in
neg
jne
test
bound
dec
push
rol
ret
test
outs
or
fwait
jmp
dec
xor
stos
sbb
mov
dec
stc
jmp
cmp
xchg
mov
xchg
pop
or
scas
cmp
jnp
jecxz
ins
add
push
ret
sbb
mov
ins
aas
xchg
fs
sahf
out
jbe
sub
rol
out
and
pop
inc
retf
sbb
cmps
(bad)
sbb
mov
fidivr
pop
mov
ins
cmp
repnz
dec
inc
sub
cwde
fiadd
loopne
sbb
adc
hlt
and
mov
sub
ret
inc
pop
fnsave
or
mov
or
push
and
pusha
cdq
js
rcr
stos
loop
sbb
call
cmp
shl
jl
fcmovnbe
stos
imul
popf
ror
clc
sub
fldenv
sbb
pusha
hlt
arpl
retf
mov
pop
xor
add
lea
mov
and
loop
mov
cmc
mov
scas
loopne
mov
test
mov
jo
fldenv
retf
shl
(bad)
or
shl
dec
sbb
sar
adc
(bad)
clc
mov
lea
call
inc
and
mov
adc
xchg
push
mov
(bad)
fldcw
scas
xor
push
imul
xor
into
jmp
pop
sub
fmul
aaa
mov
fcomip
cmp
cld
mov
mov
dec
cs
pop
or
pop
sbb
push
sub
sub
push
sti
(bad)
int3
lds
or
mov
cld
inc
dec
xchg
movs
test
pop
mov
scas
out
inc
cmp
mov
rcr
jge
push
jne
mov
sbb
jl
add
fld
push
mov
inc
dec
jne
(bad)
inc
ret
jne
sbb
out
pop
add
hlt
or
ins
les
rcl
adc
mov
mov
mov
out
int
xor
sbb
xor
je
out
mov
pop
ss
add
pushf
jbe
inc
mov
enter
cmps
and
mov
lahf
retf
xlat
repz
cmps
push
mov
jmp
pop
xchg
mov
js
ins
mov
xchg
xchg
sbb
mov
push
cmps
sub
xchg
push
movs
lods
mov
push
mov
jle
add
leave
addr16
(bad)
sbb
test
adc
mov
cdq
aad
sub
xor
dec
aad
sar
push
mov
or
push
(bad)
aad
out
ror
dec
sbb
std
imul
retf
pop
inc
push
jmp
pusha
fnstcw
add
aaa
out
mov
mov
popa
pop
popa
adc
cmp
xor
daa
mov
push
jge
stc
ficom
jnp
aas
jnp
ds
les
in
stc
pop
inc
and
adc
inc
add
test
ret
adc
dec
sbb
and
dec
adc
sub
sar
fist
and
mov
es
or
push
(bad)
push
jns
push
sub
jnp
jae
jl
push
dec
inc
jmp
mov
xchg
js
aaa
mov
mov
aas
add
push
xchg
loopne
jmp
push
movs
jbe
ins
popf
dec
outs
stos
inc
loop
xchg
aad
add
jb
cld
xor
lock
fstp
pop
or
xlat
pop
pop
xchg
(bad)
adc
movntq
in
and
int3
pop
les
dec
lods
dec
mov
inc
mov
cs
xchg
repz
bound
cmp
rol
mov
retf
xor
loop
or
outs
jae
pop
push
imul
bound
or
das
not
push
int3
stos
(bad)
aam
and
ret
aas
cmp
fadd
or
inc
int3
mov
idiv
adc
int
stc
jbe
es
or
push
lds
sar
loope
shl
sbb
jnp
mov
push
xchg
xor
sti
inc
(bad)
(bad)
jmp
or
(bad)
sub
aaa
push
inc
pop
cmp
cmp
push
ss
inc
(bad)
xchg
push
sub
lds
xchg
mov
shr
mov
ret
pop
mov
inc
xchg
(bad)
fbstp
pop
mov
add
inc
cdq
push
in
cmp
das
rcl
xor
pushf
lock
inc
dec
or
ret
sbb
leave
arpl
push
(bad)
(bad)
mov
nop
das
outs
fwait
and
pusha
stos
dec
add
rcr
lds
cmp
cdq
lods
pop
pop
mov
int3
pop
xor
mov
(bad)
jg
aas
dec
es
aas
push
scas
push
mov
xchg
mov
and
adc
loope
sbb
mov
imul
addr16
call
out
cmps
jae
add
imul
mov
cmp
sbb
add
jecxz
pop
jle
sub
gs
xor
jbe
xchg
add
jno
cdq
xor
fmul
outs
call
lods
arpl
addr16
adc
inc
rol
stos
or
ret
sbb
imul
add
test
dec
push
sub
(bad)
or
mov
mov
mov
shr
int
jno
inc
test
push
xor
xlat
xor
mov
in
(bad)
fistp
leave
fsub
mov
ins
push
dec
sbb
ins
pop
mov
mov
pop
repz
loopne
nop
jmp
jae
add
inc
inc
gs
mov
fcmovne
loop
movs
push
add
pop
mov
cmp
pop
or
and
mov
or
sub
mov
js
pop
ins
lea
ror
dec
aas
sbb
data16
ret
fcom
pop
sahf
faddp
loopne
cmp
mov
jnp
clc
add
cld
mov
cmp
adc
mov
rcr
int
or
mov
sub
stc
daa
adc
mov
push
js
jae
cld
adc
dec
aaa
mov
push
lods
push
dec
das
xchg
sti
mov
sub
xchg
out
xchg
cwde
in
push
cld
inc
jbe
mov
jge
cmp
jl
test
dec
dec
ss
imul
cmp
sub
mov
add
adc
mul
std
(bad)
les
xchg
xor
mov
sbb
mov
popf
fucomp
mov
int
loopne
add
aam
mov
sub
movs
cmc
cmps
sbb
popa
xchg
cli
aas
mov
inc
mov
pop
pop
nop
or
mov
push
pop
xor
mov
xchg
jp
fmul
xor
pop
pop
mov
imul
std
mov
shl
add
leave
pop
hlt
xor
outs
or
jo
iret
sbb
fwait
daa
add
mov
jle
xor
mov
inc
leave
pop
icebp
sub
jns
cmc
inc
cmp
sti
push
mov
cld
call
sub
iret
enter
(bad)
dec
repz
shl
(bad)
inc
add
sub
or
mov
sti
neg
xor
add
ret
sbb
int
sbb
imul
shl
(bad)
inc
add
fisttp
enter
inc
mov
jmp
mov
fxch
(bad)
and
sub
inc
inc
push
fwait
and
mov
mov
sub
fcmovu
outs
cli
aas
xor
cld
push
mov
cld
pop
xchg
xchg
add
in
outs
out
xchg
popf
test
cmp
cmp
mov
ror
sbb
das
not
inc
ja
jno
and
mov
xchg
xchg
lods
pusha
pop
or
movs
inc
xchg
out
xor
mov
loopne
(bad)
jae
repnz
and
pop
inc
dec
mov
mov
arpl
sub
dec
aaa
cdq
in
xchg
loop
mov
mov
or
jbe
neg
mov
push
ja
out
sti
mov
xchg
mov
sahf
sbb
jo
or
ja
es
mov
jo
inc
(bad)
fs
mov
xchg
inc
xor
dec
sti
sbb
and
in
mov
out
mov
inc
push
jb
mov
mov
jnp
adc
push
sub
adc
sub
pop
push
pop
dec
inc
cs
cmps
out
sar
inc
movs
pop
loope
dec
stos
pushf
xor
sti
add
std
scas
lahf
sbb
in
inc
xor
dec
jmp
push
mov
enter
pop
sub
into
xor
je
cmp
jo
shr
mov
test
test
leave
cmp
push
add
or
push
ins
jne
push
sbb
dec
push
in
fwait
mov
sbb
push
pop
cmp
pop
test
cmp
mov
rcl
dec
or
jns
sbb
ins
adc
(bad)
data16
es
out
or
cdq
dec
fidivr
xchg
addr16
inc
xor
int
scas
nop
in
inc
mov
xor
mov
pop
pushf
out
mov
push
push
xor
fnstenv
in
out
movs
jmp
and
add
add
rcr
fstp
add
push
hlt
push
add
rcl
fisttp
xchg
cmp
repz
mov
add
pushf
dec
sub
cmps
push
or
imul
(bad)
pop
sbb
loope
cmps
xchg
mov
outs
fadd
repz
hlt
and
loope
fidivr
(bad)
pop
test
mov
shl
and
add
das
call
jg
test
pop
xlat
sub
cmp
loope
mov
add
sub
cmp
push
mov
mov
or
jecxz
sti
mov
fld
sub
cmp
and
ds
xor
sbb
and
aas
loope
repz
rol
add
sub
out
shl
sbb
pop
mov
mov
jns
js
xchg
out
scas
xchg
pusha
mov
loope
xor
or
jg
ja
mov
pusha
add
adc
cmp
not
xchg
ret
pop
movs
ins
lea
shr
int
jno
dec
mov
jns
jle
arpl
push
rol
in
jno
xor
das
adc
shl
or
mov
repz
push
mov
fs
xlat
and
xor
cmp
jnp
pusha
mov
add
sub
cs
lea
mov
mul
out
sbb
sub
or
sub
pop
mov
lea
xchg
outs
mov
mov
xchg
imul
sub
or
repnz
sti
xor
add
call
sbb
or
es
add
daa
sbb
out
push
cmps
lahf
jns
cdq
fisttp
pop
retf
push
enter
loope
int3
xor
stc
push
enter
in
daa
or
push
iret
cmp
sti
or
and
push
(bad)
xor
inc
mov
xchg
in
add
push
cmps
push
int3
aas
ret
dec
mov
push
lods
gs
data16
jb
aaa
lds
fs
xor
inc
aad
lods
fwait
push
int3
sub
inc
mov
popf
mov
outs
mov
popa
xlat
aas
push
les
retf
inc
lea
and
call
adc
adc
push
mov
je
nop
aam
jmp
lds
in
lods
dec
mov
pop
mov
cmp
sub
das
pop
test
rol
inc
mov
fidiv
cmp
aad
or
and
in
sub
pushf
dec
mov
sub
pop
stos
call
push
cli
mov
pop
mov
xchg
cmp
and
sbb
pop
mov
scas
jp
rcr
gs
jge
add
dec
test
jmp
lea
push
mov
ins
test
inc
fidivr
mov
ficomp
nop
jnp
inc
shr
ret
pop
repz
enter
shl
hlt
push
mov
icebp
cmp
adc
dec
mov
or
(bad)
sub
and
or
jle
nop
adc
pusha
mov
aas
in
(bad)
push
mov
dec
cmp
dec
iret
adc
cmc
and
and
cmp
cld
push
lods
data16
cmps
test
jl
pop
mov
cmps
jae
mov
lock
in
imul
mov
or
sub
pop
xlat
or
xchg
push
mov
cmc
push
test
cmp
push
icebp
daa
jmp
cmc
dec
mov
cmp
or
and
cmp
add
imul
mov
rcl
mov
sbb
inc
out
sub
shl
add
jecxz
out
pop
cli
es
pop
or
mov
pop
not
sub
sub
dec
mov
popa
fstp
mov
bound
in
leave
xor
xchg
popf
push
ret
dec
loope
int3
cmp
dec
fiadd
add
(bad)
adc
stc
pop
cmp
test
push
test
jno
ja
lahf
mov
inc
mov
dec
mov
mov
xchg
and
or
out
daa
adc
inc
mov
push
adc
xor
outs
mov
jl
inc
fild
adc
out
add
mov
(bad)
push
fnstenv
loop
or
dec
xchg
or
or
push
cmps
inc
and
add
ret
xor
clc
pop
mov
ret
inc
xor
aam
out
xor
les
xchg
push
clc
inc
sub
add
pop
mov
arpl
mov
cmps
popf
outs
pop
sbb
and
pop
sbb
push
mov
jns
xchg
repz
mov
jg
push
mov
cmps
xchg
dec
retf
push
out
add
clc
mov
jp
or
add
pop
adc
sbb
jmp
mov
imul
inc
ret
push
shl
out
iret
pop
xor
add
in
fs
mov
out
and
addr16
add
dec
aad
shr
fs
int3
ds
mov
je
or
sub
test
lods
ins
aam
into
sub
push
mov
bound
or
and
les
in
mov
xor
cmp
add
cmc
aaa
lock
pop
mov
jl
add
pushf
mov
mov
dec
sub
cld
pop
(bad)
das
pop
nop
daa
add
xor
jo
cmp
mov
call
movs
mov
add
fcom
les
in
jne
jp
and
add
adc
hlt
cmps
cmps
xchg
inc
aam
repz
mov
lods
outs
xor
xchg
push
stos
imul
xchg
jle
add
out
loop
ror
xor
aaa
adc
daa
call
xor
movs
lea
cmp
sbb
pop
lea
dec
sub
int3
sub
pop
lods
inc
mov
mov
cli
(bad)
outs
fnstenv
outs
mov
or
iret
pop
mov
das
in
push
movs
loopne
lods
dec
xchg
dec
xchg
mov
cmp
cs
test
arpl
pop
scas
xchg
sahf
iret
dec
mov
out
in
push
lea
ss
dec
mov
call
loopne
rol
das
cli
dec
cmps
lea
aam
movs
dec
mov
push
mov
sahf
inc
mov
int
cmp
(bad)
pop
(bad)
add
and
xor
cmp
or
xor
sahf
mov
fs
es
loopne
sbb
xlat
sub
leave
pop
adc
pop
fimul
fisubr
cmp
dec
stc
dec
mov
or
icebp
sub
push
fnstcw
push
sub
adc
repnz
cmp
sub
fnstsw
repnz
int3
xor
xor
inc
mov
jbe
icebp
push
mov
dec
mov
popf
inc
xor
jmp
sub
and
aas
cli
or
mov
push
xchg
imul
in
jmp
test
scas
mov
ficomp
jg
call
mov
hlt
aas
rcr
loopne
jo
mov
mov
cmps
nop
jb
mov
addr16
lea
gs
pop
fsubr
ret
movs
js
and
sar
cli
ds
(bad)
xor
adc
cmp
push
sbb
rcr
jae
pusha
stc
daa
adc
std
sub
pop
mov
rol
adc
dec
mov
movs
fwait
mov
xchg
mov
xor
add
push
mov
inc
(bad)
inc
mov
out
enter
pop
(bad)
sub
out
movs
sar
cli
jb
add
push
mov
pop
loopne
ret
imul
shl
add
ret
xor
inc
(bad)
ds
mov
enter
shl
inc
pop
sti
pop
mov
mov
jmp
mov
xchg
jne
adc
xor
ja
cs
daa
(bad)
sub
inc
push
xor
(bad)
pop
fsubr
rol
or
aas
add
push
mov
or
leave
aas
in
ins
mov
sub
inc
cmps
xchg
lahf
cdq
xchg
jno
repz
mov
mov
call
xchg
xchg
je
xchg
shl
scas
cdq
sahf
xchg
xchg
xchg
imul
lods
mov
arpl
jecxz
xchg
jg
cmp
add
pop
adc
ds
dec
mov
(bad)
and
xor
push
cld
pop
sbb
fidiv
cmp
repz
xor
retf
cmp
aas
ret
icebp
cmp
call
sub
retf
jb
and
enter
xor
(bad)
fidivr
retf
pop
frstor
adc
cmp
push
shr
sbb
add
dec
mov
aad
cmps
push
adc
adc
sub
add
and
(bad)
cmp
mov
sub
repz
fild
push
loop
pop
xlat
xchg
lds
jnp
inc
xchg
outs
mov
aam
test
cli
inc
les
sbb
test
sub
or
dec
into
push
out
sub
jmp
leave
sub
daa
rol
xor
mov
arpl
cmp
cmp
retf
add
xor
leave
ss
outs
lods
outs
lea
xchg
mov
pusha
fmul
mov
push
outs
mov
or
ror
ins
xchg
es
daa
shr
or
jno
imul
push
div
cmp
adc
jmp
(bad)
cmp
sub
or
pop
mov
add
neg
jp
popa
fisubr
or
ins
(bad)
and
sbb
jle
xchg
scas
mov
add
jecxz
push
mov
fild
in
inc
iret
or
or
push
stc
and
sub
nop
(bad)
and
stc
jns
nop
(bad)
fidiv
jmp
mov
mov
pop
repz
clc
and
xor
inc
lods
mov
xlat
inc
neg
push
mov
sub
pop
jecxz
nop
bound
test
inc
mov
imul
and
pop
mov
shl
loopne
adc
inc
movs
pusha
mov
mov
xchg
ins
xchg
cmp
dec
stos
mov
fcom
sub
cmp
and
sar
xor
cli
inc
mov
scas
addr16
ins
cmp
fisttp
dec
xchg
ins
scas
outs
test
lds
jmp
xor
cwde
nop
lea
cdq
pusha
mov
int
dec
xchg
imul
jb
fwait
gs
popa
cmp
xor
push
sbb
cmp
dec
mov
xor
clc
aaa
in
or
or
cmp
pop
fnstenv
aas
shl
xor
pop
(bad)
push
mov
shl
lahf
inc
movs
imul
loope
(bad)
cmp
dec
scas
ja
fwait
(bad)
jne
and
or
dec
retf
dec
into
add
xor
sub
fs
pop
mov
inc
test
dec
mov
add
pop
(bad)
sti
pop
les
loopne
fimul
cmc
and
nop
inc
mov
jo
sub
cs
sub
stos
inc
test
das
push
push
cmc
xor
xlat
and
pop
test
xor
jl
movs
xchg
jle
xor
inc
mov
movs
je
pop
mov
cmp
xchg
jo
jge
dec
mov
sub
maskmovq
idiv
push
test
jbe
add
cdq
mov
mov
(bad)
cs
dec
fnstsw
out
popa
movs
jbe
test
xchg
ret
dec
retf
add
pop
fidivr
inc
mov
(bad)
or
and
bswap
pop
xchg
xlat
pop
(bad)
cmp
xor
aas
psubd
inc
mov
clc
push
cmps
jg
aas
shl
and
scas
inc
sar
add
loope
retf
aas
sbb
and
ds
or
sub
sbb
aaa
pop
mov
adc
push
mov
aam
imul
dec
mov
mov
jg
xor
cwde
dec
mov
call
sbb
push
fmul
mov
jmp
lock
cmps
mov
stos
mov
ja
jp
mov
mov
call
pop
xchg
les
lds
ss
retf
xor
pop
rol
les
fbld
cli
xchg
mov
mov
push
pop
out
jl
dec
aad
xlat
dec
clc
pop
sti
inc
mov
mov
jns
xor
or
jmp
out
and
or
das
int3
xor
pop
mov
imul
ret
pop
sub
push
mov
arpl
pop
mov
ja
xor
adc
in
das
shl
sub
mov
xor
dec
lods
mov
jae
and
cmp
pop
xor
out
shl
sbb
icebp
and
adc
in
out
xchg
in
jns
jp
inc
jmp
fist
popa
les
stos
mov
sub
push
mov
mov
mov
xchg
dec
aam
xor
mov
adc
in
(bad)
sub
inc
mov
shl
iret
pop
int3
xor
test
sub
sbb
xor
in
outs
mov
adc
inc
aam
neg
jne
popf
inc
retf
dec
aad
mov
or
mov
add
xor
ret
xchg
sub
xor
cmp
ret
sbb
test
push
(bad)
ins
xchg
jns
pushf
call
movs
lea
lea
lea
add
cld
sub
sbb
cmp
adc
sub
sti
push
jle
arpl
xor
cmp
sub
push
lods
mov
pop
mov
xor
or
aas
sti
add
retf
cmp
mov
sbb
dec
aad
fild
prefetch
xor
dec
mov
ret
push
xor
and
cli
pop
mov
(bad)
or
in
retf
sub
lahf
xlat
or
jae
xor
xor
ret
and
(bad)
call
or
add
and
pop
sub
js
ret
push
test
xchg
xchg
jp
xchg
jne
pop
add
in
sub
add
and
push
test
out
adc
pop
rol
das
loopne
mov
add
dec
lods
jno
mov
xchg
jle
icebp
push
scas
jo
ud0
add
sub
xchg
js
jae
pop
mov
mov
xchg
pusha
mov
pop
mov
lods
lea
mov
adc
mov
aam
ret
xor
sub
sub
icebp
and
arpl
pop
fadd
ret
dec
test
dec
fbld
jne
xchg
dec
test
mov
test
cmp
push
lea
or
cs
or
sti
dec
mov
xchg
jl
leave
and
cmp
aam
cmc
cmp
outs
fisub
fst
add
lea
add
cld
pop
xlat
mov
inc
cmps
xchg
lea
inc
mov
imul
and
and
cld
or
pop
rcr
dec
mov
fs
jno
mov
mov
jnp
jbe
or
(bad)
cmp
dec
mov
fistp
jg
mov
sbb
int
pop
shl
call
jae
jecxz
adc
das
sbb
pop
shl
xor
les
cmp
adc
adc
not
sub
pop
aam
ret
pop
mov
outs
aaa
das
sbb
in
cmp
cmp
inc
fstp
(bad)
iret
cs
aam
or
pop
mov
jnp
dec
sbb
cmp
pop
in
and
lock
shl
pop
mov
outs
test
fsubr
rol
nop
imul
jns
ja
xor
es
dec
mov
jl
jl
inc
mov
shl
xor
pop
mov
fs
or
sub
add
jmp
mov
adc
call
mov
add
out
push
aam
cmc
push
les
push
sbb
jae
je
and
mov
ins
std
and
push
lds
inc
cmc
sub
adc
jbe
inc
test
clc
add
not
inc
mov
and
enter
and
and
sbb
pop
call
jo
push
scas
jle
in
scas
js
push
mov
jp
stos
inc
mov
xchg
bound
xchg
aad
mov
pop
(bad)
cmc
pop
stos
pushf
ins
into
dec
mov
xchg
mov
add
cli
or
xor
out
sbb
push
(bad)
ds
and
rcl
mov
mov
cmp
xchg
je
cmp
add
pop
rcl
xchg
dec
mov
jnp
sti
and
or
inc
scas
js
sub
jle
jo
or
push
mov
push
cmps
xchg
retf
nop
jnp
cmp
and
pop
nop
mov
jge
cwde
dec
(bad)
adc
sub
add
cmc
and
fistp
adc
push
aam
mov
xchg
xchg
je
adc
aas
out
in
das
les
loop
mov
mov
and
dec
mov
xchg
rcr
inc
test
scas
imul
das
sar
fistp
lock
sbb
xor
retf
dec
scas
xchg
dec
movs
in
pop
stos
fwait
push
pop
adc
pop
sar
jp
push
mov
movs
ins
int
mov
jmp
arpl
add
xor
push
adc
add
pop
int
mov
frstor
and
dec
mov
sub
sub
or
sub
ins
test
mov
xchg
inc
fidiv
pop
jmp
lds
or
call
fcom
inc
retf
sub
dec
or
std
cmp
sub
std
or
and
push
stos
dec
(bad)
inc
es
dec
mov
fld
test
pusha
fcomp
dec
nop
js
js
in
pop
xchg
xchg
jns
and
ds
xor
inc
mov
(bad)
push
push
cmc
jg
into
pop
rol
add
sub
ret
jns
popa
fsub
(bad)
ss
scas
xchg
jnp
dec
mov
call
sbb
adc
loopne
fimul
outs
stos
clc
inc
mov
(bad)
cmp
sar
repz
mov
sahf
pushf
xchg
ins
mov
pop
loop
aad
out
xchg
je
xor
out
adc
push
mov
std
jbe
popf
sahf
xchg
jo
push
repnz
add
pop
sbb
xor
xor
mov
pop
frstor
push
sbb
push
test
repz
ror
jp
xor
inc
mov
mov
xor
pop
retf
sub
pop
sub
dec
mov
in
sub
sbb
and
pop
ret
inc
fdiv
jecxz
xchg
dec
mov
push
mov
add
and
dec
fiadd
jns
jo
popf
ins
fcom
maskmovq
test
and
pop
mov
push
in
mov
dec
into
push
hlt
push
mov
iret
add
scas
or
pop
into
cmp
daa
loope
adc
repnz
and
pop
mov
lea
xchg
lahf
xchg
jne
xchg
(bad)
cmp
daa
rcl
gs
mov
mov
stos
pushf
cwde
call
inc
or
das
sbb
inc
test
lock
xor
inc
fmul
sbb
les
fwait
inc
add
in
add
(bad)
jmp
push
outs
mov
and
pop
shl
add
cs
push
in
or
and
and
or
dec
mov
push
push
lods
jl
and
sbb
add
push
fisubr
(bad)
jp
aaa
sbb
clc
ss
es
cmps
imul
in
dec
movs
imul
test
sub
scas
push
or
xor
jmp
test
stos
leave
jge
add
paddsw
cli
and
push
sti
pop
fbstp
sub
push
shl
pop
aad
stc
mov
xchg
xchg
dec
sti
inc
mov
mov
or
cmp
dec
add
jmp
mov
mov
xchg
xchg
push
jmp
fs
ss
adc
rcr
repz
pop
bnd
cmp
xor
fst
jge
adc
sub
add
adc
inc
(bad)
push
repz
push
retf
inc
div
and
pop
cld
push
movs
mov
jb
xchg
mov
push
lods
fwait
ret
push
test
ror
inc
div
mov
add
inc
push
sbb
sub
hlt
and
jnp
ds
add
cmp
sub
xchg
jnp
jno
adc
add
or
cmp
xor
scas
pushf
dec
into
xor
sbb
rol
cs
test
icebp
sub
ret
sub
add
sbb
xor
push
in
cmp
mov
inc
into
sub
cmc
adc
sbb
out
test
mov
inc
movs
xchg
outs
mov
dec
into
add
push
mov
xchg
push
jbe
gs
sbb
push
xor
loopne
(bad)
jbe
jle
push
std
and
xor
inc
aam
jecxz
aam
and
and
ret
(bad)
jmp
scas
(bad)
mov
repnz
sub
push
add
mov
cmps
jmp
ror
lods
in
mov
sbb
push
or
iret
outs
ror
dec
sub
hlt
dec
adc
dec
mov
inc
sub
pop
push
pop
dec
adc
push
sti
inc
cmp
inc
cmp
or
mov
xchg
mov
jg
loope
dec
sbb
and
aas
test
xchg
jnp
pop
je
(bad)
cmp
jl
jle
mov
lods
imul
sahf
cmovle
push
dec
sbb
jmp
imul
inc
jmp
mov
xchg
dec
in
div
mov
xchg
in
fs
inc
push
addr16
pop
sub
cmp
dec
in
jae
dec
in
inc
sbb
lds
dec
neg
jae
dec
jmp
aad
add
hlt
mov
sub
push
jl
je
sub
lock
int3
inc
loop
fbld
pop
in
mul
cmps
jmp
sbb
jmp
push
push
or
or
sbb
out
into
nop
lods
mov
pop
loopne
loopne
int
mov
mov
mov
push
mov
popa
xor
mov
fsub
pop
out
leave
popf
shl
leave
ds
loop
retf
xor
iret
imul
ja
dec
or
add
xchg
into
stos
ret
cli
xor
xor
jle
ins
mov
mov
pop
sbb
mov
fisub
test
pushf
fldcw
movs
jo
pop
loope
pop
adc
sbb
sbb
je
ret
mov
das
jl
sbb
jmp
mov
xchg
rcl
sub
adc
pop
addr16
mov
mov
rep
jmp
call
popf
jae
jb
jp
inc
aas
cmp
fstp
je
pop
mov
xchg
ret
mov
ja
dec
cwde
les
or
imul
ja
clc
xor
lods
jmp
jne
imul
(bad)
mov
mov
test
mov
or
fmul
test
nop
xchg
mov
ret
pushf
inc
sub
dec
add
call
mov
mov
into
cmp
adc
sbb
fwait
cmc
mov
(bad)
xchg
fisubr
dec
sub
xlat
add
jnp
inc
mov
mov
mov
and
dec
aas
inc
mov
mov
xchg
jecxz
pause
dec
in
pusha
sub
popa
push
pop
out
add
pop
iret
stos
fimul
outs
xor
pusha
cmp
and
push
ret
mov
inc
aaa
inc
jmp
mov
inc
xor
stos
jecxz
stos
les
lahf
mov
jle
pop
out
jecxz
sbb
jecxz
(bad)
xchg
out
scas
mov
dec
clc
stos
ficom
call
cmp
aam
inc
xor
sub
dec
sbb
scas
rcr
mov
push
push
ss
push
dec
and
mov
jo
push
add
shl
adc
push
adc
push
std
mov
cmc
lea
gs
mov
push
fiadd
add
dec
sbb
dec
mov
cmc
mov
sub
jle
dec
sete
mov
gs
call
fwait
ret
xchg
loopne
leave
pop
test
sbb
inc
xor
cmp
ja
push
adc
ja
dec
loopne
(bad)
lea
xor
mov
nop
movs
int
daa
jne
addr16
pop
sub
mov
movs
jmp
and
push
inc
or
push
add
icebp
movs
loop
mov
popa
cmp
iret
mov
xchg
mov
push
loopne
retf
aas
repnz
mov
int
ret
push
add
ret
lea
push
pop
push
add
or
les
add
outs
ret
cwde
dec
in
pusha
sub
rcl
inc
add
mov
adc
outs
ror
push
loop
ficomp
cmp
(bad)
mov
or
inc
or
xor
or
jl
sub
data16
xchg
lds
dec
ret
mov
pusha
sbb
adc
ds
lea
and
(bad)
mov
inc
sbb
mov
pushf
xlat
mov
cli
sub
retf
jle
xor
push
pop
dec
stc
pop
xor
das
imul
aaa
data16
push
sub
ficomp
ins
or
cli
xor
mov
call
inc
pop
jno
and
prefetcht0
dec
sub
pop
adc
cmp
aad
leave
sahf
fistp
or
xor
mov
and
push
adc
popa
sti
add
sbb
push
adc
maxps
and
and
jbe
pop
add
xchg
shl
inc
jecxz
out
aaa
ss
push
and
jbe
dec
push
retf
inc
or
call
and
es
jns
xchg
ja
addr16
pop
das
dec
in
dec
push
add
xor
call
pop
sub
jo
movaps
push
adc
sub
inc
fcom
push
imul
enter
out
mov
pop
ins
sub
cmp
pop
inc
mov
sbb
pop
sbb
test
lods
push
das
pop
adc
push
jmp
pop
sbb
add
xor
mov
mov
cmp
mov
sbb
popa
and
add
jp
and
mov
pop
mov
scas
int
adc
int
fcom
mov
mov
cdq
sar
push
sbb
ret
retf
push
jle
push
in
(bad)
(bad)
mov
inc
xor
fs
xchg
pop
xchg
in
mov
retf
aam
(bad)
mov
shr
adc
popa
xor
inc
sub
sub
push
es
jo
inc
add
cmps
lock
(bad)
popf
in
cmp
pop
call
icebp
(bad)
mov
pop
add
add
dec
in
xchg
in
mov
xor
mov
test
push
shr
xchg
stos
mul
add
repz
std
xchg
imul
mov
(bad)
out
(bad)
mov
data16
xor
dec
or
push
lods
fcomp
jmp
(bad)
cdq
nop
into
sahf
cmc
addr16
add
add
mov
sbb
mov
clc
test
sbb
hlt
xchg
cdq
(bad)
push
sub
test
(bad)
or
outs
push
dec
int3
mov
pop
and
dec
sub
in
mov
push
and
imul
sub
jbe
sbb
xor
xchg
push
xchg
scas
mov
fisttp
aas
jg
push
dec
sub
sbb
ins
sub
mov
(bad)
dec
ins
add
test
sub
push
add
cld
test
mov
jb
(bad)
nop
xor
loop
jns
dec
or
adc
add
push
cld
scas
cmc
mov
jmp
push
push
pop
arpl
imul
cmp
cmp
hlt
mov
xchg
icebp
test
test
mov
ret
xor
imul
cmc
(bad)
mov
nop
sar
mov
cmp
pop
add
test
lahf
aad
cmp
and
and
in
stc
xchg
loop
mov
or
leave
push
pop
push
pop
adc
push
add
out
mov
cmp
sub
clc
adc
push
cmp
ins
fist
repnz
cmp
push
(bad)
lahf
lock
and
dec
retf
mov
pusha
rcl
jmp
and
pusha
stc
inc
pop
dec
aaa
mov
cwde
mov
mov
mov
xchg
retf
stos
jmp
xchg
stos
push
pop
sub
aaa
dec
adc
push
cmp
js
add
push
cmp
sbb
jg
jp
jns
imul
push
cmp
js
jp
push
or
icebp
mov
mov
test
pushf
ret
mov
les
push
or
ss
and
dec
pop
inc
pop
dec
xor
imul
xchg
loop
inc
lds
and
iret
adc
inc
and
mov
scas
sti
add
call
mov
xchg
mov
cmp
xchg
(bad)
mov
fsubr
xlat
mov
mov
cdq
sti
mov
gs
inc
cmp
scas
js
inc
xor
ins
xor
push
and
add
retf
sbb
retf
loope
jp
lock
std
jae
cmp
in
int
in
outs
dec
or
dec
sbb
leave
add
jno
loope
sub
loope
sbb
sub
mov
xor
push
and
and
idiv
jmp
add
jae
cmp
sbb
inc
add
out
jbe
and
sub
dec
cmp
ins
fild
jne
inc
lea
push
cmp
sbb
neg
dec
mov
call
(bad)
pop
outs
aas
jnp
and
mov
push
push
test
xchg
xchg
sbb
push
mov
mov
ja
pop
(bad)
mov
shl
adc
mov
or
mov
std
mov
pushf
neg
(bad)
xchg
fldenv
jmp
jns
dec
xor
mov
add
into
out
mov
lods
std
je
or
arpl
jne
fiadd
push
sub
add
inc
int
cmps
in
sar
fcomp
cmc
xchg
jmp
call
push
and
inc
push
jge
imul
push
pop
sbb
fidivr
jnp
sub
pop
xor
pop
or
pop
jne
push
add
add
retf
mov
sti
pop
dec
aas
jp
xlat
sbb
je
cmp
mov
cmp
imul
jns
xor
in
or
push
test
mov
popa
or
inc
mov
(bad)
mov
mov
aam
fld
not
inc
loope
mov
adc
sbb
lods
inc
sub
repnz
stos
(bad)
pusha
and
xor
es
aaa
dec
(bad)
call
das
push
adc
pop
sbb
mov
xor
fs
lods
je
inc
or
jge
and
pop
(bad)
jg
pop
aaa
out
xor
push
add
push
fcom
pop
push
ins
daa
daa
sub
jg
mov
sub
inc
cmp
cmp
xor
arpl
xchg
mov
stos
ret
mov
mov
mov
push
(bad)
cdq
fistp
test
outs
stc
mov
xor
call
fiadd
(bad)
xchg
stos
out
addr16
rol
or
pop
inc
push
sbb
pop
xor
dec
add
adc
push
lahf
aad
shl
xor
adc
mov
mov
mov
xor
push
pop
jl
or
jg
inc
cmp
std
jmp
and
xchg
shl
mov
xchg
xchg
mov
xchg
rcl
les
mov
xchg
retf
dec
xchg
cli
stos
test
lds
not
jle
out
test
mov
cmp
(bad)
xchg
scas
repnz
lahf
mov
add
je
ret
mov
cwde
ret
js
mov
lods
in
mov
or
leave
cmp
dec
aas
dec
repz
(bad)
xchg
xlat
mov
bound
out
jle
sub
bound
lock
cli
xchg
sti
cmp
sub
jne
cmps
icebp
mov
imul
repnz
xchg
jmp
clc
sbb
dec
sbb
nop
repnz
aam
ins
and
mov
xchg
retf
in
clc
xchg
inc
add
sbb
xor
ja
jno
jbe
jbe
loopne
call
xchg
in
ror
aam
jp
inc
adc
push
loope
mov
pop
or
add
(bad)
enter
jmp
repz
mov
iret
xchg
(bad)
push
aam
jmp
rcl
fdivr
loope
ja
push
or
popf
push
sbb
jns
sub
scas
stos
mov
outs
cmps
inc
cmp
inc
sbb
ret
jno
jge
cmp
jp
pop
dec
and
add
mov
je
movs
ficom
mov
aam
lds
pusha
loopne
fbstp
retf
mov
xchg
jle
adc
or
test
adc
jmp
jmp
pop
int
pop
ins
movs
rcl
mov
sbb
and
je
repnz
loopne
out
addr16
adc
ja
xor
fimul
cmp
xchg
and
jge
ja
cmp
ins
sbb
mov
pop
adc
inc
cmp
jl
pushf
sar
sbb
sub
cmps
jo
outs
adc
mov
int3
cmp
cmp
les
push
aad
out
sahf
fisttp
and
shr
pop
or
pop
jmp
cdq
or
mov
out
neg
in
arpl
inc
call
push
adc
or
jae
test
std
xchg
sub
popa
or
out
(bad)
mov
cmp
stos
cmc
pop
sub
test
outs
xor
cs
popa
pminsw
test
scas
mov
(bad)
xchg
stos
clc
xchg
sub
loope
push
pop
loopne
fwait
sub
inc
sbb
int3
loop
jmp
stos
fimul
std
mov
iret
movs
xchg
repz
push
mov
addr16
mov
sub
inc
xor
aam
mov
sub
and
dec
adc
and
inc
leave
cwde
rep
or
daa
inc
cmp
inc
rcl
mov
xchg
into
push
push
xor
sub
xchg
out
sar
sbb
sub
push
cmp
cmp
mov
mov
mov
dec
and
movs
aad
rcr
out
mov
cmp
pop
and
mov
in
mov
mov
sub
push
xchg
fst
(bad)
aas
dec
sbb
adc
jle
es
loope
mov
mov
ror
xchg
mov
popf
fst
mov
cmc
(bad)
mov
push
add
adc
jmp
mov
das
inc
in
test
pop
pop
mov
xchg
(bad)
mov
movs
int3
sub
out
imul
ss
pop
pop
adc
fisubr
adc
imul
outs
cmp
add
sub
les
sbb
adc
push
mov
inc
add
or
hlt
fs
icebp
cmps
popf
sbb
pop
jecxz
test
xlat
movs
ins
sub
les
outs
add
lahf
movs
mov
repnz
cmp
jmp
add
mov
fisubr
idiv
mov
pushf
int
(bad)
int3
movs
ror
fwait
lds
(bad)
mov
inc
push
mov
mov
cmps
fisttp
mov
lea
jo
mov
jo
inc
or
out
fdiv
call
inc
mov
and
inc
stc
mov
pop
adc
mov
push
jmp
mov
pusha
sub
xor
or
xchg
les
rol
push
pop
push
and
pop
push
push
loope
inc
push
in
(bad)
lock
(bad)
mov
push
es
mov
mov
jge
int
ja
push
fdivr
shl
push
out
xchg
into
sahf
cmc
popf
inc
push
ret
out
cdq
scas
mov
scas
iret
sahf
(bad)
ficomp
pop
loopne
or
gs
inc
push
dec
cmp
loope
jmp
mov
fsubr
mov
into
cmp
push
cmp
cmp
sub
jecxz
xchg
inc
push
rol
mov
mov
cmp
rcl
xor
cmp
mov
mov
ja
push
jmp
in
movs
popf
lds
repnz
push
and
mov
sub
loope
rcl
cmp
mov
xchg
les
xchg
xchg
jmp
fstp
fsubr
lods
imul
mov
dec
add
inc
xor
cmp
jae
inc
xchg
popa
and
loope
pop
jle
cs
hlt
mov
sbb
daa
dec
shl
pop
stos
out
mov
dec
cmp
dec
cmps
sti
lods
(bad)
mov
dec
cmp
push
lock
add
jge
mov
inc
xor
loop
das
push
pop
add
jns
inc
adc
dec
sbb
xor
jae
arpl
pusha
add
push
cli
push
pop
mov
sbb
test
mov
(bad)
call
in
pop
loop
mov
ss
dec
mov
or
xor
jne
add
(bad)
or
jb
sub
or
or
daa
push
or
pop
or
dec
in
push
cli
test
mov
(bad)
mov
push
mov
mov
ss
inc
adc
dec
cmp
cmp
xchg
ret
xchg
fst
cmp
xor
xlat
xor
cmp
mov
mov
cmp
pop
sbb
je
pop
mov
adc
mov
cwde
inc
mov
mov
xchg
jmp
jge
dec
pop
test
push
ds
jecxz
add
dec
inc
adc
adc
arpl
jmp
clc
pop
out
loopne
lds
out
push
aaa
dec
xchg
mov
ss
jae
jge
push
(bad)
pushf
sti
mov
ss
dec
xor
and
and
sahf
iret
xchg
fisub
push
sub
add
imul
mov
repz
jmp
rcr
jno
dec
mov
and
(bad)
mov
mov
lods
imul
fsubr
sti
xchg
ret
xor
movs
jmp
enter
push
mov
cli
mov
mov
into
mov
std
mov
movs
push
mov
mov
clc
mov
xchg
shl
cli
mov
jecxz
or
pop
fwait
iret
mov
or
or
sub
jo
ret
call
call
arpl
pop
call
aaa
pop
cs
ficomp
push
add
or
(bad)
leave
mov
sub
jge
lods
sti
mov
aas
inc
or
adc
adc
cmp
push
push
mov
inc
and
arpl
inc
cmp
cs
std
stos
movs
inc
fild
push
(bad)
sbb
stc
mov
ret
push
push
inc
adc
cmp
xor
mov
jle
pop
push
jge
dec
and
push
outs
cmp
dec
adc
pop
cmp
icebp
mov
mov
mov
adc
pop
nop
aad
shr
mov
or
cmps
inc
repz
fimul
or
pop
pop
das
js
cmp
sbb
cdq
leave
mov
sub
out
mov
mov
mov
test
mov
push
jge
jae
pop
or
cmp
test
or
loop
lock
in
mov
loop
icebp
xchg
and
(bad)
add
lock
or
jle
jb
mov
jne
pop
fwait
loope
cmc
dec
(bad)
cmps
scas
imul
outs
xor
repz
cmp
iret
add
xchg
cmps
aad
shl
adc
fisttp
adc
dec
(bad)
mov
lea
xchg
fist
cmps
int
jge
in
stos
clc
jne
sar
mul
cli
add
ja
sub
repnz
push
mov
ror
repz
cmp
xor
push
dec
push
dec
mov
mov
js
inc
xor
sbb
and
sub
mov
out
loopne
mov
pushf
shl
lods
movs
fld
test
test
outs
mov
cmp
(bad)
mov
xchg
jae
icebp
mov
mov
xor
and
daa
jo
push
pop
pop
dec
mov
cs
push
jne
xchg
test
jle
inc
push
imul
clc
xchg
rcl
xchg
rol
mov
xchg
hlt
mov
(bad)
mul
movs
aam
mov
sbb
mov
and
jp
jp
es
dec
pop
and
mov
mov
lock
test
arpl
and
xchg
mov
push
test
xchg
cli
pop
ja
xchg
xchg
cld
mov
jne
mov
pop
push
das
xchg
dec
lahf
lock
pop
push
mov
stos
mov
cld
and
mov
xor
ret
fcmovnu
lea
shr
lods
in
dec
xchg
in
add
push
shr
push
and
cs
test
test
into
(bad)
sbb
retf
pop
mov
call
xchg
stos
xor
test
push
(bad)
lods
adc
stos
mov
dec
mov
mov
sti
bnd
xchg
jl
sbb
dec
push
mov
popa
dec
shr
push
and
jmp
pop
(bad)
outs
out
fimul
std
adc
icebp
das
not
cmp
mov
or
jmp
xchg
dec
imul
pushf
(bad)
and
hlt
xchg
xchg
mov
pop
lods
into
popa
ja
test
mov
aad
mov
and
aad
inc
dec
push
cdq
(bad)
jns
xchg
lea
dec
mov
sub
lock
pop
(bad)
mov
jg
mov
sti
aad
push
mov
sbb
std
mov
pop
add
jne
xor
xor
cmc
xchg
push
dec
xor
ds
cld
or
pop
je
xor
xor
jnp
lods
cmc
stos
stc
loopne
popf
add
push
add
mov
dec
push
popa
and
inc
mov
xchg
fs
pusha
adc
mov
movs
jl
add
aas
mov
pop
nop
ss
inc
pushf
hlt
jmp
inc
or
xor
pop
cmp
(bad)
lds
lods
outs
ins
mov
fwait
mov
fs
je
movsx
lock
int
and
cmp
addr16
add
pop
mov
adc
mov
ret
fld
outs
mov
dec
loop
mov
xchg
psubq
cwde
in
mov
cwde
cmp
and
xchg
fwait
lahf
mov
sbb
in
icebp
aaa
mov
pushf
jnp
ret
ins
fst
and
aam
mov
mov
(bad)
jge
jl
movs
mov
(bad)
and
call
fstp
lds
xor
jbe
mov
xchg
aas
dec
cmp
int3
fdivr
ins
push
ins
push
cmp
stc
sub
dec
mov
mov
adc
loop
retf
ror
loope
fxch
pop
cmp
cmps
xor
pop
pop
push
add
mov
pop
int3
jae
fcomp
clc
or
pop
shl
cmp
ror
mov
mov
jae
ins
dec
pop
or
push
dec
add
aas
push
repnz
xor
xor
lods
cmps
pop
ds
aas
mov
dec
int
out
je
(bad)
rcl
sar
mov
cmps
xchg
addr16
out
mov
fcomp
lock
mov
mov
xchg
push
in
adc
push
movs
fisubr
inc
sub
mov
popf
mov
xor
mov
adc
fxtract
daa
and
fist
jae
inc
iret
cmp
and
int3
mov
in
adc
out
mov
es
cld
aad
mov
cmp
out
sbb
xor
push
mov
scas
aam
loope
fdivr
jecxz
cmp
(bad)
int
loopne
or
bound
jae
cmp
dec
ret
adc
mov
aas
das
shr
xor
data16
and
and
xor
loope
mov
inc
fsubp
es
ins
jne
or
or
repnz
out
xchg
jmp
cmc
pop
and
dec
inc
popa
mov
sbb
in
push
imul
(bad)
and
sahf
test
aam
jae
lock
repz
mov
sub
sar
inc
ins
pop
jne
xchg
inc
pop
scas
ficom
xchg
fsubr
int3
xchg
out
mov
push
mov
out
mov
push
push
scas
push
xor
test
rol
aam
mov
inc
daa
add
iret
das
and
sbb
mov
cmp
add
or
popa
xor
scas
outs
dec
retf
mov
scas
xor
sub
cs
add
sbb
xor
dec
push
and
push
and
outs
or
push
mov
stos
lock
ret
and
push
inc
push
stos
or
or
enter
movs
inc
xchg
int3
test
push
shr
movs
add
mov
pop
pushf
rcl
xchg
addr16
not
sbb
imul
das
int3
and
das
lods
mov
adc
jns
xchg
or
aad
sti
jl
xchg
iret
sbb
mov
daa
shl
pop
out
je
dec
or
mov
inc
inc
(bad)
mov
sbb
sbb
sbb
jno
push
push
je
test
pop
call
xchg
xchg
outs
xchg
mov
cdq
xlat
cli
and
aam
adc
scas
scas
sub
test
inc
jns
pop
pop
scas
xchg
jno
mov
pop
dec
push
xchg
retf
fsubr
or
fsub
and
shl
js
jno
into
fild
push
sahf
dec
or
push
fsub
dec
xchg
imul
jmp
arpl
lea
mov
add
arpl
int3
scas
test
xlat
(bad)
xchg
std
das
cld
inc
cld
sbb
mov
jno
shl
sub
mov
fisttp
int3
lea
cmp
adc
in
or
add
sar
dec
cmp
xchg
pop
aam
imul
pop
pop
jge
pushf
xor
xchg
and
jb
xchg
or
mov
dec
xchg
test
jne
mov
rol
mov
push
inc
mov
in
pop
jmp
lods
cmc
sbb
sub
sub
or
cmp
add
jmp
mov
(bad)
mov
pusha
sub
repz
std
cmp
cmp
jnp
mov
movs
popf
fimul
sub
jo
jp
pop
inc
jmp
shl
(bad)
lock
in
fnsave
lea
pusha
or
adc
je
repnz
xchg
repz
loopne
push
mov
mov
ins
pop
adc
lock
and
jne
inc
(bad)
aam
sbb
inc
or
push
or
adc
adc
pop
push
push
xchg
push
and
lock
xchg
mov
rol
mov
jmp
repnz
mov
sub
mov
jmp
add
(bad)
rcl
pop
and
nop
aaa
repz
test
enter
and
and
in
mov
scas
jmp
sbb
retf
and
jmp
push
jl
icebp
jne
dec
loopne
(bad)
shr
inc
movs
movs
add
push
popf
and
sbb
inc
scas
push
inc
popf
and
inc
jmp
pop
xchg
test
pusha
cs
dec
dec
sbb
xor
ret
(bad)
daa
push
jmp
sbb
xor
mov
pop
pop
mov
push
mov
out
dec
mov
push
dec
push
out
icebp
test
xor
push
push
shl
ret
pop
adc
rcr
cwde
sbb
xchg
pop
arpl
add
mov
xchg
inc
cli
inc
jo
mov
xor
loopne
push
sbb
ret
mov
xlat
bound
jle
jns
jmp
adc
xor
out
inc
call
dec
daa
mov
push
mov
out
adc
xor
mov
add
scas
or
out
cdq
adc
jmp
cmps
mov
jb
xor
es
movs
mov
sar
push
mov
push
test
(bad)
(bad)
ins
js
call
sub
enter
cmp
int
imul
or
push
xchg
xor
fnstcw
bound
or
cld
(bad)
xor
and
fstp
mov
or
es
mov
cmp
nop
stc
adc
repz
scas
loop
in
pop
jmp
int
lahf
jb
adc
xor
jno
bnd
push
fnstcw
push
test
and
mov
mov
xor
mov
test
cmp
fidivr
xor
pop
xor
pop
retf
imul
arpl
ret
xchg
in
popa
pop
mov
dec
scas
shl
jbe
adc
rcr
xchg
and
sub
sti
cmp
and
sub
inc
or
xchg
clc
popa
popw
shr
jne
das
cmps
fstp
pop
out
enter
movs
add
stos
sbb
cmp
push
push
ror
bound
imul
xchg
rcl
dec
jne
jno
cmp
test
aad
ret
sbb
addr16
outs
gs
cmp
data16
or
mov
dec
(bad)
fdivrp
xchg
cwde
mov
mov
sub
inc
mov
mov
pop
mov
dec
add
xchg
es
(bad)
sub
cwde
aas
sbb
ins
and
(bad)
or
jb
mov
out
jg
cmp
enter
jb
xor
adc
fimul
cmps
mov
pop
inc
in
sti
mov
aas
jg
mov
and
cmp
or
inc
and
dec
push
inc
in
xor
fistp
jecxz
dec
mov
mov
sbb
into
adc
outs
popa
cld
js
xchg
xchg
or
mov
mov
aaa
xchg
bound
rcr
sbb
lock
inc
add
xor
loopne
scas
mov
lods
dec
clc
and
iret
xor
out
mov
(bad)
out
call
adc
and
iret
mov
push
gs
xor
call
mov
(bad)
ret
mov
cli
mov
push
int3
in
jp
mov
repnz
mov
inc
(bad)
mov
inc
inc
icebp
pinsrw
xor
pop
int
pushf
jno
pop
icebp
test
mov
int3
mov
shl
xchg
fadd
sub
cmp
inc
pop
loope
jns
sub
push
jno
mov
lods
xchg
cmps
mov
shl
inc
call
push
iret
or
mov
or
rcl
arpl
xlat
hlt
cmp
mov
xchg
or
jo
fidiv
sbb
(bad)
cld
fs
fidiv
push
js
inc
mov
sbb
dec
jl
and
mov
inc
adc
in
jb
jb
(bad)
(bad)
js
or
jne
adc
sar
ret
cmp
cmps
adc
lds
mov
hlt
scas
sub
xchg
jl
out
loop
sub
enter
adc
stos
loope
mov
scas
enter
mov
mov
mov
fsubr
popa
lods
jns
icebp
sub
inc
cwde
mov
test
ins
jmp
out
mov
sti
in
in
xchg
push
push
dec
push
sub
out
pop
pop
cmp
jmp
imul
sub
ror
pusha
mov
pop
(bad)
dec
push
in
scas
sub
fldenv
ret
sbb
adc
sbb
repz
fimul
inc
sub
xor
nop
pop
jl
adc
es
(bad)
popf
xor
aam
pop
cmc
pop
cmp
jg
icebp
push
mov
pop
push
call
adc
shl
je
cmps
cmc
xchg
dec
sar
loopne
pop
das
xchg
cmp
arpl
sbb
data16
icebp
test
imul
jns
inc
cmps
push
scas
sbb
in
rol
mov
mov
mov
xchg
shl
ss
(bad)
loope
xchg
xor
push
pushf
imul
data16
fdecstp
jmp
or
cmp
xchg
sbb
int3
adc
arpl
adc
jecxz
push
scas
test
sahf
aas
push
gs
mov
ret
aas
and
out
rol
mov
cli
popa
push
scas
adc
arpl
call
add
mov
rcl
inc
cmps
pop
and
int
sub
(bad)
mov
dec
pop
ss
cmps
dec
addr16
push
sbb
mov
xchg
push
inc
mov
adc
out
leave
or
mov
pop
xlat
lods
push
rcr
call
adc
push
mov
(bad)
jnp
dec
hlt
ficomp
xchg
cwde
test
xchg
fcomp
mov
into
mov
sbb
fcom
add
mov
loope
xrelease
mov
or
sbb
xlat
and
ds
ins
add
and
outs
adc
cmps
cmp
or
dec
jbe
jle
push
push
outs
cli
(bad)
xchg
add
clc
sbb
test
xor
mov
xor
scas
inc
loop
xchg
push
sbb
ret
jns
adc
outs
jp
mov
cld
cmp
push
and
bound
adc
lock
xor
js
rcr
jle
cdq
or
loop
dec
adc
pop
enter
(bad)
cmc
and
sub
mov
inc
jmp
push
in
lock
jne
sbb
stos
jmp
push
xor
or
pusha
aam
dec
xchg
push
mov
mov
test
add
fsubr
push
jbe
and
push
mov
mov
aaa
lahf
jle
repnz
pop
cld
pop
inc
(bad)
hlt
movs
xchg
xor
jle
ror
into
push
dec
jae
int
push
fsub
aad
mov
jno
stos
mov
(bad)
adc
adc
jp
cmp
mov
jnp
push
mov
fs
repnz
jae
dec
cmp
sar
pop
xor
popf
sti
xor
xor
ror
and
jb
ja
out
popa
or
xchg
jp
mov
dec
shl
cmps
dec
lock
hlt
aad
aaa
sti
dec
push
and
push
cmps
mov
push
cmp
cmp
in
or
jns
push
push
add
stos
sub
jo
arpl
mov
(bad)
repnz
add
xor
(bad)
fimul
mov
inc
cmp
sbb
cmps
push
fcom
xor
fadd
les
out
dec
xor
push
test
or
shr
cmps
std
cld
and
push
mov
pop
pushf
cmp
std
add
pop
xchg
cmps
test
push
adc
mov
adc
push
clc
pop
sub
mov
and
and
pusha
xchg
(bad)
pop
cmp
cmp
cmc
ja
cmp
lods
int3
push
into
loop
icebp
xchg
push
xor
push
inc
outs
xor
jmp
mov
cmp
int
imul
sub
or
ins
mov
and
test
pop
cmp
inc
or
dec
dec
call
dec
clc
or
mov
pop
(bad)
retf
je
mov
sbb
pop
and
xor
icebp
hlt
cmp
in
inc
mov
mov
sub
aas
sahf
xchg
xchg
cmp
ins
test
(bad)
mov
daa
test
loopne
inc
ficom
call
mov
retf
rol
nop
ds
lahf
pop
adc
xchg
jnp
push
dec
push
jg
sbb
leave
sub
test
xchg
lods
jae
xchg
adc
nop
mov
add
ficomp
or
or
inc
inc
lock
mov
ffreep
mov
sbb
adc
je
cmps
outs
je
push
call
leave
mov
sbb
pop
dec
(bad)
pop
outs
adc
addr16
sti
ds
mov
(bad)
div
pop
out
xchg
aaa
push
mul
sbb
xor
cld
(bad)
mov
into
ds
mov
and
mov
je
mov
mov
cmps
call
add
xchg
adc
jl
movs
mov
jne
mov
pop
inc
pop
nop
cmps
jl
in
lea
mov
pop
xchg
cmc
frstor
inc
xchg
push
in
cmp
ins
xor
jb
pop
jge
add
outs
scas
jae
xlat
mov
push
push
sbb
pop
inc
movs
in
test
pop
cmp
dec
pop
cmp
push
ins
adc
sub
(bad)
rcr
jmp
jnp
sahf
xchg
imul
and
push
out
aas
inc
dec
stos
inc
cld
retf
add
addr16
fisttp
sahf
cmp
mov
sbb
adc
iret
mov
nop
stc
add
inc
mov
push
mov
test
and
jns
out
mov
sub
retf
push
adc
mov
(bad)
aam
loope
mov
mov
push
mov
mov
and
js
rol
sar
xchg
in
and
jae
sub
repnz
mov
and
imul
cmc
loopne
or
cmp
nop
retf
mov
inc
movs
xor
cld
cdq
in
mov
and
mov
inc
out
sub
jns
pop
pop
mov
mov
stc
daa
jmp
pusha
push
test
sbb
cmp
or
cmp
fisub
or
and
sahf
mov
jp
xor
cmp
pop
mov
ror
and
pop
pusha
scas
and
push
pop
les
dec
test
push
sub
jge
sbb
mov
mov
mov
mov
sub
jb
push
(bad)
sub
jge
mov
test
dec
jnp
pop
sub
dec
rol
hlt
push
add
mov
mov
inc
mov
data16
adc
fldcw
stos
push
lds
not
(bad)
scas
movs
cmp
fisub
xchg
and
sbb
movs
clc
fstp
(bad)
or
mov
xor
fcom
sbb
rcl
sbb
pop
ins
ja
adc
repz
xchg
std
add
popf
int
jle
(bad)
cmp
jb
sar
mov
(bad)
jl
outs
cmps
rcr
icebp
(bad)
shr
gs
cs
adc
cmps
inc
sar
in
and
int3
mov
cdq
stc
std
data16
daa
adc
xor
push
add
mov
les
sub
cli
mov
dec
call
pop
call
push
or
or
in
inc
mov
clts
sub
push
jg
test
dec
mov
dec
stos
lahf
aas
adc
add
or
adc
push
sub
jl
or
cmp
cwde
(bad)
(bad)
out
inc
lods
scas
mov
nop
sar
jnp
fwait
dec
pop
xor
mov
or
into
xchg
mov
xchg
push
(bad)
pop
scas
xchg
adc
gs
mov
mov
jmp
inc
fild
scas
mov
stc
jge
gs
in
dec
daa
repz
aam
dec
pop
shl
div
or
call
imul
xchg
xor
scas
xchg
jmp
pop
adc
push
rol
test
cmps
imul
popa
sub
pop
retf
jge
lahf
popf
adc
in
add
cmps
imul
and
(bad)
call
mov
sub
xor
add
arpl
push
pop
pop
mov
adc
adc
pop
loope
jo
pop
daa
pushf
cwde
mov
sbb
movs
sub
test
es
ins
add
aas
dec
mov
dec
mov
mov
jmp
enter
int
or
push
iret
adc
outs
pop
pop
ins
mov
sahf
cmps
ss
sbb
dec
scas
push
cwde
imul
or
lods
add
call
cmc
push
add
jnp
jo
mov
sub
jle
clc
pop
outs
push
mov
popa
addr16
call
(bad)
movs
cli
out
dec
shl
xor
(bad)
ror
inc
cmp
sbb
test
mov
adc
cmp
rcr
movs
inc
xor
ins
mov
stc
mov
in
(bad)
(bad)
jecxz
jo
push
adc
aad
pop
stc
outs
push
inc
jo
xlat
rol
lahf
in
dec
jbe
cdq
loopne
xor
cmps
mov
lahf
loope
sbb
mov
aam
mov
hlt
add
and
or
pop
daa
scas
inc
or
out
or
inc
aaa
in
add
test
ja
mov
movs
call
cmp
les
(bad)
add
outs
mov
inc
cwde
pop
fs
sti
mov
pop
mov
pop
test
fcmove
cli
sub
out
xor
adc
xchg
mov
dec
sbb
add
xchg
push
add
jecxz
stc
pushf
int
out
mov
jnp
rol
push
add
xchg
aad
std
cmp
cmps
sti
bound
out
(bad)
popa
ror
popa
cmp
popf
les
cmp
xchg
sbb
push
push
cmp
pop
adc
pop
jecxz
xor
cmp
lods
ja
mov
mov
popa
imul
add
inc
adc
sbb
push
aaa
hlt
push
mov
(bad)
rcl
pusha
add
mov
sbb
jbe
inc
adc
inc
cmp
push
and
push
icebp
mov
inc
mov
inc
mov
ror
ja
jge
std
mov
push
int3
icebp
test
pushf
(bad)
stos
popf
out
test
cmps
jle
loopne
dec
repz
add
das
dec
or
std
mov
ret
jb
pusha
cs
xchg
retf
sahf
add
out
pop
lock
jno
adc
rcl
dec
retf
mov
ins
or
or
pop
lock
not
xor
jl
inc
sbb
dec
ins
sub
adc
pop
into
(bad)
cdq
into
mov
fimul
inc
sub
push
sbb
cli
inc
sbb
bnd
cmp
xchg
aam
cld
xchg
jb
jo
xor
aas
push
mov
push
push
mov
sbb
mov
stc
mov
mov
loop
fistp
cmp
and
mov
fisttp
sub
mov
dec
jmp
or
xchg
pop
or
mov
fstp
icebp
cdq
cli
mov
daa
jg
jno
dec
cs
push
pop
push
inc
mov
pop
fadd
movs
ret
cwde
xlat
lods
call
mov
ficom
push
fwait
int3
sub
pop
lds
scas
mov
jp
outs
pop
pop
das
and
dec
jecxz
cmc
mov
nop
mov
mov
or
pop
and
sub
xor
std
test
mov
movs
xlat
lea
fcom
aaa
cmps
ret
jnp
imul
pop
cmp
aam
movs
mov
or
popa
and
into
cdq
fild
xchg
stos
fisttp
ins
sbb
and
sub
xchg
shl
movs
aad
ins
and
lods
shl
(bad)
cmc
mov
out
hlt
fwait
mov
ds
dec
ret
xchg
stos
(bad)
adc
addr16
daa
push
add
inc
sbb
mov
sub
jmp
out
into
sub
sub
mov
mov
out
push
out
add
mov
rol
test
nop
int3
sbb
xor
sbb
cs
pop
add
inc
das
rcl
paddusw
cmp
sub
mov
out
and
jne
jno
push
cvtps2pd
loope
jle
sbb
sti
mov
jle
jnp
pushf
fstp
stos
out
sub
sbb
push
add
mov
ret
sti
test
movs
std
mov
jle
idiv
(bad)
xchg
mov
jg
add
adc
adc
add
push
adc
adc
add
ins
ss
inc
push
sub
or
pushf
enter
jl
push
dec
push
pop
sbb
xor
jmp
adc
push
push
push
dec
loop
hlt
stos
aam
xchg
fdiv
arpl
pop
sub
imul
movs
jmp
pop
mov
inc
into
or
iret
push
add
push
push
push
call
outs
movs
int3
mov
ror
inc
test
mov
mov
pop
pop
add
dec
(bad)
mov
mov
call
aas
and
(bad)
ret
call
xchg
movs
fidivr
cli
mov
push
push
adc
push
push
dec
std
(bad)
aad
inc
or
(bad)
mov
jbe
add
rol
daa
dec
loope
(bad)
mov
jne
push
adc
scas
sub
ret
and
scas
fwait
inc
aas
gs
xor
repnz
ins
icebp
and
jo
outs
cmps
out
xchg
iret
mov
mov
xchg
fucomp
mov
aas
jnp
je
inc
cmp
inc
add
and
push
sub
inc
sub
daa
jg
ins
sub
js
pop
pop
inc
adc
outs
call
xor
sub
dec
(bad)
pop
hlt
mov
cmps
nop
fnstcw
fisttp
push
or
pop
sbb
scas
idiv
adc
out
into
cdq
mov
ds
add
pop
aaa
pop
add
pop
(bad)
jmp
mov
pop
jnp
in
test
xchg
retf
nop
xlat
arpl
iret
test
sti
(bad)
les
pop
cmc
movs
aad
ret
xchg
clc
mov
xchg
push
scas
mov
fcomp
add
adc
fs
adc
push
or
jno
ja
or
xchg
xchg
out
cwde
rcr
mov
test
mov
xor
into
cmps
jne
push
sbb
and
pop
and
inc
into
sub
push
stos
cmc
cmps
xlat
pusha
sub
mov
inc
xchg
pop
or
int3
mov
mov
les
and
jmp
fwait
out
cmps
cmps
jo
cld
stos
sahf
push
inc
dec
loopne
fisub
pop
adc
mov
mov
aaa
dec
sbb
(bad)
int
movs
mov
sub
add
cwde
out
leave
xchg
jae
fistp
bound
inc
test
fcomp
mov
out
mov
xchg
and
into
xchg
jne
inc
push
arpl
xor
xor
add
mov
clc
mov
stc
mov
cmps
loop
les
ror
adc
add
xlat
cdq
pusha
(bad)
sub
pop
adc
js
movs
call
xor
aas
xlat
add
jle
dec
adc
mov
nop
mov
mov
sti
dec
gs
inc
add
xlat
bound
dec
cld
xchg
jno
xor
pop
call
retf
(bad)
int
jp
or
push
ss
adc
sub
pop
jmp
ret
push
sub
xor
cli
mov
shl
mov
jp
jge
arpl
push
(bad)
push
add
(bad)
fldenv
and
xor
adc
cmp
pop
int3
popa
and
jp
or
(bad)
xchg
int
jbe
add
in
or
in
adc
push
mov
data16
xor
bound
dec
ds
cmc
jge
dec
push
out
mov
push
mov
iret
cld
mov
mov
mov
and
out
jge
inc
cmp
or
inc
mov
cmc
fst
(bad)
jmp
adc
out
iret
inc
dec
sub
push
das
jo
mov
cdq
out
repz
fdiv
cdq
out
in
mov
sub
icebp
test
jo
fisttp
xchg
(bad)
mov
movs
fimul
add
fimul
and
dec
add
jbe
lods
cli
stos
(bad)
(bad)
cmc
mov
cwde
test
jnp
pop
push
(bad)
sub
or
add
or
jnp
jle
fimul
hlt
mov
sbb
mov
mov
icebp
add
fisub
retf
mov
mov
arpl
inc
pop
push
or
dec
jmp
mov
pop
inc
sub
sub
sub
jbe
mov
add
xchg
(bad)
xchg
les
add
add
pop
out
ins
xor
sar
cmove
mov
pushf
arpl
mov
lahf
hlt
mov
test
dec
mov
addr16
imul
stos
test
mov
mov
aaa
inc
adc
sahf
fsub
inc
aaa
adc
mov
xchg
retf
es
dec
loopne
xchg
or
dec
or
mov
mov
mov
gs
pop
pop
pop
ins
pop
test
fwait
inc
fistp
(bad)
mov
sub
inc
(bad)
cld
add
or
xor
fs
xchg
outs
(bad)
daa
push
sbb
les
push
sub
inc
out
pop
movs
ja
pop
in
test
repnz
add
mov
fisub
les
dec
andnps
cdq
ror
pop
aas
and
mov
out
mov
mov
sub
or
arpl
pop
push
(bad)
cmc
or
retf
aam
fnstenv
ret
push
or
mov
pusha
or
ins
cmp
jnp
sbb
ins
or
ja
popa
or
jmp
fs
add
mov
int
cmp
jp
jae
and
mov
(bad)
(bad)
fisttp
lods
mov
mov
pop
sbb
dec
icebp
cwde
mov
retf
xchg
mov
scas
ins
cmp
push
adc
fstp
inc
or
sub
and
push
cmovl
popa
cmp
pop
inc
and
push
adc
pop
adc
inc
pop
imul
hlt
pushf
leave
call
mov
aas
pop
xor
xchg
icebp
int3
mov
(bad)
(bad)
stos
aad
aam
dec
sbb
pop
push
push
cmc
xchg
cmp
jbe
push
adc
dec
and
jp
dec
div
cmp
leave
jne
mov
clc
xchg
leave
aam
out
in
jg
cmps
int
mov
adc
dec
jecxz
int3
outs
pop
pop
pop
pop
xor
mov
pop
or
sbb
cmp
push
dec
adc
sbb
dec
out
bound
outs
icebp
mov
call
xchg
out
aad
loopne
mov
xchg
mov
das
outs
adc
dec
cmp
lds
nop
clc
stos
ficom
add
mov
pop
inc
push
jp
ja
push
lds
(bad)
stc
xchg
mov
adc
ja
lods
stc
test
push
pop
pop
fcom
jbe
jl
inc
and
test
mov
xchg
test
fdivr
mov
cmps
out
mov
mov
dec
and
mov
mov
xor
cmps
(bad)
and
cmp
mov
push
loope
jecxz
inc
sub
cmp
push
sbb
gs
je
sub
xor
pop
sbb
push
jmp
(bad)
xor
push
and
std
stos
out
xchg
lods
dec
push
pop
cmp
adc
ins
or
fnstenv
sub
and
pushf
iret
xchg
js
sub
adc
xor
add
or
ins
neg
push
pop
pop
adc
call
sbb
or
ret
mov
mov
inc
fisubr
neg
mov
sbb
mov
popf
aam
pop
jecxz
fisttp
or
push
lods
call
pop
sbb
fadd
xor
call
rol
outs
cmp
out
lods
leave
(bad)
out
sub
push
mov
cmp
xchg
push
sbb
inc
sub
dec
adc
xchg
dec
adc
add
mov
repz
mov
aaa
sub
dec
sub
jbe
add
add
dec
mov
inc
sub
pop
fstp
les
rcl
push
jp
inc
rol
pop
push
and
mov
rol
xchg
inc
xor
sub
loop
jmp
push
sbb
ja
pusha
rol
fsubr
pusha
in
clc
xchg
std
push
push
pop
or
pop
push
push
loopne
(bad)
fwait
xor
shl
jns
push
icebp
add
sbb
retf
or
mov
xchg
jne
mov
pushf
iret
aaa
add
and
das
jo
inc
loop
(bad)
scas
scas
loop
ror
loopne
clc
data16
(bad)
add
adc
mov
sti
lock
jmp
xor
or
sbb
lds
ror
inc
add
and
sub
aaa
retf
fisttp
adc
mov
xchg
hlt
xchg
jo
and
or
sbb
inc
clc
into
stos
enter
adc
scas
aad
inc
out
pop
pop
jp
push
bswap
icebp
test
lods
aam
test
scas
stos
(bad)
mov
in
repz
jle
xor
gs
cmp
push
or
mov
xchg
into
jnp
in
mov
scas
iret
jne
add
std
mov
iret
mov
and
ret
stos
enter
iret
mov
out
adc
sbb
loop
(bad)
mov
jl
je
clc
inc
xor
dec
sbb
ret
xlat
or
hlt
inc
fimul
cmp
inc
sub
mov
pop
loop
dec
xor
inc
sbb
je
leave
bound
dec
or
outs
xor
cmp
jns
imul
pop
push
cmps
fcom
enter
int3
movs
rol
repz
je
sub
jo
dec
mov
push
cmp
test
mov
jge
lods
xchg
xchg
out
mov
aaa
test
pushf
sub
shl
lock
retf
aad
retf
pushf
fistp
push
pop
cmp
and
dec
out
cwde
rcr
push
sbb
enter
test
pop
(bad)
nop
je
sub
mov
pushf
scas
fcom
data16
push
add
xor
sbb
pop
xor
movs
lods
int
dec
sbb
pop
leave
lods
std
gs
int
adc
aad
jecxz
push
std
xchg
test
test
ret
call
add
ins
cld
scas
les
and
push
add
pop
jo
mov
mov
xor
clc
xchg
cli
arpl
inc
or
push
jecxz
and
ins
inc
or
jns
and
jb
inc
or
cmp
bound
jb
jge
bound
mov
xchg
idiv
sub
push
mov
retf
mov
imul
add
sbb
ins
sbb
cld
jno
ror
dec
cs
adc
icebp
pop
rcr
into
pusha
jle
int
cmp
sub
(bad)
sub
push
mov
mov
jecxz
imul
lds
push
sbb
inc
jecxz
mov
rcr
push
fst
cmc
mov
fsub
aaa
and
enter
mov
fs
cdq
rcl
popa
or
add
js
jmp
aaa
repnz
aaa
outs
push
sub
push
push
jno
jno
(bad)
fisubr
test
jnp
ds
push
ret
aas
push
pop
sbb
xchg
retf
mov
jl
push
test
clc
xchg
cmc
nop
stos
cld
and
fist
retf
das
adc
jae
out
rcr
xchg
loope
mov
ret
outs
or
add
lahf
dec
(bad)
call
(bad)
pop
mov
fdiv
ins
add
lock
jmp
pop
gs
dec
or
jns
loop
jg
push
push
ret
das
jg
and
cs
mov
pop
push
mov
mov
xor
xor
push
dec
or
inc
bound
dec
jmp
mov
cmps
inc
(bad)
sub
jge
and
es
pusha
sbb
movs
in
stc
xor
cli
stos
retf
stos
fistp
out
or
loopne
test
adc
inc
sbb
inc
sbb
push
call
cmp
ins
rcr
aaa
dec
les
mov
mov
cmc
mov
hlt
lods
leave
ja
jl
jne
push
sbb
pop
outs
or
out
mov
mov
rol
icebp
mov
adc
inc
and
inc
add
jns
dec
adc
xchg
enter
pop
push
push
jne
js
xchg
out
shl
sti
bound
dec
xor
ds
cmp
test
mov
stc
stos
(bad)
pusha
sub
cwde
mov
push
push
or
dec
push
dec
sub
aaa
ja
dec
mov
cmp
jo
jg
inc
sbb
inc
cmp
test
sbb
cli
aaa
inc
ds
inc
adc
outs
xchg
ins
xor
adc
hlt
and
popa
add
pop
retf
hlt
scas
cld
mov
adc
push
inc
fidiv
fmul
cld
mov
push
pop
fcomp
xor
addr16
push
retf
sbb
push
sbb
push
sbb
cmp
pop
repz
adc
and
push
std
xchg
shl
adc
jg
test
jmp
mov
scas
ret
mov
test
dec
adc
sti
adc
fbld
arpl
jnp
add
add
jg
(bad)
aas
push
push
inc
sbb
xor
dec
or
sbb
ins
ds
pop
sub
xor
pusha
or
inc
mov
cmp
mov
cmps
cld
mov
jnp
sti
scas
repz
mov
push
(bad)
mov
call
lods
inc
shl
mov
iret
cdq
cmps
(bad)
outs
pop
(bad)
ds
push
aam
fstp
jecxz
cmc
pop
test
mov
mov
retf
mov
ja
rcl
pop
sbb
push
out
scas
jmp
arpl
xor
daa
jbe
push
push
xlat
push
adc
xor
pop
xor
push
and
mov
pop
push
sti
adc
jg
inc
add
add
arpl
repnz
jl
jnp
inc
mov
inc
adc
loopne
pop
ret
mov
pop
movs
fmul
fmul
retf
inc
or
sbb
dec
mov
sbb
add
inc
add
mov
jecxz
test
dec
test
xor
cli
sub
dec
retf
scas
leave
daa
push
ret
fwait
rol
cmp
xchg
push
popa
and
xor
mov
xor
sub
dec
mov
ss
adc
mov
ret
push
int3
cmps
in
mov
mov
ret
test
push
or
pop
(bad)
out
call
xor
dec
sbb
(bad)
imul
mul
cmp
mov
mov
gs
rcl
jae
bound
ret
sub
jnp
jnp
jnp
imul
and
and
imul
rcl
pusha
aad
mov
out
shr
sbb
inc
dec
cld
fst
pop
and
ja
je
pop
mov
mov
bound
mov
movs
jecxz
xlat
test
(bad)
out
iret
xchg
inc
xlat
arpl
dec
ret
test
mov
xchg
rcl
fstp
pop
cmp
cdq
sub
sub
enter
aam
mov
push
adc
mov
sahf
inc
or
popf
aam
retf
xchg
push
aad
in
cdq
shr
jecxz
mov
mov
xor
xor
mov
cmps
inc
cmp
imul
lods
(bad)
xchg
test
xchg
pop
cs
adc
add
push
push
mov
mov
retf
das
inc
test
inc
pop
dec
les
jae
and
jbe
push
inc
xor
sub
and
mov
sar
push
rcr
inc
neg
xchg
sbb
push
xchg
jne
sub
aaa
dec
sbb
add
loope
inc
add
mov
mov
iret
xchg
xlat
gs
push
inc
or
div
ins
add
cmp
arpl
and
rol
ja
dec
bnd
pop
adc
jge
(bad)
push
xor
pop
les
outs
adc
pop
add
(bad)
popf
hlt
mov
ror
(bad)
out
(bad)
jnp
jmp
sbb
mov
inc
stos
mov
lods
(bad)
mov
add
les
cmp
rcl
in
into
stos
ret
stos
dec
jmp
stos
jno
jae
imul
test
push
loope
leave
cdq
leave
cmps
aam
retf
gs
loope
cld
mov
scas
ret
push
xchg
jmp
xlat
pushf
dec
cwde
call
lahf
in
sub
sub
push
cmp
xchg
xchg
aam
addr16
push
cli
daa
jecxz
call
mov
js
jg
daa
dec
adc
gs
bound
jl
mov
sbb
inc
pop
push
sbb
pop
sti
mov
imul
mov
sub
mov
sar
in
call
in
ins
adc
dec
inc
sub
cli
mov
mov
icebp
push
cmp
and
mov
mov
sub
dec
sbb
jecxz
int
lock
jno
mov
push
push
or
ins
repnz
add
adc
out
xchg
aad
in
stc
test
push
xchg
mov
mov
fwait
pusha
add
xchg
push
add
dec
mov
and
movs
arpl
adc
in
xor
adc
inc
cmps
loop
and
mov
xlat
pusha
adc
popa
test
aaa
adc
scas
ins
sub
jl
lods
lahf
fild
(bad)
xchg
movs
test
add
inc
mov
(bad)
gs
cdq
fstp
sub
adc
aaa
xor
repz
cmps
sahf
in
jge
imul
dec
mov
test
scas
pusha
and
data16
mov
cmp
dec
mov
arpl
sub
out
xchg
(bad)
jp
jecxz
bound
jae
cmps
arpl
test
loope
js
jmp
call
(bad)
xor
call
pop
mov
mov
retf
xor
jecxz
das
pop
ins
(bad)
test
mov
pop
pop
push
and
inc
push
in
test
movs
xchg
jmp
jg
stc
mov
push
bound
xlat
add
int
sub
mov
ret
nop
dec
pop
int3
test
xchg
test
xchg
sar
ins
out
int3
mov
jbe
xor
add
xchg
ja
clc
mov
lods
call
mov
cmc
pop
sub
js
xchg
inc
adc
lods
xchg
push
adc
xchg
jae
cmc
mov
adc
mov
jle
jmp
imul
pusha
mov
jmp
stos
ret
push
es
inc
mov
push
pop
mov
pop
sub
mov
aaa
adc
mov
jae
retf
mov
pop
in
mov
fistp
les
aaa
pop
fldcw
frstor
mov
sub
jmp
popa
and
call
and
or
mov
sub
mov
mov
das
push
jl
push
scas
(bad)
pop
sub
cmps
xchg
loope
sub
inc
in
ins
or
mov
into
dec
aas
dec
cmp
inc
scas
aam
imul
imul
in
(bad)
mov
mov
or
lahf
dec
ss
dec
and
push
out
les
scas
clc
pushf
stc
mov
mov
xor
lock
aad
jp
sahf
imul
xor
cmp
push
scas
(bad)
jo
int3
pop
jbe
push
fisub
xchg
out
clc
xchg
cdq
jecxz
enter
cmp
dec
or
inc
xor
cmp
stos
mov
movs
xchg
jecxz
lock
out
mov
jle
out
jb
push
push
test
push
pop
sbb
enter
fisttp
jb
xchg
punpckhdq
outs
hlt
mov
enter
mov
aam
add
dec
xor
sbb
fisub
push
add
inc
xrelease
dec
jmp
loope
inc
add
push
mov
fadd
cmp
push
and
loope
push
pop
outs
xor
or
ins
shr
sbb
adc
stos
shl
test
test
lahf
div
jne
addr16
je
pop
sti
lods
leave
lods
(bad)
movd
pop
mov
mov
adc
mov
dec
sub
pushf
jns
loope
je
cmc
mov
in
jne
sti
or
(bad)
adc
repz
push
icebp
xchg
jbe
leave
mov
mov
aam
mov
xlat
xor
jmp
inc
daa
out
data16
cmc
or
xlat
xchg
mov
jmp
pop
pmaxsw
loopne
jp
cld
lea
adc
xchg
push
icebp
daa
push
xchg
dec
pop
leave
lahf
jp
ret
retf
loope
mov
ja
jmp
pop
jmp
and
push
mov
add
outs
stos
fild
pop
xchg
jnp
cmp
(bad)
pop
mov
xor
lds
push
cld
stos
cdq
cld
pop
cs
lods
lods
fdiv
add
ins
add
jae
xor
mov
jg
dec
sub
pop
sbb
push
and
arpl
cmps
jae
repz
push
cli
mov
(bad)
fimul
pop
mov
push
lds
or
push
in
stos
fcomp
inc
(bad)
lods
leave
lahf
mov
ins
in
cmps
xlat
adc
or
mov
xor
lea
imul
das
jl
sbb
sbb
movs
cdq
lds
dec
or
jg
call
dec
out
fistp
add
mov
ret
ss
pinsrw
jns
inc
cmp
inc
mov
xchg
out
mov
or
in
lea
inc
add
ror
mov
dec
fwait
lods
cmc
mov
test
rcr
js
xchg
sti
mov
sub
jb
mov
xor
adc
dec
ss
push
in
xchg
fild
jbe
pop
add
sar
mov
jmp
fsub
and
std
add
dec
adc
jno
aam
xchg
outs
inc
xchg
mov
xchg
icebp
mov
out
mov
outs
(bad)
call
cmps
push
retf
int
jno
add
sub
adc
and
jmp
mov
inc
cmp
jle
aas
push
nop
cmp
push
cmp
dec
add
data16
push
adc
mov
adc
adc
and
push
inc
ret
sub
xor
mov
mov
pusha
xchg
sbb
inc
cmovg
js
push
or
pop
mov
outs
add
call
push
sub
sub
sbb
fadd
mov
fs
add
inc
in
rol
mov
test
inc
adc
dec
popa
pusha
add
inc
jmp
cmps
and
jg
pop
aaa
out
sub
cmps
cmp
out
pusha
xor
mov
mov
add
shl
mov
out
lea
pop
fcom
xchg
cmps
in
dec
pop
pop
repnz
sbb
pop
adc
out
into
mov
retf
mov
mov
push
and
outs
in
add
push
and
fcom
imul
ror
lds
adc
and
cmps
sub
dec
xor
cmp
pop
je
sub
in
test
pop
or
icebp
mov
es
jnp
add
push
bound
mov
push
add
pop
scas
adc
ins
adc
pop
or
or
inc
and
enter
loopne
movs
repnz
jns
and
push
cdq
ds
adc
jge
jnp
xchg
clc
aaa
gs
aas
and
aas
inc
xchg
lahf
(bad)
cdq
int3
pop
jle
inc
xor
(bad)
mov
mov
xor
in
sub
lock
icebp
lods
test
xchg
rol
fsub
es
fiadd
and
xor
xor
shl
aad
push
mov
dec
loope
jmp
std
mov
nop
xlat
cwde
aam
(bad)
std
call
jbe
and
hlt
mov
push
cmp
dec
nop
inc
aaa
push
lods
lahf
fsubp
scas
repz
xor
jnp
sbb
inc
add
icebp
stos
mov
or
lock
adc
sbb
push
xor
inc
lahf
cmps
iret
scas
rol
adc
xor
popa
adc
add
jns
imul
push
sbb
sti
gs
xor
push
cmovnp
outs
out
mov
sub
inc
xchg
mov
cmp
jmp
cmp
stc
lahf
mov
sub
inc
add
stos
hlt
mov
xchg
hlt
bound
into
in
test
jle
sahf
ficomp
rcl
inc
loop
lods
sti
ds
sbb
and
and
pop
add
mov
xchg
rcr
lock
cmp
inc
sub
add
sbb
cld
iret
jnp
sub
cwde
pop
cs
out
enter
cmc
jo
mov
xchg
fst
mov
in
jb
icebp
lds
push
movs
add
jmp
sbb
fstp
dec
call
push
dec
lock
aad
inc
add
jle
stc
mov
push
and
lock
mov
call
(bad)
push
and
sti
adc
inc
adc
inc
pop
push
cdq
imul
and
mov
addr16
add
icebp
popf
cld
scas
out
lods
stos
push
mov
and
and
aam
mov
jnp
push
adc
mov
sub
shr
jae
push
cmp
or
dec
cmp
movs
mov
fbstp
jle
(bad)
mov
pop
or
scas
stos
inc
loopne
fisttp
shr
sub
mov
push
(bad)
mov
dec
(bad)
mov
popf
mov
mov
fstp
jg
push
lods
icebp
mov
fld
and
mov
pop
cs
pop
scas
jo
mov
test
xor
int
pop
enter
shr
clc
mov
push
cmp
fld
paddb
sub
das
out
stos
mov
pop
ror
fdiv
pop
and
inc
in
es
sysexit
push
xchg
jl
stos
in
scas
ret
mov
mov
call
mov
jecxz
dec
jnp
inc
mov
ret
test
xor
and
mov
lock
out
add
and
sub
shr
mov
into
mov
lods
jp
icebp
cdq
pop
sbb
sbb
jae
mul
and
dec
addr16
ficom
int
jp
xchg
test
mov
int
inc
push
js
inc
add
xchg
rcl
xor
es
hlt
xchg
enter
data16
jl
xlat
push
loopne
sbb
xchg
retf
mov
fistp
push
sbb
adc
cmp
sub
dec
add
or
mov
xor
inc
or
shl
jb
int
sbb
pop
xor
je
sbb
sbb
sub
inc
sbb
pop
xchg
xchg
retf
add
pushf
mov
sbb
int3
sbb
(bad)
fist
mov
popf
jmp
inc
(bad)
mov
jmp
and
test
ins
or
pop
or
call
repz
sbb
inc
sbb
pop
retf
sub
enter
(bad)
xchg
ins
out
cmc
push
pop
sub
pusha
adc
hlt
(bad)
jl
mov
push
cmp
jo
ins
jmp
std
test
ins
xchg
or
cmc
sbb
fs
ja
push
push
inc
in
les
mov
fwait
out
(bad)
rcl
or
out
sbb
and
xor
or
and
adc
xchg
popa
pop
das
inc
pop
fist
jle
bound
dec
adc
fwait
aad
or
repz
or
pop
mov
xchg
mov
rol
xchg
lods
pop
lods
rcl
mov
test
inc
push
xor
push
sbb
xchg
movs
jge
mov
jmp
cmp
push
cmp
pop
inc
pop
out
test
clts
addr16
xchg
push
push
jnp
inc
or
popf
mov
xor
mov
xor
ins
cmp
mov
cmp
push
cmp
movs
pop
fstp
push
std
imul
dec
mov
lahf
ins
mov
popa
xor
pop
or
jecxz
mov
cmp
pop
cmp
xlat
mov
xchg
lds
lds
pushf
cmps
scas
ja
adc
mov
sbb
inc
pop
fldenv
dec
jecxz
shr
sbb
sar
sub
push
lods
xor
xchg
imul
xor
mov
jmp
mov
and
ret
lock
jbe
jbe
push
lahf
sub
add
dec
and
sbb
aaa
jp
rcl
dec
sub
add
loopne
call
inc
sub
sub
cdq
push
int3
(bad)
ficomp
mov
jmp
rcl
pushf
iret
mov
loopne
shr
push
inc
loope
scas
dec
(bad)
mov
adc
push
outs
or
mov
sbb
jae
xchg
ret
inc
sbb
ds
xchg
hlt
xchg
dec
data16
jbe
es
adc
(bad)
mov
outs
ds
jmp
fisttp
movs
mov
mov
jecxz
mov
jle
mov
cmp
in
mov
adc
or
cmp
inc
loopne
ret
sub
push
push
sbb
pop
xor
jle
pop
and
test
mov
xchg
inc
push
adc
xor
dec
loopne
test
xchg
mov
push
test
imul
mov
mov
rol
or
sub
inc
mov
loopne
jbe
jmp
out
xchg
inc
pusha
or
sbb
fcomp
shl
cwde
in
mov
nop
jne
and
sub
pop
mov
push
push
pop
push
xchg
mov
push
cs
add
bound
dec
or
ja
movq
sub
pop
push
daa
in
push
mov
leave
cdq
mov
sub
sbb
xchg
clc
aaa
movs
repnz
inc
loope
dec
mov
mov
test
mov
mov
pop
ja
sbb
nop
stos
push
leave
popf
stos
inc
inc
cmp
add
push
dec
push
and
imul
in
jo
stos
icebp
cdq
pop
fs
pop
sbb
jns
out
popf
fsub
shl
xlat
xor
cli
fdiv
mov
fstp
(bad)
test
mov
test
mov
xchg
mov
push
outs
add
dec
mov
out
sar
or
js
(bad)
lods
lds
pop
pop
xor
add
outs
add
dec
sub
push
and
pop
daa
inc
in
ret
jge
sbb
inc
call
aaa
dec
mov
jge
inc
sbb
mov
jnp
xor
(bad)
dec
or
xlat
mov
fcomp
sbb
and
pop
sub
scas
js
movs
lds
fcom
dec
aam
idiv
test
adc
stos
out
mov
cmp
addr16
xor
out
xlat
xor
adc
out
mov
sbb
loope
dec
test
scas
rol
jmp
std
lods
fnstcw
inc
ds
cmovp
sub
jle
jp
push
push
push
jle
dec
sub
ds
and
fwait
mov
cdq
fsubr
push
data16
pop
cmp
mov
test
adc
cmp
push
ss
pop
pop
xor
and
pop
cmp
lea
and
aad
sub
inc
or
daa
repz
pop
pop
popa
(bad)
sar
xor
mov
test
mov
aaa
jmp
div
xchg
fwait
cmps
stc
xchg
sti
scas
mov
cmp
jge
shl
mov
xor
jns
adc
mov
aaa
cs
in
sbb
out
mov
mov
lock
sbb
sub
fwait
aas
inc
or
push
dec
lahf
popf
not
add
xor
cmovae
fistp
jnp
pop
or
jge
cmps
lds
pop
loop
loopne
int
adc
lock
add
jae
(bad)
(bad)
(bad)
pop
popa
aas
outs
das
and
stos
jmp
cmps
fist
xor
addr16
cdq
pop
mov
or
dec
adc
inc
sub
ja
mov
popf
push
lods
leave
gs
std
addr16
jle
jp
leave
call
mov
mov
into
cmp
out
pop
jecxz
mov
fist
sub
fadd
imul
jns
push
dec
push
movs
inc
push
das
jge
add
cmp
loop
cmp
mov
int3
cs
cmp
add
dec
pop
test
sub
xchg
(bad)
sbb
lea
test
jae
je
inc
adc
mov
addr16
and
dec
add
mov
sahf
neg
retf
popf
xlat
scas
leave
loope
ins
or
push
jecxz
les
or
push
mov
pop
movs
ficomp
jne
ds
pop
sbb
inc
cmp
xor
xor
movs
int3
call
fmul
sbb
sbb
movs
out
fwait
pop
xor
push
sub
cs
mov
lahf
clc
cmp
pop
in
int3
mov
or
enter
rcr
mov
mov
jo
and
rcl
fmul
mov
dec
pop
jp
or
xor
mov
xchg
fdiv
dec
adc
ficomp
div
cmps
repz
test
dec
in
das
mov
fistp
adc
sbb
and
aaa
in
sahf
lods
and
cmp
shl
push
and
fisubr
ret
sbb
aas
jp
ret
stc
das
call
lods
(bad)
sahf
div
sar
inc
sbb
cs
ret
gs
inc
jmp
push
pusha
jecxz
mov
popa
adc
mov
pop
xlat
xchg
shl
pusha
add
fwait
or
fnstenv
stc
adc
jo
jo
mul
xchg
mov
dec
loope
shl
mov
or
mov
add
xchg
and
movs
imul
push
or
push
xor
add
(bad)
mov
inc
add
inc
in
mov
add
in
out
aam
test
shr
push
mov
push
pop
loopne
push
jbe
int3
(bad)
xchg
(bad)
adc
retf
mov
mov
cmp
adc
loop
jmp
and
jle
popf
imul
push
into
js
pop
sbb
and
sub
(bad)
call
mov
in
jne
jp
clc
popa
ss
mov
xor
xor
pop
test
loope
mov
mov
icebp
test
mov
sub
out
cmps
fadd
leave
mov
mov
mov
cmp
les
or
jl
jle
pop
sub
dec
push
icebp
loopne
dec
loop
mov
add
out
repz
xchg
mul
rcr
and
and
inc
sbb
leave
push
xor
popf
xchg
out
rcr
aas
jp
xor
inc
sbb
pop
xchg
sbb
adc
jb
push
push
ja
xor
loop
fsub
add
sbb
in
add
dec
in
fnsave
sub
daa
jg
sbb
arpl
push
in
popa
add
jne
fstp
les
jge
pop
or
xor
pop
xor
dec
sbb
push
dec
adc
movs
les
adc
cdq
int
(bad)
xchg
fnstsw
scas
std
xchg
hlt
mov
sub
pop
xlat
mov
addr16
adc
pop
xor
inc
or
gs
cdq
push
push
push
sbb
in
hlt
imul
out
cmp
sub
std
ficomp
ja
iret
xor
pop
loopne
int
(bad)
mov
out
(bad)
outs
lods
idiv
cli
or
arpl
popa
in
ret
mov
arpl
push
mov
cmp
jae
cmps
and
xor
ret
cmp
test
xchg
in
scas
std
cmp
bound
cmp
ins
in
fisttp
cmp
push
sbb
pushf
lock
mov
shr
imul
lods
daa
jle
dec
sbb
jmp
inc
or
std
mov
mov
in
jp
dec
push
repnz
dec
adc
mov
cs
dec
jecxz
les
and
jle
and
mov
call
inc
xor
push
int3
cmc
mov
test
xchg
rcl
and
xor
mov
xor
jae
push
jmp
mov
push
imul
xor
xor
sub
push
dec
sbb
fist
xor
test
or
aad
jmp
mov
jne
and
mov
(bad)
jmp
call
mov
popa
and
mov
idiv
or
std
push
outs
cs
and
jge
and
repnz
call
push
adc
mov
call
cmp
frstor
mov
push
adc
add
outs
adc
sbb
shr
push
es
cmp
retf
xchg
lods
fidiv
jmp
jp
inc
mov
xchg
mov
cmp
and
and
movs
arpl
xchg
vpacksswb
cmp
jns
jb
int
jecxz
shl
rcr
cmps
and
jle
aad
and
dec
and
inc
pusha
xor
retf
xchg
xlat
sbb
jae
in
retf
jp
pop
sbb
cwde
int
mov
loope
jmp
jle
cmp
mov
cmp
mov
nop
clc
call
inc
jmp
add
cmp
out
pop
ret
add
add
push
add
cmc
dec
or
pop
int
dec
and
dec
stos
jmp
xlat
mov
xor
jle
pushf
xchg
int3
push
push
add
adc
mov
into
(bad)
mov
push
cmps
lds
sub
lods
in
dec
xchg
shl
jmp
hlt
push
adc
test
rol
scas
int
arpl
mov
fnstenv
jae
mov
mov
xor
push
loope
or
mov
push
pmullw
cmp
lds
inc
int3
xchg
xchg
call
ret
xchg
popa
and
les
out
mov
dec
or
push
cmc
sahf
add
mov
jo
pop
mov
divps
(bad)
lahf
idiv
outs
mov
push
mov
dec
das
int
outs
sub
inc
ror
cmp
std
inc
das
enter
add
scas
mov
sub
repnz
cmc
push
or
push
leave
lea
jbe
loop
add
ja
fldcw
inc
repnz
movs
icebp
pop
push
sbb
inc
add
or
dec
in
mov
mov
pop
push
pop
add
mov
mov
(bad)
mov
sbb
pop
ret
xchg
cwde
icebp
js
stc
mov
aad
bound
xor
fimul
jmp
aaa
or
repz
push
cmp
push
adc
jnp
out
sub
stc
mov
mov
and
cdq
aad
sbb
jo
push
adc
or
jmp
repnz
fwait
int3
push
add
cmps
stos
sar
mov
and
push
ror
cmps
test
or
mov
xor
inc
int
nop
les
jno
in
popa
fistp
fnsave
xchg
fwait
rol
les
popa
sub
inc
mov
dec
push
sbb
cwde
imul
data16
out
pop
adc
ret
loope
pop
mov
inc
mov
jns
(bad)
add
cmc
push
adc
dec
movs
inc
pop
fs
xchg
fs
mov
mov
cmc
pushf
mov
jo
es
cli
push
aas
or
mov
xchg
icebp
mov
cs
cdq
push
cmp
lods
push
adc
inc
(bad)
popf
sahf
cmc
cs
lods
stc
push
adc
das
imul
pusha
aaa
loopne
into
xor
mov
mov
rcl
in
test
mov
lods
into
das
jnp
mov
les
adc
rcl
scas
(bad)
sub
(bad)
cmp
xchg
(bad)
cmp
mov
test
inc
add
xor
(bad)
ins
and
mov
in
pop
adc
xchg
fist
stos
sahf
iret
pop
or
nop
xchg
ret
dec
or
and
xchg
lods
stc
inc
push
adc
mov
cld
arpl
cmp
mov
and
xchg
lahf
hlt
sub
nop
inc
add
push
lahf
xchg
shl
ja
icebp
sub
mov
mov
mov
cmp
xor
mov
stos
std
sub
xor
dec
les
mov
xor
mov
pop
or
js
xchg
mov
je
cli
mov
adc
xchg
cdq
rol
jecxz
mov
divps
(bad)
jp
adc
out
and
fwait
mov
jp
mov
pop
mov
push
pop
out
mov
adc
mov
push
xor
outs
adc
mov
out
mov
sub
xchg
add
pusha
mov
pop
ss
xchg
pop
sbb
cmp
cmps
outs
repnz
scas
(bad)
pushf
retf
jge
or
stos
jb
and
lea
in
jge
loop
xchg
rol
or
and
test
xor
aam
data16
div
mov
inc
aad
xchg
leave
or
int3
outs
cmp
inc
iret
xchg
sbb
(bad)
mov
cmp
in
jge
repz
shl
sub
inc
xchg
dec
sbb
dec
aam
xchg
rcr
xchg
sbb
jmp
(bad)
lahf
fild
add
mov
rcl
mov
push
push
or
lods
fs
mov
sub
in
and
stos
rcr
mov
idiv
loope
sahf
fiadd
inc
sbb
test
push
aas
adc
mov
mov
sti
push
xor
aaa
jle
adc
mov
addr16
mov
cmp
mov
mov
ins
and
mov
sub
ret
loop
sbb
outs
nop
rcr
adc
mov
add
mov
int3
sub
test
dec
out
mov
fadd
repnz
mov
cmp
daa
xor
lods
std
jge
xor
xchg
mov
sub
shl
pop
rol
cdq
shl
fstp
mov
imul
cmps
jmp
cmp
lahf
xchg
fist
(bad)
mov
jecxz
pusha
or
jecxz
fist
cmc
xchg
aam
pusha
and
mov
stos
out
push
pop
sbb
ret
sub
idiv
jmp
inc
sbb
xor
push
out
mov
call
inc
fild
lds
sbb
lock
sub
imul
add
or
mov
mov
ds
pop
mov
push
call
jp
les
or
mov
or
inc
icebp
mov
int3
inc
sbb
js
mov
sub
pop
test
xchg
xchg
fld
ds
icebp
xchg
mov
pop
inc
lds
(bad)
xchg
ret
sar
retf
xchg
pop
je
cmc
pop
or
mov
int3
imul
inc
cmps
jecxz
sub
mov
fidivr
retf
sub
pop
cld
xchg
jbe
push
inc
test
sub
xchg
(bad)
leave
cmovnp
test
fimul
fadd
mov
inc
add
xor
ins
fmul
mov
pop
in
mov
dec
test
inc
or
push
push
loope
ja
sub
clc
cmp
mov
shl
or
fistp
call
ds
mov
and
cmp
mov
and
xor
sbb
sahf
mov
call
fisttp
push
inc
add
add
pop
fisttp
mov
or
imul
jg
aaa
jae
mov
aad
jge
or
hlt
and
sub
jne
pop
scas
jmp
sub
mov
inc
sbb
push
mov
dec
cld
mov
cmp
push
fistp
scas
mov
mov
and
jp
leave
dec
adc
mov
movs
repz
sub
inc
or
pop
cmp
mov
iret
xchg
fbstp
ja
(bad)
mov
push
cmp
xchg
fcomp
cmps
int
daa
in
mov
cld
movs
outs
sub
dec
loope
push
xor
int3
inc
or
cmps
int
pop
ss
out
dec
add
pop
ficomp
cmp
iret
pop
or
inc
aam
cmps
cld
inc
cs
push
dec
ret
xchg
lods
popf
fldcw
rcl
mov
in
xchg
aad
sub
xchg
add
inc
retf
call
sub
in
xor
push
hlt
mov
add
mov
(bad)
or
stc
push
add
(bad)
sahf
jne
sbb
cmps
lock
addr16
movs
test
push
xor
mov
and
sub
jmp
xor
jnp
mov
jmp
mov
push
adc
fs
retf
int
mov
add
inc
adc
cmp
sub
(bad)
cmp
mov
or
push
or
cmc
xor
cmps
and
sub
jb
xchg
sbb
jns
fwait
xchg
(bad)
ins
cmp
mov
push
dec
rcr
shl
movs
dec
adc
lods
add
retf
jno
ss
sbb
mov
rcr
mov
mov
cmp
movs
xchg
fdivr
or
push
add
jl
enter
pushf
mov
es
int
cmp
scas
scas
jmp
cmp
aad
xor
mov
pop
fild
stos
call
or
movs
cld
and
mov
fs
movs
adc
cdq
ret
push
aas
sbb
xlat
push
inc
mov
stos
nop
aam
or
xor
push
sbb
(bad)
out
xor
mov
ret
and
mov
fmul
pop
inc
retf
mov
mov
pop
adc
outs
rcl
sbb
mov
sub
pop
iret
sub
(bad)
(bad)
dec
scas
out
pop
mov
stos
je
cmp
dec
movs
in
sub
dec
stos
sar
pop
xchg
aad
xor
pop
into
mov
lock
fisttp
mov
sub
(bad)
ins
mov
push
mov
test
loop
data16
scas
jmp
pop
retf
cmp
inc
push
inc
call
outs
add
jg
xchg
mov
and
mov
test
xor
dec
retf
pushf
(bad)
out
pop
fistp
out
mov
lea
rcl
clc
xchg
xlat
xor
xchg
inc
retf
or
js
std
and
pop
fmul
das
js
mov
pcmpgtb
mov
mov
pop
sbb
pusha
test
add
fimul
sbb
lahf
hlt
dec
sub
add
cld
push
adc
mov
xchg
sti
xor
in
and
dec
mov
imul
or
cmp
in
and
xchg
xchg
xlat
or
pushf
jno
ss
cld
test
(bad)
xor
aam
dec
or
mov
jge
out
xor
out
pop
(bad)
outs
sub
inc
ror
add
lods
mov
jo
es
mov
inc
scas
jmp
adc
mov
xchg
mov
cmp
mov
pop
adc
and
loope
mov
mov
sbb
xchg
sub
jae
mov
ja
out
popf
leave
push
push
and
sbb
xchg
imul
jbe
sub
out
pop
xor
mov
or
loope
jp
pop
inc
mov
mov
cmps
int3
jno
xor
scas
xchg
ficom
lds
(bad)
nop
je
push
add
sbb
imul
dec
into
xchg
ins
cld
lods
jl
sub
ss
imul
fisttp
out
add
add
aaa
sti
lods
outs
cs
(bad)
sub
xchg
push
pop
std
movs
mov
pop
sbb
cli
xchg
(bad)
sub
dec
lds
mov
sahf
test
dec
sbb
mov
sbb
xchg
(bad)
out
sbb
push
push
out
mov
loop
push
out
adc
rcr
inc
rcr
lods
lahf
fist
xor
sub
inc
stc
scas
scas
(bad)
pusha
aaa
cmp
clc
pop
xor
ja
xchg
ret
mov
xchg
adc
or
jb
mov
ins
sar
enter
xchg
into
inc
add
pop
scas
dec
leave
mov
xchg
fdivr
xor
mov
ins
cmp
stos
dec
add
mov
fsub
repnz
fmul
mov
ins
push
xor
pushf
jge
ror
scas
(bad)
fisub
sbb
loopne
inc
mov
push
paddd
or
cdq
xchg
cmp
sub
test
movs
call
jbe
sbb
mov
scas
mov
jp
xchg
mov
xor
(bad)
mov
pusha
adc
fs
lahf
xchg
into
sub
lahf
adc
nop
(bad)
sub
adc
(bad)
fnstenv
jae
cwde
mov
mov
mov
push
mov
js
or
mov
and
or
test
out
push
adc
pusha
or
inc
ret
cmp
ins
test
imul
call
int
add
jge
adc
out
inc
sbb
js
fdivr
loopne
inc
or
sub
nop
test
test
aas
add
or
fisubr
loope
nop
aam
pusha
rol
sub
std
mov
call
push
jmp
les
cmp
xchg
aam
add
jno
fstp
mov
cmps
(bad)
pushf
fcom
adc
mov
mov
cwde
repz
pop
hlt
mov
mov
push
(bad)
add
hlt
xor
cmp
dec
or
test
sub
push
adc
aad
ins
add
cmps
out
sub
pusha
repz
push
out
jb
mov
xor
not
repnz
mov
xchg
imul
pop
movlps
mov
mov
inc
test
jns
or
mov
jbe
icebp
call
push
sbb
ret
ret
or
out
push
cld
mov
jmp
mov
mov
aaa
cmps
jecxz
arpl
lods
fwait
int3
pop
ss
lods
outs
cmp
popf
mov
ins
comiss
jmp
pop
push
xor
imul
pop
or
scas
stos
out
dec
(bad)
lods
mov
jo
pushf
call
imul
jbe
jmp
xor
retf
xor
imul
out
scas
clc
jnp
push
dec
mov
inc
in
mov
mov
jo
cmc
xor
(bad)
fisubr
pop
push
rcr
nop
inc
pop
sbb
xchg
pop
hlt
mov
or
les
sti
jo
clc
mov
cmp
gs
dec
mov
jb
cmps
pushf
(bad)
cmp
les
mov
cmp
cwde
lods
std
push
pop
jmp
add
sbb
sbb
dec
fstp
(bad)
mov
add
clc
cs
out
dec
add
inc
xlat
mov
xchg
aad
syscall
pop
mov
jl
push
dec
mov
push
add
scas
jecxz
push
mov
repz
and
daa
arpl
lea
mov
not
sbb
test
call
imul
push
or
jne
fsub
xor
mov
xor
pop
mov
divps
xchg
jp
or
ficomp
fwait
mov
int
sbb
div
addr16
adc
pop
adc
call
mov
cs
pop
(bad)
mov
test
aas
push
inc
sbb
pushf
mov
lahf
retf
add
les
cmc
mov
int
js
mov
fcom
mov
xor
pusha
retf
sbb
stc
test
es
cmp
cmps
out
cmp
scas
jne
cmp
mov
cmps
call
push
iret
cwde
popa
or
mov
fadd
cmps
repz
add
mov
lds
jge
ror
popf
gs
imul
mov
aad
jp
xchg
mov
mov
add
mov
(bad)
push
sbb
repz
pusha
add
je
mov
adc
push
or
test
sbb
retf
ret
ror
div
jmp
stos
outs
cmp
inc
jmp
fiadd
dec
mov
jo
cmp
test
mov
repz
rol
in
push
ss
arpl
mov
mov
jmp
rcl
not
sbb
stos
mov
outs
daa
or
enter
sbb
pushf
xchg
add
xchg
inc
or
push
iret
movs
inc
daa
sbb
or
data16
test
aaa
loop
adc
adc
ror
adc
mov
xor
mov
fidivr
pop
push
sbb
mov
out
or
lea
mov
inc
or
int3
mov
pop
push
sub
xchg
div
and
jae
movs
mov
cmps
xchg
shl
jae
stc
cmp
xchg
ret
fst
add
cmp
lods
mov
dec
or
mov
or
cli
cmp
lahf
mov
dec
and
js
mov
addr16
jns
xlat
dec
and
nop
(bad)
int3
dec
add
inc
int
jp
pop
inc
lods
call
arpl
ss
xchg
mov
das
inc
enter
and
inc
sub
adc
xchg
and
fld
outs
mov
inc
pop
sbb
std
pop
xor
cmp
mov
pop
add
xor
addps
lea
ss
mov
inc
and
cdq
xchg
(bad)
xchg
fild
add
ret
xchg
push
(bad)
into
xchg
sahf
cmc
sub
in
adc
and
pop
mov
inc
mov
jbe
out
mov
mov
and
mov
mov
dec
mov
pop
sbb
cdq
mov
sub
jl
jmp
ficomp
cmps
mov
outs
(bad)
repnz
fidivr
mov
imul
add
mov
or
cld
jo
cmp
xor
xchg
ret
sub
jns
mov
add
fidivr
movs
in
pop
pop
add
outs
cmp
mov
jmp
adc
(bad)
fnstsw
int3
test
jmp
ins
(bad)
(bad)
mov
sbb
jns
stos
dec
sbb
push
out
xchg
iret
and
mov
enter
ins
int
scas
hlt
ins
pop
add
repnz
or
test
and
xor
mov
sti
mov
in
lods
iret
jae
cmp
in
outs
fistp
cmp
mov
popf
not
je
scas
xchg
rcl
push
push
mov
pop
jmp
add
mov
jae
cmp
scas
neg
sbb
cld
cmp
std
xchg
rol
and
clc
cmp
cli
mov
and
fist
loop
mov
outs
das
aas
jae
test
(bad)
and
test
sbb
xchg
mov
pushf
int
and
jne
and
and
xchg
scas
sti
inc
push
sub
(bad)
jp
adc
xor
dec
mov
pop
sbb
cmps
push
or
(bad)
(bad)
mov
fadd
inc
(bad)
lahf
test
xor
mov
mov
out
add
mov
jg
test
stos
rep
sub
outs
adc
sub
push
cli
cmp
or
jmp
push
jmp
dec
adc
cmps
mov
jnp
hlt
mov
cmovle
movs
ja
sub
scas
fs
ja
retf
call
push
sbb
mov
loop
fs
scas
dec
push
or
sahf
(bad)
retf
and
mov
xchg
fiadd
add
mov
jmp
aad
xchg
aad
or
mov
call
scas
mov
and
sti
scas
pushf
fadd
aaa
outs
repnz
out
push
add
mov
cli
mov
enter
dec
sbb
mov
add
mov
scas
xchg
les
pusha
enter
push
cmp
xchg
xchg
lds
jb
icebp
add
xchg
mov
inc
iret
cmps
mov
and
mov
hlt
xchg
mov
add
les
mov
jo
cld
cmp
lods
loopne
add
xor
jnp
in
pop
pop
movs
loope
sub
xchg
mov
aas
push
fisttp
stos
popa
or
or
rcr
mov
jmp
movs
ja
push
dec
mov
mov
lock
in
test
and
and
mov
pop
out
mov
push
or
xchg
jns
lock
outs
cmp
dec
mov
sub
mov
mov
call
outs
push
ss
retf
mov
sbb
mov
rcl
pop
push
mov
add
int
lahf
neg
add
loop
add
ds
mov
push
push
cli
mov
mov
add
das
inc
icebp
xchg
aam
ins
sub
lahf
(bad)
xlat
jns
xor
aam
add
add
cmp
test
fmul
ror
push
stos
cli
xor
mov
cmp
in
ins
fidiv
rol
add
xchg
push
add
ja
lods
leave
lea
jnp
dec
repz
push
add
jbe
push
lock
cmps
int3
ins
cvtps2pi
xchg
rcr
int3
mov
(bad)
jb
pop
xor
test
inc
inc
cs
dec
sbb
mov
ds
mov
adc
jbe
test
pop
cmps
int
mov
and
fs
mov
pop
xor
mov
pop
ret
xchg
pop
pop
call
ret
dec
sbb
aad
repz
push
jbe
sar
cmp
fisub
mov
pop
aaa
arpl
mov
xchg
or
js
add
outs
push
push
adc
push
xor
or
mov
push
lds
cli
xchg
sahf
cld
fisttp
pop
add
in
sbb
stos
(bad)
fdiv
loop
out
addr16
imul
fs
popf
adc
jmp
pop
adc
imul
mov
cld
mov
jle
iret
fwait
loope
push
push
popf
mov
ja
outs
dec
add
mov
mov
mov
pop
sub
dec
adc
mov
test
(bad)
mov
popf
jmp
push
push
adc
dec
and
push
dec
or
inc
sbb
inc
and
ja
dec
add
push
push
adc
mov
mov
repnz
test
inc
sbb
jg
out
mov
in
je
bound
js
jge
add
push
and
add
call
xchg
(bad)
mov
lods
inc
or
cmp
and
cmp
jle
jne
loop
loopne
adc
iret
jnp
imul
pop
arpl
pop
pop
push
ja
dec
es
cld
test
xchg
loop
outs
add
std
lods
and
cmp
sar
dec
cwde
fisub
or
imul
les
imul
leave
sahf
out
fist
in
or
retf
lds
inc
adc
inc
pop
pop
push
inc
test
leave
les
stos
out
cdq
mov
je
sbb
jge
mov
or
mov
mov
lods
test
mov
les
jno
adc
cdq
fmul
xchg
in
mov
xor
jmp
xor
pop
push
dec
xchg
mov
test
js
test
and
jne
(bad)
sub
dec
add
cmc
xchg
mov
fistp
xchg
out
push
push
fidiv
add
cmp
lahf
xor
dec
mov
mov
dec
mov
aam
ret
test
inc
sub
mov
mov
push
aas
pop
test
shr
adc
enter
and
sub
cmps
neg
xchg
jge
stos
int
stc
sub
pop
xor
mov
mov
sub
test
xchg
jnp
popf
inc
adc
adc
int3
mov
or
push
push
cmp
push
test
aas
lea
inc
movs
enter
popa
adc
mov
xchg
fwait
dec
and
fstp
stos
rcl
cmp
loope
jl
mov
ja
push
jb
imul
add
adc
and
adc
sub
mov
cmp
mov
nop
retf
jno
arpl
xor
dec
add
loopne
(bad)
test
outs
cmp
out
jbe
pop
and
addr16
mov
pusha
add
pop
sbb
sti
mov
pop
sub
and
pop
cmp
fisttp
les
add
aas
rol
push
sub
out
xlat
mov
mov
push
push
cmp
sub
stos
iret
mov
mov
imul
das
ja
jg
push
dec
and
xlat
repz
cmps
lods
(bad)
mov
shl
pop
mov
movs
fiadd
xor
shr
clc
xlat
cli
(bad)
fdiv
es
add
idiv
(bad)
stos
xchg
cmps
out
mov
clc
popf
int3
lods
outs
push
or
aam
hlt
jg
(bad)
out
inc
inc
add
nop
jmp
imul
jmp
push
fwait
retf
pop
mov
mov
inc
add
std
lods
add
push
pop
inc
loope
rol
outs
inc
in
out
lods
(bad)
mov
add
mov
scas
stc
test
fisttp
or
or
mov
les
lahf
fldcw
xchg
call
sbb
jb
push
add
cmp
repnz
push
ror
cdq
bnd
push
push
mov
mov
xchg
mov
mov
scas
add
and
sub
hlt
mov
in
and
pop
bound
imul
cmp
xchg
loopne
cmps
add
iret
xchg
lock
shl
(bad)
test
cli
not
fstp
inc
jae
push
idiv
inc
cs
repnz
or
dec
inc
dec
sub
xor
add
pushf
out
xchg
or
pop
adc
adc
pop
and
adc
lock
mov
pop
push
pop
mov
xchg
loope
mov
movs
in
ret
scas
cld
mov
movs
push
dec
es
icebp
mov
call
dec
or
pusha
cmp
popa
ja
xchg
ret
(bad)
ficom
adc
cwde
jecxz
fcomp
mov
xchg
or
mov
cmps
imul
(bad)
into
cmps
aam
rcl
xor
jo
outs
sub
adc
inc
adc
push
lahf
or
xor
sub
aam
repz
jno
mov
jbe
sbb
mov
cmp
clc
sub
ficomp
out
xchg
aad
js
pop
pushf
sbb
(bad)
popa
and
ins
xchg
cli
mov
les
sub
inc
add
xchg
jecxz
jne
jns
xchg
in
out
call
(bad)
mov
inc
cmp
xchg
ret
or
icebp
call
fist
andnps
popa
mov
dec
and
xchg
jmp
ins
adc
call
loopne
ret
adc
(bad)
sbb
movs
call
pop
pop
je
mov
push
movs
(bad)
xchg
rcr
and
dec
jecxz
retf
scas
loope
shl
mov
xchg
retf
retf
mov
jbe
cmp
aam
int3
mov
inc
xor
xlat
sbb
dec
test
cli
scas
ja
dec
add
push
mov
pop
lds
ins
sbb
retf
xchg
rcl
out
(bad)
add
or
cli
mov
test
ret
push
pop
ins
outs
push
ins
cmp
inc
push
push
rol
nop
stc
mov
fisub
inc
out
in
inc
adc
popa
sbb
pop
repnz
jno
in
sahf
retf
xor
inc
fdiv
inc
(bad)
popa
sub
add
cmps
les
cmp
mov
stos
repnz
fcom
imul
add
cwde
fcom
jle
adc
and
neg
loop
retf
fcomp
shr
jnp
inc
add
push
pop
inc
mov
fmul
and
pop
mov
fnstenv
aad
pop
adc
mov
xor
sbb
push
pop
and
mov
mov
ret
mov
mov
or
push
or
sbb
ins
mov
ficomp
and
push
jmp
push
movs
rcl
and
xlat
(bad)
call
adc
mov
pop
or
cmp
dec
sbb
or
cld
mov
fcom
das
pop
or
dec
sbb
movs
jmp
popf
hlt
pop
mov
xor
sub
out
cmovnp
arpl
inc
ds
add
aaa
dec
and
in
ret
daa
pop
jo
pushf
outs
cmp
fs
sub
xchg
aad
push
rcl
mov
jp
xor
jnp
mov
stos
adc
xor
cmps
mov
push
sbb
and
xchg
popf
icebp
movs
out
cmp
sub
cmp
jno
test
scas
adc
daa
and
mov
in
(bad)
stc
daa
jo
pop
pop
cs
adc
stos
cld
mov
mov
js
pop
inc
dec
cmp
jbe
push
pop
cmp
ret
es
dec
push
sbb
inc
add
ret
mov
and
daa
push
add
cli
or
fsubr
rcr
sub
sub
inc
add
in
aad
inc
cmp
sahf
not
out
pop
and
pop
or
inc
leave
push
and
jbe
movs
neg
mov
mov
hlt
nop
rcl
neg
push
xchg
in
mov
ins
pop
fs
mov
cmp
dec
sbb
test
sbb
lock
dec
add
pop
adc
das
out
add
push
push
xchg
inc
push
push
outs
cmp
repz
or
cmp
icebp
mov
mov
dec
xor
sbb
pop
or
pop
fist
lahf
jnp
pop
ret
fild
loop
stos
dec
das
jle
cmovle
clc
or
adc
pop
add
les
push
sub
xchg
shl
test
out
xchg
ret
ins
pop
dec
sbb
jle
push
mov
lods
and
dec
imul
pushf
mov
xchg
gs
(bad)
(bad)
out
xor
push
scas
dec
push
pop
fst
inc
pop
outs
das
jmp
mov
or
in
mov
jbe
push
add
pop
or
ds
adc
das
dec
and
dec
add
pop
or
data16
jae
inc
sub
pop
stc
nop
in
mov
sbb
call
sbb
jmp
aad
stc
scas
test
adc
sub
dec
repnz
out
mov
xchg
retf
push
mov
xchg
popa
or
jge
out
movs
push
push
sbb
pushf
imul
xchg
stos
cld
sub
ss
out
fs
jmp
out
dec
add
pop
mov
add
xchg
mul
jp
js
in
nop
mul
push
or
gs
fist
xchg
mul
jl
jle
push
push
add
push
nop
fstp
addr16
xchg
rcl
nop
ret
push
inc
adc
loope
das
dec
or
mov
jne
pop
sbb
dec
adc
out
test
mov
sbb
push
or
(bad)
xchg
rep
iret
stos
mov
mov
arpl
push
push
inc
push
dec
or
jno
mov
or
cmps
lds
sub
rcr
hlt
popf
into
cdq
clc
mov
inc
sub
dec
jecxz
repz
imul
sti
mov
push
pop
cld
cwde
(bad)
xor
or
inc
stos
int3
imul
add
mov
(bad)
mov
and
inc
xchg
bound
push
stos
leave
imul
add
mov
in
mov
xchg
rol
mov
mov
cmp
mov
cmp
and
xchg
push
sbb
pusha
sbb
xor
mov
jae
inc
sub
sub
mov
ficomp
push
push
sub
pop
mov
and
cld
inc
adc
mov
jle
ja
mov
and
inc
add
imul
loop
add
add
xor
jg
ja
xchg
movs
lock
mov
xchg
(bad)
lahf
shr
pcmpeqw
xor
addr16
imul
fs
ret
cmps
cmc
mov
cwde
cli
push
push
inc
push
inc
or
pop
adc
push
jmp
dec
sbb
inc
(bad)
pop
adc
xchg
mov
sbb
push
out
cdq
enter
out
jp
dec
idiv
jnp
add
pop
rcr
sbb
mov
dec
pop
jo
adc
push
dec
and
jnp
adc
dec
push
pop
pop
sbb
repnz
gs
jno
mov
pop
push
adc
jle
sti
mov
mov
scas
stc
sar
jo
hlt
scas
shr
jmp
ss
aam
hlt
sar
xchg
daa
jge
inc
pop
ds
xchg
adc
adc
stc
mov
arpl
lds
outs
ud0
push
sub
test
movs
sbb
icebp
lods
jecxz
mov
dec
pop
pop
pop
bound
fild
outs
aas
dec
sbb
fisttp
inc
push
push
cmp
fimul
push
or
pop
or
pop
xor
mov
push
inc
push
jge
lods
cmp
rcr
adc
out
clc
jmp
iret
mov
push
pop
sbb
inc
arpl
push
adc
call
les
xchg
(bad)
lods
addr16
fimul
test
nop
aam
outs
js
pop
or
mov
jge
dec
mov
jmp
xchg
xchg
mov
int
mov
nop
push
ds
movs
in
ins
push
or
(bad)
lock
in
and
or
sahf
cmp
mov
sub
retf
add
ja
jg
retf
stos
push
dec
push
dec
mov
(bad)
sahf
iret
mov
jo
(bad)
sub
xchg
sub
or
cwde
(bad)
std
cmps
stc
xchg
dec
xor
inc
dec
push
inc
add
shl
(bad)
adc
jns
mov
dec
das
jns
ins
sub
nop
and
jb
pop
jnp
adc
out
dec
push
or
xor
in
jmp
clc
mov
sub
pop
push
aas
jb
push
pop
pusha
cs
sbb
sahf
(bad)
mov
jecxz
fimul
jmp
mov
leave
xchg
stos
cld
xchg
adc
ins
sub
addr16
cmp
inc
push
outs
or
pop
push
jne
jle
jbe
(bad)
out
pushf
retf
(bad)
retf
(bad)
popa
sbb
pop
push
and
pop
cs
add
and
adc
jl
imul
sub
jb
inc
add
pop
ins
aas
dec
sbb
bound
jns
push
or
xchg
nop
fstp
fisttp
js
pop
or
jge
dec
aas
jle
(bad)
retf
scas
xchg
cmc
lahf
retf
dec
add
pop
sbb
and
jae
pop
lods
leave
xchg
shl
dec
and
jle
mov
cs
push
inc
adc
xchg
ret
cmps
(bad)
ret
xchg
std
jmp
cmps
repnz
loope
mov
push
jecxz
ret
pop
sbb
inc
arpl
cmp
pop
xchg
clc
js
push
sub
push
add
sar
adc
push
push
or
adc
dec
or
push
xchg
cwde
enter
jb
cdq
jmp
dec
xchg
stc
inc
adc
xlat
arpl
(bad)
fistp
rep
push
add
rdmsr
imul
cmp
cmp
pop
or
push
xor
adc
sbb
imul
jg
pop
ins
adc
jb
jb
or
popa
or
js
push
xor
loope
jnp
inc
imul
outs
sub
inc
sbb
or
push
mov
and
mov
mov
and
mov
mov
dec
int
mov
jmp
ss
adc
je
mov
push
divps
add
inc
or
daa
fs
xchg
mov
lock
push
ret
mov
mov
mov
stos
cli
xchg
(bad)
(bad)
adc
cwde
lds
or
mov
push
adc
ins
sub
mov
lahf
retf
mov
(bad)
xchg
std
lods
rol
pop
sbb
ror
dec
or
(bad)
scas
fisttp
dec
or
clc
movs
hlt
lahf
adc
out
jmp
arpl
ja
push
or
sub
in
mov
dec
adc
imul
in
cmps
dec
adc
or
loop
sbb
fdivr
push
and
mov
ja
arpl
icebp
mov
popf
int
(bad)
test
mov
jno
out
stos
out
(bad)
retf
sub
sub
aam
hlt
mov
sbb
inc
loope
dec
adc
mov
xor
xchg
ret
les
jb
pop
movs
shr
jle
dec
shl
leave
fwait
lock
mov
jbe
fistp
mov
xor
dec
or
movs
neg
mov
and
mov
jo
das
stos
cld
(bad)
into
pop
sbb
lods
(bad)
xchg
mov
repnz
les
ss
adc
mov
or
rcl
int
dec
push
dec
pushf
fadd
sub
cld
cwde
push
pop
js
ficomp
test
in
div
inc
add
ret
adc
fs
mov
pushf
push
push
and
shrd
add
mov
jnp
fmul
gs
test
inc
adc
call
pop
je
push
add
sub
iret
repnz
cli
xchg
ret
inc
or
ins
aaa
data16
mov
sahf
leave
push
shl
rol
aam
ror
mov
and
xor
mov
pop
push
xlat
mov
les
cli
test
adc
sbb
inc
fistp
mov
retf
sahf
ficomp
jb
ret
lea
pop
xor
call
(bad)
xchg
or
or
loope
in
lods
call
loope
sub
xor
dec
pop
cmp
inc
add
mov
xor
pop
sbb
(bad)
aad
hlt
mov
cmp
inc
das
je
dec
pop
add
cmp
dec
or
push
shl
test
mov
cmp
arpl
dec
adc
ja
pop
or
test
gs
adc
jl
and
pop
pop
daa
sub
fs
aam
hlt
mov
xchg
rcr
je
bound
and
pop
clc
mov
sti
stos
out
dec
adc
jo
cmp
pop
sub
xchg
ret
cmps
pusha
or
inc
pop
add
dec
mov
jae
push
pop
sbb
jmp
mov
jp
dec
push
pop
push
add
inc
mov
jle
inc
adc
mov
imul
jmp
sub
xchg
iret
cdq
int3
mov
inc
sbb
loope
retf
mov
(bad)
push
or
pop
shl
call
ins
cmp
mov
outs
lds
pop
xor
push
sbb
enter
rcr
stos
retf
push
adc
push
out
icebp
call
sbb
stos
or
loopne
mov
jecxz
add
cmp
stc
mov
jno
cmp
mov
pop
or
cdq
lds
or
test
sbb
test
jne
popf
out
scas
xchg
mov
loope
xchg
xchg
rcl
das
jns
push
jp
pusha
or
xchg
pop
push
retf
ret
jp
(bad)
(bad)
call
test
cli
popa
ucomiss
adc
jns
stos
aas
push
out
mov
in
test
mov
mov
jae
bound
push
dec
std
mov
rcr
mov
pop
mov
fistp
xchg
xlat
dec
adc
fwait
in
mov
mov
je
add
jb
xor
mov
and
jbe
or
xlat
xchg
retf
mov
jb
push
xchg
cli
ins
cmp
add
jg
sahf
mov
inc
xor
xor
xor
add
jmp
fistp
dec
loope
xor
dec
ss
inc
loopne
sub
mov
xor
push
or
stos
push
sbb
mov
fist
add
adc
xchg
dec
arpl
push
dec
xor
iret
es
inc
pop
jmp
test
push
pop
xchg
std
xor
jle
jmp
mov
fwait
sub
(bad)
cmp
mov
or
stc
mov
fmul
call
xchg
jle
imul
fsub
out
push
jl
inc
in
and
into
xchg
rep
pop
loope
add
aad
push
aas
aas
jle
scas
and
xchg
enter
inc
push
popf
aam
lods
test
gs
mov
inc
xor
add
xchg
push
add
push
imul
scas
iret
outs
xor
ja
push
pop
jmp
add
push
xchg
bound
pop
xchg
push
add
add
add
loop
adc
dec
xor
shl
loopne
(bad)
nop
jne
add
jb
push
push
pop
out
lds
call
lahf
mov
mov
test
js
xor
mov
sbb
scas
cmps
(bad)
stos
rol
mov
div
or
sahf
int3
sub
add
xchg
aad
jecxz
paddd
sbb
push
loopne
rcl
cli
call
xchg
stc
mov
ins
cmp
bound
nop
ret
mov
push
rcl
outs
out
mov
rol
ret
ins
into
xchg
fdiv
rcr
(bad)
push
in
fild
out
jno
sub
sti
push
pop
jne
test
push
jno
jno
jb
cdq
test
mov
loope
inc
mov
mov
jno
test
jge
dec
sbb
daa
jl
push
push
jnp
push
and
ret
call
jmp
iret
mov
sub
test
xchg
fwait
cmps
retf
dec
adc
mov
mov
xchg
outs
(bad)
mov
add
inc
outs
sub
or
addr16
popf
int
push
fcomp
and
add
jg
push
push
aad
add
js
lods
les
ds
push
sub
pop
add
pop
loope
movs
pop
and
popf
fmul
sbb
jl
mov
aad
adc
mov
push
jbe
fistp
jns
jae
xchg
inc
repz
adc
xor
repnz
jp
xor
call
pop
mov
mov
mov
std
xchg
xlat
adc
xor
jbe
xor
cmp
js
inc
mov
adc
xchg
ret
xchg
push
jb
inc
arpl
stos
into
btr
fdiv
loopne
add
out
popa
sbb
pop
push
(bad)
imul
es
fdiv
sub
and
mov
repnz
xor
adc
outs
outs
loopne
inc
push
adc
pop
icebp
sbb
popf
retf
mov
pop
adc
cs
and
push
in
or
outs
cmp
hlt
mov
(bad)
mov
mov
arpl
hlt
ret
mov
retf
arpl
gs
push
xchg
mov
test
jo
imul
add
sbb
jne
pop
lods
xchg
rcr
aad
and
cmp
xchg
enter
or
mov
popa
scas
jg
inc
add
jmp
out
jecxz
add
and
imul
ds
in
dec
cmp
dec
mov
sti
cdq
sti
mov
in
mov
and
mov
add
icebp
mov
mov
addr16
inc
cmp
dec
in
fstp
cs
dec
or
inc
pop
dec
sbb
push
clc
xchg
xchg
(bad)
mov
mov
mov
stos
out
daa
jbe
outs
sub
jle
ins
add
call
and
es
lock
sbb
jnp
xor
stos
retf
movs
rcr
inc
sbb
ins
adc
dec
adc
xor
shl
pop
sbb
cs
add
inc
test
addr16
cmp
daa
daa
cmc
mov
sub
int
mov
push
push
repnz
in
lea
shl
mov
push
push
movs
jne
xchg
xlat
adc
push
jae
jns
inc
sbb
mov
lea
pop
dec
mov
or
jecxz
(bad)
cmps
jns
dec
push
inc
xchg
cmp
add
add
repz
fcom
xchg
mov
jmp
xlat
test
jmp
mov
add
jmp
dec
sbb
inc
or
popa
cmp
aam
shl
push
xchg
adc
inc
add
pusha
mov
adc
test
mov
mov
outs
or
xchg
mov
mov
xchg
fild
jg
push
mov
dec
out
xchg
arpl
inc
push
fdiv
dec
adc
xor
pop
xor
push
test
addr16
sbb
sub
ret
call
and
inc
cwde
pop
dec
xor
das
cmp
fisttp
ja
popa
push
xor
pop
push
adc
dec
or
ds
xor
aaa
pop
jmp
jmp
adc
pop
icebp
movs
rcl
fsubr
cwde
fcom
inc
sub
js
dec
pop
pushf
les
pusha
sbb
outs
pop
jae
sbb
inc
cmp
cli
sub
sbb
scas
mul
push
sub
push
and
and
les
ins
in
dec
aaa
inc
adc
jecxz
ret
xchg
je
and
xor
sbb
imul
sahf
fcomp
cdq
rcl
mov
jns
push
jmp
inc
xor
out
mov
outs
xchg
or
movs
shl
mov
pop
in
movs
inc
pop
jl
inc
push
and
in
mov
xchg
inc
jl
js
xor
push
fadd
inc
sbb
fisubr
jge
sub
pop
in
or
jge
and
push
dec
xchg
clc
bound
sbb
ja
push
in
cli
xchg
ret
cmc
xchg
and
shl
rol
cmps
repz
cmp
aad
pop
mov
in
push
push
jno
dec
xchg
ins
add
ss
sar
dec
jecxz
test
ins
or
xor
inc
mov
cmp
aam
mov
outs
mov
xchg
xlat
mov
adc
fcomp
cmp
jo
inc
xchg
push
jb
retf
pushf
lods
dec
cmp
fsubr
push
add
pop
cmp
iret
outs
scas
stc
mov
cmp
ret
mov
xor
and
inc
cmp
mov
movs
sti
xchg
lods
fcomp
and
mov
xchg
jle
pop
in
mov
mov
sbb
ret
xchg
sti
scas
mov
cmp
inc
xchg
call
cmp
pop
push
xchg
clc
mov
pushf
aam
fnstcw
mov
mov
shl
push
jmp
mov
adc
sti
stos
rcr
cmp
loope
ins
add
jns
(bad)
fmul
xchg
fbld
and
inc
xchg
lds
ret
popf
fadd
fst
pusha
lods
outs
out
leave
adc
xor
pop
mov
mov
xor
dec
cmp
jns
mov
loop
int
scas
dec
sahf
xlat
mov
call
push
jnp
jnp
call
int
les
jnp
mov
cmp
add
adc
push
out
int3
ins
stos
sub
push
jmp
mov
inc
mov
mov
sbb
mov
rep
fistp
sbb
mul
data16
mov
inc
push
pop
loopne
scas
retf
cli
sbb
xchg
popf
pop
inc
cmp
push
adc
div
(bad)
imul
cld
cwde
fdivr
sbb
push
jmp
mov
sub
inc
call
cmp
daa
pop
out
popa
cmp
imul
dec
and
or
xor
lock
jns
inc
popf
pop
mov
or
aam
fidivr
pop
adc
push
xchg
pop
adc
(bad)
sahf
cmps
out
inc
pushf
cmps
jmp
cwde
hlt
xor
aad
ret
mov
rcl
popa
mov
addr16
jo
and
loopne
sar
xor
icebp
mov
hlt
test
cs
mov
scas
jge
sub
mov
dec
cmp
sub
adc
ret
pushf
scas
fst
inc
adc
mov
bound
outs
out
enter
mov
stc
scas
repnz
(bad)
mov
sbb
ror
lods
push
xchg
rcr
outs
jmp
retf
xchg
(bad)
sub
mov
mov
push
jecxz
fstp
jbe
inc
cmp
and
mov
mov
call
inc
xchg
cmc
xchg
lds
sti
sub
adc
add
retf
stc
mov
cmps
iret
mov
add
retf
sti
and
push
adc
xor
dec
or
inc
add
jle
rcr
rol
add
xlat
stos
shl
adc
iret
mov
cs
cmp
fdiv
jecxz
(bad)
mov
(bad)
add
mov
adc
sub
stos
leave
outs
sub
dec
mov
push
out
(bad)
out
adc
cmovns
fwait
lods
outs
inc
adc
pop
ss
fisubr
pushf
retf
push
and
popa
xor
dec
mov
pop
xor
mov
mov
les
push
pop
hlt
adc
loopne
mov
cli
sahf
pop
pop
or
mov
adc
mov
adc
call
xchg
out
imul
push
add
imul
aam
sub
into
sub
bound
push
cmp
cmp
jo
and
ins
mov
test
push
or
imul
pop
in
add
push
add
adc
dec
push
sub
mov
xchg
ret
xor
jbe
push
xchg
inc
mov
push
lods
sti
adc
pop
ret
mov
aam
outs
aam
test
out
fidiv
adc
sti
add
pop
sbb
dec
sub
sub
push
pop
add
in
cmc
lods
in
xchg
push
mov
int3
sbb
fst
mov
push
daa
or
and
jae
jb
push
in
pop
sub
retf
mov
sbb
call
inc
aaa
dec
in
xor
fcomp
and
inc
add
xor
cmp
test
and
cmp
jg
jl
jmp
add
pusha
and
push
mov
jae
pop
daa
jns
sub
shr
sub
xor
pop
xor
xor
dec
aaa
inc
loop
push
outs
out
add
push
test
inc
cwde
imul
iret
js
pop
fs
xchg
out
mov
push
dec
(bad)
mov
ins
sbb
mul
sub
outs
sbb
not
dec
out
aam
ror
jmp
adc
push
push
sub
cdq
sub
push
mov
sub
cdq
inc
imul
hlt
fs
repnz
(bad)
inc
xchg
push
cmp
test
pop
scas
cli
mov
lahf
imul
mov
popf
shl
gs
and
xor
add
lds
pop
popa
les
and
inc
push
sar
push
sbb
push
sub
jl
dec
mov
xor
sub
inc
cdq
jle
dec
sbb
push
add
loop
mov
sbb
add
or
mov
movs
not
imul
stos
mov
mov
jbe
inc
stos
js
pop
sbb
mov
imul
adc
dec
add
or
xor
mov
adc
enter
inc
arpl
sar
data16
out
mov
push
push
in
out
ror
adc
pop
xlat
inc
pop
inc
call
loope
cmp
jp
fsubr
dec
sahf
ins
xor
dec
xchg
or
jae
nop
(bad)
mov
repz
inc
lods
cmps
rcl
inc
pop
xor
fld
and
and
shl
xor
pop
stos
clc
xchg
mov
inc
test
sub
bound
sbb
in
rcl
rcr
sub
cmc
sbb
cli
xchg
ret
(bad)
into
(bad)
fnstsw
push
es
pop
sub
xchg
rol
push
fidivr
jmp
and
int
dec
jmp
scas
retf
push
cmp
and
and
jne
dec
or
inc
xor
mov
lods
jmp
stos
std
mov
retf
jb
mov
clc
mov
cmp
shl
jmp
ins
cmps
aam
cli
or
repz
ja
lds
ins
movs
sbb
mov
inc
add
loop
cld
sub
(bad)
cwde
jae
xor
in
xor
mov
sub
ins
sbb
jae
sub
sbb
mul
push
pop
shr
ins
test
cmps
inc
adc
jmp
jb
dec
mov
mov
pop
loope
xor
fcomp
mov
xor
imul
mov
aad
jl
fisubr
jnp
je
jb
push
sub
data16
adc
mov
xchg
push
add
xor
mov
adc
pop
inc
adc
dec
in
cmp
and
add
pop
out
sub
fsub
(bad)
stos
ficomp
jnp
adc
lock
lds
daa
and
test
dec
loopne
ret
mov
add
pop
push
leave
jne
mov
mov
call
jle
sbb
iret
sbb
fnstsw
fst
add
loopne
mov
sbb
(bad)
xchg
push
pop
or
popa
loop
out
dec
popa
cmp
and
and
clc
mov
mov
sub
cmc
test
(bad)
cmp
in
mov
loope
dec
ds
mov
adc
retf
in
rcl
mov
adc
popa
adc
bswap
pusha
push
inc
add
mov
mov
je
stos
cmc
mov
pop
pop
je
data16
mov
loop
(bad)
nop
fnstcw
mov
in
jns
dec
push
lock
retf
mov
lds
and
push
dec
cmp
mov
xchg
fbld
dec
call
jbe
cmc
scas
fist
rol
dec
sbb
xchg
out
test
mov
push
adc
nop
cli
stos
mov
fstp
sbb
scas
fdivr
xchg
pushf
fild
cmc
test
pushf
push
fmul
mov
mov
popa
mov
imul
jg
mov
adc
sub
out
mov
leave
mov
shr
arpl
aaa
(bad)
mov
fisttp
aad
nop
stos
shl
mov
dec
mov
cmc
xchg
aam
movs
clc
pusha
xchg
add
mov
push
xor
cmp
sar
lods
rcl
je
inc
das
cs
mov
jecxz
ja
pop
clc
scas
sti
add
std
lods
(bad)
arpl
jne
pop
cmp
out
(bad)
fst
sbb
jb
inc
test
sub
adc
leave
shl
cdq
push
cs
mov
lods
cld
mov
pusha
xchg
gs
dec
ds
mov
mov
pop
pop
or
imul
les
mov
fimul
fwait
xor
popa
or
or
(bad)
inc
push
jbe
add
jnp
pop
pop
in
pushf
and
xchg
mov
push
pop
sbb
es
lahf
fist
sbb
outs
push
or
hlt
jmp
mov
or
cmp
xor
add
ja
push
xchg
pop
sbb
jb
pop
in
inc
mov
popa
or
fisttp
xor
cmp
fcomp
retf
xor
push
out
adc
enter
mov
sub
jl
imul
push
js
iret
into
sub
push
div
mov
shl
add
cmp
jbe
jb
push
cmp
push
in
(bad)
outs
inc
add
icebp
ja
dec
or
mov
mov
xor
clc
mov
ret
mov
sti
popf
jmp
gs
sbb
jnp
shl
test
or
push
add
shr
mov
cwde
les
sub
(bad)
movs
mov
fild
loopne
adc
hlt
and
lock
sar
pusha
xor
push
in
pop
mov
xchg
pop
mov
adc
cmps
repz
push
inc
and
minps
jecxz
scas
cmps
cli
nop
pop
gs
mov
data16
mov
sbb
in
mov
aas
xchg
in
call
cs
in
or
ret
add
push
sub
sub
pop
pop
jmp
inc
add
sub
sub
pop
sbb
dec
pop
cs
mov
jbe
retf
mov
movs
ja
jns
push
sub
enter
jle
pop
xor
retf
xchg
movs
loopne
inc
push
add
dec
or
sti
sub
dec
xor
mov
sub
test
scas
pop
das
jl
dec
loope
movs
dec
adc
test
mov
call
cwde
mov
retf
out
rcl
mov
sub
retf
or
dec
adc
mov
addr16
mov
loopne
cli
ins
or
push
jecxz
add
scas
fst
dec
add
jl
fisttp
(bad)
mov
xor
ret
jo
repnz
mov
nop
push
xchg
out
mov
xor
jge
ret
pop
sbb
(bad)
adc
call
retf
xor
and
xchg
xchg
(bad)
adc
mov
add
sub
and
jns
sub
ficomp
adc
outs
out
sar
in
xor
jbe
push
(bad)
xor
stos
iret
push
ss
dec
aaa
push
sub
push
nop
das
jns
je
xor
push
mov
sub
adc
push
movs
jmp
mov
xchg
(bad)
mov
jbe
push
xchg
mov
aam
fmul
in
inc
in
mov
int3
cmp
pop
adc
dec
push
es
pop
mov
pusha
loope
iret
xchg
mov
xchg
aad
jo
shl
test
ror
xor
neg
and
arpl
mov
mov
push
and
inc
cmp
or
jmp
(bad)
pusha
ss
ja
shr
xor
push
std
mov
imul
cdq
fcomp
(bad)
enter
bound
ins
sbb
and
call
cmp
inc
or
popa
std
mov
sbb
xchg
clc
xor
adc
jmp
adc
aaa
add
pop
add
out
sub
enter
div
cvttps2pi
fild
mov
add
pop
mov
xlat
gs
test
add
xchg
fiadd
scas
addr16
mov
mov
xchg
in
test
(bad)
mov
into
adc
ja
pop
arpl
push
std
lahf
xlat
mov
bound
imul
hlt
jo
jle
jmp
xlat
sbb
jle
in
cld
arpl
push
call
std
push
jmp
mov
mov
bound
push
adc
cmps
les
mov
es
sbb
(bad)
ret
push
je
jnp
push
jl
jb
push
cmp
ss
call
mov
arpl
cdq
rol
jl
xor
lods
cmp
xor
in
out
mov
xchg
movs
iret
mov
pop
mov
adc
push
pop
sbb
stos
jle
jmp
mov
out
cmps
div
pop
mov
pop
inc
mov
jmp
inc
xor
push
mov
cmp
std
push
sub
push
ds
lods
fistp
mov
xor
rol
jg
lods
call
add
mov
dec
or
data16
jg
cld
mov
fnstenv
sub
pop
mov
arpl
ret
and
outs
movs
in
inc
dec
xchg
ret
dec
daa
test
push
in
mov
imul
stos
imul
xchg
stc
fs
icebp
mov
in
and
mov
cmp
ret
or
jecxz
jbe
lock
mov
dec
or
mov
sbb
mov
enter
repz
push
or
aam
mov
xor
int
pop
sbb
xchg
mov
pop
cmp
ret
add
stos
pusha
adc
xchg
sti
stos
ins
add
xor
push
mov
push
sub
sbb
or
mov
push
xchg
jmp
sar
nop
jne
sbb
aad
xchg
lds
or
inc
or
jnp
pop
(bad)
cmc
mov
adc
popa
add
dec
out
mov
test
jo
add
xchg
push
add
jecxz
sti
pusha
stos
jnp
jne
push
mov
mov
cmps
rcr
aad
loop
ret
cwde
fdivr
push
dec
sahf
jge
inc
adc
je
inc
ss
mov
sub
dec
aaa
popw
daa
push
adc
dec
or
xchg
(bad)
scas
rcl
inc
add
out
daa
arpl
jmp
mov
outs
xor
inc
mov
movs
test
cmp
add
into
mov
xor
push
dec
cmp
and
jb
pop
sbb
les
push
scas
rol
shl
ins
sbb
ss
ins
sbb
inc
adc
xchg
ret
jl
sbb
pop
imul
push
and
das
pushf
movs
cmc
mov
push
mov
sbb
and
xor
add
jge
outs
ss
dec
outs
mov
movs
popa
mov
sub
in
(bad)
shr
(bad)
ret
neg
and
cmp
stos
dec
add
sbb
sbb
shl
add
lds
outs
mov
not
movs
pushf
call
and
in
add
(bad)
or
add
leave
mov
icebp
mov
add
test
pop
push
das
js
retf
mov
sahf
test
mov
fsub
out
mov
rcl
popa
stos
sbb
or
cs
mov
mov
push
sub
mov
add
sbb
lods
cli
xchg
or
push
mov
add
(bad)
out
xchg
add
or
dec
mov
fistp
daa
loopne
enter
xor
nop
shl
ins
xchg
jp
push
pop
cmc
mov
idiv
rcl
dec
sbb
mov
jb
mov
mov
movs
adc
pop
lahf
div
mov
mov
xchg
sbb
jg
pop
dec
or
or
aas
inc
das
pop
push
cli
add
repz
cmp
pop
sub
pop
out
fstp
adc
not
arpl
outs
or
jo
repnz
adc
adc
ret
aas
sub
repz
inc
add
loope
lahf
in
fld
imul
ins
call
pop
or
ds
pop
inc
sbb
mov
stos
leave
jb
push
out
enter
pop
pop
pop
cmps
(bad)
aam
int
mov
test
lock
fistp
jmp
push
xor
in
push
inc
bound
call
xchg
out
test
outs
adc
jo
add
cdq
fdiv
test
jne
mov
repnz
or
loop
fwait
stc
scas
stc
xchg
xchg
jne
dec
push
repz
loope
(bad)
push
add
and
out
cmp
and
inc
pop
add
test
das
dec
push
dec
das
hlt
mov
nop
mov
jmp
xor
ds
mov
loop
out
xor
dec
in
adc
jp
dec
push
xlat
push
or
sbb
popa
rol
mov
cmc
mov
pusha
or
cmps
fmul
mov
pusha
mov
push
sub
add
sbb
(bad)
mov
lods
sub
mov
cwde
idiv
mov
xchg
pop
and
xchg
cld
(bad)
mov
test
push
imul
mov
mov
popf
(bad)
xchg
movs
fsub
and
inc
add
mov
fimul
push
cmps
lock
fsubr
(bad)
frstor
inc
cmp
dec
out
mov
repnz
retf
mov
dec
sbb
in
(bad)
dec
sub
bound
jo
jg
inc
sbb
pop
es
sbb
ss
mov
fbstp
fld
sbb
arpl
les
(bad)
es
sbb
dec
cs
sub
mov
mov
jo
stos
xchg
aad
mov
mov
mov
nop
scas
lock
data16
jae
and
and
jg
add
pop
cmp
(bad)
aas
dec
add
daa
inc
add
inc
ja
push
sbb
mov
aas
lds
addr16
stos
cld
sub
pop
jecxz
inc
xchg
mov
xor
xchg
enter
add
push
or
in
adc
cmc
mov
test
jp
jg
test
lods
dec
sbb
arpl
and
cld
fisttp
aam
(bad)
sti
lods
xchg
cdq
dec
rcl
iret
or
xchg
fidiv
out
lock
mov
fstp
mov
stos
enter
mov
frstor
lods
enter
ret
xlat
test
xchg
mov
xchg
test
xchg
fs
push
mov
pusha
xor
fcom
lahf
scas
call
mov
mov
pop
jmp
fistp
(bad)
mov
cmp
pop
or
adc
cmp
mov
push
xor
pop
leave
pop
sbb
mov
loopne
add
inc
out
lods
popf
iret
xchg
lock
mov
xor
inc
or
loopne
and
fs
inc
sbb
stc
pushf
xlat
push
aam
cmc
mov
sar
or
jb
int
outs
sbb
inc
in
pop
and
lea
test
mov
xor
xchg
hlt
xchg
mov
xchg
xchg
mov
cld
mov
mov
out
pop
xor
je
push
cmp
ds
add
imul
xchg
shl
gs
add
xchg
clc
nop
std
or
jo
rol
jns
(bad)
and
and
pop
push
pop
outs
add
dec
das
or
iret
xchg
into
cmps
imul
rep
fisttp
xor
data16
popa
or
xor
dec
mov
ds
xchg
sar
inc
mov
fsub
jp
daa
dec
vmwrite
dec
in
repnz
loop
mov
mov
xor
xor
or
pop
xor
jp
dec
ds
movs
jecxz
hlt
(bad)
aad
pushf
mov
imul
fisttp
mov
(bad)
xor
sbb
pop
xor
ret
xchg
fnsave
mov
xchg
fstp
mov
test
ds
or
xor
push
dec
adc
or
dec
stc
xor
jg
push
or
ss
add
and
or
fst
in
retf
xchg
sti
xchg
int3
xor
mov
aad
(bad)
cmp
mov
(bad)
nop
fisub
pop
xchg
xchg
cld
mov
cdq
mov
in
lea
ret
pop
push
jmp
mov
mov
dec
pop
loop
jmp
dec
xor
and
retf
xchg
inc
mov
out
cmp
inc
loop
fnstsw
popa
cli
mov
xchg
xlat
mov
(bad)
stc
mov
and
cmp
loopne
icebp
mov
(bad)
fisub
ret
add
cs
ins
add
push
dec
out
sti
arpl
dec
out
mov
mov
adc
je
lahf
test
jl
mov
movs
(bad)
jnp
xchg
in
mul
rcl
mov
mov
sahf
int
sbb
gs
sbb
fistp
in
stc
and
mov
sub
gs
ret
cdq
in
mov
sbb
mov
scas
out
pop
mov
mov
std
pushf
dec
fcom
aad
mov
cmps
into
mov
sbb
sahf
call
jbe
outs
adc
mov
sub
enter
enter
jmp
pop
lock
stos
outs
cmp
ja
ds
test
ds
push
push
adc
inc
sbb
aaa
dec
add
clc
xor
push
in
das
jbe
outs
test
fmul
adc
inc
cmp
jne
test
stos
fs
fisub
or
ja
nop
shl
cmc
lods
out
adc
and
and
jae
outs
sub
fs
lds
shl
data16
and
pop
(bad)
xchg
sar
mov
xchg
sub
pop
fsubr
jmp
push
cmp
imul
push
sbb
out
xchg
fmul
pop
loop
retf
adc
aaa
dec
sbb
or
(bad)
xchg
aam
stc
je
ud0
xchg
leave
lea
mov
int3
xchg
dec
fimul
inc
mov
in
pop
mov
and
cmp
sbb
fs
push
dec
and
movs
in
movs
xchg
sbb
imul
pushf
into
sahf
stc
xchg
imul
adc
jg
ror
jb
pop
mov
fwait
retf
scas
loop
les
adc
gs
or
out
ror
je
data16
add
cmp
inc
lods
lock
out
push
fcom
xchg
frstor
pop
icebp
scas
aam
out
xlat
cdq
(bad)
xchg
sub
sti
sub
pusha
sub
outs
outs
cmovp
fld
dec
or
movs
stos
cld
scas
cmc
push
loop
sar
div
repnz
stos
lds
jno
and
outs
sub
mov
imul
aad
sbb
pop
xor
clc
cmp
jl
stc
push
sbb
loop
rcl
xchg
cmp
bound
pop
cmp
and
inc
cmp
ins
pop
inc
sbb
xchg
xor
into
cmp
jle
mov
scas
icebp
cmp
or
shr
xchg
test
jb
inc
adc
push
dec
or
xor
arpl
dec
sbb
dec
adc
xor
sub
leave
xchg
mov
or
mov
movs
fstp
pop
cmp
adc
jno
lahf
fidivr
push
add
dec
cmp
pop
jo
pusha
sub
sbb
repz
push
sbb
xor
dec
and
pop
push
sbb
int3
mov
xchg
sti
mov
js
push
and
xor
add
nop
clc
fwait
dec
sbb
inc
xor
mov
rol
xor
and
and
jbe
neg
pusha
cmp
pop
cmp
mov
les
movs
test
lods
shl
cwde
into
cmp
fs
or
add
inc
mov
mov
jne
dec
or
adc
cmp
in
add
jg
fwait
push
add
popf
mov
test
lahf
in
icebp
call
cmovbe
adc
push
jne
call
scas
in
in
xlat
adc
push
sub
xor
scas
retf
lods
in
test
call
icebp
lahf
fs
iret
xchg
fldcw
add
dec
mov
mov
pop
sbb
push
or
pusha
add
rcr
xchg
inc
mov
xchg
shl
xchg
xchg
pop
dec
push
inc
les
lods
jmp
mov
retf
das
pop
loop
leave
pusha
mov
jle
cmp
sub
xchg
iret
data16
mov
add
push
adc
in
mov
mov
pop
aas
push
push
or
hlt
or
int
out
mov
push
test
fbstp
inc
loope
outs
adc
fs
ds
leave
xchg
ror
sbb
push
sub
sub
dec
loopne
ja
sub
push
idiv
out
out
add
push
add
shr
dec
loopne
outs
add
sbb
jne
mov
lods
fimul
mov
xchg
or
lahf
into
mov
xor
adc
pop
or
xor
out
cmp
jbe
dec
jecxz
rcpps
imul
sbb
pop
fild
inc
add
mov
and
pop
repz
mov
(bad)
xchg
outs
add
jo
and
cmp
push
push
dec
pop
push
ret
outs
add
push
dec
fcom
ret
xchg
jns
aad
neg
test
xchg
fcomp
mov
xor
jne
addr16
xor
sbb
dec
test
lahf
shl
out
fwait
sar
dec
cmp
in
outs
and
adc
ins
sub
dec
or
(bad)
fisubr
ret
xchg
repnz
imul
adc
mov
movs
call
sahf
std
xchg
leave
(bad)
retf
mov
mov
out
xor
cli
mov
inc
loope
in
mov
jno
nop
aam
pushf
mov
mov
out
int
iret
mov
enter
repnz
pusha
ss
popa
pop
pop
and
jmp
add
sub
outs
xor
jmp
jmp
pop
mov
scas
cld
sub
mov
aaa
push
xchg
iret
imul
in
cld
mov
imul
jmp
xor
adc
pop
ss
cmp
ss
(bad)
fldcw
dec
add
dec
mov
mov
cmp
jge
inc
sbb
push
pop
sub
add
addr16
cmp
scas
clc
mov
mov
jp
inc
mov
bound
ror
in
data16
inc
cmp
shl
jo
pop
xchg
or
aas
cld
cdq
enter
ins
pop
dec
out
mov
mov
dec
movs
dec
in
jmp
int3
add
xor
pop
adc
xchg
sbb
pop
fadd
inc
sbb
add
in
cld
jge
hlt
test
lods
xchg
ror
mov
das
ins
sbb
mov
xchg
shr
adc
js
dec
outs
mov
push
sbb
mov
mov
lea
imul
(bad)
retf
pop
pop
pop
xor
push
sbb
outs
cmp
popf
repnz
out
ins
xchg
fwait
repnz
mov
fwait
imul
sbb
dec
outs
cmp
iret
(bad)
cmp
xchg
in
jnp
inc
pop
cmp
push
lods
push
or
mov
push
xor
ins
adc
push
push
sub
fs
jne
xor
mov
push
mov
jecxz
les
shl
xchg
ins
jecxz
les
rcl
dec
fld
das
js
jp
es
neg
inc
xor
je
dec
cmp
jle
sub
jmp
imul
arpl
es
scas
mov
push
inc
xor
dec
icebp
sahf
out
mov
call
test
test
dec
movs
shr
push
adc
and
push
daa
jb
jo
jb
xchg
lds
xchg
mov
cmp
dec
adc
out
cli
cdq
int
inc
mov
js
jmp
cli
scas
pop
(bad)
rcr
and
jae
dec
cmp
mov
xor
jl
fst
pop
adc
fistp
movs
loopne
adc
loope
repz
xor
loop
jmp
lea
mov
mov
int
and
cmp
out
retf
sub
add
jno
loop
loop
mov
div
sahf
jns
(bad)
fdiv
add
psubb
jne
ret
pop
cvttps2pi
push
adc
jp
imul
pop
je
sbb
pop
xor
sub
push
sbb
cmp
push
or
mov
add
inc
mov
mov
xor
push
pop
xlat
mov
arpl
sbb
popa
add
inc
sbb
call
dec
mov
mov
mov
les
int3
mov
mov
mov
lods
lock
mov
and
xchg
and
pop
sbb
ins
xor
cdq
retf
fwait
hlt
sahf
jbe
repnz
fwait
inc
cmps
(bad)
xchg
(bad)
xor
jnp
int
push
and
pop
(bad)
in
xchg
int
mov
pop
in
lods
(bad)
xchg
rcl
or
das
dec
cmp
push
fstp
cmps
pusha
add
jp
xchg
rol
test
push
cmp
adc
xor
dec
sub
or
ror
mov
xchg
cmp
pop
jge
jns
out
mov
fisub
xchg
mov
jo
push
sub
ficomp
inc
sub
cmp
push
sar
cmp
(bad)
xor
dec
push
loopne
push
imul
dec
std
scas
(bad)
lods
aad
pusha
es
cmp
jns
jns
jecxz
push
adc
outs
or
ins
push
arpl
push
jno
stc
cmp
ja
dec
cmps
jge
inc
or
add
inc
es
dec
mov
daa
daa
jg
jle
pop
or
xor
push
ins
jecxz
and
mov
or
pop
add
dec
sbb
push
hlt
test
xchg
(bad)
int3
mov
icebp
mov
fiadd
cwde
and
cmp
repnz
ret
sbb
add
imul
dec
loope
out
outs
ss
push
pop
lock
or
xor
jo
add
int3
sub
pop
or
enter
xor
(bad)
pusha
pop
dec
adc
sub
mov
xchg
and
push
sar
out
mov
push
ss
sub
xchg
enter
pop
cmps
and
sub
adc
jne
int
ret
adc
jp
dec
sbb
hlt
mov
in
mov
pushf
stc
or
imul
clc
fs
daa
inc
aas
ins
(bad)
mov
pop
add
js
pop
je
push
bswap
aaa
jnp
push
sub
adc
cmp
cmp
fiadd
adc
jnp
pop
adc
sahf
movs
rcr
xor
int
icebp
mov
mov
mov
mov
push
adc
ds
xlat
mov
jns
cmps
mul
pop
js
jo
(bad)
sub
push
hlt
xchg
xlat
cwde
mov
sbb
mov
leave
ss
test
cdq
sahf
int
fsub
push
jl
jns
push
push
xor
adc
loop
gs
dec
fwait
jbe
test
cwde
mov
pushf
fld
xchg
mul
xchg
(bad)
mov
aaa
sub
pop
adc
cmps
fisttp
pop
sub
jecxz
scas
retf
fs
cmp
aam
(bad)
mov
imul
push
ret
jns
jno
inc
ret
mov
bound
dec
enter
push
and
ins
sbb
js
mov
sbb
rcr
pop
setbe
test
or
ds
sti
xchg
outs
ret
mov
sbb
shr
mov
sahf
jp
cmp
test
add
call
mov
mov
jl
sub
ds
sbb
mov
test
push
call
jo
daa
arpl
cmp
jno
mov
mov
add
(bad)
adc
mov
mov
mov
xchg
sahf
lds
mov
jmp
cwde
std
or
fistp
loope
repz
sahf
dec
loopne
into
(bad)
fbstp
fs
push
dec
sbb
js
sub
in
loopne
repnz
rcl
hlt
mov
mov
cmp
pop
ss
mov
mov
sahf
jns
fwait
retf
cli
jl
cmp
call
cmp
jns
push
fwait
and
mov
fwait
jmp
jmp
test
or
jnp
dec
out
mov
xchg
(bad)
scas
movs
fldcw
dec
loop
out
mov
mov
ds
aas
pop
adc
xor
inc
retf
enter
into
dec
pop
and
enter
sbb
cwde
into
lea
pop
sbb
jl
xchg
rol
in
cmp
scas
mov
pop
daa
es
dec
daa
inc
loopne
pop
jmp
mov
sbb
pop
sub
push
xchg
mov
cwde
sbb
(bad)
fstp
cmp
inc
fld
jmp
shl
or
imul
out
stc
xchg
rcl
loop
mov
fbld
or
adc
bound
popa
add
out
adc
in
stos
movs
adc
jo
push
xor
inc
in
mov
and
sbb
add
and
push
pop
jmp
pop
emms
loopne
fwait
stc
mov
(bad)
test
shr
inc
xor
cmp
cs
(bad)
cmp
sbb
dec
hlt
nop
mov
mov
rcr
mov
add
(bad)
jbe
pop
xchg
mov
xchg
in
cld
add
push
test
cmp
xor
cdq
inc
inc
cmp
dec
push
push
and
push
js
and
push
or
addr16
fwait
into
imul
push
fmul
dec
push
js
or
push
jmp
xchg
cld
arpl
dec
push
daa
sbb
jg
ret
stos
and
repz
aad
rol
(bad)
retf
mov
xor
fisttp
dec
sub
or
mov
test
cmp
xor
sbb
loopne
sub
jb
dec
nop
aam
inc
pop
jmp
(bad)
jmp
dec
and
lods
sbb
cld
inc
popf
mov
push
sub
jae
adc
jns
out
push
pop
pop
pop
ror
scas
xchg
adc
rep
test
mov
not
movs
push
aad
push
out
out
repnz
je
cmp
sbb
mov
push
mov
mov
jo
test
in
std
jge
xor
test
push
mov
cmc
jnp
aaa
(bad)
xchg
iret
stos
push
lock
mov
test
popf
mov
(bad)
xor
nop
pop
stc
mov
jmp
and
or
pusha
enter
or
aas
sub
ss
cmp
pop
in
aam
int3
das
jmp
jne
add
bnd
cld
rol
int
pushf
jge
jmp
push
jle
push
aad
movs
push
push
bound
cdq
test
push
test
shl
mov
lahf
ds
cdq
icebp
dec
jbe
ret
xor
mov
jns
pop
cwde
jp
ret
fsub
jne
inc
cmps
mov
and
(bad)
mul
(bad)
gs
xchg
pop
enter
mov
mov
mov
xor
push
or
cmps
cmp
cmps
jnp
mov
fs
sbb
inc
cmp
xor
xchg
pushf
add
cmps
neg
dec
pop
fxch
int3
jns
push
and
lea
or
enter
inc
pop
fsubr
in
add
mov
jne
movs
sub
(bad)
add
pop
inc
xchg
sub
scas
out
arpl
sbb
sahf
inc
aam
and
cmp
mov
pop
nop
cmp
sahf
ss
xor
jp
mov
addr16
adc
mov
aam
call
sub
jns
mov
repz
lds
cmp
push
(bad)
lods
xor
inc
xchg
int3
int
iret
cmp
loopne
lods
mov
xchg
dec
add
push
add
inc
out
dec
rol
repnz
lods
xchg
movs
ins
jge
(bad)
push
test
xor
cmps
cli
(bad)
dec
sar
in
mov
push
jp
mov
mov
mov
daa
mov
fst
jns
xor
cmp
int
ins
ja
repz
enter
addps
inc
push
lds
mul
mov
fcmovbe
repnz
stos
mov
adc
sub
or
jmp
jb
gs
popf
adc
repnz
sbb
and
cwde
(bad)
int3
push
jae
arpl
jg
xchg
xor
(bad)
adc
jecxz
stc
idiv
push
dec
jp
mov
in
pop
cdq
push
push
cmps
sahf
adc
mov
shr
das
std
dec
push
cmp
imul
push
add
je
clc
nop
leave
scas
ins
mov
aas
push
mov
xchg
sbb
inc
push
push
movs
jae
cld
xlat
add
pushf
call
repnz
pusha
xor
push
lods
push
imul
pop
arpl
and
sub
mov
inc
xor
enter
stos
adc
cmp
mov
out
into
mov
mov
fst
je
pushf
and
sar
or
sbb
fwait
push
and
inc
movs
inc
out
jmp
add
ins
fwait
pop
sti
les
jmp
bound
push
fisub
popf
(bad)
and
dec
div
rcr
push
jbe
mov
popa
je
mov
out
imul
fistp
dec
add
xor
jb
or
cmps
gs
xchg
adc
cwde
and
add
retf
push
cmp
cmp
xor
mov
jecxz
test
iret
cs
jg
fcomp
leave
sub
pop
enter
xchg
mov
xor
xor
xor
and
fild
sbb
add
cmps
int3
add
jnp
mov
fwait
fwait
mov
push
mov
pop
and
cmp
cmps
cwde
push
inc
sub
loopne
adc
fistp
sti
retf
lods
push
fwait
cs
ds
jae
aam
dec
mov
inc
cs
jnp
jl
xchg
xchg
dec
ss
mov
aaa
xchg
out
lock
outs
ret
push
and
and
ret
addr16
mov
xchg
out
push
cmp
jno
sahf
pusha
inc
dec
jmp
jge
jno
pop
xchg
adc
daa
xchg
cmps
cdq
retf
int3
adc
push
jns
sub
jb
(bad)
mov
push
inc
dec
xor
fucomi
sbb
push
pop
aam
xor
cmp
dec
enter
pushf
xchg
mov
jge
xchg
popa
or
lods
jnp
jns
cmps
mov
mov
test
add
pop
or
and
fnsave
movs
xchg
pop
jmp
int
loopne
jne
xchg
xor
daa
mov
ins
xor
xchg
loop
cld
sbb
fisub
pop
in
sub
push
pop
xor
dec
and
ja
(bad)
push
leave
aaa
add
mov
call
inc
retf
jne
out
nop
addr16
fisubr
test
push
icebp
repnz
jne
add
pop
push
jle
pop
xor
inc
sub
nop
inc
sub
(bad)
retf
and
call
mov
stc
mov
repz
scas
sub
inc
not
nop
(bad)
cli
sub
clc
dec
das
cli
and
sar
mov
retf
cli
lahf
pop
adc
pop
movs
das
xchg
pop
ror
kandnb
sahf
loop
push
adc
push
scas
aam
icebp
xor
mov
icebp
scas
mov
jge
xor
ficom
push
mov
movs
adc
or
pop
hlt
or
sbb
pop
jb
add
cli
fwait
sub
xchg
cmps
add
add
pop
shl
rcl
gs
loope
add
add
jp
retf
and
xchg
shr
int
or
cli
fsubr
jne
mov
(bad)
(bad)
ret
xchg
out
dec
sbb
sbb
mov
push
cmps
mov
addr16
pop
and
adc
test
lahf
jb
imul
iret
xor
dec
repnz
in
fsubp
rcl
add
cwde
lds
ret
cmp
pop
mov
adc
es
not
cmc
sbb
sti
dec
scas
mov
and
sbb
nop
addr16
xor
sub
push
jge
mov
cmp
jp
sub
xlat
enter
mov
int
enter
popf
xchg
xor
js
adc
dec
into
int3
aaa
cdq
das
and
mov
fsub
arpl
xchg
cli
sbb
ror
pop
rcl
je
pop
mov
cmps
xor
mov
mov
mov
cmps
mov
mov
repnz
lods
loope
push
xchg
adc
daa
call
jns
xchg
pop
pop
cli
jmp
lods
hlt
dec
clc
and
push
sahf
scas
mov
mov
cmp
push
pop
inc
fld
jno
inc
mov
push
std
pop
cmp
fstp
les
pop
pop
mov
enter
out
xchg
add
loopne
mov
fcmovne
and
add
lods
jl
or
and
(bad)
sbb
test
push
ds
rol
cmc
pop
std
retf
ja
cdq
(bad)
xlat
or
addr16
mov
int
leave
cli
not
xchg
imul
sub
jne
xor
jne
and
jb
ret
inc
xor
xor
iret
sub
ds
add
dec
mov
outs
mov
inc
inc
inc
cmp
daa
push
mov
fdiv
add
sub
mov
push
jae
xchg
mov
mov
(bad)
cmp
add
psubq
dec
mov
not
jmp
dec
stos
rcl
cmp
(bad)
fsubr
cmps
push
aaa
mov
mov
adc
sbb
jo
fwait
daa
inc
mov
shl
je
sbb
pop
mov
aad
(bad)
ja
mov
mov
cmc
jge
push
gs
retf
xchg
or
dec
rol
push
stc
mov
mov
xchg
scas
hlt
faddp
add
mov
fwait
dec
(bad)
(bad)
jae
out
dec
and
bound
repnz
or
cmp
push
ds
call
sbb
sub
xor
inc
mov
mov
enter
add
fisttp
scas
push
ins
push
cld
inc
jo
push
cmc
jno
clc
iret
xchg
cmp
cmp
aas
test
mov
adc
pop
ins
sbb
ins
loope
mov
test
sti
movs
packuswb
jmp
imul
pusha
and
fidivr
aaa
and
mov
adc
mov
and
jmp
ret
sub
out
mov
(bad)
xor
dec
popf
add
adc
dec
cmp
push
inc
adc
shl
scas
sub
lods
xlat
jo
addr16
cwde
outs
dec
inc
into
xchg
mov
push
sub
mov
fsub
les
xchg
test
imul
jmp
cmp
imul
cld
and
push
xchg
push
js
jmp
aas
jl
cmps
cwde
cmp
fdivr
dec
xor
mov
sar
in
jg
jp
(bad)
or
pop
paddd
xchg
aam
mov
push
dec
outs
loope
xor
mov
(bad)
iret
or
pop
out
jnp
jmp
add
lods
or
loope
pop
loopne
push
fmul
cmp
or
mov
inc
lea
leave
mov
push
pop
push
enter
xor
mov
cli
loop
and
sbb
jl
mov
ins
xchg
jbe
mov
jno
xchg
mov
mov
aaa
jns
dec
cwde
push
jmp
in
adc
mov
(bad)
sbb
cwde
mov
sbb
mov
cld
push
mov
cdq
cmp
and
xor
pop
mov
xor
mov
imul
scas
fdivrp
cmps
retf
adc
mov
sbb
cmp
(bad)
jne
adc
push
cmp
xchg
sbb
imul
fucomi
pusha
out
loopne
mov
mov
cmc
mov
lea
or
jbe
dec
push
repnz
push
sar
or
inc
cs
(bad)
xchg
sub
mov
(bad)
aas
cmc
in
data16
bnd
xchg
dec
mov
outs
test
cs
lods
in
dec
(bad)
mov
rcr
cdq
ret
sbb
outs
into
stos
inc
pop
ret
xchg
stc
xor
das
out
push
mov
int
repz
pop
nop
dec
arpl
adc
push
mov
in
mov
xchg
sahf
jl
ftst
xchg
std
fnsave
pop
lock
mov
push
dec
push
mov
ins
call
inc
cld
dec
mov
ficomp
xchg
cmp
inc
call
into
and
adc
fild
adc
aam
pusha
dec
hlt
in
add
retf
test
dec
add
test
dec
pop
div
outs
sbb
xchg
sub
(bad)
mov
xchg
mov
rol
jle
loope
(bad)
aaa
data16
sub
aad
popa
nop
push
imul
jmp
sahf
jo
ret
and
xchg
push
xchg
mov
mov
push
jb
pop
sbb
jns
jne
mov
or
jmp
push
mov
adc
jp
jl
sahf
push
hlt
jne
rcr
gs
push
dec
pop
loop
jmp
gs
push
adc
out
or
fwait
lods
mov
retf
push
cmp
pop
adc
dec
js
mov
clc
dec
pop
adc
test
xor
pop
pusha
retf
sbb
lods
xchg
xchg
pop
sbb
adc
nop
(bad)
lods
cdq
jecxz
ins
stc
mov
adc
and
ja
mov
and
dec
retf
adc
mov
outs
fstp
jle
mov
movs
or
or
mov
inc
jno
aas
and
mov
sbb
mov
adc
leave
inc
fisubr
jp
sub
and
js
push
mov
sub
inc
test
outs
cmp
inc
mov
mov
sbb
cmps
xchg
je
sbb
mov
ret
mov
fistp
jge
lahf
shl
out
or
pop
mov
in
sub
test
(bad)
cli
call
dec
nop
inc
inc
inc
sbb
add
push
scas
pop
inc
cmps
xor
mov
ins
jle
sub
inc
mov
inc
mov
adc
adc
mov
and
jmp
xchg
inc
add
or
pusha
push
mov
stc
sub
stos
and
mov
add
leave
adc
sub
adc
mov
imul
mov
cli
pop
pop
pop
pop
mov
adc
mov
dec
out
out
and
xor
and
mov
rcr
(bad)
jecxz
stos
shl
ds
stos
sahf
push
shl
fisttp
gs
mov
aaa
mov
call
dec
inc
mov
mov
dec
dec
imul
mov
inc
imul
cmp
les
inc
push
add
and
inc
pop
int3
mov
adc
sbb
inc
enter
cld
pop
dec
out
mov
por
xchg
mov
pushf
mul
adc
clc
and
mov
adc
in
add
dec
mov
cmps
cmps
or
lods
fcomp
in
pop
(bad)
sub
jne
add
lock
sahf
cmp
std
fdivr
outs
test
leave
xor
mov
jb
mov
repz
ret
int3
add
and
ss
xor
or
jl
(bad)
mov
shl
push
jo
mov
xlat
lods
ficomp
iret
enter
pop
xor
sbb
mov
(bad)
push
xor
xchg
mov
popa
pop
js
sub
sbb
and
fistp
arpl
clc
data16
aam
inc
mov
and
dec
and
sub
dec
dec
mov
aam
lea
enter
leave
pop
push
ret
call
cdq
mov
push
enter
mov
or
imul
into
jae
fild
fs
inc
cdq
dec
jecxz
test
loope
jnp
xor
push
(bad)
outs
mov
cmps
cmp
mov
lahf
ss
(bad)
adc
jno
mov
pop
inc
xchg
push
rcr
mov
or
leave
cmp
adc
adc
aaa
push
cmp
fild
xchg
(bad)
or
fisub
inc
inc
or
lock
jl
add
movs
xor
jmp
add
push
cmps
xor
mov
test
or
cmp
jmp
xor
into
(bad)
jle
dec
std
xchg
addr16
pop
push
dec
addr16
xchg
out
scas
(bad)
pop
cld
jmp
ja
mov
add
adc
jle
fnstsw
call
(bad)
sti
cmp
add
and
retf
fadd
popf
sub
call
stos
fiadd
into
clc
add
movs
cld
dec
and
xchg
mov
out
sbb
dec
pop
fisttp
inc
out
(bad)
mov
daa
xchg
sahf
cmp
mov
jp
ret
ret
inc
fwait
sti
popf
leave
adc
push
pushf
sub
ror
dec
bound
inc
aad
shl
xlat
dec
push
push
loopne
call
push
push
jbe
lods
lock
loop
push
mov
adc
loopne
ds
rcr
int3
and
jmp
cmp
or
mul
mov
idiv
aas
fidiv
inc
inc
movs
inc
fabs
or
sub
setb
cmp
push
pop
cmp
pop
dec
ins
mov
inc
neg
gs
rcl
add
or
push
test
mov
ret
popa
shl
mov
xchg
ret
es
sti
movs
fstp
mov
sahf
jae
dec
jno
cmp
add
out
mov
int3
or
cld
xor
fidivr
aad
test
xor
popa
cli
int
add
arpl
xor
nop
movs
stos
dec
(bad)
mov
mov
clc
cs
xchg
(bad)
out
int
sub
arpl
test
jmp
jne
push
sub
ins
pushf
dec
jp
xor
push
scas
aaa
add
mov
jo
test
mov
out
ins
sub
mov
mov
pop
mov
mov
push
rol
mov
pop
cmp
les
pop
pop
pop
jecxz
dec
and
aaa
pop
xchg
movs
inc
lods
int
jecxz
lock
pop
out
lahf
push
(bad)
xor
dec
popf
jmp
xchg
push
mov
mov
pcmpeqw
imul
dec
mov
clc
mov
add
stos
add
fsubr
retf
or
pop
adc
jp
pop
lock
shl
in
(bad)
xchg
je
ja
xchg
push
adc
sbb
jp
xor
xchg
fyl2x
retf
pop
das
sub
nop
loopne
shr
pop
shl
or
jge
retf
inc
or
and
call
push
stos
cmps
sti
xchg
sub
(bad)
sub
pop
adc
cli
mov
mov
imul
jecxz
xchg
es
mov
pop
fs
inc
sbb
add
and
sbb
lahf
sbb
aas
aas
mov
cmp
jns
adc
cmc
cmovs
dec
mov
and
call
stc
pusha
lea
push
or
in
arpl
cmc
ins
mov
mov
push
(bad)
arpl
cmp
mov
adc
xchg
das
cmp
test
into
push
and
and
sti
ds
sti
movs
jl
outs
test
and
xor
ror
lock
mov
push
add
cmc
xor
call
mov
mov
push
xor
cmp
or
sub
push
popf
shr
jmp
mov
in
push
jmp
sub
xchg
outs
jns
and
mov
adc
std
shl
imul
jnp
hlt
(bad)
adc
mov
sti
out
pop
dec
xor
and
retf
rcl
jmp
mov
or
loope
mov
stos
sbb
stos
xor
cmp
add
mov
inc
int
or
xchg
int
jb
inc
ss
jns
cmps
(bad)
pop
shl
jp
mov
hlt
addr16
data16
xor
push
sahf
jo
cmps
inc
push
popa
das
dec
popa
femms
jg
out
sti
add
shl
pop
xor
scas
clc
mov
jmp
fld
mov
xchg
loop
mov
ret
adc
cwde
cmps
pop
outs
jno
icebp
fwait
mov
mov
sti
hlt
(bad)
sbb
outs
mov
ja
pop
data16
ficomp
in
xchg
mov
test
test
mov
ss
jmp
adc
dec
gs
leave
xor
mov
xchg
push
push
inc
inc
mov
adc
outs
jle
mov
iret
push
sbb
jmp
sbb
adc
(bad)
mov
sbb
nop
sub
inc
cmp
int3
(bad)
shl
bound
inc
mov
pushf
inc
pop
xor
arpl
loop
out
es
pop
jne
push
add
or
test
xchg
js
mov
mov
popa
mov
pop
cdq
enter
or
or
(bad)
adc
mov
and
ja
hlt
push
pusha
push
popa
cmp
xor
xor
xor
dec
push
aaa
rol
cmc
mov
rcl
add
lods
xor
mov
mov
pusha
aas
add
xchg
push
add
cmp
xor
mov
das
sbb
jge
repnz
or
xchg
movs
sub
mov
sub
shr
movs
cld
mov
add
outs
in
shl
jg
push
in
cmp
add
mov
xchg
iret
sbb
xor
ror
xor
aam
jae
sub
inc
add
add
aam
dec
or
xchg
call
adc
test
fdiv
gs
adc
push
pushf
stc
test
pop
in
add
lahf
mov
mov
ret
jnp
pop
push
movs
fiadd
cmps
jl
pop
cmps
mov
dec
mov
icebp
(bad)
jne
push
mov
pop
into
loope
ins
sub
es
out
add
in
in
mov
js
pop
lahf
div
sub
xchg
sbb
mov
add
adc
add
jecxz
mov
sub
out
inc
mov
mov
(bad)
sbb
or
out
and
mov
add
sahf
pop
movs
jl
pop
mov
jbe
jle
frstor
enter
mov
popf
ja
pusha
(bad)
enter
rcl
xchg
cmp
test
mov
mov
(bad)
outs
jns
rcl
jns
in
mov
inc
movs
cmc
sahf
dec
xor
int3
movs
push
rcl
mov
adc
push
aam
dec
and
fdiv
mov
movs
lds
in
sbb
stos
cmps
imul
test
push
sub
mov
mov
push
ucomiss
xchg
int
adc
jmp
mov
(bad)
xchg
mov
ret
jae
call
add
cs
xor
(bad)
les
out
sub
fidivr
mov
rol
adc
sbb
mov
adc
in
imul
xchg
and
adc
adc
jmp
pop
fmul
pop
sbb
das
loopne
scas
inc
add
outs
mov
bound
dec
lods
sbb
xchg
aad
or
inc
add
ret
xchg
loop
test
lds
call
dec
mov
push
fwait
(bad)
scas
fwait
mov
outs
loope
jno
xor
mov
pop
call
cmps
(bad)
call
sub
cmp
rol
xor
scas
cli
jge
add
jge
cld
mov
aaa
jmp
stos
jno
push
xchg
(bad)
pushf
jmp
sbb
in
lds
pop
jecxz
retf
rcr
jle
repnz
(bad)
es
das
jnp
lods
fist
push
sahf
sti
stos
push
sbb
jb
add
inc
ror
outs
(bad)
out
aaa
inc
xlat
adc
ret
fwait
or
cmp
inc
arpl
inc
inc
or
xlat
fwait
and
dec
mov
sub
jle
ds
xchg
mov
fidiv
ss
mov
mov
out
test
pop
scas
je
inc
sti
xchg
ret
jne
sbb
dec
out
mov
movs
mov
mov
or
lds
push
push
ja
push
rol
shl
mov
stc
mov
test
daa
inc
dec
ret
mov
stos
outs
adc
ss
push
inc
cmp
adc
mov
cmps
jmp
and
scas
ret
mov
and
(bad)
mov
fsub
stc
sbb
inc
xor
cs
dec
inc
mov
cdq
add
dec
push
xchg
inc
xor
movs
out
call
jmp
aaa
jae
jle
dec
sub
arpl
fistp
push
popa
adc
lds
push
adc
out
les
into
mov
pop
lds
push
sbb
pop
push
imul
cmp
(bad)
pop
int
fimul
jmp
dec
mov
cmp
or
movs
jecxz
sar
dec
pop
sbb
cmp
mov
popa
sub
int
not
dec
aas
imul
mov
cmc
lods
out
movs
lods
enter
pop
idiv
pop
sti
and
mov
mov
test
js
div
ins
(bad)
clc
scas
sbb
lods
jmp
inc
pop
(bad)
mov
pop
repz
xchg
pop
nop
ret
xchg
imul
xchg
mov
and
xchg
mov
jecxz
loope
movs
je
mov
pop
rcl
call
sub
adc
mov
mov
out
fstp
loope
scas
jnp
dec
ss
fidiv
outs
mov
mov
push
cld
xchg
test
or
xor
in
cwde
iret
mov
dec
sahf
and
mov
mov
and
add
mov
mov
sbb
shr
inc
xor
mov
lods
mov
xchg
leave
lahf
fstp
and
xchg
fbstp
and
xor
call
mov
jbe
out
test
imul
mov
es
ret
xor
gs
fbstp
mov
in
cmc
mov
xor
sub
pop
arpl
stos
out
daa
or
mov
aas
pop
(bad)
push
aam
out
mov
retf
jp
dec
xchg
in
mov
dec
not
inc
add
and
shr
mov
mov
aas
dec
sbb
mov
xchg
lods
mov
inc
fsubr
call
adc
and
in
(bad)
nop
sar
jecxz
call
sub
fisub
out
mov
mov
pop
dec
cli
inc
stos
push
test
mov
mov
dec
lds
sub
pushf
scas
movs
in
xor
lods
movs
shl
add
loop
clc
(bad)
(bad)
test
dec
out
mov
pop
call
push
adc
fwait
into
mov
stos
jmp
js
pop
addr16
je
push
mov
fild
mov
sub
dec
xchg
dec
aas
imul
pop
adc
dec
loope
in
adc
mov
push
das
jne
and
and
mov
outs
or
test
es
stos
std
dec
lock
ret
inc
adc
ret
mov
les
outs
daa
mov
jnp
call
jg
cdq
jmp
push
dec
mov
dec
movs
dec
cmp
adc
pop
jge
xor
ins
add
mov
mov
ins
cmp
xor
adc
xor
xor
xchg
ret
inc
push
push
inc
xor
test
loop
pop
and
adc
pop
adc
enter
jae
cmp
inc
add
lahf
not
je
push
sub
sbb
jmp
xor
mov
test
fsub
mov
in
xchg
mul
push
pop
sub
in
(bad)
cmps
xlat
loopne
loop
mov
mov
jno
inc
adc
dec
cmp
mov
mov
and
mov
pop
sub
mov
adc
or
mov
ror
dec
push
mul
pushf
les
cli
lods
out
jae
dec
mov
jne
push
idiv
xchg
mov
mov
cs
lods
jo
iret
cmps
in
cmps
out
jae
push
ficom
ds
fiadd
sbb
leave
mov
add
loope
add
mov
sbb
out
mov
or
sub
add
xlat
inc
sbb
ins
jo
jnp
adc
and
(bad)
jae
(bad)
aam
sbb
push
div
mov
adc
fisub
mov
cld
fs
mov
pop
dec
or
mov
xchg
add
sub
inc
lods
cli
sbb
into
cwde
fdivr
cwde
in
mov
outs
sbb
jmp
mov
cmc
mov
js
divps
mov
div
cmc
and
mov
sub
cld
mov
pushf
mov
mov
loopne
dec
push
in
lods
mov
adc
or
ins
aas
jnp
(bad)
mov
test
pop
aas
jle
int3
mov
into
test
mov
imul
sahf
inc
ja
gs
push
and
pop
sub
nop
fcomp
mov
mov
push
push
inc
pop
dec
cmp
or
mov
push
ret
pop
sub
adc
pop
cmps
iret
lods
icebp
test
in
mov
xchg
sbb
and
adc
add
jle
(bad)
mov
dec
jmp
mov
stc
dec
dec
pop
pop
repnz
fadd
sub
je
movs
retf
fdivrp
xchg
cld
lahf
movs
sub
mov
mov
in
loope
repz
ja
mov
add
push
jp
enter
loope
add
into
xchg
hlt
movs
mov
aam
in
jecxz
xor
cs
dec
cmp
and
pusha
adc
jae
or
add
scas
lds
inc
xor
dec
mov
push
es
dec
cmps
and
add
outs
or
test
dec
or
data16
cld
inc
adc
(bad)
jns
dec
popf
jmp
retf
adc
cld
sub
jo
cmp
mov
sub
aad
sbb
sti
xchg
lock
enter
imul
maxps
out
xchg
jl
jb
inc
rcl
cmp
push
ds
loope
not
inc
sub
and
inc
sub
dec
xor
cmp
add
xlat
(bad)
mov
inc
and
movs
data16
test
mov
idiv
fwait
cmp
mov
cmp
mov
sti
adc
or
in
imul
mov
pop
sbb
int3
movs
data16
xchg
(bad)
stc
xchg
cwde
jae
(bad)
mov
stos
fisubr
jae
push
loope
push
rol
mov
fidivr
loop
retf
pop
js
add
mov
movs
jae
shl
adc
inc
sub
mov
sub
pusha
leave
or
xchg
pop
sbb
pop
stc
and
fnstenv
inc
add
and
lock
add
in
rcr
xchg
sti
nop
xchg
jge
(bad)
cld
test
imul
enter
add
mov
and
sub
pop
iret
add
cmp
jmp
mov
test
mov
repz
sti
jno
pop
(bad)
dec
adc
test
mov
jmp
sbb
int3
movs
(bad)
mov
push
sub
iret
lahf
fstp
test
fmul
cmp
bound
xor
dec
cmp
jne
(bad)
loopne
aam
daa
scas
out
xchg
inc
cmp
push
push
sub
and
push
adc
into
mov
mov
and
addr16
sar
clc
push
dec
pop
je
sub
mov
lock
imul
test
and
adc
or
stos
leave
adc
int3
(bad)
mov
adc
leave
sbb
and
cmps
inc
movs
or
push
mov
and
add
stos
jmp
fnstsw
out
out
(bad)
jge
mov
shr
jmp
pop
xchg
xchg
add
push
test
inc
adc
mov
xor
pushf
enter
int3
xor
pop
xchg
ins
cmp
imul
pop
add
xchg
add
xor
and
cmps
xlat
adc
sahf
cmc
xchg
pusha
adc
lods
jo
jo
and
lahf
into
aad
aam
push
neg
mov
shr
xlat
int
iret
jo
push
or
xchg
stc
scas
push
mov
rcr
jns
jne
test
dec
push
pop
mul
stc
js
jb
xchg
or
sbb
scas
(bad)
movs
call
fldenv
mov
push
dec
retf
sbb
mov
mov
dec
je
push
(bad)
fidivr
out
ret
nop
aam
pop
enter
push
aas
fimul
jmp
in
pop
push
adc
mov
popf
jmp
mov
jbe
pop
sbb
xchg
ret
dec
push
and
xchg
nop
fwait
jmp
adc
pusha
cmp
sub
jne
push
pop
inc
fs
inc
call
mov
xor
ss
fisubr
scas
push
pop
or
jge
stos
or
inc
retf
jb
mov
pop
sub
cs
mov
pop
inc
cld
enter
xor
sub
dec
or
test
add
jns
(bad)
stc
mov
sbb
not
clc
adc
push
mov
xchg
test
and
xor
and
mov
mov
retf
bound
push
or
add
ins
stos
arpl
fwait
enter
pop
mov
jae
adc
xchg
in
mov
retf
test
dec
or
nop
mov
mov
not
bound
jle
and
cmc
add
push
xchg
stc
(bad)
fabs
test
jecxz
cs
or
mov
inc
dec
jb
jns
xor
shl
mov
adc
sbb
out
dec
sbb
push
adc
mul
sbb
xlat
jl
adc
dec
std
push
lahf
pop
pop
sbb
movs
aaa
popa
and
inc
inc
xor
outs
ror
mov
cmp
xor
push
pop
mov
test
ret
dec
xchg
inc
inc
sub
add
fidiv
inc
test
sahf
loop
shl
lahf
push
sub
add
sbb
int
mov
mov
adc
call
jmp
data16
xor
in
lds
jae
cmp
hlt
jne
jge
xor
xor
sbb
retf
xchg
in
ficomp
adc
or
xor
push
xor
fs
adc
add
pop
sti
and
pusha
or
(bad)
cli
ds
jne
cmp
(bad)
fiadd
adc
pop
dec
leave
das
les
aas
imul
shufps
in
test
jb
cmp
adc
xchg
addr16
ffree
dec
push
dec
lea
push
or
add
jp
dec
and
push
cmp
retf
dec
call
mov
cs
sbb
dec
mov
imul
mov
push
call
fmul
and
inc
test
jecxz
les
aaa
fs
dec
(bad)
das
jmp
push
add
popa
cmp
xchg
xchg
jno
cmp
cmps
cmps
jae
jno
sbb
fwait
or
mov
cmp
stos
jle
in
fwait
rol
push
sbb
jmp
mov
sub
pusha
mov
jo
pop
cmp
jg
pop
ins
loopne
mov
mov
adc
(bad)
fistp
add
add
(bad)
jb
adc
xor
cmp
inc
push
outs
jns
sub
and
cmp
mov
add
push
fldcw
sub
in
mov
jmp
cmps
cmp
sbb
sahf
sti
stos
cmp
dec
cmp
mov
repnz
add
fistp
xor
mov
imul
(bad)
fiadd
mov
cmps
jmp
ins
add
sbb
cmp
xchg
push
movs
fst
jl
add
iret
push
xchg
and
mov
pop
into
dec
xchg
sub
pop
mov
xor
xor
lods
cld
xchg
and
push
retf
les
in
shl
inc
sub
add
mov
sub
xor
inc
test
adc
jmp
fmul
pusha
(bad)
sub
imul
out
push
and
mul
sbb
dec
pushf
or
fld
xor
pop
push
adc
pop
call
imul
mov
sub
pop
mov
inc
xor
into
sub
hlt
retf
scas
call
aam
in
(bad)
push
(bad)
in
shl
test
cwde
sub
ret
adc
div
adc
mov
push
fwait
lds
cmp
push
pop
sbb
mov
out
xchg
iret
pop
push
int3
das
cld
ret
cs
add
cmps
lock
icebp
push
or
pop
mov
pop
or
mov
out
dec
mov
shl
gs
cmp
in
in
out
mov
pop
jge
test
dec
or
arpl
jge
add
les
mov
fs
jae
fdivr
push
add
jmp
mov
xor
and
adc
mov
adc
test
aaa
pop
loopne
aam
xor
ret
jno
inc
unpckhps
shl
adc
in
stos
out
pop
aas
inc
sbb
and
jmp
sub
xor
ret
xchg
stc
lock
stos
loop
dec
sbb
fisttp
jmp
cmc
scas
xor
xor
sbb
dec
adc
or
dec
sbb
bound
es
push
bound
jo
sti
lods
fist
xchg
call
outs
push
xor
dec
inc
mov
mov
xchg
into
imul
sti
cwde
test
mul
lods
(bad)
dec
pop
sub
ins
sub
test
retf
dec
push
adc
mov
mov
jbe
sbb
push
mov
mov
mov
xor
jle
cmps
movs
ret
pop
inc
sub
sahf
call
imul
sub
jecxz
xchg
call
ret
xchg
rcl
aad
aad
pushf
shl
int
es
movs
hlt
lahf
(bad)
fsubr
push
out
loope
fs
(bad)
sub
pop
add
outs
mov
lahf
(bad)
(bad)
jae
sbb
test
mov
fsub
cmp
mov
nop
push
shl
out
mov
(bad)
rcr
js
push
add
mov
test
addr16
mov
pop
sbb
jecxz
ror
movs
sbb
popa
popa
leave
mov
sar
xor
mov
cmc
movs
div
aad
aam
sbb
imul
pop
adc
sbb
mov
cli
lods
call
inc
dec
aas
push
fcomp
xchg
cmovne
jp
into
sub
les
call
mov
or
fldenv
ins
push
cmc
mov
mov
call
ret
xchg
adc
movs
in
in
sbb
jb
into
mov
lods
jb
and
sbb
jg
jno
jmp
fadd
lods
stc
mov
mov
data16
adc
cmc
adc
les
jae
push
add
sub
inc
div
dec
add
xor
dec
in
test
xor
mov
(bad)
popf
jns
jbe
nop
mov
mov
adc
adc
aad
loopne
mov
loope
jae
or
loopne
and
xchg
cwde
rol
xor
and
cmps
fadd
pushf
push
push
adc
rol
push
pop
jo
jne
xchg
jne
mov
sub
push
daa
jae
test
cmps
jecxz
scas
retf
jge
push
jp
dec
or
fnsave
sub
jmp
inc
push
adc
sbb
add
fisttp
cmp
jbe
mov
and
xchg
or
dec
push
dec
xchg
fnsave
sbb
loopne
repz
stos
or
fstp
cld
(bad)
cli
mov
pop
pop
in
daa
inc
adc
lods
sub
outs
cs
into
dec
nop
push
jle
jp
dec
mov
pop
jmp
sub
add
cmp
mov
mov
jle
test
test
push
add
and
enter
(bad)
cmp
adc
(bad)
cdq
cli
addr16
inc
pop
es
rol
or
nop
mov
push
dec
cmp
aaa
add
jno
adc
or
sti
mov
jno
ins
mov
lods
std
out
enter
dec
push
add
les
push
fld
dec
xor
js
sbb
and
out
out
or
xchg
xchg
fsubr
aas
mov
nop
hlt
movs
adc
int3
pop
sub
cmp
add
scas
jmp
lds
mov
int
in
or
int
(bad)
inc
or
std
mov
(bad)
and
enter
mov
out
stc
stos
add
out
mov
mov
fisttp
shr
push
adc
in
push
dec
lods
ret
shl
push
xlat
xchg
cmps
pop
jb
test
xchg
or
adc
inc
cs
imul
xchg
lock
sub
lea
xlat
add
lods
dec
sub
xlat
mov
mov
shl
data16
mov
mov
and
cmp
sub
pop
pop
dec
fldenv
cmp
sub
mov
mov
and
adc
jmp
and
or
leave
pusha
mov
add
pop
mov
xor
call
neg
mov
xchg
lods
jno
ret
cmp
(bad)
std
sahf
std
je
xchg
jo
or
cmc
popf
jge
and
es
jns
out
aas
dec
mov
(bad)
retf
sbb
mov
rol
or
daa
jmp
inc
mov
mov
jmp
push
xchg
jns
std
ret
out
or
jmp
scas
mov
mov
jae
pop
push
jecxz
sbb
mov
dec
ror
pop
repnz
loope
inc
sub
add
adc
and
sbb
sbb
inc
lock
xchg
ss
cs
gs
cs
pop
inc
cmp
xchg
sub
ret
jp
xor
outs
add
mov
sahf
sub
js
xchg
sub
sbb
mov
retf
xor
cmp
xchg
adc
and
adc
jnp
sahf
sub
das
rcr
popa
jns
int
push
sbb
ror
je
neg
add
cdq
adc
jg
adc
pop
fdivr
inc
cmp
or
ficom
aas
xchg
cmp
mov
sbb
sub
inc
inc
int3
arpl
pop
and
sar
lods
lahf
popf
pop
add
shl
hlt
fwait
inc
inc
mov
cmc
mov
pop
out
mov
in
(bad)
xor
dec
call
lds
aaa
aaa
fisttp
mov
(bad)
jbe
div
xchg
(bad)
(bad)
int3
mov
das
jne
lock
adc
push
aad
mov
pop
mov
test
mov
popa
mov
add
int
fsub
dec
pop
arpl
push
jp
inc
fimul
mov
mov
or
sub
aas
sub
sub
dec
loopne
fwait
push
out
(bad)
cmp
addr16
call
pop
push
and
bound
int
push
xlat
jge
mov
mov
sub
add
adc
ins
ins
dec
enter
pop
cmp
jne
mov
xchg
cmp
(bad)
stc
in
sbb
cwde
cdq
test
mov
dec
jecxz
push
into
out
iret
add
repz
(bad)
jnp
fdivr
(bad)
sbb
sub
sbb
ret
inc
mov
cmp
sar
push
or
test
sbb
inc
(bad)
mov
loope
lahf
xchg
jmp
fwait
xor
(bad)
scas
jmp
shl
cmc
xchg
or
inc
push
push
cmp
mov
cwde
push
mov
pop
pop
out
out
dec
shrd
mov
mov
ret
pop
shl
jp
test
inc
je
leave
in
fcomp
sbb
jl
js
sahf
mov
jno
mov
jnp
stos
pop
(bad)
not
loop
(bad)
movs
enter
leave
test
and
and
nop
sub
dec
mov
cmp
add
nop
jo
cdq
js
aad
sahf
push
mov
inc
mov
lahf
test
jle
mov
ja
jnp
out
dec
xlat
xchg
shr
sahf
call
pop
mov
les
jns
xor
(bad)
arpl
lock
ja
xchg
pusha
pop
xor
pop
ret
xor
shr
fbstp
sbb
iret
sbb
out
mov
pop
int
push
out
aas
dec
iret
sbb
rcl
ins
lahf
stos
xor
mov
inc
adc
js
xor
loope
stos
fs
sbb
xchg
scas
mov
dec
add
adc
adc
sub
xchg
pmaddwd
popa
push
push
int
in
test
mov
cmps
cmp
add
dec
dec
push
fisub
call
lods
mov
data16
pop
call
aaa
lock
jo
xchg
and
jo
sbb
test
and
lds
mov
cdq
xor
repnz
call
out
ffreep
fwait
(bad)
sbb
and
int3
cmp
iret
shr
pop
wbinvd
rol
jns
cdq
mov
pop
stos
cs
xchg
xchg
sbb
icebp
loop
mov
inc
mov
adc
lds
out
(bad)
cmp
adc
cmp
dec
in
cs
and
inc
ins
fsubr
and
shl
call
test
imul
iret
xchg
and
push
add
add
cmp
or
xor
cmp
fldz
jl
sbb
mov
pop
mov
dec
cmp
scas
js
cmp
in
in
imul
adc
cld
pop
rol
es
in
inc
jbe
sahf
jecxz
in
stos
dec
cli
push
or
pop
jno
xor
sub
adc
dec
xchg
out
pop
push
test
and
xor
jle
sub
hlt
in
or
int3
fiadd
lahf
mov
mov
leave
(bad)
and
js
cmp
pop
mov
push
outs
sbb
popa
mov
enter
jle
add
cmp
loope
je
mov
arpl
cmp
fbstp
dec
es
dec
jne
xchg
nop
mov
mov
xchg
lock
stos
shl
les
inc
xor
mov
xor
daa
mov
pop
pop
mov
xchg
(bad)
pushf
inc
test
sbb
mov
ss
leave
aad
jmp
mov
jnp
ret
(bad)
ds
inc
clc
mov
xchg
push
cdq
jno
push
ret
push
add
jl
xchg
push
jmp
int
push
mov
inc
push
shl
mov
pop
dec
mov
cmp
stc
in
ja
or
pop
xchg
push
fistp
mov
outs
cmps
xchg
aad
mov
scas
aaa
cmp
clc
cmps
inc
xor
rol
cmp
dec
clc
push
jae
xlat
cdq
mov
lea
test
fiadd
aam
sbb
mov
inc
addr16
xchg
push
cld
les
imul
jle
or
or
add
imul
je
lds
add
sub
pop
xor
cld
push
enter
arpl
outs
iret
loope
pop
inc
pop
das
sbb
js
in
mov
dec
retf
mov
in
mov
lock
sbb
jbe
arpl
je
and
fistp
in
outs
pop
shl
sti
in
jmp
adc
or
xor
mov
adc
jg
push
rcl
jle
ins
mov
jmp
movs
cmps
push
push
and
mov
and
ins
xchg
mov
popf
or
(bad)
sub
nop
push
mov
cmp
inc
jnp
imul
cdq
loope
sub
fisttp
xor
pop
rol
mov
and
out
scas
and
push
adc
adc
inc
xchg
jecxz
ja
pop
in
dec
add
repnz
out
add
dec
(bad)
sub
cs
sbb
push
test
into
loopne
popa
jno
enter
ficom
push
xor
jl
repz
out
mov
mov
xchg
and
push
jp
mov
xchg
mov
mov
frstor
cli
sub
shl
adc
not
es
test
movs
ins
inc
adc
dec
(bad)
jl
cmp
pop
pop
add
mov
sbb
retf
hlt
sbb
aad
xchg
ja
movs
mov
adc
sbb
jle
leave
out
dec
xor
jg
fdivr
out
push
jo
or
jl
inc
outs
jbe
pop
jl
jge
rcl
add
fsubp
adc
push
mov
cli
xchg
fldenv
or
xchg
mov
pusha
adc
cmp
inc
sub
lods
mov
lock
mov
neg
fdivr
lods
add
xchg
mov
mov
cmp
andps
aam
fst
mov
test
ja
sub
repnz
xchg
mov
cdq
jno
xchg
jae
lock
push
outs
lods
dec
jbe
cmp
mov
and
dec
adc
fbstp
pop
out
shl
loope
and
or
imul
push
add
mov
lahf
int
sub
clc
mul
adc
add
cmp
mov
(bad)
mov
pop
xor
out
inc
sbb
and
loope
aad
stos
popa
inc
and
sar
aam
or
xor
sub
inc
lahf
stos
aad
(bad)
sbb
push
stc
or
xchg
cdq
ficom
(bad)
aas
sub
cmps
xchg
xchg
or
in
pop
push
sti
data16
adc
sub
push
add
fmul
add
cli
es
aas
hlt
mov
sub
(bad)
jnp
lods
adc
sti
rcl
shr
push
lods
repz
int
out
inc
and
loopne
and
clc
jo
mov
xor
dec
dec
jg
pop
cmp
shl
aas
es
loopne
push
shr
ds
xchg
push
cmp
mov
cmp
fisttp
in
sahf
xor
dec
int3
cmc
sub
pop
int3
push
xchg
mov
aad
jge
ins
sub
inc
(bad)
ud1
add
mov
sbb
add
std
fs
cmp
cmp
sbb
shl
push
push
mov
push
adc
dec
add
jnp
push
xor
xor
stos
cwde
and
or
movs
push
adc
mov
pushf
or
cmp
xor
test
popf
arpl
mov
or
mov
inc
cmps
call
aad
cmps
and
sbb
push
jmp
adc
mov
and
aad
adc
retf
mov
dec
mov
cmps
xchg
rcl
pop
push
ins
imul
sub
xchg
sbb
jo
cdq
fdiv
mov
mov
xchg
imul
cmp
and
xor
mov
mov
pop
sti
sub
movs
scas
xchg
sub
shr
ss
cmp
jmp
or
ja
mov
scas
out
cs
push
add
fcomp
jecxz
xlat
jb
mov
std
lahf
xchg
dec
add
inc
cli
pop
xor
pop
and
mov
adc
fld
in
fyl2x
cmps
mov
xor
call
aam
in
lods
mov
fisubr
arpl
rcr
jg
data16
jo
xor
test
pusha
jne
sbb
stc
xchg
inc
nop
int
call
mov
sub
cld
das
hlt
pop
in
arpl
div
stos
cmc
xchg
in
repnz
movs
clc
das
mov
loope
in
fcmovnbe
jns
push
mov
jmp
sbb
or
cmps
or
das
xchg
jnp
jle
cmc
lods
adc
jge
jmp
int3
adc
push
mov
cmps
fdivr
dec
std
and
add
jmp
out
(bad)
fdiv
dec
hlt
dec
sbb
adc
push
stos
mov
push
push
sbb
nop
add
loop
(bad)
mov
cwde
sub
mov
jmp
dec
mov
mov
daa
fwait
sbb
sahf
into
push
pusha
push
js
in
adc
mov
imul
mov
dec
fadd
scas
adc
jbe
add
test
sbb
mov
inc
add
push
inc
jecxz
push
mov
pushf
enter
sahf
mov
mov
retf
dec
sbb
or
xor
xchg
inc
add
rol
(bad)
mov
mov
fs
sub
xchg
jl
es
outs
cmp
mov
mov
sti
hlt
dec
pop
jl
call
leave
cmp
outs
jp
das
xor
xor
jg
mov
and
cmps
xor
xor
int3
dec
jmp
jge
pop
or
adc
jp
jge
pop
imul
jecxz
jmp
cmp
xchg
add
sub
jnp
out
mov
imul
lea
iret
push
lea
call
and
xchg
test
xor
repnz
mov
es
lods
fcom
jmp
call
mov
sbb
xor
mov
out
dec
jmp
ss
jae
loop
cmp
jns
outs
not
cmp
test
lahf
dec
sbb
jb
and
push
aam
bound
cmp
mov
repnz
stc
imul
neg
jmp
mov
push
rcr
jp
jb
aam
test
jae
stos
idiv
mov
jmp
sub
fld
vpmacswd
mov
mov
xor
pop
mov
ror
out
call
loope
mov
aaa
cwde
dec
jmp
cmps
mov
scas
mov
jno
inc
add
retf
aad
imul
jb
adc
push
sbb
movs
imul
pusha
in
clc
test
push
push
stos
mov
xchg
test
xor
leave
pop
push
inc
pop
push
pop
dec
dec
scas
inc
bound
add
enter
lods
scas
retf
dec
jge
outs
or
inc
fstp
xchg
fs
shl
retf
sti
outs
scas
push
sub
in
inc
aad
jbe
inc
dec
shl
lock
repnz
dec
lods
lds
cmc
jmp
jb
mov
add
lods
test
sbb
out
int
mov
xchg
retf
pop
or
pop
pop
loope
jg
push
lahf
int
inc
psubb
fisttp
je
das
aas
and
shr
movs
cs
and
or
out
push
mov
push
push
enter
popf
mov
adc
cmp
cdq
jp
cmp
repnz
fwait
jecxz
scas
sub
jle
ds
cmp
cli
mov
pop
mov
(bad)
loope
push
pop
push
jle
test
cmp
dec
fadd
cmp
push
sub
cmps
fdiv
(bad)
cli
xchg
retf
jae
mov
stos
mov
inc
mov
loop
fwait
pop
push
mov
cmps
lea
inc
and
data16
cld
jno
inc
lods
sti
dec
pop
mov
fdivr
jae
dec
stos
bound
sbb
test
adc
ins
push
iret
add
inc
mov
cmp
bound
in
xchg
rep
add
(bad)
call
mov
fs
cld
into
mov
mov
int3
fdivr
retf
nop
in
shl
sub
aam
call
fwait
add
shl
adc
jge
ficomp
jmp
adc
mov
sub
das
jne
jmp
les
fisub
pushf
push
das
pop
pop
xchg
sub
ins
fisubr
and
(bad)
sti
retf
mov
sahf
fucomi
xchg
gs
sbb
adc
fisubr
aas
cmp
fst
lods
loop
and
ins
jae
stos
mov
clc
aaa
push
sbb
sub
das
mov
jne
shl
adc
mov
cmps
xchg
mov
into
call
xor
test
fcmovne
test
iret
call
xor
cld
std
dec
ds
pop
cld
add
lds
popf
adc
dec
mov
inc
adc
pop
shl
repz
dec
mov
dec
jno
dec
jae
enter
ficomp
xor
xchg
rcl
mov
cmc
and
pop
sar
or
(bad)
aaa
xchg
add
fist
mov
fdiv
inc
sbb
mov
into
push
push
outs
jbe
jb
sub
push
fdivr
add
mov
sbb
pop
jne
arpl
mov
inc
into
push
mov
sbb
mov
lock
fst
pop
or
mov
jo
mov
mov
push
and
or
xor
and
push
dec
sub
stos
adc
sub
pop
dec
int3
ja
loopne
test
pop
lods
int3
lahf
sub
ror
outs
add
(bad)
(bad)
mov
stc
sub
jmp
in
pop
ds
pop
adc
aam
xchg
cmp
jmp
xor
mov
inc
mov
lods
ret
mov
xchg
std
push
jnp
push
loope
icebp
scas
adc
lock
and
xchg
repnz
stc
mov
ret
sti
inc
(bad)
lods
jnp
pop
or
mov
inc
sti
cs
ins
in
push
dec
push
mov
push
or
dec
dec
rol
push
jns
adc
outs
fnstsw
mov
inc
movs
mov
in
loope
in
test
fld
nop
mov
outs
repz
add
adc
into
xchg
rol
mov
mov
lea
mov
out
add
out
cmp
rol
or
std
cli
mov
ficom
sti
movs
loop
shr
or
sub
shl
fisttp
lock
out
lock
push
xlat
stos
(bad)
fbstp
lahf
inc
and
pop
loope
push
(bad)
pop
adc
push
ud1
mov
fcom
dec
adc
jp
retf
cmp
shr
es
jnp
push
stc
scas
adc
int
scas
pop
inc
mov
mov
fwait
and
adc
jp
xor
xor
jne
es
cmp
xor
adc
sub
dec
dec
push
pusha
cld
fst
xchg
xor
xchg
scas
pop
push
push
mov
ins
cdq
(bad)
fadd
pop
fstp
imul
adc
hlt
sub
jne
mov
std
(bad)
pop
jge
mov
pusha
mov
bound
into
mov
iret
sti
fs
adc
adc
xor
xchg
or
adc
adc
mov
sahf
or
in
xchg
and
movs
aas
fwait
push
mov
out
or
nop
lea
ins
jbe
jmp
test
jg
mov
sbb
rol
(bad)
xor
cmp
lea
add
push
pop
fwait
mov
push
add
rep
add
out
stc
test
xor
dec
push
push
add
jbe
mov
ja
xchg
pop
lods
sti
call
or
push
xchg
sub
adc
hlt
iret
jns
pop
cmp
inc
fmul
pop
xchg
jmp
or
jo
push
push
dec
xchg
dec
int3
cdq
dec
aam
(bad)
por
int
ins
sbb
in
mov
dec
rcr
mov
dec
mov
or
cvtpi2ps
cmp
cld
pushw
inc
sub
inc
rsqrtps
push
fcmovbe
jnp
shr
inc
movs
mov
rcr
fidivr
in
xor
xchg
call
jae
call
adc
mov
bound
stc
jb
jae
mov
(bad)
dec
in
mov
mov
jp
jo
mov
pop
jg
xchg
jmp
fmul
mov
sbb
xchg
mov
push
cmp
sub
mov
popa
xor
dec
and
jbe
adc
mov
gs
stos
jecxz
dec
push
mov
(bad)
sahf
pop
int3
cmp
xor
push
stos
dec
push
xchg
je
mov
inc
mov
mov
outs
(bad)
sub
mov
xchg
cmp
loope
aad
push
movs
mov
outs
pop
xor
sti
push
stos
(bad)
inc
sub
idiv
(bad)
retf
adc
cwde
xchg
inc
ret
xor
cmp
xor
cmps
cmp
lods
push
pop
ds
dec
lock
push
xchg
adc
sub
jmp
dec
adc
lahf
xchg
sub
rcr
push
push
iret
scas
jmp
jne
pop
adc
stos
lds
jge
jne
inc
mov
sahf
mov
pop
inc
adc
loope
call
adc
out
rcl
fs
push
mov
and
mov
cmps
dec
hlt
loopne
ins
scas
jns
xor
inc
test
mul
xor
ins
dec
lea
mov
movs
mov
fnsave
cmp
push
xchg
call
adc
loopne
xchg
addr16
add
mov
call
(bad)
lods
test
inc
inc
inc
in
outs
daa
mov
push
loop
(bad)
das
mov
cmp
cli
aaa
outs
sahf
sbb
pop
jae
dec
pop
fsub
sbb
enter
xchg
es
dec
cdq
push
test
(bad)
sar
xor
mov
sub
mov
int3
iret
mov
push
pop
scas
fst
mov
push
(bad)
out
mov
mov
mov
cmp
sbb
lock
add
call
fisub
lods
dec
ds
rol
jae
ja
(bad)
jmp
fwait
popa
xchg
test
ins
and
mov
(bad)
loope
dec
outs
cmps
ret
adc
sbb
int3
xor
xchg
fmulp
test
sub
test
mov
sub
jae
fs
sub
xchg
es
mov
mov
loop
or
call
jbe
jmp
xor
cmp
or
and
xchg
(bad)
js
adc
daa
mov
pop
fcmovbe
push
jmp
(bad)
fisttp
das
push
push
xchg
sub
dec
scas
inc
xlat
pop
pop
push
cdq
(bad)
add
(bad)
jbe
fcomip
sub
fisttp
ja
in
and
mov
xchg
call
or
repnz
mov
in
mov
or
mov
add
mov
xchg
cmova
fistp
sbb
mov
lea
dec
pop
mov
add
cli
dec
fiadd
push
ins
test
xor
mov
sub
in
rcr
mov
jb
dec
out
sub
sub
mov
sbb
and
cmp
sti
sbb
sub
movs
xchg
dec
popa
mov
fsub
adc
adc
(bad)
cli
fiadd
dec
repz
sbb
or
cld
cs
jae
retf
das
mov
mov
ret
jo
es
mov
loop
xor
xor
movs
test
xor
mov
pop
stc
mov
mov
dec
dec
jns
xchg
pop
outs
lahf
fwait
lods
push
movs
pop
data16
jb
add
pop
cmp
xor
push
int3
mov
and
mov
or
jo
das
mov
inc
inc
and
mov
mov
mov
jbe
mov
lahf
xchg
out
retf
mov
arpl
in
repnz
cs
fld
adc
nop
je
sar
inc
pop
fcmovnu
(bad)
push
dec
and
(bad)
inc
je
cld
imul
dec
fs
fneni(8087
lods
xor
cwde
push
sbb
or
(bad)
mov
fist
inc
fcomp
stc
test
mov
jnp
aam
out
cmp
dec
fdiv
xor
pusha
repz
and
nop
cmp
xor
out
sub
in
call
mov
xor
int
push
mov
lds
inc
adc
icebp
ret
add
jmp
jbe
and
push
push
push
fst
std
test
(bad)
push
lea
clc
pop
xor
test
inc
jno
jns
int3
inc
mov
call
inc
and
xchg
or
pusha
icebp
fwait
dec
imul
mov
mov
pop
enter
clc
inc
dec
inc
dec
pop
ror
out
in
and
icebp
lock
dec
xor
movs
retf
bound
and
ret
mov
dec
arpl
or
pop
mov
lods
push
sti
pushf
fld
push
push
outs
aam
sbb
into
and
fsub
xchg
mov
mov
rol
cld
cmp
dec
mov
cmps
sub
sub
in
jae
fcomp
and
inc
adc
sbb
test
ret
inc
sub
pop
sbb
push
retf
stc
push
cmps
dec
sbb
jge
lds
dec
pop
call
std
out
enter
test
sub
loope
add
int3
push
sbb
push
xor
push
push
mov
stos
popa
jle
not
lods
arpl
pop
loopne
imul
test
es
push
xor
js
sahf
adc
repnz
sub
(bad)
loop
push
out
(bad)
popa
lock
lds
or
in
cmps
or
sub
mov
rol
cdq
adc
add
test
mov
sub
xor
sub
scas
lds
mov
aad
aaa
and
adc
lea
scas
in
dec
sbb
adc
adc
clc
or
xchg
test
xchg
jae
cs
sub
iret
add
mov
lods
and
push
jle
mov
ins
sbb
cmp
repnz
scas
mov
sub
dec
in
inc
adc
pop
adc
mov
dec
cli
push
sbb
cmp
lahf
add
out
xchg
and
push
fwait
push
dec
retf
cmp
xor
and
push
push
fld
shl
std
mov
mov
loop
xor
mov
jbe
dec
cmp
cli
jne
push
mov
pop
sub
retf
and
add
(bad)
call
push
mov
and
jge
sahf
in
loopne
rcl
pop
or
push
sub
jl
pop
mov
pushf
fwait
out
xchg
xchg
fwait
sub
jp
mov
add
or
loopne
mov
sbb
mov
and
xor
les
push
dec
iret
jl
enter
add
jge
fwait
and
adc
push
aam
addr16
ror
aam
xchg
inc
xchg
shr
fdivrp
dec
adc
add
cs
(bad)
inc
shl
pop
lahf
sub
and
and
ret
js
mov
nop
pop
mov
xor
stos
dec
jno
and
xacquire
jne
jbe
mov
jle
xor
stc
sbb
repz
mov
idiv
xor
jmp
add
sub
ins
add
adc
cmps
rcl
ret
adc
xchg
je
xor
push
and
and
add
cdq
mov
push
(bad)
lock
adc
xchg
push
arpl
inc
ds
jmp
mov
arpl
cmp
repnz
clc
and
xor
imul
ja
and
popa
or
dec
add
ja
fsub
ins
loopne
enter
pushf
lods
rep
fimul
dec
outs
mov
add
xor
enter
push
ins
add
or
mov
add
dec
enter
test
jl
repnz
shl
loope
fidivr
xchg
outs
(bad)
test
mov
outs
ins
xchg
mov
clc
push
cmp
and
cmp
out
cmp
xchg
fimul
out
jnp
test
sbb
arpl
mov
cmp
into
ret
xor
xlat
cmp
pop
mov
cmp
in
popa
sub
cmps
jo
(bad)
clc
add
inc
pusha
leave
arpl
mov
loopne
or
jo
call
ds
mov
jae
xchg
pop
adc
dec
rcr
aad
into
push
mov
dec
dec
pop
not
mov
push
(bad)
cmps
popf
cs
addr16
pop
cs
mov
leave
ins
push
push
aam
xor
fsubr
nop
fstp
fild
xor
ins
outs
mov
add
add
in
pop
jmp
jo
adc
sbb
inc
es
jmp
or
pop
push
push
or
add
pop
push
pop
cmp
jae
add
mov
sub
or
xchg
xchg
mov
aaa
inc
ret
cld
pop
push
push
sub
sub
or
mov
xor
sti
std
jmp
mov
lods
rcr
(bad)
adc
pop
retf
loope
xor
mov
jl
xchg
inc
sbb
jb
or
or
lock
or
sub
xchg
jl
popf
fld
rcl
push
(bad)
xchg
mov
fidivr
and
not
push
jge
sbb
or
push
scas
or
push
xchg
pusha
xchg
dec
push
dec
inc
arpl
loopne
lea
arpl
aam
sub
outs
(bad)
push
cmp
aas
push
cli
stc
loope
sbb
sub
fild
or
sbb
pop
push
int3
mov
xchg
inc
outs
(bad)
adc
or
and
addr16
sub
add
inc
jae
nop
retf
hlt
fs
xchg
dec
sbb
sub
ja
fdivr
movs
ins
pusha
inc
jg
inc
inc
and
xchg
imul
dec
adc
xchg
ins
test
add
add
pop
lock
shl
add
sub
movs
movs
sahf
test
mov
adc
inc
xlat
stos
pop
dec
mov
add
js
in
adc
jge
ds
(bad)
outs
call
mov
out
lods
ins
mov
sub
dec
imul
pop
ss
inc
test
and
adc
sar
test
movs
sub
arpl
push
dec
(bad)
xchg
pushf
lock
sbb
xchg
loop
mov
test
loop
mov
pusha
jno
scas
mov
inc
mov
adc
jge
(bad)
xor
dec
repnz
out
add
aad
loop
out
cmp
mov
inc
lock
xor
ja
mov
neg
add
add
les
sub
sbb
mov
mov
in
mov
(bad)
sub
or
sbb
adc
fist
cdq
fnstenv
scas
and
jmp
push
(bad)
shl
movs
inc
stc
aas
call
mov
pop
jo
pusha
dec
and
sbb
pop
gs
fidivr
arpl
ret
and
jo
out
adc
lds
dec
mov
mov
test
mov
jecxz
xchg
fs
outs
nop
jnp
cmp
push
leave
enter
out
inc
add
sub
xchg
aam
lds
loop
rcpps
mov
push
scas
dec
fnstcw
sbb
xor
mov
pop
dec
inc
pusha
push
call
sbb
inc
outs
inc
test
xchg
xor
ja
mov
and
arpl
test
arpl
mov
inc
clc
cmps
(bad)
ficomp
xlat
jmp
mov
fwait
add
mov
jo
sub
xor
fist
sahf
(bad)
(bad)
mov
lock
push
xchg
adc
jno
mov
std
lods
sti
(bad)
in
icebp
(bad)
xchg
cmp
or
xchg
xchg
popf
rcr
add
div
daa
push
push
mov
xchg
add
mov
and
add
add
jae
mov
cs
setle
ja
ds
mov
shr
ror
dec
pop
inc
mov
sbb
dec
iret
jecxz
adc
stos
jle
ficomp
mov
clc
(bad)
adc
cwde
mov
in
inc
dec
lods
js
xchg
sub
mov
mov
test
fwait
and
test
xor
inc
add
fwait
(bad)
mov
cmps
sbb
jo
pop
jb
outs
cmps
imul
hlt
sub
sub
sti
cmp
xchg
jnp
xor
mov
xor
arpl
ror
cmp
sbb
js
arpl
gs
mov
icebp
imul
jmp
out
je
sub
lea
and
test
(bad)
sahf
push
pop
xchg
mov
push
shl
and
xchg
jo
xor
popa
out
sub
rcl
push
and
adc
or
push
push
imul
or
iret
call
inc
dec
push
lods
mov
add
loopne
sbb
lods
psllw
je
test
in
inc
je
test
ds
push
jl
xlat
dec
mov
sub
jno
sbb
leave
(bad)
repz
into
adc
movs
pop
scas
data16
sub
mov
hlt
mov
lock
data16
cs
into
sbb
xchg
and
dec
mov
jmp
sbb
sahf
rcl
fnstsw
xchg
jnp
add
mov
mov
sub
data16
cld
inc
jg
inc
add
movs
dec
jl
xor
mov
inc
pop
inc
out
shl
das
add
outs
in
inc
mov
inc
mov
in
push
mov
sbb
jp
pop
sbb
jmp
cs
ja
pushf
aad
mov
mov
lahf
xchg
inc
ss
and
sbb
fcom
mov
adc
push
pop
push
pop
mov
xchg
int3
add
jns
arpl
fdivp
(bad)
ins
inc
mov
or
div
xchg
adc
or
add
push
iret
xor
push
sub
loopne
push
out
in
cdq
and
cmp
sub
cwde
mov
xchg
into
xor
fisttp
ja
cmp
and
fld
mov
mov
xchg
cli
gs
out
mov
js
pop
mov
adc
ror
fmul
dec
adc
sbb
cmps
fdiv
(bad)
pusha
retf
jbe
pop
stc
(bad)
jo
add
mov
mov
lods
fs
mov
add
inc
daa
aad
xchg
add
fistp
mov
xor
in
push
mov
sub
fdivr
pop
xchg
and
jmp
cs
ficom
mul
push
mov
mov
and
mov
cmp
xor
enter
mov
int3
popf
add
and
push
repz
shl
jo
enter
inc
xchg
fnstenv
xchg
cdq
ja
cmp
pop
fisub
jb
pop
in
adc
nop
pop
ret
mov
test
out
out
adc
test
mov
ret
and
mov
pushf
sahf
xor
mov
jle
xor
pxor
mov
inc
jle
js
inc
cwde
xchg
dec
mov
movs
and
add
push
inc
cmps
jle
outs
adc
fisttp
mov
push
xchg
fst
xchg
xor
fs
repz
(bad)
xchg
sub
push
xor
sub
dec
cmp
push
(bad)
add
mul
aad
iret
add
fmul
push
cmp
arpl
adc
sbb
mov
mov
jg
fdivr
test
out
out
cmp
dec
xlat
mov
leave
adc
xchg
or
scas
gs
sbb
xor
xchg
hlt
mov
add
adc
iret
mov
xlat
and
jg
xchg
enter
adc
ror
aad
out
pop
retf
mov
mov
ret
mov
xchg
call
inc
jo
ret
mov
adc
es
mov
jmp
mov
shl
out
pop
cmc
push
cmps
jl
dec
test
aam
ins
dec
loope
xor
jb
daa
jo
dec
mov
cmp
into
sub
jg
xchg
adc
jecxz
movs
sbb
mov
(bad)
std
push
push
mov
add
sub
pusha
cld
fs
rcl
mov
bound
xor
inc
or
popa
std
enter
(bad)
bound
and
jo
jae
inc
lahf
ins
push
test
xchg
pop
jbe
inc
adc
mov
adc
and
fstp
mov
in
push
pop
fwait
cmp
in
in
dec
sbb
ins
loopne
outs
dec
xchg
(bad)
fisttp
lods
push
out
or
push
jl
in
pop
jb
jmp
gs
out
or
pop
(bad)
inc
xlat
aad
sbb
jmp
xchg
inc
xchg
jmp
mov
add
mov
repnz
fs
xor
cld
push
test
push
es
or
push
sub
mov
fidiv
out
retf
sub
push
call
ss
shr
pop
stos
mov
int3
push
mov
mov
cmp
mov
adc
popa
out
cmp
or
dec
push
rcr
mov
(bad)
mov
add
test
fidiv
mov
jl
icebp
in
cmp
jl
push
sbb
test
mov
movs
push
lea
icebp
not
cmp
xchg
out
sti
mov
sbb
mov
push
mov
int
jmp
jbe
sbb
ja
push
bound
stos
into
mov
mov
pop
push
xor
pop
imul
addr16
fs
sbb
add
xor
mov
cld
sub
mov
xor
push
mul
jmp
mov
ja
mov
cmps
inc
cmps
xchg
jmp
sub
out
sar
jge
aaa
movs
mov
sbb
sar
mov
pop
popf
mov
jbe
cmp
mov
cmps
dec
mov
xor
add
arpl
pop
div
jnp
shl
cmp
gs
aad
pop
xlat
dec
in
and
jmp
jecxz
mov
pushf
leave
loope
dec
rcl
inc
mov
(bad)
mov
inc
int
addr16
jnp
bound
sub
dec
ret
das
fdivr
jle
mov
xchg
retf
xchg
inc
bound
sub
jp
arpl
stos
jnp
les
in
push
icebp
dec
xor
in
push
dec
mov
jns
aad
inc
adc
aad
mov
stc
mov
push
adc
out
sti
in
pop
mov
jo
mov
dec
mov
stos
sahf
add
sahf
jmp
mov
cmp
into
jge
add
scas
push
pop
call
pop
stos
mov
or
inc
xor
and
out
push
push
pop
hlt
xor
and
mov
icebp
xor
jnp
push
and
test
aas
test
push
imul
dec
mov
jle
pop
sti
xchg
add
fs
(bad)
dec
test
call
shl
pop
jmp
imul
out
xlat
push
dec
sbb
iret
push
arpl
(bad)
retf
sub
mov
push
mov
(bad)
jmp
cmp
add
cli
dec
xchg
ins
adc
addr16
or
out
pop
aas
stos
add
pushf
jp
sbb
je
out
int
ja
and
xor
add
jb
add
movs
es
ret
(bad)
imul
sub
sub
and
sbb
icebp
inc
sub
mov
aam
adc
dec
jae
out
cmps
inc
push
jmp
fcomp
mov
push
popf
xor
lods
jo
cmp
arpl
add
aaa
jp
scas
int
lods
xor
nop
xchg
sub
daa
or
mov
leave
xor
bound
xor
out
jmp
in
(bad)
xchg
cli
cmp
fadd
loope
mov
lahf
mov
lock
loop
or
sub
cwde
int3
repz
shl
retf
mov
mov
in
inc
call
pushf
push
aam
jne
push
xchg
fwait
mov
jmp
sbb
push
or
push
in
movs
or
(bad)
mov
mul
addr16
bswap
mov
rol
cdq
call
call
pop
test
xor
mov
jp
fs
inc
or
pop
dec
mov
mov
mov
fdiv
push
cs
mov
(bad)
and
gs
mov
jmp
mov
rcr
sub
push
les
add
(bad)
data16
scas
imul
ret
push
mov
(bad)
clc
adc
mov
add
adc
out
test
push
add
enter
ror
cmp
dec
enter
inc
aaa
retf
stc
and
sub
add
loopne
std
mov
xchg
inc
in
fs
ror
and
loop
inc
adc
sub
and
inc
jmp
in
enter
dec
mov
ficom
inc
aam
imul
int
mov
int3
cmp
pushf
push
stc
inc
xchg
je
and
mov
aaa
out
fbld
sub
leave
mov
push
jo
mov
cld
xlat
inc
jae
in
dec
lea
sub
inc
jo
rol
and
popa
xlat
sahf
cdq
popf
inc
out
dec
jmp
push
cmp
jge
mov
imul
scas
xchg
sti
mul
cmp
adc
out
arpl
ret
outs
mov
inc
fcom
cmp
jl
push
int3
aam
xor
sub
iret
push
sahf
mov
(bad)
popa
mov
cli
shl
outs
xor
mov
jmp
fwait
ss
aad
shl
xor
mov
xchg
nop
mov
jl
cmp
dec
icebp
cmc
mov
or
add
clc
pop
(bad)
out
ds
jg
out
jg
add
call
dec
push
cdq
dec
repz
add
cmp
je
mov
outs
std
retf
(bad)
movs
mov
(bad)
ja
jl
mov
add
jns
pop
add
cmp
fild
pushf
aas
mov
mov
pushf
ins
jmp
jmp
idiv
call
and
xchg
je
repnz
push
movs
enter
push
js
cmp
movs
mov
sbb
ja
into
xchg
fsubrp
dec
push
(bad)
repz
xor
push
(bad)
dec
adc
inc
mov
push
cpuid
(bad)
dec
jae
cdq
lods
mov
pop
mul
push
fwait
sahf
imul
retf
mov
mov
ja
jo
nop
ins
add
pop
aaa
retf
fdiv
sub
xchg
ret
stc
mov
inc
icebp
scas
mov
loopne
sub
jmp
fwait
in
add
les
xor
(bad)
scas
pmulhw
cmps
xlat
movs
lock
lods
imul
push
mov
loop
add
jecxz
inc
test
mov
inc
push
xchg
in
sbb
imul
pop
shl
jle
in
cmp
jne
sahf
pop
dec
ja
sbb
sahf
mov
bound
ins
mov
inc
jnp
push
data16
pop
lahf
ins
lds
js
xor
pop
sub
pop
push
test
cs
mov
push
push
shl
push
(bad)
(bad)
push
lods
inc
and
adc
hlt
ret
inc
xor
aas
call
sub
bound
jl
add
mov
out
add
jg
leave
cmp
enter
ret
shl
push
dec
pop
mov
popf
pop
pop
add
jo
fdiv
mov
(bad)
mov
dec
sbb
push
test
sbb
shl
xchg
out
bound
pop
sahf
jp
sub
sub
nop
int
cmp
jb
mov
xor
rcl
pop
adc
dec
fnstsw
cdq
dec
xchg
cli
imul
xor
add
aas
sti
es
pop
ror
push
div
sbb
leave
scas
pop
inc
mov
push
fchs
outs
test
xor
fmul
fwait
push
lea
or
addr16
aaa
mov
xor
adc
mov
rol
inc
scas
scas
xchg
aas
std
sti
jb
pushf
xchg
and
not
mov
pusha
(bad)
jmp
fisubr
sbb
jmp
mov
mov
out
retf
outs
xor
and
nop
fimul
ret
lahf
xchg
push
scas
ror
ins
push
jg
sbb
in
jne
mov
call
les
sbb
lods
cs
out
ds
loopne
inc
repz
mov
adc
mov
scas
scas
call
dec
pop
int
idiv
pop
outs
jns
(bad)
imul
mov
gs
iret
pop
daa
fiadd
xor
fucom
xlat
mov
sbb
test
pop
mov
jbe
pop
sbb
das
mov
inc
out
push
lock
mov
cmp
aam
cmp
dec
and
imul
sub
pop
rcl
dec
dec
push
adc
adc
cdq
jg
or
js
push
ins
popa
mov
mov
and
jg
xlat
sar
mov
cmc
jmp
sub
test
jae
add
jle
ja
xor
dec
mov
mov
lds
push
adc
fsubr
outs
cs
shl
ss
pop
data16
and
jg
or
mov
push
push
adc
mov
push
pop
imul
xor
ret
inc
imul
add
cli
push
mov
push
outs
sbb
mov
call
or
adc
or
add
leave
cmp
adc
fild
into
push
sub
or
cdq
mov
adc
daa
cmc
inc
call
mov
add
lea
adc
cmp
jae
test
popf
xchg
daa
sbb
(bad)
pop
jg
scas
lock
mov
or
mov
call
aas
mov
hlt
movs
fldenv
cmp
(bad)
push
stos
sub
pushf
out
outs
mov
rol
iret
cmp
add
hlt
cmp
sahf
jae
and
inc
add
fucomp
scas
push
or
scas
and
mov
mov
xchg
or
lds
xor
inc
test
pop
mov
lahf
(bad)
js
mov
dec
inc
mov
mov
inc
xlat
icebp
cmp
nop
icebp
jl
fadd
mov
stos
stos
pop
mov
je
adc
ins
stc
scas
jbe
js
in
dec
and
ret
lahf
and
retf
ret
call
adc
push
dec
jae
fs
es
and
dec
inc
fist
inc
push
hlt
iret
(bad)
fcom
adc
xlat
jns
jmp
cmp
cmps
call
movs
or
call
push
xlat
xor
mov
arpl
and
test
push
mov
push
call
mov
out
dec
mov
in
xchg
mov
adc
xchg
paddusb
sub
push
stc
jb
push
(bad)
into
add
lea
pop
and
ret
mov
in
loop
fwait
stc
(bad)
(bad)
sub
push
jl
add
movs
xchg
or
push
mov
test
jp
movs
pusha
loopne
minps
cvtps2pd
retf
sbb
sub
xchg
pop
mov
adc
fisubr
frstor
mov
inc
adc
cs
imul
ins
add
lock
into
mov
add
clc
dec
push
js
in
call
data16
fnstenv
dec
mov
jnp
and
pop
in
in
adc
or
jb
jge
pop
dec
sbb
inc
outs
xor
retf
adc
repnz
xchg
dec
movs
cmp
sbb
hlt
(bad)
retf
dec
outs
jns
inc
xor
outs
pop
(bad)
scas
sbb
pop
dec
xor
add
sub
dec
test
cmp
xor
scas
pop
mov
ds
in
lfs
les
aaa
sub
in
jbe
xor
add
popf
mov
jne
cmc
inc
adc
jo
xchg
pusha
pop
sub
lods
loope
ret
std
mov
hlt
out
xchg
out
mov
jg
sahf
loope
or
and
stos
shr
cmp
ret
jae
or
jle
jle
jmp
(bad)
mov
in
mov
jmp
rol
fbld
and
mov
xchg
xor
mov
aaa
or
adc
jb
out
in
sub
icebp
lahf
jmp
lock
adc
cli
sub
loop
fistp
sbb
push
call
or
pop
shl
jecxz
iret
imul
call
cmp
inc
aas
call
test
pop
mov
mov
sub
xlat
xchg
imul
je
and
lods
js
jae
fimul
xchg
adc
scas
add
aaa
or
rcl
jge
aad
(bad)
es
push
inc
out
gs
sbb
adc
movs
(bad)
sub
cld
(bad)
jle
inc
mov
or
fdivrp
sub
(bad)
out
stos
push
mov
test
stos
adc
movs
data16
inc
ins
ret
imul
lds
and
mov
fs
and
loop
xchg
adc
mov
jae
xchg
jp
ror
cmp
sar
test
in
in
into
jno
or
rol
push
and
inc
pop
int
add
mov
or
arpl
loopne
test
jg
adc
pop
shr
int3
ror
pusha
shr
jmp
pop
adc
aaa
jns
cmp
out
sbb
sbb
fsubr
sbb
inc
ss
pushf
or
pop
jp
fcomp
fdiv
loope
sub
mov
test
dec
fmul
daa
xor
movs
cld
mov
jo
outs
mov
sub
pop
mov
out
jmp
test
out
ret
addr16
fdivr
es
cmp
mov
sahf
mov
xchg
retf
in
or
mov
dec
sbb
popf
xchg
adc
sub
push
popf
imul
jge
loopne
push
(bad)
movnti
call
mov
gs
in
movs
iret
jle
stos
mov
sbb
popf
imul
into
cmps
neg
lods
cwde
(bad)
pop
(bad)
mov
pop
lock
ret
ret
push
cld
pop
nop
mov
pop
lahf
fucomi
sbb
(bad)
aam
pop
stc
aad
enter
pop
xor
xlat
test
stos
xor
mov
dec
inc
jns
rcr
xlat
popa
(bad)
fnstenv
imul
retf
sti
retw
mov
cmp
cmc
icebp
jnp
cmp
cmp
fwait
inc
or
push
mov
movs
out
mov
sbb
mov
xchg
jg
pop
inc
dec
fsubr
inc
pop
pop
loop
dec
mov
cwde
dec
icebp
shr
stc
and
das
or
adc
sbb
xor
outs
xchg
ds
out
dec
or
mov
ror
sti
add
cwde
ret
lock
in
jg
imul
sub
stc
adc
out
adc
repnz
stc
aad
stos
push
jno
(bad)
lods
pop
jle
sub
inc
outs
xchg
dec
pop
and
inc
in
push
scas
fwait
add
sub
sti
mov
push
pushf
inc
and
jbe
aam
mov
add
aas
cmps
push
test
mov
xor
cmc
movntps
pop
cmp
mov
pop
in
jp
loope
push
popf
(bad)
or
pop
or
idiv
loope
cmp
stc
addr16
push
sar
jmp
lock
mov
mov
add
gs
adc
in
enter
(bad)
pop
sub
aaa
cmps
das
fadd
data16
ss
cmp
pop
cwde
loop
sub
mov
pop
retf
mov
and
lea
retf
aad
push
call
xor
and
mov
fld
and
dec
daa
sub
pop
sete
xchg
adc
inc
test
retf
or
lahf
std
imul
aaa
mov
or
scas
lds
sub
repnz
das
xor
and
inc
mov
stos
bound
imul
push
mov
out
and
fiadd
sub
aam
add
movs
out
xor
repz
imul
and
stos
push
ficom
mov
jl
sti
xor
repz
sub
xor
out
std
jb
mov
mov
mov
iret
in
xchg
mov
add
sti
jle
push
popa
inc
dec
hlt
mov
sub
sbb
pop
inc
pop
mov
ins
sbb
shr
mov
pushf
inc
int3
jne
push
xchg
hlt
cmp
test
sar
push
jge
inc
push
pop
mov
mov
add
out
call
mov
(bad)
aam
lods
xchg
pop
push
xor
fst
xor
sar
fild
mov
popf
iret
xchg
jecxz
mov
pop
jl
pop
inc
mov
sti
jns
imul
scas
iret
mov
loope
push
por
mov
mov
mov
mov
repnz
fisttp
mov
pop
or
push
in
sub
sar
stc
adc
xchg
jns
lahf
rcl
mov
or
jbe
pushf
cmp
sub
sbb
fsin
cmc
jb
xchg
aam
int
sub
push
call
push
outs
or
mov
sbb
loopne
jo
bound
outs
sbb
mov
push
mov
int3
imul
lock
bound
and
or
call
cmps
mov
add
sub
add
pop
ror
mov
mov
inc
and
or
fdiv
popa
clc
xor
xchg
cmc
add
sub
jnp
arpl
hlt
popa
inc
imul
cmp
push
mov
xor
loopne
sub
dec
sbb
imul
or
jo
out
push
push
hlt
jmp
jle
in
mov
xor
shl
out
sub
mov
in
push
add
add
lods
(bad)
mov
xchg
or
xchg
sub
ja
out
rcl
jns
jo
dec
ja
je
and
push
adc
push
mov
bound
das
cmp
inc
inc
mov
jne
push
cmps
outs
ss
por
je
pop
cmp
imul
fcmovb
xlat
(bad)
movs
jmp
dec
dec
(bad)
call
stos
pop
inc
jns
pop
jmp
stc
sbb
or
fnsave
dec
test
cwde
in
jl
inc
mov
pop
inc
adc
push
popa
xchg
jnp
xchg
push
dec
inc
xchg
inc
fnstsw
xchg
loopne
mov
mov
outs
xor
push
sti
mov
pop
pusha
or
lds
enter
ins
jmp
and
add
(bad)
cwde
(bad)
pop
aam
test
dec
xchg
pop
shr
lods
pop
cmp
ins
iret
jecxz
inc
sbb
push
push
hlt
ficom
arpl
lahf
jle
pop
fstp
lods
and
in
loope
mov
arpl
cmp
xchg
adc
mov
addr16
in
fidiv
mov
outs
push
xor
inc
cmp
pavgw
inc
daa
jo
add
pop
sar
xor
mov
arpl
xor
stos
iret
cmp
not
out
sub
pusha
cmp
sbb
push
push
js
aaa
popf
pop
mov
test
mov
push
test
jmp
inc
pop
sbb
dec
les
xchg
(bad)
cmpxchg
iret
aas
cwde
dec
hlt
xor
or
or
push
(bad)
ins
xlat
(bad)
(bad)
mov
sbb
lock
sub
push
int
mov
xchg
fnsave
inc
scas
data16
xor
mov
mov
out
in
popa
sti
mov
xor
dec
jae
fsubr
sti
xchg
lds
sbb
xsave
cmp
and
jno
add
xor
fiadd
popf
xor
xor
pop
and
bound
sub
jbe
imul
dec
mov
neg
mov
xchg
xor
pop
mov
add
ds
mov
mov
inc
and
stos
ss
js
retf
fiadd
jp
push
xchg
arpl
and
mov
out
add
lods
pop
movs
lahf
xor
sub
pop
inc
cmps
mov
fwait
push
jb
and
ss
push
sbb
or
or
xchg
dec
dec
cmp
clc
pop
fist
mov
fist
fwait
jno
sbb
into
dec
add
jb
cwde
int
(bad)
xchg
jp
clc
repz
ds
(bad)
push
adc
ss
inc
cli
aad
addr16
ins
nop
in
push
into
call
je
cmp
and
lea
push
loopne
push
xlat
mov
ins
and
push
xor
push
jl
call
(bad)
std
push
mov
dec
mov
clc
out
leave
not
cmp
push
xchg
retfw
jg
pop
pop
loope
mov
cs
mov
not
jb
cmp
sbb
arpl
arpl
lods
std
stos
dec
fisttp
shl
aad
movs
dec
dec
sbb
lock
sub
(bad)
hlt
mov
mov
scas
cs
xor
xor
into
jne
dec
add
dec
jecxz
loop
xor
or
and
std
xchg
mov
jmp
mov
pop
inc
movs
cmps
out
sti
dec
jp
dec
jl
mov
clc
sbb
sbb
movs
jnp
int
mov
fucomi
jo
rcl
inc
in
fwait
loop
ins
sbb
dec
stc
shr
inc
jo
jb
retf
push
rol
outs
call
pop
add
jle
into
cmc
in
(bad)
or
add
fistp
les
(bad)
cs
ins
sub
pop
dec
push
xchg
ror
fpatan
cmp
jne
mov
popa
xor
mov
xor
fwait
int3
movs
adc
ror
pop
retf
or
and
sbb
in
pop
call
jle
imul
(bad)
inc
xor
scas
push
cmps
mov
sbb
fdivp
mov
fdivr
mov
sub
xor
outs
pop
or
jmp
mov
repnz
push
icebp
inc
push
or
in
nop
out
xchg
pop
out
mov
aaa
scas
xor
icebp
lea
loopne
popa
mul
ret
mov
icebp
push
xor
fsub
mov
outs
stc
rcl
or
pop
lods
stos
clc
xor
stc
mov
mov
rol
in
bound
lea
loop
push
xchg
xchg
pop
stos
jae
repnz
aaa
retf
cdq
pop
jne
lods
push
pop
stos
jl
cld
sbb
push
and
mov
call
sub
call
fmul
ret
dec
jmp
or
sbb
(bad)
inc
sub
mov
lods
inc
gs
mov
cmps
mov
shl
ret
jl
adc
mov
jge
ins
aaa
stos
mov
add
aaa
push
and
pop
imul
mov
jmp
and
or
sub
outs
inc
push
and
dec
sub
fst
mov
pop
icebp
repz
test
xchg
sbb
xchg
xlat
push
or
nop
dec
mov
inc
pop
mov
jge
push
inc
aaa
rcr
test
gs
loop
push
test
(bad)
cmp
in
mov
or
rcr
mov
sbb
js
mov
mov
pop
arpl
and
sub
in
push
jl
pop
movs
push
imul
loope
pop
sbb
fwait
push
int3
ret
retf
xlat
mov
push
(bad)
(bad)
int3
lods
ja
gs
push
stos
cmps
fcom
lahf
pop
pop
retf
jge
xchg
mov
jno
in
pop
inc
mov
(bad)
pop
repz
(bad)
enter
mov
add
test
or
mov
gs
mov
sub
sbb
xor
stc
pop
call
jae
adc
daa
ins
scas
mov
outs
xchg
(bad)
and
imul
out
dec
retf
inc
and
mov
cmp
or
xchg
lods
in
cmps
mov
and
jae
stos
mov
sbb
xchg
cmps
retf
ins
repnz
mov
push
add
jmp
imul
sub
pop
pop
rol
std
xor
lea
or
loope
cmp
in
xchg
add
jg
push
push
(bad)
sub
adc
in
pop
fcom
add
js
nop
(bad)
xor
loop
push
add
lods
sub
cmp
and
add
push
push
and
cmovge
jno
packssdw
dec
mov
add
add
lds
test
jmp
xor
loopne
test
push
add
push
(bad)
mov
pop
into
dec
cmp
sbb
inc
xlat
cmps
test
movs
fild
je
je
lahf
(bad)
mov
mov
and
mov
adc
cmp
inc
adc
cld
xchg
out
in
(bad)
mov
xchg
mov
call
in
cmc
aas
inc
fimul
lahf
scas
mov
or
add
pop
adc
inc
or
jns
inc
les
pop
repz
pop
int3
dec
retf
mov
inc
aad
div
xor
add
jne
leave
ins
mov
push
sub
imul
pop
dec
and
js
inc
lds
js
jae
fninit
sub
jae
jno
mov
in
(bad)
mov
fisttp
or
jg
inc
aas
sub
ins
jmp
ret
mov
movs
mov
mov
int
fidiv
inc
xor
and
pop
fsub
mov
scas
enter
sub
cmp
inc
ret
mov
mov
lods
call
ins
rol
sub
pop
jl
jl
inc
cmp
test
(bad)
push
fbld
xchg
cmp
cld
xchg
std
mov
paddd
(bad)
lods
(bad)
frstor
sbb
pushf
(bad)
sti
outs
icebp
pop
das
cmp
icebp
fisubr
loop
stos
movs
pusha
cli
cmps
movs
mov
aam
hlt
gs
ficomp
mov
mov
inc
mul
adc
or
cmovle
xor
sbb
add
jmp
popf
fwait
jmp
inc
and
inc
inc
and
js
push
add
or
dec
or
or
inc
loop
scas
hlt
mov
or
sahf
enter
enter
cmp
sar
ret
cmps
mov
leave
and
push
frstor
enter
sub
leave
pop
fimul
inc
lds
push
add
inc
int
in
fwait
mov
call
nop
loopne
cli
mov
push
xor
in
jmp
mov
mov
out
and
in
(bad)
(bad)
(bad)
lahf
int3
mov
call
sar
sub
cmp
aas
outs
and
std
scas
loope
pop
jnp
dec
adc
push
cmp
int
leave
mov
mov
add
ja
mov
outs
int3
pop
sub
add
pop
retf
mov
pop
xor
bnd
or
mov
cmp
cs
and
lahf
jmp
add
push
jnp
add
lock
xchg
cli
mov
test
lods
loope
rcl
nop
aam
jmp
leave
call
ficomp
pop
dec
cmp
add
daa
push
add
leave
inc
retf
mov
adc
or
enter
mov
xchg
les
jp
adc
adc
push
rol
ins
fimul
pushf
push
jg
inc
ss
push
add
popa
adc
inc
xor
pop
or
pop
cmp
dec
or
inc
xor
jns
pop
or
imul
jae
push
add
push
xor
inc
add
dec
cmp
jno
push
add
xchg
sbb
add
pop
push
or
mov
call
cmp
adc
arpl
test
scas
mov
jo
jle
add
and
repnz
mov
xchg
sar
das
xor
cmp
adc
popa
cmp
dec
push
js
dec
adc
push
push
jae
push
add
pop
or
jg
dec
adc
inc
and
inc
push
jo
inc
sbb
pop
push
jnp
pop
or
push
add
arpl
push
sub
push
adc
jo
jge
inc
pop
jae
imul
shl
sbb
cld
mov
mov
jb
pop
xor
gs
jl
popf
sahf
pushf
xchg
jmp
push
aaa
and
sbb
adc
inc
adc
dec
sbb
ins
and
push
cmp
inc
push
push
adc
sub
pop
push
dec
or
cmp
pop
xor
pusha
and
push
or
pop
das
push
cmp
xor
sahf
rol
rol
clc
mov
ins
(bad)
data16
adc
popa
jmp
out
into
pop
sbb
pop
addr16
cdq
mov
inc
cmc
arpl
sub
imul
or
sub
aaa
ins
cmp
sub
pop
add
push
xor
push
push
pusha
sub
pop
sbb
push
imul
sbb
inc
adc
sub
pop
xor
dec
sbb
push
push
pop
or
mov
jmp
daa
jmp
out
(bad)
mov
enter
push
mov
rcl
and
adc
push
leave
mov
jno
dec
and
xor
ins
jmp
in
leave
pop
sub
sbb
js
push
cmp
inc
adc
push
pusha
sub
pop
sbb
push
imul
sbb
inc
adc
sub
pop
xor
dec
sbb
push
push
adc
push
arpl
inc
push
jge
jg
and
jl
mov
mov
loop
lods
mov
ins
sub
(bad)
push
fisub
dec
jmp
sbb
mov
xchg
xchg
imul
cmovs
jle
mov
mov
mov
stos
ror
jmp
mov
xchg
loopne
in
ror
retf
pushf
jmp
test
mov
mov
mov
movs
retf
add
sti
xlat
test
adc
xchg
imul
push
cmp
push
dec
aas
je
pusha
sbb
adc
xlat
mov
dec
push
adc
and
fistp
cdq
stos
lods
out
fadd
sub
jns
imul
ret
scas
in
mov
mov
les
ror
enter
call
xchg
ret
mov
nop
sar
out
(bad)
mov
enter
repz
mov
cli
inc
add
popf
jmp
mov
(bad)
sbb
imul
scas
mov
pop
sub
add
mov
xchg
pop
adc
pop
ret
xchg
xchg
or
ins
cmovle
add
inc
add
ss
pop
push
dec
sbb
cmp
data16
jne
jae
fwait
enter
xchg
test
cmp
rcl
or
pop
or
push
test
dec
add
push
sub
imul
pop
dec
ss
int3
fld
or
jecxz
retf
mov
ds
(bad)
pop
or
dec
fcomp
fist
and
dec
or
xor
inc
push
push
adc
and
inc
sub
js
jge
dec
adc
inc
and
jo
pop
or
fs
ss
inc
xchg
sbb
cdq
call
add
inc
cmp
inc
add
pop
add
sahf
inc
scas
test
xchg
mov
dec
push
push
xor
lds
test
cmps
(bad)
in
les
sti
mov
ret
xchg
out
icebp
cwde
in
mov
stc
mov
loopne
repnz
mov
stos
clc
mov
push
cs
xchg
xlat
sbb
push
and
dec
add
mov
dec
push
fidivr
dec
jae
mov
cmp
mov
pop
imul
shl
(bad)
push
lds
cmp
sbb
dec
mov
and
adc
push
cmc
dec
ficomp
mov
xchg
sti
(bad)
fcomp
jecxz
jmp
retf
fwait
lock
sti
mov
call
aam
(bad)
mov
out
nop
std
(bad)
ret
popf
and
add
inc
adc
out
and
inc
adc
enter
and
push
dec
cmp
cmp
sbb
dec
add
dec
ficomp
adc
sbb
nop
mov
sahf
fstp
fs
or
dec
retf
jo
xchg
imul
jmp
nop
repz
(bad)
mov
fmul
fcomp
jecxz
jmp
rol
push
push
push
or
inc
or
jbe
pop
adc
es
jo
jnp
cdq
shl
pop
jg
push
cmp
inc
and
xchg
int
loope
movs
retf
mov
retf
cmp
std
test
fld
jbe
dec
vmwrite
cdq
(bad)
mov
mov
jecxz
hlt
mov
lock
lods
sti
mov
pop
mov
shl
iret
mov
test
in
iret
test
xchg
stc
mov
clc
test
xor
push
packssdw
jnp
cdq
shl
retf
mov
pop
vmwrite
push
ss
cmp
bound
pushf
cld
test
stos
cld
(bad)
int
sbb
xlat
outs
mul
in
mov
in
mov
call
xchg
rcl
shr
cwde
shr
not
enter
std
mov
adc
inc
ret
mov
inc
add
jae
dec
je
test
or
inc
xor
and
xchg
cli
pop
jmp
fisttp
fwait
popa
(bad)
pop
sub
cld
dec
rcl
inc
out
dec
cmp
cmp
dec
ret
mov
cmps
sbb
dec
adc
dec
sbb
ins
and
push
cmp
inc
push
push
adc
sub
pop
push
dec
or
cmp
pop
xor
pusha
and
push
or
jbe
jns
fwait
aad
inc
ror
arpl
push
cmp
imul
popf
sahf
cmc
call
out
xchg
inc
xor
hlt
inc
enter
mov
and
add
jno
inc
fmul
fimul
cwde
loop
fist
int
into
lods
fimul
int
mov
xchg
scas
fimul
iret
xchg
lds
les
sar
sub
cmp
js
popa
and
dec
pop
cs
es
add
dec
sbb
ins
sbb
cmp
imul
add
push
pop
add
push
jb
jo
jb
inc
or
jle
das
fs
adc
ins
cmp
sub
aaa
outs
sub
aaa
and
push
push
jae
gs
das
pop
pop
pop
pop
ins
aaa
addr16
pop
je
data16
aas
ins
sub
pop
add
es
jle
and
sahf
jmp
sbb
ins
pop
pop
or
and
pop
add
or
mov
mov
sbb
push
adc
jp
cwde
shl
js
push
or
adc
sub
pop
or
or
sub
jbe
push
and
and
dec
sbb
pop
sbb
cs
inc
and
jle
pop
sub
sub
inc
adc
push
adc
outs
adc
dec
sub
test
lahf
lds
xchg
shr
pop
inc
add
push
sub
jns
ins
and
popa
or
inc
pop
dec
dec
cmp
or
mov
fmul
retf
stos
ret
xchg
test
stc
sbb
or
pop
dec
push
scas
fisttp
sbb
sbb
push
sti
mov
nop
outs
cld
and
inc
aad
enter
or
add
call
aas
sbb
inc
mov
aam
loopne
push
push
rol
jno
fwait
outs
retf
push
das
(bad)
push
leave
push
test
inc
in
shl
pop
les
lds
lods
mov
(bad)
outs
mov
shr
xor
dec
test
push
in
jb
movs
xchg
aam
xor
cmp
pop
mov
cmp
iret
or
cmp
pop
fcom
out
sti
cmp
in
inc
mov
jge
test
nop
fldenv
(bad)
fwait
retf
pusha
sub
rol
adc
pop
sar
jmp
mov
sahf
mov
mov
mov
loop
leave
pop
out
adc
pop
adc
push
repnz
xor
push
and
inc
mov
stos
pusha
fdivr
pop
push
or
xchg
(bad)
xor
or
aaa
(bad)
out
dec
push
js
imul
sbb
cmps
out
dec
(bad)
(bad)
ins
sub
mov
cmp
lods
stc
mov
test
leave
cdq
in
mov
mov
nop
jns
call
cwde
dec
aam
in
scas
js
inc
mov
shr
dec
sbb
imul
stos
push
cmps
xchg
cmps
mov
jnp
add
sub
xor
test
sub
sub
ret
xor
push
inc
add
jo
add
aas
rol
mov
jne
pop
lods
ins
shl
ds
inc
add
push
jmp
mov
sub
sub
pop
mov
mov
and
cmc
and
adc
sub
dec
mov
pop
sbb
in
xor
push
adc
and
xor
inc
das
jns
push
ss
sub
idiv
push
les
call
push
hlt
and
daa
jbe
and
(bad)
(bad)
xchg
inc
mov
mov
cld
mov
jecxz
hlt
mov
in
leave
mov
xlat
lods
stc
test
rcl
or
xchg
shl
call
dec
pop
je
daa
push
add
fs
scas
in
mov
(bad)
nop
in
loopne
(bad)
mov
mov
mov
out
cmps
fadd
test
mov
ret
mov
mov
scas
(bad)
frstor
pop
cmp
or
dec
add
jmp
fnstsw
fdivr
in
push
push
cmp
or
popf
fnsave
push
and
int
neg
pop
jmp
(bad)
test
fcomp
push
cs
push
stos
ficom
imul
sub
push
cmp
inc
and
mov
dec
and
cmp
ins
jmp
fsub
les
cmp
addr16
mov
jmp
sub
aam
jmp
lock
or
jmp
movs
cdq
pop
inc
hlt
jg
push
cmp
pushf
out
mov
fist
fimul
push
imul
cmp
jg
cdq
retf
push
leave
dec
sub
push
pop
mov
pop
dec
pusha
xor
aam
cdq
mov
rcr
pop
jns
jns
sbb
cmp
outs
lock
sbb
adc
push
imul
xchg
call
imul
sub
mov
cmps
ret
sub
dec
retf
(bad)
jmp
xchg
mov
jle
push
or
adc
and
imul
shl
(bad)
fnsave
pop
jl
sahf
fdiv
push
and
push
inc
das
inc
daa
imul
mov
fld
data16
dec
add
jmp
adc
sahf
cdq
movs
mov
sbb
add
push
xor
aad
repnz
imul
adc
fs
dec
sbb
sub
pop
push
add
push
stc
mov
outs
push
loope
(bad)
xchg
xchg
xchg
sahf
mov
xchg
shl
int3
mov
(bad)
lods
hlt
cmps
jecxz
icebp
xchg
lds
loop
(bad)
mov
out
sbb
cli
jle
mov
push
xor
adc
inc
out
pop
int
mov
iret
fidiv
cmc
or
call
mov
lods
sti
mov
rol
(bad)
mov
out
enter
nop
repnz
xor
adc
(bad)
lock
stc
mov
jecxz
call
mov
test
xor
rcl
push
imul
and
sub
push
and
mov
push
add
and
pop
xlat
stos
mov
xchg
not
je
ins
adc
ins
ds
push
aas
push
and
inc
add
imul
push
sub
ins
sub
test
in
dec
or
ja
adc
cmp
xchg
jmp
ficomp
or
movs
rol
std
mov
les
test
mov
add
scas
retf
not
xchg
cmp
sbb
jge
dec
enter
xchg
mov
stos
fisttp
repnz
mov
enter
cli
mov
xor
mov
mov
movs
jmp
stc
mov
cli
mov
xchg
lds
sub
add
arpl
cmp
or
push
or
in
mov
stc
mov
loopne
repnz
mov
stos
clc
mov
push
fild
push
xor
push
ins
cli
mov
(bad)
shr
add
xor
cwde
sahf
mov
jge
inc
sub
and
adc
jae
js
pop
sbb
bound
inc
adc
inc
and
push
adc
inc
cmp
inc
pop
bound
sahf
jecxz
call
mov
(bad)
fcom
dec
aam
jmp
mov
mov
(bad)
imul
iret
sahf
jmp
std
xchg
loopne
mov
xchg
cld
lahf
in
mov
jmp
test
mov
dec
or
aad
out
xchg
hlt
xchg
bound
push
sbb
jnp
div
push
out
les
mov
cld
mov
mov
mov
xchg
aam
mov
mov
jmp
fld
fild
icebp
fisttp
fisub
out
retf
test
or
cmc
call
out
sti
ficom
int
(bad)
movs
sar
mov
stos
hlt
test
xchg
rcr
mov
xchg
stc
or
sbb
pop
adc
inc
adc
popa
cmp
dec
add
push
sub
imul
pop
dec
ss
int3
fld
nop
rcl
mov
cwde
(bad)
mov
mov
mov
(bad)
aam
mov
xchg
sbb
adc
outs
cmp
push
cmp
dec
cmp
adc
dec
adc
popf
jmp
mov
xchg
repz
call
add
push
dec
add
add
cmp
push
cs
add
push
cmp
cmp
jl
inc
push
jo
adc
dec
xor
bound
dec
sbb
popf
out
mov
fbld
retf
xchg
int
out
xchg
cld
mov
jmp
inc
pop
out
jl
add
xor
inc
enter
lods
fst
jl
loopne
aam
lahf
cmps
mov
cs
cmp
jle
mov
inc
repnz
adc
xor
inc
shr
pop
icebp
addr16
fsubr
test
je
sub
jo
pop
fst
push
cli
pop
sub
cmp
je
inc
mov
adc
dec
or
and
pushf
ret
jnp
pushf
(bad)
sbb
imul
call
add
xor
inc
mov
fcomp
es
or
dec
shl
jo
push
and
xor
inc
lock
mov
int3
inc
cmp
aas
data16
aam
dec
int3
adc
cmp
test
(bad)
push
fbld
xchg
cdq
xchg
xchg
repz
adc
ret
(bad)
push
imul
inc
cmp
jns
jp
rcr
jno
adc
add
push
fcomp
dec
out
xor
xor
inc
retf
mov
pop
out
jnp
adc
aaa
inc
enter
cmps
mov
add
inc
retf
scas
mov
out
or
loopne
cmp
push
loope
mov
cwde
leave
fs
outs
sbb
repz
aad
test
dec
or
sbb
sahf
popa
out
adc
or
mov
mov
mov
stos
sbb
or
dec
int3
jg
test
call
add
push
jns
dec
aam
adc
and
das
pop
mov
mov
imul
or
jbe
gs
mov
clc
push
and
push
or
je
mov
arpl
adc
and
lahf
nop
cmps
mov
pop
icebp
push
ins
clc
push
test
adc
cli
fist
jnp
cdq
out
cmp
jo
inc
sub
jns
lods
mov
rcr
adc
je
push
lds
xchg
push
add
retf
and
iret
fist
push
adc
dec
inc
mov
and
mov
fst
lods
adc
mov
add
inc
aas
push
pop
ins
add
xchg
test
ror
xor
(bad)
int
mov
cli
adc
fimul
cmp
push
jno
cdq
scas
inc
je
out
cmp
or
out
sbb
dec
fadd
push
sbb
jo
jb
and
loopne
(bad)
fdivr
xor
sub
inc
arpl
in
fisubr
fisubr
test
(bad)
aad
bound
inc
lds
inc
mov
(bad)
pop
add
aad
sahf
inc
and
or
mov
dec
js
pop
jl
jbe
and
(bad)
retf
mov
out
inc
dec
repz
jo
pusha
ficom
fnsave
out
arpl
outs
loop
mov
xlat
fist
out
popf
dec
push
test
std
or
pusha
push
hlt
jae
pop
les
cdq
getsec
rcr
ret
adc
test
push
jl
xor
pop
xor
xor
pushf
stos
xchg
popf
xor
jp
xchg
jnp
out
mov
jmp
mov
mov
xor
call
outs
(bad)
cwde
and
jmp
sub
push
mov
das
mov
add
shl
fsincos
call
outs
cmp
xor
mov
xor
mov
leave
add
call
dec
and
sub
pop
stos
jo
and
and
test
cld
add
push
popa
sbb
push
ss
mov
pop
dec
cmp
jmp
data16
adc
pop
jecxz
iret
mov
lods
lea
inc
iret
outs
(bad)
sbb
xchg
sahf
cwde
sub
fstp
mov
cmc
aas
pop
push
dec
outs
mov
rcr
xor
les
mov
fs
mov
push
xchg
xchg
inc
aam
rcr
pop
orps
call
push
iret
xor
adc
pop
mov
jnp
pop
fwait
sbb
xor
jbe
mov
(bad)
test
lahf
enter
dec
mov
out
mov
neg
imul
adc
movs
fsubr
cmc
test
add
cmps
push
mov
xor
fsubr
jns
test
xchg
sbb
sbb
scas
xor
inc
push
not
jmp
push
mov
mov
(bad)
sti
dec
mov
int
xchg
cmps
pop
jno
stos
xlat
jl
xor
hlt
jno
push
adc
movs
or
movs
pop
mov
mov
push
sbb
mov
jae
int3
push
bound
mov
mov
in
cmps
xchg
inc
in
mov
retf
outs
pusha
imul
iret
sbb
xor
mul
scas
inc
mov
sahf
adc
shl
inc
or
adc
add
imul
cmp
xchg
mov
sahf
jmp
add
dec
push
xor
aam
push
cs
ret
adc
add
aas
outs
push
pop
xlat
lods
jp
fst
jbe
imul
push
xchg
push
in
xchg
jmp
or
popa
add
pop
mov
pop
cwde
sahf
stos
add
stos
sbb
and
daa
shr
inc
cmp
stos
and
sub
shr
gs
aaa
fs
fs
jnp
outs
sbb
fiadd
fs
xchg
mov
push
in
sbb
push
push
mov
cli
and
sbb
int3
xchg
or
ss
pop
inc
jge
and
mov
sbb
xchg
push
pop
xor
jg
(bad)
pusha
or
out
ja
imul
or
and
loopne
aas
adc
(bad)
scas
inc
enter
shl
xor
adc
pushf
push
mov
pusha
sbb
mov
ss
xor
hlt
in
or
push
fcomip
sub
fild
adc
mov
add
aaa
outs
adc
dec
push
dec
jne
cdq
repz
xor
and
xchg
push
addr16
xor
movs
cmp
or
xchg
dec
dec
or
and
push
shl
xchg
inc
cmp
adc
jmp
adc
das
xor
or
push
cmc
sbb
retf
cmp
and
retf
int
js
mov
out
mov
bound
xchg
dec
in
pop
jne
mul
adc
add
sbb
and
out
pop
push
int
cmps
cs
push
jmp
xchg
pop
scas
mov
mov
test
lahf
(bad)
jae
shl
lods
test
pop
ror
rcr
or
inc
add
pop
imul
repz
aad
or
jmp
mov
sbb
int3
aas
(bad)
imul
or
jno
mul
lods
or
push
test
fist
mov
leave
or
xchg
repnz
add
xchg
(bad)
inc
or
fistp
outs
test
mov
and
inc
addr16
dec
fldenv
inc
pop
jae
lock
pop
jae
fbld
shr
fsubr
or
jle
jmp
ins
sub
add
push
pop
xchg
pop
rol
sar
popa
or
lds
mov
or
or
pop
mov
hlt
aaa
imul
xchg
and
retf
addr16
ret
jg
inc
pop
data16
push
cmp
push
inc
fnstenv
sbb
shl
sub
cmp
ja
leave
cli
sub
push
jmp
bound
jns
or
inc
or
cmp
shl
out
push
push
je
fisttp
ffree
push
ins
push
out
inc
shl
adc
or
mov
out
xchg
dec
int3
fisttp
adc
sahf
retf
cmp
call
mov
or
(bad)
daa
in
arpl
test
xchg
pop
into
or
pop
out
icebp
lock
mov
fisub
add
les
dec
and
xacquire
inc
imul
inc
psubw
ja
adc
jo
mov
inc
push
sub
rcl
and
mov
sar
mov
lods
push
sbb
add
dec
ret
fidivr
fstp
cs
sbb
or
fcomp
dec
in
mov
iret
hlt
cmp
add
jae
inc
inc
or
sbb
ret
pop
cs
pop
sub
add
das
je
jb
ss
in
clc
dec
retf
ds
pop
pop
ret
fwait
dec
scas
mov
add
jp
rcl
push
loope
mov
scas
test
mov
into
mov
sbb
pop
sub
mov
aaa
or
and
add
(bad)
hlt
mov
sub
out
shr
loope
inc
inc
hlt
cmc
nop
fs
in
sbb
mov
cdq
(bad)
repz
mov
adc
xchg
or
arpl
loope
xor
mov
xor
push
dec
dec
jl
sub
mov
fsubr
bound
mov
loop
(bad)
mov
(bad)
adc
aam
xchg
stos
or
data16
hlt
jbe
sub
xchg
dec
cmp
ret
or
es
cmp
jecxz
inc
push
mov
push
cmps
adc
jae
nop
jle
inc
fsub
stc
push
sub
in
fs
add
sti
cmp
xor
jo
mov
mov
pop
jns
lods
ret
call
fld
or
sbb
loopne
push
push
push
push
(bad)
pop
xchg
retf
in
dec
sbb
jg
into
add
out
adc
loope
push
stc
pop
popf
jl
jecxz
aaa
cmp
sbb
ret
mov
inc
cmps
pop
mov
dec
in
pushf
ins
jns
push
out
push
pop
jecxz
es
add
jno
mov
popf
pop
jle
clc
jge
ret
arpl
jmp
das
ds
dec
dec
pop
dec
jmp
cdq
shr
(bad)
pop
xor
jg
ror
data16
es
fldenv
inc
jns
call
xchg
mov
xchg
xchg
ss
lds
lods
lods
and
imul
icebp
les
(bad)
loop
inc
add
add
das
test
cmp
int3
stos
mov
sbb
lock
pop
inc
dec
(bad)
out
or
dec
jb
lods
jmp
lds
cmps
pop
icebp
mov
cmp
stos
movs
sbb
test
cmp
xlat
mov
push
pop
rcl
scas
sbb
adc
stos
imul
int3
jmp
cmp
adc
test
les
xchg
loopne
and
push
inc
inc
mov
jae
lods
inc
stos
jge
stos
mov
jle
and
out
leave
xchg
mov
cmc
and
and
inc
call
push
popf
test
sbb
pop
inc
xor
inc
and
cmp
inc
pop
retf
adc
xchg
inc
mov
push
stos
push
(bad)
sub
or
ins
add
dec
push
ds
mov
ror
(bad)
out
pop
or
jmp
jp
repnz
(bad)
ror
mov
xchg
call
aaa
js
pusha
in
inc
jmp
jge
pushf
pop
mov
jp
pop
dec
mov
lea
aad
sub
arpl
ss
pushf
sub
push
mov
or
cmc
popf
loope
cld
sbb
outs
ds
xchg
add
jmp
jl
(bad)
mov
in
inc
xchg
(bad)
fcmovnu
call
push
imul
dec
fsubr
push
(bad)
std
mov
xchg
cmp
sbb
fnstenv
cld
ins
ins
jmp
jge
fwait
pop
mov
(bad)
ficomp
loope
sahf
outs
fcom
inc
pushf
ret
sub
lods
and
into
add
mov
call
jecxz
sahf
mov
not
dec
mov
sub
stos
in
movs
call
dec
fisttp
xchg
and
cwde
data16
out
inc
xchg
out
fcmovu
inc
lock
adc
pusha
sub
popa
sbb
cwde
ins
test
daa
daa
test
test
fdiv
loop
mov
cmp
jmp
inc
fwait
test
fsubr
mov
xor
pop
ins
sar
dec
addr16
sub
push
je
xor
gs
or
push
js
mov
xchg
repz
inc
push
mov
sub
frstor
ret
out
mov
ret
jle
arpl
loope
cmp
pop
and
push
popa
arpl
fild
int
and
jbe
movs
int3
out
(bad)
pop
rcr
push
cmps
add
lea
mov
sbb
sub
xchg
out
and
call
jne
mov
addr16
add
push
add
(bad)
fist
jnp
sbb
inc
mov
jecxz
dec
sbb
dec
mov
push
xchg
jl
cmps
into
cld
xchg
add
loop
pop
cld
das
sub
xchg
jmp
add
stc
dec
push
mov
popa
xchg
out
push
inc
cdq
cdq
ss
pcmpgtd
imul
xor
sbb
dec
push
push
mov
cs
cli
mov
ss
ins
jbe
sbb
mov
out
sub
jne
mov
aam
stc
pop
jmp
jl
mov
jae
adc
(bad)
fisttp
inc
push
cmp
inc
pushf
shr
mov
push
xor
dec
cmp
xchg
out
test
cmp
out
mov
mov
xchg
add
add
inc
dec
ins
(bad)
jmp
push
sbb
pop
jb
cmp
mov
std
mov
loop
inc
je
pop
jnp
add
mov
jae
(bad)
mov
cmp
add
hlt
add
fstp
lods
jnp
dec
mov
std
inc
popa
push
pop
mov
jg
ret
push
inc
fcmove
mov
out
push
loop
and
fsub
sub
int3
add
lods
cmp
pop
imul
pop
test
ret
fmul
js
imul
daa
mov
cmp
in
mov
or
add
gs
push
pushf
int3
mov
mov
hlt
(bad)
out
popa
jno
sbb
ds
push
mov
dec
sub
cmp
push
dec
xchg
mov
push
push
xchg
inc
pop
dec
out
(bad)
mov
sbb
sub
outs
sbb
mov
sub
mov
dec
fstp
aam
test
mov
xchg
sbb
fldenv
mov
dec
pop
push
into
push
imul
in
inc
jecxz
and
jmp
xchg
test
imul
push
dec
and
pop
push
adc
push
icebp
inc
stc
push
leave
js
mov
int
imul
jle
imul
inc
aas
or
push
jbe
test
lods
(bad)
ror
mov
cmp
mov
xor
lods
aam
outs
test
xchg
pop
mov
movaps
cmps
ret
push
or
sbb
imul
(bad)
push
sub
cdq
in
jmp
icebp
and
cmps
shl
mov
cmps
and
rcr
popa
dec
cmp
pusha
bound
sbb
xor
sti
sbb
mov
xor
jl
push
dec
cli
stos
xchg
sbb
aas
fst
int3
jge
xchg
stos
mov
jmp
mov
pop
push
std
ja
xor
fsub
adc
push
repz
push
cwde
imul
xor
mov
xchg
xor
retf
daa
sbb
ficom
loop
jnp
jns
mov
jp
pop
shl
adc
jmp
pop
lods
dec
cmps
jns
sti
mov
mov
add
pusha
jle
ins
mov
adc
inc
sub
jmp
jae
mov
pop
mov
xlat
aas
mov
xchg
je
cmc
int3
add
enter
mov
mov
jo
inc
ss
shl
ret
sahf
jmp
add
pop
imul
sub
test
cmp
pushf
inc
js
fcmovb
dec
sub
(bad)
jo
add
dec
xor
(bad)
jns
xor
adc
dec
add
dec
xor
(bad)
push
pop
clc
xor
jno
pop
pop
xor
sub
add
out
mov
pop
push
cli
hlt
mov
cmp
mov
(bad)
aaa
mov
je
adc
inc
sub
sub
or
(bad)
in
out
adc
lods
js
iret
fmul
les
cmp
ins
jmp
(bad)
mov
dec
cmp
mov
push
mov
jno
in
(bad)
bound
push
pop
rcl
and
sbb
pop
jbe
dec
mov
xchg
imul
inc
mov
shr
daa
(bad)
jmp
and
mov
jmp
gs
adc
repz
(bad)
daa
test
loop
fsub
sahf
xor
out
pop
cwde
xchg
xor
loopne
or
shl
cld
call
sub
adc
dec
scas
repnz
cwd
add
int3
mov
nop
xchg
in
pusha
add
pop
fdivr
shl
xlat
cli
hlt
jge
xchg
lock
loopne
dec
push
stos
pop
and
retf
or
fwait
sub
mov
sbb
lea
or
js
pusha
popa
das
add
pop
(bad)
pop
pusha
cmp
and
rcl
pop
es
cmc
pop
jns
jnp
(bad)
xchg
and
test
fidivr
icebp
xor
push
call
dec
mov
popf
cmc
sub
inc
out
mov
scas
fld
sbb
seta
xchg
mov
pushf
cmc
mov
xlat
mov
adc
outs
xlat
std
adc
sar
popf
ror
cdq
nop
pop
aas
sub
retf
div
fcom
in
fs
les
mov
push
outs
adc
ficomp
iret
xlat
pop
popf
fdivr
int
push
out
cmp
lock
cmps
mov
and
mov
int3
test
mov
movs
das
movs
lods
jp
sbb
neg
mov
pop
retf
dec
mov
daa
mov
push
jbe
jnp
das
dec
cmp
xchg
ss
push
lahf
and
sub
aas
sub
xor
gs
in
add
or
ins
leave
popf
(bad)
inc
je
clc
dec
and
in
mov
arpl
jle
ss
ins
jecxz
dec
and
pop
mov
test
fmul
or
bound
lods
xchg
and
pop
out
mov
fwait
and
push
mov
mov
out
jle
cs
pop
lods
adc
mov
jmp
mov
outs
bound
ror
ds
cmp
out
mov
xor
pusha
outs
out
mov
imul
cmps
push
adc
out
ret
push
imul
mov
mov
dec
sub
aad
pop
inc
mov
lea
pop
mov
icebp
mov
ss
lahf
xchg
and
xor
pop
shl
les
xchg
mov
scas
and
push
loop
pushf
loop
cmp
ror
fcmovne
xchg
inc
inc
iret
(bad)
ret
test
add
add
ss
sbb
and
je
dec
out
adc
add
(bad)
loope
jg
test
jae
int
sets
push
inc
and
mov
pop
out
addr16
dec
out
sbb
or
retf
push
cmp
int
stc
clc
outs
mov
xor
sbb
inc
push
dec
sub
sbb
mov
jle
sbb
gs
mov
sbb
mov
sbb
icebp
pop
fdiv
sub
mov
lock
hlt
nop
int3
fdivr
(bad)
lahf
fimul
stc
pushf
cmp
mov
jl
mov
adc
cmp
add
push
inc
arpl
push
ficom
jo
ins
enter
sub
sbb
movs
test
out
leave
sti
(bad)
xchg
mov
and
xor
jnp
jecxz
or
jmp
adc
cmps
movs
or
cmps
push
repz
push
retf
add
push
leave
mov
loope
mov
scas
add
lods
adc
daa
cld
mov
dec
pop
fimul
push
out
push
push
jno
(bad)
jp
sbb
cmp
xor
out
cmp
ss
inc
push
ins
aam
jle
jecxz
repnz
jge
jo
clc
cli
xor
push
inc
add
jmp
mov
and
add
mov
sbb
in
movs
or
push
enter
adc
cld
test
dec
cmp
dec
loope
mov
das
sub
mov
sbb
mov
push
cmp
ror
fwait
jp
cs
add
adc
mov
cmp
jbe
cli
aas
inc
or
jno
mov
cli
stc
xor
mov
sbb
shl
jo
in
sbb
fs
push
ds
(bad)
mov
jb
leave
pop
xor
inc
cwde
dec
xor
pop
ret
std
cmps
aam
out
into
sub
idiv
popf
sbb
add
div
adc
pop
test
or
pushf
dec
cwde
scas
(bad)
mov
cwde
(bad)
push
mov
jne
or
mov
retf
mov
pop
push
xchg
je
jmp
mov
and
inc
inc
xchg
lock
jmp
mov
and
cs
leave
lods
adc
cs
lea
sub
jno
push
rcl
xor
stos
test
retf
xchg
int
in
retf
mov
in
fdiv
xchg
out
(bad)
mov
leave
jl
and
cmp
add
das
popf
out
mov
stos
jg
xchg
inc
jge
mov
mov
cmp
repz
(bad)
and
mov
xchg
jp
jle
dec
rcl
(bad)
imul
in
clc
pop
jnp
inc
inc
cmp
(bad)
out
push
stos
in
pop
ins
das
mov
and
sbb
mov
mov
add
leave
ins
or
call
push
sbb
mov
fmul
in
mov
jne
rcl
xor
imul
ret
stos
in
loopne
ret
xchg
and
ss
jne
cmp
mov
mov
xor
fld
push
(bad)
inc
(bad)
(bad)
cmp
mov
mov
sbb
mov
daa
pop
add
call
stos
adc
fcmovbe
mov
xor
cmp
push
add
daa
jne
out
mov
mov
ja
jo
retf
pop
push
dec
or
mov
dec
sub
popf
test
mov
outs
push
cmp
fs
aad
icebp
mov
repz
mov
and
jns
jg
hlt
mov
in
or
cmps
iret
jp
dec
jecxz
jmp
dec
movs
rcr
int
add
push
add
rol
mov
mov
push
pop
gs
stos
sar
mov
imul
adc
mov
loopne
scas
enter
push
iret
pushf
ins
aas
dec
add
mov
dec
mov
mov
daa
icebp
mov
loopne
dec
xor
aas
std
lods
sbb
fsub
sub
xchg
push
sbb
bound
pop
pop
sbb
or
jmp
sub
mov
xor
jecxz
retf
sbb
in
call
stc
add
push
jecxz
movs
xchg
lods
cli
mov
sub
fs
mov
mov
mov
inc
bound
adc
arpl
rcr
mov
movs
aad
adc
xchg
retf
and
loop
mov
sbb
je
push
and
ror
outs
enter
jae
jo
adc
add
mov
add
enter
fld
dec
outs
add
sbb
mul
and
xchg
add
push
push
fcomp
add
jl
sbb
idiv
mov
hlt
mov
cmp
ret
mov
test
ja
xor
rcl
jle
out
xchg
test
aam
add
loope
and
outs
add
adc
pushf
test
stc
mov
jne
adc
pop
add
imul
push
push
dec
or
jb
xor
aam
pop
or
push
dec
xlat
fwait
repnz
ins
cmp
mov
cmps
out
xor
sub
push
jb
dec
femms
dec
dec
adc
xchg
sub
gs
jge
div
rol
ins
xor
(bad)
popf
push
add
sub
or
mov
inc
enter
and
cmps
jns
dec
and
mov
out
retf
xchg
fs
pusha
xchg
fstp
mov
imul
xor
fstp
(bad)
jns
inc
stos
int3
(bad)
lods
pop
clc
mov
add
int
stc
sub
push
xor
mov
mov
xor
cmp
je
jmp
movs
mov
push
sti
mov
mov
cmps
jo
adc
scas
push
dec
movs
jmp
lods
int
jecxz
inc
add
add
repnz
or
jb
push
push
mov
xchg
cld
stos
iret
das
jg
mov
mov
pop
fstp
xchg
ret
fwait
test
cwde
mov
add
push
dec
pop
lock
stos
repnz
add
xchg
clc
pop
or
push
inc
push
hlt
mov
sub
test
inc
or
popf
fst
dec
call
call
inc
and
enter
lea
cmps
rcl
(bad)
call
push
push
add
rol
pop
pop
sub
push
add
inc
push
jmp
mov
test
xchg
imul
xchg
retf
hlt
mov
fbld
in
and
ds
push
in
add
je
xchg
push
sbb
cwde
sub
pop
aad
inc
sbb
xor
scas
xor
sub
mov
push
xor
cmps
icebp
sbb
(bad)
fstp
xchg
fild
movs
xchg
test
dec
pop
sbb
dec
push
minps
in
xchg
mov
sar
push
shl
mov
jno
jp
(bad)
sbb
inc
data16
daa
jmp
cmp
bound
push
rcr
and
jne
std
ficom
mov
xchg
sar
xor
jge
jmp
(bad)
mov
ss
add
ffreep
mov
stos
sbb
popf
int
in
leave
popf
test
mov
inc
inc
loope
aad
mov
xchg
ror
leave
sub
push
dec
cmpxchg
lods
hlt
into
nop
rol
jecxz
leave
(bad)
and
cmc
bound
and
mov
add
pushf
loopne
xchg
mov
mov
mov
cmp
bound
pop
add
stos
out
push
dec
dec
push
jmp
ret
xchg
jg
js
shl
xchg
xor
xlat
mov
adc
imul
jo
xor
int3
cs
cld
xchg
dec
adc
scas
add
inc
adc
and
test
dec
push
jge
sbb
ins
sub
ins
dec
sbb
clc
mov
call
cmc
outs
nop
cs
lods
clc
sub
inc
cmps
mul
mov
shl
mov
cmp
pop
mov
(bad)
(bad)
std
movs
sbb
jp
in
rol
mov
xchg
aad
mov
sub
shr
xor
sbb
js
cmps
loop
movs
(bad)
es
push
adc
xor
push
push
mov
test
stc
ins
add
cmps
mov
test
adc
(bad)
mov
imul
lds
pop
sbb
inc
adc
add
(bad)
movs
dec
pop
fstp
cmp
pop
or
xchg
dec
and
cmps
in
dec
push
cmp
aad
dec
push
push
cs
icebp
sahf
mov
xor
mov
mov
std
inc
xor
mov
pop
pop
std
mov
lahf
mul
mov
inc
sbb
(bad)
scas
shl
fwait
nop
iret
retf
pusha
mov
push
or
jns
pop
mov
jecxz
add
retf
xchg
inc
or
inc
int3
test
fisubr
rol
jb
jns
retf
fistp
pop
pushf
fadd
dec
repz
stos
inc
xor
pop
mov
jg
pop
jp
adc
shr
jns
(bad)
movs
pop
in
lods
les
push
sbb
arpl
inc
pop
cmp
outs
pop
in
stos
out
cmps
neg
inc
cmps
jmp
retf
aam
test
retf
fwait
lock
lahf
(bad)
fiadd
stos
dec
or
pop
push
pop
push
mov
(bad)
lahf
out
scas
pop
pop
sub
pop
or
repz
pop
loop
xor
rcl
adc
xchg
mov
xchg
fld
xchg
shl
cmp
imul
pop
ins
aaa
sbb
leave
mov
mov
mov
xchg
into
pop
call
sbb
stos
fimul
inc
ret
loope
jmp
push
cmp
ins
or
add
sbb
test
pop
xor
stos
dec
push
add
dec
adc
lock
push
add
cmps
lds
mov
call
outs
es
jmp
cmps
std
mov
xor
fs
and
sub
ds
sbb
cmp
jp
mov
xchg
nop
std
jno
add
ja
cmp
in
rcl
popa
adc
xchg
mov
adc
dec
sub
mov
fidivr
pop
lahf
fisttp
sub
arpl
mov
pop
cs
jbe
(bad)
fucomi
test
aas
jnp
lods
lock
ficom
sti
mov
fnsave
jno
(bad)
jbe
fs
xchg
scas
dec
scas
fimul
mov
push
sbb
fild
pop
mov
movs
inc
xor
je
inc
nop
fsub
jl
shr
mov
lods
hlt
daa
(bad)
xlat
xchg
enter
cmps
iret
bound
add
mov
and
pusha
lods
call
sbb
retf
mov
inc
mov
mov
nop
inc
sub
pop
push
out
cmps
or
cdq
iret
mov
pextrw
mov
sbb
pop
or
mov
sbb
lods
cmp
push
xor
fbld
add
xchg
repnz
sbb
jne
les
dec
sbb
mov
pop
jbe
mov
xchg
outs
lods
in
adc
push
push
pop
test
inc
fiadd
test
xchg
test
bound
(bad)
pop
mov
jmp
adc
iret
test
xchg
clc
adc
sti
mov
cld
mov
add
and
push
push
arpl
adc
js
mov
mov
popf
shl
pop
jb
fistp
(bad)
add
push
je
ds
sbb
lds
xlat
xor
jns
push
ds
pop
push
(bad)
int3
ror
imul
js
(bad)
enter
aaa
jae
aaa
sahf
leave
pop
cmp
mov
push
ret
pushf
int3
cmps
push
ss
sahf
stc
imul
add
jl
mov
pop
cmp
push
sbb
sahf
test
fdivr
cmc
test
cmps
mov
cmp
mov
rol
push
cmp
sbb
and
scas
jmp
dec
and
sahf
or
loop
ret
jmp
leave
mov
push
sbb
pop
adc
nop
fsub
pop
sbb
or
mov
and
mov
sub
fsub
mov
add
cwde
rol
out
stos
arpl
dec
sbb
xchg
aad
jl
pop
ss
nop
(bad)
lock
mov
jmp
shl
jo
push
pop
les
xor
sbb
and
inc
add
cmps
and
jmp
enter
and
jae
or
mov
pop
or
mov
hlt
xchg
shl
shl
push
and
mov
mov
jg
inc
pop
cmp
xchg
aad
mov
or
cld
test
mov
mov
push
add
push
push
jmp
xor
arpl
push
jl
pop
dec
fs
inc
(bad)
mov
adc
xor
(bad)
fisttp
into
push
sbb
mov
shl
in
add
imul
aad
mov
frstor
cwde
fldln2
mov
xchg
lock
ficomp
cmp
mov
out
sbb
dec
or
xlat
dec
and
inc
xor
sbb
xchg
les
popf
rcl
rcr
cmp
in
(bad)
test
pop
daa
in
mov
rcl
rol
pop
and
mov
fisubr
inc
cli
lahf
into
pop
xadd
push
sbb
xchg
add
push
mov
out
sbb
es
nop
cmp
stc
mov
cmc
ins
dec
jecxz
push
pop
push
int3
scas
retf
imul
mov
bound
fldcw
movs
(bad)
sahf
fbstp
movs
leave
mov
sub
popa
push
add
in
mov
add
stc
inc
sbb
sbb
clc
test
(bad)
mov
or
lods
fist
push
retf
mov
push
jl
int
std
xchg
fist
dec
sbb
pop
inc
mov
fisttp
push
xchg
mov
dec
loopne
nop
aam
div
sahf
lods
lock
pop
dec
enter
mov
fnsave
pop
and
sbb
sub
scas
out
in
xlat
popa
aaa
jae
cmps
ret
leave
mov
push
rcr
sub
add
cmp
xor
xchg
mov
mov
add
jg
(bad)
call
and
xor
shl
mov
and
dec
imul
nop
ret
mov
(bad)
cld
test
jl
and
cmp
sub
enter
cmp
jno
gs
inc
pop
add
jl
jg
fst
and
push
daa
jo
pop
mov
or
push
loop
out
aad
arpl
add
and
mov
out
lahf
fdiv
sub
inc
and
out
add
sahf
(bad)
or
clc
push
lock
imul
test
push
ror
or
sbb
xor
iret
nop
pop
adc
mov
ja
xlat
pushf
int3
xor
inc
jno
into
cwde
ins
or
or
mov
xlat
mov
imul
lods
mov
int3
test
(bad)
cmps
out
xor
inc
loop
jmp
add
push
or
cmp
push
bound
mov
jae
or
xchg
test
sbb
movs
sti
pop
mov
dec
gs
repnz
mov
mov
out
sbb
inc
add
pusha
xchg
leave
pop
loop
shr
clc
xchg
inc
and
or
sub
pop
cld
mov
mov
inc
ss
outs
scas
std
push
sub
out
mov
or
sar
inc
xor
mov
pop
dec
jns
add
shl
lahf
mov
shl
movs
clc
push
inc
xchg
enter
xchg
in
mov
pop
retf
stos
ins
aas
jns
rcr
mov
cmc
xchg
mov
aam
into
push
add
pop
aad
loopne
jl
div
xor
jmp
sbb
jb
jns
mov
sbb
shl
xchg
mov
and
mov
repz
push
and
add
jbe
loop
pop
(bad)
lods
in
test
(bad)
mov
mov
sbb
mov
cli
mov
push
push
dec
mov
add
fdivr
repnz
xor
dec
mov
test
or
jl
cmp
and
mov
cld
mov
jbe
rcl
arpl
or
dec
xchg
shl
mov
inc
or
sbb
sahf
mov
xchg
or
sar
pop
jmp
push
sub
pusha
add
push
fisttp
sbb
fld
sub
mov
in
lods
xor
add
pop
aas
xor
sbb
das
ja
stc
add
pop
or
xchg
mov
mov
add
cmp
cdq
ror
(bad)
stos
jmp
xor
cmp
and
push
jnp
mov
pushf
retf
dec
push
pop
loope
sbb
pop
je
loope
popf
pop
loopne
fbld
jle
mov
call
repz
mov
or
out
sbb
mov
mov
ds
outs
sbb
arpl
mov
loope
add
fwait
mov
xchg
outs
add
cmp
xor
pop
push
ja
cmps
ficomp
add
adc
xchg
test
mov
cli
mov
or
push
xchg
shr
daa
dec
sbb
or
loopne
adc
and
mov
movd
aas
jg
jle
cmp
rol
sahf
push
adc
in
xchg
jecxz
aas
and
cwde
aam
outs
mov
cmp
fwait
(bad)
ficomp
fist
jle
test
mov
adc
pop
fistp
pop
(bad)
(bad)
xchg
fwait
mov
jbe
cmp
sub
cli
mov
mov
repz
(bad)
xlat
arpl
push
test
test
sub
push
sub
fbstp
sbb
rcl
mov
test
cmp
(bad)
or
iret
sahf
ss
dec
xor
and
jge
pop
pop
push
pop
inc
enter
xchg
scas
mov
or
movs
sbb
and
stc
mov
and
(bad)
push
adc
sub
(bad)
outs
xor
inc
es
adc
lahf
mov
lods
add
pop
cmp
cmp
ret
xchg
inc
xor
xchg
cld
sbb
cmp
call
stos
out
jmp
pop
mov
cmps
fs
mov
fisttp
bound
pop
ja
in
test
stos
push
sbb
imul
out
scas
lds
ins
out
add
pusha
sub
pop
dec
mov
sahf
iret
add
jecxz
inc
xor
cmps
les
inc
cs
inc
repnz
int3
sbb
inc
fstp
out
mov
sub
and
daa
icebp
lods
(bad)
mov
pop
adc
aas
imul
dec
xor
retf
xchg
mov
add
inc
sub
and
xor
cmp
push
pop
(bad)
pushf
cmc
xchg
(bad)
lods
ret
imul
mov
mov
sub
inc
add
mov
dec
loope
cmp
mov
xchg
mov
loopne
sbb
jb
stos
enter
push
cmps
sbb
outs
push
dec
xlat
pusha
xor
outs
addr16
push
cmp
outs
adc
dec
push
and
and
mul
enter
sbb
ss
fucom
mov
dec
adc
fwait
rcr
mov
mov
(bad)
inc
add
std
cmps
mov
sub
xor
and
daa
(bad)
xchg
shl
out
cli
mov
test
push
jg
jns
pop
cwde
(bad)
mov
into
mov
push
push
cmp
in
jl
jg
jnp
pop
ins
pop
in
out
dec
adc
cmp
cs
scas
or
call
or
rol
pop
adc
jle
test
xchg
repnz
cld
or
cwde
mov
add
or
gs
scas
dec
or
test
hlt
adc
enter
scas
imul
inc
bound
inc
cli
imul
sbb
out
mov
fstp
call
jnp
jns
fdivr
adc
das
inc
pop
xchg
out
ja
cmp
and
mov
pop
loop
inc
sbb
nop
fisubr
hlt
movs
inc
adc
mov
outs
lods
(bad)
cmp
jb
or
in
test
xor
mov
or
stos
icebp
mov
or
sti
daa
dec
cmp
in
pusha
aas
ins
sub
or
xor
push
cmp
lods
mul
mov
pushf
sub
addr16
push
or
add
or
dec
scas
icebp
xor
add
sar
mov
inc
mov
ins
mov
mov
scas
pop
sub
call
cmp
mov
mov
mov
fucomp
fwait
int3
ret
dec
pop
in
in
shl
push
(bad)
pop
xor
rcl
jno
ins
add
hlt
mov
xchg
sti
adc
xor
dec
push
jae
popa
inc
adc
imul
mov
aad
sub
xlat
popf
repz
fst
addr16
xor
fimul
fild
call
jecxz
add
jmp
retf
mov
div
jbe
js
daa
push
mov
add
test
dec
jp
js
in
push
push
mov
fsubr
sub
pop
or
jmp
outs
ss
scas
push
xor
xchg
test
iret
dec
outs
sar
scas
std
sbb
jmp
test
(bad)
xchg
addr16
xlat
imul
dec
or
out
jne
inc
pop
add
push
outs
ss
xor
mov
add
jp
jne
pop
or
icebp
lods
enter
and
xchg
xlat
out
movs
jae
jl
das
dec
das
inc
jp
adc
mov
cdq
and
imul
jb
nop
loope
aam
dec
sbb
mov
sbb
mov
in
cmc
sbb
js
cs
pop
bound
inc
sbb
jmp
fisttp
jnp
pop
out
mov
or
mov
mov
jno
adc
popa
sbb
stos
cld
inc
or
inc
jmp
int3
cmps
data16
je
mov
sub
lds
sar
inc
add
sub
stc
jbe
mov
fmul
arpl
jb
in
mov
add
stos
ins
sub
loop
ss
(bad)
mov
icebp
stos
sti
call
ror
loopne
test
fisub
dec
rcl
es
jb
xor
arpl
es
mov
add
xor
hlt
into
(bad)
loop
add
das
jle
es
push
(bad)
stos
movs
into
cmps
lds
not
sub
mov
sbb
(bad)
xchg
out
mov
(bad)
clc
dec
cmp
mov
(bad)
out
(bad)
push
xor
cmp
daa
dec
sub
inc
pop
sub
pusha
sbb
test
inc
aaa
jle
scas
inc
inc
xor
add
fldcw
or
mov
cs
add
pop
adc
popa
call
sbb
sub
adc
fwait
out
mov
je
or
mov
and
and
scas
(bad)
lods
in
sub
cmp
xor
jb
jb
enter
sub
test
push
xlat
mov
adc
cmc
into
mov
fwait
jle
mov
add
gs
or
sub
dec
and
or
imul
daa
sti
test
push
mov
shl
jnp
rcl
fidiv
out
stc
jo
jge
shl
addr16
aaa
out
rcr
adc
mov
dec
(bad)
cmps
push
outs
cmp
xor
push
inc
xor
stos
mov
shl
inc
or
dec
(bad)
lods
jmp
xchg
shl
(bad)
fist
jg
mov
mov
pop
adc
mov
imul
aas
stos
ret
jb
jo
mov
lods
or
shl
mov
outs
(bad)
or
out
cmp
loope
(bad)
sub
and
prefetch
repz
or
retf
add
or
add
out
fidiv
psubb
jecxz
jmp
jno
inc
(bad)
ss
rol
and
add
add
and
pop
loopne
mov
cmp
xchg
popf
xchg
jp
cwde
imul
push
sbb
xor
adc
je
outs
pminsw
rol
popf
xchg
movs
inc
nop
scas
xchg
jb
inc
mov
jl
cmp
(bad)
outs
cmp
xor
inc
or
jp
jo
push
fwait
dec
jmp
cmp
jmp
sbb
icebp
cmp
pop
mov
pavgw
cmc
movntq
or
and
push
clc
pop
add
(bad)
call
ret
sub
dec
test
fcom
sbb
ss
jmp
aas
out
inc
stos
jge
cmp
pop
xchg
out
push
sar
sub
sti
popf
js
pop
xchg
pop
sub
push
adc
xor
sub
out
sub
sub
mov
push
add
mov
scas
clc
mov
add
out
mov
mov
xor
loop
shl
mov
mov
(bad)
fidivr
icebp
sub
and
test
xor
mov
jbe
pop
aas
sub
dec
ret
or
adc
push
imul
jle
push
xchg
xor
push
adc
xchg
addr16
das
or
sub
sub
repz
(bad)
enter
cmps
xchg
or
enter
std
adc
mul
xor
hlt
popa
or
push
fiadd
loop
out
and
push
icebp
sub
adc
add
call
enter
xchg
jnp
xchg
mov
xchg
fnstenv
cmc
mov
leave
stos
lods
mov
jbe
inc
int
sbb
sub
push
leave
dec
ficomp
xchg
jmp
jo
inc
mov
xchg
rcr
mov
xchg
shl
mov
rcl
aad
rcl
in
inc
adc
mov
mov
sub
lods
call
stos
(bad)
mov
xor
fcom
fdivr
mov
retf
mov
popf
test
xchg
inc
and
dec
pop
pop
or
jle
push
and
dec
or
sub
pop
push
dec
or
xor
inc
push
push
adc
and
inc
sub
js
jge
dec
cs
scas
mov
test
fiadd
imul
repz
push
pop
popa
or
enter
in
out
fldenv
(bad)
fwait
retf
test
cmc
sbb
push
sub
scas
and
(bad)
mov
jl
test
mov
ds
aas
mov
test
or
test
add
push
out
stc
scas
jmp
fild
test
mov
das
ins
dec
les
jle
adc
pop
add
ja
mov
leave
loop
xor
or
ja
push
sub
xchg
fbstp
loope
xlat
stos
sub
fcmovnu
sbb
jg
pushf
mov
xchg
cmc
ret
jl
jae
test
fs
(bad)
lds
cmps
pop
adc
stos
mov
movs
add
loop
cmps
jecxz
aad
sub
sub
loop
loope
mov
mov
jbe
mov
mov
mov
jecxz
out
movs
rcl
cmp
les
cmps
xlat
mov
push
es
cmp
jo
xchg
xchg
(bad)
pop
pop
xchg
test
test
out
in
outs
sub
jge
pusha
sub
(bad)
mov
add
cmps
out
mov
and
into
mov
inc
inc
pop
jl
cmp
xlat
ds
or
inc
xor
adc
addr16
dec
pop
sub
js
push
jle
mov
jae
js
std
mov
fcmove
mov
mov
movs
jecxz
push
ds
in
xchg
std
(bad)
push
xchg
mov
cld
lods
xchg
mov
cmps
into
xor
cmps
ret
(bad)
icebp
fistp
repnz
adc
jae
jbe
push
adc
jns
popa
pop
jge
scas
or
ja
mov
movs
loope
into
pushf
int
fld
mul
scas
loop
iret
mov
pop
cs
cmp
push
add
xor
fcom
or
mov
dec
cmp
bound
jecxz
xor
pop
in
pusha
fimul
das
sbb
or
loope
loop
fnsave
ja
mov
fucom
outs
sub
fisttp
jb
shl
jle
cmp
jno
fldcw
mov
out
mov
dec
stc
mov
and
dec
aas
or
and
mov
pop
mov
mov
clc
xchg
out
rcl
mov
imul
inc
sbb
jecxz
scas
cld
xchg
jl
into
mov
(bad)
lahf
loop
add
ret
es
or
lock
push
xor
inc
xor
rol
and
sar
dec
addr16
shl
pop
sub
and
imul
hlt
mov
outs
popa
repnz
lock
je
xor
inc
xor
arpl
stos
jmp
or
jbe
inc
clc
cmp
pop
xor
or
mov
fs
jg
js
mov
std
and
lds
fcom
repnz
test
fwait
mov
xor
pop
and
icebp
pop
mov
fisttp
js
(bad)
mov
mov
lock
jmp
push
call
out
cdq
shr
not
leave
mov
shr
jecxz
jg
cmc
lock
xor
push
xor
cwde
push
pop
inc
xor
xor
push
xor
push
adc
sub
pop
push
dec
or
sub
jge
xchg
loop
les
call
mov
hlt
mov
mov
cmc
pushf
call
xchg
cmps
neg
cmp
lock
cmps
jecxz
mov
cmp
(bad)
cmp
inc
cmp
ja
xor
jno
and
pop
jae
push
adc
sbb
cmp
pop
outs
or
sub
pop
push
ins
xor
and
push
add
xchg
test
mov
pop
sbb
fcomp
xor
adc
adc
pop
outs
call
cmp
iret
packuswb
and
push
push
fs
sub
pop
or
jae
push
adc
sbb
cmp
pop
outs
or
sub
jno
das
xchg
aaa
pop
das
mov
pop
sub
or
push
adc
pop
push
push
mov
aam
arpl
xchg
xor
inc
xor
mov
mov
mov
cmps
repnz
xchg
mov
mov
fsubr
shl
and
xchg
mov
mov
or
mov
mov
aas
pop
and
add
jl
push
xor
pop
punpckhbw
mov
je
jno
inc
sbb
pop
or
push
popf
scas
push
aaa
sar
imul
aad
and
call
shl
scas
stc
fucomp
fs
jns
in
cdq
out
into
jns
xchg
pop
out
mov
rol
ins
sbb
or
mov
out
cmc
push
cmp
test
movs
ficomp
pusha
bound
inc
and
(bad)
mov
(bad)
add
outs
pop
sub
icebp
test
(bad)
sub
mov
fld
ins
les
(bad)
leave
mov
cmps
pop
cmp
dec
cmp
ds
data16
or
mov
outs
inc
push
in
pushf
call
out
pusha
pop
add
inc
xor
inc
xor
dec
or
ds
and
jb
jno
dec
adc
dec
and
jno
lods
(bad)
mov
ret
jle
adc
add
push
aas
mov
and
xchg
cmc
push
mov
shl
call
cmps
push
cmc
call
and
imul
xor
cmp
sbb
sbb
dec
pop
xor
inc
ds
sub
das
dec
cmp
(bad)
std
fmul
jno
jb
test
ret
fstp
adc
dec
jnp
rol
fisubr
dec
or
mov
mov
addr16
xor
mul
add
cmp
shl
movs
ficomp
cmp
scas
test
xlat
stc
ja
hlt
push
loopne
mov
rol
mov
test
jge
popa
add
inc
jnp
lods
jecxz
mov
mov
gs
or
cmps
fnsave
sbb
outs
sbb
cli
mov
push
ins
idiv
(bad)
or
jp
pop
jecxz
popa
aam
retf
ins
fst
xlat
out
pop
jl
sub
dec
cmp
jnp
popa
pop
xor
mov
adc
cmp
dec
es
add
dec
sub
pop
cmp
xlat
push
outs
arpl
scas
out
fistp
(bad)
dec
call
push
pop
add
pusha
es
add
cmp
push
aas
jo
push
sbb
jmp
ret
xchg
in
xchg
fldenv
push
xchg
lods
call
leave
int
dec
sub
add
xor
das
jge
or
dec
cmp
jle
push
cmp
call
and
cmp
inc
test
mov
jo
xchg
jge
addr16
xchg
int3
test
xor
out
jo
jb
sbb
movs
out
idiv
dec
jnp
pushf
add
jp
sub
or
fldcw
jo
jl
inc
mov
rcr
retf
mov
call
add
repnz
ret
enter
xchg
pop
sub
pushf
clc
loope
jmp
sbb
jg
push
mov
cmp
dec
loop
test
fbld
nop
mov
xchg
mov
in
cmps
mov
fisttp
xchg
xchg
fisubr
or
add
jno
sahf
(bad)
jmp
imul
stos
adc
fs
mov
mov
jmp
out
pop
shl
std
push
call
sub
pop
pop
outs
mov
mov
mov
arpl
repnz
imul
jl
jl
in
mov
ins
push
jge
jae
xchg
or
sbb
push
jp
imul
xchg
lock
call
and
sahf
push
push
and
ret
cwde
and
push
and
jge
popa
dec
cld
lods
or
pop
aaa
inc
adc
and
sub
sub
lods
pop
pop
lahf
mov
aam
push
jge
dec
neg
mov
jp
xchg
repz
fnstenv
das
ss
mov
test
fdivr
arpl
jbe
cmovg
sbb
dec
jle
addr16
jge
aas
pop
das
jnp
jns
inc
cmp
aaa
jae
popa
add
and
xchg
lock
xor
call
addr16
cld
fadd
outs
or
adc
popa
loopne
out
sbb
jnp
inc
adc
xchg
div
fs
addr16
dec
sbb
cli
mov
jmp
add
clc
sbb
int
fistp
hlt
repz
(bad)
repz
sbb
jbe
xchg
push
lds
in
data16
fisubr
dec
call
fsub
imul
mov
loopne
aam
div
int
lds
aad
repnz
xchg
mov
xchg
mov
(bad)
adc
xchg
push
and
std
cmps
jmp
jnp
jno
or
outs
imul
jl
out
mov
stos
std
mov
mov
mov
aad
repnz
xchg
mov
mov
retf
mov
adc
push
call
leave
popf
fistp
rcl
(bad)
xchg
sar
out
mov
shl
loope
ror
pop
in
mov
sbb
xchg
repnz
repnz
xchg
mov
and
jno
jp
push
repz
(bad)
mov
movs
int
xlat
cmps
clc
mov
mov
shl
leave
mov
mov
fisubr
repz
retf
mov
mov
cld
mov
jb
bound
xlat
adc
test
mov
xor
out
stos
push
cmp
cli
cld
pushf
and
sbb
pop
sub
dec
or
addr16
pop
xor
and
ss
dec
aaa
outs
cmp
cs
pop
sub
and
inc
add
outs
aas
push
cmp
sub
ds
and
jno
mov
fild
popf
xchg
scas
add
pop
push
ins
clc
mov
in
xchg
loop
loopne
mov
xor
std
mov
pop
and
xor
std
pop
pop
adc
add
push
push
and
pop
dec
sbb
push
dec
das
jle
pop
sbb
and
dec
pop
je
jg
pop
push
pop
sub
das
and
imul
mov
xor
pop
daa
cmps
mov
fistp
xor
std
(bad)
pop
cmp
jge
jno
sbb
xor
scas
mov
mov
dec
das
xchg
lock
les
in
pushf
fstp
into
cmps
lds
fbld
inc
xchg
mov
mov
xor
push
cmp
xlat
sahf
jmp
rcl
mov
adc
adc
push
je
(bad)
loope
(bad)
mov
sub
stos
(bad)
les
mov
sbb
loope
jmp
mov
and
(bad)
jp
jno
or
mov
adc
push
pop
cmp
mov
sahf
call
inc
inc
add
add
push
pop
arpl
xchg
loop
cmp
in
enter
push
ret
or
rcr
mov
push
dec
std
sahf
in
mov
(bad)
cmps
cmc
mov
rcl
cmp
push
xchg
mov
jg
(bad)
(bad)
mov
lods
push
or
fld
cdq
and
imul
adc
sub
inc
dec
jnp
mov
aaa
movs
mov
(bad)
loopne
xor
mov
(bad)
(bad)
jmp
jmp
xchg
(bad)
add
lock
xchg
sbb
jae
dec
js
gs
jle
xchg
pop
xlat
ins
sub
aas
inc
xchg
mov
mov
xor
and
push
xor
das
pop
add
add
pop
cmp
push
push
popa
or
and
sbb
popf
jmp
or
dec
dec
cmc
mov
adc
dec
cmp
scas
std
mov
pop
sub
adc
inc
das
test
movs
adc
jno
js
adc
je
cdq
sti
fbld
ror
aam
ficomp
movs
(bad)
mov
mov
mov
repnz
icebp
adc
lds
stc
(bad)
fidivr
cmps
add
dec
sub
pop
stos
jmp
inc
hlt
(bad)
not
cmp
(bad)
in
or
inc
arpl
dec
and
dec
cmp
pop
or
dec
push
pop
push
je
cmp
jno
push
and
js
test
fidivr
(bad)
mov
and
pop
cmovne
jno
add
addr16
pusha
in
dec
xchg
pushf
out
ds
(bad)
dec
sbb
out
adc
ins
js
stos
fstp
or
adc
jo
test
inc
jmp
int3
xchg
rcl
xor
mov
jmp
and
and
mov
test
retf
cdq
std
sbb
push
popa
mov
scas
loop
test
pop
pop
cwde
mov
aad
add
or
addr16
inc
adc
or
int3
jbe
fnstenv
data16
jnp
outs
out
push
adc
retf
pop
loope
(bad)
repz
sbb
push
and
mov
fiadd
retf
sub
pop
adc
sub
xchg
dec
and
xlat
mov
in
pushf
call
adc
bound
mov
xchg
pop
clc
xchg
adc
jae
xor
inc
call
arpl
dec
fmul
jle
pusha
cmp
movs
aad
mov
ficomp
lds
mov
out
out
retf
mov
fldcw
jmp
loope
adc
adc
jae
mov
movs
fild
pop
test
jnp
arpl
mov
bound
aad
aas
ins
lock
into
mov
sar
pop
add
jl
add
sub
dec
ss
aad
rcl
push
add
popa
adc
jne
inc
xor
pop
and
mov
pop
movs
fsubr
mov
fnsave
xchg
push
les
in
dec
loope
lea
test
movs
into
mov
in
enter
aam
xchg
cmp
dec
or
loop
pusha
pushf
adc
test
cmps
pop
sbb
jl
dec
cmp
xchg
in
in
pop
sub
iret
jg
gs
aam
enter
sahf
mov
(bad)
lds
(bad)
dec
in
lods
(bad)
mov
retf
mov
ret
adc
rol
cdq
cwde
stc
mov
fstp
aad
lds
cmp
mov
mov
lods
or
je
inc
test
outs
in
add
sti
lods
or
js
jge
lock
out
test
xchg
xlat
test
lods
lock
mov
mov
popf
rcl
gs
int3
and
and
inc
sbb
mov
iret
mov
mov
push
and
adc
icebp
mov
xlat
ja
outs
jbe
(bad)
stc
out
xchg
jecxz
jecxz
aaa
nop
ss
mov
movs
fdivr
scas
mov
sub
jmp
stc
and
es
sbb
sub
jo
sbb
pop
push
add
sbb
sub
jbe
adc
jns
or
mov
mov
pop
repz
aas
inc
cmp
call
je
call
or
jge
imul
mov
mov
fcomp
inc
xchg
js
outs
xchg
call
adc
sahf
in
div
pop
in
jbe
xlat
stos
inc
lea
push
inc
fwait
xlat
mov
imul
push
test
push
pop
aaa
mov
or
cwde
mov
arpl
data16
pop
xor
(bad)
in
pop
fdivr
(bad)
sysexit
pusha
inc
nop
stos
fild
popf
xchg
scas
add
pop
push
ins
add
xchg
push
add
push
jecxz
sub
or
fst
clc
imul
fidiv
test
push
mov
fwait
mov
jmp
jle
or
cmp
sub
and
adc
mov
push
push
fistp
push
(bad)
aad
hlt
xchg
movs
and
ret
sub
sub
(bad)
pop
jnp
push
pop
add
scas
arpl
pop
and
mov
cmc
ret
daa
pop
hlt
mov
and
or
cmp
jno
mov
out
loop
test
dec
rol
pop
or
sbb
jo
adc
mov
pop
outs
lds
addr16
sub
and
std
push
mov
cmp
int
jbe
loope
jb
and
inc
inc
jecxz
xchg
push
bound
in
mov
aad
jno
hlt
mov
inc
sub
sub
ins
fs
cmp
movs
inc
dec
loopne
arpl
out
test
sbb
pop
ja
movs
mov
mov
xchg
pop
ss
jb
jle
sub
getsec
sbb
or
pop
pop
jbe
lock
cmps
dec
mov
les
mov
mov
ins
cmp
mov
aad
cmps
ds
and
int
inc
sbb
pop
and
push
jp
mov
and
in
cs
pop
jnp
mov
cmp
pop
loopne
aas
ret
sti
sbb
add
nop
lods
fdiv
dec
test
aaa
or
inc
ins
mov
mov
ficom
or
xchg
pusha
lods
int
sbb
call
leave
(bad)
ins
ret
or
scas
int
cmp
daa
push
mov
lea
xor
jne
out
add
pushf
cmp
stc
mov
stc
in
hlt
add
pop
movs
aam
fs
pop
outs
mov
cmp
gs
pop
pop
ret
dec
and
cmp
cs
retf
mov
cmps
ret
mov
push
inc
int
or
retf
icebp
and
adc
cmps
dec
xchg
sub
ss
fiadd
outs
sub
mov
xor
sub
mov
lods
add
add
or
inc
mov
mov
mov
into
in
jle
ret
and
push
popa
(bad)
mov
ja
and
(bad)
mov
sub
ds
mov
fs
xchg
cwde
ds
push
neg
fst
js
mov
jno
mov
pop
cmp
icebp
in
outs
mov
or
into
(bad)
cmps
push
xchg
cmps
jle
test
jns
fstp
xor
jl
mov
xor
aas
adc
xlat
shl
xor
push
pusha
(bad)
jmp
mov
pop
jae
mov
es
inc
cmp
into
out
push
inc
mov
xchg
mov
push
push
dec
pop
jbe
das
pop
fimul
sahf
and
mov
xor
dec
movs
add
ss
pop
js
(bad)
lods
cmc
in
cmps
sub
mov
out
ins
int
(bad)
mov
cli
icebp
push
xchg
cmps
adc
xor
fcom
out
push
mov
dec
lods
or
mov
adc
xchg
mov
movs
inc
call
mov
dec
pushf
lahf
mov
cdq
push
push
jle
cwde
pop
out
adc
stos
imul
add
xor
aad
dec
stc
jnp
or
into
mov
imul
push
retf
mov
pop
push
cld
dec
pop
jns
mov
jg
ins
(bad)
fisubr
shl
pop
push
sbb
mov
jg
enter
adc
cmp
mov
inc
cld
sbb
neg
in
pusha
jno
mov
les
xor
stc
out
inc
jbe
call
scas
lds
jmp
dec
add
int
jae
fwait
inc
fbstp
mov
inc
repnz
jno
inc
movs
enter
ds
push
cmp
cwde
and
(bad)
adc
in
sbb
mov
push
xchg
das
adc
add
retf
test
inc
add
imul
enter
jp
inc
jo
adc
mov
outs
inc
in
in
fist
add
(bad)
aam
in
test
pop
jo
fsub
outs
jmp
outs
fs
pop
fld
imul
pop
cld
fs
(bad)
pop
cmps
and
(bad)
outs
out
pop
jnp
push
mov
push
pop
mov
out
ror
test
aad
push
movs
mov
jmp
in
mov
das
fadd
inc
mov
jno
stos
cmp
imul
dec
or
ins
fsub
sbb
movs
(bad)
retf
shl
mov
aam
into
inc
push
mov
retf
cmp
sbb
inc
ss
loopne
cmp
dec
xor
ins
sub
cwde
jae
int
dec
or
jbe
jmp
xor
push
mov
mov
and
cmp
mov
pop
jmp
sar
add
sbb
jge
cli
addr16
add
jno
cdq
dec
sbb
cs
pop
icebp
mov
cmp
xor
add
mov
shr
and
or
xchg
dec
mov
jo
and
popf
cmps
(bad)
sbb
inc
bnd
push
pop
lods
mov
sbb
outs
or
dec
inc
mov
sahf
fs
sub
mov
scas
dec
lods
dec
out
rol
fdecstp
js
xlat
stc
push
fmul
sub
xlat
outs
dec
push
push
push
jmp
and
mov
xor
mov
cmc
loopne
loop
push
mov
fbstp
mov
xchg
dec
outs
mov
push
jae
aaa
arpl
rcl
xchg
pop
jns
mov
ins
adc
out
mov
lock
int
mov
mov
push
data16
in
fs
inc
push
and
sbb
or
test
mov
in
mov
inc
sahf
lods
or
ins
sub
mov
jne
jmp
std
retf
rcl
xor
cdq
jp
cmp
dec
mov
sar
dec
inc
mov
push
push
lods
add
call
xchg
es
cmc
scas
ins
sbb
ins
xchg
fidiv
xor
pop
xor
inc
pop
mov
fisttp
inc
mov
js
dec
jecxz
xchg
fsub
(bad)
dec
lds
cmps
int3
ficom
xor
mov
xchg
fld
ins
dec
mov
ins
fucom
daa
cmps
out
std
ret
js
je
ss
dec
stc
fadd
and
xor
xchg
test
pop
sbb
test
xor
pop
add
(bad)
pop
out
cmps
mov
lock
scas
nop
and
into
mov
push
mov
xchg
ins
cwde
fidivr
pop
(bad)
outs
lock
mov
das
mov
jbe
cmp
mov
and
xchg
xchg
mov
push
iret
aam
in
cmc
out
(bad)
mov
loope
clc
fwait
icebp
add
lods
cmp
pusha
jb
ss
pop
fsub
imul
jbe
push
mov
jecxz
call
sti
sub
cdq
jecxz
ins
cwde
xchg
or
pop
lock
inc
mul
ret
daa
cmc
js
rcl
sahf
movs
retf
mov
pop
jbe
repnz
push
shl
scas
or
mov
stos
jle
ret
mov
sub
ja
push
push
cmp
mov
fwait
mov
out
fdivrp
lods
inc
pop
(bad)
clc
mov
xchg
cdq
inc
repnz
push
call
call
push
gs
cmps
neg
lock
aam
xor
ficomp
ret
bound
push
mov
pop
fs
pop
mov
lahf
xchg
bound
scas
cmp
pop
movs
push
(bad)
setbe
aad
mov
and
and
add
or
jp
add
pop
popa
or
xchg
mov
push
nop
xlat
push
stc
mov
xchg
not
mov
sar
jns
adc
dec
dec
fwait
add
sbb
mov
imul
retf
sub
jnp
mov
push
aas
pop
or
(bad)
push
out
movs
mov
fisttp
inc
and
ret
jmp
add
jge
add
add
les
mov
mov
js
bound
or
fdiv
cdq
sub
outs
std
retf
pop
or
(bad)
call
xchg
out
mov
cmp
outs
imul
retf
stc
jecxz
inc
cmp
loop
mov
shl
sbb
mov
pop
or
retf
fisttp
jge
popf
xchg
mov
mov
mov
mov
sbb
sub
xchg
aaa
mov
in
lods
fld
inc
cmc
cli
dec
and
cdq
jle
int
add
cmp
sbb
mov
push
jnp
ja
add
pop
movs
or
mov
iret
ret
add
es
dec
jl
scas
call
and
fstp
push
xchg
cmps
jl
jge
and
retf
arpl
inc
mov
retf
outs
jmp
push
imul
adc
or
loopne
pushf
sahf
mov
pop
std
std
lds
test
into
sbb
sbb
pusha
xchg
fiadd
movs
sar
or
jg
clc
mov
sub
fisubr
add
pop
push
aam
popa
or
xor
or
scas
sub
mov
in
enter
sub
(bad)
popa
dec
sub
or
xor
scas
stc
push
push
or
out
in
popa
jge
ret
jmp
int
out
pop
in
push
mov
pop
ret
cmc
jb
pop
or
xchg
mov
cld
gs
or
enter
out
mov
inc
jmp
xchg
mov
xchg
scas
loop
sbb
push
je
imul
pop
add
icebp
sub
jmp
jb
mov
loopne
arpl
pop
(bad)
call
pop
inc
ins
mov
push
mov
into
pop
inc
ins
xor
mov
cmc
sbb
fild
mov
scas
enter
aam
aam
pop
push
mov
dec
mov
dec
adc
pop
call
jp
pavgw
ja
cwde
jno
inc
icebp
or
out
sub
jg
push
sub
retf
or
jge
das
aas
pop
add
sbb
xchg
jns
mov
mov
dec
sti
xchg
sbb
sar
inc
out
push
sub
dec
test
xor
imul
jnp
icebp
jo
inc
sbb
jmp
mov
ret
mov
mov
movs
sbb
or
jmp
push
push
mov
test
fucom
jge
or
xchg
sub
mov
mov
out
dec
cmp
icebp
and
sbb
push
add
mov
xchg
pop
mov
rol
xchg
dec
cmp
xor
push
(bad)
es
dec
add
sub
add
or
sar
mov
ret
scas
mov
adc
rcl
(bad)
mov
fbstp
lahf
jmp
outs
push
repnz
add
and
lahf
and
loope
mov
popa
dec
lahf
dec
lods
cmps
add
pop
jecxz
and
sahf
sbb
es
fnstsw
inc
mov
cli
mov
sbb
pop
or
fisub
pop
out
cmps
or
inc
repz
and
jne
test
dec
loopne
mov
bound
bound
ror
fwait
clc
ins
pushf
or
push
or
sbb
add
retf
sub
cwde
inc
mov
movs
loope
jns
lods
in
xchg
pop
mov
ss
pop
in
cmp
adc
mov
mov
sub
dec
neg
(bad)
xchg
enter
adc
pop
retf
jbe
dec
ror
pop
cmps
retf
pop
inc
stos
scas
int
xchg
movs
dec
(bad)
movs
out
mov
and
lahf
add
test
push
adc
into
jns
push
pop
aad
jnp
cwde
mov
sub
pop
sub
xchg
retf
cs
sbb
in
push
in
in
push
cmp
movs
dec
xlat
push
and
xchg
xor
lods
jge
aad
imul
inc
dec
xor
adc
dec
inc
jmp
xor
jns
adc
pop
repnz
cmp
mov
pop
sbb
pop
lea
mov
jb
jp
lahf
mov
cmp
or
sar
out
int
ja
sbb
aas
test
fwait
cmp
iret
jnp
jle
xchg
out
dec
inc
daa
pop
mov
stos
ror
and
inc
(bad)
xor
fs
pop
mov
jmp
in
push
pushf
test
loopne
mov
rcl
aas
adc
push
sub
stc
dec
sub
cmp
dec
rol
cmp
retf
and
shl
mov
lods
out
push
sbb
lea
and
(bad)
out
sbb
or
jne
push
push
or
test
repz
shl
mov
xchg
scas
and
mov
(bad)
fdivr
adc
xchg
(bad)
das
sbb
fs
cmp
mov
add
les
cmp
xchg
add
sbb
xlat
xor
(bad)
ins
repz
dec
int3
dec
scas
std
(bad)
mov
or
lds
mov
push
xchg
adc
add
aam
in
pop
div
aad
ret
or
mov
jp
fldcw
fstp
ret
add
int
xchg
pop
leave
in
push
cdq
mov
movd
inc
(bad)
leave
mov
mov
and
jecxz
nop
mov
arpl
stos
and
popf
fs
in
cmp
add
and
jns
mov
pop
je
fnstsw
loop
sub
imul
ret
mov
jmp
and
xchg
enter
add
outs
fmulp
pop
(bad)
and
imul
int
scas
das
push
cdq
xchg
or
sbb
fisttp
mov
clc
pop
(bad)
test
leave
hlt
sub
and
imul
push
scas
mov
and
pop
call
lock
pop
aaa
nop
jp
push
rcl
hlt
xchg
aam
mov
cmp
nop
pushf
xor
jmp
add
push
inc
lds
(bad)
inc
gs
hlt
pop
xor
xchg
jne
push
and
mov
(bad)
pop
add
push
or
loope
icebp
scas
xchg
test
inc
test
sbb
sbb
adc
ror
mov
jmp
leave
loop
lods
popa
cmps
mov
sub
pop
dec
mov
sti
mov
mov
lods
or
cmp
mov
push
in
mov
cli
mov
jle
mov
cmp
out
pop
or
mov
mov
pop
push
call
lods
cli
adc
cmp
xchg
sub
rol
test
pop
sar
push
xor
cmp
sbb
imul
sar
stc
mov
jmp
sub
pop
inc
or
pop
ret
dec
mov
cmp
pop
out
sub
scas
jae
aad
add
fnstsw
pop
mov
jbe
rcl
aaa
mov
mov
sub
int3
imul
or
test
loope
pop
xlat
jmp
pop
adc
mov
add
push
movs
clc
scas
fcmovb
jae
rcr
(bad)
lods
les
mov
or
mov
sub
pop
ja
push
inc
mov
xchg
sahf
fmulp
(bad)
jmp
int
cs
cmp
cmps
xor
inc
mov
je
scas
cmp
rcr
dec
fs
gs
and
movs
enter
jno
stos
pop
mov
sub
xor
fwait
inc
retf
cmp
mov
das
rol
mov
cmp
mov
ds
push
icebp
popf
xor
nop
test
mov
popf
mov
inc
out
push
mov
cmp
mov
fst
or
bound
test
cld
ins
dec
adc
adc
sbb
movs
int3
dec
mov
xchg
mov
cmp
or
shl
jae
lds
jb
jnp
fadd
adc
jae
pop
icebp
call
and
cdq
cmp
xchg
xor
jbe
pushf
mov
add
ficomp
jne
frstpm(287
pop
and
ja
inc
push
je
ds
or
pop
arpl
fisubr
inc
aad
pop
mov
out
mov
scas
pop
jp
mov
mov
imul
out
sub
and
or
add
jae
das
cmps
push
inc
pop
adc
test
jmp
mov
into
inc
sbb
int
dec
cld
outs
stos
leave
jnp
jge
jb
(bad)
pop
adc
cdq
clc
imul
push
(bad)
(bad)
(bad)
jae
push
inc
neg
jle
push
ds
fistp
dec
fst
es
pop
repz
ja
iret
dec
loopne
add
xor
adc
push
in
sbb
fdiv
sbb
jecxz
stc
retf
call
cmp
jnp
fs
adc
je
mov
pop
iret
mov
(bad)
cmp
addr16
xchg
mov
jle
push
fiadd
hlt
mov
cli
call
call
fsubr
sti
pop
aad
enter
mov
jl
pop
dec
aaa
sbb
imul
and
jns
add
fild
cmp
fs
lahf
xor
(bad)
ja
loopne
pop
and
and
pop
fdiv
movs
fnsave
aaa
mov
ror
scas
es
ja
mov
pop
ret
fisub
les
mov
fs
push
shr
adc
js
cli
jb
cdq
ret
cld
mov
clc
jae
cli
cmp
pusha
(bad)
adc
cmps
adc
out
push
jbe
push
enter
aas
and
add
xor
pop
xor
(bad)
repnz
push
std
sbb
es
sbb
sub
cmp
out
int
fsub
sbb
daa
sbb
inc
loopne
idiv
pop
cwde
pop
lahf
enter
fxch
inc
pushf
inc
push
into
xchg
ss
imul
hlt
cs
or
mov
leave
dec
xor
into
ja
push
xchg
cs
pop
imul
or
shl
lods
rcl
clc
es
sub
mov
rcr
mov
retf
hlt
icebp
cmps
test
dec
mov
fstp
out
jl
lock
inc
push
(bad)
push
jne
dec
loope
stc
iret
push
mov
jp
(bad)
xchg
mov
or
ror
or
mov
ss
adc
aad
push
push
out
mov
jl
xor
div
mov
adc
push
push
cmp
test
cmp
scas
sub
or
ins
stos
xor
pop
out
punpckhwd
xor
loope
les
push
sbb
(bad)
mov
cmps
cmc
hlt
fisub
xlat
cwde
mov
cmp
or
test
(bad)
pop
mov
mov
test
cmps
cwde
inc
pop
xchg
iret
loope
pop
mov
add
pop
outs
outs
int
mov
pop
mov
(bad)
mov
jmp
mov
rcr
pop
enter
(bad)
aam
fiadd
sbb
js
xchg
jb
outs
cli
add
pop
icebp
xor
jl
add
jo
cmp
push
fsub
xlat
pop
dec
aam
rcl
mov
cmp
pandn
lock
xchg
cmps
lods
jp
stc
inc
mov
or
cmp
mov
fimul
pop
xlat
mov
inc
jnp
inc
cmp
inc
nop
xor
aad
(bad)
jb
dec
clc
pop
lods
cdq
cmp
outs
or
push
imul
pop
and
mov
cdq
(bad)
retf
mov
paddb
cli
int
xchg
xchg
dec
repz
push
fyl2xp1
mov
gs
mov
jns
(bad)
aam
sbb
pusha
(bad)
jl
mov
pop
sbb
fidiv
out
dec
fld
js
push
inc
lods
pop
int
sub
and
test
shl
pop
sahf
and
fmul
(bad)
popa
and
fwait
adc
jmp
sbb
jl
add
xchg
push
add
loopne
adc
xchg
cmc
arpl
push
(bad)
sbb
add
sub
cmp
sub
jl
cdq
mov
stc
aas
jnp
fidiv
je
scas
bound
enter
inc
outs
sti
cs
test
push
mov
fidivr
jmp
out
sbb
lods
pop
mov
lods
cdq
mov
pop
push
xor
inc
test
lea
imul
mov
pop
jle
repnz
pop
arpl
jle
fmul
dec
inc
pushf
jle
jno
inc
adc
aaa
fcomp
add
test
(bad)
pop
xlat
cmp
loopne
dec
jb
les
adc
mov
pop
in
mov
push
sysexit
inc
and
xchg
lock
push
popa
(bad)
fwait
movs
stos
add
push
je
push
adc
xchg
xor
inc
push
retf
mov
and
cmp
loope
dec
fdivr
mov
inc
or
sbb
neg
int
pop
(bad)
mov
inc
push
test
inc
test
push
fwait
sar
imul
fsub
ficom
cmp
push
cmp
xor
and
dec
pop
inc
test
jae
inc
stc
and
leave
in
repnz
stos
cmps
or
call
cmp
jecxz
push
jo
adc
mov
jle
call
fldcw
sub
popf
lock
scas
pop
xor
pop
out
jbe
std
inc
sub
in
mov
call
and
adc
pop
add
mov
iret
cmc
inc
jge
inc
mov
xor
sub
jbe
mov
jbe
sub
mov
adc
cdq
mov
scas
pop
sub
ret
call
sbb
mov
ja
mov
std
xor
cdq
in
push
sub
popa
add
int
cdq
mov
std
imul
mov
fwait
or
shr
or
mov
es
ds
push
adc
call
or
cli
jo
and
test
jo
push
cmps
xchg
cmps
sub
cwde
inc
cmc
lods
inc
fimul
xor
cld
lahf
pop
fsubr
movs
arpl
ds
jo
ficom
repz
mov
mov
(bad)
cmp
sub
sub
jns
mov
sbb
fsubr
popf
dec
jecxz
arpl
or
mov
fstp
mov
xchg
fbld
loopne
mov
mov
movs
jae
adc
stos
stos
dec
push
ficomp
mov
push
inc
(bad)
fnstsw
mov
xchg
and
popa
pop
fld
in
sbb
stos
mov
and
xor
(bad)
int
jnp
xor
out
and
xor
or
xchg
pushf
jmp
retf
ror
add
jmp
lea
fdivr
dec
adc
loopne
sbb
fadd
mov
adc
out
or
dec
lds
jg
xchg
jo
adc
add
add
fdiv
loopne
sub
add
dec
daa
jns
test
xchg
not
cmp
jmp
mov
jle
aaa
lds
add
dec
push
fsub
mov
push
fnclex
leave
pop
or
in
push
mov
cmp
jno
clc
and
jg
sub
pusha
call
pop
aad
fstp
adc
inc
sub
mov
popa
xor
mov
inc
jg
inc
xor
mov
aam
popa
stos
sbb
test
sub
adc
mov
test
fwait
or
mov
std
adc
dec
xchg
jno
push
ins
fisttp
pop
add
mov
cwde
js
repz
adc
fcomp
mov
xchg
mov
mov
loope
inc
xor
add
push
mov
ret
arpl
repz
push
imul
jecxz
pop
inc
dec
mov
jmp
pop
or
lds
mov
xchg
outs
mov
sub
sub
push
inc
mov
adc
inc
adc
mov
cmp
push
and
push
inc
mov
or
stos
dec
inc
and
push
push
push
mov
std
sbb
shr
mov
cdq
xchg
jb
xor
cmp
pushf
test
add
sbb
out
adc
adc
cmp
scas
xchg
pop
mov
xchg
and
lea
loope
jge
sbb
(bad)
popf
inc
icebp
das
sbb
xchg
jmp
sbb
xchg
pop
dec
into
lds
out
aam
jp
(bad)
ret
enter
arpl
or
je
jno
jae
popf
test
pop
enter
cmp
popf
loope
cmp
gs
add
pop
mov
sub
aam
xor
(bad)
fldenv
or
jp
or
inc
arpl
jbe
mov
into
out
cwde
sub
mov
arpl
add
mov
xchg
dec
jns
jno
xchg
mov
shr
aam
jl
bnd
xlat
(bad)
sar
imul
lds
xchg
fwait
dec
xor
xor
pusha
in
inc
aas
jmp
push
pop
xchg
sbb
inc
xchg
in
fld
stos
sbb
in
and
and
icebp
ds
xor
push
lds
xchg
add
mov
add
sbb
xor
push
sbb
adc
xlat
dec
aas
cmp
test
jmp
popf
push
mov
js
stos
inc
or
adc
cmps
xchg
dec
sti
jl
sti
movs
les
cmps
add
arpl
xor
jmp
(bad)
(bad)
adc
xor
adc
push
jmp
cmp
xchg
(bad)
lock
repnz
(bad)
pop
push
ins
jns
icebp
test
test
mov
sub
jmp
xchg
cmc
test
sbb
sbb
or
fidiv
xchg
sbb
jmp
xor
mov
xchg
cmp
cwde
jo
add
div
sbb
ret
cdq
cs
addr16
inc
ret
adc
add
fistp
leave
inc
push
cmp
ret
or
xchg
fs
dec
jae
mov
dec
lds
inc
retf
dec
jl
cmp
clc
inc
adc
xchg
popa
pusha
xchg
fnstenv
mov
add
ja
push
jo
inc
das
cdq
shr
dec
cwde
xchg
cmc
mov
pop
jmp
mov
scas
ret
(bad)
(bad)
cdq
fisub
mov
mov
adc
jbe
and
ins
jecxz
push
lahf
lahf
dec
js
mov
dec
jge
cmps
les
xor
or
push
cwde
test
xchg
rcl
rcr
scas
ins
pop
repnz
(bad)
sub
fdiv
mov
enter
repz
stc
aaa
add
xchg
cmp
lds
xor
pop
fimul
(bad)
jns
dec
or
(bad)
cld
(bad)
push
xlat
outs
or
mov
jno
xchg
sti
loop
and
pop
out
pop
pop
repz
mov
dec
rol
push
fadd
xor
pop
mov
pop
hlt
(bad)
dec
imul
push
inc
(bad)
cmp
dec
shr
fwait
mov
jg
ds
cmp
retf
lods
mov
inc
fld
xchg
(bad)
xor
repz
das
pop
sti
rol
sbb
rcl
pop
(bad)
xor
sub
cmp
and
call
pop
jno
jmp
mov
test
ss
in
sub
add
inc
jae
mov
mov
aas
push
lock
fs
aam
hlt
and
sbb
jmp
xchg
xor
xor
or
sub
push
adc
(bad)
repnz
cmp
sti
lods
in
sub
inc
icebp
mov
lock
(bad)
inc
(bad)
fdiv
idiv
call
not
(bad)
jge
fucomi
daa
sub
or
dec
xlat
pusha
mov
sub
out
test
stos
dec
push
lds
add
mov
jne
push
cdq
rcl
mov
loopne
or
add
sahf
not
or
rol
mov
daa
popa
sbb
cs
jmp
daa
(bad)
out
fadd
test
cmp
jle
push
call
(bad)
xor
mov
sub
lock
dec
and
push
jns
ror
out
sub
jbe
push
pop
cmps
les
popf
push
and
(bad)
mov
push
xlat
mov
fcmovu
pop
fdiv
sbb
cmp
and
jbe
pop
cld
cmp
dec
or
mov
retf
add
mov
or
and
xor
jmp
jl
pushf
adc
bound
sti
pushf
leave
sbb
cmp
imul
jmp
fiadd
or
push
cli
mov
mov
lock
jo
xor
pop
out
stos
jecxz
ins
and
xchg
adc
fst
stos
xchg
mov
in
sub
daa
fistp
je
sbb
sti
and
mov
or
dec
out
push
mov
and
xor
js
mov
daa
(bad)
arpl
ins
aas
pop
outs
cwde
gs
es
es
lds
cmp
xor
sub
cli
ror
mov
cmp
neg
sbb
cmp
pop
add
int3
movs
ins
retf
and
dec
retf
arpl
(bad)
cmps
in
fsub
xlat
and
mov
or
mov
xchg
sbb
aaa
out
pop
pop
aas
ror
xor
inc
pop
cmp
inc
or
loop
push
mov
shr
mov
js
shl
bound
clc
adc
push
jbe
jnp
mov
pop
xchg
jmp
arpl
sbb
rcr
mov
or
jmp
mov
sub
ret
popf
clc
ds
mov
jle
or
lea
mov
call
imul
add
xor
cli
pop
cli
fcom
rol
mov
pushf
pushf
outs
cld
pop
je
cli
and
in
in
adc
sti
pop
lea
call
icebp
xchg
outs
add
mov
adc
outs
loope
or
mov
pop
inc
xchg
pop
pop
ins
mov
push
(bad)
mov
stc
idiv
xchg
ins
ds
test
push
fadd
je
sti
push
xlat
lods
add
enter
mov
xor
icebp
stc
jp
or
cli
cmps
adc
adc
in
shl
mov
imul
aas
pushf
fst
push
(bad)
xlat
jmp
jmp
ins
sti
xor
push
cmp
in
sbb
aam
inc
dec
repz
dec
vprotb
sub
cmp
imul
iret
jmp
mov
mov
or
dec
and
add
es
pop
xchg
sahf
xor
(bad)
cdq
fist
(bad)
inc
mov
es
mov
adc
push
repnz
jns
cmovl
(bad)
fldenv
popf
jno
and
stc
add
mov
mov
jg
fistp
xchg
lods
jbe
pop
popa
add
nop
push
std
daa
push
fmul
jbe
xchg
cmp
mov
sub
repnz
lds
cdq
cmp
neg
fstp
aas
fnstenv
push
xchg
stos
and
outs
xchg
mov
mov
add
or
cmp
inc
mov
pop
and
dec
xchg
sbb
push
ret
pusha
loopne
inc
pusha
adc
fdivr
mov
pop
mov
es
cmps
outs
fbld
cmp
ret
xchg
neg
(bad)
push
push
inc
mov
cld
cld
into
jle
jnp
(bad)
data16
mov
mov
dec
fisttp
je
cwde
add
cmp
pop
or
add
stc
call
int
or
jmp
cs
std
mov
push
bound
fnstcw
pop
mov
jb
std
xchg
outs
lods
scas
test
pop
adc
xchg
lods
sti
fisttp
test
pop
mov
mov
sub
xchg
push
pop
pop
add
cli
jge
cmps
and
push
push
ds
xor
jo
movs
mov
xchg
scas
cmp
lahf
xchg
or
push
leave
and
movs
cmc
xor
fucompp
cmp
ret
xchg
adc
jge
xor
mov
xchg
push
mov
neg
xchg
fsubrp
push
or
sar
pop
add
sbb
xchg
mov
movntps
cdq
data16
cmp
neg
mov
test
vmread
inc
and
cmp
pop
out
pop
movs
add
jb
arpl
scas
clc
add
fmul
mov
mov
pop
adc
cmp
xor
ins
inc
pushf
pusha
dec
mov
sbb
push
not
(bad)
mov
or
mov
add
xchg
dec
mov
xor
shr
aaa
daa
or
pop
adc
loopne
dec
xlat
mul
cmp
jmp
adc
(bad)
cmp
add
scas
mov
push
jbe
pop
in
sub
xor
jae
mov
imul
movs
fs
push
mov
jmp
ret
arpl
repnz
scas
pop
mov
mov
cmps
add
and
cmp
data16
mov
push
fcmovnb
pop
retf
in
and
pop
xchg
retf
pushf
popf
dec
shr
or
cmp
in
into
test
pop
mov
out
mov
jo
cmp
pop
shl
or
and
sahf
push
test
add
jno
in
test
jmp
enter
and
pop
jbe
jecxz
mov
cdq
in
pop
push
mov
jae
push
xchg
rol
in
dec
stos
imul
ret
jnp
pop
sbb
jno
jb
jno
add
lock
xor
test
movs
ja
in
xor
fsubr
mov
mov
enter
movs
test
mov
inc
outs
(bad)
jo
cs
in
xchg
mov
push
jle
jge
sub
inc
jb
jmp
test
and
sbb
mov
jl
push
call
out
lods
add
mov
dec
add
(bad)
mov
fcomp
sbb
inc
xchg
or
pop
sti
push
dec
cmp
pop
pop
leave
pop
pop
aaa
ds
push
ins
adc
cmc
pushf
mov
sti
cwde
jle
jl
push
jae
xchg
mov
sbb
das
ins
add
jecxz
xchg
jecxz
imul
and
dec
aaa
pop
inc
sahf
(bad)
neg
adc
(bad)
jns
and
dec
mov
or
imul
cwde
cmp
je
imul
sub
inc
cmp
test
div
add
cmp
xchg
aaa
mov
mov
and
stos
popf
cwde
pop
xor
(bad)
cli
stc
pop
jmp
pop
fwait
(bad)
retf
sub
mov
fisttp
push
dec
add
mov
movs
sar
cmp
test
jne
xor
mov
or
cmp
fmul
jge
mov
je
test
mov
lahf
mov
aad
aaa
lock
sbb
adc
(bad)
scas
inc
ss
sub
dec
jns
or
mov
adc
push
mov
mov
rcl
xor
fistp
xor
sbb
sahf
mov
sbb
push
into
cmp
pop
push
retf
js
add
or
pop
jne
dec
mov
sbb
sti
sub
shl
cwde
jo
std
cmc
lahf
inc
mov
jge
(bad)
repz
mov
dec
pop
les
fstp
jl
xchg
lds
and
cs
xchg
shl
dec
mov
add
jecxz
xor
call
lods
mov
aam
inc
fstp
mov
or
(bad)
cli
jecxz
sbb
out
loopne
add
int3
inc
inc
pushf
inc
std
lock
into
fs
je
ja
je
adc
push
mov
jnp
fisub
sbb
xchg
ins
mov
test
mov
cmps
(bad)
comiss
dec
pusha
mov
sbb
neg
add
push
xor
xor
mov
loopne
sbb
js
das
and
pop
push
dec
push
int
sub
and
ss
in
xchg
int3
rol
jg
add
dec
or
call
iret
jne
call
and
mov
loop
mov
mov
inc
xor
mov
xchg
mov
jmp
jo
pop
mov
bound
popf
ins
fidiv
mov
adc
scas
sbb
adc
xor
xor
mov
xchg
in
fwait
sub
or
jno
fs
dec
sub
(bad)
in
fcomi
dec
adc
fist
sub
sub
movs
sub
mov
cmp
mov
pop
add
mov
jns
cdq
add
outs
mov
aas
aas
mov
mov
xor
movs
cld
stos
dec
and
adc
gs
outs
xor
cmp
sbb
(bad)
sbb
test
les
or
mov
push
enter
popa
shl
sbb
pop
not
cmp
mov
and
and
pop
in
xchg
mov
add
mov
mov
popf
adc
pop
out
add
clc
xchg
push
sbb
mov
xor
out
sbb
dec
xor
and
xor
test
sar
pushf
retf
cwde
(bad)
mul
mov
sbb
pop
cmp
jae
cdq
push
sub
jo
dec
repz
mov
cmp
ficomp
sar
xor
outs
repz
cmp
inc
sub
xor
mov
or
push
or
jmp
inc
in
stc
pop
call
out
pusha
adc
or
cmp
xor
adc
sahf
xchg
rcr
xor
inc
arpl
ins
push
cli
push
sbb
mov
mov
mov
(bad)
out
dec
mov
push
out
jnp
jl
cs
push
iret
push
push
push
push
mov
push
in
fcomp
mov
dec
and
scas
es
retf
and
movs
cmp
dec
outs
jp
stc
xor
xchg
popa
lahf
or
inc
pusha
ds
aam
stos
xor
dec
cmc
or
cmp
mov
sub
movs
jmp
push
sahf
push
and
enter
mov
sbb
cmp
mov
cmp
in
(bad)
or
lods
dec
dec
(bad)
arpl
movs
and
test
fwait
sub
cmp
pop
mov
mov
(bad)
sub
add
or
in
bound
aas
jae
cmps
and
out
pop
pushf
dec
cmp
nop
inc
jbe
(bad)
or
mov
mov
aad
cmc
sahf
loop
push
in
aaa
imul
jl
cdq
cmp
add
popa
jp
push
xchg
rol
add
push
jmp
jge
test
sub
sahf
out
fs
xchg
mov
push
into
push
(bad)
in
pop
xchg
and
jne
(bad)
push
add
cmps
jno
movs
xor
loope
fld
mov
jno
pop
xor
inc
pop
xchg
std
or
enter
cmp
cmp
icebp
scas
cmp
clc
mul
sub
adc
or
xchg
pop
fsubrp
mov
(bad)
fidiv
push
push
dec
and
sub
(bad)
inc
sahf
loop
lea
xchg
outs
pop
add
dec
pop
dec
cwde
and
or
in
mov
rcl
gs
popa
and
jmp
mov
sbb
inc
and
fstp
jbe
rcr
adc
jmp
shr
xor
fcomp
mov
dec
test
jp
repz
fst
lea
std
std
rcl
shr
js
inc
arpl
mov
cdq
out
prefetcht0
or
ja
les
jno
jmp
and
pop
cmp
pop
sti
adc
ret
je
cmp
mov
add
call
cmp
les
adc
or
mov
sbb
cmp
xlat
rcl
sti
jbe
stc
(bad)
cmp
idiv
or
mov
cld
xor
push
sub
pop
mov
pop
mov
dec
arpl
repz
lock
repz
(bad)
push
loopne
inc
xchg
add
or
jmp
add
xchg
push
add
jne
lods
ror
jo
push
add
pushf
stc
test
rol
ss
sub
pusha
pusha
adc
inc
sub
jmp
xchg
aad
lea
pop
push
dec
pushf
xchg
rcr
push
es
(bad)
jg
mov
faddp
nop
mov
outs
dec
sar
adc
add
lock
sbb
mov
xchg
jnp
lahf
enter
adc
stos
shr
adc
and
icebp
xchg
lds
mov
adc
inc
sub
outs
test
jne
pusha
cmp
inc
rcl
jp
stos
cld
jp
pop
adc
pop
ins
les
add
jnp
ins
test
data16
jbe
mov
sahf
adc
loopne
das
sub
jns
dec
add
jae
sbb
pop
sub
dec
xchg
ffree
jbe
dec
stos
enter
push
js
dec
adc
hlt
mov
lods
in
test
mov
loopne
into
inc
cmp
aaa
jae
enter
mov
loope
iret
push
adc
and
fisttp
inc
push
(bad)
xchg
lods
in
clc
stos
out
mov
js
push
xor
ficomp
icebp
call
sub
add
push
add
jb
push
aas
inc
retf
cwde
enter
pop
or
jb
dec
adc
mov
out
les
outs
jae
jne
dec
or
gs
mov
push
jmp
mov
jo
cmp
cmp
mov
sub
test
add
and
(bad)
cmp
push
xchg
rol
xor
outs
cmp
xchg
shr
retf
outs
or
arpl
cmps
(bad)
lods
mul
pop
mov
test
push
ss
(bad)
and
jl
not
sub
andnps
test
rcr
repnz
dec
and
jle
cli
imul
mov
retf
or
mov
sahf
idiv
outs
lods
in
jno
mov
xor
call
jmp
push
movs
repz
(bad)
mov
mov
cmps
les
xchg
repnz
(bad)
leave
femms
imul
sbb
rol
xchg
mov
xor
cmps
loop
js
pop
das
jae
mov
xchg
loope
neg
mov
lods
inc
add
inc
adc
push
out
xchg
int3
lahf
fist
push
(bad)
xchg
scas
test
lods
fmul
fiadd
data16
mov
icebp
pop
sbb
push
fisubr
leave
push
inc
mov
pop
rcl
adc
ins
inc
push
arpl
std
stos
mov
jo
js
stos
mov
and
inc
fistp
jne
call
push
mov
xchg
pusha
jmp
sub
cs
outs
sub
stc
mov
mov
xor
inc
add
and
add
(bad)
mov
and
clc
test
stos
enter
mov
xor
into
stos
cli
(bad)
fcomp
dec
into
pushf
in
lods
outs
and
scas
jmp
in
icebp
pusha
sbb
addr16
in
dec
cmp
inc
mov
shl
aad
xor
xor
adc
rol
jge
mov
dec
pop
ins
aaa
sbb
mov
jge
push
xor
jp
cwde
xor
gs
das
jg
repnz
adc
sti
(bad)
les
jecxz
xlat
push
push
in
test
rol
ret
stos
enter
fld
or
mul
cdq
ins
sub
call
xchg
adc
int
push
outs
js
jmp
clc
test
sub
test
mov
cmp
rcr
jne
jmp
gs
sbb
pushf
jo
push
test
inc
xor
in
je
cmp
mov
pushf
enter
lods
xlat
(bad)
and
nop
jno
adc
std
mov
ficomp
daa
rol
pusha
bound
sub
mov
mov
adc
rcr
mov
mov
mov
adc
inc
add
pusha
mov
js
(bad)
fbstp
dec
push
jle
in
push
pusha
sub
scas
repnz
xchg
mov
fild
imul
xchg
xlat
fwait
addr16
ror
aam
fistp
pop
paddq
test
mov
ds
daa
xor
pop
push
jl
xchg
xlat
add
and
outs
xchg
and
shl
dec
adc
dec
push
imul
call
dec
push
ins
aad
out
xchg
sbb
cmp
jp
fidiv
jae
mov
xor
fs
mov
es
add
jns
icebp
lea
inc
mov
(bad)
int3
movs
push
add
popf
aad
inc
cmc
xor
adc
not
ficomp
pop
ss
adc
mov
mov
test
sub
imul
sbb
jge
test
xchg
lds
loope
fisub
dec
sbb
jnp
dec
cmovae
repz
xchg
inc
add
cmp
dec
or
fwait
(bad)
in
(bad)
stos
rcl
cmp
(bad)
lods
jl
mov
and
call
imul
mov
xor
inc
add
cmp
dec
test
jg
cmps
xor
sbb
cmp
repnz
dec
inc
lds
push
dec
lahf
inc
or
gs
movs
xchg
fwait
pause
jecxz
inc
or
inc
cmp
push
mov
fs
cmp
dec
adc
jne
and
test
mov
xchg
bound
dec
imul
imul
mov
mov
add
cwde
rcr
dec
daa
push
add
aaa
stc
lea
pop
sbb
cmp
push
dec
or
mov
adc
pop
sub
jg
adc
rcl
mov
mov
xchg
leave
(bad)
loope
lods
mov
xchg
inc
cmp
pushf
cdq
js
jo
push
xchg
std
sub
icebp
add
out
hlt
out
sbb
inc
sub
inc
mov
leave
and
add
aas
lods
into
xor
pop
add
cli
cdq
jg
ins
or
aad
jns
pop
xor
inc
mov
inc
out
jge
dec
add
enter
mov
xchg
ret
xchg
adc
js
jae
push
cwde
movs
push
shr
pop
push
shl
scas
jmp
fldcw
push
in
outs
cmp
jge
cmc
movs
lds
jbe
imul
je
mov
ror
push
adc
pushf
lods
sti
mov
sti
cmp
sub
mov
movq
popa
cmp
mov
es
adc
mov
dec
or
inc
out
in
and
sbb
out
dec
jmp
(bad)
in
dec
cmp
mov
sbb
loop
cmc
mov
push
adc
ret
add
xchg
out
mov
mov
inc
add
inc
mov
inc
mov
mov
add
xchg
call
push
and
popf
(bad)
jle
ret
mov
sbb
sub
sbb
inc
mov
loop
pop
cmp
fidiv
xchg
out
mov
das
mov
xor
sbb
stc
rcr
js
jp
mov
enter
dec
mov
mov
xchg
imul
out
inc
and
int3
mov
mov
xchg
ret
add
lahf
ficomp
push
fwait
mov
pop
or
lock
dec
adc
push
sub
xchg
fidivr
dec
or
popa
cmp
inc
sub
mov
stos
out
ficomp
jb
ret
jns
jno
push
daa
dec
sar
hlt
push
retf
mov
rol
addps
fimul
rcl
stc
push
out
mov
imul
or
mov
cmp
mov
pop
test
mov
xchg
push
cmp
dec
xchg
dec
sar
pop
(bad)
mov
jmp
test
lods
pop
adc
add
jno
fidiv
mov
or
inc
adc
imul
xchg
nop
jne
pop
sub
fadd
or
ret
mov
pop
mov
pop
mov
mov
inc
xchg
rol
shl
(bad)
scas
lds
push
adc
(bad)
mov
sbb
dec
jno
xchg
(bad)
div
sbb
push
scas
int
and
fisttp
addr16
ins
sub
mov
js
pop
push
rol
ficom
inc
xor
xor
(bad)
lahf
cmp
push
stc
test
fcomp
ret
mov
dec
cli
outs
sub
int
dec
dec
mov
movs
rcl
sbb
push
jbe
and
mov
js
cmps
rcr
xor
idiv
mov
adc
scas
(bad)
movs
(bad)
or
ja
push
mov
lds
pop
daa
daa
arpl
aad
add
push
mov
jb
cmp
dec
(bad)
fiadd
dec
or
shr
dec
sbb
mov
pop
and
cmp
js
push
mov
xchg
jecxz
jns
movhps
xor
adc
cld
movs
jge
jmp
adc
jmp
sti
mov
pop
andnps
sub
mov
fsub
jp
pusha
adc
test
push
push
push
fs
lahf
pushf
xor
dec
and
mov
inc
scas
mov
jo
sar
push
dec
and
sub
sbb
popa
aaa
jae
inc
mov
mov
mov
jp
inc
push
jge
jbe
rol
mov
push
lock
imul
mov
cs
addr16
mov
test
sub
xchg
inc
adc
(bad)
ficomp
pushf
fcom
cmc
xchg
xchg
shr
pusha
das
cmp
adc
adc
dec
or
inc
sbb
jmp
retf
adc
sub
mov
cmp
push
mov
popf
jmp
add
aas
outs
add
sbb
retf
mov
(bad)
xchg
loop
add
lahf
out
scas
jmp
pop
add
aaa
pop
cmp
sbb
cdq
retf
sbb
pop
sub
cmp
lods
loope
rcl
shl
test
cmp
rol
inc
out
nop
cmp
nop
retf
pop
push
sti
mov
mov
add
ja
push
pop
mul
pop
repnz
xchg
cmc
or
or
push
into
fstp
xchg
ret
pop
outs
push
or
cmp
mov
pop
shl
pop
cmp
fidiv
xchg
out
mov
das
mov
and
lahf
enter
and
and
push
cmp
dec
pop
mov
jmp
neg
jne
push
lods
les
aas
cmc
sahf
xor
add
idiv
or
push
sahf
leave
cwde
ins
sbb
jle
movs
jb
jg
ret
inc
sbb
lods
in
(bad)
push
push
push
fnstcw
or
test
xchg
xchg
shr
or
mov
arpl
loopne
ret
xchg
ins
test
mov
adc
pop
sahf
(bad)
movs
jb
cmc
mov
mov
pop
xor
pop
outs
cs
pop
push
push
cmp
mov
xor
imul
inc
adc
ins
imul
or
pop
cmp
fwait
mov
retf
fmul
mov
in
shl
sbb
inc
jg
jne
jbe
imul
xchg
mov
xor
lods
sti
mov
sub
icebp
mov
and
jo
add
push
inc
add
fs
dec
sbb
ret
mov
in
lods
jbe
je
dec
xor
(bad)
scas
mov
sub
or
mov
enter
cmp
cmp
add
div
mov
push
adc
adc
imul
in
clc
mov
fcomp
add
repz
xchg
push
adc
jge
(bad)
push
add
fadd
push
adc
mov
arpl
jbe
dec
stos
shr
test
fwait
stos
loopne
daa
loope
repz
(bad)
cmp
inc
xor
ret
fwait
out
mov
imul
popf
inc
int
repnz
repnz
repz
(bad)
mov
sub
mov
or
iret
rcpps
ds
ins
sub
mov
sahf
data16
push
imul
jns
pop
sbb
push
sbb
mov
push
adc
pop
mov
xchg
data16
mov
fistp
pop
mov
mov
inc
push
in
(bad)
mov
cmp
mov
mov
sub
es
(bad)
mov
lods
inc
or
dec
pop
mov
sti
xchg
(bad)
push
jg
jp
rcl
xor
inc
pop
pop
xchg
jmp
loopne
js
psubsw
jo
jmp
pop
sub
test
iret
xchg
fs
inc
push
push
dec
mov
icebp
mov
sub
jl
cwde
fdivr
cmps
and
mov
xchg
ret
fcom
inc
add
aad
push
push
cmp
sbb
sahf
xlat
aaa
outs
push
adc
out
shl
scas
ficomp
push
mov
push
adc
pop
and
mov
inc
ins
mov
dec
neg
pop
push
repnz
jg
shl
jmp
call
xor
add
xchg
dec
cmp
xchg
retf
out
je
inc
setnp
push
fisttp
jp
add
js
pop
maxps
(bad)
rol
jmp
push
jmp
xor
inc
or
test
sti
xchg
lock
mov
push
retf
popa
adc
mov
mov
dec
(bad)
leave
test
movs
jbe
xor
jle
cli
scas
out
xchg
xchg
mov
xchg
rol
shr
pop
mov
xor
sub
sub
ds
or
(bad)
dec
lock
int
inc
or
sub
jns
cli
mov
iret
mov
jmp
cwde
iret
jecxz
dec
cmps
xlat
xchg
shl
je
inc
sub
ins
or
sbb
rcr
ss
pusha
and
cwde
ret
not
xor
aam
pop
pop
push
adc
mov
int
push
pop
retf
push
push
fs
or
dec
or
repnz
cmc
sti
test
dec
push
adc
hlt
add
gs
cmp
and
in
inc
in
out
mov
in
xchg
leave
mov
ja
shr
test
mov
daa
outs
adc
lahf
fistp
cmp
mov
scas
mov
in
mov
repz
xchg
stos
ficom
jo
mov
inc
push
push
jo
je
inc
sbb
mov
test
and
mov
fisubr
test
cmps
retf
sub
dec
sbb
stc
pop
sub
call
inc
pop
stos
mov
push
repz
iret
lahf
hlt
pushf
dec
jae
dec
fsub
fidivr
pusha
imul
iret
ins
sbb
js
pop
cdq
fnstsw
out
test
scas
fisttp
push
mov
stos
fmul
enter
fisub
lahf
leave
lea
dec
sbb
adc
test
cwde
aam
les
push
or
aam
dec
sub
(bad)
inc
xchg
stos
hlt
xor
or
and
pop
and
in
or
pop
fsubr
push
stos
lock
iret
pop
idiv
dec
adc
rcl
sar
xor
jnp
pop
mov
sbb
ja
outs
iret
xchg
lds
cmps
shl
jmp
push
or
fidivr
dec
add
xchg
or
fstp
call
dec
pop
and
inc
cs
mov
popa
sbb
mov
out
shl
mov
push
pop
push
sbb
dec
aas
imul
push
adc
imul
mov
mov
adc
xchg
int3
div
shl
dec
xchg
scas
fld
push
aas
dec
sbb
lods
jge
mov
sar
out
stos
fst
lods
leave
cwde
sub
leave
mov
push
mov
ja
test
rol
add
add
add
in
push
inc
mov
jg
jmp
mov
stos
inc
cmps
std
sub
int3
mov
movs
(bad)
and
outs
cmp
leave
adc
pop
adc
aaa
test
add
cmp
mov
pop
sub
pop
push
dec
das
jle
fsubr
addr16
inc
cmps
jmp
push
test
data16
sbb
dec
(bad)
out
nop
imul
outs
add
(bad)
sub
stos
xor
aad
ret
add
jo
pop
lods
sti
pop
ds
mov
xchg
mov
or
mov
out
rol
cmps
out
cli
lods
pop
sbb
push
cmp
push
dec
add
cmps
inc
loop
pop
jp
inc
jne
lock
ss
shl
stc
pop
mov
ror
ss
adc
mov
ins
sub
es
dec
out
test
mov
popf
dec
ud0
adc
enter
push
mov
inc
rcl
retf
mov
sub
adc
and
pop
rcr
fs
icebp
test
in
push
push
inc
daa
jbe
aam
outs
mov
adc
les
popf
outs
adc
lock
les
mov
aad
popa
or
out
es
sub
int3
adc
bound
dec
mov
and
add
leave
or
sbb
hlt
jecxz
jecxz
sub
into
cwde
fnstenv
clc
xchg
out
dec
push
jne
pop
(bad)
adc
jno
sbb
test
xor
pusha
and
test
inc
and
imul
push
lock
cmps
rol
(bad)
mov
rcl
dec
cmp
rcr
jnp
scas
ficomp
loop
add
mov
aam
outs
cwde
fld
push
adc
inc
pop
push
mov
out
sub
sub
adc
xchg
hlt
sbb
xchg
mov
pop
inc
es
aad
pusha
das
adc
xchg
mov
or
pushf
enter
clc
sbb
(bad)
nop
cmc
movs
rol
scas
mov
cmp
ss
xor
and
mov
sbb
xor
sub
stos
ret
aaa
pusha
bound
add
lahf
lds
mov
mov
or
jge
and
and
push
pop
ss
adc
or
mov
sahf
fcomp
ret
cmp
jae
xor
xor
and
stos
and
lods
lds
call
mov
sub
adc
fs
mov
fcomp
scas
jmp
or
int
jno
pop
imul
retf
mov
rcl
iret
xchg
lds
cmps
ror
mov
ins
or
jnp
jno
repnz
ja
int3
and
sbb
sahf
sti
mov
ins
cmp
test
lods
in
jbe
popf
(bad)
xchg
std
xchg
test
in
mov
popf
sti
mov
imul
cmc
mov
mov
jp
or
popf
in
mov
inc
push
clc
cdq
(bad)
es
push
std
jb
jne
push
adc
cmps
out
out
fidivr
outs
sub
lock
push
pop
movs
enter
pop
ficomp
ror
push
xor
mov
mov
xor
cmc
mov
mov
scas
jge
shl
or
mov
jmp
lods
jae
fmul
jg
je
out
pop
jmp
xchg
mov
jmp
popa
or
je
rcl
outs
cmp
fistp
dec
idiv
dec
sbb
fwait
test
pushf
(bad)
xchg
std
adc
mov
mov
dec
jmp
out
(bad)
xchg
bound
ja
into
sahf
cmc
mov
mov
xor
and
cmps
lds
push
cmp
sbb
(bad)
scas
(bad)
movs
(bad)
add
int3
xor
test
sti
mov
mov
cdq
jecxz
sub
or
pop
stos
loop
xchg
outs
leave
lahf
fcmovne
jp
movs
in
clc
scas
pop
pop
lods
sar
push
cmp
xor
or
test
jnp
popf
movs
into
test
push
add
pop
sub
push
nop
jmp
mov
jne
mov
pop
jp
mov
mov
cmp
test
das
jg
loope
adc
push
mov
xlat
inc
push
(bad)
mov
jno
inc
xor
lods
xchg
out
pop
or
sub
popf
into
xor
stc
push
adc
pop
mov
cmps
std
data16
or
hlt
mov
pop
or
pop
in
cwde
xchg
aam
cmp
retf
mov
mov
fidiv
cmps
cmc
and
mov
in
cdq
inc
xor
movs
call
push
mul
mov
mov
pop
mov
pop
sbb
and
mov
mov
mov
repz
icebp
xchg
jl
push
jl
cmps
fwait
repz
in
stos
cdq
out
push
sub
mov
ret
and
sub
jl
cdq
sahf
mul
push
stos
in
push
and
arpl
adc
(bad)
clc
mov
aaa
jae
test
mov
mov
stc
pushf
je
les
in
mov
shl
push
stos
in
dec
cmp
outs
mov
pushf
js
retf
mov
test
int3
pushf
xchg
(bad)
adc
xor
scas
(bad)
neg
cli
lods
call
(bad)
pop
cs
push
cmp
push
out
xchg
ja
mov
fisttp
js
loopne
inc
mov
sub
cmp
test
inc
aaa
loope
jnp
xor
stos
push
add
xchg
inc
add
mov
icebp
cdq
cli
(bad)
les
jne
or
call
out
jne
div
int3
cdq
mov
and
xchg
call
mov
sub
xchg
push
out
lahf
dec
or
retf
loop
outs
fld
retf
sub
xchg
jbe
shl
fwait
loope
jns
scas
mov
(bad)
mov
out
call
push
adc
lods
idiv
aas
jns
stos
test
dec
sbb
pop
sub
mov
xor
jns
and
xchg
lahf
idiv
dec
xchg
sub
shl
popa
fisttp
das
outs
hlt
adc
les
mov
test
test
jb
cs
lods
fst
mov
aam
sub
pop
scas
fdivr
inc
xchg
(bad)
es
add
xchg
data16
test
push
xchg
cmc
and
jmp
or
lods
xchg
repz
mov
aam
jo
ret
or
xchg
jbe
hlt
mov
xchg
in
ror
out
dec
or
mov
out
xchg
mov
mov
push
push
xor
mov
add
leave
das
outs
fist
mov
adc
arpl
and
inc
adc
dec
sbb
pop
mov
and
and
arpl
mov
rcr
lock
sub
mov
clc
pop
xor
lods
push
pop
call
cdq
xchg
pusha
and
sbb
mov
add
dec
cmps
out
pop
pop
pop
call
mov
sub
and
sbb
cmps
xchg
sahf
les
retf
sbb
xchg
rcr
rcr
lds
jmp
rol
adc
mov
jle
sbb
repz
leavew
test
test
sar
jl
xchg
xchg
leave
or
test
dec
sbb
and
mov
popf
not
jae
pop
out
dec
pop
dec
adc
aas
jnp
scas
mov
outs
mov
cmp
cmp
or
push
push
fiadd
dec
push
adc
rcl
xor
jns
loope
xor
xor
movs
loopne
ins
test
cmp
das
js
test
sbb
mov
sub
or
cmps
mov
bound
dec
or
mov
and
lods
lods
loope
pop
mov
xchg
inc
push
loope
inc
sbb
xchg
fwait
dec
daa
mul
sbb
inc
fnstcw
daa
outs
hlt
lods
nop
aam
ins
mov
mov
xchg
fstp
lds
jmp
xchg
fld
rcr
mov
mov
retf
mov
xchg
fiadd
sub
ins
or
push
or
movs
arpl
hlt
movs
jnp
jecxz
popa
ss
mov
stos
rcr
mov
jge
push
adc
scas
inc
adc
dec
mov
and
cmc
xchg
fisttp
repnz
gs
push
add
in
sbb
xchg
scas
dec
sbb
pop
mov
pop
add
mov
scas
jmp
fs
enter
sti
add
adc
je
xchg
pushf
(bad)
es
fnstcw
jecxz
pusha
cmp
outs
adc
mov
imul
jg
push
lods
call
and
cld
xor
jmp
pop
mov
push
xor
dec
pop
jmp
movs
loope
movs
hlt
xor
mov
out
and
es
push
jge
xchg
lds
outs
sbb
jmp
pop
xor
jecxz
mov
es
shl
out
inc
push
cli
mov
call
outs
(bad)
int3
bound
(bad)
push
add
mov
push
mov
cmp
sub
cmp
jo
ficom
div
mov
dec
or
inc
aam
data16
or
not
loop
cdq
int
jge
stc
aaa
outs
movs
loopne
and
cld
xchg
rcl
cs
xor
(bad)
mov
add
retf
pushf
dec
es
scas
jle
pop
push
les
cwde
int3
push
cmp
mov
test
pusha
sar
jl
in
mov
lock
pop
cvtdq2ps
cli
pop
sbb
mov
sub
mov
not
inc
sbb
jb
ficom
mov
out
sbb
push
push
push
push
add
and
dec
sbb
mov
repz
pop
cmp
out
mov
sahf
fisubr
jl
mov
fs
cmp
jae
in
jnp
rep
ins
sub
inc
rol
enter
cmp
loope
cli
push
xor
jne
cmps
(bad)
les
and
mov
mov
dec
add
xor
jae
mov
xchg
mov
es
in
xlat
je
ret
adc
pop
fcomp
xchg
(bad)
cmp
mov
idiv
mov
xchg
push
sub
inc
jmp
sub
dec
mov
xchg
mov
jno
jns
mov
cwde
ret
push
xor
jne
xchg
rcr
and
pushf
mov
pop
or
test
sub
cmps
imul
pop
sbb
fs
mov
retf
mov
jo
push
or
push
sbb
mov
fiadd
adc
shl
dec
sbb
js
cld
pop
add
lahf
imul
push
mov
not
lock
and
lahf
dec
and
xchg
xchg
shl
test
aas
push
mov
mov
retf
push
sbb
neg
clc
scas
push
adc
sti
mov
fmul
dec
adc
scas
data16
stos
outs
cmp
and
mov
lods
(bad)
xchg
hlt
outs
cmp
outs
mov
jecxz
sbb
pop
xor
ja
mov
in
mov
loop
push
hlt
mov
in
mov
fnsave
jb
out
or
call
push
sbb
dec
(bad)
lods
movs
(bad)
es
lahf
pop
pushf
les
jp
in
adc
inc
lods
lds
sbb
push
scas
les
stos
inc
or
loopne
sub
int
jo
hlt
fwait
xlat
xchg
into
pop
xor
inc
add
mov
call
sub
mov
xor
bound
dec
adc
retf
mul
(bad)
aad
jo
xchg
fwait
retf
scas
(bad)
pusha
aaa
or
jnp
mov
out
adc
inc
in
movs
stos
repnz
out
cdq
fstp
add
push
adc
loop
addr16
adc
pop
sbb
pop
push
xor
fbstp
cli
mov
jp
in
pushf
enter
test
bound
out
ret
int
pminsw
neg
mov
test
retf
sub
mov
sub
dec
xlat
lea
not
test
pop
add
mov
xor
into
cmps
jg
leave
mov
leave
xchg
or
fmul
cmp
dec
sbb
loope
xor
ja
clc
cmp
xchg
cdq
ret
ss
cmps
les
test
adc
cmps
rcl
pushf
call
retf
es
push
inc
add
xor
jmp
fsubr
push
mov
or
mov
sub
jne
out
pop
mov
sahf
xlat
dec
adc
mov
iret
mov
and
ja
mov
sbb
clc
cmp
hlt
lods
jae
inc
add
sub
cmc
das
outs
fcom
dec
mov
rcr
xchg
push
inc
loopne
popf
hlt
cmp
les
js
xchg
rol
(bad)
sahf
int
mov
add
push
shr
dec
xor
jmp
pop
push
or
div
adc
pop
or
or
iret
xor
xchg
test
sub
xchg
movs
loopne
data16
push
cmp
xchg
mov
add
xor
jo
or
xchg
int3
xchg
ins
sub
mov
and
xchg
jp
push
pop
int
jge
sub
cmps
jl
adc
jnp
rep
ins
sub
in
mov
fimul
fld
xchg
(bad)
xor
gs
push
in
test
fisubr
add
call
lock
ins
lds
rol
lds
repnz
popf
retf
pop
pop
rcr
scas
cdq
fstp
dec
adc
mov
sbb
jmp
push
enter
cdq
ret
ds
mov
je
repz
daa
dec
(bad)
retf
push
add
mov
mov
aas
jae
out
xor
mov
movs
in
pop
pop
mov
mov
and
jp
loop
inc
add
hlt
scas
gs
sbb
mov
and
fwait
jno
sti
stos
dec
sbb
push
retf
pushf
call
in
es
mov
int
add
mov
movs
cdq
enter
add
mov
push
in
mov
cmp
lods
jae
adc
js
pop
cli
lods
push
adc
mov
icebp
pop
or
int3
and
fild
pop
rol
xlat
xchg
ja
repz
mov
dec
paddsw
sti
or
int3
fwait
dec
and
cwde
call
adc
mov
mov
mov
dec
or
dec
mov
push
cmp
stos
dec
or
movs
outs
xor
jle
loope
imul
jge
out
or
push
fmul
xlat
xchg
inc
or
xchg
or
cld
sub
mov
daa
arpl
lea
retf
adc
retf
mov
outs
add
in
add
mov
aas
icebp
test
fmul
mov
push
cli
mov
fmul
mov
inc
out
mov
mov
ss
xchg
jmp
(bad)
xor
adc
nop
enter
cli
add
push
mov
aas
push
mov
xor
les
in
or
std
pop
sbb
mov
les
stos
lock
cmp
cmps
dec
sbb
fnstsw
mov
iret
cmp
std
lods
inc
adc
stos
inc
adc
push
or
test
(bad)
mov
cwde
fadd
inc
rol
aad
fs
dec
and
fwait
call
mov
fnstsw
push
cmc
pushf
pushf
retf
jl
in
mov
pushf
dec
pop
push
enter
pop
dec
fimul
les
ja
out
mov
add
push
scas
jmp
outs
mov
fstp
loopne
mov
xor
and
dec
aad
mov
cs
cmp
mov
popf
call
stos
ins
sub
push
cmp
nop
xchg
shr
xor
mov
pop
adc
jno
mul
test
xor
jl
xchg
mov
sub
fcomp
fcomp
jnp
mov
jmp
or
bound
outs
lds
mov
int3
xchg
mov
jae
arpl
sbb
call
data16
jmp
sbb
jg
out
cmp
stos
rcr
xchg
aad
sbb
push
push
pop
mov
add
(bad)
and
push
int
jne
pop
jl
jecxz
push
adc
xchg
les
push
xor
sub
mov
imul
jae
in
adc
call
daa
dec
lods
sti
mov
into
dec
sub
nop
jnp
idiv
sti
mov
int
ja
(bad)
mov
retf
mov
jo
idiv
mov
xor
mov
dec
adc
out
sahf
retf
mov
xor
popa
mov
cmp
or
inc
clc
mov
or
(bad)
push
cmp
mov
dec
std
lods
mov
xchg
xchg
aad
push
es
cmps
xchg
lock
xchg
ficom
rcl
and
jne
in
dec
mov
xor
arpl
adc
mov
add
fisttp
pushf
mov
push
out
test
pop
sbb
int3
xchg
mov
and
or
pop
in
mov
ret
jg
dec
sbb
inc
adc
std
js
in
mov
stos
dec
or
dec
jmp
cmp
movs
xchg
pop
adc
inc
xlat
xchg
jb
rcl
ficom
(bad)
mov
xor
in
mov
mov
and
fcomp
ins
add
dec
rcl
arpl
pusha
adc
xlat
push
or
test
jecxz
mov
popf
fld
or
lods
loope
movs
into
imul
push
sbb
push
mov
dec
push
or
fmul
(bad)
into
mov
xchg
cmp
popf
mov
sub
mov
push
dec
mov
ja
in
jae
sbb
mov
daa
clc
lods
xchg
aad
sbb
jbe
xchg
fs
mov
movs
repnz
rcr
test
out
jbe
xor
jb
mov
xchg
mov
add
jb
mov
arpl
ret
mov
xchg
ins
sub
mov
push
adc
xor
jno
scas
ja
in
xchg
dec
scas
out
pop
mov
pop
sbb
cmp
mov
xlat
lea
xchg
push
adc
add
jle
pop
add
les
in
mov
cmps
mov
add
mov
outs
(bad)
lahf
dec
sldt
sbb
dec
sbb
cmps
retf
(bad)
pushf
neg
jnp
scas
and
jne
cmp
or
out
cmps
lock
cmp
cmp
sbb
xchg
mov
jp
add
test
lock
test
adc
cmps
rcr
ja
and
cmps
or
xor
lea
rcr
lods
iret
push
add
rcr
std
add
outs
cmp
mov
sub
scas
jo
jae
cmp
popf
cwde
rcr
lock
repz
dec
mov
add
hlt
or
scas
push
call
mov
pop
pop
dec
enter
mov
jmp
sbb
sbb
push
push
cmps
loop
ins
movs
std
mov
pop
sbb
mov
mov
hlt
add
xor
mov
in
mov
int3
push
dec
das
inc
sbb
jmp
pop
or
lods
xchg
sub
pop
adc
pop
pop
rcl
xor
fimul
aad
push
aas
not
scas
out
push
mov
dec
psraw
stc
mov
aas
xor
mov
xchg
(bad)
push
adc
cmp
nop
gs
mov
fs
pop
xor
ds
dec
rep
mov
daa
arpl
add
fidiv
sahf
rcr
shr
xchg
cwde
ror
jmp
ds
and
lahf
xchg
aam
jae
loopne
mov
enter
mov
test
mov
cli
xchg
mov
jg
lock
pushf
cwde
fsub
ja
loope
jmp
and
mov
movs
jp
push
push
fcom
cmp
stos
push
add
and
and
mov
xchg
pop
inc
aam
xchg
retf
js
cmp
fcom
in
lahf
enter
in
pop
pop
mov
shr
pop
and
cmovnp
fdivr
push
(bad)
xchg
xchg
aam
dec
mov
sbb
jp
xchg
mov
pusha
cmp
jg
lahf
imul
cmps
(bad)
in
push
aam
jle
cli
mov
and
xchg
mov
sub
inc
mov
shl
pop
rol
inc
push
shr
push
and
push
leave
lea
add
js
cmps
fwait
int3
jl
jns
sbb
int3
ins
push
cmp
cs
cdq
cmps
jmp
jge
jecxz
mov
pop
ss
sbb
jns
mov
retf
pop
xor
sub
cmc
mov
(bad)
jns
xor
hlt
inc
adc
jp
sbb
lds
or
mov
xor
sbb
mov
icebp
jb
loop
push
adc
adc
(bad)
mov
add
pop
rol
sbb
inc
(bad)
mov
je
pop
mov
push
sbb
jno
mov
scas
pusha
xor
inc
ret
stos
ins
cmp
loop
cwde
ret
add
div
or
aas
push
ret
xchg
inc
movs
repz
sbb
inc
push
loop
(bad)
out
push
fmul
sub
cdq
enter
xor
push
or
lods
je
or
rcr
inc
mov
dec
or
scas
(bad)
and
mov
es
stos
(bad)
in
cmp
cld
mov
out
xchg
jno
sbb
ja
mov
push
dec
stos
shr
scas
out
add
cmps
lock
or
out
fdiv
mov
bound
retf
hlt
and
in
and
lahf
mov
mov
out
xchg
mov
mov
push
sti
stos
outs
cmp
retf
pop
adc
pop
fidiv
lahf
fist
push
push
mov
test
jg
clc
mov
xchg
cld
add
pminsw
outs
sub
mov
cmp
daa
xlat
(bad)
fld
cmp
xchg
iret
inc
add
pop
or
outs
leave
mov
arpl
call
dec
adc
mov
adc
xchg
xlat
ss
call
pop
dec
mov
jecxz
pop
clc
mov
arpl
in
ret
fwait
outs
and
xchg
outs
add
dec
paddsw
(bad)
dec
sbb
in
jae
mov
div
push
fisttp
ret
inc
rcl
jg
pop
jle
lea
lock
xor
test
sbb
xchg
xchg
ja
int
call
stos
popa
sub
loop
arpl
in
inc
pcmpeqw
cmps
xchg
xlat
and
in
push
cmp
cmps
js
icebp
mov
test
push
push
adc
idiv
mov
aas
outs
sbb
ds
aad
call
sub
pushf
mov
retf
into
mov
jmp
sub
enter
adc
xchg
aad
fwait
ret
cmp
mov
jb
cli
ss
in
or
(bad)
mov
movs
inc
or
or
xchg
mov
add
bound
(bad)
jae
or
mov
jmp
into
jge
cld
stos
xchg
jmp
jns
jmp
adc
mov
or
push
call
dec
sbb
cmp
xchg
xchg
int
imul
inc
push
sti
mov
(bad)
mov
mov
sub
and
mov
mov
sbb
or
dec
mov
mov
inc
sbb
xchg
jne
pop
inc
test
call
fwait
dec
adc
jnp
loop
mov
adc
lahf
(bad)
pop
add
mov
std
stos
lahf
test
dec
mov
int3
movs
int3
dec
push
loopne
dec
add
enter
and
rcr
cmps
xchg
frstor
outs
mov
adc
imul
movs
hlt
das
js
mov
es
lea
cmp
popf
bound
in
gs
sub
mov
test
push
shr
jmp
push
cs
cmps
int3
rol
inc
pop
retf
push
adc
mov
aam
fwait
arpl
pop
sub
(bad)
sti
das
scas
mov
test
xor
jge
cmps
(bad)
jbe
iret
push
bound
xchg
adc
int
and
out
mov
mov
adc
rcr
sub
movs
xor
sbb
mov
sar
mov
jl
out
sub
pop
enter
dec
imul
sbb
adc
les
cmp
mov
dec
fwait
cmp
js
sub
mov
or
sar
js
jbe
lea
call
xor
push
pop
in
js
xor
sahf
cmp
and
inc
dec
xchg
xor
rol
sub
inc
push
icebp
fcom
sbb
xlat
retf
mov
nop
or
jo
xor
pop
mov
inc
adc
std
loopne
or
add
lods
movs
xor
xchg
ret
jbe
(bad)
mov
xchg
add
(bad)
pop
xchg
pop
fwait
inc
test
and
add
mov
clc
mov
pop
fdiv
add
and
jecxz
rol
mov
xchg
push
rol
shl
mov
das
enter
and
pop
and
jns
lods
rcr
dec
dec
push
mov
mov
sbb
mov
movs
repz
cdq
arpl
in
sbb
mov
out
xor
jns
fimul
dec
and
data16
das
cmps
ss
push
push
cmp
es
push
movs
ss
sub
jle
adc
mov
sbb
sahf
js
fld
fisttp
iret
mov
jge
mov
js
inc
dec
add
icebp
mov
jp
cli
sub
dec
and
push
(bad)
jp
sar
inc
retf
mov
dec
ds
sbb
sub
pop
inc
mov
cmps
mov
xchg
pop
(bad)
std
sub
cdq
dec
cmp
gs
pop
stos
jb
stos
(bad)
xlat
loope
pop
shl
ror
dec
cli
fs
push
lea
lock
aaa
push
daa
sub
(bad)
in
lock
out
jge
movs
and
test
push
shl
xor
adc
(bad)
loopne
lea
xchg
test
mov
mov
fbld
arpl
fld
test
sbb
push
mov
inc
gs
das
inc
movs
jno
retf
pop
adc
xor
sbb
push
test
xor
enter
adc
ret
and
mov
(bad)
push
and
or
icebp
loop
call
dec
add
dec
stc
push
xor
cmp
nop
or
and
jbe
inc
xchg
and
arpl
retf
repz
rcr
push
dec
xor
mov
push
and
pop
clc
shl
loop
es
enter
jmp
sar
rcr
sub
rcl
or
mov
fstp
outs
ds
pop
inc
pop
pop
jne
aam
xchg
dec
and
sbb
(bad)
loope
mov
cld
cmp
or
inc
add
inc
inc
jl
sbb
idiv
pop
add
mov
dec
or
or
mov
rol
daa
(bad)
xor
jnp
cmp
mov
push
es
mov
xchg
inc
retf
pop
out
hlt
adc
retf
mov
fnstenv
icebp
pop
popf
inc
push
sub
pop
dec
mov
push
aam
pushf
xchg
cmp
pusha
movs
test
sahf
in
mov
fmul
ret
cli
pop
div
mov
movs
sub
in
in
mov
and
mov
imul
(bad)
repnz
cmp
adc
ds
xor
jne
push
and
rcr
sub
loop
mov
mov
mov
call
mov
ret
aad
push
dec
push
rcl
in
add
push
mov
mov
jb
and
jmp
pop
in
shr
mov
mov
(bad)
sbb
jne
lods
outs
clc
jmp
or
xchg
loope
cmc
lds
(bad)
shr
dec
js
push
or
push
mov
daa
jl
sbb
pop
xor
mov
aaa
and
fsub
(bad)
lds
hlt
lods
ror
cmps
push
call
jl
ret
(bad)
cmp
fild
cs
xor
jnp
mov
retf
ror
std
mov
out
mov
(bad)
mov
adc
sbb
adc
(bad)
dec
pop
lods
push
ins
xchg
jo
int
pushf
dec
out
xlat
cmp
test
mov
in
pop
das
xchg
loope
sbb
mov
fwait
cmp
ret
or
mov
jg
mov
mov
mov
inc
xchg
jg
je
fld
add
popa
punpckldq
sub
push
adc
fbld
mov
(bad)
and
aad
jl
test
pop
and
repnz
mov
(bad)
(bad)
aam
inc
jae
inc
pop
push
push
(bad)
cs
pop
jge
cld
scas
mov
jae
ror
popa
xchg
xor
gs
test
int
and
xor
cmp
aad
in
or
shl
sti
addr16
mov
fiadd
aad
and
ins
pop
idiv
cmp
sahf
dec
(bad)
stc
pusha
lahf
in
jae
sbb
mov
rol
enter
mov
leave
adc
push
lea
loop
movs
arpl
in
sub
dec
mov
cmp
cmp
pop
inc
sub
pop
mov
jecxz
jle
cmp
cmps
rcl
les
add
adc
shl
outs
int
dec
xchg
js
jmp
das
(bad)
retf
add
sbb
adc
in
icebp
inc
outs
mov
(bad)
xor
test
(bad)
adc
pusha
leave
mov
adc
jge
mov
adc
sbb
or
or
neg
sub
jne
jp
xor
leave
scas
mov
(bad)
outs
cmp
jge
cmp
(bad)
push
(bad)
cmp
int3
call
pusha
mov
inc
inc
aaa
imul
mov
sub
mov
mov
fist
js
mul
mov
and
sbb
mov
addr16
cmp
cmp
cmp
sub
cmp
mov
xor
and
out
inc
dec
loopne
xchg
(bad)
lock
jmp
push
bnd
imul
sbb
pop
jnp
retf
sahf
test
in
(bad)
mov
cmp
aam
imul
out
ds
(bad)
xchg
mov
mov
int3
xchg
pushf
in
jg
xchg
jbe
xor
retf
loope
push
jle
retf
xlat
adc
sub
popa
scas
(bad)
mov
std
in
push
add
mov
sahf
ins
idiv
sti
mov
adc
push
popa
leave
xor
dec
hlt
jb
dec
cwde
mov
or
push
lods
lods
popa
xchg
fisubr
push
in
inc
cld
inc
push
xchg
stos
fadd
cld
stos
movs
add
mov
and
shl
jne
add
fldenv
dec
mov
jecxz
cs
pop
jns
or
push
xor
popf
addr16
and
mov
bound
int
jmp
mov
test
mov
nop
ret
inc
cmp
(bad)
mov
(bad)
adc
or
in
pop
lods
xchg
out
and
or
add
mov
lahf
inc
push
jp
mov
popf
xchg
fisttp
sbb
fwait
pop
std
popf
dec
int
jb
pop
ficomp
lds
jecxz
imul
mov
xlat
add
frstor
or
test
xchg
sub
mov
sub
dec
test
in
je
fistp
cwde
test
jnp
mov
jle
cmp
adc
int3
mov
adc
add
test
pop
cmp
jno
and
push
and
mov
in
sub
cmp
pop
scas
out
mov
mov
mov
xor
lock
iret
or
push
fwait
jge
push
xchg
outs
or
pop
jae
pusha
mov
sbb
and
neg
and
pop
in
jo
and
rol
push
jecxz
fisttp
jmp
cmovge
push
mov
dec
sub
(bad)
shr
fcomp
pop
or
mov
mov
inc
in
leave
dec
je
mov
aam
loope
cwde
cmp
jg
into
pop
out
ror
loopne
add
xor
cs
pop
jge
sbb
ret
fmul
into
cs
test
jle
mov
int
mov
mov
mov
cld
mov
dec
mov
xor
or
mov
sbb
icebp
jl
repz
popf
inc
rol
and
or
ret
iret
call
and
arpl
lahf
mov
movs
loopne
ret
sahf
mov
arpl
sbb
iret
(bad)
mov
fiadd
ret
iret
sti
outs
pop
dec
jg
das
ds
add
jno
popf
clc
pop
jne
add
mov
sub
push
aas
pop
add
mov
loop
cmp
add
das
or
mov
cmp
and
sub
inc
mov
xlat
inc
out
aad
retf
fst
xchg
adc
in
mov
add
ror
pop
push
retf
mov
popa
in
rol
cmp
enter
ficomp
push
ficom
ins
dec
jno
mov
loopne
stos
lds
or
pop
test
je
(bad)
push
pop
ins
lock
rcr
dec
rcl
iret
test
test
xchg
add
xor
outs
(bad)
leave
jle
leave
adc
lods
mov
cmp
mov
out
lea
dec
push
ret
clc
dec
pop
in
or
ss
mov
test
and
sbb
jmp
ret
xor
stos
je
addr16
push
jb
or
cmps
dec
jecxz
cmc
cli
pop
pop
jns
add
xchg
sbb
push
push
dec
add
sub
pop
enter
cld
adc
call
in
lea
mov
mov
movs
fldenv
sahf
jg
repz
push
pop
stos
pop
scas
jge
dec
out
xchg
popa
shr
outs
idiv
call
jo
pop
fcomp
bound
shl
scas
push
inc
(bad)
push
fdivr
push
(bad)
sbb
vunpcklps
sbb
retf
cmp
fcomp
gs
movs
leave
cdq
loop
test
jno
inc
out
gs
fmul
sbb
or
out
jg
sub
add
add
cli
xchg
retf
xchg
out
adc
mov
add
enter
jno
jno
sub
mov
es
je
pop
jp
mov
adc
xchg
add
adc
xor
ins
mov
div
mov
jae
aaa
and
aam
or
imul
int
cdq
mov
dec
mov
xchg
jb
sbb
aad
(bad)
cli
lds
adc
jle
fild
dec
sahf
mov
in
fimul
sub
mov
xchg
pop
(bad)
in
dec
lods
ret
inc
je
jae
and
pop
push
cwde
xchg
retf
xchg
nop
shr
jb
enter
mov
hlt
xchg
imul
mov
mov
xchg
add
adc
jp
fbstp
lahf
xchg
and
jp
dec
aam
cmps
cmps
jl
sub
jmp
cmc
test
push
cs
les
add
dec
sub
(bad)
pop
call
jne
(bad)
in
inc
into
rcr
dec
cmp
mov
mov
jno
into
lock
mov
or
lahf
cmp
cmp
push
cmps
leave
popa
xor
popa
retf
mov
scas
adc
test
fwait
push
mov
jnp
xchg
jmp
addr16
pop
movs
outs
sub
cmp
int
push
out
scas
rol
ret
add
jae
sbb
imul
stos
and
ja
mov
xchg
push
(bad)
add
or
(bad)
loope
xor
xchg
(bad)
jmp
pushf
mov
lds
mov
neg
xor
mov
lods
xchg
pop
dec
into
sti
xor
ins
(bad)
enter
div
scas
push
add
jae
scas
mov
cmp
and
ds
cmc
or
fmul
cmp
pop
dec
mov
(bad)
mov
aad
add
xor
in
out
sbb
pop
loope
add
cmp
out
enter
mov
pop
xchg
in
stc
(bad)
in
add
jnp
jne
adc
adc
ret
or
or
dec
fild
(bad)
arpl
cwde
dec
mov
std
ret
addr16
leave
mov
call
outs
(bad)
jecxz
into
jecxz
push
and
int3
mov
sbb
xchg
mov
and
cmp
mov
or
sbb
imul
loope
xchg
xor
mov
xor
inc
jmp
push
imul
repnz
and
jo
fild
xor
lock
push
inc
jbe
iret
sahf
jb
add
pop
scas
lahf
mov
nop
lods
push
leave
loope
jge
das
out
xor
inc
mov
cmps
jae
jg
pop
xor
and
jl
sbb
fxch
repz
jnp
or
jne
iret
jne
stos
stos
sti
push
out
ret
nop
jbe
or
cmp
inc
mov
ins
inc
out
xor
retf
dec
shl
(bad)
push
and
out
cwde
fidivr
sar
mov
and
mov
add
adc
fwait
sbb
dec
sub
mov
dec
inc
or
cmp
sbb
fwait
scas
push
rcr
mov
or
push
das
aas
rcr
daa
mov
out
inc
adc
loopne
mov
mov
retf
jae
stos
pop
mov
inc
(bad)
jmp
pop
push
jbe
loopne
adc
dec
push
xor
sar
and
dec
test
pop
sbb
jb
mov
adc
lock
popw
mov
inc
add
add
imul
jmp
rcr
mov
or
sub
pushf
xor
popa
dec
jg
sub
comiss
in
push
add
test
ss
mov
push
fsubr
cmp
inc
dec
not
std
sub
popf
dec
mov
cmp
data16
mov
in
push
mov
and
pop
ror
xchg
shl
mov
in
jecxz
adc
jb
mov
sbb
cmps
dec
sbb
ss
scas
pushf
push
out
jbe
cmp
dec
out
ret
xchg
mov
push
fisubr
cwde
test
sub
pop
push
push
jae
mov
xchg
sbb
les
jbe
sbb
mov
and
inc
ja
in
xchg
sub
cmp
scas
adc
(bad)
fdiv
push
(bad)
iret
pop
push
(bad)
fild
jle
and
mov
mov
cmp
push
mov
ja
fnstcw
xor
packssdw
in
xlat
inc
sbb
xor
mov
test
pusha
pop
ret
ret
je
shl
dec
aas
mov
call
push
cdq
lods
stos
mov
mov
repnz
sbb
loope
push
sub
mov
jae
or
shr
jb
dec
pop
inc
cmc
dec
push
pop
aas
xor
mov
pop
loopne
jmp
imul
fimul
int3
test
push
mov
stc
inc
fisubr
and
pop
mov
ret
sub
cmp
lods
ret
test
in
adc
sbb
cld
ret
push
xor
xor
dec
add
xchg
test
adc
mov
fistp
pop
(bad)
adc
xor
ins
(bad)
(bad)
outs
mov
xchg
scas
mov
cmp
xchg
lock
xchg
xchg
adc
sbb
pop
fisttp
les
push
inc
jbe
in
cmps
push
fcomp
imul
adc
lods
lea
out
jb
mov
push
ret
cmp
test
and
and
adc
adc
or
rol
cmps
xchg
sbb
sbb
inc
cmps
aam
ss
jnp
stos
push
push
xor
push
test
pusha
arpl
retf
push
add
mov
or
mov
cmps
mov
mov
retf
stc
push
sbb
mov
mov
mov
add
mov
dec
nop
in
cmp
dec
mov
scas
sub
(bad)
cmp
ins
(bad)
leave
aad
adc
cmc
sbb
cmp
cdq
sub
cmp
out
add
mov
sbb
test
sahf
mov
shr
push
test
imul
(bad)
pop
ins
ja
jno
dec
div
and
lock
call
mov
jb
jne
sbb
fisttp
cmp
add
add
in
test
jns
rcr
cmps
mov
sbb
mov
call
mov
mov
adc
push
ja
into
rcr
add
adc
push
fisub
add
nop
jmp
cmp
jae
fisub
bound
xchg
ds
cld
sub
and
call
call
shl
(bad)
mov
sar
or
jns
jl
fldenv
fst
gs
repz
aaa
lock
xchg
into
pop
push
mov
inc
loop
fnstenv
ret
mov
inc
in
or
int3
adc
rcr
mov
xor
inc
inc
cmp
jbe
ins
outs
pop
in
out
pop
pop
sar
mov
mov
aas
mov
call
pop
xchg
ret
push
dec
dec
call
fcmovb
mov
xchg
sbb
or
aaa
(bad)
mov
jo
inc
call
cmp
add
adc
lods
pop
mov
adc
inc
cmc
xor
fadd
xchg
loopne
sbb
inc
fdiv
add
dec
mov
jbe
pop
rcr
imul
mov
pop
jp
jle
pushf
ret
repz
inc
int
(bad)
in
rol
daa
lahf
mov
mov
daa
push
mov
bnd
inc
mov
test
es
je
xchg
std
hlt
fs
xor
das
shl
push
frstor
jp
das
out
(bad)
scas
pop
adc
mov
add
daa
mov
jo
call
cs
mov
pop
stc
push
add
push
repz
and
fistp
daa
dec
dec
jo
and
adc
xor
es
push
movs
jb
mov
in
imul
cmp
add
fist
mul
inc
fadd
xor
add
lds
cmp
test
mov
invd
and
scas
fcomp
sbb
push
fnstenv
pop
dec
adc
mov
outs
mov
stos
ret
enter
and
or
sub
je
rcr
shl
std
ja
mov
rcr
mov
addr16
or
mov
mov
sub
sti
bound
sbb
mov
div
sbb
dec
rol
xchg
and
pop
mov
sbb
mov
retf
scas
(bad)
in
xchg
lods
fild
xor
scas
icebp
xchg
rol
push
or
sub
sub
inc
pop
jge
xchg
adc
dec
fiadd
pop
or
and
ja
cmp
xor
mov
scas
or
data16
cmp
dec
push
and
xor
sub
add
dec
iret
sbb
and
mov
xchg
ror
mov
and
dec
loop
jle
sbb
pop
aas
push
pop
inc
add
ss
pusha
dec
sbb
sbb
add
das
jnp
pop
jno
mov
mov
mov
cmps
out
add
push
das
jne
xchg
cli
cdq
lahf
retf
add
outs
inc
pop
push
adc
dec
push
mov
xchg
jg
and
enter
mov
xchg
cwde
lods
fadd
int3
mov
xchg
(bad)
lahf
(bad)
xlat
mov
xchg
repnz
inc
cmp
lods
mov
push
je
sub
push
in
outs
adc
add
in
vmread
push
mov
dec
pop
pop
sbb
sahf
repz
mov
mov
int
lock
adc
mov
div
inc
xor
xor
jae
je
mov
lahf
(bad)
add
pop
adc
cmp
dec
repz
test
jl
inc
aas
pop
adc
xor
or
dec
cmp
dec
out
idiv
xchg
out
sahf
fbld
inc
sbb
int3
jo
clc
and
stos
(bad)
fwait
clc
or
and
dec
lods
sti
stos
retf
dec
pop
pop
out
cmp
(bad)
bound
dec
or
jno
jns
sub
mov
mov
inc
add
enter
(bad)
data16
sbb
mov
xchg
test
mov
test
fwait
repz
mov
add
mov
pushw
and
xor
mov
int3
(bad)
mov
cmps
mul
loope
lods
mov
mov
fwait
mov
inc
xor
pop
mov
cdq
jecxz
aam
and
or
lds
enter
jl
and
mov
scas
cli
xor
xor
daa
ja
or
push
adc
mov
(bad)
movs
imul
inc
cmp
loope
fidiv
push
jno
push
add
jmp
sbb
loop
sti
and
std
mov
and
jge
cs
rol
or
jmp
fadd
mov
or
xor
push
sbb
mov
or
jmp
out
xor
js
div
xchg
int
fld
sbb
pop
jnp
pop
sbb
push
pop
or
mov
lods
mov
cli
mov
mov
mov
mov
add
adc
not
mov
mov
out
ins
add
ret
rol
mov
add
aaa
sbb
ja
out
mov
shr
cmc
xchg
movs
(bad)
(bad)
call
mov
sbb
mov
into
xchg
jo
popa
das
sub
sub
dec
sbb
dec
shr
push
jae
ins
jecxz
xchg
ror
push
aas
push
es
test
push
or
push
mov
mov
push
pop
push
int3
les
adc
and
inc
aam
or
cmps
pushf
mov
test
dec
icebp
addr16
push
cli
add
aad
mov
sbb
pop
rcl
or
pop
sbb
jns
xchg
xlat
xchg
dec
xor
lods
in
mov
cmp
lea
adc
pop
jbe
jl
xchg
mov
hlt
mov
xchg
sub
adc
sub
sub
xor
iret
xchg
xchg
inc
clc
cmp
and
pop
push
dec
push
sub
xlat
cmps
addr16
imul
fimul
fstp
cmp
inc
dec
cs
cmovg
mov
jmp
fisub
jns
ret
popa
and
dec
or
sub
mov
stos
lock
sub
jne
dec
leave
cs
push
jge
cdq
call
fwait
pushf
aad
retf
popa
cmp
jmpw
mov
loopne
dec
adc
pop
add
in
lock
inc
sbb
dec
(bad)
iret
cwde
test
sahf
fmul
adc
push
mov
ins
rcl
cld
jne
fisub
push
push
or
cdq
ret
mov
pop
dec
add
imul
int3
xor
popa
push
push
pop
pop
sub
rcr
(bad)
adc
mov
cmps
mov
pop
aaa
jbe
jg
sub
pop
xor
pusha
push
and
jns
je
inc
sub
add
icebp
mov
mov
vmwrite
jae
mov
nop
enter
mov
movs
enter
inc
cmp
ret
adc
dec
in
jmp
retf
arpl
and
or
adc
inc
mov
aad
xchg
test
int3
xchg
retf
mov
adc
fcom
mov
xchg
(bad)
add
and
inc
cmp
ss
pop
aas
aaa
outs
sub
out
aad
fistp
add
(bad)
xchg
jecxz
fisttp
pop
jecxz
jmp
test
cmp
sahf
retf
mov
sub
add
sub
add
(bad)
pop
in
frstor
push
sub
in
shl
and
push
dec
add
jbe
nop
jecxz
cmps
jecxz
fdivr
jp
dec
pop
dec
or
or
pop
(bad)
jnp
jmp
repz
mov
fisttp
pushw
neg
sub
(bad)
xchg
in
pop
or
ins
or
into
adc
(bad)
sti
addr16
add
dec
and
mov
sar
imul
sbb
cdq
ins
pop
or
stc
mov
fmul
and
lea
mov
jge
mov
outs
sub
shr
fsub
fs
lock
hlt
mov
xchg
into
cdq
bound
pushf
repz
mov
jmp
jmp
int3
test
and
mov
fisttp
test
(bad)
rcl
frstor
cwde
in
stc
mov
addr16
push
into
and
push
pop
adc
(bad)
test
test
dec
loopne
jge
push
inc
or
fimul
fwait
shl
xchg
shr
cmps
lock
cmps
iret
test
test
xor
cmp
xchg
shl
shr
xchg
ja
outs
adc
jl
pop
loope
pop
je
xchg
rcl
(bad)
imul
sar
inc
vmwrite
push
out
loope
shl
rol
dec
adc
mov
xor
jb
jnp
js
cld
(bad)
into
mov
sti
lods
call
sub
ret
mov
add
jno
push
adc
and
cmc
test
nop
mov
leave
xchg
xchg
ror
in
stos
out
jb
(bad)
mov
arpl
popf
fsubr
aas
sub
push
das
jne
dec
add
xchg
aad
fsubr
out
inc
and
std
lods
in
xchg
loop
hlt
mov
and
sub
mov
(bad)
popf
fstp
hlt
popf
mov
sahf
stc
test
sahf
xchg
ss
outs
cmp
mov
cmp
fisttp
jnp
and
push
adc
and
aaa
xchg
loope
ret
mov
xchg
icebp
mov
inc
xor
and
jns
dec
adc
push
adc
dec
sub
(bad)
jecxz
in
mov
scas
enter
arpl
pop
call
jno
js
push
or
data16
sub
pop
add
es
enter
ficom
mov
mov
xchg
div
inc
cmp
push
jnp
adc
jo
daa
dec
xor
adc
push
dec
maxps
es
and
inc
stc
nop
xlat
xchg
movs
mov
cmps
(bad)
inc
xor
dec
call
enter
or
sub
pop
push
pop
mov
push
xchg
aam
mov
dec
jecxz
enter
mov
mov
mov
cwde
fsubr
pop
adc
jle
add
and
inc
jmp
data16
nop
shl
xor
je
jl
(bad)
sti
mov
scas
dec
or
or
and
dec
pminsw
in
repnz
fadd
mov
mov
sub
pop
cmp
and
adc
push
add
retf
mov
jns
push
pop
les
adc
in
push
sub
sbb
je
add
sub
pop
sbb
mov
mov
addr16
(bad)
(bad)
pushf
fcomp
outs
ds
movs
(bad)
mov
jno
push
or
adc
imul
loop
jge
je
sub
std
mov
pop
jno
inc
loop
sar
sub
sub
cld
call
xlat
push
mov
xchg
retf
stos
mov
push
pop
pop
fsubr
loope
mov
inc
sub
mov
cwde
mov
pop
ja
inc
fisub
arpl
cmp
enter
cmp
cmp
dec
or
push
jbe
inc
sbb
xchg
repnz
les
pop
inc
mov
jle
xor
mov
adc
test
mov
ds
add
sbb
push
and
mov
mov
jnp
dec
mov
mov
jno
dec
add
sbb
xor
inc
xor
sub
in
outs
sbb
loope
in
push
sti
mov
call
das
arpl
push
or
cmp
sub
cmc
scas
fimul
das
js
pop
dec
pop
or
das
js
jae
dec
adc
dec
or
jb
ins
mov
mov
add
nop
call
pop
gs
(bad)
arpl
cmp
daa
push
xor
and
inc
or
pop
jae
imul
mov
mov
jne
push
dec
and
mov
imul
jg
ins
sub
inc
pop
dec
or
push
addr16
fnsave
pcmpeqw
inc
sub
mov
cmps
jecxz
cmp
push
mov
fisttp
shl
retf
add
call
sbb
inc
and
push
inc
pop
ins
adc
mov
adc
dec
pop
dec
adc
jge
push
mov
out
retf
pusha
sub
and
shl
mov
xor
adc
inc
adc
pop
lock
add
push
mov
aaa
fsub
jno
and
cmp
jbe
push
sbb
stos
stos
jns
pop
in
lds
js
add
xor
sub
cwde
shl
stc
test
sar
movs
movs
enter
pop
or
dec
or
jno
dec
movs
or
and
add
dec
push
and
stos
add
jg
in
(bad)
mov
repz
and
pop
cmp
jg
rcl
js
sub
pop
sbb
or
adc
das
push
dec
mov
push
adc
loopne
out
aam
xor
pop
add
and
push
in
fcomp
out
jbe
push
cmp
jb
and
xchg
jno
jo
xor
jns
enter
call
push
xchg
(bad)
stos
cli
xchg
jg
xchg
cwde
xchg
mov
add
adc
inc
in
scas
inc
cs
adc
sub
loopne
xor
or
jg
dec
cmp
and
and
adc
jbe
outs
cmp
pop
loop
fisubr
sub
mov
clc
mov
jno
and
nop
in
mov
aas
imul
mov
arpl
outs
das
out
pop
dec
add
das
and
pop
xor
es
out
push
add
inc
in
dec
jecxz
(bad)
cdq
out
popa
add
push
cmp
jb
push
or
addr16
pusha
sub
imul
imul
leave
jb
pop
frstor
push
cmp
mov
popf
out
mov
jecxz
int
jns
pop
jmp
or
and
cmc
fcom
xor
sbb
aad
outs
push
jl
fnstenv
jo
(bad)
arpl
mov
fidiv
sub
call
sbb
xor
dec
adc
stc
outs
or
loopne
add
loopne
sti
or
sbb
add
and
test
and
sub
jno
outs
cmp
imul
fsubr
minps
mov
mov
fisub
jne
popa
rcl
xor
dec
add
outs
out
sub
inc
adc
cli
sbb
add
ja
push
add
stos
mov
jmp
sub
pop
pop
and
push
push
jge
in
and
fbld
mov
and
fist
stos
aad
enter
enter
(bad)
lods
rcl
cdq
shr
out
xlat
(bad)
fcomp
fiadd
xor
and
jo
cmps
out
xchg
int
sbb
add
adc
or
and
(bad)
cdq
ret
addr16
adc
jb
dec
cmp
jp
int3
test
nop
fstp
push
adc
(bad)
jp
inc
xor
fs
or
inc
push
dec
or
mov
jb
and
jne
stc
arpl
sub
cld
cmps
fdiv
imul
fisub
inc
sbb
bound
or
xchg
jb
dec
cmp
js
(bad)
retf
cmps
lea
dec
in
jmp
push
into
xor
and
cmps
jecxz
jge
pop
jle
push
ins
cmp
jp
mov
(bad)
and
push
jecxz
ror
dec
or
shr
jbe
aaa
pop
imul
sbb
cmp
retf
cmps
cld
lods
rol
sti
xchg
fsub
pop
adc
add
push
ret
mov
sbb
ins
cmp
loopne
retf
ret
outs
es
push
pop
inc
(bad)
int
inc
aaa
pusha
sub
ja
jnp
inc
rcr
or
pop
jecxz
fist
push
adc
push
inc
add
jbe
jge
pusha
aaa
aam
shr
xchg
(bad)
xchg
stc
xchg
(bad)
popa
and
xor
and
push
ss
gs
mov
clc
xchg
retf
popf
(bad)
and
xor
inc
adc
pop
sub
cli
gs
adc
xor
pop
in
cmp
add
outs
dec
cmp
sbb
iret
adc
imul
and
imul
call
test
cmp
js
inc
aaa
js
(bad)
mul
adc
sar
lods
dec
nop
bound
addr16
xchg
outs
xor
iret
fistp
fs
lahf
ret
xchg
jmp
jmp
push
adc
push
outs
adc
xchg
(bad)
xchg
out
mov
cdq
enter
xlat
movs
outs
(bad)
mov
mov
sub
jbe
jb
(bad)
push
push
xor
and
add
pop
add
bound
fs
xor
jg
mov
outs
or
ja
bnd
inc
pop
sub
mov
jle
jb
pop
adc
pop
dec
in
mov
mov
daa
pusha
xor
or
jle
pushf
enter
out
iret
cmp
or
jle
into
mov
cdq
xchg
cmp
push
pop
ds
pop
imul
retf
pop
xchg
iret
sbb
push
sub
dec
adc
movs
jecxz
cmp
dec
or
mov
jge
dec
adc
imul
add
js
jae
and
frstor
dec
pop
push
cmp
pop
js
mov
sar
(bad)
mov
cmps
test
scas
fisub
pop
lock
push
push
mov
addr16
adc
std
mov
ins
or
pop
nop
aaa
inc
or
int
and
cli
popf
in
bound
mov
(bad)
scas
xlat
test
jb
push
fwait
mov
ret
xor
pop
dec
test
and
mov
mov
or
ss
imul
cmp
rol
movs
int3
sub
mov
scas
(bad)
mov
jecxz
xlat
xor
retf
outs
add
mov
test
jo
dec
pop
pop
in
mov
scas
stc
scas
xchg
xlat
lods
out
test
outs
adc
cdq
fistp
sbb
inc
out
cmp
push
xor
sub
adc
add
sbb
push
sbb
jae
(bad)
mov
add
xchg
into
pop
cdq
icebp
jno
mov
scas
mul
lods
cli
mov
mov
stc
scas
inc
add
or
arpl
sub
sub
movs
or
add
iret
stos
lds
mov
in
scas
jmp
jge
inc
sub
add
add
or
cwde
int
test
mov
inc
mov
stc
jnp
mov
ror
call
fistp
add
mov
pop
hlt
ins
cmp
rcr
xor
test
stos
stos
pop
or
push
mov
mov
or
xor
nop
std
lods
mov
in
lds
sub
sub
jae
pop
cmp
icebp
loop
pusha
or
mov
pop
inc
cmp
je
clc
xchg
or
sub
call
bound
add
pop
out
or
cdq
int
pop
les
movs
jp
xor
or
es
xlat
pop
aaa
jbe
inc
cmp
inc
sbb
mov
fs
in
ins
fcomp
repz
cs
pop
or
xor
out
mov
xchg
cmp
fwait
les
out
mov
pop
jecxz
div
sbb
pop
xor
div
mov
add
push
test
inc
sbb
cmp
data16
pop
xor
or
pop
out
pop
and
mov
imul
sub
jb
test
loop
movs
sub
mov
push
(bad)
cs
sub
or
or
stos
lock
pushf
out
xor
cmp
imul
inc
sub
jae
sub
jo
out
lock
out
push
pop
mov
nop
enter
mov
(bad)
mov
call
mov
cdq
cmps
xlat
xchg
imul
mov
mov
mov
push
out
lods
call
dec
or
xor
jl
inc
add
add
xchg
fs
or
inc
xchg
sub
ror
xchg
mov
and
into
rcl
out
cli
mov
int
inc
pop
sub
in
imul
mov
xor
test
enter
out
cmp
push
push
pop
xor
push
cmp
ss
loope
int
push
(bad)
sub
inc
ret
mov
xchg
stos
mov
aad
shl
mov
lods
xchg
xchg
lods
(bad)
mov
mov
xchg
lds
lahf
(bad)
mov
pop
adc
mov
nop
mov
outs
sbb
pop
xor
sub
and
push
sar
mov
movs
out
les
rol
(bad)
fistp
sahf
lods
stos
cmc
popf
ja
nop
(bad)
xor
out
fwait
int3
jbe
pusha
aas
dec
sbb
sbb
pop
fidiv
hlt
xor
inc
jecxz
movs
mov
pop
mov
out
and
pop
jle
pop
icebp
and
mov
jb
out
jecxz
enter
rcl
div
cmps
jl
pop
ins
cmp
sbb
daa
pop
(bad)
adc
mov
lea
jb
scas
xlat
popa
loop
jge
jle
mov
mov
and
sub
pop
jle
pop
pop
jg
lods
in
test
loopne
jmp
jnp
jns
inc
cmp
cs
js
mov
xchg
fdiv
jmp
call
js
dec
add
and
adc
jns
xor
dec
add
and
repz
in
aad
test
mov
call
ja
jb
leave
xchg
ret
dec
ds
jb
dec
aaa
outs
cmp
xor
pop
or
iret
mov
xlat
mov
stc
xchg
fsub
fwait
outs
ds
sbb
nop
in
into
(bad)
retf
xchg
cmps
neg
inc
xor
fimul
inc
add
jg
pop
sub
dec
std
cwde
fdivr
push
add
repnz
mov
mov
fimul
sahf
lods
in
out
cmps
repz
mov
sbb
mov
sbb
movs
(bad)
xchg
shl
push
sbb
push
push
add
mov
es
inc
adc
cmc
push
adc
call
mov
dec
cwde
jmp
sub
pop
dec
push
sbb
sbb
and
shl
and
jmp
ret
dec
call
add
inc
lock
mov
inc
sbb
ret
xchg
clc
cmps
leave
dec
pop
mov
addr16
lds
test
push
push
inc
fbld
jg
fisubr
pop
cwde
xchg
ret
test
adc
jecxz
jo
dec
lea
cdq
inc
jmp
add
dec
cli
xchg
icebp
sbb
je
scas
idiv
jle
push
je
push
ret
mov
pushf
push
mov
imul
lock
add
inc
adc
scas
rol
fcom
enter
cmps
(bad)
add
push
push
dec
stos
std
mov
pop
fsubr
retf
addr16
and
shl
inc
or
loope
aad
jp
cmp
cmc
fnstenv
push
add
pop
jae
dec
or
movs
(bad)
lods
jmp
sub
jnp
ret
xchg
add
jb
dec
iret
mov
out
leave
call
das
outs
pop
(bad)
nop
loop
fnsave
dec
adc
mov
mov
popa
sub
jmp
add
jp
aam
xor
push
pop
ins
sbb
jnp
das
pop
adc
and
push
add
or
call
cmp
adc
pop
sti
scas
in
test
shl
jne
cmp
rcl
es
xchg
xchg
jl
(bad)
cld
test
popa
lods
fs
bound
jne
pop
aad
repz
or
fwait
lock
sbb
cmp
mov
inc
add
jmp
cmp
les
mov
dec
mov
xor
data16
inc
stos
outs
jge
mov
sbb
xchg
sbb
mov
mov
pop
lahf
add
xchg
int3
ins
push
out
outs
mov
mov
std
xchg
lods
xchg
jns
adc
jle
add
mov
je
jbe
rol
pushf
pushf
out
fs
rcl
fadd
lock
loop
clc
and
jbe
mul
into
cmp
das
sub
cmp
dec
cmp
shr
inc
idiv
and
test
out
mov
sub
mov
add
out
inc
sub
packssdw
mov
sbb
dec
fwait
pushf
out
mov
add
scas
jmp
mov
jbe
push
sbb
stos
lock
or
aad
ss
pop
cmp
les
sar
out
sub
or
jns
inc
(bad)
jp
or
sbb
out
xchg
popf
pop
shr
sbb
dec
mov
popa
neg
es
retf
jge
adc
aas
pop
movs
popa
scas
bound
inc
rcr
jp
loope
lahf
je
stos
fmul
push
inc
add
mov
pop
cld
mov
lea
and
shr
xchg
dec
adc
lods
jmp
dec
retf
sub
pop
or
xchg
mov
adc
retf
call
adc
mov
fidivr
rol
jp
add
int3
cs
(bad)
pop
adc
in
neg
push
sar
movs
ins
pop
dec
fidivr
ins
dec
mov
ins
mov
dec
stc
pop
lahf
mul
pop
add
movs
inc
sub
push
jmp
inc
test
or
inc
into
mov
ins
(bad)
pop
adc
sub
lock
inc
cld
inc
or
sahf
into
lahf
out
scas
jle
push
sysexit
hlt
pushf
jmp
pop
loope
das
pcmpeqw
push
test
fcom
rcr
iret
push
repnz
xchg
das
sbb
or
mov
sbb
enter
push
inc
shl
sbb
dec
cmp
push
pop
sbb
mov
push
add
ins
fisttp
or
fst
push
mov
jge
push
sbb
ss
aam
jl
dec
or
ins
sub
dec
add
pop
retf
outs
into
and
lods
call
inc
add
aad
pcmpgtd
push
mov
cmp
or
cmp
ret
push
push
adc
xchg
mov
test
stc
push
lahf
inc
test
mov
leave
xor
outs
stos
add
mov
cs
lods
inc
inc
mov
xor
movs
ja
jl
mov
mov
push
and
mov
in
ja
pop
mov
cmp
int3
je
adc
rol
je
test
sbb
push
cmp
in
sub
lods
fwait
js
xor
pusha
mov
fiadd
xchg
xchg
out
inc
loope
in
and
mov
das
sti
mov
add
sub
sub
sbb
xchg
pop
ins
ds
lock
int3
jbe
add
sbb
ins
mov
fcomp
aad
pop
sub
lods
jo
sbb
pop
rol
popa
mov
pop
pushf
retf
adc
xchg
xchg
ja
adc
mov
or
mov
adc
test
and
cmp
test
mov
mov
clc
test
out
and
test
dec
xchg
xchg
arpl
push
mov
mov
dec
pop
aam
imul
pop
rcl
ret
or
aaa
fdiv
push
cld
xor
shl
into
add
mov
inc
xchg
push
aas
mov
adc
fdivr
and
ss
test
mov
adc
iret
and
stos
fwait
retf
mov
popf
inc
xor
and
adc
call
sar
add
call
hlt
adc
and
dec
push
fbld
and
adc
shl
adc
dec
push
mov
xchg
(bad)
mov
in
das
jne
int
cwde
xchg
push
push
das
adc
push
ret
or
bound
sbb
xor
cmps
push
push
xor
sub
jbe
jne
inc
xchg
fidiv
outs
mov
xor
mov
pop
inc
imul
cmp
hlt
or
dec
and
dec
push
sub
inc
pop
test
(bad)
mov
mov
mov
push
mov
rcl
push
pop
test
icebp
in
cmp
(bad)
ja
gs
popf
jmp
ins
mov
or
dec
add
dec
mov
inc
sub
aaa
inc
pop
sti
mov
cmps
push
test
mov
jbe
ror
bnd
pop
jno
jne
mov
jge
ret
cdq
repnz
and
xlat
xchg
jmp
lods
iret
sahf
aas
adc
cmp
ins
jecxz
adc
mov
xor
pop
cmp
outs
aas
dec
adc
in
xor
inc
adc
xchg
(bad)
ror
out
fimul
jg
mov
inc
and
add
loopne
push
adc
xchg
mov
pop
loop
sbb
push
aad
ss
jp
pop
xchg
shr
ret
sar
push
sub
ret
push
xchg
outs
cs
popa
adc
sub
repnz
add
cld
mov
fld
push
mov
jg
pop
fwait
mov
ja
mov
or
fistp
sub
inc
jmp
jecxz
imul
cmc
sub
shr
jnp
shl
popf
dec
cmovae
push
cmp
mov
jmp
gs
mov
popf
popa
cmove
jo
xchg
hlt
fnsave
ss
lds
jno
icebp
mov
mov
jae
jg
sub
je
pop
mov
jmp
test
adc
ret
or
out
xchg
jmp
rcl
pusha
aaa
int
aam
test
lock
into
in
inc
adc
dec
add
rol
or
adc
mov
and
test
push
pop
pop
enter
or
adc
es
cmp
dec
mov
xchg
dec
mov
dec
and
retf
mov
jnp
xor
fisttp
in
inc
add
xor
cdq
leave
adc
arpl
imul
xor
shl
stc
push
add
sbb
push
mov
pushf
push
pop
je
daa
sbb
fst
sub
dec
jecxz
(bad)
pop
mov
cwde
sub
fs
add
fbld
inc
xchg
mov
xchg
bound
shl
adc
push
mov
daa
std
add
jo
jb
pop
rol
mov
add
in
mov
dec
mov
fs
sub
adc
repz
pop
lea
(bad)
mov
xchg
and
add
sub
sti
mov
push
aaa
pop
sti
and
out
stos
mov
jbe
push
ss
cmps
push
maxps
sub
cmp
mov
jno
add
mov
ret
mov
fisub
add
or
xor
mov
mov
mov
out
fs
inc
jecxz
mov
push
add
mov
lods
fdivr
pop
cmp
rcr
iret
mov
jae
pop
(bad)
jp
push
mov
fwait
int3
fwait
mov
lock
rcl
aam
lds
cmp
add
xchg
jo
aas
sbb
sbb
aam
mov
sahf
jmp
push
cmp
dec
add
add
jnp
pop
mov
xchg
loop
mov
popf
sbb
cmp
sti
scas
movs
in
dec
xor
out
test
ins
xor
rcl
mov
pop
and
fwait
retf
mov
jmp
mov
(bad)
call
push
fstp
dec
push
push
clc
mov
or
push
pop
repz
push
or
dec
mov
sbb
inc
popf
dec
or
mov
xchg
inc
or
mov
outs
or
jnp
lahf
neg
push
and
cmp
jge
cmp
pop
jecxz
push
dec
sbb
jle
xor
ret
(bad)
mov
int
and
xor
int
enter
fisttp
fs
push
inc
hlt
pushf
jmp
mov
inc
mov
pop
jmp
in
ror
in
test
inc
idiv
xor
adc
push
sti
xor
xlat
xchg
cmps
ret
jl
mov
xchg
mov
push
add
adc
pop
pop
sbb
pop
mov
pushf
fisubr
mov
sbb
stc
icebp
pop
pcmpgtb
je
or
and
int3
fist
jbe
cmp
dec
inc
mov
mov
call
inc
fcomp
mov
in
xchg
jmp
pop
or
cmp
fcom
(bad)
les
call
sub
add
imul
in
sub
add
repnz
sbb
in
icebp
fs
mov
(bad)
fbstp
test
mov
inc
fidivr
or
pop
add
in
fstp
in
test
push
test
sbb
fld
(bad)
(bad)
xchg
fisub
pop
mov
addr16
adc
push
xchg
les
in
push
cs
stos
cwde
jnp
mov
pop
sub
fnstsw
nop
shl
jge
ss
mov
into
cmp
retf
scas
call
and
aas
jle
lods
ins
mov
sub
fsubr
add
or
aam
mov
test
sub
movs
call
fnstenv
inc
pop
(bad)
jae
adc
xor
clc
popf
mov
lahf
fidiv
or
xchg
adc
ja
jne
fisubr
aas
cmps
aam
mul
sbb
cmp
neg
dec
aas
jbe
movs
lea
and
(bad)
mov
dec
cmp
into
dec
nop
cmps
inc
sub
jl
xor
fnstcw
push
push
mov
jecxz
stos
(bad)
retf
xchg
dec
cmps
xchg
pop
xchg
cmps
je
arpl
or
and
into
push
xchg
pusha
movs
fild
sub
mov
sbb
push
(bad)
xor
mov
pop
test
inc
xchg
pop
(bad)
iret
push
xchg
fcom
jo
enter
dec
mov
cmc
xchg
sbb
add
xor
cdq
jecxz
jle
jecxz
mov
out
mov
sbb
xchg
fdivr
inc
test
cmps
jbe
cmp
rol
push
adc
jge
jg
jmp
ret
or
jp
pop
pusha
call
and
imul
or
mov
mov
pop
mov
mov
jg
retf
loope
ins
test
mov
sub
movs
mov
shl
stc
and
fst
cmp
sbb
hlt
adc
pushf
enter
inc
adc
add
jmp
ficomp
mov
jmp
sub
out
cmc
out
mov
sahf
outs
sbb
lea
xchg
(bad)
lods
pop
push
cmp
cld
xor
retf
jo
cmp
pushf
test
push
dec
xchg
in
ja
cmp
mov
mov
fwait
ret
out
imul
or
sbb
dec
add
xor
rcl
mov
and
mov
adc
loop
ret
push
add
neg
ret
or
lds
shl
fbld
hlt
movs
iret
cmp
aas
dec
add
imul
and
(bad)
mov
or
out
xor
inc
sub
mov
fld
pop
mov
stos
inc
push
or
lds
jnp
mov
pop
cs
mov
pop
push
test
xchg
pop
push
loope
jle
push
mov
addr16
(bad)
mov
pop
sub
sub
outs
mov
pavgb
jle
mov
jecxz
test
hlt
sub
jp
cmp
out
mov
add
out
sahf
fcomip
call
(bad)
arpl
aas
jmp
es
movs
mov
dec
sbb
jge
repnz
dec
movs
xlat
sbb
jmp
retf
ins
fisttp
(bad)
cmp
std
mov
cmps
dec
add
loope
adc
mov
movs
push
in
lock
sub
shl
pop
pusha
mov
(bad)
jge
and
mov
ret
es
ins
or
mov
arpl
sub
sbb
ret
dec
xchg
fisubr
inc
and
jo
enter
inc
xchg
or
cmps
frstor
enter
mov
and
mov
ss
int3
sbb
or
loope
cmp
mov
push
pop
enter
sbb
test
adc
mov
repnz
sub
outs
mov
push
fadd
pop
xchg
loopne
sub
ja
add
int
retf
adc
mov
test
inc
xor
mov
sbb
(bad)
out
cmp
scas
movs
data16
aam
fdivr
lods
inc
push
mov
xchg
sub
sbb
mov
pop
xor
imul
push
push
shl
inc
mov
mov
and
mov
cmp
sbb
call
xchg
mov
inc
loop
paddw
jbe
and
sti
sub
jb
inc
mov
push
jbe
push
add
aad
add
mov
aam
test
cmps
jge
push
sub
lods
sub
fnsave
mov
pop
aaa
(bad)
push
retf
loope
mov
or
or
mov
sbb
sbb
loope
xor
test
cwde
jg
icebp
cmp
push
pop
cmp
fistp
ins
and
int
lock
push
pop
xor
stos
jo
sar
into
popa
cmps
fld
leave
pop
bound
jmp
ins
and
nop
jecxz
inc
loopne
in
jmp
cld
add
shr
das
push
lgs
out
sub
pop
retf
or
arpl
lea
call
sar
cmp
shr
or
sbb
sbb
add
retf
test
mov
enter
inc
xchg
shl
push
push
push
fnsave
pop
mov
stc
xor
fcomp
repz
add
mov
xchg
pop
push
cmp
xchg
inc
add
lods
ins
mov
sbb
push
shl
push
in
(bad)
or
(bad)
fnsave
and
push
out
pop
pushf
stc
test
inc
fidiv
cmc
and
stos
(bad)
push
mov
retf
inc
fstp
test
retf
aas
aaa
sbb
adc
xchg
fnstcw
inc
cmps
dec
mov
dec
lahf
mov
(bad)
retf
repz
xchg
inc
pop
outs
jo
or
fcom
push
dec
push
add
test
jp
jb
enter
mov
xlat
or
scas
stos
outs
mov
(bad)
or
or
adc
jae
aam
daa
dec
enter
mov
into
jbe
(bad)
sahf
and
rol
jbe
idiv
push
int3
mov
adc
adc
cmc
or
repnz
xor
enter
lock
or
jbe
sbb
push
je
aam
mov
mov
leave
adc
add
add
mov
cmp
shl
and
(bad)
sub
std
ss
add
jnp
cmp
movs
je
push
loop
jmp
jle
into
xchg
pop
cld
inc
test
shl
sbb
mov
xchg
rcr
cmp
test
ja
shl
fsub
daa
adc
xchg
or
lock
iret
cdq
fisttp
cmp
enter
in
repnz
push
dec
xchg
(bad)
lods
pop
push
cmp
es
fnstsw
inc
and
pop
mov
mov
mov
mov
and
xchg
cwde
pop
jo
aam
pop
push
adc
cli
cmp
fbld
and
or
fcmovb
sbb
mov
inc
xchg
sbb
(bad)
in
mov
repnz
out
or
push
xor
cmp
hlt
mov
and
sbb
or
and
lods
mov
sbb
or
movs
frstor
cs
mov
add
or
adc
mov
or
icebp
sub
das
inc
and
(bad)
es
daa
pop
add
icebp
and
(bad)
pushf
mov
mov
pop
mov
dec
add
es
arpl
or
mov
sbb
push
shl
jns
jmp
in
imul
xchg
mov
rol
ss
push
loop
ja
pop
mov
lods
xchg
push
int3
or
mov
pushf
in
lods
jle
aas
in
iret
cmps
les
stc
sbb
cmp
xchg
jnp
xchg
in
mov
or
push
into
lea
lea
xor
sub
aam
pusha
cmp
adc
mov
pushf
mov
shl
add
fs
lods
mov
std
inc
add
hlt
mov
cwde
and
cli
push
mov
sbb
in
add
and
stc
push
xchg
test
jae
das
bswap
pop
mov
scas
fstp
scas
jecxz
mov
fisttp
dec
xchg
lds
mov
mov
jecxz
push
sbb
hlt
and
es
push
add
pusha
stos
jl
jbe
push
xor
scas
(bad)
xchg
retf
inc
dec
nop
out
mov
punpckhdq
pop
in
inc
stos
aad
ja
inc
repz
test
cmp
push
jmp
ins
xor
fs
xlat
xchg
ins
sub
sub
cli
lock
adc
jecxz
adc
out
mov
dec
into
(bad)
xor
add
fcom
ret
les
call
dec
stos
fisttp
adc
jbe
das
fsubp
xchg
fdivp
mov
test
int
stc
cwde
lods
repnz
add
lods
in
mov
mov
(bad)
pop
cmp
in
mov
stos
data16
jecxz
fstp
add
mov
neg
push
rol
outs
ds
stos
ret
lds
xor
cmp
movs
loop
fdiv
push
leave
adc
jo
dec
sbb
push
push
and
push
hlt
push
mov
addr16
mov
(bad)
add
sub
sub
out
ud0
or
xor
and
pop
xchg
xor
in
cmps
xchg
xchg
xchg
data16
pop
in
and
ret
pop
out
sub
add
repz
mov
push
shr
in
test
mov
pop
ret
xor
pop
fnstcw
in
inc
fldcw
push
stos
lea
jg
lea
js
add
push
mov
pop
sub
dec
fmul
lea
ins
mov
pushf
mov
dec
test
xchg
and
popf
jg
jle
mov
push
mov
rcr
arpl
cs
repz
mov
test
jno
aas
in
cld
call
outs
lea
ret
cmp
xchg
xchg
or
mov
push
stos
ins
and
out
mov
retf
or
and
pop
pop
ss
sbb
jecxz
std
test
sub
repnz
mov
fsub
xor
sahf
jnp
es
rol
repz
or
lods
(bad)
dec
cmps
xchg
data16
std
mov
mov
shl
clc
pop
test
or
push
mov
ins
mov
sbb
aas
jnp
inc
aam
out
ja
mov
test
xor
xchg
mov
les
jae
pop
cdq
nop
popa
mov
mov
mov
add
sub
push
mov
pusha
mov
arpl
aaa
in
cmp
cli
jg
sub
add
push
retf
daa
jmp
lods
cdq
cld
ins
mov
jno
ds
es
and
out
cmp
or
mov
xchg
mov
adc
jg
pop
mov
pop
cmp
iret
add
call
popa
mov
sahf
jle
fld
mov
iret
cs
push
int
xlat
push
fdivr
inc
mov
rcr
jo
mov
(bad)
sbb
sbb
xor
jl
sub
in
pop
mov
out
in
push
sbb
add
dec
xlat
pop
std
pop
mov
inc
(bad)
fs
jg
push
mov
push
pop
pop
lds
aas
(bad)
push
aam
call
inc
test
cmp
(bad)
leave
sub
sub
paddw
mov
ficom
mov
mov
inc
mov
jns
inc
mov
lods
jp
(bad)
rol
clc
sub
cmp
dec
cmp
movs
dec
or
(bad)
adc
add
dec
ficom
outs
das
sbb
add
ins
stos
js
xchg
ins
sub
in
push
shr
into
add
adc
pop
into
cmp
jmp
adc
(bad)
cmp
pop
scas
fisttp
cmps
inc
mov
cdq
inc
(bad)
or
cmc
sub
sub
add
pop
int
clc
pop
adc
xor
xchg
xchg
push
loope
leave
ss
jnp
pop
sub
xchg
or
pop
mov
jl
push
mov
and
or
in
pop
xchg
dec
sbb
imul
cmp
pop
mov
es
xchg
xchg
jo
mov
outs
test
jge
xchg
ficom
dec
sbb
shl
adc
leave
sub
sbb
cmp
inc
mov
inc
fidiv
(bad)
lahf
pushf
inc
mov
scas
popa
mov
fcomp
lahf
xchg
(bad)
fistp
fstp
jno
add
xor
dec
cmp
jnp
or
or
test
loopne
mov
dec
test
ds
push
add
stc
cs
adc
xor
push
adc
and
outs
sti
cmp
add
and
adc
enter
cmp
iret
ss
js
das
or
pop
lods
bound
xchg
inc
push
push
pop
std
cmp
aaa
clc
lods
arpl
adc
shl
and
out
and
out
push
stos
add
test
mov
mov
push
shl
dec
call
sahf
xchg
pusha
mov
or
sahf
mov
sbb
ds
adc
dec
lods
mov
cwde
je
mov
fild
pop
or
mov
in
pusha
xchg
outs
cmps
jp
sub
pop
mov
push
stc
pop
out
pop
loope
mov
nop
je
mov
mov
xchg
xchg
sub
je
pop
or
shl
ja
xchg
outs
(bad)
pop
stos
inc
mov
retf
push
cmp
xchg
xchg
popa
fistp
sahf
fwait
pusha
in
lea
and
int3
push
scas
js
mov
ins
mov
(bad)
ficom
mov
scas
ins
sbb
sub
sbb
pop
rcr
or
pusha
call
inc
mov
fcomp
mov
push
ret
dec
lea
push
std
cmp
leave
pop
jmp
into
es
mov
jne
and
dec
shr
into
or
push
mov
rcr
jp
xchg
push
inc
test
sub
cmp
leave
cmp
es
lea
jnp
adc
test
sar
pop
imul
or
call
lea
jns
dec
scas
sahf
shr
pop
cmps
inc
leave
push
clc
sub
jl
push
shl
je
test
inc
rcl
xchg
mov
mov
ret
dec
adc
add
mov
xchg
leave
pmaxsw
add
and
pop
fnstcw
pop
xchg
fimul
dec
loop
jmp
adc
adc
push
scas
arpl
mov
jmp
(bad)
push
test
mov
push
sar
pop
div
pop
icebp
pop
aaa
out
int3
sub
(bad)
cmp
sbb
imul
pop
in
jbe
ins
fistp
mov
stos
lahf
mov
push
adc
add
ror
adc
push
mov
fst
in
dec
iret
sub
xchg
jnp
jno
push
mov
cmp
mov
inc
fidiv
neg
jmp
lock
test
fcomp
add
add
cmp
xchg
imul
out
in
mov
shr
pop
icebp
push
test
test
mov
or
cmc
add
cld
pop
mov
mov
inc
cmps
scas
inc
mov
jecxz
cmc
cmp
mov
fldenv
mul
push
in
jns
push
and
jno
xor
aas
call
retf
(bad)
mov
stos
inc
mov
cmp
jmp
retf
xor
out
add
(bad)
jbe
xor
sub
add
inc
sub
test
scas
popf
mov
mov
xchg
call
imul
das
jmp
in
or
cmp
add
jmp
scas
ins
test
fstp
ins
rcr
bound
or
cmp
aam
mov
arpl
pop
fdiv
cmc
sub
(bad)
sub
mul
cmp
pop
xlat
(bad)
push
in
xchg
call
and
std
push
(bad)
cmp
jp
sub
arpl
pop
movs
arpl
cmp
dec
aad
je
pop
repnz
stos
lea
push
rcl
jp
pop
xchg
xor
push
(bad)
outs
test
xlat
xor
dec
lods
cwde
push
xchg
sub
in
pop
mov
test
jp
xchg
jl
xchg
ja
gs
adc
xor
nop
imul
cli
pop
(bad)
jecxz
add
inc
cmc
xor
push
lods
xchg
jne
jmp
sbb
sub
leave
sub
and
loopne
(bad)
arpl
and
or
xor
adc
ds
ss
pop
jmp
mov
fnstenv
sbb
out
dec
xchg
dec
sbb
test
adc
xor
inc
ror
dec
sbb
ins
(bad)
push
mov
arpl
cmp
xor
in
test
inc
std
dec
cmp
mov
push
sbb
aas
ss
enter
xor
sub
dec
lods
call
repnz
cmp
pop
cld
pop
aad
cmp
sar
out
or
mov
dec
mov
call
push
in
pop
adc
or
pop
leave
aas
loopne
scas
mov
mov
(bad)
inc
fist
call
mov
jno
adc
into
pop
les
or
hlt
sub
pop
cmps
xchg
jo
cwde
jg
jg
add
adc
or
clc
cmp
ss
int
nop
mov
arpl
enter
aaa
pop
or
ds
sub
pop
cmps
addr16
rcr
push
out
enter
or
mov
pop
fnstsw
neg
aam
push
mul
push
xchg
out
inc
fstp
jl
aas
loop
cli
xor
sub
push
int3
jnp
je
pop
mov
aaa
pop
cs
jbe
ss
mov
sahf
mov
add
add
inc
rol
xchg
imul
stos
iret
sub
out
shl
loopne
lock
ja
and
xor
and
inc
retf
or
les
enter
les
jmp
pop
shl
std
xor
es
aaa
sbb
ds
aad
aad
lods
in
pop
mov
pop
adc
cs
push
mov
imul
cmp
push
mov
iret
dec
(bad)
xor
cmps
sahf
popf
jno
test
lahf
mov
mov
xchg
push
push
dec
test
inc
test
fwait
(bad)
jle
(bad)
in
das
in
pop
nop
xchg
inc
cmps
push
and
dec
das
repz
push
push
ret
inc
scas
js
sub
push
ins
xchg
push
test
shl
imul
repnz
movs
xchg
dec
lods
xchg
jo
and
add
mov
rcr
movs
gs
or
pop
mov
or
mov
mov
inc
rcl
and
nop
imul
clc
push
aad
call
jge
test
mov
ss
stos
jge
push
cmps
fwait
popf
xchg
outs
xchg
nop
jbe
jle
call
(bad)
and
cmc
push
mov
inc
(bad)
push
mov
xchg
nop
imul
pop
mov
(bad)
lea
aaa
pop
adc
or
push
mov
dec
mov
adc
cmc
test
ins
mov
jg
dec
(bad)
sub
fcomp
dec
xor
js
lahf
dec
mov
mov
sbb
xor
ficom
xor
out
ds
int3
push
out
std
xor
cmp
mov
iret
push
jmp
and
ins
shl
mov
xor
or
cmp
repnz
shr
loope
jge
inc
scas
imul
inc
sbb
(bad)
das
adc
push
iret
xor
lds
daa
sbb
test
test
or
xchg
(bad)
xchg
cmp
call
in
test
add
das
and
add
aaa
int
and
not
push
and
sbb
loop
or
fistp
outs
mov
and
div
sbb
inc
ror
adc
sti
pop
sub
inc
mov
mov
rol
call
xchg
mov
jl
dec
enter
repz
test
sub
sub
cmp
ss
adc
push
or
push
add
add
inc
scas
outs
mov
mov
mov
adc
dec
xlat
xor
sar
out
add
add
or
movs
mov
mov
dec
xchg
mov
cmp
out
cmps
nop
mov
stc
push
mov
retf
xor
sti
cmp
dec
and
or
mov
imul
cmp
mov
pushf
dec
scas
cmps
inc
pop
dec
stc
cmp
lds
js
lahf
bound
xor
dec
ret
jmp
jecxz
mov
jp
xor
hlt
inc
mov
mov
push
add
cmp
xchg
cwde
fisttp
mov
dec
les
xchg
jo
or
push
fild
jmp
leave
cmp
cdq
test
popa
test
retf
xor
sub
and
or
dec
sar
or
dec
fidivr
cli
dec
test
aad
add
imul
push
ficom
xchg
fwait
ins
fcomp
pop
scas
data16
das
out
and
clc
aaa
pop
int3
push
stos
ja
popa
retf
add
out
pop
(bad)
ins
rcl
mov
jb
popa
enter
call
and
and
or
jge
add
rol
xchg
loopne
fidivr
repz
aam
shr
fnstsw
jmp
cmp
loope
loope
push
(bad)
pop
into
sub
cmp
dec
aam
ja
xchg
mov
fist
push
mov
data16
(bad)
or
call
xchg
xchg
retw
xor
mov
mov
adc
add
pop
cmps
rcl
or
push
into
cmp
loope
shl
jl
and
int3
cmp
sbb
dec
leave
pop
mov
cdq
add
push
shl
or
repz
pop
sti
push
mov
sti
and
and
pop
xor
pop
aam
adc
xor
sbb
inc
scas
lahf
popf
mov
cmp
jle
ds
or
adc
adc
sub
and
pop
stos
xchg
lds
std
pop
fistp
loop
icebp
push
into
xor
test
sub
rol
aaa
adc
inc
mov
pop
mov
ss
jmp
push
out
pop
fisubr
leave
push
dec
rcl
popf
jae
push
mov
jo
and
neg
add
fdivr
sbb
jl
push
les
pop
idiv
loopne
into
mov
jbe
stos
addr16
scas
xchg
mov
lea
inc
scas
pushf
inc
cmps
xchg
je
cld
jg
xchg
jb
jne
add
cmp
xor
pop
shr
icebp
push
mov
cli
cmp
leave
inc
(bad)
shl
sub
iret
push
movs
imul
jb
add
xchg
popa
adc
cmp
inc
mov
push
mov
cmps
test
mov
inc
pop
es
or
out
lahf
fs
cs
mov
xchg
jbe
cmp
push
dec
mov
in
cmp
int3
pop
lea
push
mov
jne
fwait
lea
or
or
or
cmp
adc
fisttp
jmp
mov
mov
mov
jae
push
test
mov
dec
mov
mov
sbb
push
ret
sub
dec
shl
inc
mov
mov
and
inc
ficomp
lahf
imul
push
test
data16
sub
repnz
adc
sahf
xchg
bound
xchg
nop
outs
mov
cmps
inc
adc
loope
shl
push
mov
jnp
cmp
push
or
sub
and
iret
jns
call
test
jbe
xor
ror
push
int3
cmp
sbb
push
add
mov
jmp
pop
mov
sub
and
push
sti
and
into
cmp
dec
mov
mov
dec
mov
je
sub
daa
push
jecxz
push
hlt
push
(bad)
cmp
mov
mov
xchg
jb
and
sub
mov
cld
and
and
push
movs
xchg
jp
fcomp
and
add
lahf
inc
movs
fs
sub
dec
mov
adc
inc
movs
xchg
cmps
pushf
jnp
push
lods
lahf
pusha
scas
xchg
xchg
imul
rol
into
and
not
push
(bad)
and
inc
cmp
ror
sub
push
mov
sbb
pop
movs
outs
sti
add
push
mov
and
shl
jmp
sub
sahf
(bad)
dec
int3
push
ss
push
mov
int3
pop
lods
(bad)
jmp
loop
push
icebp
es
aaa
jae
pop
mov
popf
mov
pop
retf
and
stc
pop
clc
pop
int
lock
and
pop
movs
mov
(bad)
(bad)
xor
mov
ret
mov
cdq
mov
data16
pop
sub
ja
outs
stos
push
psubb
les
cwde
(bad)
les
and
inc
mov
dec
fild
pop
xlat
and
jbe
cdq
dec
int3
pop
lods
dec
push
jmp
fdiv
or
out
out
xchg
out
stos
mov
mov
ja
dec
(bad)
ss
push
mov
fmul
dec
scas
js
add
pop
lods
sahf
xchg
data16
xchg
test
mov
stos
jl
ss
pop
(bad)
adc
push
mov
cli
pop
aam
test
push
mov
mov
sbb
in
adc
adc
push
(bad)
cmp
and
xor
add
sti
xor
xor
xor
in
sub
cmp
loop
call
cmp
push
call
jns
dec
int3
adc
and
stos
inc
mov
xchg
inc
int
cld
pop
sub
pop
mov
dec
mov
movs
xchg
xchg
addr16
add
cdq
popa
mov
out
sbb
das
loope
clc
sub
sbb
das
lock
xlat
xor
add
rol
add
sub
cld
or
cmp
dec
mov
ins
mov
cmp
pop
nop
pushf
mov
xchg
inc
mov
cmp
cmp
retf
mul
pop
push
movs
test
xor
out
loope
mov
int
push
inc
movs
xchg
inc
scas
xchg
xchg
jbe
and
das
sar
mov
ss
dec
iret
mov
push
popa
xlat
ss
inc
push
xor
repnz
hlt
dec
mov
jle
jecxz
(bad)
xor
sub
push
mov
jmp
mov
dec
movs
xchg
mov
call
add
adc
jmp
cmps
mov
inc
adc
in
movs
jne
sub
cmc
and
xor
pop
cmps
js
aas
push
push
ret
dec
and
cmc
aaa
sbb
cli
sub
jmp
cs
cmp
sub
mov
cmc
and
jne
xor
hlt
push
stos
inc
xchg
jns
fidivr
in
aas
jbe
gs
inc
mov
je
xchg
rcl
inc
test
push
inc
aam
add
shr
xor
sbb
adc
psubsw
cwde
lea
dec
fist
jae
and
push
enter
aaa
ret
add
push
test
push
icebp
cmp
jp
dec
or
cmp
push
loopne
mov
mov
test
push
enter
adc
pop
and
push
or
push
stos
outs
stos
cwde
imul
pushf
jae
repz
cmps
inc
mov
xlat
sub
sbb
and
and
dec
les
popf
dec
mov
sub
cmp
add
pop
mov
pusha
stos
xchg
lock
int
hlt
paddsb
xor
and
pop
or
or
shr
cmp
sub
or
pop
mov
jb
aas
push
push
shl
push
mov
lods
sahf
inc
fisttp
add
pop
(bad)
(bad)
pop
(bad)
push
aad
idiv
jae
arpl
sub
push
xor
in
xor
or
pop
nop
inc
xor
ds
jae
popa
mov
aaa
enter
ins
stos
push
test
mov
inc
lock
inc
fadd
push
ret
dec
mov
movs
arpl
jnp
ss
fdiv
adc
and
xor
xor
out
das
push
sti
and
ins
mov
nop
xchg
retf
pop
(bad)
adc
xor
pop
cli
and
retf
xor
sbb
inc
shr
adc
lock
mul
int3
ds
xor
in
cmp
dec
icebp
or
stos
mov
aaa
pop
repnz
shr
sbb
ss
and
lahf
test
das
dec
sti
jae
add
sbb
stos
js
push
lods
mov
fnsave
jmp
mov
(bad)
je
loope
lds
outs
shl
jnp
add
sar
cs
mov
js
popa
mov
or
jmp
(bad)
jp
add
es
cmc
pop
mov
cmps
xchg
fistp
xor
jp
pop
mov
fidiv
pop
pop
xor
pop
repnz
push
sub
pop
sbb
pop
cmp
ror
cmp
repz
scas
jne
dec
mov
ror
xor
or
loope
mov
xchg
popf
jp
test
or
or
sbb
sbb
daa
adc
push
mov
ins
mov
pushf
pusha
aam
mov
std
dec
mov
sub
ss
mov
les
push
retf
pop
cli
push
and
out
push
mov
mov
xchg
jo
mov
sub
pop
mov
add
dec
mov
shl
mov
pusha
lods
sahf
dec
(bad)
jl
ins
mov
or
jno
pushf
xchg
jne
and
xor
ja
inc
mov
(bad)
sbb
movs
pusha
ret
lea
push
inc
lods
cdq
jnp
je
lea
(bad)
js
out
or
and
cmc
and
dec
xlat
push
add
out
sbb
rcl
popf
xchg
arpl
sub
xor
push
mov
ds
push
shr
in
cli
pushf
lahf
dec
lods
xchg
mov
push
ds
enter
ret
and
jp
and
repnz
ins
std
mov
xchg
dec
and
push
pop
push
adc
xchg
(bad)
sub
(bad)
mov
push
lds
test
push
push
ja
outs
cmp
and
test
adc
mov
fidivr
(bad)
int
out
js
std
test
adc
add
popa
sbb
nop
loop
ins
sub
daa
mov
and
cmps
data16
sbb
mov
out
mov
icebp
cwde
retf
pop
push
test
rol
dec
sbb
cmp
aad
xor
or
or
pop
pop
jmp
in
push
inc
add
aam
xchg
std
sahf
jge
dec
sbb
dec
movaps
dec
imul
mov
adc
fisub
icebp
mov
movs
jb
outs
pop
push
push
adc
inc
dec
loopne
rol
hlt
mov
mov
jne
pusha
cmp
fs
rol
inc
xor
inc
jo
sbb
add
push
sbb
pop
xchg
(bad)
mov
mov
movs
(bad)
mov
leave
mov
jle
dec
and
or
mov
xchg
in
lods
push
sbb
addr16
call
fdivr
(bad)
retf
jl
adc
inc
dec
or
jae
inc
add
sub
cmp
lods
leave
push
cmp
dec
push
out
test
add
dec
es
add
mov
xchg
call
inc
out
mov
mov
cwde
cld
lods
dec
sbb
lahf
mov
mov
add
es
xchg
test
mov
push
jb
out
mov
and
call
in
mov
push
add
or
mov
sbb
add
jecxz
inc
add
inc
movs
retf
pop
push
pop
adc
dec
mov
push
dec
mov
rsm
call
xor
(bad)
mov
inc
add
movs
sbb
mov
repnz
cmp
outs
add
mov
cmp
ret
daa
dec
popf
int3
cmp
pop
ins
mov
dec
pop
ja
stc
mov
mov
fstp
js
stc
scas
push
inc
dec
sbb
xor
pushf
pop
aas
ins
adc
push
sbb
xchg
rcr
pop
sub
pop
lods
push
pop
dec
jmp
dec
call
in
mov
jl
retf
lock
and
and
jae
jo
retf
(bad)
cmp
add
cmp
ret
sub
or
xor
inc
adc
rol
jae
bound
call
test
xor
aad
(bad)
sub
or
cwde
out
mov
pop
jecxz
fnstcw
dec
add
push
in
fdivr
popf
fisub
push
hlt
dec
nop
(bad)
and
add
or
inc
sub
das
js
sub
div
arpl
cmp
js
lods
or
stos
clc
mov
out
iret
cmps
adc
ss
mov
xchg
add
sbb
jl
jle
inc
ins
pop
inc
loop
repz
and
jg
pop
imul
cld
nop
xor
mov
imul
push
aaa
dec
sbb
or
dec
add
ins
cmp
(bad)
imul
js
pop
push
aas
pop
pushf
fimul
test
fld
mov
and
and
cmc
mov
leave
mov
adc
push
dec
push
aas
xchg
sbb
pusha
and
call
out
xor
xchg
shr
pop
out
aad
out
ret
and
(bad)
cvtps2pd
xor
idiv
mov
inc
movs
sar
xchg
out
stc
mov
(bad)
adc
add
dec
or
(bad)
mov
test
pop
inc
sbb
in
mov
push
in
cwde
fdiv
fs
jl
mov
sbb
mov
fisub
inc
adc
sbb
addr16
xchg
shr
and
jmp
test
repnz
mov
mov
sbb
push
fnsave
push
push
and
cdq
lock
retf
jecxz
jmp
sbb
sub
pop
bound
nop
cmps
hlt
mov
out
mov
lahf
into
(bad)
out
xchg
cs
inc
sbb
fcomp
nop
lahf
cmps
lock
inc
pop
pop
xchg
adc
push
jmp
adc
sub
cmova
inc
jecxz
fsubr
mov
lock
jl
jp
inc
sub
and
aas
jnp
xor
mov
mov
dec
xchg
(bad)
mov
imul
test
inc
pop
push
ins
sbb
mov
xchg
jmp
push
jmp
fstp
xchg
mov
mov
push
(bad)
mov
stos
ds
imul
jbe
xor
inc
and
and
je
idiv
and
push
jge
xor
or
dec
jmp
xchg
jne
out
cdq
fistp
test
cmps
jae
sbb
jae
in
jp
repz
outs
add
aas
repz
in
sub
sbb
in
jb
rcr
mov
mov
mov
push
push
xchg
xor
jo
fisub
xor
dec
adc
mov
dec
es
and
clc
aad
ror
or
mov
cld
mov
dec
sbb
aaa
ins
adc
jbe
ror
cmps
repnz
jge
aas
outs
sub
xchg
or
jae
or
pop
xor
outs
sbb
hlt
mov
ret
std
xchg
mov
cmps
loop
add
and
mov
mov
out
dec
in
call
dec
cs
jmp
mov
fst
add
push
xor
ror
pusha
adc
call
cld
mov
push
xor
adc
or
and
inc
add
push
push
aas
xchg
repz
jns
pop
mov
adc
mov
in
fmul
dec
imul
idiv
ret
push
retf
xchg
call
push
push
push
and
or
and
adc
jne
or
mov
in
cwde
iret
jle
and
jno
inc
test
push
cmp
je
sbb
(bad)
xchg
rcr
pop
pop
adc
jmp
nop
repz
xchg
rcr
ds
(bad)
and
jnp
pop
js
adc
mov
popa
fisttp
rcl
and
dec
sub
mov
shl
cli
mov
pusha
repnz
(bad)
mov
pop
out
sub
adc
fstp
jb
jle
cmp
mov
jle
mov
adc
sahf
fidiv
push
sub
mov
adc
mov
pop
fsubr
(bad)
inc
add
jecxz
mov
xor
cmp
jle
ins
(bad)
fsubp
xchg
cdq
in
mov
enter
enter
mov
(bad)
les
movs
rcl
daa
push
pop
test
les
bound
(bad)
mov
xchg
dec
or
push
or
pop
xor
dec
add
push
mov
out
ja
push
inc
fnstenv
or
cmp
xchg
sar
xchg
mov
lods
mov
rcr
mov
in
loop
into
aas
inc
je
xor
ins
movs
ror
jl
dec
add
cwde
jb
mov
mov
cmovle
shr
clc
mov
xchg
add
jge
pop
popf
neg
adc
stos
xlat
add
out
jmp
ror
dec
in
out
fbstp
ret
jnp
pop
lahf
mov
inc
and
sub
fimul
pop
fwait
popa
clc
mov
in
(bad)
es
xor
in
sub
arpl
sbb
mov
dec
cmp
or
mov
cmp
jmp
leave
es
pop
or
cmp
and
cmp
mov
cmp
mov
mov
mov
xchg
ror
mov
nop
(bad)
scas
out
xchg
jns
pop
dec
repz
push
jge
jns
xlat
nop
aam
push
jg
mul
jge
sti
xchg
(bad)
inc
aaa
pusha
cmps
mov
adc
mov
ja
cld
jp
pop
and
inc
pusha
cmp
jno
inc
add
je
xchg
ins
cmpps
call
cmp
jbe
(bad)
xchg
(bad)
xchg
ficom
add
sti
mov
ds
sub
push
loope
test
xchg
(bad)
adc
mov
sbb
inc
cmp
jp
jnp
add
dec
inc
stc
scas
jmp
pop
bsr
arpl
or
lahf
mov
in
ss
(bad)
xchg
and
data16
nop
rcl
not
xchg
push
jae
js
cld
and
das
lds
adc
xor
dec
mov
push
fiadd
add
jo
sub
pop
pop
mov
push
adc
repz
or
sub
mov
xchg
rcl
jns
push
inc
push
stos
leave
mov
mov
popf
jno
fisttp
cmps
div
push
add
lods
xchg
into
sbb
jae
ds
xchg
mov
scas
or
push
or
mov
shr
outs
sub
cmp
popf
jge
xchg
ret
mov
mov
xchg
les
or
mov
xchg
adc
cmc
imul
jmp
mov
jp
xor
jne
push
inc
fcomp
shl
loop
pop
jecxz
sti
mov
jmp
not
xchg
mov
adc
mov
xor
rol
add
les
add
pop
or
jecxz
imul
out
stos
push
sub
dec
and
cwde
pop
jmp
int3
cmp
xor
test
inc
cwde
mov
mov
dec
sub
(bad)
mov
push
aas
lds
add
push
and
rcr
stc
and
js
push
dec
xchg
mov
cmp
mov
push
and
mov
add
std
in
dec
push
push
fld
sbb
and
and
mov
dec
xor
add
mov
and
jg
mov
or
scas
stc
mov
push
sbb
push
in
scas
fst
cmp
mov
je
jmp
fstp
mov
sbb
and
jo
hlt
mov
aas
dec
sbb
sbb
pop
adc
mov
loop
adc
(bad)
int3
call
mov
enter
fistp
and
inc
cmp
pop
adc
fstp
lds
push
in
jae
push
aam
add
add
push
cmp
mov
add
cmps
(bad)
xchg
inc
cli
sahf
iret
cmp
dec
out
xlat
push
dec
push
xor
pop
xor
test
imul
mov
or
out
jmp
cdq
jne
ins
cmp
inc
ins
sub
adc
mov
sub
adc
(bad)
lea
lods
movs
fstp
sub
out
mov
mov
js
mov
retf
jne
mov
fs
out
fdiv
outs
adc
fmul
jl
push
pop
or
je
inc
mov
push
aas
pop
scas
cli
addr16
xchg
movs
fiadd
and
push
fwait
repnz
nop
int
sar
push
add
mov
(bad)
xor
and
or
push
push
sub
int
or
imul
les
jge
jp
imul
xor
fist
cs
push
inc
and
popf
aam
scas
je
test
clc
test
dec
in
aam
or
ja
mov
xlat
ins
push
dec
sbb
imul
xor
aad
ret
adc
ficomp
neg
sti
sbb
sbb
mov
add
pushf
nop
in
mov
call
sub
and
xchg
pop
fisttp
and
jl
imul
mov
sub
pusha
in
cmps
out
fadd
neg
sub
das
out
mov
jbe
dec
nop
clc
fwait
lahf
retf
movs
lods
(bad)
mov
sbb
je
xchg
les
or
les
ins
into
mov
xchg
out
sub
or
dec
out
addr16
pop
adc
dec
xor
addr16
pusha
sub
push
fbld
imul
jns
cmps
icebp
inc
fisubr
or
jns
pop
scas
shl
mov
xlat
push
xor
mov
fidivr
stc
test
ins
add
cmp
aas
and
push
or
xchg
(bad)
pop
jle
push
loop
and
or
push
add
jnp
mov
int3
daa
lods
sar
je
out
mov
(bad)
movs
jp
mov
jge
fadd
cmps
dec
sbb
ins
arpl
leave
cdq
dec
inc
adc
xor
cmp
out
sub
outs
or
sub
sar
inc
add
mov
mov
cmp
add
retf
pushf
scas
sahf
shl
push
in
xor
push
pop
or
cmps
fsub
scas
jmp
xchg
shl
test
out
mov
push
or
xor
outs
sub
jo
bound
dec
pop
imul
ret
ss
xchg
mov
ror
inc
and
or
xchg
aad
mov
sbb
cmp
fcomp
jp
push
xor
add
and
ins
and
inc
xor
loop
xor
jno
dec
repnz
adc
xlat
and
outs
dec
iret
mov
xor
and
ins
dec
in
cwde
xor
stos
ds
popa
adc
ins
retf
sbb
sbb
(bad)
frstor
push
ins
fdivr
and
cmovno
xchg
jbe
sar
ss
and
popa
cmp
test
add
ins
cmp
xlat
xchg
fidivr
pusha
fild
pop
loope
dec
and
inc
cmps
in
xchg
arpl
xor
clc
jnp
pop
popa
or
fstp
fwait
imul
mov
fidivr
cli
(bad)
push
or
in
fmul
cmp
and
pop
or
cmp
push
adc
dec
movs
xor
repnz
add
and
push
pusha
cli
mov
push
fiadd
jecxz
cmps
mov
jbe
rcl
aam
pop
sbb
xor
mov
push
outs
xor
cmp
jmp
push
mov
mov
mov
sbb
mov
test
arpl
or
test
jns
icebp
inc
out
sbb
imul
cli
xor
(bad)
movs
push
mov
jmp
mov
imul
or
inc
adc
cmp
and
mov
adc
out
outs
adc
pcmpeqd
jnp
scas
jmp
push
adc
or
sub
test
cmp
icebp
dec
test
mov
lock
and
pop
popa
xor
mov
aam
in
jl
outs
sar
push
hlt
cmp
scas
repz
push
lds
add
sar
sub
fild
imul
mov
cli
xchg
ja
enter
sbb
dec
sub
mov
mov
jne
stos
std
stos
out
out
fst
xor
pop
or
stc
sub
mov
div
push
adc
add
xchg
push
sub
jle
jne
fdivr
repz
sbb
imul
cli
adc
sbb
pop
mov
sar
and
sub
or
xor
mov
mov
cmp
mov
mov
jmp
int
xchg
cli
or
fcmovne
adc
lods
jno
dec
sbb
fisttp
jmp
rcl
push
mov
xor
push
jle
dec
pop
aas
and
dec
rcl
jmp
xchg
hlt
xchg
sbb
iret
mov
(bad)
retf
fcomp
mov
outs
imul
mov
aas
xor
push
mov
mov
dec
sub
pop
aas
js
movs
cmc
sahf
mov
xor
sub
fimul
stos
leave
adc
loop
rcl
add
outs
(bad)
sub
(bad)
fld
jb
xchg
out
mov
nop
push
jmp
push
jb
mov
inc
or
ror
lods
bound
adc
xor
mov
cmps
push
pop
mov
(bad)
pop
and
ins
push
stc
jo
fistp
aaa
pop
push
adc
std
adc
cmp
call
movs
into
es
sahf
mov
aas
or
sub
ja
push
pop
fst
jmp
imul
sub
ins
lods
ret
sahf
mov
sub
xchg
(bad)
es
adc
cs
jmp
rcl
push
or
and
in
cdq
ret
adc
mov
ins
aas
jns
rcr
mov
jae
adc
inc
xor
es
mov
push
int3
push
arpl
xchg
jb
stos
sub
xor
and
xchg
jae
retf
sub
imul
xchg
jmp
jge
rol
lods
popa
cmp
les
pop
push
mov
(bad)
stos
clc
pop
cmp
mov
test
dec
and
push
scas
rcl
call
push
adc
shl
mov
sub
xor
mov
es
jge
xchg
out
ja
xor
and
les
xor
rep
sbb
xchg
fdiv
cmovp
ret
mov
sub
xchg
pop
fisttp
(bad)
jmp
mov
ins
stos
xchg
cli
xchg
stos
in
test
stc
push
add
popa
movs
adc
dec
mov
(bad)
jl
xor
jnp
inc
mov
cs
dec
sub
adc
dec
cmp
and
jnp
jo
lahf
sbb
jmp
ror
mov
popf
retf
dec
sbb
push
cmp
lods
fimul
pop
fst
adc
cmp
inc
mov
mov
pop
enter
sub
lock
pop
push
adc
out
xchg
loopne
cmps
icebp
cmp
adc
mov
out
arpl
mov
fisub
jbe
dec
call
out
mov
sub
outs
cmp
inc
retf
movs
jge
pop
repz
inc
jecxz
(bad)
jmp
lods
imul
inc
add
jns
sbb
xchg
shr
cwde
push
rcr
shl
pop
retf
sub
aaa
jbe
fs
scas
std
mov
push
sub
fild
sub
int3
or
call
inc
push
pop
pop
jp
popf
retf
and
loope
and
mov
or
lahf
scas
cmp
cwde
mov
fldenv
push
pop
fidiv
ror
pop
xor
ins
call
push
lods
xchg
(bad)
mov
sub
inc
aam
pop
data16
mov
test
ins
add
xchg
xchg
jo
adc
pop
or
adc
cmc
sbb
add
shl
out
mov
xor
push
and
imul
adc
or
inc
sti
mov
lods
(bad)
jo
mov
push
and
dec
(bad)
nop
jg
cwde
aam
stos
jb
mov
retf
mov
in
jno
outs
sub
nop
mov
js
test
mov
test
xchg
mov
cdq
inc
adc
mov
out
les
sbb
neg
loopne
fild
fwait
(bad)
scas
or
and
(bad)
cwde
je
jg
xor
jnp
out
xchg
int
jae
sub
int
cmp
idiv
and
sbb
ret
nop
aam
aas
cmc
mov
in
lods
les
call
mov
out
pop
push
adc
sbb
add
sub
lods
or
adc
imul
mov
dec
in
movs
aad
test
jge
div
fcomp
xchg
add
cmp
and
jne
adc
pop
daa
push
dec
sti
xor
jae
rcr
mov
dec
sbb
xchg
add
stos
stc
mov
pop
jmp
adc
pop
add
popa
add
xchg
push
add
jns
mov
repnz
mov
enter
sbb
add
push
mov
movs
push
cmps
mov
cwde
xchg
xchg
xor
dec
ficom
inc
aam
out
pop
mov
pop
mov
xchg
or
fadd
push
sbb
sbb
push
fcomp
fstp
inc
mov
mov
inc
es
outs
rcr
xor
sub
add
cdq
xchg
jno
adc
xor
popf
xchg
jl
outs
into
push
cmc
dec
mov
imul
or
sbb
into
add
adc
and
and
pop
test
mov
pushf
push
mov
inc
(bad)
int3
aas
jmp
int3
test
rcr
arpl
mov
aaa
xor
psubsw
sti
push
movs
inc
mov
and
xor
sbb
push
cmps
ja
xchg
mov
pop
mov
dec
xchg
aam
icebp
aaa
in
std
sub
mov
imul
arpl
pop
fisub
cmp
movs
movs
inc
mov
(bad)
ss
mov
adc
hlt
xor
(bad)
es
cmp
xor
shr
push
rol
pop
mov
fst
pop
cmps
fwait
inc
push
push
ret
xor
pop
lods
push
sti
outs
sub
dec
(bad)
xor
push
cld
pop
scas
(bad)
sub
out
xor
repnz
push
pop
adc
xor
jle
or
stos
pusha
stos
data16
add
icebp
or
retf
sub
lds
cmc
es
pushf
jno
lahf
push
fstp
push
and
adc
cmp
jmp
mov
rcl
jo
jae
push
jmp
cdq
push
mov
xchg
inc
sub
sub
add
inc
test
fwait
mov
pop
mul
loopne
test
dec
and
sub
adc
sti
add
cmp
ja
enter
mov
call
repz
xor
and
add
aaa
ss
push
iret
pop
enter
popf
inc
fild
push
pop
in
retf
repz
mov
inc
mov
mov
jo
add
jne
pop
xor
outs
mov
fist
pop
mov
aad
xchg
mov
mov
mov
xor
sbb
xor
out
cmc
sbb
imul
out
dec
mov
mov
xchg
inc
into
pop
sbb
mov
sbb
out
ss
inc
cld
cs
fisttp
mov
inc
aad
mov
mov
movs
aam
test
sbb
loope
inc
movs
mov
xchg
call
pop
sub
sub
inc
stos
cdq
xchg
je
dec
lds
popa
std
pop
fidivr
in
sub
mov
lahf
je
and
dec
cmp
dec
mov
pop
pminsw
test
inc
(bad)
adc
add
sbb
lods
jno
xor
pop
mov
xchg
jb
test
xor
cmp
imul
mov
mov
inc
aam
push
les
ins
jecxz
stos
jo
pop
mov
xchg
push
sub
jnp
jg
sahf
jle
icebp
cmp
add
daa
add
push
out
mov
shl
imul
mov
fmul
adc
aas
sbb
pop
fmul
stc
push
int3
cmp
scas
and
aad
or
dec
or
mov
xchg
outs
adc
mov
mov
jmp
(bad)
int3
pop
mov
mov
es
ins
sbb
xor
cmp
jns
cmp
ret
dec
mov
dec
mov
stc
cmp
push
into
add
push
ret
ds
test
add
call
dec
adc
das
jmp
imul
jo
and
jmp
jg
dec
enter
cmps
test
call
int
mov
into
add
add
push
cmp
out
les
sbb
push
retf
lds
test
xchg
mov
mov
inc
stos
sahf
jl
ja
bound
jo
add
xor
pop
mov
ins
cld
cmp
dec
mov
mov
cmp
sti
xor
push
mov
xchg
jb
jmp
jmp
lds
xor
div
js
dec
cmps
dec
xchg
ins
test
and
adc
xor
mov
jg
dec
scas
les
ja
xchg
std
cmp
cli
cmp
dec
int
les
xchg
fwait
data16
push
push
shl
dec
xchg
inc
rol
test
pop
test
xor
mov
fnstcw
add
sub
dec
mov
mov
les
cmp
push
fdiv
out
mov
dec
test
xchg
sahf
jge
loope
fist
cwde
inc
mov
mov
cmc
add
mul
adc
and
(bad)
cs
sbb
cmp
cs
dec
aam
fnstcw
in
dec
movs
push
stos
(bad)
jl
pop
xor
loopne
sbb
ss
lods
(bad)
frstor
or
sub
std
cmp
cdq
jb
xor
or
repz
sbb
clc
and
sub
jbe
fwait
jae
pusha
and
inc
cmps
xchg
xchg
push
je
fwait
push
xchg
mov
pop
sbb
cwde
fsubr
push
pop
jmp
jp
fisttp
popf
push
and
pop
(bad)
es
sub
xchg
mov
xchg
(bad)
aad
in
add
enter
rcr
imul
(bad)
daa
sbb
repnz
add
pop
mov
jb
sub
mov
and
repnz
cmp
and
ds
sar
push
aam
cmp
ret
xor
iret
push
mov
popf
push
lods
fstp
cmps
addr16
das
push
in
mov
mov
sub
out
mov
jle
jg
rcl
rol
xor
or
xchg
js
dec
test
add
lea
xchg
sub
and
pop
sar
adc
and
push
ret
outs
mov
cli
pop
xlat
xor
push
or
add
pop
adc
mov
out
sti
sub
add
cmp
jbe
inc
mov
dec
movs
inc
mov
iret
pop
sti
mov
fnstenv
ss
ds
and
jae
xchg
xchg
sahf
addr16
dec
mov
jbe
push
mov
xor
push
sbb
lods
mov
xchg
outs
fst
mov
sbb
or
push
retf
push
rol
pop
repz
inc
cmps
jb
sub
pop
stos
mov
fidiv
jecxz
lods
xchg
mov
sub
(bad)
cmp
sub
es
icebp
push
shl
adc
mov
lods
mov
or
pop
cmp
cmp
adc
jnp
inc
mov
pop
lods
inc
xor
in
sub
sub
inc
int
lods
dec
xchg
pusha
fst
jns
jo
cvtps2pi
pop
mov
leave
sub
arpl
sub
pop
test
push
mov
imul
hlt
dec
mov
push
stos
jae
jp
pop
mov
pop
(bad)
xor
push
mov
test
popf
popf
inc
shr
es
push
push
xor
pop
fisttp
out
or
outs
mov
shl
daa
les
in
add
jecxz
ret
aaa
sbb
ins
int3
and
in
push
fdivr
jecxz
mov
pop
aam
jmp
sub
addr16
fcomp
jge
push
int3
das
out
push
test
cmps
test
lods
mov
pop
mov
scas
gs
cmps
mov
dec
stos
popa
mov
xchg
inc
cmps
jo
inc
pop
loope
mov
lea
test
arpl
or
add
pop
mov
cmp
sbb
mov
cs
xor
push
rcr
jg
ficom
and
stos
mov
mov
das
add
repz
cmp
xchg
arpl
cmp
push
stos
arpl
arpl
iret
pop
or
mov
hlt
xor
fimul
inc
aam
ss
(bad)
fadd
pop
in
or
mov
lahf
lds
dec
leave
pop
(bad)
pop
int3
mov
retf
dec
test
jns
(bad)
in
and
mov
push
sbb
inc
cmps
mov
jno
cmp
jmp
and
pop
lock
stos
ins
mov
ds
adc
enter
je
popf
mov
(bad)
cmp
push
cmps
inc
shl
rcl
cmp
push
test
mov
or
sub
arpl
pop
aam
mov
lahf
inc
fisttp
adc
sub
rcr
pop
scas
ins
xchg
in
fidiv
add
repz
ret
jge
scas
std
jne
push
mov
sub
pop
sbb
xor
add
out
and
jnp
scas
call
nop
jno
xor
pop
icebp
cmp
ret
stos
jg
dec
inc
jl
sahf
xchg
outs
mov
stos
mov
scas
cmp
sbb
adc
(bad)
cmp
dec
int
stos
addr16
ja
aaa
sbb
and
mov
imul
movs
xchg
xchg
ja
ins
lods
jb
popf
fistp
xor
push
lods
cdq
jge
aas
bndstx
out
sub
or
dec
into
sub
jg
js
add
cmps
arpl
pop
mov
clc
cmp
push
jmp
out
(bad)
sub
cmp
push
mov
ins
or
push
hlt
jge
je
mov
push
mov
cs
inc
(bad)
push
mov
add
daa
loope
out
imul
adc
inc
lods
(bad)
ins
lds
inc
stos
xchg
dec
fidiv
out
sbb
stos
xchg
inc
mov
mov
pop
mov
mov
mov
dec
sub
int
push
push
int
push
cld
sub
lea
pusha
shl
enter
fisttp
push
(bad)
jae
(bad)
call
xor
int3
das
sbb
addr16
rcl
jge
dec
stos
arpl
test
lahf
bound
stos
push
test
and
sar
ss
pop
(bad)
push
(bad)
and
pop
sbb
cwde
popf
dec
mov
pop
mov
xchg
ja
popa
adc
add
out
add
push
mov
arpl
xor
clc
push
mov
test
xchg
mov
ss
push
call
jge
popa
mov
dec
test
or
add
push
not
push
sbb
xor
and
push
test
pop
xor
or
sub
ja
and
lea
mov
jb
dec
retf
test
inc
mov
dec
mov
aam
mov
dec
mov
jnp
add
cmp
fwait
movs
test
data16
xchg
dec
fimul
ud0
sahf
xchg
jo
lods
nop
inc
movs
arpl
push
loope
shr
inc
fisttp
pop
repnz
(bad)
and
or
test
loope
push
rcr
xor
xor
cmp
push
cmc
dec
push
in
pop
fstp
repnz
enter
mov
add
cmp
jne
call
lock
inc
fnstcw
repnz
mov
pop
scas
inc
movs
xchg
shl
and
or
call
push
test
xor
push
and
sbb
and
adc
ret
pop
test
daa
add
and
inc
ret
mov
jg
xchg
inc
test
jle
xchg
xchg
xchg
imul
aas
out
sar
cld
and
push
rol
imul
push
test
push
adc
repnz
xor
hlt
push
fisubr
int
inc
int3
sub
sub
add
mov
mov
jno
pop
movs
cwde
fwait
inc
add
jecxz
(bad)
dec
mov
mov
mov
in
into
push
leave
xor
dec
fnsave
cmc
push
mov
or
and
jmp
dec
mov
rcr
lahf
fld
or
stos
jae
inc
mov
aam
adc
pop
(bad)
xor
test
lods
call
push
test
mov
sahf
jbe
mov
jmp
in
pop
fnstcw
lock
cmp
sub
ds
xor
dec
xor
and
mov
ja
xchg
imul
imul
repnz
stos
xchg
gs
or
sub
movs
xchg
imul
shr
ret
(bad)
push
lods
ins
mov
adc
retf
hlt
and
push
fcomp
lea
dec
scas
mov
or
push
out
sbb
repnz
mov
outs
or
pop
mov
dec
mov
jns
cdq
imul
cmp
cld
and
inc
les
or
pop
fimul
cdq
fsub
sbb
(bad)
push
cmp
mov
(bad)
push
icebp
pop
mov
(bad)
inc
mov
and
add
hlt
adc
or
sub
(bad)
movnti
sub
inc
fistp
and
jmp
into
dec
nop
jnp
jns
cmp
std
sub
dec
sbb
jmp
sbb
xor
push
(bad)
sub
jae
xchg
jne
loopne
loop
std
jne
pusha
retf
pop
and
outs
sbb
cmp
sbb
ds
ret
(bad)
cmp
and
xchg
mov
push
int3
add
push
fnstsw
out
pop
fbld
icebp
add
push
mov
adc
cmp
rol
enter
and
cmp
in
push
mov
xchg
ficomp
sub
pop
mov
mov
cdq
nop
jb
and
pop
mov
shr
adc
loope
or
push
and
out
sub
dec
mov
fmul
add
mov
and
and
cli
xor
pop
dec
(bad)
out
dec
mov
xlat
aas
std
cmp
and
pop
mov
shr
sub
(bad)
cmp
in
out
and
cmc
xor
inc
test
imul
jmp
lods
inc
test
aas
sbb
cmp
jmp
mov
inc
mov
xor
pop
cmps
bound
imul
out
pop
mov
jg
mov
movs
xchg
fist
imul
test
std
sub
and
add
mov
sub
adc
mov
sub
popf
cwde
ins
rcr
fwait
gs
imul
(bad)
ja
xor
data16
repnz
stos
xchg
inc
sub
(bad)
pop
lods
arpl
add
xor
pop
int
in
mov
lahf
cdq
jbe
xchg
mov
stos
mov
ficom
mov
pop
out
or
push
mov
xchg
mov
pop
adc
fsub
adc
push
shl
push
movs
test
xchg
jbe
xchg
dec
leave
pop
movs
imul
dec
scas
sub
pop
sbb
cli
jg
push
retf
mov
dec
shr
inc
mov
pop
lods
call
ins
stos
push
mov
or
mov
jl
aaa
and
loope
int
in
push
int3
push
in
mov
popf
push
stos
test
inc
cmp
jmp
mov
into
sub
push
mov
scas
jg
xchg
aam
retf
cmp
(bad)
push
mov
fdiv
add
dec
mov
(bad)
push
mov
call
push
sub
add
xor
jecxz
gs
outs
stos
ins
mov
sub
or
popf
lahf
inc
stos
addr16
retf
and
and
rcr
xchg
popf
xchg
inc
cmp
sub
jmp
mov
xchg
pusha
stc
js
and
push
aas
icebp
sub
fst
sub
sbb
pop
mov
enter
cmp
add
pop
fcomp
cs
inc
fnstenv
ret
cs
sub
xchg
nop
mov
or
mov
mov
dec
xor
fidiv
repz
or
mov
iret
push
pop
sbb
sbb
mov
xchg
popf
jp
test
or
add
sub
xor
sub
out
cmp
pop
sbb
ja
sub
push
mov
jnp
or
lock
adc
test
jo
push
test
pop
mov
sub
inc
mov
jbe
aaa
or
sbb
loopne
mov
mov
movs
test
push
shl
in
dec
mov
cdq
xchg
xchg
xchg
xchg
outs
ficomp
sub
ret
ss
in
cld
jno
pop
fnstenv
inc
dec
ins
stos
gs
ins
mov
pushf
mov
adc
jno
xor
in
cmp
pop
test
mov
cmp
sti
pop
enter
inc
mov
(bad)
cmp
out
jmp
(bad)
fist
xchg
(bad)
js
pop
retf
cmp
clc
je
and
dec
movs
xchg
xchg
jns
mov
sbb
clc
das
sbb
ja
inc
stos
jnp
dec
mov
mov
jns
and
adc
das
lock
xlat
dec
lods
jnp
pop
adc
and
dec
mov
push
cmp
dec
mov
xchg
push
shr
loopne
lods
mov
fldenv
sbb
daa
sub
xor
retf
xor
aas
adc
dec
mov
xchg
data16
push
or
in
sub
(bad)
ss
mov
xlat
jb
pop
pop
or
das
xor
pop
enter
cmp
mov
repz
out
push
movs
sbb
push
scas
fiadd
pop
ret
jle
jb
xchg
dec
lods
dec
movs
popf
inc
or
sub
das
push
imul
cmp
push
mov
scas
xchg
cwde
outs
fisttp
ret
cmp
pop
mov
scas
pop
sbb
sub
xor
int
fist
mov
xor
pop
movs
pushf
xchg
jne
cmp
dec
ficom
les
sti
mov
mov
inc
int3
cmp
aam
pop
or
xor
lock
pop
sub
sti
sub
inc
mov
mov
shl
pop
test
es
jmp
mov
(bad)
push
jmp
pop
mov
sahf
jge
add
je
sub
sub
jmp
outs
lods
jne
imul
push
jae
or
jmp
xor
jmp
pop
aad
rol
fstp
push
mov
push
scas
jle
das
pop
int
inc
test
xchg
xchg
inc
mov
test
mov
dec
scas
addr16
ins
movs
jne
xchg
mov
clc
and
call
mov
js
mov
xor
adc
stc
xor
jno
xchg
nop
ja
jle
popf
mov
and
or
sub
cmp
and
ret
pop
rol
jp
push
not
or
dec
scas
arpl
add
mov
call
out
sub
in
add
add
jmp
mov
and
adc
xor
ds
push
fnstcw
lock
pop
imul
add
and
mov
xor
or
push
sbb
into
inc
fild
dec
or
lds
sbb
cmc
xor
adc
ss
adc
bswap
sub
jo
fwait
cmps
fisttp
repz
sbb
sub
or
dec
cmps
inc
mov
pop
mov
mov
sub
sbb
or
adc
pop
mov
xchg
fs
lock
and
push
or
and
or
adc
or
sub
push
movs
inc
test
cld
push
mov
mov
shr
pop
dec
lds
sar
xchg
cmp
jnp
imul
push
shl
rcr
cmp
jg
xchg
sahf
(bad)
aad
movs
xchg
imul
sti
or
xchg
dec
fistp
mov
aaa
popa
call
leave
dec
lods
imul
cmp
cs
pop
lds
in
sub
mov
xchg
inc
mov
xchg
inc
mov
fidiv
out
call
push
mov
mov
lods
outs
pop
repz
mov
bound
leave
sub
sbb
and
rcr
addr16
test
dec
sub
mov
rcr
fstp
ds
in
ficomp
inc
cmps
cwde
xchg
dec
retf
xor
jge
test
es
xchg
mov
inc
fild
rcl
arpl
mov
imul
pusha
(bad)
loope
adc
mov
xlat
add
pop
shl
loopne
shl
sub
xor
adc
cmp
daa
sub
push
retf
mov
cmps
dec
clc
dec
lods
dec
mov
mov
mov
retf
or
push
mov
and
scas
outs
xchg
pusha
fisubr
icebp
add
sbb
ror
adc
clc
adc
cmp
iret
xchg
stos
mov
xor
push
rcl
dec
call
pusha
fstp
iret
or
sub
repz
sub
adc
cmp
repz
iret
ss
pop
mov
and
push
aad
int3
sub
dec
scas
ja
dec
lods
lahf
jl
jo
push
mov
xchg
jnp
call
push
(bad)
dec
or
xlat
pop
sti
inc
ror
jbe
pop
add
mov
enter
rcr
movs
push
mov
xchg
mov
stos
inc
mov
mov
add
in
cmp
and
cmps
pop
leave
rcr
fist
mov
xchg
adc
ins
sti
or
in
add
gs
hlt
repnz
xor
icebp
xor
rcl
add
clc
mov
retf
or
(bad)
xor
inc
sbb
pop
lea
adc
cmp
xor
jge
cmp
imul
fmul
imul
ins
mov
mov
enter
or
add
daa
adc
mov
jns
mov
clc
fisttp
sbb
das
push
pop
cmp
inc
inc
add
dec
pop
test
mov
mov
pop
test
sub
aas
xchg
test
int
imul
xchg
movs
xor
add
cmp
mov
mov
in
icebp
sub
nop
stos
mov
sar
mov
mov
sub
popf
jmp
inc
or
out
daa
push
cmp
add
adc
pushf
pop
cmp
xor
or
dec
sti
out
fild
popa
pop
inc
repz
pop
push
sbb
xchg
adc
inc
rol
into
bound
retf
mov
adc
adc
call
adc
add
ret
or
jecxz
repnz
xor
cmp
jne
xchg
cwde
sub
jecxz
mov
gs
fs
cmps
and
mov
mov
and
bound
jae
outs
(bad)
aam
cmps
add
mov
enter
mov
ins
push
ror
sub
and
xor
cmp
cld
xor
cld
les
xor
(bad)
retf
imul
add
stos
xor
outs
ja
icebp
or
adc
jnp
add
ficomp
rcl
mov
lods
push
fsub
jle
sahf
sub
jbe
les
movs
outs
pop
cmp
push
sub
mov
xchg
push
ja
adc
cmps
and
sti
cli
jb
pop
mov
into
lock
cmp
imul
push
pushf
ins
fdivrp
sub
push
mov
data16
jo
mov
aam
jb
xchg
pop
adc
cmp
pop
cmps
imul
test
nop
mov
sbb
rcr
ins
ret
sub
xchg
outs
pusha
jge
pop
data16
iret
js
mov
mov
fbstp
adc
mov
mov
jns
out
mov
lock
mov
dec
inc
ins
pop
dec
stc
pop
mov
ins
cmps
rcl
mov
ins
repnz
adc
std
xor
cmp
cmc
or
ds
mov
or
mov
cmps
and
inc
adc
pop
je
sbb
mov
jl
jae
std
(bad)
and
ins
add
ds
mov
mov
push
test
call
in
mov
push
out
das
fisubr
aad
shr
push
add
pusha
dec
mov
or
imul
daa
cmp
adc
jb
lahf
and
xor
dec
shr
sub
adc
stc
lds
sbb
and
mov
adc
adc
sub
add
lds
jne
(bad)
mov
clc
add
fadd
mov
out
fstp
lods
mov
gs
(bad)
int
aad
mov
fstp
mov
rcr
jp
in
push
dec
mov
test
cmc
sar
fdivr
add
dec
mov
ret
aas
push
repz
stos
js
fwait
outs
aas
jmp
lds
test
lea
ins
lods
or
sti
out
inc
lahf
pushf
or
jmp
sub
adc
push
lahf
fwait
imul
icebp
rol
inc
mov
mov
(bad)
fild
in
mov
pop
(bad)
and
push
iret
pop
and
pusha
ret
ret
dec
and
call
out
(bad)
aam
xor
call
xor
fs
fidiv
jbe
movs
pop
jnp
mov
push
movs
out
(bad)
int3
stc
adc
pop
mov
xchg
rol
js
in
mov
call
daa
fistp
rcl
push
ror
repnz
or
rdmsr
push
mov
push
scas
jo
inc
pop
ret
xor
cmps
std
cld
movs
ins
aas
adc
cmps
aas
xor
dec
adc
hlt
jp
inc
das
mov
adc
cmp
shl
push
lock
sbb
inc
test
stos
stc
mov
int3
loope
fisttp
stc
jnp
lds
aam
mov
and
xchg
icebp
mov
mov
test
fst
or
inc
das
imul
jmp
(bad)
sar
or
cmp
jp
dec
jge
pop
movs
bndstx
pop
pop
test
inc
cli
mov
dec
sbb
mov
inc
dec
int
sti
push
mov
adc
stos
push
sbb
jmp
xor
lods
mov
dec
xchg
ror
jg
into
add
xchg
jb
fs
xchg
outs
ins
cmps
sti
cmp
or
inc
cmp
test
stc
scas
movs
aas
mov
std
and
dec
jle
jmp
mov
sahf
jle
mov
cmc
lock
or
lods
sub
sti
jbe
jp
and
cmp
sbb
sbb
into
stos
add
mov
pop
mov
pop
xchg
out
bound
dec
std
cmp
xor
pusha
daa
movs
sub
mov
into
je
xchg
cdq
fnsave
daa
sub
adc
out
cmp
(bad)
xchg
pop
push
jmp
movs
lods
xchg
jns
dec
adc
das
ins
mul
mov
add
sbb
imul
(bad)
inc
(bad)
adc
mov
stos
sbb
(bad)
(bad)
loopne
mov
fstp
sub
jmp
push
jbe
out
mov
xchg
and
adc
jnp
mov
call
test
rcr
lahf
dec
scas
and
aam
(bad)
test
shl
mov
lods
jg
popa
and
in
aam
in
push
mov
lea
pushf
push
(bad)
fild
sub
dec
iret
shl
pop
shl
out
imul
sbb
jmp
cmps
into
test
mov
mov
push
cmps
comiss
push
sbb
icebp
add
xor
aas
push
imul
mov
in
or
lea
imul
rcl
mov
push
clc
stos
call
rol
inc
imul
xor
imul
(bad)
sbb
mov
ss
push
xchg
sub
sbb
and
out
and
and
loopne
xor
xchg
daa
and
cmp
icebp
inc
sub
pop
outs
dec
std
bnd
push
cmp
in
gs
mov
lock
push
test
xchg
xor
cmp
in
pop
stc
unpckhps
sub
mov
ins
lods
push
fidivr
loope
retf
adc
xor
ficom
int
les
sahf
loope
leave
pop
js
ror
xchg
fisttp
ins
xor
mov
pop
xlat
ret
xchg
int3
mov
dec
push
xchg
in
jno
cmp
dec
pop
push
in
retf
mov
xchg
dec
adc
lods
out
adc
dec
mov
add
xchg
shr
mov
or
ret
fs
fisubr
sar
or
jno
mov
xchg
sbb
dec
push
push
xor
inc
(bad)
hlt
add
jle
ret
movs
cmp
pop
mov
cmp
push
dec
(bad)
sub
call
xchg
xchg
das
cmc
xchg
xor
ficomp
movs
mov
fisub
sub
test
jecxz
shl
jae
repnz
jbe
data16
stos
add
cwde
fdivrp
cmps
xor
repz
mov
in
mov
sbb
aaa
sahf
frstor
outs
inc
mov
stos
mov
fldl2e
in
add
pop
mov
sub
in
shl
cmp
call
sub
mov
jo
ret
sub
jge
sub
stos
ins
xor
push
xchg
out
cmp
adc
imul
push
into
dec
loop
nop
mov
cmp
mov
mov
adc
cmp
adc
loopne
ret
dec
jl
cmp
jb
inc
cmp
or
and
pop
imul
inc
and
mov
sub
test
imul
nop
jns
in
inc
fld
xor
(bad)
xlat
push
call
cmp
inc
dec
dec
pop
scas
nop
cmc
ins
jb
dec
adc
and
ins
ficomp
(bad)
retf
je
xor
xchg
lahf
sub
mov
cmp
push
push
rol
xor
jb
aas
push
(bad)
fdiv
daa
push
loope
dec
test
adc
sbb
ret
jno
pop
pop
inc
lods
cwde
test
adc
test
cs
pop
fcom
or
(bad)
and
mov
icebp
test
adc
mov
push
pop
lahf
xor
add
mov
sub
mov
in
and
cmp
(bad)
jecxz
aam
xchg
pushf
jmp
sub
stos
or
dec
xchg
xchg
pop
fdivr
scas
js
and
fadd
out
es
sbb
jecxz
pop
or
icebp
xchg
cli
xchg
cmps
pop
jl
xchg
ficom
cs
xchg
das
inc
xadd
repz
je
xchg
aad
mov
clc
cmps
push
or
scas
push
push
mov
aad
add
sbb
xchg
imul
mov
dec
push
hlt
js
pusha
dec
arpl
add
sti
dec
xor
mov
jp
imul
(bad)
ss
cwde
and
mov
dec
pop
and
pop
mov
mov
mov
xchg
xor
dec
mov
xlat
test
stc
pop
sahf
or
jp
xchg
ret
add
sub
xor
sbb
pop
test
xchg
sub
ja
or
sahf
lods
rcl
push
rcl
sbb
fsub
loop
push
adc
scas
push
aad
dec
aas
fmul
and
(bad)
adc
les
test
int
cli
push
jne
mov
ret
sbb
mov
sub
adc
jmp
sbb
jg
int
mov
jmp
xchg
retf
outs
sti
fwait
inc
jbe
jbe
int
fcom
retf
movs
jle
aaa
fnsave
pop
xchg
bound
ficom
inc
loopne
mov
inc
mov
js
mov
cmp
arpl
sub
out
int
pop
inc
xor
and
cmps
cmps
std
sbb
cmps
das
mov
inc
bound
sbb
lods
sub
mov
push
jle
jle
sub
mov
adc
and
test
adc
mov
cli
fst
(bad)
jno
movs
pop
pop
mov
jecxz
push
cli
bound
cmp
xor
mov
xor
add
data16
pop
jo
or
popa
jmp
xor
mul
fistp
pop
nop
fcom
bsf
popf
ret
clc
push
dec
lds
mov
push
mov
out
adc
jb
and
gs
leave
add
jns
mov
sbb
mov
inc
(bad)
ret
add
cmp
mov
cmc
jbe
dec
xor
xor
scas
cli
adc
movs
movs
outs
ja
or
sub
pop
je
rcl
lea
push
adc
fmul
mov
out
dec
xchg
push
jle
test
lock
sbb
mov
call
enter
inc
inc
or
jno
rcl
dec
adc
scas
mov
jae
mov
sbb
mov
inc
or
cmp
aas
into
sbb
sbb
xor
cdq
cli
cs
jecxz
sub
pop
or
hlt
and
sbb
shr
xor
push
jae
xor
ja
sti
push
pop
aad
dec
addr16
in
inc
lds
fwait
in
sar
ins
pusha
mov
sar
or
push
sub
fs
jns
imul
xor
fwait
sub
xchg
push
mov
add
pop
lahf
ficom
mov
test
mov
mov
pop
stos
cmp
fidivr
mov
lahf
out
sub
popf
sub
sub
loope
push
xor
shl
xor
addr16
mov
sahf
popa
fild
push
cli
add
add
xor
iret
push
js
xchg
ja
std
imul
arpl
push
loopne
ret
sbb
iret
imul
mov
hlt
leave
xchg
out
or
and
cmps
or
pop
and
xor
dec
repz
jmp
frndint
adc
aaa
test
jmp
sub
xor
mov
addr16
inc
pop
pop
xor
or
ror
adc
in
cli
mov
in
cld
cmp
test
dec
xchg
xlat
and
movs
je
mov
daa
in
push
aaa
pop
lock
mov
inc
aaa
jmp
mov
ret
sbb
vphaddbd
das
fcom
cmps
cmc
xchg
adc
xchg
jne
cli
popf
dec
loope
rcr
ficom
in
lea
out
sub
mov
jl
sub
or
push
mov
inc
xchg
mov
adc
ror
aas
sbb
push
mov
mov
fidiv
iret
xor
rol
pop
adc
inc
cmp
xor
and
jns
bound
(bad)
or
imul
adc
das
pop
lds
dec
stos
add
scas
or
stos
pop
stos
mov
mov
cmc
pop
jae
mov
xchg
xor
bound
xchg
xchg
xchg
add
lods
mov
xlat
fsub
or
cmp
call
and
ror
mov
dec
mov
cmc
clc
pop
mov
jmp
into
in
ds
inc
mov
fistp
pop
sbb
mov
mov
and
sub
xor
add
jp
sbb
stos
push
jae
mov
sbb
dec
or
inc
(bad)
cmps
inc
outs
pusha
stos
sub
jle
bound
add
les
inc
(bad)
fmulp
int
xchg
dec
jg
sub
rol
adc
int
shr
cmp
fdivp
out
push
xchg
xor
add
lods
stos
jnp
xchg
outs
cmp
mov
stc
test
mov
inc
mov
shl
(bad)
dec
push
ja
push
push
lds
sbb
add
pop
add
jmp
lods
jne
leave
and
add
push
rol
mov
mov
mov
or
xchg
mov
add
hlt
(bad)
adc
mov
inc
mov
mov
pop
dec
push
jp
into
ja
imul
mov
push
out
ret
adc
les
sbb
gs
repnz
adc
test
xlat
xlat
jno
cmp
mov
popa
ja
xchg
inc
push
add
or
gs
pop
inc
clc
test
push
aam
mov
pop
aam
sbb
repnz
pop
(bad)
xor
push
sar
outs
sbb
setae
pop
fwait
mov
xor
xchg
fist
pop
cmp
push
je
(bad)
imul
arpl
shl
(bad)
mov
(bad)
lea
inc
and
dec
stc
mov
mov
pop
sub
loope
das
jp
bound
jae
adc
das
adc
pop
cld
inc
retf
jae
adc
xchg
xor
inc
fisubr
inc
xchg
leave
push
xor
(bad)
out
xchg
mov
in
retf
inc
jp
cmp
add
(bad)
mov
mov
iret
mov
pop
pop
outs
mov
sub
les
lods
pop
xor
push
stc
popf
ds
push
clc
dec
dec
fmul
popa
xor
pop
mov
jae
add
lea
fmul
lea
call
cs
adc
fdivr
(bad)
dec
sbb
cwde
mov
jmp
in
xchg
cmp
push
outs
fsub
movs
sub
push
push
push
mov
pop
and
jne
(bad)
imul
jp
retf
jne
sub
jp
pushf
mov
mov
in
into
icebp
mov
cmc
sbb
outs
or
daa
cmc
sub
xchg
stc
retf
mov
xchg
sbb
adc
jmp
add
enter
pop
int3
pop
int3
add
pop
fisttp
push
adc
(bad)
aam
clc
addr16
aas
add
fisttp
mov
add
adc
icebp
sub
push
lar
shr
call
cmp
add
and
clc
iret
adc
call
xchg
and
sbb
into
push
iret
inc
push
mov
lods
xchg
icebp
call
aad
shr
mul
repz
(bad)
mov
(bad)
sbb
aad
mov
sbb
pop
or
ins
adc
js
into
dec
jmp
adc
pusha
dec
adc
mov
push
retf
adc
jecxz
(bad)
sub
mov
adc
mov
sub
jle
in
adc
pop
test
dec
jge
jmp
fidivr
in
or
imul
push
and
push
fldcw
mov
inc
push
call
cmp
and
daa
icebp
outs
inc
clc
icebp
dec
mov
int
test
lea
cmps
jmp
fnstsw
out
or
js
mov
mov
scas
pop
and
not
pop
stos
mov
jo
pusha
stc
lahf
imul
popf
icebp
aas
jbe
xchg
cli
outs
fdiv
retf
and
dec
xchg
lock
pop
js
in
sar
xor
in
mov
and
fnsave
dec
cwde
pop
push
cmps
jno
jbe
std
or
mov
aad
pop
loopne
fs
lahf
jb
pop
stos
jmp
sbb
pop
mov
cmps
mov
pop
shl
push
cmp
inc
lahf
adc
adc
push
(bad)
sub
sub
adc
push
or
adc
sti
in
inc
and
jge
and
fimul
cmp
sbb
fild
sub
inc
inc
pop
cdq
ret
or
or
inc
pop
mov
inc
jne
add
xor
sahf
test
adc
or
sbb
in
jp
cmp
cmp
(bad)
loope
jb
add
mov
or
(bad)
cmp
and
(bad)
imul
and
mov
lea
cmp
jns
add
fucomip
or
push
cmps
popa
and
rcl
jne
out
sahf
outs
bnd
in
imul
ss
sbb
dec
inc
dec
pop
sahf
add
in
dec
xor
in
mul
sbb
push
push
mov
loopne
xchg
cmp
ja
add
xchg
std
push
ret
adc
cmps
inc
sub
fiadd
pusha
scas
ror
adc
aad
call
pop
and
imul
cmp
and
lahf
dec
or
test
fcmovnbe
retf
movs
dec
cld
adc
idiv
xor
cdq
lds
(bad)
cli
repz
mov
push
pop
jb
dec
pop
sbb
pusha
sub
sahf
cld
mov
cmps
sub
pushf
push
ror
fsubr
sub
arpl
jmp
add
fbld
and
ret
pop
pop
fistp
mov
sbb
inc
pop
jp
mov
adc
scas
xor
shr
out
sbb
enter
mov
inc
dec
xchg
aam
inc
pop
sub
popa
pop
push
sti
mov
sti
pop
dec
sbb
jbe
sbb
push
call
or
mov
clc
fs
or
popf
dec
sbb
int
add
push
shr
mov
call
mov
repz
adc
cmps
hlt
cmp
pop
imul
push
adc
add
xchg
push
add
lea
mov
dec
loopne
clc
push
das
sar
xchg
into
je
lock
or
cli
jb
sbb
inc
lock
aaa
je
and
retf
cli
and
push
loop
inc
in
adc
dec
adc
cmp
sar
xchg
js
sub
dec
retf
mov
cmp
or
dec
ja
(bad)
(bad)
push
dec
es
jp
js
pop
sub
pop
es
cld
push
mov
mov
test
mov
out
mov
xchg
xchg
je
jo
les
or
and
leave
fisub
inc
mov
or
add
mov
pusha
ins
mov
clc
aaa
dec
les
mov
in
adc
cwde
arpl
mov
xor
cli
inc
test
cmp
ds
stos
test
icebp
xchg
imul
dec
je
and
outs
out
mov
fidivr
nop
bound
sbb
mov
lea
and
in
jmp
test
sbb
stos
xor
gs
inc
leave
xchg
cli
daa
pop
add
adc
adc
xor
push
into
ror
daa
cmp
inc
outs
movs
push
int
lahf
test
bound
add
mov
loope
scas
pushf
iret
xchg
jecxz
or
mov
les
outs
inc
shl
into
pusha
xchg
bound
mov
jg
or
xchg
mov
cmp
pop
repz
mov
mov
mov
mov
fs
push
or
cmp
mov
sbb
adc
adc
adc
adc
pop
add
lahf
div
pop
ins
mov
sub
nop
push
push
mov
jo
out
test
inc
adc
fidiv
mov
test
mov
fild
adc
sar
push
pop
dec
mov
xor
shl
jnp
mov
stos
mov
stos
mov
cmp
mov
sub
mov
stos
sub
xor
retf
adc
out
sbb
pop
adc
jg
lods
jl
fwait
cdq
hlt
ins
inc
ret
push
sub
aad
ret
jnp
je
xor
inc
in
xor
(bad)
clc
xor
inc
mov
xchg
daa
xlat
xor
jb
jp
mov
mov
icebp
mov
adc
dec
jmp
add
push
jp
stc
cmp
in
gs
je
or
and
cmps
repnz
sahf
lods
(bad)
in
inc
adc
test
cmps
or
ins
pop
(bad)
xlat
jle
lods
mov
loope
imul
mov
std
dec
xchg
enter
push
pop
leave
fisubr
rol
ds
aam
aad
mov
push
(bad)
shr
jbe
and
(bad)
cs
outs
dec
push
cmp
cmp
adc
push
ret
sub
popa
jle
fs
mov
push
mov
mul
cwde
repnz
or
jns
stos
retf
and
std
cs
les
in
mov
jecxz
add
js
dec
push
fnsave
inc
or
clc
push
cwde
(bad)
pop
test
or
add
sub
jg
cmp
mov
jno
xchg
and
add
xchg
(bad)
cmp
jg
adc
xchg
test
add
or
neg
jnp
xchg
or
jge
scas
aam
jmp
inc
sub
push
mov
mov
(bad)
inc
rol
popa
inc
test
jb
vmread
jecxz
fwait
ja
sbb
or
add
jmp
adc
lods
cmp
dec
jge
in
mov
sti
sbb
popf
das
leave
jns
xor
test
stc
jbe
inc
pop
dec
dec
xchg
call
dec
jns
mov
sub
ins
mov
retf
push
fwait
jb
mov
imul
ins
jp
push
cwde
test
cmp
cdq
adc
xor
dec
test
stos
cwde
push
rol
add
xlat
mov
or
and
shr
out
pop
hlt
push
div
jae
rcl
xchg
jg
in
clc
arpl
clc
mov
and
int
and
or
mov
retf
loop
and
into
jb
or
pop
(bad)
fwait
scas
ror
lea
fisub
mov
popf
jmp
ror
(bad)
das
or
cmp
adc
cmps
push
push
mov
mov
fidivr
aam
xchg
popa
lahf
pusha
jmp
les
xor
mov
xchg
push
pop
cmp
xchg
xor
push
in
xchg
mov
mov
dec
xor
popf
loop
xchg
adc
(bad)
sbb
cwde
out
sub
pushf
fcom
mov
xchg
(bad)
jmp
sub
add
(bad)
rol
cwde
add
lahf
nop
push
in
mov
push
mov
mov
fbld
stos
out
push
jbe
adc
ins
and
hlt
pop
nop
adc
jmp
inc
push
xor
push
mov
fs
mov
sub
mov
call
arpl
adc
xor
pop
push
loop
mov
arpl
or
stos
adc
jmp
xchg
xor
aaa
clc
inc
cmp
mov
and
repz
push
mov
sbb
cmps
sub
(bad)
out
mov
mov
test
cmps
sub
dec
mov
neg
pop
call
fisub
call
xchg
repz
push
rol
mov
or
mov
es
inc
xor
test
mov
mov
fld
xor
xor
imul
pop
fwait
or
call
lea
adc
add
call
mov
imul
pop
or
and
out
add
adc
in
xchg
sbb
mov
pop
cmovb
sub
push
fcomp
inc
jmp
ss
push
sar
outs
movs
cmp
jb
leave
mov
adc
into
sub
jmp
(bad)
push
sub
popa
rcl
rcr
lahf
stos
dec
enter
xchg
sub
mov
pop
sub
popf
inc
mov
loope
sbb
cmp
sahf
aas
sbb
and
cmp
sbb
ins
aaa
mov
hlt
or
push
mov
mov
call
sti
test
jge
and
mov
pop
adc
arpl
outs
pop
fs
inc
cmp
dec
jno
loop
(bad)
hlt
add
or
push
jmp
mov
sub
popa
sub
ds
sbb
jnp
addr16
cmp
mov
adc
ins
or
cwde
rsm
sub
mov
push
lock
add
test
enter
mov
imul
or
sti
imul
xchg
pushf
repnz
cld
mov
nop
add
jbe
inc
or
add
inc
bound
pushf
cmp
imul
imul
pop
and
sub
mov
mov
sbb
xchg
push
inc
rol
push
add
out
pop
repz
xchg
jo
and
ins
jmp
push
jg
pop
jne
mov
(bad)
sub
mov
cwde
sub
loop
int3
xchg
mov
in
pop
xchg
and
popa
mov
daa
add
adc
cmc
pop
push
pop
loope
popa
pop
(bad)
popf
fdiv
imul
inc
loop
jne
mov
dec
push
sub
push
mov
inc
rcr
inc
jmp
add
push
add
out
or
pop
sahf
iret
xor
push
movs
or
and
push
adc
aad
push
data16
call
and
loope
cdq
xchg
mov
and
xchg
mov
xchg
out
cmp
arpl
jbe
xlat
add
mov
iret
fadd
in
push
inc
add
cmps
push
sbb
adc
mov
std
add
pop
mov
dec
fs
movs
jbe
fcomp
scas
jbe
or
movs
outs
imul
fldenv
or
add
jmp
in
add
push
out
popa
les
call
in
mov
movs
or
or
lods
outs
nop
sub
fistp
ins
out
adc
(bad)
cli
ficom
or
ds
call
and
inc
sub
xchg
sbb
scas
jge
aam
call
or
push
or
xchg
pop
je
mov
mov
push
lods
sbb
or
sahf
std
mov
and
mov
test
adc
fstp
push
rdtsc
mov
pop
jmp
enter
xor
mov
add
sbb
pop
cmp
xor
dec
add
pop
add
inc
imul
sub
cmp
(bad)
jge
and
rol
rol
lahf
(bad)
jp
sbb
or
dec
rcr
ins
inc
fdiv
adc
dec
mov
jbe
(bad)
je
or
movq
repnz
ins
aam
inc
and
inc
rcr
or
xor
hlt
ds
jbe
out
mov
arpl
dec
jno
cmp
mov
cdq
movs
mov
sti
dec
out
add
or
call
add
dec
clc
outs
(bad)
cmp
jg
test
das
cwde
xor
jne
cmp
and
aaa
xchg
outs
and
fwait
sbb
or
mov
fdiv
inc
add
xchg
aad
ss
lock
rcl
jg
call
and
cmp
mov
mov
sub
mov
sub
jns
push
dec
lods
and
sub
push
mov
push
les
or
test
mov
jecxz
push
outs
adc
aam
jmp
pop
cmc
daa
adc
les
shl
lods
imul
int
sahf
out
inc
enter
pop
mov
aaa
lock
fld
pusha
xchg
mov
shl
in
and
es
xor
rol
jbe
pop
dec
push
jg
ds
call
mov
sub
lods
fcmovne
outs
rol
or
outs
mov
or
sbb
mov
rol
pop
mov
clc
jecxz
cmp
jns
test
cmp
cli
adc
sub
xchg
pop
out
stos
cmp
pushf
repnz
js
sbb
(bad)
fsub
xchg
push
jne
daa
fcomp
pop
outs
push
xchg
fwait
shl
xchg
pop
sbb
fisttp
fs
mov
jmp
leave
and
jb
xor
jp
pop
pop
add
mov
scas
xor
lahf
mov
out
enter
cld
int3
movaps
push
inc
std
dec
into
jle
inc
int3
dec
in
(bad)
jecxz
loope
pop
mov
stos
syscall
inc
or
xor
xor
fidiv
sub
sub
push
push
bound
mov
pop
scas
fidivr
jb
push
pop
mov
pop
imul
add
gs
imul
aas
push
dec
(bad)
div
pop
sub
dec
in
inc
xchg
pop
inc
cmp
push
dec
cmp
ds
xchg
lahf
and
pop
movs
shl
daa
mov
push
push
js
in
call
pop
pop
lea
adc
push
mov
mov
sub
add
aad
fimul
dec
cld
jmp
icebp
pushf
jbe
push
inc
sub
mov
jecxz
retf
hlt
mov
dec
arpl
lds
stos
rcr
dec
mov
pop
data16
movhps
xchg
int3
mov
xchg
pop
add
inc
and
xbegin
xor
out
lea
int3
push
jbe
xchg
push
xor
mov
std
fidiv
aaa
jmp
jno
sub
adc
jo
jmp
dec
jmp
mov
cmp
jbe
retf
mov
dec
mov
inc
dec
clc
aas
aaa
aaa
outs
jl
adc
mov
xor
or
mov
adc
aad
fmul
xchg
push
data16
xor
popf
mov
ret
cmps
sbb
inc
cs
lods
jg
js
dec
adc
xchg
shl
pop
and
inc
or
(bad)
adc
jp
mov
adc
movs
daa
pop
xchg
int3
mov
push
aas
xor
mov
jge
adc
xchg
xor
push
pop
aas
mov
cmp
mov
mov
sub
pop
inc
pop
retf
loop
stos
mov
icebp
or
pop
test
or
mov
shl
aam
pop
movs
mov
call
idiv
bound
dec
mov
lahf
fbld
arpl
sbb
cld
mov
ja
popf
jb
pop
mov
pop
mov
in
adc
mov
mov
add
leave
loope
(bad)
loopne
shl
adc
pusha
push
mov
mov
enter
js
xor
mov
pop
ficomp
and
ficomp
test
jo
or
in
call
mov
jl
outs
nop
jge
data16
mov
mov
jne
aam
jne
sub
jbe
repnz
aad
jecxz
call
push
mul
or
cli
xor
pop
xchg
hlt
push
mov
inc
mov
inc
mov
aaa
bound
in
test
adc
ja
jmp
in
cmp
sub
popa
xchg
cs
cdq
pop
lods
in
mov
popa
shr
por
push
pop
call
cs
cmp
pop
jae
leave
sub
or
cmc
gs
cmp
int
mov
jno
jmp
mov
inc
pop
mov
outs
shl
jb
test
imul
icebp
dec
pop
lahf
fst
mov
mov
enter
sub
mov
xchg
jle
sbb
retf
test
sbb
cdq
push
int3
not
xlat
jecxz
out
inc
jne
aad
mov
aas
ucomiss
sbb
pop
outs
repz
or
pop
dec
enter
sbb
inc
sub
pop
mov
sub
mov
(bad)
aam
add
pop
or
stos
lds
mov
and
clc
mov
push
outs
dec
mul
mov
in
pop
in
dec
pop
xchg
les
or
out
out
cmp
push
adc
jae
mov
vpshld
dec
(bad)
(bad)
daa
imul
adc
pop
test
jno
jns
es
push
leave
daa
bound
sub
inc
add
rcl
mov
adc
jns
leave
retf
mov
jle
inc
add
adc
pop
data16
pushf
sti
jne
call
ret
call
pop
mov
lea
mov
or
jo
cmp
push
test
mov
ret
jno
bound
mov
iret
rcr
sbb
lods
std
dec
mov
iret
push
daa
call
jb
test
xor
pop
sub
mov
nop
inc
lock
xor
shl
fsub
xor
ds
adc
mov
icebp
adc
add
or
push
movs
dec
cmps
int3
lods
imul
daa
jae
or
ret
sbb
push
jge
cmp
jmp
or
pshufw
int3
fidivr
sub
add
push
or
ja
add
sbb
jmp
mov
mov
or
sbb
xor
jnp
sbb
ret
lea
mov
(bad)
popa
movs
je
pusha
mov
aaa
std
add
adc
imul
mov
je
mov
into
(bad)
fmul
out
xor
popf
jge
dec
in
cmps
out
sub
mov
jmp
inc
xchg
mov
jae
mov
push
push
inc
out
push
and
aas
add
mov
mov
push
push
mov
clc
ud0
sub
in
clc
add
jns
arpl
add
jg
mov
pop
inc
xchg
fnstsw
aam
jmp
cwde
and
clc
jns
stos
into
cld
mov
or
xchg
mov
scas
pop
mov
mov
inc
jl
mov
cmps
rol
(bad)
mov
ror
jecxz
sbb
jecxz
pop
dec
xor
xchg
jmp
mov
mov
push
or
pop
clc
xchg
(bad)
mov
cld
xchg
jnp
sbb
push
adc
pusha
add
and
js
push
adc
loopne
fdivr
pop
imul
lods
sbb
xchg
sbb
or
adc
push
movs
stos
rcl
ins
movs
fadd
movs
into
lahf
mov
retf
popf
cwde
les
xor
(bad)
pop
adc
adc
mov
pop
pop
(bad)
fcomp
or
shl
cmps
ficomp
es
scas
ret
mov
xchg
mov
(bad)
shl
sub
jl
xchg
mov
inc
sbb
push
jle
loop
cs
cmps
jl
in
pop
aam
mov
ins
(bad)
in
in
dec
inc
jmp
loopne
out
ins
xlat
repz
call
jb
cdq
xlat
fiadd
movs
push
(bad)
and
stos
fisttp
cmp
push
xchg
movs
int3
or
shr
sbb
and
xor
mov
and
pop
adc
loopne
cmp
aaa
sar
loopne
push
das
push
adc
mov
sbb
(bad)
and
sbb
inc
nop
outs
fucomip
pushf
sbb
dec
mov
test
out
pop
jb
stos
cdq
fstp
dec
xlat
ins
ficom
clc
ficom
ins
mov
xchg
mov
mov
test
pop
fwait
mov
aaa
add
pop
clc
inc
and
xchg
popa
fistp
mov
or
mov
push
pop
mov
or
movs
cmps
(bad)
call
pop
repz
setno
cmp
loope
js
jae
shr
and
cs
mov
jb
push
pop
mov
cmp
inc
xor
fst
rcl
mov
iret
aaa
test
movs
mul
jmp
mov
mov
and
popf
std
add
sbb
xor
in
inc
jmp
inc
push
mov
nop
push
xlat
stos
sbb
jnp
jmp
dec
out
add
push
popa
(bad)
jl
mov
aam
mov
mov
jnp
inc
mov
dec
xor
inc
xor
daa
gs
push
xor
popa
shr
idiv
ror
dec
out
shl
pushf
cwde
push
(bad)
out
cmp
sub
fwait
mov
test
int
xchg
dec
jae
xchg
call
addr16
in
addr16
je
cmp
and
lds
out
repz
inc
sbb
(bad)
dec
add
and
inc
jb
xchg
xchg
outs
pop
cli
test
xor
clc
cmp
cs
cli
mov
stos
mov
loopne
mov
sbb
cli
add
addr16
xor
or
adc
sub
mov
pusha
test
mov
repnz
jnp
mov
dec
call
xchg
ss
arpl
push
ret
add
bound
test
lahf
imul
sahf
adc
mov
sub
popaw
jns
dec
xchg
push
inc
adc
into
mov
nop
int
shr
rcr
cwde
mov
vpmacsww
mov
jp
add
push
mov
mov
inc
cmc
ror
xchg
retf
and
(bad)
rcl
jg
xchg
sbb
mov
je
nop
mov
nop
cwde
mov
add
pop
shl
mov
sar
push
dec
xor
jne
inc
mov
xchg
xchg
addr16
das
push
and
pop
xchg
mov
cld
iret
sbb
fild
aad
enter
sar
out
or
push
mov
cwde
(bad)
mov
iret
sahf
dec
add
xor
sbb
xchg
sbb
mov
mov
dec
adc
mov
push
hlt
repz
in
enter
shl
or
xchg
push
add
inc
pop
push
ss
iret
mov
jmp
stos
(bad)
popf
xchg
loopne
ror
and
jo
stc
mov
mov
mov
xchg
loop
repz
xor
or
dec
push
cmp
sub
(bad)
cmps
stc
xchg
add
add
sub
push
test
lods
(bad)
jns
jae
jb
clc
or
aaa
dec
push
scas
mov
cwde
std
lods
fisttp
out
scas
jmp
enter
jmp
pop
call
ret
ins
sub
test
push
and
je
shr
icebp
mov
shr
mov
scas
ret
test
sub
add
inc
adc
or
mov
out
xchg
movs
aam
ss
cmc
scas
call
mov
jnp
mov
xchg
ret
mov
dec
cdq
leave
mov
outs
jmp
test
sub
jp
(bad)
stos
jmp
push
aaa
inc
adc
adc
inc
sbb
pop
push
loope
in
repz
outs
xor
or
mov
jmp
dec
sub
add
mov
fcmovu
cmps
fadd
je
mov
test
mov
loop
lods
jmp
and
pop
or
inc
or
sub
push
cmp
ja
inc
ss
and
inc
cmp
jo
push
mov
cmc
xchg
in
clc
mov
adc
fcomp
jl
push
and
sahf
fst
push
popa
xor
leave
out
mov
rcr
test
mov
xchg
aad
sar
retf
push
adc
dec
in
js
jne
inc
cmp
mov
test
dec
mov
call
or
jnp
mov
jmp
mov
cli
mov
mov
mov
cdq
jmp
les
cli
(bad)
fcomp
test
mov
lods
call
sbb
(bad)
add
aad
loop
test
rcl
mov
mov
mov
out
stos
fcom
mov
nop
shl
rol
dec
and
popa
es
mov
sbb
int3
or
mov
scas
stc
mov
aad
(bad)
fs
inc
add
pop
stos
ror
fldenv
push
add
pop
or
dec
or
cmp
pop
ret
xchg
in
div
jne
and
mov
pop
das
js
dec
std
dec
xor
push
cmp
sub
pop
adc
mov
lock
loopne
shl
popf
neg
xor
xchg
mov
mov
lods
cli
mov
xor
sbb
aaa
arpl
test
sbb
dec
aas
push
mov
js
inc
dec
ret
mov
mov
adc
ret
mov
jmp
xchg
shl
mov
sub
ja
inc
or
and
pop
or
jnp
inc
jecxz
push
add
js
xor
cmp
shl
inc
pcmpeqw
jg
pop
or
and
std
mov
nop
jmp
aaa
push
daa
jae
jo
adc
sub
imul
push
and
pop
sub
or
jp
mov
pop
push
pop
push
dec
sbb
cmp
punpckhwd
inc
xor
jo
push
pop
dec
sub
pop
push
pop
sub
push
inc
or
rol
rcl
shr
sahf
call
xchg
hlt
shl
jbe
inc
add
outs
out
and
push
adc
in
div
inc
sub
jbe
div
clc
retf
in
out
fdiv
jb
add
push
retf
scas
imul
push
outs
loopne
loop
frstor
cwde
std
lods
fisttp
aaa
je
mov
xor
je
test
aam
addr16
push
std
cs
push
pop
push
outs
xor
rol
add
inc
pop
push
cmps
aad
ret
stos
mov
shr
nop
loop
lock
lea
xchg
mul
jns
pop
pop
mov
loopne
call
pop
adc
iret
sub
pop
(bad)
sub
es
(bad)
in
out
sahf
retf
std
mov
xchg
les
das
js
push
mov
jno
jns
pop
std
cmp
inc
push
push
pop
daa
adc
arpl
jae
pop
repz
lahf
test
cmps
cld
scas
les
dec
push
pop
sbb
and
lds
cld
dec
or
push
add
xor
dec
sbb
jns
push
adc
push
dec
jmp
push
sbb
bound
push
sbb
das
inc
sub
aas
imul
dec
xor
ds
call
sub
fst
mov
mov
inc
cmp
jbe
data16
mov
jbe
cmps
ins
loope
repz
mov
outs
or
inc
xor
push
movs
mov
retf
sti
mov
out
fisttp
(bad)
ja
cld
stos
ficomp
cmp
pop
sub
or
cs
or
dec
sbb
xor
jae
inc
push
adc
ins
pop
dec
or
sti
pop
es
imul
fcomp
fisub
push
or
nop
les
(bad)
mov
xchg
ins
das
inc
xor
push
movs
mov
retf
sti
mov
out
push
add
jb
pop
mov
push
dec
cmp
jo
aad
out
xchg
cdq
int
test
xchg
in
xchg
leave
lea
mov
test
sub
or
jge
dec
push
(bad)
aas
push
xor
aad
inc
sbb
and
xchg
in
repnz
lock
daa
adc
popa
sbb
dec
sub
dec
push
jnp
mov
leave
(bad)
fistp
sub
enter
lods
(bad)
mov
mov
mov
bound
push
or
jns
imul
dec
sbb
lds
cmp
call
adc
push
add
shr
pop
pop
pop
outs
xor
or
jae
inc
add
dec
addps
fwait
icebp
cmps
out
cld
stos
psadbw
loope
leave
mov
xlat
stc
dec
sbb
dec
das
jle
sbb
xor
(bad)
ins
push
dec
sbb
push
jge
add
jne
dec
adc
icebp
cmps
loop
xlat
movs
repnz
fcomp
aaa
pop
cmp
sbb
ss
or
jge
in
sub
pop
sbb
jle
jbe
dec
scas
xchg
cld
lahf
in
mov
movs
std
scas
jmp
push
cmp
mov
es
dec
sbb
xor
(bad)
fistp
inc
push
push
pop
inc
sub
clc
mov
ret
mov
leave
add
add
cli
sbb
sti
lods
call
or
sub
sbb
pop
xchg
fs
aaa
push
sub
add
cmp
dec
or
test
cmps
jmp
cld
inc
xor
jnp
pop
in
dec
sub
jecxz
lock
mov
mov
mov
out
out
xchg
into
popa
or
push
and
clc
stos
out
mov
pop
sbb
add
addr16
les
call
popa
sub
mov
sbb
sbb
lahf
push
aas
jae
mov
(bad)
in
hlt
mov
sub
sub
jmp
out
retf
mov
out
xchg
xchg
ret
test
scas
cmp
dec
or
mov
loop
and
sub
or
xor
dec
ds
push
mov
mov
test
lods
fmul
mov
sub
loope
dec
or
jno
push
cmps
ret
xchg
shl
mov
lods
in
test
jmp
mov
stos
ja
dec
add
jne
out
mov
xor
jecxz
dec
jmp
fistp
adc
push
jp
imul
mov
push
inc
cmp
xor
sbb
sar
icebp
mov
scas
jmp
shl
pop
jbe
push
sub
mov
shl
mov
mov
cmp
sub
inc
xor
adc
pop
cld
pop
or
(bad)
push
dec
xchg
fsubr
ror
push
xor
inc
add
or
jg
dec
adc
sbb
xor
sbb
mov
mov
sbb
addr16
jge
jg
cld
mov
nop
ret
add
popa
and
(bad)
leave
lahf
fild
test
mov
mov
clc
xchg
call
mov
mov
leave
sahf
fidivr
xchg
in
ret
test
jle
pop
arpl
lock
mov
xchg
sti
cmps
movs
aad
rcr
push
and
cmp
or
js
ins
sub
leave
mov
loope
jmp
jecxz
ret
xchg
jmp
movs
rcr
add
je
ret
sahf
leave
mov
fs
ss
stc
and
and
addr16
aas
repnz
jecxz
xlat
movs
repz
mov
xchg
out
out
jmp
push
daa
jae
bound
popa
mov
std
xchg
dec
cdq
jmp
out
mov
sub
ins
sub
inc
ds
bound
mov
call
mov
lods
call
pop
sub
es
or
pop
cmp
cwde
fnstenv
xchg
lods
xlat
(bad)
fnsave
rol
data16
bound
loop
out
sbb
pusha
or
dec
push
out
cwde
shr
cmps
ret
mov
fwait
add
jbe
inc
sbb
stc
mov
pop
or
pop
inc
in
cwde
iret
mov
xchg
lds
ins
cmp
out
jmp
or
jno
arpl
inc
adc
out
into
mov
das
push
maxps
cmp
add
xchg
push
sub
or
aam
fimul
call
add
pop
push
adc
lods
enter
std
xchg
mov
pop
push
adc
jge
inc
xor
jne
jno
pop
sub
xor
jmp
cdq
into
sub
push
sub
sub
jno
push
adc
in
inc
adc
inc
and
pop
loope
cld
stos
fcomp
lahf
hlt
lahf
cld
fdiv
ja
dec
xor
push
xor
inc
dec
(bad)
sub
sbb
pop
repnz
adc
pop
outs
cmp
inc
xor
pop
pop
push
dec
outs
scas
int
jmp
xor
lock
scas
int
jmp
pop
sbb
and
inc
sub
pop
ds
dec
push
dec
and
jae
push
adc
push
into
popf
(bad)
dec
or
js
aam
hlt
movs
iret
cmps
lds
pop
sbb
sbb
mov
fwait
(bad)
scas
fmul
bound
data16
jbe
push
jecxz
push
push
sub
cmps
ret
mov
call
jnp
js
cmc
xchg
in
div
popa
and
out
lock
in
mov
ins
imul
pop
inc
xor
push
mov
leave
cwde
hlt
sub
ja
push
adc
mov
mov
push
and
dec
test
repnz
mov
mov
xchg
rcl
(bad)
scas
int
aad
pop
sub
inc
adc
ret
adc
std
test
cmp
dec
adc
imul
mov
test
inc
loopne
ret
popa
ss
jle
pop
adc
cli
mov
fild
adc
lods
js
push
and
int
in
mov
je
jno
dec
aaa
outs
pop
retf
mov
inc
cmp
pop
sbb
leave
mov
jo
inc
cmp
je
lock
lds
jae
inc
add
cmp
mov
mov
dec
xor
aas
jnp
push
scas
(bad)
mov
lahf
sub
add
pop
xor
loope
rcr
jns
pop
or
fdiv
lea
aad
and
mov
mov
adc
data16
inc
adc
fwait
int3
mov
or
pop
cmp
gs
jo
inc
sbb
pop
xlat
mov
xchg
(bad)
mov
shl
iret
cmc
cld
xchg
test
pushf
fcom
fisubr
repz
ja
jg
pop
adc
ss
adc
imul
inc
add
push
leave
mov
xchg
ret
mov
test
mov
std
scas
mov
cwde
std
lods
fmul
sub
sub
and
inc
xor
ret
xchg
(bad)
retf
jb
call
mov
fld
ret
xor
je
jo
xor
inc
push
push
pop
push
pop
push
adc
pop
mov
jne
dec
jmp
fmul
push
inc
add
jns
ret
je
pop
sub
push
loope
adc
push
jne
jl
mov
out
pop
dec
sbb
dec
rcr
test
shl
retf
mov
aaa
inc
xor
pop
pop
cmovnp
jnp
pop
or
and
mov
fisttp
mov
mov
mov
rcl
test
mov
push
adc
lea
push
add
je
xchg
scas
fimul
inc
sbb
daa
dec
sub
and
sbb
sbb
push
imul
pop
or
lock
(bad)
xchg
rcr
stos
leave
mov
into
mov
mov
adc
jo
adc
xor
inc
sub
outs
sub
xor
inc
pop
push
adc
push
sbb
jbe
jle
pop
adc
push
ins
cmp
push
sbb
retf
(bad)
fstp
cmp
jno
inc
xchg
cmps
fadd
cmp
pushw
inc
imul
imul
ja
push
and
mov
mov
mov
jae
inc
sbb
mov
sub
pop
sbb
sbb
outs
and
cmps
sub
and
inc
repnz
sub
imul
test
cmps
out
cld
stos
ja
aad
jecxz
jmp
sbb
and
adc
mov
dec
or
inc
xor
test
movs
cmc
sahf
clc
fwait
and
mov
mov
stos
repnz
fisttp
pop
pop
sbb
cmp
add
jl
out
sbb
pop
add
adc
xchg
icebp
mov
pusha
xchg
out
loop
(bad)
mov
loopne
call
shl
xchg
leave
call
(bad)
int3
movs
rol
mov
mov
hlt
xchg
xchg
shr
les
push
adc
jb
jns
pop
or
imul
xlat
scas
div
or
and
xchg
jmp
sub
inc
sub
push
add
daa
push
sbb
imul
mov
in
test
xchg
out
loop
(bad)
mov
jns
imul
sub
mov
popf
hlt
adc
jbe
jle
pop
adc
retf
mov
shl
je
arpl
div
into
xlat
inc
cmp
pop
xor
mov
jmp
pop
cmp
dec
sbb
push
pop
jbe
jne
stc
add
push
xor
and
outs
sub
inc
or
xor
jbe
dec
xchg
mov
stos
in
test
out
les
in
les
push
adc
jg
inc
jmp
cmc
push
in
mov
fbld
aaa
pop
sbb
adc
push
mov
mov
jae
(bad)
sbb
adc
outs
cmp
push
inc
or
out
popf
mul
pop
or
or
jae
cmp
push
push
pop
push
adc
or
cmovle
add
cdq
(bad)
xchg
aad
iret
mov
xchg
lds
loop
loop
cmp
dec
das
jnp
inc
add
inc
or
les
mov
mov
imul
sbb
loope
(bad)
dec
sbb
icebp
fwait
or
xchg
mov
es
popa
mov
xchg
rol
inc
adc
mov
jmp
std
cmp
jb
mov
inc
lods
clc
popf
fldcw
arpl
dec
cdq
fsubr
(bad)
xchg
(bad)
test
stc
mov
inc
xor
mov
cli
les
sub
sbb
leave
xchg
(bad)
sbb
xchg
fnstcw
xchg
fstp
and
sbb
gs
stc
sbb
push
xchg
lock
retf
repz
es
scas
cmp
add
retf
inc
pop
cmp
lock
sbb
lods
push
fstp
xor
mul
mov
xchg
fst
dec
gs
addr16
xchg
inc
jnp
aaa
pop
xchg
les
fst
sbb
imul
sbb
popf
sub
dec
adc
movs
(bad)
nop
(bad)
repz
pop
xchg
into
movs
out
mov
cli
cdq
sub
xor
lea
leave
push
cwde
ror
xchg
add
mov
adc
mov
inc
xor
pop
sub
or
dec
nop
mov
in
mov
loop
adc
add
pop
dec
and
dec
cmp
or
aaa
add
and
push
es
jp
dec
adc
xlat
cwde
fadd
xor
scas
test
cmp
or
call
push
jecxz
cwde
shl
mov
aas
outs
scas
(bad)
mov
jp
gs
inc
fwait
lock
aas
outs
sub
add
xor
enter
enter
xchg
out
sar
movs
out
fcomp
inc
ret
xchg
cmps
xchg
clc
and
dec
inc
or
sub
sub
lds
call
(bad)
std
xchg
xchg
les
dec
add
cmp
push
push
aam
popa
sub
test
xchg
adc
mov
adc
cmp
aaa
fstp
pop
adc
sub
inc
or
sbb
adc
ss
add
and
dec
and
mov
(bad)
mov
mov
mov
dec
out
xlat
mov
push
cmp
add
adc
pop
add
stos
fisttp
movs
in
test
sbb
sahf
in
mov
daa
inc
pop
push
pop
pop
push
push
jle
outs
push
push
pop
inc
add
push
or
fstp
clc
loop
fadd
rol
mov
add
mov
sub
lods
fist
das
jae
inc
call
fild
test
mov
mov
add
jb
icebp
xchg
shl
je
repnz
out
mov
sbb
or
out
jo
lods
jmp
add
ja
cld
pushf
fdiv
dec
cmp
adc
sbb
mov
stos
std
mov
mov
int
push
adc
push
jae
ja
les
sub
leave
jnp
(bad)
call
mov
jg
aaa
or
sub
pop
add
push
arpl
add
and
jg
add
imul
mov
out
lods
loopne
add
bound
jmp
and
jecxz
add
dec
stc
mov
stos
sbb
jg
sbb
sub
push
in
lods
sbb
jp
inc
out
mov
mov
ja
and
sub
cmp
and
test
mov
in
cdq
(bad)
out
mov
ins
sub
mov
fisub
call
inc
adc
pop
cs
ret
cmps
aam
add
jmp
cld
push
adc
add
jp
push
fisttp
daa
jge
leave
sbb
fcomp
fwait
cmp
adc
sti
les
push
sbb
mov
je
dec
add
ja
(bad)
fcomp
call
std
cmps
enter
pop
or
push
call
imul
std
stos
aaa
and
mov
xchg
retf
jmp
jp
call
data16
mov
lahf
retf
and
out
fnstenv
test
pop
sbb
(bad)
fimul
pop
mov
stos
cld
mov
adc
das
and
imul
mov
ins
or
jmp
data16
sbb
mov
mov
imul
adc
xchg
jle
lds
ja
add
lods
not
jge
cmp
cdq
fisttp
inc
inc
call
retf
dec
or
xor
bound
sbb
les
cwde
pop
pop
fadd
xor
lods
sar
out
(bad)
pushf
int3
cmps
mov
xor
test
aam
cwde
mov
adc
fmul
fmul
and
sub
add
add
bound
dec
sbb
cmp
sbb
ja
jl
or
dec
add
es
outs
sub
push
jle
arpl
ins
sub
dec
sbb
(bad)
lahf
in
mov
leave
xchg
ret
xchg
repz
mov
or
inc
cs
and
js
dec
adc
dec
or
outs
cmp
dec
cmp
in
loope
xlat
(bad)
fnsave
cmp
inc
sbb
and
into
popf
cmps
shl
inc
cmp
cwde
clc
nop
std
aas
stos
cmc
mov
pop
and
int
repz
dec
loopne
(bad)
mov
cmps
push
or
jmp
and
sbb
cld
mov
mov
test
lods
dec
ds
push
pop
fistp
sahf
neg
ror
cmp
out
dec
jl
xchg
(bad)
addr16
jge
dec
sbb
test
xor
fcomp
add
ret
xor
lds
in
mov
mov
in
fdiv
lods
push
pop
push
push
xor
iret
stos
ret
call
push
pop
xchg
inc
adc
dec
sub
test
sahf
ficom
xor
pop
and
jg
pop
push
dec
cli
mov
adc
or
and
cmc
movs
into
mov
cwde
fistp
sub
into
and
rcl
cs
dec
cli
lods
inc
inc
daa
push
add
pop
xor
pop
and
pop
or
adc
fdiv
lahf
xchg
lock
cli
xchg
sti
cwde
jmp
retf
mov
in
repnz
test
jns
and
jecxz
test
sub
stos
enter
mov
fs
mov
cmps
xlat
popf
ja
cmp
adc
test
rcr
cmp
shl
xchg
and
bound
std
push
mov
inc
and
outs
sub
das
pop
add
push
sti
push
ins
in
hlt
movs
aam
movs
in
call
xchg
mov
(bad)
xchg
sub
cmp
inc
cmp
leave
cmps
ror
pusha
add
xchg
out
popa
(bad)
cld
mov
ja
jae
push
pop
and
push
or
cmp
pop
dec
cmp
in
xor
cs
xchg
jmp
and
or
xchg
mov
sti
lahf
in
mov
push
or
jg
(bad)
mov
popa
loopne
inc
dec
pop
outs
xor
(bad)
mov
sbb
dec
xor
mov
or
in
adc
inc
add
les
inc
and
ins
inc
test
imul
gs
adc
and
pop
cwde
ret
mov
jb
fs
pusha
push
inc
mov
imul
int3
jp
pop
jecxz
mov
jle
pop
push
in
cwde
fldcw
mov
mov
es
imul
xor
test
mov
push
jle
jle
ins
sub
cmc
cs
jns
xchg
mov
nop
jbe
imul
xor
xor
lods
fisttp
add
clc
sbb
and
dec
push
pop
enter
fidiv
jle
and
shl
fs
xchg
stos
rcl
retf
mov
pop
or
xor
in
dec
add
sub
inc
add
out
or
jae
inc
add
mov
mov
or
mov
test
test
add
xor
adc
jno
outs
test
add
mov
sbb
jge
addr16
sub
rol
or
push
mov
cmps
out
push
sub
add
or
add
xlat
mov
int3
test
mov
lds
inc
adc
jne
in
scas
(bad)
mov
scas
mov
ror
stos
fdiv
xor
and
mov
mov
ss
rcl
mov
mov
xchg
iret
pushf
ficomp
call
ins
repnz
nop
int3
scas
fbstp
into
xchg
fist
mov
div
fnstsw
inc
out
xchg
fist
mov
sbb
div
dec
add
dec
sub
inc
fidiv
js
pop
and
mov
out
aam
loope
jmp
test
xchg
inc
ss
pop
xor
and
pop
lock
mov
into
jb
ds
loop
jmp
cmp
cmp
fdivr
nop
shr
pop
sbb
mov
adc
inc
and
call
addr16
sub
inc
push
arpl
and
dec
aas
jle
pop
push
inc
pop
inc
adc
outs
xor
push
jecxz
ins
or
xor
shr
imul
pop
cmp
mov
or
jns
pop
cmp
add
sub
or
stc
mov
(bad)
stos
in
test
jecxz
rcl
xchg
cmp
jno
sub
and
outs
ds
pop
fs
inc
add
pop
or
test
xchg
leave
mov
jmp
sar
cld
js
dec
adc
pop
sbb
adc
add
data16
dec
sbb
mov
enter
bound
jne
imul
sub
push
xor
imul
sbb
pop
sbb
mov
fisttp
bound
push
push
xor
cld
mov
bound
sti
cmps
div
adc
inc
lock
sbb
dec
cs
repz
mov
mov
popf
bound
ror
enter
mov
cs
push
pop
imul
dec
sub
call
sbb
sbb
test
jle
jp
rol
(bad)
xor
mov
dec
sub
into
xor
dec
mov
push
mov
daa
jo
inc
mov
fdivr
fild
jbe
jecxz
jmp
ds
imul
repnz
movs
shl
sbb
jp
push
sbb
mov
pop
stc
mov
jno
mov
or
jmp
sbb
mov
xchg
popf
hlt
mov
xchg
dec
andps
loop
(bad)
cwde
xchg
mov
inc
push
pop
push
(bad)
ror
mov
push
cmp
mov
or
mov
imul
push
push
sub
in
fisttp
std
sub
ret
pop
cmp
mov
push
push
jg
shl
cli
xchg
je
jl
jb
pusha
sub
adc
leave
cmp
arpl
sub
adc
cli
test
into
call
sbb
add
lock
test
fwait
int3
mov
imul
push
dec
sbb
enter
int
mov
push
xor
lds
ja
loope
out
jmp
pop
adc
jbe
push
or
push
test
mov
nop
fnstcw
sbb
push
aaa
pop
adc
cmp
aam
aas
inc
adc
and
int3
mov
fnstenv
xchg
push
push
loop
les
add
aas
push
inc
pop
and
mov
mov
mov
into
cwde
fsub
inc
loopne
inc
and
dec
cmova
inc
cmp
and
mov
cmp
jge
sub
inc
sbb
ja
dec
or
push
sbb
xchg
xor
mov
mov
mov
or
aaa
into
or
call
adc
aad
(bad)
sub
lahf
out
scas
les
sahf
push
and
ins
loope
test
inc
cmp
fwait
rcl
adc
sbb
adc
mov
sbb
adc
and
adc
sbb
push
fisttp
jnp
scas
push
cmp
and
mov
mov
pop
mov
test
loop
scas
fist
movs
rcl
retf
(bad)
push
fstp
into
cdq
ficomp
not
pop
push
gs
repz
dec
es
pop
push
in
out
fs
mov
push
jle
and
jmp
mov
mul
jae
jl
add
and
inc
test
xchg
xlat
gs
ins
and
dec
sbb
xchg
cli
stos
(bad)
xchg
sar
in
rcr
cmp
mov
mov
jbe
sbb
add
jge
jmp
push
cmp
sahf
ficom
mov
or
sub
loopne
retf
mov
test
adc
dec
or
mov
adc
ins
push
jne
xchg
ret
mov
jge
inc
movq
cmp
adc
arpl
jge
mov
and
jg
and
cwde
int3
push
add
dec
or
mov
mov
jbe
rcl
cmp
sbb
test
pushf
leave
sub
dec
pop
pop
and
fiadd
cs
or
lods
out
mov
outs
pop
scas
sbb
sub
mov
mov
pop
pop
and
add
inc
loop
pop
xor
xchg
(bad)
push
fld
retf
inc
add
dec
pushf
fld
and
jp
pop
clc
mov
add
push
femms
inc
adc
mov
dec
adc
jns
cmps
loopne
fcomp
adc
push
or
pop
mov
mov
xchg
clc
or
sbb
sbb
pop
xchg
idiv
bound
gs
je
jg
push
and
in
arpl
and
aas
inc
adc
retf
inc
aaa
or
and
test
stos
out
mov
ror
rol
adc
or
jge
push
xor
push
push
xor
pop
cmp
inc
pop
or
lock
jge
pop
sbb
push
jne
std
mov
mov
shl
inc
pop
loope
out
sahf
mov
js
outs
xor
ret
sub
loope
idiv
cld
mov
cld
sub
mov
(bad)
push
xor
bound
dec
hlt
les
xor
push
adc
les
enter
scas
fcom
fsub
jno
add
and
outs
sub
repz
xor
adc
jle
xor
jo
data16
sub
cmp
ins
cmp
adc
pop
push
jmp
(bad)
fsubr
dec
sub
mov
mov
js
outs
adc
push
ja
jb
hlt
lods
fadd
inc
cmp
int3
stos
ret
mov
mov
sub
dec
mov
xor
imul
xor
ret
mov
jmp
stos
fdiv
push
xchg
dec
adc
inc
loope
sub
mov
xor
scas
(bad)
or
pusha
das
push
mov
loopne
fimul
in
push
and
cmp
adc
or
xchg
(bad)
mov
inc
sbb
jo
rcr
loopne
repnz
adc
sbb
pop
pop
xor
add
das
std
xchg
xchg
ret
push
push
push
in
inc
sbb
inc
aaa
push
pop
jecxz
mov
add
push
sub
push
dec
loop
fadd
dec
(bad)
popf
imul
(bad)
cld
test
fwait
in
mov
je
jg
in
(bad)
cmps
hlt
mov
sub
xor
aam
out
test
adc
xor
icebp
scas
cld
mov
imul
jmp
xor
leave
xchg
(bad)
xchg
out
mov
dec
or
fst
dec
adc
loope
ret
test
pop
pop
push
adc
cs
rol
imul
jl
imul
clc
mov
mov
scas
mov
loopne
rcl
(bad)
cld
and
(bad)
xor
test
mov
add
push
outs
leave
xchg
mov
and
adc
inc
sbb
ficom
loop
inc
sbb
loop
and
in
sub
aaa
push
shl
pop
or
pop
ds
cdq
movs
loope
dec
es
adc
push
(bad)
fist
push
jno
pop
repz
xor
pop
cmp
push
and
call
sbb
lock
(bad)
mov
adc
push
sbb
mov
sbb
dec
add
in
popf
(bad)
fwait
ins
xor
das
inc
fld
sbb
push
mov
add
or
mov
push
dec
fwait
retf
mov
sub
ss
push
aaa
jae
popa
loop
jge
js
imul
fimul
lods
clc
xchg
xchg
mov
xchg
(bad)
mov
cdq
dec
push
ins
sbb
aaa
je
push
push
push
xchg
(bad)
movs
mov
inc
add
pop
loope
sub
add
jg
xlat
cmps
in
test
jns
and
xor
inc
or
or
lahf
mov
push
or
(bad)
iret
mov
lods
cmps
int
(bad)
mov
call
xchg
mov
aad
cmp
mov
(bad)
out
pushf
cmps
ror
stos
rep
(bad)
lods
out
mov
mov
or
je
and
fwait
mov
fimul
imul
or
jp
enter
or
retf
dec
adc
call
sub
inc
lock
mov
adc
fisttp
adc
cmp
sub
ret
pushf
fnstsw
xchg
fimul
cmps
mov
test
add
mov
lahf
cmc
mov
(bad)
fild
lds
(bad)
call
push
and
add
movs
in
test
jno
cmp
sbb
ds
and
cmc
movs
xlat
cmp
push
mov
and
aam
(bad)
outs
jmp
addr16
scas
rol
mov
dec
adc
pop
sbb
jl
int
cli
mov
mov
push
jno
bswap
(bad)
retf
mov
mov
int
pop
adc
sbb
test
or
ins
xchg
enter
shr
inc
adc
out
nop
iret
mov
scas
clc
xchg
stos
mov
test
fidiv
(bad)
mov
mov
xchg
cli
test
dec
out
push
dec
push
jg
push
sub
lods
call
pop
jl
and
stc
test
sbb
push
push
inc
add
sub
test
ja
test
adc
ins
sub
sub
pop
or
push
or
lds
xor
inc
adc
(bad)
movs
loopne
mov
rcr
les
pushf
sti
jg
imul
sti
push
jns
pop
in
fisttp
jg
call
js
dec
ds
mov
movs
cmc
jge
dec
cmp
sub
and
(bad)
ret
mov
cli
xchg
mov
pop
dec
pop
pop
jmp
gs
cmp
pop
cmovae
adc
mov
movs
lock
test
imul
imul
jecxz
or
pop
and
nop
mov
xor
mov
pop
das
js
jge
pop
loopne
in
ret
inc
add
int
mov
test
data16
outs
sbb
imul
and
dec
loope
repnz
in
ret
xchg
test
lods
(bad)
mov
mov
push
and
jl
cmp
es
outs
mov
movs
neg
test
leave
stos
shl
call
xor
xor
adc
adc
out
sahf
lds
push
je
inc
sbb
pusha
sub
hlt
(bad)
mov
add
stos
shr
add
and
ds
xchg
int3
(bad)
rol
ss
sbb
mul
aad
mov
out
pop
jae
pop
cs
or
add
inc
cmp
mov
movs
loopne
sub
stos
fadd
push
cmovle
push
or
nop
fcom
ins
sbb
push
adc
dec
adc
mov
shr
push
ja
xlat
xchg
mov
mov
inc
cmp
mov
movs
neg
pop
idiv
sti
pop
and
and
pop
add
ficomp
out
mov
daa
push
add
push
sbb
pop
loop
shl
mov
addr16
retf
mov
cmp
add
loopne
shl
ds
add
cmps
mov
lods
not
and
mov
jno
outs
loopne
(bad)
xchg
test
push
pop
ins
push
push
shl
in
mov
lahf
mov
iret
lea
dec
adc
push
sbb
or
(bad)
fst
inc
sti
mov
lods
sti
imul
fistp
retf
xchg
fisubr
jp
mov
mov
xchg
ja
lea
sbb
sahf
sub
repnz
or
rcl
and
jnp
imul
push
dec
(bad)
movs
shl
imul
or
mov
outs
jecxz
imul
ja
loope
div
dec
sbb
push
inc
cmp
test
mov
mov
fwait
mov
mov
hlt
adc
cmp
pop
mov
repz
sub
pop
cmp
scas
movs
icebp
sub
push
js
xor
(bad)
stos
mov
or
push
mov
call
inc
or
dec
mov
addr16
loope
(bad)
mov
iret
xchg
in
mov
mov
ret
pop
or
sub
cmovae
arpl
pop
xor
pop
jecxz
adc
jns
movs
repnz
cmp
dec
sub
xor
push
pop
cmp
scas
out
xchg
xlat
add
cmps
(bad)
push
cmp
and
and
movs
jmp
push
pop
xor
dec
adc
mov
pushf
fidiv
push
jne
sahf
std
xchg
sar
xchg
aad
sub
jno
mov
fwait
in
xchg
mov
rcl
or
fwait
int
add
mov
and
pusha
aam
sahf
retf
fwait
neg
cdq
jmp
mov
fwait
inc
add
int3
lods
fstp
dec
sbb
adc
addr16
or
adc
ins
or
movs
ficomp
push
ds
push
xor
xor
or
sub
pop
sub
clc
pushfw
in
mov
aad
or
pop
loop
rcr
test
pop
loopne
sar
aad
or
les
inc
cmp
ds
out
fidivr
aam
bound
ins
pop
push
mov
sbb
adc
xor
jnp
inc
adc
mov
test
ret
add
imul
or
add
mov
and
jl
pop
ja
push
sbb
jno
sbb
mov
jbe
dec
cmp
out
mov
cld
mov
jo
jl
ficom
sahf
fsub
inc
jecxz
aas
jnp
inc
sub
movs
in
test
xchg
sbb
pop
cmp
jb
aaa
push
or
dec
cmp
dec
loope
sar
lods
fimul
js
xchg
(bad)
scas
(bad)
(bad)
rcr
and
mov
inc
sbb
das
jae
dec
pop
shr
pop
xor
pop
cmc
mov
mov
movs
int3
mov
loopne
inc
adc
dec
stos
lods
repz
mov
xlat
fwait
(bad)
mov
sub
xor
stos
xlat
pop
jne
and
ja
jne
dec
xor
push
pop
push
fs
inc
adc
js
sbb
jbe
retf
xchg
(bad)
mov
pusha
xchg
rol
jne
dec
or
(bad)
bound
jno
inc
repz
int3
mov
lea
and
repz
mov
mov
xor
ins
cmp
jbe
mov
cli
mov
(bad)
retf
push
xor
inc
stos
aad
adc
push
sbb
gs
movs
aad
iret
xor
dec
lock
aas
jnp
imul
mov
mov
test
or
jp
and
pop
lock
int
loopne
icebp
mov
stos
xlat
xchg
xchg
lahf
fist
jo
imul
es
xchg
stc
cmps
cmc
mov
xchg
mov
xchg
ret
rcr
push
dec
sbb
dec
add
mov
fdivr
adc
aaa
imul
sti
mov
sbb
jne
pop
dec
xor
and
jmp
imul
mov
fstp
outs
push
js
and
dec
xchg
jmp
sbb
adc
hlt
inc
cmps
in
jmp
mov
mov
adc
adc
sbb
or
pushw
pop
mov
gs
enter
shl
push
clc
ins
xor
xchg
jnp
xor
sbb
adc
push
mov
repz
adc
add
push
hlt
xchg
inc
ror
shr
lahf
sub
inc
mov
cdq
in
shr
jmp
nop
cmps
dec
fcmovnu
mov
xlat
out
in
scas
enter
leave
in
dec
jns
pop
dec
out
idiv
cli
mov
mov
je
sub
mov
mov
test
jecxz
dec
dec
inc
test
sar
jno
pop
in
(bad)
imul
movq
push
(bad)
mov
cmc
inc
pusha
stc
pop
(bad)
sub
mov
push
loope
aam
xor
stc
push
test
xchg
jns
ja
xchg
or
icebp
and
shl
cmp
jnp
jbe
xor
add
inc
xchg
retf
dec
xchg
or
jno
sbb
mov
test
add
ja
or
iret
mov
push
sub
sub
stos
or
and
adc
aaa
cdq
fcomp
xchg
movs
loopne
lods
aaa
cli
cmp
out
push
or
xor
ins
repnz
test
popf
fs
mov
(bad)
jmp
(bad)
push
adc
add
jmp
clc
outs
fmul
mov
mov
les
xor
or
inc
or
xchg
sbb
jge
xchg
xchg
push
cmp
push
shl
mov
xor
inc
jae
pop
xor
xchg
pop
jb
out
pop
mov
loopne
stos
test
dec
dec
and
xchg
xchg
push
out
cld
and
sbb
and
retf
mov
stos
ds
fbstp
pop
cmps
xlat
dec
je
stc
push
xchg
std
push
mov
adc
xchg
cdq
cld
ret
xor
mov
sbb
xor
into
jecxz
jl
xor
repz
dec
js
xlat
push
mov
repz
cmp
in
inc
jecxz
cdq
ins
call
dec
call
xchg
mov
call
inc
push
ja
cmc
fmul
push
bnd
and
lahf
cmp
or
mov
pop
aad
adc
inc
jnp
mov
je
cld
fstp
cmp
inc
sub
loopne
and
fimul
xchg
in
xor
call
xchg
xor
(bad)
and
outs
xor
lods
xchg
aas
jecxz
push
in
cmc
fcomi
addr16
popf
inc
jge
push
mov
mov
mov
ja
(bad)
cmps
outs
mov
out
pop
sub
xchg
popf
mov
inc
gs
add
mov
(bad)
dec
ret
push
pop
call
out
and
minps
mov
add
in
jmp
dec
mov
mov
cdq
push
aas
imul
mov
jae
xchg
std
cmps
mov
repnz
aas
dec
xor
add
repnz
add
outs
mov
fst
je
cli
(bad)
movs
cmp
add
test
and
mov
inc
mov
fcom
outs
push
jle
mov
xor
adc
jne
(bad)
lds
test
sbb
in
push
mov
mov
cmp
lahf
xchg
repnz
je
rcr
inc
mov
addr16
shl
push
outs
mov
aas
daa
fistp
pop
sub
add
enter
jmp
mov
inc
cmp
shr
inc
cwde
repnz
jbe
popf
cmp
sub
fdivr
scas
out
push
adc
icebp
in
xor
popf
shl
push
hlt
xlat
mov
test
add
out
aam
fiadd
movs
pop
popf
loop
(bad)
dec
ins
sbb
cmc
adc
in
push
in
mov
xor
mov
imul
cld
xor
sub
fimul
pop
loope
aas
xor
mov
jbe
retf
jecxz
jecxz
std
sbb
mov
pop
shl
fmul
mov
xor
and
and
(bad)
int
(bad)
call
adc
mov
push
aas
xchg
in
clc
inc
imul
idiv
daa
shr
inc
and
sti
(bad)
aaa
xchg
sbb
mov
mov
push
pop
push
mov
or
add
pcmpgtw
in
je
xchg
scas
push
mov
push
repnz
cmps
test
inc
js
push
test
and
cmp
in
enter
(bad)
div
or
and
jmp
sub
lock
mov
pushf
or
ficomp
xor
retf
xor
pop
mov
arpl
xchg
jo
pop
fs
cmp
fsubr
ins
push
jecxz
xlat
sub
pop
inc
sub
adc
push
mov
cmp
mov
cmps
test
inc
dec
xor
xchg
ss
and
push
pop
add
cmp
test
icebp
sub
dec
pop
xchg
jne
sub
mov
fldenv
ds
cmp
xor
dec
jnp
sbb
push
ror
xor
push
shl
int3
arpl
dec
sbb
push
mov
sbb
sub
scas
pop
dec
(bad)
seta
push
xchg
mov
fsub
pop
push
push
dec
fild
pop
mov
test
(bad)
xor
leave
int
adc
fdiv
outs
call
xchg
mov
sahf
scas
lds
addr16
inc
push
lods
xor
add
mov
xor
(bad)
loopne
jecxz
adc
(bad)
out
mov
cld
push
xchg
ss
ret
div
cmp
fs
repnz
xor
mov
fldenv
mov
cmps
jnp
jecxz
mov
and
dec
push
sar
dec
mov
shl
rcl
dec
xor
pop
jmp
sbb
xchg
int3
xchg
mov
hlt
dec
xor
xchg
(bad)
in
and
add
cmps
xchg
pop
outs
loopne
push
div
adc
push
mov
int3
add
enter
mov
jno
sub
mov
imul
rcr
js
in
xor
add
mov
add
hlt
repz
inc
imul
or
add
lds
fstp
jb
mov
lahf
xchg
int
xor
xor
dec
push
push
mov
js
pop
jae
shr
mov
dec
push
dec
outs
xchg
jmp
push
mov
cmp
aas
push
dec
ficom
pop
cmp
pop
lds
mov
or
mov
adc
shl
pop
and
aad
or
cld
cmc
es
adc
rcr
outs
data16
inc
movs
inc
push
pop
stos
out
lock
fistp
mov
add
scas
jecxz
mov
(bad)
(bad)
int
(bad)
mov
sti
pop
inc
sub
enter
mov
out
shl
adc
mov
mov
imul
mov
cmp
repnz
bts
add
mov
dec
sub
adc
vrcpss
lods
bound
push
or
imul
mov
sbb
aas
hlt
xchg
ret
idiv
xchg
and
mov
ds
ins
or
ja
fsubrp
(bad)
test
dec
mov
dec
fs
test
(bad)
out
aam
cli
data16
outs
xor
mov
and
inc
leave
push
mov
in
retf
cmps
repz
(bad)
adc
pop
or
sar
shl
jle
outs
in
cmp
jno
dec
or
and
sub
cmp
enter
(bad)
mov
jmp
imul
push
call
nop
cmps
ja
inc
dec
sbb
loop
sti
hlt
in
cmps
movs
mov
jmp
xchg
mov
in
inc
scas
mov
outs
add
push
arpl
mov
dec
mov
cmp
adc
xchg
adc
and
imul
pop
pop
jecxz
pusha
xchg
ds
mov
call
(bad)
inc
mov
adc
out
rol
repz
sub
movs
add
mov
push
icebp
ret
jns
mov
ja
popf
xchg
jae
pop
add
xchg
psubusb
mov
jmp
repz
and
repnz
push
push
int3
shr
mov
push
cli
jle
push
enter
movs
test
and
pop
xchg
ffreep
jne
sub
jg
mov
popa
or
js
jo
out
dec
mov
mov
cmp
enter
pop
xchg
xor
das
mov
lock
xchg
push
mov
mov
mov
cmp
ins
aad
sar
fld
fsub
clc
mov
(bad)
mov
cmp
cdq
inc
push
pushf
add
jmp
js
push
mov
adc
pop
xchg
mov
clc
cmp
(bad)
cdq
xchg
jmp
lahf
lods
mov
jnp
in
pop
cmc
sahf
mov
pop
push
xchg
aad
xchg
push
int
sbb
xchg
jl
cmc
sub
inc
jle
loopne
repnz
aas
fimul
popf
imul
cmp
inc
lahf
pop
mov
jno
cmps
jmp
stos
sub
and
ds
pop
xor
jo
sti
jo
cmp
mov
cmc
scas
shl
mov
mov
int3
stc
pop
sub
add
in
inc
or
in
xchg
repz
push
mov
pop
jae
lods
(bad)
in
jl
pop
inc
mov
pop
and
loop
and
xchg
test
out
fadd
pop
mov
mov
adc
(bad)
mov
scas
leave
leave
cmp
cs
(bad)
clc
loop
adc
nop
je
in
outs
ins
sbb
or
ja
mov
cmp
dec
inc
jmp
pop
lods
hlt
das
xchg
inc
jnp
adc
movs
dec
int
test
stos
xchg
loop
push
pop
lods
xchg
jbe
int3
pushf
xor
ins
cmp
ss
aaa
mov
out
mov
and
push
mov
call
out
push
sbb
rcr
aam
push
out
ins
mov
push
mov
adc
pop
xchg
add
inc
aaa
rcl
mov
dec
retfw
inc
popf
dec
ins
lods
in
mov
(bad)
rol
mov
jnp
jecxz
pop
xchg
pop
mov
xor
inc
call
mov
xchg
cmp
adc
push
test
std
mov
xchg
push
and
(bad)
in
dec
push
mov
and
pop
or
mov
mov
popa
lea
jae
out
mov
sub
movs
dec
jae
lahf
rcr
in
sbb
pextrw
push
nop
int
mov
adc
outs
dec
idiv
iret
call
enter
int
or
imul
mov
(bad)
retf
aas
fsub
ins
xor
xchg
mov
pop
xchg
cmp
mov
cmp
adc
push
rol
sub
cmp
ret
cli
stos
ret
pop
inc
xchg
push
mov
push
xchg
adc
and
imul
fild
mov
xor
or
pop
hlt
or
xchg
and
pop
push
inc
(bad)
repz
call
out
push
sub
xchg
or
sbb
sti
mov
adc
in
sub
mov
int3
xor
and
inc
xlat
loopne
cmp
lock
popf
aad
sub
xchg
add
scas
mov
inc
fldcw
cdq
xchg
stc
ror
daa
xchg
xchg
(bad)
adc
jmp
mov
ins
add
loop
call
and
loope
div
out
cmps
hlt
sub
pop
clc
inc
xchg
rol
xor
add
scas
shl
test
xrelease
jno
call
add
iret
adc
jge
dec
push
call
jo
pop
pop
popa
stos
or
add
out
out
ins
popf
jne
cdq
ret
addr16
jno
sahf
pop
jnp
jle
shl
rcl
jae
sub
aas
test
sbb
imul
(bad)
mov
jecxz
lods
aaa
or
scas
fdiv
mov
sbb
popf
in
or
sub
jae
in
pop
mov
lock
addr16
inc
aad
sar
pop
xor
and
es
xchg
fsubr
cmovl
div
push
lods
retf
xchg
(bad)
xor
or
mov
(bad)
ins
in
fcom
es
iret
js
push
sub
ficomp
sbb
loope
(bad)
mov
add
dec
les
jle
xchg
inc
rcr
sub
int
xchg
push
int3
jae
out
xchg
aam
(bad)
fsub
imul
scas
loop
inc
aam
es
and
sbb
push
or
mov
hlt
clc
(bad)
int3
and
pop
leave
push
mov
mov
dec
call
or
jl
cwde
(bad)
std
or
xchg
xchg
push
(bad)
std
mov
push
mov
aam
and
jp
pop
lods
dec
mov
loopne
loop
pop
dec
(bad)
mov
addr16
(bad)
hlt
sub
cmp
repnz
daa
xlat
jno
dec
inc
mov
mov
aad
dec
and
scas
push
sbb
popa
test
push
out
in
mov
dec
leave
aam
(bad)
cmp
adc
inc
pop
shr
je
std
fnsave
scas
adc
lds
inc
rcr
ds
popa
dec
jg
data16
push
sti
call
xor
imul
(bad)
xchg
movs
cdq
mov
xlat
mov
sub
adc
xor
pop
jne
imul
sbb
retf
aas
dec
pop
xchg
daa
je
das
dec
adc
jns
pop
out
in
loop
xchg
out
dec
push
mov
jle
outs
and
fnsave
pop
jge
push
add
shl
mov
and
add
dec
int3
repnz
pop
mov
int3
lods
fisttp
leave
fnstenv
test
push
adc
lahf
sub
cmp
push
out
(bad)
call
bound
scas
sbb
sahf
into
rcl
push
sbb
sub
pusha
ror
push
(bad)
adc
xchg
mov
das
xor
push
retf
rcr
icebp
sub
rcl
out
icebp
adc
cs
mov
shl
arpl
rol
lock
xchg
xor
(bad)
jne
shl
mov
sub
nop
xchg
pop
xchg
inc
mov
dec
fldenv
or
lods
push
sbb
push
call
(bad)
mov
call
xchg
pop
pop
sahf
mov
add
arpl
scas
sub
xchg
sub
or
scas
add
les
rcr
ss
push
rcl
inc
inc
and
lahf
(bad)
imul
daa
xchg
inc
push
int
imul
mov
pop
(bad)
push
lahf
push
pop
xchg
xchg
sbb
pop
and
out
mov
or
cwde
xchg
mov
cli
inc
ror
xchg
scas
lods
stc
pop
mov
adc
out
cmp
outs
mov
cmp
fbstp
cmps
sbb
ror
stos
dec
inc
add
and
xchg
cmp
int3
cmp
mov
iret
mov
movs
fmul
mov
mov
scas
not
dec
sbb
jns
fwait
and
pop
fiadd
jle
mov
mov
mov
jp
jp
pushf
sbb
sub
dec
fdivrp
rcl
xchg
data16
call
xchg
fs
retf
push
mov
jp
pusha
retf
xor
jne
test
repnz
sub
sbb
cmps
shl
addr16
jg
ins
mov
bound
dec
mov
jg
pop
test
jp
jg
xchg
xchg
xor
aas
and
(bad)
mov
retf
add
rcr
fnstcw
loop
fld
jo
mov
jmp
sbb
(bad)
out
popf
vpcomuq
jns
je
xor
jnp
and
inc
call
xchg
push
pop
shl
int3
jae
les
iret
xchg
jns
clc
dec
loope
arpl
ret
jmp
and
mov
jmp
cmp
jmp
jmp
add
fstp
shl
outs
inc
mov
cmp
dec
xor
sbb
mov
mov
mov
cmp
ret
mov
ret
lds
pop
pushf
sar
mov
jmp
mov
scas
and
sub
ins
and
cld
pop
fpatan
jo
mov
pop
popa
out
xlat
mov
jecxz
movs
cwde
fs
adc
ja
xchg
div
movs
add
jge
shl
(bad)
fmul
inc
cs
jp
xor
cmp
adc
jmp
inc
sti
out
sub
pop
push
xchg
scas
cwde
add
ins
cdq
call
popa
out
sbb
out
(bad)
stos
sbb
and
out
sahf
dec
add
cs
pop
cs
cwde
add
setle
nop
popa
bound
aas
lods
dec
adc
mov
or
les
rcl
(bad)
cmp
pop
jmp
jb
pop
push
sbb
fdivr
sub
mov
repz
xor
and
adc
push
scas
xor
addr16
(bad)
call
jns
xor
ror
cmp
popf
in
mov
stc
or
enter
jne
dec
cmp
das
push
cmc
and
sti
push
imul
ds
mov
aas
push
jecxz
arpl
and
mov
out
pop
mov
cs
imul
stos
jmp
in
pop
mov
data16
outs
int
or
cs
sbb
cmp
mov
bound
add
cmp
pop
push
push
inc
jecxz
pop
fst
mov
or
or
sub
cmp
mov
mov
ins
ret
or
adc
inc
(bad)
jge
cmp
inc
adc
retf
ret
add
xchg
outs
push
imul
and
bound
das
pop
test
int
stos
out
lods
pop
jmp
js
cmp
mov
adc
mov
and
adc
scas
xchg
mov
je
push
or
sub
push
neg
jp
rol
call
cwde
push
sbb
mov
outs
stos
ss
xor
out
and
xchg
mov
jnp
retf
xchg
xchg
repz
mov
js
dec
scas
mov
jae
push
sub
xchg
cmp
ja
(bad)
pop
test
stos
dec
fnsave
and
in
sub
je
arpl
xor
mov
je
ds
jae
inc
lds
ret
or
cli
inc
pop
aam
cmc
or
imul
adc
daa
int
jl
push
cmp
inc
addr16
adc
into
rcr
cmp
call
iret
sub
imul
mov
retf
enter
jecxz
dec
out
dec
sbb
ja
sub
cmp
cmp
idiv
mov
mov
in
pop
ror
xchg
pop
mov
test
out
icebp
adc
mov
(bad)
xchg
jnp
outs
pop
mov
dec
fsubr
xchg
or
aaa
loopne
push
mov
push
in
jle
aad
mov
cs
push
fsubr
push
fdivr
cmc
leave
js
fcomp
loop
stc
push
std
xchg
pop
shl
or
push
aaa
push
jbe
push
sub
clc
jg
inc
fadd
fiadd
and
push
ja
cld
das
or
mov
push
enter
(bad)
push
add
cmp
adc
in
fwait
clc
cmc
mov
jo
mov
enter
in
fld
fmul
sub
in
mov
inc
sbb
fprem1
mov
sub
enter
pusha
sub
mov
mov
jae
sub
les
test
add
sub
cmp
stos
dec
and
inc
fucom
mov
mov
cdq
jbe
or
mov
je
push
push
dec
mov
(bad)
std
mov
bound
inc
(bad)
out
sti
test
adc
fwait
xor
jno
bound
xchg
push
add
shl
pop
ror
inc
adc
adc
dec
mov
mov
inc
add
stos
jns
push
pop
mov
cs
cwde
inc
sub
cdq
cdq
fmul
inc
mov
jnp
jmp
add
mov
rol
cli
lods
inc
add
mov
xchg
idiv
ins
mov
stc
test
jmp
inc
or
adc
aam
or
inc
loope
jbe
pop
pop
or
aaa
adc
aad
aad
or
call
cmps
(bad)
aad
cmp
ja
loopne
mov
mov
aam
pop
test
pop
or
jae
xor
xchg
in
outs
pop
pop
dec
cmps
out
or
dec
test
jb
pop
inc
movs
loopne
dec
movs
std
scas
fst
in
jp
pop
jle
loope
jge
xchg
mov
inc
sub
jecxz
ja
cmc
lods
jbe
add
inc
adc
xchg
mov
push
pop
push
sbb
xchg
inc
add
lods
inc
sbb
mov
ret
pop
or
ja
repz
adc
mov
cmp
stos
push
push
add
or
jmp
mov
fmul
add
(bad)
jge
ret
xchg
mov
adc
inc
push
dec
in
out
xchg
sahf
std
push
push
test
and
fadd
inc
adc
jecxz
je
sbb
test
cmp
out
pushw
jge
mov
(bad)
mov
loopne
lods
inc
adc
stos
inc
adc
dec
mov
mov
retf
sub
pop
add
push
add
and
not
shl
call
popa
xor
mov
or
mov
fild
sbb
rep
xchg
pop
inc
test
pop
or
mov
lock
or
scas
mov
sub
movs
ins
por
pop
add
test
enter
loope
jo
std
mov
adc
out
push
(bad)
leave
sub
xchg
leave
ds
jnp
xlat
push
add
lahf
lahf
enter
mov
sub
pop
retf
(bad)
or
dec
iret
mov
push
add
pop
pop
and
movs
js
cvtdq2ps
sub
inc
adc
xor
nop
sub
cmovae
mov
mov
clc
mov
aas
jnp
dec
adc
clc
scas
xchg
clc
add
mov
mov
retf
and
test
cmp
mov
out
out
or
(bad)
jg
lock
jo
push
jne
mov
rcr
loopne
mov
dec
bndstx
out
and
stos
dec
or
jg
or
call
cmp
test
outs
sub
movs
arpl
sti
lods
mov
xor
and
loope
cli
cmp
lea
cli
mov
xor
push
add
cmp
xchg
jmp
xchg
fst
shr
and
sbb
cld
aas
outs
adc
imul
pushf
outs
or
ror
inc
leave
cwde
pusha
aaa
in
popf
retf
int
popf
(bad)
ds
scas
int3
and
dec
rcr
add
mov
pop
xor
push
add
int
(bad)
mov
mov
sar
push
enter
sub
sub
mov
mov
jae
sbb
movs
loopne
shl
dec
rcl
push
fdiv
jmp
addr16
cmp
mov
fidiv
pop
or
sub
xchg
shl
or
add
je
mov
jg
pop
aaa
or
mov
mov
push
lahf
fldenv
mov
mov
xchg
aad
ja
or
retf
int
into
mov
mov
xor
and
stos
xchg
mov
lahf
rcr
aas
push
test
xor
popf
jmp
mov
mov
adc
pop
xchg
clc
cmp
mov
ret
adc
inc
movs
loopne
inc
lods
cmc
push
adc
cmp
push
and
pushf
jo
sub
adc
outs
mov
sub
loop
gs
jb
pop
dec
fcomp
fbstp
fisttp
mov
(bad)
fsub
ja
jg
xlat
push
adc
test
sbb
ins
or
in
pop
mov
imul
lods
xchg
retf
and
xchg
std
movs
mov
xchg
(bad)
push
adc
icebp
cwde
mov
(bad)
mov
inc
div
daa
arpl
mov
fsub
sub
mov
mul
add
mov
push
(bad)
pop
adc
addr16
mov
(bad)
rol
stos
je
sbb
jmp
jo
loop
xchg
(bad)
dec
and
pop
pop
rcr
stos
enter
cmps
fwait
rcr
out
lahf
fld
(bad)
test
out
mov
in
xor
xchg
imul
mov
xlat
inc
adc
pop
push
xlat
lea
shl
mov
lea
xchg
mov
push
inc
mov
ss
mov
mov
jmp
arpl
out
bound
in
imul
pop
ins
mov
inc
adc
mov
test
cs
out
test
sbb
into
pop
add
scas
xchg
lock
xchg
fwait
rcl
jecxz
sahf
fisubr
jp
in
and
nop
loope
mov
sub
mov
imul
push
add
dec
mov
and
adc
add
xchg
adc
cmp
mov
sub
pop
mov
fcom
stc
mov
jbe
mov
and
sub
shr
jmp
scas
popa
or
dec
stos
jmp
loope
icebp
mov
int
arpl
pop
pop
mov
rol
or
(bad)
push
cmp
cmps
je
sbb
inc
sbb
inc
stc
cmp
aad
ins
cmp
mov
xchg
std
push
les
retf
aaa
add
outs
cmp
dec
test
and
lahf
jp
sbb
in
add
scas
js
in
movs
loopne
js
out
pop
xor
and
les
stos
leave
sub
jmp
pop
sbb
mov
push
cmp
xchg
out
pop
pop
push
retf
out
add
mov
and
out
xor
fs
out
mov
inc
sbb
xchg
(bad)
in
ds
in
jae
xchg
outs
sub
scas
jg
(bad)
test
sbb
cmp
mov
das
inc
lock
mov
or
xchg
nop
enter
into
pop
or
cmps
out
std
stos
push
adc
mov
retf
jg
sbb
xchg
xchg
iret
push
dec
(bad)
leave
pop
or
mov
mov
and
mov
xor
mov
jle
lock
sub
add
(bad)
nop
jl
push
pop
ficomp
mov
and
cmps
repnz
sbb
pop
aam
fbstp
mov
jae
sbb
rcl
sar
fidiv
lea
or
dec
pop
into
cdq
sahf
div
addr16
addr16
push
aas
cmp
unpcklps
and
(bad)
xchg
test
push
inc
scas
cmc
pop
xor
pop
or
mov
xor
scas
jmp
mov
cld
xor
(bad)
push
cmp
mov
js
jmp
adc
rcr
call
inc
mov
cdq
mov
push
fiadd
lods
cld
xor
movs
inc
adc
push
inc
fild
data16
movs
jne
cli
mov
push
pop
fisttp
mov
pop
or
dec
adc
mov
fcomp
imul
add
cmps
std
push
cmp
mov
inc
or
mov
adc
lock
mov
fld
inc
sub
push
dec
scas
jmp
inc
fld
rcl
call
fwait
sar
fdivr
add
sbb
mov
sbb
sub
test
in
sahf
cmc
or
shl
jae
loopne
test
iret
sahf
lahf
enter
fwait
xchg
xlat
cmp
fdiv
pop
hlt
xchg
xchg
sar
cmc
cmp
in
push
pop
inc
xor
scas
jge
leave
mov
jmp
movs
fist
adc
int3
cmp
rcl
sti
lods
push
adc
mov
ret
push
add
pop
fst
sti
mov
mov
sub
pop
fadd
mov
jl
neg
stc
mov
jge
or
fsubr
add
popf
leave
add
popf
cmps
(bad)
pop
sbb
stos
ja
cli
lods
bound
loop
les
mov
gs
loope
pusha
and
mov
fcomp
lods
lds
je
repz
icebp
push
cmp
lahf
in
gs
jns
clc
mov
mov
lds
sbb
pusha
movs
into
push
xor
mov
ror
imul
idiv
sbb
repz
in
xor
lods
popa
xor
rep
arpl
out
ins
cmp
cmc
sub
cld
xor
jmp
sbb
loopne
(bad)
cmps
jg
(bad)
test
clc
and
jmp
sub
imul
add
jno
imul
inc
adc
xchg
jnp
cld
mov
lock
xchg
lods
std
dec
and
inc
lds
adc
jecxz
xor
jp
xchg
xchg
in
sub
dec
int3
mov
(bad)
and
imul
movs
rcl
pop
or
imul
mov
jnp
sbb
(bad)
mov
iret
dec
xor
push
test
mov
retf
ss
mov
aaa
add
mov
out
jb
sub
mov
sub
add
and
cmp
vpmacssdd
out
popa
and
neg
cmp
jle
mov
sbb
out
scas
mov
ja
xchg
mov
(bad)
jnp
sub
mov
add
lea
jp
mov
ror
pop
aaa
or
cmps
fisubr
or
in
cdq
add
jecxz
push
pop
push
shr
sbb
mov
fcom
cmp
cmps
fstp
jne
enter
or
mov
mov
fiadd
je
es
inc
mov
push
xor
jg
xchg
imul
push
dec
jne
into
popf
fldenv
mov
leave
mov
mov
loop
nop
jecxz
(bad)
aam
jmp
mov
xchg
les
pop
test
pop
es
outs
sar
push
push
or
test
push
adc
xor
adc
inc
fnstenv
scas
(bad)
jno
jg
mov
call
add
dec
shr
cmps
aam
je
mov
aad
(bad)
lods
mov
push
adc
lahf
jl
dec
adc
or
jl
jns
popf
dec
xor
(bad)
fistp
inc
fisubr
data16
stos
jne
in
jno
adc
cmp
push
mov
cs
mov
fwait
ret
loope
test
cmp
and
pop
mov
ficomp
in
addr16
xchg
clc
inc
add
xchg
cld
xchg
push
(bad)
mov
je
arpl
jg
clc
lea
in
push
cmp
fidiv
popa
mov
adc
lea
rcl
adc
mov
aaa
inc
xor
push
mov
and
jecxz
push
lods
jmp
cmp
lahf
push
loope
shl
mov
in
sub
dec
and
xchg
and
cmp
mov
icebp
xor
sbb
outs
mov
mov
pop
je
and
sbb
mov
mov
or
mov
rol
lock
mov
fmul
outs
retf
mov
retf
mov
ficomp
clc
mov
inc
xlat
test
mov
adc
mov
shl
jmp
movs
sar
jnp
hlt
inc
ss
xchg
in
push
(bad)
jle
hlt
sub
mov
sbb
cmps
xchg
out
or
bound
shr
repz
mov
call
sub
jmp
pop
movs
cmc
or
xlat
xor
jo
mul
out
mov
fiadd
jbe
call
shl
cwde
loop
ds
scas
jmp
mov
push
adc
imul
or
mov
xor
or
mov
pop
cmc
cmps
xlat
xor
das
sbb
dec
sbb
(bad)
aaa
jno
fiadd
jns
xchg
inc
adc
add
(bad)
fwait
out
sub
xchg
xlat
or
int
cs
mov
sub
jmp
jbe
(bad)
cmp
sbb
add
inc
loopne
fldcw
mov
cli
and
retf
int3
mov
popf
out
jg
stos
ins
push
div
test
into
lahf
mov
in
and
stos
sti
add
les
inc
stos
fdivr
mov
or
push
xor
jae
xchg
outs
sbb
mov
and
mov
or
call
sahf
sti
push
and
stos
push
xor
xchg
mov
test
cs
cs
push
in
mov
imul
stc
mov
repz
fwait
call
nop
jmp
sub
or
stos
mov
jo
rcl
in
and
out
mov
shl
icebp
and
arpl
mov
xlat
add
xor
dec
sub
test
cs
das
jmp
test
xchg
xlat
push
jo
xlat
ss
inc
and
xchg
outs
cs
dec
adc
inc
fisubr
jp
push
push
mov
jp
loope
dec
int3
mov
pusha
xor
movs
ins
push
out
test
lods
cwde
loop
jge
neg
adc
pop
lods
fst
push
(bad)
mov
ret
mov
xchg
dec
cmp
data16
std
mov
fsubr
jmp
xchg
out
sub
fisubr
or
mov
adc
ret
mov
into
dec
aas
sbb
fwait
outs
ds
scas
inc
xor
sub
jb
icebp
daa
inc
mov
or
rol
cmp
adc
test
fwait
inc
cmp
xchg
aaa
push
mov
aaa
jbe
in
adc
mov
adc
movs
mov
(bad)
xor
push
adc
pop
mov
enter
outs
aam
push
sub
add
xor
adc
mov
push
lds
je
les
jae
cdq
addr16
xchg
dec
xor
out
jb
sbb
xor
dec
mov
mov
and
pop
gs
mov
cmps
loopne
in
pop
lods
jmp
jge
pop
or
push
dec
xlat
sbb
(bad)
es
shl
jge
cmp
cmp
lea
push
movs
mov
sub
jno
xchg
mov
xor
ss
mov
or
fcom
cld
jo
cmp
sub
fwait
cmp
jmp
dec
aam
out
xchg
mov
xor
in
push
cmp
mov
dec
fsubp
mov
xchg
mov
cmp
dec
jo
jge
add
jg
jno
pop
loope
retf
jno
xor
xor
jae
je
inc
in
sbb
dec
or
sub
in
rcl
fwait
shl
jno
sub
adc
and
cmps
scas
iret
mov
and
xor
dec
sub
aaa
jns
jbe
imul
xchg
ret
mov
jge
xor
inc
ret
lea
jmp
rcr
dec
or
movs
sar
rol
adc
pusha
aas
or
jmp
call
ja
pop
jbe
jne
dec
sub
imul
push
je
in
gs
fild
jo
jo
daa
jecxz
fldcw
sub
call
add
sbb
lods
cli
sub
nop
mov
leave
gs
dec
cmp
jle
and
dec
lock
cli
outs
cmp
pop
push
dec
sbb
push
sub
jp
das
push
push
outs
push
jg
inc
mov
mov
cld
popf
in
(bad)
(bad)
mov
leave
mov
rcr
xor
jg
das
inc
xor
pusha
xor
xchg
fcom
lods
rcl
pop
popf
aas
inc
mov
loop
xchg
xchg
mov
sbb
or
(bad)
adc
dec
sbb
inc
pause
mov
adc
mov
add
mov
enter
rcl
aad
scas
clc
movs
sar
in
mov
arpl
dec
or
pop
adc
dec
sbb
mov
mov
lahf
pop
or
jmp
int3
popf
jmp
shr
push
jae
jns
movq
xchg
rcl
mov
mov
jae
sub
sub
ds
push
stos
fild
mov
and
push
pop
dec
push
pop
sub
dec
ds
test
mov
mov
cs
sbb
jns
or
add
pop
pop
out
out
lods
repz
in
mov
push
call
cmp
sub
sub
imul
xchg
scas
les
sub
dec
add
dec
adc
inc
pop
js
push
cmp
(bad)
scas
out
mov
push
mov
fnstsw
dec
adc
push
add
ror
inc
xor
cdq
mov
or
sbb
mov
mov
in
fist
hlt
stos
mov
push
mov
mov
sub
rol
outs
lods
fdiv
stos
mov
sbb
jb
xchg
fnsave
sbb
outs
adc
pop
loope
jmp
mov
xchg
xchg
test
hlt
inc
mov
fdiv
cld
lahf
mov
mov
and
fnstsw
shr
data16
shl
cmp
movs
aam
test
sbb
pop
push
dec
out
fidiv
mov
pushf
mov
jp
ss
mov
or
out
mov
mov
fisub
adc
xchg
std
gs
cld
(bad)
(bad)
das
cli
mov
jno
adc
aam
je
mov
sbb
sbb
in
rcl
pop
push
or
jle
push
adc
or
sub
inc
aas
ja
and
inc
jmp
mov
mov
or
aaa
stc
neg
movs
fist
and
push
sub
gs
sbb
dec
sbb
mov
rcl
in
stos
sar
pop
sbb
test
test
dec
mov
jecxz
sbb
in
enter
test
jmp
cmp
js
sbb
mov
xor
pop
movs
ret
cdq
les
jg
inc
push
leave
pusha
add
adc
aaa
addr16
outs
jmp
mov
repnz
aas
jns
or
loope
jno
cmp
pop
cdq
or
inc
sub
and
retf
or
jp
xor
dec
loope
jb
pop
sbb
loop
fldcw
jnp
pusha
adc
adc
mov
cmc
xchg
mov
addr16
or
mov
ficomp
dec
cmp
test
fstp
arpl
and
mov
add
test
jno
pop
cmp
xchg
mov
adc
cwde
jmp
retf
punpckhbw
inc
sbb
fs
ss
xor
pop
xrelease
and
add
(bad)
clc
mov
xchg
mov
mov
xor
add
js
sti
jne
mov
fwait
iret
sahf
int
mov
jns
jnp
iret
mov
call
pop
out
or
mov
bound
or
ret
jae
pop
sahf
loope
mov
adc
daa
ror
pop
cmovge
add
aas
int
cmp
and
bound
inc
sub
or
out
(bad)
xchg
aad
and
mov
xchg
cwde
(bad)
mov
(bad)
ror
cmp
dec
adc
sbb
dec
das
inc
add
and
jb
(bad)
push
jecxz
es
mov
or
pop
cs
cmp
sub
les
loop
loope
into
movs
fistp
in
rcl
out
mov
call
add
aad
inc
out
xchg
ror
iret
mov
push
mov
push
sbb
dec
jecxz
inc
repnz
call
cmc
mov
cmc
push
adc
add
fcomp
popf
rcr
ds
adc
push
pop
movs
(bad)
mov
xor
inc
dec
addr16
jmp
mov
xor
cld
and
inc
adc
sub
int
cli
mov
xlat
mov
aad
xchg
shr
dec
hlt
nop
(bad)
das
and
jl
in
and
pop
push
inc
adc
imul
inc
add
aam
hlt
test
adc
mov
ret
call
bound
je
jmp
icebp
mov
adc
inc
or
jecxz
xchg
inc
dec
xchg
les
iret
pushf
adc
sub
pop
loopne
xlat
mov
mov
neg
add
inc
cdq
iret
cmp
es
and
sub
fisttp
rol
jb
mov
xchg
fldcw
repz
gs
cdq
mov
mov
or
or
sub
pop
pop
leave
xchg
push
xor
stc
popf
out
push
cld
stos
out
mov
mov
clc
xor
xchg
nop
loop
push
sti
(bad)
les
test
fdiv
call
ss
xor
push
add
dec
add
sub
jae
sub
jae
and
inc
jo
inc
out
cmp
mov
and
jge
outs
xor
test
mov
cmp
jo
ins
out
add
dec
adc
inc
in
scas
jmp
dec
call
jecxz
nop
or
xor
pop
sub
pop
xchg
movs
jmp
aad
mov
mov
in
lahf
retf
cld
mov
pop
sbb
adc
test
(bad)
fmul
and
leave
arpl
inc
add
lock
add
push
(bad)
adc
(bad)
xchg
test
out
fnstsw
fidivr
in
mov
in
push
repz
lods
std
gs
xchg
jmp
cli
jns
or
xor
gs
pop
lods
daa
jbe
cli
sub
ja
pop
mov
fisub
jmp
push
div
push
inc
push
add
xor
or
inc
loopne
adc
iret
cmps
je
or
jmp
jmp
sub
mov
popf
xchg
mov
inc
adc
(bad)
movs
(bad)
xor
add
fist
and
xchg
fisttp
push
mov
xor
shl
push
lock
push
dec
push
js
or
sub
mov
or
or
sbb
call
cld
sub
or
mov
xor
or
cmp
dec
and
sub
scas
stc
mov
mov
xchg
stos
popf
mov
pop
mov
or
and
mov
loopne
enter
inc
or
cmps
fbstp
lahf
rcr
enter
arpl
or
inc
pushf
cmp
fld
adc
outs
sbb
add
out
mov
mov
mov
into
cmp
arpl
mov
mov
inc
add
loopne
scas
cmp
lahf
inc
sbb
je
je
push
jecxz
imul
mov
rcl
push
add
test
xchg
popf
mov
pop
mov
jmp
or
cmp
dec
in
fwait
shl
xchg
mov
sbb
popf
cmps
pop
adc
pop
xchg
sbb
xlat
bound
or
(bad)
jl
xchg
int
cmps
frstor
sub
adc
les
inc
in
mov
xchg
nop
xlat
fwait
jmp
mov
and
in
clc
mov
cmp
push
dec
pcmpeqb
scas
dec
or
dec
jno
inc
push
push
pop
es
and
iret
adc
mov
rol
xlat
ins
out
fwait
int3
mov
xchg
test
xchg
rol
outs
push
clc
shl
movs
nop
addr16
sahf
dec
sub
and
push
pop
xor
jne
dec
sub
ret
add
xchg
push
add
and
xchg
loop
push
ret
nop
int
gs
loop
fld
les
clc
sahf
iret
outs
cmp
aam
repnz
mov
adc
mov
inc
add
cmps
aad
aad
ret
inc
loope
movs
aad
sbb
dec
sbb
or
outs
xor
cmp
push
(bad)
jle
bound
sar
push
fnstenv
sub
outs
add
inc
data16
dec
add
mov
fiadd
push
jmp
je
add
outs
enter
dec
or
inc
or
add
das
addps
push
adc
inc
ds
cmp
mov
popf
push
rep
xchg
movs
sub
jns
and
dec
pop
pop
mov
cmps
std
xor
pop
cmp
push
pop
add
fmul
dec
or
push
out
push
gs
sub
mov
lods
mov
xchg
lds
ins
adc
push
add
not
adc
pop
adc
jo
cmc
push
jmp
ins
fcmovbe
adc
enter
jle
pop
aaa
push
sub
les
jg
xchg
out
sbb
pop
adc
jno
mov
inc
ror
push
mov
outs
mov
cs
stc
mov
inc
jmp
fld
push
or
jae
pcmpeqd
sub
ds
pop
push
retf
bound
dec
or
mov
call
inc
sbb
push
idiv
inc
adc
sub
sbb
ins
cs
sub
(bad)
mov
icebp
mov
adc
xor
shl
cdq
popf
jl
jmp
mov
adc
das
pop
addr16
cmp
push
cmp
mov
mov
mov
stos
jno
jl
repz
je
movs
repz
test
xchg
repnz
ror
pop
and
jge
pop
push
jns
ins
out
in
add
push
mov
scas
pop
jno
jecxz
(bad)
clc
mov
je
push
push
and
fisttp
cwde
mov
mov
mov
xchg
add
ss
mov
mov
lods
call
retf
mov
add
test
xlat
mov
adc
push
inc
sub
and
jno
cmp
ds
dec
mov
xor
je
das
mov
sub
and
mov
sbb
add
mov
popa
repnz
fwait
call
call
push
push
movs
hlt
sub
cmp
aaa
and
push
sbb
movs
cld
mov
adc
sub
adc
cmp
icebp
sar
xchg
in
fld
minps
data16
inc
adc
add
(bad)
mov
mov
jns
jg
inc
scas
in
add
icebp
push
bound
jnp
das
sbb
pop
jae
and
adc
mov
jle
jnp
and
mov
mov
mov
or
push
sbb
adc
outs
jmp
cwde
movs
icebp
mov
cmp
mov
gs
into
mov
out
sub
outs
cmovg
pop
cs
clc
and
leave
jmp
xor
add
jnp
xor
inc
out
dec
cmp
xor
jae
imul
lods
icebp
mov
mov
mov
idiv
ror
retf
inc
pshufw
and
adc
lods
in
mov
xchg
jp
pop
out
jg
pop
sbb
imul
js
xor
cmp
or
jge
inc
and
or
and
retf
add
loop
rol
out
mov
push
dec
test
pushf
push
sub
xor
in
lds
xor
cld
dec
cmp
iret
aam
leave
popa
adc
and
adc
rol
outs
sub
fs
jmp
les
mov
clc
inc
push
bound
dec
or
push
cmp
pop
sti
add
int3
mov
icebp
mov
mov
add
jp
ins
add
xor
daa
ja
je
fisttp
mov
sbb
sub
frstor
leave
ds
adc
adc
add
sub
pop
push
ss
scas
int
repnz
fisttp
cmp
mov
test
iret
pusha
sbb
test
mov
push
or
jno
mov
mov
push
adc
ret
mov
in
sahf
fbld
cmp
daa
retf
clc
or
aad
popa
cmp
push
pop
dec
mov
push
aas
dec
mov
push
call
loopne
cmc
movs
in
dec
cs
add
jmp
jl
lods
push
imul
xchg
loopne
cmps
cs
sti
mov
mov
imul
cmp
jnp
inc
xchg
hlt
bound
ins
repnz
aad
dec
or
loop
push
push
or
into
movs
aam
fstp
data16
or
jns
cmp
movs
(bad)
mov
inc
add
fsubr
pop
jecxz
aad
fbstp
add
icebp
test
lock
inc
nop
or
adc
sub
mov
mov
xchg
iret
mov
inc
cmp
in
neg
add
push
xchg
je
loope
test
lahf
mov
arpl
jae
xor
push
ds
in
lahf
pop
or
jno
push
in
push
enter
lds
lahf
fist
fwait
(bad)
xrelease
or
xor
(bad)
mov
push
push
inc
sub
mov
mov
mov
adc
fnsave
pop
cdq
rcl
bound
or
inc
jmp
clc
pusha
mov
lock
je
pop
push
aad
cmps
lods
jge
dec
cmp
xor
jns
sub
icebp
sahf
retf
lods
fisttp
ror
sahf
fimul
hlt
jp
add
rcl
xchg
mov
cli
adc
push
add
sub
data16
shr
shl
(bad)
shl
pop
repz
jno
sub
jae
dec
in
imul
sbb
lods
mov
mov
mov
sub
and
inc
sbb
xchg
fldcw
xchg
in
test
mov
jno
aas
imul
dec
(bad)
jg
ins
add
mov
jecxz
jecxz
rcl
sbb
jno
ins
invd
jle
daa
push
je
pop
lds
push
call
clc
xchg
cmps
cmps
int3
jnp
mov
mov
int
into
mov
mov
frstor
ja
dec
in
dec
or
push
pop
aam
mov
jle
sub
mov
cmp
jne
or
pop
(bad)
cmps
iret
(bad)
in
scas
(bad)
mov
cmp
push
jl
jge
push
push
cmp
(bad)
jge
imul
sub
dec
fwait
out
icebp
xchg
sti
mov
je
ins
adc
jmpw
xchg
aam
call
fnstenv
or
(bad)
cmps
fdiv
popa
adc
scas
mov
push
and
mov
pop
leave
rcr
push
aas
and
int
aad
cdq
imul
mov
dec
adc
dec
sbb
dec
xchg
sbb
inc
aas
outs
(bad)
jmp
jecxz
cmp
mov
xchg
xchg
or
sbb
adc
push
cmp
retf
xchg
push
je
daa
shr
mov
mov
mov
fisub
push
ss
mov
cmp
bound
das
pop
adc
ror
data16
and
loope
shl
xor
sahf
ret
mov
ss
pusha
and
out
aam
aad
jno
or
fs
in
jl
imul
adc
scas
jmp
mov
ins
sub
(bad)
and
add
mov
scas
out
outs
nop
cmp
lock
push
int3
arpl
fs
jbe
jle
cld
test
pop
or
jns
xor
out
mov
call
inc
pop
push
add
mov
add
into
cmp
imul
in
test
pushf
in
rcr
push
add
and
cmp
sar
dec
aaa
data16
sub
ffreep
test
xchg
pop
sub
pop
out
and
or
sub
rol
dec
or
data16
adc
dec
mov
add
repz
scas
call
jnp
loop
ins
xor
aaa
jnp
dec
jp
inc
(bad)
es
inc
cs
daa
rol
hlt
mov
test
adc
add
jb
icebp
xchg
sbb
cmp
xchg
rol
jp
pop
out
enter
mov
mov
imul
mov
push
push
dec
sbb
les
mov
fwait
jmp
lahf
enter
sbb
addr16
xchg
xchg
ficom
pop
sbb
xchg
leave
mov
inc
call
inc
add
jmp
fdiv
cmp
mov
nop
retf
add
inc
or
int
out
mov
inc
cmp
pop
xor
(bad)
aad
mov
data16
loopne
loop
fnstcw
pop
stc
movs
xlat
add
push
cmp
pushf
scas
call
jb
dec
ss
rcl
push
add
ret
xchg
cwde
in
data16
outs
cmp
xor
push
pop
inc
bndstx
daa
pop
sbb
sbb
clc
mov
mov
fisub
push
aaa
sbb
pop
outs
aas
dec
adc
push
push
push
ins
or
mov
mov
pushf
(bad)
jle
out
adc
enter
dec
cmp
ret
mov
adc
dec
or
dec
movntq
mov
push
xor
mov
inc
aaa
dec
out
(bad)
aas
popa
sub
xchg
jge
push
and
pop
loop
fisubr
out
test
jbe
pop
mov
push
and
push
retf
movs
push
add
or
dec
fwait
(bad)
mov
xchg
ret
test
dec
cmp
dec
aaa
ins
pop
jmp
fild
scas
imul
mov
imul
ficomp
push
cmp
xor
cmc
outs
cs
jnp
ja
xchg
ret
add
ins
mov
and
jae
inc
aaa
dec
cmps
fst
aam
mov
pop
out
dec
jae
and
mov
arpl
into
retf
lahf
leave
add
jbe
inc
xor
cmps
in
scas
jmp
xchg
dec
and
pop
xchg
adc
arpl
add
inc
xor
sbb
inc
mov
inc
cmp
scas
jmp
and
aaa
out
inc
mov
mov
in
cmp
adc
mov
pop
xor
inc
cmp
jp
daa
push
mov
jb
push
jnp
dec
add
push
xchg
out
(bad)
jb
sbb
xchg
ret
mov
arpl
adc
mov
std
mov
xlat
cmp
loop
(bad)
nop
mov
push
ins
loop
cli
gs
fild
dec
sub
cmp
pop
xor
jnp
push
cmc
leave
aaa
ins
cmp
inc
adc
adc
inc
loopne
movs
inc
es
pop
(bad)
pop
sub
adc
jge
jle
and
mov
aam
xor
mov
ins
sbb
nop
aaa
pop
xor
xor
addr16
mov
nop
lds
mov
js
xor
dec
or
pop
pcmpgtb
sbb
adc
mov
call
jle
inc
xor
pop
push
gs
push
mov
sbb
inc
push
push
cmp
sbb
adc
jbe
jle
pusha
xor
scas
fisttp
cmp
pusha
add
ja
xchg
mov
icebp
mov
gs
cmps
push
es
out
rcr
fimul
out
mov
and
loop
sbb
push
ja
inc
in
mov
xor
or
fimul
aas
inc
cmp
sub
jge
ja
xor
fs
jecxz
arpl
cmp
pop
sub
push
pop
sbb
(bad)
test
mov
mov
pop
add
dec
or
xchg
scas
xchg
rcl
pop
(bad)
scas
retf
mov
pop
sub
adc
and
gs
pop
loopne
stc
mov
pop
dec
add
pop
xor
jmp
sar
test
mov
call
add
jno
or
or
push
inc
adc
dec
pop
inc
or
(bad)
cmps
test
inc
adc
out
cmp
je
pop
cdq
fild
push
call
retf
mov
call
jl
add
(bad)
les
in
sahf
mov
enter
test
xchg
leave
xor
pop
lds
sbb
mov
xchg
iret
outs
cmp
mov
jo
ja
in
cli
scas
lds
mov
add
(bad)
cmp
std
mov
push
addr16
push
add
add
test
adc
or
jg
mov
fidiv
mov
mov
pusha
xlat
cs
outs
loop
loopne
ret
mov
xchg
mov
fwait
push
cmp
bound
cdq
xlat
add
mov
ret
or
dec
jecxz
jmp
es
mov
clc
ret
xchg
xchg
loope
in
add
sbb
and
and
icebp
mov
mov
pop
add
or
pop
test
loope
ret
mov
jns
push
or
pop
or
adc
and
pop
sbb
push
pop
mov
cmps
out
lahf
jecxz
mov
scas
aam
cdq
adc
xor
gs
add
lds
scas
jmp
mov
pop
or
test
mov
jns
cmp
push
jbe
push
mov
dec
pop
inc
in
sub
push
jo
imul
mov
seto
mov
mov
push
pop
adc
cmp
ins
rcr
mul
mov
and
pop
adc
push
movs
or
pop
or
xor
dec
jmp
mov
jne
js
pop
pop
ins
aas
jno
sub
inc
aaa
pusha
sub
call
lahf
jmp
sbb
out
lods
or
push
inc
sbb
les
loop
and
test
sub
sub
ss
or
adc
sub
jno
sbb
jae
push
cmp
shl
jg
jo
adc
aaa
jo
cs
popf
bound
mov
mov
mov
in
ret
jl
pop
in
retf
and
mov
jmp
je
adc
jne
sub
retf
xchg
cmps
fisttp
loopne
test
xchg
rol
sbb
cmp
lds
push
cmp
pop
leave
mov
hlt
push
out
jmp
mov
clc
mov
fisttp
ror
(bad)
(bad)
fstp
jno
xchg
lds
sti
add
mov
gs
(bad)
cwde
mov
test
mov
mov
dec
adc
dec
sbb
push
jbe
inc
cmp
push
aam
clc
mov
imul
std
sub
pop
push
dec
push
push
or
(bad)
fwait
repnz
je
push
fdiv
inc
pop
das
data16
sahf
fimul
mov
popa
aad
sub
adc
inc
stos
xlat
stos
(bad)
mov
scas
std
mov
ja
test
aaa
ins
cmp
jns
imul
jge
inc
jmp
push
and
mov
popf
sbb
and
jns
pop
sub
rcr
push
scas
dec
mov
mov
lods
iret
mov
imul
jmp
and
jle
push
or
(bad)
(bad)
cmc
scas
leave
(bad)
adc
inc
adc
lods
dec
xor
stc
sub
add
and
jbe
dec
adc
xor
ret
ror
and
pop
js
inc
mov
ins
mov
xchg
test
outs
cmp
push
sub
push
pop
push
jne
ret
mov
pusha
loop
movs
jmp
int
test
icebp
mov
push
sbb
je
xor
in
and
in
cmps
jmp
fwait
clc
mov
add
mov
pusha
sub
xchg
call
dec
or
loopne
hlt
mov
push
adc
add
and
dec
idiv
aad
imul
add
add
test
push
outs
or
cmp
push
adc
sub
ss
push
push
adc
or
push
push
push
adc
push
pusha
sbb
push
sbb
or
or
cmp
push
adc
and
pusha
sbb
push
sbb
or
push
sbb
or
test
push
push
push
adc
or
adc
outs
ins
pop
push
push
outs
jno
push
push
adc
or
invd
jno
push
push
adc
pop
push
push
add
sbb
or
push
sbb
push
sbb
push
test
push
outs
and
push
adc
or
and
push
adc
add
or
push
outs
or
cmp
push
adc
sub
push
adc
add
sub
push
adc
push
push
push
adc
loopne
syscall
ins
adc
push
push
adc
push
push
push
adc
loopne
inc
xor
add
or
and
push
adc
push
ss
push
adc
add
or
and
push
adc
dec
push
push
adc
xor
or
and
push
adc
push
ss
push
adc
add
or
and
push
adc
dec
push
push
adc
pusha
sbb
push
sbb
pop
test
push
outs
or
cmp
push
adc
pop
retf
push
or
push
adc
add
add
add
sub
push
adc
push
push
push
adc
loopne
lar
push
outs
and
push
adc
push
push
push
adc
loopne
inc
xor
or
or
lea
push
push
pusha
sbb
push
sbb
add
or
push
sbb
add
sbb
push
sbb
add
in
adc
outs
or
cmp
push
adc
sub
pop
(bad)
ss
push
push
adc
xor
sbb
push
outs
or
cmp
push
adc
sub
cs
ss
push
push
adc
xor
sbb
push
outs
or
cmp
push
adc
sub
push
(bad)
ss
push
push
adc
xor
adc
push
outs
or
cmp
push
adc
sub
(bad)
ss
push
push
adc
sbb
push
outs
jno
push
push
adc
pop
push
push
add
sbb
or
push
sbb
pusha
sbb
push
sbb
add
or
cmp
push
adc
sub
push
adc
ds
push
outs
and
push
adc
sbb
push
sbb
retf
push
push
push
pusha
sbb
push
sbb
add
or
cmp
push
adc
sub
push
adc
cs
push
outs
and
push
adc
sbb
push
sbb
mov
sbb
push
sbb
add
or
cmp
push
adc
sub
push
adc
pop
push
push
outs
and
push
adc
sbb
push
sbb
push
sbb
add
or
cmp
push
adc
sub
push
adc
jl
push
outs
and
push
adc
sbb
push
sbb
push
sbb
add
or
cmp
push
adc
sub
sub
push
adc
pusha
push
push
outs
and
push
adc
sbb
push
sbb
push
sbb
add
or
cmp
push
adc
sub
push
adc
sbb
push
sbb
push
push
sbb
test
push
outs
or
cmp
push
adc
sub
push
push
push
sbb
push
push
adc
dec
push
push
adc
aas
(bad)
or
push
push
adc
aas
jno
push
push
adc
sub
sbb
push
sbb
pusha
push
push
push
sbb
xor
push
sbb
rol
ss
push
push
adc
cmp
cmp
inc
push
push
adc
or
dec
push
push
adc
ss
push
push
adc
push
xor
cs
push
push
push
push
push
sub
push
push
mov
push
push
adc
push
push
add
push
push
push
push
push
push
push
pop
push
push
push
pop
push
push
push
add
push
push
add
sbb
ja
push
push
adc
push
(bad)
inc
push
push
adc
jno
push
push
adc
or
nop
test
jo
je
(bad)
test
sbb
push
sbb
nop
test
sbb
nop
test
sbb
sbb
push
or
sbb
nop
test
push
pop
push
push
enter
push
push
inc
stos
adc
enter
das
fistp
dec
nop
test
push
push
xor
push
push
add
push
push
push
adc
push
invd
sbb
pop
ins
inc
push
push
adc
sbb
sbb
sub
push
adc
adc
ss
push
push
adc
ss
push
push
adc
push
xor
pop
adc
push
push
push
push
push
or
push
adc
sbb
pop
push
push
push
push
push
push
punpcklbw
push
push
sbb
push
outs
pusha
push
push
push
sbb
xor
push
sbb
ss
sbb
inc
push
push
adc
sbb
push
push
adc
into
sbb
push
cmp
push
adc
aad
ss
push
push
adc
ss
push
push
adc
push
xor
adc
push
push
push
push
push
sub
push
adc
sbb
or
push
adc
add
push
push
push
nop
(bad)
inc
push
push
adc
jle
push
adc
jg
push
adc
xor
push
push
adc
es
push
pop
adc
push
adc
jp
push
adc
jnp
push
adc
push
ins
test
push
outs
or
cmp
push
adc
xor
push
ins
or
outs
jno
push
push
adc
sbb
adc
xor
jno
push
push
adc
movs
sar
imul
push
pop
xor
push
pop
jno
push
push
adc
rcl
push
push
push
adc
adc
push
push
push
adc
push
sbb
pop
push
push
push
sbb
push
push
inc
inc
push
or
push
push
pop
push
push
push
push
jno
push
adc
cs
push
push
push
push
or
push
(bad)
mov
push
outs
ss
push
adc
test
or
push
push
push
or
fmul
push
outs
ss
push
adc
test
or
push
push
push
or
push
(bad)
int3
push
push
outs
ss
push
adc
test
push
or
add
sbb
sahf
adc
push
sbb
sbb
or
push
adc
or
push
push
push
or
push
punpcklbw
push
push
sbb
push
or
push
push
push
or
push
(bad)
cld
push
push
outs
adc
push
adc
push
push
push
add
sbb
push
(bad)
sub
push
outs
sbb
je
push
adc
or
loopne
adc
push
loopne
adc
push
sbb
sbb
adc
or
push
adc
jne
push
adc
arpl
push
sbb
adc
adc
ins
and
push
outs
sbb
adc
sbb
pusha
jae
push
adc
jae
push
adc
add
jae
push
adc
or
or
ss
push
sbb
sbb
push
push
adc
sbb
and
jno
push
adc
adc
unpcklps
sub
ss
push
adc
adc
push
xchg
pop
push
push
pop
or
ds
pop
push
xor
push
push
adc
sub
adc
push
sbb
push
ss
push
push
sbb
add
push
push
adc
or
adc
push
sbb
push
ss
push
sbb
sbb
push
push
adc
movhps
aaa
mov
adc
push
sbb
pop
add
or
add
sbb
cmp
push
sbb
sbb
push
push
adc
unpckhps
sbb
adc
push
sbb
sbb
cmp
push
sbb
xor
ins
jo
push
adc
sbb
adc
dec
enter
push
adc
or
unpcklps
dec
enter
push
adc
(bad)
push
adc
push
sbb
adc
cs
push
add
aaa
push
push
sbb
movlps
sub
or
adc
push
sbb
(bad)
ds
cs
push
add
aaa
push
push
sbb
sub
push
adc
or
adc
push
sbb
adc
(bad)
(bad)
sbb
cmp
push
sbb
sbb
push
push
adc
unpcklps
out
push
push
enter
unpcklps
enter
push
adc
adc
movlps
les
test
push
push
sbb
push
add
enter
push
adc
or
femms
add
enter
push
adc
or
femms
add
enter
push
adc
or
or
xor
or
or
xchg
pop
push
push
pop
or
wbinvd
or
or
push
adc
push
adc
push
sbb
adc
or
wbinvd
wbinvd
nop
test
push
push
sbb
sbb
push
push
adc
or
adc
push
sbb
adc
or
ss
push
push
adc
or
ss
push
sbb
sbb
push
push
adc
femms
add
enter
or
prefetchw
add
inc
loope
loope
adc
push
push
adc
adc
adc
push
sbb
pop
add
movups
sbb
cmp
push
sbb
sbb
push
push
adc
sbb
adc
ss
push
adc
sbb
sbb
sbb
adc
add
movlps
sbb
xor
push
push
adc
sub
adc
push
sbb
push
ss
add
push
push
adc
or
adc
push
sbb
push
cmp
push
sbb
sbb
push
push
adc
or
adc
push
sbb
xor
push
sbb
sub
push
adc
or
gs
push
push
sbb
sbb
sahf
adc
jp
ss
push
push
adc
push
pusha
adc
push
sbb
adc
push
jno
push
push
adc
imul
adc
or
gs
push
push
sbb
adc
pop
sysret
xor
sysret
jno
push
push
adc
adc
add
push
push
sbb
enter
push
sbb
push
push
sbb
ss
push
push
adc
adc
push
push
adc
sbb
xor
xor
push
push
pop
push
push
push
push
push
push
push
sub
sbb
push
jmp
push
push
jp
push
push
add
sub
push
rcl
icebp
mov
(bad)
push
push
push
jb
ins
push
jae
dec
jnp
jno
ins
jge
ins
xor
jno
ins
jge
dec
jnp
jp
ins
xor
jae
jge
ins
jb
jl
ds
jnp
ins
ja
jo
sub
xor
xor
xor
pop
imul
ins
jnp
jo
imul
jb
ds
imul
push
jnp
dec
jno
jnp
and
jg
jge
sub
daa
sub
daa
cmp
jnp
xor
jno
ins
jge
ins
xor
push
jae
dec
jnp
jno
ins
jge
dec
jnp
sbb
push
push
pop
push
push
push
push
push
push
push
dec
pop
pop
dec
pop
pop
dec
push
xchg
push
push
push
push
iret
push
push
push
push
jae
jg
ja
jo
js
ja
jb
jnp
push
push
push
push
ds
sub
push
or
jae
fs
inc
xor
jo
push
pop
push
pop
gs
das
inc
sub
cmp
cs
push
das
ja
pusha
ss
inc
xor
cmp
pop
sbb
ja
dec
and
xor
cmps
loop
fnsave
stos
(bad)
test
dec
out
cmps
shl
add
call
out
mov
pusha
mov
mov
mov
es
inc
in
add
add
sbb
and
push
push
adc
jle
out
repnz
jle
mov
enter
hlt
lahf
not
jnp
push
add
add
add
es
jp
or
push
sbb
dec
sub
ds
xor
push
push
ja
popa
or
sbb
outs
adc
jg
fsubr
sbb
push
or
cmc
mov
mov
cmps
fadd
movs
icebp
mov
test
xchg
(bad)
leave
lahf
fstp
in
mov
pop
add
lahf
cld
add
ja
inc
sbb
or
jl
pop
cmovle
push
add
aam
shl
lods
stc
mov
out
icebp
cmps
jecxz
xlat
mov
dec
out
fnsave
repz
mov
mov
fild
xchg
out
scas
jmp
mov
xchg
fistp
inc
(bad)
sahf
int
fistp
int3
movs
mov
int
in
jno
ins
(bad)
or
jl
ja
jl
ins
sub
imul
inc
add
pop
(bad)
ins
and
popf
aad
ret
ret
xchg
out
ret
stos
fisubr
cmps
jecxz
aad
fbstp
call
aad
leave
cmp
aaa
pusha
adc
or
lock
fstp
xlat
xchg
lds
xchg
xor
call
stc
lods
jmp
test
sti
lods
jmp
push
ss
scas
rol
rcr
mov
aad
div
int3
mov
mov
aam
repz
xchg
mov
mov
(bad)
hlt
test
or
mov
adc
push
add
inc
push
push
sub
xor
push
xor
add
and
mov
adc
push
or
xor
shr
mov
inc
jmp
jle
pop
sub
daa
pop
mov
xchg
mov
mov
xchg
inc
pop
outs
mov
call
sar
mov
mov
push
add
jl
pop
sbb
sbb
cmp
add
or
fld
je
push
add
rcl
pop
adc
cmp
movs
(bad)
mov
sub
dec
cmp
mul
jg
pop
xor
dec
or
xor
mov
mov
add
lds
aad
cmp
movs
mov
jnp
inc
xor
mov
mov
cmp
adc
xchg
mov
jns
xor
adc
mov
pop
pop
sbb
enter
and
sbb
sub
sar
xor
in
stos
push
loope
ret
xchg
test
inc
adc
stos
fisttp
jl
inc
sub
ret
cmp
addr16
sahf
mov
sbb
aas
pop
xchg
xchg
out
mov
push
or
add
fld
and
stos
aad
std
xchg
jne
pop
sbb
imul
aad
aas
cli
mov
bound
and
shr
jmp
bound
retf
addr16
jae
jle
xor
inc
aaa
lock
xchg
xor
push
inc
ss
xchg
rol
mov
pop
inc
cmp
xchg
xchg
shr
pop
sub
or
sar
cmps
data16
mov
lea
movs
jl
mov
mov
dec
adc
outs
push
add
dec
cmp
int3
xchg
mov
pop
or
sub
fisttp
imul
cmps
xlat
xchg
fadd
dec
adc
pop
mov
popf
(bad)
push
ds
in
aam
cli
sub
mov
call
jl
ins
cmp
test
(bad)
cmc
mov
pop
or
sub
ins
mov
loop
fldenv
and
jo
stc
pop
xchg
pop
jmp
dec
sbb
xchg
out
mov
xchg
jl
jb
retf
cmp
mov
xchg
sar
inc
xor
mov
mov
call
pop
sub
pop
sub
test
xchg
xlat
lea
pop
sbb
jmp
adc
xchg
repnz
loopne
fimul
and
aaa
adc
push
add
xchg
sar
ja
lods
mul
add
jmp
mov
push
cmps
in
adc
imul
pop
cmovns
pop
push
lds
dec
and
dec
sti
xor
ins
pop
sbb
dec
test
mov
xchg
fimul
sub
or
lods
fst
call
loope
call
cmps
loop
cli
popa
lods
mov
mov
(bad)
mov
(bad)
out
push
dec
cmovae
mov
cmps
cmc
and
(bad)
mov
dec
xor
xor
fldcw
add
jp
leave
(bad)
call
pop
jae
xor
mov
and
cwde
rcr
cmc
mov
lods
retf
xor
jle
mov
fild
sbb
adc
push
pop
sbb
jae
adc
pop
loop
fbld
fimul
ror
push
xor
sbb
repnz
scas
repz
mov
nop
retf
in
sahf
retf
out
aam
push
in
neg
fbstp
mov
and
inc
movs
rcl
adc
pop
sbb
scas
fimul
adc
aas
and
cs
sub
mov
pop
and
aaa
push
add
aad
hlt
mov
adc
or
arpl
dec
or
mov
and
and
cwde
fnstenv
ins
and
(bad)
lods
les
inc
or
add
loop
aaa
jbe
jne
add
neg
pop
pop
sub
rcl
jge
adc
sub
sub
and
jno
imul
xchg
loop
inc
xchg
pop
pop
hlt
mov
mov
jle
lods
loope
jmp
mov
sub
push
push
sub
pop
outs
sbb
pop
cmp
and
pop
pop
pop
aaa
pop
add
arpl
mov
arpl
je
movs
rol
xchg
aad
fcmovnu
mov
imul
sbb
push
sbb
repz
ficom
adc
jp
fild
jp
pop
psubb
inc
sbb
pop
cmp
popw
push
push
add
dec
sub
sub
push
popa
in
mov
test
mov
or
dec
pop
push
in
out
(bad)
loopne
loop
push
adc
push
int
jmp
mov
pop
adc
push
icebp
cdq
cli
xchg
lods
aad
out
test
repnz
(bad)
mov
mov
xchg
(bad)
pusha
mov
inc
xor
or
cdq
jecxz
repnz
jg
dec
sbb
mov
test
xor
push
lods
mov
jle
mov
lahf
pop
lds
cmp
sbb
sub
xor
cli
stos
shr
xor
jae
pop
push
dec
mov
or
movdqa
dec
cmovnp
imul
mov
mov
imul
ret
xchg
je
ins
cmp
out
scas
mov
cmp
push
scas
mov
cmps
cld
bound
outs
daa
daa
and
in
fs
repnz
jmp
cmps
std
lods
(bad)
scas
int
jmp
pushf
dec
fstp
repz
(bad)
popf
int3
mov
mov
hlt
cmp
test
dec
call
sbb
push
ror
pop
sbb
jge
cmp
jl
push
add
xchg
push
add
xor
aas
inc
out
into
cmps
into
lods
mov
in
push
add
sub
out
mov
jbe
ja
clc
stos
cli
xchg
ret
pop
cmp
jae
ret
sbb
(bad)
pop
aas
outs
pop
dec
mov
push
pop
push
sub
mul
jbe
jmp
pushf
inc
mulps
fidivr
in
stos
rol
push
push
sub
sbb
jl
jmp
test
lds
out
test
and
cli
pop
jmp
imul
push
jl
call
pop
gs
adc
sbb
xchg
ret
or
or
pop
cli
mov
add
inc
sbb
mov
pushf
jle
mov
into
(bad)
aad
call
cmp
pop
cmp
pop
mov
fisubr
dec
or
ror
adc
and
jl
jg
cmps
loopne
(bad)
jl
push
dec
out
daa
cmovne
sub
pop
cld
pushw
ins
call
add
or
or
push
pop
xor
popa
adc
sub
ins
cmp
or
lahf
(bad)
into
cwde
mov
inc
fldcw
dec
sbb
rcr
dec
or
repnz
int3
lahf
fistp
pop
cmp
mov
jecxz
iret
xor
jg
dec
xlat
mov
lods
cmc
mov
add
jbe
pop
inc
es
movs
retf
pusha
cmp
nop
aam
out
test
imul
cmps
fld
adc
loope
pushf
call
xchg
clc
movs
jno
mov
bound
loop
cld
es
call
shl
and
mul
inc
add
ret
add
inc
sub
mov
(bad)
mov
dec
xor
dec
lea
inc
push
push
ret
popf
rcr
mov
push
adc
pop
mov
int3
add
out
mov
xchg
int3
cmp
pop
adc
mov
xchg
loop
jp
pusha
sub
or
sub
mov
mov
jge
imul
mov
mov
xor
jmp
sub
jmp
pop
push
or
mov
mov
fiadd
dec
or
hlt
add
lock
repz
repz
aas
jle
inc
stos
(bad)
xchg
cld
sahf
dec
sub
and
inc
sbb
xchg
xlat
mov
or
fsub
outs
sbb
sbb
jmp
sbb
add
xor
pop
adc
and
adc
jae
mov
mov
dec
pop
inc
or
rcl
sbb
enter
cld
scas
jle
test
cmps
xchg
mov
mov
dec
or
daa
pop
loopne
mov
scas
ficom
test
and
push
daa
push
jecxz
xlat
adc
jle
ret
xchg
mul
dec
pop
jb
rcr
cli
cdq
hlt
mov
jnp
add
pop
pop
cs
push
ja
jb
je
enter
and
mov
icebp
aad
xor
mov
or
pop
sbb
push
fisttp
or
mov
in
es
ss
pop
sbb
jl
mov
in
dec
cmp
ffree
popf
popa
mov
inc
adc
out
stos
scas
pop
adc
jae
outs
add
xchg
lods
mov
aad
icebp
pop
jl
jbe
jbe
cmp
loope
fst
ret
pop
sub
xchg
rcl
xchg
cdq
enter
shl
(bad)
or
sbb
loop
and
mov
inc
sub
sbb
aam
movs
and
(bad)
cld
out
out
add
jl
movs
pushf
pop
pop
dec
cmp
fst
fwait
cmps
cmps
cmp
cmps
int
push
cmp
cmc
push
fdiv
jo
adc
sbb
aad
cmp
inc
pusha
addr16
(bad)
jb
xchg
enter
add
add
mov
fbstp
fwait
jnp
push
mov
mov
lea
les
fcmovne
push
fcom
cmp
or
mov
jae
call
dec
jno
sbb
sti
pushf
addr16
aaa
sub
frstor
lods
or
mov
push
jmp
fist
(bad)
add
shr
rol
(bad)
push
popf
retf
mov
cli
add
in
movs
(bad)
mov
dec
test
cmp
shl
test
push
or
aad
sbb
int3
jl
gs
mov
and
push
cmps
sub
mov
fistp
cmp
pusha
adc
adc
movs
push
fldenv
icebp
ins
(bad)
icebp
mov
xor
call
inc
repz
mov
gs
retf
push
stos
cmp
scas
ret
shr
jae
imul
int
pop
out
lahf
dec
aad
adc
jne
push
pop
dec
mov
dec
dec
pusha
xor
(bad)
fldenv
sbb
sbb
ror
ja
cwde
xor
cmc
mov
retf
sbb
mov
fdiv
jmp
or
fwait
hlt
idiv
mov
loop
pop
dec
mov
dec
xor
scas
movs
lods
mov
mov
icebp
std
out
es
idiv
add
std
call
add
ins
iret
inc
add
push
push
call
jb
mov
bound
hlt
or
popa
jo
jne
pop
fs
pop
(bad)
pop
mov
mov
or
stos
or
xlat
je
mov
bound
je
xchg
in
jp
(bad)
cs
xor
inc
jge
jge
add
fisttp
cmp
rol
mov
jne
out
inc
push
(bad)
les
sbb
xchg
maxps
xlat
outs
test
test
aam
shl
adc
sbb
mov
xor
xor
jmp
fistp
(bad)
cmps
fisttp
xor
inc
and
rol
ret
fs
mov
movs
inc
xor
jns
add
cmp
test
test
aad
retf
add
je
sub
xor
fmul
mov
push
das
pop
xchg
xor
sbb
and
mov
in
push
cld
jns
or
push
dec
xor
xor
call
mov
or
sub
aas
movs
aaa
mov
push
loope
mov
push
cmps
adc
int
mov
shl
cli
rol
dec
mov
add
std
cmp
int
mov
(bad)
jmp
jbe
neg
dec
inc
adc
loop
loope
ins
mov
cs
scas
fs
outs
sbb
retf
inc
adc
xchg
rcr
sbb
mov
inc
shl
fisub
inc
jmp
cmp
push
stos
loop
dec
mov
mov
shr
or
dec
pop
push
cmps
test
pop
call
je
das
std
inc
arpl
add
sbb
and
mov
xor
xor
int
mov
cld
ins
sbb
sub
push
rcr
mov
pop
jl
mov
xchg
push
xchg
inc
and
xor
shl
inc
cmp
adc
icebp
dec
mov
mov
pop
retf
in
stos
jmp
fiadd
push
inc
call
cmp
dec
movs
stos
(bad)
cmps
xchg
add
rol
mov
stc
sub
dec
inc
in
aam
fs
xchg
(bad)
fcmovu
mov
mov
pushf
pop
stos
dec
or
imul
bound
je
out
add
sub
inc
dec
sbb
(bad)
dec
cwde
sbb
inc
mov
(bad)
ret
pop
adc
inc
mov
fs
jmp
cmps
mov
aad
mov
inc
inc
ins
push
xchg
adc
mov
leave
in
sub
mov
in
(bad)
shl
sahf
mov
sbb
les
inc
jne
dec
dec
jmp
ds
pop
stos
jl
hlt
push
cld
inc
adc
jmp
dec
dec
cmp
popf
test
inc
mov
pop
sahf
out
inc
mov
sub
cli
(bad)
(bad)
loope
scas
in
loop
imul
sub
or
xor
dec
icebp
mov
dec
mov
adc
push
out
into
push
(bad)
sub
popa
ret
pop
sub
sbb
add
add
cs
test
rol
sub
ficomp
daa
push
jecxz
pop
add
cdq
jmp
jp
lds
sahf
and
lahf
dec
dec
aad
cmc
mov
js
iret
aaa
stos
neg
pop
push
pusha
jmp
inc
or
pusha
pop
sbb
test
and
out
push
(bad)
pop
pop
das
xchg
and
call
retf
pop
data16
adc
mov
fs
sub
out
sbb
jge
sbb
mov
or
dec
xor
push
cmc
cwde
adc
sub
cmp
ja
jge
dec
xchg
xchg
(bad)
in
push
shr
sbb
jecxz
into
or
push
test
mov
add
cmps
pop
sub
std
shl
cmp
or
in
pop
in
inc
pusha
pop
or
in
not
cmps
repnz
push
dec
mov
xchg
mul
dec
xchg
jle
and
out
(bad)
and
xlat
dec
pop
or
push
push
gs
inc
dec
push
sbb
repnz
jne
clc
jl
lods
mov
mov
inc
aaa
and
push
inc
hlt
ins
adc
bound
sbb
pop
sbb
je
in
data16
cmp
and
add
cmp
pusha
test
mov
ins
xchg
inc
xlat
mov
arpl
test
cmp
rcr
xor
in
je
in
(bad)
mov
mov
clc
mov
push
cmpps
adc
nop
sub
iret
mov
add
addr16
shl
loopne
mov
scas
retf
jbe
push
outs
stc
lahf
mov
xor
icebp
inc
jmp
ror
push
mov
into
jbe
jl
pop
retf
repz
arpl
addr16
mov
sub
fdiv
call
test
neg
jo
cmp
and
addr16
test
(bad)
mov
call
cmps
and
call
les
in
loopne
inc
and
push
inc
je
mov
ror
(bad)
in
xchg
std
shr
inc
or
and
rcl
js
push
xor
xchg
sti
pop
jle
jl
lea
(bad)
mov
jbe
cmp
std
adc
ds
test
lods
push
add
fisttp
mov
sub
repnz
mov
push
sbb
xchg
test
ret
jge
inc
scas
xchg
cs
xchg
mov
aas
fld
dec
jl
pop
hlt
push
(bad)
mov
dec
xchg
xlat
scas
inc
shl
cmp
mov
lea
stc
loop
mov
icebp
sub
jne
fsubr
in
ss
and
lahf
mov
movs
jb
inc
sbb
loope
xchg
pop
jne
adc
dec
iret
repnz
sub
fwait
cmps
mov
sub
dec
std
cli
mov
push
or
pop
neg
int
add
stos
mov
or
call
push
pop
lahf
mov
scas
and
(bad)
iret
jmp
ror
lods
imul
jae
mov
ret
pop
and
jo
mov
ss
es
(bad)
jne
adc
hlt
popa
call
clc
loop
mov
push
jg
or
sti
sbb
dec
cs
dec
xor
fs
movs
(bad)
enter
ficom
and
repz
int3
adc
int3
ins
xchg
leave
cld
dec
ret
or
icebp
aad
jmp
lods
add
mov
sub
inc
inc
add
stos
pop
mov
stc
lea
out
mov
scas
loop
sbb
pop
enter
sub
sbb
lods
les
inc
or
out
sti
int
ja
rcl
and
cmp
scas
aaa
mov
cmp
push
mov
adc
adc
xchg
xchg
movs
cmps
pop
out
mov
lods
icebp
mov
icebp
or
pop
or
push
fdiv
cmp
test
and
mov
push
int
mov
push
fcom
jl
(bad)
pop
push
pushf
sbb
in
addr16
(bad)
pop
pop
fimul
xor
pop
fwait
not
hlt
hlt
mov
cmp
sti
shl
push
adc
pop
outs
popf
js
ret
xor
out
sub
push
sbb
dec
jle
sbb
push
sahf
dec
and
mov
daa
popa
sar
call
push
sub
test
sub
lea
push
repnz
outs
sub
push
jecxz
add
xor
repz
xchg
xor
ins
cmp
dec
lods
cdq
in
outs
xor
dec
(bad)
jno
add
mov
mov
adc
add
dec
addr16
mov
lahf
out
xchg
loope
test
lods
(bad)
xchg
sub
movs
xbegin
push
imul
fisttp
movs
mov
xchg
cmc
(bad)
pop
or
dec
movs
sub
xchg
iret
push
jns
push
fldenv
in
test
pop
fdiv
sub
in
jmp
xor
mov
mov
push
adc
xchg
dec
movs
(bad)
cmp
(bad)
inc
aaa
push
lods
jmp
and
xchg
arpl
push
inc
inc
cli
(bad)
dec
test
xchg
test
enter
xchg
jnp
aad
ret
aas
sbb
test
stc
mov
fild
push
retf
les
loope
jns
or
xor
rol
imul
popf
in
movs
xchg
and
mov
jg
popa
ret
cmp
xchg
fsub
mov
enter
stos
int
inc
dec
pop
or
pop
jp
daa
lods
icebp
lea
xor
jmp
test
mov
push
cs
fs
scas
mul
imul
mov
ja
cmp
js
ja
packsswb
adc
inc
fnstsw
push
jmp
xlat
stc
sub
sbb
push
lock
loopne
cmp
ror
and
retf
leave
enter
inc
and
xor
mov
mul
mov
sahf
fld
jmp
(bad)
jae
lods
(bad)
mov
push
iret
add
addr16
in
repz
call
ret
imul
outs
mov
inc
xchg
and
gs
push
push
pop
xlat
jae
out
xchg
iret
jmp
fisub
inc
dec
sub
pop
pop
xchg
ret
rcl
pop
inc
inc
xchg
push
scas
pop
ret
jbe
add
fcom
fwait
bswap
clc
lahf
fdiv
stos
ret
adc
mov
inc
xchg
push
stos
movs
(bad)
mov
scas
xchg
sti
mov
fstp
sub
add
inc
sub
fmul
add
movs
adc
out
dec
in
into
and
clc
lds
arpl
xor
sub
data16
dec
mov
xchg
aas
pop
pop
adc
dec
push
les
dec
and
cmps
cmp
adc
add
pop
sbb
enter
fcomp
inc
fwait
mov
xchg
pop
add
out
ss
inc
pusha
sbb
nop
dec
mov
push
dec
out
sub
test
icebp
mov
push
adc
aaa
sub
imul
and
mov
jmp
add
enter
enter
jb
mov
data16
inc
leave
out
std
in
pop
pop
cmps
pop
int3
pop
mov
ret
mov
pop
aaa
dec
cmp
push
(bad)
mov
sti
cli
dec
adc
sahf
dec
aas
fmul
cmp
mov
mov
lds
mov
popf
push
(bad)
cmp
inc
enter
xor
mov
fwait
mov
sbb
mov
push
(bad)
push
and
jle
cmp
add
sub
inc
cmp
js
inc
or
xor
or
mov
mov
add
cmps
ss
jae
fcom
dec
loopne
inc
cmp
or
mov
pop
cwd
out
push
mov
lds
and
mov
fstp
pop
sub
or
lods
das
das
loope
adc
adc
mov
mov
dec
or
jnp
add
shl
mov
jb
jns
sbb
push
jae
jmp
ins
sub
add
xor
sub
mov
cmp
cmp
mov
xor
sub
jbe
jmp
xor
in
outs
mov
mov
inc
enter
stos
fcom
xchg
les
sti
leave
sbb
add
icebp
not
out
repz
int3
mov
cdq
cld
add
ret
(bad)
repnz
in
inc
sbb
call
jne
mov
push
jns
add
rcr
push
sti
movs
fcmovu
pop
test
pop
icebp
or
sub
push
and
test
push
and
mov
pop
shl
ins
mov
inc
imul
sub
and
sbb
sub
xchg
xchg
enter
bound
sbb
xchg
mov
inc
push
xchg
xchg
add
jno
ins
jo
push
push
test
mov
in
movs
scas
or
push
mov
dec
jb
push
mov
call
push
loop
ret
rcl
xlat
jne
sub
popa
int
neg
lock
pop
and
mov
mov
fnstenv
xchg
xchg
mov
xchg
fisttp
call
cmps
aam
adc
stos
mov
call
add
nop
mov
loope
jb
nop
inc
clc
cmps
pop
lea
test
mov
inc
jmp
fwait
aaa
nop
push
mov
xchg
pop
nop
mov
add
cmp
std
pop
and
and
fild
neg
cmp
pop
shl
push
call
add
mov
fwait
mov
mov
pusha
mov
add
loop
fwait
arpl
cwde
mov
push
loope
adc
mov
mov
or
adc
scas
dec
cld
or
and
(bad)
(bad)
div
leave
xchg
std
add
aaa
pop
fimul
xchg
retf
in
daa
imul
js
jns
cdq
inc
jmp
fs
inc
mov
xor
mov
daa
imul
not
dec
mov
add
add
push
in
jmp
and
scas
jne
jge
je
xchg
ror
push
cwde
enter
(bad)
xchg
iret
sub
jb
movs
xor
(bad)
and
sub
sbb
and
push
retf
aaa
sub
inc
fistp
mov
dec
aad
mov
xor
xor
add
mov
rol
adc
sub
scas
loop
push
es
xor
mov
shr
mov
bound
(bad)
adc
sbb
xor
mov
jl
xchg
pop
mov
sub
push
push
mov
cwde
push
in
xor
dec
pushf
cwde
push
mov
addr16
sub
add
sbb
in
push
(bad)
into
pop
js
int
mov
cmp
push
fsubrp
(bad)
(bad)
das
cmc
in
aas
add
cwde
das
xchg
jecxz
ja
fldln2
ja
mov
or
xchg
fwait
or
mov
jmp
inc
push
push
mov
icebp
cwde
loopne
inc
mov
jmp
cdq
mov
mov
ret
rcl
mov
int
xchg
pop
jae
mov
fimul
dec
sti
or
and
test
sahf
pop
repnz
sub
jmp
adc
push
dec
retf
enter
add
dec
movs
mov
or
push
xor
cmps
sbb
jl
inc
pxor
jno
in
aas
jecxz
xor
mov
sbb
fist
mov
outs
pop
daa
dec
dec
lds
test
nop
retf
out
adc
mov
mov
sbb
xor
leave
(bad)
adc
(bad)
loope
repz
mov
and
imul
mov
jg
pushf
add
jmp
sar
mov
pop
mov
mov
push
jp
pop
and
fdivp
bswap
and
or
cwde
mov
mov
jle
jbe
dec
out
ss
fisttp
hlt
(bad)
pop
and
retf
mov
call
jb
outs
out
addr16
add
in
cmp
cli
xchg
inc
xchg
add
inc
mov
cmc
xor
jbe
mov
shl
std
addr16
mov
(bad)
nop
mov
cmp
pop
movs
mov
in
mov
push
shl
scas
sub
ds
(bad)
iret
cmp
inc
xor
or
mov
pop
rol
icebp
and
push
retf
push
xchg
jge
test
cld
mov
imul
xor
cli
jg
mov
mov
test
dec
sub
mov
xchg
lea
gs
sti
push
pop
addr16
inc
mov
or
adc
inc
push
pop
xchg
test
push
mov
sub
fld
adc
int
jo
and
xchg
xchg
gs
and
sub
and
and
pop
ret
mov
push
or
cmp
dec
fistp
popf
push
mov
jg
fwait
stc
inc
mov
xchg
xor
les
pushf
mov
sahf
xor
add
and
mov
lea
add
adc
pop
shl
mov
ret
xchg
xchg
push
dec
dec
push
cmp
and
aad
in
sbb
push
das
(bad)
add
add
or
sub
fdivr
jns
xor
or
sbb
stc
dec
jmp
and
scas
aaa
clc
loopne
sbb
pop
out
dec
into
inc
jg
ins
leave
dec
ror
inc
sbb
push
sub
rcl
rcr
or
pop
dec
and
inc
xchg
fst
xchg
mov
(bad)
xchg
lahf
lods
out
dec
iret
push
repnz
fs
pop
leave
je
sub
imul
pop
add
pushf
xor
and
inc
into
pusha
rcr
sub
dec
jle
pop
inc
(bad)
pushf
sub
ret
sub
push
enter
sahf
in
mov
jle
sahf
adc
ror
cmp
sub
add
inc
std
dec
repz
aam
pop
shl
ins
xlat
or
xor
stos
mov
jb
(bad)
aad
pop
jno
ret
ins
dec
mov
push
add
loopne
dec
jl
scas
push
dec
or
xchg
imul
js
mov
stc
or
repz
adc
sbb
stos
rcr
xor
mov
push
pop
ja
lahf
not
mov
add
and
in
paddw
mov
cmp
xchg
mov
adc
sub
mov
aas
ins
repz
or
or
(bad)
cmp
das
mov
iret
mov
dec
ficom
das
cmp
jmp
add
movs
push
or
fwait
sub
jns
pop
(bad)
lock
ins
jae
inc
in
in
ret
icebp
add
out
and
ret
xchg
push
add
stc
mov
mov
pop
pop
push
cmp
xor
ficomp
fwait
cmps
lock
xor
jg
aaa
pusha
adc
push
xchg
ss
jns
fmul
mov
into
into
not
iret
adc
arpl
inc
pop
adc
push
push
or
in
cdq
into
(bad)
out
ret
add
aas
push
xchg
adc
aam
in
loope
rcl
dec
call
xchg
aam
and
push
cmp
int
and
push
pop
and
mov
test
clc
daa
mov
in
mov
fwait
clc
mov
push
mov
mov
xchg
retf
(bad)
and
inc
sub
adc
pop
and
call
mov
dec
adc
push
adc
pop
sub
cmp
adc
dec
repz
(bad)
mov
aad
(bad)
cmps
neg
clc
mov
les
xchg
(bad)
popf
sbb
stos
mov
leave
mov
js
dec
cmovae
gs
jge
loopne
fbld
in
mov
lods
sti
mov
(bad)
xchg
fisub
(bad)
sub
cdq
or
js
ins
sub
call
cdq
into
push
push
adc
and
inc
mov
scas
cli
mov
jle
imul
das
outs
pop
jae
push
adc
jb
jo
mov
popf
jmp
sub
cmp
push
and
add
cs
jge
ins
cmp
sbb
jo
popa
lea
inc
adc
jne
dec
shl
int
xchg
cli
cdq
jmp
(bad)
fcomp
inc
adc
sub
fdiv
pusha
and
sbb
pop
inc
add
jbe
xor
fstp
ret
inc
lods
jmp
fst
jmp
mov
test
test
mov
jns
jp
ins
cmp
cmps
rcr
mov
dec
or
shl
xchg
aam
fsubr
addr16
or
leave
mov
mov
ds
sbb
xor
adc
mov
ret
(bad)
movs
icebp
mov
xchg
aad
adc
inc
and
mov
mov
dec
push
inc
sub
rcl
and
arpl
push
and
sbb
jo
mov
sbb
stos
xor
jne
inc
add
punpckhdq
dec
sbb
mov
adc
sar
xchg
test
inc
pop
rol
mov
mov
mov
cmp
mov
test
pop
inc
pop
push
add
xchg
sar
shl
aam
xor
test
add
mov
mov
(bad)
in
sahf
retf
sub
inc
adc
jecxz
rol
push
sbb
pop
sbb
xor
pop
sbb
stos
fimul
mov
add
(bad)
(bad)
xchg
aam
jmp
mov
addr16
(bad)
out
lds
mov
mov
mov
addr16
xorps
dec
das
jle
pop
in
mov
into
call
jle
xor
mov
adc
ss
mov
repnz
mov
inc
and
inc
push
arpl
mov
mov
pusha
adc
dec
adc
mov
xchg
(bad)
in
sub
inc
or
mov
xchg
leave
mov
int
in
mov
cmp
dec
add
sbb
popf
retf
(bad)
xchg
sub
and
sbb
bound
rcr
test
aam
cmp
jns
outs
pop
sbb
pop
push
pop
push
outs
xor
stc
lods
jmp
push
push
inc
scas
enter
ret
out
hlt
mov
and
ins
cmp
dec
pop
xchg
outs
cmp
inc
cmps
test
lods
(bad)
xor
push
add
or
jg
push
or
mov
fcom
jo
inc
pop
dec
sbb
jbe
jge
inc
mov
loop
hlt
(bad)
shl
loopne
pop
sub
mov
outs
cmp
popf
out
in
test
test
jb
fs
mov
xchg
mov
push
jle
pop
pop
pop
sub
or
dec
push
push
fstp
loopne
ins
sub
and
stc
mov
(bad)
inc
aaa
pusha
loop
push
add
jbe
or
mov
(bad)
out
adc
sub
pop
sbb
jge
dec
cmp
sub
stos
ret
mov
mov
sbb
jmp
test
xor
pop
push
dec
pop
pop
jmp
mov
test
sbb
imul
or
inc
pop
push
adc
fcomp
in
sub
scas
xor
inc
sub
fst
aam
outs
cmp
dec
aas
push
lock
mov
mov
mov
sbb
ins
sub
repz
(bad)
mov
test
mov
mov
pop
je
push
adc
(bad)
fbld
cli
add
adc
outs
sbb
lods
cmp
xor
adc
sub
xor
push
pop
pusha
sub
xchg
xchg
pop
push
aas
dec
sbb
sub
stc
xchg
std
sahf
cmp
movs
inc
push
pop
sbb
sub
popf
pop
jae
push
adc
pop
in
adc
shl
mov
(bad)
rcl
test
jmp
add
inc
adc
jns
adc
outs
cmp
xor
ss
inc
push
push
cmp
jecxz
icebp
mov
mov
jo
bound
inc
adc
xor
ins
cmp
mov
iret
stos
enter
iret
mov
mov
lock
pop
mov
stos
ficomp
stos
shr
mov
test
mov
or
js
pop
or
int3
mov
retf
popa
loopne
jmp
int3
mov
mov
xor
dec
xor
push
cmp
movs
div
stc
pusha
push
and
ss
inc
adc
(bad)
xchg
int3
scas
out
xchg
movs
aam
(bad)
fsub
shl
add
jp
pop
inc
pop
push
dec
das
jle
pop
fmul
imul
loopne
fwait
cwde
enter
fisttp
das
ja
outs
dec
cmps
ret
mov
lahf
xchg
xchg
aam
fisubr
cmps
aad
mov
(bad)
xchg
(bad)
push
pop
das
js
push
daa
jo
push
adc
jge
inc
push
int3
mov
xlat
addr16
test
xchg
sar
pop
sub
cmovle
jmp
mov
mov
in
mov
xchg
rcr
push
cmp
pushf
jmp
sahf
sti
stos
fisttp
add
add
ins
sub
mov
add
test
mov
adc
sub
std
mov
pushf
fdiv
cmp
cs
sbb
int3
lea
jns
jae
jb
cli
xchg
rcl
jg
dec
or
sbb
rcl
dec
daa
dec
sub
ja
add
inc
sbb
movs
hlt
adc
int3
(bad)
leave
test
fwait
jp
inc
es
add
adc
sbb
iret
cwde
fdiv
mov
xchg
lods
xchg
(bad)
cmc
scas
(bad)
xchg
aaa
jno
push
adc
out
add
aad
loop
mov
fcomp
add
push
gs
add
stc
sbb
cmps
icebp
mov
xor
ins
sbb
push
push
ins
add
test
mov
call
add
cmps
add
jbe
inc
sbb
mov
rcl
dec
or
sbb
popa
adc
cwde
hlt
mov
xchg
(bad)
in
xor
push
adc
sub
sbb
pop
sbb
sub
pop
mov
push
inc
and
jge
jg
inc
cmp
std
xlat
add
or
mul
sub
ins
loopne
mov
pop
pop
sbb
call
dec
ss
push
inc
push
ja
adc
hlt
xchg
in
stc
mov
xchg
rol
push
inc
cmp
xor
sbb
push
sti
mov
call
xor
dec
sbb
xor
jnp
dec
push
fs
inc
adc
push
jne
into
mov
mov
pop
or
pop
fs
bound
shl
push
es
les
leave
out
retf
mov
inc
add
jo
lds
rcl
add
adc
mov
les
dec
adc
retf
xchg
rcl
pop
sbb
outs
aas
aad
into
cmps
rol
and
jne
in
test
xchg
mov
mov
xchg
shl
inc
or
test
in
mov
dec
adc
frstor
push
and
mov
add
push
jbe
jge
pop
pop
pop
mov
mov
loopne
es
add
sub
or
mov
xchg
cmps
stc
xchg
inc
xor
push
push
arpl
fisttp
mov
push
add
rcr
inc
push
inc
xor
push
pop
xchg
fisttp
(bad)
out
int
jmp
icebp
mov
and
fs
mov
ret
sahf
lahf
cli
stos
fimul
pushf
fstp
movs
int3
scas
fmul
les
dec
shr
cmovae
arpl
pop
cmp
imul
enter
mov
stos
ret
mov
xchg
ror
push
sub
es
and
gs
jge
dec
or
dec
sbb
xchg
(bad)
call
cmp
out
xchg
int
and
jl
ins
add
fwait
jmp
(bad)
xchg
cmc
xchg
xchg
shr
popf
int
mov
ja
popa
or
retf
outs
sub
inc
push
jge
mov
repnz
pop
sbb
xor
test
add
and
pop
jbe
icebp
scas
call
mov
cmp
dec
sbb
adc
jbe
jns
sbb
and
inc
or
js
push
sbb
pop
push
push
cmp
xchg
in
loopne
fld
push
add
out
stos
ror
ror
clc
scas
pop
sbb
adc
xor
or
aaa
inc
adc
data16
iret
call
sbb
test
outs
xor
pcmpgtd
in
movs
mov
cmp
jb
test
mov
(bad)
rol
add
js
push
sbb
pop
add
repz
test
stos
jmp
sbb
pop
(bad)
mov
test
xchg
push
adc
inc
aad
aad
jecxz
call
cmp
mov
add
(bad)
jnp
push
daa
jo
inc
sub
jnp
inc
sub
sbb
jno
inc
sbb
pop
or
jp
pop
jmp
(bad)
mov
leave
mov
loope
fisub
mov
in
pop
sub
pusha
sbb
inc
xor
sub
jb
jns
push
cmp
nop
pop
push
push
push
fs
loop
adc
inc
xor
loope
mul
xor
dec
push
in
xchg
int
mul
cmps
fcomp
ret
add
push
dec
or
pop
adc
sub
js
imul
cmp
jle
je
or
dec
sbb
ds
or
dec
push
dec
push
jg
sbb
pop
sub
mov
cmps
(bad)
lods
jmp
(bad)
fcomp
inc
add
outs
add
cs
or
jle
bound
sub
sete
dec
imul
jo
dec
and
add
inc
sbb
test
mov
mov
jo
jae
bound
fistp
xchg
aas
xchg
icebp
mov
push
inc
xor
jnp
pop
mov
mov
cmps
repnz
lock
fcomp
push
adc
daa
bound
push
push
and
sbb
jp
dec
add
call
mov
sbb
jp
pop
sub
jle
pop
push
gs
ins
pop
or
or
dec
pop
mov
mov
nop
shl
xor
je
push
dec
and
pop
or
fisttp
xchg
jecxz
hlt
popf
push
add
xor
sub
in
ret
test
in
retf
test
xchg
cs
in
mov
or
cmp
add
and
adc
adc
pushf
int3
mov
xchg
(bad)
mov
push
push
sub
es
daa
inc
jnp
ja
inc
or
and
ret
mov
test
sub
sub
das
dec
ds
mov
jecxz
xor
arpl
push
inc
push
ja
inc
out
xchg
xchg
ret
jp
sub
xor
or
outs
push
je
sbb
jo
push
add
(bad)
mov
cmps
loop
ficom
pop
push
dec
sbb
aas
outs
mov
adc
aad
adc
jae
jle
cmps
loopne
rcr
and
push
sub
int3
mov
(bad)
or
jo
jae
bound
jge
mov
mov
push
xor
adc
pusha
push
jmp
mov
retf
gs
inc
adc
or
mov
les
imul
or
dec
cmp
outs
sbb
imul
pop
shl
dec
cmp
pop
in
pop
dec
sbb
add
inc
sbb
rcl
or
jg
xor
dec
es
cmp
or
jmp
call
leave
mov
or
pop
sbb
imul
sub
push
push
inc
push
jmp
xchg
xchg
mov
leave
mov
mov
mov
mov
mov
push
or
ret
sahf
leave
mov
xchg
les
jae
inc
or
sahf
enter
rol
inc
add
(bad)
imul
jns
iret
mov
les
xor
sbb
nop
fsubr
les
test
out
call
rcr
int3
outs
pop
sub
inc
or
ja
sbb
pop
sub
mov
xchg
lds
mov
mov
add
and
pop
in
sbb
jle
jno
mov
mov
xor
cdq
lods
ficom
jle
bound
inc
adc
addr16
jbe
jae
inc
push
inc
add
jnp
push
(bad)
test
cdq
fld
fisttp
mov
mov
mov
lock
aam
in
add
arpl
jno
push
add
cdq
lock
movs
in
dec
xor
push
cmp
jp
js
inc
cmp
add
pop
sbb
pop
or
cwde
in
mov
mov
lock
adc
addr16
adc
inc
sub
pop
push
sub
sti
xchg
lock
xlat
aam
add
dec
sbb
or
push
add
mov
cmp
out
ret
test
mov
int
and
push
pop
mov
test
mov
pop
ins
aaa
addr16
add
(bad)
mov
xchg
push
push
pop
sbb
sub
cmp
ins
and
dec
daa
dec
sub
or
cmp
jb
push
and
arpl
sbb
xor
pop
rcr
mov
imul
adc
cmp
dec
adc
sub
pop
or
jg
pop
ret
add
cmc
inc
xor
ins
cmp
out
cmp
repnz
lock
xchg
hlt
lods
enter
es
push
fcom
movs
repz
retf
mov
cli
sub
outs
aaa
data16
mov
out
xchg
xchg
out
mov
xor
dec
sbb
adc
inc
sbb
pop
pop
inc
fld
lock
sub
pop
add
loopne
sbb
push
dec
ds
mov
les
in
mov
and
inc
sub
push
push
int
aas
jnp
dec
cmp
(bad)
(bad)
mov
pop
xor
dec
push
and
aas
outs
sub
imul
rcr
inc
daa
push
add
scas
jo
push
add
push
fldcw
dec
or
dec
movs
les
aam
scas
fmul
xchg
jmp
jmp
cs
xor
push
shr
(bad)
jnp
or
or
rep
loopne
aam
test
jmp
sar
sti
(bad)
les
fdivr
in
xor
inc
or
inc
xchg
sti
cwde
jmp
clc
mov
sti
mov
jecxz
cmc
pushf
jmp
push
push
pop
push
ins
imul
add
jp
mov
fmul
sti
lods
fcomp
popf
mul
add
or
movs
loopne
aam
imul
mov
lods
in
stos
out
das
jle
jge
outs
cmp
aas
dec
add
je
xor
dec
push
imul
call
mov
xchg
dec
cs
and
cld
mov
fcomp
jge
arpl
je
jl
pop
push
gs
push
and
dec
push
push
add
push
xor
lods
in
test
cmps
(bad)
xchg
imul
add
xor
dec
aaa
outs
fist
inc
and
pop
data16
or
ret
bound
pop
xor
je
ret
xchg
(bad)
retf
in
enter
std
xchg
imul
cmp
dec
adc
lods
lds
test
mov
cld
dec
(bad)
mov
jmp
add
jno
jge
stos
push
cmp
test
sbb
sub
adc
dec
sbb
cs
movs
cmc
sahf
stc
call
retf
xchg
xchg
icebp
mov
mov
(bad)
add
sub
daa
push
add
add
jnp
in
mov
lods
sti
mov
rol
jge
ins
cmp
jmp
out
in
test
lock
out
cli
lods
jnp
mov
xchg
(bad)
in
inc
xor
fs
inc
adc
aaa
data16
lods
fs
(bad)
xchg
std
cdq
cli
adc
inc
add
dec
adc
sub
pop
inc
jge
pop
das
outs
sub
cmp
scas
inc
jmp
xchg
(bad)
in
mov
pusha
cmc
xchg
or
in
pop
hlt
lahf
cld
(bad)
fistp
repnz
add
popa
or
call
jmp
and
push
push
int
cmc
mov
mov
aam
leave
sahf
out
scas
hlt
jge
pop
or
mov
mov
mov
lods
mov
lea
or
nop
(bad)
fdiv
xchg
xchg
frstor
sti
popa
xor
pop
xor
jp
dec
cmovae
(bad)
fidiv
js
pop
sbb
test
mov
sahf
ficom
test
div
push
adc
inc
cwde
and
add
je
in
xchg
mov
dec
or
inc
xor
dec
sbb
jns
and
push
sbb
push
inc
daa
jbe
push
inc
jmp
mov
xchg
in
jle
jno
inc
sbb
and
jnp
je
xchg
xlat
xchg
fbld
movs
(bad)
or
test
sub
cmp
add
pusha
or
or
js
je
push
cli
mov
call
jmp
stc
sahf
iret
mov
dec
aas
push
ds
cmp
ret
mov
test
sub
and
xor
shl
push
into
popa
or
jbe
adc
pop
sbb
rol
ficomp
jno
jp
pop
sbb
sub
mov
add
aam
dec
cmp
inc
xor
js
jae
push
add
jg
pop
sbb
pop
push
adc
data16
mov
mov
mov
pop
and
inc
sub
pop
inc
add
cmp
sub
jae
push
add
push
mov
xchg
rcr
and
pop
or
mov
cmp
mov
xchg
(bad)
mov
cmovae
popa
sub
inc
add
int
out
mov
call
fsubr
outs
and
pop
xor
pop
ins
cmp
push
sbb
lods
(bad)
mov
rcl
jg
pop
xor
sbb
popf
(bad)
xchg
cld
xchg
hlt
jl
mov
out
les
iret
pop
(bad)
mov
xchg
aad
fnstcw
mov
out
and
data16
sub
cmps
test
ret
mov
mov
mov
fisub
lds
cdq
in
mov
cmp
cmp
mov
nop
(bad)
xchg
jmp
xchg
rol
jecxz
shl
xchg
(bad)
fwait
clc
dec
mov
mov
mov
scas
sub
and
pop
fstp
int
sahf
sbb
push
or
push
xor
pop
xor
pop
or
pop
or
pop
xor
pop
xor
pop
or
pop
xor
pop
or
pop
xor
pop
xor
pop
or
pop
xor
pop
xor
sbb
push
xor
push
sbb
push
dec
pop
jle
in
sbb
pop
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
nop
sbb
push
push
push
push
push
adc
pop
push
push
push
push
push
adc
pop
pusha
pop
popf
pop
(bad)
pop
ret
pop
repnz
in
in
push
sbb
neg
(bad)
pop
(bad)
pop
ret
sbb
sbb
pop
push
sbb
sbb
push
push
nop
push
push
aam
dec
push
push
push
addr16
inc
push
push
push
enter
push
push
jge
mov
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
pop
push
sbb
adc
adc
adc
imul
push
inc
pop
inc
pop
js
jae
je
push
sbb
loopne
pop
push
push
pop
pop
push
mov
pop
pop
push
ficomp
pop
push
les
push
push
cmc
sbb
push
push
pop
sbb
push
push
pop
push
push
pop
sbb
push
push
pop
push
push
jge
sbb
push
pop
dec
push
data16
push
push
pop
dec
push
mov
pop
dec
push
out
sbb
push
sbb
push
push
push
push
push
push
push
push
push
push
push
push
cld
adc
push
sbb
push
push
push
push
push
push
push
push
push
push
pop
push
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
or
push
sbb
push
push
push
push
push
push
push
push
push
push
pop
push
add
push
push
push
push
sbb
push
push
push
push
push
push
push
push
push
push
pop
push
and
push
push
push
push
push
push
push
push
pop
push
push
push
lahf
adc
push
sbb
sbb
sbb
sbb
adc
pop
push
adc
push
push
push
adc
ds
push
push
push
pop
push
ds
push
push
push
add
push
call
sbb
push
ficomp
push
and
jp
jb
and
jae
jge
ins
jb
jl
push
ja
ins
jno
jno
push
dec
ja
imul
jg
ja
push
push
addr16
outs
outs
jb
jge
push
jno
push
push
addr16
push
addr16
jno
outs
imul
push
push
addr16
ins
jno
jnp
push
push
addr16
jnp
dec
jnp
push
push
dec
jbe
jnp
jp
jg
jnp
jl
jnp
push
ins
jno
ja
jnp
jle
push
ins
jnp
push
pop
jo
ja
dec
imul
push
dec
dec
push
pop
pop
dec
dec
inc
push
push
pop
push
dec
push
pop
dec
push
push
push
push
dec
dec
pop
dec
dec
dec
dec
inc
push
push
pop
push
dec
push
pop
dec
push
push
push
push
push
ja
ins
jno
jno
push
dec
ja
imul
jg
ja
xor
outs
jb
jge
push
jno
dec
jnp
push
push
pop
outs
outs
jb
jge
push
jno
pop
jg
jnp
xor
jno
push
push
ja
ins
jno
jno
push
dec
ja
imul
jg
ja
xor
push
push
pop
jno
outs
imul
push
dec
ins
push
jae
push
jl
jnp
push
xor
push
ins
push
jns
push
pop
jno
outs
imul
push
jae
pop
jno
outs
imul
push
jl
jnp
push
ins
jno
ja
jnp
push
jns
push
pop
outs
outs
jb
jge
push
jno
push
jae
pop
outs
outs
push
jl
jnp
push
ins
jno
ja
jnp
push
dec
ins
jnp
push
jns
push
dec
ins
jnp
push
jae
dec
ins
jnp
push
jl
jnp
push
ins
jno
ja
jnp
push
jns
push
dec
jnp
dec
jnp
push
push
jae
push
addr16
jnp
dec
jnp
push
push
jl
jnp
push
ins
jno
ja
jnp
push
pop
outs
outs
jb
jge
push
jno
push
dec
jnp
dec
jnp
push
push
pop
outs
imul
push
jno
pop
jnp
push
jg
jbe
jno
jnp
dec
outs
jnp
pop
jnp
dec
outs
jnp
dec
jno
push
ja
jns
pop
ins
jnp
push
inc
inc
push
jo
push
jo
jnp
inc
push
dec
push
ja
ins
push
jo
jnp
pop
ja
outs
jno
jnp
inc
push
jo
push
jo
jnp
inc
push
jns
push
pop
jnp
push
jo
push
jo
jnp
jae
dec
jbe
jnp
jp
push
push
jge
jg
imul
jnp
push
jo
push
jo
jnp
outs
jg
jg
push
push
jo
jg
jbe
jae
ja
pop
ja
jnp
outs
ins
jno
dec
jnp
ins
dec
push
pop
push
outs
ins
jno
dec
jnp
ins
push
push
pop
push
push
jg
jo
jge
jo
js
pop
jnp
ins
outs
push
pop
jg
jg
push
jnp
ins
push
pop
pushw
jg
jno
jo
ins
push
push
imul
jne
addr16
jb
jg
jnp
push
ja
dec
jg
jp
jno
ja
push
ja
dec
ja
jnp
jbe
ins
jne
ja
pop
ja
jp
jnp
push
ja
dec
dec
pop
push
pop
ins
jnp
push
dec
ins
jno
jnp
ins
push
jg
outs
jb
jge
push
jno
push
jg
jnp
jge
jae
jg
jp
ja
jnp
outs
ins
jno
jnp
ins
pop
push
ins
ja
imul
push
push
ins
jnp
jp
push
ins
ja
imul
push
ja
jbe
ins
ja
push
jg
jp
jnp
push
jge
jnp
push
jno
pop
jb
jns
push
jnp
push
jae
jo
push
jge
ins
ins
jnp
push
ja
jnp
push
ins
addr16
ins
push
ins
push
outs
push
jo
jno
outs
ins
jno
jnp
ins
push
jo
jno
jae
push
jno
push
pop
jnp
dec
jbe
jnp
jp
jno
push
pushw
push
ins
jnp
jp
jge
jo
jnp
push
dec
jno
sub
pop
jnp
dec
jbe
jnp
jp
jno
push
pushw
dec
jnp
dec
jbe
jnp
jp
jno
push
pushw
dec
jno
sub
dec
jnp
dec
jbe
jnp
jp
jno
push
pushw
dec
jnp
jp
ins
jno
jnp
ins
push
jnp
jno
addr16
outs
ins
jno
jnp
ins
push
jl
ins
jnp
jp
ins
jnp
ins
push
jl
js
jnp
push
jl
js
jnp
dec
ja
jnp
jl
push
ins
dec
jnp
jp
dec
ins
ja
jnp
ins
jno
jnp
ins
push
jnp
jno
addr16
jl
push
ins
dec
ins
ja
push
jo
push
push
jo
jg
dec
ja
imul
ja
jo
dec
ja
push
jg
dec
ins
jno
jnp
push
pushw
jbe
ins
jno
jnp
ins
push
jb
pop
jp
ins
jnp
ins
push
jp
dec
ja
jnp
js
push
jnp
dec
ins
jno
jnp
push
jb
js
push
jb
dec
ins
jno
jnp
push
dec
ja
push
jg
pop
jb
jno
pop
pushw
jbe
jo
jb
push
jg
jp
jnp
ins
push
jb
jo
push
push
push
outs
jnp
outs
ins
jno
jnp
push
dec
jnp
imul
jbe
jnp
jp
ins
jnp
ins
addr16
outs
ja
push
ins
jb
imul
push
pop
push
outs
outs
outs
push
dec
imul
jg
jbe
jge
jp
jp
push
push
jge
jae
jg
ja
jb
push
dec
jg
imul
outs
jnp
dec
ins
jno
jnp
ins
push
jg
jp
jnp
dec
jbe
jnp
jp
jg
jp
jnp
dec
ins
jno
jnp
ins
push
jp
dec
jbe
jnp
jp
jp
dec
ja
jnp
dec
jnp
jnp
push
pop
jnp
jne
jno
push
dec
ja
jb
push
push
ja
jge
dec
jnp
jnp
push
dec
push
push
jo
imul
push
push
imul
push
dec
push
pop
ins
ins
jno
push
dec
ins
push
jae
pop
jno
outs
jno
jnp
push
jno
jnp
push
pop
jp
push
ins
pop
ins
jno
ins
jg
jb
pop
push
ins
ja
imul
pop
jp
push
ins
pop
ins
jno
ins
jg
jb
dec
push
push
push
dec
ins
push
jae
pop
jno
jnp
jno
xor
jae
ja
jnp
push
pop
jnp
jnp
jg
jnp
pop
jno
jnp
push
ins
ja
imul
dec
ins
push
jae
pop
ja
jns
jno
push
jge
push
pop
jnp
imul
ins
push
ja
jp
jo
push
ins
ja
imul
push
ja
ins
jno
jno
push
dec
ja
imul
jg
ja
xor
jae
ja
jnp
dec
jnp
push
push
dec
push
jo
jg
jp
jno
imul
push
ins
ja
imul
push
ja
jnp
jno
imul
jg
jnp
push
ins
ja
imul
dec
ins
push
jae
pop
jno
outs
jno
jnp
push
jno
jnp
xor
ins
ja
jo
push
jnp
outs
push
jnp
imul
ins
ja
imul
dec
ins
push
jae
dec
imul
jae
xor
jae
ja
jnp
dec
jnp
push
push
dec
imul
jae
push
jnp
outs
jnp
ins
push
pop
jnp
push
jl
jnp
push
jg
imul
imul
jae
dec
outs
jnp
jg
jp
jnp
pop
jnp
dec
outs
jnp
ins
jno
push
jg
jp
jnp
pop
jge
ja
jg
jno
push
pop
ins
jnp
push
push
jo
push
jo
jnp
push
addr16
ins
jno
outs
pop
jno
jb
jge
ja
jo
push
ins
ja
imul
dec
ins
push
jae
dec
imul
jae
xor
push
ins
jno
dec
jnp
push
push
pop
jno
dec
ja
ja
jb
pop
push
ins
ja
imul
dec
jbe
jnp
jp
push
push
jge
push
ins
ja
imul
pop
jno
outs
ja
jnp
pop
jnp
jnp
jg
jnp
pop
push
ins
ja
imul
pop
jno
push
jno
ins
push
dec
ins
push
jae
dec
jnp
jno
ins
jge
ins
push
dec
jnp
jno
ins
jge
push
jg
jg
jnp
push
dec
ins
jno
jnp
ins
push
dec
jg
jp
jae
dec
ins
jno
jnp
ins
dec
push
ins
push
jo
jno
push
ja
ins
jno
jno
push
dec
ja
sub
jns
ins
push
addr16
jnp
push
pop
data16
outs
push
jno
push
dec
ins
push
jae
dec
jbe
jnp
jp
jo
push
dec
jbe
jnp
jp
dec
ins
push
jae
dec
jnp
jb
jge
ja
jo
pop
ins
ins
jnp
jl
addr16
pop
jnp
pop
data16
imul
jns
ins
ins
jnp
jl
addr16
pop
jnp
push
jg
ja
jnp
push
jnp
jno
ins
jge
push
jg
jnp
push
dec
push
ja
jns
dec
jnp
jb
jge
push
dec
push
ja
jns
push
pop
jno
outs
jg
jnp
jnp
jbe
jp
dec
outs
jb
push
dec
jno
jo
jnp
jnp
push
dec
jb
jnp
push
push
outs
jnp
jg
jno
ins
push
pop
jno
outs
jg
jnp
push
ja
jns
jns
push
dec
push
ins
push
jo
jno
ins
jnp
inc
pop
ja
jnp
jg
jnp
dec
ins
jno
jnp
ins
dec
ja
jp
imul
ins
jnp
inc
dec
ja
jp
imul
dec
ins
push
jae
dec
ja
jp
imul
ins
push
jns
push
pop
data16
imul
jb
dec
jg
jbe
pop
jno
jge
push
ins
jnp
inc
pop
ins
jns
jae
jo
ins
push
dec
push
ins
push
push
ja
jb
dec
ins
push
jae
dec
jnp
imul
xor
ja
jge
outs
jg
push
dec
ja
jp
imul
ja
addr16
pop
jnp
pop
imul
push
dec
ja
jp
imul
ja
jg
push
dec
ja
jp
imul
push
jo
jno
jnp
push
ins
push
jo
jno
jnp
ins
jnp
inc
dec
ins
jnp
jbe
jb
pop
data16
imul
pop
jnp
pop
jo
ins
addr16
ins
ins
jnp
jl
addr16
jns
push
push
jno
jg
ja
jo
ins
jnp
inc
dec
jnp
jl
dec
ins
jno
jnp
push
jg
jg
pop
jo
pop
outs
outs
push
pop
jo
ja
jno
jae
jo
push
dec
outs
jnp
ja
jb
jno
jp
ins
push
pop
jnp
pop
jno
jp
ins
dec
jg
jbe
dec
ins
push
jae
push
push
push
pop
ja
jnp
pop
data16
push
push
dec
jnp
jp
jb
pop
addr16
ins
push
dec
ins
ja
jnp
jb
pop
addr16
ins
push
pop
jnp
pop
jo
ja
jno
jae
jo
dec
jg
ja
jl
jnp
push
jnp
push
dec
jg
jbe
pop
jno
jl
jo
push
jns
push
push
jg
jnp
dec
ins
ja
jnp
jb
dec
jnp
push
dec
jg
push
jno
pop
data16
push
pop
jnp
jnp
jnp
dec
jnp
ja
push
addr16
push
jno
jg
push
jg
jbe
jo
push
push
outs
jnp
dec
imul
push
pop
jnp
dec
jg
imul
jnp
dec
jg
imul
ja
jnp
push
ins
ja
imul
push
dec
jnp
pop
push
ins
ja
imul
push
dec
jnp
dec
ins
jno
jnp
push
ins
ins
jno
push
pop
jb
jg
dec
ins
jno
jnp
push
ins
ins
jno
push
pop
jno
push
ja
ins
push
pop
jnp
push
jl
jnp
push
push
jo
jnp
jg
push
jno
push
push
ins
jns
jno
dec
jnp
imul
push
ins
jns
jno
dec
push
jb
push
push
ins
jns
jno
push
dec
imul
jae
pop
jo
ja
jno
jae
jo
push
pop
jnp
dec
imul
jae
pop
ja
jnp
push
ins
addr16
jns
push
dec
ins
push
jae
ja
jnp
push
ins
addr16
dec
jbe
jnp
jp
push
ins
push
pop
outs
jg
push
jnp
push
push
push
push
dec
jnp
pop
outs
jg
push
jnp
push
push
push
push
jns
push
push
jnp
ins
jg
jnp
dec
ins
push
jae
dec
jnp
push
pop
jo
jno
ja
jns
jns
push
pop
jnp
jg
jb
push
pop
jnp
pop
addr16
ins
push
pop
ins
ins
jg
push
dec
jnp
ja
jnp
push
imul
push
pop
jnp
dec
ins
jno
jnp
ins
pop
addr16
jp
dec
dec
pop
dec
jbe
jnp
jp
push
ins
ja
imul
dec
ins
jno
jnp
ins
push
jno
imul
dec
ins
push
jae
pop
jno
jb
jge
ja
jo
push
push
pop
jo
jae
ins
jg
jno
push
pop
jnp
pop
imul
push
ins
jno
jnp
ins
push
dec
ins
jno
jnp
ins
push
jno
imul
jno
jb
jge
ja
jo
jns
push
push
jno
imul
push
dec
jnp
jp
jo
addr16
jno
jb
jge
ja
jo
jg
jnp
pop
jnp
pop
jo
jae
ins
jg
jno
push
jns
push
pop
imul
push
jns
push
push
jno
imul
jg
jnp
dec
jno
jno
jnp
push
dec
ins
ja
push
push
jno
jnp
jnp
push
push
pop
ja
outs
jno
jg
jb
push
pop
ja
outs
jno
jnp
pop
jnp
dec
ins
jno
jnp
ins
jnp
pop
addr16
jg
jnp
pop
jno
jae
push
push
jg
ins
jbe
jb
dec
ja
jnp
js
push
ins
push
imul
ins
pop
jae
push
push
push
jo
dec
push
push
inc
jnp
jno
pop
ja
pop
jno
push
ins
push
dec
jno
jo
sub
push
sub
jns
push
dec
ja
jnp
dec
jno
jo
das
sub
pop
addr16
push
pop
imul
ins
push
pop
jb
jge
pop
jno
addr16
jno
inc
pop
data16
jb
jge
push
push
jnp
ins
jg
jnp
jno
push
pop
ja
jb
jns
jnp
imul
dec
jbe
imul
jnp
xor
jge
ins
ja
addr16
dec
imul
jnp
ins
dec
jo
jg
jg
jnp
pop
jno
jnp
jnp
imul
pop
push
ins
ja
imul
pop
jb
push
jae
jno
push
push
ins
ja
imul
jne
ins
jo
jb
sub
jp
jb
jo
jp
jb
jp
jb
dec
push
imul
jg
jno
push
push
ins
ja
imul
push
jg
jno
push
ja
jp
push
jg
ins
jbe
jb
ins
pop
push
ins
ja
imul
dec
jo
jg
jg
jnp
dec
outs
jnp
je
dec
inc
push
ja
ins
pop
jnp
pop
jl
push
push
jns
inc
addr16
ins
jnp
jno
ins
jge
ins
push
pop
jno
outs
ja
jg
ja
jo
jnp
jg
jg
ja
jo
pop
push
ins
ja
imul
dec
imul
jae
pop
jno
outs
jg
ja
ja
ja
addr16
push
ins
ja
imul
inc
jl
push
jo
dec
pop
jge
pop
push
push
jbe
jg
push
fs
dec
jo
pop
push
inc
jl
push
jo
dec
pop
jge
pop
push
push
jbe
jg
push
fs
dec
jo
pop
xor
jnp
push
pop
push
xchg
xchg
and
and
pushw
jae
jb
ds
push
push
ins
push
ja
jno
jo
and
cmp
das
push
xor
cs
cmp
ds
jnp
jo
jge
jno
jp
ja
jo
jns
and
cmp
dec
push
dec
push
pop
push
xor
das
push
sub
cmp
and
and
and
dec
push
jg
ins
push
jne
ds
push
push
ins
push
ja
jno
jo
and
cmp
das
push
xor
sub
cmp
ds
pushw
jae
jb
jo
ins
push
and
cmp
jbe
push
push
outs
push
and
xor
xor
ins
push
jge
jbe
jnp
jae
jg
ins
push
xor
jae
ja
jge
ins
push
jno
ins
push
jno
js
push
xor
jge
jno
jae
xor
imul
jp
jno
imul
sub
cs
cs
sub
xor
cs
sub
xor
jae
ja
push
xor
push
jg
ins
push
jne
cmp
and
ds
ds
and
dec
push
jnp
jns
ja
ins
push
push
ins
push
jg
push
ja
jno
jo
push
push
jo
js
jno
and
ds
ds
ds
ds
and
pop
push
jg
push
jnp
and
sub
cs
das
push
sub
xor
das
push
cs
xor
sub
sub
dec
push
das
push
sub
and
sub
sub
and
sub
sub
xor
es
daa
push
sub
daa
push
cs
sub
sub
and
xor
pop
push
jg
push
jnp
and
ds
ds
ds
ds
and
pop
push
imul
push
jbe
jno
ins
push
and
inc
push
dec
push
dec
push
pop
push
dec
push
push
push
pop
push
inc
push
and
xor
pop
push
imul
push
jbe
jno
ins
push
and
ds
ds
and
xor
dec
push
jnp
jns
ja
ins
push
push
ins
push
jg
push
ja
jno
jo
push
push
jo
js
jno
and
ds
ds
and
dec
push
ins
push
ja
jns
jns
jnp
ins
push
ins
push
and
ds
ds
ds
ds
and
push
push
jno
jns
jno
jo
dec
push
ins
push
ja
jns
jns
jnp
ins
push
and
ds
ds
ds
ds
ds
ds
and
pop
push
jo
jg
jl
jb
jnp
jp
and
push
ins
push
imul
push
and
xor
pop
push
jo
jg
jl
jb
jnp
jp
and
ds
ds
ds
ds
ds
ds
and
dec
push
ins
push
jnp
ins
push
push
push
jp
and
inc
push
dec
push
dec
push
pop
push
dec
push
push
push
pop
push
inc
push
and
xor
dec
push
ins
push
jnp
ins
push
push
push
jp
and
ds
ds
ds
ds
and
xor
push
push
jno
jns
jno
jo
dec
push
ins
push
ja
jns
jns
jnp
ins
push
and
ds
ds
ds
ds
and
dec
push
jnp
jns
ja
ins
push
push
ins
push
jg
push
ja
jno
jo
dec
push
ins
push
ja
jns
jns
jnp
ins
push
and
ds
ds
ds
ds
ds
ds
and
pop
push
jo
jg
jl
jb
jnp
jp
and
js
jg
jb
ins
push
jnp
and
xor
pop
push
jo
jg
jl
jb
jnp
jp
and
ds
ds
ds
ds
and
xor
dec
push
jnp
jns
ja
ins
push
push
ins
push
jg
push
ja
jno
jo
dec
push
ins
push
ja
jns
jns
jnp
ins
push
and
ds
ds
and
xor
dec
push
ins
push
ja
jns
jns
jnp
ins
push
ins
push
and
ds
ds
and
dec
push
ins
push
ja
jo
jge
ja
outs
push
jg
jb
ins
push
and
ds
ds
ds
ds
and
dec
push
ins
push
ja
jo
jge
ja
outs
push
jg
jb
ds
ja
jp
and
cmp
pop
push
imul
push
jbe
jno
ins
push
cmp
and
ds
ds
ds
ds
ds
ds
and
dec
push
ins
push
jnp
ins
push
push
push
jp
and
inc
push
dec
push
dec
push
pop
push
dec
push
push
push
pop
push
inc
push
and
xor
dec
push
ins
push
jnp
ins
push
push
push
jp
and
ds
ds
ds
ds
ds
ds
and
push
push
jno
jns
jno
jo
dec
push
addr16
outs
push
jnp
and
push
push
jo
push
jnp
ins
push
jg
jge
push
ja
push
push
jno
jne
jnp
jo
and
xor
push
push
jno
jns
jno
jo
dec
push
addr16
outs
push
jnp
and
ds
ds
ds
ds
ds
ds
and
dec
push
imul
push
push
push
jnp
push
push
and
push
push
jnp
jg
ins
push
push
dec
push
ins
push
ja
push
push
jnp
jns
jnp
and
xor
dec
push
imul
push
push
push
jnp
push
push
and
ds
ds
ds
ds
and
xor
dec
push
ins
push
ja
jo
jge
ja
outs
push
jg
jb
and
ds
ds
and
xor
dec
push
ins
push
ja
jo
jge
ja
outs
push
jg
jb
ins
push
and
ds
ds
and
dec
push
jnp
push
push
ja
jo
jns
ins
push
and
ds
ds
ds
ds
and
push
push
imul
push
push
ja
outs
push
jb
jnp
push
push
jo
ins
push
push
jg
jo
and
mov
daa
imul
arpl
sbb
jecxz
ja
idiv
(bad)
es
rol
mov
int3
pop
mov
ds
jmp
push
xchg
cmp
cwde
push
cmp
cmp
jb
(bad)
cmp
test
leave
mov
ret
pop
sub
sysenter
(bad)
push
sets
sbb
cmp
out
cmp
pushf
lods
test
mov
out
cmp
pop
push
(bad)
cs
retf
add
call
or
fisubr
movs
push
aam
mov
pop
psubb
ins
retf
push
mov
or
push
outs
movs
ret
ins
adc
iret
bound
fisubr
mov
in
mov
xchg
loopne
rcr
retf
fld
mov
inc
movs
pop
jb
mov
and
out
push
in
cmp
dec
hlt
pop
pop
and
or
push
sub
ins
sub
pop
ror
sbb
xchg
out
xor
mov
and
adc
mov
cmp
cmc
push
movs
push
int
cmp
sbb
sbb
outs
stos
pop
adc
add
aaa
fstp
ins
mov
dec
scas
jg
sbb
repz
pop
jno
mov
mov
ss
std
dec
mov
cmp
mov
mov
and
jb
ins
jbe
or
or
ja
dec
or
cdq
test
pop
sbb
gs
mov
icebp
icebp
inc
mov
push
ret
jle
leave
rcl
pop
lea
rcr
or
daa
enter
add
dec
(bad)
in
sub
push
cmp
dec
pop
lock
popa
pusha
or
mov
in
sub
xlat
mov
sub
cmc
push
adc
jne
add
sub
repz
sbb
mov
into
jle
daa
pop
out
bound
hlt
push
sbb
fucom
sbb
mov
stc
jno
sub
std
je
or
and
(bad)
sbb
xchg
mov
mov
pusha
in
cmc
xor
push
mov
jae
or
mov
inc
loop
mov
call
enter
loope
pop
push
movs
pop
and
std
out
adc
in
push
into
jnp
dec
mov
movs
or
cmp
sbb
shl
xchg
ds
sbb
imul
push
jno
cmps
aas
push
lods
pop
dec
loop
jg
outs
rcr
cmp
out
jmp
lahf
cmps
fst
mov
mov
out
add
cmps
mul
adc
push
push
sbb
push
sahf
cmp
repz
call
sti
sbb
xchg
lea
lock
jns
jb
cmp
je
out
xchg
out
add
lock
xor
inc
xlat
xlat
inc
pop
xchg
dec
dec
test
sbb
movs
jne
or
loopne
pop
pop
mov
dec
pop
lea
retf
lock
sbb
and
dec
(bad)
lahf
xchg
or
in
cld
dec
add
xor
sbb
fdivr
mov
pop
or
outs
cmp
xchg
inc
dec
push
mov
int
add
push
sub
xchg
jecxz
imul
cmp
sbb
(bad)
xor
das
xchg
ins
mov
test
push
ret
pusha
pand
retf
ss
xor
test
pop
scas
dec
push
dec
add
pop
outs
int3
mul
ins
call
xor
daa
pop
cmps
sbb
mov
iret
xchg
popa
in
idiv
jb
retf
fcom
jae
inc
mov
mov
fmul
out
shr
ss
and
mov
aam
ja
xor
or
and
mov
pop
mov
mov
leave
(bad)
sub
(bad)
gs
push
pop
sbb
loop
int3
pop
xchg
push
fnsave
xchg
fist
in
push
sbb
int
cli
daa
adc
jne
js
mov
pop
mov
push
mov
sbb
lea
jmp
add
mov
dec
xor
dec
adc
gs
adc
stos
mov
fwait
sub
dec
(bad)
sub
ficom
pop
and
daa
mov
inc
dec
push
jmp
jmp
pop
es
int
and
fwait
xchg
adc
xor
jnp
ret
cmp
jg
pop
cli
push
outs
test
cmp
fisubr
nop
pop
mov
out
aad
adc
imul
xchg
jne
or
icebp
jne
jb
shl
mov
push
std
xor
dec
popa
add
fwait
xor
out
call
imul
mov
mov
push
cmps
sub
dec
jge
ja
sahf
xchg
scas
pop
cmps
pop
fs
push
aam
xchg
sbb
sub
leave
sub
jge
pushf
mov
pop
mov
mov
es
fdiv
jp
push
jge
sbb
xor
in
mov
int
mov
icebp
mov
movs
mov
movs
jbe
ins
cmp
pop
(bad)
shr
add
dec
(bad)
cmp
xlat
and
cs
rcr
shl
sub
iret
outs
mul
add
xchg
xchg
fisttp
in
xchg
sub
mov
pop
ret
sbb
cmp
push
push
fwait
cmps
jo
mov
pushf
cmps
fdiv
ins
xor
xchg
xchg
dec
mov
cmps
sahf
or
in
xor
xchg
pop
push
icebp
dec
rcl
jbe
fidivr
pop
in
adc
sub
loop
and
sbb
jp
xchg
aam
pop
push
xor
jae
mov
jl
pop
xor
cmp
cdq
inc
push
bound
stos
xchg
and
mov
stos
or
mov
aaa
lods
adc
jle
xchg
jb
inc
(bad)
xor
in
sub
cmp
pop
ss
shl
mov
and
movs
data16
sbb
sub
(bad)
xchg
jo
leave
cmps
xor
pushf
add
les
push
push
mov
ds
xor
popf
ror
and
retf
jecxz
mov
sbb
out
xchg
cmp
adc
btc
mov
movsx
mov
rcr
or
jbe
add
imul
pop
sti
out
mov
pop
cmps
into
pop
in
adc
neg
jmp
adc
ror
push
mov
dec
or
int
ds
mov
lahf
xchg
jmp
clc
pop
jg
inc
jle
sbb
inc
cmp
mov
rcr
mov
out
adc
dec
jns
mov
pop
jecxz
xor
(bad)
pop
sub
dec
xor
dec
sub
retf
mov
lods
test
in
hlt
sub
mov
fdivr
pop
lods
rcl
movs
jmp
cli
cmps
call
ins
xchg
addr16
xor
push
stos
movs
mov
cmp
dec
test
nop
and
jge
or
or
lods
mov
addr16
push
push
mov
push
push
cmps
fld
in
rcr
jecxz
int
in
das
lods
inc
data16
arpl
dec
mov
inc
and
std
stc
retf
push
and
aam
xchg
jnp
mov
dec
push
push
push
ror
fmul
and
pop
inc
int3
or
or
(bad)
das
jne
sub
stos
jno
sub
xchg
pop
dec
mov
push
fcmovbe
add
xchg
and
fadd
iret
mov
cmp
neg
shl
sbb
cli
and
lock
mov
gs
(bad)
fiadd
js
loopne
mov
push
popf
mov
mov
xchg
in
push
cli
(bad)
pop
adc
pop
call
and
push
jnp
add
mov
int3
jo
jae
cwde
push
fnstsw
pop
and
fnsave
xlat
imul
jno
das
add
push
mov
pop
xor
mov
mov
dec
jecxz
nop
stos
sbb
es
mov
xor
arpl
outs
xchg
sub
movs
mov
std
(bad)
pop
push
xor
inc
icebp
stos
mov
je
jno
mov
in
into
nop
add
dec
aam
lahf
rol
jmp
mov
push
mov
add
das
dec
int3
inc
data16
shl
dec
or
jl
mov
arpl
jecxz
(bad)
mov
movs
pop
or
pop
jl
das
lock
and
bound
xchg
retf
jns
pusha
add
pop
iret
inc
jl
dec
sbb
jecxz
loope
dec
pop
push
mov
add
xor
or
fs
add
mov
sub
cli
push
xlat
xor
xlat
cmp
leave
push
jmp
or
inc
sub
fsub
cs
pop
push
cmps
jae
push
xor
vpunpcklqdq
out
ret
loopne
mov
and
jle
mov
aaa
mov
dec
xchg
xchg
popa
mov
popa
test
cmp
xchg
std
imul
pusha
dec
mov
daa
pop
pop
dec
std
push
lods
cmp
nop
pusha
xlat
std
ret
pop
xchg
push
ins
fs
sbb
cmp
nop
inc
or
js
mov
cmp
and
sub
sbb
mov
sub
sub
into
adc
push
hlt
enter
sahf
(bad)
adc
adc
call
mov
sub
test
daa
lods
dec
inc
cmps
add
test
jl
sub
cmps
jmp
jge
aam
sbb
mov
cmp
cmp
xchg
aam
shl
iret
mov
sahf
test
mov
aam
jl
jbe
mov
xchg
repnz
sub
ds
mov
jp
or
rcl
mov
or
mov
movs
enter
and
aas
or
xor
mov
imul
mov
inc
mov
outs
jmp
sbb
xchg
leave
dec
das
and
inc
cld
outs
popf
dec
xchg
or
add
pusha
and
test
imul
xor
dec
mov
loope
or
mov
nop
int3
fadd
ret
stos
push
push
fimul
in
lock
cs
mov
scas
xchg
sub
adc
mov
leave
cs
popf
xchg
xor
inc
je
push
mov
mov
(bad)
daa
jae
add
dec
lea
fist
push
test
test
and
mov
xchg
pop
add
mov
je
clc
or
std
or
rcl
sub
sbb
cdq
mov
sub
stos
pop
leave
leave
pop
loop
pop
stos
ja
xchg
xchg
call
push
ins
into
aas
adc
dec
mov
fld
add
and
mov
push
push
sbb
xor
and
mov
jnp
scas
jo
cmp
ret
mov
add
xchg
push
outs
push
xor
xor
mov
xchg
add
jecxz
ficomp
push
popf
loope
dec
dec
pop
shr
xor
pop
ror
cmp
in
adc
jge
enter
sbb
jl
jns
sar
jle
ret
push
xor
xor
or
aam
call
dec
dec
inc
popf
add
aas
sbb
xchg
loope
pusha
mov
cmp
retf
ret
(bad)
jnp
add
test
xchg
sub
adc
add
fmul
(bad)
xor
xchg
or
sbb
sub
outs
sub
sbb
pop
leave
dec
jge
xor
clc
retf
pushf
idiv
loop
sub
add
jne
pop
or
mov
cmc
pop
cmp
idiv
outs
pop
cmp
pop
dec
in
sub
push
ror
aad
push
add
mov
shr
mov
mov
sbb
shl
cmp
and
jge
in
inc
nop
arpl
add
gs
lods
ins
inc
adc
push
pop
popf
xchg
gs
ficomp
xor
les
push
pop
dec
int
jbe
mov
add
mov
inc
xor
add
out
ins
sbb
scas
(bad)
stc
mov
sub
not
into
mov
mov
pop
jmp
add
mov
jno
and
sbb
fbstp
in
test
fmul
sti
mov
adc
les
sbb
cli
push
iret
inc
push
mov
outs
xor
mov
xchg
scas
mov
lea
xchg
push
or
repnz
sbb
mov
hlt
mov
lock
dec
out
pop
push
(bad)
mov
pusha
xchg
jg
cmp
rcl
jmp
(bad)
ror
lods
pop
or
dec
mov
(bad)
ja
mov
test
pop
out
out
mov
pop
dec
mov
xchg
jbe
outs
jno
out
pop
cmp
adc
dec
push
je
cmc
arpl
mov
mov
aad
mov
inc
mov
mov
lods
jmp
xchg
aaa
sbb
nop
cld
test
mov
and
out
fidiv
dec
punpcklwd
sahf
sub
ret
fdiv
xchg
mov
pop
mov
test
arpl
ja
xchg
(bad)
pop
ror
push
ftst
mov
pop
mov
jbe
mov
adc
xchg
or
into
jmp
jns
enter
stos
add
xchg
cmp
add
push
mov
jmp
xchg
pop
jae
js
mov
popa
jbe
add
ja
push
push
and
push
add
sbb
cmp
scas
sbb
loop
and
movs
std
pop
outs
adc
pop
jmp
out
jne
jmp
and
mov
call
jp
scas
mov
imul
jns
pop
aad
clc
fs
mov
dec
push
sti
lock
outs
movs
test
into
ds
mov
push
in
rcl
jno
cmp
jecxz
scas
loopne
jae
inc
and
xor
(bad)
(bad)
push
mov
and
rcr
retf
push
cmp
sbb
sub
or
pop
test
fidivr
(bad)
mov
lods
enter
rol
and
or
jp
cmp
jp
jecxz
stos
pop
lahf
dec
repnz
aas
jl
xchg
jb
dec
xchg
mov
stos
mov
cmp
sub
arpl
xchg
sub
fild
or
mov
or
dec
enter
sbb
adc
in
sub
inc
pusha
neg
or
jg
std
mov
add
div
stos
cli
dec
sbb
or
cmp
bound
fiadd
and
ret
add
push
or
in
xor
mov
fnsave
xchg
or
mov
retf
daa
les
fs
imul
test
fimul
mov
(bad)
cmp
or
sub
mov
(bad)
sub
das
pusha
xlat
xchg
push
jns
(bad)
push
dec
test
data16
shl
shr
retf
fist
dec
ss
fcomip
das
mov
mov
cwde
(bad)
jmp
mov
call
out
cmp
xchg
mov
iret
xchg
jle
xchg
outs
data16
xor
out
push
mov
push
mov
bound
dec
or
fs
push
leave
cmp
jnp
out
shl
pop
push
out
adc
inc
ins
jmp
sbb
xchg
mov
mov
dec
jbe
push
js
stos
dec
sub
rcr
test
inc
jae
int3
adc
outs
ficomp
mov
cdq
inc
cmp
mov
push
scas
ins
cmc
or
jo
jae
mov
stc
addr16
mov
int
push
mov
outs
cmp
pop
jp
jno
and
xchg
jnp
sbb
sahf
shl
adc
pop
leave
(bad)
or
pop
jo
test
(bad)
repnz
push
xor
xchg
xchg
xor
mov
add
lea
xchg
cmp
or
shr
loop
push
xor
sub
and
ja
dec
dec
inc
imul
aaa
lahf
out
dec
or
adc
jnp
inc
jae
js
xor
dec
sub
mov
sbb
jge
pop
adc
xchg
push
cmps
adc
cwde
xor
cld
daa
and
add
mov
popa
loop
repz
mov
dec
pushf
mov
pop
xchg
icebp
dec
jae
fwait
icebp
pop
push
cwde
push
mov
repnz
fnstcw
and
pop
cmp
pop
loopne
shr
inc
xor
push
lahf
xor
leave
jnp
mov
in
dec
(bad)
es
std
mov
jl
das
fild
mov
jmp
call
sub
out
dec
xchg
mov
and
das
fs
pop
dec
fstp
xor
dec
je
jecxz
test
das
gs
cdq
pop
pop
xor
sub
or
sahf
shl
ja
mov
scas
test
push
repnz
inc
adc
out
dec
xchg
inc
push
retf
adc
jl
fdivr
outs
aam
enter
jmp
sar
rol
(bad)
push
jns
fcomp
and
jle
sub
movs
call
pusha
imul
inc
dec
nop
xor
pop
adc
and
and
rol
repz
sub
sub
jnp
rcr
test
dec
(bad)
jbe
jo
std
mov
(bad)
ret
inc
mov
es
test
mov
inc
mov
sub
test
je
push
call
adc
adc
sti
in
mov
add
js
aas
inc
ss
js
cmp
jmp
mov
dec
inc
(bad)
int3
and
fwait
sbb
dec
das
mov
mov
enter
xchg
loop
xchg
addr16
and
mov
push
mov
inc
mov
jno
rol
shl
jnp
out
sbb
std
in
mov
jnp
pop
enter
sbb
and
outs
mov
adc
dec
xor
dec
inc
push
or
out
dec
jae
jecxz
scas
push
inc
imul
xchg
mov
sub
and
sub
dec
hlt
arpl
retf
cld
aam
clc
sbb
lds
cmp
(bad)
jbe
pop
sbb
sti
ja
mov
arpl
sub
(bad)
addr16
add
fld
dec
jle
addr16
push
stos
test
xchg
mov
jmp
push
push
xchg
push
cwde
inc
nop
hlt
xchg
xchg
or
imul
jmp
xor
adc
push
mov
daa
ins
or
cmc
mov
jae
lods
(bad)
add
sub
and
fimul
jle
mov
cli
in
aam
leave
or
cli
fcmovnu
dec
xchg
jecxz
jbe
or
and
push
mov
ret
addr16
jle
(bad)
push
mov
fwait
pushf
(bad)
or
lods
dec
pop
mov
stos
shl
inc
cwde
sub
fsub
add
and
or
loop
push
mov
mov
jmp
add
les
pop
fadd
pop
cli
push
sub
out
mov
hlt
fistp
adc
scas
ins
mov
cmp
mov
test
sub
fist
jge
stos
inc
pop
inc
mov
pop
pop
lods
lods
(bad)
mov
xchg
arpl
push
leave
jnp
xchg
xchg
sub
sub
mul
cmp
jne
stc
popf
(bad)
inc
in
sub
adc
add
test
cs
fld
outs
stos
movs
xchg
push
jbe
out
lods
mov
xor
lods
or
adc
sbb
leave
add
mov
std
shl
jmp
mov
jns
scas
int3
mov
pop
xchg
popf
mov
or
push
repz
add
cs
scas
movlhps
push
mov
mov
push
jns
jae
lahf
inc
retf
and
push
push
mov
outs
jmp
in
retf
and
imul
out
cmp
clc
lods
xchg
pop
mov
iret
out
js
into
sbb
stc
dec
repnz
imul
cmp
fs
xor
mov
mov
daa
mov
or
and
inc
cld
inc
add
mov
mov
push
add
cmp
xor
inc
aaa
jae
ret
jbe
pop
pop
ins
adc
je
push
dec
out
jnp
xchg
sbb
sub
int3
aaa
push
ror
enter
pop
cmps
fwait
inc
pusha
sub
xchg
inc
inc
sbb
ins
cwde
cmp
fnstsw
push
out
push
sbb
(bad)
push
pop
ja
data16
call
jge
xchg
cmc
jno
pop
nop
sub
call
out
pop
pop
inc
sbb
inc
or
jmp
shr
movs
xchg
cmps
outs
sbb
dec
ss
and
pop
lds
push
bound
and
push
push
mov
(bad)
and
scas
mov
pusha
into
scas
jmp
or
inc
and
adc
imul
adc
popa
retf
in
fisubr
and
xchg
jb
jnp
aaa
xchg
cmps
gs
mov
inc
jmp
inc
xchg
mov
popf
loopne
xchg
pop
fs
sbb
pop
retf
pop
loopne
adc
push
jmp
nop
daa
stc
aam
mov
cmp
and
mov
out
outs
jge
sub
push
fisttp
cmp
sub
enter
pusha
cdq
int
mov
pop
jno
mov
pushf
inc
sub
psubd
sti
iret
jmp
xor
xchg
cmc
or
aad
sbb
js
dec
enter
aas
call
mov
pop
inc
sub
inc
jecxz
setg
push
test
sar
clc
dec
cmp
loope
scas
mov
inc
sbb
movs
out
ss
adc
inc
push
(bad)
lods
xor
add
in
gs
push
sub
dec
test
push
pop
pop
outs
sbb
mov
out
fs
inc
fisub
ja
xor
adc
push
icebp
pop
or
or
and
push
xor
and
loope
ins
adc
fst
inc
xchg
dec
or
clc
sbb
ss
(bad)
(bad)
push
aam
dec
test
mov
sub
pop
pop
jno
aam
call
test
mov
pop
movs
test
add
(bad)
xor
fnsave
inc
sbb
ret
mov
(bad)
and
dec
push
mov
aas
pop
xchg
sbb
outs
or
aas
add
jmp
js
fstp
pusha
(bad)
sbb
xor
aad
mov
mov
pop
inc
pop
rcr
cs
sub
call
mov
sub
ret
or
into
mov
ss
dec
xchg
stos
add
aas
add
mov
sub
cdq
mov
pop
daa
pusha
inc
mov
sar
out
ja
push
daa
jge
push
jb
xchg
(bad)
sbb
xor
movs
xchg
cdq
pop
sbb
inc
jl
adc
pusha
ja
push
bound
mov
pusha
mov
scas
movs
add
adc
scas
inc
xchg
lahf
pop
sbb
mov
out
xchg
cmc
pop
sbb
and
das
xchg
movs
sbb
test
add
je
rcr
(bad)
es
add
addr16
stc
xchg
or
cld
and
sbb
jnp
xor
(bad)
mov
pop
arpl
xchg
sub
pop
jnp
pop
pop
ins
adc
daa
fs
loopne
fldcw
(bad)
xor
cld
cli
dec
pop
std
xchg
fs
(bad)
sub
call
lahf
jae
shl
or
scas
mov
scas
mov
xor
or
dec
mov
mov
xchg
ret
push
pop
xlat
mov
fisttp
mov
jg
pop
pop
xchg
dec
pop
inc
xchg
stos
xor
add
lahf
add
arpl
outs
jmp
cdq
jecxz
test
sbb
out
std
aad
pop
mov
mov
dec
and
lods
retf
ja
fidivr
arpl
or
test
test
push
addr16
cdq
fistp
icebp
aas
std
mov
xor
dec
pop
stos
jecxz
cmp
sub
add
fadd
aam
call
out
push
movs
add
mov
shl
test
jb
pop
clc
inc
xchg
jle
adc
inc
fidiv
pop
cwde
fsub
pop
sub
call
jg
push
mov
xchg
xchg
cmps
push
mov
sbb
adc
mov
ret
mov
add
mov
push
(bad)
mov
xor
pop
enter
or
add
push
int3
mov
pop
or
sar
mov
add
in
xchg
popf
push
(bad)
mov
cmp
movs
enter
sbb
jl
xor
xchg
ret
inc
std
dec
cmp
add
inc
or
aas
dec
leave
loop
cmps
jmp
packuswb
ds
push
fild
(bad)
adc
xor
rcl
sub
ins
movs
loop
xchg
and
stos
out
push
cdq
icebp
cmp
lahf
(bad)
jbe
pop
test
xor
scas
clc
and
cwde
jmp
in
cpuid
into
das
ds
push
cmps
jmp
pop
pusha
inc
nop
inc
pop
cmp
jmp
add
imul
sbb
out
rol
sbb
push
sbb
mov
dec
jo
cmp
or
sbb
pop
dec
(bad)
dec
jae
shl
pushf
sbb
ds
retf
in
jnp
cmp
clc
leave
mov
push
das
mov
xor
mov
mov
push
adc
cli
jae
sysret
dec
adc
sbb
(bad)
repnz
sbb
jae
lds
fchs
frstor
lods
mov
(bad)
jmp
push
cmp
mov
arpl
xchg
push
je
push
mov
jle
xor
mov
pop
stos
mov
data16
xlat
lods
imul
cmp
xchg
popf
mov
mov
dec
inc
jmp
into
jb
mov
mov
mov
nop
jo
mov
mov
(bad)
clc
pop
sub
movs
imul
in
fbstp
and
pop
jae
lods
fcmovnbe
cmp
(bad)
pop
jl
mov
xor
pushf
clc
inc
push
cdq
(bad)
sub
inc
loopne
jmp
sbb
in
mov
mov
popa
fsubr
jmp
pop
mov
push
out
inc
lds
pop
push
sub
scas
dec
mov
enter
and
cdq
scas
xlat
adc
cmp
lods
(bad)
int3
jle
loope
clc
jns
test
and
sub
xor
gs
(bad)
fwait
sub
add
cmp
(bad)
(bad)
mov
or
call
fsubr
call
icebp
mov
cli
pop
adc
sub
lahf
fst
retf
cmps
or
add
call
jmp
stc
hlt
jbe
push
cmp
(bad)
push
adc
test
cli
adc
inc
mov
xchg
and
add
hlt
adc
ret
mov
mov
mov
das
pusha
and
adc
pop
push
and
popf
test
inc
pop
mov
jmp
cmp
aas
ss
setle
mov
movs
mov
mov
jmp
loopne
xchg
push
pop
sti
mov
vpunpckldq
adc
mov
push
ror
push
das
mov
fdivr
push
push
dec
and
pop
pop
mov
inc
ja
mov
pop
daa
into
add
call
jmp
in
ja
(bad)
cwde
pop
sub
sbb
lahf
sub
arpl
or
inc
cdq
daa
sbb
lea
xchg
arpl
imul
shl
jo
mov
sub
aad
add
aam
push
test
jmp
adc
dec
mov
int3
in
js
(bad)
and
sti
scas
or
clc
or
pop
jno
xor
cdq
daa
jns
and
popa
jno
pop
iret
or
in
sub
sbb
(bad)
sub
aam
ja
rol
call
popf
mov
sub
in
stc
fisttp
fidivr
popf
cmps
nop
or
and
mov
fwait
clc
rcr
std
add
repz
xlat
jge
and
retf
cli
gs
add
push
push
mov
mov
mov
mov
inc
push
sbb
add
pop
frstor
cmc
in
into
dec
mov
aaa
or
ret
push
xchg
js
je
add
mov
test
sbb
leave
xor
sar
(bad)
jns
aas
in
and
(bad)
mov
bnd
mov
adc
aaa
jns
jnp
mov
sub
addr16
adc
mov
mov
imul
not
rcpps
ss
add
(bad)
into
int
call
dec
imul
and
push
jmp
pop
add
iret
push
add
lahf
mov
sahf
xchg
add
outs
lds
outs
push
xchg
lds
rol
cmp
jbe
mov
cmp
sub
fbstp
mov
mov
or
jae
fucomi
enter
mov
inc
cmp
cmp
test
jno
cld
push
adc
fist
icebp
pusha
out
movs
cdq
dec
rcr
xchg
mov
outs
fwait
in
fidiv
bound
ja
mov
sub
mov
rol
stos
lds
cwde
xlat
sbb
xor
adc
into
cs
sar
pop
push
ror
ret
dec
mov
mov
jo
ss
pop
jmp
pop
push
xlat
sbb
test
push
mov
pop
and
mov
cwde
mov
dec
jg
or
fistp
inc
jge
push
loope
les
es
jnp
loop
and
push
or
rcr
stos
cmps
lods
push
sub
in
les
sbb
enter
push
jle
pusha
mov
push
adc
pop
or
jmp
xor
dec
push
cmp
dec
push
jb
rcl
scas
leave
push
push
or
dec
push
sub
push
inc
cmp
jmp
inc
mov
std
sti
loop
sbb
rol
imul
adc
add
xor
out
fs
jns
push
add
fcomip
and
cmps
inc
pop
sub
jmp
aas
adc
into
cmp
pop
and
out
shl
add
cmps
and
pop
jp
cdq
inc
mov
inc
mov
or
xlat
add
(bad)
xchg
(bad)
mov
and
dec
mov
dec
aas
cwde
bound
sbb
jmp
jae
dec
(bad)
pusha
sub
jne
and
sub
xchg
inc
cmps
jne
mov
popf
popf
jmp
jns
mov
or
inc
jle
shl
add
mov
test
xor
imul
mov
xor
mov
jne
add
test
stos
inc
dec
ret
ja
jecxz
loope
push
aad
jecxz
cli
push
dec
repz
push
mov
or
aam
ja
sub
jecxz
mov
and
add
inc
sub
inc
pusha
xor
pop
dec
stos
add
lahf
dec
and
dec
mov
sub
mov
cmps
mov
ret
dec
inc
push
popa
sar
push
mov
mov
mov
xchg
(bad)
xchg
push
lock
mov
push
sbb
fmul
popa
int
push
sar
push
(bad)
sbb
mov
iret
adc
jo
fstp
jbe
mov
inc
sahf
retf
pop
ins
mov
loopne
mov
add
push
jge
bound
int3
sbb
into
fld
stos
sbb
push
and
(bad)
scas
mov
add
aam
add
in
mov
cmp
lahf
jmp
ins
xor
mov
xor
add
shl
push
dec
iret
loopne
jmp
aas
mov
ins
cmp
ficomp
xchg
mov
add
out
and
int3
cmp
jb
or
xor
loope
push
cmps
xor
mov
jmp
frstor
(bad)
fstp
push
cmps
xchg
mov
mov
dec
cmp
cmps
pushf
and
lock
out
and
adc
xchg
xor
and
mov
cmp
pop
jp
call
or
popf
push
jo
sub
dec
imul
fisub
cmp
test
pop
movs
call
loop
cmp
loop
push
stc
mov
shl
cmp
pop
jae
pusha
enter
xor
mov
xor
pushf
(bad)
pop
sub
lock
pop
lds
les
out
push
pop
jns
pop
sbb
into
fs
rcl
xchg
aad
jne
retf
retf
punpckhdq
jg
iret
cmp
lahf
adc
scas
mov
in
(bad)
cli
mov
xchg
adc
dec
push
push
jmp
push
shr
ret
and
inc
xchg
inc
mov
adc
test
cwde
pop
int
ja
mov
adc
sbb
dec
add
and
push
fwait
xchg
xor
jge
and
inc
sub
je
jae
ficom
(bad)
jo
pusha
inc
inc
aad
push
ss
aad
add
pop
pop
pushf
dec
loope
lods
mov
(bad)
lods
pop
jecxz
dec
mov
mov
js
outs
ss
fsubr
stc
push
jmp
pop
out
or
gs
in
or
jge
jg
es
jmp
mov
push
out
push
mov
xchg
sahf
jnp
push
call
xor
jle
(bad)
retf
cs
ror
xlat
add
aas
scas
xlat
aam
je
cmc
and
(bad)
je
imul
pop
movs
xor
mov
inc
mov
lods
cmc
jno
add
popf
(bad)
cmp
arpl
cmc
and
leave
mov
jnp
cmp
ja
mov
ret
cmp
push
inc
cmp
out
sbb
mov
movs
inc
mov
push
icebp
lock
into
jnp
jb
hlt
cmc
test
test
scas
and
and
mov
dec
je
push
and
xor
scas
outs
cld
mov
(bad)
int
fiadd
add
rcl
enter
int3
dec
jp
xchg
mov
es
push
mov
xchg
mov
test
push
and
add
pslld
cmc
(bad)
repnz
cmps
xor
xchg
ins
and
sbb
loop
mov
mov
mov
out
test
cmc
jg
loope
loope
(bad)
add
(bad)
mov
adc
push
aas
mov
push
jl
ins
retf
xchg
scas
jns
bound
neg
fwait
dec
mov
xchg
dec
mov
pop
ss
rcl
test
xor
stos
(bad)
retf
sub
cmp
popf
out
cmp
stos
push
test
(bad)
jnp
cs
movs
loopne
inc
dec
stc
fiadd
(bad)
sbb
popf
pop
(bad)
addr16
in
xor
sbb
fst
jno
cmps
hlt
mov
sbb
rcl
and
jbe
ins
sbb
sbb
nop
mov
aad
pop
sub
repnz
sbb
dec
xchg
scas
pushf
les
retf
icebp
add
imul
sbb
std
push
shl
shl
xor
jmp
data16
xchg
sahf
ret
in
add
fsub
add
or
jb
sbb
dec
jbe
mov
mov
pop
adc
gs
dec
pop
pop
jecxz
fmul
arpl
imul
cmc
out
out
ret
ret
imul
mov
sbb
sti
outs
push
dec
inc
outs
aaa
mov
pop
scas
jae
in
sti
add
xor
addr16
imul
add
ret
jo
fucomp
dec
push
adc
int3
(bad)
int
(bad)
fiadd
out
jmp
xlat
jle
jnp
pushf
out
stos
je
pusha
cmp
xor
popf
add
xchg
pop
imul
(bad)
ret
cmps
lods
pop
push
movs
cmp
sahf
imul
pop
(bad)
movs
inc
fisttp
mov
nop
pop
and
fdivr
fwait
out
cmps
mov
cmp
outs
xor
clc
ins
inc
outs
cmp
push
mov
aam
pop
nop
adc
lods
out
push
mov
(bad)
(bad)
in
mov
sub
inc
mov
add
mov
loop
dec
aam
nop
rcr
inc
xchg
(bad)
sub
shl
or
js
arpl
cmp
rcl
stos
sub
hlt
cdq
or
stos
shl
fwait
iret
push
mov
out
sbb
dec
ret
sti
xor
dec
mov
mov
arpl
mov
push
adc
repnz
lock
pop
(bad)
ror
or
jno
call
ss
jmp
or
inc
aam
icebp
fsubr
sub
mov
stos
adc
sbb
pop
push
imul
cmc
pop
jmp
xor
mov
jmp
hlt
call
sbb
inc
inc
adc
pop
sbb
add
jb
xor
test
aaa
ror
mov
popf
cs
call
lahf
cwde
(bad)
outs
call
ss
pop
mov
call
in
and
test
sub
sbb
sub
mov
scas
add
lods
lods
sub
repz
dec
in
lods
(bad)
es
ret
icebp
push
dec
mov
shr
mov
ror
scas
mov
inc
leave
mov
adc
mov
mov
ins
test
cmp
mov
leave
clc
imul
xchg
mov
div
ror
fwait
jmp
bound
pop
ja
xor
jecxz
and
idiv
mov
nop
jne
cs
mov
dec
pop
jge
arpl
push
add
xor
mov
out
xchg
xor
sbb
xchg
and
popa
(bad)
sbb
and
shl
cli
dec
in
cld
xlat
cmps
retf
xchg
sbb
sti
cdq
pop
(bad)
sub
aam
push
loope
xchg
jle
cmp
lods
arpl
sbb
mov
retf
dec
outs
ror
or
lock
add
jp
cmc
sahf
adc
pop
mov
mov
jbe
mov
push
and
hlt
inc
dec
and
pop
std
(bad)
iret
lods
(bad)
pop
push
data16
in
cmc
imul
jmp
pop
hlt
add
and
jno
fs
inc
test
pop
scas
sbb
js
ins
sbb
adc
jl
adc
cmp
jne
adc
call
retf
pop
mov
test
dec
mov
add
stos
or
out
stc
push
cmps
push
push
icebp
mov
or
sub
or
xchg
mov
ss
xchg
pop
ins
je
xchg
or
data16
dec
add
outs
mov
sbb
xor
fisttp
dec
jge
and
mov
ja
loope
cmp
or
push
retf
test
xor
push
jge
xchg
push
dec
sti
or
or
adc
cmp
(bad)
xchg
add
pop
arpl
add
xchg
sbb
push
fsub
dec
in
cmp
cmp
push
test
(bad)
jp
dec
rol
add
scas
loop
mov
fstp
mov
cmp
inc
pusha
repz
mov
mul
pop
scas
stos
inc
sbb
cld
jl
imul
push
fmul
cld
sub
ror
repnz
stc
in
push
mov
fimul
ja
div
fdivp
sbb
pop
mov
jg
dec
retf
and
jmp
jl
cmp
sub
lea
retf
movs
ss
lods
lds
lods
sbb
mov
jmp
cmps
(bad)
call
and
pop
cmps
sub
sti
(bad)
aaa
xchg
sub
out
(bad)
xlat
dec
call
outs
or
out
mov
cmps
push
aad
mov
outs
pushf
bound
dec
mov
push
mov
das
cmps
adc
sub
or
(bad)
mov
push
mov
dec
or
or
cdq
xor
outs
jbe
sub
fsubrp
or
aaa
enter
push
xchg
js
arpl
test
sub
mov
div
ins
push
(bad)
ds
repnz
loopne
dec
pop
ins
mov
and
rcr
hlt
loope
js
test
lods
dec
push
inc
nop
jmp
pop
mov
inc
pop
inc
jl
je
jns
js
hlt
je
cmps
add
es
repz
(bad)
sbb
jmp
add
cmp
mov
shl
test
push
mov
sahf
ja
sbb
pushf
mov
dec
add
dec
cmp
aaa
(bad)
push
mov
cwde
fistp
iret
(bad)
push
sti
jl
mov
cmps
mov
jns
cmps
and
or
dec
int
mov
sub
push
aaa
sub
mov
dec
lock
loopne
aam
push
xor
retf
int
jne
pop
js
or
lds
push
arpl
jne
jge
ds
jb
mov
mov
jl
mov
ss
imul
enter
push
ds
or
mov
fisub
mov
push
sbb
dec
mov
stos
js
cmps
mov
popf
popa
jp
xor
(bad)
cmp
std
test
push
pop
ins
dec
lahf
jge
movs
dec
loopne
loopne
outs
jle
pop
in
(bad)
and
mov
(bad)
mov
cwde
xor
mov
out
clc
aaa
fnstenv
test
sub
jbe
xor
inc
add
sbb
or
mov
test
mov
popa
mov
mov
add
or
sub
cmps
mov
(bad)
cwde
xchg
dec
inc
call
cmp
adc
cli
jmp
imul
test
mov
pop
xchg
(bad)
fcom
dec
mov
into
push
repz
call
fiadd
adc
cmp
pop
sbb
adc
fimul
popf
cs
bound
mov
dec
lahf
clc
xor
pminub
imul
ins
push
jno
and
jmp
(bad)
lock
ins
jge
ins
cmp
or
shl
xchg
sbb
or
jge
fs
jecxz
stos
cmc
sbb
pop
sub
je
jmp
push
xor
xor
adc
or
mov
int3
ret
and
leave
loop
cmps
jnp
out
ja
cmp
aas
cld
push
mov
adc
mov
or
iret
jle
push
inc
cld
or
xchg
pop
sub
pushf
pop
outs
test
shl
mov
lea
not
push
pusha
jl
and
fwait
push
sub
and
mov
in
sbb
shr
dec
loop
outs
bound
std
pop
test
or
(bad)
mov
sub
hlt
outs
mov
shl
into
fnstenv
lea
dec
xor
gs
movhps
pop
xchg
xchg
jo
sub
call
or
shr
stos
mov
shl
sub
sub
nop
fmul
mov
cmp
jle
or
js
mov
mov
movups
inc
add
popa
mov
gs
popa
call
cmp
div
fucom
outs
dec
mov
cmovle
cmps
mov
cmc
and
mov
mov
cli
jb
cmp
movs
add
pop
xlat
dec
std
push
pop
call
push
mov
sub
dec
loop
int
mov
cmp
push
inc
les
or
in
sbb
xor
cmp
pop
lds
or
xchg
xor
je
sbb
and
cmp
aam
mov
mov
or
int
sbb
fwait
jne
push
mov
fisub
(bad)
mov
mov
bound
(bad)
outs
rol
cdq
cmp
retf
cwde
ja
cmp
into
sub
int
cmps
lock
(bad)
idiv
int
lahf
add
(bad)
(bad)
test
dec
cmp
sbb
push
jo
xchg
gs
xor
mov
retf
scas
out
xchg
stc
aad
pop
push
cli
ret
xor
xor
cmp
repnz
jle
fistp
hlt
push
int3
push
es
mov
fmul
xor
pop
push
je
scas
lock
ss
push
aam
cmp
aam
pop
jecxz
xchg
arpl
sahf
cmp
scas
xchg
dec
jo
stc
lds
jae
sub
mov
popf
inc
dec
pop
inc
mov
or
sub
stos
aad
mov
loop
dec
sbb
ret
or
inc
jae
xor
or
mov
pop
xor
xor
pop
or
push
mov
mov
iret
cmp
not
jmp
push
cmps
stos
xor
mov
mov
mov
push
into
mov
adc
mov
pop
push
sbb
mov
movs
fwait
addr16
mov
xchg
mov
adc
sar
or
repnz
adc
mov
lea
jb
mov
shl
mov
ja
xor
std
aas
fbstp
jne
adc
aam
cmp
call
push
inc
push
hlt
aas
dec
(bad)
mov
les
sbb
jbe
add
cli
adc
jo
mov
add
loope
cmp
cdq
sbb
test
mov
xor
addr16
popf
aaa
add
movs
fdivr
retf
pop
dec
xchg
sub
repnz
pop
cmp
adc
inc
in
add
sub
or
pop
shl
or
cmp
fstp
adc
xor
or
ss
cmp
push
fmul
out
out
mov
scas
ret
sbb
js
pop
push
pop
addr16
xor
pop
ja
call
cmc
and
inc
imul
push
aam
out
mov
pop
and
out
aad
jge
das
out
xchg
mov
mov
(bad)
xchg
inc
(bad)
inc
clc
cmps
xchg
push
call
push
mov
mov
push
xor
pop
leave
enter
push
and
sti
retfw
jmp
(bad)
cmp
mov
push
adc
aam
dec
loopne
aas
pop
dec
mov
jg
jo
mov
fsub
adc
jg
int
add
cmp
dec
mov
push
add
stos
repz
add
test
fnsave
mov
test
jb
push
or
repnz
adc
xor
adc
jbe
fsub
and
mov
xchg
jb
pop
jae
cmp
shl
je
or
push
aam
push
or
aam
pusha
movs
mov
test
lods
(bad)
imul
stos
cmp
popa
mov
ss
out
movs
jecxz
icebp
(bad)
jo
push
and
mov
mov
stos
mov
nop
aaa
push
and
xor
sub
fcomi
shl
cmc
dec
inc
xchg
mov
clc
loope
mov
sub
push
fxam
les
scas
gs
push
add
stc
push
mov
aaa
enter
mov
lods
bound
lods
sahf
fiadd
ins
test
ficom
sahf
cs
mov
and
hlt
outs
inc
sub
iret
push
ds
adc
das
(bad)
fimul
xchg
movs
retf
xor
int
cmp
or
jo
lock
jle
xor
pop
jg
mov
cli
paddb
and
inc
loopne
imul
adc
lock
pop
jcxz
push
cmp
inc
adc
scas
rcl
adc
xchg
inc
cmps
iret
jbe
push
mov
retf
push
fst
mov
ret
ror
jae
sbb
int3
aaa
cmp
iret
xor
scas
jecxz
cmps
add
loope
jle
retf
ror
push
shl
(bad)
in
bound
outs
cmp
jle
jmp
cmp
xchg
pop
push
mov
xchg
shl
inc
jg
pop
js
nop
fsubr
(bad)
xchg
test
xlat
retf
rcl
shl
mov
push
xchg
mov
aad
xor
(bad)
les
inc
dec
mov
dec
mov
test
xor
cmp
push
xchg
cmp
loop
xor
test
mov
cmps
sbb
sub
push
adc
popa
int
sub
and
mov
aam
jg
jp
mov
pusha
pop
dec
add
jbe
lds
mov
inc
xchg
shl
mov
pop
pop
mov
loopne
and
jmp
dec
push
push
fisubr
ret
(bad)
jl
popa
inc
push
(bad)
aam
mov
mov
cli
mov
out
retf
out
adc
or
ss
dec
aam
mov
dec
dec
imul
jle
adc
or
dec
xchg
cmp
or
xor
mov
xchg
scas
mov
in
(bad)
mov
mov
or
dec
adc
scas
sub
hlt
outs
push
jb
mov
push
into
push
sbb
adc
pop
sub
(bad)
popf
loope
sbb
jae
test
aam
xchg
popa
mov
add
scas
les
and
ins
adc
outs
ins
pop
not
mov
dec
cmp
fild
sbb
push
arpl
add
dec
sub
iret
mov
and
movs
int
ja
cli
xor
movs
adc
ror
scas
and
(bad)
js
xlat
add
push
mov
mov
mov
bound
cli
call
mov
mov
push
inc
jbe
fst
inc
out
lea
dec
dec
mov
jbe
cwde
push
in
push
or
push
out
mov
inc
push
fst
int
jb
ja
mov
sbb
fild
mov
icebp
push
fisub
add
mov
stc
inc
xor
repz
jno
inc
add
jno
shl
cld
cli
loop
fld
loope
pop
sbb
outs
mov
fidivr
dec
inc
das
inc
push
jbe
xchg
retf
loope
mov
or
iret
sahf
(bad)
sbb
rcr
xor
jle
mov
add
fsub
stos
in
bound
inc
into
in
ins
push
popf
or
ret
movs
jle
pop
adc
add
psubsw
push
pop
mov
lods
int
cmp
sbb
cmp
mov
jne
adc
fidivr
loope
int
call
mov
jae
out
xchg
in
push
js
xchg
gs
ret
pop
lahf
mov
out
cdq
xor
mov
mov
cmp
ss
jmp
ds
(bad)
mov
ffreep
test
icebp
out
outs
in
jns
test
ffree
pusha
push
push
xchg
jnp
pop
push
pushf
and
stc
fdivr
add
mov
sub
lods
lea
das
xchg
pop
xchg
scas
dec
movs
mov
pop
addr16
jne
mov
inc
aad
aas
mov
call
gs
jo
cmp
jge
add
xor
push
xor
fcomp
xchg
ror
and
(bad)
repz
out
ins
gs
mov
dec
mov
mov
cmp
lahf
push
inc
cmp
nop
jnp
pusha
ja
(bad)
and
arpl
retf
stc
add
loopne
cmp
push
sbb
cli
int3
sbb
mov
sbb
(bad)
mov
cmp
test
loope
mov
int
add
retf
aam
mov
mov
scas
push
inc
push
cmp
(bad)
push
mov
shl
push
dec
in
add
push
pusha
es
pop
(bad)
popf
mov
lea
rcl
sbb
cwde
enter
add
inc
push
pop
out
cmp
js
sar
xchg
rcr
mov
movs
dec
adc
dec
xchg
arpl
dec
daa
dec
xchg
scas
and
aaa
inc
inc
and
jmp
fstp
scas
jae
push
dec
bound
inc
js
loopne
jne
test
es
mov
shl
inc
mov
sbb
xlat
fnsave
ret
jp
jb
dec
cwde
push
push
sub
xchg
mov
fxtract
ror
imul
or
mov
std
mov
jle
adc
add
mov
xchg
cmc
ds
pop
and
enter
sub
fst
push
xor
add
mov
ror
imul
xchg
cld
jo
mov
xor
jns
js
jecxz
int3
mov
sub
sbb
inc
imul
sbb
jae
mov
adc
mov
imul
(bad)
pop
rol
mov
iret
mov
jmp
int
dec
dec
ret
push
xchg
push
adc
dec
scas
mov
sub
mov
sbb
xchg
popa
dec
lock
call
sub
sub
jo
xchg
lea
aas
(bad)
(bad)
cmps
add
xchg
mov
xor
push
vpsubsb
push
repz
mov
mov
push
ds
outs
push
lods
dec
xor
out
sub
jmp
neg
mov
push
es
sbb
xor
pop
add
adc
lods
push
sub
gs
xor
jbe
push
(bad)
sub
in
cwde
add
adc
call
xchg
(bad)
iret
movs
xor
cmp
in
adc
xor
or
pop
enter
hlt
sub
sbb
pop
(bad)
adc
inc
sub
cmps
or
(bad)
movs
xor
outs
ffree
call
dec
inc
and
xchg
sti
add
jb
ins
mov
or
clc
inc
inc
out
loop
sbb
mov
cmp
jmp
stc
ds
push
push
push
cli
and
and
movs
in
in
sbb
pop
jl
retf
xor
mov
fstp
das
cdq
mov
popf
jl
aas
mov
mov
and
imul
test
lahf
mov
mov
ss
sub
and
add
adc
loopne
(bad)
fisubr
aaa
xor
pop
and
add
adc
ret
shl
jmp
cmps
jbe
mov
or
mov
xchg
dec
pusha
inc
jo
adc
(bad)
lahf
mov
int3
adc
rcr
add
cmp
outs
lds
xchg
adc
outs
aas
scas
and
pushf
pop
push
shl
add
arpl
pop
stc
inc
mov
mov
(bad)
mov
mov
lock
sbb
fcmovb
inc
ins
pop
mov
push
ins
pop
xor
int
int
adc
mov
inc
cld
idiv
xchg
std
cmp
or
dec
xor
adc
dec
lea
dec
arpl
(bad)
xchg
aaa
jne
mov
mov
int3
scas
jbe
push
scas
xchg
lahf
pop
popa
ins
push
cld
adc
add
stos
(bad)
out
shl
outs
shl
cmp
popa
jae
pop
(bad)
sbb
push
ret
mov
mov
and
and
and
add
push
dec
xchg
xchg
sub
adc
adc
pop
mul
icebp
adc
stos
pop
dec
popf
(bad)
in
fnsave
mov
mov
and
mov
dec
mul
lods
pop
adc
call
sbb
xchg
(bad)
push
in
not
test
fadd
sbb
push
lods
mov
push
adc
add
pop
cli
cmps
idiv
xchg
fisttp
add
in
push
cmp
xchg
mov
fmul
push
outs
add
inc
jmp
retf
xor
xchg
mov
jae
and
inc
loope
push
inc
retf
mov
fs
dec
dec
dec
movs
cmp
clc
aad
inc
jle
inc
add
and
cmp
cli
das
adc
dec
or
inc
pop
repnz
fst
ret
push
scas
mov
push
or
lods
adc
adc
sub
xchg
imul
fidiv
mov
mov
push
(bad)
stc
pushf
sub
mov
adc
mov
mov
ss
(bad)
pushf
lock
dec
fdivp
jb
sbb
jmp
cmps
jl
call
ss
xchg
sub
add
add
cmp
retf
retf
mov
in
lea
inc
lahf
jnp
aam
sbb
or
xor
fnstenv
rcr
dec
adc
or
shl
lds
aaa
div
cmp
repnz
pop
adc
mov
mov
xchg
cli
push
xchg
or
iret
or
inc
stos
cmp
popf
stos
and
cld
jp
sbb
mov
addr16
add
pop
pop
mov
sar
mov
mov
pop
inc
retf
push
cmp
push
(bad)
sti
mov
push
test
jb
(bad)
push
fistp
mov
and
add
mov
cmp
call
lea
not
push
lahf
out
(bad)
jo
clc
pop
stos
in
fnsave
jns
add
mov
lock
fdivr
add
push
xor
xor
push
dec
mov
bnd
xchg
add
unpckhps
inc
aaa
shl
pop
aad
(bad)
jp
call
adc
inc
rcl
adc
mov
fild
adc
add
iret
pop
jb
sbb
inc
pop
push
out
and
stc
fwait
sahf
pop
xchg
arpl
or
add
ds
mov
inc
mov
cmp
xor
rol
in
jbe
push
and
dec
pusha
js
imul
(bad)
adc
in
mov
arpl
mov
jmp
in
sub
(bad)
cwde
sub
dec
int
iret
cmp
sbb
inc
jg
dec
adc
adc
sahf
pop
out
mov
jl
dec
dec
xor
jl
pop
scas
loopne
and
sbb
std
gs
sbb
ret
mov
mov
pop
pop
lods
out
mov
sub
imul
repz
sahf
pop
aaa
pop
mov
cs
shl
pop
cmp
jns
cmps
xor
sub
pusha
(bad)
cld
out
and
je
rcr
push
in
pop
mov
pop
pop
stc
mov
inc
cs
(bad)
jns
loope
fwait
ss
or
popa
add
aam
push
sti
xor
rol
or
daa
inc
sbb
pusha
les
cmc
push
fs
adc
inc
in
xchg
add
repz
mov
jbe
inc
xor
call
arpl
dec
cmp
fisub
jno
jns
(bad)
bound
mov
or
shr
fwait
ret
ror
shrd
fimul
inc
retf
out
dec
icebp
(bad)
fcmovnbe
(bad)
cli
cli
stc
fstp
int3
imul
aam
shr
cwde
and
ins
out
dec
mov
(bad)
leave
or
clc
fisttp
call
and
mov
dec
ins
xlat
repz
xchg
and
ret
xchg
mov
mov
aas
pop
lods
jb
pop
fisttp
ret
fs
or
adc
cmp
and
mov
adc
aaa
jae
test
add
arpl
pushf
inc
xchg
out
cmp
inc
mov
cmps
rol
test
adc
sub
mov
lea
popa
dec
jbe
adc
aam
mov
mov
outs
mov
and
pop
mov
cld
aad
nop
(bad)
jnp
adc
sti
cld
ret
mov
rcr
mov
loope
push
test
fs
sub
mov
psubd
push
(bad)
sbb
repz
jle
aaa
cli
cmps
(bad)
jge
inc
mov
push
hlt
icebp
sbb
nop
dec
movs
ret
ret
ror
or
movs
or
enter
jae
in
fs
jno
xor
repz
pop
push
mov
cwde
adc
sahf
stos
pop
std
mov
data16
mov
cmp
xchg
xchg
and
mov
add
xchg
sub
ror
xor
lea
mov
inc
jns
movs
sbb
scas
stos
jns
bound
test
cmps
push
jne
pop
dec
adc
loope
out
add
xchg
push
add
push
jge
jnp
ins
push
dec
push
jno
jb
ja
jge
addr16
and
dec
push
push
jno
outs
push
pop
push
pushw
ja
ins
push
push
ja
jo
jns
and
xor
push
push
imul
push
push
ja
outs
push
jb
jnp
push
push
jo
ins
push
push
jg
jo
jge
jnp
ins
push
dec
push
jno
jb
ja
jge
addr16
and
ds
ds
ds
ds
and
pop
push
ja
ins
push
jg
jb
jb
jno
imul
jg
ins
push
push
push
push
js
push
push
jo
pop
push
jg
push
push
jnp
ins
push
ja
jnp
ins
push
and
js
jg
jb
ins
push
jnp
and
xor
pop
push
ja
ins
push
jg
jb
jb
jno
imul
jg
ins
push
push
push
push
js
push
push
jo
pop
push
jg
push
push
jnp
ins
push
ja
jnp
ins
push
and
ds
ds
ds
ds
and
dec
push
push
jno
outs
push
push
push
js
pop
push
jno
ja
jo
jns
push
push
jo
pop
push
jg
push
push
jnp
ins
push
ja
jnp
ins
push
and
push
ins
push
imul
push
and
xor
dec
push
push
jno
outs
push
push
push
js
pop
push
jno
ja
jo
jns
push
push
jo
pop
push
jg
push
push
jnp
ins
push
ja
jnp
ins
push
and
ds
ds
ds
ds
and
pop
push
jb
jb
jno
imul
ins
push
jp
dec
push
jnp
ins
push
jae
ja
jo
jg
push
jnp
and
js
jg
jb
ins
push
jnp
and
xor
pop
push
jb
jb
jno
imul
ins
push
jp
dec
push
jnp
ins
push
jae
ja
jo
jg
push
jnp
and
ds
ds
ds
ds
and
dec
push
push
jg
ins
push
push
dec
push
jbe
jnp
jo
pop
push
push
push
jb
jg
jl
jb
jnp
and
push
ins
push
imul
push
and
xor
dec
push
push
jg
ins
push
push
dec
push
jbe
jnp
jo
pop
push
push
push
jb
jg
jl
jb
jnp
and
ds
ds
ds
ds
and
dec
push
imul
push
push
push
jo
jb
addr16
push
push
js
push
push
jnp
push
imul
jne
pop
push
push
push
jb
jg
jl
jb
jnp
and
js
jg
jb
ins
push
jnp
and
xor
dec
push
imul
push
push
push
jo
jb
addr16
push
push
js
push
push
jnp
push
imul
jne
pop
push
push
push
jb
jg
jl
jb
jnp
and
ds
ds
ds
ds
and
push
push
jp
jb
jnp
dec
push
jnp
push
push
ja
jo
jns
ins
push
and
ds
ds
ds
ds
ds
ds
and
dec
push
push
jno
outs
push
push
push
jo
push
push
jp
jb
jnp
pop
push
jo
jp
and
push
ins
push
imul
push
and
xor
dec
push
push
jno
outs
push
push
push
jo
push
push
jp
jb
jnp
pop
push
jo
jp
and
ds
ds
ds
ds
ds
ds
and
dec
push
jnp
ins
push
push
jg
ins
push
push
push
push
jo
push
push
jp
jb
jnp
and
js
jg
jb
ins
push
jnp
and
xor
dec
push
jnp
ins
push
push
jg
ins
push
push
push
push
jo
push
push
jp
jb
jnp
and
ds
ds
ds
ds
and
xor
push
push
jp
jb
jnp
dec
push
jnp
push
push
ja
jo
jns
ins
push
and
ds
ds
ds
ds
and
pop
push
jb
jb
jno
imul
jg
ins
push
push
push
push
jo
pop
push
jnp
jae
jg
jo
jp
and
push
ins
push
imul
push
and
xor
pop
push
jb
jb
jno
imul
jg
ins
push
push
push
push
jo
pop
push
jnp
jae
jg
jo
jp
and
ds
ds
ds
ds
and
pop
push
jo
jg
jl
jb
jnp
jp
and
push
ins
push
imul
push
and
xor
pop
push
jo
jg
jl
jb
jnp
jp
and
ds
ds
ds
ds
and
push
push
ja
jp
jp
jnp
jo
and
js
jg
jb
ins
push
jnp
and
xor
push
push
ja
jp
jp
jnp
jo
and
ds
ds
ds
ds
and
dec
push
imul
push
push
push
jo
jb
addr16
push
push
js
push
push
jp
jb
jnp
and
js
jg
jb
ins
push
jnp
and
xor
dec
push
imul
push
push
push
jo
jb
addr16
push
push
js
push
push
jp
jb
jnp
and
ds
ds
ds
ds
and
dec
push
jg
jne
jnp
dec
push
jno
dec
push
imul
push
and
js
jg
jb
ins
push
jnp
and
xor
dec
push
jg
jne
jnp
dec
push
jno
dec
push
imul
push
and
ds
ds
ds
ds
and
pop
push
pushw
jnp
jge
imul
push
ja
jno
jo
dec
push
ja
jae
jnp
push
push
ja
jae
ja
push
and
dec
push
dec
push
cs
dec
push
and
xor
pop
push
pushw
jnp
jge
imul
push
ja
jno
jo
dec
push
ja
jae
jnp
push
push
ja
jae
ja
push
and
ds
ds
ds
ds
and
dec
push
ins
push
ja
jno
ins
push
ja
push
addr16
and
sub
and
xor
dec
push
ins
push
ja
jno
ins
push
ja
push
addr16
and
ds
ds
and
xor
dec
push
jnp
push
push
ja
jo
jns
ins
push
and
ds
ds
and
pop
push
jge
push
ja
jno
jo
ins
push
ds
pop
push
jno
jo
push
jnp
pushw
push
and
cmp
pop
push
imul
push
jbe
jno
ins
push
cmp
and
ds
ds
ds
ds
and
pop
push
pushw
jnp
jge
and
ds
ds
ds
ds
ds
ds
and
pop
push
jno
jae
jae
jg
jo
jp
and
inc
push
push
push
push
push
pop
push
pop
push
dec
push
push
push
push
push
push
push
inc
push
and
xor
pop
push
jno
jae
jae
jg
jo
jp
and
ds
ds
ds
ds
and
xor
pop
push
pushw
jnp
jge
and
ds
ds
and
xor
pop
push
jge
push
ja
jno
jo
ins
push
and
and
xor
dec
push
jg
ins
push
jne
and
pop
or
push
ins
push
jnp
ins
push
jno
imul
push
jge
jnp
ins
push
push
lahf
pop
das
push
bound
dec
push
dec
push
dec
push
jns
push
push
jp
pop
push
outs
push
push
push
jl
push
push
dec
push
dec
push
pop
push
push
push
outs
push
jns
dec
push
jl
inc
push
pushw
pushw
jns
addr16
dec
push
pop
push
bound
cs
bound
cs
bound
cs
bound
cs
bound
cs
bound
cs
bound
cs
bound
cs
bound
das
push
cs
cs
cs
cs
bound
das
push
bound
ja
jo
push
jnp
ins
push
jo
jnp
push
xor
jnp
pushw
jnp
bound
pop
push
outs
push
outs
push
pop
push
jg
push
jg
bound
jg
jp
jae
ja
jo
bound
cs
bound
cs
bound
cs
bound
cs
bound
das
push
bound
cs
bound
cs
bound
push
push
jnp
jb
dec
push
pop
push
jg
push
push
push
push
bound
cs
bound
cs
bound
cs
bound
cs
bound
cs
bound
inc
push
pop
push
ins
push
ins
push
pop
push
dec
push
je
jne
pop
push
pop
push
bound
pop
push
pop
push
push
push
inc
push
dec
push
pop
push
dec
push
pop
push
jnp
dec
push
imul
push
pop
push
ja
push
dec
push
outs
push
pop
push
pop
push
push
push
fs
inc
push
dec
push
jne
jbe
jge
ins
push
dec
push
bound
sub
bound
das
push
bound
push
sbb
das
push
push
adc
jae
jp
xor
jnp
pushw
jnp
push
pop
xor
jge
ds
jnp
jge
jbe
jno
ds
inc
push
fs
jno
jo
jnp
dec
push
ins
push
jg
jo
ins
push
js
jnp
ins
push
inc
push
inc
push
jno
jo
jnp
push
push
pop
push
ds
and
ds
sub
ds
and
ds
push
xor
inc
push
push
push
push
push
pop
push
xor
ja
jp
jnp
jo
push
ja
js
ja
jnp
ins
push
ds
cmp
ds
jnp
pushw
ja
push
push
adc
jo
jg
ins
push
push
adc
outs
push
outs
push
pop
push
jg
push
jg
push
sbb
dec
push
pop
push
push
push
dec
push
push
sbb
inc
push
dec
push
dec
push
pop
push
dec
push
push
push
pop
push
inc
push
push
or
push
push
push
push
pop
push
pop
push
dec
push
push
push
push
push
push
push
inc
push
push
pop
ins
push
jge
jbe
push
jg
ins
push
jne
ins
push
xor
jnp
pushw
jnp
push
aaa
xor
pop
push
ins
push
jnp
jg
push
jnp
ds
xor
dec
push
push
push
ds
cmp
dec
push
outs
push
jp
jg
push
jnp
inc
push
push
(bad)
push
ds
xor
inc
push
push
push
push
push
ds
cmp
push
sbb
dec
push
push
push
pop
push
dec
push
dec
push
pop
push
dec
push
pop
push
inc
push
push
push
ja
jge
ins
push
jno
ins
push
jno
js
push
inc
push
dec
push
ja
jo
jp
jno
imul
pop
push
imul
push
ins
push
jnp
jo
push
dec
push
jnp
ins
push
ins
push
ja
jno
jo
inc
push
dec
push
jno
jb
ja
jge
ja
jnp
ins
push
inc
push
dec
push
addr16
ins
push
push
jnp
jae
push
or
jg
jl
jb
jnp
push
push
dec
push
pop
push
push
sbb
push
push
push
push
pop
push
inc
push
inc
push
pop
push
dec
push
dec
push
dec
push
pop
push
push
push
dec
push
inc
push
dec
push
dec
push
pop
push
dec
push
inc
push
dec
push
jno
js
push
imul
jnp
inc
push
dec
push
jno
jb
ja
jge
ja
jnp
ins
push
inc
push
push
push
ja
jge
ins
push
jno
ins
push
jno
js
push
inc
push
dec
push
ja
jo
jp
jno
imul
dec
push
addr16
ins
push
push
jnp
jae
push
or
ja
ins
push
jg
jl
jb
jnp
pop
push
push
push
pop
push
push
sahf
mov
push
push
pop
push
inc
push
inc
push
pop
push
dec
push
dec
push
dec
push
pop
push
push
push
dec
push
inc
push
dec
push
dec
push
pop
push
dec
push
inc
push
dec
push
jno
js
push
imul
jnp
inc
push
push
push
ja
jge
ins
push
jno
ins
push
jno
js
push
inc
push
dec
push
ja
jo
jp
jno
imul
pop
push
imul
push
ins
push
jnp
jo
push
dec
push
jnp
ins
push
ins
push
ja
jno
jo
inc
push
dec
push
jno
jb
ja
jge
ja
jnp
ins
push
inc
push
dec
push
addr16
ins
push
push
jnp
jae
push
add
ja
ins
push
jg
jl
jb
jnp
dec
push
jg
ins
push
jne
push
push
jns
ins
push
push
sbb
sub
push
push
(bad)
push
jg
ja
jo
js
ja
jb
jnp
push
adc
jl
jge
xor
jnp
pushw
jnp
push
or
push
jns
pop
push
ins
push
jae
xor
jnp
pushw
jnp
push
add
outs
push
push
push
jg
imul
push
jge
jbe
xor
jnp
pushw
jnp
push
or
push
push
jno
ins
push
push
xor
jnp
pushw
jnp
push
sbb
jo
jno
push
jnp
outs
push
jg
jp
xor
jnp
pushw
jnp
push
sbb
and
push
adc
jl
ja
jnp
jp
jb
jb
push
or
ins
push
jnp
ins
push
jbe
jg
ins
push
jne
push
adc
ja
jp
jp
jb
jnp
ins
push
push
adc
dec
push
pop
push
ds
dec
push
dec
push
push
push
push
push
pop
push
cmp
push
pop
push
cmp
push
pop
push
cmp
push
cmp
push
pop
push
cmp
push
pop
push
cmp
push
pop
push
cmp
push
cmp
push
pop
push
cmp
push
pop
push
cmp
push
pop
push
push
adc
cs
arpl
cmp
push
sbb
push
call
pop
mov
sub
test
sub
xchg
push
scas
and
bswap
adc
sbb
push
push
pop
sbb
push
or
sbb
or
pop
or
sbb
push
or
sbb
or
pop
or
sbb
push
or
sbb
or
pop
or
sbb
push
or
sbb
or
pop
or
sbb
push
or
sbb
push
or
sbb
push
or
sbb
push
or
sbb
pop
sbb
sbb
ds
or
sbb
add
sbb
pop
pop
add
add
sbb
pop
pop
pop
push
add
sbb
push
sbb
push
or
push
sbb
push
or
adc
adc
push
push
adc
push
sbb
sbb
pop
sbb
push
push
push
sbb
pop
pop
adc
push
adc
adc
push
push
sbb
push
adc
rdmsr
push
(bad)
sbb
sbb
push
add
adc
sbb
push
push
push
push
push
push
adc
sbb
push
add
push
push
push
sbb
sbb
push
push
pop
push
sbb
push
pop
push
push
push
push
push
sbb
push
push
push
push
push
sbb
pop
push
push
sbb
push
sbb
sbb
push
push
push
push
push
sbb
adc
sbb
sbb
sbb
pop
sbb
pop
pop
(bad)
push
pop
push
pop
push
push
push
push
push
sbb
sbb
adc
or
push
adc
addr16
jnp
outs
jb
push
sbb
xor
xor
xor
push
push
sbb
push
push
push
sbb
or
pop
or
sbb
or
pop
or
sbb
or
pop
or
sbb
or
pop
or
sbb
pop
or
sbb
pop
or
sbb
pop
or
sbb
pop
or
sbb
pop
pop
adc
xor
outs
jb
jge
push
jno
push
push
or
xor
jl
jnp
push
push
push
push
pop
push
adc
jno
outs
imul
push
push
adc
push
sbb
xor
jnp
push
push
sbb
pop
add
sbb
sbb
push
sbb
pop
or
mov
sbb
or
sbb
push
pop
push
add
sbb
add
sbb
pop
add
sbb
sbb
adc
adc
jg
push
sub
ins
push
jae
dec
jnp
xor
ins
push
xor
jno
jno
jno
ins
xor
jg
push
push
outs
pop
jb
jnp
push
ins
jno
jno
jno
or
ins
jnp
push
inc
inc
push
jo
push
jo
jnp
inc
or
jno
jnp
inc
push
jo
push
jo
jnp
inc
push
push
push
sbb
or
pop
or
or
or
pop
sbb
pop
push
push
push
push
sbb
pop
adc
sbb
push
or
sbb
push
add
sbb
sbb
adc
sbb
sbb
adc
adc
sbb
adc
adc
setle
adc
push
pop
pop
push
sbb
sbb
sbb
push
or
sbb
pop
pop
setle
adc
adc
push
push
or
(bad)
sbb
pop
pop
or
(bad)
sbb
pop
sbb
sahf
xchg
push
pop
adc
sahf
mov
adc
push
pop
add
adc
push
sbb
adc
sbb
push
pop
adc
sbb
sbb
push
push
sbb
sbb
adc
sbb
sbb
adc
sbb
pop
adc
adc
push
pop
or
or
sbb
ds
ja
sbb
ds
add
sbb
sbb
adc
sbb
sbb
adc
sahf
stos
sbb
pop
pop
or
sbb
pop
sbb
sbb
sbb
push
pop
or
adc
sbb
setle
add
ds
add
sbb
pop
pop
or
xlat
sbb
pop
pop
setle
sub
cmp
or
or
sbb
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
sbb
adc
sbb
adc
or
or
add
add
sbb
push
or
iret
sbb
pop
add
adc
push
pop
sbb
push
add
push
push
sbb
sbb
add
add
push
push
sbb
sbb
sbb
sbb
or
sbb
pop
or
push
push
sbb
or
push
sbb
jae
push
push
or
sbb
push
or
neg
ds
or
sti
sbb
sbb
sbb
sahf
call
or
sti
sbb
pop
add
adc
push
pop
adc
sbb
sbb
add
push
sbb
adc
sbb
pop
push
or
sbb
sbb
add
push
sbb
sbb
add
push
adc
sbb
or
retf
push
or
retf
push
push
sbb
pop
push
push
sbb
pop
add
push
sbb
pop
setg
adc
sbb
sbb
xor
sbb
add
push
push
push
push
sbb
add
push
push
push
push
push
push
push
add
or
or
push
sbb
pop
pop
setg
sbb
pop
pop
setg
sbb
cmp
ds
pop
push
push
pop
push
push
push
push
push
push
push
add
push
pop
push
dec
sbb
dec
ins
jg
push
jno
pop
data16
outs
push
jno
dec
jbe
jno
ins
pop
push
push
cli
mov
push
push
push
push
push
push
push
push
push
loopne
adc
push
ds
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
out
mov
push
push
push
push
push
push
push
push
push
push
push
inc
pop
jno
pop
data16
jg
jo
jae
jge
ins
jnp
xor
jb
push
push
push
push
loope
push
ds
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
xchg
push
add
mov
jno
sbb
and
sar
test
test
push
fcom
aas
mov
pushf
bound
ror
lock
jne
or
not
test
cmps
cmp
(bad)
fisub
not
cli
push
out
pop
dec
inc
loope
repz
pusha
nop
movmskps
or
jo
push
call
lods
int3
cld
sbb
and
xor
data16
sar
inc
or
xor
cld
jb
ret
jnp
jg
inc
push
add
jmp
je
push
aas
push
shr
xor
int3
and
mov
jne
fsubr
mov
push
out
xor
mov
inc
idiv
ficom
sub
out
leave
jns
cmp
push
sub
call
pop
add
or
lahf
lods
jmp
mov
mov
popf
data16
xchg
test
(bad)
loope
xchg
cwde
sbb
pop
mov
jb
sbb
shr
mov
call
mov
mov
sub
adc
jl
jns
cmp
sti
outs
pop
xchg
push
lods
pushf
cmp
xchg
push
data16
mov
sbb
mov
inc
cmps
vsqrtsd
inc
mov
xchg
add
arpl
inc
push
adc
and
nop
pushf
movs
xor
sub
test
scas
add
mov
test
jb
pop
dec
pop
cmp
aam
ins
mov
ins
and
popf
call
fs
mov
inc
(bad)
(bad)
xor
dec
arpl
mov
inc
call
clc
sbb
sub
fld
and
add
xchg
pop
loop
ins
popf
(bad)
mov
call
aad
(bad)
push
(bad)
mov
lods
daa
xchg
push
fwait
cmps
popf
xor
jl
xchg
cs
wrmsr
int
cmp
lea
xchg
(bad)
adc
mov
pop
xchg
sti
and
dec
jmp
cmp
mov
pop
push
pop
bound
or
fist
repnz
mov
or
xchg
pop
jne
(bad)
mov
repz
inc
sub
fcmove
stos
cmps
or
inc
ficom
sar
pop
and
aaa
shr
retf
popa
arpl
jns
pop
push
push
pop
push
daa
adc
test
leave
inc
xlat
add
das
sbb
push
push
and
les
leave
ins
mov
push
enter
das
dec
ja
movs
pop
push
nop
repnz
pop
imul
ins
push
mov
cld
jge
in
and
aaa
mov
daa
sbb
xor
retf
loopne
not
xor
ins
pusha
cmp
jmp
xor
test
rcr
icebp
into
ins
mov
jne
out
cmp
pop
xchg
ror
ins
xor
out
mov
in
sbb
xchg
adc
rcl
mov
mov
sahf
push
cmp
scas
inc
hlt
test
outs
xlat
xlat
mov
adc
pop
in
fwait
mov
(bad)
push
push
xor
inc
les
sub
in
jp
(bad)
cmp
mov
sbb
xor
lods
inc
mov
mul
imul
or
xchg
or
mov
push
mov
xchg
add
and
xor
jl
in
daa
xor
xor
retf
popa
mov
mov
mov
test
jno
ds
ja
test
add
shr
pop
inc
sub
ja
push
es
rcl
inc
loop
mov
aad
iret
dec
xchg
dec
sub
and
pop
enter
add
cmp
cmp
(bad)
loopne
cmp
rcl
ins
adc
std
mov
cs
in
repz
cmps
adc
repz
or
lock
jp
scas
mov
cmps
sub
mov
inc
cld
inc
dec
icebp
inc
push
out
or
cmc
hlt
or
mov
cmp
jmp
xchg
xor
mov
fidiv
sub
or
test
sub
ficomp
ss
dec
jge
and
fs
outs
out
pop
xchg
lds
or
add
in
mov
movs
ret
adc
jecxz
dec
dec
inc
mov
adc
push
inc
cmp
lahf
pop
jne
mov
idiv
mov
lods
hlt
inc
cmps
mov
or
mov
out
jg
mov
add
push
add
scas
or
out
sub
daa
xchg
xor
cmp
call
jb
push
sub
loop
lock
cwde
icebp
sti
sub
dec
jmp
retf
sub
sub
test
fadd
jmp
xchg
mov
xchg
or
ins
sub
jle
jo
daa
sub
cmp
mov
neg
inc
add
mov
sbb
or
mov
aad
jb
sub
jle
repz
enter
cli
cmps
push
xor
popa
bts
cmc
jecxz
push
add
aad
adc
dec
lahf
push
in
shl
dec
and
loop
test
mov
cdq
out
hlt
add
movs
fmul
mov
pop
xchg
push
cwde
cs
mov
aam
pop
mov
mov
jge
inc
cmp
sahf
nop
dec
popf
push
mov
push
mov
ror
test
pop
stos
mov
fs
lock
mov
loop
mov
mov
or
rol
xchg
push
cmp
pop
add
mov
dec
dec
mov
and
dec
(bad)
hlt
ins
inc
test
bound
ror
mov
sahf
cs
pop
in
pop
ss
scas
in
fsubr
push
stos
mov
sub
fst
cwde
pop
gs
pop
cmp
(bad)
out
pop
sbb
mov
dec
pop
loop
pop
repnz
ret
outs
mov
push
jmp
sbb
je
fild
fisttp
cdq
sbb
stc
inc
mov
lea
fiadd
add
or
cmp
cmp
shl
mov
and
rol
jmp
mov
jl
shr
xor
xor
lods
and
push
sar
mov
push
ror
cmps
or
mov
xchg
inc
out
mov
js
mov
mov
adc
mov
int
jo
in
pop
mov
cmp
pop
ror
cmp
(bad)
cmp
retf
mov
dec
push
push
xor
sahf
pop
loope
jo
jae
imul
jl
adc
call
ret
sbb
jg
inc
std
pusha
jg
jo
xor
add
push
adc
xor
not
mov
inc
addr16
cmp
fwait
out
mov
push
lock
xor
in
xchg
mov
mov
mov
popa
push
mov
out
push
lea
popf
push
and
push
std
adc
sub
dec
mov
fld
inc
popa
sub
pop
lea
add
push
push
jno
add
mov
add
es
and
fldenv
mov
gs
sar
loop
ret
cwde
test
push
ret
aam
inc
pop
les
ror
nop
rcl
or
push
scas
leave
sub
lods
ret
addr16
stos
loopne
mov
out
in
(bad)
xor
or
cli
adc
in
imul
dec
add
test
mov
dec
icebp
outs
aaa
and
aas
aaa
and
mov
jp
push
fisttp
push
mov
add
mov
js
pop
lock
xchg
(bad)
dec
ins
jl
cmp
cmps
jle
mov
sbb
xor
outs
jmp
inc
inc
out
dec
mov
mov
mul
shr
mov
add
xchg
cld
rcr
lods
xchg
pushf
sahf
inc
scas
sti
int
xchg
iret
ss
pop
in
cmp
ds
outs
call
sub
jb
(bad)
push
inc
mov
shr
push
mov
in
ins
dec
cmp
pushf
hlt
in
pusha
dec
cwde
mov
ret
sub
lea
mov
and
add
xor
shr
iret
jp
(bad)
call
movs
jecxz
ins
dec
nop
jb
xor
lock
out
mov
push
stos
dec
sar
popa
popa
mov
and
(bad)
jo
call
mov
hlt
add
mov
movs
adc
ds
dec
pop
push
sub
mov
push
cmp
rol
es
sbb
adc
mov
hlt
in
pop
jbe
xchg
iret
push
sbb
push
jnp
jg
cmp
xchg
jmp
out
arpl
push
jbe
xor
cmps
adc
cwde
fwait
push
pop
lods
mov
jo
fmul
rol
stc
push
iret
jge
cmp
and
mov
shl
loop
into
movs
sbb
xchg
cwde
rcr
pop
pop
(bad)
mov
addr16
sbb
mov
aam
mov
pop
adc
icebp
arpl
fld
or
inc
fldenv
rol
sub
mov
iret
pop
cmp
daa
icebp
add
(bad)
or
movs
cli
jno
daa
add
and
jmp
pop
call
and
pop
movs
test
pop
sbb
cmp
gs
pop
call
add
nop
mov
(bad)
and
data16
shl
add
jbe
cld
push
iret
clc
sub
test
in
daa
jecxz
sub
ret
popf
adc
ja
in
repnz
fisttp
fcomp
pop
or
rcl
daa
push
hlt
xchg
test
adc
std
movs
mov
sti
fcom
(bad)
jle
lods
das
adc
sub
cmp
fldcw
jmp
jmp
ins
into
push
int
add
jo
std
add
(bad)
sub
inc
mov
es
lahf
pop
cmp
(bad)
inc
xor
and
in
repnz
sbb
sub
sbb
jne
push
aaa
leave
outs
mov
int
adc
popa
push
xlat
adc
xor
mov
inc
mov
mov
jg
pop
push
mov
fisttp
xchg
sbb
push
jno
jmp
jecxz
outs
cwde
adc
pop
stc
cmp
sub
in
repnz
cmp
xchg
sub
popa
movq
loope
fs
fdivr
rol
je
pop
jno
xchg
push
push
add
ss
das
nop
or
or
daa
sbb
mov
adc
cmp
mov
xchg
int
ins
xor
mov
retf
mov
dec
cdq
sbb
test
in
sbb
lds
inc
xchg
inc
push
je
jg
adc
or
test
or
cs
pop
jge
inc
icebp
mov
pop
shl
cmps
inc
and
data16
add
retf
int
ja
(bad)
cld
add
xor
dec
int
and
push
fisttp
pop
out
xor
jb
movs
push
stos
maskmovq
test
pop
mov
add
pop
cld
nop
repnz
xor
and
fst
jbe
push
cmc
rol
(bad)
and
shl
test
jp
or
or
mov
add
sub
mov
ror
outs
and
lods
xchg
cmp
ds
sbb
or
push
inc
pusha
jl
and
jno
jmp
jbe
sbb
arpl
mov
sub
cmp
fcmovne
repnz
daa
not
addr16
movs
add
mov
inc
leave
sbb
push
xchg
mov
dec
sbb
xor
jle
nop
mov
out
xchg
mov
inc
std
sti
mov
jmp
adc
loopne
sub
jge
sahf
int
cld
fistp
push
popa
scas
test
adc
stc
(bad)
xor
adc
inc
cmps
les
cmp
mov
fcomp
mov
imul
or
jo
inc
add
xchg
push
add
retf
mov
fcom
xchg
dec
out
or
icebp
sbb
jle
icebp
dec
and
das
scas
int
pop
xchg
(bad)
pusha
push
ins
fisttp
clc
cmp
cmp
xor
cmps
mov
imul
xor
fidiv
pop
rcr
cmp
xchg
mov
enter
jo
mov
fistp
inc
fisub
cdq
sbb
fbld
dec
xor
add
sti
jle
ins
jecxz
into
jmp
mov
cli
cmp
stos
mov
imul
xor
fwait
es
outs
stos
ja
push
mov
or
imul
and
pop
repz
pop
scas
leave
mov
fwait
xchg
dec
je
or
inc
dec
je
rcr
mov
es
adc
in
fidiv
sbb
ins
pop
jle
or
inc
loopne
pop
jmp
ffreep
out
pop
in
das
jne
sub
or
lahf
or
sub
adc
jnp
sub
add
sbb
sub
or
or
into
sub
ffreep
mov
mov
into
push
dec
(bad)
imul
pop
dec
mov
sbb
xchg
mov
add
test
push
int3
ja
hlt
jbe
jmp
bound
or
jnp
imul
and
xor
cld
imul
pop
cmc
repz
out
mov
jle
xor
add
cs
jmp
inc
or
mov
push
fcmovu
sub
in
jmp
shl
js
and
dec
in
out
lds
sub
cwde
dec
pop
imul
(bad)
data16
jae
int
sub
inc
stos
xor
pop
jne
jns
or
movs
cmp
mov
in
or
jno
clc
xchg
xor
inc
test
jb
out
das
call
ja
fcom
mov
pop
xchg
movs
add
xor
test
shl
jbe
sbb
or
pop
neg
sub
ret
scas
push
cdq
dec
jp
mov
stc
ret
inc
inc
sub
cli
mov
add
and
xor
push
push
mov
sbb
pop
std
jns
jo
es
inc
loope
test
xchg
loopne
xor
sbb
push
pop
fs
aam
inc
mov
push
popf
mov
aaa
or
cli
sbb
pop
push
sub
mov
xor
movs
mov
int
mov
lea
lock
mov
mov
mov
pop
dec
push
cmps
mov
dec
or
mov
mov
and
cmp
sbb
xchg
mov
test
push
arpl
push
test
push
fwait
pop
mov
push
and
xsaves
lahf
repnz
pop
xor
outs
retf
out
push
jns
scas
pushf
push
(bad)
(bad)
mov
xor
repz
push
push
jmp
pop
jge
rcr
sbb
pop
in
mov
movs
add
sar
pop
pushf
jno
pushf
add
xor
or
fwait
sub
adc
pop
dec
ins
into
xchg
xlat
xchg
adc
and
mov
mov
aaa
and
test
scas
inc
pop
movs
mov
movs
xor
cmps
scas
(bad)
retf
das
sub
pop
push
mov
push
xor
and
push
jmp
(bad)
adc
sub
or
mov
mov
mov
jl
mov
sti
cmp
inc
out
xchg
std
mov
add
lahf
pusha
sub
mov
and
jg
aad
into
pop
retf
xchg
xchg
stc
lahf
and
adc
pop
inc
jmp
je
mov
xor
sbb
and
jne
and
push
ret
sti
rol
in
ror
dec
outs
es
jge
mov
push
pop
das
push
out
xor
ins
cdq
add
mov
add
push
xchg
and
(bad)
in
rol
pop
call
outs
cmp
and
pushf
add
inc
pop
ja
(bad)
push
push
mov
xchg
pop
push
fs
adc
rol
popf
enter
sbb
aaa
inc
or
test
xor
ins
nop
inc
(bad)
adc
out
inc
push
mov
(bad)
frstor
mov
loope
cmp
sbb
xor
mov
leave
mov
mul
inc
mov
xor
das
adc
jo
sbb
cli
clc
in
outs
dec
leave
pop
(bad)
popf
rcr
cmps
into
repz
xchg
dec
dec
xor
test
dec
ret
and
pusha
addr16
cmp
movs
leave
movs
in
(bad)
or
(bad)
sbb
(bad)
sar
xchg
and
jbe
imul
mov
mov
fadd
pusha
cmp
cmc
stos
into
out
push
imul
push
mov
mov
fdivr
push
sbb
add
fcomp
cmps
in
fdivr
pop
mov
jo
mov
dec
sbb
add
cmc
into
imul
jmp
dec
(bad)
sbb
jge
dec
xchg
in
mov
(bad)
jnp
jmp
call
out
lods
add
jmp
add
std
icebp
and
hlt
push
call
loop
sahf
stos
sahf
add
mov
jno
mov
ror
xchg
loop
push
push
imul
cwde
retf
jnp
je
icebp
mov
mov
pop
fcomi
xchg
or
(bad)
outs
std
adc
retf
push
in
cmps
inc
cmc
pop
mov
or
ja
xor
loope
jg
ror
das
jecxz
out
pop
nop
repnz
xchg
pop
int
jecxz
cmp
ret
pop
in
pop
push
popf
call
xlat
mov
call
repz
jp
adc
xlat
rol
or
add
jo
push
sub
std
call
cmc
or
stos
scas
popa
jno
aas
mov
xchg
jns
adc
mov
rol
inc
into
jns
adc
call
adc
jnp
mov
arpl
iret
shl
mov
iret
in
ficomp
fldcw
sbb
pop
sbb
xor
cmp
jae
imul
cli
cs
fist
xor
mov
mov
inc
and
xor
sub
repnz
or
push
sub
and
xor
push
loope
int
xor
mov
cmp
test
fdivr
outs
push
int
test
ss
sti
inc
ret
cmp
mov
stc
call
and
push
mov
xchg
inc
test
adc
or
and
int3
lods
add
xor
pop
mov
add
push
and
cwde
jb
rcl
cmp
cld
test
ret
fisub
repnz
mov
pop
je
lea
push
idiv
int
pushf
mov
out
cld
xlat
mov
pop
dec
push
push
ds
fnsave
int
jmp
mov
adc
dec
shl
inc
jbe
adc
and
inc
retf
dec
add
mov
mov
(bad)
fistp
jmp
daa
push
imul
stos
xor
(bad)
sbb
mov
push
jne
seto
ret
sti
inc
dec
jns
scas
sub
popf
or
test
(bad)
je
(bad)
sbb
and
aam
fcmovnu
addr16
popf
sub
mov
inc
in
js
retf
mov
mov
jge
add
pop
xchg
adc
xchg
jg
outs
mov
fidivr
xchg
outs
in
dec
cli
cmp
(bad)
inc
add
push
xor
mov
scas
movs
adc
pushf
xchg
gs
push
lea
stos
fnstcw
pop
pusha
sub
jb
mov
cmps
dec
mov
pop
fxch
jns
loop
js
or
sbb
jnp
mov
(bad)
cmp
fld
sahf
push
inc
dec
and
into
cmps
je
jns
retf
inc
shl
call
sar
(bad)
pusha
pop
clc
add
add
dec
mov
cld
push
xchg
rcr
add
xchg
push
add
sbb
xor
aam
add
int3
fwait
(bad)
enter
adc
and
ins
jle
pop
xor
pop
js
mov
iret
xchg
loop
inc
dec
sub
pop
ds
push
retf
mov
idiv
sahf
stc
call
sub
imul
pop
xor
dec
sub
nop
loop
in
hlt
mov
test
fwait
loopne
rcl
pusha
adc
mov
xchg
shl
in
sbb
lds
adc
movs
int3
test
popw
push
cmp
rol
pop
xchg
ss
fimul
ins
inc
cmp
jo
mov
outs
adc
pop
pop
xor
xchg
loope
aas
push
push
add
xor
inc
sbb
xchg
mov
(bad)
xchg
das
adc
rol
jecxz
inc
sub
test
shl
ins
adc
or
sub
dec
cmp
enter
mov
inc
xlat
xchg
loopne
pop
add
push
and
arpl
push
call
jmp
std
mov
loop
fwait
cmp
mov
mov
pop
push
ja
cmps
fistp
xchg
test
cmp
cmp
cdq
retf
sbb
into
cmps
jmp
adc
addr16
and
inc
sbb
cli
scas
jmp
dec
cmp
mov
test
mov
scas
(bad)
jecxz
sbb
cs
push
jnp
cmps
test
cld
mov
mov
movs
(bad)
fistp
jno
je
jl
retf
mov
jns
pop
jb
int
inc
push
adc
scas
les
fisttp
mov
outs
sub
fisttp
sub
inc
or
aas
inc
push
dec
and
xchg
xlat
daa
outs
sbb
mov
cwde
std
lods
pop
loopne
jecxz
shl
aaa
inc
sub
push
int3
xchg
out
sti
mov
ret
mov
das
cwde
fwait
in
lods
xor
push
imul
pusha
and
in
cdq
rcr
jne
sbb
inc
add
jne
rcl
dec
jg
pop
sbb
xchg
xchg
push
aas
and
mov
fwait
out
mov
mov
pop
lods
adc
ror
in
pop
xor
inc
xor
lahf
iret
movs
push
inc
ds
xchg
out
aam
and
mov
jns
aas
jle
jbe
mov
adc
cmp
outs
sub
jne
push
mov
sbb
es
dec
lahf
hlt
sbb
mov
hlt
sub
repnz
xchg
pop
test
js
jb
repnz
out
mov
bound
xlat
scas
sti
mov
or
dec
xchg
mov
sub
dec
sub
adc
jne
inc
aaa
pusha
inc
xor
popa
adc
xlat
mov
bound
inc
mov
sbb
std
mov
test
sbb
inc
rcl
pop
push
mov
lods
jmp
mov
addr16
adc
pop
scas
not
sub
clc
popa
ret
mov
mov
dec
or
dec
or
sub
ins
rcl
movs
repnz
jecxz
cmp
dec
into
xchg
int
adc
push
or
add
push
pop
cmp
sub
xchg
retf
dec
in
out
push
movs
ror
movs
js
add
xlat
sbb
rcl
inc
test
imul
hlt
into
pushf
fmul
xchg
sar
pop
cmp
dec
and
scas
add
mov
sbb
nop
leave
(bad)
call
mov
stos
push
adc
inc
out
xchg
cli
xchg
icebp
or
dec
aas
jbe
retf
pop
add
jae
fdivrp
jp
dec
pop
retf
xchg
iret
and
addr16
mov
mov
(bad)
sbb
jns
stos
rcr
jno
mov
movs
aam
fild
mov
add
xchg
ret
sub
enter
sub
sbb
sub
imul
xor
cwde
fdiv
lahf
into
(bad)
out
lds
push
cmp
mov
push
sbb
out
sub
add
dec
clc
xchg
daa
xchg
out
loop
pop
or
pop
ss
(bad)
lahf
mov
out
enter
cli
xor
cmp
mov
repnz
mov
dec
sub
dec
cmp
cmp
sbb
mov
js
aaa
cmp
test
movs
hlt
lahf
jge
mov
movs
xchg
rcl
ja
add
pop
cmps
shl
mov
sahf
std
in
mov
stos
loop
cmp
imul
mov
xchg
nop
loopne
pop
mov
mov
adc
data16
pushf
jp
test
jae
pop
pop
jbe
cmps
or
pop
adc
call
mov
out
stos
fsub
cwde
or
dec
mov
add
dec
add
je
int
rcr
aad
mov
jne
push
adc
mov
stos
xchg
leave
pop
imul
or
js
dec
mov
pop
cmp
scas
ficomp
adc
movs
out
mov
xchg
lds
int
mov
inc
push
dec
xor
cmp
xor
and
call
xlat
mov
push
add
sbb
imul
push
adc
out
or
mov
lahf
cli
stos
rcr
ja
or
jmp
leave
mov
mov
or
movs
xlat
push
sub
aam
cmp
dec
sub
(bad)
leave
pusha
dec
xor
nop
ds
cmp
ja
leave
pop
cmp
sahf
in
mov
pop
or
iret
mov
jae
push
mov
stos
push
push
ss
les
js
dec
leave
sahf
fisubr
enter
lahf
enter
es
mov
cmp
ss
or
add
jmp
pop
sub
sub
aas
xchg
xchg
call
jb
push
add
in
cmp
lods
shl
sub
fidiv
mov
cmps
hlt
(bad)
xlat
xchg
xchg
sar
imul
mov
mov
mov
push
add
jmp
aad
xor
adc
jbe
pop
push
daa
jo
cli
inc
push
je
jo
jae
cmps
repz
hlt
or
scas
test
xchg
shl
add
sub
mov
jnp
imul
xchg
mov
dec
test
adc
into
cdq
lods
sbb
adc
ins
(bad)
mov
cmp
sbb
xchg
sbb
leave
and
aaa
ins
popa
sub
jbe
jbe
cli
mov
sbb
repz
fadd
inc
push
sub
inc
pop
sub
cs
pop
ss
add
pop
jb
ja
cdq
enter
(bad)
fistp
inc
idiv
jl
cmp
std
movs
div
test
sbb
mov
stos
out
mov
or
push
cmp
jg
imul
imul
fwait
leave
mov
mov
mov
push
dec
repz
loope
loopne
cmp
push
add
inc
adc
jb
stos
or
icebp
mov
push
push
ins
pop
sti
mov
or
push
stc
test
mov
stos
adc
and
jns
sahf
sahf
mov
push
cmp
dec
retf
stos
(bad)
jbe
pop
outs
sbb
push
dec
and
xor
rol
cmc
mov
jno
clc
ss
popa
push
cmp
jae
add
xor
leave
pop
adc
loopne
mov
fs
pop
test
bound
pop
and
push
sbb
mov
cmp
stos
mov
es
sbb
fnsave
cmp
adc
(bad)
push
stc
mov
loopne
pushf
rcr
push
sbb
jle
(bad)
xchg
daa
jne
icebp
out
test
mov
push
pop
inc
das
mov
iret
mov
mov
sahf
fistp
clc
mov
xor
in
pop
adc
mov
dec
cmp
shl
pop
push
sub
mov
xchg
loopne
loopne
xlat
mov
xchg
sbb
jbe
push
inc
dec
jns
sub
push
mov
retf
js
aas
pop
push
jae
push
adc
cmp
fmul
test
adc
cmp
loope
push
sbb
inc
ss
ret
(bad)
pop
adc
fisubr
test
mov
lea
dec
pop
jns
inc
or
int
sbb
cwde
les
dec
in
push
add
jmp
xchg
mov
hlt
mov
jecxz
into
xchg
cld
xor
fisub
stos
(bad)
neg
mov
mov
std
mov
ret
dec
push
inc
sub
nop
aam
popa
xchg
lds
push
and
xchg
lds
adc
mov
pop
cmp
ins
sub
or
jl
dec
cmp
mov
call
(bad)
out
popf
leave
in
sub
add
mov
dec
sbb
fmul
cmp
pop
cs
js
sub
xchg
jbe
fisubr
icebp
push
push
and
and
out
stos
out
cdq
shl
inc
cmps
out
hlt
pop
inc
stos
ret
sahf
hlt
adc
in
imul
mov
movs
in
xchg
into
in
and
iret
sahf
popa
ss
sahf
cmps
out
sahf
fistp
aad
fidiv
(bad)
lahf
in
out
stos
jle
cs
aas
dec
cs
mov
test
mov
aas
sub
jle
pop
daa
arpl
push
js
ins
inc
cmp
adc
mov
add
cld
mov
mov
push
test
sti
sahf
iret
cmp
ja
int
dec
sbb
jg
je
jge
xor
scas
jns
add
pop
push
xor
scas
fistp
push
cmp
inc
push
jae
aam
rep
dec
adc
mov
sti
scas
clc
out
add
or
inc
adc
xchg
cdq
in
mov
test
outs
pop
jae
stos
jmp
outs
adc
imul
adc
cwde
call
out
jp
arpl
jle
pop
in
ficom
aas
addr16
and
push
jno
je
lds
(bad)
idiv
out
je
pop
mov
nop
dec
int3
add
jno
jnp
pop
xchg
cli
imul
gs
out
cmc
mov
or
pop
pop
xor
pop
es
inc
mov
mov
ret
lods
out
mov
push
jmp
fnstenv
loope
inc
lds
pop
adc
ins
cs
cmp
out
movs
xlat
xchg
and
std
lods
ins
or
add
pop
mov
xchg
sub
leave
xchg
dec
jmp
sbb
add
add
ret
scas
out
jecxz
icebp
mov
or
(bad)
jg
frstor
dec
imul
out
das
fstp
push
sbb
mov
cwde
jo
sar
mov
imul
add
addr16
cmps
lds
pop
outs
sub
pop
adc
into
nop
dec
sbb
sub
lahf
mov
mov
(bad)
pushf
ficom
sbb
addr16
add
mov
dec
push
pop
or
mov
out
or
xchg
retf
mov
or
mov
adc
out
daa
cmp
jne
retf
jmp
or
jge
jle
hlt
mov
mov
push
adc
push
nop
lock
inc
add
mov
mov
scas
div
cmps
aam
ret
or
dec
je
pop
sbb
cmp
xchg
mov
add
je
imul
push
or
ss
dec
push
adc
fisttp
sub
imul
mov
inc
push
aam
sbb
jo
or
out
adc
or
(bad)
xchg
faddp
pushf
mov
mov
dec
inc
jmp
pop
xor
inc
adc
cs
adc
mov
ins
adc
daa
je
push
add
push
push
mov
mov
dec
xchg
fld
mov
mov
lods
mov
push
lock
mov
xor
retf
pushf
jae
aam
loopne
retf
mov
js
jne
mov
jecxz
xlat
jno
inc
xor
xor
cmps
cmp
pop
cs
sbb
arpl
clc
mov
hlt
mov
mov
ficom
xchg
into
mov
div
sbb
xchg
jle
dec
and
xchg
(bad)
shr
rol
xor
xor
xchg
iret
cdq
jle
outs
pop
mov
jns
sbb
push
push
jne
daa
push
sub
retf
mov
cmps
aas
imul
test
scas
out
stos
out
xchg
xchg
lds
xor
jno
jp
out
cmp
and
loopne
cld
mov
nop
jecxz
dec
push
and
lods
popw
dec
or
int3
mov
rol
mov
nop
icebp
mov
or
(bad)
jns
dec
or
push
jnp
mov
in
rep
into
cmps
(bad)
jae
push
sbb
mov
or
ss
add
es
push
inc
xor
adc
push
ret
mov
xchg
mov
jg
test
fbstp
inc
cmp
inc
push
add
adc
std
inc
xor
bound
jb
push
inc
add
fcomp
xchg
pop
and
pushf
push
cmp
sahf
xlat
xor
out
cmc
push
inc
xchg
retf
(bad)
in
fwait
int3
mov
dec
sbb
retf
shl
and
stc
jmp
adc
sub
push
adc
out
cdq
stc
xchg
repnz
push
je
cmp
imul
mov
xchg
inc
das
mov
std
xchg
adc
mov
xchg
pop
sbb
call
in
lods
lds
mul
lods
mov
les
popa
lahf
jo
jge
mov
or
rep
aas
dec
shl
pop
mul
xchg
into
ror
shl
mov
xor
dec
add
(bad)
fcomp
push
xor
cmp
repz
pop
or
and
mov
sahf
ficom
fsub
inc
add
mov
mov
jne
dec
and
pop
cld
test
cmp
pushf
pusha
jo
out
bound
bound
fcomp
inc
xor
push
xchg
fstp
or
je
pop
(bad)
fnstenv
dec
pop
test
mov
sub
test
das
and
imul
int
mov
push
adc
shl
mov
out
ror
outs
cmp
or
stc
mov
cdq
iret
mov
dec
pcmpgtd
push
nop
xlat
sub
ins
cmp
test
mov
test
pop
lods
ror
inc
push
dec
cmp
das
fst
xchg
hlt
or
jecxz
stc
sbb
ins
adc
pop
or
mov
jo
mov
adc
leave
repz
lods
cmc
movs
lea
jg
outs
cmp
jmp
lea
jle
pop
jge
cwde
mov
jns
out
je
and
test
inc
sti
mov
out
mov
loopne
push
mov
jmp
push
icebp
mov
cmps
test
cmp
shl
(bad)
scas
(bad)
pop
adc
cmp
pop
lods
adc
add
inc
add
push
cmp
mov
ret
mov
and
xor
push
fnsave
push
jl
stc
xchg
add
push
push
add
inc
add
jge
out
cmp
inc
aam
or
xor
or
ins
cmp
jo
stos
in
mov
push
popa
push
daa
outs
add
mov
xchg
movs
add
adc
mov
inc
retf
test
mov
add
and
adc
jae
mov
mov
jl
adc
pop
ins
cmp
xchg
ficomp
inc
push
cwde
fdiv
test
mov
mov
push
sar
pusha
xor
ss
or
(bad)
and
cld
stos
ficomp
es
pop
loopne
popa
daa
arpl
cmp
mov
sbb
xor
push
mov
test
and
imul
sub
jae
jnp
pop
push
add
xor
jge
sbb
je
arpl
pop
sbb
(bad)
cld
add
icebp
stos
sti
nop
ds
push
adc
mov
ret
mov
and
adc
rcl
sbb
jns
jb
push
pusha
int3
mov
or
pop
or
adc
adc
gs
inc
dec
sbb
rcr
out
lock
xor
add
fidiv
hlt
enter
mov
shl
pop
cs
ins
add
(bad)
aad
stos
pop
inc
xor
addr16
fdiv
lahf
xchg
outs
cmp
rol
fsubr
jle
loope
bound
gs
iret
sub
in
mov
cld
(bad)
into
mov
add
pusha
mov
mov
rol
or
mov
mov
dec
or
cmp
movs
das
cdq
jmp
sti
stos
out
mov
jmp
dec
cmc
xchg
retf
fwait
lock
inc
or
test
add
pop
cmp
jb
push
add
mov
pop
sub
add
xchg
cld
lahf
xor
mov
mov
adc
jnp
pop
or
sub
cwde
jmp
add
aas
push
xor
xchg
sub
ds
pop
mov
push
and
xor
ror
div
sbb
bound
lock
cld
call
dec
and
xor
outs
cmp
lahf
sti
and
or
push
cmps
out
out
enter
jbe
into
lahf
mov
mov
pop
sar
push
add
hlt
mov
push
and
cwde
jp
push
and
inc
or
xor
and
mov
cmps
ja
add
je
rcr
xchg
daa
push
adc
daa
push
into
mov
out
movs
clc
mov
add
jne
rcl
cdq
cmc
pushw
inc
adc
sbb
mov
cmp
add
and
push
push
stc
xchg
jo
imul
xchg
ret
mov
cmps
ret
bound
jne
push
push
int
pushf
into
mov
mov
adc
and
xlat
xchg
clc
or
in
mov
adc
ins
cmp
xor
lea
inc
adc
fcom
mov
test
dec
iret
mov
mov
xor
es
cwde
loopne
mov
mov
sub
mov
mov
lahf
rol
nop
fldenv
xor
cmp
jns
dec
cmovae
ss
and
gs
sbb
or
cmp
cmps
push
mov
enter
inc
sub
sbb
std
mov
movs
loopne
repnz
xchg
imul
les
add
cld
and
js
pop
fwait
leave
repnz
jp
dec
pop
or
cli
mov
outs
and
repnz
iret
cmps
(bad)
(bad)
test
popa
pop
pop
mov
mov
in
cmc
movs
rol
mov
jnp
sar
cmp
pushf
fmulp
push
and
dec
out
iret
mov
or
add
or
adc
scas
cwde
retf
push
sub
adc
push
mov
outs
dec
xor
fld
add
ss
jb
rol
aas
(bad)
sub
inc
or
scas
lds
sbb
lods
mov
cmp
dec
sub
in
sar
push
adc
dec
and
in
mov
push
jge
int
xor
scas
(bad)
out
mov
fs
addr16
inc
sub
sub
outs
sub
lea
in
mov
emms
sub
xchg
aam
(bad)
mov
mov
mov
std
mov
xor
mov
div
mov
mov
sub
or
xor
mov
xchg
pop
(bad)
mov
xchg
(bad)
sbb
xchg
in
movs
xchg
call
cmp
stos
(bad)
std
mov
push
out
scas
(bad)
cmp
mov
xchg
inc
xor
cmp
cmc
mov
lds
inc
sbb
(bad)
fisubr
sbb
div
outs
in
pop
inc
test
pusha
push
inc
xor
cli
jp
test
adc
xchg
iret
push
shr
push
iret
cmp
or
pop
sbb
mov
inc
sbb
xor
jge
fcom
jne
bound
mov
lds
fisub
out
mov
ror
pop
cmovnp
fmul
inc
sbb
nop
retf
(bad)
leave
add
add
xchg
push
add
leave
mov
pop
(bad)
imul
sbb
loope
xor
movs
scas
ficomp
fs
daa
push
inc
add
cli
addr16
(bad)
pop
fist
jnp
mov
cli
xor
sub
jbe
or
cmp
or
shl
jecxz
sbb
or
div
cdq
icebp
pushf
pushf
pop
push
pop
ss
cmc
xchg
(bad)
xor
movs
rol
or
pop
sub
enter
jno
mov
sub
ja
push
loop
ins
stos
dec
cli
mov
popf
jle
adc
add
and
pop
and
cmps
ror
jns
clc
dec
std
mov
and
loop
xchg
arpl
inc
or
sbb
sub
ror
(bad)
(bad)
lods
out
push
adc
(bad)
fld
pop
and
ds
sti
mov
call
sub
scas
fild
pop
sti
sub
pop
adc
pop
in
xlat
jmp
mov
sub
adc
pop
or
cmc
sub
pop
push
dec
out
jg
pop
or
lods
jmp
test
add
fbstp
(bad)
sub
and
and
stc
mov
cmp
(bad)
ja
rcl
das
mov
push
sbb
mov
inc
sbb
mov
out
mov
adc
pop
leave
inc
pop
push
adc
movs
int3
jns
cmp
pop
in
popf
fcomp
mov
das
jno
pop
aam
dec
or
aas
sub
sub
mov
dec
push
xchg
xchg
(bad)
shl
and
daa
fistp
sub
jmp
call
add
adc
xchg
shl
push
es
or
clc
nop
std
arpl
mov
add
push
push
or
(bad)
imul
loopne
std
mov
jb
xor
cmp
ss
mov
xchg
rcr
ret
xchg
fistp
scas
jl
push
adc
and
mov
adc
cdq
rcl
jle
pop
xor
cmps
repnz
cmps
les
bound
aas
ja
pusha
sub
add
mov
aam
leave
(bad)
retf
lea
fnsave
in
scas
dec
lahf
jmp
jmp
cmps
out
xchg
push
sub
xor
dec
sbb
icebp
lock
gs
and
push
pop
push
add
inc
cmp
cmp
clc
adc
push
cmp
mov
or
ficom
jecxz
mov
add
or
push
loop
imul
mov
mov
dec
cmp
or
xchg
mov
and
dec
xor
or
ret
sti
lods
repz
pop
andps
cmp
jg
sub
push
add
lods
cmc
bound
jg
or
or
mov
sar
pop
loope
fisubr
dec
sub
pop
sbb
push
and
ds
push
mov
push
dec
or
sbb
push
or
(bad)
add
fmul
cdq
(bad)
pop
jnp
pop
or
outs
sbb
stos
mov
pop
push
jge
cwde
jbe
fisttp
jmp
sbb
ins
pop
dec
sub
jle
push
push
cmp
dec
sbb
arpl
pop
popf
pusha
das
push
adc
inc
or
ins
add
icebp
mov
mov
mov
mov
mov
sahf
mov
sti
scas
lahf
pop
in
ficom
xchg
dec
cmovnp
jno
popa
adc
inc
sbb
dec
cld
mov
push
mov
call
test
in
inc
add
add
add
jb
pop
loopne
fadd
retf
add
inc
into
fwait
retf
stos
stos
pop
das
jnp
push
mov
mov
cmps
jmp
push
sar
dec
sbb
std
fwait
clc
xchg
(bad)
mov
and
mov
je
(bad)
clc
mov
jns
pushf
lds
lahf
call
push
jne
add
xor
rcl
gs
je
jp
dec
add
jae
out
enter
fisub
push
add
xchg
(bad)
out
clc
mov
cmp
jg
addr16
xchg
push
add
xor
push
call
xor
mov
test
pushf
dec
xchg
int3
mov
dec
test
ds
mov
adc
mov
loope
jg
es
hlt
mov
mov
shr
xor
sbb
outs
sbb
jle
inc
add
pop
sub
sub
jae
addr16
sbb
dec
mul
push
inc
add
inc
in
xchg
jns
hlt
test
mov
mov
movs
fisttp
sbb
cmp
dec
jecxz
test
mov
popa
xor
call
sahf
pop
jno
inc
cld
mov
lods
cmc
add
pop
xor
mov
hlt
lahf
test
test
addr16
js
push
or
daa
dec
cmp
push
fdivr
mov
sbb
jb
and
add
aas
pop
pop
push
es
(bad)
xchg
int
hlt
mov
sbb
test
mov
xchg
rcl
xor
xchg
shl
test
adc
push
and
cld
(bad)
aad
jge
(bad)
fwait
aam
rcl
xor
mov
test
mov
inc
add
inc
or
jmp
xchg
fwait
sti
xchg
call
mov
mov
xchg
repnz
daa
je
jne
pop
adc
push
add
inc
idiv
jns
inc
or
cs
rcl
xchg
mov
call
sub
mov
les
ja
and
jle
es
dec
cmp
ror
outs
sbb
cld
stos
mov
add
loopne
mov
mov
mov
cdq
mov
pop
ds
mov
fdivr
xchg
popf
shl
rcr
lods
lock
inc
cmp
xchg
loope
test
xchg
out
mov
mov
lods
test
fwait
scas
fadd
pop
add
xor
bound
xor
ret
inc
add
xchg
mov
in
mov
das
mov
add
xchg
ret
xor
xor
push
lds
inc
bound
push
ss
stos
fld
add
in
cdq
fadd
sub
inc
mov
jg
sub
mov
mov
pop
inc
push
retf
push
adc
cmc
jmp
mov
das
pop
pushf
mov
push
ss
sbb
dec
ds
aaa
mov
xchg
xchg
clc
xchg
(bad)
lea
sti
xchg
or
fnstenv
outs
jecxz
sbb
pop
lock
jne
pop
fisub
ret
mov
arpl
ds
mov
call
jb
dec
mov
sbb
bound
cld
je
inc
sbb
xchg
mov
xlat
mov
lods
(bad)
jp
push
pop
adc
jmp
stos
push
pop
es
push
pop
shl
enter
cmp
cmps
xchg
inc
push
das
jne
sub
es
test
cmp
call
sbb
sar
mov
leave
mov
jo
icebp
xchg
xor
or
retf
pushf
dec
aad
test
mov
sbb
mov
inc
xchg
movs
clc
mov
cmp
push
and
and
mov
mov
xor
in
(bad)
lahf
pop
add
add
jae
ins
sub
pop
sbb
jne
dec
es
pushf
enter
push
fs
sub
jnp
push
aas
dec
pop
jo
jne
push
push
pop
xor
je
inc
or
pop
push
jnp
pop
or
pop
adc
sub
pop
cmp
sbb
dec
loop
ror
test
mov
xchg
dec
fisub
imul
mov
int3
test
jmp
jns
popa
cmp
inc
daa
std
test
adc
pusha
xor
jo
push
bound
or
ret
pop
sbb
push
lds
ja
sbb
stc
mov
add
or
adc
ds
cld
stos
stc
cmp
in
bound
jo
dec
mov
xchg
xchg
retf
pop
retf
xchg
jecxz
mov
xchg
push
add
mov
jl
sub
(bad)
push
and
daa
je
rcl
fwait
dec
fcmovnu
mov
mov
inc
pop
xor
jmp
fs
imul
mov
xchg
(bad)
lods
ins
lods
pop
pop
ret
es
leave
mov
lahf
movs
fild
jge
outs
sub
aad
fiadd
cs
div
push
or
mov
lods
jmp
rol
gs
cmp
xchg
or
movs
clc
bound
sbb
jo
stc
mov
ja
pop
pop
ja
push
repnz
aam
sbb
sbb
adc
stc
xchg
mov
loopne
fistp
js
or
mov
sub
ret
popf
cld
xchg
shl
ja
dec
out
mov
mov
ins
push
xor
sbb
call
mov
pop
and
push
rcr
sahf
mov
pop
int
in
data16
push
jl
jne
xchg
(bad)
mov
cld
or
pop
pop
and
fsub
mov
mov
inc
and
jnp
or
gs
sbb
ins
sbb
popa
sbb
inc
fisttp
pop
sbb
pop
ss
es
add
dec
pop
adc
dec
xor
repz
outs
sbb
and
dec
xor
jne
sub
pop
adc
ret
xchg
shl
je
inc
xor
pop
fbld
ja
xor
push
jp
imul
add
call
into
(bad)
xchg
xchg
mov
mov
addr16
dec
or
xchg
mov
out
movs
jmp
and
enter
jbe
or
aaa
pop
add
pop
jmp
or
(bad)
lahf
adc
lods
fldenv
lahf
push
or
js
in
call
cli
mov
movs
jl
pop
sub
jbe
mov
arpl
int3
mov
inc
inc
or
sub
cmp
das
mov
mov
int
out
ins
aas
and
or
dec
clc
fwait
call
mov
cmps
pusha
mov
xchg
enter
mov
push
or
das
(bad)
pop
xor
dec
cwde
shr
es
pop
sbb
inc
sbb
in
lds
pushf
mov
mov
sahf
jp
mov
push
pop
rol
loopne
dec
sub
and
sbb
jne
rcl
pop
push
push
and
mov
sahf
shl
mov
and
adc
inc
cmp
push
es
in
cmps
jmp
lods
dec
mov
push
or
push
ud2
imul
call
cli
test
jp
xor
mov
mov
lock
cld
xchg
mov
movs
rcr
(bad)
mov
sar
and
retf
xchg
stc
call
in
mov
push
out
mov
adc
push
das
jne
dec
movq
pop
sbb
cmp
or
dec
cmp
inc
xor
sbb
fs
inc
push
jge
jbe
pop
pop
pop
cmp
push
pop
push
add
arpl
loop
sbb
loope
push
xor
outs
or
sbb
pop
pop
scas
test
fdiv
pushf
adc
shl
xor
inc
or
push
icebp
mov
sbb
retf
rcr
loop
out
mov
(bad)
cmps
cmc
mov
sbb
push
adc
scas
adc
stos
sub
test
mov
(bad)
pushf
mov
mov
mov
mov
fld
fldenv
out
shl
data16
arpl
xor
outs
(bad)
fcmovu
lahf
cdq
mov
enter
adc
in
xchg
inc
repz
mov
dec
inc
add
cdq
popa
push
add
or
ins
cmp
mov
hlt
mov
cmp
sub
or
sbb
push
push
push
aaa
out
mov
loopne
int
sti
mov
adc
(bad)
call
xor
inc
xor
in
mov
mov
or
mov
dec
pusha
xchg
shl
mov
push
add
inc
test
pushf
fisttp
das
(bad)
mul
mov
and
jns
pop
inc
add
push
pop
mov
push
call
aad
stos
movs
into
push
pop
push
lahf
adc
(bad)
dec
movs
push
add
xor
fwait
sub
stos
lods
stos
lods
ficomp
sbb
jnp
aaa
or
jo
inc
sbb
pop
sbb
adc
inc
sub
cmovnp
push
or
cs
cmps
rcr
mov
test
cmp
sub
mov
call
pop
shl
adc
movs
ficomp
cwde
icebp
xor
xchg
and
stc
push
adc
popf
fldcw
les
ds
xchg
cwde
dec
inc
or
cmps
sub
sbb
xchg
add
xchg
or
push
adc
(bad)
ret
xchg
(bad)
fwait
test
push
dec
xchg
rcr
mov
jns
out
sti
mov
pusha
dec
jecxz
sti
xchg
mov
sbb
jecxz
cmc
mov
push
add
add
jmp
iret
data16
xor
(bad)
xchg
mov
push
test
mov
pop
icebp
xor
leave
imul
jge
push
inc
and
sbb
mov
(bad)
or
int
es
ja
xor
xor
lahf
cdq
cdq
push
sbb
sbb
lds
mov
mov
xchg
push
and
adc
inc
sub
cmp
jnp
inc
push
xor
mov
dec
or
arpl
push
push
push
test
pop
add
into
mov
aas
jge
inc
sbb
pop
fst
push
in
mov
xchg
in
in
fs
pop
pop
push
in
inc
push
arpl
push
(bad)
mov
mov
inc
sub
adc
mov
je
pusha
cs
mov
mov
and
xor
jmp
or
cmp
add
dec
sbb
es
inc
mov
iret
xchg
iret
push
and
jns
mov
sub
cli
xchg
test
cmp
xchg
stos
fwait
leave
mov
mov
movs
jge
jle
jbe
ror
pop
add
out
xor
test
dec
or
arpl
je
hlt
mov
push
addps
pop
stc
mov
push
ja
and
jge
adc
push
sbb
rcl
dec
jmp
daa
push
inc
movs
int3
mov
out
addr16
rcl
jl
ins
xor
inc
ss
adc
sub
int3
push
ds
aas
std
fsub
dec
cmp
jne
popa
das
sti
fbstp
or
push
call
jmp
stos
ror
movs
(bad)
mov
lods
ja
mov
xor
call
cmp
and
jbe
dec
sub
pop
repz
dec
pop
jb
ja
mov
pusha
pop
pop
pop
sub
fidiv
add
mov
rcl
test
aaa
xor
leave
out
jl
jl
mov
stc
cmp
je
jmp
cmp
ret
and
dec
sub
sub
outs
or
cmp
cmp
inc
add
cmp
cmp
sbb
inc
adc
adc
(bad)
shl
push
xor
hlt
push
inc
sub
add
and
mov
xchg
shl
sbb
repz
ins
out
mov
int3
scas
scas
sti
mov
jmp
xchg
jns
clc
mov
rcl
mov
jnp
jbe
dec
icebp
movs
inc
call
int3
mov
movs
into
mov
into
call
sub
xor
dec
test
arpl
push
cmc
mov
xor
mov
xchg
inc
jo
and
jecxz
or
in
pop
or
and
stos
mov
push
lods
jmp
aad
in
cmp
add
les
mov
out
add
push
es
out
cmps
das
push
mov
xlat
aaa
cmp
sub
fsubr
mov
mov
pop
pop
loop
and
sbb
inc
daa
out
cmp
jo
xchg
rcl
xor
sub
xchg
sbb
popw
push
pop
jl
mov
aaa
loopne
pusha
mov
cs
(bad)
pop
lea
pop
sbb
adc
adc
sbb
retf
test
mov
adc
jnp
inc
out
xchg
xadd
loopne
jae
xlat
xchg
fldcw
mov
(bad)
xchg
aam
inc
ds
and
or
push
jmp
jmp
or
pop
or
jo
jmp
retf
sahf
ficom
cdq
dec
add
mov
add
addr16
jp
inc
xor
sbb
xlat
add
imul
ds
or
out
lds
cdq
fisttp
jmp
jg
dec
jmp
xor
inc
mov
(bad)
jle
pop
out
or
gs
ds
push
out
xor
or
test
cmp
push
add
ret
ins
sub
dec
adc
push
add
jnp
pop
fwait
push
push
fs
enter
movs
les
ficomp
xchg
sbb
jno
pop
shl
lea
inc
daa
push
or
vmwrite
rcl
adc
addps
push
mov
movs
pop
mov
test
iret
repnz
ins
adc
or
jb
jnp
pop
sbb
jl
cmp
je
dec
sbb
adc
(bad)
xor
daa
pop
xor
(bad)
ins
cmp
cmp
jmp
sti
cdq
cli
lea
push
lds
or
call
mov
jecxz
fnstenv
lahf
lods
in
test
inc
xchg
jp
aad
inc
sub
jmp
addr16
push
cmp
xchg
ret
fs
sub
push
aaa
ja
dec
out
lock
fwait
into
cmp
mov
aad
dec
stos
mov
dec
push
add
mov
stos
les
dec
in
in
dec
xlat
cdq
in
mov
and
pusha
push
inc
add
ss
and
std
pushf
or
cmp
mov
test
xchg
iret
ss
adc
mov
ret
addr16
cmc
popf
enter
mov
clc
cs
push
aaa
push
adc
imul
test
dec
loopne
in
jbe
jb
jbe
mov
int
push
push
mov
sbb
inc
call
xchg
inc
aam
(bad)
int3
mov
imul
cmps
imul
mov
mov
nop
les
or
inc
sub
sub
cld
mov
ja
push
and
adc
or
mov
add
gs
sub
(bad)
retf
xchg
hlt
and
push
cmp
cmp
or
sub
push
pop
out
cli
cmp
inc
or
(bad)
fisttp
in
fsubr
adc
ins
lods
fst
mov
mov
cmp
push
adc
shl
inc
xchg
jns
dec
loopne
or
pop
mov
hlt
dec
sbb
jmp
aas
dec
or
and
repnz
inc
xor
xchg
in
lods
repz
(bad)
mov
mov
fdivrp
stos
dec
xchg
js
cs
rcl
xacquire
call
sbb
bound
dec
in
cmc
xchg
stos
movs
push
sbb
pop
mov
xchg
xchg
scas
cwde
add
dec
in
mov
cli
cmp
cmovne
call
scas
les
js
inc
adc
cmp
sub
dec
stos
std
test
bound
jmp
in
sbb
pop
sub
mov
ss
outs
or
test
sub
cmp
xor
dec
or
xchg
je
jns
and
jle
fnsave
cdq
out
scas
out
mov
pop
sbb
das
inc
adc
ficom
stos
repz
rcl
sbb
dec
shl
dec
in
xchg
pushw
jp
jb
call
mov
lods
ficomp
pop
pop
sub
or
jg
out
shl
mov
jmp
adc
push
out
jle
jbe
ja
fmul
add
push
dec
out
rcl
jne
pop
ret
mov
es
sbb
xchg
clc
pop
fld
nop
shl
add
inc
sub
ds
sbb
dec
(bad)
xchg
jmp
ror
stos
mov
stos
add
xchg
push
add
push
and
jae
pop
xor
sub
pop
sbb
or
pusha
sbb
dec
lods
rol
adc
dec
cmp
ds
xor
or
push
ficom
mov
push
pop
inc
ins
cli
push
add
scas
out
xchg
jl
mov
stc
es
ins
loope
loop
ret
outs
pop
inc
add
call
hlt
dec
adc
mov
mov
push
daa
jae
inc
xor
or
add
xchg
cmc
movs
push
add
mov
shl
jns
jae
dec
lds
push
loope
leave
call
loope
mov
call
push
and
ins
jb
dec
or
(bad)
xchg
(bad)
scas
(bad)
aam
and
dec
adc
mov
and
sub
xor
retf
add
ins
pop
inc
test
movs
retf
jge
dec
sbb
movs
int
sti
(bad)
int3
ficomp
add
es
jp
mov
mov
in
xor
push
mov
xchg
in
(bad)
push
push
add
lahf
mov
dec
cs
or
loopne
and
xor
jnp
jbe
cmp
cld
mov
add
idiv
sbb
out
cmps
retf
(bad)
push
and
xchg
(bad)
push
mov
xchg
test
jmp
lods
cmc
jecxz
xor
das
js
adc
xor
data16
mov
sbb
jae
stc
stos
out
dec
mov
mov
xchg
fwait
int
pop
leave
mov
out
jmp
jmp
cmp
mov
(bad)
mov
xchg
xchg
imul
pop
adc
lods
shl
jle
das
jg
dec
ret
test
dec
mov
arpl
mov
aad
mov
ds
adc
cmovp
push
mov
add
ins
sub
cmp
push
jb
inc
int
out
push
and
add
cmp
out
cmp
lock
lock
and
fldcw
fs
(bad)
mov
clc
pushf
out
mov
mov
jl
dec
xchg
(bad)
imul
adc
push
mov
mov
push
push
pop
jg
les
aas
aas
outs
add
outs
lds
adc
xlat
xchg
mov
int3
mov
out
mul
imul
in
sbb
sbb
add
shl
push
xor
pmullw
bound
enter
jne
mov
add
add
inc
add
bound
pcmpgtd
xchg
retf
out
stos
(bad)
dec
xor
cmps
rol
add
xchg
mov
(bad)
(bad)
jecxz
sub
push
jb
mov
mov
aad
hlt
fisttp
inc
sub
xchg
aad
out
les
call
mov
xchg
loopne
add
push
pop
ins
add
pop
push
mov
lds
pop
jbe
outs
das
jns
stos
lock
push
pushw
sbb
out
(bad)
imul
jmp
movs
out
add
push
xor
jnp
ins
mul
xchg
jns
push
inc
push
mov
xchg
ins
mov
bound
xor
jo
pop
nop
mov
popf
shl
add
loopne
adc
pop
or
icebp
xchg
mov
adc
cld
mov
add
jle
jp
retf
mov
cli
jne
push
cwde
fistp
add
movs
mov
xchg
xchg
aad
push
or
push
push
sub
inc
fisttp
sahf
les
ins
fst
jnp
xor
gs
js
pop
push
add
aam
add
jecxz
into
cwde
fmul
sub
inc
ss
sbb
pop
adc
sbb
cmp
mov
int
les
je
mov
sbb
(bad)
loope
or
cs
ins
nop
sub
je
aaa
dec
adc
pusha
cmp
pop
xor
loope
call
neg
jg
ret
mov
lods
mov
movs
dec
or
cmp
in
cdq
outs
loope
sbb
xor
or
mov
and
jg
xor
imul
push
dec
lods
(bad)
enter
mov
xlat
mov
leave
adc
push
rcr
push
lea
push
xabort
enter
or
pop
cmp
pop
and
add
sub
mov
sbb
outs
add
pop
or
pop
loop
ror
or
or
lods
(bad)
in
mov
daa
cs
mov
mov
pop
sbb
add
gs
jno
dec
in
mov
xlat
enter
cmp
inc
shl
jl
fstp
ins
int
das
jne
sar
sbb
out
fild
adc
sti
dec
adc
inc
lock
xchg
pop
sub
movs
pusha
enter
add
and
or
mov
push
iret
sub
jmp
sbb
dec
fimul
pop
sbb
jae
xchg
js
jae
mov
mov
sti
imul
push
outs
rcr
sbb
fbstp
sar
inc
sbb
push
add
ins
test
xor
inc
adc
test
enter
cli
inc
bound
test
addr16
mov
mov
shr
cmp
stc
sbb
arpl
imul
and
jmp
dec
std
mov
call
dec
pop
je
pop
cvtdq2ps
fist
and
addr16
(bad)
in
retf
inc
mov
lock
dec
sub
pusha
sbb
lds
mov
mov
shr
jno
mov
sub
clc
mov
(bad)
xlat
or
dec
sbb
dec
sub
call
ins
imul
out
inc
aas
addr16
js
jne
cmp
loope
xchg
rol
dec
aas
jnp
inc
mov
test
fcomp
test
(bad)
fisub
adc
sahf
nop
sti
cwde
jmp
out
adc
adc
mov
in
sbb
stos
iret
mov
add
inc
scas
push
xor
shr
xchg
imul
cld
cmps
jl
push
movs
(bad)
scas
push
shl
addr16
add
ins
(bad)
enter
add
aas
frstor
jmp
dec
mov
sbb
cwde
leave
add
sub
jg
push
les
cmp
and
jb
sar
xor
and
push
add
and
xchg
fldl2t
pop
(bad)
xchg
pop
inc
xor
ja
test
push
pop
dec
or
dec
inc
cs
fisubr
xchg
jmp
das
test
xor
mov
xchg
ret
push
fldcw
push
sub
outs
pop
dec
xchg
cld
mov
fisubr
pop
sbb
xor
and
in
lods
push
imul
dec
and
imul
int
out
push
jmp
push
add
shr
cmp
and
mov
cmp
jl
imul
push
push
mov
fidiv
stos
xchg
popa
(bad)
out
pop
sbb
and
cld
mov
(bad)
push
daa
jo
sbb
outs
(bad)
aas
outs
add
and
les
dec
shl
ins
add
int
cmps
jge
leave
mov
sahf
stos
pcmpeqw
mov
jnp
mov
mov
das
inc
aam
sub
push
sub
jns
imul
and
test
inc
sbb
mov
neg
call
push
add
popf
ja
push
shl
push
or
inc
arpl
daa
outs
imul
and
call
icebp
shl
loopne
dec
and
fdiv
cmps
jmp
dec
sbb
sub
inc
aad
not
jp
jb
cli
jge
loope
push
add
cmp
(bad)
cmp
jle
cmp
les
sahf
les
retf
mov
ss
rcr
pop
adc
into
call
and
scas
lds
in
int
adc
mov
mov
es
adc
xchg
jmp
fstp
repnz
push
lods
mov
sbb
push
add
mov
mov
add
mov
stos
inc
pop
jo
into
add
icebp
and
call
jl
and
mov
mov
ret
ficomp
cmp
jae
and
mov
inc
add
xchg
push
aas
loop
push
mov
icebp
mov
add
das
jg
ins
cmps
arpl
push
ret
xchg
out
mov
inc
sub
(bad)
mov
cmps
pop
inc
push
and
push
and
daa
pop
push
jg
lahf
sar
aas
and
nop
loop
add
pop
bound
sbb
mov
cmp
test
mov
rcr
jle
imul
push
push
out
jp
push
out
push
daa
jo
shr
out
retf
bndstx
jmp
pop
jecxz
es
adc
and
fist
lock
std
pop
xchg
pop
jbe
out
scas
push
sbb
xor
push
ficomp
outs
stos
mov
aad
jns
jo
cmp
pop
stos
fmul
and
jp
pop
out
mov
inc
jmp
aad
push
adc
lock
or
shr
push
inc
pop
sbb
jmp
repnz
jne
retf
arpl
xor
aaa
or
cli
cs
cmp
hlt
test
loope
(bad)
pop
in
xchg
sub
xor
lds
mov
sub
ja
hlt
mov
lds
jns
out
test
repz
fnstsw
call
(bad)
or
sbb
cdq
xchg
inc
in
arpl
div
jne
div
push
out
sub
sti
mov
mov
jecxz
icebp
or
sbb
push
dec
mov
sub
int
add
test
mov
ins
push
test
mov
cmp
stc
mov
loopne
clc
and
xor
mov
ja
pop
test
cdq
(bad)
jo
push
push
sbb
pop
adc
and
sbb
cmp
bound
or
xchg
rcl
xchg
aam
aad
pop
push
fld
addr16
mov
jecxz
mov
scas
mov
pop
mov
out
pushf
enter
add
cdq
int
imul
dec
add
jbe
cmp
fsub
sbb
fsub
fld
daa
jecxz
call
repnz
jp
cmps
aad
cmp
sahf
xlat
inc
or
fistp
(bad)
scas
in
xor
sbb
data16
call
inc
jb
push
add
mov
test
mov
adc
movs
xchg
in
push
pop
push
cmp
into
push
pop
jns
rcl
lods
fnstenv
sub
push
das
ja
xor
outs
mov
xchg
jl
int3
fwait
or
or
call
push
ss
sbb
or
sub
leave
daa
loope
loop
daa
pop
push
push
pop
sbb
cs
add
add
push
add
cli
stos
sar
addr16
dec
cmp
jbe
test
ss
dec
pop
sbb
sub
aad
pop
inc
push
inc
cmp
push
xchg
(bad)
xchg
fild
jns
sub
(bad)
mov
inc
sbb
pushf
ja
test
cmps
add
fs
hlt
mov
jne
(bad)
mov
mov
mov
jb
(bad)
mov
mov
fimul
cli
push
pop
ins
push
cmp
mov
cs
jp
dec
test
inc
sbb
push
mov
inc
adc
mov
adc
sbb
sub
jo
jae
xchg
jp
pop
sub
outs
jae
jecxz
out
(bad)
adc
and
mov
test
inc
mov
mov
cmps
pusha
cmps
data16
sbb
lds
push
mov
mov
push
cmp
retf
or
dec
sbb
int3
sub
mov
xchg
pop
into
mov
push
sub
test
xchg
jne
pop
cli
imul
leave
sub
jecxz
shl
sahf
(bad)
sub
mov
in
cwde
iret
and
adc
pop
cmp
dec
gs
inc
or
adc
bound
add
jl
dec
ds
retf
test
enter
mov
push
jnp
and
addr16
xchg
mov
or
aaa
mov
jns
outs
xor
jge
pop
sahf
or
push
push
jg
bound
push
dec
mov
(bad)
push
mov
dec
push
pop
les
xor
es
in
lahf
enter
mov
test
inc
push
test
mov
pop
dec
or
aam
ja
pushf
cmc
fnstsw
push
adc
pop
mov
test
(bad)
adc
lock
rcr
xor
inc
lahf
into
movs
in
add
pop
fwait
in
movs
int
pop
pop
sbb
mov
xchg
ja
push
mov
out
scas
cmp
gs
repnz
sbb
push
cmp
lods
jmp
mov
sub
daa
mov
lods
(bad)
sbb
(bad)
fyl2xp1
xchg
mov
mov
adc
dec
xchg
out
sub
call
aas
jnp
sti
xchg
aaa
and
mov
sbb
cld
mov
lods
aad
pop
or
and
sbb
mov
mov
mov
test
cmps
dec
and
cmp
lods
jmp
xchg
dec
loop
jbe
rol
(bad)
movs
call
inc
mov
pop
adc
aas
xor
rol
cmp
mov
ins
mov
and
adc
dec
pop
pop
je
test
(bad)
in
cwde
iret
sti
xor
mov
test
shl
sub
pop
cmp
pop
sbb
(bad)
fwait
retf
or
fwait
jmp
ds
xor
aam
popf
lds
popf
jmp
stos
jbe
pop
mov
add
xor
mov
std
jns
hlt
mov
jg
pushf
lods
inc
add
stos
nop
and
xchg
cmc
add
lahf
(bad)
loop
and
repnz
jecxz
lahf
int
sub
xlat
xchg
(bad)
in
fiadd
xchg
sar
ins
popf
pop
cmp
stos
retf
xlat
test
leave
scas
dec
es
xor
fs
stos
ror
xchg
jge
pop
retf
jg
jb
jne
jle
pop
mov
or
mov
and
xor
sub
aaa
les
or
scas
jmp
mov
mov
loopne
std
das
push
sub
test
adc
leave
popf
fist
lods
into
adc
push
js
pop
pop
adc
adc
movs
jmp
lock
retf
jo
jbe
pusha
and
(bad)
mov
mov
push
jo
fstp
pop
adc
jnp
pop
sub
inc
xchg
pop
or
jb
dec
add
push
lods
push
addr16
sub
bound
jae
hlt
mov
movs
movs
cld
mov
push
push
xor
fldcw
xchg
js
(bad)
cmc
mov
cld
add
cmp
(bad)
call
and
test
jo
xchg
mov
int
mov
xchg
fs
jp
dec
imul
dec
or
imul
inc
mov
mov
xor
mov
lahf
add
arpl
fiadd
dec
or
xchg
leave
cld
adc
dec
fsub
mov
sbb
adc
iret
sbb
adc
mov
add
pop
mov
sti
mov
icebp
mov
movs
cmp
mov
scas
push
xchg
jmp
push
mov
imul
(bad)
shl
push
add
enter
lea
inc
mov
jl
aad
inc
adc
mov
les
cli
or
mov
xor
ja
fadd
xchg
jle
mov
mov
dec
sbb
dec
xor
ins
mov
pop
inc
cmp
stos
sti
mov
sub
out
mov
jmp
jns
jae
sub
push
jg
dec
xchg
cmp
(bad)
ins
cmp
repnz
sbb
mov
je
mov
int
test
paddd
push
pop
sbb
sar
jne
push
adc
fs
les
inc
pop
sti
sub
je
and
int
add
dec
jmp
jge
loop
rcr
mov
in
shr
adc
aam
outs
xor
sbb
into
lahf
fistp
lock
call
mov
das
imul
jb
outs
cmp
cmps
push
scas
(bad)
mov
push
cdq
(bad)
mov
or
add
pop
push
pop
iret
jecxz
lock
mov
mov
mov
cmp
sub
and
jns
or
aaa
jp
xor
mov
ds
pop
sbb
xchg
mov
loope
inc
stos
mov
cmp
add
fwait
xlat
inc
hlt
stos
rcl
(bad)
pop
adc
js
outs
sub
pop
cmp
rol
jge
inc
retf
push
(bad)
push
add
je
mov
mov
loop
rcl
and
lahf
pop
push
gs
fs
jecxz
fst
dec
sub
mov
mov
data16
jae
arpl
imul
int
ds
lahf
enter
addr16
ret
(bad)
pop
or
push
bound
push
sbb
js
addr16
rcl
adc
dec
ds
aas
adc
dec
or
xor
outs
sub
cs
or
xchg
xlat
xchg
fsubp
push
dec
and
push
sub
jns
imul
jno
add
jmp
sbb
or
inc
and
mov
cmp
popf
fcom
and
pop
out
or
aas
push
push
xchg
jmp
out
mov
push
pop
arpl
jno
ret
pop
jns
js
jmp
jg
(bad)
int3
mov
mov
add
repz
jmp
sbb
or
imul
cmovnp
mov
jb
in
sbb
jle
xor
xchg
shr
fisubr
push
lds
pop
xor
test
call
add
sub
pop
pop
enter
fisttp
adc
adc
test
add
jle
ret
nop
aam
(bad)
and
add
lahf
retf
add
adc
popa
or
xchg
jae
dec
fild
push
ss
ret
xchg
ret
dec
or
cmp
jge
lds
imul
jnp
adc
repz
fidiv
jg
dec
jb
xchg
hlt
xchg
fstp
les
loopne
neg
sbb
loopne
aam
repz
push
dec
pushf
into
popf
fst
push
adc
pop
or
inc
cmp
adc
adc
push
pusha
sub
dec
bound
push
add
xor
cmc
mov
add
shl
mov
add
clc
scas
shr
fidivr
pusha
xchg
retf
mov
dec
stos
shr
inc
dec
out
call
dec
or
ret
neg
cs
mov
mov
sub
imul
adc
xor
mov
out
mov
push
add
jae
fadd
jnp
pop
mov
lahf
rol
dec
sbb
jnp
fstp
xor
cli
mov
adc
fdivr
push
mov
fdiv
cmc
nop
jmp
pop
push
jl
out
nop
movs
loope
xchg
stos
(bad)
mov
mov
mov
push
or
push
add
mov
pop
cmp
dec
ds
aam
mov
call
sbb
int
mov
mov
or
or
int
dec
or
aaa
arpl
push
pop
xor
add
or
cmps
inc
aas
push
xor
cdq
mov
aas
ins
sub
test
or
push
adc
jle
fcmovb
mov
cmp
scas
cld
mov
cmp
in
adc
jmp
mov
sbb
adc
cwde
outs
cmp
das
pop
or
inc
out
jmp
push
imul
xor
fisttp
loopne
les
cmp
mov
(bad)
scas
int3
mov
add
fsub
movs
lods
mov
xchg
sar
add
loope
not
xchg
rol
pop
sbb
push
adc
or
int3
pop
pop
ins
aaa
in
xchg
mov
mov
fisttp
das
jle
mov
xchg
mov
xchg
clc
push
add
xchg
push
add
inc
(bad)
jbe
pop
pop
ds
bnd
nop
stc
sub
jge
fwait
and
mov
or
cmp
mov
dec
dec
inc
dec
ror
add
in
jae
push
loopne
push
int
fwait
test
leave
jle
pop
int
repnz
push
(bad)
mov
mov
imul
(bad)
mov
push
dec
test
or
call
in
xchg
sahf
nop
sar
(bad)
loop
mov
int
inc
js
mov
test
sbb
imul
fdiv
lahf
fcom
fcomp
xor
xchg
out
or
arpl
icebp
es
ds
or
sahf
(bad)
aas
cmp
sti
jo
imul
sub
test
cmp
dec
mov
push
sub
mov
cmp
int
push
pop
dec
mov
and
or
jl
mov
mov
rcr
cdq
xor
retf
push
adc
jmp
mov
jge
xlat
sbb
add
xchg
or
or
mov
xor
test
cmp
sub
stos
cmps
jno
les
dec
inc
fs
mov
jl
and
out
loope
and
adc
cmps
adc
cmp
mov
scas
cmps
add
inc
addr16
sbb
int3
push
jmp
dec
or
jb
cmps
in
sub
mov
jp
mov
icebp
sahf
adc
cdq
(bad)
xchg
shl
in
cmc
dec
ins
cmp
call
cli
lods
mov
nop
mov
fsub
shl
xor
adc
aam
xchg
sub
pop
push
das
adc
xchg
mov
jp
jg
jmp
ss
pop
je
pop
daa
repz
dec
(bad)
xchg
adc
js
ins
mov
fisttp
test
pop
pop
(bad)
push
add
jno
ins
push
cld
mov
sbb
xchg
loopne
push
aam
in
fwait
or
sbb
js
pop
popf
call
in
pop
cmp
adc
paddsb
popa
mov
jns
dec
sub
jp
sub
push
or
daa
(bad)
in
or
iret
cs
int
aas
xor
(bad)
jnp
dec
or
lahf
leave
out
aad
test
or
mov
mov
mov
fidivr
sub
push
loop
mov
rol
push
push
jae
add
jns
inc
out
aam
xor
aam
ret
int
leave
jne
cmp
sahf
jbe
jmp
dec
bnd
adc
sub
pusha
lods
shl
mov
or
sti
(bad)
pusha
push
push
pusha
cmc
or
(bad)
stc
mov
jmp
cmps
lock
(bad)
ret
std
iret
call
imul
(bad)
(bad)
in
fstp
(bad)
(bad)
push
and
cdq
dec
jb
fcom
jns
sti
pop
push
mov
cmp
cmp
repz
sahf
aam
cmps
push
jae
pop
outs
xchg
push
mov
sbb
dec
push
retf
icebp
mov
leave
outs
ds
pop
movs
int
push
or
pop
sub
jecxz
push
xor
inc
push
pop
sbb
mov
iret
push
pusha
sub
adc
inc
jnp
inc
sub
sbb
jne
or
mov
adc
xchg
call
mov
and
xor
xchg
sub
lds
outs
jmp
mov
loop
xchg
xchg
lahf
xchg
add
adc
pop
out
mov
xchg
sbb
dec
jbe
cmp
pusha
mov
out
add
je
jne
mov
std
pop
dec
inc
jecxz
mov
add
xchg
lods
mov
outs
jge
(bad)
pop
mov
push
add
mov
ret
xchg
xlat
inc
pop
dec
sub
test
fdiv
adc
lock
daa
movs
push
push
add
xchg
mov
repnz
movs
call
xchg
leave
adc
jecxz
adc
(bad)
popa
mov
lahf
jne
sub
xor
jg
sbb
jne
jg
out
and
fcmovu
push
fwait
lods
sahf
psrld
cmp
cwde
ins
fsubr
je
cld
ss
pop
not
cmp
xor
cmp
pop
and
stc
sub
xor
inc
pop
dec
std
retf
loopne
xor
push
imul
sub
push
div
retf
xor
push
cs
fadd
daa
pusha
mov
ret
push
jb
call
mov
mov
stos
es
pop
jp
cli
or
mov
std
test
(bad)
out
add
mov
and
push
scas
xchg
in
repnz
pop
imul
jo
and
pusha
sub
retf
add
or
out
inc
rcr
iret
cmp
and
adc
inc
ins
mov
repz
push
push
call
xchg
cmp
add
(bad)
cmc
sbb
cmp
sub
js
jne
lahf
push
xchg
xchg
jecxz
push
pop
inc
pop
fisttp
push
(bad)
push
retf
mov
lahf
push
pushaw
leave
inc
fisubr
test
push
outs
retf
jecxz
lahf
sar
mov
popf
out
test
inc
hlt
sub
out
movs
pop
retf
mov
out
mov
xlat
mov
out
jmp
pop
(bad)
mov
jns
jb
pop
or
ins
cmp
sti
shl
loopne
xor
movs
dec
aaa
push
aad
or
in
aad
add
addr16
ret
fistp
lds
gs
jne
je
jmp
out
cmp
hlt
mov
mov
jns
mov
cmc
fxch
nop
lods
cmp
mov
jne
or
push
pop
out
sbb
sbb
mov
ja
aad
pop
dec
xchg
retf
nop
xor
pusha
cmp
sbb
rcl
jb
dec
xlat
in
mov
fild
(bad)
add
sahf
sbb
repnz
cmp
cld
xchg
je
xchg
aaa
sbb
or
xlat
icebp
test
jns
xchg
cmp
mov
mov
xchg
mov
shr
call
div
movs
adc
dec
cld
sub
sub
inc
leave
stc
mov
outs
es
std
xor
in
shl
fsubp
sbb
outs
push
cli
sahf
mov
(bad)
cmc
xor
std
fldcw
ja
jns
mov
gs
repz
mov
or
mov
imul
aas
outs
dec
pop
clc
call
lahf
aaa
pusha
sub
dec
and
lds
mov
int3
rcl
dec
pop
sbb
das
or
int3
push
adc
lods
das
popa
(bad)
cmp
aam
das
cmp
xchg
add
into
cmp
inc
dec
jp
in
pusha
out
jo
fdiv
mov
ret
push
sahf
and
in
jg
cdq
cmps
jecxz
adc
leave
test
adc
jecxz
in
retfw
retf
test
test
retf
mov
fsubr
mov
loopne
loopne
and
rcr
in
mov
cmps
dec
pop
retf
push
mov
adc
fisttp
mov
mov
daa
(bad)
jne
push
xlat
xchg
aaa
into
xchg
imul
bound
dec
xchg
mov
jg
shl
mov
jmp
test
test
xor
dec
test
push
data16
nop
mov
xchg
je
sbb
add
push
or
lock
not
test
test
loop
mov
lock
cmps
fbstp
gs
jmp
retf
and
sub
add
inc
push
aas
(bad)
mov
fucomi
hlt
xor
jecxz
adc
lods
mov
mov
int
jge
xchg
cdq
xlat
rol
cmp
gs
sbb
aaa
pop
adc
imul
(bad)
loopne
pusha
(bad)
into
cmp
in
jno
cmp
mov
xchg
ret
mov
mov
mov
fwait
pop
and
add
pusha
retf
(bad)
xlat
rol
or
and
add
mov
lock
leave
mov
inc
pop
lods
(bad)
mov
pop
ins
xchg
inc
push
ins
dec
xor
add
call
cli
jbe
sub
aam
adc
nop
mov
cmp
imul
push
mov
mov
adc
add
ret
dec
adc
repz
ror
mov
je
jge
cmp
pop
pop
sub
add
xchg
pushf
pop
(bad)
mov
les
pop
cmp
sahf
in
pop
adc
inc
(bad)
in
add
lods
gs
test
pushf
add
in
pop
mov
sbb
sub
aam
push
mov
pop
(bad)
ret
rol
add
inc
dec
sbb
push
jmp
jno
push
mov
test
clc
and
test
mov
mov
loopne
push
pop
mov
loopne
sahf
add
repnz
cmp
rol
jmp
addr16
scas
je
jns
loopne
imul
inc
xchg
inc
mov
jns
sub
std
pop
scas
movs
fwait
aad
les
je
and
pop
jno
imul
push
mov
pop
push
xor
dec
jne
jmp
retf
or
dec
pop
jns
cmp
into
xchg
pop
mov
stc
int
xor
nop
jg
lods
cmp
xchg
or
and
mov
pusha
mov
xchg
retf
xchg
out
cmps
cmp
imul
shl
test
and
call
aam
xor
lahf
je
sub
pusha
mov
mov
sbb
push
mov
test
sub
cmp
mov
cmp
int
ins
aaa
jge
lea
sub
or
inc
jmp
outs
xchg
jo
mov
push
(bad)
fmulp
add
iret
inc
out
sar
call
xchg
iret
adc
cwde
pushf
psubusb
rol
cmp
push
and
mov
retf
mov
inc
or
fwait
and
push
or
cwde
sbb
mov
cdq
inc
ins
cdq
gs
test
arpl
jle
div
add
pop
cwde
push
popf
push
call
js
cli
sbb
adc
xchg
push
test
xor
push
sub
repz
cmp
sbb
call
sub
lea
sbb
je
fs
mov
enter
dec
fistp
jle
sbb
jmp
dec
cmp
or
mov
mov
daa
in
and
mov
int3
movs
ins
loope
mov
(bad)
or
xor
dec
and
hlt
sub
or
fyl2x
push
adc
push
movs
sub
dec
adc
dec
std
lock
jl
and
je
sub
scas
fcomp
xchg
pusha
push
stc
and
outs
xlat
mov
xchg
in
jle
adc
loop
jge
call
push
mov
push
cs
mov
jnp
pushf
xor
loope
sbb
stos
sbb
mov
lods
pop
pop
mov
dec
pop
inc
xor
std
mov
mov
add
cmps
or
pop
aam
sub
add
xor
mov
sbb
mov
int
dec
dec
cmp
test
pop
xor
dec
inc
xchg
push
sbb
add
hlt
shl
rcl
xchg
and
arpl
inc
mov
jae
mov
ror
js
mov
outs
push
jecxz
add
add
sub
shl
pop
jae
xchg
xchg
pushf
dec
fisttp
add
mov
sbb
mov
popf
mov
stos
clc
imul
dec
xor
shl
inc
pop
push
xor
or
shl
mov
gs
out
(bad)
test
repnz
in
cmc
enter
ror
push
clc
fst
dec
cmp
xor
paddq
push
ds
push
ret
inc
fadd
enter
fcomp
daa
cdq
mov
jno
imul
dec
push
push
fxam
cdq
dec
sub
push
hlt
mov
mov
clc
cs
push
mov
add
aad
xchg
mov
push
sti
push
js
loope
rol
jg
pop
mov
xchg
mov
mov
push
in
jno
mov
xchg
xchg
(bad)
aad
pop
dec
sar
cld
lods
add
xor
jecxz
es
cmps
push
je
lods
dec
mul
fdiv
or
mov
sahf
xor
jl
fdiv
jbe
dec
fs
iret
lock
leave
cmp
jmp
adc
dec
and
sub
mov
fwait
and
inc
pop
punpcklwd
mov
pop
test
dec
stos
xchg
pop
cld
xor
and
pop
push
ret
and
or
push
and
mov
sti
movs
lock
inc
adc
mov
in
and
fidivr
into
pusha
test
nop
cmps
lahf
add
cmp
add
test
sar
adc
and
test
sbb
(bad)
adc
outs
stos
gs
(bad)
(bad)
outs
test
dec
inc
daa
(bad)
outs
arpl
sbb
cmc
loop
mov
dec
jno
rcl
(bad)
dec
or
push
clc
or
arpl
out
sub
push
(bad)
sbb
add
imul
sub
mov
ret
ds
arpl
ror
(bad)
loope
jae
leave
mov
sub
pop
jle
neg
sub
sub
sar
adc
xchg
outs
sbb
add
fldcw
stc
xchg
ret
sbb
shl
dec
dec
mov
jns
inc
xchg
cld
pop
lods
fadd
cmp
push
(bad)
mov
bound
popf
cmp
sar
hlt
in
dec
cmp
adc
fcmovb
(bad)
int
adc
jp
mov
popa
lods
xchg
and
movs
xor
pushf
fisttp
bound
data16
xor
clc
dec
frstor
ret
push
inc
fiadd
dec
add
push
inc
push
gs
mov
and
cld
or
out
push
cmp
mov
sahf
jg
push
std
clc
addr16
dec
popf
xchg
mov
leave
pop
ds
cmp
(bad)
pusha
rol
stos
jmp
(bad)
aad
adc
mov
inc
and
mov
pusha
xchg
iret
add
push
and
ret
clc
(bad)
mov
mov
push
cmp
push
mov
ret
pop
dec
popa
(bad)
sub
lods
rcr
mul
fmul
popa
mov
loope
inc
call
rol
lods
lds
xchg
imul
sti
pop
jns
out
aam
(bad)
call
ja
mov
aas
stc
pop
jo
add
sahf
bound
fs
popa
inc
push
mov
pop
cmp
mov
std
mov
ret
xchg
dec
dec
xchg
push
dec
sub
in
fdiv
mov
mov
scas
or
hlt
dec
and
sbb
lock
jo
(bad)
rcl
add
je
or
bound
dec
mov
mov
sbb
adc
xor
lods
movs
and
pop
mov
out
mov
rcr
pusha
cmp
dec
stos
jnp
or
sbb
(bad)
std
dec
dec
cwde
push
cli
dec
cmp
loope
(bad)
aas
xchg
mov
mov
not
ror
mov
movs
mov
sahf
cmp
ret
adc
in
jle
lock
addr16
call
fwait
icebp
cld
std
mov
mov
sub
lea
add
cmp
mov
or
lods
mov
cmp
dec
mov
add
sub
adc
sub
add
rcl
cs
xchg
dec
mov
fnstsw
or
cmp
(bad)
or
add
adc
(bad)
dec
and
(bad)
and
or
imul
dec
pushf
xchg
ja
sbb
idiv
fldcw
xlat
push
(bad)
std
and
(bad)
icebp
xchg
(bad)
mov
pop
dec
mov
mov
sbb
scas
push
jno
pop
fsubr
into
mov
movs
ds
adc
imul
mov
xchg
outs
add
pop
push
cmp
fiadd
std
fld
cwde
sahf
xor
pop
outs
mov
jge
or
std
and
sbb
jecxz
sbb
aad
xor
clc
sahf
add
pushf
or
push
mov
mov
repz
in
popf
inc
or
add
inc
adc
mov
test
inc
xchg
cmp
daa
mov
int3
jmp
add
or
jbe
or
je
int
inc
test
jb
and
inc
pop
jecxz
xor
out
das
imul
bound
and
enter
shl
pop
retf
(bad)
(bad)
push
in
adc
test
fmul
mov
cmc
pop
out
out
xchg
xchg
pop
pop
test
cmps
mov
xor
(bad)
repnz
test
(bad)
pop
push
dec
jmp
leave
fmul
outs
std
test
scas
daa
pop
and
ret
aam
xchg
push
add
hlt
and
inc
arpl
xor
mov
bound
lods
ret
push
add
clc
inc
(bad)
hlt
xor
(bad)
dec
push
xchg
lods
mov
mov
idiv
sbb
push
shl
jl
mov
jmp
test
stc
loopne
adc
dec
(bad)
sbb
sub
xchg
mov
dec
pop
daa
cmp
mov
out
cs
out
cmp
cs
mov
pushf
ins
push
retf
js
jae
sbb
add
nop
jo
into
mov
push
test
ins
shr
ss
xor
mov
ret
ror
adc
inc
pop
push
movs
mov
gs
push
data16
(bad)
pop
leave
fbld
and
sbb
repz
pop
and
xchg
and
cli
xor
pop
jo
jne
out
fscale
ss
push
cwde
rol
icebp
inc
xchg
iret
mov
inc
test
push
cdq
mov
data16
lods
mov
mov
div
fimul
mov
(bad)
or
fild
cmp
and
jbe
jmp
inc
(bad)
loopne
test
das
adc
inc
iret
in
jg
ins
sbb
mov
data16
addr16
xchg
(bad)
jge
pop
and
add
daa
in
pop
sbb
or
xor
call
push
pop
stos
test
cwde
or
rcl
cmp
push
xor
inc
mov
outs
jnp
sar
sub
and
mov
mov
cli
icebp
mov
add
in
dec
cmp
call
mov
retf
and
mov
xor
add
jmp
sub
sub
out
jmp
movs
and
sbb
test
xchg
sti
push
dec
cld
mov
push
inc
aas
aaa
jmp
mov
xchg
cdq
add
dec
mov
loop
mov
dec
push
out
cmp
hlt
aad
das
push
pushf
cmp
cmp
int
lahf
mov
mov
pop
je
(bad)
movs
lea
inc
mov
push
dec
je
and
cmc
jp
sub
jecxz
dec
in
xchg
mov
cmp
pop
popf
dec
adc
or
leave
cmps
push
scas
sub
lahf
sar
ret
call
in
and
xor
jp
sbb
mov
in
sbb
leave
cmp
sbb
mov
clc
scas
call
dec
mov
vsubsd
lahf
jl
(bad)
jmp
mov
pop
push
pop
sub
lods
fisttp
test
and
fsubr
stos
and
jnp
fisub
add
mov
jmp
loopne
dec
mov
sahf
idiv
scas
div
and
mov
sub
imul
repnz
xlat
loop
ins
mov
imul
dec
adc
jecxz
jl
ret
mov
das
pop
pop
div
mov
cmp
jl
call
add
sbb
loope
inc
(bad)
push
lods
mov
or
cmp
mov
ror
(bad)
(bad)
stos
movs
sub
lahf
mov
or
rcr
adc
(bad)
sub
stos
pop
data16
xchg
fmulp
pop
(bad)
arpl
scas
jp
into
add
rol
icebp
fstp
and
jae
and
pop
and
cmp
xor
mov
hlt
push
imul
xchg
ja
xchg
pushf
imul
mov
cld
ins
mov
fldz
add
sub
ins
retf
xchg
cmp
gs
jno
mov
fbld
stc
(bad)
fsubr
xchg
mov
mov
stos
add
lea
jecxz
outs
push
sti
and
or
int3
xchg
push
push
xchg
in
cdq
mov
inc
out
(bad)
push
xor
or
push
out
lahf
cmp
mov
jmp
or
movs
repnz
cmp
imul
sbb
das
(bad)
aad
adc
dec
mov
cs
xor
gs
xchg
retf
or
ror
mov
push
jecxz
jg
adc
je
adc
jbe
xchg
arpl
mov
es
mov
enter
jne
mov
xchg
jmp
jae
mov
ucomiss
in
movs
jb
out
call
mov
or
and
ret
in
mov
pop
sub
jmp
(bad)
inc
fldenv
loopne
dec
arpl
mov
retf
aas
imul
jp
in
loopne
rcr
lds
dec
add
bound
ja
cwde
xchg
push
and
push
dec
sub
add
mov
mov
mov
repnz
jns
push
lods
pop
cmp
fdiv
das
fistp
sub
jnp
int
dec
getsec
psrld
loop
adc
mov
pushf
stc
inc
dec
ret
into
cmp
xchg
pop
jae
fs
(bad)
sub
sub
out
js
enter
aaa
xor
js
pop
jne
push
leave
int
and
mov
jmp
push
or
mov
push
(bad)
jp
into
pop
push
and
pop
mov
in
inc
and
jo
cs
fs
push
imul
fs
daa
cmp
xor
cwde
xor
imul
jg
cli
push
add
out
int
inc
cwde
les
push
xchg
dec
test
xchg
and
inc
ss
xor
pop
jle
mov
mov
pop
pop
arpl
nop
mov
rcl
stc
xchg
test
inc
mov
ficomp
pop
xchg
arpl
aaa
movs
dec
xchg
mov
cmp
mov
push
cmps
xlat
sub
sbb
stc
pop
push
cmps
pop
rcr
cs
in
nop
(bad)
xchg
mov
jg
es
rcl
jp
out
lods
cmp
imul
jns
cmp
popf
sbb
jge
pop
iret
fwait
add
lods
xor
xchg
ja
cmp
cmps
jo
mov
cdq
pop
add
or
sbb
gs
push
and
adc
jp
mov
sub
cmp
aaa
jp
popa
inc
ret
xchg
fist
and
popa
(bad)
pop
push
add
xchg
add
in
lahf
jle
fcomp
inc
xor
pop
adc
retf
or
(bad)
fstp
adc
outs
add
cdq
xor
push
pop
repnz
pusha
inc
xor
fsubr
gs
(bad)
adc
aad
out
mov
mov
sub
es
cs
gs
cmp
push
test
ds
pop
stos
retf
fnsave
push
mov
inc
xchg
adc
jns
add
aaa
adc
leave
and
pusha
aam
add
cmp
ins
inc
sub
jmp
sbb
or
fnstsw
and
jnp
pop
popa
jae
mov
inc
and
push
xor
(bad)
jmp
push
adc
(bad)
inc
xchg
pushf
pop
popf
sbb
push
add
pop
lds
push
addr16
push
pushf
jno
inc
loopne
mov
(bad)
xchg
inc
ja
xchg
mov
(bad)
pop
mov
inc
mov
dec
adc
daa
pop
dec
dec
loope
push
mov
pop
inc
add
lahf
in
mov
add
adc
cmp
pop
xchg
mov
sub
jg
movs
dec
sub
or
pop
adc
and
push
imul
mov
xor
dec
pushf
xchg
dec
xor
mov
and
stos
jo
xchg
jns
and
add
fdiv
cmps
test
int3
(bad)
ret
or
aad
enter
adc
sbb
adc
sub
(bad)
retf
inc
xor
mov
sub
xor
mov
inc
jbe
sbb
push
inc
ins
enter
fwait
hlt
repnz
push
outs
fcom
cli
test
imul
(bad)
mov
call
ret
sub
pop
ins
mov
je
jp
ins
and
cmc
int3
xchg
test
mov
out
mov
cmp
adc
fcom
lods
imul
dec
and
bound
mov
fisttp
or
test
jmp
cmp
jns
mov
push
mov
(bad)
mov
xchg
shl
mov
test
test
popa
or
inc
adc
add
ja
(bad)
jg
pop
cmp
push
cmp
mov
adc
out
push
or
cmps
inc
and
xor
push
mov
loope
pop
jg
in
jmp
push
fwait
dec
out
out
daa
mov
xchg
test
adc
add
aad
pop
cmps
popf
shr
and
xchg
mov
mov
jmp
adc
shl
fwait
cdq
dec
addr16
lods
sub
call
pop
jbe
adc
pop
clc
sub
xchg
adc
mov
ss
push
cmps
mov
xor
sar
aad
xchg
fwait
ds
(bad)
sbb
push
xchg
fiadd
cli
test
ins
mov
jmp
sub
add
dec
aad
dec
xchg
jg
mov
cdq
and
out
out
xor
or
pop
test
xchg
cmp
xlat
xchg
jecxz
imul
mov
scas
fisttp
adc
ret
retf
loopne
sbb
pop
outs
imul
mov
dec
cmp
pushf
push
adc
jo
(bad)
mov
push
mov
pop
retf
rol
add
add
int3
inc
jmp
adc
ret
xchg
push
sub
xchg
jnp
movs
jno
pop
mov
stc
push
(bad)
jmp
mov
dec
bound
test
adc
sub
fist
loopne
clc
xchg
xchg
scas
test
jmp
sbb
xor
sub
jmp
popa
dec
ret
push
add
rcr
inc
xchg
mov
add
cmp
mov
(bad)
push
sbb
and
scas
push
call
enter
nop
inc
mov
sub
movs
jbe
data16
inc
mov
mov
mov
ins
mov
jp
mov
test
(bad)
cmc
test
inc
inc
retf
les
leave
jecxz
mov
(bad)
mov
jae
enter
jne
xor
cmps
or
rol
cmp
push
popf
clc
inc
xor
aas
fld
mov
mov
or
aaa
adc
mov
mov
xchg
cwde
sub
pop
fdiv
or
jo
push
pop
or
leave
arpl
retf
aam
and
cmp
sub
xor
jmp
push
pushf
rol
aas
mov
push
cmp
push
xchg
mov
mov
frstor
mov
add
fst
sub
ins
pop
jmp
out
out
adc
mov
sar
push
cmp
js
sahf
push
sub
ret
aaa
or
adc
add
jecxz
in
in
xchg
pushf
sub
push
fsubr
and
sub
sub
adc
arpl
dec
fsub
inc
cmp
jl
jle
xor
jle
or
cmp
add
ret
inc
jns
bound
clc
inc
hlt
push
push
movs
cmp
pop
neg
add
enter
pop
push
ret
lahf
xchg
sbb
sbb
xchg
xor
mov
jnp
int
out
mov
ret
mov
cs
inc
(bad)
enter
and
cmp
loop
(bad)
fild
push
leave
cmp
scas
(bad)
addr16
xchg
jmp
scas
movs
cmp
loop
shr
xor
mov
jge
or
outs
ja
nop
dec
out
shl
adc
call
cmp
jb
fimul
and
fs
sub
cdq
cmovno
mov
adc
mov
outs
or
ret
jl
in
xchg
je
sub
jl
call
xlat
addr16
push
loope
ret
mov
push
jge
adc
inc
movs
mov
(bad)
mov
in
rcl
mov
or
pop
cmp
jl
rcr
out
pop
mov
movs
cli
(bad)
fdiv
xchg
mov
outs
addr16
xchg
mov
mov
lds
lds
jle
inc
push
mov
pop
inc
pop
movs
adc
push
dec
xlat
scas
ror
cmp
fsubr
int3
stos
fwait
dec
mov
mov
dec
push
dec
(bad)
icebp
bound
inc
lods
aas
xor
xchg
daa
mov
or
pop
jmp
lods
mov
push
dec
mov
dec
jnp
jb
fmul
push
mov
daa
mov
jno
pop
int
xchg
fisttp
ins
int3
imul
pop
repnz
loopne
aaa
test
mov
imul
pop
xor
mov
jno
xchg
jmp
inc
pop
pop
sbb
(bad)
xchg
cmp
mov
adc
and
addr16
ins
and
rol
cmp
push
xor
rol
cmps
push
jg
adc
out
loope
aad
pop
cmp
test
cmps
xchg
or
pushf
dec
popa
cmp
mov
cli
mov
dec
pop
into
aad
and
jmp
mov
out
jo
mov
add
mov
push
adc
mov
or
pop
mov
rcl
das
and
addr16
mov
repnz
int3
shr
push
(bad)
sbb
push
je
retf
cmp
pushf
adc
ret
cli
inc
fld
in
jne
add
pop
xchg
das
out
xchg
fist
fidivr
sbb
cmp
xchg
xor
and
retf
aad
in
outs
cmps
mov
ja
jecxz
mov
inc
and
push
nop
out
jmp
icebp
push
or
in
enter
and
add
(bad)
shr
adc
sbb
mov
lods
xlat
mov
cmp
adc
lods
cli
xchg
adc
xchg
jp
mov
das
pop
nop
test
std
out
sbb
pop
lock
rcr
pushf
sbb
push
into
push
jecxz
sbb
mov
aad
lods
cmp
mov
dec
mov
js
bound
repnz
mov
dec
mov
mov
inc
call
repz
pop
xor
(bad)
scas
(bad)
enter
mov
ja
sbb
cmp
sbb
dec
retf
add
xlat
add
push
mov
dec
test
xchg
sbb
icebp
xlat
in
sub
lock
cdq
push
pop
sub
pop
aam
das
add
mov
mov
fcomp
mov
cmp
adc
mov
xor
sub
(bad)
in
ja
xor
(bad)
mov
pop
jl
sub
inc
mov
dec
not
add
es
xor
les
ss
sub
scas
inc
retf
fnstenv
mov
call
xor
cmp
mov
push
xor
loope
pop
enter
xchg
jae
xor
dec
cmp
mov
lods
dec
div
mov
mov
idiv
ret
ins
push
ins
je
arpl
test
std
xor
test
push
bound
leave
sbb
cmps
inc
mov
dec
(bad)
fadd
xchg
cdq
inc
jl
sbb
js
in
out
jnp
int
mov
ja
dec
dec
inc
mov
gs
std
dec
gs
jb
and
inc
fsubr
rcr
stc
sbb
jno
xchg
mov
push
mov
push
repz
mov
(bad)
add
adc
jns
daa
imul
adc
add
pop
dec
cmp
mov
push
add
ret
mov
adc
fs
mov
push
cmp
cwde
out
call
lods
add
mov
popa
dec
mov
mov
xor
in
and
inc
xor
mov
mov
mov
add
adc
aad
int
cmc
inc
push
pop
xor
cmp
mov
retf
rol
fwait
adc
movs
bound
or
movs
arpl
cwde
out
mov
cdq
dec
pop
stos
stc
cli
jb
in
xchg
sub
xor
cdq
or
popa
jno
xor
xor
in
and
mov
jmp
test
sti
sub
es
mov
inc
inc
rcr
pop
push
jns
div
mov
mov
xor
sbb
and
popa
pop
pop
mov
jmp
mov
sti
in
lods
xor
(bad)
(bad)
adc
or
push
xchg
dec
add
adc
push
imul
or
adc
movs
popa
mov
pop
imul
in
test
in
das
jb
ins
mov
aam
cmp
ror
cmps
mov
imul
repnz
adc
fldenv
lods
fild
mov
add
fidiv
movs
cs
fucomi
ss
cmp
hlt
cld
mov
lahf
pop
imul
ret
inc
xor
repz
mov
pop
sbb
and
inc
fs
sti
or
inc
not
inc
out
and
add
imul
std
add
jnp
jp
jmp
retf
fdivr
into
sbb
les
in
shl
out
icebp
ss
test
and
leave
fcmovnb
lods
fwait
aaa
xchg
inc
pop
mov
leave
cli
mov
inc
and
lock
push
es
jne
dec
call
add
sub
retf
je
sub
test
mov
ja
push
call
pop
adc
adc
and
cmp
jmp
sbb
sub
pop
lods
loop
jle
dec
push
adc
inc
push
push
mov
dec
mov
push
stos
jo
pop
mov
adc
cmps
mov
and
stc
sub
mov
in
mov
jp
out
into
and
dec
sar
shl
into
ret
push
or
sub
lea
add
xchg
fmul
ds
cli
ffreep
aas
cwde
push
popf
iret
pop
sub
adc
int
and
test
push
mov
adc
sahf
icebp
jl
adc
leave
test
sbb
cmps
bswap
std
sbb
rcl
loope
jmp
shl
and
mov
mov
lock
jmp
cli
sbb
xchg
jge
push
lahf
cli
ins
xchg
push
xchg
mov
push
call
push
inc
adc
iret
loop
in
mov
(bad)
pop
and
or
arpl
mov
test
xchg
imul
(bad)
mov
inc
call
cdq
aaa
je
jmp
or
push
inc
icebp
(bad)
call
and
jne
mov
or
mov
fbld
pushf
pushfw
mov
jae
sbb
mov
cli
inc
mov
sbb
in
add
lahf
jge
cmc
mov
push
pusha
(bad)
faddp
jns
sbb
xlat
jmp
inc
mov
loop
xchg
dec
sbb
in
into
loop
ret
sbb
inc
xor
push
xchg
stc
movs
mov
outs
adc
add
pop
push
xchg
jmp
mov
sbb
mov
mov
push
push
mov
(bad)
and
fsub
scas
(bad)
es
stos
dec
ror
fcom
push
shr
mov
push
(bad)
sar
sbb
pop
rcr
mov
bound
fadd
outs
add
retfw
dec
jge
mov
pushf
pop
push
fwait
cmp
mov
inc
push
jne
push
faddp
cmc
fmul
out
mov
push
cmp
loop
push
inc
sti
aaa
mov
outs
mov
shr
mov
mov
sahf
shl
xor
sbb
mov
add
daa
loop
pop
xchg
jl
push
mov
retf
leave
dec
int3
and
push
push
cmp
dec
push
call
push
mov
test
das
scas
rol
pop
es
fwait
add
movs
stos
xor
in
and
ret
mov
fwait
xor
or
(bad)
xchg
arpl
jle
mov
add
shr
enter
inc
shr
pop
ficomp
cmp
in
sti
div
idiv
adc
push
or
push
and
leave
add
mov
jmp
pushf
mov
mov
stc
sbb
ret
das
movs
mov
jns
xchg
mov
mov
push
outs
pushf
clc
xchg
cmps
mov
out
je
ret
inc
xlat
mov
mov
test
mov
test
push
pushf
std
popa
sahf
fwait
xchg
xor
jle
mov
dec
movs
data16
inc
out
loope
mov
bound
sub
daa
mov
pop
aaa
sub
or
mov
xor
pusha
mov
cmc
mov
arpl
pop
test
pop
daa
addr16
movs
ret
lock
ss
(bad)
jae
test
dec
fs
inc
lds
adc
shr
stos
aaa
mov
add
scas
in
stos
adc
mov
aam
lock
pushf
ret
setge
retf
cs
xchg
mov
int3
stc
add
aas
xor
aad
jb
jae
inc
mov
sub
sbb
in
pusha
inc
or
push
push
jbe
or
xchg
jmp
std
loop
ins
mov
mov
sbb
leave
jecxz
loop
jl
pop
inc
cmc
adc
or
mov
daa
cmp
mov
sub
mov
push
jg
fcomp
jp
sub
lds
jno
mov
xchg
cmps
cmps
shl
or
sar
pop
pop
jge
cmp
mov
not
(bad)
and
test
inc
cmp
sbb
mov
pop
arpl
sahf
outs
(bad)
jmp
ret
jp
and
pop
ins
mov
hlt
xchg
cli
mov
es
(bad)
aaa
xchg
cwde
cli
aaa
call
inc
sub
inc
fcmovu
daa
dec
test
xlat
sub
dec
mov
mov
popa
pushf
adc
shl
imul
add
out
jge
jb
or
rcl
mov
xor
cmp
pusha
add
mov
jno
imul
out
sub
test
shl
loopne
das
repz
mov
movs
(bad)
pop
jle
and
in
les
int3
sub
mov
push
(bad)
mov
ret
jno
dec
in
mov
out
test
leave
popa
into
lods
jno
xor
mov
mov
out
fs
adc
mov
sbb
xor
pop
mov
mov
retf
imul
or
es
call
loope
fs
imul
outs
jnp
loop
aam
stc
les
or
push
cmp
and
pop
mov
nop
mov
vcvttpd2dq
je
frstor
cmp
add
sbb
or
pop
xchg
or
cmp
jge
push
xchg
cld
adc
inc
shr
scas
call
sub
push
xor
dec
sti
pushf
gs
mov
fsub
pop
add
cli
neg
and
dec
enter
popa
cmp
xchg
fisub
and
xor
movs
cmc
out
jb
jmp
js
ja
imul
xor
das
pop
call
jge
outs
fisttp
pop
imul
dec
push
enter
ss
dec
enter
and
out
mov
sar
jge
(bad)
and
adc
sti
cmp
ins
(bad)
cmps
xchg
adc
jns
rcr
ret
js
rcl
cmp
ror
gs
push
mov
or
xchg
xchg
fs
xchg
cs
pop
imul
or
sub
and
cmps
repz
adc
arpl
adc
nop
loopne
push
mov
dec
push
call
mov
clc
or
jmp
sahf
and
dec
xor
fadd
in
jl
jae
shl
imul
add
sahf
jl
shr
cmp
ds
outs
pop
add
push
enter
mov
das
xor
rol
or
(bad)
sbb
jg
or
mov
imul
adc
or
ins
add
and
jb
int3
leave
shl
cwde
not
lea
pop
jne
push
call
in
jle
sub
jo
dec
xlat
arpl
mov
frstor
push
js
retw
inc
pop
mov
scas
inc
pop
cmp
dec
pop
xor
mov
jae
loop
lods
sbb
cmps
shl
pop
or
mov
mov
ins
dec
push
inc
xor
mov
xor
in
push
mov
mov
pop
sbb
mov
xor
sti
cmc
call
xor
bound
mov
loope
xchg
outs
js
inc
test
cmc
mov
stos
icebp
mov
sub
pop
adc
xchg
popf
in
call
fstp
xchg
les
aad
les
cmps
into
(bad)
jmp
jecxz
cdq
repnz
jmp
add
bound
mov
sbb
push
pop
outs
add
add
in
mov
inc
and
and
jle
movs
jno
test
mov
mov
aam
push
adc
aam
ret
push
push
add
cmp
jne
into
leave
add
xor
cld
mov
push
xor
loop
das
dec
adc
test
shl
xor
xchg
out
push
adc
mov
ret
test
add
sbb
mov
xchg
mov
mov
inc
push
(bad)
or
loope
daa
out
call
push
pusha
xchg
pop
sub
loop
les
xchg
hlt
test
(bad)
mov
mov
pop
adc
retf
inc
sar
add
popa
xchg
data16
and
(bad)
retf
sbb
pop
fsubr
xchg
clc
arpl
mov
push
arpl
sub
add
push
jnp
pushf
int3
jno
mov
popf
outs
into
dec
fwait
cmp
adc
jnp
ins
lods
sub
adc
push
loop
sti
nop
shl
jnp
jp
pop
ret
icebp
not
mov
test
fidiv
mov
push
mov
cmp
add
adc
push
inc
out
inc
outs
pop
or
mov
js
sub
inc
sbb
pop
retf
mov
(bad)
fs
and
in
or
int
leave
or
jb
or
sti
and
xchg
rcr
stos
(bad)
out
cmc
or
and
out
cmp
lahf
imul
xchg
xchg
stc
test
dec
and
mov
(bad)
mov
pop
mov
dec
les
jecxz
mov
or
test
cmp
retf
and
xchg
std
sbb
mov
scas
pop
mov
dec
lods
mov
mov
mov
mov
cs
xor
add
loopne
jge
rcr
imul
sbb
sti
loopne
and
adc
adc
pop
dec
mov
adc
test
jno
mov
add
and
cmp
jno
popa
mov
fnsave
xchg
outs
lock
ret
dec
std
mov
pop
(bad)
dec
aaa
int
aas
fsub
mov
pop
dec
sbb
int
sub
mov
les
mov
dec
sub
retf
sbb
jge
cmps
adc
aaa
repz
sub
push
jo
mov
dec
jecxz
add
imul
lods
sbb
sub
stos
cwde
add
inc
xchg
cs
and
jno
pop
call
jae
cdq
xor
mov
jne
inc
push
das
or
shl
fcomp
outs
adc
push
xor
xchg
ss
cmp
mov
scas
fisttp
es
sar
push
cmp
cmps
adc
popa
loope
test
js
dec
xchg
inc
(bad)
(bad)
mov
mov
inc
push
cmp
cmp
mov
pusha
adc
inc
lds
inc
push
fcomp
outs
daa
bound
dec
sbb
in
mov
or
mov
sbb
in
icebp
ror
xchg
mov
sub
mov
(bad)
sbb
cdq
push
out
xchg
out
xor
arpl
and
loopne
fwait
sahf
pop
pop
xor
test
scas
aas
(bad)
out
lock
mov
adc
fisttp
int
adc
pop
sub
das
fcmovb
retf
cmps
iret
mov
mov
xor
jne
sbb
inc
icebp
sub
fmul
movs
and
push
cs
sub
pop
mov
mov
movs
stc
cmps
jg
ror
xor
dec
or
push
jle
mov
pop
fdiv
je
and
cdq
sub
iret
into
cli
aaa
xlat
mov
dec
cmp
fidiv
or
mov
sub
retf
es
loopne
add
dec
and
in
mov
pusha
push
stos
cld
mov
or
push
add
out
and
jl
lahf
retf
xor
mov
cli
pop
ds
(bad)
jb
and
inc
aad
arpl
pushf
int3
mov
adc
ins
rcr
inc
mov
dec
cmp
(bad)
sub
or
jo
jecxz
mov
push
xor
fcom
aas
sub
out
mov
mov
aaa
and
arpl
inc
mov
loope
pop
movs
(bad)
jb
je
xor
push
aas
inc
lahf
shl
fwait
adc
jbe
add
mov
int3
pop
inc
sbb
cdq
shl
enter
popf
fimul
dec
in
mov
mov
mov
test
dec
sbb
jmp
dec
sub
in
lods
aaa
in
push
jmp
inc
fs
retf
adc
pop
retf
shr
jmp
xchg
sti
je
inc
(bad)
sbb
mov
cmps
mov
ja
test
lea
mov
mov
out
out
xor
push
cmp
adc
or
inc
loop
cli
ins
push
mov
mov
mov
add
je
dec
mov
dec
jae
pop
fwait
sub
cmp
enter
xchg
mov
cs
pop
adc
in
pusha
das
push
pop
pop
in
iret
nop
hlt
out
je
retf
js
outs
add
cmp
loope
sbb
ror
popa
and
iret
mov
jmp
lds
cs
sbb
popf
inc
les
call
(bad)
(bad)
lock
outs
lahf
pop
jmp
aaa
ret
xor
xor
jno
push
mov
out
movs
ds
pop
inc
and
push
dec
xchg
add
ja
mov
(bad)
rcl
xchg
inc
shl
pop
adc
push
stos
test
(bad)
mov
(bad)
js
pushf
adc
(bad)
cmps
pop
inc
nop
pop
fcmovne
pop
sub
rcl
cli
ins
jl
test
outs
inc
dec
loop
adc
xchg
jb
bound
add
clc
or
xor
mov
mov
call
fsub
icebp
sub
int
cwde
aad
push
jmp
imul
push
jno
fs
hlt
jae
pop
push
mov
push
cld
icebp
test
add
out
mov
dec
sbb
xchg
leave
int3
dec
xchg
dec
xchg
add
cmps
mov
scas
shr
and
stos
fsub
pop
(bad)
inc
sbb
fldcw
jl
int
ret
adc
dec
add
sub
nop
xchg
dec
or
and
pop
jnp
cmps
lea
or
or
(bad)
dec
add
cwde
imul
sub
inc
add
mov
or
cmps
push
movs
(bad)
mov
push
aaa
loopne
xchg
inc
(bad)
aad
sub
xchg
mov
sbb
lods
(bad)
sbb
pop
imul
fucomi
shl
movs
mov
sbb
push
jle
lds
pop
sbb
push
mov
push
test
js
lods
int
(bad)
(bad)
scas
out
loopne
push
sbb
cmp
mov
dec
dec
pop
jmp
mov
retf
outs
mov
mov
mov
mov
cmc
pop
push
ja
push
ret
lea
ret
sub
cmp
cmc
out
mov
sbb
cli
fst
mov
leave
jno
and
jp
sub
lahf
retf
push
add
fcomp
sahf
loopne
dec
loope
mov
popa
inc
pop
in
inc
retf
mov
cmp
cmp
data16
jecxz
test
sub
fwait
popa
out
sbb
add
jecxz
loop
jg
jp
add
dec
ds
xor
jo
jnp
sub
retf
push
lea
sbb
jnp
retf
sahf
jb
mov
dec
jle
jle
push
imul
push
loop
xor
pop
inc
xor
pushf
div
sub
jle
retf
add
jne
and
xchg
pop
xchg
mov
xor
das
xchg
dec
xchg
or
rcl
add
mov
xchg
test
imul
inc
out
sub
push
inc
daa
sbb
stos
add
xchg
(bad)
pop
and
(bad)
in
or
mov
pop
sub
inc
or
mov
or
cli
push
sar
mov
jmp
or
and
inc
lahf
hlt
xchg
mov
pop
mov
xlat
fmul
inc
and
mov
ins
ficomp
sete
xor
mov
popa
rcr
inc
push
sti
popf
aam
fs
jo
js
aad
pop
lds
push
push
sbb
retf
jge
addr16
call
cmp
adc
jge
imul
push
inc
(bad)
js
or
(bad)
mov
les
xchg
retf
mov
in
loope
cmp
ret
adc
jge
mov
sub
pop
loope
mov
sbb
fwait
inc
mov
cmp
(bad)
hlt
sbb
adc
mov
scas
jns
stc
dec
dec
sub
and
or
retf
in
in
fst
in
push
stos
icebp
out
enter
movs
icebp
cmps
rep
mov
hlt
mov
leave
(bad)
jmp
ficom
lea
jno
ror
push
cwde
push
loopne
call
rcl
push
pop
mov
pop
outs
js
sub
retf
dec
cmp
fwait
int
mov
xchg
das
into
push
xor
inc
into
rcr
cli
fcomp
pusha
jp
jne
dec
xor
into
test
lods
or
xchg
dec
dec
adc
inc
das
dec
retf
(bad)
cmp
fs
aad
xchg
mov
mov
loope
jecxz
ss
add
sti
call
push
in
(bad)
mov
dec
sbb
jg
ret
mov
cmps
and
in
mov
mov
test
cs
xor
enter
xchg
mov
or
les
cmp
jmp
ret
adc
mov
push
ins
pop
test
or
xlat
push
mov
loope
push
mov
das
mov
test
imul
sub
scas
ins
or
and
xchg
push
movs
pop
pop
add
stos
cwde
lock
(bad)
repz
les
fdiv
xor
mov
dec
movs
dec
pop
inc
jb
sbb
push
add
mov
stos
cld
outs
aam
cmc
lahf
push
dec
es
or
xor
je
pop
xchg
pop
dec
push
pop
adc
test
das
dec
ss
add
mov
pop
mov
xchg
mov
clc
sbb
and
push
lods
sbb
out
mov
test
or
div
popf
in
icebp
rcr
mov
call
out
pop
push
daa
sbb
adc
movs
ja
loop
or
add
jbe
push
inc
pop
push
xchg
push
sbb
sbb
not
fcomp
push
out
sub
pusha
or
outs
sub
inc
cmp
ret
aam
dec
ds
adc
inc
jge
out
ds
dec
fst
xor
sub
(bad)
lds
inc
mov
jge
loop
cmps
inc
jl
mov
push
cmps
jnp
lods
mov
inc
test
xchg
aas
add
xor
mov
push
in
jmp
mov
or
push
mov
or
stc
xor
fcmovne
sub
adc
or
xchg
leave
xchg
arpl
xchg
ret
push
fld
test
ret
mov
pop
adc
push
cmp
mov
popf
repnz
push
adc
dec
push
fwait
shr
adc
pop
ret
repnz
cwde
cwde
mov
jne
xor
mov
les
pusha
push
mov
push
push
fiadd
cmp
dec
out
and
mov
pop
sbb
xchg
neg
mov
test
jmp
call
pusha
repnz
cmp
sub
mov
dec
xor
sbb
xchg
(bad)
jo
call
ins
ss
mov
test
adc
push
jle
dec
mov
pop
out
loope
jb
fcos
cmp
jne
mov
dec
sbb
push
in
xor
mov
out
(bad)
jmp
cmp
popa
add
mov
in
(bad)
sbb
outs
cmp
push
cwde
push
addr16
mov
xchg
cmp
std
and
dec
push
inc
int
stos
(bad)
cmp
jne
sar
pop
xor
sti
into
mov
adc
rcl
ds
sbb
test
mov
xor
sub
scas
std
push
loop
mov
pop
push
and
lahf
push
sub
outs
dec
scas
sbb
adc
or
into
fst
outs
sub
lds
push
mov
xchg
ins
retf
push
into
test
mov
in
adc
movs
mov
xor
cmp
int
mov
lods
sbb
cmp
dec
neg
mov
push
push
std
mov
pop
or
das
imul
or
mov
pop
xchg
xor
daa
inc
inc
ret
inc
push
mov
or
add
mov
mov
mov
scas
jae
loopne
cld
cmp
arpl
pop
add
es
movs
aas
pop
ret
mov
mov
cmp
mov
js
mov
xchg
idiv
cld
and
(bad)
cdq
outs
retf
xlat
mov
stos
scas
retf
stos
xor
pop
dec
cmp
adc
fstp
cmp
mov
cmp
repnz
das
(bad)
fstp
push
ds
xchg
lods
xlat
adc
ins
sbb
adc
xchg
cmc
ins
adc
addr16
xchg
inc
inc
or
out
push
xchg
je
and
shl
fcom
jecxz
popa
aaa
pop
repz
push
cmp
adc
mov
and
adc
adc
pop
je
jo
aaa
jmp
mov
lahf
data16
cmp
mov
test
loop
pushf
mov
and
fnstsw
xchg
sbb
sar
call
data16
add
out
dec
int
sti
mov
repz
sub
imul
ja
(bad)
xchg
and
call
dec
cwde
stc
mov
int3
je
rol
lock
dec
add
test
sub
mov
aam
ins
jae
mov
scas
xor
nop
adc
sbb
and
mov
pop
bound
cmp
iret
aad
inc
mov
ficomp
cmc
fidivr
jmp
mov
pop
lahf
(bad)
adc
sbb
arpl
jnp
ja
pop
in
cmp
sub
xor
mov
enter
cli
loop
cs
xor
xchg
pop
movs
jl
jo
sbb
mov
inc
dec
and
mov
mov
push
das
js
sahf
mov
push
xchg
(bad)
mul
imul
dec
enter
xchg
push
and
inc
cmps
shl
adc
and
outs
lods
pop
dec
cmp
(bad)
out
js
cmp
inc
pop
inc
and
add
xchg
pop
xor
test
mov
(bad)
in
movs
inc
sbb
and
int3
sbb
jl
(bad)
cdq
and
add
nop
repz
ror
imul
cmp
and
dec
(bad)
out
pandn
mov
stos
sbb
addr16
fstp
cwde
sbb
and
fild
sub
leave
xchg
sti
adc
xor
adc
jp
loop
ja
cmp
adc
test
mov
cmps
pop
xor
mov
ins
mov
aam
ss
aad
mov
sub
mov
sub
pusha
inc
mov
std
inc
xchg
out
jl
add
test
mov
pop
pop
mov
hlt
cmc
les
pushf
and
(bad)
sub
mov
xchg
popa
xor
ds
out
fisttp
out
mov
out
imul
cmp
aam
test
xor
mov
fimul
ins
cdq
stos
cmp
icebp
adc
test
das
popf
xor
mov
mov
dec
cmp
xchg
inc
mov
data16
int
add
sub
jne
call
add
or
cmp
out
icebp
cmc
into
jl
dec
adc
lods
mov
outs
inc
and
jns
movs
out
sub
addr16
jae
fwait
icebp
xchg
js
stos
mov
add
xchg
lahf
or
sub
inc
cmp
push
xchg
lods
inc
pop
scas
(bad)
mov
jmp
mov
adc
or
adc
in
out
cmp
imul
mov
adc
mov
ror
dec
cmp
cld
es
mov
nop
in
push
push
les
ins
out
mov
repz
test
inc
test
sbb
daa
inc
or
aas
push
add
test
push
pusha
pop
mov
fisubr
pop
mov
into
mov
add
call
dec
and
pushf
or
nop
jmp
test
(bad)
mov
out
dec
cmp
mov
lahf
sbb
int3
ja
sbb
jg
jg
sbb
loope
lds
mov
cmp
or
xor
jo
pop
pop
rcr
popw
sbb
adc
retf
and
sbb
pop
outs
cdq
jne
pop
je
inc
lds
or
add
stos
adc
or
inc
sqrtps
ins
inc
(bad)
ja
mov
jle
xchg
sbb
dec
popw
cld
cmp
push
imul
movs
cli
ret
imul
mov
push
sub
addr16
push
pop
or
push
mov
jnp
out
movs
jae
stos
push
cmps
daa
mov
sbb
pop
out
inc
sti
dec
cld
jae
mov
add
retf
es
out
cmp
xor
in
test
xchg
call
push
enter
(bad)
movs
retf
or
imul
in
add
inc
or
add
xchg
dec
xor
cmp
test
sub
call
jbe
in
int3
(bad)
xchg
clc
jns
jae
xor
add
xchg
push
add
mov
cmp
loop
fcom
cmp
cmp
test
cdq
nop
jne
clc
pop
xchg
jb
dec
retf
push
(bad)
cmp
test
call
pop
fnstcw
sub
enter
dec
xlat
inc
stos
jno
aaa
out
jo
pusha
aad
or
dec
fmul
ja
imul
popf
push
cmp
push
aam
out
add
fldenv
in
sbb
mov
xchg
jle
nop
or
hlt
daa
adc
add
pop
scas
jmp
sbb
icebp
jnp
ins
scas
fisttp
sti
daa
sar
outs
(bad)
push
fimul
inc
cmps
inc
mov
ja
or
add
out
pop
mov
mov
inc
mov
cmp
loopne
clc
ds
repz
dec
aam
ret
xor
rcr
sub
pop
(bad)
dec
mov
es
sbb
push
test
or
and
sti
xor
ins
(bad)
jg
jns
in
add
pop
mov
xchg
xor
and
pop
clc
mov
jecxz
mov
iret
es
dec
nop
jno
test
into
sub
es
cs
push
and
ret
xor
push
(bad)
or
push
stos
imul
sti
sub
pop
mov
and
push
mov
dec
mov
outs
cmp
rol
sahf
ins
lods
lods
call
data16
xchg
icebp
dec
xchg
push
inc
test
dec
sbb
retf
xor
pop
mov
(bad)
aaa
ror
xchg
jb
jl
push
lods
jo
shl
not
fnsave
inc
test
pusha
mov
in
cld
push
xor
jmp
popf
ins
fild
add
cmp
sbb
add
fcom
popf
popf
data16
test
sub
out
mov
xchg
inc
mov
repz
and
loope
adc
call
ret
bswap
xor
icebp
pop
mov
into
cmp
xor
dec
mov
outs
nop
jne
loope
out
cmp
int
push
or
ja
out
les
adc
outs
stos
ins
mov
imul
addr16
pop
jmp
loopne
adc
pop
(bad)
ss
daa
les
int
pusha
cmps
inc
test
rcr
xchg
inc
xchg
mov
xlat
xchg
jo
ficom
nop
xchg
imul
xchg
jg
mov
push
push
push
clc
xor
inc
push
mov
shl
cmc
pusha
fdivr
hlt
sub
dec
mov
dec
fnstcw
pop
cmp
cmc
xor
pop
loopne
fdivr
pop
(bad)
pop
lea
jl
das
call
mov
lods
inc
mov
push
cmps
jl
or
adc
lods
outs
sbb
inc
xlat
inc
rcl
imul
xchg
cmc
das
push
int3
sub
pop
ret
add
inc
xchg
test
es
cmp
outs
mov
mov
int
pop
adc
sub
sbb
push
test
sbb
mov
iret
or
das
mov
jge
ds
ins
fnsave
hlt
inc
retf
pushf
in
inc
mov
pop
mov
sbb
mov
inc
mov
loopne
out
aam
out
ja
dec
or
sub
scas
cwde
inc
mov
push
repnz
aaa
icebp
and
or
sbb
sub
xchg
mov
inc
scas
jge
cli
pop
xchg
aam
loope
xchg
ins
test
inc
add
test
aas
enter
jl
push
mov
mov
xchg
jno
add
cmp
rol
pop
sbb
ret
push
jmp
push
fmul
inc
aam
lds
aad
sbb
or
adc
sub
pop
xor
inc
mov
mov
push
lds
or
je
div
push
push
push
pcmpgtd
push
loope
mov
jge
jo
dec
cmps
aad
jp
stos
mov
sub
xor
and
stc
xor
ret
aaa
cmp
(bad)
pop
movs
test
push
sbb
addr16
fild
or
cmp
add
or
xor
push
ret
sbb
adc
xor
arpl
xchg
ins
mov
xchg
bound
xor
pusha
movs
test
and
adc
in
not
cmps
call
mov
ins
les
sbb
xor
xor
push
mov
mov
cmc
mov
and
into
push
mov
cmp
bswap
cs
jb
sbb
xor
pop
lods
cwde
addr16
sbb
cmp
xor
imul
push
test
push
mov
movs
mov
ins
test
cwde
call
stos
mov
mov
xchg
xchg
cmp
sub
pop
or
ins
mov
out
jne
pushf
xchg
xchg
jl
xchg
repnz
mov
jmp
lods
cwde
into
pop
fistp
cmc
jbe
arpl
fist
in
dec
(bad)
and
jo
or
push
aad
mov
pop
clc
ds
leave
imul
in
sub
aaa
sar
mov
repnz
xlat
cmp
jno
and
pop
cmps
inc
xchg
je
xor
add
lds
sahf
lahf
jl
inc
mov
ds
rol
out
xor
pop
not
jecxz
(bad)
sub
cli
push
shr
into
or
xor
adc
dec
icebp
push
fsub
adc
das
jne
add
(bad)
dec
into
add
push
fdiv
gs
pop
mov
xor
in
fidivr
out
push
push
jecxz
in
mov
int
push
(bad)
or
icebp
xor
adc
call
pushf
imul
sbb
inc
(bad)
push
mov
(bad)
xor
es
shl
or
sbb
xor
push
xchg
inc
test
test
rcl
loopne
cld
dec
stos
xchg
inc
and
sbb
adc
lahf
dec
mov
sar
dec
mov
ja
push
xchg
das
stc
inc
mov
cmp
sub
aaa
dec
test
sub
add
sub
aaa
adc
push
shr
retf
xor
sbb
inc
mov
rol
sub
lods
arpl
sbb
(bad)
xor
xlat
sub
(bad)
pop
mov
test
aam
in
adc
sub
or
push
mov
mov
inc
mov
das
or
sub
dec
aad
xlat
push
mov
ja
sbb
dec
call
loope
(bad)
js
lahf
jle
out
ds
cmp
and
sub
lods
jg
or
aas
rol
ins
fsub
cmps
mov
cmps
inc
mov
mov
xlat
push
mov
dec
leave
push
xlat
push
imul
dec
mov
jl
pop
cmps
mov
xchg
jo
inc
fisttp
mov
scas
shl
jo
js
imul
jle
cmp
jg
inc
retf
dec
mov
cmp
pop
fisttp
retf
xor
push
daa
adc
pop
push
call
popa
scas
pusha
mov
xchg
inc
fisub
retf
sub
pop
aas
add
sbb
inc
fdivr
mov
fidivr
push
stc
pop
mov
pop
xor
aad
mov
jns
add
adc
mov
sbb
cs
push
sbb
adc
les
add
mov
dec
ror
fcomp
arpl
mov
dec
mov
scas
cmc
jb
test
lea
sahf
jno
fisubr
sub
adc
and
pop
fisttp
sti
daa
or
in
retf
cwde
fiadd
sbb
pop
iret
adc
daa
adc
and
or
sub
es
lock
cld
adc
div
add
ins
mov
rcr
xchg
jns
test
or
sbb
dec
mov
add
xor
clc
sub
xor
adc
sbb
sub
push
shl
outs
in
adc
in
ficomp
pop
mov
cmps
jo
fwait
pushf
jns
fnstenv
push
mov
std
jo
fwait
jnp
jbe
push
mov
das
in
sub
ds
mov
mov
mov
rcl
outs
(bad)
xor
(bad)
cmp
push
and
loop
mov
pop
push
stc
pop
test
inc
shl
sti
pop
or
in
inc
rcr
cmp
(bad)
aas
loopne
test
ja
fs
xlat
xor
or
add
or
aam
out
jns
or
cmp
das
sbb
or
es
mov
dec
repz
mov
inc
xchg
aam
mov
xchg
jge
ss
movs
xchg
bound
add
loop
shl
inc
movs
fcomp
push
stos
xchg
fldenv
imul
or
arpl
push
int
icebp
push
adc
add
unpckhps
xor
icebp
xor
pop
xor
shl
rcl
cmp
push
enter
mov
lds
xchg
push
inc
fimul
lods
mov
test
sbb
das
out
aam
and
adc
xor
std
push
test
fsubr
jnp
ss
pop
adc
cmc
pop
(bad)
push
les
push
rol
loop
mov
ret
sub
dec
fsubr
loope
(bad)
retf
jo
push
stos
lods
jnp
mov
xlat
mov
hlt
push
(bad)
xor
sub
cmp
cmp
loope
sbb
js
xchg
mov
dec
mov
jne
cmp
daa
sbb
mov
fsub
ins
mov
jmp
adc
and
cmps
test
nop
addr16
ds
dec
mov
mov
or
loopne
imul
(bad)
ds
cmc
dec
xor
addps
pop
mov
inc
rcl
xor
push
jmp
mov
loopne
hlt
push
cmps
xchg
je
ja
mov
ret
and
and
jecxz
(bad)
push
mov
jle
ins
int
fdivr
and
les
ror
xchg
call
jecxz
lds
icebp
jbe
push
les
into
lahf
mov
nop
ret
ss
out
rcr
jg
data16
and
arpl
mov
scas
jne
jp
in
dec
movs
call
mov
test
bound
loope
test
mov
fstp
aas
jmp
jmp
or
dec
fimul
je
xchg
jne
cmp
push
aad
add
in
or
dec
mov
mov
mov
outs
lods
popf
pusha
adc
adc
cmp
sub
ss
xchg
jb
icebp
push
mov
xchg
jns
sub
(bad)
rcr
fdiv
in
sub
dec
test
jge
fwait
jne
inc
aad
(bad)
push
add
jmp
cmp
sti
pop
mov
pop
lods
outs
(bad)
fst
out
sbb
clc
and
test
xchg
ficom
jns
jge
std
push
fnstenv
pop
sbb
mov
mov
cmc
cmp
dec
test
aaa
stc
jae
mov
gs
xor
dec
mov
inc
cmc
mov
push
adc
push
mov
in
mov
scas
push
mov
dec
lds
mov
jno
dec
mov
push
call
cwde
ins
stos
jno
call
jne
dec
mov
adc
and
adc
inc
fbld
sti
cmp
sbb
sbb
mov
sub
and
sub
adc
and
push
mov
retf
pop
iret
cmp
dec
ds
and
push
scas
clc
dec
mov
ja
xor
movs
xchg
inc
lods
dec
mov
call
jecxz
cdq
jno
xchg
lea
(bad)
aam
out
jo
jo
lahf
js
scas
inc
lods
jg
mov
adc
sub
fdivr
stc
sub
sbb
xchg
sbb
retf
shl
in
in
sub
mov
mov
pusha
lods
inc
fidivr
in
push
ror
jae
pop
mov
cmp
push
scas
dec
mov
cmp
push
rcr
xchg
sub
or
sbb
inc
test
dec
mov
or
ror
mov
adc
in
pop
mov
mov
xor
in
push
(bad)
cmp
mov
xchg
imul
repnz
and
mov
(bad)
outs
stos
imul
call
les
out
mov
mov
out
retf
cmp
xor
std
inc
mov
pushf
jo
loope
scas
inc
mov
sahf
jb
out
sub
jns
lahf
mov
add
ret
push
mov
shr
sar
loopne
jmp
push
fdivr
std
dec
cmps
pusha
movs
test
dec
mov
call
cmp
mov
out
daa
adc
or
and
jge
ds
inc
mov
sbb
jnp
xchg
pushf
xchg
js
ds
aad
sbb
popf
cdq
dec
(bad)
dec
mov
(bad)
ss
xchg
pusha
mov
push
test
jbe
out
mov
and
or
ins
lea
xchg
jo
jne
cmp
cs
adc
xchg
xchg
jge
ss
(bad)
cmp
sub
add
xor
dec
lods
mov
les
jmp
retf
aaa
dec
test
fdiv
in
mov
sub
adc
push
sbb
iret
and
inc
mov
and
jecxz
mov
xlat
xor
sub
push
xor
movs
inc
lea
stos
movs
dec
xchg
cs
jmp
test
dec
and
fst
and
loopne
test
pop
sbb
and
dec
cmp
loope
loope
sbb
xor
into
aaa
adc
fisttp
jecxz
(bad)
sub
xchg
mov
sub
adc
xlat
xor
or
sub
and
jno
add
dec
iret
cmp
sub
dec
mov
inc
mov
(bad)
pop
scas
jp
jge
pop
lock
xchg
xchg
ins
frstor
femms
ror
retf
mov
data16
or
sub
in
arpl
das
sbb
jg
xchg
cdq
push
fst
cs
sub
xor
xchg
jne
jo
cmps
mov
jne
cs
sub
cs
xor
ret
pop
stos
outs
sbb
and
push
cmc
add
push
xchg
js
push
lods
popa
or
lods
dec
aad
stc
xor
aas
sbb
vmwrite
dec
add
outs
lods
jo
push
sbb
sub
fidiv
pop
in
inc
rol
or
and
push
std
jae
popa
shr
out
psllw
and
aad
(bad)
call
lods
test
sahf
jle
mov
pop
int
(bad)
or
sub
add
pop
fisubr
sar
dec
or
int
in
adc
xor
mov
imul
sub
loopne
add
dec
mov
outs
mov
cwde
jg
xchg
jnp
loope
into
cmp
cld
xor
popf
fs
arpl
test
mov
jbe
mov
mov
sbb
and
and
dec
and
push
sbb
add
(bad)
cs
jmp
outs
cmps
nop
cmc
dec
cmps
popf
inc
repz
dec
mov
and
mov
push
xchg
mov
in
dec
mov
popf
jl
jae
sub
ds
les
xchg
jb
add
mov
inc
mov
add
xchg
mov
mov
ss
mov
lea
popa
fild
jbe
out
enter
ror
push
leave
or
push
mov
xlat
dec
(bad)
outs
ficomp
cwde
arpl
add
adc
retf
call
jge
xor
cmp
pop
lea
inc
stos
jge
or
sub
es
cld
mov
mov
fistp
sbb
mov
jg
xchg
jno
xchg
repnz
xor
int
loope
mov
loope
(bad)
pop
scas
js
(bad)
(bad)
inc
leave
add
or
icebp
xor
call
in
and
pop
mov
(bad)
sub
add
sbb
ja
cs
sub
hlt
sub
nop
mov
jge
daa
iret
daa
or
xor
inc
outs
mov
movs
sbb
mov
sub
push
shr
int
cmp
push
clc
dec
(bad)
and
mov
fidivr
adc
xchg
mov
adc
aaa
icebp
dec
mov
mov
mov
jmp
repz
pop
xor
xchg
jge
data16
push
ins
xor
and
les
mov
mov
add
add
add
jle
jae
and
adc
add
or
push
inc
and
push
into
dec
stc
push
enter
and
cmps
fs
cmp
dec
scas
imul
hlt
push
mov
jmp
test
mov
(bad)
dec
fiadd
retf
and
daa
test
xlat
dec
mov
lds
cmp
push
pop
data16
mov
outs
mov
jle
and
mov
rol
cmp
add
outs
(bad)
ds
pop
sar
jecxz
lahf
jo
xchg
jle
jmp
inc
movs
arpl
das
les
(bad)
push
aam
call
cmps
jns
add
xor
push
adc
sub
xchg
lea
mov
addr16
mov
(bad)
in
pop
mov
fwait
xchg
hlt
sub
dec
aad
sbb
movs
jbe
(bad)
call
pop
mov
mov
icebp
sub
or
mov
mov
dec
mov
ins
mov
mov
bound
push
mov
xlat
dec
fimul
cmc
mov
mov
sub
fild
jge
fwait
push
fist
or
xor
movs
gs
aaa
out
or
adc
cmp
mov
sar
adc
and
xor
in
aaa
inc
fistp
sahf
jle
mov
cdq
cwde
pushf
xchg
(bad)
and
add
add
dec
mov
cmp
pop
fmul
dec
rcr
push
push
out
lds
jmp
sub
pop
cmp
inc
mov
dec
shl
enter
and
in
pop
mov
cwde
gs
xchg
add
fdiv
in
sbb
adc
pop
test
mov
mov
mov
jg
push
fsubr
jns
outs
ror
pushf
inc
(bad)
or
sbb
dec
fdivr
ret
aas
cmc
push
mov
mov
loop
lods
jae
jns
pusha
xor
stc
add
stc
and
arpl
push
mov
sbb
pop
adc
sbb
sbb
loope
(bad)
(bad)
in
xor
pop
mov
sahf
(bad)
xlat
and
inc
test
popf
ja
aaa
add
add
sub
dec
aad
ins
mov
aam
(bad)
and
jmp
adc
pop
mov
icebp
mov
adc
sti
and
nop
push
cwde
xchg
sub
popa
fdivr
out
xor
sub
out
xor
dec
fist
sar
sub
adc
adc
jge
dec
mov
sbb
cmp
sbb
jmp
sub
or
dec
aad
fidivr
int
not
xor
aas
adc
cmp
sbb
sub
cmp
lds
xor
cmp
push
ror
jecxz
mov
xor
push
fsub
std
pop
call
lods
and
mov
mov
push
call
dec
mov
jb
arpl
das
out
cs
rcr
imul
in
or
xor
data16
sub
dec
(bad)
aam
(bad)
sub
inc
movs
popa
retf
pop
cmps
call
inc
mov
arpl
(bad)
hlt
xchg
lea
add
pop
in
jmp
imul
cmps
dec
mov
inc
adc
pop
mov
inc
xor
sub
cvttps2pi
sbb
fstp
mov
sahf
dec
(bad)
and
dec
mov
test
xchg
jle
rol
xor
sub
and
sub
loop
or
pop
mov
les
cs
add
jmp
pop
mov
xchg
xor
jbe
xchg
mov
cld
dec
mov
popa
stos
ins
stos
popa
aad
out
dec
test
add
out
mov
jae
pop
lods
mov
xchg
ins
mov
mov
xchg
jno
bound
adc
sub
daa
cmp
repnz
lock
sbb
and
call
xor
and
jp
sub
cmp
stc
dec
mov
jmp
push
out
cmp
out
sub
rol
or
call
mov
push
cmp
inc
xchg
cmp
add
and
cmc
js
rcl
cdq
xchg
cmps
nop
xchg
jnp
cdq
xchg
inc
push
add
inc
and
lock
ret
fisub
lds
xchg
inc
iret
jno
gs
sub
xor
imul
scas
dec
(bad)
jg
mov
imul
call
mov
popf
inc
scas
pushf
inc
mov
mov
add
retf
xor
jae
pop
out
cmp
add
xchg
push
add
pusha
pushf
(bad)
out
push
xchg
mov
adc
or
nop
in
jns
ror
in
mov
hlt
dec
(bad)
bound
mov
mov
add
push
cmp
aaa
outs
pop
or
xor
rcr
push
ins
ins
sar
mov
adc
mov
jle
inc
iret
cmp
xor
(bad)
adc
popf
ret
mov
enter
and
xchg
xor
mov
mov
arpl
test
jbe
fnstcw
not
jns
push
leave
ja
mov
and
in
out
enter
inc
in
and
mov
pop
adc
inc
in
pop
sti
imul
mov
adc
sbb
call
shl
xchg
sbb
call
dec
mov
jmp
mov
dec
lea
xchg
stc
inc
inc
nop
push
and
mov
(bad)
and
div
arpl
ins
aad
and
inc
xchg
or
pusha
sub
add
sub
add
xchg
jmp
and
sbb
fidivr
mov
jl
jg
aam
xchg
or
push
std
outs
retf
(bad)
mov
cmp
stc
into
push
retf
rcr
mov
jbe
xor
in
fstp
push
sub
mov
stos
call
test
mov
pop
dec
pop
call
outs
ss
pop
fmul
call
std
leave
inc
imul
sub
pop
or
mov
mov
xchg
jae
js
mov
hlt
outs
mov
(bad)
push
pop
jmp
scas
icebp
mov
outs
push
bound
in
shr
loop
movs
in
adc
dec
das
(bad)
jmp
adc
fnsave
mov
int3
mov
daa
dec
inc
xchg
and
setge
not
inc
mov
push
mov
out
cmp
sbb
mov
sub
mov
pop
push
push
leave
out
sub
add
fdivr
mov
mov
mov
(bad)
jae
stc
push
imul
jmp
call
pop
lods
push
ds
jmp
cmc
fs
fadd
add
scas
in
cmps
or
dec
and
jmp
pop
dec
cmp
dec
push
sub
dec
ins
std
icebp
es
xor
jo
pop
sub
xor
pop
mov
out
and
dec
(bad)
mov
ss
sub
adc
(bad)
rcl
inc
sub
data16
test
cmp
jo
sahf
or
arpl
test
arpl
push
xor
lahf
mov
mov
dec
fwait
repnz
dec
and
or
cmp
in
xchg
ins
jmp
stc
test
bound
xor
aam
mov
sahf
and
push
int3
mov
inc
data16
dec
inc
es
cmp
in
ja
add
push
push
jb
repz
mov
mov
leave
mov
xor
cmp
(bad)
xchg
test
jg
and
in
hlt
cmp
imul
stc
scas
and
inc
jmp
xchg
sahf
xchg
retf
call
and
jmp
jmp
xor
xor
repz
scas
jg
sbb
adc
ds
dec
mov
aas
(bad)
aad
sub
ds
sbb
(bad)
retf
jecxz
jp
jne
push
push
mov
xchg
xchg
mov
mov
mov
dec
cmp
jg
in
movs
push
sub
lods
lods
shl
push
pushf
push
mov
adc
nop
xor
xor
sbb
lds
(bad)
jno
or
sbb
jae
sbb
test
pop
fadd
mov
pusha
pop
movs
cmp
dec
jp
push
inc
loopne
and
shr
xlat
adc
inc
fstp
mov
jecxz
out
rcr
xchg
enter
sbb
imul
xchg
rcr
bound
retf
popf
xchg
xchg
les
outs
out
or
fild
loope
push
sbb
push
fisttp
pushf
idiv
es
adc
cmps
rep
xchg
fldenv
mov
pop
mov
in
mov
mov
mov
rcl
mov
jo
test
fcmovne
loope
mov
in
sbb
lahf
repnz
enter
(bad)
addr16
mov
jne
xlat
ficomp
mov
pop
shr
fdivr
(bad)
or
cs
jbe
mov
fcmovb
inc
ss
xchg
or
mov
inc
jnp
fs
xlat
(bad)
in
sbb
jbe
enter
out
ret
mov
gs
xor
add
mov
lea
imul
fdivr
gs
xchg
jg
jne
call
(bad)
cmp
in
ins
fimul
icebp
push
aam
mov
ret
cld
aaa
inc
sbb
lods
cmc
imul
(bad)
nop
xlat
fwait
push
shr
and
ret
sub
push
or
dec
loop
sbb
rol
pushf
push
push
push
xor
inc
pop
or
push
mov
hlt
(bad)
aam
gs
mov
sbb
and
(bad)
(bad)
push
mov
daa
(bad)
mov
cmps
sbb
stos
or
punpckldq
adc
push
retf
add
inc
jmp
add
jns
sbb
test
gs
jnp
sbb
adc
mov
dec
jae
(bad)
adc
push
lea
pop
lahf
call
jo
mov
repz
mov
les
fcom
enter
rol
sub
pushf
and
inc
imul
stos
out
mov
fsubr
movs
mov
enter
jmp
rol
and
movs
pop
jle
aad
add
adc
je
fucompp
pop
mov
lock
or
jle
sub
sub
mov
mov
pop
js
out
pop
sbb
mov
fstp
ins
add
fsubp
sar
xor
jp
scas
sbb
out
mov
inc
loopne
push
loopne
cmp
or
sub
clc
inc
mov
stos
mov
mov
sub
mov
inc
inc
sub
or
push
shl
sahf
leave
mov
ror
retf
loopne
in
retf
pop
inc
xchg
mov
call
loop
retf
add
inc
mov
jmp
loop
inc
std
fucomp
jmp
sbb
test
cli
test
cmp
rcr
mov
neg
sub
std
leave
cmp
xchg
sub
dec
cdq
inc
xchg
inc
pop
mov
jbe
int3
call
(bad)
in
ins
jle
xchg
pop
cwde
push
jl
mov
mov
fwait
xor
mov
sub
adc
(bad)
sbb
dec
sbb
outs
and
aas
xor
inc
iret
mov
movs
pop
stos
fimul
mov
sbb
mov
adc
ror
arpl
mov
cmp
mov
pop
into
lahf
sahf
(bad)
arpl
xor
mov
mov
in
lds
jmp
dec
scas
ret
or
mov
adc
jo
cli
xchg
in
dec
cmps
in
and
cmp
xchg
dec
cld
mov
mov
inc
clc
push
retf
out
adc
inc
xchg
push
or
pop
imul
loopne
mov
mov
stc
aaa
pusha
push
(bad)
cdq
push
mov
add
cwde
ss
jo
adc
and
out
mov
sub
mov
push
je
push
ins
call
cmps
xor
stos
loop
(bad)
(bad)
(bad)
retf
push
mov
or
in
push
sub
stc
dec
add
jl
inc
inc
dec
test
out
sbb
add
mov
loopne
mov
int
scas
imul
outs
in
loope
nop
pop
js
int3
add
pop
mov
inc
xor
movs
xor
inc
xor
dec
mov
inc
idiv
popa
and
int3
jmp
jg
pop
mov
out
out
push
dec
in
repnz
xor
or
stc
and
cld
into
pop
lea
cmps
shl
out
dec
scas
mov
push
dec
dec
std
and
jmp
jg
pusha
int
out
shr
jl
lds
(bad)
jbe
aaa
inc
push
daa
cmc
in
bound
or
xor
out
xchg
lods
mov
(bad)
pusha
shr
jne
(bad)
sub
add
mov
pop
mov
mov
repnz
call
xchg
jl
out
into
push
mov
sbb
lea
movs
data16
ror
mov
frstor
lods
es
push
jl
ret
shl
pop
mov
fiadd
lds
inc
pusha
jo
lock
sahf
popa
mov
addr16
pusha
cmp
xor
fimul
push
iret
and
hlt
push
fisub
sbb
cwde
sbb
sar
dec
fs
cmp
dec
mov
retf
xor
push
gs
jae
push
mov
outs
xchg
sbb
shl
or
push
inc
xor
xor
inc
js
xchg
ret
mov
aam
in
ds
sub
test
in
sub
dec
or
in
mov
sub
pop
in
mov
xor
jmp
int3
jecxz
mov
inc
xchg
pop
cmp
sbb
add
cld
dec
sar
cmp
xor
mov
push
jnp
jg
xchg
aad
cli
in
jp
jmp
push
int
invd
scas
cmp
loopne
dec
cmp
sub
push
push
addr16
lds
(bad)
out
in
mov
push
js
popf
sti
cmps
jmp
rcl
mov
shl
ds
mov
cdq
sub
jo
push
loop
jecxz
call
sub
adc
out
loopne
test
ficomp
inc
and
sahf
add
xchg
lea
(bad)
rcr
gs
adc
xchg
addr16
or
adc
and
inc
daa
cmp
loop
sbb
adc
add
addr16
mov
mov
cld
inc
test
iret
pusha
mov
pusha
js
js
xchg
popf
dec
retf
mov
ror
jae
adc
adc
cmp
sbb
pop
or
fist
push
and
sbb
adc
mov
sbb
xchg
sbb
ins
pop
adc
(bad)
jmp
pop
bound
mov
jle
retf
js
mov
xchg
fwait
ins
add
or
retf
sbb
cwde
stos
xor
mov
mov
outs
fldenv
xor
cmp
jmp
cdq
mov
mov
jnp
fs
mov
loop
out
arpl
and
scas
add
sbb
add
call
movs
dec
lods
das
jb
mov
shl
lods
cmp
jne
or
inc
sbb
or
jnp
adc
and
daa
lods
ret
push
int
test
aas
daa
mov
sub
push
and
fstp
or
inc
pop
inc
and
iret
adc
jmp
mov
das
add
imul
ret
inc
sahf
pop
xchg
cdq
mov
pusha
(bad)
out
ret
sbb
mov
xchg
outs
push
and
jnp
fstp
jo
adc
cli
xor
xchg
xor
aas
mov
mov
mov
jl
out
icebp
mov
adc
jp
test
cs
mov
pop
sahf
mov
cli
ja
cmc
mov
int3
lea
pop
(bad)
jmp
outs
(bad)
test
jae
lahf
adc
ret
adc
dec
xchg
cmps
xor
xchg
les
push
call
dec
push
push
std
pop
sub
out
(bad)
jne
loope
fmul
cmps
loop
shl
pop
and
add
xchg
or
out
pop
lods
add
shl
xchg
call
fnstenv
adc
xor
scas
sub
xchg
mov
mov
pop
ret
out
mov
test
mov
and
add
cmc
add
cmps
jnp
mov
aam
adc
ds
loope
aas
(bad)
hlt
lea
add
xchg
xor
push
jnp
xchg
xchg
adc
popf
inc
add
mov
xor
push
inc
data16
add
jne
iret
ds
call
pop
mov
and
mov
scas
daa
fnsave
outs
mov
int
jb
outs
cmp
and
add
test
mov
aaa
rcl
aam
cmp
mov
and
pop
cmps
jmp
(bad)
lea
adc
outs
pusha
mov
int
push
inc
je
das
mov
xor
test
xchg
cdq
xchg
sbb
sbb
pop
mov
push
jae
jle
or
mov
les
outs
stos
cmps
jnp
dec
mov
ss
mov
in
and
sbb
mov
dec
inc
aad
xor
out
or
fsubp
in
fild
retf
adc
fist
mov
dec
mov
iret
pop
add
push
push
xchg
and
fdivr
js
hlt
add
adc
pop
pop
xor
dec
loopne
mov
data16
dec
mov
and
push
shl
idiv
dec
push
pop
xlat
in
ja
(bad)
or
xor
push
mov
in
sub
pop
fwait
mov
cmp
in
inc
jo
jae
fbstp
add
inc
push
int
fisubr
sbb
ss
and
stos
shl
or
lods
or
xchg
inc
push
fld
jmp
add
pop
movs
sub
or
rol
in
or
cdq
or
inc
adc
lods
inc
dec
pop
in
stos
ja
nop
(bad)
dec
xor
loopne
and
mov
es
fisub
xchg
mov
jp
movs
cmps
xchg
aam
xor
mov
pop
loopne
nop
(bad)
iret
cmc
pusha
pushf
ins
mov
mov
lods
in
test
pop
jl
mov
clc
(bad)
(bad)
pop
cmp
dec
jnp
test
mov
and
push
push
mov
sahf
push
jmp
mov
cld
cmps
push
in
fdiv
sub
and
aas
in
jo
jno
addr16
aad
fwait
jle
shl
rcl
mov
movs
xchg
mov
push
iret
sbb
dec
push
inc
inc
mov
xlat
clc
adc
adc
jmp
xchg
sbb
mov
jmp
(bad)
not
loop
jbe
add
call
pop
aam
xor
fisttp
and
and
pop
fmul
je
repz
push
jmp
cmps
ja
push
inc
out
jmp
cmp
es
std
push
test
or
xor
mov
dec
and
fldenv
add
rcr
xlat
ret
add
xor
cmp
add
jno
sti
inc
add
clc
repz
push
jecxz
mov
jns
out
lock
cld
sub
movs
iret
xor
stos
or
mov
inc
hlt
hlt
xlat
ret
dec
sbb
add
test
popa
ror
cmp
inc
call
(bad)
jmp
pop
adc
pop
(bad)
in
mov
jbe
js
sbb
mov
out
push
cmp
sub
xor
ja
cmp
cmp
jge
sbb
test
sti
add
sbb
adc
(bad)
and
aas
and
cmps
sbb
enter
ror
scas
jge
sbb
fnstsw
inc
push
outs
pop
or
inc
outs
cmp
push
push
jno
cli
es
mov
lock
xchg
call
js
daa
inc
addr16
dec
test
aam
add
popa
inc
call
retf
repnz
ins
call
addr16
xchg
pop
bound
xchg
pop
or
icebp
dec
push
dec
jecxz
rcl
adc
scas
jmp
bound
push
pop
in
push
pop
jmp
and
cmps
scas
adc
adc
pop
adc
dec
cli
sti
xchg
in
mov
inc
sbb
add
jg
popa
mov
jmp
es
ror
and
cmps
(bad)
jle
movs
cmp
test
mov
cs
outs
sub
dec
mov
ret
cmp
ja
mov
push
pop
xor
add
cmc
out
repnz
push
pop
or
pop
bound
dec
cdq
leave
aad
scas
mov
sbb
mov
imul
(bad)
cmp
jnp
xor
jae
frndint
out
add
inc
or
and
mov
outs
imul
mov
js
lock
or
pop
mov
hlt
sbb
ins
cmp
push
shl
cdq
out
cmps
rcl
or
xor
jl
scas
push
jge
in
adc
ja
cmp
adc
stc
mov
jg
push
xchg
retf
in
mov
popf
std
scas
add
arpl
(bad)
out
repnz
pop
sub
sbb
mov
js
inc
sub
popf
lock
pop
lods
test
test
push
rcr
mov
cdq
cmp
push
mov
gs
daa
popa
in
clc
and
dec
pop
dec
enter
cwde
or
clc
mov
cmps
ret
inc
nop
push
fbld
(bad)
in
inc
sub
test
repz
rcl
dec
dec
cmp
sbb
or
or
mov
nop
inc
xor
xchg
push
pop
(bad)
adc
or
dec
cdq
pop
aas
xor
fsub
loope
adc
cld
imul
aam
ret
xchg
daa
jo
sbb
mov
add
xlat
rcl
aaa
repnz
push
mov
cmp
add
and
jg
scas
out
stc
fwait
jae
dec
pop
popf
sub
xchg
mov
jmp
retf
fdivr
call
mov
cmp
or
jecxz
xchg
cmps
push
sbb
cmp
and
pop
mov
fstp
sbb
jne
jmp
mov
sahf
ror
fsubr
sbb
leave
push
push
xor
mov
and
inc
daa
push
ja
mov
ja
ret
jbe
pop
and
pop
adc
mov
rcr
or
out
(bad)
sub
jo
das
xchg
cs
inc
add
rcr
call
sbb
sub
(bad)
mov
and
int3
mov
lods
cmp
fs
and
dec
inc
add
movq
repz
sbb
cmp
add
cli
and
mov
dec
lahf
data16
mov
ss
add
idiv
es
inc
ds
add
bnd
jae
fwait
(bad)
call
jmp
push
cli
add
mov
shl
sbb
mov
jb
stos
(bad)
dec
jno
repz
dec
les
cmp
fmul
mov
push
ins
xor
pmaxsw
xchg
stos
les
and
sbb
ins
fidivr
and
loop
arpl
push
out
mov
jae
dec
jmp
fisttp
jmp
mov
test
out
xchg
test
xchg
movs
in
hlt
push
js
sub
sub
xchg
out
or
adc
ins
sub
xor
lods
scas
push
cmp
jne
ftst
jns
cmp
dec
xchg
repnz
add
mov
xchg
inc
out
fcom
xchg
mov
imul
fisubr
and
mov
(bad)
enter
sub
adc
jb
out
repz
xor
sti
inc
xchg
mov
lock
mov
mov
movs
and
js
xchg
in
add
xchg
push
add
or
imul
mov
mov
mov
xchg
shl
cmp
pop
mov
loopne
lds
push
dec
das
jle
pop
sbb
dec
or
scas
fimul
enter
cmp
dec
or
add
jo
pop
je
dec
or
mov
add
dec
in
xchg
iret
pushf
fcom
push
adc
or
lds
xlat
mov
hlt
mov
add
push
push
inc
add
xor
pop
inc
das
pop
or
cmp
pcmpgtb
ins
test
stc
mov
retf
call
test
or
loope
fidiv
stc
pop
mov
out
mov
scas
clc
mov
int3
mov
sbb
inc
push
push
pop
pop
cs
or
sbb
and
inc
sub
xchg
test
mov
lods
(bad)
xchg
sbb
jl
jne
mov
mov
dec
push
adc
jbe
enter
sar
je
dec
xor
adc
dec
sbb
test
or
scas
(bad)
xchg
std
sahf
out
mov
out
mov
mov
rol
mov
aad
adc
pop
ins
cmp
cdq
xchg
movs
div
jecxz
cmc
pushf
jmp
dec
ret
mov
mov
push
push
push
daa
outs
fdivr
cmp
jp
push
es
inc
arpl
xchg
leave
cdq
repnz
(bad)
push
stc
mov
fst
cwde
fdivr
and
xor
mov
jmp
add
popa
sbb
push
cmps
ret
cmps
test
jg
pop
mov
xlat
mov
xchg
aam
mov
leave
lea
mov
xchg
mov
aam
test
clc
mov
(bad)
fcomp
cmp
push
and
inc
jo
jne
jg
jg
fstp
mov
aad
loope
rol
pop
dec
cmp
jb
cld
lods
(bad)
scas
int3
adc
test
jmp
daa
jb
inc
xor
jge
cwde
fstp
je
jg
pop
loopne
je
sbb
int
fisub
push
and
data16
pop
and
xor
push
and
je
dec
mov
cmps
ret
mov
cwde
in
mov
or
fs
jl
dec
pop
jl
inc
xlat
sbb
sub
pop
adc
jo
dec
and
callw
pop
and
imul
lds
or
adc
add
sbb
jb
push
add
push
sbb
jb
pop
xor
fistp
leave
aaa
sbb
js
dec
add
arpl
je
add
movs
in
stc
scas
ficomp
xchg
stc
xchg
lock
out
aad
jmp
mov
inc
(bad)
sub
sbb
pop
adc
jns
jp
ins
cmp
xor
mov
adc
lock
push
in
aam
fsubr
or
imul
xchg
in
mov
mov
jg
imul
add
xor
push
scas
fsubr
(bad)
mov
loop
lock
adc
jmp
inc
ret
mov
shr
mov
or
jmp
rep
cmp
sbb
ins
xor
jb
jno
pusha
xor
ss
or
jnp
xor
jl
inc
enter
lock
aad
push
popa
adc
inc
out
pop
inc
adc
or
jg
pop
sbb
add
movs
loope
xlat
(bad)
fdiv
(bad)
leave
or
add
je
test
xor
aad
pop
loopne
rcl
and
fs
mov
out
mov
pusha
and
nop
shr
sbb
pop
add
push
push
and
pop
aaa
and
data16
pop
outs
or
sub
sahf
popa
sbb
push
add
jmp
sbb
add
pop
shl
mov
mov
call
jg
pop
sub
mov
mov
mov
sahf
fcomp
mov
fwait
(bad)
scas
fmul
xor
jp
jbe
dec
and
inc
xor
pop
or
mov
loop
(bad)
jno
pop
sub
inc
cmp
inc
sub
ins
sub
mov
mov
movs
repnz
mov
sub
jl
dec
adc
shl
adc
inc
or
js
push
dec
sbb
es
jp
pop
pop
mov
imul
or
aaa
push
or
jnp
imul
arpl
movs
mov
mov
sahf
in
mov
(bad)
cmps
hlt
mov
int
stc
mov
pushf
cmc
retf
sbb
ror
inc
xor
sub
dec
adc
push
adc
jmp
mov
xchg
rcl
push
(bad)
mov
cmps
jecxz
fidivr
mov
shr
jb
je
mov
mov
mov
ret
sub
ds
or
sub
mov
xchg
rcr
lock
sti
mov
pop
test
xchg
in
mov
scas
mov
retf
mov
lds
(bad)
movs
xlat
add
jge
mov
in
loope
ss
and
push
(bad)
popa
and
jae
adc
je
push
(bad)
xor
ins
cmp
xchg
out
mov
outs
push
gs
inc
add
cmp
push
cmp
inc
add
inc
adc
xchg
mov
call
aad
push
sbb
ds
jno
mov
or
stos
fistp
xlat
dec
es
bound
rcr
sub
inc
or
cwde
iret
mov
xchg
lds
mov
jecxz
shl
jb
scas
jmp
stc
pusha
xor
imul
(bad)
in
in
push
adc
push
pusha
sub
(bad)
jge
pop
or
sub
or
mov
(bad)
out
mul
mov
mov
xor
loop
cld
jp
dec
push
inc
cmp
cmp
and
sbb
dec
lods
(bad)
fldcw
outs
and
pop
xor
jmp
fwait
xchg
mov
adc
jno
and
adc
ja
fcomp
(bad)
mov
aad
hlt
movs
xlat
sub
daa
jo
inc
or
push
push
cmp
call
inc
and
push
add
bound
cdq
pusha
adc
pop
es
clc
nop
repz
fst
sub
push
adc
mov
xor
sahf
sar
jecxz
rcr
ret
mov
repnz
scas
stc
mov
add
cdq
ret
xchg
clc
xchg
lock
pop
sbb
pop
pop
mov
mov
test
out
lds
aad
(bad)
mov
lahf
int3
pop
sub
inc
pop
push
or
jns
pop
or
das
or
cmp
xor
push
or
and
shr
push
or
pop
mov
movs
repz
cmp
adc
das
pop
or
jg
arpl
lahf
fisttp
mov
les
cmp
sbb
and
push
inc
add
xor
or
pop
data16
push
das
inc
and
or
out
fsub
fnstcw
cs
dec
adc
dec
es
bound
bound
mov
mov
jle
pop
sbb
sti
mov
jmp
adc
inc
pcmpeqw
dec
sbb
loope
out
xchg
outs
adc
addr16
popf
fistp
dec
mov
(bad)
test
add
(bad)
shl
or
sub
mov
mov
xchg
int
leave
and
popa
ss
inc
lods
fstp
jbe
jge
pop
loope
mov
jmp
push
sbb
pop
pop
push
sub
dec
std
xor
adc
push
outs
cmp
dec
les
push
adc
test
lea
add
push
jo
inc
sbb
jb
pusha
pop
push
daa
jo
ret
nop
rcr
sbb
xor
mov
sbb
aad
sahf
sti
stos
fild
inc
xor
adc
pop
and
mov
xor
in
adc
mov
add
(bad)
addr16
mov
loop
scas
jmp
push
and
dec
scas
mov
fwait
int
out
mov
pop
cmovae
and
jg
jne
enter
test
inc
je
(bad)
xchg
loopne
jmp
and
pop
push
jo
mov
rol
sar
inc
or
inc
(bad)
scas
int
jmp
add
sbb
push
jae
gs
sub
xchg
int3
popa
or
cmps
repnz
mov
jnp
test
mov
movs
in
stc
scas
mov
cld
lods
(bad)
mov
dec
mov
mov
imul
push
inc
xor
mov
pop
fisttp
retf
and
dec
pop
pop
inc
fnstsw
in
sub
pop
adc
mov
sbb
pop
sbb
xchg
rol
sub
popa
pop
icebp
mov
sbb
loopne
nop
jecxz
icebp
mov
lea
sbb
pop
sbb
jp
xor
aas
or
jp
jnp
sub
push
adc
jecxz
sub
xor
xor
popa
and
or
mov
stc
jl
movs
in
xchg
into
sahf
ficom
leave
cwde
in
call
push
dec
xor
xor
dec
pop
pop
pop
es
jl
ja
data16
lock
xchg
cli
xchg
lds
xchg
fisub
ins
cmp
dec
pop
test
or
nop
sahf
fbstp
jbe
scas
cmc
movs
into
test
cld
mov
mov
not
daa
push
add
xor
xor
push
cmp
inc
adc
iret
xchg
movs
stc
mov
adc
popa
cmp
dec
add
push
sar
inc
es
add
adc
mov
int
(bad)
mov
or
mov
or
xchg
sbb
cmps
into
mov
mov
shl
hlt
mov
leave
(bad)
call
mov
in
mov
fwait
clc
(bad)
fld
push
push
adc
in
mov
lods
cli
mov
loope
jmp
push
ss
icebp
mov
test
mov
mov
call
cwde
iret
dec
mov
(bad)
jmp
test
mov
pop
movs
in
clc
scas
mov
pop
or
mov
mov
mov
stos
lahf
mov
jmp
lock
mov
aad
fstp
cmp
push
add
icebp
xchg
lds
jnp
dec
cmovae
popa
push
push
outs
or
adc
xchg
iret
pushf
fcom
pop
sbb
pop
out
add
xor
jae
js
pop
sbb
cmps
jecxz
icebp
xchg
(bad)
push
mov
fstp
mov
add
stc
test
or
mov
xchg
ret
mov
into
mov
repz
out
mov
out
stos
jae
mov
xchg
(bad)
mov
bnd
dec
or
ds
mov
test
mov
(bad)
lahf
int3
mov
push
dec
es
add
inc
pop
jl
sti
mov
call
js
push
inc
popa
retf
xchg
shl
out
out
sti
dec
or
dec
fbstp
and
xor
fcomp
iret
cmps
les
cmp
cmc
mov
sub
jge
sub
cs
or
aaa
pop
cmp
sbb
or
fs
sub
push
sti
mov
cwde
icebp
mov
das
or
js
js
and
cmp
push
sbb
jno
push
add
xor
sbb
cmp
hlt
scas
(bad)
xchg
cld
lahf
das
pop
push
adc
fwait
jnp
imul
ret
nop
rcl
xor
jo
dec
cmp
inc
adc
xchg
lds
repnz
retf
add
xchg
ins
push
dec
sbb
xor
xchg
icebp
dec
or
addr16
adc
xor
jne
call
pop
inc
das
pop
or
aas
add
jno
jbe
repz
jns
inc
aas
addr16
pop
or
jnp
inc
std
xor
popa
and
test
(bad)
mov
mov
out
aam
ficomp
inc
adc
fisub
xor
xor
dec
pop
pop
push
xor
push
xor
aas
dec
sbb
mov
push
dec
loope
lods
adc
inc
xor
shl
daa
jno
push
add
stc
mov
or
push
fistp
ret
mov
les
sti
xor
arpl
imul
mov
mov
xor
les
and
mov
hlt
test
or
in
xchg
fwait
pause
jecxz
rcl
fistp
call
mov
int
lds
mov
adc
jns
outs
cmp
idiv
push
and
add
dec
ins
cmp
pop
sbb
mov
jmp
repnz
aam
rcr
fstp
mov
fldcw
arpl
inc
adc
pop
sub
sub
mov
out
mov
and
outs
cmp
ins
sbb
data16
stos
mov
cmp
jae
push
adc
push
cmps
hlt
mov
mov
xchg
fwait
int3
mov
mul
add
xchg
mov
mov
xchg
(bad)
jo
push
div
in
out
lahf
retf
inc
fisubr
out
(bad)
xchg
jecxz
hlt
popf
mov
mov
xchg
sbb
arpl
jne
imul
retf
sbb
dec
push
sbb
pusha
xor
xor
xor
pop
push
dec
or
cmp
mov
jmp
(bad)
jmp
(bad)
js
jp
inc
ds
push
cmp
adc
inc
or
aas
outs
add
out
pushf
enter
cmc
(bad)
xlat
xchg
add
add
xor
dec
cmp
mov
int
cmp
and
jb
mov
mov
sub
pop
add
shl
jns
mov
ror
push
inc
in
xor
push
aas
pop
fistp
sub
inc
shl
push
add
test
mov
mov
in
test
xchg
in
xchg
mov
xchg
scas
dec
mov
add
mov
rcl
mov
mov
xchg
xlat
mov
dec
add
ja
ss
pushf
enter
idiv
inc
adc
inc
and
cmps
out
cli
lods
ficomp
cs
cs
xor
inc
push
push
mov
cmps
lds
js
dec
cmovae
stc
xchg
cli
cdq
in
mov
fild
push
push
and
push
in
pop
sub
sub
mov
add
pop
ret
sub
push
adc
leave
mov
cmp
push
or
jg
pop
push
pop
xor
jp
ins
cmp
dec
lea
push
and
dec
fs
mov
mov
aad
xlat
mov
cmps
lock
xor
or
pop
sbb
int3
cmp
push
jl
xor
js
dec
adc
loope
sbb
push
inc
call
push
das
inc
and
add
ds
je
jg
jno
xor
push
sub
pop
pop
push
sub
dec
pop
sub
dec
push
jnp
pusha
in
mov
(bad)
push
adc
pop
sub
or
pop
aas
push
sbb
pop
add
and
push
fimul
imul
or
pop
cmp
ja
xchg
fsub
jmp
fild
popa
adc
pop
and
adc
jo
cmp
jbe
jge
jno
sbb
xchg
rol
mov
mov
mov
xchg
aad
call
int3
call
lock
movs
in
xchg
jmp
loope
in
or
xor
adc
push
arpl
inc
adc
mov
adc
retf
mov
push
mov
lock
in
shl
push
pop
push
pop
imul
sahf
not
sar
inc
sbb
pop
pop
rcr
jge
push
and
lds
imul
nop
fld
ds
sub
and
xor
data16
xchg
jge
pop
or
(bad)
mov
fldcw
dec
or
cmp
cmps
rol
aam
out
xchg
xchg
ret
cmp
push
add
aaa
daa
inc
adc
jae
imul
call
in
loope
arpl
inc
adc
inc
in
push
and
pop
sub
and
dec
jecxz
cmp
jl
outs
sub
and
bound
jo
push
add
div
arpl
arpl
sub
cmps
jecxz
fsubr
shl
mov
xchg
in
loop
sahf
lahf
iret
movs
int3
scas
mov
mov
mul
push
es
pop
in
pop
push
adc
jge
loop
jmp
fld
xor
mov
(bad)
nop
mov
rcr
popf
xchg
loopne
repnz
mov
jecxz
test
repz
sbb
jp
jbe
bound
push
pop
and
lds
jg
pop
(bad)
sub
iret
mov
(bad)
jg
sub
loop
(bad)
push
xor
lds
and
push
adc
jae
inc
pop
dec
xor
sti
xchg
lock
aam
jno
push
add
mov
icebp
test
sub
push
add
repnz
sbb
pop
push
dec
cs
jb
pop
cs
dec
xchg
dec
xor
push
cmp
jno
jae
dec
cmp
rol
ret
pop
das
js
dec
push
inc
lods
std
xchg
(bad)
popf
icebp
movs
imul
jecxz
rcl
bound
add
test
mov
cmps
rcl
jmp
call
xchg
les
rcl
sbb
mov
pusha
and
sbb
dec
push
push
sahf
dec
or
dec
add
xchg
out
mov
(bad)
out
out
jno
inc
or
ins
stos
cld
mov
in
xor
cmps
jmp
mov
outs
push
dec
push
pop
test
adc
dec
sbb
out
stos
out
lds
sub
ins
sub
sbb
pop
push
cmp
mov
mov
rol
push
mov
scas
jmp
inc
push
push
add
and
mov
dec
add
pop
and
cs
sub
dec
ret
mov
xchg
push
ins
cmp
dec
ds
out
jmp
and
movs
fisubr
xlat
daa
inc
es
push
pop
jle
(bad)
mov
mov
test
xor
push
xor
adc
and
dec
or
pop
xor
imul
pop
pop
sub
test
fmul
cmc
mov
imul
or
sbb
imul
push
add
daa
or
xor
push
adc
dec
and
addr16
pop
sub
push
out
or
pop
and
movs
aad
rcr
add
arpl
fcomp
clc
mov
xlat
mov
fist
push
xlat
movs
lock
xchg
call
or
nop
and
pop
pop
add
jns
inc
sub
scas
int3
mov
mov
pop
cmovnp
jg
pop
bound
aaa
inc
pop
inc
push
jmp
in
mov
push
or
shl
push
and
push
scas
lds
pop
dec
and
and
mov
mov
push
adc
pop
ins
call
xchg
stc
inc
xchg
mov
mov
sbb
dec
sub
test
mov
mov
cdq
repnz
cld
popa
xchg
rcl
rol
shr
out
lds
inc
cs
and
and
dec
sbb
sbb
dec
and
cmc
mov
pop
je
push
pop
push
inc
inc
shl
sub
mov
(bad)
lods
(bad)
push
xor
dec
add
(bad)
xchg
mov
retf
popf
fsubr
icebp
stos
sti
nop
cld
lahf
sar
jp
inc
add
pop
cmovnp
popa
pop
inc
add
mov
sub
mov
popa
xor
gs
dec
sbb
adc
lahf
out
scas
jmp
fadd
(bad)
fistp
mov
popa
and
hlt
popf
call
sbb
mov
and
imul
jecxz
icebp
cdq
enter
fisubr
add
pop
or
jae
pop
cmp
scas
sub
aaa
pop
adc
je
stc
aad
jle
je
inc
jnp
jecxz
repz
sub
fdiv
ins
int
push
out
call
jae
psrlq
cmp
imul
test
loop
mov
cmp
jle
push
in
sbb
js
call
xchg
repz
jge
and
retf
neg
inc
xchg
int3
pop
aaa
arpl
xor
adc
or
mov
shl
mov
xchg
lods
data16
or
inc
xor
inc
jl
cmps
test
(bad)
mov
or
mov
mov
xchg
enter
add
scas
sbb
push
push
lds
test
mov
frstor
add
mov
fidiv
stos
hlt
daa
push
cld
mov
ins
sbb
adc
mov
adc
jecxz
xchg
push
cmp
fwait
test
push
xchg
fild
popf
(bad)
loope
int3
in
fsubr
data16
mov
std
mul
xlat
jae
inc
jecxz
ss
cli
mov
push
dec
push
inc
in
adc
in
sbb
push
fstp
in
mov
push
xchg
and
and
das
imul
call
mov
and
hlt
mov
ret
fnclex
mov
in
xor
sub
enter
pushf
mov
and
adc
adc
sbb
xor
lods
(bad)
mov
inc
sub
mov
ror
outs
in
cli
in
push
stc
pop
out
hlt
pop
xchg
sub
cmps
ficomp
test
sub
or
jg
push
inc
les
aad
jge
sbb
test
lea
xlat
sbb
jb
pop
inc
cli
into
xchg
xchg
mov
aad
and
int
stc
sbb
(bad)
xor
retf
jb
xor
cmp
and
or
jno
push
in
enter
sbb
push
in
mov
sahf
mov
(bad)
dec
cwde
add
jmp
imul
sub
push
(bad)
fcomp
iret
xchg
mov
jmp
cmp
hlt
sar
mov
neg
loop
and
mov
mov
xor
(bad)
jb
or
cmp
lahf
cmp
test
inc
hlt
sub
icebp
jecxz
push
mov
jmp
pop
ins
in
aas
xchg
jno
add
int3
dec
push
cmp
mov
or
push
out
cmps
or
cmc
shl
mov
enter
shl
imul
imul
jbe
mov
dec
rcr
mov
shr
cmp
sub
mov
cmp
test
aam
pop
sbb
fs
int3
stos
fwait
cmp
mov
(bad)
xchg
dec
add
stos
mov
loope
cmp
mov
test
push
jno
or
push
imul
mov
mov
jnp
ss
and
push
mov
xchg
sub
xor
mov
jecxz
jecxz
cmc
retf
inc
imul
mov
mov
stos
sbb
push
cmp
into
scas
adc
cld
jb
add
movs
scas
sahf
cmp
(bad)
adc
push
div
mov
ret
loop
xchg
cmp
cmp
fincstp
ins
cmp
xor
add
mov
cmp
lahf
outs
sub
add
(bad)
jmp
sbb
arpl
aad
cmp
cmps
dec
push
and
mov
stos
ins
jmp
pop
(bad)
fwait
push
ret
hlt
lods
movs
pushf
in
push
es
sbb
out
aam
arpl
jge
inc
pop
fcomip
gs
lods
xchg
push
bound
xchg
cs
mov
repnz
cli
mov
add
movs
inc
sbb
xchg
sbb
test
jmp
loope
sar
repz
add
and
mov
sbb
or
dec
shr
into
cwde
ja
dec
sub
and
aas
sub
icebp
jo
mov
xchg
fst
mov
mov
gs
inc
or
pushf
ja
fcomp
retf
scas
sbb
lock
shl
mov
ins
aas
gs
and
in
push
pop
int3
jg
inc
jg
lods
dec
ins
sbb
icebp
arpl
jno
push
adc
pop
stc
jmp
es
mov
jg
push
pusha
sub
jo
jno
pop
cdq
xchg
movs
loop
pop
ret
adc
loope
mov
cmps
push
adc
xchg
add
int
jae
mov
and
push
xchg
mov
rol
sub
cmp
idiv
pop
rol
pop
dec
popf
clc
mov
movs
pop
retf
lds
push
mov
ret
pop
lds
shl
push
cs
jmp
ja
or
mov
xchg
lods
and
xor
inc
shl
mov
fsubr
or
in
or
fmul
mov
inc
pop
or
xor
out
fwait
pop
sbb
adc
inc
in
ror
inc
and
mov
cmp
pop
dec
sub
popf
xor
push
(bad)
(bad)
lahf
(bad)
cmp
stos
pop
cmps
xchg
add
mov
arpl
mov
inc
sub
sbb
sti
xchg
fsubr
add
fwait
jmp
sub
push
sbb
jbe
push
bnd
inc
ss
xlat
jge
in
push
sbb
or
and
icebp
call
dec
nop
clc
or
enter
xchg
test
xchg
scas
lds
(bad)
lea
add
daa
mov
xor
cli
xchg
js
repnz
ja
pop
gs
dec
test
pop
adc
push
jg
adc
jbe
lds
xlat
enter
inc
sbb
in
xchg
adc
pop
mov
jecxz
lods
or
ins
cwde
push
cmps
xor
and
jg
pop
xchg
mov
sahf
cs
jl
(bad)
scas
and
inc
mov
movs
jl
xor
dec
jge
lds
push
imul
dec
ret
test
dec
and
clc
xchg
std
in
push
xor
cmc
pop
mov
inc
sub
add
mov
in
push
xor
out
push
xor
sbb
imul
hlt
cmp
and
inc
push
imul
gs
movs
sbb
jg
loop
sbb
aas
dec
loope
jns
(bad)
cmp
pusha
or
(bad)
loope
scas
cmp
loope
cs
mov
mov
ror
inc
sbb
not
fwait
add
into
add
or
push
xor
daa
push
push
arpl
push
fwait
xor
(bad)
or
sub
adc
jbe
imul
push
lods
or
shl
adc
push
loopne
aas
outs
push
mov
(bad)
mov
push
dec
dec
adc
mov
or
mov
mov
mov
xabort
mov
pop
dec
sub
(bad)
push
adc
add
push
push
call
pushf
popf
pop
pop
(bad)
jle
loopne
call
mov
idiv
cs
fwait
add
jmp
es
shl
fsubr
cmps
dec
dec
sahf
out
ficom
jmp
jnp
arpl
out
ror
stos
cmps
(bad)
lods
dec
jle
rcl
cmp
(bad)
aad
jns
sbb
movs
cmc
lock
adc
cmp
adc
fisttp
xchg
sar
in
cwde
adc
mov
jmp
mov
sub
fiadd
inc
cdq
aad
jbe
(bad)
sbb
jmp
test
cmc
inc
es
loope
lea
lods
loope
mov
repz
push
sbb
mul
xchg
ret
adc
cdq
test
push
shl
sti
call
sub
xchg
xchg
out
mov
popf
retf
leave
xor
pop
xchg
mov
jno
push
aam
cmp
inc
jns
fiadd
(bad)
cwde
stc
mov
out
sub
pop
adc
push
hlt
mov
div
sahf
(bad)
push
inc
std
adc
out
xor
mov
cmp
into
aas
std
les
fcomp
add
push
into
xchg
sbb
xchg
popa
or
shr
js
lock
cmp
leave
mov
adc
mov
fiadd
jl
popf
push
(bad)
shl
iret
mov
scas
pushf
push
clc
into
mov
mov
inc
int
ficom
pop
fbld
nop
mov
pushf
mov
and
mov
sub
mov
in
outs
test
daa
pop
cmps
in
push
les
add
mov
lea
mul
xlat
in
sbb
sbb
xor
rcr
lock
ds
nop
or
dec
xchg
call
push
and
sahf
stc
into
jle
or
dec
sbb
out
or
dec
mov
sbb
mov
aam
xor
inc
mov
xchg
sbb
cmps
out
fiadd
mul
(bad)
mov
popa
fs
ss
mov
or
(bad)
ins
movs
scas
mov
(bad)
jo
pop
and
cmp
ins
add
fstp
(bad)
mov
in
inc
inc
ins
stos
mov
out
cli
xchg
ins
call
(bad)
nop
sub
aad
push
or
movs
sbb
pop
aaa
dec
adc
sbb
add
mov
lods
push
loope
xor
aad
xchg
sti
imul
cmc
inc
aam
test
push
das
jae
loope
in
sahf
repnz
sbb
mov
ret
int3
xchg
xchg
sar
pop
daa
ins
dec
inc
push
sub
pop
dec
mov
mov
repnz
icebp
push
mov
inc
pop
sbb
sub
jbe
xor
push
into
or
sbb
in
ds
push
push
inc
inc
fidiv
add
(bad)
iret
xchg
mov
retf
jne
hlt
pop
sbb
cmps
and
cmp
cmps
scas
or
stc
aad
call
add
and
lea
(bad)
or
mov
(bad)
(bad)
stc
test
pop
call
xor
sbb
ins
push
push
jne
int3
stc
pop
push
je
jge
xor
dec
jle
movs
call
jmp
mov
push
rcr
pop
sbb
and
imul
stc
icebp
movs
jge
aam
hlt
std
fldenv
aad
inc
repz
(bad)
jae
cld
sub
(bad)
adc
loopne
adc
test
sbb
dec
out
mov
stc
sti
inc
dec
jns
jo
push
push
push
stc
xchg
(bad)
(bad)
ss
repz
fwait
or
or
call
and
nop
sub
xchg
inc
jns
adc
(bad)
fisubr
push
idiv
shr
push
sbb
jo
test
jmp
js
retf
pop
dec
pop
lock
punpckhbw
cmp
imul
xor
mov
dec
mov
les
mov
stc
ins
add
inc
fwait
mov
pusha
cmps
loopne
jecxz
or
push
jl
test
jbe
(bad)
mov
inc
out
popa
cmp
pop
cdq
test
push
outs
xor
(bad)
lahf
enter
inc
mov
mov
xchg
test
mov
add
xchg
sbb
idiv
mov
retf
outs
and
cmp
out
leave
pop
sbb
mov
int
pop
lahf
sub
mov
repnz
xchg
pop
in
shr
nop
adc
pop
xchg
cmp
xchg
pusha
in
adc
xchg
loope
enter
lock
push
pop
jmp
cld
push
fist
and
xor
fwait
ins
test
(bad)
movs
out
or
(bad)
mov
scas
repz
stos
mov
push
stos
xchg
cmp
sub
sub
stos
mov
out
repz
ss
sbb
jo
outs
dec
out
mov
mov
test
sbb
(bad)
xchg
and
add
out
movs
scas
mov
mov
pop
mov
scas
dec
cmps
jmp
aam
ins
mov
jle
ss
push
mov
sbb
inc
sbb
and
nop
ret
add
fbld
std
test
(bad)
cmp
mov
pop
(bad)
mov
fisub
sbb
add
mov
nop
inc
xchg
push
inc
cs
in
sbb
call
pusha
psubsb
mov
xor
pop
mov
xchg
add
int3
mov
push
dec
ins
fst
dec
sbb
mov
(bad)
ret
cmps
dec
out
pop
loopne
fild
cmc
loopne
(bad)
and
mov
jbe
int3
push
pop
in
(bad)
int
cmp
sbb
xchg
jmp
ins
cmp
pop
sub
sahf
jge
scas
(bad)
adc
retf
mov
xor
test
xchg
les
xchg
stos
retf
mov
out
outs
xor
jbe
call
les
lahf
out
retf
jns
bound
mov
mov
pop
ds
fdiv
test
mov
(bad)
jl
or
jecxz
sahf
imul
data16
fst
aas
or
mov
dec
movs
push
jl
call
inc
push
je
xchg
and
adc
stos
xor
xchg
or
gs
stos
push
loope
cmc
(bad)
lock
and
pushf
imul
(bad)
aam
ja
jnp
(bad)
cmps
bound
cmp
xor
clc
das
mov
sub
or
jbe
ins
(bad)
sub
adc
or
cmp
xchg
sbb
(bad)
push
call
inc
mov
outs
arpl
fwait
xor
xchg
mov
sub
shr
xor
xchg
cmps
lods
leave
or
in
fild
xchg
sbb
in
inc
cmp
add
(bad)
aam
or
mov
jne
aas
adc
fs
ins
push
cmp
int3
inc
ds
popf
data16
xor
cmp
cmp
xchg
fcom
retf
fucomi
cmp
in
test
and
iret
mov
jp
dec
and
imul
stos
pop
push
mov
out
lods
jg
daa
jl
arpl
ins
or
cmps
or
mov
data16
jbe
cmp
test
pop
cmp
imul
xchg
or
xor
push
retf
jns
adc
mov
outs
fdivr
pop
pop
je
das
mov
adc
fidivr
mov
jnp
fst
clc
arpl
add
inc
nop
scas
inc
xchg
pop
pop
sbb
out
lsl
repz
mov
fcom
or
inc
imul
fsubr
cmp
sbb
push
(bad)
push
cmp
pop
mov
nop
xor
fadd
sub
in
pushf
pop
add
push
fwait
jmp
inc
pop
pop
mov
shr
add
or
jmp
mov
jne
outs
dec
pop
imul
push
jmp
into
inc
jo
sbb
jns
es
xor
jns
lea
sbb
test
lahf
test
dec
out
pop
in
xor
movs
sbb
and
and
js
push
pop
fstp
test
jmp
loopne
gs
lock
pusha
in
jmp
jno
mov
(bad)
mov
jns
push
rol
push
xchg
stos
push
push
pop
mov
mul
dec
(bad)
inc
in
sub
int
dec
sub
xor
or
adc
and
int3
std
dec
jnp
data16
icebp
or
shl
push
sbb
sahf
(bad)
xchg
data16
fstp
test
adc
fistp
cli
or
push
jns
or
ja
adc
xchg
mov
add
ss
popa
and
push
mov
mov
inc
aas
mov
push
les
mov
mov
push
inc
or
ss
enter
rcl
inc
int
imul
mov
sub
popf
mov
sub
int3
pop
add
adc
nop
push
xchg
loop
cli
sub
cmp
lock
xchg
sub
mov
mov
les
push
(bad)
sub
adc
mov
xchg
div
sbb
retf
pop
inc
pop
mov
lods
outs
call
cdq
mov
das
and
inc
out
retf
or
cmp
out
test
mov
sbb
dec
pop
cwde
repz
rcl
jnp
cmp
or
js
(bad)
sub
in
call
sbb
mov
mov
aad
mov
mov
es
lea
jo
sbb
(bad)
jmp
fwait
mov
add
and
ffreep
loope
je
pop
inc
push
in
xchg
jo
inc
cmc
cmps
or
jge
rol
inc
inc
dec
fs
sub
aaa
sbb
mov
dec
mov
dec
cmp
repz
cmp
jle
fsub
mov
mov
das
cdq
push
inc
fdiv
inc
rcr
daa
pop
faddp
xchg
add
pop
shl
div
pop
and
(bad)
and
mov
push
lock
mov
pop
fwait
jns
pop
ret
cmp
iret
mov
cmp
ins
dec
call
add
icebp
pop
adc
jge
pop
addr16
xchg
cmp
mov
push
cmp
std
ret
test
push
and
sbb
cmp
cmp
or
xor
retf
mov
in
mov
mov
cmp
fwait
push
mov
dec
pop
data16
adc
retf
jmp
push
xor
std
dec
jge
popf
push
or
aas
loopne
iret
jo
fmul
mov
mov
dec
fcomp
ret
aam
xlat
adc
aas
jmp
xchg
push
enter
mov
popf
inc
scas
aad
ins
stc
int
cwde
cdq
inc
cwde
into
imul
jg
enter
das
xchg
(bad)
xchg
adc
cdq
fucom
pop
mov
adc
stos
xor
sub
jmp
cwde
arpl
fwait
dec
loopne
cmps
add
and
jae
dec
adc
arpl
ret
popa
(bad)
retf
inc
dec
sub
add
or
push
shr
pop
addr16
xchg
mov
cld
mov
(bad)
loope
bound
sbb
pop
and
or
adc
icebp
sub
loopne
xor
daa
(bad)
ja
cmp
fist
sar
or
imul
and
cmp
adc
fdiv
sub
stos
sbb
in
shl
xchg
jp
into
into
push
clc
mov
mov
movs
fadd
rcr
or
push
test
xchg
ror
push
in
fdivr
stc
imul
repnz
mov
call
xor
mov
repnz
cld
(bad)
imul
out
xor
push
jo
add
xchg
push
xor
adc
jne
icebp
adc
adc
adc
cdq
jbe
and
loopne
xchg
retf
push
pop
mov
and
push
int
movs
sbb
jb
mov
xor
xor
push
xchg
enter
je
imul
mov
(bad)
not
jbe
push
push
add
dec
xchg
mov
rol
xor
mov
and
sub
fld
jmp
mov
ins
push
test
sub
out
mov
out
jo
push
sub
pop
adc
adc
jbe
pop
push
push
adc
sbb
lods
test
mov
or
into
cmp
pop
clc
cmps
add
cmp
mov
cs
mov
mov
push
test
jl
jae
loop
mov
(bad)
sbb
jns
sbb
popa
enter
fld
div
inc
mov
mov
inc
(bad)
mov
out
push
pop
(bad)
dec
push
pop
outs
ds
in
jnp
fdivr
adc
sbb
cld
add
and
stc
sub
cdq
adc
outs
scas
mov
popf
pusha
cmc
retf
ss
pushf
scas
xchg
xor
inc
lods
stc
adc
inc
fld
or
push
std
mov
test
and
inc
bound
and
ud0
test
push
test
jae
shr
xchg
push
mov
cdq
xchg
sub
pop
ins
xchg
xchg
push
jmp
jge
(bad)
sub
jns
or
pop
inc
inc
aad
shl
add
sti
pop
popf
lea
xchg
add
test
mov
xchg
xchg
cmp
sbb
(bad)
jle
push
jnp
enter
inc
xchg
enter
mov
push
and
jns
or
pushf
das
or
sub
popf
(bad)
ror
sub
cld
push
mov
inc
cmc
cmp
lock
dec
addr16
(bad)
xchg
add
into
xchg
cmp
pop
test
or
jp
push
fsubp
sbb
inc
std
das
and
xor
cmp
inc
fbstp
add
sbb
or
xchg
mov
inc
ja
pop
jmp
rcl
adc
cmps
push
stc
(bad)
retf
and
ret
mov
push
shl
loopne
mov
mov
pop
fidivr
aas
loope
ret
fdiv
pop
sub
pop
imul
inc
imul
scas
xchg
adc
xchg
(bad)
cli
and
imul
mov
cmp
(bad)
loopne
sbb
outs
jbe
cmp
mov
sbb
adc
mov
or
add
cs
jne
lock
dec
lods
mov
lods
mov
ror
or
push
in
mov
adc
xlat
cmp
adc
sbb
push
xlat
(bad)
sbb
add
sub
sbb
retf
out
in
xor
ins
movs
(bad)
mov
rcl
inc
mov
ret
movlps
fwait
cmp
and
sub
sbb
or
ror
imul
popa
in
mov
xchg
adc
loopne
test
stos
jno
jno
retf
clc
adc
aaa
mov
leave
or
push
inc
test
test
mov
test
out
loope
fadd
push
popa
test
popf
pop
pop
push
scas
out
cmp
dec
arpl
test
outs
inc
pop
cmp
mov
test
cmp
mov
(bad)
repnz
adc
int3
sbb
aam
inc
in
adc
push
push
xor
mov
daa
shl
repnz
push
mov
pop
int3
mov
xor
mov
cmc
jne
mov
in
mov
ds
(bad)
ins
ins
xor
mov
mov
sub
(bad)
cmp
and
call
je
in
movs
popf
loope
into
mov
ja
pop
sbb
stos
test
cmc
lods
loope
push
rcl
pop
jno
retf
jmp
pop
inc
hlt
cmc
cmp
ja
jo
movs
xor
ret
div
sbb
mov
or
out
ret
inc
sub
xchg
(bad)
or
out
test
xor
fisub
nop
xchg
cld
jge
or
aad
xor
jne
hlt
xchg
aad
leave
stc
or
cwde
inc
jg
jmp
je
outs
dec
push
lods
idiv
pushaw
std
jbe
jnp
test
movs
sbb
inc
xor
sub
cmp
mov
xchg
fidivr
pop
mov
pop
loope
imul
icebp
das
(bad)
cmp
and
mov
fucomip
mov
mov
enter
std
xor
mov
push
test
(bad)
sbb
inc
pop
jbe
cmp
jmp
xchg
cwde
add
sbb
call
adc
push
or
jns
cs
jmp
iret
mov
sub
int
mov
mov
popf
test
fcom
push
dec
push
add
enter
inc
push
jmp
adc
cs
ret
sub
sbb
rcr
fistp
cli
lock
in
cmp
xchg
lods
xor
popf
in
in
aad
outs
ins
ja
je
sub
push
iret
ret
dec
aad
nop
pop
ins
lahf
cmp
sbb
adc
xor
pop
and
out
movs
mov
retf
push
sub
add
icebp
sbb
repnz
jae
add
rcr
fwait
jb
arpl
xchg
pop
cdq
sbb
das
xchg
dec
sbb
and
scas
inc
cmc
idiv
jb
add
push
cs
or
jns
dec
clc
sti
int
outs
enter
jp
mov
repz
cwde
pop
(bad)
dec
in
test
push
inc
adc
jecxz
or
ss
outs
adc
out
sub
mov
dec
inc
lea
std
shl
pop
jbe
xchg
test
adc
das
mov
add
push
mov
xor
out
es
mov
xchg
clc
sub
std
cmp
pop
sub
repz
or
nop
pop
imul
(bad)
cmp
ja
adc
bound
sbb
pop
fdivr
dec
push
(bad)
jnp
add
in
cmp
stc
mov
enter
dec
jb
adc
push
inc
mov
mov
jns
call
repnz
mov
sub
sub
rol
adc
sub
mov
mov
xchg
(bad)
xchg
jne
mov
push
and
inc
rcl
(bad)
movs
cmc
ss
push
push
push
(bad)
mov
sbb
test
sub
cmp
lds
jecxz
jnp
test
neg
mov
aam
lods
fcomi
pop
jae
jo
add
mov
pop
stos
and
adc
mov
in
dec
out
(bad)
test
in
push
sub
push
mov
push
test
xor
xchg
dec
jmp
mov
ds
pushf
xor
inc
sub
inc
sbb
xchg
adc
push
icebp
int3
or
xor
pop
int3
ss
sbb
enter
stos
arpl
(bad)
pop
mov
or
adc
scas
push
daa
in
inc
mov
fsubrp
cmp
cmps
jnp
xchg
push
dec
jae
retf
sbb
cld
shr
ror
stos
shr
cmps
fist
ins
xor
and
arpl
rol
mov
scas
pushf
mov
pushf
arpl
movs
or
xor
jbe
mul
jl
xchg
xchg
mov
mov
lods
inc
jmp
add
inc
mov
fdivrp
lock
sahf
inc
outs
imul
mov
int
push
mov
pop
jmp
sbb
push
pop
pop
loopne
ret
adc
mov
add
pushf
pop
out
retf
pusha
pop
jecxz
cmp
mov
outs
lock
call
push
xor
and
iret
xchg
inc
mov
into
gs
push
jl
jge
sub
(bad)
pusha
xchg
arpl
xchg
jmp
repnz
shl
mov
(bad)
aad
pop
push
cmpxchg
scas
fs
pop
dec
push
and
out
xchg
call
sub
add
(bad)
fstp
cmps
xor
test
xor
sub
(bad)
out
daa
mov
(bad)
dec
inc
(bad)
int3
mov
std
cmp
pop
mov
rcl
call
or
mov
mov
sbb
push
mov
pop
sbb
scas
ret
adc
dec
add
lods
div
icebp
cmp
out
mov
add
mov
fdiv
jge
mov
or
stos
fucomp
(bad)
out
sub
sar
mov
addr16
not
cmp
mov
ins
pop
movs
dec
xchg
dec
jl
push
stc
push
jmp
push
call
pop
in
xchg
scas
xlat
mov
out
jb
(bad)
loope
ins
pop
or
and
or
hlt
add
adc
dec
dec
pop
(bad)
in
fistp
sub
int
sahf
jno
xchg
jb
jmp
xchg
sbb
pop
stos
ins
cmp
test
push
cwde
pop
push
retf
pop
in
push
scas
fs
push
or
or
fcmovnb
enter
cmps
lea
xchg
xchg
inc
pop
xor
std
nop
iretw
jo
fdiv
sbb
sub
and
loopne
and
cmps
mov
js
in
add
out
xor
inc
lea
jl
ins
inc
imul
in
das
sbb
(bad)
gs
pop
and
pop
mov
add
test
mov
mov
jmp
and
call
adc
push
cs
out
sahf
pusha
xchg
sbb
jnp
sub
or
das
cli
adc
aaa
js
and
push
ffreep
mov
daa
jp
lods
xchg
xchg
push
mov
loop
repnz
repnz
popf
into
std
dec
and
sar
popf
arpl
and
dec
jmp
inc
jmp
pop
sbb
icebp
add
add
add
repz
hlt
jb
sub
(bad)
rol
fdivr
dec
inc
xchg
gs
out
popa
repz
mov
mov
shl
sub
out
push
ins
mov
test
enter
pop
mov
xchg
pop
and
sub
inc
test
mov
call
shr
sar
nop
imul
sbb
repnz
add
addr16
pusha
ds
scas
dec
or
rep
push
xchg
iret
les
jg
pop
fwait
sahf
aam
in
cmp
test
sub
retf
xchg
adc
push
or
jno
in
xchg
mov
jl
mov
mov
sub
movs
enter
loop
enter
jge
or
mov
xor
enter
push
pop
lea
sahf
enter
pop
pop
mov
bound
inc
fidiv
dec
and
int
call
xchg
mov
xchg
ret
jns
int3
jne
pop
into
mov
rol
jl
test
popf
js
mov
pop
int
mov
mov
dec
ret
ret
imul
mov
jg
lea
mov
popf
cmp
std
or
ds
dec
inc
out
in
test
xor
and
and
jnp
dec
or
jae
xlat
(bad)
ret
call
dec
jmp
sbb
ja
test
fsubr
and
pop
push
scas
jmp
pusha
cmps
(bad)
xor
xor
jmp
jo
mov
jle
and
and
push
and
mov
fdivr
or
rol
and
shl
fdiv
adc
daa
mov
std
pushf
add
neg
adc
pushf
sub
xor
mov
repz
inc
pop
out
cmp
push
bound
or
in
not
lods
outs
cmps
div
or
call
or
sub
mov
dec
and
stos
(bad)
sti
jle
repnz
xor
popf
push
and
daa
xchg
icebp
icebp
pop
sub
jnp
call
int3
mov
xchg
icebp
push
cmp
jp
jecxz
mul
ins
lods
inc
sub
jg
push
sub
addr16
mov
sbb
shr
mov
and
jl
enter
pop
pop
bound
pop
and
cdq
rcr
aaa
xor
push
neg
dec
and
inc
cmp
arpl
pop
les
add
in
rcr
pushf
rcl
jl
and
adc
pop
and
popa
and
shl
cmp
xchg
not
(bad)
imul
inc
jmp
mov
aaa
xchg
lods
out
xchg
jl
out
arpl
sub
rcl
sub
imul
aam
pop
in
sub
push
aad
loope
xor
icebp
lock
ret
inc
and
or
mov
ja
mov
loopne
pop
xor
mov
cmp
cmp
popf
imul
mov
push
aad
push
fld
jle
dec
cmp
jg
pop
sub
test
imul
scas
rol
int3
hlt
(bad)
jmp
mov
cs
mov
sub
sub
aam
shl
sbb
invd
push
ja
fs
shr
stc
scas
call
ror
mov
or
pop
xchg
xlat
popa
aad
imul
(bad)
(bad)
ds
cli
mov
cwde
lock
jae
cmp
mov
xchg
jnp
ins
mov
jmp
aad
xor
data16
popf
sub
fstp
jmp
int
aam
push
and
cld
push
call
pop
iret
je
rol
loopne
test
adc
dec
sbb
test
call
and
inc
xchg
cwde
ret
jo
sbb
mov
push
sbb
mov
aaa
scas
sar
mov
adc
adc
fldenv
cmp
jo
sbb
mov
dec
fcom
popa
mov
inc
in
xchg
ret
iret
xor
push
nop
adc
shl
sbb
movs
shr
stc
dec
pushf
pop
clc
dec
push
add
lods
mov
jle
fstp
(bad)
paddb
adc
add
push
cmp
in
loopne
movs
repnz
or
popa
dec
outs
idiv
sub
xlat
fnop
mov
iret
xchg
and
add
call
fwait
sar
xor
jmp
or
in
aad
nop
icebp
ret
inc
daa
add
retf
fsubr
outs
mov
(bad)
iret
or
cmp
call
inc
imul
push
retf
ja
and
nop
and
cmp
cmp
mov
sbb
sar
ret
dec
(bad)
or
push
dec
jmp
add
push
add
sbb
push
jg
and
je
pop
xor
jb
jp
hlt
jns
and
cmps
popa
cwde
adc
adc
fadd
lods
xor
add
fmul
fidivr
xchg
push
js
sbb
sti
call
sbb
mov
cmc
jnp
leave
mov
add
pusha
sbb
fs
push
stos
add
push
add
xchg
xor
repnz
mov
pop
loop
pop
into
(bad)
ss
dec
adc
inc
leave
fcomp
imul
jle
psubd
cdq
xor
xchg
adc
inc
mov
dec
push
or
pop
out
loope
sbb
ja
adc
call
and
loop
xchg
or
mov
in
push
xor
push
mov
dec
add
(bad)
push
xchg
mov
(bad)
ficom
ud2
ja
enter
or
inc
popa
rol
shl
sbb
and
fcom
mov
call
lfs
call
cmp
fwait
or
xchg
sub
fiadd
push
mul
push
imul
aad
jg
dec
push
retf
enter
or
pop
push
or
in
test
cmp
ret
xchg
mov
sbb
movs
clc
(bad)
outs
jne
add
jo
xor
xchg
sub
and
outs
pop
jbe
mov
lods
and
(bad)
push
ret
fsubr
popf
xchg
cmps
xor
sbb
into
mov
mov
aad
inc
scas
mov
fldenv
bound
shl
adc
and
int
sahf
mov
dec
retf
sub
test
sub
push
out
ins
loop
jnp
lods
stos
(bad)
xor
cmp
nop
ja
xor
sti
add
test
cwde
repnz
lds
ja
push
push
push
cmp
pusha
loop
call
mov
fcom
cmps
push
cmc
imul
pop
fdiv
out
or
mov
stos
xchg
pop
sub
jle
or
mov
jge
pop
ror
jp
jo
stos
xor
icebp
loope
dec
xor
adc
aaa
or
movs
mov
jecxz
shr
sub
mov
dec
adc
mov
ins
stc
shr
fadd
xchg
in
mov
dec
jb
ja
mov
pop
clc
enter
adc
xor
test
and
mov
retf
inc
out
popa
mov
cmp
mov
ja
dec
sbb
mov
int
imul
fs
xchg
mov
clc
ja
dec
fwait
shl
inc
mov
mov
xor
dec
popa
adc
lahf
xor
scas
inc
adc
or
add
fstp
outs
xchg
pop
add
add
pop
push
test
sbb
push
loope
call
add
and
or
loop
adc
mov
icebp
add
jp
lods
and
(bad)
inc
xchg
sbb
scas
inc
sbb
test
push
movs
jge
int3
push
jp
das
and
and
jmp
js
mov
xchg
mov
or
in
(bad)
and
jae
in
retf
xor
xor
loopne
fstp
pop
bound
mov
in
std
mov
shr
arpl
lea
popf
enter
adc
loopne
out
cdq
and
adc
adc
sub
inc
mov
loop
cdq
test
dec
in
in
out
inc
int3
and
std
and
pop
mov
hlt
pop
aaa
adc
out
inc
adc
js
lds
aas
sbb
popf
xor
jae
and
jns
jnp
and
jecxz
ins
jne
xor
adc
adc
add
iret
outs
pop
jns
call
add
ins
mov
jnp
fcomp
test
lahf
add
or
cmp
push
or
mov
jb
mov
pushf
push
mov
and
sbb
lahf
xchg
cmp
je
push
or
adc
jns
sar
sbb
adc
xchg
mov
xchg
xor
fs
int
push
mov
mov
xchg
xchg
in
js
call
add
cmps
cmp
push
sbb
stc
idiv
pop
pop
mov
fmul
scas
cs
and
fwait
outs
sub
cmps
popa
pop
jb
test
jecxz
mov
pop
test
push
push
or
test
into
int
rcl
(bad)
es
pop
fwait
rcl
inc
out
inc
xlat
out
fs
mov
and
call
imul
inc
adc
pop
jbe
jbe
mov
mov
(bad)
adc
jno
mov
sti
ss
cwde
ins
call
lods
aam
sti
adc
xor
or
mov
ins
pop
mov
pop
and
jge
loope
clc
add
aam
mov
ins
aad
xchg
mov
jl
pop
dec
push
(bad)
sbb
push
loope
jbe
mov
jle
data16
adc
dec
xchg
(bad)
retf
ret
push
inc
mov
jge
clc
adc
jmp
xor
inc
push
gs
enter
rcl
mov
sbb
push
stc
ja
mov
sub
rcr
inc
mov
scas
imul
div
mov
(bad)
mov
pop
fmulp
and
std
(bad)
loope
pop
mov
aad
mov
sar
dec
loope
sub
add
add
or
es
int
shr
call
sbb
sbb
adc
dec
xchg
in
clc
or
mov
push
dec
stos
fbstp
inc
shr
jne
add
out
cmp
fadd
div
pusha
aaa
xchg
fs
cmc
gs
fsub
pop
mov
repz
mov
adc
push
dec
data16
adc
mov
mov
cmps
mov
aaa
scas
mov
in
aam
loopne
cld
retf
repnz
(bad)
mov
jns
jecxz
pop
fisub
cmp
loopne
int3
call
aam
add
pop
lahf
xchg
jle
or
loope
stc
fidivr
mov
cmps
js
(bad)
cs
test
push
xor
dec
dec
adc
cs
ja
mov
sar
test
dec
push
sub
push
fild
inc
imul
xor
inc
icebp
inc
pop
push
jb
ror
jle
cmp
sub
mov
xchg
cmp
mov
inc
or
mov
or
mov
pop
iret
fld
sbb
mov
sahf
jle
dec
pop
sub
test
add
push
push
(bad)
ret
mov
dec
sar
cmp
push
pushf
push
mov
loop
xchg
or
fadd
fwait
movs
sub
std
add
add
xchg
push
add
mov
lods
and
shl
cmp
dec
in
mov
popf
lea
(bad)
dec
mov
sub
arpl
ror
sbb
sub
lahf
push
mov
xor
or
sub
jg
mov
ins
mov
cdq
jno
mov
ret
lods
test
cmp
out
mov
sub
mov
ror
hlt
add
addr16
dec
das
lods
and
fiadd
shl
js
repnz
and
xor
test
cmp
daa
daa
imul
push
xchg
adc
rcl
jne
mov
push
rcl
jo
or
pop
jnp
xor
xchg
jno
push
mov
dec
mov
adc
sbb
push
push
adc
(bad)
je
adc
xchg
mov
lahf
test
mov
add
or
outs
ss
cli
jbe
mov
dec
je
(bad)
out
ins
and
retf
jmp
inc
mov
shl
leave
inc
iret
sbb
leave
mov
inc
daa
enter
mov
js
mov
xchg
lahf
fmul
retf
inc
inc
shl
ja
cli
pop
cmp
ret
maxps
add
fcos
imul
sbb
add
inc
push
rcr
lods
cmps
ret
push
int3
sub
xchg
sbb
call
push
int
jmp
or
shr
jbe
jge
and
ds
fstp
mov
mov
xlat
xchg
push
fisttp
cwde
loope
fs
and
mov
fisub
push
test
adc
or
push
out
int
ja
adc
stos
jmp
and
and
hlt
push
xchg
xchg
sub
adc
movs
and
in
in
aaa
ret
and
adc
(bad)
aas
add
test
jp
xchg
icebp
outs
sahf
add
lds
ret
mov
dec
fbld
jnp
xchg
scas
dec
jmp
sub
mov
fdiv
icebp
test
push
(bad)
lods
cmp
mov
pop
cld
push
ins
test
jmp
sub
push
iret
ror
xor
dec
xchg
sub
fcmovnb
mov
es
push
ret
sbb
inc
xlat
add
out
inc
sub
loope
add
xlat
mov
mov
mov
mov
pop
int3
xor
adc
gs
iret
mov
(bad)
hlt
xor
ror
mov
imul
dec
cli
cmp
mov
pop
xor
imul
scas
scas
lods
pop
mov
or
inc
pusha
loope
push
xor
js
xor
fcomi
fisttp
fldenv
lds
outs
mov
cmp
(bad)
sbb
pop
stc
xchg
add
scas
mov
push
mov
push
js
fs
push
scas
mov
xchg
adc
imul
loope
push
adc
arpl
mov
lods
add
jo
pop
cmps
aad
les
xchg
jne
xchg
aas
test
adc
push
and
xor
retf
sub
mov
jbe
jmp
bound
(bad)
dec
popf
mov
pop
cmp
aaa
mov
call
dec
je
int
lock
sub
cwde
sbb
mul
stos
outs
add
lahf
fsubrp
out
inc
pushf
dec
adc
out
xor
mov
ret
sahf
inc
sub
sbb
sbb
fsub
arpl
lods
fwait
jecxz
call
ins
movs
imul
js
dec
push
mov
loopne
mov
loopne
mov
std
and
push
lds
mov
ins
xor
test
cmp
rep
test
push
inc
xchg
lods
or
mov
call
push
call
out
mov
imul
rcl
loop
aad
mov
ror
jg
xchg
scas
inc
scas
push
(bad)
call
dec
setl
mov
inc
aad
sahf
pop
mov
retf
sub
mov
das
sub
jl
retf
stc
pop
sbb
ins
in
dec
xchg
int3
jg
add
loopne
xchg
cmp
cld
bound
cli
xor
adc
cmp
add
mov
(bad)
sub
pop
inc
aas
pop
pushf
pusha
push
cmp
mov
jg
push
xor
mov
ret
mov
mov
call
mov
xor
cmp
(bad)
mov
pop
add
in
shl
push
fs
lods
and
arpl
cmc
mov
xlat
pop
push
mov
jbe
jg
push
mov
movs
xor
sbb
mov
inc
inc
fdivr
(bad)
ds
push
pop
add
(bad)
mov
mov
jecxz
std
mov
pusha
inc
out
in
lods
cmp
mov
sar
out
cli
xchg
mov
mov
repnz
fs
and
sub
xor
aaa
ja
sbb
inc
dec
mov
adc
in
cmp
mov
mov
scas
sbb
ret
test
push
add
mov
adc
cmp
retf
jl
lods
movs
popa
push
(bad)
pusha
call
sti
jb
and
pop
in
cmp
pop
xchg
(bad)
repnz
mov
mov
mov
xor
and
jmp
adc
pop
or
stos
imul
pop
mov
cs
fist
push
call
rol
lods
jb
xchg
cmp
mul
cmp
and
mov
fld
pushf
cs
push
or
xor
sbb
cmp
mov
and
mov
lods
jnp
adc
add
movs
sub
pop
jns
outs
jae
out
jb
js
cmp
packsswb
xchg
jmp
ret
sbb
das
dec
mov
iret
jmp
test
inc
movzx
sbb
sub
stos
sub
dec
adc
test
mov
shl
imul
push
dec
inc
stc
fwait
pop
adc
sahf
call
push
adc
and
and
pop
sar
in
lahf
scas
push
test
xor
ins
int
scas
adc
int3
gs
loop
cwde
push
jmp
mov
sbb
icebp
in
and
mov
loope
dec
imul
in
jmp
fwait
(bad)
fbstp
imul
sbb
sub
xchg
fbld
xchg
jns
and
inc
rol
push
repz
jnp
ins
imul
jbe
int
ins
adc
jle
ret
ret
daa
inc
daa
popf
sub
outs
push
mov
push
outs
fstp
stc
mov
ficomp
pop
xor
xchg
add
mov
sub
mov
xchg
pop
loope
repz
fidivr
sbb
fist
jno
arpl
sbb
call
and
js
push
or
dec
adc
jmp
push
call
ror
cmp
add
stc
test
jbe
not
fdivr
cmp
div
inc
movs
cwde
cmps
loope
dec
shl
jp
gs
out
imul
(bad)
je
cmps
pop
xlat
dec
push
pushf
mov
aad
data16
outs
bound
imul
cmp
fs
push
je
push
inc
cmp
inc
mov
adc
cmp
pop
cwde
in
mov
sbb
call
push
ins
mov
and
movs
fcmovnb
xor
(bad)
sub
xchg
or
xor
push
cmp
sti
out
mov
dec
sbb
cmps
add
out
cwde
cwde
jo
xor
mov
bound
(bad)
call
lahf
xchg
jb
cmp
fisubr
inc
dec
enter
push
mov
lahf
cmovge
sub
and
jmp
pop
enter
mov
data16
mov
and
imul
sbb
jno
dec
nop
xchg
lock
push
dec
sub
sti
cmp
dec
push
outs
xchg
aaa
pop
sub
retf
in
addr16
das
mov
jp
test
pop
xchg
pop
aad
jmp
jmp
inc
in
xchg
(bad)
jnp
and
pusha
call
mov
fwait
or
sub
dec
daa
mov
pusha
add
mov
mov
mov
cmc
xor
inc
push
lods
stos
icebp
mov
push
push
mov
push
ds
loope
mov
add
push
loop
pusha
jle
and
push
in
dec
popf
sbb
hlt
add
pop
dec
mov
es
ret
push
adc
pop
cmp
dec
xchg
jecxz
aas
or
es
push
dec
scas
mov
aad
mov
(bad)
daa
pop
out
dec
nop
mov
stc
mov
cld
cmp
mov
pop
push
in
adc
fisttp
loopne
pusha
lock
pop
xor
dec
xchg
lods
jne
leave
ficomp
pushf
pop
inc
mov
add
jbe
data16
enter
js
(bad)
and
cmp
xor
jbe
dec
cmp
and
jno
or
push
jns
sub
cmps
xor
inc
pop
(bad)
nop
dec
jnp
jg
in
cli
inc
loopne
dec
inc
mov
jp
xchg
ret
dec
xor
and
cmp
mov
cwde
ficom
addr16
cmp
(bad)
jno
int
dec
mov
pop
cdq
fwait
xchg
mov
bound
mov
test
jge
rol
and
add
pushf
rcr
push
das
dec
fs
outs
mov
add
adc
add
sti
(bad)
cmp
iret
xchg
inc
out
and
xchg
ficomp
out
pusha
push
cmc
xor
sub
aas
xor
or
test
mov
pushf
xlat
xchg
out
inc
cmp
loope
cmp
pop
retf
nop
push
sbb
std
adc
inc
sbb
nop
in
jmp
mov
icebp
sbb
inc
mov
jge
mov
aas
test
stc
adc
movs
rcl
rol
or
sar
cs
les
(bad)
push
movs
mov
jne
test
push
inc
ret
mov
xor
imul
loopne
pop
sub
inc
inc
movs
shr
push
scas
(bad)
cld
mov
bound
push
in
xchg
imul
mov
mov
or
mov
lahf
xor
test
shl
adc
add
mov
fstp
pop
mov
popf
mov
lods
or
cmp
int3
cmp
mov
mov
xchg
or
mov
and
cmp
loop
cmp
cmp
mov
shl
xchg
pop
mov
mov
add
inc
lea
push
div
in
cmp
movs
popf
aad
call
xchg
ror
movs
dec
jae
mov
dec
xor
push
icebp
nop
out
pop
pop
mov
mov
ja
rcl
cwde
jns
rcl
inc
lods
xor
paddw
shl
cld
push
inc
inc
cmp
dec
adc
test
push
iret
mov
inc
das
cmc
mov
or
repz
mov
imul
les
popa
mov
push
adc
scas
sti
mov
dec
(bad)
shl
sub
xchg
outs
cmp
push
fadd
adc
push
pop
(bad)
push
add
int
(bad)
cld
add
push
dec
jge
fcmovnu
sbb
sub
call
fmul
jecxz
pop
or
pop
pop
sti
mov
xor
adc
xchg
in
fisubr
pop
iret
dec
fs
add
popa
js
iret
sub
pop
test
and
add
sub
pop
or
(bad)
cwde
and
push
dec
aas
addr16
shl
mov
jge
leave
pop
fadd
stos
sub
pop
sub
rcr
mov
test
inc
add
test
stos
in
cld
mov
push
xchg
in
push
mov
cmp
ror
mov
and
push
dec
pusha
mov
cmp
shl
sbb
mov
pop
add
mov
fsub
or
mov
(bad)
not
xor
test
adc
data16
mov
sbb
mov
inc
mov
loope
out
icebp
add
adc
mov
and
cdq
sub
xlat
stc
xor
dec
inc
enter
cdq
idiv
in
jb
cdq
sahf
adc
in
and
xchg
xlat
xor
in
sti
mov
sbb
out
lods
sub
fldenv
jmp
mov
hlt
xor
into
movs
and
pushf
fsubp
and
or
out
loopne
add
ret
xor
leave
and
pop
jns
(bad)
adc
test
adc
rol
push
sbb
mov
mov
pop
push
aaa
aas
je
adc
shr
push
(bad)
retf
push
pop
fstp
call
dec
xor
xor
in
fisttp
ss
scas
repnz
movs
adc
fldl2t
sub
jbe
daa
push
sbb
loop
pop
cmp
xchg
loopne
jns
jne
cs
stos
adc
fcomp
xor
mov
jmp
bound
scas
or
pop
mov
and
lods
ficom
sub
xchg
pusha
xchg
xchg
fwait
and
pop
dec
sbb
sbb
push
test
push
fisubr
daa
xchg
push
adc
adc
or
mov
jbe
jecxz
sbb
ins
dec
sub
repnz
jns
out
rcl
cwde
(bad)
call
mov
inc
ficom
xor
dec
mov
cld
fadd
pop
jns
sbb
not
mul
add
repz
inc
fiadd
mov
sbb
cs
(bad)
out
out
jg
in
cmp
sbb
or
xchg
rcl
mul
imul
inc
fdiv
jnp
cmps
push
xchg
inc
aam
out
clc
jns
stos
xor
mov
mov
bound
cmc
push
mov
pusha
cmp
adc
xchg
lods
sbb
sub
(bad)
sub
leave
test
jcxz
inc
mov
shl
lods
movs
ins
sbb
fidiv
adc
sbb
or
sub
push
mov
std
in
mov
jg
fmul
mov
pop
pop
sub
(bad)
inc
pop
cmps
je
lods
jo
rcl
js
pop
inc
jb
inc
sub
jge
and
pop
call
loop
daa
sub
cmps
call
retf
xchg
push
popf
icebp
cwde
dec
movs
cli
scas
jae
mov
push
xchg
dec
jae
imul
mov
(bad)
hlt
test
xchg
shr
add
cmp
jp
push
push
cs
test
mov
mov
and
jae
mov
jge
or
adc
xchg
sbb
aaa
sbb
mov
inc
nop
out
mov
movs
mov
sbb
hlt
daa
in
repz
mov
movs
mov
outs
dec
push
inc
in
dec
add
add
clc
push
inc
pop
stc
sbb
or
and
std
jecxz
cmp
cmp
scas
add
add
cwde
jns
add
outs
mov
rol
test
call
ds
fnop
shl
loope
test
fidiv
jge
jle
hlt
xchg
mov
inc
cmp
jmp
mul
sub
stc
push
jp
outs
mov
rol
push
dec
jnp
xor
cli
dec
daa
icebp
div
mov
xchg
(bad)
out
gs
jnp
jle
test
cmp
pop
xor
or
ror
xchg
lock
add
add
xchg
jb
mov
pop
sahf
bound
ins
mov
popa
ins
je
jne
xor
outs
mov
xor
movs
fsubr
ss
test
jnp
loop
sbb
out
or
call
mov
adc
lock
cmp
data16
adc
icebp
lods
jmp
sahf
jo
sbb
shl
xor
sbb
push
mov
mov
mov
fidiv
sbb
xor
or
xchg
test
xchg
jo
mov
fs
xchg
and
scas
out
mov
cli
xchg
out
jns
push
mov
sti
xor
mov
loopne
push
sbb
scas
fadd
mov
lds
adc
data16
cmp
mov
rol
icebp
(bad)
(bad)
jb
cmp
sbb
pop
cdq
loope
and
mov
ss
dec
addr16
cdq
push
cmp
cdq
clc
pushf
mov
jmp
xchg
(bad)
mov
out
(bad)
mov
hlt
jl
xor
push
or
jge
outs
dec
xchg
pop
jp
mov
pop
mov
adc
xchg
dec
push
mov
leave
pop
out
outs
unpcklps
aad
(bad)
push
fbld
xchg
mov
add
mov
xlat
and
sbb
rol
repz
fwait
imul
dec
jne
dec
jmp
pusha
ret
fwait
leave
or
ins
stos
inc
pusha
jecxz
aad
xchg
nop
pop
mov
dec
pop
add
push
ja
jb
mov
inc
dec
mov
jmp
mov
fdiv
or
sub
or
xor
and
add
push
mov
push
les
sar
cmp
retf
cmp
dec
popf
into
sahf
and
and
jl
mov
xchg
test
dec
into
and
(bad)
pop
mov
push
mov
fsub
inc
sub
xchg
xor
daa
out
xor
popa
jmp
pop
xchg
xor
div
jl
mov
adc
in
vmwrite
psubsb
cmp
mov
adc
cld
rcl
pop
jmp
clc
imul
or
movs
xchg
push
xchg
addr16
lods
stos
jne
shl
test
sar
clc
mov
jl
ds
cmp
push
lea
repnz
das
push
cmp
jmp
call
add
stos
and
dec
jae
push
xchg
cmp
dec
dec
ficomp
mov
push
in
push
stos
pop
xchg
int3
test
sbb
xor
push
imul
inc
sbb
test
xor
and
xchg
jnp
je
mov
out
mov
pop
icebp
lahf
and
(bad)
sbb
and
or
mov
repz
mov
dec
dec
add
cmp
test
(bad)
mov
shl
mov
xor
movs
xchg
or
scas
adc
daa
inc
(bad)
rol
daa
(bad)
pop
inc
imul
mov
cs
inc
xchg
and
push
mov
lea
jnp
jg
dec
mov
repnz
arpl
mov
adc
inc
mov
cs
icebp
dec
xor
enter
stos
sti
dec
push
cmp
in
xlat
xchg
mov
inc
or
mul
hlt
dec
jle
fisttp
lods
es
and
repnz
add
(bad)
pop
dec
dec
out
pop
jmp
mov
jg
mov
jbe
sub
or
mov
jno
inc
fldenv
loopne
(bad)
mov
test
sbb
lds
shl
fnstcw
retf
xchg
dec
ret
imul
movs
loop
js
pop
and
aad
je
inc
test
lds
xor
mov
mov
sbb
test
jns
xor
inc
repnz
sub
lock
idiv
cmp
xchg
ss
adc
pop
adc
add
(bad)
pop
adc
push
int3
mov
sub
sub
jnp
outs
cdq
pop
adc
popf
jnp
adc
pop
sub
jg
mov
loope
or
add
out
sti
mov
aaa
add
dec
adc
mul
mov
retf
int3
pusha
xor
iret
sbb
into
mov
retf
fwait
mov
ss
addr16
not
or
pop
mov
xlat
or
push
mov
imul
jle
imul
xor
fiadd
sbb
xor
lock
mov
inc
lods
add
xchg
push
add
sbb
cwde
loop
js
xchg
push
out
test
or
mov
(bad)
adc
mov
mov
pop
sbb
jge
jle
mov
stos
pop
mov
push
xor
jl
addr16
cld
mov
fcmovbe
inc
cmp
jp
pop
cmp
ds
sub
cmp
inc
xor
push
adc
jle
inc
sub
imul
aaa
jae
inc
xor
dec
cmp
pop
sbb
jbe
dec
and
arpl
imul
ins
sub
xor
push
adc
pop
push
call
mov
sar
add
or
imul
jecxz
clc
jge
xchg
push
jmp
push
stos
int3
mov
(bad)
mov
les
sub
fcomp
inc
das
test
or
bound
loop
or
cmp
mov
scas
cs
inc
inc
addr16
movs
sbb
out
adc
mov
data16
loope
inc
(bad)
stos
in
test
xchg
in
mov
mov
icebp
cmps
out
cli
lods
fcomp
in
out
mul
in
out
stos
cld
mov
out
xchg
movs
aam
rcr
out
(bad)
dec
std
pusha
mov
lahf
cmp
inc
xor
(bad)
mov
nop
scas
jmp
int3
into
je
xchg
cwde
out
loope
pop
jo
sbb
sar
(bad)
jbe
push
push
cmp
daa
test
call
jnp
mov
lahf
loop
clc
xor
add
push
rol
es
pop
sub
inc
xor
xchg
fisubr
lds
aad
repnz
xchg
mov
mov
fsubr
cmc
test
or
mov
clc
mov
mov
fsub
clc
call
sbb
repz
sbb
jns
cwde
and
xchg
xor
adc
push
lahf
mov
mov
mov
jne
imul
arpl
stos
jmp
or
jbe
inc
clc
cmp
pop
xor
or
mov
fs
jg
js
mov
std
and
(bad)
fsubr
stos
add
dec
sub
fstp
jge
push
jne
dec
pcmpgtb
test
bound
imul
jne
push
adc
pusha
cmp
imul
pop
adc
popa
and
jbe
pusha
test
jb
dec
or
add
xor
jle
lea
mov
mov
outs
pop
dec
inc
sahf
cmps
aad
push
cld
mov
retf
jge
mov
push
and
xor
xor
pop
es
call
mov
push
and
ret
rol
xor
xor
dec
sbb
mov
fcomp
cmp
mov
mov
stos
sub
inc
inc
arpl
movs
add
mov
les
sub
fcomp
sahf
shr
ret
mov
cli
test
retf
mov
loop
rcl
mov
(bad)
mov
fisttp
js
(bad)
mov
mov
lock
jmp
push
add
loopne
pop
outs
inc
ins
push
dec
cs
fnstcw
mov
fdivr
jnp
(bad)
mov
pop
and
jo
and
push
push
and
dec
data16
cld
(bad)
mov
into
sti
imul
fidiv
jle
adc
inc
jbe
lahf
in
jns
lea
dec
push
bound
cmp
or
xchg
(bad)
hlt
inc
xor
jo
inc
dec
cdq
movs
leave
mov
aaa
outs
cmp
cs
pop
sub
and
inc
add
outs
aas
push
cmp
sub
mov
push
xor
adc
out
in
outs
sub
sbb
test
leave
jnp
lea
cmp
xchg
mov
cmps
add
dec
fnstsw
test
push
aas
jl
adc
aaa
mov
(bad)
scas
sub
add
push
inc
sbb
imul
repz
push
xor
pop
add
xor
xchg
and
sub
shl
mov
sub
ins
(bad)
dec
dec
mul
popa
xchg
movs
shl
xchg
mov
scas
ss
dec
cmp
movs
not
hlt
call
mov
stos
jmp
xchg
repnz
xchg
retf
mov
stos
sti
mov
out
test
cmc
sahf
(bad)
push
loopne
in
cmp
mov
or
adc
les
xchg
mov
mov
es
and
scas
test
push
pushf
gs
cmp
and
mov
dec
cmp
jle
jae
sahf
aad
sbb
je
ins
jne
enter
mov
lahf
xor
adc
call
(bad)
fist
push
add
pop
mov
mov
(bad)
push
push
ds
add
pop
push
xchg
stos
fdivr
or
arpl
cmp
inc
cmp
jne
add
jno
pop
sub
fs
in
cdq
adc
addr16
addr16
(bad)
stos
push
mov
dec
inc
sbb
jl
popa
pop
jp
nop
adc
jno
nop
pop
cli
cmp
cmp
xor
loop
xor
mov
(bad)
mov
lods
push
or
cmp
dec
add
fs
jg
jno
pusha
daa
popf
loop
fnstcw
fld
or
out
stos
loope
ret
nop
cmc
xchg
out
call
enter
not
jmp
(bad)
int
or
mov
pop
and
mov
fcmovb
xchg
cli
lods
fcomp
in
out
mul
cmp
dec
dec
not
jno
or
mov
adc
push
pop
cmp
mov
sahf
call
pusha
inc
jmp
add
or
js
xchg
clc
cmc
xchg
lds
xchg
shl
ret
movs
out
mov
out
mov
push
dec
pop
popf
(bad)
mov
push
ss
push
jbe
imul
add
push
cs
or
jae
dec
or
jnp
push
cmp
pop
sub
jns
jno
dec
orps
or
inc
adc
sahf
leave
ret
out
in
daa
push
daa
mov
gs
adc
push
push
pop
sbb
outs
and
or
pop
push
jae
stos
call
dec
out
xchg
jmp
xor
adc
mov
test
(bad)
lahf
in
fxch
je
push
lds
sub
call
ins
adc
adc
jne
dec
or
jbe
dec
pop
dec
sbb
mov
mov
pop
push
es
dec
pop
xor
popf
shl
sar
int
push
gs
inc
adc
popa
cmp
or
and
pop
adc
pushf
les
fldenv
xor
iret
mov
sub
imul
pop
pushf
mov
scas
fimul
iret
mov
jmp
and
jae
jle
adc
pop
add
ja
mov
loop
jnp
arpl
mov
mov
xlat
mov
push
sbb
xchg
lods
fnstsw
or
cmp
or
fcom
retf
frstor
(bad)
mov
pop
sub
addr16
inc
xor
ins
xor
jle
dec
or
retf
fadd
clc
mov
ret
mov
xchg
iret
movs
out
fwait
(bad)
mov
mov
fdiv
sti
mov
fiadd
lea
jb
(bad)
dec
dec
or
or
ds
jae
and
das
mov
pop
sbb
jge
jle
mov
stos
pop
mov
push
xor
jl
lods
pop
out
jecxz
xchg
loope
mul
imul
movs
ficomp
pusha
bound
inc
and
fisubr
cmc
xchg
test
mov
mov
mov
lods
cld
mov
push
xor
in
in
mov
in
fsub
fsub
std
test
mov
in
ror
cmp
pop
sub
imul
sub
jns
cwde
xlat
mov
pusha
cs
xor
jmp
faddp
xchg
std
mov
jbe
nop
call
sub
jns
neg
sub
or
adc
ja
xchg
mov
adc
cli
mov
fmul
jno
aad
pop
xor
and
or
in
mov
mov
jns
(bad)
clc
clc
arpl
and
daa
push
cmp
or
outs
and
push
jo
mov
rcl
fcomp
mov
mov
ss
out
test
loopne
sbb
pusha
jne
ja
fiadd
xchg
mov
xchg
sbb
pusha
sbb
inc
sub
rcl
push
cmp
lock
cmp
mov
jp
jnp
pushf
cmc
(bad)
nop
shl
mov
std
xchg
loop
mul
fs
mov
(bad)
js
fidiv
dec
sbb
cli
jp
ins
xchg
lahf
mov
cmp
sbb
dec
repz
inc
push
inc
add
dec
ss
(bad)
mov
out
frstor
mov
(bad)
jmp
pusha
jmp
stc
xchg
sti
(bad)
ror
inc
add
(bad)
xchg
sbb
scas
fidivr
cdq
clc
test
fild
inc
dec
ins
in
imul
popf
in
sbb
jecxz
into
mov
in
(bad)
test
dec
repz
aad
es
je
mov
mov
test
cmp
inc
mov
movs
fcomp
jp
out
loopne
jb
cwde
pop
clc
mov
call
dec
sahf
dec
cmp
fwait
test
(bad)
je
xchg
push
sbb
add
aas
push
xor
pusha
sub
push
dec
pop
xor
sahf
fst
adc
test
not
in
ficomp
add
popw
data16
cmp
pop
or
fadd
xchg
and
cmp
mov
pop
and
xor
xchg
test
fdiv
sub
jl
jns
push
or
jno
fst
icebp
jl
js
pop
dec
fs
push
mov
lds
cmc
adc
popa
adc
adc
or
cmp
lds
sahf
sub
lods
xchg
sti
test
mov
cld
mov
mov
cmps
in
loopne
iret
pop
fstp
out
push
in
(bad)
(bad)
fisub
mov
into
fisubr
pop
xchg
mov
outs
and
xchg
les
mov
shl
lock
xchg
jmp
(bad)
mov
call
sub
push
and
sar
shl
hlt
cmp
out
adc
fcomp
jp
out
loopne
jb
cwde
pop
hlt
jmp
jmp
adc
push
inc
and
mov
icebp
(bad)
out
sar
pop
jge
loop
sub
fwait
retf
cdq
fs
clc
pop
in
xor
stc
mov
xor
sub
cmp
jecxz
cmp
not
jl
sub
out
aad
enter
(bad)
loopne
sbb
push
inc
adc
xchg
test
mov
fst
not
pop
mov
xor
cmp
jp
push
daa
imul
test
fst
(bad)
xchg
retf
xchg
retf
scas
clc
test
mov
xchg
and
mov
stos
or
inc
and
push
cld
stos
or
add
and
scas
call
leave
adc
fwait
or
inc
sub
mov
dec
mov
lahf
rcr
and
push
push
ins
add
sbb
adc
or
add
fs
lods
test
rol
adc
xor
push
or
sahf
icebp
mov
lds
cdq
les
aaa
lahf
rol
sbb
inc
or
outs
pop
pop
aas
ins
add
inc
or
cmp
jne
je
ja
dec
pop
popf
lds
push
push
adc
jb
jns
xchg
and
sbb
jp
mov
or
daa
pusha
dec
arpl
(bad)
out
je
jne
adc
addr16
shl
pop
sub
sub
pop
cs
jnp
or
jle
in
cmp
pop
adc
inc
fsubr
jno
jle
jge
mov
mov
xchg
lods
cld
lods
or
popf
jecxz
out
sub
ret
mov
clc
mov
mov
lds
test
mov
fldcw
jmp
movs
jmp
sbb
pop
add
jle
push
cmp
inc
sub
add
push
or
pop
xor
jbe
dec
xorps
pop
push
mov
push
daa
nop
push
sti
mov
push
ins
stc
mov
call
xor
and
popa
sub
jb
jae
mov
sub
aaa
push
sub
or
shl
lea
mov
loope
leave
cdq
retf
push
ror
es
push
pop
and
cs
pop
and
sub
dec
cs
sbb
(bad)
mov
fld
clc
scas
iret
mov
mov
stos
fld
ret
mov
repnz
(bad)
mov
neg
stos
sbb
fwait
(bad)
cmp
mov
imul
ss
jae
fcom
jmp
dec
addr16
shl
pop
and
cmp
sub
sahf
cli
jmp
arpl
inc
and
aad
cld
test
jge
gs
dec
xor
pop
out
arpl
mov
xor
cmp
push
or
inc
adc
push
add
fldcw
inc
push
jo
add
jl
imul
inc
xor
inc
add
push
xor
pop
push
popa
and
dec
add
add
push
aas
jg
lahf
ret
mov
mov
sbb
jo
push
dec
xor
dec
sbb
jb
dec
pop
imul
call
adc
jle
mov
mov
pop
repz
rol
cmp
pop
and
sub
cs
xor
or
pop
dec
adc
xchg
mov
pusha
xchg
push
aad
mov
fiadd
pop
call
bound
sbb
and
adc
adc
jge
pop
xor
sub
inc
adc
cmp
les
sbb
dec
ss
jp
or
loope
stos
sbb
xor
add
inc
xor
inc
xor
dec
or
ds
and
jb
jno
dec
adc
dec
and
inc
add
jge
inc
add
outs
aas
dec
and
push
or
outs
or
sbb
jl
mov
mov
dec
out
xchg
out
out
outs
add
daa
pop
sbb
gs
inc
out
mov
movs
ffree
mov
loope
mov
gs
jecxz
shr
jge
pop
popa
movs
stc
popf
xchg
mov
les
(bad)
popa
push
sub
push
adc
push
out
mov
mov
cmp
je
sbb
pop
or
ss
mov
rcr
loope
sbb
inc
fld
mov
loope
cmp
push
adc
xchg
xchg
ror
inc
xor
jg
xchg
ret
cli
jg
ins
dec
leave
mov
jns
mov
dec
add
in
cli
shl
(bad)
out
fstp
movs
retf
iret
dec
cmp
bound
or
enter
inc
(bad)
xchg
icebp
push
cmp
daa
test
ret
sub
sub
or
jne
aas
or
xor
ins
cmp
and
jecxz
adc
adc
cwde
retf
xchg
clc
mov
lods
fcomp
or
ret
(bad)
jmp
lock
out
push
in
enter
sbb
sbb
cmp
and
arpl
push
sbb
pop
rcl
je
pop
loop
mov
push
and
mov
add
out
int
add
test
retf
ret
arpl
repnz
imul
jl
jle
jmp
mov
fisub
popa
xchg
mov
stc
(bad)
imul
inc
jo
popf
out
ja
lahf
pop
cmc
mov
mov
fimul
xchg
xchg
les
xchg
stos
stc
cmps
xchg
mov
xchg
in
int
iret
push
les
out
loop
int
shl
or
js
cmp
pop
pop
(bad)
lds
dec
shl
push
enter
aad
sub
dec
call
push
push
imul
lods
shl
push
aad
sbb
or
dec
dec
adc
mov
jo
jae
adc
cmp
scas
fsubr
cwde
lods
std
mov
pop
sub
adc
inc
das
test
movs
adc
jno
jbe
movhps
push
push
sub
scas
mov
cmp
movs
retf
iret
dec
cmp
and
fcomp
test
retf
mov
jg
mov
dec
(bad)
mov
and
dec
ss
out
in
mov
fist
nop
or
popf
mov
std
xchg
mov
fisubr
mov
fmul
xor
mov
loope
jmp
enter
outs
adc
push
inc
and
mov
icebp
(bad)
out
sar
push
pop
ins
pop
dec
hlt
sub
inc
pop
jae
mov
inc
dec
push
(bad)
hlt
into
shl
xor
test
xchg
in
shl
lahf
adc
inc
dec
outs
push
cli
mov
fisub
pop
das
add
aas
add
imul
adc
xor
and
pop
sbb
push
sti
dec
in
scas
cwde
fldenv
xchg
mov
pushf
xchg
xchg
ret
call
push
test
jmp
xlat
xchg
lds
bound
sub
xor
pop
das
cmp
add
cmp
jnp
mov
jo
adc
sub
mov
xchg
pop
dec
adc
inc
(bad)
addr16
dec
jmp
fs
jg
sbb
pop
cwde
adc
jge
mov
xchg
in
in
aam
xor
push
cs
or
sahf
(bad)
cmp
mov
add
pop
lea
inc
sub
mov
std
in
ds
fimul
jge
inc
cmp
test
add
push
push
xchg
fistp
lods
mov
outs
jmp
in
inc
dec
mov
stc
add
sbb
ret
test
aad
cld
ret
or
cli
push
add
arpl
out
dec
dec
ins
neg
(bad)
xchg
xchg
mov
test
jae
jbe
es
stc
or
je
test
and
cmp
mov
adc
adc
aaa
and
jbe
mov
fwait
leave
ins
mov
lock
mov
call
shl
push
ins
mov
mov
fucomp
jmp
mov
mov
enter
ja
mov
jp
fcmovnbe
leave
sbb
or
fnstcw
rol
mov
mov
cmp
es
dec
mov
add
sub
movs
sub
loope
lahf
xor
pop
sub
mov
add
pop
mov
sub
nop
shl
ins
jge
ret
lock
xchg
ins
mov
mov
ffree
inc
mov
ficomp
mov
inc
icebp
dec
mov
jmp
in
imul
cld
pop
(bad)
dec
(bad)
or
rcr
(bad)
loopne
inc
mov
mov
mov
cmps
xchg
addr16
xchg
add
ds
call
push
lods
push
pop
pop
iret
and
dec
mov
pusha
mov
xchg
scas
bound
aad
test
adc
rcl
rcr
cvttps2pi
inc
add
push
(bad)
aaa
add
outs
push
sub
test
je
jp
movs
popa
add
mov
add
cmp
jmp
ins
fcom
repnz
or
je
hlt
inc
dec
inc
(bad)
aaa
fwait
push
add
pop
cmp
iret
imul
test
jo
aas
mov
mov
ins
gs
fcom
call
push
mov
mov
pop
sbb
sub
leave
mov
push
mov
imul
dec
std
ja
mov
or
pop
mov
sar
call
out
jbe
sar
sbb
xlat
pop
into
jl
sbb
mov
jmp
call
loopne
pop
ins
cli
and
inc
xor
in
loop
int
mov
loope
inc
addr16
pop
sub
jae
mov
sub
dec
stc
add
pushf
das
add
dec
jmp
imul
pop
jp
add
int
xor
push
data16
jb
mov
jo
(bad)
inc
jle
ss
test
jmp
adc
pushfw
or
jae
sbb
mov
loop
dec
(bad)
addr16
sub
pop
mov
mov
fcmovbe
js
je
jne
jl
push
mov
popf
leave
loope
mov
inc
and
cmp
jnp
sbb
push
inc
in
pop
add
cmp
adc
in
push
call
repnz
scas
adc
call
imul
mov
lea
sti
imul
pop
es
lods
mov
fistp
hlt
push
mov
out
retf
mov
imul
xor
mov
mov
aam
xchg
push
dec
sub
jnp
pop
call
outs
xor
aaa
and
jnp
jnp
dec
gs
add
add
pop
cmp
adc
cmc
push
mov
cmps
pusha
mov
or
mov
pop
shr
mov
ds
mov
and
sub
mov
dec
stos
push
sahf
push
aad
pop
int
or
cmps
jecxz
inc
fist
xor
push
in
mov
cwde
or
or
pop
push
and
sub
jle
fbld
mov
test
ret
ins
fchs
xor
retf
retf
fs
or
repnz
inc
inc
data16
mov
push
in
cwde
clc
gs
imul
ficomp
cli
push
ja
sbb
aam
ds
mov
out
jnp
(bad)
aas
aam
icebp
or
sbb
xchg
push
mov
or
imul
jnp
les
inc
fsubr
xor
jae
lods
mov
in
popf
(bad)
add
mov
test
retf
add
cmp
into
jmp
mul
lock
mov
or
jns
test
push
mov
mov
xlat
dec
adc
xor
sub
or
sub
sub
stos
jp
and
dec
movs
mov
jmp
push
ja
inc
sub
jmp
and
imul
jb
ss
ins
add
mov
pop
jecxz
popa
(bad)
xor
jbe
leave
dec
test
std
cmp
fwait
dec
mov
xchg
inc
jnp
stos
stos
push
js
fisubr
stos
enter
js
rcr
mov
cmp
xor
dec
xor
xchg
nop
dec
jno
stos
sbb
or
dec
call
pop
add
jmp
inc
loopne
lahf
out
ss
cmp
fmul
cdq
adc
(bad)
mov
clc
(bad)
mov
lahf
js
pop
ds
aad
adc
pop
mov
jmp
pop
xchg
fisubr
jae
push
jbe
sbb
adc
popf
in
xchg
mov
mov
xchg
jmp
lods
add
iret
inc
push
inc
(bad)
sbb
jl
xor
cmp
sar
mov
rcr
scas
sub
loopne
adc
ror
rcr
bswap
mov
jne
pop
mov
outs
ja
xor
iret
xlat
cmc
mov
jne
in
div
pop
stos
paddsb
add
call
adc
jp
pop
ficom
(bad)
pop
mov
movs
xor
add
cs
int3
jae
cli
pop
adc
fadd
loop
fdiv
xchg
cld
test
pop
and
mov
js
iret
and
sbb
aad
add
mov
jns
dec
daa
das
iret
jg
or
and
repz
out
xor
ins
cmp
mov
aad
popa
scas
imul
nop
(bad)
xor
add
test
sti
mov
aas
xchg
and
(bad)
dec
xor
cmp
mov
jno
inc
add
dec
pop
mov
jb
fcomp
sbb
jmp
popa
(bad)
jle
scas
repnz
lods
mov
je
mov
xor
mov
out
sahf
fidiv
outs
sub
cli
movs
add
stc
add
pop
daa
add
cmp
dec
push
rcr
mov
pop
jp
mov
cmps
ds
fbstp
icebp
clc
jle
push
xchg
ret
jno
adc
adc
xor
or
retf
add
xor
add
inc
aam
xchg
xchg
addr16
jmp
out
mov
or
inc
or
cmp
sbb
jns
retf
xchg
and
int3
jl
scas
cmp
pop
in
pop
adc
add
inc
retf
mov
cmp
(bad)
mov
mov
ror
neg
in
inc
xbegin
dec
iret
jb
push
mov
nop
outs
enter
nop
pop
or
jno
scas
jne
popa
cmp
or
add
ret
inc
dec
nop
paddsb
ins
dec
icebp
in
mov
mov
outs
out
enter
cmp
lock
dec
aas
and
mov
repz
dec
and
xlat
jle
callw
es
lahf
out
in
retf
cmp
push
inc
es
sahf
out
add
scas
iret
(bad)
mov
repnz
retf
loop
aad
adc
cmp
imul
scas
pushf
and
fs
sbb
dec
and
xor
rcr
push
cli
sti
inc
and
sub
pop
(bad)
leave
sbb
pop
jnp
cmps
dec
jmp
mov
pop
add
and
out
movs
in
loope
scas
pop
mov
ja
jmp
shl
mov
mov
icebp
sub
lock
addr16
repz
lds
out
and
inc
call
sub
fild
cwde
repz
cmp
lahf
mov
mov
int
in
inc
or
inc
ror
sub
adc
mov
cmp
retf
xor
les
inc
rol
and
and
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
xchg
push
add
stc
xchg
fstp
out
mov
retf
pop
jmp
sub
jno
test
sahf
sar
sub
and
dec
xor
pop
pop
dec
pop
sub
inc
adc
cs
sbb
ret
mov
je
in
cmp
pop
adc
pop
mov
mov
lods
iret
test
sahf
fsub
test
dec
jecxz
sbb
inc
push
sbb
sahf
leave
mov
mov
dec
jecxz
adc
xor
inc
js
mov
shr
add
mov
mov
lds
inc
adc
aaa
or
xor
aaa
xchg
bound
ret
arpl
cwde
into
(bad)
out
int
sbb
jmp
fdivr
and
fsub
test
repz
push
cmp
push
and
ds
out
les
rep
sub
inc
push
jmp
outs
movs
rcl
out
mov
push
mov
shr
cmp
or
sti
sahf
iret
push
add
and
mov
xor
mov
nop
inc
int3
xchg
fwait
test
sar
loope
clc
popa
cmp
out
shl
pop
int
rcr
in
stos
clc
jp
imul
fcomp
add
or
push
aam
mov
pusha
add
ss
xor
xor
sti
addr16
jb
es
adc
pop
aas
jl
(bad)
sub
cwde
scas
ror
stc
mov
sar
and
int
xor
xchg
xor
std
mov
mov
out
sbb
scas
call
in
outs
add
inc
sbb
xor
cmp
xchg
rol
clc
xchg
fisubr
pop
jb
pop
mov
or
jns
add
ja
mov
pop
sub
sbb
and
pop
push
retf
mov
or
hlt
mov
pop
sbb
pop
loopne
push
js
and
das
cmp
dec
or
push
jmp
mov
mov
mov
jo
sub
shr
repz
and
cmp
out
(bad)
popa
jecxz
rcr
inc
mov
bswap
mov
les
inc
adc
stc
pushf
fsubr
pushf
out
push
gs
dec
sar
pushf
hlt
xchg
out
bound
je
pop
mov
loope
jmp
xor
(bad)
or
ror
test
fnsave
test
add
inc
test
or
ss
xor
dec
or
adc
inc
xchg
inc
add
mov
outs
sub
sar
repz
mov
sahf
xlat
mov
xchg
das
mov
in
add
pop
pop
das
jb
push
(bad)
imul
and
(bad)
mov
ficom
sub
and
push
adc
outs
adc
dec
out
dec
adc
adc
lahf
shr
mov
xchg
fidivr
cdq
sbb
pop
hlt
iret
mov
pusha
jecxz
shr
adc
loope
imul
jnp
inc
and
cld
xchg
ror
popf
(bad)
cs
inc
or
shl
dec
(bad)
movs
cli
mov
fdivr
pop
jmp
push
ins
cmp
push
dec
aaa
jne
inc
adc
xor
add
cmp
fsubr
or
inc
adc
imul
popa
or
push
adc
int
into
xchg
inc
cmp
push
push
push
dec
push
ins
xchg
ins
in
in
lds
popf
(bad)
xchg
call
jae
pop
or
stos
xchg
mov
and
lock
mov
jmp
daa
jle
pop
sbb
sbb
lds
aam
div
inc
sbb
xchg
fist
es
push
pop
or
in
sub
movs
mov
mov
cmovns
jbe
dec
push
pop
jecxz
ret
test
leave
fwait
cmps
cli
mov
push
push
sbb
out
lds
aaa
jns
jno
jo
dec
sbb
inc
fwait
mov
xor
(bad)
js
push
add
cmp
in
mov
dec
sar
popf
out
or
pop
ficom
cs
push
das
ja
and
aas
xor
sbb
mov
pop
out
stos
rol
imul
and
sbb
inc
sbb
push
sub
dec
cld
push
pop
sbb
pop
out
pop
jl
in
mov
pushf
out
mov
xchg
loopne
leave
(bad)
pop
sbb
add
jae
jnp
adc
mov
mov
and
imul
pop
and
pop
dec
or
scas
push
cmp
jge
jl
ja
push
and
daa
inc
add
clc
daa
push
retf
popa
mov
adc
aas
mov
mov
scas
int3
or
add
int
(bad)
or
loope
retf
xchg
test
retf
aaa
sbb
ins
sbb
and
pop
xor
xchg
mov
icebp
mov
cdq
or
dec
mov
mov
xchg
movs
out
enter
and
sub
leave
push
mov
sub
cli
push
sub
sub
int3
lods
into
add
sub
jno
enter
mov
pop
adc
je
sub
fmul
push
pop
cld
dec
push
imul
adc
leave
test
lods
inc
add
sub
jle
inc
out
retf
jae
xchg
jae
in
xlat
pop
mov
mov
lahf
sahf
data16
push
add
fcomp
push
daa
dec
cmp
cli
jle
in
imul
xor
lods
lds
pusha
sub
xor
jne
leave
data16
pop
aas
jno
sbb
imul
xchg
lds
pop
mov
out
fldenv
pop
push
popa
sub
jnp
sub
cmp
pop
push
gs
repz
pop
inc
jmp
fld
mov
lods
ins
inc
aaa
inc
push
inc
mov
loope
leave
stos
mov
out
popf
lds
dec
imul
xor
mov
daa
dec
lods
adc
jl
mov
stos
stc
inc
xor
and
jl
xlat
mov
mov
das
es
cmp
ss
add
inc
cwde
jns
jg
inc
sbb
sub
push
xor
pop
fbld
jl
inc
aad
lahf
fldenv
push
pop
or
in
cli
addr16
leave
push
add
pop
aaa
jbe
inc
add
xor
push
pop
imul
outs
cs
pxor
pushf
cmc
mov
in
cmp
dec
loope
pop
inc
out
sti
xchg
out
xchg
ret
pop
jle
daa
sub
xlat
push
mov
or
stc
cmp
pop
sbb
inc
stos
sub
xchg
dec
xchg
cmc
scas
leave
mov
jb
js
inc
sbb
dec
jecxz
call
mov
data16
retf
nop
scas
fstp
(bad)
mov
ins
and
mul
cmp
push
push
(bad)
fistp
mov
int3
mov
or
push
pop
jecxz
out
sahf
test
sbb
xor
add
fcomp
aad
push
add
or
cdq
into
movs
rol
mov
mov
add
inc
das
es
outs
adc
(bad)
xor
in
mov
inc
dec
xor
mov
sub
push
or
jae
pop
adc
push
aas
inc
sub
jmp
loopne
ror
outs
aaa
outs
adc
dec
out
dec
adc
adc
dec
arpl
pop
mov
xor
in
add
in
cmc
pop
mov
pop
aas
dec
out
mov
stc
mov
ret
sbb
sar
dec
adc
pop
mov
shl
push
and
loopne
ins
cmp
add
clc
xchg
mov
dec
sbb
xor
pusha
sbb
cmps
cwde
ret
xchg
in
cmp
aas
push
xor
inc
out
fild
retf
mov
inc
sbb
nop
jmp
es
test
scas
sar
push
cmp
sbb
pop
adc
jl
dec
adc
aaa
arpl
and
popf
push
cmps
jmp
mov
daa
dec
scas
in
jmp
sbb
test
sar
add
je
popf
icebp
cmps
mov
daa
jnp
(bad)
popa
das
inc
add
loopne
push
mov
mov
sub
(bad)
xchg
call
push
aaa
outs
push
sub
mov
cmp
mov
and
inc
cmp
das
ror
jae
inc
or
mov
adc
in
popa
ss
cmp
shr
sar
mov
xor
add
xlat
nop
repnz
cli
es
je
pop
das
clc
subps
jbe
inc
sub
sbb
jae
pop
mov
pop
andnps
sbb
jb
pop
out
fild
jbe
push
lods
call
jmp
or
cwde
xlat
xchg
leave
mov
xor
push
cmp
mov
jbe
cmc
fcomp
cmps
icebp
mov
mov
(bad)
cmc
mov
mov
scas
repz
test
test
rol
adc
sub
add
push
jle
je
cmp
pop
pop
daa
outs
cmps
mov
(bad)
scas
mov
inc
mov
xor
js
jb
jae
arpl
out
mov
call
iret
add
shr
mov
pushf
aam
mov
xchg
mov
popf
imul
push
adc
arpl
inc
adc
and
sahf
fiadd
sub
pop
sbb
loopne
lock
in
(bad)
adc
add
and
or
xchg
movs
fisttp
dec
pop
retf
in
pusha
mov
dec
push
and
call
mov
mov
or
jbe
int
rcr
inc
dec
and
add
jne
mov
sbb
pop
or
cmc
pusha
adc
push
mov
lds
gs
cwde
(bad)
mov
push
sbb
push
sar
inc
pop
push
pop
out
dec
xor
not
test
mov
cmc
adc
fist
test
(bad)
int
dec
pop
cs
xor
jnp
pop
xor
loop
retf
xchg
jl
cmc
xchg
jmp
cli
test
icebp
pop
fst
lock
(bad)
aaa
jo
push
adc
jmp
push
adc
cmp
in
std
stos
aad
mov
pop
mov
inc
adc
jp
imul
out
fsub
cmps
movs
int3
bound
inc
adc
xchg
cmp
imul
mov
test
ror
fsubr
outs
ds
mov
call
mov
loopne
jb
adc
cs
into
and
push
out
mov
jmp
gs
add
adc
arpl
dec
sbb
je
dec
pop
inc
out
test
lock
xchg
aad
mov
rol
in
imul
sbb
sar
fstp
adc
(bad)
pusha
sbb
fidiv
and
call
stc
mov
pushf
div
mov
mov
lahf
hlt
in
mov
pop
cs
inc
std
and
shr
data16
fs
add
imul
out
mov
shl
sub
mov
popf
int
inc
fstp
fnstenv
inc
cs
repz
pop
pop
xlat
adc
stos
inc
fcom
in
mov
push
add
sbb
std
(bad)
into
ins
add
or
sbb
loope
inc
cmp
jb
cs
cdq
fdiv
int3
pushf
rcl
mov
jo
icebp
xchg
retf
xchg
retf
(bad)
fwait
or
push
loope
jb
sbb
mov
stos
stc
jnp
push
adc
sub
ins
movs
int3
xor
jb
inc
or
push
icebp
ins
or
lds
jle
mov
lods
rcl
cmp
iret
fsubr
mov
mov
mov
test
lahf
movs
test
imul
sbb
neg
add
sbb
mov
mov
xchg
dec
sbb
call
sbb
stc
test
dec
xor
stc
movs
lds
imul
lahf
dec
ins
loopne
push
add
jbe
push
cdq
cmc
mov
jmp
test
movs
fistp
push
sbb
ror
xchg
sahf
adc
pop
(bad)
popa
aas
jnp
aaa
cmp
push
and
sbb
push
push
adc
sub
and
jmp
out
mov
loope
bound
loop
push
sbb
out
mov
mov
mov
sub
push
enter
jb
inc
aaa
inc
in
rol
in
adc
rcr
outs
sbb
es
and
add
push
add
je
push
out
mov
push
push
pop
fwait
mov
repz
cmps
iret
scas
fistp
inc
in
clc
sub
inc
or
aad
inc
add
lods
sahf
xlat
mov
leave
or
gs
cld
push
inc
and
jg
outs
push
xor
xchg
shl
push
adc
jo
leave
(bad)
std
xchg
push
int3
lahf
(bad)
inc
repnz
add
jns
inc
sub
outs
call
scas
(bad)
sub
and
mov
fistp
jmp
inc
xchg
push
int3
lahf
fbld
cmc
jg
ret
sahf
leave
mov
out
call
(bad)
sti
mov
les
inc
adc
repnz
xchg
std
add
xchg
rcr
call
and
popa
test
cwde
ret
mov
mov
imul
fwait
arpl
in
mov
push
adc
dec
sbb
xchg
sbb
std
push
push
aaa
addr16
jns
sti
push
jmp
lahf
int3
mov
int3
arpl
jne
dec
xchg
jp
or
inc
add
icebp
mov
popf
jmp
fsubr
sbb
ins
xchg
ins
xor
inc
aas
call
or
push
fs
icebp
mov
loope
std
dec
fimul
div
inc
adc
jecxz
lds
(bad)
lods
test
cs
or
lahf
into
movs
iret
sub
sahf
fsub
scas
mov
pop
pop
icebp
(bad)
ficomp
sbb
jbe
sbb
out
fcomp
and
ror
jae
inc
pop
imul
sbb
mov
inc
aas
push
retf
sub
aad
cmps
iret
mov
enter
sub
aaa
adc
adc
mov
les
jle
cmp
jg
jmp
fs
sti
mov
sub
jo
pop
push
and
movs
cli
mov
arpl
dec
arpl
push
mov
rcr
jno
ins
adc
sub
or
sbb
and
sti
xchg
sti
call
pusha
test
mov
push
add
aad
pop
sbb
loopne
cmc
movs
fmul
mov
inc
std
mov
fs
pop
xchg
ins
scas
xor
push
mov
cmp
pop
dec
sbb
jnp
inc
adc
mov
mov
jo
inc
push
imul
sbb
push
sub
inc
adc
cmp
inc
sub
loop
adc
repz
mov
imul
pushf
mov
jbe
pusha
add
sbb
lods
in
or
sub
or
pop
mov
jb
sub
pop
inc
pop
pop
add
adc
push
push
pop
adc
mov
dec
repnz
bound
dec
out
mov
lahf
jge
ret
xor
mov
movs
popf
inc
rol
sub
outs
xor
pop
adc
leave
or
push
dec
or
dec
sbb
test
jecxz
aad
out
adc
dec
cmp
pop
cmp
test
rcr
bound
(bad)
mov
pushf
cmps
mov
inc
or
stc
cmp
dec
sub
push
pop
out
lahf
mov
add
sub
pop
jecxz
rcl
mov
cmovle
inc
mov
(bad)
jne
inc
inc
sub
ficomp
ins
adc
sbb
je
add
jbe
data16
pusha
cmp
inc
in
pop
adc
arpl
ins
mov
aam
imul
rcl
jp
cdq
jno
jb
repz
arpl
mov
loop
add
and
cmp
cmp
mov
inc
dec
adc
dec
push
adc
pop
in
pusha
retf
xor
jmp
sbb
pop
adc
sub
xchg
fimul
sahf
cmp
mov
call
or
add
dec
sub
nop
jns
jo
std
mov
ret
mov
adc
inc
jmp
mov
mov
jge
retf
xchg
(bad)
fs
pop
add
inc
push
imul
cdq
cmps
retf
ja
shl
cmps
mov
push
cmps
cmc
sub
inc
or
jmp
cmovb
rcr
sub
iret
das
ins
(bad)
xchg
in
sahf
into
jns
ja
scas
fisttp
inc
jmp
xor
xchg
ror
sbb
loope
mov
push
pop
out
and
and
lea
dec
les
popa
sbb
inc
and
mov
retf
lds
xlat
mov
xchg
out
(bad)
mov
push
in
mov
adc
cmp
fcomp
jle
(bad)
xchg
jmp
mov
cmp
pop
sub
movs
bound
jae
jns
jb
das
into
scas
fist
pusha
cmp
push
ds
add
dec
adc
push
and
push
sbb
mov
inc
out
lahf
shl
lods
stc
mov
pop
and
rol
lds
and
dec
fist
dec
aas
jl
test
mov
std
stos
jmp
aam
adc
test
movs
sar
push
sub
push
es
sub
nop
in
les
mov
and
cli
imul
push
dec
sbb
pop
pop
push
mov
adc
pop
das
and
ins
imul
jmp
and
popa
and
arpl
aaa
or
es
adc
je
add
sbb
inc
cli
cmps
lock
jns
mov
xor
jnp
dec
loope
ret
push
add
xchg
out
mov
xchg
int3
cmp
xchg
loop
jns
mov
inc
push
dec
mov
cmp
add
inc
stos
jmp
int
fdivp
mov
mov
mov
fwait
in
jg
jl
arpl
push
adc
or
inc
add
xchg
fstp
inc
cmp
retf
xor
pop
movs
mov
push
cdq
dec
in
mov
inc
test
daa
std
lods
(bad)
mov
imul
into
xchg
iret
ja
ja
xchg
xor
sub
mov
nop
fisubr
icebp
and
push
aad
pop
sbb
sub
jbe
sti
pop
pop
sbb
add
ins
sub
add
adc
sbb
ins
stos
mov
(bad)
xchg
rcl
scas
cmp
shl
push
dec
or
jge
int3
and
xor
fcom
leave
(bad)
fld
mov
or
or
aad
leave
mov
add
(bad)
ins
push
pop
inc
xor
pop
mov
adc
mov
repnz
cmps
ret
popf
stos
enter
or
test
scas
ins
iret
cmps
lds
xlat
mov
mov
pop
sub
sbb
mov
mov
inc
xchg
into
sahf
sti
jae
bound
jo
fs
(bad)
(bad)
mov
shl
jg
cmp
sahf
push
int3
mov
pop
or
jl
push
sbb
(bad)
jp
ins
push
jmp
enter
add
inc
fnsave
in
bound
pop
jmp
js
sub
callw
lahf
(bad)
(bad)
lahf
hlt
data16
add
xor
inc
(bad)
rcr
int3
repnz
adc
or
jge
inc
or
or
js
sbb
adc
add
leave
stos
mov
nop
aad
xor
shl
add
out
pop
and
xlat
cmps
icebp
xchg
mov
mov
repz
add
in
cwde
(bad)
xchg
jmp
inc
adc
push
jle
js
dec
loope
ds
pop
and
pop
inc
xor
(bad)
mov
dec
pop
aaa
arpl
jl
sub
pop
mov
sti
gs
sub
fstp
es
add
jb
inc
sbb
push
adc
pop
(bad)
mov
das
pop
pop
jbe
movs
jmp
mov
cmps
repz
xchg
xor
jp
icebp
xchg
lds
add
xchg
push
add
dec
stos
push
stc
mov
ret
test
icebp
sub
out
fcom
and
scas
mov
or
in
push
mov
pusha
mov
add
push
push
jge
call
inc
psraw
jmp
mov
data16
push
in
movs
lock
sub
mov
or
xchg
add
test
int3
dec
adc
sub
call
loope
test
pop
aam
xchg
xor
ins
pop
sbb
(bad)
and
or
es
addr16
nop
mov
jne
call
js
cmp
pop
idiv
mov
cmps
popa
or
retf
mov
(bad)
mov
ds
rcl
mov
sub
cld
lods
inc
adc
push
test
pop
out
mov
fcomp
sbb
nop
xchg
fdivr
and
cmps
xchg
ret
pop
or
push
out
pop
sbb
stos
imul
inc
mul
test
jno
sti
xor
iret
cmps
test
imul
push
fwait
ins
push
add
fimul
sub
mov
sub
rol
inc
push
pop
sbb
movs
into
jl
xor
mov
mov
cmc
movs
xchg
lds
pop
cmps
icebp
xor
aam
dec
aam
jle
xor
xchg
div
mov
rcl
push
leave
mov
jmp
mul
adc
mov
adc
ret
shl
sub
lahf
arpl
xor
in
add
ins
cmp
push
(bad)
mov
pop
ss
xchg
test
(bad)
and
mov
mov
xchg
inc
lock
shr
dec
retf
retf
lock
leave
adc
(bad)
xchg
test
outs
push
daa
jo
scas
xchg
fst
xchg
mov
dec
or
inc
scas
neg
rol
pop
mov
pop
push
inc
mov
cld
and
mov
ss
xor
mov
and
in
jnp
adc
fsub
test
ficom
into
mov
call
jb
lahf
mov
sahf
pushf
not
jb
lods
gs
mov
fistp
scas
(bad)
push
add
mov
ins
rcl
outs
sub
imul
mov
pop
sbb
xchg
cmp
jmp
sub
test
jne
in
xor
jb
cwde
dec
or
clc
mov
push
inc
leave
mov
clc
mov
cmp
jne
int
pop
out
inc
lar
mov
push
add
xchg
xchg
lahf
lds
arpl
mov
and
cmps
bound
ss
xchg
mov
sub
clc
scas
inc
add
movs
dec
adc
lahf
mov
and
cmps
jp
cli
mov
adc
mov
xor
out
push
add
cld
and
gs
pop
test
cs
out
sbb
jne
xor
mov
adc
in
sar
or
repnz
aad
cs
pushf
xchg
dec
sbb
push
pop
outs
xor
inc
pop
pop
inc
int
push
add
or
movs
mov
push
stos
out
ja
fwait
mov
sub
jmp
pop
out
mov
fiadd
stc
test
push
into
cmps
jne
stc
mov
cmps
int
icebp
push
add
mov
xor
popf
jno
iret
cwde
pushf
cmc
and
jmp
cwde
sti
pop
or
cmps
mov
or
sbb
and
sti
add
fstp
cmovbe
mov
cmovnp
test
adc
mov
call
push
int3
ss
add
in
add
add
dec
sbb
jle
add
cmps
ja
adc
lea
push
inc
movs
loopne
sbb
jge
popf
cwde
iret
sub
loop
inc
clc
fwait
mov
jno
cmovbe
mov
cwde
data16
dec
xlat
or
sub
scas
hlt
xchg
std
and
mov
cmp
cmp
mov
cmp
gs
jnp
test
rol
in
mov
js
jmp
lock
sbb
cmps
dec
adc
jo
ret
push
sti
pop
add
inc
test
ins
cmp
xor
inc
stc
mov
and
sub
jg
call
data16
outs
mov
jne
(bad)
sub
ror
stos
(bad)
jge
sbb
xchg
mov
outs
sub
or
mov
(bad)
sub
mov
pop
je
cmc
jl
repz
add
inc
out
mov
cwde
dec
add
idiv
jno
and
jmp
xchg
(bad)
pop
or
dec
pavgw
cmps
les
push
push
pop
adc
adc
mov
iret
and
stc
cmp
sub
dec
sbb
aas
addr16
mov
mov
pop
xor
scas
xchg
(bad)
cmp
xchg
mov
lods
popa
and
cmp
das
ret
xchg
xchg
adc
xchg
data16
dec
fidiv
pop
push
aad
mov
and
xchg
ins
cmp
xor
jne
mov
int3
scas
inc
adc
dec
mov
push
bswap
mov
adc
retf
and
mov
cmc
pop
adc
push
cmp
loop
push
test
loope
push
mov
cmps
aam
mov
test
add
test
add
bound
mov
xchg
fiadd
std
xchg
jbe
xor
jp
lock
ror
jmp
mov
jnp
call
or
stc
jae
hlt
mov
and
inc
jmp
ss
mov
daa
add
mov
sub
push
out
cmps
sahf
mov
popa
xor
cmps
cdq
lock
pusha
fstp
push
mov
ja
nop
xlat
(bad)
jb
push
push
in
scas
stc
jle
push
push
repnz
in
imul
jno
adc
cmp
data16
pop
cld
stos
scas
(bad)
pop
or
dec
mov
js
cmp
ret
ficomp
or
idiv
sbb
enter
xchg
lods
jb
sbb
sbb
jno
sbb
pop
pmulhw
mov
adc
bnd
add
cmps
(bad)
retf
xor
fisub
in
test
mov
shl
fcom
cli
mov
bound
xor
mul
jmp
ds
xchg
mov
movs
mov
dec
fidiv
cmp
in
(bad)
imul
add
mov
test
aas
push
aaa
ins
cmps
int
xor
cmps
mov
and
lahf
jno
sub
pmulhuw
mov
nop
stos
leave
push
add
pushf
les
inc
mov
inc
(bad)
idiv
call
inc
enter
jo
das
imul
mov
lods
(bad)
int3
push
sbb
jne
cmp
sub
xchg
ja
pop
pop
leave
cwde
mov
jb
in
and
scas
les
and
xchg
mov
inc
test
jg
cld
stos
mov
xor
out
pop
adc
push
push
inc
mov
cmps
lods
call
mov
add
enter
ins
and
lahf
sub
push
rol
cdq
ror
stos
cdq
enter
jge
xchg
push
ret
test
sbb
mov
and
xchg
mov
mov
out
mov
enter
add
cmp
mov
sub
jb
pop
dec
shr
mov
stc
call
inc
pop
push
push
test
jmp
inc
push
push
pop
cmp
mov
and
(bad)
movs
inc
push
add
mov
mov
rol
pop
push
sbb
adc
push
out
mov
mov
das
or
sbb
gs
mov
push
push
xchg
and
xchg
mov
dec
adc
fwait
mov
jle
repz
add
pop
mov
and
push
dec
sbb
inc
int
mov
inc
sub
push
rol
ror
and
cld
dec
and
push
div
sti
nop
imul
xchg
ficom
in
je
nop
js
xor
pushf
pop
jle
sbb
test
retf
inc
push
cmp
mov
outs
sub
inc
adc
xor
pavgb
jmp
adc
mov
in
mov
rol
xor
int3
jo
or
add
adc
js
pop
mov
xchg
pusha
or
mov
(bad)
cs
into
xchg
outs
add
push
adc
xlat
xchg
test
es
pop
mov
push
pop
add
int3
xor
dec
mov
nop
mov
(bad)
(bad)
out
cmps
push
or
dec
mov
pop
or
inc
call
cli
mov
(bad)
xor
mov
fcom
sbb
push
stos
ret
push
push
in
movs
call
xchg
lock
sbb
mov
push
jmp
push
add
daa
dec
xlat
mov
sub
bound
stos
add
lds
in
test
mov
lods
iret
sub
lods
inc
or
inc
cmps
loop
addr16
mov
cmp
mov
ins
xchg
(bad)
xor
nop
mov
xor
stos
popf
int3
pop
or
push
adc
mov
aas
imul
push
sbb
out
sub
lock
add
cwde
cmps
lock
mov
and
and
xchg
fsubr
or
into
ja
push
dec
fdiv
xchg
fistp
sti
nop
jae
cmp
in
sbb
je
pop
cmps
jecxz
sub
pop
lods
les
mov
inc
push
sbb
iret
movs
jg
adc
pusha
xchg
jl
add
sub
inc
mov
arpl
lahf
retf
aaa
jae
dec
or
cdq
pusha
xor
fnsavew
push
ror
sbb
or
mov
enter
cdq
mov
dec
and
pop
aam
xchg
fistp
cmc
sahf
fwait
clc
add
xchg
fcom
adc
mov
pop
cmps
out
aad
sbb
mov
inc
scas
not
jns
(bad)
pop
or
(bad)
leave
sahf
mov
cld
lahf
hlt
push
jne
lahf
dec
or
xchg
leave
or
mov
mov
jle
jmp
test
dec
push
(bad)
mov
stos
out
js
sbb
call
lods
loopne
push
int
aaa
out
mov
pop
adc
mov
cmp
xor
push
rcl
pop
ins
int3
scas
dec
sbb
xchg
(bad)
lahf
cmps
call
adc
aaa
adc
jmp
push
loopne
mov
dec
mov
mov
aam
xor
mov
out
scas
fwait
xlat
jnp
add
retf
adc
fst
out
popa
xor
dec
mov
push
jne
es
int
mov
dec
add
pop
int
xchg
(bad)
and
inc
test
and
mov
les
mov
push
pop
div
sbb
sti
add
rep
mov
adc
lods
lods
loopne
dec
sar
sbb
shl
adc
neg
cmp
les
mov
gs
ja
xchg
nop
aam
push
or
mov
xor
test
xor
mov
daa
and
in
dec
adc
dec
xchg
aad
sub
mov
ins
cmp
mov
mov
fs
mov
(bad)
mov
(bad)
fisubr
sub
stos
push
sbb
stos
imul
cmps
out
xor
mov
mov
adc
pop
lods
jmp
leave
lea
sbb
sub
push
lods
test
in
fwait
rcl
rcl
xor
push
cs
into
xchg
jb
daa
inc
clc
lods
mov
mov
icebp
cmps
mov
push
mov
jo
out
fdivr
mov
call
jo
pop
or
inc
ficom
lock
test
inc
add
push
mov
mov
adc
fnstenv
out
mov
and
or
fadd
sbb
xchg
outs
pop
add
stos
mov
cmp
rcr
mov
jae
sub
mov
xor
inc
(bad)
mov
stos
out
dec
mov
mov
push
or
int3
and
sti
dec
and
inc
repnz
daa
(bad)
pushf
xchg
call
loope
arpl
les
fistp
cmp
movs
mov
cmp
xchg
mov
pop
or
sub
lods
ja
sbb
mov
cld
stos
dec
or
push
loope
xchg
cli
pop
cmp
test
stc
inc
or
pop
rol
mov
sub
xchg
dec
(bad)
out
inc
rcl
sahf
popf
fstp
push
sbb
jb
hlt
arpl
sbb
stos
shl
fistp
lds
retf
cmp
push
rol
pop
enter
in
test
add
mov
fdiv
jae
idiv
outs
cld
xchg
mov
jo
in
jns
in
xchg
sbb
jne
repnz
xchg
popf
rcl
jno
push
adc
dec
fadd
push
xlat
xor
inc
iret
mov
pop
mov
scas
mov
(bad)
push
push
out
mov
je
std
cmp
ret
aas
push
ins
stos
enter
inc
test
lock
(bad)
pusha
(bad)
fisubr
inc
(bad)
nop
cdq
fsub
push
fistp
retf
test
sbb
xchg
rcr
sbb
stc
pop
xor
pop
loop
cdq
aad
sbb
mov
pop
or
cmp
pushf
stos
cld
dec
and
xchg
mov
pop
adc
imul
mov
cmp
jmp
adc
pop
mov
dec
sbb
arpl
in
add
xchg
sub
mov
push
or
push
mov
test
lea
je
aam
sbb
scas
mov
inc
push
(bad)
mov
sub
retf
push
push
test
mov
rcl
or
scas
cdq
enter
pop
rep
push
cmp
pop
lds
leave
lea
sbb
push
cmp
lds
je
in
daa
adc
mov
push
or
scas
mov
js
mul
rol
pop
sbb
in
or
pop
or
call
popa
sbb
cmps
popa
and
bound
cmp
stos
cmps
jecxz
inc
scas
idiv
and
sub
iret
mov
cmps
mov
push
scas
not
(bad)
xchg
rol
test
inc
stos
shl
addr16
push
or
mov
push
pop
fmul
push
adc
pop
(bad)
popf
xchg
dec
imul
aas
pop
sbb
pop
out
pusha
or
retf
in
mov
js
pop
sbb
scas
mov
sub
jmp
push
fisttp
retf
cmp
mov
cmps
rcl
test
out
mov
mov
enter
mov
les
in
test
(bad)
jmp
test
dec
stos
icebp
dec
and
pop
cmps
bnd
idiv
in
test
cld
xchg
rol
movs
call
stc
call
retf
(bad)
sub
stos
xchg
shl
aad
test
jns
(bad)
pushf
inc
sub
xor
(bad)
call
mov
lds
call
test
out
outs
cmc
mov
(bad)
imul
cmps
imul
jg
fwait
test
bound
push
inc
in
mov
dec
int
mov
push
or
or
fimul
mov
movs
(bad)
data16
cmps
jns
imul
out
ja
xor
mov
mov
add
cmps
repz
out
jb
push
rcl
jne
lahf
push
movs
arpl
or
mov
cmp
cli
pop
sbb
push
mov
xchg
lods
cli
pop
sbb
mov
sar
les
rcl
aam
gs
mov
cmc
addr16
mov
in
mov
test
inc
add
push
cld
lods
xor
pop
(bad)
mov
push
cmp
jge
mov
push
mov
data16
xchg
bound
mul
mov
push
rol
mov
fcomp
xor
popf
push
aas
sbb
in
push
sbb
push
(bad)
mov
xchg
and
loope
and
stc
test
ficom
jmp
push
push
ins
not
adc
push
rcl
inc
hlt
mov
sbb
popa
xor
jmp
mov
push
pop
or
jo
call
cld
test
call
fild
jp
mov
jg
test
pop
ss
stos
sahf
retf
ror
dec
rol
add
ret
dec
adc
jns
retf
lds
lahf
fistp
push
push
retf
pushf
inc
sub
stos
out
pop
fidiv
(bad)
mov
mov
push
adc
scas
push
add
jge
popf
sahf
les
or
fs
jle
test
in
or
mov
cmp
jmp
adc
sti
nop
test
and
pushf
movs
in
or
loop
and
mov
add
out
popa
retf
xchg
xor
mov
sub
pop
sbb
lods
mov
ins
sub
mov
es
fisttp
xchg
ins
pop
cs
mov
inc
cld
movs
xchg
inc
add
jne
adc
mov
push
leave
stos
lahf
retf
add
in
daa
jg
xchg
jnp
hlt
movs
push
out
sahf
leave
jg
add
lock
ds
rol
ret
icebp
mov
es
scas
xchg
or
mov
and
test
push
dec
movs
in
dec
adc
push
mov
push
pop
sub
retf
push
add
pusha
(bad)
mov
int
jge
and
scas
jmp
in
popa
ss
(bad)
cs
xchg
xchg
dec
sbb
xchg
rcr
ss
out
es
sar
pop
fs
push
push
inc
fistp
mul
push
adc
dec
imul
mov
mov
cmp
pop
int
xchg
les
je
(bad)
mov
je
adc
in
mov
in
and
xchg
inc
add
popa
cmps
loop
push
adc
or
mov
push
push
clc
mov
mov
inc
add
sbb
mov
and
lahf
mov
pop
xor
jns
icebp
sub
nop
fst
rcl
xchg
jmp
retf
pcmpgtb
js
out
dec
adc
jge
pop
lds
test
and
repnz
std
pop
ds
mov
ror
inc
push
cmp
test
rcr
sub
cli
sub
iret
inc
pop
sbb
mov
sbb
lock
data16
sub
mov
arpl
mov
fisttp
adc
ret
push
pop
stos
out
push
mov
inc
and
push
mov
cmp
sbb
sbb
sbb
jo
sahf
cmps
lds
cmp
mov
jbe
xor
xchg
pushf
aad
test
lods
mov
inc
and
mov
ret
xor
aam
xor
push
mov
sub
mov
jmp
nop
les
pop
adc
dec
mov
popa
int
popf
hlt
push
add
push
fist
aaa
push
out
mov
outs
aaa
push
adc
test
cmp
mov
mov
mov
fadd
add
scas
jmp
sub
cmps
js
es
test
jmp
daa
sti
mov
ret
sub
xchg
test
scas
mov
jp
in
cmps
repnz
pop
cmp
sbb
jae
popf
gs
pop
mov
pusha
lock
shl
cmc
mov
cmc
mov
cmp
and
rcl
retf
mov
ret
xchg
sbb
ret
add
cdq
mov
and
data16
mov
mul
add
stc
jae
add
test
mov
and
mov
hlt
ss
mov
jge
and
mov
cmc
push
bswap
mov
sbb
in
adc
sub
sti
mov
daa
in
xchg
mov
lock
mov
sar
push
retf
(bad)
or
test
xor
sahf
mov
sub
(bad)
and
mov
fs
and
mov
fistp
gs
stos
aaa
cmp
inc
xor
sub
std
into
dec
ins
jae
icebp
xchg
fidiv
mov
jge
aam
loopne
lock
inc
push
arpl
lods
xchg
test
lea
dec
or
neg
fnsave
lock
mov
fs
dec
daa
clc
in
clc
xor
(bad)
pop
cmp
mov
push
(bad)
bound
and
jmp
and
and
cmp
ror
jl
and
pop
bound
mov
sub
xchg
fwait
rcl
pop
sbb
sbb
retf
inc
or
ins
adc
pushf
loopne
outs
dec
aas
dec
dec
aad
inc
popa
jb
pop
sbb
adc
out
pusha
lea
pusha
scas
std
sub
(bad)
into
and
fldcw
pop
std
sysenter
mov
lock
mov
stos
data16
inc
jl
and
sbb
mov
mov
loopne
cmps
jno
mov
fidivr
stc
mov
sahf
dec
call
cmc
mov
lahf
ins
pop
mov
shl
sahf
inc
dec
xlat
fimul
lods
ins
and
lods
out
and
mov
nop
xor
cdq
fimul
loopne
movs
cmp
or
sbb
or
mov
sbb
bound
mov
sti
aaa
mov
dec
adc
xchg
xchg
outs
clc
mov
enter
push
mov
push
fcomi
out
xchg
and
cmp
out
iret
push
sbb
je
mov
mov
mov
loop
pop
dec
add
std
les
imul
leave
lea
pop
(bad)
push
sbb
cld
xor
arpl
mov
out
cwde
in
daa
rol
xchg
lds
fcomp
mov
add
jbe
sahf
int3
fwait
pop
fldcw
clc
icebp
ret
dec
bound
jne
outs
shl
lods
fnstcw
int
sub
sub
jns
pop
daa
push
push
sub
retf
ds
inc
das
fnstsw
adc
imul
push
fst
(bad)
fs
ror
popa
push
mov
test
cmc
inc
aam
add
inc
lahf
inc
xchg
sbb
xchg
sahf
push
out
sub
cmp
test
mov
lock
inc
test
ins
and
hlt
imul
pop
in
push
and
xor
aad
fimul
xchg
adc
dec
jg
leave
fdiv
mov
dec
je
ins
lods
sbb
xchg
xchg
inc
fcom
(bad)
xlat
jmp
ror
dec
xchg
adc
movs
mov
call
dec
fdiv
std
and
lock
adc
jo
jmp
push
jno
dec
popa
fbstp
mov
scas
bound
push
push
retf
fcomp
push
xchg
pop
or
loopne
leave
push
and
cdq
or
aad
dec
aaa
popf
mov
pop
mul
dec
pushf
jnp
mov
mul
int3
(bad)
call
xor
arpl
aas
aas
fwait
gs
push
dec
cmp
adc
rol
arpl
or
inc
jge
fs
das
lock
mov
popf
sub
and
movs
je
xor
cmp
shl
loopne
stos
pop
test
and
sbb
int3
(bad)
fimul
inc
pop
imul
scas
outs
sub
(bad)
scas
push
imul
add
inc
inc
xchg
xchg
out
std
pop
(bad)
xlat
lea
or
fistp
jne
sti
je
jmp
arpl
and
xor
sbb
sti
in
add
imul
mov
fist
les
push
ret
add
int
aam
jns
aad
xor
js
push
mov
nop
cmp
adc
jp
dec
(bad)
out
mov
cld
gs
(bad)
sti
jae
cwde
outs
lds
mov
div
and
cmp
aaa
int3
sub
call
xor
adc
cld
pop
mov
inc
adc
dec
bnd
inc
rcl
push
in
xor
es
fstp
mov
cmp
div
ret
out
mov
out
loopne
scas
loop
sbb
inc
or
cwde
mov
rol
adc
fdiv
add
add
dec
lock
jecxz
repnz
into
jne
inc
mov
gs
or
sub
and
cwde
movs
xchg
je
outs
mov
dec
mov
mov
adc
enter
ror
es
mov
push
dec
xchg
adc
loope
xchg
aaa
push
push
pop
xor
add
xlat
mov
and
int3
cmp
ins
(bad)
push
add
movs
pop
cmp
ror
dec
int
nop
shl
add
fs
jmp
or
mov
inc
xchg
pop
pop
call
mov
sub
sub
jbe
and
inc
add
lods
outs
jno
inc
ins
fsubrp
cmps
jae
jg
stc
and
adc
pop
shr
mov
outs
xchg
out
pmuludq
ja
inc
lea
mul
add
ins
ret
add
dec
pop
push
cdq
xor
push
xlat
bound
mov
out
mov
push
cmp
aaa
test
mov
stc
test
add
in
or
jb
adc
push
pusha
jmp
pop
std
adc
scas
je
mul
(bad)
sbb
fwait
push
or
push
not
mov
test
adc
lods
scas
add
mov
pop
into
and
(bad)
mov
in
mov
nop
dec
fstp
sti
jae
mov
nop
inc
adc
add
cs
les
inc
ins
xchg
sub
outs
or
arpl
sub
nop
fst
cmc
adc
xor
test
cmps
mov
inc
sbb
xchg
inc
fs
in
pusha
(bad)
sar
jl
cmps
push
inc
lahf
int3
sub
aam
test
mov
pop
js
push
in
jb
jecxz
or
and
out
rol
dec
div
ds
and
bound
xlat
stc
push
sar
and
fs
mov
sub
xor
jbe
cmp
js
loopne
xchg
and
outs
add
fadd
pop
dec
jmp
mov
xchg
(bad)
pop
ins
fst
sub
mov
jno
in
ins
ins
jmp
dec
repz
and
or
sub
out
ret
loope
ds
ins
icebp
rcl
pushf
or
fcmovnb
dec
push
dec
push
clc
cmp
test
mov
lods
push
or
shl
xlat
sti
pop
xchg
fs
mov
cmps
add
ja
inc
dec
mov
ficom
xor
bound
fcomp
hlt
sub
fld
and
pusha
enter
mov
cmc
cmp
in
icebp
fwait
xchg
scas
sbb
mov
push
(bad)
jmp
mov
pop
sub
and
mov
mov
shl
jne
iret
call
nop
push
pop
fmulp
adc
call
or
pop
adc
test
test
popf
icebp
inc
pop
mov
cs
jge
aas
lods
scas
push
fistp
jl
pop
add
ss
xor
jp
sub
xchg
mov
and
int3
mov
stos
adc
push
nop
(bad)
pop
sbb
pop
push
out
xchg
dec
xchg
call
call
push
int
sbb
push
repz
mov
in
cmps
(bad)
aam
jnp
inc
cmp
mov
out
or
ret
in
mov
mov
stos
jbe
mov
adc
pusha
inc
dec
sub
cwde
aad
aam
shl
call
xchg
pop
push
xor
jne
cli
xchg
in
jnp
test
xor
retf
(bad)
lods
cmp
lods
adc
mov
clc
add
fcomp
outs
xor
shl
into
pop
and
(bad)
cs
or
test
dec
jmp
nop
add
dec
ficom
inc
movs
daa
jno
pop
gs
ret
add
(bad)
adc
jp
and
mov
into
jp
fiadd
adc
mov
(bad)
mov
cmp
fidiv
jle
dec
or
jo
repnz
mov
push
xor
xlat
pop
push
sbb
in
add
pushf
and
imul
sub
adc
sbb
pop
jmp
cmp
fsub
int
sub
cdq
data16
xchg
scas
(bad)
pop
cld
mov
out
adc
sbb
xor
inc
jmp
jmp
scas
pop
retf
mov
and
repz
xchg
(bad)
jecxz
pop
jns
das
push
inc
outs
push
sar
jno
(bad)
mov
fbld
jmp
ror
imul
mov
fistp
mov
sub
dec
inc
mov
ror
scas
mov
pop
cli
in
enter
retf
ins
pop
inc
mov
hlt
test
mov
clc
adc
xchg
cld
mov
bound
fnstsw
fsubr
xor
xor
pop
fild
ret
retf
icebp
sbb
jmp
repz
jns
and
hlt
xchg
push
cmp
push
pop
jmp
loopne
sbb
inc
mov
push
sub
loope
mov
adc
stos
scas
mov
cs
sub
xor
jnp
pop
or
mov
sub
xchg
std
cs
or
mov
cwde
xchg
(bad)
sti
mov
mov
xor
ret
add
cmps
jnp
(bad)
(bad)
movs
inc
jmp
mov
rol
cmps
sub
jge
pop
and
xor
iret
push
in
mov
mov
or
scas
call
repz
cmovae
mov
mov
popa
in
mov
mov
mov
outs
pop
jge
jae
lods
mov
gs
jmp
jecxz
cmp
icebp
xor
fs
sub
pop
addr16
or
adc
sbb
xchg
popf
xchg
sbb
data16
push
xchg
jb
jbe
jmp
or
data16
cdq
lds
popa
jl
iret
pop
xchg
cli
mov
cmp
lahf
(bad)
lahf
lods
pop
jnp
inc
popa
push
push
aam
sbb
xor
adc
xchg
adc
dec
add
mov
lahf
pop
int
jbe
lock
dec
and
push
cmp
xor
lea
fdiv
dec
iret
inc
mov
mov
mov
nop
iret
fsubr
or
mov
out
dec
inc
aas
sahf
push
mov
inc
xchg
pop
adc
nop
mov
or
or
adc
mov
lds
mov
sti
rcl
cmps
pop
mov
outs
push
cmp
js
xchg
imul
adc
sbb
(bad)
loop
cwde
scas
call
int3
pop
mov
sbb
xor
(bad)
icebp
and
push
push
lock
loopne
xchg
mov
sub
jne
test
inc
sbb
push
lock
rcr
sahf
jb
sub
fcom
loope
aad
dec
in
push
fs
das
cmps
cmp
push
not
leave
imul
test
jmp
out
push
lods
leave
addr16
pop
sti
out
(bad)
mov
xor
sub
inc
xor
shl
in
imul
fld
test
fisub
out
sub
rol
ja
shl
xchg
mov
xor
into
dec
and
and
daa
and
ds
(bad)
movups
inc
aas
ins
xor
je
mov
or
inc
mov
pop
popa
cmp
jns
(bad)
fwait
lods
test
loop
iret
sti
cmp
dec
pop
icebp
call
cmp
add
scas
adc
ret
popa
mov
push
jmp
dec
sub
or
daa
outs
or
in
(bad)
cmp
sub
and
imul
add
je
iret
add
pushf
dec
test
mov
std
test
nop
leave
ffreep
lock
popf
daa
mov
inc
xchg
push
or
adc
xor
ficomp
cs
ja
mov
mov
xor
div
add
mov
loop
mov
and
pop
pop
jp
ficom
pop
(bad)
sub
cmp
in
xchg
mov
mov
pop
xchg
or
jno
mov
(bad)
loopne
std
cli
daa
mov
and
rcr
loopne
out
mov
mov
mov
adc
and
gs
xchg
je
js
sbb
xchg
repz
iret
arpl
xchg
(bad)
arpl
mov
mov
les
pop
ins
ds
dec
in
sub
add
push
ja
not
and
icebp
(bad)
fcmovne
in
jo
fdivr
(bad)
push
imul
dec
les
or
xor
dec
leave
xchg
fisttp
xor
xchg
dec
adc
ret
retf
in
xchg
mov
xor
push
cmp
jmp
loopne
mov
pop
cmp
ficom
or
add
sbb
sbb
imul
push
xchg
out
mov
rol
or
outs
xchg
mov
shl
int3
in
sbb
and
and
dec
arpl
pop
add
shl
pop
fcomip
lahf
and
push
fcomip
or
dec
pop
mov
scas
je
push
xchg
mov
inc
fisttp
int
mov
inc
into
jns
xchg
fnstcw
imul
out
push
jnp
sbb
icebp
iret
and
hlt
ret
fild
jae
test
data16
and
test
pop
(bad)
(bad)
daa
push
pop
and
jmp
pop
dec
fidivr
adc
pop
mov
pop
xchg
cmp
pop
mov
sub
fiadd
xchg
pop
mov
data16
vpsrlq
or
rol
xor
sbb
into
scas
lods
(bad)
mov
arpl
outs
fcom
xor
sub
popa
adc
leave
in
mov
sahf
mov
test
pop
call
lds
dec
push
mov
pop
call
push
or
not
sbb
xchg
mov
or
sub
sub
(bad)
outs
imul
(bad)
and
inc
jne
cmp
and
jecxz
and
adc
jmp
(bad)
neg
fisttp
sbb
pop
loope
inc
stc
mov
stos
popa
jno
arpl
cmp
scas
xor
cmp
in
pop
and
dec
loop
shr
into
leave
shl
dec
out
les
inc
in
add
xchg
pop
jbe
dec
or
jl
dec
clc
inc
aam
je
inc
and
and
sub
sbb
ds
xlat
cmps
gs
out
test
ds
jge
push
scas
jne
mov
pop
hlt
lods
repnz
sub
daa
pop
mov
arpl
(bad)
xchg
cmp
mov
jmp
test
jbe
(bad)
stc
repz
inc
iret
mov
cdq
sbb
out
xchg
bound
jno
sbb
push
or
cld
daa
in
push
and
sbb
imul
and
fdivr
jg
push
lock
mov
arpl
gs
icebp
pop
std
aad
push
xchg
cld
nop
push
mov
xchg
or
jno
ret
sbb
loopne
int
fisubr
jmp
mov
push
sbb
loop
ins
cmps
out
pop
mov
jb
es
in
sub
sub
mov
mov
push
es
cmc
lods
lea
fdivr
in
mov
addr16
outs
sub
test
retf
dec
aaa
xor
mov
push
or
out
cmp
adc
jp
mov
inc
inc
test
call
sub
pusha
aaa
sbb
neg
js
push
mov
(bad)
and
push
test
hlt
xor
retf
rcr
je
(bad)
sub
xor
add
out
mov
int
popa
out
and
imul
dec
fisttp
enter
cmp
push
or
jno
sub
fadd
sbb
dec
dec
push
loopne
nop
movs
imul
or
and
in
dec
push
fisttp
les
fild
push
in
aad
out
in
repnz
mov
pop
mov
pusha
lods
enter
int3
mov
in
jmp
cmps
fs
mov
int3
enter
outs
jle
repnz
xchg
popa
xchg
es
sbb
adc
outs
stos
inc
pushf
push
ja
imul
cli
dec
fidiv
jnp
mov
loope
test
push
jmp
aad
jbe
adc
lods
pop
adc
iret
pop
push
inc
and
sub
aas
sbb
dec
cwde
add
enter
adc
scas
imul
cmp
push
push
mov
mov
imul
pusha
xor
xchg
mov
mov
add
push
xor
loopne
or
push
xchg
mov
jo
dec
(bad)
jns
movs
adc
(bad)
sub
xchg
and
rol
adc
retf
mov
mov
mov
push
frstor
out
rcr
sti
rol
mov
aas
jmp
mov
sbb
sub
mov
sbb
pop
jge
nop
in
push
aam
inc
loope
mov
fidiv
push
jae
add
push
cmc
(bad)
ss
pop
inc
or
mov
cmp
mov
mov
stos
sbb
xchg
sub
sbb
in
sub
test
sti
lock
xchg
fsubp
mov
int
stc
daa
stc
daa
adc
retf
mov
mov
or
pop
adc
aam
mov
adc
and
sub
call
sub
xlat
movs
add
mov
sub
test
and
js
mov
xor
(bad)
xor
sti
mov
sbb
cmps
inc
and
mov
movs
add
add
pop
shl
cmp
stos
mov
(bad)
jne
mov
inc
mov
xchg
aaa
fisttp
icebp
or
ds
cdq
jne
xchg
push
dec
in
mov
int
push
imul
dec
daa
sbb
dec
push
sub
out
and
xor
mov
cdq
leave
cmp
call
mov
and
xor
scas
mov
xor
mov
sub
or
test
dec
sbb
dec
dec
int3
movs
retf
imul
cwde
leave
jmp
cli
ss
stc
push
fcmovb
pop
or
in
mov
sbb
pushf
iret
daa
rcr
in
xchg
mov
pop
repnz
in
aad
jo
mov
xor
std
pop
or
cs
inc
and
mov
movs
fidiv
mov
xchg
test
dec
or
movs
inc
not
sbb
push
jb
mov
jmp
out
mov
call
inc
xchg
sub
icebp
mov
mov
lahf
dec
aad
mov
xchg
std
int
(bad)
jle
lods
mov
retf
mov
adc
mov
xor
shr
retf
ret
mov
not
and
jge
rsm
movs
jg
pop
imul
jge
or
add
mov
xor
test
(bad)
push
xor
jnp
shr
xor
rcl
inc
sub
cmp
xchg
outs
rcl
adc
and
movs
dec
dec
fldenv
dec
mov
cmc
cli
or
lds
mov
sar
and
lods
dec
lahf
js
jmp
sbb
call
push
jg
inc
add
sbb
or
(bad)
jle
pop
clc
mov
sar
pop
mov
loopne
fistp
mov
xor
test
xor
movs
daa
loope
sub
or
inc
inc
dec
jns
dec
add
xchg
push
add
dec
mov
mov
fbstp
pop
in
or
pop
stos
ins
mov
ds
sbb
sub
push
sar
pop
adc
jmp
popa
xlat
outs
leave
pop
lods
(bad)
das
sbb
inc
(bad)
push
aad
leave
rol
sti
pop
enter
stc
or
mov
(bad)
and
sub
push
les
daa
or
scas
mov
jne
inc
mov
dec
scas
aam
stc
xor
adc
push
cld
das
adc
jmp
stc
push
xor
cmp
sbb
dec
test
out
dec
fist
xor
ret
xor
rcr
ss
pop
xor
sbb
sub
es
lea
inc
fadd
xor
fdiv
pop
rcl
leave
jnp
xor
push
mov
repnz
(bad)
cmp
pop
sar
call
xchg
popa
scas
inc
mov
fbstp
icebp
pop
mov
mov
lock
sbb
icebp
sub
imul
movaps
in
pop
adc
stc
sub
or
pop
rcr
mov
inc
or
in
das
sbb
pop
fidivr
cmc
push
sbb
sbb
daa
rcr
adc
mov
out
push
shr
push
retf
test
imul
dec
rcl
dec
aas
or
in
sub
icebp
jbe
jg
xchg
je
mov
mov
aad
mov
jno
xchg
sahf
call
std
or
das
es
or
pop
mov
mov
es
(bad)
push
fisubr
add
pop
mov
and
xor
jbe
cmp
or
sbb
sub
dec
fnstsw
out
imul
ins
fld
call
(bad)
cld
pop
mov
test
xchg
push
int
pop
iret
cmp
ret
or
cmp
sbb
shl
push
call
call
mov
inc
mov
mov
jmp
scas
push
mov
addr16
or
pop
stos
ins
test
and
shl
adc
sub
(bad)
push
mov
stos
lea
push
xchg
xor
icebp
or
push
xchg
cwde
arpl
cmp
stos
arpl
je
sahf
jl
dec
pop
or
push
ss
test
xchg
jne
cmp
or
pop
fistp
imul
loopne
les
div
mov
xchg
mov
mov
mov
dec
aad
repnz
sub
lahf
je
or
sub
ja
jb
and
outs
xchg
inc
mov
mov
push
dec
test
cmp
fs
cmp
and
sub
ins
scas
fwait
jle
pushf
xchg
jge
cmp
into
cmp
mov
(bad)
outs
mov
and
sub
aas
adc
fldcw
xchg
pusha
mov
xchg
xchg
lahf
jge
inc
rcl
mov
mov
fldenv
jb
pop
icebp
or
push
sar
clc
pop
hlt
push
mov
lods
jge
xor
push
retf
daa
shl
adc
xchg
inc
(bad)
or
dec
mov
ds
mov
imul
popa
(bad)
add
in
push
cli
xor
dec
test
shl
push
sbb
adc
call
mov
loop
xchg
mov
sbb
dec
rcl
adc
clc
and
pop
test
sbb
dec
fcomp
sub
not
imul
lea
arpl
daa
call
inc
stos
ja
pushf
cdq
inc
xor
jmp
jne
push
adc
or
cmp
sub
out
je
cmp
dec
mov
cmp
adc
mov
mov
(bad)
dec
pop
loop
out
mov
in
push
cmp
dec
int3
pop
mov
popf
lods
ficom
ins
mov
fwait
jae
mov
in
sub
and
sub
sbb
sbb
add
shr
loop
les
xchg
jae
ja
xchg
xchg
inc
mov
fistp
adc
mov
repnz
shl
add
(bad)
push
mov
or
daa
pop
adc
dec
mov
rcl
ins
mov
push
sti
es
shr
adc
xor
mov
test
scas
jno
cwde
xchg
inc
scas
inc
mov
test
cmc
inc
cmps
mov
inc
mov
dec
mov
mov
test
mov
popf
jns
and
cld
push
adc
out
ret
mov
cmp
loopne
loope
retf
dec
push
push
or
int
in
test
jns
test
xchg
lea
push
jl
push
cmp
pop
icebp
xchg
jp
xor
ret
pusha
cmps
stos
jae
nop
test
add
jbe
jge
add
pop
mov
int
stos
push
mov
xor
dec
test
aas
int3
inc
xor
mov
addr16
add
xor
pop
out
xor
push
cmps
jns
mov
sub
aaa
out
sub
or
aas
or
jne
xor
in
aam
leave
sahf
xor
jg
jge
jns
(bad)
mov
sar
in
xor
inc
lods
outs
mov
sub
cmp
push
and
add
ud2
sbb
jo
mov
mov
popf
jae
lods
jb
jnp
and
or
aas
fnstsw
push
sti
sub
or
dec
into
and
or
xchg
cdq
(bad)
jle
lods
jl
xchg
je
push
mov
cmc
dec
xchg
xchg
xchg
outs
aad
rol
jle
sub
add
icebp
movs
mov
xor
jp
cmp
cwde
jl
ins
mov
pop
pop
call
lods
push
cmp
xor
cli
and
std
cmp
or
pop
loope
add
push
or
push
int
lods
inc
mov
or
push
mov
mov
and
pop
movs
mov
xlat
pop
mov
push
test
ins
test
scas
mov
arpl
jecxz
cmp
adc
xchg
xchg
jbe
dec
mov
(bad)
sbb
sub
mov
fist
and
stos
dec
mov
enter
mov
outs
lea
fnstcw
and
int
shl
add
pop
lea
clc
push
lods
jae
ja
ja
xor
push
jmp
cdq
ja
jo
fwait
xchg
push
jnp
and
iret
sub
push
scas
(bad)
pushf
jnp
sub
or
cld
mov
dec
xor
cmps
imul
push
mov
ins
mov
les
jl
das
cli
and
das
out
outs
cmps
xchg
arpl
dec
(bad)
int3
push
(bad)
xor
daa
push
cld
dec
mov
mov
imul
ins
aam
mov
jae
jle
cdq
popf
inc
mov
pop
jmp
repz
xchg
sub
test
push
push
call
xchg
imul
call
mov
xchg
je
pusha
iret
and
shufps
and
dec
cmps
jae
or
cs
leave
sub
pop
(bad)
push
mov
mov
fiadd
data16
jne
cmp
aas
out
sti
pop
sbb
push
cmps
cdq
pushf
push
pop
sub
loopne
add
cmp
or
sub
add
pop
mov
ficom
jbe
push
mov
and
add
push
leave
pop
mov
mov
mov
adc
pushf
popa
ror
mov
jg
in
mov
xchg
lds
jge
pop
outs
stos
outs
pop
sub
sbb
cmp
lds
leave
xor
push
lods
mov
xor
jp
pushf
nop
jb
xchg
cwde
jo
add
jmp
imul
sbb
xor
cld
pop
lods
lods
imul
xor
dec
mov
add
loope
out
scas
dec
mov
call
push
mov
push
cmps
jnp
xchg
inc
enter
mov
mov
add
and
shl
(bad)
sbb
lock
jmp
xchg
jle
adc
mov
sub
mov
xchg
mov
test
test
repnz
shr
add
adc
inc
fisttp
push
mov
test
and
sub
dec
xor
adc
and
loop
retf
ss
mov
aaa
out
pop
shl
push
add
push
movs
test
xchg
cs
cs
xchg
or
mov
add
repz
leave
add
inc
mov
call
mov
inc
cmps
out
pop
test
icebp
dec
mov
mov
pop
xchg
out
and
les
pop
fnstsw
call
jb
add
in
jle
inc
fidivr
test
mov
mov
mov
(bad)
ss
or
ja
dec
mov
jge
xchg
js
movs
imul
sub
dec
fild
jmp
enter
outs
adc
push
xor
mov
mov
call
jmp
jnp
jnp
ds
inc
jecxz
clc
sahf
fdiv
or
push
shl
sbb
loopne
into
das
in
pushf
outs
into
sub
push
mov
imul
int3
push
es
sub
add
pop
cdq
mov
movs
dec
nop
dec
xchg
sar
cmp
adc
and
out
or
leave
sub
push
rcr
cwde
dec
aad
mov
jns
jne
xor
out
(bad)
xor
and
or
dec
stos
inc
mov
into
adc
es
push
loop
cmps
jne
repz
sub
cmp
mov
and
ret
lds
fst
mov
data16
add
push
lds
pop
pop
adc
and
outs
loop
leave
cmp
jle
dec
mov
daa
stc
sub
div
xor
sbb
or
outs
enter
out
and
jbe
je
sub
in
int3
cmp
sbb
sub
xor
add
jle
das
jmp
mov
cmp
mul
xor
push
scas
adc
dec
(bad)
cmp
pop
fcomp
jns
mov
movs
lea
dec
loop
(bad)
sub
ja
sub
mul
push
mov
ficom
in
pop
sbb
adc
pop
adc
sbb
pop
fsub
in
mov
call
fwait
dec
mov
mov
inc
into
pop
mov
call
add
xor
les
cmc
pop
xchg
inc
scas
arpl
fadd
push
or
mov
fs
and
xchg
inc
cmps
cdq
rcr
pushf
ins
xchg
out
and
popf
inc
mov
int
adc
popa
fdiv
adc
xor
cmp
int3
ss
push
and
inc
test
shr
sti
cmp
adc
and
or
in
adc
sbb
pop
shl
or
paddsb
cwde
in
dec
mov
test
xlat
ins
fild
test
pusha
stos
bound
xor
push
mov
nop
jno
in
sub
sub
push
xchg
cld
pop
scas
outs
fimul
jbe
jbe
ss
push
mov
mov
(bad)
push
mov
dec
mov
xor
loop
pop
in
fwait
mov
jmp
lahf
js
popf
test
or
dec
mov
sbb
jmp
add
shl
out
xchg
pusha
adc
aaa
loope
mov
ret
dec
fsubr
mov
leave
push
leave
sub
and
sub
sbb
mov
imul
popa
rcr
add
xor
dec
(bad)
jb
xor
jmp
sbb
pop
out
jb
(bad)
imul
fnsave
sbb
test
ss
aad
mov
push
sub
push
sbb
adc
adc
ss
pop
and
adc
xor
push
sti
xor
adc
dec
mov
lock
and
inc
std
dec
cld
movs
mov
mov
jne
mov
inc
aam
call
or
pop
aad
ror
add
pusha
cmp
imul
pop
adc
dec
and
(bad)
fs
shl
cld
and
sub
dec
sbb
cs
out
les
stc
nop
mov
xchg
jns
daa
into
or
push
add
adc
retf
pop
scas
xchg
dec
mov
jecxz
sar
and
mov
mov
fistp
pop
mov
mov
mov
push
std
pop
mov
ins
nop
fcomp
xchg
xor
cmp
out
xor
outs
movs
jo
ja
sub
or
cmp
nop
jb
js
push
lods
mov
(bad)
cmp
pop
mov
cmp
xor
out
dec
cmp
push
cmc
push
scas
ins
mov
inc
rcl
inc
mov
(bad)
and
sub
(bad)
cmp
cmp
pushf
jbe
rcl
jge
imul
fisubr
mov
or
add
fs
fldcw
cmps
popf
bound
adc
call
push
leave
push
add
int
clc
aaa
sbb
dec
mov
mov
xor
outs
cld
pop
scas
mov
cmp
mov
dec
mov
ret
dec
fmul
(bad)
jle
add
ins
stos
inc
mov
push
ret
loopne
out
repz
push
dec
or
xor
(bad)
xor
lds
rcr
fmul
repz
jne
mov
call
cdq
outs
retf
or
dec
mov
sti
sub
push
add
fbld
repz
jmp
cmp
pop
mov
in
jns
arpl
dec
jmp
sbb
out
aaa
cmc
dec
mov
cmps
mov
aam
hlt
inc
shl
xor
clc
es
mov
fwait
addr16
ret
xor
add
and
push
or
call
jl
sahf
dec
add
sub
cmp
daa
push
les
xor
jecxz
sti
dec
fsubr
rol
cmps
cmps
int
movs
jnp
pop
imul
sbb
sbb
jg
stc
cmp
dec
lods
lahf
xchg
inc
stos
stos
jo
xor
cmp
and
dec
or
rcr
(bad)
jbe
nop
das
pop
ret
pop
aad
lock
shr
hlt
pop
or
pop
add
pmaddwd
sbb
pop
mov
cmp
cmp
outs
mov
std
xor
stc
cs
pop
add
aaa
call
loopne
mov
(bad)
daa
cmp
das
lock
cmp
gs
xor
xor
dec
(bad)
cmp
bound
add
sub
push
repnz
pop
xchg
cmp
data16
repz
mov
call
lods
jo
sub
out
sub
sti
call
adc
push
pop
adc
and
or
adc
and
stc
and
add
cwde
xchg
js
test
cmp
mov
dec
out
mov
jbe
cwde
fwait
inc
out
dec
fbstp
jmp
pop
cmps
jae
gs
sbb
hlt
push
mov
lock
fwait
dec
enter
leave
cmp
cmp
in
push
lds
ins
ficomp
pushf
mov
call
xchg
mov
xchg
mov
mov
jp
or
or
add
daa
loop
mov
xchg
and
test
lea
into
sub
pop
lds
sbb
lods
pushf
push
rol
pop
(bad)
pop
mov
jle
sub
cmp
push
mov
push
scas
dec
mov
ficomp
jecxz
inc
or
adc
mov
mov
arpl
inc
test
je
fadd
sbb
cs
push
iret
add
cdq
test
call
xlat
jb
sub
sub
push
test
(bad)
jge
add
sbb
ss
pop
movs
inc
mov
pop
mov
sahf
cdq
jne
dec
xor
pusha
into
dec
mov
repz
and
push
adc
ret
lods
mov
dec
mov
je
nop
xchg
js
add
cli
cs
sar
test
or
mov
fwait
outs
retf
in
mov
add
cmp
dec
cmps
mov
xchg
fwait
pushf
imul
and
xor
das
or
sub
jmp
aaa
adc
cmp
and
lds
(bad)
and
jnp
add
loopne
(bad)
sub
popf
cmps
ins
lods
jae
adc
in
inc
xchg
xchg
icebp
push
frstor
ret
not
idiv
pop
movs
js
outs
(bad)
in
inc
stos
xchg
jns
dec
test
mov
inc
les
dec
fisub
jmp
and
loopne
movs
imul
jbe
xor
daa
std
xor
and
and
pop
lods
dec
mov
and
test
call
or
mov
data16
aad
xor
cs
and
pop
iret
add
cmp
shr
push
shr
lock
mov
push
lods
popf
jno
jns
mov
fcomp
pushf
inc
fbld
mov
xlat
jb
ja
sub
cld
and
jge
mov
mov
xchg
(bad)
(bad)
test
push
retf
push
icebp
dec
xor
adc
inc
mov
data16
dec
mov
jl
nop
test
call
inc
iret
dec
shl
cmp
pop
jmp
ins
aaa
sbb
inc
mov
out
jmp
mov
fcom
jae
daa
sbb
pop
lods
jl
jns
mov
mov
into
sub
pusha
rcl
outs
mov
je
xchg
popa
test
out
mov
mov
inc
adc
push
sar
pop
(bad)
jne
js
push
movs
fimul
fwait
xor
sub
xor
je
jmp
retf
cmp
xor
dec
int
pop
leave
add
sbb
or
cmp
dec
fnsave
inc
mov
jae
mov
sbb
aas
push
dec
iret
and
sbb
jl
push
mov
sub
pop
loope
or
aas
(bad)
and
dec
mov
jg
call
mov
xchg
imul
sbb
mov
test
pop
scas
lahf
data16
cs
add
xor
push
xlat
cmp
nop
data16
xor
(bad)
popa
shl
push
mov
inc
enter
das
rcr
inc
mov
xchg
dec
(bad)
ss
xor
add
cmp
push
mov
(bad)
or
xchg
xchg
jp
xchg
xchg
mov
cmps
data16
xor
cmp
xor
xor
retf
push
lods
dec
(bad)
cmp
icebp
pop
mov
cdq
dec
fistp
cld
and
dec
mov
mov
arpl
and
or
or
add
dec
or
hlt
sub
ficomp
xchg
jg
cwde
ins
mov
cdq
inc
cmps
bound
stos
inc
mov
pop
mov
push
mov
mov
xchg
call
pusha
fnstenv
push
in
xor
cmp
adc
std
and
cmp
mov
mov
sbb
push
int
sbb
pop
mov
retf
adc
(bad)
and
or
pop
nop
ins
sub
inc
lock
dec
retf
xor
enter
pop
mov
fst
push
cmp
sub
gs
dec
mov
rol
pop
mov
adc
xor
push
fistp
push
sub
icebp
mov
std
push
fild
idiv
jle
arpl
push
leave
ud0
mov
jnp
inc
mov
fbld
mov
call
dec
nop
aam
lds
test
jbe
pop
shl
call
mov
ficomp
adc
fcom
jbe
test
jle
inc
sub
push
pop
out
jno
pop
mov
jae
xchg
jae
fld
mov
mov
pop
test
ins
mov
fnstsw
in
pop
out
idiv
daa
and
adc
push
mov
or
arpl
cmp
dec
in
iret
cmp
es
add
in
lock
mov
fisubr
dec
stc
gs
push
aad
(bad)
sub
jb
inc
bnd
dec
iret
inc
(bad)
and
ja
jle
inc
mov
fstp
push
std
jae
sbb
or
dec
fistp
addr16
sub
pop
shl
jmp
ss
div
push
push
in
lods
jne
lea
or
xor
mov
fldenv
add
pop
or
shr
and
stos
scas
ins
test
pusha
sti
sub
movs
popa
mov
sub
add
push
mov
xchg
inc
test
push
aam
sbb
xor
outs
mov
xor
les
out
mov
jle
push
jb
int
stos
dec
mov
jne
jae
dec
xchg
not
test
arpl
and
push
mov
push
sub
mov
test
or
das
jmp
mov
inc
(bad)
adc
sahf
xchg
mov
mov
aas
pop
pop
ret
or
pop
mov
dec
mov
add
pop
mov
cmc
add
xchg
push
add
pop
sbb
lock
sti
xor
retf
adc
cli
mov
add
adc
adc
sbb
arpl
xchg
jmp
xchg
std
inc
xchg
sub
bound
cli
jb
add
cdq
sub
pop
jmp
xchg
sar
sub
push
clc
data16
add
popa
cmp
inc
ins
pop
cmp
jae
pusha
ror
(bad)
sub
pop
mov
cld
mov
push
mov
retf
ret
(bad)
push
and
movs
adc
addr16
pusha
push
dec
call
outs
dec
cmc
push
das
cwde
dec
sub
mov
push
jmp
push
add
inc
imul
retf
adc
jp
jmp
cdq
not
mov
loop
int
jle
lahf
cdq
and
cmps
fldcw
rol
mov
ror
mov
mov
pop
push
push
pop
adc
add
addr16
add
mov
sub
sbb
xchg
dec
dec
mov
inc
retf
push
out
stc
repnz
stc
pusha
rcr
push
popf
mov
push
out
jge
in
ss
xchg
mov
xor
pushf
movs
jge
cmp
or
loope
sbb
inc
int3
rol
in
lods
pop
leave
in
fs
inc
sub
idiv
shl
xchg
mov
inc
or
sbb
mov
cmp
xchg
add
pop
loope
nop
inc
fsubr
jle
xor
jb
lahf
cmp
adc
adc
dec
call
sub
xchg
in
xor
sub
jb
xor
jb
(bad)
stos
lock
jnp
iret
in
clc
jmp
movs
mov
dec
scas
mov
xlat
(bad)
scas
jo
je
jge
dec
movs
dec
pushf
sbb
js
mov
sub
cmps
int3
pop
vpperm
mov
int
fs
movs
push
cmp
xlat
ror
push
std
(bad)
adc
cmp
xchg
mov
fst
pop
add
call
shl
cwde
pop
push
sbb
stos
push
pop
mov
stos
inc
dec
sub
(bad)
aad
adc
cmp
fimul
mov
cmp
into
mov
jge
mov
imul
and
in
mov
sbb
aas
xchg
mov
movs
scas
(bad)
fsubr
imul
int
inc
aad
jle
jbe
dec
pop
jmp
pushf
xchg
and
(bad)
ss
or
into
cmp
or
inc
xchg
imul
arpl
sbb
popf
xor
sub
mov
pop
mov
lock
mov
(bad)
cld
push
neg
call
fadd
cmc
xor
aam
mov
adc
inc
fnstcw
pop
in
push
and
push
in
pop
dec
cmps
ret
mov
rcr
fimul
and
jecxz
add
mov
enter
out
packsswb
outs
push
pop
ret
jge
adc
rol
and
adc
and
stos
push
or
sub
jae
ins
popa
jg
fwait
sbb
imul
fwait
lds
push
inc
hlt
jge
push
fnstenv
clc
xor
inc
adc
pushf
adc
adc
loopne
push
jp
cmp
add
fstp
(bad)
arpl
cmps
xchg
adc
mov
mov
mov
shr
cli
stc
sbb
push
jp
pop
push
retf
das
out
or
(bad)
ror
inc
(bad)
fidivr
ins
sub
sub
jge
or
(bad)
dec
mov
les
inc
xchg
arpl
in
push
arpl
or
ss
or
mov
xchg
mov
mov
imul
jnp
sbb
hlt
gs
jnp
push
leave
ja
jg
repnz
sub
sbb
lahf
popa
cmp
xchg
sti
inc
xchg
jb
ret
xlat
adc
sbb
adc
cdq
data16
xchg
pushf
(bad)
dec
adc
(bad)
jb
lea
pusha
jg
mov
xlat
cdq
xor
xchg
and
test
push
fbld
jns
outs
add
call
jb
lods
sub
push
push
cmc
adc
mov
mov
sub
enter
add
jae
not
or
aam
or
push
int3
sbb
inc
cdq
mov
jbe
push
push
inc
fld
js
or
fst
lods
mov
inc
inc
mov
pop
or
fnstsw
and
leave
inc
adc
fsubr
or
mov
sub
cdq
sbb
sbb
int3
(bad)
jo
test
inc
adc
cmc
cs
ins
dec
aaa
mov
pop
dec
cs
xchg
or
pop
dec
inc
xchg
xchg
xor
push
dec
mov
scas
sbb
ja
ds
inc
ja
popa
ror
aas
(bad)
lods
lock
cmps
(bad)
aam
fld
xor
xchg
cmp
inc
push
xor
(bad)
push
push
outs
xchg
fcom
mov
movs
dec
das
mov
push
in
xchg
or
sub
or
adc
lods
dec
adc
jns
and
idiv
jg
into
jge
add
sub
in
xchg
jne
lods
mov
mov
ret
or
loopne
cmp
cmp
and
fmul
shl
adc
xor
rcl
call
push
(bad)
adc
imul
inc
cmp
shl
inc
mov
cdq
mov
popf
sbb
mov
mov
mov
sbb
mov
or
xor
xchg
and
dec
or
mov
xor
(bad)
mov
popf
mov
jg
je
inc
popa
pop
fdiv
call
jne
and
push
or
scas
and
cmp
cmps
fimul
mov
test
ins
jp
in
js
jmp
dec
mov
dec
loop
dec
add
icebp
add
push
std
push
jne
lods
ret
call
jecxz
pop
retf
inc
sahf
mov
sub
mov
fst
neg
xchg
sbb
lods
and
sbb
call
jae
test
xor
or
fsubr
ja
inc
jmp
addr16
cdq
dec
jl
xor
dec
pop
stos
cwde
xchg
pop
xor
push
adc
movs
hlt
sti
test
rcl
sahf
lds
data16
ins
dec
sbb
mov
sar
bound
js
xchg
js
mov
lods
mov
mov
enter
fdivr
lahf
mov
xor
cdq
push
pop
mov
std
in
and
arpl
cmps
xor
fldlg2
or
jae
mov
xor
out
sub
jae
stc
mov
jp
jns
jns
sub
mov
push
dec
jns
test
mov
bound
mov
jne
sahf
movs
add
jl
mov
xchg
pop
retf
push
or
mov
and
cmp
in
and
inc
jne
gs
and
xor
clc
push
mov
push
mov
call
out
out
pop
jns
xor
add
shr
adc
mov
cld
pop
and
jnp
nop
cdq
iret
adc
out
mov
dec
bnd
sbb
leave
cmc
jg
push
in
mov
or
test
xlat
cmps
ret
data16
or
rcl
jge
inc
adc
retf
test
(bad)
arpl
out
sbb
mov
dec
stos
xchg
call
ror
repnz
dec
push
mov
add
jmp
call
in
iret
rcl
pop
jno
test
dec
cmp
xchg
shr
test
(bad)
jecxz
vmovdqa
add
bound
pop
lods
icebp
sub
xchg
xchg
inc
xor
pop
push
popa
repz
in
jnp
dec
cli
inc
ja
or
jo
cmps
push
and
in
cmc
mov
sbb
leave
jb
ss
or
aad
out
jecxz
jne
sbb
hlt
push
push
sub
mov
es
mov
shl
mov
shl
add
push
cmps
push
mov
pushf
add
mov
ret
xchg
imul
mov
and
jo
inc
mov
mov
lock
fistp
pop
sub
fistp
in
add
cmps
mov
cld
and
popa
sbb
(bad)
mov
push
inc
or
and
shr
xchg
rcl
movq
test
adc
stos
sub
test
rcr
dec
out
dec
pushf
hlt
add
cmps
outs
neg
lea
nop
fwait
and
add
xchg
lods
mov
xchg
shl
outs
lock
push
les
push
jnp
into
not
or
push
outs
xlat
sahf
lods
imul
ins
push
push
xor
mov
fnsave
xchg
mov
cdq
jp
js
and
sub
jbe
xchg
add
mov
and
pusha
push
cmp
mov
fsub
mov
mov
call
or
fcomp
loopne
push
loop
test
or
fadd
ds
or
xor
xchg
fcmovu
mov
and
aad
push
mov
call
fst
popa
jo
aas
ins
mov
xchg
xchg
jns
sahf
mov
leave
push
lahf
xchg
pop
dec
mov
sub
(bad)
push
sub
pusha
aad
mov
fstp
jmp
shr
and
inc
data16
nop
test
gs
jbe
(bad)
aam
dec
sahf
sar
cmc
mov
stc
mov
in
mov
adc
mov
daa
push
lea
jle
mov
pop
(bad)
pop
hlt
mov
std
sub
mov
sbb
inc
scas
xchg
mov
or
loope
jmp
cmp
and
data16
inc
xor
shl
and
mov
fs
jmp
jbe
scas
fwait
mov
inc
nop
mov
push
fs
nop
js
loope
cs
aas
push
or
push
push
jmp
iret
int3
jl
lea
or
jno
jnp
(bad)
(bad)
(bad)
arpl
dec
aam
loope
lods
enter
mov
(bad)
sbb
mov
dec
nop
aaa
add
push
pusha
test
sbb
lds
cmp
sbb
mov
movs
jns
rcl
es
in
pushf
sub
pslld
cmps
(bad)
ds
sub
push
add
push
movs
dec
mov
push
cmc
int3
sub
ins
push
stos
sbb
idiv
daa
movs
js
sub
pop
xchg
repnz
and
imul
int3
add
mov
(bad)
jo
je
cmp
repnz
cmps
cs
ret
and
cwde
int
cmp
mov
popa
das
pop
(bad)
js
xchg
dec
push
inc
jle
pop
outs
call
pushf
sbb
(bad)
call
and
and
xlat
cmp
pop
jne
sub
push
adc
iret
pushf
iret
sbb
inc
mov
jl
scas
out
(bad)
call
movs
and
aas
out
adc
adc
xor
hlt
xchg
push
leave
push
mov
xchg
inc
fs
gs
sbb
aam
jecxz
(bad)
mov
adc
enter
adc
mov
or
leave
pop
jmp
push
add
and
cwde
jno
xchg
add
sti
ins
or
fwait
mov
bound
fcomp
adc
(bad)
scas
leave
sub
data16
addr16
(bad)
jmp
in
add
das
(bad)
out
pusha
xchg
ret
test
mov
test
pop
xchg
or
lea
jge
xlat
cli
xor
movs
push
push
add
inc
mov
mov
dec
pop
cdq
mov
cld
pop
mov
add
cmps
sbb
cmp
mov
add
loop
mov
in
fbstp
or
lods
and
pop
push
loopne
push
fwait
aas
add
cmp
mov
mov
jnp
ret
ja
aas
push
add
push
shl
loop
dec
adc
std
and
or
mov
cmps
push
imul
lods
test
out
imul
lock
cmc
std
push
cmp
lods
mov
push
sbb
(bad)
xlat
(bad)
pop
dec
cdq
lods
and
fadd
sbb
clc
or
push
es
aas
cld
cmp
inc
push
aad
inc
push
jl
mov
push
fcomp
pop
lods
rcr
fisttp
fdivp
cdq
or
sbb
push
sub
cmp
aas
into
mov
sbb
pusha
dec
ret
stc
aas
js
pop
aaa
mov
dec
out
jl
aam
dec
xor
xchg
xor
xor
fnstsw
int3
or
inc
js
movs
add
mov
cmp
inc
lods
mov
inc
outs
out
inc
cwde
jnp
imul
mov
add
push
ins
pop
nop
inc
inc
xchg
cmp
mov
add
fist
mov
nop
jae
push
push
jb
cmp
loop
or
std
fcmove
xchg
dec
xlat
scas
push
(bad)
jne
jo
adc
movs
icebp
jbe
test
xlat
gs
push
push
lds
jmp
data16
das
bound
jmp
dec
and
or
repnz
pop
jmp
dec
or
je
adc
jmp
push
and
out
xchg
inc
js
mov
jae
mov
adc
sbb
push
ins
jmp
sub
and
mov
push
dec
retf
pop
call
aas
cmp
mov
fstp
scas
mov
sbb
fadd
mov
out
outs
dec
add
xor
bound
imul
or
in
push
push
ja
icebp
mov
leave
dec
outs
sbb
push
(bad)
mov
cdq
ds
inc
cmc
push
pop
push
push
into
jo
jmp
inc
iret
test
cdq
bound
or
jmp
lods
jne
lds
das
mov
cmc
add
push
inc
cbw
loop
pop
daa
push
leave
sbb
sub
add
jle
loopne
stc
out
movs
out
mov
fstp
push
out
jecxz
mov
movs
mov
dec
cmp
cmp
shr
add
fcom
adc
pop
into
and
sbb
dec
and
xor
fcomp
outs
cmovg
jle
jmp
test
pop
mov
jae
fistp
retf
test
pop
sub
mov
or
lea
out
xchg
add
out
mov
push
jle
int3
ret
lea
gs
mov
adc
adc
inc
xor
cwde
into
jl
sub
sbb
pop
hlt
xchg
xor
sub
pop
mov
sbb
movs
ror
clc
push
mov
jge
shl
push
out
add
jns
repnz
and
hlt
ds
pop
dec
cld
js
int
pusha
imul
out
nop
cmp
mov
fst
add
es
data16
add
imul
repnz
out
outs
fwait
push
sub
push
out
cmp
sar
out
repz
pop
sbb
xchg
ret
nop
mov
and
xor
sbb
loope
rcr
inc
sahf
dec
loop
cmp
adc
fcomp
sbb
mov
aad
or
and
mov
cmp
movs
(bad)
fild
int
jno
in
ja
push
sub
outs
jbe
jns
cmp
sbb
push
das
or
(bad)
xor
nop
lahf
xchg
cwde
or
inc
fcom
mov
shl
jne
lds
nop
cmp
pop
movs
sub
push
ds
mov
enter
jb
pop
loopne
int
xor
sar
pop
shl
lock
fcmovnbe
add
test
adc
retf
sbb
add
inc
and
inc
xchg
in
dec
pop
mov
inc
out
in
xchg
retf
and
fcom
cmp
ins
cmps
fstp
std
jo
dec
sbb
shl
adc
mov
js
or
ss
iret
mov
ds
and
int3
leave
xchg
sub
out
adc
call
jle
inc
and
dec
fs
scas
jl
in
mov
jle
cli
clc
sahf
fiadd
xchg
push
mov
mov
adc
in
dec
pop
pop
pop
cmp
xchg
ficomp
jecxz
cmp
(bad)
ins
cmp
dec
fild
or
arpl
ret
inc
mov
push
shl
outs
ins
push
sahf
sbb
repz
cmp
mov
jbe
add
in
daa
fwait
add
arpl
and
dec
push
sahf
out
sti
add
sub
aad
pop
pop
sub
mov
outs
imul
ins
push
nop
out
cwde
pop
call
add
adc
dec
ret
push
test
mov
and
pop
and
sbb
(bad)
test
mov
test
jns
push
jge
jmp
dec
lahf
push
dec
test
mov
mov
lock
inc
rol
sub
mov
push
adc
outs
out
mov
fisttp
gs
loop
mov
xchg
or
mov
sahf
xchg
jb
push
es
test
nop
or
add
mov
push
loope
sbb
dec
lea
call
xchg
adc
sub
ss
call
xchg
xchg
dec
jmp
addr16
mov
test
push
xor
inc
mov
bound
jmp
and
mov
iret
scas
pushf
mov
and
outs
adc
arpl
mov
mov
inc
(bad)
jmp
mov
push
mov
ss
mov
(bad)
test
mov
mov
adc
or
in
jne
(bad)
out
enter
sub
fsubr
jecxz
addr16
pop
int3
daa
sahf
arpl
pop
cwde
scas
fist
mov
repz
cmp
jb
scas
les
test
sbb
es
js
bnd
sbb
cmp
test
push
xor
mov
or
out
outs
lods
sub
sbb
xor
ins
data16
jge
mov
(bad)
out
inc
adc
cld
xor
ret
(bad)
stc
in
jg
mov
mov
and
stos
mov
loope
adc
sub
add
jmp
test
dec
sahf
ins
sub
sub
xchg
jmp
out
mov
xor
add
jne
aas
ret
push
inc
cmps
xchg
fcmove
xor
jne
xor
mov
popa
or
pop
cmp
pop
js
hlt
cmp
xchg
es
les
mov
sti
mov
in
xchg
add
sub
xlat
jno
fwait
aad
das
rol
mov
(bad)
(bad)
js
retf
jg
in
adc
cld
mov
or
push
clc
cmp
sbb
pop
fild
mov
mov
repz
pusha
popa
and
cmp
fidiv
call
inc
idiv
pop
fldcw
push
jg
sbb
data16
jp
xchg
cmp
leave
mov
and
dec
jae
push
jle
ja
pop
in
sbb
and
ret
lds
movs
movs
loop
sbb
retf
ja
push
mov
jne
or
fadd
cmp
mov
ret
and
push
pusha
mov
push
cmp
jo
aas
enter
cmp
xchg
fstp
fs
xor
jns
mov
(bad)
cli
mov
int3
xchg
or
paddusb
inc
xor
adc
mov
or
inc
in
icebp
lds
cmp
in
jbe
sar
inc
jle
repnz
scas
iret
scas
dec
push
mov
movs
mov
(bad)
add
mov
div
sub
lods
xor
dec
dec
in
mov
std
dec
add
and
dec
pusha
ins
pop
sub
scas
out
popf
adc
fadd
sbb
enter
add
rdtsc
inc
xor
inc
and
or
push
pusha
out
ret
sbb
push
(bad)
in
mov
jnp
xor
jl
pop
fcmovu
or
sub
loopne
xchg
loopne
sbb
lds
icebp
dec
and
mov
out
pop
movs
xchg
adc
outs
std
sbb
js
jecxz
(bad)
push
adc
ret
and
mov
loopne
icebp
sbb
cld
push
lds
inc
push
es
sub
fucomip
scas
dec
ja
push
mov
mov
bound
fistp
mov
mov
xor
lahf
je
or
and
loop
idiv
pop
aad
test
mov
out
push
fwait
stc
loopne
pop
xchg
lock
pop
pop
(bad)
mov
outs
mov
xchg
test
inc
nop
sbb
adc
and
lds
jmp
pop
push
push
and
xor
fimul
setne
repnz
pop
and
imul
scas
jns
fnop
lods
inc
cmps
(bad)
retf
(bad)
fld
push
mov
repz
pushf
ret
nop
mov
frstor
cmp
sub
clc
(bad)
xchg
xor
retf
cmp
cdq
cmps
sbb
popa
mov
pop
(bad)
push
jl
data16
push
pop
pop
fistp
sub
inc
nop
xor
test
mov
cmp
cmp
shr
sub
pop
cmp
repnz
bound
ret
xor
jnp
sub
pop
inc
cmp
and
xor
ja
shl
int3
es
push
rep
sub
or
nop
pavgw
cmps
fcomp
fld
loope
push
or
shr
sbb
cmp
test
adc
dec
cmp
or
cli
add
add
inc
mov
adc
jge
leave
sbb
dec
cmps
mov
scas
sbb
(bad)
mov
shl
xchg
fadd
pop
daa
jb
outs
and
add
mov
sbb
ins
outs
push
outs
ss
xchg
call
add
jne
push
pop
cmp
pop
cmp
push
dec
or
sbb
ret
push
mov
aad
test
lahf
js
mov
xor
stos
std
pop
jl
nop
cwde
xor
(bad)
iret
ja
jo
lock
retf
push
dec
mov
movs
mov
pushf
jno
loope
loop
aaa
arpl
movq
loope
sbb
push
pop
dec
sbb
sbb
fwait
cmp
xchg
sbb
cdq
pop
dec
and
dec
cwde
icebp
ins
aad
rcl
scas
and
hlt
shr
xchg
outs
es
scas
cmp
fistp
dec
jmp
stos
cmc
test
mov
cdq
repnz
add
sbb
cli
aaa
sub
inc
or
jmp
xor
loope
push
js
mov
popf
inc
adc
pop
shl
mov
inc
ret
hlt
int3
call
pop
cmp
inc
push
cmp
sbb
mov
mov
std
mov
shr
out
pusha
mov
test
bound
test
cmps
mov
push
and
xor
dec
and
loop
pop
sub
lahf
lock
stos
add
pop
aad
and
retf
test
and
in
gs
mov
sub
jno
in
xor
add
jb
mov
mov
out
ret
mov
xor
push
sbb
fst
cmp
add
mov
xchg
push
hlt
cmc
mov
pop
dec
xor
pop
add
pop
mov
push
sti
xor
popf
sbb
mov
jne
cmp
xchg
mov
push
jae
test
pusha
or
push
pop
jno
fst
or
lahf
shl
mov
push
dec
cmps
idiv
sub
push
add
sbb
sbb
(bad)
ins
cmp
rcl
fwait
inc
popf
leave
aad
ffreep
push
addr16
(bad)
jecxz
xchg
cmp
push
xchg
das
fild
test
xchg
cmp
shl
xchg
ret
mov
jb
pop
fs
xchg
mov
jo
fld
mov
test
cdq
mov
test
or
push
lds
push
(bad)
cld
sar
stos
dec
aaa
mov
or
xchg
add
adc
push
pop
movs
call
leavew
stc
imul
(bad)
cmp
xchg
add
or
cli
cs
fnstsw
adc
and
add
movs
loop
and
mov
xlat
retf
sti
sbb
push
jecxz
mov
lds
jmp
inc
dec
test
rcr
push
and
adc
clc
mov
aas
lea
lods
fiadd
jmp
mov
aaa
mov
pop
ret
fs
and
add
imul
mov
and
jne
jge
cwde
retf
dec
add
sub
inc
add
xor
mov
add
jnp
stc
loopne
scas
sub
idiv
mov
out
mov
add
and
cwde
mov
ins
movs
int3
mov
xor
or
popa
dec
mov
scas
push
or
ret
hlt
xor
xor
mov
add
sub
dec
push
pop
in
or
xchg
rol
mov
mov
psllq
mov
sub
push
cdq
dec
mov
sbb
pusha
bound
popf
fwait
sbb
sbb
push
std
pop
adc
xor
jo
adc
fwait
mov
jmp
dec
adc
clc
jne
mov
jns
dec
and
adc
stc
(bad)
in
and
cmps
sbb
sub
fistp
imul
test
cli
ret
in
and
inc
inc
int
jge
nop
xchg
(bad)
out
xchg
jbe
arpl
mov
mov
or
das
test
lods
mov
cmp
stos
jmp
(bad)
hlt
sbb
pop
push
mov
inc
neg
pop
jge
mov
inc
pop
jb
(bad)
aaa
ds
comiss
fcom
inc
push
ror
fiadd
in
idiv
pop
add
and
jne
push
repnz
push
mov
mov
sbb
fisubr
mov
dec
imul
(bad)
sub
lods
in
ret
mov
fst
sub
lahf
inc
cmp
adc
sub
dec
fst
or
sub
adc
mov
dec
mov
adc
xchg
scas
xor
push
pushf
sbb
jge
or
jae
and
jbe
xor
out
(bad)
idiv
xchg
adc
rol
jno
shl
pop
test
xchg
push
cmp
inc
dec
repz
scas
std
or
lods
addr16
das
jmp
cmps
add
pop
pop
pop
in
daa
div
xchg
repnz
arpl
in
shr
(bad)
pop
gs
sub
(bad)
test
inc
into
jl
add
ficomp
lea
scas
cmps
pop
pop
data16
dec
pop
add
or
js
mov
cmps
in
jbe
prefetch
iret
repz
ret
jecxz
aad
adc
xchg
pop
adc
retf
sbb
ins
pushf
xchg
jecxz
lock
adc
mov
test
(bad)
mov
inc
pop
mov
adc
fcomip
sti
cdq
hlt
pop
stos
mov
pop
xor
jecxz
std
pop
jmp
xor
jne
push
mov
push
jbe
xor
and
nop
in
pop
push
movs
and
fadd
lds
inc
leave
out
sub
fstp
in
mov
scas
dec
into
dec
xor
inc
fild
fwait
or
sahf
js
mov
jmp
sbb
or
mov
loope
in
cmc
push
test
ret
mov
pop
(bad)
int
imul
dec
pop
pop
and
or
shr
dec
dec
and
loopne
ins
mov
fist
cld
and
ret
mov
popa
test
lods
adc
into
sbb
mov
pop
pop
pop
jmp
leave
add
or
leave
cmp
sbb
stos
add
dec
sbb
dec
sbb
jmp
daa
call
xchg
test
repz
inc
out
mov
dec
pop
fist
push
pop
iret
mov
sar
gs
jmp
mov
xor
add
dec
imul
les
adc
jmp
pop
xlat
jecxz
jb
add
cs
daa
xchg
push
adc
ror
mov
pop
or
xchg
pop
iret
daa
lahf
(bad)
cld
cmp
hlt
mov
cmp
out
lock
bswap
int
out
or
clc
or
sbb
xchg
mov
in
or
sbb
outs
dec
push
cli
jmp
mov
sbb
ins
xlat
pop
les
jg
jmp
jne
and
pop
bound
int3
dec
jns
pop
add
push
dec
mov
mov
mov
dec
jns
sahf
lods
sbb
(bad)
repnz
popf
ss
sub
fdivr
mov
mov
aas
sub
inc
adc
mov
data16
push
pop
call
jae
adc
iret
xchg
xor
addr16
add
push
mov
mov
sub
push
test
dec
fild
push
retf
inc
fld
sbb
push
fnstsw
dec
outs
shl
fsub
cs
jnp
repnz
dec
inc
mov
outs
sub
ret
xchg
push
out
adc
test
mov
inc
mov
dec
scas
dec
out
ret
mov
inc
mov
out
repnz
mov
lods
aas
dec
jle
pop
clc
jne
rcr
int
ret
and
test
or
xchg
sbb
call
xchg
(bad)
adc
xchg
jmp
popf
jecxz
ins
(bad)
jmp
push
arpl
jge
fdiv
or
xchg
clc
jo
(bad)
repnz
pop
into
data16
adc
or
push
sbb
loope
push
stc
xor
enter
fwait
adc
leave
pop
pop
mov
data16
xor
outs
jo
call
dec
es
shl
call
outs
mov
test
add
out
jge
jbe
sub
push
les
ss
sbb
sub
test
mov
jp
sar
cmp
add
aas
shr
cmp
sbb
and
pop
inc
imul
bound
test
in
retf
cmps
imul
mov
outs
daa
std
cld
xchg
mov
(bad)
mov
cmps
or
stc
push
test
out
xor
stc
adc
sub
adc
and
jo
pop
ins
cli
popf
bound
out
mov
dec
mov
jb
jecxz
call
fsub
lahf
mov
movs
sbb
mov
push
and
popf
icebp
and
es
cmc
enter
int
push
imul
mov
mov
ss
call
ret
inc
add
aad
xchg
sahf
cmp
jle
arpl
adc
leave
dec
stos
mov
xchg
sbb
mov
cmp
ins
pop
call
dec
mov
test
shl
ins
push
loope
dec
push
dec
inc
mov
ret
ret
ds
gs
inc
ins
dec
adc
fs
ins
outs
dec
sbb
sbb
mov
outs
or
push
sub
rcl
stos
sahf
scas
mov
jmp
in
scas
xchg
xor
loop
je
mov
ret
mul
jmp
test
dec
sbb
mov
xor
sub
pop
lea
fild
and
movs
lds
inc
xchg
pop
mov
mov
and
addr16
jne
xchg
mov
lods
retf
(bad)
fistp
xchg
sub
push
fisub
jmp
int
out
nop
cmp
and
adc
lods
xchg
mov
pop
xchg
imul
inc
movs
dec
fs
(bad)
mov
add
sbb
sub
jae
jle
mov
repz
adc
dec
in
jp
inc
cmp
test
or
(bad)
scas
fist
push
stc
add
hlt
mov
int
arpl
cmc
mov
jmp
jl
pop
lds
daa
push
xor
rcr
pushf
es
cmps
cdq
sbb
mov
add
sub
hlt
xlat
in
add
jle
push
jbe
push
xchg
sub
adc
xor
ins
ret
dec
shl
inc
mov
retf
and
or
sub
int
mov
cli
and
adc
xchg
xor
sar
xor
test
xchg
sti
dec
stos
xchg
in
jl
ficom
inc
pop
nop
pop
pop
xchg
pop
add
mov
cmp
cdq
sbb
mov
jmp
jnp
popf
jg
cmp
repz
jbe
and
rol
cmps
sbb
xchg
push
push
push
push
in
leave
mov
or
pop
mov
fs
push
daa
loope
pusha
ret
push
xor
lds
xor
push
enter
push
jae
outs
jbe
jmp
dec
jle
loop
sbb
mov
pop
xchg
dec
xchg
daa
call
int
mov
lods
xchg
fild
xchg
cmp
or
xor
in
nop
xchg
pop
pop
mov
xchg
adc
ins
pop
inc
imul
jae
inc
xchg
in
mov
das
push
and
fidivr
xor
cmc
jbe
dec
out
cmc
cmp
test
push
mov
adc
jmp
jno
sub
popa
sbb
aam
or
and
and
dec
pop
les
push
sub
adc
(bad)
loop
movs
je
inc
sub
call
dec
mov
stos
loop
cmp
dec
cmc
cmps
mov
call
mov
mov
pusha
sub
inc
or
rcr
push
fist
jae
je
loopne
out
xchg
(bad)
fisub
lahf
fiadd
and
dec
mov
xor
push
or
mov
push
add
sub
nop
xchg
in
(bad)
scas
(bad)
sbb
jae
xor
dec
(bad)
shr
pop
mov
(bad)
pusha
xchg
sub
retf
in
hlt
and
ss
pop
stc
add
fisttp
mov
inc
and
push
fbld
xchg
sub
mov
shl
imul
(bad)
je
xor
je
mov
in
aad
mov
repz
(bad)
xor
adc
mov
jmp
xor
xchg
adc
cmps
cmp
sub
test
push
repnz
shl
icebp
dec
pop
int
dec
push
clc
test
fadd
inc
jo
xor
test
sub
jne
xchg
sub
es
push
sub
in
xor
sub
mov
add
xlat
jmp
sub
std
xor
cmp
fdiv
in
or
clc
jmp
add
sub
into
xor
push
rcl
cwde
lods
rol
icebp
out
push
jecxz
jp
retf
cmp
dec
arpl
fist
sbb
sti
jbe
js
adc
sti
inc
icebp
xor
shl
in
fstp
movs
ja
mov
jp
xor
fs
adc
es
inc
lods
sbb
data16
dec
mov
jmp
sti
adc
in
inc
add
pop
inc
jne
push
loop
fwait
aas
mov
call
adc
repz
or
sub
aas
pop
inc
(bad)
jae
or
jne
or
(bad)
das
xchg
arpl
sub
inc
ret
lods
xchg
push
pop
mov
int
pop
(bad)
xchg
(bad)
repz
jne
popa
push
adc
push
and
pop
add
ins
test
jnp
xchg
adc
pop
test
jmp
aam
inc
imul
mov
push
cmc
push
rcl
dec
cmp
jmp
add
aas
lea
xchg
enter
inc
mov
int
cmc
xor
sub
loope
jle
sub
fnstcw
push
inc
sbb
sbb
pop
mov
mov
in
inc
adc
movs
jle
mov
stc
mov
jl
std
fstp
(bad)
sbb
and
pop
cwde
enter
pop
dec
hlt
das
mov
out
cmp
dec
or
add
loope
jae
aam
push
xor
sub
adc
popa
ins
cli
out
lods
pop
lods
loopne
imul
jmp
xlat
popa
fsubr
add
push
dec
ror
jb
aaa
add
fcomp
pop
cmp
fsubr
jmp
cwde
cmp
ins
xchg
shr
sbb
imul
mov
mov
cmp
mov
xchg
cmp
test
lea
xchg
das
not
jg
fbstp
mov
jnp
arpl
push
into
sbb
xchg
cld
inc
dec
movs
mov
xor
cmc
cmc
jp
into
clc
enter
dec
ds
push
inc
cmc
xlat
loope
aaa
xor
pop
je
movs
sub
push
push
in
pop
mov
int
iret
mov
lods
xchg
(bad)
xchg
frstor
inc
scas
popa
lock
push
push
jne
and
push
pop
xor
fst
or
(bad)
dec
xchg
mov
clc
push
jle
cwde
call
sub
xchg
sbb
or
je
into
mov
inc
in
sbb
push
fiadd
push
sar
cmp
(bad)
(bad)
and
mov
sub
int
adc
call
cmp
push
dec
push
jae
mov
pop
pop
(bad)
into
sbb
mov
sbb
inc
mov
jmp
sbb
push
arpl
jle
mov
pop
bound
xor
ror
push
cmp
push
retf
(bad)
pop
js
movs
jmp
fnstcw
in
push
lds
push
mov
pop
fldenv
mov
iret
scas
xlat
stos
ins
in
sub
push
cmp
rol
mov
mov
in
lods
test
mov
xor
mov
aas
test
add
mov
imul
aad
dec
adc
aas
imul
fwait
xchg
mov
dec
je
sub
xchg
scas
xor
dec
or
pop
(bad)
sub
jo
cmp
ret
push
mov
sub
push
mov
inc
(bad)
xor
add
add
jnp
dec
pop
int
cmp
dec
or
xchg
push
aad
inc
ins
adc
jecxz
lahf
xchg
cs
adc
jb
lahf
sbb
inc
inc
jb
lds
jmp
fs
jecxz
jo
rcr
pop
(bad)
pop
cmps
aas
xor
ret
push
dec
jne
jmp
mov
ja
stos
(bad)
inc
sub
test
adc
repz
adc
in
add
bound
int3
aad
xchg
sbb
ret
pop
test
sub
ds
sbb
push
or
sahf
add
out
loop
fimul
retfw
pop
jnp
push
rol
hlt
push
adc
je
lea
push
sbb
test
and
mov
pop
cmp
sub
adc
enter
pop
add
rol
add
xchg
push
lahf
fdivr
ds
sbb
mov
movs
pop
aas
mov
fnsave
adc
nop
jno
and
cmp
aam
nop
(bad)
push
int3
and
imul
or
adc
cmp
mov
push
jne
cld
daa
mov
data16
aas
sar
cli
mov
dec
stos
cli
cmps
xchg
retf
push
jne
lock
jbe
out
push
sub
out
test
inc
adc
mov
test
pop
inc
dec
push
mov
fwait
sbb
sub
dec
sti
jmp
dec
loopne
jg
gs
jo
mov
mov
ret
gs
int
shl
adc
push
ja
pop
and
lock
mov
add
cwde
dec
popa
or
idiv
mov
jo
sbb
cwde
cmp
add
aas
nop
and
shl
cdq
repnz
test
ret
dec
pop
pop
loope
outs
pop
push
dec
jp
pop
mov
inc
or
pushf
lds
and
and
push
ins
dec
sbb
sar
jns
cdq
dec
mov
out
sbb
jmp
mov
xchg
pushf
ins
adc
and
and
into
es
dec
aas
call
and
push
ret
out
and
xor
push
shl
jmp
ret
or
push
sti
mov
push
retf
or
pusha
cmps
aad
pop
neg
push
mov
in
mov
pop
jbe
jl
inc
mov
inc
icebp
xor
(bad)
es
imul
fnstenv
jmp
pop
test
sahf
mov
sub
shl
out
repz
push
daa
add
push
xchg
push
mov
imul
stc
push
sub
ret
inc
fmul
adc
in
shr
sbb
ins
mov
jne
js
lock
nop
jne
push
cmps
imul
adc
mov
jmp
push
mov
pop
jnp
test
mov
or
sub
leave
xor
ds
es
in
jmp
pop
or
xchg
jns
pop
fild
retf
mov
add
adc
cmp
push
mov
imul
jmp
mov
dec
mov
rcl
or
or
inc
scas
popa
rcl
out
mov
das
cld
daa
into
add
xor
pushf
jb
sahf
xchg
js
(bad)
xlat
or
pop
fisub
adc
cmp
jle
mov
dec
movs
arpl
sub
aam
mov
int
push
pop
cld
pop
movs
arpl
push
add
sti
pop
fsubr
aas
pop
jmp
mov
sbb
add
cs
sbb
pop
aad
repnz
pusha
test
lahf
xchg
std
mov
outs
mov
fcomp
lods
inc
mov
inc
mov
in
push
mov
out
mov
in
sub
add
mov
imul
push
shl
adc
adc
imul
sbb
push
enter
iret
xor
sar
jg
xchg
jno
pushf
xchg
jle
test
ret
dec
into
pop
(bad)
mov
jp
and
mov
fist
xlat
(bad)
cld
push
jnp
jle
sub
ds
adc
sar
cmp
aad
test
adc
inc
mov
fadd
sbb
sbb
jb
imul
xchg
sub
push
(bad)
or
pop
iret
dec
cld
jns
jb
push
mov
lahf
cmps
into
imul
pop
ret
xor
data16
or
lock
cld
bound
mov
xor
push
les
aas
sbb
xor
or
and
fdiv
or
and
or
out
sbb
inc
(bad)
push
div
lds
sub
jo
jg
jns
sub
psubq
cmp
dec
fsubr
cli
dec
mov
ficomp
xchg
inc
fsub
and
cmp
cld
sub
cmc
dec
mov
xchg
scas
lea
mov
ins
mov
cmp
xchg
cdq
scas
fs
ss
cmp
loop
pop
cmp
pop
enter
adc
xchg
ins
scas
ins
stos
popf
dec
mov
xor
stc
pushf
mov
data16
add
je
dec
ret
xchg
shl
adc
out
jmp
pop
scas
dec
stos
pushf
bound
in
int
add
clc
and
stc
cmp
jp
or
or
jo
xchg
cmps
xchg
dec
cmps
inc
mov
jg
inc
xor
pinsrw
adc
pop
scas
inc
add
fadd
and
push
dec
xchg
inc
lods
dec
(bad)
mul
xor
rol
adc
xor
sub
cmp
pop
mov
ror
mov
daa
and
push
jmp
rcl
cmp
in
xor
pop
fistp
lock
dec
(bad)
push
add
cmc
pop
cmps
inc
mov
pop
xchg
mov
add
or
aas
or
das
jmp
sbb
out
add
dec
mov
adc
or
sar
leave
and
imul
lea
pop
fsub
adc
shr
in
and
dec
pop
ror
arpl
pop
rol
test
and
nop
mov
call
mov
ret
sub
sub
pop
mov
into
pop
fst
or
cmp
and
cmc
push
mov
push
loop
cli
pop
xchg
inc
mov
and
sub
sub
data16
and
jno
inc
fsubr
adc
fcom
ret
and
adc
out
add
sub
or
in
push
stc
pop
mov
xchg
push
jle
adc
aas
call
xor
ds
sub
in
pop
mov
xor
add
pop
shr
pop
shl
push
scas
(bad)
push
shl
das
sbb
retf
stc
and
pop
cmp
sub
sub
cwde
call
fbstp
cmp
call
popf
mov
add
push
mul
push
sbb
jle
and
loop
add
sub
sbb
adc
stos
mov
pop
fld
ror
int
fsub
add
retf
pop
in
mov
call
shl
push
mov
rcl
inc
(bad)
or
xor
icebp
cmps
stos
inc
(bad)
repz
test
lods
dec
mov
dec
movs
inc
jl
xchg
das
(bad)
pop
cmc
push
sub
sub
add
sti
xor
(bad)
cld
or
ja
inc
mov
out
push
into
push
add
sub
rcr
push
in
call
clc
pop
mov
hlt
add
(bad)
and
jmp
sbb
cmp
push
mov
loopne
mov
ins
iret
stos
bound
jno
add
pop
retf
lods
xchg
paddb
sbb
stos
xchg
push
inc
xchg
xchg
sahf
cdq
jp
push
rol
(bad)
and
popf
inc
mov
rcl
fistp
mov
sub
and
pop
(bad)
ss
xor
psubd
aad
sbb
das
push
std
aaa
ins
les
pop
rol
test
inc
stos
outs
sub
sub
or
jecxz
mov
lea
(bad)
aas
cmc
dec
mov
or
sub
scas
js
daa
rcr
iret
aas
adc
push
mov
rcr
outs
fistp
adc
xor
ret
pop
mov
sub
loopne
mov
mov
jo
repnz
fadd
in
adc
pop
mov
jle
fwait
dec
jmp
cld
xor
push
xchg
mov
xchg
push
ja
or
xor
or
jge
xchg
ja
add
hlt
and
ret
xor
and
mov
clc
and
sbb
pop
mov
shl
stc
xor
adc
pop
mov
add
push
mov
and
jmp
das
push
neg
bound
or
in
cmp
icebp
sub
(bad)
adc
sub
pop
mov
add
call
adc
push
mov
dec
sbb
cs
pop
lds
nop
arpl
test
jne
pmaxsw
or
es
adc
(bad)
push
shl
adc
pop
adc
shl
lock
stos
push
movs
in
(bad)
retf
dec
mov
mov
mov
sbb
or
dec
push
call
xchg
rcl
stc
pop
(bad)
sub
inc
pop
neg
mov
xor
pop
mov
scas
inc
ror
ins
and
repnz
stos
gs
push
mov
or
push
sub
xchg
xchg
dec
aad
pop
call
push
iret
mov
pop
xchg
xchg
inc
shl
inc
mov
leave
sub
les
loope
aas
jmp
push
fdiv
or
and
std
pop
aad
adc
dec
mov
jbe
call
jmp
cld
dec
mov
popa
movs
jns
xlat
sub
push
ror
jb
xor
dec
mov
mov
(bad)
or
add
inc
cmps
xchg
mov
adc
sub
mov
mov
popf
fs
cmp
mov
pop
fiadd
in
mov
loopne
repnz
mov
fimul
cli
inc
fsub
test
pop
mov
dec
mov
call
add
leave
pop
scas
(bad)
jbe
pushf
call
jmp
in
dec
shl
pop
xchg
push
leave
add
ucomiss
dec
mov
fwait
jnp
push
clc
sub
cmps
xchg
jae
nop
jg
imul
lea
dec
aad
scas
outs
into
cmp
pop
rcl
nop
pusha
mov
jg
lea
or
cli
push
mov
test
mov
xchg
test
jno
cmp
retf
cs
out
std
xor
add
adc
in
pop
repz
cdq
jne
pusha
leave
cmp
push
mov
lock
stc
pop
mov
not
lahf
cdq
dec
mov
gs
retf
pop
test
sbb
int3
das
cli
shl
push
repz
test
lods
inc
mov
mov
jno
test
jge
ficom
in
push
cwde
cwde
outs
fstp
or
pop
scas
xchg
xchg
jo
mov
push
idiv
loopne
adc
push
(bad)
xor
add
cld
and
movs
mov
nop
bound
sub
xor
pop
mov
xlat
pop
mov
ret
sub
xor
jmp
mov
fbstp
jmp
stos
(bad)
cwde
outs
fadd
hlt
mov
aam
xchg
jl
push
fisttp
jmp
(bad)
daa
in
psubw
loopne
cmc
push
push
adc
adc
add
xor
cmp
loopne
xlat
push
loop
jecxz
push
lock
clc
and
ds
pop
stos
nop
jb
dec
mov
mov
lds
xor
xchg
push
sbb
sbb
sbb
pop
maskmovq
test
mov
xchg
je
lea
sbb
ret
push
fcom
cs
aam
hlt
and
not
adc
jnp
lahf
jle
sbb
(bad)
es
daa
pop
adc
out
and
ss
psubq
(bad)
pop
ror
sub
out
mov
fs
adc
pop
adc
adc
inc
fidiv
jmp
adc
fst
dec
rol
ds
adc
mov
xchg
dec
add
int3
add
add
sub
sti
daa
shr
ret
cmp
sahf
dec
(bad)
pop
mov
rol
dec
mov
arpl
daa
ret
cmp
repnz
cs
mov
retf
push
scas
dec
mov
inc
mov
sub
push
mov
test
dec
mov
add
sub
daa
shr
(bad)
xor
push
mov
push
mov
hlt
pop
(bad)
dec
lods
je
ds
xchg
mov
push
fsubr
hlt
pop
adc
hlt
and
aas
maskmovq
test
or
das
rcr
je
pusha
xor
push
sbb
retf
daa
pop
adc
inc
mov
pusha
mov
or
sub
and
out
adc
cmp
cmp
sub
retf
mov
into
sub
cmp
cs
pop
fnstcw
in
jb
imul
sti
push
mov
sbb
add
jne
imul
popf
jb
dec
enter
rcl
js
push
inc
(bad)
cmp
repnz
pop
aad
inc
mov
gs
mov
add
inc
movs
sahf
jbe
icebp
pop
mov
adc
inc
mov
xor
sbb
push
mov
enter
imul
add
cld
inc
mov
pop
mov
(bad)
push
test
xchg
dec
ror
je
jmp
lahf
inc
mov
(bad)
data16
mul
jmp
sbb
in
pop
mov
ficomp
dec
scas
jmp
mov
jle
je
lea
jmp
sub
sub
xchg
dec
mov
xchg
nop
jne
nop
stos
xchg
xchg
jnp
cmp
pop
lods
(bad)
mov
jecxz
cmp
enter
iret
pop
mov
jle
xchg
cdq
push
xlat
cmp
or
repnz
mov
push
push
sbb
lea
mov
xor
daa
push
ss
mov
movs
jp
xchg
and
push
cli
pop
stc
mov
int
xchg
xchg
je
mov
mov
xchg
call
push
out
ret
lea
pushf
dec
mov
sbb
sbb
sbb
ss
push
jmp
lock
in
dec
movs
test
adc
(bad)
rol
xor
jb
dec
mov
mov
xchg
inc
lds
out
push
cmc
sahf
mov
lahf
outs
int
(bad)
pop
jecxz
sub
mov
and
imul
push
fsub
mov
bound
add
(bad)
and
sbb
pop
icebp
jae
xor
mov
dec
scas
lea
dec
rol
pop
mov
jg
add
pop
lods
inc
sub
add
pop
scas
pop
dec
mov
loop
les
in
cmp
lea
ds
sub
push
cmps
xchg
ret
dec
stos
jae
and
std
cmp
push
sub
add
mov
mov
xor
pop
inc
ficomp
pop
fmul
repnz
dec
mov
fiadd
inc
stos
ins
xlat
mov
nop
jae
pop
int3
cmp
jle
xchg
mov
mov
dec
add
lds
sar
sub
cmc
push
mov
push
movs
inc
mov
dec
aad
inc
repnz
test
js
xor
popf
xchg
xchg
shl
pop
fidivr
mov
or
and
or
push
test
outs
shl
xchg
mov
(bad)
jne
ss
out
add
(bad)
mov
jmp
push
mov
ins
or
inc
mov
cmp
cmp
jns
inc
mov
movs
lea
aad
xchg
je
xchg
lahf
ins
mov
into
and
ss
pop
test
pop
(bad)
adc
cmp
mov
ret
es
pop
pop
fcom
inc
fnstenv
sbb
ds
jecxz
scas
sahf
nop
push
sub
sbb
and
pop
cli
cmp
aam
fist
jae
xor
out
neg
push
mov
adc
xor
sbb
pop
mov
jo
add
sbb
out
jno
jo
dec
mov
call
xor
add
push
lods
(bad)
ins
mov
jb
cwde
arpl
out
(bad)
xchg
adc
stos
xchg
inc
aam
cld
pop
sbb
sbb
sbb
ins
adc
add
cmp
cmc
aaa
loope
mov
add
ja
pop
mov
pop
clc
xor
jmp
push
mov
in
cmp
pop
hlt
jno
ins
mov
mov
int
shl
in
cs
xor
jecxz
gs
xchg
inc
fldcw
(bad)
push
pop
xlat
and
and
push
(bad)
cmp
cmp
sub
div
shr
jecxz
push
out
add
scas
mov
stos
mov
retf
(bad)
scas
jo
sahf
push
mov
jg
dec
or
ss
sub
adc
repz
mov
outs
sub
in
aaa
jmp
jns
xchg
jne
jmp
sub
pop
sub
repz
lds
mov
dec
shl
sub
fimul
ss
push
(bad)
xor
pop
enter
cmp
and
mov
add
and
pop
repnz
mov
ret
cmp
jp
outs
fidivr
(bad)
push
scas
cdq
imul
movs
mov
mov
rcr
pusha
stos
sti
dec
in
cs
add
repz
xor
shr
push
(bad)
cwde
inc
shl
adc
daa
repz
cmps
jne
jp
js
dec
cmp
xchg
imul
aad
cwde
jl
add
pop
enter
sub
add
inc
into
and
cld
and
leave
xor
push
fnsave
rol
xor
jae
daa
adc
mov
jg
cmps
xchg
inc
movs
(bad)
arpl
and
clc
and
cs
aaa
call
ins
int3
cs
(bad)
in
cmp
out
pop
rcl
adc
(bad)
xor
stc
or
aas
xor
sub
xchg
and
jmp
lahf
inc
cmps
(bad)
fist
mov
and
cmp
xor
aaa
cs
xor
inc
movs
xchg
inc
(bad)
xor
dec
test
xchg
lods
gs
dec
fimul
pop
test
and
inc
mov
sbb
ja
imul
dec
mov
dec
stos
mov
pop
sbb
pop
aam
data16
dec
int
jmp
cmp
paddsb
ja
call
rol
add
sti
sub
sub
mov
push
mov
pop
rcl
mov
pop
mov
mov
fidiv
jmp
ja
xchg
push
mov
mov
xchg
(bad)
(bad)
jno
mov
stos
xchg
outs
ror
stc
push
xchg
sub
in
xchg
jae
push
rol
mov
mov
xchg
push
fild
or
push
mov
fstp
aas
lds
lods
call
inc
fiadd
cmp
jmp
in
cmp
rol
adc
cmp
cmp
test
lahf
ficom
jne
jno
mov
jmp
call
std
sub
pop
fcom
jne
xor
cmp
push
add
and
rcr
mov
inc
aam
in
rcl
or
sub
in
sub
(bad)
dec
mov
xor
sub
lds
leave
inc
fistp
(bad)
and
and
adc
jge
sub
and
pop
mov
and
xor
push
inc
shl
add
add
xchg
jecxz
adc
loopne
push
loope
sbb
push
mov
mov
outs
out
push
cli
das
push
repz
mov
repz
xchg
jbe
cdq
push
sbb
inc
ret
aam
add
xor
push
stos
arpl
sbb
iret
push
fstp
jp
pop
sub
enter
mov
cmp
and
sub
lea
popf
xchg
imul
jmp
test
js
aaa
pop
cmp
cld
cmp
loop
xchg
xor
push
rol
clc
aaa
jmp
dec
sbb
xor
out
dec
fild
in
pop
mov
jmp
int
inc
test
sbb
fistp
std
pop
fsubr
ret
cmps
cmps
bound
scas
dec
movs
cdq
inc
movs
popa
sbb
int
pop
into
pop
mov
inc
mov
shl
out
mov
xchg
(bad)
pop
aam
std
push
mov
push
test
push
sbb
xor
pop
mov
dec
mov
movs
nop
imul
pop
mov
sar
ss
cmp
push
mov
and
pop
sub
sbb
inc
rol
leave
push
xlat
sub
cmp
rcr
xchg
pushf
cwde
sti
push
(bad)
je
xor
push
lods
fwait
je
pop
mov
call
cli
fstp
pop
std
push
xchg
jnp
push
cld
and
inc
ret
ds
mov
cwde
inc
retf
shl
arpl
push
test
enter
ss
outs
xlat
aaa
in
test
mov
push
aam
or
loope
int
repz
(bad)
lahf
xchg
jb
pop
les
clc
dec
sar
ficomp
mov
jo
outs
sbb
cmp
out
dec
fisttp
sbb
and
dec
shl
in
cmp
inc
mov
das
or
inc
stc
dec
clc
popf
mov
xchg
cmps
xchg
scas
mov
mov
inc
movs
mov
rol
sbb
cli
mov
xchg
jns
pop
retf
jmp
add
jg
add
sbb
inc
mov
fiadd
jnp
push
test
lidtd
xor
sub
out
ss
sti
sub
pop
push
out
adc
add
shl
xchg
lahf
xchg
js
or
aas
jmp
les
(bad)
mov
inc
mov
popf
inc
cmps
xchg
cdq
outs
cli
and
lock
iret
pop
cld
mov
(bad)
jmp
dec
stos
popa
fcom
pop
rcr
mov
add
sub
ud0
jb
jbe
add
idiv
jle
pop
xchg
jg
pop
int
lock
inc
hlt
push
int
test
lods
ins
rcl
pop
call
je
pushf
(bad)
mov
jb
aaa
adc
add
sbb
sar
push
rcl
int
lds
mov
outs
loopne
add
pop
fbstp
repnz
mov
mov
push
sti
pop
call
mov
fidiv
or
sub
xor
dec
test
mov
jnp
push
shl
xchg
mov
or
push
push
adc
ret
and
in
jecxz
movs
test
add
adc
xor
adc
push
xchg
call
add
and
sbb
bound
std
es
int3
scas
xor
rcl
cwde
jl
push
or
sbb
jae
or
gs
mov
out
and
call
push
pop
push
mov
mov
jno
bound
xchg
aad
(bad)
sahf
xchg
out
jge
push
push
rcr
nop
and
inc
popa
pop
sub
data16
adc
mov
aam
pop
outs
imul
push
mov
into
pop
pop
movs
movs
dec
xor
inc
inc
pop
icebp
dec
js
inc
enter
jbe
adc
and
fs
lahf
or
test
or
test
stos
repnz
popf
jbe
mov
mov
jge
jbe
retf
jns
ja
jne
jnp
xor
pop
nop
cmp
int3
loopne
ds
dec
(bad)
mov
xchg
and
je
xchg
(bad)
cmp
xor
ret
dec
sub
cmp
sbb
aaa
mov
jecxz
pop
jo
out
aas
es
(bad)
(bad)
mov
sub
(bad)
out
and
sbb
ret
call
lods
sub
or
stos
cmp
hlt
cmps
out
sbb
mov
pusha
cwde
adc
(bad)
cli
std
sub
fnstenv
das
xchg
and
js
daa
dec
xor
mov
test
scas
sbb
repnz
jnp
pop
int
(bad)
div
(bad)
(bad)
fcmovnu
sub
and
mov
cmp
rcr
mov
fcom
les
mov
leave
stos
cwde
sub
push
ins
sub
jns
cmp
loop
adc
inc
imul
loope
pop
daa
inc
jmp
jle
arpl
ror
xchg
gs
pop
add
loop
and
mov
mov
xor
cdq
fs
test
stos
test
test
ds
sti
add
out
int3
cld
xchg
and
out
cmp
nop
lahf
pop
xor
mov
add
aad
mov
in
mov
cmc
daa
fcmovb
lea
cmp
push
pop
dec
bound
ret
ret
add
mov
inc
mov
adc
sbb
push
stos
xchg
lea
into
cld
sbb
inc
cwde
dec
(bad)
push
pop
add
push
lods
dec
push
imul
cmps
push
addr16
ins
imul
jecxz
pushf
jmp
nop
(bad)
pusha
mov
push
mov
scas
cdq
or
(bad)
xchg
clc
jp
push
inc
test
(bad)
cli
add
mov
cwde
data16
retf
xchg
adc
call
jbe
out
sbb
add
shl
mul
sbb
pop
mov
xchg
into
add
push
jmp
mov
ja
mov
popa
pop
bound
cmp
ret
xor
mov
or
dec
push
cmps
inc
stc
gs
inc
mov
jmp
sbb
cmp
fidiv
out
push
stos
push
mov
loope
xchg
fnstsw
in
sbb
aaa
stos
dec
clc
iret
shl
mov
call
xchg
mov
xchg
or
scas
cmc
jmp
es
pop
pusha
adc
(bad)
jle
lods
pushf
jb
xchg
scas
or
adc
mov
mov
in
std
leave
pop
sub
jae
cmp
inc
ret
adc
mov
loopne
cdq
push
cmp
mov
add
enter
cdq
xchg
add
enter
sahf
fimul
push
push
pop
out
lock
daa
test
es
dec
lods
loop
jp
inc
inc
lahf
push
lds
pop
jo
int
xchg
lock
pop
cmp
push
leave
int3
je
not
out
jbe
jbe
fcom
add
dec
outs
fucom
arpl
mov
push
jmp
jge
inc
pop
sti
mov
jmp
aaa
dec
dec
ret
sub
jmp
add
mov
xchg
mov
cmp
xor
test
ds
xor
das
mov
inc
retf
push
and
add
ja
pushf
sbb
loope
mov
cmp
dec
and
and
pop
int
add
xor
(bad)
call
sbb
stos
and
cmp
dec
add
sbb
pusha
into
adc
inc
jno
ret
or
adc
enter
push
and
in
xchg
js
outs
or
je
adc
cmc
cmp
stos
lea
imul
mov
test
cmps
clc
jge
mov
call
dec
inc
xchg
dec
sub
arpl
jmp
sti
ficom
in
sub
pop
outs
gs
xchg
div
shl
pop
int
(bad)
pop
aam
mov
and
inc
inc
xchg
sub
bound
sbb
or
sbb
sub
mov
repnz
pusha
test
imul
lock
fwait
(bad)
(bad)
cmp
ins
cmp
int
mov
in
cmp
sahf
repnz
jg
mov
ss
test
cmps
pop
pop
rol
fwait
imul
or
cmp
add
and
mov
jno
lock
dec
sti
aaa
sbb
fwait
repz
fs
les
jb
mov
mov
addr16
xchg
pop
(bad)
jmp
enter
ds
push
scas
aad
xchg
les
ret
(bad)
nop
dec
jmp
rcr
dec
jb
push
clc
xor
stc
jns
je
pop
int
lock
adc
jge
sub
out
les
cs
fwait
push
icebp
pusha
jno
jnp
jne
iret
pop
xchg
xor
mov
outs
jne
inc
inc
sbb
adc
mov
scas
gs
loope
ja
cdq
sub
xor
sub
scas
mov
or
push
lods
push
mov
daa
in
dec
lods
cwde
mov
push
and
sar
sar
popf
or
cmp
pop
and
(bad)
jmp
and
int
xchg
loope
int
dec
xchg
xor
imul
pop
jbe
or
gs
aam
and
push
sub
mov
pusha
in
into
enter
popa
adc
push
sbb
ret
and
adc
add
mov
mov
add
xor
sbb
xchg
adc
retf
inc
push
test
inc
push
cmp
jnp
pop
aas
push
sbb
sbb
cli
pusha
mov
ret
cmps
fcmovu
add
mov
or
mul
mov
call
sbb
adc
movs
xchg
push
mov
jmp
mov
adc
pop
scas
loop
adc
sbb
(bad)
and
movs
mov
cli
and
ins
mov
(bad)
(bad)
jmp
lods
int3
and
jle
sub
mov
addr16
cmp
or
dec
int
and
mov
ins
imul
leave
and
push
xchg
mov
dec
outs
cmp
sbb
mov
fisttp
fsubr
and
sbb
jle
outs
ja
sti
shr
into
aam
xor
fcomp
stos
out
cmp
pop
or
push
xor
jbe
nop
and
std
adc
or
lea
add
movs
pop
inc
push
jnp
lods
idiv
or
mov
dec
jb
dec
in
js
lock
mov
add
jne
dec
push
or
cs
jne
mov
call
bound
xchg
in
loope
push
loope
add
test
add
or
pushw
out
or
sub
stc
out
add
cmp
pop
(bad)
cmp
std
add
mov
xor
add
jg
(bad)
call
test
pop
js
imul
or
jns
jb
repnz
or
push
test
mov
or
dec
cmp
pop
jae
ja
jmp
xchg
mov
movs
xchg
jl
imul
dec
add
shl
out
jnp
cmp
jb
xchg
pop
push
mov
cmp
inc
repnz
in
push
call
pop
popf
retf
cmc
jae
ja
in
inc
(bad)
jmp
push
test
repz
call
cmps
int3
repz
jge
clc
dec
les
cli
pop
xchg
push
pop
loope
cli
dec
jo
dec
in
(bad)
adc
mov
mov
xchg
xchg
ins
jmp
mov
movs
dec
das
cmp
jmp
data16
mov
cmp
jl
jmp
dec
fs
jb
inc
mov
pop
fmul
sub
xchg
mov
cmps
and
lds
fstp
mov
add
jnp
mov
cs
fst
lods
test
xor
in
mov
jno
enter
cmp
mov
sahf
dec
inc
jmp
jbe
mov
pushf
retf
add
jae
push
jl
dec
sbb
push
mov
mov
lods
out
sbb
jge
fwait
adc
xchg
jg
int3
adc
or
sbb
fs
or
(bad)
sar
or
pop
push
push
ja
jo
int
fnsave
sub
mov
(bad)
xor
jl
push
add
leave
pop
enter
jg
inc
clc
xor
test
dec
outs
add
cmp
out
pop
mov
jmp
mov
sub
xor
mov
hlt
pop
xchg
mov
jns
lahf
std
stos
aas
pusha
movs
adc
jle
dec
test
push
xor
pop
jne
lock
mov
jne
sbb
in
hlt
iret
clc
pop
push
scas
mov
loopne
add
adc
push
test
push
jmp
lods
aam
xchg
add
pushw
(bad)
call
dec
popa
retf
sbb
icebp
dec
sub
mov
ins
jle
movntq
ja
jno
dec
(bad)
cmp
out
fcom
cmc
inc
pusha
test
fmul
leave
clc
out
imul
push
sub
call
sub
iret
fbld
loopne
repz
aam
mov
dec
cmc
jns
test
sub
xor
leave
or
mov
xchg
pop
enter
hlt
push
das
add
pop
nop
test
movs
push
xchg
ret
gs
cmp
loop
imul
ss
jo
pop
mov
push
std
cmp
sbb
movs
or
sub
dec
jne
dec
js
loopne
add
xchg
jl
addr16
sub
popa
(bad)
push
mov
pop
jle
int
mov
jno
and
hlt
lea
cmc
push
xor
xor
pop
mov
inc
repz
jbe
loopne
fnstenv
in
arpl
call
adc
push
pop
das
sbb
or
scas
xchg
inc
mov
mov
rcl
jns
fst
data16
push
(bad)
les
inc
push
cdq
cwde
xchg
sub
or
shl
js
lahf
add
sub
ja
(bad)
dec
cwde
inc
sti
jl
stos
fs
movs
dec
es
nop
mov
aaa
ds
xchg
test
daa
dec
and
and
(bad)
stos
gs
imul
pusha
mov
aad
(bad)
xor
ror
les
mov
sub
ds
push
shrd
jp
add
call
mov
pop
movs
pop
adc
mov
daa
sbb
out
jmp
(bad)
mov
stos
pop
xchg
or
fistp
add
popf
cwde
(bad)
sub
sbb
das
sbb
call
xor
dec
jne
aam
sar
mov
adc
push
ins
sbb
push
jb
das
and
push
inc
push
in
mov
xchg
jl
stos
sbb
rsqrtps
jmp
aaa
test
adc
jo
test
inc
mov
add
in
mov
fld
div
rcl
movs
inc
call
push
inc
xor
push
jno
out
push
ror
(bad)
test
ss
aam
or
loopne
push
inc
mov
sub
xchg
sub
pop
cmc
cmp
pop
ficom
aam
std
repz
aaa
add
retf
hlt
retf
pop
push
jmp
in
out
and
cwde
mov
dec
dec
xor
sub
add
lock
retf
mov
shl
jmp
jbe
adc
and
adc
adc
cdq
jno
xchg
xchg
neg
repnz
bound
ins
jge
cs
jno
ret
in
adc
push
jo
rcl
aad
jecxz
cwde
loope
xor
ficom
rcr
or
push
mov
fs
ret
mov
and
mov
mov
mov
lods
pop
cs
sub
push
retf
shl
in
test
pop
dec
mov
adc
stc
pop
jno
push
cmp
mov
fild
sbb
dec
xor
inc
mov
xchg
and
hlt
push
pop
mov
imul
movs
dec
mov
test
push
hlt
push
push
daa
xchg
ins
push
cdq
push
sub
xchg
aas
popf
dec
call
add
and
in
iret
add
adc
ror
add
xchg
sbb
test
out
push
ficomp
xchg
pop
mov
outs
fst
xor
ficomp
pop
cwde
ins
mov
ins
push
xor
jmp
push
dec
mov
out
fs
jbe
mov
add
pop
cwde
push
mov
adc
outs
loopne
sbb
fild
xchg
sub
div
or
mov
dec
and
and
bnd
sub
stc
out
push
icebp
or
mov
adc
jecxz
cdq
(bad)
in
cmps
cmp
mov
mov
add
or
push
fstp
inc
sar
retf
mov
cmp
and
sbb
call
pop
ins
lahf
adc
add
lods
dec
(bad)
mov
and
mov
pop
ins
fcmovb
(bad)
popa
xchg
push
outs
sbb
aas
adc
jecxz
xor
int
shl
mov
push
mov
sub
stc
nop
data16
loop
xor
into
ror
xlat
jbe
test
jecxz
nop
add
aaa
mov
jbe
pop
jno
mov
jl
dec
xor
cdq
cmp
pop
jle
jo
sub
xor
jae
xchg
inc
dec
test
mov
jmp
(bad)
loope
std
mov
pop
lock
(bad)
int
stos
pop
mov
mov
call
leave
jecxz
jo
jecxz
out
cmp
push
jmp
mov
fcomp
pop
inc
jno
mov
cmp
cmc
jle
pusha
mov
enter
(bad)
jbe
pop
mov
inc
in
js
add
push
je
fxch
shr
mov
(bad)
aad
jns
xchg
mov
loop
test
(bad)
jb
arpl
retf
mov
jmp
into
mov
ror
pop
retf
sbb
call
mov
adc
(bad)
cwde
pop
mov
adc
ret
xor
xchg
arpl
lods
and
sar
and
add
mov
adc
adc
das
test
cmp
fcmovu
daa
sbb
stos
hlt
mov
pop
adc
dec
pushf
push
pop
sbb
sti
cmp
add
add
xchg
loope
jb
xchg
in
in
and
rol
(bad)
mov
mov
jg
adc
jnp
xchg
lea
jg
inc
dec
rcr
adc
sub
lods
clc
mov
fcomp
movs
fdiv
cwde
add
jb
dec
sub
and
jp
jmp
dec
push
xor
dec
fwait
jmp
int3
fidiv
nop
cdq
rcr
movs
mov
iret
ja
pop
jae
ret
pop
lds
out
ret
lock
lock
inc
lock
xlat
mov
(bad)
mov
push
mov
mov
dec
std
xlat
outs
and
cmps
and
pop
cmp
xor
or
inc
test
push
xchg
mov
vmovshdup
jl
sbb
xlat
push
mov
(bad)
cmp
cdq
jns
jp
jbe
not
es
sbb
push
sbb
call
push
data16
lock
and
sete
repz
pop
repz
sahf
adc
sub
cmp
mov
push
in
movs
push
sar
dec
addr16
xchg
out
pop
rol
inc
mov
and
popa
(bad)
fcom
mov
aad
adc
cmps
xor
cmp
xor
cmc
inc
and
call
lds
addr16
popa
(bad)
in
mov
test
pop
jmp
push
mov
and
add
clc
call
adc
aad
pop
xchg
mov
dec
push
adc
aam
jmp
sbb
jge
mov
cmps
or
loopne
push
cmp
or
jp
ins
cdq
pop
mov
int3
pop
jno
push
nop
mov
mov
dec
je
frstor
mov
(bad)
xchg
adc
adc
adc
push
(bad)
test
cmp
iret
dec
dec
dec
sub
icebp
pop
(bad)
mov
shl
xchg
dec
std
push
(bad)
shl
pushf
adc
mov
les
ret
inc
ja
bound
xchg
popa
sub
repz
sub
idiv
movs
jnp
dec
xor
loopne
rol
imul
aas
pop
fstp
outs
lods
push
pop
repnz
lock
mov
push
mov
mov
adc
test
sub
sbb
jg
sbb
dec
mov
inc
push
icebp
stc
push
xchg
push
pop
mov
daa
mov
sub
add
add
(bad)
aad
add
aam
add
bound
inc
xchg
arpl
fnstenv
or
mov
in
call
push
inc
mov
ins
inc
dec
mov
(bad)
test
outs
mov
dec
mov
mov
cmp
or
call
mov
sub
and
sbb
push
mov
or
push
std
push
add
(bad)
cmp
mov
mov
aad
xchg
sub
in
popf
int3
test
gs
cmp
rol
std
pop
adc
ret
shr
outs
or
int
les
jl
sub
or
xchg
push
xor
pop
sbb
ins
into
xchg
daa
scas
loopne
sub
fimul
scas
loop
in
nop
push
lods
push
xor
jmp
adc
add
clc
pop
and
sbb
xor
popf
rcl
(bad)
pushf
jbe
xchg
rcl
sub
cmps
sbb
jno
sub
adc
add
and
add
push
jo
fdecstp
xor
iret
mov
fild
repz
xlat
pop
dec
aas
adc
jo
arpl
mov
out
xchg
cs
sti
test
mov
loope
xor
push
(bad)
sahf
jmp
cmps
imul
xor
lock
mov
push
mov
inc
jmp
mov
push
xchg
mov
add
sub
(bad)
jmp
test
mov
sbb
lea
push
pop
in
and
sbb
cmp
push
dec
or
mov
(bad)
scas
xlat
sbb
lea
fsubr
idiv
ret
inc
push
mov
bound
xor
dec
mov
inc
imul
inc
out
xchg
dec
cld
test
aad
xchg
jecxz
jmp
sbb
xchg
pop
ja
addr16
cmps
rol
gs
cld
arpl
cwde
mov
mov
in
loopne
repz
test
clc
in
cs
or
aam
jne
dec
retf
cwde
xchg
or
sbb
je
outs
test
mov
hlt
mov
pop
adc
mov
mov
cli
imul
lea
and
mov
gs
sbb
mov
and
cmp
dec
pop
jmp
inc
mov
bound
pop
fcomi
pop
pop
cmp
sbb
or
sub
mov
inc
lods
xchg
adc
hlt
fs
xor
nop
pusha
mov
mov
cmps
mov
xchg
inc
into
cmp
hlt
fs
or
inc
fmul
sbb
loop
hlt
js
xchg
add
add
leave
and
or
std
inc
mov
into
pop
add
xchg
push
add
add
test
pop
cmps
lock
out
pop
mov
inc
mov
das
retfw
and
cmps
outs
aas
dec
ret
rcl
xchg
ins
pop
pop
ds
bound
cld
mov
in
push
sti
mov
neg
std
mov
jbe
pushf
add
mov
inc
(bad)
xchg
jne
clc
test
mov
nop
popa
cmp
je
in
push
test
mov
dec
adc
cmps
cwde
fsub
jbe
sub
jno
repz
rcr
(bad)
dec
sbb
mov
cwde
test
cs
in
xor
mov
or
repz
ins
sbb
outs
int3
mov
std
movs
(bad)
xchg
les
in
test
xchg
adc
mov
mov
push
add
mov
xor
cmps
imul
lods
sti
cmp
cld
xor
shr
jge
ret
xor
dec
(bad)
push
pop
iret
mov
call
xor
xor
cwde
jb
push
dec
rol
imul
xchg
pop
add
lods
imul
mov
mov
scas
retf
jne
repz
mov
nop
pushf
(bad)
or
(bad)
pop
paddw
adc
push
test
sbb
mov
and
mov
add
xchg
scas
jmp
stc
nop
aam
jno
inc
movq
cdq
int
inc
ficom
div
mov
pop
push
pop
push
int3
and
ja
icebp
cs
hlt
bound
clc
mov
pop
inc
movs
repnz
aas
jmp
adc
or
dec
sbb
sbb
mov
stc
mov
xchg
enter
sbb
jmp
sbb
pop
aad
dec
or
mov
sbb
dec
scas
(bad)
mov
sub
ds
je
repz
jae
mov
outs
sub
mov
das
retf
mul
jo
hlt
pop
pop
sbb
aad
jns
mov
stc
mov
sbb
mov
ror
inc
out
imul
imul
ins
sub
cdq
mov
and
stos
out
imul
data16
xchg
mov
inc
push
call
push
push
inc
mov
icebp
xor
out
pop
scas
lds
imul
bound
jmp
jp
jmp
inc
sbb
inc
(bad)
mov
and
pop
or
xchg
pop
mov
mov
jmp
into
sub
jl
fmul
lea
std
movs
popf
fnstenv
ja
mov
test
out
aas
gs
mov
leave
lea
mov
add
sahf
leave
sub
int3
sub
push
int
pop
(bad)
mov
mov
pop
jecxz
imul
test
and
movs
lods
into
xor
(bad)
pushf
aad
xlat
cmp
lahf
popa
xor
mov
repnz
mov
push
sbb
inc
push
xchg
and
mov
xor
fwait
xchg
ret
iret
cwde
mov
xor
test
adc
push
fstp
je
inc
adc
inc
add
jle
movs
xchg
rol
js
xchg
bound
loopne
cmps
loope
das
push
je
and
dec
int
popf
in
and
xlat
xchg
mov
hlt
mov
aas
imul
xlat
and
ret
xor
fdiv
popa
scas
mov
das
push
mov
jbe
scas
ins
sub
cwde
jge
repnz
mov
popf
out
call
mov
sbb
and
xchg
ror
je
mov
in
and
push
push
jae
nop
xchg
(bad)
inc
xor
out
bound
lock
test
push
and
std
stos
fwait
(bad)
push
daa
adc
fdiv
inc
loop
(bad)
cmc
pop
or
jns
cld
dec
or
sbb
test
jmp
jmp
adc
cli
pop
sbb
mov
(bad)
inc
add
arpl
push
mov
mov
iret
pushf
jnp
push
imul
data16
cld
mov
inc
out
cwde
jmp
les
jmp
fnstcw
sahf
jl
div
scas
(bad)
push
and
pop
xchg
in
pop
jecxz
call
jg
leave
dec
cmp
inc
adc
jbe
jg
fwait
inc
xor
cwde
addr16
inc
mov
cmp
test
pop
adc
jae
inc
fidiv
repz
(bad)
js
mov
adc
mov
xchg
pushf
hlt
ds
mov
push
leave
cmp
mov
jne
mov
imul
push
stos
cli
add
fisttp
in
fwait
inc
cmp
pop
mov
or
loopne
or
dec
scas
out
push
sbb
mov
xchg
cmc
sub
pushf
cwde
rcl
mov
mov
dec
sbb
push
mov
pop
push
clc
xchg
addr16
dec
lods
call
scas
jmp
mov
aaa
pusha
mov
out
xor
mov
jg
clc
mov
out
je
inc
sub
xchg
mov
imul
mov
mov
stos
mov
dec
or
or
sub
push
aad
mov
std
es
fisttp
inc
pop
cmovnp
add
and
ret
cdq
sub
add
adc
cdq
rcl
push
std
lods
popf
retf
std
stos
call
or
dec
(bad)
sbb
add
adc
pop
or
test
sahf
mov
bound
adc
les
or
lock
push
in
mov
out
fs
dec
es
xchg
je
repnz
mov
and
cmovle
cwde
mov
jle
mov
dec
stos
out
pop
sbb
mov
(bad)
fimul
je
mov
mov
test
mov
lahf
mov
xchg
scas
cmc
push
cmp
cmps
jg
loope
dec
add
daa
arpl
pushf
outs
repnz
mov
cmp
inc
or
sbb
int3
push
add
fs
inc
mov
imul
fstp
sbb
dec
cmps
repz
push
aaa
jle
call
jmp
jae
cli
lods
sahf
test
sub
fdiv
rcl
pop
sbb
std
stos
sub
imul
sbb
pop
or
mov
cs
xchg
ja
sub
out
add
int3
dec
or
pop
lock
mov
(bad)
jp
std
mov
pop
mov
mov
cmp
ss
push
or
int3
push
xor
or
push
hlt
mov
shl
xor
ret
stos
outs
cmp
mov
iret
inc
sbb
pushf
popf
(bad)
cmp
mov
adc
imul
hlt
and
in
xor
stos
jge
sbb
jmp
dec
push
push
pop
sub
mov
js
cmc
scas
jno
ss
leave
popf
dec
or
test
xchg
shr
jns
xlat
cmp
xchg
sub
out
inc
int3
scas
fcomp
mov
loope
addr16
xor
movs
js
jge
xor
rcl
mov
test
push
adc
mov
sbb
inc
movs
int
or
lods
mov
and
mov
and
jmp
inc
or
inc
add
lods
xlat
pop
xor
scas
inc
pop
stc
mov
sub
cmp
test
(bad)
fmul
out
scas
(bad)
shl
sar
bound
call
inc
sub
xchg
xchg
aad
jb
loop
xor
retf
cmp
retf
call
mov
jne
adc
cmps
int
(bad)
pop
mov
std
jl
outs
adc
imul
mov
sub
push
pop
je
mov
rcl
adc
(bad)
leave
add
xchg
xchg
ret
jo
ins
cmc
push
pop
idiv
test
cmp
inc
or
mov
(bad)
fcomp
loop
arpl
mov
mov
call
xor
mov
add
jne
js
fistp
stc
xor
in
sbb
mov
jecxz
cs
pushf
cwde
fstp
dec
stc
call
mov
out
xor
shl
push
dec
fistp
nop
sti
add
loope
push
sbb
xorps
mov
es
cmp
data16
cmps
mov
repnz
pop
dec
add
mov
shl
mov
cmp
mov
mov
shr
dec
push
dec
mov
fnstcw
jnp
nop
xchg
(bad)
pop
or
test
mov
xor
scas
jge
push
jne
call
hlt
mov
mov
cmp
xchg
xor
hlt
aaa
jbe
xchg
call
mov
repnz
mov
outs
nop
(bad)
sub
idiv
mov
in
(bad)
jno
adc
fist
mov
fnstcw
push
rol
and
shr
dec
cmps
repnz
repz
fcomp
outs
mov
cmc
pop
push
adc
sti
xchg
ror
leave
lea
daa
arpl
fimul
jecxz
mov
sub
mov
(bad)
mov
inc
add
out
xor
fimul
bound
(bad)
data16
test
or
clc
mov
pop
add
and
mov
dec
and
or
int3
sub
mov
cwde
fsub
or
mov
fisttp
loopne
mov
pop
add
je
in
ins
fcomp
fistp
adc
inc
fisttp
(bad)
push
aas
enter
js
push
push
leave
xchg
xchg
or
jno
or
rcl
call
stos
ja
push
pop
(bad)
leave
sub
jp
xchg
lahf
into
and
rcl
stos
out
push
mov
push
ss
lods
(bad)
retf
xor
xchg
push
js
dec
sbb
test
push
push
sbb
lods
mov
pop
cmp
dec
ficomp
in
test
ror
add
ficomp
add
fldcw
cmp
jle
fwait
jp
int3
popf
cdq
into
xor
jmp
sub
push
push
add
ja
fwait
sbb
jne
sub
pop
or
test
fist
or
mov
jp
sbb
repz
push
adc
cld
xor
mov
ds
icebp
dec
and
xchg
mov
add
lods
jo
adc
lock
sbb
xchg
xchg
ret
(bad)
mov
xor
xchg
ret
cmp
fcom
leave
(bad)
call
rcr
sbb
test
add
xlat
dec
push
leave
lea
int
cmps
loop
popa
mov
jb
adc
inc
mov
daa
jge
retf
retf
lahf
jle
sub
nop
enter
icebp
or
test
dec
sbb
push
xchg
and
jecxz
mov
sti
mov
push
cmp
xchg
mov
inc
sbb
mov
fiadd
inc
push
push
push
sub
sbb
repnz
mov
cmc
jb
cld
movs
not
xor
sbb
push
cmc
mov
test
add
cmp
mov
nop
(bad)
dec
cli
stos
dec
sbb
movs
mov
cmp
push
mov
cdq
xchg
shr
stc
mov
(bad)
daa
arpl
test
mov
bnd
push
sbb
ja
push
push
mov
daa
outs
mov
sub
pop
rcl
call
jge
jmp
cdq
cli
je
sbb
rcr
test
push
add
mov
popf
mov
das
inc
shl
push
dec
test
mov
ins
add
pop
loope
cdq
aad
aad
pop
mov
push
(bad)
lahf
cwde
rol
add
gs
dec
fstp
dec
leave
stos
inc
adc
mov
stos
cli
inc
pop
xor
mov
inc
add
sub
scas
je
or
sub
in
push
adc
mov
mov
or
in
lods
fwait
xlat
pop
add
mov
mov
pop
adc
dec
or
mov
repz
or
loope
or
push
enter
in
cdq
fstp
sbb
ret
rol
lods
sti
xor
enter
push
rcl
jnp
imul
(bad)
in
arpl
test
(bad)
(bad)
fld
inc
aam
lahf
(bad)
push
adc
mov
adc
add
cdq
jns
loop
popf
test
or
add
je
adc
test
pop
xchg
fst
int
push
push
push
test
pop
adc
jns
sbb
fisttp
popf
cwde
aam
sti
call
dec
cmp
mov
sbb
sub
jecxz
lds
inc
sub
mov
fisttp
or
push
sbb
cmp
cmps
cmps
jecxz
ja
xchg
ss
cli
and
cmc
pushf
mov
mov
scas
dec
sbb
xchg
mov
daa
jg
dec
scas
jmp
int3
fwait
gs
inc
(bad)
mov
adc
jmp
arpl
test
xor
stos
jo
std
mov
jno
jecxz
popa
xor
fadd
iret
dec
pop
shr
sub
mov
(bad)
cmp
mov
add
push
add
pushf
popf
retf
mov
(bad)
mov
sub
movs
sahf
fidiv
jne
mov
arpl
adc
xchg
shr
push
les
push
loope
jo
or
out
adc
pop
sbb
scas
(bad)
popa
scas
sti
dec
or
pop
in
mov
clc
jno
in
xchg
jno
cmp
jecxz
xor
jb
test
js
jmp
add
movs
add
retf
imul
movs
test
aas
jae
mov
xlat
mov
dec
cmps
out
es
stos
mov
lods
int
push
out
xchg
jmp
lahf
rcr
leave
mov
add
jmp
inc
push
pop
inc
adc
jbe
retf
mov
ins
lds
xchg
shl
mov
sub
mov
sbb
(bad)
pop
push
in
lods
pushf
rcr
add
fist
icebp
mov
cdq
mov
and
xchg
popf
int3
and
int
mov
(bad)
add
add
xchg
(bad)
push
sbb
push
mov
pop
push
sbb
out
and
mov
fild
xlat
adc
mov
mov
xor
pop
fmul
enter
pop
jl
and
ja
clc
sub
nop
imul
pusha
and
adc
(bad)
pop
cmp
mov
or
mov
pop
cld
stos
call
push
dec
push
sbb
out
aas
imul
imul
add
xchg
les
pusha
sub
mov
pop
ret
sbb
nop
popf
out
jg
out
xor
sub
fadd
inc
mov
lahf
scas
fnsave
and
push
sub
add
push
hlt
mov
lock
jo
lds
jle
or
pop
clc
mov
mov
sub
push
fild
pop
test
and
(bad)
or
xchg
jb
loop
jns
in
jns
in
test
fisub
lds
adc
xchg
pop
and
mov
and
xchg
adc
or
out
je
std
lods
inc
adc
lods
dec
sbb
push
xchg
outs
xor
daa
cmp
sbb
lds
or
or
rol
add
stos
ins
aaa
loopne
shl
sub
pusha
stos
out
aas
outs
nop
(bad)
aaa
pop
fmul
sub
jo
fwait
retf
les
cmp
cmps
jecxz
adc
mov
and
jg
out
adc
cmc
dec
pop
das
inc
sbb
mov
outs
pop
pop
sti
mov
pop
xor
lods
dec
pmaxsw
add
lahf
mov
pop
retf
shr
jns
(bad)
cmp
mov
shr
inc
call
and
jne
xchg
scas
jmp
(bad)
mov
push
dec
movs
(bad)
push
cmp
movs
dec
sbb
xchg
mov
cmp
loope
sbb
mov
daa
jo
mov
test
push
lahf
popf
aam
or
mov
out
adc
and
scas
mov
and
outs
sub
test
inc
add
pop
(bad)
and
loopne
mov
outs
add
sub
daa
jg
xchg
jae
loopne
xor
jne
repz
dec
ror
arpl
push
pop
ficom
arpl
repz
jb
mov
js
rcl
clc
mov
ins
sub
test
and
pushf
push
cmp
mov
jo
or
(bad)
inc
adc
and
xchg
jno
or
lea
dec
or
hlt
lahf
call
mov
adc
push
(bad)
arpl
xor
out
xor
mov
daa
or
add
test
adc
call
sbb
repz
test
xor
mov
sbb
xlat
(bad)
mov
pop
sbb
inc
out
ins
add
scas
loop
push
lods
(bad)
and
mov
cmc
mov
sbb
cli
cmp
jns
ret
xor
sahf
std
cmp
mov
enter
test
cmps
inc
add
mov
mov
cmps
ja
repnz
ins
sub
mov
and
cli
lods
dec
paddb
aam
jo
bound
or
xchg
ins
sub
mov
pop
or
clc
dec
sbb
repnz
lock
cmp
mov
arpl
out
ins
cmp
sbb
add
cmp
mov
jae
loopne
stc
mov
clc
mov
mov
int3
jle
add
mov
int3
cmp
ror
je
add
popf
mov
ins
sub
pop
icebp
mov
rcl
in
add
push
shl
popa
and
xchg
std
pop
sub
stos
pushf
jmp
nop
cmc
inc
xor
adc
push
cld
lea
sbb
out
mov
xlat
xchg
xchg
in
out
popa
xor
adc
inc
add
jg
and
std
pop
sub
push
xchg
pop
and
mov
jns
pop
push
stos
fistp
dec
scas
jmp
shl
ins
push
cmp
dec
(bad)
mov
loop
fs
call
lock
rcl
lds
inc
int
lahf
out
push
pop
ret
rcl
adc
lds
push
mov
jno
popa
sbb
call
(bad)
xchg
or
fistp
push
test
jg
mov
sar
pop
and
data16
xchg
xor
je
adc
add
and
jo
and
dec
mov
cmp
scas
(bad)
push
and
lahf
inc
cmp
cmps
aam
adc
shr
pop
mov
daa
pop
mov
xor
fisubr
rol
mov
rol
push
mov
iret
pop
cmp
pop
ret
xchg
xchg
(bad)
mov
ins
aad
mov
jne
rol
xlat
pop
cmp
test
pushf
cmps
out
and
cmp
xor
outs
fist
mov
arpl
pop
sbb
fistp
aad
mov
fwait
int3
jno
repz
pop
cmp
push
ret
leave
and
cdq
inc
pop
and
movs
into
cmps
nop
(bad)
jb
or
jmp
xor
ja
add
mov
(bad)
xor
call
pop
or
fs
inc
loop
test
cmp
jle
mov
cmp
pop
mov
add
mov
jge
out
jp
call
sub
mov
pop
sbb
push
adc
mov
adc
inc
test
sub
jl
in
das
inc
shl
lods
in
pop
stc
mov
cmps
icebp
and
sub
pop
fadd
mov
(bad)
push
or
movs
mov
dec
sbb
data16
xchg
mov
mov
shl
or
(bad)
retf
(bad)
fwait
retf
cmps
into
xor
and
loop
and
xchg
sar
mov
shr
ins
movs
hlt
inc
adc
jae
cmp
fiadd
lock
into
pop
add
xor
dec
and
add
scas
loop
push
mov
xor
scas
jl
rcr
jle
jmp
aad
jecxz
fwait
lock
fistp
aam
mov
cmps
mov
pop
or
xchg
(bad)
fcom
idiv
ret
mov
gs
movs
xchg
(bad)
push
adc
mov
jmp
xchg
shl
jnp
out
pop
xor
and
jmp
mov
mov
mov
xchg
xchg
enter
add
xchg
push
add
sub
inc
mov
or
test
icebp
pop
test
gs
cli
sub
sti
dec
fld
hlt
lahf
arpl
cdq
inc
test
nop
inc
mov
push
es
add
mov
imul
lods
dec
ret
sub
pop
test
loop
rol
mov
dec
mov
int3
pop
nop
xchg
inc
fdivr
pop
enter
in
add
pop
fstp
lds
dec
into
dec
mov
push
sub
std
dec
xchg
inc
enter
mov
cmp
sbb
inc
push
push
add
sub
push
scas
popa
mov
push
adc
push
mov
aam
in
or
and
loop
jmp
ins
fidivr
inc
xor
shl
or
sub
add
dec
scas
test
cdq
scas
mov
aas
sbb
add
cmp
or
sub
jns
push
cmc
jbe
and
adc
push
test
cli
and
mov
lahf
popf
rol
jb
push
mov
mov
cli
sub
jecxz
fdivr
(bad)
and
add
outs
ret
dec
aam
test
arpl
pop
lods
sahf
imul
mov
shl
add
in
das
adc
addr16
pusha
not
pop
(bad)
and
add
cmp
cmp
xor
sbb
loope
stos
mov
and
(bad)
jb
es
outs
stos
call
push
into
push
mov
test
loope
into
cmps
addr16
push
mov
mov
push
lock
std
inc
ret
or
out
into
sub
push
out
cmp
inc
stos
fwait
test
push
inc
sbb
mov
icebp
cmps
imul
stc
and
xor
or
push
sub
stos
jae
js
ja
pop
sbb
je
pop
enter
xor
add
(bad)
pop
rcr
cs
sbb
xchg
outs
clc
test
xchg
mov
xor
adc
sbb
aaa
cmp
push
add
pop
adc
call
loope
mov
dec
sbb
dec
scas
pushf
cwde
imul
cdq
xchg
mov
in
push
push
loopne
cmps
jo
aas
or
jne
and
mov
ins
fstp
mov
fdiv
ja
jp
push
or
mov
repnz
mov
mov
push
les
pop
pop
dec
mov
stos
popa
mov
das
repnz
xchg
inc
(bad)
cmp
aas
ret
and
xchg
mov
mov
mov
rcl
lds
inc
aam
es
sbb
add
int3
jb
pop
frstor
push
jmp
movs
mov
sub
fild
inc
retf
mov
pop
cmps
mov
and
and
push
retf
and
out
and
sbb
ds
jne
jae
dec
mov
ins
int3
push
(bad)
push
xor
dec
retf
imul
sub
xor
dec
in
xor
or
cmp
out
retf
jns
pop
or
fdivr
or
das
add
pop
cmc
sub
inc
shl
or
xor
jbe
and
inc
mov
sub
pop
mov
lods
outs
mov
mov
xlat
add
xlat
cmp
add
or
inc
mov
ins
movs
fwait
bound
cmp
lods
xchg
xchg
jp
ds
mov
pop
fstp
out
pop
fdiv
repz
(bad)
nop
ins
rol
push
in
push
aad
adc
and
out
and
stos
mov
and
ret
pop
push
jmp
xchg
xchg
movs
or
mov
sti
pop
mov
push
mov
movs
mov
call
leavew
or
cmp
das
iret
aas
repnz
stos
mov
cmp
pop
mov
scas
mov
sub
cmp
icebp
ins
scas
out
jle
inc
mov
dec
out
(bad)
daa
and
sbb
add
push
sbb
and
ds
push
das
push
loope
daa
sbb
out
jg
inc
lds
adc
dec
fiadd
jno
jle
scas
pop
in
icebp
ss
add
loope
fst
or
xchg
xchg
push
aaa
ss
outs
fiadd
scas
test
dec
cld
jle
mov
mov
mov
pop
adc
sub
jmp
mov
call
xor
repnz
shl
jg
mov
mov
fstp
test
dec
cld
dec
(bad)
and
loope
mov
das
sbb
xor
pop
out
or
jb
xchg
mov
jae
push
stc
ja
in
aad
test
(bad)
mov
mov
sahf
fisubr
out
movs
imul
adc
or
sbb
adc
xor
jmp
mov
stos
enter
xchg
push
add
jno
jb
push
mov
add
call
push
loop
enter
push
push
pop
loope
cmp
dec
mov
lahf
xchg
xchg
sahf
mov
lds
or
dec
lods
pushf
mov
mov
lea
out
xor
add
cmp
jmp
mov
iret
dec
mov
push
sbb
xor
aas
imul
into
pop
jmp
jg
and
dec
rol
and
sbb
out
adc
cmp
sub
cmp
adc
or
test
call
pop
hlt
pop
(bad)
jne
dec
add
adc
dec
xlat
xchg
lods
cmps
ins
ret
push
movs
mov
mov
pushf
nop
lahf
mov
inc
int3
inc
mov
xchg
xchg
popa
repnz
fdivr
jp
sub
cmp
mov
mov
fild
imul
pop
adc
adc
ds
cmp
pop
sub
push
call
pop
fisubr
xor
loop
jg
dec
mov
lds
cmp
jl
sub
dec
enter
cmps
cwde
mov
mov
(bad)
jge
and
sbb
icebp
pop
iret
push
rcr
addr16
in
pop
cli
jle
push
jmp
fisttp
rol
int
movs
mov
lods
xchg
out
ret
push
repz
ret
das
pop
or
mov
xlat
push
mov
cwde
pusha
fisubr
pmaddwd
push
aad
shl
sar
ja
push
and
adc
sbb
push
bnd
and
and
lds
add
cmp
movs
scas
movs
gs
and
add
std
ins
lds
adc
xlat
inc
ret
pop
icebp
js
inc
shl
das
push
or
aas
or
inc
movs
lods
mov
lods
mov
sub
mov
sbb
jno
push
imul
push
leave
push
xor
pop
adc
cmp
ja
sub
ss
scas
xchg
mov
(bad)
call
mov
scas
addr16
(bad)
loop
xlat
inc
out
aas
cmp
dec
mov
dec
push
pop
sub
xor
adc
xor
ins
fdiv
(bad)
sti
dec
fsubr
lahf
mov
cdq
mov
test
jb
dec
repz
sti
jbe
push
and
pop
out
iret
sub
retf
dec
test
iret
mov
enter
div
inc
and
push
imul
adc
push
ds
adc
mov
ror
and
imul
sbb
push
xor
xchg
pusha
jmp
cmp
or
jmp
mov
xchg
scas
mov
js
jae
pop
iret
pop
cld
mov
mov
mov
aaa
sbb
jno
sub
pop
push
loopne
fldcw
stos
mov
xchg
mov
ret
push
iret
sub
fcomp
js
inc
fisubr
xor
adc
std
push
shl
(bad)
jno
inc
ficom
push
mov
movs
mov
ja
stos
mov
mov
data16
call
dec
iret
sub
loope
shr
inc
(bad)
lods
sbb
out
sbb
or
pop
sbb
dec
mov
cmp
push
sub
add
imul
(bad)
and
pop
fisttp
ja
cs
jg
push
call
sub
test
lea
or
sub
and
sbb
imul
xchg
xchg
cmp
aas
cmp
adc
mov
jg
mov
xchg
xchg
call
jmp
jmp
imul
add
pop
or
in
jb
inc
fbstp
add
or
push
(bad)
dec
test
pop
cmps
stos
mov
les
sbb
sub
in
jge
pop
imul
es
inc
les
imul
adc
sub
cmp
cmp
test
or
iret
mov
stc
jb
push
pop
or
add
pop
mov
aas
call
sub
(bad)
enter
aas
out
push
imul
jnp
out
stos
test
push
sti
push
fldenv
in
leave
pop
iret
dec
scas
jmp
sub
aas
adc
add
jns
and
xor
in
pop
sbb
stc
jbe
and
out
add
or
pop
std
ja
inc
jmp
out
shr
push
jmp
or
inc
fidiv
in
push
in
dec
mov
jl
dec
sti
outs
retf
inc
(bad)
pop
fild
idiv
int
shl
adc
push
jb
sub
aaa
or
xor
and
pavgw
sahf
xchg
popa
(bad)
dec
rcl
ds
adc
cmp
xor
and
push
adc
or
cmp
jge
outs
retf
push
shl
inc
fnstsw
js
dec
hlt
dec
sbb
jp
mov
popa
stc
pushf
cwde
mov
lahf
test
std
sub
adc
in
ja
adc
aas
add
pop
jmp
outs
fnstsw
pop
stos
mov
xchg
bnd
pop
test
clc
dec
sbb
push
xlat
jbe
inc
cli
and
movs
jae
jp
jnp
jne
jo
mov
mov
lds
or
pop
lods
mov
mov
out
leave
dec
scas
mov
test
sbb
cmp
add
add
xor
inc
aad
pop
cmp
cmp
int
pop
pop
out
pop
or
add
adc
cmp
sub
cmp
jne
pop
mov
(bad)
and
retf
pop
sbb
ret
push
test
(bad)
and
loopne
test
mov
mov
xchg
(bad)
inc
into
and
jae
inc
aad
fadd
fwait
mov
xchg
pushf
ins
ret
jmp
jo
pop
(bad)
jge
mov
mov
mov
out
aam
sbb
and
dec
mov
jo
sub
sub
or
pop
pop
(bad)
jmp
add
jno
push
enter
add
and
mov
dec
(bad)
jg
adc
out
les
inc
retf
inc
mov
adc
push
in
jge
cdq
into
dec
iret
push
lods
popf
lahf
arpl
das
adc
or
(bad)
aam
push
out
int
or
ins
add
sub
in
lds
jl
add
push
daa
adc
adc
ins
cmps
mov
call
and
sar
push
cli
push
pavgw
jbe
mov
jbe
mov
xor
push
bnd
inc
xor
rcl
movntq
push
retf
pop
mov
inc
and
sbb
inc
(bad)
push
ret
pop
fsub
add
cmp
dec
movs
mov
mov
adc
jg
dec
fdivr
sbb
loope
fistp
pop
fisubr
sub
sbb
das
or
jg
and
ss
aaa
add
push
xlat
push
(bad)
jp
jg
sub
fs
mov
scas
int3
inc
mov
(bad)
fwait
cdq
jb
mov
xchg
cmps
mov
jecxz
iret
dec
cmps
mov
and
call
sub
jle
jo
and
push
jmp
retf
cmps
nop
mov
int
lock
mov
xchg
mov
mov
mov
mov
mov
or
xor
add
push
test
dec
jmp
stos
mov
jb
inc
lock
push
sbb
cmp
add
push
leave
dec
sti
stos
jb
jbe
fsub
pop
in
out
daa
add
pop
shl
dec
shl
clc
push
js
je
push
leave
pop
(bad)
mov
lahf
jae
pop
lock
(bad)
dec
call
pop
in
movs
arpl
and
xor
das
push
cmp
add
add
adc
add
call
scas
fsub
out
jnp
dec
movs
lods
lea
add
clc
pop
int
shl
xchg
nop
data16
cmps
xchg
lea
out
jnp
jne
and
push
aam
sbb
xor
in
call
test
scas
adc
ret
jnp
xor
dec
rcl
and
out
das
jl
and
sbb
aas
das
cmp
push
int
int3
push
movs
ins
jmp
pop
lods
scas
call
mov
pushf
mov
sbb
or
jmp
fwait
popf
xor
es
in
rcl
push
adc
xor
adc
sbb
repz
fidiv
push
fldenv
ss
or
or
sub
aas
movlhps
and
and
add
sbb
bound
pop
mov
(bad)
push
sar
movs
cmps
scas
popf
xchg
in
xchg
jns
inc
scas
stos
arpl
pop
fcomp
jl
pop
fbld
cs
aam
sub
nop
and
push
rcr
stos
call
shr
jbe
or
sbb
xor
adc
es
addr16
lea
out
daa
xor
adc
mov
or
popa
sti
and
sbb
dec
int
cld
cmps
xchg
jp
push
lods
imul
cmp
adc
aaa
push
sbb
push
and
push
out
or
sub
jmp
scas
mov
xchg
ror
jae
pop
mov
stos
jmp
cmps
outs
enter
xor
das
xor
or
jmpw
cmp
ss
add
and
push
ret
call
add
into
daa
sbb
out
sbb
cs
pop
out
inc
fidivr
dec
(bad)
sbb
pop
or
and
adc
sub
adc
sub
push
ds
push
(bad)
sub
or
je
inc
mul
cdq
rcr
clc
push
shl
ret
push
int
cmp
pop
add
dec
mov
fdivr
(bad)
stc
push
fidiv
or
jg
je
ss
adc
int3
pop
scas
mov
pushf
xchg
mov
mov
pusha
ror
cmps
mov
pop
shl
ss
adc
syscall
add
imul
jl
outs
icebp
pop
or
dec
(bad)
dec
lods
mov
cmp
xor
ds
xchg
(bad)
aad
or
fldenv
fist
out
push
scas
jno
sahf
xchg
imul
retf
pop
fild
xchg
outs
lods
jge
inc
(bad)
xor
cmp
ss
jb
jg
xor
sub
jle
lahf
arpl
mov
xor
retf
add
pop
mov
inc
mov
popf
outs
sbb
xchg
mov
stos
jg
jle
mov
out
inc
mov
push
movs
jnp
jo
pop
lea
push
xor
out
into
add
inc
(bad)
jns
aas
jae
and
xor
pop
shr
cmp
xor
aaa
outs
call
pushf
jle
aas
in
sub
dec
cmp
out
adc
xor
mov
test
xor
push
fmul
push
iret
cmp
xchg
jge
sub
mov
movs
dec
xor
gs
gs
and
ds
xor
call
out
(bad)
adc
adc
add
ins
mov
scas
xchg
xchg
jbe
xchg
sbb
sub
std
jl
mov
enter
xchg
pushf
jbe
sub
mov
jne
push
pushf
dec
mov
sub
not
jns
pusha
lds
test
aad
and
pop
fnsave
popa
jmp
test
pusha
stos
stos
ins
mov
les
jle
xor
lds
fdivr
mov
lock
aad
ror
adc
xor
or
mov
fstp
inc
test
or
les
xchg
mov
cmc
sub
ins
aam
scas
jp
mov
scas
jecxz
sub
adc
mov
sub
ret
jecxz
jb
mov
dec
adc
add
sbb
pop
lea
dec
adc
sbb
mov
mov
loop
clc
pop
int3
pop
mov
xchg
mov
in
ret
dec
mov
lahf
mov
es
adc
loopne
iret
dec
inc
fcomp
iret
xor
push
icebp
cwde
mov
ins
test
jmp
push
mov
stos
mov
jne
push
in
aam
(bad)
jne
pop
test
pop
leave
jne
dec
(bad)
(bad)
push
or
inc
rol
test
scas
popa
cli
push
cmps
stos
mov
int
adc
sub
push
stos
mov
push
test
pop
mov
imul
pop
adc
pop
stos
ret
bound
mov
push
adc
pop
xor
sbb
cs
pop
retf
es
rcl
int
add
ss
and
jne
or
jge
push
movs
inc
daa
sbb
jmp
fstp
mov
imul
ss
cmp
sbb
imul
les
ja
outs
jmp
inc
sti
and
data16
pusha
fld
adc
sti
and
rol
jmp
out
and
xor
push
mov
jg
dec
into
add
cs
cmp
mov
jnp
and
cld
pop
fbstp
clc
pop
mov
retf
dec
stos
test
adc
inc
mov
fwait
push
fbstp
sbb
cmp
fnstsw
out
das
jmp
jmp
sar
jle
nop
mov
ror
test
xor
shl
jbe
pop
stos
jno
cli
sub
sbb
cmp
push
mov
(bad)
fwait
jp
test
vmptrst
add
or
and
jecxz
test
cmp
xor
hlt
pop
mov
xor
pop
aam
push
div
pop
cmps
jge
adc
jp
push
mov
int3
dec
mov
cmp
cmp
push
pop
mov
hlt
sub
push
xchg
(bad)
ja
cmp
sub
sahf
sahf
dec
mov
les
adc
push
fild
in
pop
cli
pop
xchg
push
rcr
xchg
xchg
js
sahf
dec
add
daa
cmp
push
mov
(bad)
or
pop
(bad)
sub
sar
jecxz
clc
pop
cmp
mov
xor
mov
fist
cmp
outs
stos
adc
stos
pusha
mov
cmps
cwde
inc
mov
sub
mov
push
mov
call
icebp
or
and
dec
mov
(bad)
in
cwde
xchg
jge
ins
cmps
jbe
scas
mov
das
jmp
stos
jnp
mov
aaa
xor
rcl
shl
repz
std
xor
(bad)
sub
inc
cmps
popf
lahf
dec
mov
pop
mov
inc
enter
mov
xor
bound
mov
mov
enter
push
cld
xor
cmc
adc
cli
aaa
sbb
inc
mov
icebp
inc
cmps
xchg
(bad)
stos
pushf
pushf
jno
in
rcl
outs
cs
rcl
adc
dec
mov
int3
ds
je
es
int3
xor
jle
inc
scas
pushf
shr
jp
xchg
test
dec
aam
add
loope
mov
push
mov
and
sub
pop
mov
or
or
push
enter
cmp
push
jmp
pop
xor
aaa
xor
adc
in
sbb
pop
lock
cld
pop
(bad)
push
dec
pop
fcomp
push
stc
dec
rcl
mov
mov
rol
inc
retf
pop
xor
out
inc
aam
out
scas
mov
mov
ins
(bad)
js
mov
lods
nop
fwait
popa
ret
cmps
mov
jae
add
(bad)
in
clc
das
sub
in
(bad)
push
adc
push
icebp
push
mov
lds
adc
pop
xlat
and
adc
sar
sub
pop
mov
ret
lahf
cdq
jge
pop
in
mov
lea
int
and
cmps
cmps
mov
jns
jns
cmp
adc
push
test
gs
mov
pop
mov
xor
js
and
sbb
xor
daa
adc
and
leave
push
mov
mov
fld
loope
aad
loope
stc
add
and
or
sub
sti
and
jb
cmp
jl
sub
mov
fnsave
sbb
dec
add
and
lods
les
scas
mov
pop
and
das
cmp
retf
push
xchg
or
stos
xchg
push
push
imul
sub
stc
xlat
or
push
jno
lods
pop
sub
fnstcw
xchg
call
xor
add
aam
test
inc
inc
aaa
pop
xchg
jne
imul
dec
pop
out
gs
pop
adc
(bad)
inc
test
scas
sub
cmp
and
cmps
retf
push
cmps
gs
mov
xchg
inc
je
push
popa
dec
cli
das
popf
sub
dec
add
repz
xchg
sbb
xchg
mov
adc
call
sbb
add
jnp
ds
jg
imul
pop
scas
mov
sahf
mov
add
push
pusha
mov
adc
mov
jo
add
adc
mov
mov
lock
pop
test
jl
push
mov
pop
and
iret
and
dec
in
sub
ret
or
mov
mov
dec
sbb
add
sbb
xchg
cdq
not
int3
aas
mov
ins
(bad)
sar
cmp
jns
inc
cmp
dec
sbb
cs
sub
imul
int
jno
mov
(bad)
int
daa
pushf
std
push
ret
jl
mov
jb
mov
push
adc
jle
push
jno
sbb
out
push
imul
lods
or
leave
mov
iret
call
pop
sub
test
sti
pop
out
cld
mov
in
inc
cmps
movs
jp
adc
adc
mov
rcr
adc
int3
rcl
fwait
bound
sub
ins
lods
jbe
sbb
jle
jno
and
mov
dec
push
cmp
adc
add
and
push
sub
xor
repnz
cmp
sbb
push
ins
add
jle
push
mov
ret
xor
stos
dec
rcr
lods
pusha
sar
jp
icebp
int3
int3
iret
dec
mov
pop
dec
into
xor
(bad)
mov
das
lods
scas
imul
dec
mov
adc
sahf
xor
int
cmps
xchg
rol
jbe
stc
xchg
sahf
add
mov
lods
ins
adc
test
cmp
je
das
(bad)
jp
outs
and
jns
mov
in
aam
and
cmp
stc
xor
xchg
addr16
push
imul
std
int3
push
ins
wrmsr
test
aam
into
out
push
xor
pop
jg
arpl
push
pop
pop
jmp
pop
push
mov
mov
test
add
pop
not
cmps
or
mov
jecxz
cmps
xor
jmp
cld
push
pop
or
aam
pop
mov
popf
lea
fisubr
out
stos
xor
dec
test
retf
cs
cmps
std
out
call
add
in
cmp
retf
push
sbb
mov
jp
or
movs
or
and
mov
popa
mov
cli
mov
pop
or
scas
mov
sub
push
jnp
repnz
lods
jecxz
ret
hlt
bound
dec
pop
pusha
enter
inc
jecxz
xlat
inc
jl
movs
or
dec
xchg
inc
fdivr
cmc
add
mov
dec
ins
ins
sbb
mov
add
xor
jecxz
repnz
adc
sbb
and
xchg
mov
mov
pop
cmp
sti
repnz
add
mov
mov
mov
retf
lea
xor
jecxz
int3
mov
mov
imul
mov
sub
shl
and
mov
movs
clc
out
mov
sbb
sub
aad
jp
mov
test
inc
jae
out
cld
dec
xor
xabort
fwait
push
clc
aas
popf
jno
or
dec
in
jno
int3
(bad)
es
xchg
cli
mov
(bad)
jmp
out
or
fs
dec
in
push
mov
repnz
(bad)
pop
jp
xor
mov
jmp
(bad)
mov
sbb
push
shl
push
xor
enter
mov
mov
mov
jecxz
mov
inc
ds
les
loopne
(bad)
sbb
clc
mov
mov
add
hlt
sti
sub
adc
xchg
in
and
in
ficom
or
int
out
mov
leave
pop
popa
inc
sub
nop
js
mov
inc
lds
ss
or
xchg
sub
inc
out
std
call
xchg
sbb
mov
xchg
or
mov
and
dec
push
outs
outs
imul
leave
cmp
jns
jle
out
xchg
sub
mov
adc
popa
xchg
call
push
mov
mov
cmc
inc
dec
movs
std
inc
sbb
out
and
sub
xor
lea
stc
cwde
jl
add
outs
sub
ins
lahf
mov
es
jmp
test
outs
movs
cdq
aas
aas
ja
cs
scas
test
push
xlat
inc
out
xchg
sub
adc
inc
cmps
test
fidivr
push
mov
or
sti
jmp
loopne
retf
out
or
rol
mov
mov
push
mov
call
mov
in
pop
aaa
or
sbb
mov
mov
mov
add
jo
pop
mov
movs
sub
xor
xor
xor
gs
mov
sub
mov
mov
imul
(bad)
and
aam
ret
mov
out
loope
test
out
push
xor
clc
(bad)
push
or
add
mov
out
dec
outs
fmul
cmp
sbb
mov
dec
iret
imul
in
ror
jmp
sub
sbb
inc
mov
push
in
cmp
xor
xchg
mov
push
sbb
fsubr
in
inc
mov
xor
xchg
xchg
(bad)
fnstenv
outs
add
pop
sti
dec
imul
data16
out
sbb
mov
jmp
jns
xchg
shl
dec
fdiv
or
stos
push
dec
inc
gs
sub
jmp
mov
dec
in
mov
imul
sar
test
cmps
mov
pop
push
jmp
sbb
cmp
or
mov
lahf
icebp
aad
stc
add
sbb
sar
jl
jae
ja
pusha
aad
cmp
int
mov
cmp
leave
movs
mov
xor
dec
imul
stc
adc
dec
and
push
push
ins
bound
ja
scas
mov
push
jg
adc
push
xor
aam
in
sbb
xchg
mov
int3
das
pop
scas
xchg
jmp
es
inc
sti
add
pop
mov
mov
idiv
cli
jnp
sub
retf
arpl
mov
mov
xor
shr
fs
cmps
xor
es
jg
scas
enter
fs
pushf
or
shl
mov
mov
es
ss
rcr
mov
lahf
stos
(bad)
xchg
dec
retf
pop
jo
test
addr16
ret
jno
or
test
les
js
stos
out
cdq
call
adc
retf
jb
cmp
sbb
mov
push
(bad)
and
fcmovnu
sub
lds
sbb
pop
push
ret
outs
arpl
pop
out
xchg
fwait
mov
mov
jno
ins
cs
adc
std
xchg
mov
lahf
enter
fistp
aad
ins
(bad)
push
push
pop
or
adc
adc
jne
stc
sbb
sbb
ins
inc
jne
pop
retf
enter
aaa
and
xchg
mov
imul
popa
movs
rol
jmp
jl
test
push
mov
dec
xor
out
jnp
icebp
movs
aad
push
outs
inc
or
stc
fidiv
mov
nop
xchg
mov
add
jg
lods
aad
pushf
ror
(bad)
shl
jg
in
shl
aad
ins
out
ins
(bad)
jecxz
xor
sbb
call
sub
nop
sti
inc
sub
out
call
popf
jmp
push
pushf
adc
stos
adc
inc
or
daa
sub
sub
shl
popf
cwde
mov
call
adc
adc
and
or
xchg
test
mul
mov
retf
dec
cmps
push
xor
sbb
xchg
mov
retf
xor
movs
jecxz
jge
push
xor
retf
shl
addr16
aaa
mov
and
mov
lea
sub
neg
adc
cli
loopne
mov
xor
mov
pusha
int3
enter
aam
xor
mov
push
add
sahf
out
mov
add
adc
pop
xor
pop
lock
ffreep
pop
in
mov
mov
pop
cmp
ret
and
je
lock
ja
ds
fimul
push
cmp
in
lea
add
fiadd
mov
cmc
and
inc
(bad)
mov
ror
out
fxch
test
jmp
out
aad
loopne
retf
shl
mov
(bad)
sar
js
xor
mov
popf
push
lock
arpl
push
xchg
sub
xchg
shl
cmp
arpl
bound
sbb
sub
lock
jecxz
les
jl
cmp
and
cmp
fwait
push
mov
loope
mov
or
or
pop
(bad)
mov
out
mov
pushf
in
jbe
shl
jl
inc
and
sub
pushf
loop
icebp
xchg
pop
imul
or
mov
scas
jmp
and
fldcw
mov
mov
aam
sahf
es
mov
ja
jp
in
daa
pusha
shl
cmp
aam
mov
sub
out
xchg
jne
add
push
bts
sub
mov
cmps
retf
jmp
cli
add
mov
ins
xor
int3
or
je
aam
mov
rcl
lods
movs
ins
sub
int3
mov
jns
imul
dec
and
icebp
das
sub
das
in
mov
(bad)
mov
inc
inc
mov
dec
enter
pop
int3
push
arpl
lahf
std
dec
mov
jecxz
sub
js
inc
aas
mov
add
jp
popa
sbb
sub
repnz
lea
ins
test
bound
pop
clc
cmp
inc
push
add
jns
sub
inc
fist
loop
out
sbb
in
fs
ss
jae
gs
imul
(bad)
into
sub
mov
xor
test
and
xchg
inc
xchg
into
in
cli
xchg
push
ret
pop
pop
into
add
adc
(bad)
jecxz
xchg
cmp
cwde
xchg
test
inc
xor
xchg
push
inc
es
jg
and
in
push
pusha
(bad)
adc
jmp
and
push
pushf
xchg
in
popa
jnp
out
push
repnz
cmp
sti
(bad)
not
pop
dec
call
mov
pop
adc
xchg
aam
(bad)
enter
add
adc
cdq
push
stc
mov
stos
add
mov
mov
xor
outs
sahf
div
fwait
push
imul
(bad)
lds
inc
or
add
addr16
mov
ja
cmp
xchg
and
mov
call
jae
fwait
inc
adc
mov
sbb
enter
adc
adc
jo
call
cmp
aad
mov
les
in
leave
mov
sbb
mov
push
xchg
and
fcomp
dec
out
test
adc
xchg
ds
cmp
jno
mov
out
adc
sbb
or
(bad)
add
rcl
stc
jmp
gs
leave
int
popa
and
pop
js
mov
int3
pop
shl
mov
xor
test
lea
mov
push
call
inc
or
inc
popa
test
jecxz
cmp
jle
fidivr
lods
jl
cmps
ja
shl
(bad)
jno
mov
and
push
lods
fcmovne
jecxz
stc
push
dec
loopne
xor
and
test
mov
pop
lock
lods
xchg
mov
push
cmp
call
push
outs
call
daa
lock
data16
clc
fidivr
enter
in
pop
add
out
sbb
stos
jb
mov
jmp
push
adc
cmc
pop
push
scas
sbb
mov
fdivr
pop
es
inc
dec
adc
mov
popf
mov
sub
sub
adc
adc
push
mov
cmc
push
jne
inc
jae
xchg
pushf
pop
les
(bad)
(bad)
pop
sti
(bad)
int
mov
js
bound
(bad)
push
das
pause
add
mov
jle
dec
(bad)
xlat
test
dec
mov
retf
test
push
fstp
in
xor
mov
xor
jno
in
cmp
ins
add
test
mov
jmp
cmps
popf
and
das
es
lock
test
adc
inc
repz
xchg
push
repz
jb
push
fwait
pop
fs
pop
ret
sub
mov
pop
adc
dec
xchg
int3
out
pop
mov
xor
and
jo
or
icebp
cmps
cld
xchg
das
and
not
jg
ss
fiadd
aas
out
imul
push
bound
scas
cmp
and
data16
call
imul
or
in
cmp
shl
push
xor
(bad)
out
ss
mov
mov
out
jecxz
pop
add
jl
sub
in
mov
cmp
mov
retf
push
arpl
cmp
mov
xor
mov
mov
or
loop
sbb
mov
mov
adc
mov
retf
pop
fcmovu
ret
xor
inc
and
pop
std
outs
mov
sbb
inc
rcl
das
push
dec
pop
mov
push
call
cmps
pop
clc
and
jmp
xchg
push
test
xor
stc
std
rol
in
aaa
jb
in
lods
pusha
add
popa
iret
popf
or
sahf
std
lahf
int3
mov
sbb
clc
mov
sub
cmps
mov
jae
sbb
lahf
xchg
lods
cmp
mov
add
aaa
dec
sbb
movs
clc
ja
call
addr16
retf
int
popa
and
(bad)
call
cmc
jmp
outs
mov
sti
std
scas
(bad)
mov
stos
xchg
aam
mov
test
pop
cwde
mov
mov
dec
ins
aam
xchg
popf
pushf
sub
or
mov
es
hlt
push
je
push
(bad)
or
cmp
pop
js
jns
dec
retf
mov
rcl
repz
leave
pop
sbb
ds
pop
test
stc
mov
fmul
push
mov
push
push
add
mov
xor
dec
popf
scas
out
inc
shl
es
repz
jbe
cmp
popf
icebp
cld
mov
ins
pop
ins
xor
inc
rol
mov
adc
hlt
loop
cwde
enter
sbb
mov
es
push
not
pop
or
enter
jp
imul
jl
xchg
pop
xchg
stc
add
nop
int
lahf
cmps
jp
out
push
test
add
mov
mov
dec
cmp
pop
inc
adc
ds
or
in
push
inc
imul
loop
inc
xchg
mov
cld
add
xchg
sub
add
cmp
inc
jb
or
(bad)
inc
rcl
neg
retf
stos
fnstenv
adc
and
push
push
iret
pop
les
xor
idiv
fdiv
push
xor
hlt
adc
or
leave
cld
pushf
inc
stos
or
scas
or
inc
inc
test
pop
sbb
(bad)
sahf
adc
out
imul
pop
(bad)
dec
xchg
mov
mov
stos
outs
jae
adc
mov
retf
retf
out
shl
std
rol
nop
jmp
sub
jae
xor
outs
push
inc
retf
jno
jb
out
push
shr
call
outs
out
fwait
dec
xor
imul
mov
push
sbb
push
mov
sub
outs
cwde
stc
add
rol
cmp
xchg
out
in
add
int3
jge
add
lods
imul
movs
outs
inc
adc
cdq
jnp
test
retf
es
hlt
popa
xchg
aad
inc
loopne
shl
adc
add
dec
sub
shr
retf
pop
xor
mov
cmp
jg
pop
test
mov
fidiv
shr
inc
xchg
pop
jne
in
mov
xchg
daa
in
or
mov
mov
dec
and
pop
les
aas
adc
jo
mov
sbb
or
outs
cmp
xor
xor
mov
icebp
xchg
adc
out
xchg
push
stos
sub
dec
shl
xchg
cmc
inc
imul
cmp
cs
jg
inc
pop
add
xor
rcl
push
int3
inc
pop
in
mov
xchg
js
stos
mov
pop
retf
xchg
nop
adc
loope
mov
es
in
jecxz
sbb
in
cdq
or
dec
xor
mov
xor
add
in
ins
mov
push
xor
loop
mov
dec
cmp
stos
call
cmp
mov
call
sub
dec
sbb
push
loopne
mov
imul
and
outs
dec
pop
mov
adc
xchg
cmp
push
add
mov
mov
dec
lahf
rol
dec
jmp
mov
or
jp
mov
retf
pushf
cvtpi2ps
xor
xchg
xchg
cmp
xchg
pop
push
xchg
sahf
das
cs
lock
and
retf
dec
adc
xlat
je
xor
pusha
xchg
int
sahf
loop
pop
lods
cmc
cld
ins
stos
jae
mov
mov
daa
int
int3
call
adc
adc
mov
sub
xor
dec
mov
sbb
fld
push
ret
imul
pshufw
jp
ds
(bad)
das
cmp
mov
add
retf
add
xchg
clc
cs
nop
test
jno
das
mov
lods
sub
movs
lods
jge
iret
push
jbe
jecxz
or
xchg
stos
mov
cli
js
popf
popa
xchg
inc
xchg
sbb
test
and
cs
sub
outs
jl
mov
push
inc
xchg
imul
ins
push
call
lods
gs
and
repnz
push
add
lea
mov
sar
inc
sahf
mov
out
test
xor
fadd
or
sub
xchg
sahf
lods
jl
jne
imul
lea
(bad)
xlat
pop
mov
in
xchg
and
sub
scas
push
jnp
das
fnsave
fs
cwde
hlt
and
xor
jnp
icebp
mov
jmp
mov
addr16
sub
fwait
jns
cmp
or
sbb
(bad)
jle
xchg
lods
ret
push
xor
call
mov
clc
scas
sbb
js
jle
or
out
push
push
adc
fisub
popa
pop
sub
addr16
cdq
pop
or
movs
or
or
jne
inc
lds
and
xor
pop
cmps
cs
cmp
pop
mov
dec
pop
sub
xor
xchg
(bad)
jns
stc
jb
aam
cdq
xor
icebp
fst
fdivrp
pop
mov
add
xchg
and
ja
sbb
xchg
popa
idiv
sub
xchg
adc
jmp
jns
(bad)
mov
xlat
adc
add
xor
and
mov
pusha
gs
sub
and
xor
dec
add
ins
sbb
jnp
inc
or
ja
push
or
rcr
fwait
adc
cli
fld
sub
and
or
inc
mov
mov
xchg
stos
imul
fisttp
xor
add
push
sbb
cmp
cmp
iret
(bad)
stc
mov
dec
in
shl
in
fistp
ret
inc
ficomp
data16
arpl
push
sub
add
pop
adc
gs
stos
sti
xchg
jae
ret
sbb
loope
jge
fist
jno
retf
jo
inc
xchg
pop
jno
imul
xor
xchg
fdivr
shl
ret
mov
mov
mov
cmc
cmps
in
bound
xchg
ret
mov
xchg
push
mov
loope
mov
and
stos
rol
push
mov
fnstcw
pop
xor
jno
das
pop
adc
mov
out
rol
pusha
cs
push
adc
mov
retf
xchg
(bad)
mov
(bad)
sub
dec
pop
je
in
leave
xchg
leave
and
ja
push
adc
inc
adc
push
xor
mov
jge
jbe
dec
xchg
xchg
xchg
jmp
xor
pusha
jge
out
sbb
lds
fisttp
sub
repnz
add
xchg
retf
(bad)
out
sub
push
pop
dec
ds
outs
das
arpl
pop
hlt
jne
movs
mov
lea
fistp
mov
(bad)
or
loopne
fsub
out
ret
dec
pop
into
xchg
lds
ret
call
add
cmp
lock
out
enter
lock
enter
push
loopne
adc
shl
push
inc
sub
push
sbb
and
cmps
loop
(bad)
xor
and
adc
mov
cs
jmp
cmp
ret
dec
sub
xor
mov
xor
in
imul
nop
shr
addr16
push
sub
ins
sbb
inc
or
lea
sbb
or
push
adc
mov
jle
imul
jge
lods
mov
push
loop
clc
lods
call
inc
adc
inc
ss
xchg
(bad)
ret
bound
popa
add
mov
sbb
jae
lock
cmc
xchg
jl
xchg
mov
ret
mov
xor
div
push
dec
sbb
cmp
dec
push
mov
test
test
push
and
cmp
stc
mov
int
out
popa
or
or
mov
sbb
xor
adc
es
shr
jo
jbe
jmp
cmp
push
fisttp
jmp
inc
or
mov
inc
or
jae
dec
cs
mov
and
inc
emms
xor
test
nop
sar
sbb
enter
dec
xor
jnp
js
call
adc
repz
fnstsw
pop
imul
lea
jno
xor
push
sbb
repnz
hlt
mov
punpckhbw
inc
shr
mov
data16
mov
in
push
in
sbb
pop
sbb
jp
mov
aad
adc
mov
lods
fnstenv
and
clc
sub
push
and
pop
call
lock
lds
out
test
test
iret
addr16
dec
pcmpgtd
mov
xchg
xchg
jnp
jno
inc
adc
cmp
popa
pop
pop
mov
mov
call
pop
fcom
shl
or
dec
lds
inc
push
dec
in
enter
mov
ret
test
enter
jb
pop
sub
push
sbb
jb
sub
dec
sahf
enter
out
(bad)
jo
xchg
outs
scas
(bad)
mov
fisttp
add
xchg
mov
mov
lahf
int3
xchg
(bad)
lods
push
xor
mov
stos
out
enter
pop
addr16
int
fdivr
xchg
scas
jo
pushf
hlt
fwait
lock
sar
dec
pop
es
loope
mov
and
push
in
or
xchg
or
push
add
jle
dec
or
in
mov
push
adc
jno
push
cli
xchg
les
dec
jecxz
out
hlt
mov
jae
imul
push
add
push
mov
lods
fiadd
push
sbb
inc
daa
inc
or
sbb
fld
push
and
cld
mov
add
ins
sub
push
push
adc
test
test
ins
aaa
dec
clc
mov
add
inc
adc
vmwrite
inc
or
push
xor
lds
add
mov
inc
or
aam
lock
jns
popf
in
mov
lods
fcomp
mov
xchg
retf
adc
cmp
je
pop
sub
sub
jle
pop
or
test
xchg
push
popf
fsubr
stc
cmp
cmp
aam
fsubr
push
add
push
les
js
and
les
ins
or
int
pop
push
sub
mov
and
das
push
sbb
in
shl
add
mov
sbb
and
inc
imul
outs
cmp
out
rol
mov
jg
dec
adc
xchg
stc
mov
xlat
call
(bad)
mov
cmp
push
inc
adc
clc
neg
cmp
inc
push
dec
bound
pop
lea
bound
and
aad
lds
call
push
fcomp
aam
iret
inc
or
push
popf
push
xlat
movs
int
fsub
xlat
xchg
imul
aam
(bad)
fidiv
inc
in
cld
xchg
test
outs
add
cmps
jecxz
mov
mov
xchg
inc
rcl
jbe
sub
inc
adc
add
pop
jmp
inc
cmp
or
mov
mov
mov
xchg
dec
or
in
(bad)
mov
jbe
ja
mov
xchg
shl
ins
or
lods
call
inc
ficom
scas
sbb
mov
sahf
movs
repnz
retf
ins
sub
in
push
test
cli
(bad)
fcomp
xor
imul
out
jne
xchg
rcr
div
xchg
ret
ins
cmp
gs
adc
cli
cdq
jmp
lahf
iret
mov
mov
pushf
rol
movs
(bad)
mov
int
les
sbb
inc
add
mov
inc
movs
hlt
ins
xchg
mov
test
sub
cmp
mov
repz
xor
sar
dec
(bad)
pop
mov
loop
push
aam
jmp
(bad)
(bad)
clc
and
imul
test
push
pop
push
push
xor
add
je
mov
sbb
iret
daa
dec
cmp
sub
pop
cmovg
push
mov
ror
xor
sub
jb
inc
out
jg
imul
adc
jmp
cmps
dec
lds
or
jp
dec
sbb
or
retf
xchg
stos
jnp
scas
retf
ja
jl
addr16
push
push
inc
add
test
popf
stos
(bad)
call
lea
aas
pop
cmp
sbb
and
pop
adc
loop
mov
movd
imul
push
inc
lods
test
outs
adc
sub
inc
cmp
cli
sbb
inc
xor
shl
jbe
js
and
push
pop
push
adc
dec
sbb
loope
inc
rcl
outs
xor
jae
inc
add
xor
push
add
sbb
xor
push
adc
into
xchg
aad
mov
mov
int
out
mov
scas
xlat
lahf
hlt
mov
loope
jne
inc
adc
sub
sub
jne
dec
mov
repz
cmps
int3
mov
xchg
les
jbe
jle
div
repnz
mov
scas
into
test
mov
pop
sbb
push
sub
pop
adc
xchg
cmps
xlat
movs
lds
test
mov
out
nop
jp
cmc
mov
dec
pop
jns
inc
cmps
movs
rol
xchg
dec
cmp
fnstenvw
test
stos
iret
adc
aas
dec
sbb
xor
inc
repz
mov
inc
xor
pop
call
jecxz
(bad)
cmp
ret
adc
xor
cwde
lock
loopne
inc
add
mov
stos
cli
outs
cmp
or
add
outs
adc
pop
ins
cmp
outs
sub
sub
nop
in
shl
fisubr
call
dec
pop
pop
sbb
cdq
mov
repz
inc
xor
out
mov
mov
nop
aam
jmp
add
sbb
jb
dec
cmp
retf
mov
xchg
cmps
fnstenv
mov
loope
mov
out
mov
inc
or
or
outs
sub
stos
push
add
pop
repnz
mov
stc
mov
sbb
xlat
cmps
repnz
jnp
inc
in
mov
adc
mov
outs
in
mov
test
dec
push
dec
or
jecxz
leave
cmp
mov
mov
mov
imul
shl
push
(bad)
mov
and
loope
cli
xchg
icebp
inc
retf
outs
sub
imul
bound
sub
xor
push
sbb
stos
stos
shl
loopne
fsub
stc
popa
xor
jl
mov
outs
cmp
or
jb
sbb
and
adc
push
jle
jns
call
cwde
mov
cmps
retf
loope
(bad)
popa
mov
fld
pop
div
sub
(bad)
jae
sbb
sub
cwde
int3
nop
mov
imul
mov
mov
push
jb
jg
dec
mov
pop
sub
lods
call
add
mov
stos
(bad)
mov
mov
dec
mov
cmp
push
cmp
and
push
daa
inc
sub
sub
cmp
cmc
xchg
mov
add
in
repz
daa
push
pop
and
xor
pop
mul
push
xlat
(bad)
fcomp
imul
fistp
leave
mov
jge
inc
aas
jge
jo
mov
mov
cs
aas
sub
mov
int
shr
adc
sbb
cmp
lahf
jne
push
jae
outs
add
ja
push
out
mov
dec
sub
pushf
mov
cmp
sub
inc
out
mov
mov
or
jmp
fild
mov
cld
popf
mov
in
dec
and
push
push
and
pop
and
inc
adc
xchg
les
fimul
aad
dec
ds
xor
sbb
mov
outs
cmp
cs
mov
fwait
in
mov
aaa
dec
jmp
sbb
les
icebp
test
pop
out
inc
xor
push
mov
sub
fs
adc
rol
loop
fiadd
call
ret
mov
test
ret
add
ja
mov
xchg
icebp
stos
and
push
xor
nop
clc
popa
clc
mov
inc
or
and
out
stos
std
xor
mov
mov
fs
mov
mov
inc
int3
mov
jno
inc
pop
push
adc
adc
push
loope
ror
int
adc
mov
xchg
dec
push
pop
sbb
or
into
cmps
rol
(bad)
fnsave
ss
cmp
fdivr
inc
mov
mov
mov
mov
das
inc
cmovle
mov
xchg
rol
fs
das
inc
jmp
dec
add
fs
jmp
je
enter
or
jnp
push
and
or
nop
(bad)
mov
jae
push
movaps
int
ret
popa
mul
lahf
(bad)
xchg
nop
jne
push
add
pop
inc
cs
pop
pop
add
data16
pusha
xor
push
sub
cmp
jnp
dec
sub
or
jns
scas
clc
mov
add
cli
xchg
icebp
sbb
and
repnz
push
dec
retf
mov
sub
push
jmp
jne
jle
jne
jbe
sub
pop
push
push
into
mov
lds
lds
adc
lods
call
xchg
xor
es
rcl
add
ficomp
sar
retf
inc
in
push
aaa
jae
push
sbb
fdiv
mov
jge
jbe
xor
push
jle
xchg
xchg
rol
adc
je
dec
mov
dec
sbb
sub
pop
inc
add
add
push
adc
daa
pop
repz
dec
push
pop
mov
add
(bad)
cld
test
push
sub
sub
or
mov
outs
fisttp
or
call
sbb
pop
stos
cld
pushf
lods
cmp
xchg
cli
mov
in
clc
sahf
aad
adc
jo
xor
mov
data16
inc
or
mov
mov
mov
out
repnz
cmp
fldcw
jge
js
sub
xchg
mov
xchg
dec
mov
xchg
fisubr
mov
mov
mov
push
add
sub
sbb
dec
xor
push
out
fs
jnp
ds
sub
cmp
data16
sub
push
mov
sbb
ins
sbb
pop
aad
ret
xchg
ret
sbb
dec
rcr
mov
pusha
add
(bad)
(bad)
push
rol
adc
imul
aaa
jge
fs
xor
imul
pop
sbb
jns
dec
in
pop
or
cs
add
ret
scas
fist
add
and
mov
movs
xrelease
mov
das
mov
test
inc
cs
push
rol
mov
dec
cmp
cs
call
adc
dec
loope
add
test
push
dec
sbb
ins
and
cli
cmc
mov
lods
mov
sub
pop
aaa
push
mov
mov
in
ins
xlat
test
test
sbb
xchg
retf
jb
add
xor
pop
adc
and
jle
pop
cmp
shr
xor
sub
and
clc
popa
stos
mov
mov
xchg
(bad)
xchg
sahf
dec
cmp
push
(bad)
sub
inc
sub
jle
jle
jge
shl
shl
cwde
cmps
test
inc
push
inc
push
je
jle
out
push
sub
sub
lock
fbstp
cmp
or
sti
sub
inc
adc
xor
rol
scas
jg
call
mov
data16
leave
cmp
xor
sub
idiv
fmul
adc
xor
aas
xor
je
jp
jp
and
jnp
jne
or
push
pop
mov
push
dec
cmp
fcmove
pushf
in
mov
cmp
push
aad
push
mov
fsub
pop
xor
hlt
xchg
movs
out
popf
mov
dec
add
cmp
cmp
mov
mov
xchg
inc
push
or
push
or
out
call
ss
sub
je
inc
adc
popf
fist
dec
loopne
adc
jecxz
out
movs
icebp
mov
dec
add
ret
xchg
ror
adc
dec
ds
mov
aaa
push
sub
dec
or
fild
aas
xlat
stos
mov
cmps
fcomp
loope
loop
in
sub
push
mov
xchg
cmc
mov
jmp
and
iret
mov
mov
cwde
test
call
cmp
imul
mov
data16
js
jnp
imul
cmp
jb
push
xor
mov
popf
fcomp
shr
mov
mov
mov
jae
outs
cmp
dec
jmp
dec
sbb
in
mov
cmp
std
popa
das
push
sub
sub
or
sub
cmps
clc
jnp
cld
(bad)
mov
test
pop
push
xor
pop
lock
mov
push
pushf
int
shl
cld
push
pop
or
xchg
cmps
repnz
dec
pop
outs
xor
hlt
mov
xchg
js
push
add
leave
test
mov
mov
loopne
into
sub
gs
add
jns
dec
push
stc
(bad)
(bad)
fdiv
imul
popa
and
iret
mov
push
gs
push
cld
pusha
sub
mov
bound
inc
sbb
loope
retf
and
sbb
jnp
pop
sbb
jno
arpl
add
cwde
fnstenv
out
push
push
add
ja
jg
xchg
mov
inc
or
push
in
scas
enter
retf
mov
mov
mov
or
mov
xchg
jle
es
adc
sub
push
or
gs
inc
add
ret
(bad)
cmc
mov
xor
and
push
inc
add
mov
shl
mov
mov
adc
icebp
test
pushf
frstor
sbb
and
dec
push
add
adc
push
sbb
sbb
ror
dec
push
dec
add
rcl
adc
add
cmp
and
int
fisttp
int3
mov
movs
mov
movs
repnz
bound
jbe
pop
or
sub
pusha
dec
cmp
xchg
loop
scas
sub
imul
out
stos
sub
ror
stos
call
push
and
jmp
push
or
add
es
shl
add
sti
mov
sahf
rcl
lahf
mov
cmp
push
mov
adc
fld
scas
aam
test
push
sbb
imul
cmc
dec
cmp
les
push
adc
jg
pop
(bad)
repz
adc
mov
mov
fs
sar
fistp
and
dec
or
push
or
and
cs
loop
rcl
jl
jno
ins
cmp
mov
sbb
push
daa
jae
push
adc
pop
sbb
shl
cmp
cdq
fst
jne
pop
adc
pop
xor
add
inc
or
sub
int
inc
in
mov
add
mov
mov
mov
(bad)
jns
pop
sub
es
ja
popa
mov
push
push
add
loopne
xchg
ret
add
inc
jle
jnp
dec
out
scas
leave
xchg
stos
rol
push
(bad)
mov
jmp
mov
jmp
cdq
fnsave
pop
popf
fldcw
sbb
loop
fnsave
retf
jb
mov
scas
in
fwait
ror
push
add
cs
mov
cdq
mov
mov
and
js
and
and
cmp
dec
push
and
or
loop
enter
inc
xor
pop
sub
arpl
jb
pop
mov
pop
in
mov
jno
cs
mov
fistp
out
push
dec
push
pop
xor
scas
mul
mov
mov
es
loopne
dec
adc
pop
loopne
rol
mov
mov
xchg
fdiv
cmc
fs
adc
test
les
pop
push
pop
in
sbb
inc
leave
bound
push
xor
call
jp
inc
and
cmp
cmp
mov
imul
push
jl
ins
add
sub
mov
fcomp
stc
mov
mov
lock
xchg
sbb
inc
call
pusha
les
sub
dec
or
and
iret
mov
call
mov
fisubr
sti
sbb
jne
out
int3
mov
mov
push
fnstsw
stc
nop
out
mov
std
scas
aad
leave
mov
xchg
shl
inc
sbb
in
inc
xor
outs
push
jns
push
test
xchg
and
add
pop
push
das
jmp
pop
pop
and
adc
inc
adc
dec
es
leave
xchg
int
xor
adc
pop
xor
push
outs
sub
(bad)
pop
dec
or
push
sbb
push
adc
mov
mov
(bad)
pusha
in
xchg
xlat
xchg
test
imul
daa
jg
retf
inc
addr16
inc
pop
js
inc
mov
and
inc
std
or
and
inc
adc
aaa
push
xor
cwde
fdiv
dec
add
scas
and
leave
push
adc
inc
mov
test
pushw
repz
lods
int3
push
pop
pop
add
mov
fucomp
push
mov
xchg
jmp
cdq
loop
and
gs
jge
add
mov
inc
je
and
xor
(bad)
iret
dec
adc
pop
and
push
and
movs
dec
sub
inc
scas
sti
fadd
jmp
jb
mov
femms
cmp
mov
xchg
push
inc
shr
icebp
jp
add
jne
leave
ror
mov
inc
out
cmp
loop
jno
add
retf
fbld
je
ds
rol
jae
cmp
mov
sar
pop
pop
or
fsub
rol
rcr
scas
(bad)
jecxz
arpl
jmp
ins
ror
push
cmp
add
dec
jo
add
cdq
inc
(bad)
rdmsr
xor
jecxz
js
fsub
les
mov
imul
clc
mov
push
jl
jmp
mov
popf
icebp
int3
std
xor
pusha
int3
das
xor
push
dec
dec
cmp
pop
lds
mov
cmp
cmp
or
lock
popa
(bad)
fcomp
ret
mov
scas
and
fwait
xchg
rcr
cli
ins
push
clc
mov
dec
ss
gs
jno
mov
push
cdq
sbb
cmp
or
inc
add
lea
sbb
cli
adc
test
ror
inc
int3
jo
push
adc
jne
mov
outs
and
das
fcomi
adc
xor
cmp
lods
sub
in
outs
xchg
hlt
fsub
add
or
aam
shl
popa
je
inc
ins
push
fdiv
nop
pop
aam
jle
test
adc
add
in
test
in
sbb
das
loop
js
(bad)
adc
cmp
lods
sbb
or
sbb
add
inc
push
in
mov
movq
fstp
xor
pop
icebp
cmp
xchg
jecxz
not
pushf
cld
mov
adc
shl
js
cmp
mov
mov
std
and
xchg
dec
dec
pop
push
jbe
icebp
(bad)
aas
adc
sbb
jns
push
and
out
lock
and
mov
dec
sbb
lods
in
push
or
pop
inc
push
adc
into
mov
sysexit
dec
mov
fisub
or
xor
xor
push
sbb
sbb
loope
jno
mov
or
jo
inc
(bad)
mov
cmp
div
je
cvtdq2ps
xchg
jns
outs
mov
sub
dec
push
pop
ins
out
cmps
jbe
ret
repnz
jge
sub
lods
enter
jae
mov
test
xchg
mov
jmp
xor
jbe
test
inc
jo
jg
(bad)
fs
sub
fwait
adc
pop
push
xchg
fwait
mov
mov
es
aad
stos
dec
pop
xchg
mov
cld
mov
inc
movs
enter
shl
pop
pop
sub
and
push
pop
dec
ins
test
xchg
and
faddp
pop
leave
push
lock
popa
mov
and
xchg
repz
out
bound
fisubr
lds
pop
and
outs
jmp
call
mov
jp
retf
add
ror
xchg
or
in
cmp
fs
out
sbb
js
cmp
stos
(bad)
test
xchg
loope
mov
jle
mov
loop
inc
or
push
sar
inc
inc
lock
push
push
xlat
mov
(bad)
gs
outs
fadd
xchg
lods
pop
mov
sub
xor
push
xchg
lahf
je
fs
jb
mov
lods
leave
aaa
pop
and
dec
popf
popa
jmp
mov
mov
lock
lds
mov
cdq
push
fcmovnb
push
jp
iret
imul
inc
push
add
jecxz
sbb
imul
fs
mov
adc
pop
or
sub
push
ret
jmp
inc
add
mov
(bad)
adc
xor
inc
ins
or
xchg
mov
sbb
sub
push
je
pop
and
addr16
inc
test
inc
jno
je
sub
aas
push
sbb
cmp
and
inc
lods
rcl
mov
mov
jmp
pop
and
mov
ror
cmp
cwde
lods
push
mov
or
retf
pop
lock
fwait
mov
mov
mov
fmul
adc
jmp
adc
and
cmp
mov
or
jp
dec
jno
bound
test
and
sbb
ret
ret
outs
inc
adc
and
push
and
je
or
xor
sub
ss
push
mov
aam
mov
mov
jecxz
dec
mov
inc
fnstenv
shl
sub
jne
retf
push
(bad)
fwait
dec
and
jns
cmp
out
shr
push
ret
mov
add
cmp
(bad)
sahf
mov
scas
movs
lock
fisub
pop
jns
(bad)
mov
dec
out
outs
enter
loop
lahf
sub
or
add
rcr
xchg
adc
xchg
stos
test
in
mov
adc
jp
adc
jbe
pop
mov
and
mov
mov
pushf
test
cmp
pusha
pop
dec
push
push
xlat
pop
cmp
xor
dec
cmp
mov
pop
jns
cmp
inc
daa
pop
pop
xchg
int
add
push
(bad)
pop
sub
fs
outs
cmp
push
lods
and
dec
aaa
inc
and
test
push
ja
imul
add
mov
je
or
inc
inc
(bad)
loope
ret
push
ins
lods
push
add
inc
lods
xlat
std
inc
and
mov
dec
imul
cmp
sbb
hlt
jl
fistp
add
call
cwde
mov
sub
jbe
or
jmp
fst
push
pop
sar
sub
test
nop
call
sbb
and
xchg
cmp
lock
jl
jmp
(bad)
or
cdq
or
cmps
les
mov
ret
sar
mov
jl
sub
inc
(bad)
repnz
jnp
dec
inc
in
jg
aam
mov
scas
inc
call
es
pop
or
fbstp
adc
int3
adc
ret
dec
les
or
es
adc
pop
mov
add
arpl
sbb
enter
out
outs
xchg
test
sbb
in
jmp
dec
je
add
enter
std
sbb
push
call
and
loop
push
je
ret
push
mov
xor
cmps
cmp
clc
retf
(bad)
push
fidivr
and
dec
shr
sbb
ret
and
cmps
cmp
jle
hlt
or
bound
cmp
test
dec
xor
ja
add
push
jmp
mul
fild
push
shl
punpckhbw
call
ror
jge
push
arpl
or
sub
push
lds
push
pop
pop
mov
aad
and
or
push
ret
je
jge
and
sbb
das
sbb
test
(bad)
xlat
data16
(bad)
outs
cmp
rcr
stc
sbb
popf
jge
inc
push
sub
sbb
xchg
rol
mov
or
xchg
or
not
xor
test
lods
jbe
arpl
aam
xchg
lods
add
mul
in
push
call
mov
sbb
sub
push
push
lods
sbb
push
int3
pop
imul
push
int
inc
fild
lea
lock
pop
pop
gs
aad
sub
cmp
imul
clc
xchg
xor
jmp
in
inc
mov
jmp
aam
mov
ret
sub
neg
out
shl
cli
xor
stos
jnp
or
adc
sbb
xor
fisub
clc
inc
inc
sbb
repnz
pop
dec
stos
push
pop
jno
xchg
xchg
add
iret
(bad)
adc
inc
or
out
loop
inc
dec
inc
hlt
pop
pop
in
test
(bad)
cmp
outs
and
fdivr
sbb
dec
adc
hlt
or
dec
outs
dec
cli
mov
pop
pop
pop
(bad)
hlt
iret
pop
lahf
push
cs
les
push
out
sar
jns
add
test
movs
scas
cmps
mov
cmps
and
cld
sub
test
daa
sbb
sbb
(bad)
adc
and
sub
xor
test
mov
test
and
stos
push
jmp
into
(bad)
pop
adc
jecxz
sub
cld
loope
outs
rcr
jmp
ins
xor
jmp
sahf
pusha
sbb
test
test
dec
inc
or
mov
fyl2xp1
shl
sbb
jecxz
ja
dec
add
pop
shr
not
adc
(bad)
mov
rol
gs
jg
out
and
dec
cli
xchg
fistp
dec
mov
sbb
out
or
jne
es
push
pop
dec
aad
aas
in
imul
mov
xchg
gs
popa
mov
cmp
sub
aas
ror
push
pusha
add
ja
movs
retf
mov
cmp
imul
(bad)
mov
mov
and
call
inc
fnsave
mov
(bad)
out
inc
jns
(bad)
call
sahf
mov
xor
std
lods
and
sbb
lods
adc
std
outs
xchg
dec
scas
sar
xchg
cmps
mov
addr16
aad
xchg
jns
xor
sub
dec
adc
cld
mov
push
sub
sbb
and
std
(bad)
or
xchg
adc
(bad)
jp
xchg
xor
mov
dec
dec
xchg
shr
in
xchg
cmp
(bad)
out
or
rcl
cmp
adc
adc
mov
fadd
fiadd
int3
shl
movs
icebp
xor
jmp
mov
or
mov
jnp
(bad)
fld
xchg
mov
(bad)
lods
push
pop
arpl
mov
mov
add
fdiv
jno
mov
fst
icebp
cmp
mov
xrstor
adc
(bad)
ficom
mov
scas
ins
(bad)
fcmove
xor
lds
in
xchg
jmp
(bad)
push
cs
jbe
movs
icebp
xchg
test
dec
out
out
das
xchg
pop
dec
retf
aad
xor
std
(bad)
leave
xchg
add
pusha
imul
jne
add
stos
mov
lock
mov
mov
mov
cli
cmc
rcr
xchg
mov
xor
adc
inc
rol
sub
or
in
cli
adc
gs
sub
sbb
inc
xchg
or
aam
sub
sbb
adc
jbe
or
push
pop
xor
loop
adc
mov
(bad)
jmp
int3
xor
call
jmp
jb
dec
jbe
addr16
gs
xchg
retf
xor
(bad)
pop
out
fldln2
xchg
sbb
jmp
call
stos
mov
repnz
jne
daa
add
xlat
clc
xchg
and
test
ds
jmp
test
push
xor
stc
mov
mov
out
and
mov
dec
or
in
pop
(bad)
outs
bound
adc
sahf
and
dec
das
cli
test
xchg
stc
mov
mov
inc
jmp
sub
adc
adc
cwde
jge
and
jns
imul
gs
add
jecxz
sbb
stos
inc
test
sti
add
pop
jnp
xlat
cwde
retf
js
icebp
icebp
shl
cmc
gs
lock
jmp
mov
sahf
(bad)
popf
fmul
cmp
jnp
gs
adc
mov
push
add
mov
jns
outs
cli
adc
lahf
(bad)
stc
mov
test
adc
sub
add
lods
sbb
rol
pusha
pop
pop
je
dec
jno
ins
ja
int
into
in
push
sub
lds
dec
or
push
sub
jo
sub
sbb
sub
lods
inc
mov
pop
scas
cmp
test
ror
retf
inc
jl
xor
sub
cmp
adc
jo
mov
fstp
data16
push
inc
mov
push
cmp
jmp
mov
pop
mov
ins
add
js
dec
lods
inc
inc
mov
call
je
scas
aam
imul
mov
js
mov
push
xchg
push
sti
ja
and
push
gs
lods
cmp
jae
mov
nop
out
ret
xor
fucompp
and
mov
lds
add
sub
cmp
push
in
and
mov
loop
in
dec
adc
adc
jmp
int3
inc
clc
scas
imul
pop
pop
je
ins
dec
mov
jg
(bad)
jmp
jo
sti
js
fnstcw
in
sbb
pop
ret
idiv
retf
sbb
das
add
sbb
pop
aaa
popa
ror
outs
xor
push
mov
jl
jg
outs
fstp
and
xchg
sbb
js
mov
adc
call
jecxz
pop
das
hlt
push
dec
adc
cmc
popf
push
jo
cmps
clc
mov
add
sub
pop
mov
inc
les
adc
mov
leave
adc
sub
mov
shl
xchg
cld
adc
mov
shl
mov
mov
inc
outs
xchg
or
pusha
xor
arpl
sahf
xor
call
cmps
push
mov
pop
int3
adc
inc
pop
ror
xor
fistp
lea
mov
mov
inc
ret
into
(bad)
jecxz
sar
sub
out
mov
sbb
cmp
rol
add
je
dec
push
mov
xor
cmps
mov
in
fs
(bad)
call
pop
ret
dec
adc
cmp
pop
or
or
sub
push
dec
imul
ja
sub
ds
int3
jne
push
imul
inc
add
sub
lods
xchg
or
add
inc
(bad)
mov
dec
add
fnstsw
inc
sub
add
cmp
mov
pop
pusha
(bad)
and
mov
daa
xor
jb
pop
push
rcr
shl
pop
mov
jns
jecxz
rcr
rcr
in
jmp
xor
sub
test
addr16
std
cmp
dec
jp
sub
es
sahf
int3
(bad)
(bad)
test
lods
hlt
loopne
cdq
xor
inc
or
push
fmul
shr
xchg
cmp
gs
jo
xchg
push
dec
mov
int
adc
cmp
xchg
or
push
xchg
sar
jle
mov
mov
push
push
jae
add
in
enter
lods
fimul
and
je
imul
dec
inc
mul
push
sahf
test
in
jnp
mov
dec
mov
loopne
add
pop
dec
and
or
inc
inc
sbb
add
jp
push
push
popa
ja
dec
adc
mov
push
lea
test
mov
inc
daa
and
(bad)
outs
lahf
das
or
nop
fs
imul
lods
cmovl
sti
lods
adc
pop
sub
sti
mov
add
je
push
fcom
es
cdq
add
dec
push
out
add
jle
and
jae
mov
test
adc
cmps
add
pop
loope
(bad)
loopne
pop
push
sub
div
das
xlat
jmp
outs
jmp
test
add
out
mov
lds
sub
push
or
cwde
sbb
cld
mov
jle
cmp
add
mov
pushf
xchg
cld
(bad)
pop
cwde
pop
bnd
hlt
push
adc
arpl
jg
mov
jmp
add
out
jp
aas
jge
push
adc
fisttp
push
jge
js
fcom
ja
cli
xchg
dec
js
jbe
xor
sub
add
arpl
stos
xchg
and
enter
pop
arpl
dec
add
call
sbb
repz
and
and
cmp
aas
push
jb
into
fwait
ret
xchg
(bad)
cmp
mov
shl
xchg
sbb
xchg
mov
addr16
mov
imul
inc
mov
aas
das
js
push
mov
jo
cli
or
jnp
std
adc
stos
sbb
mov
mov
jmp
int3
cli
jo
mov
pop
adc
cld
pop
jge
xor
dec
pop
or
inc
retf
jne
mov
(bad)
inc
push
inc
fisubr
mov
mov
pop
aam
adc
(bad)
into
fisub
sub
mov
push
pop
loope
test
pop
lahf
sub
aaa
push
mov
daa
lods
xor
xchg
das
push
rcr
out
and
jnp
test
cmp
xchg
(bad)
mov
xchg
int
push
inc
cmp
inc
or
xchg
hlt
outs
mov
cmp
ret
rol
ret
sbb
sbb
js
mov
mov
inc
adc
mov
ins
and
retf
popa
inc
mov
inc
xlat
call
jo
pop
push
adc
ror
fs
or
clc
add
add
push
adc
xor
jns
fisttp
out
shr
das
xchg
addr16
or
call
or
pop
adc
fdiv
ja
sahf
clc
aas
or
ins
out
ins
loopne
call
jno
fwait
out
ficomp
cmp
lahf
cmps
ins
shr
dec
cmp
sbb
cmc
xor
xor
movs
mov
shr
leave
sar
shl
sbb
push
enter
sahf
xchg
cmp
cmp
je
icebp
and
ss
fmul
jmp
sbb
test
dec
push
mov
mov
sbb
out
gs
stos
adc
adc
jbe
sub
cli
dec
jo
pop
mov
mov
inc
push
imul
mov
fiadd
mov
dec
jns
ja
dec
ss
scas
jmp
inc
mov
ds
loop
dec
call
dec
and
mov
dec
shl
and
repz
or
cmps
cmp
push
or
pop
js
iret
dec
cmp
ins
jno
in
xchg
adc
jnp
ja
es
dec
xchg
int
inc
pop
loop
cmp
push
in
dec
pop
in
test
or
popf
push
(bad)
daa
mov
std
in
cmp
addr16
and
scas
jmp
mov
sahf
or
pop
adc
(bad)
(bad)
jb
push
inc
push
outs
jg
add
sbb
pusha
sbb
jl
ss
or
inc
push
fs
ficom
mov
mov
push
pop
lods
jns
test
lds
ss
inc
call
and
mov
data16
pop
rcl
div
outs
fwait
pop
fcmovnb
dec
sbb
mov
retf
fwait
pop
pop
jbe
sub
pop
dec
fidiv
add
hlt
loope
and
sbb
mov
and
adc
rcl
(bad)
loope
jbe
xchg
(bad)
pop
dec
mov
pop
sbb
fild
cwde
xor
and
pop
lock
fimul
aam
js
pop
add
and
lahf
jb
leave
cmp
mov
clc
dec
paddsb
or
loopne
(bad)
mov
add
fs
inc
sbb
adc
retf
or
popf
in
jnp
cmp
push
repz
dec
jns
xchg
adc
sub
dec
daa
sub
nop
sar
xor
movs
mov
xchg
push
shl
out
call
aas
xor
fisub
(bad)
fsub
mov
repnz
and
into
mov
int
mov
das
push
dec
jmp
push
mov
mov
xchg
test
xchg
mov
mov
std
pusha
sbb
and
(bad)
mov
ror
sub
loopne
popa
scas
hlt
lods
test
out
ins
cmp
mov
mov
and
sub
out
push
xchg
sub
ficomp
jnp
jle
and
call
xor
fidivr
stos
nop
adc
ret
mov
sub
xor
dec
aam
push
inc
pop
inc
lods
sbb
lods
push
cs
stos
mov
xor
and
cmps
out
mov
jmp
jecxz
adc
mov
jb
cdq
je
mov
mov
push
test
cs
cwde
adc
mov
adc
ins
inc
cli
inc
pop
push
and
mov
fstp
cdq
or
dec
pop
dec
scas
pop
(bad)
shl
aam
sbb
and
imul
mov
in
xor
into
jmp
mov
cmp
mov
push
adc
jne
xor
gs
rcr
jne
bound
sub
dec
jecxz
retf
or
dec
retf
out
out
pop
inc
imul
cmps
jb
adc
outs
sbb
mov
loope
es
sahf
pop
out
cmps
lea
in
mov
int3
xor
test
adc
jmp
leave
mov
cmps
pop
push
push
(bad)
std
mov
rol
or
in
add
cs
mov
xchg
test
inc
fld
xor
iret
add
lea
test
js
or
mov
pop
xchg
inc
ret
jae
jne
mov
(bad)
pop
and
and
lods
mov
mov
test
mov
pop
aam
fisttp
cmp
pop
enter
inc
outs
out
or
adc
or
outs
inc
adc
and
or
ss
push
jl
repnz
xor
leave
dec
cmc
inc
sahf
bound
inc
xchg
push
cmp
jnp
sub
cld
fistp
cmp
and
xor
mov
cwde
pop
mov
fiadd
pop
jp
push
fdiv
or
jecxz
fldenvw
rcr
call
pop
cwde
pmulhuw
add
pop
pop
repnz
xchg
jne
arpl
gs
ror
dec
cmp
inc
jns
mov
fcmovu
scas
push
pushf
fst
push
call
mov
cmp
ins
fimul
je
cmove
jecxz
mov
aas
push
jg
push
xchg
test
idiv
mov
pusha
test
and
sub
inc
leave
mov
invd
xchg
out
cmp
xor
mov
push
adc
ja
sbb
sbb
add
test
cli
lods
not
jns
xchg
dec
repz
mov
mov
pop
pop
mov
mov
inc
pop
jo
sbb
jns
or
lods
xor
scas
xlat
mov
jp
pusha
and
icebp
mov
push
mov
idiv
sbb
push
mov
or
js
ret
aam
sbb
in
retf
jp
cmp
mov
jge
sbb
jg
jge
inc
bound
mov
pusha
add
add
test
mov
sub
add
adc
xor
push
repnz
and
push
jl
cld
and
mov
mov
fcom
add
pop
call
jle
or
jmp
test
mov
add
ja
movs
pop
push
cli
and
or
mov
pushf
cmp
fisub
mov
jne
mov
lock
xor
cwde
mov
cmp
enter
ds
dec
and
mov
out
pop
cmc
mov
pop
test
sbb
test
cld
lea
shr
mov
jnp
neg
fidivr
mov
sub
pop
dec
stos
gs
std
jmp
or
jnp
sbb
mov
pop
sub
dec
jle
fwait
inc
dec
or
movs
and
and
sar
pop
xor
sub
or
out
mov
rol
loope
mov
dec
sbb
leave
xor
and
sahf
inc
adc
add
sub
nop
xor
push
pop
je
test
jno
xor
xchg
and
aas
add
aas
dec
mov
in
lods
sub
ret
div
icebp
add
arpl
lock
xchg
popa
or
test
lahf
std
xchg
(bad)
ins
retf
in
cmps
je
cdq
fisttp
jb
call
out
popa
outs
push
inc
loopne
sub
add
repnz
jmp
jmp
fmul
popa
and
pop
adc
dec
push
xchg
test
dec
jne
test
test
ret
dec
icebp
cmp
adc
fistp
mov
xchg
addr16
jmp
sbb
gs
lea
or
push
mov
and
test
lahf
out
and
add
(bad)
in
in
push
movs
sub
aad
adc
adc
mov
xchg
jo
xchg
loop
and
or
dec
retf
jb
cli
cs
pop
dec
gs
(bad)
cmp
adc
mov
bound
sub
adc
les
outs
movs
ja
push
sbb
je
repnz
mov
inc
loope
adc
ret
push
adc
repz
adc
mov
dec
jne
pop
mov
sbb
mov
mov
popa
xchg
in
mov
call
cdq
call
sbb
shl
sbb
mov
jmp
inc
movs
mov
pop
jle
lock
pusha
mov
jae
out
push
aam
(bad)
stos
sub
cmp
inc
mov
test
or
cld
std
loop
int
and
fisttp
cmp
hlt
repnz
mov
(bad)
xor
shl
pushf
aam
inc
fwait
out
mov
cmp
mov
cmps
jg
loopne
inc
pop
add
push
nop
adc
push
pop
cmps
pop
mov
pop
enter
out
mov
jmp
pop
mov
lds
mov
and
adc
es
xchg
pop
inc
xchg
jl
adc
(bad)
loopne
je
pop
lea
cmps
mul
xor
mov
es
jns
mov
push
aas
cld
loop
das
cs
(bad)
xchg
push
popa
inc
xchg
mov
shl
cmp
push
enter
xor
sub
and
cmps
jbe
and
gs
add
pop
sub
aaa
movs
jo
outs
and
mov
sbb
cmp
xchg
pop
jae
or
jnp
clc
bt
clc
mov
and
and
movs
sub
out
(bad)
(bad)
and
pop
xchg
dec
pop
push
(bad)
pop
test
stos
shl
pop
mov
pop
pop
mov
jl
inc
push
in
cdq
(bad)
shufps
or
add
pop
jg
fwait
adc
xor
test
xchg
aas
dec
xor
xor
adc
clc
cmp
dec
aas
or
popa
push
mov
fimul
adc
sbb
inc
push
inc
add
repz
push
outs
into
inc
mov
fidiv
adc
jmp
imul
push
mov
neg
hlt
retf
stos
clc
xor
add
xchg
mov
stos
cmp
push
and
int
arpl
xlat
ss
mov
loope
dec
add
adc
jb
pop
(bad)
sti
add
mov
push
das
inc
and
aad
inc
sbb
sbb
pop
or
sbb
mov
aaa
shl
mov
dec
sub
enter
ret
cmps
xchg
std
mov
aaa
sti
sub
es
xor
bound
push
push
dec
cli
or
test
push
xor
jmp
mov
lods
mov
imul
xchg
stos
jmp
jp
rcr
xor
mov
stos
mov
push
enter
inc
mov
sub
popf
out
mov
arpl
cmp
sti
mov
lds
ins
gs
adc
jmp
ret
mov
in
in
fs
jmp
jg
fldcw
add
sbb
dec
fsub
adc
cmp
sub
fbstp
push
ja
mov
mov
adc
in
div
out
call
mov
retf
mov
pushf
pop
in
add
fwait
sub
sub
(bad)
mov
fwait
and
iret
xor
loope
dec
es
aad
add
sub
pop
mov
lods
scas
mov
xchg
aam
and
ins
add
xor
push
mov
pop
or
test
das
ja
out
fiadd
cmc
test
pop
std
into
fsubr
xor
ins
xchg
in
sbb
(bad)
sbb
ror
and
ds
test
adc
lea
jbe
clc
mov
fwait
push
clc
cmp
test
bound
leave
jno
pop
pop
jne
addr16
adc
sub
pop
fwait
cmp
mov
loopne
mov
daa
cmc
mov
inc
mov
pop
mov
mov
sub
lock
fmul
(bad)
test
xchg
and
stos
aas
bound
mov
ds
mov
int
rcr
mov
add
dec
or
dec
adc
jnp
dec
loop
retf
sub
mov
adc
cwde
imul
lods
addr16
aas
jnp
mov
xchg
cli
es
call
cmp
in
scas
jmp
sbb
enter
push
xlat
xchg
mov
xor
lds
mov
pushf
mov
hlt
popf
jmp
call
push
clc
outs
jecxz
(bad)
mov
out
outs
sbb
cmp
dec
mov
and
sbb
pop
shl
or
fsubr
sub
or
sbb
jbe
and
cmp
or
repz
dec
sbb
cs
or
push
or
dec
sbb
daa
pop
add
add
fisubr
mov
loopne
repnz
add
inc
add
mov
push
inc
sbb
daa
arpl
jns
leave
mov
mov
sahf
int
fistp
push
outs
cmp
cmp
push
push
cmp
aaa
push
add
push
sbb
adc
pop
sub
fs
mov
test
push
test
mov
fistp
lods
lds
in
xchg
int3
imul
pusha
and
pop
gs
pop
(bad)
sub
jbe
pop
pop
inc
or
and
push
or
ins
sbb
pop
push
push
sbb
adc
jge
stos
ror
cwde
int3
sub
sbb
mov
cdq
iret
mov
fsubr
push
cli
xchg
stc
call
push
adc
push
adc
xor
imul
push
imul
cmp
jne
inc
sub
ss
sar
mov
mov
inc
add
arpl
inc
div
sbb
add
dec
(bad)
sub
dec
sbb
xlat
mov
dec
(bad)
mov
cmps
into
mov
test
jne
sbb
ror
sbb
jae
jno
push
xor
pop
and
adc
pop
je
mov
sub
ins
xor
and
(bad)
mov
xchg
mov
int
mov
push
ins
rcl
push
aaa
inc
adc
adc
das
push
mov
and
cmp
cmps
rcr
fistp
daa
push
and
push
jmp
mov
mov
cmp
out
mov
stos
cmps
into
mov
mov
xchg
dec
sub
or
lock
rcl
xor
mov
adc
add
test
(bad)
into
call
dec
or
cmp
push
retf
xor
icebp
test
movs
mov
mov
test
pop
jmp
bound
jle
int3
adc
xor
xlat
xchg
push
jmp
push
xor
xchg
fsubr
out
mov
xor
push
and
sbb
xor
cdq
cli
xchg
icebp
mov
les
aas
jnp
cs
shl
cli
gs
inc
push
push
push
add
inc
add
dec
sbb
addr16
in
out
outs
cmp
pusha
sub
jnp
ins
adc
jmp
call
push
ds
xor
les
dec
(bad)
xor
push
pop
jae
pop
sbb
out
in
jne
iret
xchg
loope
call
mov
fidiv
cmp
popa
out
xchg
stc
call
imul
popa
aas
dec
sbb
aas
jle
addr16
mov
popf
push
loopne
fistp
fucom
xor
mov
int3
mov
mov
mov
iret
lods
mov
mov
lods
in
in
repnz
dec
std
bound
inc
push
inc
lods
out
xchg
iret
mov
into
lods
movs
lock
xor
sbb
int3
je
dec
out
lds
dec
pop
inc
add
test
lahf
cld
lods
clc
and
dec
xor
jg
imul
test
test
sub
push
xor
inc
and
test
mov
stos
cld
scas
jmp
(bad)
in
lock
sbb
pop
xor
daa
pushw
jle
je
mov
mul
mov
(bad)
icebp
test
test
into
xchg
(bad)
scas
int3
xchg
rcl
cmp
jns
movs
rol
outs
cs
cmp
or
mov
pop
or
mov
mov
adc
mov
call
mov
call
dec
cmp
loopne
popa
cmp
sbb
bound
imul
shl
ins
sub
popf
call
hlt
mov
mov
scas
hlt
popa
or
inc
adc
push
sbb
sbb
je
push
sbb
push
ds
and
loope
loop
int3
cwde
xchg
test
xchg
mov
stc
sub
push
mov
iret
mov
into
lods
movs
lock
ror
jmp
fldcw
retf
ja
je
push
jae
jle
push
pop
dec
or
sbb
xor
pop
je
cmc
(bad)
imul
xchg
fsubr
jp
and
call
xchg
mov
xchg
lds
test
mov
cmp
cmc
adc
int
out
jge
sbb
pop
push
ror
pop
cmc
or
push
add
xchg
in
pop
or
xor
pop
and
push
aas
pop
or
test
repnz
add
es
sub
lods
and
cmp
add
push
add
cwde
sar
mov
xlat
sahf
jmp
scas
fild
pop
and
pushf
lds
xchg
movs
div
and
scas
fisttp
stos
mov
stc
call
mul
retf
dec
sub
imul
mov
mov
mov
aas
lods
retf
cwde
fcom
aam
sub
cmove
iret
movs
int3
scas
mov
push
js
push
push
adc
int3
fmul
mov
lods
not
es
cmp
movs
div
test
test
(bad)
fidiv
add
pop
cmp
lahf
mov
mov
cdq
retf
repnz
fisubr
cdq
cli
mov
les
xchg
mov
mov
js
jl
repz
mov
xchg
maxps
fnstenv
mov
mov
xor
add
push
and
shl
ror
mov
call
sbb
daa
arpl
lods
sti
ins
sub
sub
dec
pop
push
retf
push
xorps
clc
mov
in
test
cmps
mov
jp
movs
int
mov
push
inc
shl
mov
xchg
inc
out
(bad)
jl
jg
jns
sti
pushf
jmp
aad
mov
lods
cmps
iret
mov
mov
lods
iret
xchg
ret
iret
xchg
ds
xor
iret
mov
and
sar
cmp
sub
cs
sbb
pusha
adc
div
push
cli
sbb
mov
cmp
jne
dec
js
jle
call
dec
jmp
ds
sbb
addr16
cmp
and
out
cli
lods
mov
neg
cmp
xchg
mov
lods
call
add
fwait
xlat
mov
cs
push
mov
mov
inc
adc
arpl
fdivr
mov
jno
push
adc
sar
mul
(bad)
mov
cdq
mov
mov
and
aam
call
or
cmp
jmp
ins
retf
mov
xor
stos
shr
pop
push
lahf
rol
mov
out
mov
inc
sub
mov
adc
sbb
int3
jo
jl
xor
cli
imul
stos
enter
das
pop
adc
jg
push
mov
mov
mov
stc
xchg
cli
cdq
fmul
into
popf
fnstcw
or
jne
int3
movs
rol
mov
add
inc
or
inc
aaa
jle
mov
mov
(bad)
ficomp
dec
push
jne
jecxz
in
mov
fdiv
data16
adc
leave
lea
jl
pop
add
sub
push
jge
mov
inc
xor
mov
sahf
into
mov
mov
adc
inc
cmp
push
pop
(bad)
ins
sbb
and
ja
xchg
mov
xchg
jmp
in
xchg
add
extrq
jns
mov
icebp
jmp
test
ret
pop
enter
scas
cli
inc
out
cdq
rcr
cmps
loop
retf
sub
xchg
std
mov
adc
inc
bound
fs
add
imul
or
pop
daa
jge
in
test
fwait
iret
lea
movs
loopne
clc
fs
rcr
cmc
mov
int3
xchg
sub
jecxz
ret
xchg
fistp
or
push
data16
jnp
pcmpeqw
cmp
pop
add
adc
mov
mov
mov
add
push
cs
dec
and
or
mov
aaa
jae
jnp
jecxz
sar
cmp
pop
add
xchg
neg
or
cmp
jnp
mov
mov
lds
mov
cmp
push
pop
add
dec
ds
(bad)
imul
jle
mov
rcr
sbb
pop
sub
xor
or
jns
jb
push
sbb
pop
or
movs
xlat
jge
pop
(bad)
xchg
xchg
out
mov
cld
xchg
mul
or
jne
jmp
test
mov
pusha
aaa
sub
sti
sbb
push
dec
adc
jge
shl
jno
dec
adc
dec
sbb
xchg
out
mov
cmp
arpl
push
push
cmp
or
pushf
jmp
loop
xor
js
pop
lods
mov
loop
jmp
imul
adc
imul
mov
clc
nop
repz
ret
(bad)
mov
lahf
int3
mov
lods
aaa
pop
sub
pop
std
push
or
cdq
xchg
xchg
out
pop
inc
adc
cld
mov
ja
push
add
call
(bad)
in
pusha
cmp
xchg
ret
ret
or
jnp
pop
pop
pop
sbb
add
rdmsr
data16
adc
cmp
arpl
inc
stos
mov
jmp
sbb
sub
pop
or
inc
sbb
pop
sbb
outs
sbb
jecxz
ror
mov
mov
(bad)
les
std
jmp
in
sub
add
add
xchg
movs
div
jbe
mov
(bad)
nop
(bad)
mov
mov
xchg
push
add
inc
xor
rcr
pop
mov
or
inc
dec
xor
retf
lock
leave
xchg
or
outs
cmp
arpl
pop
or
in
rol
cmps
hlt
jo
cmps
cmp
dec
push
mov
push
rol
in
inc
jns
data16
cmp
xchg
imul
mov
push
dec
and
push
out
xchg
(bad)
push
les
ret
sbb
mov
(bad)
cmp
add
cs
and
dec
jg
cmp
inc
jnp
jmp
not
inc
or
mov
test
add
mov
mov
and
dec
popa
sbb
ins
add
push
cwde
adc
pushf
je
shr
mov
sub
sbb
scas
xor
(bad)
inc
popa
inc
into
fst
push
sbb
xor
add
push
dec
sahf
mov
mov
push
jne
add
cmc
retf
lahf
fcomi
push
add
adc
xor
jns
jb
and
mov
stos
inc
mov
sub
daa
retf
cmps
inc
ret
inc
ret
js
pop
test
cs
add
test
or
push
jmp
add
lds
mov
bound
(bad)
jo
mov
dec
jge
int3
jg
jmp
fs
sahf
scas
mov
xor
in
mov
movs
mov
sbb
and
mov
fidiv
js
jne
jne
adc
(bad)
ins
popf
mov
(bad)
push
pop
jnp
jne
pop
test
leave
cmp
cmp
(bad)
sbb
fcmovbe
push
pop
fdivr
mov
mov
idiv
mov
dec
xchg
movhps
enter
or
mov
xor
inc
daa
(bad)
in
aam
mov
dec
out
inc
pop
lea
mov
pop
mov
mov
dec
loopne
aam
sub
leave
push
dec
pushf
in
mov
das
cmp
push
xor
arpl
(bad)
fsub
add
xchg
lock
dec
hlt
xchg
sub
ins
out
cmp
inc
jp
and
lahf
xchg
jl
xchg
push
pop
adc
lds
add
jmp
push
popa
dec
push
loopne
lods
mov
ja
das
push
fwait
retf
mul
call
dec
push
mov
push
push
adc
stos
push
adc
pop
ins
test
(bad)
(bad)
cmp
inc
fcmovnb
(bad)
aam
pop
lahf
data16
data16
sub
and
sub
in
popf
xchg
mov
dec
(bad)
frstor
adc
pop
jecxz
xchg
mov
push
jne
jb
add
mov
fcomp
or
pop
mov
push
cli
les
dec
jl
and
fstp
in
movs
adc
push
push
cli
jnp
or
repnz
sub
pop
iret
sahf
inc
sub
jnp
xchg
jp
test
loopne
cmp
pop
lock
rcl
pop
outs
xchg
mov
cmc
stos
(bad)
imul
loope
and
mov
jp
mov
push
adc
sbb
inc
cmp
inc
rol
push
push
ss
scas
mov
rcr
sub
dec
jp
es
enter
inc
js
sahf
push
in
movs
and
push
or
add
jb
sti
cdq
test
es
test
add
xor
cdq
and
lahf
aas
pop
sub
and
das
inc
cmps
sti
push
lea
clc
push
push
push
fdiv
mov
pop
jbe
and
adc
xlat
xchg
into
ins
cmp
and
pushw
aas
or
sbb
and
pop
mov
dec
bound
adc
sbb
cmp
fs
(bad)
adc
and
(bad)
push
push
es
test
int
xchg
ins
in
mov
imul
call
mov
add
test
leave
push
sub
xor
popf
mov
scas
cmps
cld
and
lods
mov
stos
test
mov
xchg
ja
dec
sbb
cwde
jae
mov
jmp
sbb
fdiv
clc
sbb
gs
xchg
push
or
push
and
jge
ins
cmp
stos
push
xor
mov
in
or
push
ins
xor
dec
fidivr
test
or
xor
movs
(bad)
test
sti
retf
sbb
cmps
in
sub
mov
(bad)
ds
sbb
mov
xor
and
jmp
adc
lods
lock
imul
outs
xchg
int
xor
int
or
(bad)
or
pop
jecxz
jmp
and
dec
xchg
mov
inc
fiadd
je
ins
push
dec
or
in
ja
add
inc
pop
int
inc
mov
pop
ret
cmp
aam
mov
icebp
push
clc
sbb
jmp
and
or
push
retf
pop
call
push
data16
lea
aas
and
ds
add
iret
int
mov
or
shl
in
jl
jno
rol
push
test
or
and
in
mov
leave
test
cmp
loopne
pop
stos
inc
loope
dec
inc
push
cmp
inc
lock
add
xor
add
inc
sbb
int3
mov
fstp
lahf
add
(bad)
mov
pop
jmp
je
les
mov
mov
lahf
xchg
xor
fild
push
or
mov
inc
ror
(bad)
loop
push
(bad)
cs
jae
aaa
not
mov
sbb
ret
pop
repnz
or
shl
imul
cmp
and
rol
lods
in
push
push
cmps
loope
mov
pop
mov
scas
lock
and
out
scas
(bad)
xchg
xchg
int
(bad)
out
pop
sbb
mov
pusha
cdq
add
(bad)
loopne
or
addps
in
xchg
and
(bad)
xchg
jg
xchg
ret
test
cld
pushf
dec
jmp
push
ficom
pop
mov
out
js
xor
in
cwde
jae
shr
push
xchg
lods
clc
jne
shl
or
test
rol
sbb
sbb
sub
mov
jbe
mov
retf
mov
mov
outs
mov
(bad)
jg
daa
hlt
push
xor
(bad)
clc
out
sbb
inc
pop
lock
mov
or
bound
mov
inc
rcl
leave
fadd
loopne
lods
std
add
(bad)
(bad)
cmp
dec
test
cmovns
dec
(bad)
sub
cmp
(bad)
test
and
cld
pop
aam
push
fwait
pop
mov
cmp
call
je
ret
dec
ja
cmp
(bad)
enter
pop
into
jnp
in
xor
push
mov
fidiv
add
cld
sub
mov
push
jb
fldcw
and
mov
ins
icebp
and
(bad)
xchg
pop
adc
call
retf
xchg
xchg
leave
mov
rol
sbb
jne
pop
jmp
jl
outs
jo
sub
jno
jle
std
dec
cld
ret
jmp
xor
cmps
push
aam
rcr
(bad)
mov
iret
cmp
adc
cmps
ins
push
fild
or
mov
mov
mul
and
xor
les
mov
pop
sbb
jo
or
leave
ror
cmp
mov
inc
outs
mov
call
inc
mov
loop
push
test
stc
lea
jp
jno
hlt
mov
jmp
mov
or
pop
add
outs
out
sub
adc
mov
cmp
jmp
fcomip
call
cmp
cmp
xlat
out
aam
mov
sub
or
fidiv
jo
shr
mov
jnp
dec
shl
outs
mov
cmp
or
inc
and
or
(bad)
mov
int
pop
js
aas
cmp
jns
lds
out
jmp
aaa
mov
icebp
push
dec
lods
mov
sti
xchg
xlat
(bad)
pusha
fnsave
outs
call
loopne
(bad)
int3
push
test
mov
mov
daa
pop
scas
mov
pop
and
mov
sar
(bad)
push
xor
jb
retf
jbe
mov
outs
jg
sbb
fiadd
mov
dec
dec
xchg
std
add
loopne
mov
pop
stc
add
add
jnp
ror
xor
and
ja
add
mov
je
nop
pushf
fist
fmul
(bad)
mov
inc
daa
or
fdiv
mov
sub
ficom
push
test
lods
mov
(bad)
cmc
cdq
sti
xchg
xor
adc
aad
movs
mov
lods
and
mov
loop
ror
test
aam
aas
mov
pusha
popa
retf
dec
mov
ds
jbe
xor
into
pop
pop
inc
stos
adc
retf
aad
repz
(bad)
mov
in
popa
test
leave
cmp
add
pushf
and
cmp
mov
dec
adc
daa
scas
cwde
mov
test
and
in
bound
add
push
in
cli
sbb
xchg
push
cmps
outs
fiadd
dec
cmps
outs
jae
gs
imul
ror
cmp
call
loopne
sbb
pop
cld
retf
pushf
sub
call
rcl
das
movs
xor
ins
and
sub
sbb
daa
push
imul
or
imul
cwde
cmp
gs
mov
add
mov
add
in
rcr
or
seta
in
adc
hlt
dec
sbb
leave
(bad)
ret
sub
ja
jne
(bad)
jne
mov
in
ins
mov
(bad)
mov
xchg
cmp
add
mov
iret
mov
sbb
fidiv
cmps
stos
cmp
mov
int
inc
adc
and
dec
fisubr
push
xchg
out
loop
fadd
(bad)
popa
mov
ins
jnp
mov
inc
cmp
int3
cmps
push
or
push
or
stos
xor
mov
push
stos
(bad)
mov
outs
test
xlat
or
pop
mov
and
shl
jecxz
in
mov
(bad)
out
ror
mov
push
push
adc
cmps
pusha
int
out
adc
adc
jge
mov
jmp
sub
stos
(bad)
add
syscall
jo
and
inc
fild
cdq
sbb
xchg
jle
sub
mov
pop
sub
mov
sbb
add
dec
xor
sub
adc
mov
xor
xor
gs
and
mov
or
sub
jb
jmp
or
push
cmc
or
cdq
pop
lods
jmp
mov
sbb
mov
sub
cmps
in
jmp
pop
xor
mov
adc
pop
clc
jg
xchg
mov
into
sahf
xor
cs
push
cmp
xchg
sub
pop
add
add
or
push
or
fmul
in
movs
iret
cmp
enter
cmp
pop
xchg
mov
cld
je
cmps
(bad)
aam
dec
pop
mov
rol
in
test
aam
sbb
pop
inc
addr16
lahf
popf
or
pop
add
imul
or
mov
or
gs
bound
jle
idiv
ficomp
inc
mov
das
push
icebp
jb
aas
daa
mov
out
mov
repz
and
jae
mov
lods
mov
push
pop
sbb
std
add
push
daa
inc
in
sub
or
(bad)
call
test
fsubr
shl
jmp
and
retf
mov
mov
clc
mov
xchg
cs
or
inc
mov
mov
in
mov
sbb
dec
pop
push
push
lods
jne
js
ja
(bad)
(bad)
call
stc
mov
add
ret
dec
xor
scas
mov
inc
xor
out
mov
sbb
jae
add
repz
push
movs
movs
and
in
cld
ret
cmps
in
cmc
and
outs
xchg
(bad)
sub
movs
in
mov
outs
dec
dec
inc
(bad)
and
inc
ss
jl
xchg
xor
adc
and
cwde
add
cld
pop
mov
and
fst
out
push
ret
popa
sbb
adc
stc
mov
aad
(bad)
retf
and
mov
push
jbe
mul
pop
arpl
inc
jg
adc
and
aad
mov
sub
mov
in
cmps
cmp
lock
inc
call
mov
stos
adc
cmps
mov
mov
adc
add
loop
inc
xlat
es
cmp
push
addr16
push
ds
enter
out
jecxz
inc
and
les
jmp
adc
inc
rcl
call
jae
out
data16
push
adc
jbe
ins
sbb
ret
mov
cmp
out
aam
int
loop
mov
aam
fwait
cmp
lea
push
sub
jge
jo
jp
in
imul
fnsetpm(287
iret
xchg
enter
lock
sub
sti
jns
pop
inc
add
add
inc
mov
popf
dec
leave
out
popa
jnp
lock
loopne
jbe
hlt
loope
lods
pop
xor
movs
iret
std
(bad)
adc
push
jae
mov
ror
jg
pop
enter
ins
movs
cmp
adc
mov
push
mov
call
cmps
inc
adc
outs
pushf
ds
mov
lds
repz
xchg
je
mov
in
sbb
es
jle
inc
push
stos
cmc
sbb
xchg
adc
push
je
mov
xchg
aas
cwde
or
mov
add
test
cmps
mov
or
test
ret
xchg
push
and
iret
outs
add
sub
cmp
enter
shl
and
inc
out
push
stos
int
xchg
pushf
retf
es
or
lods
outs
xchg
lea
sub
jle
push
call
mov
outs
or
cmp
and
ds
pop
cwde
int3
pop
xchg
aad
outs
ins
test
fist
sbb
loope
popf
jns
dec
gs
and
loop
adc
ucomiss
scas
dec
mov
mov
cld
add
pop
xchg
nop
leave
sub
test
sti
ins
call
js
mov
dec
sub
inc
bound
push
mov
xor
add
ror
rcl
loop
cmp
sbb
mov
lock
and
iret
lds
inc
dec
adc
sub
push
rcr
or
adc
aad
int
lods
or
call
add
(bad)
push
jle
jg
sbb
sahf
(bad)
mov
sti
sbb
aam
dec
cmc
out
je
jecxz
je
cmp
jp
je
clts
popa
pop
mov
cmc
jnp
jge
std
addr16
push
stos
(bad)
(bad)
add
jnp
pop
dec
enter
fistp
cmp
pop
xchg
aas
inc
and
fcom
stos
repz
pop
loope
mov
cli
xchg
(bad)
fstp
or
xchg
fwait
push
xchg
sar
mov
dec
retf
mov
pop
mov
dec
xor
(bad)
ja
inc
cs
loopne
pop
mov
mov
push
or
dec
in
cmp
and
(bad)
gs
ja
mov
mov
cmp
test
cmovns
cld
xor
jg
pop
lahf
jo
je
dec
(bad)
push
pop
sub
push
xchg
sbb
and
jbe
dec
mov
inc
je
xlat
push
or
pop
mov
push
cmps
or
add
cs
mov
xchg
push
mov
cmp
ror
mov
idiv
cmp
aad
cmps
fdivr
out
shl
lods
xor
mov
push
and
mov
fbstp
rcr
sar
jbe
clc
int3
into
push
cmc
cmc
or
frstor
and
sbb
jle
fild
jl
cmps
sbb
jge
jb
repz
push
enter
pop
lods
in
test
in
xor
sbb
mov
retf
and
pop
and
push
add
fidiv
sub
sbb
xchg
leave
mov
stc
fild
add
ds
adc
sub
or
fwait
and
push
mov
into
loopne
xor
or
mov
outs
pop
sbb
call
fcmovnbe
pushf
or
inc
push
dec
jb
push
push
push
dec
xchg
cmp
xor
xlat
push
adc
arpl
fisubr
js
xrelease
dec
cmp
pop
loop
lods
push
loopne
ss
pop
pop
fbstp
fiadd
daa
fldl2e
test
repz
add
iret
add
call
jge
xor
xchg
and
pop
xor
pop
fld
imul
call
jnp
xchg
outs
cwde
stos
fild
out
loop
pop
and
push
call
stos
into
mov
jmp
mov
imul
adc
popa
sahf
and
add
call
pop
push
in
aas
cmp
sub
and
and
mov
sub
inc
or
in
fimul
pop
fist
and
cmc
arpl
cs
ins
add
add
adc
sbb
enter
xlat
test
mov
add
push
jae
cmp
(bad)
sub
fs
nop
inc
loop
test
movs
and
mov
xor
retf
xchg
call
scas
aad
dec
shl
mov
push
and
inc
popf
jno
inc
(bad)
jp
cmc
or
mov
add
mov
inc
hlt
and
sub
dec
aas
pop
xchg
sti
jl
pop
enter
addr16
sub
or
push
pop
or
sbb
add
mov
loop
sub
xchg
pop
jnp
sbb
ss
sti
popa
daa
retf
aam
pop
add
xchg
test
or
cmp
jmp
push
repz
pushf
pop
inc
nop
xor
sub
scas
lds
out
push
and
sub
push
inc
fnsave
mov
clc
xor
mov
loopne
addr16
and
out
ds
push
popf
int
repz
das
test
ret
ss
out
pop
call
sbb
retf
sub
std
push
lea
xchg
out
gs
add
jb
mov
mov
call
mov
xchg
push
adc
fldenv
clc
das
mov
push
xchg
push
test
or
mov
mov
bound
jbe
add
daa
rol
(bad)
or
out
mov
(bad)
jns
jle
inc
rcl
xchg
xor
test
cmp
cmp
dec
aam
fptan
xchg
jmp
popf
adc
dec
sub
push
push
xchg
push
pop
mov
push
dec
cmp
int
arpl
add
mov
loope
popa
mov
mov
fstp
aas
mov
popf
cli
adc
leave
adc
sbb
sub
fwait
sar
push
stos
jle
mov
inc
adc
daa
ret
(bad)
pop
loop
aaa
cwde
cmp
pop
jl
or
jne
sbb
jl
adc
pop
or
mov
cmp
sbb
cmp
and
mov
and
jno
arpl
fstp
cmp
dec
adc
aas
movs
into
movs
xor
xchg
enter
mov
xchg
outs
in
push
xor
das
(bad)
fstp
jp
pop
jl
jg
out
xor
(bad)
jb
adc
loope
icebp
cmc
das
iret
jnp
pop
(bad)
popf
jnp
popa
inc
aam
lahf
int
(bad)
ins
jns
sbb
pop
in
mov
fst
and
mov
push
dec
or
xchg
cs
mov
dec
in
ret
cwde
sub
mov
pop
and
and
out
std
inc
push
repz
push
and
push
sbb
jg
xchg
cmp
cmp
adc
or
cmc
enter
daa
and
in
mov
daa
inc
inc
sub
jl
dec
stos
sbb
add
dec
stos
std
add
inc
call
xchg
repnz
sub
pusha
pop
pushf
adc
mov
jg
dec
ret
imul
xor
dec
pop
adc
nop
jecxz
js
adc
scas
pop
jo
push
jmp
cmp
push
pop
ror
sbb
dec
ds
push
dec
cdq
cld
mov
(bad)
aas
sbb
(bad)
mov
movs
leave
scas
mov
daa
jmp
cmp
cmp
sub
call
out
enter
pop
mov
adc
dec
hlt
les
cmp
add
jb
aam
mov
mov
jnp
adc
jl
push
xor
xchg
fstp
or
sti
xor
jbe
push
imul
pop
loope
sbb
and
adc
cs
dec
int
test
out
cdq
push
dec
push
loopne
cs
out
add
ret
ins
cmp
jl
push
aam
icebp
repnz
sub
retf
fs
mov
pop
movs
push
fwait
aaa
push
cmp
pushf
mov
mov
inc
aad
mov
arpl
sahf
inc
inc
loope
mov
xchg
push
aad
fs
dec
sbb
in
push
xor
sbb
jl
jl
stc
gs
not
outs
sbb
data16
call
enter
dec
mov
stos
sub
dec
test
cmps
mov
xchg
outs
sbb
or
or
ss
ins
inc
push
push
(bad)
pop
jmp
fnstsw
dec
jmp
ret
in
ret
push
push
dec
jbe
jg
aas
test
xor
xor
jg
rcl
pop
ds
push
ins
mov
adc
or
inc
pop
pop
fs
push
and
daa
or
mov
mov
mov
arpl
cmp
cmp
call
mov
sbb
fstp
cmps
adc
dec
cdq
add
(bad)
cmp
xchg
dec
jl
adc
sub
pushf
(bad)
xchg
fwait
push
mov
and
addr16
jmp
int3
xor
cmp
(bad)
cmps
ins
retf
inc
adc
sub
test
adc
sbb
and
jmp
xchg
mov
fwait
bound
scas
jns
adc
ds
xor
cwde
and
jno
loopne
js
cmp
mov
mov
in
call
xchg
div
popf
cmp
ins
hlt
data16
movs
mov
ficom
mov
data16
or
mov
cs
(bad)
xlat
xor
or
ss
sbb
movs
fwait
(bad)
iret
retf
mov
or
lods
cmp
ins
adc
outs
mov
sub
pop
dec
mov
xor
pop
mov
mov
xor
movs
inc
and
fsubr
sub
add
mov
cmc
xchg
(bad)
mov
fsubp
and
sbb
mov
or
mov
adc
add
ret
pop
push
adc
jnp
hlt
jle
test
and
adc
mov
push
xchg
inc
mov
pop
cmps
push
push
push
dec
mov
jl
push
sbb
nop
mov
call
cld
pop
xchg
jp
push
mov
add
jmp
sbb
mov
fsub
push
adc
or
cmp
movs
shl
aas
leave
inc
test
jmp
das
sti
enter
mov
jno
fild
addr16
movs
jle
mov
pop
int
sub
mov
dec
leave
ror
inc
xor
xchg
pop
push
popf
and
in
or
bound
retf
into
jne
jmp
pop
pop
shr
jbe
add
test
jo
dec
sbb
pop
dec
lods
call
or
adc
and
add
jno
mov
mov
pop
mov
cmp
add
faddp
sbb
repnz
in
and
and
jge
mul
(bad)
xchg
ins
movs
jnp
pop
movs
lock
pop
fidivr
lods
and
and
aad
out
retf
lds
jns
sbb
cmc
adc
inc
out
movs
jb
mov
pop
daa
jb
pop
push
loopne
call
cmp
mov
inc
pop
sub
add
cwde
xchg
dec
add
out
pusha
push
cs
out
dec
cwde
lahf
pop
cwde
lods
jmp
je
cmp
add
push
cmp
clc
push
cli
stos
add
mov
inc
and
and
sub
dec
jne
mov
cdq
adc
adc
mov
inc
sti
stos
jns
mov
ret
ror
and
(bad)
jecxz
adc
std
sbb
pop
jmp
js
jmp
or
mov
sbb
aam
add
shl
das
mov
cdq
jae
push
mov
push
es
xchg
fstp
in
add
push
jo
js
sbb
mov
in
outs
sbb
test
jge
xchg
popa
dec
push
js
or
retf
mov
cmps
outs
sub
jne
iret
xlat
iret
mov
push
cmp
adc
jae
das
fst
scas
sub
(bad)
fs
mov
xchg
push
stos
leave
mov
adc
adc
mov
mov
sub
mov
and
jmp
(bad)
jle
arpl
push
stc
(bad)
adc
jae
push
fmul
stos
lock
lahf
sbb
jecxz
push
pop
ds
add
push
enter
push
mov
jae
(bad)
add
and
or
cs
sub
sti
inc
repz
xor
inc
call
fstp
add
pop
push
jecxz
mov
sbb
mov
cld
cmp
jnp
lock
cld
mov
aam
dec
rcl
psubd
pop
mov
das
loop
in
add
das
add
sar
sti
mov
retf
ja
inc
xchg
adc
mov
ins
jp
mov
enter
xchg
mov
imul
repz
ds
leave
sub
pop
imul
and
call
sbb
mov
xchg
sti
fild
imul
dec
xchg
push
movs
daa
fistp
ret
mov
imul
jge
mov
test
addr16
xor
inc
iret
iret
mov
sbb
sub
add
mul
arpl
xor
adc
nop
cmp
shr
fsub
out
add
pop
pop
push
pop
sub
call
push
push
mov
dec
and
mov
add
push
inc
mov
sbb
arpl
std
add
mov
ret
sbb
inc
aad
pop
fadd
mov
sbb
pop
loop
mov
pusha
out
pop
test
movs
das
out
fs
jne
ret
leave
jge
test
loop
stc
push
retf
dec
jmp
and
jp
in
or
push
sub
enter
inc
arpl
add
or
sti
in
out
jmp
dec
loopne
jl
mov
test
call
pop
leave
stos
scas
xor
jnp
addr16
rol
aad
outs
arpl
push
loop
mov
push
sub
push
mov
push
pop
stos
lock
call
cmp
mov
dec
out
jbe
jo
hlt
push
push
daa
inc
ds
icebp
jns
dec
stc
jecxz
fnstsw
xchg
cmp
or
mov
loope
mov
les
pop
push
cmc
ds
in
jge
or
jecxz
aas
test
xchg
lahf
adc
xchg
jne
mov
pushf
popf
ficomp
xor
test
in
xor
out
mov
out
jns
mov
mov
mov
mov
mov
sti
mov
sub
scas
xor
(bad)
out
add
push
add
les
pop
push
js
inc
popf
push
outs
movs
or
arpl
push
fwait
sub
ss
daa
mov
retf
out
mov
into
pop
out
movs
loopne
mov
mov
mov
repz
adc
fisttp
(bad)
cmp
inc
xchg
dec
stos
add
inc
and
or
int
retf
cmp
in
xlat
stc
hlt
jnp
loopne
xchg
dec
int
jecxz
inc
ins
adc
xchg
and
cli
mov
pop
pop
push
push
sub
mov
stc
int
pop
dec
jns
jmp
and
(bad)
push
jge
adc
cdq
jg
cmps
jo
fstp
arpl
retf
icebp
xlat
xor
lea
cmc
std
fs
fs
fisub
sub
test
sbb
push
cmps
mov
push
int
mov
or
xchg
popa
out
test
(bad)
pop
sar
sub
ret
inc
mov
test
and
adc
movs
(bad)
inc
sub
mov
push
(bad)
mov
adc
xchg
bound
leave
sbb
mov
test
add
aas
(bad)
adc
cmp
shl
xchg
and
sub
jno
jp
mov
sub
sbb
xchg
rol
cmp
cwde
xor
hlt
add
sbb
jg
movs
jmp
dec
xchg
mov
mov
popf
push
and
stos
or
cmps
ret
into
pop
jo
enter
jns
lods
jne
inc
into
add
js
rol
aad
and
repz
in
mov
push
mov
gs
imul
pop
jno
cmp
daa
and
sub
loope
mov
and
(bad)
(bad)
pop
inc
cmp
movs
out
ret
and
out
ss
(bad)
(bad)
pop
cmps
mov
cmps
stc
jno
jl
jne
into
ins
ins
mov
push
push
fild
outs
les
push
fld
jge
sbb
cli
xor
dec
jmp
jg
shl
xor
mov
ror
arpl
pusha
mov
stos
aas
xor
xor
punpcklwd
jmp
push
popf
or
scas
imul
hlt
sbb
into
lea
pop
xor
daa
shr
bound
rcl
jb
xchg
ret
mov
add
or
sub
jmp
ret
push
div
mov
out
cmp
cmp
cdq
xchg
inc
pop
fcos
xchg
cld
sub
call
in
jns
cmp
add
test
sahf
shr
test
inc
sbb
sbb
ret
out
shr
fcomp
daa
das
xchg
dec
xchg
mov
add
inc
mov
call
add
lock
jmp
mov
jg
lods
mov
adc
add
gs
mov
add
xchg
shl
gs
(bad)
data16
rol
lahf
mov
jg
pop
shl
jo
cdq
shl
cmp
and
add
mov
push
dec
xchg
xchg
add
daa
out
leave
scas
jnp
jnp
jmp
xchg
push
adc
outs
fwait
fs
adc
ins
jo
jns
mov
(bad)
adc
sti
xchg
outs
xchg
sbb
(bad)
mov
xor
push
push
adc
jmp
push
adc
scas
test
mov
pop
arpl
adc
iret
cmp
xchg
dec
mov
xchg
stos
sub
(bad)
out
movs
mov
mov
pushf
jmp
jno
mov
loopne
add
sbb
fisttp
das
repz
out
loope
lods
out
aas
xlat
mov
arpl
ss
gs
push
push
cli
mov
sub
mov
pushf
fisttp
sub
push
xor
movs
cmc
outs
cli
ret
pushf
adc
or
cmp
cs
(bad)
mov
sbb
xor
mov
outs
loope
sbb
dec
push
mov
repz
jp
retf
pushf
stc
sub
and
jecxz
pop
movs
fbld
(bad)
xor
or
fisttp
fisub
fidiv
sub
data16
mov
(bad)
out
dec
push
aaa
mov
jae
sahf
stos
adc
movs
sbb
shl
inc
pop
pop
push
xchg
mov
loope
int3
in
and
jge
in
and
adc
jnp
and
push
jle
mov
cld
jno
cmp
dec
jno
mov
jmp
cmps
addr16
push
and
pop
mov
mov
push
lds
mov
or
jae
out
shl
and
xchg
pop
test
fmul
faddp
add
mov
dec
xchg
mov
push
jl
and
gs
adc
lahf
cmps
jmp
ins
add
mov
enter
adc
pop
xor
xchg
lahf
iret
jl
mov
sbb
inc
shl
(bad)
adc
call
push
inc
leave
lods
mov
dec
test
dec
dec
popa
adc
shl
scas
sub
test
outs
mov
mov
mov
movs
pop
mov
cmp
pop
pop
dec
outs
(bad)
aad
xor
mov
dec
into
or
xchg
add
pop
and
add
mov
dec
or
xchg
(bad)
cmp
aam
test
bnd
or
pop
mov
sub
(bad)
rcl
xor
inc
pop
xchg
add
jle
not
out
mov
stos
xor
outs
mov
inc
call
sbb
add
xchg
and
rcl
xor
mov
jle
xchg
cdq
mov
cmp
jae
mov
inc
loopne
or
xchg
hlt
idiv
lods
pushf
stc
inc
xor
xchg
sar
arpl
imul
push
sbb
dec
mov
inc
dec
sbb
xlat
jecxz
jne
fwait
pop
xchg
jne
and
and
ins
imul
mov
mov
dec
pop
and
cmp
cs
inc
jecxz
data16
aam
sbb
fstp
adc
sbb
mov
push
sbb
mov
inc
jmp
aam
sbb
movs
inc
push
lods
clc
jo
add
xchg
push
xlat
xchg
(bad)
call
or
mov
add
ror
leave
popf
pop
inc
cmp
mov
jg
xor
cmp
pop
xchg
or
sub
mov
das
stos
dec
arpl
mov
mov
stos
(bad)
jns
rcl
add
cs
js
cmp
sub
mov
mov
add
push
mov
inc
and
mov
(bad)
add
inc
in
cmc
xchg
dec
jp
ret
test
sbb
xchg
in
jmp
inc
sbb
out
loop
fdivr
push
fwait
cmps
adc
popa
inc
mov
adc
xor
enter
dec
arpl
fcmovne
loope
movs
(bad)
arpl
dec
in
out
cmp
loope
jnp
xchg
inc
pushf
call
and
fimul
rcl
adc
(bad)
xor
xchg
cmp
dec
inc
or
stos
daa
outs
jecxz
daa
and
xchg
pop
pop
ds
dec
ds
push
mov
inc
mov
outs
jno
cmp
pop
bound
inc
daa
jnp
adc
repz
ds
push
or
adc
and
mov
mov
fild
push
adc
add
test
mov
(bad)
aas
stc
and
pop
ret
lods
mov
and
loop
dec
pop
test
cmp
scas
add
and
das
sub
ror
mul
jge
aad
dec
xor
mov
pop
in
jmp
and
jbe
popf
(bad)
icebp
outs
or
dec
mov
or
imul
sbb
dec
and
shr
lock
add
movs
cmp
jae
pushf
int
ret
jp
jnp
clc
pop
mov
sub
push
xor
cmps
stc
scas
in
pop
call
mov
pop
xchg
or
neg
std
rol
push
and
(bad)
mov
retf
pop
stos
sub
sbb
scas
jmp
call
popf
in
dec
cli
inc
clc
sbb
push
std
mov
imul
mov
in
jg
push
fwait
stc
xchg
pop
sub
add
xchg
add
cmp
xor
mov
lods
mov
cli
in
and
test
test
jmp
pop
and
imul
(bad)
retf
add
dec
aaa
movs
mov
cmp
imul
mov
or
fadd
pop
jl
mov
in
(bad)
jecxz
or
push
push
int
stos
(bad)
aam
xor
sub
stos
xchg
hlt
lds
jl
lahf
mov
enter
lea
js
dec
push
or
movs
int3
les
call
mov
or
mov
push
fmul
mov
mov
mov
push
stos
call
sti
lock
int
ja
mov
mov
fstp
into
xchg
inc
aam
mov
or
cdq
mov
repz
push
pop
ins
xchg
fsubrp
rcl
and
ret
ret
out
(bad)
pusha
mov
jg
cmp
int3
cmp
mov
and
in
cmc
int3
(bad)
lahf
dec
mov
pop
div
or
add
imul
sub
ret
inc
or
dec
sub
in
repnz
sbb
inc
js
movs
xchg
add
xor
in
jae
arpl
scas
mov
retf
pop
jmp
pusha
xchg
pop
ins
add
xchg
movs
or
(bad)
and
ja
imul
mov
mov
outs
inc
or
daa
add
ja
shl
into
jno
daa
aaa
les
and
inc
je
jbe
cs
xchg
inc
ss
dec
cli
jmp
inc
jp
pop
add
xor
repnz
in
leave
movs
lods
mov
or
fstp
push
push
inc
pop
icebp
std
loop
adc
aam
adc
mov
jmp
arpl
icebp
inc
lods
pop
in
sbb
hlt
jbe
je
inc
ins
mov
dec
push
mov
cmps
adc
and
push
mov
lds
sub
xchg
shr
xchg
xor
mov
jg
stos
and
call
pusha
inc
push
and
retf
out
pusha
add
mov
adc
in
loop
adc
dec
call
cmp
pop
dec
sbb
retf
aad
lock
out
in
adc
jns
(bad)
xor
test
in
add
dec
stos
imul
dec
ds
sub
dec
or
mov
lahf
pop
mov
mov
and
cld
and
jp
jne
mov
adc
cdq
inc
xchg
icebp
push
xchg
push
cmp
iret
pusha
(bad)
cmp
sbb
xor
jp
dec
dec
pusha
sub
add
xor
cmp
sbb
add
cmp
ja
or
(bad)
fldl2e
mov
sbb
outs
cmp
shl
scas
push
sti
pusha
xor
mov
std
or
jb
xchg
and
mov
pop
data16
out
enter
and
adc
mov
xor
xchg
push
sub
inc
jmp
test
cmp
xchg
aaa
mov
loopne
dec
fs
fist
aad
call
inc
cmp
sbb
cmps
xchg
mov
stos
das
xor
pop
(bad)
cmp
dec
ficom
dec
inc
fdiv
or
fist
mov
xchg
pop
aam
aad
(bad)
adc
in
pop
ret
fidivr
test
arpl
pop
daa
shl
mov
rcr
jg
int3
xchg
inc
mov
aam
mov
fnsave
push
mov
inc
cld
inc
leave
adc
popa
aas
jbe
aam
cmp
or
xchg
push
cmp
into
cmp
xchg
hlt
adc
mov
imul
jmp
fdivr
push
int
jg
push
dec
jg
pop
mov
add
pop
jb
(bad)
int
outs
cmp
addr16
rcl
inc
sub
lods
xor
sbb
cmp
xchg
imul
dec
pop
pusha
or
(bad)
sub
std
add
xchg
push
add
adc
scas
fwait
jnp
jg
inc
cmps
sahf
out
jl
push
sub
push
push
out
cmp
xor
cmc
sub
jmp
pusha
(bad)
cs
loope
loopne
xchg
ja
jp
xor
jns
outs
lods
mov
loopne
call
xchg
inc
ret
push
mov
push
mov
mov
jnp
push
mov
xor
xchg
lahf
pusha
cmc
push
mov
mov
jp
mov
jle
aaa
retf
jno
jne
adc
inc
mov
clc
sub
or
dec
mov
int
jns
cmp
adc
adc
es
mov
mov
jns
xchg
(bad)
inc
fidivr
sti
es
mov
and
or
sbb
(bad)
sub
and
sub
and
push
(bad)
pop
stos
sti
pop
hlt
and
cli
xor
sbb
mov
aas
out
ss
or
cli
and
pop
mov
xchg
xchg
xchg
je
pop
push
hlt
cmp
xor
call
mov
xlat
cmp
xchg
pop
es
and
adc
sub
dec
jmp
xchg
xchg
dec
fdiv
sti
push
add
sub
sti
add
jns
dec
test
rcl
jnp
outs
repz
enter
lock
mov
inc
test
xchg
pushf
xchg
mov
inc
std
dec
aam
lock
inc
icebp
pop
cld
test
jns
xchg
popa
fadd
or
mov
cmps
arpl
jbe
inc
mov
popf
(bad)
jmp
push
pop
in
inc
shl
call
mov
and
in
mov
cmps
mov
mov
xchg
jno
push
cli
dec
fadd
sub
loop
fldenv
pop
xor
cld
and
outs
shl
loope
add
xor
jnp
pop
test
test
inc
call
jae
push
(bad)
pop
jmp
stos
arpl
inc
xlat
xor
icebp
pop
in
stos
mov
mov
push
push
les
jns
inc
(bad)
push
jmp
(bad)
pop
jmp
jmp
push
inc
(bad)
and
sbb
es
adc
or
pop
mov
scas
(bad)
sub
pop
push
cmp
push
jecxz
(bad)
outs
ret
lods
xchg
mov
sbb
mov
push
mov
clc
and
ss
dec
fst
push
ds
cmps
outs
(bad)
and
or
push
es
in
cmc
sub
pop
cmp
and
adc
dec
iret
dec
lds
xor
repz
and
shl
div
loopne
icebp
imul
lods
test
in
dec
div
add
jmp
rol
ins
shr
call
ins
stc
jnp
and
cld
push
rcl
push
retf
pop
pop
adc
push
cmps
bound
mov
mov
ja
dec
int3
sub
push
add
adc
jmp
(bad)
pop
fistp
cmc
jne
pop
cli
jns
sub
add
xor
and
adc
jmp
fsub
xor
inc
mul
adc
or
push
adc
mov
enter
xor
jecxz
push
sbb
pop
mov
lock
mov
push
test
fs
test
cdq
ins
out
and
cmc
js
inc
fnsave
sbb
xor
adc
movups
repnz
sub
out
shl
xor
xor
adc
adc
adc
or
sbb
push
ficom
inc
stc
pop
xlat
pop
test
or
cli
dec
mov
push
xchg
mov
push
adc
repnz
sbb
and
dec
call
push
scas
popf
lods
mov
mov
mov
adc
adc
inc
mov
(bad)
clc
sub
push
xor
sbb
dec
cli
dec
ficomp
sar
shl
sbb
sbb
add
adc
xor
in
mov
jne
lock
sbb
es
sbb
xor
inc
stos
mov
pop
ret
jge
dec
lods
mov
out
dec
cld
push
(bad)
push
scas
arpl
dec
mov
mov
inc
fstp
clc
and
mov
fcomp
xor
push
daa
jecxz
add
xchg
je
cdq
dec
(bad)
daa
sbb
sbb
mov
aam
leave
and
vmptrld
or
mov
and
leave
and
push
std
xchg
sub
call
(bad)
pop
into
es
into
ins
cmps
add
ja
nop
mov
xchg
fs
pop
fisubr
push
fsub
sub
jbe
jle
outs
lock
fsub
xchg
movs
mov
call
inc
movs
mov
mov
nop
mov
pop
std
jne
push
call
addr16
pop
(bad)
das
loope
leave
jno
dec
rcl
xchg
xchg
mov
dec
lds
xor
or
je
outs
test
xchg
push
jmp
into
pop
mov
je
lahf
in
jl
push
hlt
dec
repnz
fld
adc
xor
sbb
and
adc
add
pop
pop
sbb
test
jmp
fsubr
dec
ret
inc
fild
dec
enter
lods
cwde
cwde
mov
xchg
mov
mov
sbb
pop
sub
or
sar
rcl
cmp
call
inc
movs
je
pop
push
adc
add
and
loope
cmps
mov
mov
xchg
ja
lahf
vcvtsi2ss
frstor
das
not
je
jbe
jl
xchg
lods
mov
inc
fcomp
iret
data16
inc
retf
inc
ror
sbb
jl
das
xor
xor
push
ret
jp
inc
aam
out
test
lahf
mov
(bad)
lea
scas
mov
retf
addr16
push
aad
fiadd
jbe
jne
ja
inc
cmps
lock
not
inc
(bad)
and
cmp
sub
add
pop
cmp
call
adc
fld
inc
xlat
and
ss
pop
fldcw
leave
and
loopne
into
pop
cli
pop
xlat
inc
(bad)
das
loope
mov
je
push
out
hlt
jge
jle
jl
mov
jno
aas
or
loopne
push
loope
shl
jge
and
jecxz
jmp
jbe
sub
jg
aaa
xor
adc
jl
jne
inc
fldenv
dec
fcomp
mov
mov
imul
stos
add
cli
inc
into
and
nop
pop
iret
inc
fstp
out
ret
pop
fadd
and
cmp
add
arpl
push
stos
xchg
nop
xchg
imul
jnp
mov
repnz
ror
(bad)
lods
cdq
mov
xchg
xchg
movs
mov
shr
push
jecxz
aas
jle
jbe
push
ficomp
xchg
call
pusha
out
fbstp
inc
aam
xlat
js
sub
adc
dec
mov
(bad)
xor
adc
xor
out
iret
jp
push
xlat
push
fbld
sub
sbb
bnd
dec
(bad)
mov
popa
ret
inc
int
lods
mov
cdq
test
xchg
xchg
test
and
pop
sbb
daa
jge
and
jle
push
lods
popf
mov
xor
adc
add
into
push
fisubr
sbb
pop
shl
jecxz
aad
mov
repz
push
fdiv
sbb
sbb
jecxz
(bad)
pop
mov
xchg
pop
xor
and
add
push
je
mov
es
fisub
xor
out
ret
ins
stos
xor
das
out
inc
ret
dec
lds
ss
cmp
xor
adc
into
and
and
inc
fld
adc
jecxz
scas
scas
(bad)
xor
adc
cmp
or
sub
push
test
jmp
loop
mov
jge
xor
loopne
retf
xchg
mov
mov
mov
dec
mov
adc
jns
pop
iret
and
js
and
inc
fnstcw
jg
push
movs
mov
dec
cld
jns
dec
fbstp
sbb
xor
loop
xor
add
adc
cmp
and
jmp
pop
frstor
loope
fldenv
xchg
test
mov
mov
cdq
mov
xchg
xchg
sahf
imul
scas
push
test
retf
or
push
cmp
push
fdiv
in
scas
xchg
out
jp
dec
scas
mov
lahf
scas
mov
div
jae
push
fdiv
bnd
push
lods
cdq
mov
sbb
dec
mov
sar
inc
movs
xchg
arpl
cs
adc
lock
test
lods
mov
cdq
inc
les
sub
inc
add
add
out
ret
dec
mov
mov
mov
loope
sar
jmp
or
push
loopne
les
and
out
out
mov
mov
movs
jne
dec
test
aam
mov
lock
dec
(bad)
push
stc
data16
aas
or
rol
daa
sbb
inc
fsubr
jne
popf
mov
cli
push
fstp
mov
xchg
lahf
mov
lds
std
pop
cmp
dec
mov
fwait
ins
iret
push
pop
sbb
ja
mov
xor
adc
pop
aas
out
dec
retf
aas
push
in
aaa
sub
xor
add
xor
or
inc
enter
int3
ins
fistp
movs
jbe
jno
pop
cmps
mov
pop
scas
xchg
mov
ins
fist
inc
cld
and
pop
stos
cmp
sbb
sbb
loop
rep
cmps
xchg
inc
retf
inc
int3
push
icebp
inc
iret
pop
cmps
sbb
mov
(bad)
jmp
fmul
call
sub
inc
aam
fsubr
sbb
sub
hlt
lock
mov
aad
int
aad
(bad)
and
or
hlt
inc
clc
jge
xchg
xchg
cmp
es
push
mov
scas
adc
fwait
xchg
mov
imul
rol
cdq
mov
mov
stos
mov
(bad)
ror
popf
push
das
jmp
in
dec
pause
cmps
mov
cli
lds
and
pop
fidiv
jmp
repz
sub
cmp
push
aad
sbb
jle
dec
test
gs
pop
fcomp
jp
dec
fsubr
loope
mov
push
fisub
loope
mov
pusha
add
cmp
repz
xlat
and
adc
loopne
(bad)
js
and
sbb
sbb
dec
fld
jg
dec
out
jo
dec
fsub
out
(bad)
outs
xlat
inc
imul
dec
leave
push
shr
jmp
mov
xor
dec
std
ja
sahf
mov
cdq
xchg
cmps
xor
jns
jbe
inc
(bad)
jge
jo
arpl
push
push
or
jle
inc
retf
jg
dec
mov
mov
mov
data16
jp
(bad)
mov
popa
fistp
inc
aam
cmc
jp
and
push
std
jp
jo
dec
fcom
es
push
cmc
jns
inc
retf
sbb
outs
mov
int3
inc
cmps
mov
mov
mov
out
mov
mov
sbb
sub
cmp
dec
ret
pop
mov
test
dec
mov
mov
rcr
rol
inc
jmp
gs
ficomp
mov
mov
mov
add
sub
sbb
loopne
(bad)
and
add
std
dec
rol
data16
js
xor
push
pop
jecxz
or
sbb
add
loop
dec
sub
jmp
cmps
call
out
dec
fiadd
and
push
dec
shl
inc
stos
mov
scas
(bad)
cli
pop
(bad)
and
or
jns
jl
jle
inc
icebp
dec
stos
mov
test
test
inc
cli
pop
int3
push
(bad)
and
add
pop
in
jl
mov
mov
je
es
push
fadd
and
jae
inc
cmp
add
fstp
jmp
stos
xchg
mov
repz
fisub
cmp
test
repnz
aam
iret
dec
or
outs
fistp
arpl
pop
cli
jnp
pop
movs
xchg
test
ret
dec
fsubr
sub
aaa
cmp
lea
pusha
int
movs
mov
cmp
or
push
mov
mov
and
and
inc
add
mov
xlat
or
adc
cmp
pop
mov
sahf
popa
fisub
int
jp
ins
enter
jle
cmp
and
add
cmp
data16
ins
scas
popa
ret
jne
pop
retf
aas
or
retf
inc
(bad)
xor
xor
dec
push
idiv
adc
and
jno
dec
sar
add
pop
fistp
push
fadd
xor
pop
int3
imul
adc
ss
pop
cmps
popf
xchg
jne
pop
iret
or
iret
cmp
pushf
xchg
jns
push
mov
retf
jns
adc
pop
test
cli
cmp
ud0
sbb
cmp
jno
xchg
in
mov
gs
inc
inc
test
push
fdiv
cmp
inc
aad
adc
mov
push
xchg
imul
sbb
and
add
pop
or
mov
fwait
fs
arpl
push
out
mov
xchg
dec
fadd
lahf
jne
mov
inc
mov
call
xchg
inc
mov
fisttp
mov
imul
daa
(bad)
cmp
cmp
add
jmp
ja
ds
sub
cmp
pushf
jae
xchg
dec
shl
push
lock
push
add
xor
cmp
out
xor
pop
lea
xchg
jne
mov
and
mov
sub
and
push
cld
dec
sbb
push
push
mov
sub
xchg
shr
push
jecxz
mov
mov
mov
lods
fwait
dec
mov
outs
or
jge
jb
movs
mov
stos
mov
lea
bound
scas
(bad)
cwde
je
dec
mov
int3
push
enter
and
pop
mov
nop
pushf
bound
dec
cmps
jb
pushf
xchg
jg
push
(bad)
aas
jecxz
inc
frstor
and
repnz
out
shl
repz
mov
add
sub
push
mov
hlt
dec
rcl
and
inc
fidiv
into
dec
int3
pop
mov
mov
jle
arpl
pop
push
or
xor
jle
dec
mov
cmp
pop
cmp
hlt
push
xchg
xor
daa
sbb
and
shl
std
pop
(bad)
cmc
nop
pop
jmp
sbb
or
cmp
out
and
call
inc
mov
dec
shl
mov
jns
imul
(bad)
sub
loope
sbb
xor
rcl
(bad)
ds
or
outs
stos
push
inc
cmps
lea
pop
ficom
fist
iret
sub
icebp
pop
mov
pop
retf
dec
mov
inc
clc
or
repnz
add
shr
xchg
xchg
jno
jg
lahf
call
jns
jmp
(bad)
aaa
in
loopne
jmp
adc
pop
neg
adc
xor
pop
aam
sbb
xor
jae
xor
adc
add
add
leave
push
aaa
(bad)
push
out
xor
sub
inc
mov
cdq
dec
mov
lock
test
ror
xchg
jb
xchg
xchg
aad
mov
nop
mov
mov
retf
imul
sbb
xor
push
adc
jmp
idiv
push
lds
ja
vphadduwd
mov
mov
mov
mov
push
sbb
or
push
mov
or
mul
out
dec
mov
xor
pop
mov
xchg
jp
or
pop
fiadd
pop
repnz
(bad)
push
add
sbb
and
aas
adc
push
sbb
repz
mov
pop
mov
popa
stos
xchg
gs
add
mov
cld
adc
inc
mov
fstp
and
jmp
mov
les
adc
cmc
xchg
dec
add
popf
jne
loop
mov
aam
fild
in
or
push
cmps
jb
icebp
push
mov
inc
mov
xor
sbb
xor
jl
stos
mov
icebp
and
add
inc
mov
jo
cmp
out
cs
test
xchg
jb
xchg
mov
fwait
arpl
and
jmp
fisubr
xchg
(bad)
jne
xor
push
ret
push
bswap
sub
adc
daa
pop
test
lock
pop
jecxz
mov
or
mov
pop
enter
pop
(bad)
xor
jnp
pop
test
cdq
xchg
sbb
adc
cmp
jns
cmp
add
jp
add
inc
shr
retf
(bad)
cwde
xchg
and
dec
jb
mov
push
std
aas
sbb
push
stos
xchg
js
inc
mov
in
fdivr
add
xor
cs
mov
cmc
imul
enter
sub
cmp
and
cld
inc
xor
loopne
(bad)
xor
loopne
(bad)
cmp
das
addps
imul
or
mul
in
mov
enter
cmc
inc
clc
popf
mov
and
and
adc
xchg
xchg
scas
lahf
mov
inc
les
dec
les
xchg
cmc
inc
aam
cmps
jno
inc
mov
pusha
aam
test
cmp
cmp
lahf
popf
(bad)
xchg
jne
xchg
fwait
mov
(bad)
push
into
and
enter
mov
push
int
pop
aad
or
cli
cs
or
sti
mov
add
test
stos
jb
ss
xor
pop
mov
shl
into
notrack
dec
(bad)
or
loopne
mov
retf
sub
pop
mov
sub
add
sub
jl
lea
and
pop
lods
lahf
inc
repz
(bad)
cmp
retf
dec
fidiv
xor
mov
int
sbb
(bad)
call
in
out
in
push
stos
xchg
arpl
xor
clc
xor
dec
fmul
or
cmp
push
sub
out
and
sahf
jbe
(bad)
sub
dec
jmp
jbe
xchg
mov
jnp
jle
cmp
pop
sar
add
scas
mov
pop
out
cmp
push
sbb
aas
cmc
pop
stos
js
and
pop
nop
xchg
call
and
std
push
adc
inc
fistp
mov
js
ds
push
sub
(bad)
or
loopne
(bad)
xor
cmp
imul
adc
and
pop
mov
xchg
mov
add
push
cmc
mov
test
xor
imul
cmps
push
in
test
jo
pop
scas
jae
cli
dec
retf
sub
adc
inc
and
aas
retf
pop
shr
rcr
mov
sahf
jp
inc
mov
rcr
pop
mov
xor
ror
icebp
imul
test
jmp
jns
ins
adc
inc
(bad)
pop
call
fwait
cwde
jle
mov
daa
adc
pusha
mov
jo
push
test
add
cmp
aad
loop
out
dec
scas
cwde
jns
inc
xchg
add
ret
xor
fstp
inc
cmp
cmps
inc
mov
or
jmp
cmp
push
xchg
call
lea
inc
mov
pop
test
mov
fisub
adc
test
popf
jge
xchg
(bad)
xchg
cdq
movs
loope
mov
mov
enter
inc
mov
or
dec
mov
sar
cs
mov
mov
mov
leave
cmp
pop
cmc
ja
nop
xchg
jne
mov
jg
and
clc
and
pop
int
mov
enter
int3
xor
lock
add
push
fild
jmp
das
lds
pop
fisttp
jle
mov
dec
ss
push
into
cmp
jne
movs
mov
lods
addr16
sub
xor
jle
pop
mov
cmps
mov
enter
add
sub
adc
repnz
dec
mov
fwait
outs
sub
dec
fdivr
xchg
jl
arpl
sub
or
dec
ret
xor
jno
bound
loope
add
inc
les
lds
jl
pop
cmps
fs
(bad)
movs
and
addr16
or
aad
mov
mov
cmp
shr
jmp
add
clc
inc
mov
or
adc
push
mov
cmc
daa
sar
xor
pop
call
or
test
xchg
push
mov
icebp
es
call
pop
fdiv
ja
jns
jg
cs
or
add
das
jecxz
fisubr
inc
lods
mov
xchg
inc
add
inc
mov
popf
inc
mov
cmps
xchg
ins
sbb
ret
cmp
jg
push
mov
test
shl
sbb
cs
xor
sub
dec
fmul
inc
mov
retf
and
sbb
in
cli
and
clc
cmp
fdiv
push
stc
and
add
and
adc
das
jmp
sub
push
cmps
push
sub
add
inc
repnz
int
in
cmp
pop
cs
das
repnz
test
xchg
push
add
jecxz
repz
(bad)
cmp
mov
xchg
push
jo
mov
sti
nop
clc
fwait
outs
adc
mov
mov
xchg
mov
xchg
pop
cmp
mov
mov
cmp
jl
ins
cmp
mov
(bad)
and
fstp
or
pop
out
inc
xor
scas
pop
adc
pop
or
mov
or
jle
inc
mov
addr16
outs
fistp
or
cs
fisubr
lds
dec
jp
mov
xchg
adc
xchg
mul
outs
call
dec
scas
retf
mov
jbe
(bad)
jnp
daa
push
add
mov
pushf
bound
fs
inc
push
imul
jnp
cmp
outs
nop
fld
pop
xor
fwait
idiv
retf
in
icebp
mov
add
adc
dec
or
ror
shl
adc
add
dec
cmp
ss
add
jae
fnstcw
retf
mov
push
and
jnp
pop
push
pop
dec
adc
dec
loope
test
out
lea
ret
out
sub
ds
aad
dec
addr16
in
sbb
inc
or
loop
xchg
rcl
test
xchg
jnp
js
(bad)
dec
cmp
xorps
repz
clc
mov
rcl
and
aam
dec
and
ror
mov
inc
sub
mov
cmp
outs
and
ins
and
rol
fldenv
stos
sbb
or
stos
cmp
push
pop
xor
jle
je
neg
pop
pop
xor
fidivr
loop
into
pop
loope
cli
test
icebp
call
cmovbe
or
pop
or
mov
jmp
xor
dec
push
scas
jmp
out
mov
xor
loope
push
add
aaa
sbb
push
inc
lock
xchg
shr
jp
xchg
rol
xor
jp
test
shr
call
dec
sbb
sbb
or
mov
(bad)
and
test
xchg
dec
adc
jmp
shl
das
outs
sub
int
mov
mov
xchg
push
xchg
fistp
rol
lods
mov
dec
sub
in
sahf
retf
xlat
addr16
cdq
int3
mov
call
call
popf
jmp
or
scas
jmp
loope
rcl
add
mov
call
xor
mov
bound
inc
adc
or
retf
xchg
into
call
cmp
and
or
in
push
es
pop
adc
inc
or
jg
inc
sub
outs
sub
push
add
xchg
mov
stos
jmp
leave
mov
sbb
jnp
xchg
mov
ret
push
(bad)
out
lds
inc
adc
sub
and
imul
mov
jp
and
jb
inc
or
sbb
js
jae
mov
and
outs
jle
push
stc
mov
les
mov
rcr
ja
loope
loope
jbe
arpl
add
mov
int3
mov
push
mov
and
test
push
xor
shl
ins
cmp
dec
enter
mov
jnp
test
mov
mov
nop
push
push
ss
add
lods
iret
mov
sahf
in
jne
daa
push
sub
dec
push
xchg
(bad)
call
mov
push
and
cmps
jecxz
xor
inc
out
adc
pop
stos
jmp
jbe
push
lds
repz
mov
aas
jle
ins
(bad)
fisubr
sbb
int
je
(bad)
xchg
jecxz
or
imul
sub
lods
shr
pop
inc
mov
jl
dec
or
(bad)
out
sub
pop
and
ins
mov
js
xchg
cmps
imul
push
dec
add
cmc
sahf
not
cli
mov
test
sub
ss
sub
adc
cdq
leave
mov
xchg
shl
adc
ret
mov
adc
(bad)
pop
bound
push
test
xchg
stc
call
mov
xchg
fdiv
mov
xchg
rol
ficomp
retf
mov
clc
xor
add
out
pop
mov
xchg
sar
jl
or
xchg
mov
sbb
lods
jmp
test
push
ss
sbb
add
daa
push
mov
push
scas
icebp
push
lock
test
jg
movs
jae
jl
lds
pusha
sub
fidiv
and
dec
pop
lock
mov
hlt
mov
mov
jg
xchg
jb
mov
push
mov
xor
std
mov
and
dec
jno
cmps
leave
mov
dec
sar
jo
xchg
aam
dec
sbb
sbb
int3
scas
sbb
xchg
rcr
jl
push
sar
dec
sbb
imul
pop
jl
ja
into
imul
adc
dec
out
scas
pop
mov
pop
imul
sbb
fldenv
out
scas
arpl
dec
push
bound
mov
xor
call
inc
adc
push
out
xchg
int3
lahf
fist
push
aad
cwde
jb
pop
sub
and
dec
ficom
pusha
fstp
stos
sahf
pop
or
xchg
(bad)
outs
mov
nop
loope
jp
ret
sbb
xor
cmp
dec
or
inc
and
aad
sbb
dec
aas
jle
jbe
cmp
xor
mov
vorps
jbe
popa
(bad)
leave
rol
daa
mov
and
adc
add
add
das
outs
sub
jecxz
dec
in
ds
push
(bad)
pop
loop
adc
sub
enter
test
cmp
cmp
push
xchg
ret
clc
adc
xor
push
jae
jo
out
pusha
sub
hlt
lods
imul
retf
mov
mov
dec
rcr
and
mov
adc
mov
and
cwde
iret
mov
adc
inc
xchg
mov
adc
(bad)
mov
push
cmps
out
sbb
clc
xor
mov
dec
or
adc
stc
mov
imul
aaa
jae
inc
or
scas
scas
jno
(bad)
stc
and
call
jns
loop
jno
das
les
js
ins
sbb
loop
icebp
xchg
(bad)
ins
mov
adc
pop
xor
js
fucomp
or
sub
mov
and
(bad)
or
iret
(bad)
sar
in
mov
enter
inc
add
mov
cmp
adc
fisub
ret
xor
in
mov
in
mov
mov
adc
cmp
pop
jl
ja
retf
test
add
scas
outs
xor
mul
imul
and
loop
out
pushf
enter
mov
clc
test
lds
rcr
pop
adc
jae
add
cmp
push
(bad)
push
or
outs
xor
jnp
(bad)
push
addr16
cdq
inc
add
ss
adc
pushf
retf
xor
test
les
and
sbb
clc
mov
xchg
push
out
lds
in
push
mov
jnp
push
dec
or
bound
inc
adc
(bad)
mov
pop
push
stos
jp
cmps
mov
mov
or
jb
inc
adc
aam
mov
retf
inc
or
or
jg
call
fistp
mov
ds
dec
mov
iret
push
mov
add
mov
(bad)
in
push
dec
push
cwde
icebp
mov
out
sub
push
call
ja
dec
sbb
cmp
xor
inc
cwde
in
mov
frstor
xchg
shl
imul
mov
leave
sub
dec
or
scas
jmp
xchg
std
mov
xor
bound
inc
nop
arpl
test
mov
push
adc
stos
and
mov
test
cwde
and
cmp
jg
mov
push
dec
xor
ins
or
in
inc
jp
ficomp
pop
sub
mov
arpl
inc
adc
xchg
retf
mov
out
inc
add
xor
(bad)
xor
mov
lods
arpl
jle
ins
(bad)
mov
mov
mov
lea
int3
in
out
xor
xchg
mov
jno
mov
in
(bad)
cmp
mov
(bad)
out
js
mov
rol
dec
jno
aam
lock
ins
sbb
mov
add
int
inc
and
lds
aam
mov
xor
repnz
fadd
push
pop
sbb
mov
je
jmp
inc
or
inc
mov
dec
sahf
cmc
in
int3
sbb
mov
jge
iret
add
ja
push
and
clc
push
adc
(bad)
movs
pop
adc
sbb
pop
add
mov
ror
loop
add
daa
jmp
pop
or
mov
ds
sbb
retf
loop
sub
fnsave
iret
mov
mov
inc
adc
das
jno
or
das
ja
sahf
out
in
xchg
lods
inc
add
pushf
int
push
mov
jp
(bad)
int3
sbb
and
fucomi
call
ret
test
mov
pop
jbe
fldcw
push
fimul
hlt
lods
and
fstp
mov
ds
ret
cmp
pop
mov
jl
js
lock
adc
inc
or
inc
mov
stos
test
daa
dec
cmps
jge
jns
inc
sbb
es
jmp
inc
mov
xchg
loopne
data16
(bad)
mov
pop
mov
or
retf
cmp
je
ss
test
jo
cmc
xchg
or
ins
fld
outs
or
pop
lahf
out
in
test
pop
adc
mov
inc
cdq
and
mov
lods
xchg
xor
xor
bound
aad
movs
sub
shr
inc
loope
inc
push
or
push
push
push
jae
fmul
mov
out
sub
loopne
inc
dec
pusha
sbb
and
mov
sub
xor
test
into
mov
inc
and
add
sbb
xchg
int
idiv
cmp
mov
sar
lahf
fld
cmps
push
add
pusha
pusha
ss
sub
arpl
aam
xor
sub
rep
bound
mov
inc
xor
mov
ds
test
fimul
rcl
sbb
call
xchg
mov
or
or
iret
ror
add
xor
cdq
dec
cwde
in
out
stos
push
pop
cmps
dec
add
loope
test
xchg
leave
pop
dec
clc
sahf
in
mov
jo
aam
mov
sahf
push
mov
outs
mov
push
cmp
test
mov
fisttp
or
ror
sub
xchg
repnz
push
dec
fisubr
mov
push
xor
in
xchg
in
out
and
daa
push
add
mov
mov
test
jl
repnz
in
pop
dec
add
into
cmp
clc
pop
xchg
loop
lock
sbb
jb
gs
sbb
and
stc
sub
retf
jle
and
out
out
fldcw
dec
scas
icebp
cmps
jecxz
pop
xchg
int
std
mov
lods
in
bound
stc
test
jp
dec
jecxz
or
jb
(bad)
mov
xor
sbb
jmp
out
mov
loop
xchg
jg
sub
cmc
xchg
leave
call
adc
pop
fwait
aad
or
push
jl
pushf
mul
mov
scas
outs
sub
sub
pop
repnz
cmp
xlat
pop
movs
mov
lea
lods
push
daa
adc
std
mov
jo
sbb
stc
out
stos
(bad)
shr
fcom
test
mov
cdq
push
cdq
pop
or
into
test
mov
jmp
pusha
(bad)
cld
stos
jmp
inc
test
leave
stos
jnp
pop
push
adc
or
into
mov
inc
mov
add
dec
mov
push
aam
adc
jbe
jbe
dec
mov
adc
lods
adc
pushf
jmp
fisttp
xor
repnz
mov
adc
cmp
fs
test
and
fimul
rcr
das
pop
or
pop
loope
xlat
lea
inc
mov
nop
repz
movs
loopne
repnz
(bad)
mov
fidiv
out
in
xchg
jae
xabort
out
push
adc
ret
xor
lods
clc
cli
mov
and
lds
pusha
sub
adc
xchg
loope
jge
sub
cmovle
push
js
push
retf
mov
or
dec
pop
and
mov
push
cmc
mov
sub
jg
pop
sbb
mov
inc
push
dec
or
aas
ja
out
shl
xchg
int
mov
dec
(bad)
in
loopne
(bad)
xchg
in
adc
aad
mov
xchg
jecxz
or
shl
pop
jno
mov
hlt
mov
stos
out
cmps
clc
popf
int3
hlt
mov
and
and
data16
mov
lods
fld
dec
pop
jb
pop
xor
xor
push
stos
leave
or
jne
sub
test
lods
mov
call
jecxz
mov
test
push
dec
das
jle
fidiv
and
stc
mov
pop
xor
aas
jb
div
mov
(bad)
cli
lods
jb
aam
ins
sub
pop
imul
jmp
out
ror
repnz
stos
hlt
loope
xor
icebp
cmps
rcr
adc
pop
jne
mov
xchg
xlat
xchg
imul
retf
cwde
fsubr
sbb
repnz
test
adc
ds
sbb
jmp
fidiv
inc
and
jp
(bad)
(bad)
sub
movs
ror
and
lods
out
cmp
cdq
shr
sbb
fmul
call
cmp
xchg
bound
push
fisub
inc
rcr
ins
cmp
and
out
ror
xor
test
addr16
jae
popa
mov
adc
push
or
dec
sub
sahf
fidiv
jnp
adc
xchg
xchg
repnz
xchg
shl
inc
adc
mov
inc
jmp
aad
repnz
js
repz
mov
pop
sub
sar
dec
push
retf
(bad)
in
scas
mov
push
lods
ret
les
je
xor
fisubr
ret
pusha
pop
adc
xor
jns
cmps
mov
test
adc
sub
push
dec
push
js
shl
mov
fwait
xor
lods
ret
sub
cmp
int
pop
cmp
fcmovne
or
jmp
inc
sti
sbb
hlt
iret
scas
repz
addr16
xchg
xchg
aam
(bad)
xchg
lock
jl
xchg
(bad)
hlt
mov
mov
or
shl
push
pop
mov
inc
push
push
adc
rcl
jmp
ret
out
xchg
add
mov
clc
call
cmp
pop
dec
punpckhdq
je
sbb
pop
adc
outs
sub
imul
mul
hlt
mov
dec
jp
mov
xchg
stc
xchg
sti
iret
mov
daa
jnp
sbb
pop
add
mov
xor
mov
mov
jle
push
rcl
retf
fucomip
call
(bad)
xchg
rcl
adc
fs
pop
out
xchg
iret
mov
pop
pop
dec
dec
or
enter
retf
xor
add
call
add
icebp
scas
(bad)
xchg
inc
and
repz
frstor
xchg
repz
jg
jmp
push
add
pop
movmskps
sar
mov
xchg
mov
lds
sar
lods
fimul
std
adc
push
adc
sbb
fsub
sbb
dec
enter
dec
sub
or
jg
fimul
xchg
push
or
jmp
cmp
lods
in
mov
sub
or
or
or
(bad)
lea
sbb
cwde
(bad)
jmp
enter
dec
leave
iret
mov
popa
cld
sbb
stos
stc
fwait
das
xor
loopne
pop
jmp
mov
cmps
dec
int3
(bad)
out
lds
push
stos
jmp
jge
fcomp
in
add
jle
arpl
pusha
adc
aad
sahf
sar
jno
pop
push
sub
test
cmp
mov
cld
je
jmp
sub
jp
js
movs
mov
inc
and
cmps
lock
test
lods
pushf
adc
outs
xor
fwait
iret
outs
sbb
out
in
add
(bad)
cmp
cmps
jmp
clc
push
push
sub
dec
test
js
mov
dec
sbb
stos
inc
push
jne
mov
mov
pop
js
inc
sub
repz
xchg
jb
or
js
fisub
out
jbe
inc
in
xchg
sti
cwde
jmp
jg
cmp
push
mov
addr16
stc
mov
cwde
icebp
or
pop
sbb
jmp
leave
popf
fistp
or
inc
sbb
or
imul
inc
ss
and
and
jge
outs
ins
mov
test
mov
push
add
push
mov
pusha
cmps
pop
das
data16
data16
cmp
cmc
scas
stc
cwde
and
and
xchg
inc
adc
loope
lds
sub
out
or
int
pop
aad
std
mov
std
mov
mov
ins
das
inc
adc
test
dec
jl
push
add
hlt
je
leave
(bad)
fcom
pop
sbb
stos
aad
int
out
adc
add
xor
adc
(bad)
mov
adc
arpl
mov
sub
cs
mov
into
mov
or
sbb
imul
dec
cmp
mov
cld
test
xor
jbe
jl
pop
in
shl
js
dec
or
cmp
push
and
je
scas
aad
ficomp
dec
sbb
push
sbb
imul
cmc
mov
into
popa
xor
add
std
mov
(bad)
adc
pop
add
push
xor
push
cs
jno
arpl
push
and
cmp
dec
add
inc
adc
pop
xchg
xlat
mov
fdiv
pop
or
cs
push
pop
sub
arpl
inc
std
popa
or
dec
or
out
mov
push
and
data16
shr
int
repz
pusha
and
ss
add
add
fisttp
mov
sub
loope
pop
sbb
bound
inc
sti
xchg
xchg
icebp
mov
cwde
iret
mov
xor
packuswb
sub
repnz
clc
mov
xchg
xchg
sti
add
pop
sbb
aaa
push
dec
and
data16
test
mov
popf
int3
mov
call
dec
or
pop
mov
mov
mov
push
pop
inc
adc
mov
call
nop
retf
call
mov
mov
mov
xchg
shl
jns
jg
nop
movs
hlt
lahf
not
aas
inc
sbb
add
and
push
sub
jb
xchg
xchg
ret
ds
outs
cmp
adc
jo
ins
cmp
popf
fst
outs
loop
lds
pop
or
pop
cmp
in
lods
lds
leave
mov
mov
jno
jae
dec
cmp
in
mov
aad
ret
mov
xchg
rcl
out
in
pusha
xor
mov
(bad)
imul
inc
adc
jo
out
mov
push
jle
outs
cmp
(bad)
xchg
out
mov
mov
or
jbe
push
leave
push
adc
mov
xchg
aam
jmp
out
mov
push
adc
pop
sub
js
pop
or
imul
jl
data16
push
jae
pop
push
dec
add
push
sbb
pop
push
gs
test
out
popw
bound
inc
adc
mov
test
(bad)
inc
aas
addr16
sub
fild
imul
xor
inc
add
xchg
push
add
or
mov
sub
mov
dec
es
mov
fistp
push
xor
mov
sbb
jns
xchg
(bad)
fidivr
sbb
in
jge
xchg
xchg
int
imul
xor
mov
xlat
cs
rcl
jmp
stos
test
pop
pop
lds
outs
sub
cwde
mov
cmps
jae
ret
xchg
inc
sub
xchg
xor
pop
mov
xchg
(bad)
dec
or
imul
or
clc
cmp
mov
mov
sbb
jg
cdq
popa
xor
scas
bound
lock
(bad)
inc
fst
lods
into
sub
cmc
inc
or
mov
mov
fist
pop
push
or
jo
mov
(bad)
outs
mov
mov
ret
test
pop
adc
mov
mov
rcl
adc
into
or
lahf
sahf
leave
and
into
cdq
xchg
rol
(bad)
mov
(bad)
movs
dec
sbb
mov
shl
lods
call
ds
adc
pop
jl
out
push
lods
jmp
xor
mov
movs
inc
adc
xchg
int3
adc
ror
rol
jmp
add
pop
retf
pop
addps
lea
test
imul
add
repz
adc
shl
jae
leave
or
mov
lods
(bad)
pop
stos
stc
pop
or
fwait
jnp
retf
out
daa
sbb
aam
ja
out
cmp
(bad)
xor
(bad)
pop
or
mov
mov
pop
sub
outs
fcomp
test
push
es
mov
and
jecxz
adc
push
out
call
sub
xor
push
mov
das
push
rol
jno
mov
loopne
dec
and
test
dec
cmps
fdivr
add
or
xchg
ror
rol
push
sub
je
mov
jns
add
adc
pop
aad
lods
cld
dec
and
pop
cld
mov
xchg
ret
sub
mov
jne
mov
cmp
or
call
xor
lahf
dec
add
mov
test
retf
dec
adc
xor
rol
push
(bad)
mov
or
ret
clc
mov
jbe
sbb
test
stos
dec
or
mov
cwde
sti
das
jnp
jmp
inc
movs
cld
pop
sbb
mov
outs
pop
jecxz
jno
in
inc
pop
repnz
arpl
cvtdq2ps
mov
aad
push
out
push
pop
mov
xor
test
pop
adc
arpl
mov
rcl
jmp
lods
mov
dec
aam
test
xchg
stc
inc
es
out
inc
sbb
inc
les
popa
or
js
mov
gs
sahf
movs
icebp
bound
add
mov
or
dec
std
xchg
cmps
icebp
jnp
xor
jmp
pop
cs
or
xchg
lds
(bad)
pop
sbb
(bad)
mov
adc
mov
xor
push
test
and
in
sub
(bad)
fisubr
jle
mov
ret
test
xrelease
sbb
movs
shl
xchg
and
or
retf
sub
cmp
sub
out
push
pop
cmc
nop
popf
call
ret
mov
and
ins
cmps
not
jnp
dec
dec
std
stos
call
movs
xchg
jecxz
add
mov
push
mov
jb
or
mov
jp
xchg
mov
inc
add
sub
neg
cmp
push
push
test
inc
and
pop
div
outs
sub
pop
mul
adc
fidivr
xor
les
xchg
ja
out
nop
jmp
push
fidiv
(bad)
int
push
xor
lods
in
ss
mov
ror
xor
sbb
push
mov
ins
aas
jecxz
xchg
icebp
inc
xor
push
int
xchg
in
adc
out
xchg
paddsb
sbb
sar
pop
mov
mov
ret
sub
enter
mov
mov
sub
or
push
and
sahf
push
adc
mov
mov
sar
dec
mov
add
inc
xchg
push
pop
jmp
mov
neg
cdq
out
push
sub
inc
mov
jl
(bad)
movs
in
dec
mov
sub
scas
cwde
enter
aam
adc
xchg
popa
sbb
inc
(bad)
cmp
fstp
pop
pop
cmp
sbb
jp
repz
or
mov
xchg
jbe
hlt
add
out
bound
push
dec
cli
xchg
cwde
jmp
imul
popf
out
addr16
bound
out
call
sub
mov
xchg
loop
sbb
lea
rcl
fisttp
jp
mov
ja
push
jge
mov
cld
xchg
int3
call
cld
mov
enter
out
mov
rol
sub
inc
mov
cmp
adc
jb
mov
and
in
cmp
push
mov
call
lahf
jmp
or
retf
mov
mov
jmp
dec
movq
mov
cmp
xchg
and
stc
cmp
adc
(bad)
sti
inc
cmp
je
xchg
outs
or
outs
retf
frstor
push
movs
loope
sbb
mov
(bad)
stc
push
sub
mov
adc
inc
xor
ins
aad
xchg
shr
push
add
aam
ja
cmp
mov
push
les
popf
cmc
pop
je
mov
jmp
jo
or
push
and
jnp
(bad)
pop
sub
or
bound
std
and
adc
lods
pusha
adc
or
mov
dec
xor
dec
leave
mov
cdq
out
pop
and
mov
jp
mov
retf
xor
fst
xor
mov
xlat
xor
jmp
xchg
not
stos
je
les
adc
inc
shl
push
movs
sar
sti
push
and
xchg
jns
loop
push
adc
cmc
dec
or
mov
or
nop
inc
push
push
retf
fistp
fistp
add
(bad)
push
pop
cli
mov
mul
shl
lods
fsubr
ficomp
repnz
out
mov
xchg
push
adc
fwait
sahf
out
push
adc
mov
retf
int3
mov
cmps
fadd
mov
enter
jmp
xchg
out
data16
aaa
inc
int
addr16
cmps
jp
int3
mov
clc
test
push
pop
ins
cmps
loopne
cmp
ds
aad
outs
sbb
jno
out
push
sbb
mov
out
jne
(bad)
lods
mov
or
fidivr
jg
repz
cmp
stos
test
fisubr
pop
or
ret
aam
jge
in
cwde
jb
xrelease
stc
mov
mov
ss
rcl
inc
adc
in
mov
xor
hlt
dec
ds
mov
mov
xor
sub
push
cmp
pop
mov
dec
cmp
mov
and
inc
xchg
pop
xor
mov
fbld
cmp
mov
aad
mov
js
mov
sub
leave
sub
bound
fisttp
addr16
adc
movs
inc
pop
ret
test
call
lock
cmp
scas
outs
sub
test
sub
push
aam
inc
push
pop
inc
sub
dec
pop
dec
fcomp
cmp
xchg
cdq
into
sub
xchg
xchg
bound
rol
inc
stos
repnz
add
mov
lods
les
in
lods
jmp
and
mov
mov
mov
xchg
xchg
(bad)
xor
sti
aaa
jnp
(bad)
push
cmp
movs
dec
pop
rol
(bad)
leave
pop
or
mov
std
cmp
dec
pop
loop
(bad)
in
xor
mov
mov
cmp
mov
mov
dec
sbb
push
mov
sub
es
inc
(bad)
stos
mov
push
sbb
mov
pop
or
dec
(bad)
outs
and
pushf
inc
sub
nop
mov
cmovnp
nop
scas
test
(bad)
xchg
ret
pop
outs
mov
pop
sbb
lahf
mov
sub
mov
enter
in
mov
repnz
cmp
hlt
mov
cmp
lea
cli
mov
sub
push
jmp
imul
test
ror
loope
(bad)
retf
dec
add
mov
aam
imul
inc
aad
mov
and
sub
xchg
retf
mov
jmp
jbe
call
sahf
xchg
or
(bad)
xor
(bad)
push
adc
out
sahf
test
ss
ret
test
add
aas
jbe
fcom
in
test
sub
nop
inc
sub
add
neg
loope
xchg
fild
sbb
div
(bad)
ficomp
ret
(bad)
push
aad
ins
cmp
test
or
inc
mov
or
out
xor
scas
push
adc
mov
and
mov
jb
call
je
cld
pop
push
cld
xchg
(bad)
ficom
clc
mov
and
jge
in
data16
mov
aaa
(bad)
cmps
imul
cmp
sub
mov
xor
mov
int
jnp
in
dec
(bad)
retf
push
dec
das
pop
jmp
retf
or
ss
mul
or
jecxz
bound
stos
jbe
in
mov
dec
adc
gs
pop
fist
fcomp
in
imul
xchg
or
sahf
mov
mov
cwde
icebp
sub
ret
sbb
push
jecxz
jne
loop
mov
dec
fmul
aad
ja
repz
cdq
int
movs
in
sub
mov
sub
(bad)
jbe
clc
and
fnstcw
adc
test
(bad)
lahf
jge
sbb
sahf
mov
or
lods
cli
pop
sbb
in
xchg
cwde
arpl
in
mov
retf
and
mov
dec
add
inc
es
xchg
je
cmc
mov
scas
jmp
push
(bad)
and
push
cmp
add
mov
mov
nop
jns
dec
movs
aam
jg
frstor
jae
fldenv
and
ins
lods
(bad)
das
jns
mov
(bad)
popf
out
popa
mov
pop
mov
pop
es
mov
hlt
add
xor
cmps
(bad)
jp
jmp
loope
push
jmp
mov
shl
rol
pop
sbb
mov
out
lahf
cli
push
and
div
jg
sbb
call
inc
adc
mov
add
shl
arpl
lods
mov
jns
loopne
movs
ror
and
mov
and
test
push
cmc
popf
test
xchg
xlat
dec
cmp
mov
mov
jne
push
dec
pop
imul
xchg
aad
xor
pop
xor
fs
aad
scas
aad
pop
pop
out
jg
sbb
cmp
(bad)
bound
mov
mov
mov
jge
out
je
shr
or
aaa
popa
shl
test
mov
sti
sub
push
mov
mov
pusha
xor
mov
cld
mov
mov
iret
cmp
je
jmp
add
mov
push
cmp
call
data16
jp
mov
dec
ds
test
lock
push
add
shr
imul
or
xchg
dec
sub
dec
sbb
cdq
js
(bad)
xchg
jno
adc
pushf
dec
cmp
pushf
outs
cmp
mov
outs
cs
fwait
jae
out
stos
(bad)
neg
add
test
fsub
xchg
repnz
cmp
or
cmp
mov
daa
dec
mov
cmps
xchg
call
test
call
xchg
in
pop
or
dec
movups
mov
xor
ret
jp
(bad)
mov
es
cld
add
nop
jo
sbb
lock
paddw
mov
push
and
push
mov
fisub
push
movs
loop
and
fwait
je
aas
imul
(bad)
xchg
out
das
loopne
(bad)
cmc
and
xor
dec
cmp
mov
jae
mov
sbb
adc
mov
jg
jmp
jmp
dec
xor
pop
sbb
scas
mov
cmp
aad
inc
shl
push
sub
dec
adc
ss
icebp
je
cmc
mov
or
test
add
sbb
mov
mov
inc
xor
inc
fsubr
pusha
sbb
jno
or
mov
repnz
sub
enter
jecxz
inc
mov
fdiv
addr16
test
adc
mov
inc
and
xchg
jnp
les
and
lea
movs
xchg
in
sub
mov
cmp
outs
das
sti
pop
loopne
xchg
in
push
add
shl
push
js
xchg
jg
jmp
add
dec
mov
mov
xor
inc
pop
push
lock
cmp
popa
adc
inc
cld
mov
out
stos
mov
cmp
test
push
es
xchg
in
and
dec
mov
popa
mov
leave
cmp
fdivr
imul
cwde
jmp
je
aam
jne
xor
jle
mov
retf
push
and
cdq
inc
pop
clc
add
jno
fidivr
test
mov
cmc
nop
ins
sbb
mov
lds
adc
push
loope
jp
icebp
mov
les
jbe
adc
(bad)
not
adc
lds
mov
lods
sti
xor
sar
cmovnp
ret
push
and
test
loopne
push
jmp
stos
jo
push
push
test
push
pop
loope
xchg
out
gs
mov
rcl
pop
loop
pusha
adc
mov
pop
ss
(bad)
jl
out
cdq
rol
shl
stos
fild
jb
test
mul
push
adc
mul
fstp
jns
enter
lock
mov
rol
jo
mov
adc
ret
mov
fld
or
out
push
sub
inc
xor
pop
or
xor
(bad)
mov
sbb
mov
test
add
jge
xchg
aad
mov
fimul
ins
test
sub
jo
xchg
outs
adc
test
cmp
hlt
and
lock
ret
out
fwait
jno
out
stos
xchg
out
mov
dec
and
mov
(bad)
leave
call
add
push
test
and
out
push
and
popa
retf
cwde
inc
adc
xchg
push
sbb
fld
mov
les
and
adc
cwde
ins
sbb
mov
outs
sub
push
mov
pop
ficomp
ins
aas
cmp
jg
popf
gs
test
mov
jp
into
call
movs
pushf
retf
xlat
mov
(bad)
mov
cmc
cdq
jecxz
(bad)
sti
xchg
outs
sbb
adc
pusha
test
push
and
mov
sub
mov
in
data16
cmp
inc
mov
dec
sub
popf
inc
add
ins
cmp
adc
stc
inc
push
pop
xor
ds
mov
repz
mov
sbb
scas
pusha
and
xor
inc
fidiv
out
push
sub
inc
adc
cmp
dec
int3
mov
dec
pop
adc
scas
mov
pushf
mov
out
xor
enter
inc
cmp
arpl
pop
mov
fistp
stc
pop
push
sbb
arpl
sbb
(bad)
xchg
pusha
or
xchg
dec
cmp
adc
inc
icebp
test
std
mov
loopne
(bad)
cmc
and
in
cmp
xchg
in
inc
adc
iret
mov
in
mov
jae
lock
(bad)
cmps
frstor
jne
add
mov
dec
or
fldcw
sub
jmp
inc
mov
shr
mov
shr
xor
shr
js
in
xor
inc
fldenv
call
add
nop
jne
jge
or
int3
push
and
mov
pop
es
mov
scas
fiadd
inc
int3
mov
inc
cmp
push
fidiv
xor
pop
scas
cld
pop
or
fistp
jge
imul
aam
jp
adc
mov
or
cmp
js
test
dec
daa
cs
jmp
jp
xor
and
jg
xchg
imul
fbstp
test
or
mov
jp
xchg
push
in
popf
mov
push
scas
(bad)
dec
cmp
push
rol
mov
cli
je
or
fbld
mov
xor
push
mov
xor
xlat
add
mov
sbb
lods
jmp
fnstenv
mov
sub
sbb
or
fs
xchg
pop
and
mov
inc
pop
cmc
xor
xchg
inc
adc
cmps
push
sbb
jp
repz
arpl
hlt
mov
sbb
xchg
(bad)
nop
aam
call
pop
xchg
aad
jp
sbb
je
pop
lods
cli
and
adc
pop
push
scas
aad
ins
scas
(bad)
push
and
scas
mov
fld
push
adc
mov
mov
(bad)
js
fimul
jecxz
mov
push
das
sbb
jmp
out
jb
dec
mov
cmp
arpl
sahf
dec
xor
pop
mov
lds
int3
xor
rcr
in
jo
sbb
xor
movs
sar
jp
repnz
es
bound
(bad)
mov
stc
cs
aad
inc
mov
inc
xor
pop
sbb
mov
lock
test
sub
jmp
mov
inc
adc
pop
clc
lea
cld
cmp
mov
aaa
pop
outs
or
movs
loop
cmp
popf
outs
cmp
enter
fwait
out
es
add
and
stos
push
add
popf
dec
sbb
test
inc
xor
push
stos
mov
and
rcl
loope
xchg
pop
daa
jg
rol
rcl
je
out
xchg
jno
stc
xchg
mov
xor
sar
inc
mov
ins
cmp
mov
into
(bad)
xchg
jecxz
pop
xchg
xor
mov
dec
daa
sbb
and
je
mov
ret
out
add
xchg
gs
add
adc
outs
mov
add
and
(bad)
test
push
imul
add
test
mov
je
jmp
pushf
jnp
ret
aad
pop
xor
arpl
mov
xor
cmps
nop
jecxz
(bad)
retf
mov
test
jmp
pop
mov
xor
out
sub
retf
xlat
jae
repnz
sbb
aam
adc
mov
and
and
cmc
add
cs
cmp
pop
int
push
data16
xchg
data16
and
inc
pop
jl
ja
sti
mov
(bad)
xchg
sahf
enter
dec
mov
pop
sub
jl
test
inc
sar
jg
cmc
pop
scas
lahf
cli
inc
xor
jnp
leave
or
mov
mov
xchg
aad
jb
xlat
add
jmp
cmp
adc
test
jmp
xchg
mov
jge
repnz
pop
mov
mov
pusha
test
inc
shr
jnp
pushf
mov
movs
shr
push
shl
push
fcomp
ins
add
push
and
imul
push
div
mov
xor
cld
pop
xor
mov
aad
jne
fldcw
jl
cli
push
xor
jb
xchg
jo
cli
mov
loope
popf
int
adc
xchg
outs
sub
jne
leave
call
les
jne
jge
arpl
cmp
mov
rol
xor
mov
pushf
fst
cdq
jecxz
or
sbb
lds
jl
pop
inc
add
xor
and
icebp
xchg
inc
sbb
leave
mov
bound
jge
cli
jecxz
stos
inc
and
mov
inc
or
cs
dec
stos
cmp
or
pop
icebp
cmp
in
mov
imul
sti
cmps
ret
adc
or
clc
nop
out
aad
cwde
cmps
pop
pop
pop
imul
push
cs
or
jns
(bad)
cmps
div
pop
pop
inc
cmp
pop
pusha
sub
pop
or
inc
cmp
pop
mov
fisttp
dec
dec
mov
(bad)
shl
push
nop
mov
cmps
xlat
test
adc
fisubr
js
add
pop
xchg
pop
pop
sub
push
adc
rcl
mov
or
enter
cdq
ret
sbb
push
jns
add
ror
call
cld
mov
mov
addr16
repnz
and
mov
xchg
inc
push
cmp
cmp
adc
pop
adc
cmc
mov
(bad)
mov
movs
inc
cmps
repnz
icebp
xchg
xchg
push
aas
push
or
push
arpl
dec
push
jg
jg
and
jae
or
in
int3
mov
xchg
sub
pop
sbb
mov
iret
mov
push
jp
ins
cmp
sbb
leave
scas
shr
cwde
jb
mov
mov
inc
xor
in
jbe
inc
adc
add
jmp
xor
add
pop
cmp
ret
jb
push
cmp
(bad)
mov
repnz
jle
out
mov
ret
arpl
xor
xchg
into
nop
cmps
in
stos
and
dec
loope
lods
mov
call
jecxz
add
call
sahf
cmp
push
in
fsubr
push
add
imul
add
sbb
mov
mov
jns
sub
jmp
fimul
pop
cmp
inc
xor
pushf
aad
fwait
(bad)
int
call
aam
fldcw
sti
mov
fwait
jnp
movs
call
jecxz
pop
jmp
fstp
add
fstp
and
pop
int
jmp
push
xor
aaa
jnp
jnp
daa
pop
adc
arpl
mov
dec
ss
in
clc
adc
pop
in
leave
jno
in
mov
sub
daa
imul
fld
push
mov
mov
pop
loop
test
push
pop
popf
stos
mov
xchg
add
adc
cmp
fdiv
outs
icebp
xor
or
ins
sbb
daa
xlat
mov
call
movs
cld
mov
mov
test
jecxz
mov
retf
push
pop
or
cmp
dec
out
stc
out
jp
pop
add
jbe
inc
pop
ret
xor
clc
jb
and
jns
movs
cmps
cmc
outs
xor
mov
add
inc
(bad)
pushf
fdivr
xor
out
data16
adc
inc
or
and
cmp
(bad)
sbb
sub
dec
jecxz
dec
fisttp
pop
je
xrelease
dec
xor
retf
sbb
cld
add
push
in
jae
fwait
sti
cs
lods
and
push
mov
iret
adc
dec
ds
int
adc
dec
daa
push
movs
dec
push
pop
push
inc
aas
jns
inc
sbb
rcl
adc
add
scas
cmps
inc
mov
scas
int3
xchg
dec
mov
scas
(bad)
mov
mul
fistp
or
dec
mov
int
inc
cmp
je
mov
divps
push
es
jns
iret
out
fld
in
das
pop
mov
mov
div
push
xor
or
xchg
pop
ds
repnz
sbb
mov
adc
jo
hlt
mov
mov
movs
(bad)
xchg
loopne
pop
sub
xchg
and
jl
ror
cmp
dec
xchg
and
mov
sbb
popa
repnz
test
push
or
ss
cwde
daa
jns
xor
jae
pop
push
xchg
pop
xor
xor
mov
inc
pop
jge
mov
xchg
(bad)
popf
stc
sub
ret
sbb
div
js
inc
mov
out
sar
(bad)
mov
or
and
and
pop
into
add
dec
data16
repnz
outs
sahf
jae
and
cld
push
sbb
xor
xor
in
mov
in
lahf
rcl
ja
push
mov
xchg
jmp
iret
lahf
fild
(bad)
call
sti
cmp
mov
repz
stos
outs
dec
xor
aaa
sbb
inc
adc
addr16
les
movs
fadd
ret
shl
cs
rep
sbb
les
jnp
adc
imul
xor
cmc
mov
mov
mov
cwde
mov
rcl
cs
xchg
push
sub
imul
movs
mov
mov
test
add
sti
xchg
push
sahf
movs
rcl
inc
add
add
or
call
jo
test
sub
ret
xor
das
jno
aam
and
sub
stos
movs
ror
mov
mov
fbld
les
dec
jmp
out
test
adc
add
loopne
xlat
or
mov
jae
hlt
outs
xchg
js
(bad)
es
in
test
jne
cli
repnz
lods
leave
xchg
int
cmps
pop
or
inc
sbb
push
cmp
inc
push
aam
imul
adc
addr16
repnz
xchg
test
sbb
push
shl
dec
aaa
inc
xor
dec
add
and
inc
icebp
pushf
neg
push
xor
xor
js
mov
mov
test
pop
adc
fcomp
push
ds
sbb
out
push
sbb
xchg
movs
js
mov
loopne
dec
add
xchg
rcr
mov
test
es
sbb
cli
xchg
mov
or
jge
movs
mov
xchg
rcl
pop
fsub
xchg
jp
push
mov
das
and
jge
push
lock
movs
clc
gs
add
(bad)
repz
sub
test
inc
repnz
daa
scas
lods
cld
add
push
adc
push
test
adc
retf
mov
outs
mov
inc
add
xchg
std
push
xor
inc
pop
inc
(bad)
ret
xchg
mov
leave
movs
fistp
sbb
push
mov
jnp
pop
and
adc
cmps
loop
(bad)
and
scas
and
adc
cs
add
sub
inc
adc
int
retf
cdq
mov
cdq
lock
(bad)
sbb
adc
mov
fnstenv
out
aad
ficom
dec
sbb
pop
sub
ins
pop
and
adc
adc
jnp
int
mov
into
loop
jno
push
and
pop
sbb
repnz
pushf
xor
jns
push
sbb
sti
mov
stos
jno
jmp
mov
mov
mov
call
dec
add
jns
sar
adc
das
dec
xor
(bad)
mov
call
in
ror
repnz
jmp
lds
mov
das
jnp
jl
push
or
jle
dec
adc
dec
cmp
jb
xchg
mov
xchg
retf
ret
push
dec
call
mov
xchg
and
xor
push
cmp
inc
push
push
sub
sbb
not
fidiv
xor
dec
sub
lods
repnz
mov
mov
xchg
lods
cld
sbb
adc
adc
push
inc
push
dec
adc
mov
mov
mov
push
cld
(bad)
imul
and
jmp
cdq
movs
fistp
jmp
aad
and
arpl
clc
test
xchg
imul
fld
pop
clc
mov
mov
cmp
int
(bad)
adc
fwait
into
lahf
lods
pop
cmp
or
sti
mov
adc
or
repz
adc
pop
test
pop
sbb
add
jge
push
adc
test
call
fild
add
inc
in
jae
and
stc
test
mov
iret
pop
inc
pop
push
lods
jl
dec
loop
(bad)
nop
ret
pusha
jecxz
(bad)
(bad)
sti
mov
or
mov
nop
push
popa
sub
bound
aad
jo
xor
jmp
clc
push
add
je
mov
mov
mov
sbb
xchg
(bad)
(bad)
test
mov
mov
popf
dec
inc
in
mov
sbb
pop
fnsave
mov
push
or
leave
cld
sbb
sub
xchg
movs
cmc
xor
movs
inc
adc
and
cdq
jno
and
out
mov
xor
pop
pop
push
and
xchg
sbb
pop
bound
jb
jg
dec
xor
test
inc
cdq
fist
sbb
mov
xchg
lds
pushf
and
inc
or
inc
sub
test
pop
xchg
shr
data16
int3
les
mov
ret
xchg
ficom
sbb
stos
push
add
das
jne
mov
mov
shl
jne
nop
bound
in
mov
lock
das
leave
xchg
or
mov
dec
push
in
movs
mov
movs
jo
rcl
rol
dec
int3
xchg
xchg
cli
add
sar
ins
cmps
loop
ds
aaa
pop
fisttp
xchg
cmp
enter
mov
das
pop
pop
adc
push
loop
fld
jmp
outs
lock
sbb
test
xchg
mov
imul
out
xchg
ficom
fsubr
cmc
sahf
inc
inc
xor
rol
and
mov
arpl
push
adc
icebp
and
add
push
pop
imul
out
mov
test
mov
fild
test
daa
sub
pop
and
inc
or
fwait
(bad)
call
enter
jne
xor
jnp
sbb
ret
mov
imul
jae
and
hlt
mov
cmp
(bad)
mov
(bad)
shr
out
push
sub
xor
in
frstor
dec
cmp
dec
sub
mov
arpl
dec
loope
xchg
ret
jmp
sub
jl
icebp
popa
or
and
mov
cmp
icebp
fst
ins
jp
cmp
stc
lds
lahf
aad
sub
mov
inc
(bad)
sub
cli
xchg
mov
ss
cvtdq2ps
fld
inc
add
adc
adc
sbb
push
gs
mov
xchg
call
fldenv
ds
pop
inc
xchg
inc
aas
js
sar
fwait
(bad)
popa
sub
dec
out
shl
adc
pop
cmp
inc
mov
cmp
scas
add
cmc
mov
pusha
xor
bound
js
jl
push
aaa
jbe
enter
lods
xor
mov
fnsave
fs
retf
pusha
std
je
or
ret
cmps
xchg
aam
test
lock
sbb
loope
test
mov
(bad)
popa
or
cmp
rcr
jp
pop
shl
sub
and
cmp
or
sub
sub
dec
or
les
inc
or
jp
inc
fld
sbb
pop
not
mov
mov
jg
dec
ret
inc
stc
push
out
aam
rcl
jne
and
and
movs
aam
out
xchg
jl
push
sub
sbb
sti
movs
sti
arpl
dec
daa
jb
and
push
daa
push
push
sbb
adc
push
sub
push
adc
sub
or
and
pop
sub
push
into
jnp
mov
and
retf
fwait
mov
pusha
jmp
cmp
clc
sbb
inc
ss
rsqrtps
jmp
cwde
mov
loopne
pop
cmp
jmp
mov
mov
jb
sub
call
xor
shr
mov
ds
add
in
gs
xchg
stos
les
lds
call
test
add
mov
sbb
xchg
iret
xchg
retf
ins
fwait
jnp
and
jns
iret
cmps
fistp
push
xor
cmps
jmp
pop
mov
in
dec
out
sub
push
sbb
out
mov
addr16
dec
sbb
and
push
push
inc
sbb
and
or
inc
cmp
fwait
cli
cmp
dec
or
sub
or
jg
pop
in
mov
mov
mov
sub
fsub
jne
sbb
dec
sbb
jo
std
neg
mov
xchg
rol
push
sub
outs
aas
dec
pusha
sub
cmp
(bad)
pop
sub
xchg
inc
add
pop
xor
mov
std
mov
mul
mov
dec
out
scas
stos
clc
or
mov
lds
les
sbb
jge
jne
sub
shr
repz
push
sub
jmp
sub
push
sbb
inc
in
and
dec
sbb
jle
int3
(bad)
div
pop
sbb
adc
(bad)
call
out
mov
mov
adc
dec
adc
movs
retf
retf
mov
popf
and
pop
pop
je
inc
adc
sub
cmp
mov
xchg
cmps
stos
sti
mov
add
mov
dec
call
mov
xchg
outs
lods
retf
mov
call
push
add
test
aam
dec
and
lahf
xchg
(bad)
daa
arpl
dec
out
mov
and
cmc
mov
sub
pusha
sbb
fsub
and
or
add
int3
(bad)
ret
mov
stos
fsub
pop
adc
pop
fisubr
xor
jmp
fcomp
jmp
pop
stos
aad
clc
sbb
icebp
and
mov
nop
leave
jge
jno
mov
jno
mov
jb
js
dec
or
mov
mul
cmc
xchg
rcl
mov
rcr
mov
xor
dec
add
lds
mov
retf
jmp
jl
pop
sub
jp
push
add
sbb
pop
sbb
sbb
call
jnp
push
add
outs
cmp
fwait
test
push
push
pop
or
shl
out
popw
inc
in
fwait
in
push
das
icebp
mov
xchg
inc
add
fistp
sar
push
cld
xchg
jmp
lods
rcl
sub
mov
jns
sub
sbb
mov
add
ins
pusha
cmp
jmp
pop
cmp
fwait
test
scas
push
adc
jmp
xlat
mov
popa
and
adc
jbe
pop
(bad)
sub
sub
pop
ins
add
push
or
jbe
lahf
cmps
into
mov
inc
add
cli
dec
xor
in
mov
pushf
(bad)
into
js
sub
inc
push
aaa
and
sub
jp
xlat
cli
cwde
std
sub
test
aad
(bad)
pop
sub
xchg
clc
xor
outs
sti
outs
or
and
pop
xchg
xor
into
pop
out
adc
jl
dec
cmps
adc
dec
or
and
sub
xchg
mov
mov
jb
inc
xor
jnp
mov
data16
retf
mov
fidivr
ss
out
fist
nop
pop
pop
inc
adc
xor
pop
jae
jns
test
ins
lods
neg
jo
not
andnps
jb
je
inc
adc
test
mov
mov
xor
or
dec
std
or
fsubr
pop
ret
mov
lea
popf
scas
out
mov
xchg
cmps
(bad)
imul
dec
or
je
jb
mov
call
inc
or
outs
in
rcl
fcom
mov
lods
les
loop
xor
les
jl
mov
cmps
outs
test
mov
mov
sbb
aaa
add
mov
icebp
adc
clc
test
dec
lahf
mov
xchg
mov
scas
lods
mov
fs
dec
pop
sub
push
loopne
fbstp
pop
dec
mov
pop
addr16
and
push
sbb
mov
leave
or
adc
jb
mov
mov
push
adc
outs
sbb
sub
xchg
dec
pop
and
cld
cmp
fwait
sbb
inc
lea
pop
je
dec
mov
pop
mov
cmovle
cs
fldcw
fnstcw
mov
xchg
scas
(bad)
pop
clc
bound
cld
lock
or
repz
sbb
icebp
jl
into
sbb
loope
cld
pushf
pop
xchg
int3
ins
das
dec
sbb
inc
aaa
outs
xor
dec
jmp
push
loopne
test
fldenv
cmp
inc
fwait
pop
fsub
mov
popa
sbb
adc
sti
enter
mov
(bad)
(bad)
les
sub
das
shl
and
movs
jecxz
mov
jo
out
add
xchg
shr
push
cmp
and
mov
pusha
xchg
scas
test
(bad)
out
cmp
inc
xor
jmp
jmp
mul
or
jle
fiadd
sbb
or
aas
shl
pop
loope
jl
dec
push
inc
mov
cmp
dec
sbb
inc
(bad)
ins
add
(bad)
push
sub
dec
call
mov
clc
ss
pop
sub
fst
fidiv
add
mov
add
xchg
aam
fcomp
push
or
xchg
data16
sbb
push
shl
pop
push
sbb
fistp
pop
or
push
push
dec
(bad)
mov
add
xchg
(bad)
outs
out
stos
add
frstor
aaa
pop
sbb
loopne
adc
std
jl
or
mov
mov
mov
pop
cmp
clc
ror
push
cmp
jne
adc
ja
xlat
retf
xchg
aam
mov
cmp
push
loopne
out
popf
iret
addr16
sti
shl
sbb
inc
or
adc
pop
mov
push
sub
sub
cmp
inc
pop
rcr
call
sub
ss
xor
sbb
push
cmp
jge
lods
test
push
inc
xchg
mov
cs
mov
scas
into
mov
aaa
enter
int
scas
test
pop
(bad)
out
mov
lahf
mov
in
cwde
aam
(bad)
xchg
pusha
push
int3
jmp
ss
mov
sub
fcomp
push
jae
jnp
aam
sti
in
scas
lock
lahf
stos
sti
xchg
xlat
pop
push
push
inc
sahf
cmp
mov
ds
mov
enter
jmp
ret
xchg
fldcw
xor
aad
sbb
and
add
push
sbb
dec
addr16
pusha
or
es
clc
mov
enter
inc
test
outs
xor
xor
push
xor
stos
inc
mov
imul
sbb
arpl
mov
dec
scas
cmp
sub
adc
stos
cmc
test
or
inc
sbb
inc
pop
sub
adc
cmp
or
test
pusha
sbb
push
jmp
and
push
and
dec
fwait
or
call
mov
fcomp
xchg
retf
bound
retf
adc
out
leave
push
lods
into
cmps
mov
sub
push
push
jne
pop
ss
(bad)
jl
pop
mov
dec
cmp
retf
push
mov
int3
mov
ror
mov
dec
cmp
dec
push
sub
lods
fst
adc
cmc
xchg
dec
ins
das
jle
sar
lds
jae
sub
outs
or
mov
in
addr16
stos
not
push
pop
adc
popa
or
adc
shr
outs
out
(bad)
nop
retf
int3
pushf
and
xlat
mov
pop
xchg
shl
shl
adc
fsub
int
je
in
add
adc
test
sbb
out
idiv
daa
xchg
shr
test
fs
mov
movs
sti
popa
xor
iret
mov
sbb
(bad)
out
pushf
fild
adc
cmp
sbb
repnz
mov
(bad)
mov
ss
cmc
data16
pop
sbb
push
and
inc
and
push
pop
dec
or
in
fnstenv
add
push
into
mov
jbe
sahf
mov
jle
aas
shr
in
add
ror
fmul
adc
xor
pop
jmp
mov
pop
into
mov
loope
mov
inc
cs
sahf
xchg
(bad)
or
loop
push
fmul
adc
sahf
xchg
shr
or
(bad)
out
pop
aad
xchg
fisttp
call
aam
xor
push
cli
mov
sub
scas
jae
int
mov
aaa
ins
out
test
dec
jmp
nop
enter
idiv
imul
popf
fdivr
pop
out
popf
leave
inc
add
fstp
rol
inc
pop
push
pop
adc
(bad)
jno
or
mov
scas
mov
dec
sbb
sti
xchg
fisttp
add
push
and
or
push
in
xchg
sahf
iret
inc
adc
xchg
xchg
lds
call
and
xchg
fwait
iret
add
xchg
fwait
ret
cmp
ret
fstp
shr
fdiv
or
mov
out
es
(bad)
and
test
leave
js
xor
adc
popa
add
mov
rcr
lea
popf
mov
push
loope
(bad)
in
aaa
icebp
movs
mov
pop
pop
xor
mov
dec
or
adc
mov
mov
add
mul
sbb
mov
clc
fs
mov
adc
icebp
pop
adc
arpl
mov
lock
mov
fldcw
push
push
div
les
in
xchg
into
add
xchg
(bad)
fistp
add
xchg
lods
jmp
into
cdq
mov
and
ficomp
sub
rol
test
xchg
outs
sub
push
sti
lods
addr16
jmp
xchg
aam
jns
in
jae
cmp
repz
mov
inc
fcomp
fadd
cld
mov
push
sti
nop
push
repz
xchg
(bad)
cwde
rcl
out
mov
jno
ret
or
mov
(bad)
pushf
jp
push
gs
cmp
push
or
mov
inc
adc
cmp
jg
test
jae
std
pop
add
mov
dec
sbb
lods
popa
ss
dec
mov
test
mov
dec
mov
lods
push
pop
pop
jle
lea
sbb
shl
add
jno
mov
aam
jo
popf
xchg
jge
pop
aaa
cmp
test
inc
and
inc
pmulhuw
test
and
clc
sub
ror
mov
pop
sbb
pop
sbb
sub
dec
stos
cld
jae
sbb
hlt
inc
or
in
adc
or
in
mov
xchg
imul
push
stc
scas
sub
inc
(bad)
xchg
mov
jb
push
gs
jno
sub
in
ins
retf
xor
mov
mov
mov
ret
pop
into
mov
out
mov
shl
enter
pop
xor
dec
les
(bad)
lods
call
aam
das
in
test
aam
add
ins
mov
movs
mov
jl
daa
dec
retf
and
rcr
push
inc
leave
cwde
lahf
enter
dec
enter
inc
sbb
inc
push
pop
pop
ret
xor
outs
lods
jmp
pop
xor
movs
jns
xor
mov
js
sbb
mov
mov
adc
scas
stc
dec
or
pop
ret
xlat
sub
fwait
imul
mov
jae
pcmpgtd
mov
xchg
test
dec
mov
icebp
push
cmp
mov
xor
imul
nop
sti
aas
pop
out
and
push
std
movs
cmps
jecxz
and
sbb
in
or
mov
xchg
jnp
sbb
ret
cmp
cmp
out
dec
or
jp
mov
pop
ds
xchg
jae
add
int3
xchg
imul
pop
or
rol
push
rol
test
js
imul
add
fbld
popa
xchg
retf
es
adc
mov
ins
sub
lods
addr16
add
clc
xor
je
cmps
mov
cmp
push
aas
loopne
mov
add
jmp
sub
movs
hlt
dec
sbb
ja
lea
sbb
xchg
push
cmc
mov
inc
sbb
imul
xchg
mov
gs
mov
aam
push
mov
js
cmovnp
cmps
dec
adc
mov
dec
push
lock
arpl
dec
ror
xchg
ret
xor
in
or
xchg
mov
jp
lock
sub
mov
jg
in
popa
add
jb
test
or
cld
dec
sbb
pop
sub
push
jmp
test
stc
call
in
mov
cld
push
adc
pop
(bad)
mov
nop
gs
cvtdq2ps
xchg
mov
lods
popf
fldcw
adc
movs
inc
adc
dec
mov
sub
jle
out
and
mov
dec
aad
imul
sub
les
out
cdq
repnz
ins
into
call
scas
jmp
pop
xor
dec
rcl
add
aad
or
mov
mov
jns
push
dec
cld
mov
sbb
nop
ins
push
repnz
test
inc
or
bound
sub
rcl
out
test
jg
fwait
xchg
retf
iret
mov
pop
push
mov
xor
jae
mov
iret
cs
in
fwait
iret
cmp
hlt
and
loope
cmp
pusha
or
pop
div
cld
xchg
mov
pop
or
cmps
dec
add
mov
enter
mov
mov
jne
out
cs
int3
scas
dec
push
retf
(bad)
mov
cdq
mov
call
sti
mov
ret
test
out
push
push
scas
jmp
push
pop
call
push
sti
lods
dec
or
je
add
out
pop
sbb
imul
stos
bound
icebp
cmps
lahf
div
lods
in
pushf
shl
pop
xor
and
fs
out
es
adc
js
enter
sub
popf
dec
or
mov
in
addr16
sar
ins
and
mov
rol
and
data16
mov
cwde
icebp
dec
push
push
pop
mov
inc
sbb
push
shl
mov
jecxz
and
test
mov
icebp
dec
adc
pop
xlat
mov
in
push
adc
add
in
mov
sub
xchg
mov
jns
add
jne
movs
dec
adc
mov
stos
jne
cmc
mov
clc
cs
mov
fwait
xchg
fisubr
and
leave
lea
gs
push
adc
ins
push
out
lahf
retf
aaa
jae
cdq
(bad)
aad
jnp
pop
rol
fisttp
sbb
xor
inc
into
mov
loop
outs
mov
jle
stos
inc
add
mov
ret
push
std
mov
sbb
xchg
adc
or
cmp
test
inc
sub
push
sbb
ss
jmp
add
loope
or
test
std
xor
sahf
imul
mov
jne
add
in
sub
mov
imul
and
test
icebp
movs
xchg
xlat
je
sbb
addr16
xor
call
add
js
xchg
out
test
push
pop
pop
adc
repnz
or
pop
xchg
clc
and
xchg
(bad)
pop
ins
aam
mov
xor
jmp
push
or
mov
aam
and
adc
sub
jg
mov
xor
push
mov
pop
or
jp
iret
mov
cwde
mov
pop
hlt
mov
rcl
cmp
mov
or
stos
shl
arpl
mov
movs
mov
cdq
enter
inc
sti
lods
data16
pop
push
pop
add
mov
mov
push
enter
add
mul
clc
mov
xchg
inc
(bad)
(bad)
cmp
pop
loop
stos
out
pop
sbb
movs
pushf
retf
push
ds
ins
sub
mov
and
mov
das
ja
pop
scas
jmp
xor
test
icebp
cdq
xchg
loope
or
mov
lock
xchg
in
add
push
dec
mov
es
mov
scas
mov
jno
and
ret
xor
add
xor
je
scas
cwde
loop
sbb
ins
mov
or
retf
aas
ins
clc
scas
mov
xchg
popa
adc
xchg
xchg
ret
jae
or
xchg
dec
ds
pop
lods
leave
or
test
xchg
out
push
les
stc
mov
push
mov
mov
div
sbb
mov
int3
mov
icebp
mov
adc
fld
popf
in
and
cwde
enter
push
cmp
ret
dec
sub
cwde
imul
cmp
push
add
into
and
mov
adc
pop
shl
mov
dec
push
or
hlt
movs
xchg
daa
push
mov
and
iret
pop
paddb
push
inc
movs
sar
adc
jmp
retf
mov
fisubr
add
aaa
jbe
movs
mov
pop
sbb
hlt
movs
call
xadd
shl
mov
das
imul
jg
pop
ja
call
repz
xchg
xchg
repz
xor
dec
sbb
mov
jmp
mov
pushf
ins
sbb
or
lahf
jmp
dec
or
dec
adc
sub
mov
int
cmp
sbb
ficomp
pop
push
cmp
es
xchg
scas
fdivr
jle
rcr
pop
inc
mov
fwait
(bad)
bound
in
jne
or
lea
cmc
movs
mov
jbe
or
and
pop
enter
sbb
inc
mov
jnp
push
jge
les
add
stos
jecxz
pop
mov
push
pop
aas
outs
mov
jp
pop
movups
hlt
daa
jge
scas
cdq
cli
and
mov
ds
dec
mov
dec
leave
sahf
dec
es
sbb
in
push
pop
shr
dec
into
xchg
xchg
ret
xor
jae
or
mov
mov
mov
jnp
loope
jno
add
(bad)
in
add
dec
cmps
jmp
xor
fisub
aas
jnp
out
push
cmp
xchg
xchg
les
in
cmp
inc
add
scas
fs
pop
mov
cmp
cmp
imul
sub
jge
and
sub
jne
lahf
mov
inc
adc
xchg
cdq
into
pop
pop
cmovae
stos
jno
add
shl
jb
out
push
out
stos
lods
jmp
dec
and
push
jecxz
pushf
ror
cwde
mov
test
(bad)
mov
stc
scas
mov
mov
in
pop
into
movs
fwait
clc
inc
push
cld
mov
mov
push
inc
leave
cwde
fimul
mov
jp
xchg
jecxz
inc
aam
jo
or
mov
lods
dec
or
push
sbb
mov
repnz
mov
jno
xlat
xchg
aad
jns
clc
pop
aaa
pop
adc
push
sbb
pop
mov
dec
psubsw
out
mov
out
mov
cli
cmp
pushf
push
adc
in
out
mov
mov
cdq
fcomp
lds
mov
mov
pop
dec
scas
clc
sub
sub
jmp
mov
dec
adc
jbe
fwait
(bad)
mov
mov
(bad)
je
std
xchg
(bad)
jb
mul
data16
daa
jg
in
sbb
inc
rol
popf
(bad)
pop
xor
cmp
enter
cmp
mov
sahf
xchg
xlat
ss
jecxz
mov
or
jp
lock
sub
mov
cmp
mov
sbb
retf
xchg
mov
fmul
inc
push
jecxz
cwde
fcomp
cmps
out
adc
push
les
lods
into
push
push
inc
rcr
pop
add
mov
push
sbb
xor
mov
(bad)
aad
mov
inc
adc
push
adc
cdq
ficomp
push
cmp
fcomp
inc
retf
pop
xchg
in
into
cmp
(bad)
nop
aam
in
pusha
cmp
jae
pop
or
(bad)
fisub
fcom
push
cmp
test
ficom
inc
push
pop
dec
mov
rep
retf
sub
pop
push
jmp
xchg
xchg
dec
pop
sbb
mov
adc
mov
sub
call
adc
pop
pop
mov
push
adc
and
mov
jg
popf
dec
add
mov
out
sub
fst
push
dec
std
mov
cmps
icebp
push
cmp
xchg
mov
add
nop
sti
cmp
sahf
inc
add
push
mov
push
adc
dec
fimul
imul
mov
pop
cmp
stos
popf
fstp
or
call
sub
aas
or
rol
in
jns
in
lods
into
xor
sub
call
cs
les
dec
loop
sbb
dec
(bad)
out
push
aad
data16
mov
loope
sbb
lods
lds
cli
lods
inc
push
idiv
movs
(bad)
jp
cmp
cmps
out
push
pmaxsw
jmp
dec
lods
in
push
sbb
push
(bad)
inc
sbb
mov
lock
fwait
repnz
mov
out
lahf
hlt
add
aad
inc
retf
sbb
push
add
mov
or
dec
mov
dec
push
sar
jl
imul
cmp
mov
stc
scas
xchg
(bad)
cmp
lds
jle
aaa
aaa
pop
cmps
lds
jae
jmp
xchg
aad
movs
hlt
sub
ins
lods
in
pop
pop
sbb
jecxz
popa
cmps
repz
sbb
push
movs
std
push
adc
mov
pcmpgtd
ret
repnz
push
std
sub
shl
push
push
jmp
jg
cmp
mov
sbb
(bad)
in
or
xchg
xlat
inc
or
xchg
pop
or
mov
mov
pop
adc
rol
xchg
ret
mov
(bad)
nop
mov
inc
sub
pop
dec
mov
mov
add
(bad)
push
adc
xor
jno
sub
mov
(bad)
movs
imul
ja
stc
mov
sub
dec
in
sub
ficomp
or
sti
and
movs
jp
jecxz
icebp
sbb
fld
sub
xchg
rcr
mov
fcomp
cmps
mov
das
data16
and
imul
push
loopne
(bad)
outs
shr
hlt
xor
mov
push
push
or
xchg
xchg
ret
rcl
jecxz
cmp
fstp
cmc
mov
retf
in
data16
pop
sbb
or
mov
scas
jmp
inc
jmp
xor
mov
push
add
pop
mov
leave
push
ss
test
(bad)
jle
adc
call
scas
clc
jl
cmp
push
loope
popf
test
nop
les
ja
out
or
fwait
bound
jmp
xlat
pop
push
iret
sbb
popa
or
push
ret
rcr
sbb
(bad)
aaa
jae
aad
add
jno
inc
inc
mov
sub
movs
jnp
imul
aas
cld
mov
sbb
mov
mov
pop
fstp
mov
repz
loopne
add
dec
stos
cld
pop
ss
sbb
jb
mov
into
mov
imul
and
in
and
xchg
cdq
fmul
inc
ret
cdq
jo
pop
jl
out
and
mov
and
mov
add
imul
mov
cdq
fwait
iret
ss
icebp
and
xchg
je
std
lods
gs
mov
in
lods
pop
pop
pop
in
xchg
neg
(bad)
mov
jae
popa
loop
sbb
lods
les
loopne
mov
inc
sbb
jne
mov
enter
or
push
out
mov
mov
cmp
cmp
movs
inc
adc
mov
mov
or
mov
test
test
rcr
jmp
scas
neg
xchg
sahf
scas
stc
es
fimul
aam
imul
push
adc
push
fadd
(bad)
xchg
xchg
lds
inc
movs
repz
sbb
test
loope
loop
cmps
repnz
les
ja
mov
iret
dec
sbb
push
add
cmovae
and
pop
mov
push
push
loopne
jbe
adc
or
ss
xchg
cwde
ret
retf
sbb
lea
into
xchg
xchg
shr
lods
std
cmp
mov
ret
xchg
lock
mov
add
xchg
mov
stos
jns
retf
pushf
inc
sub
pop
sbb
test
push
gs
dec
cmps
out
cmp
mov
retf
pop
or
mov
inc
stc
scas
dec
or
add
(bad)
pop
push
cli
mov
jns
push
dec
fisttp
in
add
scas
loop
pop
or
ret
sub
cwde
ror
mov
repz
idiv
movs
iret
dec
sub
mov
and
or
dec
and
rcr
stos
leave
das
jnp
in
pop
sbb
repnz
or
inc
mov
(bad)
dec
or
mov
(bad)
out
cmp
mov
xchg
js
sbb
div
fdiv
rol
cmps
jo
pop
push
xchg
sub
daa
cmp
cdq
lahf
into
sub
mov
pop
ficom
mov
js
cmovnp
test
cmp
xor
test
sar
mov
xor
out
and
out
mov
nop
(bad)
es
sbb
pop
or
mov
jl
jecxz
cwde
leave
and
das
js
icebp
and
fmul
mov
imul
inc
adc
dec
scas
(bad)
sub
xchg
inc
or
dec
mov
cmp
sub
mov
xor
call
push
add
pusha
iret
cmps
jge
mov
push
pop
jl
jmp
in
pusha
and
cmps
xchg
(bad)
pop
or
test
inc
ror
mov
or
out
jbe
xchg
pusha
and
mov
xchg
ret
es
cmp
js
(bad)
inc
adc
mov
rcr
std
xor
into
cmps
inc
pop
pop
push
or
jno
xor
xchg
es
fwait
je
clc
test
mov
push
adc
mov
call
lea
cwde
je
cmc
mov
mov
mov
clc
lods
fist
dec
xchg
xlat
xor
inc
pop
dec
std
stos
jle
in
mov
jae
adc
xchg
xchg
fmul
cld
mov
lock
out
sti
lods
push
adc
mov
sbb
out
add
(bad)
jb
jmp
js
xlat
fs
mov
in
xchg
pop
pop
cli
xchg
call
fisttp
inc
pop
or
int
push
stc
scas
inc
add
mov
test
xchg
aad
adc
icebp
mov
sub
xchg
inc
sub
xchg
out
mov
pop
pop
ret
test
paddsw
(bad)
aad
jae
popf
arpl
in
mov
imul
clc
xchg
imul
mov
test
jnp
or
sbb
push
mov
les
push
test
mov
inc
enter
(bad)
test
jb
pop
ins
scas
int3
aaa
arpl
mov
lock
mov
inc
sub
imul
inc
add
pop
out
xchg
xlat
xor
in
or
mov
push
push
and
sahf
xchg
xor
movs
(bad)
sub
mov
push
sub
or
fcomp
call
xor
inc
add
xchg
sti
sub
inc
or
dec
(bad)
in
pop
fimul
jp
or
ins
xchg
xor
(bad)
sub
cmp
iret
cs
jmp
icebp
mov
lds
xchg
(bad)
add
push
loopne
adc
js
pop
pop
ds
cmc
mov
mov
mov
mov
test
into
add
mov
pop
or
mov
sbb
push
sbb
xchg
in
inc
or
jmp
cwde
fsub
jbe
icebp
pop
xor
popa
sub
loopne
popa
xor
imul
data16
rep
call
ficom
(bad)
lods
imul
add
sub
(bad)
cmp
or
cwde
add
les
xchg
retf
lods
or
push
jg
daa
ja
jb
mov
xchg
adc
call
std
out
or
cmps
jecxz
mov
push
inc
push
add
pushf
test
push
lods
fisubr
mov
daa
fcmovbe
leave
lods
cmovns
call
fidiv
inc
sbb
sub
xor
sahf
gs
ds
stos
test
neg
loop
push
(bad)
push
(bad)
fadd
mov
ror
and
mov
xor
popa
mov
out
outs
retf
sub
cli
les
call
lds
(bad)
mov
hlt
mov
mov
ret
jbe
out
adc
mov
jo
push
fwait
pop
ins
xor
repz
or
imul
sahf
pop
sti
das
mov
arpl
loopne
call
push
pop
adc
icebp
clc
cmp
jae
pop
pop
cmps
jmp
inc
cdq
sub
dec
jnp
scas
loope
mov
daa
lods
dec
mov
push
inc
push
mov
inc
jb
scas
pop
scas
in
xor
jmp
dec
inc
cmp
xor
xchg
pop
cmp
fistp
xchg
pop
fs
dec
mov
cdq
ret
lods
cdq
xchg
cmps
xor
cmc
push
adc
xor
movs
adc
cli
nop
lahf
int
aaa
sbb
push
add
and
and
or
arpl
mov
add
popf
push
les
inc
pop
loope
pop
xor
push
push
pop
mov
mov
cld
push
jecxz
ss
push
(bad)
mov
fs
xor
enter
mov
xchg
(bad)
push
fucomi
test
dec
pop
pop
nop
pop
and
ins
jmp
pushf
mov
mov
popa
dec
pop
push
popa
sbb
test
xor
xchg
scas
shr
repnz
inc
add
je
xor
(bad)
cmps
push
movs
retf
mov
or
inc
mov
out
idiv
popf
add
sub
dec
sub
loop
sbb
icebp
mov
sti
test
mov
loope
dec
push
add
int3
lods
xchg
inc
adc
add
pushf
or
pusha
push
push
pop
movntq
jge
pop
sub
enter
xor
xchg
cmps
mov
adc
test
scas
test
imul
mov
mov
mov
rol
aas
mov
out
xor
cmp
inc
retf
inc
jae
movs
fcomp
mov
mov
test
jp
ins
es
jecxz
pop
popf
mov
push
or
pusha
mov
push
mov
xchg
jae
mov
push
idiv
add
mov
mov
xchg
inc
jns
das
(bad)
adc
shr
cli
add
pop
shr
lea
adc
xor
int3
bound
jno
jmp
retf
test
jle
clc
pop
or
inc
jb
xor
out
jl
dec
push
retf
dec
jle
pop
imul
bound
add
mov
dec
lds
jp
cmc
sub
mov
je
scas
xor
mov
pusha
and
mov
cmp
pop
mov
ins
stc
loopne
jge
dec
cmp
jno
sbb
dec
movs
fs
sbb
and
xchg
movs
fdivr
clc
test
or
daa
out
daa
shl
pop
jmp
es
cmp
stc
ja
jmp
jne
and
ror
out
jae
jns
fs
aam
jmp
mov
mov
cmps
adc
rcl
cmp
lds
mov
jge
jb
jbe
add
xchg
push
out
inc
shl
aad
icebp
fisubr
imul
sti
add
rol
and
out
scas
pop
adc
xchg
popa
js
mov
sub
mov
dec
dec
adc
iret
ficomp
jnp
mov
mov
retf
popa
xor
adc
sub
xchg
cmps
jle
outs
add
or
sbb
jns
xchg
and
inc
mul
fs
int3
sub
ins
stos
push
sar
xchg
add
imul
dec
arpl
es
fbld
mov
mov
aas
pushf
push
or
pop
stc
fadd
or
aam
mov
ror
jns
ret
cmp
loopne
loop
(bad)
test
or
out
int3
fwait
stc
(bad)
sbb
and
mov
out
(bad)
je
push
sbb
add
mov
inc
nop
add
loopne
les
pop
jo
add
jmp
cmp
movs
mov
push
movs
aas
arpl
xor
add
sub
pusha
sbb
in
xor
jmp
fist
mov
or
add
sbb
outs
loop
scas
ja
lods
bound
pop
loopne
mov
(bad)
xor
inc
in
es
jge
scas
std
jbe
test
sub
imul
mov
(bad)
and
(bad)
idiv
loop
out
xor
jg
mov
bound
(bad)
loop
xlat
sti
cld
fsubr
pop
fisub
rol
cmp
pcmpeqw
mov
inc
add
pop
js
jb
jno
jmp
jmp
jmp
aas
adc
stc
hlt
mov
push
in
dec
jl
movs
loop
fistp
(bad)
adc
or
jae
(bad)
inc
xor
push
push
jp
lahf
mov
cli
cld
repz
mov
sahf
sub
fnsave
int3
add
je
aam
hlt
jg
sub
(bad)
repnz
jne
outs
add
sbb
or
pop
and
rcl
mov
ror
xor
xchg
inc
push
xchg
cmp
cmp
stc
cmp
into
mov
add
jmp
adc
mov
jle
leave
mov
pop
cs
bound
and
leave
fstp
jbe
fwait
ins
xchg
sti
lds
cmps
jmp
jmp
ja
inc
dec
xchg
data16
repnz
mov
mov
icebp
mov
sti
and
mov
cmc
iret
cmp
mov
cmp
mov
cld
jnp
cmp
fadd
popf
mov
popf
mov
mov
pop
push
aas
leave
push
lds
fmul
mov
popf
les
fsubp
test
cdq
or
fisubr
mov
fisub
dec
mov
loop
inc
jno
shr
push
cmp
fmul
xor
gs
shl
inc
sahf
fisubr
inc
es
mov
fimul
rcr
retf
lock
add
mov
fisub
inc
fsubr
pop
cli
inc
xchg
mov
pop
fdivr
scas
mov
sbb
xor
add
pop
sahf
pop
push
pop
push
add
mov
ret
fcom
dec
div
or
dec
mov
cmp
cmp
jge
xchg
mov
mov
pop
ss
and
mov
jle
or
add
pop
and
cmp
idiv
loope
jge
xor
mov
add
ss
pop
mov
add
cmp
pop
nop
repnz
ret
mov
push
jns
cdq
fdivr
adc
aam
movs
stc
or
jle
sar
xor
sbb
xchg
ficomp
lahf
lahf
in
jb
jge
sbb
mov
adc
sub
lea
popa
notrack
dec
aad
enter
push
bound
inc
addr16
mov
dec
and
bound
or
clc
inc
cmps
adc
mov
and
xchg
in
div
pop
ret
int3
pushf
aam
mov
dec
push
inc
jge
pop
fistp
or
and
call
retf
ficom
jne
call
repnz
retf
xlat
fadd
jge
xor
sbb
icebp
mov
and
movs
jo
fwait
push
mov
ss
cmp
imul
out
imul
leave
fidivr
or
adc
mov
(bad)
pop
dec
les
enter
scas
in
fisub
push
and
in
imul
inc
cmp
jmp
aas
das
or
cmps
jne
pop
js
aam
pop
push
dec
or
lds
fist
js
mov
ss
popf
add
xor
xchg
out
jmp
xchg
mov
jl
pop
retf
or
mov
mov
mov
cs
pop
(bad)
jl
enter
cmc
std
inc
mov
into
xor
dec
xchg
pop
mov
mov
or
or
mov
jl
dec
icebp
sbb
les
sti
and
out
sub
fisttp
shl
xor
xchg
jb
xchg
daa
cmp
scas
rcr
cdq
dec
xor
jae
add
jmp
ja
xchg
stos
imul
out
sub
outs
cmp
mov
xor
cmp
push
and
fxch
mov
xchg
xor
rol
cdq
xor
xor
jo
dec
mov
mov
stc
ins
mov
loopne
pop
mov
bound
frstor
jecxz
or
ret
outs
mov
mov
adc
or
(bad)
in
cmp
lods
es
jmp
push
les
lods
iret
mov
call
xchg
fistp
loopne
inc
mov
dec
not
enter
and
test
and
scas
and
test
fistp
not
push
je
pushf
das
adc
jmp
(bad)
sub
add
gs
cld
xchg
pop
and
test
lds
(bad)
mov
pop
jmp
push
add
aam
and
lods
out
cmp
push
dec
clc
inc
pusha
pop
push
lea
dec
lds
test
and
mov
xchg
cmps
mov
mov
inc
mov
jp
push
mov
push
mov
imul
gs
cli
sbb
xchg
pop
call
cld
mov
adc
cwde
ins
gs
xchg
retf
jnp
lea
popa
xchg
fisttp
call
jae
xor
pop
pop
sti
lods
pop
scas
es
and
xor
push
imul
in
xor
jmp
cli
cld
cmc
cmp
jb
or
xor
mov
ror
jne
ret
and
fcom
add
jb
stos
cmps
push
ss
mov
mov
sbb
xchg
imul
mov
and
loope
xchg
imul
(bad)
and
and
mov
xor
out
pop
or
xlat
add
adc
mov
pop
ss
pop
movlps
loope
sbb
iret
push
sbb
pop
xor
sahf
dec
(bad)
loop
jmp
jge
dec
popf
push
jne
jge
cld
dec
add
cmp
sbb
sbb
aad
sbb
in
sub
retf
retf
add
data16
es
pop
aam
xor
pop
fsubr
ror
inc
int
mov
jg
inc
push
imul
xchg
add
fnsave
mov
test
int3
pushf
cmp
repz
pushf
(bad)
adc
cmp
jb
addr16
sub
xlat
fldenv
aam
xchg
(bad)
jnp
push
(bad)
loope
adc
sbb
pop
bound
push
jb
cmp
mov
push
mov
mov
and
pop
and
and
imul
je
fsub
mov
cmp
in
adc
add
sub
adc
mov
mov
out
sbb
lahf
fcomp
fs
and
or
(bad)
imul
jmp
ss
aas
sub
les
loope
sbb
rcr
sar
jecxz
cmp
xor
push
jbe
js
out
retf
xchg
mov
mov
jl
in
pusha
inc
fisttp
mov
div
fwait
mov
dec
jp
daa
js
fbstp
add
jecxz
and
les
dec
pop
sti
bsf
cli
jmp
inc
sbb
and
add
push
std
inc
loopne
jmp
push
jmp
xchg
cmp
add
cmp
lock
dec
cmp
and
repnz
stc
mov
xor
aaa
mov
loopne
lea
push
std
push
and
jnp
call
ss
fisttp
dec
lock
xor
arpl
dec
movs
outs
imul
lods
sti
and
add
in
ins
jl
xor
loope
hlt
push
xchg
jecxz
ss
cmc
mov
inc
cmp
dec
fstp
popa
inc
fdiv
mov
sub
fnstenv
sbb
loop
out
les
or
daa
dec
mov
xchg
and
les
pop
neg
fs
xlat
mov
jmp
sbb
xor
sti
mov
shl
jp
loop
addr16
pop
arpl
adc
cld
icebp
pushf
neg
dec
sbb
cmp
mov
xchg
in
(bad)
(bad)
in
or
sub
pop
ins
add
je
push
pusha
sbb
mov
fsubr
sub
adc
mov
or
sub
cmps
or
retf
scas
adc
jg
mov
lds
and
add
pop
shl
jg
pop
mov
mov
sub
leave
inc
dec
jns
push
sbb
mov
ds
add
ret
je
jbe
mov
xchg
outs
test
jge
pusha
push
ret
fimul
dec
dec
adc
and
add
xchg
les
fist
or
cmp
(bad)
cmc
jmp
popf
in
cs
fstp
sub
cmp
mov
repnz
test
lds
sub
and
mov
adc
dec
popf
sub
in
call
mov
or
or
pop
inc
inc
enter
fmul
scas
fwait
xor
mov
xchg
jb
or
dec
lea
push
lods
push
test
dec
or
pop
jb
push
or
sub
les
push
mov
pop
inc
inc
mov
shr
push
mov
or
xchg
cmps
inc
push
in
sahf
imul
mov
push
or
in
je
and
dec
xchg
fld
and
jbe
iret
xchg
jmp
into
push
add
dec
jno
int3
repnz
mov
mov
in
cmp
into
fldenv
sub
add
mov
rcl
add
fs
mov
shr
pop
rcr
cmp
add
mov
fadd
mov
std
cmp
movs
lahf
push
shl
sar
call
xor
jge
jmp
scas
in
imul
cmc
fidiv
dec
jl
addr16
scas
or
in
mov
loopne
(bad)
xlat
push
mov
xchg
(bad)
and
aam
aad
hlt
(bad)
cli
or
mov
mov
es
test
test
adc
(bad)
jl
cli
jecxz
je
jmp
adc
loopne
iret
loopne
retf
mov
fstp
fcomip
ins
cwde
aas
adc
jmp
aas
aad
nop
(bad)
out
pop
adc
mov
shl
push
ds
dec
fldl2e
je
sbb
loope
cmp
and
or
sbb
push
shr
sbb
xor
fldcw
imul
or
and
int
jns
retf
mov
nop
out
leave
mov
rcr
inc
dec
lock
ss
add
and
inc
lea
and
jge
jno
mov
xchg
shr
inc
pop
(bad)
jnp
push
(bad)
xchg
lea
cmp
mov
pop
jae
pop
and
call
es
test
popa
scas
xchg
aas
ret
add
out
inc
mov
pushf
bound
cmp
jnp
inc
or
jp
or
popf
nop
mov
mov
pop
stos
xchg
pop
inc
add
add
mov
xlat
mov
test
jmp
(bad)
mov
arpl
push
xchg
lods
call
sub
jae
clc
dec
fstp
ins
lea
push
xchg
mov
pop
xor
out
outs
cmps
mov
jge
and
les
stc
leave
mov
lahf
nop
out
nop
jne
inc
sbb
ror
retf
cmp
bound
sbb
mov
or
not
mov
mov
pusha
inc
dec
dec
add
push
outs
test
(bad)
repnz
adc
cmp
jo
dec
jge
pop
xchg
lods
into
fidiv
mov
in
jmp
dec
mov
xlat
mov
popa
dec
std
dec
cmp
enter
mov
mov
imul
cmp
loop
cwde
add
sub
je
sahf
cli
inc
lahf
pop
shl
xchg
sar
cli
or
fstp
dec
retf
fs
xor
xchg
shl
outs
lock
mov
ins
fild
jecxz
xor
daa
add
dec
inc
mov
bnd
ja
pop
int3
(bad)
jecxz
dec
loop
mov
xchg
cmp
adc
int3
scas
push
mov
ror
jo
pop
(bad)
mov
addr16
cmps
pop
mov
mov
leave
in
xor
mov
out
mov
iret
push
add
mov
test
loopne
enter
sbb
mov
cmp
add
shr
in
add
fwait
and
cmp
xchg
xchg
mov
stc
lods
mov
adc
shr
jne
xchg
or
rol
or
jmp
mov
pop
sbb
cmps
jmp
and
cmp
cmps
cs
popf
inc
dec
jno
stos
mov
xchg
cwde
mov
add
jge
in
push
cs
jge
pop
push
or
inc
mov
jno
scas
movs
jae
sbb
cli
add
fdiv
repnz
jg
xor
into
mov
sub
loop
ret
mov
lea
jno
lods
adc
fnstsw
adc
cmp
stos
je
rcl
push
push
mov
jae
pop
cmp
lods
test
or
(bad)
imul
bound
mov
inc
cmp
in
pshufw
ds
add
dec
lds
adc
adc
fucomp
test
aad
adc
in
sbb
mov
or
push
test
and
sub
gs
psrlq
fistp
dec
fdivr
outs
ds
mov
xchg
inc
add
pop
adc
rcl
lock
outs
stos
out
inc
fisttp
mov
les
adc
sub
dec
fild
ja
dec
mov
xchg
div
cmp
dec
fimul
xchg
or
cmp
shl
xchg
fmul
xchg
and
xchg
xchg
ret
adc
adc
xchg
and
sbb
jbe
ja
sbb
daa
jo
sub
out
(bad)
fsubrp
inc
call
in
sub
je
push
add
mov
cmp
xor
mov
mul
call
inc
je
adc
lds
cli
cwde
mov
cmc
sbb
jno
mov
add
or
xlat
xchg
mov
in
jne
sbb
or
lods
(bad)
mov
adc
jg
out
push
ins
iret
leave
sub
(bad)
and
jle
fdivr
push
mov
das
enter
push
xchg
dec
gs
hlt
push
mov
mov
mov
mov
adc
ror
sub
imul
loope
sbb
retf
sbb
xlat
cmp
adc
add
xchg
push
add
add
in
fisttp
or
les
ja
jne
shr
jmp
imul
scas
cwde
in
cmp
aaa
push
and
js
cmp
mov
mov
or
inc
cmp
sbb
imul
mov
jae
inc
sbb
rcl
or
sub
adc
adc
popf
or
dec
pop
loope
test
sub
jb
xor
push
stc
fwait
pushf
sbb
jns
test
sub
lea
inc
ds
cdq
(bad)
xchg
shl
into
cmps
inc
test
outs
sub
mov
sti
cwde
cmc
pop
xor
jbe
cmp
aaa
push
sbb
inc
and
push
cmp
aam
mov
or
retf
mov
sbb
or
rcl
mov
add
outs
shl
add
in
imul
and
ror
sbb
mov
mov
xchg
jmp
mov
cmp
xor
pop
mov
pop
retf
stos
ror
adc
xor
cmps
xor
push
mov
mov
or
retf
cmp
inc
xor
mov
lahf
mov
add
(bad)
mov
enter
mov
mov
mov
inc
or
xor
push
xchg
cmps
xrelease
jne
dec
paddb
push
jl
js
push
sbb
ins
adc
xchg
stos
ror
cmp
fnsave
push
inc
std
ins
or
mov
loop
lock
les
add
push
adc
jbe
dec
and
xchg
clc
sub
aas
ins
sub
mov
xor
rol
jbe
cmc
mov
mov
jae
dec
xchg
jne
dec
cld
mov
retf
aaa
pusha
aas
pop
test
push
jns
inc
cs
es
in
fwait
movs
mov
adc
sbb
and
dec
repnz
xor
jnp
es
sbb
ret
mov
frstor
mov
xchg
jmp
mul
mov
dec
lock
loope
push
daa
je
dec
push
imul
daa
ins
add
shl
push
sbb
push
and
hlt
call
cmps
fcomp
fsub
push
loopne
mov
pop
sbb
push
je
push
sahf
ins
cmp
out
out
mov
pop
sbb
sbb
inc
cmp
and
push
lock
lahf
jmp
xchg
mov
call
sbb
(bad)
jbe
pusha
adc
test
adc
push
add
xor
push
push
add
inc
or
mov
mov
aas
jbe
inc
test
xor
ret
inc
adc
cwde
cli
xchg
sti
outs
jecxz
imul
mov
addr16
xchg
lods
cmps
retf
call
loop
imul
outs
sbb
loope
out
add
inc
mov
fisttp
cs
inc
sub
dec
adc
lock
cmp
out
scas
(bad)
nop
leave
pusha
mov
mov
mov
and
add
sti
fisttp
repnz
or
push
add
and
jb
ins
push
dec
jmp
cwde
retf
(bad)
push
adc
inc
mov
mov
lods
cmps
in
xchg
mov
inc
and
push
inc
or
mov
or
(bad)
or
cs
mov
push
outs
sbb
das
push
pop
push
ror
and
mov
or
jbe
inc
cld
sbb
loope
cmp
dec
in
sti
(bad)
mov
(bad)
aas
outs
in
leave
nop
add
pop
fist
dec
movs
adc
xor
mov
inc
sbb
into
popf
int
loopne
leave
dec
adc
mov
push
dec
jecxz
(bad)
push
dec
mov
icebp
lahf
fstp
out
not
(bad)
aam
call
xor
push
jb
jbe
or
outs
int3
data16
es
xor
iret
xchg
xchg
ins
scas
mov
push
stc
push
sbb
rcl
repnz
in
fs
bound
dec
xor
hlt
mov
lea
jg
adc
gs
mov
mov
push
jge
and
cmp
inc
push
or
lahf
int3
jo
mov
mov
inc
dec
sbb
retf
(bad)
cmp
repnz
jg
pop
sbb
sub
pop
sbb
mov
xchg
xchg
cld
mov
or
jnp
inc
add
inc
push
dec
adc
push
push
inc
cmp
push
out
scas
rol
retf
sti
xchg
movs
xor
inc
xor
dec
push
and
xchg
les
scas
repnz
nop
jp
inc
adc
pop
out
adc
pop
loope
mov
(bad)
leave
popf
movs
les
add
mov
xchg
mov
lods
icebp
mov
sahf
std
xchg
enter
push
jl
push
lods
jns
add
inc
mov
sti
cmp
leave
imul
ja
or
das
xor
adc
jl
pop
outs
in
add
adc
pop
loope
mov
dec
call
mov
inc
and
cmp
daa
leave
stos
mov
pop
cmp
sbb
adc
popa
fistp
mov
mov
pop
in
fimul
sbb
jbe
mov
ins
fwait
clc
test
mov
mov
lods
movs
dec
inc
mov
cmc
xchg
in
loopne
jnp
jo
arpl
ficomp
mov
or
in
shr
and
jecxz
loope
add
push
or
ins
inc
cmp
pop
or
sub
cmp
inc
xor
aam
ret
mov
add
stc
daa
jle
js
daa
sub
arpl
mov
pop
es
iret
mov
je
jle
fcom
in
pop
popa
cmp
scas
in
int
daa
arpl
push
push
dec
and
sub
mov
mov
and
inc
inc
or
adc
rcr
add
imul
jbe
pop
pop
pop
(bad)
sbb
inc
adc
push
loop
out
mov
imul
pusha
ss
or
dec
cs
aad
daa
jae
in
pop
sbb
das
jo
xchg
jmp
ret
sub
xchg
fild
pushf
lods
jp
pop
cmp
enter
xchg
mov
jbe
inc
add
rcl
cs
add
ss
mov
(bad)
les
loope
dec
out
add
lods
jp
jg
jnp
rcl
(bad)
jg
add
hlt
and
and
ret
and
dec
xchg
xchg
mov
das
pushf
aad
fidivr
xchg
pop
dec
sbb
(bad)
daa
pop
lock
ins
sbb
aaa
push
mov
mov
push
sbb
cmp
mov
push
jnp
loope
xchg
(bad)
mov
sbb
mov
scas
out
jb
add
(bad)
jle
or
jmp
(bad)
das
ret
cmp
jne
dec
add
pop
or
cmp
cmp
(bad)
ins
xchg
lock
rol
pop
call
or
fidiv
cmps
mul
daa
sub
and
and
icebp
mov
jno
cwde
ror
mov
mov
fs
mov
call
mov
mov
mov
popa
sbb
je
xor
and
and
cli
xchg
int3
ja
pop
sbb
mov
jns
pop
lock
pop
dec
mov
push
adc
sub
lods
call
adc
inc
out
out
xchg
into
dec
fisub
(bad)
sar
lds
cmps
fmul
ds
lock
xor
cld
test
inc
jle
dec
(bad)
pop
sub
loope
rcl
pop
sbb
push
pop
add
or
mov
sahf
scas
fstp
jg
int
stc
sbb
(bad)
pop
fcom
inc
cli
test
fwait
out
xor
test
rcr
mov
push
xor
dec
adc
dec
mov
fs
cs
add
popf
xlat
xchg
retf
sahf
call
mov
lahf
rol
jbe
dec
mov
ficom
xchg
mov
in
(bad)
enter
mov
fsubr
push
jp
pop
xor
inc
add
pop
loop
mov
xchg
fsub
or
sbb
ja
dec
sbb
cmps
sahf
call
cmps
cmps
outs
rcr
sub
mov
push
cmp
sbb
retf
mov
outs
cmp
imul
scas
cmps
in
mov
jmp
aam
das
jb
push
ficomp
push
pop
push
cmp
and
in
push
sbb
push
adc
cli
ss
out
fild
adc
dec
push
adc
int
jmp
repnz
in
(bad)
(bad)
dec
cmp
dec
mov
add
push
push
add
ins
sub
repz
dec
das
and
(bad)
fwait
in
test
fld
lds
xchg
in
mov
sbb
fs
imul
ret
sub
imul
mov
jecxz
pop
pop
adc
add
sbb
hlt
inc
or
pop
mov
xor
pop
xor
inc
aas
jle
stc
push
adc
cs
add
sub
add
daa
dec
mov
jmp
push
ds
gs
jnp
dec
and
lods
retf
(bad)
dec
call
cmps
int3
and
xor
(bad)
mov
mov
nop
xchg
mov
mov
push
pop
and
jnp
jno
jne
push
jmp
adc
ins
mov
in
inc
sub
mov
and
pop
sbb
cmp
arpl
jp
cmps
sbb
xor
or
imul
adc
xor
call
je
arpl
and
ins
(bad)
ss
(bad)
lahf
jb
jle
jg
mov
test
test
mov
stos
cli
pop
pop
and
aas
jae
dec
mov
cli
dec
ss
sbb
inc
pop
das
push
hlt
pusha
das
jns
dec
sbb
popa
push
outs
sub
adc
adc
cli
xchg
enter
neg
dec
shr
clc
stos
test
mov
push
sbb
jmp
jnp
inc
adc
xor
jbe
xor
xor
and
je
xor
mov
adc
pop
(bad)
enter
fsub
inc
sbb
mov
inc
sbb
mov
xor
mov
xchg
gs
add
je
sub
xchg
into
movs
xlat
or
out
sbb
retf
(bad)
fdiv
mov
pop
test
in
cli
cmp
loop
shl
and
jnp
jno
jns
dec
and
add
dec
bound
inc
push
bound
inc
loopne
jp
aam
jmp
cmp
jle
dec
cmp
pop
sar
pusha
sbb
add
pop
out
mov
lods
(bad)
xchg
ins
mov
xor
sub
adc
push
push
push
mov
inc
and
scas
mov
stos
fnstenv
stos
dec
adc
inc
add
dec
cmp
sahf
lock
fmul
shl
push
aaa
dec
out
mov
mov
icebp
cmps
xchg
addr16
icebp
or
stos
fimul
aaa
pop
sub
pop
ds
dec
adc
add
icebp
push
arpl
jg
cdq
and
adc
scas
out
mov
sbb
mov
adc
retf
mov
stos
jl
in
std
jnp
push
into
leave
xchg
fldcw
ja
pop
call
jno
outs
add
int3
movs
(bad)
and
jmp
jmp
cmp
imul
mov
push
push
and
ror
sbb
outs
adc
fwait
jmp
pop
xor
sti
push
shl
mov
xchg
fstp
ficom
mov
xchg
fadd
out
mov
xor
push
f2xm1
mov
xchg
movs
mov
nop
in
sub
in
jle
xchg
ror
out
mov
ror
je
push
mov
xchg
fisub
mov
jge
outs
cwde
(bad)
lods
call
jmp
jge
cmp
sbb
adc
dec
xor
sub
xor
pop
xor
inc
aas
je
push
aas
int
jne
inc
movs
(bad)
in
ret
popa
sti
retf
or
inc
or
js
jae
rcl
lods
fiadd
and
inc
add
sbb
imul
enter
adc
pop
loope
fcomp
in
mov
cmc
mov
sub
fild
mov
bound
repnz
cmps
scas
inc
push
or
fdivr
xchg
ror
inc
mov
loop
out
int
ins
sub
cmp
pop
fwait
aam
(bad)
cdq
mov
test
(bad)
xchg
fisttp
cmp
jmp
outs
je
pop
cmp
call
cli
xchg
stos
clc
pop
pop
dec
sbb
(bad)
sub
dec
arpl
and
and
test
mov
(bad)
(bad)
mov
add
and
mov
lods
in
mov
cmp
ins
(bad)
jp
js
ret
aas
inc
call
xchg
in
test
es
sub
call
movs
sahf
and
pop
aaa
jnp
dec
in
imul
fimul
rol
aaa
inc
adc
or
dec
cs
add
push
jmp
pop
call
push
(bad)
into
mov
mov
push
jnp
pop
jge
ins
jecxz
std
adc
or
aaa
jno
sub
adc
adc
leave
rcr
lock
mov
add
aad
cli
fs
push
dec
call
(bad)
xchg
test
mov
shl
add
push
rcpps
inc
ds
adc
xor
dec
adc
jecxz
enter
push
push
fs
ins
sub
es
cmp
ins
sub
jno
and
and
icebp
shl
rol
add
pop
sti
mov
sub
pop
or
xchg
sub
pusha
or
hlt
xor
mov
cmp
idiv
imul
dec
in
(bad)
fsubr
cmp
jae
call
dec
loope
std
es
mov
jp
and
cmc
test
xchg
ret
push
jns
ja
pop
push
inc
mov
and
cmp
(bad)
ficomp
and
mov
dec
jmp
(bad)
mov
stos
fld
mov
xchg
cdq
neg
pushf
call
mov
add
fisub
add
push
clc
cwde
stos
xor
mov
repz
xchg
scas
retf
mov
dec
dec
pop
inc
ss
sub
shr
jge
mov
cs
sbb
pop
outs
ds
cmp
and
jae
fwait
enter
test
mov
or
push
leave
stos
ret
cmps
inc
ins
inc
add
xchg
jg
je
push
aad
call
push
push
and
or
push
call
and
inc
aaa
dec
movs
or
jbe
push
push
pop
cs
mov
mov
adc
push
stc
jb
dec
push
dec
sbb
std
outs
xor
in
js
imul
and
push
or
cmp
xor
adc
jno
jb
iret
push
out
clc
pop
fisub
jb
lods
clc
test
es
mov
ins
mov
repnz
mov
and
pop
add
mov
ja
mov
lahf
jbe
popa
xor
retf
loopne
sub
or
ret
mov
mov
push
cmp
add
in
aas
call
jl
and
add
bound
jmp
mov
and
cmp
xor
es
out
sar
in
xor
add
add
push
rcr
fnstcw
jae
jp
outs
stos
add
jg
pop
sbb
adc
mov
add
ret
data16
shl
neg
xor
dec
cmp
pop
je
pop
out
mov
test
neg
rcl
mov
sub
cmp
add
cmp
add
imul
pop
loope
int
mov
xor
outs
les
imul
popa
fcmovbe
movs
mul
pop
fld
imul
cmp
movs
mov
and
pop
or
sbb
inc
add
mov
fisttp
add
mov
and
sub
ja
movs
(bad)
mov
aas
push
mov
mov
mov
sbb
inc
add
loopne
ss
ins
mov
lods
int
jno
push
adc
adc
or
outs
daa
daa
inc
rol
sub
enter
inc
scas
push
push
gs
jle
cwde
xchg
pop
cs
cmps
xchg
loopne
rcr
mov
or
inc
sbb
push
aad
sub
mov
jno
push
adc
lds
mov
mov
aas
cmps
or
mov
out
mul
push
xor
jle
push
sub
cs
jns
ficom
(bad)
mov
cli
test
xor
inc
push
addr16
rep
ret
stos
enter
jo
dec
aas
sbb
je
push
loope
out
ror
packuswb
int3
(bad)
xchg
in
dec
lock
test
mov
sti
ja
inc
push
dec
call
inc
push
sub
push
add
sub
xchg
xlat
mov
(bad)
stos
cmc
not
cmp
stos
rol
push
pop
push
ins
cmp
divps
inc
xchg
out
add
int3
fwait
mov
and
dec
loope
jmp
daa
imul
xchg
rol
xchg
xchg
push
add
mov
xor
adc
adc
out
int
mov
add
adc
enter
js
pop
mov
in
push
cmc
mov
aaa
dec
loope
(bad)
das
cmp
aam
shl
rol
cmc
movnti
xchg
(bad)
lods
adc
cwde
rol
loop
fnsave
adc
cmps
rol
mov
xchg
cld
scas
ins
cmps
iret
lods
test
xchg
sti
test
iret
cdq
fld
aam
out
outs
cmp
stos
jmp
xchg
imul
sub
push
adc
sbb
inc
sbb
cmp
pop
ret
in
mov
and
adc
stos
icebp
cmp
and
xchg
stos
cld
gs
lds
push
scas
push
ss
pop
and
and
jle
es
pop
mov
inc
jecxz
xor
adc
dec
sub
fldenv
pop
aaa
jl
inc
out
inc
ret
mov
jne
dec
adc
and
icebp
mov
imul
jnp
add
and
xchg
fst
pop
cmp
sub
sbb
mov
mov
(bad)
mov
pop
xor
cld
mov
aas
int
add
mov
mov
test
mov
fild
sbb
push
pop
ja
add
inc
cs
loopne
xchg
fist
out
sub
mov
mov
jle
pop
pop
pop
int3
test
add
sbb
jl
dec
imul
inc
adc
ss
aam
int3
test
cmps
cmc
mov
cmp
sahf
in
mov
outs
xor
mov
outs
in
mov
cmp
mov
mov
mov
push
dec
adc
cs
push
inc
sbb
mov
mov
je
dec
aaa
popa
and
fdiv
adc
ror
aas
repnz
shl
push
pop
out
adc
and
and
in
mov
mov
adc
xchg
gs
call
lds
scas
les
cmp
push
retf
xchg
sbb
jns
mov
xchg
add
icebp
popa
xor
xchg
mov
lds
mov
adc
or
jnp
cs
xchg
jmp
and
pop
sbb
out
cmp
test
mov
out
mov
call
jg
xchg
mov
ror
mov
xchg
mov
xchg
shr
xchg
sub
ins
sub
sar
xchg
jg
inc
lods
je
movs
lock
data16
mov
out
mov
dec
imul
and
or
xor
add
xchg
push
add
out
jmp
das
push
in
mov
(bad)
loop
stc
cmp
pop
data16
inc
dec
dec
mov
out
xchg
push
pop
imul
mov
inc
stos
jecxz
or
adc
out
lock
mov
jnp
mov
adc
sub
mov
loope
and
daa
mov
aas
mov
mov
popf
add
dec
ret
call
sar
repnz
pop
jl
gs
mov
dec
cmp
dec
pushf
cdq
scas
pop
pop
jbe
mov
loopne
push
neg
xchg
push
pop
into
std
push
xchg
push
clc
retf
xchg
jae
or
and
sub
nop
movs
cwde
hlt
pop
sbb
inc
retf
pop
mov
aam
dec
out
push
out
aam
push
cmp
push
or
sbb
fdivp
fadd
outs
fld
jle
stos
xor
dec
sahf
daa
dec
cld
cmps
mov
dec
mov
scas
mov
data16
add
out
inc
push
cmp
out
into
mov
inc
push
ficomp
cmc
lahf
les
ins
xchg
ss
arpl
xchg
iret
push
pop
inc
lea
lods
push
call
push
cli
jb
jge
movs
(bad)
push
mov
cmp
shl
inc
jb
pop
pusha
aam
dec
push
push
push
test
sbb
movs
pop
fimul
test
xchg
(bad)
adc
cmps
push
xlat
pop
(bad)
loope
sti
adc
xor
xchg
pushf
dec
mov
jl
push
inc
mov
add
cld
or
xchg
add
lods
dec
(bad)
repnz
sbb
sub
mov
and
scas
cdq
shl
mov
and
shr
fimul
fstp
inc
inc
push
push
add
scas
sub
arpl
cdq
cld
jo
pop
nop
pop
cmp
aaa
inc
push
push
pop
inc
dec
or
test
jge
jno
push
outs
call
inc
adc
test
hlt
(bad)
push
enter
pop
test
ins
test
push
inc
mov
mov
ret
cmps
repz
cmp
push
sar
out
fcomp
lods
(bad)
sub
repnz
add
add
(bad)
outs
dec
mov
test
pop
repnz
jb
repz
cmps
jno
push
movs
test
and
out
mov
inc
jg
sub
fwait
cmc
les
xor
pop
xchg
cmp
mov
sub
hlt
mov
cli
cmps
mov
xor
push
stos
pop
push
out
pop
ret
cmps
outs
in
lock
popa
inc
rol
mov
mov
xor
mov
mov
jg
or
sub
sub
mov
mov
mov
pusha
sub
mov
pop
jmp
adc
imul
cdq
mov
movs
fdiv
adc
pushf
popf
push
dec
mov
test
inc
ins
cmp
in
sub
mov
xchg
pop
in
push
in
outs
movs
xor
jl
mov
adc
out
std
sub
push
jo
mov
hlt
call
ret
pop
lods
je
lock
(bad)
pop
cmp
push
sub
lock
ds
aas
nop
aaa
(bad)
gs
xor
sub
jle
iret
xor
test
mov
jo
mov
pusha
addr16
scas
fstp
xchg
inc
sub
shl
fistp
nop
and
push
shl
enter
lods
(bad)
fdiv
push
mov
shr
xchg
sbb
xor
pop
dec
packuswb
pop
ins
xor
je
out
sbb
dec
cwde
push
xchg
(bad)
fnstenv
mov
jae
call
xchg
mov
mov
stos
ror
cdq
nop
jnp
in
add
hlt
std
test
adc
inc
mov
movq
not
fcmovbe
sar
(bad)
std
xor
int3
movs
je
mov
push
scas
ins
es
and
mov
mov
sub
jp
ret
shl
push
cmp
pusha
outs
adc
retf
pop
jmp
aam
xchg
or
cdq
cmp
fistp
jmp
dec
aas
jl
push
mov
push
rcl
push
cmps
lds
cmp
fwait
xchg
nop
xor
sub
mov
daa
jo
sbb
out
cmp
lds
mov
jl
out
cld
jns
push
inc
mov
jnp
rcr
fs
sbb
dec
aaa
imul
dec
test
jp
mov
mov
mov
call
mov
mov
mov
idiv
xor
lods
stos
pop
pop
pop
in
call
or
clc
push
jno
pop
dec
push
adc
xor
ltr
pop
dec
pusha
sbb
jg
gs
sub
push
pushf
(bad)
mov
fnstenv
imul
add
cmp
cmc
sub
sbb
or
push
sbb
adc
sbb
sub
repnz
and
imul
pop
xchg
mov
(bad)
mov
mov
xor
test
lods
aas
mov
and
and
mov
or
xchg
sahf
movs
mov
xlat
in
test
jo
mov
jge
adc
aad
jecxz
cmp
pusha
inc
add
pop
pop
jecxz
sub
jnp
mov
xchg
lods
test
sbb
fcmove
sbb
pop
(bad)
aad
sti
cli
scas
sti
loopne
out
daa
push
and
movs
dec
fisubr
(bad)
(bad)
cmp
mov
ret
dec
dec
jmp
push
sub
push
jb
add
popf
adc
push
sub
shr
mov
cmp
movs
fcmovu
jecxz
int3
sbb
dec
loop
dec
lds
jb
fwait
pop
sti
data16
test
cmp
sub
add
cli
and
in
dec
nop
dec
fwait
js
push
pop
push
mul
adc
bound
push
retf
xor
arpl
mov
(bad)
fidivr
cmc
in
out
popf
mov
leave
mov
rcr
cli
shl
sub
lds
stos
call
add
sar
and
or
movs
dec
pop
ffree
adc
loopne
(bad)
cmp
jmp
movs
pop
les
adc
(bad)
lahf
xlat
int3
aam
retf
ja
sbb
les
jae
jns
xlat
sahf
pop
jb
mov
cs
retf
scas
xchg
into
adc
mov
pop
pop
out
mov
inc
mov
les
stos
xchg
enter
dec
push
imul
mov
lahf
neg
push
cmp
add
mov
test
cmps
mov
add
loop
adc
sti
jmp
push
je
dec
sahf
adc
add
jno
cmps
adc
cdq
and
js
daa
ror
in
std
cmc
xchg
(bad)
jmp
sub
add
inc
mov
xor
sbb
shl
adc
push
mov
pop
sbb
sahf
add
inc
inc
push
jno
jno
mov
pop
pop
ror
mov
shl
adc
sub
pusha
call
cmp
fiadd
gs
test
stos
(bad)
in
retf
xchg
and
hlt
cdq
daa
jb
into
and
fwait
mov
xchg
repz
pop
adc
xor
clc
stos
pop
sub
jns
jg
jns
je
lock
imul
mov
adc
jae
jg
fwait
aas
push
addps
into
push
repnz
stos
scas
aam
test
pushf
dec
mov
xor
data16
push
scas
sbb
imul
(bad)
sbb
gs
das
dec
ret
jb
cs
pop
push
fadd
ds
cmc
sbb
outs
xor
or
repz
cmp
ss
inc
out
and
hlt
add
(bad)
retf
push
sbb
cmps
jnp
ret
mov
sbb
repnz
sub
fadd
hlt
adc
jmp
mov
sub
fistp
adc
fild
(bad)
sub
add
sub
sub
sub
stos
fsubr
cmp
dec
xchg
push
es
pop
mov
inc
xlat
retf
ja
cmp
(bad)
rcl
retf
retf
jnp
sub
not
fstenv
mov
out
cdq
aam
push
sub
jp
xchg
pop
jae
fwait
jns
(bad)
lahf
mov
mov
das
sub
sar
cmps
pop
sub
mov
xor
or
addr16
xor
inc
adc
ret
popf
lea
xchg
rcr
adc
cmp
into
repnz
sbb
test
ja
fimul
shl
scas
sub
xor
jmp
les
cmps
(bad)
addr16
pop
jp
retf
in
push
sbb
mov
sub
pop
push
pop
push
retf
(bad)
push
xor
repnz
jne
pushf
pop
xor
and
aam
aam
hlt
sbb
push
sub
mov
call
sbb
or
cmc
pop
xor
jmp
mov
xchg
mov
jne
pop
mov
mov
sub
jns
fadd
sbb
xchg
cmp
mov
arpl
pusha
sbb
das
dec
pop
xchg
cdq
jecxz
cmp
adc
and
mov
mov
fld
sub
sbb
xor
call
sub
fist
dec
jbe
int
rol
xor
sti
mov
push
sti
cdq
jle
xchg
stc
idiv
pop
aas
aad
out
loop
inc
aas
cmc
add
mov
sbb
push
push
sub
dec
out
cwde
icebp
movs
repnz
fdiv
pop
loop
nop
loopne
sbb
mov
imul
int
movs
pop
mov
xor
push
push
dec
(bad)
test
gs
fsubr
sbb
gs
es
cmps
gs
push
add
test
pop
sub
xor
das
data16
hlt
dec
cmp
inc
popf
(bad)
mov
add
inc
xchg
jmp
icebp
add
and
outs
test
call
jo
nop
pop
rcl
push
xor
sub
jo
adc
mov
fcom
js
hlt
push
(bad)
dec
inc
(bad)
and
add
mov
mov
(bad)
out
xlat
imul
sbb
fimul
fmul
xor
rol
cmc
hlt
rcl
and
pop
sbb
mov
pop
and
imul
dec
adc
leave
imul
xor
adc
xor
stc
or
mov
ret
sub
xor
inc
cmc
mov
stos
adc
test
xchg
call
dec
jbe
test
pop
sub
test
sti
xchg
arpl
sbb
scas
cmc
shl
dec
shr
cmp
stos
jnp
lods
jnp
cmp
mov
add
iret
pop
sbb
push
and
in
(bad)
in
stc
push
jge
sub
xchg
scas
imul
ret
repnz
(bad)
js
ds
adc
and
pop
mov
push
aad
sub
xchg
ror
add
mov
fucomi
retf
mov
dec
ins
dec
mov
icebp
pop
popf
ret
jle
mov
sbb
ret
shr
push
shl
and
ja
lock
cdq
ds
shr
rcl
ins
mov
ror
jmp
xchg
das
cmp
shl
adc
sub
mov
or
icebp
adc
call
ss
outs
bound
int
fidivr
repz
int
and
and
cmc
jp
test
xchg
sbb
ja
out
mov
iret
add
cmc
lods
and
ret
mov
mov
cs
retf
iret
mov
xor
fdivr
mov
adc
pop
mov
push
loop
xchg
or
or
cmc
fs
out
dec
mov
jg
add
pusha
aaa
in
pop
inc
cmps
fsubp
and
out
or
jp
call
popf
pop
(bad)
ret
ds
pop
ins
sbb
inc
nop
dec
pop
rol
retf
or
adc
or
jo
sti
add
mov
cmp
mov
mov
cmp
idiv
mov
fs
and
pusha
and
add
dec
jmp
bound
sbb
cld
imul
dec
add
clc
sbb
inc
jge
out
iret
xor
shl
push
popa
adc
cs
fld
test
lock
data16
pushf
jne
div
fneni(8087
in
pop
js
pop
jae
aaa
(bad)
xor
mov
dec
xchg
sar
rol
push
icebp
das
test
xchg
ret
bound
mov
xchg
retf
pop
clc
mov
xor
xor
jbe
xor
inc
and
cmp
repnz
mov
jecxz
out
mov
mov
cmp
add
cs
jns
ss
(bad)
retf
clc
mov
add
xchg
stc
movs
mov
lds
mov
mov
cmp
inc
out
(bad)
fadd
cld
scas
stos
loop
sub
icebp
stos
or
es
rol
jnp
jle
lods
sub
xchg
shl
(bad)
xor
sbb
test
xor
inc
adc
mov
dec
push
jb
retf
rcl
mov
cwde
pop
push
push
dec
jb
pop
and
mov
sub
inc
les
add
cwde
iret
jae
pop
dec
call
loop
ins
xchg
mov
mov
call
lea
xchg
adc
cmc
sti
shl
sbb
push
jg
inc
in
jmp
stos
adc
in
mov
mov
jmp
fidivr
ret
sbb
ja
cmc
xor
add
stc
retf
xlat
inc
shl
dec
stos
inc
addr16
xor
pop
add
imul
xchg
pop
inc
movs
cmc
add
xchg
ja
add
movs
cmp
dec
xlat
lods
cmp
cmp
jo
xchg
pop
shr
dec
mov
inc
test
mov
dec
nop
dec
rcl
das
inc
ret
push
push
cld
fbstp
pop
(bad)
sub
pop
xchg
rol
jg
xchg
dec
daa
(bad)
cmp
jno
js
mov
into
jmp
jbe
dec
xchg
js
outs
add
inc
popf
fld
mov
mov
test
xchg
mov
movs
mov
cmp
inc
call
test
sub
leave
(bad)
mov
and
hlt
out
mov
jp
jge
and
sbb
ss
adc
(bad)
jl
push
aas
sti
outs
mov
in
imul
pop
mov
mov
aad
inc
sub
es
mov
inc
sar
std
mov
pop
aaa
cld
call
cli
jmp
mov
mov
cwde
jne
lea
xor
mov
mov
inc
and
pop
xchg
push
pusha
and
cmp
and
nop
shl
pop
aad
dec
jp
jp
pop
mov
cmp
into
pop
scas
les
aam
push
jg
call
lea
push
cdq
mov
mov
(bad)
xchg
xchg
shl
sbb
lods
imul
jnp
jp
sub
xor
pop
sub
outs
idiv
jb
icebp
push
iret
inc
inc
hlt
adc
pop
pop
sub
jle
jo
lods
xlat
push
and
clc
push
aam
jnp
out
rcl
daa
cwde
mov
cli
xor
pop
ds
sbb
cmp
aaa
lock
out
adc
or
sbb
loope
inc
clc
xchg
cmp
fst
xchg
and
cli
les
sub
out
lods
daa
imul
ret
test
test
dec
jnp
mov
into
dec
imul
sub
fldcw
(bad)
sub
sub
push
shr
call
add
test
fild
fld
jnp
xchg
push
sbb
cmp
jge
jmp
pop
push
or
cmps
or
sub
rol
sbb
test
inc
mov
fadd
lock
mov
(bad)
stos
outs
cmps
lods
call
arpl
aam
xchg
fisttp
movs
sbb
ins
cmps
je
sbb
fcmovnu
jmp
lock
or
js
inc
jo
shr
aaa
test
xor
add
xor
pusha
jns
pop
ins
fwait
enter
inc
lods
add
movs
inc
outs
test
pop
std
ret
cmp
call
and
inc
add
jmp
cdq
or
rcr
(bad)
xchg
sbb
xchg
and
push
lock
fcmovnu
dec
pop
clc
cdq
pop
dec
cmp
sub
daa
pop
sub
cmp
inc
mov
int
sbb
bound
mov
out
xchg
adc
test
xor
jno
je
and
retf
add
inc
or
sub
push
sbb
xor
dec
jne
xor
add
and
sub
jne
xor
scas
fld
mov
je
jb
jmp
jnp
inc
or
and
popa
xor
dec
push
int3
ds
test
xchg
(bad)
ins
ret
sub
jb
pop
test
cli
ins
sub
fldenv
icebp
push
cmps
lock
mov
add
retf
bound
xchg
hlt
retf
aam
push
(bad)
into
loopne
xor
imul
dec
movs
pushf
sub
push
inc
loopne
int
(bad)
vpxor
xor
mov
mov
lock
push
jmp
dec
jg
push
in
mov
mov
sbb
mov
add
jmp
ja
pop
pop
lds
leave
ins
outs
mov
mov
fmul
imul
pop
xchg
shr
push
test
repz
repnz
sub
and
scas
movs
ss
sti
repz
push
cmp
rcl
push
mov
dec
add
mov
mov
inc
leave
loop
add
fist
jle
push
popa
mov
clc
mov
lea
mov
xor
call
jl
add
push
sbb
pop
vmread
fmul
aad
mov
sbb
mov
mov
ds
adc
or
cwde
jecxz
mov
pusha
dec
push
retf
in
mov
sar
in
jbe
cmp
call
add
pop
inc
jmp
jge
sbb
pop
mov
mov
mov
mov
jne
dec
or
mov
add
dec
ins
call
push
sub
mov
out
mov
clc
adc
add
ja
cmp
mov
outs
xchg
clc
ins
into
out
inc
mov
dec
pop
test
cmc
mov
fwait
push
out
sar
sbb
stos
scas
movs
jne
stc
dec
mov
retf
sub
add
inc
jmp
cld
(bad)
jecxz
(bad)
loopne
scas
fwait
adc
xchg
add
cmp
mov
or
gs
inc
sti
xchg
jecxz
hlt
gs
stc
xlat
inc
mov
shl
inc
pop
cmps
(bad)
push
jnp
mov
jge
cmp
fwait
mov
stc
repnz
cmp
call
xor
movs
lods
add
mov
mov
pop
sar
mov
and
push
fcom
push
cwde
mov
outs
cmp
mov
je
imul
rol
icebp
icebp
iret
jecxz
call
jae
cmp
fiadd
(bad)
jno
cmps
adc
or
popa
xor
mov
(bad)
push
fisttp
jo
ficom
and
iret
jo
mov
movs
add
add
mov
(bad)
addr16
into
out
rol
sub
mov
mov
jo
popa
adc
sub
xchg
or
scas
add
sahf
and
mov
add
fisubr
sub
jl
jne
dec
mov
stc
adc
std
xor
popf
or
mov
mov
add
test
xchg
leave
pop
push
add
pop
pushf
stos
sub
adc
addr16
mov
jecxz
test
cmps
mov
mov
pop
push
add
and
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
push
push
push
push
push
push
push
push
sahf
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
push
pop
push
push
push
cs
push
sahf
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
push
push
push
push
push
push
push
push
push
inc
mov
push
push
push
push
push
push
push
push
push
push
xchg
sbb
push
push
push
dec
push
dec
push
inc
push
dec
push
pop
push
dec
push
dec
push
push
push
push
push
push
push
inc
push
push
push
push
push
pop
push
push
push
push
push
push
push
mov
push
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
and
push
push
push
push
push
push
sbb
push
push
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
push
push
push
pop
push
dec
push
jg
ins
push
pop
push
ja
jb
jnp
push
push
jo
js
jno
push
push
push
push
cmp
sbb
push
push
dec
push
ins
push
jg
jo
ins
push
jb
jg
push
ja
jno
jo
push
push
push
push
push
push
scas
sbb
pop
push
push
pop
push
dec
push
push
ins
push
ja
jo
jns
pop
push
ja
jb
jnp
push
push
jo
js
jno
push
push
(bad)
pop
push
push
pop
push
cs
cs
cs
cs
cs
sub
jl
cs
push
push
xor
sbb
pop
push
pop
push
ja
jb
jnp
pop
push
jnp
ins
push
jge
ins
push
ja
outs
push
push
ja
jno
jo
push
push
push
push
ds
push
push
cs
push
push
pop
push
pop
push
ja
jb
jnp
dec
push
jnp
ins
push
ins
push
ja
jno
jo
push
push
push
push
cs
xor
cs
xor
cs
xor
cs
push
push
inc
push
add
pop
push
push
push
jo
push
jnp
ins
push
jo
jg
jb
push
push
jg
jae
jnp
push
push
inc
push
jl
imul
jl
dec
push
pop
push
jge
push
push
pop
push
push
push
push
push
jbe
jne
jg
jp
push
push
fs
pop
push
dec
push
jo
imul
jnp
pushw
jnp
push
push
push
push
ss
sbb
pop
push
push
push
jnp
jns
jg
jb
pop
push
jno
outs
push
addr16
ins
push
ja
jns
jbe
push
push
push
ds
push
push
jp
add
pop
push
push
push
ins
push
ja
jns
ja
jo
jg
jb
pop
push
ja
jb
jnp
jo
jg
jae
jnp
push
push
inc
push
jl
imul
jl
dec
push
pop
push
jge
push
push
pop
push
push
push
push
push
jbe
jne
jg
jp
push
push
fs
pop
push
dec
push
jo
imul
jnp
pushw
jnp
push
push
push
push
sub
push
push
pop
push
dec
push
ins
push
jno
jp
imul
push
push
dec
push
jnp
ins
push
ins
push
ja
jno
jo
push
push
cs
xor
cs
xor
cs
xor
cs
push
push
es
push
push
pop
push
pop
push
ins
push
ins
push
jnp
jae
jl
jb
addr16
ds
dec
push
jnp
ins
push
ins
push
ja
jno
jo
push
push
cs
xor
cs
xor
cs
xor
cs
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
push
adc
push
push
push
es
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
xchg
push
add
pop
dec
jbe
inc
jmp
jbe
xchg
shl
pop
fbld
shl
fild
push
sahf
pop
mov
sahf
rol
test
jmp
imul
cmp
nop
retf
push
xchg
xor
stc
out
hlt
jg
adc
adc
jno
and
xor
test
(bad)
in
sbb
jns
or
cli
jne
into
push
inc
push
pop
nop
push
test
cmc
jo
cmp
pop
cmc
cmp
push
sahf
mov
sbb
xor
fdiv
aas
or
aas
xor
cwde
jae
push
sub
sti
rcl
dec
rcr
adc
jmp
(bad)
fst
mov
test
mov
ja
outs
imul
mov
and
add
sub
adc
sub
ins
adc
pop
pop
cmp
adc
add
mov
mov
sbb
or
sti
mov
add
pop
inc
adc
mov
cmp
push
fisubr
jnp
(bad)
addr16
sub
sbb
ret
or
js
mov
adc
jns
pop
or
scas
push
or
popa
mov
cmp
jg
jge
cmc
xchg
data16
popf
(bad)
xchg
sub
cmp
mov
inc
inc
mov
sbb
repnz
in
pop
adc
cmc
push
push
mov
jns
and
aas
sub
frstor
adc
adc
scas
inc
in
mov
or
scas
imul
ret
adc
icebp
das
inc
pusha
mov
xor
repz
fsubrp
cmc
dec
aaa
in
loopne
xchg
int3
push
adc
cmp
jmp
pop
cmps
adc
cmps
das
and
jb
fwait
pop
mov
jmp
psubb
inc
xor
mov
fld
cdq
adc
push
mov
enter
dec
jecxz
jmp
popa
test
std
retf
push
add
movs
xchg
rcr
arpl
xchg
hlt
mov
adc
xchg
mov
and
pop
pop
repnz
aam
mov
inc
sbb
pop
jno
int3
cdq
xchg
jmp
fistp
xchg
ret
sub
in
jg
nop
pop
in
arpl
inc
std
dec
push
leave
pop
push
pop
cld
xor
mov
pop
cmp
pop
jo
ret
fistp
mov
push
or
cdq
mov
not
jae
rep
push
int3
jge
call
pusha
and
push
mov
imul
jns
clc
ds
mov
(bad)
scas
or
arpl
dec
leave
pop
pop
mov
fimul
ret
cmc
sub
sbb
mov
xlat
retf
inc
mov
inc
and
jae
lods
push
adc
(bad)
movs
call
lahf
xor
sahf
cmp
ret
in
cmp
pusha
movs
inc
retf
out
adc
sub
(bad)
jg
cmp
lods
fild
inc
xchg
inc
xchg
jb
add
adc
add
ror
xor
push
cmp
mov
ins
dec
ins
sbb
pop
push
pop
cmovb
enter
push
(bad)
jmp
call
shl
cmps
or
jae
jmp
dec
jmp
cmc
inc
mov
sub
shl
addr16
stc
outs
stc
mov
popf
mov
test
mov
push
mov
sbb
aad
xchg
jno
mov
retf
(bad)
in
ds
mov
retf
loopne
pusha
pop
es
aas
sub
adc
stos
(bad)
mov
cdq
mov
pop
into
cmp
add
mov
push
add
repnz
jecxz
sub
(bad)
(bad)
popa
mov
add
push
inc
push
shl
sahf
fild
xchg
push
jge
push
mov
or
call
inc
sti
mov
dec
lds
adc
or
in
std
out
out
push
cmp
aaa
pop
mov
jecxz
test
fdivrp
sahf
push
pop
mov
cmc
mov
fwait
or
rol
and
stos
cld
sbb
fcmovnbe
stc
loop
sub
aam
mov
adc
cmp
adc
dec
inc
(bad)
mov
sar
shr
retf
out
jecxz
enter
mov
lea
dec
sahf
xor
xchg
push
cmp
pushf
dec
push
loope
outs
pop
es
call
bound
or
test
sub
xor
and
loopne
push
jmp
dec
hlt
mov
iret
mov
mov
(bad)
and
sub
push
mov
inc
ret
rcl
xchg
or
sete
jne
mov
and
and
mov
push
push
loopne
cld
test
mov
stos
push
fisub
mov
mov
push
imul
ss
cmc
ins
mov
in
ss
test
in
fiadd
imul
in
push
outs
mov
es
pcmpeqb
adc
ffreep
sub
sub
cdq
mov
cmp
sub
sbb
cmp
xchg
pop
test
cmps
int3
add
jmp
xchg
loope
cmp
jae
retf
out
jp
pop
sar
mov
test
xchg
pop
jne
movs
ins
and
xor
ins
mov
or
inc
aas
jmp
cs
mov
call
addr16
data16
out
popf
das
ja
adc
dec
or
push
(bad)
lock
retf
push
inc
sub
loop
pop
lahf
xchg
and
aad
jge
cld
int
add
enter
pop
(bad)
cmp
lea
jle
neg
adc
jecxz
jecxz
les
pop
pop
arpl
and
outs
add
cwde
pop
shr
sti
das
mov
imul
jae
jae
add
repnz
outs
pop
or
and
jge
lods
dec
es
xchg
fld
cmps
popa
mov
mul
adc
xchg
or
push
test
inc
xchg
add
jle
aad
xchg
out
push
fadd
sbb
(bad)
ror
ret
dec
mov
mov
fisubr
dec
movs
cmp
arpl
mov
or
inc
loop
dec
pop
(bad)
mov
stos
arpl
jmp
rcl
push
lods
mov
push
stos
cli
inc
sbb
inc
cmp
push
mov
mov
inc
jge
xchg
(bad)
sub
xor
cmc
xlat
sub
cdq
cmps
dec
or
xchg
inc
(bad)
ins
mov
popf
sub
out
ins
int3
push
adc
pop
(bad)
sub
xlat
les
inc
and
int3
push
fnstenv
and
mov
out
jne
push
push
jns
cli
push
pop
cmp
out
cmp
lahf
setl
dec
jno
mov
jg
xchg
dec
jno
popf
nop
cmp
fwait
mov
cmps
lock
nop
movs
jno
out
jp
cmp
sub
mov
loopne
inc
popa
aaa
xchg
jge
adc
push
add
repz
test
test
lock
gs
xor
retf
fcom
and
(bad)
loope
adc
sbb
idiv
std
fbld
add
lds
cmp
call
popa
and
int
stos
inc
jp
push
inc
jle
aad
icebp
pop
popf
push
sbb
icebp
fucomi
sbb
cs
inc
and
repnz
push
mov
sahf
jns
ja
sbb
pop
push
add
xchg
xor
push
ins
jp
pop
jo
jle
lods
shr
add
(bad)
(bad)
ficom
pop
push
inc
clc
dec
std
pop
sub
(bad)
mov
push
xor
mov
mov
mov
je
cdq
push
push
pop
fs
cdq
fwait
sub
stos
ss
inc
gs
pusha
adc
jg
mov
push
sub
adc
loop
pop
dec
mov
into
fisub
xchg
ficomp
hlt
mov
sub
xchg
xchg
or
dec
push
popf
std
out
mov
inc
aas
xchg
pop
dec
adc
arpl
mov
inc
out
in
and
add
jb
mov
jg
pop
fucomip
xor
inc
aad
jmp
or
sub
mov
mov
(bad)
and
push
std
ja
mov
mov
loop
lods
stos
dec
js
sub
ffree
sbb
fst
inc
push
mov
and
jne
sub
(bad)
stc
mov
xchg
mov
and
std
pop
jl
std
mov
cmps
push
ss
pcmpeqb
(bad)
or
push
adc
pusha
pop
mov
xor
call
sbb
cmps
dec
fist
xor
aas
sahf
(bad)
or
int
mov
push
lods
add
jns
std
sbb
pop
pop
jbe
test
adc
repz
clc
mov
pop
stc
addr16
movs
ss
pop
ja
sti
add
sbb
icebp
aad
js
imul
js
mov
mov
add
aad
fdiv
fidiv
mov
test
xchg
jne
adc
cli
dec
inc
push
mov
popa
xchg
adc
test
push
fistp
xchg
arpl
aam
pop
inc
addr16
call
pop
clc
fisttp
inc
mov
pop
retf
sahf
push
xchg
popf
scas
add
int3
std
adc
mov
sbb
adc
popa
int
test
fst
iret
cli
inc
fbstp
fimul
jns
fmul
inc
adc
ret
mov
loopne
mov
jmp
ja
dec
inc
mov
mov
sbb
jge
inc
adc
fsub
inc
add
aad
and
xchg
sub
imul
cmps
cli
into
retf
imul
hlt
xor
lea
test
ret
mov
out
cdq
push
outs
add
fnstsw
cmp
cdq
sbb
jmp
jle
retf
push
add
movs
or
jmp
jl
jg
inc
xchg
jae
sbb
jg
inc
add
inc
retf
pop
ins
movs
(bad)
xor
mov
cmps
lods
or
stc
mov
es
push
cld
cmp
jns
and
mul
add
lahf
cs
fld
jae
cmp
std
das
dec
mov
push
retf
dec
push
ss
push
into
aam
and
xor
ret
push
rol
je
lods
int
cli
fisttp
mov
loopne
arpl
add
hlt
mov
ror
mov
scas
mov
xor
cmps
jmp
mov
push
cmp
repnz
popf
sub
ss
sahf
popa
cmp
jo
jb
fcmovnbe
dec
xor
mov
fst
rcr
sti
int3
cmps
test
call
aas
xlat
pop
xchg
fsub
push
dec
xor
popf
adc
sahf
fcmovu
pop
sbb
repz
push
xchg
bound
push
mov
(bad)
iret
pop
repz
xchg
sbb
out
(bad)
in
push
aas
stos
scas
in
jmp
jbe
in
ret
nop
xor
call
scas
mov
sub
and
imul
add
out
mov
xchg
rcl
stos
fsubr
xor
sbb
lods
xchg
add
int
push
(bad)
mov
or
adc
call
dec
ror
(bad)
mov
push
pop
stos
(bad)
inc
fimul
xchg
out
sbb
inc
cmp
sbb
adc
aaa
cli
xchg
xchg
sti
in
pop
cs
test
sbb
outs
ja
mov
fistp
arpl
in
adc
adc
clc
mov
mov
aad
fisttp
jp
outs
push
xacquire
sub
data16
rcr
push
fidivr
add
hlt
ret
cli
aam
push
rcr
shl
arpl
fdivr
push
popa
ficomp
sar
pop
ja
(bad)
jp
popa
dec
and
or
mov
xchg
jne
pop
cmp
cdq
xor
ds
out
xor
push
add
lea
or
ins
sbb
push
es
test
lahf
push
push
push
ret
or
test
retf
shl
sub
pop
sar
sbb
icebp
mov
stc
movs
addr16
icebp
and
pop
push
repz
xchg
std
out
add
in
xchg
mov
push
ret
ds
data16
pop
jb
push
in
push
movs
dec
add
lock
inc
dec
in
sahf
adc
pop
and
(bad)
pop
gs
fsubr
enter
dec
fwait
mov
out
das
jb
adc
in
inc
add
(bad)
push
aad
cmp
mov
and
xchg
sbb
adc
mov
dec
les
loop
jnp
mov
add
sbb
xchg
fdivrp
cmc
add
fst
out
pop
lods
jae
sub
push
call
push
lds
mov
inc
dec
mov
aaa
mov
dec
imul
je
stos
and
sbb
es
sbb
pop
es
or
repnz
lods
cwde
or
jg
adc
fsubr
push
fnstenv
and
and
push
pop
fistp
cmp
mov
sub
sbb
push
lahf
add
les
adc
fidiv
std
or
shr
cmps
cs
pop
xor
adc
addr16
pop
aas
stc
adc
les
dec
mov
dec
adc
pop
mov
imul
movs
jecxz
sub
xchg
dec
repnz
mov
xchg
jae
or
fcom
data16
cld
mov
inc
mov
sub
push
sbb
add
xchg
xchg
mov
in
(bad)
popf
xchg
jle
dec
and
mov
mov
or
js
sbb
imul
push
(bad)
imul
mov
or
dec
pop
fwait
imul
sti
xor
and
dec
pop
mov
cmps
and
push
push
push
aas
dec
test
inc
cwde
add
int
shr
and
mov
lahf
into
mov
loope
mov
sbb
sbb
loop
ja
ds
dec
outs
mov
int
aad
(bad)
sbb
or
add
push
and
imul
hlt
imul
or
dec
imul
hlt
outs
das
mov
xor
sub
fcomp
in
cmp
fwait
jg
inc
aaa
pop
es
lods
lods
mov
shl
jmp
call
push
rcr
fcom
mov
add
arpl
cmc
inc
(bad)
mov
ret
push
and
test
lods
jg
gs
pop
or
or
sbb
jp
inc
and
cmc
mov
aas
xchg
mov
mov
inc
or
test
popf
inc
push
retf
addr16
jb
xchg
pop
mul
test
mov
ror
dec
cmovbe
daa
or
pop
stos
push
add
leave
push
xchg
(bad)
mov
inc
outs
mov
add
daa
and
add
and
rol
gs
div
ret
mov
dec
sbb
test
push
out
stos
push
mov
and
outs
hlt
fldz
clc
xor
jle
les
pop
fst
pop
daa
sbb
je
and
mov
ret
fwait
and
add
and
test
clc
jmp
cmp
(bad)
pop
push
xor
out
movs
push
test
cs
adc
loope
fnsave
push
push
outs
sub
or
rcr
adc
lods
mov
mov
jle
aad
(bad)
fadd
mov
jne
in
add
not
das
mov
xor
repz
adc
std
mov
daa
popa
push
je
adc
xor
(bad)
cmps
pop
(bad)
aad
hlt
sbb
fidiv
mov
movs
cwde
inc
pusha
pop
mov
cmp
(bad)
cli
jne
ret
jg
pop
fsubp
fs
(bad)
pop
cmp
or
sbb
and
pop
scas
(bad)
(bad)
jb
xchg
or
lea
pop
dec
xchg
push
and
std
push
bound
iret
jb
sbb
iret
data16
(bad)
mov
repz
jmp
or
or
mov
cld
stos
imul
pop
xchg
dec
jae
in
or
dec
and
call
xchg
fucompp
int
xor
js
dec
xchg
sbb
aam
pop
popf
retf
outs
int
sbb
not
adc
fimul
inc
out
pop
retf
popa
int3
aam
mov
call
sub
out
sti
cdq
jns
pop
adc
sti
stos
(bad)
jno
repz
mov
push
jg
dec
mov
fimul
ss
nop
jp
cmp
lds
ret
out
inc
dec
retf
scas
imul
sub
jo
stos
clc
sbb
inc
dec
push
inc
push
stos
loop
jne
sahf
daa
xor
in
(bad)
pop
sub
xor
mov
pop
call
mov
nop
shl
call
lahf
loope
inc
(bad)
out
xchg
dec
jmp
rcl
cmp
mov
stos
jno
xchg
jp
(bad)
mov
mov
xor
mov
xchg
inc
push
pop
push
arpl
pop
mov
cmps
jne
add
adc
sbb
scas
outs
cli
adc
jge
jg
xchg
data16
mov
outs
add
mov
and
ins
shr
add
addr16
adc
dec
mov
jns
add
adc
les
addr16
adc
fcmovne
adc
xchg
push
cmp
jmp
mov
icebp
xor
int3
icebp
icebp
imul
popf
jecxz
jecxz
add
mov
push
mov
jae
cmp
mov
adc
push
leave
dec
push
pop
or
adc
pop
sub
or
lds
jo
cmp
inc
jns
add
sub
xor
dec
pop
sbb
dec
ror
gs
in
fdivr
mov
loope
cmp
adc
(bad)
push
add
or
outs
jle
(bad)
mov
push
data16
xchg
inc
addr16
outs
lahf
mov
stos
jbe
inc
adc
push
pusha
inc
add
rcr
jl
mov
inc
std
or
pop
mov
fidiv
repz
cmp
adc
mov
mov
and
add
scas
add
add
xchg
push
mov
in
sbb
pop
mov
jmp
and
mov
popf
pop
clc
jno
addr16
jbe
push
adc
cwde
push
gs
mov
inc
mov
push
sbb
mov
mov
jp
test
es
xor
cmps
imul
lock
and
pop
out
lock
jmp
xor
add
lahf
push
mov
inc
or
and
xor
sbb
test
fwait
out
xor
shl
pop
jecxz
mov
(bad)
adc
sub
pop
mov
jg
mov
lock
inc
out
(bad)
fstp
pop
aaa
jo
jp
sti
adc
jg
sbb
and
pop
push
xchg
inc
adc
loop
sbb
pop
scas
sbb
jmp
push
int
mov
sub
cwde
popf
pop
test
adc
jno
cmps
retf
nop
popa
mov
or
int
adc
daa
mov
nop
pop
push
call
mov
mov
ret
imul
and
out
nop
push
mov
jg
and
test
fild
aaa
inc
push
lock
mov
je
ds
sbb
(bad)
and
mov
(bad)
inc
repnz
jmp
addr16
shr
pop
xor
mov
cmp
jle
idiv
repnz
icebp
jmp
jecxz
in
sar
test
loope
in
mov
(bad)
mov
ss
xchg
push
mov
fs
xchg
sub
daa
pop
adc
cmp
mov
pop
fadd
and
mov
and
ja
mov
shl
mov
mov
stos
add
cmp
aas
imul
mov
cmp
cmp
and
lods
cmp
fisubr
fistp
(bad)
sub
mov
loope
pop
pop
popf
leave
inc
movs
not
xor
mov
and
hlt
add
xchg
push
add
mov
ja
das
jmp
sub
(bad)
cs
or
push
shl
rol
xor
fisubr
sub
pushf
jb
hlt
arpl
shl
mul
push
call
sub
leave
xchg
push
sub
stos
pop
add
sbb
lea
retf
or
aas
adc
pop
inc
je
inc
cmp
pop
outs
jg
loopne
push
hlt
push
add
pop
mov
dec
test
ror
cdq
inc
inc
pop
outs
push
(bad)
fsub
dec
scas
pop
xchg
fdiv
inc
sbb
xor
xchg
clc
inc
mov
aam
or
bound
mov
mov
jo
mov
xlat
push
sub
jbe
gs
lock
cs
mov
and
mov
dec
mov
and
out
pop
and
imul
pop
xor
fwait
aas
fisub
int3
jnp
fsubrp
cmp
dec
xchg
pop
mov
or
cmps
mov
lahf
out
cdq
push
aaa
add
or
movs
aam
xchg
adc
inc
(bad)
mov
mov
sub
dec
sbb
sbb
dec
push
shl
mov
jp
retf
les
adc
retf
or
mov
fstp
stos
retf
pop
xchg
mov
das
pusha
cmps
dec
cmp
scas
rol
mov
inc
xchg
mov
out
ins
je
cld
push
arpl
loop
into
das
mov
(bad)
out
lds
push
fwait
xchg
or
jmp
xor
add
cmc
fidiv
push
arpl
jg
pop
add
test
mul
adc
retf
(bad)
aaa
mov
(bad)
in
pop
test
(bad)
out
fprem1
add
(bad)
movs
ins
cli
jg
(bad)
mov
push
sub
xchg
sub
imul
jge
sbb
add
gs
ret
dec
sub
xchg
(bad)
sub
out
jbe
cmp
mov
repnz
call
test
out
movs
mov
or
sbb
ret
push
jecxz
in
(bad)
adc
fstp
xchg
(bad)
fld
inc
mov
frstor
inc
adc
mov
gs
aam
(bad)
mov
jmp
(bad)
pop
iret
pop
push
bound
sbb
gs
add
daa
xchg
mov
ins
mov
in
dec
test
repz
dec
clc
add
jg
shl
push
inc
jo
pop
loopne
hlt
shr
jecxz
fst
or
xor
test
test
lds
(bad)
mov
inc
paddsw
cmps
jae
add
mov
sub
dec
inc
pxor
(bad)
scas
nop
sbb
add
mov
sar
xor
mov
inc
xchg
call
retf
jo
xchg
mov
add
cwde
mov
xchg
jp
add
mov
and
adc
mov
sbb
sbb
fwait
ins
and
shl
xor
push
in
les
pop
les
ss
gs
ja
xor
nop
and
dec
sub
ret
inc
inc
pop
ds
pop
inc
push
shl
or
sbb
pop
sbb
std
loopne
dec
xchg
out
xor
jl
retf
xchg
add
lea
sbb
leave
sub
out
cli
enter
ret
xchg
adc
sahf
ss
ins
sbb
ja
dec
push
mov
lock
rol
jmp
xchg
in
shr
leave
ss
pop
inc
gs
mov
jl
pushf
sub
push
je
jle
xor
sbb
je
xlat
aas
pop
jno
add
pushf
(bad)
bound
sub
hlt
mov
dec
lock
clc
call
jmp
dec
pop
out
mov
cmp
stos
cmp
jp
mov
stc
rol
(bad)
or
aaa
outs
test
push
or
lock
mov
movs
ret
nop
and
dec
add
int3
loope
test
jnp
mov
and
mov
mov
sbb
adc
mov
repnz
shl
stos
pop
jno
aam
adc
loope
push
adc
adc
pop
bound
call
mov
push
jns
jl
cmp
dec
gs
outs
dec
sar
mov
stc
das
repnz
test
movs
sbb
std
(bad)
mov
mov
fistp
jns
sub
cdq
jnp
pushf
jp
fcom
int3
(bad)
stc
ss
push
test
fistp
cmps
inc
inc
call
cmps
movs
sbb
ss
add
xchg
sbb
arpl
hlt
sub
sbb
cmp
out
mov
scas
mov
fcos
es
mov
and
inc
mov
mov
sbb
sti
xchg
jl
movs
inc
pop
adc
mov
fist
jae
lock
movs
enter
sti
jg
retf
sbb
test
or
in
mov
pop
int3
loope
int
adc
fcomp
or
popf
adc
jmp
jne
or
add
stos
and
(bad)
pop
clc
mov
pop
mov
sahf
xor
dec
mov
imul
mov
sahf
loopne
addr16
movs
pop
xchg
add
je
push
pop
lds
or
mov
sar
pop
data16
push
cld
cwde
addr16
cmp
mov
cmp
add
es
push
mov
ret
xor
push
movs
xchg
int
push
mov
cld
or
push
(bad)
retf
call
adc
xlat
sub
shl
call
or
cmp
mov
mov
out
dec
inc
adc
fmulp
xor
sbb
sbb
add
(bad)
xor
or
aad
in
data16
jns
popf
(bad)
mov
lock
aam
pop
lock
sbb
jge
cwde
jne
out
or
mov
inc
dec
and
out
xor
lods
xchg
xchg
int
fidiv
enter
push
test
or
sub
jge
mov
add
out
dec
push
pop
repnz
pop
xor
ret
fbld
xor
cmp
inc
gs
jns
dec
loop
fsub
call
mov
add
dec
fst
jnp
cdq
dec
inc
dec
arpl
cmps
ins
sub
or
fstp
cmp
push
mov
mul
mov
in
(bad)
xchg
push
call
inc
sbb
and
popf
push
sar
sahf
push
test
mov
cmp
mov
outs
push
cmp
cmp
jl
push
aam
and
lods
fidiv
cdq
ror
cdq
pop
add
adc
pusha
in
scas
pop
push
dec
inc
xchg
and
jmp
or
add
popf
pop
xor
mov
out
js
fcom
rol
adc
xchg
cdq
mov
mov
(bad)
loop
clc
call
jne
rcl
es
pop
mov
inc
xor
push
push
std
mov
fs
xor
mov
mov
movs
loopne
test
pop
sbb
push
xchg
pop
out
addr16
sbb
mov
xchg
sbb
sub
fidivr
jno
sti
inc
push
mov
or
dec
xchg
leave
daa
mov
dec
outs
mov
xor
jnp
and
mov
sbb
xchg
je
test
jecxz
outs
pop
call
adc
into
aas
adc
aas
pop
cli
movs
push
rol
add
test
xor
jmp
jmp
dec
cmp
aam
push
fwait
push
pop
sbb
retf
imul
pushf
rcl
lahf
inc
fsub
dec
cmps
adc
ja
sub
rcr
fdivr
mov
mov
mov
inc
sbb
and
sbb
cli
push
mov
stc
ss
daa
fsubr
mov
adc
shl
ds
mov
pop
int
imul
ret
mov
fst
mov
div
push
inc
add
and
add
imul
push
mov
std
jae
inc
imul
daa
rep
bound
jp
mov
cmp
inc
iret
cmp
inc
sar
outs
sbb
repz
int3
ins
aaa
loopne
jns
adc
repnz
(bad)
cmp
jne
(bad)
js
dec
fbld
xchg
dec
dec
leave
inc
inc
jl
or
shr
aam
out
and
cmp
pop
(bad)
fcmovu
movs
(bad)
scas
dec
(bad)
jp
jecxz
mov
sub
add
add
inc
aad
jg
es
mov
lahf
mov
shr
(bad)
fs
pop
fcomp
pop
or
add
push
sub
push
xchg
sbb
mul
xor
fimul
sahf
sahf
cmp
mov
sub
adc
cli
mov
je
daa
pop
inc
and
rcl
dec
inc
hlt
cmp
pop
cmp
pop
(bad)
je
(bad)
or
into
or
or
sbb
shl
xlat
scas
call
cli
cli
xchg
jl
mov
inc
sti
dec
repnz
unpcklps
cmp
jno
inc
jns
sti
(bad)
jne
xchg
jnp
pop
dec
cli
mov
push
jbe
adc
js
(bad)
add
push
mov
pop
xchg
aaa
test
cmp
ss
enter
(bad)
cmp
mov
cmc
(bad)
dec
das
jecxz
clc
cmc
cmp
mov
sbb
mov
fst
pop
jecxz
xlat
ror
adc
cwde
shl
cmp
sub
popf
int3
test
std
sbb
popf
fcom
fild
gs
daa
xor
dec
push
sub
xor
cli
(bad)
out
(bad)
push
xchg
add
or
xchg
pop
bound
pushf
mov
mov
es
rdmsr
and
xlat
xchg
add
aaa
in
push
xchg
into
and
jg
test
sar
and
cwde
fild
adc
inc
jp
popa
mov
mov
sub
outs
push
into
jecxz
(bad)
sbb
or
(bad)
(bad)
mov
(bad)
push
inc
adc
mov
sbb
stos
push
lods
dec
imul
test
push
inc
dec
cdq
gs
push
(bad)
fisttp
dec
push
fsubp
mov
daa
push
or
cli
mov
dec
jae
pop
bound
sbb
mov
push
mov
jp
shl
out
mov
cmp
or
jo
jnp
dec
pop
rol
js
pop
(bad)
xchg
mov
out
dec
jecxz
mov
imul
mov
jb
jae
int3
or
or
inc
dec
push
int3
fwait
mov
cmp
test
push
(bad)
jmp
in
fistp
xor
not
or
and
mov
ins
xchg
aaa
cvtps2pd
push
sub
out
push
xor
xchg
adc
(bad)
and
xchg
test
or
cmp
retf
retf
pop
xor
mov
jno
(bad)
shr
stos
pop
xor
repz
or
push
xchg
jmp
or
jge
packssdw
sar
leave
mov
inc
cld
sbb
mov
leave
mov
fstp
aam
xchg
xlat
add
into
dec
gs
adc
ss
lea
mov
mov
xchg
shl
xchg
inc
xchg
sub
and
jo
mov
lods
aaa
mov
inc
jo
push
xchg
ror
jns
xor
out
aad
sub
and
add
xor
mov
repz
cli
mov
and
out
cmp
imul
scas
push
fld
cmp
jb
mov
mov
mov
inc
stos
pop
adc
cmp
inc
jno
stc
dec
and
sbb
add
mov
test
push
adc
cmps
add
push
or
in
jnp
xchg
jo
int
imul
mov
pop
add
fs
mov
adc
mov
loop
cmp
test
mov
mov
sbb
jno
inc
pop
push
daa
adc
cmp
fisttp
xchg
stc
int
aam
scas
pop
ds
dec
mov
mov
dec
add
aam
xchg
rol
jno
lahf
mov
sub
mov
sbb
pop
or
push
pushf
jno
out
fsubp
ins
push
stos
dec
mov
shr
retf
lea
jp
jns
jmp
cmc
push
pushf
mov
mov
sbb
sbb
mov
or
icebp
ret
and
cmp
jns
adc
mov
cmp
stos
jmp
cmp
cmp
cmp
out
jp
rcr
xor
adc
pushf
cli
call
pop
cmp
mov
jne
xchg
hlt
jae
loopne
or
dec
cmp
adc
add
fcomi
jne
stc
cmps
pop
lods
jbe
push
mov
xchg
in
retf
jp
or
jg
(bad)
and
shl
pop
mov
daa
xchg
cmp
ret
dec
fist
movs
ret
cmc
lds
push
shl
nop
mov
adc
pop
cmps
iret
cmp
xchg
cmp
mov
sub
stc
std
repnz
aas
jo
sbb
ss
aam
jmp
add
fstp
and
or
or
jmp
push
scas
inc
cmp
sbb
add
sub
sbb
sub
add
loop
arpl
retf
jae
xchg
sbb
adc
push
fsubr
cmp
jp
push
fnsave
inc
xor
stos
cmp
xchg
adc
pushf
inc
outs
dec
mov
pop
mov
pop
mov
je
inc
xchg
leave
inc
loop
int
aad
pop
jg
inc
sbb
arpl
xchg
ret
das
jl
outs
or
add
adc
fimul
retf
fwait
and
fisub
cmp
pop
fidivr
add
into
mov
dec
daa
jns
mov
lock
pop
test
shl
xor
mov
jae
push
cmc
repz
dec
pop
mov
fnstcw
clc
cmp
out
lahf
pop
bound
imul
mov
retf
or
test
adc
xchg
and
dec
call
dec
neg
test
jmp
sub
dec
jp
dec
cmp
jmp
lahf
and
and
fwait
ss
sahf
push
and
pop
fdivr
pop
lea
or
mov
lods
mov
adc
mov
dec
jne
sub
mov
dec
mov
test
mov
les
idiv
sbb
vpunpckldq
push
mov
cld
mov
(bad)
adc
pop
aas
leave
jmp
inc
rol
sti
push
enter
cmp
xchg
pop
jp
test
or
and
push
and
cld
js
fimul
add
les
sub
or
les
push
cmp
loopne
push
lahf
sub
add
or
jb
ror
push
(bad)
imul
push
inc
add
add
jg
ret
inc
dec
pop
xor
sbb
(bad)
retf
push
sub
push
and
sub
pop
fldenv
dec
cmc
lock
fs
in
enter
pusha
in
jns
stos
rcl
xor
pusha
fisttp
loop
stos
and
dec
inc
pop
mov
mov
sub
cmp
inc
lods
in
daa
and
push
(bad)
jmp
mov
pop
xchg
mov
aam
idiv
sbb
jne
out
adc
es
ror
(bad)
push
sbb
jnp
pop
jne
mov
daa
test
stc
into
dec
sbb
fwait
push
push
fnstsw
cmps
stos
stos
test
sub
call
and
mov
retf
pop
pop
jmp
add
clc
inc
jne
outs
jle
jae
fs
mov
push
movs
add
add
repz
call
fimul
aad
lods
out
adc
push
imul
popa
jp
xchg
dec
pop
xchg
xchg
xor
scas
lods
cmp
mov
mov
popf
gs
xchg
mov
sub
mov
jae
dec
in
push
outs
adc
dec
das
retf
repz
lds
and
pop
jne
mov
call
out
div
add
loope
inc
(bad)
sub
in
repnz
push
pop
retf
fs
xor
sbb
add
add
fwait
xlat
pmaddwd
and
pop
fld
pop
call
int
jo
lahf
mov
daa
sbb
and
mov
dec
ins
js
pop
xlat
adc
(bad)
xor
imul
fwait
ja
mov
push
adc
int
loope
mov
mov
mov
dec
in
aad
daa
outs
pop
mov
push
loop
cs
pop
jge
adc
outs
or
shr
adc
push
push
std
jb
jecxz
jns
dec
sbb
call
test
fmul
jge
and
rcr
xchg
pop
cmps
inc
mov
mov
jecxz
mov
and
xor
cmp
add
call
cmp
fcmovnbe
lods
int
dec
lds
sub
in
scas
and
lea
mov
or
ins
cmps
std
das
test
sub
inc
sahf
lds
pop
dec
xor
sub
sbb
neg
scas
sub
(bad)
and
push
shr
xchg
(bad)
mov
leave
out
cmp
mov
cwde
mov
mov
dec
out
inc
push
xlat
mov
out
or
cmp
push
sub
rol
push
movs
out
neg
push
in
int
retf
sbb
xchg
test
xchg
mov
mov
out
outs
or
aam
mov
and
nop
enter
js
loop
push
dec
xor
cmp
stc
mov
inc
out
imul
pop
fcomp
adc
cdq
fs
inc
mov
test
dec
cmp
inc
fistp
(bad)
icebp
sub
loope
js
cld
push
jbe
cwde
into
retf
test
out
xchg
pop
adc
xor
xchg
movs
hlt
loope
mov
fmul
jbe
fwait
imul
add
mov
daa
icebp
out
pop
add
pop
dec
mov
mov
test
jae
fsubr
pop
shr
xchg
mov
rcl
pop
mov
jbe
ins
or
fsubp
pop
int3
cmps
int
xchg
jmp
adc
dec
add
rcl
jb
mov
cs
fld
cwde
shl
add
cmp
dec
out
pop
(bad)
cmps
addr16
iret
call
ror
mov
nop
ins
ss
or
fbld
and
mov
pop
cmp
dec
mov
nop
xor
imul
and
(bad)
gs
and
popf
inc
jmp
sti
fdivrp
or
scas
xor
(bad)
call
(bad)
dec
mov
aad
push
scas
jne
out
shl
cld
sbb
loopne
test
mov
push
inc
cs
fcomp
inc
adc
cmp
aas
dec
ror
fld
out
and
ja
arpl
inc
xchg
lds
or
aas
or
jo
xchg
mov
imul
cmp
jb
sbb
jns
pop
adc
dec
sar
std
test
and
mov
mov
inc
mov
jge
jle
cs
xchg
or
inc
shl
arpl
das
int
lock
jg
sbb
inc
mov
sahf
pop
fsub
cmp
mov
sbb
outs
imul
(bad)
mov
shl
push
loop
inc
inc
mov
ja
(bad)
aas
push
aam
jmp
xor
jle
rcl
lods
mov
sbb
arpl
in
ins
or
inc
pop
ficomp
adc
mov
sbb
in
or
ret
popf
jg
in
inc
mov
add
imul
bswap
mov
push
jne
shl
inc
cmp
and
pop
imul
sub
imul
fst
push
adc
clc
jno
push
pop
cmp
sbb
sub
aas
nop
mov
test
mul
inc
xchg
pop
es
push
enter
xchg
retf
mov
rol
cmp
fbstp
mov
xchg
push
sub
cmp
ins
fdiv
jbe
mov
neg
imul
xchg
popf
mov
sbb
and
mov
inc
cdq
mov
xchg
push
adc
mov
sbb
retf
std
xlat
xchg
mov
aad
xor
ss
pop
test
clc
add
mov
out
fisubr
adc
or
push
xchg
movs
fwait
xchg
clc
jne
xor
xchg
in
movs
sub
std
popa
mov
or
push
out
jae
or
jge
sbb
nop
jg
in
hlt
in
sub
or
mov
push
mov
cwde
(bad)
(bad)
pop
or
cmps
push
cmps
xchg
sbb
imul
das
jp
sbb
inc
sub
test
fdivr
push
(bad)
sbb
push
or
fst
xchg
stc
cmc
cwde
dec
in
sub
pop
push
add
or
movs
mov
dec
mov
and
push
fisubr
(bad)
div
push
into
push
out
std
adc
nop
xor
xchg
fwait
(bad)
cmp
or
das
sti
jle
mov
je
cmps
pushf
movs
add
pop
data16
push
mov
iret
mov
dec
push
aam
cmp
jae
xchg
pop
jmp
xor
inc
int3
test
push
inc
test
das
inc
and
add
xchg
mov
popa
(bad)
pushf
pop
and
gs
fdiv
stos
xor
xchg
cmp
push
pop
mov
jne
out
jns
mov
test
sbb
mov
mov
les
std
adc
sub
aad
dec
repz
test
and
ss
(bad)
mov
loop
les
enter
mov
lods
ds
add
push
shl
xchg
(bad)
imul
into
call
adc
mov
xor
lea
test
das
dec
mov
ror
add
or
adc
or
jmp
dec
mov
xchg
push
pop
pop
(bad)
pop
jne
loop
xchg
movs
xchg
jle
je
mov
push
push
sbb
mov
cld
push
movs
ror
rcl
jmp
push
ret
add
jo
popf
bound
test
ins
mov
or
sbb
test
ret
mov
cmps
pushf
fnstcw
push
sahf
xlat
jo
or
jo
lods
add
sbb
adc
aad
lock
movs
repnz
(bad)
mov
mov
pop
sub
xlat
jge
js
xor
movs
pop
shl
mov
mov
nop
xchg
add
aam
sbb
das
sbb
xchg
ins
lea
push
pop
scas
xchg
inc
cmp
rcr
dec
mov
xchg
xchg
gs
clc
dec
jb
and
add
adc
jge
push
push
outs
xor
mov
stos
(bad)
mov
mov
pop
xchg
(bad)
out
pop
jmp
add
test
sub
jge
div
aas
out
pop
loopne
push
push
xor
inc
in
and
add
imul
sub
sub
inc
jp
leave
cmp
xchg
adc
jne
sub
repz
mov
(bad)
sub
or
ror
sar
sub
xchg
stc
lods
xor
cli
pop
cmp
push
push
stos
imul
call
dec
push
nop
in
jno
or
hlt
cmp
not
pop
sbb
ins
mov
lock
ds
sub
imul
jbe
loop
and
movs
xchg
aaa
call
lods
mov
inc
and
(bad)
shr
push
ja
xchg
popf
push
(bad)
mov
xor
dec
add
mov
test
out
test
sub
add
retf
push
pop
out
mov
mov
mov
inc
and
rcr
or
aad
test
ja
mov
stos
enter
mov
leave
dec
sub
jnp
jns
hlt
push
imul
ror
xchg
jg
inc
push
adc
repz
pop
es
mov
nop
lahf
sbb
sti
out
fiadd
inc
push
mov
add
ficomp
rcl
fnsave
cmp
or
fcmovne
mov
mov
inc
push
jmp
(bad)
pop
cmc
push
out
mov
xor
bound
sbb
jnp
xchg
rol
or
repnz
and
xchg
xchg
stc
dec
xor
call
mov
add
(bad)
repz
pop
popf
xor
cwde
mov
cmp
int
xchg
inc
in
pusha
sbb
push
pushf
stc
popf
out
or
retf
pop
inc
sub
mov
int3
cmps
ds
aam
dec
imul
ret
in
cmps
mov
and
lock
cmp
mov
mov
mov
in
pop
nop
ins
retf
push
psraw
loope
sub
hlt
xor
jp
adc
mov
(bad)
xor
or
xor
icebp
(bad)
ficom
js
in
xor
mov
test
ja
and
pop
add
inc
jns
cli
sbb
pop
data16
loope
call
mov
sbb
push
imul
outs
daa
retf
xor
icebp
sbb
retf
fwait
jmp
iret
mov
and
push
ja
push
cmp
add
jl
shl
icebp
mov
inc
(bad)
pop
loope
dec
pop
fbld
fsubr
dec
in
mov
mov
ds
push
hlt
fwait
jmp
daa
ret
jmp
cdq
pop
push
fstp
retf
adc
pop
push
shl
or
mov
jne
outs
hlt
out
mov
or
cmps
repnz
and
mov
adc
iret
jae
loop
pop
daa
stc
or
shl
push
fmul
dec
fs
mov
and
addr16
inc
mov
xor
test
pop
test
aad
sbb
repnz
cdq
into
mov
test
cmp
sahf
inc
sub
(bad)
out
aad
pop
mov
or
mov
mov
mov
mov
push
push
cmps
jmp
dec
xchg
ret
les
pop
jmp
xlat
and
and
xor
test
jg
cmps
ficom
jp
les
test
jp
scas
gs
aam
cs
lea
les
(bad)
xchg
push
add
push
and
mov
push
arpl
ss
adc
pop
push
imul
jns
hlt
sub
adc
mov
stos
pusha
jmp
outs
or
lahf
dec
push
repnz
mov
dec
aas
push
pop
movs
adc
mov
fistp
fisubr
pop
mov
fiadd
xchg
scas
ja
leave
or
xchg
test
lods
inc
xor
add
call
fs
nop
push
in
lods
std
dec
pop
sbb
iret
call
pop
push
xchg
jae
cmp
dec
aas
call
dec
add
out
imul
cmp
jbe
sub
xor
mov
xchg
iret
mov
push
imul
gs
cdq
leave
nop
fucomp
xor
add
mov
pop
cwde
xchg
sbb
sar
out
arpl
mov
mov
dec
adc
cmps
stc
(bad)
push
jb
mov
sahf
xchg
call
mov
mov
das
ins
push
addr16
pusha
xchg
(bad)
or
cmp
inc
imul
test
fs
clc
push
aas
cli
lods
lock
inc
sub
les
push
inc
dec
or
jnp
inc
cmps
repnz
fld
jmp
push
js
sub
adc
cmp
xchg
dec
les
dec
push
into
(bad)
xchg
aad
cmp
cmp
test
pop
mov
adc
fcmovu
xor
popa
daa
jmp
aaa
mov
and
imul
xchg
sub
pop
repz
mov
test
iret
test
out
ret
push
cmovns
loope
retf
push
xchg
cdq
bound
pop
and
es
fldenv
vpsubd
dec
ficomp
inc
jns
out
and
jae
sub
xchg
pop
mov
enter
push
jne
inc
push
ss
jne
in
pop
fsubr
and
in
jne
fwait
popf
int
lahf
jg
cmc
pop
out
mov
sahf
sbb
jbe
pushf
dec
mov
pop
fsubp
pusha
jnp
nop
sub
pop
popa
and
jae
out
out
push
retf
cmp
test
sti
and
cli
mov
mov
mov
sbb
jge
jno
movs
xchg
jae
arpl
lahf
sub
xchg
mov
pop
test
imul
aas
arpl
sbb
loop
dec
adc
add
movs
mov
les
dec
scas
fnstsw
xor
lds
sub
cmp
cmp
push
ret
les
jl
and
int3
(bad)
hlt
hlt
aaa
pop
out
fisub
das
xlat
xchg
adc
add
in
push
pop
cmp
or
cmps
adc
mov
js
out
push
and
sub
pop
sbb
inc
ja
xchg
cmp
mov
or
fnstcw
cmps
cmp
popf
xor
inc
das
lods
call
in
mov
nop
sub
cwde
sub
das
fstp
and
ins
fcomp
enter
sbb
mov
jmp
xchg
(bad)
out
(bad)
mov
or
xor
cdq
pop
(bad)
clc
mov
mov
out
adc
add
stos
mov
pop
mov
jbe
pop
mov
add
lahf
sbb
mov
movs
push
xor
les
mov
lods
dec
bound
rcr
es
enter
mov
lea
arpl
in
or
mov
xchg
mov
dec
outs
clc
mov
pop
pop
mov
push
adc
int3
sbb
ins
cmc
jmp
pop
and
xchg
cli
imul
pop
in
loope
xor
sbb
jbe
sub
loopne
pop
fmul
rol
cmp
jbe
movs
aaa
sub
fs
xchg
xor
mov
dec
push
sbb
or
aam
pop
shr
and
daa
(bad)
and
mov
adc
cmp
cmp
cmp
push
xchg
push
mov
repnz
gs
push
sub
lods
loop
aas
add
and
rol
mov
add
data16
cmps
aas
ds
jmp
ja
lds
loop
adc
adc
lods
jo
ja
fnsave
push
push
push
push
jo
enter
shr
(bad)
jbe
in
sti
xor
in
rcr
dec
(bad)
call
add
xor
jb
jmp
lods
xor
dec
mov
mov
(bad)
not
jns
mov
push
mov
pop
daa
popf
push
push
(bad)
xor
ja
xor
scas
dec
jbe
cli
cmps
pop
xchg
sar
mov
(bad)
jns
pop
mov
jmp
jns
xlat
call
pop
sub
sbb
push
int3
ffree
cmps
stc
aad
pop
sub
adc
imul
(bad)
(bad)
or
jl
ror
scas
cmp
dec
mov
push
pop
and
shr
retf
pop
rcl
rep
mov
test
ret
js
mov
push
and
dec
fadd
enter
xchg
push
ret
mov
(bad)
cmp
dec
and
cmp
sub
push
jg
cli
mov
xor
fld
ror
inc
jge
cmc
mov
inc
mov
lds
fs
inc
int
or
rcr
outs
addr16
cmp
xor
in
inc
sbb
pop
mov
push
mov
stos
fistp
sub
lock
mov
push
inc
sub
aas
cs
fnstenv
inc
lahf
sub
adc
pop
jne
sahf
dec
jbe
inc
in
in
and
pop
cmp
test
inc
cmc
icebp
cmp
inc
cmc
imul
cmps
jo
lds
push
ret
pop
jmp
adc
mov
dec
imul
jae
fucomp
repnz
jmp
fstp
mov
addr16
push
aad
das
mov
mov
retf
in
adc
ret
mov
xchg
jmp
or
das
(bad)
nop
add
push
sbb
xchg
and
xor
clc
sar
div
retf
cwde
out
inc
jno
pop
push
nop
popf
sbb
inc
(bad)
shl
out
pushf
jbe
sbb
call
int3
test
ret
loopne
pop
fldenv
cld
push
mov
clc
div
pop
pushf
out
jae
push
outs
and
jns
retf
iret
and
mov
mov
mov
adc
mov
leave
and
ins
push
xor
dec
lea
shl
call
inc
add
pop
aaa
cmp
test
ret
aas
xor
dec
ds
dec
daa
xchg
aas
imul
(bad)
out
xchg
pushf
xchg
push
jb
add
addr16
test
jmp
inc
stos
cmps
add
mov
sub
dec
popf
test
pop
mov
cwde
(bad)
neg
scas
xor
mov
xchg
sub
pop
out
cdq
enter
mov
out
aad
inc
push
ret
aam
imul
mov
pop
js
jmp
sub
jnp
jecxz
cs
test
sbb
rcr
jnp
(bad)
sbb
popf
cmp
sbb
rcr
dec
fnstsw
mov
test
pop
call
fucomp
rcl
call
push
pop
das
add
jne
rcl
fisttp
mov
adc
into
xchg
js
mov
xchg
or
cli
ins
xchg
xchg
mov
sbb
adc
inc
lea
es
outs
cmp
shl
pop
push
mov
dec
fst
in
jno
inc
in
fcomp
jg
sbb
hlt
(bad)
xchg
imul
dec
vmovlps
outs
aad
cmc
in
pop
aas
mov
sbb
add
fs
mov
imul
outs
mov
push
popf
sbb
shl
popf
(bad)
leave
add
fnstcw
sub
pop
ins
xchg
mov
in
dec
inc
adc
mov
jge
mov
aaa
fwait
mov
xor
mov
cmp
popf
fidiv
scas
pusha
fist
push
or
push
mov
bound
sbb
adc
dec
jae
sub
dec
sbb
mov
and
aam
xchg
add
push
jmp
fist
xchg
xlat
jno
add
adc
pop
mov
in
inc
mov
rol
push
add
jmp
and
mov
ins
xchg
outs
ja
stos
jns
mov
leave
sub
js
xlat
repz
out
sbb
dec
push
mov
scas
mov
movs
lods
pop
mov
dec
or
ss
mov
cmc
push
xor
or
cli
out
push
das
stc
dec
ret
fist
xor
jecxz
test
repnz
(bad)
pushf
xor
shl
pop
mov
cli
mov
xor
pop
pop
les
or
out
ror
push
cmp
mov
push
int3
push
into
add
pop
mov
cld
pushf
mov
inc
popa
daa
xor
leave
ss
jecxz
inc
adc
jg
stos
mov
mov
ror
test
fild
nop
into
mov
(bad)
cli
dec
inc
sahf
mov
std
adc
mov
aad
mov
inc
sbb
div
jae
neg
(bad)
cmc
test
adc
gs
test
outs
mov
movs
mov
push
cwde
sub
jae
nop
dec
xchg
add
mov
(bad)
and
xor
es
adc
(bad)
aad
out
rcl
lds
mov
popa
call
pop
into
mov
cmp
cwde
sbb
lds
retf
sbb
cli
movs
out
les
dec
mov
add
jns
ins
addr16
int
push
or
cmps
dec
xchg
gs
add
nop
loop
shl
xor
lds
pop
loope
or
mov
mov
xchg
sbb
ja
jle
add
pop
adc
add
inc
jg
dec
mov
popf
sbb
sbb
ficomp
cmp
push
xchg
sbb
es
add
aaa
leave
add
or
xor
push
pop
test
addr16
mov
or
iret
pop
popf
gs
cmp
shr
mov
sbb
jmp
stos
nop
ret
sbb
mov
push
add
rcr
sahf
ja
dec
adc
cmp
pop
mov
mov
movs
and
les
lahf
jle
cmp
or
add
sbb
sar
mov
inc
in
push
sub
ret
inc
or
and
data16
movs
retf
cmps
cmps
cmp
call
fsub
stos
mov
int3
pop
icebp
popa
out
adc
mov
(bad)
scas
mov
dec
mov
cmp
loop
(bad)
in
cmp
ret
loopne
int3
dec
pop
(bad)
xchg
arpl
je
ret
pop
mov
lahf
test
or
push
pusha
les
push
xor
dec
ds
sub
cli
lock
retf
in
sahf
sub
pushf
addr16
cmps
sbb
cmps
or
and
aad
dec
push
aad
pop
scas
inc
inc
lock
nop
fldcw
sbb
adc
gs
mov
xchg
aaa
retf
xchg
jp
scas
add
adc
mov
pop
mov
jl
pusha
ret
pop
stos
int
mov
adc
jb
adc
fmul
fcom
or
fisttp
push
jnp
and
adc
out
outs
stos
sbb
xchg
lds
push
xchg
pop
ficomp
mov
call
fst
fsubr
stos
cs
sub
mov
test
jl
xchg
and
mov
daa
lahf
push
inc
inc
fadd
xchg
adc
xlat
xor
push
sub
pop
gs
mov
and
jo
and
scas
mov
mov
in
xchg
mov
stos
or
cmp
jbe
ror
scas
out
and
call
mov
js
add
shl
inc
inc
neg
cmp
dec
int3
xchg
outs
xchg
cdq
mov
xor
scas
push
outs
popa
mov
in
adc
jle
push
scas
inc
mov
inc
movs
sub
hlt
(bad)
or
add
xor
jne
fcmovne
push
(bad)
shl
fs
pushf
lds
iret
out
in
cmp
pop
or
ret
sub
push
fsub
vshufps
mov
movs
push
push
push
xchg
data16
push
push
inc
movs
cmp
cmp
fiadd
jnp
sub
cld
jae
(bad)
loopne
pusha
repz
or
retf
stc
jnp
add
xchg
test
pop
xor
call
and
cmps
cmc
xchg
repnz
fmul
out
pop
movs
and
pop
pop
pop
out
pop
in
dec
cli
xchg
mov
aam
cli
push
adc
sbb
sbb
mov
(bad)
test
outs
cmp
sbb
or
or
or
lds
inc
jecxz
pop
fmul
cmps
mov
mov
scas
xchg
dec
and
fs
inc
mov
xor
in
adc
iret
retf
push
leave
mov
in
mov
imul
xor
out
push
jl
inc
out
sub
sbb
push
xor
or
xor
pushf
adc
popf
in
pop
es
movs
mov
and
and
mov
sub
dec
jle
clc
test
cmp
pop
sbb
jg
data16
xchg
lock
cmps
jge
iret
inc
mov
cmp
pushf
jge
sbb
cs
add
push
stos
and
call
arpl
in
push
pop
lahf
sub
xor
add
xchg
push
add
shl
adc
jnp
jae
sbb
or
add
bound
jge
inc
sub
and
sbb
inc
and
push
or
jno
dec
sbb
push
js
push
push
ss
mov
jmp
push
jne
jle
stos
ss
idiv
push
xor
push
cmp
pop
shr
cmps
movs
mov
xlat
dec
jmp
add
xor
inc
int
in
neg
fwait
enter
loop
out
pop
imul
ss
or
arpl
jge
fs
enter
retf
xchg
(bad)
mov
repnz
jmp
fwait
xchg
aam
out
or
add
pop
fiadd
movs
mov
popa
adc
ja
jb
call
pushf
fsubr
or
loope
lds
je
ins
cld
mov
(bad)
push
cmp
push
ret
mov
(bad)
int
(bad)
xchg
xchg
mov
rol
bound
add
jmp
in
jp
jl
add
sbb
push
shl
fmul
ds
dec
aad
out
xchg
lahf
rol
test
push
cmc
data16
or
test
xchg
jo
inc
pop
xor
inc
cmp
push
adc
push
arpl
push
cmp
pop
arpl
or
add
icebp
fs
out
pop
imul
ss
(bad)
imul
stos
sub
invd
xor
jp
pop
fidivr
xchg
test
icebp
jb
jbe
sbb
and
pop
rcl
retf
test
mov
stos
fmul
imul
retf
mov
int
fld
pop
ja
mov
out
lds
sbb
aad
add
cmc
jle
pop
push
or
mov
call
jo
ins
sub
pop
ss
fsub
es
fisub
lods
stos
mov
imul
xor
push
fcomp
scas
mov
test
and
xchg
call
cmp
jb
dec
ds
ss
sbb
adc
and
imul
shl
imul
jp
inc
sub
xor
popf
ins
sub
push
ds
sub
push
dec
xor
push
imul
pop
rcl
mov
push
adc
daa
aas
ins
cmp
sub
push
add
inc
enter
lahf
fistp
pop
sub
sub
pop
clc
xchg
mov
lahf
(bad)
push
in
adc
or
gs
fistp
cdq
stos
lods
out
rol
rol
dec
cmp
nop
dec
iret
stos
mov
ror
mov
neg
lods
test
xchg
rol
mov
xor
mov
inc
ds
pop
bound
cdq
jmp
jmp
scas
std
scas
out
mov
xor
dec
ret
mov
sub
or
inc
les
push
xlat
inc
xor
shr
mov
fcom
aam
not
mov
mov
mov
ret
mov
shl
loop
mov
cmp
sbb
ds
bound
push
pop
pusha
and
pop
es
pop
das
jno
lahf
out
aad
ror
sar
stos
mov
ret
imul
sar
xchg
or
adc
cmp
mov
out
sub
and
outs
cld
jl
lea
sbb
ss
xlat
mov
xlat
cmps
sbb
cmp
push
xor
xor
pop
push
dec
xor
push
push
cmp
es
add
sub
movd
jnp
dec
pop
inc
sub
daa
push
add
je
inc
pop
dec
or
jg
pop
or
and
pop
jbe
lahf
leave
mov
cmps
ret
test
adc
adc
push
sar
lahf
mov
jp
xor
pop
shl
in
sub
sub
dec
(bad)
test
retf
test
(bad)
in
out
pushf
enter
cmc
(bad)
xlat
test
xchg
shl
in
cwde
iret
mov
xlat
xchg
test
xchg
rol
mov
sahf
fidivr
in
(bad)
mov
mov
test
(bad)
in
in
into
mov
stos
sbb
jo
mov
jbe
push
daa
xor
stc
cmps
(bad)
push
ins
sbb
sub
fs
xchg
movs
mov
pop
in
jge
push
or
jns
aas
dec
and
and
and
outs
cmp
cmp
popa
adc
pop
and
inc
sub
outs
sub
sub
data16
xor
imul
bound
jns
arpl
dec
cmovno
lods
sti
mov
(bad)
stc
jo
pop
sub
xor
inc
mov
fcomp
es
or
dec
shl
jo
push
and
xor
inc
lock
mov
cld
stos
into
mov
xchg
mov
mov
rcl
(bad)
fbstp
call
mov
mov
jmp
fld
aam
icebp
stos
rcl
std
scas
rol
ret
pop
fldenv
mov
(bad)
push
and
add
pop
fidivr
aam
xor
fisttp
(bad)
scas
lahf
(bad)
enter
or
pop
add
pop
add
sahf
leave
mov
rol
mov
mov
cwde
fdivr
loop
shl
mov
mov
call
(bad)
mov
xchg
int
test
add
jne
dec
pop
push
xor
push
(bad)
mov
pop
into
dec
cmp
sbb
inc
xlat
cmps
test
movs
fild
je
add
sub
dec
retf
call
sub
pop
push
push
and
dec
and
data16
and
outs
cmp
cmp
popa
adc
pop
and
inc
sub
outs
sub
sub
data16
xor
hlt
mov
call
xchg
(bad)
mov
mov
cwde
sahf
mov
pop
xor
adc
(bad)
lock
rol
cmp
pop
jp
jns
cmps
movs
adc
jp
mov
mov
out
mov
mov
xchg
les
rol
mov
(bad)
lods
les
hlt
mov
ficomp
stc
xchg
fisub
xor
push
pushf
outs
sub
cmps
(bad)
stos
in
loop
retf
mov
pop
es
adc
xor
ret
lods
stos
sahf
cdq
loopne
jmp
and
or
ins
std
jle
stos
mov
loop
sub
sub
arpl
inc
(bad)
scas
sbb
stos
in
shl
stc
mov
(bad)
sar
mov
retf
mov
mov
fsubr
icebp
add
(bad)
mov
push
and
in
fcmovbe
test
in
dec
or
adc
hlt
mov
addr16
push
js
dec
adc
lahf
(bad)
push
in
adc
addr16
sbb
repz
test
mov
out
mov
inc
xor
and
pop
xlat
outs
stc
stos
mov
scas
retf
nop
sbb
lahf
loope
ficomp
jecxz
loopne
lock
loop
rcr
cli
mov
jmp
xchg
xlat
xchg
loope
push
imul
and
pushf
jmp
fdiv
leave
hlt
push
add
mov
cmps
jmp
dec
sbb
mov
inc
cmp
push
cmp
inc
add
adc
and
inc
xor
dec
and
ins
sub
or
adc
and
push
aaa
inc
adc
fs
dec
or
dec
sbb
xor
pop
data16
arpl
push
maxps
aas
dec
push
jle
inc
add
and
ins
pop
cmp
sub
test
adc
iret
push
add
cdq
pop
mov
loopne
sti
mov
mov
les
xchg
mov
xchg
int3
cmps
out
mov
and
inc
pop
pop
cmp
push
fbld
jae
cwde
fist
cmp
ins
or
jp
push
es
inc
add
push
cmp
jle
jl
inc
cmp
ins
xor
push
pop
add
test
mov
add
(bad)
in
and
push
jge
and
mov
lods
push
test
mov
lds
jp
popa
adc
imul
xor
jns
imul
xchg
outs
sbb
sbb
fnsave
jge
inc
cmp
fnstenv
adc
inc
add
jae
jns
jp
push
js
dec
add
jb
pusha
and
adc
jae
call
and
imul
sub
mov
push
sub
push
and
push
adc
fiadd
fsubr
imul
sub
addr16
cdq
std
outs
fisttp
adc
je
jne
mov
pop
jmp
fisttp
fwait
popa
(bad)
pop
sub
pushf
jecxz
popf
shr
shl
mov
cld
cdq
enter
ret
nop
rcl
aam
aam
mov
out
sbb
push
xor
lods
in
mov
mov
pop
jge
popa
sub
xchg
shr
out
shl
out
mov
mov
mov
test
xchg
jno
adc
add
push
fcomp
pop
sub
pop
sbb
sbb
push
add
add
pop
sub
popa
sbb
jp
jno
push
adc
jno
inc
or
dec
and
push
pop
aas
inc
cmp
outs
cmp
push
cmp
imul
cmp
popf
pop
jle
inc
cmp
sub
jae
inc
cmp
inc
xor
and
jae
jp
dec
sub
cmp
cmp
in
fwait
enter
mul
repnz
scas
stc
mov
(bad)
sar
mov
retf
mov
mov
fsubr
out
ret
test
mov
(bad)
mov
(bad)
mov
mov
mov
(bad)
cmp
mov
cli
and
xor
dec
adc
sub
dec
retf
jg
sbb
ja
push
sbb
inc
shl
mov
outs
leave
ins
sbb
push
or
hlt
push
retf
xchg
(bad)
mov
cld
mov
scas
out
stos
out
(bad)
xchg
cld
xchg
test
mov
scas
dec
xlat
cmps
out
out
xchg
iret
lahf
jmp
push
xchg
into
call
push
adc
bound
lods
mov
pop
xor
xor
ror
enter
cmp
pop
into
push
cli
(bad)
call
ds
add
ret
mov
mov
or
sub
jge
je
sub
jecxz
loopne
lock
loop
rcr
cli
mov
jmp
xchg
xlat
fwait
loope
jmp
call
scas
fadd
icebp
stos
iret
xchg
pop
jbe
push
pop
add
xchg
shr
jmp
(bad)
cld
xchg
mov
shl
mov
leave
mov
mov
test
cmp
ret
xor
mov
mov
movs
jmp
stc
mov
cli
mov
xchg
lds
stc
mov
in
repnz
loopne
aam
div
int
lds
aad
repnz
xchg
mov
mov
rcr
cmp
out
scas
fcom
int3
fnsave
in
xchg
into
mov
cmps
sbb
call
je
jo
outs
or
jne
data16
sbb
xchg
imul
add
push
and
icebp
nop
stc
nop
sbb
jl
jg
push
cmp
add
jo
pop
sub
or
inc
cmp
pop
xor
je
jbe
dec
xor
jl
outs
or
js
push
and
add
dec
xor
push
cmp
jl
jle
inc
cmp
je
add
lock
scas
js
dec
movnti
push
and
mov
or
sub
sub
push
jge
jo
push
push
inc
push
jne
pcmpgtb
clc
mov
mov
and
adc
je
xor
inc
push
je
jg
jl
ins
cmp
dec
inc
cmp
mov
movs
rcl
repnz
ins
cmp
pop
out
xchg
into
lods
adc
xor
bound
push
or
push
mov
shl
out
bswap
das
loopne
test
retf
sub
loop
mov
je
lea
shl
arpl
mov
in
or
adc
xor
jne
push
fisttp
loop
lds
aaa
int3
pop
mov
push
and
loop
sti
xor
sbb
das
cmp
push
movs
mov
inc
stos
mov
aad
ss
sub
call
inc
fisttp
inc
mov
jnp
dec
jmp
mov
xchg
dec
adc
push
push
pop
sbb
outs
ds
adc
jo
mov
push
(bad)
xchg
mov
dec
repz
add
cmp
inc
mov
sahf
push
popf
ins
fiadd
pusha
les
popf
mov
mov
aas
adc
cs
jne
ja
xor
out
and
and
dec
mov
mov
es
add
adc
adc
push
add
addr16
mov
pop
sbb
mov
mov
cmp
(bad)
add
es
addr16
daa
jbe
out
cmp
adc
sbb
pop
inc
cmps
out
add
sbb
mov
and
jle
in
aam
ret
dec
fisub
inc
movs
xchg
call
movs
mov
jns
outs
fst
imul
daa
cmp
and
jne
add
hlt
push
mov
jne
dec
fdivr
jmp
sub
push
mov
ins
test
mov
push
jmp
int3
or
mov
xor
cmp
cwde
mov
ins
(bad)
xchg
mov
mov
inc
xchg
inc
cmps
xchg
popf
jae
sar
jg
inc
ret
inc
xor
std
ins
or
int
scas
jle
js
mov
xor
sub
push
shr
pop
fisubr
pop
cmp
or
push
cli
popa
or
jmp
test
jnp
ins
fcomp
je
jle
xchg
xchg
jne
xchg
mov
jb
nop
(bad)
dec
jmp
mov
xchg
ds
adc
xor
inc
mov
xchg
cmps
cdq
jb
jle
push
mov
mov
jge
dec
mov
sub
or
outs
stos
mov
ja
dec
mov
fadd
mov
ins
mov
xchg
imul
jo
jl
outs
not
and
add
sbb
sub
sub
inc
mov
fild
xsaves
lock
lods
inc
test
sub
pop
xor
aas
dec
push
push
pop
popa
sub
pop
sbb
push
shl
and
pusha
mov
pop
mov
xor
and
or
dec
rol
xor
push
lds
jge
push
mov
and
or
jp
cmp
pop
mov
mov
push
retf
or
sbb
adc
mov
aas
imul
repz
les
loope
jmp
retf
test
call
push
shl
loop
xchg
cmc
pop
das
jns
push
into
and
adc
and
or
fild
push
xlat
dec
xchg
js
xor
inc
or
or
js
outs
sub
and
pop
xchg
push
adc
push
shr
pop
ret
inc
adc
jg
or
sub
or
push
and
imul
pop
push
sub
dec
xor
jo
sub
aaa
pusha
and
adc
jno
outs
cmp
push
sar
xchg
xlat
mov
hlt
mov
pcmpgtd
inc
add
add
dec
sbb
test
xchg
mov
fistp
int3
movs
rol
les
enter
out
(bad)
test
mov
in
out
out
aad
les
jecxz
sti
lods
loopne
mov
int3
nop
retf
mov
dec
and
aam
shl
scas
icebp
lods
out
(bad)
aas
cmp
in
mov
lods
sti
dec
iret
dec
ds
push
adc
jae
xchg
xchg
cdq
mov
inc
fisttp
pop
sbb
int
xchg
xchg
or
xor
inc
sub
(bad)
mov
pop
cmp
push
jmp
xchg
xchg
inc
out
add
push
cmp
push
mov
add
es
int3
xchg
mov
test
xchg
pop
fs
enter
inc
mul
fdivr
xchg
int
push
loope
mov
(bad)
rol
ret
mov
cmc
pop
cmp
mov
test
test
(bad)
ret
fadd
lods
clc
dec
int3
dec
pop
aas
daa
cmp
dec
xor
fs
mov
in
adc
add
push
or
mov
je
inc
sbb
pop
je
dec
adc
sbb
cmp
int3
js
jbe
xor
sub
xor
jno
mov
inc
fcomp
or
push
adc
jno
cmp
cmp
gs
out
scas
lods
mov
jmp
pop
adc
sbb
rcl
cmp
stc
mov
(bad)
rcl
dec
fisub
dec
jmp
popf
fwait
cdq
movs
cld
outs
(bad)
jno
and
add
xchg
loop
push
push
cmp
adc
push
or
and
pop
push
gs
dec
cmp
inc
or
pop
fbstp
gs
push
sbb
ret
mov
ficomp
enter
repz
mov
leave
stos
(bad)
ror
popf
push
jg
pop
lock
jmp
fdiv
aas
sub
jmp
out
push
popa
aaa
jbe
imul
je
ja
xor
inc
push
je
jg
arpl
jl
mov
adc
fisttp
mov
sti
outs
sub
loopne
add
xchg
shl
mov
mov
call
rol
ret
lods
icebp
cmps
int3
adc
gs
fisubr
mov
jge
dec
pop
push
add
push
imul
xchg
call
lahf
hlt
pushf
dec
lahf
(bad)
xchg
sar
clc
mov
mov
shr
xor
add
jg
dec
adc
jg
pop
or
xor
add
dec
sub
inc
das
dec
aas
imul
daa
arpl
addr16
xor
aam
cmc
add
push
xor
dec
(bad)
lods
cmc
fmul
cwde
int3
dec
call
add
neg
rcl
fcomp
cwde
fnstenv
clc
stos
(bad)
popf
ret
fisubr
ins
pop
push
or
pop
inc
add
div
in
mov
sub
jecxz
pop
ja
push
sbb
jle
pop
push
jnp
ins
add
daa
push
pop
push
pop
gs
gs
ds
scas
retf
lods
sti
mov
ret
lea
lock
xor
iret
xchg
mov
fimul
cmc
mov
loopne
jmp
cmps
mov
cmps
stc
fisub
rcr
pop
mov
mov
jo
arpl
push
or
popa
adc
addr16
cdq
repnz
fimul
retf
xchg
shr
test
mov
fcomp
mov
cmc
mov
cli
adc
adc
xchg
fimul
sbb
dec
and
pusha
and
dec
push
(bad)
mov
mov
adc
xor
xor
(bad)
(bad)
mov
aaa
pop
xor
and
ss
dec
aaa
outs
cmp
cs
pop
and
xor
push
pop
add
daa
inc
sub
pop
sbb
push
or
push
pop
push
or
dec
ds
jge
add
dec
das
js
pushw
dec
sub
das
push
adc
push
pop
add
push
andnps
cs
cmp
dec
push
push
or
jge
pusha
aas
inc
pop
pushf
ror
adc
pop
push
outs
and
jne
and
jbe
inc
push
jge
xchg
idiv
rol
test
lods
sbb
aad
in
mov
lea
xor
sahf
rcr
mov
cmp
pushf
loopne
rol
push
add
pop
mov
cmps
imul
mov
aam
and
and
dec
push
adc
in
fld
sub
xor
xchg
mov
mov
xor
(bad)
sbb
jp
rcr
jmp
push
mov
pop
push
or
pop
out
mov
push
and
mov
xchg
push
outs
shr
ds
sub
(bad)
pop
cmp
retf
jp
mov
or
mov
rcl
jmp
out
cmps
call
mov
dec
xchg
sbb
mov
sbb
cmp
mov
sub
add
addr16
enter
jbe
mov
xor
dec
cwde
aas
mov
sub
jno
sbb
jmp
sar
push
in
push
imul
clc
ss
jle
sub
movs
shr
aam
aam
cdq
pop
in
div
neg
xor
jno
xchg
jno
add
stc
jecxz
in
(bad)
shl
sub
sbb
ja
sub
imul
inc
cs
jbe
ret
xchg
cwde
sbb
cwde
push
xor
push
push
ret
add
xor
and
and
xchg
pop
push
cld
out
dec
loope
jg
xor
(bad)
imul
shr
leave
mov
daa
out
sbb
lds
retf
push
fs
gs
mov
sahf
inc
jge
adc
lock
stc
mov
xchg
push
not
out
cmps
mov
in
pop
sbb
pop
test
test
jge
mov
sub
mov
clc
(bad)
rcl
sub
cmp
and
je
mov
mov
sub
imul
and
pop
iret
pushf
adc
xor
xlat
jmp
fwait
jns
cmp
add
mov
cmp
cmp
in
pop
ficomp
and
pusha
mov
sbb
pushf
test
pop
mov
mov
test
push
jae
xlat
lock
mov
mov
bound
mov
push
movs
arpl
in
adc
frstor
mov
and
sti
lds
add
jg
mov
push
push
cld
popa
push
sbb
fdiv
inc
leave
daa
aaa
fdiv
out
xor
lods
inc
adc
pop
adc
in
mov
shr
xchg
adc
dec
shl
pusha
cmc
retf
arpl
test
cmp
push
ja
mov
xor
aad
(bad)
xor
fs
add
dec
push
repnz
push
xchg
jb
xchg
xor
pop
jmp
shl
sbb
mov
cmps
aaa
sbb
xchg
xchg
pop
mov
fild
mov
movs
repz
adc
mov
lea
add
popa
xlat
xor
dec
cmp
imul
add
jp
shl
xlat
popa
les
xchg
stos
dec
sbb
pop
vaddsd
sbb
mov
movhps
in
les
sub
stos
jo
push
push
and
sub
test
inc
sub
loope
movs
xchg
mov
mov
repnz
outs
cmp
jmp
aad
or
mov
out
mov
adc
cmp
xor
enter
xchg
cmp
cmp
lahf
inc
mov
mov
xlat
add
cmps
mov
xchg
dec
sub
mov
jecxz
xlat
add
sbb
jb
jo
into
add
or
or
addr16
jmp
in
push
push
addr16
jno
fsub
repnz
scas
dec
add
add
xor
clc
sbb
inc
shr
hlt
cld
add
ins
sub
and
cmp
xor
loop
call
(bad)
fisub
movs
stos
mov
add
sbb
je
pop
daa
aas
pushf
imul
push
stos
inc
cmps
mov
push
push
push
fidiv
outs
hlt
pop
das
sbb
add
mov
clc
lock
jp
mov
cld
lock
into
mov
xor
cld
sbb
mov
dec
fisttp
test
out
icebp
(bad)
fisttp
repz
(bad)
int
pop
enter
jecxz
mov
lods
xor
fmul
les
aam
jo
push
mov
push
sbb
push
out
sub
test
retf
daa
cmps
dec
jmp
test
enter
dec
shl
or
inc
mov
jmp
addr16
retf
xor
dec
clc
pop
ins
(bad)
jmp
mov
scas
fdiv
repnz
sbb
in
int3
retf
jne
pusha
xchg
xor
push
cwde
xor
(bad)
test
jb
fcomp
repz
(bad)
mov
iret
fwait
addr16
fs
push
dec
inc
nop
cmp
rcl
imul
lods
add
pop
inc
add
jg
mov
sbb
es
out
push
scas
push
push
clc
or
dec
mov
aas
dec
mov
fiadd
adc
imul
and
popa
xor
rcr
mov
scas
sub
cmps
(bad)
not
xor
pop
rcl
scas
mov
or
out
lods
jnp
mov
fs
or
(bad)
jmp
or
out
out
xchg
jp
arpl
mov
xchg
adc
mov
inc
ds
push
and
xor
mov
jnp
adc
imul
popa
pop
xchg
xlat
sub
dec
mov
retf
pop
call
scas
mov
repnz
pop
xchg
xor
test
inc
mov
addr16
test
push
fdivp
adc
mov
dec
inc
loopne
push
xchg
fistp
jae
sbb
add
or
pushf
test
int3
mov
rol
pop
(bad)
div
mov
add
inc
rol
dec
sub
jno
mov
cwde
or
retf
sbb
in
mov
sbb
sub
jne
fcmovne
xor
mov
stos
loope
cwde
xor
mov
jbe
dec
js
repnz
xor
movs
pop
cdq
cmp
sar
cmps
cmp
inc
cmp
or
mov
lods
push
loope
rol
add
cmp
sbb
cmp
jae
ret
lods
ds
(bad)
mov
cmp
mov
add
and
les
gs
or
inc
or
mov
inc
nop
pop
lea
sub
loope
cli
dec
jle
sbb
add
dec
(bad)
loope
pop
mov
inc
push
push
in
test
add
mov
sar
pop
aas
out
jl
sar
mov
cmp
push
int
jmp
or
xchg
adc
mov
xor
stos
and
push
xchg
div
cli
mov
inc
cmc
adc
call
inc
jbe
std
xchg
pop
inc
dec
cli
add
sbb
cmp
jmp
push
js
push
jle
pop
jecxz
cmp
call
ret
outs
out
dec
cmp
mov
xor
stos
push
push
popa
cld
inc
push
sahf
adc
cli
test
jle
dec
cmp
fidiv
push
mov
adc
and
ret
and
mov
and
jg
cwde
movs
inc
movq
stc
je
or
popf
ss
sub
pushw
push
daa
in
inc
xor
out
or
push
xchg
nop
jg
clc
sti
pop
fcomp
fmul
jmp
movs
mov
push
in
xchg
adc
and
data16
leave
mov
dec
sbb
stos
out
mov
jmp
cmp
mov
aam
sub
sub
loop
or
(bad)
push
fs
dec
scas
call
sub
sar
popa
cmp
loopne
loope
add
sbb
add
cmp
stc
movs
sub
push
xor
cmp
stos
inc
retf
jno
mov
stos
rcr
fs
dec
loop
mov
sub
mov
inc
ds
shr
dec
and
jns
pop
repz
lds
scas
or
and
ret
adc
dec
gs
push
popf
cmc
xchg
gs
loope
les
or
jmp
adc
gs
jne
mov
mov
mov
popa
lds
mov
in
sbb
loope
push
xor
shl
fiadd
imul
adc
xlat
in
mov
mov
sub
pop
mov
stos
mov
test
dec
shl
pop
popf
lahf
out
mov
mov
iret
(bad)
pop
pop
or
pop
push
cs
shr
in
push
imul
adc
pop
add
jns
imul
and
fadd
dec
or
stos
in
ffreep
jnp
data16
cmps
and
gs
jl
mov
pop
fidiv
ja
inc
outs
adc
nop
jl
push
pop
mov
stos
inc
jl
call
out
jecxz
sub
pop
cmc
retf
mov
and
ja
(bad)
push
xor
mov
test
adc
adc
ins
sub
test
inc
jb
ss
or
addr16
inc
mov
push
sub
repnz
jp
pop
jle
xchg
mov
ficom
clc
fsubr
sbb
scas
inc
mov
call
mov
(bad)
loop
xor
mov
aad
bound
in
ret
mov
bound
jno
or
pop
mov
mov
inc
mov
ret
or
jne
mov
jle
(bad)
add
dec
fisttp
xor
jp
cs
xchg
cmps
cmc
push
or
into
cdq
xchg
out
cld
mov
(bad)
xchg
dec
xor
adc
fsubr
push
lahf
xchg
dec
cmp
retf
loop
mov
pop
xor
pushf
cmp
mov
cmp
xchg
ins
stc
cmps
cmps
das
mov
sub
and
or
test
inc
push
cwde
outs
ror
xchg
fadd
inc
mov
pop
movs
adc
inc
jbe
mov
cmps
cmc
adc
mov
push
sbb
adc
out
fwait
push
jno
shr
bound
popf
ror
adc
add
pop
mov
jmp
mov
bound
retf
lods
mov
cmps
sti
scas
xor
inc
es
(bad)
int
(bad)
or
jle
jp
pop
mov
ja
and
mov
sbb
mov
mov
sbb
add
sub
repz
sub
sbb
outs
bound
mov
jle
xchg
scas
sbb
ffreep
or
mov
xor
imul
push
out
cmps
xchg
fiadd
inc
pop
pop
mov
inc
push
shl
or
mov
sub
(bad)
(bad)
xlat
fild
bound
fwait
movs
in
sti
daa
sbb
xchg
int
or
retf
(bad)
ins
jg
jmp
sbb
jmp
sub
test
mov
cmp
shl
xor
movs
mov
fdivr
mov
fs
adc
mov
cld
stos
pop
fiadd
push
jecxz
nop
jne
in
loope
xchg
dec
test
xor
in
sbb
jp
fiadd
aad
test
sub
xchg
xor
dec
enter
and
je
scas
push
push
cmp
ja
repnz
cmc
je
shr
movs
adc
jae
cmp
into
pop
je
jmp
gs
je
inc
paddusb
mov
mov
pop
nop
int3
and
mov
out
cmp
scas
or
call
pop
cmp
pop
adc
je
inc
jnp
call
ds
clc
push
or
sub
xor
rol
inc
ins
shl
iret
mov
(bad)
xchg
movs
popf
shl
pop
lods
inc
(bad)
test
movs
or
add
and
xchg
cmp
mov
pop
mov
repnz
fcom
push
aaa
sbb
jecxz
cmp
mov
or
imul
mov
sub
loope
dec
pop
pop
ss
dec
mov
cmc
jne
fwait
iret
les
loop
mov
dec
xchg
mov
jb
dec
js
nop
test
dec
inc
(bad)
mov
(bad)
bound
sbb
daa
mov
lahf
or
and
cmps
pop
sbb
ins
jae
fdivr
(bad)
jl
nop
mov
adc
or
or
dec
sti
jge
xor
pop
into
push
jno
pop
jle
cld
test
sbb
loope
iret
js
cmps
push
leave
xor
cmp
or
adc
out
jae
and
aas
in
add
inc
mov
xor
fimul
mov
loopne
iret
xor
sbb
pop
enter
add
adc
stos
ret
sub
out
mov
mov
cmps
adc
sub
mov
or
iret
xchg
enter
inc
ds
out
dec
(bad)
cli
mov
call
inc
les
mov
loope
xor
outs
xchg
imul
jo
scas
or
or
mov
push
push
psraw
nop
sbb
mov
(bad)
jecxz
popf
pop
js
or
aam
or
inc
fstp
inc
movs
das
mov
pop
jb
scas
sbb
and
lock
cs
jo
aaa
jl
push
dec
(bad)
fdivr
push
loop
shr
stos
cmp
xor
inc
mov
jge
xchg
jbe
fmul
mov
aas
sbb
idiv
push
ins
or
ss
xor
push
mov
jmp
or
in
push
cld
in
and
jno
outs
pop
xor
add
sub
adc
ss
lahf
jle
fdiv
adc
loope
lahf
das
loope
lea
and
repz
dec
addr16
sti
out
pop
fisubr
stc
shr
adc
jmp
rcr
cmp
pop
fdivr
pop
xor
lock
push
jne
cmp
sar
sbb
push
bswap
jg
jmp
std
jb
sbb
loop
int3
lods
aas
inc
call
and
cmp
into
xor
pushf
jne
push
loope
into
add
jns
jnp
or
inc
mov
shl
std
inc
jle
cs
in
xchg
add
fistp
popa
jne
add
xchg
jge
inc
enter
enter
dec
in
pushf
pushf
push
test
mov
pop
std
rol
jl
int
push
push
(bad)
sbb
jge
cmp
push
cwde
jmp
dec
lods
or
cmc
dec
jle
lock
mov
xchg
xchg
mov
sbb
ds
and
lds
sub
push
pop
call
jo
xor
emms
std
stos
dec
adc
xchg
mov
cmp
hlt
jb
cmp
(bad)
push
jg
jecxz
call
dec
ss
lds
or
inc
test
pop
lods
ret
call
xor
ins
ss
stc
bsr
mov
sbb
cmp
scas
stos
mov
not
std
(bad)
stos
mov
lds
fwait
inc
retf
jge
inc
loop
call
jl
xor
bswap
cwde
mov
mov
sti
inc
cdq
cmp
dec
test
jecxz
sbb
inc
dec
call
icebp
dec
imul
adc
pop
enter
mov
dec
stos
fsub
daa
pop
jle
cmp
(bad)
call
nop
imul
xor
add
clc
xor
pop
scas
outs
dec
jb
fistp
mov
aam
hlt
mov
hlt
test
bswap
movs
cmp
or
push
sbb
ja
adc
pushf
out
dec
or
dec
sar
mov
xchg
dec
adc
jne
das
loopne
div
add
sbb
or
(bad)
das
bswap
mov
inc
ins
sbb
sbb
adc
aam
ret
shr
cld
adc
pop
adc
popa
mov
nop
stc
jg
push
(bad)
add
mov
xor
aas
and
mov
scas
or
mov
dec
xchg
sub
sbb
and
test
and
(bad)
adc
fwait
cmp
dec
sub
xchg
rcr
push
sbb
or
mov
and
cmp
scas
pop
in
or
popa
add
shl
nop
adc
cmp
and
inc
pop
iret
sbb
add
sahf
inc
leave
fldenv
mov
imul
cmps
mov
lods
push
sbb
inc
sub
sub
enter
call
aam
push
std
jmp
das
imul
push
iret
sub
mov
ds
jge
imul
fadd
scas
push
push
sub
fs
xchg
sub
(bad)
idiv
sbb
popf
or
inc
jb
mov
jnp
xchg
call
sbb
cld
sbb
loope
add
inc
mov
push
xchg
mov
sbb
scas
mov
test
mov
jns
mov
push
pusha
movs
sub
sbb
adc
rcr
dec
aad
mov
test
jo
mov
jl
pop
adc
data16
ja
adc
sar
dec
sbb
cmp
lds
cmp
popf
adc
in
fldcw
adc
ss
iret
ins
cdq
mov
jbe
bnd
test
mov
std
sub
add
sub
leave
dec
push
xor
add
inc
loopne
shl
mov
jge
add
stos
rcr
mov
sub
xlat
call
push
jle
cld
push
bswap
retf
cmp
adc
or
mov
mov
jb
push
fmul
push
shl
gs
mov
xchg
or
mul
pop
dec
and
outs
cmp
adc
mov
xchg
xchg
movs
bound
jg
or
inc
lock
xchg
pop
jae
cmp
inc
or
in
inc
lock
and
jae
xchg
mov
aad
out
ins
push
test
add
fisubr
sub
mov
jge
sub
int3
add
aam
jnp
ret
dec
sbb
jge
and
adc
xchg
imul
xchg
dec
icebp
in
mov
xchg
cmp
mov
in
pop
jecxz
shl
adc
ficomp
jp
mov
popa
xor
cmps
xor
fldenv
pop
dec
or
fwait
xor
daa
jmp
jle
aas
icebp
sub
aam
aas
bound
repnz
sti
mov
mov
cmp
mov
mov
mov
mov
sub
in
mov
stc
pop
sti
cmp
mov
pop
sub
stos
test
ret
in
mov
fmul
jns
fmul
inc
mov
loop
inc
fnstenv
jbe
mov
pop
es
ins
mov
test
mov
pop
cmp
les
test
cmps
cmps
mov
cmp
mov
xchg
add
sti
push
fcomp
pushf
pusha
mov
ds
inc
sub
movs
imul
stc
push
lods
xlat
scas
(bad)
pushf
fcom
cs
popf
dec
cmps
fistp
mov
fwait
sub
test
push
mov
inc
push
push
mov
mov
or
iret
mov
int
xchg
cmps
pop
outs
rcl
mov
xchg
add
pop
stc
pop
cli
add
sbb
loope
loop
sub
mov
jmp
add
arpl
sbb
sbb
inc
int
xchg
in
loop
ds
adc
rcl
ins
int3
and
dec
pop
xchg
repnz
xor
stc
xor
jmp
jle
jmp
int3
and
push
scas
and
dec
and
mov
enter
xchg
sbb
mov
cmp
hlt
push
addr16
adc
pop
dec
movs
aaa
mov
pop
xor
xchg
push
add
push
jnp
inc
out
call
aaa
push
push
jns
mov
jle
jbe
mov
inc
or
int3
pop
xor
outs
aas
push
pop
push
scas
push
inc
xor
imul
in
retf
ins
or
rol
les
and
mov
xchg
mov
mov
mov
xchg
xor
pop
adc
addr16
sub
dec
sbb
sbb
add
jmp
push
adc
mov
cmps
loop
loop
(bad)
lods
(bad)
cwde
lock
xchg
in
out
enter
mov
call
and
shr
pop
(bad)
fstp
jmp
mov
inc
adc
push
sbb
mov
test
xchg
test
dec
or
out
mov
iret
fwait
cmps
out
mov
stos
xrelease
ret
mov
ret
(bad)
into
add
mov
ja
pop
in
mov
jle
push
and
push
dec
scas
xchg
out
adc
shl
mov
mov
push
aaa
dec
lods
(bad)
mov
sbb
ins
loope
fwait
std
jle
imul
fst
sbb
ds
fimul
ror
inc
ret
dec
loope
mov
cli
jge
push
fbstp
iret
xchg
fimul
gs
or
jo
loop
mov
hlt
lods
bound
adc
imul
leave
jo
retf
mov
push
inc
sub
push
pop
pop
aaa
inc
out
dec
or
push
pop
mov
mov
aaa
and
and
hlt
mov
jne
clc
adc
gs
push
sbb
mov
xchg
rol
or
dec
xor
fimul
cs
pop
cs
cmp
pusha
loop
test
rcl
adc
call
xchg
iret
out
sahf
fbld
xchg
call
sbb
inc
in
mov
xchg
or
adc
popf
int
shl
mov
mov
mov
mov
pop
xor
in
cmc
push
into
xchg
retf
ror
xchg
les
mov
pop
and
js
pushf
mov
pop
imul
and
and
xchg
inc
jge
js
sub
xchg
std
fwait
cmps
fbld
fisubr
mov
loop
cmp
jg
test
mov
lods
ror
std
mov
daa
jb
sbb
xchg
retf
sub
ss
push
and
sub
mov
es
inc
xor
(bad)
mov
inc
push
inc
sub
outs
loop
jno
inc
loope
popa
rcr
jg
jg
imul
adc
leave
mov
sub
imul
mov
inc
or
jle
js
and
add
xor
dec
pop
adc
mov
jnp
(bad)
lock
jnp
push
es
xor
jnp
push
sbb
and
or
in
out
mov
jno
dec
push
cmp
mov
cwde
call
add
test
jbe
cmp
(bad)
retf
or
xchg
lds
push
adc
call
dec
sbb
adc
mov
xchg
pusha
es
cmp
xor
cmp
jns
stos
mov
test
adc
push
inc
or
scas
dec
push
pop
cmp
(bad)
out
fiadd
pusha
push
out
xor
add
push
ret
xchg
ror
jge
xor
pop
loope
fst
cmc
mov
movs
ret
jp
add
xor
and
or
pop
sub
sub
lods
fist
retf
leave
lahf
(bad)
mov
fs
int3
les
cmps
std
mov
loop
rcr
add
jmp
mov
mov
mov
js
ficomp
pop
xor
pop
xor
dec
lds
inc
add
stos
out
xchg
mov
ja
cmp
ja
xchg
mov
sahf
(bad)
lahf
ins
ss
pop
pop
jp
xor
leave
sahf
out
scas
push
sbb
add
nop
repz
jo
and
jg
into
popf
test
scas
dec
mov
jge
arpl
pop
in
movs
into
cmps
iret
push
imul
mov
mov
adc
aas
and
add
push
and
cmp
aas
jl
adc
inc
sub
call
andnps
push
push
adc
(bad)
push
sub
ins
or
(bad)
out
retf
xchg
jb
jmp
cld
xchg
(bad)
fwait
mov
fwait
push
stos
movs
lds
fdivr
arpl
pop
sbb
and
adc
dec
(bad)
mov
test
mov
cmovl
cmps
clc
mov
popf
mov
mov
out
scas
ror
mov
sub
lock
into
popf
sar
mov
xchg
loop
add
mov
xchg
call
dec
cmp
out
icebp
mov
outs
adc
push
rcr
mov
xchg
xchg
jo
push
add
xor
jo
test
(bad)
pushf
iret
mov
mov
call
jno
in
jl
imul
cmp
adc
jl
add
inc
cmp
push
or
les
jne
(bad)
sub
push
sbb
movs
fidiv
add
pop
sub
xchg
ret
fild
mov
std
mov
nop
iret
scas
fst
add
xlat
cs
cmp
lock
mov
or
pop
push
gs
and
xor
xor
inc
xor
fiadd
and
daa
imul
std
xchg
into
stos
jne
lds
scas
sar
imul
xor
jecxz
xchg
and
iret
xor
sahf
out
sub
ret
xchg
xchg
xchg
iret
mov
mov
inc
mov
dec
add
cmp
xor
jo
jmp
xor
call
test
mov
leave
ja
pop
or
test
pusha
push
cmp
add
xor
fst
pop
jne
jge
ss
sbb
jmp
in
fstp
pop
pop
xor
add
sar
rcl
ins
cmp
pop
cmc
push
add
es
pop
daa
das
jbe
and
push
and
daa
outs
pop
jb
inc
push
push
push
dec
push
push
xchg
mov
xchg
test
cwde
(bad)
mov
mov
lods
cld
jb
inc
repnz
mov
imul
mov
nop
fstp
pcmpgtd
inc
(bad)
xor
pop
or
sub
sbb
sub
fwait
loope
fadd
and
pop
xor
cmps
in
ror
pop
mov
mov
and
jmp
xor
adc
data16
jne
gs
loope
fistp
xchg
nop
ret
xchg
rcl
and
ror
or
js
push
adc
dec
xor
or
rol
aas
inc
out
jle
jg
dec
add
mov
jb
dec
or
outs
pop
push
mov
arpl
jnp
dec
cmp
test
retf
xchg
inc
je
dec
sbb
push
inc
xor
push
and
(bad)
cmp
sub
xchg
rcr
mov
dec
and
mov
ja
fldenv
jno
jl
pop
or
push
sbb
pop
das
cli
and
sub
dec
cmp
ror
les
jecxz
stc
call
lock
cli
push
(bad)
cld
test
retw
xor
inc
xchg
cdq
enter
sbb
add
stos
jne
jg
inc
shl
call
loope
xor
pop
sub
lods
int3
out
mov
jnp
dec
loop
retf
sbb
or
movs
and
xor
ret
out
xchg
into
push
movs
jmp
cmp
repnz
fld
dec
sbb
push
or
imul
xchg
fisttp
sub
outs
cmp
ins
xor
push
aam
cmps
jecxz
lock
sbb
mov
(bad)
test
xchg
fldcw
sbb
inc
pop
push
jb
add
push
add
outs
add
int
fsub
cmp
sub
push
sub
cmp
xor
fisub
jl
out
(bad)
xchg
out
(bad)
xor
and
inc
adc
jg
jg
xor
pop
sbb
cmp
push
cmp
pop
enter
movs
div
dec
xchg
jb
movs
aad
lods
shr
xor
cmc
xchg
retf
bound
push
xchg
inc
fisubr
clc
xchg
shr
xlat
mov
xchg
out
imul
xchg
fmul
push
addr16
aam
cmps
mov
push
and
outs
sbb
call
sub
xlat
xchg
sbb
minps
xor
je
inc
or
xor
mov
xchg
xchg
mov
sahf
mov
test
dec
mov
mov
neg
dec
pop
inc
(bad)
jo
add
ja
pop
sbb
sub
fild
repz
pusha
out
aam
neg
jno
cmps
stos
test
cld
movs
shr
in
ins
sbb
icebp
test
mov
inc
ds
xor
inc
jmp
js
fld
push
add
pop
push
inc
in
sub
push
mov
jnp
push
and
and
hlt
sbb
ja
aas
push
arpl
test
movs
nop
jmp
scas
call
inc
loope
inc
push
arpl
imul
mov
in
fistp
aad
xchg
xchg
ins
adc
bound
cs
xor
inc
adc
lahf
in
sbb
into
xchg
cmps
fadd
push
adc
jecxz
mov
push
movnti
sbb
sbb
(bad)
stos
xchg
and
outs
loopne
inc
adc
adc
jmp
gs
xchg
test
scas
retf
and
xor
dec
lods
das
and
push
test
inc
xor
pcmpeqw
mov
into
add
or
and
pop
lock
scas
pop
sbb
add
movs
dec
push
and
xor
sub
mov
mov
pushf
mov
test
cdq
in
cmc
cdq
dec
or
add
lock
lods
mov
imul
dec
mov
or
mov
inc
sbb
push
(bad)
add
dec
mov
mov
test
fs
jbe
(bad)
push
or
shl
mov
cmps
ret
cmps
shl
adc
dec
into
cmps
lds
test
lods
mov
(bad)
outs
dec
dec
sbb
cmp
push
jae
inc
sub
daa
dec
paddsb
jnp
out
sbb
imul
lods
enter
jp
pop
sub
add
add
inc
stc
cmp
or
daa
ja
fs
xor
ret
cmp
inc
cmp
jecxz
mov
ins
and
push
sbb
push
jae
add
jbe
cmp
sub
les
(bad)
retf
call
push
(bad)
xchg
jnp
data16
xchg
repz
xchg
cmp
inc
mov
push
sbb
xor
je
add
xchg
imul
sbb
pusha
stos
(bad)
mov
mov
xchg
in
das
mov
or
enter
dec
sub
pop
sbb
sbb
int
add
dec
cmp
adc
mov
cwde
fs
pop
sbb
mov
(bad)
mov
(bad)
xchg
dec
sbb
mov
sub
scas
rol
mov
xor
jns
fxch
mov
mov
loop
pop
clc
mov
or
xchg
jle
and
sbb
add
je
xor
test
fadd
lock
call
inc
out
jecxz
imul
and
pop
push
add
push
fild
mov
mov
adc
sbb
lods
call
test
mov
inc
sub
xlat
fwait
loopne
mov
mov
test
ds
dec
or
hlt
or
adc
jl
jnp
es
mov
push
sbb
retf
(bad)
hlt
mov
loope
xchg
(bad)
xchg
mov
push
ds
lea
jnp
pusha
cmp
dec
lock
outs
mov
push
shl
dec
repnz
mov
jecxz
mov
jbe
push
and
mov
stos
adc
and
fmul
inc
or
out
cwde
rcr
xor
fild
and
jnp
mov
sbb
mov
mov
xchg
(bad)
addr16
enter
pop
cwde
lds
mov
scas
addr16
xchg
shl
pop
pop
push
ds
jecxz
mov
xchg
clc
nop
repnz
jnp
sub
add
ins
imul
ret
ret
mov
lods
shl
or
cmp
push
call
sbb
sbb
sbb
mul
lock
cld
pop
es
push
push
bound
popa
cmp
int
jmp
(bad)
cmp
cmps
pop
cs
out
cmc
call
dec
sbb
push
repnz
xchg
call
adc
test
cmps
hlt
cwde
dec
push
imul
adc
(bad)
mov
clc
nop
arpl
push
adc
inc
adc
into
sbb
cmp
or
jno
shr
fldcw
xor
js
leave
inc
fmul
add
push
cld
imul
mov
or
fistp
jns
es
jns
leave
inc
aad
ficom
test
ss
mov
test
popf
jb
into
movs
int3
xchg
mov
sahf
xchg
(bad)
xlat
xor
mov
jb
push
and
mov
pop
cmp
ret
xor
fdivr
mov
jmp
in
pop
shl
pop
xor
mov
mov
int
mov
sbb
loopne
nop
xlat
fwait
loopne
fidiv
inc
add
xchg
xchg
into
popf
cmp
pop
pop
das
js
push
sbb
ds
xor
pop
ds
loope
fabs
mov
mov
lahf
cmps
xlat
and
enter
mov
arpl
jb
neg
push
lds
icebp
cwde
pushf
mov
pop
pop
sbb
pusha
jmp
inc
add
and
ret
ins
sbb
stos
fimul
mov
push
ret
fistp
fsubr
pop
div
add
mov
push
in
adc
jmp
sbb
fist
add
clc
add
mov
ds
test
sti
loope
lock
push
sub
and
std
cwde
fisttp
or
mov
popa
pop
sub
idiv
jge
adc
int3
or
pop
push
adc
js
push
pop
(bad)
xchg
rcr
or
call
(bad)
mov
or
mov
test
int
xor
mov
fadd
jns
dec
(bad)
mov
xor
mov
sti
mov
mov
xchg
rol
push
mov
shr
sbb
pop
idiv
movs
enter
nop
iret
cwde
stos
mov
lahf
mov
call
shl
ret
mov
and
mov
jmp
ret
outs
or
ror
in
lea
xchg
out
shl
rcr
and
addr16
cli
and
mov
lds
or
xchg
(bad)
pusha
les
mov
cmp
mov
pop
lock
retf
jp
jl
stc
cmp
scas
mov
or
dec
out
fmul
push
sbb
xor
rcr
stos
mov
pushf
call
rol
addr16
clc
pop
loopne
add
fisttp
cmps
das
jl
inc
sbb
add
pop
sbb
inc
and
and
jmp
adc
pop
stos
fwait
into
mov
push
push
sbb
and
nop
cmc
stos
test
rcr
cmps
cmc
xchg
mov
loop
int
inc
mov
retf
xor
jge
outs
cmp
push
add
mov
imul
out
push
xor
enter
ret
xchg
fstp
push
pmulhw
pusha
xor
mov
sub
xchg
mov
ins
add
inc
adc
cmp
cwde
mov
xchg
(bad)
stc
mov
popf
retf
ja
pop
sub
sbb
cmp
es
mov
shl
push
cs
out
pop
or
xor
fstp
mov
cld
(bad)
movs
xchg
in
mov
js
and
imul
xor
pop
or
jge
ins
or
dec
add
push
mov
sbb
mov
pop
dec
mov
push
test
cdq
xlat
sar
cmp
mov
add
jecxz
sti
mov
popf
int
mov
stc
adc
dec
push
pop
push
dec
aas
outs
cld
pushf
fnstsw
cli
data16
fbstp
js
test
cmps
jmp
test
ror
sbb
sar
jp
sub
cmp
repz
js
mov
scas
xlat
ja
pop
lock
loope
imul
push
fdiv
mulss
ret
outs
mov
dec
push
sub
stos
stc
mov
(bad)
push
adc
shl
xor
jg
pop
xchg
das
imul
sub
lea
push
cmova
mov
cwde
aam
xlat
mov
mov
sbb
xor
xor
dec
(bad)
fmul
adc
xlat
arpl
mul
js
push
and
fimul
mov
int3
xor
shl
push
jecxz
mov
or
es
mov
xchg
ror
cmp
xor
aas
mov
add
sbb
mov
ins
mov
xor
cmc
popf
les
cwde
popa
cmp
jp
pop
sbb
pusha
ss
adc
jb
push
mov
mov
pusha
fdivr
xor
xchg
in
mov
and
jp
jne
fwait
and
inc
push
dec
loope
in
mov
add
and
and
sti
daa
xor
or
js
sub
and
xor
cmp
add
cdq
in
test
imul
fwait
in
cmc
stos
ret
test
imul
int
bound
add
adc
cdq
int
into
xchg
adc
loopne
and
repz
push
cmp
pushf
fsub
rol
inc
add
pushf
inc
sti
mov
sbb
mov
push
out
cmc
(bad)
mov
push
lods
shl
rol
fsub
or
imul
cdq
ret
add
outs
fs
repz
lods
std
jo
dec
xchg
test
mov
pop
sbb
push
sub
jnp
das
imul
icebp
lds
jl
mov
cmps
dec
std
adc
ja
fdiv
fisubr
ja
push
aaa
jg
mov
inc
and
loopne
shl
inc
in
mov
mov
inc
pop
sub
imul
cmp
outs
cs
sub
or
jbe
xor
das
ja
pusha
imul
cmp
nop
dec
or
push
cmp
add
lock
mov
mov
mov
pop
aaa
inc
push
je
test
loope
fsubr
dec
mov
pop
mov
ss
shr
lahf
and
enter
and
mov
je
div
cwde
mov
stos
cld
cld
mov
imul
adc
call
jmp
enter
(bad)
fidivr
ins
mov
movs
in
stos
hlt
mov
out
ret
mov
mov
cmp
loope
cld
lods
pop
sub
mov
(bad)
jne
mov
adc
mov
ror
ins
out
test
(bad)
das
jnp
dec
mov
inc
xlat
in
mov
cmc
ja
xchg
int3
das
(bad)
pop
push
fldcw
cld
xchg
std
cwde
movs
in
mov
popf
mov
das
dec
or
addr16
and
jns
dec
pop
inc
and
mov
mov
mov
mov
fimul
push
in
cmp
leave
cmp
nop
test
mov
call
cmps
iret
test
and
mov
mov
cmp
push
adc
dec
push
fadd
dec
lds
push
add
mov
push
push
adc
adc
cmc
mov
adc
or
in
(bad)
inc
adc
pop
xor
mov
xchg
call
add
aaa
cdq
lahf
jmp
mov
mov
(bad)
mov
cmp
push
ds
xor
mov
adc
xlat
xchg
xor
push
add
stos
fisttp
sbb
add
aad
sub
sbb
fs
xchg
out
hlt
pusha
adc
add
jae
mov
mov
(bad)
icebp
movs
pop
movs
rcr
aad
or
xchg
rol
mov
or
mov
mov
cdq
retf
out
sub
jl
out
cs
pop
dec
shr
enter
mov
mov
rol
mov
test
retf
mov
xchg
cmps
stc
sub
push
add
add
dec
movs
div
mul
jns
xor
push
and
inc
push
test
xchg
add
cmps
loop
mov
daa
dec
cmp
mov
enter
mov
ucomiss
popa
cmp
and
inc
adc
lods
xlat
lea
push
inc
adc
jmp
aam
out
icebp
lods
jmp
push
imul
sbb
and
loope
jo
addr16
inc
(bad)
iret
mov
(bad)
test
es
xchg
(bad)
popf
les
adc
sub
cmp
lds
addr16
data16
loop
inc
cwde
out
cmps
int3
popa
xor
jbe
test
cmps
call
lds
(bad)
mov
in
add
cli
cmp
mov
or
push
jb
push
scas
sar
movs
rcr
mov
xor
mov
mov
mov
jns
in
movs
inc
jbe
popa
or
add
call
mov
es
sub
rol
mov
mov
ds
arpl
cli
sbb
mov
and
mov
(bad)
xchg
lds
mov
mov
(bad)
add
(bad)
bnd
jp
dec
frndint
mov
iret
lahf
int3
mov
loopne
gs
jmp
enter
mov
xchg
sbb
jae
xchg
xor
mov
lods
mov
jecxz
cwde
in
mov
cdq
ret
add
movs
(bad)
mov
and
pop
mov
ss
mov
(bad)
pcmpeqw
sbb
mov
sbb
jle
fistp
aaa
pusha
repz
(bad)
jo
inc
xchg
ss
or
mov
mov
scas
clc
adc
and
pop
sub
mov
movs
lods
stc
(bad)
test
jne
inc
jnp
pop
aad
enter
or
in
pop
xchg
fdivr
mov
je
jg
inc
pop
adc
and
mov
pop
add
out
out
adc
mov
nop
aam
int3
xchg
sub
dec
or
popa
rol
mov
adc
retf
enter
ror
xchg
pop
adc
nop
add
sbb
dec
cmp
mov
out
mov
popa
and
pcmpeqw
cmp
pop
add
cmps
rcr
xchg
mov
aad
test
jmp
aam
jmp
call
popf
cmp
cli
icebp
test
mov
sub
adc
jne
dec
(bad)
scas
cld
mov
int3
fwait
xor
sbb
scas
int3
xchg
ror
mov
rcl
popa
imul
jns
cmc
out
xchg
into
xchg
(bad)
scas
int3
xchg
shl
outs
daa
or
mov
mov
pusha
or
and
push
sub
nop
icebp
movs
enter
push
add
xor
std
mov
mov
mov
out
and
cwde
retf
(bad)
fistp
lods
lds
pusha
sbb
cmps
into
lods
movs
lock
and
scas
add
(bad)
fsubr
fld
ror
scas
mul
jnp
fdivr
(bad)
test
mov
mov
adc
jbe
xchg
stos
jmp
cli
cdq
lock
sahf
loopne
fistp
leave
or
and
push
adc
jnp
jo
pop
add
mov
and
mov
nop
repz
inc
cmp
and
cmp
xchg
sahf
(bad)
xchg
ror
mov
adc
jl
mov
fnstcw
je
test
mov
mov
cmp
not
lds
popa
jae
dec
sbb
pop
push
sbb
pop
push
retf
lock
mov
cs
pushf
jmp
push
and
clc
stos
out
(bad)
retf
fwait
sbb
(bad)
cld
mov
test
ja
xor
cmp
pop
or
mov
or
hlt
mov
(bad)
clc
scas
jge
push
add
lahf
loope
rcr
xor
xchg
retf
xchg
aad
loop
rol
or
mov
mov
or
or
pop
inc
ins
or
add
push
push
stos
ds
push
or
imul
jmp
mov
in
les
aas
dec
sbb
xor
icebp
cdq
cli
xchg
(bad)
fdiv
xor
sbb
inc
das
adc
inc
jmp
jecxz
into
jp
sub
jp
ins
add
fsubr
jecxz
sub
aad
cmc
push
test
mov
xchg
jbe
dec
pushf
in
repz
ret
dec
sbb
and
icebp
stos
mov
mov
popa
xor
lock
pop
sub
add
sbb
inc
dec
sub
pop
or
jp
xchg
xchg
fcmove
mov
cmps
mov
movs
in
fs
inc
clc
lahf
not
leave
ins
xor
and
push
mov
xchg
stos
jmp
sti
cwde
mov
mov
push
lods
rcl
inc
push
and
pop
xchg
sbb
push
cmp
push
sbb
and
mov
fidiv
movs
sbb
or
outs
mov
sti
pop
mov
dec
or
inc
mov
ins
sub
xor
inc
bound
xor
cmp
or
sub
xchg
in
mov
push
das
jnp
xchg
loopne
fwait
ret
push
adc
loopne
cld
stos
mov
push
or
das
dec
adc
sahf
cmps
icebp
mov
(bad)
sub
add
in
les
inc
and
jne
mov
dec
or
jmp
fwait
int3
dec
push
cli
stos
ror
out
mov
cmp
jmp
fimul
push
adc
neg
cmp
mov
into
mov
push
cmp
inc
cmp
(bad)
in
xchg
ins
pop
sub
subps
and
stc
fsubr
sub
jo
pop
and
adc
jle
popa
pop
das
sub
jb
jle
fld
or
jle
push
or
test
hlt
test
fstp
rol
gs
data16
cld
xchg
call
iret
fwait
ret
nop
aam
fadd
push
daa
jo
push
mov
fs
repnz
inc
add
fwait
enter
jmp
sub
mov
test
cmps
les
cmp
xchg
les
sbb
data16
jnp
aam
hlt
in
mov
cmps
repnz
push
and
push
add
pop
ins
cmp
cdq
cmp
jle
sbb
sub
retf
mov
sti
mov
and
fimul
jge
xor
and
sar
mov
or
jmp
or
jns
pop
loope
dec
push
jg
imul
ss
dec
cli
cmps
div
loope
mov
into
mov
cs
and
movs
rcl
test
mov
rol
in
mov
shr
jno
dec
in
ins
ds
inc
into
adc
ds
adc
or
inc
adc
popa
push
pop
sbb
outs
sub
(bad)
(bad)
sti
lods
movs
xor
cmps
out
pop
sub
es
sub
xchg
fstp
nop
test
scas
stc
jae
cmps
lock
(bad)
pop
push
sub
and
jl
aam
in
push
(bad)
lods
jmp
and
pop
add
adc
pop
call
aad
jecxz
(bad)
aad
ret
sahf
aam
div
movs
repnz
fdiv
jle
das
cmp
inc
out
fstp
xchg
in
enter
mov
push
in
retf
cmp
sbb
es
(bad)
sahf
jmp
or
ins
jecxz
loopne
ret
push
test
add
pop
add
imul
sub
lahf
(bad)
ins
aas
outs
sub
int3
data16
mov
xchg
jmp
movs
mov
mov
mov
loop
(bad)
mov
adc
bound
pusha
aaa
aaa
sub
dec
or
jne
jnp
adc
inc
ss
inc
xor
xchg
data16
xor
xor
scas
sub
and
es
dec
mov
mov
jb
adc
xchg
mov
popf
(bad)
push
or
dec
sbb
popf
aad
int
xor
pusha
sbb
popa
add
pop
aaa
push
cmp
push
je
arpl
cdq
into
xchg
shl
fnstenv
ds
add
add
and
mov
rcl
xor
popf
leave
rcl
ret
add
pop
or
cmp
push
xor
sahf
not
push
push
push
dec
sbb
in
les
js
xor
xchg
scas
xlat
lea
jge
ja
dec
pop
hlt
test
call
loope
aad
hlt
out
adc
inc
add
pop
cmp
aaa
push
add
cmp
dec
sbb
pop
loop
rcl
and
bound
fiadd
in
cmp
test
retf
cwde
iret
mov
cwde
iret
nop
shr
inc
cmp
ja
inc
sub
jp
mov
lahf
fistp
rcl
dec
jecxz
ret
and
sbb
xchg
(bad)
xchg
or
pop
out
push
dec
push
dec
or
pop
add
gs
repnz
leave
imul
stos
rcl
popf
shl
inc
pop
sbb
cmp
ins
jne
jp
das
ja
pusha
or
mov
es
add
shr
stos
fnsave
jno
adc
xor
pop
call
sbb
push
repnz
out
outs
packuswb
add
xor
inc
push
add
inc
adc
test
cmps
test
add
pusha
or
mov
loop
(bad)
xchg
retf
and
jae
xchg
les
jbe
mov
xor
bound
or
mov
outs
sbb
pop
add
popf
out
rol
push
pop
fild
jge
ja
arpl
dec
xor
ins
pop
pop
sub
loopne
fstp
pop
out
push
jge
lock
cdq
rol
cdq
frstor
lods
movs
rol
popa
and
ds
sbb
in
inc
out
cwde
sar
dec
sbb
movs
loopne
ja
push
stos
lods
fmul
fiadd
sub
push
sub
aad
int
jne
ss
adc
add
inc
cmp
pop
pop
cmp
stos
cdq
xchg
mov
dec
or
(bad)
std
stos
inc
adc
push
push
jp
popf
(bad)
jmp
add
cld
out
xchg
loop
dec
adc
invd
jl
(bad)
jle
pop
rol
sub
js
jo
xchg
fistp
arpl
inc
xor
pop
add
fld
pusha
test
(bad)
movs
lods
clc
loope
out
dec
rcl
rol
and
push
ja
(bad)
sar
stc
mov
xor
mov
or
loopne
add
jge
lods
fld
xchg
ret
pop
shl
and
repnz
out
jp
mov
data16
xor
dec
pop
repnz
and
pop
ins
sbb
retf
inc
sbb
movs
mov
(bad)
aam
and
pop
add
dec
and
or
(bad)
mov
or
push
pop
push
dec
retf
dec
pop
bound
and
enter
adc
jno
imul
addr16
fwait
int3
punpckhwd
cmp
adc
pop
cmp
mov
cmc
or
jne
(bad)
retf
shl
fs
jmp
mov
xor
jnp
xchg
(bad)
arpl
pop
mov
or
jb
pushf
sbb
jo
cld
xchg
(bad)
popf
mov
adc
in
popa
out
mov
push
dec
das
cmp
or
test
xor
xchg
mov
mov
pop
or
hlt
mov
inc
ss
ret
lahf
jmp
retf
pop
je
dec
leave
inc
xor
fldenv
or
fimul
sub
(bad)
pop
pusha
sub
mov
je
mov
jecxz
ret
add
mov
cld
movs
div
rol
mov
dec
sar
out
mov
mov
push
push
pop
push
and
pop
or
in
lods
nop
popf
out
inc
xchg
call
sbb
xchg
lds
adc
and
aaa
jbe
inc
std
xor
mov
scas
into
mov
dec
ds
xor
xchg
test
push
and
jne
jge
jmp
cmovle
dec
ss
mov
test
pop
femms
vmread
mov
inc
cmp
pop
or
mov
leave
out
out
mov
repnz
mov
mov
sbb
jnp
pop
das
outs
pop
fisub
add
pop
int
cmp
shl
enter
mov
nop
(bad)
push
adc
hlt
sahf
not
pop
pop
test
(bad)
retf
aas
jnp
data16
(bad)
sub
mov
cmp
pop
rol
push
cmps
mov
and
movs
in
cld
mov
loopne
loop
cwde
int3
cmp
jo
data16
mov
scas
stc
sub
xlat
lods
test
pop
fs
ins
ja
jge
adc
outs
sbb
pop
jae
div
mov
mov
dec
sbb
mov
add
scas
stc
xor
pop
ins
mov
ja
xor
mov
or
cmps
lock
add
icebp
cdq
cli
aaa
arpl
pop
das
data16
push
loop
in
mov
and
dec
xor
sbb
or
pop
test
sub
test
int3
and
pop
sub
imul
shl
iret
in
mov
mov
mov
push
jbe
push
retf
and
jnp
lock
sti
cs
in
popf
aam
mov
xor
pop
or
arpl
sbb
mov
dec
push
pop
loop
fstp
dec
sbb
jmp
jnp
retf
mov
test
aam
(bad)
mov
and
jnp
inc
jbe
bound
push
pop
shl
ins
sub
(bad)
hlt
scas
cmp
pop
rol
jnp
jno
or
push
push
scas
leave
mov
jne
push
jg
jg
xor
push
add
ja
mov
movs
iret
mov
mov
mov
fisttp
fimul
cmps
cmp
xor
repnz
push
xor
(bad)
in
sahf
retf
addr16
(bad)
test
cmp
cwde
or
inc
or
and
jnp
jae
jns
mov
les
adc
ror
ins
rol
jmp
push
lods
(bad)
mov
popa
add
mov
hlt
mov
mov
mov
in
cli
dec
xor
aam
fadd
mov
ss
cmps
aad
xor
cwde
iret
xchg
aad
loope
rcl
push
xor
enter
cmp
sub
xchg
fwait
icebp
cmps
loop
sub
cmp
in
pop
xor
sar
jnp
push
fisubr
push
cmp
push
repz
push
add
in
mov
lock
clc
mov
mov
(bad)
xchg
loop
jbe
sbb
xchg
enter
rcl
cli
push
and
jne
bound
xor
inc
add
lods
mul
iret
jb
mov
in
inc
add
adc
xor
mov
icebp
stos
div
pop
cmp
jne
cs
adc
add
sub
fldcw
cmp
xor
bound
pop
push
add
and
dec
sbb
leave
sub
xor
sub
bound
push
sbb
imul
and
dec
ins
leave
jg
pop
xor
mov
in
cli
scas
outs
(bad)
mov
xchg
and
xor
xchg
(bad)
mov
outs
add
push
inc
fsubr
adc
or
pop
das
js
fwait
out
mov
jbe
inc
sub
or
jne
dec
aaa
outs
cmp
mov
ret
lahf
and
adc
popf
jl
inc
add
or
fcomp
sub
dec
or
dec
xor
and
sub
mov
mov
jne
bound
jp
xlat
movs
repnz
into
mov
xor
pop
cmp
add
lods
(bad)
mov
mov
and
pushf
jbe
push
out
sahf
not
sub
enter
xor
shl
cmp
mov
dec
add
enter
out
fwait
shl
outs
sub
mov
sub
jne
dec
mov
addr16
in
lds
pop
push
outs
sbb
or
addr16
inc
adc
das
pop
or
ror
mov
push
sbb
jecxz
test
mov
fisttp
and
sbb
das
loopne
rcl
stos
pop
xor
int
cmc
mov
andnps
and
xor
mov
mov
push
pop
sbb
sbb
xor
retf
je
retf
xchg
scas
jg
jne
imul
jbe
inc
sbb
je
lods
cli
mov
ja
pusha
sbb
gs
les
dec
push
mov
cmp
call
int3
fwait
pusha
and
les
popf
leave
cmp
xchg
fsub
push
ins
mov
pop
pmuludq
cmp
movs
(bad)
sub
sub
adc
xchg
ret
xchg
xor
cdq
in
mov
sub
jp
jbe
dec
sub
xchg
fsubr
fwait
out
cmp
or
jno
int
ror
das
inc
movs
int3
scas
mov
mov
stc
lods
jmp
bound
or
sbb
cs
mov
rol
xor
call
fwait
icebp
cmps
call
pop
ficom
ins
ss
test
mov
pushf
aad
leave
call
imul
mov
(bad)
mov
add
in
std
add
sub
mov
data16
das
in
cmp
rcr
mov
sbb
xchg
out
or
dec
sbb
xchg
pop
fsubr
ret
xchg
stos
jae
dec
cmp
dec
push
cs
(bad)
pop
out
push
popf
out
pop
inc
sub
pop
out
pop
pop
outs
scas
cld
mov
jecxz
or
dec
sbb
adc
inc
and
jae
cmps
rcr
or
xor
dec
pop
inc
add
and
lods
into
xchg
(bad)
cmp
mov
adc
sbb
repnz
out
add
jl
(bad)
hlt
scas
shl
xor
xchg
jecxz
push
mov
mov
repnz
test
dec
mov
lods
dec
add
std
add
dec
(bad)
fistp
dec
sbb
xor
sbb
xor
inc
and
repnz
dec
out
stos
cwde
push
sub
outs
sbb
push
mov
sbb
je
push
adc
ret
xchg
rcl
jmp
(bad)
into
(bad)
daa
test
je
ret
adc
sub
mov
test
aas
push
test
and
cwde
pause
mov
iret
int3
sub
(bad)
ds
sbb
rcl
scas
jg
jne
dec
addps
addr16
(bad)
lods
call
sub
cmp
mov
sbb
imul
or
mov
(bad)
loope
icebp
and
dec
add
push
daa
add
xchg
push
add
dec
dec
ficom
(bad)
popf
test
cmp
cmc
push
or
mov
sahf
mov
push
add
mov
sahf
fbld
ins
mov
jl
icebp
jbe
xor
xor
jge
sahf
lods
cli
dec
and
scas
imul
fwait
lock
call
mov
imul
mov
(bad)
jmp
jp
mov
jmp
jae
push
adc
pop
dec
mov
aas
jnp
loopne
push
pop
jle
aam
or
mov
retf
into
lods
jae
aaa
jae
xchg
adc
addr16
nop
jp
sub
cld
daa
imul
inc
sub
js
test
sahf
xchg
aad
or
dec
cld
stos
mov
pop
or
movs
xchg
and
je
loopne
push
adc
mov
in
rcl
push
push
mov
inc
adc
pop
xchg
fst
mov
das
sbb
push
retf
repnz
sbb
pop
les
cmps
out
push
call
xor
loopne
push
mov
push
pop
cmp
fadd
imul
sbb
push
loope
nop
repz
cdq
rcr
scas
gs
push
cmps
iret
ins
cmp
jbe
mov
and
push
lock
cwde
int3
and
gs
mov
mov
jp
(bad)
jle
push
gs
or
cli
sub
stos
add
aas
add
mov
out
pmaxsw
iret
lods
xchg
(bad)
cmp
mov
test
push
sar
sub
xor
cmps
les
leave
lea
adc
iret
mov
mov
in
mov
mov
jbe
loope
fistp
aas
stos
out
dec
push
cmp
sbb
jge
pop
inc
mov
pop
mov
out
sub
push
(bad)
scas
jl
xor
xchg
push
(bad)
lods
fs
sbb
(bad)
js
cmp
call
or
inc
(bad)
scas
(bad)
fimul
mov
mov
jns
xchg
dec
push
dec
cmc
mov
lock
(bad)
lahf
lds
jmp
test
pop
sbb
pop
cld
movs
and
jnp
fidiv
sub
cli
xor
aad
push
in
(bad)
push
or
in
mov
std
push
adc
outs
iret
cwde
push
cmp
enter
add
jno
mov
sbb
call
test
xor
and
scas
les
sbb
out
xor
scas
and
jne
sti
sub
fbld
out
scas
popa
sub
and
mov
sbb
mov
jg
adc
xchg
aam
inc
or
mov
cvtdq2ps
icebp
outs
sub
mov
int
jb
leave
and
mov
sbb
fstp
mov
ret
xchg
lds
(bad)
add
dec
mov
imul
int
ins
scas
jmp
mov
cmp
fimul
les
mov
int3
xor
xchg
fistp
retf
out
xor
lods
dec
add
mov
jns
lock
mov
and
or
mov
jb
stc
mov
cmp
inc
aam
adc
push
lock
xchg
les
push
pop
jmp
fwait
jb
aaa
jle
icebp
popf
fldenv
aas
adc
jecxz
pusha
sbb
mov
aaa
push
(bad)
xchg
int
or
cmp
dec
sbb
pop
or
mov
mov
aas
adc
iret
das
imul
lods
sti
aas
jle
out
jno
jae
loop
sbb
fadd
test
arpl
mov
out
mov
xchg
jle
aaa
jae
xlat
dec
push
jecxz
adc
aaa
pop
push
aad
imul
jo
std
inc
add
scas
fs
jge
scas
ja
retf
pushf
push
sub
(bad)
aaa
jnp
cld
sahf
cmc
or
xlat
inc
add
dec
cmps
inc
in
jle
push
pop
sar
ins
and
xchg
mov
ins
(bad)
mov
div
push
dec
mov
push
add
cmp
lea
and
test
xor
loop
pop
add
ret
xchg
lahf
test
(bad)
mov
retf
xlat
mov
jecxz
por
nop
aam
and
mov
mov
and
mov
mov
cmp
xchg
stos
cld
xor
adc
lea
inc
mov
jns
cmp
xchg
fstp
mov
fstp
cmp
lea
xchg
pause
mov
jge
cmc
mov
(bad)
xchg
mov
ja
es
aad
add
sbb
inc
(bad)
out
gs
push
dec
mov
dec
adc
jle
pop
fisttp
int3
fwait
popa
and
push
movs
call
inc
add
dec
mov
pop
iret
sahf
mov
pop
xor
movs
in
pop
xor
fwait
mov
or
je
push
push
rcl
push
or
sar
out
gs
cmp
lds
lock
cli
xor
xchg
lods
mov
push
push
cmp
out
add
dec
aad
cdq
fstp
sbb
sbb
or
fmul
cli
xchg
and
popa
ficomp
ficomp
jno
cmp
cdq
nop
shl
ins
sbb
pop
mov
dec
out
cmps
sahf
mov
dec
std
lods
inc
adc
lods
addr16
test
cld
xchg
test
pop
or
mov
add
jecxz
jl
call
movs
in
fadd
jb
mov
sti
inc
add
sbb
pop
les
cmp
push
sbb
pop
cmc
sahf
arpl
cmp
loope
inc
mov
outs
rcl
lock
add
push
loope
popa
or
in
mov
mov
sbb
out
imul
xlat
outs
cmp
mov
lock
mov
mul
xchg
leave
dec
es
movs
icebp
and
inc
mov
push
out
mov
inc
sub
mov
in
mov
ret
jo
pop
inc
mov
push
sbb
jbe
mov
frstor
jb
icebp
inc
sub
cmps
imul
or
mov
ficom
push
sbb
push
sti
mov
pop
inc
mov
arpl
dec
or
jbe
mov
push
or
xchg
and
rol
retf
pushf
ficomp
out
test
lock
rcl
cmp
fist
pop
fadd
movs
icebp
jnp
clc
mov
loop
ins
std
mov
in
test
ret
or
jno
or
mov
inc
pop
cmp
ror
bound
cmps
nop
retf
scas
int
popa
std
mov
jmp
jnp
scas
jae
les
mov
xor
mov
imul
in
mov
pop
push
mov
loop
data16
scas
xchg
into
sub
scas
mov
mov
ror
ja
pushf
imul
stos
dec
adc
je
push
rcl
xchg
xchg
rol
dec
stc
mov
pop
inc
test
adc
(bad)
mov
adc
test
call
inc
(bad)
mov
ss
sti
scas
test
or
test
and
lods
cld
sub
shr
test
mov
movs
in
inc
pop
rol
(bad)
out
add
pop
rcr
fnstsw
fcom
(bad)
xchg
mov
test
sbb
ror
out
mov
mov
aaa
sub
stos
out
jge
icebp
cmps
mov
pop
or
jae
call
jno
pop
inc
mov
inc
or
mov
lock
bound
(bad)
movs
mov
pop
cmp
mov
(bad)
xor
retf
xchg
mov
inc
push
dec
mov
dec
in
mov
mov
adc
je
mov
mov
mov
rcr
(bad)
mov
sub
mov
xor
fstp
arpl
pop
int
cwde
sti
xor
add
(bad)
xchg
popa
xor
inc
sti
xchg
adc
adc
push
out
mov
stos
mov
and
(bad)
mov
add
sbb
mov
sub
out
mov
lds
sbb
inc
mov
mov
out
mov
add
lea
pop
cmp
inc
(bad)
xchg
lods
in
dec
cmps
jecxz
or
jb
mov
test
sub
mov
sbb
scas
mov
inc
or
push
adc
das
inc
fimul
jae
cmp
retf
jle
jecxz
cwde
shl
jecxz
add
lds
addr16
stos
inc
pop
sub
mov
ins
test
pop
sbb
pop
push
dec
rcl
loope
sub
push
fistp
out
mov
jl
cwde
mov
jl
in
jbe
or
(bad)
and
scas
loop
jb
jbe
in
push
pop
aaa
jae
mov
sub
mov
or
sti
add
test
pop
add
scas
imul
sub
mov
and
in
or
push
mov
jns
lock
in
imul
bound
retf
shl
push
push
fmul
movs
bnd
xchg
fadd
popa
xor
jp
and
fistp
push
stos
std
inc
add
test
inc
out
mov
push
sbb
xchg
shl
lock
lods
lds
repz
hlt
pop
add
jnp
rcl
inc
fst
cld
mov
retf
int
or
dec
(bad)
popf
mov
pop
cmp
xchg
jb
pop
dec
(bad)
mov
xor
xchg
mov
inc
sub
or
cli
inc
das
cli
cdq
sahf
retf
push
sbb
repz
dec
push
scas
(bad)
dec
pop
call
sub
push
mov
push
xor
mov
mov
cmps
popf
retf
cmp
shl
sub
mov
mov
push
push
mov
pop
movs
call
test
daa
jae
mov
aam
add
movs
int
data16
out
jl
cmc
scas
test
pop
cmp
inc
into
mov
cmc
ins
sub
stos
jb
xor
mov
sbb
lods
push
pop
stc
mov
lds
cld
stos
scas
mov
inc
sbb
sub
lahf
test
push
or
lods
popa
and
cdq
lock
add
lods
bound
push
pop
sub
cmp
cmc
add
out
inc
pop
adc
sub
mov
cmps
std
push
cmp
sub
cmps
inc
sbb
mov
(bad)
cmp
push
push
push
dec
xchg
jp
cmp
test
sub
push
iret
mov
pop
inc
cmps
lock
and
into
(bad)
pop
push
pop
jl
retf
inc
adc
cmp
pop
inc
in
mov
out
mov
aad
addr16
push
sbb
repnz
(bad)
fs
(bad)
scas
jge
sub
jno
cmps
addr16
nop
les
ins
int3
test
sahf
mov
pop
or
xchg
mov
add
push
movs
xchg
div
rcl
js
or
cmp
es
repnz
mov
dec
xchg
shr
imul
xor
pop
int
xchg
xlat
pop
adc
neg
ret
xchg
scas
push
or
xchg
(bad)
out
add
pop
or
test
push
add
lods
scas
jmp
mov
jge
mov
stc
call
xchg
retf
div
les
in
imul
fimul
ret
cmp
stos
std
inc
sub
movs
dec
or
pop
inc
stos
rol
mov
push
push
cmps
loop
push
or
mov
fcomp
adc
push
cmp
les
sub
or
jle
sahf
popa
and
pcmpgtd
scas
cdq
ret
pop
xor
ins
movs
lock
pop
loopne
jb
ds
sbb
mov
(bad)
fwait
shl
sti
cwde
aam
inc
add
test
fbstp
jae
push
cli
stos
jns
ds
into
cdq
nop
ror
aad
pop
push
dec
les
adc
xchg
test
cmp
test
or
int
cmp
xor
movs
xchg
dec
push
xor
scas
mov
push
adc
aaa
pop
sbb
cmp
dec
mov
lock
sub
retf
in
(bad)
fimul
rcl
imul
call
enter
mov
sbb
scas
xchg
add
xchg
inc
test
pop
xchg
sar
loopne
mov
pop
inc
enter
xor
movs
pushf
frstor
test
pop
xor
jno
cmc
mov
mov
mov
pusha
sub
xchg
movhps
push
adc
jb
cmps
popf
fnstcw
jg
loopne
jo
scas
jge
rcl
mov
add
in
pusha
and
inc
cmps
inc
leave
lea
fisttp
add
xchg
(bad)
and
not
add
fadd
stos
fs
test
cmp
fist
cmps
movs
loope
add
mov
jmp
addr16
xchg
and
jno
mov
and
fistp
cmps
iret
inc
adc
mov
and
icebp
inc
pop
cmp
cmp
push
repnz
mov
jo
(bad)
nop
sti
add
cld
ins
sub
inc
stos
repz
sbb
test
inc
cmc
mov
lahf
lds
dec
adc
dec
loopne
sbb
inc
enter
ins
cmp
push
(bad)
mov
scas
xchg
(bad)
xor
mov
adc
mov
call
aas
jmp
mov
cmp
fidivr
stos
loop
jno
pop
mov
je
sbb
xchg
rol
sbb
mov
fistp
(bad)
mov
in
mov
scas
out
and
and
cmps
inc
adc
(bad)
mov
push
or
pushf
int
sub
dec
rol
ror
adc
bound
sbb
mov
imul
ficom
pop
out
mov
ror
xchg
jp
loop
jg
in
test
push
add
aam
outs
cmp
mov
shr
jmp
mov
bound
adc
lea
add
iret
sahf
fisttp
mov
pop
fdiv
jo
or
mov
pop
push
out
mov
test
inc
test
ds
lds
popf
lds
adc
gs
hlt
dec
add
push
sar
stos
out
cmp
aaa
or
jle
cmp
mov
fimul
inc
xlat
lea
in
(bad)
xor
sti
and
aam
outs
sub
and
inc
stos
jmp
push
cmp
ret
push
push
div
int
popa
and
std
xchg
test
cmps
jbe
or
fsubr
cmp
mov
es
mov
clc
imul
mov
xor
test
call
mov
push
push
loope
nop
(bad)
pop
ss
je
call
xchg
dec
add
pop
add
push
jb
es
rep
and
mov
push
pop
xchg
rcr
test
jle
out
mov
inc
adc
jnp
mov
test
pop
sbb
jle
mov
jl
in
sub
xchg
loop
mov
fwait
add
div
and
jl
movs
jp
pop
pop
mov
nop
mov
mov
inc
add
aas
jnp
add
sbb
ja
xor
push
cmc
mov
mov
dec
sbb
mov
add
pop
adc
sub
mov
call
movs
hlt
and
cmps
into
imul
or
adc
mov
mov
or
sub
lods
ins
sub
in
jno
add
dec
jmp
adc
js
popf
inc
add
mov
jne
loope
mov
sub
add
jae
scas
fstp
add
xor
mov
add
test
jl
out
sub
mov
mov
push
ja
add
psraw
adc
xchg
add
outs
mov
leave
cs
(bad)
outs
and
call
mov
mov
aaa
jae
popf
mov
push
ds
cmps
xchg
sub
fnstenv
pop
test
jl
cli
and
scas
push
and
jnp
neg
out
xchg
cld
pop
aas
cmp
mov
jmp
or
retf
fbld
data16
into
xchg
xchg
clc
add
aam
ins
iret
xchg
sub
cdq
adc
sub
dec
(bad)
xchg
mov
sub
jmp
push
push
and
out
ss
mov
aaa
out
mov
rol
pop
mov
mov
and
mov
fdiv
jb
call
mov
or
cdq
mov
pop
xor
xchg
stos
jne
loopne
cmps
loop
add
sbb
(bad)
cmp
mov
shl
in
movs
popa
cmp
mov
and
scas
stc
jg
or
mov
fldcw
or
cdq
mov
xchg
shl
retf
xchg
ins
sub
jne
in
push
in
test
dec
mov
xchg
daa
arpl
xchg
movs
cld
lahf
fistp
in
mov
adc
scas
fst
lods
into
jg
loope
mov
push
fcomp
push
cmp
adc
mov
repnz
sbb
scas
js
or
cwde
mov
add
adc
cmp
push
ret
add
jns
stc
aaa
jae
icebp
add
xchg
enter
pop
jle
out
aaa
jbe
loopne
pop
fdiv
add
pop
pop
out
stos
jb
sbb
int3
movs
adc
or
out
test
mov
fcomp
dec
mov
cmc
inc
sub
adc
mov
fadd
retf
and
scas
imul
jnp
jmp
mov
cli
cs
into
xchg
mov
xor
mov
enter
shl
pop
push
enter
jns
push
push
mov
adc
or
pusha
mov
mov
lods
sti
aas
jle
in
sub
push
xor
pop
push
in
sbb
jnp
xchg
mov
and
mov
loop
cmp
add
rcr
loope
inc
or
mov
or
sbb
mov
xor
xor
mov
and
sbb
or
xchg
test
mov
and
je
push
fmul
mov
(bad)
inc
cmps
into
push
add
(bad)
adc
shl
fist
cmovnp
mov
shl
in
mov
iret
lods
push
jmp
ja
mov
mov
mov
push
ret
and
jg
mov
sub
push
mov
or
repnz
mov
rcr
mov
mov
and
inc
adc
jg
jmp
sub
jp
(bad)
outs
sub
mov
ret
aam
(bad)
fidiv
sbb
loop
(bad)
std
mov
sbb
push
cmp
std
jg
ss
pop
out
mov
sbb
cmp
inc
movs
into
outs
or
xor
test
push
push
or
hlt
dec
or
out
mov
fld
ret
pop
aas
jbe
xchg
je
loope
jb
out
mov
out
iret
and
dec
lds
fwait
shr
cs
hlt
push
push
int3
fwait
xchg
cld
sub
fwait
inc
or
mov
test
dec
push
or
aam
arpl
mov
fwait
mov
push
les
stc
mov
in
push
and
dec
or
mov
loop
xor
jo
cmp
dec
fadd
jmp
pusha
adc
mov
loopne
or
pop
mov
dec
(bad)
lahf
inc
add
pop
mov
sahf
fmul
ror
mov
push
pop
inc
ficomp
pop
or
pop
rol
or
test
outs
or
add
inc
ret
jmp
sbb
movs
nop
(bad)
pop
sbb
cwde
mov
dec
daa
loop
movs
icebp
jnp
ror
mov
push
repnz
inc
pop
jmp
jno
or
cmps
lds
jbe
scas
inc
or
push
hlt
mov
cdq
mov
ins
cmp
inc
(bad)
xchg
xchg
aad
add
inc
enter
and
mov
icebp
jb
retf
call
aad
data16
pop
cli
xchg
mov
mov
add
xchg
push
add
ret
das
popa
and
push
dec
fwait
loope
jmp
arpl
dec
sti
mov
lea
pop
sbb
pop
aas
inc
sub
and
dec
cmp
fst
inc
add
push
push
and
fld
out
retf
fwait
imul
repnz
popf
div
pop
or
out
stos
jge
sub
leave
mov
sub
inc
cmp
mov
jmp
enter
test
and
shl
cmps
mul
call
dec
adc
mov
cmp
cld
jge
adc
cs
cmp
push
call
add
shl
mov
inc
add
jae
jp
rcr
retf
(bad)
leave
popf
(bad)
and
test
mov
nop
sbb
cmp
cld
mov
aad
sub
and
cdq
retf
xchg
or
movs
fst
push
xchg
mov
jo
inc
xor
mov
mov
or
jo
sbb
cmp
ins
adc
rcl
xchg
(bad)
out
(bad)
loopne
bound
push
or
and
mov
ror
adc
fisub
imul
aaa
daa
jg
push
or
pop
outs
sbb
mov
mov
push
dec
or
stos
pop
es
pop
or
pop
xor
pushf
call
xchg
xchg
jge
mov
mov
mov
mov
or
mov
mov
in
push
std
xor
ins
aas
retf
stos
(bad)
popa
add
xchg
neg
or
retf
xchg
and
push
fmul
ret
mov
or
and
cs
loop
dec
pop
je
sub
inc
adc
push
sbb
jno
pop
mov
adc
das
aas
hlt
cmp
jne
outs
repnz
es
(bad)
fsubr
mov
adc
dec
pop
push
jb
cmps
jecxz
sti
mov
mov
test
mov
mov
mov
rcl
cmps
neg
pop
sbb
sub
add
inc
sub
nop
(bad)
gs
adc
pop
or
dec
(bad)
jle
imul
loope
sbb
jae
and
fs
and
jl
ja
xor
push
daa
in
pop
cmp
ret
xchg
mov
sub
or
outs
sbb
mov
(bad)
sbb
out
stos
stc
test
mov
sar
out
rcr
adc
imul
dec
or
xchg
jg
pop
xor
dec
rcr
sub
lahf
stos
lock
movs
cmc
xchg
ret
inc
fisubr
ret
int3
pop
or
dec
adc
adc
mov
popf
int
scas
int
loopne
dec
xchg
retf
jns
(bad)
fisttp
mov
lds
iret
cmp
mov
out
inc
adc
in
lock
sbb
xchg
out
cli
gs
dec
cmp
pop
or
or
sub
push
or
ficom
pop
cmp
or
cmp
je
mov
xchg
jmp
sub
ins
out
shl
ds
pop
jno
pop
loopne
ds
and
ficom
clc
mov
cdq
mov
test
xchg
rol
bound
jp
jge
inc
adc
cmp
and
inc
pcmpeqw
or
movq
pushf
into
out
rep
pusha
call
scas
ficomp
mov
int3
iret
mov
(bad)
call
and
push
push
or
jns
stc
les
in
mov
shl
test
mov
cmp
cli
gs
in
lods
jmp
xchg
aam
test
cmps
shr
imul
and
adc
out
mov
cwde
arpl
inc
sbb
sub
dec
sbb
push
pop
add
cmc
or
les
add
add
cwde
ret
cmp
jo
ret
and
mov
mov
mov
call
pop
push
add
pop
mov
push
dec
test
fdivr
out
push
cwde
ja
pop
or
sbb
xor
cs
rcr
and
sbb
dec
mov
or
jb
adc
dec
push
daa
inc
aaa
dec
mov
jo
sub
int3
add
push
jmp
stos
stc
test
xchg
jae
dec
cmp
and
xchg
pusha
cmp
das
dec
adc
nop
sub
jp
and
repz
xlat
or
repnz
push
adc
dec
fild
(bad)
addr16
add
sub
mov
mov
mov
movs
iret
(bad)
xlat
test
movs
jmp
cmps
ficomp
shl
inc
xchg
xchg
icebp
mov
pop
imul
adc
hlt
cmps
ror
jl
ss
cmp
sub
mov
outs
sbb
sub
jne
push
inc
and
xor
dec
adc
pop
push
push
add
inc
xor
int
push
pop
jecxz
mov
test
xor
retf
mov
adc
ins
movs
cli
mov
sbb
fs
lods
cld
xchg
int
fisttp
jns
jb
dec
or
sbb
xor
push
and
inc
cmp
mov
mov
cli
mov
xchg
ret
xchg
sub
pop
stc
nop
in
pop
pop
sbb
dec
push
ins
push
dec
or
out
lock
pop
jp
inc
pop
push
aas
push
add
jbe
inc
sbb
cmp
cmp
pop
ins
add
imul
in
int3
inc
or
adc
sub
jle
add
push
sbb
pop
adc
pop
rep
xchg
sahf
into
mov
test
mov
cmps
xlat
imul
push
in
scas
pushf
stos
std
sub
jo
ja
mov
mov
xchg
ja
pop
push
and
mov
stos
lahf
mov
and
pop
lea
and
push
adc
aaa
outs
aas
pop
cmps
or
jo
inc
les
mov
push
push
stos
jmp
iret
cwde
mov
ror
sub
les
mov
jo
and
dec
mov
test
test
stos
push
adc
push
push
pop
jecxz
cwde
mov
cmp
test
mov
outs
lds
push
or
adc
sub
test
xchg
fmul
xlat
mov
pushf
in
and
jl
inc
sbb
loope
rcr
and
hlt
mov
sahf
mov
push
push
std
or
fs
cs
or
retf
inc
sbb
mov
xor
jb
jnp
push
out
rol
ja
sub
mov
rol
test
cdq
xchg
jp
pushf
sar
cs
pop
inc
sbb
push
pop
cs
dec
cmp
jb
mov
inc
loop
stc
arpl
push
in
xchg
jle
push
xchg
and
inc
xchg
movs
stos
popf
ds
aas
adc
fstp
add
ss
in
inc
pop
push
jnp
adc
in
clc
mov
mov
cmp
add
dec
rcl
dec
sbb
xchg
loop
mov
mov
lahf
mov
lea
dec
cmp
mov
stc
mov
pop
andps
out
jnp
xchg
cli
pushf
stos
fist
adc
push
adc
push
add
adc
ss
adc
dec
sbb
or
add
sbb
push
in
data16
jae
dec
stos
jnp
inc
or
xchg
out
mov
cmps
aad
jbe
je
dec
dec
xor
pop
cmp
sub
and
(bad)
xchg
mov
cmps
movs
fmul
test
repz
mov
add
add
and
sub
sub
ror
cmp
lock
test
xchg
stc
adc
in
mov
out
sti
xor
int
fstp
adc
iret
mov
and
jnp
jbe
inc
ret
les
and
sub
mul
push
mov
xchg
retf
dec
sub
sub
mov
les
xor
les
js
sub
adc
jmp
dec
retf
xchg
inc
lods
leave
stos
(bad)
sub
adc
pop
or
inc
xor
mov
add
js
push
xor
pusha
in
fimul
dec
fsubr
pop
or
outs
or
out
cmp
and
in
ret
and
scas
icebp
add
pop
cmp
cmp
jae
pop
cmp
js
push
cdq
fdivr
in
mov
sub
jne
dec
daa
jae
pop
adc
fistp
retf
sub
jne
sti
scas
sti
mov
sbb
xor
push
jmp
and
inc
rol
int3
movs
rol
dec
pop
inc
sub
test
(bad)
mov
in
mov
fimul
pop
xor
xchg
(bad)
xlat
movs
lock
xchg
mov
or
mov
or
ss
jg
pop
pcmpgtb
xlat
mov
and
pop
push
and
stc
mov
inc
sub
add
ds
push
xor
lahf
mov
jne
pop
test
out
lahf
fisub
mov
inc
daa
push
push
jmp
pop
adc
adc
add
jns
jge
pop
push
and
xchg
inc
add
nop
mov
push
lds
test
push
sub
push
test
xchg
out
stc
sub
push
out
mul
or
cmp
add
jl
jle
data16
mov
pop
xchg
out
fsubr
push
jmp
push
add
push
lds
dec
scas
loop
jmp
mov
pop
and
or
dec
ret
xchg
nop
(bad)
mov
sbb
pop
pop
xchg
adc
cmps
loop
mov
movs
retf
jae
loopne
les
sbb
sbb
std
push
dec
or
call
shl
outs
pop
sub
pusha
cmp
xchg
ins
sbb
jg
in
cmps
fisttp
and
cmps
repnz
inc
es
sbb
push
pop
add
inc
and
cmp
stc
test
xchg
inc
and
pop
call
movs
loopne
jge
sub
aas
jb
outs
xor
gs
inc
push
pop
repz
cli
xor
mov
in
call
cmc
xchg
or
je
neg
dec
adc
lds
pushf
in
mov
cmp
pop
cmp
scas
fimul
and
les
cmp
xor
addr16
sub
ins
or
sub
and
(bad)
mov
movs
rcl
pop
sbb
adc
mov
mov
xchg
rcr
mov
push
jmp
popf
fst
test
mov
movs
idiv
mov
arpl
test
and
jb
xor
cmp
retf
cmp
shl
sub
mov
dec
mov
xor
jne
jle
cmp
sbb
dec
cmp
call
inc
hlt
popa
or
data16
pop
and
rdpmc
pop
or
nop
stc
lea
in
sbb
pop
clc
ins
sbb
je
add
(bad)
mov
push
jo
xor
es
sub
inc
pop
ins
ss
or
cli
xchg
(bad)
pop
xor
popa
and
call
dec
sbb
call
ficomp
pop
push
xor
jbe
inc
jmp
cwde
jmp
mov
popf
aam
dec
or
fwait
shl
dec
push
push
pusha
es
xor
call
xchg
pop
das
data16
test
inc
add
sub
sub
adc
adc
arpl
pusha
add
mov
jbe
inc
sbb
or
jge
xchg
loopne
mov
fist
js
movs
shl
and
lahf
(bad)
test
mov
pushf
fdivr
mov
mov
outs
dec
add
or
popf
cmc
pushf
aad
call
sub
pop
(bad)
sub
bound
dec
adc
push
pop
je
dec
or
push
div
pop
sbb
xor
test
sahf
les
lahf
cld
inc
adc
push
xor
sub
lock
(bad)
xor
fnstenv
pop
pop
loope
mov
sbb
clc
mov
push
and
dec
in
cmps
ja
inc
add
out
retf
jno
imul
push
div
cmp
sub
adc
pusha
xchg
(bad)
mov
sub
pop
adc
test
mov
mov
popf
aam
out
ins
cmp
in
in
pusha
pop
pop
pop
shl
sbb
inc
push
cmp
leave
mov
shl
dec
cmc
bound
imul
imul
in
rcl
leave
jbe
inc
sbb
in
xor
jge
pop
loope
leave
lea
in
(bad)
mov
adc
fisub
jle
cmc
xor
vmwrite
je
data16
cs
or
xchg
int
ret
fs
mov
call
cld
mov
mov
sub
cdq
dec
nop
std
mov
cmp
shl
sub
adc
jb
pop
adc
inc
cs
test
hlt
xchg
les
test
std
and
and
inc
sbb
jae
dec
sbb
cmps
aam
inc
jecxz
fsubr
out
mov
mov
xchg
mov
xchg
int
fcomp
fidivr
mov
mulps
mov
rol
pop
clc
in
rol
push
jb
push
push
pop
sbb
pop
or
pop
pop
pop
cmp
gs
inc
repz
out
call
mov
test
rcl
cvtdq2ps
and
iret
or
mov
pusha
sub
repz
push
ss
sbb
push
xor
imul
or
pop
fdiv
stc
mov
pusha
mov
mov
ror
and
das
ins
out
imul
sub
in
stos
out
out
shl
or
imul
pop
mov
and
arpl
and
ss
dec
adc
push
addr16
and
loopne
aam
ss
push
and
loope
or
inc
cs
je
dec
stos
cld
sahf
inc
(bad)
mov
into
adc
cmp
and
fdiv
nop
aam
shl
and
adc
push
cs
sbb
adc
cmp
arpl
adc
dec
fisubr
dec
or
enter
inc
add
pop
in
test
inc
pop
pop
loopne
and
pop
or
ret
xchg
into
cdq
fdiv
mov
shl
ds
pop
and
ror
leave
xchg
lods
sar
and
jbe
dec
or
inc
es
popf
fadd
int
mov
pop
push
dec
push
adc
inc
sbb
push
nop
inc
pop
bound
inc
add
or
mov
in
ret
cld
mov
out
mov
push
gs
jg
outs
cmp
push
cmp
movs
int3
mov
jl
jge
inc
or
inc
push
dec
aam
cld
jne
and
int
cmp
(bad)
lahf
lds
mov
xchg
cdq
rcl
mov
inc
mov
mov
mov
mov
xor
pop
sbb
jns
jg
jge
pop
adc
xchg
fist
es
ss
in
fisttp
pop
add
sub
cmp
cmp
xchg
iret
gs
(bad)
pop
das
data16
mov
mov
data16
fidiv
pop
add
inc
push
ret
mov
out
mov
imul
fistp
jge
push
add
jb
hlt
sbb
shl
imul
jle
push
xor
pushw
ins
sti
pop
push
pop
sub
xor
cmps
lock
xchg
repnz
(bad)
push
test
nop
jmp
stc
mov
jmp
push
aam
shr
mov
mov
xlat
mov
push
cmp
dec
lds
stc
and
fwait
out
mov
pop
out
lods
enter
(bad)
mov
clc
mov
rcr
jp
mov
mov
data16
ror
sar
(bad)
cwde
in
cmp
popa
cmp
xchg
adc
jg
jmp
movs
std
mov
cmc
xchg
int3
lahf
ret
std
mov
popa
mov
cmp
leave
xor
jp
jp
ins
or
sbb
jns
inc
sbb
repnz
and
inc
std
sub
sbb
xor
imul
inc
cmp
cmp
dec
lds
je
dec
pop
push
sbb
lds
jmp
sub
pop
sbb
pop
or
push
fbld
retf
sbb
ins
sub
popf
(bad)
xchg
ret
lods
inc
ror
or
dec
sar
retf
mov
das
dec
xor
or
in
cli
mov
sub
jl
mov
bound
call
adc
sub
addr16
mov
nop
scas
lock
sbb
pop
cmp
inc
(bad)
sbb
jmp
div
jg
pop
gs
inc
pop
sub
pushf
fsubr
ins
les
jmp
or
or
sbb
push
loope
or
stos
cld
mov
jle
adc
mov
push
adc
aas
idiv
ins
or
jnp
xor
mov
or
aas
pop
das
jnp
mov
jecxz
aad
hlt
movs
popf
retf
pop
push
and
jle
pop
push
gs
dec
mov
mov
adc
(bad)
mov
inc
add
enter
inc
xor
bound
sbb
shl
mov
mov
xlat
xchg
mov
lods
shl
in
popa
loope
cmp
push
inc
xor
inc
ss
push
or
mov
mov
xor
outs
mov
pushf
les
(bad)
mov
xchg
cld
gs
aad
jnp
pop
mov
(bad)
push
sbb
(bad)
test
sahf
mov
mov
inc
adc
jo
inc
les
fistp
outs
push
ds
jg
and
sbb
jo
in
fisub
and
or
bound
data16
jmp
sub
inc
movd
pop
ja
push
add
mul
aad
in
mov
les
fimul
or
pusha
or
xchg
ficomp
or
sub
out
sub
or
or
pop
pop
movs
int
rcr
fdivr
xor
and
fisubr
dec
sbb
sbb
outs
sbb
pop
cmp
in
cmps
fadd
mov
(bad)
test
pop
or
es
in
inc
push
jne
push
sbb
sbb
jns
push
bound
adc
jmp
das
jno
ins
adc
jne
aad
cmc
mov
add
das
jne
cmc
or
dec
sub
jbe
jb
jnp
push
dec
loopne
ss
sbb
inc
fisub
data16
cmc
jae
xchg
call
jge
push
add
pop
cmp
in
mov
add
mov
inc
add
pop
or
and
out
arpl
cmps
inc
cmp
dec
mov
mov
push
pop
jo
push
in
lods
fistp
cmp
or
pop
xor
hlt
xchg
leave
arpl
push
sub
sbb
out
cwde
add
add
jb
push
sub
mov
xchg
fstp
xor
push
aas
inc
add
jae
int3
pushf
in
mov
(bad)
mov
in
int3
xchg
mov
add
mov
loop
mov
xchg
mov
or
push
in
fisubr
data16
mov
mov
push
adc
sub
push
push
inc
aaa
daa
and
mov
xchg
lods
out
sub
popa
xor
int3
(bad)
adc
jnp
ja
lea
(bad)
outs
cmp
dec
cmp
sbb
add
add
jle
je
js
push
pop
and
inc
and
jp
dec
cmp
cmp
push
repz
lock
loope
repz
nop
jmp
out
call
rcl
rcr
sbb
lods
hlt
cmps
jecxz
ret
cmps
neg
dec
daa
pop
jecxz
cmp
add
pusha
stos
(bad)
mov
push
add
and
out
test
dec
mov
mov
pop
(bad)
sub
pop
mov
and
adc
xor
adc
out
sub
scas
fld
outs
retf
sub
pop
jmp
iret
dec
idiv
sti
push
adc
sub
sbb
movhps
inc
sti
and
or
aaa
in
and
imul
pusha
leave
add
dec
ficomp
(bad)
popa
test
cld
and
sub
icebp
dec
rol
sub
jne
xor
xor
xor
enter
in
sbb
and
call
pop
loop
mov
push
cld
sub
in
add
es
and
adc
pop
pop
psubd
push
fld
push
out
ud0
dec
movs
mov
jne
inc
mov
mov
movs
fs
pop
fild
aas
call
dec
fidivr
das
sbb
cmp
push
mov
pop
fiadd
enter
adc
imul
dec
aad
mov
cmp
popf
inc
cmps
mov
mov
mov
inc
fsubr
push
les
loope
cmp
jmp
aad
icebp
dec
add
mov
jg
inc
mov
push
(bad)
or
adc
push
shr
cmc
dec
rcr
shr
dec
mov
mov
addr16
push
ficomp
dec
fisub
or
loopne
addr16
jnp
push
fld
into
push
sar
pop
test
xchg
mov
in
sbb
loope
mov
frstor
aas
das
aaa
adc
cdq
lods
(bad)
xchg
data16
inc
enter
pop
sar
aad
hlt
push
retf
mov
rcl
clc
and
inc
shl
cmp
adc
cmp
push
cmp
inc
scas
xchg
xchg
xchg
imul
das
in
push
jmp
cwde
mov
push
test
inc
sti
jno
pop
fild
ja
mov
mov
pop
std
inc
fimul
out
out
and
add
fwait
mov
aam
mov
jne
push
ret
dec
(bad)
(bad)
lds
test
mov
dec
aas
add
xor
and
and
iret
pop
sar
pop
call
jae
inc
fsub
aaa
cmp
ja
out
iret
inc
mov
jae
(bad)
fmul
cs
pop
lock
xor
push
aam
(bad)
dec
in
cmp
or
jo
cs
sbb
ret
and
jnp
jle
mov
aad
enter
pop
retf
and
adc
pop
aam
mov
mov
mov
out
cmp
sbb
dec
stc
jnp
pop
enter
outs
repnz
retf
and
ds
aas
sbb
ror
push
retf
xchg
test
ret
pop
fisub
cs
movs
pushf
(bad)
outs
fiadd
jne
pop
sar
hlt
pushf
nop
stos
test
sahf
fistp
mov
fs
dec
aam
cmps
push
xor
movs
mov
xchg
push
aam
or
inc
adc
push
jmp
cli
pop
mov
mov
mov
rol
xchg
fs
loope
cli
inc
out
jle
inc
add
adc
inc
push
daa
sbb
xor
pop
adc
icebp
and
push
enter
call
dec
stos
test
mov
mov
or
daa
sbb
push
mov
adc
or
inc
or
inc
cmps
loop
out
out
aad
push
adc
or
test
mov
aam
mov
lahf
call
or
pop
lea
pop
fisub
loop
movs
jl
cmp
inc
or
pop
repz
jmp
out
pop
sbb
ds
jmp
push
pop
cmp
and
push
mov
cwde
dec
add
fisub
jmp
cmps
fistp
(bad)
jo
xor
dec
add
enter
mov
jnp
and
adc
dec
les
neg
mov
mov
mov
push
mov
cmp
mov
fild
cld
mov
int3
adc
cmp
cs
stos
xchg
test
dec
xchg
adc
dec
cmps
xchg
dec
ror
dec
mov
lock
add
pop
(bad)
bswap
xor
in
xor
loopne
add
in
mov
call
addr16
out
pop
mov
cld
sub
test
inc
ret
movs
mov
xchg
(bad)
ins
aad
shl
jge
dec
int
cld
scas
mov
cmps
mov
imul
test
mov
push
cmps
xchg
lahf
mov
sbb
adc
aam
jmp
imul
leave
cmp
in
sub
or
mov
jnp
pop
mov
jmp
push
(bad)
jae
sahf
retf
sbb
pop
rol
ret
jbe
lahf
popf
ja
fwait
xchg
mov
mov
inc
daa
sbb
and
mov
test
jb
pop
xlat
sub
xor
(bad)
xchg
mov
jmp
jae
xor
dec
cmps
lahf
inc
sub
inc
aam
inc
aad
mov
sub
scas
dec
cmps
push
mov
mov
lods
push
xor
dec
(bad)
sar
ins
movs
mov
popa
or
movups
cli
xor
jmp
inc
jl
dec
xlat
xor
sub
dec
mov
fdivr
pop
sbb
push
jmp
pop
int
pop
adc
shl
push
mov
cdq
shr
imul
cmp
ret
and
jg
add
sub
int3
jg
ins
fist
pop
ror
xchg
inc
mov
mov
dec
scas
inc
sbb
arpl
inc
mov
mov
and
adc
mov
ror
push
leave
popf
pushf
inc
movs
xchg
xchg
jg
sub
shl
rol
cdq
jp
jmp
mov
mov
push
mov
les
and
iret
push
mov
fimul
jmp
sbb
sub
push
(bad)
pop
lods
push
mov
xor
push
lea
not
ins
int
ds
push
jmp
in
and
aaa
dec
sbb
imul
adc
xor
outs
(bad)
cmp
dec
mov
nop
lahf
mov
ja
arpl
or
sub
xchg
jne
outs
mov
jnp
lea
cwde
pusha
mov
shl
and
xor
sub
sub
jecxz
push
adc
nop
test
mov
jmp
fbstp
loop
xlat
or
add
adc
add
jns
lahf
jns
pusha
int
cmps
jbe
xor
sub
ret
cmp
push
test
arpl
ficom
addr16
out
pop
mov
popf
inc
(bad)
xor
push
scas
call
push
les
adc
or
test
outs
(bad)
inc
(bad)
push
movs
jnp
repnz
mov
ins
mov
(bad)
push
scas
out
dec
mov
jg
xor
sbb
shr
xchg
dec
cmps
xchg
xchg
jbe
ds
dec
fs
inc
mov
cmps
outs
mov
outs
retf
add
pop
into
or
mov
jp
or
sbb
cdq
xchg
imul
cmp
ss
fs
xchg
mov
xchg
mov
mov
xlat
push
mov
jmp
dec
aam
add
std
lahf
jmp
sbb
call
jbe
xor
pop
in
leave
push
push
das
cmp
hlt
push
lock
test
mov
pop
mov
dec
unpckhps
jmp
les
sbb
adc
xor
das
sbb
dec
jmp
stc
push
aad
loope
fdivr
cld
dec
hlt
inc
repz
add
or
out
inc
sti
sub
sub
mul
in
pop
(bad)
sub
xor
mul
aas
adc
jnp
push
lods
jns
xchg
jb
jg
jno
push
mov
mov
jo
(bad)
fistp
(bad)
and
pop
into
dec
(bad)
pop
int3
or
xor
dec
movs
std
je
aas
push
loope
int3
daa
pop
out
sbb
pop
mov
inc
ficomp
(bad)
cmp
clc
sub
cwde
xchg
push
push
push
sti
push
scas
pusha
mov
mov
mov
xor
daa
shr
ja
cmp
cmp
pop
sub
jp
push
mov
test
or
test
(bad)
call
dec
mov
stos
sbb
xor
mov
cwde
dec
into
test
push
retf
cmp
inc
mov
pop
test
imul
and
cmp
and
pop
xchg
inc
fadd
jo
xor
adc
and
je
xor
das
in
arpl
sar
jecxz
(bad)
cmp
js
add
sub
pop
into
xor
add
sti
and
jnp
mov
inc
shl
mov
rcl
add
pop
mov
lock
xchg
push
(bad)
add
dec
ficom
les
sbb
sub
xchg
js
addr16
add
sub
cmp
pop
aad
sub
adc
pop
scas
std
dec
cmp
fadd
loop
clc
push
and
(bad)
cs
or
add
fidivr
sbb
cmp
std
es
das
cmp
pop
ret
fisttp
div
pop
or
je
push
nop
dec
(bad)
ja
lahf
scas
les
jnp
fstp
scas
imul
int
and
or
ins
icebp
aas
std
stos
push
pop
shr
in
cmp
sub
leave
ins
hlt
xor
cli
aaa
push
cld
cmp
sbb
jmp
mov
mov
stos
imul
adc
sub
and
and
loope
test
push
lods
jo
data16
fs
push
pop
not
jo
aaa
test
cmc
sub
(bad)
push
and
mov
and
push
rol
sbb
dec
int
adc
lock
pop
xchg
fs
mov
jne
pop
sar
dec
les
data16
or
add
or
and
and
add
mov
dec
mov
in
fistp
inc
fild
cmp
fdivr
jecxz
out
or
lds
inc
aad
out
(bad)
adc
call
call
adc
pop
or
aas
loop
aaa
icebp
or
mov
into
adc
out
jne
push
adc
add
imul
das
pop
adc
aaa
jnp
(bad)
push
fnstcw
jbe
xor
adc
pop
mov
jne
rcr
call
int
hlt
cmp
retf
inc
sti
pop
in
mov
mov
sbb
ins
(bad)
push
cmps
inc
lods
xchg
inc
rol
mov
(bad)
jbe
xor
outs
mul
out
neg
ins
test
and
cmp
mov
pop
mov
xchg
jno
xchg
xchg
pushf
lea
mov
es
fdiv
sbb
test
push
jmp
sti
sub
push
aaa
(bad)
test
fidivr
out
sbb
mov
imul
mov
loope
mov
hlt
or
xor
push
enter
fist
dec
or
cmps
mov
nop
jle
imul
mov
inc
shl
cld
pop
mov
fistp
jno
bound
movs
ins
mov
fist
cmp
inc
frstor
das
cmp
dec
lods
popa
stc
imul
in
or
xor
or
push
or
adc
sbb
add
sti
and
mov
aaa
test
sub
pop
test
pop
fcomp
xlat
jno
push
mov
xchg
lea
xchg
jbe
and
xor
and
icebp
push
mov
dec
stos
mov
mov
mov
and
ror
gs
push
mov
jo
gs
or
les
std
add
es
(bad)
sahf
jp
(bad)
ins
in
rol
cmp
sub
aad
into
push
out
pop
sub
arpl
sub
pop
movs
popa
fld
cmp
push
ret
cmp
jne
push
mov
les
in
mov
sbb
popa
not
add
mov
test
cwde
lea
and
push
add
int
adc
enter
sub
adc
movs
popa
mov
jmp
mov
sbb
dec
xor
xor
mov
fstp
add
sub
or
lds
jl
jle
outs
(bad)
xor
and
in
dec
inc
fnstcw
dec
fadd
out
xchg
lahf
outs
mov
test
jle
inc
xchg
and
pop
mov
and
movs
xchg
mov
pop
(bad)
and
push
mov
out
movs
cwde
push
xor
stc
push
mov
cli
pop
shr
lock
out
enter
and
sbb
dec
adc
icebp
push
shr
adc
sbb
mov
mov
jnp
pop
mov
les
pop
adc
das
icebp
xor
out
aam
aad
stos
arpl
xor
push
dec
push
sbb
push
scas
dec
and
mov
fld
imul
sti
and
or
out
xor
lock
cld
jge
inc
mov
std
push
mov
cmp
add
adc
mov
mov
cdq
inc
aam
sbb
ret
pop
(bad)
add
ds
push
mov
call
ss
jmp
jb
add
in
sbb
or
pop
cmp
aad
add
in
adc
mov
ins
rol
hlt
push
stos
sahf
mov
jae
cmc
dec
mov
call
pop
(bad)
sub
ins
mov
es
(bad)
or
and
(bad)
pop
sbb
add
in
and
push
loope
sbb
xor
inc
xchg
clc
push
mov
lods
jl
jl
or
xchg
(bad)
dec
fisub
and
inc
movs
inc
mov
jae
daa
jno
pop
mov
cmps
(bad)
in
in
sbb
push
call
mov
push
xor
xchg
sub
push
stos
cli
xor
mov
test
mov
or
sar
repnz
mov
ja
xor
lods
inc
mov
test
push
xchg
mov
lods
jno
nop
jo
pop
fcom
cmps
mov
jns
loope
jmp
rcl
jae
cmp
lods
mov
jno
sub
xor
or
aas
sbb
add
daa
add
sub
add
push
mov
cmps
xchg
inc
fnstcw
not
shr
dec
mov
inc
cmps
mov
sub
and
in
add
push
mov
mov
gs
sahf
xchg
jae
push
cmp
push
xlat
cmp
lds
jle
movs
mov
rcl
mov
mov
xchg
je
mov
jae
inc
mov
into
pop
scas
jno
lahf
dec
and
adc
pop
mov
and
mov
ror
test
jle
lahf
js
popa
(bad)
nop
push
in
pop
scas
dec
mov
aaa
adc
dec
mov
xor
out
in
or
pop
adc
jmp
or
icebp
push
xchg
adc
pop
mov
and
out
add
daa
dec
pushf
inc
repnz
shr
in
aaa
stc
add
lods
cmps
jbe
cmp
data16
add
xchg
cdq
arpl
cmp
aad
or
dec
xlat
jge
das
sbb
pop
movs
js
sub
add
xchg
mov
jne
dec
xchg
stos
inc
adc
cmp
push
fdivr
push
ficomp
dec
lods
xchg
test
arpl
pop
in
shl
add
xor
das
shl
or
xor
out
pop
repnz
int3
mov
iret
or
clc
daa
ret
mov
sti
pop
fbld
push
ret
pop
xchg
push
mov
fstp
and
pop
int3
mov
jo
outs
mov
iret
daa
add
sbb
outs
fbstp
pop
fisub
sbb
xor
add
xchg
lods
ins
repnz
xor
push
lods
xchg
pusha
fsub
jno
xchg
dec
(bad)
push
mov
mov
outs
mov
push
mov
add
int
mov
bound
sbb
not
xchg
int
int
(bad)
outs
scas
ins
fistp
or
ret
cs
jmp
jp
aas
out
scas
lea
idiv
xchg
fs
mov
imul
inc
aam
lds
push
imul
popa
mov
test
xchg
sbb
inc
xchg
ret
push
enter
div
lock
mov
mov
in
sub
push
mov
dec
(bad)
rol
(bad)
push
mov
not
nop
test
cwde
jl
fistp
cmp
mov
xor
aas
adc
jl
or
sub
fdivr
pop
aad
stc
ss
mov
xor
or
push
test
clc
inc
mov
and
mov
sub
pop
lock
xchg
xchg
push
xchg
sub
cld
and
push
rol
xchg
dec
mov
xchg
xchg
popf
jb
std
and
icebp
pop
in
in
pop
sub
std
sub
push
hlt
push
sbb
icebp
sub
or
xor
scas
cdq
jns
das
push
adc
cmp
dec
shl
pop
mov
lea
lea
stos
movs
dec
add
jne
jg
call
clc
pop
aad
scas
jnp
inc
xor
in
pop
retf
dec
test
mov
mov
pop
scas
inc
scas
mov
sti
ss
pop
fstp
pop
sub
loope
je
and
int
(bad)
cmp
gs
pusha
stos
scas
js
pop
adc
pop
mov
and
cmp
or
pop
mov
mov
test
mov
ds
push
sub
xor
push
stc
push
mov
retf
push
lods
imul
jb
popf
call
aam
cli
daa
sbb
nop
mov
inc
imul
add
push
mov
sub
loopne
adc
das
adc
xor
xor
lds
mov
lahf
jns
jg
pop
add
mov
nop
inc
mov
rcr
retf
cmp
das
sbb
iret
adc
sahf
popf
pushf
jno
xor
repnz
mov
cmp
out
cmp
movs
call
loope
loope
push
loopne
loope
out
pop
mov
jns
push
sar
xor
push
lds
ins
mov
(bad)
aaa
loope
mov
test
xor
stc
and
pusha
sar
out
add
js
dec
stos
pushf
mov
cmp
pop
mov
fdivr
test
popa
in
cmc
pop
nop
imul
mov
sub
ret
push
fldcw
dec
push
xor
and
or
xor
sub
rcr
cwde
pushf
jp
test
xchg
imul
fdiv
icebp
or
sbb
out
jp
adc
pop
icebp
aas
push
retf
pop
out
ror
cmp
daa
push
fdiv
and
or
sbb
sbb
lock
mov
nop
cwde
jge
cdq
dec
shl
fdivr
adc
das
adc
fnsave
iret
inc
imul
icebp
pop
and
fidivr
in
es
push
and
push
lods
jns
xor
pop
mov
cmp
sub
push
mov
int3
cmp
in
cmp
aaa
stc
push
loop
fidiv
cmp
inc
(bad)
sar
adc
das
or
scas
movs
popa
rcr
adc
cmp
cmp
dec
sbb
jl
and
and
push
aam
cmps
(bad)
(bad)
push
fdivr
cmp
out
hlt
movs
je
xchg
test
aas
in
push
fld
pop
mov
dec
xchg
push
mov
mov
out
cmp
sar
sbb
out
pusha
or
xor
pop
mov
mov
push
mov
(bad)
jae
xor
adc
adc
dec
mov
test
push
cs
ds
dec
shr
and
dec
out
retf
pop
jmp
mov
shl
mov
xchg
sub
push
push
add
pop
fsub
hlt
dec
movs
call
mov
sahf
(bad)
jnp
ja
outs
not
mov
shr
push
or
cs
fisub
loope
pop
retf
inc
out
aas
icebp
dec
mov
add
jg
xor
pop
retf
sub
repnz
ss
ss
pop
(bad)
sahf
js
cwde
(bad)
jb
or
dec
(bad)
and
dec
test
lahf
xchg
jae
cdq
inc
mov
(bad)
mov
jne
sahf
push
(bad)
pop
mov
xor
cld
ss
addr16
ss
aam
adc
adc
lock
pop
xlat
xor
push
mov
(bad)
and
jmp
xchg
arpl
and
int3
push
and
push
ret
and
hlt
pop
mov
mov
push
ror
sahf
inc
(bad)
add
sti
cmp
dec
pop
or
adc
loope
ret
js
push
in
add
push
mov
sbb
inc
mov
es
push
dec
xchg
inc
test
dec
pop
das
ss
pop
clc
and
xor
sbb
push
add
dec
adc
nop
inc
fidiv
and
adc
repz
lock
cmc
sub
inc
fadd
in
and
ror
jl
pop
call
sahf
add
xchg
push
add
mov
arpl
les
iret
popa
sbb
jns
js
fs
adc
pop
ins
push
dec
cmc
jns
out
jb
inc
loop
rcr
loope
mov
inc
pcmpeqw
jp
inc
xor
inc
add
out
xor
pop
add
jae
js
inc
pop
dec
push
and
or
jp
dec
add
ret
repz
out
out
mov
pusha
stos
(bad)
leave
lea
and
pop
xchg
mov
cmps
mov
mov
scas
call
pushf
fiadd
scas
sti
addr16
int3
gs
addr16
fistp
pop
punpckhbw
cwde
in
xor
adc
mov
cdq
fstp
lock
xchg
clc
imul
stc
xchg
repnz
jmp
inc
pop
inc
add
or
and
jnp
jle
xor
xor
xor
mov
call
shr
xchg
loopne
bound
jle
lods
mov
nop
fmul
les
scas
retf
lahf
(bad)
cwde
xlat
pop
icebp
mov
mov
stos
pusha
add
jmp
leave
mov
sbb
sbb
inc
cmp
dec
or
dec
or
or
sbb
and
mov
cmp
cmp
and
jae
int3
test
test
push
and
push
mov
out
(bad)
enter
jbe
push
or
pop
sbb
mov
mov
out
test
lea
(bad)
cmps
mov
mov
mov
lahf
mov
in
lds
lods
jmp
daa
jns
and
cdq
fistp
imul
jne
inc
cmp
sub
ds
sbb
push
and
adc
adc
scas
fdiv
(bad)
push
lods
(bad)
cwde
int3
cmp
imul
cmps
repz
push
sub
push
int3
cwde
ficomp
lock
dec
or
icebp
xchg
sar
out
ror
jno
inc
sbb
push
dec
les
mov
rcr
(bad)
in
ror
(bad)
mov
movs
jno
xor
fmul
movs
mov
mov
sub
pop
sbb
jno
rdtsc
push
sbb
xchg
loopne
mov
in
xchg
repz
das
pop
cmp
lahf
sub
mov
div
add
fadd
inc
cmp
and
js
jl
sub
cmp
fild
cmp
add
pop
push
add
sbb
adc
es
aad
cld
sbb
stos
cld
or
daa
jo
pop
adc
imul
adc
pop
cmp
mov
mov
add
inc
xor
add
inc
sub
ret
gs
xor
clc
(bad)
aad
pop
add
jge
sub
or
cmp
loope
test
mov
or
arpl
adc
std
or
setl
mov
ins
push
add
xor
dec
sbb
push
pop
adc
lock
fimul
fistp
mov
fcomp
aam
mov
cwde
mov
scas
clc
(bad)
in
(bad)
(bad)
pushf
fcom
mov
fist
scas
rol
popa
cmp
dec
cmp
push
retf
mov
pushf
hlt
xchg
out
test
cmp
test
xchg
inc
lds
lds
mov
mov
pop
cs
cmp
sub
sbb
or
mov
pop
inc
adc
mov
mov
mov
rcl
inc
cmp
push
hlt
add
or
xlat
xchg
in
aad
cmp
dec
adc
jne
mov
es
dec
out
repnz
loop
mov
mov
outs
xor
cmp
mov
add
push
pop
push
das
push
pop
mov
sbb
mov
jp
jle
push
bswap
mov
mov
movs
test
xchg
(bad)
and
xor
(bad)
iret
xor
inc
cmp
mov
cwde
lods
ficom
shl
aas
push
push
mov
push
push
adc
mov
mov
je
inc
std
cmp
inc
cld
inc
das
enter
cmp
or
mov
mov
bound
data16
aaa
jno
and
dec
sub
dec
or
xchg
jmp
inc
adc
jns
jp
or
mov
xchg
test
shr
retf
popa
inc
into
scas
mov
mov
inc
add
push
sti
lods
(bad)
xchg
ror
xchg
loopne
int
enter
shr
stc
xchg
fsub
ds
or
fldcw
outs
int3
xchg
(bad)
mov
mov
xchg
inc
mov
shr
into
stos
sti
cwde
inc
fs
arpl
cld
sub
push
sbb
mov
mov
ror
jp
pop
lea
fsubr
stc
data16
fisub
mov
and
xor
inc
adc
jns
mov
mov
lea
les
inc
adc
and
push
xchg
xchg
shr
cmp
pop
mov
aad
adc
je
jg
jl
cs
adc
mov
mov
test
mov
sbb
test
rol
or
push
cmp
mov
fstcw
cmp
and
das
das
inc
or
push
sbb
xor
sbb
aad
adc
cs
push
adc
xor
hlt
push
sbb
into
xchg
dec
pop
jo
cli
jge
je
push
or
add
dec
sbb
or
outs
in
cmp
out
int
xor
pop
sbb
cs
push
into
test
neg
lds
popf
add
sahf
in
or
xchg
fimul
pop
sub
mov
movs
jmp
cwde
fnstsw
and
mov
out
xor
div
push
or
ret
imul
inc
and
dec
jmp
scas
shl
jmp
jo
pop
mov
loop
int3
jne
cmp
loope
push
and
mov
stc
mov
clc
ds
(bad)
nop
dec
fisub
popf
out
test
(bad)
fisub
push
add
or
xchg
mov
fisttp
add
dec
repnz
fisub
pop
adc
push
inc
mov
pusha
mov
push
or
stc
dec
or
inc
mov
push
xor
add
adc
ror
push
and
sub
push
push
fs
cmp
dec
in
mov
es
jl
and
cmovl
loope
or
pusha
mov
(bad)
das
imul
and
outs
test
adc
jns
in
div
push
add
mov
std
mov
xchg
shr
and
and
and
adc
jo
push
add
jbe
inc
sbb
jb
jns
mov
inc
sbb
sbb
outs
aas
dec
sbb
fcomp
aaa
pop
mov
mov
mov
xchg
mov
jge
push
push
mov
fnstsw
in
movs
fiadd
aaa
push
lods
cli
mov
mov
push
into
mov
push
push
or
jmp
retf
inc
cmp
or
clc
push
xor
and
jbe
jp
push
jo
iret
cwde
repz
push
jl
and
and
daa
js
mov
aad
icebp
les
fisub
push
sbb
or
cmp
jno
and
mov
cmp
jae
js
push
(bad)
mov
dec
aam
push
pop
out
test
std
movs
sar
adc
into
or
inc
or
add
and
inc
adc
loopne
adc
rol
xchg
shl
push
sub
popf
fcomp
ins
and
sbb
scas
fstp
jmp
mov
push
(bad)
xchg
loop
cli
mov
les
and
cwde
sar
outs
rcl
jl
xchg
in
mov
(bad)
lods
fist
mov
mov
xchg
pop
dec
or
pop
jmp
jmp
leave
out
out
xchg
mov
idiv
clc
mov
daa
inc
test
or
cmp
add
cmp
mov
adc
mov
mov
mov
mov
jbe
sub
pop
movs
repz
test
sahf
mov
cli
mov
xchg
int3
cmps
xchg
xor
int
(bad)
mov
pop
jbe
dec
cmp
inc
xor
call
repz
lock
jecxz
and
mov
arpl
je
add
(bad)
sbb
inc
adc
jp
inc
cs
mov
xchg
lods
call
and
loop
mov
push
push
mov
leave
(bad)
retf
mov
sbb
loopne
rcr
mov
mov
retf
mov
dec
cmp
xor
js
and
out
mov
mov
sub
movs
repnz
push
push
sbb
ins
mov
mov
xchg
(bad)
mov
cli
mov
sbb
xchg
fisttp
mov
gs
xchg
xchg
jae
xor
jae
dec
add
test
shl
jno
pop
jmp
into
mov
xor
xchg
aam
cmc
add
push
adc
gs
xor
daa
jnp
mov
push
pop
xor
push
add
sub
cmp
or
out
inc
cmp
sar
xchg
movs
cmps
test
popf
bound
dec
or
or
pop
aaa
jne
and
mov
push
scas
shr
mov
mov
popf
sti
stos
test
call
pop
aaa
sub
ja
gs
add
xchg
xlat
mov
out
lods
mov
xchg
int3
outs
sub
loop
stos
fstp
jne
loope
mul
jns
dec
sbb
mov
mov
or
inc
pop
ins
mov
add
pop
pop
jbe
xor
dec
or
inc
dec
sub
popa
xor
mov
inc
cs
add
dec
xor
sti
mov
xchg
enter
push
stos
cld
retf
lods
cld
sahf
sbb
ds
iret
cwde
jmp
ret
(bad)
cmps
adc
jmp
sti
scas
jmp
mov
jg
inc
adc
nop
test
imul
dec
and
jl
icebp
mov
outs
es
pop
push
adc
push
or
xchg
retf
ja
push
dec
push
jp
int
push
or
jo
and
cmps
jge
inc
pop
push
adc
xor
mov
xchg
mov
dec
push
cmp
arpl
sbb
and
sub
xor
pop
inc
add
stos
mov
mov
xor
ss
dec
sbb
sub
jnp
movs
out
inc
jbe
jmp
jecxz
je
pop
sbb
and
inc
jmp
fcomp
neg
ins
xchg
out
mov
cmp
call
sbb
mov
xchg
cli
jl
dec
or
or
fs
cmp
dec
sbb
xchg
mov
(bad)
xchg
in
nop
iret
test
cmp
call
fdivr
call
shl
(bad)
sub
cmp
push
mov
mov
nop
cld
nop
ins
sub
inc
loopne
mov
jno
je
push
loope
loop
cwde
inc
movs
jmp
loopne
lock
inc
adc
jne
addr16
push
daa
jl
mov
arpl
data16
jmp
jmp
int
cmp
pop
lock
add
and
aas
clc
pop
sub
pop
or
add
mov
pop
sbb
adc
cmp
pop
sbb
mov
mov
xor
sbb
jae
jo
retf
xor
adc
outs
add
pop
lods
cdq
je
push
push
pop
inc
xor
stos
popa
push
pop
das
xchg
rcr
add
sbb
das
cmp
jg
mul
data16
add
push
jae
and
add
xchg
mov
(bad)
(bad)
xchg
cmc
jae
or
repz
jge
aas
pop
or
arpl
mov
bound
imul
jecxz
les
das
and
sbb
ins
jno
jl
imul
pop
push
sub
rcr
xlat
popa
stc
mov
pusha
sbb
nop
stc
jbe
push
adc
jl
das
std
push
cmp
cmp
jmp
pop
or
mov
call
call
jecxz
psllw
dec
add
sub
add
adc
and
push
push
pop
retf
adc
pop
sti
inc
xor
leave
bound
jmp
ins
sbb
inc
adc
dec
mov
movq
test
les
in
dec
or
pusha
and
sbb
pcmpgtd
mov
xchg
les
mov
dec
in
mov
xor
js
jg
sahf
shr
xor
jl
push
dec
adc
ins
pop
pop
in
aam
out
in
(bad)
xchg
aad
out
aam
repz
inc
push
arpl
pop
sbb
dec
scas
imul
cmc
xchg
out
xor
adc
popf
jnp
mov
jl
jne
jle
pop
out
cmc
mov
ja
push
sbb
and
ins
das
inc
cmp
fidivr
jle
push
lock
cmp
add
inc
add
je
std
dec
or
adc
xor
stos
lock
mov
cli
add
aaa
outs
adc
push
inc
mov
xchg
les
daa
arpl
push
push
pop
xor
cmp
push
inc
sbb
push
test
movs
cmc
ins
cmp
popa
ss
push
dec
add
dec
daa
dec
sub
push
adc
inc
std
mov
mov
aam
rol
xchg
sti
mov
sahf
call
std
xchg
inc
mov
mov
not
ret
mov
lods
add
adc
and
push
or
jl
sub
and
mov
jne
dec
push
aad
sub
pop
mov
(bad)
fild
outs
cmp
inc
aaa
jle
cmp
mov
push
pop
ss
adc
int3
inc
adc
push
sbb
dec
or
test
mov
jl
pop
loope
out
pusha
outs
push
jb
jl
and
lods
into
cmp
(bad)
mov
xchg
cli
mov
mov
push
inc
sub
sbb
mov
mov
popf
call
mov
aam
xor
imul
pusha
pop
cmp
les
dec
mov
shr
cs
cmps
int3
scas
dec
mul
or
xor
xor
int3
fwait
mov
jmp
outs
mov
pop
enter
inc
aam
cmc
test
sbb
popa
clc
mov
nop
fisub
adc
aam
sub
imul
inc
pop
ins
in
int
mov
mov
dec
ss
sbb
dec
loope
lods
icebp
jae
add
dec
loop
fbstp
pop
sub
xor
shr
cdq
inc
sbb
xlat
jecxz
mov
movs
mov
xchg
mov
nop
stc
xchg
imul
inc
ds
ret
jns
sub
popf
jmp
mov
in
imul
push
aad
int
add
ja
push
sbb
and
push
sar
xchg
shr
mov
cmps
int
add
jmp
mul
ret
dec
daa
dec
lods
fstp
or
xchg
pop
cmp
pop
fs
cmp
or
out
data16
dec
xchg
jns
das
jl
pusha
add
outs
loope
out
out
sub
retf
mov
add
mov
pusha
lds
xor
call
push
or
xor
dec
clc
neg
test
xchg
xchg
sahf
scas
shr
pushf
pop
repz
movs
int3
xlat
fwait
loope
push
(bad)
xchg
cmc
mov
mov
cmp
xchg
xlat
mov
scas
ja
lahf
jmp
sahf
dec
or
bound
jae
inc
call
pusha
mov
cmp
jg
dec
adc
mov
movs
(bad)
mov
rol
mov
mov
pop
xor
dec
or
jecxz
fisttp
imul
ja
arpl
and
dec
jecxz
sub
mov
sbb
jecxz
jmp
xchg
fsubr
dec
dec
in
jle
dec
jle
xor
scas
jmp
fdiv
dec
or
(bad)
fldcw
add
adc
sbb
ds
(bad)
fsubr
ret
xchg
clc
arpl
jae
jo
inc
or
jl
pop
pop
jp
and
pop
sub
push
push
sub
push
cmp
and
pop
and
outs
cmp
dec
cmp
shl
pop
sub
jb
push
adc
outs
sbb
push
xchg
shl
xchg
icebp
cmps
xlat
xchg
rcr
cli
cdq
xchg
rol
outs
les
nop
bound
and
push
mov
vmwrite
hlt
cmc
cmps
loop
cld
sahf
jl
int3
(bad)
out
ja
jae
in
xor
or
and
mov
scas
cmps
cmp
push
mov
(bad)
mov
mov
mov
loope
fisttp
adc
jp
out
mov
sti
stos
sar
leave
ins
out
xlat
test
xchg
rcl
adc
push
adc
jae
dec
or
push
daa
js
push
out
mov
adc
rcr
lock
mov
sbb
dec
stc
mov
mov
dec
fimul
leave
mov
data16
pop
je
dec
out
ds
cmp
repnz
fcmovnbe
lods
fistp
mov
mov
sahf
lds
inc
and
sbb
push
or
outs
push
or
jae
pop
xor
cs
add
jmp
cli
pop
push
inc
push
outs
loope
stos
shr
inc
cmp
ss
adc
pop
cmps
sti
or
adc
cmp
xchg
(bad)
leave
and
test
nop
sti
jb
inc
lock
mov
fisttp
fistp
or
(bad)
ds
cmp
cmp
mov
xchg
les
nop
loope
out
mov
jb
movs
int3
mov
in
stos
fcom
mov
xchg
fnstenv
push
das
in
push
fwait
repnz
in
(bad)
xchg
mov
push
xor
mov
cli
(bad)
fcomp
rcr
cld
inc
and
pop
retf
mov
xor
or
pcmpgtd
inc
aas
cld
js
dec
sbb
leave
mov
dec
stc
mov
xchg
jb
adc
pop
cs
mov
mov
mov
(bad)
mov
movs
ret
jnp
ins
pop
sub
add
mov
ret
mov
dec
sbb
ror
mov
retf
and
daa
dec
cmp
retf
ins
sub
loope
jge
jne
mov
pop
sbb
call
cli
mov
in
test
pusha
jmp
scas
out
scas
int3
xchg
sar
mov
cdq
push
test
les
add
or
or
sbb
push
es
ds
ret
sub
mov
xor
push
pop
sbb
aas
and
push
adc
push
jne
popf
out
(bad)
int
add
ins
or
push
cmp
rcl
js
and
sahf
cmc
popf
ret
pushf
mov
mov
xchg
enter
pop
(bad)
sub
ds
ja
mov
sahf
clc
adc
data16
cmps
cmps
(bad)
cdq
test
into
(bad)
out
add
mov
leave
mov
test
inc
add
dec
adc
sbb
add
jbe
pushf
stc
(bad)
fimul
xchg
ret
test
scas
mov
std
jb
sub
stos
lds
aam
enter
push
cmp
and
loop
fcom
mov
adc
dec
cmp
jae
xor
and
jb
push
pop
push
rol
mov
sbb
sbb
jl
cmovno
dec
pop
jne
jbe
cmp
(bad)
mov
jle
xchg
xchg
rep
mov
es
hlt
and
lods
div
popa
bound
(bad)
jmp
sahf
mov
outs
dec
or
dec
sbb
js
jg
ficomp
xchg
rol
rcl
sbb
dec
inc
adc
dec
add
dec
or
push
dec
mov
sbb
inc
movs
and
imul
mov
loopne
aam
fld
push
add
mov
cmps
retf
xor
xchg
out
(bad)
xchg
fsub
add
push
cwde
push
pop
sub
cli
xchg
ret
cdq
cmps
mov
into
push
ins
pop
jl
inc
adc
ret
mov
mov
imul
sub
add
push
cmp
pop
loope
iret
and
inc
sbb
push
cmp
aaa
jg
ins
or
jmp
push
out
lods
mov
mov
outs
sbb
in
sbb
xor
fnsave
ins
ds
push
pop
neg
mov
inc
jl
dec
mul
adc
cdq
adc
push
push
pop
jmp
mov
ror
mov
add
jnp
dec
sbb
je
add
push
xchg
xchg
(bad)
mov
dec
ds
ss
inc
sbb
push
add
inc
add
adc
(bad)
pop
cmp
or
in
imul
pop
mov
es
jmp
outs
sub
push
add
and
xchg
xchg
jmp
(bad)
sub
pop
adc
gs
inc
xchg
(bad)
cs
adc
and
popa
sub
(bad)
arpl
mov
mov
cdq
loop
out
mov
adc
stos
out
sub
das
cld
mov
imul
ror
xchg
retf
pop
jae
pop
sbb
call
pusha
and
mov
mov
in
xchg
jmp
mov
xchg
(bad)
push
inc
sub
int
test
retf
inc
out
xor
push
out
jmp
fist
jmp
mul
and
ja
inc
sbb
clc
push
in
mov
movs
out
addr16
(bad)
mov
ins
jmp
imul
cmp
inc
pop
push
je
dec
xchg
call
jne
push
and
jecxz
(bad)
mov
xor
push
adc
xchg
jno
pop
sbb
and
add
test
jg
addr16
int3
movs
mov
mov
mov
js
xchg
pop
or
pop
pop
and
cmp
movs
loopne
fs
das
imul
(bad)
in
(bad)
jbe
inc
sbb
iret
arpl
jns
mul
add
jmp
fwait
mov
pop
sbb
dec
xor
add
pop
sub
mov
mov
cwde
retf
(bad)
fldenv
mov
out
mov
mov
mov
mov
sub
jno
dec
or
xor
and
jae
xor
sub
push
or
push
and
adc
add
cmp
dec
push
xor
arpl
das
arpl
inc
pop
or
jb
cmp
push
inc
add
mov
ja
push
sbb
jbe
push
adc
fisttp
inc
xor
cmps
mov
je
(bad)
dec
cmp
test
shl
push
push
inc
cmps
test
and
ficom
push
cwde
fsubr
xor
icebp
test
xchg
and
jae
xlat
fwait
loope
out
call
cmc
mov
mov
push
push
adc
retf
call
scas
repz
push
sub
mov
mov
ss
mov
(bad)
xchg
movs
call
mov
mov
shl
xchg
fsub
retf
xchg
rol
mov
hlt
lahf
cld
(bad)
fbld
sbb
add
inc
or
pop
or
inc
adc
sub
dec
adc
push
xor
push
pop
sub
pop
or
pop
sub
jg
pop
sub
or
imul
inc
ds
sbb
pop
sub
dec
cmp
and
jle
js
popa
add
push
adc
pop
out
lock
out
cmp
dec
push
outs
xor
addr16
das
pop
or
jge
inc
cmp
or
and
push
dec
or
push
iret
cmp
neg
mov
retf
(bad)
fldenv
pop
cs
pop
cs
dec
cmovne
cmp
push
and
jle
pop
or
and
xchg
ret
xchg
(bad)
mov
mov
mov
mov
mov
sahf
call
adc
rcl
dec
cmp
inc
aas
cmp
push
xor
xor
js
imul
xchg
mov
fist
(bad)
pop
dec
jmp
(bad)
mov
test
pushf
retf
mov
scas
repz
aaa
pusha
adc
(bad)
pushf
shl
imul
test
inc
adc
dec
sbb
cmp
or
pop
sbb
cmp
and
push
(bad)
ficomp
dec
push
and
mov
push
cs
(bad)
mov
mov
jge
fisttp
push
jae
imul
or
scas
int3
mov
jo
mov
or
test
mov
mov
xor
push
and
xor
cmp
jno
dec
cmp
pop
sub
or
inc
cmp
pusha
adc
pop
sub
xchg
ror
stos
mov
(bad)
lods
imul
out
in
call
(bad)
mov
xchg
lds
in
sar
int
mov
pop
xor
cld
mov
arpl
xchg
ret
xchg
fisub
mov
(bad)
int3
mov
scas
stc
add
push
sub
lods
in
lds
mov
jmp
test
cmps
jmp
push
out
xchg
iret
arpl
ja
addr16
dec
or
xor
pop
popa
pop
push
retf
call
idiv
xor
mov
xchg
dec
cdq
fisttp
push
pop
or
mov
lock
dec
sbb
sbb
fs
fidiv
xor
mov
es
mov
fwait
loopne
lods
dec
add
mov
stc
popf
int
hlt
mov
addr16
jo
and
js
pop
sub
repnz
jmp
jecxz
(bad)
mov
rep
stc
pushf
(bad)
sbb
aas
add
pop
add
cmp
inc
int3
sub
pop
push
sub
or
rcl
stos
cld
mov
les
jbe
ins
popa
loope
je
adc
mov
mov
xchg
bound
sbb
push
mov
sar
and
cli
outs
mov
adc
sbb
push
leave
push
leave
xchg
adc
call
jg
call
push
mov
ins
xor
aas
into
xchg
xlat
sbb
cdq
jno
jmp
retf
sahf
push
arpl
and
push
mov
lds
cwde
test
loop
(bad)
xchg
std
popf
ret
mov
or
mov
outs
push
push
or
jge
jl
out
add
sbb
mov
(bad)
mov
call
shr
retf
movs
iret
stos
ret
mov
ficom
shl
mov
lods
(bad)
mov
mov
out
add
pop
dec
(bad)
call
mov
xchg
stc
cmp
push
xor
call
das
jns
dec
push
and
inc
sbb
in
pushf
shl
(bad)
sbb
xchg
xor
das
xlat
adc
jmp
out
jle
xor
add
inc
cdq
outs
or
cmp
leave
sub
out
movs
mov
fs
stos
out
stos
out
inc
sbb
unpcklps
stos
dec
cmp
(bad)
hlt
mov
sub
push
mov
pop
push
and
test
popf
les
jnp
jg
sub
out
mov
pop
xor
add
fcomp
push
push
pop
sbb
and
rcr
cld
cwde
int3
fwait
std
add
xor
adc
mov
ret
mov
jmp
int3
test
mov
mov
sahf
(bad)
push
push
cmp
je
clc
(bad)
and
test
inc
xchg
pop
sbb
and
daa
push
cmps
daa
add
clc
retf
sahf
mov
xchg
int3
xchg
std
xchg
shl
mov
mov
xchg
aad
sub
movs
jmp
jle
shl
pop
out
xchg
cmp
or
fbstp
imul
sbb
jbe
add
cmc
aam
gs
cmc
adc
pop
mov
ss
fistp
clc
jge
ss
loop
add
lods
repnz
rcr
add
clc
xchg
test
pop
aad
or
mov
xor
xchg
dec
in
ss
mov
popa
fwait
sar
mov
cmp
fs
jne
jmp
xor
icebp
xchg
mov
add
jnp
clc
aam
ret
inc
jecxz
cmp
cmps
fcomp
jnp
leave
lds
lods
ret
call
sahf
int3
popf
fsubr
iret
fwait
stos
ret
mov
ja
fcom
cs
repnz
xchg
xchg
inc
imul
in
cwde
les
shr
ins
cmp
push
sbb
jmp
fcom
movs
(bad)
sahf
enter
sbb
jmp
sbb
cmp
retf
movs
mov
idiv
xchg
or
sub
pop
sbb
dec
call
repnz
and
jle
push
push
ins
or
pop
in
sub
pusha
cmps
cmp
scas
push
xor
rcl
fwait
pop
dec
jmp
es
jmp
addr16
aam
jmp
movs
int3
mov
xor
dec
and
hlt
mov
jmp
adc
fst
xchg
movs
gs
sub
add
xor
movs
fld
cmp
xchg
pushf
dec
sub
shl
fidiv
imul
sbb
mov
add
mov
dec
push
add
push
mov
cmp
out
mov
lea
sub
xor
cmp
sbb
fnsave
popa
push
cs
frstor
sahf
std
imul
(bad)
jl
push
sbb
repz
jne
je
jmp
test
js
add
stos
cmc
mov
jbe
push
xchg
push
imul
call
mov
dec
sbb
and
jae
push
jecxz
jmp
imul
es
push
loopne
xrelease
pop
or
sub
jle
pop
loope
iret
arpl
pop
xor
mov
add
stos
adc
ss
mov
mov
imul
in
mov
int3
je
outs
ds
stos
repnz
push
daa
push
sub
leave
fs
inc
out
mov
retf
popa
cwde
je
push
or
es
adc
and
pop
or
pop
add
jl
dec
mov
dec
pop
push
loope
lds
sahf
aad
(bad)
xchg
shl
push
cld
xor
push
aaa
jb
mov
xchg
push
jbe
and
sbb
sub
daa
dec
test
sbb
xchg
scas
push
cs
mov
mov
xchg
jecxz
dec
adc
jbe
and
aad
mov
sbb
jmp
cmps
and
es
mov
es
sbb
push
call
jns
pop
scas
into
xchg
dec
pushf
fmul
mov
mov
xchg
jno
add
adc
and
and
add
and
xor
pop
xchg
xlat
lahf
push
in
int
aad
lods
pop
popa
in
cmp
add
push
call
into
out
std
popf
call
jmp
stos
jbe
mov
mov
das
test
into
xchg
push
inc
sbb
fldl2t
popf
lds
sbb
push
sbb
cmovp
inc
call
sub
inc
cmp
inc
push
and
out
push
fadd
sub
outs
sbb
push
xor
cmp
imul
cld
pushf
std
arpl
pop
lahf
dec
add
push
adc
sbb
add
xor
and
push
and
jp
inc
adc
ret
sbb
shl
jnp
jbe
(bad)
in
ret
xadd
jmp
daa
dec
ds
push
push
adc
int
outs
or
arpl
add
call
iret
popf
imul
loopne
xrelease
je
cmc
cmp
push
out
and
jo
pop
xor
xchg
mov
or
fidivr
retf
mov
loopne
cmps
stos
movs
cmps
leave
popa
cmps
jl
and
mov
xchg
rcr
call
pop
or
jmp
dec
gs
icebp
xchg
(bad)
sub
cdq
dec
dec
and
ret
loope
mov
sub
out
movs
ins
and
ror
pusha
xor
movs
std
arpl
sub
mov
mov
or
and
fst
sahf
and
sbb
adc
sahf
mov
mov
or
mov
and
jg
and
pusha
adc
adc
cld
retf
fwait
mov
xchg
icebp
mov
ret
mov
out
out
std
sub
dec
jae
jbe
and
lea
(bad)
xchg
movs
sti
add
stos
(bad)
mov
mov
bnd
aad
cld
add
aam
aam
movs
out
mov
mov
fstp
pop
jmp
test
sub
and
mov
mov
add
cmp
mov
mov
cwde
lds
lods
lods
call
(bad)
fisttp
movs
jmp
sbb
pop
arpl
jmp
xchg
fmul
mul
xchg
dec
or
xchg
mul
aad
add
fild
sar
enter
loop
lock
fmul
push
sbb
xchg
xlat
and
and
sbb
test
jo
icebp
jge
inc
mov
mov
imul
pushf
clc
mov
pop
icebp
adc
xor
inc
das
pop
mov
jl
and
cmps
hlt
and
retf
es
loop
xor
out
repz
mul
mov
push
jmp
inc
or
push
sahf
movs
cli
add
fwait
iret
stos
fld
mov
push
sbb
push
push
xchg
clc
or
cld
sub
and
call
mov
adc
jno
pop
loope
scas
in
call
inc
xor
mov
adc
mov
sub
inc
cmp
fadd
mov
mov
pushf
ret
and
je
and
pop
push
mov
jl
sub
jmp
mov
cmp
in
cmp
popa
push
iret
add
ret
mov
leave
mov
outs
pop
cvtdq2ps
ins
imul
clc
test
rcl
mov
and
scas
cld
mov
jle
stc
ins
das
pop
scas
in
cmp
mov
and
sub
mov
fs
loopne
adc
jnp
sub
xchg
scas
call
add
add
jp
(bad)
aam
pop
adc
and
inc
adc
shr
aam
and
out
or
cmp
dec
adc
jo
js
jmp
dec
jmp
(bad)
(bad)
test
xchg
mov
mov
pop
das
jp
inc
adc
dec
pushf
adc
jb
sub
adc
push
lock
test
loop
lahf
fmul
and
lahf
int
mov
cli
or
pop
add
dec
mov
mov
sbb
mov
fdivr
stos
mov
add
rcl
xchg
jg
push
ds
mov
xchg
cwde
ret
pop
push
aaa
jo
and
repnz
in
mov
push
push
push
ds
pop
loope
popa
pusha
add
(bad)
arpl
sahf
fld
mov
movs
div
or
dec
loope
daa
sbb
in
xchg
addr16
cwde
out
fmul
jo
push
nop
repnz
shr
jb
je
cmp
scas
push
xor
cld
nop
fidivr
or
(bad)
xlat
nop
icebp
mov
imul
(bad)
pop
xchg
rol
imul
enter
sbb
lahf
fstp
and
and
push
mov
sbb
and
jno
dec
daa
dec
sbb
stos
mov
outs
or
repnz
mov
jno
jae
sub
idiv
ss
pusha
stos
jle
add
jns
es
enter
call
ret
out
mov
test
jns
shr
test
cwde
iret
loopne
shl
aaa
dec
adc
js
inc
sub
jmp
cs
retf
or
outs
or
aas
shl
jmp
jecxz
ds
cmc
mov
mov
sahf
iret
mov
mov
xchg
les
fistp
cmp
lods
retf
mov
cwde
shr
dec
out
loopne
pop
and
xor
jo
es
aas
jns
xor
test
push
push
call
fld
scas
fdivr
add
push
sub
adc
sbb
retf
fldcw
push
out
in
test
jae
inc
das
pop
mov
sub
mov
xchg
jp
push
xchg
mov
mov
cli
add
inc
cmp
retf
jge
outs
add
leave
mov
push
rcl
dec
cmps
sub
movs
push
pop
das
data16
cmp
std
or
das
jge
pop
sub
pop
adc
jbe
pop
out
sub
repz
inc
or
dec
or
add
cmp
aaa
jp
int3
xchg
retf
adc
or
sub
lock
adc
adc
movd
shl
fs
gs
cwde
jne
pop
xchg
xchg
dec
inc
add
pop
sbb
aam
in
std
or
jno
jne
jl
jno
and
maxps
mov
cmc
mov
add
push
dec
sbb
xor
adc
push
push
sub
mov
mov
popa
sbb
or
gs
jge
dec
adc
rcl
pop
or
cmc
and
mov
les
cmc
sahf
sti
arpl
xchg
stos
sar
aad
aaa
(bad)
cmp
jnp
dec
adc
sbb
dec
daa
inc
ss
cmp
pop
and
call
sbb
pop
sub
add
dec
or
icebp
and
push
mov
xchg
retf
adc
pop
xor
ins
sbb
xor
dec
pop
inc
call
xchg
ret
out
ror
aad
repnz
mov
or
xchg
imul
xor
pop
loopne
dec
add
xchg
call
sub
shl
pop
cmp
sub
mov
xchg
iret
nop
retf
add
jl
pop
sbb
lock
adc
add
xor
and
add
dec
lahf
ret
mov
mov
(bad)
stc
mov
xor
das
hlt
ins
loope
mov
arpl
and
popa
cmp
sub
aam
cmp
mov
cmp
inc
add
repz
sbb
pop
xor
jb
pop
sub
pop
inc
pop
jns
(bad)
(bad)
clc
mov
rdtsc
jge
in
iret
pushf
stos
and
jno
repz
les
rcr
inc
adc
push
cmp
fist
push
cmp
mov
cdq
fild
mov
sbb
std
fwait
retf
cmp
and
xchg
rol
in
and
xchg
imul
scas
(bad)
bound
xchg
sbb
mov
and
out
jbe
inc
or
pop
add
scas
fild
dec
ds
add
adc
inc
push
jno
and
rcl
jnp
sbb
dec
inc
jecxz
lods
cli
push
mov
sub
fld
push
or
push
cmp
xchg
fadd
xchg
mul
test
scas
lds
xchg
cs
scas
es
cld
ror
fsubr
cmc
jl
xor
cmovb
shl
lahf
cld
popa
in
adc
adc
mov
mov
fnstcw
jns
and
call
jge
mov
fst
jns
sub
and
mov
loop
fs
pop
aaa
jle
dec
push
cmp
jp
ins
sbb
cmp
pop
xor
xchg
das
inc
add
ins
sub
mov
mov
sub
xor
sbb
xor
push
test
test
es
add
repz
cmps
mov
into
mov
pop
push
in
aam
cmp
lds
cld
test
and
cmps
adc
loopne
push
or
xchg
add
xchg
iret
cs
out
call
inc
add
fwait
shl
imul
or
xchg
push
add
test
fstp
cwde
ja
dec
mov
sbb
and
inc
scas
xchg
inc
mov
jnp
inc
fnstcw
xchg
inc
mov
sti
and
dec
in
and
cmp
aaa
repz
popf
dec
stos
ja
repnz
push
or
dec
and
mov
imul
(bad)
pop
repnz
push
sbb
or
repnz
cld
jp
ins
stos
xchg
jno
xor
cmp
sbb
(bad)
outs
fldcw
xchg
dec
mov
pop
aad
adc
push
call
xchg
jge
cmp
ds
scas
mov
mov
sub
push
test
pushf
dec
mov
pslld
xchg
mov
ins
xchg
(bad)
jb
add
test
push
fild
sub
test
cmp
pop
(bad)
or
loope
sub
icebp
sub
pop
test
pop
(bad)
ins
iret
pop
stos
call
cmp
cmp
pop
(bad)
or
sbb
aad
add
xlat
cmp
sub
xor
sub
nop
in
cmps
cdq
movs
outs
stos
jno
arpl
or
fbld
out
adc
scas
sahf
inc
mov
(bad)
inc
enter
pop
shr
mul
sbb
push
pop
cmp
ror
fsub
add
out
das
adc
and
sub
repnz
fld
loop
ins
mov
add
jo
test
loopne
leave
cmp
repnz
add
or
popa
(bad)
and
stos
dec
mov
lds
dec
enter
(bad)
sub
adc
inc
add
out
(bad)
and
in
fnstsw
add
out
xor
jo
je
pop
lea
jp
shr
push
adc
jmp
cld
dec
lods
jns
xor
jg
push
inc
mov
imul
adc
pop
mov
push
scas
add
add
and
ret
and
and
out
add
and
cmp
dec
mov
lea
or
daa
in
frstor
cld
pop
xchg
sahf
fwait
inc
mov
mov
add
jns
jl
pop
movs
mov
and
xor
mov
rol
out
mov
test
repnz
fsub
cmp
pop
mov
dec
leave
das
out
out
js
inc
lea
pushf
addr16
push
xchg
or
dec
fdivr
pop
adc
hlt
pop
stos
js
cs
rcl
sub
scas
sahf
dec
mov
jmp
(bad)
and
out
sub
pop
mov
mov
dec
mov
jg
ds
xor
cmp
cmpps
pop
sbb
test
pop
test
dec
mov
cwde
sbb
inc
lea
push
std
cmp
ret
add
xor
push
jmp
out
sub
test
movs
mov
fs
mov
aaa
in
in
xor
hlt
push
mov
imul
rcr
xchg
test
lods
inc
mov
push
mov
je
xchg
inc
cld
sub
cmp
out
dec
fadd
mov
(bad)
pop
stos
xchg
ins
iret
pop
mov
cwde
iret
xor
sar
add
push
loope
aad
mov
push
and
jnp
add
inc
fild
loop
out
pop
fiadd
clc
sub
outs
fisub
out
add
iret
aaa
(bad)
js
fwait
inc
test
sub
sub
fdivr
pop
int
test
mov
push
in
push
mov
mov
pop
sar
push
mov
fimul
cmp
pop
pminsw
popa
(bad)
inc
sbb
mov
and
push
iret
mov
dec
mov
jbe
mov
sbb
repz
sub
or
and
add
repnz
not
jnp
mov
stos
data16
push
push
inc
mov
lds
popf
js
dec
into
outs
xchg
ja
sub
cmp
push
mov
push
mov
mov
inc
movs
jle
mov
cmc
and
test
mov
add
pop
mov
ins
cmps
mov
popf
jno
sub
pop
jbe
xchg
push
(bad)
sub
and
cmp
out
push
mov
out
add
push
mov
cmps
mov
mov
(bad)
mov
scas
push
xchg
xchg
jge
cwde
call
imul
and
aaa
jmp
call
mov
out
loop
mov
mov
test
jg
dec
jne
xor
adc
or
or
out
dec
mov
add
cmp
and
hlt
push
mov
out
pop
shr
leave
cmp
mov
jmp
pop
fadd
aam
in
sub
ds
sbb
loopne
cmp
pop
test
loopne
mov
ss
sbb
push
(bad)
or
clc
ins
stos
push
loop
jmp
dec
mov
jp
add
cmp
(bad)
sub
cmc
push
xor
sub
ret
cmp
cs
fwait
sahf
inc
mov
lahf
xchg
xchg
inc
into
and
sbb
xchg
fld
pop
xchg
inc
fld
movs
mov
in
pop
mov
adc
add
retf
rcr
popa
shr
push
repnz
inc
rcl
or
and
and
pop
shr
loopne
jmp
(bad)
push
aad
push
stc
add
mov
jge
popf
xchg
xchg
jbe
and
or
cmp
popf
xchg
data16
or
adc
jne
xor
daa
jbe
xchg
mov
push
ss
stos
rcl
stos
scas
mov
and
sub
adc
push
lods
inc
mov
fwait
dec
or
sub
push
ror
mov
shl
inc
mov
call
out
add
ds
clc
ss
hlt
or
cmp
xchg
ins
fistp
imul
adc
daa
clc
xor
sub
inc
xlat
dec
mov
shl
cs
mov
cmps
jae
add
push
mov
jp
xchg
and
call
cmp
xchg
test
cs
or
cmp
sub
es
mov
add
adc
xor
pop
iret
dec
shl
clc
pop
sbb
add
or
add
inc
mov
xchg
ss
mov
ja
mov
sbb
cld
push
cmps
cdq
inc
repnz
mov
movs
test
mov
mov
iret
pop
mov
dec
cmp
mov
call
and
cs
aas
push
int
loope
int3
cmp
dec
fadd
push
scas
xchg
arpl
push
mov
mov
pop
test
jno
cdq
ins
mov
call
push
movs
xchg
jl
enter
adc
aas
adc
loope
scas
js
cmp
lods
jg
ins
into
cmp
mov
adc
push
ret
adc
jnp
mov
repnz
xchg
data16
or
ss
das
sbb
push
add
pop
lea
inc
mov
xlat
sub
pop
mov
jno
fwait
jbe
sbb
pop
test
nop
js
sub
add
dec
repnz
push
mov
xchg
aam
adc
aam
test
test
push
mov
cmp
adc
xchg
jb
xor
jmp
sar
sbb
inc
shr
out
or
add
cld
daa
cs
popa
adc
cld
cmp
inc
ficom
xor
or
stc
pop
test
pushf
xchg
mov
add
sub
inc
mov
imul
cmp
cmp
pop
sub
jmp
fwait
pushf
outs
in
js
fstp
mov
imul
add
pop
mov
jb
add
es
ins
lea
fwait
inc
sub
mov
test
mov
clc
push
mov
cmps
test
(bad)
out
sti
and
jbe
dec
div
push
test
mov
pop
or
sub
push
call
pusha
sbb
adc
sub
sbb
and
push
mov
pop
mov
xchg
popf
jp
pop
mov
mov
jecxz
xchg
js
lahf
xchg
push
xor
adc
sub
adc
cld
dec
lods
dec
mov
je
sub
add
and
in
add
push
sub
sti
das
out
inc
(bad)
and
pop
repnz
mov
clc
and
jmp
mov
stos
dec
mov
pop
cmps
arpl
or
lock
push
cmps
inc
test
sbb
(bad)
xor
xor
mov
and
(bad)
push
mov
pop
mov
(bad)
aaa
out
cmp
cmc
adc
adc
ins
xlat
dec
mov
(bad)
cmp
or
push
ret
xor
and
cli
xor
xchg
cmps
arpl
add
hlt
add
pop
icebp
pop
retf
sub
push
movs
jne
sub
rcl
xchg
popa
stos
je
mov
xchg
mov
add
jp
pop
mov
push
xor
and
sbb
repnz
mov
out
xlat
cmp
ret
xchg
outs
aam
shl
loop
mov
scas
push
xchg
outs
fadd
adc
push
add
jns
jnp
js
mov
jg
and
and
add
push
mov
jno
sub
xchg
mov
xchg
xchg
push
imul
cwde
mov
out
pop
mov
scas
jae
push
jmp
push
mov
(bad)
push
les
sub
jecxz
hlt
pop
xchg
mov
xchg
test
pusha
fnstcw
std
sub
lock
call
mov
mov
ret
sbb
cmp
cmc
pop
out
mov
inc
sbb
scas
ins
(bad)
push
adc
sub
prefetch
sbb
adc
dec
movs
outs
jmp
fisttp
loopne
iret
or
std
xor
jmp
scas
push
jl
xor
arpl
xor
pusha
retf
pop
les
out
push
xor
xchg
popa
mov
lods
pushf
dec
int
or
xor
cld
dec
stos
inc
mov
cdq
inc
mov
mov
imul
cld
das
sbb
shr
lds
ds
jb
jo
mov
sub
adc
cmp
dec
mov
js
pop
mov
mov
sahf
push
dec
call
add
lahf
data16
test
jl
lahf
jo
lods
mov
outs
push
adc
or
ret
push
ins
mov
iret
pop
aad
lock
test
jmp
imul
jl
cmps
jg
inc
test
ins
fist
addr16
or
adc
loopne
repz
in
jge
dec
retf
sub
movs
inc
sbb
lahf
jne
mov
dec
fsub
or
sub
outs
mov
iret
and
in
cmp
and
adc
or
xor
push
imul
loope
int
pop
in
sub
daa
jae
or
push
shl
es
out
fld
(bad)
xor
lods
call
outs
into
jl
pop
stos
popf
jl
pavgw
cmp
push
aas
pslld
or
aaa
push
dec
cli
cmp
xor
in
jge
fwait
xchg
je
ss
imul
das
in
and
es
inc
fdivr
cmps
xchg
test
cmps
icebp
push
fiadd
pop
(bad)
xor
es
pop
push
stos
mov
sbb
adc
daa
repz
mov
cdq
jae
sub
pop
aam
inc
mov
stos
fwait
test
sbb
jmp
stos
dec
mov
or
adc
dec
int3
dec
into
sub
in
leave
and
pop
jmp
loopne
mov
xchg
xchg
mov
ins
cmps
inc
rcl
lea
and
add
mov
pop
mov
sti
push
mov
cmp
(bad)
and
xchg
dec
movs
xchg
xchg
jb
xor
jl
aaa
loope
xlat
xor
jns
ja
popf
imul
lahf
jle
push
push
cli
cmp
inc
iret
dec
test
sub
call
adc
and
aaa
push
out
cs
adc
mov
jno
xor
inc
icebp
xor
push
div
add
aas
inc
sub
sub
dec
mov
retf
fs
mov
lods
hlt
jns
gs
pop
mov
jbe
push
jb
mov
dec
(bad)
push
mov
fnstsw
inc
rcl
xchg
rcl
test
shl
xchg
pushf
mov
fnsave
rol
aam
loop
mov
add
push
and
adc
aas
sbb
sbb
movs
ficomp
sar
pop
mov
enterw
cmp
ds
inc
sub
mov
or
(bad)
sbb
dec
test
sbb
jecxz
sub
cmp
push
call
sbb
and
test
mov
mov
xor
or
adc
in
push
ror
jge
cmp
xor
pop
repz
push
sbb
mov
jns
inc
mov
dec
mov
nop
stc
dec
scas
push
and
mov
jge
dec
les
jp
cwde
jbe
movs
mov
sub
jmp
mov
xlat
and
push
jmp
fcom
jge
jl
outs
cmp
sub
and
mov
jb
jbe
lahf
jns
loopne
jmp
cdq
inc
int
in
daa
or
pop
xchg
push
sar
pop
icebp
cdq
mov
jae
mov
push
into
or
push
mov
shl
std
js
or
js
xor
(bad)
push
int
movs
xchg
rol
pop
ror
xor
sub
cmps
mov
and
push
(bad)
loopne
cmc
push
leave
cmp
or
jg
pop
mov
stos
inc
mov
cmp
lock
mov
test
jae
sbb
test
je
cmp
and
xor
xor
cmp
sub
push
mov
jns
inc
fdivr
inc
mov
xchg
mov
daa
cld
or
icebp
sub
enter
mov
inc
fisttp
call
dec
aad
cld
pop
mov
fwait
enter
sub
popa
fist
xchg
xchg
inc
test
xlat
pop
fiadd
loopne
sbb
or
add
and
(bad)
push
aad
out
aad
in
push
scas
imul
test
xchg
jno
dec
(bad)
jae
add
fcom
clc
and
cmp
and
test
sub
add
sti
push
mov
movups
pop
fstp
mov
jg
cs
aas
ret
mov
inc
mov
std
and
pop
mov
lea
dec
fstp
loope
fs
dec
int
retf
adc
pop
aad
push
inc
cmps
mov
je
pop
mov
je
ds
loop
enter
xor
pop
pop
mov
jbe
dec
mov
mov
lahf
dec
invd
sbb
outs
mov
mov
add
or
dec
lods
outs
sub
push
sar
adc
(bad)
push
mov
outs
lods
jne
xchg
mov
inc
stos
xchg
bound
add
xor
(bad)
ds
pop
fmul
xor
dec
sbb
dec
ret
cmp
and
ret
add
xor
lock
mov
or
xor
neg
sub
pop
mov
ret
add
pop
mov
pop
std
add
or
push
test
pop
movs
push
jnp
test
push
fild
adc
push
cmps
xchg
add
call
jmp
enter
cmp
sbb
es
jecxz
sbb
xor
xor
or
jecxz
inc
mov
aam
pusha
cli
pop
add
jo
das
psraw
xor
and
xchg
jge
mov
jne
call
int3
lea
inc
shl
test
and
push
out
mov
xchg
jo
and
sahf
xor
loop
cmp
aas
rcl
jb
psrad
push
sahf
push
xor
sbb
cmp
push
out
add
xor
in
out
mov
sbb
push
shr
pop
test
out
inc
fild
(bad)
xor
dec
mov
jae
xor
push
rcl
pushf
xchg
js
xchg
inc
or
sar
add
mov
int
loope
sbb
and
imul
retf
cmp
mov
jl
popf
jp
cdq
dec
rcl
aas
out
pop
out
sahf
ins
fidivr
hlt
and
pop
pop
pop
push
icebp
pop
int
mov
pusha
fldcw
sub
push
mov
into
sub
loop
retf
sbb
jmp
jp
fs
ins
stos
call
mov
jno
cmp
pop
adc
and
xor
pop
mov
jnp
jae
push
mov
push
ins
mov
test
cmps
jg
cmps
mov
mov
aas
jmp
mov
aad
xor
sbb
and
cmp
dec
retf
ja
sub
in
cmp
push
les
xor
cmp
and
cmp
(bad)
push
leave
sub
push
mov
push
and
pop
xlat
pop
in
movs
cmps
jp
sub
xor
dec
retf
cmp
aas
jnp
dec
cmc
inc
mov
mov
sub
pop
test
xchg
or
cmp
stc
dec
mov
outs
add
and
ror
sbb
sub
pushf
dec
scas
lea
jl
imul
sbb
pop
mov
lods
test
cmp
cmp
pop
mov
nop
sahf
ja
dec
test
mov
jmp
xchg
jb
jle
addr16
lods
inc
mov
xlat
and
push
enter
out
lods
call
cmp
das
out
rcr
ins
cmps
xchg
jle
nop
call
pop
int3
cmp
mov
bound
int
mov
jnp
adc
cmp
push
mov
mov
add
push
lods
js
jb
pushf
xchg
arpl
xchg
outs
retf
push
aas
add
sbb
sub
imul
cmc
push
mov
sub
les
in
sub
sub
call
adc
pop
mov
aad
mov
rcl
call
in
adc
cld
sub
and
mov
push
xchg
call
lea
inc
mov
pop
mov
mov
add
adc
sub
xor
out
dec
mov
addr16
add
pop
mov
cmp
in
out
aaa
cmp
and
daa
cmc
dec
mov
test
jg
es
dec
sbb
fcom
sbb
out
dec
iret
and
pop
mov
add
das
es
sub
ficom
call
mov
cmps
inc
mov
add
pop
mov
jge
inc
add
sahf
mov
(bad)
and
int3
xchg
mov
sub
and
jb
ins
lods
mov
xor
(bad)
test
jl
sub
div
dec
mov
push
imul
shl
(bad)
jle
and
push
add
dec
mov
xor
es
adc
clc
ss
call
pop
fmul
pop
mov
jnp
xchg
mov
xlat
add
hlt
dec
xor
jge
ds
scas
mov
fstp
in
stc
xor
jecxz
fst
cmp
jg
pop
test
push
mov
xchg
push
outs
fistp
fs
fist
test
fnstsw
ds
push
mov
cmp
scas
outs
fld
in
fld
pop
retf
inc
sub
enter
xor
jl
(bad)
xchg
popa
xchg
nop
mov
std
pop
mov
push
out
out
jae
or
add
stc
cs
sub
lds
push
fnstsw
out
sub
push
lods
popf
imul
mov
cdq
inc
ficom
je
pusha
fcomp
hlt
add
pop
neg
xchg
popf
imul
dec
rcl
mov
je
adc
sti
sbb
pop
out
and
mov
jne
xchg
nop
jno
add
add
pop
mov
mov
xor
ins
mov
pop
shl
sbb
jg
imul
jge
imul
add
mul
ds
and
adc
add
cld
and
mov
and
(bad)
push
arpl
pop
xor
imul
push
cwde
xchg
inc
movs
pusha
xlat
xchg
jbe
xor
or
xor
daa
pop
sub
int
ror
scas
xchg
nop
mov
in
(bad)
jb
sub
jo
inc
fist
dec
add
fbld
push
loop
lock
sbb
xor
mov
mov
xchg
jb
mov
jmp
leave
dec
test
test
shr
sar
in
xor
gs
and
push
mov
(bad)
xor
fnstsw
add
adc
das
adc
push
and
push
fcomp
rcr
dec
mov
mov
push
shl
daa
adc
and
lea
sahf
outs
shr
loopne
sbb
aas
push
jbe
cmp
jnp
inc
xchg
and
retf
ss
pop
mov
pop
iret
es
idiv
xchg
jb
jle
repnz
mov
imul
xor
lock
ins
leave
push
mov
fidivr
jmp
sub
test
cdq
jns
pop
repz
xchg
push
add
and
jge
dec
mov
lods
pushf
bound
sub
mov
mov
enter
mov
leave
cmp
push
icebp
dec
mov
mov
test
es
or
hlt
es
and
cmp
pop
fild
repz
pop
add
stos
dec
add
ss
ins
movs
cdq
push
shr
add
jns
pop
stos
data16
sub
push
mov
int
mov
mov
xchg
je
jbe
mov
daa
sbb
rcr
push
xchg
outs
iret
cmp
cmp
hlt
xor
paddb
add
mov
mov
arpl
xor
push
mov
fild
or
int
push
shl
dec
fild
push
pop
adc
sahf
js
retf
add
and
or
and
call
mov
cmps
dec
mov
(bad)
sub
pop
movs
xchg
je
jns
pushf
dec
xchg
clc
dec
retf
inc
in
add
sub
push
mov
shr
ins
fidivr
icebp
pop
into
push
movs
js
call
or
sub
xor
iret
aas
ret
inc
and
jae
push
jg
mov
test
popf
inc
sub
mov
ret
je
jecxz
lods
jp
push
retf
retf
in
xchg
xchg
xchg
outs
adc
jbe
pushf
xchg
leave
ss
push
mov
dec
mov
dec
stos
dec
fdivr
mov
xchg
imul
(bad)
sub
pop
ficomp
jg
dec
fst
xchg
jge
cmp
dec
mov
mov
add
pop
ficom
jo
repz
mov
js
add
jo
and
sub
or
stc
and
push
jmp
popf
dec
mov
mov
jge
add
and
cmp
adc
and
push
mov
(bad)
push
mov
aaa
sbb
and
pop
lock
mov
(bad)
out
mov
mov
cmc
sub
int
mov
adc
loope
sbb
lds
in
and
or
cmp
call
(bad)
jnp
push
mov
imul
shr
movs
jb
jnp
sub
stc
pop
shl
mov
pop
loope
mov
ficomp
outs
lods
mov
movs
inc
and
mov
popa
mov
in
aad
mov
xor
push
aam
sbb
sub
cmp
les
add
in
cmc
inc
mov
dec
mov
aad
push
test
push
mov
push
mov
inc
mov
inc
cmps
arpl
pop
movs
cmc
es
rcr
sub
add
add
sbb
lds
call
and
int
dec
sar
dec
cmps
lea
mov
push
inc
stos
data16
in
mov
adc
adc
and
fstp
push
cmp
ror
and
nop
ja
dec
mov
std
push
xchg
lods
lds
fwait
dec
mov
call
mov
aad
ss
lds
fisubr
hlt
xor
loope
cmp
mov
daa
icebp
daa
loopne
mov
cmp
lock
mov
nop
cdq
outs
sbb
adc
aaa
jbe
xor
fnstsw
mov
xchg
int3
das
sbb
iret
and
add
jno
js
dec
les
call
xlat
pop
xchg
data16
push
pop
cmp
push
aam
adc
push
(bad)
sub
dec
mov
mov
test
jge
and
pop
mov
fisttp
xchg
jo
ins
cdq
jle
pop
loop
mov
jae
xor
or
cmp
out
pop
mov
(bad)
fwait
mov
in
ins
mov
sbb
push
lods
lea
stos
xchg
xchg
xchg
push
js
int3
push
fimul
loop
mov
rcl
mov
mov
and
div
imul
ficomp
mov
cmp
add
pop
sub
cld
add
ins
aad
int3
or
int
into
and
and
loope
xchg
jmp
xchg
jg
inc
retf
test
ret
shr
test
pop
mov
cmp
add
jnp
pop
movs
test
xor
jecxz
fidiv
adc
jno
pop
mov
xor
cmc
pop
fnstsw
loope
retf
pop
shl
adc
mov
push
pop
iret
and
ds
cmp
pop
(bad)
sub
push
retf
mov
push
test
xor
in
xor
jns
mov
jecxz
std
and
loopne
movs
in
and
jp
xchg
dec
sub
sub
push
fsubr
jb
xchg
or
loope
pop
push
aad
sub
xor
inc
enter
fnstcw
sbb
xor
push
es
repnz
jmp
test
rol
sbb
ins
mov
fwait
arpl
push
fadd
sub
or
pop
sbb
dec
jmp
aaa
loope
lods
xchg
nop
xor
retf
and
inc
ror
xor
add
pop
fnsave
pop
les
and
sub
fwait
xchg
sbb
add
add
push
shr
out
mov
retf
dec
int3
pop
retf
out
shr
add
pop
xchg
(bad)
je
pop
scas
mov
inc
repz
adc
mov
lea
clc
inc
add
cmc
dec
stos
(bad)
js
scas
mov
add
daa
adc
lock
cmc
inc
test
scas
xor
mov
popa
xlat
or
dec
mov
mov
cdq
jns
addr16
ja
push
mov
stos
pusha
aam
test
xor
mov
movs
pusha
es
pop
les
paddsb
inc
mov
push
mov
jns
lea
sub
pop
div
(bad)
pop
mov
pop
lods
scas
ja
xchg
iret
push
jmp
les
nop
xchg
jns
xor
pop
retf
add
and
sbb
cmp
or
push
cmp
jmp
lds
inc
test
dec
stos
inc
mov
mov
in
and
sar
sub
outs
fist
gs
ror
mov
jp
adc
cld
or
dec
jmp
sbb
xor
cld
add
jl
pop
sub
xor
jecxz
adc
and
push
cmps
int
mov
xchg
lahf
xchg
jo
sub
xchg
ins
ficom
cmp
sti
pop
xchg
push
fcomp
rcr
fild
pop
jmp
xor
enter
retf
mov
xor
and
dec
mov
fnstsw
iret
stos
imul
stc
das
sbb
push
loop
movs
(bad)
(bad)
out
ja
xchg
les
jmp
ins
mov
aaa
jmp
push
(bad)
outs
es
inc
adc
push
scas
lahf
sub
call
xlat
xor
aaa
push
icebp
sub
fwait
test
js
xor
and
and
push
sbb
inc
scas
cwde
jge
out
and
push
sar
(bad)
xor
inc
test
ror
xchg
inc
shl
or
sub
adc
sbb
pop
and
repnz
jecxz
mov
lods
pusha
or
repnz
sbb
daa
sbb
add
add
cmp
jmp
in
push
lods
mov
and
les
or
scas
mov
push
sar
inc
(bad)
push
shl
push
fisubr
daa
dec
std
and
jecxz
lock
cmps
jo
imul
cmps
xchg
push
mov
sub
or
sbb
cmp
or
jmp
mov
(bad)
out
add
adc
outs
fcom
fst
dec
shl
std
inc
movs
mov
xor
push
adc
out
ret
push
jp
jg
inc
mov
pop
test
mov
cli
sub
add
add
or
jmp
add
xor
stc
sub
push
fidivr
mov
jg
push
std
inc
pop
sbb
push
in
push
aad
push
out
push
inc
aam
out
dec
(bad)
pop
movs
shl
in
js
jl
dec
(bad)
sub
pop
fmul
jge
outs
into
and
lods
(bad)
fisubr
cmp
or
pop
fidiv
pop
int
movs
loope
leave
xor
pop
mov
ins
sti
push
iret
cmp
or
enter
call
mov
xor
test
xchg
jno
in
fst
stos
rcl
sbb
jmp
clc
dec
mov
mov
mov
jb
aas
add
xor
pop
fadd
sbb
or
stos
mov
adc
mov
les
mov
mov
inc
lock
jmp
mov
jbe
and
push
xlat
rcl
inc
movs
cwde
jno
dec
cli
ins
int3
cmps
pusha
les
mov
or
mov
mov
lds
cmp
dec
leave
push
movs
cdq
mov
mov
mov
xchg
xchg
ror
out
or
sub
xor
lds
inc
lock
shl
cmp
xchg
adc
mov
or
retf
push
mov
les
cmp
xor
and
push
daa
add
adc
out
pop
rcr
neg
push
adc
cmp
or
cmp
adc
jp
xchg
popf
mov
in
outs
cmps
movs
test
pop
adc
ror
sti
inc
mov
inc
es
fld
inc
retf
and
xchg
nop
mov
pushf
scas
mov
add
jecxz
les
push
fcom
jmp
add
xor
sbb
pop
enter
sub
jno
push
(bad)
and
push
rcr
inc
movs
aad
add
pop
call
arpl
scas
scas
imul
push
enter
pop
add
sub
add
aaa
add
jle
imul
and
fbld
or
xor
pop
lock
mov
inc
ret
jl
xchg
xchg
call
nop
xchg
push
lods
cdq
mov
aaa
loope
movs
nop
mov
rcr
ret
push
into
push
xor
repz
and
loop
cmp
adc
jge
mov
stos
mov
pop
fsub
add
imul
cdq
fsub
sbb
adc
dec
rcl
mov
mov
xchg
xchg
mov
jmp
stc
dec
(bad)
sub
vpermt2b
pop
test
dec
in
mov
fistp
js
pop
es
inc
cli
sub
sbb
dec
(bad)
and
sub
addr16
pop
int
(bad)
pop
iret
mov
push
sar
std
jl
and
dec
scas
jmp
mov
sub
jne
inc
fidiv
dec
add
push
cmps
mov
arpl
sbb
cli
push
jecxz
leave
push
movs
mov
das
adc
xor
push
xchg
mov
jmp
xchg
cmp
das
push
or
jo
pop
adc
and
adc
jp
lods
mov
mov
sub
xchg
call
push
jecxz
mov
arpl
es
dec
shl
xor
push
iret
inc
pop
out
fisub
sbb
adc
jg
ja
sub
dec
aad
fisubr
inc
lock
nop
mov
xchg
popa
movs
mov
mov
ins
imul
jp
test
inc
fdivr
inc
fnstenv
inc
sub
or
sbb
je
sub
sbb
loopne
xlat
jge
push
aad
inc
leave
xor
jb
pop
hlt
jle
sbb
add
inc
mov
xchg
ror
jbe
jp
pushf
xchg
mov
test
dec
rcl
daa
in
ins
leave
cmp
add
cmp
dec
mov
leave
pop
sar
mov
mov
and
shl
in
sbb
push
mov
fistp
adc
adc
sbb
pop
ficom
xchg
data16
cs
add
xor
sub
hlt
scas
xchg
xchg
xchg
add
das
or
icebp
jnp
inc
cmps
test
inc
fsubr
xchg
nop
mov
jne
outs
retf
and
adc
out
xchg
xchg
mov
dec
iret
das
das
or
fwait
xchg
fs
test
popf
popa
lods
mov
aam
sub
adc
sub
lds
and
dec
ror
push
stc
jg
daa
jmp
repnz
jmp
cmp
sbb
loop
idiv
mov
mov
bound
stos
data16
jl
dec
xlat
jle
cmp
jmp
mov
xchg
pusha
repnz
in
pop
cmps
cmps
scas
imul
hlt
addr16
leave
push
sti
inc
aam
cmp
out
inc
jmp
sub
fldenv
ds
and
jns
push
hlt
dec
ret
cmc
neg
fs
and
cmp
sbb
loopne
cmp
cmp
sti
dec
lods
mov
mov
(bad)
jnp
imul
fstp
inc
fsubr
xchg
xchg
mov
sahf
stos
scas
fs
mov
mov
jno
and
and
push
mov
loope
hlt
cmp
push
movs
inc
and
sbb
ficomp
adc
cmp
aaa
sbb
push
out
out
pop
mov
popf
mov
rol
mov
jae
dec
xchg
sub
es
and
enter
mov
sbb
cmp
in
and
dec
ds
xchg
xchg
mov
add
or
add
add
pop
sbb
sub
pop
xchg
inc
cmc
pop
xchg
inc
scas
arpl
gs
pop
hlt
ins
shr
xor
mul
or
mov
pop
shl
jno
cwde
lahf
inc
retf
hlt
mov
dec
mov
movs
xchg
pop
shr
jmp
dec
aad
lea
sub
cld
ins
retf
sbb
cs
hlt
dec
scas
pushf
jg
test
in
fisttp
call
xchg
dec
imul
xchg
imul
sti
or
sub
jmp
shl
test
xchg
jb
xchg
jge
jmp
sbb
inc
mov
cmp
push
in
pop
clc
cmp
adc
das
add
and
jecxz
xchg
mov
xchg
cmp
into
pop
inc
hlt
daa
in
sub
dec
mov
je
movntq
mov
inc
mov
jmp
jo
add
repnz
xor
dec
mov
push
les
ret
pop
cli
pop
cli
pop
mov
push
(bad)
mov
cmps
xchg
pushf
mov
(bad)
fisubr
fidiv
sti
sub
jecxz
(bad)
push
cmp
add
push
mov
xchg
push
sbb
in
and
push
fstp
jb
xchg
retf
test
xor
sub
jmp
out
pop
mov
popf
jp
mov
mov
int3
pop
mov
inc
test
xchg
cmps
lahf
push
movs
rcr
and
mov
lods
cwde
push
retf
dec
nop
jg
ds
iret
sub
dec
loop
cmps
xchg
jne
pop
mov
inc
repnz
pop
xchg
inc
mov
imul
sub
xor
ficom
mov
xchg
inc
test
jecxz
mov
sbb
pop
fidivr
cmp
push
retf
cmp
cmp
ds
sbb
ret
jl
aas
std
push
mov
cmps
gs
lods
jl
dec
push
adc
pop
push
or
aas
sbb
and
or
imul
popa
movs
jg
lods
jle
add
sub
dec
shl
inc
adc
sub
pop
ret
hlt
aas
sbb
push
fcomp
(bad)
pop
sbb
out
out
adc
rcr
jmp
push
out
sub
pop
xlat
push
sar
shl
pop
shl
pop
das
adc
clc
and
enter
out
and
xchg
je
xor
cmp
xor
add
and
add
inc
retf
and
out
lods
lahf
js
gs
and
sbb
std
jp
sub
sbb
and
cmp
adc
push
mov
mov
jmp
jecxz
mov
out
adc
int3
xor
and
shr
inc
mov
clc
scas
lods
inc
xchg
mov
push
popa
ror
inc
xchg
mov
xchg
push
or
into
and
stc
dec
mov
add
dec
mov
xlat
jle
add
mov
repz
sub
loope
or
and
pop
aad
or
pop
mov
push
shr
sbb
or
mov
in
test
or
hlt
push
adc
les
popa
test
outs
mov
sub
and
jns
xor
es
sbb
and
in
outs
mov
push
loopne
mov
cwde
jl
xchg
xchg
jbe
pop
out
mov
jne
call
jecxz
iret
or
cmp
add
dec
mov
xor
or
mov
rcr
add
cmc
xor
aaa
sar
out
sub
mov
rcr
inc
mov
xchg
xlat
inc
mov
enter
mov
add
sub
clc
add
cmps
mov
mov
cmp
in
sub
sub
lahf
mov
mov
xlat
pop
lods
and
(bad)
and
cli
add
dec
ficomp
(bad)
xor
jecxz
retf
ds
movs
fidivr
or
push
mov
aaa
adc
xchg
jbe
(bad)
ja
cmp
xchg
addr16
mov
and
sub
lds
mul
or
(bad)
ss
mov
sub
jl
pop
mov
sub
push
cmp
ds
and
add
xor
and
dec
in
daa
call
je
lods
movs
xchg
push
jns
popa
movs
mov
add
loope
mov
pop
dec
ret
cld
stos
mov
fist
adc
add
es
(bad)
cmp
push
lods
jge
xchg
jns
xchg
rol
bswap
cmp
xor
rcl
mov
pop
loope
cmps
jae
es
rcl
lods
cdq
addr16
pop
mov
inc
fidiv
dec
lea
pop
mov
pusha
lods
imul
(bad)
cmp
dec
fistp
adc
inc
aam
mov
inc
(bad)
lahf
adc
outs
fdiv
adc
sbb
pop
into
or
es
pop
leave
push
aam
adc
das
sub
adc
and
dec
movs
cwde
lahf
lea
bound
mov
push
int3
push
aam
out
push
stos
fnstsw
push
scas
xchg
data16
shr
adc
and
xor
imul
and
cmc
and
dec
cmps
test
xor
pop
test
in
and
add
es
ss
movlps
cli
or
dec
cmps
lahf
mov
mov
push
xchg
inc
hlt
xor
aad
leave
cwde
scas
data16
cmc
push
lds
data16
arpl
inc
rol
loope
(bad)
add
xor
dec
aam
xchg
aaa
push
sbb
imul
leave
aas
adc
and
in
push
neg
inc
fimul
sbb
and
and
or
xchg
jbe
pop
push
push
jmp
add
mov
bound
sbb
cmp
dec
mov
and
int
stc
pushf
xchg
xchg
call
cmps
fisub
cdq
mov
add
pop
mov
mov
test
pop
mov
pop
jmp
int
cmp
das
std
push
movs
test
cld
stos
mov
retf
push
mov
cs
in
pop
movs
in
es
add
sub
ss
imul
loope
mov
and
cmc
xor
or
and
push
fnstsw
jmp
bound
std
pop
test
movs
mov
mov
pushf
inc
mov
add
pop
lock
cmp
push
(bad)
es
stos
xchg
arpl
inc
mov
cmp
aaa
xor
push
jmp
lods
sahf
jl
inc
fcomp
out
or
add
jno
cmp
dec
or
xor
pop
aam
or
mov
fstp
fidivr
in
adc
push
mov
sbb
cmp
pop
mov
arpl
jle
xor
retf
add
cli
and
sub
pop
fsubr
dec
stos
xlat
xor
jmp
jge
xor
add
and
out
xor
or
loop
movs
movs
(bad)
(bad)
push
rol
xchg
push
pushf
jnp
cdq
jge
xchg
arpl
in
dec
mov
repnz
test
bound
cmc
pop
cmps
jae
cmp
ret
cmp
xchg
xchg
mov
mov
pop
mov
jo
xor
xchg
xchg
ficom
push
shl
loopne
lock
stos
jo
loopne
push
icebp
inc
mov
cmp
inc
shl
push
jmp
int
sbb
lahf
xchg
jae
pop
ret
push
(bad)
sub
out
loop
les
repnz
stos
ins
fisub
lods
inc
mov
mov
inc
fild
pop
sar
mov
and
push
push
jmp
sti
pop
into
add
inc
scas
test
sub
cmp
push
xchg
pop
retf
pop
cmc
inc
mov
push
inc
mov
mov
add
jb
scas
sahf
iret
xor
into
inc
add
mov
xor
pop
stos
enter
push
fist
xchg
ins
cmp
adc
and
cli
mov
ret
sbb
stos
cld
jno
xor
mov
call
sbb
fild
cmps
test
outs
into
cdq
ficomp
test
sub
(bad)
les
mov
je
sub
in
jae
es
in
inc
fstp
mov
dec
adc
mov
sbb
(bad)
jb
or
mov
and
in
pop
mov
sub
xchg
xchg
shl
ja
xchg
mov
jns
out
inc
or
mov
or
dec
add
mov
fidivr
enter
push
ds
mov
mov
pop
into
call
nop
aam
or
in
mov
icebp
stos
outs
add
push
repnz
xchg
ror
adc
rcl
out
mov
rcl
pop
xor
imul
stos
add
add
mov
(bad)
push
(bad)
movs
ins
cmp
imul
xchg
imul
xchg
mov
inc
pop
or
clc
mov
sbb
push
(bad)
popf
mov
push
cli
jno
adc
nop
(bad)
sub
mov
pop
inc
cmps
int
sub
mov
ret
dec
add
in
test
jmp
mov
inc
pop
cmp
xchg
ss
fisttp
sbb
loop
xor
mov
cmp
sub
sbb
xor
jbe
cli
and
xchg
mov
outs
sub
cmps
ja
loope
movs
int
data16
jmp
aaa
jmp
sti
scas
lahf
fild
call
outs
mov
out
sbb
cmp
jmp
add
push
sbb
and
pop
cmc
movs
xchg
rol
pop
loopne
pushf
rcr
enter
dec
push
adc
pop
fild
rcl
xchg
in
outs
add
pop
sbb
pushf
fdiv
sbb
mov
mov
mov
mov
inc
mov
clc
pop
or
call
dec
shl
in
movs
xchg
leave
pop
sbb
mov
fcom
mov
cld
cmps
ins
pop
sbb
jecxz
or
dec
(bad)
lahf
sahf
fidivr
jp
sub
ficomp
les
add
popa
xchg
leave
cmp
loop
mov
addr16
cwde
fst
pop
lock
xchg
jmp
dec
fmul
push
adc
out
push
or
ret
outs
ficom
shl
ret
or
ret
std
stos
mov
dec
sbb
inc
enter
es
sbb
rol
and
retf
out
jo
adc
ror
cmc
mov
hlt
xchg
test
inc
ror
adc
mov
push
rcr
lods
mov
dec
add
push
rol
adc
mov
push
stos
rcr
nop
fld
adc
cli
mov
xchg
cld
das
js
mov
loopne
(bad)
in
sub
mov
stos
xchg
ret
pop
or
jns
loope
sbb
inc
mov
inc
fisttp
lahf
(bad)
sub
rol
push
push
sbb
push
into
movs
test
sub
mov
ss
sbb
mov
push
nop
dec
add
mov
mov
push
push
(bad)
(bad)
fs
pop
scas
jmp
sbb
mov
daa
push
pop
cld
xchg
xchg
bnd
adc
and
call
lods
cli
pop
sbb
fwait
stos
lock
cmp
xchg
pop
(bad)
sahf
popf
fldenv
addr16
inc
adc
or
call
in
stos
out
dec
push
sub
(bad)
xchg
pushf
fdivr
(bad)
xchg
mov
pop
mov
jle
mov
retf
cmp
fmul
sub
mov
pop
xor
jo
fwait
jno
jmp
movs
mov
pop
test
pop
or
addr16
(bad)
pop
cmp
cdq
sar
dec
mov
mov
add
lock
test
and
mov
jne
xchg
imul
ret
and
mov
test
lods
dec
adc
mov
jb
das
inc
fimul
test
inc
adc
icebp
and
mov
pop
add
pop
cmps
jecxz
push
icebp
pop
xor
ins
and
mov
ret
jns
cs
call
ins
sub
cmps
addr16
sub
jo
call
and
sub
adc
outs
mov
dec
and
mov
ret
adc
gs
stos
sbb
imul
or
pop
mov
fwait
sbb
imul
xlat
sahf
mov
sub
in
push
add
dec
movs
int
data16
xor
dec
add
xchg
xor
loopne
cmp
mov
mov
fnstsw
jb
stc
dec
and
mov
int3
xor
jecxz
es
inc
retf
pushf
pusha
or
int3
lea
lea
lods
dec
add
push
int3
mov
jo
mov
inc
mov
xchg
mov
jp
ror
add
(bad)
nop
into
(bad)
pushf
sar
cmp
and
xor
out
xor
or
push
dec
test
je
or
int3
cmps
inc
and
inc
fcomp
and
mov
aaa
data16
sbb
arpl
xchg
imul
dec
aam
mov
inc
(bad)
xchg
imul
mov
icebp
dec
sbb
mov
outs
add
fcomp
xchg
call
mov
sub
sub
test
gs
lods
xchg
(bad)
data16
out
mov
fstp
mov
clc
inc
pop
aas
jbe
jmp
adc
in
mov
jge
lahf
cdq
cli
sub
cmc
push
sbb
out
lahf
fild
adc
aas
in
xchg
and
stc
jnp
pop
sbb
outs
sub
mov
(bad)
sub
bound
jmp
popa
ret
xor
jg
cmp
fwait
int3
add
not
push
dec
std
cmps
stos
rcl
inc
div
in
popa
and
inc
sub
pop
hlt
mov
or
cdq
and
jbe
out
dec
test
jge
sbb
clc
dec
sbb
call
mov
jo
push
jge
mov
arpl
movs
cwde
fsubr
aas
push
push
pop
(bad)
mov
xchg
xchg
rcl
jle
lock
push
leave
lea
outs
(bad)
fcomp
stos
outs
add
inc
add
sub
sti
stos
push
aaa
pop
jecxz
imul
mov
push
xor
arpl
scas
dec
add
pushw
pop
ret
popf
mov
push
pop
push
cmps
jmp
cmp
jg
icebp
jbe
pop
inc
rol
xlat
and
bound
pop
mul
movs
cld
daa
arpl
xchg
mov
mov
int
pusha
out
mov
shl
bnd
cmp
cwde
(bad)
xor
xchg
fdivr
adc
or
inc
(bad)
mov
ret
inc
add
mov
mov
pop
or
sbb
rcr
dec
int
cdq
fnsave
je
nop
scas
stc
jg
sbb
mov
loope
push
and
mov
jnp
adc
mov
sub
icebp
jne
adc
aam
or
push
fnstenv
lods
jmp
pop
pop
sbb
push
(bad)
mov
xchg
sub
jl
movs
ins
cmp
mov
cmp
dec
rcl
rol
in
lods
mov
jl
les
mov
cmp
cmp
fs
popf
pusha
aaa
in
test
push
imul
aaa
add
xor
mov
push
pop
dec
icebp
mov
ret
call
mov
xor
test
das
jmp
mov
adc
xchg
test
ds
imul
push
ror
iret
sahf
nop
(bad)
dec
and
pop
adc
dec
mov
pop
nop
aam
or
neg
or
mov
inc
fcomp
mov
mov
push
sti
mov
adc
xlat
jae
add
loope
pop
mov
pop
sbb
inc
stc
scas
popa
or
mov
sub
mov
adc
mov
push
push
in
jnp
(bad)
xchg
mov
dec
sbb
jns
xchg
fild
je
sbb
sahf
nop
enter
out
add
pop
into
cmps
xor
jns
xchg
jbe
in
push
jmp
gs
xchg
xchg
ror
dec
mov
bound
sbb
scas
mov
lea
jg
lods
imul
stos
mov
out
pop
cmp
mov
pop
rcl
fstp
inc
adc
test
aam
mov
pop
xor
sahf
mov
pop
imul
adc
test
sub
test
adc
mov
addr16
test
pop
movs
cmc
push
add
jns
sti
pop
sbb
loop
scas
lds
add
xchg
xchg
fimul
adc
loope
add
sub
pop
sbb
shl
mov
xchg
dec
or
retf
int
aas
rep
mov
lahf
enter
cwde
xchg
pop
xor
test
les
adc
mov
cld
pop
push
jmp
dec
mov
cli
ja
pop
je
sar
pop
sbb
adc
sbb
cmps
adc
push
cmp
jmp
rol
mov
jmp
pop
xor
movs
dec
or
mov
mov
pop
hlt
mov
rol
icebp
cmps
ins
sub
inc
das
clc
fwait
nop
les
sub
xchg
xor
ja
pop
dec
mov
jno
cwde
mov
inc
das
out
mov
and
mov
fadd
pop
or
xor
mov
push
cmp
xchg
mov
dec
or
jns
lea
or
aad
mov
cmp
xchg
bound
(bad)
popf
pushf
test
pushf
aad
adc
jge
mov
shl
mov
inc
(bad)
lods
outs
or
dec
add
mov
fcom
aas
outs
mov
or
popf
xchg
(bad)
add
test
pop
loope
test
addr16
mov
jmp
pop
wbinvd
pusha
mov
xchg
cwde
popf
leave
push
adc
pop
hlt
lods
scas
jmp
pusha
mov
mov
shr
and
not
(bad)
movs
dec
sbb
mov
cmps
pusha
and
movs
cdq
into
js
or
mov
push
cmp
xchg
xchg
and
ja
nop
popa
and
pop
jle
xchg
(bad)
out
push
mul
push
push
mov
pop
sbb
daa
jo
jecxz
pop
jmp
pushf
jno
cli
mov
daa
or
call
mov
add
mov
mov
adc
stos
inc
or
pop
fistp
or
int3
movs
inc
adc
(bad)
mov
ss
std
mov
xchg
sub
inc
adc
push
adc
fwait
lock
out
sub
call
jge
(bad)
nop
sub
or
js
jae
ror
in
inc
push
pop
inc
mov
inc
adc
jp
mov
stc
call
adc
fwait
bound
or
jmp
push
sbb
pop
cmp
inc
retf
ror
jb
sbb
and
xchg
lods
in
jl
in
test
dec
sub
dec
clc
mov
ficomp
call
jbe
mov
pop
je
ret
jge
and
rcr
jmp
mov
enter
or
cmps
lds
cmovnp
cld
jg
loope
ja
or
out
push
adc
popf
mov
outs
add
jb
xchg
mov
and
xchg
lods
jmp
cmp
lds
mov
fidivr
(bad)
(bad)
ins
xor
jge
enter
sbb
adc
mov
imul
int
imul
inc
mov
dec
or
push
mov
js
(bad)
pop
sbb
mov
and
mov
repz
out
dec
or
mov
adc
jo
mov
fldcw
add
rcr
mov
add
into
mov
or
xchg
lahf
idiv
ins
add
pusha
mov
push
cmp
imul
or
push
rol
cmp
mov
imul
sbb
test
hlt
mov
iret
jp
sbb
fsubr
push
dec
fcom
movs
inc
adc
(bad)
mov
mov
sub
xchg
sub
fist
jecxz
mov
jne
frstor
addr16
mov
lods
les
jbe
mov
lods
sahf
std
cmp
ja
mov
test
inc
sub
mov
adc
xchg
(bad)
sub
sahf
inc
add
outs
leave
xchg
ins
sub
jbe
jmp
jge
jmp
imul
push
out
cwde
sar
and
cmps
mul
lock
jmp
xor
cmps
jnp
adc
in
movs
push
jecxz
sbb
dec
sbb
adc
xlat
push
pop
or
fcom
ret
xchg
mov
jmp
gs
or
cdq
lahf
(bad)
js
sub
test
das
adc
mov
sub
mov
out
mov
fild
pop
inc
mov
dec
push
xor
xlat
xchg
mov
test
jmp
ror
mov
xchg
sar
or
adc
pop
aam
jne
aaa
pusha
rcl
adc
mov
fist
enter
dec
or
mov
aaa
pop
clc
scas
push
adc
mov
pop
push
jge
ficomp
aas
jnp
pushf
mov
outs
fisttp
in
pop
inc
aam
mov
inc
sub
mov
cwde
mov
push
adc
movs
jb
jmp
lea
jb
out
sub
lods
pushf
aad
add
mov
pop
dec
mov
outs
push
or
jecxz
and
movs
mov
in
cmp
ja
cmps
test
sub
shl
mov
pop
pop
mov
mov
fbld
push
mov
retf
(bad)
mov
sub
stos
inc
adc
outs
movs
jmp
dec
sub
call
xor
scas
cwde
leave
dec
sbb
adc
xchg
mov
sbb
adc
jo
(bad)
pop
or
ret
fiadd
ins
fdivr
sbb
add
call
sub
jle
in
push
ss
sbb
dec
add
fisubr
lds
mov
mov
jmp
call
mov
in
mov
jle
pushf
mov
and
ja
mov
dec
pop
or
mov
rcl
and
push
aad
ins
cmp
jb
repnz
arpl
jbe
mov
(bad)
pushf
gs
adc
lea
inc
fiadd
enter
push
or
fsubr
adc
retf
dec
push
sbb
icebp
mov
out
mov
dec
push
pop
jle
cmc
pop
sbb
test
push
cld
test
les
push
xchg
rcl
sub
mov
test
sbb
lea
add
xchg
sbb
out
mov
movs
repnz
nop
mov
inc
sub
mov
fadd
mov
rol
inc
mov
mov
fiadd
out
xchg
add
loope
or
jb
out
inc
pop
jl
in
push
adc
pusha
mov
dec
or
scas
jb
enter
adc
jmp
popf
div
push
jmp
adc
ins
mov
mov
(bad)
int3
xor
in
dec
and
mov
mov
dec
nop
aam
jne
pop
out
jge
sbb
and
push
or
nop
jle
jmp
cwde
iret
add
sub
jge
test
not
(bad)
pop
mov
xor
and
mov
xor
sbb
fiadd
fisttp
(bad)
nop
aam
fs
mov
ss
cmp
mov
add
call
sbb
les
call
stos
ins
and
and
test
test
in
cs
stc
call
cli
mov
hlt
movs
push
pcmpgtd
push
shl
cmp
stos
xchg
xlat
dec
or
pop
std
stos
(bad)
out
add
mov
sbb
int
js
into
push
push
dec
stos
out
aas
outs
into
cdq
dec
and
inc
cvtps2pi
pushf
mov
jne
mov
(bad)
xor
push
push
sti
stos
inc
adc
xchg
mov
lea
mov
jns
call
or
pushf
lods
sti
jb
sbb
push
repnz
fsub
add
and
push
cmc
mov
scas
out
jb
pop
inc
xchg
pop
cmp
cmps
scas
jmp
push
adc
jbe
out
cmp
inc
fistp
push
movs
mov
xor
test
mov
or
retf
loop
test
pop
or
mov
sub
clc
xor
cmps
xchg
imul
ja
cmps
mov
cmps
stos
out
cmp
in
addr16
pop
push
add
xchg
push
sbb
ret
cmp
sahf
mov
xchg
cmp
mov
add
repnz
sub
jo
and
or
inc
retf
xchg
jnp
pop
sbb
inc
cmps
icebp
and
fisttp
push
push
sar
data16
inc
jmp
xchg
mov
das
int3
lea
mov
add
xchg
inc
add
test
cmp
push
add
mov
mov
cld
lahf
mov
jns
out
cmps
mov
pop
sbb
push
cld
lods
jl
pop
ss
stos
inc
add
mov
in
mov
mov
test
mov
out
mov
ss
repnz
pushf
jmp
jb
in
add
sti
jb
xor
(bad)
fdivr
sbb
sahf
jne
add
adc
sbb
jno
mov
lds
adc
in
ins
sbb
dec
and
jo
pushf
dec
psubsb
rcl
(bad)
scas
loop
push
(bad)
mov
into
mov
jns
xchg
mov
and
xor
test
mov
dec
add
or
mov
lock
or
dec
cmps
lock
sbb
nop
outs
and
lahf
jo
jmp
lods
mov
jb
sub
rcr
shr
idiv
(bad)
cmc
mov
shr
out
stos
data16
pop
rep
fwait
repnz
sbb
cmp
xchg
mov
or
push
aas
les
cmp
adc
and
mov
or
fisttp
retf
add
scas
mov
push
adc
push
test
push
push
sbb
lea
pop
push
mov
inc
movs
lock
jmp
push
add
inc
retf
mov
cli
mov
sub
sahf
retf
int
xchg
retf
mov
ret
outs
push
or
mov
loopne
scas
int
sbb
add
es
jnp
stc
push
sbb
jae
cwde
mov
data16
jge
mov
mov
test
int
jae
not
int3
scas
mov
add
loope
push
fcomp
(bad)
fcomp
cmp
in
es
popa
or
push
adc
lahf
mov
jo
or
cdq
fisttp
loopne
outs
push
aaa
pusha
cmps
out
push
andnps
cli
mov
lahf
(bad)
(bad)
xchg
aad
mov
xor
test
(bad)
cmp
stos
rcl
mov
adc
icebp
pop
sbb
push
ret
(bad)
cmp
xchg
fimul
stc
xchg
imul
push
in
cdq
fstp
repz
rcl
xchg
mov
ds
clc
lods
mov
cwde
outs
sub
dec
repz
out
mov
aam
xchg
std
sub
and
push
mov
mov
adc
outs
in
enter
pop
xchg
dec
mov
(bad)
push
xchg
xchg
jno
cld
mov
cmps
sub
push
push
aas
pop
or
movs
das
(bad)
xchg
dec
adc
pop
ror
hlt
rcl
in
cld
movs
loopne
out
ror
push
mov
mov
retf
pop
adc
and
pop
push
ins
and
push
repnz
fwait
jns
cld
mov
gs
daa
jg
call
mov
cmp
inc
jmp
gs
xchg
and
or
add
mov
aad
mov
dec
xlat
sbb
out
xchg
aam
xchg
vblendps
dec
stos
out
inc
sbb
stos
inc
(bad)
mov
push
cwde
sbb
stos
xchg
jmp
sub
jg
pop
fisubr
push
aam
pop
and
es
mov
repnz
push
stos
repz
pop
test
sbb
inc
mov
rcl
push
lods
pop
aaa
popf
gs
lock
inc
adc
inc
sbb
pop
and
lahf
jmp
dec
shr
xchg
mov
jbe
mov
sub
sub
loope
mov
outs
adc
mov
mov
aaa
and
retf
push
outs
ss
fsubrp
cs
adc
mov
rcr
inc
das
xor
cs
sub
push
dec
mov
jb
xor
test
mov
jle
inc
ret
mov
stos
test
sti
jg
mov
jns
add
xor
pushf
pop
stc
jg
shl
or
fst
fwait
call
daa
enter
(bad)
xor
inc
icebp
adc
gs
cs
mov
or
aaa
pop
jb
shl
outs
push
loope
ret
jne
add
ins
mov
cmp
dec
sub
(bad)
dec
mov
adc
shl
stos
lods
mov
inc
jmp
retf
je
out
test
clc
push
test
js
cmp
cld
adc
pushf
pop
mov
mov
mov
out
(bad)
jmp
mul
xor
pop
loopne
ss
sbb
xor
or
jmp
test
xor
into
sbb
mov
or
es
std
stos
jnp
pop
dec
pop
mov
xchg
jno
adc
pop
idiv
xor
lods
dec
push
fwait
test
out
adc
retf
icebp
nop
lds
fsub
inc
stc
sti
out
mov
sbb
scas
mov
lea
jp
(bad)
ss
jns
jecxz
js
dec
scas
js
push
jmp
xor
or
mov
push
mov
pop
jns
mov
and
stc
inc
mov
inc
retfw
xor
fidiv
push
nop
(bad)
int3
retf
mov
in
sbb
and
ret
xlat
xor
jl
hlt
int
xchg
stos
and
inc
and
out
(bad)
push
pusha
inc
int
jmp
jecxz
or
mov
jl
sar
pop
popa
hlt
(bad)
jp
iret
retf
sub
sbb
imul
aaa
rcl
fdivr
mov
fneni(8087
xor
(bad)
pop
(bad)
mov
dec
(bad)
sub
lds
out
push
push
fstp
mov
aad
scas
shl
mov
mov
xor
ds
add
in
mov
fisubr
mov
inc
out
xchg
add
cmps
pop
scas
push
xchg
fs
dec
stos
cmps
or
add
enter
ins
or
les
imul
jo
repz
jbe
add
stos
or
xchg
or
add
inc
jae
mov
inc
lds
sub
(bad)
cmc
int
jbe
push
stos
mov
cmp
imul
add
hlt
movs
cmp
mov
xchg
pushf
cdq
or
lds
jle
cmp
push
mov
jnp
and
lock
jle
mov
ds
sti
in
mov
fwait
sub
mul
mov
jecxz
stc
jl
or
out
loopne
adc
jbe
xor
(bad)
add
xchg
es
jnp
cmp
cwde
xor
pushf
mov
xor
xchg
xchg
mov
mov
inc
jnp
int3
xor
(bad)
and
(bad)
mov
popf
mov
outs
mov
jno
push
int3
sbb
mov
in
data16
jg
movs
(bad)
in
loope
sahf
lock
repz
lahf
(bad)
push
or
mov
mov
jmp
mov
scas
push
dec
mov
fcom
mov
mov
aas
fxch
arpl
and
fmulp
jmp
jmp
sbb
jns
xor
fld
int3
push
sub
add
or
sub
pop
jns
outs
shl
and
push
or
mov
xlat
nop
into
and
enter
aaa
fstp
jnp
bound
iret
pop
scas
mov
pop
mov
int
mov
sub
inc
or
into
dec
das
dec
add
scas
add
out
inc
mov
in
jmp
sahf
sbb
cmp
popa
(bad)
push
dec
(bad)
daa
pop
xor
dec
inc
mov
call
jae
repz
xor
clc
stos
cmp
mov
mov
popf
repz
mov
push
aam
fadd
lahf
les
test
sbb
stos
cmps
fild
inc
movs
js
(bad)
fcom
adc
add
daa
or
in
xor
xchg
lods
jmp
and
inc
stos
stos
mov
inc
mov
js
and
push
lds
pmaddwd
mov
fld
fisttp
mov
inc
xchg
or
in
call
adc
loope
or
jl
and
(bad)
int3
ss
hlt
sbb
or
cmp
cmc
mov
push
fs
sbb
pop
inc
dec
xchg
pop
inc
and
daa
mov
jno
dec
test
jmp
xchg
ins
push
out
xchg
jnp
add
cmc
int
cs
push
dec
xchg
push
adc
pushf
dec
test
and
pusha
cld
in
loopne
je
addr16
adc
cmp
dec
bound
sbb
mov
pusha
add
cmp
icebp
cmc
push
jbe
(bad)
cmp
pop
stc
mov
lea
mov
imul
fstp
adc
in
mov
pop
push
and
lods
scas
xor
mov
push
push
test
or
pop
and
mov
ss
jbe
movs
dec
scas
jecxz
rcr
xchg
dec
push
mov
sub
clc
inc
mov
es
jmp
cs
rol
ret
popf
adc
jl
mov
out
and
movs
mov
cwde
adc
xchg
bound
push
push
call
mov
push
stos
outs
test
sub
inc
adc
xor
shr
sub
mov
cmp
pop
arpl
mov
in
inc
ffree
int
stc
mov
jne
add
fbld
in
push
mov
bound
cmps
pop
xchg
mov
sbb
fs
mul
mov
push
das
sbb
scas
js
push
jge
add
aas
retf
pop
add
cs
xlat
call
(bad)
mov
pop
fisub
mov
leave
mov
movs
and
push
les
(bad)
push
adc
inc
aaa
jl
outs
xchg
adc
punpckldq
mov
xchg
ss
xor
shl
pop
push
stos
push
ror
loop
xlat
scas
jb
test
in
icebp
jle
outs
cwde
sub
je
sub
lds
(bad)
test
outs
inc
jg
push
in
cmpxchg
jg
out
pop
loope
mov
sub
jge
mov
mov
xchg
ret
inc
mov
sbb
or
loopne
cmp
sub
mov
frstor
inc
adc
xchg
inc
nop
adc
cmps
cmp
into
pop
das
idiv
jmp
add
adc
push
fldenv
fcomip
inc
and
mov
mov
sub
int3
jns
xchg
int
dec
mov
xchg
jg
int
inc
(bad)
sar
fwait
inc
or
in
clc
inc
mov
iret
pusha
or
inc
fucomi
mov
imul
dec
mov
mov
lahf
mov
cwde
ret
push
cmp
in
mov
inc
jl
mov
ss
jmp
test
outs
push
pop
mov
int3
inc
ins
inc
jne
xor
xchg
imul
ins
repnz
jge
mov
aam
pop
loope
or
out
dec
add
dec
mov
push
mov
mov
(bad)
and
in
cli
push
mov
sbb
movs
dec
rol
(bad)
jnp
arpl
lahf
adc
loope
push
pop
push
repz
inc
(bad)
or
ds
adc
loopne
mov
push
call
pop
add
sub
div
and
ret
dec
xor
xchg
std
push
mov
ficom
cmps
clc
push
add
add
xchg
jns
sbb
jl
jecxz
cmp
push
cmps
xchg
fs
in
fsub
rcr
mov
sbb
addr16
repz
or
push
cld
ins
inc
or
daa
and
push
das
lahf
jo
sar
scas
sub
call
lea
ret
iret
or
loop
sub
or
and
call
sub
pop
and
popa
push
out
hlt
cmp
and
loopne
in
test
cmc
div
mov
inc
sub
sub
add
int
mov
sub
pop
pop
and
lock
sbb
mov
das
or
mov
lods
pop
test
scas
xchg
xchg
sub
dec
test
fwait
sahf
scas
xor
push
lahf
out
sti
push
adc
lea
pop
jno
rcl
jge
movs
mov
out
stos
xchg
adc
inc
int3
cwde
cmp
lds
pop
or
(bad)
cmp
xor
das
cmp
lock
jge
sar
shr
push
retf
jmp
or
lods
jmp
pop
sub
mov
jmp
cmps
mov
nop
xor
sbb
push
clc
(bad)
shl
pop
ret
xor
or
sahf
call
jne
gs
ficomp
in
and
cmp
sub
mov
or
imul
fwait
cdq
xor
pusha
mov
push
xor
int3
push
cmc
jge
mov
inc
imul
xchg
sar
retf
pop
ret
push
dec
hlt
pop
mov
fld
or
mov
jb
adc
std
jl
cmp
(bad)
cmp
lock
adc
imul
popa
adc
out
sub
sub
loopne
packssdw
popa
push
xchg
out
jmp
mov
out
ds
adc
pop
lds
aad
mov
jecxz
push
mov
inc
fld
repz
add
mov
xor
stos
sbb
pusha
sti
push
aas
pop
enter
mov
stos
lea
mov
xchg
sbb
or
stc
jae
fisubr
data16
or
into
sub
add
mov
lock
mov
xchg
iret
scas
in
mov
and
jbe
dec
pop
push
inc
nop
adc
out
cli
nop
xlat
shl
inc
mov
daa
loop
push
aad
cdq
push
lods
movs
(bad)
push
movs
mov
pop
sbb
mov
or
cmps
fbld
aaa
popa
das
jbe
and
aam
rcr
or
adc
sub
cs
add
(bad)
es
cmp
sub
lahf
and
popa
test
es
mov
test
xor
(bad)
jmp
pusha
mov
mov
shl
inc
or
inc
cdq
cmp
cdq
inc
out
aad
mov
xor
ds
cmc
mov
popf
aad
movs
out
adc
pusha
popa
(bad)
sub
pop
hlt
push
lahf
sub
sub
mov
pop
and
rcr
shr
sub
push
int3
fs
pushf
jno
cmp
pushf
fidivr
dec
test
xor
ins
mov
rcr
pop
push
and
mov
dec
ficom
icebp
pop
dec
cmps
push
shl
and
ins
dec
xchg
cmp
pop
int
sbb
repnz
cli
retf
mul
sti
mov
and
mov
mov
inc
push
popf
mov
mov
mov
int3
ret
sbb
mov
push
ds
xor
adc
dec
jp
outs
iret
jo
push
or
lods
loopne
dec
jp
xchg
loope
dec
popa
cmps
push
adc
xchg
ret
xor
cmp
je
xchg
cmps
call
jae
mov
jb
sar
dec
cmp
xchg
loop
aas
leave
imul
adc
rcr
jp
and
fwait
pusha
fcom
pop
mov
adc
in
dec
pop
es
xor
ds
xlat
ret
in
push
loope
jp
(bad)
iret
leave
lods
or
and
xor
inc
pop
adc
or
push
mov
pop
mov
and
jne
test
cmp
int
adc
clc
adc
push
sar
xor
and
stc
lods
(bad)
mov
scas
inc
mov
mov
pop
jg
das
bound
jno
add
or
cmc
mov
sub
retf
dec
push
jae
push
sti
mov
mov
pop
push
mov
das
pop
pop
dec
push
hlt
push
in
mov
dec
pop
cmp
pop
push
jmp
daa
pop
outs
lods
mov
mov
les
(bad)
push
jbe
add
test
inc
das
repnz
xchg
pop
scas
add
leave
pop
mov
mov
add
cdq
and
aaa
mov
out
out
lea
or
sahf
movs
inc
and
fst
out
xor
ret
outs
sahf
jae
jle
adc
call
push
jne
dec
inc
sub
imul
jmp
mov
test
bnd
ds
mov
imul
dec
fwait
mov
jmp
hlt
dec
int3
fild
jecxz
jge
xor
or
lods
stos
test
arpl
mov
mov
jg
imul
xchg
push
and
xor
into
dec
push
ret
outs
mov
sub
test
push
cmp
call
dec
sub
xchg
inc
and
push
mov
and
test
pushf
jo
add
neg
dec
adc
lock
cdq
fwait
push
or
ret
lods
add
mov
sbb
mov
jo
cdq
xor
movs
cmp
and
push
out
bound
mov
xchg
in
call
cmp
imul
cld
in
mov
retf
mov
add
ja
ror
pop
cld
sub
jl
inc
xchg
ror
jmp
les
out
out
icebp
(bad)
scas
rcl
push
(bad)
out
int3
cmp
and
sub
dec
ss
or
sbb
cwde
(bad)
xchg
xor
inc
out
loopne
dec
sbb
aad
pop
int3
pop
mov
sub
mov
cwde
jmp
stc
ja
je
sbb
push
inc
iret
jg
(bad)
(bad)
xlat
inc
mov
and
inc
push
jnp
outs
lods
fcomp
(bad)
fwait
inc
inc
and
dec
xor
inc
jns
mov
stc
or
(bad)
xchg
call
xor
push
stos
aad
adc
pop
xchg
push
inc
std
fdiv
and
jge
xor
ins
mov
(bad)
es
mov
loop
cmc
adc
pop
dec
aas
lods
mov
retf
or
ss
and
ss
(bad)
inc
sub
std
adc
jns
jne
xor
pop
pop
movs
pusha
das
retf
jno
mov
inc
pop
nop
out
ds
gs
mov
lds
add
sahf
lods
repnz
adc
jmp
mov
push
into
lea
jns
mov
add
ror
add
jns
jp
enter
dec
cmp
xor
mov
loop
ror
outs
sub
push
push
rol
dec
xchg
cmp
aaa
sub
jecxz
cs
mov
sub
inc
xor
test
mov
frstor
sub
jp
adc
push
cmps
push
sbb
fmul
xchg
xchg
in
cwde
mov
out
pop
and
push
shl
repz
mov
push
cli
add
sahf
sub
or
ror
(bad)
or
loop
inc
jbe
aaa
mov
stos
cli
sbb
mov
xor
repz
je
scas
nop
or
mov
and
jmp
not
je
mov
dec
ins
add
dec
or
mov
pushf
inc
dec
jo
scas
jmp
lock
jmp
in
out
push
and
xor
xchg
fiadd
lds
je
push
pop
inc
lds
xchg
and
and
idiv
inc
xchg
mov
pop
stc
xrstors
and
pop
fwait
xchg
and
js
repz
leave
pop
ret
ss
idiv
xchg
aaa
rep
shr
(bad)
pusha
xchg
pusha
mov
fs
pop
mov
movs
in
mov
je
add
fwait
push
jmp
cld
mov
mov
ret
ss
xor
stos
and
sbb
sar
es
mov
scas
cmp
push
mov
clc
push
add
jmp
mov
cs
mov
dec
aaa
pop
jne
aas
outs
mov
aam
test
xchg
clc
cmp
in
je
jmp
sbb
ffreep
or
xchg
icebp
cmp
xchg
jbe
jecxz
cmps
mov
retf
mov
cld
mov
ins
dec
push
out
test
pop
sbb
pop
ds
enter
xchg
or
push
add
int
gs
jmp
mov
shl
arpl
mov
outs
or
sti
fild
cli
inc
ja
stos
nop
xchg
sti
dec
mov
lds
pop
adc
shr
lds
outs
adc
sbb
clc
daa
push
or
jg
jge
jle
bound
dec
rol
jmp
fidiv
xchg
jmp
add
ror
in
test
cmps
jno
and
xor
clc
pop
clc
and
dec
or
addr16
fs
mov
mov
pop
add
and
fbld
push
jge
xchg
mov
int
cmp
adc
mov
adc
mov
jbe
ret
fild
jae
push
cld
cmp
jb
push
arpl
inc
mov
mov
dec
xor
repz
xchg
or
mov
(bad)
mov
sbb
loop
add
mov
sub
icebp
aad
in
push
mov
arpl
aam
cmp
es
xchg
addr16
in
pop
(bad)
cwde
mov
jno
cmps
jmp
or
inc
test
jp
dec
jmp
mov
mov
jae
jae
pop
std
pop
in
pop
jo
cmp
push
retf
dec
fwait
pop
push
cmps
arpl
mov
jg
ds
adc
sbb
cmp
push
fstp
in
mov
fdiv
mov
mov
ja
cli
enter
sbb
pop
jns
fwait
dec
out
jo
xcrypt-ecb
cmps
int3
add
pop
(bad)
test
and
xor
data16
pop
aad
mov
ja
lods
add
xor
xchg
or
dec
adc
mov
add
cmps
inc
aas
lea
pop
mov
pop
xchg
pusha
or
lods
out
sbb
push
dec
sbb
push
mov
sahf
pop
call
pop
push
jb
jbe
adc
test
inc
jp
xchg
fsub
retf
mov
cmp
aad
adc
stos
inc
jl
dec
cmps
fcom
push
xchg
int3
ins
mov
mov
and
adc
lahf
lock
mov
add
cmp
loop
gs
fdivp
sub
nop
lahf
lods
pop
ins
xchg
sub
or
pop
fild
ds
push
inc
out
dec
or
jne
or
mov
add
inc
push
add
aas
push
pop
ss
xchg
aam
ficom
mov
call
push
and
sub
sbb
dec
and
ss
pop
jo
out
jne
jno
mov
mov
aaa
push
or
push
add
test
mov
rol
je
xor
and
popa
xor
dec
push
addr16
xor
leave
ins
jmp
in
repz
cmps
popa
jecxz
repnz
sub
and
mov
mov
mov
xchg
fmul
repz
fild
imul
inc
adc
jns
sbb
mul
ret
scas
(bad)
ds
dec
or
mov
scas
mov
fisub
push
cli
mov
leave
inc
push
push
scas
jmp
sbb
mov
xchg
retf
and
data16
lods
scas
xchg
fdivr
dec
add
lahf
mov
add
dec
stos
clc
test
lea
imul
dec
xchg
leave
(bad)
repnz
(bad)
and
sub
mov
push
fidivr
sub
or
pop
dec
cmp
adc
mov
push
inc
push
xchg
cld
inc
push
add
int
(bad)
lods
jmp
and
or
pushf
jmp
and
sbb
push
sbb
xor
and
inc
mov
cmp
mov
scas
mov
jecxz
fmul
xchg
sbb
pop
xchg
(bad)
mov
pusha
cmp
popa
add
dec
shl
sbb
aaa
sub
int3
push
xor
ds
mov
cmp
xor
pop
push
fimul
je
and
inc
add
dec
and
cmp
test
mov
xchg
cmp
or
call
cld
xchg
mov
push
sbb
rol
sbb
call
jl
cld
mov
mov
xchg
fwait
push
push
pop
jecxz
(bad)
pop
std
xchg
(bad)
mov
addr16
movs
repnz
mov
(bad)
clc
dec
cmp
add
pop
or
enter
mov
pop
adc
ss
sbb
outs
or
pop
pop
gs
movs
xchg
retf
mov
arpl
clc
add
inc
push
jmp
nop
repz
fsubr
imul
xchg
fbstp
enter
pop
jl
jge
ja
jge
add
lahf
int3
xchg
rcr
fdivr
aam
mov
jns
inc
bswap
arpl
jl
cmp
dec
sbb
(bad)
les
sbb
cmp
(bad)
cld
mov
dec
aas
jbe
enter
pop
aas
js
sbb
push
adc
push
dec
jecxz
fwait
test
test
and
popf
out
dec
pushf
rcl
push
jg
outs
fsubr
cdq
ret
popf
addr16
jge
pop
sbb
mov
pop
loope
std
nop
(bad)
nop
ins
pusha
ss
or
jl
push
or
sbb
xor
mov
stos
cmps
loop
(bad)
mov
cdq
lock
pop
outs
das
xor
dec
sub
jne
inc
adc
fnstcw
imul
retf
sub
stos
jmp
ret
mov
add
in
inc
sbb
or
loope
retf
xchg
inc
jle
push
or
stos
jge
inc
or
mov
dec
or
imul
sbb
call
dec
xchg
into
mov
mov
stos
outs
jmp
loop
shr
iret
pusha
and
and
dec
cmc
mov
mov
dec
sbb
add
ret
pop
sbb
sub
jl
imul
loop
loope
mov
mov
sahf
mov
cmps
repnz
gs
push
sbb
and
shl
dec
cdq
movs
aad
leave
lahf
fistp
and
push
mov
out
stos
fadd
jl
pop
push
inc
into
xchg
dec
hlt
xchg
int
mov
inc
mov
cmp
cmp
sahf
jne
push
sub
jne
dec
lock
jle
jle
popf
outs
cmp
jns
aad
ds
sub
call
test
adc
jo
dec
sbb
inc
psubb
ins
outs
sub
or
pop
mov
xlat
mov
add
push
add
jecxz
ins
icebp
mov
int
cli
lods
mov
push
and
and
or
adc
leave
mov
and
lods
mov
cwde
fstp
push
pop
sub
retf
cwde
shl
je
inc
icebp
cmps
jecxz
xchg
movs
stc
inc
cmp
movs
jmp
push
xchg
enter
fs
neg
push
loopne
lods
out
mov
mov
iret
sub
dec
or
adc
fs
jge
jns
and
fs
pushf
out
mov
ret
mov
movs
popa
lods
icebp
xchg
mov
xchg
outs
fcom
inc
xor
rcl
pop
lock
add
dec
loope
out
cmp
cmp
sub
cmp
pop
pop
sbb
jmp
sbb
adc
inc
add
pop
outs
test
repz
xchg
test
fwait
clc
(bad)
mov
and
je
mov
(bad)
sub
xor
dec
sbb
push
scas
xchg
retf
(bad)
int
inc
jmp
push
dec
adc
mov
sub
push
add
(bad)
ror
movs
test
mov
pop
jecxz
or
and
sti
pop
aaa
arpl
jae
retf
pusha
sub
mov
xor
sbb
inc
(bad)
push
inc
adc
jp
xrelease
and
inc
adc
stos
jl
inc
or
push
cs
das
and
cmp
sbb
push
jnp
aam
pop
outs
push
not
push
out
cmp
cmp
test
les
adc
movd
imul
cmps
ins
push
dec
out
cdq
dec
movs
pop
push
loopne
int3
(bad)
arpl
xchg
out
lock
add
push
adc
pushf
les
push
adc
mov
loop
or
mov
mov
mov
xchg
fmul
out
xchg
bound
and
shl
pushf
xchg
popa
cmp
dec
sbb
jge
mov
mov
in
fstp
fdivr
fwait
sub
repnz
loop
int3
or
mov
inc
push
leave
outs
add
and
ja
dec
xchg
mov
cmp
mov
mov
xor
and
jno
and
pop
ss
mov
les
xor
push
pop
inc
xchg
test
sar
stos
icebp
cmps
cs
movs
xor
cs
push
(bad)
fisttp
arpl
iret
or
fcmovb
xchg
in
sbb
fnstcw
jl
(bad)
bound
jecxz
and
enter
jecxz
jp
inc
call
mov
add
jnp
pop
push
cld
or
das
and
in
mov
mov
add
add
jg
and
fcom
les
mov
pcmpgtb
dec
jmp
aad
lods
in
xchg
fstp
pushf
repz
lds
(bad)
movs
inc
sub
inc
push
inc
or
cmp
shl
jge
pop
das
je
call
movs
sti
mov
xchg
mov
aam
inc
in
mov
cvtdq2ps
mov
push
pop
cmp
in
mov
mov
xor
out
mov
push
mov
outs
sbb
stos
shr
test
pop
mov
jecxz
(bad)
call
inc
fisub
rol
cld
mov
mov
popa
cs
out
mov
cs
cmp
sub
lock
lahf
(bad)
sub
rsqrtps
test
mov
pop
inc
add
adc
into
lahf
jmp
jmp
aam
mul
xchg
aam
int3
test
cmps
div
jmp
retf
mov
mov
mov
jmp
iret
mov
popf
xlat
cwde
xchg
ret
xchg
lds
push
cmp
sub
pop
xor
test
cmp
cmp
push
repz
cwde
retf
data16
xchg
out
(bad)
in
popf
fst
ret
mov
out
fist
mov
inc
adc
outs
cmp
add
or
xchg
inc
daa
and
or
mov
ins
fldcw
mov
call
lds
sbb
cs
leave
mul
pop
adc
imul
jne
jno
dec
or
imul
adc
push
inc
ds
push
add
jg
inc
sbb
js
pop
or
dec
les
or
sbb
push
adc
sub
or
push
jecxz
mov
xchg
xchg
xor
jo
jl
and
cmc
je
and
push
sub
sbb
xchg
idiv
mov
add
jae
mov
clc
mov
adc
rcl
mov
lods
loope
mov
mov
in
ret
jmp
mov
nop
shl
mov
xchg
xlat
inc
mov
xor
sub
les
outs
aaa
push
mov
bound
pop
or
xchg
fisttp
adc
scas
fisttp
fdiv
fstp
fmul
out
or
pop
pop
outs
cmp
xchg
add
dec
sbb
dec
imul
ja
in
or
call
adc
das
jae
pop
cs
(bad)
sti
pop
(bad)
test
sub
imul
loop
rcr
jge
dec
xor
pop
push
pop
push
inc
hlt
mov
pop
aaa
jne
dec
pop
sti
arpl
push
lods
adc
jo
pop
xor
repz
jp
pop
jecxz
and
fnstenv
dec
ss
and
out
cmp
iret
leave
lds
dec
aam
adc
pushf
out
lods
div
and
cmc
pop
sbb
jle
sub
inc
add
in
dec
inc
sbb
ss
or
int
(bad)
mov
bound
cli
sbb
pop
pop
jg
loop
popf
aam
(bad)
addr16
in
fnstenv
mov
mov
js
pop
mov
repnz
sub
mov
adc
mov
fwait
clc
xor
loopne
movs
stos
icebp
cmps
cmc
scas
shr
addps
jo
inc
xor
pop
loope
loop
std
test
mov
mov
call
ds
sbb
adc
jbe
shl
int3
arpl
push
int
xor
sbb
or
dec
jmp
push
out
xchg
jecxz
fild
test
mov
outs
jno
xchg
int
scas
mov
and
gs
outs
in
je
pop
clc
data16
retf
inc
adc
add
pop
inc
xor
icebp
idiv
mov
xchg
ret
xchg
imul
scas
dec
mov
(bad)
xlat
xchg
stos
mov
dec
or
and
and
and
or
dec
mov
sbb
push
lods
ret
popa
adc
jle
mov
iret
mov
mov
fist
test
inc
xor
sti
mov
xchg
inc
es
jg
or
adc
shl
repz
push
in
retf
jl
sub
jge
dec
adc
add
ret
jne
arpl
and
repnz
xchg
fisubr
sbb
ins
aas
push
(bad)
mov
shr
and
inc
add
and
pop
adc
call
loopne
(bad)
(bad)
jg
xchg
jno
jl
push
cmc
sub
pop
mov
pop
sbb
push
add
retf
mov
mov
iret
mov
test
pop
out
js
loop
rcl
jae
pop
repnz
outs
cmp
xchg
mov
jg
inc
pop
push
push
adc
pop
cmp
jmp
scas
jb
pop
loopne
xchg
cli
mov
xchg
std
mov
dec
mov
xor
xor
dec
jecxz
mov
cmc
xchg
mov
cwde
fdivr
push
and
xor
retf
fild
fsubr
jbe
mov
xor
jne
dec
push
jb
call
jae
out
or
nop
enter
xor
out
ins
add
loop
fimul
or
lods
test
mov
mov
pop
adc
aaa
pusha
sbb
ins
cmp
inc
test
lods
or
mov
lods
cld
(bad)
(bad)
pushf
lods
test
xchg
sar
or
pop
adc
push
or
xor
push
add
ficom
or
xor
push
pop
cli
sbb
bound
jae
mov
das
out
mov
mov
sub
cwde
repz
jmp
mov
ins
xor
loopne
and
inc
push
fnstsw
inc
ss
sub
pop
rol
ins
in
shr
and
push
pop
aaa
imul
cld
stos
fisubr
adc
dec
add
out
shl
jbe
xor
hlt
lods
shr
jo
gs
imul
out
cmps
test
push
sbb
adc
and
or
in
mov
sbb
cmp
dec
xor
repnz
mov
xor
cmp
lds
les
cmc
mov
in
push
pop
pop
pop
push
push
pop
push
mov
jb
sar
xchg
and
(bad)
and
(bad)
mov
in
mov
in
mov
pusha
push
sub
fidiv
fwait
cmp
and
mov
mov
adc
cmp
rep
out
mov
xor
sbb
push
pop
mov
(bad)
icebp
push
inc
push
jp
shl
xor
sub
or
cmp
mov
stos
ret
mov
jmp
pop
dec
or
fisubr
sub
or
cmp
std
clc
fs
cmps
cli
mov
mov
dec
push
xchg
sar
pushf
shr
inc
xor
sti
mov
pushf
int3
sbb
dec
cmp
out
popa
and
ficomp
or
cli
xor
inc
mov
test
test
movs
(bad)
(bad)
iret
in
dec
inc
jecxz
mov
fsub
out
mov
mov
inc
adc
push
inc
sbb
mov
js
inc
or
pop
shl
aad
(bad)
mov
jno
add
xchg
mov
pushf
pop
cmp
inc
std
xchg
movs
(bad)
ror
push
xor
inc
add
popf
ret
repz
inc
xor
jo
sub
outs
add
sbb
dec
add
add
je
dec
cs
aaa
loope
mov
and
ss
add
mov
lods
(bad)
and
push
xor
retf
dec
mov
or
mov
jg
imul
cmp
adc
mov
ret
je
inc
pmaddwd
push
popa
sbb
adc
mov
popf
cmps
leave
gs
call
or
aas
fisub
in
mov
and
and
or
or
mov
pop
inc
sbb
mov
(bad)
fdivr
pop
adc
or
push
cmp
lods
fsub
push
fwait
xchg
sbb
adc
out
xchg
scas
aad
in
mov
sbb
push
and
add
or
fnstcw
sub
pushf
into
sahf
call
cmp
inc
mov
and
adc
jnp
dec
das
jle
int
shl
outs
push
dec
sbb
mov
ds
sbb
jns
push
add
mov
push
dec
test
fnstcw
jb
jb
inc
mov
leave
lods
(bad)
and
outs
push
jl
bound
dec
or
inc
pop
je
and
pop
gs
and
dec
cmp
movs
or
push
jl
jbe
cld
jge
dec
adc
pop
add
jns
imul
fdiv
adc
jg
pop
xor
adc
sbb
jl
dec
or
mov
add
push
cmp
push
push
inc
in
call
lds
(bad)
jne
push
adc
popa
adc
jns
in
adc
sub
xor
xchg
ret
sub
inc
int3
xchg
(bad)
sahf
int3
push
pop
aaa
and
lods
ficom
ret
lea
lods
cli
mov
loopne
call
mov
mov
stos
les
cmps
fstp
jnp
sub
out
inc
xor
in
mov
xchg
outs
test
add
jne
push
pop
or
xor
dec
mov
scas
(bad)
mov
iret
mov
mov
dec
adc
xor
fcomp
push
(bad)
jmp
int3
popa
daa
arpl
sbb
es
mov
mov
add
jb
jae
cwde
movs
call
fcmovnu
imul
cmp
loope
push
and
cmp
inc
add
es
cmp
loope
or
inc
xchg
arpl
add
dec
add
xchg
mov
out
movs
int3
xchg
retf
test
arpl
push
or
outs
xor
div
push
es
xor
inc
add
and
cmp
int
jno
inc
cmc
jp
aaa
jne
cmp
test
scas
mov
mov
cmp
jle
pop
jmp
xchg
fdiv
push
dec
out
push
je
pop
adc
push
ret
pop
and
ror
inc
adc
and
adc
push
sub
pop
xchg
jmp
fwait
mov
xor
pop
cmps
jmp
cmc
mov
add
sahf
jns
je
hlt
inc
push
push
or
jo
inc
mov
cmp
xor
dec
pop
push
mov
ins
ds
sub
push
jmp
cmp
imul
movs
cmps
std
mov
int
ret
mov
or
lods
inc
mov
lahf
mov
lahf
or
cmp
pop
jmp
cdq
retf
pushf
cmps
test
inc
add
sub
jmp
pop
sub
xor
dec
sbb
in
neg
fld
ja
aaa
inc
xor
push
sub
and
cli
mov
push
or
jp
imul
xchg
stos
icebp
mov
cmovnp
mov
push
lock
inc
ror
retf
mov
add
loopne
shr
stc
mov
cwde
aad
xor
sub
in
ret
das
or
sbb
xchg
test
sti
mov
mov
jle
hlt
test
xchg
scas
mov
mov
jae
jg
push
xor
and
adc
sub
jecxz
and
or
dec
cs
adc
jnp
jae
cdq
jp
fcomp
inc
add
ins
push
add
jns
and
cmc
das
push
or
inc
loope
mov
inc
sbb
xlat
xor
sbb
adc
imul
aad
mov
(bad)
stc
mov
pop
and
inc
sub
js
push
test
gs
fadd
inc
in
inc
test
mov
or
or
cmp
adc
jl
and
push
add
xchg
(bad)
mov
xchg
mov
scas
mov
mov
jp
ja
jbe
push
mov
mov
hlt
mov
xor
sbb
test
mov
popf
hlt
fld
sub
ja
xchg
mov
mov
xchg
ret
mov
stos
sti
mov
or
pop
cmp
dec
cmc
dec
cmp
cmps
mov
xchg
clc
and
(bad)
pop
pop
imul
jnp
pop
or
test
jg
and
fcomp
mov
test
mov
mov
sbb
pop
imul
call
mov
inc
cmp
outs
or
adc
add
adc
bound
xor
and
hlt
push
or
loope
(bad)
add
push
ss
and
adc
inc
add
pop
push
sbb
xor
push
sbb
dec
stos
xchg
in
mov
daa
hlt
call
xor
pop
in
inc
inc
sbb
xchg
iret
add
nop
rep
cld
cdq
adc
mov
stos
sti
mov
jns
imul
mov
mov
(bad)
mov
enter
inc
pop
ins
test
retf
mov
and
cwde
idiv
js
dec
cmp
adc
push
leave
daa
and
dec
rcr
aas
jl
test
mov
jmp
hlt
mov
fsub
ins
rol
rep
(bad)
cmps
in
stos
fisttp
inc
jmp
jae
dec
repnz
mov
scas
rep
in
fadd
(bad)
pop
xor
pop
sub
popa
adc
inc
pop
add
jb
inc
sbb
mov
mov
pop
sub
ins
sbb
ror
add
(bad)
cld
scas
cdq
sbb
jo
adc
or
sub
and
lds
div
ret
xchg
xlat
jbe
(bad)
push
adc
das
push
cli
cmp
push
es
hlt
js
inc
jmp
and
fistp
mov
xor
pop
cld
xchg
aad
mov
mov
std
xchg
outs
mov
add
jbe
xchg
stos
int
and
pop
sbb
push
push
cmp
loope
repz
mov
cmps
(bad)
xchg
(bad)
mov
lock
repz
dec
or
sti
jo
inc
xor
gs
mov
mov
mov
and
arpl
sub
retf
dec
movq
dec
push
inc
test
ret
mov
and
int
es
adc
add
cwde
xchg
enter
pop
js
mov
test
push
or
bound
pop
das
jge
sub
pop
push
cmp
inc
or
ds
push
inc
jmp
(bad)
retf
mov
aad
mov
ja
xchg
jmp
cwde
sub
not
add
sub
mov
out
jmp
dec
push
add
or
dec
test
je
mov
adc
and
(bad)
add
(bad)
neg
rcr
lahf
rcr
shl
push
or
xor
adc
movs
ret
xchg
xlat
and
jnp
jae
retf
pushf
in
cdq
dec
fldcw
fs
push
jecxz
fsub
add
cmps
push
dec
or
pop
adc
aad
not
adc
fidivr
cwde
mov
dec
or
fidiv
jecxz
and
jno
push
out
lods
push
repnz
enter
repz
dec
adc
imul
out
scas
enter
outs
add
bound
je
data16
loope
mov
cld
scas
(bad)
cdq
fstp
aad
ins
xor
and
and
call
pop
dec
cmp
aas
in
push
or
or
pop
or
pop
repnz
test
inc
in
cmps
adc
bound
pop
pop
or
sub
sbb
pop
add
inc
xor
pop
sysenter
outs
cmp
xchg
jae
xor
xor
cmp
mov
(bad)
sbb
xor
mov
xchg
pushf
dec
push
sub
pop
or
cs
and
(bad)
xlat
test
jl
mov
popf
fldcw
jo
jle
push
sbb
lahf
iret
rol
arpl
ja
sahf
ret
(bad)
fistp
ficomp
popa
or
adc
repz
outs
add
push
loop
(bad)
cmp
ja
jle
xchg
fiadd
jae
pop
mov
jle
shr
push
push
push
xor
sahf
iret
inc
or
jns
jle
data16
mov
pop
push
aaa
adc
pop
mov
mov
imul
jecxz
pushf
mov
mov
mov
push
push
rcr
in
mov
add
xchg
retf
nop
fldcw
inc
das
jl
push
adc
sub
and
xor
sub
sahf
jo
sub
mov
push
push
and
and
add
mov
xor
adc
jno
push
adc
mov
sbb
dec
cmp
aam
fs
aas
push
mov
or
mov
repz
sub
sub
push
adc
stos
retf
pusha
and
sbb
or
mov
scas
lock
add
jp
mov
mov
sbb
data16
inc
push
push
sub
leave
xchg
fldenv
inc
mov
and
push
or
imul
dec
icebp
xor
sub
pushf
push
mov
dec
push
test
lds
xchg
loop
imul
xor
and
and
mov
inc
cmp
xor
xor
inc
push
dec
adc
sub
and
sbb
mov
popf
(bad)
cmc
xchg
in
push
or
cmp
enter
fdiv
or
inc
adc
cmp
cmp
adc
call
and
stos
dec
mov
push
xor
dec
mov
(bad)
iret
cdq
jmp
je
lock
div
pop
adc
push
movs
xchg
mov
bound
jo
sub
xlat
lods
stc
test
mov
popf
(bad)
jl
mov
scas
dec
mov
shl
push
nop
bound
dec
out
enter
fucom
test
jne
sbb
bound
and
das
sbb
jns
ja
sbb
fsub
and
inc
adc
mov
mov
mov
lahf
clc
mov
lods
shr
cld
mov
stos
shl
jne
xchg
xchg
rol
inc
(bad)
xchg
jmp
mov
mov
hlt
mov
mov
(bad)
mov
fst
arpl
rol
sbb
movs
cmc
scas
std
popa
push
inc
loopne
mov
jmp
sub
fisub
or
dec
push
ja
jo
mov
inc
fld
and
(bad)
nop
cmps
neg
sahf
fbld
add
and
and
js
pop
adc
popf
scas
repz
mov
aad
neg
pusha
lods
movs
cld
lods
in
(bad)
mov
pop
dec
das
ficom
(bad)
xchg
loop
shl
aam
lahf
cli
stos
xchg
pop
xor
scas
xlat
outs
pop
xor
sbb
jecxz
stos
lock
cmp
aad
shl
jmp
mov
pop
push
es
pop
retf
mov
mov
pop
adc
dec
out
cs
add
sbb
pop
sbb
sub
add
aas
jl
dec
jmp
repz
fist
aam
aas
or
(bad)
cmc
ins
push
repz
or
push
pop
es
gs
sbb
push
add
sub
inc
sub
sbb
in
jbe
arpl
les
inc
adc
test
mov
mov
xchg
mov
xchg
inc
adc
cmp
pop
fst
jne
jno
jl
leave
and
pop
(bad)
mov
lods
lds
shl
jmp
mov
sub
mov
mov
ret
mov
clc
xchg
inc
sbb
xor
xchg
lds
mov
mov
push
cld
fwait
hlt
push
and
js
jns
daa
push
add
or
cmc
cmps
out
mov
call
fisub
outs
adc
mov
cmp
push
add
sbb
mov
out
add
fimul
mov
mov
push
cmc
mov
cmp
mov
ja
mov
scas
cmps
stc
mov
pop
and
je
test
cli
mov
push
repz
(bad)
xchg
sar
retf
cmp
stc
mov
mov
mov
mov
sbb
test
and
fcomp
xor
mov
jno
pop
in
lds
jp
push
xor
mov
lock
mov
clc
popf
int3
mov
fidivr
dec
mov
fistp
aam
rcl
cdq
into
xor
movs
cld
(bad)
int3
mov
pushf
enter
cmps
fidiv
dec
add
inc
adc
fwait
(bad)
mov
cdq
fsubr
mov
xchg
fstp
stos
in
xchg
fldenv
pusha
es
icebp
mov
mov
popf
aam
inc
or
in
and
ds
push
sbb
sub
xor
sub
mov
inc
shl
maxps
push
cmp
jns
ins
mov
push
mov
cmp
cmp
ins
cmp
xor
and
popa
xor
mov
mov
enter
js
ds
adc
data16
xor
push
add
lods
mov
test
push
dec
loopne
(bad)
jno
ins
cmp
mov
add
loop
add
add
mov
jns
add
adc
in
cmc
or
imul
stc
push
cmps
mov
repz
iret
mov
fld
push
test
inc
in
mov
stc
mov
push
sub
jge
imul
adc
scas
fiadd
xor
sbb
aaa
jo
and
mov
ins
xor
add
xchg
xchg
inc
or
sti
mov
lds
pop
add
cmp
fs
or
jae
enter
pop
pop
adc
arpl
dec
sbb
adc
push
adc
push
dec
mov
cld
xor
retf
call
mov
xchg
out
and
mov
cld
and
and
pop
test
mov
lds
sbb
mov
es
push
or
jl
and
push
cmp
jp
sub
and
xlat
push
cmp
cdq
mov
inc
fisttp
in
arpl
sub
jae
pop
aaa
js
cmc
stos
icebp
push
pop
in
xor
pop
in
stc
mov
movs
jmp
sbb
sbb
xchg
jmp
inc
xor
dec
stos
lea
xor
push
adc
mov
movs
jo
jg
dec
repnz
retf
cdq
mov
or
(bad)
bound
pop
(bad)
pop
sub
retf
xchg
dec
add
inc
pop
pop
mov
movs
(bad)
xchg
arpl
push
sbb
and
mov
call
sbb
jl
inc
sbb
inc
jg
pop
sub
ds
cmp
add
shl
ja
push
push
xchg
cwde
dec
add
push
xor
pop
mov
jmp
inc
sbb
out
or
imul
fwait
repnz
fdiv
std
lods
rcr
stos
cmps
aad
xchg
les
mov
mov
or
mov
nop
lods
lods
jmp
leave
jo
mov
xchg
movs
movs
in
push
add
aam
add
push
div
ja
and
sbb
fwait
repnz
push
stc
call
shl
mov
pushf
aam
pop
adc
inc
cmp
dec
pop
inc
push
(bad)
imul
push
jmp
push
pop
loopne
retf
imul
mov
(bad)
xchg
out
or
push
or
push
adc
fld
out
add
fild
div
mov
out
out
imul
dec
loop
hlt
sub
(bad)
shr
test
xchg
pop
push
ins
ficom
add
mov
ret
cmp
and
pushf
out
mov
sub
mov
ja
push
pusha
cmp
fwait
or
cwde
cli
or
inc
pop
inc
test
loope
inc
shl
scas
aam
aam
inc
repz
iret
mov
push
xor
cmps
movs
push
mov
movs
in
popa
or
add
mov
ret
inc
fwait
cmc
popf
enter
add
das
jg
ins
out
ficom
cmp
dec
adc
mov
or
bound
mov
cwde
leave
mov
loop
adc
pop
pop
push
cmp
inc
xor
adc
jge
push
loope
aad
xchg
sar
adc
jle
inc
sub
imul
or
xchg
(bad)
mov
mov
lods
sti
mov
pop
xchg
mov
push
sub
mov
mov
mov
es
aas
outs
loopne
int
rep
ret
scas
inc
adc
inc
test
lock
push
sub
sbb
dec
cmp
jmp
test
repnz
ret
nop
fisub
iret
add
imul
dec
jecxz
sar
lods
cmc
mov
aam
icebp
mov
add
imul
cmp
dec
es
ss
mov
frstor
inc
mov
mov
arpl
ret
inc
cmp
imul
jo
dec
call
addr16
add
ficomp
jo
stos
(bad)
mov
mov
movs
ins
call
mov
mov
test
xchg
jb
mov
xchg
inc
mov
call
xchg
arpl
mov
mov
mov
pushf
dec
loopne
repz
xchg
loopne
push
cli
mov
cmps
nop
imul
xor
add
push
cmps
mov
lahf
aad
lds
mov
fs
xchg
(bad)
es
adc
fdiv
dec
pop
and
mov
inc
cmp
xor
adc
inc
mov
lods
mov
pop
xchg
repnz
ret
cmp
and
fdivr
jle
imul
push
ins
adc
or
mov
bound
jg
inc
or
stos
std
xchg
in
fdiv
movs
neg
or
scas
fist
leave
pushf
int3
inc
sbb
lods
test
mov
push
cmp
pop
adc
push
cwde
lods
cld
scas
out
popa
jns
dec
in
call
add
xor
addr16
mov
(bad)
push
cli
xchg
cwde
int3
bound
es
dec
add
inc
xor
loopne
into
xchg
stos
cmps
(bad)
xchg
jbe
adc
enter
sbb
or
mov
cld
xchg
leave
xchg
cmc
stos
popf
pop
aaa
jle
(bad)
sbb
jno
add
pop
xchg
push
les
(bad)
lahf
adc
push
mov
in
nop
mov
lods
mov
ss
adc
inc
adc
sbb
pop
sub
fdiv
ficomp
loop
out
fldenv
mov
(bad)
aas
sbb
ja
call
lock
cwde
ret
scas
scas
retf
pushf
cmps
mov
adc
movs
test
adc
push
dec
ds
pop
push
push
jle
clc
mov
retf
mov
sub
dec
adc
push
jne
jle
dec
int3
jo
adc
inc
sbb
dec
sbb
or
add
ret
cdq
leave
lods
loopne
in
sub
dec
mov
ret
xchg
or
jnp
pop
lea
push
cli
pop
retf
test
cmps
push
les
cdq
retf
loop
push
pusha
movs
(bad)
icebp
test
mov
and
mov
test
add
sbb
sahf
mov
aam
outs
clc
xchg
rcr
xchg
(bad)
popa
(bad)
call
sub
in
or
sub
xchg
cmc
and
push
adc
cmp
jmp
out
mov
add
sbb
push
repnz
fimul
lods
in
mov
push
std
xchg
jp
xchg
mov
test
int
stc
mov
ins
ds
add
fs
push
sub
or
sbb
or
fsubr
mov
mov
push
cmp
pop
or
psadbw
gs
imul
add
jne
cld
push
cmp
and
lahf
fmul
iret
cwde
sar
call
jo
jbe
stos
ror
sbb
add
cs
maxps
sub
imul
sbb
call
mov
cmovl
sub
or
xor
pusha
aas
dec
adc
pop
xor
nop
shl
or
test
pop
xchg
fnsave
jbe
and
jge
ficom
cmp
jae
push
das
jle
cmp
fisttp
mov
push
pop
(bad)
xchg
cmps
fisttp
pop
sar
cmps
icebp
cwde
lods
inc
ins
add
adc
js
jb
cmp
dec
xor
(bad)
cwde
jbe
je
mov
dec
adc
mov
or
jno
dec
mov
mov
imul
cwde
xlat
cmps
jmp
sahf
out
mov
jg
pop
cs
dec
add
inc
in
idiv
mov
inc
iret
mov
scas
js
test
jo
pop
fimul
mov
mov
mov
fist
loope
cmp
inc
mov
xor
inc
pop
push
xchg
mov
push
es
add
push
jbe
or
jo
mov
test
sub
lods
jp
data16
sbb
(bad)
cmp
push
sbb
add
adc
mov
stos
fisttp
ins
sbb
inc
and
or
push
dec
cmp
lds
inc
push
fnstenv
jmp
or
js
xchg
hlt
mov
cmc
pop
bound
jo
add
mov
sahf
lds
imul
adc
outs
xor
and
dec
sbb
fwait
adc
dec
or
dec
sar
lds
fwait
int
out
xchg
(bad)
mov
or
pop
or
jbe
pop
jecxz
fldl2e
cdq
rcr
xchg
inc
int
fcom
xchg
js
nop
shl
xchg
mov
mov
lods
fimul
sub
dec
cmps
jp
pop
add
sbb
popa
in
mov
jp
and
in
fs
xlat
xchg
mov
addr16
sbb
retf
cwde
scas
shr
xchg
or
xor
adc
cmp
jnp
lahf
mov
stc
mov
(bad)
fistp
and
mov
jb
(bad)
inc
cs
or
cmp
jmp
adc
fwait
push
dec
div
pushf
push
fnstenv
jno
pop
adc
imul
mov
call
dec
stos
sahf
rcl
nop
aam
(bad)
mov
xchg
loope
lds
in
retf
dec
push
dec
mov
(bad)
lahf
rol
sti
mov
xchg
lods
cdq
fldenv
loopne
or
dec
add
jle
icebp
dec
punpckhdq
dec
loop
aaa
in
addr16
repz
test
imul
mov
xor
pushf
retf
mov
mov
call
stos
pop
push
fsubr
inc
add
ja
xor
daa
adc
jg
push
pop
aam
cmp
push
pop
pop
hlt
test
pop
fsubr
fdivr
add
pop
fwait
xor
inc
xor
shl
fsubr
popf
int3
mov
push
and
mov
clc
aaa
js
push
xlat
add
jle
dec
sub
sub
loopne
shr
lods
mul
adc
push
adc
pop
or
enter
sbb
(bad)
jmp
clc
mov
xor
addr16
and
inc
jecxz
mov
mov
out
cld
(bad)
fucomi
lds
pmullw
aam
push
add
xor
dec
fwait
cmps
(bad)
mov
jno
pop
sub
ss
loop
xor
cwde
fnstenv
pop
sbb
jb
jnp
jae
lock
inc
loop
sub
pusha
or
and
push
dec
xor
sub
pop
stc
arpl
cmp
ja
(bad)
les
std
xchg
jmp
cmp
or
cmp
pushf
xchg
xlat
cmp
pop
movd
jmp
adc
ss
push
jl
adc
xchg
cmc
nop
retf
push
sbb
mov
and
sbb
and
fmul
jno
jge
(bad)
mov
mov
pop
cs
pop
dec
(bad)
mov
jne
data16
add
ds
pushf
out
bound
jg
sub
or
ja
push
and
cld
lods
(bad)
mov
pop
popa
sub
push
pop
sub
pop
sub
push
rol
mov
(bad)
xchg
call
xchg
call
mov
mov
or
int
fisttp
enter
jmp
test
mov
mov
pushf
cmc
xchg
shl
mov
mov
and
jp
pushf
out
jp
push
pop
inc
adc
sbb
dec
or
sub
dec
sub
pop
loope
fisubr
fdivr
jecxz
sub
mov
sbb
mov
mov
cmc
mov
fstp
inc
sub
scas
jmp
stos
icebp
mov
out
out
fxtract
mov
cmps
push
adc
and
inc
xor
pop
push
gs
inc
sbb
das
ja
jecxz
icebp
pusha
xor
cmp
imul
and
jmp
push
and
inc
adc
sub
retf
pushf
mul
and
ins
push
retf
sahf
fsubr
iret
cwde
enter
jbe
sbb
ds
movs
mov
call
jne
inc
adc
lds
inc
jmp
stos
ret
mov
test
jno
inc
or
pop
cs
inc
test
enter
loop
mov
inc
sub
hlt
cmp
jge
mov
outs
or
lds
aas
dec
loope
div
test
test
add
fwait
outs
fisubr
jecxz
xchg
mov
or
daa
or
repnz
mov
jae
push
adc
stos
xchg
popf
fwait
jl
xchg
inc
aad
scas
(bad)
idiv
test
pop
add
sbb
push
(bad)
aas
sub
adc
std
sub
ret
push
test
mov
mov
movs
movs
mov
addr16
(bad)
push
cmps
dec
scas
fwait
jle
xchg
mov
or
xchg
jg
dec
int
lds
loop
mov
ins
repnz
sbb
in
sub
sub
mov
clc
pop
test
(bad)
cmp
fadd
sahf
jle
fwait
dec
fidivr
jg
bound
inc
retf
dec
(bad)
pop
movs
(bad)
cmp
pop
fisttp
mov
cmps
test
inc
lods
jo
inc
not
in
and
or
push
add
cli
cs
mov
test
mov
mov
test
push
shl
mov
mov
sahf
dec
lock
aaa
call
and
xor
adc
push
add
add
dec
jmp
repz
leave
push
in
push
shl
in
movs
xchg
pushf
mov
xchg
jp
cwde
jno
adc
loope
rcl
xchg
pusha
rol
jecxz
(bad)
jle
xchg
xchg
push
iret
cmp
pop
(bad)
pmullw
js
jl
push
mov
daa
cli
and
xor
(bad)
ss
cld
cmp
or
cmp
cmc
pop
cmps
rcl
cmp
xor
xor
adc
push
sar
jmp
mov
inc
test
imul
sbb
xor
mov
push
je
mov
gs
and
and
or
adc
fwait
test
dec
mov
cmp
or
push
mov
push
mov
popa
mov
out
shufps
sbb
push
mov
int
sti
pop
mov
je
cmp
shl
nop
popf
jo
cdq
dec
scas
dec
repz
imul
rol
or
pop
iret
add
sub
pop
push
(bad)
loopne
ja
inc
xchg
je
xchg
adc
(bad)
or
data16
mov
rol
inc
fld
in
sub
pop
lods
xlat
and
xor
retf
imul
pop
aad
ja
push
(bad)
int3
dec
mov
dec
xlat
dec
mov
inc
lea
lods
dec
cmp
loop
or
sbb
(bad)
pop
xchg
ins
mov
mov
push
shr
cmp
dec
scas
fwait
cwde
jl
lahf
jo
lods
lea
in
rol
das
(bad)
cmp
mov
ins
(bad)
inc
and
sahf
jae
xchg
mov
enter
das
sub
adc
sub
jp
ja
jge
push
imul
xchg
jns
bound
push
mov
add
jbe
xchg
mov
imul
jnp
clc
inc
mov
popf
ins
mov
bound
lds
repnz
xor
not
gs
xor
push
mov
jmp
test
int3
xor
enter
shr
dec
fsub
adc
pushf
xchg
pusha
cmps
inc
les
xchg
(bad)
cs
dec
xchg
mov
lea
push
out
mov
(bad)
ficomp
stos
repnz
ins
scas
fwait
jo
in
xor
and
pop
inc
leave
cmp
sub
pop
movs
ins
nop
les
je
jge
sub
xor
mov
out
and
and
push
movs
jae
daa
sbb
add
jo
cmp
cmp
push
out
push
ds
daa
push
ret
cmp
jbe
bound
xchg
js
aaa
add
xchg
call
push
repz
sbb
pop
sbb
adc
das
out
ud0
lea
fwait
inc
lock
push
adc
and
imul
mov
jecxz
nop
jne
sub
pop
mov
scas
xchg
in
jnp
pop
fsubr
and
shr
inc
mov
adc
jb
inc
movs
xchg
inc
cmps
push
ret
jb
push
mov
pop
mov
clc
inc
test
mov
or
pop
mov
fnstcw
test
out
xor
adc
push
dec
icebp
push
(bad)
xor
or
test
xchg
popa
mov
mov
cmp
cmp
push
jecxz
lds
mov
mov
jne
bnd
or
cs
xor
ror
pop
mov
dec
std
push
scas
lahf
leave
dec
fdiv
hlt
push
int3
dec
mov
clc
add
cmp
ret
xor
(bad)
aaa
add
mov
add
shl
dec
mov
sbb
add
call
cld
pop
iret
cmp
xor
push
fnstcw
out
cmp
aas
sbb
ins
mov
mov
pop
lock
stos
mov
jp
das
stc
xchg
addr16
outs
sub
jle
xchg
jae
pusha
and
repnz
fldcw
out
stc
add
sub
or
or
pop
mov
clc
jno
pop
aam
mov
cmp
sbb
cs
push
mov
mov
(bad)
xchg
push
jb
lea
sub
jmp
add
jecxz
in
mov
push
out
jge
jno
push
mov
retf
add
inc
mov
hlt
cmp
mov
add
or
ins
(bad)
and
fsub
sbb
push
fild
pop
retf
push
stos
ins
or
fld
pop
(bad)
pop
xchg
xchg
(bad)
jnp
cdq
dec
add
retf
or
push
loopne
cmps
test
ins
mov
cmp
push
cmp
cli
ss
push
fistp
or
inc
ficomp
dec
mov
xor
cmc
cmp
pop
cli
pop
stc
cmp
xchg
inc
test
jns
inc
fadd
jmp
mov
bswap
ds
pop
scas
jg
push
mov
call
pop
mov
cs
cmp
sbb
das
adc
pop
cmp
lock
lahf
dec
mov
adc
cmp
pop
xlat
add
sbb
data16
icebp
sub
mov
jno
sub
cli
test
aad
(bad)
int3
outs
test
mov
es
clc
or
pop
mov
or
enter
enter
inc
fist
dec
mov
popa
mov
jbe
sahf
jge
push
mov
mov
je
into
pop
scas
inc
mov
int
movs
(bad)
js
mov
mov
sub
test
inc
hlt
sub
(bad)
and
sar
xchg
ror
hlt
mov
enter
lahf
jp
pop
sbb
idiv
push
retf
mov
push
mov
ss
add
jmp
and
xchg
xchg
ins
stos
jne
add
and
push
adc
inc
lods
leave
pop
retf
or
sub
and
das
sbb
jb
xor
movs
jnp
imul
shl
adc
push
mov
icebp
and
movs
or
cmp
cmp
pop
mov
and
mov
stos
jle
add
ja
xchg
popa
mov
push
sar
adc
push
adc
test
movs
push
mov
jle
dec
fidiv
gs
inc
mov
jae
lea
repz
ja
mov
inc
aad
add
sub
adc
es
cmp
jns
add
imul
mov
jge
loope
mov
or
out
lods
imul
in
lea
xchg
jne
pushf
dec
add
pop
or
add
scas
pushf
xchg
xchg
add
int3
sub
jae
lea
stc
push
and
inc
cmps
xchg
inc
fild
mov
xchg
jnp
(bad)
and
sub
adc
add
sub
test
lds
pop
or
jecxz
xchg
jp
jb
aaa
retf
xor
icebp
mov
retf
arpl
aaa
adc
adc
(bad)
sub
add
sub
pop
shl
sub
adc
pop
shl
pop
jecxz
fld
into
cdq
ins
mov
inc
mov
dec
sbb
mov
pop
xchg
ret
xchg
mov
nop
xchg
jo
pop
shl
mov
jo
bound
js
add
inc
mov
and
mov
out
adc
rcl
xchg
jo
ss
std
dec
fld
iret
pop
fisttp
call
cmp
loope
add
xor
dec
test
pusha
mov
mov
sahf
inc
shl
jmp
xlat
ds
repz
test
inc
shr
sbb
xor
push
test
out
retf
inc
xchg
sbb
cs
bswap
add
jmp
in
pop
mov
ins
rcr
push
imul
sub
dec
test
movs
dec
or
enter
fisub
dec
mov
inc
mov
int
xchg
xor
mov
jbe
popa
into
cmp
mov
rol
or
xor
mov
inc
cmp
ficom
ret
push
sbb
mov
pop
neg
lahf
cli
jge
ins
fcom
loope
mov
jmp
adc
sub
xor
push
stos
outs
mov
aad
mov
sub
sub
adc
and
in
xchg
mov
dec
lods
ins
rcr
add
cmp
cs
lock
ficomp
dec
fmul
std
aas
call
das
imul
lds
add
adc
adc
or
sbb
sub
enter
mov
lods
dec
and
inc
fmul
les
mov
les
clc
ds
or
push
xchg
imul
mov
jnp
push
sar
out
hlt
inc
movs
cwde
fcomp
adc
pop
adc
fiadd
inc
out
les
loop
call
std
ds
cmp
rol
int3
and
and
inc
into
adc
call
xchg
jne
lods
push
mov
xlat
push
fisttp
mov
es
cld
dec
scas
mov
aam
dec
lds
test
inc
lods
pusha
sar
repz
xor
les
out
ds
ins
shr
sti
jnp
je
adc
ror
sbb
mov
pop
mov
ins
les
cwde
popf
mov
inc
movs
mov
aaa
or
pop
fdivr
jmp
sub
test
(bad)
fsubr
icebp
ss
icebp
inc
mov
test
xchg
jp
xor
sub
pop
mov
outs
into
jg
pop
adc
xor
outs
movs
je
push
int3
or
mov
xor
out
dec
xlat
sub
stos
ins
nop
js
pop
pop
loop
mov
mov
inc
fistp
out
fild
add
push
stc
add
push
add
inc
mov
mov
dec
mov
fwait
jo
or
and
aaa
loope
xor
pop
adc
dec
into
sub
sub
xor
sub
clc
push
xchg
xchg
outs
lods
popf
jb
jo
call
clc
dec
test
pop
mov
cdq
jo
xchg
stos
and
jl
cwde
pushf
jno
pushf
jno
data16
test
dec
fistp
inc
pop
neg
mov
(bad)
or
xor
sub
xor
or
xchg
(bad)
push
xchg
cwde
inc
mov
cmp
push
shr
jmp
push
adc
dec
mov
xor
and
or
or
dec
or
push
loop
xchg
cmp
xchg
xchg
js
push
movs
test
cs
inc
(bad)
ds
or
fmul
dec
sub
or
jecxz
ins
adc
outs
cld
cmp
sbb
xor
mov
in
cmp
add
retf
jge
and
sar
enter
inc
sbb
xor
repz
add
and
cmps
jp
pop
loopne
push
call
sub
sub
pop
xchg
pushf
dec
mov
gs
out
or
cmp
shl
mov
aaa
in
mov
call
mov
xchg
jne
add
inc
fdiv
out
sbb
add
pop
mov
cmp
and
inc
mov
dec
or
push
jmp
adc
cmc
pop
mov
push
add
push
icebp
jns
bound
fsubr
out
push
retf
cmovle
sub
pop
aas
cli
and
cld
ss
sbb
and
ja
inc
mov
xchg
xchg
je
or
loop
hlt
pop
sbb
loopne
and
retf
pusha
fidivr
push
jmp
(bad)
dec
mov
add
jae
lahf
retf
pop
mov
pop
cmps
pusha
jmp
test
cmp
push
shl
adc
jbe
push
mov
jno
push
dec
scas
js
lds
in
and
movs
fild
loope
neg
xor
call
shr
sub
loope
mov
sub
ds
dec
shr
push
cmc
push
and
mov
popa
aam
adc
sbb
repnz
movs
test
adc
push
out
push
div
fist
out
pop
fiadd
je
sub
or
imul
inc
(bad)
sub
out
pop
(bad)
adc
add
cmp
sar
jmp
sti
and
sub
scas
addr16
jle
arpl
push
mov
jbe
xchg
inc
shl
pop
repnz
test
cmp
es
mov
imul
add
pop
(bad)
sbb
aas
leave
push
in
mov
xchg
ja
cmp
cmp
sar
pop
pop
out
pop
in
pop
push
cmp
stc
aaa
ret
xchg
(bad)
dec
mov
inc
lock
xlat
and
fild
stc
push
test
lods
mov
inc
stos
pusha
aam
adc
jge
dec
mov
int
sbb
sub
clc
dec
test
sbb
dec
mov
ins
mov
cmc
es
aaa
pmulhw
jnp
in
xor
add
push
sbb
mul
sub
loop
aad
test
cmps
jmp
mov
pop
mov
mov
jns
push
test
popf
dec
scas
xchg
arpl
add
les
das
leave
xor
jno
xchg
inc
stos
lahf
pusha
aad
clc
push
scas
jb
xchg
cdq
jmp
mov
jle
adc
push
mov
test
and
out
dec
movs
outs
mov
shl
xlat
adc
push
mov
outs
scas
push
or
xor
loop
out
js
pop
test
cmp
or
out
xor
sub
dec
fisub
jne
xor
inc
aad
dec
rcr
sub
cmp
fwait
push
test
mov
dec
(bad)
mov
ja
xchg
jp
(bad)
jne
imul
or
and
pop
loopne
push
jmp
push
sar
out
push
int3
aas
adc
pop
(bad)
sbb
and
cs
pop
stos
gs
dec
retf
mov
jge
arpl
xor
add
jecxz
or
adc
sbb
push
adc
jbe
ins
cmc
and
add
cmp
adc
es
mov
or
dec
cmps
xchg
inc
shl
loope
test
xchg
xchg
jmp
or
retf
pop
aam
adc
std
cmp
push
daa
das
xor
or
inc
xor
loop
mov
test
push
stos
outs
mov
lahf
outs
(bad)
push
xor
aas
sbb
mov
pop
cmps
xchg
jbe
outs
mov
frstor
loope
push
nop
cwde
jge
mov
stos
pushf
inc
test
push
retf
ds
sbb
dec
stc
cmp
(bad)
das
sbb
sub
not
fwait
jnp
lods
call
push
repz
mov
rol
in
cmp
sbb
dec
mov
imul
ret
and
and
call
sub
jmp
or
add
pop
mov
lods
sbb
add
call
in
(bad)
jns
xor
push
les
push
inc
stc
cmp
arpl
push
cdq
xchg
ins
int
movs
js
jb
or
movs
les
pop
cmc
pop
lods
ja
cmp
xor
pop
in
pop
test
fdiv
dec
mov
fisub
(bad)
cmp
pop
clc
or
jmp
pop
lods
push
mov
sahf
jno
sub
xchg
test
fwait
jp
(bad)
jnp
push
stos
outs
mov
sub
dec
lods
mov
call
in
mul
mov
and
and
add
dec
fisttp
add
or
push
sbb
add
xor
jno
pop
test
push
mov
or
inc
and
mov
jne
xchg
nop
mov
cmp
dec
mul
sbb
cmp
aaa
adc
sub
cmp
(bad)
outs
(bad)
push
movs
imul
add
push
add
icebp
add
repz
push
into
jg
sub
dec
fstp
fcom
loope
test
mov
sbb
ja
push
cmp
mov
mov
or
es
aam
out
clc
and
adc
pop
push
adc
add
xor
jecxz
outs
rcl
cld
sub
sbb
xor
and
push
mov
push
sbb
jle
dec
fidiv
jmp
addr16
pavgb
xor
fnstcw
jle
add
inc
stos
inc
xchg
int
push
or
loopne
(bad)
aas
or
das
(bad)
cmp
and
pop
(bad)
aas
(bad)
pop
adc
and
int
mov
or
xor
mov
in
push
mov
imul
xchg
jo
fwait
inc
fidiv
loope
out
pop
mov
jae
ss
push
stos
data16
dec
sub
dec
mov
aas
rol
icebp
and
bswap
push
and
out
adc
adc
sbb
dec
and
lods
jns
push
mov
dec
aad
sbb
dec
stos
jb
push
aad
cli
es
dec
enter
imul
push
mov
das
loop
adc
out
sbb
cmp
mov
or
cmp
cmp
pop
sar
out
inc
cld
pop
mov
xchg
cmp
dec
xor
sub
pop
fisub
loop
inc
(bad)
cmp
push
mov
jb
jg
add
xor
sbb
sar
leave
cmp
aas
and
aas
ret
dec
(bad)
loop
aam
xor
pop
mov
push
push
retf
push
fbstp
and
dec
ret
sub
sub
pop
scas
inc
mov
push
mov
or
xrelease
fwait
imul
inc
mov
xor
dec
aam
pop
adc
xchg
jbe
and
add
leave
add
mov
retf
imul
xchg
sub
inc
(bad)
call
add
es
jmp
mov
mov
add
sub
and
ds
daa
data16
repnz
lea
int3
sub
add
sub
neg
xchg
xchg
lahf
lahf
jae
cwde
push
cmp
pusha
mov
mov
xchg
mov
mov
dec
scas
inc
test
inc
test
enter
mov
mov
or
ds
pop
aad
ss
daa
pop
adc
pop
fstp
adc
sub
xor
in
mov
xchg
pop
mov
mov
jb
xchg
(bad)
and
xor
pop
iret
pop
mov
xchg
popf
imul
lds
jo
add
pop
movs
scas
jb
jnp
push
inc
lds
jmp
inc
aam
(bad)
aas
repz
sar
jmp
add
test
pop
lods
sahf
inc
mov
dec
mov
mov
or
xor
and
push
mov
inc
rol
loope
xchg
jp
test
nop
xchg
mov
or
pop
add
neg
xchg
dec
iret
ss
pop
loop
or
mov
cmp
lds
sahf
dec
scas
dec
cmps
dec
test
mov
imul
mov
stc
push
jne
cdq
jnp
xchg
into
dec
stos
pusha
repnz
sub
add
das
adc
pop
ror
jbe
sahf
lahf
inc
add
push
rcr
jl
cmp
mov
jae
xchg
loop
repz
dec
xchg
pop
shl
fistp
jae
pop
out
movs
jae
pop
scas
bound
push
mov
jne
outs
scas
xchg
inc
lods
in
(bad)
aas
push
mul
or
and
mov
xchg
inc
mov
mov
int
out
push
ret
cmp
inc
mov
cs
sub
popf
inc
shr
loopne
cld
pop
shr
out
popf
xchg
inc
stos
push
mov
pop
mov
cld
ss
xor
dec
lods
fisub
sbb
stc
push
mov
inc
aad
sbb
push
push
xor
rol
leave
cmp
and
pop
mov
jle
and
ds
and
icebp
movs
mov
xchg
push
mov
iret
dec
(bad)
jo
cmp
and
sbb
not
addr16
stc
inc
adc
and
pop
sti
jl
and
ret
dec
mov
iret
ds
dec
mov
stc
sub
or
mov
shr
sbb
add
js
nop
dec
xlat
repnz
add
xchg
push
add
pop
cld
in
daa
data16
int3
push
outs
pusha
push
push
dec
ss
hlt
int
xor
(bad)
jno
loop
loop
adc
push
mov
adc
lods
outs
(bad)
push
jnp
loopne
xchg
clc
push
test
cld
mov
push
mov
dec
add
je
jle
mov
dec
mov
mov
sbb
and
or
or
(bad)
data16
ds
cld
dec
push
jbe
aad
repnz
jbe
or
inc
jb
loope
pop
push
cmc
mov
jp
add
push
stos
pop
stc
sar
pop
cmp
push
ds
data16
add
cmp
jl
or
dec
cmp
test
jge
jno
pop
mov
cld
mov
and
aas
adc
stos
enter
je
xchg
dec
shl
xchg
call
jmp
(bad)
(bad)
dec
fnstsw
cmp
dec
nop
jno
pop
mov
movs
popf
shl
xchg
out
out
inc
push
bound
pop
xchg
(bad)
mov
out
(bad)
sbb
into
dec
js
push
or
mov
sub
aad
enter
add
clc
xor
(bad)
retf
loop
fld
imul
shl
xor
jle
or
int3
shl
jmp
adc
inc
cmp
mov
out
movs
xor
sbb
add
popf
hlt
movs
test
dec
ja
scas
out
retf
mov
xor
xor
pop
dec
add
in
in
addr16
(bad)
push
stc
inc
jmp
mov
scas
jp
xlat
pushf
push
mov
inc
xlat
movs
or
jecxz
cdq
imul
mov
inc
push
stos
adc
pop
mov
sbb
aad
loopne
mov
cli
and
add
jecxz
arpl
(bad)
lods
inc
jge
outs
fs
mov
rol
pop
sub
popa
mov
leave
icebp
xchg
push
mov
pusha
add
mov
and
push
add
jmp
int
cld
mov
cmp
ins
retf
dec
popa
iret
mov
loop
fst
cmp
jmp
(bad)
fld
xchg
test
adc
lock
lahf
enter
or
(bad)
sbb
xchg
iret
push
icebp
(bad)
or
cwde
sbb
adc
cmps
mov
clc
push
in
out
rcr
dec
icebp
leave
leave
and
xor
dec
lea
and
aam
mov
inc
and
inc
scas
jmp
gs
add
xchg
jno
test
adc
or
jle
sahf
repz
addr16
cmp
push
sub
ja
add
adc
jno
in
pop
dec
dec
pop
cmp
mov
inc
ins
cli
call
(bad)
iret
loope
jae
dec
and
jge
shr
cmp
clc
retf
push
pop
mov
test
fs
dec
iret
push
xchg
repnz
pop
(bad)
mov
pop
bound
pop
mov
mov
push
dec
or
adc
push
mov
cli
(bad)
retf
mov
adc
sub
cmps
mov
ja
outs
or
cmps
hlt
out
icebp
dec
fwait
or
cmp
jae
test
cmps
dec
and
stos
or
sar
popf
add
neg
cmps
and
sbb
out
push
ja
dec
lock
mov
mov
fnstcw
inc
xor
hlt
adc
mov
jae
pop
sbb
mov
sbb
ss
push
mov
sbb
xchg
inc
out
push
es
int3
ins
test
mov
adc
dec
inc
sbb
pop
adc
es
nop
les
mov
bound
loopne
out
inc
and
and
in
pop
dec
xor
mov
test
fidivr
movs
jmp
cmp
jmp
sahf
inc
pop
cs
inc
fidivr
out
cmc
xor
outs
bnd
mov
jbe
jbe
xchg
shl
cmp
inc
iret
cmp
fist
ret
sub
dec
(bad)
lea
shr
(bad)
pusha
inc
lods
arpl
arpl
ret
jmp
pop
cdq
lods
aaa
push
cmps
jl
retf
lods
push
sub
mov
jae
xchg
mov
sub
push
sbb
pop
popf
xor
pop
call
pop
aas
stos
mov
pop
inc
ficom
popa
inc
mov
cmp
daa
xchg
xor
mov
shl
xchg
mov
loop
or
cmps
je
mov
or
add
popf
data16
popa
lock
leave
xor
jmp
push
cmp
adc
in
cmp
cmps
push
mov
fild
push
inc
repnz
mov
xor
pop
retf
in
push
pop
fistp
aas
imul
cmps
in
push
call
or
or
mov
push
xchg
sbb
pop
lods
out
push
leave
addr16
sub
movs
mov
cmps
pop
dec
cdq
je
rol
and
cmp
pop
pop
dec
call
push
inc
dec
sub
cmp
dec
xchg
cmp
mov
call
stos
mov
out
mov
and
xchg
push
movzx
xor
mov
xor
aam
sbb
ror
iret
jnp
pop
cmp
or
sbb
pop
inc
aam
sbb
adc
cmps
or
pop
pop
jne
xchg
and
xchg
aad
push
nop
add
push
inc
fdivr
push
out
xchg
aas
pop
cmc
jno
lahf
pop
aam
sbb
sbb
ins
sub
mov
push
in
add
pushf
jno
loop
call
dec
mov
or
fild
(bad)
loop
push
jbe
xchg
pop
jle
dec
and
fdivp
in
loopne
jns
mov
mov
iret
imul
int3
daa
lods
pop
cld
pop
xchg
mov
dec
mov
xor
jecxz
mov
inc
sahf
leave
xchg
test
and
adc
xchg
imul
jb
and
cmp
cmp
cmp
pop
je
sbb
loop
mov
(bad)
es
fidivr
or
sbb
dec
jl
movs
or
adc
out
pop
or
iret
out
xchg
push
or
sub
mov
fdivr
sub
jbe
adc
out
pop
pop
icebp
test
xchg
mov
mov
adc
and
xchg
sub
sub
cmps
mov
shl
in
pop
pusha
(bad)
push
push
sbb
jl
es
sub
push
sub
or
adc
mov
dec
push
gs
jl
fisttp
fs
imul
imul
cmps
scas
pop
sub
sahf
scas
xor
imul
lahf
loop
mov
xchg
dec
sub
cmp
movs
pop
pop
data16
dec
jge
mov
push
aas
mov
lods
iret
data16
outs
dec
repz
rcl
lods
push
mov
or
popa
dec
xor
into
popf
aas
jnp
and
or
jae
cmp
xchg
or
sbb
jb
mov
push
mov
mov
shl
or
xor
push
inc
add
rol
xlat
loopne
sahf
std
xlat
push
dec
aas
(bad)
imul
push
fcomp
mov
mov
or
add
cmp
daa
repnz
out
call
add
jb
sar
cmc
add
xchg
mov
cmp
push
dec
aad
ds
jp
push
push
xchg
out
mov
push
hlt
adc
icebp
mov
in
sub
pop
jmp
push
dec
and
shr
cdq
and
mov
fsubr
inc
jo
loopne
inc
xchg
dec
sbb
xchg
cli
xor
xchg
or
sub
jecxz
xor
jg
rcl
xchg
adc
cmp
mov
mov
add
mov
cmp
and
popa
jl
sbb
aas
jle
mov
mov
cld
fidivr
inc
xchg
jns
sub
pop
pop
xor
sbb
sbb
stos
fwait
shl
cdq
sub
cmc
pop
jg
retf
sbb
sub
pop
adc
dec
push
sbb
sbb
and
pop
inc
sub
pusha
fbstp
icebp
mov
dec
aad
pushf
mov
sbb
out
pop
imul
ror
cmp
sub
sbb
les
push
and
inc
xchg
call
mov
popa
mov
test
xor
mov
scas
xor
add
cdq
lock
jns
jns
jbe
sar
out
xor
cmp
cli
add
(bad)
adc
fsubr
lods
aad
test
ret
mov
bound
mov
shl
or
sar
jae
xor
and
mov
cs
cmp
int3
mov
lea
adc
pop
sahf
inc
pop
pushf
(bad)
repz
dec
mov
and
xor
pop
es
dec
and
push
or
sbb
mov
es
mov
xor
dec
cmps
push
fist
mov
push
xchg
ja
xor
fcmovu
xor
inc
cwde
or
and
mov
(bad)
leave
inc
mov
jp
xchg
inc
xor
aas
(bad)
xchg
(bad)
push
pop
and
inc
lea
mov
xchg
fisubr
xchg
sub
sar
mov
jecxz
mov
push
cmps
xor
push
mov
cmc
xchg
inc
adc
fsin
leave
push
mov
std
add
stos
rcr
ja
add
rcr
add
inc
xchg
and
lods
fidiv
aaa
adc
adc
jmp
inc
(bad)
ds
pusha
push
add
mov
sub
mov
xchg
lock
xlat
shr
push
pop
cmp
into
mov
jl
hlt
mov
ret
lahf
ret
push
jb
add
popa
pop
adc
or
call
js
shr
xchg
inc
mov
dec
shl
jecxz
or
inc
lahf
pop
jmp
xlat
pop
jle
jle
cmp
pop
fisttp
mov
retf
and
adc
repz
xlat
iret
cmps
or
push
xchg
jne
xchg
push
aad
mov
or
jecxz
stos
loop
dec
cmp
dec
cld
aas
mov
xor
xchg
ins
push
push
xchg
jo
mov
jmp
int3
and
mov
sahf
ins
test
js
mov
cli
outs
push
jnp
in
sahf
clc
jmp
dec
aas
push
bnd
dec
daa
push
les
jno
fimul
dec
xchg
push
fwait
push
arpl
(bad)
das
mov
mov
mov
pop
fsub
mov
xor
(bad)
adc
retw
mov
xor
cmp
imul
mov
ins
or
xlat
clc
pop
jg
in
std
xchg
ja
and
lahf
cmp
jmp
int3
cld
push
imul
repz
pop
or
xor
xchg
fisubr
jne
pop
sub
inc
jl
xchg
push
inc
ins
sti
(bad)
out
cmp
push
iret
dec
xchg
outs
pop
mov
call
(bad)
xor
adc
push
fwait
sbb
mov
inc
out
dec
in
pop
xor
add
xchg
repz
es
or
push
stos
xchg
and
push
adc
inc
mov
enter
mov
aam
dec
xor
fnsave
adc
fld1
stos
cmc
xlat
in
inc
mov
pushf
pop
sub
fwait
or
repz
das
mov
ins
int
outs
addr16
inc
addr16
xor
lods
mov
jne
ret
int
cmc
sbb
cmp
dec
sbb
mov
mov
cdq
(bad)
loopne
adc
iret
movs
out
push
dec
outs
fs
or
mov
xchg
push
push
pop
(bad)
adc
inc
cmps
mov
mov
jl
outs
cmps
jmp
push
and
xor
mov
sub
outs
mov
push
ret
pop
cmp
int3
sub
sbb
jne
cmc
inc
neg
pop
jbe
fcmovnbe
xor
adc
loop
push
repz
stos
add
jp
lock
(bad)
xchg
and
mov
mov
aas
push
xchg
in
(bad)
pop
(bad)
pop
cwde
imul
pop
push
sub
mov
ds
jmp
add
add
sti
dec
nop
bound
pop
out
dec
and
pushf
xchg
fild
push
loopne
dec
les
ja
bound
mov
and
cmp
mov
jbe
hlt
mov
arpl
cli
retf
std
jg
push
mov
loopne
xchg
mov
in
push
iret
sbb
(bad)
jmp
xchg
mov
or
popf
mov
jae
fsub
sar
push
xor
fldenv
(bad)
icebp
mov
ret
daa
inc
jle
mov
cmps
xor
sbb
in
ror
adc
test
icebp
dec
push
jle
add
xor
mov
sbb
push
lahf
push
lock
push
jne
cmp
test
aas
inc
std
lods
int
arpl
sbb
(bad)
inc
hlt
aam
shl
push
xchg
add
mov
jp
jmp
cwde
and
call
cld
mov
adc
ret
mov
xchg
mov
xchg
or
loopne
sub
adc
stos
nop
loop
(bad)
sbb
(bad)
jne
retf
sbb
nop
aam
mov
cmp
out
sti
cmp
xchg
adc
mov
ja
push
in
push
xor
mov
ja
cmp
inc
cmc
mov
in
pop
les
mov
ret
mov
sar
sbb
jle
(bad)
pusha
loop
adc
lds
pushf
mov
cmp
xor
stos
cdq
pop
in
mov
icebp
loop
mov
in
sub
mov
ins
cmc
sbb
nop
xchg
les
test
loope
dec
and
iret
xchg
or
(bad)
fidivr
mov
loopne
fs
mov
mov
cmp
cmp
jnp
inc
inc
mov
push
jmp
loop
cmp
aas
je
add
shr
stc
lods
add
jae
adc
xor
xor
arpl
repnz
jb
cmp
mov
fistp
jne
xlat
loope
or
cmp
(bad)
lea
int
mov
xlat
xchg
or
lods
jg
and
mov
dec
jns
imul
or
push
stos
pushf
je
push
(bad)
jb
or
aad
mov
test
jmp
and
mov
push
cmp
cmp
sar
adc
hlt
cdq
loopne
fcmovne
es
cmp
cmp
out
jle
fistp
ja
mov
div
loope
test
aaa
sbb
xor
ss
ficomp
shl
mov
add
outs
jb
inc
scas
push
fbstp
jecxz
sahf
xchg
inc
adc
or
inc
arpl
les
ins
inc
popa
test
aaa
cli
in
fxch
dec
add
iret
call
nop
test
xchg
jg
daa
cs
dec
sub
fstp
sbb
ds
inc
cmp
or
cmp
sti
dec
push
xor
lods
loop
leave
inc
sub
or
and
test
or
test
hlt
mov
and
js
xchg
cmc
ret
jbe
shl
sbb
jno
dec
add
das
and
mov
push
shl
sti
mov
cmp
arpl
outs
sbb
jae
in
cs
mov
pop
mov
xor
inc
jl
xchg
lock
fs
in
fld
jge
dec
fcom
mov
xchg
test
in
inc
pop
jne
repnz
aad
mov
retf
(bad)
jb
jmp
sub
imul
xchg
nop
xchg
mov
mov
fisttp
arpl
fbld
(bad)
xchg
fdiv
jle
xchg
int
pop
data16
sub
push
nop
jb
mov
sub
stc
inc
sub
outs
push
jo
push
fisubr
leave
pusha
inc
nop
aad
iret
xchg
jg
stc
cwde
jp
cmc
in
movs
cdq
out
sub
sbb
adc
dec
aad
inc
jle
jns
xor
xchg
imul
push
les
sbb
cld
in
rcr
xchg
ret
lock
into
or
std
jno
add
fimul
jae
outs
ins
dec
mov
pop
in
adc
cli
mov
out
dec
pop
cmps
test
es
mov
pop
cmps
outs
dec
cmc
stos
call
fcmove
add
arpl
fwait
adc
xchg
mov
ins
dec
(bad)
or
retf
inc
sbb
or
push
(bad)
repnz
cmp
in
sub
lock
inc
cmp
inc
dec
ins
scas
jno
out
in
das
stc
mov
xchg
les
sbb
xchg
xchg
sahf
adc
in
push
call
dec
retf
cs
cmps
rol
pusha
imul
dec
clc
dec
fdivr
and
enter
cmp
in
xchg
push
ins
xchg
adc
push
out
mov
add
jp
cmp
dec
pop
xchg
pop
sbb
lea
add
push
imul
xchg
mov
fdiv
or
dec
inc
clc
movs
iret
sbb
push
push
jmp
inc
sub
cmp
and
sbb
mov
add
inc
in
mov
mov
in
and
loop
jne
pop
pop
jnp
loop
scas
(bad)
adc
lds
mov
scas
xchg
xor
sti
and
pop
aas
mov
pop
pushf
jl
mov
cmps
xor
ins
mov
cmp
aaa
sbb
enter
cmp
jno
or
inc
xor
push
dec
jg
rcr
jns
loop
clc
in
sbb
inc
xor
or
sbb
enter
and
or
or
fsubr
jne
and
push
aas
iret
sbb
scas
jmp
les
sbb
jns
(bad)
mov
stos
push
test
lock
iret
sbb
push
and
and
adc
ins
mov
fcmovb
adc
int
ja
xlat
cmps
jns
mov
sub
mov
or
inc
xlat
jae
or
jne
jecxz
je
sbb
push
outs
fwait
mov
sub
sbb
cmp
pusha
je
outs
mov
fbld
mov
mov
xlat
sti
mov
mov
into
hlt
add
mov
loope
fidiv
push
mov
into
mov
into
pop
fs
ja
add
fsubr
(bad)
aad
push
push
jno
mov
pop
xor
inc
jne
shr
sbb
jge
mov
inc
test
shl
xor
xor
mov
sub
mov
mov
fs
ror
loop
sbb
push
pop
ret
outs
lods
jno
mov
jle
pop
push
mov
mov
and
sar
lock
or
add
lods
ret
fisttp
cmp
call
lods
out
imul
rcl
xchg
add
adc
adc
movs
mov
adc
and
mov
(bad)
icebp
add
xlat
icebp
dec
pop
shl
int
add
lahf
xchg
sahf
dec
cmps
add
cmp
push
sub
and
fisttp
xor
je
or
jb
pop
xor
jge
adc
push
into
jl
dec
shl
sbb
cmps
lahf
fnstsw
movs
push
mov
mov
daa
push
test
or
sbb
mov
jg
adc
jle
jnp
and
add
out
iret
xchg
pop
cli
sub
push
loopne
ror
sbb
lahf
push
stc
js
sbb
mov
or
push
sub
jmp
in
xor
and
mov
mov
mov
mov
pop
mov
xchg
or
clc
xchg
mov
add
adc
int
mov
pop
adc
or
xlat
iret
mov
pop
ins
fcmovnu
int3
(bad)
int
addr16
xchg
test
pop
test
imul
sub
mov
push
dec
or
push
pop
fs
dec
add
sub
dec
jge
pop
inc
adc
dec
aas
push
(bad)
fcom
js
inc
push
dec
stos
cmp
and
mov
cmp
and
lahf
xor
test
add
frstor
(bad)
out
xor
mov
lods
jg
(bad)
call
sub
dec
or
out
inc
push
aam
add
sbb
ja
pusha
mov
call
and
mov
repz
sbb
(bad)
xor
or
sub
iret
(bad)
shl
adc
pusha
or
add
iret
xchg
or
shl
push
jg
inc
jmp
aam
pop
jmp
dec
xor
sub
inc
and
(bad)
pop
sub
xchg
sub
loope
mov
xchg
and
(bad)
jle
add
test
adc
jae
ror
(bad)
icebp
mov
nop
(bad)
ss
test
(bad)
in
stos
out
cwde
shr
jae
shl
pop
jb
xor
mov
ins
and
adc
ja
inc
or
sti
mov
push
add
rol
inc
pop
mov
(bad)
pop
sti
and
dec
sbb
mov
add
sbb
sbb
idiv
inc
sub
xchg
xchg
jo
rcr
inc
add
mov
loopne
in
(bad)
es
lods
loop
ret
xchg
icebp
or
dec
aas
jbe
cmps
lahf
fisttp
(bad)
retf
movs
arpl
dec
cmpps
mov
(bad)
in
pusha
xor
inc
adc
mov
xchg
movs
out
add
or
outs
mov
mov
mov
pop
cli
test
outs
add
or
lods
in
jp
jnp
lds
fild
dec
pop
pop
cwde
movs
dec
loopne
enter
fisub
cmc
ret
mov
push
pop
add
imul
std
lods
mov
stos
jmp
cld
int3
cdq
fwait
sti
xchg
lock
pop
cdq
fild
(bad)
mov
jo
shl
iret
movs
shl
mov
ret
mov
mov
push
adc
sbb
cmp
sbb
xor
xlat
xor
push
inc
jp
imul
iret
test
movs
cmc
sahf
sti
cwde
xor
ja
bound
(bad)
jae
inc
aaa
pusha
cmps
cmps
data16
add
jg
enter
clc
mov
movs
jecxz
jns
pop
push
repnz
jae
push
adc
sbb
cld
or
imul
mov
jg
shl
sub
and
les
add
push
sub
push
adc
or
ins
sub
pop
and
or
lods
add
outs
sbb
pop
xor
jnp
(bad)
sub
sbb
adc
and
sbb
mov
test
mov
mov
push
jae
mov
push
adc
addr16
xchg
out
xchg
push
dec
sbb
dec
jno
add
dec
and
add
push
ins
ss
mov
xchg
(bad)
mov
jmp
call
pop
mov
stos
std
ss
inc
or
clc
xchg
sti
cwde
jno
cmovle
jno
leave
rcl
sub
xchg
jo
inc
jl
stos
rep
mov
xor
imul
push
shl
imul
adc
movs
sub
push
and
retf
adc
lods
push
and
jle
fidiv
mov
scas
loope
das
dec
dec
sahf
fcomp
stos
std
mov
jg
out
mov
lahf
mov
scas
std
mov
push
inc
cmp
push
xor
or
fcom
xchg
hlt
cmp
ss
xchg
iret
pushf
fcom
lea
outs
jbe
movs
cmc
inc
mov
cmp
out
sar
mov
call
ins
and
add
xor
inc
sub
mov
jae
jno
repnz
popa
mov
dec
mov
(bad)
xor
sbb
or
jns
inc
dec
cmc
in
dec
nop
cmc
movs
rol
push
inc
js
mov
clc
pop
jg
outs
cmp
(bad)
mov
adc
int3
movs
push
or
and
or
das
jnp
jns
xor
xchg
rol
mov
test
test
push
xor
popf
jmp
cs
(bad)
fstp
add
test
mov
pop
pcmpgtb
addr16
or
loope
mov
push
jns
ins
sbb
sbb
das
mov
shl
add
es
lods
jmp
pop
inc
jge
popf
and
push
or
or
push
xchg
shr
cmps
fadd
jle
pop
sbb
stos
mov
sub
dec
data16
lods
mul
xbegin
pushf
ins
push
cdq
xlat
lods
mul
mov
repnz
add
mov
mov
lock
repz
aas
xchg
rol
inc
inc
push
ds
sbb
arpl
dec
jecxz
and
stos
ret
xchg
jbe
push
pop
push
stos
jmp
scas
shr
lods
fmul
stc
mov
inc
cdq
fistp
xor
push
dec
test
dec
aas
jle
ja
jbe
dec
mov
cld
stos
inc
mov
mov
xchg
jmp
pop
jns
ret
sub
jg
iret
cmp
mov
ror
sub
cmp
mov
inc
adc
inc
aas
gs
cmp
test
dec
or
bound
xchg
push
pop
jle
iret
fstp
pcmpgtb
pop
fidivr
jge
rol
popf
mov
sub
pop
dec
jecxz
ds
sbb
and
sbb
xchg
inc
pushf
jmp
not
mov
inc
xor
mov
rcr
push
cmp
xor
repz
leave
mov
xchg
fild
jno
adc
push
jle
aam
cmp
shl
mov
sub
add
cmp
sbb
daa
mov
add
xchg
inc
xor
push
push
cmp
mov
mov
xchg
inc
or
shl
mov
sbb
sbb
cld
xchg
push
cmp
jo
and
jae
out
push
fldcw
sbb
mov
inc
xor
mov
push
xchg
mov
fs
mov
gs
in
(bad)
xchg
ins
or
(bad)
push
push
cmp
push
add
fimul
mov
jl
inc
push
rcl
es
add
mov
mov
fistp
jecxz
rcr
cmp
mov
stos
jmp
jl
add
cwde
aam
inc
ss
(bad)
jp
pop
sbb
(bad)
pop
pop
push
adc
mov
inc
xchg
dec
push
adc
test
inc
ins
xchg
test
mov
push
adc
stos
les
lods
in
sub
addr16
pop
push
add
aaa
test
cmps
jg
dec
or
mov
movs
int
and
adc
push
sub
fs
movs
dec
cmp
add
sub
mov
test
adc
mov
nop
mov
mov
mov
inc
jno
pop
test
push
add
in
mov
and
mov
imul
xchg
lds
fst
cmp
clc
dec
adc
xchg
repz
rol
js
adc
imul
cmp
inc
adc
lock
outs
es
adc
outs
pushf
retf
adc
js
gs
in
div
and
repz
fcomp
pop
xor
cmps
push
jnp
pop
cmp
inc
and
mov
push
mov
in
cdq
into
mov
aad
out
mov
clc
scas
fsubr
call
jmp
sub
push
jg
jp
ror
jae
jnp
jecxz
inc
sbb
scas
jmp
test
cmps
popf
hlt
mov
icebp
add
sub
movs
mov
outs
ficomp
(bad)
retf
popf
fst
inc
(bad)
fldenv
je
jns
adc
pusha
or
call
loop
jg
fcomp
scas
and
sbb
sbb
jbe
out
jle
dec
or
(bad)
call
pop
cdq
sub
jmp
push
fwait
mov
mov
adc
adc
ins
aas
imul
fiadd
mov
mov
inc
push
push
mov
ficom
push
das
push
pop
lds
xor
dec
sbb
adc
das
pop
and
xor
call
out
(bad)
mul
mov
mov
dec
sbb
lds
das
inc
and
mov
mov
dec
ja
jl
cli
xchg
in
or
call
or
cld
mov
loopne
repnz
adc
daa
dec
mov
lods
out
(bad)
pop
gs
outs
add
cdq
mov
push
inc
mov
mov
(bad)
fwait
retf
mov
dec
sbb
icebp
mov
je
stc
pop
shl
push
xchg
lds
loopne
mov
fwait
iret
cmp
inc
adc
cmp
cmc
movs
loop
push
and
dec
sbb
mov
mov
xor
jnp
push
loope
fcom
(bad)
popa
mov
stos
inc
cs
sub
ss
fist
pushf
in
mov
popf
fcomp
pop
cmp
xchg
stc
sbb
pop
out
dec
push
jl
std
mov
add
sbb
add
je
enter
pop
cmp
mov
jl
jmp
lods
les
dec
xor
shl
and
dec
outs
cmp
cs
fild
dec
daa
ret
jg
pop
dec
cwde
loop
call
push
adc
in
xor
jge
outs
or
(bad)
ja
aaa
pusha
xor
movs
jecxz
inc
sub
aad
std
sbb
and
push
adc
ins
sbb
mov
xchg
int3
pushf
neg
and
mov
nop
mov
mov
nop
shl
ret
xchg
imul
ss
cmp
pop
adc
mov
mov
xchg
sar
push
adc
push
out
adc
aam
(bad)
mov
dec
sbb
loope
and
cld
mov
jb
not
mov
xchg
inc
add
fild
shl
ret
xchg
pop
pop
jecxz
cdq
cli
jb
aaa
je
movs
fiadd
movs
rol
push
mov
mov
rcl
xor
mov
mov
pop
pop
aaa
inc
push
dec
or
movs
fiadd
pop
sbb
cmp
in
not
out
call
aas
outs
add
cmpps
leave
add
ins
addr16
mov
xchg
push
ds
sahf
out
scas
mov
shr
or
xor
or
add
scas
mov
pop
push
rol
ficomp
imul
add
cmp
mov
inc
sub
rcr
and
dec
jge
int3
mov
mov
adc
xor
mov
in
jmp
add
pop
outs
ds
jne
jo
mov
inc
cwde
movs
clc
out
shl
jae
jnp
aad
in
in
sbb
iret
dec
in
xchg
aam
in
xchg
into
popf
fst
cmp
mov
mov
xchg
adc
mov
xchg
xor
loope
repz
jecxz
and
xchg
rcl
les
data16
imul
xchg
xlat
mov
mov
add
mov
enter
pop
push
xchg
add
add
sub
shl
clc
ja
rcr
jbe
data16
xchg
push
sub
mov
xchg
xlat
push
test
cmps
out
jge
popa
add
lds
xchg
xchg
ror
(bad)
cmc
sbb
stos
lock
sbb
test
mov
xchg
dec
pop
sub
cmp
call
movzx
movs
stos
test
jge
pop
sbb
js
inc
sbb
or
int
repnz
test
jnp
into
inc
das
pop
je
inc
add
pop
xchg
cli
cdq
je
pop
loope
outs
adc
pop
pop
xchg
fistp
loope
fwait
mov
sub
les
(bad)
stos
nop
sub
xchg
sub
mov
gs
mov
push
je
jle
ret
test
fistp
jecxz
aaa
popa
and
das
mov
xchg
jbe
pusha
xor
test
xchg
sti
cwde
jno
mov
push
sbb
xor
mov
leave
xor
or
loope
push
push
fbstp
jg
gs
inc
fsubr
mov
mov
aad
fst
aas
dec
sbb
repnz
cvttps2pi
dec
or
adc
mul
lods
test
mov
add
sbb
lods
lahf
int
sub
js
cld
mov
push
dec
and
jbe
sbb
loopne
mov
mov
fwait
add
(bad)
pushf
rcr
adc
gs
stos
fadd
mov
inc
imul
push
dec
aas
mov
mov
pop
movs
(bad)
or
aad
out
out
mov
inc
leave
iret
mov
push
or
dec
popa
gs
inc
adc
xor
int
mov
jmp
inc
fnstenv
cmp
ja
xor
call
xor
retf
inc
mov
shl
stos
fistp
shl
call
pop
aad
mul
les
ret
jp
std
mov
mov
shl
xor
(bad)
xchg
sar
pop
sbb
push
mov
aam
out
bound
xor
(bad)
mov
jbe
xor
dec
iret
popf
test
dec
sbb
ret
call
pusha
cmp
daa
outs
adc
jne
inc
ja
inc
cmp
mov
xor
inc
or
call
xor
cmp
into
xchg
mov
es
pop
cli
scas
mov
or
sub
add
sti
test
mov
je
pop
sub
xchg
ss
push
test
xchg
mov
sub
pop
test
int3
pop
arpl
or
scas
pusha
je
dec
daa
inc
push
or
(bad)
popa
lds
daa
jo
add
jmp
mov
and
pop
push
imul
lods
xlat
(bad)
pop
sbb
movs
int
xchg
mov
xchg
rcl
push
adc
adc
ret
add
movs
inc
dec
or
jecxz
ret
mov
mov
daa
outs
aaa
jbe
mov
cmp
push
bound
jecxz
mov
scas
jne
sbb
or
into
pop
cmp
or
mov
sub
xchg
inc
inc
cmp
ja
int3
cmc
test
mov
out
mov
mov
adc
mov
js
xor
out
rol
xchg
aad
(bad)
cmp
loopne
enter
jae
nop
jmp
bound
test
ficomp
imul
xor
repnz
mov
mov
xchg
or
mov
xor
inc
push
popa
adc
fiadd
jbe
ret
xchg
xor
stos
std
mov
and
clc
jge
pop
js
pop
sbb
jmp
fimul
cmp
(bad)
int3
movs
rol
mov
or
or
jae
pushf
adc
mov
test
cmps
xlat
xchg
sub
cmps
int3
clc
dec
into
lahf
cmp
dec
or
xchg
mov
jmp
or
ret
jecxz
call
gs
dec
sbb
mov
xor
xchg
mov
dec
add
ret
xor
jl
hlt
pop
adc
ss
fbld
div
sbb
xor
lods
into
dec
loop
loopne
lock
adc
inc
and
sbb
xchg
pusha
adc
mov
into
lods
in
mov
stc
dec
adc
(bad)
mov
push
mul
push
pop
jns
cmp
jl
cmp
fsub
sti
fmulp
mov
mov
jecxz
(bad)
mov
dec
pop
pop
xor
mov
xchg
dec
es
add
aam
push
aas
sti
popf
repnz
in
fidiv
inc
pop
sbb
push
loope
imul
sub
sar
js
shl
inc
cmp
mov
push
lods
cli
pop
cmp
movs
aam
rcr
stc
call
jl
ja
jmp
mov
lahf
enter
loop
dec
cmovae
arpl
fist
sbb
test
xchg
sar
push
xchg
les
bound
dec
pop
je
or
sub
pushf
iret
retf
popf
fnstcw
gs
test
mov
js
push
test
xchg
push
cld
push
sbb
add
and
lods
ins
add
sti
mov
sub
sbb
adc
pop
div
or
add
stc
xchg
arpl
and
sub
int3
mov
outs
mov
daa
mov
call
sti
mov
dec
and
push
sbb
mov
ins
sub
push
xor
repnz
jb
xchg
adc
push
push
fcomp
lods
sti
sub
popf
in
lods
jmp
mov
mov
out
mov
add
cmc
sbb
mov
pop
adc
sbb
cmps
push
cmp
lods
jmp
aad
mov
rol
or
mov
test
pop
cmps
icebp
scas
add
dec
add
mov
sub
retf
jecxz
pushf
frstor
cmp
aam
add
sub
push
pop
es
pop
(bad)
mov
mov
add
mov
dec
adc
inc
adc
mov
sahf
out
mov
loope
add
fimul
test
mov
inc
sub
mov
push
xchg
enter
sub
cmp
popa
dec
push
add
sub
cmc
or
call
cmp
(bad)
scas
cmp
or
add
xchg
out
movs
(bad)
fist
daa
jg
push
push
add
push
xor
cld
bound
inc
or
mov
sbb
cmps
mov
aad
sbb
push
je
jle
sar
(bad)
into
sub
dec
sbb
cmp
hlt
adc
ja
out
loopne
(bad)
xor
pop
add
xchg
retf
scas
dec
retf
mov
fadd
movs
jmp
ss
call
retf
lahf
jbe
jle
into
xchg
jl
dec
jo
push
adc
loopne
rcl
dec
and
or
das
movs
in
test
mov
jmp
pop
cmps
(bad)
cmp
adc
ds
sbb
and
cs
dec
cmp
xorps
aas
(bad)
mov
popa
adc
pop
mov
and
les
inc
in
out
xchg
int
ficom
cs
push
and
aad
jne
movs
loopne
(bad)
mov
pop
jl
push
pop
inc
repz
retf
cwde
fmul
dec
or
ins
gs
iret
mov
mov
cwde
ficomp
jmp
jle
xor
in
mov
bound
popa
add
mov
sbb
mov
xchg
(bad)
sbb
jne
add
xchg
test
fs
je
in
mov
cmp
inc
pop
fsub
jmp
jp
cmp
cmp
call
(bad)
xchg
add
icebp
push
push
aad
mov
xchg
les
inc
aaa
mov
cmps
(bad)
sbb
scas
push
or
les
mov
sub
mov
jno
add
add
inc
push
rcl
out
mov
lahf
sbb
ins
and
jecxz
inc
xchg
shr
enter
push
jmp
jbe
push
fwait
repnz
inc
test
push
sbb
out
test
mov
jge
mov
imul
cmp
(bad)
xchg
loopne
imul
adc
pusha
or
call
sbb
cli
into
cwde
fdivr
push
bound
mov
pop
retf
adc
sbb
popf
jecxz
xchg
ret
mov
ss
push
dec
cmp
fistp
or
retf
lahf
das
imul
mov
mov
sub
fisttp
adc
outs
xchg
shr
push
test
and
xchg
and
adc
lods
retf
add
les
fsub
or
mov
inc
or
mov
cmps
hlt
jb
ds
push
pushf
fmul
(bad)
mov
scas
stos
dec
and
or
movs
jmp
jmp
mov
mov
add
les
out
xor
sbb
jb
leavew
xor
ja
and
xor
pop
sbb
rol
ret
pop
shr
sbb
sbb
dec
mov
pop
(bad)
and
sub
pop
sbb
ds
fdivr
icebp
dec
stc
push
into
add
inc
mov
lea
movs
sahf
fwait
dec
test
loopne
adc
mov
push
or
push
xchg
mov
int
sbb
sub
pop
mov
jbe
xchg
fwait
int3
ds
add
pop
xor
mov
idiv
cld
dec
movs
mov
sub
mov
outs
test
imul
prefetcht0
pop
pop
not
pop
lds
or
pop
mov
arpl
cmp
popa
loop
(bad)
xchg
jns
or
push
sub
push
mov
adc
push
mov
imul
mov
mov
fldenv
add
lods
xchg
nop
jp
cmc
pop
cmp
rcl
add
push
in
call
mov
adc
or
inc
xlat
add
xor
pop
shl
push
push
in
pop
(bad)
cmp
and
jne
ins
stos
pushf
popf
cwde
jne
mov
mov
ficom
je
xchg
inc
mov
dec
hlt
add
out
ror
ins
cli
dec
mov
jne
xchg
xchg
icebp
push
xchg
pop
sbb
and
sub
adc
pop
test
cmps
jo
das
adc
sub
mov
jbe
js
or
or
in
mov
fcomp
jge
xchg
fcom
outs
mov
lock
pop
stos
fwait
inc
(bad)
push
mov
int
retf
xor
loope
test
sub
aaa
push
jmp
xor
mov
cdq
jp
inc
mov
sub
push
push
sar
popf
lahf
jge
sub
cs
inc
mov
add
dec
(bad)
outs
into
pop
mov
test
xor
and
dec
mov
mov
outs
mov
ins
shr
shr
cmp
push
mov
les
ss
xor
and
(bad)
and
push
rol
dec
iret
pop
fsub
pop
rcl
dec
call
and
repz
ror
mov
dec
push
lock
jns
mov
mov
iret
ja
sub
add
cmps
mov
and
inc
rol
pop
out
ja
dec
jmp
in
les
in
pop
mov
mov
mov
cmp
cmp
and
jmp
daa
adc
aas
loop
int3
ds
xchg
popf
xchg
outs
(bad)
jno
mov
push
adc
cmp
pop
(bad)
pusha
mov
cmp
(bad)
je
cs
pop
cmps
jns
ss
test
shr
sbb
lods
mov
aaa
in
push
les
or
rcr
cwde
popa
mov
repnz
and
sar
call
jb
imul
loope
shl
pop
mov
enter
sbb
add
outs
fcomp
cmp
dec
lods
mov
stc
and
pop
test
push
cmp
dec
(bad)
and
sbb
sub
mul
cmp
sub
add
xchg
out
sti
pop
shl
ss
add
in
pop
lea
(bad)
fld
das
sbb
push
stos
dec
add
lahf
push
xchg
(bad)
push
sub
std
xor
clc
push
retf
rol
dec
stos
outs
retf
aas
in
push
(bad)
pop
xor
popa
xlat
push
fidiv
xor
out
dec
mov
mov
jns
mov
cli
sub
pop
into
or
cmp
aad
neg
pushf
xchg
pusha
mov
mov
sbb
xor
out
add
adc
pop
mov
or
adc
sbb
sub
sti
and
fs
xchg
xchg
imul
cmc
push
rol
in
push
mov
jb
call
and
stos
call
cmp
iret
and
pop
sar
or
push
xchg
jns
xchg
inc
cld
cmp
adc
pop
adc
sub
mov
add
and
sbb
xor
push
retf
adc
adc
pop
out
pop
mov
fst
popa
enter
and
cmp
je
sub
les
rcr
cs
push
in
stos
mov
hlt
inc
test
xchg
xchg
jae
jecxz
mov
ret
pop
mov
mov
pop
out
pop
sbb
ret
and
int
mov
inc
sbb
jmp
out
add
and
pop
fsubr
pop
int3
call
pop
(bad)
push
les
push
shr
pop
movs
inc
and
daa
adc
push
in
pop
push
sbb
sub
or
dec
movs
popf
pushf
jno
nop
xchg
retf
add
sbb
cmp
retf
cmp
pop
int
mov
dec
mov
jl
popa
fistp
aad
loop
cld
sub
push
shr
sub
cmp
xor
inc
movs
jge
jno
mov
push
(bad)
add
lods
cdq
popa
xchg
inc
mov
es
inc
int3
xor
test
adc
and
(bad)
xor
mov
aam
test
popf
mov
movs
xchg
mov
fild
jne
outs
sti
js
jno
pop
or
mov
out
lds
dec
cmps
push
mov
test
inc
mov
xchg
outs
xchg
xchg
inc
mov
adc
ds
ret
xor
mov
test
and
loop
les
add
mov
and
add
cmc
push
mov
adc
sub
and
cmp
pop
fisttp
inc
icebp
cmp
sub
push
test
xor
pop
and
(bad)
and
sub
adc
mov
or
push
cs
adc
mov
ret
pushf
inc
lods
test
pushf
xchg
xchg
and
or
cmp
adc
xor
pop
dec
(bad)
or
sbb
pop
test
jle
xor
pop
fcomp
int3
sub
or
dec
fnsave
in
test
xor
push
repz
or
and
cmp
pop
add
les
aas
or
cmp
push
cmps
mov
nop
fwait
xchg
ins
xchg
cmc
add
adc
stos
xchg
cwde
xchg
xchg
jge
add
push
stos
gs
jns
inc
(bad)
(bad)
push
mov
aad
retf
std
pop
fcom
adc
cwde
mov
or
cmp
pop
sbb
das
sar
cmps
xchg
inc
loopne
add
xchg
jnp
jbe
lods
dec
mov
inc
mov
outs
mov
pop
(bad)
pushf
inc
lods
add
mov
jb
call
ret
rcl
push
repz
cmp
rol
mov
mov
mov
sub
icebp
and
or
fidivr
loope
pop
cs
stc
add
pop
sbb
sub
xor
and
jecxz
out
jbe
cmp
and
adc
add
jmp
enter
imul
inc
mov
dec
mov
dec
mov
mov
pusha
into
sbb
xor
sub
fs
je
or
repz
sti
xor
into
dec
sti
mov
mov
test
pmaxsw
add
sub
push
fsubr
pop
iret
add
and
pop
nop
lea
adc
push
sar
sti
or
push
movs
dec
mov
mov
pop
repz
push
mov
clc
cs
pop
in
mov
fiadd
sti
and
mov
xchg
je
call
mov
dec
sysret
adc
cmp
push
xchg
sub
sub
retf
dec
aas
in
cmp
push
push
loopne
out
and
fwait
xor
xchg
mov
(bad)
and
pop
stos
xchg
les
add
in
leave
xor
sbb
ds
pop
mov
jb
jnp
xchg
jg
cmps
dec
cmp
js
mov
xchg
push
cs
pop
shr
loopne
cld
xor
add
push
iret
add
sub
adc
and
call
xor
out
sub
adc
pop
push
adc
cmp
add
ss
mov
jecxz
sar
ret
dec
mov
mov
sub
add
add
jmp
mov
mov
loope
sub
jmp
(bad)
cmp
dec
pop
loop
or
jo
arpl
or
in
aas
or
cmp
pop
xchg
dec
xchg
cs
add
loopne
sbb
sub
and
push
adc
cmp
jp
jae
sub
cmp
dec
lods
cdq
jecxz
loop
lods
mov
cmp
aaa
xor
mov
outs
iret
push
cmps
dec
nop
(bad)
pop
adc
dec
mov
lds
shr
pop
adc
cmp
dec
les
sbb
or
push
xchg
xchg
pusha
(bad)
ds
jmp
out
lock
stos
inc
cmp
je
inc
mov
fimul
sbb
test
js
(bad)
jb
add
cmp
mov
add
push
scas
cdq
je
(bad)
cmp
xor
sub
lds
ss
xlat
xchg
cdq
mov
mov
adc
or
pusha
mov
sbb
jnp
js
dec
mov
xchg
mov
jns
mov
pop
xor
cwde
gs
movs
nop
(bad)
jp
or
sub
xchg
ja
push
fld
int3
xor
push
fnstenv
int3
pop
lods
fistp
pop
int3
inc
mov
mov
sbb
sub
sub
pop
test
pop
fcom
jae
sbb
cmp
cld
es
in
adc
adc
ds
inc
fisttp
mov
ficomp
adc
push
cmp
iret
pop
out
mov
(bad)
push
rol
jmp
inc
mov
lds
xchg
sahf
jo
xor
cmp
pop
dec
retf
xor
sub
lea
fimul
out
gs
popa
fadd
xor
dec
into
pop
mov
push
mov
jg
add
xor
inc
shr
sbb
es
ror
jle
mov
xor
iret
xor
jl
push
stos
dec
mov
jle
dec
mov
jnp
adc
dec
mov
pop
mov
data16
and
sub
es
pop
(bad)
or
push
fnsave
call
and
pop
stos
(bad)
fisttp
adc
adc
jecxz
out
mov
cmp
pop
adc
xchg
pop
les
sar
std
aas
cmp
push
sbb
jg
pop
test
mov
jnp
cmp
aaa
adc
stos
xchg
ins
mov
dec
mov
push
pop
not
fimul
adc
and
adc
mov
mov
pop
xor
fistp
div
adc
adc
(bad)
xor
push
scas
or
add
adc
mov
mov
outs
retf
mov
ja
push
pop
jmp
dec
scas
jle
push
mov
push
loope
clc
inc
scas
mov
sbb
cld
and
pusha
cmc
cmp
leave
cs
jb
dec
xchg
jbe
adc
pxor
push
mov
cwde
js
cdq
pusha
int3
pop
mov
jns
in
push
out
mov
ror
sbb
shl
add
js
mov
push
scas
jno
cmp
mov
shr
ret
and
mov
mov
inc
test
pop
hlt
and
sbb
dec
mov
xchg
push
int3
or
and
ss
push
cmp
add
and
jmp
or
es
xor
cdq
jp
push
shl
push
psubb
push
repnz
fbld
in
or
cmp
pop
fisttp
in
dec
fist
je
loopne
mul
mov
mov
cmp
and
mov
nop
jg
outs
mov
mov
addr16
sub
nop
jp
jl
pop
mov
or
and
sti
pop
xor
dec
mov
xor
aad
adc
jmp
cld
dec
aas
out
mov
loop
rol
push
les
jmp
xor
cld
cmp
pop
add
dec
cmps
fsubr
loop
repnz
fld
jmp
int
jp
test
push
pop
lock
scas
push
xor
xor
stc
pop
fisubr
push
xchg
add
dec
stc
ds
sub
push
sub
ficom
in
test
mov
mov
inc
(bad)
and
sub
in
test
sub
jnp
shr
pop
pop
aaa
adc
pop
mov
xchg
xchg
mov
das
mov
stos
push
aaa
adc
pop
fst
pop
inc
aam
and
xchg
inc
mov
inc
stos
push
push
ret
mov
popf
inc
fistp
push
cmp
hlt
and
clc
or
retf
and
cmc
inc
test
enter
add
retf
aas
jmp
clc
push
sti
inc
mov
data16
pop
fldenv
cmp
pop
(bad)
stos
jb
lea
add
cwde
popa
lea
popf
jl
jns
jbe
xor
mov
mov
ins
xor
scas
sahf
mov
sbb
pop
mov
mov
sbb
adc
or
or
xor
xor
loop
call
dec
lods
jbe
xchg
xchg
call
ror
dec
retf
dec
(bad)
and
fnstenv
jbe
js
ja
pushf
lods
popf
xchg
js
and
out
push
jmp
movs
inc
mov
neg
sub
jecxz
adc
xor
push
lods
cld
or
sbb
in
pop
mov
sub
and
sbb
and
arpl
data16
shr
icebp
pop
mov
fist
push
adc
pop
mov
push
dec
xchg
dec
mov
mov
arpl
cmp
or
xor
retf
dec
ror
jge
fwait
xlat
pop
stos
outs
movs
arpl
cmc
and
add
and
(bad)
pop
mov
pop
loope
push
out
dec
mov
push
cwde
pop
lea
xlat
push
mov
sub
aaa
and
sub
rcl
pushf
sahf
addr16
push
out
dec
sub
das
sbb
rcr
push
adc
or
dec
xlat
jns
imul
fdiv
cli
mov
dec
mov
and
out
add
pop
fisub
repnz
cmp
out
mov
dec
test
and
or
or
adc
push
into
cmp
jne
add
cmp
jae
pop
movs
inc
(bad)
push
mov
xlat
xor
push
pop
aas
lock
sub
into
add
aaa
popa
in
cmp
ret
mov
cmp
push
pop
shr
inc
aam
jmp
(bad)
xor
pop
fidivr
imul
mov
rol
pop
mov
fistp
adc
in
xlat
lods
pushf
jae
test
adc
das
in
mov
ins
mov
mov
retf
sub
out
loop
jmp
test
call
into
pop
test
mov
test
cdq
cwde
xchg
push
sub
xor
dec
(bad)
and
movs
xchg
lea
xor
pop
xlat
aas
sbb
ror
mov
adc
mov
data16
test
sub
and
in
in
sub
xor
xchg
jbe
dec
mov
mov
mov
and
shr
out
xor
inc
ror
imul
jecxz
sbb
pop
mov
adc
adc
and
not
dec
rcl
sub
leave
mov
call
sub
push
rcl
pop
mov
jnp
xor
add
jmp
inc
scas
imul
xchg
dec
lods
ins
xchg
pusha
scas
popa
mov
test
test
cmp
push
(bad)
call
and
daa
arpl
es
lods
test
xchg
jge
xchg
ja
push
cmp
in
mov
xchg
ins
mov
xlat
ss
inc
xchg
je
cmp
sbb
xor
adc
out
xor
push
rol
xor
dec
into
sub
jbe
pop
loopne
mov
cwde
xor
fbld
ret
pop
fild
push
call
daa
jmp
(bad)
and
adc
xchg
in
pop
mov
lds
inc
mov
add
leave
ud0
cs
cli
ss
clc
cmp
pop
mov
push
ror
jno
dec
stos
xchg
inc
mov
push
retf
pushf
dec
retf
xor
dec
stos
jge
cmp
cmp
push
icebp
pop
mov
fild
(bad)
cmp
enter
mov
cmps
cdq
jg
ins
retf
cmp
inc
fcom
cmp
(bad)
sub
pop
fldcw
into
cwde
inc
(bad)
or
ficom
clc
pop
xlat
cmp
xchg
pusha
(bad)
and
les
push
out
das
int3
adc
jp
jno
xor
sub
xor
pop
xchg
test
inc
mov
call
loop
ss
and
ret
pop
shl
pusha
int
call
cmp
mov
mov
mov
rcl
pushf
arpl
pop
aam
pop
les
jle
inc
mov
push
mov
jnp
pushf
mov
int
(bad)
or
add
jmp
fild
jnp
loope
xchg
xchg
mov
ds
cmp
adc
mov
sahf
outs
(bad)
and
or
pop
ror
je
sub
cmps
inc
mov
mov
jp
test
js
sahf
ins
mov
jo
and
in
mul
stos
(bad)
jge
lahf
test
pop
jge
push
mov
repnz
scas
sub
outs
mov
push
and
call
and
std
and
push
les
xchg
jb
arpl
loop
in
or
sub
sub
or
out
inc
(bad)
inc
mov
in
test
cwde
inc
fnstsw
or
dec
shl
in
std
cmp
mov
fwait
jb
lea
cmp
loope
in
sbb
mov
ret
push
iret
push
stos
xchg
mov
gs
rol
ins
frstor
inc
das
pop
or
shr
adc
ret
sbb
mov
xor
xchg
das
out
push
mov
and
push
mov
les
jne
inc
mov
jmp
lds
xor
push
enter
cmps
stos
cdq
fs
mov
retf
pop
hlt
add
xlat
pop
mov
popf
jne
push
stos
ja
addr16
mov
jge
mov
add
inc
retf
push
mov
retf
inc
mov
imul
xor
(bad)
sub
sbb
inc
movs
icebp
jae
xor
daa
out
and
out
pop
mov
test
push
mov
cmps
outs
mov
dec
fdiv
cmp
jno
add
xor
or
rcl
sbb
push
adc
sub
aas
sub
out
pop
inc
out
inc
cmps
inc
mov
add
cmp
cmp
xor
popf
ja
ss
bswap
ja
and
inc
adc
test
adc
and
xor
out
in
lods
mov
rcl
mov
dec
(bad)
inc
shl
loop
pop
cmc
and
or
ss
enter
add
leave
inc
mov
add
and
out
in
push
push
cmp
sbb
dec
xor
int
in
mov
cwde
dec
lods
inc
(bad)
cmps
inc
test
sub
rol
push
ficomp
add
pop
aam
pop
in
mov
mov
out
daa
out
cmps
xchg
call
mov
and
lock
xor
push
loope
(bad)
ss
into
dec
mov
icebp
jno
xor
outs
fldenv
(bad)
pop
xlat
cmp
push
fsub
or
daa
add
outs
ror
js
pop
stos
outs
movs
pusha
(bad)
pop
fnstsw
jmp
test
fidiv
clc
xor
mov
outs
cmps
imul
imul
ror
fnstenv
pop
stc
pop
retf
xor
pop
(bad)
sub
xor
and
push
lock
cmps
jge
lods
dec
mov
jne
xor
push
in
lods
(bad)
ficom
push
mov
outs
fisttp
cmp
push
mov
(bad)
das
sbb
and
xrelease
cmp
hlt
and
push
fnsave
pop
mov
xchg
mov
add
es
bswap
and
add
sbb
in
out
xlat
cmp
sti
pop
(bad)
fwait
jl
and
sbb
add
push
nop
mov
mov
push
push
(bad)
daa
cld
push
test
loope
sti
sub
das
sbb
(bad)
xor
push
mov
jb
lods
fwait
xchg
jns
(bad)
mov
xchg
mov
jp
call
and
push
lock
cmp
lea
inc
shr
retf
aaa
test
xchg
mov
mov
cmp
pop
leave
push
mov
iret
xor
and
add
out
sar
add
stc
xor
lds
mov
xchg
jne
dec
mov
mov
int3
pop
clc
aaa
enter
retf
pop
repnz
adc
xor
sub
in
dec
cmps
mov
pop
add
xchg
push
add
out
push
in
sub
shr
setle
pop
adc
int
add
cmp
lds
sub
mov
shl
sub
gs
out
ficomp
inc
test
in
fs
scas
mov
div
pop
lock
ja
add
pop
repz
retf
push
ja
rep
mov
mov
mov
inc
cmps
cdq
jne
jmp
adc
inc
pop
sbb
adc
dec
jl
scas
adc
push
out
xchg
and
sar
mov
push
ss
mov
out
xchg
sti
dec
cwde
hlt
and
movs
jmp
inc
sub
repnz
inc
das
into
push
jo
cmp
push
push
adc
pusha
nop
or
ja
fcom
and
dec
xchg
adc
sti
(bad)
add
and
inc
loopne
cmp
fstp
test
cmp
pop
aas
or
pop
push
imul
std
or
jno
sub
push
xchg
popf
mov
stos
cwde
sbb
mov
mov
fbstp
out
fsub
loopne
int3
test
cld
jmp
add
and
repz
ror
sub
sar
loop
sbb
retf
sar
jo
adc
dec
lea
jmp
leave
arpl
ja
or
daa
push
pushf
sub
jge
(bad)
jmp
push
icebp
jmp
add
jno
sti
jp
loope
add
inc
fdiv
popa
jg
dec
mov
fsub
mov
xor
mov
push
leave
jecxz
pop
xchg
jmp
cmp
ss
jg
add
xlat
inc
jl
inc
repz
ror
enter
xchg
xor
mov
call
and
mov
pop
data16
lock
mov
ror
sahf
mov
es
out
pusha
mov
call
pop
test
in
stos
call
adc
xor
call
or
cmc
fisubr
push
cmp
dec
stos
mov
push
outs
mov
cmp
dec
sbb
rcl
push
mov
aas
and
jmp
mov
pop
xchg
aam
(bad)
(bad)
jae
cmp
test
mov
mov
enter
ja
mov
out
jae
lea
or
jne
addr16
dec
push
arpl
xor
in
add
dec
mov
out
pop
add
std
mov
in
int
imul
jb
sahf
jp
imul
mov
movs
inc
xchg
jg
dec
shr
xor
and
push
or
add
add
push
push
aad
push
idiv
ins
sub
or
sbb
mov
jl
(bad)
call
jmp
mov
jns
mov
retf
es
xchg
bnd
jg
fcmovne
in
ret
xor
mov
mov
mov
leave
je
push
ret
scas
sub
jle
stos
je
loop
retf
dec
sbb
ja
dec
mov
xor
jns
inc
aaa
xchg
cmc
add
dec
out
jle
aam
push
cmps
mul
ss
jl
pop
inc
jmp
mov
aad
cwde
shl
fisubr
cmp
cmp
mov
sahf
outs
data16
das
sub
sbb
mov
dec
mov
cmc
dec
out
shl
push
clc
mov
(bad)
sub
popf
jae
xchg
arpl
mov
push
sbb
xor
sub
loope
mov
mov
(bad)
adc
xchg
push
std
iret
test
outs
xchg
bound
jg
cdq
fimul
fcmovnb
jb
std
popa
shr
pusha
mov
xchg
add
popf
mov
push
pop
or
or
cld
gs
cs
jbe
lods
gs
xor
adc
loop
or
stc
pop
dec
push
jnp
cmp
jle
dec
xor
xchg
mov
div
mov
test
or
in
or
mov
inc
jns
shl
push
int
je
aam
mov
(bad)
and
xchg
mov
mov
jmp
retf
lds
(bad)
xor
pop
push
mov
dec
push
cmp
pop
jecxz
sbb
xchg
dec
dec
mov
rcr
in
cmp
aaa
xchg
das
fcom
sub
ret
push
inc
jo
push
movs
test
mov
lea
mov
movs
sub
mov
sub
ds
(bad)
mov
call
ins
pusha
cli
mov
and
xchg
add
and
out
mov
call
int3
pusha
fistp
(bad)
neg
or
ins
jo
test
pushf
enter
and
mov
xor
jmp
inc
in
push
push
fcomi
or
test
sbb
stos
jo
or
aas
(bad)
js
jle
push
(bad)
and
fild
lds
(bad)
dec
ss
(bad)
stos
and
mov
cwde
rcl
jno
inc
jle
pop
(bad)
jno
adc
fdivr
pop
scas
daa
int
bnd
mov
aad
movs
ficomp
push
push
cld
movs
dec
pop
inc
iret
cmp
lock
push
cmp
pop
rcr
cmp
add
sub
mov
test
push
and
jmp
sub
cmps
mov
jbe
cmp
xor
mov
daa
adc
int
mov
mov
mov
cld
inc
push
cmc
cmp
jle
or
popf
nop
hlt
pop
inc
mov
push
scas
dec
test
loop
fwait
pusha
rcr
xor
inc
sar
or
jmp
push
push
mov
xor
ror
inc
sub
ja
jo
push
and
shl
int3
mov
int
jmp
into
xchg
cmp
push
fidiv
mov
cdq
push
ja
xchg
lahf
inc
icebp
ds
ins
outs
sbb
or
rcl
mov
fucomip
test
cwde
loope
cs
in
outs
mov
or
div
mov
pop
add
push
es
ret
call
jne
xor
dec
mov
jnp
sahf
add
push
sbb
jb
cmps
rol
inc
xchg
inc
cmp
mov
js
popf
jmp
xchg
xor
and
mov
fisub
jo
jo
fmul
daa
xchg
rcl
add
inc
inc
cmp
mov
sub
inc
add
cld
shr
pusha
mov
adc
and
xor
mov
retf
stos
xchg
arpl
xchg
dec
jge
stc
or
or
and
xor
add
dec
test
out
cmp
test
inc
in
add
mov
int
cmc
ds
jo
leave
jae
or
push
sahf
lds
and
sub
mov
sub
mov
mov
jae
test
dec
ja
push
stos
dec
(bad)
in
arpl
lahf
mov
pushf
mov
jg
mov
hlt
in
retf
aad
rcl
mov
pop
in
cmp
ret
dec
fld
iret
popf
inc
mov
push
push
jno
call
mov
dec
retf
cwde
inc
pusha
repz
mul
inc
or
rcr
dec
push
int3
dec
or
xor
inc
out
xor
xlat
xchg
stos
add
sbb
out
dec
lods
call
shl
call
sbb
jge
mov
out
outs
into
jg
mov
arpl
mov
sbb
jge
mov
sbb
sti
cmp
fwait
lea
push
jne
retf
test
sbb
imul
je
jge
adc
adc
(bad)
cmp
lock
inc
fnsave
xchg
xor
jno
or
fisttp
jecxz
cmp
shl
stc
sub
mov
jl
mov
into
jmp
movs
(bad)
ins
inc
(bad)
cmp
rcl
adc
(bad)
push
mov
pop
push
ror
iret
xor
mov
jmp
fisttp
cmps
xchg
xchg
in
enter
call
cmp
push
mov
fldenv
cmp
xchg
add
inc
mov
into
xchg
sub
pop
je
in
mov
mov
or
ds
test
stos
pop
(bad)
cmp
out
ret
lods
out
jl
ficomp
add
(bad)
xor
mov
adc
xor
cli
test
cmps
xchg
sti
(bad)
imul
(bad)
std
sub
les
jns
outs
scas
cmp
or
(bad)
std
add
xchg
xchg
data16
push
in
and
mov
jmp
push
xor
jecxz
pop
js
loopne
mov
in
and
xor
sbb
sbb
adc
or
push
call
sub
(bad)
push
js
stos
pop
xchg
(bad)
cld
sbb
shl
and
dec
cmp
aam
sar
push
dec
dec
dec
js
mov
mov
in
fisttp
pop
mov
pop
test
and
pop
and
fwait
push
pop
mov
push
call
mov
mov
cmps
cwde
fmulp
xchg
ror
pop
in
in
not
mov
out
inc
les
and
jle
push
and
ds
xchg
lods
lods
retf
mov
push
sbb
movs
and
sbb
ficomp
mov
shl
push
jae
repz
pusha
dec
mov
inc
pop
iret
sub
ins
or
push
stos
cdq
mov
rcl
scas
inc
add
ja
mov
stos
jecxz
adc
fmul
(bad)
ficom
ds
sub
pop
mov
sub
cmc
add
mov
fldcw
mov
adc
pushf
cdq
stos
ret
add
in
aad
iret
std
stos
rcl
(bad)
loopne
repnz
pusha
push
stos
test
int
sti
xchg
dec
mov
mov
lods
sbb
mov
jge
scas
loop
sub
jmp
xchg
enter
lds
out
jl
xchg
imul
je
mov
call
push
data16
icebp
dec
mov
pop
push
and
pop
bound
push
and
retf
ins
mov
imul
daa
mov
inc
inc
frstor
push
or
movs
sbb
xor
pop
(bad)
iret
aad
push
and
and
add
test
pmaxsw
or
inc
nop
rcr
pop
jecxz
add
or
dec
and
daa
int
mov
mov
fild
xor
inc
cmp
inc
xor
scas
icebp
sub
xor
(bad)
xchg
xor
sub
mov
mov
test
push
das
out
repz
dec
popf
in
mov
mov
xlat
iret
lock
inc
mov
in
sub
das
arpl
mov
pushf
std
stos
nop
or
out
push
xchg
pop
dec
and
gs
bound
pop
rcl
xchg
add
xor
addr16
dec
ror
mov
and
gs
add
gs
pop
adc
ss
jmp
push
pop
ja
(bad)
adc
inc
xchg
enter
adc
and
stos
fld
pop
xchg
xor
xlat
in
lods
pop
lods
mov
jae
xchg
pop
fadd
cmc
pop
pushf
cs
xor
mov
outs
out
rol
int
das
push
cli
(bad)
fisub
mov
sub
movs
jae
dec
add
xor
imul
pop
out
xor
xlat
push
pop
(bad)
(bad)
jle
pusha
sti
cs
add
(bad)
cli
das
jno
push
and
in
mov
(bad)
cmp
fisttp
ins
adc
shr
cs
ret
pop
das
pop
lods
adc
xor
aam
cmc
cmp
rol
into
push
push
sar
mov
cmp
std
out
(bad)
adc
sbb
fild
jp
dec
push
sub
mov
inc
fsubr
arpl
(bad)
jp
fidiv
repz
xchg
dec
jns
adc
cmp
xchg
xor
in
push
push
push
jge
jae
fs
ds
inc
xlat
in
icebp
lods
in
fisttp
in
js
mov
and
(bad)
and
dec
call
jbe
mov
xchg
sub
sub
aad
imul
test
and
pop
call
lods
mov
scas
mov
jp
test
or
test
xchg
aad
not
mov
add
in
sub
out
sub
shrd
xor
push
mov
mov
push
mov
xor
mov
data16
sub
adc
mov
push
mov
retf
xchg
scas
repnz
cld
es
sub
mov
dec
fsub
jp
mov
push
mov
pop
pop
std
repnz
mov
scas
es
jg
fild
or
cmp
sar
(bad)
jnp
pop
arpl
pop
mov
jmp
mov
mov
mov
ins
and
in
ret
imul
jg
fwait
dec
loope
imul
inc
ss
cdq
shl
cwde
popa
ins
(bad)
daa
jo
retf
inc
ror
inc
stc
add
popa
add
fnstsw
jne
imul
mov
inc
jg
mov
xor
inc
or
gs
(bad)
(bad)
ficom
pop
push
and
test
loopne
push
js
retf
jp
add
add
push
jp
cmps
dec
pop
add
add
bound
or
push
iret
fmul
cld
sub
pop
jmp
inc
xor
cmps
sti
push
pop
xchg
xor
ss
lahf
mov
hlt
dec
lds
xchg
out
(bad)
clc
neg
not
sub
xor
imul
pop
ror
jmp
mov
mov
inc
xchg
adc
xor
sahf
(bad)
dec
add
cli
jno
dec
aam
jmp
sbb
or
adc
lahf
jb
sti
ror
adc
inc
fild
mov
adc
mov
and
mov
and
xchg
and
out
adc
or
dec
push
idiv
sub
(bad)
jmp
xchg
xlat
dec
adc
aam
adc
fs
aaa
dec
cmp
mov
cmp
mov
(bad)
and
cmp
popf
mov
rcr
lea
fstp
sbb
dec
call
inc
pop
arpl
xor
cmp
xor
mov
retf
(bad)
inc
lea
jno
mov
mov
mov
adc
sub
pop
ss
int
pop
push
dec
daa
xor
shr
(bad)
jns
jno
sbb
add
ins
jl
pop
shl
adc
shl
outs
pop
sub
pusha
out
cli
lds
xor
and
ins
adc
out
dec
push
das
add
cmp
sar
mov
pop
dec
sub
lds
add
les
inc
mov
push
mov
pop
jl
xor
ss
adc
imul
(bad)
and
push
mov
test
fcomp
jne
and
mov
and
mov
dec
rcl
mov
or
cdq
inc
iret
jo
sbb
cdq
pop
pusha
call
push
leave
out
sbb
sbb
pop
std
cmps
dec
jp
ror
sbb
aaa
mov
push
outs
rcr
hlt
jmp
cmps
test
scas
mov
movs
aas
jl
sar
idiv
daa
test
mov
mov
ss
and
(bad)
idiv
xor
mov
sahf
push
dec
pop
retf
addr16
sbb
mov
pop
(bad)
jnp
outs
xchg
adc
jno
mov
inc
cwde
mov
repnz
push
push
nop
mov
(bad)
cmc
pushf
jmp
fld
lahf
push
in
and
aad
shl
cmps
add
dec
cld
(bad)
iret
dec
pop
xchg
xor
cmp
lahf
sbb
in
pop
add
(bad)
popf
or
dec
cmps
mov
shr
mov
aam
sbb
adc
sub
dec
jae
and
inc
addr16
inc
pop
xor
ins
inc
xor
clc
cmp
loopne
push
ja
adc
mov
dec
and
and
rcl
xor
(bad)
in
ror
sar
xor
daa
addr16
neg
xchg
es
and
xor
push
sbb
mov
fcomi
mov
add
sub
sub
ins
mov
ror
xor
adc
inc
sbb
and
sub
jl
fcomp
push
or
in
sub
and
mov
popf
shl
mov
xchg
xchg
test
repnz
mov
xor
inc
xchg
adc
sub
je
pop
or
rcr
add
je
in
push
inc
aas
test
adc
fsub
cmc
mul
or
and
jnp
push
test
or
pop
iret
sbb
data16
out
sbb
xlat
in
jmp
mov
push
inc
ins
cmp
mov
cmp
and
adc
adc
stos
out
in
jmp
retf
mov
jl
test
popf
xchg
out
fs
sar
in
call
push
xchg
(bad)
iret
ror
jge
jg
(bad)
(bad)
and
and
cmp
inc
call
jmp
loop
cmps
push
jge
mov
inc
imul
(bad)
sbb
mov
mov
push
sub
jo
mov
imul
mov
cld
bound
int
jne
icebp
pop
out
pop
test
mov
je
fwait
enter
sub
outs
push
xlat
inc
jg
xor
imul
xchg
jl
daa
outs
aas
xchg
inc
pop
data16
fs
enter
or
outs
inc
adc
xor
(bad)
verr
cmps
(bad)
jmp
test
xlat
adc
aad
xor
(bad)
sbb
test
fdivr
mov
icebp
pop
mov
mov
mov
test
xchg
or
jle
jns
icebp
xor
in
call
cli
adc
cdq
pop
ins
pop
inc
data16
cwde
inc
jle
cs
mov
xchg
mov
mov
(bad)
ins
inc
nop
or
dec
cmps
popa
cmp
xchg
aam
pop
mov
sbb
add
addr16
adc
(bad)
jbe
test
jmp
into
int3
loopne
jb
(bad)
sar
mov
adc
ret
(bad)
jecxz
jns
pop
xlat
neg
xchg
ins
mov
jecxz
sub
icebp
mov
in
leave
xlat
pop
mov
mov
xor
sub
add
inc
test
(bad)
pop
mov
lea
test
push
mov
in
lock
xchg
fldcw
ja
rcr
popa
test
cmps
retf
sub
(bad)
loope
(bad)
ficom
mov
push
in
enter
cmps
push
dec
mov
ret
xchg
dec
popa
pop
mov
out
popf
imul
push
test
adc
sub
ror
xchg
add
fcom
pop
mov
es
dec
sbb
loop
in
mov
mov
inc
jg
push
bound
call
jno
fld
mov
sub
sbb
jg
mov
bswap
sbb
out
inc
cld
sbb
and
mov
sub
imul
jae
mov
outs
(bad)
shr
xor
aad
cmp
pop
dec
push
inc
inc
xor
jecxz
mov
push
mov
and
adc
js
jbe
fwait
sub
jo
or
data16
jb
sub
leave
mov
jnp
aas
mov
outs
push
lods
imul
sbb
sbb
add
cmp
movs
inc
ffreep
popfw
dec
leave
or
mov
lock
scas
loop
mov
retf
cmps
lock
into
dec
mov
add
iret
aad
jbe
or
pop
push
mov
stos
pop
(bad)
shl
cli
enter
pop
test
pop
xchg
scas
pop
mov
sbb
retf
test
ret
cdq
dec
add
xchg
push
add
push
inc
mov
sbb
push
push
push
loope
push
push
cmps
push
push
push
push
push
push
push
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sahf
push
push
push
adc
movs
adc
stos
pop
sar
cmps
pop
push
sar
dec
jbe
ins
outs
ins
jno
ins
jg
ds
jo
jno
ds
ds
imul
jo
pop
push
dec
ds
jp
xor
adc
push
push
push
push
push
push
push
dec
pop
push
push
push
pop
sbb
inc
push
push
push
push
push
push
push
push
(bad)
push
sbb
adc
sahf
adc
push
ds
push
push
push
push
push
adc
push
push
push
mov
pop
push
push
ds
push
push
push
push
push
sbb
push
push
push
push
push
push
sbb
push
push
push
push
push
push
push
(bad)
adc
push
push
push
push
push
push
push
push
sbb
pop
fwait
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ficom
push
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ds
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ds
push
push
push
push
push
push
push
push
push
push
push
push
push
xor
pushw
push
push
or
push
push
ds
push
push
sahf
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ds
push
jle
ins
ins
ins
jge
push
push
neg
push
push
mov
push
push
push
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
push
push
pop
xor
jno
push
push
adc
push
push
push
ficom
push
push
push
push
push
push
mov
push
push
push
push
push
push
push
push
push
push
pop
push
push
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
out
mov
push
push
push
push
push
push
push
push
push
sbb
sbb
es
push
call
push
or
cs
push
lds
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
pop
push
push
adc
add
sbb
push
adc
mov
adc
pop
push
push
sbb
push
push
adc
sbb
push
sbb
push
push
adc
sbb
pop
push
push
adc
sbb
push
sbb
push
or
push
push
push
pop
push
push
punpcklbw
push
push
sbb
push
push
adc
push
or
push
push
push
sbb
push
punpcklbw
push
sbb
push
push
adc
push
or
push
push
push
sbb
sbb
adc
push
adc
push
or
push
push
push
sbb
push
punpcklbw
push
push
sbb
push
push
adc
push
or
push
push
push
sbb
push
nop
adc
or
push
adc
push
push
push
or
push
push
push
sbb
push
nop
or
push
or
push
push
push
sbb
push
bswap
sbb
push
sbb
or
push
adc
push
or
push
push
push
push
push
push
nop
or
push
adc
push
or
push
push
push
pop
push
push
nop
xor
ss
push
push
xor
cs
push
push
push
push
adc
push
nop
loopne
sbb
push
add
push
add
or
push
adc
or
push
push
push
adc
pop
push
push
adc
sbb
adc
sbb
push
xor
adc
pop
push
push
adc
add
or
push
adc
test
push
outs
sahf
sbb
push
sbb
sahf
push
push
push
sbb
add
push
adc
pop
push
push
sbb
push
outs
sahf
adc
push
sbb
add
or
push
adc
add
or
push
sbb
or
push
push
push
adc
push
(bad)
sbb
push
push
add
push
push
push
adc
push
(bad)
add
push
adc
add
push
adc
test
push
outs
ins
pop
push
push
outs
jno
push
push
adc
add
push
adc
aas
push
push
adc
ins
mov
icebp
adc
outs
or
ss
push
adc
sbb
push
sbb
push
push
sbb
adc
ss
cmp
push
adc
sbb
push
sbb
add
sbb
test
push
outs
or
cmp
push
adc
sub
push
sbb
test
or
push
sbb
push
push
sbb
test
push
outs
or
cmp
push
adc
sub
push
adc
push
jno
push
push
adc
jmp
ss
push
adc
jno
push
push
adc
jno
push
push
adc
jno
push
push
adc
sbb
push
outs
ss
push
adc
push
adc
outs
ss
xor
push
adc
jno
push
push
adc
ds
sbb
push
cmp
push
adc
jno
push
push
adc
sbb
push
sbb
test
push
outs
or
cmp
push
adc
sub
push
adc
cs
push
adc
ds
push
jno
push
push
adc
pop
xor
cmp
push
adc
sbb
sbb
push
push
adc
jno
push
push
adc
sbb
push
push
adc
sub
sub
push
adc
ss
push
adc
sbb
push
push
adc
popa
adc
outs
jno
push
push
adc
sbb
push
push
adc
sub
push
adc
sbb
push
sbb
ins
in
adc
outs
or
cmp
push
adc
sub
push
sbb
push
outs
or
cmp
push
adc
sub
push
sbb
sbb
sub
push
adc
sbb
push
sbb
test
push
outs
or
cmp
push
adc
sub
push
sbb
test
push
outs
or
cmp
push
adc
sub
push
sbb
sbb
sub
push
adc
sbb
push
sbb
adc
push
outs
or
cmp
push
adc
pop
dec
pop
push
push
pusha
sbb
push
sbb
adc
push
sbb
adc
push
sbb
adc
xchg
adc
outs
or
cmp
push
adc
sub
sub
push
adc
test
push
outs
movhps
xor
sbb
sub
push
adc
test
push
outs
movhps
xor
sbb
sbb
es
push
adc
(bad)
nop/reserved
xor
push
adc
daa
push
push
adc
and
push
adc
and
push
ins
adc
push
push
adc
mov
push
outs
movhps
ds
sbb
push
push
adc
add
push
adc
and
push
adc
and
push
adc
sbb
xor
push
adc
pop
push
push
adc
adc
or
push
sbb
mov
push
outs
movlps
push
push
adc
mov
sbb
push
push
adc
sbb
sbb
sbb
pop
push
push
adc
pop
push
push
adc
adc
adc
push
outs
jno
push
push
adc
adc
pop
or
ins
icebp
adc
outs
mov
adc
ins
pop
adc
outs
mov
sbb
adc
outs
mov
push
push
adc
xor
push
adc
adc
jno
push
push
adc
into
sbb
push
cmp
push
adc
adc
pop
push
push
adc
pop
push
push
adc
sbb
pop
push
push
adc
sbb
push
sbb
adc
or
cmp
push
adc
sub
push
adc
xor
push
outs
or
push
push
adc
adc
adc
push
outs
jno
push
push
adc
or
push
adc
adc
adc
push
outs
or
cmp
push
adc
sub
mov
test
push
push
push
adc
sbb
push
sbb
push
test
push
outs
or
cmp
push
adc
sub
push
adc
movs
adc
outs
or
push
push
adc
push
femms
ins
sub
push
outs
jno
push
push
adc
or
push
adc
(bad)
(bad)
(bad)
test
cmp
push
adc
sub
sub
push
outs
ins
in
adc
outs
jno
push
push
adc
sbb
push
sbb
je
outs
or
cmp
push
adc
sub
push
adc
push
adc
outs
or
push
push
adc
or
or
cli
adc
outs
jno
push
push
adc
or
push
adc
or
adc
outs
or
cmp
push
adc
sub
cli
adc
outs
ins
in
adc
outs
jno
push
push
adc
sbb
push
sbb
or
ins
in
adc
outs
or
cmp
push
adc
sub
push
sbb
or
push
outs
or
cmp
push
adc
sub
push
adc
ss
push
push
adc
sbb
push
sbb
and
jmp
out
movs
fimul
push
pop
inc
(bad)
sbb
xlat
test
bound
sub
pop
sub
jl
jb
jmp
rcl
pop
dec
in
xchg
fimul
js
inc
add
pop
sub
aas
dec
adc
jbe
sbb
push
out
test
xchg
aam
xchg
cmp
sub
das
sbb
jg
je
mov
lahf
js
loope
test
xchg
mov
arpl
push
sbb
(bad)
movs
fnsave
mov
movs
idiv
sbb
loope
dec
(bad)
jg
fisttp
push
pop
cmp
out
mov
sbb
push
pop
dec
cli
push
jmp
jl
mov
mov
por
dec
mov
cmp
xchg
clc
test
mov
push
or
xor
xchg
out
dec
push
sbb
jl
pop
adc
jbe
push
sub
push
stc
test
mov
push
sbb
ror
jb
(bad)
cwde
fistp
or
xchg
iret
and
jp
sub
cwde
outs
aaa
adc
mov
sahf
fnstenv
and
fstp
mov
arpl
pop
loope
sbb
daa
jge
and
mov
icebp
stos
call
xor
pusha
out
cmp
sbb
rol
or
sahf
rol
not
dec
add
daa
dec
push
pop
out
inc
add
imul
outs
pop
pop
sbb
pop
ds
mov
sub
pop
and
push
fwait
mov
push
outs
pop
pop
das
inc
fisubr
and
jmp
pushf
shl
aas
jp
push
(bad)
rcr
jae
xchg
clc
mov
sub
mov
and
das
stc
mov
lods
leave
mov
je
outs
sbb
push
and
jg
push
ss
stos
std
mov
loope
lock
pop
inc
add
addr16
xchg
std
sahf
in
cdq
fistp
retf
fwait
int
in
mov
rcr
adc
loop
mul
pop
fwait
aas
dec
add
das
jge
jle
daa
push
add
jne
inc
sbb
sti
sbb
in
add
loope
push
mov
dec
cmp
fsubr
mov
fdivr
push
dec
xor
or
in
(bad)
mov
pushf
test
fnstsw
fistp
aam
cdq
mov
inc
push
dec
sbb
cmovle
push
add
ss
loopne
lds
adc
inc
or
icebp
mov
mov
ret
inc
add
inc
add
arpl
test
sbb
pop
inc
sbb
inc
xor
adc
jo
bound
inc
repz
ja
out
cmp
inc
or
adc
or
jmp
jle
jbe
push
inc
cmp
sbb
cdq
les
mov
inc
xor
pop
scas
popa
std
stos
cli
xchg
mov
dec
cmp
xor
push
jmp
add
mov
test
mov
nop
sar
push
rol
outs
cmp
mov
les
jne
pop
loop
int3
push
and
and
(bad)
cwde
sti
mov
outs
sbb
add
cmovnp
add
push
es
push
sbb
and
mov
push
adc
cdq
mov
lods
in
nop
(bad)
fwait
test
lods
test
mov
jo
adc
jo
jle
inc
mov
mov
pop
mov
in
mov
es
sub
inc
mov
mov
pop
mov
test
mov
or
inc
sub
jmp
js
pop
jl
and
pop
pop
sub
stos
inc
adc
aas
push
es
outs
sbb
cmp
xchg
retf
das
pop
adc
inc
scas
iret
mov
(bad)
fwait
int
pusha
and
daa
pop
sbb
or
jne
mov
or
call
cs
aaa
adc
int
int
retf
rcl
movd
push
sub
ins
(bad)
repnz
mov
fsubr
dec
aaa
jns
push
mov
jge
and
sahf
test
sub
pop
mov
leave
sbb
pop
add
mov
add
push
ds
lods
retf
imul
sbb
sbb
and
jmp
cdq
into
test
pop
ins
add
shl
imul
fs
sub
add
sbb
mov
push
hlt
outs
adc
js
push
xor
add
das
inc
pop
add
dec
clc
xchg
call
push
cmc
xchg
lods
les
mov
dec
sub
fst
pop
add
mov
into
cdq
fdivr
pop
ret
(bad)
xlat
jo
inc
sub
jg
mov
cmp
int3
jo
push
xor
mov
jns
jns
arpl
pop
sbb
pop
pop
aaa
call
or
xlat
pusha
icebp
mov
xchg
fadd
sbb
push
aas
es
push
cs
add
cwde
movs
rcl
pop
(bad)
mov
popf
(bad)
mov
ss
aas
add
pop
loope
inc
sti
sub
dec
jmp
test
popf
not
inc
push
push
sbb
adc
mov
clc
nop
js
mov
pusha
loop
cld
mov
xchg
jne
sub
ds
inc
pop
sbb
mov
adc
scas
(bad)
test
loope
in
in
les
add
ret
sar
mov
mov
call
cmp
push
and
mov
and
dec
jl
pop
sbb
inc
sub
mov
xchg
movs
loopne
fucomip
mov
cld
lods
jmp
(bad)
nop
hlt
ds
inc
sbb
out
mov
sub
fs
mov
push
gs
push
and
inc
sbb
inc
sbb
data16
(bad)
sahf
int
fidiv
in
mov
add
mov
mov
xchg
sub
push
and
xchg
push
sbb
test
inc
adc
fistp
(bad)
ss
or
push
lock
into
xchg
mul
inc
out
test
lods
mov
mov
mov
push
push
inc
aad
repz
dec
add
sbb
add
or
sbb
das
push
dec
sub
inc
xor
sbb
push
add
mul
stos
pop
or
ret
sar
push
and
outs
adc
in
xchg
(bad)
(bad)
stos
mov
inc
mov
mov
mov
mov
jo
adc
popa
and
mov
sbb
pusha
neg
mov
or
loope
cmp
inc
jle
(bad)
les
out
aad
enter
(bad)
int3
test
jg
pop
aaa
jl
push
ins
ss
push
cmp
retf
(bad)
leave
mov
push
cmp
xor
scas
(bad)
mov
jne
js
gs
aas
push
xor
jae
fisubr
xlat
or
loop
les
adc
jne
clc
push
jmp
icebp
xchg
mov
xchg
outs
sbb
xor
dec
mov
dec
xor
test
ja
inc
cs
xchg
push
dec
dec
sbb
test
mov
mov
test
loopne
retf
inc
pop
dec
sbb
(bad)
leave
lods
int3
mov
bound
fdivr
fadd
je
and
jbe
push
test
mov
mov
nop
loope
in
mov
and
pop
retf
mov
aam
(bad)
mov
loopne
int
pushf
mov
ss
cmp
jbe
jge
pop
sbb
retf
xor
jns
mov
push
ret
inc
add
mov
xchg
cwde
mov
scas
push
daa
data16
push
add
je
and
xor
fsub
int3
out
icebp
(bad)
jmp
cvttps2pi
xchg
aam
and
and
rol
jnp
cli
test
cld
(bad)
mov
mov
scas
rcl
out
jmp
xchg
shl
call
mov
or
(bad)
xor
cmovle
xchg
shl
inc
adc
inc
pop
inc
aaa
test
stos
shr
sti
mov
push
adc
add
ins
cmp
pop
adc
arpl
jno
nop
sar
dec
add
repz
cld
push
push
adc
push
add
add
ins
aas
push
push
outs
cmp
mov
xchg
jae
fs
aas
mov
mov
mov
xchg
out
repnz
fild
in
cmps
scas
rol
mov
jp
out
push
fiadd
push
add
outs
adc
outs
stos
mul
cld
xchg
loope
fsubr
out
pushf
retf
xchg
fbstp
(bad)
fnsave
repz
in
sar
retf
add
jmp
nop
test
add
(bad)
jae
mov
fwait
mov
in
test
and
sbb
jmp
call
jl
push
push
jae
sbb
mov
xor
inc
out
hlt
popa
add
dec
rsqrtps
mov
jge
outs
sub
xor
(bad)
scas
fldenv
jp
je
and
inc
mov
mov
mov
jg
pop
push
and
sbb
pop
adc
call
pop
xor
pop
add
adc
repz
nop
(bad)
mov
movs
repnz
(bad)
stc
mov
nop
mov
popf
int3
cmp
aam
rol
scas
sar
jne
fmul
push
or
and
or
pop
dec
aaa
jae
dec
rcl
push
pop
dec
add
ja
inc
fiadd
push
lds
(bad)
popf
retf
push
adc
jp
ss
(bad)
clc
scas
jae
outs
or
sbb
dec
and
ds
sbb
pop
mov
lods
lds
sub
pushf
push
cmovle
dec
mov
loope
das
imul
icebp
mov
push
and
lock
cmps
repnz
cmp
xor
dec
or
arpl
jnp
call
in
imul
xor
jo
sub
cmps
rcr
xor
push
pop
dec
or
pop
out
add
fistp
xlat
mov
into
pusha
cmp
inc
pop
adc
fs
(bad)
pusha
adc
sub
pop
ss
fcom
push
push
push
ins
loop
dec
pop
je
sub
dec
pop
loop
out
push
maxps
push
mov
add
leave
js
daa
and
pop
test
inc
or
js
inc
or
mov
adc
ret
repz
mov
stos
in
cdq
lock
jmp
ret
xlat
(bad)
shr
or
and
ja
pop
ss
push
sahf
fldenv
dec
sub
adc
or
call
scas
test
ret
pop
push
cmp
xor
xor
cmp
(bad)
in
xor
add
pop
add
xor
jbe
and
push
sub
adc
jp
pop
sbb
inc
cs
pusha
and
and
(bad)
jmp
(bad)
sti
loopne
rcr
cmps
retf
(bad)
fwait
pop
sub
ja
pop
sbb
push
xchg
push
dec
or
jb
lahf
rcl
or
dec
xchg
cmps
jmp
or
int
cmps
push
sub
ins
add
pop
pop
pop
push
pop
jle
std
xchg
dec
shl
inc
call
dec
lahf
(bad)
lods
hlt
sub
cdq
out
mov
outs
xor
xor
push
fs
ss
dec
data16
mov
lahf
icebp
nop
out
int
sti
mov
leave
popf
frstor
iret
lahf
ficomp
cdq
fadd
jmp
inc
sbb
dec
sbb
pop
push
dec
stc
imul
jbe
pop
pop
jbe
int3
add
cmp
call
mov
and
cmp
cmp
and
xchg
fist
iret
mov
ret
mov
jge
jge
clc
xchg
jae
enter
in
lods
loopne
call
push
dec
mov
mov
add
jae
addr16
cmp
out
test
iret
fwait
mov
sbb
jbe
fs
mov
addr16
je
xor
ror
fimul
pop
loope
(bad)
jge
pop
rcl
xor
popw
inc
sbb
fld
push
and
sub
dec
into
add
pop
jge
call
mov
and
dec
adc
add
pop
retf
fwait
lods
mov
popa
ins
add
cmp
imul
adc
stos
ficom
into
lahf
movs
sbb
cli
daa
push
jge
sub
cld
mov
xchg
leave
cmp
sbb
add
mov
shl
sbb
retf
arpl
cmp
xlat
xchg
into
bound
add
jl
popa
or
jae
xor
cmp
jmp
cmp
dec
imul
outs
sbb
push
push
sub
push
push
jge
mov
mov
and
push
call
sbb
inc
sbb
outs
ror
in
shl
stos
mov
ds
or
mov
aad
in
and
and
ss
cli
mov
adc
adc
and
mov
movs
lds
jnp
mov
ins
or
jb
data16
sub
scas
cld
sub
xchg
xchg
mov
sub
dec
jecxz
fild
leave
xchg
idiv
bound
push
push
pop
push
jmp
lock
add
(bad)
mov
fnstenv
cli
sbb
test
ja
imul
mov
push
xor
push
and
loop
loopne
into
outs
add
push
(bad)
mov
aam
and
sub
dec
emms
das
inc
and
lahf
mov
pop
movd
imul
pop
xor
and
or
xor
cmp
xor
sbb
call
mov
push
cmc
xchg
lock
fmul
cmp
fisub
cmc
mov
push
inc
inc
int
cli
test
sub
rcl
mov
scas
mov
in
lods
ficom
fisubr
jbe
dec
adc
and
dec
call
mov
xchg
rol
sub
ja
push
and
cmp
loop
mov
ret
mul
pop
xor
dec
or
dec
ds
lock
hlt
ins
sbb
mov
jge
and
sub
or
inc
cmp
mov
adc
imul
scas
stc
call
sub
jle
mov
jecxz
ror
out
ret
xchg
nop
sti
ja
retf
xchg
out
xor
imul
sbb
fild
sbb
lock
out
sti
lods
fstp
repnz
shl
add
inc
xor
pop
add
out
scas
jmp
das
xor
int3
test
lods
jp
movs
loopne
fisubr
xor
adc
sbb
pop
or
lock
pop
push
adc
sub
stc
outs
push
push
adc
mov
arpl
jl
ficom
les
mov
sub
dec
sbb
leave
push
sub
sti
int
(bad)
mov
and
rol
and
mov
adc
fild
push
or
mov
mov
cld
mov
jbe
push
push
jae
gs
adc
push
jecxz
(bad)
adc
nop
into
(bad)
sti
mov
cli
test
mov
inc
add
call
outs
std
cwde
sti
mov
sbb
push
cmps
lock
mov
enter
int
dec
pop
or
fisubr
mov
or
jns
dec
adc
jecxz
retf
aad
out
gs
jae
int
xor
jle
jge
dec
adc
inc
es
add
inc
inc
and
xor
hlt
push
pop
adc
imul
iret
mov
and
dec
adc
js
sub
and
retf
inc
cs
and
add
push
(bad)
adc
jge
pop
aaa
data16
out
dec
adc
shl
push
pop
pop
jmp
ret
and
push
push
sub
sub
push
xor
jmp
xchg
int3
imul
sbb
inc
pop
dec
or
inc
push
xor
ds
mov
cwde
fistp
mov
pop
xor
push
bound
and
pushf
cli
xchg
cmc
mov
cdq
fimul
pop
das
jp
dec
add
ja
jns
dec
xchg
out
loope
adc
dec
(bad)
jp
dec
jecxz
cmc
outs
sti
lods
fcomp
jnp
jl
and
jnp
cmp
dec
or
hlt
nop
sar
imul
adc
das
cmp
add
inc
xor
pop
or
out
ret
jp
xchg
mov
mov
pop
sub
jne
jne
dec
pop
push
add
scas
iret
sahf
cmc
push
into
test
xchg
loop
fst
sahf
out
mov
add
loop
cmp
fwait
mov
and
push
cmp
mov
lahf
mov
aaa
xor
in
add
mov
and
push
sysenter
int3
mov
pushf
into
mov
or
repz
push
push
dec
or
xor
pop
push
inc
mov
and
pop
(bad)
mov
test
das
sbb
punpckhdq
adc
ins
cmovle
xchg
(bad)
xchg
call
jcxz
push
sbb
loop
jo
push
in
mov
scas
cmc
fwait
xlat
lods
test
frstor
and
adc
mov
pop
adc
jo
dec
cmp
outs
sbb
je
push
or
dec
es
and
inc
test
jmp
adc
rol
mov
arpl
outs
sbb
pop
adc
ja
scas
cld
mov
sbb
gs
leave
mov
xchg
(bad)
mov
(bad)
mov
inc
cmp
mov
xor
out
mov
adc
inc
ss
dec
cmps
fld
das
cwde
mov
mov
cmps
fistp
cmp
pop
mov
out
mov
test
sbb
or
cs
push
dec
mov
rcr
out
mov
je
jnp
call
push
aaa
jns
rcl
jbe
pop
in
out
xchg
mov
sub
xor
push
adc
in
cmp
xor
dec
mov
sbb
push
cmp
jno
dec
aaa
add
sub
adc
movs
cld
scas
cli
scas
addr16
int
stos
lds
xor
mov
mov
fistp
sbb
cmps
imul
dec
sub
jbe
mov
mov
adc
add
data16
jge
mov
test
fistp
in
inc
push
push
push
jo
sbb
mov
push
and
jb
je
push
cmp
jae
sub
es
in
mov
mov
add
pop
sbb
shl
ds
cwde
xchg
shr
or
int3
gs
test
outs
and
mov
es
jg
and
inc
sbb
repz
rcr
stos
ret
lea
pushf
out
fdivr
fbld
pop
adc
call
lods
fmul
dec
or
ins
or
jmp
dec
xor
jne
mov
mov
adc
jns
jp
jne
push
push
outs
and
jl
jmp
push
cmps
aad
(bad)
cmps
out
(bad)
in
lahf
mov
jb
jge
mov
das
mov
xchg
aam
add
dec
mov
in
jmp
not
mov
cmp
mov
sahf
in
aaa
cmp
jle
into
(bad)
mov
cdq
into
pop
ins
adc
push
mov
add
add
and
mov
cmc
xchg
scas
(bad)
xchg
cld
lahf
ficom
aas
addr16
(bad)
xor
xchg
push
push
push
loop
ds
jnp
xchg
jg
xor
call
xchg
dec
int3
mov
mov
jnp
adc
das
out
or
fidivr
inc
cmp
cmc
sub
adc
or
inc
repz
sub
ret
mov
retf
cmp
pop
imul
(bad)
and
jne
and
or
mov
int3
xchg
shl
outs
cmp
daa
pop
or
jns
pop
push
pop
xchg
push
or
repnz
(bad)
fisub
xchg
cmps
repz
xor
outs
adc
in
test
cmovne
pop
mov
ja
push
pop
les
inc
ss
icebp
xchg
stos
sar
out
push
inc
in
mov
xchg
jmp
xor
adc
cmp
mov
clc
fwait
repz
jmp
sub
adc
pop
lds
xchg
jmp
cmp
dec
sub
jp
inc
cmp
inc
loopne
sti
scas
fs
test
stos
fwait
sbb
das
or
ficom
xchg
mov
add
inc
adc
mov
adc
push
mov
and
pop
sbb
call
jae
lods
rol
neg
test
xchg
not
pop
push
movs
into
cmps
aam
jbe
scas
fst
adc
push
inc
adc
xchg
xchg
ins
into
pop
maxps
pop
mov
jmp
js
in
cld
lods
fdivr
push
js
and
push
adc
fsubr
outs
sbb
xchg
(bad)
dec
adc
jno
dec
push
pop
sub
addr16
je
fmul
xor
push
out
mov
in
dec
out
xor
out
test
adc
int
dec
sbb
jnp
js
pop
shr
imul
push
add
cmp
(bad)
aad
into
mov
cli
mov
or
add
pop
cld
dec
loop
les
shr
es
jge
es
movs
push
cmovns
dec
pop
jae
pop
dec
sbb
clc
inc
xor
mov
fwait
movs
int
hlt
pop
mov
sub
mov
mov
ins
jae
popa
das
out
and
cs
loope
ret
mov
jne
or
push
pop
out
sub
jge
mov
fst
stos
repz
jmp
call
dec
add
inc
adc
xchg
enter
sbb
mov
mov
xor
push
out
test
jne
shl
pop
loopne
imul
jge
repnz
sub
cmp
sar
sbb
mov
jno
pop
rol
jne
jo
mov
test
xor
sub
test
or
pop
jecxz
fist
and
jo
pushf
jmp
leave
scas
js
lahf
fidivr
shl
mov
cmp
jo
pusha
sub
mov
outs
sub
sbb
sti
xchg
in
sub
loopne
repnz
aas
jmp
xchg
in
mov
ins
add
lock
nop
dec
test
stos
(bad)
cwde
sti
push
or
inc
cmp
xchg
iret
mov
push
(bad)
xchg
mov
std
push
sbb
dec
cmp
cmp
mov
xchg
aad
std
mov
rcl
jbe
mov
dec
adc
inc
and
or
hlt
aas
call
les
dec
loope
or
stos
push
add
sbb
std
mov
cmp
jnp
ins
mov
fwait
arpl
data16
xchg
lds
pusha
xor
ss
imul
xor
(bad)
or
dec
sub
dec
ds
sbb
ret
xor
mov
test
sub
jbe
loope
cmp
mov
icebp
xchg
mov
cdq
in
pop
jl
inc
in
sar
fisttp
cmp
cmp
mov
xor
push
fwait
aam
(bad)
mov
xchg
mov
outs
xchg
int
test
dec
or
popa
out
mov
adc
ins
icebp
push
(bad)
fstp
push
add
inc
mov
sub
mov
(bad)
xlat
mov
mov
or
add
retf
cmp
jle
dec
pop
icebp
pop
fwait
clc
mov
fwait
pop
lock
mov
mov
(bad)
mov
mov
mov
aaa
and
or
ret
mov
rcl
jno
mov
mov
js
mov
mov
cmps
dec
in
cld
lods
addr16
sub
mov
test
retf
push
fimul
inc
push
sti
es
adc
and
inc
mov
into
xchg
leave
push
sbb
adc
add
inc
lock
cmp
lods
ja
data16
inc
andps
pop
adc
ds
or
xor
sbb
imul
jno
inc
out
jae
xchg
in
ins
loopne
sar
jae
mov
inc
shl
push
dec
popf
pusha
ds
pushf
(bad)
xchg
mov
cmp
push
push
mov
xlat
sahf
out
pusha
or
jb
xor
shl
jne
push
jo
out
std
mov
stos
out
mov
lea
stc
cmp
mov
bound
jns
jp
push
(bad)
push
ja
add
pop
sub
push
cmp
jnp
int3
or
int
test
popa
in
into
fwait
mov
xor
sbb
es
sub
pop
(bad)
mov
ficomp
or
sub
inc
test
mov
xor
pop
ss
inc
pop
push
fild
cdq
into
mov
cwde
jmp
mov
outs
or
jecxz
fimul
enter
rol
inc
cmc
out
mov
not
cmps
shl
clc
mov
stos
ret
lods
sar
cli
nop
mov
sub
and
je
jp
dec
call
add
dec
str
sahf
jns
push
push
pop
jg
adc
adc
not
adc
fimul
mov
mov
(bad)
pushf
mov
stos
pop
xor
out
(bad)
iret
mov
jecxz
retf
pop
mov
mov
mov
and
iret
pushf
mov
xor
mov
jno
aaa
js
inc
mov
mov
mov
push
loope
clc
(bad)
imul
push
inc
aaa
jno
pop
sub
adc
adc
dec
cmp
prefetchnta
push
xchg
(bad)
mov
xchg
les
imul
lea
jnp
cmp
in
lock
rcl
jnp
arpl
push
stc
hlt
mov
mov
push
dec
xor
mov
fcmovu
xchg
in
mov
push
add
outs
mov
dec
pop
dec
sbb
mov
cmp
popf
out
mov
xchg
(bad)
cdq
stos
call
mov
jo
inc
mov
mov
movs
loop
fidivr
push
jns
scas
clc
mov
or
test
pop
jg
jg
ror
inc
adc
rol
xchg
inc
fistp
jp
dec
cvttps2pi
pop
xor
cli
jb
jge
sub
jg
fwait
int3
mov
test
or
push
adc
sub
pop
add
mov
(bad)
mov
push
or
test
xchg
std
jno
mov
arpl
xor
add
push
stos
mul
pop
stc
cmp
and
out
movs
cld
scas
mov
fcmovne
cwde
ficomp
push
dec
mov
fsubr
ror
xor
or
stc
pop
out
xchg
test
mov
mov
adc
pop
aaa
jae
std
int3
fbld
pop
aaa
pop
cmp
inc
adc
pop
div
jnp
cwde
inc
xchg
ficomp
pop
push
sbb
sahf
fsub
stos
out
and
dec
loope
leave
xchg
ins
aaa
pop
adc
dec
in
lea
jnp
popf
out
dec
repnz
loopne
cmps
fcomp
xlat
pusha
adc
das
jg
pop
cmps
sub
jb
inc
or
pop
mov
xlat
push
cmps
jmp
and
and
xor
xchg
jmp
mov
mov
pop
cmc
mov
cli
ja
bound
dec
(bad)
inc
pop
adc
push
aas
pop
adc
mov
mov
(bad)
push
or
xchg
loop
into
stos
not
sub
jle
sub
sbb
adc
mov
pop
add
jge
dec
cmp
jle
inc
mov
pop
cmp
mov
xor
mov
cdq
shl
xchg
cmps
push
mov
fistp
jl
jb
(bad)
(bad)
sti
mov
out
scas
mov
dec
sbb
in
sub
jp
xchg
mov
cmps
out
ins
and
loop
mov
out
inc
sub
or
xor
sub
mov
or
jmp
repz
cli
lods
test
lods
loope
rcl
in
test
xchg
sub
retw
mov
fisttp
enter
mov
jne
data16
mov
retf
(bad)
cdq
fidiv
(bad)
mov
pop
sub
inc
xor
pop
or
pop
cmp
movs
in
ins
cmp
xlat
call
test
sbb
xor
ret
xchg
loopne
scas
pop
xor
adc
and
imul
neg
fsub
sbb
out
mov
sub
pop
xor
scas
cli
mov
das
sub
sbb
cwde
pop
jns
and
mov
jge
inc
and
fwait
sar
or
jp
jle
repnz
shr
scas
addr16
sbb
mov
xchg
enter
cdq
test
in
js
(bad)
mov
es
inc
adc
jae
retf
mov
add
push
imul
ja
inc
ds
mov
xor
jbe
retf
inc
sub
pop
loopne
mov
sub
pop
pop
sub
js
cwde
addr16
mov
sub
pop
mov
adc
sub
es
mov
cmps
fild
inc
adc
adc
fisubr
or
xor
mov
add
stos
pop
sub
pop
xor
xor
ret
gs
add
out
movs
mul
pop
aaa
jbe
jbe
lods
cld
xchg
(bad)
ins
push
dec
or
rcr
mov
call
clc
mov
xor
push
or
in
jnp
push
push
dec
fwait
jb
dec
aas
sbb
xchg
in
mov
sbb
jge
jp
pop
out
fidivr
ret
nop
fimul
das
js
das
inc
xor
(bad)
std
cmps
sti
xchg
jnp
movs
lock
fdivr
and
das
outs
and
add
jb
lock
or
sub
push
sbb
mov
lods
(bad)
fsub
mov
ins
dec
or
jo
pop
xchg
test
cmp
es
adc
std
mov
retf
aad
mov
pop
loopne
cld
jl
dec
mov
mov
mov
hlt
mov
xchg
fwait
test
sub
jno
adc
inc
adc
mov
mov
sahf
shl
mov
test
xor
shl
push
jmp
js
and
dec
jbe
pop
loop
test
outs
jl
jbe
jns
push
xchg
outs
adc
push
push
or
inc
sbb
stos
mov
add
inc
xor
inc
aas
imul
xlat
imul
cs
or
ror
or
repnz
or
and
jnp
pop
sub
idiv
cmp
push
fistp
ja
inc
loop
mov
scas
mov
gs
jnp
in
sahf
jmp
enter
jo
mov
or
inc
das
and
dec
adc
das
ret
stos
(bad)
imul
ror
push
and
mov
adc
and
push
inc
sbb
mov
ror
sahf
jne
adc
pushf
mov
adc
push
or
and
jl
es
cmp
dec
clc
mov
add
mov
mov
fnsave
(bad)
xchg
jmp
jle
pop
pop
mov
dec
repnz
rcl
mov
retf
pop
push
push
pop
jg
and
push
push
outs
sub
sub
add
xor
push
sbb
jbe
push
sbb
repz
pop
adc
in
mov
popf
call
inc
or
add
jo
cmp
dec
pop
add
dec
ds
mov
mov
sbb
mov
sbb
movs
cmc
push
ja
jbe
inc
pop
cmp
pop
push
dec
push
lds
push
es
jp
jne
test
sub
call
arpl
mov
sbb
(bad)
std
lahf
jmp
ffreep
(bad)
rol
sbb
jno
js
inc
pop
dec
adc
leave
mov
popf
ror
cmp
ja
push
in
iret
inc
xchg
ret
cmp
xchg
rcl
and
test
cmp
adc
cmp
mov
adc
mov
mov
(bad)
xlat
(bad)
out
popa
sbb
pop
jge
sub
mov
aas
xor
push
sub
pop
out
repz
pop
push
dec
adc
jge
pop
mov
inc
pop
outs
sbb
xor
or
jo
in
out
lahf
inc
inc
jmp
mov
dec
out
fistp
aas
inc
and
xor
daa
not
mov
mov
(bad)
mov
xchg
into
stos
retf
imul
fwait
rol
inc
add
ins
sub
inc
daa
inc
aaa
pusha
and
ss
or
mov
and
(bad)
jmp
lods
data16
cwde
cmps
stos
mov
popf
cmps
fadd
xchg
inc
out
dec
pusha
or
push
sbb
(bad)
mov
popf
(bad)
xchg
push
xchg
jmp
enter
in
xor
dec
adc
clc
mov
in
or
out
test
pusha
movs
pop
and
test
repz
push
fisub
cld
xor
aas
push
pop
jb
xor
arpl
mov
not
lahf
jmp
(bad)
int
xor
fistp
sar
add
dec
xor
dec
add
dec
adc
jecxz
hlt
lods
popf
and
and
pop
sub
sbb
dec
cmp
mov
push
call
int
dec
and
mov
or
inc
jecxz
sahf
shl
push
sub
bound
dec
aas
jnp
push
cmovns
push
ret
sbb
aaa
dec
sbb
jb
out
imul
add
xor
les
and
popa
aaa
push
jno
xchg
lds
sahf
int
ret
xchg
mov
jl
push
adc
out
jo
and
movs
xlat
mov
push
mov
in
mov
arpl
cld
xlat
call
and
test
leave
mov
sbb
cli
leave
xchg
cli
cwde
fldcw
push
cs
out
mov
xchg
cwde
aaa
outs
sub
rep
fcomp
push
adc
cmp
push
jmp
jmp
mov
push
sti
lods
fstp
pop
xor
ds
pop
push
test
cmp
lods
mov
inc
and
inc
fcom
stos
inc
pop
cmovnp
jp
dec
xchg
ret
jno
or
or
inc
fcmovbe
mov
call
jge
dec
or
ins
cmp
xchg
cmp
es
pop
aaa
(bad)
fbld
push
xor
push
cli
sbb
ret
push
inc
cmp
xchg
(bad)
jns
inc
add
add
fcomp
jne
pop
push
js
dec
and
pop
out
mov
push
outs
cmc
sub
mov
cmps
into
mul
ins
add
jecxz
push
cmp
jnp
std
call
cmp
and
add
gs
jmp
and
sub
dec
sbb
mov
mov
test
popf
fbstp
in
daa
popf
aam
sar
jne
aaa
push
add
mov
mov
bound
inc
or
add
push
sbb
inc
add
xchg
loop
ret
jg
push
stos
shr
sub
cwde
ret
adc
es
sbb
mov
mov
neg
fdivr
ja
push
mov
xor
rcl
mov
inc
adc
mov
(bad)
repz
xchg
xlat
popf
mov
shr
jg
dec
sti
sbb
retf
push
pop
or
and
dec
jmp
arpl
lds
ret
pushf
jp
std
mov
scas
dec
mov
xchg
(bad)
mov
loop
mov
gs
in
sub
mov
push
xor
jno
or
mov
dec
sbb
pop
sub
lock
cmps
push
add
push
iret
icebp
xchg
lds
(bad)
mov
sub
retf
retf
xchg
aam
iret
mov
cwde
scas
(bad)
or
lahf
rcl
ret
outs
inc
push
pop
push
sub
and
int3
xchg
in
mov
jmp
xor
inc
jmp
or
mov
jl
xchg
adc
inc
adc
dec
inc
inc
mov
pop
or
mov
fwait
dec
jno
jns
dec
sbb
adc
sub
or
movs
call
pop
add
push
sbb
mov
xchg
retf
loope
inc
or
jae
mov
push
leave
adc
push
adc
mov
out
push
adc
into
cwde
jmp
bound
jae
pop
pop
mov
ret
mov
arpl
repnz
fimul
push
push
and
sub
es
jmp
lahf
jmp
mov
outs
lods
out
mov
mov
and
rol
sub
data16
sbb
and
jb
jns
ins
ss
retf
cmp
push
enter
stos
pop
in
call
scas
hlt
scas
jbe
das
pop
adc
push
test
test
(bad)
retf
sub
adc
js
aas
pop
sbb
jle
sbb
pop
in
and
mov
je
sahf
jns
inc
push
ins
stos
(bad)
in
shl
bswap
sbb
ja
jne
inc
sbb
add
inc
frstor
pop
or
push
and
adc
outs
out
push
jge
jns
sub
rcl
rcl
lods
sahf
int
cli
stos
movs
iret
mov
nop
out
xor
dec
xchg
ins
adc
js
and
lds
xchg
(bad)
jns
ret
pop
loop
mov
or
dec
add
ficomp
xchg
fs
push
xchg
jae
inc
add
fldcw
lahf
out
mov
adc
adc
ret
dec
pop
add
pop
adc
dec
sbb
adc
pop
and
jg
xchg
lods
iret
aaa
les
leave
mov
xchg
jne
push
and
aad
mov
xchg
js
jo
push
fwait
cmps
rcr
nop
fdiv
in
outs
cmp
push
adc
neg
outs
das
push
adc
mov
movs
cli
mov
jae
inc
add
adc
adc
stos
out
popf
(bad)
and
js
sti
aaa
outs
sbb
js
cmp
cmp
dec
arpl
dec
adc
mov
mov
cs
cmp
inc
xor
sbb
jle
clc
and
call
icebp
ds
adc
or
fidivr
jno
xchg
retf
pusha
xor
sbb
sti
pusha
cmp
cmp
push
cmp
push
cmp
push
fistp
pushf
in
mov
movs
idiv
in
neg
leave
out
hlt
hlt
ins
push
sbb
fdiv
xchg
fimul
sub
inc
push
adc
or
test
fbstp
ja
inc
ds
ret
test
xchg
jae
pop
in
lock
cli
int3
jns
pop
and
ja
sub
mov
push
sbb
data16
gs
cmp
and
xchg
rcr
aad
dec
or
je
outs
lods
into
xchg
shr
and
cdq
icebp
xchg
push
jnp
dec
add
sbb
sti
xchg
in
mov
xchg
add
jo
imul
jbe
retf
mov
mov
xchg
dec
lds
sub
fwait
rcr
xchg
rcr
ror
pop
(bad)
xor
mov
aam
mov
dec
cs
in
in
vmread
xor
jle
retf
mov
popa
cmp
popa
or
jae
pushf
mov
jp
and
addr16
pop
mov
icebp
mov
sub
push
in
fmul
inc
add
sti
pop
jae
pop
out
cmp
unpckhps
addr16
dec
pop
imul
pushf
fsubr
inc
sbb
and
dec
ds
dec
add
sbb
lods
out
xchg
xlat
imul
push
mov
sar
aam
dec
push
or
add
cmp
xor
push
add
push
(bad)
scas
into
lods
test
lods
mov
add
xchg
push
add
sbb
nop
outs
xor
std
mov
or
jp
retf
cmp
shl
sub
rol
mov
xor
add
loop
stc
adc
(bad)
ins
cmp
inc
add
mov
(bad)
std
mov
in
or
inc
popa
cmp
push
pushf
(bad)
popf
cmp
xor
ins
cwde
fcomip
(bad)
fiadd
add
int3
jae
xchg
xlat
mov
ins
or
push
add
movs
cmc
scas
cmp
pop
sub
mov
push
or
push
adc
push
inc
and
cmp
scas
aas
jp
sub
or
mov
inc
leave
xchg
adc
mov
jge
push
or
add
mov
les
inc
mov
add
mov
mov
and
lahf
fidiv
idiv
dec
sahf
int3
mov
out
retf
jg
ins
dec
loopne
ret
iret
cwde
add
dec
pop
add
inc
and
inc
push
jo
aad
add
mov
std
cdq
mov
xchg
jl
mov
test
push
and
daa
jbe
ret
cmps
jmp
stos
int
adc
in
or
stos
xor
sbb
sub
jne
test
test
dec
adc
aad
cli
lahf
fiadd
aaa
push
mov
test
lods
(bad)
add
test
and
sbb
cdq
pushf
scas
dec
sbb
lds
or
xchg
cmps
int3
cmp
mov
sbb
mov
xchg
adc
stos
xlat
cmp
retf
cmps
and
enter
cmp
jecxz
mov
mov
stc
cs
mov
test
add
pop
add
movs
jbe
cmp
in
jnp
fdivrp
outs
jns
adc
cmps
adc
fcomp
enter
into
pop
pop
retf
dec
loopne
pop
mov
imul
jle
pop
or
aam
loope
cwde
lods
mov
mov
inc
(bad)
and
enter
push
repnz
lods
stos
wbinvd
mov
jbe
jmp
cmps
stos
jns
sbb
inc
mov
and
sub
aas
sub
cmp
adc
fcom
adc
inc
fist
shl
push
rcr
cld
inc
dec
mov
xor
std
call
or
jle
and
mov
adc
push
jmp
outs
aam
shl
addr16
mov
ficom
test
mov
sbb
sub
enter
adc
xlat
push
adc
mov
mov
test
mov
frstor
outs
int
ja
cli
shr
or
fild
rol
fisubr
stos
imul
je
fs
hlt
pop
pop
enter
dec
fbld
dec
mov
movs
call
add
es
adc
nop
jg
retf
add
pop
push
mov
jne
cmps
scas
jae
retf
pop
mov
and
popf
adc
inc
push
push
push
mov
daa
mul
shl
inc
test
in
mov
cli
dec
mov
scas
jb
cmp
gs
and
push
ret
mov
or
(bad)
mov
rol
xor
inc
add
in
outs
cli
lods
call
and
shl
icebp
pushf
das
sbb
cmp
pop
iret
cdq
call
pop
xor
retf
and
adc
pop
gs
sub
or
inc
or
aaa
jae
dec
add
enter
pop
adc
in
mov
in
ret
xchg
jne
div
outs
ds
pop
aad
mov
mov
in
sub
jns
dec
stos
hlt
push
test
xchg
punpckhbw
mov
mov
sbb
stos
(bad)
mov
push
xor
dec
sbb
sbb
sbb
shl
iret
mov
jo
lahf
fild
push
jl
dec
push
inc
(bad)
cmps
jle
sub
cmp
xor
aam
fisttp
pop
lods
(bad)
push
xlat
cmps
out
jmp
xchg
mov
fdivr
mov
push
jg
inc
or
dec
ins
or
mov
xchg
ret
inc
mov
leave
mov
sahf
in
sub
xchg
loop
div
imul
pop
push
lods
(bad)
retf
xor
dec
push
jl
fdiv
and
pop
xchg
sbb
clc
scas
push
cmp
sub
ss
cmp
adc
shl
fstp
add
cli
dec
sbb
or
sub
out
(bad)
sub
add
(bad)
pop
mov
cwde
movs
jmp
dec
shl
loop
xor
pop
sbb
gs
add
inc
jmp
or
cs
retf
adc
mov
sbb
fsub
push
push
lahf
neg
push
and
jg
inc
js
mov
ja
dec
cmp
push
(bad)
int
std
or
out
ret
pusha
adc
dec
add
and
jg
pop
setns
pop
test
cwde
(bad)
imul
xchg
div
repnz
xor
jo
jl
dec
adc
or
and
sub
mov
mov
adc
out
lahf
fisub
adc
pop
dec
(bad)
mov
mov
inc
or
aas
jnp
mov
mov
mov
cdq
in
cmps
lahf
in
mov
push
pop
shl
and
jne
xchg
fbld
push
adc
push
repz
fldcw
cmp
aaa
arpl
lods
xchg
in
jmp
fld
dec
sbb
popa
pop
and
cli
lods
call
sar
xor
pop
cmp
shl
push
sbb
popf
fld
les
mov
mov
fld
mov
bound
push
sbb
or
push
add
pop
pop
in
pushf
frstor
push
addps
repz
retf
lods
div
push
pop
inc
xor
inc
add
(bad)
mov
jl
js
inc
shl
add
adc
ins
cmp
loope
shl
mov
add
adc
dec
cmp
dec
inc
mov
sti
scas
sti
xchg
pop
test
cwde
cmps
jmp
retf
mov
add
das
imul
neg
das
inc
scas
ficomp
push
cmp
jecxz
les
adc
or
adc
adc
xchg
shl
push
or
and
adc
js
dec
add
clc
pop
or
inc
in
xchg
arpl
push
push
push
sub
push
xchg
mov
xchg
retf
add
jl
and
xor
dec
rsqrtps
and
hlt
pusha
inc
shl
mov
shl
and
sub
test
dec
cmp
dec
icebp
stos
cmps
rcr
xchg
mov
mov
xchg
cld
dec
mov
out
fidiv
stos
out
pop
adc
(bad)
xor
dec
pop
push
xor
mov
mov
jno
ficom
jo
inc
xor
stos
and
pop
sub
cdq
das
push
es
and
punpckhwd
mov
mov
or
xor
test
lea
adc
out
mov
pop
fild
adc
js
push
inc
repnz
stos
les
cld
(bad)
int3
xchg
fbld
imul
adc
xchg
or
mov
adc
aas
or
inc
or
imul
add
fnstenv
or
cmp
mov
call
push
jge
jnp
dec
add
pop
sahf
jp
push
ret
cld
(bad)
int3
xchg
fisub
or
inc
adc
data16
call
scas
cli
pop
xor
and
imul
xchg
out
mov
mov
or
test
in
jno
(bad)
(bad)
mov
pop
cmp
mov
and
adc
push
push
push
pop
inc
xor
daa
push
pop
pop
push
outs
xor
mov
fstp
xchg
in
neg
(bad)
pop
and
pop
adc
movs
aad
gs
inc
cmovnp
dec
mov
dec
cmps
icebp
mov
mov
sbb
sub
and
(bad)
icebp
inc
test
(bad)
test
mov
test
add
sub
dec
xor
call
and
xor
js
inc
sbb
test
cdq
scas
jecxz
les
js
std
test
mov
scas
fisttp
jmp
and
out
(bad)
mov
shl
xchg
cwde
jmp
(bad)
pop
and
dec
cmp
cs
push
cmp
ja
add
jno
pop
sub
inc
cmp
pop
or
dec
or
jo
push
add
push
adc
ins
sbb
jg
pop
and
inc
sub
outs
sub
push
sub
xor
inc
ss
push
outs
sbb
cmp
push
ins
add
inc
xor
dec
fistp
enter
repnz
mov
xchg
push
test
mov
test
mov
jecxz
xlat
movs
repnz
ficomp
(bad)
jl
ins
cmp
dec
add
ins
sub
imul
dec
(bad)
stos
ror
leave
popf
fstp
xlat
xchg
lds
jne
push
pop
jge
js
jnp
imul
cmp
jb
jecxz
ret
mov
cdq
in
mov
(bad)
movs
hlt
lahf
not
add
jae
popa
and
ja
inc
pop
data16
arpl
push
(bad)
push
gs
jne
and
data16
sub
bound
inc
adc
dec
sbb
mov
sbb
loope
jmp
mov
xchg
xchg
shl
jp
pop
sbb
addr16
pop
je
data16
aas
outs
sub
arpl
inc
adc
dec
sbb
push
pop
xor
ja
jne
pop
and
outs
cmp
dec
aas
push
adc
pop
and
fs
(bad)
cld
test
stos
fcom
clc
mov
and
cmp
test
xchg
call
xor
in
fst
call
mov
in
test
sahf
les
ficomp
ror
mov
jmp
mul
out
in
xchg
mov
stos
lods
jmp
xor
add
jo
pop
rcr
cmp
shr
cmp
daa
ja
and
aaa
jbe
imul
pushf
shr
ret
mov
movs
loope
shr
mov
adc
outs
sub
inc
push
jge
jbe
push
pop
push
and
pop
ins
sub
push
jl
popa
ss
pop
inc
pcmpeqw
jg
jl
ins
cmp
mov
int3
call
loope
ret
mov
sbb
loope
mov
icebp
mov
ficomp
leave
mov
cmp
imul
adc
push
imul
jns
outs
cmp
mov
test
mov
mov
fs
je
ins
sub
aaa
adc
outs
or
jns
push
and
dec
xor
push
cmp
jl
jle
inc
ds
arpl
push
daa
jo
pop
sub
dec
or
data16
ret
xchg
mov
fstp
retf
add
stos
jmp
call
jecxz
rcl
xchg
lds
inc
adc
pusha
sub
dec
pop
je
jg
hlt
mov
or
call
xchg
lds
retf
xor
add
aas
les
dec
sbb
mov
loopne
xchg
in
hlt
popf
jmp
mov
imul
and
sbb
sub
dec
and
jb
inc
push
dec
into
inc
sbb
jg
pop
mov
hlt
(bad)
mov
xchg
ret
dec
and
pop
jbe
ret
gs
icebp
call
pop
adc
sub
outs
sub
fst
out
scas
out
mov
and
aaa
inc
push
inc
or
addr16
inc
cmp
scas
(bad)
scas
mov
imul
add
xor
ins
(bad)
stos
retf
(bad)
fcom
cwde
fcomp
pop
push
add
in
(bad)
mov
push
adc
push
or
dec
into
mov
aaa
cmp
xchg
mov
jno
xor
xchg
std
movs
mov
xchg
(bad)
outs
ds
jmp
or
mov
jg
add
xor
popf
retf
adc
mov
push
ss
push
call
sti
std
stos
pop
xor
bound
mov
in
and
xchg
fcomp
shl
mov
lahf
enter
jns
sbb
inc
dec
jae
inc
and
setns
scas
(bad)
rol
jae
cmp
jnp
jl
inc
push
inc
add
or
inc
push
dec
and
push
add
dec
sub
jne
jle
pop
xor
inc
push
pop
or
push
push
ss
jecxz
icebp
mov
mov
ds
nop
movs
jecxz
xor
jmp
stos
in
mov
xchg
iret
inc
sub
sbb
inc
int
xchg
shr
add
test
gs
and
mov
sub
lods
mov
inc
adc
ins
lds
sti
scas
mov
jbe
sbb
jo
call
sahf
(bad)
jp
or
lahf
xchg
ret
dec
pop
hlt
pushf
mov
mov
xchg
adc
ins
mov
pop
add
stos
popf
fcomp
in
cwde
lock
ret
movs
(bad)
pop
cmp
fwait
arpl
call
inc
xchg
(bad)
dec
movs
hlt
cmp
fld
jnp
int3
or
out
pop
mov
sar
(bad)
jg
test
loope
dec
daa
cmps
lock
and
stc
in
dec
or
xchg
inc
sbb
cdq
retf
sbb
sbb
fwait
dec
adc
scas
int3
in
and
xor
cmp
inc
outs
cmp
push
adc
js
pop
test
jge
je
sbb
add
inc
push
or
test
stos
(bad)
rcl
jo
mov
scas
add
aaa
arpl
push
mov
pop
xor
sub
push
and
jo
(bad)
out
jecxz
std
fst
cs
daa
jb
cmp
outs
and
and
jp
ins
push
cmp
xor
pushf
rcl
mov
test
or
cmp
pusha
pop
sbb
test
xchg
les
fimul
lds
retf
popf
fist
rcl
sti
xchg
mov
out
imul
push
jae
push
adc
push
adc
jns
jno
ins
cmp
pop
or
imul
bound
inc
adc
retf
sbb
gs
inc
out
test
lahf
stos
ret
test
aad
sti
push
mov
fimul
repnz
xchg
sti
cwde
loopne
ins
mov
mov
xchg
mov
rcl
xchg
inc
push
dec
sbb
xchg
jne
sbb
pushf
fisttp
dec
xor
mov
push
dec
add
xchg
xlat
(bad)
fwait
neg
jl
xchg
out
(bad)
into
jae
sbb
cmps
mov
dec
add
adc
nop
mov
cli
movs
cdq
mov
(bad)
fmul
lods
(bad)
fcomp
and
inc
(bad)
fdiv
pushf
xchg
(bad)
out
mov
call
outs
(bad)
popf
ins
add
pop
and
sbb
scas
les
inc
fcomp
xchg
aam
fwait
jne
jle
sti
scas
nop
fdivr
mov
movs
icebp
pushf
test
or
add
inc
test
jne
fnstenv
jmp
xchg
adc
xchg
fist
xchg
sbb
push
or
mov
out
pop
adc
xchg
or
rcr
xor
aaa
int3
jno
popa
jo
or
stos
push
adc
ss
push
in
movs
loop
xchg
push
(bad)
shr
scas
out
push
or
fwait
jb
jb
adc
mov
sub
xlat
add
fild
sar
into
jle
cdq
std
xchg
dec
or
cmp
push
add
jns
sub
xchg
pop
add
mov
loope
inc
call
ror
cs
inc
or
int
fmul
or
fild
hlt
cmps
clc
test
jp
push
les
and
mov
sbb
sbb
jp
xchg
sub
dec
ror
jle
mov
aaa
std
cdq
stc
imul
push
and
or
stc
cmps
cmps
mov
sbb
inc
xor
cmc
xor
sub
js
imul
mov
ss
ds
adc
xchg
adc
dec
push
adc
call
mov
loop
push
fist
iret
adc
jl
outs
imul
inc
stos
lods
ins
and
ucomiss
mov
cmps
jmp
inc
(bad)
iret
gs
aad
push
(bad)
jmp
das
sub
push
in
rcr
add
iret
cwde
mov
or
sub
fst
xchg
mov
inc
repz
push
ror
(bad)
jbe
sbb
dec
pop
adc
xor
xchg
cmps
sub
mov
push
cwde
ret
fistp
pushf
in
mov
add
sub
idiv
aaa
pusha
or
sbb
inc
cdq
mov
div
jns
or
sbb
jp
add
es
sub
fsub
cmps
and
clc
mov
enter
dec
movs
sbb
loop
xchg
push
dec
sub
mov
pop
jl
jnp
xor
push
loope
mov
daa
sbb
int3
jnp
or
sub
jbe
fwait
mov
adc
or
(bad)
pop
test
pop
jmp
aam
cmps
icebp
inc
mov
inc
jecxz
push
fidiv
(bad)
mov
sar
cmp
xchg
aas
adc
mov
push
sbb
xchg
jg
inc
sbb
pop
mov
das
adc
add
sub
sub
pop
icebp
jmp
std
mov
jmp
ds
enter
mov
ja
xor
aas
ins
xor
bnd
push
push
mov
mov
pop
and
mov
cmc
pop
mov
inc
shr
jnp
mul
fcom
cmp
rol
int
out
(bad)
imul
(bad)
cmp
(bad)
or
mov
pop
xor
push
lahf
inc
sbb
add
xchg
inc
cs
or
ins
add
mov
sahf
int3
inc
retf
sbb
xchg
rcr
inc
adc
xor
cmp
lods
test
pop
mov
popa
fistp
dec
into
es
adc
mov
mov
loope
cwde
push
mov
imul
fdiv
jmp
arpl
cmps
dec
xchg
mov
and
call
je
call
jg
xor
jecxz
mov
(bad)
jg
mov
pushf
fwait
xchg
dec
mov
xchg
cmp
dec
scas
ins
sbb
cmp
cli
sub
aad
popf
inc
test
mov
and
mov
xor
or
pop
int3
and
cld
and
ss
ret
sub
retf
add
loopne
movs
xchg
(bad)
and
add
pop
mov
pop
mov
push
daa
add
dec
mov
mov
stos
ins
sbb
pop
test
inc
mov
enter
mov
fdivr
push
mov
mov
inc
mov
add
loope
mov
mov
inc
mov
xchg
push
mov
cs
or
inc
mov
sub
test
mov
add
inc
mov
cmp
or
add
pop
aad
cmp
adc
push
lods
les
jg
mov
adc
into
and
dec
(bad)
dec
and
mov
pop
or
pop
test
push
sar
or
das
cmp
add
mov
mov
xchg
jl
sub
aas
sbb
xor
imul
mov
mul
jmp
or
adc
or
xor
loopne
or
sub
jmp
test
mov
adc
xor
dec
stos
pusha
mov
mov
addr16
push
push
cmp
push
ins
(bad)
pop
shl
loope
mov
call
add
clc
mov
in
xchg
loop
loopne
mov
xor
std
mov
dec
cmp
or
push
das
scas
scas
(bad)
(bad)
out
fdivr
das
jbe
data16
loop
and
mov
into
jg
addr16
pop
dec
or
push
pop
bound
jp
adc
popa
loopne
out
sbb
jnp
inc
adc
xchg
div
fs
addr16
test
and
rcl
and
jmp
lods
movs
in
or
je
inc
test
sti
scas
jmp
mov
cmps
icebp
mov
xor
leave
call
mov
cmp
add
push
aas
mov
and
xchg
cmc
(bad)
loopne
and
ret
test
mov
stos
test
sbb
or
mov
cmp
jp
pop
push
push
aaa
arpl
jl
imul
cs
xor
adc
sub
das
outs
dec
shl
pop
pop
and
int3
fwait
dec
inc
xor
mov
imul
push
inc
out
cdq
lock
(bad)
fnstsw
or
jecxz
bnd
xchg
repz
push
mov
or
stos
out
mov
scas
stc
mov
ret
mov
mov
std
mov
loop
adc
mov
fwait
adc
ins
sbb
out
loopne
jb
cwde
pop
clc
mov
jp
xchg
mov
cmp
xor
and
addr16
inc
(bad)
es
add
cmp
push
add
push
xor
inc
add
dec
cmp
jb
push
add
bound
inc
add
js
pop
or
pop
cmp
dec
or
inc
xor
popf
push
clc
lea
fbld
jecxz
cmp
xor
inc
(bad)
mov
cmp
lea
pop
sub
inc
adc
inc
and
push
adc
pop
sub
pusha
sbb
jnp
jo
push
adc
mov
stc
scas
clc
popf
in
cdq
xlat
xchg
aas
dec
loope
push
adc
ret
mov
shr
hlt
xchg
shl
cwde
fstp
retf
mov
mov
stc
stos
outs
cmp
retf
mov
and
xor
add
pop
ins
pop
sub
pop
xchg
out
sahf
int
fistp
dec
cmp
pop
stc
mov
jmp
les
call
mov
rol
xchg
cli
cdq
jmp
mov
rcl
mov
sti
mov
xor
call
cs
loop
jp
ins
dec
les
mov
push
pop
cmp
fidivr
add
(bad)
inc
cli
fwait
int3
(bad)
in
(bad)
mov
mov
test
(bad)
in
out
pushf
enter
cmc
(bad)
xlat
test
xchg
shl
in
cwde
iret
mov
xlat
xchg
test
xchg
rol
mov
sahf
fidivr
in
(bad)
mov
mov
test
pop
mov
xchg
inc
sub
dec
sub
pop
div
call
std
mov
jbe
nop
call
add
dec
cmp
xor
outs
pop
test
dec
or
jb
push
add
push
xor
inc
add
dec
cmp
jo
push
add
pusha
adc
inc
xor
pop
or
pop
cmp
dec
or
inc
xor
js
pop
or
dec
repz
dec
jmp
stos
adc
outs
daa
cmp
add
(bad)
mov
mov
and
lods
rol
aad
cwde
in
ficomp
add
clc
mov
push
and
xchg
mov
clc
mov
stos
jmp
jecxz
ret
xchg
clc
nop
repz
(bad)
mov
fmul
fcomp
jecxz
jmp
retf
fwait
lock
sti
mov
jmp
sar
sar
imul
aad
and
call
shl
jl
(bad)
pop
test
dec
repz
aad
es
je
mov
mov
test
jmp
sbb
shl
aad
inc
or
dec
or
jb
push
add
push
xor
inc
add
dec
cmp
jo
push
add
pusha
adc
inc
xor
mov
ds
mov
mov
cmps
sub
cmp
push
pop
arpl
fs
inc
push
arpl
clc
aam
xor
or
xchg
cld
stc
mov
mov
mov
out
lahf
(bad)
in
mov
aam
inc
das
ins
dec
les
jae
mov
fmul
cmc
mov
mov
iret
lods
fisttp
int3
xchg
(bad)
movs
and
push
lds
sahf
mov
xchg
jg
fwait
jecxz
xchg
les
cmp
dec
aas
sub
sbb
popa
pop
sahf
stc
stc
cdq
retf
scas
sub
and
in
popf
cld
jmp
call
bound
mov
jl
test
mov
ds
aas
scas
scas
ret
daa
inc
or
jns
jp
push
js
dec
add
jb
pusha
and
aaa
mov
lahf
pop
shr
xchg
add
dec
xor
arpl
mov
sub
loop
loope
mov
mov
jbe
mov
icebp
cli
mov
shr
jb
mov
and
xor
in
in
dec
or
and
push
xor
mov
ins
dec
outs
adc
jb
mov
test
out
in
outs
sub
sbb
xchg
jmp
loopne
repnz
xor
loope
cld
stos
fidivr
xchg
mov
mov
es
and
scas
test
push
xchg
mov
jg
(bad)
(bad)
mov
mov
call
push
jge
sbb
js
jo
xchg
leave
fimul
and
push
cmp
scas
stc
mov
nop
xchg
loope
repz
adc
ret
nop
pop
mov
adc
mov
dec
repz
dec
cmp
xor
push
adc
pusha
gs
je
mov
xchg
(bad)
js
jnp
mov
mov
je
mov
test
xchg
(bad)
and
and
inc
xchg
or
fnstsw
loope
shl
xor
xor
xor
push
pop
dec
add
imul
push
cmp
jg
dec
subps
push
sub
jne
pop
adc
fs
sub
xchg
out
jg
jbe
or
inc
div
jnp
js
push
mov
jbe
data16
loop
and
loope
out
aaa
jl
push
jp
jnp
pushf
cmc
(bad)
nop
shl
mov
aam
fst
not
stos
xlat
cdq
loopne
sbb
je
push
and
jnp
push
pop
sbb
gs
imul
adc
js
dec
or
shl
xchg
mov
add
sti
xor
pushf
mov
iret
rcl
push
popf
mov
xchg
sub
dec
cmp
test
fdivr
arpl
jbe
cmovg
sbb
dec
jle
xor
jecxz
(bad)
xchg
iret
mov
mov
cdq
aam
rcr
std
movs
sbb
sbb
push
sub
pusha
adc
outs
sbb
push
ins
xor
pop
inc
sub
dec
add
cs
add
ja
or
aad
sub
popf
and
xor
push
jns
in
or
pop
dec
cmp
mov
retf
scas
ins
mov
mov
ret
imul
xchg
leave
mov
gs
lahf
rol
sbb
aaa
xchg
or
mov
mov
jae
dec
cmp
in
xchg
pushf
les
cmp
outs
dec
xor
inc
es
dec
or
mov
shr
imul
and
(bad)
loope
sbb
popa
pcmpeqd
mov
mov
adc
sbb
inc
xor
outs
adc
mov
in
retf
ss
out
repz
cdq
(bad)
int
and
pusha
pushf
jmp
iret
test
fdivr
bound
jb
push
xor
xor
int3
iret
mov
lods
jecxz
push
inc
sub
push
add
cmps
shl
jb
fwait
push
hlt
movs
out
idiv
push
dec
hlt
iret
cmps
lgdtd
sar
imul
mov
test
cmps
xchg
mov
mov
clc
mov
loope
clc
fst
retf
(bad)
mov
test
enter
call
ret
adc
xchg
std
mov
ficomp
push
cld
movs
into
xchg
int
test
cmps
arpl
call
call
imul
mov
push
cmp
mov
test
aas
push
ja
push
xor
push
das
ds
daa
push
iret
dec
das
pop
(bad)
addr16
push
inc
push
sub
dec
or
or
push
cmp
push
push
and
imul
add
push
add
cmp
and
sbb
ins
pop
sub
repnz
rcl
jge
xchg
sti
lock
(bad)
(bad)
add
or
ds
push
sub
cmp
push
lock
out
inc
icebp
mov
xor
dec
ss
mov
scas
sbb
gs
cmp
push
pop
js
dec
cmp
in
loopne
jmp
call
mov
loopne
mov
ins
xor
sub
bound
inc
adc
sbb
jge
mov
jp
test
rcl
int3
lods
pop
cld
cmp
dec
enter
outs
adc
push
inc
mov
xor
pop
cmp
ficomp
sub
mov
mov
not
(bad)
fld
fstp
out
mov
scas
rcl
cli
mov
lds
push
dec
xor
push
xor
adc
jae
lahf
sar
lock
add
fist
jae
adc
cmp
scas
fadd
push
and
inc
loope
mov
lea
mov
mov
push
inc
ins
mov
(bad)
(bad)
mov
mov
idiv
push
push
sub
dec
or
cli
mov
xchg
(bad)
cmps
leave
movs
xlat
mov
hlt
cmps
cmc
stos
hlt
stos
iret
cwde
in
call
mov
adc
dec
dec
imul
or
push
xor
jb
scas
sbb
inc
add
(bad)
xchg
jno
cmps
aad
into
xchg
in
int
iret
push
les
out
loop
int
shl
or
js
cmp
dec
lock
inc
adc
cmp
sub
inc
pop
push
xchg
mov
xor
jno
movs
add
stc
jl
ja
test
hlt
test
aam
sub
std
out
jo
cmp
mov
shr
js
jl
adc
inc
icebp
mov
push
jecxz
cli
pop
out
xor
outs
call
adc
jae
jmp
jns
inc
fcomp
dec
test
ret
popa
cs
dec
cmp
sbb
jg
mov
xor
aas
mov
jae
bound
sbb
mov
xchg
repz
sbb
push
pop
cmp
retf
mov
into
out
cdq
fidiv
mov
inc
xor
retf
mov
xchg
aaa
pop
cmp
jp
inc
iret
dec
pslld
adc
xchg
retf
cmps
test
add
scas
lods
xchg
aad
mov
ret
mov
stos
test
mov
(bad)
mov
shl
sbb
imul
popf
stc
(bad)
popa
sbb
adc
mov
(bad)
mov
xchg
and
mov
jle
sbb
fisttp
xchg
push
icebp
mov
call
mov
movs
xlat
mov
push
in
iret
pop
int
les
xchg
outs
out
(bad)
clc
jbe
mov
dec
hlt
mov
push
jmp
or
pop
or
rcpps
xor
sbb
mov
aad
stc
std
xchg
shl
cmps
int
cld
enter
xor
je
gs
dec
daa
mov
add
jp
cwde
test
ret
lds
pop
sub
jne
adc
mov
mov
movs
pop
mov
lock
stos
ret
mov
stos
retf
mov
mov
mov
loopne
retf
dec
(bad)
sbb
or
sbb
push
add
xchg
fistp
(bad)
xor
dec
cmp
sub
sbb
popf
test
lods
pop
ret
mov
shl
cmp
inc
and
fimul
retf
scas
das
sub
mov
aam
cmp
inc
icebp
test
jmp
int
sbb
iret
das
sub
mov
mov
pop
fnstcw
mov
iret
jbe
lods
jo
popa
bound
outs
shl
pop
and
jl
arpl
pusha
push
cdq
add
add
lock
push
pop
fisttp
pushf
pop
stc
mov
xchg
add
sub
es
and
arpl
and
movs
xor
mov
cmp
cmps
jecxz
in
cmp
sbb
dec
repz
inc
push
push
adc
pop
push
xchg
scas
fdivr
push
dec
and
inc
std
mov
jge
orps
xchg
cs
pop
les
pushf
daa
cs
fisttp
xchg
pop
lock
mov
pop
hlt
and
add
inc
inc
sbb
cdq
jmp
mov
rcl
ficomp
add
xlat
out
ja
jno
or
push
fwait
lods
(bad)
(bad)
bound
pusha
loope
lock
in
(bad)
stc
jl
xchg
push
jmp
mov
not
jmp
cmps
shl
adc
scas
sbb
imul
jo
addr16
dec
inc
inc
push
jg
cmp
pop
sbb
dec
and
jno
je
inc
sbb
inc
mov
ds
push
lahf
mov
mov
adc
pushf
mov
movs
push
leave
mov
(bad)
sar
mov
and
fwait
dec
inc
xor
mov
imul
push
inc
out
cdq
lock
(bad)
fnstsw
or
jecxz
bnd
mov
mov
test
sbb
push
dec
or
inc
xor
jnp
pop
or
imul
or
jno
push
add
pop
das
mov
and
sub
ss
xchg
test
(bad)
(bad)
ins
cmp
fstp
inc
sub
jno
ja
push
jns
popf
scas
std
fsin
fs
sub
xor
leave
outs
adc
jmp
in
jmp
cmp
sub
pusha
adc
pop
and
inc
sub
outs
sub
push
sub
xor
inc
xor
and
push
push
sub
pop
repz
rol
pop
sub
xchg
loopne
and
scas
jmp
in
pusha
xor
adc
inc
jmp
repz
mov
mov
std
cdq
call
sub
push
xor
mov
in
scas
syscall
inc
and
mov
mov
(bad)
mov
sar
or
mov
test
mov
lods
cld
xchg
call
xchg
movs
div
loopne
neg
enter
hlt
lahf
not
push
jle
inc
jmp
push
sbb
push
loop
loopne
imul
and
mov
adc
pop
inc
and
ins
sub
sti
mov
loope
jmp
enter
outs
adc
push
inc
and
add
retf
xchg
fisub
retf
stos
out
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
add
mov
mov
scas
pop
or
fadd
xchg
push
jmp
fwait
cmp
mov
dec
or
in
xchg
in
out
xchg
ret
movs
xor
or
out
sar
scas
aad
fbstp
call
mov
mov
jmp
fld
les
xlat
(bad)
fcomp
retf
pushf
fnsave
scas
aad
fbstp
call
mov
inc
popa
sub
jg
inc
pop
jns
mov
je
add
test
stos
movs
sub
or
fneni(8087
test
cmp
repz
lock
loopne
repnz
mov
stos
clc
mov
out
mov
ret
mov
stos
sti
nop
clc
fwait
call
inc
cmp
ss
popf
clc
test
jg
sub
xchg
jmp
out
movs
(bad)
mov
and
call
xor
add
or
pop
sbb
xor
arpl
jae
popa
and
imul
cmp
push
ja
push
adc
cmp
imul
scas
jmp
xor
aaa
jae
mov
test
mov
jecxz
mov
pop
ins
cmp
js
inc
cmp
cmp
and
div
lods
jmp
pop
aaa
push
daa
jae
pop
sub
dec
sbb
cmp
xor
popa
and
or
pop
cmp
pop
sbb
push
pop
inc
add
push
cmp
imul
push
cmp
inc
pop
push
adc
pop
pop
dec
or
pop
xor
popa
and
or
pop
push
xchg
scas
(bad)
fcomp
add
imul
mov
fstp
or
popa
jecxz
loope
inc
sub
call
pusha
inc
std
or
and
mov
mov
(bad)
in
lahf
retf
(bad)
leave
mov
ret
xchg
shl
fwait
int3
mov
aam
out
xchg
xchg
ret
test
mov
test
(bad)
retf
popf
fnstcw
xchg
les
fmul
(bad)
leave
mov
ret
xchg
shl
fwait
int3
mov
aam
out
xchg
xchg
ret
test
mov
test
(bad)
retf
popf
fnstcw
xchg
les
fmul
ds
and
repz
xor
ja
inc
dec
xchg
fild
stos
add
sbb
dec
mov
dec
xor
adc
add
cmps
cmp
std
jl
dec
cmp
jb
push
add
bound
inc
add
js
pop
or
pop
cmp
dec
or
inc
xor
jp
pop
or
push
dec
or
jo
push
add
push
xor
inc
add
dec
cmp
jb
push
add
bound
inc
add
js
pop
or
pop
cmp
dec
or
inc
xor
jp
pop
or
push
dec
or
out
dec
dec
repz
fcomp
inc
das
test
or
bound
loop
or
cmp
mov
scas
cs
inc
inc
addr16
movs
sbb
out
adc
mov
data16
cli
ret
mov
fcmove
jae
clc
icebp
xchg
fstp
retf
mov
xchg
out
loop
aam
fidiv
fistp
aad
mov
out
scas
jmp
mov
xchg
xlat
xchg
in
(bad)
mov
cdq
iret
mov
mov
rcl
mov
mov
mov
in
movs
(bad)
repz
cmp
mov
cli
gs
xor
mov
mov
push
daa
mov
sub
js
xor
mov
shl
in
int3
sti
popa
sbb
clc
xchg
adc
outs
sub
push
xor
inc
xchg
scas
fsubr
mov
pushf
lock
xchg
(bad)
mov
pop
sub
test
xchg
out
jl
jno
or
cmp
jge
cmps
lds
fbld
clc
popf
int3
mov
in
aad
frstor
int
jmp
cmps
loop
lock
les
in
pushf
fstp
into
cmps
lds
fbld
clc
popf
int3
mov
add
dec
sbb
mov
test
add
or
add
xchg
push
add
inc
push
retf
push
(bad)
(bad)
cdq
not
fs
mov
icebp
call
mov
jbe
lea
add
out
and
fldenv
pusha
mov
scas
inc
sbb
push
or
jmp
test
ror
mov
and
imul
jmp
in
pusha
rcr
nop
mov
xlat
adc
adc
fst
lock
jae
sub
mov
jle
xchg
shl
cmp
in
test
mov
cwde
hlt
mov
nop
xor
xchg
inc
fimul
mov
cs
sbb
repnz
xchg
xchg
inc
jae
retf
add
pop
imul
(bad)
mov
dec
cdq
lahf
lods
cmp
imul
retf
or
cli
or
out
sub
xor
cmp
(bad)
scas
inc
sar
jno
jl
fisub
scas
mov
(bad)
into
push
or
jp
mov
pop
imul
jae
sbb
retf
add
sub
xchg
mov
push
fsub
and
add
cmp
sub
xor
call
cmp
cmp
fcmove
(bad)
(bad)
es
inc
jg
out
(bad)
sahf
cmc
(bad)
sbb
mov
imul
jecxz
imul
mov
mov
dec
test
addr16
xchg
outs
mov
cmp
sub
xchg
lods
inc
mov
push
sub
jae
lods
jmp
cmp
mov
loope
je
xchg
pop
sbb
fnstsw
fisttp
(bad)
idiv
add
push
pushf
int3
mov
jmp
mov
ds
fwait
call
popf
push
rcl
cmp
xchg
mov
imul
or
shr
sti
xor
push
ror
cli
pop
retf
mov
aam
scas
aas
pop
jge
call
loop
int3
gs
ret
xlat
stos
(bad)
fst
cwde
out
out
pop
icebp
xor
push
inc
in
popa
push
push
je
fst
daa
add
jmp
sahf
es
fisttp
or
shr
adc
jno
hlt
lahf
out
or
jge
es
inc
sub
cdq
int
xor
sti
rol
popf
adc
ret
lahf
sub
pop
mov
xchg
or
mov
je
(bad)
mov
ret
jbe
xchg
push
pop
mov
mov
push
test
sub
xchg
inc
sahf
fidiv
jecxz
clc
cmp
movs
push
mov
test
inc
sbb
jb
push
cs
(bad)
and
mov
scas
leave
pop
push
mov
fs
xor
push
adc
add
outs
inc
pop
cmp
adc
push
push
jmp
mov
dec
push
(bad)
rol
lea
xchg
and
jnp
push
inc
repnz
or
sar
xchg
aas
inc
mov
cwde
add
sub
mov
sahf
push
push
test
xchg
es
xchg
loope
sbb
ficomp
popa
retf
mov
nop
xor
sti
fwait
adc
mov
rol
inc
mov
sub
ins
mov
cmp
inc
or
sub
mov
xlat
and
loope
ja
mov
pop
fwait
popf
icebp
arpl
adc
test
mov
pop
push
addr16
push
dec
sbb
sbb
xor
dec
aaa
add
leave
sub
ins
lods
loop
aam
cld
xor
xchg
inc
inc
xchg
sbb
movs
xchg
(bad)
gs
inc
push
and
and
adc
adc
or
cmps
jno
inc
cs
mov
jge
push
sbb
adc
or
dec
fwait
bnd
loope
pusha
dec
loope
inc
leave
stc
popw
(bad)
fst
xchg
and
pusha
rcl
pushf
inc
adc
jo
loop
mov
(bad)
retf
jle
stos
mov
jecxz
push
cmp
hlt
ins
inc
aam
out
jbe
repz
aam
fsubp
data16
stos
xchg
cmp
xor
rol
aad
xchg
sub
popa
test
push
push
scas
call
dec
cmp
div
sub
xchg
sbb
in
das
int3
push
xor
ins
push
leave
pop
cmps
inc
mov
lods
leave
loopne
cli
iret
add
adc
lock
imul
jle
and
pop
daa
retf
inc
mov
add
ss
xchg
adc
sub
mov
ror
jbe
sti
pop
shl
sbb
or
mov
mov
mov
ins
jle
sti
add
movs
das
push
cmp
in
mov
movs
add
and
fild
mov
fsubr
loope
jbe
xchg
mov
or
pushf
cmp
and
call
push
xor
in
jmp
ret
add
add
mov
loope
dec
pop
stc
sub
inc
ficom
sub
ret
std
cld
cmp
cmp
ror
shr
add
daa
mov
mov
mov
addr16
pop
setno
sbb
jl
ins
movs
lds
sbb
rcr
push
mov
add
stc
scas
sbb
xchg
sbb
add
(bad)
(bad)
hlt
fdiv
push
pop
stos
iret
or
add
xor
adc
add
stc
mov
push
adc
adc
lea
add
test
retf
cmp
fdiv
sti
jmp
pop
ss
jae
push
or
dec
sub
lock
mov
sub
(bad)
mov
sbb
mov
and
mov
sbb
les
or
aad
stc
xor
dec
jne
push
sub
sbb
lods
(bad)
sub
mov
aas
aad
or
enter
aad
jmp
das
or
push
push
xor
mov
jp
dec
sahf
sub
pop
push
xor
adc
xchg
push
mov
cs
bound
mov
xchg
hlt
pusha
pop
aad
xor
movs
cmc
lahf
xor
(bad)
fistp
icebp
xchg
call
mov
fsub
aas
xchg
cmp
nop
xor
addr16
cmp
xchg
dec
inc
dec
fisub
xchg
cmp
add
mov
data16
mov
mov
call
outs
mov
jb
pop
mov
call
loopne
lahf
stos
push
cli
dec
jmp
clc
call
test
js
clc
rcl
sub
sbb
pop
push
arpl
and
and
out
or
push
scas
jecxz
or
cmps
pop
scas
add
inc
jno
(bad)
jbe
ficom
mov
jmp
sub
push
dec
ins
arpl
aas
xlat
stos
mov
jl
stc
push
retf
stos
adc
push
inc
stos
(bad)
cmps
std
jg
loope
add
sahf
repz
jno
jle
movs
mov
inc
jl
icebp
sar
nop
and
and
scas
dec
ret
pop
(bad)
cmp
rcl
out
test
pop
sbb
push
ret
pop
jb
ret
std
xchg
lock
js
xchg
ror
and
add
aad
in
lds
aaa
add
xor
mov
scas
std
shr
sbb
push
add
and
add
jnp
cmps
and
loop
and
sar
cmp
push
mov
rcr
fdiv
(bad)
scas
jmp
mov
lds
rol
sub
xchg
xor
(bad)
jmp
push
inc
shl
pop
inc
out
mov
mov
fwait
pop
scas
jl
xor
shl
mov
sbb
out
fstp
mov
cmps
jmp
jo
mov
and
sub
mov
movs
fwait
jecxz
cwde
js
and
mov
mov
mov
cli
mov
loop
fs
mov
adc
inc
xor
mov
cmps
xor
(bad)
mov
pop
or
ror
addr16
fwait
mov
icebp
sub
cmp
sahf
cmp
cmp
outs
mov
into
mov
push
xchg
add
pop
cmp
and
jmp
ds
mov
pop
and
call
test
xor
xchg
inc
call
out
es
stos
jge
xor
mov
daa
dec
xchg
jb
sti
jo
repz
xchg
or
test
pop
mov
mov
das
ret
icebp
(bad)
mov
sub
stos
pop
data16
fdiv
popa
xor
xchg
cmp
mov
jle
fbld
pop
into
sbb
ror
fwait
je
push
aam
idiv
xor
hlt
dec
sbb
scas
cmp
cmp
icebp
rcr
xchg
xor
sbb
xchg
fwait
pop
add
daa
adc
mov
aas
clc
nop
pop
dec
sti
mov
adc
mov
mov
and
(bad)
loope
mov
cmps
dec
pop
nop
mov
mov
lahf
retw
cmp
retf
lods
test
and
inc
pop
jmp
mov
or
add
mov
jmp
enter
add
ror
cmps
push
out
dec
xor
mov
lock
inc
outs
mov
scas
push
scas
jb
mov
ins
cmp
into
out
ins
or
and
out
cmp
adc
es
out
int
jl
mov
adc
sbb
nop
ja
repnz
xor
stos
sub
das
loopne
push
pop
cmps
and
mov
inc
iret
cdq
lods
or
repnz
repz
push
push
cmp
retf
adc
jp
inc
cld
add
dec
aaa
int3
into
punpckhdq
(bad)
retf
and
jb
std
repnz
dec
cld
jbe
loop
fidiv
or
mov
test
bswap
cwde
push
xor
mov
pop
cmp
out
dec
dec
mov
jecxz
or
test
scas
(bad)
adc
sahf
outs
sub
cli
mov
sbb
mov
sub
mov
inc
(bad)
pop
jno
jne
mov
mov
gs
(bad)
shl
test
push
jne
jmp
sub
xor
movs
sub
mov
jecxz
daa
hlt
sub
jae
or
mov
mov
jmp
xchg
mov
loopne
sar
adc
retf
mov
cmps
push
ds
pushf
fs
mov
or
pop
mov
mov
(bad)
pop
pop
pop
ja
push
or
movs
jg
push
cmp
cli
jmp
mov
lods
pop
nop
dec
addr16
sbb
pop
cmp
push
sbb
inc
aaa
outs
jnp
add
test
inc
mov
imul
sub
xor
movs
push
add
adc
call
and
jne
out
cmc
stos
pop
cmp
inc
dec
stc
out
test
mov
nop
push
in
lea
jmp
cmp
sub
js
push
test
push
test
frstor
jae
and
xchg
imul
pushf
int3
test
and
sbb
mov
cdq
imul
stos
cmc
adc
cmp
push
mov
or
les
call
sbb
stos
pop
jb
push
dec
mov
call
mov
xor
pop
inc
mov
push
test
out
in
pop
cld
test
outs
sub
into
dec
and
mov
lds
int
pop
mov
ror
ret
retf
rol
data16
dec
push
sti
arpl
arpl
mov
mov
xchg
(bad)
pop
mov
mov
mov
xor
clc
pop
pop
sub
cmp
push
xor
mov
iret
pop
gs
jmp
and
xchg
dec
xor
push
mov
xchg
adc
pushf
or
push
bound
mov
inc
loopne
dec
rcr
adc
xchg
(bad)
jp
stos
iret
jge
popa
int
cli
cmps
pop
jnp
adc
and
push
pop
xchg
loopne
dec
and
jle
(bad)
mov
lea
iret
xor
sbb
sbb
or
bound
pop
jecxz
rcl
adc
inc
shl
pop
mov
xor
or
sbb
rcl
outs
test
dec
fld
xchg
cmps
jne
mov
retf
or
sbb
ret
addr16
xor
push
jnp
adc
inc
sub
(bad)
mov
pop
jge
mov
fnstenv
xchg
xor
(bad)
jnp
mov
cmp
sub
inc
mov
push
mov
and
adc
mov
cdq
sbb
les
in
inc
mov
sbb
xor
add
xchg
(bad)
cmp
xchg
stos
xchg
bound
fistp
sub
dec
jo
inc
je
dec
aas
push
and
ins
outs
pop
adc
mov
sbb
(bad)
aam
cmp
les
inc
sub
fnstcw
cwde
jae
cmps
adc
mov
mov
dec
dec
cmc
lock
add
lods
ds
retf
add
xchg
test
js
fidiv
or
stos
xchg
dec
test
shl
add
ret
daa
mov
stc
mov
xor
or
or
aam
movs
pop
call
mov
shl
mov
push
sbb
or
arpl
jno
stos
or
fisubr
or
sub
or
jo
bound
dec
ror
pop
mov
mov
dec
pop
dec
jnp
popf
cdq
add
movs
add
jp
pushaw
pushf
mov
mov
aad
push
enter
(bad)
adc
adc
pop
pushf
adc
mov
ffree
push
in
push
xor
xor
ret
(bad)
and
iret
ins
repnz
inc
adc
leave
outs
ins
not
mov
rcl
add
arpl
jns
dec
cli
cwde
pop
nop
out
psubusw
in
push
xor
push
and
fwait
ret
mov
inc
fild
jnp
fscale
cmp
sub
fimul
and
mov
movs
loop
pop
ins
(bad)
jge
fs
cmp
xor
stc
ins
cmp
loop
pop
push
jp
inc
fimul
sub
or
sbb
jecxz
xchg
jbe
jmp
test
mov
mov
or
mov
jo
mov
or
xor
pop
mov
pop
lahf
inc
add
jno
or
adc
xor
xchg
clc
mov
jecxz
jne
in
arpl
sub
adc
mov
clc
pop
mov
inc
mov
mov
das
fisub
aas
fucomp
mov
repnz
mov
sbb
mov
call
sub
das
lods
push
jge
xor
fcom
in
xor
mov
pop
pop
sbb
test
mov
jnp
push
mov
sub
jl
xchg
in
push
retf
je
repnz
xor
loope
icebp
inc
xor
fild
(bad)
pop
pop
dec
add
xchg
(bad)
rcr
fidivr
test
imul
xlat
into
lock
push
mov
cdq
addr16
xchg
lahf
fdivr
mov
pop
mov
aaa
stc
sub
xor
ins
loop
test
pop
imul
add
mov
outs
jge
mov
or
inc
movs
sub
pop
fistp
mov
push
jbe
inc
pop
mov
hlt
std
xchg
push
test
and
xor
enter
test
cld
sbb
repz
sbb
leave
leave
ret
cmp
cmps
push
sbb
fistp
repnz
pop
ror
xchg
loopne
mov
lods
shl
or
mov
and
dec
test
mov
mov
cdq
(bad)
dec
xchg
push
clc
fcom
loope
adc
push
aaa
bound
popa
push
lds
ins
dec
mov
cmp
sub
retf
rcl
clc
inc
sbb
idiv
adc
mov
xchg
nop
fcom
cmp
push
pop
push
scas
jl
stos
mov
cmp
ficomp
add
mov
data16
shr
and
in
sbb
mov
out
(bad)
cs
lods
in
pop
pusha
pop
add
movs
push
mov
div
push
jmp
das
push
lds
imul
retf
xchg
mov
popf
enter
clc
not
sti
sub
push
mov
not
mov
ss
adc
test
scas
and
hlt
sub
push
pop
ret
repz
cmps
sub
sbb
pop
dec
dec
cwde
jb
cmp
push
lods
adc
in
shl
sbb
jne
shl
outs
movs
mov
mov
sbb
jl
and
rcl
fsubr
push
xor
xchg
test
enter
pop
hlt
mov
dec
pop
cdq
jg
dec
sbb
and
in
sbb
sub
cmps
into
push
enter
mov
repz
test
jno
in
sbb
push
xchg
cmp
mov
mov
(bad)
fwait
adc
adc
dec
dec
call
and
sti
rol
push
mov
(bad)
push
jb
shl
mov
mov
xchg
push
cmp
stos
aaa
add
dec
adc
push
loopne
dec
or
and
fisubr
neg
sbb
sar
lods
mov
jb
arpl
inc
mov
mov
mov
imul
ret
popa
sbb
mov
pop
mov
pushf
je
pop
xchg
daa
pop
dec
xlat
jp
les
dec
sub
inc
xchg
sub
pop
or
inc
sti
in
(bad)
(bad)
popf
sub
stos
sub
jmp
jne
cmps
out
cld
sub
pop
jmp
cld
mov
pop
sar
retf
cmp
push
pop
adc
in
xchg
jmp
and
repz
inc
scas
scas
and
adc
bound
mov
rol
es
adc
xor
or
jl
int3
and
sbb
data16
or
mov
fwait
mov
cli
dec
and
ret
out
mov
in
push
ss
mov
mov
daa
loope
mov
div
adc
xor
in
int3
add
mov
(bad)
jmp
xchg
cmps
pop
sbb
sub
cdq
mov
rcl
cmc
cmps
sub
pushf
jns
out
sub
fldcw
fwait
(bad)
out
pop
jecxz
lods
imul
inc
push
mov
inc
shl
int
sub
pop
sub
std
in
sbb
mov
ret
nop
push
xor
push
cmp
mov
xor
popf
or
adc
(bad)
fst
aad
or
jnp
sbb
and
jne
js
inc
mov
shl
jbe
rcr
xor
cli
mov
call
adc
adc
push
sar
jae
adc
pop
ss
out
xchg
out
mov
or
mov
stos
icebp
mov
push
jl
(bad)
fst
inc
inc
ja
jb
mov
jbe
cmps
cmp
adc
xchg
jo
xchg
cmp
retf
movs
ss
push
xchg
fwait
mov
fwait
jmp
loope
out
jns
cmp
xchg
adc
xor
aam
movs
out
mov
sub
dec
repnz
cmp
push
loope
shr
mov
adc
pop
xchg
cs
jb
sbb
imul
aas
cmp
test
outs
ffree
sahf
sbb
jmp
shl
loopne
cs
pop
adc
mov
jae
inc
pop
in
shl
cli
stos
mov
jle
fs
mov
cdq
pop
jns
adc
movs
(bad)
sbb
cdq
leave
inc
jnp
enter
lock
ror
aas
dec
es
(bad)
cmp
push
mov
add
jno
add
cmc
cs
sar
mov
shl
icebp
sub
int3
xor
sub
bnd
dec
stos
jo
es
(bad)
je
arpl
cmc
push
cmps
jno
xchg
xchg
pop
mov
ret
inc
int
jmp
inc
movs
mov
retf
dec
fnstsw
inc
mov
push
jl
jns
pushf
popa
rol
ret
xor
dec
fisttp
ror
cmp
cmp
push
jae
pop
mov
and
xor
cmps
lahf
xchg
jne
sub
pop
stos
push
jno
or
sub
jmp
leave
dec
(bad)
pop
aad
push
cmc
xor
scas
push
pop
adc
pop
mov
jne
jmp
or
sub
lock
nop
pushf
outs
xchg
jp
sub
mov
mov
add
and
cs
xchg
xchg
cmp
push
(bad)
push
adc
sub
call
cmp
cmc
and
ds
cmp
jl
cmp
ins
mov
ds
shl
xchg
je
xor
push
mov
xor
scas
fistp
cdq
xchg
jle
sub
inc
fsubr
je
inc
stos
jno
add
xor
icebp
cmp
icebp
xor
push
xchg
ficom
pop
push
aas
push
add
mov
or
cmp
cs
push
test
xchg
jl
inc
xlat
ins
fisttp
repz
pop
dec
fcomp
xchg
xchg
mov
xchg
imul
daa
inc
repz
xchg
jp
or
int
leave
sub
xor
adc
out
inc
shr
inc
mov
dec
mov
cmp
into
xor
pop
retf
aas
adc
cwde
mov
jg
mov
xor
es
fcomp
cmp
sbb
sti
dec
mov
js
add
add
cli
cmp
pop
fsubr
in
push
jmp
stc
push
mov
arpl
sbb
jg
ja
push
retf
xor
jmp
rcr
pop
or
xor
and
and
iret
cmps
xchg
jno
popf
jl
and
and
pop
cmps
jnp
call
xor
not
pop
xlat
sub
and
daa
ret
cwde
jge
fwait
nop
jp
xchg
jne
inc
lods
data16
xlat
cmp
xor
or
call
es
jb
jns
add
dec
mov
cmps
mov
shl
adc
xor
test
lahf
in
in
xor
push
retf
add
sub
xor
test
cmp
ins
mov
xchg
je
mov
scas
les
movs
or
cmp
test
rcr
test
lar
es
pop
cli
or
ficom
sbb
pop
mov
sahf
xchg
push
pop
enter
scas
push
iret
cmp
mov
push
mov
dec
loopne
retf
pop
and
xor
pop
mov
imul
test
xchg
jle
dec
fisttp
lds
sbb
sbb
push
in
and
leave
add
add
cmp
jecxz
not
adc
xor
movs
push
push
cmps
test
lea
or
xor
push
int
in
je
push
xor
xchg
popf
popa
test
inc
test
call
adc
cld
aas
xadd
inc
movs
mov
jne
cmp
sub
fadd
loope
mov
mov
or
and
xor
sbb
sub
or
imul
loop
fisttp
or
pop
sbb
jecxz
cmp
sar
lea
pop
in
fistp
sbb
pop
fidiv
adc
in
sub
dec
mov
popf
cwde
sti
inc
aad
loop
sbb
mov
lods
mov
add
je
sub
and
or
jbe
jo
add
push
mov
(bad)
lahf
cwde
dec
(bad)
dec
scas
inc
mov
rcr
mov
mov
pusha
fcomp
mov
or
mov
xchg
mov
adc
call
cmp
pop
jecxz
cmp
pop
xchg
inc
scas
imul
leave
push
adc
out
cmp
xchg
(bad)
call
pop
fnstenv
and
xchg
or
es
sub
js
xor
cmc
ds
sbb
push
les
sbb
imul
(bad)
mov
add
inc
enter
pop
pop
push
lds
or
fisub
jmp
mov
ins
test
scas
bound
jmp
dec
and
mov
iret
dec
test
mov
xor
jecxz
lock
mov
ror
in
jns
pop
sar
mov
fdiv
push
scas
cld
jg
pop
adc
push
mov
stos
scas
pushf
inc
sar
sbb
(bad)
das
out
test
js
push
leave
sub
cmp
adc
inc
mov
aad
inc
icebp
or
xchg
jne
dec
mov
push
shl
out
loopne
pop
xchg
inc
mov
sahf
ins
mov
fldcw
adc
mov
jo
mov
sbb
jmp
nop
lea
pushf
arpl
ds
sbb
and
imul
int
fbld
pop
ret
jo
push
lock
cld
jbe
jne
bound
xor
or
push
pop
push
xor
ss
or
jge
or
sub
jbe
fs
repz
shl
dec
ret
push
push
adc
add
adc
sbb
sub
lock
mov
retf
jne
pop
xlat
push
fstp
mov
xchg
mov
inc
sbb
adc
cmp
daa
aaa
cmp
jl
push
rol
add
add
cmp
das
pop
ror
not
mov
sbb
pop
out
ror
mov
jnp
mov
or
pop
cdq
mov
pusha
fmul
arpl
xchg
jo
sub
out
shl
call
ins
scas
jb
sahf
jns
cmp
das
add
dec
test
mov
outs
movs
test
jae
jo
sub
add
sub
or
pop
xchg
mov
call
ss
in
cli
and
cmp
push
xlat
add
add
ds
mov
les
cmc
pop
scas
inc
mov
paddsb
out
push
cmp
adc
mov
(bad)
xchg
imul
mov
popa
aam
movs
xchg
push
jge
jae
mov
stos
bound
neg
cmp
jno
sub
and
pop
fsubr
add
add
sub
(bad)
pop
and
push
mov
cmps
xchg
rcr
cmp
int
cli
pop
adc
call
not
push
ss
pop
xchg
dec
lods
mov
js
jo
test
ficom
in
or
cmp
shr
inc
xchg
cwde
dec
(bad)
xchg
ficom
xchg
dec
xlat
sub
xor
pop
mov
gs
push
mov
xchg
out
mov
sbb
cmp
or
cmp
int
int3
adc
in
lock
pop
adc
jns
jnp
xchg
mov
loopne
adc
pop
lds
imul
imul
mov
sub
and
in
mov
dec
mov
mov
xchg
jp
jae
call
pusha
fbstp
inc
test
cmp
enter
mov
data16
pop
cmp
scas
xchg
popf
ins
test
jmp
xchg
ins
mov
mov
popa
fistp
mov
mov
push
mov
les
pop
mov
jle
xor
stos
mov
jle
jnp
or
cmc
push
mov
or
or
pop
enter
push
fbstp
es
cmp
pop
mov
dec
sub
(bad)
adc
fwait
jnp
dec
xlat
inc
mov
dec
mov
xchg
jae
push
enter
jl
push
mov
adc
cmp
and
ror
jecxz
xchg
jae
cmp
pop
fadd
adc
into
mov
shl
hlt
pop
or
sub
ret
je
jg
xor
test
mov
sahf
push
(bad)
add
pop
mov
add
jo
addr16
jle
ds
call
lods
push
fisttp
cmp
rcr
lea
popa
(bad)
adc
ficomp
cmp
cmp
sub
out
sti
pop
(bad)
xor
pop
mul
push
sbb
xor
pop
fstp
out
xor
sbb
xor
push
test
mov
outs
fmul
test
jle
add
sub
and
das
adc
(bad)
pop
mov
add
adc
sub
and
mov
push
and
sti
and
in
sbb
ret
push
popa
lea
dec
xchg
test
add
lds
fmul
gs
stos
pusha
cmp
out
jmp
call
mov
into
sub
inc
mov
mov
mov
or
sub
and
movs
dec
or
mov
adc
frstor
jae
cmp
ins
scas
jmp
push
sbb
aam
pop
fnstsw
sub
dec
mov
cmp
push
sub
push
ja
and
fild
imul
rol
hlt
mov
adc
xchg
add
inc
mov
xor
jo
loopne
push
test
sub
loopne
sbb
mov
scas
(bad)
pop
or
xchg
int
popa
scas
int3
xor
xchg
xchg
es
xchg
add
aam
and
push
inc
cmps
jmp
lods
stc
push
adc
inc
test
test
mov
pushf
cdq
fdivr
jae
icebp
inc
das
pause
aad
(bad)
data16
mov
pop
sbb
cdq
xchg
into
jle
ds
fimul
inc
sbb
mov
cmp
mov
mov
add
sub
mov
das
ja
mov
push
inc
in
mov
and
ret
xor
jns
xchg
mov
dec
push
sbb
shufps
mov
es
mov
daa
dec
(bad)
movs
jns
push
dec
test
dec
pop
inc
cmp
imul
stos
jns
iret
mov
rol
and
pop
cli
test
scas
fisubr
add
retf
mov
cmps
test
sbb
mov
movs
repnz
inc
xor
int
push
push
je
pop
(bad)
cli
mov
hlt
push
xor
fs
xor
nop
addr16
dec
cmp
pop
xchg
sub
ror
pop
cli
lahf
inc
aaa
or
mov
mov
rol
jns
sahf
pushf
hlt
add
xrelease
mul
jmp
neg
(bad)
pop
mov
xchg
out
sub
dec
mov
push
xor
jg
mov
sbb
mov
loopne
push
dec
ds
xchg
dec
sub
xchg
jno
cmp
std
and
lods
addr16
sar
jle
das
push
in
mov
mov
jne
into
mov
shr
and
icebp
and
repnz
into
or
dec
mov
movs
fimul
test
cmp
sahf
imul
mov
inc
add
cmp
fnstenv
pusha
mov
popf
out
das
imul
jg
mov
xacquire
rol
in
xchg
inc
adc
test
xlat
dec
outs
or
cmps
cdq
cld
and
or
(bad)
xor
mov
mov
outs
adc
inc
scas
clc
xor
cmp
retf
cmp
mov
(bad)
mov
rol
add
sbb
test
dec
cmp
xchg
inc
add
xchg
jnp
in
test
mov
cli
test
xor
push
pop
arpl
mov
pop
add
cmps
xchg
out
pop
mov
inc
adc
cmps
arpl
and
mov
addr16
mov
add
aas
inc
adc
outs
fidivr
pop
sub
xor
mov
xchg
dec
cmp
pop
mov
inc
test
pop
sbb
adc
xor
inc
sar
jo
repz
cdq
data16
jp
mov
fild
lods
cld
add
xchg
inc
aaa
out
xchg
jle
or
push
pop
fsubr
jp
(bad)
mov
jge
loop
xchg
cmp
ror
xor
loop
dec
test
and
cmps
jo
jmp
add
das
sbb
xchg
(bad)
xor
(bad)
sub
xchg
outs
neg
repnz
jno
(bad)
xchg
jae
adc
sub
sub
aas
push
mov
push
add
bound
scas
fistp
test
fwait
test
outs
add
and
repz
outs
cmps
jecxz
bound
iret
das
js
icebp
and
fsubr
aas
pop
fmul
stos
repnz
add
xchg
xor
sbb
and
sahf
fisttp
test
outs
sub
pop
stos
sti
cmp
mov
rcl
movs
into
dec
cs
sub
cmps
pushf
fdivr
test
push
add
sahf
pushf
retf
pop
sbb
sub
js
xchg
xchg
shl
in
inc
sbb
push
add
mov
out
nop
fmul
call
cmp
mov
cmp
jp
cdq
ja
rcl
mov
inc
sbb
test
test
or
mov
(bad)
xchg
(bad)
fcom
jns
lods
(bad)
mov
and
jb
in
mov
mov
iret
cwde
dec
and
or
jp
mov
mov
into
adc
out
jl
jmp
into
or
dec
sbb
(bad)
lahf
(bad)
pop
add
cmp
cdq
xchg
(bad)
sub
lahf
bound
push
dec
mov
mov
es
or
ins
imul
add
sub
mov
daa
or
lock
push
dec
add
push
adc
scas
js
into
cdq
jge
pop
push
call
add
mov
pusha
and
call
popf
fldenv
jno
lock
lahf
mov
sub
fdiv
bound
sbb
mov
rcl
retf
pop
or
lods
nop
fcom
retf
mov
push
pop
ficom
es
in
mov
adc
add
sub
cs
pop
rcr
sbb
dec
or
rol
cmp
xor
pop
int3
mov
or
mov
or
pop
jge
call
popa
retf
ror
dec
nop
aam
add
or
push
or
xor
leave
popf
dec
or
lods
dec
adc
stc
test
sbb
stos
mov
out
dec
mov
cmp
test
cld
mov
sbb
inc
add
inc
rol
jecxz
xchg
ficomp
neg
loop
mov
gs
sbb
cmps
mov
dec
sbb
dec
mov
sub
fbld
and
std
jnp
sub
jno
mul
cmp
mov
scas
int3
and
cmps
or
xor
int
mov
popf
retf
inc
adc
pop
or
ret
mov
mov
jmp
jbe
rol
frstor
(bad)
iret
and
jae
sahf
in
mov
dec
adc
xor
rcr
out
xchg
and
fsubr
jns
call
dec
xor
aam
imul
sub
pop
pop
mov
xchg
cdq
jmp
addr16
dec
mov
popa
adc
cmps
jl
ret
and
sbb
and
clc
mov
retf
cwde
jg
sbb
mov
(bad)
addr16
cdq
jne
icebp
cdq
push
pop
stc
or
call
cmps
shl
push
mov
sub
mov
outs
sub
xchg
inc
cmp
loope
xchg
neg
js
pop
jmp
adc
ins
int
scas
int
sbb
cmps
xchg
fidiv
inc
enter
xor
mov
sub
xor
cmps
mov
and
ja
mov
inc
pop
jne
jp
repz
mov
popa
sti
mov
jecxz
push
call
xchg
dec
add
jno
mov
loop
enter
sbb
pop
mov
push
adc
sbb
jmp
cwde
mov
das
inc
or
cdq
int
ds
mov
mov
mov
pop
or
xchg
loope
jmp
inc
aad
fs
scas
inc
or
iret
mov
cwde
pusha
aaa
sbb
sub
ror
rol
mov
jecxz
js
out
(bad)
out
push
enter
es
retf
push
ss
fs
and
push
mov
cwde
jge
inc
pop
push
dec
stos
out
dec
sub
add
mov
rcl
sbb
std
stos
cmp
aas
push
(bad)
movs
imul
push
push
inc
or
mov
mov
dec
and
lods
inc
pop
out
je
pop
xor
push
adc
inc
test
add
adc
inc
fmul
fistp
test
sub
stc
sub
nop
fldenv
mov
pusha
or
mov
fild
adc
inc
movs
in
xchg
mov
cmc
push
adc
dec
mov
pop
xor
jno
xchg
dec
pop
out
mov
repz
fisttp
mov
and
push
lods
imul
cmp
fld
js
jmp
pop
ret
(bad)
jg
leave
call
sti
mov
push
push
ins
out
xchg
cli
push
and
pop
enter
je
pop
push
mov
push
fsubr
in
imul
imul
(bad)
mov
sub
iret
mov
pop
cs
sbb
jl
dec
sbb
mov
xchg
popa
pop
shr
(bad)
mov
int3
cmovle
mov
int3
mov
(bad)
push
cmp
mov
shr
fnstcw
cmp
push
das
push
inc
sar
iret
mov
sbb
fnstsw
cmp
xchg
and
mov
fldenv
push
lods
jmp
mov
hlt
push
add
mov
pushf
(bad)
pop
aad
xchg
xlat
or
mov
xlat
jle
hlt
mov
lods
xchg
repz
and
test
adc
sahf
dec
cmovae
sbb
mov
pushf
jmp
aas
pop
mov
lods
test
(bad)
xor
jnp
ret
mov
pop
and
mov
jnp
pop
inc
shl
hlt
gs
xchg
dec
js
mov
adc
outs
cmp
xchg
adc
cmp
mul
bound
cwde
sahf
in
xor
mov
mov
imul
mov
sbb
jae
scas
cdq
jecxz
jnp
out
ss
push
(bad)
sahf
bound
push
ins
stos
in
mov
inc
aas
cmp
sahf
lahf
cli
pop
sub
scas
js
dec
sahf
into
dec
and
xchg
in
call
inc
and
pop
mov
(bad)
popf
aam
and
cmp
imul
xchg
jl
cld
mov
push
push
fiadd
inc
cmps
fcom
sbb
les
inc
mov
add
popf
jg
loope
jno
call
xchg
adc
clc
add
stos
fcom
(bad)
mov
adc
test
lds
dec
(bad)
cli
inc
add
jp
scas
pusha
and
imul
dec
mov
xchg
int
cmp
adc
imul
inc
pop
cmc
sahf
push
repz
add
ins
mov
scas
jb
sti
lods
lahf
div
fs
xor
pop
xor
xchg
mov
inc
mov
xchg
cmp
mov
and
push
fnstsw
push
scas
int
jno
loope
inc
into
xchg
push
das
lds
mov
dec
add
mov
clc
push
repnz
(bad)
retf
sub
jp
mov
cs
lods
xchg
cld
cmp
xor
mov
repz
mov
xor
inc
cmps
jecxz
pop
and
out
pop
or
inc
int
mov
sub
add
or
daa
outs
adc
and
cwde
pusha
xor
mov
add
sub
or
jg
loope
jg
loopne
gs
popf
int3
dec
sbb
adc
call
jbe
cmovnp
psrld
neg
push
push
jecxz
bound
push
xor
stos
in
stos
fnsave
mov
xchg
jae
les
int
mov
cmp
sub
mov
jb
and
fld
push
push
pop
mov
dec
sbb
imul
nop
test
pop
adc
mov
mul
and
call
mov
mov
pop
lock
imul
movs
jo
adc
loope
dec
mov
ins
ss
cmp
add
xchg
push
add
dec
das
repnz
lods
push
mov
(bad)
bound
cmc
out
stc
dec
mov
clc
repz
fs
adc
stos
or
mov
dec
jecxz
ins
stos
add
mov
inc
nop
test
add
lock
jo
(bad)
sub
or
push
sbb
mov
mov
pop
mov
cdq
jge
inc
int
push
and
inc
mov
mov
sbb
and
ror
dec
out
cwde
test
cmp
pop
sbb
aaa
iret
popf
or
test
jo
xor
jg
stc
push
jle
sub
sub
pop
sub
xor
es
push
pop
xlat
in
mov
stos
jnp
daa
dec
dec
jno
cld
neg
shl
ss
adc
shl
mov
inc
inc
pop
int
cmp
push
pop
(bad)
jmp
in
test
dec
sub
push
sub
mov
mov
jbe
xor
fwait
sbb
addr16
or
or
in
mov
test
jl
push
adc
idiv
mov
and
jp
(bad)
loop
lea
das
pusha
sahf
(bad)
cdq
or
addr16
add
outs
pop
ds
inc
xchg
push
mov
pop
test
xchg
test
mov
mov
add
xchg
movs
clc
ficom
icebp
das
push
test
pop
and
shr
xchg
mov
dec
mov
out
sbb
inc
jge
int
xchg
push
sub
js
imul
(bad)
out
xor
jbe
out
xor
fist
add
sub
cmp
and
scas
scas
sahf
inc
aas
js
sub
bound
lods
xor
mov
pop
xchg
mov
lock
inc
xlat
(bad)
es
dec
and
pushf
loop
shr
cmp
jecxz
dec
and
add
loop
in
xchg
jle
pop
enter
xor
sbb
inc
mov
(bad)
push
xor
inc
(bad)
pop
out
mov
scas
sub
adc
pop
push
out
add
jb
sub
jnp
jmp
dec
ds
adc
in
sbb
in
fs
fstp
mov
sbb
rcr
mov
cwde
call
bound
mov
movs
popa
hlt
inc
ins
and
nop
ins
jne
popf
jae
or
das
iret
daa
ds
and
clc
push
xchg
repnz
test
lods
inc
cli
and
pop
or
inc
call
xor
push
mov
jbe
jb
xchg
dec
xchg
and
lods
daa
mov
inc
sub
mov
inc
xchg
jb
xor
mov
shl
sbb
adc
xchg
scas
pusha
jle
push
pop
popa
stc
sub
inc
ins
retf
hlt
lahf
jmp
lds
push
ror
push
sbb
xchg
movs
hlt
aaa
cmp
popa
pusha
(bad)
sar
mov
mov
lahf
es
or
neg
in
in
loope
ficomp
push
(bad)
push
les
xor
dec
mov
pop
dec
push
xchg
js
xor
jnp
sub
or
adc
jno
adc
jbe
rol
push
push
mov
dec
mov
in
test
mov
jne
pop
dec
femms
rcl
cmc
xchg
push
lods
inc
ins
xchg
xor
xor
mov
mov
ins
pusha
or
mov
mov
cmp
fiadd
push
cmp
sbb
cmp
add
mov
fcom
fbstp
fcomi
sbb
or
push
cmp
mov
jae
add
mov
push
xlat
pop
cmps
mov
ret
mov
mov
addr16
aaa
in
daa
pop
cmp
pop
rcl
push
sub
mov
aaa
pop
es
push
int3
xor
jo
fistp
jg
int
pop
imul
cli
ror
pop
cmp
ss
cs
aaa
out
sti
aam
stos
mov
repz
in
dec
ins
cmp
and
test
ret
xchg
jns
jnp
mov
not
sbb
push
xchg
lea
in
sub
aas
and
and
add
add
jns
dec
mov
or
je
cdq
mov
cmps
test
mul
push
cmp
fs
mov
jle
out
xlat
jge
iret
and
aaa
in
jge
jp
dec
lea
fldcw
push
inc
inc
jmp
outs
xor
and
test
test
mov
adc
ror
rcl
nop
jb
(bad)
repz
sbb
xchg
call
jle
sub
mov
cdq
mov
mov
inc
inc
push
xchg
xchg
call
and
(bad)
(bad)
push
dec
xor
daa
mov
jmp
aaa
scas
cmp
aam
das
or
call
sar
xlat
jge
dec
xchg
fcmovnu
xchg
mov
iret
sub
inc
inc
pop
cs
mov
and
push
std
mov
sub
call
out
pop
nop
fsub
retf
pop
push
rcr
scas
sub
or
inc
ror
adc
add
sbb
call
imul
cdq
jmp
push
jle
shl
icebp
sti
ja
xor
pop
int
pop
imul
mov
xor
jno
push
dec
cmp
jae
or
dec
movs
std
ja
mov
ins
or
int3
sbb
ret
add
fbstp
loop
mov
(bad)
std
in
test
arpl
dec
push
in
imul
mov
cmp
sbb
les
loope
std
js
jnp
sbb
jbe
lods
movs
cmp
outs
inc
sti
ret
and
xor
and
and
ret
test
pcmpeqw
and
jg
adc
pop
push
adc
repnz
fistp
(bad)
aad
mov
mov
pop
push
xchg
bound
mov
test
fld
sbb
(bad)
lea
leave
(bad)
shr
adc
xchg
push
sbb
jne
inc
scas
xor
ftst
call
adc
iret
inc
(bad)
push
inc
sub
xor
xor
into
jne
mov
stc
movs
pop
ins
repnz
mov
xor
cmp
and
cli
jmp
shl
pop
mov
mov
jae
jo
daa
mov
mul
int
sar
in
push
jb
pop
mov
add
in
not
sbb
in
lock
(bad)
inc
mov
div
and
retf
cmp
xchg
out
(bad)
xchg
adc
sbb
mov
mov
add
outs
push
sub
mov
aad
xor
adc
movs
mov
sahf
xchg
mov
and
clc
mov
idiv
retf
dec
add
or
bound
test
push
cdq
xchg
xor
sbb
adc
push
add
sbb
fsub
mov
mov
sub
shl
push
xchg
sbb
adc
(bad)
push
dec
daa
push
shl
cmc
icebp
fwait
mov
pop
mov
dec
push
inc
lea
jecxz
pop
mov
lods
add
fmul
aad
int3
ret
mov
outs
xchg
adc
sti
(bad)
pop
fwait
inc
popa
push
out
or
(bad)
repz
cmp
mov
jmp
pusha
cld
iret
(bad)
xchg
ret
and
mov
nop
inc
scas
adc
jmp
jbe
xor
dec
mov
imul
stos
xchg
fiadd
out
jno
mov
or
push
sub
xchg
pop
xchg
xor
iret
dec
cli
push
and
scas
cwde
clc
adc
mov
add
cli
out
dec
pop
fld
sub
sar
cmps
in
xor
push
es
jo
imul
fst
jae
ins
cmp
arpl
cmp
add
push
test
aad
repnz
daa
cmp
(bad)
pop
stos
hlt
retf
mov
retf
test
fnstcw
cmc
jl
or
aam
outs
jle
mov
pop
cmps
add
mov
punpckldq
lods
mov
inc
loopne
fdiv
sub
out
mov
mov
and
pop
dec
xchg
xor
fs
inc
adc
mov
das
pop
fwait
adc
inc
mov
call
mov
dec
icebp
cmp
test
sub
shl
fiadd
inc
stos
cld
xchg
int
jns
sbb
out
sbb
rcr
aaa
push
clc
popa
jmp
lahf
xchg
pop
sti
aaa
call
mov
(bad)
leave
mov
into
fsubr
pop
adc
and
xor
bound
mov
xor
xchg
mov
bound
adc
jecxz
pop
push
jp
scas
imul
sahf
repz
mov
iret
jb
jl
mov
loopne
mov
mov
ins
push
ret
in
fs
fs
inc
jg
das
add
or
xchg
mov
rol
pop
pop
inc
mov
ror
movs
pop
and
test
lahf
dec
lock
xor
(bad)
jnp
imul
pop
and
cmp
loopne
pop
leave
adc
xlat
sub
pop
inc
cs
adc
lds
xchg
sbb
out
pop
das
loope
repz
inc
jl
mov
mov
in
mov
cmp
cmp
je
sub
sub
cmps
mov
scas
and
aaa
push
cmp
fmul
sbb
or
xchg
jg
mov
and
adc
icebp
(bad)
test
mov
in
or
or
das
test
xchg
into
jecxz
dec
cdq
adc
jp
sbb
ret
aad
adc
dec
xor
mov
and
xor
imul
(bad)
xchg
xchg
dec
popf
shr
pop
xchg
in
fisubr
sbb
out
loop
and
add
dec
xor
int3
das
cmc
mov
pop
aad
sbb
test
jg
std
xchg
cli
(bad)
jns
bound
add
aas
add
add
rcl
mov
mov
shl
mov
fild
mov
loopne
xchg
push
sbb
lods
ja
lods
xor
test
(bad)
adc
pop
sar
and
mov
jmp
outs
adc
push
lods
mov
xchg
push
adc
add
or
and
cmp
push
cs
dec
sub
or
int
pop
inc
pop
aam
test
in
sub
sbb
test
pop
int3
(bad)
pushf
pushf
jecxz
and
jnp
jno
test
push
push
xchg
fsub
push
cmp
mov
xor
ficomp
pop
lahf
stos
push
mov
(bad)
xlat
mov
dec
shl
fisttp
xor
push
add
iret
add
cdq
nop
dec
mov
push
mov
inc
cmp
int
call
inc
(bad)
fsubr
in
or
imul
out
or
enter
sbb
mov
mov
loopne
stc
adc
cmp
adc
outs
push
ret
pop
dec
adc
mov
xlat
and
out
mov
fs
outs
push
dec
enter
cld
shr
aam
cdq
sbb
jns
stc
jno
inc
retf
sub
mov
sub
scas
retf
mov
je
mov
mov
mov
mov
stc
adc
xlat
into
test
in
adc
and
je
sbb
ret
adc
(bad)
es
dec
jo
movs
in
inc
aam
cmp
outs
(bad)
jge
push
fwait
sub
xchg
mov
and
(bad)
cmp
xchg
xchg
stc
pop
test
je
add
jnp
mov
test
(bad)
sub
mov
sbb
xchg
pop
mov
push
mov
out
arpl
xchg
adc
hlt
mov
or
ja
adc
xchg
cld
mov
dec
call
in
cwde
ins
inc
push
and
add
cmp
cmp
jmp
add
cmp
dec
inc
or
fcom
add
dec
mov
mov
cmp
(bad)
dec
mov
test
xchg
fld
add
mov
and
xchg
fnstsw
sar
movs
cmp
or
in
inc
mov
icebp
sbb
jmp
call
aam
and
mov
ins
jle
imul
scas
sbb
inc
jecxz
sub
aam
cmp
in
push
(bad)
pop
add
jne
sbb
sub
and
lods
cmp
ds
cwde
mov
test
xor
leave
adc
push
adc
xchg
pop
in
or
adc
pop
neg
cdq
lock
pop
pop
daa
jns
inc
call
cmp
(bad)
shr
pop
outs
sahf
or
fistp
xacquire
xor
xchg
push
cmc
cmp
pusha
adc
mov
leave
(bad)
imul
iret
sub
rcl
idiv
shl
icebp
pop
add
xlat
add
cmp
mov
mov
mov
inc
push
cmp
stc
adc
(bad)
lods
popa
mov
fcom
pop
retf
out
jae
sub
sbb
movs
dec
lea
adc
push
inc
jge
xchg
sub
or
xlat
cli
outs
aam
out
pop
mov
cmp
sbb
add
mov
jb
cmp
je
push
fstp
push
mov
mov
sti
dec
sub
xor
mov
pop
lds
stos
test
xchg
xchg
in
mov
movs
add
inc
imul
inc
daa
gs
out
clc
add
in
retf
jmp
pop
test
movs
bnd
xlat
xor
int3
mov
xchg
pop
sar
inc
lea
stos
icebp
popf
stos
js
jns
shl
sbb
pop
push
bnd
dec
inc
or
mov
in
or
sbb
test
mov
rol
loopne
xchg
je
and
pmaddwd
gs
sahf
xchg
jl
cdq
retf
cli
jns
ret
sbb
adc
sti
test
pop
ds
std
test
pop
(bad)
fsubr
push
mov
mov
stos
daa
stos
fs
shr
jns
sar
call
(bad)
cmps
add
movs
xchg
xchg
fstp
std
jl
adc
aaa
or
fiadd
pop
loopne
mov
push
and
in
sbb
push
mov
ins
mov
mov
mov
add
cmps
add
push
xchg
mov
rcr
xlat
data16
movs
out
std
rol
daa
mov
test
push
dec
sahf
mov
or
mov
cmp
push
aas
sub
cmp
mov
sbb
dec
or
dec
mov
adc
sub
int
mov
inc
rol
pop
adc
hlt
addr16
xchg
sbb
test
not
(bad)
rol
cld
mov
popf
pop
mov
iret
xor
pusha
(bad)
repnz
retf
xor
movs
jp
lods
cmp
and
xchg
adc
addr16
pop
rcl
test
dec
fdivr
add
ins
fisttp
das
mov
dec
nop
mov
lahf
movs
fsub
sub
mov
jmp
push
and
sub
fbstp
mov
movs
aad
mov
jge
sahf
adc
mov
jecxz
inc
in
pop
push
and
ret
cmp
jmp
rol
ja
sub
or
rol
and
xor
fild
mov
jb
pusha
mov
jmp
lock
retf
push
adc
mov
jmp
int3
pop
sub
mov
sbb
scas
push
imul
inc
fiadd
mov
sbb
scas
inc
aad
xchg
and
mov
nop
push
fdivr
sub
push
mov
bound
push
imul
push
cmps
dec
das
push
mov
xor
dec
(bad)
pop
aas
mov
xchg
outs
inc
mov
mov
and
mov
sti
mov
pop
pop
daa
movs
ins
dec
pop
lods
int
ret
dec
pushf
lds
sub
in
push
out
nop
push
dec
xor
dec
xor
jmp
jmp
sar
push
adc
es
cmp
mov
jle
pop
iret
and
xchg
mov
inc
push
int3
mov
add
sbb
cmps
(bad)
imul
iret
mov
xchg
scas
jns
sub
test
mov
add
xor
cs
dec
jecxz
rcl
xor
xchg
jb
sub
or
aam
cmp
mov
and
or
arpl
or
in
dec
gs
rcr
sub
leave
rol
js
ins
xor
rol
push
imul
xor
jmp
and
stos
test
xchg
pop
jmp
fistp
aaa
sti
adc
(bad)
in
cs
xchg
out
inc
gs
xor
and
fcom
mov
les
pop
data16
loop
repz
push
repz
push
mov
mov
or
out
or
stos
scas
jae
inc
adc
or
lock
and
adc
stos
push
ins
(bad)
sbb
push
push
sbb
dec
fwait
xchg
xor
sub
adc
push
retf
jecxz
cmps
cwde
or
je
inc
in
int
in
movs
and
(bad)
pop
inc
shl
(bad)
das
pop
fisubr
lahf
stos
sahf
arpl
fcom
ficomp
inc
movs
daa
adc
cmp
dec
and
(bad)
fiadd
pop
jbe
and
cmp
pusha
test
sbb
cmp
mov
jg
or
clc
jecxz
iret
mov
(bad)
pop
retf
inc
jle
lock
jb
mov
aam
lahf
pop
imul
cmp
dec
sar
sbb
cdq
and
dec
mov
dec
xlat
xchg
xchg
fld
enter
xor
sub
inc
mov
or
fidivr
test
mov
cdq
jmp
adc
pop
push
mov
add
out
pop
rcl
sub
cmp
and
add
lds
adc
pop
sbb
dec
call
xor
sbb
mov
icebp
pop
pop
je
(bad)
repz
fidiv
or
push
cli
imul
shr
arpl
outs
rcr
cmps
push
push
ror
xchg
sub
test
sbb
sbb
in
sbb
sbb
ins
repz
hlt
out
ret
push
add
and
mov
adc
ror
ret
cwde
mov
and
push
jmp
rcr
das
movs
sbb
jnp
mov
push
lock
inc
inc
adc
loope
xor
push
repz
das
(bad)
or
cmps
stos
xor
mov
mov
aad
test
mov
jmp
mov
scas
retf
adc
or
out
push
in
fcomp
lods
inc
outs
pop
sti
rcl
inc
pop
mov
imul
dec
call
sbb
cmp
dec
mov
adc
pop
or
xchg
ins
loope
mov
dec
jae
in
mov
(bad)
dec
mov
stos
daa
or
imul
in
sub
mov
cmp
stos
push
pop
jns
push
mov
jae
mov
sbb
stc
cli
call
cmp
pop
inc
push
out
leave
xchg
lahf
jge
xlat
mov
jmp
aad
fbld
sbb
scas
or
mov
adc
xbegin
nop
jae
mov
nop
int3
cwde
(bad)
arpl
jno
jp
dec
fcomp
mov
sbb
jo
pop
(bad)
cdq
in
(bad)
test
out
inc
fsub
int
xchg
inc
fwait
mov
aaa
xor
and
inc
mov
xlat
test
jno
jnp
leave
js
das
xchg
in
add
xchg
push
add
ins
mov
aad
ins
jno
and
aaa
loopne
clc
push
adc
jge
jle
cmp
jno
mov
fdiv
(bad)
fwait
hlt
scas
hlt
ss
and
dec
outs
xor
in
adc
mov
xchg
push
fidiv
lods
shl
lahf
fnstenv
(bad)
mov
jmp
and
cmp
mov
jnp
icebp
sbb
movs
lock
xchg
ror
adc
test
xchg
dec
jno
cwde
repz
aas
jbe
int3
push
rcr
cmp
std
(bad)
push
outs
aas
adc
jo
addr16
jmp
sub
cmps
loop
mov
xchg
jge
or
or
cmps
xor
or
fmul
push
outs
inc
and
dec
jge
or
mov
stc
lods
out
mov
pushf
xor
stc
iret
push
movs
fucompp
outs
aas
cdq
scas
loope
sbb
je
mov
lea
pop
dec
and
movs
or
rcl
sbb
int
gs
hlt
ret
aad
repnz
lea
sti
mov
ret
mov
adc
dec
int3
sbb
cmps
repz
mov
test
xor
repz
pop
js
das
movs
inc
mov
push
push
inc
outs
mov
pop
adc
arpl
adc
mov
adc
jbe
fsubrp
and
jae
mov
out
sbb
stc
add
add
fs
bound
push
dec
xor
inc
ins
fbstp
stos
push
pop
mov
outs
js
sbb
add
jecxz
pop
fcom
popa
mov
xchg
push
cmp
push
cmp
inc
pop
pop
sub
jae
push
repnz
out
mov
(bad)
jmp
pop
in
xchg
and
outs
pop
pop
or
fwait
stos
mov
cmps
and
es
stc
or
cmp
(bad)
retf
fdiv
ret
pop
call
mov
dec
mov
mov
ret
xor
sub
sahf
gs
icebp
fild
push
xchg
and
dec
pop
or
sbb
pop
sbb
inc
popa
imul
rcr
xor
sub
ds
ffreep
and
ins
inc
jo
mov
cmc
sub
outs
pop
and
cmp
xchg
cmp
ficom
int
bswap
mov
ins
or
daa
jl
bound
mov
xchg
sub
mov
mov
clc
out
sbb
jl
sub
or
or
es
sbb
int
popa
pop
add
aam
loop
add
add
(bad)
fidiv
aas
mov
aam
jnp
loope
xchg
dec
xchg
xchg
jmp
sub
(bad)
fsubr
inc
dec
bound
xchg
push
inc
leave
pop
rol
shr
in
hlt
sahf
shl
rcl
and
hlt
sub
cmc
push
std
enter
pop
movs
hlt
cs
lahf
scas
in
pushf
pushf
fdivr
(bad)
jo
add
das
add
mov
push
aad
add
push
nop
aad
inc
mov
dec
mov
aaa
mov
cdq
mov
das
jno
outs
inc
(bad)
gs
push
in
in
and
pop
inc
cmp
mov
xchg
or
jns
stos
mov
enter
fdivr
(bad)
loopne
fistp
inc
iret
sub
mov
mov
dec
mov
push
fld
pushf
xchg
shl
adc
xor
cmp
mov
mov
sbb
loop
push
daa
pop
in
sbb
rcr
pushf
and
xor
(bad)
aas
shl
cmps
pop
push
jmp
sub
jmp
jmp
cmp
push
movs
mov
cmps
test
ja
mov
adc
push
fsub
stc
ret
fidiv
add
mov
movs
jnp
cld
push
imul
in
jmp
and
mov
inc
jg
data16
rcl
sub
lahf
xchg
inc
movs
pop
push
jb
into
(bad)
jbe
(bad)
shl
iret
int3
jmp
push
add
push
fs
mov
and
int3
mov
jge
call
outs
ins
dec
loop
lahf
mov
xchg
push
add
enter
lea
sbb
ss
fidiv
sbb
std
mov
cmp
mov
dec
mov
rcr
pop
stos
pop
dec
cmp
dec
adc
pushf
fbld
mov
sbb
pop
daa
jecxz
out
xor
and
das
(bad)
call
jl
lods
add
and
jo
pop
pop
pop
scas
daa
aaa
xor
jno
retf
sub
fdiv
fmul
xor
mov
arpl
xchg
mov
repnz
inc
inc
mov
(bad)
fidiv
add
icebp
cmps
cs
sbb
and
imul
jecxz
rcl
sub
call
rcl
jg
faddp
push
int
mov
push
je
inc
ins
xchg
mov
mov
pop
xor
cmp
and
es
std
sbb
add
out
push
in
daa
push
imul
pop
ret
(bad)
mov
xchg
mul
fbld
imul
icebp
cmp
dec
sbb
(bad)
mov
xchg
xlat
and
aas
pop
loopne
fsubr
scas
jbe
and
icebp
jmp
retf
das
sub
out
jb
pop
sbb
cmp
or
adc
je
pushf
and
pop
cld
add
mov
mov
cmc
or
push
mov
addr16
pop
imul
retf
std
mov
inc
scas
in
ins
ja
adc
in
mov
inc
adc
xor
int
pop
ss
adc
fs
push
(bad)
dec
sbb
mov
outs
sub
xchg
mov
out
fsub
adc
push
inc
cmps
lahf
outs
mov
jne
shl
lea
mov
scas
add
mov
jbe
lds
rol
cwde
loopne
cmp
jl
imul
scas
sub
push
mov
mov
or
cmp
rcr
sub
shl
cmps
cmp
mov
push
sbb
mov
inc
push
mov
das
sbb
rcr
adc
push
int3
xlat
mov
xchg
mov
lods
cmps
dec
(bad)
adc
xor
sub
fldenv
iret
pop
mov
xor
pop
xchg
in
out
fnsave
dec
ins
xchg
or
lea
mov
in
xor
pop
test
pushf
stc
fwait
push
addr16
sbb
and
cmp
add
jmp
xchg
xchg
popf
mov
fmul
pop
jae
fldenv
test
jb
inc
(bad)
sbb
ins
sbb
lods
xchg
adc
loopne
div
dec
(bad)
sbb
mov
stos
ins
loop
jo
or
daa
mov
inc
shr
sbb
fdiv
xchg
xor
sbb
movs
sub
jo
pop
shr
xchg
in
test
inc
ins
xor
sbb
xor
retf
push
das
ret
cmps
push
dec
jmp
xor
xor
pop
out
jne
jmp
scas
or
sti
test
pushf
nop
and
cmp
jb
jno
popf
inc
imul
mov
pusha
leave
cmps
data16
dec
jle
ss
pop
pop
push
adc
sub
lahf
aaa
pop
push
sub
aaa
sbb
mov
mov
outs
std
jge
mov
pushf
fisttp
push
mov
gs
mov
sbb
inc
sub
pop
mov
cdq
not
add
lea
enter
pop
adc
loopne
lds
cmps
sub
or
pop
bound
xchg
mov
(bad)
in
(bad)
(bad)
xchg
pop
cmp
icebp
cmp
scas
bound
push
cmp
fcomi
shr
dec
push
mov
dec
(bad)
rcl
mov
mov
movs
sti
add
mov
scas
popf
xchg
repnz
loop
xor
pop
jmp
rcl
nop
aad
(bad)
out
adc
loopne
outs
daa
dec
cmps
rcr
cmp
and
stos
sbb
add
sahf
pop
outs
jmp
mov
mov
mov
sbb
(bad)
sti
push
xor
fs
out
dec
daa
sbb
jge
ds
sbb
dec
dec
jp
lods
or
movs
pop
sub
add
push
cmp
inc
mov
xchg
shl
ins
icebp
popa
or
mov
or
or
ror
pop
adc
jb
mov
mov
mov
and
cmp
das
mov
dec
pop
push
inc
lods
in
mov
hlt
pop
jb
in
retf
xor
mov
sub
int3
(bad)
push
aas
cmp
repnz
xchg
(bad)
sbb
call
mov
xchg
cmps
dec
mov
cmp
pop
cld
dec
fsub
test
stc
shr
inc
pop
mov
sub
dec
cmp
fcomp
jb
or
xor
je
jne
nop
mov
and
jmp
cmp
aas
inc
div
or
dec
call
xor
repnz
shl
ins
cld
push
cmp
bound
rcl
rol
or
cmps
jp
inc
dec
shl
stos
and
in
out
mov
ins
fmul
mov
cs
sbb
loopne
push
or
rcr
iret
adc
jp
cmp
adc
pop
jmp
(bad)
and
fstp
addr16
dec
sub
add
popa
push
ret
icebp
xor
or
(bad)
imul
jge
int
shl
pushf
xchg
add
jg
hlt
sub
ins
jne
(bad)
lock
xchg
push
mov
jmp
dec
dec
arpl
movs
seta
adc
xor
scas
jmp
je
dec
and
inc
sbb
xchg
xchg
fcmovnu
jecxz
add
jl
cwde
adc
mov
(bad)
js
push
inc
pop
and
shr
mov
test
cmp
mov
aas
fcomp
sub
ret
jns
jg
sub
fs
fs
mov
retf
xchg
mov
fwait
loop
mov
xor
sbb
push
sub
mov
or
xor
xchg
and
inc
test
pop
shl
sub
sub
outs
sbb
and
mov
scas
pop
add
out
movs
jb
xor
inc
movs
outs
xor
inc
push
(bad)
ins
pop
jno
imul
dec
mov
cmp
imul
stos
dec
pop
stos
mov
(bad)
sub
sti
retf
fistp
and
mov
cmp
add
jnp
bound
xchg
mov
sbb
jmp
movs
jge
mov
test
call
push
call
inc
in
pop
int
popa
inc
cmp
jp
push
jo
sbb
jmp
jnp
addr16
(bad)
popa
mov
movs
sar
mov
stos
add
push
inc
cmp
jnp
sbb
mov
mov
pop
lahf
or
lds
popf
pop
stc
ins
jnp
cmp
push
in
lods
add
das
lss
adc
adc
ret
hlt
fist
sbb
retf
repz
adc
mov
dec
into
ins
jl
xor
enter
jo
jo
lods
dec
push
ds
idiv
cmps
cld
xchg
mov
jo
idiv
jmp
mov
adc
mov
fcmovbe
pop
jns
ret
xor
mov
and
adc
inc
dec
cmp
cmp
add
jbe
or
stos
cmps
mov
loop
es
aam
mov
stc
jge
cmp
sahf
cdq
inc
cs
mov
jp
lock
gs
rol
mov
mov
frstor
call
xchg
jmp
adc
xchg
push
test
mov
fcom
dec
add
add
out
shl
scas
fisttp
dec
ins
popa
mov
je
add
jne
or
push
(bad)
in
mov
or
mov
mov
fnstenv
sbb
pop
ins
xlat
mov
inc
sbb
daa
inc
sbb
pop
fstp
jns
adc
mov
loop
mov
pop
cmps
jae
out
ins
inc
mov
je
(bad)
aaa
rcr
mov
adc
jmp
scas
lods
fwait
mov
jg
push
ficomp
jg
nop
push
rol
or
xor
clc
xchg
inc
dec
and
and
repz
mov
mov
jmp
cmps
pop
dec
sbb
fidiv
push
ror
test
or
retf
in
dec
ret
sub
dec
gs
ja
shl
or
mov
and
push
pop
js
jge
pop
ins
leave
and
sbb
mov
scas
push
(bad)
imul
inc
push
jmp
enter
outs
mov
sbb
xchg
lea
mov
mov
(bad)
dec
mov
adc
movs
lds
sub
xor
xor
cwde
fist
cmp
sub
aad
(bad)
pop
jecxz
(bad)
pop
jnp
cwde
popa
jns
or
dec
sbb
fwait
sahf
aam
inc
and
adc
pop
jmp
jae
adc
mov
jp
xchg
movs
ds
jmp
(bad)
outs
loop
cmps
sar
repnz
mov
pop
ficom
mov
and
(bad)
aad
mov
mov
xor
mov
lods
(bad)
lods
sub
pop
push
int3
jp
mov
xchg
dec
iret
add
test
sti
sahf
stos
repnz
jle
inc
jl
clc
retf
pushf
cmp
popa
pusha
mov
or
mov
clc
jle
mov
sub
ins
lods
fld
mov
jbe
fidivr
por
xor
fist
mov
pop
sbb
popf
gs
in
in
dec
addr16
pushf
mov
fidiv
lods
ror
ret
dec
and
mov
and
push
adc
retf
cmp
cmp
inc
pusha
add
cmp
and
(bad)
je
setp
(bad)
push
cwde
ins
mov
sar
jbe
xor
pop
and
aas
imul
enter
std
jg
xchg
popf
in
pop
inc
xchg
xor
cmp
repz
jns
scas
call
imul
stos
mov
movs
inc
cmp
addr16
dec
or
pop
movs
add
idiv
fs
(bad)
test
lds
int3
cmps
mov
jns
pushf
and
lods
lea
dec
aas
xor
ret
xchg
dec
mov
je
or
jnp
test
(bad)
call
mov
mov
adc
jne
test
lods
gs
mov
xchg
mov
add
inc
jne
int
(bad)
jp
jle
adc
loop
add
or
dec
mov
stos
(bad)
mov
xchg
call
xchg
jg
push
or
push
call
pop
or
arpl
pop
pop
jb
mov
lods
es
leave
int
es
mov
int3
iret
scas
inc
push
cmp
(bad)
mov
adc
add
rcl
(bad)
sti
test
fwait
ss
push
inc
jbe
or
push
jp
adc
jge
fbld
test
xchg
sbb
not
sub
jge
push
iret
pop
lea
push
outs
jb
data16
mov
mov
ss
rol
inc
addr16
mov
sbb
mov
mov
idiv
in
dec
xor
mov
mov
or
push
xchg
cwde
(bad)
jmp
xchg
push
lods
leave
xlat
aam
ret
outs
pop
retf
out
inc
push
call
hlt
in
dec
call
rcr
(bad)
cmc
scas
cmp
or
aam
pop
nop
pop
push
inc
lods
frstor
popa
mov
dec
pop
bound
sbb
pop
jae
iret
push
cld
imul
xor
dec
mov
and
adc
mov
jl
std
rcl
pop
out
ins
xchg
jne
dec
dec
dec
xlat
push
or
mov
dec
push
jbe
push
mov
popa
cmp
cmps
jge
sar
imul
pop
xchg
xchg
xchg
scas
mov
cmp
or
push
sub
and
jle
jmp
dec
mov
scas
daa
(bad)
in
in
cdq
adc
fiadd
out
(bad)
fild
and
push
out
es
scas
das
in
lods
(bad)
fadd
mov
jge
push
xchg
push
pop
jns
or
test
fs
aaa
(bad)
cld
push
aam
call
in
(bad)
add
mov
inc
mov
mov
sub
imul
mov
pop
in
sti
(bad)
rol
call
mov
and
or
je
and
pop
push
idiv
fnstcw
stos
mov
lods
popf
rcl
mov
sahf
or
mov
call
call
push
addr16
loop
retf
cmp
add
sti
sbb
pop
xchg
ffree
sub
push
sbb
xor
push
pop
icebp
xor
sbb
(bad)
loop
loop
cmp
jno
ss
cmp
push
fstp
(bad)
retf
vmulsd
push
iret
stc
fcmovnbe
jne
xor
(bad)
popaw
inc
stos
mov
push
ret
(bad)
bound
mul
test
cld
icebp
test
xor
jae
ss
retf
mov
test
mov
mov
add
aaa
push
fmul
(bad)
jo
sbb
mov
add
push
mov
in
mov
int
jb
popa
pop
retf
inc
fadd
or
fld
xchg
test
jmp
mov
jno
lods
mov
out
xor
pop
add
adc
inc
fcmove
movs
(bad)
call
lock
out
cli
mov
neg
mov
pop
imul
rol
jne
retfw
mov
jbe
cmp
movs
jp
outs
in
leave
inc
in
cmc
xor
sbb
cmc
int3
shl
xchg
hlt
(bad)
es
mov
aaa
pop
out
out
clc
retf
jmp
mov
mov
psllw
mov
mov
hlt
sbb
int
push
lahf
test
cwde
dec
clc
push
out
es
(bad)
cmp
sbb
inc
mov
mov
int
aas
add
aad
push
inc
mov
inc
mov
or
cmps
mov
dec
fcomip
jl
lds
jge
mov
aam
fsubr
dec
ror
push
out
xor
out
sub
cli
or
inc
push
retf
xor
iret
hlt
loopne
adc
fld
sub
int3
or
mov
sbb
stos
hlt
adc
push
or
xchg
test
sbb
cwde
frstor
into
mov
imul
pusha
inc
sbb
cmp
(bad)
arpl
mov
jmp
retf
add
jns
and
test
pop
pop
mov
sbb
retf
pop
mov
xchg
push
or
mov
inc
pop
test
sub
popf
aam
sub
test
(bad)
pop
and
dec
add
sub
mov
pusha
outs
(bad)
jae
stos
dec
or
gs
aam
nop
or
sub
jno
or
lods
(bad)
pop
stos
dec
or
out
pop
inc
(bad)
xor
push
sub
sbb
das
push
popa
(bad)
xchg
mov
es
dec
pop
mov
sbb
adc
adc
xchg
pop
pop
pushf
int
sbb
jmp
pop
push
stc
cdq
inc
sbb
pop
jno
les
fild
das
mov
add
jb
xchg
arpl
in
jns
or
mov
loopne
ret
push
inc
je
sub
and
cmps
and
fisttp
xlat
or
ds
sbb
imul
add
and
mov
jno
mov
jnp
xchg
ja
pop
mov
jae
cld
fldenv
mov
cmp
add
add
push
scas
jns
sbb
cli
and
mov
mov
ds
push
fldcw
ins
and
loope
jnp
sub
or
out
or
addr16
lock
arpl
setg
jecxz
xchg
jl
jb
mov
cmp
mov
lods
fbld
sub
dec
inc
mov
cld
push
cmp
ds
ins
repnz
push
fwait
jnp
dec
sti
mov
loopne
mov
cs
or
sub
imul
xchg
mov
pop
or
xchg
xchg
xor
dec
inc
das
dec
in
mov
rol
jne
sub
sbb
rcr
push
pop
pushf
imul
adc
jno
pop
test
mov
mov
stos
or
pop
ja
sub
neg
inc
add
jl
dec
jl
mov
shl
cmp
mov
fdivr
and
stos
mov
cwde
jecxz
js
pop
stc
adc
cmp
stos
shl
sub
into
aad
sbb
xor
mov
imul
xchg
inc
shr
aaa
lock
loopne
retf
lds
xchg
dec
fild
in
push
adc
sub
or
loop
jmp
lods
push
lock
or
(bad)
or
test
iret
stos
jns
cmp
in
mov
es
xor
xchg
les
sbb
pop
push
mov
mov
in
sbb
and
out
rcl
scas
retf
and
popa
lock
jle
push
out
lds
scas
data16
dec
cmp
(bad)
and
xchg
inc
sar
jnp
push
xchg
mov
sahf
or
jb
fwait
xchg
jbe
push
int3
push
aaa
mov
cmc
add
mov
mov
shl
adc
add
int3
adc
pop
iret
cld
push
mov
xchg
pop
inc
cmp
mov
scas
aaa
pusha
add
enter
push
adc
add
push
pop
outs
arpl
mov
test
mov
test
add
xchg
push
jmp
add
mov
scas
(bad)
ss
repz
rcl
mov
mov
(bad)
rol
(bad)
out
mov
jns
sub
pushf
adc
mov
xchg
or
sbb
xor
mov
mov
cld
push
jae
repz
int
dec
bound
adc
rcl
cmp
push
je
add
std
sbb
shl
jl
enter
loop
mov
call
mov
xor
in
xchg
sbb
inc
mov
inc
retf
jmp
push
fs
aad
mov
hlt
dec
iret
add
loop
loopne
push
sar
xor
sub
leave
test
xor
jno
jmp
cli
or
mov
sar
fcom
aas
sti
cmp
(bad)
xor
pushf
cmc
mov
mov
data16
gs
dec
loope
push
xchg
jae
je
mov
push
iret
repnz
dec
push
dec
js
inc
mov
sahf
je
(bad)
jne
inc
or
pusha
inc
(bad)
ucomiss
lock
mov
inc
aas
stc
jno
push
dec
ss
push
in
stos
outs
out
mov
push
mov
cmp
std
retf
pop
test
into
adc
inc
stos
sub
xchg
push
test
jecxz
adc
xchg
cmps
add
dec
or
jae
add
bound
call
test
xlat
fwait
rol
push
and
pop
movzx
mov
xchg
cmp
jl
jmp
test
inc
sbb
int3
add
cdq
pop
pop
adc
in
ins
push
dec
mov
cmp
popf
cli
out
into
out
cmp
dec
out
xor
test
bound
sbb
(bad)
jle
lock
test
sbb
cwde
cli
mov
dec
call
mul
aaa
add
sub
clc
dec
push
fadd
lahf
pop
add
jns
in
mov
or
repnz
or
push
fistp
pop
xlat
push
(bad)
jp
push
xlat
xor
outs
cmp
xchg
in
mov
and
test
stos
push
out
repz
add
jbe
popf
cmp
or
cmps
sbb
les
xchg
mov
movs
mov
rol
movs
loopne
cwde
(bad)
fild
push
xlat
dec
out
loop
(bad)
mov
retf
aas
cld
dec
movs
out
cmc
sbb
xchg
aas
sbb
rol
push
dec
mov
mov
cmp
loop
sub
(bad)
pop
jmp
pop
nop
dec
lahf
dec
test
mov
jbe
movs
test
or
loope
call
adc
sub
push
push
int3
out
add
xchg
loop
push
xor
shl
rol
mov
adc
push
xor
movs
xchg
test
push
sub
mov
xor
cmp
lea
test
inc
dec
dec
icebp
sub
mov
ss
popa
in
movs
sbb
sbb
sbb
mov
and
mov
adc
in
pop
je
adc
jmp
dec
inc
ins
fld
rcl
add
dec
stos
bound
outs
popf
test
sti
cmps
push
jbe
call
lods
mov
icebp
sbb
(bad)
aas
mov
mov
out
ja
fcmovnb
mov
mov
call
dec
fild
and
nop
jne
movs
cmp
pop
jge
imul
pop
xor
mov
iret
leave
mov
in
stc
aad
fcomp
call
jmp
(bad)
push
add
frstor
out
jb
(bad)
lods
adc
add
push
mov
pop
dec
cmp
sbb
push
dec
loop
lods
sub
shl
xor
xchg
ins
in
inc
dec
jae
fmul
xlat
add
pop
or
movs
fdivp
cld
push
jnp
cmp
(bad)
pop
inc
push
popa
jnp
xchg
fcmovu
loope
(bad)
scas
mov
sub
nop
(bad)
es
(bad)
cmps
and
lock
std
pushf
fldenv
push
fs
pop
adc
push
inc
repnz
addr16
sub
lahf
mov
ja
out
sub
jne
sti
rol
add
push
cmps
call
push
retf
out
sbb
call
dec
cdq
imul
lods
sub
push
int
adc
or
packsswb
cmp
js
mov
test
hlt
scas
bound
mov
jge
mov
mov
arpl
imul
add
fnstcw
pusha
lahf
mov
mov
(bad)
push
mov
out
shl
scas
fdiv
push
rcl
fs
pop
outs
push
or
push
xchg
push
lock
xor
or
sub
mov
push
mov
push
rcr
ror
(bad)
sbb
pop
lea
lods
xchg
in
inc
pusha
jle
and
xchg
mov
or
and
mov
out
ret
int
arpl
imul
pop
sub
repnz
inc
cmp
sbb
imul
jg
push
dec
and
aam
adc
mov
outs
dec
lds
out
popa
sahf
push
mov
imul
shr
inc
test
dec
mov
sub
mov
mov
mov
sbb
xchg
pusha
inc
push
xchg
mov
mov
test
jle
push
aam
adc
push
loop
loop
imul
jmp
fdivr
std
inc
test
dec
xchg
mov
mov
add
sbb
push
arpl
or
inc
pop
push
test
sub
or
pop
sub
(bad)
push
xor
movs
mov
push
inc
add
jmp
and
cli
lock
das
movs
xor
pop
pop
mov
pop
sbb
enter
cli
jge
rol
in
xchg
fstp
in
stc
jns
pop
xchg
sbb
icebp
inc
shl
aas
mov
nop
sbb
test
fwait
push
and
loop
js
mov
pop
clc
(bad)
out
cli
xor
call
retf
cmp
div
mov
dec
cmp
popf
movs
outs
rcl
imul
leave
sub
inc
fnstsw
inc
loop
pop
mov
rsqrtps
jnp
jo
xlat
test
pusha
jge
mov
ror
lds
mov
push
jp
sbb
pop
jb
or
lods
sub
daa
adc
jb
inc
gs
iret
out
in
adc
(bad)
ret
inc
mov
inc
into
xchg
mov
push
push
dec
mov
cmps
inc
xchg
cwde
xor
mov
das
or
or
fild
mov
xor
neg
adc
sbb
loop
cmps
div
pop
xchg
adc
pusha
inc
lds
xchg
mov
or
sbb
sub
ret
sar
push
push
(bad)
out
ficom
mov
dec
jmp
xor
mov
lods
or
cwde
jbe
(bad)
(bad)
adc
fld
sub
test
cmp
adc
xchg
add
outs
cmp
mov
(bad)
js
inc
mov
inc
pop
xchg
mov
jge
xchg
mov
out
push
fwait
and
mov
xor
inc
and
mov
push
ret
mov
mov
inc
push
push
dec
hlt
fcmovbe
add
lahf
inc
shl
ss
push
pop
xchg
push
int
sbb
frstor
mov
std
cmp
cmps
pop
and
and
jne
sbb
or
cmps
fs
cmps
cmp
pop
ss
jbe
xchg
ret
xchg
retf
daa
inc
movs
std
cmps
aas
push
sub
fstp
std
loope
cmc
call
xchg
mov
ret
add
loop
push
sbb
push
and
mov
xor
mov
cmp
add
rcl
aaa
xchg
add
dec
mov
in
sbb
add
(bad)
adc
or
popf
mov
mov
out
pop
ror
jge
lods
inc
fisttp
mov
add
mov
(bad)
int3
les
retf
push
cmp
inc
cmps
or
push
xor
pop
inc
mov
sbb
test
add
mov
mov
lock
arpl
ins
mov
sti
jmp
ret
xor
xor
js
scas
add
rol
mov
cmp
pop
adc
and
add
sahf
stos
sti
xchg
out
enter
outs
mov
push
mov
mov
into
mov
(bad)
shl
adc
add
jl
test
pop
in
jle
mov
inc
clc
xchg
ds
add
ja
mov
or
mov
push
cs
or
mov
adc
xchg
std
scas
pop
pop
ret
arpl
sahf
addr16
scas
xchg
cwde
adc
inc
jmp
dec
inc
rcr
jns
fwait
jg
mov
push
xor
ret
mov
or
rcr
jo
int
xchg
movs
aam
mov
scas
pop
jge
sub
loop
cld
(bad)
pop
pop
mov
dec
pmulhw
sbb
ins
sbb
fdiv
fisttp
sar
jecxz
outs
sbb
jg
sbb
xchg
and
test
(bad)
popf
and
adc
jmp
loope
push
add
movs
inc
cwde
rcl
xchg
cmp
inc
sbb
mov
imul
inc
mov
mov
push
pop
pusha
(bad)
push
outs
pop
sbb
push
iret
or
cmc
shr
mov
push
mov
cmp
mov
fst
push
pushf
daa
and
lea
xor
aas
pop
test
push
nop
js
jb
pop
sbb
dec
pop
adc
in
or
les
dec
mov
or
jb
inc
xchg
push
aam
jb
lock
pop
xor
mov
imul
(bad)
mov
cmp
sub
mul
add
test
ss
jg
cmps
push
cmps
dec
mov
sti
cmp
adc
imul
pop
sbb
out
lods
data16
pop
clc
mov
and
cmc
adc
cmps
int
aam
loopne
xor
mov
ret
ror
movs
jae
adc
jo
fs
sub
popa
mov
xchg
enter
and
outs
cmps
aaa
adc
xor
and
aas
adc
jge
dec
hlt
dec
pop
rcr
xor
imul
int3
sbb
dec
repnz
jo
sbb
jle
and
js
jg
enter
push
xchg
mov
mov
cmc
test
jg
loop
jmp
pop
push
lea
xor
push
push
fisttp
sub
inc
cmc
(bad)
test
push
adc
mov
or
cmp
std
movups
aam
sub
xor
iret
mov
aam
mov
xchg
addr16
dec
and
adc
jae
retf
mov
sbb
xor
into
sub
cmp
ret
call
ss
and
test
xchg
xchg
outs
arpl
cmp
or
out
mov
pop
test
xor
pushf
mov
ror
push
call
scas
cmps
rcl
adc
add
call
push
out
and
ins
sbb
fbld
jl
cli
popa
mov
push
jae
inc
mov
sbb
mov
bound
jb
push
test
sub
pop
mov
xchg
stc
sbb
fs
lock
add
push
jns
jns
es
imul
inc
imul
into
mov
aad
adc
fcomp
pop
call
imul
xchg
adc
out
push
ds
iret
jnp
ret
dec
jg
or
ret
mov
ja
inc
hlt
dec
ja
add
fldenv
pusha
push
ins
add
xor
data16
mov
push
ret
xor
(bad)
jl
sti
mov
repz
mov
mov
rep
in
push
jp
xor
dec
ins
jnp
jbe
(bad)
xor
in
cmp
mov
cmp
mov
sub
es
(bad)
mov
xchg
shr
hlt
loop
sbb
push
dec
rcr
into
fst
enter
sub
cmp
adc
push
mov
mov
dec
push
test
js
ins
scas
pop
and
sub
inc
test
adc
stc
xchg
sti
pop
(bad)
pop
push
dec
retf
adc
shl
cs
push
or
cmps
int3
mov
cmovns
add
imul
inc
inc
sub
adc
mov
mov
fist
paddusw
jle
ficom
bound
stc
cmp
mov
sbb
dec
js
scas
pop
rcr
inc
and
sub
ins
into
xor
dec
sbb
add
push
sub
mov
inc
dec
fldenv
add
jns
hlt
inc
sub
jno
fldcw
loope
pop
in
mov
scas
call
mov
movs
popa
je
xchg
jmp
mov
ret
mov
sub
mov
ja
pop
push
and
mov
mov
xor
dec
mov
std
rcl
imul
push
mov
cmp
ss
pop
jae
jo
sbb
cmc
pop
pop
and
ja
call
pop
in
das
imul
imul
xchg
xor
leave
inc
aad
xchg
xchg
mov
loop
nop
sbb
(bad)
mov
ret
(bad)
(bad)
cwde
push
jno
in
sbb
xchg
hlt
jle
aad
dec
push
push
xor
push
scas
jmp
pop
test
ret
sbb
in
retf
adc
xor
pop
scas
sub
repz
movs
dec
or
pop
inc
ret
lds
inc
rcl
js
adc
mov
jmp
in
js
xchg
mov
push
add
test
push
pop
mov
adc
jge
in
dec
or
imul
into
iret
mov
xor
popf
out
push
cmp
push
jmp
mov
ds
outs
sbb
xor
shr
push
js
icebp
into
xchg
mov
mov
push
call
jg
gs
mov
mov
adc
stos
out
cld
jg
shr
pop
mov
btr
mov
hlt
pusha
push
mov
fsub
mov
mov
xchg
int
(bad)
xchg
and
pop
stos
(bad)
imul
pop
movs
(bad)
xchg
inc
(bad)
aad
and
sbb
xchg
cmp
cmps
cmp
xor
repnz
add
mov
loopne
and
jmp
test
shr
jle
lea
sbb
xchg
leave
mov
jae
mov
pop
pcmpeqd
imul
mov
lods
mov
call
js
push
adc
ss
shr
ja
leave
cli
ret
test
or
inc
sbb
sar
loopne
mov
push
sub
sbb
fidivr
mov
mov
mov
je
pop
and
jb
mov
retf
das
call
test
sbb
lock
sbb
mov
jbe
sbb
sbb
stos
ds
pop
sahf
mov
cmps
pop
push
xchg
out
cmps
int
sbb
retf
dec
adc
stos
jbe
sub
inc
and
push
xor
scas
xchg
sub
sti
sbb
ret
mov
popa
cwde
jmp
jmp
fidivr
add
push
je
pop
nop
scas
push
retw
es
fwait
leave
fisttp
mov
out
outs
adc
pop
in
jmp
daa
inc
lea
and
repz
bound
into
adc
lods
jl
adc
cs
hlt
ficomp
popa
mov
xchg
ret
sub
es
sub
mov
inc
jmp
cmp
mov
(bad)
(bad)
jp
xlat
mov
sbb
jmp
mov
sbb
inc
test
lea
mov
inc
rcl
and
arpl
cli
push
xchg
shr
fwait
xor
jmp
rcr
(bad)
inc
xchg
lar
fnsave
add
idiv
retf
sbb
int
or
push
fistp
xor
pop
call
std
dec
add
xchg
aad
call
sbb
add
mov
push
test
lods
push
je
ins
int
push
hlt
push
xchg
rol
les
push
sar
in
sbb
add
(bad)
adc
pushf
or
nop
pop
fcomip
inc
jg
(bad)
sbb
add
dec
loope
stos
dec
nop
mov
mov
xchg
mov
mov
push
movs
cwde
xchg
clc
or
mov
inc
pop
push
(bad)
loopne
sbb
xchg
into
cdq
enter
gs
bsf
sub
cmp
aam
enter
mov
ins
inc
dec
lahf
lea
lock
aaa
out
and
aaa
mov
cmc
push
leave
and
adc
std
xlat
or
jb
pop
mov
fwait
add
or
popf
mov
push
and
data16
xor
pop
xlat
test
cmp
pushf
sub
call
js
aaa
fstp
(bad)
push
fadd
mov
fldl2t
add
nop
das
in
dec
jnp
ss
or
jg
imul
sbb
ins
xchg
das
retf
hlt
addr16
cmp
mov
mov
lea
in
inc
and
sbb
jmp
jno
sub
or
loopne
out
mov
cmps
xchg
(bad)
aad
cmps
sbb
inc
es
sub
mov
ror
cwde
nop
adc
adc
rcr
aas
ins
sbb
movs
sub
sbb
dec
nop
add
jg
push
daa
sbb
xchg
bound
cs
loope
lock
out
pop
or
movntq
rol
and
(bad)
in
fidivr
stos
out
push
(bad)
push
push
out
repz
mov
call
aaa
push
inc
mov
cmp
xchg
jb
xchg
mov
push
cmp
cmp
(bad)
lahf
ds
fld
stc
pushf
int
push
push
dec
mov
lock
mov
cmp
sbb
push
sub
xchg
loopne
test
mov
in
mov
jecxz
jno
pop
loope
mul
mov
sbb
push
pop
js
pop
pushf
idiv
sar
int
mov
call
ins
cmp
nop
push
enter
loopne
fist
rol
fsubr
pop
push
push
scas
test
xchg
out
mov
das
enter
mov
les
ficom
dec
xor
add
xchg
sbb
enter
out
(bad)
int3
movs
stc
call
sbb
aas
mov
mov
cmp
sub
fist
dec
(bad)
stc
scas
arpl
adc
dec
mov
push
nop
lahf
mov
fcomp
aaa
loope
(bad)
mov
ret
xchg
xchg
sub
fmul
jmp
addr16
loope
lock
das
dec
inc
adc
mov
test
cs
sbb
cmc
mov
pop
aaa
into
(bad)
out
jnp
in
jbe
adc
scas
out
pop
jmp
movs
rol
add
sub
ret
popa
(bad)
jmp
in
jne
mov
mov
(bad)
idiv
mov
inc
jge
pop
dec
cmc
cmp
stos
fisttp
adc
lock
mov
adc
test
(bad)
mov
enter
jae
inc
sub
imul
rol
push
es
push
sbb
pop
jae
fstp
cdq
test
mov
test
pop
push
push
adc
cmps
data16
add
(bad)
jmp
mov
ss
ds
mov
cs
rcl
adc
les
imul
mov
stos
or
aas
ficomp
mov
scas
(bad)
out
xchg
xor
ror
inc
mov
xchg
loopne
inc
push
mov
gs
icebp
std
mov
mov
push
sbb
test
pushf
fdivr
loop
inc
xor
aas
sub
mov
std
sahf
stos
lods
int
dec
jl
pop
mov
mov
cld
mov
mov
jl
leave
mov
xchg
sub
cmp
push
push
inc
call
mov
adc
pop
add
imul
ffree
xchg
cmps
fild
xor
cs
in
mov
mov
mov
pop
adc
(bad)
popf
or
lahf
mul
add
aam
cld
cwde
sub
mov
imul
cmp
lods
ret
mov
call
lods
call
push
iret
out
shl
into
xchg
mov
mov
push
jg
aam
cmc
loope
popf
mov
sub
(bad)
(bad)
mov
(bad)
cld
stos
out
cmp
outs
dec
push
aaa
dec
sbb
xchg
dec
or
data16
lock
push
xor
mov
add
(bad)
cmps
(bad)
fild
bound
adc
mov
test
scas
mov
retf
or
cmps
add
call
inc
push
push
xor
dec
jmp
lods
(bad)
xchg
mov
pop
loopne
les
cmp
stc
xchg
(bad)
pop
loopne
repnz
xchg
cmc
scas
and
jne
je
pop
mov
inc
sub
pop
mov
sub
dec
mov
lods
leave
cwde
mov
lds
stos
ret
mov
pop
sbb
jmp
xor
addr16
push
push
mov
push
sbb
dec
nop
sti
(bad)
(bad)
pop
jg
cmp
or
xor
pop
mov
fbstp
or
cmc
jecxz
loope
gs
xchg
fsubr
jg
cmp
push
loop
push
push
and
movs
fisttp
jo
dec
sti
mov
arpl
sbb
add
ret
or
dec
pop
push
or
push
add
dec
cmc
ret
mov
leave
arpl
pop
fsub
xchg
movs
sub
sub
pusha
adc
mov
dec
ror
lahf
(bad)
push
rol
push
pop
retf
(bad)
push
and
mov
sub
mov
popa
and
and
addr16
std
scas
push
jl
pop
ins
sub
dec
bound
inc
aam
(bad)
sahf
push
cdq
out
cmps
and
pop
pop
and
pop
dec
mov
add
or
aam
fild
push
mov
movs
xor
add
adc
repz
mov
or
and
xchg
and
sbb
iret
xchg
xchg
add
mov
mov
mov
push
ror
clc
fwait
xchg
retf
and
or
xchg
das
jge
es
sbb
sub
out
xchg
(bad)
pop
or
cmp
mov
cmp
ss
mov
retf
mov
test
inc
pop
jmp
add
xchg
mov
bound
dec
cli
mov
push
pushf
sbb
xor
mov
sti
hlt
mov
push
rcl
mov
adc
mov
rol
push
fs
xchg
mul
adc
std
inc
es
icebp
dec
es
lds
stos
ret
mov
inc
adc
pop
loop
xor
push
dec
sbb
fwait
sbb
push
mov
stos
(bad)
aas
jnp
sub
mov
test
xor
hlt
mov
sbb
in
xchg
mov
mov
imul
mov
lock
sub
xor
daa
ja
hlt
xchg
xchg
mov
jbe
in
rcr
pop
cmp
stc
and
fisttp
mov
in
cwde
cmp
or
div
test
fisubr
push
mov
push
dec
cmp
add
mov
retf
hlt
mov
mov
add
stc
sbb
mov
adc
push
push
cmps
xlat
add
aas
and
bound
out
imul
(bad)
xchg
arpl
pop
adc
or
sbb
icebp
pop
adc
and
lods
into
cmps
lds
cmp
lock
mov
sub
cmp
dec
or
je
stc
test
(bad)
push
push
adc
clc
cmps
hlt
mov
xchg
xor
scas
out
xchg
data16
bound
inc
mov
stc
mov
iret
pop
sub
cld
arpl
ret
fucomi
test
outs
adc
xor
fwait
in
call
pop
jp
mov
pop
outs
das
cmc
outs
aam
cmps
aaa
pop
cmp
cdq
sahf
frstor
add
rol
inc
aaa
pusha
aam
rcl
gs
lods
rol
mov
xchg
jae
jle
adc
jns
icebp
mov
shl
hlt
mov
sar
cmp
pop
xchg
cli
or
outs
sub
mov
into
cwde
into
mov
clc
mov
outs
sbb
xchg
add
xchg
lds
push
(bad)
mov
mov
sub
sbb
stos
cli
xchg
mov
dec
or
sub
add
out
push
push
imul
fmul
jno
ret
inc
add
jmp
mov
std
mov
in
int3
je
adc
outs
fsubr
movs
shl
jno
repnz
adc
rcl
into
ret
mov
ins
xor
add
movs
rcr
cmps
out
rcl
sub
retf
xchg
fcom
add
xchg
pop
add
stos
cli
push
xchg
shl
shl
outs
sub
dec
sub
cmc
xchg
or
mov
je
arpl
inc
pop
outs
call
sbb
xchg
(bad)
mov
xchg
rcl
imul
add
xor
push
adc
pop
jg
cmp
mov
inc
fdivr
hlt
into
stos
cli
jmp
aas
push
xlat
rcr
inc
or
cs
or
sahf
imul
into
mov
fwait
push
xor
pop
cld
outs
adc
xor
adc
outs
add
ins
sub
call
fst
cmp
or
fmul
jle
or
pop
sub
lds
xor
xchg
(bad)
sbb
jb
inc
leave
cdq
repnz
xor
stc
and
rcr
push
xchg
les
es
pushf
hlt
xchg
push
xchg
aad
mov
nop
dec
dec
lea
pop
sub
stos
retf
ret
push
inc
mov
sbb
rcr
sbb
outs
add
lods
lds
push
fisubr
mov
out
jno
pop
push
(bad)
popa
aaa
jo
mov
movs
inc
push
repnz
pop
sub
pop
jmp
mov
cmp
jo
test
mov
mov
test
push
out
xor
and
fimul
clc
mov
push
pop
das
js
(bad)
xchg
leave
adc
bound
sbb
or
push
inc
sub
aad
dec
and
xchg
cwde
icebp
inc
push
imul
test
test
stos
push
sbb
jnp
mov
push
and
inc
ins
and
in
xchg
push
adc
movs
sub
and
mul
mov
in
mov
jae
stos
call
pop
pop
add
lock
jecxz
(bad)
mov
loopne
xor
mov
mov
sub
sbb
repnz
and
push
cmp
pop
sbb
mov
(bad)
(bad)
cli
mov
mov
mov
mov
add
dec
es
bound
sub
(bad)
out
sub
fdivr
inc
or
xchg
fnstcw
mov
arpl
out
idiv
jmp
repnz
xor
inc
adc
mov
out
test
jno
jns
out
(bad)
mov
imul
mov
sub
stc
ins
aaa
inc
inc
push
fs
lahf
push
js
jle
jl
pop
jb
ds
pop
push
les
sub
push
imul
fidiv
and
xchg
xchg
shl
test
shl
mov
push
pop
out
scas
ins
sub
or
rcr
js
pop
mov
repz
retf
mov
adc
mov
iret
mov
add
mov
pop
cmp
mov
and
jbe
dec
sbb
jnp
and
mov
inc
sbb
(bad)
sub
aam
xchg
mov
jbe
nop
les
pop
adc
fbstp
(bad)
sbb
bound
mov
push
adc
in
inc
cmp
ins
sub
mov
inc
push
or
lock
jmp
jl
cmc
sub
test
cmps
in
out
nop
test
mov
ret
fcomp
cmps
int
dec
movs
jmp
sar
adc
es
sbb
sbb
dec
daa
inc
jb
add
test
cmps
jp
adc
sar
fwait
mov
cmp
inc
adc
inc
lock
or
loopne
enter
inc
sbb
cmp
mov
ficom
nop
mov
pop
jae
push
fistp
jae
jl
lds
stos
jecxz
imul
jmp
ficom
leave
stos
pop
or
xchg
cli
mov
ins
ss
sub
jo
imul
inc
fucom
popf
rcl
lock
call
(bad)
scas
ret
push
jecxz
retf
add
int
in
add
mov
jg
jge
push
sti
cmps
ds
push
pop
cwde
retf
push
or
arpl
hlt
dec
add
dec
pop
je
scas
imul
(bad)
frstor
push
and
rep
test
xor
sbb
jns
jb
cli
jg
fimul
push
dec
mov
loop
dec
dec
pop
add
dec
jae
cmp
(bad)
dec
or
dec
mov
pop
mov
push
lods
cli
retf
ins
pop
dec
and
push
push
adc
call
(bad)
mov
or
retf
xchg
std
lods
std
xchg
cmp
jne
dec
js
mov
retf
mov
stos
xchg
ret
iret
popw
push
inc
push
sbb
pop
xor
jne
add
jns
pop
mov
fsubr
inc
ss
mov
div
icebp
sti
movs
(bad)
add
scas
cli
test
imul
sub
ret
arpl
cdq
ret
(bad)
leave
adc
(bad)
mov
bound
dec
push
adc
jae
stos
stos
in
fidiv
push
inc
sbb
inc
or
mov
(bad)
push
loope
aad
xchg
cmp
test
mov
and
ror
and
mov
cmp
fistp
cs
mov
scas
jl
jns
in
lods
(bad)
mov
out
mov
cwde
jbe
pop
sbb
sub
rol
jne
bound
leave
cwde
or
mov
aad
ins
xor
hlt
in
(bad)
jo
add
jb
mov
test
sub
jmp
fisttp
repnz
in
nop
shr
pshufw
inc
sub
push
adc
lock
mov
jmp
int3
mov
mov
dec
pop
pop
sub
xchg
cwde
(bad)
stc
xchg
pop
add
mov
add
pop
scas
cli
jge
push
cmp
aas
mov
fwait
int3
call
xchg
sub
xor
inc
test
cmp
adc
jnp
leave
mov
cmp
push
je
lds
xchg
rcr
xlat
into
mov
xor
pop
or
jbe
add
test
mov
mov
popf
es
or
sub
imul
push
push
adc
adc
cdq
mov
xchg
mov
dec
pusha
xor
or
ins
retf
imul
adc
inc
adc
adc
(bad)
(bad)
inc
sbb
imul
fisub
sbb
cmp
sbb
stc
jg
lds
mov
adc
loop
pop
dec
xor
mov
mov
mov
or
pushf
fdivr
test
fisttp
push
or
jl
cmp
inc
mov
adc
je
add
mov
cmps
iret
lods
sbb
mov
cwde
rcl
adc
nop
in
mov
popa
cmp
cdq
fst
and
shr
retf
rol
sbb
mov
xor
adc
xor
daa
arpl
das
inc
xor
addr16
call
or
int
mul
stos
fcom
loop
enter
jmp
add
ds
sub
cmps
lock
jle
sbb
or
cs
ret
xchg
arpl
sub
ret
outs
or
fldenv
rol
fimul
loop
dec
jmp
jecxz
inc
sub
xchg
aad
xlat
cmovs
xchg
push
dec
sbb
fist
jb
jno
call
int
pop
cmp
push
sbb
mov
stos
xchg
fdivr
fidivr
pop
sbb
mov
xor
dec
das
nop
aam
inc
les
sbb
pop
pop
jb
mov
mov
mov
movs
leave
mov
xor
dec
retf
outs
add
sbb
jg
repnz
neg
jp
enter
jp
push
cdq
fisttp
jno
mov
xchg
push
aam
out
mov
imul
and
fisttp
iret
mov
test
cdq
repz
clc
(bad)
xchg
pop
call
dec
adc
clc
scas
sub
xlat
xchg
fnstsw
mov
addr16
mov
jmp
(bad)
xchg
jnp
loop
stc
nop
push
xlat
addr16
or
inc
rol
ror
scas
pop
push
ret
leave
mov
shr
jp
inc
in
lods
std
sti
xor
xchg
xchg
mov
loop
out
push
add
je
and
fst
scas
int3
add
ficomp
out
push
loope
add
mov
test
(bad)
adc
add
mov
add
gs
mov
popf
mov
scas
aam
add
sbb
lods
test
int3
push
and
or
push
add
xor
inc
add
inc
xchg
in
mov
mov
in
xor
repz
(bad)
cmp
jmp
mov
sti
scas
adc
dec
mov
xchg
fidiv
jle
pop
retf
xchg
lock
jae
push
add
jmp
(bad)
mov
sub
imul
daa
rcr
nop
movs
fiadd
jns
jp
add
(bad)
fisttp
add
xor
cwde
(bad)
sti
cwde
sbb
mov
mov
aam
retf
xor
dec
mov
jbe
inc
xchg
pushf
loope
ins
or
clc
lods
xor
or
sub
fild
mov
pop
push
and
test
(bad)
dec
or
fs
jae
and
(bad)
ja
xadd
jg
cmp
jb
test
xchg
dec
in
xor
push
sti
mov
dec
es
add
stc
rcl
lds
jmp
ss
add
jg
cwde
sbb
jmp
inc
and
cmp
pop
in
xchg
dec
push
imul
mov
leave
xchg
stos
shl
js
in
clc
and
mov
cwde
outs
jmp
or
ror
mov
out
test
hlt
mov
adc
xchg
(bad)
fstp
or
dec
out
dec
adc
rol
sub
outs
or
dec
cmp
aam
add
(bad)
dec
pop
retf
iret
mov
ds
mov
hlt
adc
aam
fdivr
inc
or
test
adc
pop
hlt
jbe
fstp
pop
push
xor
inc
sbb
jno
pop
mul
(bad)
push
push
fs
(bad)
mov
sbb
mov
sbb
stos
stos
ret
push
je
push
rcr
int
pop
lock
(bad)
fsubr
push
(bad)
mov
popa
push
sub
inc
in
aam
lods
inc
jmp
sub
(bad)
push
or
rcr
mov
pop
add
mov
test
add
mov
push
push
ds
cmp
pop
add
movs
je
std
mov
mov
push
dec
sbb
icebp
cmps
jecxz
jno
enter
inc
fld
push
sbb
push
in
or
jmp
addr16
iret
cmp
dec
out
xlat
aam
iret
add
pop
into
cmp
mov
test
jno
push
inc
adc
pop
arpl
sbb
jbe
push
mov
mul
lods
mov
mov
cmp
mov
or
sbb
clc
outs
cmp
jmp
imul
cmc
movs
into
pop
add
inc
(bad)
pop
pop
dec
pop
sbb
dec
sbb
mov
mov
cdq
ret
xchg
call
test
cmps
cmp
and
inc
loop
sub
daa
pop
(bad)
stos
sub
mov
popa
sbb
mov
retf
pushf
ins
cmp
and
jmp
xchg
rcl
(bad)
sub
popa
hlt
movs
popf
shl
and
repnz
je
fmul
push
xchg
fild
jb
shl
mov
mov
lahf
sti
xchg
lock
scas
lods
repz
jmp
dec
inc
icebp
push
or
dec
cmovae
cmp
pop
inc
xor
sub
arpl
stos
in
test
js
(bad)
mov
nop
inc
sub
mov
fstp
or
dec
data16
aad
inc
cmp
inc
sbb
mov
mov
jle
fsubr
mov
mov
xor
addr16
push
adc
mov
je
adc
lods
fld
scas
retf
sub
test
hlt
mov
rcr
ins
stos
out
repz
xchg
mov
ss
mov
in
sub
cmp
mov
sbb
jle
call
scas
fisttp
pop
push
cmp
fidivr
inc
mov
(bad)
bound
push
jbe
jo
jne
out
jmp
daa
std
xchg
test
test
and
stos
xor
out
outs
or
add
scas
sbb
inc
xor
call
push
add
push
out
ret
xchg
xchg
mov
cmp
cdq
hlt
popf
pop
sub
fwait
shl
movs
pop
jo
or
adc
cmp
push
inc
call
xchg
add
mov
test
test
mov
xor
mov
sbb
addr16
pop
fdivr
out
push
out
or
pop
mov
scas
movs
cmp
pop
and
call
add
cmps
test
add
push
test
loopne
jl
es
mov
cmp
jge
loopne
cmps
movs
pop
shr
jnp
adc
cdq
(bad)
and
(bad)
iret
dec
push
mov
pop
mov
adc
mov
xchg
jge
lods
xor
dec
xor
(bad)
call
cmps
int
(bad)
pop
mov
xchg
jge
icebp
or
data16
fnstenv
into
lock
inc
(bad)
outs
push
cmps
sub
inc
mov
out
out
dec
call
test
lahf
mov
pop
fwait
and
dec
(bad)
xchg
mov
adc
xor
aam
fldcw
add
arpl
mov
xchg
movs
pusha
xor
mov
movs
mov
sbb
icebp
stos
sti
fwait
test
pop
rcr
mov
and
dec
push
pop
stos
stos
and
and
jp
test
out
sub
jno
addr16
shl
sbb
cmp
mov
sbb
push
dec
ja
and
sub
sub
mov
jns
pop
lahf
cmc
iret
jnp
lds
and
jno
pop
loope
pop
mov
out
rol
jae
js
push
mov
xor
inc
dec
mov
sub
sbb
push
pop
dec
and
in
aam
shl
jge
call
and
leave
mov
pushf
retf
ss
jmp
imul
into
sub
jno
test
jne
(bad)
in
adc
test
mov
nop
jo
xchg
cmp
cmc
addr16
lock
js
xchg
pop
push
add
or
cmp
fimul
cmp
sub
enter
and
mov
stos
jecxz
pop
xor
mov
push
(bad)
cmp
pop
push
stos
dec
call
or
inc
fbstp
pop
sbb
mov
sbb
xlat
aas
dec
mov
in
or
test
enter
inc
retf
and
adc
loop
mov
jmp
out
push
mov
shl
or
xor
shl
inc
xor
cwde
cli
mov
popf
pop
pop
mov
pop
mov
sar
in
jbe
or
bound
int
iret
sub
push
test
sahf
cmc
adc
scas
adc
in
inc
or
pusha
jg
shl
jno
addr16
xor
cmp
adc
ss
ret
out
pop
ins
(bad)
xlat
imul
lea
mov
fucomi
dec
nop
ss
daa
test
cmps
(bad)
jb
adc
mov
and
push
movaps
push
imul
jns
mov
imul
ret
add
jge
ret
add
ja
inc
mov
ret
mov
mov
cmp
xor
loope
cdq
rol
inc
fwait
lods
sub
shr
dec
jl
(bad)
(bad)
retf
lods
mov
push
dec
adc
inc
xor
pop
aam
fadd
mov
stos
shl
lods
push
xchg
xchg
fst
mov
mov
hlt
pop
scas
push
and
out
jmp
mov
and
xor
xchg
fbstp
cdq
pushf
push
cmps
(bad)
out
xchg
loopne
inc
jmp
dec
add
pop
repz
pop
mov
mov
aad
inc
pop
add
cmp
jle
call
mov
dec
jecxz
mov
fadd
lahf
push
mov
and
mov
jmp
es
in
jmp
cmp
fcomip
cmps
push
ja
mov
lahf
inc
cmp
loopne
mov
or
pop
or
mov
loope
fsub
inc
push
cld
xor
shl
call
add
sbb
out
jno
movs
fcmovne
fwait
xchg
cmp
cs
dec
add
or
pop
ins
mov
sub
ds
pop
dec
jbe
arpl
sbb
dec
test
push
idiv
xlat
test
adc
outs
ins
jb
cmp
xchg
pop
and
fsub
fcomi
jg
fisub
inc
cmp
mov
jp
inc
int3
mov
sbb
sub
pop
inc
sahf
sbb
popa
dec
lds
test
mov
frstor
and
in
cmps
rol
mov
ins
push
std
fisttp
cdq
shl
jmp
nop
mov
sub
cmp
or
cmps
jl
mov
sbb
inc
or
mov
mov
push
pop
mov
mov
sub
inc
pop
jo
inc
dec
pop
pop
cmps
lock
out
loopne
cmp
cmp
and
daa
sti
stc
add
sub
sub
fdiv
xor
(bad)
scas
inc
or
jae
loop
and
adc
jne
(bad)
mov
imul
pop
bound
pop
sbb
shr
(bad)
xlat
in
int
jmp
push
push
shr
arpl
push
out
dec
pop
mov
sbb
(bad)
dec
jae
out
or
add
pop
or
lock
iret
and
add
hlt
aad
lock
dec
xor
std
imul
push
push
es
loope
jmp
sbb
pop
and
or
cli
jmp
dec
mov
not
mov
mov
push
inc
movs
jbe
push
mov
xor
nop
or
dec
call
in
mov
outs
ja
les
pop
cmps
adc
or
fst
rcr
std
cmp
retf
jb
and
cmp
adc
sub
js
sub
mov
stos
and
aam
js
xchg
add
fisub
fmul
jg
xor
push
adc
in
ins
(bad)
and
sbb
in
aad
jl
mov
dec
mov
push
lock
div
(bad)
int
pop
sbb
inc
aam
fld
cmc
call
push
pmaxub
dec
pop
add
daa
add
scas
jl
lea
xchg
push
call
mov
(bad)
or
dec
cmp
cmp
in
or
xlat
mov
inc
jecxz
sub
pushf
sbb
aad
imul
hlt
pop
test
push
xor
mov
and
push
push
test
jae
lods
iret
xor
jae
in
mov
fadd
and
mul
scas
fsubr
mov
fnstsw
jge
imul
lahf
fldcw
dec
pop
xor
stc
push
mov
adc
ja
dec
xor
mov
dec
ja
bound
test
and
ret
test
gs
(bad)
in
mov
mov
or
outs
and
sub
mov
call
adc
or
outs
(bad)
(bad)
int
clc
or
test
ret
mov
add
or
mov
scas
xor
stos
imul
jle
mov
imul
and
xchg
rcl
or
dec
adc
in
ret
mov
call
sahf
push
add
dec
out
pop
stos
frstor
shr
test
mov
cli
jae
pop
sahf
mov
fs
mov
(bad)
fiadd
xchg
aas
and
sub
(bad)
mov
xor
pop
aam
sub
shl
inc
cmp
leave
stos
in
inc
xor
push
or
dec
ds
imul
pop
push
adc
sbb
fild
add
test
mov
or
les
or
jl
hlt
mov
cdq
nop
out
test
mov
mov
dec
pop
mov
or
popa
cmp
mov
push
jg
in
cld
fsub
pop
inc
sbb
add
mov
inc
loope
push
jb
pusha
xor
ds
sub
outs
xchg
and
sbb
mov
in
repz
hlt
mov
mov
pop
fs
mov
dec
mov
movs
shl
dec
inc
in
inc
sbb
call
std
push
call
daa
mov
and
addr16
bound
xor
or
pop
inc
pop
pop
clc
dec
fldenv
test
mov
stos
cmp
mov
ss
retf
jmp
sub
loop
xchg
call
loop
inc
dec
or
loopne
mov
cmp
sahf
jnp
sbb
jno
mov
xlat
test
dec
fsub
clc
fwait
movs
cmp
pop
dec
daa
or
imul
test
cld
jmp
pushf
xchg
push
mov
pop
frstor
gs
imul
jle
or
fwait
add
xor
in
mov
ror
fisttp
mov
or
push
mov
xor
push
pop
jl
jb
push
xchg
mov
ds
out
sub
jae
and
je
sub
sub
jne
jg
cmc
arpl
add
inc
dec
sbb
cs
inc
jmp
lods
ds
push
and
fwait
adc
popa
xchg
mov
shl
in
call
cmp
rcl
outs
call
call
int
call
cld
fsubr
push
sub
mov
xor
je
mov
mov
fiadd
test
ds
inc
dec
sub
(bad)
rol
addr16
or
shr
leave
in
mov
pop
repz
das
mov
in
pop
sub
out
and
xlat
cmp
lea
fs
stos
mov
xor
adc
cmp
ror
or
lods
enter
xchg
mov
(bad)
ficomp
pop
or
jae
retf
out
and
xchg
sti
pop
jecxz
jb
mov
es
lods
jb
cli
xor
popf
lahf
shr
sbb
out
(bad)
pop
cmp
jmp
cmp
adc
xor
mov
adc
ja
jnp
cwde
mov
into
outs
pop
(bad)
lea
add
or
add
stos
add
mov
repnz
xchg
fld
mov
inc
in
aad
xor
mov
iret
test
jns
jbe
push
test
inc
or
in
sub
jmp
push
mov
jge
sub
dec
mov
or
sub
callw
ds
outs
pusha
xchg
(bad)
pusha
and
xchg
test
mov
jl
inc
and
movs
ss
and
scas
jle
into
(bad)
push
push
adc
test
outs
inc
mov
jne
push
js
call
pop
mov
cmp
sbb
dec
int
cmps
inc
adc
dec
jmp
movs
test
dec
xchg
shl
icebp
mov
push
add
push
xchg
pusha
xchg
dec
adc
vphaddwq
mov
push
or
rcr
in
dec
xchg
ins
jno
mov
add
dec
mov
ror
xlat
in
mov
mov
sar
pop
cmp
fst
int
jnp
mov
pop
enter
in
scas
pop
sub
ins
mov
bswap
sub
sahf
pop
ret
mov
fucompp
gs
sub
push
ficom
retf
cmp
pop
mov
mov
adc
jno
or
dec
out
sub
aas
or
(bad)
stos
gs
pusha
jno
and
mov
jb
xchg
push
jne
fsubr
adc
xchg
push
mov
sbb
mov
push
cmp
out
not
mov
retf
shl
sub
pushf
or
sub
adc
mov
sub
aaa
clc
dec
test
dec
mov
(bad)
push
imul
lods
add
mov
pusha
jns
and
cmp
fwait
div
pop
div
mov
sbb
sbb
icebp
imul
pop
dec
rcl
out
push
pusha
mov
or
push
dec
or
mov
xor
xor
xor
push
jp
loopne
retf
mov
not
mov
inc
cmp
and
push
xor
fadd
fisttp
lods
jno
pusha
jne
icebp
pushaw
mov
push
add
aam
cmp
sahf
adc
jge
or
xor
jbe
out
retf
add
or
dec
mov
out
dec
mov
repnz
retf
or
sub
sbb
add
mov
mov
jb
icebp
daa
adc
jae
out
push
in
(bad)
cwde
mov
or
fnstcw
les
outs
iret
(bad)
out
mov
dec
bound
int3
js
aaa
sbb
stos
jo
cli
out
inc
mov
mov
(bad)
xor
mov
movs
xor
or
fldenv
jge
(bad)
outs
inc
mov
arpl
adc
jnp
and
fdivr
lods
and
or
push
out
(bad)
mov
jmp
mov
mov
mov
cli
sub
add
xchg
push
fild
jp
fs
mov
(bad)
icebp
or
cmps
mov
sbb
lods
adc
push
outs
inc
call
fs
inc
pusha
xor
jne
xchg
mov
jbe
sub
add
icebp
int3
out
mov
mov
inc
mul
push
xchg
dec
mov
idiv
(bad)
jno
inc
lahf
aad
loope
add
and
add
ja
pop
stos
call
or
lods
add
xor
adc
inc
cmc
sbb
inc
push
in
sahf
inc
pushf
out
push
test
dec
in
push
sbb
fild
jnp
adc
(bad)
cmp
xor
pop
cld
mov
and
inc
mov
and
mov
(bad)
sti
dec
hlt
in
sbb
(bad)
xor
jnp
shl
in
mov
push
test
add
test
push
inc
fs
mov
je
lods
iret
pop
pop
mov
dec
inc
ds
cld
inc
xor
xlat
xchg
es
adc
add
push
loop
jno
jecxz
push
pop
adc
pop
pop
out
cmp
mov
cmp
test
xchg
jecxz
push
(bad)
dec
adc
hlt
mov
in
mov
mov
std
or
ror
mov
xor
retf
test
out
pop
lea
cwde
cmps
adc
int
push
xor
cmp
ja
clc
sub
scas
push
and
inc
pusha
adc
mov
and
and
ins
push
out
mov
and
aad
push
sbb
mov
jno
aad
or
add
sbb
ror
test
sub
iret
xor
mov
mov
js
add
xor
stos
(bad)
retf
aad
xchg
jle
hlt
sbb
mov
shl
and
cli
inc
push
push
test
xchg
xchg
jmp
and
and
(bad)
push
cli
ins
adc
js
xchg
dec
adc
in
or
jbe
loope
ret
(bad)
sub
inc
mov
xchg
dec
ret
mov
aad
mov
call
adc
ret
ins
hlt
fmulp
jns
or
fisttp
pop
pop
inc
and
inc
movs
push
cmp
sbb
out
pop
int3
mov
test
repnz
ds
mov
xor
imul
mov
shr
outs
pop
sti
jno
cmps
dec
loop
sbb
aas
cmps
cmp
fadd
xchg
int3
dec
aaa
pop
lds
mov
fiadd
cmp
mov
pop
push
cmp
ins
push
cmp
xchg
leave
adc
inc
pop
popa
pop
mov
xchg
cdq
iret
add
nop
mov
pop
hlt
adc
fucompp
xor
dec
jmp
movs
je
out
lock
imul
imul
mov
add
pop
mov
sub
push
or
mov
or
loope
pop
mov
sub
mov
pop
pop
and
jno
stos
mov
in
pop
mov
loopne
nop
ret
lods
loope
pop
repnz
scas
in
sub
xchg
fld
inc
push
xchg
repz
xor
mov
dec
mov
enter
pusha
(bad)
enter
pop
fnstenv
cdq
and
iret
idiv
push
dec
lods
daa
movs
cli
jb
sub
lods
(bad)
shl
xchg
push
pop
mov
(bad)
dec
cli
bound
movs
and
cdq
mov
sbb
or
and
imul
rcr
les
add
dec
mul
gs
in
shl
ins
(bad)
cdq
fdiv
test
jns
mov
or
xchg
mov
push
addr16
jns
cmp
pop
mov
aad
pop
lea
movs
sahf
mov
and
xor
loop
(bad)
xor
push
mov
dec
jb
mov
or
xchg
cmps
das
gs
jecxz
sbb
mov
jge
add
xchg
mov
bound
adc
xor
cmp
and
mov
std
lock
cwde
stos
sub
outs
push
mov
bound
repz
pop
loope
add
test
cmps
mov
dec
mov
loop
xchg
jmp
xchg
dec
in
mov
xchg
leave
and
xor
and
out
int
mov
lahf
inc
loopne
lods
aad
aas
pop
add
fwait
(bad)
repz
pop
pop
je
pop
daa
(bad)
mov
mov
(bad)
jg
jle
mov
in
ins
pop
in
dec
sbb
mov
call
xlat
cmp
fcom
leave
push
pop
cs
mov
pusha
loopne
pop
pop
xchg
adc
je
and
ins
adc
mov
mov
add
sub
stc
cdq
inc
push
enter
mov
sub
test
in
fcom
test
ds
pop
adc
inc
int
cmp
add
mov
lahf
push
push
fmul
mov
xor
jne
xor
sahf
jg
sbb
dec
call
jmp
push
in
in
jmp
fistp
inc
or
mov
add
and
pop
fcom
outs
xor
jmp
mov
call
jbe
nop
outs
or
lahf
mov
add
cwde
mov
mul
xchg
enter
fild
aam
push
xor
mov
and
sbb
push
jmp
sbb
pop
aam
cmp
jns
aaa
out
push
cmp
mov
in
jo
pushf
loop
push
mov
fst
fcom
(bad)
fidivr
and
adc
call
mov
or
cmps
inc
iret
xchg
imul
adc
push
xlat
fwait
and
jmp
mov
mov
adc
shl
je
dec
int3
jae
jnp
out
mov
aaa
mov
dec
iret
jb
and
in
sahf
mov
add
xor
push
fldcw
pop
imul
clc
leave
and
pop
mov
shl
fs
push
clc
fs
mov
iret
mov
jne
or
out
call
mov
pop
fsubr
cmps
xchg
xchg
or
pop
mov
inc
(bad)
mov
cmovno
popa
pusha
sbb
cmp
aam
cmp
pop
xor
fldcw
(bad)
and
aas
adc
cmc
(bad)
add
mov
clc
pop
stc
in
jmp
or
fnsave
or
inc
add
je
or
xlat
inc
in
icebp
movs
and
in
pusha
aaa
in
in
sub
push
sub
xchg
inc
out
fisttp
fwait
jns
and
mov
jo
or
mov
(bad)
fidiv
mov
fs
jge
fsub
test
enter
add
pop
xchg
(bad)
imul
in
repz
ficomp
pop
dec
sub
mov
fdiv
add
xchg
push
add
jge
pusha
cmc
sub
add
and
push
and
jae
data16
sub
and
sub
jg
push
dec
cmps
or
stc
pop
mov
fild
inc
movs
sub
push
jecxz
mov
mov
add
sub
test
call
mov
rol
cmp
push
mov
outs
fmul
cmc
sub
jbe
jle
mov
xor
cmp
xchg
popa
leave
add
ins
mov
jne
sub
cmp
arpl
(bad)
jge
pushf
scas
mov
mov
shr
pop
fimul
stc
cs
neg
push
ror
in
daa
adc
test
push
retf
aas
repnz
arpl
repnz
ret
dec
cmps
arpl
jle
inc
xchg
and
int
sbb
xchg
test
in
fisubr
int
jecxz
mov
inc
mov
jae
xchg
xchg
xchg
pop
jmp
mov
(bad)
add
rcl
(bad)
stc
xor
inc
lods
dec
add
mov
dec
stos
inc
mov
in
mov
add
int
ss
push
stos
ins
add
jns
cdq
movs
movs
movs
call
push
jb
ds
test
mov
ins
std
and
adc
adc
pop
cmp
dec
xchg
xchg
inc
mov
mov
nop
imul
outs
mov
movs
xchg
mov
and
or
mov
pusha
mov
mov
aad
test
xor
xchg
cdq
js
mov
pop
into
pop
out
sub
mov
popf
inc
fistp
pushf
jae
xchg
push
ja
xchg
sbb
jge
or
mov
test
jl
push
add
loopne
sar
dec
mov
in
in
add
ror
cmp
sbb
cmp
or
cli
xor
rcr
test
push
pop
sbb
lock
sahf
arpl
or
dec
test
aaa
push
fdiv
jmp
in
mov
pop
mov
pop
lea
push
clc
or
int3
das
push
pop
test
dec
cmps
jns
sub
daa
adc
cwde
arpl
xor
inc
cmps
xchg
cwde
dec
cmps
xchg
vphaddubq
loopne
cmp
pop
scas
jge
and
add
stos
arpl
scas
lea
pop
scas
xchg
jl
add
sbb
ins
fdiv
add
dec
mov
mov
lods
jno
jnp
in
xchg
and
jge
sub
sti
xor
pop
cmps
jbe
scas
xchg
inc
mov
sbb
pop
mov
xchg
jnp
ret
push
mov
(bad)
push
adc
in
and
or
fwait
push
fst
mov
or
or
jmp
mul
out
or
lock
mov
xor
sbb
shl
sub
jnp
outs
movs
lods
popa
mov
xor
or
add
xlat
dec
test
rol
dec
scas
pushf
jle
ins
lods
inc
lods
call
fistp
xchg
inc
ror
sbb
sub
inc
xlat
aaa
hlt
dec
scas
js
loope
out
enter
sar
les
push
in
ds
adc
cld
push
stos
jmp
lods
jge
xor
cmps
xchg
dec
stos
fs
jmp
data16
cmc
add
ss
sub
pop
xchg
mov
div
mov
lea
ja
ja
or
sbb
xor
jns
xchg
je
push
mov
retf
sub
inc
stos
arpl
inc
mov
jb
xor
shl
repnz
(bad)
cmp
push
mov
movs
xor
push
lods
push
(bad)
push
mov
lock
mov
dec
in
jne
adc
xor
imul
pop
lea
jp
and
pop
loope
imul
push
retf
cmp
push
mov
(bad)
data16
cmps
push
fcomp
xchg
lahf
scas
arpl
dec
retf
push
cmc
sub
fild
add
push
cmps
or
mov
repz
push
icebp
push
mov
sahf
push
push
shl
add
inc
scas
inc
mov
mov
bound
cmp
pop
cmp
and
or
in
and
int3
pop
test
sub
mov
outs
mov
ficom
aaa
in
ret
jne
je
adc
or
inc
stos
mov
cmp
pop
fld
pop
xor
mov
pop
ficomp
ss
xor
pop
mov
stos
mov
mov
jge
mov
pop
lds
mov
mov
loopne
loop
mov
pushf
outs
mov
(bad)
int
sub
push
lods
mov
xchg
jp
xor
add
jns
mov
push
inc
aad
push
or
xor
loop
aam
sbb
paddw
stc
add
aas
call
mov
out
ss
mov
or
xor
mov
push
cmps
call
lods
jns
cmp
(bad)
daa
hlt
cs
cmp
ret
pushf
jg
mov
xor
sbb
pop
test
dec
fsub
clc
dec
mov
jbe
ss
ret
cmp
xor
inc
mov
js
sahf
jns
xchg
mov
aam
add
aas
in
xchg
fst
out
pop
mov
popf
imul
fistp
in
aad
xchg
popa
movs
or
jnp
mov
mov
mov
jl
ins
scas
(bad)
js
js
xor
ror
nop
je
out
xor
pop
fiadd
in
push
leave
inc
stos
cmps
popf
pushf
jg
inc
shl
sbb
fwait
inc
mov
int3
push
adc
jecxz
ret
adc
or
or
dec
mov
enter
fs
cmc
inc
stc
add
pop
mul
xor
call
xchg
push
mov
movs
cdq
mov
dec
mov
jmp
repz
dec
mov
sbb
sub
jge
shl
and
cli
and
sub
xchg
ins
adc
fsubr
jmp
std
pop
xor
stc
mov
fidiv
(bad)
and
sub
inc
mov
fiadd
inc
mov
ret
dec
mov
dec
mov
pop
(bad)
cmp
(bad)
pop
movs
push
jge
push
addr16
adc
in
test
and
add
xor
je
push
nop
je
call
cmp
push
call
inc
mov
jl
inc
xor
mov
pop
mov
test
jg
mov
test
cwde
dec
lods
mov
pop
xchg
rol
gs
aad
test
push
add
pop
loopne
(bad)
jl
aas
xor
add
jle
lea
addr16
(bad)
and
cmp
pop
fmul
push
mov
pusha
loop
push
retf
lods
dec
mov
jge
es
retf
pop
das
aaa
pop
mov
aaa
adc
xchg
test
aad
xor
cmp
push
xor
dec
xchg
inc
movs
nop
jp
sub
inc
mov
inc
xor
pxor
xchg
jb
popa
add
sbb
and
neg
(bad)
ins
(bad)
and
sub
test
xlat
add
jmp
mov
fcomp
or
dec
mov
mov
and
les
sub
push
pop
push
sbb
sahf
xchg
out
mov
xchg
js
add
movs
call
and
push
adc
cmp
dec
lods
dec
mov
in
mov
cld
bound
repz
and
adc
sub
sti
add
pop
mov
inc
mov
jbe
mov
add
(bad)
cld
sub
ret
cmp
dec
mov
xchg
inc
scas
gs
pop
mov
push
(bad)
pop
(bad)
outs
xlat
pop
leave
add
jb
inc
mov
mov
sahf
inc
xor
out
out
mov
fiadd
jmp
mov
lods
mov
mov
shl
sbb
std
and
or
sub
in
push
add
loopne
leave
push
mov
fist
jno
add
xor
cmp
shl
call
cs
or
imul
enter
cmp
enter
adc
out
fisubr
pop
xchg
or
aaa
add
pop
mov
xchg
rol
xor
adc
jne
imul
xchg
je
dec
push
add
ja
xchg
xchg
jl
or
in
sar
out
sti
cmp
loope
aad
enter
sar
loope
jmp
ret
inc
mov
jg
push
test
(bad)
dec
aaa
sub
rol
enter
pop
hlt
jno
sub
mov
jae
scas
arpl
push
mov
push
mov
jecxz
xor
cmp
and
push
in
rcr
mov
retf
pop
lds
adc
sbb
dec
lods
mov
movs
in
mov
xchg
xchg
ins
int
cmp
pop
shl
add
cmc
inc
mov
fistp
xchg
jle
inc
sbb
movlps
xor
lds
jmp
add
sti
add
hlt
mov
fild
mov
mov
sub
pop
xor
outs
shr
hlt
pop
adc
outs
shl
mov
scas
lods
lds
mov
into
es
dec
movs
jno
dec
aad
imul
dec
test
add
je
cmp
daa
shl
add
loop
rcl
pop
mov
popf
xchg
aaa
add
adc
cmp
fiadd
or
adc
mov
mov
mov
mov
outs
xrelease
fiadd
sti
daa
leave
xor
push
xor
jmp
repnz
mov
mov
jg
xchg
xchg
rcl
pop
mov
outs
les
sub
into
mov
aas
sub
dec
sub
fadd
test
xor
push
mov
sub
or
std
sub
leave
jg
xchg
test
popf
dec
mov
sbb
pop
mov
inc
sar
daa
loop
push
(bad)
xor
cld
or
pop
scas
js
inc
pop
cli
das
jmp
fidivr
stc
sub
or
frstor
inc
int
movs
xlat
sub
mov
mov
cmp
mov
inc
cmps
std
imul
mov
xchg
fdiv
not
adc
push
push
or
jmp
pop
xchg
test
dec
shl
aas
clc
push
mov
into
cmp
xchg
jge
jnp
cdq
lea
nop
out
lods
arpl
xor
or
pop
in
inc
mov
cmps
xchg
xchg
(bad)
jb
popf
cmps
lds
push
clc
cmp
cmp
dec
fbstp
shl
dec
scas
test
fisubr
rol
lods
jle
outs
clc
and
repz
cmc
and
push
and
out
(bad)
push
lds
cld
and
dec
mov
nop
jge
or
sub
jns
inc
mov
adc
jno
adc
push
frstor
sbb
xor
pop
int
imul
shr
jmp
sti
popa
les
imul
movs
inc
mov
mov
push
adc
mov
retf
adc
push
ficomp
repz
and
sbb
daa
out
int3
or
js
test
cwde
addr16
clc
add
es
adc
adc
sub
retw
sbb
mov
imul
xor
sbb
push
daa
sub
xlat
push
mov
icebp
push
mov
xor
icebp
pop
mov
and
sub
cmp
out
sbb
cld
dec
(bad)
dec
(bad)
mov
pushf
xchg
sbb
into
aaa
add
frstor
mov
lods
loopne
retf
push
out
mov
out
push
fistp
pop
repz
movs
movs
mov
test
xchg
mov
fwait
mov
shl
push
leave
dec
iret
ins
cmp
sbb
adc
and
jle
jl
cmp
adc
push
(bad)
pop
fild
pop
shl
push
cmp
loope
pop
aaa
push
jecxz
jmp
inc
push
push
sub
out
ret
lahf
mov
mov
cdq
fidivr
cmp
jne
je
cmc
daa
in
std
ss
repz
add
das
cmc
movhps
rcl
adc
mov
scas
xchg
jno
pusha
test
data16
dec
(bad)
or
cmp
cmp
jl
add
pop
scas
outs
mov
sub
or
xchg
add
mov
fldcw
in
dec
mov
cli
sub
xor
push
push
push
pop
movs
imul
push
pop
(bad)
xor
cmp
sub
inc
leave
ins
in
cmp
push
inc
add
inc
hlt
ja
fwait
ret
dec
test
xor
popf
xchg
rcr
in
xor
push
out
ds
popa
enter
rol
fs
jno
aaa
pop
pop
pop
(bad)
sub
pusha
shl
sub
add
sbb
sub
test
scas
outs
lds
loop
call
imul
inc
lock
mov
xor
dec
nop
jne
push
test
xor
hlt
es
scas
bound
jnp
jle
push
add
pop
mov
adc
in
and
repz
sti
add
shl
and
pop
mov
enter
jmp
test
mov
sub
sub
inc
leave
cmp
push
jno
movs
mov
mov
movs
inc
(bad)
dec
mov
and
retf
push
int
in
fnstcw
out
mov
cdq
cmps
cwde
ja
mov
push
or
(bad)
sub
sbb
int
push
aad
into
add
nop
test
mov
push
xchg
mov
enter
(bad)
and
cmc
add
cdq
popa
cld
add
add
nop
cwde
push
jo
jp
xchg
mov
and
mov
scas
dec
lods
jge
dec
mov
jae
clc
xor
sti
pop
int
bnd
cmp
and
push
test
mov
shl
push
inc
jge
js
sub
stc
mov
fst
dec
mov
retf
xor
cmp
(bad)
sub
push
shl
or
cmp
adc
lea
lahf
nop
jnp
pusha
(bad)
pop
push
shl
push
mov
retf
and
pop
cmp
add
and
xchg
xchg
inc
mov
mov
cmp
pop
mov
fstp
cmc
inc
mov
out
push
(bad)
pop
scas
xchg
jge
add
daa
sbb
cmp
xchg
xchg
mov
jo
shl
(bad)
xor
ficom
jbe
xchg
aam
enter
ret
ins
lods
je
retf
xor
pop
fistp
je
push
mov
add
imul
pusha
test
fs
mov
daa
out
cli
mov
mov
jp
pop
int
jmp
aam
cmp
or
imul
lods
mov
xchg
ja
mov
nop
data16
loope
mov
pushf
inc
mov
cmps
inc
(bad)
fiadd
clc
xor
addr16
jnp
or
and
fstp
loopne
mov
mov
out
adc
stc
and
aas
cmp
pop
leave
cmp
add
jmp
test
push
and
push
std
dec
ret
push
or
cmp
dec
call
xchg
jg
jb
or
cmp
jle
fwait
dec
(bad)
and
adc
xchg
nop
nop
jbe
cmp
push
into
xchg
jbe
add
inc
xchg
retf
inc
mov
sub
sbb
mov
fwait
test
fisubr
sbb
sahf
push
mov
adc
gs
jbe
xor
les
sub
inc
aam
jmp
dec
stos
gs
sbb
add
cmp
je
inc
cmps
xchg
inc
mov
add
in
adc
inc
ret
lods
fisttp
jg
cmp
(bad)
and
adc
lds
(bad)
jmp
ss
clc
push
mov
ret
inc
mov
cmp
add
sub
les
hlt
cmp
dec
stos
cdq
mov
pop
mov
push
mov
(bad)
jne
(bad)
ja
dec
pop
sub
sahf
mov
js
push
shr
sbb
out
sub
push
not
push
xor
or
xor
add
or
xor
or
jg
inc
mov
push
add
fs
sub
ss
xchg
mov
xchg
mov
xchg
mov
dec
lea
mov
mov
mov
cs
aaa
hlt
pop
scas
test
lds
ins
fmul
sbb
xor
sbb
sub
pop
test
inc
mov
hlt
add
pop
icebp
cmps
xchg
pop
(bad)
das
pop
movs
xchg
cmp
pop
cmps
dec
adc
sbb
sbb
sub
int
or
retf
adc
or
mov
test
lock
div
pop
or
(bad)
dec
fcom
daa
or
aas
or
xor
dec
mov
push
or
pop
mov
(bad)
dec
fild
sub
cmp
adc
sub
dec
add
adc
les
mov
imul
fild
retf
iret
push
cmp
mov
iret
cmp
inc
mov
fsubr
jmp
out
cmc
pop
test
test
pop
ds
jno
(bad)
aam
xchg
jge
jl
xchg
rcl
cs
sub
push
out
loop
cli
cmp
push
lea
jno
xor
mov
push
test
(bad)
je
xchg
jo
jno
inc
mov
dec
lods
lea
int3
pop
mov
pop
sbb
add
sbb
sbb
cmp
lds
sbb
es
ds
out
stc
pop
lea
xchg
or
pop
out
push
mov
(bad)
ss
icebp
pop
cmp
aaa
add
xor
sub
dec
mov
cmp
inc
(bad)
ss
loope
call
jl
dec
mov
sbb
mov
data16
push
lock
nop
pusha
mov
int3
pop
sar
call
and
and
inc
stos
ret
js
push
test
inc
nop
ficom
jbe
xor
push
lea
popf
inc
mov
and
(bad)
mov
cdq
xchg
push
jb
and
jbe
aam
fist
out
adc
adc
pop
retf
add
jg
aas
call
jmp
jbe
xchg
inc
sub
and
sub
imul
pop
ret
dec
sub
aad
mov
dec
test
mov
and
cli
xor
dec
mov
mov
mov
xor
adc
daa
in
scas
ins
fnstsw
push
mov
push
dec
frstor
pop
jmp
ret
pop
cmps
ins
lea
and
mov
jecxz
outs
aam
enter
sbb
leave
cmp
push
clc
cmp
(bad)
and
and
inc
mov
inc
mov
dec
add
mov
out
push
xchg
fcom
popf
(bad)
add
dec
fnstenv
sub
sbb
aaa
adc
add
in
adc
mov
loope
push
ret
in
repnz
xchg
imul
movs
jg
xchg
xchg
cmp
xor
pop
fadd
adc
mov
cmp
sub
scas
adc
scas
mov
mov
push
mov
mov
xor
cmp
stc
pop
fdivr
pop
(bad)
and
stos
jb
and
cmp
push
in
cmp
inc
ficom
xor
and
xor
dec
mov
xlat
xor
add
aam
movs
jbe
mov
fnsave
cld
or
cmp
push
in
push
mov
cs
jmp
(bad)
jae
and
in
cmp
add
getsec
add
jb
pop
(bad)
adc
sub
or
push
mov
jmp
mov
mov
outs
iret
cmp
jg
nop
jae
cmp
lock
mov
or
dec
movs
xchg
outs
out
test
inc
lock
inc
sub
push
sub
add
pop
mov
jne
mov
rcr
repnz
dec
aad
les
es
sub
push
mov
push
mov
mov
pop
pop
sub
sbb
es
add
jmp
cld
dec
mov
push
clc
sub
push
aam
xchg
inc
aam
pop
xor
xchg
ins
ficomp
xor
push
mov
mov
imul
mov
mov
xchg
test
push
icebp
mov
jns
pop
mov
sub
stc
inc
mov
inc
lods
mov
pop
mov
retf
cs
inc
lods
nop
pusha
int3
pop
add
cmp
xor
jmp
mov
mov
loopne
hlt
and
cmps
pusha
mov
test
aam
test
pop
mov
aas
adc
pushf
mov
xchg
mov
arpl
push
adc
mov
fdivr
in
jmp
loope
jo
ja
das
or
cmp
dec
test
ror
popa
cli
and
pop
xlat
xor
mov
rcl
popa
cmps
cwde
add
xchg
push
add
std
mov
mov
cdq
pop
push
sahf
jmp
cmp
cmp
ins
test
stc
enter
jns
cmc
inc
pop
sar
push
rcr
ret
repnz
(bad)
jp
adc
and
and
xor
fld
adc
adc
xor
ror
adc
sar
lods
sbb
retf
dec
inc
push
adc
cmp
sbb
call
dec
jmp
fsub
and
aas
mov
inc
pop
adc
cmc
es
retf
sbb
ins
cmp
push
xchg
sahf
repz
lods
or
pusha
push
stc
or
ins
aad
mov
je
test
cmc
daa
iret
mov
movs
retf
and
call
mov
mov
xchg
iret
push
imul
cdq
push
inc
jno
jne
jmp
js
cmp
fcomi
jmp
fwait
sahf
cmp
popa
mov
dec
inc
(bad)
xor
adc
out
dec
sub
jmp
xchg
jg
mov
dec
popa
(bad)
sub
in
(bad)
addr16
ret
sbb
sbb
jno
pop
xchg
out
and
sar
sbb
bound
cmp
je
cmp
setno
fnclex
push
inc
sbb
mov
arpl
mov
pushf
push
nop
xchg
inc
pusha
outs
mov
sti
pop
out
es
out
mov
add
cmp
out
jns
push
in
xchg
inc
rcr
pop
add
xor
in
adc
ret
inc
dec
and
ins
pop
repz
add
mov
mov
aaa
jo
icebp
jle
in
sbb
int3
hlt
rol
mov
ins
mov
mov
sbb
sub
sbb
inc
outs
mov
push
xor
fidivr
(bad)
out
cmp
cmp
xor
mov
fwait
xchg
adc
adc
ret
cmp
mov
xor
inc
and
(bad)
add
adc
hlt
out
dec
fidiv
mov
xor
sub
cmp
push
mov
mov
dec
push
test
hlt
lock
xlat
add
das
ins
xchg
xchg
dec
xlat
ins
mov
sbb
cld
loope
and
mov
adc
cmp
sub
leave
push
and
push
lahf
pop
inc
into
or
ret
scas
out
mov
sti
jns
loop
retf
movs
pop
ret
fcomp
dec
cwde
jo
sub
pop
add
cmp
jle
mov
sbb
inc
dec
inc
dec
(bad)
add
loope
jo
pmulhuw
mov
test
sub
out
jmp
pop
dec
mov
xchg
push
xchg
loopne
icebp
jbe
movs
loope
lods
mov
ret
and
(bad)
xchg
mov
ja
fldcw
inc
clc
in
add
jle
ins
cmp
pop
call
adc
mov
jmp
aam
adc
push
xlat
pop
pop
sub
push
mov
mov
les
addr16
pop
cs
dec
sub
add
mov
jle
dec
ss
jns
adc
or
(bad)
push
rcr
movs
mov
add
jl
(bad)
hlt
(bad)
sbb
or
retf
add
out
ins
and
mov
outs
cmp
aad
out
inc
inc
xchg
push
in
mov
mov
bnd
js
adc
mov
sub
push
test
mul
shr
add
rcr
int
push
sub
lods
je
cld
xchg
cmp
push
dec
jnp
inc
pop
(bad)
hlt
jecxz
mov
pusha
cmp
or
xor
test
sub
push
repnz
cmc
push
jmp
loope
push
sar
jmp
shl
js
adc
adc
jno
test
pushf
(bad)
mov
lahf
test
and
pop
leave
inc
cmp
iret
loopne
sub
fwait
push
jno
in
sub
jnp
mov
mov
add
xor
arpl
sub
jb
push
test
lods
fs
xchg
mov
add
cmp
test
clc
add
xchg
mov
aas
xchg
sub
lods
pop
fstp
push
inc
fadd
mov
rcl
inc
ret
sub
dec
mov
jnp
je
popf
xor
mov
data16
xchg
sbb
jl
push
sbb
jmp
add
test
into
push
adc
mov
push
movs
and
stos
push
cmp
pop
push
mov
xchg
adc
dec
into
setb
retf
sbb
lods
test
les
cmc
aaa
out
gs
pop
inc
dec
dec
pop
out
push
sbb
repz
shl
xchg
out
and
or
call
adc
ds
jmp
xor
push
fisttp
mov
and
mov
jne
cli
mov
call
inc
popa
push
mov
call
(bad)
mov
inc
push
cmps
dec
cmp
movs
push
fcom
imul
mov
and
shl
pop
(bad)
mov
pop
dec
dec
nop
sub
sbb
call
sbb
or
stos
outs
push
xor
adc
rcl
scas
jge
rcl
add
push
xchg
adc
mov
cld
inc
mov
aas
inc
pop
xchg
xchg
mov
fst
dec
fwait
test
xchg
loop
mov
adc
scas
cmps
and
popa
sbb
adc
ins
mov
and
and
mov
outs
addr16
mov
xchg
mov
test
bound
cmp
jae
dec
imul
xor
add
and
push
mov
ret
test
mov
(bad)
adc
pop
out
fisub
add
fistp
je
jl
test
mov
and
das
cmc
or
stc
xchg
and
arpl
cmp
jne
sub
and
inc
add
test
hlt
daa
pop
pop
int3
dec
mov
es
es
mov
sub
add
dec
shl
ror
or
pop
mov
call
sbb
sahf
(bad)
cli
push
adc
pushf
daa
jle
js
push
jb
fisubr
fwait
in
fs
enter
sub
xor
enter
jecxz
daa
dec
retf
cs
and
movs
xor
xchg
(bad)
clc
out
leave
push
jmp
mov
iret
je
sub
mov
sar
xor
mov
ins
jle
imul
jne
xchg
mov
cmc
jmp
cdq
xor
add
out
scas
mov
sahf
aam
xchg
loope
loope
pop
cmc
sti
cdq
popa
xchg
push
imul
in
add
jno
jge
add
scas
cmp
or
test
out
ss
aas
(bad)
(bad)
sub
test
in
test
xchg
stos
outs
cmp
pop
xchg
icebp
loope
mov
or
push
push
shr
jo
(bad)
js
push
fs
hlt
movs
ja
bound
push
(bad)
imul
xor
cs
ds
hlt
mov
xchg
pusha
cmc
mov
rol
pop
sar
daa
mov
pop
hlt
cmp
jae
inc
jg
xor
or
loope
bound
call
sub
pop
jmp
sbb
jnp
sbb
sahf
pop
mov
jge
jne
xchg
scas
call
rcl
(bad)
sti
mov
gs
mov
cmp
ja
rol
cmp
loope
ins
inc
push
test
push
inc
fucom
adc
aam
push
push
cwde
(bad)
jnp
out
hlt
jnp
cs
ret
loope
enter
xchg
adc
stos
cmp
stos
lods
push
or
xchg
call
jp
(bad)
mov
aas
and
iret
imul
jmp
sar
std
push
popf
popa
jecxz
xor
mov
fbld
and
push
dec
gs
mov
xlat
hlt
in
mov
mov
lock
dec
in
mov
ss
mov
ins
pop
ror
loope
out
lahf
in
adc
inc
jbe
jecxz
out
aas
sub
pop
not
(bad)
sub
popa
xor
sbb
push
xor
and
fdecstp
dec
(bad)
nop
stc
(bad)
inc
ja
(bad)
jne
cwde
mov
dec
fisub
loope
lahf
int3
inc
mov
ins
push
push
push
mov
retf
fwait
test
or
mov
cmp
in
fwait
cmp
retf
loope
xor
retf
call
jge
xchg
lahf
pop
scas
je
scas
xchg
jp
push
dec
out
jecxz
scas
and
stos
jns
mov
imul
js
xor
dec
(bad)
adc
mov
add
push
cli
adc
push
pop
out
xor
leave
data16
jo
adc
stc
add
fistp
push
xchg
jg
add
dec
ins
adc
push
cmp
and
(bad)
push
stos
or
mov
or
xchg
mov
push
xacquire
popa
(bad)
sar
pop
push
mov
test
in
push
stos
fisttp
mov
mov
push
dec
test
xor
les
rcr
sub
or
retf
pop
cld
inc
cmp
cwde
add
(bad)
mov
out
sar
popa
dec
add
icebp
pop
xchg
adc
push
xchg
xchg
and
adc
xor
iret
cmp
xchg
xchg
jno
cmc
inc
pop
repz
es
scas
mov
and
iret
jle
dec
push
mov
mov
or
mov
das
jmp
sub
mov
test
mov
test
jbe
adc
mov
xor
push
imul
jno
popf
movs
or
cmp
jge
icebp
mov
xchg
and
or
imul
or
aam
mov
aam
mov
in
mov
(bad)
xor
(bad)
iret
jp
mov
push
popa
(bad)
pop
adc
loope
dec
cmps
jns
jmp
xor
xor
jmp
outs
pop
mov
test
mov
popa
cmc
in
mov
add
mov
cdq
xchg
sub
(bad)
out
push
xchg
test
or
ror
aad
in
mov
inc
shr
pop
add
mov
test
ins
pop
ins
or
mov
rcr
(bad)
push
in
or
dec
sub
cmp
xor
js
imul
add
retf
xchg
inc
cmps
and
ins
xchg
clc
adc
popa
cmp
test
mov
adc
out
imul
sbb
dec
xor
or
data16
aad
mov
jnp
cmps
(bad)
sahf
outs
dec
xchg
xchg
push
push
xchg
add
cmps
inc
inc
scas
(bad)
rol
push
jp
fst
mov
inc
dec
cmp
repnz
ja
clc
imul
jne
leave
fxch
aas
pop
jb
arpl
hlt
mov
loope
cmp
and
push
out
loope
fisttp
mov
add
es
or
sbb
jae
lahf
cmc
ins
ficomp
xor
or
adc
mov
mov
xor
into
push
cmp
sbb
pop
xor
cmc
jle
les
push
inc
loope
or
out
inc
push
popa
sbb
pushf
(bad)
inc
out
push
xchg
dec
pop
rcr
pop
fisttp
jmp
nop
and
jge
mov
(bad)
test
pop
stc
or
mov
sbb
sub
xor
mov
mov
dec
sub
rep
sub
cmp
xor
leave
mov
mov
push
and
aad
call
(bad)
mov
js
ds
gs
mov
jo
or
and
push
bound
hlt
sbb
xor
cmp
cmp
fsubr
mov
or
add
ret
pop
add
sbb
sub
icebp
test
test
dec
push
dec
data16
cs
cld
mov
and
mov
fucomp
xchg
jnp
push
fsubr
nop
jne
or
cmovle
icebp
aaa
pavgw
cwde
shl
into
fistp
repz
addr16
(bad)
daa
push
in
pop
or
push
push
mov
mov
mov
inc
out
mov
retf
mov
call
sbb
sbb
pop
lock
into
fisub
push
adc
xor
adc
or
inc
mov
push
push
sub
xor
jne
enter
xchg
adc
mov
and
nop
mov
add
pop
push
push
lock
dec
mov
adc
adc
jnp
test
in
std
jns
das
outs
mov
mov
pop
stc
adc
sti
dec
imul
pop
inc
jle
mov
cli
ret
pusha
sub
js
(bad)
stc
mov
aaa
ds
add
movs
sbb
xchg
rcr
sub
inc
out
push
loop
sbb
xor
sar
mov
hlt
pop
dec
jae
sahf
adc
or
out
fadd
outs
por
test
mov
ror
cmp
dec
pop
jae
rol
cmp
sar
popf
adc
xchg
retf
and
inc
cmp
push
(bad)
lock
lahf
lds
pop
mov
int
or
ret
scas
daa
fmul
cwde
(bad)
cli
cwde
adc
fs
pusha
jnp
mov
mov
inc
out
pop
mov
jecxz
add
int3
push
sbb
(bad)
lods
cmp
jne
in
push
jle
fcmovnu
or
xchg
fnsave
xor
push
sbb
jbe
repz
jbe
mov
jge
les
(bad)
pop
pop
mov
mov
pop
push
jb
mov
push
les
mov
jecxz
cmps
xlat
jb
or
test
mov
retf
xchg
push
ja
and
(bad)
stc
movs
add
or
test
hlt
sbb
add
test
sar
icebp
pop
mov
or
inc
pop
cmp
dec
fist
cmp
xchg
sbb
sar
dec
(bad)
stc
mov
fsubr
push
and
jne
in
or
adc
bound
jg
test
fisub
xor
xor
ds
nop
mov
xchg
mov
movs
das
jmp
cwde
add
jbe
(bad)
jmp
int3
adc
cwde
dec
or
test
dec
xchg
ds
inc
or
mov
adc
dec
mov
push
fs
jno
sub
xor
out
cs
mov
adc
loopne
sub
and
push
sub
(bad)
vucomiss
mov
clc
sub
cmps
ja
sub
pusha
(bad)
stos
jmp
xchg
jmp
cmp
fimul
sbb
jb
mov
gs
xchg
movs
aas
fild
call
pop
(bad)
jnp
adc
ja
clc
xchg
sbb
arpl
inc
scas
into
dec
sub
or
pusha
cmp
shl
pusha
inc
push
cli
stos
and
test
pop
jae
push
xchg
scas
inc
push
mov
sub
push
push
jns
bnd
sbb
nop
inc
cmp
sub
xchg
fidiv
je
stos
je
jp
mov
loopne
pushf
or
pop
or
and
pop
enter
inc
cld
push
shr
ret
cmps
jb
std
mov
das
add
aas
add
pop
xchg
or
(bad)
pop
dec
jp
xchg
or
jmp
sub
test
xor
cli
sbb
pop
fldenv
mov
sub
pop
jecxz
fstp
or
xchg
add
jne
lock
fldcw
push
ret
cs
out
sbb
out
bound
mov
(bad)
mov
stc
(bad)
and
nop
loope
jmp
and
sbb
add
(bad)
jecxz
sub
sbb
ins
aam
cmp
xchg
sub
push
in
cmp
jp
call
sub
xchg
mov
xchg
mov
dec
and
les
mov
mov
xchg
in
lds
mov
adc
outs
adc
dec
pop
pusha
mov
pop
icebp
mov
pop
in
jge
loopne
mov
inc
cli
hlt
mov
movs
adc
or
xchg
std
cmp
loope
lds
and
popa
and
call
(bad)
xor
dec
or
mov
adc
adc
sbb
fistp
and
hlt
add
jno
dec
pop
lods
loop
iret
dec
pop
int3
shl
data16
dec
mov
mov
out
dec
pusha
dec
jo
jne
push
xchg
fs
enter
push
or
cs
pusha
jmp
jo
mov
xchg
mov
repz
rol
sar
lods
mov
mov
jns
xor
cwde
mov
push
or
bswap
arpl
loopne
lea
shl
lods
dec
jmp
(bad)
cmp
loop
repz
jmp
adc
pop
ins
outs
xor
mov
je
push
xor
fld
fild
int
mov
adc
and
mov
add
pushf
sbb
mov
rol
push
inc
xchg
mov
fs
fisub
js
mov
sub
int
dec
ret
pop
outs
f2xm1
ret
jb
bound
stos
(bad)
xchg
xor
loopne
loope
int
cdq
int3
(bad)
shl
add
(bad)
push
lock
enter
sub
rcr
mov
adc
mov
inc
mov
retf
enter
fbld
mov
(bad)
adc
mov
adc
dec
and
mov
ins
(bad)
adc
push
lods
mov
sbb
fs
jecxz
ds
hlt
sahf
push
sbb
popa
xor
cmp
or
(bad)
repz
mov
add
jge
push
mov
sub
xchg
mov
inc
add
xor
lahf
sbb
jno
shl
jno
popf
adc
enter
jns
ins
mov
inc
popf
push
das
aaa
ss
inc
mov
dec
add
lahf
sub
inc
cld
mov
mov
pop
xchg
call
div
movs
inc
mov
outs
out
sti
cmps
mov
push
or
xchg
clc
outs
sbb
jmp
fwait
pop
imul
dec
int
cmps
or
inc
cdq
aam
fdivr
sub
jae
and
or
push
push
and
fnstsw
xor
retf
add
adc
cmps
xchg
push
test
dec
push
gs
adc
or
scas
imul
sub
scas
imul
retf
jmp
xchg
lods
sbb
(bad)
and
pop
js
cmc
cmp
pop
test
push
cdq
test
enter
ss
scas
jbe
fcom
inc
cmps
mov
int3
jle
outs
cld
js
xor
ins
add
inc
cdq
and
scas
repz
add
fsub
xchg
out
shr
jecxz
xchg
push
rol
sub
out
or
clc
out
(bad)
int
out
xor
ret
jle
cdq
cmps
xor
xor
sbb
adc
cmps
fidivr
test
sbb
shl
xor
lods
lods
and
push
mov
or
cmp
in
sub
and
cmps
add
xchg
call
add
mov
mov
frstor
fbstp
cmp
cmps
sbb
pop
mov
xchg
sbb
xchg
cmp
inc
mov
shl
cmp
sbb
(bad)
adc
mov
xchg
sub
pushf
std
dec
and
adc
add
sbb
xlat
push
repnz
mov
adc
scas
pop
mov
add
rol
cli
mov
jne
jbe
out
push
mov
pop
les
(bad)
mov
imul
push
icebp
nop
je
push
std
(bad)
sub
pop
jg
fxch
xor
inc
shl
sbb
jp
ret
xchg
call
bound
fadd
mov
outs
mov
(bad)
std
cmp
fwait
outs
cmp
and
xchg
jmp
dec
(bad)
jbe
hlt
aas
retf
inc
aad
pop
xor
cmps
cld
mov
jae
inc
pushf
cmp
scas
loope
dec
fldenv
cs
rol
stc
xor
add
xchg
push
add
pop
into
push
mul
ret
pop
cld
pop
fisubr
rcl
(bad)
pop
hlt
push
xor
push
or
sub
push
cmp
dec
(bad)
ins
mov
aam
mov
and
mov
cli
sub
cmp
or
sbb
and
cmp
dec
scas
outs
mov
loop
movs
jg
sub
push
gs
pop
aam
in
pop
into
cmp
ins
retf
fwait
(bad)
imul
mov
outs
mov
pop
xlat
sub
lock
sbb
cmp
cld
sub
inc
movs
mov
rcl
cmps
mov
mov
pop
std
sahf
mov
mov
mov
mov
mov
aam
pop
imul
or
dec
fnstsw
jecxz
shr
push
ret
add
sub
and
inc
lods
ins
mov
(bad)
sub
add
xor
dec
mov
sub
add
adc
es
adc
popf
inc
fimul
sar
adc
dec
rol
es
cmp
sub
push
div
or
push
adc
xchg
lahf
gs
ins
fcom
retf
xchg
stos
push
push
and
mov
pop
out
xchg
mov
mov
sbb
xor
pop
fistp
(bad)
addr16
adc
sti
inc
mov
inc
mov
aam
mov
outs
test
aam
add
stc
psubsw
arpl
add
inc
fstp
and
xchg
dec
cmps
arpl
xor
push
leave
cmp
aad
or
xor
mov
mov
nop
jne
test
and
stos
inc
mov
inc
mov
in
push
cmp
xor
dec
xchg
outs
aam
int
in
test
mov
pop
movs
gs
in
fst
mov
ja
mov
cmp
dec
mov
push
mov
mov
jl
cdq
inc
mov
aaa
push
cmc
push
mov
pop
mov
ss
rcl
cmps
pusha
movs
inc
into
pop
sub
test
mov
test
dec
scas
jnp
in
cmp
push
cmps
jg
and
sub
cmc
ss
ds
xor
or
pop
mov
fistp
call
enter
pxor
xor
out
pmulhuw
and
inc
mov
jp
pop
sub
shl
rcr
jmp
pop
adc
sub
adc
add
and
xor
enter
rcl
sbb
pop
mov
dec
mov
push
mov
jbe
xchg
jns
push
scas
jae
xor
sbb
sahf
dec
(bad)
sub
or
mul
sar
add
dec
mov
fcomp
loopne
mov
xchg
js
mov
(bad)
xlat
or
sbb
addr16
mov
xchg
rcl
mov
add
sub
cmp
xor
call
pop
sub
stc
push
leave
cmp
out
cmp
adc
pop
cmps
jns
rcr
je
test
sahf
test
xor
pop
xchg
gs
in
stos
mov
loope
shl
pop
mul
out
aas
sbb
mov
sub
adc
or
adc
adc
jle
xchg
jb
cmc
inc
mov
mov
lahf
outs
int3
ss
and
pop
sti
xor
sub
out
pop
mov
dec
mov
xchg
xchg
cwde
xchg
dec
aad
arpl
pop
mov
fistp
out
add
test
inc
shr
arpl
add
enter
mov
mov
add
xor
push
or
jae
pusha
fidivr
psllw
adc
in
or
cmp
dec
mov
mov
and
adc
add
cmp
or
add
out
daa
std
mov
sbb
in
in
xchg
gs
sbb
sbb
daa
adc
xor
(bad)
cmp
sub
fld
jg
test
adc
dec
mov
cmp
xor
adc
xchg
(bad)
ja
jp
or
out
out
mov
(bad)
jle
add
dec
fdivr
repnz
sub
jne
push
mov
ins
cmp
add
out
pop
mov
push
mov
lock
and
pop
pop
cli
dec
retf
push
test
movs
mov
arpl
jg
dec
test
dec
stos
nop
inc
or
jmp
inc
xchg
push
movs
inc
mov
arpl
add
and
dec
mov
jo
pop
mov
ja
lahf
jl
fild
loopne
sbb
push
adc
xlat
and
sbb
or
dec
shl
in
adc
inc
mov
mov
shr
data16
push
into
add
imul
and
in
cmp
fistp
sub
iret
ss
int3
pop
aad
js
dec
mov
cmps
lea
push
shr
les
ins
out
xor
out
sub
loopne
movs
xchg
xchg
ins
mov
dec
fisubr
and
cs
xchg
xor
dec
int
jl
sub
sub
push
sbb
scas
gs
fdiv
shr
mov
stos
imul
jmp
shl
sbb
clc
js
call
shl
dec
cmps
xchg
cdq
stos
dec
test
mov
mov
in
mov
les
hlt
jle
cwde
jbe
xor
cmp
cmp
pop
mov
mov
js
js
aas
push
add
enter
pop
fnsave
cmc
mov
mov
xlat
sub
add
popa
(bad)
push
(bad)
aaa
adc
xchg
icebp
pushf
cmps
xchg
jne
lea
cwde
dec
cmps
push
shr
out
adc
scas
fistp
daa
push
lds
sbb
cs
fist
push
mov
mov
push
ror
push
xor
jns
pop
mov
jl
es
sbb
add
adc
xor
or
jne
cs
addr16
push
in
pop
sbb
popa
int3
cmp
call
cdq
lahf
xchg
js
mov
xchg
je
inc
shr
mul
ss
and
call
cmp
pop
mov
pop
adc
adc
and
enter
xor
dec
lea
imul
fimul
loope
sar
pop
xlat
and
cmp
ds
adc
loopne
cmps
inc
mov
xor
dec
mov
or
inc
mov
inc
fisubr
cmp
cdq
mov
(bad)
fild
sbb
mov
mov
push
mov
test
jge
fsubr
test
cs
repz
lods
dec
lea
dec
pop
or
cmp
push
shl
(bad)
ss
mov
je
xor
sub
add
xor
popa
std
ds
pop
mov
mov
fcomp
push
aad
cli
and
xor
loopne
shl
ret
cmp
sub
inc
cmps
mov
(bad)
pusha
clc
es
cmp
fidivr
aas
enter
int
in
or
xor
into
pop
mov
es
cmp
shr
shr
out
mov
jne
call
int3
sub
cs
jmp
stos
jnp
mov
mov
or
ds
pop
lds
arpl
sahf
into
jbe
outs
nop
imul
jmp
lds
retf
xor
repz
xor
lds
(bad)
lea
xor
push
scas
imul
mov
dec
mov
jne
xor
jmp
xlat
or
pop
mov
jae
arpl
sbb
icebp
push
mov
xchg
fs
dec
test
es
clc
test
adc
mov
inc
mov
mov
in
sub
and
iret
adc
sbb
pop
xlat
mov
jg
mov
ss
call
cs
(bad)
pop
mov
fidivr
aaa
ret
pop
movs
inc
mov
imul
(bad)
mov
(bad)
cmp
mov
les
cmp
sbb
lds
jmp
enter
aas
push
loope
in
cmp
daa
lds
in
pop
sub
loopne
jecxz
mov
mov
into
and
push
cld
sub
outs
mov
aas
sbb
sub
jecxz
mov
ins
(bad)
jg
test
inc
nop
fsub
icebp
xor
pop
fstp
sahf
jnp
cmp
iret
jns
sub
ror
mov
and
cmp
add
out
enter
adc
sub
and
or
in
and
les
sbb
mov
jg
jp
outs
movs
pushf
dec
pop
call
ins
(bad)
dec
mov
mov
xchg
popa
mov
movs
shr
sar
retf
xor
pop
xchg
clc
push
test
and
xor
and
es
mov
popf
inc
xchg
imul
ficomp
jl
inc
lea
push
test
nop
(bad)
push
(bad)
adc
ret
add
daa
pop
ds
cld
xor
and
nop
jo
fwait
mov
mov
and
sub
or
push
fld
or
sub
popf
pushf
nop
jl
fwait
test
inc
fsubr
es
inc
mov
loope
mov
and
dec
mov
xchg
push
fstp
jl
xchg
cdq
jp
(bad)
js
dec
cmp
ret
and
xor
sub
xor
neg
imul
aam
push
mul
test
xchg
add
xor
int3
dec
fmul
ret
and
sbb
pop
mov
add
into
pop
sar
lds
jno
cwde
jg
xchg
(bad)
outs
mov
mov
xchg
jg
or
aaa
les
or
cmp
ja
xchg
xchg
int3
aas
retf
push
movs
dec
xchg
je
dec
rcr
xchg
adc
add
test
cmc
js
xchg
je
ins
scas
dec
(bad)
pop
rcr
test
test
into
cmp
lahf
mov
jns
xchg
jae
xchg
cmp
inc
mov
mov
(bad)
sti
cmp
inc
mov
daa
cmp
push
sub
add
inc
scas
cwde
xchg
jne
pop
mov
dec
mov
xchg
jle
jl
add
push
add
and
bnd
cmp
push
repz
inc
cmps
sahf
push
mov
dec
stos
xchg
xchg
dec
stos
popa
mov
xchg
inc
mov
cmp
out
inc
scas
ins
shl
les
clc
daa
arpl
and
sti
nop
lea
sbb
sub
mov
inc
mov
jne
xchg
rcl
fbstp
add
pop
in
ds
adc
aaa
das
ror
sbb
rcl
cmp
pop
sub
cli
daa
clc
and
push
int3
dec
nop
dec
fidivr
xor
pop
mov
popa
test
and
push
ror
inc
leave
adc
push
aad
mov
and
cli
add
(bad)
dec
fstp
lock
out
push
movs
imul
or
push
out
sub
and
dec
inc
(bad)
inc
fstp
outs
fimul
inc
cmps
(bad)
retf
cmp
xor
jmp
test
mov
inc
iret
pop
cld
ss
lock
int3
sub
inc
xchg
pop
mov
push
mov
xchg
xchg
fiadd
sti
push
into
add
add
push
daa
add
push
mov
push
loope
or
mov
jae
pushf
je
xchg
cmp
leave
pop
loope
sbb
adc
or
daa
sbb
ds
cmp
in
or
ss
pop
push
sbb
inc
stos
outs
sbb
xor
test
jmp
hlt
ds
pop
mov
add
pop
mov
retf
ret
cmp
nop
inc
mov
nop
inc
mov
and
ds
pop
cmc
or
adc
jb
inc
adc
push
mov
rcl
push
out
stos
outs
int
scas
jno
jno
mov
sub
sbb
das
in
fadd
jge
jbe
retf
xor
(bad)
pop
sub
dec
mov
or
scas
mov
xchg
jnp
fmul
ja
outs
fst
xchg
cmps
xchg
cwde
ja
cld
cs
test
(bad)
inc
retf
sub
repz
aad
pop
stc
and
(bad)
sub
ins
test
pushf
popa
int3
adc
aas
ret
sub
inc
movs
je
jg
add
lahf
gs
fst
out
add
cmp
inc
retf
xor
(bad)
popa
mov
sub
push
mov
mov
bswap
and
repz
into
cmp
or
aam
shr
adc
and
cld
sub
out
add
rol
jb
call
xchg
je
sub
jo
outs
aas
adc
pop
int
mov
lahf
imul
adc
ds
and
push
mov
lock
or
sbb
jmp
add
jo
push
and
aaa
adc
pop
(bad)
add
adc
cmp
cs
add
cmp
shr
push
fld
cmc
pop
cmp
or
sub
in
out
sub
or
inc
clc
mov
scas
pushf
jo
and
add
int
repz
ins
ret
dec
movs
xchg
jnp
jp
push
movs
xchg
jle
ds
popf
xchg
ins
mov
je
popf
cdq
jp
dec
into
and
jbe
lahf
mov
out
test
dec
lea
pop
fistp
dec
fistp
sbb
repz
(bad)
scas
jle
cwde
jg
inc
mov
int3
das
dec
jmp
retf
retf
jne
or
ficom
popf
ja
xor
out
adc
aas
retf
dec
mov
xor
cmp
mov
movs
jle
xor
or
or
mov
xchg
dec
shl
enter
pop
rcr
mov
jb
outs
mov
rcl
icebp
das
clc
dec
sbb
push
out
dec
aaa
add
and
out
cs
xor
ret
pop
shl
icebp
je
or
out
xor
xor
sti
and
xchg
(bad)
outs
lods
call
mov
xchg
jg
add
mov
iret
dec
rol
xchg
push
push
clc
ds
sub
and
mov
mov
in
retf
push
mov
push
xchg
jbe
jecxz
or
test
mov
mov
inc
std
push
mov
inc
mov
xchg
mov
repz
rcl
out
test
mov
adc
sbb
sub
pop
out
scas
push
(bad)
sub
test
cmp
or
pop
repnz
push
mov
add
sbb
push
(bad)
je
xchg
mov
and
adc
push
mov
fcom
jmp
mov
mov
fdivr
add
push
sbb
cmp
ret
pop
sub
loope
mov
mov
arpl
mov
lock
xchg
popa
fistp
sahf
fwait
pusha
in
or
xor
cmp
push
movs
nop
jns
sti
pop
stos
push
mov
popf
xchg
xchg
imul
xchg
imul
in
mov
xchg
push
into
pop
mov
(bad)
daa
jo
pop
shl
out
fadd
jmp
sbb
ds
(bad)
push
mov
ins
cmp
push
nop
and
dec
fdiv
sub
std
pop
(bad)
pop
push
lds
lahf
jns
push
ins
enter
imul
lods
mov
push
mov
aad
mov
inc
mov
xchg
inc
retf
cmp
add
sbb
adc
inc
ficom
test
ficom
add
mov
add
sbb
lock
mov
pop
mov
(bad)
je
call
es
cmp
jae
ins
shl
push
and
cmc
sub
fsubr
jmp
adc
mov
jo
lahf
pushf
movs
jne
and
xor
ins
mov
push
iret
and
lods
pushf
jg
xchg
or
jne
inc
mov
mov
(bad)
sub
dec
enter
call
xor
pop
lods
(bad)
fdivr
out
jle
fwait
dec
xlat
inc
xor
adc
pop
xor
mov
nop
data16
pop
adc
xor
push
in
int
sub
cmps
jno
inc
xchg
retf
and
stc
das
jecxz
fadd
jnp
xchg
div
or
and
aam
loope
xor
sti
add
pop
xchg
mov
xor
or
clc
pop
clc
adc
push
pop
adc
dec
mov
fs
pop
ficomp
outs
fdivr
stos
popf
je
pusha
rol
imul
(bad)
es
dec
xchg
lea
pop
shl
sub
or
out
not
lahf
mov
lahf
jp
cmp
test
stos
dec
mov
repz
xlat
sub
scas
mov
inc
mov
fcom
popf
mov
jae
adc
or
pop
fst
pop
mov
xchg
jnp
sub
sbb
ror
push
mov
jmp
jbe
(bad)
fmul
stos
pusha
lds
nop
mov
test
add
jb
sahf
js
test
imul
sbb
sti
add
pop
or
mov
aaa
or
pop
mov
lea
inc
movs
lods
xor
lock
fisttp
icebp
dec
xchg
je
sub
dec
fdivr
xor
jae
xchg
jp
sar
es
add
and
jae
sbb
xchg
xchg
inc
fisttp
mov
fstp
out
push
jne
xchg
dec
lods
addr16
cmps
cdq
inc
mov
or
cmp
lock
repnz
loop
ret
dec
mov
xor
retf
inc
xchg
inc
fadd
hlt
daa
cld
pop
mov
aad
mov
sub
aas
not
mov
and
sbb
and
pop
scas
push
adc
enter
mov
nop
mov
mov
push
mov
addr16
mov
add
iret
ud2
arpl
push
mov
jg
movs
mov
add
jl
push
inc
mov
into
sahf
data16
(bad)
dec
sub
mov
pop
scas
lea
mov
aam
mov
mov
mov
push
int3
and
ds
pop
test
jbe
gs
push
repnz
xlat
push
jmp
daa
dec
mov
cdq
jae
xchg
ins
fistp
inc
mov
sbb
adc
sub
adc
push
lods
jae
dec
mov
out
fsub
int3
add
sub
arpl
mov
jge
adc
pop
mov
xchg
push
fldcw
add
adc
into
mov
mov
mov
(bad)
leavew
or
push
adc
retf
push
mov
push
cmp
and
adc
(bad)
pop
mov
jge
push
mov
lds
jecxz
stc
inc
mov
and
add
push
pop
int3
sub
int3
dec
mov
stc
xor
stc
mov
or
icebp
inc
hlt
inc
cmps
xchg
mov
fdivr
std
push
cli
pop
movs
cmps
test
jg
loopne
cld
and
dec
fsub
sub
push
leave
push
add
xor
cmp
sub
add
sub
(bad)
daa
into
xchg
ins
lods
jns
(bad)
dec
mov
pusha
xlat
push
mov
jle
pop
add
scas
ins
mov
mov
iret
or
xor
and
or
adc
arpl
mov
cld
push
mov
fiadd
fwait
dec
and
sbb
sub
loopne
adc
mov
push
ins
int3
pop
aam
jmp
es
aad
call
imul
pop
(bad)
lds
cld
inc
mov
xor
leave
pop
mov
pop
loope
add
loopne
iret
das
test
or
cmp
hlt
push
add
rcl
scas
push
mov
popa
fldcw
cmp
sbb
retf
leave
pop
lods
dec
xor
mov
mov
test
cwde
lahf
jg
cdq
jl
pop
mov
cmp
dec
scas
pusha
adc
push
retf
push
or
adc
adc
push
lods
jbe
cmp
sub
pop
push
fstp
popf
mov
mov
daa
push
(bad)
ss
dec
fldenv
out
lea
adc
in
cmps
sub
ins
inc
sbb
cmp
pop
adc
xor
push
lds
fdivr
mov
outs
fdivr
in
inc
test
pusha
mov
inc
cmps
jae
dec
push
adc
jne
cmp
xor
(bad)
data16
ins
add
push
adc
loop
loop
scas
fistp
mov
dec
mov
out
sti
psllw
xchg
ja
add
push
in
es
cmp
dec
rol
cmp
xchg
nop
ins
mov
leave
dec
lds
clc
push
and
in
pop
nop
dec
sar
sbb
cmp
adc
inc
ret
bound
adc
cmp
sti
add
stc
cmp
call
jp
push
in
in
or
sbb
jo
pushf
inc
fidiv
sbb
or
mov
ds
add
cmc
and
out
and
push
cmc
xor
les
sub
or
xor
add
dec
mov
cmps
mov
cmp
dec
aad
mov
fadd
clc
xor
dec
rcl
adc
push
sbb
out
ficomp
mov
cwde
test
jmp
add
push
movs
xchg
movs
mov
or
sbb
cmp
cmp
int
cmps
jae
cmc
push
xchg
dec
add
push
add
cmp
xor
add
mov
add
and
rol
fdiv
mov
inc
xchg
mov
les
je
xor
and
fnsave
push
ds
inc
test
pop
push
sbb
in
outs
cdq
xor
repz
fs
xor
jmp
mov
push
test
mov
fnsave
mov
(bad)
cmc
inc
xchg
push
sbb
lock
ja
xor
xchg
cmps
sbb
mov
ret
mov
test
inc
int3
sbb
add
pop
rcr
js
xchg
outs
hlt
add
test
mov
fisttp
test
xchg
in
(bad)
in
loopne
mov
popa
adc
cs
xlat
sbb
mov
jmp
mov
pusha
sub
push
pop
xchg
cdq
dec
cs
fdivr
cmp
repnz
pop
push
outs
(bad)
cli
(bad)
add
jo
sahf
dec
clc
out
inc
mov
call
cmp
inc
jae
pop
loopne
and
call
addr16
sbb
sub
out
push
je
test
pop
(bad)
stc
jne
retf
(bad)
loop
sbb
jmp
jb
and
fld
int
enter
pusha
in
jecxz
(bad)
out
xchg
shl
into
mov
push
xchg
int
jl
sub
loop
dec
mov
mov
and
les
pop
push
pop
stos
sub
pop
retf
jb
out
xchg
rol
sub
add
inc
(bad)
push
inc
and
jmp
add
cdq
(bad)
cmc
out
push
out
popa
add
iret
fld
mov
mov
(bad)
cmp
push
push
sub
push
ins
out
mov
dec
mov
in
jne
and
out
and
push
and
repnz
popa
aaa
ror
sbb
scas
adc
xor
xchg
jo
cmp
add
add
sub
xlat
dec
ret
jbe
rep
test
xlat
sbb
(bad)
jno
jl
scas
add
les
fld
popf
shl
popa
addr16
fwait
push
push
bound
(bad)
mov
cwde
fild
mov
outs
jae
push
jne
fisttp
ins
aaa
adc
shl
push
leave
push
imul
leave
loope
aam
inc
jmp
ds
pop
inc
ss
std
dec
lods
mov
icebp
mov
jne
je
sbb
jecxz
daa
jp
and
pop
test
mov
push
mov
mov
xor
mov
mov
stos
sbb
sahf
mov
shr
stos
sti
adc
dec
mov
out
ret
mov
pop
imul
push
sbb
ds
inc
lahf
cmp
neg
pop
and
loope
test
je
mov
xor
int
pop
pop
loope
inc
mov
arpl
fcmove
jle
jns
ror
call
jbe
les
and
sub
out
popa
lds
push
xchg
js
cmps
jmp
pop
and
xor
cmp
adc
neg
fidiv
pop
je
lods
dec
jp
adc
mov
fld
cmp
out
sbb
mov
xchg
cs
xor
rcl
cmp
xor
push
aad
jecxz
cmp
pop
lds
pop
jmp
stos
cmps
or
pop
adc
rcr
ins
cdq
into
xchg
cmp
in
call
out
ror
and
sub
or
je
push
inc
nop
cmp
push
mov
and
and
jecxz
push
ins
call
xor
scas
xlat
lahf
or
movs
mov
test
ret
call
cmp
mov
xchg
out
scas
imul
inc
and
scas
add
and
inc
test
popa
jo
popf
pop
cmp
add
dec
xchg
xchg
in
dec
jbe
sub
jmp
lods
and
dec
stos
xchg
pop
push
in
mov
xchg
add
add
test
xchg
push
mov
scas
mov
in
cdq
pop
rcl
mov
(bad)
or
lock
rol
outs
ret
(bad)
repz
add
inc
sub
stos
int3
sbb
sbb
push
inc
rcl
cmp
or
iret
or
sbb
daa
ficom
pop
xor
test
fidiv
mov
adc
sahf
out
mov
mov
retf
cmp
inc
jno
inc
cli
push
jecxz
sti
jp
adc
daa
push
mov
xor
xchg
xchg
mov
push
mov
sbb
mov
cmp
pop
pop
cmp
rcl
dec
ins
sbb
into
test
sub
mov
mov
xchg
pushf
mov
addr16
mov
into
mov
fisub
scas
push
push
popa
fsub
mov
in
jmp
je
aam
xor
sbb
adc
in
loopne
(bad)
pminub
int
xchg
mov
ins
sbb
fs
inc
mov
enter
jp
xor
gs
dec
das
(bad)
mov
movs
xchg
popa
(bad)
and
mov
pushf
(bad)
mov
cmp
xchg
sbb
xchg
jle
mov
jbe
jb
shl
jle
push
jmp
mov
addr16
mov
cmp
ins
pop
pop
sar
push
fwait
mov
jg
shl
pop
or
adc
fwait
imul
out
(bad)
dec
daa
stos
cmps
pop
mov
mov
fdiv
fldcw
js
mov
aas
cmps
sub
ror
les
pop
or
mov
aam
inc
sub
into
mov
stc
icebp
push
ja
inc
lds
call
pop
dec
shr
xchg
int3
int
(bad)
mov
jecxz
cmp
xchg
add
sub
cwde
sub
arpl
xchg
retf
mov
xor
mov
cmp
call
sbb
mov
jmp
and
push
aam
pop
outs
(bad)
gs
mov
rcl
popa
mov
movs
jns
sbb
push
in
test
cmps
push
ja
js
test
adc
pop
mov
int
mov
add
out
cmp
aam
lds
adc
jge
sahf
xor
push
and
cmp
jb
jbe
int3
mov
xchg
jge
addr16
stc
in
add
jmp
loope
push
xchg
xchg
out
shr
add
mov
das
cmp
pop
je
sbb
stos
xor
mov
ins
sti
jb
in
mov
cmp
add
(bad)
fld
seto
jns
push
mov
dec
sbb
add
mov
fsubr
fisttp
and
mov
gs
cld
lods
(bad)
popf
retf
mov
(bad)
sub
add
xor
movs
inc
inc
inc
xor
adc
retf
leave
ret
bound
add
call
stos
sub
cvtps2pi
icebp
lods
retf
cdq
sbb
idiv
cmps
jae
pop
or
sbb
add
mov
jbe
out
movs
(bad)
adc
dec
(bad)
fidivr
scas
call
dec
call
dec
add
cmp
and
jo
xor
xchg
add
xor
aas
bnd
movs
xor
xor
xchg
xchg
scas
push
mov
or
pop
inc
or
mov
jmp
mov
hlt
outs
imul
popf
pushf
jno
adc
adc
shld
aam
or
popf
stos
je
xchg
in
mov
dec
ds
inc
mov
in
nop
cmp
sahf
(bad)
enter
and
sbb
out
mov
enter
loop
fimul
push
jmp
jno
pop
(bad)
lods
jns
inc
xor
sub
and
rol
pop
jb
jmp
mov
adc
hlt
into
aas
sbb
cmp
push
test
sub
mov
jecxz
mov
jmp
aas
push
push
cmp
jmp
inc
inc
mov
ret
cmp
es
jecxz
int
mov
je
popf
mov
fnstenv
retf
out
cli
adc
mov
out
mov
mov
sub
popf
dec
cmps
mov
ret
jge
ficom
push
mov
mov
add
jg
add
or
rol
loopne
cmps
popw
pop
mov
fst
pop
inc
jmp
ret
stos
sahf
fstp
push
pop
jb
call
cmps
call
in
cmc
jmp
mov
rcl
jp
stos
fistp
push
in
icebp
out
mov
mov
clc
jmp
mov
dec
sbb
cmps
add
jl
lahf
mov
nop
cdq
xchg
inc
scas
dec
movs
fdivr
xchg
or
mov
mov
(bad)
ins
dec
ds
leave
cmp
call
test
sbb
adc
sar
mov
and
jl
mov
inc
cmp
cdq
mov
xor
test
jmp
sub
movs
push
outs
or
xchg
lahf
adc
ds
mov
dec
mov
pop
xchg
repz
into
xlat
mov
xchg
aaa
xchg
movs
push
test
push
mov
test
push
mov
call
xchg
push
adc
jg
lods
adc
std
icebp
repnz
mov
sbb
mov
and
xor
push
rcr
into
jmp
loopne
enterw
jg
add
xor
loope
jmp
jp
jne
mov
cmps
and
push
and
inc
xor
dec
movs
aaa
retf
addr16
sub
add
mov
jnp
fnsave
sub
icebp
cmp
push
cwde
hlt
test
jnp
test
ret
pop
sub
mov
dec
mov
inc
imul
xor
and
adc
iretw
dec
ficom
(bad)
repz
gs
cmc
push
sub
jp
inc
jg
ret
add
inc
bound
dec
rcl
out
sbb
inc
or
inc
add
sar
and
(bad)
sti
jo
mov
shr
mov
adc
aaa
xchg
dec
call
sub
je
push
push
fstp
xor
in
pop
retf
cs
mov
xchg
pop
js
cs
dec
iret
inc
jb
xchg
pop
xor
or
xchg
int
into
jo
mov
and
dec
push
pop
mov
pop
shr
xor
fs
cld
(bad)
jne
xchg
xor
sbb
lea
cwde
enter
jns
mov
push
test
mov
in
cs
mov
push
mov
or
aas
movs
mov
movs
xor
xchg
cdq
rcr
or
cmp
xor
lods
or
test
cmp
popa
cmp
stc
sbb
sahf
test
out
jae
mov
xor
stc
ret
iret
and
retf
or
push
rcr
mov
or
pop
in
mov
jno
jo
outs
ss
mov
sbb
lods
out
iret
push
ja
stos
fadd
jmp
out
push
sub
inc
std
cmps
(bad)
(bad)
popa
outs
jg
fbld
js
mov
xor
xor
push
cmp
or
jg
inc
inc
sub
push
gs
ins
lock
pop
or
loope
lds
lahf
adc
add
ins
xor
rcr
fsub
sbb
scas
dec
(bad)
repnz
mov
jmp
mov
xchg
sub
scas
push
test
mov
push
push
mov
out
gs
mov
mov
int
movs
push
jge
sbb
popf
xchg
mov
std
or
xlat
outs
repz
xor
mov
jle
sub
and
dec
mov
aam
mov
inc
push
gs
test
rol
pop
imul
daa
mov
icebp
or
inc
push
popf
in
mov
movs
fsub
scas
push
add
in
aaa
or
popf
cld
nop
mov
and
pop
stos
xor
mov
xchg
retf
leave
sub
pop
int
push
lahf
pop
fldenv
pop
movs
mov
mov
pop
les
mov
push
test
add
jg
out
push
mov
in
in
frstor
and
(bad)
sbb
or
xchg
mov
sahf
es
inc
daa
call
add
add
jnp
pop
(bad)
inc
data16
movs
adc
mov
leave
jb
fsubrp
cmp
adc
sbb
je
mov
fmul
int3
push
adc
and
retf
outs
push
daa
pop
(bad)
cmp
mov
push
cs
iret
(bad)
jmp
mov
mov
fs
test
test
mov
lods
xchg
in
jl
cmp
sti
call
outs
cwde
hlt
xor
inc
enter
arpl
sub
inc
mov
ret
mov
xchg
imul
jbe
jmp
movs
push
in
int
mov
pop
adc
repz
call
lock
xor
cmp
or
sub
call
inc
and
pop
addr16
cmp
hlt
xlat
lods
xor
ins
mov
cld
xor
sahf
jecxz
movs
push
lds
mov
lahf
mov
pop
fisubr
out
push
pop
xchg
push
dec
pop
movs
xchg
(bad)
test
imul
(bad)
dec
std
enter
mov
dec
mov
sub
xor
ds
and
inc
retf
inc
movs
xchg
repz
adc
test
jmp
cmp
das
pop
dec
cmps
stos
mov
(bad)
(bad)
cs
inc
inc
xchg
inc
adc
sub
sahf
repz
sbb
mov
xor
push
pop
jecxz
ret
mov
shl
mov
(bad)
and
xchg
popf
hlt
sub
mov
retf
ja
adc
ret
and
das
xchg
test
ret
sub
pop
pop
inc
retf
lods
jmp
pop
fsubr
in
xchg
les
mov
mov
push
fsub
(bad)
pop
xor
mov
dec
ret
das
dec
movs
mov
(bad)
mov
mov
xchg
retf
add
inc
loop
outs
push
push
ret
mov
pop
cmp
adc
mov
(bad)
(bad)
jl
test
cli
pop
shl
pop
pop
call
fldenv
test
fiadd
dec
pop
inc
pop
(bad)
hlt
mov
xor
xchg
out
fcomp
test
dec
repz
mov
or
mov
xor
addr16
push
rol
ret
test
mov
int
mov
ins
add
and
outs
pusha
outs
cwde
xor
in
lods
out
(bad)
pop
ds
es
ret
loop
xor
loope
gs
push
push
xchg
call
xor
xchg
pop
jno
sub
jp
and
sahf
push
mov
push
cmp
xchg
(bad)
cld
out
dec
aas
repz
sahf
(bad)
jno
sahf
es
es
mov
shr
and
(bad)
hlt
jo
dec
mov
sub
push
pusha
mov
sbb
sbb
cmc
cmps
pushf
movs
xor
and
imul
jle
je
lahf
add
in
pusha
hlt
push
xchg
(bad)
test
int
vmcall
dec
test
mov
dec
or
(bad)
inc
sub
mov
in
cmp
int
rol
mov
aad
mov
mov
fldenv
xchg
xor
push
fild
xor
ror
push
add
sub
jne
rcr
fdiv
fisttp
scas
add
test
fbstp
and
dec
les
and
sub
xchg
xor
push
fnsave
jmp
xchg
test
cli
push
call
sbb
inc
int
test
ins
(bad)
sub
mov
adc
stc
xchg
mov
lds
and
or
data16
je
mov
(bad)
mov
ficomp
jno
repz
or
into
mov
jbe
outs
sub
(bad)
adc
pop
mov
pusha
push
lea
mov
lea
mov
cdq
bound
fsub
cmp
pusha
into
test
mov
cli
daa
fbstp
ins
in
mov
push
xor
shl
jle
and
outs
jmp
jno
jg
lods
call
repz
ins
push
mov
fucomp
sbb
stos
(bad)
loope
adc
and
mov
aad
xchg
popa
and
xor
out
scas
aaa
add
and
cmp
xor
mov
mov
fcomp
scas
jbe
mov
test
adc
lea
adc
pop
mov
ins
lock
jl
dec
cwde
es
sbb
mov
cdq
xor
cmp
jae
mov
push
stos
dec
outs
loop
loopne
fsubr
out
sbb
leave
add
int3
es
movs
mov
adc
dec
sub
mov
pop
rcr
and
fidiv
das
sbb
jmp
xor
adc
cmp
add
jne
mov
cld
adc
fst
jp
adc
test
test
jns
or
mov
push
xchg
xor
dec
inc
lods
out
mov
sub
ss
pop
lock
mov
mov
in
xor
sub
sbb
jmp
clc
push
push
lods
pop
sub
aas
fstp
push
div
mov
adc
sbb
pop
adc
or
aad
clc
add
push
int3
ficomp
push
popa
jmp
movs
pop
dec
mov
adc
xchg
scas
inc
fs
mov
es
push
int3
inc
and
pop
ja
pusha
or
data16
gs
jmp
xlat
xchg
xchg
xchg
rcl
loopne
sbb
icebp
mov
or
out
test
jae
sbb
mov
les
mov
pop
cmp
icebp
dec
(bad)
fsubr
jnp
mov
lds
stos
aam
xor
push
in
adc
mov
push
stos
loope
sbb
in
retf
in
mov
aaa
xchg
mov
push
push
arpl
popf
or
loop
or
in
dec
(bad)
(bad)
(bad)
out
add
xor
push
push
add
outs
out
add
sbb
hlt
mov
cmp
popf
jno
jns
add
push
sahf
or
retf
jp
push
add
out
inc
xchg
sahf
stos
jns
pusha
shl
(bad)
arpl
lods
movs
cmp
xchg
push
aaa
or
movs
cmps
bound
add
sbb
sbb
inc
jns
jno
cld
hlt
lahf
add
sbb
dec
xchg
dec
fbld
lods
mov
(bad)
(bad)
(bad)
cmp
sub
movs
ss
aam
ss
movs
push
cmp
sub
icebp
inc
lea
pop
sbb
scas
push
ds
lods
sub
in
cmc
sub
outs
mov
dec
jo
adc
sbb
retf
mov
out
imul
or
or
cmp
cdq
adc
stc
repnz
jge
aam
leave
pushf
jmp
mov
or
or
test
ja
pop
and
mov
mov
xor
push
fdecstp
push
pop
cwde
outs
scas
sahf
stos
imul
sbb
cmp
inc
sbb
sahf
clc
inc
jns
mov
adc
and
and
pop
xchg
cs
jle
or
sub
xor
xchg
jmp
push
shl
push
add
xchg
push
add
nop
pushf
push
xchg
and
fidivr
popf
dec
in
cs
das
jp
jle
out
ds
jno
retf
test
push
loopne
adc
add
inc
aad
adc
nop
or
inc
dec
mov
jae
mov
cmp
mov
lds
pop
mov
loop
sahf
aas
rol
mov
lock
jno
jmp
xchg
sbb
rcl
sbb
push
pop
xchg
(bad)
fs
es
inc
cmp
fs
inc
cmp
shr
ret
out
mov
out
pop
ins
rcl
ds
adc
mov
xchg
jmp
mov
lock
xchg
aam
aas
fucomi
cli
sub
mov
arpl
dec
sub
push
cmp
push
mov
and
mov
test
and
shl
repz
ins
call
cmp
(bad)
arpl
repz
(bad)
xchg
mov
inc
in
loopne
cld
and
hlt
inc
push
cmp
pop
xchg
imul
xchg
xlat
xchg
aam
or
sub
stos
js
xchg
adc
inc
push
jno
and
cmp
scas
icebp
sti
les
jns
push
cmc
dec
mov
es
mov
fwait
mov
fsub
fwait
daa
ins
scas
rcr
and
mov
jnp
aam
jle
je
fnstcw
ss
hlt
int
jb
mov
cmps
shl
stos
ret
retf
js
jbe
rcr
ss
sub
jae
jg
jge
lahf
jmp
jbe
nop
ins
repnz
mov
cmc
iret
bound
mov
sbb
fxch
sub
dec
xor
(bad)
push
cmp
enter
add
xor
mov
cmp
popa
nop
mov
ret
mov
pop
or
daa
or
repz
add
dec
push
push
shl
xchg
inc
or
pusha
lea
cmp
mov
mov
inc
ror
repz
adc
dec
push
mov
mov
pushf
aad
sbb
mov
add
sbb
and
je
xor
shl
mov
out
imul
retw
mov
imul
adc
sbb
adc
dec
repz
movs
shl
sub
push
adc
mov
retf
jmp
ret
fmulp
or
js
adc
popf
mov
mov
push
xchg
cs
mov
fadd
mov
ins
jl
fwait
jle
icebp
mov
div
in
fwait
cld
xchg
lods
mov
mov
add
mov
xor
cmp
imul
out
pop
sub
jmp
dec
sti
leave
dec
push
and
call
call
in
ds
sub
call
shr
jno
sub
jl
jns
test
push
xchg
cli
push
fidiv
pop
jo
cmp
inc
xlat
jmp
jmp
jecxz
sub
rol
cmps
dec
les
inc
int3
xor
mov
mov
stos
mov
cmp
(bad)
push
or
push
fild
mov
shl
sti
sub
out
xor
(bad)
xor
xor
data16
dec
mov
mov
jp
retf
adc
push
sub
(bad)
xor
sbb
jmp
sbb
out
xchg
sub
jae
out
in
rcl
pop
je
in
shl
addr16
data16
popa
dec
into
into
mov
xor
xor
push
mov
int3
fld
add
mov
repnz
dec
adc
idiv
dec
lods
inc
mov
fisub
xchg
push
ja
cld
adc
sbb
jle
test
les
pop
xor
xor
bound
or
sti
dec
iret
push
std
mov
addr16
stos
or
outs
inc
push
hlt
popf
repz
dec
add
cs
(bad)
fdivrp
mov
test
scas
or
daa
pop
out
fld
jne
xchg
adc
pop
jg
pushf
mov
iret
call
push
retf
icebp
push
das
cs
mul
sahf
std
dec
out
shl
or
lods
xchg
sub
cdq
inc
fs
xor
cwde
les
jl
add
stc
shr
mov
mov
jl
in
xchg
adc
or
mov
ins
mov
test
fwait
xchg
dec
or
xchg
inc
jnp
shl
and
inc
or
push
test
enter
sub
mov
popa
mov
sub
outs
stos
std
sbb
add
and
out
jbe
into
out
xor
xchg
cmc
mov
mov
lods
cmp
bound
xor
(bad)
and
enter
cmp
into
test
outs
es
jae
out
adc
in
js
shl
sub
dec
dec
cmp
or
popa
mov
inc
mov
jmp
mov
dec
cmp
mov
test
xor
dec
gs
jecxz
repnz
repnz
inc
jle
sbb
xor
dec
adc
fld
test
push
int
sub
(bad)
cmp
pushf
bound
jp
dec
cmp
xor
sub
out
mov
fnstenv
sbb
dec
ins
jbe
adc
arpl
imul
cmc
inc
stos
jmp
dec
aam
stos
fcmovbe
(bad)
xor
repnz
jb
shr
loopne
call
in
outs
jecxz
lods
add
lods
push
retf
mov
xor
adc
push
dec
lahf
scas
pop
add
or
and
arpl
sti
and
pop
stos
jbe
sub
(bad)
jne
xor
mov
aad
cdq
lods
add
add
bound
in
stos
xchg
scas
movs
jnp
jle
shl
cmps
cmp
lock
test
xor
add
jne
fstp
jmp
mov
jecxz
jbe
jl
mov
lahf
dec
scas
stc
aam
ret
lahf
sub
arpl
and
dec
popf
jmp
stc
sahf
mov
stc
push
adc
rcl
gs
lods
je
movs
mov
cmp
arpl
sbb
inc
inc
jno
adc
lahf
pushf
jg
das
jge
push
test
bound
inc
scas
ds
mov
and
into
sub
cmps
loopne
hlt
sbb
cmp
xor
fadd
jg
int
pushf
adc
jns
and
xor
xor
pop
sbb
loopne
or
popf
push
pop
loopne
(bad)
cmp
xor
imul
add
pop
mov
test
bound
fisubr
enter
pop
mov
cmp
mov
sbb
aas
sbb
popa
xchg
sbb
xor
repnz
cmc
test
jnp
mov
push
inc
enter
ins
mov
dec
retf
fmul
mov
(bad)
(bad)
(bad)
(bad)
popf
cdq
test
nop
ins
not
xchg
fcom
cmp
mov
fcmovu
ret
jecxz
mov
hlt
pop
pop
and
in
aad
jmp
out
jne
xor
in
aas
cmp
in
adc
js
xchg
fstp
loop
(bad)
out
jle
(bad)
mov
test
jns
pop
rcl
jle
xchg
xor
xor
push
mov
mov
addr16
jae
fild
popf
pop
in
xlat
call
dec
leave
sbb
call
pop
adc
pop
scas
push
mov
mov
(bad)
mov
adc
dec
shl
nop
js
xchg
dec
push
cmp
iret
fist
sbb
stos
cdq
jge
cmps
lods
lea
mov
adc
loopne
inc
jge
or
call
jl
call
add
test
add
ficomp
jb
test
sti
jns
inc
xchg
add
adc
pop
push
or
push
push
pop
cmc
dec
add
mov
xor
jp
pop
pop
out
xchg
aam
dec
jb
call
sbb
add
stc
xchg
mov
pop
mov
pop
sbb
in
test
push
sub
xchg
adc
fimul
ficomp
add
inc
call
std
lods
xchg
enter
jne
daa
dec
neg
dec
push
and
ror
mov
adc
movs
push
jo
rol
push
fabs
addr16
into
es
pop
xor
inc
ret
lahf
adc
xor
jne
loopne
data16
test
ror
(bad)
mov
ins
cmp
out
scas
scas
mov
mov
iret
push
les
inc
jbe
push
and
push
rol
push
sub
test
xchg
inc
sbb
and
add
(bad)
pop
mov
push
std
ret
sbb
or
add
lods
cmp
xor
jle
test
je
sub
pop
out
push
loop
ret
sbb
inc
pop
call
push
adc
cmps
xor
inc
cli
mov
shl
sbb
mov
inc
pop
(bad)
mov
repz
lods
xchg
imul
sbb
enter
adc
out
pop
xchg
lods
push
cmc
dec
mov
jl
pop
pop
mov
sar
add
mov
fbstp
push
inc
fsub
cld
pop
jnp
xor
or
pop
ror
idiv
shr
adc
cmp
lods
addr16
fsubr
sbb
int
inc
out
lea
fst
cmps
inc
ins
ins
or
mov
int
dec
sub
call
pop
cmp
xor
(bad)
fnsave
sub
cmp
inc
or
aad
xchg
push
dec
imul
cs
sub
inc
enter
out
out
rol
xor
lods
cli
mov
jnp
gs
movs
nop
mov
push
in
cmps
dec
inc
out
(bad)
cmp
pop
cmp
pop
adc
cmp
pusha
fild
ror
cmp
jne
cwde
pop
(bad)
mov
pop
sbb
dec
pop
and
in
push
arpl
sbb
(bad)
mov
inc
xchg
xchg
in
sti
add
add
out
cld
mov
fdiv
repnz
nop
dec
mov
loop
bound
adc
mov
mov
or
dec
std
in
out
mov
iret
cmp
jo
sbb
push
mov
mov
pop
loopne
mov
dec
aas
mov
js
inc
lods
cdq
mov
test
adc
cmps
rcr
cmc
mov
cld
sbb
xor
retf
sub
sub
xor
ins
out
sbb
xor
aaa
mov
shr
fcomp
pushf
mov
and
jge
sahf
add
sub
sub
call
ins
scas
movs
icebp
add
pop
sar
sub
test
jp
add
and
int
pop
addr16
add
sub
dec
fnstcw
daa
dec
int
jmp
add
pop
and
xor
inc
mov
xchg
aas
(bad)
mov
mov
cmp
adc
pusha
pop
adc
daa
mov
sub
not
or
popf
loopne
dec
dec
popf
xor
xor
les
and
outs
mov
es
push
(bad)
rol
or
push
adc
lahf
mov
push
pushf
lahf
aaa
push
mov
inc
push
imul
sbb
fwait
or
push
call
int
mov
popf
cs
mov
cmps
xor
scas
into
je
and
test
xor
popf
inc
xchg
enter
mov
pop
dec
(bad)
cli
test
mov
retf
rol
fs
mov
aaa
in
mov
pop
jle
nop
lds
xor
xor
bound
lods
ja
in
dec
stos
js
push
dec
xor
push
call
fsub
mov
rol
retw
stos
mov
inc
jmp
ja
push
(bad)
mov
pmulhuw
mov
cmc
push
movs
repnz
dec
jno
int
aas
(bad)
mov
test
mov
stc
sbb
dec
out
sub
jge
cmps
cmps
push
push
rol
cmp
mov
cmps
pusha
adc
loope
ret
shl
push
mov
dec
(bad)
add
mov
retf
mov
lock
mov
jle
pop
test
ror
mov
dec
sbb
jnp
jl
cwde
out
mov
pop
icebp
es
push
fcmovb
aas
dec
rol
or
out
aam
inc
out
pop
std
xor
dec
cmp
fbld
inc
jmp
iret
sub
inc
icebp
sub
sub
popa
xor
rcr
mov
stos
in
and
dec
retf
sahf
cmp
mov
xchg
adc
shr
or
call
jle
sbb
pusha
stos
test
add
das
dec
adc
shl
lock
cs
sub
mov
inc
cs
outs
(bad)
cmp
cli
or
cmp
int
in
(bad)
retf
add
push
push
pop
or
cli
inc
jnp
mov
cmps
(bad)
adc
inc
inc
xor
ins
lods
xchg
add
sub
mov
fidiv
jb
ret
push
ror
addr16
fmul
std
sbb
dec
sub
lods
pop
inc
mov
adc
ret
pop
nop
ds
xchg
or
cmc
cmp
dec
cmp
repz
daa
pop
cwde
jbe
cmp
push
rep
enter
cld
lea
stc
jge
pop
add
fisttp
mov
push
push
mov
mov
pop
push
mov
(bad)
aas
lods
xchg
fstp
aam
mov
cwde
test
lahf
mov
xchg
and
push
add
mov
inc
sar
jb
cmps
stos
fdivr
mov
xchg
scas
cli
pop
pop
lea
mov
popa
fild
int
in
nop
mov
and
mov
rcl
inc
dec
outs
or
jno
pop
xor
fild
xchg
mov
or
add
cmp
cs
sub
or
scas
sbb
jo
lods
loop
cmc
push
cmp
inc
cs
fnstsw
mov
adc
cmps
jg
xor
outs
sub
call
repz
jnp
push
mov
(bad)
hlt
test
mov
xor
stos
cmp
ror
out
lods
ss
outs
mov
fdivrp
or
inc
xchg
outs
aas
retf
push
ja
cmp
xchg
retf
adc
cmp
mov
shl
shl
cs
bound
sub
sbb
fistp
jl
test
sbb
ds
mov
int3
adc
inc
jg
dec
pop
test
cmp
mov
mov
es
call
dec
call
dec
add
loop
ja
fs
push
or
jl
jae
(bad)
loopne
lds
add
loope
cld
jne
xchg
sub
stc
or
and
bound
dec
inc
ror
js
loope
mov
shl
(bad)
std
leave
or
mov
push
mov
movs
retf
jns
cs
test
jp
shl
ja
daa
pushf
adc
and
jge
dec
mov
mov
fidivr
int3
sub
jmp
push
imul
fnclex
test
movs
neg
mov
mov
arpl
sti
or
call
mov
add
add
jmp
xchg
cwde
or
xor
adc
cmp
xor
pop
or
mov
in
enter
xchg
loop
sbb
data16
test
jns
push
lahf
xchg
cli
or
sub
pop
jmp
sbb
scas
mov
dec
sbb
xor
pop
sub
cmps
jecxz
xchg
std
outs
inc
cmp
cmp
jo
xor
jnp
cmp
jmp
daa
inc
fimul
(bad)
scas
fwait
cmps
leave
jne
in
or
mov
sbb
adc
js
mov
push
std
or
imul
movs
mov
test
aam
mov
jb
inc
cmc
jae
nop
cmp
push
cmp
lods
js
inc
aad
aad
int3
movs
lods
push
test
adc
cwde
cdq
or
pop
mov
mov
clc
mov
sub
mov
and
ja
jo
jne
iret
mov
mov
inc
xor
pop
jp
jg
inc
mov
(bad)
popa
(bad)
out
stos
loopne
rol
loope
mov
xchg
outs
ret
pushf
les
pusha
jne
push
ror
lds
stos
rcr
daa
pushf
gs
int3
lahf
mov
(bad)
push
inc
fcomp
mov
mov
sbb
loop
adc
cmp
shr
std
pop
or
pusha
fimul
int
mov
xchg
neg
mov
lock
out
lahf
add
test
jo
test
test
inc
mov
lea
mov
xor
push
icebp
test
into
adc
mov
out
pop
pusha
sub
out
aaa
xor
movs
xor
or
hlt
in
pop
(bad)
xchg
sbb
shl
xchg
sub
push
jmp
mov
sbb
inc
add
mov
add
cmp
and
mov
jo
(bad)
cmp
retf
mov
sub
enter
mov
cmp
cli
das
ins
jmp
paddb
js
inc
dec
pop
mov
cmp
jb
call
movs
mov
ret
inc
cld
pop
mov
mov
mov
cmp
repz
mov
ss
div
call
je
call
xor
dec
dec
stos
shl
es
adc
xor
mov
adc
popf
pop
jp
sub
xchg
(bad)
jmp
mov
into
test
test
popf
jmp
test
out
pop
pushf
mov
pop
mov
or
test
ffreep
(bad)
imul
pop
mov
or
ret
mov
mov
int
rol
adc
jge
and
pop
test
xchg
xor
fwait
retf
loopne
pop
repz
(bad)
leave
outs
jecxz
js
mov
pop
scas
rol
push
outs
xor
mov
push
xchg
ret
pop
jno
add
xor
inc
pop
pop
mov
sbb
cmps
addr16
mov
idiv
pop
repz
call
sub
in
stos
xor
dec
mov
test
adc
pop
dec
jmp
ficom
mov
inc
adc
pop
sbb
mov
stos
xchg
in
add
mov
imul
jge
and
cmp
dec
das
pop
aad
in
int3
sbb
(bad)
jnp
mov
sub
js
cmp
or
outs
pop
push
push
mov
pop
in
imul
ficomp
sbb
loop
popa
and
mov
test
movs
xor
mov
push
ds
fistp
mov
mov
js
adc
push
cmp
pop
jp
pop
mov
movs
sbb
and
or
ret
aas
inc
frstor
call
les
aam
or
or
test
mov
mov
pop
ins
mov
add
std
and
add
rcr
push
sbb
xor
xchg
fsub
pop
cmp
outs
mov
jp
mov
cwde
pop
stc
cdq
test
push
retf
push
idiv
shr
movs
addr16
and
adc
fs
call
jg
(bad)
(bad)
aas
aaa
add
sub
pop
gs
mov
(bad)
pop
mov
rcl
push
into
(bad)
jl
and
sahf
outs
fwait
add
sahf
add
int
lahf
movs
outs
push
and
dec
add
js
push
imul
mov
mov
iret
ret
rcr
dec
daa
test
stc
jmp
inc
mov
jl
in
push
jmp
pop
push
jbe
mov
mov
mov
and
sub
inc
mov
xchg
clc
inc
arpl
(bad)
lock
mov
or
leave
or
or
dec
mov
pop
cli
cmp
(bad)
dec
mov
rol
and
repz
(bad)
xor
std
xchg
js
inc
add
pop
aas
push
retf
call
pop
clc
push
sub
sbb
ja
dec
cmp
dec
or
dec
hlt
data16
stos
bound
push
cs
sub
mov
inc
cmp
jle
js
mov
out
mov
loopne
lock
neg
call
sub
pop
rcl
xchg
mov
and
xchg
(bad)
stos
int
mov
push
add
pop
sbb
je
dec
adc
xor
push
mov
mov
mov
cmp
das
inc
sub
out
mov
add
adc
mov
stos
ins
or
xchg
xlat
add
inc
and
icebp
mov
mov
sub
into
scas
fst
push
adc
xchg
enter
test
sti
(bad)
into
xchg
mov
aad
jl
pop
sbb
stos
mov
gs
retf
outs
jmp
int
repnz
xchg
or
push
rol
sbb
mov
sbb
ins
loope
neg
push
adc
mov
mov
fisubr
arpl
mov
xchg
xor
mov
mov
sbb
addr16
push
push
ja
dec
add
sub
pop
sub
add
jns
pop
pop
sbb
sub
popf
call
fwait
loope
popa
adc
xor
push
lds
lods
jmp
jbe
push
push
cmp
jl
cmps
fcom
mov
mov
or
xchg
leave
lea
ficomp
inc
idiv
lods
into
sub
in
jecxz
cld
scas
jmp
(bad)
in
mov
fcom
xchg
rcr
jp
mov
nop
retf
push
retf
adc
cmc
push
mov
fwait
iret
pop
aad
out
cwde
jno
pop
or
scas
lahf
rol
mov
das
(bad)
fwait
lock
fcomp
mov
ficomp
pop
or
movs
rol
adc
xor
inc
push
pop
pop
inc
fistp
outs
sub
les
jns
cmp
lock
and
jb
push
loopne
xchg
ret
cdq
jns
test
mov
mov
mov
jae
dec
xor
xor
aas
inc
mov
arpl
pushf
out
test
mov
outs
ret
inc
pop
outs
in
aas
inc
pop
push
mov
jle
lods
jmp
pop
popa
sub
add
pop
pop
sbb
push
push
push
int3
cmp
dec
lds
pop
sbb
cmp
inc
mov
xlat
mov
call
fld
push
dec
sub
ret
pop
pop
dec
adc
stc
mov
pusha
aad
cmp
into
cmp
jl
and
je
data16
out
lahf
enter
adc
push
pop
add
ds
sub
lods
fild
sbb
or
pop
adc
popa
and
test
fidiv
push
sub
jl
push
pushf
jne
push
daa
dec
xchg
fisub
int3
mov
xor
mov
movs
les
xchg
enter
pop
gs
or
les
gs
jmp
fisttp
or
hlt
xor
sub
fcom
add
pop
sti
lods
in
jno
sub
loope
cmps
dec
mov
test
test
dec
add
sub
jno
ins
adc
fsub
movs
int3
mov
in
scas
call
popa
xchg
cs
add
rol
jecxz
adc
sub
pop
adc
repz
push
push
push
dec
push
retf
test
inc
jnp
popa
add
arpl
fs
xchg
jmp
sub
push
add
sbb
pop
or
mov
jo
push
add
call
lds
and
std
mov
mov
test
lds
in
mov
call
mov
outs
mov
mov
scas
cmc
xor
dec
adc
ss
hlt
xchg
add
add
jo
fisttp
hlt
pushf
fsubr
mov
cmps
iret
sahf
sar
pop
das
js
dec
or
cmp
inc
sub
pop
pop
pop
or
dec
pop
jae
popa
and
mov
das
jns
jae
ss
(bad)
mov
les
jecxz
xlat
scas
adc
cmc
adc
test
xchg
inc
fst
jno
xchg
xchg
mov
mov
inc
ds
sub
pop
add
and
xor
mov
xor
aas
cs
call
pop
sbb
mov
outs
sbb
or
cmp
jbe
or
outs
sbb
dec
jmp
mov
mov
jg
xchg
aad
hlt
retf
cmp
jae
in
shl
dec
xor
mov
inc
clc
xchg
retf
inc
cmp
and
in
into
mov
mov
mov
es
mov
test
scas
sbb
mov
xchg
scas
movs
jmp
add
cmp
ins
sbb
jo
mov
arpl
mov
loopne
enter
lds
adc
push
dec
jns
es
cmp
dec
aas
push
push
push
pop
dec
xor
sub
sub
inc
add
xchg
mov
gs
pop
pop
fbld
mov
(bad)
shl
lds
cmc
imul
es
mov
mov
sar
pop
push
jmp
clc
mov
out
outs
cmp
inc
or
or
push
adc
adc
mov
sub
sahf
push
rcr
xchg
xor
imul
lods
mov
dec
or
fstp
jle
inc
push
and
xchg
leave
and
pop
mov
push
or
jns
iret
push
cmp
neg
and
jb
mov
mov
fistp
adc
and
mov
xchg
popf
cmp
pusha
jmp
xchg
lahf
scas
cld
mov
les
in
jbe
xchg
mov
mov
sub
inc
loopne
mov
jbe
xor
xlat
xor
mov
mov
fwait
mov
mov
rcl
xchg
mov
mov
xchg
push
es
(bad)
mov
cld
mov
sbb
adc
fimul
push
cmp
loopne
fadd
xlat
(bad)
retf
(bad)
stc
mov
xchg
mov
test
pop
push
shr
iret
mov
adc
inc
add
jle
dec
jmp
or
mov
out
mov
cdq
in
mov
lock
repz
pop
xor
inc
scas
mov
cmp
inc
shr
add
not
adc
dec
or
or
push
add
loopne
mov
xor
sub
jb
push
add
or
imul
aas
outs
mov
jmp
(bad)
xchg
loop
ins
mov
xchg
retf
movs
mov
xchg
ror
fstp
retf
mov
mov
jnp
push
out
pop
cmp
pop
mov
adc
and
push
sub
jl
in
jecxz
jo
cwde
repz
outs
cmp
dec
pop
inc
mov
push
sbb
push
sub
inc
add
out
lods
loopne
scas
pushf
clc
nop
std
js
push
push
pop
shr
xchg
fld
cmp
mov
adc
and
adc
ret
mov
rcl
or
xor
or
shr
rcl
sub
inc
cmp
retf
ret
xchg
ret
xchg
(bad)
xor
mov
test
xchg
(bad)
pop
int3
pushf
fnstsw
push
push
cmp
jge
jg
sub
(bad)
fisub
(bad)
cmp
dec
and
push
sbb
jno
std
out
mov
sahf
int3
cwde
mov
adc
push
cmp
cmp
(bad)
cdq
push
jne
dec
sbb
jne
inc
mov
xor
and
xchg
pop
jecxz
ret
scas
fs
cdq
int
(bad)
mov
jno
jg
xor
adc
dec
pop
xor
xor
scas
loop
aad
aam
cmp
mov
rcr
imul
pushf
mov
nop
(bad)
enter
ficom
mov
sub
test
adc
loopne
mov
and
jo
push
stc
pop
jae
inc
nop
arpl
jge
ins
or
sbb
outs
and
scas
mov
call
mov
xchg
mov
enter
xchg
fwait
xlat
jo
cmp
mov
fs
cmp
lock
sbb
push
adc
std
mov
test
outs
leave
or
sub
bound
mov
dec
loop
fisubr
xlat
test
xchg
clc
mov
cmp
scas
stc
xchg
scas
lods
rcl
enter
bound
jns
mov
pop
and
js
pop
ds
idiv
stc
or
ret
xchg
cld
cwde
mov
or
push
adc
fimul
cmps
cld
(bad)
vmovd
aam
js
and
dec
add
es
add
fwait
rol
cmp
push
sbb
push
pop
lods
pop
add
push
bound
mov
inc
pop
sbb
gs
add
jb
add
adc
sahf
retf
mov
das
inc
add
and
outs
push
pop
sbb
ja
inc
sub
adc
push
outs
es
add
sub
ds
jbe
push
adc
jno
jns
sbb
sub
outs
inc
add
or
dec
push
imul
sbb
inc
adc
outs
and
pop
xor
dec
sbb
adc
bound
jo
push
add
inc
sub
pop
sbb
pop
xor
dec
push
adc
mov
rcl
aam
cld
scas
fdiv
lahf
shr
lahf
cmp
outs
sbb
add
lahf
cli
mov
cdq
push
popa
sbb
inc
push
dec
mov
sbb
jecxz
hlt
pop
jle
dec
add
xchg
aad
in
mov
stos
std
nop
ror
out
cdq
ret
popf
jne
es
add
inc
sbb
add
xchg
(bad)
mov
sti
mov
add
sbb
mov
cmps
mov
mov
pushf
dec
loop
into
mov
pop
sub
and
ss
mov
and
push
retf
mul
and
in
out
fwait
iret
bound
adc
inc
adc
push
push
xchg
jmp
out
imul
inc
ss
es
sar
pop
push
retf
daa
ja
test
mov
outs
adc
cmp
dec
push
imul
lods
pop
cmp
cs
dec
cmp
ror
pop
push
ds
clc
mov
pop
adc
xor
packuswb
cmps
dec
adc
and
ret
test
mov
out
scas
cmc
mov
aad
dec
sbb
xchg
xchg
push
sbb
rcr
push
rcr
popf
shl
pop
or
pop
mov
pushf
rcl
les
dec
add
push
in
stos
cmc
outs
repnz
mov
pop
xor
cld
daa
sub
xchg
ins
shl
mov
cmps
mov
sub
test
mov
mov
rcr
ret
nop
fsubr
adc
retf
(bad)
fdiv
sub
call
pop
and
push
add
jno
pop
int
jmp
mov
xor
aad
loop
stos
retf
xchg
pusha
mov
mov
lea
mov
xor
dec
push
jne
ins
std
stos
mov
mov
cwde
test
out
lahf
mov
mov
add
push
(bad)
mov
fwait
clc
mov
and
sub
dec
or
or
enter
push
das
jne
pop
xor
and
call
mov
mov
xchg
stc
push
in
scas
int3
mov
es
or
pop
(bad)
fstp
xor
in
jns
jbe
pop
sar
test
sahf
mov
cs
sbb
xor
jp
sti
stos
sar
retf
xchg
mov
adc
push
ja
push
sub
or
outs
push
jb
je
push
inc
retf
popf
fst
shl
jnp
shr
mov
xchg
mov
mov
sahf
inc
loope
ror
(bad)
fadd
(bad)
inc
pop
ins
icebp
pushf
cmc
cmps
aad
or
jmp
mov
xchg
lds
int
mov
or
cmp
cwde
out
mov
rcl
cmps
cmc
mov
fst
sbb
xchg
stos
out
sub
xor
push
or
inc
adc
rol
iret
pushf
in
mov
mov
inc
and
or
in
adc
test
pop
and
push
jge
jl
ja
cmp
or
in
(bad)
movs
jno
sub
jp
dec
pop
push
rcr
adc
jns
pop
cmc
mov
cmps
out
lds
call
mov
xchg
enter
mov
mov
and
dec
das
pop
repz
loopne
inc
(bad)
xchg
sahf
leave
mov
jmp
xchg
iret
sbb
inc
sbb
jge
push
jnp
call
test
mov
lods
enter
out
xor
sar
mov
fbstp
and
and
add
inc
repz
shl
jmp
xchg
mov
test
mov
je
push
ret
sbb
pop
adc
rcr
inc
add
fidiv
xor
fs
xor
add
cld
dec
and
jge
dec
or
inc
fld
push
cmovnp
sub
mov
imul
(bad)
xchg
lods
add
push
dec
sti
stos
shr
xchg
imul
push
addr16
in
fstp
test
mov
push
je
outs
adc
stos
iret
sbb
test
inc
ss
ins
xor
inc
xchg
enter
mov
push
adc
ds
push
cmp
test
mov
call
pop
dec
daa
cmp
cmp
xor
or
inc
sbb
loop
fld
aam
loopne
or
dec
(bad)
pop
loopne
out
sahf
retf
loop
cld
stos
aam
dec
pop
inc
clc
mov
test
lea
xchg
enter
imul
jecxz
retf
jbe
inc
xor
xlat
nop
ret
xchg
je
popf
int3
xor
xlat
mov
jae
inc
sub
cmp
dec
sub
sbb
stos
clc
stos
out
mov
xor
push
and
nop
aam
adc
or
adc
adc
aas
in
icebp
call
pop
sub
ficom
dec
or
es
xlat
xchg
ret
or
sbb
pop
xlat
xor
ins
xlat
scas
hlt
scas
jecxz
stc
jb
retf
cmps
xchg
mov
popa
xor
outs
push
xor
dec
add
dec
adc
pop
sbb
cmp
xchg
push
or
add
sub
or
inc
mov
pop
cmp
pop
pop
out
mov
mov
lahf
retf
ja
out
fwait
rol
adc
jmp
ror
mov
scas
lock
xchg
loopne
enter
xchg
retf
(bad)
leave
mov
inc
outs
sub
ds
xor
inc
into
jecxz
clc
xchg
jmp
mov
daa
push
xor
cmp
or
icebp
movs
loopne
inc
xchg
retf
mov
push
ja
dec
adc
cli
adc
test
mov
add
cli
test
out
fcom
mov
sub
sbb
push
pop
popa
sub
push
mov
and
in
push
cmp
je
jge
xlat
lea
sar
mov
jno
add
and
jmp
sbb
inc
sbb
adc
and
xor
dec
add
jmp
or
(bad)
sbb
jae
call
imul
or
cld
mov
mov
fs
xchg
xchg
sbb
inc
or
sbb
je
push
and
(bad)
fwait
scas
iret
mov
or
call
cld
mov
pop
push
push
pop
pop
out
dec
pop
sub
call
mov
scas
inc
xchg
clc
mov
call
arpl
and
jns
out
stos
out
fist
loopne
rcr
int
ins
cmp
mov
dec
xor
(bad)
(bad)
out
xchg
xchg
fdivr
pop
mov
cmps
fild
inc
add
popa
adc
push
xor
stos
(bad)
sbb
fsubr
lock
xor
cmp
pop
pop
and
mul
mov
jbe
xchg
fwait
mov
rol
add
adc
pop
pop
xor
hlt
and
dec
adc
int
int3
imul
(bad)
aaa
in
fwait
int3
xchg
je
fiadd
mov
or
inc
or
in
mov
mov
mov
scas
or
xchg
aam
ins
add
dec
mov
cmp
push
adc
les
xchg
jbe
fwait
repz
scas
leave
ins
xor
pop
aad
cvtps2pd
jl
add
and
mov
xchg
mov
sub
push
pop
dec
adc
xchg
fadd
fwait
mov
sti
call
fwait
jo
mov
scas
call
push
and
ins
inc
pushf
jmp
mov
mov
mov
jbe
adc
mov
(bad)
cli
mov
test
enter
pop
imul
rcl
and
mov
rcr
dec
cmp
fimul
mov
in
mov
stos
js
adc
mov
test
mov
or
jg
xchg
stos
xchg
shl
sub
inc
adc
and
push
or
xor
ror
push
es
cs
mov
pop
mov
leave
scas
lods
retf
cmp
mov
mov
push
add
push
and
cmp
push
sbb
hlt
jo
pushf
call
add
in
xchg
adc
(bad)
push
or
inc
es
in
and
cmp
and
or
cmp
add
pop
inc
aas
push
and
push
push
dec
push
jnp
cmp
daa
push
(bad)
nop
ret
lea
or
fdiv
jno
pop
or
cwde
mov
pushf
pop
sub
pop
pop
push
xor
jae
jnp
push
ja
jl
push
mov
(bad)
enter
mov
adc
aad
test
iret
and
mov
cmp
outs
repz
out
mov
jp
arpl
int3
scas
mov
popf
jmp
mov
scas
out
cmp
dec
adc
repz
pushf
mov
ja
cmp
call
push
stc
mov
imul
loopne
enter
jg
(bad)
xor
pop
or
adc
push
or
iret
(bad)
call
shl
adc
add
cmp
outs
lds
aad
hlt
movs
rol
mov
mov
pop
add
lods
shl
ret
mov
mov
push
push
ds
inc
xor
shr
add
dec
or
dec
adc
loop
(bad)
xchg
sahf
clc
mov
scas
out
stos
out
adc
inc
es
add
jno
dec
sti
mov
mov
pusha
aaa
jbe
imul
std
fwait
pause
movs
lock
int3
xchg
movs
(bad)
mov
call
mov
mov
out
test
and
cmp
inc
in
out
stos
cld
mov
out
xchg
and
pop
cmp
ins
sub
cdq
out
xor
test
sub
add
daa
dec
and
aaa
arpl
pop
lods
in
mov
dec
movs
shl
(bad)
aad
out
out
mul
int
retf
(bad)
je
push
add
movs
aam
leave
xchg
cmps
xor
jl
imul
push
jl
and
jnp
repz
das
dec
cmp
cmp
out
mov
movs
icebp
popa
sub
inc
add
sub
inc
add
je
dec
sub
mov
stos
pusha
lds
in
fcom
jne
inc
push
dec
cmp
sbb
imul
aad
fisub
cmps
clc
lea
xor
pop
iret
xchg
(bad)
mov
add
xchg
push
add
fsubr
mov
or
mov
rcr
mov
jp
jb
lods
sub
out
cs
arpl
ficom
add
call
imul
xchg
mov
push
dec
push
add
jmp
(bad)
xchg
dec
js
inc
popa
int
rcr
dec
adc
cmp
mov
pushf
loopne
arpl
mov
add
mov
(bad)
and
ins
sbb
xchg
jnp
(bad)
pop
push
mov
retf
cld
mov
sub
jb
pop
mov
test
push
imul
sub
add
out
nop
loope
xor
adc
add
repz
and
add
mov
sbb
ins
(bad)
cdq
aas
push
xor
movs
popa
and
jmp
clc
xchg
scas
jle
jle
arpl
mov
clc
cmp
dec
clc
hlt
mov
mov
inc
pop
arpl
ins
dec
mov
std
lods
cmp
cwde
jmp
rcr
mov
fcom
fwait
cmp
xchg
jl
mov
cmp
or
es
cmps
cli
or
jns
fwait
pop
dec
jl
out
adc
dec
or
or
aas
mov
mov
loope
ror
cmp
xor
push
and
jmp
push
pusha
jmp
and
adc
dec
scas
jns
jmp
sahf
loopne
loopne
dec
jns
xor
stc
cmps
cwde
mov
push
js
cmps
call
jne
jecxz
ret
inc
loop
xchg
vpsubusw
icebp
jo
lahf
adc
sti
sub
or
inc
cmp
cmp
adc
daa
cmp
shl
mov
mov
adc
retf
pop
push
ficomp
shr
xor
mov
mov
push
sbb
inc
mov
adc
add
sbb
nop
jnp
dec
mov
xchg
jmp
stos
imul
xor
ja
call
(bad)
cmp
push
pop
or
movs
scas
sbb
sbb
bound
adc
push
jno
ins
sbb
add
sahf
xchg
fcomp
push
(bad)
cmp
loope
xchg
imul
or
mov
add
(bad)
lds
jle
lods
rcr
pop
test
xchg
mov
fwait
add
mov
and
pusha
xor
add
fidiv
mov
ss
xlat
push
mov
stc
vpmacssdqh
iret
dec
push
cmps
call
sub
fwait
ds
jb
dec
or
fidivr
loopne
xchg
mov
push
adc
adc
popf
es
adc
push
mov
cld
jmp
inc
pop
jns
outs
jb
retf
scas
xor
fnstenv
xor
cli
jo
les
aam
pop
adc
add
outs
cmp
inc
aam
sbb
cmp
movs
popa
rcl
lods
jmp
xor
fs
mov
pop
dec
jle
mov
ror
lods
and
imul
addr16
mov
(bad)
std
ins
aam
xchg
stos
sbb
adc
fst
adc
or
fsubrp
or
sbb
sub
adc
cmp
xchg
dec
xchg
rcl
(bad)
mov
rol
xor
jmp
nop
lods
ds
aas
loope
cmp
and
xchg
mov
mov
push
ins
je
and
test
mov
dec
dec
mov
push
ins
ret
imul
out
out
jmp
sti
rol
and
push
movs
and
jge
dec
cli
inc
pushf
mov
jmp
sahf
lods
mov
ja
pop
ror
jne
lods
and
push
xchg
cmps
xchg
add
dec
xchg
jno
call
repnz
test
adc
xor
fwait
in
add
enter
lock
push
test
popf
xchg
ja
aad
adc
jns
jge
push
mov
das
sub
in
pop
fst
scas
in
dec
cld
pop
in
mov
jp
xchg
pop
retf
add
xlat
push
mov
fwait
mov
int3
dec
je
out
adc
push
add
inc
std
mov
xor
jge
sbb
dec
(bad)
fst
sbb
add
dec
int3
jg
in
cmp
lock
movs
sbb
sub
cmp
dec
jne
gs
test
addr16
and
cmp
aad
xchg
xchg
leave
inc
mov
dec
and
sub
xlat
dec
mov
fist
jmp
pusha
inc
cmps
ret
icebp
and
pop
mov
push
and
lods
mov
jge
jne
fwait
sbb
adc
jmp
mov
sub
sbb
mov
repz
enter
and
shl
data16
int3
adc
and
jbe
inc
repnz
sahf
jnp
or
xchg
xor
add
xchg
jle
xchg
popf
cmp
push
and
lea
push
adc
push
mov
cli
and
sbb
pop
and
loope
sub
out
mov
push
retf
mov
ins
pop
(bad)
js
add
fimul
mov
cwde
pmaxub
mov
jmp
stos
and
movs
mov
lods
inc
xchg
mov
dec
and
mov
dec
into
(bad)
jecxz
aam
int
xor
mov
dec
imul
sub
fstp
cs
sub
and
mov
sub
std
xor
dec
adc
ret
fstp
jnp
je
pop
inc
(bad)
cmp
lock
or
aam
mov
inc
out
pop
jmp
mov
test
sbb
cmp
mov
scas
dec
mov
aam
dec
ss
test
or
lahf
xchg
aad
mul
(bad)
ja
shl
outs
xor
xchg
or
or
xchg
or
imul
mov
push
push
dec
dec
xlat
lahf
data16
pop
add
jno
popf
mov
push
sar
(bad)
aad
cmps
pusha
cmp
add
push
out
leave
out
or
das
pushf
mov
adc
clc
scas
push
pop
pop
mov
test
dec
in
jle
pop
sub
pop
jmp
stc
inc
retf
scas
cli
jg
les
xor
sbb
cmp
xor
mov
fwait
das
mov
sub
xchg
add
inc
neg
cmps
push
push
dec
(bad)
push
loop
xchg
push
les
or
or
mov
dec
ret
inc
or
and
and
adc
pop
sbb
shr
and
and
mov
jmp
es
ss
sbb
js
(bad)
xor
sbb
stos
ret
pop
and
xchg
mov
rol
mov
sbb
daa
jnp
test
dec
fwait
add
add
jge
and
retf
pop
xchg
cli
sub
sbb
lea
mov
mov
rol
jb
jl
sub
jl
mov
fcom
pmaxsw
nop
push
cmps
add
sub
pop
sbb
pushf
jns
dec
inc
and
call
not
rcl
aad
mov
or
pop
mov
mov
mov
dec
mov
and
and
push
mov
pop
ins
test
pop
jnp
call
idiv
xlat
pop
xchg
push
in
inc
pop
fsubr
add
push
inc
jns
rol
sub
add
fstp
sub
push
sub
loop
(bad)
inc
xor
or
(bad)
in
jg
les
ja
push
lea
std
mov
popa
int
shl
or
and
mov
push
and
jecxz
and
or
inc
movs
add
pop
call
lds
lea
inc
lods
push
aas
jns
jns
out
test
ss
inc
(bad)
cmp
cmp
mov
arpl
retf
icebp
jne
dec
movs
pop
shr
(bad)
dec
or
inc
call
(bad)
sbb
pop
cli
mov
jg
jle
mov
push
(bad)
scas
(bad)
test
lea
xchg
cli
call
mov
xchg
shr
mov
xchg
in
fnsave
mov
loopne
jl
sbb
lods
dec
fxch
xor
data16
fimul
mov
loope
add
mov
adc
or
aas
and
shl
js
sub
dec
cwde
les
and
mov
(bad)
scas
fisubr
jecxz
mov
add
es
shl
jle
loop
push
pop
fistp
sbb
adc
xor
pop
in
jg
jo
(bad)
test
nop
push
cld
jo
or
in
add
popa
scas
inc
(bad)
gs
mov
ins
leave
sbb
das
pop
fdiv
cmps
inc
leave
jecxz
daa
out
inc
mov
adc
les
xchg
out
in
dec
sti
xchg
mov
xchg
push
mov
or
jb
pushf
rol
in
addr16
clc
xor
and
in
outs
stc
loop
loope
lods
and
fistp
icebp
push
mov
sub
add
inc
push
mov
call
add
or
and
ja
cmp
(bad)
int3
lahf
jo
mov
repz
fwait
xchg
push
sbb
xor
jp
ss
mov
push
icebp
pop
movs
ret
mov
inc
iret
xchg
add
les
mov
(bad)
ret
test
jmp
imul
fidivr
rcl
fdiv
rcl
dec
jg
rcr
adc
mov
lahf
pop
cmp
inc
fdivrp
popf
or
cli
stc
jle
stos
dec
retf
cli
push
pop
mov
jge
pushf
xor
or
xchg
jmp
and
rcl
arpl
push
pop
xor
mov
in
mov
inc
jns
sar
mov
std
bound
aad
push
test
push
adc
sub
pop
xor
lahf
nop
mov
pop
pop
sub
mov
pop
lods
xchg
mov
mov
mov
lods
out
js
gs
mov
out
lods
mov
(bad)
adc
pop
loop
inc
inc
neg
xchg
push
ss
push
call
das
and
dec
inc
xor
mov
jae
inc
cmp
ins
add
call
mov
fwait
sub
xchg
sub
jbe
fsub
and
(bad)
jp
jge
mov
loop
std
push
push
out
lods
cmp
jb
pop
fs
sub
sub
xchg
scas
(bad)
leave
(bad)
loopne
mov
dec
xchg
mov
ficom
test
(bad)
mov
(bad)
mov
out
sub
xor
(bad)
(bad)
imul
xchg
rol
in
std
ds
(bad)
(bad)
mov
in
arpl
shufps
loop
xchg
lock
out
xchg
in
mov
not
sar
xchg
int3
push
popa
scas
add
inc
push
push
sbb
pop
and
and
bound
inc
xchg
loope
cmp
mov
inc
cmps
jp
loope
or
cmp
and
dec
jmp
xor
outs
cmp
or
movs
sbb
pop
mov
and
add
aam
out
sub
pop
cmp
jl
stc
dec
fidivr
push
pop
sbb
in
add
pop
sbb
cmp
sbb
cmps
int
test
pusha
aas
xor
cli
dec
retf
pop
(bad)
push
add
in
xor
aad
repz
jge
adc
mov
gs
mov
retf
inc
sub
dec
sahf
dec
inc
scas
es
aad
shl
dec
inc
xchg
dec
daa
inc
xchg
outs
cld
sub
mov
sbb
push
in
ja
xchg
(bad)
(bad)
pop
pusha
mov
(bad)
test
add
dec
fdiv
repnz
mov
in
mov
test
lea
aam
shl
push
jns
cdq
les
arpl
test
imul
pop
lds
scas
cmp
ret
retf
gs
jle
dec
shl
sti
pop
arpl
pop
pop
mov
ffree
inc
gs
sbb
sbb
shr
pop
sbb
outs
sub
ja
or
fst
in
dec
aaa
(bad)
mov
arpl
pop
sub
out
scas
cdq
xor
fcmovu
inc
pop
pop
enter
sbb
cmp
loop
adc
bound
jp
sub
add
in
mov
in
push
push
pop
dec
sub
mov
dec
xchg
mov
mov
xchg
addr16
stc
mov
and
dec
cwde
push
pop
sub
(bad)
hlt
in
jae
or
and
nop
jmp
cmp
lea
scas
dec
sti
test
dec
cmp
jecxz
call
mov
les
xchg
gs
sbb
fld
dec
inc
neg
xchg
jmp
and
fbstp
addr16
movs
jmp
xchg
cs
fisub
push
dec
fwait
or
mov
call
xchg
leave
fcom
jne
sar
popa
inc
mov
jmp
dec
popa
or
cmp
retf
into
retf
pushf
xchg
out
les
(bad)
cli
inc
imul
aad
or
jmp
xor
cmp
ja
icebp
imul
cmc
mov
mov
ret
out
jmp
nop
inc
fistp
adc
jp
stc
mov
add
adc
and
cwde
daa
sbb
fist
arpl
push
dec
inc
loopne
and
mov
loope
mov
push
retf
fcmovb
jge
push
mov
fidiv
outs
(bad)
stos
mov
xor
mov
mov
pop
push
mov
pop
test
mov
jns
jecxz
xlat
dec
adc
mov
inc
icebp
push
xor
ins
sub
test
lods
pop
xor
stc
lds
xor
std
push
sbb
std
rcl
mov
mov
sbb
(bad)
in
add
xchg
adc
xor
(bad)
ds
hlt
xor
sahf
xlat
ror
(bad)
ja
xchg
push
je
xor
sub
(bad)
xchg
push
add
add
leave
add
xor
in
(bad)
ret
fadd
xchg
pop
hlt
test
mov
scas
aad
in
dec
mov
aam
cmp
pop
mov
hlt
adc
leave
lds
frstor
cli
mov
push
lods
mov
sub
hlt
xchg
jg
mov
mov
mov
mov
mov
addr16
mov
mov
mov
pop
stc
sbb
xchg
jmp
fstp
push
xor
cld
fbstp
sub
test
div
dec
test
dec
cmp
mov
cdq
add
pop
stos
dec
stos
pop
es
nop
push
shl
(bad)
adc
mov
cwde
xchg
jmp
cwde
(bad)
loopne
rol
icebp
test
out
outs
sub
lds
adc
aam
je
push
adc
stos
inc
outs
lods
mov
pop
mov
inc
ret
bound
pop
inc
sahf
mov
xor
lods
add
jecxz
jmp
ss
ins
leave
inc
lods
push
pushf
iret
lds
shl
pushf
add
mov
lock
lock
lods
jnp
jne
pop
inc
shl
int3
inc
push
retf
mov
dec
pop
jmp
jno
push
imul
and
jbe
pop
(bad)
fisubr
imul
das
mov
pop
ins
mov
sub
dec
rcr
leave
scas
dec
ins
and
mov
cmp
dec
fs
ins
push
pusha
ret
push
sbb
fldcw
std
enter
jge
test
xchg
sahf
mov
push
neg
lds
jmp
movs
adc
lods
push
scas
call
ins
sbb
cmp
jbe
gs
cmp
push
test
xchg
sbb
xchg
or
out
sub
xor
or
les
jns
sbb
mov
cmps
xor
mul
jmp
sub
imul
sbb
xchg
jae
xchg
mov
test
mov
mov
outs
pusha
sbb
mov
sub
out
pop
retf
imul
in
hlt
(bad)
pop
aam
xor
dec
retf
add
mov
call
or
pop
in
enter
push
sahf
dec
push
loope
sub
cmp
cmp
scas
and
iret
mov
popa
xor
xchg
mov
je
push
sbb
cwde
jmp
repnz
fst
xchg
daa
cdq
push
mov
xlat
(bad)
fucomip
cmp
mov
rcr
push
sub
xchg
out
cmp
pusha
stc
mov
jmp
outs
je
dec
mov
xor
pop
cmp
repnz
or
iret
mov
and
(bad)
mov
sbb
ja
out
cwde
mov
xor
xor
xchg
test
imul
adc
and
clc
push
icebp
gs
das
dec
xchg
jo
cmp
mov
lods
sbb
imul
mov
pushf
or
(bad)
loopne
dec
xlat
mov
in
shl
add
xchg
gs
xor
xlat
xor
shr
bound
dec
push
lods
lods
push
and
sbb
leave
movs
(bad)
jnp
and
sar
sar
cmp
sar
test
inc
inc
jmp
repnz
xor
hlt
cli
sar
(bad)
sysenter
call
std
xchg
and
xor
in
sbb
sub
pop
ins
lds
in
mov
sbb
gs
jno
xchg
je
jnp
pop
icebp
stc
mov
sar
mov
mov
jl
mov
mov
mov
fxch
imul
rol
in
cmp
fs
adc
and
lock
sub
jo
pop
sahf
sub
call
push
enter
fmul
shr
aas
sbb
mov
add
arpl
jp
out
ss
movs
and
outs
bnd
sti
adc
jecxz
ret
shr
push
gs
pop
or
pop
into
mov
add
fnstcw
das
sub
retf
dec
mov
bound
icebp
loope
sar
out
xchg
lea
ret
ins
adc
cmp
cmps
pop
mov
sbb
test
cmps
mov
sub
sar
neg
add
add
add
ret
adc
stos
mov
jns
into
mov
in
cmc
in
push
fwait
xor
adc
adc
fwait
push
add
test
ret
xchg
lods
test
adc
cmp
jnp
jo
stc
call
scas
imul
push
arpl
ja
xor
jae
call
push
(bad)
cld
imul
test
push
jb
sar
je
cdq
out
jmp
cmp
mov
and
sbb
mov
add
mov
or
pop
dec
dec
call
icebp
loopne
(bad)
ret
or
pop
and
sbb
sub
xor
shl
pop
jl
push
sub
stos
inc
js
stos
mov
jecxz
mov
jge
inc
mov
mov
mov
fucom
jmp
mov
fwait
gs
pop
sub
clc
rol
ret
jb
cmc
adc
jg
inc
es
mov
jno
aaa
imul
xlat
push
arpl
sbb
jecxz
add
jb
jp
inc
jbe
fcom
or
jl
jmp
push
push
push
out
sub
mov
fwait
jns
mov
aaa
sbb
in
ds
and
xchg
pusha
(bad)
outs
mov
inc
push
xor
inc
pushf
fs
or
stos
clc
fcmove
ss
and
idiv
pusha
pop
ds
push
mov
popa
xbegin
sti
out
ror
cmp
aas
cwde
mov
ds
out
pop
and
enter
pop
ja
pop
ret
push
jmp
ficomp
popf
adc
test
jnp
push
ins
cdq
fsub
inc
dec
dec
and
push
shl
add
clc
xchg
lock
inc
add
xlat
loope
add
xchg
push
add
aas
sbb
add
adc
shr
dec
mov
mov
imul
cmps
loopne
adc
jbe
sti
imul
or
(bad)
int
mov
jmp
in
jb
jbe
mov
lods
mov
out
sbb
js
sub
mov
(bad)
sbb
xor
mov
ja
test
xor
dec
inc
sahf
jle
dec
mov
pop
dec
cmc
push
mov
inc
loope
std
or
test
mov
out
lock
mov
and
or
fwait
xchg
cmp
cmps
in
scas
mov
out
mov
adc
ret
in
dec
cwde
enter
mov
cs
jmp
enter
scas
ret
ficom
int3
push
add
jmp
sub
adc
in
sub
jl
je
rcr
movs
addr16
fstp
outs
push
mov
aad
sti
sbb
push
clc
int3
cmc
cwde
or
repnz
mov
mov
mov
sub
lds
mov
outs
mov
cmc
int
shr
or
call
ins
adc
imul
retf
pop
mov
jbe
mov
sub
jno
aas
push
(bad)
and
adc
mov
call
cmps
outs
fdivrp
push
icebp
and
cmps
jmp
xlat
repz
add
jbe
and
test
arpl
pop
fwait
mov
push
mov
or
mov
popf
shr
add
push
into
and
std
repnz
sbb
mov
fld
out
shl
es
retf
dec
push
mov
jae
aas
test
aaa
ds
or
dec
jbe
inc
push
adc
and
xor
sub
ds
in
push
(bad)
mov
sbb
jb
fld
xor
adc
jnp
jae
cwde
cs
fclex
dec
ror
jmp
mov
(bad)
xor
sbb
push
add
dec
or
mov
adc
pop
mov
fisub
inc
add
not
cdq
das
ror
fidivr
js
inc
stos
or
inc
xor
mov
dec
popf
push
jp
sub
sbb
cmp
cmp
jae
inc
add
(bad)
ins
jg
clc
outs
pop
sub
retf
out
aad
lea
ds
sub
mov
push
adc
or
push
rcl
aas
retf
and
jno
cmc
xchg
rcl
inc
test
fwait
cmp
fnstcw
call
cli
lods
aas
inc
push
sub
(bad)
ins
rol
xchg
mov
sub
bound
sub
push
sbb
mov
sti
shl
fld
mov
fwait
sbb
sub
scas
or
ja
(bad)
dec
imul
scas
dec
(bad)
cwde
dec
push
xchg
dec
and
add
test
cmp
gs
(bad)
in
ficom
in
jg
jbe
adc
sub
mov
jnp
repnz
cmps
push
gs
aam
dec
stos
push
out
test
pop
jb
ins
xchg
stos
test
dec
aad
imul
ffreep
sbb
dec
mov
mov
push
imul
int3
inc
adc
pop
ret
xor
fs
dec
mov
stos
(bad)
or
cmp
dec
xchg
mov
xor
fsub
push
rcl
jg
cmp
into
push
mov
dec
inc
sbb
pop
ins
add
ins
outs
int3
repz
inc
test
retf
sbb
aam
adc
popf
or
test
cmp
xchg
call
shl
push
aam
pop
push
sub
test
push
ja
xchg
inc
enter
lods
fimul
push
push
sbb
push
sbb
popf
dec
je
mov
mov
pop
popf
xor
enter
inc
push
call
out
dec
xchg
sub
mov
jg
mov
call
das
mov
pop
mov
push
pop
clc
daa
sub
ret
mov
fadd
push
push
adc
loope
adc
mov
jg
cs
and
jg
cmp
mov
int3
ins
cmp
adc
cdq
inc
mov
daa
test
pop
(bad)
jle
pop
dec
xor
push
pop
pop
mov
pushf
addr16
push
xchg
test
dec
jne
fidiv
xor
pop
push
(bad)
scas
jmp
rdmsr
xlat
ja
mov
xchg
rol
lods
cdq
ins
cmp
hlt
out
jle
dec
popa
cmp
mov
mov
(bad)
ds
test
mulps
or
jns
ss
xchg
lds
stos
jecxz
push
jb
mov
out
loop
xor
leave
pop
popf
or
dec
mov
(bad)
ficomp
push
jb
xor
mov
dec
(bad)
std
pop
and
push
and
dec
jmp
and
xchg
push
and
sar
mov
sub
out
(bad)
fmul
dec
mov
mov
arpl
hlt
pop
stc
pusha
or
mov
or
add
add
leave
jmp
mov
(bad)
es
cmps
mov
push
and
ins
ret
xlat
shl
mov
gs
add
or
adc
add
clc
xor
inc
adc
sbb
int
lock
in
ret
xor
in
lods
arpl
push
nop
xor
sahf
iret
sub
or
mov
neg
and
btr
dec
sbb
mov
(bad)
mov
sub
or
jns
sbb
fidiv
inc
inc
outs
inc
sbb
loop
mov
lock
retf
(bad)
stc
xchg
jl
fild
mov
loopne
xor
adc
outs
add
xchg
dec
mov
stc
iret
scas
repnz
inc
fmul
mov
hlt
jmp
pop
cmp
cmc
xlat
ja
pop
fcomp
sub
inc
mov
cld
jg
jle
ins
enter
imul
mov
jge
adc
retf
dec
mov
dec
xor
and
push
icebp
icebp
fmul
mov
repz
xchg
sub
leave
imul
outs
add
out
cmp
je
(bad)
and
jecxz
in
inc
lods
add
sahf
xor
jmp
jnp
lahf
sbb
(bad)
mov
jle
and
pop
icebp
sub
mov
mov
adc
or
xchg
cs
cwde
jb
outs
lea
mov
jo
mul
cmps
dec
cwde
jg
jns
cs
sub
mov
xchg
pop
pushf
jne
xchg
fidivr
mov
push
data16
(bad)
aas
cmc
and
jmp
std
(bad)
out
(bad)
lods
and
and
mov
retf
in
push
test
jmp
and
inc
(bad)
sub
dec
test
push
or
pushf
daa
sbb
dec
add
loope
imul
pop
ins
dec
mov
mov
mov
dec
and
mov
cwde
xchg
adc
movs
fisttp
or
pop
mov
aas
push
or
mov
adc
xchg
nop
test
or
lods
push
fistp
hlt
out
cmp
mov
lea
or
out
mov
adc
sbb
pop
adc
imul
xchg
jg
cmc
push
in
pop
fist
adc
jnp
imul
popa
push
cwde
aaa
mov
add
test
sbb
stos
add
gs
bound
pop
shl
pop
adc
out
ja
vpsrld
ret
vmaxsd
mov
xor
(bad)
stos
scas
mov
cmp
or
inc
in
jp
mov
add
pop
sar
xchg
mov
outs
pop
and
and
aaa
ins
or
retf
push
scas
and
push
outs
xchg
mov
xchg
sub
dec
ror
ja
leave
outs
adc
dec
xlat
inc
push
stos
push
inc
cmp
cs
mov
mov
xchg
cmp
jg
nop
aad
mov
repz
pop
xchg
cmp
sbb
or
addr16
idiv
pop
mov
int3
inc
mov
cmp
aaa
jno
xchg
call
sub
shl
pushf
out
and
outs
sbb
pop
mov
mov
dec
pop
into
and
aaa
mov
sbb
mov
in
sbb
mov
sahf
xchg
repnz
imul
pop
addr16
lods
stos
push
lock
mov
loop
add
pop
clc
sbb
sub
into
xchg
repnz
daa
mov
and
sbb
lods
jl
cmp
movs
stos
jae
sahf
unpckhps
xor
dec
cld
in
and
fcomp
nop
stos
out
shl
push
mov
push
lgdtd
inc
jnp
(bad)
ds
loopne
cld
aad
daa
inc
test
and
push
dec
sahf
addr16
imul
adc
mov
mov
movs
into
mov
fisub
lods
ret
mov
xchg
mov
fwait
dec
pop
mov
xor
imul
push
dec
mov
rcl
in
push
lock
push
dec
add
movs
popa
mov
lea
es
mov
adc
(bad)
fsubr
pop
dec
ins
(bad)
jmp
sbb
fsub
daa
iret
mov
(bad)
rol
ds
repz
lds
or
mov
lds
dec
xor
adc
lock
or
and
jns
out
sbb
or
in
jle
shr
push
push
hlt
sub
inc
sti
jne
ror
add
das
or
pop
js
repz
push
push
mov
leave
jp
or
(bad)
(bad)
mov
sbb
ja
sbb
fs
adc
pop
xchg
not
mov
mov
jp
(bad)
call
fdiv
jmp
ror
sbb
hlt
daa
inc
sbb
mov
jmp
pop
fild
cmp
cld
push
shl
movs
daa
imul
add
and
lods
and
scas
in
dec
dec
ins
xchg
int3
call
test
clc
adc
rol
inc
dec
mov
icebp
mov
mov
loopne
mov
cmp
and
movzx
xchg
sbb
mov
xchg
xchg
(bad)
mov
in
adc
popa
jge
dec
hlt
pop
mov
jne
inc
mov
pushf
jecxz
data16
(bad)
psubsb
mov
test
or
mov
cmp
mov
or
push
jg
cmp
enter
outs
push
test
dec
pop
push
mov
push
pushf
fld
xchg
(bad)
nop
dec
int
pop
push
adc
and
adc
pop
xlat
sti
das
mov
retf
inc
xlat
jl
or
pop
mov
and
mov
std
cmp
sbb
fwait
adc
xor
jmp
mov
adc
jns
loop
fild
jne
push
sbb
ret
push
push
fiadd
je
mov
mov
icebp
cmp
je
in
sub
scas
mov
xchg
push
xchg
push
and
sbb
shr
xor
adc
js
lds
(bad)
ins
pop
jo
int3
ja
cmp
inc
rol
mov
adc
add
mov
test
popa
nop
mov
fwait
xchg
addr16
push
sub
cmps
mov
out
mov
sub
lods
int
and
xchg
pop
jns
jb
cmp
mov
mov
enter
(bad)
push
out
shl
pop
sahf
call
fcmovbe
mov
mov
mov
out
jnp
jnp
stos
es
out
xchg
fist
and
pop
retf
test
cli
stos
jbe
cmp
cmp
sbb
adc
dec
repnz
out
pusha
popa
leave
lock
add
xchg
rol
call
in
inc
jge
push
pop
sbb
addr16
adc
retf
aaa
xchg
cmp
lea
data16
shr
adc
ins
cmp
jmp
out
js
and
stos
mov
push
jns
push
xor
aas
mov
call
push
shr
imul
outs
push
and
mov
lods
or
dec
retf
out
and
aaa
and
rcl
jno
inc
stos
pusha
adc
push
push
xchg
outs
push
ins
push
imul
xchg
push
dec
imul
pop
gs
mov
pop
je
cmp
inc
mov
pushf
into
cli
push
mov
cmc
loop
fsub
cld
adc
mov
jle
cmc
ds
cmp
xor
sub
retf
idiv
sub
jg
mov
aad
jo
fwait
mov
or
dec
xlat
sti
dec
out
ins
mov
xor
outs
ficom
ja
jle
and
test
dec
repnz
add
mov
rcl
inc
int3
push
popf
xor
icebp
or
sbb
jl
hlt
loope
xor
push
out
sub
sbb
xor
pop
test
cs
cmp
push
inc
push
xor
fs
jle
inc
xchg
inc
das
mov
hlt
gs
daa
fnstcw
and
pop
data16
xlat
mov
jmp
not
(bad)
cmp
in
sbb
dec
mov
and
aaa
dec
(bad)
lods
jne
sub
xchg
fdivr
pop
sub
stos
fwait
sbb
pop
or
add
push
or
aas
outs
cdq
lods
gs
ffree
mov
out
xchg
add
jecxz
aas
clc
shl
push
fidiv
arpl
inc
sahf
pop
jp
cwde
and
fnstcw
sub
in
or
sahf
jecxz
sub
(bad)
out
mov
(bad)
sbb
sub
(bad)
aam
cmp
push
sbb
dec
jge
pop
sub
cs
jmp
lds
in
cmp
mov
jnp
fldl2e
bound
lahf
sbb
clc
mov
cdq
pop
pop
dec
and
test
mov
retf
cld
out
mov
push
sub
movs
aam
test
xchg
aas
fimul
cmps
shr
retf
popa
push
out
cmp
mov
les
push
cli
pop
sub
sti
fsubr
xor
jg
sub
mov
jle
inc
stos
mov
xchg
adc
(bad)
jns
xor
jb
nop
ficom
jmp
push
shl
rcl
or
es
sub
ss
les
addr16
xchg
ror
xchg
inc
jno
cli
call
nop
(bad)
(bad)
dec
cmps
xacquire
sbb
das
fwait
and
stos
adc
icebp
lods
dec
jnp
pop
aam
jp
in
mov
movs
mov
daa
mov
and
out
scas
xor
lea
mov
add
mov
sbb
stos
fcmovnbe
rcl
setb
je
jbe
(bad)
dec
inc
pop
cmp
cdq
aaa
mov
in
add
or
push
test
cmp
int
fnsave
push
add
push
push
push
push
and
push
xor
push
or
xchg
cmc
push
and
xor
scas
jmp
outs
cwde
les
(bad)
xor
add
push
jp
push
pop
push
hlt
inc
pop
cmp
dec
push
push
out
jne
push
jne
push
ficom
(bad)
fst
movs
sbb
inc
and
call
xchg
sahf
out
shl
bound
push
xchg
cmps
dec
cdq
sbb
add
adc
cld
sahf
(bad)
call
addr16
jae
and
shl
ret
add
inc
xchg
xor
adc
sub
cmps
xchg
sbb
pushf
addr16
xor
dec
sbb
repz
loopne
bound
inc
inc
out
lods
aas
test
inc
or
xor
ror
in
nop
mov
out
cld
and
and
shl
out
and
scas
dec
mov
jns
sbb
arpl
imul
dec
push
adc
ror
(bad)
pop
cdq
cmp
mov
(bad)
xor
and
cmps
or
sbb
mov
imul
xor
jns
mov
(bad)
repz
leave
push
stos
xchg
adc
or
js
test
shl
sub
idiv
pop
inc
movs
xor
push
sti
fwait
leave
sar
in
lods
adc
lahf
dec
shl
mov
hlt
fidivr
pushf
mov
adc
scas
lds
fnstenv
(bad)
fistp
cmp
jno
or
mov
pop
mov
sub
push
xor
nop
add
sub
imul
(bad)
movs
jo
xor
and
or
(bad)
sahf
dec
jne
ja
mov
ins
(bad)
jne
retf
mov
ficom
sbb
pop
leave
pop
add
and
add
adc
add
cdq
sub
clc
mov
shl
push
retf
mov
repnz
mov
scas
sub
(bad)
mov
sbb
inc
enter
lahf
sub
and
sub
inc
mov
mov
out
mov
mov
or
sti
call
pop
and
lds
pushf
add
mov
cmp
mov
inc
cmp
outs
push
mov
out
stos
ss
dec
xor
xor
ret
sub
cmps
xchg
dec
sbb
xor
mov
mov
push
fistp
xor
xchg
pop
ins
mov
lods
or
popa
inc
sbb
pop
sub
int
cmps
iret
jmp
into
ror
fild
push
cdq
repnz
loope
xlat
popa
push
add
mov
jge
and
mov
fwait
sahf
imul
test
push
cmp
dec
imul
xchg
in
adc
ror
test
pop
retf
push
add
xchg
sub
popf
popf
or
(bad)
retf
mov
push
pop
or
stos
arpl
(bad)
cmp
ret
push
or
fsub
es
jns
cmp
shl
xor
stos
sub
push
bound
call
je
lods
or
or
in
mov
pusha
push
in
cmp
push
rol
and
mov
mov
sub
sbb
fsubr
adc
pop
lock
cmps
push
stos
xor
push
sub
xor
cld
cld
mov
inc
or
or
sbb
shl
xor
jp
retf
imul
(bad)
lods
dec
and
mov
jne
addr16
arpl
icebp
mov
neg
pop
test
cmp
loope
pop
retf
fld
repnz
push
jp
lahf
or
add
mov
inc
inc
xor
ret
xor
movs
adc
xchg
sub
fnstcw
adc
sub
stos
fiadd
outs
jl
in
pop
rcr
loopne
jnp
and
or
dec
add
adc
call
sbb
stos
sbb
push
dec
pop
cwde
(bad)
cmp
sub
retf
retf
mov
es
pop
arpl
inc
(bad)
mov
xlat
nop
aas
push
outs
xor
(bad)
pop
clc
mov
xor
sar
xlat
fbld
cmp
mov
pop
inc
lahf
lea
mov
(bad)
cwde
xlat
mov
jge
pop
loope
cmp
aam
scas
cli
xor
movs
test
xor
fadd
pop
and
adc
jb
out
add
add
inc
xor
fist
xchg
jmp
fild
push
xor
push
pop
repnz
mov
mov
xlat
add
pop
mov
(bad)
jnp
mov
pusha
inc
mov
and
lods
xor
std
dec
dec
mov
pop
mov
aas
mov
adc
xor
sub
mov
push
add
add
or
bnd
or
jmp
dec
lods
jns
add
xchg
push
add
sbb
aas
add
and
outs
cmp
mov
push
add
xor
stc
test
and
inc
sahf
int
fisubr
test
or
push
sub
(bad)
gs
dec
retf
mov
rcr
stos
stc
xchg
int
cld
xchg
int
mov
call
in
xor
dec
adc
mov
mov
ja
mov
xchg
mov
mov
push
daa
js
inc
pop
push
rdtsc
outs
not
xor
sub
dec
cmp
mov
sbb
(bad)
rol
xchg
or
cwde
xchg
retf
mov
ds
jg
jmp
or
sbb
pop
or
pop
xchg
rcl
sub
mov
adc
sbb
xor
ss
loop
rcl
ins
and
(bad)
out
xor
jno
ins
mov
gs
inc
jnp
leave
push
push
push
sbb
iret
scas
sub
adc
repnz
add
pop
xor
jb
inc
call
mov
inc
mov
jmp
pop
loope
pop
sbb
imul
data16
bound
fs
inc
pop
pop
push
cmp
mov
and
push
or
jg
push
into
fstcw
xlat
xchg
data16
arpl
(bad)
mov
sub
push
add
inc
push
xchg
into
mov
enter
imul
pop
pop
ror
mov
fbstp
imul
fldcw
dec
das
repz
pop
pop
add
jbe
pop
mov
movs
sar
push
shl
pop
add
mov
ss
sub
call
popa
sbb
push
out
in
mov
cmp
fmul
inc
or
and
sub
sbb
nop
mov
mov
xor
mov
icebp
cmps
in
nop
jae
push
pop
out
jp
cmp
cmp
pop
in
pop
aas
dec
sbb
pop
faddp
fadd
stc
mov
and
push
jbe
inc
adc
(bad)
cmp
js
dec
adc
pop
push
dec
(bad)
mov
loopne
xor
sub
(bad)
leave
inc
(bad)
mov
mov
sar
cmp
inc
hlt
mov
js
mov
mov
lods
clc
mov
out
repnz
loopne
cmp
mov
mov
add
test
add
sbb
mov
stos
int
mov
mov
mov
out
mov
pushf
fisubr
add
push
mov
cmp
bound
addr16
xlat
call
fidiv
jbe
push
loopne
repz
mov
push
xor
ins
push
push
out
dec
sub
pop
sbb
addr16
dec
sbb
lock
call
jo
xchg
fldcw
add
ja
ds
push
retf
mov
adc
es
jbe
inc
or
les
shl
xchg
retf
push
sbb
lock
push
xor
mov
call
xchg
test
pop
mov
mov
adc
adc
cs
inc
xchg
push
inc
adc
adc
das
push
or
dec
imul
int
aam
addr16
xchg
test
mov
jp
jecxz
les
shl
(bad)
movs
cmc
and
sbb
jns
push
push
loopne
add
mov
mov
data16
scas
(bad)
scas
test
mov
cmp
retf
lods
scas
sbb
std
push
sub
in
retf
stos
stos
(bad)
mov
inc
aad
out
dec
mov
aad
fs
dec
aas
adc
jl
inc
cmp
mov
mov
pop
push
pop
dec
pop
jecxz
adc
or
in
ret
mov
xchg
xor
inc
add
imul
ss
pop
lea
enter
sar
shl
jl
inc
mov
or
mov
adc
outs
mov
or
mov
shr
call
cmps
fistp
push
es
dec
sub
pop
(bad)
jmp
cli
xchg
jne
test
mov
fwait
scas
jmp
mov
mov
popa
xor
ficomp
aas
es
(bad)
test
cmp
pusha
or
rol
movs
jmp
aaa
pop
mov
cli
dec
pop
inc
or
sub
ficom
popw
pop
in
int3
ins
mov
push
inc
adc
jecxz
mov
aad
sbb
dec
les
pop
adc
sbb
js
inc
ds
mov
das
imul
leave
out
out
(bad)
xor
pop
loopne
fcom
cwde
fidiv
jb
cdq
cli
cwde
aad
mov
movs
loope
std
imul
jne
mov
jl
dec
adc
push
js
jb
rdtsc
push
in
fbstp
sub
xor
or
push
sbb
sub
pop
scas
inc
adc
xchg
int3
pushf
imul
jp
clc
scas
fisubr
and
inc
cld
popf
cld
or
pop
push
pop
test
xchg
mov
jp
outs
test
inc
add
movs
std
mov
jnp
xchg
iret
imul
cmp
cmc
cmp
std
popa
mov
(bad)
xchg
shl
(bad)
xchg
(bad)
cdq
(bad)
lock
mov
(bad)
xchg
fistp
mov
fisubr
stos
icebp
mov
movs
jecxz
pop
push
jl
jbe
push
push
jae
or
loop
add
mov
test
dec
adc
push
xor
cmp
loopne
div
adc
jg
cmp
lahf
ficomp
retf
mov
fisub
stos
sbb
std
jecxz
fwait
int3
mov
pop
push
or
mov
xchg
(bad)
jle
mov
mov
sbb
xchg
shl
fdiv
cmps
(bad)
xchg
and
int3
jb
fst
icebp
inc
push
jp
dec
xor
adc
dec
sbb
push
cmps
jg
jae
inc
sbb
jo
shr
and
cmp
je
push
cld
sbb
fwait
cli
xchg
sti
cmp
push
ja
push
(bad)
lods
call
mov
jo
lahf
in
inc
rol
sub
cdq
jecxz
inc
lods
lds
sar
loop
push
jb
jl
(bad)
fiadd
push
repnz
aaa
and
fwait
jl
sub
add
rol
lahf
outs
pop
je
out
cmp
dec
fisub
aas
push
aam
fidivr
xor
jl
and
stos
dec
jecxz
aad
hlt
mov
cmc
(bad)
fild
sbb
je
rep
(bad)
mov
shl
outs
cmp
es
dec
sub
inc
sbb
sub
push
cmp
in
popf
xchg
movs
fist
jmp
xchg
sub
leave
pop
in
div
outs
sub
push
stos
div
mov
lods
repz
sar
sti
mov
cdq
repnz
das
sbb
jg
push
mov
mov
add
cmp
adc
and
fstp
add
or
cmps
push
adc
in
data16
ins
into
pop
push
pop
aas
jne
dec
cmp
pop
push
das
xchg
rol
mov
or
push
sub
dec
in
div
(bad)
leave
lahf
fist
daa
push
add
aaa
jae
cs
dec
es
bound
xor
mov
rcl
push
pop
adc
sahf
cmc
popf
(bad)
mov
(bad)
loopne
aam
idiv
out
stos
out
aaa
addr16
or
jb
inc
or
js
push
dec
sbb
cmp
pop
push
ins
imul
or
dec
aaa
outs
or
mov
xchg
bound
das
and
push
cmps
neg
jp
jne
imul
rcl
cwde
jmp
or
shl
ds
sbb
adc
push
dec
sbb
xchg
shl
xor
jne
jle
xchg
enter
inc
cmp
call
shr
mov
mov
fdiv
mov
mov
adc
sub
mov
cdq
repnz
dec
and
add
ror
dec
add
es
xor
sbb
mov
mov
les
push
js
enter
mov
mov
inc
mov
test
cwde
cmc
mov
ins
add
jnp
mov
cmp
mov
lahf
outs
das
push
es
inc
pop
dec
rcr
pop
sbb
add
inc
sbb
or
dec
adc
(bad)
cdq
fsub
push
push
call
mov
daa
outs
cmp
sar
int
rol
lahf
aad
mov
loop
mov
jnp
push
int
out
mov
lds
fdivr
and
cmps
jecxz
push
neg
sub
mov
mov
ja
outs
add
test
mov
std
dec
sbb
daa
push
and
xchg
mov
sub
push
dec
je
push
push
dec
mov
daa
data16
sbb
scas
retf
popa
sub
sbb
out
mov
jno
pop
cmp
mov
clc
xchg
stc
nop
ret
mov
movs
loopne
add
pushf
fdivr
xor
sbb
push
adc
les
pop
sub
push
xchg
lahf
mov
fcom
bound
dec
sbb
and
xor
sub
lock
movs
out
stc
xchg
stos
push
cmp
fistp
mov
cmc
mov
mov
stos
mov
ins
rcr
(bad)
lahf
iret
movs
mov
and
dec
call
mov
clc
mov
mov
aaa
pop
xor
cmp
cs
push
mov
add
outs
add
xchg
mov
es
xor
xchg
retf
add
jns
jno
leave
add
and
das
ins
and
add
hlt
xchg
call
adc
je
inc
cmp
test
sbb
mov
cmp
lods
sbb
inc
adc
and
and
xchg
retf
add
outs
cmp
imul
xor
jmp
push
mov
jnp
cli
ss
push
mov
sub
pop
icebp
stos
xlat
inc
pop
bound
dec
sub
call
out
push
sbb
aas
xor
cmps
into
test
test
fist
cli
add
jge
add
push
pop
jp
jb
sahf
jp
out
stos
lock
rcl
ins
sbb
mov
push
add
or
inc
lods
pop
xor
pop
(bad)
mov
in
mov
inc
push
sub
mov
dec
or
pop
jg
jo
add
out
xchg
fldenv
rcl
inc
add
in
(bad)
xchg
scas
ret
bound
dec
adc
aaa
jle
jp
nop
lds
add
(bad)
iret
popa
and
inc
xor
ja
stc
or
and
jmp
mov
xchg
frstor
ror
sbb
inc
push
outs
xor
in
les
jnp
push
or
ins
aas
dec
xor
pop
adc
push
and
jae
loope
mov
jl
jle
push
sub
popa
loopne
mov
hlt
lods
in
test
cmps
mov
out
scas
cmc
movs
into
cmps
lds
fisubr
movs
leave
cwde
repz
iret
test
adc
and
pop
sbb
icebp
mov
stos
stc
mov
mov
rcl
shl
xchg
into
(bad)
hlt
outs
psubw
push
jl
inc
sbb
sti
add
cs
push
rcl
mov
sbb
add
loopne
push
push
inc
jmp
and
loopne
in
movs
mov
push
outs
lods
arpl
inc
sbb
sbb
inc
jmp
xchg
mov
inc
sti
leave
mov
jle
sub
sub
mov
test
scas
push
inc
add
ss
add
sub
push
adc
rol
or
data16
sub
add
and
inc
pop
dec
repz
jnp
imul
xchg
fld
cmp
xchg
jmp
lock
push
jl
pop
or
push
pop
push
inc
rol
das
jo
pop
das
jne
inc
fdivr
push
add
stos
call
xor
sti
mov
fwait
ret
xchg
shl
cmp
jno
jp
pop
hlt
pusha
sbb
inc
adc
ds
sbb
jae
and
mov
push
nop
jmp
std
mov
cmp
pop
add
ja
shr
call
(bad)
xchg
rol
popa
and
(bad)
add
in
sub
or
cld
xchg
(bad)
mov
cmp
and
push
push
add
push
push
ja
push
ss
data16
test
fsubrp
mov
mov
das
icebp
lods
call
push
or
hlt
rcr
jno
xor
adc
inc
pop
dec
into
mov
(bad)
push
push
add
loope
fldenv
or
ins
or
or
push
add
test
mov
movs
(bad)
push
test
add
outs
mov
iret
jbe
(bad)
mov
stos
stos
(bad)
mov
jno
inc
repnz
push
pop
sbb
cs
xchg
push
and
je
jbe
push
outs
out
repz
hlt
ins
and
mov
into
outs
shl
mov
(bad)
out
enter
test
or
gs
pop
repz
inc
stos
push
adc
sub
sbb
dec
sbb
cli
test
stos
out
mov
mov
in
iret
test
xchg
fbld
mov
adc
xchg
popa
adc
pop
in
frstor
fsub
inc
sbb
mov
or
retf
gs
push
scas
jmp
imul
hlt
mov
cmp
test
(bad)
clc
mov
clc
pushf
scas
xchg
push
maxps
(bad)
pop
sub
adc
loop
std
scas
fs
mov
sar
mov
xchg
fild
mov
xchg
fisttp
inc
cmp
mov
jg
and
es
jl
call
push
adc
sub
div
movs
in
pop
movs
in
xchg
fnstenv
retf
xor
inc
sub
dec
cmp
cs
adc
ja
enter
das
push
dec
xor
push
push
adc
dec
out
cmp
je
inc
aaa
and
inc
dec
cmc
xchg
mov
sub
mov
int
shl
xor
aad
jmp
loop
mov
lahf
repnz
into
cmp
xchg
cdq
cli
jb
adc
push
jmp
ins
sub
push
pop
outs
cmp
jle
jb
jno
push
inc
add
mov
ds
dec
cmp
inc
cmp
movs
jmp
gs
and
aas
outs
sub
ret
xchg
call
xchg
not
sbb
cmp
shl
loopne
fnsave
out
sti
mov
stos
pop
nop
(bad)
jno
push
ret
mov
int
cld
aaa
imul
push
daa
jae
pop
loop
jg
jp
cmp
cmp
mov
push
or
pop
adc
and
aad
loope
jle
test
mov
or
sub
jno
jg
push
out
fs
mov
jg
inc
movs
lock
mov
or
lods
fisttp
push
push
sbb
stc
test
mov
pop
or
or
in
mov
ret
xchg
cmc
cmps
iret
adc
push
lds
(bad)
jle
push
dec
push
(bad)
cmp
sub
cmp
and
js
push
adc
rep
loop
(bad)
mov
lahf
cmp
pop
out
test
xor
xchg
shr
sub
push
mov
mov
xchg
retf
mov
pop
sbb
dec
adc
sub
mov
jb
or
dec
ds
sbb
dec
mov
mov
cmps
hlt
mov
push
inc
(bad)
mov
mov
gs
mov
or
or
mov
mov
jle
rcl
fmul
in
pop
rcr
xlat
xchg
test
or
sub
lods
call
outs
(bad)
xor
pop
sbb
lds
jae
ins
sbb
retf
test
mov
xchg
(bad)
cli
lods
fst
aam
sbb
sti
push
xor
mov
mov
jnp
shr
xor
cs
and
ja
jo
inc
sbb
sbb
xor
and
cmp
pop
movs
pop
xor
pop
cmc
xchg
scas
call
cld
scas
lahf
in
arpl
adc
out
xchg
iret
imul
mov
rol
mov
xor
je
xchg
dec
outs
pop
outs
sbb
jbe
cdq
adc
sbb
inc
adc
jle
gs
hlt
cs
mov
rcr
jo
pop
out
cli
adc
ror
inc
in
test
inc
cmp
imul
outs
outs
adc
dec
call
inc
or
jae
dec
popa
add
add
ins
add
sbb
gs
jle
cmp
xor
out
lahf
inc
push
or
popf
gs
mov
jmp
push
xor
(bad)
mov
jle
jne
ret
ret
xchg
(bad)
mov
enter
loope
int3
scas
(bad)
test
data16
fsubr
xchg
cwde
mov
adc
enter
cld
cwde
lock
jmp
lahf
int3
xchg
jns
inc
adc
push
or
dec
push
jle
push
add
data16
xchg
mov
push
add
dec
and
push
sbb
add
pop
out
mov
xchg
add
and
sbb
int
test
cmp
imul
mov
rcl
das
jle
ss
and
push
xchg
add
dec
or
mov
test
mov
cdq
fisttp
cmovle
inc
adc
push
pop
xor
jge
jg
xor
xor
sahf
stc
jne
(bad)
xchg
fnstsw
inc
xchg
xor
das
mov
mov
fld
(bad)
retf
inc
lds
cli
cdq
les
and
pop
xor
call
outs
jge
jns
test
xor
push
push
mov
xlat
mov
cli
nop
test
add
imul
(bad)
call
sub
int3
mov
sub
mov
xor
xchg
cld
cwde
ins
rcr
jmp
loope
aad
mov
fidiv
jae
pop
out
jmp
fwait
fwait
in
movs
fistp
in
mul
cwde
pop
jbe
pop
movs
push
sbb
jle
adc
pop
pop
jmp
shl
cld
xchg
inc
adc
jbe
sbb
fs
imul
push
ret
(bad)
cmc
lods
les
pop
std
in
mov
mov
lds
cld
cmps
shl
into
jmp
shr
cmps
imul
sub
jge
ss
out
mov
xchg
mov
lods
sti
mov
mov
fidiv
and
fs
push
add
dec
add
cwde
cmp
pop
mov
sub
cli
push
call
mov
in
pop
mov
cmps
stc
rcr
ss
xor
in
push
imul
arpl
push
in
xchg
movs
test
test
mov
xchg
cmp
inc
adc
and
add
cld
and
sub
ja
pop
push
dec
xor
out
sahf
fistp
imul
pusha
xor
jnp
mov
mov
mov
imul
sahf
mov
mov
cmps
leave
or
ja
pop
sub
pop
mov
ins
sub
mov
(bad)
in
xchg
popa
arpl
fimul
in
cwde
mov
mov
arpl
jp
jo
pop
pop
sub
mov
fisubr
cs
in
call
mov
iret
movs
(bad)
lahf
popa
test
xor
jg
jl
dec
cmp
sbb
sub
dec
out
loop
mul
daa
push
sbb
not
push
cmp
xor
outs
mov
cmc
mov
popf
xlat
or
mov
pusha
xor
ret
call
(bad)
div
mov
repnz
stos
in
in
sub
pushf
mov
jmp
inc
imul
and
jns
pop
mov
inc
add
adc
and
xchg
pop
mov
mov
mov
cmp
retf
fwait
out
fwait
pop
arpl
jnp
sar
xor
mov
cdq
xor
mov
cmp
pop
xor
lods
jns
sti
sbb
push
pop
push
(bad)
and
loope
les
add
ficomp
mov
xor
shl
ds
dec
iret
ror
pusha
pop
dec
cli
js
mov
xchg
ret
imul
push
add
pushf
cmps
test
adc
xlat
jg
in
stos
fimul
mov
pushf
int
sbb
cmc
xor
inc
sbb
out
mov
mov
ja
add
push
pop
aas
adc
shr
mov
cmp
jmp
test
fwait
or
(bad)
xor
mov
bound
loop
jmp
test
push
sub
jo
dec
shl
test
dec
xor
daa
mov
aas
and
cwde
xchg
xor
mov
inc
or
pop
adc
stos
pop
dec
ins
adc
ins
xchg
fdiv
outs
(bad)
mov
lods
pop
test
push
cmp
fcomp
int
int
mov
pop
mov
call
(bad)
js
xchg
leave
es
sbb
(bad)
loopne
popf
arpl
jle
adc
xor
in
or
xor
dec
dec
jmp
adc
add
mov
pop
imul
jb
pusha
xor
loope
pop
xor
outs
inc
sub
sbb
and
outs
mov
fcom
stos
or
cmp
mov
fdiv
fisttp
inc
adc
stc
pop
mov
fmul
pop
call
inc
scas
push
daa
mov
mov
std
sbb
mov
xor
pop
int
call
jg
pop
cs
sar
pop
inc
stos
inc
imul
pusha
xor
pavgb
pop
call
int3
test
movs
sbb
add
push
and
mov
fsubr
jmp
int3
adc
jae
xchg
dec
xchg
ja
cmp
sub
nop
aas
aam
mov
inc
in
xchg
xchg
es
mov
xchg
jno
clc
xor
and
icebp
push
test
in
pushf
sbb
dec
hlt
cmps
cld
fist
scas
add
hlt
je
pop
sar
add
ja
dec
pop
into
and
sub
je
cmp
sub
inc
pop
jmp
div
and
repnz
iret
sbb
das
dec
fcom
or
lds
ret
mov
xlat
aas
call
or
scas
sub
mov
ds
and
jl
sub
pop
push
pop
mov
icebp
js
dec
mov
out
in
out
add
xor
ret
dec
ret
(bad)
das
ret
pop
mov
jne
jmp
or
inc
fcom
push
jmp
push
call
out
es
ret
in
stos
out
dec
iret
loope
fldenv
leave
xchg
sbb
or
(bad)
in
cli
mov
mov
mov
sbb
xlat
ins
cmp
mov
dec
faddp
add
dec
cmps
bound
fdecstp
push
mov
and
sub
enter
call
xor
pop
stos
ins
pop
js
int3
test
cmp
das
arpl
mov
xor
inc
cs
add
xlat
out
int
jmp
jno
jmp
(bad)
cmps
mov
scas
pop
cwde
inc
rcr
jg
mov
xor
movs
imul
out
inc
ret
or
adc
mov
cmp
imul
fsub
cdq
adc
cmc
add
cwde
mov
arpl
xor
inc
push
or
leave
sti
retf
lea
ja
dec
add
inc
fwait
push
pop
xchg
les
mov
ss
jle
ja
jp
push
cmp
or
xor
pop
dec
sbb
adc
repz
inc
imul
add
sub
les
mov
mov
inc
(bad)
sbb
std
in
sub
inc
and
pop
and
dec
push
mov
jp
shl
mov
ss
inc
scas
mov
rol
call
add
add
sbb
push
add
xor
out
push
les
push
push
or
cld
push
mov
adc
push
sbb
push
push
jle
in
mov
mov
mov
cmps
loopne
in
nop
icebp
outs
ss
jmp
mov
sbb
add
icebp
outs
addr16
sbb
adc
ds
rcr
pop
jo
cs
xor
data16
out
hlt
xlat
pop
sbb
dec
out
adc
push
test
xchg
add
dec
sbb
rcr
add
mov
or
bound
xor
pop
imul
movs
xor
fld
cmp
out
loop
pop
push
cmp
popf
mov
inc
enter
repz
xchg
and
loop
cmp
shr
outs
fidiv
dec
sbb
push
cmp
js
lods
add
sbb
clc
aad
pop
dec
mov
test
jl
sbb
jl
retf
inc
nop
mov
adc
and
adc
gs
bound
test
lods
test
mov
bound
push
jg
test
retf
loope
lahf
stos
(bad)
test
push
popf
push
push
push
push
mov
scas
stos
jo
add
fst
sbb
int3
loopne
xor
jge
into
push
data16
inc
mov
mov
(bad)
dec
mov
pop
pusha
imul
rcr
call
dec
pop
(bad)
std
sbb
aad
sbb
movs
dec
mov
nop
outs
mov
mov
cmp
xlat
adc
leave
or
test
and
call
and
cli
movs
sbb
cdq
push
icebp
outs
mov
mov
pop
test
sub
jb
nop
(bad)
cwde
data16
mov
sar
sti
fwait
inc
in
call
xlat
mov
jnp
inc
loopne
xor
mov
shl
inc
repnz
loope
out
retf
movs
cld
xchg
daa
pop
xchg
mov
add
in
push
sbb
adc
push
fnstsw
or
(bad)
cdq
sbb
jmp
ds
lds
sbb
or
rcl
aam
cli
adc
rcr
cmp
push
sar
fldenv
sbb
std
push
imul
femms
pop
idiv
jmp
mov
dec
in
jmp
inc
adc
cwde
xchg
xor
ret
(bad)
fld
or
outs
call
mov
in
and
push
dec
inc
mov
aaa
xchg
bound
mov
adc
loop
ret
iret
mov
in
popf
dec
loope
add
imul
popa
es
sub
les
jmp
mov
daa
push
aad
xlat
gs
scas
popa
sbb
stos
popf
mov
pushf
xor
push
mul
dec
dec
mov
(bad)
imul
leave
push
aad
ror
sub
adc
push
ror
push
cld
xchg
adc
push
fst
rol
sti
mov
push
call
mov
loop
xor
dec
scas
push
sbb
mov
dec
mov
adc
mov
cmp
fild
xor
es
push
mov
(bad)
stc
iret
in
fsubr
fsubr
jns
pop
stc
and
fcomp
test
mov
push
popa
mul
mov
pop
or
jmp
mov
test
dec
add
or
test
or
jl
xchg
mov
and
out
ins
shl
push
jg
jo
out
in
xchg
mov
add
fld
lock
jbe
loope
and
loop
aas
push
fld
mov
ins
out
fidivr
lea
in
js
dec
(bad)
and
not
test
cs
in
inc
dec
or
sub
into
mov
inc
hlt
ds
int
mov
es
cmp
scas
or
sub
scas
sbb
mov
sbb
cdq
shl
in
push
cmp
in
cdq
jp
add
jae
xchg
ret
jmp
test
lahf
sbb
xor
nop
mov
mov
aam
cmp
add
outs
sub
xor
jbe
lods
inc
or
adc
push
dec
movs
mul
mov
sub
ret
mov
popf
(bad)
stos
mov
jbe
stc
mov
outs
xchg
rol
inc
sub
xchg
scas
and
inc
xchg
jl
inc
in
and
jne
(bad)
pop
mov
mov
stos
shl
fidiv
cmp
(bad)
test
adc
lahf
movs
xor
cmps
int
popa
jne
push
dec
sbb
arpl
sub
fldcw
retf
fisubr
add
loop
xor
or
sbb
ja
lods
xchg
push
pop
adc
jmp
dec
hlt
dec
inc
jns
dec
inc
jns
xlat
test
mov
mov
sbb
cmc
xchg
repnz
mov
nop
les
ret
dec
jbe
xchg
cwde
pop
pop
cli
sbb
dec
jo
xchg
(bad)
dec
add
mov
ins
scas
std
into
xchg
call
mov
bound
popa
call
ins
push
inc
mov
xchg
mov
jnp
fwait
dec
inc
js
cmps
pop
jge
popf
push
(bad)
out
cmp
aas
mov
ret
push
dec
rcl
and
mov
popa
das
mov
inc
push
pushf
inc
xchg
out
sbb
mov
sub
cmps
lock
(bad)
retf
icebp
xchg
ss
in
mov
mov
mov
inc
xchg
arpl
scas
pop
or
cmp
cdq
dec
xchg
pop
mov
and
inc
aad
cmps
mov
and
and
mov
cs
popf
and
popf
and
out
mov
(bad)
push
cmp
repnz
in
in
xchg
inc
and
std
add
pop
les
mov
stos
jp
sti
xchg
jecxz
push
inc
out
sub
push
mov
pop
es
push
xor
rcl
xor
inc
mov
cli
in
jl
push
cmps
jns
pop
movs
mov
iret
mov
dec
arpl
mov
dec
or
adc
ret
int
jl
sbb
aad
jge
mov
jp
xchg
push
mov
fwait
or
and
pusha
idiv
gs
out
jge
ds
iret
shr
jp
xor
jae
sbb
inc
mov
jmp
popa
jae
nop
pop
cld
pop
pop
in
mov
fstp
pop
hlt
jge
lahf
mov
jmp
loope
jae
adc
pop
cdq
lahf
xor
iret
jnp
xchg
std
fldenv
retf
ret
push
imul
loope
mov
loop
sbb
fmul
push
add
and
aaa
cmp
ds
cld
aam
or
xor
loope
dec
cmc
jmp
jnp
xor
pop
adc
pop
fdivrp
sub
jnp
mov
adc
je
mov
cwde
fldcw
ins
sbb
cwde
mov
fst
fcmovnu
cmps
cmp
jmp
(bad)
aas
fistp
xchg
fsub
test
pop
xor
mov
cmp
scas
and
or
cmc
ficom
leave
in
pop
aas
xor
ins
sub
or
jnp
retf
xchg
add
mov
call
mov
pop
inc
add
sub
call
ds
or
or
jmp
popf
adc
inc
xor
inc
mov
test
sub
fidivr
xor
add
loope
sub
daa
lods
jo
jns
ficomp
icebp
imul
push
in
(bad)
ins
adc
sti
movs
jmp
adc
scas
daa
and
sub
push
clc
mov
rol
movs
sbb
adc
call
mov
mov
sub
xchg
mov
fwait
mov
call
jmp
aas
lock
xor
push
test
dec
mov
hlt
sub
push
loopne
in
push
mov
leave
and
sub
out
test
(bad)
in
mov
enter
pop
sti
xchg
inc
mov
pop
rol
shr
adc
daa
out
xchg
mov
pop
push
fisubr
ficom
mov
dec
and
cwde
push
fcomp
push
bound
pop
jbe
jno
bound
pop
(bad)
std
das
xchg
pop
and
pause
cmps
outs
ss
pop
push
call
aam
lock
cmp
mov
or
jb
es
inc
js
dec
inc
or
test
popa
ss
inc
js
pop
jno
(bad)
lods
out
pop
lods
push
loop
(bad)
js
cmps
(bad)
shl
cwde
xor
int
xchg
sub
xor
dec
imul
push
sub
pop
pop
fadd
fld
int3
mov
ret
inc
push
leave
mov
mov
push
mov
div
cmp
fs
mov
fidivr
(bad)
cmp
dec
cmp
xchg
rcl
mov
xlat
lahf
cmp
push
adc
jg
dec
and
pop
fwait
cmps
add
mov
or
xchg
mov
lea
outs
inc
int3
ja
and
add
outs
and
cmp
test
lea
mov
fnstcw
inc
add
and
call
xor
stos
or
cmps
iret
inc
xor
dec
xor
push
bound
push
retf
mov
je
rcl
jg
fsub
fcomi
ror
xor
push
xchg
mul
pop
jge
xchg
push
bound
mov
push
(bad)
cmp
mov
shl
aaa
sub
popf
ja
xor
jg
imul
test
dec
repz
sub
sub
sub
loop
nop
adc
pop
xor
jmp
mov
mov
xor
out
movs
mov
div
inc
out
sbb
mov
in
push
mov
das
pop
hlt
push
xchg
mov
stos
sub
cmp
(bad)
shr
pop
or
xchg
mov
mov
pop
xor
pop
inc
cmp
xlat
cwde
test
test
mov
pop
jns
mov
mov
push
popf
pop
push
or
xchg
add
gs
mov
in
fstp
or
inc
xchg
jbe
sbb
(bad)
fimul
les
mov
neg
ins
mov
mov
or
mov
(bad)
shl
and
and
jae
loope
es
popa
movs
pop
pusha
mov
rol
outs
add
(bad)
or
icebp
(bad)
sub
mov
repnz
or
add
sar
mov
rcl
popa
ret
sahf
mov
mov
fsubr
repnz
(bad)
pop
and
pop
and
leave
pop
adc
sub
leave
dec
stos
lods
mov
cmp
dec
cld
cld
loopne
dec
mov
int
cmc
mov
mov
fld
mov
sbb
jb
xchg
cld
pop
pusha
cwde
xor
jb
out
jne
outs
aam
cdq
cmp
push
movs
sub
mov
and
stos
push
jo
jne
jne
adc
fisttp
xchg
pop
js
mov
xor
push
lock
bound
xlat
sbb
sub
push
jno
cld
or
cmc
stos
mov
jmp
ins
ja
retf
mov
sub
(bad)
xchg
fs
int3
rcr
jne
adc
and
sub
xchg
icebp
adc
pop
mov
mov
icebp
retf
xchg
jns
cli
adc
xor
fwait
ss
add
test
in
cmp
les
push
or
sub
sub
adc
xchg
ret
addr16
addr16
test
adc
cmp
(bad)
jns
int
retf
pop
adc
sti
in
fcom
mov
pop
mov
xchg
adc
xor
and
pop
aas
lahf
add
cmp
sbb
in
cs
repnz
sub
rcr
sahf
sub
inc
xchg
cmp
inc
sbb
xor
mov
xor
bound
stc
imul
adc
xor
jl
mov
retf
mov
es
int3
mov
mov
push
mov
dec
and
fist
inc
xor
nop
push
dec
mov
xlat
adc
(bad)
in
cmp
popa
mov
fisubr
pop
adc
stc
popf
inc
jne
(bad)
xlat
jmp
fsub
pop
inc
push
push
xchg
sub
scas
retf
movs
add
fimul
clc
adc
pusha
pop
pop
sub
(bad)
retf
jmp
retf
add
mov
dec
push
mov
sub
paddq
and
js
(bad)
jmp
leave
test
adc
mov
(bad)
lahf
std
jmp
lea
int
sub
out
stc
jmp
cli
es
stos
cmp
ss
lods
push
inc
imul
(bad)
or
pop
retf
push
cmp
add
mov
jne
enter
(bad)
pusha
(bad)
(bad)
and
jmp
fs
xor
and
loop
dec
jno
movs
aaa
jns
test
xor
xor
fs
gs
(bad)
cdq
shr
add
sbb
cwde
push
pop
cmp
sub
add
pop
les
fs
add
xchg
retf
fidivr
pusha
jno
push
xchg
mov
mov
lahf
loop
enter
in
cmp
into
test
in
dec
pop
xor
(bad)
imul
pop
(bad)
mov
jmp
and
sti
movs
out
sti
shr
das
mov
or
gs
jecxz
cmp
daa
adc
pop
push
pop
push
stos
or
bound
or
push
mov
mov
nop
imul
loope
aad
jge
cmp
xor
pop
xor
out
sub
in
enter
cmp
fist
xchg
mov
call
sub
push
dec
or
rol
ret
and
fwait
mov
inc
mov
and
pop
jmp
jge
mov
pop
cmps
inc
and
dec
hlt
stc
inc
lods
push
cmc
and
jno
ret
outs
add
loopne
arpl
int
cmps
jae
stc
adc
call
movs
cs
jge
or
mov
int
test
retf
push
test
mov
and
mov
pop
xor
clc
stc
or
out
cmp
jno
adc
jmp
imul
stos
mov
popf
cmp
cmps
cmp
ins
fistp
call
pushf
addr16
shr
mov
repnz
retf
outs
mov
jns
or
nop
cmps
jmp
add
mov
xchg
aaa
lods
movs
inc
shr
popa
add
jae
stos
xchg
imul
pop
aas
add
js
imul
and
loope
sub
cmc
ins
push
xor
sbb
add
div
push
inc
jnp
adc
(bad)
ins
dec
xchg
lds
push
dec
aaa
in
sub
test
bswap
push
mov
adc
loop
loop
push
in
scas
(bad)
add
jmp
movs
retf
sbb
mov
pop
push
addr16
lods
cmp
or
cmp
mov
repz
xchg
pop
int3
ins
and
mov
xchg
or
mov
or
repnz
retf
inc
xchg
aad
stos
rol
paddsb
ja
std
in
and
imul
mov
(bad)
xor
loope
push
or
push
arpl
scas
enter
fcmovnb
repnz
cmp
leave
inc
ins
sub
mov
mov
clc
xor
push
aas
data16
pop
(bad)
enter
push
js
jmp
dec
int3
sub
push
add
jmp
mov
inc
movs
inc
cmp
fwait
outs
adc
cmp
sbb
xor
cmps
push
add
call
xchg
sbb
inc
loop
cdq
call
fs
pop
idiv
push
rcr
jae
pop
sub
or
(bad)
scas
add
xchg
push
add
dec
mov
jmp
mov
movs
ret
es
ss
and
loopne
aaa
sub
adc
bound
call
and
mov
jo
sub
adc
stos
sbb
xchg
inc
xor
sub
ins
outs
out
add
inc
mov
repz
xchg
call
js
sbb
cmp
(bad)
iret
jbe
sub
inc
cmp
mov
loop
dec
inc
xor
pop
push
jmp
out
(bad)
pop
in
data16
icebp
jecxz
push
mov
div
add
mov
add
adc
mov
and
jle
icebp
inc
pop
stc
pop
push
jae
mov
dec
mov
sub
icebp
retf
pushf
inc
inc
idiv
pop
sub
mov
mov
inc
dec
mov
jno
imul
inc
add
push
inc
mov
mov
(bad)
aad
and
mov
xor
stos
pop
ret
xor
leave
sahf
push
add
pop
into
aas
cmc
std
mov
jne
mov
cmps
pop
mov
sahf
loope
les
fidivr
add
popw
fsub
mov
test
lods
push
xchg
dec
mov
jo
inc
mov
fst
xchg
dec
and
and
mov
sub
add
ror
call
and
xchg
cmps
or
xor
sub
in
mov
push
and
(bad)
loopne
mov
sub
sbb
cdq
xor
test
xchg
sahf
dec
add
cli
icebp
xor
xchg
call
mov
aad
jl
scas
mov
mov
pop
mov
(bad)
(bad)
sahf
iret
and
test
movs
jb
sbb
mov
dec
outs
pop
jg
xchg
adc
mov
imul
out
add
stc
ja
cmps
adc
sub
or
xlat
jg
out
sbb
fist
das
inc
(bad)
pop
mov
nop
xchg
dec
add
adc
add
lea
add
(bad)
mov
std
mov
lock
data16
mov
sti
pop
pop
in
call
jno
sar
dec
push
shl
jle
cdq
jb
aam
fmul
ins
test
rol
inc
pop
jl
(bad)
aad
fdiv
jmp
hlt
hlt
cmp
fsub
pop
adc
das
loope
imul
sbb
addr16
xor
clc
test
xchg
and
int
in
sub
rcl
cs
pop
lods
nop
(bad)
mov
lods
dec
xchg
bound
or
xor
fist
jb
cmp
mov
cmp
call
cmp
stos
in
adc
clc
jmp
sbb
loope
xor
jmp
dec
stc
push
(bad)
mov
or
lds
xor
add
std
or
imul
daa
and
sahf
das
cdq
xlat
(bad)
outs
jnp
loope
clc
mov
inc
add
sub
out
rol
add
adc
call
test
das
jmp
and
(bad)
jne
mov
jbe
or
mov
sub
mov
repz
or
jno
xlat
fidiv
jl
mov
and
push
cmp
dec
jle
sar
xlat
or
pop
and
add
and
pop
leave
std
test
or
sub
push
out
mov
outs
sub
sub
aad
mov
sub
inc
sub
fild
xchg
scas
loope
push
and
sbb
sub
cdq
out
(bad)
gs
and
mov
sbb
add
adc
repz
inc
pushf
inc
or
sub
xchg
mov
sub
sub
clc
out
fild
call
mov
scas
cmc
ja
or
inc
out
push
(bad)
rcr
popf
xor
jbe
mov
imul
(bad)
dec
jl
call
cdq
mov
fdivr
mov
jnp
mov
retf
add
add
push
inc
xchg
aam
sub
shl
lds
add
mov
cli
sbb
cdq
(bad)
sbb
nop
sbb
jnp
mov
dec
int
imul
pop
imul
idiv
xchg
add
xchg
test
mov
mov
mov
sbb
call
mov
mov
add
push
xchg
bound
add
(bad)
scas
jg
xlat
and
mov
mov
xchg
dec
cmp
push
push
mov
jo
fistp
push
push
jecxz
jae
sbb
loopne
shl
add
call
popa
adc
loope
xor
add
std
fcomp
or
shl
pop
int
dec
and
out
cs
data16
fcomp
dec
sbb
push
repz
cdq
std
xor
retf
in
or
mov
dec
pop
ds
in
xor
arpl
push
popa
mov
out
mov
in
sub
jb
push
jg
dec
mov
scas
dec
xchg
nop
in
lock
bound
sub
sbb
inc
push
stos
dec
stos
xor
add
repz
and
xchg
cmps
retf
cmp
bound
out
out
add
sub
pop
inc
inc
push
inc
(bad)
in
outs
and
add
nop
adc
add
(bad)
aad
push
mov
mov
int3
lahf
mov
sub
adc
jge
cmps
ret
or
sbb
out
movs
cwde
mov
cli
pop
clc
and
pop
call
call
(bad)
xchg
push
pop
ins
jecxz
test
xchg
data16
sub
inc
fld
mov
inc
xor
repnz
das
imul
sbb
dec
push
mov
dec
push
ins
test
sbb
sub
jo
add
push
dec
(bad)
(bad)
out
in
fisttp
jbe
ja
data16
sub
mov
mov
inc
scas
(bad)
(bad)
xchg
lods
adc
xchg
addr16
jp
xchg
jecxz
test
cmp
std
mov
sbb
rcr
je
xchg
outs
sbb
mov
aaa
test
jbe
fwait
mov
std
int3
mov
mov
pop
cmps
les
inc
shr
mov
push
rol
xchg
fbstp
inc
jp
cmps
sbb
ror
dec
xor
and
adc
in
cmps
mov
dec
data16
sbb
(bad)
(bad)
iret
dec
out
dec
dec
xor
sbb
jbe
retf
mov
stc
test
scas
xor
sbb
push
add
aad
lds
sub
jns
sahf
test
fnsave
(bad)
addr16
xchg
repz
in
xchg
fistp
test
mov
mov
mov
xchg
lods
test
addr16
add
sbb
icebp
add
adc
mov
leave
adc
test
icebp
adc
and
ins
ins
aas
inc
movs
push
repnz
ret
or
mov
lock
test
test
dec
pop
outs
imul
inc
push
je
jb
jo
fsubr
arpl
jmp
mov
mov
and
mov
add
inc
sub
(bad)
(bad)
btc
adc
push
inc
dec
mov
int3
pop
sub
mov
daa
iret
lea
loop
xlat
outs
and
cmps
and
cmps
pop
jge
ds
gs
lds
xlat
dec
or
jbe
pop
push
data16
scas
outs
push
push
push
fnstenv
push
inc
outs
call
pusha
sub
ror
das
mov
div
mov
shr
test
out
rcr
push
(bad)
(bad)
jmp
enter
call
addr16
test
push
fs
sbb
ins
dec
sbb
add
fbstp
cmp
ja
call
add
das
js
push
and
rsqrtps
lahf
push
or
stc
out
xor
add
das
sbb
rcr
fucomi
movs
push
or
mov
add
mov
aas
cmp
push
pop
sbb
test
in
(bad)
jns
fadd
or
pop
mov
xor
dec
iret
cmp
retf
outs
test
or
sbb
pop
mov
call
gs
or
stc
and
call
xor
xor
retf
lea
jmp
sbb
push
fmul
or
sahf
mov
scas
je
das
pop
outs
out
les
loopne
adc
les
and
cmp
addr16
je
mov
div
(bad)
jmp
mov
mov
es
scas
sub
xor
retf
mov
mov
jge
xchg
sbb
repnz
js
jmp
push
pop
xor
xchg
jp
push
cmp
fimul
js
xchg
movs
adc
mov
mov
out
push
rcr
ret
cmc
dec
push
std
add
push
out
or
imul
or
or
fwait
movs
mov
ja
sbb
js
ret
dec
mov
xchg
sub
and
mov
sbb
repz
xor
enter
in
sbb
(bad)
loop
xchg
dec
sbb
sbb
ret
mov
jno
xchg
inc
imul
dec
inc
mov
ins
adc
repnz
jns
cmp
adc
sub
loopne
adc
or
in
or
idiv
xchg
mov
sbb
mov
mov
cmps
lods
shr
xor
pushf
dec
jmp
stos
scas
repz
cwde
mov
in
pop
out
sbb
mov
and
dec
lds
fiadd
xor
not
lds
dec
sahf
mov
pop
jae
aam
jne
xlat
iret
adc
or
xchg
xlat
push
mov
in
jp
xor
add
mov
add
ret
cmc
jg
pop
ins
jp
sbb
jp
add
std
sbb
sbb
mov
xchg
mov
jecxz
aas
call
lock
or
or
or
pop
jl
loop
daa
cmp
adc
cmp
jo
(bad)
adc
jle
mov
add
addr16
outs
dec
lods
dec
adc
cmp
sbb
les
out
or
gs
(bad)
clc
je
xchg
add
lahf
xchg
movs
stc
push
data16
lods
clc
jns
int3
div
push
jne
fild
clc
mov
jns
dec
xor
pop
stos
add
cld
stos
or
ret
sti
retf
cmp
sahf
out
and
cmp
imul
push
cmp
jle
xchg
mov
out
mov
xor
xor
mov
sbb
call
daa
lods
jecxz
pop
push
push
adc
push
(bad)
fild
xlat
xor
int3
fucomi
cmp
movs
push
pop
call
imul
and
or
xchg
rcl
sub
scas
dec
nop
or
div
cwde
pop
adc
je
add
sbb
pop
ret
add
dec
and
or
sahf
or
mov
mov
sub
or
jae
das
push
cdq
xchg
cmp
repz
test
push
and
dec
pop
pop
add
adc
mov
cmps
test
and
add
arpl
add
je
fistp
and
xor
push
adc
imul
arpl
ja
jmp
cmps
cmp
pop
push
loop
fs
gs
push
sbb
push
jmp
inc
jne
cmps
mov
xchg
xor
add
test
xor
test
xlat
add
xchg
xchg
push
lods
cmp
fisubr
fcmovu
shr
shl
cs
(bad)
jno
pop
mov
push
mov
ss
adc
scas
stos
mov
mov
sub
cmp
mov
mov
add
movs
imul
js
mov
sub
sbb
je
cmp
sbb
test
outs
cli
mov
mov
jecxz
into
call
fcom
or
ficomp
mov
cwde
test
pop
mov
and
popa
add
cs
pop
mov
dec
adc
shr
mov
popf
nop
retf
mul
movs
jb
fidiv
addr16
xor
xchg
ja
js
es
cmp
imul
xchg
inc
fistp
and
push
xor
(bad)
push
sahf
and
into
or
push
lods
data16
inc
jno
jbe
inc
fld
push
test
int3
iret
enter
in
enter
cmp
test
add
icebp
jle
push
jge
dec
push
add
lds
cwde
cs
sub
adc
or
jns
inc
xor
push
das
inc
pop
scas
sbb
push
add
sub
xchg
(bad)
cmp
in
adc
fwait
jg
push
cmp
sub
outs
(bad)
xor
cmps
out
push
pop
out
mov
or
cmp
push
mov
add
pop
pushf
dec
stos
jecxz
outs
fld
sbb
cmc
repnz
dec
ret
cmp
mov
dec
sub
(bad)
mov
pop
inc
mov
adc
and
add
or
call
in
cmps
outs
test
and
mov
mov
dec
repz
test
xor
and
retf
aam
int3
adc
repnz
mov
xor
pushf
add
es
iret
xchg
lea
call
lods
sub
rol
adc
xchg
sub
or
inc
stos
enter
leave
cmp
adc
movs
in
sbb
aaa
add
xor
pop
mov
les
and
add
loop
daa
dec
sbb
adc
push
in
jmp
mov
test
xor
pop
rcl
sub
fidiv
ss
pop
les
xchg
repz
mov
in
adc
mov
sub
sbb
and
add
aaa
cld
fimul
jecxz
into
daa
mov
jo
xchg
xor
pop
push
push
xor
in
daa
push
int
cmp
out
(bad)
sub
gs
xor
test
imul
mov
push
jmp
fdivr
and
push
clc
xor
lock
pusha
or
cmp
push
xor
outs
cmp
and
lock
xchg
xor
ins
fisubr
jnp
xchg
xchg
cmps
jb
imul
popa
imul
pop
or
(bad)
sub
cdq
jp
scas
or
icebp
mov
test
sbb
dec
push
daa
fsub
movs
mov
mov
cld
(bad)
outs
pop
pop
or
inc
mov
pop
add
mov
jg
push
loope
cmp
or
cdq
xor
xchg
into
sti
mov
fisubr
ss
sbb
iret
sbb
test
push
or
mov
mov
hlt
fwait
pop
push
dec
retf
xchg
test
aam
in
push
sbb
(bad)
sbb
sti
and
stc
hlt
(bad)
repnz
push
dec
popf
xchg
xor
add
mov
nop
std
imul
xor
out
cmp
and
adc
cs
add
cmp
or
xchg
xor
pop
cwde
sbb
mov
out
aaa
inc
sub
and
out
xor
dec
js
cmps
pop
cmpxchg
xchg
and
mov
and
jge
inc
(bad)
stc
hlt
pop
addr16
outs
push
cmp
xchg
dec
push
pop
outs
pop
jl
fstp
inc
dec
inc
dec
xchg
stc
lods
adc
add
mov
daa
push
push
fbld
dec
adc
shr
loopne
call
(bad)
mov
pushf
lds
mov
mov
mov
test
(bad)
sbb
or
stc
pop
retf
add
cwde
(bad)
push
push
inc
loop
repz
push
mov
mov
push
add
ret
cmc
(bad)
jns
mov
ficom
jb
call
jecxz
pop
and
in
push
and
and
into
or
and
cmp
(bad)
loope
(bad)
daa
adc
mov
enter
xchg
push
mov
mov
adc
jecxz
mov
add
cwde
stc
jnp
push
fistp
mov
cmp
js
mov
aad
data16
popf
pop
lock
mov
jne
sub
out
and
sub
adc
in
jl
out
jne
push
sub
es
push
xor
mov
lock
movs
not
push
jmp
mov
dec
shr
cmp
fmul
or
mov
dec
rol
add
xor
cli
pop
out
jmp
cmp
dec
mov
jnp
out
outs
(bad)
lahf
je
pop
mov
xchg
jbe
jge
mov
loopne
rcl
add
lods
sub
scas
or
add
data16
xor
fld
fs
fcmovbe
fiadd
dec
out
out
clc
or
into
jle
add
in
inc
hlt
mov
(bad)
push
and
(bad)
stos
or
and
dec
sbb
adc
das
inc
adc
adc
pop
xchg
add
stc
dec
and
cmp
les
fistp
fwait
lods
sbb
pop
xor
adc
mov
int
jb
pop
mov
jne
in
clc
xchg
fcomp
aaa
(bad)
fidiv
into
repz
rcl
push
lds
jae
mov
ds
aaa
daa
jnp
ins
out
in
jmp
jne
out
ficom
push
inc
icebp
mov
into
cmp
push
mov
and
enter
les
dec
inc
cmc
lods
cmc
pop
imul
jmp
lods
imul
push
call
push
xor
add
sub
or
add
inc
sbb
test
scas
push
fstp
xchg
mov
test
movs
outs
sub
hlt
jmp
ja
out
pushf
jecxz
iret
retf
cmp
shl
push
mov
out
fst
int3
cmp
test
jne
sbb
in
scas
stos
sub
pop
push
into
repnz
dec
sub
jge
xchg
test
pop
fstp
mov
in
xchg
mul
loop
fiadd
data16
xchg
inc
lahf
pop
(bad)
xlat
inc
xor
jge
push
sub
mov
or
mov
xor
ins
mov
cmp
imul
xchg
or
sub
mov
(bad)
sub
(bad)
add
cdq
or
out
in
jo
xchg
pop
add
cld
inc
pop
cmp
stc
ret
imul
adc
scas
pop
jne
inc
leave
sbb
jmp
add
mov
xor
lock
adc
pusha
sub
cmp
mov
and
aaa
stos
push
mov
inc
mov
shl
into
xchg
jb
ret
jb
punpcklwd
xchg
jle
adc
outs
and
cmc
lahf
cmp
call
enter
pushf
dec
and
fstp
pop
jecxz
push
(bad)
aad
push
inc
push
pminsw
call
jae
dec
dec
ins
test
ds
and
call
scas
push
ret
pusha
loopne
(bad)
js
outs
in
push
mov
xchg
cs
xlat
icebp
cmps
jmp
(bad)
in
ins
sbb
pop
push
add
outs
inc
pop
(bad)
and
jle
or
xchg
scas
mov
lods
icebp
out
and
rcr
lods
(bad)
mov
mov
push
call
pusha
fst
jg
pop
call
xor
mov
xchg
jns
mov
outs
in
sar
push
fwait
into
adc
cmp
add
xchg
push
add
(bad)
fs
loopne
(bad)
add
sub
(bad)
scas
sbb
xchg
ret
push
xor
(bad)
adc
movs
mov
repnz
xor
pop
imul
mov
inc
sbb
ja
jo
xlat
scas
data16
daa
lahf
scas
dec
gs
sbb
out
xor
mov
das
and
in
nop
call
xor
adc
pop
or
std
mov
xor
pop
xlat
jmp
test
lahf
inc
sub
ins
out
imul
les
and
aas
xchg
pop
scas
int
push
inc
clc
push
xchg
sub
nop
sub
sbb
fwait
dec
cmp
adc
mov
cmp
outs
repnz
and
adc
xor
pop
test
inc
adc
out
adc
shl
sub
and
sub
and
shl
sysret
test
movs
es
mov
sub
sbb
fld
pop
cmp
(bad)
iret
jge
movs
mov
(bad)
retf
push
pop
repnz
jge
test
dec
mov
add
sub
out
mov
add
fwait
pushf
out
out
dec
pusha
jne
leave
adc
xchg
(bad)
(bad)
jle
cli
in
push
stos
pop
das
mov
test
imul
es
mov
mov
clc
pop
test
adc
pop
xchg
push
pop
(bad)
cmp
jmp
mov
addr16
mov
pop
sahf
mov
aas
adc
and
push
repz
ret
xchg
and
das
shr
js
xchg
mov
imul
mov
popa
cld
jmp
lods
test
iret
fdiv
mov
xor
call
mov
mov
xor
xchg
mov
dec
inc
sub
shl
inc
cwde
icebp
aam
jecxz
fs
mov
mov
mov
in
in
mov
int
ins
pop
lds
stos
jns
mov
arpl
lahf
daa
pop
out
clc
aad
sub
loop
into
repnz
ds
cmp
inc
(bad)
lahf
inc
ficom
je
ja
xchg
fldcw
jnp
cmp
push
xor
pop
push
jb
in
test
popa
cmps
mov
jmp
retf
xchg
or
outs
das
or
(bad)
outs
jmp
fsubr
adc
lods
call
mov
cmp
jg
add
xchg
test
(bad)
jmp
shr
cli
test
stos
popf
test
cmps
aam
mov
sub
out
jo
stc
imul
jae
pop
movs
sub
dec
pop
mov
das
shr
(bad)
(bad)
pusha
jp
mov
inc
pop
jnp
std
or
xchg
and
jg
fadd
add
or
mov
push
inc
xor
stos
inc
adc
call
cmp
lea
mov
pop
imul
cmps
or
mov
xor
dec
rol
enter
jne
clc
jg
fwait
push
mov
and
and
dec
mov
aam
lods
xchg
mov
sbb
cmps
popa
stos
neg
inc
shl
add
add
and
mov
out
add
loope
not
cmp
rcr
and
xor
int
sbb
out
pop
push
cmc
mov
movs
mov
xchg
sub
sahf
dec
dec
mov
inc
(bad)
and
xor
cmps
stos
pop
mov
retf
leave
inc
clc
dec
dec
cdq
and
aaa
fwait
pop
mov
inc
mov
lods
je
dec
out
stc
sub
mov
inc
out
and
dec
fld
or
outs
cmc
fmul
mov
movs
xchg
mov
inc
or
pop
popa
in
and
jb
(bad)
mov
aaa
cmp
fsubp
or
jbe
jno
aaa
xchg
aaa
sar
fimul
sbb
fisttp
xor
dec
shl
imul
adc
int
inc
rol
jg
lods
mov
(bad)
adc
jle
pushw
jmp
inc
mov
push
xor
cmps
ja
(bad)
xchg
les
ror
or
scas
movs
and
ss
mov
pmaxub
mov
mov
addr16
or
mov
sub
sbb
add
and
or
or
in
xchg
sbb
std
test
shl
xchg
mov
dec
push
daa
mov
fdiv
addr16
int
ja
pusha
stos
xchg
xchg
test
jg
and
es
sub
sub
cmc
push
mov
cdq
cli
arpl
mov
repnz
in
pop
stc
(bad)
sub
mov
ficomp
adc
je
mov
data16
cmp
loope
out
lds
aad
pop
cmp
xchg
xchg
jne
pop
xchg
push
jp
aad
add
dec
hlt
(bad)
pop
sahf
ins
daa
repnz
in
adc
ss
mov
mov
fsubr
fsubr
in
out
adc
add
adc
in
dec
fucomi
xor
dec
pop
fwait
adc
mov
inc
sbb
aas
cmps
mov
mov
aad
pop
adc
call
inc
mov
cmp
mov
push
icebp
mov
mov
xchg
shr
pop
pop
test
scas
cmps
cdq
loope
jo
push
sahf
mov
aad
call
mov
loop
jne
mov
pop
pop
(bad)
pop
dec
shr
movs
and
dec
mov
or
fs
imul
jp
fs
or
mov
cmc
imul
mov
in
inc
mov
cld
dec
or
pop
leave
gs
jbe
jmp
sub
rcr
dec
(bad)
in
cmps
sub
call
cmp
pop
dec
call
aam
clc
or
cmps
mov
inc
(bad)
xchg
outs
add
in
jg
mov
sbb
pop
ds
xchg
jg
dec
dec
pop
test
clc
popa
sub
je
les
xor
sbb
in
sub
sub
sbb
ror
gs
bound
and
(bad)
bswap
ins
add
das
in
jno
and
or
xor
sbb
movs
scas
adc
lods
and
test
ds
push
fs
ja
jle
fcos
adc
into
test
cld
call
in
fdiv
sbb
nop
cli
aaa
sbb
jge
(bad)
sar
out
push
rcr
popf
and
pop
inc
sub
xchg
cmp
sar
mov
add
scas
into
adc
fwait
int3
or
enter
popa
mov
mov
xchg
xor
cmp
sbb
cmc
pop
xchg
jg
add
fs
cli
std
clc
(bad)
push
or
xchg
xlat
pop
mov
xchg
push
data16
sbb
or
fldcw
aaa
movs
cmp
(bad)
int3
imul
retf
mov
fsub
movs
jg
mov
mov
inc
loopne
retf
pushf
fwait
daa
or
xor
push
pop
ror
(bad)
sbb
adc
mov
cmp
outs
and
cld
cld
rol
lods
pop
push
cmp
in
pop
xor
lods
loop
sub
adc
mov
fdiv
icebp
pusha
jno
mov
shl
punpcklbw
mov
mov
fs
div
xchg
sar
(bad)
ror
ds
daa
popa
inc
call
jbe
inc
pavgb
push
dec
push
icebp
popf
inc
ja
retf
in
stos
sti
xchg
mov
cld
fcom
or
retf
mov
mov
aas
jecxz
ror
sti
shl
scas
or
mov
pop
and
gs
mov
adc
mov
fs
punpcklbw
out
xchg
mov
jmp
clc
repz
push
xor
or
push
idiv
pop
add
xchg
jge
outs
xor
popa
pushf
and
enter
ds
lea
push
or
xchg
adc
scas
nop
int3
dec
repnz
loopne
mov
jnp
sbb
dec
dec
cmp
sbb
mov
xor
ja
push
pusha
mov
inc
cmp
(bad)
div
push
push
cmps
xchg
cld
(bad)
pop
fidivr
cmp
push
ror
or
or
push
pop
mov
sbb
call
sub
in
sbb
push
cmp
jecxz
fbld
adc
(bad)
mov
inc
or
outs
fst
sbb
cmp
outs
add
int3
add
dec
fnstenv
push
jbe
xchg
and
test
jns
or
adc
or
pop
jae
aas
arpl
retf
sbb
stos
dec
scas
cmp
xchg
mov
cmp
xchg
mov
dec
mov
pop
xchg
data16
pushf
pop
dec
jecxz
bswap
(bad)
daa
(bad)
into
xchg
popf
mov
jae
push
mov
adc
pop
dec
fs
or
xor
pushf
and
aaa
dec
leave
cs
stos
shl
bound
iret
mov
rcl
mov
fild
mov
popa
push
push
add
mov
call
pop
xchg
mov
inc
int3
mov
mov
sbb
pop
std
iret
push
aas
and
mov
mov
sbb
in
stc
mov
adc
sub
mov
stos
aaa
(bad)
(bad)
jmp
or
push
les
adc
inc
repz
cmp
or
loope
mov
adc
jne
stos
xor
ret
sbb
in
sbb
scas
retf
jg
in
mov
jge
btc
push
jmp
jle
test
sahf
pop
loopne
inc
pop
push
cmps
js
mov
popf
and
xor
aad
xor
in
inc
loopne
int3
stos
or
push
js
cmps
mov
sub
xchg
leave
fdivr
mov
lock
shr
loop
mov
dec
loopne
lods
sub
and
fisubr
movd
ins
sbb
std
repnz
ret
jbe
pop
cmp
out
jp
jmp
pushf
and
cmps
xor
xchg
sub
out
fwait
addr16
mov
mov
xor
or
daa
jnp
pop
dec
aam
cmp
adc
add
jg
jge
adc
and
addr16
and
fsub
lods
xchg
mov
jmp
adc
xor
xchg
sub
dec
cmp
stc
jl
mov
mov
push
in
sbb
mov
jle
sbb
xor
xor
dec
mov
daa
ret
push
scas
xchg
stos
push
in
xor
add
es
ins
sbb
mov
adc
movs
popf
xchg
xchg
inc
int3
and
mov
in
mov
pushf
sahf
je
mov
in
adc
sub
push
into
les
mov
pop
js
mov
nop
add
int
jp
sub
iret
shl
test
cmps
jecxz
mov
dec
mov
mov
jmp
cmp
xor
mov
arpl
jae
dec
mov
ja
add
ret
xor
and
mov
call
cmps
xor
ins
inc
es
out
add
or
xchg
arpl
mov
inc
shl
in
out
scas
adc
loop
icebp
xchg
test
cmp
xchg
mov
jecxz
shl
sbb
jns
xor
xchg
int
push
sbb
lea
call
fiadd
cld
rcl
pusha
mov
mov
push
xor
in
jp
int
push
jecxz
int
jmp
push
mov
repz
pop
call
inc
pusha
cli
aad
xchg
xor
ror
in
dec
jbe
jno
addr16
in
icebp
adc
ss
jns
ss
icebp
inc
(bad)
pop
jo
xchg
or
mov
fsubr
mov
xchg
fistp
pusha
out
cmc
push
lods
adc
leave
pop
sub
nop
mov
add
ja
mov
les
retf
enter
pop
sbb
and
retf
fistp
out
and
or
test
xor
ja
inc
lds
aas
cs
cmp
ja
inc
mov
inc
addr16
popa
dec
jl
imul
mov
sbb
mov
mov
imul
lahf
cmps
fnstsw
sub
int3
push
fwait
mov
mov
sub
lods
inc
pop
cld
and
push
cmps
push
inc
mov
mov
cdq
dec
inc
dec
sub
sub
adc
ins
aad
cmp
in
push
gs
adc
in
push
push
ror
adc
stos
imul
(bad)
shr
rcr
lds
fwait
aad
xchg
mov
repz
and
ja
stos
rol
xchg
sbb
or
pop
das
sbb
fidivr
sub
mov
call
adc
rol
mov
aaa
pop
jge
(bad)
jg
ror
hlt
jae
jbe
out
in
add
aad
daa
rcl
mov
aam
inc
jae
inc
packuswb
mov
sar
adc
add
jg
sbb
dec
jmp
arpl
out
mov
dec
je
(bad)
adc
inc
or
xchg
(bad)
sub
repz
jg
mov
sub
sub
paddsw
or
je
idiv
jbe
ja
sbb
jmp
rcl
xchg
dec
push
push
int3
fcmovnbe
retf
fwait
jno
sbb
clc
inc
mov
inc
loopne
lds
scas
pop
jno
call
shl
ficomp
cmp
jl
cs
data16
stos
int
cmps
jae
or
imul
call
inc
sbb
int
mov
stos
fcmovbe
or
icebp
cli
jge
ds
dec
add
mov
push
addr16
add
loope
or
add
out
xchg
aam
into
and
(bad)
dec
push
dec
add
xor
int3
add
fimul
in
in
dec
push
scas
movs
sub
cmp
ss
jl
shr
sbb
mov
xchg
push
daa
(bad)
lahf
xchg
jg
push
iret
ins
dec
setno
ins
stc
into
movs
dec
inc
lods
cmc
add
cli
loope
(bad)
retf
popa
lods
push
dec
jl
pop
stos
push
add
lea
xchg
mov
sub
pushf
pop
jbe
xor
gs
(bad)
(bad)
js
in
cmp
and
cdq
push
mov
test
mov
aas
fimul
outs
push
repz
pop
(bad)
or
ds
mov
hlt
ins
jle
jp
arpl
add
and
dec
aad
(bad)
push
push
popa
pop
cmp
jno
push
xchg
jns
or
jmp
xor
xchg
sbb
pmulhuw
rol
add
mov
pop
repnz
in
ins
sub
and
outs
test
add
xchg
out
in
je
inc
fwait
enter
xor
retf
cmp
mov
xor
aam
jo
sbb
in
ds
push
shl
dec
xor
fidivr
pop
push
fwait
inc
je
sub
add
xor
in
stc
pop
xor
inc
inc
and
stos
mov
jl
test
push
dec
pop
ss
outs
rcr
add
add
cs
iret
adc
xor
jp
test
push
xchg
in
sub
and
or
(bad)
aas
and
push
ret
pop
or
test
clc
jns
pop
or
dec
enter
cs
es
push
in
xchg
jmp
cmps
pop
pop
jbe
test
or
jmp
in
das
sub
cwde
mov
pop
in
mov
mov
jmp
and
xor
xchg
adc
cmp
pop
ins
adc
(bad)
and
mov
mov
sbb
mov
mov
mov
push
fidivr
ss
clc
add
xor
imul
mov
lods
xor
out
out
push
fcmove
jb
outs
sub
add
fcmovnu
pop
mov
dec
sbb
jg
arpl
xchg
jb
call
aaa
sahf
mov
hlt
leave
dec
popf
dec
das
adc
repnz
(bad)
ss
cmp
sub
push
das
and
jp
in
push
dec
and
rcr
dec
xchg
jns
adc
push
rcr
mov
xchg
sahf
mov
clc
cld
sub
cmp
add
ins
xor
mov
dec
out
aam
ins
xchg
inc
sub
sti
xlat
je
sahf
and
repz
pop
fldcw
add
gs
inc
mov
push
lods
retf
xor
adc
popa
jnp
ds
and
sahf
jg
aam
popa
xchg
popf
out
daa
scas
push
push
neg
sub
mov
mov
jno
xor
out
cdq
(bad)
es
mov
jp
ins
jge
push
jnp
mov
sub
je
rcr
repz
dec
xor
mov
es
je
push
mov
pop
repnz
adc
cli
mov
arpl
ins
push
in
sub
dec
jp
sub
lahf
mov
loop
repnz
dec
hlt
add
fs
js
sub
inc
jmp
sbb
(bad)
shl
mov
loopne
nop
jb
mov
ja
in
push
sub
cmp
sub
mov
cmp
call
fsub
(bad)
out
test
mov
popf
dec
test
mov
cmp
or
js
cmp
inc
xor
mov
pop
aaa
test
fisttp
fcmovnbe
sbb
leave
jmp
(bad)
inc
test
bound
lods
cmc
out
loope
cwde
jmp
cmps
push
jo
cmp
pop
pop
jge
faddp
sahf
xchg
or
out
adc
repnz
cli
fwait
mov
cld
lock
pop
mov
imul
mov
iret
outs
in
fldcw
xchg
sahf
retf
rcr
sahf
sbb
ror
mov
enter
(bad)
movs
out
je
fsub
icebp
or
(bad)
adc
pusha
sub
outs
shl
je
in
shr
shr
fild
jl
cld
mov
xor
cwde
loop
dec
sti
dec
sbb
jge
rcr
add
pop
in
loop
mov
push
gs
xchg
adc
or
mov
(bad)
inc
pop
inc
mov
and
fild
sar
rcl
sub
lahf
mov
gs
cdq
xchg
movs
add
inc
sbb
clc
xchg
jae
and
call
test
retf
mov
sbb
mov
adc
jp
jge
in
ins
dec
stos
fldenv
cmp
add
xchg
push
xchg
(bad)
fidivr
fstp
or
hlt
or
or
and
test
repnz
shr
fcomp
mov
cmp
xor
mov
out
inc
sbb
mov
adc
aas
sub
jg
dec
out
aad
sbb
sbb
or
(bad)
jbe
pusha
add
push
push
rcl
adc
jle
daa
sub
idiv
xchg
fistp
push
in
repnz
inc
ins
mov
add
bound
mov
bound
call
bound
adc
(bad)
ficom
loop
ins
bound
push
pop
fcmovnb
add
movs
add
push
sub
mov
pop
add
pop
addr16
dec
dec
jae
sbb
cwde
cli
jno
inc
in
pop
test
cs
(bad)
fs
je
cmp
aaa
mov
xchg
mov
xor
dec
push
ds
std
jecxz
scas
cmc
mov
sub
stc
repz
inc
lds
adc
fsub
in
adc
mov
and
cmp
int3
aad
jmp
xor
jl
jae
sbb
sbb
out
mov
jp
out
xor
xchg
sub
or
shl
pusha
dec
adc
mov
out
fwait
mov
cwde
stc
adc
repnz
pop
xchg
sahf
push
fdivr
retf
xor
fdivp
into
xor
pop
call
or
rcr
add
rcr
aam
ficom
(bad)
adc
les
ins
mov
into
retf
call
push
fadd
mov
mov
push
punpckldq
mov
push
imul
mov
in
and
sbb
hlt
pop
xor
sbb
lods
(bad)
push
xchg
imul
sbb
mov
jno
inc
pop
mov
pop
xlat
stos
outs
mov
or
shl
pop
jecxz
into
dec
call
inc
sar
mov
push
cmc
cwde
jo
mov
cmp
dec
push
mov
setne
push
cli
xchg
das
fs
mov
push
pop
dec
pusha
mov
ins
mov
xchg
xor
jns
in
mov
dec
dec
frstor
sti
(bad)
sbb
fbld
and
stos
adc
inc
fsub
mov
cmc
sub
rol
or
mov
aaa
out
ds
inc
sbb
adc
loope
adc
push
mov
int3
add
mov
xor
movs
int3
push
aam
cs
js
stos
mov
std
movs
sbb
fcom
pop
add
fisttp
mov
hlt
sub
cmps
out
jbe
aaa
je
lock
stos
dec
mov
xor
sbb
das
es
test
mov
jmp
add
gs
lods
adc
ffree
mov
in
cld
jmpw
add
call
pushf
xlat
sub
pop
inc
mov
sbb
adc
mov
inc
jle
mov
xor
int3
lea
je
mov
xchg
or
clc
cdq
in
jge
adc
push
sub
aas
mov
lahf
jb
retf
and
cmc
push
jae
pop
repnz
loopne
jg
mov
adc
addr16
outs
je
retf
push
outs
xor
cmp
mov
sub
cmp
push
shl
jl
mov
mov
fadd
out
jbe
repnz
inc
ror
sub
and
ss
nop
(bad)
aad
dec
sbb
popa
fiadd
shl
aad
cdq
xor
rcr
nop
jb
(bad)
or
add
adc
push
xchg
adc
pop
jnp
cmps
sahf
loopne
dec
mov
stc
aam
in
jb
push
cmp
lods
jns
inc
sar
push
leave
pinsrw
dec
test
stos
fbld
inc
lods
and
pop
jne
(bad)
fcomp
jl
mov
or
nop
sbb
js
out
inc
out
jle
dec
shl
dec
adc
inc
div
rcl
sub
mov
xchg
(bad)
fwait
add
je
in
sbb
mov
stos
jnp
cdq
jns
ja
push
outs
push
stos
aad
xchg
aam
jno
xchg
jne
jp
outs
mov
jo
dec
mov
dec
xchg
push
jae
bound
fstp
cmp
push
pop
jno
jnp
out
lds
int3
in
sbb
sahf
sub
cli
cmp
fld
ret
dec
add
les
fist
xchg
out
clts
sahf
xchg
add
adc
add
ds
imul
xor
pop
(bad)
and
in
sub
inc
mul
mov
pop
inc
inc
mov
mov
pop
mov
clc
mov
sar
jno
mov
jg
jne
fst
inc
and
mov
push
clc
sub
jp
fdivr
and
in
jnp
push
push
cdq
(bad)
mov
cwde
dec
mov
test
mov
inc
mov
xor
and
jg
add
popf
ret
sbb
jl
or
mov
xchg
xor
or
pop
clc
les
retf
sub
jo
in
or
xor
push
shl
(bad)
or
or
pop
fisubr
cmps
jns
push
xlat
out
xlat
fldln2
fnstsw
push
(bad)
sbb
cs
inc
clc
mov
and
fcomp
sbb
out
stos
jge
and
xchg
push
xchg
(bad)
(bad)
sub
in
add
xlat
mov
ficomp
xchg
idiv
adc
xor
cmp
adc
cs
sbb
les
pop
jbe
lea
shr
(bad)
push
aaa
gs
mov
out
pushf
sahf
adc
aam
or
add
pop
add
cmp
sbb
fmul
or
dec
mov
mov
imul
push
fmul
popf
inc
ss
pop
xlat
jecxz
cli
fwait
pop
(bad)
(bad)
(bad)
icebp
add
dec
add
(bad)
shl
xchg
repz
or
adc
int
pusha
inc
inc
mov
mov
or
jbe
mov
icebp
inc
or
sub
inc
clc
fsubrp
repnz
push
lock
adc
repnz
cs
adc
xchg
jp
cdq
das
mov
lahf
jp
rcl
adc
addr16
mov
or
aam
xlat
sub
stos
jmp
cmp
sub
jb
call
adc
int
or
call
mov
sub
xchg
adc
(bad)
mov
sub
das
jmp
ja
lds
add
mov
out
out
pop
dec
jo
or
hlt
jae
cmp
jno
stc
cmp
sbb
sahf
mov
and
ja
dec
imul
pusha
mov
mov
adc
stos
pop
paddd
movs
dec
jnp
pushw
adc
jae
jl
xchg
cmp
cli
cmp
cs
test
dec
(bad)
xchg
push
jb
ds
xchg
xor
sbb
mov
out
into
xor
push
jecxz
sbb
aam
mov
mov
sbb
cmp
fcomp
mov
xchg
xchg
xchg
scas
ror
jbe
push
mov
or
aam
push
rol
pop
sbb
neg
(bad)
bnd
and
mov
ror
aad
mov
mov
retf
jno
inc
sub
add
cmp
sahf
les
mov
repnz
ja
jns
push
sub
jmp
jae
ror
es
aad
jge
femms
leave
or
pop
int
cmp
inc
or
outs
mov
sub
push
mov
push
inc
test
or
xor
test
(bad)
cmp
xor
cmp
stc
lock
inc
gs
(bad)
vpsubq
jae
out
inc
js
dec
push
mov
add
les
sbb
dec
jno
and
in
std
mov
mov
xchg
(bad)
cmp
in
fld
xor
out
pop
ins
mov
push
ss
cmp
aaa
out
pop
dec
add
jg
jo
adc
aad
mov
sub
add
xchg
cmps
gs
ins
xor
cmp
jbe
mov
popf
aaa
int
push
dec
push
xchg
mov
adc
jp
nop
sub
and
fcom
cdq
cmp
pop
push
fidivr
mov
rol
mov
retf
aad
adc
add
addr16
adc
scas
jno
(bad)
or
mov
xor
fidivr
pop
adc
adc
xchg
je
ss
dec
in
jp
push
mov
sahf
sbb
in
stos
aas
daa
(bad)
std
scas
ja
cmp
cmps
or
clc
retf
push
fwait
jecxz
sub
or
icebp
ss
dec
push
lea
imul
xor
pop
es
sub
test
shr
inc
not
or
ja
cmp
xchg
push
inc
dec
and
aas
sbb
adc
cli
sbb
cmp
(bad)
jmp
add
fcom
int
jns
jmp
arpl
xchg
fsubr
inc
add
jns
or
popa
jae
xchg
xchg
cmp
cmp
mov
push
(bad)
mov
movs
sub
push
cmc
xor
sti
cmp
stos
clc
test
dec
jmp
repz
in
or
rcl
scas
aam
jno
sub
outs
fwait
lods
sti
mov
lea
push
div
dec
pop
jnp
test
rcl
push
pop
adc
and
stos
movs
(bad)
or
fsub
out
inc
add
test
pop
out
bound
(bad)
mov
stos
into
jnp
rol
lds
xor
imul
lock
jl
mov
test
xchg
cld
xchg
push
in
push
push
adc
and
(bad)
idiv
xor
das
xchg
mov
ret
pop
mov
test
xchg
pop
test
cmp
add
fwait
push
jl
(bad)
fld
sub
inc
mov
lds
(bad)
and
loop
in
jae
push
inc
into
fwait
loope
cmp
and
pop
callw
test
fwait
das
mov
push
into
in
sbb
and
mov
xchg
je
mov
jmp
mov
ret
dec
aaa
cmps
arpl
add
push
mov
pop
je
int
xor
add
mov
scas
mov
shr
cmp
stos
retf
xor
xchg
add
sbb
mov
or
mov
(bad)
mul
inc
cdq
push
test
jle
sbb
cdq
mov
mov
dec
cmps
ins
repz
or
addr16
icebp
xchg
cmp
jns
not
and
jno
cmp
pop
enter
out
lock
out
jp
mov
or
inc
push
mov
add
fimul
pop
je
jne
clc
xlat
push
ss
pop
and
scas
sub
xor
mov
add
fdivrp
and
xchg
mov
jmp
stos
pop
lahf
mov
popf
dec
lods
jp
and
ss
or
mov
xor
(bad)
lods
xor
xor
movs
sbb
int
push
mov
(bad)
mov
cmp
test
push
lds
cmp
sub
jae
sub
mov
and
cwde
pop
mov
out
sbb
fnstcw
cmp
inc
movs
pop
rol
scas
sbb
call
das
loope
xchg
je
std
jmp
sub
outs
xchg
nop
aad
stos
js
jae
or
add
je
fstp
mov
jne
dec
cdq
ret
sbb
leave
jl
retf
dec
into
and
xchg
stc
aas
push
ret
cmps
cli
arpl
cs
push
movs
repz
jge
dec
std
aaa
adc
fidiv
pop
mov
pop
iret
cmps
cmp
or
jp
scas
push
pop
sbb
(bad)
je
push
sbb
xchg
lahf
cmp
call
stc
and
sbb
and
stos
mov
cmp
mov
jbe
sbb
push
sbb
ins
movs
ret
mov
push
mov
jb
test
imul
inc
xor
push
add
cdq
mov
xor
xchg
jne
mov
ret
or
add
pushf
mov
jnp
sbb
shr
aad
sub
mov
push
cmp
pop
mul
adc
fistp
inc
enter
push
fwait
inc
jp
jl
addr16
jg
push
scas
push
das
pop
ja
leave
cmp
jnp
js
cmp
lahf
pushf
pop
jg
and
mov
ret
inc
imul
pop
push
sbb
fisubr
int3
das
jae
jle
mov
pop
xchg
adc
jns
jmp
inc
push
and
pop
pop
sbb
xor
imul
loope
dec
xchg
mov
hlt
jnp
in
cmp
or
adc
push
mov
outs
xchg
in
inc
test
mov
jl
scas
sbb
addr16
mov
fxch
imul
inc
xchg
cmps
icebp
ret
pop
repz
fmul
imul
add
xor
rol
mov
cmp
mov
push
test
leave
cdq
daa
fnop
inc
jge
jbe
sub
xlat
sbb
std
fyl2xp1
dec
or
push
fidivr
mov
mov
jne
pop
mov
cdq
movs
repz
jno
jae
jns
mov
add
in
sub
pop
ins
inc
leave
or
daa
int
push
(bad)
jb
mov
sti
pop
inc
mov
pushf
pop
scas
ficom
add
ss
mov
out
or
out
push
xchg
mov
xchg
dec
enter
jmp
cmps
cdq
out
je
nop
jp
xor
jo
iret
and
inc
jae
lea
mov
fwait
scas
pop
or
outs
jge
adc
loop
test
mov
xor
adc
dec
sbb
pop
xchg
out
or
das
repz
outs
(bad)
mov
dec
mov
std
(bad)
cmp
mov
cs
js
pop
mov
push
iret
(bad)
push
repnz
dec
or
data16
ficom
jnp
shr
mov
mov
jo
out
mov
cmp
cdq
jle
lods
arpl
repz
xor
mov
mov
shl
jo
push
lods
cmp
lock
mov
cli
in
dec
aaa
stc
mov
call
scas
ret
sub
or
and
scas
dec
out
mov
sti
out
(bad)
cvtps2pd
fistp
aaa
jecxz
(bad)
dec
mov
ja
jb
cmp
mov
arpl
fiadd
jbe
les
pop
and
ja
jge
fcom
mov
call
and
lock
cmp
xor
and
sub
jbe
loopne
ds
push
adc
xor
das
popf
xor
add
ret
int3
and
xchg
jmp
push
jnp
or
push
pop
inc
fild
and
and
fmul
lods
fcomp
jle
adc
mov
add
retf
cmps
xchg
dec
(bad)
das
xor
jmp
outs
fldcw
sbb
addr16
adc
outs
jno
stos
aas
mov
int3
mov
mov
push
or
mov
cli
jne
clc
(bad)
fidivr
rcr
xor
dec
push
pop
popf
push
xor
xchg
int
out
hlt
sbb
or
mov
pop
popa
aas
push
cmp
(bad)
sub
out
scas
mov
or
mov
cwde
neg
mov
scas
push
cmp
mov
push
call
jecxz
push
call
pusha
xchg
mov
int3
sub
mov
cdq
rcr
js
jmp
lahf
sub
ret
loopne
push
jmp
je
and
es
pop
(bad)
in
popf
xchg
movs
scas
or
add
ret
dec
add
dec
into
imul
sbb
outs
dec
gs
sbb
in
enter
scas
sub
fwait
retf
and
pop
cli
(bad)
shl
add
jne
adc
mov
gs
pop
push
cs
inc
add
push
js
in
div
enter
pushf
fwait
push
push
add
test
in
icebp
mov
cmps
inc
sbb
test
and
inc
imul
sbb
inc
mov
jmp
in
(bad)
mov
les
push
xor
je
das
jo
shl
push
lea
loop
bound
icebp
std
or
retf
in
mov
mov
mov
imul
cwde
xchg
fs
cwde
push
sahf
cmp
cmp
sub
sar
cwde
retf
cmp
mov
mov
mov
les
and
out
hlt
mov
or
std
stos
inc
outs
clc
je
mov
mov
mov
dec
inc
inc
pop
js
xchg
gs
inc
xchg
cmps
xchg
lock
ins
addr16
cmps
xchg
mov
adc
loope
add
inc
sbb
mov
cmp
idiv
mov
iret
popa
inc
sbb
ret
bound
mov
mov
nop
and
mov
in
xchg
dec
dec
mov
mov
and
(bad)
in
xchg
inc
fmul
add
inc
jecxz
pop
or
mov
pop
xchg
test
movs
push
(bad)
or
xor
inc
mov
or
int
fnstsw
push
lock
pmuludq
lea
mov
lods
loope
aaa
sar
push
pop
movs
cdq
mov
jno
pusha
sbb
stc
cmp
xor
cmc
fild
xchg
lds
ret
pop
cdq
es
mov
or
out
dec
in
xchg
push
arpl
xchg
sahf
xchg
mov
mov
jg
and
push
gs
scas
aad
ins
pop
cmps
lock
daa
sbb
into
mov
mov
add
sti
mov
scas
bound
aaa
push
dec
xor
aaa
call
jge
xor
pop
pop
dec
xchg
(bad)
jmp
jne
inc
mov
xor
mov
rcl
push
cli
aad
cmc
mov
test
das
ins
add
mov
icebp
inc
mov
cmp
adc
scas
daa
lods
dec
jle
pushf
int
mov
clc
dec
mov
xchg
mov
test
xor
jb
dec
cmc
xchg
es
mov
pop
dec
hlt
test
aas
movs
cmps
scas
and
sbb
sbb
mov
out
sbb
and
test
int
imul
inc
push
mov
xlat
mov
pushf
leave
push
sbb
push
sar
mov
ins
std
inc
retf
pop
ja
mov
dec
fadd
lock
sbb
fidiv
icebp
data16
mov
stc
popa
es
cmps
gs
inc
mov
add
adc
mov
ds
clc
ficom
lock
inc
aaa
ret
aam
xor
mov
dec
(bad)
or
mov
jmp
xor
dec
cmps
xor
dec
out
push
mov
jmp
je
sbb
outs
push
push
add
inc
xchg
pop
and
retf
std
fidivr
adc
in
pop
mov
pop
dec
das
dec
js
cmp
mov
xor
inc
leave
inc
push
test
adc
ret
fcomi
nop
inc
push
(bad)
outs
aas
loop
(bad)
sti
dec
fld
xchg
push
fst
mov
in
dec
retf
add
xchg
and
jno
add
imul
jecxz
inc
add
icebp
push
push
xchg
xlat
fwait
in
xor
fistp
push
and
jge
fwait
ss
mov
test
jbe
leave
cld
inc
inc
aam
hlt
add
add
inc
push
stos
xor
jb
jecxz
sub
jmp
sahf
out
xor
mov
fdiv
adc
hlt
pop
mov
dec
or
xchg
push
jmp
jns
retf
xlat
lock
sbb
jns
ds
je
mov
or
mov
jle
call
(bad)
imul
jmp
push
sbb
std
inc
add
and
mov
pop
in
cmp
inc
leave
or
out
add
pop
loopne
and
mov
loope
(bad)
imul
mov
ror
jo
inc
lds
fcomp
cmp
push
inc
and
xlat
mov
ins
dec
test
sbb
leave
loop
sbb
fistp
inc
mov
in
dec
fldl2e
inc
or
sar
je
pop
jnp
mov
mov
stc
movs
shl
enter
jg
call
inc
inc
jmp
xchg
add
das
cmp
pop
dec
test
add
pop
mov
mov
cmp
cmps
add
add
in
fadd
and
and
and
dec
xchg
or
jp
pop
leave
retf
rol
adc
sub
pusha
in
xor
or
arpl
fld
lods
mov
sti
xchg
lods
or
mov
pushf
push
cdq
shl
cmps
test
adc
sbb
cmp
das
and
sbb
mov
das
xchg
jp
lea
jp
outs
or
popf
pop
pop
mov
dec
mov
adc
push
fsubr
push
adc
dec
ret
int
aas
rol
cs
push
(bad)
addr16
pusha
sbb
inc
iret
xchg
xchg
sub
fbstp
sub
cmc
mov
add
xchg
push
add
dec
xor
sbb
xchg
xchg
retf
imul
and
out
adc
and
outs
adc
or
and
xchg
xchg
retf
into
jbe
fisub
fst
aas
scas
inc
adc
jle
sub
xor
and
and
data16
sub
sub
in
push
aad
addr16
mov
in
shr
mov
les
jle
hlt
pop
jmp
or
dec
aam
int
ficomp
es
fimul
xchg
adc
aam
fimul
adc
aad
jb
xchg
xchg
cmp
(bad)
lods
cmp
je
xor
lods
add
aad
and
xor
mov
lods
test
pop
push
pop
ss
(bad)
mov
ror
jl
push
test
mov
sub
mov
inc
call
std
cmovne
int3
inc
fs
scas
mov
dec
cmc
inc
imul
mov
jae
cmp
pop
outs
push
jae
mov
fcomp
neg
add
add
pop
mov
int3
push
sbb
stos
cmc
js
adc
test
mov
add
pop
sar
xchg
and
sub
retf
fidivr
repz
dec
jmp
xchg
push
stc
jl
and
movs
mov
jb
sahf
push
(bad)
xor
and
xchg
outs
cmp
push
fcomp
ret
cmp
xor
repnz
addr16
dec
stos
add
test
outs
sbb
jb
sbb
ss
pand
bnd
inc
pop
repz
fucomi
daa
add
clc
push
push
imul
fild
push
(bad)
out
sar
ret
cmc
shl
jno
(bad)
jbe
in
cmps
xor
add
pop
mov
out
lods
cmp
pusha
cld
mov
pop
gs
repnz
stos
jmp
cmps
imul
push
jmp
or
mov
mov
pop
pop
mov
mov
sbb
popa
push
mov
inc
fucomi
pop
xchg
xchg
mov
sub
mov
adc
popa
inc
dec
pop
daa
outs
out
adc
cmc
push
sub
xor
xchg
and
inc
hlt
movs
fwait
mov
fst
mov
xor
test
ins
retf
fstp
cwde
jp
jg
dec
jp
jecxz
mov
add
or
or
or
fisttp
sti
push
inc
mov
xor
mov
fwait
scas
mov
imul
push
(bad)
clc
push
(bad)
in
push
adc
loope
push
xchg
mov
jnp
sti
je
stc
fs
jle
sbb
and
aaa
inc
xlat
xchg
mov
nop
lahf
loopne
jns
(bad)
mov
ja
push
xchg
adc
(bad)
pop
ret
pop
icebp
call
loopne
mov
(bad)
push
mov
in
adc
adc
out
xchg
mov
cmps
into
or
das
jne
lods
push
sub
xor
jle
test
sub
jmp
mov
sbb
pop
xor
jo
mov
sub
dec
stc
cmp
int
mov
stc
(bad)
xor
mov
sub
jmp
dec
mov
and
jg
mov
test
xchg
pusha
push
(bad)
sub
inc
adc
cli
xor
scas
inc
add
or
ror
push
pop
or
lock
fild
mov
gs
movs
jmp
sbb
ror
pop
call
and
out
(bad)
xor
xor
xor
mov
mov
or
jl
mov
fnstenv
int
mov
inc
push
fisttp
div
inc
ins
jnp
je
sti
pop
jecxz
jb
test
xor
cmp
mov
out
mov
ins
mov
add
ror
jne
pop
stos
and
pusha
popa
pop
or
call
sub
repnz
daa
fdiv
dec
cdq
jo
icebp
rcl
shr
inc
(bad)
idiv
arpl
dec
repz
adc
mov
daa
sbb
out
lds
fiadd
sbb
xchg
mov
ret
and
xlat
mov
jmp
sbb
add
aad
repnz
sub
xor
cmps
lahf
retf
stos
adc
push
and
pop
mov
mov
fcomip
retf
mov
test
sub
sub
cli
in
pop
int3
jge
jl
in
jp
clc
jecxz
push
popa
mov
and
sub
cdq
nop
nop
push
retf
push
and
inc
mov
std
les
stos
imul
mov
shl
sub
jle
cmp
lock
jg
xchg
clc
dec
mov
les
xor
push
aam
in
cmc
fnstcw
cmps
aad
mov
mov
ins
adc
sar
mov
dec
aad
fimul
cmp
mov
arpl
dec
xor
mov
mov
push
ja
push
js
mov
std
or
adc
test
mov
push
fstp
inc
inc
(bad)
std
ret
aam
ins
outs
or
xchg
mov
sub
cmp
in
stos
jnp
ficom
or
call
(bad)
xchg
sub
inc
xchg
add
add
push
stos
inc
sub
mov
gs
sub
cdq
mov
fadd
adc
xchg
mov
inc
or
mov
sub
cmp
and
imul
lds
xchg
cdq
cmp
xchg
adc
pop
std
(bad)
sti
inc
imul
(bad)
fnstenv
sbb
outs
and
push
ss
mov
and
arpl
xchg
jb
sub
jns
inc
fmul
inc
inc
fstp
adc
mov
test
clc
inc
dec
xchg
sti
out
nop
sahf
or
setge
ret
jo
test
hlt
aaa
popf
out
inc
jo
xchg
mov
dec
and
into
sub
stos
int
cld
into
xchg
mov
ins
shr
les
dec
jmp
xchg
sub
jae
jecxz
cmp
mov
lods
into
pusha
and
shl
inc
sbb
cmc
and
mov
shr
lea
(bad)
xchg
push
in
xor
in
sbb
call
push
js
jb
mov
xchg
jge
je
in
jmp
std
shl
lods
inc
in
stos
mov
xchg
jae
pop
test
cmp
add
mov
ror
mov
int3
jmp
inc
and
gs
and
jle
scas
neg
jbe
or
call
inc
sbb
push
mov
das
mov
dec
adc
fwait
or
stos
dec
in
and
(bad)
fnsetpm(287
push
popf
pop
retf
inc
add
lahf
adc
dec
out
jmp
mov
push
out
jne
ret
vpcomd
mov
cmp
or
mov
imul
gs
icebp
push
loop
push
sbb
das
imul
pop
out
jmp
push
sub
popf
mov
jmp
fs
std
mov
cmp
repnz
push
mov
cdq
push
mov
out
(bad)
(bad)
fsubrp
mov
jg
scas
out
mov
and
sbb
push
fcmovnbe
mov
test
in
test
jno
xlat
add
sub
or
mov
retf
aam
cmps
(bad)
pop
adc
jbe
cmp
jnp
mov
test
push
xor
sbb
add
sbb
jge
sbb
dec
loope
jb
mov
sub
sbb
popa
icebp
jge
test
adc
add
sub
aam
mov
dec
cmp
mov
sub
and
cmp
shr
push
jae
adc
pop
test
push
push
inc
lahf
pop
push
leave
push
mov
scas
jg
cmc
dec
mov
mov
fcom
int
push
mov
sbb
(bad)
pop
fiadd
push
(bad)
arpl
sbb
sub
mov
sbb
sub
scas
sub
mov
fcomp
(bad)
addr16
sbb
icebp
pop
movs
mov
xchg
cmc
call
jg
scas
repz
loopne
push
cld
into
loop
cmp
shr
sub
mov
rcl
rcl
repnz
sbb
stc
into
sub
xor
add
sub
xor
or
nop
retf
sub
jmp
or
mov
add
aaa
cmp
test
outs
pushf
pop
lahf
xchg
mov
push
out
sbb
pop
(bad)
movs
fs
jmp
mov
lods
add
jno
ret
jge
pop
hlt
add
mov
push
lea
clc
dec
mov
shld
lock
aas
sbb
dec
inc
mov
shl
jne
aad
sub
sub
pop
js
pop
ja
fcom
inc
xchg
ds
inc
lds
ror
sbb
retf
das
or
fmul
jg
and
push
cmps
in
and
fxam
popa
or
dec
push
jbe
push
xor
dec
addr16
mov
adc
stos
inc
or
xchg
fcom
retf
pop
jnp
push
mov
and
popa
call
or
lock
stc
out
das
pop
pop
lods
push
or
or
pop
iret
sti
sub
and
outs
sub
out
pusha
(bad)
das
out
jns
add
sbb
xchg
or
pop
stos
mov
inc
cmp
push
out
sub
sub
jg
xor
sahf
hlt
aaa
cmp
push
out
mov
pop
data16
into
or
and
xor
sbb
mov
xor
les
gs
push
mov
arpl
or
cld
daa
push
mov
dec
fs
imul
outs
fsubr
push
push
or
xchg
sub
push
leave
lock
mov
sar
or
jge
xor
das
imul
jo
outs
cmp
mov
jge
mov
shl
ss
inc
or
cld
fwait
mov
leave
dec
fnstcw
leave
xor
xchg
jl
lea
push
mov
out
jge
jl
push
inc
sbb
push
adc
xor
faddp
shl
outs
inc
push
adc
dec
pop
(bad)
pop
fsubr
ja
out
add
cld
mov
mov
pop
div
push
push
scas
cwde
adc
movs
or
leave
enter
test
fdivr
push
sbb
lock
out
out
iret
jbe
repz
gs
push
ss
sahf
std
cmp
mov
sub
sbb
cli
loopne
cmp
xchg
and
mov
xchg
xchg
adc
loope
aas
cmp
(bad)
push
mov
xor
cdq
cmp
out
xor
sbb
test
mov
lods
les
push
fiadd
xchg
sbb
sbb
pop
fmul
out
call
ss
setb
adc
mov
adc
test
and
in
pop
je
xchg
dec
sub
mov
scas
xor
push
cmp
std
adc
scas
push
mov
out
inc
xchg
xchg
outs
sub
data16
ror
or
dec
dec
cdq
jmp
dec
movs
inc
stc
ret
call
movs
xor
sti
push
add
push
mov
xor
popf
adc
aas
loopne
imul
jmp
push
mov
into
jns
scas
scas
push
xchg
adc
shl
(bad)
out
nop
fdivr
cmp
mov
fistp
cmc
stos
in
shl
push
push
jne
cmp
dec
push
gs
test
cdq
sub
jp
outs
inc
xor
out
sub
push
mov
jbe
cs
ja
shl
movs
sahf
mov
sub
inc
ror
pusha
pop
loope
push
rol
xor
sahf
xor
mov
lea
mov
sbb
add
sub
adc
push
test
pop
fdivr
out
repz
cmps
or
jmp
stos
jb
retf
xchg
add
in
mov
aas
or
cmc
stos
dec
call
mov
add
les
mov
pushf
or
loopne
popa
push
fcomip
clc
clc
pop
adc
add
adc
(bad)
jo
das
pop
je
fidiv
stc
xor
xchg
push
inc
mov
and
(bad)
in
mov
sti
sub
nop
xor
or
sbb
cmp
cmp
fcmovnu
cmps
retf
inc
xor
sub
fdivr
sub
test
mov
mov
cmps
pop
sbb
(bad)
test
call
mov
in
mov
bound
out
arpl
into
ficomp
sub
lea
mov
pop
ffreep
jp
sub
jecxz
call
inc
jno
or
add
dec
sub
scas
mov
sub
mul
test
adc
jecxz
cld
popf
aad
repz
rcr
leave
or
jp
les
cmp
punpcklbw
xchg
test
cmps
mov
xchg
fidiv
xor
xor
movs
retf
add
loop
call
push
and
movzx
add
fsub
sbb
xchg
xor
mov
cmps
cmps
sub
in
or
scas
and
push
mov
clc
and
sbb
pop
lahf
lock
xor
inc
cs
xchg
push
cmp
and
jne
cmp
xor
pusha
mov
lods
xchg
lods
cwde
push
push
add
or
push
test
dec
sub
addr16
mov
jmp
add
cwde
jmp
xlat
push
imul
mov
mul
iret
and
push
and
cmp
ror
(bad)
and
cld
or
adc
fild
les
mov
push
or
imul
mov
sbb
test
push
lods
test
sbb
stos
es
xor
sub
mov
push
pop
cmc
aad
mov
cwde
mov
call
es
pop
jnp
inc
mov
inc
pop
shl
test
dec
cmp
dec
jns
inc
fwait
push
push
push
rcr
adc
mov
adc
ret
ror
or
add
or
movs
add
jo
pop
outs
mov
mov
cmp
outs
lods
push
inc
movs
out
imul
mov
movs
inc
and
mov
(bad)
data16
xchg
mov
push
jnp
dec
sbb
out
loop
adc
add
adc
cmps
jno
in
inc
and
fs
adc
mov
mov
sbb
aas
inc
mov
or
jl
xchg
ret
or
scas
mov
movs
mov
out
int
add
popa
(bad)
cmp
pop
fmul
adc
fisub
inc
push
das
out
daa
mov
int
sbb
je
sub
loope
mov
sub
inc
dec
popf
inc
jp
mov
loop
sahf
pop
mov
and
test
add
test
add
jge
xchg
mov
and
fisttp
scas
cmp
test
mov
jge
and
push
mov
js
movs
in
fist
jle
add
shl
popf
jno
xlat
into
xchg
mov
jle
pushf
cmp
das
jecxz
js
out
mov
repnz
adc
scas
add
jmp
fldcw
mov
push
adc
or
mov
push
iret
sbb
cwde
push
or
gs
frstor
push
loope
dec
icebp
loop
scas
sbb
(bad)
mov
aam
stc
sti
cmp
cs
fs
ficomp
mov
mov
pop
mov
or
in
movs
std
jo
jno
add
ds
add
push
sub
mov
sbb
xchg
(bad)
dec
fnstcw
clc
sub
js
mov
xor
repz
push
mov
pop
repnz
loopne
add
popa
cmp
and
adc
sbb
cli
inc
mov
or
out
cdq
(bad)
xor
fcom
mov
dec
mov
or
lahf
sub
dec
sub
pop
shl
jb
fmul
mov
xor
cli
(bad)
adc
jno
cmp
out
nop
adc
pop
test
in
jp
clc
cmp
cmp
(bad)
jno
and
sub
out
popf
xor
test
sub
test
int
pop
cwde
imul
pop
es
dec
pushf
jbe
sub
add
mov
sub
pop
mov
or
jp
push
ins
sbb
scas
mov
loope
jno
mov
push
and
jl
mov
shr
pop
fisub
jnp
cmp
sub
adc
mov
push
push
arpl
test
mov
or
mov
add
or
out
mov
dec
jp
cmp
jne
inc
xchg
and
iret
push
call
icebp
loope
lahf
or
aad
mov
daa
scas
fdivr
push
stos
xchg
dec
sub
push
xchg
in
shl
xchg
xchg
cmps
xlat
aaa
push
pop
adc
jmp
cmp
sub
jno
or
mov
jne
addr16
pop
cwde
rcl
addr16
call
sti
sbb
sbb
out
or
push
les
add
mov
jmp
ins
loop
push
jns
dec
pop
test
jle
fadd
and
je
imul
jge
cli
aas
shl
mov
jo
retf
loope
in
repnz
dec
and
push
sbb
es
xchg
sub
test
adc
int3
ret
scas
(bad)
leave
cmp
add
add
xor
ror
push
mov
push
popa
data16
push
dec
jnp
(bad)
fimul
cli
ja
dec
js
mov
xor
(bad)
gs
cdq
push
popa
sahf
retf
into
hlt
fcmovnu
push
pop
add
sbb
aad
(bad)
mov
stos
cmp
add
xchg
shl
push
repnz
jne
test
mov
and
rcl
neg
mov
push
jb
mov
stc
or
cmp
sub
xchg
xchg
cmp
push
or
setbe
xor
push
mov
movs
or
inc
sbb
sub
sub
jno
shl
test
sub
ja
mov
pop
xchg
(bad)
and
and
or
sbb
inc
xlat
cld
pop
scas
les
push
gs
push
mov
push
pop
and
fisub
ficomp
mov
scas
pop
sar
or
int
mov
ror
jno
adc
hlt
pop
ret
sbb
loope
jmp
jle
cmp
movs
mov
mov
mov
sbb
hlt
jae
test
jbe
add
xor
pop
out
add
inc
xchg
dec
sub
add
sbb
test
push
pushf
push
xchg
sar
add
ror
inc
in
and
inc
xchg
loope
aaa
push
movs
in
cld
adc
cld
dec
push
jp
and
ret
dec
cmp
sbb
sbb
pop
gs
outs
enter
mov
cmps
inc
adc
and
sub
or
out
and
cwde
stc
inc
xchg
dec
mov
ror
or
pop
js
pop
imul
nop
mov
dec
mov
pop
push
jmp
nop
sbb
pop
sbb
jp
imul
bound
stos
dec
inc
and
inc
xchg
pop
mov
outs
and
mov
clc
pop
mov
sbb
pop
movs
jp
pop
pop
and
scas
jecxz
push
fxam
in
cld
aas
test
sbb
pop
push
es
jge
cmp
dec
push
scas
push
jnp
dec
into
adc
and
xchg
loopne
les
mov
or
or
xor
mov
sub
popf
sbb
mov
jl
test
and
mov
stos
sbb
xchg
adc
add
xor
arpl
pop
push
push
call
gs
iret
in
xor
push
dec
jbe
push
mov
cmp
jmp
outs
jb
mov
test
inc
fmul
inc
loopne
and
mov
jl
leave
icebp
jg
jne
pop
mov
pop
lods
rcr
pushf
mov
xchg
add
cwde
stos
lods
dec
dec
or
mov
mov
mov
mov
repnz
stc
ins
movs
mov
adc
xchg
dec
clc
loope
cmps
pop
test
lods
push
mov
pushf
cwde
sub
jnp
jmp
dec
sub
ud1
std
ins
sbb
xchg
pop
gs
shl
add
dec
cmc
mov
xlat
scas
dec
sbb
clc
inc
adc
imul
out
sti
pusha
sub
ds
xor
hlt
add
xlat
adc
push
dec
retf
ja
mov
(bad)
push
popa
mov
popf
test
mov
das
and
xchg
sub
or
inc
jbe
or
data16
sbb
sub
fcmovnu
or
jae
(bad)
mov
frstor
mov
dec
cmp
or
sub
dec
gs
pmovmskb
xor
aam
or
or
fcomp
xlat
or
retf
aaa
neg
sbb
lea
fs
sahf
push
popa
aad
add
out
inc
pop
inc
loope
ins
ror
cmp
inc
adc
in
popf
retf
mov
mov
mov
shr
pop
int
and
pop
ficom
mov
call
add
aas
std
jae
pop
in
dec
adc
or
cmps
push
xchg
(bad)
mov
(bad)
mov
adc
jns
add
stc
inc
inc
cmp
cmp
push
das
push
into
jns
es
(bad)
add
lods
popf
jecxz
outs
leave
lods
rcr
or
aad
xor
pop
(bad)
and
jb
lock
add
popa
jmp
adc
lods
nop
scas
les
xchg
rcr
xor
es
mov
jg
(bad)
jle
or
xchg
das
mov
adc
dec
imul
cdq
dec
sbb
mov
in
xor
pop
stos
or
fbstp
add
out
dec
shl
add
dec
inc
hlt
xor
jo
push
stos
pop
test
(bad)
mov
inc
fdivr
les
jl
mov
push
lods
test
aas
push
pop
(bad)
xor
xor
xchg
jne
pop
sbb
inc
and
pop
inc
std
pop
ss
les
sbb
sbb
and
test
jnp
mov
in
mov
cdq
sub
ins
mov
mov
jae
mov
addr16
imul
and
in
inc
add
fmul
test
and
push
lea
dec
ds
xor
jecxz
ret
call
(bad)
xchg
rcl
jg
ja
push
test
or
ret
das
clc
test
jns
or
xchg
fidivr
cmps
in
jmp
out
cs
icebp
inc
mov
ja
ins
adc
mov
jnp
jno
aas
sub
out
fisub
push
jo
dec
ds
push
retf
pop
inc
dec
push
mov
jae
sub
jnp
int3
cdq
sbb
pcmpeqw
aas
xchg
inc
pusha
cs
jp
adc
jbe
movs
fisubr
pop
pop
mov
jmp
add
les
inc
daa
xor
xor
lods
fadd
repnz
push
leave
popa
mov
in
jns
(bad)
hlt
test
std
ror
icebp
or
pop
(bad)
(bad)
jecxz
jp
lahf
jp
outs
js
jbe
push
sbb
push
or
sbb
loopne
or
pop
mov
jne
xchg
test
xor
out
mov
or
mov
(bad)
out
mov
nop
jp
jmp
ss
xchg
fwait
cmps
rcl
iret
dec
mov
call
sbb
xchg
xor
popf
dec
adc
fist
sbb
jno
pop
addr16
cwde
push
xchg
sub
dec
test
or
xchg
int3
and
xchg
stos
sbb
and
xchg
pop
inc
push
mov
je
dec
pop
vmovhps
movs
xchg
sub
xor
pcmpgtw
(bad)
and
cs
jmp
dec
adc
dec
cmp
xor
sbb
cdq
mov
jle
sbb
ja
add
xor
ss
aaa
int3
aam
je
cmp
cmp
(bad)
hlt
jle
sbb
fist
mov
out
dec
int3
retf
inc
(bad)
lock
in
gs
repnz
ds
push
jnp
sbb
das
or
mov
sbb
mov
shl
add
dec
and
mov
(bad)
cdq
pusha
loop
daa
mov
mov
pusha
rcr
pop
pop
mov
scas
adc
xor
(bad)
mov
dec
stos
ss
pop
not
and
mov
pop
xor
mov
outs
mov
out
leave
mov
int3
loope
and
xor
xchg
(bad)
mov
mov
pop
mov
inc
lea
cwde
push
xchg
(bad)
jle
jmp
repnz
xor
push
cmc
hlt
add
cmc
adc
xor
retf
push
cld
jae
enter
mov
test
test
mov
jns
iret
jle
and
js
lock
lock
sbb
dec
test
xor
stos
push
in
add
ins
sbb
aaa
stos
or
sti
int
xchg
int3
cs
mov
mov
jno
pop
out
daa
call
aaa
or
pop
xchg
stos
xor
loopne
clc
retf
xchg
inc
loope
(bad)
adc
in
stc
dec
repnz
das
(bad)
pop
popa
iret
sbb
and
dec
mov
adc
mov
test
data16
xchg
sbb
lods
adc
ficom
arpl
das
pop
adc
int
pop
sti
mov
sbb
hlt
adc
call
mov
and
jnp
or
js
push
mov
aam
ds
ins
jnp
push
sub
imul
fwait
pop
das
dec
pop
(bad)
std
fdiv
adc
sbb
jb
sub
stos
jmp
mov
sbb
add
add
dec
jns
fadd
cmp
int
repnz
cmps
add
xchg
jg
(bad)
gs
pop
lods
cmps
and
xor
cmp
loop
outs
ret
sti
push
xlat
sub
scas
lock
push
mov
jbe
fbstp
xchg
pop
mov
fnstenv
xor
aad
sub
fnstenv
(bad)
loop
push
aas
jge
mov
mov
cmc
mov
js
mov
sub
jmp
iret
add
out
mov
jae
jecxz
and
int3
sbb
push
adc
arpl
or
add
mov
dec
gs
push
movs
sti
pop
aam
xchg
or
mov
mov
mul
dec
cmps
add
not
popa
adc
fiadd
aas
mov
xor
int3
xchg
cmp
xor
jnp
fsub
std
sar
sahf
cmps
pusha
loopne
imul
fsub
cmps
mov
xor
sbb
add
pop
push
icebp
push
mov
sub
push
mov
dec
mov
retf
out
sbb
push
test
push
and
(bad)
pop
and
mov
into
ins
sbb
sbb
in
popf
pop
jge
dec
outs
add
cmp
cmp
ds
in
mov
mov
sub
mov
test
jae
sbb
or
adc
inc
imul
pop
xchg
sbb
push
fbld
xor
push
loop
sub
aad
add
ret
xchg
(bad)
sti
popa
cwde
push
adc
sahf
mov
inc
bound
int3
clc
jmp
ret
xor
(bad)
stos
shl
sub
sbb
dec
dec
xchg
ja
call
sub
das
aam
cmp
mov
sbb
aam
cli
ds
pop
cmp
mov
or
mov
mov
lock
and
fisttp
repz
mov
lods
mov
nop
loopne
adc
mov
(bad)
test
cs
imul
mov
rcr
mov
retf
pop
rcr
lock
push
mov
adc
sbb
imul
out
movs
sbb
jge
cmps
ins
hlt
(bad)
mov
or
cmp
sub
pop
inc
imul
sbb
repnz
in
or
jmp
xchg
scas
loop
inc
and
call
out
sar
lock
cmc
jl
xor
pushf
popa
lods
xor
data16
(bad)
dec
inc
or
pop
stc
mov
es
out
cmc
inc
outs
cmc
sub
mov
sar
fnstcw
adc
jl
leave
inc
hlt
ss
or
cmp
and
pop
jns
lea
adc
mov
jo
into
cs
pop
pop
push
ss
icebp
(bad)
xchg
mov
push
scas
retf
pop
mov
mov
xchg
or
xor
jbe
or
sbb
or
pop
fisubr
jb
push
inc
mov
call
adc
adc
push
inc
ror
scas
rol
inc
or
das
xchg
pop
cmp
fild
outs
xlat
jg
aaa
xor
outs
seto
imul
repnz
jns
data16
mov
lods
push
fld
mov
stos
icebp
imul
ins
lock
push
cmc
fcom
adc
into
inc
in
cmp
popf
sahf
fs
jmp
dec
nop
stc
xchg
add
push
adc
or
sbb
lea
and
dec
xor
ins
sar
aad
xchg
scas
xchg
mov
xchg
jae
out
loopne
arpl
push
xor
sub
push
sbb
inc
cmp
pushf
push
mov
in
lds
push
ret
inc
stc
jns
ret
scas
iret
leave
ds
jecxz
mov
test
iret
jae
ficom
je
dec
in
push
lahf
xor
loope
pop
dec
cmp
xchg
std
jno
rol
mov
jne
cmp
ja
xor
out
sub
lahf
adc
leave
call
sbb
fwait
ins
dec
adc
fs
sub
lock
popa
in
jl
push
daa
stos
pop
xlat
push
arpl
mov
mov
fiadd
jnp
mov
pop
retf
adc
movs
and
mov
cmp
push
xlat
push
pop
std
(bad)
or
fisub
aad
jne
ss
inc
jnp
dec
cdq
fild
pop
icebp
push
push
or
xor
inc
aam
mov
mov
repz
mov
mov
lods
pop
pop
push
adc
or
push
push
(bad)
jge
movs
mov
push
inc
xchg
add
push
bound
and
sbb
leave
dec
mov
inc
es
sub
xor
in
jo
ins
rcr
aas
sub
shl
lea
or
cmps
shl
jp
or
cdq
xor
add
cmps
xchg
int
scas
aaa
pop
les
sub
push
adc
sub
fs
clc
(bad)
(bad)
cwde
mov
(bad)
push
out
jecxz
jmp
bound
out
(bad)
movs
mov
add
aaa
sub
inc
cmp
inc
ret
cdq
xchg
or
mov
scas
mov
(bad)
fimul
jae
jmp
push
mov
mov
fwait
sub
leave
cmp
push
popf
sbb
cwde
enter
cmp
mov
sbb
and
inc
and
cmp
jl
mov
sub
add
mov
(bad)
rcl
mov
fisttp
xor
sar
sbb
cmps
cwde
jnp
iret
sub
sbb
sbb
mov
adc
lods
out
cmp
pushf
popa
test
nop
inc
add
sbb
cmp
(bad)
out
xchg
test
and
ret
lahf
inc
mov
jb
cmp
shl
ret
lea
pop
in
push
adc
jns
outs
mov
jo
lahf
addr16
push
mov
jo
xor
call
imul
rcr
cmp
mov
and
jl
xchg
pop
call
push
jno
hlt
popf
fsubr
mov
add
pop
fsubr
mov
inc
retf
jo
scas
lea
int
push
pop
inc
(bad)
jno
push
mov
sub
sub
retf
xchg
sub
push
pop
jp
int3
mov
stos
imul
push
cmps
or
jno
sbb
mov
pop
(bad)
dec
push
cmps
xchg
xchg
push
(bad)
jp
mov
in
sar
aam
fldcw
dec
mov
mov
sbb
adc
int
repnz
in
lods
jle
aad
pop
xchg
cwde
repz
xchg
sub
imul
test
mov
test
pop
xor
shr
scas
push
js
repnz
sbb
movs
dec
call
jp
sbb
div
test
inc
mov
cwde
ins
retf
test
shl
dec
(bad)
hlt
xor
lock
jg
ja
pop
enter
xchg
lahf
push
out
adc
push
or
dec
lds
pushw
loope
bound
push
rcl
gs
stc
xchg
test
test
inc
mov
js
int3
test
aad
call
sbb
jae
dec
xchg
test
rcl
mov
cmp
pop
xchg
fs
lahf
inc
outs
sbb
sub
mov
cmp
(bad)
jae
jl
arpl
jns
cmp
xor
enter
in
arpl
arpl
mov
rcpps
xor
lock
pop
push
je
xlat
cs
mov
push
pop
cwde
fsubr
jno
es
sbb
jbe
sahf
pusha
je
xchg
fidiv
test
mov
xor
and
xlat
cwde
adc
lods
aas
int3
mov
clc
retf
cmp
adc
cdq
imul
lea
sub
lods
(bad)
mov
stos
dec
push
xchg
loop
sar
call
addr16
leave
xor
(bad)
jg
out
stc
mov
sub
sbb
paddd
pop
xor
and
ror
neg
stos
pop
ret
stos
push
movs
cli
fcmovne
push
mov
ret
sub
cwde
shl
fdivp
gs
cmp
mov
ds
popa
xor
xor
popa
and
xchg
jge
sbb
add
cmps
shr
fistp
mov
sar
or
js
push
leave
retf
call
mov
push
adc
mov
popa
test
xor
adc
mov
jno
outs
sbb
fmul
lock
pop
jp
daa
dec
das
test
lock
inc
sbb
ins
cmps
push
cmps
xlat
xchg
loope
in
outs
pop
xchg
lods
mov
mov
scas
sub
ror
sub
jecxz
cmp
add
pop
jle
sbb
and
cmp
jmp
test
sub
sub
sub
test
mov
cld
stos
sub
xchg
cmc
inc
ss
(bad)
mov
cld
xor
scas
sbb
ja
ja
jp
pop
jae
cwde
cmp
cwde
(bad)
inc
cmp
pusha
mov
in
xor
arpl
int
mov
aas
dec
cld
xchg
fsubr
ror
push
sbb
mov
inc
cmp
xchg
mov
arpl
pop
dec
mov
xlat
jns
jnp
xlat
cmp
test
dec
stos
or
(bad)
dec
push
push
pop
mov
or
fwait
rcr
dec
push
cmps
dec
pop
ss
rcl
cdq
popf
imul
loopne
mov
push
pop
outs
push
aas
sub
mov
adc
aaa
lods
outs
mov
call
push
sbb
fsubr
mov
lock
sbb
pop
stc
fwait
aaa
inc
add
dec
test
in
dec
mov
push
cli
jo
ins
sbb
stos
add
popa
pop
scas
and
inc
jecxz
sub
cmp
xor
sbb
imul
cmp
pushf
jae
pusha
iret
repz
arpl
sbb
(bad)
xchg
(bad)
fisttp
lahf
mov
in
pop
mov
and
aas
fisttp
inc
jne
repnz
sbb
push
and
and
js
push
aas
jmp
int3
dec
jmp
(bad)
sbb
xrelease
xchg
sub
lea
or
clc
frstor
rol
or
int3
push
int3
cmp
pop
cmp
sub
call
data16
out
cli
dec
mov
xlat
push
ds
fcmovne
sbb
mov
cmp
fidivr
mov
inc
and
jns
push
dec
add
movs
mov
jo
inc
fdivr
xchg
inc
jge
loopne
mov
and
cmps
add
seto
in
xchg
mov
xchg
(bad)
sub
or
jne
sub
dec
pop
mov
test
xchg
xchg
sub
sub
pop
mov
scas
movs
dec
xchg
xchg
in
out
xor
out
add
lock
mov
jl
imul
les
jae
jbe
add
jae
and
out
and
(bad)
jo
or
inc
mov
je
std
cld
or
icebp
add
ret
into
call
repnz
addr16
push
icebp
jmp
mov
and
aas
xor
(bad)
dec
int
aas
ss
adc
xchg
mov
in
cmps
daa
pop
pop
xchg
jnp
fs
mov
sub
jl
pop
popf
jmp
out
sub
or
(bad)
test
retf
mov
lahf
lds
push
xchg
sub
push
mov
mov
fs
mov
xor
cs
fldcw
inc
fs
add
add
push
xlat
gs
push
push
stc
xchg
sub
sahf
push
movs
test
sbb
adc
or
pop
push
mov
call
jnp
arpl
dec
or
pusha
and
pusha
jge
sub
push
xchg
ss
out
dec
dec
repnz
sub
repnz
ins
sub
movs
sub
mov
pop
mov
cmp
or
push
xor
sbb
sti
pop
mov
cmp
les
adc
sbb
mov
stos
aaa
and
xor
inc
arpl
push
test
add
enter
xchg
clc
push
sbb
sub
xor
imul
add
inc
push
mov
and
ja
push
jle
dec
adc
inc
sbb
push
outs
jecxz
cmps
sub
in
jbe
pop
lea
stc
jg
fs
test
jmp
push
loope
not
jmp
mov
stos
sbb
fs
mov
inc
cmps
in
mov
enter
sbb
rcr
out
fimul
int3
mov
xchg
imul
mov
jae
mov
movs
or
fs
inc
neg
cmc
xchg
mov
pop
dec
cs
dec
fsub
dec
retf
add
sbb
pop
cmp
adc
sahf
outs
pop
mov
enter
icebp
push
ds
xor
call
pop
xor
movs
(bad)
jecxz
ds
push
sahf
push
int
movs
js
cmp
pop
xor
pop
mov
or
outs
int3
jbe
pop
or
je
ficomp
rcl
cmps
shl
pop
jmp
adc
sub
jl
pop
fsubr
dec
or
cmp
or
dec
jecxz
mov
mov
rep
cmc
stc
mov
out
fild
ds
mov
stos
push
push
mov
push
adc
pop
mov
stos
pop
cld
inc
in
mov
arpl
sbb
jae
cli
stc
ds
jnp
movs
sbb
mov
(bad)
(bad)
add
addr16
(bad)
or
(bad)
call
pushf
icebp
cmp
lahf
xor
rcl
loop
mov
loop
(bad)
adc
pop
lea
sub
mov
cmp
and
push
movs
mov
mov
jmp
shl
push
sbb
lds
pushf
add
cmp
xchg
stc
pusha
aam
inc
popf
cld
das
inc
call
cmp
jl
jns
xchg
fsub
pop
outs
sbb
leave
push
les
xchg
mov
xchg
mov
inc
fwait
popa
addr16
das
or
test
jae
or
sub
jne
fs
push
add
xchg
push
add
jae
or
scas
into
cmps
movs
mov
push
inc
pop
loop
fisttp
mov
sahf
add
push
or
gs
enter
add
adc
dec
in
nop
rcr
or
sub
int3
xchg
test
jbe
outs
ss
cmps
cmps
ret
mov
lea
xchg
xchg
mov
popa
loop
int3
mov
imul
sbb
inc
loopne
fnsave
jno
adc
or
push
xlat
xchg
out
mov
cmps
dec
popa
hlt
lods
cwde
shr
ret
cdq
mov
inc
pop
jg
pop
out
and
not
and
and
cli
test
bound
and
add
out
imul
enter
xor
xchg
xor
dec
ins
add
sbb
out
mov
enter
sub
bound
jge
mul
mov
mov
loope
fwait
test
xor
add
xchg
aaa
pop
or
mov
pop
cmp
fbld
dec
outs
in
imul
dec
out
xchg
les
push
out
mov
fild
bound
push
bound
data16
ficom
inc
or
adc
fild
ins
xor
cwde
sar
mov
mov
jns
inc
bound
sbb
aad
cmc
jns
inc
jg
dec
in
ds
fsubr
xchg
inc
call
inc
sbb
ins
xor
xor
sbb
daa
dec
sbb
div
xchg
ror
mov
mov
adc
ret
jl
jns
xchg
fist
sahf
iret
mov
and
in
std
cmps
out
mov
test
mov
xor
jmp
addr16
or
(bad)
mov
xor
sbb
sar
push
xorps
or
pop
xchg
clc
test
popa
cmp
mov
in
in
cld
movs
xlat
lahf
push
cmc
fwait
retf
aad
repnz
mov
mov
jg
pop
in
pushf
icebp
test
dec
sbb
popa
add
adc
and
and
mov
out
repnz
adc
cli
mov
ds
push
clc
(bad)
xlat
pop
cmp
in
xor
je
sbb
nop
mov
mov
test
ins
movs
fcmovnbe
xchg
out
mov
outs
aaa
adc
cmp
push
aad
ror
aaa
push
push
fidivr
jp
jle
push
in
shl
mov
mov
add
rcl
inc
add
add
push
xor
mov
fdivr
fisttp
(bad)
ins
push
inc
js
and
and
scas
fild
or
adc
mov
push
std
mov
cld
arpl
xchg
call
inc
add
cmp
aas
push
sbb
add
sbb
dec
adc
stos
data16
cmp
imul
nop
cmc
scas
pop
inc
mov
mov
jmp
sar
cmc
scas
jbe
mov
(bad)
cld
cmps
jmp
fld
sub
jns
outs
xchg
mov
mov
mov
adc
dec
sbb
mov
pop
sub
sbb
scas
movs
repnz
test
out
aaa
ss
sbb
dec
dec
loop
cmp
lods
rol
sbb
or
pop
pop
pop
jnp
xor
sbb
and
bound
and
in
nop
shl
fnstenv
arpl
sub
pop
loope
ret
inc
mov
jecxz
jl
dec
add
test
(bad)
mov
lahf
retf
sub
xchg
repnz
cdq
test
inc
das
jle
(bad)
(bad)
jmp
inc
jmp
ret
sub
daa
jae
in
jle
ins
xor
cmp
rcl
and
push
add
inc
test
sbb
outs
test
(bad)
mov
iret
mov
inc
out
ds
dec
add
outs
cmp
(bad)
std
xchg
jmp
cmp
sbb
iret
rol
fisubr
jp
push
jg
or
pop
or
mov
popa
jecxz
xor
push
inc
cmp
and
js
or
mov
mov
pusha
aaa
sahf
stos
mov
call
cmps
movs
cld
scas
stc
cmps
(bad)
bound
dec
jmp
mov
fidivr
push
or
dec
sbb
xor
jbe
pop
(bad)
xchg
out
mov
jnp
push
or
fidiv
jne
dec
enter
adc
mov
in
mov
mov
fist
pop
jmp
rcl
call
push
push
je
stc
xchg
xchg
imul
aad
or
into
mov
lahf
ret
jae
es
or
jb
mov
cmp
dec
sbb
add
aas
cmp
dec
push
mov
int3
fwait
xlat
jbe
dec
or
test
es
mov
mov
shl
push
xor
and
pusha
sbb
push
loope
les
aam
retf
add
push
xor
into
mov
xor
or
(bad)
dec
push
rcl
push
dec
pop
push
loope
outs
pop
inc
pop
adc
popa
sbb
gs
add
xchg
mov
inc
in
ds
add
daa
jge
mov
push
das
jnp
data16
aaa
outs
mov
inc
fstp
call
push
pop
push
ins
cmp
test
(bad)
cwde
lds
mov
adc
and
cmp
retf
pushf
int
loopne
ja
cmp
cmp
or
das
and
leave
arpl
mov
fimul
jl
xlat
pusha
xchg
mov
mov
inc
addr16
adc
repz
retf
(bad)
mov
lahf
test
cmp
push
mov
mov
jge
hlt
mov
jmp
jl
scas
movs
icebp
sti
mov
cmp
adc
movs
jmp
ret
in
lds
xor
dec
ds
outs
push
pop
jp
jno
pop
out
aad
adc
lahf
push
imul
push
pop
jge
add
or
mov
jne
ret
mov
popf
test
inc
adc
popf
(bad)
xchg
jmp
out
inc
mov
pop
xchg
mov
in
add
add
nop
xlat
mov
test
sub
sbb
dec
and
sbb
adc
mov
jno
jmp
nop
mov
sbb
es
inc
xchg
cld
xchg
(bad)
fldcw
mov
add
(bad)
and
xor
add
jle
mov
mov
mov
jbe
adc
or
fidiv
sub
adc
mov
lods
fdiv
inc
add
dec
add
enter
loope
ret
mov
sub
dec
fld
jle
push
movs
mov
nop
cmps
(bad)
inc
mov
arpl
pop
(bad)
xor
int3
mov
sbb
ret
cmp
movs
lock
ss
retf
sub
popa
sbb
add
pusha
into
lahf
jns
push
or
xchg
pop
sbb
adc
xor
(bad)
data16
jp
sbb
inc
xchg
mov
ins
cmp
mov
mov
inc
adc
xchg
hlt
nop
repnz
or
mov
test
mov
push
imul
test
push
pushf
test
adc
pop
sbb
cmps
hlt
adc
jo
cmp
add
in
xchg
lods
icebp
test
sub
xchg
fwait
mov
xor
mov
pusha
dec
sbb
xor
ror
mul
inc
pop
pop
add
in
xchg
mov
sbb
gs
icebp
outs
mov
adc
mov
clc
mov
(bad)
fnstsw
inc
adc
outs
in
into
xchg
stos
jle
push
or
dec
sbb
cdq
jg
dec
adc
xor
movs
movs
(bad)
imul
xchg
adc
jl
jg
hlt
test
je
dec
sub
retf
xchg
div
pop
add
cmp
addr16
and
cmp
in
lahf
lds
jge
push
arpl
js
push
out
test
mov
push
add
fbstp
dec
mov
ds
add
xchg
mov
fdivr
mov
pop
or
mov
jne
ret
mov
into
popa
xor
lods
jmp
lea
inc
adc
xchg
cmc
xchg
repz
cli
scas
pop
repz
fiadd
out
cmp
ss
sbb
scas
cmc
in
lods
cmps
fisttp
sub
jae
or
dec
push
jb
push
jae
out
loop
int
test
fisubr
jmp
test
dec
test
sbb
pop
stos
cmps
retf
call
scas
lds
and
jp
push
stos
cmp
in
mov
cwde
mov
xchg
sti
stos
stos
ror
js
sahf
les
hlt
dec
add
out
add
(bad)
mov
mov
lahf
xchg
mov
lahf
shr
arpl
mov
and
mov
(bad)
jmp
aad
mov
jmp
movs
(bad)
jb
movs
fbstp
fadd
outs
aas
push
pop
outs
push
jge
xrelease
out
mov
test
xchg
shl
mov
mov
and
test
mov
sahf
lahf
mov
add
jg
adc
pop
xchg
stos
cmp
dec
xchg
cmps
push
and
jmp
div
pop
mov
in
fiadd
mov
jge
push
xchg
cmps
in
movs
cmc
adc
adc
jp
cmp
jge
ror
imul
addr16
in
inc
or
int3
arpl
push
aaa
ins
ins
sbb
add
(bad)
xchg
lock
dec
sti
xchg
sti
stos
sbb
sti
xchg
jmp
loop
cmp
out
xor
lock
pop
call
and
(bad)
fmul
daa
and
mov
adc
lahf
mov
mov
stos
cmps
fimul
cmp
and
fwait
push
dec
adc
sub
gs
fsubr
data16
cmps
test
fidiv
dec
in
pop
(bad)
mov
es
or
adc
adc
cwde
repnz
cld
xchg
dec
in
xor
fiadd
jg
mov
jmp
sbb
lods
cmp
inc
jo
xchg
leave
dec
jecxz
outs
adc
xchg
xchg
(bad)
stos
std
dec
push
stos
jmp
(bad)
mov
call
mov
xor
or
xor
mov
inc
call
jmp
sbb
cmps
sti
dec
loope
cmp
mov
or
out
bound
jp
sbb
sub
jb
std
sub
push
mov
fst
ins
ins
adc
mov
add
add
es
jecxz
fbstp
inc
ret
sub
daa
dec
xor
push
add
inc
mov
int
mov
xchg
xchg
stos
and
in
xchg
sar
int
(bad)
ja
dec
sbb
xor
sub
mov
lahf
jno
fst
cmp
push
int3
jb
in
popa
not
mov
jp
xlat
retf
(bad)
loopne
imul
dec
aaa
or
pushf
retf
leave
arpl
imul
sbb
adc
push
xor
in
sahf
(bad)
cmp
push
iret
jb
out
int
inc
xor
xor
cmp
nop
scas
mov
or
jae
fistp
xchg
fisubr
mov
xchg
push
repnz
and
mov
shl
pop
or
ins
jg
aam
into
push
cmc
xchg
int
cmc
clc
call
das
ja
daa
bound
and
sbb
les
jmp
fcom
inc
jmp
ror
cmc
cwde
leave
jl
xlat
daa
pop
or
pop
imul
in
repnz
cmp
adc
or
rol
xchg
(bad)
mov
fst
fcom
jp
fmul
fisttp
sub
gs
sar
loop
push
out
adc
add
lods
jle
xchg
shr
pop
sti
mov
(bad)
jae
stc
xchg
rol
jns
jns
xchg
into
ja
(bad)
stc
(bad)
(bad)
movs
adc
mov
mov
jb
dec
add
and
loop
repnz
xlat
jns
push
xor
movs
leave
test
(bad)
push
push
add
lds
cli
jno
pop
cs
add
pop
add
mov
mov
jb
dec
call
jge
sub
push
add
ins
aaa
inc
or
aaa
push
sti
xchg
imul
dec
push
push
loope
push
inc
adc
pop
hlt
pushf
(bad)
sub
loope
xor
sbb
pop
and
mov
adc
outs
add
xchg
cmp
adc
or
push
inc
sbb
daa
ret
pop
loopne
xor
jo
icebp
xchg
leave
pop
adc
in
mov
out
cmps
test
jno
mov
cmp
jno
pop
out
add
lock
push
cdq
enter
xor
stos
mov
call
(bad)
mov
jmp
repnz
imul
mov
pop
jmp
repnz
mov
mov
adc
imul
jg
fimul
pop
fistp
jle
sti
inc
nop
push
push
inc
cmp
pop
out
ret
xchg
es
retf
push
sub
sub
dec
ds
arpl
dec
adc
jp
hlt
movs
repnz
in
loop
push
pop
push
loope
sar
push
push
push
sbb
test
popa
aaa
jae
push
mov
adc
outs
xor
mov
jmp
test
pop
pop
(bad)
int
stc
mov
sbb
cdq
aam
addr16
jbe
jnp
push
push
bound
stos
icebp
jns
pop
(bad)
adc
inc
or
arpl
call
and
rol
and
fsub
jecxz
jnp
inc
pop
inc
pop
push
cld
cmps
sbb
dec
push
add
xchg
sar
bound
dec
sbb
jb
repz
lds
ja
sub
inc
pop
or
pop
inc
(bad)
fwait
jno
lahf
clc
nop
repz
loope
jb
xchg
movs
jecxz
inc
pop
pop
pop
sub
inc
sbb
add
je
loopne
cmc
mov
or
inc
mov
mov
outs
add
mov
mov
mov
pop
lods
(bad)
mov
push
xchg
lahf
fld
or
fcom
outs
or
call
popa
and
fnstcw
std
mov
xor
push
push
add
jp
imul
jge
cmc
adc
in
jmp
xor
cmp
jns
outs
imul
je
cmps
mul
jl
mov
cmp
js
add
popf
xor
outs
add
fld
push
or
(bad)
mov
ds
sub
jp
bound
ret
xchg
rcr
pop
sbb
jo
inc
sbb
leave
cs
mov
mov
mov
add
cs
or
xchg
(bad)
or
push
loope
jmp
lods
(bad)
movs
icebp
mov
adc
jp
hlt
movs
push
push
dec
es
stos
jmp
mov
add
sbb
movs
mov
and
stc
pop
add
aam
mov
cmps
push
pop
les
in
jg
outs
aaa
push
add
(bad)
scas
aas
je
inc
test
outs
pop
inc
sub
jae
shl
sub
and
mul
sub
jle
push
loopne
ss
adc
ror
xchg
(bad)
repz
xchg
iret
mov
sbb
sub
cs
pextrw
pushf
into
fwait
int
sbb
fdivr
xchg
ret
sub
mov
mov
jne
lds
bound
jp
mov
or
mov
add
popa
sub
jmp
push
cmp
xchg
and
push
xor
hlt
mov
test
mov
cs
dec
adc
mov
jmp
add
dec
jmp
ret
cmp
lds
jnp
inc
aas
arpl
jnp
js
push
hlt
jmp
mov
mov
mov
mov
dec
xor
or
mov
sti
outs
ins
cmp
jp
retf
shr
pop
or
push
aad
inc
ss
iret
add
cmp
jne
imul
enter
outs
sbb
mov
sbb
dec
ins
or
inc
adc
ror
call
and
jo
shl
dec
xor
sub
fld
push
push
push
push
sbb
test
adc
fidivr
outs
adc
ins
push
inc
xchg
mov
mov
ss
loop
fcomp
pop
dec
push
jnp
dec
push
scas
leave
ficomp
jmp
lods
lds
sub
jae
lock
sbb
rcr
cmps
inc
sub
xor
or
rcr
imul
(bad)
iret
lods
stc
sbb
fadd
bound
pop
sbb
jmp
ret
mov
inc
xchg
xor
inc
adc
int
test
or
test
(bad)
hlt
mov
mov
xor
dec
xor
xchg
retf
inc
and
(bad)
mov
push
adc
jmp
adc
jl
je
pusha
sub
jnp
pop
pop
inc
test
push
sub
xchg
(bad)
imul
test
int3
call
jns
dec
or
movs
call
cmps
jecxz
jmp
mov
in
mov
sbb
popf
enter
dec
mov
jecxz
mov
stos
cli
adc
add
jnp
rcr
jb
ret
(bad)
jl
pop
ss
div
jo
xchg
std
sbb
daa
arpl
jle
(bad)
scas
xchg
mov
rcl
into
mov
mov
fisubr
inc
and
fsub
mov
lods
jmp
mov
mov
scas
and
xchg
mov
cmps
in
mov
lods
sti
mov
or
fcomp
add
iret
xchg
push
adc
adc
sbb
inc
add
scas
hlt
fs
cdq
cli
mov
aas
jp
jp
pop
xor
mov
xor
mov
cs
sbb
mov
loopne
(bad)
stos
icebp
pop
and
hlt
loope
jmp
fbstp
pop
test
mov
mov
jae
pop
push
mov
data16
iret
xchg
and
push
(bad)
ins
outs
cmp
lds
loop
(bad)
out
es
and
push
hlt
mov
dec
daa
inc
and
(bad)
xlat
inc
cmp
sbb
fwait
(bad)
xchg
out
sbb
ficomp
dec
add
pusha
push
push
lock
cmovp
jmp
ins
ss
sti
jecxz
cmc
xchg
test
mov
jb
push
mov
imul
cmp
cmp
out
stos
fldcw
push
in
in
mov
sub
push
adc
les
pusha
or
push
and
fiadd
jnp
pusha
aaa
ret
sub
stc
adc
lds
dec
adc
cmp
mov
sar
call
cmp
arpl
(bad)
popa
aaa
jae
push
mov
call
bound
out
fidivr
ins
out
xchg
loop
cli
movs
inc
add
mov
mov
cs
popf
(bad)
mov
xor
cmp
jb
(bad)
mov
sti
push
mov
stc
and
cwde
repnz
jmp
int3
inc
(bad)
sbb
inc
adc
imul
aaa
arpl
retf
jb
push
das
inc
mov
xchg
test
sbb
and
ss
mov
test
fimul
pop
lock
js
aam
jmp
in
inc
xchg
and
and
shl
cs
adc
js
int
add
ret
xor
jl
lock
pop
enter
cld
cmp
arpl
adc
cli
sbb
mov
mov
loope
sub
loop
sbb
mov
lahf
imul
pop
inc
add
rep
ficom
inc
push
add
nop
xchg
scas
fisttp
cmp
xchg
lock
adc
mov
test
daa
jl
xchg
stc
call
repnz
loop
dec
or
adc
push
scas
fimul
pop
fdivr
mov
pusha
fistp
push
and
inc
mov
mov
into
pop
or
push
adc
retf
ds
arpl
ins
dec
sbb
aas
jnp
leave
test
push
add
dec
mov
pop
shl
push
adc
xchg
mov
test
(bad)
popf
ja
shl
push
push
arpl
mov
int
repz
xchg
push
add
jle
mov
xchg
loop
xchg
int
mov
lods
les
jmp
into
xchg
cmps
leave
mov
inc
xor
jnp
pop
or
out
mov
fwait
stc
mov
inc
fist
mov
jae
xor
lock
test
sbb
sub
mov
jb
pop
sub
or
cs
dec
inc
adc
inc
xor
dec
cwde
iret
mov
shl
imul
dec
sbb
adc
xor
inc
ret
fwait
ret
lahf
(bad)
ret
xchg
shl
jbe
(bad)
mov
call
xchg
data16
or
jge
pop
mov
mov
dec
mov
jns
in
fidiv
dec
loopne
push
cmp
ss
nop
fldcw
or
jg
sti
xchg
loopne
lods
cld
mov
add
xor
outs
(bad)
xor
push
and
sub
loope
cmp
pop
sub
and
pop
and
out
push
cmps
repnz
hlt
mov
jge
cli
stos
test
pop
sbb
(bad)
cmp
ret
mov
jge
xor
mov
cmps
nop
sti
(bad)
fimul
enter
aad
iret
jae
call
rol
push
int
in
mov
mov
cmp
mov
jns
mul
mov
pop
sub
cmp
jecxz
fdivr
adc
xchg
call
sub
mov
into
cmps
fst
or
and
and
mov
test
xchg
mov
or
lock
inc
adc
cmp
dec
sbb
inc
loopne
jno
push
sbb
inc
or
mov
cld
mov
mov
clc
nop
fldcw
mov
les
pop
or
retf
mov
jno
sub
dec
mov
xchg
pop
loop
jp
xor
push
out
adc
push
ins
sbb
jg
and
inc
and
(bad)
mov
sahf
stc
(bad)
fistp
outs
push
jp
push
clc
repz
mov
pushf
rol
test
pop
dec
jecxz
lds
xchg
ins
fnstcw
dec
loope
fdivr
jle
push
sub
jnp
pusha
add
leave
xchg
lods
int3
mov
shl
inc
adc
popa
dec
mov
stos
sub
loope
or
div
jnp
loopne
shl
xchg
test
loopne
pusha
cmp
cmc
xchg
lds
(bad)
mov
data16
or
push
out
int3
mov
mov
push
or
inc
sbb
inc
cmps
repnz
(bad)
in
popa
pop
pop
adc
cld
(bad)
int3
xchg
cli
add
or
pop
dec
out
fimul
outs
ds
out
inc
rcr
int
cld
addr16
dec
jecxz
mov
repnz
ret
mov
data16
add
jb
cld
mov
mov
jno
mov
in
data16
cmps
lock
cmps
icebp
mov
mov
jmp
ror
dec
sbb
loop
fimul
neg
test
pop
js
outs
adc
dec
jmp
js
cmc
push
aas
dec
loop
rcr
jno
sub
cmp
push
pop
pop
jp
cmc
inc
add
pop
sbb
or
sub
pop
push
sub
movs
std
scas
hlt
movs
enter
xor
in
adc
push
push
imul
stos
out
stos
cmps
or
cmp
mov
or
retf
add
xchg
imul
push
or
call
and
cmp
push
ret
inc
sbb
cmp
sub
sub
and
cmp
and
inc
aas
jnp
push
sub
cmp
sub
daa
pop
vmread
in
ins
cmp
shr
pop
xor
dec
or
(bad)
scas
(bad)
scas
dec
lahf
fistp
mov
les
sub
push
loope
cmc
ins
sbb
jmp
push
sti
jg
(bad)
(bad)
xchg
dec
cmp
pop
sbb
cmp
xor
adc
xchg
mov
ror
sbb
(bad)
test
cmp
retf
bound
xchg
mov
mov
mov
sbb
ins
cmp
jmp
dec
movs
jecxz
mov
leave
fs
and
jle
sub
cmp
inc
or
sub
div
call
scas
mov
in
test
push
xor
iret
mov
mov
shr
in
ror
ins
and
and
jl
ja
push
inc
push
pop
xor
dec
push
pop
sbb
sub
or
push
or
sbb
loope
fisub
call
out
dec
push
mov
xlat
mov
xchg
dec
cmovg
hlt
mov
xchg
xchg
loop
lock
mov
rcl
les
fnstsw
inc
gs
cmp
jb
push
lds
dec
and
cs
or
adc
pusha
add
inc
add
fwait
or
inc
push
jbe
icebp
popa
ret
pop
pop
sbb
adc
xchg
dec
push
pop
or
ins
outs
xor
sbb
sbb
lahf
fnstsw
stos
fimul
cdq
ret
popf
ret
inc
sti
test
sbb
pop
push
cmp
fsubr
xchg
enter
fidiv
cmp
sbb
sub
sbb
xchg
mov
(bad)
(bad)
scas
xchg
and
mov
ficomp
(bad)
xchg
(bad)
loopne
int3
jg
pop
sbb
mov
cmp
shr
cmp
addr16
push
sbb
add
jmp
jmp
sub
daa
out
bound
push
and
adc
pop
cmp
aaa
add
repnz
daa
pop
add
call
fistp
fnstenv
fnstcw
mov
xor
imul
call
or
aad
xlat
movs
in
xchg
mov
xchg
retf
cmp
push
inc
pop
dec
xor
xchg
loop
movs
in
fisub
stos
cld
mov
add
pushf
in
mov
adc
sbb
imul
jmp
jp
rep
jmp
(bad)
int
mov
mov
cwde
mov
mov
xor
arpl
adc
iret
mov
lods
mul
in
fist
iret
inc
xchg
mov
jo
push
push
sub
ins
pop
fs
or
jecxz
mov
or
daa
(bad)
rcl
lock
in
fcomp
cmp
push
adc
sbb
(bad)
arpl
repz
mov
loope
cmps
loop
outs
jno
fnstsw
sti
int
jmp
(bad)
mov
js
and
dec
retf
cmp
imul
es
mov
test
inc
popf
ficom
cld
lahf
not
lods
xchg
hlt
xchg
mov
cwde
cmps
stos
cwde
in
mov
mov
int3
pushf
rcr
mov
push
or
dec
mov
xchg
shl
icebp
cwde
lock
push
or
test
aad
les
imul
mov
xchg
jb
call
dec
sbb
pop
and
adc
outs
in
ret
sub
mov
pop
pop
ret
mov
push
or
mov
cmp
jp
pop
adc
dec
adc
sbb
pcmpeqb
dec
or
bound
dec
mov
fs
mov
inc
push
pop
jno
add
push
adc
imul
adc
mov
mov
sbb
xchg
stos
scas
leave
mov
ret
dec
and
cdq
fnsave
cli
xchg
rcl
add
ja
pop
push
sbb
add
push
adc
fst
ror
xchg
(bad)
or
(bad)
lea
add
ds
xlat
jmp
pop
pop
pop
imul
mov
sbb
mov
loope
ret
xchg
mov
add
pop
rol
xor
mov
inc
sbb
outs
hlt
mov
dec
pop
daa
jge
push
mov
cdq
sar
daa
push
mov
fst
pop
push
inc
or
push
nop
fstp
outs
sub
cmps
mov
dec
xor
xor
popw
push
mov
push
cmp
ss
mov
xchg
shr
mov
jns
pop
ret
mov
xchg
in
xchg
pop
mov
mov
xlat
cmc
test
and
xchg
dec
mov
test
scas
mov
lods
data16
push
sub
mov
xchg
sar
or
inc
add
dec
mov
xchg
cli
popf
fmul
jg
add
dec
adc
cmp
je
dec
icebp
cmp
inc
daa
sub
sub
mov
outs
mov
jae
imul
xor
ins
aaa
push
add
lahf
mov
jmp
sbb
into
call
fisub
push
and
dec
mov
js
push
inc
sbb
inc
in
(bad)
fwait
int3
and
leave
(bad)
shr
stos
(bad)
xchg
shl
mov
and
cmp
stos
mov
std
mov
jmp
clc
data16
ja
pop
mov
stos
(bad)
mov
ds
inc
in
inc
nop
hlt
xchg
cvtps2pi
inc
call
push
or
mov
mov
fwait
cmps
fld
xchg
mov
xchg
loopne
ror
outs
add
sbb
inc
stc
out
mov
and
clc
xor
dec
test
jae
outs
adc
stos
fist
loopne
jmp
in
out
rcl
pop
rcr
cmp
mov
or
pop
pop
pop
pop
scas
push
jno
pop
mov
mov
jle
push
mov
mov
pop
xchg
(bad)
pushf
lock
jl
ja
ins
adc
mov
scas
(bad)
pop
and
es
push
dec
loope
js
pop
sub
fisub
pop
dec
jecxz
test
inc
hlt
mov
xchg
xchg
test
add
mov
push
add
pop
(bad)
arpl
adc
pop
inc
xor
push
push
dec
cmp
popa
jmp
jbe
jg
mov
xchg
ficom
sbb
jnp
retf
stos
repnz
retf
pop
aaa
dec
rol
add
mov
fs
xor
dec
xor
and
ror
mov
sbb
mov
mov
scas
clc
xchg
rcl
mov
mov
mov
aas
jae
out
mov
adc
bound
xchg
gs
imul
push
cmp
(bad)
in
icebp
add
outs
sbb
mov
and
retf
push
hlt
repnz
xor
outs
das
mov
ficomp
(bad)
ficomp
push
pop
(bad)
test
mov
lods
jecxz
in
lods
sbb
out
or
js
dec
add
inc
sub
pop
ins
add
jne
pop
rep
loope
adc
cli
lods
in
xchg
enter
mov
mov
pop
cs
push
jb
inc
out
mov
push
cmp
xor
cmps
icebp
jae
ret
mov
sub
adc
int3
mov
mov
cld
mov
dec
adc
sub
lock
loopne
xchg
sub
cmp
xchg
ins
inc
adc
inc
retf
and
xchg
loope
jg
and
cmp
pop
pop
sub
jecxz
mov
mov
pop
inc
pop
and
xor
imul
push
cmp
adc
mov
push
pop
outs
pop
push
adc
inc
cmp
jno
(bad)
xchg
sar
xor
in
ja
cmp
mov
sub
hlt
cli
nop
fldenv
(bad)
ror
popa
cmp
shr
cs
in
cmc
mov
call
test
lods
jmp
add
sub
pop
cmp
test
mov
jmp
repnz
xor
and
adc
jmp
lahf
cld
cdq
lods
mov
cmps
pop
push
jnp
inc
adc
fild
pop
sub
js
push
pop
popa
xor
rol
(bad)
mov
jbe
aas
jnp
sti
in
sub
into
mov
cmp
ficomp
xchg
push
sub
(bad)
(bad)
pop
out
test
cs
jno
jne
inc
add
pop
cmp
xchg
aam
sbb
daa
dec
sub
clc
hlt
mov
xchg
lock
inc
add
jp
ins
lods
jg
adc
aaa
scas
in
mov
test
sbb
mov
inc
add
add
inc
push
call
cmps
mov
(bad)
test
mov
cmp
pop
inc
add
xor
int3
mov
popa
sub
xor
out
mov
push
daa
jo
outs
sbb
out
mov
and
stos
(bad)
mov
(bad)
fsub
jae
inc
invd
dec
and
gs
mov
sbb
rcr
enter
lea
fcomp
out
in
in
clc
mov
rcr
mov
fwait
jmp
mov
sbb
inc
or
rol
pop
xor
mov
out
mov
(bad)
xchg
test
cmps
jecxz
cmps
fst
adc
aad
mov
rcl
movs
std
xor
shl
sti
lods
mov
xchg
jbe
fdivr
cmp
inc
test
popf
rcl
mov
stos
rol
xchg
out
(bad)
popa
repnz
and
cli
stos
out
mov
aaa
hlt
test
ficomp
scas
shl
enter
stc
scas
hlt
xchg
shl
scas
hlt
call
scas
mov
aaa
aaa
jne
cmp
sub
pop
mov
movs
fidiv
cmps
retf
or
inc
adc
daa
sbb
bound
and
adc
jne
and
and
ins
cmp
out
dec
sbb
sbb
inc
adc
clc
pop
inc
mov
sbb
cmp
imul
mov
int3
adc
(bad)
jae
push
add
pop
add
icebp
cmps
out
aam
int
ror
dec
sbb
fstp
out
cwde
rcl
pop
adc
stc
pop
inc
mov
lea
xor
(bad)
mov
push
js
adc
xor
push
mov
fimul
movs
jmp
pop
dec
sbb
dec
sub
xchg
aam
iret
test
adc
dec
and
fmul
mov
(bad)
in
mov
inc
adc
push
push
sbb
push
ds
xchg
jmp
test
inc
adc
adc
mov
cmps
in
xchg
rcl
adc
jo
jbe
repz
in
fadd
loope
rcr
aas
inc
loope
icebp
outs
cmc
(bad)
xchg
rcr
adc
or
out
inc
adc
sub
(bad)
int3
add
sbb
jp
push
add
call
xchg
test
mov
in
sub
aaa
popa
xor
daa
push
push
adc
push
or
pop
ds
sub
xchg
aad
sub
test
(bad)
xchg
int3
(bad)
fiadd
pop
mov
(bad)
mov
out
repz
iret
stos
sti
cwde
mov
inc
xor
sbb
push
or
mov
je
arpl
sub
mov
xchg
mov
into
push
inc
and
icebp
mov
xchg
fs
adc
inc
lods
js
pop
sbb
or
dec
push
pop
ins
push
push
cs
or
push
mov
adc
xor
or
or
pop
xor
cmp
cmc
(bad)
xlat
rcr
outs
mov
imul
or
inc
or
dec
es
enter
add
mov
mov
or
(bad)
mov
xchg
xor
or
stos
out
mov
mov
movs
into
bound
dec
or
clc
movs
hlt
imul
out
mov
cmp
jo
mov
jg
pop
xor
xor
cmc
mov
cmps
ss
adc
mov
(bad)
leave
mov
sub
aas
jae
jl
dec
mov
data16
cmps
std
mov
fistp
repnz
hlt
fwait
jmp
stc
sub
inc
sbb
inc
nop
sub
(bad)
jb
inc
test
mov
lahf
retf
gs
test
xchg
jne
ss
sbb
pop
xor
push
out
cmps
fld
xchg
inc
add
jns
retfw
xchg
cld
stc
test
push
push
adc
test
push
adc
call
ret
pop
push
mov
out
hlt
mov
jmp
leave
or
dec
out
jl
adc
in
jmp
mov
inc
cmp
xor
inc
sbb
nop
aam
int
xor
push
dec
sub
add
daa
pop
pop
daa
arpl
sub
imul
repnz
cld
cdq
jmp
fwait
rol
in
(bad)
xchg
(bad)
mov
xchg
aam
sbb
aas
push
cmp
sub
ds
ror
sti
stos
test
and
xor
mov
mov
push
ret
dec
add
lahf
movs
int3
mov
mov
xchg
cmp
add
or
inc
test
pusha
push
sub
add
push
pop
add
mov
cdq
test
cwde
loop
inc
out
mov
dec
hlt
dec
add
loope
mov
sbb
pop
sbb
add
push
call
icebp
mov
mov
inc
push
cmp
in
nop
jecxz
je
push
inc
pop
cmp
jge
push
out
jno
push
cmp
fst
fidivr
bound
pop
mov
jo
ins
in
jo
xor
out
stos
lock
ds
xchg
fcom
pop
sub
inc
enter
sbb
sti
mov
ds
jmp
jo
aas
inc
sbb
push
or
lahf
mov
sar
imul
cli
mov
inc
sbb
xor
cs
xor
sub
in
addr16
js
xchg
call
push
push
push
push
pop
pop
xchg
aam
shl
mov
add
(bad)
sahf
mov
sub
mov
mov
sar
xchg
or
(bad)
or
bound
push
sbb
mov
push
sbb
and
dec
jl
je
push
push
retf
jne
dec
in
sar
jg
push
inc
or
push
movs
ds
sbb
fimul
call
adc
(bad)
lahf
ror
mov
fwait
movs
(bad)
xchg
enter
add
into
cdq
leave
lods
mov
cmps
fild
sbb
shr
dec
push
fnsave
js
and
pop
and
inc
adc
add
sub
(bad)
pushf
int
inc
dec
sub
jns
jbe
push
pop
sub
pushf
and
inc
add
adc
mov
stos
cld
xchg
inc
dec
or
inc
xor
(bad)
sahf
cdq
sbb
pop
leave
loop
fisttp
es
cmp
dec
ret
xchg
shl
ret
xchg
fsub
retf
mov
outs
xor
jbe
dec
loop
fldcw
and
cmp
test
rcr
ficom
xor
pop
push
pop
cmp
jmp
bound
xchg
aad
fild
mov
mov
mov
into
mov
movs
loope
loopne
into
dec
and
in
loope
retf
(bad)
mov
or
shr
into
xchg
int
mov
pop
sub
test
adc
in
lock
xchg
dec
inc
sbb
push
in
lahf
into
cmp
sub
push
sub
jp
ja
mov
jb
push
sub
pop
cmp
popa
inc
cs
adc
cmovnp
inc
pop
push
adc
out
fwait
test
push
mov
inc
add
xchg
aam
fisub
xor
icebp
mov
mov
sub
pop
loopne
mov
xchg
fnstsw
mov
inc
xor
lods
jmp
dec
add
cmp
pop
inc
and
aas
inc
sub
push
pop
and
ret
test
lods
xchg
add
cmp
push
xchg
lds
add
xchg
push
add
pop
inc
push
dec
sbb
dec
and
mov
pusha
adc
push
jmp
popa
and
push
inc
push
jae
and
test
mov
test
inc
adc
jbe
cdq
shl
repnz
xacquire
xor
in
ds
push
mov
push
(bad)
xlat
mov
adc
ds
int
ror
js
jl
mov
push
les
imul
jle
cmp
dec
out
jg
lock
movs
fmul
push
and
nop
enter
movs
repz
jo
into
sub
popa
ss
aas
add
mov
push
dec
xchg
cmp
push
adc
push
add
pop
mov
inc
loop
pop
cwde
shl
sti
(bad)
ficomp
cmc
mov
mov
fisttp
fidiv
cwde
fdiv
jns
pop
sbb
ja
imul
dec
outs
sbb
dec
es
stos
lahf
push
subps
je
in
int3
mov
lea
movs
lds
push
loopne
or
fcom
or
int3
adc
add
adc
aas
pop
mov
adc
add
js
and
and
and
add
out
mov
mov
shr
cmps
(bad)
fwait
mov
adc
dec
add
mov
mov
fsubr
ds
push
sbb
iret
pushf
mov
mov
lds
mov
mov
cmps
stc
mov
mov
lods
movs
push
inc
xor
dec
cmp
shr
fst
sub
dec
add
push
rcl
xchg
retf
mov
mov
adc
cmp
std
stos
fistp
lods
int
retf
repnz
xlat
gs
push
dec
push
and
pop
js
jb
jns
sub
dec
jnp
xor
and
pop
push
xor
nop
sar
mov
or
out
test
mov
hlt
pop
push
add
addr16
adc
(bad)
lods
les
jecxz
into
adc
enter
dec
loop
aam
xchg
cld
jo
jp
dec
sbb
and
push
pop
xor
xlat
call
dec
push
push
sub
cmp
sub
fcom
xchg
in
mov
mov
es
jno
stos
out
mov
mov
repz
cmps
js
sub
js
inc
or
int
(bad)
aaa
xchg
cmps
rol
stos
repnz
cwde
xor
pop
loop
movs
test
pushf
cmc
adc
sbb
loop
dec
mov
xchg
push
scas
out
xchg
cdq
sbb
dec
adc
xor
pop
xor
(bad)
mov
clc
mov
popa
inc
adc
bound
mov
xchg
enter
inc
scas
rol
xchg
ror
div
lods
gs
call
mov
retf
mov
scas
outs
stos
ret
xchg
pop
dec
sub
adc
xchg
mov
out
or
xor
cmp
push
or
aaa
sbb
jb
inc
or
mov
mov
lahf
inc
mov
add
xlat
jo
pop
sbb
mov
xchg
and
ds
push
ret
mov
add
popf
int3
xor
pop
into
repnz
mov
sbb
test
jmp
mov
rcl
loope
lock
mov
jecxz
aad
in
rol
and
pop
xor
sub
adc
push
aas
das
and
sub
push
mov
or
dec
mov
sub
sub
nop
movs
enter
shr
arpl
pop
in
in
dec
jb
pop
pop
xor
out
sbb
ins
add
sahf
fisttp
add
sub
popa
fucomp
arpl
mov
test
std
jae
and
ror
mov
jmp
push
retf
lock
aam
stc
sbb
jae
out
sar
mov
enter
imul
pop
ret
pop
ds
repnz
mov
pop
add
adc
xor
push
sbb
jbe
fiadd
nop
ret
(bad)
enter
mov
ins
xor
aaa
push
pop
jmp
into
bound
mov
and
xor
dec
pop
jbe
xor
and
jb
inc
fdiv
sbb
enter
sti
arpl
shl
scas
movs
leave
ins
sub
inc
pop
and
out
mov
stos
xlat
jo
mov
xchg
rcr
and
add
ja
sahf
inc
arpl
ins
and
push
or
add
out
add
mov
mov
cmps
lods
std
mov
enter
sbb
jecxz
into
adc
rol
clc
mov
cdq
into
or
clc
ins
mov
pop
pop
and
mov
arpl
push
sub
jmp
pusha
arpl
rol
mov
repz
je
xor
ja
lods
(bad)
mov
repnz
pop
cmp
jecxz
mov
jb
jo
loop
(bad)
leave
cwde
(bad)
push
jnp
cs
jmp
mov
daa
pop
pop
or
push
rol
cdq
ror
stos
shl
popf
test
jno
pop
mov
or
xor
and
cmp
fidivr
ins
call
jl
pop
repnz
movs
out
clc
addr16
or
xchg
loopne
arpl
arpl
sbb
sbb
xchg
xchg
mov
popa
cmp
ja
mov
stos
lods
fstp
div
add
or
push
push
push
cmp
mov
xchg
shl
jne
cmp
and
cmp
xchg
fadd
sub
pop
jmp
push
add
jae
sti
retf
push
mov
mov
inc
jne
push
push
out
iret
mov
ins
pop
js
xor
imul
xor
jno
dec
call
cmp
push
sub
(bad)
sti
lods
mov
mov
mov
jnp
jle
pushf
into
xchg
(bad)
movs
aam
dec
sbb
in
xchg
ret
xchg
rcl
sub
loope
iret
mov
fs
jo
mov
out
push
add
push
cmp
mov
outs
add
pop
jp
leave
(bad)
rcr
enter
js
hlt
movs
fidiv
jne
cmp
jnp
jae
jo
xchg
scas
ins
das
pop
push
jno
adc
push
push
add
imul
xchg
xchg
nop
ret
loop
retf
cmp
or
jmp
int3
jge
aas
jle
out
into
mov
adc
dec
adc
mov
mov
mov
fdiv
enter
pop
sub
rcl
out
popa
data16
loopne
sti
call
jmp
xchg
mov
mov
jno
xor
xchg
xchg
dec
bswap
not
dec
cmp
xor
mov
mov
imul
stc
cmp
test
cwde
push
call
mov
inc
ss
adc
sub
(bad)
fbstp
stc
xchg
jmp
and
imul
adc
xlat
xchg
mov
test
lock
sahf
mov
jbe
xor
(bad)
xchg
out
int
out
popf
push
aas
push
cmp
push
push
adc
cmp
dec
leave
(bad)
jmp
jecxz
cmc
pushf
call
fs
xchg
ret
stos
ret
mov
movs
fisttp
out
fiadd
xor
fmul
or
sub
ror
shl
jg
push
dec
add
popa
pop
sub
ss
std
stos
clc
sbb
in
adc
inc
xor
call
scas
stc
(bad)
ror
xor
adc
in
lods
cli
test
sahf
cmc
mov
bound
mov
or
stos
sub
xchg
jg
sbb
into
add
dec
or
arpl
pop
stos
je
pop
in
jae
cld
movs
shr
imul
stos
sbb
push
sbb
dec
sub
push
repz
xchg
int3
lahf
fimul
iret
mov
sti
mov
imul
xor
pop
xor
jne
ja
(bad)
div
clc
bound
loope
push
in
leave
inc
adc
add
inc
pop
adc
or
xor
sub
fwait
xchg
sub
xlat
cmp
dec
sbb
call
sbb
jge
cmp
data16
dec
and
sbb
sbb
and
push
add
ins
or
add
adc
pop
sub
dec
mov
mov
neg
or
add
dec
rsqrtps
mov
std
xchg
(bad)
out
adc
adc
pop
push
dec
fstp
xor
pop
icebp
xchg
fcomp
clc
fwait
in
mov
add
jl
pop
mov
xor
push
(bad)
nop
int3
sbb
and
mov
lds
call
jo
inc
cli
xchg
popf
stc
xchg
repnz
into
mov
stos
out
xchg
sahf
int3
cmp
xchg
ror
rcr
or
ins
push
dec
sbb
push
gs
xor
push
pop
and
mov
xchg
jnp
xor
sub
cmp
adc
std
or
inc
adc
mov
lods
cld
mov
icebp
test
push
push
cmp
mov
div
mov
or
sbb
adc
subps
iret
xchg
cld
mov
movs
loope
jp
call
ja
push
cmps
add
dec
adc
push
push
pop
jg
add
jns
adc
cld
std
xchg
fsub
and
jmp
neg
add
dec
fimul
inc
adc
test
mov
scas
js
add
dec
or
xchg
mov
add
and
mov
out
out
rol
and
xchg
mov
in
in
add
mov
and
ficomp
push
es
lods
jecxz
sti
sbb
inc
sbb
xchg
ror
call
dec
div
cmp
cmp
add
test
push
mov
pop
mov
cwde
fstp
mov
xchg
out
mov
cli
mov
fmul
mov
sub
or
jno
ret
jecxz
fcomp
rcl
xchg
aam
outs
(bad)
cs
dec
push
pop
ss
add
iret
sbb
js
(bad)
loope
fidiv
or
je
jno
or
mov
outs
push
push
xor
push
mov
add
push
dec
cld
call
cs
sbb
mov
mov
fidiv
mov
iret
xchg
ja
(bad)
in
outs
jo
inc
add
xor
imul
fisubr
in
pop
jle
cmp
inc
in
push
pop
dec
outs
aas
jnp
jne
ret
(bad)
scas
out
mov
repz
aad
int3
and
pusha
sub
loop
int
inc
dec
pop
pop
add
ins
cmp
call
push
add
xchg
loopne
aad
aad
cs
sbb
es
ja
push
ss
sub
push
jne
jle
pop
nop
cmp
sbb
dec
lock
dec
sub
cmps
pop
jecxz
enter
jg
dec
sbb
shl
pop
sbb
add
mov
xchg
retf
sub
fwait
xlat
mov
adc
jg
pop
mov
push
push
outs
loopne
idiv
call
mov
pushf
sar
fs
sbb
lods
call
adc
lock
mov
mov
lea
jp
and
es
ss
push
mov
xor
adc
inc
adc
aam
in
pop
pop
loope
ret
xchg
mov
arpl
inc
repz
pop
jno
div
outs
add
hlt
mov
aas
jnp
inc
shl
in
xchg
(bad)
xchg
call
jnp
push
sub
push
sub
jns
(bad)
shl
inc
in
push
sbb
pop
sbb
inc
sti
test
xchg
std
mov
ficomp
cdq
cmps
cld
mov
in
push
out
mov
(bad)
add
in
scas
sbb
push
ss
pcmpeqw
inc
movs
call
pushf
push
adc
cmp
(bad)
scas
(bad)
jae
push
mov
and
in
pusha
adc
mov
or
fwait
enter
std
xchg
dec
push
pop
cmp
mov
mov
xchg
cld
xchg
sti
add
add
xor
ins
xor
push
pop
add
mov
jge
push
ins
or
(bad)
mov
mov
ins
ds
sahf
jmp
into
xchg
in
inc
add
dec
pop
inc
aas
sub
jbe
xor
int
fist
ins
sub
xor
mov
xchg
out
cwde
aam
clc
lods
inc
sub
jo
dec
mov
xchg
leave
sahf
push
xor
inc
adc
test
cwde
shl
add
cmps
iret
lods
mov
and
(bad)
fcomp
pop
mov
outs
das
pop
xchg
int
cli
adc
js
dec
push
push
adc
mov
test
pop
adc
pop
add
out
xor
mov
xchg
fadd
jns
cmp
xor
add
xor
push
push
loopne
add
inc
mov
iret
outs
and
jb
(bad)
call
call
icebp
stos
sti
nop
retf
popa
sub
push
sbb
scas
test
or
popa
sbb
cdq
fistp
fbstp
fmul
(bad)
nop
cmps
mov
cwde
imul
fst
lock
aaa
sbb
cmp
dec
clc
sahf
iret
add
jle
pop
sub
sub
pop
push
push
cmp
pop
sbb
push
adc
outs
aas
push
add
sub
dec
sbb
ds
cmp
pop
sbb
jno
pop
or
mov
nop
mov
add
or
push
pop
adc
jl
jle
cmp
sub
mov
lock
add
data16
es
jne
mov
push
test
push
lock
int3
mov
mov
sub
push
adc
pop
scas
mov
mov
jns
sub
cld
lods
fmul
imul
lock
popa
add
dec
(bad)
push
aas
jnp
pushf
ret
adc
xchg
(bad)
popf
mov
mov
and
sub
cs
int
lahf
jmp
push
in
pop
inc
in
mov
sbb
inc
add
mov
add
ss
scas
cmc
mov
sub
add
es
sbb
shl
shr
add
ret
cmps
aad
jo
sbb
jmp
xchg
ret
push
mov
sub
es
push
xor
bound
in
div
xchg
mov
jecxz
xchg
sbb
dec
sbb
dec
cmps
out
(bad)
mov
xchg
xlat
mov
lahf
mov
or
and
sbb
sub
sub
lds
ins
sbb
je
cmp
jecxz
int
out
popf
inc
dec
adc
inc
adc
mov
(bad)
enter
adc
ins
cmp
mov
dec
aas
dec
inc
sub
jp
pop
sbb
dec
adc
or
call
(bad)
fisttp
pop
sbb
fwait
call
ss
rcl
repz
mov
sub
push
or
shl
cmps
je
jl
imul
mov
mov
xchg
shr
xchg
fsub
or
and
pop
jg
es
sti
test
mov
cld
cdq
fld
inc
or
inc
add
or
out
ins
loope
(bad)
xlat
xchg
test
push
pop
cmp
sub
add
sub
add
pop
cmp
ins
and
retf
sbb
push
out
lds
arpl
dec
xor
and
jmp
repnz
and
es
xor
rol
adc
cmp
ret
pop
xor
cmp
xchg
jmp
xchg
popf
mov
sbb
inc
pop
adc
push
inc
add
mov
xchg
inc
cmp
inc
add
cmp
or
push
adc
pop
adc
and
frstor
jnp
and
ror
mov
cmps
(bad)
enter
sub
jle
call
mov
fisttp
fdiv
xchg
out
mov
je
xor
mov
xchg
test
push
or
(bad)
out
mov
fwait
mov
out
jo
xchg
scas
div
rcl
xor
aad
test
pushf
mov
sbb
mov
lods
cmc
mov
xor
test
sahf
outs
push
and
imul
cmps
out
cwde
stos
cli
xchg
push
jmp
jle
push
hlt
xchg
mov
jmp
xchg
(bad)
popf
sub
inc
add
rcr
sub
push
push
ja
jb
jp
arpl
dec
div
cmp
adc
mov
xchg
shl
scas
cli
mov
ins
cmp
add
fimul
scas
mov
xor
and
lods
dec
and
lds
jo
test
repnz
pop
sub
adc
aaa
hlt
movs
les
jle
loop
retf
xchg
(bad)
fwait
dec
and
ins
cmp
sbb
std
xchg
xchg
jno
repnz
scas
imul
add
js
in
test
adc
sbb
(bad)
rcl
and
inc
sub
mov
pop
inc
xor
inc
adc
pop
jmp
mov
dec
in
retf
popf
cli
aas
mov
gs
push
adc
dec
out
xchg
in
and
das
jne
arpl
sar
scas
out
mov
in
or
js
jle
push
cs
ret
bound
fwait
out
mov
mov
adc
clc
mov
bound
push
test
adc
sbb
dec
sbb
mov
xchg
jp
pop
sub
test
jle
push
pusha
mul
pop
ret
jb
pop
out
test
repz
jmp
enter
ret
push
dec
or
push
xor
inc
sbb
xor
ja
ja
inc
or
and
imul
or
inc
ss
cmp
fnsave
ins
loope
push
adc
add
jbe
scas
sti
jp
pop
adc
data16
pop
xor
and
adc
push
pusha
sub
jp
sub
pop
push
pop
sbb
cmp
adc
popa
cmp
ficom
pop
adc
lods
out
mov
mov
and
dec
add
rcl
add
push
and
mov
mov
add
cs
cmp
repnz
sbb
or
cmps
jmp
dec
in
rcl
mov
mov
frstor
ret
mov
push
add
and
xchg
out
lds
and
outs
loopne
(bad)
cmp
sub
mov
sti
aaa
inc
cmp
push
int3
aam
sbb
lods
retf
call
fstp
enter
mov
aam
imul
xor
xchg
call
(bad)
popa
add
retf
pusha
adc
pop
movs
or
push
arpl
jnp
xor
outs
movs
loop
int3
lahf
mov
xchg
mov
nop
fsubr
cmp
std
add
mov
xlat
xchg
cli
mov
mov
lea
ja
push
mov
fwait
iret
xchg
inc
inc
adc
daa
fmul
dec
and
push
mov
xchg
les
leave
ret
test
mov
mov
loopne
test
imul
xchg
dec
cmp
pop
and
adc
retf
in
imul
mov
sahf
movs
ret
popa
(bad)
mov
or
dec
pop
not
(bad)
leave
arpl
repz
push
inc
or
ds
sub
dec
sub
jp
dec
or
push
pop
ret
shr
test
enter
xor
dec
mov
push
sub
jge
rcr
sub
inc
cmp
lahf
xor
daa
push
add
fstp
or
icebp
dec
mov
in
popa
sti
scas
pop
das
jno
dec
cld
scas
jecxz
sub
(bad)
xchg
out
mov
xchg
loope
rcl
add
call
mov
mov
mov
inc
sbb
out
(bad)
cli
mov
shl
jl
scas
leave
push
aas
pop
das
inc
pop
jecxz
push
jl
mov
cwde
cmps
pop
push
push
pop
out
dec
sbb
xchg
mov
add
xchg
push
add
xchg
ret
mov
mov
add
pop
sbb
adc
fwait
data16
int
loop
ret
xchg
loope
inc
cs
adc
mov
add
scas
cwde
lock
in
mov
xchg
ret
outs
mov
xchg
retf
xchg
aam
fild
inc
sbb
jle
inc
loopne
xchg
xchg
rol
jl
loopne
cwde
fldenv
hlt
inc
adc
and
sbb
xor
cmp
jmp
jo
or
add
out
xchg
sar
pop
in
inc
add
push
ds
sbb
dec
cmp
mov
or
mov
test
(bad)
movs
repnz
into
jb
rcr
rcl
mov
popf
fisubr
push
into
rol
or
add
inc
xchg
imul
lods
std
mov
sahf
inc
aaa
pusha
pop
retf
ror
xchg
movs
retf
ins
sbb
xor
xchg
lds
mov
scas
sti
jb
jmp
mov
jbe
pop
in
mov
cld
pusha
sub
and
push
pop
ss
cmp
inc
push
add
add
adc
je
test
mov
ins
in
xor
mov
test
xchg
sbb
sbb
lds
ficomp
pop
dec
adc
push
and
repz
dec
pop
dec
cmp
adc
mov
mov
je
pop
mov
mov
add
mov
pop
or
add
xor
or
dec
ret
dec
or
mov
(bad)
fst
imul
push
and
sbb
inc
mov
adc
int
cmps
or
jg
jle
push
pop
and
out
shr
cmps
mul
xchg
sar
inc
sub
pop
mov
jmp
pop
aas
jno
and
repz
cwde
test
aas
test
mov
add
dec
out
movs
jp
mov
dec
pop
pop
cmp
arpl
call
daa
xor
es
cmps
xor
push
out
sar
psraw
lock
mov
cmp
jle
inc
loopne
xchg
les
sti
mov
push
pop
mov
push
sub
icebp
mov
xchg
ror
icebp
mov
stos
mov
mov
mov
pop
ss
sub
sub
dec
jecxz
xchg
(bad)
mov
arpl
push
pop
jbe
dec
mov
xchg
lds
pop
sbb
add
sahf
iret
test
add
sar
popf
icebp
movs
in
mov
je
data16
bound
mov
(bad)
fdiv
xor
jne
inc
adc
dec
loopne
not
inc
xor
ret
imul
sub
inc
push
pop
call
rol
mov
popf
test
dec
sbb
pop
std
aam
shl
mov
fidivr
ins
aas
pop
(bad)
shl
xchg
pop
ins
add
mov
and
outs
push
xor
mov
add
popf
aas
inc
add
stos
(bad)
mov
push
mov
test
aaa
push
or
icebp
mov
ret
(bad)
in
jae
push
sbb
add
sub
mov
scas
cmps
scas
shr
ds
cmp
mov
call
mov
and
jmp
sub
loope
jne
push
pop
and
dec
sbb
jecxz
mov
cmp
fwait
in
lods
repnz
leave
bound
fidivr
ret
mov
mov
icebp
xchg
cmps
lock
sub
into
mov
mov
mov
rol
mov
jne
sub
jno
push
in
push
and
pop
pop
es
fnsave
loopne
push
add
pop
adc
fdiv
leave
(bad)
sti
mov
nop
ret
xchg
xchg
nop
shl
cmp
jo
stos
cli
xchg
mov
jmp
aam
out
mov
lock
int
in
and
add
ins
cmp
aas
pop
jns
imul
cli
sbb
ins
cmp
xchg
loop
mov
fcomp
sbb
ins
pop
dec
ins
sub
jl
ja
and
xor
xchg
rol
(bad)
cmc
scas
js
jl
jp
push
xor
xor
and
jp
pop
add
push
xor
push
pop
popa
sub
pusha
xor
mov
xor
and
pop
push
and
push
sbb
mov
ror
(bad)
scas
fimul
rol
dec
jecxz
call
popf
fadd
sbb
or
leave
lahf
fild
aad
xchg
mov
test
adc
jmp
mov
lods
les
inc
add
pop
sbb
loopne
in
mov
jecxz
mov
out
mov
mov
dec
and
xor
icebp
inc
adc
sbb
xor
jb
push
fcmovnu
xchg
shl
out
cmc
and
mov
not
mov
loopne
fild
test
mov
out
pusha
cmp
fistp
aad
mov
out
aaa
jne
inc
push
xchg
sar
push
sbb
mov
mov
je
call
je
push
mov
jp
and
clc
push
sbb
push
loopne
jmp
push
dec
adc
mov
cdq
jg
or
dec
pop
dec
or
pop
pop
sub
in
mov
xchg
ret
push
std
test
and
pop
sub
dec
sub
pop
xor
js
inc
mov
adc
inc
ss
pop
mov
loopne
in
int3
mov
in
cdq
leave
or
pop
jb
mov
xchg
(bad)
aad
ret
(bad)
xchg
loop
scas
(bad)
repz
pop
sub
pop
cmp
mov
sub
lds
push
test
pushf
out
jnp
inc
and
enter
mov
xchg
fldenv
fs
adc
dec
sbb
add
sti
enter
(bad)
or
inc
ds
je
dec
out
icebp
sub
aas
jae
push
or
idiv
mov
mov
mov
stos
mov
fisttp
into
xchg
shr
mov
mov
call
popf
repz
sahf
adc
sub
xor
dec
or
inc
adc
or
jl
pop
adc
les
scas
leave
mov
sbb
in
arpl
je
push
adc
jge
(bad)
sub
pop
mov
aad
cmovnp
add
ror
adc
neg
clc
mov
ror
dec
cmp
les
fbstp
mov
add
inc
pop
inc
xor
and
and
retf
outs
fst
cmps
ins
sub
pop
aas
imul
scas
cld
mov
dec
or
pop
mov
cmp
pop
neg
out
rep
clc
xchg
dec
sbb
pop
xor
gs
lock
mov
pop
xor
inc
adc
fmul
pop
fisubr
pop
mov
mov
mov
mov
inc
pop
jno
je
call
fsub
ins
jecxz
ret
mov
pusha
add
push
lds
dec
sbb
shl
gs
fbstp
jnp
pop
mov
mov
jecxz
(bad)
xchg
mov
or
(bad)
mov
mov
inc
xor
xchg
lds
xor
ins
sbb
xor
push
clc
stos
rcr
ja
call
aas
dec
loope
int
repz
into
mov
jnp
push
out
cmp
mov
cwde
fistp
(bad)
in
adc
dec
adc
inc
repz
popf
lds
out
jp
jae
outs
stos
rcl
lods
(bad)
scas
xlat
stos
fild
push
mov
mov
cmp
(bad)
fdiv
cmp
cdq
leave
lods
lods
les
lds
out
aad
cmp
adc
sbb
aas
in
and
fwait
mov
cmps
stc
mov
and
and
pop
adc
movd
pop
cmp
adc
push
movd
pop
push
ds
mov
mov
repnz
aaa
dec
push
push
scas
stos
enter
cmp
jo
push
adc
push
adc
jge
push
cmp
out
inc
sahf
ficom
or
dec
lock
sub
sub
and
scas
push
adc
and
pop
or
jns
ret
arpl
push
sbb
pop
lock
retf
sqrtpd
push
add
call
cmps
shl
dec
sbb
dec
xor
ret
mov
cld
mov
outs
test
xchg
cli
pushf
(bad)
mov
push
and
and
mov
mov
retf
call
jne
js
dec
scas
fadd
clc
mov
xor
int
jecxz
scas
shl
pop
cmovns
mov
xor
xor
fs
dec
or
add
xor
ins
jmp
inc
mov
arpl
adc
jbe
push
adc
and
pop
cmp
rcl
retf
call
dec
clc
xchg
std
xchg
out
sbb
inc
pop
in
mov
and
movs
clc
xchg
scas
in
lahf
movs
inc
loope
leave
xchg
push
sbb
jb
xchg
call
(bad)
outs
daa
retf
mov
aas
dec
and
jl
stc
mov
popa
mov
sti
popf
mov
outs
sub
or
leave
ins
cs
cmp
retf
mov
sahf
in
add
dec
pop
jge
push
and
adc
xchg
xchg
ror
inc
loope
dec
xor
jle
jle
sar
sahf
iret
mov
jmp
outs
adc
fst
movs
mov
push
push
pop
sbb
jo
xchg
ret
sub
ss
push
dec
push
jl
inc
das
inc
and
jg
jge
lods
(bad)
mov
ss
les
sub
jbe
cmp
cmp
sti
jp
lds
je
dec
in
dec
dec
cmp
(bad)
mov
stos
fisubr
fs
hlt
sbb
pop
adc
pop
cmp
sbb
mov
std
mov
sub
(bad)
aad
aad
mov
xchg
retf
push
mov
lock
inc
cmps
mov
mov
test
cmp
aaa
inc
push
into
dec
sbb
add
pop
cs
or
hlt
inc
xchg
test
mov
cmp
mov
fwait
mov
mov
scas
mov
cmps
stc
cwde
popa
sbb
inc
adc
scas
(bad)
mov
or
dec
mov
pop
push
sub
pop
div
mov
push
(bad)
test
mov
jl
dec
stos
les
fist
aam
test
add
sub
pushf
fistp
xchg
rol
out
xchg
(bad)
test
stos
sbb
mov
stos
out
outs
clc
mov
mov
mov
xchg
xchg
call
mov
es
clc
mov
imul
rcl
mov
cmps
call
cmp
imul
push
mov
(bad)
fisub
adc
cld
test
clc
cdq
in
stc
push
push
xor
push
push
outs
stos
xlat
xchg
ret
xchg
ret
mov
(bad)
movs
int
xchg
retf
(bad)
mov
shr
inc
pop
jnp
or
push
cmp
jmp
xchg
xlat
jns
sub
jo
ja
push
repz
addr16
xor
jb
push
add
jbe
add
jg
jbe
push
loopne
fisttp
xor
dec
xor
cmovnp
movs
in
stc
scas
fistp
mov
mov
add
mov
mov
into
push
dec
adc
pop
pop
inc
push
jnp
retf
xchg
aad
hlt
stos
sti
xchg
(bad)
adc
jecxz
iret
xchg
std
nop
aam
out
stos
out
(bad)
jae
movs
mov
(bad)
xchg
aam
out
fistp
mov
inc
sbb
stos
xchg
fbld
movs
mov
add
xchg
cld
cmps
repz
jmp
pop
loopne
hlt
scas
(bad)
lahf
push
xor
xor
push
in
cmp
jp
jbe
pusha
aas
pop
mov
pop
outs
or
nop
jnp
dec
add
into
fs
outs
mov
sbb
int3
xchg
shl
dec
cmp
test
inc
add
mov
sbb
jle
cmp
movs
int3
mov
(bad)
xchg
xchg
(bad)
les
xchg
shr
jecxz
data16
jmp
or
popf
fstp
add
test
mov
mov
mov
adc
gs
outs
xor
adc
jae
and
xor
jecxz
dec
scas
jecxz
mov
cli
cmp
mov
mov
lahf
mov
mov
(bad)
fild
(bad)
adc
pop
push
xchg
cdq
lods
rol
retf
cli
lods
fsub
jl
dec
sbb
jl
clc
xchg
fsubr
nop
cmc
scas
push
cmps
out
(bad)
stos
dec
push
push
pop
es
out
call
fist
test
mov
fstp
jp
inc
inc
int3
mov
mov
mov
sahf
shr
enter
cdq
(bad)
mov
retf
arpl
pop
pop
imul
imul
hlt
mov
in
xchg
movs
mov
ret
cmp
cdq
int3
mov
out
fwait
int
cmps
cmps
icebp
andps
jo
not
mul
ss
sbb
aas
dec
xor
sub
imul
xchg
retf
popf
mul
or
mov
mov
mov
fisubr
stos
xlat
inc
sub
jnp
int3
and
inc
xor
dec
push
pop
sbb
jmp
ds
sub
aas
pop
sbb
hlt
test
jae
inc
out
xor
lds
xlat
xchg
jl
mov
adc
in
pop
lds
jno
imul
aad
jb
mov
mov
jb
outs
in
sub
cdq
jl
mov
outs
sub
jb
int
and
push
jge
retf
pushf
fnstsw
add
ja
adc
popf
leave
xchg
aad
hlt
dec
movs
idiv
les
outs
arpl
xor
fstp
aam
jmp
data16
pop
sub
adc
and
jne
push
pop
jl
iret
push
pop
sbb
and
inc
or
fnstenv
data16
scas
cmc
scas
jne
jmp
mov
cs
add
pop
shl
aaa
imul
lds
adc
push
sbb
jge
ja
inc
add
push
jnp
dec
sbb
inc
sub
aas
jns
push
les
jle
cmp
sbb
pop
or
dec
or
fmul
or
sbb
or
popa
or
(bad)
into
cmps
test
mov
cli
mov
shl
rcr
xor
js
pop
adc
push
mov
cmp
lods
(bad)
nop
int
scas
xor
pop
in
icebp
mov
test
and
add
inc
cmp
cmps
fiadd
sahf
out
stos
fcom
dec
sbb
pop
bswap
inc
xor
xchg
(bad)
xor
push
xchg
adc
push
dec
call
mov
pop
push
push
pop
es
adc
std
mov
mov
jns
movs
xlat
cmp
jno
mov
jae
inc
pop
cmp
pop
push
adc
inc
sbb
pushf
fnsave
cld
mov
cmp
in
xchg
fidiv
fstp
call
dec
adc
pop
repz
push
aad
inc
or
xchg
mov
into
fidivr
ror
mov
call
inc
pop
pop
lds
ins
sbb
pop
sbb
jb
pushf
neg
cmp
ret
rol
fcomi
call
ror
pop
push
pop
mov
xchg
shl
das
pop
or
pop
adc
daa
dec
mov
out
stos
cmps
(bad)
imul
scas
jl
push
loopne
into
(bad)
shl
sar
mov
mov
loop
hlt
xchg
inc
mov
pop
das
outs
xor
outs
pop
dec
daa
inc
aaa
fdivr
xchg
aam
int3
pop
sbb
jle
xchg
jl
cmc
mov
sub
bound
imul
and
add
ja
(bad)
std
stos
movs
out
mov
xchg
enter
sbb
scas
out
push
push
nop
jno
push
add
xor
jb
jbe
and
dec
sub
int3
outs
sub
in
mov
stos
jmp
and
and
or
retf
loopne
shl
inc
cmp
push
cmp
and
push
pop
sbb
xor
fstp
or
mov
lds
xchg
lock
pushf
shr
mov
jns
mov
add
pusha
add
dec
aas
jb
mov
cmp
mov
mov
add
dec
or
stos
ror
ret
scas
out
mov
mov
outs
sub
or
aaa
sub
xor
dec
push
icebp
push
jg
ret
xchg
(bad)
mov
xchg
rcr
mov
xlat
fs
movs
xlat
lea
dec
cmp
mov
cmps
ret
outs
cs
aaa
adc
imul
jmp
dec
pop
das
jl
pop
jmp
or
jp
lock
xlat
(bad)
into
pusha
add
dec
push
and
ins
sub
dec
push
imul
inc
xor
call
loop
push
add
loope
mul
and
cmp
fisubr
in
lds
ds
in
movs
fimul
maskmovq
test
xlat
xchg
movs
push
sbb
je
add
jge
stos
sti
mov
xchg
leave
outs
or
cmps
out
xchg
jmp
mov
mov
pop
hlt
mov
mov
inc
outs
(bad)
in
test
push
push
xchg
nop
mov
(bad)
imul
clc
test
add
imul
gs
push
mov
test
mov
in
mov
jle
call
jmp
rcr
aam
imul
jecxz
out
scas
fcom
in
aas
xchg
rol
rcr
dec
call
jge
dec
sbb
push
cmp
jp
and
dec
or
inc
or
stos
cld
xchg
dec
push
sbb
and
mov
iret
or
outs
sub
cmp
and
cmp
xor
cli
mov
inc
(bad)
mov
stos
pushf
cld
mov
pushf
int
mov
mov
sbb
xor
inc
lods
ret
pushf
shr
movs
loope
inc
div
mov
xchg
ret
pusha
or
cmc
test
mov
sbb
pop
xchg
jp
inc
add
pop
pop
dec
pop
jo
aas
push
nop
mov
pop
(bad)
mov
sti
mov
es
push
daa
jb
and
lahf
neg
(bad)
adc
jno
pop
mov
push
jb
out
dec
ss
add
hlt
xor
push
shl
arpl
push
es
mov
aad
test
mov
hlt
mov
push
sbb
cmp
adc
dec
cmp
data16
sbb
loope
mov
fistp
push
pop
inc
xor
rcr
adc
jbe
imul
or
pusha
test
pop
mov
cdq
rcl
(bad)
cmp
dec
add
cld
mov
mov
push
sbb
aad
imul
add
arpl
sub
jae
jg
jnp
add
pop
mov
dec
in
aam
lock
mov
out
aam
push
gs
outs
jecxz
sar
or
in
sbb
cdq
mov
mov
push
push
test
mov
cmp
jmp
pop
repnz
test
out
xchg
cmp
lds
inc
mov
scas
lock
repz
and
retf
jno
jnp
jo
pop
sbb
sub
(bad)
cmp
mov
mov
mov
scas
aam
lds
push
add
lods
fcomp
pop
je
retf
mov
jmp
adc
sti
pop
adc
jne
imul
rcr
(bad)
cdq
test
push
(bad)
mov
outs
ds
in
and
mov
iret
sahf
neg
stos
fist
into
mov
mul
sub
jge
clc
mov
pop
packssdw
add
fdivr
mov
js
lock
mov
sbb
sbb
or
ja
mov
xchg
fwait
sub
xchg
pop
add
xor
jl
adc
test
pop
or
fidivr
retf
lahf
hlt
pushf
jmp
push
test
call
adc
jne
jae
push
aaa
jbe
adc
add
cdq
cli
(bad)
fisttp
mov
cdq
test
clc
inc
das
pop
or
push
int3
loope
shl
xor
sbb
fisubr
int
and
(bad)
out
call
xchg
loop
sti
cwde
icebp
movs
push
ja
dec
pop
pop
or
cmps
push
and
pop
sub
push
and
test
out
or
loope
mul
pop
and
push
add
and
stos
lock
mov
mov
inc
(bad)
aaa
and
or
outs
sbb
dec
paddd
adc
pop
bound
int3
mov
jg
sahf
leave
mov
ss
and
pop
cmovns
mov
call
loop
into
(bad)
into
fist
pause
out
div
int3
mov
pop
push
inc
adc
push
add
leave
xchg
sar
mov
pop
pop
pop
sbb
ds
or
pop
push
jg
jp
mov
mov
fs
ja
jne
into
cdq
jecxz
cmc
mov
mov
add
mov
xchg
ret
bound
inc
adc
jb
xor
push
jg
inc
add
mov
(bad)
in
xchg
cwde
xchg
mov
mov
icebp
imul
test
call
jb
cwde
(bad)
mov
xor
jp
add
pop
loop
cmc
mov
xor
xchg
lds
cmc
pushf
jmp
fstp
aad
fidivr
cmp
pop
sbb
xchg
inc
push
push
ds
or
popa
sbb
jbe
pop
pop
sbb
sbb
(bad)
lahf
fild
xchg
out
int
das
arpl
std
xchg
mov
sub
jo
jnp
imul
out
scas
push
inc
mov
jne
mov
sub
push
add
fcomp
test
comiss
inc
pop
push
adc
jb
xor
adc
cdq
in
mov
push
or
jg
iret
adc
push
or
dec
or
push
cmp
push
(bad)
scas
lds
call
pop
push
es
sub
pop
nop
(bad)
jne
adc
rcr
popa
adc
jnp
inc
gs
test
mov
pusha
out
fwait
int3
mov
scas
mov
in
div
pusha
sbb
enter
mov
sar
push
es
xor
sbb
imul
jne
idiv
ins
adc
loopne
neg
push
inc
cmp
push
pop
xor
inc
xor
imul
lods
mov
xchg
out
loop
cmp
xchg
inc
and
pop
sbb
imul
and
ss
and
test
int
in
mov
inc
(bad)
xchg
push
pop
in
ret
movs
cmc
adc
(bad)
out
mov
fild
and
add
into
ss
repz
inc
add
dec
sbb
pop
add
xchg
push
add
movs
mov
ret
xchg
adc
or
stos
stos
jmp
mov
stc
in
movs
pop
or
outs
and
xor
pop
sbb
pop
jnp
int
(bad)
mov
daa
push
and
das
sbb
pop
jp
shl
push
call
mov
push
add
retf
jp
pop
inc
cld
stos
out
out
mov
les
ins
aaa
addr16
pop
fisttp
mov
push
jnp
pop
or
mov
cmp
pop
xor
and
shr
ins
outs
sub
inc
pop
inc
add
push
adc
(bad)
pushf
ja
stos
enter
cld
(bad)
jne
mov
hlt
movs
jp
cmps
into
mov
push
fs
add
and
sbb
pop
sbb
pop
or
(bad)
and
imul
dec
dec
int3
movs
loope
(bad)
mov
or
jge
cli
mov
imul
daa
and
push
or
push
cmc
mov
cmp
xor
fisttp
mov
je
inc
xor
xor
mov
mov
lea
inc
add
xor
scas
loop
les
ret
mov
out
ja
arpl
je
jne
sub
pop
add
enter
lahf
test
mov
test
xchg
cli
scas
jns
jnp
dec
adc
adc
jle
dec
aas
push
or
cmp
push
pop
jl
test
std
movs
dec
or
or
and
fldcw
movs
dec
and
push
add
inc
shr
div
cmps
es
inc
xor
loop
xchg
popa
sbb
sbb
(bad)
xchg
sub
ja
pusha
cmps
stos
into
lahf
jmp
xchg
mov
and
or
ds
sub
xchg
leave
mov
mov
inc
adc
and
sub
out
jns
ja
xor
imul
leave
ror
pop
lahf
into
sbb
jle
cmp
call
or
imul
mov
sub
outs
push
(bad)
add
jb
retf
add
addr16
and
jae
xchg
mov
loopne
push
cmp
push
and
inc
movlps
dec
(bad)
leave
outs
or
sub
ret
pop
and
pop
outs
or
xchg
ja
mov
adc
test
sti
js
push
xchg
pop
push
ror
test
(bad)
loopne
push
dec
xchg
rcr
fwait
mov
pop
in
sub
xor
movs
(bad)
sar
mov
sbb
mov
add
loop
and
aas
imul
dec
movs
fiadd
imul
sti
test
mov
fnstcw
or
imul
imul
adc
sbb
imul
or
inc
adc
dec
push
stos
repnz
or
mov
xchg
xchg
shl
mov
mov
pop
xor
pop
mov
mov
and
loopne
cmp
cmp
out
mov
leave
sub
mov
mov
rol
jg
mov
lds
sbb
leave
fst
jno
cmps
loop
aaa
jno
daa
call
ss
adc
data16
arpl
call
pop
mov
xchg
sbb
in
fistp
out
stos
movs
test
mov
adc
cmp
mov
pop
pop
sbb
cmps
imul
or
in
icebp
repnz
mov
je
das
inc
sub
xchg
(bad)
sub
mov
aas
(bad)
out
les
mov
loope
jmp
add
add
mov
pop
dec
pop
pop
ins
cmp
fistp
push
fsubr
xchg
push
dec
sub
pop
cmp
adc
cwde
(bad)
jge
mov
icebp
adc
mov
inc
cmp
inc
push
cmp
imul
fdiv
pop
stos
out
cmps
icebp
xchg
retf
xchg
jg
dec
pop
ficomp
jmp
push
cmp
jne
mov
pop
inc
mov
std
mov
jno
hlt
mov
inc
push
out
test
pop
sub
inc
mov
dec
xor
rcl
jmp
cmp
fwait
shr
hlt
mov
pop
daa
jle
imul
and
pushf
out
xlat
mov
mov
sub
gs
fwait
ror
push
xchg
rcl
cdq
cld
lods
(bad)
and
and
(bad)
mov
dec
push
push
jecxz
push
enter
and
xchg
retf
in
add
mov
nop
iret
sub
or
test
mov
xchg
fisubr
fstp
xchg
fsubr
(bad)
sub
dec
dec
or
push
add
xchg
push
dec
push
ficomp
dec
jo
push
jle
pop
es
mov
jp
push
xor
nop
jmp
div
mov
and
jge
jp
push
xor
xor
mov
stos
in
clc
mov
xchg
sar
add
jp
mov
fstp
movs
jp
pop
inc
into
mov
jmp
add
movs
es
fstp
inc
sub
jo
ror
xchg
lds
add
xchg
inc
and
pop
fcomp
dec
and
dec
jmp
sub
dec
add
ja
dec
or
push
and
in
mov
push
cmp
daa
arpl
test
vmwrite
data16
loop
and
dec
out
xchg
stc
mov
mov
movs
cmps
(bad)
mov
xchg
add
mov
mov
fnsave
loop
add
xchg
rcl
ret
fwait
adc
fcomp
mov
repnz
call
(bad)
xchg
ss
lock
out
mov
cld
cmps
adc
outs
or
jae
inc
loope
div
out
sar
jne
pop
mov
mov
xchg
stc
pop
scas
fisttp
push
cmp
jge
dec
cmp
xor
mov
adc
jb
imul
sub
icebp
sub
inc
cmp
push
pop
mov
lods
pop
or
mov
pop
sbb
xchg
sbb
mov
mov
fst
(bad)
pop
cs
fild
ss
mov
addr16
cmp
or
int3
iret
scas
fmul
mov
mov
out
lock
movs
fild
(bad)
fist
ret
xchg
mov
mov
xchg
(bad)
mov
push
sbb
cmc
and
or
push
add
popf
pop
sbb
cmp
mov
and
call
inc
adc
arpl
pop
fwait
loope
xor
leave
stos
cmp
(bad)
mov
and
aaa
push
add
sub
add
call
sub
dec
sbb
mov
sub
test
sbb
add
add
inc
adc
cdq
pop
sbb
fcmovb
mov
test
test
adc
mov
and
jmp
cmp
rol
imul
int3
test
test
pusha
xor
push
pop
movs
neg
pushf
retf
xchg
pushf
fdiv
mov
ins
push
adc
xchg
sar
adc
push
dec
push
mov
mov
lahf
test
pop
int3
mulps
mov
(bad)
sti
add
stc
sbb
rcr
pop
sbb
test
jmp
cmp
dec
add
xor
adc
xor
cmp
add
test
lahf
clc
mov
xlat
or
mov
pop
and
dec
sbb
sbb
pusha
ss
or
cmp
inc
add
enter
out
xchg
fst
mov
int
stc
adc
xchg
fisttp
jmp
stc
pop
(bad)
mov
loop
retf
mov
mov
pushf
or
xchg
sub
stos
out
mov
cmc
mov
(bad)
sahf
(bad)
sbb
pop
adc
push
and
inc
lahf
and
fdiv
pop
cmp
ficom
dec
fwait
(bad)
scas
and
mov
pop
or
jne
scas
fmul
pop
dec
xlat
xchg
lock
(bad)
int
stos
push
and
push
adc
add
jl
addr16
dec
sbb
mov
lods
ins
cmp
syscall
push
push
outs
in
aam
adc
shl
inc
cmp
je
bound
push
stos
inc
add
sub
aaa
ins
or
pop
shl
std
(bad)
(bad)
iret
(bad)
cmps
mov
retf
(bad)
sar
fwait
hlt
(bad)
out
lahf
retf
xor
mov
pop
(bad)
nop
aam
inc
fst
xchg
(bad)
(bad)
lock
aad
jl
rol
jp
inc
add
push
xlat
xchg
(bad)
out
mov
dec
adc
jge
or
pop
sub
daa
jmp
test
xchg
neg
js
dec
or
popa
cmp
jns
jle
pop
jmp
stos
fisub
ret
xchg
popf
into
lahf
clc
xchg
test
in
out
test
mov
je
repnz
mov
inc
cld
cdq
enter
ret
mov
sbb
sahf
pop
sub
jl
inc
pushf
les
and
jne
and
test
mov
mov
stos
lds
scas
inc
cmp
xchg
rol
hlt
mov
ja
xchg
push
aas
pop
xchg
mov
sbb
or
fidivr
ins
jl
movs
call
mov
mov
mov
mov
test
pop
loope
mov
xor
push
adc
rcl
jg
ret
xor
xchg
movs
or
icebp
mov
data16
sbb
sub
sbb
imul
or
mov
cmp
or
pop
push
(bad)
jmp
ffreep
repnz
adc
push
dec
jmp
es
daa
outs
jmp
jle
or
jnp
dec
test
pop
or
fsubr
xchg
sub
mov
xchg
ret
xchg
push
add
push
add
addr16
movs
icebp
out
push
sbb
jle
in
imul
sbb
stos
cld
rol
cmps
xor
out
cmps
mov
out
scas
jge
mov
dec
cmp
iret
mov
loopne
and
mov
mov
xchg
xor
rcl
pushf
mov
pop
xchg
mov
dec
pop
jl
inc
add
jne
nop
sar
mov
(bad)
out
mov
imul
mov
int
add
je
push
xor
les
test
adc
and
and
ja
dec
dec
jecxz
jge
cmp
sbb
xor
inc
and
ds
pop
sbb
add
dec
push
adc
and
pushf
leave
imul
cmp
add
xchg
movs
sub
(bad)
mov
pop
or
cmp
sub
call
or
xor
mov
mov
push
mov
mov
scas
call
adc
call
in
jmp
adc
xchg
arpl
(bad)
lock
push
push
das
cmps
loop
aaa
jno
das
mov
sbb
(bad)
jmp
dec
loope
repz
xchg
loopne
mov
pushf
int3
mov
retf
test
test
xchg
scas
xor
int3
lahf
pop
and
push
and
mov
mov
dec
adc
fisub
xchg
movs
mov
aam
(bad)
popf
out
mov
stos
repnz
and
mov
bound
mov
and
jmp
out
xchg
call
mov
mov
cli
lods
mov
std
mov
adc
rol
mov
and
leave
fwait
(bad)
test
sub
or
dec
ds
js
sbb
and
ss
adc
bound
add
push
xor
mov
arpl
pop
cmp
jmp
jle
push
cmp
inc
add
jp
aas
push
adc
aas
fisttp
dec
pop
jge
xor
dec
sub
icebp
movs
repnz
jp
pop
push
mov
cwde
and
mov
inc
add
dec
and
ret
push
sbb
popa
ins
or
movs
in
pop
or
addr16
adc
and
hlt
fild
xchg
lahf
shl
icebp
call
mov
std
mov
enter
xchg
ins
sub
cmp
call
mov
mov
push
adc
movs
sub
jns
daa
dec
popa
ss
dec
out
test
jae
push
adc
imul
or
push
pop
inc
push
fild
or
ja
shl
dec
mov
popf
shl
(bad)
test
call
daa
test
(bad)
and
stos
scas
jmp
leave
push
or
lock
adc
out
ret
mov
cwde
and
popf
aam
dec
aad
fsub
push
xor
and
loopne
scas
loop
movs
mov
xchg
stc
(bad)
fldcw
jp
jl
out
mov
cmp
inc
xor
sbb
xchg
push
xor
sbb
cmc
nop
shl
cld
xchg
hlt
mov
pop
inc
in
cwde
or
sbb
push
add
cmp
dec
sbb
sbb
inc
pop
out
mov
sahf
int
iret
out
sti
sbb
sbb
clc
pop
cmp
imul
adc
pop
je
ss
jg
inc
sbb
pop
push
jnp
ins
add
mov
icebp
mov
imul
or
jno
ss
fwait
int3
test
jbe
push
adc
ret
push
fld
jl
xor
jg
ins
imul
clc
pop
cmp
imul
sbb
jns
cmp
xorps
xchg
jmp
iret
cwde
xor
lahf
out
fbstp
inc
xor
aas
xchg
ficomp
es
dec
cmp
jno
xor
in
push
jbe
pop
in
test
mov
repnz
call
and
and
mov
add
inc
add
and
mov
dec
xchg
iret
lahf
hlt
and
adc
adc
dec
outs
imul
aas
jbe
push
das
mov
test
jne
repz
imul
scas
mov
inc
push
(bad)
xchg
push
pop
dec
and
xchg
lock
imul
rol
push
add
ss
xchg
aad
fld
and
test
adc
stc
test
mov
and
add
pop
or
pop
push
push
(bad)
aad
fisubr
stc
stos
push
je
das
xchg
ret
xchg
inc
push
push
cmp
or
mov
push
or
jno
push
adc
dec
push
pop
sub
xchg
mov
mov
xor
bound
bound
dec
push
jnp
fwait
in
(bad)
mov
mov
mov
(bad)
ret
jbe
inc
dec
adc
popa
and
popa
cmp
and
sbb
push
cli
xchg
icebp
adc
dec
push
dec
xor
dec
mov
adc
adc
pop
and
push
push
bound
inc
add
js
xor
dec
or
or
mov
test
arpl
inc
sub
pop
sbb
mov
ficomp
stos
(bad)
mov
arpl
mov
pop
xor
cmp
push
sbb
or
jp
dec
mov
pop
shl
inc
out
sbb
push
mov
sbb
xchg
mul
fcom
xor
int
(bad)
mov
int
push
add
imul
cmp
into
cmps
lds
int
out
mov
pop
cmp
aaa
jbe
mul
inc
sbb
mov
fild
div
and
inc
xor
jne
inc
add
sar
outs
push
dec
sbb
inc
cmp
jne
imul
rol
loopne
(bad)
lea
aam
outs
or
jns
push
mov
pushf
mov
push
mov
cmps
repz
xchg
sbb
mov
ss
add
adc
xor
add
or
xchg
pusha
ss
cmp
jecxz
dec
lock
mov
push
dec
or
jb
push
(bad)
scas
(bad)
movs
cmp
cmp
fcomp
cld
mov
pop
adc
jbe
pop
scas
shl
div
stos
lods
out
daa
addr16
mov
inc
das
pop
or
enter
jg
xchg
(bad)
nop
aam
xchg
in
mov
mov
pop
adc
(bad)
mov
jbe
mov
jmp
and
and
add
xor
dec
repnz
jno
fld
xchg
fild
ret
lea
imul
add
clc
cld
test
pop
add
imul
mov
stos
cld
mov
pusha
or
sahf
movs
fild
sub
outs
adc
out
add
xchg
push
add
push
sub
cmp
xchg
frstor
or
and
jnp
mov
xlat
lea
and
pop
push
sub
xchg
(bad)
inc
adc
sub
popf
fcomp
fnstcw
jecxz
aam
mov
xchg
fs
mov
lods
repnz
or
fisubr
je
inc
enter
inc
sub
fimul
or
mov
adc
xchg
xchg
in
push
push
and
div
cmp
pusha
aaa
jbe
jnp
pop
sbb
cwde
retf
cs
xor
jle
inc
pop
retf
ds
(bad)
mov
sahf
inc
cmps
out
bnd
js
pop
cmp
or
push
jl
inc
sbb
dec
(bad)
xchg
enter
ds
cld
data16
mov
xchg
jns
cld
test
pusha
hlt
mov
add
add
mov
in
fistp
jl
pop
pop
pop
aaa
std
cmp
dec
lods
std
mov
aaa
inc
add
push
scas
lahf
out
mov
fld
xchg
ret
pop
xor
in
and
xor
jl
mov
sbb
popf
and
adc
inc
cs
pop
jo
loopne
ss
push
pop
xor
dec
lea
aaa
out
add
inc
ss
mov
pushf
inc
loopne
fld
and
and
sbb
sbb
retf
xor
dec
repnz
aam
jo
inc
sbb
imul
jg
push
sbb
ret
mov
ret
in
lods
repnz
mov
dec
pop
pop
jecxz
enter
mov
pop
fisttp
sub
rcr
dec
adc
and
mov
data16
pop
sub
push
neg
pop
loopne
scas
or
jno
rcr
sub
xor
mov
jl
dec
or
xchg
mov
pusha
es
push
mov
cmp
(bad)
fsubrp
mov
and
pop
sbb
loopne
icebp
mov
or
movs
shl
mov
pusha
sbb
sub
sub
inc
cmp
ds
nop
repnz
fwait
adc
call
add
mov
nop
jmp
jle
mov
cmc
mov
test
fnstsw
outs
daa
pop
add
inc
or
mov
cmp
push
add
sbb
inc
jmp
cmp
jns
add
(bad)
push
icebp
stos
lds
push
sbb
lahf
fld
xchg
ret
mov
mov
and
shl
jecxz
repnz
adc
daa
inc
adc
sub
fistp
enter
cmps
loopne
mov
mov
shl
imul
popa
or
pushf
enter
or
jge
xchg
fnstcw
jecxz
rol
sub
pop
xor
dec
lea
add
sub
cmp
call
out
out
xchg
mov
push
add
dec
push
js
ja
bound
enter
xor
push
mov
add
(bad)
pusha
loop
xor
es
inc
add
fbstp
cld
je
imul
adc
mov
sbb
mov
inc
and
test
add
sbb
pop
mov
mov
push
cmp
scas
stc
xchg
or
xor
adc
mov
or
fdivr
repz
and
ja
inc
mov
jbe
dec
movs
push
cs
(bad)
inc
push
les
pop
or
push
push
adc
test
pop
push
sbb
int
dec
and
jno
ja
cwde
sti
mov
aaa
jae
dec
add
push
sub
dec
adc
in
out
mov
jg
stc
stos
clc
sub
std
xor
jno
ret
xor
cmp
sub
hlt
test
mov
sahf
dec
and
adc
mov
push
inc
sub
rcl
es
(bad)
lds
fimul
mov
(bad)
retf
(bad)
int
sub
outs
mov
sub
(bad)
fdiv
inc
adc
adc
mov
sub
ror
movs
or
inc
pop
dec
xor
add
cmc
fild
out
mov
ret
xchg
je
std
lods
fisttp
clc
mov
loope
ins
or
sub
enter
push
xchg
mov
sbb
mov
(bad)
mov
cmp
jg
ins
sub
pop
sbb
pop
and
fbstp
popw
pop
lds
mov
aaa
push
sub
push
push
xor
mov
addr16
iret
mov
inc
dec
adc
inc
inc
ss
(bad)
mov
stc
test
mov
mov
es
dec
test
push
sbb
jecxz
enter
mov
dec
aas
inc
or
sbb
sahf
fsub
add
sar
xchg
dec
adc
and
cmp
das
jne
aaa
xor
sub
dec
aas
push
or
ror
mov
rcl
mov
mov
lahf
outs
cs
and
add
sub
pop
inc
loop
(bad)
mov
mov
ss
or
push
ins
cmp
xor
and
adc
jb
mov
mov
jmp
xor
pop
daa
jge
pop
sbb
loopne
clc
xor
mov
(bad)
pusha
add
pop
aaa
daa
push
add
inc
xor
jne
jl
pop
adc
or
inc
sbb
pop
xor
dec
or
add
sbb
mov
mov
mov
fmul
cdq
sbb
ins
mov
jge
aaa
ds
dec
xor
fstp
dec
sbb
int
xchg
lds
loop
lods
fisub
push
add
cld
mov
cmps
mov
daa
jo
cmc
lods
loope
mov
dec
adc
add
xchg
cmps
ret
mov
(bad)
imul
in
ja
adc
lds
jmp
or
stos
jae
in
pushf
cmps
iret
xchg
hlt
mov
je
jge
push
pop
int3
ss
and
pop
or
dec
adc
jbe
rol
test
ja
jno
cld
add
jbe
jae
and
push
pop
xor
dec
mov
retf
jns
push
mov
call
jns
sbb
inc
mov
movs
loope
rcl
fmul
cdq
into
pop
fcomp
out
xchg
and
call
shl
retf
mov
add
fsubr
adc
jnp
lds
sub
les
push
es
test
cmp
jp
xchg
repnz
xor
dec
aas
addr16
xor
jns
dec
aas
jbe
(bad)
lock
jne
add
dec
xor
xchg
loopne
int
into
call
daa
mov
ins
xchg
in
mov
fsubr
lods
fimul
sti
rcr
(bad)
idiv
(bad)
add
stos
enter
iret
es
outs
aaa
push
jb
fmul
int3
popf
in
mov
sub
shl
sahf
in
lods
cld
xchg
push
jae
pop
sub
and
stos
jmp
adc
jle
imul
xchg
dec
or
sub
je
dec
mov
outs
adc
mov
jge
inc
cmp
mov
push
fbld
sub
adc
ss
sub
pop
xchg
sbb
ins
sbb
jo
bound
fstp
jae
push
pop
jecxz
xor
lahf
fistp
fimul
mov
or
xchg
ret
scas
fimul
rcl
pop
je
outs
pop
daa
popa
and
and
cld
cdq
enter
les
pusha
cmp
inc
adc
retf
mov
rol
push
sub
data16
popa
and
in
mov
xchg
sti
adc
int3
mov
jmp
cld
mov
jg
xor
dec
cmp
jne
inc
stos
sahf
sar
fisttp
pop
ss
adc
jb
pop
hlt
mov
pop
adc
sbb
jno
and
and
add
xchg
jno
test
ja
push
mov
jns
jne
mov
mov
data16
je
jo
jge
pop
loop
xchg
xor
shl
add
push
mov
retf
popf
fnstcw
ret
fs
mov
in
xchg
push
pop
repz
jb
jge
xchg
shl
dec
sbb
mov
xchg
retf
stos
enter
bound
push
mov
inc
and
add
jge
dec
adc
cmp
sub
push
popa
sbb
sbb
imul
push
adc
cmp
dec
or
adc
dec
adc
pop
ins
cmp
inc
fnstcw
loop
ins
add
sbb
pop
inc
xor
push
cmp
or
hlt
js
jge
dec
mov
outs
or
mov
data16
add
push
mov
or
jnp
push
sub
in
lock
mov
cwde
movs
mov
jo
nop
les
push
or
inc
daa
sub
xor
(bad)
pop
dec
icebp
test
mov
scas
out
pop
stos
fimul
out
mov
leave
cmps
mov
test
pushf
mov
ret
mov
push
or
sub
rep
in
iret
inc
xor
push
sub
dec
mov
scas
pop
push
es
sbb
push
std
mov
test
push
pop
adc
dec
and
jb
and
dec
cmp
push
test
popa
sbb
dec
cmp
mov
icebp
pusha
in
mov
cdq
mov
popa
lds
ret
icebp
mov
dec
pop
sub
dec
cmp
xor
push
mov
pop
pop
ret
sbb
es
or
sub
xchg
fsubr
imul
sbb
push
jmp
xchg
aad
sti
pop
(bad)
cdq
fst
cli
cdq
hlt
test
or
or
sub
test
push
cs
sub
dec
adc
dec
in
mov
push
dec
sbb
mov
aam
pop
dec
add
lods
push
inc
adc
adc
sar
ins
sub
stos
and
pop
das
(bad)
sbb
cmovb
out
fldenv
mov
jl
pop
popw
push
sbb
inc
icebp
mov
mov
mov
push
cmp
xchg
pop
adc
pop
sub
or
cld
adc
outs
sbb
popf
(bad)
dec
sbb
iret
inc
push
dec
xor
leave
lea
sub
jbe
mov
ja
popa
or
jbe
jg
daa
dec
sbb
jns
pop
xor
movs
fist
int3
dec
cmp
mov
lods
cli
dec
push
dec
sbb
mov
sbb
jle
push
add
sbb
call
ss
std
out
ror
bound
jo
pop
adc
mov
mov
or
push
sbb
ss
cmp
adc
cs
xor
(bad)
stos
jmp
sbb
inc
adc
inc
sbb
popa
sbb
pop
pop
in
les
call
xor
mov
fistp
int
fisubr
pop
sub
pop
sub
jnp
pop
stc
pop
xchg
lock
mov
cmps
in
and
ins
in
in
or
push
out
test
loopne
test
lahf
test
mov
push
xchg
jo
push
and
ins
lods
repz
test
cdq
aam
ficomp
(bad)
shl
and
movs
(bad)
jle
fsubr
fisttp
mov
gs
sbb
jge
imul
sub
movs
into
mov
js
jp
push
pop
gs
lds
outs
adc
scas
inc
add
and
pop
add
push
pop
jbe
cmp
sti
call
stc
mov
call
sar
dec
and
iret
aas
imul
jge
pop
sbb
in
ret
xchg
sti
mov
jmp
sbb
push
add
sbb
in
les
cs
xor
pop
add
inc
push
push
ds
sbb
sub
dec
add
das
imul
and
das
rol
shr
or
push
nop
and
push
pop
jl
and
rcl
bound
imul
cmp
inc
or
cmp
inc
add
xchg
and
ins
cdq
and
js
jnp
call
xchg
bound
test
test
pop
cwde
fnstenv
in
push
xor
pushf
neg
pop
cmp
(bad)
mov
lahf
out
enter
loop
push
or
js
mov
fwait
iret
mov
inc
fisub
cmp
ret
ds
in
adc
adc
js
dec
shl
inc
adc
out
jnp
je
jge
pop
sbb
push
jl
fs
mov
adc
(bad)
mov
fisttp
fistp
aad
mov
xchg
shl
int
(bad)
retf
(bad)
(bad)
mov
std
es
(bad)
fwait
adc
xor
mov
adc
imul
addr16
pop
dec
or
imul
ss
push
dec
and
cmp
cli
mov
call
jns
outs
push
jb
push
adc
xor
inc
cmp
popa
bound
add
ret
ror
cmp
jnp
push
adc
push
adc
ins
sbb
sbb
jmp
mov
rep
aad
pop
jb
push
push
push
out
aam
rcl
mov
popf
es
push
push
ret
jnp
push
repz
pop
or
out
data16
movs
hlt
pop
or
and
inc
xor
inc
mov
dec
add
out
stos
fcomp
fwait
movs
retf
or
and
adc
popf
fst
nop
std
fwait
mov
inc
loopne
shl
sbb
jle
imul
call
add
(bad)
xchg
call
sbb
inc
sub
jmp
push
or
dec
xor
jle
outs
in
mov
xchg
jecxz
int3
cmp
aad
aad
retf
dec
cmovnp
aaa
dec
push
stos
out
mov
aas
repz
pop
inc
aaa
inc
or
dec
sbb
inc
xor
(bad)
mov
mov
call
dec
adc
sub
pop
add
bound
pop
call
mov
in
mov
stc
xor
gs
mov
or
cmp
mov
pop
or
inc
pop
push
out
bound
jp
inc
fisttp
stos
ror
lods
ret
cmps
inc
jecxz
lds
std
inc
sub
or
and
push
or
and
cwde
in
mov
pop
inc
sbb
mov
cwde
sar
cmp
arpl
imul
jle
xor
lds
and
dec
in
stos
dec
fbld
mov
add
in
mov
sbb
add
lds
pop
sub
sbb
into
sahf
fdiv
shl
div
or
mov
mov
xor
loopne
test
sbb
pop
and
and
js
inc
cmp
js
dec
xchg
aaa
push
add
cmp
cli
call
rol
mov
div
dec
sbb
aaa
bound
push
add
push
add
adc
fcmovnb
movs
cmc
test
mov
xchg
inc
add
pop
add
cmp
mul
jbe
push
add
cmp
push
dec
clc
xchg
jbe
or
add
pushf
inc
je
es
pop
std
xchg
retf
cs
ins
out
rcl
inc
adc
pop
sub
inc
adc
xchg
stc
scas
cmc
call
adc
nop
repnz
jp
ja
daa
dec
mov
test
or
adc
mov
cwde
repz
cld
outs
and
push
mov
push
dec
loopne
es
adc
je
mov
sub
xchg
fldenv
fist
aaa
pop
call
lods
fnsave
sub
cmc
mov
mov
cwde
je
and
sbb
add
inc
add
push
daa
loop
pop
es
sbb
push
and
pop
sbb
ins
cmp
ins
sbb
mov
rol
mov
(bad)
rcr
pop
out
jl
dec
cmp
cmp
jecxz
lds
add
xchg
jmp
mov
push
sbb
jge
add
add
jnp
pop
jecxz
fnstcw
data16
retf
sub
inc
in
mov
cld
lods
fmul
sub
and
inc
adc
xor
push
adc
sbb
je
or
jmp
aaa
inc
movs
cmp
and
or
push
jno
jbe
cmp
mov
pop
loop
shl
lods
sti
mov
enter
jecxz
push
push
push
fsubr
mov
push
jae
pop
xor
xchg
mov
ficom
int
cld
test
xor
call
out
gs
sbb
mov
or
inc
adc
lds
jge
imul
retf
mov
popa
xor
out
mul
pop
out
mov
movs
rol
cmp
loopne
(bad)
mov
pop
scas
push
adc
push
adc
inc
out
jmp
enter
in
lds
sar
add
jecxz
aam
mov
inc
add
sbb
call
jns
imul
inc
ret
repnz
test
xchg
(bad)
mov
pop
sbb
sbb
push
repnz
imul
ins
or
retf
inc
adc
jbe
pop
call
jnp
stos
out
bound
push
add
bound
sub
mov
rol
lahf
imul
pushf
mov
mov
lahf
test
jp
pop
jmp
pop
aaa
and
stc
lods
jmp
lods
cmps
fiadd
call
sub
retf
mov
sub
mov
scas
in
push
xchg
stos
std
xchg
xlat
add
xchg
mov
mov
fist
imul
loope
shl
daa
jno
add
and
jmp
mov
fiadd
cmps
repnz
imul
fsubp
test
stos
push
out
into
imul
iret
movs
int3
mov
jle
stc
(bad)
rcl
mul
sub
xchg
fcomp
les
pop
dec
mov
hlt
or
mov
imul
fwait
cs
inc
or
mov
inc
out
lods
jnp
or
dec
movs
mov
repz
add
lock
inc
aaa
jle
add
jmp
fmul
stos
cld
cmp
xchg
shl
and
push
sbb
test
mov
andnps
dec
xchg
inc
add
out
jl
ins
mov
push
dec
es
mov
mov
arpl
outs
add
std
ret
cdq
fbld
mov
xchg
jnp
push
in
jb
push
adc
jmp
dec
adc
iret
fisubr
pop
adc
or
xchg
fimul
cs
mov
(bad)
mov
loop
mov
pop
mov
or
inc
sub
push
adc
movs
mov
and
es
adc
mov
daa
dec
xchg
adc
inc
jmp
fnsave
adc
out
cmps
fmul
xchg
lds
adc
addr16
dec
adc
stos
ret
push
aas
push
sub
mov
mov
call
dec
icebp
packuswb
outs
adc
jnp
imul
imul
xchg
push
pop
or
fst
or
jmp
aam
mov
dec
add
loope
repnz
or
inc
pop
pop
push
fdiv
mov
jne
and
cmp
and
mov
dec
xor
add
movd
mov
sbb
into
(bad)
call
das
pop
adc
pop
nop
sbb
jl
jbe
ret
mov
iret
adc
je
cmp
pushf
jmp
fnstsw
mov
sbb
repz
enter
test
add
xchg
push
add
call
and
cmp
push
repz
test
jno
out
jmp
jb
jne
xor
jmp
je
and
adc
push
fist
outs
test
daa
icebp
or
inc
cmps
mov
imul
in
stos
ficomp
xchg
inc
scas
inc
cmps
addr16
loop
sbb
xor
and
xor
and
in
fcomp
xchg
add
xchg
xchg
bound
cmp
jmp
adc
and
stc
cmp
shl
and
mov
jns
dec
cmp
jmp
mov
inc
mov
mov
sbb
mov
cmp
clc
and
cmp
int
loop
mov
into
cmp
cmp
das
jnp
xor
jge
lea
stc
and
dec
rol
or
inc
cmps
(bad)
outs
aam
test
push
cmps
inc
adc
push
int3
sub
and
(bad)
pop
or
sub
and
push
test
inc
movs
jo
mov
loop
ror
pop
idiv
cmp
push
inc
fnstcw
out
inc
leave
ss
sub
sub
mov
jb
xor
and
jmp
mov
sub
in
repnz
cmp
mov
lds
stc
dec
mov
pop
rol
hlt
das
ret
cmp
outs
int3
xor
xor
and
cld
add
das
jecxz
rcl
jp
in
test
mov
mov
(bad)
sahf
jnp
ins
fdivr
fwait
pushf
jnp
imul
stc
cs
(bad)
dec
mov
cli
xor
lods
cdq
xchg
mov
shl
adc
loop
xlat
xor
pop
mov
fisubr
in
push
arpl
and
lods
push
mov
into
pop
les
dec
or
sbb
sub
sbb
dec
test
jno
and
jmp
cmp
jb
js
dec
mov
push
in
test
or
rol
push
push
adc
mov
mov
out
dec
lods
imul
stos
outs
mov
mov
dec
cmp
fadd
(bad)
es
xlat
dec
mov
sub
ds
sbb
clc
inc
mov
int3
cmp
adc
std
pop
fldcw
cmp
lods
bound
stos
jge
inc
mov
jl
xchg
xchg
add
mov
ret
xor
ins
sti
xor
out
sub
sbb
mov
jb
jnp
sub
or
les
movs
xlat
ja
cmp
xadd
xacquire
jl
xchg
inc
aad
mov
enter
icebp
cmp
dec
mov
retf
and
sbb
inc
scas
dec
mov
and
cmp
mov
rol
(bad)
sub
pop
cmps
fs
xchg
lods
sahf
inc
mov
imul
xlat
xor
and
add
ret
movs
bound
or
shr
jmp
repz
test
ror
inc
test
adc
add
mov
mov
xchg
mov
das
push
jmp
(bad)
or
sub
test
cmp
inc
stos
xchg
aad
pop
shr
sbb
adc
retf
clc
dec
mov
ja
xchg
ins
scas
dec
and
pop
sbb
dec
and
xor
push
mov
xor
dec
mov
stos
mov
test
sub
call
mov
and
or
xor
push
adc
dec
mov
sti
xor
mov
mov
hlt
mov
jns
inc
lods
jne
fwait
mov
dec
stos
shl
pop
loopne
pop
adc
dec
mov
adc
mov
mov
out
pop
mov
jne
push
scas
mov
jnp
sub
es
xchg
ins
sub
xlat
cmp
sub
cmp
movs
mov
inc
mov
jnp
das
icebp
inc
(bad)
and
cmc
and
xchg
ins
mov
aad
out
pop
ret
mov
in
and
nop
mov
push
mov
retf
jns
pop
adc
cmps
inc
mov
iret
pop
mov
stos
imul
push
lock
cmp
sbb
int3
xor
cli
xor
push
(bad)
add
xor
pop
mov
test
cmp
ss
cmp
pop
sbb
icebp
cmp
out
pop
fisttp
les
add
(bad)
add
add
inc
fisub
jno
(bad)
fs
and
and
lods
pusha
mov
xchg
jno
add
stc
mov
sub
push
stos
jae
sahf
fwait
jae
push
push
les
jge
jo
je
adc
sub
pushf
jg
push
test
mov
pop
fdivr
pop
ror
jg
daa
adc
es
dec
cmp
lock
hlt
cmp
rol
sbb
mov
fld
cld
push
mov
js
xchg
push
jae
nop
dec
aam
enter
aam
mov
aas
pop
clc
sub
cmp
mov
xchg
jb
jg
aad
mov
scas
stc
cmp
jno
and
xchg
bound
mov
inc
movs
repnz
push
in
and
sbb
jl
popf
jle
ins
rcr
repz
mov
loopne
retf
add
cmps
std
pop
fsub
sbb
push
cmp
xchg
lahf
dec
cmp
les
arpl
in
test
fwait
jno
add
dec
mov
lea
jno
cmp
(bad)
jns
mov
sahf
inc
shl
add
movs
scas
jns
sub
push
lods
fcomp
cmp
push
repnz
mov
fdivr
xchg
inc
add
test
jae
sahf
dec
xlat
xor
xor
inc
mov
fadd
in
or
push
mov
in
movntq
in
adc
es
pop
cli
es
sub
repz
pop
add
pop
add
xchg
pushf
inc
(bad)
jg
jl
nop
jg
mov
out
add
pusha
iret
cmps
jns
cdq
jl
cmp
jmp
or
xor
mov
and
adc
not
aam
mov
sub
es
sbb
es
std
sub
lds
adc
add
cli
aaa
pop
push
test
cmp
pop
mov
and
push
repz
push
lds
jmp
rol
sub
daa
jno
and
xor
xlat
cmp
adc
cmps
jb
xchg
xor
adc
adc
push
test
and
dec
rcr
push
ds
out
push
mov
mov
sub
cmp
cs
mov
imul
push
test
mov
pop
in
push
xlat
inc
test
jl
xor
lock
test
ins
test
fwait
push
pop
sub
push
mov
xchg
or
sbb
push
mov
pusha
adc
cmp
push
mov
jl
xchg
outs
fstp
arpl
dec
rcr
movs
in
xlat
cs
lods
mov
cmp
dec
icebp
xor
retf
mov
pusha
cmps
mov
pop
fild
jbe
pop
stc
cmp
jecxz
mov
sbb
dec
xlat
pop
rcl
jbe
in
loop
mov
ficomp
imul
push
mov
jb
xor
adc
push
push
into
xor
cld
and
adc
push
lods
fadd
adc
sub
jmp
push
iret
fwait
dec
mov
sar
push
sti
je
dec
sub
add
xor
add
or
pop
cmp
sub
sti
fild
push
movs
jno
or
cmp
(bad)
push
enter
mov
mov
add
pop
ret
cmp
pop
rcl
int
xor
mov
pminsw
pop
hlt
and
add
and
and
pop
mov
add
cld
daa
cs
pop
sbb
retf
inc
aad
shl
adc
and
cmp
and
stc
xor
in
scas
fidivr
and
and
xor
jecxz
aad
pop
loopne
shl
ret
cmp
sub
inc
cmps
xchg
inc
mov
cmp
cs
neg
and
jecxz
out
adc
pop
(bad)
sti
outs
fistp
sub
std
daa
jmp
cmp
dec
fbld
pop
in
add
ds
pop
mov
fsub
ret
jbe
es
test
sub
sbb
int3
dec
ficomp
cdq
inc
(bad)
ss
dec
sbb
pop
mov
cmps
outs
mov
ins
leave
xchg
xchg
popa
mov
stos
ins
int3
es
cmps
lahf
jg
inc
fmul
dec
stos
addr16
or
dec
retf
and
pop
sbb
dec
stos
xchg
(bad)
dec
sbb
fild
dec
fistp
dec
sbb
ret
cmp
adc
cmp
hlt
add
leave
xor
push
movs
dec
mov
cmps
mov
ja
popa
mov
loopne
adc
repnz
loope
call
xchg
outs
mov
stos
mov
dec
mov
mov
outs
cmps
nop
cwde
jne
loop
mov
mov
outs
stos
outs
or
mov
sbb
or
push
mov
mov
imul
jne
inc
test
sti
sub
or
push
sbb
ins
lds
sub
push
lods
push
jge
out
mov
call
sbb
out
push
mov
cdq
jmp
test
xor
or
inc
mov
fdiv
ror
scas
adc
(bad)
int3
push
cmps
push
pusha
adc
pop
mov
daa
or
sub
fldenv
sbb
dec
mov
js
sub
or
or
jns
push
jmp
adc
push
shl
push
jmp
out
bswap
pop
mov
sbb
pop
fimul
push
mov
je
mov
pop
fnstenv
jo
and
pop
fsub
(bad)
cmp
push
sar
mov
mov
xchg
cdq
dec
les
or
cmp
and
sti
pop
(bad)
jge
popf
xchg
outs
scas
mov
(bad)
adc
aad
lock
ins
or
mov
mov
test
mov
sar
in
rol
adc
fwait
mov
dec
retf
(bad)
jle
js
inc
mov
mov
fist
mov
jmp
cmps
jge
xchg
arpl
add
sbb
mov
(bad)
rol
adc
(bad)
jl
add
in
jmp
jmp
(bad)
lahf
mov
jo
outs
sbb
aad
lods
dec
mov
jno
mov
mov
cld
and
dec
fld
push
inc
mov
push
iret
cmp
pop
mov
hlt
dec
mov
mov
jle
sub
xor
pop
xchg
inc
fisub
ja
jnp
imul
call
xchg
js
add
repnz
push
ficom
push
ret
pop
push
icebp
pop
shr
adc
cmp
adc
loope
scas
push
add
pushf
je
inc
mov
adc
icebp
pop
mov
retf
pop
mov
mov
mov
and
adc
push
mov
cmps
imul
mul
neg
imul
sub
sbb
das
in
daa
adc
mul
(bad)
pop
rcr
call
sub
call
mov
mov
arpl
lea
mov
mov
inc
test
cmp
sub
icebp
push
sbb
dec
mov
or
push
test
addr16
jge
add
int
aaa
out
cli
push
ret
(bad)
sub
aaa
shl
enter
push
in
ss
sbb
fimul
mov
enter
pushf
call
mov
mov
mov
and
loopne
iret
pop
mov
aad
jno
xchg
jne
imul
xlat
add
dec
fistp
or
sbb
push
cmp
shl
(bad)
xor
ds
jl
inc
mov
shl
out
pop
test
dec
xchg
in
int3
aaa
hlt
push
scas
mov
aas
loopne
adc
add
mov
daa
push
ret
js
call
outs
movs
mov
inc
test
add
dec
lods
mov
or
jnp
xchg
mov
push
test
gs
es
mov
nop
retf
pop
adc
js
inc
test
cmp
fadd
cmp
and
pop
xchg
dec
xlat
aas
add
adc
and
sub
inc
mov
lahf
outs
lods
jno
out
mov
cmps
dec
mov
sbb
ss
xor
daa
lds
cli
push
add
and
sbb
rcl
sub
enter
mov
dec
lods
dec
xlat
pop
leave
cmp
imul
xchg
cdq
jno
adc
shr
push
jnp
add
sub
call
jo
xchg
inc
mov
or
test
inc
rol
push
pinsrw
mov
sbb
push
movs
jg
inc
test
sbb
daa
repz
scas
cmps
cmps
jae
daa
pop
sti
push
sbb
mov
iret
adc
sub
or
pop
mov
pop
mov
sub
sub
adc
push
aam
in
ins
fild
jmp
repz
dec
cmps
popa
mov
imul
jl
js
dec
call
mov
test
fmul
lock
repz
ins
mov
lea
add
adc
dec
and
and
add
sbb
xor
lea
xor
ds
leave
push
cld
add
in
rcr
sub
aaa
adc
xchg
xchg
mov
dec
int
mov
enter
ins
(bad)
push
aad
mov
jmp
adc
ja
nop
outs
stc
sub
jmp
test
jmp
enter
stc
das
in
movs
xchg
test
jb
mov
out
add
and
ins
mov
or
pop
sbb
int
sbb
repz
sub
sub
xor
push
icebp
pop
sbb
push
xchg
mov
daa
les
dec
out
stc
sub
ror
sub
and
cmc
pop
scas
pushf
ins
aam
shl
add
pop
aam
out
in
sub
pop
mov
inc
nop
ret
sub
pop
frstor
sti
and
cli
xor
jle
xchg
xchg
test
mov
jp
dec
mov
je
add
mov
les
sub
cli
jnp
mov
mov
sbb
xchg
lea
ja
push
out
xor
and
push
cmp
xchg
jne
or
aaa
adc
push
sbb
jp
imul
mov
dec
mov
in
cmp
adc
xor
dec
mov
or
int
jl
outs
stos
inc
scas
sahf
cwde
lea
fstp
jl
mov
dec
mov
nop
data16
aas
movntq
jle
arpl
and
xor
lock
or
cmc
push
add
or
pop
mov
stc
pop
mov
pop
fcom
jmp
jmp
adc
and
dec
stos
push
adc
rcl
inc
mov
xor
sub
retf
cmp
sub
int3
pop
mov
sti
dec
mov
mov
movs
mov
adc
and
pop
sti
add
sub
lds
stc
and
push
mov
loope
mov
add
sub
and
xchg
mov
dec
retf
pop
leave
pop
mov
frstor
and
hlt
and
mov
cmp
xchg
dec
lock
mov
ret
cmp
adc
xor
inc
mov
adc
dec
fmul
in
push
shl
push
sbb
or
es
fstp
lahf
dec
iret
add
pop
and
adc
inc
iret
and
dec
or
xchg
inc
(bad)
adc
add
pop
aaa
pop
icebp
dec
mov
frstor
mov
scas
call
repnz
fistp
movs
xchg
out
mov
and
aaa
hlt
xor
imul
fadd
in
mov
pop
lock
cmp
mov
dec
xor
popa
mov
in
pop
cli
sub
add
add
cmp
push
out
xlat
cmp
icebp
dec
mov
(bad)
cmp
inc
aam
jmp
adc
pop
mov
cmps
xchg
out
ds
sti
push
lods
je
jmp
xor
cmp
lea
mov
push
(bad)
pop
stc
adc
rcr
sahf
jp
pop
ret
and
leave
sub
cmp
movs
cwde
ltr
shr
or
sbb
sub
add
adc
pop
jmp
enter
lods
outs
test
rcr
dec
mov
fist
pop
lock
push
or
aas
test
scas
jg
jns
sbb
or
pop
mov
enter
push
hlt
daa
adc
pop
mov
mov
out
add
push
mov
inc
adc
push
div
jmp
push
fstp
and
jge
push
mov
fld
cmp
xor
pop
sbb
cmp
mov
aas
call
test
cmps
lock
mov
mov
xchg
jb
dec
mov
cmp
dec
push
mov
push
mov
jle
cmp
jb
sub
jmp
leave
xor
pop
stc
xor
inc
mov
dec
shl
push
inc
(bad)
push
mov
cmp
out
sub
aaa
out
sub
xlat
add
jne
pop
mov
enter
int3
xor
int3
cs
cmps
imul
and
jecxz
sahf
pushf
mov
ficom
repz
pushf
ins
cmps
test
sbb
stc
and
shr
or
pop
xlat
cwde
ins
int
popf
je
dec
test
lds
(bad)
jp
xchg
je
mov
scas
jae
loop
mov
in
loop
pop
jmp
sub
das
or
dec
mov
jge
dec
mov
sbb
cs
inc
fist
inc
mov
sbb
pop
and
sahf
call
push
(bad)
and
sti
push
mov
test
in
and
lds
leave
inc
fistp
clc
and
bound
cmp
ins
mov
rcr
jo
adc
pop
repnz
adc
dec
scas
ins
fcom
out
ror
pop
icebp
xor
loope
ret
cmp
mov
jbe
xchg
imul
xchg
and
jmp
xchg
call
sub
inc
ficomp
xor
in
dec
cmp
not
call
scas
(bad)
outs
std
cmp
dec
mov
test
cdq
jle
pop
(bad)
sub
jecxz
mov
dec
add
sub
icebp
xor
push
mov
jne
mov
mov
popf
gs
fdivr
repnz
in
push
fdivr
in
push
jne
inc
mov
cmps
inc
lea
cwde
js
ja
test
popa
repnz
sbb
push
sbb
clc
ins
enter
sbb
push
out
sub
add
daa
push
sbb
pop
fnstcw
lahf
outs
int3
sub
(bad)
and
and
push
cmc
adc
call
and
shr
rol
cmc
das
sbb
lds
out
jmp
pop
shl
test
and
jb
sub
sub
call
sub
adc
xor
mov
outs
fiadd
out
out
int3
lahf
inc
mov
fisttp
add
ror
push
mov
(bad)
xor
retf
xor
pop
scas
pushf
jno
adc
icebp
sub
xchg
je
fs
push
addr16
std
sub
sbb
sub
pop
scas
bound
repnz
stos
dec
mov
dec
mov
fsubr
out
sub
imul
xchg
dec
lock
test
mov
and
adc
pop
(bad)
and
(bad)
sub
sbb
cmc
pop
mov
std
cs
imul
repz
pop
(bad)
jne
jge
or
daa
psraw
outs
retf
sub
cmp
pop
mov
aaa
jecxz
xchg
inc
movs
pusha
(bad)
add
inc
xlat
cmp
dec
mov
daa
add
out
stos
jbe
jge
mov
mov
dec
mov
ret
imul
adc
in
push
sbb
jo
xor
repnz
fimul
cmp
sub
sbb
and
push
push
or
adc
jbe
push
or
cmp
cmp
mov
imul
shr
pextrw
sub
cmp
mul
xchg
enter
sbb
clc
push
fisub
cmp
fwait
out
pop
sbb
xchg
xchg
jo
pop
(bad)
dec
lods
imul
test
aad
fisttp
or
pop
fimul
sbb
sbb
push
or
mov
fiadd
adc
hlt
push
mov
je
jmp
fld
loope
imul
adc
int3
das
in
jge
jb
outs
das
out
ds
cmc
and
xor
xor
pop
mov
mov
jne
add
inc
hlt
push
mov
jo
cdq
add
pop
icebp
sub
push
(bad)
pavgb
mov
call
cmp
dec
xchg
mov
xchg
inc
fdiv
fwait
xchg
addr16
xlat
push
mov
sbb
add
popf
test
int3
mov
or
(bad)
scas
sub
or
mov
xchg
(bad)
(bad)
mov
std
out
test
popf
xor
add
add
push
popf
ret
lock
push
and
and
or
push
mov
sbb
loopne
xor
bound
aad
inc
or
jmp
in
mov
retf
ins
inc
cmps
adc
std
mov
mov
xor
push
sub
pop
sub
je
rcr
in
jl
xor
es
arpl
(bad)
mov
imul
enter
sub
rcl
(bad)
movs
outs
or
dec
xor
test
outs
loop
pop
mov
imul
lods
pop
(bad)
mov
sub
ins
push
add
add
and
aad
mov
repz
fldenv
dec
stos
mov
and
cmc
icebp
sti
ss
fild
out
cdq
out
pusha
scas
xchg
sub
adc
push
mov
mov
sbb
adc
mov
add
jp
dec
repz
in
mov
imul
mov
sbb
outs
pop
bound
mov
dec
pop
cs
add
dec
jle
cli
mov
popa
out
xchg
mov
mov
mov
jb
iret
push
mov
mov
push
dec
or
in
cld
test
scas
das
pop
cmc
les
call
test
fcomp
xchg
loope
jne
xor
pop
cmps
(bad)
mov
cmp
aas
mov
int
jle
ret
ss
lock
in
sbb
push
dec
xchg
(bad)
enter
shl
inc
xor
mov
mov
loop
cwde
lds
std
aam
add
pop
xchg
push
int3
add
es
jge
sbb
std
push
or
pop
stos
xor
mov
cmc
test
repnz
xor
push
dec
jg
inc
in
pop
(bad)
loopne
je
sar
push
mul
scas
mov
loope
loopne
in
adc
(bad)
mov
jp
push
arpl
in
add
cmp
shl
int
push
repnz
push
push
cmp
pop
xchg
hlt
loope
mov
mov
push
lahf
jo
daa
sti
cmp
ret
loope
scas
dec
pop
pop
add
cs
xchg
sub
out
lods
xor
pop
mov
mov
sbb
or
out
push
mov
add
jno
enter
xchg
or
ss
nop
adc
out
out
stc
loope
ins
rcl
mov
hlt
xchg
jnp
sar
dec
and
xor
pop
pop
add
sbb
inc
ins
cmp
aad
mov
mov
es
or
sbb
out
pop
fs
popa
xlat
sub
out
xchg
mul
dec
movs
inc
mov
xor
aaa
sub
cmc
fadd
(bad)
fsubrp
retf
add
xlat
jecxz
cmp
aaa
sahf
adc
mov
loope
ret
jnp
(bad)
fmulp
xor
and
push
gs
mov
adc
arpl
(bad)
test
mov
(bad)
xchg
mov
loop
pop
inc
retf
mov
enter
inc
(bad)
fisttp
add
jl
cmp
pop
dec
fist
cmp
pop
lods
pop
pop
xor
loop
sub
and
pop
std
push
aad
nop
xchg
sbb
add
cdq
lock
adc
out
mov
mov
aad
cli
enter
les
retf
pop
push
arpl
cmp
pop
cmp
(bad)
std
fwait
sub
sbb
pop
dec
jmp
pop
shr
outs
out
lock
adc
mov
loope
scas
adc
retf
sub
push
in
mov
outs
mov
jns
push
inc
dec
jb
loope
or
(bad)
cmps
aam
push
loop
imul
test
pop
aam
cmp
pop
or
sbb
call
push
push
mov
mov
leave
mov
pop
loopne
adc
jmp
hlt
out
das
cld
dec
add
mov
and
sbb
or
or
in
rcr
inc
movs
jnp
xor
add
dec
jp
stos
add
pop
scas
(bad)
mov
and
retf
out
mov
pmullw
dec
jo
dec
loope
sbb
cmp
test
sub
retf
movs
push
xor
in
out
pop
mov
push
mov
mov
mov
lahf
inc
aad
jns
mov
ins
fs
mov
jle
sub
cmp
sti
and
fcom
xor
xor
adc
xchg
data16
stc
sbb
sbb
jo
mov
xor
xchg
mov
fnstcw
inc
nop
sub
sbb
jmp
inc
mov
dec
dec
mov
jo
add
xchg
sbb
call
mov
mov
push
pop
jle
call
(bad)
cmps
push
or
jno
lock
out
(bad)
pusha
inc
shr
mov
inc
or
mov
pop
and
dec
retf
ret
ret
inc
xor
cmp
(bad)
mov
sbb
add
sar
scas
xchg
and
mov
mov
mov
inc
or
mov
and
mov
imul
mov
inc
jno
aad
out
fdiv
cmp
scas
loopne
repz
retf
fild
fadd
adc
mov
into
call
mov
and
lahf
enter
push
ins
or
push
jmp
xlat
retf
ss
xchg
je
js
or
jmp
jg
mov
cdq
(bad)
pop
aaa
pop
jle
adc
daa
test
mov
ins
scas
adc
fimul
xchg
jb
adc
ds
jmp
sbb
mov
jnp
das
jae
and
dec
icebp
pop
out
or
or
cmps
and
xlat
pop
xchg
enter
aas
lods
sbb
icebp
add
sbb
and
push
out
and
inc
xchg
xor
cli
adc
mov
adc
dec
xor
cmp
mov
sti
xor
cmp
dec
or
test
xchg
mov
clc
xor
stc
push
pop
add
cmc
mov
adc
fmul
outs
sbb
and
fld
aas
ss
pop
into
popa
jbe
ret
cmp
fs
pop
lods
adc
jp
(bad)
pusha
pushf
pushf
or
push
mov
lahf
xchg
jecxz
mov
mov
arpl
mov
mov
xlat
out
lock
add
xchg
ds
int
adc
stos
add
push
fcom
mov
(bad)
call
mov
imul
ror
mov
inc
inc
(bad)
dec
loop
clc
(bad)
fst
stc
cs
into
cmp
jmp
in
ret
call
ins
pop
fld
shr
sub
sbb
addr16
retf
jmp
sbb
loope
pushf
ins
movs
add
aam
lods
or
xor
fisub
mov
adc
jbe
push
call
lahf
cdq
adc
dec
sbb
cli
(bad)
xor
mov
rol
addr16
fimul
or
sbb
sub
out
jbe
jecxz
loop
sbb
xchg
test
jecxz
adc
int3
mov
nop
mov
xchg
mov
nop
xor
xor
cmp
lahf
mov
aad
sbb
popf
out
movs
mov
scas
shr
adc
stos
inc
adc
scas
pop
sub
push
out
or
scas
mov
mov
lock
jae
fucomi
cmps
ins
jne
loope
pop
mov
or
mov
add
sub
push
jecxz
mov
mov
(bad)
mov
push
mov
push
cs
je
test
xchg
xor
add
pop
scas
adc
xchg
pop
mov
xchg
ins
sub
in
leave
ret
sub
mov
outs
arpl
pop
jmp
push
scas
mov
and
mov
mov
push
cwde
(bad)
out
nop
sahf
cmps
push
(bad)
jbe
jp
jecxz
aaa
mov
in
inc
push
jl
inc
sbb
mov
mov
xor
sahf
sub
shl
mov
cdq
push
out
push
fs
mov
or
mov
xor
mov
inc
cmps
shl
cmps
jns
out
lock
push
repz
jge
jecxz
jl
pushf
jp
movs
sbb
add
hlt
push
jae
dec
or
jmp
push
xchg
pop
push
(bad)
mov
jmp
movs
inc
stos
pop
retf
jmp
je
jne
daa
xchg
xchg
int
call
cmp
pop
sub
mov
add
movs
shr
movs
imul
iret
imul
int
retf
adc
pop
xor
outs
pop
adc
imul
jnp
adc
shl
cmp
in
inc
lahf
pop
mov
sbb
inc
test
cmp
cmp
pop
stc
cmp
fadd
mov
mov
inc
dec
mov
int3
fstp
inc
xchg
dec
pushf
xchg
sbb
ins
jnp
aad
cli
pushf
jmp
mov
or
jbe
dec
inc
inc
cwde
inc
xor
inc
jno
(bad)
adc
hlt
jge
test
mov
enter
jle
and
dec
sbb
sbb
adc
stos
ficom
push
xchg
inc
leave
div
mov
mov
push
outs
fadd
xor
sub
cs
sub
ins
xchg
xchg
aad
sbb
xchg
inc
lock
pop
paddusw
ret
pop
adc
xchg
sub
pusha
sub
(bad)
add
pop
cmps
pop
adc
dec
jnp
or
cdq
sbb
jbe
out
push
jno
mov
aas
sbb
adc
pop
sbb
cmp
sbb
or
adc
out
out
dec
imul
pop
jbe
xor
in
mov
adc
mov
push
fist
cmps
fist
mov
lds
sub
ds
mov
lods
pop
pop
aam
pop
aam
out
aam
sbb
adc
mov
fbstp
xchg
call
pop
icebp
cmp
and
cmp
jle
adc
cmp
data16
(bad)
sti
ins
adc
movs
sub
lock
iret
cmp
or
loope
jl
loop
aas
dec
loope
les
push
mov
jmp
(bad)
clc
push
jp
add
sub
test
cs
cmp
jmp
mov
popf
fs
pushf
push
arpl
inc
popf
mov
xchg
pop
add
mov
outs
add
repz
js
push
shl
push
xlat
xlat
movs
or
loopne
inc
test
mov
lea
mov
push
pop
sub
outs
add
sub
push
pop
stos
loop
dec
jg
adc
or
call
pop
and
push
dec
mov
mov
xor
stos
xchg
dec
stc
jecxz
and
xor
je
fsubrp
in
iret
dec
and
jbe
add
mov
movs
aad
push
mov
mov
hlt
pushf
arpl
(bad)
std
test
sti
icebp
cmp
adc
fsubr
(bad)
scas
out
push
and
iret
popa
pusha
movs
add
pop
mov
push
sti
push
ror
js
mov
in
aaa
push
ror
adc
div
jo
mov
jae
test
test
add
aam
xchg
popf
mov
outs
js
test
sbb
add
sub
jg
fwait
(bad)
or
fmul
cmp
sub
push
ret
add
dec
inc
test
rcr
or
jmp
mov
xor
push
adc
jl
lock
pushf
pop
sbb
lds
dec
or
or
ret
or
jne
imul
mov
dec
jp
lea
jecxz
mov
popf
xchg
dec
cmp
xchg
adc
xor
sub
sbb
mov
jmp
xchg
fiadd
sbb
mov
fisttp
adc
jnp
inc
mov
scas
mov
and
jo
jge
stc
cmp
cmp
and
jecxz
jge
clc
sub
mov
idiv
mov
xor
inc
and
or
(bad)
xor
pop
icebp
sub
and
sbb
sti
jge
add
xchg
or
add
and
jne
jl
loope
retf
pop
daa
shl
cmp
push
inc
cmp
(bad)
rol
js
fidiv
add
sbb
jle
xchg
dec
scas
ins
mov
scas
(bad)
cwde
retf
aas
shl
sar
ds
push
loop
leave
in
pushw
and
cmps
add
arpl
shl
cli
mov
rcl
cwde
loop
in
js
sub
push
fisubr
xchg
adc
lea
movs
jo
sbb
test
inc
sbb
pop
and
jno
cdq
outs
pop
add
test
inc
mov
mov
scas
stos
xchg
mov
cdq
push
add
mov
inc
fstp
adc
or
push
sbb
fs
jne
inc
repz
out
and
jae
frstor
out
jbe
sub
push
xor
sub
out
dec
rcr
adc
mov
sub
mov
sahf
mov
jnp
pop
out
add
lahf
cld
dec
push
(bad)
pop
xchg
mov
enter
psubd
inc
adc
pop
and
inc
adc
js
js
pop
ja
cmp
lahf
cmps
stos
ja
fs
dec
test
jg
cmps
in
and
cwde
pop
ins
mov
mov
mov
ins
add
cdq
lahf
(bad)
fdiv
jge
push
or
lods
dec
mov
mov
out
(bad)
push
push
cmp
and
aad
cli
retf
push
out
xor
repnz
cmp
adc
lods
xor
mov
dec
mov
in
add
jecxz
ja
and
ss
adc
gs
sbb
xchg
lods
mov
dec
pop
push
pop
retf
and
pushf
imul
inc
(bad)
sub
mov
push
shl
pusha
jge
ja
mov
mov
icebp
mov
movs
jge
push
mov
sub
pusha
pop
stos
jb
sub
inc
in
movs
inc
shl
fist
fsub
call
ss
outs
xor
mov
mov
je
int
sahf
mov
cmp
iret
xchg
scas
in
sti
cmps
sub
add
ins
sub
hlt
rcl
dec
push
mov
test
mov
mov
ja
inc
push
push
add
push
clc
adc
(bad)
pop
add
inc
scas
sahf
cmc
mov
xchg
push
shl
fadd
mov
aam
cmc
push
lea
and
or
xchg
pop
sbb
loope
push
push
jmp
lea
mov
mov
jno
push
pop
stc
add
xchg
fwait
loop
mov
stos
pop
sqrtps
fld
(bad)
push
push
in
add
xchg
imul
jb
fdiv
sbb
fidiv
sti
cdq
retf
outs
or
je
mov
aaa
data16
mov
repz
sub
psrlw
mov
cdq
(bad)
loop
jp
mov
retf
out
loope
sbb
push
test
adc
mov
(bad)
push
cmp
fstp
test
out
and
cs
adc
lds
mov
cmps
push
popa
sar
sti
aaa
ss
push
or
ins
adc
cmps
jg
test
pop
or
sbb
push
addr16
fcmovu
enter
mov
imul
mov
iret
dec
pop
clc
popa
outs
out
not
aad
aas
mov
mov
mov
jb
inc
mov
adc
sub
test
xchg
iret
jo
shl
dec
mov
arpl
call
dec
cli
cmp
scas
push
imul
leave
(bad)
cmps
jecxz
adc
mov
fild
xor
lds
and
cmp
xchg
sub
inc
xchg
je
push
dec
mov
adc
pop
les
sub
adc
xchg
cwde
cmp
mov
jg
pop
xchg
lock
sub
lahf
icebp
xchg
add
xchg
xor
mov
invd
xchg
aas
outs
push
jmp
mov
lds
push
nop
sti
dec
(bad)
cmc
push
clc
dec
movs
and
ds
sbb
mov
mov
dec
shl
inc
dec
cmp
and
popf
xchg
pop
out
data16
xlat
mov
aas
sub
sub
mov
pop
and
xchg
pop
mov
(bad)
mov
mov
aaa
test
and
push
adc
(bad)
fmul
(bad)
jge
test
test
and
jb
cmps
(bad)
ins
(bad)
out
iret
stos
lds
pop
sbb
push
outs
ret
dec
pusha
and
ds
add
mov
out
inc
dec
mov
(bad)
jmp
(bad)
xchg
loop
das
scas
or
push
jmp
aas
inc
ret
addr16
mov
cmp
add
imul
and
popf
jns
adc
arpl
and
add
jbe
jae
pop
call
ss
mov
adc
popf
and
jl
fcmovne
pop
ins
xchg
out
test
adc
fincstp
jmp
js
cmp
xchg
into
push
dec
push
push
int
imul
(bad)
jecxz
and
rcr
mov
mov
mov
enter
fld
imul
push
(bad)
icebp
mov
mov
ds
adc
sub
add
(bad)
cmp
xlat
lds
mov
pop
lods
ds
xchg
sti
mov
psubq
sbb
cmc
imul
cmps
stc
loopne
mov
xchg
add
pop
call
out
add
in
arpl
or
ror
sub
cdq
inc
push
or
cdq
cmp
cdq
adc
pop
ja
push
adc
mov
adc
mov
aam
retf
pop
call
test
mov
rcl
add
jbe
cmp
fdiv
imul
aam
fst
mov
cld
fdiv
and
jl
sbb
pop
repnz
fiadd
pop
aam
cmp
adc
mov
lock
inc
retf
mov
jbe
and
mov
int3
cmp
adc
or
ja
pop
and
test
ins
fucom
mov
int
ficomp
or
aas
sub
mov
js
or
pusha
je
test
rcr
dec
rcl
out
mov
and
mov
cmc
sub
daa
inc
pop
ret
(bad)
fld
fistp
sar
adc
enter
movs
xor
bnd
stos
mov
xchg
addr16
or
hlt
outs
movs
call
sbb
pop
sub
xor
mov
pop
mov
lods
sar
(bad)
in
xchg
cmp
mov
dec
xchg
pushf
sub
sub
xchg
and
outs
jl
cmp
test
pushf
out
cmc
scas
loopne
mov
lds
dec
in
xchg
test
call
and
xor
cmp
gs
ins
mov
inc
nop
dec
inc
daa
call
pop
xchg
loopne
cmp
xor
mov
loop
mov
daa
mov
sbb
cs
and
jl
mov
jg
fs
iret
mov
in
sbb
push
out
and
add
ds
sub
std
xor
in
push
add
mov
ja
nop
ss
(bad)
shl
fstp
lea
shl
mov
xchg
bound
inc
fst
xor
ja
mov
out
cmc
test
cmc
mov
out
fild
lods
cmp
xor
mov
xor
push
mov
or
push
out
mov
lock
or
push
pop
xor
xchg
je
sub
jae
mov
aaa
push
sti
bound
sar
mov
ficom
or
clc
in
adc
add
mov
ret
sub
not
pushf
jle
mov
call
add
push
aaa
sub
or
adc
lock
js
and
ss
fimul
shl
cld
sub
dec
fstp
cmp
xor
and
lock
mov
out
xlat
and
xor
sbb
sub
jo
inc
ret
dec
and
push
pop
lds
sbb
pop
cli
ss
pop
jmp
(bad)
push
shl
add
push
jae
lahf
fwait
mov
aaa
in
into
aaa
push
ss
ins
sbb
jecxz
fnstenv
sbb
dec
stos
jae
pop
xlat
inc
test
ja
jl
add
cmp
das
sbb
push
pop
adc
call
and
or
push
stos
jle
pop
iret
inc
stos
sbb
std
or
or
push
mov
cwde
inc
adc
adc
push
loope
push
aad
out
dec
(bad)
dec
into
dec
mov
test
pop
xchg
sub
and
push
in
mov
ficomp
inc
mov
popa
xor
fidiv
push
jmp
ins
fist
jae
push
mov
fwait
jb
call
(bad)
ss
cmp
cmp
cmp
retf
xor
add
sbb
leave
and
cmp
(bad)
sbb
sub
out
sbb
inc
mov
or
ror
in
push
mov
fimul
jno
push
shl
pop
test
stos
arpl
and
xor
dec
mov
mov
iret
cmp
cmp
repnz
mov
or
ss
and
(bad)
pop
lods
inc
sub
(bad)
jmp
push
repz
(bad)
xor
inc
xchg
push
movs
jp
adc
add
push
scas
imul
mov
test
sbb
push
mov
pushf
mov
inc
ficom
xor
(bad)
or
dec
test
inc
scas
inc
fdivr
cmps
loope
scas
mov
pop
sbb
in
add
sbb
cmp
or
xor
jo
sahf
jns
or
outs
mov
push
fmul
mov
cmps
call
dec
enter
xchg
es
dec
mov
xor
sbb
inc
lods
ja
dec
ret
dec
fstp
sbb
pop
in
adc
aaa
jmp
sahf
mov
repz
mov
or
rcl
jnp
xor
sar
push
mov
dec
cld
mov
jns
sub
pop
xchg
xchg
inc
lods
xchg
call
inc
fld
out
cmp
lock
jmp
adc
stos
pusha
and
xor
and
push
adc
daa
int
or
cmp
inc
test
push
in
xlat
sub
out
add
push
push
sti
pop
aam
adc
jmp
stc
pop
mov
icebp
cs
retf
or
xchg
xchg
popa
mov
mov
lds
and
cs
cmps
(bad)
(bad)
and
lea
add
mov
mov
xchg
daa
sbb
xor
push
jne
push
stos
call
imul
scas
jnp
mov
and
pop
test
add
iret
aaa
clc
dec
mov
cld
xor
loopne
fisubr
les
ret
jg
add
sub
lods
xchg
jle
ss
cmp
adc
adc
sub
das
jmp
dec
mov
icebp
daa
enter
inc
stos
into
adc
shl
out
psubq
sub
ret
ds
nop
mov
iret
xor
adc
dec
mov
adc
sub
pop
(bad)
daa
loope
add
and
pop
push
jecxz
ret
mov
mov
xchg
jno
popf
xchg
lahf
outs
mov
test
call
add
rol
outs
retf
add
dec
nop
xor
adc
cmp
loop
fiadd
lds
pop
xor
and
stc
and
pop
sbb
lahf
in
mov
shr
adc
cmc
adc
inc
movs
mov
lea
inc
mov
jno
cmp
cmps
adc
fnstenv
or
push
mov
push
or
sub
bound
push
int
out
xchg
push
fldcw
in
xchg
jmp
fisubr
push
and
cli
pop
test
or
icebp
dec
mov
xchg
inc
scas
lahf
inc
fidiv
add
pushf
nop
jb
inc
shl
or
and
push
cmp
pop
int3
and
push
ret
add
and
jecxz
sbb
mov
mov
in
push
aad
in
rcl
xlat
add
inc
stos
repz
mov
loop
mov
fdiv
out
push
fidiv
shl
mov
lods
jp
pop
iret
add
adc
push
mov
rcl
cld
aaa
clc
das
sbb
dec
fiadd
jmp
and
sbb
mov
jl
arpl
retf
pop
into
xchg
nop
cdq
(bad)
jo
cmp
jae
dec
mov
call
and
sti
add
jecxz
in
mov
clc
pop
cmps
inc
mov
dec
scas
jecxz
cmps
push
pusha
stos
inc
mov
push
jo
popa
call
mov
sub
mov
fisub
mov
in
pop
mov
ja
xchg
mov
pop
mov
pop
sbb
pop
(bad)
jl
sub
(bad)
push
mov
cmp
adc
hlt
dec
out
repz
xchg
push
frstor
sbb
sub
repz
fisubr
rol
jmp
loope
movs
inc
and
dec
mov
outs
mov
aad
sbb
pop
repz
fstp
push
ret
cs
rcr
adc
les
adc
sbb
mov
jg
ins
mov
xchg
jns
hlt
push
mov
and
les
imul
lock
mov
inc
iret
das
aas
cld
xor
les
jecxz
fcomp
ret
bound
mov
xor
sahf
imul
imul
adc
mov
out
jg
jle
(bad)
into
push
mov
sub
mov
dec
mov
lods
mov
mov
lahf
ja
call
rcl
and
pop
push
sti
and
loopne
sub
mov
xchg
call
shl
call
je
cs
rcr
dec
sub
mov
and
aas
in
add
or
cmp
scas
jb
addr16
pop
das
cmp
sub
(bad)
sub
test
imul
out
push
xor
cli
pop
xchg
popa
add
pop
sbb
hlt
adc
stc
and
sti
inc
shl
lods
sti
xor
sar
add
cmp
push
sbb
dec
mov
shl
pop
add
xor
jge
cmp
das
loopne
repz
jb
and
dec
xor
ins
test
cwde
fld
xchg
fwait
dec
stc
inc
fdiv
adc
aas
pop
repnz
mov
std
es
lock
mov
mov
jne
call
push
scas
xchg
xchg
mov
nop
data16
in
or
and
(bad)
aas
sbb
sar
sbb
dec
lods
js
xchg
test
addr16
adc
call
xor
pop
mov
mov
sbb
or
cmp
jle
pop
mov
movs
data16
jmp
sbb
ss
cmp
or
pmaddwd
pop
add
add
dec
mov
into
pop
into
add
in
sub
(bad)
pop
mov
movs
xchg
shl
and
xor
add
pop
xor
lds
sbb
aaa
les
lock
and
xor
adc
lea
xor
pop
aad
mov
sti
inc
mov
int
leave
mov
jp
popf
mov
jne
add
xor
add
es
fistp
or
xor
aad
lods
mov
dec
mov
fwait
jb
mov
add
and
sbb
aad
sub
xchg
test
cmp
mov
cmp
clc
cmp
mov
call
inc
mov
xchg
nop
jb
out
mov
out
or
cmp
sub
xor
and
repz
and
clc
pop
mov
(bad)
push
scas
pusha
fist
(bad)
sub
repz
mov
movs
ja
pop
ficom
dec
nop
cmp
add
push
mov
mov
jno
fnstcw
push
xor
xor
push
mov
sub
pop
fidiv
or
rol
ss
sbb
sbb
cmp
push
push
repnz
shl
lds
test
jp
and
cmp
pop
mov
outs
shl
les
loope
push
out
dec
sbb
add
lock
push
lods
data16
mov
or
ret
push
mov
jne
xchg
out
cmps
je
jno
cwde
dec
(bad)
sub
sbb
add
sbb
pop
(bad)
in
scas
imul
pop
sbb
cmp
aaa
or
loope
mov
cdq
cli
dec
sub
loopne
stc
pop
mov
fist
sub
xor
jp
sub
adc
and
sub
dec
mov
rcr
js
or
push
test
cmp
adc
dec
mov
xor
xor
dec
retf
and
not
inc
test
inc
(bad)
out
cs
repz
in
jecxz
push
or
pop
mov
test
sahf
jp
inc
mov
stc
inc
sub
dec
lods
nop
inc
and
sub
or
mul
adc
stc
dec
mov
sbb
das
aaa
jecxz
stos
sahf
(bad)
in
arpl
das
cmp
in
cmp
out
retf
aad
ret
pop
ficom
std
inc
rcr
jmp
xlat
push
fmul
jp
in
inc
(bad)
mov
push
les
inc
rcr
js
xor
sub
cmp
pop
nop
mov
cmp
push
test
out
sub
cld
pop
xlat
xor
jmp
cld
cmp
(bad)
mov
jne
dec
mov
pop
movs
jg
push
mov
out
add
rcl
sub
pop
ret
xor
neg
(bad)
cmp
fld
sahf
gs
das
push
out
mov
cwde
adc
inc
ds
push
mov
gs
aad
or
and
pop
call
scas
arpl
and
add
cmp
pop
das
pop
fnstenv
fwait
jg
loopne
rcr
rol
jmp
push
mov
mov
mov
in
sbb
aaa
jmp
retf
dec
mov
mov
jb
ja
aaa
(bad)
mov
dec
xor
stos
mov
cmp
clc
dec
mov
pop
sbb
cs
cwde
imul
inc
lods
fwait
lea
ds
daa
(bad)
xchg
bound
call
xchg
cdq
outs
repnz
mov
sbb
and
das
jmp
push
mov
retf
outs
(bad)
push
sbb
add
or
sub
pop
retf
sub
cmp
mov
jmp
enter
jle
pusha
sbb
clc
xor
cld
cmp
daa
adc
and
cmp
sti
add
loope
push
jecxz
in
sbb
push
scas
mov
mov
in
fisttp
dec
stos
fs
push
and
adc
sub
add
and
sbb
and
cmp
sbb
jmp
mov
mov
outs
mov
ror
mov
xchg
bound
mov
ror
imul
test
or
sbb
lods
inc
scas
jb
mov
inc
int
jmp
sbb
and
pop
mov
(bad)
sub
in
pop
or
cmc
or
sbb
xchg
mov
fnstcw
adc
jmp
ins
leave
and
or
outs
mov
sub
push
stos
xchg
js
jae
stc
dec
scas
mov
xchg
nop
lahf
jae
popf
retf
sbb
and
pop
(bad)
push
(bad)
or
inc
(bad)
xchg
inc
aam
std
outs
mov
rol
push
out
mov
fmul
sub
cmp
jo
push
sar
and
je
jo
daa
pop
cli
sbb
mov
scas
popa
fstp
mov
sbb
jge
mov
(bad)
js
pop
xor
adc
dec
mov
add
and
adc
aas
sub
inc
test
aam
call
shl
jmp
fld
inc
fcom
in
aas
push
or
pop
test
and
add
jnp
sub
push
stos
out
das
not
outs
leave
xor
adc
dec
scas
nop
jge
dec
scas
inc
mov
adc
pop
(bad)
pop
sar
out
xchg
mov
jmp
les
xor
push
aam
push
jmp
js
xchg
sbb
push
mov
dec
sbb
dec
mov
sahf
imul
imul
sub
ss
test
xchg
jle
xchg
jae
je
add
mov
xor
or
inc
fidivr
aas
rcl
cmps
xchg
push
cmc
pop
shr
jl
cmp
daa
call
jae
dec
mov
int3
dec
and
xor
or
and
out
mov
out
out
sub
or
xchg
mov
jne
xchg
xchg
lea
jnp
xor
lock
loop
dec
mov
ins
fstp
ror
xchg
ja
inc
cmps
bound
cmp
inc
les
in
sbb
push
scas
jp
gs
jae
dec
xlat
xor
and
sbb
adc
pop
mov
call
push
mov
int3
dec
stos
arpl
pop
fdiv
add
push
sbb
adc
out
bswap
and
or
pop
or
sub
stc
xor
ins
fsubr
popa
cmp
ss
dec
enter
push
in
lock
dec
nop
jg
add
out
or
xchg
lea
sub
test
mov
aad
sbb
dec
mov
xchg
fwait
jl
pushf
push
test
mov
push
in
ds
dec
mov
rol
push
movs
data16
loopne
hlt
dec
ficom
(bad)
and
popf
call
mov
iret
mov
jnp
cmp
aas
loopne
adc
pop
sbb
push
mov
mov
test
sbb
pop
xchg
loopne
lods
sahf
dec
lods
inc
and
rol
cld
and
dec
mov
jo
call
mov
js
adc
push
stos
imul
push
sbb
pop
shr
inc
push
dec
lods
sahf
jge
pop
leave
or
pop
mov
in
ret
add
pop
(bad)
jne
pop
mov
sub
int
cld
pop
stos
imul
dec
mov
dec
shl
lds
fistp
adc
cmp
mov
xchg
jp
cmp
lock
jecxz
iret
add
adc
nop
pop
xchg
mov
inc
mov
loop
not
xchg
xchg
nop
inc
mov
jg
nop
lea
outs
fiadd
jbe
push
cmps
dec
mov
hlt
ja
push
ror
pushf
dec
mov
(bad)
xor
ins
test
test
addr16
push
into
add
popf
popa
mov
ins
int3
cmp
and
pop
scas
popf
mov
cmps
xchg
dec
and
push
cmp
sub
in
sbb
arpl
cmp
clc
pxor
sbb
jb
xchg
dec
fdiv
jb
xchg
mov
rcr
mov
and
jg
xchg
inc
mov
sti
pop
aam
lds
scas
inc
mov
xchg
fs
xor
sub
cmp
aas
repnz
dec
mov
mov
fstp
cdq
retf
shr
jmp
rol
sbb
int
mov
and
sub
dec
ficomp
imul
repnz
stos
mov
ja
bound
sbb
ret
dec
cmps
xchg
pushf
mov
xchg
jnp
pop
xor
(bad)
pop
mov
mov
mov
stos
popf
inc
mov
test
add
ins
iret
cmp
push
test
pusha
test
mov
js
sub
or
mov
(bad)
or
adc
in
mov
pop
sbb
push
iret
sub
pop
xlat
push
mov
aas
jmp
sar
adc
cmp
jae
xor
xor
into
aas
jnp
push
aad
push
icebp
cmp
pop
mov
jg
xchg
clc
or
out
pop
mov
jae
push
mov
adc
xor
dec
stos
cmps
jo
(bad)
inc
fadd
std
sub
push
sar
imul
cli
aaa
push
in
ror
mov
popf
pusha
test
cmp
mov
das
(bad)
xor
sub
call
or
jmp
(bad)
push
adc
test
sub
in
dec
fdiv
bnd
xor
push
int3
push
scas
inc
aad
pop
div
jnp
sahf
jle
fwait
dec
ficom
cmp
add
pop
push
out
imul
pop
adc
xor
pop
mov
pop
mov
lds
stc
push
and
jno
leavew
aaa
dec
add
sbb
into
xor
jb
sub
clc
mov
nop
push
fnstcw
div
push
mov
dec
int3
sub
push
pushf
sahf
xchg
imul
jecxz
std
mov
sub
les
xor
mov
cmp
ret
push
mov
cmp
adc
dec
and
xor
daa
push
ss
imul
xor
jns
pop
mov
xchg
push
mov
xchg
jbe
es
ss
mul
jle
inc
(bad)
xchg
je
dec
adc
cmp
mov
jae
xor
cmp
cmp
push
not
jge
(bad)
fstp
dec
mov
test
mov
add
and
mul
sbb
cmc
push
mov
pop
adc
and
cmps
gs
icebp
xchg
mov
popa
int3
and
or
push
xchg
mov
cmps
jp
in
(bad)
adc
adc
dec
stos
push
dec
mov
mov
out
mov
les
dec
mov
mov
mov
and
sub
cmp
rcl
aam
pminsw
ret
arpl
mov
nop
ins
lar
xor
in
sub
jp
shl
out
or
out
inc
rol
call
mov
jno
inc
mov
mov
mov
adc
loope
enter
out
ss
jnp
pop
adc
stc
dec
shl
or
mov
xchg
jp
push
cmp
ficom
mov
and
adc
pop
mov
sahf
jns
nop
jb
lods
jl
mov
add
sbb
sub
dec
mov
ret
mov
sub
or
xchg
cmp
(bad)
jne
aaa
or
cmp
add
mov
aam
adc
pop
into
add
jecxz
(bad)
jne
addr16
push
movs
outs
cmps
mov
adc
and
loopne
mov
cld
and
jle
data16
loopne
cmps
fwait
out
jle
jg
sahf
popf
inc
mov
test
jl
jne
cdq
jg
xchg
or
cmp
daa
loop
ficom
jnp
and
dec
aad
(bad)
push
xchg
bound
mov
jno
add
in
xor
scas
xor
std
pop
call
xor
jo
jns
push
adc
pop
cmp
cmp
sbb
lods
xchg
xchg
(bad)
rcr
xchg
push
jnp
dec
test
not
inc
retf
add
imul
xlat
cmp
mov
lahf
push
scas
(bad)
fldcw
dec
test
mov
mov
jle
cmp
push
mov
fwait
repnz
ss
out
xchg
mov
or
test
inc
movs
adc
mov
ror
dec
shr
push
mov
nop
dec
shr
mov
jle
in
or
shr
in
cmp
iret
cmp
call
push
test
and
rcr
mov
mov
leave
das
pop
stc
push
hlt
mov
mov
xor
add
or
ins
movs
jecxz
sar
jecxz
jp
ins
in
add
and
loope
call
leave
and
adc
ss
es
cmps
xchg
cmp
daa
loope
fnstenv
test
je
sub
xor
rcl
add
and
dec
fnsave
inc
xchg
lods
stos
cwde
xchg
xor
cmp
shl
cli
sub
and
push
inc
ficomp
addr16
loope
hlt
pop
(bad)
mov
xor
pop
rcl
data16
bnd
test
rol
ins
iret
cmp
sub
add
mul
sbb
push
mov
cs
cmc
es
adc
or
pop
fisubr
(bad)
dec
mov
js
jb
pop
rol
sbb
add
lods
nop
dec
movs
imul
cmps
imul
adc
test
ja
push
shl
xlat
push
enter
je
fdiv
pop
cmp
addr16
push
cs
or
pop
lods
popf
ins
mov
jne
pop
fild
and
jne
ror
iret
mov
push
push
jno
jb
(bad)
pushf
mov
arpl
shl
cmp
cmp
dec
sbb
fstp
test
adc
int3
imul
jmp
sbb
push
sub
es
cli
test
mov
stos
ret
mov
sub
stos
shl
inc
cmp
jmp
and
add
cmp
add
call
gs
dec
jmp
sbb
std
or
add
push
mov
aad
lds
shl
popf
fmul
mov
out
inc
call
mov
inc
jmp
fist
and
mov
jg
retf
in
mov
push
dec
sbb
rcl
cmp
dec
bound
fidivr
stos
call
mov
jl
pop
imul
outs
stos
mov
(bad)
ficomp
(bad)
jbe
arpl
dec
mov
pop
cmp
sub
jae
pop
stos
adc
rcr
xchg
aad
mov
xlat
mov
nop
int
add
(bad)
push
cmp
mov
fisub
(bad)
iret
mov
xchg
pop
in
shl
xchg
lock
hlt
cmp
ficom
out
stc
lahf
sar
push
in
jge
and
int3
pusha
cmp
xchg
inc
outs
add
fsubp
mov
sub
pop
jecxz
clc
xchg
pop
pop
adc
pop
sbb
test
mov
imul
movs
cmc
xchg
sbb
or
add
or
imul
cmp
cmp
fild
jmp
icebp
mov
in
mov
cmovge
retf
ins
add
jae
push
out
stos
movs
icebp
xchg
int3
jp
pop
std
fwait
cmps
movs
jle
dec
sbb
pop
xor
push
test
dec
adc
fsubrp
mov
cwde
inc
sub
jnp
lock
cmp
adc
and
push
push
rcr
mov
sahf
enter
pushf
rcl
cmc
or
cmps
jg
adc
rcl
xchg
repz
aaa
jb
outs
or
ds
and
(bad)
mov
adc
and
sub
add
xchg
movs
(bad)
in
or
cmp
sub
stc
mov
loope
fdivr
(bad)
or
je
cmps
icebp
add
sub
push
or
xchg
push
daa
push
adc
ss
sbb
leave
hlt
xchg
cmps
rol
jnp
aam
test
std
xchg
les
mov
hlt
aam
stos
les
mov
xchg
jns
jbe
inc
cmovae
cmps
jmp
out
inc
adc
stos
ret
add
out
add
dec
push
jle
cmc
pushf
aam
sub
mov
mov
fstp
aad
shl
dec
xrelease
xor
xchg
mov
add
addr16
and
jbe
hlt
out
mov
cwde
push
test
mov
fist
cwde
cli
cwde
into
(bad)
pop
dec
push
dec
and
sbb
jg
inc
xor
or
add
fsubp
mov
test
or
ins
jae
jns
pop
add
int3
pop
dec
sbb
sbb
and
out
stc
out
mov
nop
std
xchg
dec
imul
xchg
stc
cmp
pop
and
loope
les
(bad)
jne
cld
jmp
xor
sub
leave
mov
sub
sbb
or
dec
push
pop
movs
adc
adc
cmc
bound
das
inc
xor
fsub
mov
jae
daa
jbe
fistp
out
mov
(bad)
mov
adc
sub
das
and
push
in
cdq
loop
scas
std
sub
stc
sbb
pop
stos
pop
out
into
imul
ror
(bad)
fsub
sub
sub
dec
outs
cmp
(bad)
xchg
stc
movs
rol
cmc
inc
push
rcl
pusha
add
adc
cld
(bad)
mov
push
repz
ror
(bad)
mov
inc
in
cmp
and
and
js
push
daa
inc
xchg
mov
out
daa
data16
(bad)
add
repz
fldcw
lods
(bad)
fsub
std
shl
fidiv
outs
and
fstp
retf
pop
cmp
xchg
imul
jle
iret
mov
mov
cs
popa
test
retf
cwde
cld
(bad)
dec
inc
cmp
rol
into
cmp
add
retf
pop
call
jno
mov
in
pop
push
xor
cwde
imul
in
aad
(bad)
cdq
out
mov
xchg
fdivr
mov
outs
xchg
int
js
pop
cmp
retf
leave
mov
hlt
mov
mov
mov
add
cmp
outs
sbb
fidiv
div
in
xchg
ja
test
push
xchg
(bad)
xchg
inc
cmps
fst
adc
push
retf
sbb
push
adc
cli
add
or
test
ror
lds
cmp
sbb
cmp
xchg
or
push
pop
repz
xchg
imul
repz
cs
inc
or
mov
nop
mov
mov
pop
aas
pop
xchg
icebp
mov
and
inc
cmp
push
push
push
mov
mov
mov
cmc
pusha
sbb
mov
pop
and
pop
jmp
addr16
mov
jno
repnz
cmps
(bad)
xor
xor
sub
shr
jns
retf
mov
popf
ret
mov
std
and
add
mov
retf
add
icebp
add
or
mov
xchg
fmul
hlt
sahf
int3
ds
cmp
shl
xchg
lods
sti
loope
movs
js
add
pop
adc
ror
pop
sub
fild
and
push
mov
fiadd
in
jnp
js
outs
pop
fisub
gs
push
dec
gs
call
pop
adc
lahf
ror
mov
in
xchg
or
out
mov
jbe
shl
enter
dec
mov
ja
rol
dec
fist
add
push
cmc
cmp
(bad)
mov
and
and
xchg
ret
in
sub
or
scas
stos
jno
jmp
jle
addr16
pushf
retf
gs
sub
ins
xchg
sbb
addr16
das
dec
jmp
std
outs
adc
sbb
int
inc
sbb
stc
lods
int3
mov
push
or
jbe
jmp
jmp
jmp
movs
adc
(bad)
or
sbb
(bad)
retf
mov
mov
repz
inc
pop
and
add
clc
push
adc
es
cmc
pop
sbb
add
mov
adc
and
rcl
mov
adc
fstp
jecxz
lds
and
add
in
nop
int
push
adc
cmp
cmp
shl
xchg
dec
popf
fild
or
jge
push
cli
lods
call
cli
mov
out
cli
add
mov
hlt
mov
rcl
shr
retf
sbb
pop
pushf
xchg
mov
dec
adc
dec
sbb
loopne
xlat
or
cwde
mov
mov
movs
je
test
mov
pop
jbe
mov
xor
addr16
mov
test
and
fwait
test
not
cmc
test
fist
sub
or
mov
add
sbb
cmp
pop
adc
push
sbb
daa
in
sbb
lahf
jns
inc
add
mov
scas
inc
mov
aam
into
or
aam
mov
adc
adc
dec
adc
dec
push
dec
cdq
push
adc
xchg
mov
push
xchg
dec
adc
and
xor
clc
xchg
dec
pop
cmp
lds
dec
or
mov
fnstenv
cli
imul
dec
and
test
adc
das
jg
scas
mov
(bad)
popa
test
popa
loopne
(bad)
sbb
aas
jp
mov
sbb
mov
mov
xchg
push
mov
inc
and
inc
test
ror
push
inc
adc
xchg
mov
adc
mov
les
xor
pop
xor
inc
sbb
cmp
jne
adc
mov
test
nop
in
mov
div
jle
push
jp
sub
pop
xchg
fnstenv
cmp
inc
lock
retf
push
xchg
adc
sahf
(bad)
inc
or
dec
loope
shr
cmp
jecxz
mov
rol
ret
fwait
in
mov
nop
cld
sub
lods
repz
mov
jge
inc
mov
sbb
push
(bad)
jle
push
xor
aad
pop
or
imul
push
idiv
addr16
mov
xchg
push
daa
das
std
gs
je
inc
push
inc
in
mov
xchg
add
pop
xor
xchg
dec
pop
push
mov
push
cmc
popa
mov
push
pop
sbb
loope
sbb
iret
or
inc
lock
add
mov
xchg
jmp
sub
inc
mov
pop
ss
mov
aad
jle
ins
in
dec
int
cld
cdq
dec
cmps
out
lds
add
add
imul
loopne
push
pusha
loope
leave
xchg
test
stos
shl
and
out
fsubr
dec
or
jmp
int
mov
sbb
fs
xchg
xor
cmp
ror
fidivr
mov
cs
shl
dec
add
jbe
cmc
pop
xor
sub
arpl
mov
mov
dec
(bad)
mov
jnp
jo
imul
jp
cmp
and
dec
jmp
shr
mov
or
ja
inc
out
scas
cmps
cli
xor
mov
movs
mov
xchg
adc
in
mov
lods
jmp
cmp
idiv
push
loope
movs
hlt
outs
xchg
dec
or
sub
clc
sahf
fmul
lods
inc
jno
outs
add
je
inc
imul
pop
push
test
mov
arpl
pop
mov
fild
(bad)
sub
inc
push
pop
xor
xor
or
cmp
push
add
js
cmp
stc
inc
int
loopne
jle
mov
out
imul
pop
mov
popa
sbb
aaa
call
lods
(bad)
arpl
aaa
push
out
je
(bad)
out
in
mov
es
pop
lds
mov
jae
dec
fst
imul
push
mov
ror
sbb
pop
mov
and
xor
nop
retf
and
pop
test
mov
ins
ficom
jbe
or
dec
ret
and
das
sub
dec
mov
xor
lds
lds
stc
xor
nop
rcl
mov
sbb
sbb
xor
jbe
scas
mov
mov
xor
cld
mov
leave
imul
loopne
retf
sub
inc
mov
fld
adc
and
dec
or
and
xchg
hlt
xchg
hlt
lods
(bad)
mov
call
mov
test
mov
pop
push
jge
jbe
push
pop
push
ret
jno
and
add
lahf
mov
xchg
js
cmp
out
test
mov
test
stos
repnz
ret
mov
mov
ficomp
leave
mov
out
fsub
call
shl
mov
retf
stos
out
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
lds
cmc
xchg
fisub
pop
adc
arpl
jae
shl
enter
cld
(bad)
fistp
les
movs
rol
std
mov
shr
sbb
aaa
jae
inc
xor
inc
xor
push
das
jne
dec
cmps
lds
fbld
les
sti
(bad)
fsubr
push
pusha
retf
mov
popa
ss
xor
inc
push
push
adc
test
test
stos
out
stos
out
(bad)
xchg
std
push
cmp
cs
sti
push
or
mov
(bad)
pop
(bad)
pop
scas
(bad)
jge
call
jo
xor
cmp
or
ins
cmp
adc
jbe
ja
dec
call
xchg
xchg
xlat
mov
fisttp
ficomp
loope
jmp
call
cmp
inc
mov
push
push
cmp
sar
push
(bad)
xchg
stos
jmp
mov
cwde
int3
outs
sub
imul
je
loope
push
mov
add
mov
loope
cwde
repz
dec
or
jo
es
lds
ss
fisttp
enter
xor
call
pop
sbb
mov
outs
pop
jb
add
icebp
mov
pop
cmp
jo
inc
sbb
xor
inc
repnz
xchg
cld
aaa
pusha
mov
inc
xchg
ss
es
jo
dec
pop
dec
pop
pop
or
out
mov
mov
xor
jmp
ins
por
popf
lds
cmp
push
dec
daa
sbb
out
add
fidiv
xchg
rcr
adc
int
dec
(bad)
mul
(bad)
movs
mov
repz
sbb
dec
add
jp
shr
shr
mov
mov
and
fwait
ror
sbb
jmp
push
(bad)
lods
in
test
das
cmp
sbb
mov
and
movs
rcl
and
push
push
(bad)
mov
not
lods
in
push
iret
mov
cdq
xchg
les
sti
inc
nop
loopne
push
mul
mov
cmp
test
adc
dec
aad
inc
pop
or
push
mov
push
push
or
adc
push
push
and
ficom
mov
scas
int3
das
jnp
lock
jmp
ins
cmp
adc
aam
dec
and
nop
mov
or
dec
mov
int
cmp
mov
aam
add
cmp
out
pop
test
es
fisttp
mov
call
pop
cmp
xchg
rcl
fcomp
ret
push
cmp
xchg
xchg
sar
dec
les
aad
xchg
retf
fcomp
aam
leave
sahf
mov
in
inc
fnstsw
idiv
pop
sbb
bound
pop
sbb
(bad)
ins
mov
inc
mov
jns
imul
nop
(bad)
sub
xchg
in
mov
mov
mov
test
sub
xchg
gs
stos
inc
pop
retf
cmp
scas
popf
rcr
stos
jae
adc
inc
loopne
mov
jno
pop
sbb
(bad)
xchg
fstp
dec
xchg
xchg
fild
mov
jmp
adc
pop
jl
out
push
adc
pop
xorps
mov
nop
movs
hlt
outs
cmp
inc
xor
add
add
push
cmps
js
or
out
outs
sbb
pop
sbb
pop
cmc
and
cmp
addr16
out
hlt
scas
repz
sahf
cdq
mov
or
and
sub
xor
repnz
dec
lea
jmp
lods
retf
and
dec
mov
(bad)
pop
test
push
inc
in
aas
out
or
xor
add
cmp
aaa
inc
and
inc
mov
dec
fadd
and
enter
xchg
js
addr16
mov
in
ficomp
dec
adc
out
repnz
cmp
mov
mov
push
out
or
cmp
dec
adc
pushf
imul
pop
test
ds
or
push
call
out
pop
sar
call
pushf
cdq
ins
mov
bound
and
ret
cmp
addr16
push
add
inc
jmp
mov
inc
fst
push
imul
test
mov
fild
push
int3
and
dec
iret
dec
into
and
pop
xchg
popf
jbe
xchg
jle
adc
push
ficomp
jne
push
mov
push
cmc
push
and
lods
fisub
cmp
inc
lock
add
out
xchg
mov
int3
inc
lock
sbb
pop
mov
mov
mov
lock
rcl
and
dec
xor
neg
ins
mov
inc
int3
add
pop
fimul
out
arpl
xor
adc
pop
fadd
push
aam
sti
xor
jbe
jb
or
arpl
pop
sbb
fisub
pop
push
pop
xor
inc
mov
fild
daa
sbb
pop
not
jae
inc
(bad)
pop
movs
jo
movs
retfw
add
leave
or
imul
cmp
and
cli
cs
or
pop
cli
ins
add
dec
scas
jge
jge
adc
push
sbb
dec
mov
mov
enter
sahf
enter
scas
xchg
mov
jo
jg
xchg
sbb
adc
xor
adc
ds
test
aaa
dec
enter
adc
cmp
sbb
ret
adc
cmp
mov
mov
xchg
arpl
inc
mov
and
and
aaa
xor
sbb
sub
dec
fdivr
sar
cmp
and
clc
aaa
sub
pop
test
stc
outs
jecxz
mov
add
popa
push
adc
aas
sbb
inc
mov
mov
ins
xchg
jp
nop
xchg
imul
fiadd
sub
pop
mov
fbld
shl
ret
pop
repz
imul
cmp
jg
inc
xor
push
icebp
xchg
ret
push
mov
sbb
cld
and
adc
not
inc
mov
and
push
movs
jno
ss
push
push
std
das
in
xchg
xchg
imul
cdq
sahf
(bad)
pop
iret
xor
xchg
push
cmp
fstp
shr
ret
and
retf
mov
mov
fsubr
add
and
push
icebp
xchg
(bad)
mov
adc
test
cmp
sub
test
gs
arpl
popa
mov
cmps
xchg
mov
outs
scas
jl
add
add
cmp
dec
mov
add
sub
mov
je
xchg
fwait
jbe
xchg
lds
stc
push
loopne
mov
data16
js
test
ins
add
nop
fist
inc
fadd
mov
dec
mov
arpl
mul
and
das
sub
ins
jmp
mov
pop
adc
cmp
es
(bad)
cmp
cli
push
mov
mov
shl
pop
fisttp
fdivr
mov
lods
popf
stos
xchg
jbe
xchg
xchg
lods
fimul
push
sub
popf
fisttp
icebp
sub
cmp
call
pop
nop
xchg
inc
movs
(bad)
aam
adc
dec
(bad)
imul
or
aaa
loope
add
push
cmp
ror
cmp
pop
cmp
nop
fld
repnz
cld
push
loope
mov
rcl
xchg
inc
int3
push
inc
fiadd
inc
fild
and
lds
or
(bad)
out
dec
je
ret
out
inc
rol
xchg
test
rcr
adc
cmp
popa
inc
or
or
push
out
xchg
outs
repz
shld
pop
test
ja
out
jmp
arpl
shr
out
ret
(bad)
or
movs
inc
repz
jge
and
xor
movs
xchg
xchg
cli
xchg
add
mov
adc
sahf
retf
rcr
mov
xor
mov
sbb
cld
cmp
nop
rcl
repnz
call
lods
mov
and
fnstsw
xchg
fmul
pop
adc
or
call
pop
into
popf
cmps
in
adc
je
cmps
je
inc
xor
pop
dec
mov
cwde
shr
mov
sbb
cs
ret
xor
fcmovb
retf
ds
dec
cld
fbstp
sti
add
aaa
aam
xor
push
xchg
dec
jmp
daa
aam
fnstenv
push
and
cmp
mov
push
fdiv
arpl
dec
sbb
fs
cli
jle
jmp
inc
lahf
ret
outs
int
xlat
mov
imul
pusha
xor
fisttp
rol
mov
sub
cmps
iret
sub
call
jbe
in
inc
fild
cmp
pop
sub
jp
loope
dec
push
shr
jnp
jmp
ds
mov
or
ret
xor
jbe
sub
push
sbb
jp
dec
loope
pop
xchg
jecxz
fimul
leave
iret
movs
test
xchg
xor
sub
lods
int
dec
movs
fmul
div
cli
out
pop
lahf
ret
mov
jb
push
mov
movs
jnp
scas
test
push
repz
xor
lods
xchg
or
sub
daa
in
(bad)
push
std
inc
stc
lods
aad
mov
xchg
push
cmc
loop
ret
mov
scas
and
out
cld
lods
call
jge
pop
xchg
(bad)
sub
xchg
dec
scas
fistp
pop
mov
jns
xor
mov
out
fcmovb
stos
fldenv
rol
sbb
out
out
lea
dec
dec
sbb
scas
dec
inc
cmp
lods
mov
jmp
movups
inc
xchg
lds
pusha
fucom
or
cmp
je
sub
sbb
push
rcr
xchg
push
rol
call
fidiv
call
stos
sub
mov
jge
cmp
popf
imul
dec
push
test
jmp
rcl
(bad)
jno
jno
lds
mov
or
loopne
out
push
stos
inc
imul
jecxz
xchg
sbb
imul
add
fucomp
xchg
add
inc
jne
inc
dec
mov
cmp
lds
pop
ss
pop
xor
call
sti
sub
pop
imul
cmps
mov
pop
jle
add
lods
mov
push
jmp
mov
push
bound
dec
mov
retf
(bad)
cmovp
call
mov
push
cmc
push
fadd
mov
outs
add
lea
mov
dec
loope
out
loopne
cmp
into
out
xor
jmp
outs
pop
push
sub
icebp
pop
retf
test
(bad)
mov
mov
pop
push
sub
in
xchg
cmp
xchg
fild
add
inc
cmp
xchg
sbb
dec
xor
das
ja
sbb
push
mov
rol
ss
sub
dec
pop
xchg
pop
jle
mov
gs
pusha
adc
loop
stos
push
stos
aad
imul
add
xchg
ret
dec
pop
fidiv
jmp
fwait
mov
outs
ja
cli
mov
ss
movs
out
sbb
mov
ja
mov
shl
movs
ret
ins
mov
add
iret
jmp
inc
adc
retf
mov
jmp
pop
jne
mov
mov
fist
or
repnz
out
cmp
(bad)
mov
cmp
xor
ds
dec
ret
xchg
loop
neg
fwait
ins
fcmovne
loope
push
push
sar
popa
jg
movs
pop
xchg
add
int
jo
xchg
inc
(bad)
std
push
in
fld
jg
mov
mov
mov
repz
sub
fwait
or
shl
ja
fbstp
and
fsincos
rcl
and
data16
xchg
pop
cmps
inc
movs
retf
jmp
loop
es
xor
retf
push
shl
push
das
dec
mov
adc
sbb
jg
cmp
daa
xor
icebp
loope
xchg
jp
mov
xor
popa
mov
repnz
cmps
js
test
(bad)
aad
xchg
mov
jmp
lock
pop
outs
data16
hlt
inc
inc
in
scas
jecxz
test
adc
adc
outs
(bad)
aad
stos
addr16
test
sub
adc
in
fadd
imul
stc
adc
cmp
pop
xor
fnstenv
jnp
int3
cmp
or
xor
push
sbb
push
out
xchg
sbb
and
pop
shl
out
lods
mov
cld
add
hlt
ds
jnp
pop
addr16
xchg
mov
not
mov
loop
add
iret
sub
pop
enter
jmp
mov
aas
push
cld
(bad)
bound
cmp
iret
mov
fldenv
push
mov
xchg
pop
mov
cmc
mov
push
pop
cmp
gs
sub
dec
pusha
iret
je
lea
mov
or
mov
pop
sahf
mov
fucom
(bad)
mov
dec
scas
inc
sahf
mov
repnz
dec
popa
sbb
and
cmps
mov
(bad)
mov
mov
and
pop
sbb
xchg
or
push
retf
mov
jle
fwait
pop
lahf
add
push
pop
xchg
ins
sbb
or
adc
hlt
adc
xchg
cmps
sbb
add
inc
add
out
icebp
mov
dec
xchg
mov
adc
(bad)
cmps
add
adc
push
ins
vaddps
and
cld
stos
les
icebp
pop
mov
shr
div
je
(bad)
jo
pcmpgtd
jbe
xchg
nop
aaa
les
sbb
xchg
cmp
sub
bnd
cmp
jp
sbb
adc
sbb
xchg
add
sbb
nop
mov
adc
xlat
sbb
enter
es
or
js
test
cwde
mov
push
(bad)
pause
jne
jle
mov
loope
aam
cmp
das
imul
sub
mov
or
xchg
pop
(bad)
xchg
xor
sub
mov
cmps
movs
pop
fistp
stc
in
mov
add
mov
pop
push
push
sbb
mov
mov
int
out
pusha
xor
dec
outs
mov
adc
call
mov
add
inc
lds
and
jecxz
sbb
les
mov
mov
bound
fdivr
lea
scas
mov
and
push
sbb
pop
into
lahf
mov
js
fiadd
cli
sub
retf
idiv
cs
sub
into
xor
push
xchg
aad
mov
jge
movs
daa
push
add
sub
mov
xor
repnz
clc
mov
jne
mov
pop
inc
jae
xchg
add
cli
ja
arpl
add
sub
xchg
dec
test
int
jp
inc
xor
div
jne
cs
popa
stos
or
jnp
pusha
push
add
push
adc
in
ret
enter
in
fldlg2
add
xchg
and
je
pop
adc
jmp
(bad)
sub
mov
out
adc
pop
add
pusha
push
(bad)
mov
adc
jg
lods
dec
mov
aad
fdivr
push
mov
fcomp
fsubr
xchg
(bad)
jmp
ret
xchg
pop
xchg
inc
xchg
xchg
xchg
add
scas
and
test
pop
inc
or
fsubr
ss
cmp
or
add
aad
mov
xor
loop
idiv
mov
adc
and
dec
pop
mov
cmp
sbb
icebp
cdq
ins
jg
jecxz
inc
call
sub
fidivr
cdq
push
push
and
sub
(bad)
out
mov
adc
xor
(bad)
push
ins
or
cs
gs
jns
sub
les
xor
clc
movs
stc
ins
push
les
dec
mov
mov
push
fidiv
push
(bad)
hlt
leave
lods
cmc
xor
(bad)
mov
inc
mov
call
or
lods
stc
jecxz
icebp
mov
xchg
test
aad
jmp
sahf
pusha
dec
loopne
pop
repnz
fist
cli
fldcw
out
cmp
fld
inc
aam
leave
sar
xor
push
adc
or
loope
push
dec
pop
cmc
mov
pop
dec
shl
jmp
pop
mov
pop
mov
arpl
imul
pushf
sub
cwde
in
mov
call
dec
es
xchg
(bad)
shr
lea
in
xor
xchg
ss
div
dec
pop
loop
push
fstp
and
push
and
xchg
push
fadd
or
mov
(bad)
jns
data16
fisubr
aas
fwait
xchg
lds
push
jg
mov
mov
or
pop
cmp
jmp
enter
xchg
movs
push
aam
in
mov
idiv
jno
cmc
icebp
mov
scas
inc
push
adc
cwde
cmp
mov
stc
outs
sbb
adc
push
xor
sar
dec
push
mov
dec
enter
test
and
mov
inc
mov
sbb
and
or
mov
scas
jne
jne
dec
push
sbb
jno
jno
lahf
gs
stc
loop
mov
into
xor
(bad)
repnz
test
xchg
fldcw
push
or
adc
jg
call
ja
or
adc
push
sub
aas
fcmovne
sbb
out
dec
mov
inc
mov
pop
scas
int
ja
jae
(bad)
dec
inc
jp
out
push
xlat
xchg
lds
and
shr
in
ins
pop
mov
aas
jns
rdmsr
cmps
add
lods
pop
mov
mov
fsubr
lods
in
ins
retf
mov
xor
inc
sbb
push
repz
cwde
arpl
ds
cmp
in
sbb
add
imul
push
(bad)
or
mov
or
call
mov
add
(bad)
jg
jo
out
sub
jecxz
sub
dec
push
cmovnp
jae
pop
pop
or
test
in
or
jns
pop
(bad)
pusha
(bad)
cld
data16
out
and
outs
lods
je
push
xchg
push
(bad)
clc
sti
sub
or
push
imul
jbe
(bad)
xor
inc
retf
mov
inc
out
push
cmp
lods
adc
(bad)
mov
mov
xchg
in
out
jmp
dec
dec
outs
test
mov
cli
dec
fidiv
cmovo
push
dec
jmp
mov
nop
stos
wbinvd
pop
pop
cli
jge
(bad)
and
ror
cmp
fwait
idiv
imul
(bad)
in
imul
loope
shl
sbb
push
test
dec
sub
adc
dec
inc
popa
sbb
mov
pop
int
call
in
inc
retf
(bad)
retf
out
stos
das
rcl
pop
xchg
mov
and
inc
enter
dec
rcr
out
push
and
cmp
mov
outs
loop
test
rcr
pusha
std
push
jle
xchg
adc
fdivr
mov
cmp
js
ds
mov
pusha
push
mov
jge
js
add
(bad)
pop
ret
je
fsubr
and
sub
into
adc
stos
outs
dec
(bad)
sbb
dec
xchg
scas
jl
je
inc
and
aaa
ret
pop
jle
stc
retf
fs
pop
mov
inc
shl
add
mov
leave
test
imul
ret
vphaddbd
dec
add
xchg
mov
aaa
outs
pop
cmps
test
xchg
or
jge
fldenv
sub
mov
shl
mov
inc
aad
add
lahf
jae
bound
dec
cmp
fs
lods
retf
inc
rol
mov
and
movs
(bad)
popa
sub
cli
mov
inc
inc
mov
idiv
xor
add
pop
lock
xchg
imul
adc
leave
ret
adc
pop
mov
rcl
jp
(bad)
mov
mov
popf
test
xor
sbb
aad
(bad)
(bad)
mov
xlat
in
add
mov
fsub
loopne
inc
xor
pop
mov
mov
mov
push
mov
push
adc
push
rcr
sub
adc
arpl
ja
or
gs
mov
daa
dec
or
inc
inc
mov
shl
mov
dec
adc
shl
out
mov
int3
mov
dec
dec
mov
ins
pop
jmp
adc
leave
outs
jg
mov
cmp
frstor
push
mov
sbb
rol
dec
xchg
push
bound
scas
push
shl
clc
cmp
in
stos
int3
pop
mov
scas
adc
and
xchg
shr
aaa
mov
xlat
mov
mov
xor
mov
ret
inc
cmp
aad
mov
mov
sub
or
in
sbb
(bad)
lahf
loop
pop
and
out
sub
jnp
iret
push
and
add
push
fidivr
cmp
(bad)
sub
cli
mov
aas
adc
scas
push
inc
retf
shl
jge
push
push
ror
sbb
ins
into
jo
pushf
mov
dec
enter
cmc
ficomp
pop
xor
push
mov
repnz
ja
xlat
cmc
hlt
push
cmp
shl
jne
sub
jg
fwait
mov
fisubr
(bad)
js
out
xchg
iret
sbb
mov
mov
lea
sub
mov
or
daa
rcr
leave
sahf
ror
pop
xor
xor
call
(bad)
int
aas
ficom
inc
int
inc
cmp
pop
enter
leave
leave
fimul
mov
mov
push
push
inc
dec
imul
jbe
lods
aam
js
xor
xchg
jle
mov
mov
dec
scas
enter
and
fisttp
fild
jl
push
pop
cdq
les
imul
cmp
pushf
add
push
sbb
mov
es
cld
pop
or
pop
ficomp
mov
test
int3
dec
lods
jb
mov
repnz
lock
xor
les
sbb
add
pop
nop
adc
cmps
(bad)
jecxz
cld
jne
mov
cmps
das
mov
jnp
ja
mov
out
mov
and
cmp
add
sbb
iret
sub
neg
xchg
clc
cmp
adc
xchg
mov
inc
aaa
add
fs
sub
daa
ss
aas
lods
dec
jbe
mov
in
into
xor
sub
lea
stc
and
gs
or
inc
adc
jmp
xor
adc
cli
out
mov
mov
call
adc
xchg
pop
sbb
fiadd
bnd
pop
or
jle
mov
in
push
sub
cmp
push
bound
aam
and
push
lock
or
sti
adc
das
(bad)
push
hlt
mov
cli
(bad)
mov
mov
in
xor
adc
push
mov
add
jns
add
outs
out
dec
push
aam
iret
outs
xchg
fst
adc
jp
idiv
out
jl
pop
dec
cmps
push
or
xchg
test
cld
out
inc
sbb
hlt
xor
xor
sub
jo
aad
push
cmp
xor
push
dec
lods
add
or
xchg
sub
push
stc
(bad)
dec
test
jmp
add
call
test
or
pop
mov
mov
mov
fsub
adc
inc
xchg
sub
scas
sub
in
gs
sahf
(bad)
xchg
add
mov
pop
retf
ins
dec
fsub
xchg
shl
xor
test
adc
jmp
fistp
ret
inc
xchg
inc
jge
test
ror
out
pop
out
in
movs
out
inc
pusha
(bad)
jmp
dec
inc
dec
test
cs
and
jne
sub
lds
xor
mov
sub
cmps
xlat
outs
lahf
mov
adc
std
out
sbb
aad
mov
test
sbb
loop
mov
imul
adc
jp
cmps
call
dec
popf
(bad)
jmp
nop
int3
sbb
pop
nop
jne
movq
mov
dec
aaa
push
mov
adc
sub
jg
test
jno
cmp
and
je
and
sub
(bad)
stos
xchg
and
jae
fucomi
jns
xchg
jns
push
lock
iret
adc
adc
xlat
cld
xlat
mov
loop
xor
aam
mov
sbb
inc
mov
inc
call
shl
xor
cmp
sub
sub
hlt
mov
cmova
(bad)
scas
add
jmp
addr16
mov
rol
sbb
dec
stos
sub
jo
xor
stos
sbb
ds
sti
retf
push
mov
pop
push
ja
fst
or
or
jecxz
cmp
cdq
pop
repz
out
repnz
pop
jmp
push
xchg
imul
dec
jecxz
rcl
loopne
cwde
sar
dec
adc
fmul
mov
xchg
popf
jg
or
iret
mov
push
sbb
jp
cdq
scas
fsub
mov
cmp
inc
pop
inc
pusha
jne
outs
mov
outs
lock
popa
cld
or
retf
inc
pop
(bad)
push
cmps
dec
mov
cmps
jns
dec
mov
outs
jbe
and
and
sbb
adc
xlat
dec
stos
adc
mov
pushf
retf
stos
dec
mov
idiv
movs
jo
cmp
std
daa
repz
pop
sti
ins
pop
or
ins
pop
or
cmp
and
lea
sbb
jmp
leave
mov
fistp
mov
pop
xchg
fldcw
rcr
push
fmul
sub
pop
ret
mov
dec
enter
int
out
out
mov
sbb
xchg
push
int3
mov
aam
jp
(bad)
movs
repz
mov
(bad)
dec
scas
jne
out
add
dec
xchg
dec
pop
sar
push
lahf
pop
mov
mov
jmp
mov
xchg
xor
cwde
pop
daa
adc
movs
pushf
xor
fstp
cdq
add
lahf
(bad)
pop
mov
xor
lods
or
in
mov
or
mov
in
cmp
dec
fwait
push
jo
daa
mov
retf
loope
sub
lea
mov
xchg
sub
and
jle
cmp
jbe
ins
xlat
movs
pop
cld
sub
push
sbb
mov
fidiv
inc
sub
mov
in
int3
iret
scas
gs
mov
xor
push
(bad)
cmp
aas
sahf
movs
test
fild
sti
jmp
jg
shl
mov
(bad)
sbb
fisttp
push
leave
sbb
dec
jns
sub
cmp
aam
xchg
in
std
ja
repz
ins
mov
add
cmp
add
lea
ins
lahf
js
adc
aaa
mov
cmps
add
stos
push
int3
test
daa
jns
es
jp
pushf
add
sub
test
cmps
(bad)
jecxz
(bad)
out
lahf
adc
nop
xchg
xchg
mov
(bad)
js
xchg
test
add
repnz
sub
xchg
mov
dec
or
(bad)
out
addr16
push
loop
lods
mov
inc
fnstcw
xor
sbb
scas
mov
out
test
push
cmp
cmp
mov
push
lock
add
pop
(bad)
jmp
sub
xchg
gs
push
pop
dec
mov
and
fs
adc
or
add
push
adc
(bad)
xchg
into
je
clc
jne
out
lds
inc
sbb
sub
ja
pop
sub
cli
xchg
mov
(bad)
scas
sbb
sar
ins
aaa
ins
lock
sti
outs
cmp
sbb
mov
mov
call
cdq
into
test
mov
push
aaa
inc
adc
dec
push
sbb
icebp
mov
lahf
sub
dec
sub
pop
push
jmp
iret
popa
adc
xor
pop
push
dec
xchg
inc
loopne
clc
xchg
lds
adc
cmc
scas
jmp
nop
ret
popa
ss
push
push
retf
mov
pop
xor
pushf
stos
fist
fisttp
mov
jne
push
add
sub
and
add
jo
rcl
xor
cmps
repnz
test
cs
pop
out
into
mov
test
adc
outs
je
and
xchg
push
sbb
inc
xor
mov
xchg
xchg
dec
cmp
and
js
sti
xchg
(bad)
xchg
cld
cmp
cld
nop
fidiv
ss
or
cmp
inc
jmp
jmp
enter
jmp
neg
cmp
or
xlat
xchg
iret
lea
ss
jbe
popw
and
les
push
pop
(bad)
pop
add
push
mov
xor
push
adc
mov
mov
add
bound
push
mov
push
mov
adc
mov
inc
push
jge
jmp
mov
nop
int3
lahf
mov
xchg
lods
popa
clc
xchg
les
sti
mov
sub
xchg
mov
(bad)
mov
retf
bound
call
cmp
or
out
fisubr
push
push
or
in
int
stos
arpl
cdq
les
inc
cmp
lods
shl
(bad)
aad
into
push
rcr
int3
movs
int
xlat
fbstp
daa
ja
and
and
mov
stos
fiadd
add
sbb
sbb
(bad)
das
cmps
out
fstp
xor
inc
cmps
bound
data16
aad
loopne
movs
bound
mov
fdiv
aam
out
xchg
dec
xor
push
lods
sub
jbe
and
cmp
adc
pop
cli
fwait
out
mov
fwait
movs
imul
(bad)
aad
hlt
jne
aaa
jbe
push
dec
push
push
sbb
es
sbb
mov
push
and
jg
pop
sub
push
mov
stos
cli
xchg
jae
icebp
test
sub
arpl
pop
jmp
pop
xor
push
jbe
xor
das
sub
push
outs
adc
push
sbb
sub
mov
add
push
rcl
inc
loop
fcomp
(bad)
cmps
aam
dec
adc
pop
and
int
repnz
fisttp
out
scas
cmc
test
and
dec
sbb
xor
pop
jne
pop
and
xor
push
xor
and
cwde
clc
mov
fist
pushf
inc
sbb
ds
or
mov
leave
fwait
mov
mov
xchg
jp
imul
repz
xor
bound
popa
out
inc
pop
inc
add
adc
sub
sbb
adc
fs
adc
dec
sar
pop
sub
inc
sbb
push
push
xchg
cmp
jbe
pushf
mov
jae
cmc
mov
mov
inc
sbb
out
rcr
out
mov
fwait
repnz
dec
add
dec
xor
jbe
sbb
in
rol
inc
adc
mov
mov
xor
aas
scas
rol
add
hlt
jnp
xor
dec
sub
or
popf
xlat
ins
pop
inc
adc
addr16
xchg
stos
cmps
icebp
xchg
ds
loop
mov
pop
sbb
dec
retf
jns
xor
cld
adc
call
xor
pop
and
or
ror
popa
and
cli
xchg
xlat
xor
cmp
es
dec
das
pop
push
xor
sub
jl
mov
mov
nop
jmp
test
mov
jnp
sub
add
inc
sub
das
sub
dec
aas
jle
or
aas
loopne
sub
sub
lods
out
mov
xor
adc
ins
imul
add
or
jecxz
cmps
push
leave
bound
jbe
and
loope
sar
sbb
inc
cmp
out
fstp
xchg
(bad)
and
mov
mov
or
jo
add
push
adc
xor
jecxz
xlat
push
ror
aaa
mov
mov
mov
mov
lea
out
aaa
dec
and
mov
inc
add
repz
cld
sahf
into
add
cmp
cwde
cmc
mov
idiv
cmp
dec
jmp
inc
js
pop
sub
int3
fsub
fcmove
xchg
std
lea
xor
pop
enter
es
lock
or
adc
jns
data16
add
pushf
jg
inc
ss
sub
int3
mov
xchg
mov
add
loope
test
cmps
xchg
add
inc
idiv
enter
loop
push
push
or
out
sahf
leave
mov
mov
or
adc
xchg
pusha
test
inc
xchg
lds
clc
icebp
mov
pop
push
jecxz
mov
push
cmp
scas
fnstsw
frstor
pop
stos
pop
xchg
fcmovbe
stos
ret
inc
or
xchg
call
xchg
out
mov
das
jns
movs
cmc
adc
add
and
dec
sbb
loope
icebp
movs
retf
(bad)
stc
mov
fmul
dec
add
or
outs
cmp
pop
add
lahf
not
icebp
(bad)
scas
std
mov
mov
push
nop
fcom
repnz
loop
fisttp
scas
icebp
mov
fwait
movs
clc
cmp
fadd
inc
cmp
cmp
div
or
mov
jp
xchg
leave
sub
cmp
sbb
in
test
push
pop
dec
clc
pushf
dec
loopne
int3
popa
mov
enter
in
fiadd
pushf
in
movs
test
xchg
fdivr
xor
jle
bound
inc
xor
jns
iret
jae
ja
mov
cmp
xor
inc
cmp
xor
xor
pop
fld
pop
xor
lahf
int3
je
and
std
es
jno
push
test
rcl
rol
or
mov
sbb
lock
out
mov
mov
call
sub
into
div
xchg
stos
sar
mov
mov
pop
jns
jp
pop
xchg
adc
and
loope
sti
and
pop
jecxz
mov
cdq
fmul
mov
lea
ja
jne
pusha
cmp
push
clc
fisub
pop
xor
mov
retf
int
rep
jbe
cmp
cmps
rcr
ja
sbb
imul
xlat
mov
and
dec
loopne
dec
adc
aad
leave
mov
add
icebp
mov
mov
aas
imul
fcomp
rcl
cmp
adc
jno
inc
adc
loope
aas
pop
xor
jns
jns
push
push
inc
es
sub
push
cs
cmp
sbb
dec
sub
sbb
inc
add
(bad)
push
adc
outs
cmp
sub
and
pop
or
js
add
jo
ins
or
add
mul
mov
call
push
adc
push
sub
xor
int3
scas
mov
in
pop
and
jmp
mov
adc
loope
mov
mov
lea
or
jb
pop
add
jbe
inc
(bad)
and
push
sub
rol
nop
scas
mov
mov
pop
xor
lods
(bad)
mov
fisttp
xchg
inc
rol
mov
or
out
popf
clc
js
out
mov
inc
and
outs
adc
add
mov
repnz
mov
xor
sub
xchg
pushf
iret
push
lods
les
mov
in
out
out
ja
ss
inc
cmp
std
adc
sbb
pusha
cmp
addr16
sub
or
push
xchg
fmul
add
pop
ret
xchg
out
imul
mov
jns
jg
and
adc
aas
inc
es
retf
push
push
adc
push
jne
(bad)
mov
mov
leave
fs
pop
cmc
loop
cmc
data16
std
hlt
pshufw
dec
(bad)
mov
ins
ds
pop
cmp
push
and
test
cs
fnstsw
and
mov
jb
pop
sbb
ins
push
push
sub
jae
dec
adc
jbe
jge
ins
add
test
mov
aad
and
inc
sub
xor
adc
(bad)
push
mov
imul
mov
xchg
mov
int3
scas
xchg
rol
pop
sbb
fisttp
dec
or
jp
jnp
xor
jne
inc
add
dec
aas
je
push
sahf
sahf
shl
jmp
lods
scas
cwde
ret
mov
xchg
sar
daa
jno
push
push
and
popf
jne
call
ret
xor
pop
(bad)
jnp
inc
jecxz
int3
inc
popf
rcl
adc
push
pop
repz
call
stc
test
mov
outs
ds
das
and
ss
adc
mov
mov
mov
pop
mov
inc
add
inc
lods
adc
add
outs
add
xor
je
int3
(bad)
shl
mov
imul
inc
repz
retf
cs
dec
jecxz
mov
lods
(bad)
xchg
inc
push
loop
int3
inc
shl
fwait
shr
mov
cmps
mov
jbe
push
push
pop
sbb
push
cmps
add
pop
or
sbb
cs
cmp
test
push
xlat
dec
aas
jle
dec
sbb
cmp
jae
icebp
in
xlat
popf
cmps
mov
sar
xchg
cdq
lds
into
mov
mov
adc
pop
sbb
push
add
xor
push
out
sbb
outs
cmp
sbb
daa
xor
std
test
mov
mov
or
pop
or
sbb
sbb
cmps
inc
loopne
std
pop
push
ss
adc
sub
inc
cmp
ins
push
gs
xor
jecxz
aam
lds
enter
test
pushf
sar
retf
adc
mov
call
out
mov
fnstenv
dec
jge
ins
cmp
popf
push
pop
or
adc
xchg
in
mov
adc
push
pop
xor
adc
pop
pop
adc
aad
or
jge
test
arpl
cld
test
mov
jne
xchg
lds
in
xor
int
loopne
in
xchg
sti
inc
cli
mov
mov
mov
cdq
mov
sbb
repz
dec
adc
ja
imul
pop
add
je
pop
adc
fbstp
or
xor
test
test
jmp
xchg
ret
mov
adc
aas
cmp
add
jbe
ja
push
add
mov
cld
xchg
out
pushf
arpl
js
mov
mov
cmovbe
pop
(bad)
xchg
aad
dec
sub
add
arpl
sub
addr16
ins
sub
pop
sbb
add
inc
jmp
lods
iret
add
out
les
cmp
inc
call
xchg
mov
ja
aas
jns
pop
adc
mov
push
add
clc
fist
cmp
ds
xchg
xor
dec
xor
stc
xchg
mov
fist
sbb
jmp
in
pop
jns
jnp
inc
push
inc
sbb
loope
(bad)
mov
xchg
data16
cmp
inc
fisttp
icebp
mov
stos
fisubr
leave
jne
sbb
jbe
mov
stos
scas
fisub
cs
dec
int3
scas
fcomp
push
dec
jmp
aad
rol
xor
ins
out
in
into
dec
adc
pop
and
ss
aaa
push
in
cmp
and
sbb
push
jecxz
cmp
in
inc
and
in
lods
les
or
inc
aaa
pop
add
dec
or
je
jne
and
push
and
xchg
fcom
jecxz
xlat
jns
ror
rol
mov
inc
xor
pop
and
int3
cwde
test
cmp
or
push
mov
fs
jmp
push
adc
add
mov
sub
mov
mov
imul
loope
in
add
inc
loopne
mov
arpl
gs
jmp
(bad)
push
jl
mov
or
mov
aas
outs
sbb
jne
push
cmovle
push
je
dec
daa
dec
das
xor
push
rcr
es
inc
cmp
add
outs
cmp
out
and
inc
or
cmp
inc
stos
popf
(bad)
xchg
retf
repnz
inc
add
fs
cmp
and
imul
jmp
pushf
movs
sbb
mov
aas
push
ja
jl
mov
adc
retf
cdq
xlat
repnz
(bad)
retf
push
arpl
pop
cs
cmp
dec
or
sbb
neg
out
stos
out
das
data16
mov
fdivr
jo
dec
les
test
neg
mov
cld
adc
std
mov
pop
sbb
or
cmp
ja
dec
jle
popa
jmp
mov
cmps
repz
les
push
jle
push
inc
mov
add
xor
ror
jns
push
mul
test
xchg
fcomp
cmc
xchg
cmc
mov
rcr
loopne
int3
push
or
inc
test
xlat
fwait
out
fcomp
dec
push
and
push
dec
or
jb
aaa
cmps
lock
fmul
xchg
mov
pop
jp
pop
add
cwde
cmc
mov
mov
pop
pop
jecxz
cmc
data16
push
pop
sbb
pusha
push
pop
ret
aam
add
jmp
sub
pop
loop
retf
pusha
out
(bad)
mov
pop
mov
mov
rcl
jae
ins
daa
ja
mov
ds
out
xor
xor
push
rol
mov
mov
bound
and
add
jge
pop
or
rol
adc
stc
push
push
inc
sbb
pop
or
adc
retf
jnp
sub
(bad)
sub
push
sub
sbb
pop
adc
inc
sbb
sub
pop
cli
(bad)
int3
mov
lds
jg
inc
sbb
jp
mov
xchg
cdq
stos
retf
sub
push
jns
ins
cmp
fistp
dec
add
jmp
outs
inc
xor
loopne
mov
adc
push
sti
sbb
adc
imul
leave
mov
sbb
dec
sub
mov
idiv
add
fstp
or
and
in
hlt
mov
sbb
jo
inc
cmp
mov
xor
xchg
sub
pop
cmp
mov
and
les
data16
ins
push
push
sbb
cmp
clc
nop
fldcw
push
inc
jmp
xor
sbb
push
in
lahf
lds
imul
loop
scas
(bad)
xchg
rol
sti
sub
cs
push
outs
repnz
aam
and
mov
cmps
(bad)
mov
inc
xor
aas
je
leave
push
aaa
inc
push
xor
and
lods
call
sub
pop
cmps
jnp
pop
in
jmp
popa
fistp
jnp
mov
stos
aad
jmp
sti
push
mov
push
fstp
xor
inc
or
clc
(bad)
fcomp
pusha
aad
arpl
jae
out
pop
or
push
cmp
out
ret
(bad)
loopne
lds
xchg
data16
push
and
jecxz
fild
fld
push
jecxz
mov
push
cmp
cld
stos
in
mov
cmc
xchg
leave
pusha
retf
dec
(bad)
xor
push
ss
dec
adc
pop
ds
cmps
jmp
pop
or
ss
jns
jecxz
jmp
or
jo
sub
lds
sbb
pop
and
mov
add
mov
repz
fistp
or
es
and
out
(bad)
or
pop
cs
adc
push
fiadd
aam
jle
inc
imul
lds
xor
push
jg
mov
movs
lock
out
icebp
test
aas
jle
outs
cmp
pop
pop
and
pop
xor
jae
dec
xor
adc
inc
out
ret
or
and
imul
jg
pop
aam
in
cwde
ret
nop
aam
inc
and
jb
push
and
imul
nop
sti
xchg
lock
ins
or
popa
or
cmp
dec
xchg
mov
icebp
mov
ror
aam
call
mov
mov
push
add
pop
inc
pop
add
pop
xor
adc
push
and
cdq
retf
xchg
mov
stc
xor
(bad)
rol
cmp
gs
into
nop
aam
or
popf
fld
test
sahf
not
out
cmps
mov
xchg
std
stos
in
test
cmps
mov
in
ficom
test
mov
popf
into
cmp
adc
in
and
dec
xor
push
ins
sbb
mov
jns
mov
add
mov
popf
sar
jne
popa
stos
adc
push
mov
or
sub
jae
iret
add
adc
popf
hlt
mov
xor
dec
cmp
cmp
sub
adc
retf
popf
call
xchg
rol
das
sub
test
or
(bad)
xchg
shl
cmps
fimul
ret
movs
fimul
outs
cmp
mov
fwait
pop
dec
cmp
jb
push
ds
mov
(bad)
xchg
hlt
mov
jns
dec
sbb
push
loope
stos
jl
pop
jmp
div
sar
mov
lds
pop
ds
arpl
push
mov
hlt
arpl
mov
sub
push
and
std
stos
out
xchg
ja
jb
retf
mov
fstp
jne
dec
out
shr
mov
mov
fistp
inc
add
jl
ins
cmp
sti
mov
xchg
int3
cdq
lock
ds
loop
ret
ja
jl
fs
arpl
adc
in
inc
xor
sub
aam
(bad)
xchg
scas
mov
sbb
pop
pop
pop
mov
dec
sbb
out
mov
fld
nop
les
mov
dec
add
jne
xor
push
push
shr
sub
pop
sbb
cmp
or
js
sbb
push
sbb
and
jle
jo
ret
pushf
clc
inc
or
dec
or
ss
aaa
xor
add
cwde
iret
mov
xchg
mov
hlt
mov
shl
fisub
int
std
xchg
mov
lods
cwde
repz
clc
(bad)
rcr
mov
inc
cmp
sub
lock
push
ja
dec
loop
push
push
sbb
cmp
push
pop
cmp
cld
mov
mov
outs
mov
mov
push
mov
test
outs
or
pop
shl
and
(bad)
push
sbb
pop
sbb
push
(bad)
mov
mov
mov
repnz
retf
je
dec
in
test
mov
dec
and
inc
or
jge
out
mov
pop
rep
loopne
xlat
mov
dec
sbb
js
push
adc
out
jns
adc
xchg
lods
mov
mov
stos
mov
dec
push
cmp
jbe
cmps
out
out
movs
(bad)
scas
aam
nop
jge
outs
xor
xchg
fisttp
aad
adc
sbb
addr16
or
(bad)
mov
cwde
out
add
xchg
push
add
fwait
or
jb
ins
dec
mov
test
aad
fstp
xchg
je
pop
xor
rol
xchg
mov
cdq
call
cmps
pop
xor
rcr
adc
sub
push
lea
cmp
gs
imul
cmp
das
stc
int3
adc
inc
lea
mov
movs
fstp
lds
and
jnp
inc
mov
arpl
push
dec
ins
(bad)
inc
mov
pop
cld
cli
and
sbb
(bad)
jnp
fimul
fwait
xor
in
aad
pusha
adc
enter
repz
and
icebp
mov
or
scas
retf
jbe
xchg
pop
lahf
add
popa
xor
mov
enter
aam
mov
dec
jae
scas
sub
stc
inc
push
jle
popa
iret
imul
add
or
test
xor
mov
add
loope
rcr
out
push
mov
inc
dec
sbb
adc
rcr
(bad)
ds
mov
push
or
and
fdivr
ret
inc
push
dec
call
rep
mov
pusha
sub
sahf
cwde
ja
xchg
iret
jmp
scas
jge
stos
xor
test
sbb
in
xor
mov
jno
jno
es
cmps
clc
adc
cmp
popa
fistp
push
xchg
rcl
mov
add
xlat
push
pop
cmp
adc
push
adc
loopne
push
xor
shl
push
ret
mov
push
fild
pop
mov
mov
pop
aas
movs
repz
js
(bad)
ins
popa
mov
and
lock
into
push
mov
xor
push
aad
ja
xchg
fild
or
pushf
mov
out
ds
jne
in
stos
adc
adc
inc
std
sub
test
sbb
bnd
dec
push
les
sub
sub
fnstcw
outs
in
daa
dec
pop
mov
retf
and
mov
icebp
pop
loopne
sub
nop
int
fisttp
das
sbb
cmc
add
clc
xor
or
sub
adc
in
scas
mov
push
popf
add
test
adc
pop
enter
lods
push
xchg
xchg
push
adc
in
pop
add
xchg
pop
xchg
in
jo
retf
adc
add
jl
push
xor
add
aaa
cvtdq2ps
jge
ret
jbe
cmp
ror
enter
jns
and
mov
mov
add
addr16
cmp
lods
test
mov
push
cmp
sub
mov
aad
in
(bad)
rcr
cmps
add
outs
push
adc
sub
or
mov
lds
nop
add
xor
cwde
ins
ins
daa
jno
pop
ja
mov
daa
dec
enter
(bad)
fwait
ss
inc
and
jmp
enter
sbb
loop
jg
adc
dec
cdq
and
push
aam
aaa
adc
mov
xor
xor
out
ret
and
lds
sbb
cmps
outs
in
jno
fstp
adc
cmc
cmp
jp
shr
(bad)
push
cld
and
pop
adc
xchg
cmps
outs
sbb
xlat
mov
ss
cli
and
or
repnz
data16
stos
push
inc
pop
or
popf
movs
pop
aaa
and
or
sahf
leave
sti
lods
and
or
cmp
hlt
mov
lods
pop
imul
fcomp
push
push
xor
mov
jle
or
xchg
icebp
lock
dec
pop
inc
mov
push
rcr
ins
sbb
inc
out
or
(bad)
rcr
(bad)
push
test
(bad)
outs
nop
cmps
xchg
mov
mov
xchg
cmc
push
pop
and
lods
inc
scas
mov
repnz
(bad)
stos
jmp
cli
and
stos
mov
add
mov
pop
jecxz
xor
pop
arpl
ret
imul
push
hlt
outs
sub
out
pop
cmp
aad
pop
and
pop
adc
movs
inc
mov
jnp
add
dec
cwde
inc
mov
jns
fwait
and
cld
sub
mov
mov
jae
xchg
pop
jmp
jge
shr
sub
cmc
mov
sub
test
out
nop
jae
aas
mov
call
sbb
in
jge
sub
test
xchg
retf
(bad)
jae
(bad)
fist
push
fxsave
(bad)
ds
add
xchg
in
push
sbb
mov
jo
sbb
push
xchg
and
fld
adc
cmps
or
out
imul
popf
cli
movs
or
xor
mov
mov
clc
retf
add
sub
xor
fcom
aad
ret
inc
push
push
shufps
mov
cmp
dec
cmps
inc
cdq
cwde
ins
mov
push
sbb
cmp
js
dec
mov
std
ins
or
jp
push
int
xchg
pop
imul
sub
call
sbb
sub
mov
clc
div
mov
icebp
ret
(bad)
shl
test
cmp
jge
xor
and
test
test
dec
in
test
stc
sbb
js
ins
add
xchg
shl
ds
adc
int3
and
popa
ja
mov
inc
or
mov
mov
aad
mov
dec
inc
dec
sbb
or
xor
pop
out
xor
xchg
pop
imul
pop
fistp
mov
dec
mov
add
inc
mov
or
mov
or
and
jb
push
inc
adc
sub
js
aas
(bad)
call
int
add
ror
adc
mov
mul
mov
idiv
adc
enter
(bad)
(bad)
aas
(bad)
mov
inc
call
inc
out
sbb
addr16
mov
xor
ds
inc
mov
xor
cs
sub
pop
inc
push
test
push
sbb
(bad)
jbe
xchg
xchg
cmp
mov
stc
push
cs
and
push
stos
(bad)
and
ds
stc
popf
inc
push
test
das
pop
rcl
sub
repnz
pop
mov
sbb
popa
jle
cmp
fild
xor
int
dec
sbb
mov
adc
enter
cmps
pop
sub
mov
aaa
(bad)
and
ins
mov
retf
xchg
call
pop
fisub
out
lds
cmp
int
addr16
leave
push
sbb
bnd
fdiv
push
mov
data16
fistp
arpl
iret
cmp
cmp
dec
mov
lock
add
jl
jp
dec
cld
mov
and
fistp
inc
in
icebp
jmp
retf
loope
or
jp
inc
adc
mov
das
inc
in
ret
cmp
push
push
add
test
xchg
gs
jae
cmp
pop
xchg
mov
jmp
adc
add
pop
jge
push
pop
xchg
xor
mov
push
call
(bad)
adc
(bad)
fcomp
std
jg
xor
loope
mov
neg
xor
cwde
std
sub
into
cld
cmp
mov
cs
out
ja
dec
mov
cmp
jb
or
arpl
imul
inc
add
lods
xor
jne
pop
jbe
adc
pop
repnz
pop
push
icebp
xor
xchg
popa
aaa
pop
cs
or
xor
sti
mov
das
mov
outs
imul
arpl
jecxz
gs
ins
ret
retf
jg
and
cmp
cmp
jl
das
retf
xchg
or
sbb
lahf
sbb
push
adc
neg
jb
js
or
lds
fadd
mov
xor
or
(bad)
gs
jmp
push
sar
aas
xchg
mov
jl
pop
jge
dec
dec
adc
mov
inc
iret
test
or
lods
pop
cmps
mov
addr16
sbb
cmp
fisttp
test
pop
dec
mov
xchg
mov
iret
pop
mov
bswap
loopne
popa
and
push
pop
rcr
in
icebp
pop
je
jl
xchg
mov
inc
jp
inc
mov
and
mov
cdq
add
ss
push
out
dec
xchg
rep
stos
cmp
xor
jle
inc
jno
cld
jnp
jmp
push
loop
mov
sub
mov
pop
dec
or
mov
mov
dec
dec
inc
out
imul
adc
ficom
sbb
in
xchg
cmc
add
mov
fmul
mov
adc
inc
dec
out
pop
mov
jb
scas
dec
or
mov
fdiv
(bad)
test
jnp
push
pop
scas
or
jae
sti
out
js
cwde
loop
xchg
ror
jns
js
and
sbb
mov
aad
dec
xor
inc
outs
mov
aam
pushf
inc
mov
aam
ja
in
push
xchg
test
sbb
mov
sbb
cmp
inc
data16
js
pop
adc
icebp
pop
dec
ins
mov
ret
mov
pop
movs
sub
mov
loopne
jge
fwait
jp
dec
pop
les
push
inc
pop
sub
je
dec
adc
mov
mov
stos
lods
fst
cdq
jnp
push
sbb
mov
mov
es
lds
xchg
jmp
jecxz
xlat
std
inc
pop
jne
sub
cmps
and
push
stos
fisttp
and
inc
xor
pushf
stos
cwde
imul
cli
mov
sbb
mov
ja
mov
jmp
arpl
repnz
mov
sub
pop
add
std
leave
push
mov
cmp
pusha
ror
call
xlat
into
es
or
mov
cwde
mov
data16
test
in
hlt
adc
xchg
or
xchg
pop
jmp
jle
lds
pusha
mov
push
or
pusha
mov
adc
ja
sbb
push
xchg
jl
mov
mov
inc
ss
data16
mov
inc
jns
add
retf
(bad)
and
xor
xchg
adc
fnstenv
adc
xchg
lods
icebp
ss
lahf
in
imul
mov
and
mov
repnz
push
call
sar
out
out
(bad)
aaa
xor
push
push
xlat
mov
mov
add
inc
(bad)
lods
sbb
fld
(bad)
daa
(bad)
xchg
dec
inc
sahf
xchg
bound
stc
gs
xchg
xlat
mov
jns
repz
movs
xlat
shl
push
pusha
xor
and
mov
add
inc
repnz
arpl
inc
out
aam
aaa
imul
xor
shl
outs
mov
jge
sbb
inc
in
push
sbb
cmp
stos
fidivr
cdq
sbb
daa
xor
xchg
push
ss
les
push
and
out
stc
fwait
(bad)
not
in
pop
(bad)
(bad)
repnz
and
push
shr
pop
push
cdq
cmc
js
cmp
in
repnz
mov
dec
pop
mov
push
mov
imul
sub
mov
in
sub
inc
cli
add
cmp
popf
stc
into
nop
jp
sub
sbb
mov
xor
outs
imul
sar
mov
xchg
sti
pop
push
cmp
aam
outs
das
out
sub
outs
aad
mov
cld
sub
test
cmps
lahf
pop
loopne
ret
outs
or
jp
pop
push
add
fld
xchg
jp
fidiv
fbstp
sbb
xchg
xchg
hlt
push
add
out
sbb
mov
jns
(bad)
idiv
inc
xchg
pop
shl
cmp
dec
dec
sbb
(bad)
jle
add
cmp
rcr
iret
inc
(bad)
mov
mov
mov
out
fstp
popf
es
push
je
cmp
ins
daa
lock
and
in
sub
stos
xlat
xchg
adc
jmp
dec
out
stos
mov
pop
mov
jmp
push
rol
push
mov
xchg
sub
sbb
sub
mov
fisttp
inc
or
inc
mov
sbb
inc
cmp
das
jge
pushf
push
and
mov
in
jne
out
lods
or
fstp
sahf
mov
enter
sub
adc
xchg
les
and
inc
mov
sbb
fwait
mov
push
and
popf
sbb
rcl
xchg
adc
jnp
inc
pop
call
in
test
sub
sahf
aaa
mov
out
jg
jb
out
inc
sub
(bad)
(bad)
call
pop
and
sub
sbb
jb
xchg
adc
cwde
mov
arpl
and
add
cmps
fs
mov
pusha
and
aaa
int
pushf
pop
aas
daa
pop
mov
mov
jnp
mov
dec
out
cld
gs
mov
mov
dec
sub
mov
mov
add
jle
push
lock
cld
shl
or
pushf
push
xor
loopne
outs
aam
fiadd
aam
cmps
(bad)
in
shl
and
sbb
or
sbb
inc
jl
dec
push
sbb
or
mov
push
cmp
adc
mov
pop
sar
rcr
retf
std
jmp
rcl
jnp
mov
push
pop
add
cmc
and
bsr
dec
pop
xlat
xor
into
int3
pop
lds
loopne
sub
test
into
push
shl
inc
popf
outs
cmps
test
mov
pop
mov
pop
shl
dec
outs
xchg
xchg
shl
clc
push
lods
push
pop
xchg
mov
sbb
xor
sbb
jmp
loopne
push
jmp
jl
call
xlat
clc
push
sub
movs
movs
test
push
cmp
push
xlat
retf
lods
fwait
cmp
jmp
test
xchg
out
sar
dec
call
xchg
imul
je
cdq
icebp
in
shl
xor
sub
sbb
int
lods
add
pop
ret
rol
fist
jb
sub
lods
sbb
dec
test
in
lods
cmp
pop
jne
pushf
mov
sbb
inc
pop
mov
je
mov
xor
mov
mov
mov
sub
mov
cmc
mov
adc
enter
pop
sub
popa
ret
push
xchg
sub
in
mov
int
jnp
inc
xchg
rcr
test
and
hlt
jns
and
inc
lods
retf
popa
xor
in
nop
dec
adc
out
fincstp
cmps
fistp
test
arpl
into
cmc
jg
cmp
add
and
std
mov
fdiv
or
fisub
test
fsubr
je
pop
xchg
push
ss
jb
rol
gs
sar
adc
(bad)
(bad)
inc
mov
pop
jb
and
test
ret
adc
cmc
jle
mov
dec
or
cwde
dec
xor
mov
sahf
mov
stos
xchg
cmp
push
mov
aam
xchg
push
lock
or
fnstcw
pop
(bad)
sbb
data16
in
fmulp
fwait
jg
and
test
jecxz
dec
test
adc
xacquire
adc
clc
test
pop
scas
push
mov
push
into
jge
pop
jno
pop
pop
jmp
ins
ja
loop
std
(bad)
ins
aas
imul
mov
fsub
inc
inc
sbb
xchg
jge
xchg
or
xor
adc
test
aaa
pop
mov
xchg
ins
sbb
in
pop
imul
mov
push
mov
mov
jmp
sar
ret
push
cmp
arpl
mov
xor
xor
int
mov
push
push
bound
fsubr
(bad)
jmp
xchg
outs
imul
stos
(bad)
fcom
xor
mov
or
xchg
jmp
or
pop
repnz
scas
jle
retf
mov
loop
xor
xor
push
xor
xchg
jns
mov
mov
loopne
ret
push
ss
retf
adc
mov
jg
repnz
fwait
and
push
jae
pop
xchg
and
lahf
jmp
push
popf
xchg
mov
or
das
outs
push
into
dec
int
jns
call
xchg
xchg
pop
gs
cwde
mov
pusha
(bad)
fdiv
call
stc
out
inc
push
or
pop
pop
add
cmp
jmp
fwait
pop
loope
ja
sbb
push
jp
dec
popa
cmp
movs
mov
jmp
lods
movs
movs
add
(bad)
loopne
jle
daa
hlt
mov
add
dec
jmp
dec
inc
cmp
(bad)
sbb
(bad)
loopne
(bad)
stos
dec
push
cdq
sub
repz
jle
cmp
lods
sub
mov
inc
test
xor
stc
dec
in
mov
mov
call
mov
push
repz
pushf
dec
scas
in
(bad)
pop
jns
and
ds
push
mov
jae
sub
fs
pop
inc
jno
and
adc
mov
repnz
outs
out
jecxz
fwait
and
xchg
in
in
ins
outs
pop
xor
ret
es
push
ja
dec
test
pop
cdq
data16
dec
ss
cmps
adc
sub
mov
xchg
fiadd
retf
xor
ret
or
mov
mov
out
out
lea
cmp
push
or
scas
adc
out
dec
loope
jl
sbb
pop
mov
xor
pop
or
(bad)
mov
push
jnp
inc
into
sti
sub
add
adc
inc
sar
shl
jno
jae
cld
add
jns
adc
or
(bad)
imul
and
cli
outs
xor
mov
rol
xor
dec
pop
mov
jle
cmps
or
mov
into
sar
or
add
dec
test
ret
adc
cmp
push
inc
fidiv
mov
jb
pop
ret
xchg
(bad)
cmp
scas
and
ja
mov
(bad)
jnp
inc
xchg
xchg
xchg
pop
out
nop
xchg
stc
enter
(bad)
mov
fisttp
or
gs
popf
shl
(bad)
jo
shr
call
dec
adc
inc
repnz
xchg
adc
(bad)
cmp
xor
out
cwde
inc
push
jecxz
jae
lds
cli
adc
push
dec
pop
mov
inc
test
xor
int
out
sti
stos
fidivr
mov
pop
and
(bad)
int3
ins
xor
mov
mov
call
pusha
xor
pop
dec
jns
rcl
jne
movs
ror
cdq
push
mov
dec
int3
and
mov
out
jecxz
jns
pop
dec
sub
outs
sub
mov
cmps
(bad)
ror
rcr
lahf
les
fmul
iret
outs
mov
imul
xchg
outs
add
sbb
mov
cwde
sbb
rol
out
fdivr
dec
sub
sbb
adc
and
cmps
mov
jne
daa
push
data16
jg
stos
int3
div
xor
dec
gs
outs
lods
push
xor
pop
xor
adc
jp
or
jne
sbb
xor
pop
lods
ins
and
xor
das
and
inc
push
push
stc
outs
or
add
inc
adc
(bad)
cmp
and
enter
cld
xor
pop
add
iret
loope
leave
repz
xor
hlt
xor
popa
cli
inc
adc
pop
xchg
std
mov
adc
test
or
sbb
mov
xchg
jo
sub
jmp
mov
fs
call
mul
mov
arpl
and
jo
aaa
and
ins
pop
ret
xchg
stos
cmps
jecxz
(bad)
cmps
inc
das
call
or
xchg
add
test
fimul
jecxz
adc
add
test
jge
xor
jno
cmps
lock
mov
xchg
push
dec
call
mov
push
movs
(bad)
pop
push
shl
inc
into
mov
mov
cmc
pushf
sub
pushf
out
push
push
xchg
(bad)
je
xchg
ret
add
inc
add
mov
cmp
and
enter
pusha
repnz
fisttp
fs
repz
std
and
je
leave
jg
scas
jmp
in
call
test
pop
push
hlt
ins
cmp
sub
fcomp
sbb
dec
adc
xchg
and
pop
outs
push
jb
xchg
rol
ss
cmp
dec
sar
or
arpl
not
inc
push
aam
(bad)
mov
inc
das
or
sub
mov
pop
or
pop
or
lea
mov
push
test
mov
leave
dec
sbb
jns
retf
icebp
cmps
rol
rcl
pop
adc
push
and
add
fisttp
adc
sub
cmps
out
or
mov
xchg
mov
or
mov
cmps
loop
inc
stos
mov
and
or
dec
test
pop
adc
cmps
push
add
call
(bad)
(bad)
lods
push
lds
push
dec
add
cdq
sub
es
cmp
xchg
adc
dec
sbb
(bad)
loop
jmp
daa
dec
push
xor
call
test
mov
mov
fcomp
mov
imul
cmp
inc
sub
(bad)
out
jnp
jae
imul
add
nop
xchg
mov
xchg
xor
(bad)
mov
push
inc
mov
inc
sbb
mov
(bad)
xchg
ss
les
enter
mov
jns
mov
and
inc
xor
push
mov
and
cld
mov
das
push
retf
scas
(bad)
clc
scas
sbb
leave
cwde
and
addr16
inc
repnz
int
jo
(bad)
test
dec
sub
rol
cmp
push
push
test
test
je
fmul
push
out
fsub
xchg
mov
in
adc
mov
pop
jbe
pushf
sar
bound
shl
cmc
(bad)
xlat
mov
xor
pop
push
imul
mov
mov
or
popf
out
mov
cwde
xchg
mov
ja
xlat
cdq
cmp
jge
js
adc
(bad)
lods
es
xchg
jae
popa
xor
xor
push
and
jo
retf
icebp
inc
adc
add
xor
xor
out
xor
push
jnp
(bad)
xchg
add
add
pop
adc
xchg
ret
lds
jae
xor
mov
icebp
push
push
pop
dec
push
(bad)
mov
loop
das
imul
(bad)
xchg
(bad)
mov
loop
es
je
imul
fwait
or
xchg
mov
push
add
dec
push
sti
scas
into
dec
imul
add
pop
cs
and
mov
fisttp
sbb
call
jno
jp
retf
cmp
fcomp
and
dec
sbb
push
xchg
(bad)
mov
push
pop
or
mov
mov
jns
add
dec
pop
(bad)
mov
pop
xor
push
(bad)
(bad)
or
fsub
(bad)
mov
dec
mov
les
ret
setle
jmp
into
pop
jns
mov
mov
retf
push
cmp
xchg
rol
and
cmc
and
mov
pop
pmaxub
push
je
mov
fistp
int
cwde
enter
inc
push
or
lods
stos
push
xor
loop
mov
out
hlt
ret
les
in
xor
ins
and
lds
sbb
cmp
sbb
div
add
nop
loope
pop
stc
adc
pop
jg
cwde
iret
sbb
pop
add
and
adc
jmp
mov
out
jg
jmp
xchg
lds
cmp
adc
xchg
and
mov
test
xor
or
lock
fidiv
sbb
div
dec
stos
fimul
inc
imul
rcl
push
xchg
aam
dec
sub
outs
mov
mov
lods
es
xor
je
cmc
mov
mov
lods
call
sub
loope
mov
sbb
xchg
rcl
jge
es
add
rcr
div
retf
xchg
ja
mov
ss
int3
ficomp
xor
adc
nop
rol
mov
push
push
scas
dec
sbb
addr16
in
fcmove
xchg
push
adc
push
xor
mov
ds
mov
adc
aaa
icebp
mov
aad
mul
xchg
mov
mov
sbb
shr
jbe
xor
adc
jbe
lods
(bad)
mov
movs
pop
add
out
mov
pop
cmovnp
enter
(bad)
test
(bad)
lock
js
mov
jno
movs
ja
inc
and
out
call
popa
adc
mov
adc
les
push
cmp
mov
int3
movs
and
jg
ja
outs
(bad)
out
mov
sub
dec
add
mov
adc
fwait
repnz
out
inc
addr16
lock
dec
or
aad
mov
mov
int
out
mov
sbb
sub
call
out
cdq
rcl
mov
sub
xor
xor
jno
(bad)
(bad)
fimul
pop
popa
xor
mov
adc
adc
nop
in
sbb
nop
(bad)
(bad)
stc
mov
pop
xchg
pop
sub
fs
and
add
and
or
xor
pop
add
sub
pop
inc
pop
push
cld
cmps
push
jnp
imul
cmp
inc
xchg
fucom
in
fbld
fisubr
dec
not
outs
jp
in
push
std
pop
dec
pop
sahf
not
push
inc
cmp
push
or
fstp
loopne
or
xchg
add
inc
add
icebp
mov
icebp
test
aaa
ins
es
mov
add
cld
mov
xchg
cmp
mov
cmp
ret
mov
push
inc
sub
jg
adc
push
aad
shl
push
arpl
push
add
mov
pop
or
cwde
dec
je
push
cs
mov
jmp
sahf
leave
mov
cmp
lods
call
cmp
loope
(bad)
lods
call
xchg
mov
mov
mov
xchg
push
je
imul
fwait
call
int3
push
and
pop
pop
sub
into
dec
cdq
in
mov
adc
je
ret
lds
shl
js
dec
cmp
xchg
xor
jne
div
pop
pop
fstp
inc
test
inc
jbe
jle
push
loopne
fild
cmp
test
add
bound
xor
test
test
movs
loope
jne
mov
push
adc
leave
add
test
xchg
sbb
mov
fbld
clc
mov
call
or
hlt
movs
pop
cmp
push
popa
or
cmps
(bad)
xchg
cld
mov
add
mov
imul
adc
xor
push
loope
sub
test
aas
jns
call
adc
jae
adc
adc
xor
xor
into
jl
sub
imul
cs
mov
shl
ds
jno
stc
(bad)
punpckhdq
jnp
(bad)
xchg
(bad)
out
or
jne
jle
gs
arpl
push
sub
jl
pop
push
sbb
and
xor
push
test
loope
and
mov
xchg
pop
inc
das
mov
(bad)
pushf
add
aam
jns
jnp
sbb
test
inc
adc
sub
xor
ret
mov
xchg
xchg
dec
movs
push
(bad)
fnsave
scas
xor
jnp
xor
dec
push
ss
add
cmp
push
adc
(bad)
lahf
scas
or
pop
popa
xor
mov
fcomp
pop
cwde
adc
pushf
hlt
adc
add
pop
inc
fs
(bad)
out
pushf
enter
push
dec
pop
or
or
in
fwait
sbb
outs
cmp
fwait
mov
adc
jl
jnp
fild
ins
or
popa
add
add
cld
lods
(bad)
jo
loopne
xchg
jecxz
fsubr
mov
mov
mov
clc
mov
sub
cmp
dec
xor
cwde
sbb
fimul
lea
xchg
add
mov
dec
dec
repnz
dec
sub
add
(bad)
aaa
jns
loop
ret
dec
sub
add
loopne
dec
sbb
cdq
js
push
push
test
sbb
pop
xor
outs
es
lods
dec
or
les
out
sbb
push
dec
jmp
pop
jl
outs
mov
hlt
sbb
cmps
in
add
fcom
imul
mov
cmp
arpl
int
mov
iret
cmp
jle
push
xchg
movs
and
gs
jmp
imul
add
popa
xor
and
pop
adc
mov
mov
push
mov
inc
pop
sub
stc
cmp
call
shr
xor
sbb
inc
stc
cmovp
into
call
push
add
add
fistp
jae
xchg
loop
sbb
dec
sbb
cmp
cmp
push
add
mov
push
and
mov
addr16
push
cmp
dec
and
std
es
(bad)
lods
icebp
xchg
jbe
loop
mov
mov
or
push
xor
push
adc
(bad)
outs
aaa
sub
test
iret
xchg
cmp
mov
scas
or
stos
aam
jle
nop
jecxz
and
les
add
movs
mov
inc
sub
mov
data16
cmc
in
xchg
test
test
and
mov
add
cmp
xchg
mov
fidivr
cmps
out
sbb
sub
sti
or
and
mov
in
mov
pop
push
push
jns
pop
inc
(bad)
mov
mov
sub
cwde
repnz
push
and
or
mov
cli
mov
push
test
nop
retf
pop
ja
aam
(bad)
adc
out
hlt
ret
les
pop
outs
and
in
inc
adc
and
jo
cmp
js
lahf
out
scas
pop
hlt
push
inc
pop
arpl
push
addr16
das
ja
adc
cdq
sbb
add
out
pushf
fcom
lods
fisttp
mov
mov
and
shr
test
mov
adc
fidivr
outs
into
iret
mov
and
test
inc
adc
cs
and
mov
test
mov
test
dec
or
adc
push
shl
or
test
gs
data16
call
push
pop
icebp
mov
int3
mov
sbb
push
dec
sbb
mov
mov
ret
test
mov
aaa
popa
and
or
lods
js
ins
and
pushf
(bad)
sbb
imul
fmul
ins
daa
push
pop
jl
fld
leave
pushf
sub
frstor
loope
add
mov
loopne
inc
xor
int
and
push
cmp
mov
mov
add
fcomp
mov
lods
jmp
ret
sbb
movs
repnz
lods
sub
loope
ret
sub
pop
pcmpgtb
pop
mov
cwde
orps
cs
adc
fld
mov
jo
add
popa
pop
sbb
fwait
sahf
(bad)
mov
into
cmps
and
inc
or
fmul
sub
fs
sbb
popa
mov
movs
int3
movs
cmc
adc
jae
inc
push
jnp
retf
stos
sbb
dec
daa
jno
ret
and
cmps
lock
cmp
xchg
xlat
jecxz
push
divps
pop
push
and
gs
rcr
and
pop
push
jle
sub
rcr
pop
sbb
daa
popa
and
mov
mov
add
push
adc
pop
xlat
mov
inc
push
ror
ds
std
retf
popa
and
jg
fidivr
sar
sub
dec
and
add
jl
rcl
dec
sbb
js
jnp
gs
popa
(bad)
mov
mov
mov
sti
stos
enter
pop
adc
nop
fbstp
push
push
pop
rcl
dec
outs
sub
outs
or
popf
mov
xchg
(bad)
xchg
push
aas
xlat
mov
inc
or
add
in
jns
jp
nop
mov
sub
gs
shl
in
mov
mov
lahf
out
pop
or
jno
push
dec
adc
dec
dec
sub
cli
cmp
xor
ja
repz
jno
call
or
mov
inc
aaa
pop
cmp
dec
adc
(bad)
enter
dec
cmp
mov
push
pop
pop
dec
adc
mov
das
push
and
maxps
jbe
mov
loop
xlat
ss
adc
(bad)
jmp
aad
adc
in
inc
sbb
or
test
mov
mov
es
dec
sub
cli
pop
xor
popa
cmp
mov
aam
push
cmp
sti
mov
or
test
adc
or
div
ja
mov
out
add
imul
cmp
sti
mov
push
cmp
stos
aad
out
test
mov
pushf
mov
dec
push
push
call
ss
cmps
xor
and
xor
dec
sbb
inc
adc
push
inc
loopne
out
xor
lock
fist
dec
in
sbb
cmp
xchg
ret
push
jecxz
int3
popa
jge
cmp
mov
and
pushf
xchg
pop
jmp
clc
movs
pop
repz
fdivr
jo
mov
adc
aas
mov
xor
pop
stc
mov
fdivr
js
in
inc
int3
ins
cdq
rcl
cmp
jle
(bad)
mov
scas
imul
inc
or
(bad)
call
mov
addr16
or
imul
or
std
lods
xchg
mov
retf
jbe
cmp
pop
in
adc
mov
into
push
dec
and
adc
outs
sbb
arpl
je
jb
inc
loop
hlt
popf
cli
scas
ficomp
push
jge
jbe
arpl
add
inc
add
lds
call
mov
mov
xchg
(bad)
sbb
retf
(bad)
jecxz
retf
pushf
fnsave
loopne
into
imul
or
jnp
dec
add
jge
outs
sub
pop
std
scas
add
leave
add
push
cmp
aaa
fcom
adc
aad
dec
sbb
add
mov
inc
add
leave
xchg
mov
mov
outs
sbb
pusha
je
push
adc
mov
in
lods
les
in
loopne
xor
jp
xor
sbb
jmp
mov
add
sub
mov
mov
or
pushf
jmp
mov
fdiv
std
mov
outs
movs
into
cmps
lds
dec
mov
or
inc
add
aad
dec
test
pop
mov
cmps
push
imul
sbb
lds
in
mov
push
mov
adc
xor
sbb
pop
pop
jmp
lds
or
andps
mov
pop
in
(bad)
or
lds
inc
cmp
and
xor
adc
loopne
lods
mov
mov
jge
xor
test
push
aam
jns
nop
ins
xchg
(bad)
mov
sub
ret
addr16
mov
cmc
(bad)
jecxz
fild
mov
int3
push
or
jno
push
mov
inc
sar
aad
mov
xchg
out
jb
gs
imul
fld
xor
retf
and
pop
inc
sub
dec
outs
push
fiadd
ret
push
ret
sti
cwde
(bad)
xchg
sbb
sbb
xchg
out
xchg
out
gs
or
sub
inc
retf
xor
das
push
test
jg
mov
xor
dec
fwait
mov
retf
fidivr
pop
xor
xor
push
std
scas
mov
icebp
push
or
imul
xor
xor
jmp
dec
push
or
adc
or
cdq
ror
pop
leave
dec
mov
and
shr
jnp
outs
mov
pop
xor
call
mov
retf
aad
mov
inc
jmp
rol
dec
push
aam
push
cmp
or
arpl
ret
rcr
fst
sbb
mov
(bad)
in
jbe
rcr
mov
add
dec
jmp
inc
push
(bad)
je
test
div
jo
clc
mov
fstp
push
cdq
or
arpl
jmp
imul
or
lds
and
cmp
js
ror
and
sbb
daa
lods
mov
retf
dec
jl
xchg
outs
cmps
sub
push
shl
dec
mov
cmp
pop
in
movs
mov
and
rcr
aad
stos
xchg
jmp
xor
scas
or
jg
jmp
addr16
fist
fidivr
add
out
cmp
xchg
push
and
in
push
ins
enter
int
cmp
or
sahf
je
outs
jo
cld
add
fdivr
pop
mov
loope
sub
jns
popf
inc
mov
outs
fistp
pop
mov
fidiv
neg
mov
push
mov
data16
inc
fild
mul
fisubr
ret
xchg
and
imul
(bad)
(bad)
or
push
fadd
adc
xlat
sub
dec
scas
xchg
pop
xlat
pop
adc
pop
mov
push
jbe
jne
ds
ds
daa
pop
mov
pop
cmps
sbb
mov
adc
ss
pop
and
popa
xchg
mov
add
jb
mov
dec
lahf
dec
ja
adc
or
jmp
push
std
push
nop
cmp
ja
mov
lods
jno
js
dec
sub
cwde
push
sar
and
outs
mov
cmp
dec
xchg
imul
and
cmp
or
sahf
xor
mov
ficom
pop
(bad)
and
rol
popf
push
or
cmp
cld
sub
mov
add
lods
inc
lea
mov
cmovns
jmp
(bad)
and
arpl
imul
enter
add
dec
pop
sbb
scas
clc
sub
jmp
daa
nop
fdiv
(bad)
mov
pop
div
das
js
mov
mov
mov
test
add
cmovbe
pop
sbb
lds
lods
in
test
call
ins
cmp
xchg
fcomp
push
push
xor
dec
mov
mov
xor
mov
push
jge
out
test
cdq
je
gs
shl
cmp
lods
(bad)
or
cmp
jo
fcomp
add
or
cmp
mov
lods
cmp
pop
(bad)
fistp
pop
rcl
rcr
sub
adc
xor
shr
inc
xor
movs
div
cld
lods
in
test
dec
add
(bad)
cmc
scas
sti
inc
xor
dec
push
dec
sbb
jne
or
sbb
ja
push
movs
shl
xor
inc
push
jge
je
push
xchg
fisubr
popa
and
jnp
push
fs
mov
int3
cwde
mov
ficomp
je
mov
imul
cmp
add
xchg
push
add
das
int
sbb
lock
cmps
jg
cwde
cwde
jb
fisttp
jge
icebp
and
push
aad
hlt
inc
scas
jb
call
xor
das
cmp
retf
rol
push
mov
leave
xchg
fisttp
sbb
(bad)
popf
(bad)
inc
add
lods
jge
retf
and
stc
cmp
shl
jno
call
cmp
and
ins
mov
mov
adc
add
nop
jns
add
push
push
sar
sub
mov
jno
leave
daa
in
movs
mov
xchg
mov
jg
lahf
scas
movs
lods
jbe
ret
push
(bad)
and
add
add
nop
mov
and
sbb
call
dec
mov
shl
add
add
and
push
inc
lods
xchg
jl
xchg
jo
cwde
fisttp
outs
or
ret
pop
xchg
jbe
in
and
push
imul
xchg
lds
ss
cld
ja
jl
jno
pushf
cdq
jae
mov
popf
inc
fld
push
and
push
mov
sub
xchg
mov
push
call
popa
add
jno
mov
adc
dec
call
xchg
cmps
fwait
dec
lds
inc
loope
ficomp
xchg
nop
fisubr
push
repnz
ja
jae
push
mov
movs
je
push
repz
imul
cmp
pop
xor
and
cs
adc
ins
int3
inc
cmps
sbb
inc
mov
and
ret
pop
sbb
and
xor
sub
aas
sub
xchg
imul
cmp
fwait
mov
adc
bswap
sub
(bad)
push
std
js
sub
inc
adc
int
fld
movs
aam
inc
ja
xchg
imul
(bad)
push
in
js
ins
jmp
inc
out
and
lock
ja
sbb
inc
(bad)
(bad)
and
retf
mov
aas
and
add
push
pop
dec
fcomp
jp
dec
mov
dec
sti
pop
jmp
jg
jmp
fisttp
pop
loopne
push
xor
push
cli
pop
pushf
pusha
dec
jne
mov
jb
inc
xchg
leave
jle
inc
add
inc
loop
aam
push
push
stc
jge
xchg
mov
pusha
xlat
push
mov
push
in
stos
stos
mov
add
hlt
nop
mov
xor
and
push
test
jbe
jg
es
jo
jo
outs
in
mov
ins
shl
xchg
xlat
add
pop
shr
pop
mov
cmp
push
cli
popf
mov
int
lods
mov
ror
cs
dec
cmps
data16
mov
mov
inc
mov
mov
mov
mov
push
mov
retf
sbb
add
loop
stos
lods
mov
xor
popf
sub
call
addr16
fwait
inc
cmova
cs
sbb
lods
jns
pop
mov
mov
test
jae
and
ret
and
push
mov
test
cld
xor
das
inc
adc
push
inc
repnz
push
ret
and
cmp
xchg
xchg
inc
fdivr
dec
cmp
imul
enter
or
aaa
clts
jecxz
int
repz
lahf
mov
jb
push
mov
clc
pop
movs
jnp
jl
ss
sbb
int3
cdq
jo
mov
xchg
push
mov
test
add
movntps
jl
cmp
add
xor
inc
or
leave
and
inc
mov
aad
loop
mov
mov
push
dec
call
(bad)
jne
dec
lods
fs
jmp
sti
push
mov
adc
add
ins
fst
out
or
pop
nop
jg
push
mov
jae
pop
push
inc
test
rol
aam
stc
es
cmp
test
outs
(bad)
popf
ror
int
xchg
dec
adc
push
test
std
daa
cld
sub
push
shl
sub
jo
jno
aas
loop
adc
xchg
push
jb
xchg
mov
mul
std
add
pop
xchg
inc
test
sar
cmp
cmp
in
call
and
shr
xor
push
into
inc
icebp
es
pop
mov
push
loopne
adc
add
push
mov
add
(bad)
pop
enter
repz
aad
call
cmp
cmp
repnz
cmp
imul
cmp
adc
ja
xor
sub
push
in
adc
sub
dec
adc
jecxz
(bad)
jne
fwait
inc
into
adc
mov
add
xor
imul
or
mov
lea
inc
(bad)
jge
nop
dec
adc
add
in
add
pop
xchg
inc
fist
sub
dec
mov
fcomp
cwde
arpl
daa
jmp
mov
stos
fnstcw
das
push
int3
and
dec
into
xor
cmp
jo
push
std
ins
call
mov
pop
fdiv
add
and
push
xchg
les
outs
scas
mov
popf
xchg
pop
mov
mov
test
mov
ds
out
int
push
loope
test
ins
lods
jae
add
or
jbe
or
and
add
loopne
repnz
mov
movs
xchg
pop
and
and
push
iret
cmp
cmp
sub
xor
push
xlat
xor
cmp
dec
pop
sub
pop
iret
ss
push
stos
xchg
fs
mov
in
mov
mov
mov
movs
mov
inc
out
mov
or
lods
mov
pushf
nop
jne
or
push
or
dec
mov
pop
xor
out
inc
aad
sbb
sub
std
jbe
jp
xchg
js
push
mov
and
daa
adc
dec
cli
cmp
ret
mov
das
jg
inc
call
dec
sbb
or
dec
mov
data16
and
inc
adc
push
stc
jg
cmp
push
fist
fwait
push
in
fldenv
dec
mov
xchg
mov
lea
push
mov
popf
popa
mov
out
dec
test
pop
dec
sti
lahf
fisubr
mov
loope
mov
sub
cmp
mov
iret
xchg
lods
fidivr
sub
pop
es
icebp
pop
cmp
mov
mov
pusha
out
mov
jl
pop
mov
mov
mov
or
ret
nop
movs
ret
cdq
cdq
fs
std
push
pusha
stc
jnp
pop
retf
jnp
xor
xor
and
xchg
ret
pop
lods
(bad)
js
or
xor
retf
inc
aad
bnd
and
inc
cli
mov
fnsave
push
sbb
adc
adc
pop
pop
(bad)
pop
aam
mov
test
(bad)
xchg
rcr
shl
cwde
lahf
xchg
arpl
popa
std
(bad)
mov
stc
ins
sbb
xor
and
pop
call
cmp
pop
sbb
pop
xchg
loop
xlat
sub
sbb
dec
or
sub
fbstp
(bad)
push
xlat
push
stos
fs
ja
push
jmp
and
and
or
and
in
dec
mov
les
jg
inc
movs
ja
outs
out
jge
jae
cmp
jge
sub
in
push
mul
jo
es
fisubr
aas
aas
push
push
xor
ds
es
xlat
pop
int3
imul
stos
xchg
xchg
mov
pop
clc
ins
fcom
xchg
mov
cwde
popf
pusha
cli
dec
stos
xchg
mov
add
mov
pop
out
jge
jo
dec
retf
dec
int
(bad)
sub
add
xor
sbb
ins
test
ins
imul
jno
outs
(bad)
jnp
jl
jno
dec
aam
das
sbb
push
add
jmp
xor
xor
or
push
jmp
mov
xchg
lahf
cwde
mov
mov
cmp
aad
(bad)
ja
es
pop
push
or
pop
mov
push
mov
push
fcomp
test
mov
dec
test
mov
xchg
dec
mov
mov
mov
inc
clc
data16
pop
(bad)
and
je
jbe
push
repz
test
lods
lods
mov
mov
or
test
mov
pushf
jo
dec
out
inc
cli
je
jae
inc
idiv
pop
jmp
mov
lds
push
movs
test
dec
fst
popa
shl
dec
mov
pop
ror
sub
sub
adc
and
push
fadd
cmps
xchg
stos
xchg
test
mov
pushf
lahf
call
cmp
push
les
push
fidiv
rol
dec
mov
call
cdq
pushf
mov
xor
sub
push
out
inc
lock
out
dec
aam
test
out
retf
push
jmp
enter
xchg
addr16
int3
and
sbb
adc
pop
test
xor
in
das
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
push
pop
dec
push
pop
pop
push
pop
push
push
push
push
push
adc
push
push
push
sub
sub
push
push
push
push
sbb
jb
push
push
repnz
push
cmp
adc
push
push
adc
push
cmp
jo
ins
push
push
push
push
outs
add
push
pop
nop
cmp
xor
push
push
push
push
push
cmp
push
push
push
fidiv
push
push
ficomp
push
push
cmp
push
push
push
push
push
push
push
sbb
push
pop
dec
mov
push
push
push
in
sub
pop
push
push
push
push
push
push
push
adc
push
push
push
xor
push
push
sub
push
push
gs
push
push
pop
push
push
push
sub
push
push
pop
push
push
push
sbb
push
push
or
push
push
sbb
push
push
sbb
push
push
sbb
push
push
sbb
push
push
pop
push
push
push
adc
push
push
push
sbb
push
push
pop
push
push
push
sbb
push
push
sbb
push
push
push
push
push
in
pop
push
push
push
push
push
adc
ret
push
lods
push
adc
nop
push
sbb
aas
pop
add
adc
addr16
lods
push
sbb
jmp
push
sub
add
adc
rcr
test
adc
sti
sbb
sbb
sbb
push
and
aaa
sbb
sbb
adc
lea
or
sbb
sbb
sbb
push
add
push
and
add
adc
inc
sbb
sbb
sbb
mov
push
mov
push
leave
sbb
sbb
jmp
push
aaa
sbb
push
adc
add
adc
or
push
sub
cmp
sbb
pop
push
add
sbb
inc
push
push
push
sbb
push
jl
sbb
mov
add
adc
movs
push
or
push
or
push
dec
sbb
push
pop
pop
aaa
sbb
aam
and
sbb
adc
pop
sbb
cmps
pop
call
pop
adc
aas
adc
sbb
push
sub
pop
mov
push
sbb
js
inc
adc
push
mov
inc
adc
push
rcl
sbb
or
inc
adc
push
jp
or
adc
arpl
mov
aad
push
push
sbb
leave
adc
push
adc
adc
push
xor
add
sbb
and
push
dec
adc
adc
jge
aaa
sbb
push
call
adc
sbb
push
fcom
outs
adc
push
add
add
sbb
push
adc
sbb
jns
add
sbb
ins
adc
sbb
xchg
adc
sbb
adc
mov
push
fist
and
or
rcl
and
sbb
lock
adc
push
or
ins
sbb
push
and
ins
sbb
push
dec
adc
sbb
jle
ins
sbb
push
ins
adc
sbb
mov
push
ficom
ret
sbb
push
push
push
pop
push
push
push
push
push
pop
push
pop
push
push
push
push
push
aaa
push
sub
sbb
pop
push
pop
push
push
push
push
push
and
sub
pop
push
pop
push
sbb
push
pop
push
push
pop
push
sub
adc
pop
push
sbb
push
push
push
push
push
adc
sbb
push
push
sbb
push
push
inc
push
push
push
adc
sbb
adc
pop
push
push
push
pushw
push
push
adc
sbb
nop
push
push
push
sahf
push
push
push
adc
adc
push
push
push
fwait
push
push
push
adc
adc
pop
push
push
xchg
push
push
push
pop
push
adc
xor
adc
push
push
push
pop
push
or
xor
das
push
and
ds
das
push
jnp
xor
das
push
cdq
pop
and
das
push
mov
pop
push
nop
mov
nop
xchg
nop
sbb
push
bound
push
nop
push
(bad)
sbb
push
nop
sbb
pop
nop
sbb
pop
nop
sbb
pop
sbb
pop
sbb
pop
sbb
push
sbb
pop
sbb
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
sbb
test
ds
sbb
mov
push
mov
ds
dec
ds
push
push
push
sbb
repz
or
ds
push
push
push
sbb
repz
or
ds
push
push
push
clts
ss
or
pop
push
xchg
ds
push
push
push
or
push
pop
push
mov
push
or
push
pop
push
mov
push
or
push
pop
push
retf
push
push
push
or
push
pop
push
repnz
push
push
push
pop
sbb
pop
jge
pop
push
push
aas
push
push
push
push
pop
sbb
pop
jbe
sbb
add
push
push
push
push
popf
push
loop
jb
sbb
sub
push
push
push
push
pop
sbb
sbb
push
sbb
push
aas
push
push
push
push
nop
sbb
push
sbb
jp
push
push
push
push
pop
push
xor
push
sahf
aas
push
push
push
push
sbb
repz
or
aas
push
push
push
push
sbb
push
sbb
scas
aas
push
push
push
push
sbb
repz
or
aas
push
push
push
push
clts
ss
or
sbb
(bad)
aas
push
push
push
push
sbb
repz
or
aas
push
push
push
push
or
sbb
sbb
out
aas
push
push
push
push
or
mov
push
sbb
push
push
push
or
pushw
or
sbb
jb
push
push
push
push
or
mov
mov
sbb
cli
xor
push
push
push
or
fcomp
push
sbb
cmp
nop
sbb
push
push
push
call
push
repz
or
xor
or
enter
push
push
sub
push
push
push
push
or
cld
sbb
push
push
push
dec
xor
push
push
push
or
lock
push
push
push
jb
push
push
push
push
or
out
mov
xor
push
push
push
clts
ss
or
push
push
xor
push
push
push
sbb
repz
or
push
push
push
sahf
push
movd
sbb
push
push
push
push
push
push
push
sahf
push
movd
push
push
push
push
push
sahf
push
movd
sbb
push
push
push
push
sahf
push
movd
sbb
push
push
push
push
sahf
push
movd
sbb
push
push
push
push
sahf
push
movd
sbb
push
add
push
push
push
push
sahf
push
movd
cli
push
add
push
push
push
push
sahf
push
movd
icebp
push
cmp
push
push
push
push
sahf
push
movd
jmp
cmp
push
push
push
push
sahf
push
movd
push
push
push
push
push
sahf
push
movd
sbb
pop
cs
mov
push
or
push
sbb
xor
push
push
push
sbb
or
outs
push
das
push
retf
push
push
push
or
pop
sbb
pop
das
push
push
push
pop
push
neg
push
push
pop
push
cmp
push
push
pop
push
cmp
push
push
pop
push
scas
sbb
push
sbb
stos
sbb
push
sbb
push
pop
push
aad
push
push
pop
push
adc
add
ss
and
push
push
sbb
push
sbb
inc
sbb
jbe
push
push
push
push
push
push
push
pop
push
fwait
sbb
(bad)
sbb
stos
sbb
mov
push
stos
sbb
mov
push
stos
sbb
mov
push
stos
sbb
mov
push
or
push
add
push
cmp
push
push
sbb
xor
push
push
sbb
daa
sbb
push
pop
push
or
push
add
push
cmp
push
push
sbb
xor
push
push
sbb
dec
sbb
push
pop
push
or
push
add
push
xchg
sbb
push
sbb
mov
push
push
sbb
push
sbb
mov
push
scas
sbb
push
pop
push
rcr
push
push
sbb
retf
sbb
push
sbb
push
sbb
cli
sbb
push
sbb
neg
push
push
pop
push
rcr
push
push
pop
push
add
push
push
sbb
cmp
push
push
sbb
push
sbb
xor
push
or
push
cmp
push
push
repz
sub
nop
push
or
push
or
push
or
push
or
push
or
push
or
sbb
push
xor
and
sbb
push
and
and
push
or
push
or
push
xchg
pop
outs
push
adc
int
pop
push
cld
pop
jge
pop
push
cmc
pop
jbe
aaa
push
xor
(bad)
pop
pop
push
sbb
push
lahf
push
push
sbb
pop
pop
push
repz
or
push
push
sbb
push
push
sbb
push
(bad)
push
repz
gs
push
repz
or
push
or
sbb
sbb
push
arpl
xchg
sbb
push
mov
mov
push
lods
push
mov
push
repz
test
push
into
push
mov
push
mov
call
(bad)
push
lods
sbb
pop
out
push
test
push
or
push
mov
pop
xchg
pop
xlat
push
xor
fstp
pop
dec
pop
mov
pop
aam
xlat
push
jne
xchg
pop
cmps
push
addr16
iret
sbb
push
popa
pop
or
pop
retf
sbb
pop
repz
lds
pop
ret
pop
cld
sbb
push
clc
pop
gs
push
in
xchg
sbb
push
adc
push
push
adc
pop
daa
pop
xor
push
pop
pop
push
adc
sbb
pop
jne
out
sbb
pop
ins
adc
sbb
pop
popa
adc
sbb
push
repz
or
adc
sbb
sbb
adc
adc
outs
push
dec
pop
mov
push
repz
or
pop
pop
sbb
add
or
adc
push
jg
not
sbb
xor
iret
push
push
adc
pop
adc
aas
adc
xor
and
dec
adc
inc
adc
addr16
dec
sbb
inc
sbb
mov
adc
repz
jge
call
repz
ja
call
clc
adc
addr16
or
adc
pop
adc
adc
adc
iret
sbb
cld
sbb
or
adc
sbb
call
adc
sbb
sbb
fistp
jmp
push
sbb
outs
push
out
push
adc
outs
push
xlat
pop
or
pop
adc
adc
sbb
sbb
push
pop
adc
neg
dec
adc
sbb
push
inc
adc
sbb
pop
jo
ds
(bad)
push
repz
or
adc
sbb
pop
nop
adc
adc
sbb
sbb
adc
sbb
pop
stos
adc
out
cmp
push
sbb
sbb
adc
aaa
sbb
push
or
push
xchg
pop
daa
sbb
push
sahf
sbb
repz
cdq
sbb
repz
(bad)
sbb
repz
or
push
lods
push
aaa
push
popf
push
stos
pop
xor
lds
int
mov
pop
push
xor
push
or
push
or
push
add
push
popf
push
xchg
pop
jge
or
push
add
push
popf
push
fcomp
sahf
push
xor
push
add
push
gs
dec
pop
popf
push
ins
push
dec
pop
xchg
push
popf
push
mov
push
dec
pop
mov
pop
mov
pop
mov
sbb
push
or
push
xor
push
add
or
xor
xor
ficomp
push
sub
ins
aaa
xor
dec
pop
je
test
mov
loope
aad
pop
cs
inc
jecxz
shl
imul
ret
mov
adc
jl
icebp
ds
xchg
xlat
cmp
pop
adc
or
lock
jge
cmp
add
popf
jno
pop
adc
lods
fld
jne
jb
(bad)
(bad)
adc
fld
push
adc
(bad)
lock
int
test
pop
lods
call
add
dec
in
or
cdq
retf
mov
add
loope
dec
es
cli
mov
lods
cmc
inc
or
dec
push
sti
cdq
sbb
jo
xchg
fisubr
sbb
adc
(bad)
shr
(bad)
aaa
and
in
lds
rol
fadd
mov
push
outs
jge
ins
sbb
ja
push
add
es
popa
or
mov
mov
dec
fsub
sbb
mov
les
sub
push
cmp
cmps
adc
jae
ins
or
outs
mov
fcom
jb
push
add
cmp
les
out
mov
shr
inc
add
sub
xchg
lods
xlat
lea
pop
xor
in
out
mov
xor
xor
jle
shl
retf
mov
mov
ds
(bad)
mov
cmp
movs
ret
xchg
das
js
xor
in
lahf
ficom
pop
dec
push
cmp
stos
enter
in
mov
xchg
jp
jbe
loopne
sub
(bad)
(bad)
fimul
pop
lock
sbb
stos
jbe
push
(bad)
enter
pop
dec
or
xchg
popf
into
out
pusha
or
cwde
test
fcmovnu
movs
push
out
xchg
retf
outs
es
dec
imul
leave
sahf
jge
test
aas
fnstsw
jbe
fldcw
outs
add
in
rol
(bad)
fmul
push
mov
xor
mov
or
ret
lods
lods
ret
dec
add
out
pop
dec
or
and
adc
imul
cmp
jno
xchg
into
cwde
ret
sub
outs
cmp
cmps
fisttp
xchg
push
popf
test
movs
stos
cli
xchg
ins
push
test
adc
mov
adc
movs
arpl
ja
xchg
mov
fcom
jg
fs
das
movs
popa
sbb
inc
(bad)
mov
cvtpi2ps
inc
pop
dec
mov
ins
pop
adc
mov
mov
pop
out
xchg
mov
push
add
cmc
(bad)
aad
pusha
in
push
and
mov
jl
xchg
mov
push
push
in
jmp
xchg
mov
bound
fisubr
push
and
push
ss
iret
dec
and
in
lods
in
out
pop
cmp
cmp
stc
mov
bound
(bad)
xchg
mov
aam
mov
aaa
jnp
xchg
pop
(bad)
pop
sub
das
ins
jp
fwait
jge
jne
repz
lods
(bad)
and
iret
repz
and
scas
call
inc
cmp
cmps
jecxz
dec
mov
xchg
ins
(bad)
jbe
rcl
mov
pop
push
or
mov
pop
movd
ror
pop
mov
aam
xor
fwait
mov
pop
cs
in
das
dec
xchg
mov
cld
outs
pop
loopne
(bad)
sub
ret
mov
mov
xlat
xchg
imul
scas
stc
shr
xchg
out
mov
cmp
pop
mov
cld
ja
clc
mov
stos
enter
pop
movs
icebp
pop
or
or
rcr
ficomp
cmps
cli
mov
jmp
das
outs
in
push
ss
stos
(bad)
scas
int3
lods
cli
(bad)
mov
aad
(bad)
popf
xchg
inc
cmp
retf
js
repz
js
jmp
jle
xchg
xlat
cld
mov
cs
popa
cmp
iret
in
jmp
xor
hlt
sub
add
mov
xchg
push
pop
jp
out
xor
lock
or
dec
call
mov
push
repz
sub
add
fwait
push
sbb
pop
push
xor
sahf
jmp
sbb
repz
sub
xor
fsub
and
xchg
lods
aad
rol
jbe
jp
in
(bad)
in
push
mov
shl
mov
cmps
dec
sbb
mov
sub
sbb
das
jg
cmc
sub
adc
out
xchg
stos
xchg
fdivr
pop
xchg
jl
dec
popf
shr
xor
das
ins
pop
dec
or
test
rcr
sar
in
adc
lods
call
outs
sub
cmp
xchg
sar
or
dec
push
imul
rcl
stos
rcl
call
bound
mov
out
mov
repnz
xor
out
lods
or
scas
push
imul
mov
sub
fmul
push
leave
ss
xor
dec
out
test
mov
test
jg
inc
push
lea
pop
pop
jmp
cmp
and
adc
mov
xor
aas
outs
rcr
sbb
cmp
sub
dec
or
xor
hlt
lahf
xor
cli
add
jb
stc
ins
add
cmc
movs
mov
mov
mov
mov
int
(bad)
fdivr
xchg
inc
sbb
xchg
test
or
push
and
jle
xchg
nop
mov
cld
mov
dec
adc
in
rcr
and
hlt
mov
jnp
mov
xor
out
repz
mov
out
mov
jb
mov
out
das
pop
adc
sbb
add
and
mov
jnp
les
test
shl
push
pop
adc
pop
cmp
je
es
loop
retf
add
(bad)
imul
sbb
xor
pop
hlt
mov
idiv
xor
xlat
nop
aam
ins
mov
adc
and
mov
or
in
xchg
dec
sbb
clc
inc
icebp
and
sahf
xlat
cmc
lods
mov
push
jl
cmp
mov
mov
mov
mov
test
call
ror
lods
push
jnp
pop
sti
xchg
sbb
in
paddusb
popf
push
cs
int3
inc
es
mov
cs
(bad)
(bad)
cwde
iret
sub
jbe
(bad)
ficomp
or
jnp
pop
imul
or
les
cmp
paddb
pushf
mov
loope
cmp
pop
hlt
fadd
jb
or
popa
adc
cwde
aam
in
and
xchg
pop
sub
add
repz
mov
dec
fbld
pop
popf
(bad)
fmul
inc
adc
cs
xor
push
adc
xor
or
cmp
mov
loopne
xchg
pop
cmp
sub
push
js
or
(bad)
sbb
stos
call
das
outs
sub
push
outs
cs
scas
inc
ss
repz
loope
fiadd
ins
cdq
fild
arpl
mov
mov
adc
jecxz
cmp
sar
xchg
rcl
inc
adc
jmp
mov
inc
add
lea
jecxz
outs
cld
mov
or
or
dec
sbb
jge
dec
ja
xchg
xor
xor
rol
xor
push
pop
pop
les
daa
shl
test
xor
hlt
cmp
jg
pop
call
pop
sbb
imul
cmps
jb
rol
or
push
xor
fldenv
and
cs
dec
sub
cmps
jle
rol
pop
xor
imul
add
pop
sbb
cli
ja
sub
mov
push
aas
mov
cwde
fimul
inc
sbb
push
pop
adc
out
cmps
fadd
pushf
rcl
adc
xchg
ret
test
jl
dec
sbb
mov
push
pop
xor
repnz
sub
call
mov
repz
(bad)
adc
add
les
push
or
call
das
mov
sub
dec
push
add
pop
das
jnp
mul
cmp
ds
or
cmp
push
push
or
mov
in
mov
cs
cmps
lock
aaa
pop
in
shl
(bad)
je
jne
not
sub
popa
adc
inc
sbb
sbb
push
adc
mov
enter
pop
and
sbb
add
jle
pop
xlat
cmp
das
cli
or
arpl
mov
aam
aam
mov
(bad)
jns
into
adc
pop
jg
mov
outs
les
scas
sti
mov
ins
adc
fstp
jmp
push
aaa
add
mov
test
and
cld
in
das
(bad)
mov
ret
or
fwait
cli
pop
jbe
adc
jae
lock
shr
or
popa
ss
jp
lods
mov
pop
add
out
pusha
xor
lahf
int3
mov
xchg
scas
mov
sbb
fnstenv
gs
stc
cmps
xor
jl
es
mov
scas
fimul
mov
jnp
jno
xchg
mov
outs
or
clc
jo
ficom
data16
jecxz
(bad)
scas
in
pop
jle
out
mov
add
std
bound
ins
(bad)
sti
lods
xor
jns
pop
imul
lahf
fimul
cmp
push
add
dec
popa
xor
repz
sub
imul
mov
ret
push
aaa
inc
add
inc
rcr
mov
leave
ret
jmp
movs
retf
mov
xor
push
cmp
sahf
jle
mov
and
xchg
fistp
push
xor
popf
dec
call
sbb
add
mov
add
mov
test
add
mov
cdq
mov
sar
pushf
mov
cmps
fsubr
stos
xor
fsubr
in
rcl
cs
inc
imul
jne
(bad)
push
pop
sbb
push
in
es
sub
mov
mov
adc
test
add
sbb
out
jg
out
adc
push
je
pop
leave
push
sub
xor
and
scas
add
xlat
adc
xchg
ror
xlat
mov
sub
push
fisub
and
aam
sbb
sti
(bad)
fsub
xor
mov
mov
mov
xchg
mov
mov
and
inc
xchg
xor
pop
iret
adc
(bad)
mov
mov
xchg
test
mov
pop
in
inc
xor
cdq
mov
bound
pop
add
jmp
mul
mov
fisubr
ja
mov
scas
inc
das
retf
mov
mov
sub
mov
sbb
test
(bad)
jnp
mov
add
bound
and
nop
loope
push
and
iret
lods
das
jnp
int3
push
std
xchg
adc
jmp
mov
dec
pop
outs
sub
jmp
inc
ret
cmps
aam
mov
mov
ds
pop
push
loopne
sub
ret
pushf
ins
daa
pop
pop
fnsave
lock
cmp
jecxz
int3
mov
jne
inc
xchg
xor
pop
inc
and
jecxz
scas
les
push
js
mov
jp
dec
pop
(bad)
scas
mov
popa
stos
shl
push
xchg
mov
int3
retf
mov
jo
aas
push
les
pop
out
stos
icebp
mov
add
sbb
mov
ret
adc
cli
xor
fnsave
xchg
jmp
xchg
ja
push
stc
mov
mov
add
mov
push
pop
fist
mul
dec
(bad)
xchg
cld
adc
and
mov
ins
pop
hlt
inc
daa
inc
adc
cmc
test
pop
dec
ins
ds
not
js
inc
sbb
jmp
std
stos
pop
xor
cld
push
dec
out
dec
test
lods
and
mov
cmps
jne
or
and
enter
js
inc
sbb
push
inc
das
lock
in
test
leave
nop
mov
leave
mov
dec
leave
xchg
(bad)
lods
dec
sub
lock
out
xor
test
mov
stos
lds
shr
jbe
pop
aaa
push
or
xchg
dec
ret
mov
push
mov
sub
or
sub
push
and
icebp
xchg
aas
outs
sub
hlt
mov
push
dec
pcmpgtd
mov
xchg
add
pop
sbb
in
add
pop
hlt
lods
fistp
xchg
fmul
add
pop
jmp
loopne
rcl
push
push
adc
sbb
dec
or
inc
loopne
fdiv
shr
retf
adc
repnz
(bad)
push
sbb
push
into
cmps
pop
call
or
or
dec
loope
xor
pop
sbb
out
ins
push
cmp
xlat
xchg
aad
je
pop
jne
movs
loope
repz
xchg
in
ins
cmp
sbb
pop
push
(bad)
je
xchg
pushf
sahf
mov
and
out
mov
or
stc
lods
stos
retf
push
pop
gs
ret
cdq
in
mov
mov
mov
std
cmps
xchg
(bad)
push
xor
adc
jp
ins
jbe
(bad)
jo
xchg
aam
add
fnstsw
pusha
sbb
and
mov
pusha
gs
sbb
jbe
xchg
ret
or
push
push
dec
ja
int
mov
movs
into
sub
add
(bad)
xchg
jl
push
push
loope
dec
or
ins
add
das
push
stc
mov
mov
mov
and
dec
xor
dec
in
fmul
pusha
sub
sub
mov
xchg
in
addr16
ss
push
xor
sub
repz
iret
stos
(bad)
mov
std
mov
(bad)
mov
movs
icebp
mov
fwait
lods
fild
sbb
cmp
add
outs
out
enter
repz
aad
jmp
adc
jge
mov
mov
xchg
test
inc
cmp
dec
mov
nop
shr
and
stos
mov
sub
or
in
or
data16
sub
adc
push
jno
in
mov
xor
test
jo
popf
push
not
enter
stc
mov
mov
dec
sbb
inc
xchg
shr
(bad)
into
test
push
dec
xchg
fdiv
sbb
jecxz
in
pushf
rep
pop
sbb
jns
ja
mov
aad
je
push
or
sub
jbe
icebp
mov
mov
je
push
xor
and
push
dec
sbb
inc
or
pop
add
and
dec
push
push
sbb
aaa
add
pop
mov
sbb
aas
lea
stos
(bad)
jle
push
lds
dec
adc
ds
xor
push
sbb
loopne
(bad)
dec
mov
je
xchg
lds
popa
pop
inc
sbb
scas
dec
or
and
mov
cmp
sbb
push
xor
rcr
xchg
out
mov
clc
mov
out
mov
mov
push
dec
pop
es
jge
out
jl
inc
fs
sti
mov
out
push
and
ror
add
sub
xchg
cmp
(bad)
hlt
mov
xchg
repnz
xor
jl
mov
pop
adc
jns
or
mov
mov
cmps
repnz
mov
sub
dec
xor
jne
cmp
in
mov
arpl
mov
sub
adc
push
inc
sbb
xchg
retf
rcl
test
xchg
movs
mov
mov
mov
mov
bound
outs
ds
sbb
push
das
js
dec
retf
mov
mov
sbb
push
fs
not
push
sbb
mov
sahf
mov
sub
adc
mov
ror
xchg
xlat
add
and
jmp
outs
sub
adc
pop
repnz
into
inc
sbb
arpl
push
jne
dec
adc
xchg
ficom
xchg
mov
mov
push
sar
gs
cdq
aad
sbb
adc
stos
mov
iret
mov
cs
add
test
cwde
mul
cmp
div
(bad)
fxch
xchg
xchg
retf
ins
adc
add
dec
sbb
and
jno
ss
fs
xchg
clc
test
lock
loop
enter
ds
and
int
jmp
repnz
mov
pop
inc
push
sbb
mov
or
repz
leave
mov
mov
mov
test
nop
shr
fsubr
mov
call
xchg
jo
dec
add
(bad)
cmp
dec
in
mov
jo
pop
in
scas
mov
mov
xchg
(bad)
imul
inc
fwait
cmc
mov
(bad)
aam
adc
and
cs
loop
sub
mov
mov
sbb
pop
pop
cmp
cmp
cmp
add
push
pop
aad
push
adc
sub
test
dec
add
repnz
gs
repnz
aaa
jns
fldcw
(bad)
arpl
jmp
loopne
sbb
je
dec
mov
jecxz
clc
lods
call
xor
aas
jae
mov
and
daa
inc
add
out
(bad)
mov
pop
sub
ret
pop
inc
adc
jle
movs
mov
iret
xchg
shr
add
adc
hlt
mov
test
xchg
jb
xchg
(bad)
mov
rcr
xchg
fisubr
inc
sbb
adc
lock
jbe
nop
(bad)
mov
test
or
push
idiv
jnp
mov
retf
scas
fbstp
pop
sub
mov
push
sub
retf
cmp
adc
and
aas
and
gs
js
push
ins
sub
pop
or
pop
inc
mov
in
add
jge
inc
mov
fistp
pop
sub
pop
or
mov
xchg
hlt
lods
ja
outs
add
jnp
ins
jecxz
enter
dec
cmp
jecxz
int3
xchg
(bad)
adc
bound
push
js
ins
cmp
dec
sbb
mov
hlt
mov
mov
xchg
fstp
inc
adc
adc
jp
mov
retf
mov
call
push
not
and
push
loopne
sbb
fisubr
cld
xchg
ret
adc
dec
adc
dec
mov
cmp
sahf
inc
out
cmp
fisttp
bound
cmp
xchg
nop
xchg
(bad)
mov
mov
mov
cmp
cld
xor
ror
add
test
dec
or
fisub
mov
mov
leave
adc
pushw
inc
adc
retf
xchg
and
pop
xor
retf
xor
sub
es
add
jb
test
mov
cdq
jmp
push
ja
je
mov
lea
jbe
sub
ja
sbb
mov
rol
fsub
cmp
bound
lahf
mov
mov
push
popa
or
test
out
fild
add
shl
or
jle
pop
xor
add
and
adc
dec
sbb
addr16
imul
pop
jecxz
adc
dec
sub
sub
test
xchg
fisubr
ss
or
scas
(bad)
mov
push
cmp
inc
push
inc
ds
pop
adc
jmp
jmp
and
sbb
into
scas
mov
mov
add
mov
dec
loop
fild
adc
sub
jae
ja
or
mov
jb
sbb
pop
add
lods
popa
cmp
jno
xchg
inc
add
hlt
mov
in
addr16
ja
or
outs
pop
inc
mov
or
mov
int
das
inc
add
jbe
pop
xchg
fcom
cmp
std
cmp
add
mov
inc
mov
stc
xchg
repz
test
sbb
idiv
push
mov
xchg
ret
pop
cmc
xchg
int3
clc
popf
add
outs
mov
repnz
in
mov
sbb
ins
cmp
rcl
and
mov
and
bound
xchg
mov
(bad)
imul
and
and
or
mov
jmp
out
mov
jno
inc
adc
and
jns
xor
push
adc
cmp
jg
imul
xchg
fisttp
cmc
stos
lds
push
int
in
lock
mov
mov
out
movs
idiv
dec
test
cmps
in
mov
mov
scas
int3
lods
rol
pop
inc
sbb
sbb
jbe
stos
leave
nop
fldcw
push
push
jmp
lods
jnp
out
push
inc
out
fisttp
fcomp
and
inc
sub
xor
sub
push
fisubr
cmp
pop
adc
pushf
inc
aaa
aas
pop
sub
mov
dec
push
in
leave
pmulhw
sar
sbb
inc
icebp
and
scas
aam
lds
jns
pop
sbb
jae
xor
sub
mov
fisub
jae
arpl
pop
call
addr16
lods
fisubr
xchg
data16
mov
xchg
fdiv
bound
inc
adc
or
jp
inc
cmps
add
ins
push
loop
xchg
fstp
ss
cmp
sbb
in
clc
pushf
(bad)
das
and
push
les
ins
in
(bad)
xchg
hlt
aas
shl
js
sbb
mov
cmp
mov
push
sub
jmp
dec
pop
pop
xor
jecxz
mov
pusha
aas
pop
lea
push
mov
mov
repnz
fnstsw
rol
(bad)
or
fild
jmp
mov
sti
xchg
shl
sub
cli
mov
adc
enter
enter
add
push
js
xchg
repnz
pop
adc
repnz
push
or
and
stos
ror
test
das
imul
cwde
(bad)
je
js
sbb
push
jecxz
and
cmp
int3
lods
scas
mov
mov
mov
mov
ja
push
xor
add
push
push
dec
adc
imul
xchg
les
std
lods
call
(bad)
bound
sbb
hlt
arpl
xchg
(bad)
inc
in
cdq
rol
test
fmul
ins
cs
jl
jmp
sub
arpl
xor
leave
ja
dec
sbb
or
rcr
outs
cmp
retf
(bad)
mov
pop
jle
pop
stos
pop
in
jmp
xchg
cmp
adc
add
popa
xor
dec
call
sti
xchg
retf
mov
add
out
fbstp
cmc
xor
outs
sbb
minps
in
sbb
es
sti
(bad)
xchg
les
dec
xchg
and
lahf
retf
mov
inc
sbb
adc
mov
jecxz
ret
cmp
(bad)
cmps
xlat
mov
dec
ds
push
scas
in
fidiv
add
push
sbb
stc
mov
jno
ds
(bad)
sti
sbb
dec
adc
aam
xor
pop
in
call
xrelease
push
pop
and
ins
test
push
fnstsw
mov
and
pop
dec
push
fidivr
or
pop
pop
sbb
jnp
xor
jmp
xlat
xchg
mov
lahf
inc
leave
daa
push
or
pop
lock
call
jmp
fistp
vmwrite
dec
adc
xchg
popf
fild
and
push
jg
sub
nop
xlat
mov
xchg
js
inc
xchg
stos
cmc
push
dec
push
sub
jns
cmp
fxch
(bad)
mov
push
daa
inc
lock
ret
outs
sub
and
mov
xchg
push
fisub
cmc
(bad)
xchg
mov
dec
adc
sbb
mov
xor
inc
sbb
xchg
retf
call
push
jle
dec
sbb
cs
xor
dec
mov
mov
pusha
xchg
mov
outs
xchg
mov
add
or
movs
cmp
jmp
lds
into
test
or
pop
adc
dec
jmp
add
(bad)
xchg
stos
aad
mov
cwde
adc
stos
jl
test
xor
push
pop
dec
or
pushf
mov
lea
retf
gs
xchg
popf
dec
dec
adc
dec
push
sub
(bad)
xchg
loopne
ret
call
mov
dec
or
mov
pop
cmp
mov
in
xchg
hlt
and
mov
iret
nop
(bad)
xor
and
cmc
mov
xchg
iret
jge
pop
aas
push
or
xchg
jo
sub
mov
ins
add
or
jmp
stos
hlt
push
xchg
leave
lahf
lods
jmp
push
in
add
test
es
(bad)
xchg
pop
std
mov
sbb
das
frstor
fidiv
enter
shr
inc
fiadd
xchg
and
cmps
push
push
xlat
adc
pop
ds
or
out
sti
mov
pop
jmp
adc
and
out
lods
int
xor
std
add
push
adc
jecxz
cld
or
pop
mov
adc
pusha
call
pop
mov
or
mov
push
cmp
inc
sbb
dec
in
push
clc
and
pop
stos
and
(bad)
cdq
(bad)
xchg
stc
stos
mov
int3
mov
mov
in
mov
pop
adc
in
fisub
cli
mov
jno
adc
aam
add
pop
dec
mov
xchg
stc
mov
daa
jne
dec
cmp
inc
loop
cvttps2pi
ja
push
ss
jecxz
sub
out
repz
into
(bad)
stos
fnsave
es
dec
loope
out
bound
pop
mov
cmp
mov
mov
(bad)
movs
int3
pushf
mov
stos
out
mov
mov
xchg
push
js
sub
and
push
jl
jg
cmp
repz
xor
add
add
jno
dec
jmp
mov
(bad)
shl
adc
mov
mov
repnz
push
mov
ins
add
pop
push
cmc
popa
mov
sti
(bad)
and
enter
mov
sbb
dec
or
in
sub
and
scas
cmps
inc
xlat
call
sbb
dec
push
jns
push
sahf
mov
sub
(bad)
xor
xchg
clc
mov
retf
std
mov
shl
push
leave
mov
shl
sbb
jb
sub
cmp
into
add
adc
push
ins
or
retf
cmp
jp
pop
inc
adc
cs
sti
xchg
repz
lods
jmp
repnz
iret
xor
mov
test
cmps
std
xchg
add
enter
pop
outs
sbb
sub
popf
repnz
mov
popa
test
out
cmp
in
stos
fist
(bad)
sub
inc
call
mov
xchg
push
stos
mov
mov
jo
dec
loopne
leave
nop
fldcw
xor
sbb
js
sbb
ret
imul
cmp
aas
cli
dec
sbb
pop
dec
jmp
mov
mov
scas
xlat
lods
retf
xchg
stos
mov
xor
cs
cmp
mov
test
xor
es
inc
jmp
lods
and
jecxz
out
mov
lods
mov
xor
pop
push
sti
lods
cld
imul
push
and
xchg
movs
(bad)
xor
jne
int3
shl
lods
sti
mov
sub
test
mov
jmp
pusha
aas
das
fistp
movs
inc
mov
xor
cmp
and
jne
jae
cdq
(bad)
mov
fwait
repz
mov
mov
dec
sbb
dec
test
push
cwde
jge
and
jnp
pop
push
dec
or
outs
icebp
xchg
movs
push
mov
ror
or
lahf
test
mov
cmp
jb
push
adc
dec
sbb
jge
sub
xchg
cmp
mov
into
stos
lds
ins
test
xor
mov
outs
jbe
inc
push
jbe
sub
and
jle
pop
sub
sub
popf
fnstsw
cmp
jns
dec
ds
xchg
sub
dec
and
dec
sbb
je
lods
fstp
inc
call
(bad)
mov
add
jbe
xchg
imul
adc
rcl
fmul
lahf
jl
sbb
jb
daa
call
stos
mov
dec
mulps
push
mov
test
sbb
adc
hlt
retf
cmp
fsub
outs
loope
rcl
hlt
scas
fimul
int
xchg
cmps
cmps
lds
ds
scas
mov
mov
or
sub
dec
sbb
es
shr
pusha
dec
sbb
adc
repnz
(bad)
fbld
pop
add
dec
sbb
jae
jnp
leave
in
inc
pop
adc
out
mov
test
jo
ins
add
pop
xchg
pop
xor
mov
push
add
aad
fisttp
and
sar
pop
xor
or
stc
sbb
add
imul
cli
nop
and
aaa
push
add
(bad)
outs
pop
and
jne
(bad)
popa
hlt
mov
pop
jmp
inc
xor
push
inc
or
push
xchg
mov
jp
push
or
rcr
adc
callw
ins
sbb
fidiv
cmps
(bad)
xor
xor
adc
mov
jne
inc
cmp
out
sar
jno
repnz
mov
xor
and
jmp
sti
vmwrite
sbb
scas
xor
cmps
movs
jae
in
mov
xor
mov
pop
test
hlt
xor
sub
loope
mul
adc
pushf
push
mov
aam
fmul
jae
repz
xchg
ret
xchg
jl
push
add
iret
ins
or
es
adc
aam
in
cwde
rol
mov
lea
jp
push
mov
scas
in
add
sti
fs
jmp
add
dec
popf
mov
pop
pop
xor
pop
xor
jp
call
mov
loope
int3
sbb
mov
xor
xchg
xchg
mov
enter
div
sub
or
mov
pushf
fild
int
int
jbe
cwde
sti
mov
mov
imul
and
sub
jns
inc
mov
stos
fmul
mov
mov
rcl
xchg
pop
xor
mov
call
ins
loope
mov
push
dec
push
retf
mov
mov
lds
jne
dec
jmp
dec
sbb
out
test
mov
sub
dec
xor
add
imul
mov
xchg
(bad)
(bad)
addr16
xor
aaa
inc
adc
out
mov
mov
cvtpi2ps
(bad)
xchg
movs
xlat
cdq
scas
gs
push
or
dec
push
and
les
push
pop
rol
xchg
stos
(bad)
mov
call
pop
jecxz
int
mov
xchg
pushf
jmp
and
lock
dec
adc
jge
jmp
stos
fwait
mov
inc
or
jmp
fwait
hlt
add
lods
jle
mov
mov
fld
bound
mov
and
sbb
mov
test
mov
imul
jne
pop
mov
sub
ja
pop
pop
hlt
into
xchg
push
pop
sbb
push
mov
mov
arpl
fst
repz
push
enter
and
add
mov
add
adc
and
cli
pop
pop
or
sub
adc
out
fs
push
jl
outs
cmp
data16
shl
repnz
div
loop
pop
and
dec
out
mov
retf
cdq
stos
icebp
cmps
hlt
adc
dec
shl
jp
jmp
js
test
sub
dec
or
call
into
fs
bound
cmp
imul
jmp
mov
sub
mov
inc
call
jecxz
cli
mov
ror
out
mov
adc
imul
mov
outs
or
ficomp
icebp
add
clc
lods
enter
outs
mov
add
cmp
icebp
mov
sub
jl
mov
outs
test
addr16
push
in
stc
nop
(bad)
sbb
pop
out
xchg
xchg
jmp
outs
dec
cmp
inc
add
rol
push
add
add
and
inc
in
popf
shl
or
ins
add
sbb
sti
mov
jae
stos
stc
add
out
push
jno
imul
adc
ret
cmc
lea
stos
cli
data16
repz
call
xor
mov
cdq
fisub
test
adc
outs
call
and
(bad)
retf
cmps
shr
retf
in
mov
xor
stc
pop
jnp
aad
rol
or
test
jmp
mov
sbb
add
or
pop
pushf
sbb
fiadd
test
pop
or
pop
inc
sbb
test
loop
test
not
cmp
sbb
pop
es
aam
scas
mov
mov
popf
dec
sub
or
test
(bad)
int3
xchg
push
scas
pop
add
js
sub
arpl
retf
mov
cmp
ins
cwde
sti
pushf
pop
jae
jb
add
or
pop
in
push
(bad)
xchg
dec
sub
inc
test
add
xor
int3
popf
lods
mov
sbb
dec
lock
mov
or
mov
sbb
rcl
aam
push
pop
xor
mov
aaa
ins
stc
mov
(bad)
cmc
test
mov
sbb
xchg
sbb
adc
sub
mov
add
in
mov
dec
movs
std
pusha
mov
inc
cmp
(bad)
nop
aam
cmps
push
sti
mov
repnz
cs
aaa
pop
loope
sbb
lock
push
pop
inc
in
mov
or
xchg
in
xor
or
addr16
push
fwait
int3
xchg
sbb
aam
(bad)
mov
hlt
test
fisub
bound
call
daa
inc
push
fisubr
dec
xchg
in
jne
push
or
jmp
adc
add
pop
xor
in
call
leave
bound
push
cmps
adc
inc
jecxz
int
xchg
pop
xor
sub
sbb
out
ret
rsqrtps
inc
nop
sub
jne
je
es
xor
fisub
pop
cmp
mov
mov
mov
mov
mov
test
nop
imul
mov
mov
neg
xor
mov
adc
dec
jo
pop
sbb
xchg
leave
cmp
push
ja
push
call
movs
push
jno
pop
sbb
push
or
mov
or
pop
sbb
cli
sub
jp
jbe
fs
rol
pop
cmp
or
xchg
jmp
and
pop
or
mov
sbb
push
inc
jecxz
call
mov
imul
jb
xlat
lods
fistp
and
fimul
cmps
jae
aaa
push
popf
repz
sub
cmps
fidiv
fldenv
mov
sahf
jns
arpl
pop
lock
push
add
or
ins
inc
ss
aam
mov
dec
xor
jl
dec
add
push
inc
sbb
dec
out
adc
jg
int3
cmc
mov
ds
aas
pop
cmp
fild
mov
mov
jno
inc
(bad)
ret
(bad)
ror
mov
pop
inc
loopne
(bad)
xor
push
add
or
stos
in
mov
pushf
xchg
retf
and
sub
(bad)
jmp
aam
jp
in
loopne
imul
jns
std
scas
jmp
rol
mov
loop
mov
dec
adc
pop
push
inc
cmp
in
mov
xchg
(bad)
push
iret
xchg
stc
test
mov
mov
les
push
add
or
or
or
and
push
mov
xchg
data16
dec
fsubr
sar
xor
dec
mov
dec
mov
push
xchg
mov
cmp
or
xor
sub
push
jbe
ss
adc
xor
sti
(bad)
les
jns
dec
or
jge
push
inc
xor
pusha
adc
dec
shl
pop
mul
repz
mov
sub
or
inc
lods
mov
inc
push
cmp
and
int
sbb
sub
(bad)
and
mov
jnp
stos
(bad)
fild
sbb
jmp
repz
mov
inc
mov
jecxz
dec
clc
push
test
popa
out
cmp
sub
and
inc
sub
or
inc
adc
bound
jae
dec
add
jle
ins
sub
js
outs
or
ins
sub
das
push
maxps
and
gs
jae
dec
ss
je
popw
sub
dec
es
inc
or
js
inc
add
and
sbb
inc
add
add
pusha
or
je
outs
xor
inc
adc
(bad)
les
shr
mov
xchg
rcr
mov
fsubr
in
retf
jl
outs
sub
pushf
retf
mov
jns
pop
push
pop
sti
sbb
xor
lahf
(bad)
lods
clc
fisttp
and
pop
push
inc
adc
loop
fidiv
lock
pop
int
or
scas
retf
xchg
mov
mov
bound
data16
inc
adc
push
xor
add
pop
loope
add
dec
loop
leave
(bad)
out
jne
dec
adc
add
arpl
mov
ja
jle
dec
or
outs
push
jns
jno
inc
loope
fidiv
js
jbe
xchg
enter
fiadd
sahf
mov
loopne
icebp
mov
arpl
ins
out
lea
inc
add
mov
ins
sbb
adc
pushf
mov
xor
mov
(bad)
cli
lods
stc
xchg
loope
into
xchg
rcr
ja
sub
je
pop
sbb
xchg
xlat
mov
pop
or
adc
mov
mov
ins
push
push
cmp
shr
inc
and
sub
or
cmp
xor
pcmpeqb
push
jmp
cld
lods
lock
add
ins
sbb
dec
xchg
inc
cdq
and
pop
sbb
push
adc
popa
xor
push
cmp
jge
inc
in
int3
push
xor
push
push
sbb
mov
imul
mov
and
sub
and
add
adc
aaa
jg
cli
sub
popa
lods
test
aas
pop
out
std
mov
fwait
sar
mov
mov
xchg
fstp
repnz
(bad)
mov
bound
push
push
gs
out
jae
jle
daa
dec
push
outs
adc
sar
mov
(bad)
mov
mov
pop
and
push
aaa
push
cmc
mov
cdq
rol
dec
sub
daa
jb
mov
movs
div
fst
(bad)
mov
mov
push
sbb
cmp
jns
pop
or
push
test
push
and
ss
mov
dec
and
dec
pop
pop
push
pop
add
xor
inc
adc
pop
add
push
in
mov
icebp
popa
or
jo
dec
xchg
and
cmp
dec
mov
enter
ds
loopne
stos
inc
sbb
pop
loope
ds
sbb
pop
out
movs
ror
imul
leave
mov
xchg
or
test
nop
leave
xchg
xchg
(bad)
mov
or
jg
jnp
fwait
stos
xrelease
sbb
xor
ins
aas
push
push
std
push
push
xchg
xchg
ins
out
mov
fmul
fist
aad
lds
addr16
jle
jno
dec
adc
pop
out
cli
ja
pop
out
sar
movs
cmps
push
jmp
lahf
mov
out
xor
dec
sbb
inc
pop
in
jmp
hlt
(bad)
les
sbb
fwait
int3
(bad)
push
xchg
repz
cmps
clc
imul
cmp
fldenv
mov
pushf
int
fidiv
inc
adc
adc
dec
in
shr
dec
aaa
data16
sbb
xchg
mov
xchg
pop
cmp
adc
ror
inc
jecxz
fimul
out
arpl
dec
sbb
pop
aas
jmp
icebp
ins
test
les
and
outs
repnz
push
js
ja
xchg
(bad)
mov
jmp
ins
cmp
mov
pop
inc
(bad)
mov
fcmovne
ins
pop
ins
ins
icebp
xchg
adc
das
push
sub
fs
imul
dec
jno
pop
xor
mov
es
and
jb
jae
leave
cwde
in
mov
rol
xchg
cli
mov
daa
jl
xchg
test
int3
into
je
xchg
cwde
out
loope
pop
jo
sbb
adc
jmp
add
mov
pop
cmp
inc
and
and
stos
or
fnsave
mov
dec
cs
das
push
add
pop
dec
or
cmovs
xchg
push
pop
dec
test
add
aaa
mov
mov
cmps
fld
mov
loop
or
(bad)
repnz
and
adc
xchg
fs
mov
int
cs
and
je
jl
imul
jmp
inc
sub
ss
xor
jae
dec
outs
cmp
pop
sub
mov
lahf
repz
mov
(bad)
icebp
jl
js
pop
dec
fs
push
mov
lds
repnz
add
inc
adc
mov
jb
jno
mov
inc
cmps
mov
ins
inc
push
dec
inc
fwait
mov
and
jns
xor
mov
ret
push
ja
sbb
js
xchg
adc
imul
sub
sysexit
pusha
inc
nop
stos
fild
popf
xchg
scas
add
pop
push
ins
clc
mov
in
xchg
loop
loopne
mov
xor
std
mov
dec
cmp
or
push
das
scas
scas
(bad)
(bad)
out
push
push
pusha
sub
pop
sbb
push
imul
sbb
inc
adc
sub
pop
dec
cwde
fbstp
test
pop
push
xor
jl
addr16
cld
mov
fcmovbe
inc
cmp
jp
pop
cmp
icebp
aad
pushf
out
ret
xchg
loope
push
add
xchg
sbb
ficom
xor
mov
sti
xchg
aam
sbb
dec
sub
jge
jle
hlt
popf
push
fdiv
xchg
push
leave
mov
mov
in
fcmovne
mov
int3
in
xchg
sar
xor
mov
aad
pusha
add
sbb
call
or
into
cmps
in
jl
lahf
pop
sti
mov
lahf
and
xor
dec
cmp
sbb
and
daa
inc
aaa
arpl
jl
imul
fwait
adc
push
outs
popf
mov
(bad)
mov
jo
xchg
out
in
xchg
lds
pop
pop
sub
adc
imul
dec
adc
inc
lock
(bad)
dec
sbb
xchg
rcl
sub
test
mov
repnz
lods
or
and
mov
iret
rcl
push
popf
mov
xchg
sub
dec
aas
test
mov
shl
pushf
test
pushf
fcmovbe
push
sub
mov
fisub
call
cmp
inc
adc
cld
xchg
push
pop
pop
test
cdq
icebp
xchg
loope
repz
mov
stos
stc
mov
out
mov
ret
add
lock
cli
xchg
stc
mov
mov
shr
jb
jns
jle
mov
cmps
rcl
enter
xchg
pop
sub
pushf
clc
loope
jmp
push
xor
add
call
les
fsubr
arpl
pusha
nop
mov
imul
mov
lds
sbb
or
xlat
jge
push
stos
cmps
aam
and
xchg
ss
ins
das
pop
dec
xor
jle
ins
pop
dec
or
dec
and
outs
scas
sti
mov
in
rep
loope
aad
div
int3
mov
mov
aam
repz
xchg
mov
mov
(bad)
xchg
push
(bad)
mov
push
shl
test
xchg
out
jmp
cmp
(bad)
movs
add
es
pop
pop
lahf
mov
aam
push
jge
dec
neg
mov
jp
xchg
repz
fnstenv
das
ss
mov
test
fdivr
arpl
jbe
cmovg
sbb
dec
jle
addr16
jl
cmps
in
inc
ds
in
adc
pop
sub
lahf
call
mov
or
(bad)
mov
mov
repnz
scas
stc
mov
(bad)
sar
mov
retf
mov
mov
fsubr
icebp
add
leave
mov
mov
push
mov
inc
and
jne
jl
push
fs
jo
popf
out
ja
lahf
pop
cmc
mov
aad
cmp
cli
into
dec
cmp
xor
mov
aam
jbe
jbe
adc
call
(bad)
mov
dec
jbe
ds
daa
popf
cmp
and
(bad)
ficomp
add
inc
icebp
movs
add
outs
sbb
test
mov
jl
inc
or
dec
inc
out
xchg
push
xchg
ret
push
xor
cdq
into
mov
(bad)
xchg
test
xchg
rol
(bad)
leave
lahf
fstp
in
(bad)
mov
mov
test
mov
(bad)
out
popf
leave
(bad)
retf
mov
rcl
test
jg
xchg
out
out
outs
add
daa
pop
sbb
gs
inc
out
mov
cmps
mov
mov
sti
and
xchg
mov
mov
push
add
outs
pop
call
xor
pop
and
icebp
pop
mov
fisttp
js
(bad)
mov
mov
lock
jmp
push
add
loopne
pop
outs
inc
ins
push
dec
cs
fnstcw
ficomp
xor
pop
dec
in
sub
dec
and
and
pop
and
ins
cmp
dec
aas
push
adc
pop
and
inc
sub
ins
sub
push
sub
xor
inc
aaa
pusha
and
imul
pop
push
sub
dec
and
and
jno
fwait
dec
inc
xor
mov
imul
push
inc
out
cdq
lock
(bad)
fnstsw
or
jecxz
bnd
mov
mov
test
test
mov
cmp
ds
lahf
int3
(bad)
push
daa
push
and
jl
bound
scas
or
jl
mov
mov
cmps
daa
aaa
outs
sub
shr
hlt
xchg
shl
cwde
fstp
retf
mov
mov
stc
stos
out
mov
jmp
xchg
fldenv
leave
mov
shr
hlt
xchg
shl
test
mov
enter
cmc
inc
sub
pop
cwde
jmp
sub
push
xor
fldenv
stos
or
inc
and
push
cld
stos
paddusw
ja
jmp
push
stc
cmps
in
hlt
inc
xor
sub
adc
pop
popf
mov
mov
cmp
cwde
cmp
push
dec
push
xlat
mov
sub
cmps
pop
les
retf
xchg
shl
mov
mov
call
rol
loopne
ret
sahf
leave
mov
rol
mov
mov
cwde
fdivr
loop
shl
mov
mov
call
rol
movs
add
aad
sbb
jle
dec
lock
adc
mov
pop
mov
mov
clc
xchg
out
rcl
push
pushf
mov
stos
xor
sbb
push
int
sbb
jne
jl
push
fs
jo
popf
out
ja
lahf
pop
cmc
mov
xlat
dec
sub
shl
cld
xchg
loope
mov
in
mov
(bad)
cmps
cmc
mov
mov
hlt
popf
jmp
xchg
cmps
neg
div
std
mov
jmp
xchg
mov
scas
(bad)
xchg
std
sahf
in
mov
(bad)
cmps
cmc
mov
mov
hlt
popf
jmp
xchg
cmps
neg
jmp
pusha
inc
and
fsubr
xchg
pop
jmp
repz
aad
jo
outs
inc
leave
fwait
call
push
pusha
push
xchg
stos
call
sub
inc
cmp
jo
dec
sub
sub
sub
call
xlat
(bad)
fnsave
fcomp
(bad)
xchg
les
xlat
mov
jmp
mov
aam
out
aad
ficomp
leave
sahf
fbstp
loope
xlat
(bad)
fnsave
fcomp
(bad)
xchg
les
xlat
mov
jmp
mov
aam
out
aad
ficomp
leave
sahf
fbstp
loope
out
je
aaa
pop
sub
stos
(bad)
into
mov
sub
fnstsw
test
push
daa
bound
fnstcw
in
xor
sub
ss
adc
pop
and
inc
sub
outs
sub
sub
data16
xor
imul
jno
dec
and
data16
and
outs
cmp
cmp
popa
adc
pop
and
inc
sub
mov
shl
mov
(bad)
adc
ja
aas
inc
loopne
fidiv
push
push
cs
pusha
ss
inc
xor
dec
cmp
fstp
retf
jae
sbb
(bad)
stc
mov
rol
test
fbld
das
and
mov
scas
(bad)
mov
test
dec
cmp
jb
push
add
and
mov
or
pop
cmp
dec
or
inc
xor
jnp
pop
or
imul
or
jno
push
add
xor
inc
add
dec
cmp
jae
push
add
arpl
inc
add
jns
pop
or
cmp
dec
or
inc
xor
jnp
pop
or
imul
or
jno
push
add
xor
inc
add
dec
cmp
jae
push
add
arpl
inc
add
stc
sbb
int3
popf
fnstcw
adc
cmc
mov
xchg
mov
(bad)
sub
or
inc
or
cmp
or
sub
jmp
fdivr
out
cdq
sar
(bad)
fwait
retf
mov
imul
xor
push
mov
retf
mov
mov
pop
sub
push
and
add
jb
js
push
cmp
add
jge
mov
outs
xor
jge
push
mov
in
mov
data16
nop
jmp
mov
into
push
jmp
jl
fwait
lahf
jge
aas
sbb
and
lock
clc
or
and
push
stos
dec
sbb
into
sub
adc
xor
arpl
inc
bnd
xchg
movs
movs
data16
pop
test
push
stos
inc
mov
cmp
fst
push
cmps
stos
xchg
call
in
jle
xor
mov
cdq
rol
test
inc
jecxz
lods
data16
in
cli
cs
xor
mov
addr16
adc
addr16
inc
and
ficomp
jo
inc
into
es
les
je
push
iret
sub
sub
pop
test
xchg
jae
xor
adc
cmp
hlt
push
pop
jmp
jnp
sub
mov
mov
push
lods
push
xchg
ret
jae
ja
jno
das
xor
pop
cmc
pop
mov
jns
aas
pop
sbb
addr16
xchg
aam
movs
fist
loopne
adc
das
or
inc
out
jecxz
push
lods
in
das
pop
xor
jecxz
dec
and
adc
aad
stos
ror
jmp
iret
fidiv
in
ror
es
mov
out
jmp
outs
iret
xor
lock
jns
xor
push
jecxz
or
retf
loop
loop
mov
mov
hlt
pusha
(bad)
sub
daa
sbb
push
movs
inc
mov
push
cld
(bad)
int3
push
mov
scas
imul
add
cmp
enter
xlat
jg
cmp
(bad)
dec
shr
leave
pusha
and
jae
xor
pop
jmp
cli
sub
sbb
pop
or
pop
lods
inc
sub
cmps
xchg
jae
popf
inc
mov
xor
mov
fild
mov
stc
scas
out
xchg
and
ds
dec
fidiv
aas
test
and
adc
adc
jl
add
ins
mov
add
push
or
ds
push
push
inc
adc
dec
sbb
xor
pop
or
ds
inc
sbb
sub
outs
sub
sbb
adc
popw
inc
adc
mov
inc
pcmpeqw
or
sub
adc
inc
push
push
pop
jb
jbe
pusha
or
pop
push
pop
push
ins
ss
jne
and
ds
pop
aas
jno
jp
dec
push
gs
inc
xor
and
xchg
cli
(bad)
repnz
fstp
pop
sub
pushf
jecxz
popf
(bad)
mov
dec
pop
sub
push
or
jb
pushf
int3
mov
loop
jmp
repnz
sbb
adc
imul
lods
nop
movs
mov
js
pop
pop
enter
nop
mov
fimul
jnp
sbb
jl
mov
jnp
jge
add
and
xchg
scas
out
lods
sti
test
(bad)
cmp
push
es
mov
div
sub
loope
test
push
push
std
push
test
mov
jl
jmp
stc
mov
sbb
inc
fwait
jbe
nop
push
pushf
cli
fist
clc
movs
sbb
inc
sub
jecxz
int3
movs
xlat
mov
std
fisttp
push
and
push
and
xor
add
repnz
xchg
cmp
push
daa
xor
rcl
dec
in
cmp
sub
inc
shr
sbb
cmp
in
lods
xchg
(bad)
fiadd
push
aad
stc
sti
mov
jo
dec
cmp
daa
push
leave
jp
mov
mov
pop
sbb
xchg
int3
cmps
out
mov
mov
fcomp
addr16
push
lahf
push
test
test
scas
test
ror
out
scas
in
hlt
(bad)
xchg
into
inc
rcr
and
inc
leave
mov
push
leave
dec
sub
push
pop
sub
inc
cmp
push
xor
js
gs
push
adc
es
and
bound
dec
push
dec
cmp
pop
or
mov
retf
push
leave
dec
sub
push
pop
test
ins
ss
jne
and
ds
sub
pop
(bad)
sub
and
mov
test
fst
je
and
xor
mov
fimul
add
or
and
push
xor
push
pop
popa
sub
pop
sbb
dec
sbb
inc
adc
data16
push
xchg
xchg
lock
cld
mov
push
xor
adc
inc
out
pop
int
mov
(bad)
outs
pop
call
add
pop
cmp
data16
jne
jae
fwait
enter
xchg
cmp
gs
imul
cld
mov
(bad)
push
cmp
push
ret
mov
(bad)
xlat
test
xchg
shl
in
cwde
iret
mov
int
out
sbb
xchg
and
fiadd
pop
ds
or
pop
and
dec
cmp
sub
ins
sub
pop
(bad)
lods
jmp
loopne
repz
(bad)
mov
movs
int
out
lahf
ficomp
ret
mov
push
pop
jae
or
inc
add
mov
mov
mov
fcmovnu
inc
fdiv
cmp
loopne
movs
xchg
sahf
in
out
ins
cmp
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
pop
push
jns
push
add
push
or
sub
pop
aas
dec
add
xor
dec
pop
xor
xchg
adc
fwait
stc
lods
clc
jle
dec
cmp
sub
jl
jns
dec
adc
push
add
aas
inc
sbb
pop
movs
repnz
mov
push
xchg
fsub
pusha
aad
add
add
outs
clc
ins
jmp
and
cld
mov
rcr
(bad)
retf
(bad)
stc
mov
xchg
rol
jmp
clc
or
lock
sbb
xor
sub
dec
aaa
dec
or
pop
adc
sub
aaa
ins
cmp
int
shl
mov
retf
mov
mov
fsubr
icebp
add
leave
mov
mov
(bad)
mov
loope
mul
dec
sbb
mov
ds
maxps
js
inc
or
lds
inc
nop
repnz
in
add
inc
add
cs
jge
xchg
cmps
loopne
rcr
call
mov
rol
mov
imul
cmp
jg
cdq
retf
test
and
iret
mov
(bad)
jmp
mov
mov
xchg
(bad)
cmps
in
std
movs
push
inc
cmp
push
inc
and
jge
ja
inc
adc
cdq
lock
cld
mov
mov
pop
cmp
or
adc
jge
inc
cmp
sbb
push
push
adc
es
pop
adc
push
js
call
or
arpl
dec
and
dec
cmp
or
or
cmp
inc
cmp
dec
adc
imul
pop
dec
xor
inc
adc
add
add
arpl
dec
sbb
dec
ss
aam
icebp
scas
retf
xchg
cli
mov
xchg
push
ja
push
push
aaa
inc
cmp
pop
and
push
cmp
sub
xor
iret
xchg
enter
ret
mov
pop
sbb
cmp
aas
outs
and
std
scas
loope
pop
jnp
dec
adc
push
cmp
int
leave
mov
mov
add
ja
mov
outs
int3
pop
sub
add
pop
retf
mov
pop
xor
bnd
or
sbb
cmp
ins
(bad)
je
xchg
xchg
xchg
call
aas
sub
lods
mov
movs
lock
inc
xor
sub
mov
clc
pop
das
cmp
inc
fisttp
dec
xor
(bad)
movs
sbb
xchg
(bad)
movs
lds
cmp
or
inc
(bad)
xchg
xchg
mov
rol
bound
add
jmp
in
jp
jl
add
sbb
push
shl
fmul
ds
dec
aad
out
xchg
bnd
push
prefetch
jge
cwde
xchg
xchg
mov
and
push
push
pop
mul
add
xchg
popf
test
jns
push
cmp
les
cld
mov
push
cmp
or
add
addr16
stos
mov
jmp
or
push
xchg
rol
or
mov
push
jle
loope
fidiv
jp
dec
xor
cmp
push
sar
pushf
lea
inc
add
xor
jnp
jl
ror
push
pop
fldenv
lods
stos
mov
pop
push
add
and
pop
xlat
stos
jbe
dec
and
and
push
js
loopne
loopne
sub
push
imul
rcl
dec
in
cmp
sub
inc
shr
test
xchg
jae
and
inc
fldcw
and
sbb
arpl
mov
push
inc
adc
cmp
pop
int
jmp
les
push
adc
xchg
mov
aas
ins
jmp
std
cdq
mov
bound
adc
pop
push
shl
sbb
ret
mov
lods
pop
inc
cmp
int
(bad)
movs
nop
std
cmp
add
xchg
loop
rol
add
retf
mov
sahf
mov
fsub
cld
xchg
mov
retf
mov
test
push
jno
jp
inc
or
push
or
in
mov
lods
out
rol
sar
repz
iret
xchg
pop
jbe
push
pop
add
ja
test
pop
xor
dec
les
lock
fidivr
into
test
push
je
jg
popf
iret
mov
mov
add
sub
jle
outs
cli
mov
hlt
xchg
cli
(bad)
repnz
fstp
pop
sub
pushf
jecxz
popf
(bad)
mov
dec
pop
sub
push
or
jb
pushf
int3
mov
loop
jmp
ret
mov
fsub
(bad)
add
aas
inc
fcom
mov
arpl
dec
cmp
inc
add
xor
xchg
push
add
cld
pushf
scas
rcr
adc
repz
pop
xchg
inc
or
or
stc
mov
popf
fild
das
or
pop
adc
in
rol
cmp
imul
jecxz
ror
jl
xchg
jecxz
lock
ret
add
cmps
repnz
aaa
push
jmp
mov
popa
and
loopne
out
iret
cmp
jb
push
adc
(bad)
cmp
cdq
push
inc
loopne
or
mov
mov
fsub
xorps
push
push
or
inc
or
mov
xchg
enter
mov
mov
push
(bad)
ja
jae
cmp
pop
push
and
mov
mov
xchg
aam
cmps
loop
rol
xor
shl
cdq
in
test
and
xchg
fdiv
jns
xchg
bound
daa
and
adc
(bad)
mov
pushf
shl
fild
lods
idiv
add
outs
call
test
popf
movs
jmp
adc
xchg
ret
cli
or
mov
pusha
neg
retf
ins
add
or
lods
repz
aam
movs
in
(bad)
scas
cmps
xchg
or
jb
jl
dec
push
add
out
stos
cld
sbb
jle
inc
or
push
jnp
jnp
gs
jp
inc
sbb
hlt
stos
out
xor
push
adc
ins
sbb
pop
jge
pop
or
xchg
clc
mov
mov
scas
in
not
movs
jle
out
scas
hlt
sub
jecxz
cld
xor
fs
rcl
or
pop
sub
(bad)
pop
ins
adc
mov
test
or
(bad)
retf
xchg
clc
xchg
outs
pop
pop
pop
loope
ss
mov
sar
fst
sub
aam
icebp
pop
call
imul
fimul
pop
cmp
inc
add
xchg
loop
pop
pop
loope
fadd
and
xor
mov
test
jge
jns
enter
(bad)
mov
div
cmps
aad
jecxz
icebp
mov
and
xor
fmul
fs
fist
pop
or
je
dec
push
pop
addr16
jecxz
xor
add
in
mov
stos
fdiv
mov
xchg
ror
mov
cmp
loopne
retf
lahf
retf
cmp
cmp
dec
fist
iret
(bad)
js
xchg
scas
xchg
rcl
rol
lahf
sar
ds
(bad)
pusha
sbb
in
mov
mov
popa
repz
lds
lock
add
push
dec
rdmsr
and
mov
jbe
dec
in
(bad)
aas
inc
fisub
imul
jmp
jmp
out
xchg
int
or
jecxz
cmp
(bad)
xchg
mov
xchg
fmul
adc
adc
dec
mov
push
and
repnz
in
(bad)
ja
dec
repz
xchg
mov
lods
shl
outs
rcl
ins
xor
xchg
fcomp
popa
adc
cs
and
cmps
neg
sub
cmp
mov
(bad)
fisubr
iret
je
fnsave
pop
sbb
je
arpl
rcl
jmp
jecxz
ret
add
arpl
scas
jmp
pop
cmovnp
popf
fidiv
mov
cmp
ss
jge
ins
cmp
jns
dec
adc
push
pop
jb
sbb
addr16
call
hlt
jo
bound
and
dec
repnz
stos
cld
push
add
pop
push
pop
push
ins
ss
ja
in
stos
fst
cmp
adc
dec
sbb
ins
and
sar
mov
loop
ror
arpl
inc
adc
push
pop
sbb
cmps
cld
lods
(bad)
(bad)
mov
xchg
mov
cli
test
retf
call
retf
mov
push
imul
add
push
(bad)
xchg
aad
shl
sbb
push
pop
dec
sbb
push
fldenv
pop
push
dec
sbb
out
leave
mov
xchg
ret
mov
sbb
and
clc
mov
movs
loope
aad
div
cmp
mov
pop
(bad)
dec
cmp
lods
(bad)
mov
stos
ret
push
dec
or
cmp
pop
sub
or
popa
jmp
cli
(bad)
fdiv
and
aas
jnp
dec
pop
inc
sub
daa
push
add
mov
mov
int
(bad)
xchg
fbld
iret
in
icebp
mov
addr16
pushf
mov
stos
bound
dec
or
jg
jne
mov
call
rol
hlt
adc
lea
push
jmp
mov
xchg
(bad)
add
scas
fistp
loop
mov
test
sahf
repz
xchg
fldcw
out
dec
outs
push
dec
adc
and
aam
fsubr
jno
dec
or
inc
add
ret
daa
bound
dec
push
sub
in
mov
xchg
sar
push
mov
add
mov
lods
ficom
(bad)
stos
push
fcomp
retf
jbe
dec
xchg
sti
stos
test
ins
mov
hlt
movs
faddp
stos
fisttp
cmp
push
add
mov
push
sub
mov
sbb
pop
mov
inc
push
sbb
rol
cmovge
jmp
dec
or
dec
btr
and
push
adc
jo
js
and
jae
outs
cmp
mov
outs
sbb
push
stos
cld
fwait
mov
mov
add
or
inc
add
jne
int3
movs
rcl
add
or
popa
(bad)
stc
and
fimul
lods
push
dec
gs
daa
test
pusha
push
cmp
sub
mov
lahf
dec
out
mov
fs
shr
popf
aad
dec
repnz
pusha
add
adc
aaa
push
mov
dec
xchg
mov
mov
dec
pop
retf
and
mov
movd
cmps
in
aad
jmp
(bad)
cs
es
ret
inc
ss
mov
clc
mov
(bad)
pusha
loopne
dec
enter
mov
pop
sbb
cmp
(bad)
add
pop
js
jne
cli
pop
outs
aaa
outs
cmp
push
mov
push
inc
jecxz
and
aas
xor
test
(bad)
or
ja
mov
call
xchg
pop
pop
adc
jbe
pop
dec
ds
jecxz
mov
call
push
in
into
lds
nop
jmp
add
addr16
jmp
cld
lods
call
ja
cwde
iret
mov
pop
ss
cmps
shl
test
popf
jno
bound
bound
inc
loopne
dec
add
push
out
outs
cmp
dec
add
les
fmul
out
pop
mov
adc
inc
in
sub
cwde
es
dec
in
imul
scas
in
mov
es
ins
sbb
jmp
pop
mov
nop
int
idiv
cmp
sub
inc
ss
mov
retf
jnp
das
ins
ret
pop
jno
inc
mov
inc
and
fbstp
cmps
fst
sub
cwde
lahf
out
fwait
ret
call
popf
stos
stos
arpl
inc
or
repnz
push
inc
cmp
or
cmc
dec
xlat
aaa
popf
rcl
mov
mov
mov
ins
or
xchg
int
cs
out
(bad)
fsubr
outs
jmp
(bad)
popa
mov
cli
cmp
dec
xor
mov
xchg
int
shr
scas
jmp
push
and
pop
je
push
in
xchg
fidiv
push
das
mov
sahf
ror
repnz
or
adc
jp
mov
aad
xor
daa
adc
push
or
push
xor
(bad)
cmps
aam
icebp
push
sub
ins
sbb
imul
out
into
mov
mov
pop
sub
pop
sbb
jns
jno
popf
retf
jmp
mov
xchg
xchg
(bad)
mov
int
dec
add
inc
test
dec
add
mov
push
stc
dec
cmp
xchg
cdq
fisttp
xor
jg
in
stc
cs
push
or
adc
inc
cmp
and
popf
retf
(bad)
hlt
sar
lahf
fst
sbb
and
popa
xchg
test
cwde
sar
cwde
shr
leave
adc
mov
pop
sub
and
sub
add
cmp
push
enter
(bad)
jne
mov
inc
sbb
jns
ds
jne
mov
enter
out
cmps
fcom
push
add
cdq
rcr
mov
bound
inc
pop
jmp
or
out
push
or
mov
push
jg
int3
mov
mov
imul
(bad)
les
dec
cs
stc
and
and
ins
adc
push
(bad)
movs
sti
add
out
xchg
jg
cmps
out
fimul
xor
in
or
adc
adc
lds
stos
dec
xor
jo
pop
xor
add
js
pop
cmc
sbb
push
and
xchg
clc
xchg
imul
cli
mov
popf
and
int3
sahf
out
mov
int3
stos
stos
push
and
xlat
fsub
aam
ss
push
and
lods
mov
push
add
hlt
pop
pop
adc
dec
mov
stos
movs
leave
out
mov
sbb
movs
or
jb
add
push
add
and
mov
fist
imul
lds
neg
jb
push
call
bndmov
pop
jmp
sbb
jbe
inc
cmp
int
fisub
mov
mov
mov
xor
fcom
inc
or
jnp
bound
lock
pop
pop
in
mov
cmps
xchg
jae
mov
(bad)
fcom
add
jecxz
rol
push
add
xchg
std
mov
out
ja
cli
mov
xlat
push
ins
sub
cli
test
test
cmps
stc
xchg
xchg
retf
mov
inc
push
dec
and
ins
sub
addr16
push
add
sbb
cmp
push
adc
xor
push
push
loope
push
jne
call
mov
bound
repz
push
or
sub
mov
sahf
out
pushf
sahf
cmc
popf
stos
sub
(bad)
cwde
jmp
pop
push
dec
or
add
(bad)
rcl
adc
add
movs
sti
nop
ret
aas
sbb
jmp
jg
jne
add
xchg
leave
cdq
fbld
push
pop
out
fild
or
add
jmp
adc
je
ret
test
mov
and
aad
int3
data16
mov
jp
push
fsubr
test
adc
jmp
mov
fcom
test
mov
lods
mov
xchg
aam
dec
and
iret
jnp
jae
xor
push
test
stc
or
pop
sub
call
(bad)
in
mov
push
fidivr
fst
pop
or
pushf
shl
scas
test
dec
jmp
and
jb
imul
push
add
enter
retf
(bad)
pop
cmp
push
dec
adc
mov
retf
aas
retf
mov
stos
hlt
lahf
rol
xor
jnp
adc
push
jge
dec
push
retf
mov
mov
outs
push
pop
xor
cmp
scas
cld
(bad)
(bad)
mov
add
pop
xor
fidivr
ins
cmp
loop
retf
jl
mov
mov
fsubr
fsub
in
and
aas
pop
sub
pop
es
inc
or
jns
movs
rcr
paddb
xor
js
jns
dec
loopne
cmps
fdiv
push
adc
imul
repnz
mov
xchg
loope
jecxz
fild
pop
xor
sub
lods
in
call
push
and
dec
mov
inc
xchg
mov
mov
dec
push
jne
push
push
pop
xor
xchg
rcr
popf
bound
pushf
inc
aas
ins
ds
or
call
pop
inc
or
xchg
iret
lahf
(bad)
imul
adc
addr16
mov
xor
stos
leave
mov
mov
pusha
mov
inc
or
jp
sbb
jl
repz
fbstp
dec
or
lock
hlt
mov
popa
add
dec
shl
mov
ins
jmp
inc
mov
cmp
push
mov
gs
jg
inc
xor
add
scas
stos
std
mov
arpl
ins
pop
push
das
ins
mov
mov
test
mov
test
mov
imul
inc
sub
dec
push
pop
out
cdq
shr
loop
retf
mov
mov
das
sub
scas
imul
rcl
cmp
mov
pop
mov
enter
cmps
rcr
fild
jno
pop
lds
idiv
neg
repnz
lods
call
xchg
lods
fsubr
pop
ss
cmp
and
xor
cmps
inc
aaa
jle
pop
adc
mov
add
jno
push
mov
mov
jbe
ds
push
pop
or
xchg
call
je
dec
and
cmp
mov
dec
push
and
lea
mov
xor
mov
mov
push
out
in
shl
stos
inc
in
ror
adc
rcr
mov
je
mov
sub
dec
aas
push
push
push
and
pop
xchg
aam
popa
jmp
cli
sbb
push
add
jle
sti
sahf
aam
(bad)
inc
loope
mov
xor
jecxz
fcmovnbe
add
mov
cmp
and
dec
clc
cmp
xchg
jl
pop
pop
(bad)
xor
push
sub
push
mov
das
push
and
dec
jae
and
add
xor
sar
in
mov
cmp
push
push
inc
mov
loop
(bad)
xchg
dec
fstp
test
pushf
int
cmp
cdq
enter
ror
xor
mov
stos
dec
repz
sbb
imul
int3
popa
fimul
jo
lds
inc
cmp
sbb
movs
aad
mov
mov
cmp
stc
dec
lock
es
jb
inc
or
jo
jle
pop
add
jl
inc
ss
scas
rol
shr
leave
mov
ins
ss
or
cmp
inc
mov
sub
dec
xor
push
cmp
push
das
inc
sbb
push
xor
or
pop
mov
cmps
(bad)
fisubr
call
ins
ss
out
dec
add
sbb
loope
(bad)
cwde
mov
push
mov
into
(bad)
mov
xchg
fsub
add
and
add
dec
or
mov
lods
repnz
ins
xor
jl
xor
dec
adc
pop
inc
mov
push
push
sub
enter
ja
jge
pop
cmp
inc
loope
dec
sbb
push
and
les
add
jb
pop
ret
sub
push
jg
adc
jno
adc
sbb
out
ret
cdq
dec
stc
lods
fcom
adc
or
das
push
and
jmp
cli
imul
mov
xchg
mov
nop
sti
xchg
into
xchg
dec
adc
test
scas
rol
xor
sub
xchg
cmps
fidivr
pusha
cmp
das
push
or
ret
mov
inc
ss
xor
daa
jns
cmps
retf
lahf
dec
add
dec
push
pop
call
out
inc
fidiv
jp
inc
xor
push
add
adc
pusha
ds
sub
pop
test
out
lahf
fisub
mov
or
out
loope
(bad)
js
outs
(bad)
mov
lods
test
ficom
bound
imul
cmp
adc
aas
outs
pop
xor
cmp
mov
fidiv
jne
inc
mov
dec
jecxz
fnsave
push
pop
add
(bad)
repnz
outs
cmp
movs
retf
xchg
lock
dec
repz
call
xor
in
xchg
mov
xchg
fwait
ret
add
dec
sub
lock
repz
daa
inc
sti
scas
call
adc
fwait
rcl
jmp
fbld
ja
scas
sti
mov
imul
(bad)
inc
or
jg
mov
jmp
sbb
jbe
rol
pop
pop
dec
sbb
or
jne
scas
fild
aad
xor
les
inc
sub
retf
dec
loopne
movs
loopne
or
jno
mov
clc
mov
add
dec
mov
imul
sub
aas
xchg
test
jle
push
jecxz
push
add
jae
and
fisubr
jg
in
neg
jg
pop
jmp
fstp
into
popf
fbstp
jne
outs
mov
lods
sti
test
mov
mov
call
ret
loope
jmp
in
les
push
sub
xchg
cld
lahf
idiv
adc
mov
xchg
rol
scas
ficom
aad
fisttp
stos
hlt
xor
pop
adc
pushf
fidivr
push
and
in
clc
and
das
ins
inc
or
xor
xchg
inc
push
jns
inc
loop
repnz
pop
add
xchg
mov
adc
add
adc
sbb
fld
and
jle
jne
push
or
(bad)
hlt
mov
mov
lahf
cld
lods
into
cdq
xchg
stos
ficom
aad
ss
xchg
test
out
mov
nop
aam
cmp
xor
and
dec
jmp
into
mov
add
aas
and
fs
daa
jne
dec
sti
mov
fiadd
in
iret
pop
cmp
lds
loopne
jne
push
sbb
push
outs
xor
push
inc
sub
push
das
ja
jae
inc
and
dec
adc
test
(bad)
shr
jbe
push
arpl
xchg
jae
or
push
cs
sbb
push
push
inc
xchg
mov
pushf
fwait
hlt
xchg
jmp
int
jb
fs
(bad)
mov
inc
cmp
cmp
gs
jne
sbb
mov
test
leave
mov
call
sub
cmps
cdq
not
in
jmp
jle
pop
mov
or
and
xor
sti
stos
retf
pushf
int3
jb
out
fidiv
sbb
pop
cmp
adc
and
pop
add
add
push
sub
sub
js
push
or
ret
test
push
xor
jno
xchg
fsub
ds
(bad)
fstp
mov
es
pop
and
sbb
pop
xor
neg
pop
or
xor
jb
outs
adc
cdq
in
mov
bound
cmp
sbb
fistp
ret
cmps
in
jo
add
loop
xor
xor
push
pop
ss
add
call
test
inc
sub
mov
lock
mov
scas
(bad)
lahf
leave
mov
push
push
push
sub
pusha
aaa
jae
push
jne
pop
adc
lahf
fisub
or
sub
cmp
cdq
movs
arpl
mov
ss
jmp
or
lods
int3
test
and
inc
sbb
adc
cmp
(bad)
call
adc
aas
jns
(bad)
xlat
mov
xchg
movs
cld
sub
je
mov
lea
push
mov
dec
sbb
jo
inc
sbb
jnp
ret
adc
and
test
js
push
add
test
mov
repz
repnz
sahf
fcomp
js
mov
pop
outs
call
and
fcom
rcr
loope
mul
add
mov
and
loop
repz
xchg
mov
mov
dec
push
adc
push
adc
push
out
sub
pop
adc
das
dec
add
xchg
push
add
lods
mov
mov
outs
das
cld
lods
fmul
loopne
icebp
lahf
in
das
add
sub
aam
out
and
xchg
scas
(bad)
mov
pusha
or
fs
dec
pop
stos
leave
test
je
pop
mov
dec
mov
lods
mov
mov
mov
mov
cmp
shr
stos
iret
sahf
cmc
movs
sahf
lds
mov
xor
hlt
xchg
fsub
rol
xchg
icebp
test
pop
pop
pop
jno
push
imul
ret
mov
xchg
fs
bound
xchg
aad
fstp
sub
mov
call
or
outs
adc
fisttp
pop
call
pop
sbb
push
add
sahf
(bad)
xchg
fisttp
or
inc
add
cmp
mov
call
mov
xchg
pop
push
pop
sbb
das
pop
or
inc
std
mov
xchg
mov
fisub
xchg
aam
inc
or
daa
push
js
pushf
jmp
jns
dec
repz
cmp
xor
xchg
jmp
shl
sub
mov
scas
scas
shl
cwde
xchg
stos
(bad)
mov
int3
inc
icebp
(bad)
test
cld
mov
adc
cmp
ja
es
push
in
pop
rcl
jecxz
mov
cdq
fst
pop
mov
stos
xchg
scas
mul
sbb
clc
cmp
inc
daa
cmp
ins
sub
addr16
sbb
test
enter
loopne
push
cs
pop
jle
push
pop
sub
xchg
mov
rcr
inc
pop
sub
jo
adc
or
adc
jmp
leave
sahf
mov
mov
xchg
stos
stc
cwde
retf
xchg
inc
into
mov
cmp
cs
mov
or
jno
jle
mov
xchg
mov
shr
sti
mov
pusha
psubsb
popa
das
adc
mov
xchg
mov
inc
cmp
jg
push
mov
in
mov
fst
add
aad
clc
das
loop
(bad)
fwait
rol
mov
call
fist
arpl
mov
(bad)
test
fisubr
inc
les
stos
xchg
mov
les
cmp
mov
movs
aad
cld
mov
mov
jg
dec
or
jae
je
data16
xchg
les
popf
fisttp
jmp
add
and
aad
(bad)
(bad)
dec
call
retf
mov
cmc
movs
mov
push
nop
lds
clc
and
cmp
pop
push
cmp
pop
aas
repz
clc
xchg
jae
mov
div
repnz
ret
mov
xchg
xchg
jne
jge
aaa
jg
xchg
gs
mov
ins
sub
jns
jae
pop
sti
sub
push
ins
cmp
mov
ja
lahf
retf
mov
pop
jb
dec
cmp
cmp
pop
out
or
ror
sub
and
mov
lods
shl
lods
fstp
lods
cmc
adc
or
and
cmp
push
mov
mov
rol
or
in
dec
xor
push
or
push
ror
retf
xchg
lods
xchg
push
sar
leave
sahf
stc
sub
pop
and
xchg
cli
cdq
hlt
push
mov
jne
cmp
out
les
jo
cdq
xchg
retf
fwait
cli
adc
push
xor
or
add
jmp
movs
in
ja
out
cmps
mov
xchg
jmp
mov
sar
outs
or
adc
repz
xchg
ror
outs
cmp
or
dec
cmc
and
pop
sbb
rep
fwait
jle
inc
add
es
push
je
pop
pop
sub
outs
aad
gs
mov
mov
aaa
rcr
cwde
not
ins
sbb
pop
loopne
mov
mov
mov
sub
out
mov
imul
aam
loopne
in
mov
into
movs
xlat
call
adc
or
jns
dec
add
adc
pop
or
jmp
(bad)
cdq
mov
inc
xor
or
push
pop
daa
jo
dec
inc
xor
add
fs
or
or
lahf
jmp
jb
pusha
or
xor
or
xchg
adc
mov
loopne
sbb
imul
aas
outs
sbb
inc
cmp
es
push
pop
cld
xchg
ror
cmp
jno
dec
clc
mov
mov
(bad)
xchg
movs
xlat
push
add
or
xchg
rol
jbe
retf
(bad)
and
xor
sbb
jg
pushf
hlt
inc
cmc
aad
xlat
mov
or
push
and
add
fld
ret
bound
push
and
xor
aas
jnp
mov
mov
xchg
ret
mov
test
jnp
jnp
cmp
ins
cdq
shr
out
shl
stc
js
jg
push
or
xor
push
bound
jb
inc
sbb
jns
cmps
(bad)
xchg
lahf
aad
cmc
mov
mov
mov
retf
mov
push
pop
or
adc
push
push
push
adc
adc
dec
sbb
and
outs
add
mov
jmp
popf
cld
cdq
icebp
xchg
lods
stc
mov
and
push
pop
jb
push
add
pop
or
mov
mov
and
bound
or
mov
cwde
icebp
ds
pop
sbb
das
jne
pop
xor
pop
push
pop
leave
push
xchg
mov
cmp
jge
pusha
cmp
and
movs
scas
scas
sti
mov
add
and
leave
mov
lahf
mov
sub
or
cs
and
mov
mov
es
add
mov
cmp
push
cmp
or
call
cmp
cwde
jl
rcl
lods
fnstenv
and
pop
nop
ret
mov
cs
aad
sahf
fistp
in
add
pushf
ins
xor
sub
inc
xor
jecxz
jmp
stos
cdq
rcr
or
push
aad
jmp
ins
aad
idiv
mov
in
out
test
xchg
loopne
ret
cmp
call
cdq
retf
clc
xchg
out
mov
xchg
lea
inc
xchg
mov
cdq
mov
nop
sti
or
inc
push
inc
or
xor
sub
xor
ss
jae
lods
std
mov
scas
(bad)
adc
inc
and
jecxz
in
test
adc
jo
ret
xchg
out
push
retf
or
in
pop
and
into
mov
nop
idiv
mov
scas
fsub
inc
aaa
jge
rol
enter
daa
push
sbb
push
sbb
je
inc
movs
ficomp
add
push
aaa
imul
push
adc
ret
inc
adc
xchg
stos
rol
mov
(bad)
mov
sti
scas
call
adc
into
(bad)
add
and
(bad)
retf
xchg
push
or
jb
sbb
dec
sub
inc
sbb
dec
adc
push
ss
push
sub
fisub
cdq
jp
jmp
fidiv
ret
pop
or
xor
inc
sub
inc
adc
add
adc
sbb
inc
mov
cmp
lahf
jmp
add
fnstsw
mov
in
clc
imul
sub
cmp
data16
pusha
repz
xchg
in
ror
push
div
fdiv
jmp
dec
jg
push
push
sub
xchg
icebp
stos
xchg
idiv
arpl
push
pop
sbb
inc
add
lds
pop
adc
mov
out
mov
mov
xchg
iret
pushf
fsubr
push
jmp
sbb
xor
inc
adc
and
sub
push
cmp
ja
arpl
es
mov
xlat
xchg
test
test
xchg
retf
fisttp
pop
bound
jno
les
pop
ins
test
in
fld
jp
mov
das
and
loopne
pop
daa
jge
push
inc
or
call
or
mov
cmp
jo
pop
sbb
push
pop
ins
sbb
pop
push
sbb
mov
in
(bad)
fwait
mov
jp
ss
ja
cwde
fisub
push
or
pop
cs
imul
push
stc
mov
dec
and
dec
jecxz
or
repnz
neg
ret
mov
xchg
lds
and
mov
and
aam
fmul
xlat
xchg
int
xor
push
dec
sbb
dec
aas
jbe
dec
pop
sub
lods
cld
mov
lea
dec
cmp
pop
sub
or
push
pop
and
fidivr
mov
mov
outs
push
sbb
add
fnsave
(bad)
mov
es
test
sub
jae
pop
cmp
cmps
std
xchg
cld
xchg
test
mov
pushf
retf
mov
loop
out
fadd
and
js
mov
in
cmp
inc
and
mov
jo
inc
loopne
cli
mov
push
add
dec
mov
test
out
ret
cwde
inc
jmp
or
sub
xor
fdivr
inc
adc
add
sub
pop
and
jae
push
sbb
in
test
pop
in
test
add
mov
lock
cmp
repz
dec
xor
pop
sub
dec
adc
adc
movs
adc
cmp
push
cmp
ret
mov
cmps
in
mov
arpl
dec
push
pop
rcl
mov
dec
cmp
adc
mov
xchg
xlat
mov
xor
ins
stos
jmp
mov
sahf
into
movs
int
fisttp
push
cmp
push
xor
mov
mov
adc
rcr
sub
das
jg
mov
sbb
pop
adc
push
push
std
adc
pop
jle
mov
push
jo
dec
sti
xchg
jp
out
int3
inc
sbb
pop
nop
push
aaa
ins
cmp
fcomp
dec
cwde
mov
inc
adc
cld
mov
or
cmp
fimul
imul
adc
(bad)
cmp
inc
adc
xor
sbb
jge
and
dec
and
mov
shl
inc
aas
sub
sbb
out
mov
scas
repnz
clc
mov
add
jne
imul
fmul
cmp
jp
add
jo
and
jnp
xor
pop
sub
add
add
add
cld
nop
cs
shl
sub
jns
(bad)
repz
(bad)
mov
(bad)
mov
cmps
mov
cmp
mov
les
cmp
test
mov
mov
cli
xchg
ror
jo
mov
cs
or
mov
jno
dec
adc
xchg
lahf
popf
cmp
out
adc
adc
leave
sahf
fbstp
and
adc
dec
sub
mov
mov
cwde
loop
mov
loopne
retf
and
or
sbb
mov
push
or
or
arpl
jp
push
mov
test
jg
dec
sbb
(bad)
cmps
repnz
pop
inc
add
(bad)
pushf
int
iret
nop
mov
sbb
xor
push
dec
add
adc
(bad)
mov
mov
xchg
sub
imul
ret
jne
pop
test
nop
jmp
pop
push
pop
imul
jmp
test
jbe
adc
push
mov
mov
mov
mov
push
inc
sbb
mov
and
popa
xor
or
jns
inc
add
adc
test
push
ds
out
imul
mov
movs
lods
cld
test
lods
push
ret
mov
fistp
mul
out
(bad)
pushf
mov
push
cmp
ret
xchg
and
mov
shr
fs
or
jle
adc
sbb
scas
fimul
add
cmp
mul
jae
ins
paddw
push
cmp
dec
(bad)
div
inc
and
cmp
imul
ja
movs
loope
fld
jmp
in
xchg
add
inc
add
(bad)
xchg
shl
jmp
dec
retf
cwde
hlt
dec
sub
dec
or
es
push
inc
add
xor
mov
dec
pop
and
sub
sub
pop
pop
jae
and
inc
lahf
into
mov
lds
jg
cld
cdq
cli
pop
pusha
cmp
retf
inc
push
into
mov
dec
sbb
lea
cmps
fld
inc
push
push
add
pop
mov
out
clc
jbe
lock
lods
jmp
xor
inc
ds
lds
and
dec
push
cmp
and
and
lds
mov
lock
idiv
ins
sub
mov
mov
jns
sbb
dec
rep
dec
add
xchg
jmp
sub
stos
ret
sub
daa
push
pop
pop
div
jge
inc
or
imul
mov
xor
and
sbb
pop
or
pop
leave
loope
fistp
int3
mov
daa
ret
pushf
aad
not
xor
xor
inc
inc
add
in
cwde
enter
test
movs
loopne
adc
popf
fstp
jg
pop
or
das
pop
xor
pop
or
outs
out
jno
push
sbb
and
dec
lds
jbe
in
test
cmps
inc
push
inc
add
sub
jl
and
ja
das
ja
mov
movs
call
neg
mov
sub
ss
add
outs
out
cmc
mov
xchg
jecxz
cmc
pushf
cld
stos
mov
into
sahf
hlt
jp
push
pop
sbb
cmp
push
add
pop
push
ss
imul
stc
mov
adc
dec
es
jecxz
cmps
loop
xchg
adc
mov
fisubr
fild
pop
adc
push
rcr
cdq
fnsave
jge
outs
adc
push
out
xchg
and
push
es
shl
in
sub
push
and
fisubr
in
test
xchg
repnz
or
jg
cmps
fdivr
dec
adc
arpl
jp
ja
dec
icebp
aad
jecxz
xlat
cs
cmp
jns
outs
pop
xor
movs
loopne
sbb
iret
lods
fdivr
mov
mov
fwait
aad
out
mov
xor
imul
inc
jo
ins
stos
(bad)
retf
adc
xlat
add
je
add
ins
mov
dec
sbb
mov
fsub
dec
in
retf
add
ds
dec
xor
ret
ret
mov
pusha
cs
ret
jo
push
pop
xor
outs
and
xchg
retf
xchg
in
ficomp
std
mov
mov
retf
pusha
sub
repnz
(bad)
mov
and
push
push
jae
cs
lods
(bad)
jns
stos
shr
fst
jp
(bad)
mov
pop
(bad)
leave
mov
jbe
and
cwde
std
jbe
add
jmp
pusha
cmp
xor
push
cmp
push
pop
sbb
sub
cmp
and
scas
imul
xchg
pop
add
push
inc
push
pop
adc
fild
fistp
cmp
stc
ins
adc
adc
leave
das
and
aas
gs
out
mov
mov
pop
in
(bad)
clc
scas
clc
je
icebp
lods
in
test
jl
dec
add
sub
or
xchg
les
inc
jmp
adc
mov
(bad)
movs
icebp
sub
mov
scas
ret
push
inc
adc
inc
mov
stc
(bad)
loopne
int
imul
pop
or
es
in
repz
sub
imul
cvtpi2ps
lods
in
rcr
ins
add
dec
cmp
xor
xor
jle
jecxz
loope
sub
dec
loop
pusha
or
(bad)
mov
int
stc
mov
pop
inc
loopne
out
lock
movs
sti
call
icebp
xchg
fistp
xor
and
js
jbe
xchg
les
sub
sahf
int
or
nop
jp
inc
mov
lods
xlat
lea
sbb
test
cmps
jmp
sbb
or
sub
sbb
inc
add
push
pop
xchg
loop
cli
xor
mov
push
ins
or
xlat
and
jge
and
inc
sbb
sub
js
mov
pop
push
add
and
imul
and
cmp
pop
pop
pop
adc
fimul
repz
jg
push
mov
std
cmps
clc
xchg
or
int
fld
ror
mov
xchg
mov
cdq
in
mov
mov
sbb
jns
sbb
std
mov
xchg
shl
das
pop
or
lock
or
dec
or
pop
and
jbe
dec
in
mov
jmp
push
mov
imul
mov
and
aas
jl
push
xor
test
mov
call
dec
sbb
add
es
loop
cmc
movs
aad
ret
mov
(bad)
cmps
in
pop
cld
xchg
xchg
push
pop
sub
or
dec
cmp
xor
lds
cld
pop
aaa
inc
pop
inc
or
ja
(bad)
xchg
aam
int3
xchg
ins
push
fimul
neg
repz
jge
dec
and
pop
or
sbb
mov
test
gs
push
mov
mov
or
inc
lods
stos
enter
fstp
ss
aas
jnp
jne
cmps
rol
cmp
pop
xor
pop
jl
int3
mov
fldenv
ret
add
jb
dec
mov
lahf
shr
and
stc
mov
pop
pop
dec
pop
ja
movs
cmc
mov
stos
ins
loopne
in
int
push
aas
push
ds
loopne
call
imul
out
scas
retf
addr16
pop
dec
add
cwde
enter
in
mov
repz
or
dec
or
cmp
outs
cs
cmp
(bad)
sti
mov
popa
jmp
xchg
icebp
test
cdq
enter
mov
and
dec
into
mov
nop
mov
ficom
add
jp
mul
pushf
rol
dec
or
je
mov
xor
adc
push
and
ds
inc
sub
inc
or
inc
mov
mov
dec
cmp
es
jo
lahf
rcr
rcr
dec
loope
add
and
loopne
push
sub
pop
cmp
inc
pop
push
pop
dec
add
xor
in
mov
mov
or
xchg
rcl
sbb
adc
pop
inc
add
or
fsubr
push
cmps
lahf
mov
aad
std
test
mov
in
xchg
iret
pop
mov
movs
rcl
cmp
mov
aam
xor
cmc
mov
popa
sbb
cwde
(bad)
cwde
sbb
dec
ret
popa
and
clc
xchg
cli
arpl
or
lds
(bad)
ficomp
out
pop
xor
sbb
bound
dec
(bad)
std
xchg
test
cs
xchg
stos
pop
sti
mov
fld
mov
aam
cmp
call
jno
shl
xchg
loopne
sbb
clc
fs
inc
sbb
addr16
sub
sbb
loopne
repnz
pushf
fsubr
pop
sbb
push
aas
gs
pop
sbb
dec
sbb
hlt
cs
arpl
pop
sub
enter
push
inc
or
aam
push
sbb
inc
add
pushf
stos
jbe
mov
xchg
lods
xchg
sbb
pop
call
shl
int3
mov
sub
int3
jno
pop
repz
arpl
cmp
sbb
hlt
mov
ret
sub
daa
and
jne
into
gs
call
jb
dec
out
mov
xchg
cmc
movs
(bad)
in
aas
daa
ds
or
test
in
cmp
out
mov
cmp
inc
or
mov
lahf
add
xchg
push
add
ficomp
imul
mov
cld
mov
mov
cmps
xchg
mov
jg
lods
mov
mov
mov
push
xor
jmp
(bad)
loop
(bad)
push
mov
and
adc
fstp
xchg
imul
xor
mov
pop
fsubr
out
cmp
das
sbb
mov
xor
in
dec
(bad)
jl
pop
sbb
daa
push
lock
fimul
sbb
push
ds
xor
sub
in
ds
adc
and
movs
mov
stos
sahf
imul
push
cmps
les
or
jnp
pop
mov
dec
mov
loope
mov
xchg
dec
fnstenv
pusha
mov
add
sub
imul
inc
mov
scas
adc
sub
and
add
cmp
retf
aas
dec
lods
inc
xchg
jp
cmp
ds
rol
or
cmp
and
inc
ss
or
test
aad
loopne
fs
call
jecxz
retf
pop
fild
repnz
mov
test
data16
adc
pop
fbstp
push
xchg
sub
pop
test
xor
test
mov
shl
inc
(bad)
cmp
inc
mov
fisub
call
mov
call
ds
push
sbb
xchg
cdq
ret
push
stos
jbe
mov
jne
and
sbb
stos
xchg
jns
outs
mov
int3
lea
jge
inc
xchg
jo
mov
retf
mov
xchg
jae
sub
xchg
xchg
js
test
arpl
cs
sub
ss
clc
and
push
fisubr
fldenv
ds
sub
or
inc
mov
mov
pop
mov
add
cmp
dec
mov
jmp
imul
in
out
push
pop
adc
pop
(bad)
cmp
fcom
imul
clc
jle
xchg
jbe
jno
sub
(bad)
mov
fisub
out
sub
(bad)
imul
loop
cli
dec
mov
add
push
mov
pusha
mov
jg
pushf
inc
int
pop
jmp
shr
xor
pop
lods
cdq
inc
shl
in
outs
les
dec
lods
sahf
inc
mov
jb
lock
sbb
sub
cmp
sbb
add
das
(bad)
xor
ret
pop
ret
stos
jl
mov
dec
mov
or
inc
into
or
jmp
shl
dec
stos
xchg
xchg
outs
mov
mov
inc
add
out
(bad)
cmp
sub
test
dec
iret
push
aad
shl
pop
shr
sbb
mov
int3
jo
outs
fimul
psrad
xor
inc
mov
jl
xchg
js
push
cmp
fisttp
sbb
fcom
cmp
push
int
sbb
jecxz
mov
fist
adc
xor
jge
push
mov
js
aas
cld
dec
sub
out
dec
mov
aaa
cmp
pop
ror
inc
mov
sub
out
ret
je
push
test
(bad)
cmp
out
int3
aas
adc
add
pop
cld
add
loopne
in
adc
adc
es
add
inc
mov
fistp
xor
lds
gs
xor
es
jmp
arpl
adc
inc
retf
add
and
sbb
pop
aam
stos
inc
mov
jle
gs
and
or
sub
stc
xor
push
or
dec
scas
inc
mov
inc
mov
xchg
gs
sub
inc
test
ficomp
(bad)
jg
rcr
push
mov
fist
div
retf
sub
movs
movs
inc
mov
pushf
inc
ror
std
xor
pop
mov
ss
ret
adc
sub
cmp
popa
shl
aaa
std
and
aas
loope
cmp
sbb
sub
jb
and
jne
adc
sar
icebp
aas
sbb
retf
stos
push
pushf
jl
and
pop
shl
sbb
or
pop
mov
and
iret
xor
pop
(bad)
pop
mov
rol
out
mov
das
pop
adc
mov
es
es
push
int
or
pop
cmp
ss
adc
cwde
pusha
mov
std
push
fsubr
ins
cmps
test
fld
in
push
xlat
push
les
sbb
sbb
xor
mov
inc
fnstsw
and
push
cmc
js
data16
and
cmp
adc
cmp
pop
aad
mov
sti
ss
xor
cld
daa
adc
push
mov
repnz
hlt
mov
mov
inc
fbstp
or
xor
jg
or
and
pop
repz
mov
inc
stos
xchg
pushf
mov
pop
lods
fistp
out
pop
rol
in
sub
jge
jo
pop
fmul
fdivr
sbb
les
ins
(bad)
xor
loope
mov
inc
xor
sti
push
jmp
xchg
xchg
jl
mov
cmps
mov
mov
outs
shl
mov
xor
or
xor
scas
pusha
fsub
or
cmp
jg
jg
retf
add
xor
std
add
popa
sub
mov
mov
popa
mov
push
movs
xchg
test
cld
xor
dec
add
xor
push
cmp
xor
in
dec
fiadd
jp
sub
repz
std
lods
jge
adc
dec
fstp
inc
fistp
pop
(bad)
idiv
ret
push
leave
add
in
or
mov
pusha
mov
lahf
ins
xchg
je
cmp
pop
and
les
aas
icebp
cmp
loope
fisub
cli
push
ret
pop
(bad)
adc
cmp
js
inc
cmps
jecxz
sbb
or
sub
pop
cmp
add
inc
xor
shl
pop
mov
add
or
es
push
cmc
dec
mov
repnz
jns
dec
into
or
and
inc
xchg
jne
inc
mov
mov
xchg
cmp
imul
or
adc
dec
mov
arpl
push
in
scas
push
mov
ficomp
imul
dec
iret
outs
mov
inc
int
clc
sub
pop
in
in
mov
(bad)
popf
popf
push
sbb
call
jne
push
and
push
mov
stos
ins
pop
repz
adc
lds
push
and
sub
and
stos
imul
inc
fistp
mov
out
das
or
cli
adc
push
push
fild
es
bound
xor
sbb
cs
cmp
push
lds
pop
sub
or
or
pop
lods
lods
loope
cmp
adc
inc
rcl
ins
test
mov
xchg
(bad)
ficom
stc
jge
add
sbb
loope
ror
push
fcomp
push
out
xor
inc
lods
mov
das
inc
sti
sub
jbe
jp
and
dec
sbb
or
mov
fs
imul
adc
lahf
arpl
mov
mov
dec
cmp
je
ins
test
and
xor
and
je
jns
push
dec
fimul
dec
cmps
ret
pop
icebp
inc
xlat
dec
cmp
adc
loop
(bad)
push
(bad)
lods
fwait
xchg
pop
rcl
mov
adc
pop
cld
dec
fisubr
adc
adc
sbb
ror
inc
fild
mov
dec
std
jbe
pop
fst
pop
add
loope
or
pop
test
cld
dec
push
in
push
(bad)
jnp
inc
std
pop
xlat
cmps
mov
cmp
dec
(bad)
jnp
das
or
stos
xchg
xchg
xor
jo
push
inc
out
pushf
popa
out
outs
fbld
pop
fmul
daa
xor
clc
mov
cmp
xor
cmp
push
adc
push
dec
(bad)
out
jnp
inc
fimul
jne
push
ret
pop
mov
les
add
jle
add
inc
test
fstp
push
mov
mov
pop
clc
pop
movs
lods
mov
psadbw
inc
hlt
jnp
push
sub
push
test
lahf
jbe
daa
outs
movs
outs
stos
sahf
outs
(bad)
inc
mov
mov
inc
mov
shl
ret
pop
mov
sub
inc
movs
nop
scas
lahf
outs
fnstenv
jb
and
push
mov
ja
js
or
popa
xlat
dec
mov
adc
loop
mov
in
push
push
or
xor
popf
mov
fbstp
push
ret
jp
pop
test
std
jl
sub
push
cmc
jb
pop
lods
cmp
stc
(bad)
fwait
mov
nop
rcr
jle
xor
in
pop
shl
xor
ss
int
test
mov
lods
lods
mov
jle
dec
stos
mov
push
fistp
dec
lods
xchg
xor
push
hlt
jno
lods
mov
fdivr
push
(bad)
inc
or
inc
sti
and
sub
loopne
rcr
dec
mov
xchg
rcr
inc
leave
jne
test
scas
xor
inc
cmc
mov
xchg
jno
pop
stc
inc
enter
and
aas
add
adc
xor
dec
(bad)
pop
stos
scas
popa
std
xchg
jnp
dec
iret
sub
pop
int3
dec
fidivr
cmp
hlt
and
dec
retf
cmps
outs
(bad)
pop
scas
mov
pop
repz
pop
push
lods
mov
mov
push
sar
push
push
out
sub
inc
mov
call
enter
retf
push
mov
ins
shl
shl
mov
xchg
xchg
test
mov
sahf
gs
sub
sub
int3
pop
mov
js
jmp
fdivr
dec
mov
jbe
dec
shr
lock
dec
mov
xlat
pop
mov
add
sbb
push
sbb
add
sbb
ins
mov
mov
fisttp
xchg
mov
xchg
jle
(bad)
enter
popf
mov
jbe
hlt
push
aad
ret
inc
mov
xchg
not
dec
cmc
sub
or
ins
test
add
es
jmp
add
cmp
add
fnstenv
push
hlt
and
add
mov
call
and
cmp
jae
imul
scas
lea
nop
xor
cmp
cmp
dec
ret
pop
test
int
lds
icebp
cmps
mov
inc
fcomp
es
div
push
mov
and
pop
inc
les
es
adc
sub
sub
add
in
bnd
pop
call
(bad)
clc
dec
sti
dec
ror
dec
into
pop
cmc
push
mov
xor
dec
fild
aas
out
(bad)
jne
dec
fisub
loopne
lds
nop
mov
ret
jl
jg
pop
retf
xor
xor
and
jmp
fidivr
inc
into
sub
or
loop
cld
and
and
lock
rcl
pop
fstp
and
dec
fistp
mov
(bad)
enter
sub
daa
in
je
inc
mov
ficomp
inc
movs
call
sub
nop
mov
ficomp
(bad)
and
loope
lds
xchg
cdq
mov
dec
lods
xchg
inc
shl
stc
pop
mov
test
push
ds
stos
mov
mov
cmp
pop
mov
xchg
je
test
jg
pusha
movs
iret
dec
mov
movs
in
cmp
movnti
push
jmp
xor
push
add
xor
mov
(bad)
pop
mov
iret
cmp
je
inc
stos
inc
mov
inc
mov
imul
inc
test
or
xor
sub
ds
je
pop
in
dec
mov
or
mov
add
jl
xchg
jle
dec
aam
fisttp
cmp
jmp
xlat
jb
jl
sub
and
and
jge
jg
cwde
stos
stos
mov
out
mov
popf
pusha
lds
jmp
xchg
imul
cwde
xchg
ins
retf
push
retf
dec
stos
sahf
dec
shl
jl
mov
ret
scas
jle
mov
sar
ja
xor
sbb
xor
jae
mov
sub
pop
mov
(bad)
jg
ins
pop
imul
out
call
repz
and
loop
clc
push
iret
cmp
cmp
inc
fcom
shr
or
push
js
popa
les
ficomp
sahf
xchg
push
jecxz
mov
sahf
inc
add
inc
mov
imul
cmp
addr16
nop
jne
sti
and
push
xchg
xchg
cdq
outs
scas
mov
sub
add
cmp
push
int3
add
je
fwait
outs
test
(bad)
es
mov
cmp
xor
out
mov
pushf
dec
int3
and
pop
xor
in
adc
push
movs
inc
cmp
mov
ins
fild
push
or
pop
aam
jmp
sbb
call
jo
push
shl
leave
and
add
retf
push
mov
fnstcw
or
loope
adc
addr16
dec
mov
push
jle
aas
aaa
adc
mov
fcom
xchg
js
mov
jl
xor
push
sbb
test
jmp
push
test
fnstsw
in
pxor
int
mov
(bad)
dec
mov
inc
mov
fld
icebp
pop
cmps
mov
in
ficomp
push
iret
add
push
scas
jp
loope
mov
in
and
lds
rcr
fwait
mov
rol
icebp
pop
mov
inc
aam
mov
fsub
push
sbb
neg
adc
sub
ds
xor
mov
ins
movs
cdq
arpl
sub
inc
(bad)
test
(bad)
int3
push
cmp
xor
dec
(bad)
dec
fldenv
cmp
sbb
loop
std
push
push
jecxz
adc
cmp
inc
rcr
ficomp
adc
push
std
push
leave
jl
push
stos
addr16
mov
sub
or
cmp
cmps
mov
stos
mov
ficom
sub
sub
aaa
adc
leave
dec
cmc
jle
inc
fbstp
lea
sub
push
ret
js
jg
dec
test
sti
inc
into
dec
mov
dec
test
outs
hlt
imul
mov
push
movs
mov
push
leave
inc
test
jmp
push
sub
dec
mov
mov
inc
xlat
mov
push
(bad)
je
lahf
mov
call
inc
int
add
push
inc
cld
jne
mov
adc
pushf
xchg
xlat
sub
dec
retf
pop
iret
push
int
test
xchg
mov
xchg
imul
test
jo
dec
test
xchg
xchg
rol
pop
lods
les
je
inc
movs
pusha
retf
pop
ret
outs
lods
push
mov
aaa
sbb
sbb
jg
dec
movs
rcl
dec
(bad)
pop
clc
jg
test
inc
mov
pop
loop
into
or
mov
push
aad
out
arpl
push
fidivr
jle
stos
dec
mov
pop
in
je
adc
jb
inc
movs
sahf
push
mov
pusha
mov
and
mov
mov
jns
push
retf
adc
cli
xor
jecxz
repnz
hlt
pop
xchg
inc
aas
or
jbe
mov
xchg
fs
ret
push
stc
xor
loope
cli
push
(bad)
cmp
mov
mov
adc
mov
sub
imul
xor
stos
bound
xor
cmp
stos
pushf
ja
jne
push
add
es
push
xlat
add
dec
mov
push
rol
mov
xor
or
dec
and
in
mov
ds
sub
int
mov
push
leave
sahf
mov
mov
test
adc
cmp
sbb
outs
(bad)
dec
cli
stos
inc
mov
sbb
jnp
adc
cmp
cmp
or
retf
cli
adc
lahf
ins
mov
sahf
push
movs
dec
mov
or
ins
cmps
data16
popf
retf
add
out
pop
and
enter
pushf
popf
jae
js
xchg
test
in
dec
clc
dec
test
call
dec
rcl
inc
lods
(bad)
mov
jmp
push
add
and
sub
sub
xchg
jle
pop
scas
inc
mov
push
mov
or
cs
ror
int3
das
clc
dec
fild
adc
les
call
adc
jg
cmp
and
jp
imul
adc
mov
xchg
ja
fcom
loope
add
inc
xlat
add
retf
and
outs
add
cli
dec
test
and
int
mov
and
pushf
inc
mov
jae
cmps
repnz
push
fisubr
fmul
call
pop
mov
lea
(bad)
dec
mov
fnstcw
sbb
aad
sbb
push
lea
add
out
mov
(bad)
jl
cmp
cmps
mov
mov
aam
(bad)
cmp
add
mov
xchg
inc
cmp
dec
(bad)
ins
scas
out
push
icebp
push
stos
mov
call
sbb
xlat
or
loope
sbb
push
shr
lds
jge
jle
add
shr
pop
mov
xchg
mov
jne
push
stc
dec
fidivr
cdq
mov
xchg
mov
jo
jp
inc
mov
mov
and
dec
scas
push
sar
push
aas
xor
call
xor
pslld
pop
mov
stos
cdq
xchg
fwait
ja
and
and
call
dec
adc
ror
or
pop
lods
ficom
enter
add
daa
lock
(bad)
xor
pop
fisttp
fist
fbstp
dec
scas
pushf
jnp
xchg
shr
and
add
pop
mul
push
stc
adc
dec
add
ficom
ins
std
inc
(bad)
mov
add
jns
jo
and
outs
stos
fistp
jo
test
in
ret
test
mov
in
fist
retf
ds
sub
pop
rol
pop
mov
inc
mov
or
sbb
push
movs
mov
sti
dec
(bad)
aaa
or
es
mov
jb
inc
and
mov
inc
mov
into
inc
lds
push
daa
in
(bad)
(bad)
push
rol
xchg
sahf
sahf
jno
repz
dec
sbb
sbb
xchg
mov
data16
sub
psubb
fsubr
(bad)
pop
mov
scas
cwde
dec
mul
sbb
ss
pop
movups
sbb
inc
mov
outs
mov
loopne
push
ret
sti
push
(bad)
repnz
add
pop
mov
dec
nop
cwde
fld
ret
(bad)
cdq
xchg
imul
dec
mov
movs
push
shl
pop
int3
nop
add
jmp
not
jl
call
cdq
xchg
js
dec
in
mov
nop
jle
ss
(bad)
push
xchg
mov
xchg
(bad)
push
mov
aad
test
dec
xor
rol
out
cmp
adc
adc
sub
daa
les
out
aaa
not
and
ret
dec
shr
xor
mov
cdq
jge
clc
jge
xchg
jnp
add
pop
(bad)
pushf
xchg
imul
inc
mov
fisttp
mov
test
xchg
xchg
shl
xchg
(bad)
retf
(bad)
mov
mov
sbb
xor
push
aam
clc
pop
in
daa
in
sub
push
xchg
lods
mov
add
pop
cmps
inc
fnstenv
mov
stos
dec
mov
push
mov
sbb
xor
ret
pop
fisttp
int3
sub
jecxz
adc
shl
repz
mov
enter
mov
fild
les
call
dec
movs
inc
(bad)
fsubr
push
adc
cmp
dec
cmps
scas
(bad)
jo
loop
mov
jb
xchg
jl
and
or
xchg
inc
mov
mov
and
loope
xchg
ins
test
lea
sub
in
aas
loop
or
js
or
cli
das
jecxz
mov
pop
fs
ror
jmp
push
enter
dec
sbb
or
push
into
add
push
adc
pop
fnstenv
call
push
je
cmp
cs
pop
sar
in
sbb
push
pop
push
std
xor
pop
ins
int
in
adc
clc
jns
mov
add
mov
popf
push
mov
lea
loop
movs
inc
mov
sbb
and
or
ss
mov
ss
push
push
add
inc
add
push
xor
retf
pop
or
call
push
mov
and
cmp
pop
mov
or
push
add
cmp
mov
fdiv
adc
ret
fidiv
sbb
dec
test
cmc
push
mov
(bad)
adc
pop
cmp
mov
xor
dec
mov
adc
and
pop
mov
lock
or
and
pop
sbb
or
(bad)
dec
ficomp
pop
lea
xor
lahf
outs
scas
push
mov
and
mov
push
add
push
ficom
add
push
leave
adc
ins
sbb
fnstenv
jns
jae
push
add
arpl
push
mov
adc
mov
xchg
lock
cwde
mov
loope
out
test
sub
pop
adc
outs
sub
xchg
mov
add
loopne
xchg
(bad)
xchg
sti
movs
ficomp
lods
fcomp
cmp
outs
repz
imul
jle
bound
outs
xor
rep
lock
inc
stos
lds
cmc
mov
mov
adc
push
xor
pop
sbb
or
mov
add
loopne
and
cli
mov
shl
mov
add
ins
scas
les
stos
hlt
or
ret
or
out
arpl
adc
das
daa
les
fisubr
add
sub
aaa
data16
inc
or
adc
jg
push
add
jmp
add
leave
rcr
mov
outs
xor
das
inc
add
pushf
shr
cmp
ror
jle
push
mov
retf
sbb
push
pop
ficom
fisttp
in
mov
ror
pushf
retf
lds
aaa
dec
or
sbb
xchg
hlt
mov
lock
push
inc
xchg
dec
sub
jecxz
dec
or
mov
mov
ret
xchg
addr16
sbb
inc
mov
xchg
xchg
icebp
call
xor
ds
jecxz
(bad)
mov
mov
mov
ins
adc
pop
sub
bound
cdq
cmc
mov
icebp
mov
pusha
or
xlat
mov
xchg
enter
add
add
iret
enter
movs
movs
call
adc
dec
sbb
xchg
cmp
loop
in
loope
int
fadd
jo
jecxz
fcom
icebp
(bad)
sub
or
xor
mov
idiv
cmps
jecxz
pop
mov
mov
inc
sbb
inc
movs
dec
in
fcomp
retf
xor
dec
jns
jbe
dec
add
add
and
adc
push
movs
call
mov
xor
and
push
add
pop
sbb
push
jb
jbe
xchg
into
sahf
cmc
bound
jb
pusha
and
sbb
pop
loope
jmp
rol
imul
(bad)
pop
jecxz
out
mov
mov
pop
add
inc
adc
sub
arpl
imul
mov
fstp
ja
xchg
retf
xor
cmovne
popf
ret
inc
add
test
mov
imul
mov
outs
or
dec
adc
and
dec
or
dec
sbb
adc
dec
aaa
jns
and
push
push
sar
mov
add
fisub
mov
aaa
pop
clc
xor
mov
xor
or
ins
cs
arpl
inc
sbb
pop
and
pop
cmovnp
cwde
sti
pop
xchg
mov
daa
ins
jmp
jbe
jg
das
jge
sub
ja
fiadd
dec
sub
ss
fnstenv
add
(bad)
add
sbb
sbb
xor
or
popf
fldcw
outs
or
jmp
shr
leave
mov
sbb
xchg
mov
out
stos
rol
daa
(bad)
jmp
and
adc
shl
int
adc
pop
pop
bound
and
mov
jmp
shl
pop
pop
push
and
dec
popf
cmp
jbe
pop
sbb
adc
push
int3
mov
sub
mov
fidivr
sub
mov
sub
adc
xchg
les
add
push
mov
mov
inc
movs
rol
aam
mov
mov
retf
mov
std
cmp
and
out
sub
in
leave
jb
xor
add
stos
in
test
div
std
mov
inc
xchg
xlat
mov
lock
test
mov
push
scas
fst
(bad)
(bad)
fadd
jecxz
shl
test
mov
stos
ret
xchg
add
xchg
fidivr
jae
pop
xor
xchg
shl
cld
xchg
(bad)
leave
js
mov
dec
sbb
out
mov
nop
rol
cs
cmp
pop
or
jle
enter
std
imul
xor
mov
mov
add
(bad)
shl
adc
pop
pop
pop
movs
jo
push
loope
test
(bad)
fbstp
mov
sub
idiv
sub
int3
add
enter
mov
inc
int3
mov
les
jp
outs
add
frstor
and
mov
int3
mov
loop
mov
aaa
lock
jmp
mov
das
cmc
or
dec
mov
ds
sbb
sbb
addr16
sbb
jp
push
fnstenv
js
jp
push
add
add
mov
add
pop
in
rcl
pop
jmp
mov
mov
mov
std
popf
(bad)
xchg
jo
xor
push
in
sub
inc
cmp
jecxz
mov
mov
ins
adc
dec
xchg
jno
jne
push
and
arpl
shl
xor
jns
dec
sub
push
icebp
mov
mov
fwait
int3
lea
clc
mov
mov
mov
mov
out
test
test
jge
jne
push
mov
mov
ret
push
push
add
sbb
push
inc
or
and
(bad)
fisub
push
jmp
fistp
mov
(bad)
or
push
pop
les
in
test
lahf
jmp
(bad)
xchg
fisub
pop
or
jmp
mov
add
add
lods
fcomp
push
psrad
push
push
inc
add
cmp
pop
dec
sbb
sti
lods
mov
mov
(bad)
popf
int
lods
rcr
rcl
fstp
xor
dec
add
push
in
in
fbstp
add
push
adc
retf
jns
rcl
inc
xor
dec
or
sub
and
mov
popa
xchg
pop
sub
bound
daa
dec
lock
repnz
pop
mov
mov
stos
mov
cdq
fst
or
sbb
loopne
mov
jge
xchg
(bad)
pusha
mov
loopne
xchg
int3
sub
and
or
and
pop
xor
nop
jmp
mov
mov
jne
pop
div
(bad)
xor
dec
adc
mov
call
inc
sbb
sbb
push
sbb
out
loopne
sti
bound
ins
sub
movs
fiadd
pop
inc
xor
cmp
in
lods
jmp
mov
xchg
xchg
scas
(bad)
test
xchg
xchg
jecxz
iret
add
mov
test
ds
sbb
jae
ficomp
test
test
sbb
pop
fnstenv
sbb
pusha
jecxz
fsub
and
xchg
retf
(bad)
mov
push
adc
inc
xor
cmp
dec
adc
cs
aas
rol
leave
mov
jbe
cmp
pop
ret
mov
inc
cmp
std
and
fimul
mov
push
inc
sbb
push
mov
pop
sub
scas
inc
(bad)
in
mov
mov
push
sub
fisttp
lods
or
and
or
sbb
mov
je
sbb
jo
pop
xchg
aad
jmp
shl
mov
sub
add
sbb
sti
mov
lods
cdq
xor
push
sbb
add
jo
inc
cmp
js
(bad)
jae
push
pop
out
or
xchg
movs
les
jnp
ins
push
xchg
(bad)
popa
and
inc
sbb
or
xor
or
pop
and
inc
addr16
adc
test
call
test
sub
add
adc
fnstcw
adc
inc
and
dec
cmovnp
dec
mov
push
jnp
pop
jnp
pop
adc
dec
add
es
popf
leave
mov
xchg
icebp
mov
mov
mov
sbb
or
ret
and
jb
sbb
pop
xor
cmp
jb
and
pushw
pop
in
(bad)
ins
add
dec
push
dec
or
push
or
mov
pop
push
jae
dec
mov
add
sbb
mov
mov
mov
push
add
dec
out
lahf
jns
push
and
adc
jbe
push
jno
and
repnz
dec
or
rol
(bad)
in
loope
repz
mov
pop
inc
adc
inc
pop
bound
xor
jl
jbe
push
xor
(bad)
mov
fs
push
sbb
and
cmp
imul
daa
inc
xor
pushf
mov
and
xchg
ret
xchg
cmc
mov
pop
sbb
sbb
fcom
pop
out
mov
add
ins
stos
icebp
xchg
iret
xchg
inc
xor
(bad)
aam
adc
ins
mov
sub
jg
push
or
js
test
lods
les
add
cmovo
xor
push
add
or
out
mov
(bad)
leave
xchg
fldcw
mov
sub
mov
sub
icebp
test
fs
cmp
cmp
pop
mov
cli
push
or
pop
in
(bad)
das
pop
jecxz
pop
bound
enter
ss
push
adc
xchg
div
aad
inc
pop
sbb
sub
pop
into
popf
(bad)
mov
dec
sbb
loopne
into
mov
movs
hlt
mov
xor
jb
pop
xchg
lock
iret
mov
mov
fs
push
add
hlt
xchg
and
push
xor
add
sub
push
dec
adc
ret
mov
mov
push
outs
xchg
sahf
aad
push
adc
jg
imul
dec
loope
xor
jmp
mov
sub
and
out
mov
int3
fwait
sub
mov
adc
or
sub
mov
pop
cmp
adc
jbe
popf
cmps
repnz
fstp
sar
mov
scas
retf
call
add
lods
sbb
pop
addr16
out
mov
mov
gs
enter
mov
xchg
sub
and
mov
lods
leave
out
mov
xchg
int
dec
push
inc
cmps
sar
xchg
xchg
into
mov
mov
mov
add
inc
adc
adc
jge
stos
out
adc
icebp
xchg
out
lds
loope
retf
(bad)
rcl
sub
or
and
cmp
jno
dec
adc
xor
cmp
push
add
lahf
enter
in
push
pop
jg
add
ins
xor
jecxz
mov
fs
xchg
scas
les
mov
fld
or
cwde
fsubr
lods
xlat
(bad)
cmps
clc
add
mov
stos
lock
cmp
dec
mov
mov
inc
push
in
pop
push
xorps
sub
xchg
aad
rcl
icebp
scas
call
mov
mov
and
je
ds
sbb
dec
out
test
mov
lods
shl
add
pop
xor
ror
clc
lods
std
pusha
push
dec
add
sub
xchg
(bad)
dec
ds
fbstp
lahf
jp
outs
sub
jl
retf
std
xchg
jb
push
and
mov
jmp
jmp
das
jns
repnz
cvtdq2ps
inc
sbb
(bad)
xchg
(bad)
mov
nop
jmp
and
outs
cli
stos
push
test
inc
cmp
sahf
int
dec
or
int
adc
adc
(bad)
pop
movs
iret
lods
test
outs
jmp
and
ins
loope
dec
or
pop
and
inc
gs
sbb
inc
sub
push
sub
mov
xchg
(bad)
lods
les
adc
popf
aam
iret
xchg
jae
int
fistp
lock
push
cmp
jp
rol
ja
push
inc
sub
xchg
loopne
jge
sbb
fdivr
imul
sub
and
mov
pushf
fist
cmps
std
mov
cmp
push
dec
mov
mov
mov
call
mov
mov
ins
jecxz
outs
add
jl
into
bound
jnp
xor
stos
les
psrad
leave
sahf
scas
fdivr
mov
push
or
or
mov
jae
pusha
test
pop
pop
add
imul
in
retf
je
imul
aaa
ins
add
outs
(bad)
int
aad
retf
fistp
xchg
ret
mov
std
mov
aas
pop
ds
sbb
mov
or
add
popa
or
jg
jp
mov
pop
xchg
in
fcomp
adc
adc
adc
dec
mov
push
sub
dec
push
ins
sbb
inc
push
jbe
pop
test
sub
pusha
add
push
adc
xor
jl
pop
adc
pop
xor
dec
mov
or
ds
loop
scas
jmp
cmp
xchg
adc
push
add
pop
ins
cmp
xor
cmps
inc
or
pop
addr16
sbb
js
sub
xchg
fcom
aam
div
xchg
ins
sub
jmp
fld
dec
adc
aaa
push
ficomp
daa
arpl
push
fdiv
or
mov
enter
mov
clc
pushf
mov
cmc
lods
jae
pusha
aaa
push
mov
dec
push
sbb
adc
jbe
(bad)
mov
stos
test
fadd
inc
sbb
sub
add
jno
push
add
popa
adc
or
ins
adc
cmps
in
stc
sahf
dec
mov
pop
imul
pop
mov
ins
jecxz
mov
mov
fisttp
and
fist
mov
stos
movs
int3
enter
cmps
hlt
mov
ret
lods
std
mov
push
jne
das
jne
dec
add
ret
sbb
sbb
push
push
push
je
icebp
popa
adc
jns
and
and
xor
das
jo
push
adc
popa
cmp
mov
lods
jnp
data16
jge
dec
sbb
and
xchg
mov
lods
cli
jne
dec
push
cmp
rcr
ds
adc
sbb
and
es
in
call
pop
push
outs
sbb
add
lods
scas
int
jmp
jle
outs
sbb
inc
push
push
ds
sbb
pop
leave
mov
mov
sti
mov
jmp
nop
aam
mov
xchg
jge
arpl
mov
lahf
std
xchg
cli
xchg
iret
jne
dec
sbb
arpl
je
jl
shl
or
push
test
jns
cmp
jle
inc
add
pusha
mov
ja
arpl
dec
add
jns
jl
xchg
(bad)
cs
fstp
out
xor
mov
cwde
mov
sbb
cmp
cmp
ins
mov
cmp
dec
xchg
js
jne
jl
and
bound
(bad)
std
scas
jmp
outs
cmp
dec
aas
ins
fimul
(bad)
xchg
jmp
loop
mov
cmc
sub
xchg
ror
inc
xor
lahf
enter
cli
leave
adc
test
mov
add
es
xor
push
je
cmc
sbb
aas
and
int3
jns
pop
adc
in
(bad)
pushf
mov
pop
inc
imul
pop
sbb
mov
mov
fwait
push
cmovnp
cmps
jle
clc
scas
repnz
adc
cmp
dec
std
rol
lds
and
cmp
out
mul
push
popf
fistp
lock
(bad)
cmp
push
or
pop
inc
sbb
fldcw
mov
test
pop
not
pushf
jmp
mov
cdq
repnz
pop
outs
xor
xchg
into
mov
enter
std
dec
adc
cmps
out
rcl
(bad)
dec
sub
push
cmovns
imul
adc
cmp
out
mul
aam
in
sar
add
or
inc
cmp
lods
leave
pushf
jmp
sar
mov
mov
mov
pop
inc
dec
stos
dec
imul
xor
pop
jl
add
sub
dec
adc
add
pop
cmp
or
out
push
lahf
aam
(bad)
data16
mov
stos
outs
sub
fiadd
pop
push
jnp
mov
xor
dec
or
dec
sbb
adc
dec
xor
push
pop
or
jo
jns
jae
shr
int3
popf
retf
jne
xor
jmp
in
sti
mov
les
push
pusha
jns
pop
loope
stos
jecxz
mov
lods
dec
aad
fidiv
sub
adc
add
sbb
mov
stc
nop
call
xchg
ror
aaa
jb
out
cli
mov
add
pop
sbb
sub
not
and
sub
jns
pop
out
cld
cs
leave
rol
mov
mov
js
xchg
ret
fst
xlat
arpl
xchg
lods
repz
jbe
dec
sbb
cmp
je
fs
dec
cmc
mov
fwait
out
icebp
lahf
leave
(bad)
std
pushf
call
cwde
mov
mov
mov
call
and
js
pop
or
or
ret
test
ins
cmp
icebp
mov
cmc
lahf
in
mov
and
xchg
sbb
push
int3
cdq
leave
mov
cmp
das
pop
add
imul
mov
mov
xchg
retf
mov
in
ss
pop
cmp
outs
jmp
outs
pop
xor
leave
jno
jnp
out
mov
mov
fidivr
sahf
fisttp
call
jmp
dec
jmp
jne
pop
adc
loopne
shl
xchg
jmp
int
jne
mov
xchg
leave
inc
sbb
xchg
mul
dec
sbb
mov
sbb
and
inc
cmp
out
xchg
ret
mov
pop
jge
jb
jno
loope
in
movs
movs
js
sbb
ins
mov
dec
ds
fcomp
popa
aaa
ja
ret
fdiv
cmp
inc
stc
jp
mov
jmp
mov
aad
loope
xor
(bad)
aaa
xor
jge
xor
xchg
mov
popa
cmp
stos
icebp
xchg
mov
jecxz
bound
sbb
inc
in
inc
adc
adc
xlat
cwde
std
mov
adc
mov
add
imul
sahf
fadd
daa
dec
add
or
outs
aas
push
or
dec
and
jl
test
mov
mov
inc
push
addr16
xchg
out
scas
cmc
and
fcom
cli
mov
out
mov
into
cdq
sar
loope
sar
(bad)
cmc
and
pop
add
jne
ja
pop
or
test
pusha
push
pop
mov
jne
push
dec
cvtps2pi
in
imul
cmps
call
cmp
jb
clc
pop
mov
xchg
mov
xchg
clc
nop
repz
fild
test
pop
cmp
outs
sbb
outs
and
test
in
test
fstp
dec
cdq
lock
jmp
in
test
mov
arpl
jle
jbe
mov
mov
fisttp
mov
xchg
cld
lahf
in
mov
mov
loope
movs
rol
cwde
test
dec
adc
dec
mov
mov
nop
in
mov
mov
ins
cmp
sbb
pop
sbb
and
jl
bound
cli
fwait
mov
add
dec
out
ja
hlt
test
inc
pop
addr16
push
js
pop
cli
mov
mov
mov
and
test
inc
stos
fcom
jp
jl
addr16
inc
pop
adc
fs
push
sbb
iret
ins
aaa
jae
push
mov
addr16
(bad)
leave
push
xchg
inc
and
ins
cmp
fldenv
xchg
retf
fwait
cli
add
jns
retf
leave
cdq
retf
and
cmp
cld
das
ret
xor
cmp
dec
fldcw
jl
and
in
test
out
xchg
pop
mov
int3
or
(bad)
retf
(bad)
fnstsw
mul
sar
xor
push
xor
sahf
outs
and
jbe
std
mov
sub
xor
push
loop
test
sub
pop
add
mov
ss
and
xor
jae
jl
add
sub
ss
jnp
fs
cdq
and
push
dec
inc
je
out
jo
push
pop
pop
jl
(bad)
jmp
dec
jmp
xlat
rol
mov
inc
ret
mov
inc
addr16
xor
adc
fidiv
xor
sbb
mov
pop
(bad)
out
(bad)
loope
shl
mov
int
mov
les
cli
arpl
movs
movs
movs
jmp
xchg
and
adc
add
add
nop
test
call
sub
int3
popf
popf
mov
test
int3
cli
mov
mov
fst
adc
xchg
out
mov
adc
mov
cdq
dec
lods
pusha
inc
xchg
out
add
retf
rcl
or
aad
push
add
inc
mov
jp
adc
movs
xchg
aas
push
add
cmp
jnp
cmps
xor
sbb
xor
adc
not
lea
dec
and
ror
cld
(bad)
pop
push
push
inc
inc
div
jns
inc
stos
cmp
sbb
stos
push
in
or
mov
mov
data16
fisubr
arpl
clc
lods
mov
jl
and
rcr
sbb
in
jb
daa
outs
scas
inc
enter
addr16
sub
mov
add
popf
push
mov
test
sub
xor
in
pop
call
neg
sub
inc
inc
in
(bad)
mov
pop
out
sub
rol
jp
jmp
mov
cmp
in
mov
jl
out
dec
cmp
cmp
(bad)
inc
es
xchg
or
fcomp
jmp
jne
cmps
inc
jns
sahf
mov
(bad)
loop
shl
aaa
push
pop
push
(bad)
fwait
sub
xor
daa
xor
adc
imul
cmp
iret
add
rcr
out
loope
cs
dec
out
dec
rol
mov
dec
pop
mov
pop
mov
dec
add
xchg
dec
mov
out
out
dec
lea
push
sbb
or
adc
or
and
xchg
mov
mov
xchg
aad
out
faddp
jp
stos
sbb
ins
repnz
jmp
jecxz
cmp
jge
out
push
adc
push
cmp
pop
push
int3
mov
jns
sub
xor
mov
in
mov
ret
aam
add
push
or
sub
in
mov
(bad)
mov
out
xor
push
ret
movs
in
fcmovne
mov
pop
je
sub
int3
aam
jp
mov
cwde
push
mov
mov
pop
or
movs
in
in
(bad)
push
xchg
dec
adc
loopne
inc
cs
popf
int
push
fwait
loop
mov
mov
pop
push
mov
movs
call
xchg
jae
cld
adc
outs
adc
retf
rol
dec
xchg
enter
ins
outs
push
repnz
movs
mov
in
in
jl
and
loopne
mov
test
div
loope
sub
out
sahf
xor
mov
cmc
inc
mov
add
mov
sahf
in
pop
pop
pop
sbb
mov
cmp
xchg
or
fwait
bound
or
adc
mov
cmp
inc
pusha
xchg
imul
(bad)
test
sbb
ins
ins
outs
cs
test
fdivr
inc
je
int3
mov
xchg
mov
ss
lock
popa
pusha
add
pop
js
out
sbb
mov
xor
adc
fsubr
fwait
nop
dec
mov
add
mov
stc
icebp
loope
adc
scas
popf
push
add
out
data16
fisttp
lock
pop
push
push
dec
push
sar
imul
gs
cmp
sub
sbb
shr
jge
mul
rol
rol
ds
sbb
pop
mov
mov
jbe
int3
jmp
xor
stos
xor
jecxz
mov
or
aas
fsub
or
jmp
pop
loopne
xchg
sub
idiv
outs
inc
xchg
and
mov
test
aas
(bad)
shl
mov
jp
jmp
xchg
pop
sbb
iret
retf
dec
cmp
pop
popf
sbb
xchg
jmp
add
mov
repz
ret
jmp
loop
cmp
mov
stc
pop
out
icebp
popa
push
mov
cmp
cmp
xchg
popa
jl
mov
xchg
pop
push
nop
cmp
rcl
int
add
cmp
fcmovne
scas
ds
push
inc
xchg
fcmovbe
push
xor
lods
fcomp
fs
imul
pop
mov
and
sub
push
movs
in
or
mov
mov
out
jo
cmps
pop
add
jge
gs
jb
sub
xchg
aaa
inc
cld
dec
dec
pop
xchg
dec
or
loopne
sbb
pop
jecxz
inc
outs
(bad)
call
pop
adc
in
xchg
ficom
cwde
je
scas
sahf
stos
mul
mov
sbb
out
push
sub
jne
out
fisub
(bad)
sub
ins
or
sbb
icebp
inc
js
stos
dec
pop
jae
mov
retf
push
jmp
sbb
sub
mov
lods
repz
xchg
std
or
cli
mov
and
sbb
sub
sbb
cmp
push
(bad)
inc
imul
ins
outs
inc
iret
out
bndstx
mov
adc
sahf
inc
mov
xor
(bad)
stc
das
fcom
stos
sub
aam
sbb
call
imul
push
fcmovnbe
xor
adc
pop
sbb
mov
and
int3
ins
or
mov
mov
shl
popw
cmp
sub
int3
sahf
in
sar
sub
lahf
jbe
scas
je
dec
inc
cmp
fstp
cld
test
aad
adc
mov
xor
jno
retf
push
inc
(bad)
mov
xchg
scas
mov
pop
xchg
inc
rcl
and
sar
sub
mov
stos
sbb
fisubr
xchg
cmp
xchg
call
mov
push
loopne
adc
call
mov
mov
add
xor
xchg
out
bound
mov
cmp
add
imul
inc
push
mov
xchg
fucom
and
and
push
stc
push
pop
adc
mov
or
ror
aam
inc
mov
mov
fld
sub
jmp
lods
adc
mov
fisubr
jp
cdq
push
mov
push
les
ftst
add
jmp
in
mov
mov
stos
sahf
out
rcr
or
sub
xchg
pop
aaa
mov
je
cmc
je
pop
mov
out
add
mov
xchg
mov
mov
in
add
lea
jb
inc
lods
clc
popf
rcl
mov
inc
sub
psubsw
and
push
adc
xchg
push
push
pop
shl
adc
sub
jp
xor
ins
out
ret
or
out
adc
sbb
hlt
mov
(bad)
scas
xchg
ins
mov
jbe
sahf
ret
cmc
mov
xor
(bad)
sub
cdq
adc
xor
add
test
pushf
ds
sbb
jo
jnp
in
jns
mov
xchg
lods
mov
push
enter
outs
das
xchg
(bad)
call
loop
mov
test
stos
and
fisub
sub
fiadd
pop
and
test
retf
mov
mov
inc
(bad)
rcr
cwde
xchg
aad
stos
jno
lea
scas
jno
aad
mov
rol
outs
push
movs
xor
mov
test
adc
xor
jns
xchg
pop
stos
loopne
call
mov
test
xlat
mov
outs
push
stc
out
sbb
sbb
pop
jl
inc
mov
call
mov
pop
inc
ja
mov
cmp
aas
jecxz
xchg
loop
cmp
mov
inc
pop
ret
cmp
fmul
jge
std
jae
xchg
cmp
xor
jnp
js
stc
lock
mov
sub
mov
sub
sbb
cmp
mov
xor
lods
ins
or
adc
xchg
ds
xor
es
shr
push
movs
jl
aam
inc
push
fstp
addr16
in
scas
retf
xor
fist
in
dec
int
dec
into
mov
xchg
push
mov
mov
mov
cmp
sub
jo
mov
daa
arpl
mov
fidivr
mov
test
pop
cmps
movs
outs
call
mov
inc
retf
into
or
sbb
loop
mov
push
dec
inc
into
mov
add
test
adc
mov
mov
bts
in
mov
call
in
std
sahf
(bad)
cmps
loop
daa
ins
add
dec
jecxz
scas
mov
call
and
and
mov
push
adc
mov
sub
mov
loop
or
sbb
push
sub
mov
std
lods
and
scas
loope
outs
std
out
xor
mov
sbb
sub
xchg
pop
in
inc
(bad)
cmps
adc
jle
ret
cld
push
cmp
jno
cmp
sub
pusha
aaa
push
inc
cld
sub
pop
jmp
movs
and
dec
stos
(bad)
ret
jne
jl
mov
pusha
mov
or
fisub
jle
fs
dec
dec
stos
imul
imul
js
out
fnsave
popf
mov
ins
jmp
cmp
or
pop
adc
repnz
or
sub
lods
mov
and
adc
stos
iret
push
push
xchg
sbb
sub
push
push
imul
mov
in
adc
mov
imul
stc
neg
pushf
xchg
fcom
call
adc
les
mov
inc
mov
aad
xchg
aas
cs
jmp
mov
or
call
imul
out
movs
aam
in
sbb
mov
pop
pop
dec
xchg
fild
dec
jmp
outs
in
(bad)
movq
test
cmp
pop
mov
sbb
pusha
sub
mov
cmp
sbb
vmread
pop
loopne
inc
inc
add
ds
sub
or
dec
out
pop
fisubr
fwait
cmp
jbe
lea
cli
push
jno
sar
pop
dec
dec
aaa
mov
xchg
push
scas
mov
idiv
jnp
pop
ss
mov
in
xchg
sbb
xchg
xchg
xor
xor
test
ret
inc
push
scas
add
hlt
xchg
sti
pop
les
inc
mov
cmp
rcr
ror
adc
mov
and
inc
scas
iret
imul
punpckhwd
rcl
or
fsubr
or
mov
in
jecxz
adc
jge
mov
(bad)
(bad)
sub
je
mov
push
call
stos
mov
and
rol
mov
xor
jae
and
(bad)
movs
jg
add
jns
push
or
sbb
inc
fsub
xor
fwait
push
(bad)
fst
sahf
cmps
outs
das
mov
push
fstp
push
cli
add
mov
adc
or
imul
sbb
push
pop
xor
jo
repnz
mov
addr16
add
xor
ficomp
push
mov
sub
test
or
xchg
inc
inc
xlat
mov
aas
pusha
push
pop
mov
mov
pusha
cmps
test
stc
jbe
imul
cli
dec
sub
mov
jne
sbb
mov
out
pop
rcr
scas
clc
or
inc
mov
jne
add
push
jb
dec
not
in
ja
cs
jmp
pop
mov
std
inc
std
pop
loopne
je
clc
jnp
jae
xor
outs
cli
mov
mov
add
sub
repz
fs
cdq
lea
mov
jne
mov
mov
enter
test
int
jle
in
arpl
push
mov
dec
into
push
stos
inc
sub
(bad)
loope
iret
loopne
adc
test
xchg
cs
imul
arpl
jp
add
mov
and
or
setns
repz
pop
cmp
out
or
jge
dec
xlat
and
loopne
push
mov
mov
push
and
clc
xchg
xchg
sbb
mov
aad
adc
stc
ror
fdivrp
cs
out
repnz
mov
xchg
pop
push
out
and
test
dec
out
and
inc
ror
dec
(bad)
sub
push
sar
inc
lahf
adc
xchg
daa
lock
mov
sub
mov
mov
lods
gs
add
test
xchg
jns
mov
js
fcomp
sbb
mov
int
sbb
xchg
retf
push
cmp
mov
push
sbb
aad
cwde
scas
enter
pushf
push
test
xchg
es
inc
mov
mov
(bad)
mov
xor
xor
push
nop
dec
pop
and
cmp
aas
mov
jl
in
call
xlat
sub
jp
fst
sbb
or
mov
mov
xlat
iret
ja
test
in
cmp
inc
xchg
xchg
data16
fcmovnbe
cld
add
add
pop
and
das
sbb
pop
mov
xchg
add
mov
call
mov
(bad)
aas
stos
cdq
xor
cmc
loop
(bad)
out
cdq
js
sbb
fcomp
test
xor
mov
mov
inc
retf
push
sbb
retf
add
jns
jmp
out
test
jbe
mov
push
jecxz
cmp
adc
mov
xchg
movs
retf
push
(bad)
or
mov
push
loopne
(bad)
jg
inc
clc
xor
cmp
sti
int3
sbb
out
and
xchg
aam
xor
fwait
inc
sbb
icebp
inc
sbb
cmp
call
dec
and
mov
stos
popf
push
les
jg
(bad)
and
cmc
inc
and
jmp
inc
pusha
std
jmp
test
sub
lahf
mov
jno
mov
cdq
out
nop
cmc
fdivp
fldcw
jp
jne
cmp
pop
jmp
push
in
fidiv
popa
frstor
pop
stos
mov
jl
add
fisub
dec
sbb
cmp
sub
mov
(bad)
pop
inc
in
pushf
mov
xor
loope
stos
sub
adc
sti
mov
lds
pop
sub
gs
clc
iret
retf
sbb
repz
enter
mov
jp
aaa
retf
nop
cdq
push
ret
adc
sub
mov
imul
(bad)
jbe
ret
(bad)
imul
xor
out
and
stos
sub
mov
out
jo
add
sti
fwait
xchg
mov
cmc
cmps
jnp
lods
xchg
test
stos
iret
mov
or
mov
inc
bound
add
dec
fdiv
add
lods
repnz
sbb
daa
jbe
inc
shl
pop
div
jno
out
adc
fstp
dec
add
xchg
mov
test
outs
rol
cmp
out
out
xchg
adc
mov
in
jae
or
dec
cmp
jl
adc
jnp
xlat
repnz
es
xlat
sbb
or
sahf
inc
test
push
iret
inc
sub
mov
add
sub
aad
or
inc
cmp
mov
cmp
xchg
adc
add
repz
xchg
pop
add
in
inc
jns
sbb
xlat
out
js
push
jge
rol
sub
jns
movs
shl
out
adc
and
push
call
adc
fs
xchg
jno
dec
test
lds
out
sbb
xlat
aaa
imul
out
or
adc
xlat
movs
ins
ret
js
ret
xchg
add
dec
loope
add
or
xchg
push
xor
fldenv
imul
out
dec
stos
push
test
stos
push
push
out
and
adc
lea
adc
stos
data16
scas
das
mov
dec
sub
out
mov
sub
mov
mov
sbb
cmp
sar
xchg
les
inc
pop
pop
(bad)
jl
xchg
imul
shl
movs
not
mov
in
aad
or
sub
push
lahf
enter
out
stc
cmps
fisub
loopne
jge
sub
jle
sbb
xor
mov
jge
add
rcl
div
pop
nop
xor
test
mov
pop
es
movs
imul
leave
inc
dec
xchg
dec
push
xlat
mov
and
jge
cwde
pop
or
inc
jge
pusha
pop
sub
js
xchg
fstp
std
int3
out
or
jbe
push
lods
and
aam
iret
adc
sti
jge
jnp
stos
leave
jge
xchg
cmc
pop
mov
test
ss
dec
in
jl
dec
outs
push
test
inc
retf
and
call
jo
out
ds
or
fdivr
popf
add
xor
cmp
and
(bad)
fnstenv
or
dec
jns
mov
ja
test
xor
mov
retf
fcomp
mov
ret
aam
pop
es
pop
movs
fcmove
mov
int
push
xchg
jge
jp
push
mov
xchg
pushf
and
repnz
loop
pop
movs
jp
push
retf
sub
std
sub
ins
xor
and
(bad)
pop
scas
scas
mov
add
xchg
and
jnp
outs
ins
sub
add
cmps
ficomp
mov
sbb
xlat
dec
push
pop
add
jae
cmp
cld
shl
push
push
dec
sub
sub
into
jge
dec
sar
imul
repz
shl
mov
rcr
or
sbb
ds
rcl
inc
mov
in
mov
fwait
mul
add
mov
(bad)
in
mov
jae
jnp
push
jns
hlt
sub
test
arpl
icebp
xchg
mov
dec
call
or
mov
sub
jle
push
inc
adc
adc
jle
das
push
push
fdivrp
loop
and
or
loopne
hlt
pop
inc
and
mov
mov
loopne
out
(bad)
repz
xchg
ins
push
enter
and
addr16
cmp
into
scas
dec
outs
sbb
icebp
mov
pop
lea
in
jg
push
xchg
sar
test
mov
jo
icebp
mov
rcr
ja
loopne
cmps
mov
call
movs
popa
mov
mov
(bad)
pop
sbb
jp
push
ja
add
mov
jnp
mov
mov
mov
icebp
add
rcr
test
cdq
ret
scas
call
call
mov
cli
or
(bad)
xor
pusha
lock
sbb
test
mov
mov
sbb
mov
stos
into
mov
pop
sub
imul
cmp
loopne
cmp
fidiv
or
sub
mov
retf
push
xchg
adc
dec
sbb
sahf
adc
add
push
sub
jo
and
push
std
lods
push
dec
loopne
fild
nop
stc
add
xchg
push
add
jmp
not
jge
sub
mov
mov
adc
pop
sbb
sub
out
fcom
inc
push
dec
mov
and
xor
ret
xchg
(bad)
dec
scas
std
mov
stos
shr
call
inc
xchg
rol
xchg
mov
mov
js
and
cmc
mov
mov
stc
popf
scas
mov
mov
popf
rol
xor
and
xchg
aad
adc
push
sbb
push
dec
add
mov
movs
loopne
sub
inc
cmp
push
lahf
fbstp
pop
pop
je
data16
les
sahf
jmp
call
xor
cmp
ss
xor
fs
fs
and
adc
mov
(bad)
retf
sub
sub
bound
(bad)
jb
popa
pop
das
js
push
mov
scas
hlt
pushf
sar
xor
mov
test
jle
push
add
cmp
inc
scas
adc
jno
inc
mov
lods
sar
dec
sbb
jle
in
jb
pop
ret
scas
fimul
test
lds
push
pop
jae
daa
and
aam
(bad)
xchg
xchg
ret
ins
ds
jmp
sbb
sub
inc
push
push
xor
fwait
repnz
into
sub
popa
sub
retf
mov
inc
ja
pop
inc
jmp
fild
fst
pusha
sbb
inc
mov
nop
xor
loopne
mul
jns
lods
dec
or
add
shl
cmp
hlt
movs
loop
mov
cmp
iret
mov
xchg
jg
jne
pop
sub
xlat
xor
xchg
test
lods
cld
mov
adc
sub
pushf
out
fidiv
xchg
arpl
xor
sub
loope
retf
mov
xlat
xchg
aam
cmc
scas
sar
cwde
retf
jb
push
daa
bound
push
add
jbe
hlt
test
pop
sub
inc
and
jb
pop
shl
jnp
ins
adc
inc
xor
dec
push
aam
repnz
xchg
or
push
jge
ret
push
jnp
ja
xor
or
or
cmps
out
lock
sub
sub
aam
ficomp
pop
cwde
(bad)
push
sub
pop
xor
loope
pop
loopne
fiadd
pop
or
or
mov
mov
inc
out
xor
jo
aas
(bad)
addr16
out
in
popa
push
inc
add
mov
mov
jo
sub
add
mov
or
dec
sbb
mov
adc
xor
ss
mov
or
jle
jmp
mov
mov
xchg
rcr
inc
push
dec
xor
pop
dec
sub
mov
mov
jp
ja
push
cmp
arpl
jns
push
adc
mov
xchg
add
push
sbb
push
inc
cmp
icebp
jnp
push
pushw
jmp
mov
push
cmp
jge
arpl
cmps
ss
shl
sbb
dec
xor
dec
ds
pop
mov
inc
push
not
cli
pusha
or
int
push
mov
jns
data16
mov
cmp
pop
add
out
push
lods
dec
movs
aam
fisttp
pop
add
cmp
(bad)
pop
jecxz
call
pop
sub
push
xor
ins
adc
cmps
xlat
mov
cmp
pop
repnz
jmp
lods
retf
pop
call
xchg
mov
mov
and
ins
sbb
mov
mov
inc
adc
popa
jmp
lea
in
ror
adc
pop
sub
sub
jle
jne
push
das
push
push
inc
loope
imul
sti
mov
test
mov
scas
shl
jbe
dec
adc
xchg
fidivr
cmp
rcr
pop
adc
adc
dec
(bad)
and
push
xor
std
mov
dec
adc
stos
mul
pop
inc
add
cmc
mov
pop
or
adc
ins
sub
in
test
mov
outs
xor
sahf
mov
shl
fbld
pop
xor
mov
aam
cld
mov
push
mov
shl
jle
push
add
cli
xchg
lods
retf
movs
mov
mov
repz
outs
out
lods
fdiv
add
pop
mov
ror
and
pop
mov
mov
scas
mov
out
add
mov
cmp
sub
cmovae
add
jp
jl
dec
mov
in
sbb
cmp
fsub
inc
stc
mov
mov
arpl
or
imul
in
xchg
into
popf
(bad)
add
jle
xchg
cmps
shr
cmp
jo
jecxz
call
in
cwde
mov
cmps
ror
outs
ss
and
das
es
out
ins
sub
and
imul
je
dec
push
pop
jp
and
and
je
sbb
imul
adc
sub
cmp
(bad)
jmp
cmp
out
stos
std
mov
fwait
repnz
push
pop
sbb
pop
sub
fld
pop
or
jg
mov
ins
xor
in
fisub
jg
sub
in
lock
pop
jl
cmp
and
dec
xor
pop
pop
sub
mov
dec
sti
mov
pop
add
jbe
and
out
stos
out
sbb
cvtdq2ps
ins
add
inc
(bad)
cmc
mov
cmps
jmp
or
add
pop
sbb
push
or
mov
mov
movs
movs
fcomp
add
dec
cmp
ss
sbb
retf
inc
cmp
pop
das
sub
and
lds
and
pop
sub
inc
fmul
jbe
jl
sub
xor
or
jno
(bad)
jmp
jmp
cmc
xchg
cmps
loop
cli
pusha
xor
push
inc
or
and
clc
imul
bound
aas
sbb
repnz
adc
out
and
push
pop
jmp
pop
jecxz
cmp
push
sub
arpl
test
mov
bound
push
and
aaa
inc
cmp
into
lods
into
xchg
popa
or
add
cmps
(bad)
in
stc
mov
lods
(bad)
mov
ror
popf
iret
dec
pop
pop
pop
push
lods
shr
rcr
dec
and
inc
push
in
add
iret
lahf
jbe
popa
xor
aam
out
les
pop
or
pop
or
clc
mov
pusha
sbb
inc
das
je
ins
cmp
arpl
(bad)
scas
(bad)
(bad)
leave
(bad)
retf
xchg
cld
arpl
fisub
int
adc
retf
xchg
retf
mov
and
push
push
or
je
scas
stc
mov
push
adc
data16
mov
mov
sub
sub
mov
sbb
or
and
xchg
cwde
rol
inc
xor
push
push
sub
bound
jns
enter
clc
mov
jbe
data16
jno
adc
inc
xor
and
and
mov
pop
add
imul
mov
test
fimul
xchg
mov
xor
arpl
clc
mov
mov
stos
std
mov
fldenv
xor
sbb
nop
rol
loope
call
ficomp
xor
scas
out
mov
mov
int
xor
sub
jl
jne
sbb
jp
push
sbb
dec
jmp
push
or
outs
sub
mov
shl
pop
push
dec
xor
aam
fist
(bad)
popf
rcl
mov
pushf
dec
cmp
add
cmp
sub
hlt
stos
shl
lahf
mov
popa
div
inc
adc
mov
jp
dec
sbb
test
jmp
fcom
xchg
fcomp
pop
adc
das
dec
or
mov
cmp
xchg
movs
repz
(bad)
ja
inc
sub
ja
dec
cli
mov
aad
iret
or
push
enter
sar
repz
inc
cmp
(bad)
gs
jne
outs
movs
mov
test
bswap
mov
sahf
shl
(bad)
pop
out
popf
data16
jge
mov
dec
cli
test
mov
aas
push
cmp
push
repz
test
mov
cmps
loop
cmps
fild
cs
data16
xchg
ret
xor
push
aas
inc
add
je
sub
pop
mov
dec
into
popf
fstp
das
sub
or
jmp
or
add
ins
or
pop
mov
inc
add
xor
pop
xor
scas
fcomp
pop
loop
inc
xor
dec
in
in
jmp
dec
repnz
scas
jge
movs
loop
enter
stc
xchg
adc
nop
retf
cmp
pop
jo
dec
jmp
add
and
jbe
test
mov
xchg
lds
add
or
and
pop
cmp
shl
cmp
push
jmp
mov
mov
push
idiv
jb
jae
xchg
rcl
(bad)
aad
test
js
inc
push
dec
xchg
xlat
fwait
jmp
fsub
jno
(bad)
mov
nop
lds
dec
push
imul
ins
xor
pop
xor
xchg
dec
ss
cmp
jl
(bad)
jle
ja
sbb
jge
sbb
cmp
stos
imul
push
loope
jb
pop
sbb
mov
mov
pop
out
mov
jg
pop
sub
push
ins
add
dec
std
lods
jmp
lods
in
add
xlat
add
cld
mov
xchg
jecxz
mov
xchg
ficomp
mov
or
pop
adc
stc
lahf
iret
mov
xchg
mov
popa
and
jge
js
add
xchg
iret
pushf
fcom
xchg
lock
sbb
dec
call
outs
xor
ror
adc
dec
sar
in
(bad)
push
outs
and
add
popa
daa
retf
mov
ja
pushw
das
ds
sbb
mov
push
ss
sbb
inc
xor
cdq
jl
rol
xlat
xchg
call
inc
bound
push
jecxz
(bad)
std
mov
push
add
dec
lock
pop
adc
mov
sar
push
or
in
mov
daa
dec
cmp
jmp
lods
movs
lds
jecxz
pop
in
fisttp
jo
jns
pop
pop
and
add
push
sbb
dec
xchg
mov
ror
cmp
ds
dec
add
leave
cmp
jae
push
lds
dec
pop
jg
jns
test
leave
mov
xor
xchg
(bad)
cwde
in
lods
mov
sbb
jmp
dec
xor
push
and
sbb
push
loopne
movaps
jecxz
fdivr
dec
add
pop
xor
outs
cmc
movs
rol
mov
les
mov
jmp
shl
test
xchg
aad
ror
xchg
mov
jns
and
ins
cs
cmp
test
or
test
cdq
fwait
in
jecxz
fcomp
add
pop
or
ds
lds
xchg
mov
stos
mov
popf
fstp
loope
repz
inc
sbb
jle
les
jnp
ins
add
cmp
pop
push
cdq
jecxz
icebp
mov
sti
mov
fld
sbb
adc
push
xor
cmp
jle
pop
push
and
imul
xchg
mov
sbb
jg
into
xchg
movs
fbld
jns
and
rol
stc
mov
sub
and
lahf
into
mov
push
hlt
xchg
int
cs
mov
pushf
stc
cmp
inc
push
inc
add
ja
mov
sbb
sub
jecxz
sti
dec
sbb
pop
sbb
lahf
iret
mov
pop
push
stos
fild
or
or
cmp
clc
xchg
in
add
add
pop
jo
inc
mov
jl
pop
stc
stos
repz
arpl
add
cmp
jle
cli
aad
out
fbstp
inc
into
cmp
or
push
stos
cmp
out
mov
nop
mov
in
mov
xchg
sar
xor
pop
(bad)
mov
xchg
shr
outs
fild
imul
gs
dec
cmp
cmp
xor
(bad)
mov
sub
out
repnz
mov
sbb
outs
add
push
pop
push
pop
push
pop
mov
les
push
pop
dec
push
cmp
mov
jno
hlt
movs
(bad)
mov
mov
cmp
mov
out
xchg
jae
int3
(bad)
out
ja
push
jmp
ror
sti
aas
mov
movs
cld
pusha
inc
adc
and
push
adc
popw
sub
imul
cld
mov
(bad)
xchg
fild
xor
sbb
es
sbb
out
mov
sbb
fnstcw
jle
ins
or
pop
mov
and
ss
jg
xor
add
inc
xor
and
imul
mov
mov
push
aad
sbb
push
cmp
jns
add
cmp
mov
lods
jns
arpl
dec
jecxz
rcl
ja
and
xor
jg
push
cmc
xchg
aad
mov
lods
out
test
and
add
ret
xchg
ins
inc
adc
pop
adc
jmp
push
pop
jecxz
cli
mov
push
dec
push
and
push
std
sub
pop
les
push
pop
inc
sbb
mov
call
xor
movs
out
ds
pop
cmp
jge
cmc
mov
mov
or
dec
or
or
and
imul
cs
jmp
shr
cli
mov
pusha
or
inc
add
(bad)
fwait
shl
jmp
movs
inc
mov
lods
(bad)
popa
or
call
(bad)
mov
and
nop
in
sbb
call
cmp
mov
or
(bad)
into
xchg
lds
shl
mov
mov
sbb
dec
or
mov
pushf
std
lods
fbstp
pop
or
and
dec
es
and
fs
es
add
cmp
jl
lods
repnz
sbb
aas
inc
add
cmps
(bad)
fwait
call
inc
sbb
aam
div
xchg
mov
neg
and
dec
mul
pop
mov
xlat
xchg
movs
inc
outs
repz
sbb
push
es
dec
add
cli
mov
stc
mov
aad
ss
adc
mov
out
inc
adc
clc
mov
and
push
into
stos
fisttp
jno
jg
in
stc
lods
mov
cmp
push
push
xor
stos
std
cwde
aam
mov
push
sbb
adc
js
jmp
cdq
fst
popa
jmp
arpl
mov
add
inc
jecxz
pop
jecxz
mov
int
xor
mov
ret
xor
cli
nop
jge
or
sbb
leave
mov
mov
dec
sbb
jmp
jne
push
fist
inc
loope
dec
loopne
int3
xchg
cli
popa
or
ror
fidivr
outs
daa
and
rcr
fwait
(bad)
scas
mov
das
iret
add
inc
(bad)
cmps
pop
xor
pop
sub
cmp
sbb
fistp
adc
sub
and
pop
aas
jl
cmp
inc
pop
pop
lods
pop
sub
sbb
xchg
iret
or
fdivr
cli
mov
lea
push
sub
dec
cmp
div
aaa
dec
pop
loopne
out
push
lods
jmp
mov
clc
scas
mov
jbe
jne
xchg
rcl
pop
xchg
mov
sahf
ror
mov
mov
sub
xor
movs
cld
mov
les
mov
mov
or
push
add
dec
push
jae
loop
ss
push
add
ret
ds
ins
jmp
push
xor
dec
fnsave
jmp
lods
jmp
dec
jecxz
rcl
call
js
dec
cmp
and
fld
mov
outs
stos
test
(bad)
int
sub
inc
cmp
mov
and
mov
and
add
outs
in
mov
pop
inc
out
xchg
ror
xor
add
jnp
and
pop
sbb
leave
pop
and
xor
xor
sub
aaa
movs
fidiv
dec
adc
fimul
sub
outs
jmp
out
mov
scas
shl
imul
out
jbe
pop
adc
fwait
repnz
fisubr
pop
aas
dec
test
cmc
mov
mov
or
lahf
movs
scas
and
adc
or
enter
add
dec
loop
push
sub
mov
out
mov
test
ds
nop
retf
mov
fsubr
mov
and
cmp
xor
or
jmp
fmul
and
jae
xchg
jmp
adc
inc
das
push
mov
jge
xor
adc
mov
adc
dec
push
inc
ret
adc
inc
and
sbb
ds
stc
and
or
dec
and
es
mov
mov
inc
adc
hlt
xchg
jb
loopne
retf
inc
adc
sbb
pop
jmp
sbb
lods
push
jnp
stc
and
mov
(bad)
fdiv
popf
add
int
imul
shl
sti
xchg
sub
sbb
push
cmp
jmp
vphadduwd
out
fnsave
push
xor
push
aad
cmps
out
xchg
mov
mov
movs
in
lods
fsub
pop
loope
std
outs
lods
dec
loope
rol
sub
bound
int3
cld
xchg
test
sbb
pop
rcpps
or
dec
or
in
lods
mov
mov
popa
sub
stc
and
imul
cli
fisubr
sti
and
xor
sbb
or
xchg
nop
ret
lahf
mov
mov
shl
or
pop
jecxz
or
jae
outs
loopne
push
push
sub
or
int3
mov
add
int
ret
int
xchg
movs
std
mov
jbe
dec
jmp
xlat
or
ja
scas
mov
inc
add
push
adc
jnp
pop
imul
jmp
test
mov
mov
jmp
ja
pop
out
shl
lods
retf
test
ror
mov
sbb
inc
sbb
cmp
and
scas
enter
jns
je
inc
es
add
mov
add
jl
sahf
jmp
repz
das
dec
xchg
dec
sbb
add
ja
or
jbe
xor
push
adc
and
jle
xchg
xchg
int3
vpmacssdd
mov
rol
cli
lods
out
stos
out
(bad)
jmp
jmp
xlat
scas
test
aam
div
adc
ret
and
int3
mov
call
push
and
addr16
mov
sar
cli
data16
stos
jmp
mov
xchg
adc
inc
movs
fisub
pop
sbb
loop
icebp
mov
or
jp
ins
sbb
ins
push
jns
jmp
cs
sahf
int
loope
dec
sbb
cli
cwde
repz
mov
in
mov
scas
in
nop
pusha
sub
and
inc
loope
mov
sbb
sbb
pop
punpckhdq
jl
mov
xchg
leave
jne
in
mov
out
stc
sub
xor
dec
jecxz
xchg
push
mov
clc
mov
jge
ins
add
pop
loope
cmp
jns
adc
sub
mov
mov
bound
and
push
push
(bad)
mov
cs
add
in
(bad)
cld
xchg
mov
mov
xchg
or
adc
push
jmp
xor
daa
in
adc
hlt
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
push
add
and
add
add
and
jb
outs
addr16
add
add
adc
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
and
outs
bound
add
add
add
add
add
push
push
mov
add
cli
add
add
add
add
add
aaa
add
add
add
or
add
adc
add
adc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
push
add
add
add
add
add
add
push
add
add
add
or
or
pop
add
add
add
or
sub
pop
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
pop
add
add
add
add
movs
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
sbb
mov
push
add
add
push
add
add
push
add
add
add
add
retf
add
rol
out
add
or
push
add
add
add
add
add
push
push
adc
jg
push
push
or
call
push
push
push
push
add
push
push
add
add
push
pop
add
add
pop
pop
add
add
add
add
add
add
add
add
pop
out
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
adc
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
dec
add
add
add
add
xor
push
add
add
add
add
inc
add
push
and
add
add
add
add
add
add
xchg
or
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
or
jl
add
add
xchg
js
xor
or
cdq
and
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
adc
test
add
add
add
adc
add
add
dec
add
push
add
dec
add
push
add
dec
add
push
add
dec
add
push
add
outs
add
dec
add
push
add
mov
add
add
add
push
add
dec
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
leave
add
add
add
add
add
add
add
add
mov
add
add
add
add
jmp
rol
add
bound
jnp
test
add
add
add
add
add
add
xlat
add
in
add
test
adc
fild
inc
add
add
add
add
add
add
push
dec
add
ss
dec
add
dec
push
push
add
push
push
inc
add
mov
add
arpl
inc
add
push
add
mov
add
lea
bound
jno
mov
jno
add
inc
add
push
jle
push
add
push
dec
add
add
add
push
inc
add
sbb
jle
inc
add
test
cdq
add
mov
inc
add
xchg
add
push
dec
add
add
add
add
add
add
pop
cmps
add
add
pop
jle
inc
add
pop
inc
add
loope
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
and
add
add
add
cmp
arpl
xchg
add
arpl
fwait
add
arpl
mov
jge
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
sbb
add
add
add
add
gs
inc
jo
jne
dec
cs
add
outs
addr16
ins
add
arpl
jbe
push
gs
jne
arpl
add
arpl
jbe
push
jb
jo
jb
imul
ins
xor
ins
jae
outs
jb
imul
gs
add
push
arpl
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
imul
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
ins
outs
jb
bound
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
arpl
add
inc
inc
push
push
push
jno
dec
push
inc
cmp
jp
arpl
push
jne
push
push
dec
jbe
add
outs
je
jb
jae
arpl
bound
outs
js
pop
inc
jb
jo
outs
ja
inc
ins
outs
jae
add
jp
arpl
push
jne
push
push
dec
jbe
push
push
inc
jp
arpl
push
jne
push
push
dec
jbe
add
gs
xor
gs
inc
push
add
je
outs
outs
xor
ins
imul
je
outs
xor
je
push
add
imul
je
js
inc
outs
js
pop
push
gs
inc
push
add
jbe
outs
imul
add
jb
push
xor
push
pop
ins
inc
jae
je
js
inc
outs
js
pop
push
gs
inc
push
add
jb
xor
outs
popa
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
inc
jne
je
outs
add
je
outs
outs
xor
push
gs
inc
outs
js
je
js
inc
outs
js
add
gs
add
gs
xor
inc
outs
ins
bound
outs
js
arpl
bound
outs
js
add
je
outs
outs
xor
je
outs
js
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jns
je
ins
cs
arpl
imul
imul
add
arpl
imul
jae
imul
imul
arpl
imul
outs
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
inc
jo
jne
dec
add
inc
push
push
inc
je
jb
bound
add
jo
imul
add
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
jae
ins
bound
addr16
inc
jae
gs
bound
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
fs
add
je
add
add
imul
jb
inc
ins
imul
ja
add
jb
jns
inc
outs
jo
add
je
outs
fs
outs
outs
add
je
inc
outs
je
jns
outs
imul
push
jae
add
jbe
imul
popa
outs
outs
ins
add
js
add
popa
jb
jb
popa
jns
push
outs
push
je
imul
jb
push
je
imul
dec
outs
gs
popa
ins
imul
bound
arpl
outs
outs
je
outs
ins
add
je
push
gs
add
jo
jae
outs
add
imul
ins
add
jae
gs
cs
jb
ja
outs
add
ins
outs
jb
addr16
push
imul
gs
inc
popa
arpl
outs
ins
outs
jb
inc
outs
arpl
je
ins
add
je
inc
outs
arpl
jae
je
inc
outs
popa
bound
add
imul
pop
dec
outs
arpl
imul
pop
dec
popa
ins
add
jp
add
je
push
imul
pop
push
popa
bound
fs
inc
jne
je
outs
inc
popa
jae
add
outs
je
outs
je
ins
imul
add
je
push
gs
inc
ins
imul
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
pop
dec
ins
imul
je
outs
js
popa
jae
add
je
push
gs
fs
outs
ins
jns
jae
je
push
jae
push
jns
je
ins
push
popa
jae
ja
jb
inc
push
fs
push
gs
inc
push
add
jb
gs
je
ins
add
je
inc
outs
jb
gs
je
ins
add
jb
outs
jb
add
jb
outs
jb
addr16
inc
gs
jne
je
jae
je
inc
jne
jae
jb
addr16
push
jne
jno
outs
imul
pop
push
imul
add
jb
jp
outs
je
ins
inc
ins
imul
add
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
inc
fs
fs
dec
outs
popa
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
jae
gs
cs
arpl
imul
jb
imul
inc
outs
fs
je
jb
bound
add
dec
push
jp
inc
dec
jno
ja
push
cs
jae
jne
arpl
add
add
sbb
push
add
add
dec
add
dec
add
add
push
add
add
inc
add
add
push
add
dec
add
push
add
xor
ja
js
inc
add
add
push
add
dec
add
push
add
xor
add
jle
cmp
or
rcl
dec
test
adc
imul
dec
add
or
ds
dec
push
add
out
aas
push
jle
inc
pop
ins
call
or
dec
push
cmp
pop
pop
or
imul
jmp
call
jle
jle
inc
pop
cmp
test
dec
aam
add
pop
pop
jle
jmp
dec
pop
pop
ins
call
jle
jle
hlt
jle
dec
or
or
ds
add
jg
inc
pop
hlt
jle
pop
jle
ds
sbb
pop
das
test
pop
ins
call
jmp
cmp
pop
sbb
mov
hlt
jle
sub
sbb
push
cmp
or
sbb
pop
ds
or
cmp
scas
gs
jle
sbb
add
jle
jle
sbb
call
or
mov
jle
cmp
dec
push
scas
or
lea
hlt
jle
cmp
mov
push
add
or
pop
pop
or
aas
push
shl
pop
dec
push
jo
or
push
add
aam
ds
jg
aas
push
jle
hlt
jle
push
jle
jle
out
or
or
ds
jle
scas
cmp
ds
add
pop
pop
aas
push
jle
hlt
jle
xor
hlt
jle
push
add
jle
add
imul
ds
cmp
ds
scas
gs
aam
shl
pop
ds
out
jg
aam
add
out
or
pop
scas
gs
sbb
jle
lea
adc
adc
hlt
jle
pop
inc
mov
jle
xor
inc
pop
add
add
(bad)
jle
jle
ins
call
jle
sbb
push
sbb
or
sbb
dec
sbb
(bad)
ds
jle
scas
gs
jg
or
dec
jle
ds
or
(bad)
jg
jle
jle
aam
add
dec
add
jg
shl
jle
or
or
pop
jle
inc
mov
jle
hlt
jle
pop
dec
push
dec
push
pop
pop
add
adc
cmp
shl
or
out
jle
or
or
sbb
sbb
push
hlt
jle
xor
or
shl
push
hlt
jle
dec
jle
out
hlt
jle
dec
or
pop
add
jg
inc
pop
or
inc
mov
mov
add
ds
jle
or
ds
jle
jg
hlt
jle
add
ds
dec
push
jo
ds
ds
pop
pop
inc
pop
test
sbb
ds
shl
push
inc
pop
ds
jle
hlt
jle
pop
out
jle
dec
push
jo
add
pop
pop
cmp
or
mov
jmp
das
ins
call
ds
jle
shl
sbb
mov
or
cmp
aas
push
jle
jle
adc
ds
aas
push
or
jle
lea
sbb
jle
dec
sbb
jle
jle
jle
ds
or
pop
jle
pop
pop
jle
jle
add
jle
ds
jle
rcl
pop
ins
call
jle
or
mov
mov
push
pop
pop
ds
jle
ds
hlt
jle
sub
jle
pop
pop
aam
or
aas
push
mov
jle
jle
jle
jmp
adc
push
inc
mov
rcl
(bad)
dec
hlt
jle
and
test
push
jle
cmp
jle
or
jle
sbb
jle
jle
jg
add
hlt
jle
pop
test
push
rcl
push
ds
jo
or
add
or
push
jle
jle
inc
pop
jle
hlt
jle
push
aas
push
dec
push
hlt
jle
push
sbb
add
push
dec
push
add
jle
mov
hlt
jle
rcl
push
ds
scas
gs
or
pop
jle
jle
adc
jle
jle
jo
add
add
push
dec
push
adc
ds
shl
dec
jle
ins
call
dec
push
sbb
cmp
sbb
pop
jg
add
or
aam
shl
push
dec
push
jle
sbb
rcl
pop
jle
cmp
cmp
ds
add
aas
push
jle
ds
hlt
jle
sbb
push
shl
xor
mov
sbb
cmp
push
or
jle
mov
pop
or
push
jle
jle
jle
or
jmp
pop
add
or
jg
dec
push
dec
push
hlt
jle
push
jle
mov
add
cmp
or
inc
pop
or
adc
scas
gs
jle
mov
add
jle
jle
sbb
push
ds
aas
push
shl
push
jle
jle
hlt
jle
cmp
jmp
sub
jle
ds
jle
aam
inc
pop
adc
aam
hlt
jle
adc
scas
gs
add
cmp
pop
dec
push
jle
add
xor
jle
aas
push
jle
jle
sbb
imul
jle
jle
inc
pop
inc
mov
push
jle
hlt
jle
lea
pop
add
or
hlt
jle
sbb
push
jle
cmp
scas
gs
gs
ds
add
hlt
jle
pop
ds
mov
cmp
test
sbb
push
dec
push
jle
or
(bad)
ds
or
push
jle
sbb
sub
scas
gs
call
adc
dec
push
aam
ds
jo
ds
hlt
jle
cmp
jg
jle
jmp
and
push
dec
push
adc
scas
gs
ds
pop
pop
or
push
jle
rcl
call
jle
or
jle
inc
mov
pop
shl
pop
aas
push
jg
rcl
push
cmp
jle
jle
aas
push
jle
jle
sbb
add
or
jle
cmp
hlt
jle
add
jle
or
sbb
inc
pop
add
shl
xor
scas
cmp
jle
jle
jle
jg
ds
add
inc
pop
ds
ds
cmp
jle
jle
test
push
jle
shl
cmp
push
add
inc
pop
jo
pop
pop
ds
cmp
hlt
jle
sbb
add
sbb
ins
call
jle
jle
jg
jmp
or
pop
hlt
jle
cmp
push
add
(bad)
aam
add
sbb
or
jle
or
hlt
jle
imul
pop
aas
push
add
ins
call
jle
jle
shl
or
adc
jle
jle
jle
or
push
or
out
add
adc
test
push
hlt
jle
and
adc
jo
sbb
cmp
or
out
hlt
jle
call
jle
jmp
arpl
or
hlt
jle
cmp
push
test
push
test
sbb
or
push
jle
add
inc
pop
sbb
mov
sbb
imul
dec
dec
push
aam
ds
jle
inc
mov
pop
jle
scas
or
jle
add
jle
jg
out
ins
call
or
cmp
jle
or
jle
out
or
jg
shl
dec
shl
push
add
jle
sbb
push
hlt
jle
push
jmp
mov
shl
mov
mov
ds
jle
inc
mov
add
jle
jle
rcl
pop
shl
xor
push
sbb
or
inc
pop
jle
sbb
cmp
jle
or
push
ds
add
jg
jle
ds
aam
hlt
jle
push
cmp
hlt
jle
cmp
arpl
xor
arpl
mov
push
ds
mov
add
pop
pop
pop
sbb
xor
jg
ds
add
jle
hlt
jle
(bad)
jle
ds
sbb
call
sbb
push
test
pop
jmp
mov
mov
sbb
ds
or
addr16
scas
cmp
add
jle
cmp
test
pop
jle
jle
jle
adc
hlt
jle
push
sbb
cmp
mov
ds
jle
cmp
jle
add
pop
pop
sbb
jg
shl
mov
jg
sbb
cmp
push
inc
pop
sbb
sbb
or
call
shl
dec
inc
pop
hlt
jle
sbb
call
jle
jg
cmp
jle
shl
push
add
cmp
pop
pop
jle
aam
cmp
ds
add
pop
inc
pop
jle
ds
sbb
or
dec
push
mov
or
sbb
add
hlt
jle
jle
push
jle
ds
aam
aam
aas
push
sbb
mov
cmp
jle
or
add
ds
jle
test
adc
cmp
jle
jle
test
mov
sbb
pop
out
jle
mov
out
mov
ds
ds
scas
gs
ds
shl
adc
pop
pop
out
jle
ds
jle
aam
ins
call
out
mov
jle
jo
test
sub
cmp
mov
sbb
push
or
adc
jg
jle
test
adc
jle
jle
jle
ds
add
jle
scas
gs
ds
aas
push
cmp
jle
ds
sbb
jle
mov
ds
inc
pop
add
push
shl
add
hlt
jle
push
jle
sbb
mov
ins
call
rcl
cmp
pop
sbb
out
hlt
jle
pop
adc
jle
pop
pop
sbb
pop
jle
aam
jle
add
hlt
jle
cmp
push
cmp
ds
sbb
push
sbb
sbb
ins
call
add
cmp
lea
jle
add
scas
gs
ds
jle
jle
pop
pop
rcl
add
or
dec
jle
jle
cmp
ds
add
adc
pop
pop
sbb
pop
sbb
jle
push
cmp
ds
add
jle
or
aas
push
jle
or
push
jle
adc
aam
jg
inc
mov
jle
push
or
mov
jle
jle
adc
add
jle
jmp
or
push
adc
jle
jg
jle
jle
pop
pop
jle
hlt
jle
sub
arpl
push
inc
mov
ds
pop
pop
jle
inc
pop
cmp
sbb
jle
or
cmp
shl
cmp
cmp
pop
pop
add
jle
jg
jle
hlt
jle
push
jle
or
jle
mov
aam
jle
ds
jle
ins
call
sbb
xor
hlt
jle
pop
or
mov
jo
hlt
jle
dec
scas
gs
pop
jle
aam
aam
jle
jle
add
sbb
inc
pop
ins
call
inc
pop
cmp
jle
jle
sbb
jle
cmp
jle
test
xor
ins
call
sbb
push
add
or
jle
adc
inc
pop
jle
mov
jle
aas
push
sbb
pop
add
sbb
push
cmp
hlt
jle
or
jle
jle
jle
sbb
lea
add
jle
out
sbb
cmp
add
inc
mov
aam
aas
push
add
scas
gs
jle
mov
jle
cmp
inc
mov
das
or
or
pop
sbb
lea
rcl
dec
aas
push
jmp
lea
dec
ins
call
jle
aas
push
hlt
jle
adc
jle
jle
ins
call
hlt
jle
sub
pop
jle
ds
test
cmp
push
ds
test
jle
push
or
pop
jle
aam
jle
or
or
cmp
push
jle
jle
mov
sbb
aam
sbb
pop
pop
sbb
cmp
lea
push
add
dec
push
jg
inc
pop
rcl
jle
push
or
or
pop
jg
cmp
pop
pop
ds
test
mov
pop
jmp
mov
pop
dec
push
dec
push
ds
jmp
sbb
and
aam
mov
sbb
cmp
adc
aam
inc
pop
jle
jle
jle
or
pop
sbb
arpl
jle
jle
inc
pop
out
or
ds
inc
pop
or
jle
add
hlt
jle
mov
push
ds
rcl
cmp
pop
or
or
sbb
imul
pop
sub
mov
jmp
gs
jle
push
rcl
pop
jle
aam
jle
jo
jo
jle
ds
ds
inc
mov
push
jle
add
add
mov
cmp
jle
cmp
jmp
arpl
dec
jle
jle
or
add
ds
dec
push
cmp
aam
out
jle
sbb
inc
pop
inc
pop
or
jle
out
dec
push
ds
jo
jle
add
dec
push
sbb
or
push
ds
hlt
jle
adc
pop
pop
aas
push
sbb
lea
adc
jmp
push
hlt
jle
mov
add
or
jle
sbb
(bad)
ds
sbb
mov
imul
jle
sbb
ds
sbb
mov
jle
jle
sbb
dec
dec
push
adc
jle
ds
jg
jle
jle
ds
cmp
jg
ds
adc
inc
pop
adc
jo
add
add
or
cmp
ins
call
inc
mov
push
add
adc
jle
scas
gs
jle
adc
jle
shl
push
add
jo
ds
hlt
jle
push
cmp
mov
jle
ds
jle
inc
mov
dec
hlt
jle
gs
or
cmp
and
jle
add
cmp
cmp
sbb
pop
ds
sbb
push
pop
pop
jle
jle
test
push
jmp
jle
jle
push
jle
jmp
push
add
push
add
(bad)
jle
sbb
push
jle
cmp
jle
jle
ds
sbb
jle
cmp
or
aam
cmp
jg
hlt
jle
cmp
rcl
dec
jle
jo
jle
jle
add
jle
jle
or
push
jle
aam
aam
jle
add
ds
or
aas
push
or
jle
jle
aam
test
lea
pop
jo
jle
or
jle
or
push
jle
cmp
jg
sbb
dec
add
pop
jle
hlt
jle
push
test
(bad)
hlt
jle
push
aas
push
jle
jg
jg
jmp
push
ds
inc
mov
sbb
dec
push
hlt
jle
pop
aas
push
test
cmp
push
adc
jle
jle
ds
test
gs
jle
movd
cmp
ds
pop
pop
inc
pop
add
jle
ds
jmp
add
call
out
jle
test
push
add
jle
sbb
call
ins
call
scas
gs
ds
jo
out
rcl
push
or
push
sbb
test
pop
jle
jle
jmp
imul
pop
pop
pop
test
cmp
push
or
jle
inc
mov
add
jle
hlt
jle
cmp
push
inc
mov
jle
add
scas
gs
jle
ds
jle
aam
inc
pop
dec
push
hlt
jle
push
cmp
add
ds
ds
test
call
jle
ds
jle
add
or
cmp
cmp
(bad)
ds
add
sbb
push
add
gs
inc
mov
adc
test
pop
jle
or
sbb
ds
sbb
jle
jle
sbb
or
pop
jle
mov
aam
sbb
add
sbb
pop
or
push
inc
mov
cmp
jle
dec
push
add
jle
jle
jle
or
push
jle
ins
call
or
sbb
aam
jmp
call
add
ds
rcl
lea
jle
gs
shl
pop
or
out
add
cmp
sbb
arpl
dec
or
ins
call
jle
ds
aas
push
aas
push
jle
sbb
add
mov
shl
(bad)
jle
ds
inc
mov
cmp
rcl
arpl
mov
add
jle
or
push
inc
mov
jle
cmp
mov
hlt
jle
jle
push
dec
push
jle
or
pop
jle
add
jle
jle
cmp
jle
out
jle
test
lea
pop
add
jle
scas
gs
jle
jle
sbb
cmp
ds
sbb
sbb
dec
ds
mov
shl
or
hlt
jle
call
mov
hlt
jle
dec
jo
jle
jmp
(bad)
push
jle
adc
out
shl
mov
push
add
jle
aam
ins
call
jle
inc
pop
add
mov
test
cmp
cmp
cmp
push
or
pop
hlt
jle
mov
aas
push
or
sub
jg
jle
jle
dec
push
pop
pop
adc
sbb
sub
imul
jmp
call
test
pop
or
sub
scas
gs
push
rcl
add
jo
ins
call
dec
push
sbb
or
aas
push
sbb
jle
jmp
mov
dec
push
ins
call
scas
gs
pop
or
pop
add
shl
jle
push
jo
out
jle
out
add
cmp
or
or
jle
cmp
add
ds
jle
sbb
pop
ins
call
jle
jle
rcl
pop
ds
jle
inc
pop
pop
pop
jo
shl
gs
push
add
sbb
arpl
cmp
add
push
sbb
or
add
aas
push
test
mov
(bad)
aam
jle
jle
mov
inc
mov
or
or
push
add
aas
push
or
or
or
inc
mov
jle
pop
jle
add
aam
or
dec
or
dec
scas
or
mov
imul
push
sbb
push
cmp
jle
ds
out
jle
add
inc
mov
sbb
or
addr16
push
jg
or
push
rcl
push
hlt
jle
gs
out
shl
(bad)
jle
or
jle
jle
jle
add
scas
gs
push
add
pop
or
jle
push
pop
pop
inc
pop
sbb
or
add
sbb
ds
hlt
jle
pop
jle
jle
jle
jle
sbb
out
jle
adc
jle
or
jle
jle
jle
scas
gs
jle
inc
pop
jle
add
adc
aas
push
or
pop
dec
push
or
jle
sbb
or
jle
ds
rcl
jle
cmp
lea
push
add
or
jle
sbb
pop
out
jle
add
pop
pop
hlt
jle
call
out
jle
jle
ds
mov
sbb
cmp
jle
cmp
jle
jg
pop
pop
mov
add
bound
jne
je
je
outs
add
xor
add
push
add
popa
add
add
je
add
je
inc
add
js
xor
add
bound
add
add
or
outs
add
add
punpckldq
jne
je
je
outs
add
xor
add
js
je
inc
add
js
add
or
ins
add
arpl
imul
or
outs
add
ins
add
add
add
add
outs
aam
stos
mov
push
fwait
mov
mov
pop
push
sbb
mov
add
add
push
adc
or
add
add
or
push
and
add
adc
push
or
add
add
add
push
adc
add
push
adc
add
adc
add
adc
push
add
push
add
add
or
add
add
add
add
or
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
adc
jne
and
adc
and
add
adc
pop
add
or
adc
add
add
add
add
add
or
add
adc
add
or
add
or
or
adc
sbb
sbb
or
or
xchg
add
add
add
push
add
add
add
sbb
push
push
sbb
sbb
aas
pop
jg
aad
cmp
test
adc
add
sub
or
and
add
xor
xor
cmp
sbb
and
add
add
and
add
or
add
adc
add
adc
and
add
adc
and
adc
add
and
xor
xor
xor
add
add
and
xor
xor
popa
xor
aaa
sub
sub
sub
data16
xor
add
add
adc
outs
jo
jb
addr16
xor
xor
add
push
add
or
pop
popa
popa
dec
jae
inc
add
adc
add
popa
dec
jae
inc
and
arpl
add
add
adc
ins
pop
inc
inc
fs
push
jae
pop
jno
push
jb
jbe
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
test
jae
gs
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
sldt
and
add
sldt
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
