pop
out
mov
and
pop
imul
stc
psrad
pop
loopne
gs
daa
ffree
cmp
mov
fnstenv
arpl
daa
mov
pop
imul
test
push
stc
and
lods
shl
outs
rol
lock
das
ss
or
daa
fld
in
mov
(bad)
dec
dec
pop
sub
and
iret
jecxz
imul
push
jmp
in
push
loopne
pop
jmp
je
push
cmp
or
(bad)
aad
in
lahf
pop
loopne
dec
mov
daa
sub
and
pop
imul
fisttp
jns
cwde
sti
retf
inc
imul
push
jl
movs
and
mov
push
or
movs
mov
jp
jb
ins
jns
cwde
jmp
daa
push
pop
retf
inc
imul
mov
and
fldenv
push
ds
adc
fisttp
imul
cmp
fisttp
imul
add
push
pop
gs
mov
das
mov
inc
fsub
clc
jmp
push
and
sbb
in
stos
mov
push
inc
fmul
pmulhuw
stos
mov
xor
xchg
fsub
ss
dec
int
xchg
je
xchg
xchg
fsub
test
and
mov
daa
(bad)
pop
imul
mov
punpcklbw
test
add
sbb
jns
lahf
pop
popa
daa
fld
add
xor
test
and
imul
and
clc
pop
aaa
ins
inc
imul
pop
ret
popa
fsubr
pop
fldenv
out
popf
pop
fld
jmp
pop
xor
sbb
(bad)
jmp
jb
lahf
fadd
imul
ins
inc
imul
push
imul
jl
imul
mov
add
ins
inc
imul
arpl
add
pop
imul
mov
inc
xor
popa
call
(bad)
icebp
and
jecxz
ins
imul
pop
add
ins
inc
imul
adc
daa
(bad)
pop
(bad)
inc
imul
(bad)
pop
pop
ins
inc
imul
fld
jmp
sti
cmp
(bad)
jl
daa
adc
or
daa
push
pop
cmp
cmp
sbb
push
(bad)
mov
and
ins
imul
ins
imul
daa
stc
addr16
adc
cld
xchg
push
fnstenv
test
sar
mov
xlat
outs
stc
xchg
scas
sbb
stos
pop
repz
and
das
xchg
push
imul
pop
jo
daa
mov
lea
pop
pop
shl
inc
imul
rol
daa
pop
ret
sbb
clc
imul
popf
in
jne
repnz
imul
xor
loope
cmp
shr
xchg
push
push
ss
in
mov
bound
xchg
es
(bad)
cmp
(bad)
daa
rol
add
mov
add
and
fsubr
pop
imul
sub
push
sbb
pop
xchg
push
leave
clc
sbb
mov
xchg
push
int
sbb
xor
mov
push
movs
pop
imul
sbb
jmp
fidivr
sub
call
scas
sbb
test
in
mov
scas
(bad)
jp
xor
bound
push
add
fld
sbb
and
iret
out
imul
test
xor
push
(bad)
xor
jb
dec
(bad)
sbb
and
iret
sti
jle
daa
push
rcl
fld
pusha
shr
or
out
in
outs
scas
and
pop
aaa
out
push
push
loopne
pop
jmp
je
push
loop
sar
(bad)
in
fnstsw
in
add
inc
sub
jmp
bound
call
and
clc
and
xchg
es
mov
jge
in
sbb
and
scas
sub
mov
fnsave
push
cwde
sti
sbb
and
lods
cwde
pop
push
bound
jb
lods
cwde
inc
les
scas
push
inc
loopne
pop
iret
xchg
addr16
cmp
test
push
loopne
test
sub
push
(bad)
jmp
pop
sbb
in
xchg
push
pop
mov
ss
into
stos
jb
loop
and
push
imul
mov
lods
test
loop
int
in
(bad)
stc
xchg
dec
fnsave
lods
pop
sti
xchg
fldenv
mov
(bad)
stc
xchg
fcomp
jae
fisttp
out
and
sbb
pop
sbb
in
pop
sbb
imul
iret
mov
das
push
adc
dec
add
and
cs
add
lods
pop
sti
xchg
fldenv
mov
(bad)
stc
xchg
scas
add
add
and
imul
adc
cmp
cmp
jno
mov
arpl
cdq
sar
mov
push
rcr
and
lods
mov
gs
push
(bad)
sahf
int
std
outs
out
sbb
push
xlat
xor
push
adc
in
adc
loope
pop
imul
mov
push
pop
gs
sti
bound
add
loopne
and
icebp
add
neg
daa
fisttp
inc
int
loopne
sub
test
fcmovb
nop
cmp
int
test
push
stc
mov
mov
daa
push
inc
popa
loope
pop
imul
pop
aaa
jl
les
cmp
jno
mov
push
pop
jge
cwde
sti
pop
inc
and
call
daa
(bad)
ins
push
imul
lods
cwde
pcmpgtd
hlt
cmc
loop
ror
xlat
xor
ds
addr16
cs
add
lods
cwde
sti
loopne
in
(bad)
and
test
in
mov
aad
mov
(bad)
jmp
loopne
add
push
shr
(bad)
lahf
pop
aas
iret
pop
cli
xchg
fcom
lods
mov
pop
mov
push
adc
jp
pusha
mov
xor
clc
xchg
movs
sbb
ss
les
cmp
push
pop
gs
pop
and
push
inc
push
rcl
fld
loopne
mov
add
mov
jbe
fst
test
add
mov
cmp
and
shr
mov
in
mov
push
jb
cwde
cmovae
gs
sub
(bad)
mov
pop
cmp
test
cmps
cmc
test
clc
cmp
push
inc
ins
fsubr
push
popa
lahf
je
imul
and
clc
pop
lods
(bad)
das
xor
pop
aaa
jl
les
cmp
lods
test
(bad)
scas
frndint
daa
cmps
sub
and
fld
daa
mov
cmp
cwde
idiv
dec
int
sub
xor
mov
daa
sub
loopne
xor
mov
inc
(bad)
loopne
xor
push
add
fldcw
stos
cwde
idiv
iret
pop
ja
daa
push
les
aam
mov
sub
aam
sbb
push
imul
out
push
add
(bad)
pop
lods
int
jge
fld
imul
nop
cmp
in
(bad)
pusha
cld
rcr
pusha
out
add
popf
in
data16
cld
xchg
fsub
pop
call
daa
in
(bad)
ss
into
stos
jb
loop
pop
fld
imul
mov
pushf
stos
or
or
call
sbb
clc
imul
movs
mov
daa
frstor
push
(bad)
or
loope
pop
imul
lock
and
retf
pop
sbb
fst
pop
and
scas
add
test
inc
imul
fisttp
xchg
ja
jb
iret
pop
jne
daa
mov
add
cmp
out
fldenv
push
or
or
pop
imul
inc
imul
fisttp
stos
cmps
push
stc
inc
daa
fisttp
sub
push
inc
ins
ja
aas
xchg
jo
mov
pop
jp
daa
rol
jmp
push
imul
pop
cmp
fcomp
pop
sbb
fld
xchg
and
inc
popf
push
fdivr
fnsave
movs
clc
jnp
fld
enter
imul
mov
or
push
fild
push
les
loopne
out
daa
push
inc
xchg
scas
cwde
out
retf
inc
imul
int
mov
mov
push
and
daa
loopne
and
imul
inc
movs
sub
mov
mov
mov
lea
daa
fld
loopne
and
test
push
scas
pop
imul
jle
imul
pop
imul
sbb
jnp
gs
xchg
daa
fisttp
fsub
clc
sbb
daa
(bad)
mov
and
retf
pop
sbb
fst
pop
and
fcomp
ds
rol
jmp
mov
mul
stc
xchg
scas
push
pop
aaa
jl
les
cmp
cwde
test
add
fist
rcl
fcomip
jmp
loopne
bound
cmps
loope
ins
sub
imul
int3
shr
pop
imul
hlt
jmp
loopne
jb
xlat
hlt
fbld
movs
and
inc
popa
lods
cdq
add
sbb
jae
sbb
jae
movs
mov
pmulhuw
push
cmp
movs
sub
xor
test
adc
pop
scas
and
sub
fucomp
mov
and
pusha
out
or
loopne
hlt
jmp
loopne
jp
daa
test
inc
imul
loopne
bound
sti
imul
push
jae
push
cs
int3
iret
mov
push
add
in
ins
sbb
jp
movs
mov
ss
scas
sbb
(bad)
aad
push
pop
fisttp
in
push
and
xchg
movs
mov
sti
imul
aaa
lock
gs
fld
adc
push
daa
mov
add
mov
add
mov
imul
pushf
pop
cmp
add
(bad)
out
sbb
pop
loop
aad
test
adc
push
imul
mov
mov
push
aad
sbb
xor
ins
imul
lahf
pop
xchg
push
and
pop
call
daa
and
iret
out
imul
push
push
loopne
gs
imul
mov
in
arpl
push
fild
push
les
fcomp
outs
(bad)
(bad)
lahf
pop
or
mov
jecxz
stc
xchg
ja
xchg
out
cmp
fnstsw
in
pop
adc
push
movs
fsub
clc
loopne
hlt
fnstsw
in
mov
fsub
clc
in
sbb
xchg
fmul
clc
jmp
inc
imul
cmps
adc
push
or
inc
movs
sub
lea
bound
push
test
push
rol
imul
cmp
imul
adc
pop
imul
fld
loopne
(bad)
loopne
push
sub
inc
movs
sub
lea
bound
push
test
daa
(bad)
xchg
xchg
fdiv
test
scas
pusha
call
jmp
stc
xchg
test
in
lock
fld
in
arpl
xchg
fmul
pop
cmp
inc
xchg
cs
pop
imul
clc
imul
fld
xchg
daa
rol
add
mov
mov
mov
fisub
stc
xchg
ja
adc
sub
scas
pusha
mov
fldenv
mov
sahf
les
fsub
clc
loopne
shl
xchg
sbb
clc
imul
fld
xchg
pop
mov
fldenv
inc
cmp
and
ja
inc
imul
pop
ret
sub
fcmovnu
and
scas
and
push
leave
data16
jmp
test
inc
imul
fld
loopne
(bad)
loopne
mov
add
cmp
cmps
sub
xor
test
daa
fnsave
dec
fsubr
(bad)
lahf
pop
in
and
xchg
fmul
clc
jmp
pop
sbb
fsub
clc
push
es
mov
outs
cmp
sub
xchg
movs
sbb
push
fsub
pop
imul
out
daa
push
mov
ds
in
icebp
xchg
fcomp
sbb
clc
imul
imul
imul
cmp
cmps
sub
xor
test
daa
fnsave
dec
fsubr
(bad)
lahf
pop
in
and
xchg
fmul
clc
jmp
pop
sbb
fsub
clc
push
es
mov
outs
cmp
sub
xchg
movs
sbb
push
fsub
pop
imul
out
daa
push
mov
ds
jo
xchg
fcomp
sbb
clc
imul
imul
imul
cmp
cmps
sub
xor
test
daa
fnsave
loopne
mov
fldenv
push
imul
fld
sahf
les
fsub
clc
loopne
mov
add
cmps
sub
xor
test
daa
fnsave
loopne
mov
fldenv
push
imul
movs
out
daa
mov
leave
data16
inc
shl
clc
jmp
pop
sbb
sahf
cmp
cli
xchg
fldenv
push
xor
and
imul
out
daa
push
mov
ds
sub
xchg
fcomp
sbb
clc
imul
imul
imul
and
imul
inc
imul
and
cmp
sbb
xchg
fadd
frstor
push
enter
imul
pop
scas
mov
fucomp
jae
fld
loopne
sub
loopne
imul
in
add
mov
sti
and
xchg
ja
aas
xchg
jo
mov
aam
data16
push
adc
and
cmp
push
loop
and
scas
cwde
sti
loopne
(bad)
loopne
pop
jp
daa
rol
jmp
mov
movs
js
xchg
fldenv
pop
jmp
or
sbb
das
gs
frstor
mov
retf
mov
fadd
imul
and
cmp
and
mov
lea
int3
or
daa
push
cmp
dec
out
daa
push
xor
and
cmp
pop
imul
sbb
pop
imul
or
xchg
fmul
xlat
imul
pop
les
fld
pusha
out
sub
pop
in
xor
mov
mul
stc
xchg
ja
aas
xchg
jo
mov
aam
sbb
daa
fisttp
xchg
ja
xor
in
ds
push
inc
xchg
scas
add
test
fisttp
in
neg
pop
imul
and
xchg
ja
add
in
add
cs
pop
imul
and
xchg
daa
and
add
inc
imul
mov
imul
out
jp
fld
add
xor
mov
sahf
les
fsub
clc
loopne
and
in
and
xchg
fmul
pop
in
and
xchg
fmul
pop
jmp
clc
xchg
fcomp
pop
loop
xor
xchg
fcom
fsub
clc
in
jns
xchg
fmul
stc
xchg
movs
xor
loopne
add
(bad)
int3
stos
push
test
and
pop
imul
and
xchg
jo
cmp
fist
call
pop
and
data16
pop
mov
imul
cmp
imul
adc
pop
imul
aam
data16
push
add
and
cmp
push
loop
and
scas
cwde
sti
loopne
in
fnstsw
in
jp
daa
rol
jmp
out
mov
fld
add
xor
pop
call
daa
mov
stc
xchg
and
and
xchg
scas
pop
jg
fldenv
mov
mov
push
mov
fsub
clc
jmp
pop
imul
lods
clc
xchg
fcomp
jns
cmp
call
clc
lods
loop
ds
push
inc
xchg
scas
add
test
fisttp
in
dec
fadd
imul
clc
xchg
fmul
pop
loop
pop
clc
xchg
fmul
cmp
fld
loopne
and
test
daa
fld
daa
rol
in
mov
ins
imul
and
ja
aas
xchg
jo
mov
push
fistp
push
(bad)
jmp
pop
imul
and
xchg
das
rol
jmp
or
loope
pop
imul
mov
xchg
fdiv
test
scas
pusha
pop
xchg
fisub
mov
jg
cli
xchg
scas
push
xchg
inc
and
xchg
daa
rol
scas
mov
fadd
imul
ins
clc
xchg
fcom
xchg
fsub
clc
cmp
out
daa
push
adc
ins
imul
add
mov
fisub
stc
xchg
movs
adc
push
imul
stc
xchg
fsubr
xchg
fisub
mov
inc
and
xchg
ja
adc
fdivr
xchg
fldenv
push
sbb
sbb
add
push
adc
out
daa
push
adc
ins
imul
add
test
scas
and
xchg
daa
test
pop
imul
and
xchg
scas
push
mov
mov
push
aaa
xchg
jno
clc
in
xchg
and
xchg
lods
pop
scas
xchg
fldenv
ds
xchg
and
xchg
sub
xchg
fsub
mov
mov
stc
xchg
ja
aaa
xchg
jno
mov
and
xchg
ja
aaa
xchg
jno
xchg
fcomp
xchg
fldenv
mov
ret
and
xchg
push
pop
jmp
fldenv
or
cld
and
xchg
movs
pusha
not
and
adc
out
xchg
fldenv
push
loop
and
movs
pusha
xlat
xchg
fldenv
pop
sbb
fsub
clc
cmp
mov
(bad)
mov
and
xchg
fldenv
pop
sbb
fsub
clc
cmp
xor
in
clc
aas
das
push
xor
in
clc
aas
das
pop
les
xor
pop
loop
cmp
mov
mov
adc
clc
xchg
js
pop
mov
dec
and
xchg
lahf
pop
add
jl
imul
clc
pop
imul
mov
scas
mov
xor
adc
push
stc
push
loopne
sti
imul
fild
imul
pop
ret
ins
lahf
xchg
cmp
sub
scas
cwde
out
pop
cmp
jg
fsub
test
inc
imul
sbb
fsub
clc
xchg
int3
clc
shr
pop
imul
push
bound
cmp
aas
daa
fucomp
ret
sti
xchg
fsub
clc
ss
xchg
loop
sub
pop
imul
mov
loopne
hlt
jmp
loopne
xchg
(bad)
dec
(bad)
add
pop
sbb
mov
push
loopne
pop
jmp
je
mov
fs
sub
icebp
mov
sahf
(bad)
push
inc
xchg
scas
sbb
ins
push
imul
and
imul
fld
jmp
test
inc
imul
popf
pop
imul
fld
imul
adc
inc
lock
imul
push
pop
retf
addr16
inc
imul
pushf
pop
pusha
out
mov
and
fld
imul
(bad)
dec
mov
pop
or
pushf
pop
sub
mov
add
out
cmp
dec
(bad)
and
repz
daa
xor
imul
xchg
inc
imul
sub
(bad)
ins
addr16
inc
imul
inc
inc
imul
fucomp
outs
fcomp
aas
mul
mov
into
aad
imul
pushf
pop
sbb
pop
imul
(bad)
ins
aas
inc
inc
imul
xor
push
fld
imul
inc
inc
imul
and
ins
aas
inc
inc
imul
xor
push
fnstsw
sahf
(bad)
push
inc
cdq
scas
sbb
fs
inc
inc
imul
and
ins
aas
inc
inc
imul
xor
imul
xchg
cmps
rcr
mul
bswap
addr16
inc
imul
and
ins
aas
inc
inc
imul
xor
imul
mov
cmps
rcr
mul
push
scas
and
call
xor
xchg
fsub
icebp
ins
aas
inc
inc
imul
fld
imul
cdq
sahf
sub
fild
imul
and
ins
push
imul
data16
imul
fadd
imul
pushf
pop
loopne
in
iret
loopne
pop
or
pushf
pop
sub
cmp
imul
fld
mov
fld
imul
popf
pop
and
pop
imul
pushf
pop
adc
jae
fld
and
fisttp
test
fdivr
mul
add
stos
fld
imul
fld
jmp
daa
std
xchg
scas
sub
push
leave
fisttp
fbld
lea
adc
pop
(bad)
dec
mov
loopne
imul
adc
imul
pop
(bad)
fbld
xchg
inc
imul
mov
daa
ss
imul
fucomp
dec
fcomp
aas
mul
xchg
cmps
rcr
mul
inc
xor
mov
scas
cwde
out
loopne
and
sbb
and
cwde
sub
popf
or
out
pop
imul
fisttp
test
imul
xchg
pop
imul
fld
sub
sahf
sbb
sub
fld
jmp
and
add
popf
pop
loopne
sub
loopne
sub
inc
sahf
sbb
imul
inc
inc
imul
fld
and
sub
sbb
pop
jp
and
xchg
sub
fucomip
push
cmps
mov
xchg
inc
imul
fwait
lea
cmp
ins
ret
inc
inc
imul
jb
cmps
mov
test
inc
imul
popf
pop
imul
push
adc
popf
pop
jecxz
push
add
inc
imul
frstor
push
and
xchg
sub
scas
fsubr
(bad)
or
and
popf
pop
imul
push
adc
popf
pop
jecxz
push
add
inc
imul
frstor
push
and
xchg
sub
scas
fcom
daa
push
test
fnsave
test
mov
mov
push
(bad)
aaa
jl
les
cmp
jo
pop
pusha
test
xchg
fcomp
jae
(bad)
popf
lahf
pop
adc
lahf
pop
aas
iret
pop
pop
imul
fisttp
sub
push
rol
addr16
imul
movs
jns
pushf
pop
add
addr16
imul
movs
popf
mov
addr16
imul
movs
pop
mov
addr16
imul
movs
xor
fdivr
loopne
sbb
mov
cmp
mov
call
daa
and
sbb
mov
cwde
scas
cmp
enter
ffree
sub
lds
imul
push
(bad)
jmp
mov
sbb
fld
imul
test
(bad)
ins
push
imul
cmps
ss
fs
fld
(bad)
fadd
imul
fld
imul
and
sbb
bound
imul
add
mov
daa
fld
jmp
mov
add
(bad)
int3
stos
cwde
out
cmp
pop
outs
daa
push
inc
lea
adc
(bad)
in
fnstsw
in
inc
cmc
ja
pop
in
jns
add
mov
add
mov
xchg
push
cmp
test
pop
in
jge
xchg
push
jns
sub
lea
iret
das
imul
sbb
daa
and
dec
(bad)
dec
fldcw
fsubr
pop
imul
xor
clc
ins
push
imul
fsubr
push
xchg
xor
call
sar
sahf
les
scas
push
pop
aaa
jl
les
cmp
push
stc
push
jae
cwde
sti
loopne
hlt
(bad)
and
lods
nop
pop
loopne
and
ss
bound
ins
push
stos
cwde
out
cmp
test
add
push
inc
popf
ja
clc
xchg
push
aad
jl
inc
inc
imul
cs
scas
mov
mov
jo
sbb
sbb
mov
fcomp
jae
gs
sbb
mov
xchg
xor
cwde
sub
sbb
push
loop
retf
rcl
push
jb
lods
or
and
clc
xchg
fnstcw
push
fcomp
pop
imul
push
push
fcomp
pop
imul
add
imul
add
fcomp
pop
imul
add
pop
imul
fisttp
and
push
scas
leave
aas
scas
bound
pop
xchg
cwde
clc
xchg
fld
or
leave
cmp
rol
loopne
xchg
or
xor
ds
sub
imul
aaa
add
push
in
jl
fstp
push
imul
push
pop
jb
scas
and
mov
and
out
imul
imul
sbb
outs
aad
fst
pushf
add
xchg
dec
(bad)
in
enter
fst
iret
arpl
daa
push
inc
xchg
movs
adc
mov
movs
aaa
add
fiadd
movs
xor
mov
push
inc
push
fdivr
jmp
adc
pop
imul
and
pop
cmp
inc
imul
and
adc
clc
xchg
fcomp
jae
fld
cmp
sbb
add
push
(bad)
jmp
jb
scas
and
cmp
test
loopne
pop
out
ins
sub
outs
sbb
pop
imul
pop
out
ins
cmps
loope
dec
push
retf
mov
jae
add
int
test
fld
imul
pop
cmp
test
loopne
pop
out
imul
mov
sbb
add
jmp
cmp
and
out
imul
adc
mov
movs
aaa
add
(bad)
jmp
inc
jns
cdq
add
es
push
xchg
scas
leave
add
fld
jmp
jne
jmp
cmps
loope
push
movs
xor
push
sbb
push
(bad)
jmp
jb
scas
and
mov
and
cmp
daa
fnsave
sbb
pop
imul
xchg
imul
in
ins
scas
fst
push
cmps
and
ins
daa
fisttp
jmp
and
xchg
js
pop
mov
movs
xor
cmp
clc
ins
push
imul
cmp
clc
and
cmp
test
cmps
and
push
fnsave
cmps
and
push
fnsave
push
inc
or
rcr
xor
imul
and
sbb
xchg
mov
test
fisttp
daa
in
fsub
(bad)
fistp
iret
dec
icebp
xchg
fadd
imul
xor
and
pop
imul
in
scas
add
adc
leave
add
mov
pop
push
bound
jne
int3
cli
lea
push
add
cdq
sbb
fisttp
push
fstp
(bad)
push
inc
popf
stos
cdq
sbb
mov
loopne
ficomp
ins
mov
pop
jmp
clc
loopne
(bad)
inc
not
std
(bad)
jmp
add
push
inc
ja
push
push
xchg
scas
int
ins
push
imul
fist
ja
(bad)
jmp
add
daa
fld
cmp
mov
aaa
sbb
imul
adc
fwait
lahf
pop
adc
or
jns
into
stos
jb
loop
jnp
pop
imul
mov
iret
(bad)
xchg
fcomp
or
(bad)
pop
imul
pop
je
loope
in
fsub
push
scas
mov
fld
and
mov
and
imul
call
ins
inc
popa
inc
imul
fcom
sub
call
addr16
fld
xchg
dec
hlt
xchg
and
xchg
dec
pop
or
sub
aas
aad
fst
sub
pop
imul
sahf
sub
shl
xchg
dec
pop
sbb
sub
(bad)
fst
(bad)
cld
add
xchg
fsubr
adc
mov
test
imul
xchg
sub
pop
sbb
imul
out
xchg
add
push
clc
xchg
loope
hlt
xchg
and
xchg
dec
hlt
xchg
and
mov
dec
inc
imul
fld
xchg
dec
hlt
xchg
and
mov
inc
inc
imul
imul
fsub
pop
mov
xor
mov
inc
clc
xchg
fcomp
jae
fisttp
scas
push
mov
add
pop
loopne
sub
xchg
fsubr
clc
add
pop
jns
fst
test
imul
imul
jns
fnstsw
shl
clc
xchg
push
or
xchg
ja
(bad)
xor
(bad)
ins
push
imul
fsub
pop
sub
clc
imul
and
xchg
xchg
add
es
fsub
test
cs
xchg
mov
ss
pop
fcom
int
(bad)
mov
jmp
cmp
call
cmps
and
ins
daa
fnsave
cmps
and
push
fnsave
scas
add
pop
loopne
pop
fst
in
pop
imul
fld
pop
xchg
and
iret
(bad)
fadd
xchg
daa
fld
imul
pop
push
mov
rol
xchg
and
mov
clc
and
cmp
mov
aam
clc
xchg
out
add
clc
fisttp
xor
xchg
movs
js
xchg
and
loop
sub
xchg
fcomp
and
sti
loop
int3
mov
xor
xchg
popf
enter
(bad)
mov
xor
test
fild
fcmovnu
int
sub
xor
xchg
cmps
pusha
repz
and
ins
daa
fnsave
fcomp
jae
fld
xchg
daa
test
add
inc
imul
push
or
and
loopne
ficom
ins
sbb
pop
imul
fiadd
xchg
fcom
leave
stc
and
loop
inc
fst
and
mov
mov
clc
xchg
lods
pop
cmps
mov
and
and
mov
mov
clc
xchg
scas
pop
stos
mov
and
scas
pop
(bad)
stos
pop
mov
xchg
xchg
add
xchg
fdiv
mov
repz
xchg
push
pop
mov
sub
mov
xchg
add
xchg
es
(bad)
les
clc
xchg
daa
test
add
fld
dec
dec
fisttp
out
or
lods
dec
mov
sub
outs
fs
fadd
xchg
mov
fcom
and
mov
aam
clc
xchg
out
add
xchg
fdiv
mov
sub
aaa
cld
fisttp
fbstp
sbb
imul
loopne
sub
xchg
fdiv
push
cmp
and
test
daa
fld
in
sbb
pop
repz
and
fbld
loopne
imul
mov
cmp
fucomp
jb
fld
loop
sub
xchg
fcom
ins
fld
imul
fcom
stc
and
imul
fcom
cmps
in
sbb
push
imul
iret
fild
loopne
pop
out
push
in
sbb
push
imul
iret
fld
loopne
pop
out
ins
cmps
in
sbb
fcomp
jae
fisttp
fbstp
sbb
imul
clc
jmp
fcomp
or
and
out
imul
fnstenv
push
iret
and
in
ret
add
xchg
int3
pop
mov
shl
clc
xchg
es
(bad)
jns
out
(bad)
clc
and
sbb
pop
stos
retf
clc
push
stc
and
test
fisttp
fcomp
add
loope
push
push
cmc
xchg
fild
imul
loope
push
fld
imul
pop
imul
loope
ins
daa
fld
imul
mov
test
clc
xchg
cs
punpckhbw
or
mov
(bad)
clc
fdivr
add
xchg
fsubr
mov
and
pop
fisub
clc
jmp
clc
xchg
daa
test
call
cld
shl
clc
xchg
out
add
imul
add
in
xor
add
pop
repz
and
xchg
daa
fld
imul
inc
imul
pop
sbb
imul
out
xchg
add
or
clc
xchg
js
pop
mov
movs
xor
cmp
mov
sbb
loope
xlat
dec
cmps
test
pusha
sbb
and
in
cmp
imul
and
mov
push
xor
call
imul
push
xor
call
imul
test
sub
fld
jmp
bound
pop
xor
add
xchg
mov
push
arpl
jecxz
and
xchg
and
or
jmp
ret
gs
jno
(bad)
or
push
inc
mov
bound
pop
add
fbstp
cmp
in
test
pop
imul
sbb
imul
and
mov
shl
imul
test
jmp
xchg
sahf
push
loopne
pop
in
movs
daa
add
push
aam
xchg
addr16
bound
push
xchg
sahf
push
lahf
fs
sbb
pop
out
movs
and
inc
xchg
and
mov
es
(bad)
imul
fld
sbb
pop
inc
xchg
and
xchg
scas
pop
cs
scas
mov
xchg
fidivr
sahf
daa
fld
sbb
sub
test
jmp
bound
push
jmp
movs
mov
xchg
fcomp
inc
pushf
daa
ss
and
mov
shl
inc
jl
test
jmp
sub
pop
jp
and
mov
(bad)
mov
sbb
imul
and
xchg
cwde
clc
ss
into
stos
jb
loop
ja
push
lods
test
sar
sub
daa
sub
loopne
and
imul
mov
imul
out
and
sbb
pop
sbb
push
rol
test
scas
arpl
push
imul
fdivr
scas
add
jmp
in
pop
xor
push
push
loopne
add
fucomp
adc
pop
aas
jo
bound
les
imul
and
xchg
fcom
push
rcl
push
aad
in
daa
cmp
outs
aas
daa
fisttp
xchg
ja
or
fld
fcomip
jmp
loopne
pop
mov
jo
cmc
sbb
sahf
xchg
fiadd
imul
lsl
xor
pop
xor
mov
cmp
mov
call
daa
mov
add
fisubr
dec
fisubr
daa
fld
sbb
pop
loopne
pop
stc
xchg
push
les
lods
cwde
or
pop
fnsave
test
sar
mov
push
rol
mov
xor
pop
loopne
pop
(bad)
jns
mov
xor
cwde
sti
ror
jmp
mov
push
rol
pop
jp
daa
test
mov
ss
bound
jb
je
jb
jno
adc
daa
fst
adc
and
call
ss
into
stos
jb
loop
retf
rcl
bound
xchg
push
and
outs
jmp
and
pop
imul
xor
mov
and
mov
scas
cwde
jmp
loopne
add
aas
iret
sbb
daa
push
inc
gs
sbb
mov
fnsave
scas
push
ins
imul
xor
ins
imul
lahf
pop
aas
iret
and
daa
mov
cmc
ja
pop
loopne
sub
loopne
sub
fld
imul
mov
imul
sbb
fist
daa
mov
imul
(bad)
dec
fld
imul
sti
push
imul
and
push
sbb
lock
mov
add
mov
aas
iret
not
daa
mov
in
and
push
int
sbb
mov
in
jbe
pop
aas
iret
call
daa
in
(bad)
sub
fisttp
scas
js
into
stos
jb
loop
je
push
loop
aad
sub
push
fs
fadd
imul
fimul
fbld
jecxz
stos
pusha
out
gs
sub
in
push
xchg
je
jb
dec
pushf
out
daa
xor
outs
push
(bad)
lahf
pop
or
adc
xchg
fstp
cmp
out
daa
xor
test
sub
or
sbb
pop
sbb
sbb
push
or
mul
bound
mov
fisttp
pop
add
ss
into
stos
jb
loop
je
push
loop
aad
sbb
sbb
int3
fwait
mov
leave
imul
inc
imul
test
xchg
int3
into
or
and
push
add
cmp
push
imul
in
sbb
mov
mov
out
jns
fld
xor
(bad)
and
jl
les
cmp
pushf
push
jl
xor
push
les
loopne
in
daa
pop
bound
daa
pop
bound
stos
call
mov
call
(bad)
jmp
and
pop
loop
aad
fisub
(bad)
sub
ss
xchg
mov
imul
push
les
cwde
clc
xchg
cdq
add
bound
xchg
fbstp
movs
mov
imul
xchg
fadd
mov
nop
popf
add
dec
cmps
push
retf
outs
daa
fisttp
fbld
or
arpl
imul
out
push
sub
pop
jp
and
xor
push
jmp
lock
fild
push
(bad)
or
daa
push
push
popa
sub
inc
div
xchg
mov
data16
push
sub
push
dec
sub
sub
loopne
add
sub
push
inc
sub
outs
lods
mov
xchg
pop
inc
not
mov
(bad)
stos
es
jecxz
aam
or
push
inc
sub
popa
lods
mov
xchg
(bad)
cmovo
fadd
lods
cwde
jecxz
jns
into
stos
inc
dec
xchg
stc
mov
mov
stc
pushf
mov
popa
push
and
mov
dec
jae
mov
xchg
stc
push
aad
stc
mov
inc
stc
mov
xchg
stc
addr16
xchg
stc
mov
inc
stc
mov
xchg
stc
addr16
xchg
stc
mov
ds
dec
xchg
stc
push
pop
xchg
stc
mov
mov
stc
pushf
or
mov
stc
mov
dec
jae
mov
xchg
stc
push
aad
stc
mov
test
push
add
jb
mov
xchg
stc
inc
dec
xchg
stc
mov
pusha
sub
xchg
stc
mov
xchg
push
iret
fld
imul
dec
xchg
ins
(bad)
inc
imul
dec
xchg
stc
mov
dec
ins
mov
xchg
loop
aad
stc
mov
adc
mov
xchg
jmp
int3
stc
mov
xchg
adc
mov
(bad)
gs
xchg
jmp
iret
stc
mov
xchg
or
mov
clc
imul
popf
pop
popa
push
and
xchg
lahf
pop
mov
xor
xor
mov
mov
stc
dec
fst
stc
mov
xchg
stc
movs
and
jae
mov
xchg
stc
pushf
mov
mov
dec
xchg
stc
push
sbb
stc
mov
ss
ja
xchg
stc
mov
mov
shr
xchg
stc
mov
xchg
stc
mov
xchg
stc
jg
xchg
stc
mov
mov
stc
push
in
xchg
stc
mov
push
xchg
mov
xchg
stc
lds
xchg
stc
mov
mov
stc
movs
and
jae
mov
xchg
stc
pushf
or
mov
push
sbb
stc
mov
ss
ja
xchg
stc
mov
mov
shr
xchg
stc
mov
xchg
stc
mov
xchg
stc
jg
xchg
stc
mov
mov
stc
push
in
xchg
stc
mov
push
xchg
mov
xchg
stc
lds
xchg
stc
mov
data16
mov
xchg
stc
inc
xor
js
and
stos
jb
loop
retf
jmp
pop
popa
lods
cwde
or
scas
cwde
or
or
cwde
out
sahf
inc
xor
xchg
push
sub
mov
mov
mov
mov
pop
add
pop
imul
cwde
shl
bound
mov
dec
sub
xchg
jle
(bad)
xchg
fnsave
loope
std
imul
fld
loopne
or
pop
(bad)
and
pop
imul
and
mov
out
inc
mov
in
push
xchg
lods
fstp
push
push
scas
adc
stos
pop
loopne
fdiv
sub
imul
xchg
nop
std
inc
in
push
pop
xchg
fstp
push
(bad)
imul
inc
xchg
int
fild
mov
fist
in
push
xchg
dec
aad
stc
daa
fld
in
das
push
add
imul
push
fild
lea
cmp
(bad)
cmp
pop
dec
imul
das
push
loopne
fdiv
cmp
outs
dec
imul
and
daa
sub
scas
cwde
retf
loopne
and
xlat
shl
scas
sub
xchg
fsub
pop
aaa
jl
les
cmp
cdq
bound
push
neg
push
rol
rol
push
mov
mov
faddp
mov
in
push
xchg
pop
sbb
in
mov
fsubr
clc
xchg
movs
sbb
loopne
aam
mov
shl
imul
inc
xor
scas
aam
fisttp
xor
loopne
fsubr
cmp
call
lods
call
imul
push
fild
sbb
xor
test
fisttp
call
daa
push
fild
and
push
int
sub
fldenv
push
adc
xchg
push
add
mov
bound
add
fist
mov
lahf
pop
pop
aaa
pop
inc
xchg
and
fld
jmp
imul
xor
mov
xor
mov
shl
fdivp
sbb
jns
or
imul
push
inc
mov
mov
jp
sub
loopne
shl
pusha
lock
cmp
leave
fs
add
add
inc
imul
test
fisttp
call
daa
push
fild
sub
push
int
sub
fldenv
push
adc
popf
push
add
mov
bound
push
cdq
scas
sbb
loop
add
jmp
inc
imul
ds
scas
fsubp
clc
fidivr
lods
call
mov
(bad)
pusha
inc
imul
fsubr
sbb
cmp
or
loop
dec
jecxz
fisttp
scas
sar
sbb
pop
push
aas
push
neg
scas
sbb
fisub
push
loopne
fiadd
lods
call
xchg
fcomp
popa
dec
(bad)
dec
fild
dec
(bad)
daa
fld
push
aad
push
outs
fld
loopne
cmp
stos
cwde
out
cmp
test
cmp
test
adc
cwde
xlat
loopne
and
iret
xchg
dec
imul
fld
pop
out
pop
aaa
jl
les
cmp
imul
cs
sub
jmp
fsub
mov
(bad)
je
add
lahf
jbe
imul
xor
rol
push
dec
or
mov
xchg
and
jbe
pop
mov
loopne
mov
fsub
xchg
loope
clc
push
ins
fld
xchg
mov
gs
push
(bad)
sahf
int
std
outs
out
sbb
push
xlat
xor
push
xchg
push
fsub
clc
xchg
cmps
cwde
clc
push
das
stos
int3
scas
mov
fucomp
loope
fld
loopne
sub
push
and
clc
xchg
adc
sub
clc
pop
stos
pop
clc
xchg
fsub
push
add
sub
sub
push
adc
mov
imul
push
rol
mov
add
mov
imul
and
xchg
ja
add
daa
fisttp
xchg
scas
sub
clc
sbb
gs
mov
adc
pop
imul
clc
xchg
ja
push
jno
(bad)
call
xchg
fdiv
clc
(bad)
and
xchg
iret
sub
daa
and
sbb
dec
add
sub
push
adc
das
dec
imul
fld
in
es
xchg
fmul
pop
in
and
xchg
fmul
xchg
fcomp
jae
(bad)
clc
lahf
pop
add
add
stos
pop
clc
xchg
fsub
push
add
fld
jmp
daa
mov
clc
lahf
pop
add
inc
imul
punpckhwd
fld
out
push
push
loopne
mov
jno
mov
bound
and
and
jae
fld
imul
sti
cmp
outs
push
daa
rol
add
mov
add
and
fsubr
pop
imul
fnsave
scas
cwde
jmp
(bad)
jmp
loopne
jb
jno
push
add
and
fsubr
pop
imul
xchg
pop
imul
mov
mov
mov
je
pop
imul
clc
sbb
and
fsubr
pop
imul
mov
loopne
in
jmp
loopne
add
and
jge
and
fsubr
out
outs
daa
fld
jmp
mov
lock
sbb
data16
fisttp
sub
lea
dec
fild
imul
pop
add
mov
xchg
push
sar
sbb
xor
push
test
int3
jmp
fsubr
jb
fsubr
pop
imul
test
and
xor
sbb
xor
ss
jb
loop
retf
leave
push
lods
test
loop
lds
(bad)
lds
call
daa
add
(bad)
mov
sbb
imul
mov
xchg
push
sar
sbb
xor
push
test
int3
loope
sub
lea
daa
mov
xchg
push
int
sbb
xor
push
test
(bad)
ss
fld
sahf
rcl
sbb
sbb
xor
or
(bad)
lds
out
push
push
loopne
mov
jo
mov
xchg
push
and
sti
mov
add
dec
sub
rcr
enter
imul
push
jmp
push
rcr
in
push
dec
(bad)
daa
fld
add
mov
add
mov
mov
fucomp
leave
popa
fld
retf
inc
imul
sbb
push
xchg
scas
sbb
pop
fisttp
inc
imul
push
inc
xchg
js
into
stos
sahf
mov
mov
out
push
(bad)
loop
stc
add
xor
popa
in
mov
push
jb
lods
or
bound
dec
adc
icebp
mov
push
lds
push
push
xchg
scas
add
pop
cmps
loope
fs
repz
xlat
(bad)
cmp
test
add
hlt
(bad)
jb
shr
xchg
arpl
daa
push
(bad)
jmp
cmp
test
pusha
cld
test
pop
sbb
push
jmp
cmps
loope
arpl
mov
sbb
imul
cwde
jmp
bound
mov
xlat
(bad)
cmp
aaa
inc
imul
and
daa
fisttp
xchg
push
ror
push
int
lods
fld
loop
and
cmp
push
fild
ss
out
add
bound
movs
add
fstp
jl
les
cmp
lods
or
(bad)
mov
pop
scas
sub
push
xor
loopne
loopne
push
add
(bad)
sub
fisttp
sbb
pop
pop
shl
adc
fnstenv
xlat
lods
push
test
and
test
popa
out
xchg
push
cmp
bound
pop
imul
and
fistp
out
xchg
sahf
mov
nop
scas
or
sahf
mov
test
xchg
lock
aaa
add
jb
mov
lods
mov
fsubr
daa
mov
aad
fld
jmp
or
bound
cmp
fild
pop
aaa
jl
les
cmp
sbb
movs
mov
cmps
sub
int3
shl
stc
xchg
daa
pop
mov
imul
and
xchg
ja
jb
iret
pop
not
scas
push
push
mov
fidiv
test
daa
pop
mov
imul
pop
imul
fld
xchg
push
leave
out
in
fld
loopne
add
push
imul
and
xchg
scas
pop
rcl
jmp
cli
xchg
dec
pusha
fist
mov
clc
xchg
fcom
push
daa
fld
imul
pop
imul
fld
sahf
rcl
and
loopne
and
dec
fld
imul
fisttp
scas
lods
cwde
pavgb
push
(bad)
jmp
pop
sbb
push
rol
push
xchg
movs
fsub
clc
push
jmp
cmp
lahf
pop
xchg
push
aad
lods
(bad)
fld
jmp
pop
xchg
xchg
and
xchg
fdiv
test
daa
fnstsw
lock
xchg
and
inc
imul
and
in
fld
jmp
pop
shr
sub
jmp
inc
imul
fstp
aam
and
xchg
jo
cmp
adc
pop
imul
mov
out
and
xchg
scas
sbb
ins
(bad)
fld
shr
sub
jmp
out
daa
and
add
lgdtd
add
fsubr
xchg
fldenv
out
jns
fld
jmp
pop
shr
sub
jmp
out
daa
and
or
sbb
loopne
sub
loopne
sbb
xchg
fcom
mov
xlat
pop
imul
daa
add
xor
mov
lock
xchg
fmul
pop
ds
pop
inc
imul
test
add
pop
sti
xchg
fldenv
push
add
add
ja
outs
sub
xor
mov
lock
xchg
and
inc
imul
and
add
pop
jmp
pop
xchg
xchg
and
xchg
fdiv
test
xlat
push
rol
xlat
pop
imul
daa
add
mov
mov
clc
(bad)
and
xchg
iret
test
dec
(bad)
sub
and
xor
sbb
xor
xlat
pop
imul
daa
add
xor
mov
lock
xchg
fmul
pop
ds
arpl
pop
ret
jns
sub
inc
daa
fucomp
icebp
fld
ror
fiadd
imul
push
mov
ds
dec
inc
imul
and
cmp
test
loop
and
xchg
fmul
pop
cmp
cmps
inc
imul
xchg
fs
sahf
ficomp
ins
pop
(bad)
out
and
rol
imul
and
sbb
inc
imul
test
daa
fnstsw
lock
xchg
and
inc
imul
and
sub
jecxz
xchg
iret
daa
inc
imul
fstp
ins
pop
into
outs
mov
xchg
and
xchg
fdiv
test
daa
fnstsw
lock
xchg
and
inc
imul
and
popf
fld
jmp
pop
xchg
push
leave
mov
(bad)
stc
xchg
ja
popf
mov
fst
xchg
lahf
pop
imul
pop
imul
daa
add
mov
mov
(bad)
(bad)
and
xchg
iret
outs
inc
imul
jl
imul
sbb
rol
xlat
pop
imul
daa
add
mov
mov
clc
(bad)
and
xchg
iret
mov
ret
popa
iret
out
imul
fstp
ins
pop
(bad)
out
inc
fld
rol
imul
and
sbb
inc
imul
test
daa
rol
jmp
out
das
fld
scas
mov
fld
imul
adc
and
push
gs
xchg
fsub
adc
push
mov
push
gs
xchg
fcom
mov
sbb
call
cmp
sub
jmp
sbb
es
sbb
lds
xchg
fisub
mov
stos
pusha
pop
imul
add
stos
pusha
pop
imul
pushf
pop
imul
adc
and
call
fcomp
imul
and
xchg
xchg
sub
xchg
fsub
jb
stos
pop
pop
imul
and
xchg
fmul
pop
cmp
xchg
inc
imul
repz
imul
fstp
ins
pop
into
outs
xor
lahf
pop
xchg
xchg
and
xchg
fdiv
test
xlat
push
rol
xlat
pop
imul
daa
add
mov
mov
(bad)
(bad)
and
xchg
iret
inc
daa
pop
ret
popa
iret
add
daa
fs
sahf
ficomp
ins
pop
into
outs
cdq
(bad)
lahf
pop
xchg
xchg
and
xchg
fdiv
test
fsub
clc
jmp
mov
push
adc
popa
clc
xchg
fcom
test
fldenv
clc
loopne
xor
xchg
fcom
xlat
push
rol
cwde
sbb
mov
xor
push
daa
(bad)
xchg
daa
rol
loopne
hlt
mul
loope
inc
jne
(bad)
imul
and
data16
mov
imul
and
loopne
xor
xchg
fsub
jb
dec
test
sub
push
sbb
xchg
inc
imul
push
repz
fisub
test
fnsave
scas
sbb
call
addr16
fld
in
fld
xchg
fmul
clc
xchg
fcom
ins
shl
cli
xchg
ja
pop
push
daa
fisttp
xchg
ja
scas
xchg
fsub
test
fsub
clc
xchg
xchg
sub
xchg
fsub
jb
fsubr
xchg
fisub
mov
(bad)
stc
xchg
ja
arpl
cld
loop
imul
mov
lahf
and
xchg
lods
pop
mov
scas
iret
jnp
imul
fstp
ins
pop
into
outs
xor
lahf
pop
xchg
xchg
and
xchg
fdiv
test
daa
fnstsw
lock
xchg
and
inc
imul
and
leave
sbb
pop
jmp
pop
shr
sub
jmp
out
daa
and
sbb
xchg
xchg
sub
out
push
daa
fld
imul
and
xchg
ja
mov
fsub
clc
cmp
(bad)
xchg
fcomp
gs
pop
call
sub
xchg
fsub
outs
push
stc
lahf
pop
xchg
xchg
and
xchg
fdiv
test
daa
fnstsw
lock
xchg
and
inc
imul
and
popa
sbb
pop
jmp
pop
shr
sub
jmp
fldcw
daa
and
add
sbb
loopne
hlt
mul
loope
sahf
push
daa
fnstsw
lock
xchg
and
inc
imul
and
rcr
fld
jmp
pop
xchg
xchg
and
xchg
fdiv
test
daa
fnstsw
lock
xchg
and
pop
imul
push
mov
ds
jecxz
sub
mov
and
jecxz
out
inc
sbb
pop
shr
sub
jmp
fldcw
daa
and
sub
call
daa
xor
mov
lock
xchg
and
inc
imul
and
dec
sbb
pop
jmp
pop
shr
sub
jmp
out
daa
and
sbb
sbb
adc
inc
lock
movs
daa
add
xor
mov
lock
xchg
fmul
pop
ds
jg
imul
hlt
fldcw
daa
and
adc
loope
mov
push
rol
xlat
pop
imul
daa
add
mov
mov
clc
(bad)
and
xchg
iret
pop
cmp
pop
ret
popa
dec
rcr
daa
and
or
jno
sahf
xlat
pop
imul
daa
add
mov
mov
clc
(bad)
and
xchg
iret
xchg
cmp
pop
ret
popa
dec
(bad)
fldcw
daa
and
adc
sbb
loopne
hlt
mul
loope
jmp
fld
lock
xchg
and
inc
imul
and
gs
pop
jmp
cli
xchg
ja
adc
(bad)
sub
(bad)
out
movs
sbb
pop
jmp
pop
shr
sub
jmp
out
daa
and
sub
sbb
loopne
hlt
mul
loope
pop
mov
(bad)
(bad)
and
xchg
iret
outs
cmp
pop
ret
popa
iret
mov
imul
fstp
ins
pop
into
outs
cdq
(bad)
lahf
pop
xchg
xchg
and
xchg
fdiv
test
daa
fnstsw
lock
mov
daa
fst
call
cmp
jecxz
imul
ret
cmp
fs
sahf
ficomp
ins
pop
into
outs
cdq
(bad)
lahf
pop
xchg
xchg
and
xchg
fdiv
test
gs
(bad)
and
xchg
iret
idiv
imul
sub
out
mov
pop
imul
sub
mov
fsub
clc
sbb
sbb
sbb
lock
movs
daa
add
xor
mov
lock
xchg
fmul
pop
ds
jnp
imul
or
mov
fsub
clc
adc
mov
add
mov
imul
xor
mov
iret
and
xchg
cmps
sbb
daa
(bad)
(bad)
and
xchg
iret
imul
daa
mov
in
sub
xchg
fmul
clc
xchg
fsub
mov
fsub
clc
sub
and
inc
adc
pop
xchg
xchg
and
xchg
fdiv
mov
lahf
and
xchg
scas
sbb
jmp
fisub
pop
aaa
jl
les
cmp
imul
mov
loope
clc
imul
movs
pop
imul
mov
mov
fisttp
xchg
ja
ficom
(bad)
dec
pop
fisubr
daa
push
adc
fadd
imul
pop
inc
xchg
es
inc
xchg
sbb
jne
dec
(bad)
cli
lahf
pop
add
inc
imul
mov
mov
std
add
dec
fld
daa
mov
imul
and
jmp
mov
scas
cmp
imul
push
lahf
rcl
imul
pop
cli
xchg
fcom
add
fcomp
mov
pop
aas
push
(bad)
fmul
xchg
lods
cwde
psrad
fadd
imul
and
xchg
scas
and
ss
cwde
pavgb
pop
shr
pop
daa
fisttp
and
clc
xchg
jno
pop
pop
daa
fisttp
xchg
fsubr
xchg
fsub
out
and
jb
mov
pop
and
xchg
stos
mov
push
fisub
clc
loopne
hlt
jmp
loopne
out
inc
adc
pop
loopne
test
mov
fisub
clc
xor
pop
ja
fsub
clc
fdivr
(bad)
imul
push
jae
fsub
mov
push
and
xchg
stos
mov
push
fisub
clc
add
or
iret
aaa
xor
push
cmp
and
add
mov
in
jns
xchg
fmul
pop
loopne
in
jmp
loopne
xchg
push
or
imul
and
cmp
fld
daa
mov
mov
(bad)
daa
fld
xchg
movs
sbb
pusha
out
or
iret
rdmsr
imul
fild
imul
mov
push
(bad)
clc
xchg
ja
sbb
and
cmp
push
xor
and
xchg
xchg
dec
cli
xchg
fsub
mov
fisub
clc
xchg
xchg
push
cli
xchg
fsub
mov
fisub
clc
xchg
xchg
jge
xchg
fmul
clc
xchg
ja
fsub
test
fisub
clc
pusha
out
or
iret
mov
imul
fild
imul
adc
or
imul
push
shl
imul
in
(bad)
clc
xchg
ja
mov
mov
mov
pop
shr
pop
add
pop
in
gs
xchg
fmul
pop
jmp
clc
xchg
arpl
pop
imul
mov
xchg
fcom
mov
fadd
imul
and
xchg
daa
fld
daa
test
out
xchg
fsub
push
imul
and
xchg
ja
in
fsub
pop
in
jns
xchg
fmul
clc
xchg
ja
pop
add
mov
add
mov
add
push
adc
fucomp
jge
fld
pusha
out
add
jne
xchg
fdiv
xchg
fsubr
xchg
fsub
outs
jnp
lahf
pop
add
inc
imul
jmp
mov
fucomp
inc
scas
and
mov
(bad)
clc
xchg
ja
jb
gs
sub
fld
loopne
aam
sbb
mov
push
fucomp
loope
fld
jmp
fcomp
(bad)
in
dec
and
xchg
sbb
jne
cs
jae
dec
fnstsw
daa
xor
test
mov
clc
xchg
daa
test
pop
imul
adc
(bad)
mov
and
imul
and
cmp
pop
daa
(bad)
dec
mov
sub
push
adc
mov
xchg
fcomp
sbb
clc
imul
inc
cli
xchg
fcomp
mov
int3
retf
test
mov
pop
call
and
mov
imul
jmp
addr16
daa
fst
mov
(bad)
fadd
pop
xor
daa
and
sbb
in
outs
scas
and
pop
aaa
jl
lds
mov
cmp
mov
bound
outs
ffree
mov
xlat
push
rcr
rcl
fld
loopne
mov
jb
iret
pop
xor
daa
push
lds
scas
mov
xchg
push
int
movs
adc
pop
loopne
mov
out
test
in
mov
pop
call
xchg
cwde
stc
xchg
mov
push
rcr
xlat
xchg
mov
in
int
cmp
out
mov
loope
(bad)
jmp
mov
push
add
fucomip
jmp
loopne
add
(bad)
lds
xlat
popf
push
xor
sbb
xchg
push
aad
cdq
movs
sbb
imul
push
xchg
stos
cdq
add
out
sub
fld
xchg
push
int
fisub
mov
jb
mov
add
pop
imul
cwde
stc
in
fild
xchg
mov
push
rcl
jns
(bad)
out
ins
push
fld
in
and
outs
in
je
pop
add
mov
xor
mov
dec
and
pushf
out
pop
imul
fst
push
in
pop
imul
loop
outs
ret
iret
inc
aaa
imul
or
retf
pop
scas
and
shr
cmp
pop
imul
cmp
sub
mov
loop
daa
fisttp
in
mov
and
push
xchg
xchg
sbb
xchg
fdiv
test
add
and
xchg
push
shr
cmp
fld
rcl
cmp
xchg
scas
sbb
test
mov
popf
sbb
push
adc
and
cmp
and
iret
push
sub
aam
sbb
push
fld
cmp
push
out
cmp
jecxz
push
test
out
cmp
or
scas
and
mov
scas
push
sbb
mov
xor
push
push
loopne
sbb
fucomp
lds
fld
cmp
mov
arpl
sti
mov
sahf
rcl
and
loopne
hlt
mul
loope
outs
ins
fld
or
mov
fnsave
scas
sbb
scas
pop
push
xchg
jne
or
fsub
test
fst
jmp
psrlw
pop
imul
add
xchg
lods
pop
div
scas
sub
outs
daa
clc
lahf
pop
in
fucom
xchg
fmul
pop
jmp
pop
shr
sub
jmp
out
daa
push
sub
clc
cmp
fbstp
imul
sbb
push
daa
fucomp
rcl
pop
imul
jnp
imul
fstp
aam
cmp
pop
mov
fisttp
xchg
jo
call
xor
mov
lock
xchg
and
inc
imul
out
pop
imul
pop
mov
and
mov
sbb
loopne
sub
loopne
xor
xchg
fcom
adc
pop
imul
daa
add
mov
mov
mov
daa
cmp
push
pop
daa
fld
daa
fnstsw
lock
xchg
and
pop
imul
push
mov
ds
test
sub
push
mov
ds
sub
jns
test
add
pop
pop
mov
and
push
add
stos
pop
pop
mov
and
hlt
out
pop
imul
pop
imul
daa
add
mov
mov
mov
daa
cmp
(bad)
pop
daa
fld
fisttp
xchg
ja
mov
lods
das
pop
icebp
imul
pop
imul
daa
add
mov
mov
mov
daa
cmp
xchg
pop
daa
fld
fisttp
xchg
ja
jp
daa
fld
daa
fnstsw
lock
xchg
and
pop
imul
push
mov
ds
test
sub
push
mov
ds
ret
xor
jns
hlt
fldcw
daa
push
sub
clc
cmp
repz
popa
iret
aaa
imul
fstp
ins
pop
leave
outs
cdq
(bad)
lahf
pop
in
fucom
xchg
fmul
pop
jmp
mov
daa
push
sub
clc
cmp
xor
imul
ja
imul
fstp
ins
pop
leave
outs
cdq
(bad)
lahf
pop
in
fucom
xchg
fmul
pop
jmp
pop
in
fucom
xchg
fmul
pop
jmp
pop
shr
sub
jmp
out
daa
push
sub
clc
cmp
push
imul
xor
jge
(bad)
sbb
push
sub
clc
cmp
fld
daa
push
sub
clc
cmp
fwait
imul
sti
imul
fstp
ins
pop
leave
outs
cdq
(bad)
lahf
pop
in
fucom
xchg
fmul
pop
jmp
pop
in
fucom
xchg
fmul
pop
jmp
pop
sahf
rcl
and
loopne
xor
mov
lock
xchg
and
inc
imul
in
pop
imul
add
daa
inc
lock
scas
or
imul
clc
ds
retf
fld
daa
push
mov
ds
jnp
imul
pop
aaa
imul
fstp
ins
pop
leave
outs
cdq
(bad)
lahf
pop
in
fucom
xchg
fmul
pop
jmp
pop
in
fucom
xchg
fmul
pop
jmp
pop
imul
fs
sahf
ficomp
ins
pop
leave
outs
cdq
(bad)
lahf
pop
in
fucom
xchg
fmul
pop
jmp
pop
shr
sub
jmp
aaa
imul
fstp
aam
cmp
pop
mov
fisttp
xchg
jo
add
fld
fisttp
xchg
ja
adc
fld
daa
mov
add
mov
add
fld
sub
inc
daa
fisttp
xchg
cmps
sbb
daa
fisttp
xchg
ja
adc
ins
imul
pusha
pop
mov
and
xchg
and
xchg
fdiv
clc
(bad)
add
xchg
iret
pop
sub
daa
in
(bad)
sub
ror
in
ret
add
xchg
scas
sbb
jl
les
cmp
imul
fs
and
test
mov
in
icebp
call
daa
push
pop
popa
je
scas
inc
daa
fisttp
es
xchg
std
fisub
clc
sar
pop
imul
es
xchg
scas
sbb
cmp
sub
xor
outs
imul
test
scas
pop
cmps
xchg
fsub
ins
jns
fisttp
xchg
ja
retf
(bad)
fld
in
imul
(bad)
sti
lahf
pop
add
fild
imul
aam
mov
mov
push
(bad)
clc
xchg
ja
sbb
and
cmp
fwait
sub
cmp
(bad)
mov
and
xchg
fsub
push
in
imul
jp
and
jmp
jg
daa
(bad)
sti
lahf
pop
in
and
xchg
fmul
pop
in
imul
in
(bad)
clc
xchg
ja
sahf
inc
daa
fucomp
fcmovb
and
loopne
inc
cli
xchg
fcom
fist
arpl
stc
xchg
fmul
pop
jmp
mov
fsub
inc
imul
and
xchg
fld
imul
shr
and
xchg
fisttp
scas
stos
pop
mov
xor
push
or
and
cmp
and
daa
mov
add
mov
add
mov
in
and
xchg
fmul
sub
daa
aam
mov
and
and
mov
imul
movs
cld
xchg
fcom
xchg
jge
xchg
fdiv
outs
adc
lahf
pop
in
and
xchg
fmul
pop
jmp
clc
xchg
daa
ss
loopne
js
daa
push
adc
test
sub
xor
mov
dec
xor
push
daa
fld
xchg
es
adc
and
push
and
and
pop
add
sub
sub
push
mov
clc
xchg
ja
out
mov
fucomip
jmp
loopne
push
add
inc
imul
outs
clc
xchg
movs
sbb
push
fsub
pop
imul
fisttp
xchg
ja
out
clc
shl
clc
jmp
mov
daa
(bad)
fsubr
xchg
fsub
mov
stos
es
xchg
ja
dec
inc
daa
fisttp
xchg
ja
mov
fisub
clc
sbb
sbb
imul
and
sub
sub
inc
imul
lea
sti
lahf
pop
aas
iret
das
sub
pop
ret
jge
sbb
fld
daa
xor
mov
mov
ss
call
clc
adc
sbb
add
xor
and
jmp
xchg
xchg
fsub
out
mov
jecxz
mov
push
es
xchg
scas
sbb
fdiv
pop
imul
and
imul
and
xchg
ja
mov
imul
and
push
push
fld
loopne
hlt
jmp
loopne
mov
fisub
clc
xor
pop
aaa
jl
lds
mov
cmp
mov
bound
sar
mov
push
sar
xchg
imul
test
and
in
fist
cmp
out
sbb
loope
push
cmp
pop
pop
imul
sub
push
inc
daa
(bad)
sbb
push
push
outs
es
out
imul
(bad)
and
push
inc
xchg
ja
pop
aas
dec
mov
pop
add
xor
mov
scas
sbb
jno
mov
daa
fisttp
sbb
xor
mov
ss
fcomip
jmp
loopne
pop
xor
push
push
loopne
add
fucomp
loope
fld
aas
jo
icebp
ins
or
fld
sahf
rcl
and
loopne
mov
xchg
push
aad
or
push
jmp
push
shl
add
ss
add
rol
imul
comiss
mov
xchg
push
ror
xchg
ja
dec
fcomp
and
daa
fnsave
scas
sub
jne
daa
(bad)
jno
sahf
inc
daa
fisttp
aaa
out
push
push
loopne
pop
jmp
jo
add
lock
inc
sbb
es
add
sbb
fisub
push
add
add
stos
cwde
repz
imul
ja
pop
add
imul
fucomp
jge
fld
xchg
cwde
stc
jmp
inc
imul
pop
ret
jno
cwde
repz
outs
sub
fld
xchg
adc
cwde
sub
xor
xchg
inc
and
sub
xchg
movs
and
into
stos
jno
mov
loopne
hlt
jmp
loopne
pop
add
mov
add
mov
add
mov
add
(bad)
dec
fld
iret
repz
mov
fsubr
or
fucomp
in
fld
call
daa
mov
aas
dec
in
clc
pop
iret
inc
inc
imul
mov
aas
dec
in
clc
pop
cmps
jl
imul
mov
aas
dec
in
clc
pop
or
imul
mov
aas
dec
in
clc
pop
cmp
imul
push
call
push
rol
mov
fsubr
das
mul
out
pop
paddusw
add
mov
fsubr
daa
mul
out
dec
paddusw
add
mov
fsubr
xchg
retf
out
jns
fld
add
mov
fsubr
jae
gs
imul
hlt
jmp
loopne
push
aas
dec
in
clc
pop
pop
inc
inc
imul
mov
aas
dec
in
clc
pop
xlat
inc
inc
imul
mov
aas
dec
in
clc
pop
mov
inc
imul
mov
aas
dec
in
clc
pop
mov
and
push
jmp
push
shl
push
push
loopne
mov
rol
scas
cwde
sti
loopne
mov
xchg
adc
cmp
frstor
stc
pop
inc
imul
inc
imul
mov
xchg
adc
sub
xor
movs
push
mov
pop
inc
imul
inc
imul
push
call
push
rol
and
inc
mov
sti
pop
imul
ins
xchg
fsubr
sub
data16
lea
fld
add
and
jne
popf
pop
sub
fst
out
(bad)
fsubr
sbb
addr16
test
(bad)
xor
pushf
pop
add
mov
out
(bad)
fsubr
das
mul
out
cmc
add
pop
add
and
dec
mov
sti
pop
imul
ins
xchg
fsubr
daa
mul
out
adc
fld
loopne
fdivr
loopne
mov
xchg
adc
sub
xor
movs
jne
pushf
pop
add
pop
inc
imul
inc
imul
or
jb
loop
retf
leave
push
ds
xor
rol
push
inc
imul
and
xchg
scas
sbb
cld
lahf
pop
aas
iret
pop
sti
xchg
fcomp
jns
aad
sub
pop
call
add
(bad)
out
add
fld
in
sub
and
push
inc
push
rol
and
pop
mov
mov
ja
inc
xchg
or
idiv
dec
(bad)
dec
fld
jmp
(bad)
cld
lahf
pop
add
fild
imul
jle
leave
data16
fsubr
xor
data16
ja
cmp
bound
out
or
xor
outs
lods
cld
lahf
pop
add
push
inc
imul
pop
retf
inc
imul
inc
imul
inc
imul
inc
xchg
or
imul
iret
mov
adc
fld
sub
mov
mov
(bad)
iret
and
jle
leave
(bad)
dec
fild
dec
(bad)
dec
fsubr
dec
(bad)
dec
popa
add
add
mov
add
xor
mov
daa
(bad)
jno
aaa
xchg
adc
cwde
sub
xor
ins
imul
(bad)
fsubr
inc
leave
data16
dec
jmp
imul
mov
imul
lahf
pop
add
push
inc
imul
pop
retf
inc
imul
inc
imul
inc
imul
pop
add
das
add
fld
cmp
fsubr
daa
mov
mov
(bad)
iret
iret
and
jle
retf
ins
imul
(bad)
fsubr
inc
leave
data16
dec
or
imul
(bad)
dec
fld
imul
outs
mov
lahf
pop
add
xor
movs
gs
in
das
imul
jmp
pop
xchg
adc
pop
add
pop
imul
das
add
fld
cmp
(bad)
daa
mov
mov
(bad)
iret
inc
and
jle
mul
ins
imul
(bad)
fsubr
addr16
(bad)
dec
mov
pop
add
mov
imul
pop
inc
imul
pop
retf
inc
imul
pop
add
imul
outs
sbb
lahf
pop
add
mov
push
iret
inc
inc
imul
mov
xchg
adc
cwde
sub
mov
xchg
adc
sub
(bad)
dec
ja
imul
fld
sub
mov
mov
(bad)
iret
fbld
imul
fisttp
scas
dec
(bad)
pop
adc
imul
inc
imul
cmp
(bad)
fld
imul
add
cmps
lea
clc
lahf
pop
add
fucomp
test
or
imul
mov
xchg
adc
cwde
sub
mov
xchg
adc
pop
add
outs
add
fld
add
fld
cmp
(bad)
daa
mov
mov
(bad)
iret
pop
and
daa
jle
retf
xchg
dec
(bad)
pop
adc
imul
inc
imul
pop
add
fld
imul
pop
imul
lahf
pop
add
push
inc
imul
pop
retf
inc
imul
inc
imul
inc
imul
push
imul
(bad)
daa
fst
gs
inc
imul
pop
and
in
sahf
sub
mov
xchg
adc
cwde
sub
mov
xchg
adc
pop
add
fld
imul
arpl
daa
fld
cmp
(bad)
daa
mov
mov
(bad)
iret
adc
hlt
data16
scas
dec
(bad)
pop
adc
imul
inc
imul
push
imul
(bad)
daa
fst
and
inc
imul
pop
sub
mov
xchg
adc
cwde
sub
mov
xchg
adc
pop
add
fadd
imul
adc
daa
fld
sub
mov
mov
(bad)
and
inc
imul
cwde
sub
mov
xchg
adc
pop
add
push
pop
imul
fld
sub
mov
mov
(bad)
and
inc
imul
rol
and
pop
mov
and
or
mov
add
fld
imul
push
add
add
dec
(bad)
sub
mov
imul
out
mov
fld
retf
inc
imul
inc
imul
inc
imul
pop
imul
fld
sub
mov
mov
(bad)
and
cld
pop
imul
cwde
sub
mov
xchg
adc
adc
mov
je
imul
fld
sub
mov
mov
(bad)
iret
mov
lahf
retf
out
add
and
shl
cmp
adc
into
stos
jb
loop
retf
int
ds
xor
lods
dec
pop
call
add
push
inc
imul
sub
xchg
scas
sbb
cld
lahf
pop
aas
iret
enter
pop
ret
jns
aad
sub
push
inc
push
rol
and
popa
mov
std
pop
imul
fld
imul
inc
imul
sub
ror
inc
cdq
ja
pop
add
mov
imul
push
inc
imul
mov
sub
daa
and
pop
mov
lea
lods
cwde
inc
sub
ins
jge
leave
outs
imul
add
imul
pop
and
lock
fld
add
and
pop
mov
and
sub
or
pop
imul
ins
cmp
outs
pusha
daa
pop
push
add
add
dec
pop
fsubr
daa
mov
sbb
mov
pop
add
mov
add
mov
add
mov
add
(bad)
dec
aad
jge
pop
daa
imul
mov
fsubr
add
data16
mov
fld
add
and
pop
mov
and
or
mov
add
mov
add
fsubr
daa
mov
mov
(bad)
iret
or
imul
fisttp
scas
dec
cmps
(bad)
daa
mov
add
imul
fucomp
stc
cmp
pop
add
inc
imul
pop
xchg
adc
jle
daa
fld
imul
mov
add
pop
imul
fucomp
xor
xor
dec
push
iret
inc
inc
imul
mov
xchg
adc
cwde
sub
mov
xchg
adc
sub
(bad)
dec
leave
ins
adc
pop
jmp
(bad)
std
lahf
pop
add
xor
movs
jmp
loopne
je
daa
mov
xchg
adc
cwde
sub
mov
xchg
adc
sub
(bad)
dec
leave
outs
(bad)
daa
fld
add
fsubr
daa
mov
mov
(bad)
iret
daa
sbb
jle
mul
out
push
shl
clc
add
and
pop
mov
and
sub
aaa
mov
imul
leave
push
imul
lea
std
lahf
pop
add
push
inc
imul
pop
retf
inc
imul
call
ins
imul
(bad)
dec
mov
pop
add
fld
imul
inc
mov
(bad)
cld
lahf
pop
add
xor
movs
pop
mov
and
pop
mov
and
sub
aaa
mov
imul
fld
add
pop
imul
lahf
pop
add
push
inc
imul
pop
retf
inc
imul
inc
imul
inc
imul
pop
imul
(bad)
daa
fst
and
inc
imul
pop
sub
movs
sub
mov
xchg
adc
cwde
sub
mov
xchg
adc
pop
add
fadd
imul
sbb
daa
fld
cmp
fisubr
daa
mov
mov
(bad)
iret
bndldx
jle
enter
imul
(bad)
fsubr
inc
leave
data16
dec
and
imul
(bad)
dec
fld
imul
outs
mov
lahf
pop
add
xor
movs
leave
test
xor
pushf
pop
add
and
or
mov
imul
leave
outs
imul
jg
imul
pop
imul
out
or
fld
retf
inc
imul
call
ins
imul
(bad)
dec
cmc
ins
das
dec
leave
outs
imul
add
dec
(bad)
sub
mov
imul
out
dec
cmp
pop
retf
inc
imul
inc
imul
inc
imul
ins
jge
fld
jmp
(bad)
std
lahf
pop
add
fild
imul
jle
mul
ins
imul
(bad)
fsubr
inc
leave
data16
dec
inc
pop
imul
(bad)
dec
fld
jmp
(bad)
(bad)
lahf
pop
add
xor
movs
icebp
test
clc
xchg
scas
and
out
mov
jns
les
cmp
cwde
aas
jne
inc
pop
rcr
pop
add
mov
imul
(bad)
dec
fld
imul
push
shr
and
in
mov
pop
imul
pop
imul
xor
test
ffree
sub
fld
imul
push
inc
popf
ja
inc
xchg
ja
jb
dec
loopne
sub
mov
imul
and
jmp
dec
add
and
dec
(bad)
fisubr
daa
mov
mov
(bad)
sbb
and
iret
ins
loope
fcomp
jno
cwde
jmp
test
add
bound
outs
push
xchg
lahf
pop
add
fld
jmp
fcomp
jno
pop
pusha
imul
xor
mov
cmps
xor
push
cdq
rcr
arpl
pop
rol
fld
add
pop
pop
xchg
fsub
push
xor
cdq
scas
sbb
cmp
fld
imul
mov
outs
aam
lahf
pop
in
(bad)
xchg
fmul
pop
jmp
ss
fldenv
mov
daa
and
xchg
ja
or
fld
js
sub
imul
sub
imul
fld
jmp
ss
fsub
mov
daa
and
xchg
ja
fidivr
fld
js
in
mov
daa
push
sub
clc
cmp
pop
adc
pop
jp
and
inc
imul
retf
cmps
mov
outs
or
mov
(bad)
out
std
xor
pop
loopne
sub
loopne
and
xchg
fcom
pop
and
sbb
mov
fsub
mov
daa
and
xchg
ja
jbe
daa
fld
js
jg
sub
push
sub
clc
cmp
xchg
imul
test
add
ins
inc
imul
retf
cmps
mov
outs
push
mov
(bad)
out
inc
xor
pop
loopne
hlt
mul
loope
jp
sub
inc
imul
retf
cmps
mov
outs
push
xchg
lahf
pop
in
(bad)
xchg
fmul
pop
jmp
ss
(bad)
mov
daa
and
xchg
ja
out
daa
(bad)
dec
(bad)
(bad)
lahf
pop
add
imul
inc
inc
imul
mov
mov
(bad)
xchg
lahf
pop
add
inc
imul
mov
dec
cs
lea
cmc
mov
fbld
clc
xchg
scas
sbb
inc
fldenv
clc
aaa
jl
lds
mov
loop
aad
int3
jbe
dec
loopne
hlt
jmp
loopne
lock
iret
cmps
pop
imul
mov
xor
xchg
movs
sbb
pusha
out
lsl
mov
and
fld
ss
pop
stos
and
push
loopne
pop
jmp
das
fld
cmp
mov
loopne
in
mul
loope
mov
(bad)
scas
pop
jecxz
fsub
mov
daa
push
add
adc
xor
mov
lock
cld
aam
clc
xchg
cmps
pusha
hlt
xchg
fsub
push
sbb
mov
(bad)
mov
retf
xchg
ja
out
jl
fld
xchg
and
outs
inc
imul
enter
sub
xchg
aam
clc
xchg
and
push
add
outs
inc
imul
enter
pusha
hlt
xchg
fsub
add
mov
fisub
mov
retf
xchg
ja
xchg
jl
fld
xchg
and
inc
imul
enter
xor
daa
fld
xchg
and
inc
imul
enter
pusha
hlt
xchg
fsub
add
mov
fisub
mov
retf
xchg
ja
inc
jl
fld
xchg
das
test
add
inc
imul
enter
sub
xchg
aam
clc
xchg
cs
add
jmp
enter
pusha
hlt
xchg
fsub
or
fisub
mov
retf
xchg
ja
jmp
and
push
add
outs
inc
imul
leave
pop
imul
and
xchg
fsub
or
mov
fisub
mov
retf
xchg
ja
stos
jge
fld
xchg
sub
inc
imul
leave
pop
imul
mov
frstor
mov
retf
xchg
ja
jle
daa
(bad)
xchg
lock
fmul
clc
loopne
sub
loopne
add
xchg
fcom
push
jge
imul
in
test
and
shl
clc
jmp
fsubr
jae
movs
pusha
out
sahf
fsub
pop
mov
push
neg
push
shr
mov
fadd
daa
mov
leave
gs
(bad)
in
clc
jmp
clc
xchg
cs
pop
imul
pop
mov
imul
fld
xchg
sbb
fld
jmp
fsub
or
or
pop
imul
and
in
and
outs
pop
(bad)
lahf
pop
in
and
xchg
fmul
pop
jmp
pop
sahf
rcl
and
loopne
pop
mov
imul
pop
shl
dec
sbb
jbe
(bad)
sahf
int
std
outs
out
sbb
push
xlat
xor
and
and
fld
jmp
jb
dec
dec
cmps
sub
mov
mov
fisttp
xchg
ja
or
fld
imul
sbb
(bad)
idiv
fld
daa
fld
imul
leave
pop
imul
and
xchg
fsub
push
add
add
imul
retf
dec
(bad)
sub
push
adc
pop
adc
pop
ret
jge
pop
sti
xchg
fsub
push
sub
pop
sti
xchg
fsub
test
(bad)
std
mov
fisttp
xchg
ja
jb
daa
fld
mov
(bad)
out
leave
xor
pop
add
mov
mov
fisttp
xchg
ja
mov
fsub
test
mov
push
adc
fcom
lock
pop
imul
clc
shr
mov
repz
xchg
scas
sbb
sub
fld
xchg
xchg
and
xchg
enter
mov
lahf
pop
in
and
xchg
fmul
pop
jmp
pop
in
and
xchg
fmul
pop
in
and
xchg
fmul
pop
loopne
add
and
mov
pop
mov
xchg
or
lock
fcomp
sub
xchg
daa
or
fcomp
mov
and
push
or
scas
xchg
aam
imul
and
xchg
ja
shl
(bad)
clc
xchg
ja
jp
daa
fld
fbld
clc
cmp
pop
adc
daa
push
cmp
and
xchg
fmul
pop
loop
or
jnp
aaa
mov
iret
add
popf
fbld
clc
rol
cmp
xchg
scas
sbb
xchg
ja
mov
fbld
clc
or
xchg
fsub
push
or
xchg
fsub
push
loop
sub
xchg
fcom
outs
es
and
fld
in
and
ins
imul
and
push
popf
pop
add
mov
sub
into
js
fisttp
xchg
ja
clc
fmul
and
retf
pop
ret
gs
push
push
test
fsub
clc
fmul
and
adc
or
pop
add
sbb
iret
not
imul
and
ss
into
stos
and
push
loopne
gs
fucomp
fnstenv
fld
cmp
mov
call
daa
mov
fldenv
ins
imul
adc
fisttp
xchg
cs
inc
js
(bad)
iret
and
imul
add
bswap
adc
imul
fst
call
call
(bad)
daa
fld
add
ret
push
imul
fst
cmp
pop
imul
fld
in
ins
jmp
sbb
xor
ins
push
daa
push
sbb
and
cmp
rcr
and
imul
fld
jmp
(bad)
dec
push
imul
fld
imul
addr16
inc
int
loopne
sub
test
fcmovb
nop
cmp
int
test
into
retf
scas
mov
fsubr
pop
iret
mov
imul
xor
xchg
popf
push
dec
or
mov
xchg
and
jbe
pop
mov
loope
mov
retf
jmp
fcomp
(bad)
in
nop
xor
xchg
sbb
jno
cmps
ss
popa
daa
ffree
in
mov
clc
xchg
daa
xor
mov
sub
add
and
pop
loope
test
in
jp
xchg
fmul
pop
add
add
movs
test
and
and
pop
imul
clc
xchg
ja
sbb
and
cmp
xchg
pop
imul
and
cmp
retf
ret
pop
hlt
lock
jp
xchg
fmul
clc
jmp
movs
test
and
fmul
pop
imul
test
mov
(bad)
xchg
inc
imul
call
add
gs
and
imul
imul
enter
scas
call
inc
imul
push
mov
in
fwait
shr
daa
sbb
(bad)
jb
(bad)
xchg
inc
imul
cmp
fisttp
stos
stos
pusha
in
fsub
mov
inc
imul
jg
sub
mov
enter
scas
call
inc
imul
pop
ret
sub
and
imul
in
fnstsw
in
pop
add
mov
add
mov
add
fld
sub
cdq
sub
xor
mov
mov
add
mov
cmp
jg
imul
rol
imul
and
pusha
rol
imul
popf
xchg
fnsave
dec
fisttp
in
push
clc
sbb
xor
ins
imul
lahf
pop
xchg
push
imul
scas
bound
data16
fisttp
in
xchg
xor
xchg
ja
push
daa
fisttp
xchg
movs
adc
push
imul
mov
fmul
and
fsubr
pop
imul
ins
imul
sub
and
iret
mov
imul
(bad)
mov
and
scas
push
clc
sbb
xor
mov
inc
imul
jl
mul
mov
push
add
bound
pop
add
xor
mov
push
fild
push
les
and
pop
imul
pop
loopne
or
pop
imul
int
imul
ds
xchg
xor
xchg
lods
pop
mov
fsub
mov
daa
fld
scas
bound
pop
imul
fld
imul
push
(bad)
in
popa
push
adc
pop
adc
imul
ins
imul
pop
mov
(bad)
cld
lahf
pop
add
xor
movs
imul
mov
fldenv
ins
imul
pop
add
xor
test
daa
fnstsw
imul
mov
mov
fucomp
popf
sub
pop
add
inc
imul
mov
mov
clc
xchg
cmps
push
jne
daa
fucomp
cmc
sub
pop
add
(bad)
clc
cld
mov
clc
xchg
loopne
stos
xchg
and
imul
add
mov
in
jno
xchg
fmul
pop
add
inc
imul
push
imul
and
jmp
test
inc
imul
lahf
pop
push
add
xchg
cmps
cs
xor
fisttp
xchg
ja
pop
add
mov
sbb
ins
imul
pop
cmp
mov
add
and
cmp
ins
imul
pop
add
xor
push
and
popf
fld
add
and
imul
lds
std
sub
pop
loopne
hlt
fnstsw
in
inc
lea
xchg
addr16
(bad)
dec
(bad)
stos
cwde
jecxz
iret
repz
aam
sbb
sbb
pop
pop
imul
add
ds
pop
add
daa
(bad)
mov
push
inc
movs
and
push
imul
fisttp
in
dec
fadd
imul
loopne
push
inc
fild
imul
test
pop
imul
fnstsw
push
fld
mov
xor
popa
daa
fld
daa
rol
add
push
inc
imul
fucomp
jbe
and
loopne
xor
jmp
push
rol
push
inc
imul
and
push
and
jmp
clc
xchg
stos
pop
rcl
cmp
xchg
fdiv
push
test
daa
fisttp
xchg
ja
xor
in
rol
imul
pop
fist
and
xchg
movs
xor
cli
xchg
fdiv
xchg
lods
fisub
clc
push
imul
cli
xchg
fdiv
xor
(bad)
or
iret
xchg
fsub
ds
lods
pop
out
fsub
sub
jmp
clc
xchg
ja
xor
or
xchg
fmul
clc
pop
arpl
imul
push
inc
push
shr
mov
or
mov
pop
imul
fisttp
scas
movs
clc
arpl
fld
jmp
daa
fnsave
fsubr
outs
frstor
out
mov
and
xor
fld
data16
and
add
cmp
xchg
jle
dec
outs
daa
fisttp
scas
xchg
cwde
sub
in
popa
sub
outs
daa
(bad)
iret
or
imul
frstor
push
(bad)
aad
popa
fsubr
pop
imul
and
imul
pop
repz
fsub
xchg
sbb
xchg
retf
jae
sbb
jae
fnsave
sbb
aaa
lock
sbb
div
fnsavew
sbb
xchg
retf
jae
sbb
jnp
fnsave
sbb
cmps
retf
jae
sbb
or
fnsavew
sbb
adc
data16
in
(bad)
fild
imul
mov
daa
fisttp
sbb
jnp
fnsave
sbb
cmps
retf
jae
sbb
xor
fnsavew
dec
ins
pop
jns
and
iret
push
or
mov
xchg
fcomp
clc
sbb
xor
xchg
movs
js
xchg
fsub
pop
jmp
mov
jmp
clc
xchg
ja
outs
gs
fisttp
xchg
into
loopne
imul
push
rol
fld
imul
xor
retf
fld
xchg
daa
test
add
mov
add
imul
pop
xchg
adc
loop
daa
fucomp
mov
fld
jecxz
and
xchg
fcom
cwde
fisub
clc
scas
mov
fld
imul
fld
add
fld
imul
pop
cmps
sub
xor
mov
fisub
clc
xchg
movs
adc
push
imul
sbb
es
mov
mov
fisub
clc
xchg
je
sti
sti
fsub
test
daa
fnsave
dec
(bad)
dec
out
fild
daa
mov
or
fucomp
xor
jb
pop
imul
cmp
xchg
fcom
mov
lea
xchg
ja
sub
(bad)
and
xchg
ja
outs
gs
fld
daa
fisttp
xchg
ja
xor
popf
pop
xor
pusha
cli
xchg
fsub
pop
sbb
mov
add
mov
mov
(bad)
iret
jecxz
imul
popf
pop
or
cmp
imul
and
jmp
pop
sbb
pop
(bad)
jns
std
ins
imul
pop
add
xor
clc
pop
cmp
imul
xor
ins
daa
ffree
in
(bad)
clc
xchg
daa
cmp
pop
sti
xchg
fsub
(bad)
in
and
stc
xchg
fsub
aaa
adc
pop
mov
add
mov
mov
iret
pop
push
imul
popf
pop
adc
add
pop
adc
pop
sti
xchg
fsub
cmp
xchg
stos
pop
cli
xchg
fsub
push
in
sub
xchg
fmul
pop
in
sub
xchg
fmul
pop
jmp
pop
in
and
xchg
fmul
inc
imul
pop
mov
imul
outs
scas
lock
pop
add
xor
clc
pop
cmps
jl
imul
xor
push
fisttp
xchg
ja
sbb
lock
daa
push
sbb
(bad)
or
daa
pop
ret
jns
and
imul
and
cmp
call
out
in
das
fld
jmp
fcomp
jb
dec
(bad)
dec
jne
sub
mov
or
call
out
cmc
das
fld
xor
lds
fisttp
xchg
ja
sbb
jg
sub
push
sbb
outs
or
jns
and
imul
and
cmp
call
out
jne
fld
jmp
fcomp
jb
dec
(bad)
dec
mov
sub
mov
and
fucomp
pop
das
fld
or
pop
imul
popf
xchg
fnsave
movs
and
pop
add
mov
mov
iret
(bad)
punpckhwd
and
inc
mov
fiadd
imul
sbb
imul
es
xchg
fcom
ins
fisub
clc
xchg
sbb
jnp
sbb
jns
dec
(bad)
dec
icebp
shr
daa
mov
xor
out
test
sahf
fild
imul
es
xchg
fsub
add
sahf
pop
rcl
and
xchg
fmul
clc
xchg
ja
sub
(bad)
and
xchg
ja
ret
fld
daa
fisttp
xchg
ja
xor
pushf
pop
or
pusha
cli
xchg
fsub
pop
sbb
mov
add
mov
mov
iret
inc
add
and
dec
mov
fiadd
imul
sbb
imul
daa
stc
xchg
fcom
ins
fisub
clc
xchg
sbb
jnp
sbb
jns
dec
(bad)
dec
xor
sub
mov
cmp
mul
out
popa
and
pop
and
pop
imul
and
xchg
fcomp
xchg
addr16
cmp
test
xchg
dec
std
xchg
fsub
ds
push
jne
xchg
pop
imul
sub
xchg
fmul
pop
in
sub
xchg
fmul
pop
jmp
pop
sahf
rcl
and
loop
cmp
xchg
fcom
daa
mov
add
mov
add
mov
imul
pushf
pop
and
ins
imul
imul
and
stc
and
pop
jmp
daa
fnsave
stos
shl
lock
popf
xchg
fnsave
scas
push
ins
imul
in
sahf
sub
and
and
fisttp
xchg
ja
add
imul
and
lds
fld
in
sub
xchg
fcomp
xchg
addr16
cmp
test
add
push
xchg
test
and
cmp
call
push
out
jmp
daa
push
add
fild
(bad)
lahf
pop
xchg
xchg
sub
bound
clc
(bad)
and
xchg
iret
and
daa
and
sub
mov
pop
imul
ins
imul
inc
add
dec
inc
imul
push
sbb
in
jmp
loopne
add
xchg
xchg
sub
stos
ins
daa
fisttp
imul
mov
retf
and
xchg
jne
outs
stc
test
stc
xchg
fdiv
ins
imul
mov
mov
xlat
and
xchg
iret
lsl
push
call
push
rcl
xor
shr
imul
fldcw
dec
mov
sub
mov
mov
(bad)
xchg
lahf
pop
add
fld
jmp
fcomp
jno
fdivr
pop
das
inc
inc
imul
push
call
push
rol
test
xchg
push
sar
sbb
xor
pop
aaa
jl
lds
mov
cmp
mov
(bad)
mov
lods
cwde
or
pop
imul
fld
loopne
pop
imul
jb
fsubr
out
hlt
data16
leave
and
pop
call
daa
out
cmp
lahf
pop
and
fnsave
fsubr
sub
data16
sbb
adc
cwde
sub
test
xchg
adc
xchg
sub
xor
cmp
cmp
imul
inc
imul
push
call
scas
sbb
cmovb
push
(bad)
clc
pop
pop
inc
inc
imul
out
dec
mov
pop
cmp
xchg
lahf
pop
imul
inc
imul
out
dec
mov
pop
cmp
xchg
lahf
pop
push
mov
daa
add
daa
ss
xchg
rol
imul
push
rcr
xor
and
dec
mov
pop
push
adc
sub
test
loop
loope
sub
push
inc
push
rcl
cwde
sub
test
loop
stc
cwde
sub
out
jne
popf
pop
sbb
push
sbb
popf
pop
push
adc
cwde
sub
test
loop
movs
cmps
sub
out
dec
mov
push
sbb
popf
pop
push
adc
sub
test
loop
rcr
xor
test
xchg
push
rcl
iret
stos
add
ss
fcomip
jmp
loopne
pop
xor
pop
pop
imul
aad
sub
dec
xchg
imul
shl
sub
dec
xchg
imul
int
sub
dec
xchg
imul
leave
hlt
sub
dec
xchg
imul
std
hlt
sub
dec
xchg
imul
icebp
hlt
sub
dec
xchg
imul
in
hlt
sub
dec
xchg
imul
jmp
xchg
imul
cmp
iret
arpl
imul
push
dec
dec
cmp
fld
jmp
(bad)
sbb
int3
fadd
sbb
jae
int3
rol
fimul
test
pop
test
and
or
and
(bad)
sbb
push
cs
imul
mov
ds
fst
popa
xor
xchg
js
les
cmps
xor
jns
(bad)
imul
stc
cmp
fld
sbb
hlt
ret
in
and
clc
mov
fld
loop
stc
addps
fs
xchg
fsub
adc
xchg
clc
loop
stc
ud0
xchg
out
lock
inc
dec
and
punpckhwd
fld
xchg
add
xchg
imul
cdq
hlt
sub
dec
xchg
imul
xchg
hlt
sub
dec
xchg
imul
xchg
hlt
sub
dec
xchg
imul
(bad)
hlt
sub
dec
xchg
imul
mov
sub
dec
xchg
imul
test
sub
dec
xchg
imul
xor
imul
mov
xchg
imul
mov
xchg
imul
mov
sub
dec
xchg
imul
mov
sub
dec
xchg
imul
lods
hlt
sub
dec
xchg
imul
test
xchg
imul
movs
hlt
sub
dec
xchg
imul
mov
xchg
imul
pop
hlt
sub
dec
xchg
imul
pop
hlt
sub
dec
xchg
imul
push
hlt
sub
dec
xchg
imul
push
hlt
sub
dec
xchg
imul
dec
hlt
sub
dec
xchg
imul
dec
hlt
sub
dec
xchg
imul
inc
hlt
sub
dec
xchg
imul
inc
hlt
sub
dec
xchg
imul
jge
sub
dec
xchg
imul
jns
sub
dec
xchg
imul
jne
sub
dec
xchg
imul
jno
sub
dec
xchg
imul
ins
hlt
sub
dec
xchg
imul
imul
imul
gs
sub
dec
xchg
imul
popa
hlt
sub
dec
xchg
imul
sbb
xchg
imul
sbb
sub
dec
xchg
imul
adc
xchg
imul
adc
sub
dec
xchg
imul
or
xchg
imul
or
sub
dec
xchg
imul
add
xchg
imul
add
sub
dec
xchg
imul
cmp
xchg
imul
cmp
sub
dec
xchg
imul
xor
xchg
imul
xor
sub
dec
xchg
imul
and
xchg
imul
and
sub
dec
xchg
imul
(bad)
sub
dec
xchg
imul
fpatan
sub
dec
xchg
imul
aad
sub
dec
xchg
imul
shl
sub
dec
xchg
imul
int
sub
dec
xchg
imul
leave
repz
dec
xchg
imul
vmovntps
dec
xchg
imul
shl
daa
dec
xchg
imul
std
repz
dec
xchg
imul
stc
repz
dec
xchg
imul
cmc
repz
dec
xchg
imul
icebp
repz
dec
xchg
imul
in
repz
dec
xchg
imul
jmp
xchg
imul
in
sub
dec
xchg
imul
loope
sub
dec
xchg
imul
popf
repz
dec
xchg
imul
cdq
repz
dec
xchg
imul
xchg
repz
dec
xchg
imul
xchg
repz
dec
xchg
imul
(bad)
repz
dec
xchg
imul
mov
sub
dec
xchg
imul
test
sub
dec
xchg
imul
xor
imul
mov
xchg
imul
mov
xchg
imul
lods
repz
dec
xchg
imul
test
xchg
imul
movs
repz
dec
xchg
imul
mov
xchg
imul
pop
repz
dec
xchg
imul
push
repz
dec
xchg
imul
dec
repz
dec
xchg
imul
dec
repz
dec
xchg
imul
inc
repz
dec
xchg
imul
inc
repz
dec
xchg
imul
jge
sub
dec
xchg
imul
jns
sub
dec
xchg
imul
jne
sub
dec
xchg
imul
jno
sub
dec
xchg
imul
repz
dec
xchg
imul
popa
repz
dec
xchg
imul
sbb
xchg
imul
sbb
sub
dec
xchg
imul
adc
xchg
imul
adc
sub
dec
xchg
imul
or
xchg
imul
or
sub
dec
xchg
imul
add
xchg
imul
add
sub
dec
xchg
imul
cmp
xchg
imul
cmp
sub
dec
xchg
imul
xor
xchg
imul
xor
sub
dec
xchg
imul
sub
xchg
imul
sub
sub
dec
xchg
imul
and
xchg
imul
and
sub
dec
xchg
.byte
daa
fld
