and
add
add
add
dec
add
add
add
add
add
or
add
add
add
sbb
add
push
and
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
dec
add
add
push
je
imul
add
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
mov
add
pop
add
add
add
add
add
nop
add
add
les
add
add
add
add
add
enter
add
add
add
add
retf
add
add
add
xor
add
stos
jmp
add
add
add
add
test
add
add
icebp
add
add
add
fadd
add
imul
add
lar
add
add
jnp
xor
fs
sub
sub
sub
xor
cmp
xor
jge
cmp
outs
fs
gs
jp
jo
arpl
bound
xor
xor
cmp
popa
xor
xor
bound
arpl
data16
popa
cmp
cmp
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
popf
lds
inc
inc
mov
dec
daa
push
mov
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
mov
add
add
add
add
sbb
inc
fs
lods
std
mov
add
pop
add
jp
jp
gs
or
and
add
add
add
sbb
lods
inc
cld
jb
mov
add
into
add
into
add
mov
sti
cmp
arpl
mov
in
push
test
pop
(bad)
pop
pop
and
inc
mov
sub
push
xchg
ins
mov
and
shr
std
std
cld
(bad)
std
jle
bswap
std
pop
iret
jge
div
pop
sub
add
rol
add
movs
adc
leave
inc
dec
push
adc
mov
les
cmp
scas
cmp
fnsave
scas
xchg
xor
push
push
dec
mov
sbb
jbe
inc
sub
call
in
add
leave
dec
cmp
and
jo
and
mov
dec
inc
jo
dec
jno
and
sub
inc
lock
lahf
adc
xchg
xor
enter
and
aas
js
inc
in
mov
fdiv
pop
std
push
mov
stos
lar
jmp
enter
jmp
add
and
in
xchg
or
sti
fstp
daa
sub
rcl
or
ret
ret
(bad)
retf
add
add
add
mov
add
add
rcr
(bad)
lock
and
jmp
lds
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
stos
imul
jnp
add
fsubr
lods
adc
xor
sbb
sbb
cld
(bad)
cmp
add
and
add
pushf
clc
push
inc
and
pop
inc
and
test
sahf
jecxz
and
fmul
push
dec
add
adc
lock
mov
fdiv
nop
mov
(bad)
(bad)
lock
and
repnz
inc
inc
scas
adc
(bad)
loope
test
xor
jo
pop
(bad)
or
mov
jns
mov
dec
inc
mov
or
sti
sbb
xchg
jo
loop
jle
mov
or
add
mov
mov
xor
ret
mov
mov
neg
mov
inc
mov
imul
jne
add
icebp
push
jmp
pusha
pop
mov
dec
popf
aas
out
mov
sbb
pop
shl
sub
add
cmp
add
and
icebp
popa
clc
jl
pop
xchg
mov
js
enter
inc
cmp
daa
cmp
xchg
add
(bad)
retf
jle
or
repnz
mov
or
icebp
push
fbstp
pop
dec
pop
push
inc
ds
mov
inc
dec
sbb
sbb
shl
dec
xchg
cmp
shl
test
pop
push
push
mov
sub
mov
gs
mov
rol
mov
add
push
mov
sbb
mov
xchg
mov
mov
adc
sbb
mov
push
leave
inc
pop
sbb
inc
pop
mov
mov
ja
push
shl
mov
cmp
or
add
movs
xor
stos
xor
mov
inc
or
repz
mov
std
add
and
pop
add
adc
and
dec
or
inc
sub
dec
jo
fadd
cmp
jmp
ss
add
call
cmp
ja
stc
push
push
loope
add
push
sti
jo
and
push
xor
xchg
xor
or
or
das
(bad)
jo
iret
jne
cwde
xchg
dec
in
jp
and
(bad)
inc
nop
xor
mov
pop
imul
out
adc
lock
enter
inc
scas
pop
pusha
js
lock
loopne
or
test
cwde
add
push
js
mov
adc
mov
jns
add
push
and
retf
pop
pop
pop
sbb
sbb
cmp
mov
mov
cmp
or
and
mov
ror
pop
loopne
fwait
pop
pusha
nop
mov
add
inc
in
jecxz
in
ret
cmp
pop
outs
inc
mov
push
mov
nop
cmp
pop
pop
and
and
sbb
cmp
add
push
or
mov
adc
shl
daa
loopne
rol
mov
push
cs
loop
inc
cmp
pop
sub
aam
add
daa
jecxz
xchg
add
add
cmp
or
xor
bound
cmp
jmp
dec
cdq
loope
aam
pusha
add
push
xchg
adc
xchg
push
and
mov
and
and
movs
mov
(bad)
imul
or
jmp
and
xor
sar
xor
sbb
outs
sbb
(bad)
fisttp
add
xor
mov
inc
cmps
jo
or
fiadd
dec
jecxz
pop
sbb
call
add
sbb
mov
or
cld
imul
repnz
pop
jo
dec
inc
pop
xchg
add
push
sub
test
imul
and
add
repnz
xor
sbb
add
add
pushf
sub
shl
and
adc
mov
jns
mov
sub
ins
test
push
ror
push
or
dec
mov
pusha
xchg
inc
cmp
inc
push
push
or
or
cmp
das
adc
add
pushf
pop
pop
mov
inc
call
jb
jo
xor
std
(bad)
clc
scas
jb
and
push
xor
dec
push
xchg
pop
add
pop
mov
dec
or
mov
add
cmp
retf
or
lock
pop
sub
pop
inc
fst
movs
mov
pop
js
pusha
sub
dec
or
div
fist
test
xchg
adc
mov
sti
dec
and
add
test
push
inc
pusha
sub
cmp
add
test
xor
shl
xor
xchg
push
inc
and
xor
hlt
inc
add
push
xor
and
ror
test
push
sbb
add
test
xchg
mov
push
gs
add
inc
xchg
cmp
xor
adc
push
push
cmp
mov
mov
sub
sub
mov
cmps
jle
jne
cmp
add
mov
call
add
and
sbb
adc
dec
icebp
cmp
ins
sbb
stc
clc
or
shl
stos
add
mov
mov
sbb
mov
mov
and
add
xchg
pop
or
add
push
inc
add
and
repnz
mov
sub
pushf
mov
sbb
sbb
mov
or
or
or
mov
inc
jae
sbb
mov
loopne
test
cs
dec
cdq
or
sbb
cwde
das
dec
jbe
lahf
push
jo
cli
(bad)
iret
dec
push
mov
and
sub
aam
xor
idiv
scas
jae
fmul
dec
dec
inc
int
jo
push
sbb
xor
aam
loopne
dec
sub
inc
mov
cwde
(bad)
and
hlt
fisubr
pop
repz
into
add
or
lahf
push
nop
add
mov
cwde
aam
pusha
sti
inc
fisttp
fwait
jle
jp
mov
add
dec
hlt
setno
add
inc
dec
jbe
push
test
inc
sbb
mov
sub
daa
out
arpl
push
call
cwde
cmps
int3
push
pusha
sbb
xor
or
cmp
or
cmps
es
xor
and
and
mov
xor
inc
mov
sub
jle
into
sub
sbb
in
dec
add
cmp
xchg
add
or
clc
rcr
pop
aas
mov
lds
jno
popa
add
push
and
movhps
add
xor
mov
add
lods
cmp
jmp
and
aas
dec
jge
dec
sbb
cli
mov
dec
retf
movs
add
(bad)
or
add
mov
das
jmp
jno
ret
daa
fs
add
sbb
dec
jmp
clc
neg
loopne
mov
cs
xchg
inc
stc
and
dec
stc
daa
arpl
push
and
sbb
data16
pop
daa
or
mov
les
scas
and
cmc
push
pushaw
dec
inc
(bad)
mov
cmp
inc
imul
dec
mov
pop
jnp
and
mov
arpl
loop
fld
or
sbb
push
cs
mov
addr16
cdq
and
data16
jo
xor
arpl
jle
inc
mov
retf
packssdw
cmp
dec
lods
cld
pop
mov
and
movs
inc
ja
(bad)
add
mov
inc
sub
(bad)
inc
xchg
inc
pop
test
lods
and
retf
ja
jb
sbb
into
aam
ja
push
jb
nop
dec
fdivr
ds
stos
test
pop
das
(bad)
jo
bound
cmp
jecxz
loope
add
bound
xor
fs
pop
or
sbb
push
xor
mov
mov
cmp
add
sub
push
movs
add
pop
adc
mov
adc
out
add
sahf
rol
test
scas
mov
push
inc
test
inc
hlt
(bad)
jp
in
idiv
call
xlat
inc
inc
fbld
fs
xchg
jecxz
add
add
test
arpl
sub
mov
jo
cmp
les
mov
lahf
dec
cmp
sbb
pop
aas
inc
and
ret
dec
test
and
and
cmp
ins
or
pop
add
inc
outs
or
(bad)
stc
mov
mov
cmp
test
xor
sub
dec
adc
popf
ror
mov
mov
xor
inc
movs
or
pop
nop
push
dec
inc
push
dec
inc
or
cmp
add
or
sbb
aas
out
(bad)
jg
add
std
jno
rcr
adc
add
sbb
or
popf
inc
or
add
mov
cwde
inc
lea
sbb
in
lds
(bad)
mov
(bad)
mov
shr
mov
push
stos
sub
push
or
cmp
and
xor
mov
mov
xor
xchg
xor
rcr
add
pop
lods
push
popa
les
adc
mov
ret
shl
hlt
nop
sbb
scas
es
xchg
and
push
adc
pop
lahf
test
jmp
sti
(bad)
jmp
aaa
add
adc
pop
std
shr
es
movs
cmp
or
mov
ret
pushf
dec
adc
xchg
add
rcr
add
dec
or
mov
sub
sub
and
prefetch
ins
jg
mov
add
xchg
adc
jge
in
popa
or
std
push
loopne
add
jge
cmps
je
mov
jno
pop
(bad)
mov
cmp
fucomp
pop
mov
mov
cdq
jmp
cmp
pop
adc
cmp
and
and
cmp
add
and
(bad)
(bad)
fdivr
imul
je
add
sub
(bad)
xlat
cmp
push
sbb
mov
adc
jp
shl
push
dec
sub
mov
add
xchg
enter
fisttp
enter
add
inc
(bad)
es
cmp
icebp
sub
mov
push
hlt
pop
jle
ret
jl
pushf
cmps
dec
mov
jg
jbe
fwait
sbb
dec
(bad)
xlat
mov
shl
sbb
mov
out
jae
xchg
(bad)
in
pop
and
pop
fwait
mov
ins
add
pop
hlt
add
mov
cli
loopne
loop
fisub
mov
xchg
xchg
bound
mov
rcr
loop
sub
ficom
dec
into
xchg
ja
in
mov
ret
pop
or
sar
inc
(bad)
scas
push
ds
jbe
out
sbb
adc
int3
cmps
mov
loopne
push
shl
add
push
inc
mov
push
add
arpl
cs
call
cmp
je
push
dec
nop
cmp
in
cmp
clc
jl
sub
sbb
in
ret
cld
mov
dec
lock
xor
out
push
add
pop
nop
mov
xchg
add
inc
adc
leave
ins
leave
in
pop
shl
inc
sub
jp
sub
and
inc
cmp
cmp
jmp
cmp
outs
pop
mov
stos
adc
pop
and
loopne
ja
inc
xor
push
jl
cmp
fwait
pusha
call
(bad)
jmp
dec
bound
(bad)
fstp
lock
jle
pushf
push
in
fwait
shr
sbb
(bad)
pusha
push
scas
outs
inc
mov
mov
and
std
add
outs
ins
cmp
add
retf
sbb
popa
cmp
rol
mov
mov
in
push
inc
push
enter
out
mov
(bad)
repnz
retf
pop
loopne
repnz
jbe
outs
cdq
sbb
xor
mov
pop
fbld
ret
jnp
popf
out
call
jl
jne
pop
repnz
out
scas
sbb
ja
cmp
cmp
pop
inc
into
inc
mov
xor
popf
daa
pop
ficom
cmp
addr16
mov
inc
xchg
mov
sahf
mov
jns
jg
pop
jg
mov
nop
and
(bad)
fucomip
sub
jmp
and
sub
xchg
stos
add
and
xchg
lea
pusha
aaa
add
jecxz
cmp
add
cmp
jp
cmps
loope
jb
std
push
cmp
pusha
stc
stc
sbb
mov
repnz
add
call
mov
bound
out
ja
cld
dec
xor
lahf
xor
sbb
jns
add
ret
jg
cmp
jl
ins
aas
push
lods
std
xor
imul
shr
jecxz
popa
icebp
push
xchg
(bad)
movs
and
pushf
sbb
push
dec
dec
pusha
out
xor
cmp
inc
adc
ss
jmp
mov
lahf
adc
arpl
stc
repnz
jo
cli
sub
pcmpgtb
aaa
add
std
mov
psubw
out
jno
arpl
fmul
out
pop
jae
mov
iret
cdq
mov
(bad)
in
stos
mov
test
ins
stos
out
jno
mov
xchg
sub
clc
(bad)
mov
hlt
in
in
pusha
out
adc
jmp
cli
push
out
xor
and
lock
mov
dec
sti
xlat
cli
(bad)
out
add
les
pop
into
je
push
pop
in
movs
jle
pop
aam
push
mov
mov
in
nop
mov
outs
mov
sar
std
ja
retf
inc
aas
mov
and
icebp
scas
mov
iret
sbb
inc
cli
xchg
pop
xor
mul
fild
imul
and
or
imul
jnp
and
fistp
add
pop
cdq
add
push
cmc
jge
cmp
pushf
add
jp
ins
in
cmp
inc
out
lods
ins
in
xor
bndstx
push
pop
imul
mov
aad
inc
pop
inc
adc
loope
sub
cmc
hlt
ret
mov
lods
scas
repnz
cmp
push
cmp
mov
pop
mov
mov
fimul
dec
dec
mov
xchg
cdq
xchg
mov
xchg
lahf
sub
jmp
add
mov
add
pop
pop
js
shld
daa
(bad)
jl
lods
loop
mul
in
lods
sbb
push
xor
jmp
and
jg
int
cwde
add
loop
xchg
into
sti
cli
lods
mov
cmp
jae
outs
adc
jmp
(bad)
ins
adc
aam
fxam
and
xchg
sbb
xchg
xchg
mov
out
push
clc
and
cmp
cmps
loop
jb
sub
mov
mov
inc
in
(bad)
mov
sahf
and
test
and
enter
adc
add
adc
mov
je
mov
aas
in
pop
popa
test
std
xor
mov
leave
call
adc
int
mov
rol
loope
sub
fisttp
ror
adc
and
sti
lods
mov
or
ficom
cmp
hlt
push
add
inc
jmp
push
jle
sbb
mul
scas
dec
fsubr
retf
daa
mov
sub
and
aas
add
ja
xor
dec
fcomp
and
xor
scas
loop
(bad)
jb
inc
jbe
jg
cmp
add
ins
or
mov
loope
or
clc
jecxz
lods
push
sar
lods
add
and
dec
in
leave
inc
xor
jmp
add
pop
xchg
dec
nop
jb
dec
jo
and
(bad)
push
jp
or
lds
push
mov
retf
lock
stc
mov
in
adc
leave
add
inc
xchg
jae
sub
pop
aam
loop
adc
mov
inc
push
pop
leave
or
leave
mov
xchg
push
add
adc
jae
cmp
push
retf
cwde
mov
mov
in
dec
neg
adc
adc
cmp
jne
jmp
(bad)
rcr
int
sbb
mov
fisubr
ja
mov
cmp
adc
inc
xchg
dec
dec
stos
pop
arpl
or
cwde
mov
inc
(bad)
pop
pop
mov
pop
add
adc
or
sbb
ins
nop
ret
mov
cmp
push
imul
icebp
add
rcl
add
shr
pop
cmc
and
ret
xchg
add
pusha
aas
sub
inc
retf
in
pop
mov
repz
push
in
mov
jmp
pop
cmp
das
jno
in
std
fcomp
icebp
bound
jne
push
(bad)
loopne
jp
mov
jnp
stos
into
mov
(bad)
das
je
xchg
lock
add
out
sbb
sub
inc
in
retf
push
lods
pop
(bad)
cld
sub
xor
call
xchg
mov
pop
aaa
xor
pop
out
cld
pushf
rol
cwde
adc
clc
mov
test
fist
jb
pop
in
mov
mov
xchg
addr16
push
bound
xchg
and
push
(bad)
ins
scas
mov
cdq
jge
aas
xor
push
cld
jns
movs
cmp
fcomp
imul
cs
adc
or
mov
fwait
xchg
jmp
icebp
aad
movs
test
mov
adc
fs
xchg
sub
xor
call
dec
movs
iret
sbb
jge
data16
jb
imul
shl
inc
call
and
adc
test
fcmovne
xor
or
loop
rcr
cmp
sub
push
inc
cmps
arpl
mov
arpl
mov
inc
sub
dec
in
std
mov
xchg
fdivr
std
or
dec
in
and
fwait
jmp
das
mov
ds
push
mov
fist
dec
jae
jmp
daa
bound
imul
cmps
js
lds
ret
jp
mov
mov
jge
lods
cwde
xor
cmp
stos
inc
mov
pushf
in
js
call
icebp
adc
mov
fcmovbe
je
mov
xchg
dec
ret
mov
mov
mov
pop
int3
leave
cli
xchg
aaa
ins
test
xor
sti
imul
adc
clc
mov
sub
xor
cli
loopne
(bad)
in
in
mov
dec
fucompp
ja
cmp
enter
dec
or
jle
les
test
mov
inc
pop
mov
sahf
movs
es
push
leave
dec
add
xchg
add
add
fisttp
mov
leave
neg
push
mov
and
xlat
or
aad
(bad)
rol
dec
cmps
inc
jb
aaa
ds
pop
push
inc
mov
int3
mov
push
jbe
je
pop
jl
bound
xor
in
in
call
dec
repz
push
jge
inc
outs
jle
fstp
test
pop
or
dec
pop
cmp
and
cmp
sbb
ja
popa
pop
rcl
push
push
retf
mov
pop
icebp
pop
mov
outs
cmps
add
or
dec
dec
rcr
nop
icebp
bnd
mov
xchg
fisubr
mov
mov
repnz
mov
jnp
jmp
dec
bound
xchg
push
push
mov
aad
outs
dec
fmul
scas
pop
out
fist
pop
xchg
cmps
fld
mov
into
pushf
dec
enter
in
fadd
lock
jg
xchg
ins
pop
pop
push
dec
or
adc
mov
pushf
call
lock
pop
dec
aaa
(bad)
rcl
fidiv
ins
call
push
aaa
retf
fwait
into
add
and
push
ret
or
mov
daa
(bad)
lods
pop
int
jg
sbb
sbb
daa
dec
push
sub
xor
jp
fidiv
jp
jl
cmps
sub
(bad)
cmps
jbe
cmps
mov
js
cmp
xchg
inc
pop
outs
mov
mov
shr
mov
inc
mov
inc
bnd
mov
mov
push
clc
pop
xchg
movs
retf
pushf
and
cmc
sbb
sar
ins
in
adc
retf
fdivrp
xchg
adc
(bad)
cmc
mov
and
shl
pop
aas
inc
fnstsw
fwait
je
cmps
lea
adc
push
rcl
fld
(bad)
outs
cli
ret
mov
inc
hlt
mov
(bad)
fcmovu
cmp
or
retf
and
idiv
mov
das
(bad)
push
and
inc
in
rcl
fcmove
add
sub
test
cmps
lods
sar
(bad)
sahf
pushf
mov
div
sbb
ins
iret
xchg
pop
inc
xor
jne
cmp
movs
mov
sbb
sbb
push
cmps
into
ins
xchg
xchg
fisttp
imul
je
lods
inc
push
sbb
imul
loopne
mov
xlat
xor
aaa
movs
and
jmp
in
ins
mov
xchg
lahf
stos
pop
cmc
cmp
test
jmp
mov
sbb
xor
sbb
cmp
xchg
fld
add
das
pushf
data16
xchg
push
sbb
iret
dec
xchg
xchg
mov
leave
cmp
sbb
mov
cmps
mov
icebp
xor
xor
mov
scas
(bad)
lds
pop
fst
and
fisub
cmp
dec
push
cld
aam
js
stc
dec
xlat
in
mov
or
rol
cmp
lods
xchg
mov
ret
mov
shl
dec
call
sti
std
push
jge
shl
mov
inc
rcl
dec
enter
movs
mov
pop
lahf
mov
cmp
mov
ss
jns
test
lds
mov
lods
loopne
repnz
add
and
cmp
(bad)
adc
mov
inc
es
sub
jnp
mov
xor
inc
xchg
dec
xchg
mov
ss
xchg
in
cmp
xor
adc
or
in
lods
divps
daa
cli
pop
cmp
xchg
movs
std
jl
repz
(bad)
fcom
inc
lods
xor
mov
sar
out
sub
jns
mov
loope
cmp
popa
jno
sub
add
dec
jmp
and
hlt
sti
popf
inc
pusha
mov
sti
adc
rcl
addr16
sub
cs
xor
sbb
es
inc
popf
retf
aaa
loop
jg
lahf
dec
sahf
or
js
sub
mov
in
fsubr
sahf
(bad)
fisub
pop
not
xchg
fistp
je
push
dec
mov
and
sub
loop
pushf
push
jl
enter
int
mov
push
jno
xor
in
xchg
stos
and
pop
mov
aad
xchg
pop
js
and
push
repnz
push
mul
inc
cmp
xor
jmp
scas
idiv
mov
pop
push
imul
inc
cmp
xchg
(bad)
outs
cld
in
stos
sbb
pop
(bad)
outs
or
sbb
or
ins
dec
mov
gs
jne
stc
scas
mov
dec
lods
mov
fmul
leave
std
daa
lea
adc
push
inc
mov
stos
sbb
cwde
mov
out
jmp
cld
psrld
push
mov
mov
adc
dec
scas
sar
das
mov
pop
sbb
in
stos
pop
mov
mov
and
(bad)
out
pop
pop
pop
call
aaa
or
fiadd
stos
jnp
lods
icebp
xchg
push
xor
sbb
jne
jg
shld
aad
fimul
adc
popf
mov
repnz
repz
(bad)
nop
pop
dec
push
add
mov
test
(bad)
ins
test
mov
cmp
jle
sbb
popa
fist
cmp
mov
aam
int3
ja
xchg
cmc
push
inc
mov
inc
xor
jle
inc
add
fadd
jmp
cmp
mov
or
push
xchg
push
pop
xchg
call
mov
loopne
out
dec
mov
add
inc
shl
movs
jmp
mov
scas
push
cmps
out
pop
je
or
jne
test
mov
pushf
mov
jb
ror
pop
xchg
das
xchg
mov
fldcw
sub
fcom
dec
adc
mov
shr
mov
jl
aam
and
(bad)
lock
mov
mov
and
pop
mov
or
cs
and
jmp
cmp
and
add
cmp
pop
in
inc
pop
fwait
sub
jb
xchg
or
rcl
dec
and
jl
(bad)
repnz
je
int
or
sbb
loop
push
push
aad
ret
ret
sub
sbb
or
es
sub
lock
inc
xchg
hlt
mov
shl
pusha
fcmovu
xchg
mov
push
addr16
jg
ss
fdivr
dec
das
les
sti
xchg
sbb
std
int
cmps
mov
(bad)
fsub
pushf
xchg
pop
sahf
mov
mov
fwait
cmp
xchg
nop
fwait
and
rol
into
rcl
dec
repnz
jmp
pop
push
out
sbb
xor
mov
xchg
movs
cmc
mov
fist
out
aam
add
add
inc
fadd
fs
adc
xchg
rol
cmps
xor
jne
mov
stos
push
pop
inc
lods
nop
mov
xor
push
data16
mov
nop
bnd
jno
pop
pop
cmc
add
push
jo
fdivr
push
cmps
stos
cmp
add
shl
and
xor
fcmove
leave
mov
scas
push
gs
ds
(bad)
dec
mov
arpl
dec
cmp
enter
inc
sub
dec
cmc
pop
xchg
mov
(bad)
int
mov
mov
mov
out
sar
xchg
sub
scas
or
and
sbb
pop
sahf
xchg
ret
shl
pop
outs
sbb
int
lds
xor
cmps
inc
test
cmp
add
sub
dec
xor
xchg
push
cld
bound
cmc
fist
outs
xchg
mov
jge
push
cmp
cli
sub
xchg
pop
call
int3
stc
pusha
lock
dec
ret
das
std
push
pop
mov
repnz
dec
iret
inc
test
out
cmp
mov
sub
mov
leave
shl
mov
cmp
cmps
dec
mov
test
cmp
cmp
fs
add
push
and
adc
add
pop
lods
popf
aam
pusha
test
call
call
int3
sub
sbb
(bad)
jge
pop
pushf
rcr
push
xlat
dec
pop
inc
jmp
pop
jb
xchg
popa
add
das
pop
rol
neg
movs
ins
mov
mov
sub
push
stos
lahf
sbb
test
sub
adc
not
add
lods
sti
sar
mov
and
test
mov
jmp
and
jp
add
lock
xor
pushf
outs
pop
cmps
cmps
inc
fisttp
mov
hlt
jle
daa
in
lods
repz
xor
add
movs
or
je
push
cmp
and
jle
jmp
sub
div
lea
sti
mov
sbb
xlat
push
and
stc
dec
xor
call
shl
shl
sub
mov
dec
int
xchg
xchg
call
in
daa
dec
xor
xchg
jnp
and
add
pop
pop
aam
jns
lahf
push
xor
test
cmp
sbb
push
cmp
jo
ret
into
mov
cmc
aam
jge
mov
retf
xlat
jne
jnp
pop
(bad)
fistp
ret
stos
aaa
movs
jmp
repz
or
leave
in
mov
ins
pop
and
(bad)
xchg
pop
cmc
or
das
sub
push
rcl
adc
inc
and
ins
xor
inc
xchg
cmps
leave
imul
int
add
das
sub
push
mov
popa
mov
cld
push
icebp
jg
cmps
inc
mov
inc
mov
fsubr
mov
cmp
fstp
xchg
sub
(bad)
out
shr
aas
dec
outs
xchg
jne
jle
(bad)
hlt
fwait
sbb
getsec
test
push
(bad)
jns
mov
jno
inc
fcmovne
ss
pusha
push
scas
outs
iret
mov
fsubrp
lea
in
xchg
dec
mov
xor
scas
mov
push
push
imul
adc
stc
cs
out
push
(bad)
(bad)
addr16
cld
pop
push
cmp
cmp
pop
inc
cmp
mov
push
sbb
pusha
mov
adc
xor
or
stos
addr16
mov
dec
mov
adc
jne
jle
daa
xor
mov
in
pop
fwait
mov
aas
cld
xor
cmc
mov
or
add
cmp
jb
inc
les
mov
int
adc
fcom
repz
(bad)
pop
add
sbb
and
bound
xchg
pop
data16
xor
jns
pop
mov
out
aad
enter
sub
jle
xchg
xchg
in
push
scas
push
jo
fsub
jnp
outs
pop
dec
pop
ret
xchg
mov
sbb
mov
inc
imul
push
test
cdq
or
js
xchg
ret
stos
imul
inc
not
popa
sub
in
jne
add
int3
mov
jmp
in
pop
xchg
add
xchg
(bad)
fidiv
or
jno
clc
push
js
inc
cmps
imul
push
and
lea
in
inc
int
daa
mov
sbb
or
mov
mov
cmp
mov
inc
adc
push
mov
xor
imul
or
fs
jne
or
ss
and
pop
sbb
inc
pushf
xlat
and
adc
and
xor
sar
xlat
jp
es
push
add
xor
mov
mov
xor
xchg
jge
stc
xchg
ins
mov
shl
adc
mov
adc
mov
xchg
retf
imul
aam
and
in
cmc
sbb
add
in
xchg
sti
aaa
xchg
pop
cs
les
rcr
cs
adc
adc
sub
aaa
out
lds
sub
sub
out
mov
in
out
jb
cmc
out
movups
lea
pop
stc
mov
mov
xchg
lahf
pop
cdq
stos
scas
xor
dec
scas
jge
pop
addr16
jo
addr16
or
(bad)
jmp
scas
sub
hlt
icebp
dec
jmp
lahf
mov
push
pop
std
xor
out
pop
movs
(bad)
ret
sbb
xchg
pushf
push
addr16
mov
hlt
ficom
inc
push
into
in
leave
xchg
sbb
lea
rcr
xchg
scas
xchg
cmp
dec
dec
sbb
xchg
adc
aas
push
and
fmul
push
adc
int3
dec
cmc
inc
pop
mov
adc
jnp
jle
xor
and
lahf
fldenv
adc
fwait
jnp
ins
sti
push
jnp
scas
in
not
xlat
mov
jl
xor
mov
push
pop
or
lock
(bad)
hlt
mov
xchg
jp
ss
mov
mov
repz
adc
and
sar
addr16
push
div
push
rcl
and
dec
mov
mov
sbb
out
ret
in
(bad)
cs
repnz
cli
pop
xchg
retf
mov
sbb
outs
push
jmp
jmp
repz
outs
jns
or
xchg
sub
(bad)
pop
xor
ficomp
pop
in
movs
std
out
jl
int
hlt
stos
sbb
fwait
inc
cmps
lock
xlat
inc
loopne
sbb
jg
pop
fild
xchg
pushf
cmp
or
cmp
push
stos
(bad)
icebp
xchg
das
fisttp
mov
push
adc
fwait
push
mov
or
test
iret
stc
dec
cmp
pop
jnp
jle
mov
popf
xlat
sar
xchg
aad
icebp
cdq
(bad)
iret
les
(bad)
xchg
lahf
stos
or
aad
mov
lock
push
out
test
and
mov
push
(bad)
jb
shl
mov
lds
hlt
jns
sbb
bound
cdq
dec
out
(bad)
jns
ret
adc
ja
and
mov
xchg
loope
cmps
rep
jne
fidivr
jno
ja
or
mov
repnz
mov
dec
sbb
jmp
jmp
push
cmp
fbstp
or
xchg
fnsave
jnp
test
pop
pop
pop
or
repnz
repz
mov
(bad)
xchg
jb
sub
or
(bad)
dec
repz
jne
neg
adc
neg
jle
sbb
mov
out
push
sub
imul
sbb
and
add
inc
xchg
mov
mov
and
jnp
sar
daa
add
jp
loop
push
mov
and
mov
ficomp
(bad)
repz
jmp
mov
popa
and
popa
add
mov
sub
cmp
ins
fsubr
xor
sub
shr
int
xor
mov
mov
cmc
call
mov
fs
mov
jnp
push
ret
fimul
and
iret
push
(bad)
lock
xchg
push
movs
cmps
(bad)
enter
aas
daa
je
shr
nop
lods
push
in
jo
jecxz
stos
mov
sub
cdq
cmc
scas
cmps
fadd
mov
or
cmps
and
mov
cmp
scas
lods
jl
mov
pusha
arpl
push
pop
mov
cmp
pop
adc
in
jl
jge
out
ins
test
leave
int3
lea
mov
lahf
icebp
mov
pop
fsub
fadd
mov
jl
fadd
jb
in
hlt
es
dec
push
outs
sub
mov
pop
xchg
mov
std
push
int
pop
xchg
jp
into
(bad)
retf
xor
push
ret
icebp
iret
jae
xchg
mov
and
jmp
pop
mov
enter
xchg
movs
cmp
jno
(bad)
jle
jbe
push
in
cmp
jns
ret
je
adc
not
mov
ffreep
(bad)
push
fadd
mov
(bad)
(bad)
sbb
mov
das
ja
in
ins
push
pop
pop
int3
fcmovnu
pop
les
push
xor
ins
aam
int
not
sbb
jno
aas
mov
rcl
add
sub
jge
xchg
das
not
sub
fistp
push
mov
repz
and
iret
loopne
add
mul
cmps
fbld
fnstcw
cli
pop
mov
lea
retf
pop
jnp
jle
sbb
jbe
fdiv
mov
leave
ins
stc
popa
addr16
aad
sbb
retf
jmp
sub
jle
jae
neg
push
ins
das
int
mov
xchg
cmp
pop
ds
(bad)
pusha
jbe
jle
int
scas
inc
stos
shr
cld
jne
shl
dec
retf
mov
mov
test
push
sub
jne
lahf
cwde
test
sbb
lods
clc
push
or
ficom
in
xchg
out
mov
cmp
lds
into
jbe
jno
xchg
sub
pop
jmp
mov
jmp
idiv
jbe
(bad)
stc
test
xor
lods
lods
fbstp
adc
std
stc
sahf
in
aad
repz
lds
fwait
jmp
or
cmp
jb
scas
mov
scas
jne
mov
popf
jo
test
xor
jae
xchg
repz
gs
and
lock
std
cmp
imul
and
imul
add
(bad)
adc
dec
mov
int
xor
sti
fwait
sub
or
push
scas
je
adc
push
hlt
retf
inc
push
fimul
outs
and
xchg
scas
mov
imul
iret
cdq
fadd
into
mov
mov
ja
dec
jne
jnp
(bad)
in
pop
int
pop
(bad)
dec
push
cwde
mov
adc
fcompp
push
add
ror
out
mov
xchg
mov
jne
das
pop
mov
xor
inc
nop
jg
xchg
adc
pop
mov
inc
pop
xchg
jmp
daa
je
sar
loop
jne
dec
fbstp
popa
and
int3
lea
mov
scas
mov
and
push
test
popf
in
scas
call
stos
ror
lahf
cmps
mov
dec
imul
repz
icebp
iret
stos
jle
jno
jnp
and
xor
jmp
sbb
out
fdiv
mov
pushf
mov
inc
mov
ss
jnp
mov
gs
xor
inc
cmp
cmps
addr16
in
xor
pop
jmp
test
lock
mov
ins
inc
shl
mov
ret
ja
(bad)
inc
les
xor
jbe
out
sub
cmp
cs
leave
dec
inc
inc
ja
test
call
fcmovbe
std
ss
fwait
pop
pop
iret
sahf
and
inc
jb
mov
fidivr
arpl
jmp
xor
inc
sbb
pop
test
jmp
repz
xchg
mov
mov
std
adc
inc
mov
test
repnz
enter
leave
aaa
sub
push
test
mov
mov
ins
jmp
push
imul
mov
fist
jl
sub
in
repz
sbb
ficom
jle
adc
out
pop
dec
and
test
(bad)
xchg
(bad)
mov
or
cmp
retf
les
add
push
xlat
loopne
es
xchg
out
popf
push
pop
hlt
jle
test
stos
bound
mov
enter
dec
push
jmp
mov
lock
pop
cmp
into
(bad)
pop
ja
jmp
aad
je
push
mov
ds
popa
mov
outs
gs
daa
mov
cwde
hlt
popf
jb
sbb
pop
or
rol
loopne
xchg
jmp
out
sahf
sbb
nop
and
lock
xchg
dec
sti
mov
stc
mov
repz
jb
scas
into
sahf
add
jmp
ret
fs
in
shl
stos
lods
dec
lahf
ffree
inc
lock
xor
pop
jae
out
dec
shl
pop
mov
jmp
and
es
push
jl
stos
pusha
loopne
mov
stos
sub
inc
dec
or
cmp
sar
ins
shr
inc
sbb
cwde
nop
int3
and
push
cmp
adc
mov
aad
movs
test
ins
xchg
xor
shl
lods
sub
push
out
inc
cmp
xchg
cmp
movs
push
dec
aas
mov
pop
outs
fcom
aas
jge
jg
scas
mov
xchg
push
ficomp
jle
fdiv
std
fldcw
imul
mov
(bad)
xlat
es
mov
je
mov
in
lock
mov
and
jl
sub
out
cmp
stc
mov
cmp
retf
adc
pop
out
dec
(bad)
js
fdiv
adc
mov
into
and
mov
sbb
fiadd
ins
mov
xor
inc
lds
inc
mov
adc
pop
mov
pop
cmp
cmc
adc
push
into
pop
adc
pop
das
movs
into
(bad)
in
jecxz
fbld
jns
fwait
adc
icebp
jb
cmp
(bad)
push
sbb
(bad)
(bad)
jbe
mov
pop
sub
mov
or
in
mov
and
adc
lea
xchg
lahf
jnp
shr
mov
rcl
sub
stos
pushf
(bad)
fiadd
lods
popf
dec
clc
retf
xchg
aam
sbb
or
aad
lock
push
and
popf
fstp
daa
dec
and
or
push
mov
fimul
adc
push
jo
fucomp
mov
pop
js
cmp
xor
push
in
stc
xchg
jne
test
sbb
test
xor
lods
push
jne
inc
movs
clc
aad
jle
dec
pusha
pop
inc
mov
ficomp
dec
dec
iret
or
jb
push
sbb
cwde
pop
(bad)
fwait
in
mov
std
sahf
inc
js
mov
cmps
imul
mov
adc
sub
push
cmp
sar
xchg
ja
fcomp
mov
mov
fadd
dec
daa
pop
pop
mov
or
mov
push
aad
ficom
push
or
aad
(bad)
and
mov
lods
sbb
pop
xor
movs
xchg
jne
test
cmp
sub
mov
cs
jns
scas
xchg
pushf
pop
idiv
lods
ss
adc
push
repnz
les
int3
cwde
sub
test
mov
loop
popf
daa
fcom
adc
dec
dec
fwait
pop
inc
ret
out
loope
xor
mov
pop
ficomp
mov
pop
mov
jmp
dec
into
fdecstp
test
cmps
test
jge
ja
cs
test
in
mov
enter
call
or
mov
push
mov
inc
in
lock
mov
jecxz
jns
mov
enter
repnz
mov
cmp
and
add
lahf
fild
(bad)
shl
std
pop
or
push
mov
add
out
mov
jns
jo
cmc
je
dec
ins
cmc
push
fwait
push
sti
jbe
adc
enter
and
cs
call
and
mov
jle
jo
aad
jge
pop
jne
cmps
out
shl
retf
mov
sbb
adc
aam
sub
icebp
jl
jl
jb
daa
idiv
push
sbb
out
fnsave
sub
cld
icebp
mov
inc
mov
int
js
out
js
in
(bad)
test
push
adc
add
push
stos
dec
daa
inc
ds
test
push
bnd
sbb
pop
pop
(bad)
pop
mov
cmp
movs
or
and
push
xor
mov
dec
clc
xor
lahf
jb
xor
mov
adc
and
sub
dec
addr16
jle
adc
pusha
xchg
ror
push
mov
jno
stos
xor
bound
in
ins
in
scas
icebp
xchg
mul
sbb
into
ds
jl
mov
cld
faddp
dec
push
ins
repnz
cmps
outs
pop
mov
push
addr16
ficomp
data16
or
repz
loop
out
dec
es
loop
mov
les
repnz
into
arpl
shl
fld
xor
fwait
inc
fiadd
loop
ins
(bad)
pmaxub
fisub
jbe
push
(bad)
mov
push
les
inc
sbb
sbb
cmp
fisttp
cmp
out
fst
xchg
lahf
or
inc
push
sub
mov
enter
cmp
div
int
mov
popa
sbb
and
pop
mov
in
pop
push
push
pop
mov
jae
push
ins
ret
sbb
adc
mov
rcl
mov
shl
xor
push
xor
sub
mov
pop
mov
int
(bad)
jns
lea
jle
js
jne
push
mov
push
xor
dec
(bad)
dec
pop
cld
adc
inc
std
ror
fwait
dec
mov
daa
out
xor
outs
xchg
dec
inc
scas
mov
jns
cmps
in
sub
fisub
aam
dec
dec
(bad)
xor
or
es
sbb
lds
xchg
mov
dec
jbe
pop
fiadd
repz
inc
cdq
test
mov
jl
(bad)
aaa
sahf
mov
test
mov
xchg
in
fimul
push
not
ins
push
push
dec
jg
jmp
loope
sti
mov
js
imul
lahf
xor
mov
xchg
rep
test
lods
(bad)
jno
ins
loop
mov
jg
(bad)
cmp
fnstenv
cld
sar
mov
mov
shl
(bad)
scas
jae
cmp
push
ins
rcl
cmp
test
pusha
adc
mov
jmp
cmp
pop
gs
inc
adc
and
stc
mov
ja
and
out
in
mov
jp
mov
xor
push
xor
fimul
popa
jns
std
frstor
movs
fidiv
add
daa
cmp
(bad)
out
dec
dec
mov
sbb
shl
push
jmp
test
push
or
imul
test
jbe
mov
test
pop
bound
xor
push
mov
cmc
call
inc
test
pop
loopne
retw
sti
mov
xchg
sub
shr
ja
xchg
mul
rol
repnz
push
(bad)
adc
pop
cmp
cdq
jg
push
stos
or
out
push
jo
or
stos
dec
pop
out
cmp
fmul
cmps
or
cmps
loope
jl
outs
and
js
cld
sbb
add
(bad)
(bad)
mov
(bad)
leave
out
stc
(bad)
repz
pop
ds
les
pop
aas
push
mov
pop
sub
jnp
je
jbe
sub
jae
xchg
inc
sub
fcmovb
mov
fwait
aaa
rol
int3
aam
mov
or
sti
ja
cdq
pop
or
xchg
pop
ja
jno
fxtract
xchg
stc
stos
in
enterw
pop
mov
inc
mov
daa
pop
sbb
sti
pop
fwait
test
push
inc
std
mov
pop
loop
or
jnp
jbe
movs
inc
rcr
iret
pushf
sbb
jmp
fstp
jnp
mov
in
add
mov
mov
jae
jl
fsubr
sub
jecxz
fsub
cli
mov
pop
dec
push
jmpw
arpl
cmp
lahf
pop
xchg
test
sub
mov
int3
outs
jg
pop
xchg
push
sbb
adc
mov
(bad)
jb
mov
addr16
jl
pop
jmp
jno
pop
in
lods
cmp
xchg
sub
and
cdq
repnz
sbb
retf
in
add
aas
mov
int
jbe
mov
xchg
cmp
cdq
xor
imul
call
mov
jae
pop
(bad)
std
push
movs
and
movq
xor
jmp
ret
retf
loope
jno
(bad)
fistp
lock
mov
das
ja
adc
ins
clc
dec
xchg
and
call
xor
(bad)
iret
cmps
loope
jmp
(bad)
fimul
pop
and
push
push
aas
or
push
ins
fdivr
out
(bad)
into
xchg
(bad)
aaa
sub
test
ins
enter
pusha
enter
mov
jae
push
(bad)
mov
(bad)
xchg
jb
add
or
add
test
jmp
adc
cld
push
cli
in
add
icebp
out
fbstp
push
pop
xchg
push
push
jl
sub
or
enter
jne
mov
sub
or
mov
retf
push
jnp
pop
lahf
jl
pop
test
shl
push
popf
jmp
cld
sahf
in
sbb
mov
and
movs
(bad)
mov
and
mov
xor
addr16
cs
imul
(bad)
neg
pop
sbb
jmp
rcl
adc
mov
xchg
ja
xlat
repnz
sbb
sbb
retf
fild
in
lods
loop
in
mov
dec
les
mov
lods
inc
cdq
push
jle
test
cs
adc
jns
adc
xor
jle
push
jmp
retf
push
jmp
mov
mov
cmps
stos
add
jle
test
xor
xchg
(bad)
in
xchg
jge
jmp
outs
xor
mov
std
mov
outs
cmp
lea
jo
jno
in
lfs
jno
pop
mov
leave
mov
(bad)
gs
inc
into
cmp
cmc
or
dec
xor
iret
addr16
outs
div
call
xchg
mov
push
dec
jo
xchg
cmp
and
jle
adc
dec
mov
pop
pop
shl
test
call
push
push
stc
std
pop
das
xchg
mov
dec
mov
xchg
mov
es
inc
pop
cld
jns
scas
mov
jb
fwait
movsx
aas
fs
xor
ja
pop
daa
test
xor
mov
shl
mov
cmps
call
xor
cmp
out
and
inc
xlat
dec
imul
xchg
retf
(bad)
pusha
clc
rcr
mov
inc
lahf
jp
xchg
push
and
mov
and
sbb
in
sub
ficom
jnp
sbb
(bad)
loope
pop
xor
out
pop
pop
pop
mov
mov
sbb
jg
mov
push
sbb
jle
int
(bad)
in
(bad)
rol
jmp
(bad)
fucomi
mov
sub
mov
es
adc
imul
cs
mov
mov
push
jp
inc
push
int3
into
in
fimul
mov
rcl
dec
sbb
push
sub
jmp
shr
push
clc
in
jge
retf
pop
ret
gs
xchg
div
js
aad
dec
daa
jno
test
out
pop
adc
xor
sub
adc
or
push
shl
popf
(bad)
mov
daa
push
repnz
push
dec
mov
ret
pop
scas
jge
jecxz
sti
jg
lea
out
mov
outs
arpl
and
cmp
mov
fadd
es
push
dec
mov
xlat
call
mov
stc
xchg
or
inc
ins
jl
and
sbb
push
mov
jae
mov
mov
cmp
cmc
test
cmp
inc
ins
shr
sbb
adc
sar
shr
jae
call
cs
sub
sub
cwde
sub
fsubr
fxch
xor
dec
adc
cmps
mov
pop
(bad)
push
jmp
jno
ret
mov
or
sbb
mov
pop
repnz
xchg
adc
jle
mov
lods
push
mov
(bad)
repz
fwait
lahf
repz
int
fcomp
cmp
cld
cs
in
mov
loop
mov
test
dec
mov
jns
fldcw
sbb
cmc
imul
pavgw
sbb
or
adc
imul
or
out
fstp
push
adc
(bad)
ror
retf
or
and
cmp
dec
pop
add
test
lahf
movs
loopne
out
fst
outs
mov
adc
dec
call
cmp
jmp
fwait
or
dec
stos
icebp
cs
stos
fucomi
add
imul
push
cmp
lods
cwde
xor
out
(bad)
enter
fnsave
xor
xchg
lods
leave
pop
call
mov
jnp
and
lods
cwde
xchg
xor
(bad)
int
fstp
jno
(bad)
xchg
fmul
lea
out
jl
cmp
jp
inc
ret
cmp
inc
nop
std
add
stos
ret
jl
xchg
in
add
adc
popa
addr16
mov
cmp
rcr
pop
or
(bad)
xor
or
dec
sub
sar
sbb
aas
mov
cmps
fdivr
inc
mov
or
retf
inc
scas
push
aam
or
adc
inc
sub
mul
push
jg
jmp
imul
cmps
sahf
mov
cmp
push
pop
sub
pop
sar
fwait
retf
out
jb
push
popf
shl
retf
ss
sub
inc
or
mov
or
jecxz
jp
push
stos
cmp
mov
aaa
scas
mov
stos
pop
sub
or
mov
cmp
mov
and
js
push
pop
out
bound
or
repz
add
xor
cmc
(bad)
sbb
xchg
cdq
xor
adc
out
and
loop
mov
xchg
mov
imul
adc
jle
retf
mov
lahf
in
out
mov
sub
push
and
mov
ret
aas
mov
cmp
xor
arpl
jae
enter
mov
jmp
fcomp
dec
fwait
cmps
scas
in
mov
xchg
scas
push
das
enter
xor
loopne
enter
cmc
test
pop
fs
inc
xor
shl
(bad)
dec
xor
adc
cmp
sub
xchg
and
scas
xchg
(bad)
jne
loopne
fstp
stos
xlat
mov
xor
inc
popf
fst
fnstsw
add
fcomp
lods
or
addr16
(bad)
cmp
xchg
not
dec
and
and
not
test
cs
xchg
mov
pop
mov
bnd
out
repnz
dec
shl
cmps
or
pop
imul
jge
jns
sub
cmp
scas
pop
jmp
mov
add
add
xchg
ins
jmp
ret
mov
fsub
movs
jb
adc
push
and
push
outs
push
repz
es
cmp
lods
xchg
cmp
repnz
sbb
sahf
jo
lock
sub
frstor
lds
cmps
stos
(bad)
hlt
cmps
mov
(bad)
jmp
imul
push
dec
mov
xchg
(bad)
aam
addr16
enter
jne
xchg
fwait
popf
xor
lahf
and
cwde
mov
pop
and
mov
ins
clc
cmp
jge
lahf
sub
mov
push
leave
jne
push
xchg
lods
sbb
out
movs
xchg
or
mov
cld
call
mov
jmp
xchg
inc
scas
and
call
and
or
mov
cmp
mov
pop
adc
push
mov
(bad)
icebp
sahf
ins
cli
jle
xchg
or
div
pop
(bad)
lahf
jnp
push
pop
in
sbb
fst
xchg
jmp
push
mov
xlat
xchg
push
jmp
lods
mov
cmp
jns
push
sbb
push
or
fisubr
inc
sbb
xchg
jle
popa
cmp
paddsb
pop
mov
cmc
inc
mov
jp
in
xchg
pop
lock
shl
xor
leave
ins
int
push
cdq
out
mov
retf
das
iret
cli
mov
(bad)
int3
out
cwde
movs
pop
aad
xchg
dec
pop
sar
sbb
sub
add
ja
clc
cwde
sbb
mov
mov
popf
mov
push
popa
retf
cli
or
pop
dec
push
mov
sti
fild
jns
in
fimul
scas
mov
stc
jo
mov
mov
int3
adc
into
fistp
repz
cs
test
push
call
enter
mov
or
jne
fmul
xchg
sti
lds
sar
enter
add
jae
dec
pushf
(bad)
stos
push
in
loop
pop
jmp
enter
push
div
cli
cwde
pop
dec
mov
sub
call
xchg
mov
rol
aas
pop
jno
fidivr
inc
lods
movs
stc
xchg
repz
pushf
or
fld
mov
or
popf
or
std
push
fild
(bad)
push
mov
out
dec
mov
rcl
mov
test
sub
test
or
shr
test
popa
sahf
icebp
outs
pop
and
push
je
lock
xchg
push
pop
adc
mov
js
stc
fs
jmp
jle
call
sbb
mov
adc
mov
jmp
les
fcmovbe
mov
cmp
xchg
out
jae
xchg
fidiv
adc
aad
sub
(bad)
and
jbe
gs
pop
xor
or
ins
(bad)
shl
scas
pop
fisttp
out
inc
push
(bad)
or
outs
jge
dec
mov
mov
jo
aam
push
int3
cmp
std
(bad)
in
mov
clc
imul
push
sub
jns
mov
or
and
movs
(bad)
mov
xchg
or
mov
jg
mov
xor
je
loope
dec
inc
mov
mov
jl
xor
mov
shl
adc
(bad)
mov
je
enter
sti
mov
push
push
and
inc
sub
cmp
daa
out
jb
push
dec
dec
sbb
je
mov
inc
inc
scas
mov
retf
and
shr
(bad)
xchg
ins
sti
cmp
or
jb
mov
mov
adc
jmp
shr
mov
inc
ins
popa
push
inc
scas
aam
inc
retf
rcl
shr
mov
or
and
push
fidivr
jae
cdq
mov
aam
loopne
(bad)
in
mov
fld
jo
xchg
inc
out
sub
neg
cmc
test
test
ret
jmp
dec
popa
lds
or
and
jns
jge
hlt
xchg
call
aad
fndisi(8087
popf
(bad)
inc
outs
in
jmp
cmp
push
fcmove
(bad)
(bad)
mov
addr16
pop
mov
jno
aas
jnp
jbe
aad
stc
retf
push
pop
jl
and
outs
ds
into
ret
jge
sti
fs
add
adc
or
(bad)
sub
xchg
jnp
aaa
aas
shr
fisubr
and
push
call
push
mov
int3
out
mov
adc
lods
fdivr
mov
mov
and
rcr
cli
call
outs
cld
xor
aad
cmp
sub
or
ror
out
in
in
out
xchg
test
inc
sbb
mov
push
mov
neg
push
fisub
out
cdq
iret
jg
ss
repnz
sar
lahf
daa
in
sbb
iret
(bad)
ds
cmp
mov
jnp
jb
dec
jg
jne
sbb
outs
aad
cmp
mov
shr
fcomip
jle
adc
xchg
push
xchg
add
jecxz
aaa
(bad)
sahf
pop
rcl
fwait
cmp
fidiv
int
ins
mov
sub
sbb
and
fnsave
cld
jae
or
ja
pop
pop
fldenv
mov
jg
into
mov
outs
scas
dec
lods
(bad)
cmp
les
lea
fild
fnstcw
aam
mov
xchg
pop
add
xor
push
and
dec
cmp
fs
cmc
call
into
adc
(bad)
loopne
fisubr
xor
mov
xor
imul
popf
stc
adc
pop
gs
adc
lock
stos
sbb
push
and
iret
aas
rcr
fstp
sti
es
mov
pop
fist
mov
cmp
int3
outs
enter
call
mov
push
dec
or
pop
dec
mov
loope
mov
pop
sbb
icebp
stos
lods
fisttp
push
inc
loop
stc
adc
js
cmp
sub
pop
xor
cwde
mov
or
std
fs
cmp
mov
ds
(bad)
cmc
mov
leave
scas
rcr
jno
lea
adc
ins
sbb
jno
pop
pop
push
and
(bad)
movs
jmp
int3
loopne
xchg
sti
enter
(bad)
cmps
sub
sbb
clc
adc
or
ja
jne
add
movs
in
inc
aas
mov
jecxz
push
or
fild
movs
fdiv
xchg
aas
fstp
sahf
pop
pop
das
call
push
jge
push
lods
jp
pop
mov
pop
jl
cmp
mov
mov
in
in
(bad)
mov
jb
xchg
int3
into
fstp
push
adc
retf
sub
add
dec
pushf
scas
icebp
jl
test
call
fst
adc
adc
lods
push
lods
mov
mov
data16
hlt
push
xchg
outs
jns
lea
sbb
or
es
stos
das
sbb
adc
xor
imul
iret
in
xor
fwait
daa
in
mov
cmp
int
into
out
idiv
movs
nop
ret
cmp
loopne
shl
and
and
dec
test
mov
int
inc
imul
or
std
inc
cmp
jae
inc
retf
jmp
and
pop
cli
adc
sub
mov
xor
xchg
daa
je
xchg
repz
out
fcom
jo
loop
and
mov
sbb
imul
test
mov
out
stos
lods
push
mov
outs
rol
out
fistp
leave
mov
mov
test
out
arpl
(bad)
icebp
jns
out
mov
pusha
shl
js
dec
inc
xchg
sbb
ret
dec
mov
inc
pop
sub
xchg
mov
xor
xor
adc
or
cs
popf
xchg
std
cmp
jns
cmp
sbb
jge
iret
add
hlt
adc
in
sar
das
pop
ds
or
in
dec
std
movs
mov
pop
mov
jb
int3
retf
outs
cmp
cmp
ficomp
in
imul
outs
fstp
jecxz
sub
push
sbb
call
(bad)
arpl
dec
pop
(bad)
sbb
out
cs
sub
into
sbb
mov
(bad)
sar
icebp
(bad)
gs
adc
sub
cs
aaa
(bad)
aas
test
stos
retf
idiv
leave
dec
ja
enter
mov
xchg
outs
adc
push
dec
add
movs
adc
adc
push
inc
retf
nop
xchg
adc
ja
jge
aas
ja
xor
sbb
jnp
pusha
cmp
imul
pop
jae
addr16
mov
dec
adc
shr
cmps
scas
jle
out
pop
int
dec
fild
mov
scas
add
adc
adc
mov
xchg
adc
imul
ss
loope
retf
mov
(bad)
mov
dec
sub
shl
lds
sub
sub
xor
daa
dec
jns
jne
mov
pop
inc
lahf
(bad)
(bad)
jle
into
into
das
pusha
adc
jmp
cmc
adc
repnz
jnp
mov
aas
scas
mov
popa
rcl
jbe
fidiv
(bad)
lock
fst
sbb
mov
dec
repz
imul
hlt
xchg
das
dec
xor
push
sbb
jp
fwait
mov
jp
sub
lock
mov
call
mov
out
xlat
js
data16
sar
in
dec
sbb
stc
xchg
rol
mov
inc
pop
jge
and
jne
dec
jns
adc
sub
stos
pop
or
dec
xor
movs
mov
cdq
lods
add
retf
mov
clc
mov
mov
mov
clc
fild
rol
ins
sub
shr
int
mov
cmp
fist
ins
dec
inc
sub
add
cmp
dec
out
je
inc
fisubr
mov
push
adc
into
iret
mov
mov
cld
fsubr
sbb
xchg
mov
cmc
xchg
outs
clc
call
pop
inc
js
(bad)
in
adc
nop
(bad)
mov
movs
rcr
xchg
jnp
gs
or
jmp
pop
adc
or
or
out
sbb
mov
in
cdq
dec
aam
fdivr
xor
mov
montmul
cmps
add
cmc
push
in
mov
pop
jns
mov
test
mov
sub
test
mov
xchg
dec
adc
sub
(bad)
out
add
adc
push
xchg
ins
cmp
jnp
out
jns
hlt
xor
nop
xlat
cmps
add
push
div
aad
(bad)
fidiv
push
loop
(bad)
jb
jge
dec
es
xlat
xchg
jno
and
out
loope
xchg
(bad)
lods
in
test
cmc
jnp
pop
in
mov
sub
arpl
inc
std
shr
out
out
into
shl
mov
dec
mov
cmp
aam
add
dec
push
jns
into
or
pop
dec
daa
dec
out
(bad)
int
imul
mov
mov
lea
nop
mov
(bad)
es
sbb
(bad)
stc
(bad)
mov
mov
addr16
imul
iret
jmp
ret
outs
out
adc
jne
jecxz
xchg
cmp
xchg
mov
or
gs
out
mov
add
jns
ds
inc
popa
inc
sub
shr
adc
fsub
inc
jge
inc
leave
loop
xor
push
fld
clc
sub
xchg
xchg
js
fs
mov
out
ds
xor
xlat
test
shl
xlat
cmps
cmp
stc
push
adc
mov
mov
popf
les
mov
xchg
rcl
jg
pop
mov
out
jb
retf
xlat
arpl
sti
mov
imul
test
arpl
add
mov
das
dec
push
fldenv
jae
push
scas
(bad)
push
pop
sub
push
fstp
fisub
aam
arpl
or
jno
lock
loopne
dec
fs
fs
inc
(bad)
or
loopne
std
cs
inc
pop
mov
push
les
rol
push
lods
lock
dec
xchg
xor
push
xlat
outs
pop
std
loope
push
stc
jecxz
fnsave
inc
cld
xchg
lods
jbe
pop
sub
push
cmp
aas
xor
mov
sti
mov
inc
xor
es
dec
imul
test
cmps
jae
vpaddq
ja
cmps
xchg
out
pop
jns
cli
cmp
dec
test
test
push
or
jae
stos
or
mov
pop
(bad)
out
ror
mov
jp
outs
xchg
aad
push
jmp
mov
ret
lahf
dec
sub
(bad)
ds
shr
push
(bad)
sbb
cmp
retf
cmp
dec
jbe
fidiv
jg
in
sub
loop
std
dec
mov
jmp
mov
mov
and
in
(bad)
call
outs
pop
stos
cmp
sub
out
outs
mov
jne
mov
inc
leave
and
(bad)
push
xor
add
or
neg
xchg
inc
xchg
call
mov
xchg
femms
mov
jge
xchg
mov
cmp
jne
shl
loopne
lods
xchg
fsubr
test
sahf
pop
pop
shl
stc
in
inc
test
sbb
jns
mov
mov
sub
and
mov
mov
cmp
adc
sub
std
or
and
inc
out
adc
cmp
mov
outs
sub
shr
hlt
enter
inc
outs
push
outs
pop
int3
ss
mov
jne
jecxz
out
xor
vmovaps
lahf
inc
mov
aad
mov
xor
push
nop
neg
xor
dec
idiv
std
mov
dec
arpl
icebp
sbb
adc
jle
adc
jae
pop
dec
sub
sti
ror
(bad)
call
jne
lods
aaa
dec
jno
scas
adc
test
dec
scas
push
mov
sub
das
push
xor
popf
cmp
jle
loope
dec
fs
or
fld
and
jb
lock
stos
scas
jmp
in
(bad)
mov
mov
inc
icebp
push
and
test
lods
dec
arpl
jl
(bad)
mov
(bad)
(bad)
inc
sbb
mov
inc
movs
es
adc
(bad)
outs
pop
jl
dec
mov
leave
xor
scas
out
and
popa
rol
sub
pop
outs
jmp
dec
inc
mov
xchg
aas
stc
(bad)
and
xchg
enter
(bad)
dec
jmp
stc
mov
ss
jmp
out
test
xchg
xor
lea
mov
das
gs
aaa
xchg
sub
out
sahf
jl
mov
dec
push
repnz
cmp
sbb
jnp
fwait
xchg
sbb
xlat
and
xchg
mov
loope
sub
(bad)
fiadd
test
mov
fwait
xchg
idiv
cmp
push
jnp
outs
sub
jb
sahf
test
in
div
jmp
std
sbb
dec
jae
xchg
xor
push
in
push
adc
int
movs
lods
stc
xchg
xor
fcom
sbb
not
outs
enter
out
dec
dec
(bad)
mov
test
out
push
pop
clc
stos
xchg
int
add
and
sbb
inc
lods
in
jbe
xchg
retf
test
dec
sti
mov
imul
push
test
or
les
(bad)
popa
je
xchg
or
(bad)
cs
repnz
cmp
bound
mov
das
(bad)
dec
pop
add
pop
in
bound
cmp
xor
shl
sbb
popf
mov
pop
and
scas
sti
mov
pop
jecxz
stc
inc
in
in
mov
test
int3
mov
fnstcw
scas
mov
outs
jno
jns
cmp
mov
loopne
fild
or
(bad)
cmps
jne
(bad)
xchg
push
lock
les
pushf
sar
ja
xchg
movs
or
shr
and
jno
mov
rcl
mov
cmc
xor
ret
xor
xchg
mov
(bad)
push
xor
daa
scas
movs
test
cmc
inc
shr
pop
ret
in
sahf
xlat
test
or
loope
jns
ret
inc
in
cmps
push
xchg
mov
(bad)
xchg
push
adc
dec
or
mov
ds
mov
inc
xchg
cli
fucomp
push
cmp
jmp
rol
leave
daa
mov
das
aad
call
mov
movs
imul
cdq
mov
shl
cmp
and
pop
jns
jo
fcmovu
stos
jns
or
mov
cmp
in
jmp
and
dec
and
loop
adc
cmp
loop
cmps
outs
movs
enter
jns
cmp
pop
jns
xchg
mov
dec
ds
aaa
les
out
xor
scas
pop
or
std
outs
ret
xchg
xchg
cli
push
sbb
js
xchg
sub
push
adc
xchg
adc
push
cs
je
mov
movd
rcr
(bad)
aad
pop
adc
cmc
jne
int3
dec
sub
mov
aaa
pop
fcomp
nop
shr
neg
in
sub
test
jne
test
stc
add
outs
xchg
in
push
cmp
adc
(bad)
scas
lahf
test
out
adc
dec
pushaw
test
cmp
jge
and
out
in
daa
mov
mov
scas
xlat
iret
ja
or
mov
jp
mov
js
daa
fst
sub
mov
ins
(bad)
xlat
mov
(bad)
xor
mov
ss
cmp
pushf
ja
cmp
mov
sbb
imul
or
pop
imul
stc
push
out
hlt
add
inc
or
cs
jo
inc
sbb
lds
pop
clc
arpl
daa
sbb
aas
lds
xor
mov
fs
jmp
jmp
das
shl
push
and
rcr
and
fcom
dec
and
mov
(bad)
pop
(bad)
pop
jp
xor
jno
(bad)
outs
lods
xchg
or
rcl
lock
xchg
pop
adc
or
jle
pop
mov
jle
jmp
stc
or
pop
cmp
cmps
or
inc
sub
movs
aas
cmc
mov
cmp
adc
sub
lds
sbb
mov
or
stos
jg
adc
test
xchg
in
jecxz
ret
stc
jge
add
push
imul
mov
ret
ins
cmps
das
dec
stos
fldenv
xchg
mov
push
push
adc
pop
std
jns
pop
jo
into
mov
and
cmp
mov
or
loop
and
adc
xor
std
(bad)
cmp
int
xchg
div
test
mov
mov
jbe
aaa
xchg
sub
addr16
add
out
test
push
cmps
jae
jecxz
xchg
ds
push
stos
shl
cmps
aaa
dec
aad
mov
jg
jns
lods
inc
mov
test
das
sbb
cmp
xchg
outs
mov
add
sbb
mov
inc
out
out
pop
(bad)
cmps
test
xor
pushf
sub
mov
call
mov
jne
dec
(bad)
cmc
dec
loop
in
jne
enter
sbb
mov
in
call
aas
pop
jmp
xchg
mov
mov
sbb
cmp
bound
dec
(bad)
es
pop
sbb
retf
out
paddsb
sbb
jl
clc
jae
(bad)
mov
cmps
rcl
jl
pop
ja
or
icebp
jae
inc
out
ds
and
rcr
sbb
shl
and
mov
movs
inc
fiadd
pop
mov
mov
ins
mov
(bad)
push
xchg
(bad)
popa
mov
mov
jle
fst
cli
fdiv
(bad)
fstp
jae
mov
jmp
call
fld
adc
dec
jecxz
xor
jo
imul
jecxz
jae
lds
cmp
ret
fsubr
xchg
imul
enter
popa
fsub
lds
mov
popa
ja
retf
or
ret
add
adc
sbb
sub
(bad)
stos
in
shl
sbb
cld
aaa
dec
mov
or
das
or
bound
movs
test
push
lods
mov
sub
adc
fidiv
mov
mov
adc
xlat
neg
icebp
fwait
add
mov
aaa
sub
dec
(bad)
gs
dec
dec
mov
repz
jl
jp
out
adc
scas
push
xchg
lock
ss
int
xor
and
loop
test
jl
cmp
popa
fcomip
dec
sbb
mov
jecxz
scas
popa
or
cmp
(bad)
cmp
dec
je
out
push
push
sbb
mov
add
loopne
dec
std
stc
sbb
mov
xchg
out
xchg
rcr
push
cld
add
mov
push
and
shl
pop
stc
jmp
clc
mov
cld
ins
inc
dec
or
xor
jb
sbb
cmps
(bad)
fsubr
sub
imul
sbb
je
push
mov
sub
mov
mov
push
sti
rcl
(bad)
shl
popf
sbb
mov
test
js
ret
sub
aaa
lea
aas
push
retf
pushf
fdivr
mov
imul
jp
mov
xor
jmp
jecxz
or
jle
not
jo
push
stos
push
jmp
mov
inc
out
dec
add
test
mov
(bad)
cmps
cs
rcr
jns
rcr
paddb
fidiv
jmp
fild
inc
stos
mov
(bad)
stos
in
in
icebp
xchg
mov
iret
cmp
mov
pop
test
pop
imul
retf
in
lds
mov
aas
jg
xor
adc
inc
out
lods
push
imul
bound
dec
xchg
adc
test
mov
ins
out
js
imul
push
cmc
enter
cwde
sahf
ret
mov
outs
lock
scas
and
adc
aas
mov
sar
pop
iret
mov
pop
std
push
push
ret
(bad)
jo
ins
cmc
(bad)
pop
jg
cmp
or
clc
xor
fdivr
(bad)
mov
dec
leave
pop
arpl
xchg
cmps
das
jp
ror
xchg
cmps
lods
lds
scas
mov
(bad)
adc
adc
xor
pushf
dec
jae
xchg
mov
ins
xor
sti
cmp
sbb
mov
das
push
add
jo
mov
and
je
add
cmp
sub
xchg
jo
ss
(bad)
(bad)
mov
sub
cmps
jns
ret
mov
loope
push
int3
xor
push
dec
pop
gs
xchg
out
pop
aaa
mov
jecxz
mov
lea
xor
sti
cmp
fs
rcr
cmps
in
aas
xor
adc
scas
jns
mov
jg
bound
jl
(bad)
cld
jbe
iret
xchg
outs
jnp
jge
in
fidivr
pop
cmc
dec
sub
popf
push
in
(bad)
xchg
mov
mov
icebp
rol
adc
(bad)
nop
out
push
aad
outs
call
jb
loope
mov
mov
jb
int
jno
adc
push
mov
push
movs
fldenv
pushf
and
pop
sbb
jmp
xor
fs
enter
cwde
inc
jl
push
adc
sub
(bad)
xchg
sbb
mov
std
xchg
xchg
mov
cmc
xchg
leave
stc
adc
cmc
push
js
cmps
leave
call
lods
or
ja
shr
jp
pop
test
in
out
bound
shr
mov
push
aas
jge
scas
js
cmp
mov
mov
mov
pop
pop
xchg
fxch
nop
xor
pop
cmp
je
cmp
push
pop
dec
xor
sahf
cmp
fdivr
data16
ins
mov
ss
dec
popa
gs
in
out
hlt
sbb
ret
aaa
(bad)
sahf
push
mov
jb
and
xchg
mov
dec
shl
pushf
retf
repz
data16
fisttp
xor
in
jns
sub
stc
cmps
das
sbb
in
jecxz
test
rcl
xchg
pop
loope
sbb
push
jnp
mul
adc
xor
add
fsub
push
outs
rcl
jmp
loopne
cli
jge
std
or
cs
stc
push
data16
imul
imul
xchg
sub
ja
movs
sbb
push
push
mov
xchg
sub
push
ja
out
xchg
jle
jb
or
inc
mov
arpl
in
mov
das
dec
and
mov
sbb
or
dec
push
pusha
dec
cmp
popf
sub
xlat
repz
lea
adc
ss
das
jg
jecxz
jne
mov
xchg
push
int
cmp
pop
neg
and
pop
xchg
dec
bound
scas
mov
mov
mov
push
push
dec
mov
xchg
mov
jnp
cld
retf
lahf
cwde
xchg
cmp
outs
push
jecxz
test
dec
and
jo
cmp
mov
rcr
test
sbb
js
pop
mov
mov
jo
cwde
jle
int3
jno
sbb
pop
jmp
mov
sti
mov
push
mov
jmp
dec
pop
fstp
mov
jecxz
lahf
sub
push
cmp
mov
mov
leave
rcl
movs
aaa
pop
jmp
push
ds
lods
scas
(bad)
retf
out
in
push
mov
pop
or
mov
mov
dec
xchg
dec
ror
jmp
movs
movs
sti
enter
loope
jecxz
mov
lds
cli
ss
dec
xchg
jns
dec
sub
dec
push
outs
nop
enter
js
and
ret
in
dec
adc
stos
xchg
cmps
neg
and
sub
sbb
mov
jb
rol
into
movs
test
add
jnp
out
test
mov
ds
cs
mov
icebp
jmp
jmp
jecxz
imul
sbb
push
sbb
dec
cmp
and
sub
sub
or
cwde
push
sub
aad
add
mov
sbb
rol
iret
(bad)
cmp
inc
(bad)
clc
adc
xchg
out
pop
pop
dec
jns
jae
repnz
fidivr
adc
int
inc
mov
xor
repnz
idiv
enter
rcr
cmp
mov
jle
lock
std
and
or
sub
mov
adc
in
cmc
clc
sar
adc
aam
retf
ret
lds
aaa
inc
(bad)
xlat
mov
daa
pop
fwait
cmp
pop
mov
idiv
aad
daa
in
sbb
mov
or
pop
std
and
xor
inc
jmp
out
and
out
ficomp
xor
pop
cmp
pop
ficom
out
bound
fwait
mov
test
xor
or
mov
mov
std
dec
mov
std
mov
sbb
fdiv
fisubr
mov
movs
push
rcr
push
in
dec
ds
sub
or
je
es
ret
in
retf
pop
pop
mov
xchg
mov
ret
lea
das
repnz
ret
fwait
cmp
stc
je
mov
scas
rep
push
pop
push
fld
cwde
jno
mov
jno
js
pop
rol
and
fcom
fist
iret
(bad)
cwde
fucom
out
jge
xchg
push
cli
ds
pop
xchg
fstp
inc
pushf
icebp
mov
cs
retf
int3
jbe
and
retf
mov
sub
mov
popf
popa
fist
jecxz
imul
or
mov
jnp
out
push
test
xor
cld
mov
loop
cld
shr
pop
jo
fadd
jecxz
inc
fisttp
mov
sub
dec
mov
lods
jns
ss
xchg
mov
cmp
iret
fucomip
call
in
cld
nop
and
jbe
retf
add
ret
daa
fsub
jbe
push
iret
pop
iret
dec
and
ret
call
(bad)
pop
mov
(bad)
sahf
pop
addr16
jp
jmp
sahf
icebp
out
cwd
mov
imul
pop
dec
lahf
jle
push
dec
sbb
mov
mov
sahf
cwde
dec
and
xor
enter
sbb
(bad)
inc
arpl
mov
push
scas
dec
push
idiv
stos
icebp
repz
fdiv
lock
stos
das
arpl
add
test
in
lods
iret
movs
fistp
fwait
clc
cs
loop
fidivr
pushf
idiv
(bad)
js
rcr
test
xor
cmp
mov
sub
xchg
shr
cld
int
jb
fisub
repnz
bound
fcom
fistp
push
cmp
inc
and
fdivr
fdivrp
jnp
test
pop
popa
cmp
fcmovu
into
(bad)
cmp
out
addr16
lahf
jnp
adc
adc
dec
jge
pop
inc
not
sbb
gs
mov
loopne
stos
outs
dec
std
test
add
dec
inc
shr
out
in
aad
sbb
rcl
out
lahf
and
cdq
push
mov
xor
fdivr
xchg
repnz
rol
inc
imul
inc
xchg
pop
mov
mul
and
cmp
rcl
cmp
fisubr
sti
leave
test
in
pop
aaa
or
inc
loopne
sub
xchg
xchg
cli
data16
mov
cdq
xor
mov
xchg
cdq
enter
add
pop
hlt
fnstcw
fyl2xp1
in
mov
adc
ja
aaa
movs
pop
sahf
fsubrp
sub
int3
and
mov
mov
in
in
and
pop
jg
sub
cmp
call
icebp
push
mov
push
aas
fcmovne
repnz
test
dec
fsubp
mov
mov
ror
imul
aam
inc
ss
pop
jp
daa
rcl
sub
dec
mov
xchg
stos
sub
cmp
data16
fmul
add
retf
jmp
xchg
xor
ins
push
repnz
sub
(bad)
mov
cld
lods
adc
ret
jae
lds
pop
cmps
cmp
sbb
hlt
mov
fwait
push
mov
scas
pop
pop
push
xlat
sbb
(bad)
pop
xor
mov
mov
mov
add
push
rcl
adc
mov
cmc
sbb
in
ds
cs
push
or
js
sbb
sbb
ror
aad
pushf
mov
adc
sbb
jo
nop
sub
repnz
out
push
fstp
daa
sti
leave
fistp
add
mov
repz
arpl
pop
push
mov
ds
in
clc
pop
jmp
dec
mov
js
loope
jmp
cmp
adc
xlat
scas
jmp
or
mov
xchg
nop
jmp
mov
jle
lea
stc
ss
sbb
leave
out
push
xchg
xchg
mov
mov
loope
fsubr
mov
mov
add
push
aad
cs
fwait
push
(bad)
jmp
fsubr
cmps
(bad)
lahf
out
ffree
xor
adc
mov
xor
xor
and
stos
mov
inc
es
dec
dec
jmp
inc
mov
mov
lods
fist
mov
xchg
xchg
cli
int
sub
loop
in
and
jnp
push
or
cdq
lahf
test
mov
adc
mov
cdq
in
fwait
scas
lock
call
cmp
pop
(bad)
jns
fidiv
sbb
mov
inc
ja
jge
add
(bad)
adc
fmul
out
xor
cmp
cwde
fs
test
dec
or
xor
stos
push
les
ja
jne
mov
xchg
inc
jle
mov
jmp
retf
sub
cmp
and
inc
cli
daa
gs
mov
xchg
daa
xor
fist
outs
add
aam
sub
daa
lahf
paddsw
repz
inc
fidivr
js
lock
std
sti
cmp
loop
cmps
xchg
sub
and
jns
push
sub
mov
xchg
imul
cdq
jmp
sti
push
(bad)
out
imul
pop
(bad)
stos
test
je
imul
cmps
mov
(bad)
mov
mov
ret
mov
mov
loop
fsubr
hlt
(bad)
mov
or
shr
sbb
xchg
hlt
addr16
xor
iret
adc
inc
imul
in
outs
add
mov
dec
js
jmp
test
mov
shr
retf
sbb
mov
rcr
xchg
ret
out
inc
add
jbe
pop
or
inc
xchg
sbb
mov
movs
stos
das
jmp
adc
pop
push
shl
push
xchg
sub
(bad)
sub
shr
outs
lea
ret
push
jo
dec
jo
pop
test
mov
jle
js
jno
sub
icebp
out
sub
lods
in
and
nop
inc
inc
fimul
out
cli
and
jbe
pop
hlt
mov
cmp
mov
jle
fadd
loopne
lds
jmp
xor
(bad)
xchg
push
pop
mov
(bad)
mov
xchg
inc
retf
je
fsub
cld
in
loop
push
fisttp
(bad)
sbb
popa
add
mov
shr
jae
sbb
sbb
pop
mov
push
aaa
retf
add
repz
inc
mov
sbb
xchg
mov
lods
aas
jp
dec
enter
std
dec
push
les
mov
es
mov
icebp
adc
(bad)
in
test
in
mov
cmp
cmp
mov
cmp
stc
popa
jo
clc
(bad)
(bad)
mov
adc
adc
jne
mov
call
out
pop
mov
ds
lods
mov
mov
neg
repnz
mov
cmc
sbb
push
ror
pop
xor
out
mov
fidivr
out
ins
adc
js
adc
nop
outs
mov
jmp
xchg
int3
fisubr
out
mov
cmp
mov
jae
pop
call
mov
pop
bound
xchg
inc
retf
inc
cli
ja
push
addr16
in
scas
cmp
xor
cli
add
(bad)
fstp
clc
sbb
and
loope
lahf
sbb
(bad)
mov
and
and
pop
data16
inc
div
loopne
xchg
pop
sub
inc
pop
ins
jg
bound
call
data16
gs
dec
loope
test
mov
sub
inc
cwde
neg
inc
inc
adc
ret
(bad)
push
jmp
scas
ficomp
lea
ins
xlat
sub
out
fnsave
adc
leave
add
loope
or
adc
mov
dec
sti
rol
into
je
addr16
stos
arpl
ins
into
in
call
cmc
in
xchg
in
mov
add
mov
(bad)
scas
adc
cmp
(bad)
push
mov
dec
inc
fs
jae
dec
loopne
imul
xor
cmp
xor
loop
fcomp
mov
lods
aad
mov
cmps
jmp
scas
jmp
pop
xor
popf
arpl
adc
fs
xor
xor
es
pop
out
jge
mov
or
mov
jbe
cmp
int
call
jge
lock
xchg
jge
lds
rcr
ja
jge
pusha
cmp
sti
sub
test
lds
shl
scas
push
jno
test
push
les
pop
ins
mov
aaa
lock
mov
pop
idiv
sbb
push
push
xchg
popf
(bad)
xchg
pop
sar
or
xchg
or
inc
dec
pushf
mov
xor
jl
ds
fstp
icebp
(bad)
scas
mov
loopne
ins
push
test
or
sub
dec
cld
gs
arpl
mov
jmp
sub
daa
push
xor
daa
out
cmp
sbb
add
mov
adc
repnz
dec
pop
ret
mov
xchg
sbb
add
out
stc
mov
cdq
fistp
pop
inc
sub
push
arpl
mov
xor
stc
add
pop
inc
sti
mov
nop
stos
fwait
or
mov
ss
std
xchg
mov
xlat
cli
test
jbe
pop
mov
mov
jns
scas
shr
xlat
jb
and
xor
dec
imul
sub
cdq
mov
out
test
loope
imul
rcl
jp
retf
push
int3
lods
inc
pop
dec
mov
push
xchg
xor
es
lea
popf
std
call
mov
jns
cmp
jb
(bad)
sbb
(bad)
xor
push
jg
dec
pop
add
fstp
adc
fwait
add
je
(bad)
out
popa
scas
movs
stc
mov
gs
xchg
arpl
ss
push
enter
rcl
retf
movs
rol
mov
icebp
xchg
push
lock
jnp
int
repnz
mov
inc
hlt
pop
cmp
xchg
pop
sahf
(bad)
pop
pop
mov
hlt
movs
push
int
push
lds
test
mov
ret
sar
imul
into
mov
das
mov
scas
out
sub
adc
or
adc
fst
retf
ja
bound
icebp
mov
fisub
aad
adc
je
xchg
inc
pop
je
cdq
ss
repnz
lahf
cmp
inc
mov
adc
sahf
pop
cmps
mov
xchg
sbb
scas
jge
sbb
shl
ja
(bad)
jae
retf
pushf
leave
mov
sbb
cmps
jecxz
fadd
jmp
dec
sub
dec
cdq
jnp
pop
(bad)
pop
xchg
xchg
outs
(bad)
xchg
dec
test
mov
frstpm(287
aaa
sub
outs
pop
dec
adc
lock
icebp
cmc
sbb
jb
shl
rol
repnz
inc
cmp
ret
xchg
jnp
xor
dec
ins
dec
jne
pop
or
int3
sub
cli
xor
out
std
inc
les
jp
inc
idiv
xchg
sub
jbe
fwait
xchg
pop
adc
cmps
push
mov
stc
aas
stos
sub
into
clc
jbe
out
aad
mov
add
popf
or
xchg
push
inc
xor
nop
pop
mov
icebp
xchg
and
dec
xchg
push
and
mov
mov
aaa
popa
xchg
xchg
pop
jl
mov
enter
stos
mov
test
popa
aaa
loop
outs
xchg
jb
or
push
lds
cmps
jl
xchg
xchg
ins
ja
lods
mov
mov
out
dec
push
adc
pop
call
js
(bad)
fcom
icebp
rcr
sahf
(bad)
imul
jecxz
mov
cmp
or
in
pop
call
adc
cmp
sub
cmp
popf
pop
loop
fsubr
pop
jmp
ror
addr16
(bad)
lock
adc
add
mov
cmp
dec
imul
push
icebp
mov
neg
jne
jmp
int
inc
cli
inc
sar
icebp
fcom
xor
xchg
arpl
jno
loop
cmp
adc
std
mov
mov
fisttp
xor
push
cmp
inc
inc
daa
mov
dec
ss
sub
xor
dec
sub
das
mov
adc
jnp
pop
inc
jle
jb
add
stos
push
pusha
cld
cmp
(bad)
pusha
cmp
xchg
mov
imul
(bad)
cmps
and
fs
outs
je
mov
xlat
data16
mov
arpl
nop
cli
inc
not
lock
pop
ins
mov
into
xor
movs
and
ja
dec
(bad)
in
bound
push
fst
aas
push
jg
or
inc
or
dec
aad
jge
dec
adc
popa
clc
loopne
ins
xchg
(bad)
shl
pop
fstp
aas
push
(bad)
sub
and
xlat
push
test
out
aaa
or
int
push
es
cmps
sub
out
sbb
dec
cmc
(bad)
jle
jnp
mov
xor
fidivr
pop
and
pop
mov
pop
and
sti
xor
adc
add
mov
sub
and
iret
imul
(bad)
out
(bad)
pop
jmp
inc
push
and
call
shl
ins
movs
lods
out
pop
mov
scas
sub
xchg
repz
adc
jmp
sub
cmps
les
xchg
sar
push
mov
jno
ret
push
xor
xor
retf
xchg
fild
sbb
aas
dec
out
loopne
push
test
xchg
stos
or
aaa
xchg
sbb
aam
mov
add
mov
pop
push
(bad)
xor
sahf
ss
ss
push
arpl
(bad)
jge
xor
test
xchg
xor
test
xchg
enter
out
cmp
std
xchg
je
in
jno
dec
mov
mov
leave
pop
mov
xor
and
sbb
mov
outs
jecxz
stos
pop
stos
sbb
jne
ficomp
ret
mov
push
mov
fsubr
or
or
xchg
mov
push
sti
push
(bad)
xchg
fmul
and
dec
jp
sub
stos
mov
fadd
xor
cmc
mov
cmps
(bad)
xor
cwde
inc
stos
data16
and
push
mov
and
cli
or
inc
dec
out
pop
das
js
inc
movs
retf
movs
jl
mov
icebp
sbb
lods
dec
call
call
shr
iret
xor
sti
pop
movs
aad
sub
out
jg
sti
push
dec
push
stos
xchg
clc
pop
int
push
retf
jmp
sti
data16
sub
adc
(bad)
aam
repnz
pop
pop
lods
mov
pusha
stos
jo
mov
jg
jl
sub
or
xor
sub
cmp
pop
shl
adc
mov
imul
fs
(bad)
jne
jl
mov
xchg
(bad)
in
out
vmwrite
and
in
fs
mov
test
push
push
mov
lahf
xlat
xchg
retf
in
test
in
neg
ror
mov
and
cmp
in
mov
jmp
test
data16
in
xchg
(bad)
fcmovnu
jg
mov
cmp
jae
cmp
and
xor
inc
clc
jne
push
mov
les
pop
mov
movs
xchg
test
fnop
mov
aaa
mov
pop
push
xchg
loop
sbb
mov
lock
mov
jo
sub
ret
out
nop
aaa
jae
rol
in
adc
popf
jno
xor
cmp
xchg
jg
lea
iret
push
fwait
mov
mov
xor
pop
pop
clc
loopne
fnsave
xor
push
repz
jns
sti
mov
fidiv
fstp
xor
cmp
pusha
popa
mov
xor
loope
fdivp
dec
hlt
pop
lods
or
sub
sbb
loope
xlat
dec
mov
push
mov
mov
and
sub
sub
push
sbb
ret
push
mov
out
neg
inc
mov
add
imul
repz
xchg
f2xm1
icebp
call
test
scas
xor
adc
push
sahf
(bad)
fisttp
mov
push
jle
mov
(bad)
popa
dec
dec
faddp
and
and
lods
test
lods
out
sbb
(bad)
cs
sub
sbb
mov
addr16
(bad)
cld
sub
pop
sbb
or
into
repz
(bad)
daa
mov
mov
jmp
or
arpl
mov
shl
sahf
ret
mov
in
(bad)
rep
xchg
xor
add
xlat
scas
repz
jne
repz
push
pop
(bad)
and
or
dec
push
or
sbb
dec
(bad)
xchg
jmp
(bad)
repnz
stos
add
push
push
(bad)
cmp
int3
fldlg2
jge
fcom
call
and
mov
sub
push
adc
ja
xchg
rcl
daa
bound
(bad)
pop
adc
fist
repz
adc
pop
scas
mov
lea
jno
aam
aad
and
imul
das
push
stos
ins
ret
movs
cmp
xchg
out
mov
jnp
arpl
ja
cmp
in
arpl
cwde
int3
cmp
pop
push
xchg
and
(bad)
lea
aad
push
fcomp
mov
call
retf
jns
imul
pop
xchg
sbb
dec
jae
call
sti
jne
jno
jge
xlat
out
inc
adc
cdq
xchg
ds
jle
xchg
adc
cmp
adc
sbb
pop
xchg
push
xlat
ja
cmp
dec
push
jmp
rcl
repnz
seta
push
daa
fstp
jp
ja
jno
xchg
ror
sub
jb
pop
mov
fst
mov
imul
push
cmp
dec
mov
mov
cmps
test
cwde
ret
mov
add
out
dec
or
inc
fsubr
jle
push
mov
nop
in
push
in
ins
push
sbb
pop
jne
aad
retf
cdq
jmp
or
mov
mov
jg
in
push
mov
cmp
retf
retf
jmp
pop
in
int3
out
movs
int3
push
dec
repz
mov
or
xchg
cmp
push
pop
inc
push
ins
mov
and
in
lahf
scas
sbb
push
push
repnz
cmp
inc
dec
and
movsx
pop
scas
add
ret
sti
stos
xchg
iret
push
es
cdq
sub
in
out
mov
retf
cmps
cwde
push
mov
sbb
add
bound
ds
sub
mov
and
dec
imul
stc
movs
mov
fucomp
cld
and
mov
xchg
push
imul
cld
retf
mov
push
jmp
xor
frstor
push
inc
aam
add
fidivr
fnsave
cmp
pop
scas
jmp
ficomp
or
test
lahf
int3
pop
push
sub
dec
push
in
ja
push
out
movs
retf
stos
push
retf
fsub
cmps
sbb
xchg
or
xor
stos
js
(bad)
cmp
aad
jmp
xchg
mov
out
sti
call
cmp
out
jle
mov
popf
mov
and
push
cmp
adc
xlat
or
int3
and
or
mov
dec
cmp
fs
mov
leave
xchg
xchg
enter
or
movs
lea
push
mov
cmps
sbb
popf
pushf
test
out
pop
fcom
icebp
in
pop
ins
sbb
fstp
or
(bad)
(bad)
cmps
cmp
mov
(bad)
fadd
push
out
retf
aaa
repnz
in
scas
arpl
in
cmp
mov
shl
test
fcmovb
xor
xor
or
leave
std
fidiv
xor
jecxz
mov
sbb
mov
and
mov
push
out
and
and
ret
das
mov
add
xor
aas
jae
push
mov
lahf
cli
pushf
adc
das
add
outs
js
jmp
xchg
xchg
jmp
arpl
fwait
es
mov
add
push
cmc
(bad)
mov
push
mov
add
mov
es
mov
xchg
xor
mov
fwait
push
popa
push
repz
sub
or
imul
cld
cs
out
push
jp
jl
mov
mov
(bad)
(bad)
pusha
aaa
dec
cwde
xchg
adc
repnz
inc
mov
inc
stos
ret
mov
dec
int
scas
sti
lods
(bad)
and
js
fbld
jnp
pop
jl
and
repz
pop
test
push
arpl
sbb
cld
pop
loopne
or
lea
mov
cmp
push
sahf
dec
fild
jmp
aam
jle
aad
jns
jmp
mov
hlt
add
rcr
aas
jge
xor
sahf
addr16
xlat
sahf
push
aas
popf
or
inc
inc
pusha
cmp
sbb
gs
cmp
mov
dec
test
sbb
imul
mov
in
and
jbe
mov
xlat
mov
dec
sbb
push
cld
adc
mov
xor
pusha
in
sbb
mov
jg
popf
aas
mov
adc
xchg
mov
xor
gs
fs
je
add
movs
ds
mov
xchg
xchg
test
outs
dec
ds
adc
push
clc
sbb
aaa
inc
mov
or
icebp
mov
and
xlat
fdiv
push
sbb
rcl
xlat
jbe
pop
fisub
mov
mov
shl
loope
pop
xchg
retf
or
loope
mov
popf
mov
pusha
dec
xchg
xor
xor
adc
xor
or
mov
adc
inc
out
lods
mov
mov
jb
jne
pop
neg
clc
dec
add
scas
and
or
in
out
clc
and
aam
fcmove
lock
mov
cmp
retf
xor
sub
push
mov
inc
enter
dec
ss
mov
aaa
cs
mov
adc
xlat
xor
stos
paddusw
popf
popa
movs
mov
xchg
mov
mov
enter
jp
cmc
ret
call
scas
retf
rcl
xor
xor
xchg
mov
inc
cmp
xchg
mov
xchg
scas
push
(bad)
xchg
cdq
xor
das
inc
std
xchg
cmp
mov
mov
inc
out
out
rcr
jle
mov
mov
hlt
lods
push
xchg
mov
shl
mov
mov
data16
test
call
(bad)
cld
sar
pop
je
jne
sub
mov
fidivr
pusha
inc
clc
push
sbb
mov
jne
popa
(bad)
mov
adc
jo
mov
xchg
repz
dec
mov
gs
clc
ins
push
cmps
movs
lahf
xchg
push
sub
aas
pop
je
inc
arpl
mov
(bad)
pop
fucomip
sti
mov
adc
cli
or
out
sbb
sti
pop
jb
and
adc
mov
js
int
ja
(bad)
jmp
rol
fst
imul
sub
sub
pop
mov
in
inc
sbb
sub
repz
or
sbb
push
jmp
popa
dec
jecxz
inc
stos
pushf
lock
dec
jg
mov
mov
add
cmp
std
mov
pop
pusha
fwait
jns
mov
sub
sub
(bad)
pop
mov
scas
ins
lods
in
jae
xor
jmp
push
push
cmps
je
out
ja
lea
sahf
test
out
xchg
jno
xor
out
scas
pusha
adc
cmp
jle
jne
not
gs
fadd
pop
rcr
or
mov
dec
jmp
sub
adc
push
xchg
aam
and
adc
test
stos
jb
mov
test
das
adc
mov
fistp
dec
push
cwde
jae
mov
pusha
jl
cmc
mov
or
cmp
pop
and
fst
into
out
and
jae
mov
jle
mov
not
or
movs
pop
mov
mov
(bad)
adc
sahf
dec
and
out
cmp
mov
mov
sub
inc
dec
push
sahf
sahf
mov
scas
sbb
cmp
in
sar
out
or
pop
dec
call
rcr
dec
cmp
push
(bad)
pusha
enter
push
mov
or
push
scas
stc
jns
es
sub
dec
mov
push
lock
pushf
(bad)
jo
cmp
aam
ret
in
dec
dec
fwait
dec
ja
cmp
adc
rol
pop
xor
stos
adc
push
hlt
out
jb
ror
push
add
cs
mov
loop
pop
dec
add
(bad)
enter
jmp
call
pop
add
or
pop
and
scas
mov
push
or
movs
add
out
push
adc
adc
retf
mov
mov
pop
pusha
xchg
dec
mov
sar
xor
inc
adc
dec
inc
sub
xor
mov
add
sbb
scas
add
mul
jb
sbb
pop
imul
xor
mov
pop
pop
and
idiv
jbe
xchg
or
(bad)
popf
or
lock
cmp
pop
cmp
mov
(bad)
inc
mov
sti
adc
sbb
sub
mov
push
lods
sbb
push
popf
lock
jo
inc
(bad)
fcom
or
sbb
add
adc
lock
mov
xlat
adc
ds
out
and
pop
jle
xchg
push
mov
or
scas
jmp
in
iret
cs
call
sub
ss
pop
push
push
push
ret
jge
xchg
add
and
mov
mov
test
ror
xchg
outs
jne
inc
fs
jl
std
pop
jmp
adc
sbb
adc
ja
test
fld
enter
add
jmp
test
mov
and
es
mov
mov
ja
push
adc
sub
jecxz
mov
(bad)
or
xchg
out
ja
inc
loopne
jnp
stos
add
mov
lds
not
push
push
jbe
push
stos
enter
and
loopne
bound
xchg
sbb
lahf
(bad)
cmp
push
shl
lock
popf
xor
push
add
outs
test
jl
sub
lock
lods
sbb
and
mov
in
xor
mul
mov
and
inc
xlat
xchg
inc
call
cmp
lock
jle
aaa
in
or
aaa
sub
mov
dec
(bad)
movs
push
repz
bound
mov
mov
adc
inc
pop
dec
cmp
and
test
mov
mov
xchg
and
popf
mov
inc
dec
mov
dec
mov
cmp
xchg
cmp
lock
cmp
dec
shl
ins
repz
xor
bound
ins
inc
jnp
inc
mov
and
sbb
fisubr
rol
loopne
ficomp
clc
fst
out
ja
or
sub
xchg
mov
scas
mov
mov
jbe
jbe
lea
aam
mov
lods
fld
imul
or
pop
test
leave
rcl
sar
mov
inc
loope
mov
mov
data16
add
ds
out
int
shl
pop
cmp
(bad)
in
push
shl
jbe
lock
lea
sbb
in
jae
cli
sbb
inc
mov
xor
lods
mov
ret
mov
and
xchg
xor
imul
retf
les
push
aaa
cld
ja
mov
cmp
aad
repnz
ins
mov
fld
leave
mov
mov
sbb
mov
mov
shl
das
enter
pushf
out
lds
int
pusha
xor
cmp
addr16
retf
es
(bad)
int
pop
(bad)
cld
cmps
sahf
or
data16
push
dec
adc
aad
push
js
cmp
in
inc
call
out
div
mov
xchg
sbb
(bad)
sti
pop
jmp
mov
or
out
mov
sbb
jmp
in
lods
push
jecxz
sbb
sub
aad
ins
adc
sub
(bad)
rcl
ja
sbb
ds
(bad)
les
pop
jmp
cmp
pop
push
iret
outs
or
inc
sub
xlat
in
cmps
cmp
test
ins
mov
sub
jecxz
jecxz
inc
dec
sbb
push
xor
dec
loope
sub
mov
cli
pop
pushf
fwait
lea
and
(bad)
xchg
or
dec
mov
and
push
push
add
scas
into
add
scas
fwait
and
mov
lds
into
dec
sbb
out
addr16
jbe
dec
cmp
call
push
inc
jle
or
push
stos
ins
dec
jg
pop
clc
xor
pop
sub
cmp
and
push
nop
aam
add
xchg
pop
jmp
mov
xor
adc
fnstsw
push
pop
cmc
mov
pusha
std
aad
push
sbb
mov
push
add
cmp
pushf
and
mov
mov
es
sub
xchg
and
push
js
fbstp
or
(bad)
mov
mov
jbe
inc
sbb
adc
ds
and
loope
les
inc
ss
push
xchg
or
xchg
mov
rep
sahf
and
or
js
cwde
cmp
lahf
jmp
xchg
aas
adc
je
pop
pop
jb
add
stos
add
mov
ret
jo
cmp
xlat
mov
and
xchg
ja
pop
outs
pop
fcmovnb
arpl
hlt
mov
xor
lock
mov
ins
push
pop
cmp
pop
or
or
xchg
xchg
sbb
adc
call
mov
mov
imul
loopne
inc
push
push
jbe
add
icebp
arpl
imul
mov
scas
cmp
push
fsubr
fwait
pop
aaa
cmps
and
cmp
nop
out
cmp
aaa
xchg
xchg
or
and
fsubr
mov
adc
sbb
xor
mov
pushf
popa
and
adc
dec
push
leave
ins
jmp
pop
hlt
jae
out
outs
mov
add
jb
test
add
push
cld
or
mov
xor
cmp
loope
mov
mov
mov
dec
cdq
sar
rol
mov
ins
(bad)
arpl
(bad)
pushf
push
aas
cmp
jmp
repz
in
cmps
adc
sar
sbb
sub
or
enter
push
mov
push
sbb
(bad)
xlat
into
sbb
loope
or
icebp
in
mul
fisttp
and
xchg
(bad)
jg
push
push
dec
sub
push
and
mov
sbb
adc
lock
xor
sbb
pop
xor
shl
push
sbb
jge
dec
push
icebp
dec
sahf
retf
cmc
dec
mov
shl
jno
shl
sub
(bad)
pushaw
jg
retf
ficom
cld
sub
pop
or
fmul
sahf
rcr
sbb
pop
adc
daa
iret
inc
call
or
mov
jo
mov
and
sbb
and
inc
sahf
cmp
xchg
inc
sub
cwde
sti
test
pop
inc
add
es
or
jo
jp
test
aas
je
add
test
jno
jle
inc
adc
xchg
les
and
adc
sar
adc
xor
in
jp
mov
cmp
sahf
sub
(bad)
cmp
lods
jg
jle
arpl
fisttp
ficom
jg
icebp
pop
shl
mov
push
push
push
(bad)
pop
pop
pop
stos
cmp
retf
add
add
sub
int3
mov
es
fbstp
add
mov
test
cmp
or
add
push
xchg
mov
push
cmp
das
jb
inc
aad
add
inc
(bad)
cmc
iret
mov
nop
adc
sahf
cmp
and
and
int3
mov
mov
ror
pop
mov
mov
xor
daa
inc
push
aam
sbb
xchg
add
(bad)
shl
xor
loopne
pop
mov
pop
loopne
sar
ror
cmp
loopne
iret
or
mov
jp
add
mov
(bad)
adc
sar
inc
not
nop
cld
push
xor
push
and
sbb
cmp
push
push
inc
pop
dec
sbb
add
push
fidivr
or
test
push
add
scas
sbb
sub
add
cdq
sbb
fsub
adc
mov
push
add
sub
adc
xchg
mov
sar
hlt
cmp
add
ret
aas
pop
xchg
stos
add
jg
mov
jmp
or
or
cld
jmp
rcr
jb
test
jne
sub
jmp
push
inc
std
addr16
pop
dec
adc
and
mov
rol
push
add
mov
and
mov
ss
push
shl
adc
sub
test
mov
jno
add
nop
jmp
xor
sub
adc
mov
adc
and
ret
test
and
in
enter
mov
movs
xor
sbb
repz
mov
pusha
adc
cmp
add
cmp
push
pop
ins
adc
mov
add
leave
xchg
and
xchg
and
jg
inc
out
mov
dec
sub
push
inc
or
fiadd
es
mov
rcl
inc
dec
sub
sub
sub
not
add
test
cdq
stos
mov
cmp
or
or
fisttp
jp
push
and
fld
pop
cmp
cmp
mov
fidivr
and
and
pop
in
dec
or
sbb
inc
out
sbb
inc
lock
ds
pop
bound
and
sbb
adc
test
add
loop
bound
dec
inc
adc
dec
imul
push
test
xor
xchg
(bad)
and
mov
adc
mov
inc
mov
stos
push
and
push
add
xchg
sbb
sub
add
call
inc
jp
adc
les
jl
inc
bound
inc
fbstp
retf
cli
(bad)
push
ds
nop
mov
sub
push
jne
sub
jge
nop
add
mov
cli
jo
and
std
add
pop
pop
push
fs
sbb
or
pusha
in
sub
sbb
ret
test
icebp
and
pop
pop
sub
sub
mov
and
dec
ss
push
sub
add
and
pop
mov
inc
inc
push
and
push
je
aam
mov
inc
push
and
mov
mov
repnz
and
jl
and
inc
add
cmp
and
add
mov
inc
fiadd
adc
xlat
or
ret
xor
mov
sbb
sbb
sub
and
enter
sub
add
pop
inc
ret
pusha
xchg
add
or
mov
add
(bad)
adc
push
mov
add
stc
add
dec
int3
nop
outs
mov
add
mov
fs
push
pusha
dec
and
sub
test
je
cwd
add
fild
neg
movs
iret
sub
push
xchg
call
hlt
jno
mov
cli
and
mov
test
cmp
pop
jmp
and
sbb
xchg
or
adc
mov
inc
and
adc
js
lods
mov
inc
scas
add
and
adc
loop
jne
mov
cli
les
pop
mov
xchg
sbb
jl
and
dec
adc
cmp
push
(bad)
sqrtps
leave
add
pusha
movs
cmp
leave
paddsb
fldenv
adc
cmp
hlt
stc
mov
mov
inc
inc
call
movs
and
add
sti
add
sub
dec
adc
cli
or
inc
nop
mov
add
ins
adc
adc
les
and
add
mov
cli
push
mov
adc
add
loopne
inc
inc
jbe
xchg
loop
mov
ds
sub
std
and
adc
enter
or
mov
sub
aam
inc
jmp
retf
hlt
int
jl
inc
fbld
call
hlt
or
inc
push
and
rcl
and
test
dec
pop
dec
and
sub
adc
in
(bad)
std
(bad)
xor
pop
mov
sub
jmp
hlt
rol
push
ja
mov
(bad)
in
jb
in
add
jno
movs
or
add
lock
out
inc
lahf
or
aaa
or
mov
jnp
mov
(bad)
fpatan
sub
inc
shl
add
pusha
aas
cld
xor
sub
retf
add
das
call
mov
(bad)
fs
test
add
imul
hlt
mov
arpl
jge
xor
ret
push
clc
push
mov
loope
sub
shr
in
adc
xor
or
inc
xchg
jno
ins
sbb
xor
sbb
pusha
mul
and
pop
loope
add
sbb
inc
ret
inc
mov
mov
mov
ret
nop
add
jns
fs
push
xor
dec
rcl
jecxz
mov
icebp
xchg
cdq
aas
loop
mov
add
or
(bad)
daa
adc
inc
jl
mov
inc
jnp
mov
movs
add
push
jmp
test
and
push
enter
cld
push
fdivr
sbb
jp
mov
aam
xchg
and
adc
xchg
gs
add
repnz
or
sub
inc
or
mov
mov
inc
and
test
and
in
pop
xor
push
mov
rcl
mov
inc
adc
mov
adc
pop
pop
or
rol
or
leave
inc
fs
dec
test
mov
push
mov
mov
dec
les
add
jmp
sbb
pusha
(bad)
mov
je
aas
dec
xor
jno
dec
xor
repnz
mov
cdq
add
test
or
adc
add
add
add
icebp
sub
push
inc
inc
sub
pop
push
jg
adc
aas
xchg
sub
ffree
scas
and
or
enter
push
je
nop
dec
mov
aam
xor
sbb
pop
jp
icebp
add
call
ret
xchg
xor
sbb
jb
arpl
cwde
add
dec
int3
inc
enter
mov
xor
neg
sbb
stos
push
dec
loopne
add
add
ja
call
ret
repnz
inc
jmp
daa
fsub
enter
push
in
das
popf
in
sbb
popf
hlt
and
das
popf
ret
add
adc
fwait
neg
imul
adc
stos
add
inc
adc
xchg
push
push
sbb
movs
(bad)
pop
jecxz
std
xor
jmp
pop
cmp
dec
cmp
icebp
and
xchg
into
add
lock
into
repz
cs
std
xchg
into
call
xchg
cs
jb
push
or
(bad)
sti
dec
xchg
je
not
call
dec
xlat
or
cld
dec
xchg
jge
test
push
pop
js
aaa
or
sti
xchg
out
or
cli
xchg
out
or
xchg
scas
icebp
xchg
push
xchg
je
xchg
adc
jno
push
push
(bad)
addr16
(bad)
mov
clc
and
dec
push
adc
inc
or
(bad)
push
cmp
aaa
fidiv
enter
pop
jp
call
mov
sar
js
jmp
popf
iret
das
aad
(bad)
(bad)
not
jle
mov
sbb
pop
inc
or
fbld
cmp
movs
mov
or
bnd
rol
or
sub
mov
nop
ss
mov
rol
push
sub
in
movs
jmp
int
movs
pop
mov
jl
xchg
mov
mov
xchg
outs
std
xchg
cs
pop
jae
mov
cmp
inc
jg
cmp
in
xchg
ss
dec
pop
sahf
mov
pop
ror
sbb
fdiv
jg
ror
mov
jo
push
xchg
(bad)
test
push
sbb
or
out
js
shl
jmp
rcl
pop
shr
das
aad
push
cmp
mov
dec
jmp
retf
sub
cmp
sbb
cmp
and
test
mov
test
mov
shl
xor
and
push
xchg
dec
cmp
in
test
aad
add
std
stos
dec
mov
dec
ret
ror
ror
shl
popa
retf
xchg
adc
xor
test
mov
and
jnp
push
aam
xchg
dec
imul
out
push
sar
stos
push
dec
mov
rcr
pop
rol
shr
sar
pop
mov
clc
sub
pusha
pop
jg
icebp
mov
add
mov
mov
pop
retf
or
jae
retf
xor
je
push
sub
xchg
cmp
into
xor
mov
sbb
call
ds
mov
and
and
icebp
icebp
rcl
pop
sar
(bad)
cli
jb
stos
cmp
push
aad
mov
jg
std
out
stos
iret
pusha
test
fdivr
jg
bound
inc
das
or
add
in
in
lea
sar
call
(bad)
dec
jecxz
inc
scas
sti
dec
xlat
jo
(bad)
mov
aas
(bad)
push
xor
into
test
pop
popf
je
xor
stos
scas
stos
out
scas
or
in
or
cmp
scas
push
out
add
sub
sub
clc
sbb
adc
inc
pop
sbb
test
xor
and
sub
sub
jo
mov
mov
ja
sti
fstp
cmps
mov
in
mov
xlat
pop
mov
lahf
popf
mov
clc
(bad)
fstp
in
xchg
movs
sti
jnp
clc
scas
imul
(bad)
jne
in
stos
shl
dec
imul
sbb
push
retf
dec
fbld
sbb
outs
pop
fisttp
fstp
or
(bad)
mov
mov
mov
inc
fisub
jmp
jae
xlat
std
jp
ret
shl
mov
pop
dec
mov
jp
mov
jp
ret
je
xchg
sti
cmp
cmp
in
(bad)
mov
fsub
lea
cld
repnz
hlt
xchg
sahf
pop
mov
aam
pop
jg
(bad)
jnp
xor
mov
sahf
call
mov
daa
lods
popf
mov
and
mov
push
mov
lds
hlt
fptan
pop
leave
jp
call
xlat
xor
mov
pop
and
cmc
cdq
xchg
repnz
fwait
inc
out
cmp
fs
jbe
ins
aad
xchg
lods
fiadd
cli
clc
push
sub
dec
frndint
push
mov
mov
icebp
lea
pop
mov
and
in
xor
lahf
fstp
jl
lds
xlat
cmp
in
imul
jp
mov
pop
lahf
xchg
xor
ins
aas
inc
mov
adc
mov
mov
(bad)
pop
clc
pop
gs
fcmovnb
mov
jle
cld
dec
mov
fs
ja
jmp
fwait
in
pop
out
daa
sahf
add
ins
jge
into
mov
mov
ja
stc
jp
inc
inc
leave
mov
test
fisttp
repnz
popf
vhaddps
in
jge
cmp
lods
imul
mov
ss
imul
jmp
ret
pop
loope
movs
mov
(bad)
retf
dec
div
sub
mov
sti
clc
cs
jge
(bad)
cli
ds
push
gs
fwait
mov
es
paddsb
ret
xchg
dec
je
jl
movs
mov
pusha
iret
jmp
jno
iret
in
push
neg
jb
lds
pop
and
mov
repnz
in
out
xchg
mov
jns
xlat
iret
leave
je
jle
mov
shr
xchg
leave
imul
imul
or
in
push
push
retf
inc
sbb
(bad)
sub
clc
lods
sbb
pop
jbe
jl
iret
xchg
aaa
stc
(bad)
cmp
ja
jp
neg
loope
mov
jns
call
scas
sub
jg
(bad)
ins
iret
mov
stc
cmps
cld
pop
or
outs
cmp
gs
pop
rcl
jle
dec
hlt
push
cmc
jp
stc
mov
out
xchg
aas
shr
std
retf
fst
fnstcw
retf
jbe
(bad)
mov
test
loop
out
cmc
icebp
std
dec
pop
add
movs
(bad)
out
(bad)
jge
in
push
stc
push
mov
jmp
ds
mov
js
mov
inc
inc
fcomi
test
sbb
retf
fs
push
jle
aaa
fidiv
sub
stos
xlat
or
mov
mov
jmp
mov
push
mul
fidivr
in
js
mov
not
sub
outs
jb
pop
(bad)
mov
jmp
test
jl
mov
in
stos
mov
lods
sbb
in
movs
mov
aad
fist
fidivr
dec
into
mov
ret
stos
cld
(bad)
and
mov
ins
in
dec
inc
lods
mov
sbb
xor
cld
enter
jnp
out
push
cmp
sbb
in
cmc
push
push
clc
add
push
dec
cwde
sbb
dec
pop
dec
jno
mov
mov
jno
fistp
(bad)
sub
clc
and
mov
adc
fldenv
jo
pushf
xchg
pop
xchg
xor
mov
scas
push
ret
dec
fistp
inc
push
cdq
cmps
stos
jmp
dec
pop
(bad)
jle
jb
outs
inc
jnp
xlat
test
jo
xchg
pop
cmc
jo
inc
sar
neg
aas
sbb
hlt
imul
fstp
cmps
jge
inc
sti
data16
pop
in
retf
mov
rcr
mov
push
imul
jp
push
cmp
out
push
push
mov
out
ds
mov
out
ds
pop
sub
mov
movs
jge
xor
clc
adc
clc
xchg
jge
sub
call
push
sahf
mov
rcl
aaa
mov
into
sub
addr16
stc
inc
mov
pop
pause
mov
out
aad
bound
mul
jl
push
sbb
mov
or
jge
in
hlt
(bad)
div
ds
stos
scas
mov
jge
mov
cli
out
mov
jnp
dec
jge
test
mov
aad
addr16
mov
idiv
mov
out
std
dec
stc
mov
repnz
loope
cs
pop
das
pop
mov
hlt
jg
mov
dec
xlat
pop
out
jl
fucomp
mov
vmovdqu
pop
rep
jmp
jbe
mov
(bad)
sub
dec
test
call
jl
test
cmc
icebp
jge
ret
jp
pop
(bad)
sub
das
stos
lahf
push
(bad)
fnsave
fisubr
sub
mov
pop
into
stos
loope
push
or
xchg
in
sub
or
call
push
jge
call
jmp
dec
scas
ja
call
push
retf
cld
jns
aas
movs
(bad)
idiv
(bad)
ins
outs
scas
div
fdiv
pop
cli
xlat
imul
retf
test
call
dec
ins
push
gs
add
jnp
xor
cmc
pop
int
mov
outs
scas
test
popf
push
sub
pop
gs
jge
loopne
inc
dec
sti
cdq
jb
inc
retf
push
push
push
lods
out
jmp
fst
fnstcw
lea
add
inc
xchg
fild
movs
push
in
mov
(bad)
jne
pop
shr
popf
into
lock
or
leave
lock
enter
mov
jle
ret
ffreep
lock
cld
jp
clc
ins
xlat
or
aaa
jae
jmp
mov
sti
popa
out
test
in
bound
bound
pop
loopne
or
xchg
sbb
dec
jae
cs
inc
jo
ja
in
sub
cmps
cmp
xor
dec
adc
jle
es
cwde
sub
ret
nop
sti
out
std
xchg
dec
sbb
repnz
repnz
int
or
fsubr
test
mov
retf
pop
push
mov
adc
push
sub
jp
stos
xor
pop
mov
lahf
sub
pop
ja
mov
in
cli
in
mul
repz
xlat
repnz
inc
enter
into
jmp
call
(bad)
ja
cmp
call
mov
mov
cmp
xor
push
or
int3
lock
jno
fmul
nop
iret
xor
out
jecxz
sbb
xchg
add
stos
(bad)
pop
xor
adc
pop
mov
pusha
cdq
das
mov
xchg
loopne
call
in
push
in
cmp
imul
mov
in
dec
jns
push
outs
fs
cmp
dec
cmp
(bad)
sahf
(bad)
fcomp
cmp
fisttp
xlat
push
lahf
inc
popf
sub
mov
push
pop
in
repz
rdtsc
cld
scas
cdq
jmp
(bad)
lock
shl
(bad)
nop
pop
sbb
jae
mov
repnz
cwde
out
cmps
stc
push
sar
adc
leave
pop
pushf
push
mov
loope
xor
pop
xchg
dec
xchg
xchg
sub
or
or
dec
mov
xlat
cmp
jno
scas
pop
inc
cmp
xchg
push
sub
xchg
dec
mov
mov
icebp
pop
ds
mov
sub
dec
push
(bad)
sub
retf
mov
js
xor
(bad)
mov
jns
sub
mov
enter
rcr
ret
xor
pusha
call
imul
jg
fcomp
pop
ret
sahf
cmp
dec
hlt
sub
aas
bound
or
sahf
imul
pop
loope
nop
mov
xor
cmp
mov
or
xchg
sub
ja
ds
sub
xor
(bad)
mov
div
arpl
dec
repz
fcmovne
cmc
pop
xchg
mov
lds
in
fcom
sti
mov
mov
popa
in
jecxz
jg
loope
addr16
mov
sbb
daa
mov
cld
or
or
jae
mov
ja
pop
cmp
mov
jbe
jp
cs
in
imul
fs
cdq
and
mov
dec
ffreep
cmc
or
mov
xor
jbe
loop
lahf
(bad)
dec
hlt
paddusb
push
push
ds
mov
sbb
jae
(bad)
sub
lea
and
shl
mov
cmp
lahf
ds
lods
fmul
sub
cmp
jae
retf
fldln2
pop
jl
das
dec
stc
out
mov
pop
fdiv
repz
xlat
xor
pop
cmp
pop
xchg
data16
adc
ffreep
lock
mov
sub
jb
or
mov
pop
lahf
fs
cmps
cdq
jmp
sub
rep
loope
sahf
(bad)
icebp
call
ds
test
fs
xor
jbe
and
xor
sub
faddp
sub
fs
mov
mov
sub
mov
mov
dec
popa
cdq
cmps
mov
xor
mov
mov
jnp
arpl
jg
ret
(bad)
pop
out
pusha
scas
imul
sti
movs
mov
xor
arpl
lds
mov
sbb
cmp
mov
outs
sub
cmc
or
ds
xchg
mov
shl
pop
jl
mov
xchg
fbld
mov
fdivr
cdq
fld
xor
push
xchg
jle
ret
aaa
xor
iret
test
in
fcmovb
rcr
pop
jl
out
adc
repnz
xchg
pop
gs
ror
in
xchg
imul
sub
and
pop
pop
aas
int3
lock
clc
mov
in
or
retf
sar
sar
push
std
lahf
adc
push
push
js
invd
cmp
shl
lods
popa
enter
mov
push
or
xor
imul
loope
arpl
sbb
daa
fnstcw
sbb
cmp
(bad)
mov
call
mov
retf
ficomp
hlt
adc
into
fsubr
xor
stos
or
pop
xchg
(bad)
nop
out
xor
pop
or
icebp
add
dec
(bad)
ds
popf
imul
nop
(bad)
jo
mov
cli
adc
lds
mov
sbb
jb
scas
gs
jmp
rol
out
in
cmps
fdivr
mov
and
xchg
retf
sbb
and
mov
in
xor
test
mov
xor
stos
mov
outs
test
push
pop
lahf
int
sar
cmp
gs
inc
xchg
cld
iret
or
cmp
mov
pusha
in
rcr
(bad)
sub
pop
mov
or
outs
mov
icebp
adc
shl
shr
fwait
and
or
cdq
inc
sbb
ins
dec
ret
mov
mov
repnz
inc
arpl
cmp
lahf
jmp
or
sub
jecxz
jl
pop
dec
shr
loope
mov
inc
ret
enter
and
enterw
pop
inc
mov
pop
xor
and
jo
pop
outs
mov
and
xchg
arpl
in
dec
inc
mov
xor
mov
imul
into
arpl
mov
out
nop
xchg
les
xor
cmc
xchg
pop
test
jle
fistp
jne
jmp
mov
mov
xlat
pop
mov
jae
sbb
movs
pop
xchg
lods
jbe
and
ja
stos
dec
cld
cmp
mov
add
jg
jno
cmp
jg
add
jbe
push
(bad)
mov
(bad)
jne
ffreep
jne
cmc
xlat
aam
rcl
xor
inc
mov
aas
mov
stc
adc
mov
inc
mov
pop
outs
ja
mov
jl
cmp
punpckhwd
lock
pop
jp
lock
jecxz
retf
call
mov
scas
push
push
jnp
adc
aaa
or
lock
cmp
fdiv
imul
inc
std
(bad)
loope
ins
xchg
je
xlat
(bad)
cli
popa
aam
rcl
lock
inc
jmp
pushf
xchg
jae
cmp
dec
sub
xchg
fcom
sub
mov
dec
dec
or
mov
xor
sub
mov
fild
in
push
cmp
cli
out
sub
xchg
pop
pop
jno
jb
addr16
ss
pop
stc
xchg
jmp
sar
pop
stc
cmp
pop
push
push
xor
sbb
daa
gs
mov
mov
lods
mov
jmp
pop
xchg
test
aas
sub
xchg
jo
dec
shrd
(bad)
jmp
push
mov
ja
mov
jne
mov
shr
dec
(bad)
cmp
jle
nop
cwde
out
sub
sub
(bad)
mov
mov
leave
mov
jmp
pop
lahf
int3
cmc
imul
imul
sbb
pop
inc
retf
xchg
adc
xchg
mov
inc
push
sub
scas
push
mov
enter
daa
push
push
dec
mov
add
add
push
lahf
dec
xchg
jbe
jne
sbb
das
mov
int3
jne
ret
scas
movs
sub
shr
xor
mov
mov
pushf
mov
(bad)
in
aaa
jmp
fwait
or
ret
pop
add
scas
add
test
sti
and
pop
ffreep
nop
mov
inc
out
(bad)
sub
imul
xor
xor
mov
aam
shl
xchg
adc
arpl
retf
inc
jge
jmp
retf
cdq
jle
imul
aas
ret
enter
cmp
mul
mov
xlat
mov
xchg
xor
test
arpl
xlat
sbb
push
jo
cmp
jp
or
loope
enter
jo
enter
ss
xchg
pop
outs
loopne
dec
mov
lds
imul
test
cs
push
scas
push
das
mov
inc
sti
xchg
jbe
not
xor
mov
mov
out
into
pop
pushf
aas
jo
out
je
sub
pop
pop
jne
in
mov
jp
in
out
scas
mov
std
pushf
sti
fs
fnstsw
dec
push
xchg
in
into
in
repz
lock
rcr
jmp
and
jno
repz
inc
jmp
inc
jbe
jbe
and
out
inc
inc
cmp
stc
pop
adc
gs
jo
outs
fdivr
in
fstp
sar
mov
mov
bound
scas
xchg
out
out
lods
cld
mov
fidivr
cmp
adc
push
outs
add
mov
push
ja
pop
jp
add
out
scas
nop
je
jnp
cmp
mov
xor
cmps
lods
xchg
test
and
mov
jg
cmps
pop
sar
mov
mov
imul
into
jnp
(bad)
adc
not
sub
hlt
mov
(bad)
adc
fist
add
jae
in
add
sbb
inc
adc
in
cmp
jmp
pop
xor
out
enter
pop
mov
xchg
sti
imul
xchg
add
pop
mov
lock
and
lods
scas
xchg
lahf
push
out
(bad)
sub
jnp
popf
push
mov
mov
xor
xchg
scas
sbb
repz
test
cmp
jbe
bound
cmp
je
clc
jns
mov
and
test
pop
ins
ss
mov
(bad)
sub
out
mov
in
mov
adc
cmp
push
or
cmp
jb
fs
cmp
std
or
cmc
jb
xchg
dec
(bad)
sti
mov
in
jns
repz
fdivr
cmp
cmp
inc
pop
cld
sub
push
cmps
mov
cld
lea
jbe
div
(bad)
popf
jg
fisubr
fisubr
arpl
jmp
sub
hlt
cmp
jmp
jmp
pop
push
dec
mov
jne
mov
rol
pop
pop
fild
popf
hlt
arpl
out
lock
cmp
jne
cmc
push
lods
inc
pop
pop
iret
xchg
outs
repnz
fsubr
shr
mov
daa
in
xchg
mov
and
hlt
stc
lock
add
aaa
dec
fist
cld
dec
ds
adc
adc
out
retf
std
jle
cmps
ins
lock
sti
xchg
repz
ret
sub
sti
xchg
jp
repnz
xor
or
dec
daa
inc
jl
sub
jp
stc
sar
scas
push
int
jae
retf
sub
in
cwde
mov
pop
and
ja
popa
xchg
dec
add
leave
and
dec
ret
xchg
xor
loop
sbb
xchg
sub
mov
in
xchg
adc
mov
xor
inc
sbb
sbb
movs
cmp
mov
mov
cmps
mov
pusha
into
inc
cmp
gs
push
sub
sub
inc
ret
mov
push
es
cmps
add
and
push
retf
jnp
retf
lea
fwait
push
add
ss
into
inc
cdq
push
jbe
retf
out
bound
retf
or
and
cs
mov
mov
wrssd
mov
mul
xchg
dec
push
pop
add
gs
sub
sbb
add
inc
dec
mov
popf
inc
dec
mov
mov
cmp
repnz
movs
mov
mov
push
jmp
inc
fisubr
sbb
add
cmc
sub
in
sbb
mov
sub
repnz
push
mov
add
add
retf
jp
jmp
jmp
hlt
fimul
mov
inc
add
clc
xchg
mov
mov
div
call
iret
es
ins
jb
or
or
pushf
xor
xchg
mov
sub
jmp
std
push
push
test
dec
data16
xchg
stos
movs
push
ins
ffree
inc
mov
retf
outs
mov
add
ins
outs
sub
repz
and
dec
inc
hlt
lock
jae
push
scas
xlat
je
int
sub
xlat
jecxz
je
popa
and
sub
int
jp
mov
mov
xor
sbb
aaa
clts
sub
das
adc
mov
outs
test
push
ins
cwde
aam
inc
jb
cmp
and
jp
repnz
cmp
mov
xchg
pop
iret
mov
aas
push
cs
push
push
cmps
inc
jb
inc
stc
add
dec
int
mov
push
xor
xchg
sub
push
xor
xchg
xor
leave
mov
icebp
push
push
adc
or
push
addr16
or
ret
jmp
daa
call
xor
ret
xchg
leave
es
test
stos
(bad)
cmps
cmps
adc
mov
xchg
data16
sub
mov
pop
test
fs
inc
pop
ins
out
push
cs
lods
inc
mov
ins
and
lods
push
movs
cmp
lds
push
(bad)
mov
push
in
shr
ins
push
ins
mov
aad
pop
mov
mov
jmp
sbb
int
sub
data16
xor
leave
int3
inc
jecxz
and
fstp
xor
dec
cdq
leave
or
mov
js
inc
int
and
fsub
inc
mov
mov
retf
push
sub
dec
jp
or
ins
push
and
or
jp
rcl
xchg
ins
push
xchg
pusha
dec
push
popf
inc
mov
dec
int
and
dec
data16
mov
xor
dec
xor
sbb
retf
xor
dec
push
dec
cmps
push
sbb
mov
inc
inc
stos
or
add
dec
popa
xor
dec
inc
xchg
lea
loope
dec
mov
push
lahf
adc
ret
ins
push
jnp
mov
je
shl
je
push
push
mov
mov
loope
movs
or
dec
add
or
mov
cmp
jb
xor
out
or
push
aaa
mov
movs
ds
stc
clc
fs
add
mov
mov
or
cmp
xor
mov
pop
sahf
mov
lods
jmp
mov
outs
pop
scas
int
push
adc
call
mov
jp
shr
stos
test
push
loopne
inc
les
js
cmps
outs
ret
pop
inc
ins
push
push
sbb
mov
pop
xor
imul
out
sub
and
in
lds
push
dec
mov
jne
mov
xchg
stos
std
push
inc
pusha
bound
or
pusha
dec
loop
pop
mov
cli
push
(bad)
rcr
fiadd
gs
add
test
mov
adc
and
daa
inc
icebp
sbb
adc
xchg
(bad)
stos
sbb
and
push
repnz
ins
cmps
dec
aad
aad
cmps
ror
test
adc
xor
cs
cmp
mov
dec
mov
lahf
fisubr
test
test
push
cmp
leave
xchg
push
sub
test
jp
adc
adc
mov
call
pop
mov
pusha
adc
popa
ss
mov
stos
pop
xchg
lods
fnstenv
xor
aaa
sub
xchg
dec
loopne
retf
xor
add
or
xlat
rcl
fcomp
pop
daa
pop
(bad)
idiv
js
dec
cmp
dec
mov
pop
xlat
rcl
test
push
or
movs
fs
mov
or
pop
retf
mov
push
cmp
ror
cwde
adc
arpl
ficom
cmp
ficomp
xor
adc
aam
cdq
push
xchg
mov
lods
mov
mov
jp
cmp
in
int
jl
push
dec
in
xchg
sahf
ss
mov
dec
mov
out
mov
out
repz
(bad)
rol
int3
and
(bad)
popa
outs
fs
jmp
push
push
(bad)
pop
sub
lods
daa
hlt
adc
jnp
repnz
test
jp
cmp
test
jo
or
leave
or
loop
in
mov
bound
sbb
mov
jb
aam
dec
adc
cmps
xor
retf
push
lea
dec
dec
(bad)
sub
dec
cmps
retf
push
mov
xchg
push
dec
inc
repnz
retf
jno
inc
cmc
sbb
and
imul
loop
stos
adc
xchg
pusha
dec
inc
lahf
ret
and
jmp
sub
add
arpl
jmp
(bad)
cmc
jno
scas
les
add
ss
enter
dec
aad
mov
fs
shr
ror
inc
call
sbb
ins
mov
imul
xchg
dec
dec
xchg
test
mov
sub
retf
jne
outs
les
pop
jno
pop
fiadd
xor
test
adc
test
xor
adc
aam
loope
aad
cmp
or
mov
dec
(bad)
dec
outs
xor
cmp
leave
push
add
gs
add
cmp
mov
mov
(bad)
adc
push
(bad)
enter
mov
dec
test
xchg
sub
sbb
jl
sub
loope
jne
xchg
push
jl
(bad)
popa
xlat
nop
dec
dec
pusha
ret
xchg
bound
mov
adc
xchg
push
xchg
stos
xor
cmp
mov
pusha
ror
mov
rol
jns
mov
movs
inc
xor
stos
xor
cmp
mov
aam
xchg
arpl
inc
add
pop
sub
test
fstp
cmps
inc
jp
add
stos
mov
jne
xchg
int
adc
sub
enter
adc
mov
pop
mov
and
fs
push
dec
rcl
out
dec
jecxz
das
dec
movs
fwait
mov
lahf
xor
mov
add
xor
cmps
fwait
xchg
cmp
adc
mov
and
nop
xor
stos
push
or
mov
mov
retf
aad
mov
cdq
pusha
xor
jmp
xor
mov
in
fs
or
sub
cmc
pusha
and
dec
push
ss
test
imul
inc
jp
sbb
repnz
test
pop
imul
adc
out
inc
cmps
jb
test
imul
lahf
vcomisd
sbb
inc
cmp
movs
inc
xor
sbb
push
sub
push
and
mov
in
push
adc
and
push
push
jno
(bad)
lds
adc
xchg
push
adc
popf
sub
cmp
pushw
loope
cmp
xchg
sub
arpl
js
add
adc
xchg
dec
call
push
ins
leave
pop
and
js
adc
ins
inc
(bad)
enter
aad
gs
or
js
bound
xor
nop
(bad)
push
mov
test
mov
rcl
and
push
mov
mov
addr16
test
fs
(bad)
and
aam
retf
ss
nop
mov
jns
cmp
stos
fisub
push
ins
ss
cwde
pop
dec
xchg
fwait
dec
cmp
cli
pop
xor
mov
or
mov
sub
lods
movs
or
imul
add
mov
cwde
out
sbb
sub
push
shl
add
sbb
sbb
or
imul
inc
adc
sbb
gs
and
in
mov
mov
push
pop
int3
xor
inc
jns
(bad)
dec
mov
repnz
out
and
lea
mov
mov
xchg
adc
xor
and
push
xor
push
jnp
fisttp
and
xor
shl
xchg
cmp
dec
and
xor
data16
leave
adc
pop
test
test
mov
push
inc
into
pop
into
cmps
fimul
in
inc
mov
bound
pop
sbb
or
(bad)
jae
inc
in
push
movs
test
and
cmp
call
sub
inc
les
in
fistp
push
inc
das
sbb
xchg
adc
mov
pusha
fld
gs
or
xor
mov
rol
jo
sbb
sbb
mov
sbb
and
add
mov
sub
sub
movs
daa
add
mov
and
leave
add
push
(bad)
mov
bound
add
fs
call
pop
lds
enter
sub
mov
dec
gs
(bad)
mov
and
sbb
es
mov
fwait
dec
xor
sub
push
cmp
sbb
adc
and
fwait
dec
xor
xchg
popf
out
(bad)
and
out
test
stos
inc
pop
pop
and
leave
int3
sbb
retf
mov
adc
leave
push
adc
(bad)
sub
push
and
sbb
and
push
hlt
push
mov
xor
loop
xchg
xor
xchg
add
dec
rcr
in
mov
jnp
popa
adc
sub
cmps
add
jo
imul
icebp
dec
or
aad
xchg
add
cmps
inc
sbb
dec
cmps
adc
push
scas
ficom
dec
or
pop
mov
lods
and
jbe
cmp
mov
xchg
ret
(bad)
stc
sbb
dec
mov
ss
xor
pop
and
push
fwait
adc
xchg
(bad)
and
retf
movs
mov
es
lds
xchg
in
aam
or
call
dec
test
outs
test
pop
and
adc
inc
or
fdivr
jo
stos
add
sub
xchg
mov
repz
push
lea
inc
cmp
(bad)
xor
mov
test
push
sbb
lea
les
dec
mov
daa
shl
or
xchg
xchg
hlt
data16
pop
push
fist
outs
jmp
sar
push
push
add
push
loope
and
and
dec
dec
jno
inc
push
ror
in
(bad)
retf
and
pusha
enter
dec
fwait
hlt
add
jmp
push
sub
push
ret
mov
pushf
retf
mov
hlt
mov
xor
pop
movs
jl
pop
mov
adc
xchg
pop
xchg
ret
jbe
pop
xor
fmul
test
loopne
mov
call
ss
sub
std
inc
cld
and
stos
pop
movs
lahf
dec
and
or
ret
inc
mov
jl
pushf
retf
iret
adc
xchg
in
out
or
in
cmc
sub
sub
retf
enter
icebp
es
jno
add
das
dec
adc
mov
pop
lahf
retf
rol
imul
dec
jns
mov
imul
add
fdiv
inc
dec
(bad)
(bad)
bound
jecxz
js
mov
xor
push
(bad)
repz
lahf
inc
out
push
iret
push
call
or
retf
enter
ss
call
add
sub
ins
mov
sbb
data16
call
sbb
out
and
mov
dec
add
stc
or
(bad)
jg
push
xlat
sub
add
data16
and
ds
mov
sbb
sub
imul
sbb
or
mov
inc
mov
rcr
icebp
jb
push
mov
xchg
int
and
test
(bad)
int
mov
retf
pop
cmp
pusha
cmp
inc
and
les
test
inc
lock
stos
dec
mov
int
xor
or
fcomp
scas
and
int3
adc
pop
mov
push
and
stos
mov
cmp
pop
and
fsubrp
pop
inc
xlat
mov
addr16
jno
retf
rcl
movs
sub
(bad)
loop
jge
or
movs
jmp
and
sbb
mov
mov
xor
xor
pop
mov
pop
stos
loop
push
inc
fimul
or
jno
in
cmps
lahf
inc
dec
sbb
movs
pop
pushf
xchg
jle
sahf
aad
ja
test
jbe
and
or
pop
mov
sbb
and
xchg
cmp
data16
(bad)
out
jp
xchg
inc
or
shr
fisubr
push
pop
cdq
cmps
popa
imul
adc
call
ja
mov
mov
pop
retf
adc
arpl
mov
out
adc
(bad)
dec
idiv
jbe
jae
cmp
mov
fbld
clc
in
mov
in
sbb
int
xchg
xchg
mov
sti
imul
and
inc
inc
jmp
or
rol
(bad)
cs
imul
sti
sbb
mov
add
push
js
retf
stos
jo
xchg
not
aaa
push
pop
dec
mov
aam
mov
out
fcom
pop
or
popa
or
push
es
sub
push
das
pop
push
xor
fs
fstp
inc
aad
inc
(bad)
ins
and
mov
das
or
hlt
inc
outs
mov
mov
out
fwait
cmp
dec
sub
ja
push
arpl
jp
addr16
leave
adc
or
js
mov
scas
cwde
mov
mov
sahf
jmp
pop
jno
fimul
xchg
adc
stc
ss
sub
xchg
lods
jb
in
imul
xor
aas
addr16
push
int3
imul
fistp
jb
gs
mov
xchg
push
pop
mov
jp
inc
scas
sbb
popa
arpl
ins
in
push
jmp
int3
push
push
xor
mov
aam
sbb
mov
inc
cmp
test
push
mov
gs
imul
mov
jns
aad
jp
or
push
addr16
mov
pop
add
data16
push
mov
sahf
dec
mov
dec
xor
cmps
dec
stc
push
and
jae
data16
outs
push
dec
into
dec
dec
mov
aaa
cmp
cmp
pop
call
aam
jo
pushf
add
add
in
fnstcw
xchg
int3
out
and
mov
shr
fnstsw
mov
lock
and
int3
imul
pop
cmp
inc
pop
cmp
or
push
loope
ret
mov
inc
push
jnp
and
mov
inc
and
push
fadd
(bad)
ins
iret
arpl
lods
sbb
sbb
iret
(bad)
mov
and
sub
inc
cmp
mov
enter
ins
xor
sbb
das
inc
and
daa
dec
mov
mov
mov
loopne
arpl
xchg
mov
movs
sub
jmp
mov
retf
or
push
pop
inc
xchg
and
adc
cmp
sti
nop
aaa
ins
movs
jae
mov
cs
hlt
iret
mov
add
and
mov
inc
sti
sbb
or
out
cmps
sub
pop
sbb
shl
jbe
mov
outs
mov
dec
push
dec
inc
imul
dec
inc
push
dec
stos
inc
push
stos
inc
fild
aad
das
shl
or
pushf
jae
push
xor
pop
xor
ss
pop
(bad)
in
addr16
push
loopne
and
retf
push
in
(bad)
xlat
ins
ret
jle
shl
adc
and
in
sbb
adc
mov
cmp
bound
add
clc
add
hlt
test
add
jb
(bad)
ret
out
in
int3
jg
movs
xchg
mov
sbb
add
dec
dec
ret
mov
push
(bad)
jo
cld
xchg
test
mov
dec
or
into
adc
mov
repz
loopne
sub
test
xchg
mov
cmps
nop
mov
pop
adc
enter
ins
mov
cmp
mov
xor
xchg
pop
lahf
push
push
xchg
into
repz
mov
pusha
cld
jle
add
pop
mov
iret
repz
stos
repnz
sub
cwde
push
mov
jle
mov
adc
adc
add
sub
jle
add
xchg
repnz
in
ja
jmp
xor
push
rol
into
ins
fnstsw
fdivr
or
std
adc
sub
mov
jle
inc
pop
in
out
test
iret
aas
jg
cmps
mov
xchg
ret
fcom
retf
mov
loopne
or
mov
outs
add
stc
shl
adc
cmp
xor
in
out
in
arpl
shl
rol
sahf
div
push
loopne
push
mov
fstp
outs
adc
fnop
push
mov
mov
bound
mov
mov
add
and
sub
mov
inc
ds
fdivr
mov
hlt
sbb
or
add
mov
mov
mov
mov
add
pop
xchg
cmps
xor
xchg
cmp
mov
mov
enter
adc
mov
je
mov
jmp
test
sbb
sbb
cmp
dec
shr
dec
pop
mov
and
or
mov
cmps
shl
inc
xor
fild
lods
aad
arpl
pop
test
lea
iret
les
shr
imul
mov
mov
jno
imul
loope
xchg
push
push
pop
jmp
xor
mov
push
mov
jmp
mov
mov
outs
rol
and
dec
push
jle
sub
push
aad
arpl
mov
inc
dec
cmp
imul
mov
arpl
xor
inc
ss
sub
push
mov
and
ds
jp
jne
add
jne
pop
repnz
mov
iret
cmps
cmp
mov
mov
xor
mov
retf
enter
jnp
mov
inc
ds
aas
stos
add
test
in
mov
leave
shr
adc
cwde
xor
aad
xor
pop
and
sub
xor
jecxz
mov
in
xchg
out
test
(bad)
cwde
loop
mov
inc
imul
pop
sbb
rcr
scas
xor
push
mov
pop
arpl
dec
adc
(bad)
sbb
enter
sub
xchg
pop
inc
jae
aam
cmp
push
popf
ret
cmp
loop
jb
push
ins
int3
ds
aam
jnp
stos
or
xor
retf
mov
xchg
pusha
fimul
pop
in
ret
ss
push
fldenv
inc
movs
out
mov
adc
in
add
cmp
pop
xor
loope
in
aad
fwait
in
and
xchg
pusha
mov
push
jns
cmp
mov
mov
stos
sbb
fcmovnbe
out
mov
je
fcom
(bad)
das
cmps
push
mov
xchg
fcomp
aaa
push
add
push
loopne
gs
sub
sub
in
jo
cmp
push
call
fldenv
popf
retf
out
pop
cmp
test
jecxz
scas
adc
mov
data16
fmul
dec
outs
add
push
mov
shl
dec
gs
stos
or
sbb
ja
or
xchg
mov
adc
mov
call
push
mov
iret
mov
stos
enter
out
shl
pop
cmp
sbb
push
mov
aad
stos
sbb
jo
sbb
jge
mov
mov
adc
add
(bad)
fidivr
loope
fdivr
(bad)
mov
cmps
cwde
jbe
setp
mov
in
jmp
ja
aad
cmp
mov
jbe
or
fistp
gs
push
leave
sbb
sbb
shl
inc
adc
enter
aad
jbe
stos
cmp
mov
sub
loope
icebp
jb
cmp
out
mov
mov
repz
mov
or
js
bound
mov
jge
fstp
mov
int
mov
mov
cmp
sbb
fxam
call
call
mov
mov
mov
add
int
jne
adc
and
std
(bad)
enter
dec
repz
xchg
mov
aaa
ficom
mov
out
push
or
icebp
mov
cmc
into
lods
ds
(bad)
fcomp
mov
out
stc
pop
mov
dec
in
outs
push
mov
jbe
jbe
fmul
mov
mov
lea
das
xchg
xor
repnz
adc
ret
jg
js
sbb
retf
ins
push
outs
push
ins
mov
inc
push
push
daa
movs
sti
xor
(bad)
push
stos
cmps
sbb
adc
mov
sbb
test
bswap
movs
retf
sbb
out
fadd
cmp
mov
jno
(bad)
cli
pop
pop
cdq
adc
xor
data16
sub
aad
sub
rcl
das
stos
xlat
sub
xchg
and
mov
or
mov
shl
adc
ins
mov
out
jmp
aas
mov
mov
mov
(bad)
jo
in
jmp
pushf
push
pop
pushf
jbe
jecxz
mov
inc
add
jbe
sbb
dec
push
jb
inc
scas
pop
out
jmp
leave
imul
sbb
jae
xchg
jnp
shl
repz
pop
pop
sbb
sar
cmps
inc
inc
sbb
les
div
adc
femms
or
ret
and
in
dec
cwde
scas
jns
call
(bad)
or
shl
in
jmp
pop
loope
push
push
in
push
(bad)
in
sbb
in
sub
pop
sub
(bad)
lods
stos
push
jmp
loop
adc
aaa
ins
jne
nop
pop
cli
ror
push
push
push
movs
daa
stos
dec
dec
push
xchg
mov
jnp
jnp
fsub
mov
and
mov
cli
mov
pop
cwde
cmc
jecxz
and
and
xor
in
mov
fbld
mov
add
mov
inc
lock
neg
fild
(bad)
loope
pop
sub
cmp
push
sub
sbb
or
pop
clc
adc
test
mov
cmc
xor
and
fstp
add
adc
ret
mov
push
loope
push
je
pushf
test
outs
stos
pusha
mov
fidivr
jno
fisubr
pop
or
lahf
xor
sbb
in
mov
shl
push
imul
mov
adc
pushf
fs
mov
adc
vmovss
cdq
shr
pop
and
into
cmp
test
into
adc
aam
xchg
push
push
push
stos
and
sbb
adc
mov
mov
mov
call
inc
push
scas
push
pop
lods
test
mov
inc
cmc
add
cmps
jo
push
(bad)
ja
xchg
or
push
clc
adc
adc
test
arpl
in
xchg
test
push
aad
push
ins
adc
mov
jbe
adc
xchg
std
push
adc
(bad)
push
push
dec
inc
inc
xor
call
movs
dec
movs
sahf
dec
out
jl
in
dec
fs
cmp
sbb
cmp
sub
lea
xor
cmc
mov
bound
mov
jmp
mov
pop
test
ret
test
mov
lahf
inc
jne
loop
inc
test
xchg
loop
jp
lahf
jmp
or
add
jbe
dec
mov
fmul
fwait
call
test
mov
adc
enter
cmps
out
add
sti
(bad)
add
push
mov
nop
xor
fadd
jae
shl
rol
and
and
popa
mov
jmp
xor
lahf
inc
aas
dec
in
(bad)
mov
lods
jl
test
fimul
inc
cmps
dec
test
ror
icebp
icebp
call
sub
adc
xor
xchg
dec
popf
cdq
sbb
call
and
imul
jnp
ret
inc
mov
xlat
inc
fcomi
bound
shl
push
out
add
or
inc
add
retf
std
shl
stos
pushf
das
cdq
and
dec
in
xchg
xor
or
test
mov
or
mov
push
add
out
out
scas
ins
adc
push
dec
out
mov
add
fild
mov
cmp
mov
addr16
jnp
push
jge
pop
call
xchg
mov
fdivr
ja
mov
out
xor
sahf
movs
addr16
movs
addr16
jmp
fwait
push
call
(bad)
iret
xchg
cmp
mov
outs
scas
out
mov
popa
xchg
pop
ins
pop
jg
mov
in
aaa
stos
mov
xchg
loope
and
js
cdq
clc
in
jae
xor
mov
in
jl
ror
mov
sub
dec
iret
shl
iret
shl
iret
shl
jg
and
icebp
fild
inc
and
mov
mov
sub
mov
ror
icebp
or
pop
dec
pop
mov
mov
sti
cmc
jg
in
mov
mov
cmps
gs
fld
mov
sub
in
xchg
daa
popf
aas
push
dec
popa
scas
mov
nop
loop
mov
loope
bound
lods
ss
jg
dec
mov
push
sub
lock
and
fmul
loop
pop
je
stc
(bad)
and
push
xchg
xchg
xor
pop
ret
test
push
xchg
adc
les
xlat
xchg
bound
cmp
and
add
adc
repnz
add
jmp
mov
or
imul
neg
and
inc
(bad)
lds
pop
mov
mov
pop
hlt
fstp
xor
cmp
push
icebp
push
shr
cdq
adc
xchg
mov
lock
inc
das
int
bound
cld
xchg
imul
push
sub
xor
xor
sti
fs
aaa
mov
xlat
inc
mov
fadd
add
or
xor
cs
xchg
ins
lahf
cmps
gs
mov
addr16
jne
scas
std
leave
stc
pop
int3
fbld
ja
pushf
mov
cmps
cwde
and
push
mov
push
cdq
ins
enter
dec
iret
shl
iret
shl
iret
shl
arpl
jns
das
sbb
shl
iret
shl
iret
shl
iret
shl
cld
das
push
dec
add
add
add
add
sbb
inc
sbb
ja
xchg
add
add
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
lods
inc
cld
jb
mov
add
into
add
into
add
xor
inc
pop
mov
sahf
ins
loopne
adc
or
mov
sbb
inc
dec
mov
inc
mov
repz
sti
dec
ss
xchg
js
dec
mov
add
cmc
or
out
stos
and
sub
jo
dec
jbe
fldenv
jl
or
(bad)
ds
dec
mov
out
cwde
sbb
mov
jmp
outs
pop
retf
mov
push
data16
and
cld
jmp
(bad)
dec
add
sub
add
add
sbb
inc
fs
lods
std
mov
add
pop
add
add
jp
jp
gs
or
and
add
add
add
sbb
lods
inc
cld
jb
mov
add
into
add
into
add
add
sub
add
add
sbb
inc
sbb
ja
xchg
add
add
add
add
inc
mov
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
lods
inc
cld
jb
mov
add
into
add
into
add
add
add
add
add
mov
add
add
shr
sbb
test
jl
enter
aam
out
out
sub
fidiv
test
ds
(bad)
hlt
int3
imul
pop
sbb
cs
leave
repz
sahf
and
aad
add
shl
stos
neg
scas
jl
xchg
adc
sub
inc
jo
push
sub
pop
pop
mov
adc
adc
or
jae
data16
or
sbb
mov
sar
and
sbb
ds
jno
(bad)
mov
xor
fst
sbb
adc
(bad)
jmp
or
adc
clc
outs
fwait
cmp
cmps
icebp
retf
push
cmp
sub
ret
mov
test
sahf
stc
lds
sub
mov
fist
and
sub
mov
xor
add
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
xor
add
add
add
and
add
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
