inc
mov
add
dec
add
add
add
add
pop
add
add
add
fiadd
add
test
add
rol
add
xor
add
add
add
add
adc
add
push
sub
es
sub
or
add
cmp
and
add
add
jg
add
sub
add
push
cmp
add
and
push
add
sub
add
push
and
add
add
pop
add
add
xchg
add
add
mov
add
sub
add
push
and
add
add
add
cmp
add
add
add
cmp
add
add
add
jle
stc
popa
and
add
add
push
add
add
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
jmp
(bad)
inc
add
add
(bad)
(bad)
inc
add
and
add
add
sar
(bad)
inc
and
and
jmp
jmp
xchg
(bad)
(bad)
jmp
pop
add
add
or
add
and
add
add
add
xor
add
pop
add
add
fwait
(bad)
(bad)
jmp
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
adc
add
push
and
mov
dec
inc
adc
and
add
dec
mov
sub
add
or
adc
add
adc
adc
pop
jae
add
or
pop
cmp
add
add
and
add
add
add
add
and
popf
les
pop
push
pop
inc
push
add
add
add
clc
add
add
add
sub
add
mov
(bad)
push
add
add
add
add
add
add
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
and
add
pop
adc
pop
add
add
or
inc
add
cmp
add
add
push
adc
and
and
(bad)
mov
cmp
sub
add
push
or
add
add
cmp
add
add
or
inc
repnz
ret
outs
sub
pop
(bad)
(bad)
inc
or
adc
add
and
add
add
cmp
pop
push
adc
adc
or
adc
add
and
add
add
xchg
add
add
or
and
and
loop
inc
popa
cmp
(bad)
(bad)
inc
sub
add
push
pop
or
and
add
add
cmp
add
adc
and
xor
jg
jge
cmp
(bad)
(bad)
call
or
loope
outs
mov
dec
hlt
sbb
popa
cmp
(bad)
(bad)
call
add
aas
test
(bad)
call
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
add
add
or
sahf
out
mov
(bad)
push
popa
cmp
adc
cmp
(bad)
jmp
add
push
or
dec
add
add
add
inc
add
dec
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
das
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
inc
call
(bad)
(bad)
jmp
(bad)
call
add
add
or
add
cmp
or
or
mov
pop
and
cmp
(bad)
inc
sub
add
push
adc
add
mov
(bad)
inc
jae
add
or
and
add
add
or
jbe
(bad)
jmp
adc
and
out
pop
and
pop
adc
(bad)
push
add
push
or
add
add
cmp
(bad)
call
or
ret
add
mov
(bad)
(bad)
inc
or
sbb
adc
add
and
add
add
sub
(bad)
jmp
cmp
cmp
adc
add
pop
aas
pop
bound
and
or
add
(bad)
jmp
adc
and
in
inc
pop
and
scas
aam
popa
cmp
push
sub
adc
or
add
add
sub
es
and
add
add
pop
add
pop
or
pop
pop
or
popa
sahf
adc
out
or
and
cmp
call
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
and
and
mov
add
and
and
test
jno
cmp
pop
sbb
pop
sbb
sahf
and
add
add
lock
add
or
push
and
adc
rcr
cmp
add
add
pop
pop
adc
pop
xchg
or
xchg
popa
sahf
and
add
pop
cmp
add
add
adc
pop
push
mov
jno
popa
cmp
add
push
adc
add
mov
or
loope
loope
pop
and
(bad)
fwait
sub
cmp
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
sahf
adc
jg
(bad)
movs
pop
and
cmp
add
sub
add
push
adc
adc
cmp
pop
cmp
cdq
scas
jle
popa
cmp
add
add
pop
pop
or
pop
pop
or
or
or
popa
sahf
cmp
and
add
add
sub
add
or
add
fidiv
and
in
popa
cmp
add
add
or
adc
adc
and
add
add
cmps
pop
mov
add
add
fld
cmc
push
and
add
adc
pop
pop
adc
adc
fisttp
xor
mov
cmp
add
adc
add
add
rol
add
or
pusha
rcr
sti
pop
and
lock
cmp
add
push
sbb
sub
add
push
adc
adc
gs
shl
pop
and
pushf
push
add
adc
adc
(bad)
(bad)
jmp
or
add
cmp
add
adc
pop
adc
or
xchg
test
or
sbb
sti
jbe
cmp
add
add
pop
pop
movups
pop
setne
pop
setne
and
add
add
or
add
cmp
add
adc
call
and
cmp
add
add
or
adc
add
add
add
or
add
sub
in
(bad)
jmp
and
add
add
or
pop
add
add
add
add
adc
cmc
mov
adc
push
add
add
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
(bad)
add
add
or
into
push
pop
rcr
(bad)
daa
sub
cmp
add
and
push
adc
adc
add
cmp
or
jp
retf
and
cmp
add
add
or
adc
inc
add
and
add
add
cmp
and
sub
add
push
adc
adc
ja
mov
and
rcr
add
adc
adc
and
adc
pop
sbb
and
add
add
dec
add
add
adc
sahf
and
aas
add
add
popf
xchg
or
add
add
or
or
popa
or
add
cmp
add
add
adc
clc
xchg
pop
and
test
mov
add
jecxz
add
and
add
add
or
add
cmp
add
add
adc
add
(bad)
lahf
popa
cmp
adc
pop
add
and
add
or
add
add
and
add
add
ret
add
or
pop
adc
and
add
add
mov
add
adc
in
mov
pop
and
test
add
or
push
and
adc
pop
adc
and
add
add
test
add
adc
daa
mov
push
sub
push
add
add
or
(bad)
dec
add
and
cmp
add
add
adc
adc
add
and
add
push
add
push
or
adc
adc
add
or
pop
add
add
cmp
add
pop
adc
and
add
add
sub
popa
pop
add
cmp
add
add
add
add
es
add
add
pop
sbb
pop
sbb
or
add
add
add
add
and
push
dec
push
add
pop
adc
pop
adc
sahf
and
add
cmp
add
add
or
mov
and
cmp
add
or
pop
sbb
or
fs
or
add
mov
add
adc
fild
shr
dec
sahf
popa
cmp
add
adc
adc
xchg
adc
and
add
add
xchg
add
add
or
mov
and
scas
and
add
add
pop
sbb
pop
sbb
sahf
and
add
add
push
js
add
adc
pop
or
pop
pop
or
popa
sahf
adc
dec
(bad)
cmps
dec
pop
and
mov
cmp
add
add
adc
and
add
add
xor
add
adc
(bad)
cmp
outs
xchg
popa
cmp
add
add
or
push
and
adc
push
rcr
and
add
add
push
or
add
add
add
cli
(bad)
inc
cli
(bad)
dec
std
(bad)
(bad)
fdivrp
(bad)
jmp
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
cli
(bad)
jmp
sti
(bad)
dec
add
add
add
add
(bad)
call
add
(bad)
(bad)
jmp
(bad)
inc
std
(bad)
inc
cli
(bad)
jmp
sti
(bad)
push
(bad)
call
cld
(bad)
(bad)
sti
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
sti
(bad)
dec
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
and
add
add
pop
(bad)
(bad)
jmp
dec
mov
retf
and
adc
es
inc
add
add
std
(bad)
(bad)
fdivrp
(bad)
call
add
sbb
(bad)
inc
cli
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
std
stc
(bad)
call
cli
(bad)
jmp
add
add
(bad)
call
(bad)
call
sti
(bad)
inc
(bad)
jmp
(bad)
mov
(bad)
(bad)
call
std
(bad)
(bad)
fsqrt
(bad)
jmp
(bad)
(bad)
jns
(bad)
dec
cld
(bad)
push
(bad)
dec
(bad)
push
cld
(bad)
dec
cld
(bad)
inc
add
add
sti
(bad)
dec
(bad)
dec
cli
(bad)
dec
add
and
add
cmp
dec
lahf
pop
and
add
mov
cmp
(bad)
(bad)
call
pop
pop
or
xchg
or
or
and
add
push
cmp
(bad)
jmp
adc
push
daa
sbb
fmul
cmp
(bad)
(bad)
call
pop
sbb
or
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
push
cmp
(bad)
(bad)
jmp
adc
inc
push
cmp
and
adc
(bad)
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
add
paddd
call
adc
and
add
(bad)
jmp
mov
push
add
add
pop
arpl
dec
and
(bad)
jmp
add
adc
push
add
add
add
add
push
add
mov
and
test
popa
adc
add
push
or
xchg
jecxz
stc
and
cdq
mov
adc
pop
divps
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
and
add
fadd
add
push
add
add
add
add
add
add
add
add
outs
add
add
add
adc
adc
and
psubsb
pop
jne
loop
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
add
add
outs
add
add
adc
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
xchg
mov
xor
cmp
and
(bad)
(bad)
aas
pop
adc
adc
and
daa
jmp
popa
cmp
(bad)
(bad)
inc
outs
pop
push
or
add
and
cmp
add
add
inc
loopne
jmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
mov
pop
and
bnd
popa
cmp
(bad)
call
lea
add
sbb
sbb
sbb
call
dec
push
mov
or
pop
and
fdiv
nop
push
aam
cmp
(bad)
call
pop
and
inc
jnp
pop
and
adc
jno
cmp
outs
push
push
or
add
and
cmp
add
add
neg
mov
(bad)
(bad)
inc
sbb
add
pop
and
and
std
std
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
add
pop
pop
and
sahf
retf
xlat
std
(bad)
inc
outs
sbb
or
add
and
sti
cmp
push
add
add
ja
mov
adc
and
pusha
xor
popa
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
mov
pop
and
aas
std
(bad)
inc
sub
xor
add
add
sub
es
add
push
fistp
retf
fsubr
(bad)
mov
inc
pop
loope
and
pop
inc
or
add
mov
add
add
add
add
add
add
add
iret
add
add
add
add
add
add
sub
add
push
outs
sbb
or
add
and
cmp
add
add
stos
mov
std
and
(bad)
inc
outs
pop
push
or
add
and
cmp
add
add
and
cs
adc
and
rcr
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
ins
pop
ret
rcl
popa
cmp
(bad)
(bad)
inc
outs
push
push
or
add
and
lock
cwde
and
add
mov
ror
(bad)
inc
pop
push
or
pop
and
movs
fs
pop
and
xchg
pop
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
add
add
outs
add
add
adc
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
and
cmp
(bad)
(bad)
jmp
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
js
test
in
sbb
popa
cmp
std
(bad)
call
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
ins
aad
and
cmp
std
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
push
add
or
push
mov
or
pop
and
repnz
stos
popa
cmp
sub
xor
add
add
add
add
push
add
das
mov
int3
jb
dec
popa
adc
and
xor
and
pop
inc
sldt
add
add
add
add
add
add
add
add
or
add
cmps
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
je
add
adc
and
and
cmp
add
add
adc
push
adc
pop
sub
add
or
pop
and
sub
xor
xlat
adc
jbe
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
test
jno
cmp
(bad)
call
add
adc
adc
and
sti
add
(bad)
mov
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
add
bound
add
outs
pop
push
or
add
and
cmp
add
add
data16
jge
adc
and
cmp
cmp
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
push
arpl
sbb
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
add
add
outs
add
add
adc
or
push
adc
and
jmp
sti
pop
and
pop
inc
popa
cmp
(bad)
inc
pop
push
or
pop
and
xchg
inc
pop
and
mov
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
xor
mov
(bad)
(bad)
call
push
movs
add
add
or
pop
and
fisttp
mov
in
popa
cmp
std
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
and
mov
(bad)
std
(bad)
dec
push
mov
or
pop
and
lds
and
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
addr16
and
cmp
std
(bad)
inc
sub
xor
add
add
add
add
push
add
sbb
adc
pop
and
or
(bad)
and
and
loope
dec
popa
and
pop
inc
adc
add
and
add
add
add
add
add
add
add
lods
add
add
add
add
add
call
add
add
add
add
add
add
add
add
xchg
add
add
push
or
add
adc
adc
and
mov
push
repz
cmp
push
mov
or
pop
and
sbb
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
repz
retf
cmp
(bad)
(bad)
jmp
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
and
cmp
outs
sbb
or
add
and
push
add
add
(bad)
loop
cmp
cmp
lea
add
sbb
aas
dec
pop
and
inc
jne
cmp
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
and
or
(bad)
popa
cmp
(bad)
(bad)
call
push
movs
add
add
or
pop
and
sub
pop
and
cmp
(bad)
(bad)
inc
outs
push
push
or
add
and
push
add
add
jmp
les
es
std
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
adc
and
and
out
enter
std
(bad)
call
pop
and
out
lock
and
loope
push
popa
cmp
add
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
cld
imul
nop
dec
popa
cmp
add
add
sub
add
or
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
mov
pop
and
cmp
(bad)
inc
sbb
add
outs
sbb
or
add
and
or
add
and
les
and
xchg
int
rcr
cmp
std
(bad)
inc
sub
adc
push
add
add
add
add
push
add
sub
and
sbb
mov
pop
push
or
add
adc
and
jl
icebp
mov
pop
push
pop
inc
push
add
add
add
add
add
xor
add
test
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
outs
push
push
or
add
and
dec
inc
out
cmp
add
add
movs
or
cmp
add
add
sub
add
or
add
or
add
or
push
adc
and
into
test
pop
and
cmp
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
dec
outs
pop
pop
and
ret
and
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
setbe
shl
sar
dec
push
mov
or
pop
and
test
and
sbb
popa
cmp
outs
sbb
or
add
and
cmp
add
add
ret
loope
call
(bad)
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
in
mov
and
dec
imul
inc
and
(bad)
(bad)
aas
pop
adc
add
bound
add
outs
pop
push
or
add
and
cli
pusha
jmp
cmp
add
add
aaa
inc
and
das
pop
scas
jmp
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
adc
and
cmc
add
int
(bad)
jmp
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
and
and
test
popa
cmp
push
movs
add
add
or
pop
and
jne
into
pop
and
cmp
add
add
adc
push
adc
pop
sub
add
or
pop
and
dec
ja
and
cmp
(bad)
inc
sub
add
sub
es
add
in
add
push
sub
sub
es
add
add
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
or
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
or
add
sub
add
xor
add
add
add
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outs
das
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
xor
add
sub
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
or
add
adc
or
sldt
add
add
add
add
push
add
or
add
add
add
sub
adc
or
adc
add
add
add
sub
es
add
add
add
add
add
adc
or
fadd
add
push
add
adc
add
push
pop
sub
and
mov
cwde
fadd
add
add
jnp
add
add
bound
jnp
add
add
sbb
add
and
push
add
add
inc
pop
or
inc
sldt
add
add
rol
add
add
add
add
add
add
add
add
add
add
test
add
mov
add
mov
(bad)
push
add
add
add
add
add
add
add
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
xchg
add
add
add
add
add
add
add
sbb
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
push
and
dec
loop
es
and
cmps
shr
popa
sub
add
add
bound
add
add
or
xor
(bad)
inc
jnp
add
add
inc
popf
add
add
inc
add
add
idiv
(bad)
jmp
clc
in
mov
scas
xor
or
or
add
cwde
(bad)
(bad)
call
add
ret
(bad)
(bad)
(bad)
jnp
add
push
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
or
fsin
(bad)
inc
and
xor
add
sub
add
add
bound
jnp
add
add
sbb
add
and
push
add
add
or
jmp
adc
sub
and
push
xchg
and
lods
sbb
(bad)
(bad)
inc
and
add
pop
jge
add
add
push
cmp
(bad)
inc
and
repz
enter
(bad)
push
push
popa
cmp
(bad)
call
sub
pop
adc
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
aaa
lods
sbb
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
inc
and
leave
popf
and
popa
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
and
add
jnp
add
add
fs
jge
add
add
cmp
std
(bad)
inc
jnp
add
add
or
add
add
or
sub
add
push
and
(bad)
call
idiv
(bad)
jmp
add
add
bound
add
add
dec
(bad)
(bad)
jmp
push
cmp
pop
add
add
add
add
inc
push
(bad)
(bad)
call
add
(bad)
(bad)
call
cmp
inc
add
add
idiv
(bad)
jmp
sub
add
jge
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
add
(bad)
call
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
xor
and
add
add
add
sub
es
sub
es
add
jge
add
add
pop
add
pop
pop
bound
jge
add
add
add
add
xor
push
add
add
add
adc
add
push
sbb
pop
pop
and
leave
mov
and
mov
add
add
jnp
add
add
loopne
add
add
sub
sub
cmp
add
add
outs
pop
add
add
add
pop
pop
bound
lods
add
add
add
(bad)
(bad)
call
sub
add
cmp
or
inc
or
add
cmp
add
aas
add
add
add
test
(bad)
call
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
xchg
je
and
sbb
add
add
add
(bad)
dec
add
push
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
cmp
jmp
sbb
xchg
pop
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
jbe
(bad)
jmp
je
mov
and
and
and
pop
pop
or
cmp
(bad)
jmp
sub
out
sub
xor
pop
add
add
add
adc
add
push
pop
cmp
add
add
and
test
clc
pop
and
adc
and
and
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
cmp
add
add
sar
dec
push
and
cmp
popa
and
pop
add
add
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
sbb
cmp
inc
add
add
idiv
(bad)
jmp
or
addr16
pop
and
cmp
ja
(bad)
jmp
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
dec
pop
or
add
add
pop
bound
jnp
add
add
loopne
add
add
add
push
add
push
and
sub
and
retf
xor
arpl
(bad)
dec
and
xor
fst
popa
cmp
(bad)
inc
jnp
add
add
sub
or
add
call
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
jmp
call
(bad)
call
(bad)
(bad)
call
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
mov
jae
sub
and
xlat
jb
es
(bad)
(bad)
inc
pop
add
add
add
pop
pop
bound
add
xor
xchg
add
add
add
adc
add
push
pop
sub
add
push
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
cmp
add
add
mov
or
sub
or
pop
or
cmp
add
add
or
cmp
add
add
retf
mov
and
add
pop
inc
or
add
retf
(bad)
(bad)
call
add
add
add
add
add
jl
add
inc
add
pop
add
mov
or
lods
add
add
add
int3
neg
xchg
dec
lods
popa
sub
add
add
rol
add
sbb
add
add
(bad)
(bad)
call
add
or
or
ja
add
pop
or
pop
pop
pop
bound
pop
or
and
add
and
inc
add
add
idiv
(bad)
jmp
push
cmp
or
add
sbb
dec
adc
(bad)
adc
js
mov
(bad)
(bad)
call
add
arpl
xchg
rcr
(bad)
inc
les
inc
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
add
push
add
push
and
bound
cmp
(bad)
call
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
(bad)
jnp
(bad)
dec
(bad)
inc
add
add
push
jmp
(bad)
(bad)
call
add
add
sub
and
aas
out
sub
and
es
(bad)
(bad)
inc
or
push
sub
or
fs
mov
(bad)
inc
sub
xor
test
add
adc
add
push
sbb
mov
add
or
or
mov
push
pop
mov
shl
daa
xchg
and
add
cmps
xor
and
ret
popa
sub
push
or
pop
sbb
xchg
add
add
add
push
jg
rcr
and
popa
sub
push
pop
bound
push
or
pop
sub
in
cmp
and
push
mov
pop
or
or
add
add
add
add
add
add
add
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
call
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
movs
call
mov
popf
or
pop
or
mov
add
sbb
add
add
add
add
add
add
cmp
(bad)
(bad)
aas
add
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
inc
add
add
sub
pop
or
or
ret
and
and
fsincos
sbb
cmp
(bad)
(bad)
inc
add
pop
loopne
add
add
add
push
add
push
and
pop
sub
add
add
(bad)
(bad)
jmp
sub
or
pop
pop
pop
bound
push
cmp
(bad)
call
add
sub
and
popa
int
popa
cmp
(bad)
(bad)
dec
add
call
inc
add
add
idiv
(bad)
jmp
pop
add
push
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
cmp
(bad)
(bad)
jmp
jp
fs
mov
sub
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
sub
es
add
sub
add
sub
adc
or
jb
add
or
add
sub
es
sbb
nop
add
add
and
and
sub
add
add
bound
jnp
add
add
or
add
and
push
add
add
sub
pushf
ficomp
and
mov
or
add
sar
(bad)
dec
add
add
add
add
add
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
and
ins
pop
and
xor
scas
push
or
jae
(bad)
call
or
inc
or
add
sub
add
test
add
outs
(bad)
(bad)
call
add
inc
add
add
add
add
add
add
(bad)
(bad)
push
add
add
sub
pop
and
and
arpl
dec
popa
cmp
(bad)
inc
sbb
jle
add
pop
inc
add
add
idiv
(bad)
call
or
movs
and
loop
dec
cmp
(bad)
(bad)
inc
pop
pop
or
xchg
sub
adc
add
ins
(bad)
(bad)
jmp
pop
or
jle
(bad)
inc
add
add
add
daa
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
cmp
fsubr
jmp
sub
and
scas
jg
and
(bad)
jmp
add
adc
or
adc
add
add
add
sub
es
add
add
add
or
add
adc
or
add
add
adc
add
push
pop
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
inc
push
and
clc
loopne
pop
and
sub
jnp
add
add
add
add
inc
mov
add
sbb
add
add
(bad)
(bad)
call
sbb
inc
mov
push
sub
add
add
bound
add
add
mov
pop
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
sub
sub
jg
jecxz
popa
pop
popa
and
add
(bad)
(bad)
call
add
jnp
(bad)
dec
add
fdivr
(bad)
jmp
adc
sbb
sub
pop
inc
add
add
idiv
(bad)
jmp
sub
add
add
add
bound
jnp
add
add
or
add
and
push
add
add
cmp
(bad)
jmp
sub
fs
adc
sub
adc
or
push
add
or
add
sub
es
sbb
aad
add
add
jge
add
add
(bad)
add
add
pop
xchg
and
mov
adc
add
push
and
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
sbb
add
add
(bad)
(bad)
jmp
push
or
cmp
add
push
push
bound
sbb
jae
icebp
outs
and
add
adc
rcr
push
arpl
popa
cmp
add
pop
push
bound
jnp
add
add
sub
add
and
pop
or
aas
add
cmp
and
push
popa
cmp
add
add
pop
bound
adc
pusha
or
add
cli
pop
and
cmp
add
add
pop
pop
or
add
push
adc
inc
adc
add
jl
(bad)
inc
add
out
add
add
(bad)
(bad)
inc
add
dec
add
add
(bad)
inc
(bad)
inc
(bad)
push
add
add
add
add
add
add
(bad)
(bad)
inc
add
or
mov
add
in
and
sub
push
jge
add
add
(bad)
(bad)
(bad)
jmp
pop
or
daa
add
push
and
inc
add
add
idiv
(bad)
jmp
and
push
scas
and
dec
push
pop
or
cmp
(bad)
inc
jnp
add
add
pop
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
push
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
push
pop
pop
pop
adc
jmp
cmp
int
and
imul
and
pop
inc
or
add
out
(bad)
(bad)
js
(bad)
jmp
add
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
cmp
add
mov
(bad)
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
dec
push
cmp
sbb
add
add
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
in
pop
and
jge
mov
mov
jnp
add
add
pop
push
push
cmp
inc
add
add
idiv
(bad)
jmp
and
test
and
ins
out
and
out
inc
cmp
popa
cmp
inc
push
adc
pop
pop
pop
or
cmp
(bad)
dec
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
sbb
sub
add
and
aam
cmp
add
add
and
or
inc
pop
and
jae
popa
cmp
add
add
pop
pop
or
and
mov
mov
mov
add
push
push
push
xchg
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
adc
cmp
add
add
add
(bad)
(bad)
jmp
push
or
push
cmp
pop
jb
lea
add
add
add
add
cmp
jae
add
push
jge
add
add
fbld
sbb
xchg
add
add
sub
add
push
pop
or
add
pop
or
lea
add
add
add
add
adc
xor
add
and
inc
add
add
idiv
(bad)
jmp
add
rol
add
lea
add
add
add
add
pop
or
lea
add
add
add
add
or
inc
pop
and
sub
cwde
cmp
mov
add
add
add
add
pop
add
add
sbb
add
add
adc
adc
add
add
jge
add
add
popf
add
add
or
inc
adc
add
xchg
(bad)
(bad)
inc
(bad)
(bad)
fadd
add
add
(bad)
jmp
add
inc
add
add
(bad)
(bad)
dec
(bad)
(bad)
mov
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
add
add
add
imul
(bad)
inc
(bad)
(bad)
call
add
add
add
sbb
test
sbb
add
push
jge
add
add
or
cwde
add
add
push
jge
add
add
jae
add
push
jge
add
add
sub
add
and
(bad)
call
add
(bad)
(bad)
(bad)
cmp
(bad)
inc
jae
add
push
jge
add
add
pop
cmp
call
add
(bad)
(bad)
jmp
and
(bad)
mov
dec
lds
or
add
or
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
sti
std
(bad)
jmp
(bad)
(bad)
(bad)
cmp
add
add
adc
add
or
xor
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
or
lea
add
add
add
add
movhps
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
rol
add
lea
add
add
add
add
xor
add
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
xor
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
push
jge
add
add
or
jne
(bad)
inc
pop
or
lea
add
add
add
add
cmp
(bad)
jmp
test
and
mov
or
(bad)
jmp
add
adc
or
pop
add
add
add
adc
add
push
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
cmp
add
add
idiv
(bad)
jmp
and
hlt
and
arpl
popa
and
push
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
cmp
jnp
add
add
cmp
add
add
inc
add
add
idiv
(bad)
call
xchg
add
cmp
add
add
add
add
add
cmp
add
and
and
test
add
jnp
add
add
sub
es
add
add
sub
and
mov
mov
(bad)
inc
jnp
add
add
add
add
sub
or
mov
sbb
or
and
inc
(bad)
(bad)
inc
jnp
add
add
outs
pop
add
push
sub
or
add
xor
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
inc
(bad)
(bad)
jmp
(bad)
dec
add
add
pop
sub
add
add
(bad)
(bad)
jmp
pop
and
push
es
and
out
(bad)
jmp
adc
or
adc
add
add
add
sub
es
add
add
add
add
add
push
sub
add
xor
add
add
add
add
adc
add
push
sbb
into
add
add
add
pop
pop
bound
pop
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
sub
add
push
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
xor
add
and
add
sbb
add
add
idiv
(bad)
jmp
arpl
push
add
add
add
outs
inc
add
push
sbb
push
pop
and
pop
xchg
pop
and
sub
add
pop
pop
jge
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
and
(bad)
jmp
xchg
popa
and
add
add
loopne
(bad)
jmp
(bad)
jmp
sub
or
inc
or
add
js
(bad)
push
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
add
add
jae
(bad)
jmp
push
sub
sub
adc
or
ret
add
add
adc
add
push
pop
or
sub
add
add
(bad)
(bad)
call
sub
add
es
sbb
mul
xchg
jp
and
add
push
pop
or
add
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
or
add
add
sbb
add
lahf
add
add
add
add
add
add
add
add
loope
add
xchg
add
add
add
add
add
fild
add
and
add
push
add
add
add
add
(bad)
jmp
add
repnz
add
add
add
add
add
add
add
add
mov
add
nop
add
add
add
pop
adc
xor
add
and
inc
add
add
idiv
(bad)
jmp
add
add
add
loopne
add
add
sub
cmp
(bad)
inc
jnp
add
add
loopne
add
add
sub
and
cmp
xor
and
mov
sti
popa
cmp
add
add
or
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
int3
push
scas
sahf
pop
and
mov
test
add
or
mov
and
cmp
or
movs
add
add
sbb
xor
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
xchg
out
fisub
cwde
mov
cmp
add
jnp
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
or
mov
jnp
add
add
sub
add
push
pop
adc
test
jnp
add
add
loopne
add
add
sub
push
cmp
inc
add
add
idiv
(bad)
jmp
and
test
inc
add
add
add
add
loopne
add
add
sub
pop
pop
or
and
lods
push
ficomp
outs
cmps
js
popa
cmp
add
add
pop
jb
and
(bad)
call
idiv
(bad)
call
push
cmp
(bad)
(bad)
dec
and
and
adc
loop
cmp
pop
pop
or
adc
sbb
mov
leave
movs
and
xchg
xchg
mov
add
push
sbb
pop
or
adc
cld
std
(bad)
dec
and
sub
cmp
addr16
sub
jnp
add
add
cmp
add
pop
push
cmp
std
(bad)
dec
and
adc
and
add
jmp
dec
add
add
add
cmp
add
pop
adc
mov
mov
xlat
(bad)
sub
push
or
(bad)
std
(bad)
dec
and
jl
fistp
test
sub
add
add
add
loopne
add
add
sub
or
cmp
jmp
cmp
mov
lahf
popa
and
inc
pop
add
add
add
add
(bad)
(bad)
call
(bad)
push
cld
(bad)
push
std
(bad)
call
add
add
add
add
(bad)
(bad)
inc
(bad)
call
std
(bad)
inc
(bad)
(bad)
cmp
add
and
(bad)
inc
(bad)
(bad)
(bad)
cmp
add
mov
add
add
(bad)
(bad)
jmp
add
sbb
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
cmp
add
add
add
add
add
add
add
cmp
add
or
fnstsw
fsubr
pop
(bad)
(bad)
inc
pop
pop
or
xor
add
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
sbb
lods
fcomp
jle
inc
adc
or
jl
add
add
sbb
add
pop
or
js
(bad)
inc
jnp
add
add
loopne
add
add
sub
or
jmp
adc
(bad)
(bad)
call
or
adc
push
and
(bad)
call
add
(bad)
(bad)
jmp
or
ror
inc
pop
and
in
or
popa
cmp
jnp
add
add
cmp
add
push
pop
cmp
cld
(bad)
call
add
(bad)
(bad)
jmp
or
push
hlt
mov
and
fidivr
(bad)
(bad)
inc
sbb
sbb
add
(bad)
(bad)
jmp
xchg
outs
cs
mov
cmp
(bad)
inc
add
add
add
adc
inc
add
add
idiv
(bad)
jmp
arpl
xchg
jecxz
mov
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
pop
cmp
xor
(bad)
(bad)
jmp
add
adc
push
add
add
add
sub
es
sbb
add
sar
and
xchg
xor
in
adc
int
add
push
or
psubusw
and
cmp
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
popa
and
inc
xchg
and
add
adc
sub
push
pop
push
cmp
push
add
sbb
cwde
push
add
adc
and
jo
adc
dec
cli
mov
popa
cmp
add
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
cmp
add
sbb
add
add
(bad)
(bad)
jmp
adc
and
ret
xchg
pop
and
jns
or
pop
add
add
adc
push
pop
pop
pop
bound
pop
or
cmp
add
and
pusha
jnp
sub
and
sbb
and
add
adc
and
and
shl
lds
int3
add
add
or
pop
push
add
and
push
add
add
add
add
add
push
sbb
and
sbb
or
rcl
add
add
or
add
mov
xchg
popa
cmp
or
sub
mov
mov
push
(bad)
fstp
inc
cmp
add
add
jnp
add
add
or
inc
add
push
and
popa
pop
xor
push
add
add
add
add
jnp
add
add
sbb
es
or
push
cmp
add
adc
and
and
cmp
add
add
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
push
add
push
and
inc
add
add
idiv
(bad)
jmp
inc
sub
and
push
and
adc
and
adc
popa
cmp
add
add
mov
call
add
popa
cmp
add
add
cmc
add
add
idiv
(bad)
jmp
and
dec
cmp
jae
inc
and
add
adc
sub
add
adc
and
mov
xchg
lods
popa
cmp
add
or
add
push
cmp
inc
add
add
idiv
(bad)
jmp
adc
and
xor
test
ins
push
jmp
add
jnp
add
add
sub
add
push
and
xor
add
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
sub
xor
add
and
add
sbb
add
add
(bad)
(bad)
jmp
and
sub
aas
cmp
add
add
add
add
add
or
add
add
(bad)
(bad)
call
cmp
add
add
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
push
add
push
and
add
sbb
add
add
(bad)
(bad)
call
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
and
cmps
dec
and
xor
add
add
add
or
daa
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
and
sub
sub
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
and
inc
add
add
idiv
(bad)
jmp
stc
popf
out
and
inc
data16
adc
and
popa
sub
or
and
sbb
adc
es
cmp
add
sbb
add
add
(bad)
(bad)
jmp
and
dec
repz
and
pop
inc
cmp
add
test
(bad)
call
add
add
pop
push
add
cwde
sti
(bad)
push
add
nop
std
(bad)
jmp
(bad)
(bad)
push
push
add
fld
(bad)
(bad)
jg
(bad)
jmp
cld
(bad)
inc
add
or
add
pop
add
add
add
(bad)
add
add
add
mov
sti
(bad)
dec
(bad)
(bad)
jmp
add
add
(bad)
inc
(bad)
(bad)
jmp
push
add
and
add
sub
add
add
popf
(bad)
(bad)
dec
add
dec
std
(bad)
dec
add
add
sti
(bad)
(bad)
add
add
(bad)
inc
cld
(bad)
push
(bad)
call
add
dec
sti
(bad)
push
std
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
(bad)
push
push
add
or
add
add
sub
inc
add
add
add
add
add
add
idiv
(bad)
jmp
and
ficom
sbb
fdivr
(bad)
call
mov
cmpxchg
and
hlt
xchg
leave
(bad)
(bad)
call
add
add
add
add
idiv
(bad)
call
or
add
jnp
add
add
or
cmp
es
add
add
add
add
add
sbb
add
and
mov
ds
sbb
imul
inc
adc
call
inc
add
add
idiv
(bad)
call
and
xor
add
and
add
sbb
add
add
idiv
(bad)
jmp
and
test
and
xor
mov
ficomp
dec
pop
popa
cmp
(bad)
(bad)
call
add
add
add
adc
pop
das
cmp
add
adc
and
leave
adc
and
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
add
push
add
push
and
sub
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
mov
jp
mov
pop
add
sar
call
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
and
sub
and
imul
adc
and
push
rcr
cmp
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
push
add
push
and
and
and
mov
call
or
or
xor
xchg
add
add
mov
adc
sbb
sub
mov
(bad)
inc
jnp
add
add
inc
add
push
sbb
xor
add
and
inc
add
add
idiv
(bad)
jmp
popa
add
add
add
jnp
add
add
sub
add
push
and
add
pop
sbb
inc
cmp
add
adc
sub
add
pop
and
sub
mov
sub
and
sub
adc
and
popa
cmp
cld
(bad)
inc
jnp
add
add
pop
sub
add
cmp
std
(bad)
call
inc
xor
add
nop
cli
(bad)
inc
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
mov
add
add
(bad)
(bad)
inc
add
add
(bad)
call
add
add
cld
(bad)
call
add
add
add
add
(bad)
(bad)
call
(bad)
push
stc
(bad)
call
add
(bad)
clc
(bad)
(bad)
js
(bad)
dec
(bad)
call
std
(bad)
(bad)
jmp
std
(bad)
jmp
add
add
clc
(bad)
call
add
add
sti
(bad)
(bad)
clc
add
add
cli
(bad)
(bad)
mov
add
add
add
mov
add
xchg
clc
(bad)
(bad)
jns
add
jmp
jmp
add
xor
add
mov
add
add
sti
(bad)
dec
add
pop
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
inc
add
push
pop
and
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
adc
and
and
cmp
(bad)
call
or
add
sbb
add
(bad)
(bad)
call
sub
(bad)
(bad)
call
mov
or
loop
in
popa
cmp
or
mov
lea
test
and
cmp
(bad)
inc
jnp
add
add
adc
sub
push
adc
adc
cmp
(bad)
call
add
imul
push
cmp
stc
(bad)
jmp
pop
sub
call
mov
dec
hlt
add
adc
xchg
and
es
(bad)
inc
jnp
add
add
jnp
add
add
or
add
push
and
or
adc
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
pusha
popa
and
adc
dec
and
lea
cmp
cli
(bad)
inc
add
add
add
adc
jnp
add
add
push
sub
add
push
and
mov
cmc
push
jg
and
mov
lods
cli
(bad)
call
add
ins
add
push
and
(bad)
call
add
(bad)
(bad)
call
and
sar
(bad)
inc
jnp
add
add
jnp
add
add
push
outs
push
add
push
and
adc
mov
(bad)
call
mov
mov
sub
lods
popa
cmp
call
or
adc
adc
and
or
push
cdq
scas
push
popa
cmp
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
and
inc
add
add
idiv
(bad)
call
or
push
std
(bad)
call
mov
jle
sub
inc
push
and
cmp
stc
(bad)
call
add
imul
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
or
sub
and
jp
and
(bad)
inc
jnp
add
add
jnp
add
add
add
jnp
add
add
sub
add
push
and
add
and
mov
sbb
fwait
es
cmp
adc
add
inc
add
push
pop
sbb
xor
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
push
pop
pop
cmp
add
push
add
pop
sbb
cmp
inc
add
add
idiv
(bad)
jmp
push
or
mov
cld
xor
pop
and
cmp
stc
(bad)
call
mov
(bad)
or
and
add
(bad)
call
mov
das
sbb
and
lock
mov
(bad)
call
add
add
add
jnp
add
add
or
cmp
add
and
pop
sbb
sub
(bad)
jmp
rcl
and
jae
inc
and
(bad)
call
or
sbb
or
(bad)
jmp
and
pop
cmp
mov
mov
icebp
imul
or
(bad)
call
add
add
sti
(bad)
jmp
mov
xchg
clc
(bad)
call
add
cli
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
adc
and
xor
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
mov
cmp
(bad)
inc
outs
adc
call
inc
add
add
idiv
(bad)
call
adc
jle
(bad)
jmp
jecxz
mov
and
cmp
adc
pop
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
(bad)
adc
pop
sbb
call
mov
jle
ins
pop
and
jae
mov
out
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
and
idiv
call
inc
add
add
idiv
(bad)
call
movhps
hlt
cli
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
and
and
rcr
jmp
adc
or
fiadd
add
or
add
push
sbb
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
pop
pop
adc
add
add
xchg
pop
or
sbb
push
add
add
imul
add
add
sbb
add
add
(bad)
(bad)
call
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
adc
and
movs
add
pushf
push
push
popa
sub
sbb
adc
and
and
sub
push
adc
add
push
and
and
dec
or
push
add
add
sub
add
sub
sbb
fadd
add
and
enter
in
std
xchg
popa
and
pop
inc
or
add
(bad)
(bad)
(bad)
push
add
xor
(bad)
dec
add
add
call
add
mov
(bad)
call
cmp
or
sub
add
add
sub
or
add
push
and
mov
pop
inc
xor
lahf
adc
pop
adc
push
pop
pop
pop
pop
bound
add
or
pop
add
xchg
pop
or
pop
or
push
and
sub
and
pop
mov
(bad)
(bad)
call
push
and
xchg
and
adc
cmp
(bad)
inc
sbb
push
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
sub
push
adc
pop
adc
inc
push
add
add
(bad)
(bad)
push
(bad)
jmp
(bad)
inc
(bad)
jmp
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
add
add
pop
sub
add
add
(bad)
(bad)
jmp
sub
add
xor
add
add
add
add
adc
add
push
pop
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
test
ficom
inc
pop
popa
and
add
add
jae
add
xchg
add
fdivr
(bad)
jmp
add
add
and
or
inc
push
add
add
add
add
add
add
add
add
add
add
sub
sub
sbb
xor
inc
add
add
idiv
(bad)
call
sub
add
and
inc
add
add
idiv
(bad)
jmp
add
pop
dec
add
sub
and
push
and
es
and
jmp
(bad)
(bad)
inc
sub
and
and
mov
pop
(bad)
(bad)
call
sub
add
adc
or
or
add
add
add
sub
es
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
sldt
or
xor
add
add
add
add
push
add
add
dec
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
outs
inc
add
push
sub
xor
add
add
add
add
sub
es
add
outs
and
add
sub
xor
add
add
add
add
push
add
add
pop
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
sldt
add
add
add
add
push
add
add
dec
add
push
and
xor
add
add
add
add
add
add
push
add
sub
add
push
and
adc
or
push
add
add
add
add
add
push
add
outs
arpl
add
and
adc
or
adc
add
add
add
sub
es
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
add
push
add
push
and
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
outs
bound
add
sub
xor
add
add
add
add
push
add
add
popa
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
retf
add
add
add
adc
add
push
sub
es
sbb
push
add
add
adc
sub
sbb
add
add
add
add
add
sbb
add
daa
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
test
add
pop
sub
add
dec
add
push
push
sub
add
jae
add
push
jge
add
add
sub
add
adc
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
lea
add
add
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
push
cmp
(bad)
inc
pop
adc
lea
add
add
add
add
cmp
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
sbb
inc
cmp
add
add
add
add
loopne
add
add
sbb
add
push
add
sub
add
add
add
push
sub
add
loopne
add
add
sbb
add
push
add
xor
or
inc
or
add
and
add
mov
(bad)
push
(bad)
(bad)
call
add
add
add
add
add
fwait
add
add
sub
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
scas
sub
and
and
test
popa
and
add
(bad)
(bad)
inc
(bad)
jmp
add
add
add
add
add
cmp
(bad)
inc
pop
pop
or
cmp
(bad)
jmp
and
and
push
mov
sub
add
or
push
(bad)
(bad)
jmp
loope
scas
sub
sbb
add
add
idiv
(bad)
jmp
retf
cmp
(bad)
(bad)
inc
and
and
es
(bad)
jmp
add
add
xor
add
add
adc
add
push
sbb
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
and
and
cmp
jl
add
add
adc
cmp
add
add
jl
add
add
adc
or
dec
add
push
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
and
retf
and
adc
inc
push
or
cmp
push
push
pop
jle
sub
and
xor
js
sub
add
add
add
loopne
add
add
sub
add
push
pop
push
cmp
inc
add
add
idiv
(bad)
jmp
and
pushf
jle
lea
xor
popa
and
or
add
int3
(bad)
(bad)
dec
add
add
add
add
(bad)
dec
add
add
sub
add
and
add
pop
inc
add
add
idiv
(bad)
jmp
pop
or
xor
in
scas
pop
and
icebp
addr16
popa
sub
add
sbb
add
pop
or
pop
add
add
add
loopne
add
add
sub
add
push
sub
or
inc
or
add
cli
(bad)
(bad)
push
add
sar
(bad)
jmp
(bad)
(bad)
(bad)
add
add
add
add
add
add
(bad)
inc
add
sbb
push
add
add
add
or
(bad)
call
idiv
(bad)
call
sub
dec
cmp
(bad)
(bad)
inc
and
and
mov
sub
cmp
(bad)
(bad)
inc
pop
pop
or
ins
(bad)
(bad)
jmp
sbb
test
adc
or
sahf
add
add
add
adc
add
push
sub
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
mov
add
cmp
add
add
add
add
loopne
add
add
add
sbb
add
and
jns
clc
inc
pop
and
add
popa
cmp
add
add
jl
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
sbb
cmp
xchg
sbb
add
add
popa
cmp
add
add
or
or
and
push
and
adc
push
and
and
mov
add
add
push
pop
or
xor
or
add
add
add
xchg
(bad)
(bad)
(bad)
jp
add
nop
(bad)
(bad)
jmp
add
add
add
add
add
add
(bad)
push
sub
push
add
add
sub
add
and
push
sub
sbb
add
add
(bad)
(bad)
jmp
and
movs
jae
sub
add
add
add
loopne
add
add
add
sbb
add
and
sub
add
sub
add
push
and
(bad)
call
add
(bad)
(bad)
call
sub
add
and
(bad)
call
idiv
(bad)
jmp
and
jmp
and
xchg
pop
popa
and
pop
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
dec
cmp
(bad)
(bad)
jmp
sub
cmp
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
push
add
push
sub
adc
or
popf
add
add
add
adc
add
push
push
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
jecxz
add
add
sbb
(bad)
add
add
bound
add
pop
add
add
add
jnp
add
add
pop
pop
pop
bound
sbb
push
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
in
add
add
inc
add
add
idiv
(bad)
jmp
ds
or
xchg
add
and
jmp
fwait
sub
jnp
add
add
cmp
add
add
inc
add
add
idiv
(bad)
call
or
push
and
add
sbb
add
add
(bad)
(bad)
jmp
and
data16
popa
and
inc
or
add
add
add
add
add
add
(bad)
(bad)
push
add
add
add
cdq
add
add
add
add
add
add
add
add
or
add
add
and
push
and
int3
cmp
push
loopne
or
add
jge
add
add
cmp
add
add
adc
sub
and
cmp
mov
push
popa
cmp
(bad)
call
or
and
add
pop
and
loope
popa
cmp
(bad)
inc
add
add
add
or
cmp
inc
add
add
idiv
(bad)
jmp
or
addr16
lods
loop
and
sbb
(bad)
(bad)
inc
jnp
add
add
loopne
or
add
sub
add
push
sub
pop
pop
or
or
sub
add
add
(bad)
(bad)
jmp
or
inc
fwait
clc
nop
pop
and
frstorw
cld
(bad)
(bad)
inc
jnp
add
add
adc
inc
add
add
idiv
(bad)
jmp
and
and
sub
dec
scas
pop
jge
popa
cmp
(bad)
(bad)
inc
push
inc
sbb
(bad)
call
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
or
add
sbb
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
jmp
std
(bad)
inc
add
add
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
in
std
(bad)
(bad)
cmp
(bad)
jmp
add
add
sub
or
jno
push
hlt
lods
popa
cmp
(bad)
inc
pop
add
pop
pop
bound
pop
jge
add
add
sub
push
and
and
or
jge
mov
pop
popa
cmp
and
and
and
and
(bad)
jmp
add
add
xor
add
add
adc
add
push
pop
cmp
cmc
add
add
or
mov
mov
mov
jp
popa
and
add
add
add
add
fdivr
(bad)
inc
add
add
(bad)
(bad)
call
cmp
add
add
add
add
jnp
add
add
pop
pop
pop
bound
sbb
pop
or
sub
pusha
call
out
lods
xchg
mov
add
add
add
loopne
or
add
sub
add
sub
es
sub
or
movs
lods
and
pop
and
popf
clc
adc
jg
(bad)
inc
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
or
add
jns
(bad)
jmp
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
mov
mov
jmp
add
add
xor
and
add
adc
add
push
add
jnp
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
add
add
xor
and
add
add
add
sub
es
add
add
add
add
sub
add
and
add
add
sub
add
and
xor
and
add
adc
add
push
add
add
add
add
sub
add
and
add
add
push
add
pop
add
push
and
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
adc
add
push
add
add
add
lea
add
add
add
add
add
add
xor
add
add
add
add
adc
add
push
pop
sub
add
and
add
add
outs
sbb
add
add
idiv
(bad)
call
sub
add
sub
pop
or
inc
or
add
push
add
add
add
mov
(bad)
jmp
add
add
add
add
add
add
ret
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
sub
add
add
(bad)
(bad)
jmp
and
sub
and
sahf
pusha
mov
add
add
add
pop
add
add
adc
add
push
sub
cdq
sub
pop
and
and
sub
push
pop
pop
or
call
or
popa
(bad)
(bad)
jmp
push
setno
fsub
or
inc
push
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
push
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
and
ror
adc
or
loop
add
push
add
adc
add
push
push
cmp
or
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
jno
add
push
and
add
add
add
sbb
add
add
(bad)
(bad)
call
pop
and
ss
and
and
sbb
add
add
jno
add
sbb
add
loopne
(bad)
jmp
push
sbb
pop
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
pop
bound
jnp
add
add
loopne
add
add
add
push
add
push
and
xchg
push
or
inc
pop
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
add
add
sub
and
aam
and
scas
ss
and
(bad)
inc
shr
add
adc
or
inc
add
add
add
adc
add
push
pop
or
call
add
push
pop
bound
jnp
add
add
loopne
add
add
add
push
add
push
and
push
cmp
add
inc
add
add
idiv
(bad)
call
sub
add
es
jae
cmp
and
pop
pop
and
cmp
and
add
add
add
add
inc
add
add
idiv
(bad)
call
or
sub
pop
inc
add
add
idiv
(bad)
jmp
and
sub
cdq
inc
jo
sub
pop
bound
pusha
or
ds
or
add
add
or
add
add
add
pop
add
add
(bad)
jmp
add
add
add
add
add
add
add
add
add
xor
(bad)
inc
add
sub
pop
or
add
add
inc
add
add
idiv
(bad)
call
sub
and
and
inc
or
add
gs
(bad)
call
add
add
add
add
add
add
add
dec
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
or
ins
(bad)
(bad)
call
or
pop
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
mov
shl
cmp
jnp
popa
cmp
(bad)
inc
sbb
sbb
(bad)
jmp
aad
sbb
(bad)
inc
and
add
add
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
push
and
sahf
sub
or
test
mov
sbb
(bad)
inc
(bad)
add
and
and
pop
pop
cmp
(bad)
(bad)
inc
jnp
add
add
pop
pop
push
bound
pop
loopne
add
add
add
push
add
push
and
(bad)
(bad)
jmp
sbb
xchg
(bad)
jmp
mov
sub
and
scas
stc
pop
and
(bad)
dec
and
les
add
addr16
cmp
shr
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
sub
es
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
push
push
and
xchg
adc
pop
and
jns
popa
cmp
add
sub
add
push
and
add
scas
add
add
sbb
push
and
inc
add
add
idiv
(bad)
jmp
push
and
stos
cmp
and
das
mov
push
jge
add
add
lods
sbb
pop
inc
or
add
sldt
add
add
mov
add
add
(bad)
(bad)
inc
add
add
add
sbb
sub
add
add
(bad)
(bad)
jmp
add
add
add
cs
sbb
add
add
idiv
(bad)
call
sub
jmp
(bad)
out
inc
lahf
popa
and
push
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jp
(bad)
call
sub
pop
cvtps2pd
xchg
aas
js
popa
sub
add
jge
add
add
cmp
(bad)
jmp
adc
push
jge
add
add
cmp
(bad)
jmp
sub
sub
sub
add
xor
add
add
add
add
adc
add
push
sbb
jge
add
cmp
add
add
push
jge
add
add
movs
add
add
sbb
push
add
sbb
add
(bad)
(bad)
call
sub
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
and
cmps
mov
and
leave
ret
or
pop
inc
add
add
js
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
xchg
or
inc
or
add
add
add
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
dec
add
add
(bad)
(bad)
cmp
add
sbb
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
sub
add
push
push
sub
sbb
add
add
(bad)
(bad)
jmp
add
jge
add
add
sub
idiv
mov
popa
cmp
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
push
cmp
and
cld
aas
pop
and
cmp
jnp
add
add
sbb
imul
and
add
add
add
add
add
sbb
imul
sbb
push
add
pusha
add
push
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
sbb
add
(bad)
(bad)
jmp
sub
add
cmp
(bad)
call
or
inc
pop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
jmp
add
add
sub
and
mov
std
jno
popa
and
add
add
loopne
(bad)
(bad)
cmp
(bad)
jmp
movs
sbb
mov
add
xor
retf
add
add
adc
add
push
sbb
dec
push
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
sub
add
add
(bad)
(bad)
jmp
cmp
pop
and
out
cs
and
retf
in
popa
cmp
add
add
jge
add
add
xor
or
inc
or
add
cmp
add
xchg
(bad)
call
add
add
add
add
add
add
add
add
add
add
int
add
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
add
jnp
add
add
or
sub
add
and
inc
add
add
idiv
(bad)
jmp
call
stc
mov
sbb
add
mov
add
jnp
add
loopne
add
sar
(bad)
dec
add
pop
(bad)
(bad)
dec
(bad)
call
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
mov
sub
lea
or
test
sub
add
add
sub
add
or
cmp
(bad)
call
add
(bad)
(bad)
jmp
pop
and
and
inc
popa
cmp
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
sub
add
push
sub
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
and
(bad)
inc
jnp
add
add
jnp
add
add
jae
(bad)
call
inc
add
add
idiv
(bad)
call
xchg
(bad)
(bad)
jmp
es
(bad)
(bad)
jmp
add
adc
push
add
add
push
add
adc
add
push
push
cmp
icebp
sub
cmp
add
add
add
add
add
push
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
lahf
mov
push
and
xor
add
add
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
cmp
add
es
add
and
pop
sub
popa
jp
xor
inc
add
pop
dec
add
pop
or
loope
add
and
push
and
sub
add
xor
add
add
(bad)
(bad)
call
or
cmp
inc
add
add
idiv
(bad)
jmp
and
dec
adc
or
or
or
add
add
add
add
add
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sbb
add
push
or
sub
add
and
(bad)
call
idiv
(bad)
jmp
push
sub
and
lea
pop
and
mov
popa
sub
add
add
or
sub
add
pop
pop
pop
or
sub
and
jae
in
and
mov
or
imul
popa
(bad)
(bad)
inc
sub
add
sub
or
add
ja
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
inc
add
xchg
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
add
add
sub
push
and
inc
add
add
idiv
(bad)
jmp
or
mov
and
aam
xor
(bad)
inc
add
add
add
mov
inc
add
add
idiv
(bad)
call
xchg
jnp
add
add
jnp
add
add
sbb
inc
add
add
idiv
(bad)
call
or
push
push
sub
and
nop
es
(bad)
(bad)
jmp
adc
or
add
add
push
add
adc
add
push
sub
push
and
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
and
into
add
add
jnp
add
add
jnp
add
add
cmp
add
(bad)
(bad)
jmp
daa
sbb
inc
pop
add
add
add
add
add
push
add
add
add
add
add
add
sub
and
sub
and
pop
das
mov
inc
xor
sub
sub
add
sbb
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
and
add
or
pop
jge
add
add
loopne
pushf
sub
sbb
mov
shr
shl
(bad)
popa
and
add
add
adc
(bad)
(bad)
(bad)
fdivr
(bad)
jmp
cmp
(bad)
inc
and
and
cdq
and
int3
sub
add
xor
add
add
add
add
adc
add
push
sub
add
and
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
and
inc
and
adc
sbb
add
add
xchg
add
add
add
(bad)
(bad)
jmp
cmp
or
inc
pop
add
add
add
xor
add
inc
add
add
add
add
add
dec
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
leave
sub
add
add
add
or
mov
add
pop
pop
pop
or
sub
add
add
and
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
sbb
xchg
pop
and
popa
sbb
fbstp
popa
cmp
(bad)
inc
jnp
add
add
loopne
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
sub
es
add
jge
add
add
adc
or
jno
add
add
add
sub
es
sbb
data16
in
scas
pop
and
or
add
sub
and
ss
pop
and
push
jb
cmp
add
add
jnp
add
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
add
add
add
add
add
add
push
add
add
add
add
add
repnz
add
outs
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
mov
add
or
sub
and
add
pop
jge
add
add
sub
sbb
xchg
add
add
add
inc
data16
(bad)
call
inc
add
add
idiv
(bad)
call
pop
cmp
(bad)
call
add
(bad)
(bad)
jmp
sub
and
and
icebp
lods
popa
sub
add
add
pop
jge
add
add
push
cmp
(bad)
call
add
(bad)
(bad)
jmp
and
add
addr16
jmp
popa
and
pop
add
add
(bad)
(bad)
jmp
(bad)
jmp
jmp
add
add
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
push
jge
add
add
cmp
(bad)
(bad)
jmp
rol
sub
add
adc
or
sub
add
add
add
sub
es
add
jnp
add
add
aaa
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
add
adc
or
sub
add
add
add
sub
es
add
jnp
add
add
aaa
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
jge
add
add
adc
or
sub
add
adc
add
push
add
jnp
add
add
aaa
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
or
add
add
add
add
xor
add
add
add
add
adc
add
push
add
add
add
inc
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
sub
es
add
js
add
sub
adc
or
and
add
add
add
sub
es
sub
push
and
add
and
add
and
add
add
lea
add
and
or
cwde
add
add
add
adc
add
push
sbb
push
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
push
int3
cmp
add
add
add
add
add
add
add
add
add
sub
add
xchg
add
add
add
sbb
add
rol
add
lods
add
add
add
add
enter
cmp
pop
pop
adc
add
add
add
jle
add
add
pop
or
hlt
add
add
add
add
push
pop
or
out
add
adc
pop
xor
add
add
add
add
adc
add
adc
and
and
adc
call
sub
pop
sub
add
push
and
add
add
add
push
and
add
add
add
add
movs
cmp
add
add
add
pop
push
popa
inc
add
add
arpl
(bad)
call
outs
add
add
inc
or
add
sub
adc
(bad)
inc
pop
pop
or
sub
pop
add
add
std
(bad)
(bad)
jmp
jae
add
and
sub
add
and
inc
add
add
idiv
(bad)
jmp
and
add
add
sbb
pop
aas
push
(bad)
call
add
(bad)
(bad)
(bad)
cmp
(bad)
jmp
pop
or
add
or
or
add
add
(bad)
(bad)
call
(bad)
push
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
pop
movntps
add
pop
sbb
jbe
add
and
inc
add
add
idiv
(bad)
jmp
cmp
(bad)
fisub
popa
and
inc
or
add
cmp
add
push
add
add
(bad)
(bad)
call
(bad)
(bad)
push
std
(bad)
dec
(bad)
(bad)
inc
cs
(bad)
call
or
push
outs
dec
pop
pop
and
mov
mov
push
es
sub
add
and
(bad)
call
add
(bad)
(bad)
jmp
and
xchg
adc
pop
inc
xchg
and
jb
add
add
movs
cmp
(bad)
call
or
or
jmp
(bad)
call
xor
add
add
add
add
sub
es
sub
add
and
or
or
add
add
add
push
add
mov
add
and
add
xor
add
add
add
add
add
add
push
add
sub
add
and
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
push
add
adc
add
and
add
xor
add
add
add
add
adc
add
push
sub
es
add
add
sbb
push
add
add
add
add
adc
add
push
sbb
push
jle
add
add
push
sub
sbb
or
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
sbb
fnstsw
add
add
popf
add
push
and
int
cmp
add
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
and
add
and
add
add
add
add
and
add
push
or
or
sbb
add
and
add
push
and
add
and
add
add
adc
push
and
and
inc
push
add
add
add
sbb
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
adc
pop
pop
xchg
and
cmc
add
pop
adc
pop
sub
add
and
inc
add
add
idiv
(bad)
jmp
icebp
(bad)
arpl
dec
sub
and
add
add
add
add
(bad)
jmp
add
add
and
cmp
(bad)
call
or
(bad)
xor
cs
add
(bad)
call
sub
add
and
add
fcomp
adc
and
mov
and
inc
push
add
add
add
sub
add
add
add
pop
add
add
add
sar
(bad)
jmp
imul
inc
push
add
add
add
add
add
pop
add
add
add
imul
mov
pop
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
jne
and
and
dec
addr16
sub
in
cmps
jp
jle
(bad)
call
or
mov
mov
pop
and
repz
imul
call
or
test
add
xchg
and
adc
rol
sub
add
push
and
add
fcomp
adc
and
pop
add
mov
and
inc
push
add
add
add
add
add
pop
add
add
(bad)
(bad)
jmp
add
add
add
add
imul
inc
push
add
add
add
pop
add
add
add
adc
add
dec
add
add
add
out
into
jnp
mov
adc
and
cmps
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
cmc
xor
and
cmp
(bad)
call
or
push
mov
inc
pop
and
popa
inc
jns
cmp
(bad)
call
sub
add
and
add
fmul
sub
add
push
and
add
movd
add
add
setae
add
add
pop
xchg
pop
pop
jle
popf
sub
inc
dec
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
and
add
scas
add
add
add
add
xor
add
add
add
add
adc
add
push
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
adc
add
add
add
sub
es
add
add
test
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
xchg
add
sub
adc
or
add
add
adc
add
push
add
pop
add
push
and
push
pop
imul
and
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
mov
add
sub
adc
or
or
add
add
add
sub
es
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
cwde
add
push
sub
adc
or
retf
add
add
add
adc
add
push
sub
es
sbb
xor
out
ret
cmp
add
add
add
sub
or
add
add
sub
add
push
and
add
add
adc
adc
inc
adc
add
xchg
add
add
add
add
add
jnp
(bad)
push
add
add
add
add
add
add
add
xor
add
add
add
add
add
outs
add
add
add
sbb
add
push
add
add
add
add
add
daa
add
add
adc
cmps
and
loope
sub
and
add
and
xor
add
add
pop
or
and
int3
out
pop
and
mov
leave
popa
sub
adc
lods
pop
and
sub
push
sub
add
and
sbb
add
(bad)
(bad)
jmp
out
ret
and
pop
retf
popa
and
pop
inc
push
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
(bad)
call
add
jl
(bad)
push
add
ins
(bad)
(bad)
inc
(bad)
(bad)
(bad)
out
add
add
add
add
add
add
add
add
ins
add
add
sub
add
and
add
add
nop
pop
and
cmp
(bad)
call
mov
add
es
push
and
(bad)
call
idiv
(bad)
call
sub
add
es
push
pop
and
cmp
(bad)
(bad)
call
or
adc
jnp
(bad)
jmp
shl
(bad)
call
add
xchg
retf
add
(bad)
dec
pop
dec
xchg
or
dec
xchg
pop
or
cmp
(bad)
call
add
and
inc
cmp
popa
cmp
(bad)
(bad)
inc
sub
add
and
push
add
popf
pop
or
sbb
add
and
add
or
pop
(bad)
(bad)
jmp
div
in
cmp
(bad)
(bad)
inc
sub
add
and
push
add
popf
and
test
(bad)
dec
inc
or
add
inc
add
xor
add
jo
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
(bad)
jmp
jbe
push
cmp
(bad)
(bad)
call
add
cmp
add
sbb
cmp
inc
add
add
idiv
(bad)
jmp
and
sbb
call
dec
sub
add
push
and
add
add
nop
add
push
sub
add
sub
es
std
(bad)
call
add
(bad)
(bad)
jmp
pop
adc
fs
(bad)
call
or
or
pop
std
(bad)
jmp
mov
dec
cli
cmp
sub
add
and
cmp
add
(bad)
call
std
(bad)
jmp
mov
jae
cmp
std
(bad)
jmp
adc
mov
and
jl
popa
cmp
std
(bad)
inc
sub
add
push
and
sbb
add
std
(bad)
(bad)
jle
add
add
pop
sub
es
cld
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
(bad)
pop
and
cmp
sub
add
push
and
sub
add
(bad)
call
add
inc
pop
and
cmp
(bad)
inc
sub
add
and
and
add
cld
(bad)
(bad)
jle
add
add
add
cmp
and
js
imul
jmp
add
xor
add
add
add
add
sub
es
and
fiadd
add
adc
add
and
add
add
nop
add
push
sub
xor
add
add
adc
add
push
sbb
call
xor
add
pop
pop
sub
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
mov
adc
add
cmc
popa
and
pop
inc
or
add
out
add
add
add
add
add
mov
add
add
add
aam
add
fild
add
cmc
add
add
add
add
add
add
add
add
push
cmp
add
sbb
add
(bad)
(bad)
jmp
adc
pop
pop
xchg
and
adc
add
pop
pop
or
mov
pop
or
push
and
add
sbb
add
add
idiv
(bad)
jmp
and
sbb
pop
xor
inc
add
add
idiv
(bad)
call
movhps
sgdtd
add
inc
add
add
idiv
(bad)
jmp
sbb
add
add
add
push
pop
pop
xchg
and
add
pop
adc
add
sub
or
add
push
pop
inc
xchg
and
adc
stc
pop
sub
add
push
and
pop
imul
pop
adc
add
add
fild
(bad)
call
or
add
lahf
cmp
(bad)
(bad)
call
or
movs
je
fcomp
and
lds
retf
call
or
mov
cmp
pop
and
jl
popa
cmp
add
add
add
add
(bad)
call
(bad)
call
add
add
(bad)
jmp
add
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
or
xor
mov
jbe
(bad)
call
or
stos
cs
pop
and
cld
mov
cmp
(bad)
inc
popa
pop
push
pop
push
popa
inc
add
add
lock
add
bound
adc
adc
inc
adc
add
mov
add
dec
add
add
std
(bad)
(bad)
jnp
add
stc
std
(bad)
jmp
add
push
add
add
(bad)
inc
(bad)
(bad)
dec
std
(bad)
(bad)
mov
add
add
add
scas
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
inc
add
add
or
sub
add
add
(bad)
(bad)
jmp
and
in
(bad)
call
or
outs
adc
cdq
pop
and
in
sub
sar
(bad)
call
adc
add
and
(bad)
call
idiv
(bad)
jmp
sub
lea
add
es
pop
(bad)
(bad)
jmp
add
jmp
(bad)
call
or
dec
(bad)
(bad)
jmp
pop
push
cmp
jmp
cmp
add
or
(bad)
(bad)
jle
add
add
push
pop
or
sub
(bad)
call
or
aam
push
out
and
xchg
aas
popa
cmp
(bad)
call
cmp
(bad)
(bad)
jle
add
add
pop
or
xchg
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
cmp
add
adc
or
add
add
adc
add
push
sbb
pop
add
add
cmp
add
adc
sub
add
and
add
and
pop
push
cmp
add
add
nop
and
add
pop
adc
pop
adc
push
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
or
push
cmp
add
add
or
pop
adc
sbb
push
pop
adc
xchg
add
push
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
add
adc
adc
rol
add
and
inc
jg
and
dec
sub
and
add
sbb
push
pop
or
mov
add
sbb
push
pop
pop
sub
cmp
add
add
idiv
(bad)
(bad)
cmp
adc
cld
pop
scas
cwde
pop
and
cmp
add
add
add
add
or
es
call
add
add
idiv
(bad)
call
or
pop
add
add
cmp
add
adc
adc
rol
add
sbb
add
add
idiv
(bad)
(bad)
cmp
pop
adc
xchg
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
and
and
adc
popa
cmp
and
jnp
inc
popa
add
sbb
add
nop
and
dec
add
pop
adc
cmp
add
add
sub
adc
pop
punpckldq
or
sbb
add
and
pop
pop
adc
adc
adc
sbb
and
pop
add
pop
adc
pop
sub
cmp
inc
add
add
idiv
(bad)
(bad)
cmp
pop
cmp
sub
add
push
and
or
sbb
pop
popa
or
cmp
sub
add
push
and
pop
xchg
adc
sbb
jb
add
cmp
(bad)
jmp
cmp
or
adc
or
add
push
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
(bad)
cmp
push
inc
adc
add
jbe
(bad)
jmp
add
(bad)
(bad)
mov
add
add
add
(bad)
dec
add
add
(bad)
(bad)
(bad)
cmp
std
(bad)
jmp
add
mov
add
mov
add
add
add
scas
add
add
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
and
(bad)
(bad)
call
adc
adc
and
ret
fldenv
cmp
(bad)
call
nop
xchg
and
add
pop
adc
and
and
(bad)
call
adc
dec
push
mov
jle
scas
popa
cmp
(bad)
(bad)
call
push
pop
movaps
es
add
add
(bad)
(bad)
jmp
and
jmp
(bad)
(bad)
jle
add
add
pop
or
(bad)
(bad)
call
push
pop
and
inc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
sub
adc
push
sub
cmp
(bad)
(bad)
jmp
xchg
add
push
and
or
and
add
and
adc
call
adc
adc
inc
sbb
add
(bad)
cld
(bad)
jmp
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
jnp
(bad)
push
cld
(bad)
jmp
(bad)
dec
(bad)
(bad)
(bad)
mov
add
add
add
add
std
(bad)
inc
(bad)
inc
add
(bad)
std
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
inc
add
inc
std
(bad)
inc
add
add
add
pop
adc
xchg
adc
cmp
(bad)
call
or
sub
add
push
and
add
and
add
add
or
es
or
adc
add
and
adc
pop
sbb
dec
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
add
or
add
and
or
sbb
add
and
pop
pop
adc
pop
xchg
popa
adc
sub
add
push
and
or
pop
adc
or
popa
shr
xchg
add
push
and
add
(bad)
call
push
pop
pop
pop
adc
and
inc
add
arpl
pop
sbb
add
push
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
or
(bad)
(bad)
(bad)
call
movlps
cmp
or
pop
adc
or
cmp
inc
add
add
idiv
(bad)
jmp
adc
and
xor
and
xchg
sbb
sub
(bad)
call
mov
add
es
push
cmp
xchg
rol
cmp
std
(bad)
call
adc
outs
xchg
and
mov
(bad)
std
(bad)
dec
sub
add
and
sbb
add
and
add
sbb
add
and
adc
adc
sbb
inc
(bad)
(bad)
(bad)
jle
add
add
bndldx
xor
(bad)
(bad)
cmp
std
(bad)
dec
sub
add
and
adc
or
mov
add
adc
add
push
jle
add
add
add
add
push
cmp
add
add
popa
cmp
and
push
popa
and
pop
inc
or
add
mov
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
adc
add
add
leave
add
add
pop
and
push
cmp
into
jo
popa
sub
push
es
or
add
popa
cmp
sub
add
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
add
add
add
rcl
(bad)
(bad)
call
pop
and
add
(bad)
pop
and
mov
dec
(bad)
(bad)
inc
add
pop
dec
pop
push
popa
inc
add
add
inc
add
add
sub
push
(bad)
call
or
outs
mov
(bad)
(bad)
call
add
aas
clc
pop
scas
cmp
(bad)
(bad)
call
add
fild
add
add
pop
and
fcmovnb
push
pop
and
aad
into
popa
cmp
(bad)
(bad)
call
sub
jle
add
add
sbb
add
inc
(bad)
(bad)
inc
mov
add
sbb
xchg
add
push
and
pop
xor
add
pop
adc
daa
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
adc
(bad)
dec
sbb
and
add
idiv
(bad)
call
sub
add
adc
pop
and
add
add
jmp
push
sbb
add
in
pop
sub
add
push
and
and
and
add
pop
adc
mov
xor
add
add
add
add
sub
es
add
sub
adc
or
or
add
adc
add
push
add
call
add
add
xor
add
add
add
add
adc
add
push
jae
add
or
add
adc
or
push
add
add
add
adc
add
push
add
outs
push
add
or
adc
or
or
add
adc
add
push
add
add
or
add
xor
add
add
adc
add
push
add
fwait
add
push
and
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
push
add
add
add
add
add
push
add
sub
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
movs
add
push
sub
adc
push
add
add
adc
add
push
and
add
and
add
sub
add
and
add
add
add
add
push
and
mov
es
add
add
stos
add
add
add
add
and
add
and
add
add
jle
add
sub
add
and
add
and
add
and
mov
sub
cmp
add
mov
add
jle
add
add
mov
add
xchg
jle
add
add
or
pop
popf
sub
add
xor
add
add
adc
add
push
add
add
sbb
add
sub
add
adc
or
or
add
add
add
sub
es
add
outs
sbb
add
sub
xor
add
add
add
add
adc
add
push
add
sub
sub
add
xor
add
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
push
add
mov
add
and
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
outs
sbb
add
and
adc
or
or
add
add
add
sub
es
add
outs
sbb
adc
or
sldt
add
add
adc
add
push
sub
es
add
mov
add
sub
sbb
push
add
add
add
add
adc
add
push
push
sub
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
sbb
cmp
adc
sbb
add
or
add
lods
add
add
(bad)
(bad)
inc
add
add
add
add
sub
cmp
add
add
sub
add
and
add
and
add
sub
pop
or
or
or
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
sub
cmp
add
add
idiv
(bad)
jmp
push
pop
sub
add
add
(bad)
(bad)
jmp
and
(bad)
(bad)
dec
inc
push
add
add
add
add
(bad)
jmp
add
add
(bad)
call
add
and
add
sbb
lods
xor
push
rol
test
pop
hlt
popa
cmp
sub
add
push
and
sub
imul
and
add
add
push
add
sub
inc
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
inc
and
fild
add
sub
add
sub
(bad)
(bad)
jmp
sbb
sbb
(bad)
jmp
fld
(bad)
(bad)
(bad)
fstp
adc
pop
and
and
inc
add
add
add
add
add
(bad)
(bad)
call
add
sub
add
sub
inc
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
and
mov
sub
add
and
inc
add
add
idiv
(bad)
jmp
jnp
hlt
jo
sub
and
movs
dec
aas
and
adc
pop
cmp
(bad)
call
icebp
push
sub
add
and
add
fcomp
adc
sub
sbb
add
sub
or
sub
and
movs
jb
and
and
inc
add
add
(bad)
(bad)
jmp
add
add
sub
adc
adc
inc
pop
add
add
std
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
sub
sub
adc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
push
cmp
dec
sti
popa
sub
add
and
add
push
add
add
add
add
push
add
add
add
jne
pusha
pop
sbb
add
add
add
add
sub
add
push
add
add
add
fwait
add
add
add
add
xor
add
add
add
add
adc
add
push
jle
add
add
push
and
adc
and
jne
popa
and
pop
inc
or
add
add
add
add
add
add
add
add
add
mov
(bad)
call
add
add
add
add
add
add
add
add
jle
add
add
pop
adc
and
hlt
shl
pop
and
sub
or
add
ss
pop
and
xor
ss
sub
out
pop
and
cmp
(bad)
call
or
add
and
and
popa
cmp
(bad)
call
or
(bad)
ds
movs
pop
and
cmp
(bad)
call
adc
fdivr
inc
(bad)
(bad)
call
push
pop
push
xchg
and
add
pop
adc
pop
mov
int
popa
cmp
(bad)
(bad)
inc
popa
pop
jnp
push
popa
inc
add
add
arpl
add
and
push
dec
repnz
(bad)
(bad)
call
or
ins
dec
sbb
call
stos
add
push
and
out
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
aas
das
adc
cmp
cmp
(bad)
(bad)
jle
add
add
sbb
add
add
add
sub
or
pop
pop
pop
xchg
and
add
pop
adc
jle
add
add
pop
jle
add
add
pop
xchg
add
pop
dec
pop
popf
pop
or
movs
add
add
or
add
sbb
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
adc
call
pop
and
add
xchg
and
add
pop
sub
pop
sub
add
push
and
and
and
pop
add
pop
adc
inc
add
xor
add
add
adc
add
push
add
add
push
add
or
add
add
xor
add
add
add
add
adc
add
push
add
mov
add
sub
adc
or
or
add
adc
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
sub
es
sub
es
sbb
rol
push
and
inc
add
add
idiv
(bad)
call
sub
add
sub
jae
add
push
jge
add
add
sub
es
sbb
add
add
idiv
(bad)
jmp
sbb
mov
es
add
add
(bad)
(bad)
jmp
add
and
add
sub
sbb
pop
inc
push
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
add
add
add
push
sub
add
mov
add
sbb
aam
adc
or
push
add
add
add
adc
add
push
sbb
add
adc
or
sub
add
add
add
sub
es
sub
add
push
and
add
and
add
sub
add
sub
add
push
and
add
sub
add
xor
add
add
add
add
adc
add
push
sbb
into
add
add
pop
sub
add
pop
or
and
add
or
dec
xchg
and
add
pop
sub
add
add
add
sub
add
mov
or
fwait
add
add
push
mov
sub
mov
add
and
cmp
and
lods
cld
popa
and
pop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
enter
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
or
shr
mov
pop
and
push
pushf
popa
sub
retf
jmp
xchg
add
test
inc
add
add
idiv
(bad)
(bad)
cmp
adc
add
or
add
and
add
popf
(bad)
(bad)
jmp
add
add
add
add
add
(bad)
push
(bad)
(bad)
push
(bad)
call
add
add
sub
es
add
add
(bad)
(bad)
jmp
add
sub
add
push
pop
or
scas
sub
and
mov
mov
adc
(bad)
inc
inc
pop
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
jmp
add
add
cmp
(bad)
jmp
xchg
dec
pop
loop
sub
and
out
mov
fdivr
(bad)
call
cmp
(bad)
(bad)
inc
jnp
add
add
sub
add
xor
add
mov
xor
add
mov
jle
add
add
add
add
popf
cmp
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
sbb
(bad)
jle
add
add
sbb
add
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
add
mov
or
add
add
sub
add
push
and
add
adc
or
xchg
add
sbb
add
sub
es
jle
add
add
and
movs
scas
and
and
pop
inc
or
add
test
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
mov
or
jno
retf
mov
and
and
add
adc
and
jge
sub
in
adc
push
and
and
mov
into
popa
sub
mov
data16
js
cmp
(bad)
dec
inc
or
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
mov
inc
(bad)
(bad)
call
or
outs
or
(bad)
(bad)
call
adc
and
and
movs
jb
popa
cmp
(bad)
(bad)
inc
push
popa
inc
add
add
or
add
and
nop
imul
call
cmp
(bad)
call
or
jg
(bad)
inc
mov
add
sbb
sub
pop
or
sbb
and
inc
add
add
idiv
(bad)
call
sub
add
or
inc
xchg
and
inc
add
pop
or
inc
(bad)
(bad)
call
or
not
or
cmp
(bad)
jmp
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
sub
data16
(bad)
inc
adc
or
mov
add
sbb
add
sub
es
jle
add
add
add
jg
jb
and
scas
or
adc
pop
or
or
add
aam
add
and
add
jge
add
dec
add
add
add
aaa
add
add
add
add
add
add
iret
add
add
or
arpl
mov
or
pop
adc
and
sub
add
add
mov
pop
and
push
or
sub
popf
sub
enter
popa
cmp
(bad)
dec
add
pop
pop
push
popa
inc
add
add
ja
add
and
fstp
cmp
call
or
stos
sbb
jns
popa
cmp
(bad)
call
or
dec
and
jmp
push
mov
xor
(bad)
call
or
(bad)
mov
cmp
(bad)
(bad)
dec
inc
or
add
sub
add
sub
add
(bad)
(bad)
(bad)
dec
add
sbb
add
cmp
add
outs
add
add
add
add
(bad)
(bad)
jmp
mov
retf
outs
cmp
(bad)
(bad)
call
add
inc
xchg
adc
inc
xchg
pop
cmp
(bad)
(bad)
call
add
add
add
sub
add
add
push
push
pop
pop
or
add
pop
or
add
pop
or
or
pop
sub
add
add
(bad)
(bad)
call
sub
add
es
cmp
(bad)
call
or
imul
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
sub
out
(bad)
call
xor
mov
add
adc
add
push
jle
add
add
push
jle
add
add
pop
cmp
add
add
jmp
outs
xor
dec
cmp
or
or
or
add
sub
add
add
(bad)
(bad)
push
add
add
add
add
add
add
add
add
add
mov
adc
test
pop
and
movs
and
adc
pop
xor
xor
and
xor
xor
lahf
sar
and
mov
sub
pop
pop
push
popa
inc
add
add
ja
add
and
into
pop
cmp
(bad)
call
add
add
add
add
add
add
add
add
add
scas
(bad)
(bad)
dec
add
add
add
mov
(bad)
(bad)
jmp
sub
dec
cmp
(bad)
(bad)
call
push
pop
or
add
add
mov
ficomp
jmp
leave
or
push
(bad)
(bad)
call
or
or
(bad)
(bad)
call
or
pop
(bad)
(bad)
(bad)
jle
add
add
adc
and
add
xchg
and
inc
add
add
inc
mov
add
sbb
mov
or
push
and
add
add
add
add
inc
pop
pop
or
add
mov
add
or
xor
add
or
sbb
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sbb
add
call
or
cmc
sbb
add
inc
sub
add
push
and
and
and
adc
call
xor
add
add
add
add
adc
add
push
add
ret
add
push
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
push
add
add
add
adc
add
push
add
add
sub
add
push
sub
add
xor
add
add
adc
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
jno
add
and
add
xor
add
add
add
add
sub
es
add
sub
add
or
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
sub
xor
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
adc
add
push
sub
es
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
inc
cmp
sub
add
push
sbb
(bad)
add
push
and
inc
add
add
idiv
(bad)
jmp
and
and
into
std
jae
popa
and
add
add
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
and
or
inc
pop
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
xchg
sbb
fld
sub
add
push
sbb
rol
jae
add
push
jge
add
add
sub
push
and
sbb
and
mov
sub
xor
add
add
sub
es
push
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
and
add
pop
inc
pop
add
add
add
jle
add
test
add
xor
add
and
add
add
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
pushf
add
add
or
mov
jnp
add
add
sub
add
int
add
push
pop
cmp
add
sbb
add
add
(bad)
(bad)
jmp
sbb
pop
cmp
add
and
jb
and
xchg
and
push
add
add
add
adc
add
add
(bad)
(bad)
call
(bad)
(bad)
call
sub
or
xor
push
lds
sub
or
mov
and
xor
mov
or
cmp
pop
add
lods
add
sbb
add
(bad)
(bad)
jmp
xor
or
add
pusha
(bad)
(bad)
jmp
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
add
sbb
int
cmp
pusha
and
and
push
(bad)
(bad)
call
sub
add
sub
add
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
xor
add
add
push
sbb
je
add
cmp
add
hlt
cdq
(bad)
adc
test
popa
cmp
sub
add
push
and
add
add
sub
add
push
and
add
cmp
add
add
add
add
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
and
dec
push
mov
mov
and
or
or
out
add
add
dec
pop
add
sub
inc
add
add
add
add
add
(bad)
(bad)
push
(bad)
jmp
add
sahf
add
add
sbb
ret
add
fcomp
std
sub
sbb
or
cmp
inc
add
add
idiv
(bad)
jmp
and
aas
scas
xchg
inc
mov
popa
and
pop
inc
or
add
dec
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
inc
add
or
add
std
(bad)
(bad)
push
sub
loope
js
sub
add
and
add
add
int3
add
add
or
add
pop
or
dec
jle
add
add
push
jle
add
add
push
xchg
jle
add
add
cmp
add
pop
popf
sbb
xor
sub
add
add
add
add
and
out
sub
es
add
push
sub
add
add
(bad)
jmp
(bad)
(bad)
(bad)
jle
(bad)
(bad)
std
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
fdivr
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sub
adc
fwait
cmc
mov
mov
(bad)
(bad)
jmp
add
adc
(bad)
icebp
add
add
add
sub
es
jle
add
add
add
add
push
and
push
dec
pop
and
in
arpl
popa
and
pop
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
adc
and
and
mov
scas
adc
cmp
add
add
add
jecxz
add
mov
add
add
add
add
add
add
add
xor
add
and
ins
(bad)
(bad)
call
or
add
pop
and
and
movs
test
cmp
(bad)
call
pop
and
and
mov
and
inc
(bad)
(bad)
call
or
outs
shl
and
aaa
(bad)
(bad)
inc
ds
push
popa
inc
add
add
dec
add
add
test
(bad)
(bad)
call
leave
add
push
and
mov
cmp
(bad)
(bad)
call
or
add
pop
and
(bad)
(bad)
pop
and
rcl
popa
cmp
(bad)
(bad)
call
add
add
add
add
jle
sub
(bad)
call
push
pop
sbb
add
out
cmps
add
add
sbb
add
adc
(bad)
inc
mov
add
sbb
mov
add
sbb
rol
add
and
pop
outs
xchg
and
mov
add
jmp
or
stos
add
add
and
add
add
mov
add
jle
add
add
mov
add
xchg
jle
add
add
je
pop
pop
outs
pop
popf
pop
sbb
and
add
idiv
(bad)
call
sub
add
adc
lea
add
add
nop
(bad)
(bad)
call
or
cmc
pop
or
add
cmp
inc
sub
or
add
js
(bad)
inc
add
adc
or
xchg
add
add
add
adc
add
push
jle
add
add
add
pop
and
jnp
dec
popa
and
pop
inc
or
add
scas
add
add
add
xchg
add
add
add
add
(bad)
(bad)
jmp
add
add
mov
add
adc
add
add
add
or
addr16
inc
call
test
popa
sub
test
scas
pop
and
fldcw
popa
sub
add
add
add
add
add
add
pop
add
add
add
jb
add
xor
add
jl
add
ret
add
add
in
pop
sbb
(bad)
(bad)
(bad)
jle
add
add
push
push
adc
or
mov
jmp
inc
popa
cmp
call
adc
int3
adc
pop
cmp
(bad)
(bad)
inc
push
popa
inc
add
add
push
add
add
outs
mov
and
sbb
(bad)
call
or
leave
out
add
adc
(bad)
call
sub
sbb
add
outs
(bad)
(bad)
inc
mov
add
sbb
sub
add
push
push
pop
pop
or
call
and
add
add
mov
sbb
pop
xor
add
idiv
(bad)
call
sub
add
adc
pop
jns
and
pop
add
pop
adc
and
(bad)
call
add
add
add
jmp
adc
inc
add
add
add
add
add
add
add
add
add
add
add
retf
push
sub
inc
(bad)
(bad)
inc
adc
or
fadd
add
pop
add
adc
add
push
jle
add
add
push
and
std
lods
pushf
and
and
pop
inc
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
pop
adc
and
mov
test
fldcw
add
add
add
add
add
je
add
xor
add
xor
add
sbb
add
add
add
add
add
aad
add
dec
add
add
icebp
out
(bad)
cmp
(bad)
call
or
test
pop
and
cmp
(bad)
inc
pop
push
popa
inc
add
add
pop
add
add
jecxz
mov
(bad)
call
adc
jbe
ficomp
outs
pop
leave
pop
popa
cmp
(bad)
(bad)
call
retf
add
push
and
out
mov
call
add
jmp
retf
pop
and
push
jns
cmp
(bad)
(bad)
call
or
pop
mov
(bad)
(bad)
call
adc
mov
jecxz
(bad)
call
push
pop
je
and
in
add
out
cmps
add
add
adc
and
and
adc
inc
mov
add
sbb
sub
add
push
and
sbb
and
adc
inc
pop
pop
or
xchg
add
add
add
fisttp
add
or
sbb
xor
add
idiv
(bad)
call
sub
add
adc
pop
inc
xchg
and
inc
add
pop
adc
call
sub
adc
pop
pop
xchg
and
add
pop
adc
inc
sub
add
push
and
add
call
xor
add
add
add
add
adc
add
push
jle
add
add
add
add
push
and
xchg
and
and
adc
pop
or
or
add
push
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
fild
add
push
adc
or
repnz
(bad)
jno
and
sub
add
add
add
add
add
add
add
add
add
add
add
and
add
(bad)
(bad)
call
or
fstp
movs
pop
and
ins
adc
popa
cmp
(bad)
inc
popa
pop
push
jle
add
add
jl
cmp
add
jl
jle
add
add
mov
add
xchg
pop
and
add
add
pop
push
popa
inc
add
add
dec
add
add
fist
(bad)
(bad)
call
add
mov
adc
xchg
dec
mov
cmp
(bad)
(bad)
call
or
rol
arpl
popa
cmp
(bad)
(bad)
call
or
add
sub
add
add
xchg
sbb
cmp
(bad)
(bad)
call
add
push
xor
add
mov
pop
(bad)
(bad)
inc
mov
add
sbb
rol
add
push
pop
pop
or
popf
add
add
scas
add
add
and
add
pop
or
pop
pop
xor
add
idiv
(bad)
call
sub
add
adc
pop
imul
pop
adc
sar
(bad)
call
or
cmc
sbb
add
(bad)
(bad)
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
int3
add
push
sub
call
xor
add
add
add
add
adc
add
push
add
xlat
add
push
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
adc
add
push
add
add
fld
add
and
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
adc
add
push
add
sub
add
push
and
adc
or
or
add
add
add
sub
es
add
fadd
add
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
sub
es
add
outs
daa
add
or
adc
or
sldt
add
add
add
add
push
add
add
sub
add
and
xor
add
add
add
add
sub
es
add
outs
sub
add
sub
xor
add
add
add
add
add
add
push
add
outs
sbb
add
and
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
adc
add
push
sub
es
pop
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
loope
add
and
add
sbb
add
add
(bad)
(bad)
jmp
and
sti
add
add
add
add
inc
sub
add
jae
add
or
or
add
and
add
and
add
sbb
push
sub
add
push
and
add
sbb
add
(bad)
(bad)
jmp
and
pop
lds
add
inc
add
add
add
add
add
(bad)
(bad)
(bad)
jl
add
pop
or
loopne
add
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
or
cmp
add
add
sub
add
push
and
push
and
add
add
add
add
sub
inc
sub
mov
and
add
add
sub
inc
sub
mov
and
add
add
add
add
and
fild
add
and
adc
and
add
add
add
add
sbb
out
sub
add
push
and
adc
and
add
add
add
add
adc
out
sub
add
push
and
adc
and
add
add
adc
out
sub
mov
and
add
add
push
jnp
inc
sub
add
push
and
adc
and
add
add
add
and
out
sub
mov
add
sub
and
push
cmp
sbb
or
add
add
add
and
out
sub
add
push
and
add
cmc
(bad)
(bad)
call
or
add
mov
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
inc
add
add
idiv
(bad)
jmp
sub
and
pusha
sbb
dec
jne
in
popa
sub
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
and
dec
jbe
and
(bad)
dec
fldenv
or
pop
inc
pop
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
(bad)
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
mov
add
adc
or
or
add
add
add
sub
es
sub
add
xor
adc
add
add
add
sub
es
add
add
push
and
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
adc
add
push
sub
es
add
out
add
add
in
add
sub
add
adc
or
mov
add
sbb
add
sub
es
sbb
cmp
pop
and
fs
jo
cmp
inc
pop
add
add
add
add
add
add
mov
add
pop
add
add
add
add
sbb
add
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
pop
or
lds
or
add
or
pop
xchg
and
or
repz
ins
aaa
cmp
and
push
pop
and
cmp
or
sub
or
sub
add
push
pop
or
cmp
call
inc
add
add
idiv
(bad)
call
sub
add
es
je
and
in
add
cmp
(bad)
(bad)
call
sub
add
add
add
in
add
push
cmp
dec
and
adc
pop
pop
and
rcr
popa
sub
add
cli
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
call
es
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
add
(bad)
jmp
add
ss
or
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
call
pop
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
and
mov
and
mov
repz
(bad)
inc
jnp
add
add
inc
(bad)
(bad)
call
add
(bad)
(bad)
call
jmp
add
xor
and
add
add
add
sub
es
add
out
add
and
add
pop
and
add
add
fild
add
sub
add
sub
add
xor
add
add
add
add
adc
add
push
add
jmp
add
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
xor
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
or
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
lock
push
sub
or
or
sldt
add
add
add
add
push
sub
add
push
fiadd
fiadd
sub
add
add
add
add
pop
or
add
add
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
adc
add
sub
adc
or
adc
add
add
add
sub
es
sub
es
jae
add
or
sub
sbb
or
fld
add
pop
add
adc
add
push
sub
add
sub
add
push
and
add
and
add
and
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
pop
sbb
inc
pop
add
add
add
fdivr
(bad)
call
add
dec
add
add
(bad)
(bad)
inc
add
add
add
push
sub
push
jb
add
jo
stc
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
stos
fiadd
jb
add
jo
stc
add
push
and
inc
add
add
idiv
(bad)
jmp
add
sbb
mov
or
cli
add
push
and
(bad)
call
idiv
(bad)
jmp
fiadd
fiadd
fiadd
push
sub
sub
add
add
add
add
add
into
rol
add
xor
add
add
add
add
add
add
push
sub
add
push
adc
push
test
push
jae
add
or
std
add
push
fiadd
fiadd
sub
adc
add
add
sbb
add
xor
add
add
adc
add
push
pop
adc
adc
add
adc
sub
add
push
and
out
add
sbb
add
(bad)
(bad)
call
sub
add
adc
pop
sub
add
and
cmp
add
add
or
jp
add
add
and
push
inc
adc
add
jb
add
jo
sub
add
push
and
adc
pop
sub
adc
outs
aaa
add
or
add
or
add
adc
add
add
add
add
and
add
sbb
add
add
(bad)
(bad)
call
adc
ja
add
adc
add
inc
add
and
add
pop
or
add
loop
add
adc
sbb
or
adc
cmp
add
pop
inc
add
add
idiv
(bad)
jmp
adc
adc
pop
pop
sub
adc
sbb
sub
inc
add
and
add
push
and
add
and
cli
add
push
and
add
sbb
add
(bad)
(bad)
jmp
pop
adc
test
pop
je
add
add
and
push
inc
adc
pop
adc
fld
add
sub
adc
call
and
add
sbb
add
add
(bad)
(bad)
call
or
mov
add
or
pop
sub
add
push
and
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
jmp
adc
or
push
add
push
and
aas
cmp
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
push
sub
pop
or
push
add
push
and
xor
add
idiv
(bad)
call
push
or
pop
pop
pop
call
adc
jnp
add
add
add
add
and
add
sbb
add
add
(bad)
(bad)
jmp
inc
add
and
cmp
add
add
and
add
and
add
add
adc
push
adc
inc
sbb
add
and
add
jg
add
cs
(bad)
(bad)
fdivr
(bad)
(bad)
mov
(bad)
(bad)
inc
(bad)
(bad)
dec
add
dec
(bad)
(bad)
jmp
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
std
(bad)
call
(bad)
dec
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
call
add
add
add
add
sub
call
pop
sbb
pop
sbb
mov
adc
adc
pop
push
cmp
(bad)
call
add
add
add
and
add
add
inc
add
add
idiv
(bad)
call
movhps
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
adc
cmp
or
add
and
(bad)
call
inc
add
add
idiv
(bad)
dec
adc
pop
pop
call
(bad)
(bad)
(bad)
jle
add
add
adc
pop
add
push
pop
pop
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
push
sub
or
or
in
(bad)
(bad)
jle
add
add
add
cmp
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
add
cmp
add
and
out
add
add
or
add
and
or
add
and
or
retf
add
idiv
(bad)
call
or
or
add
and
adc
adc
add
and
or
or
or
add
and
sub
sbb
add
add
(bad)
(bad)
call
or
push
and
stos
add
add
push
adc
sub
add
add
(bad)
(bad)
call
or
push
and
or
pop
adc
fiadd
es
adc
fiadd
adc
cmp
add
add
inc
add
add
idiv
(bad)
push
add
jo
cmp
add
and
cmp
add
and
or
lahf
add
add
adc
add
or
cli
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
je
add
adc
adc
sbb
imul
pop
sub
movaps
add
or
push
adc
adc
sub
add
push
and
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
jnp
add
add
push
add
jo
push
add
push
and
sub
adc
sub
add
or
xchg
pop
or
adc
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
(bad)
push
(bad)
push
add
add
sub
adc
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
repz
push
and
(bad)
(bad)
jmp
sbb
lahf
adc
sub
add
push
and
add
fiadd
jle
add
add
add
push
outs
inc
add
or
push
adc
fimul
or
adc
adc
add
fcom
adc
sub
inc
add
add
add
loopne
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
add
lar
push
and
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
inc
add
or
add
xor
add
add
add
add
sub
es
add
outs
inc
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
outs
inc
add
or
adc
or
push
add
add
add
add
add
push
add
sub
add
and
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
push
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
sldt
add
add
add
add
push
add
add
dec
add
or
xor
add
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
push
add
dec
add
or
add
xor
add
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
adc
add
add
add
sub
es
add
add
outs
or
sub
xor
add
add
add
add
add
add
push
add
sub
add
push
and
adc
or
push
add
add
add
add
add
push
add
sub
add
and
adc
or
adc
add
add
add
sub
es
add
add
or
add
and
or
push
add
add
add
add
add
push
add
sub
add
and
adc
or
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
add
sub
add
and
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
repnz
add
add
adc
add
push
sub
es
pop
adc
sbb
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
sub
add
push
and
pop
sub
or
sbb
add
and
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
add
or
add
add
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
cmp
adc
or
adc
loope
add
add
add
add
add
add
sub
add
push
and
add
sbb
add
(bad)
(bad)
jmp
add
add
or
add
add
push
cmp
add
add
jb
add
jo
push
add
or
add
sbb
add
add
(bad)
(bad)
call
adc
test
add
push
sub
or
jb
add
jo
push
add
push
and
add
sbb
add
add
idiv
(bad)
call
or
pop
add
add
jle
add
or
add
add
cmp
add
add
push
sub
add
push
and
add
jnp
add
add
dec
add
jo
lar
push
and
inc
add
add
idiv
(bad)
inc
jle
add
or
add
add
or
sbb
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
pop
adc
cmp
add
add
pop
pop
movq
or
add
cmp
add
add
add
sub
add
push
and
(bad)
(bad)
call
add
(bad)
(bad)
call
adc
cmp
inc
add
add
idiv
(bad)
jmp
add
add
or
add
add
cmp
sahf
add
jge
add
add
xchg
es
or
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
add
jo
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
call
pop
sub
add
add
(bad)
(bad)
jmp
add
push
sub
add
push
and
add
jge
add
add
xor
jb
add
jo
push
add
push
and
(bad)
call
add
(bad)
(bad)
(bad)
cmp
adc
add
add
add
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
call
add
add
(bad)
(bad)
(bad)
in
std
(bad)
(bad)
mov
std
(bad)
jmp
jmp
(bad)
(bad)
mov
std
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
dec
std
(bad)
jmp
(bad)
(bad)
(bad)
cmp
add
pop
or
sbb
add
and
inc
add
add
idiv
(bad)
jmp
xchg
push
adc
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
or
jb
(bad)
jmp
add
adc
or
mov
add
and
add
sub
es
sbb
pop
push
add
add
add
pop
add
push
and
add
add
or
inc
or
add
lea
add
aad
add
lea
add
and
add
ins
add
add
add
add
add
add
add
or
add
add
add
add
add
or
mov
add
push
add
or
sbb
add
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
sub
add
sbb
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
jo
push
add
or
cmp
(bad)
inc
jb
add
jo
sbb
add
and
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
ja
add
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
cmps
add
add
push
add
push
and
inc
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
inc
jb
add
jo
push
add
or
idiv
(bad)
inc
add
add
add
dec
add
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
jo
sbb
add
and
sar
inc
jb
add
jo
push
add
or
es
cmp
adc
pop
or
popf
(bad)
(bad)
inc
outs
pop
add
or
adc
or
sldt
add
add
add
add
push
add
add
and
add
and
xor
add
add
add
add
add
add
push
add
outs
push
add
or
adc
or
push
add
add
add
add
add
push
add
outs
push
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
outs
aaa
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
outs
push
add
or
adc
or
push
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
sldt
add
add
add
add
push
add
add
lar
push
and
xor
add
add
add
add
add
add
push
sub
es
add
and
add
sub
adc
or
or
add
add
add
sub
es
add
pop
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
and
add
sub
adc
or
or
add
add
add
sub
es
add
pop
add
or
add
xor
add
add
add
add
adc
add
push
sbb
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
jle
add
add
add
jle
add
add
add
lock
add
idiv
(bad)
(bad)
cmp
add
add
pop
or
pop
push
or
imul
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
pop
add
or
add
and
das
add
push
and
inc
add
add
idiv
(bad)
jmp
push
pop
sub
add
add
(bad)
(bad)
jmp
sub
pop
or
push
sbb
add
add
(bad)
(bad)
call
cmp
(bad)
dec
pop
sub
imul
add
add
(bad)
(bad)
call
or
das
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
or
add
and
cmp
(bad)
call
sub
pop
pop
or
cmp
sub
sub
sbb
add
add
(bad)
(bad)
call
cmp
(bad)
(bad)
call
sub
add
xor
add
add
and
add
sub
es
jae
add
or
add
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
sub
add
push
and
add
sub
add
push
and
push
sub
sbb
add
add
(bad)
(bad)
inc
outs
adc
add
fadd
sub
add
add
add
or
das
cmp
adc
add
add
xor
add
add
and
add
push
jae
add
or
add
pop
sbb
add
add
idiv
(bad)
call
sub
add
es
add
sub
add
push
and
add
sub
add
push
and
push
sub
sbb
add
add
idiv
(bad)
inc
sub
add
push
fadd
sub
add
add
add
or
das
cmp
adc
add
add
xor
add
add
adc
add
push
pop
pop
cmp
dec
add
or
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
push
and
add
sbb
add
add
(bad)
(bad)
jmp
push
sub
add
push
and
cmp
add
push
adc
pop
sub
add
and
sbb
sbb
sub
imul
add
and
sbb
add
push
and
adc
sub
sbb
add
(bad)
(bad)
call
sbb
xor
add
fcom
nop
add
add
inc
add
add
idiv
(bad)
call
adc
adc
add
and
add
add
cmp
add
adc
cmp
add
add
pop
adc
fild
add
or
add
push
and
(bad)
add
add
adc
adc
adc
sub
add
push
and
push
cmp
inc
add
add
idiv
(bad)
jmp
adc
or
or
sbb
imul
and
cmp
adc
adc
adc
adc
adc
nop
add
add
add
(bad)
(bad)
call
or
sub
sbb
add
add
(bad)
(bad)
jmp
push
sub
add
push
and
add
add
cmp
add
adc
push
sub
add
push
and
add
add
cmp
add
adc
sbb
cmp
adc
push
adc
sub
add
push
and
sub
or
xor
adc
pop
sbb
sbb
adc
adc
sub
add
push
and
add
add
pop
adc
adc
inc
sub
add
mov
add
(bad)
(bad)
(bad)
out
std
(bad)
inc
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
loope
add
pop
add
add
(bad)
call
add
arpl
add
lahf
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
(bad)
jge
(bad)
dec
add
add
add
add
adc
das
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
jmp
xor
add
and
and
(bad)
call
or
adc
add
and
sub
push
(bad)
(bad)
push
add
jo
pop
add
or
sub
add
push
and
cmp
(bad)
(bad)
call
or
or
add
sbb
add
add
(bad)
(bad)
call
and
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
adc
sbb
sub
imul
add
and
sbb
push
and
adc
adc
add
(bad)
(bad)
call
sbb
xor
add
fdiv
add
jo
pop
add
or
outs
cmp
or
sub
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
push
and
sub
adc
pop
sbb
push
(bad)
(bad)
call
pop
push
cmp
(bad)
call
inc
add
add
idiv
(bad)
call
and
cmp
(bad)
dec
outs
cld
add
push
and
add
push
dec
add
mov
add
sbb
add
add
(bad)
(bad)
dec
sub
es
cmp
(bad)
(bad)
dec
sub
add
push
and
add
push
and
cmp
std
(bad)
inc
push
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
push
sub
add
push
and
(bad)
call
add
(bad)
(bad)
jmp
adc
sub
add
push
and
or
lods
std
(bad)
call
or
push
adc
pop
adc
das
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
adc
sbb
imul
and
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
call
adc
push
adc
sub
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
push
ds
(bad)
call
idiv
(bad)
call
adc
push
std
(bad)
call
or
adc
add
and
cmp
adc
adc
add
and
std
cld
(bad)
call
sbb
sbb
sub
add
push
and
and
call
sub
jae
add
push
or
cmp
cld
(bad)
call
prefetchnta
sti
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
and
test
(bad)
call
or
adc
add
and
daa
cmp
add
std
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
push
and
add
push
dec
add
inc
std
(bad)
call
inc
add
add
idiv
(bad)
call
inc
cld
(bad)
call
push
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
call
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
adc
add
and
add
add
cmp
add
adc
pop
sbb
cmp
cld
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
adc
cmp
(bad)
dec
sub
add
push
and
cmp
sti
(bad)
dec
sub
add
push
and
add
push
and
adc
add
and
cmp
outs
cld
add
push
and
push
cmp
adc
sbb
imul
and
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
jle
add
add
or
call
add
sbb
movups
nop
bound
add
add
jnp
jge
inc
ret
call
inc
add
add
idiv
(bad)
call
movhps
(bad)
(bad)
call
inc
add
add
idiv
(bad)
dec
sub
add
push
and
or
sub
(bad)
dec
sub
add
sbb
add
add
and
add
add
add
add
jecxz
and
add
add
add
adc
or
adc
add
add
add
sub
es
add
adc
cmps
add
add
aas
add
push
and
or
adc
add
add
add
sub
es
add
add
sub
add
and
or
adc
add
add
add
sub
es
add
add
aas
add
push
and
push
add
add
add
sub
es
jae
add
push
or
cmp
add
add
add
(bad)
(bad)
call
sub
add
es
add
push
or
inc
add
push
and
sub
add
and
add
pop
pop
jg
pop
sbb
add
pusha
add
or
pusha
adc
sub
add
and
pusha
adc
sub
add
and
pusha
adc
sub
add
and
adc
sub
or
outs
or
add
adc
add
and
add
add
cmp
add
adc
adc
push
adc
add
sbb
imul
add
push
add
pop
and
xchg
popa
and
add
add
xchg
adc
push
fs
adc
adc
pop
pop
and
fstp
inc
add
add
idiv
(bad)
call
push
adc
and
add
inc
add
push
push
pop
adc
inc
add
push
push
push
sub
add
push
push
sub
add
push
or
inc
add
push
push
adc
sub
add
push
outs
add
or
push
sub
add
push
add
sbb
imul
sub
add
and
add
inc
add
push
and
adc
sub
imul
push
push
sub
add
push
adc
push
adc
sub
imul
pop
add
inc
add
push
sub
add
add
sub
add
push
and
adc
outs
mov
adc
or
xor
sbb
add
add
(bad)
(bad)
inc
adc
push
adc
inc
add
push
pop
sub
add
and
inc
add
add
idiv
(bad)
inc
outs
sahf
add
push
sub
add
add
sub
add
push
and
adc
push
and
push
push
xor
pop
inc
add
add
idiv
(bad)
inc
adc
adc
add
pop
sub
add
and
inc
add
add
idiv
(bad)
inc
outs
popf
add
push
and
and
add
sub
add
push
pop
adc
stc
add
push
push
pop
adc
inc
add
push
push
push
sub
add
push
push
outs
stc
add
push
push
or
inc
add
push
push
adc
sub
add
push
adc
imul
push
add
sbb
imul
push
adc
sub
imul
push
push
sub
add
push
push
sub
add
push
push
sub
add
push
push
sub
add
push
push
sub
add
push
push
sub
add
push
adc
push
adc
sub
imul
push
and
add
add
push
push
sub
add
push
push
sub
add
push
pop
sub
add
push
pop
sub
add
push
pop
adc
sub
imul
push
pop
push
adc
sub
imul
sub
add
push
push
sub
add
push
adc
push
outs
data16
or
punpckhwd
inc
add
push
cmp
pop
inc
mov
add
sbb
add
add
idiv
(bad)
inc
and
jge
sub
add
push
add
sbb
imul
push
adc
cmp
add
add
(bad)
call
add
sub
imul
add
push
and
add
and
adc
adc
push
adc
sub
imul
push
sub
add
push
and
push
outs
cli
add
push
push
adc
sub
imul
jae
add
push
adc
adc
adc
outs
mov
xor
add
adc
add
and
adc
adc
dec
add
push
and
adc
inc
add
add
idiv
(bad)
inc
adc
adc
push
adc
outs
mov
es
sbb
add
add
idiv
(bad)
call
adc
add
push
sub
add
adc
add
and
adc
push
sub
add
and
pop
push
xor
sbb
add
add
(bad)
(bad)
inc
adc
push
adc
sub
add
adc
sub
add
and
inc
add
add
idiv
(bad)
inc
sub
add
push
and
adc
outs
add
or
adc
sub
add
and
add
push
push
adc
sub
push
adc
adc
sub
imul
sub
imul
sbb
add
add
idiv
(bad)
(bad)
cmp
add
add
sbb
js
inc
add
add
idiv
(bad)
inc
and
jge
sub
add
add
adc
cmps
add
add
aas
add
push
and
add
add
and
sbb
sbb
adc
sub
imul
adc
push
adc
push
adc
sub
imul
fisttp
sbb
sbb
add
add
idiv
(bad)
call
sbb
xor
add
fadd
sbb
jne
inc
add
add
idiv
(bad)
inc
and
jge
outs
cli
add
push
add
adc
cmps
add
add
aas
add
push
and
add
add
and
sbb
sbb
sbb
imul
adc
push
adc
push
adc
sub
imul
push
adc
add
add
idiv
(bad)
call
sbb
push
fadd
sub
add
push
sub
add
push
sub
add
and
push
adc
jb
add
jo
pop
sub
add
and
add
and
add
sbb
and
add
inc
dec
add
add
add
add
add
xor
add
add
add
add
add
jle
add
sub
add
add
add
add
aad
add
fld
add
add
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
push
add
and
xor
add
add
add
add
add
add
push
add
add
imul
or
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
ins
add
or
add
xor
add
add
add
add
add
add
push
add
add
and
sub
adc
or
or
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
adc
add
add
add
sub
es
add
add
outs
or
sub
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
adc
add
add
add
sub
es
add
add
outs
push
add
push
and
or
or
add
add
add
push
add
add
or
add
sub
add
adc
or
adc
add
add
add
sub
es
add
add
daa
add
push
and
or
adc
add
add
add
sub
es
add
add
outs
push
sub
xor
add
add
add
add
add
add
push
add
sub
add
push
and
adc
or
adc
add
add
add
sub
es
add
add
push
and
add
xor
add
add
add
add
push
add
ins
add
or
add
xor
add
add
add
add
sub
es
add
outs
cli
add
push
sub
xor
add
add
add
add
sub
es
add
outs
stc
add
push
sub
xor
add
add
add
add
push
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
outs
inc
add
or
adc
or
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
sub
es
add
outs
mov
adc
or
or
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
add
add
outs
add
or
xor
add
add
add
add
add
add
push
add
outs
mov
sub
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
sub
es
add
outs
add
or
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
add
sbb
add
and
xor
add
add
adc
add
push
sub
es
sub
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
add
push
jge
add
add
cmp
pop
sub
jnp
add
add
push
add
sbb
imul
sbb
push
and
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
sub
add
add
push
jge
add
add
jmp
or
add
sldt
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
pop
sub
add
add
(bad)
(bad)
jmp
add
push
add
push
sbb
ret
sub
adc
or
fadd
add
sub
add
sub
es
sub
es
push
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
jne
add
pop
sbb
push
and
add
add
add
push
add
add
and
sbb
push
pop
push
sub
add
push
and
add
add
add
push
add
add
sub
pop
sbb
push
and
add
add
add
push
add
add
sub
pop
push
sub
add
push
and
add
add
or
add
add
sub
pop
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
sub
add
and
inc
add
add
idiv
(bad)
jmp
sub
xor
jmp
adc
add
push
sbb
xor
add
add
add
add
jnp
add
add
imul
or
push
das
adc
add
idiv
(bad)
call
sub
add
es
sub
jnp
add
add
jnp
add
add
pop
add
push
pop
adc
out
add
add
sbb
add
add
sbb
loopne
add
pop
and
add
add
add
add
inc
add
add
idiv
(bad)
inc
push
cmp
add
add
idiv
(bad)
call
add
sub
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
jnp
add
add
ds
add
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
or
add
add
adc
push
add
add
push
das
mov
add
idiv
(bad)
call
pop
cmp
add
add
push
cmp
lods
add
add
jnp
add
add
add
add
pop
inc
add
add
sahf
add
add
add
aaa
add
add
(bad)
call
or
add
sub
jle
add
add
and
add
add
jge
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
pop
cmp
add
add
jnp
add
add
jnp
add
add
pop
add
push
and
cmp
sub
jnp
add
add
jnp
add
add
push
add
cmp
add
add
pop
adc
cmp
add
add
idiv
(bad)
jmp
add
add
add
ds
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
push
jge
add
add
sbb
jo
jle
add
add
and
add
add
jge
add
add
or
pop
add
or
add
add
adc
sub
add
add
(bad)
(bad)
jmp
add
add
add
jnp
add
add
pop
add
push
and
sub
add
add
add
pop
add
push
and
sbb
and
add
pop
jge
add
add
lahf
(bad)
(bad)
call
adc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
jmp
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
dec
add
jbe
add
stos
std
(bad)
inc
add
add
(bad)
dec
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
call
std
(bad)
jmp
std
(bad)
inc
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sub
jnp
add
add
jnp
add
add
mov
add
and
add
(bad)
call
push
pop
inc
add
add
idiv
(bad)
call
(bad)
(bad)
(bad)
(bad)
cmp
jnp
add
add
sub
push
push
pop
pop
and
add
das
mov
inc
add
add
idiv
(bad)
call
or
adc
add
add
add
or
sbb
add
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
sub
adc
push
add
add
adc
loop
(bad)
dec
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
sub
add
and
(bad)
call
idiv
(bad)
(bad)
cmp
jnp
add
add
jnp
add
add
jnp
add
add
pusha
add
push
pop
push
cmp
and
add
add
std
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
pop
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sub
add
xor
add
add
add
add
adc
add
push
pop
sbb
mov
add
pop
push
cmp
add
add
idiv
(bad)
call
sub
add
es
sbb
pop
add
add
add
add
jnp
add
add
jnp
add
add
popa
add
push
and
add
add
pop
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
adc
lea
add
jmp
add
push
pop
sub
add
add
(bad)
(bad)
jmp
push
sub
add
add
add
add
push
and
add
pop
sub
add
add
(bad)
(bad)
jmp
add
cmp
sbb
push
adc
inc
sbb
add
call
add
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
cli
add
add
add
add
add
sbb
add
outs
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
add
inc
add
add
add
popf
add
add
add
add
or
pop
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
cmp
(bad)
inc
sbb
add
add
adc
jle
add
add
dec
add
add
cmp
(bad)
call
sub
add
add
add
adc
add
push
and
jge
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
and
(bad)
call
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
pop
cmp
(bad)
(bad)
inc
jnp
add
add
pop
adc
loopne
(bad)
jmp
xchg
add
add
push
jge
add
add
cmp
(bad)
(bad)
call
sub
jnp
add
add
bound
add
and
sub
jnp
add
add
jnp
add
add
arpl
add
and
(bad)
call
inc
add
add
idiv
(bad)
call
(bad)
(bad)
(bad)
inc
jle
add
add
push
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
addr16
(bad)
inc
pop
pop
sub
sbb
add
add
(bad)
(bad)
inc
pop
jge
add
add
pop
arpl
add
cmp
(bad)
call
sub
jnp
add
add
adc
pop
add
push
add
jge
add
add
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
adc
add
push
and
pop
cmp
inc
add
add
idiv
(bad)
jmp
cmp
add
add
add
add
adc
inc
add
add
idiv
(bad)
inc
pop
or
inc
add
add
sub
jnp
add
add
sub
add
and
(bad)
std
(bad)
inc
sbb
add
add
adc
call
sub
jnp
add
add
sub
add
pop
sbb
pop
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
pop
inc
or
add
data16
(bad)
call
(bad)
(bad)
(bad)
ds
(bad)
dec
cld
(bad)
jmp
add
add
add
add
add
add
push
std
(bad)
inc
push
das
popf
sbb
add
add
(bad)
(bad)
call
adc
inc
std
(bad)
inc
jnp
add
add
push
(bad)
call
inc
add
add
idiv
(bad)
call
or
inc
add
add
add
add
push
and
add
sbb
add
sbb
pop
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
sub
jnp
add
add
adc
pop
add
push
add
jge
add
add
or
pop
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
outs
std
(bad)
inc
jnp
add
add
ins
add
push
push
cmp
sub
push
and
push
sub
xor
inc
add
add
add
adc
add
push
sbb
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
idiv
(bad)
call
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
or
adc
inc
add
add
idiv
(bad)
call
or
sub
sub
sub
add
and
inc
add
add
idiv
(bad)
call
sub
push
pop
pop
or
or
pop
pop
dec
add
sub
or
add
gs
(bad)
inc
(bad)
(bad)
call
add
imul
add
add
add
(bad)
(bad)
inc
add
add
add
add
sub
add
add
add
jl
add
and
sbb
add
add
(bad)
(bad)
call
sub
pop
add
push
and
inc
add
add
idiv
(bad)
jmp
pop
or
nop
add
add
add
add
sub
add
and
pop
dec
add
cmp
(bad)
jmp
sbb
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
or
(bad)
(bad)
call
add
(bad)
(bad)
call
or
inc
(bad)
(bad)
inc
sub
add
adc
or
or
add
add
add
sub
es
add
push
add
or
add
xor
push
add
add
add
add
add
push
add
add
outs
jno
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
sub
es
add
outs
jbe
add
sub
xor
add
add
add
add
sub
es
add
outs
push
add
sub
xor
add
add
add
add
add
add
push
add
outs
mov
add
and
adc
or
push
add
add
add
add
add
push
add
outs
imul
sub
add
xor
add
add
add
add
push
add
add
js
add
sub
add
adc
or
sldt
add
add
add
add
push
add
add
jns
add
and
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
add
outs
xchg
add
push
and
adc
or
or
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
adc
add
add
add
sub
es
add
add
outs
jge
add
and
or
or
add
add
add
push
add
add
or
add
sub
add
adc
or
sldt
add
add
add
add
push
sub
es
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
jae
add
and
inc
add
add
idiv
(bad)
jmp
adc
push
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
push
add
add
daa
sbb
inc
pop
add
add
add
add
add
cmp
inc
add
add
add
add
add
sbb
fadd
and
add
adc
push
add
add
sub
add
add
add
jnp
add
add
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
das
sbb
inc
add
add
idiv
(bad)
jmp
int
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
add
pop
add
pop
pop
bound
pop
push
imul
xor
and
add
add
add
sub
es
add
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
adc
or
or
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
jnp
add
add
add
add
add
arpl
add
xor
sub
add
add
add
sub
es
add
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
adc
or
adc
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
xor
add
add
sub
es
pop
or
pop
add
add
or
or
jae
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
add
add
jnp
add
add
add
sub
push
sbb
add
and
add
pop
jge
add
add
pop
pop
dec
add
push
pop
pop
or
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
pop
dec
add
push
cmp
add
add
add
inc
add
add
idiv
(bad)
call
or
rol
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
push
add
add
push
jge
add
add
adc
mov
sbb
add
add
add
add
add
add
pushf
pop
push
pop
cmp
inc
add
add
idiv
(bad)
jmp
add
add
add
jnp
add
add
pop
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
test
push
sub
jnp
add
add
fs
add
add
or
inc
add
inc
add
add
idiv
(bad)
jmp
jb
add
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
push
push
sub
jnp
add
add
jnp
add
add
or
push
pop
or
or
add
add
(bad)
(bad)
inc
add
add
add
int
(bad)
(bad)
aas
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
add
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
call
(bad)
jmp
(bad)
push
(bad)
call
add
pop
sub
(bad)
call
inc
add
add
idiv
(bad)
call
pop
sub
add
add
(bad)
(bad)
jmp
add
add
pop
jge
add
add
sub
add
ds
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
(bad)
(bad)
(bad)
inc
add
xor
add
add
add
add
adc
add
push
add
add
push
and
add
and
add
and
add
jge
add
add
add
xor
add
add
adc
add
push
sbb
jb
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
add
add
add
add
add
jnp
add
add
call
add
idiv
(bad)
call
or
jecxz
add
add
push
cmp
add
add
push
jge
add
add
or
enter
push
add
jge
add
sbb
add
add
(bad)
(bad)
jmp
jb
add
and
add
and
add
sbb
add
(bad)
(bad)
jmp
sbb
jae
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
add
sbb
imul
add
add
(bad)
(bad)
call
or
addr16
xor
sbb
add
add
idiv
(bad)
call
push
add
add
pop
jge
add
add
or
inc
jae
add
or
pop
pop
cmp
add
sbb
add
add
(bad)
(bad)
inc
and
add
add
pop
pop
dec
add
xchg
and
add
add
jnp
add
add
pop
pop
bound
push
add
add
lods
sbb
pop
inc
or
(bad)
(bad)
push
(bad)
inc
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
call
add
add
add
add
add
add
push
sub
pop
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
leave
(bad)
(bad)
jmp
sbb
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
sub
es
add
add
add
push
and
add
sub
add
adc
or
out
add
add
add
adc
add
push
sbb
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
add
(bad)
jg
add
push
add
add
cmp
and
add
xor
inc
add
add
idiv
(bad)
jmp
push
sbb
jg
add
and
inc
add
add
idiv
(bad)
jmp
add
add
or
pop
jge
add
add
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
push
sub
es
add
add
(bad)
(bad)
jmp
sub
add
or
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
cmp
(bad)
call
or
inc
pop
add
add
dec
call
(bad)
push
(bad)
push
(bad)
push
add
add
sub
sub
adc
push
add
add
add
add
push
sbb
pushf
add
add
add
push
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
es
cmp
add
sbb
add
(bad)
(bad)
jmp
add
add
(bad)
jg
add
push
add
add
inc
sbb
push
sub
add
and
add
or
pop
jge
add
add
add
add
add
and
add
xchg
pushf
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
push
sub
add
(bad)
jg
add
or
add
addr16
(bad)
call
or
inc
pop
add
add
(bad)
push
(bad)
inc
(bad)
(bad)
inc
(bad)
dec
(bad)
(bad)
dec
add
add
push
sub
sbb
add
add
(bad)
(bad)
jmp
sub
adc
push
add
add
adc
add
push
pop
or
jg
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
jnp
add
add
pop
and
jg
add
push
cmp
and
add
xor
sbb
add
(bad)
(bad)
jmp
jg
add
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
xlat
add
add
add
cmp
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
sub
add
pop
or
test
add
add
ja
add
pop
or
add
and
add
push
xor
pop
inc
add
add
idiv
(bad)
call
or
jl
add
add
add
pop
and
add
sub
pop
xor
add
idiv
(bad)
jmp
cmp
pop
or
push
sub
jnp
add
add
and
add
or
add
add
add
add
add
and
pushf
sbb
sub
add
or
and
jnp
add
add
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
call
or
add
add
push
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
in
(bad)
(bad)
jmp
(bad)
jmp
add
add
(bad)
call
(bad)
(bad)
jmp
add
add
jnp
add
add
pop
jge
add
add
sub
es
sbb
add
(bad)
(bad)
jmp
sub
add
xor
add
add
adc
add
push
sbb
pop
push
pop
inc
mov
inc
add
add
idiv
(bad)
call
sub
add
sub
sbb
inc
or
add
cld
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
cmp
add
sub
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
pop
sub
add
add
(bad)
(bad)
jmp
add
jnp
add
add
jnp
add
add
outs
outs
add
push
and
push
sub
pop
inc
add
add
idiv
(bad)
jmp
add
jnp
add
add
pop
and
jg
add
push
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
add
jnp
add
add
jnp
add
add
sub
or
cmp
(bad)
(bad)
inc
add
jnp
add
add
add
pop
sub
es
or
retf
es
cmp
(bad)
(bad)
inc
xor
sbb
add
add
idiv
(bad)
call
inc
add
pop
add
add
sub
add
add
push
and
add
and
add
cmp
(bad)
(bad)
jmp
add
push
add
add
or
or
mov
and
add
pop
jge
add
add
or
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
sub
xor
add
add
adc
add
push
sbb
mov
add
jae
add
or
and
add
xor
inc
add
add
idiv
(bad)
call
sub
add
sub
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
jg
add
and
inc
add
add
idiv
(bad)
jmp
add
and
add
pop
pop
dec
add
sub
sbb
inc
add
add
idiv
(bad)
jmp
add
jnp
add
add
add
push
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
add
ds
(bad)
(bad)
call
add
(bad)
(bad)
call
sub
and
add
dec
add
sub
or
add
xchg
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
dec
(bad)
(bad)
jmp
sub
add
add
push
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
sub
add
xor
add
add
add
add
add
add
push
and
add
add
add
add
sub
add
adc
or
or
add
add
add
sub
es
add
add
add
add
xor
add
add
sub
es
pop
or
add
add
add
add
add
sub
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
iret
add
add
push
xchg
add
sbb
add
add
(bad)
(bad)
call
cmp
jnp
add
add
or
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
add
add
sub
add
sub
es
or
ja
add
add
pop
dec
add
push
dec
add
pop
or
addr16
add
mov
add
inc
add
add
idiv
(bad)
call
pop
sub
add
add
(bad)
(bad)
jmp
add
add
add
add
sub
and
add
pop
jge
add
add
sub
es
add
add
(bad)
(bad)
jmp
or
cmp
or
or
add
add
(bad)
(bad)
call
jmp
add
add
add
add
add
pop
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
dec
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
add
sbb
inc
add
add
idiv
(bad)
jmp
add
add
add
das
cmp
inc
add
add
idiv
(bad)
call
or
pop
or
xchg
sub
add
add
add
jnp
add
add
add
add
pop
or
cmp
(bad)
push
add
or
sub
add
xor
adc
add
adc
add
push
add
push
and
add
jge
add
add
add
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
outs
add
or
xor
adc
add
add
add
sub
es
add
add
outs
outs
add
push
and
or
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
(bad)
add
add
add
adc
add
push
sub
es
pop
push
cmp
or
or
add
add
and
add
sub
add
push
and
sub
add
add
(bad)
(bad)
call
sub
add
es
and
add
add
std
add
add
inc
add
add
idiv
(bad)
call
inc
push
jae
add
push
sbb
add
and
adc
add
and
mov
add
and
inc
add
add
idiv
(bad)
jmp
pop
and
add
add
pop
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
push
or
inc
adc
add
xor
(bad)
jmp
add
dec
add
add
add
mov
add
add
add
add
add
add
(bad)
call
(bad)
jmp
add
add
(bad)
(bad)
push
add
add
sub
and
pushf
pop
or
sub
sbb
add
add
idiv
(bad)
jmp
sub
push
pop
and
pushf
push
sub
es
sbb
add
add
(bad)
(bad)
jmp
pop
or
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
and
enter
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
and
or
es
or
aas
(bad)
(bad)
call
or
popa
push
pop
and
pushf
sbb
(bad)
call
add
(bad)
(bad)
jmp
push
jae
add
push
sbb
add
(bad)
(bad)
(bad)
jmp
push
push
pop
and
pushf
sbb
(bad)
(bad)
(bad)
inc
and
add
add
jmp
idiv
(bad)
call
or
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
pop
pop
and
call
idiv
(bad)
call
cmp
(bad)
(bad)
jmp
add
adc
or
push
add
add
add
add
add
push
sub
es
add
mov
add
add
sub
add
adc
push
add
add
add
add
adc
add
push
pop
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
sbb
imul
sbb
add
add
(bad)
(bad)
call
es
add
add
push
ds
add
add
inc
add
add
idiv
(bad)
inc
or
and
add
pop
or
cmp
add
add
adc
pop
maxps
pop
pop
bound
adc
sbb
mov
add
and
add
sbb
add
add
idiv
(bad)
jmp
adc
adc
aas
add
add
inc
add
add
idiv
(bad)
inc
adc
adc
pop
adc
mulps
pop
pop
bound
pop
and
add
add
inc
add
add
or
add
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
and
push
add
add
or
or
add
add
or
adc
pop
or
pop
pop
bound
or
or
xor
add
sub
adc
adc
pop
pop
cmp
add
add
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
pop
adc
add
add
add
add
add
adc
push
sbb
punpcklbw
pop
or
cmp
add
add
inc
add
add
idiv
(bad)
jmp
adc
pop
rdtsc
stos
sbb
add
(bad)
(bad)
inc
adc
push
and
add
add
add
adc
pop
movlps
cmp
add
add
add
cmp
add
or
and
cmp
inc
add
add
idiv
(bad)
jmp
or
pop
or
adc
add
push
pop
pop
adc
pop
push
cmp
add
(bad)
(bad)
inc
jnp
add
add
adc
inc
add
pop
xchg
adc
pop
(bad)
add
add
adc
arpl
adc
adc
push
add
add
adc
add
add
and
cmp
add
adc
pop
adc
pop
pop
pop
bound
adc
cmp
add
add
adc
cmp
(bad)
(bad)
inc
adc
xchg
adc
adc
sub
sbb
add
add
(bad)
(bad)
call
and
push
and
add
sbb
add
(bad)
(bad)
jmp
pop
adc
xchg
adc
pop
cmp
add
add
or
add
add
inc
add
add
idiv
(bad)
call
or
pop
adc
adc
pop
or
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
mov
adc
sub
cmp
inc
add
add
idiv
(bad)
jmp
adc
cmp
add
or
push
cmp
inc
add
add
idiv
(bad)
jmp
adc
pop
pop
adc
pop
adc
jne
add
adc
and
add
add
gs
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
add
adc
mov
add
and
nop
cmp
sbb
add
add
(bad)
(bad)
call
sbb
xor
add
or
sub
imul
sbb
add
add
(bad)
(bad)
call
and
adc
add
adc
cmp
add
or
add
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
add
add
add
add
adc
loope
add
sbb
add
add
(bad)
(bad)
jmp
pop
adc
add
add
and
pop
sbb
mov
add
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
pop
adc
pop
pop
pop
bound
adc
sub
(bad)
jmp
sbb
add
adc
sbb
nop
add
add
push
pop
or
add
inc
add
add
idiv
(bad)
inc
adc
xchg
and
adc
pop
push
sub
add
adc
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
adc
push
adc
adc
xchg
pop
adc
or
pop
pop
bound
add
push
sub
pop
inc
add
add
idiv
(bad)
jmp
adc
add
or
cmp
(bad)
inc
jnp
add
add
or
push
and
sbb
or
popf
cmp
or
inc
daa
add
add
(bad)
jmp
cld
(bad)
jmp
(bad)
inc
std
(bad)
dec
(bad)
(bad)
(bad)
jmp
jmp
(bad)
(bad)
push
std
(bad)
push
(bad)
(bad)
jmp
std
(bad)
inc
(bad)
dec
std
(bad)
(bad)
cmp
(bad)
(bad)
inc
(bad)
(bad)
(bad)
jg
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
inc
std
(bad)
dec
cld
(bad)
(bad)
mov
sti
(bad)
call
cld
(bad)
dec
(bad)
push
(bad)
(bad)
jmp
cld
(bad)
jmp
(bad)
dec
(bad)
(bad)
dec
std
(bad)
inc
add
add
sbb
jmp
add
adc
or
jp
add
sub
add
sub
es
push
push
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
es
sbb
add
add
(bad)
(bad)
call
adc
dec
pop
sbb
add
pop
add
and
or
ss
pop
maxps
add
add
inc
add
add
idiv
(bad)
call
or
sub
sbb
add
add
(bad)
(bad)
jmp
add
pop
maxps
add
push
sub
adc
adc
inc
adc
add
test
add
add
add
add
add
(bad)
call
add
add
add
cwde
add
add
add
add
add
add
(bad)
(bad)
aas
add
add
add
add
(bad)
jmp
add
add
(bad)
(bad)
jmp
sbb
stos
add
add
imul
or
jnp
add
add
push
pop
or
xchg
or
pop
maxps
add
sbb
inc
add
add
idiv
(bad)
inc
pop
pop
maxps
mov
add
pop
sbb
adc
add
push
and
push
cmp
(bad)
call
idiv
(bad)
jmp
add
add
push
and
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
inc
pop
pop
maxps
add
push
pop
adc
sbb
(bad)
inc
push
aas
or
add
sbb
add
add
idiv
(bad)
call
or
add
(bad)
inc
jnp
add
add
xchg
or
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sbb
pop
sbb
or
or
inc
jnp
add
add
push
pop
or
xchg
or
(bad)
(bad)
(bad)
inc
pop
or
lea
add
and
aas
cmp
(bad)
call
inc
add
add
idiv
(bad)
call
or
mov
add
and
(bad)
call
add
(bad)
(bad)
(bad)
cmp
pop
maxps
mov
add
sbb
je
(bad)
inc
jnp
add
add
xchg
and
sbb
add
add
(bad)
(bad)
jmp
mov
add
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sub
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
pop
maxps
sbb
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sbb
adc
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
add
add
push
add
outs
imul
sub
add
xor
add
add
add
add
sub
es
add
outs
push
add
sub
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
sub
es
add
xchg
add
push
sub
adc
or
stos
add
add
add
adc
add
push
sub
es
sbb
sbb
add
and
add
add
or
add
sbb
add
and
or
inc
push
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
add
add
add
add
push
sub
pop
adc
add
add
and
add
add
fwait
add
push
sub
add
sub
sbb
add
add
and
add
add
fwait
add
push
sbb
sub
sub
es
sbb
add
add
idiv
(bad)
call
sub
add
es
jg
(bad)
jmp
add
adc
or
add
add
adc
add
push
sbb
cdq
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
pop
sbb
js
add
add
add
add
imul
push
push
rcr
add
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
sub
add
add
add
add
add
add
add
add
adc
cdq
add
push
and
add
pop
inc
add
add
idiv
(bad)
jmp
push
sub
sbb
xchg
add
push
sbb
add
add
cmp
add
add
sbb
xchg
add
push
and
add
jnp
add
add
cmp
add
add
inc
add
add
idiv
(bad)
call
and
rol
add
push
sub
pop
adc
lahf
add
add
inc
add
add
idiv
(bad)
call
and
mov
add
or
cmp
pop
inc
add
add
idiv
(bad)
call
cmp
jnp
add
add
adc
add
and
add
(bad)
add
add
push
jge
add
add
and
je
add
add
add
add
jnp
add
add
or
inc
add
add
idiv
(bad)
call
sub
sbb
add
add
and
cmp
(bad)
(bad)
call
add
(bad)
(bad)
call
and
cmp
sbb
xchg
add
push
push
sub
add
jge
add
add
pop
pop
adc
data16
add
sbb
sbb
push
cmp
(bad)
(bad)
call
idiv
(bad)
(bad)
cmp
(bad)
(bad)
call
adc
adc
inc
add
add
add
add
(bad)
(bad)
(bad)
out
(bad)
(bad)
jmp
add
add
add
jmp
(bad)
dec
(bad)
(bad)
push
add
add
(bad)
call
add
cmp
add
aam
add
and
add
push
add
add
(bad)
call
add
adc
add
or
add
pusha
(bad)
(bad)
call
add
add
(bad)
jmp
add
mov
add
add
add
add
(bad)
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
add
add
add
add
or
cdq
add
push
and
(bad)
call
idiv
(bad)
jmp
add
add
add
jnp
add
add
in
add
sbb
add
add
idiv
(bad)
call
sbb
sub
(bad)
inc
add
add
add
jnp
add
add
jge
add
add
pop
cmp
(bad)
(bad)
inc
sbb
add
add
push
sub
es
(bad)
(bad)
call
idiv
(bad)
jmp
sub
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
add
add
add
jnp
add
add
or
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
sub
es
sub
sbb
add
(bad)
(bad)
call
sbb
push
and
(bad)
call
idiv
(bad)
jmp
push
sub
and
add
add
add
pop
jge
add
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
inc
sbb
xchg
add
push
and
cmp
(bad)
inc
add
outs
imul
jge
add
add
jnp
add
add
das
or
inc
add
add
idiv
(bad)
call
sub
and
add
pop
jge
add
add
or
inc
sbb
xchg
add
push
sub
sub
es
sbb
add
add
(bad)
(bad)
jmp
pop
or
cmp
std
(bad)
call
idiv
(bad)
jmp
push
sub
or
xchg
add
push
or
add
add
jnp
add
add
pop
or
jmp
pop
sbb
mov
(bad)
inc
add
sub
es
add
add
or
call
popa
add
add
cmp
push
jge
add
add
adc
jg
(bad)
inc
jnp
add
add
add
pop
cmp
(bad)
inc
and
add
pop
jge
add
add
sbb
cmp
(bad)
call
idiv
(bad)
jmp
add
jge
add
add
adc
inc
std
(bad)
inc
add
add
add
xchg
add
jge
add
add
jle
add
add
pop
add
add
cmp
std
(bad)
inc
sbb
add
add
push
pop
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
das
or
inc
add
add
idiv
(bad)
call
sub
and
add
pop
jge
add
add
adc
cmp
cld
(bad)
call
inc
add
add
idiv
(bad)
jmp
jle
add
add
jnp
add
add
or
or
add
push
and
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
cdq
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
outs
push
add
add
adc
adc
add
and
add
adc
inc
sbb
add
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
adc
or
add
add
adc
add
push
add
add
add
adc
add
and
pop
add
add
push
push
add
add
add
jae
add
push
jae
add
push
sub
add
adc
or
add
add
adc
add
push
add
add
add
adc
add
and
pop
add
add
jnp
add
add
push
add
add
add
jae
add
push
jae
add
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
outs
imul
sub
add
xor
add
add
add
add
sub
es
add
outs
push
add
sub
xor
add
add
add
add
add
add
push
add
outs
mov
add
and
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
cmps
add
add
add
adc
add
push
sub
es
sub
sub
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
sbb
add
add
(bad)
(bad)
jmp
add
mov
sub
add
add
push
jge
add
add
and
or
inc
pop
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
push
add
add
sbb
pop
sub
add
adc
add
add
push
sub
sbb
add
add
(bad)
(bad)
jmp
add
jnp
add
add
xlat
add
push
jge
add
add
sub
or
or
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
sub
es
add
add
or
jge
add
add
adc
or
xor
add
add
add
sub
es
add
add
add
push
xor
sbb
add
(bad)
(bad)
call
sub
add
add
add
add
cmps
add
push
and
add
add
xor
add
add
add
add
add
add
push
add
add
add
cmps
add
push
and
adc
or
adc
add
add
add
sub
es
add
add
add
outs
fild
add
sub
add
adc
or
push
add
add
add
adc
add
push
pop
cmp
or
or
mov
jnp
add
add
push
pop
sub
es
add
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
push
cmp
add
add
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
sbb
push
sub
add
pop
or
add
push
adc
or
add
add
xor
sbb
add
add
(bad)
(bad)
call
push
sub
push
or
sub
add
add
add
adc
add
add
inc
add
add
idiv
(bad)
(bad)
cmp
add
pop
adc
add
add
(bad)
call
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
call
(bad)
inc
add
pop
add
add
add
add
add
lods
add
add
add
add
or
stos
push
or
pop
adc
sub
sbb
add
add
(bad)
(bad)
jmp
add
sbb
imul
add
add
add
jnp
add
add
pop
push
inc
push
inc
add
add
add
pop
push
inc
push
inc
outs
fiadd
add
and
(bad)
call
add
(bad)
(bad)
call
adc
dec
(bad)
(bad)
call
add
add
add
test
es
pop
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
push
jge
add
add
adc
adc
(bad)
inc
jnp
add
add
out
add
push
push
cmp
(bad)
(bad)
inc
and
add
push
jge
add
add
or
push
sub
cmp
inc
add
add
idiv
(bad)
jmp
sbb
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
cmp
(bad)
(bad)
inc
jnp
add
add
sbb
adc
(bad)
call
inc
add
add
idiv
(bad)
call
push
cmp
inc
add
add
idiv
(bad)
jmp
or
pop
sub
jnp
add
add
adc
leave
sbb
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
inc
pop
adc
add
add
cmp
(bad)
(bad)
cmp
std
(bad)
dec
pop
pop
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
adc
add
add
add
sub
es
add
add
outs
repnz
push
and
or
or
add
add
add
push
add
add
push
and
add
xor
and
add
sub
add
push
sub
es
pop
or
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
and
pushf
push
and
test
add
pop
inc
add
add
idiv
(bad)
call
sub
es
add
add
idiv
(bad)
jmp
sub
js
add
and
add
add
pop
sbb
add
and
sub
cmp
inc
add
add
idiv
(bad)
jmp
jle
add
add
sbb
add
push
pop
pop
or
pop
push
aas
dec
add
add
inc
add
add
idiv
(bad)
call
adc
add
add
xor
add
idiv
(bad)
call
adc
mov
es
sbb
add
add
(bad)
(bad)
jmp
jle
add
add
and
pushf
sbb
sub
add
add
(bad)
(bad)
jmp
cmp
add
jle
add
add
and
(bad)
(bad)
inc
pop
pop
or
mov
es
sub
pop
or
pop
inc
push
add
add
(bad)
(bad)
push
add
add
add
je
add
pop
add
add
add
add
add
add
add
add
add
add
add
adc
(bad)
jmp
(bad)
(bad)
push
add
add
add
cmp
add
add
(bad)
inc
add
add
add
add
adc
lahf
jle
add
add
and
or
and
add
add
fadd
add
pop
inc
add
add
idiv
(bad)
call
push
sub
add
push
and
add
adc
fs
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
pop
xor
pop
push
bound
mov
es
pop
adc
inc
(bad)
(bad)
call
or
pop
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
add
add
and
add
add
mov
outs
add
add
sub
es
add
add
inc
add
add
idiv
(bad)
jmp
pop
or
call
push
sub
add
push
and
add
cmp
(bad)
(bad)
jmp
push
add
add
adc
add
and
add
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
and
add
add
cwde
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
test
pop
push
bound
mov
es
pop
or
cmp
inc
add
add
idiv
(bad)
jmp
jle
add
add
and
pushf
pop
adc
ins
(bad)
(bad)
call
adc
adc
add
and
add
add
mov
outs
add
add
push
add
add
sub
add
and
add
pop
(bad)
(bad)
jmp
sbb
call
or
cmp
(bad)
(bad)
(bad)
cmp
jp
add
push
pop
or
mov
es
pop
or
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
xor
add
add
adc
add
push
sub
es
sbb
mov
and
inc
add
sub
add
push
and
add
xor
push
cmp
add
add
add
cmp
add
push
add
add
add
add
pop
(bad)
mov
push
jge
add
add
cmp
add
add
add
add
adc
add
and
add
or
bound
add
adc
sbb
push
jge
add
add
sub
sub
mov
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
add
(bad)
(bad)
jmp
add
pop
push
pop
pop
(bad)
mov
push
jge
add
add
mov
or
add
pop
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
sub
sub
add
adc
or
cmp
add
add
add
sub
es
jle
add
add
pop
maxps
outs
add
add
sbb
maxps
outs
add
add
push
arpl
maxps
outs
add
add
pop
or
xchg
pusha
push
add
add
add
add
add
add
push
add
jge
add
add
push
jge
add
add
add
xor
add
add
sub
es
sbb
push
and
and
add
add
sbb
inc
add
arpl
or
add
add
pop
sub
add
das
sub
add
idiv
(bad)
call
sub
add
es
inc
add
xor
sbb
add
(bad)
(bad)
call
sub
sub
push
sbb
sub
sbb
pop
inc
or
add
test
(bad)
jmp
(bad)
(bad)
call
(bad)
call
(bad)
call
add
add
mov
sub
es
sbb
add
add
(bad)
(bad)
jmp
sbb
mov
adc
or
mov
add
sub
add
push
sub
sub
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
add
(bad)
(bad)
jmp
add
das
nop
add
add
(bad)
(bad)
call
ds
push
sbb
pop
sub
es
add
add
(bad)
(bad)
jmp
push
or
sub
es
add
add
(bad)
(bad)
jmp
add
arpl
or
add
and
or
inc
pop
add
add
(bad)
jmp
add
add
(bad)
(bad)
inc
add
add
mov
sbb
fld
add
adc
or
pop
add
sub
add
push
push
cmp
add
add
test
add
add
add
add
jnp
add
add
jge
add
outs
add
add
xchg
xchg
sbb
add
push
sbb
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
jnp
add
add
jg
add
add
add
pop
sbb
mov
sub
es
add
add
idiv
(bad)
jmp
add
add
add
leave
add
push
pop
or
test
jnp
add
add
jnp
add
add
jg
add
pop
sbb
mov
cmp
or
cmp
add
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
ins
add
add
add
mov
or
pop
add
add
add
jnp
add
add
mov
jnp
add
add
jnp
add
add
into
add
push
pop
or
jno
add
mov
sub
push
pop
pop
or
mov
pop
pop
inc
add
add
idiv
(bad)
jmp
add
add
add
sbb
sub
inc
push
or
inc
push
add
add
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
(bad)
call
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
sub
es
sbb
add
add
idiv
(bad)
jmp
pop
sub
or
add
add
adc
add
push
pop
or
push
add
add
jnp
add
add
add
push
cmp
add
add
pop
or
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
adc
add
add
inc
add
add
idiv
(bad)
jmp
adc
xor
sbb
add
add
idiv
(bad)
call
sub
cmp
inc
add
add
idiv
(bad)
jmp
adc
ds
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
adc
pop
pop
bound
pop
pop
adc
mov
mov
add
add
add
add
sub
adc
cmp
add
sbb
add
add
idiv
(bad)
jmp
add
add
add
add
add
sub
adc
mov
add
and
add
sbb
add
add
(bad)
(bad)
jmp
add
sub
es
add
and
add
sbb
add
(bad)
(bad)
jmp
add
add
add
outs
mov
add
sbb
add
or
out
add
add
pop
pop
or
cmp
add
add
add
cmp
sbb
add
add
idiv
(bad)
call
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
push
or
mov
sub
cmp
inc
add
add
idiv
(bad)
jmp
pop
push
pop
cmp
inc
add
add
idiv
(bad)
jmp
sub
jnp
add
add
xchg
and
add
add
add
add
add
xchg
or
or
mov
es
add
add
(bad)
(bad)
jmp
pop
or
fdivr
(bad)
call
add
(bad)
(bad)
call
inc
adc
adc
movntps
push
add
add
add
movs
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
lock
push
cmp
or
push
adc
inc
adc
add
pop
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
std
(bad)
inc
std
(bad)
dec
(bad)
(bad)
call
(bad)
jmp
std
(bad)
push
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
call
add
add
sub
es
add
add
(bad)
(bad)
jmp
popf
sub
add
adc
or
sub
add
sub
add
sub
es
pop
sub
es
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
mov
add
and
inc
add
add
idiv
(bad)
jmp
add
add
add
data16
add
push
cmp
or
inc
or
add
adc
add
add
(bad)
(bad)
inc
add
add
add
xchg
add
add
add
mov
add
sbb
mov
add
and
inc
add
add
idiv
(bad)
jmp
add
add
add
add
or
add
idiv
(bad)
call
sub
pop
sbb
mov
push
sub
pop
inc
add
add
idiv
(bad)
jmp
add
lods
add
push
push
pop
sub
add
add
(bad)
(bad)
jmp
add
add
add
rol
push
sbb
mov
add
and
(bad)
call
add
(bad)
(bad)
jmp
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
sbb
inc
(bad)
(bad)
inc
jnp
add
add
add
outs
in
add
push
pop
pop
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
sub
adc
or
add
add
adc
add
push
pop
or
rol
add
add
lods
add
push
sub
jnp
add
add
push
add
push
sbb
add
add
idiv
(bad)
call
sub
add
es
sub
pop
pop
sbb
add
push
sbb
add
sbb
add
add
idiv
(bad)
jmp
add
add
add
ret
push
add
add
add
jnp
add
add
ret
add
push
pop
sub
cmp
add
add
idiv
(bad)
jmp
pop
sbb
pop
add
add
push
add
mov
add
pop
or
sub
sbb
add
(bad)
(bad)
jmp
add
sub
sub
adc
sub
inc
add
add
add
add
add
jl
add
add
add
add
cmp
add
add
or
push
adc
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
cmp
add
lea
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
mov
add
add
add
sub
(bad)
jmp
add
add
add
add
add
add
add
add
or
(bad)
cmp
add
add
add
add
add
jl
add
add
jle
add
add
add
pop
pop
or
adc
sub
cmp
(bad)
call
idiv
(bad)
(bad)
cmp
(bad)
(bad)
call
add
pop
sbb
cs
(bad)
(bad)
cmp
add
add
jnp
add
add
jge
add
outs
add
add
xchg
xchg
push
ds
add
add
inc
add
add
idiv
(bad)
inc
pop
pop
or
movaps
es
(bad)
(bad)
call
idiv
(bad)
jmp
add
add
add
ret
push
sub
es
sbb
aam
(bad)
call
or
adc
pop
push
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
ret
add
push
pop
sbb
mov
(bad)
inc
aas
push
add
add
inc
add
add
idiv
(bad)
call
push
cmp
sbb
sbb
cmp
add
sbb
add
add
(bad)
(bad)
call
pop
cmp
inc
jnp
add
add
ret
push
pop
adc
push
(bad)
dec
or
mov
inc
add
add
idiv
(bad)
call
or
cmp
call
inc
add
add
idiv
(bad)
jmp
pop
push
cmp
sbb
add
add
(bad)
(bad)
call
push
push
sbb
add
add
add
int3
add
push
and
jno
add
int3
add
push
and
jb
add
les
add
and
ja
add
or
cmp
std
(bad)
inc
sub
adc
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
std
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
(bad)
std
(bad)
inc
sub
sbb
inc
pop
pop
or
cmp
adc
adc
cmps
std
(bad)
call
add
push
add
add
and
(bad)
call
idiv
(bad)
call
adc
cmp
inc
add
add
idiv
(bad)
jmp
add
add
add
jp
add
jnp
add
lds
add
pop
adc
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
or
cld
(bad)
call
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
add
or
add
idiv
(bad)
call
sub
pop
pop
sbb
mov
jnp
add
add
js
add
jns
add
lds
add
push
sub
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
sub
es
cld
(bad)
call
idiv
(bad)
jmp
add
add
add
pop
or
into
cld
(bad)
inc
jnp
add
add
jl
add
add
add
(bad)
dec
add
add
add
pop
push
add
cmp
add
adc
or
adc
add
add
add
push
add
add
add
add
add
add
inc
sub
add
adc
or
mov
add
sub
add
push
sub
sub
es
add
add
(bad)
(bad)
call
sub
add
es
push
add
add
add
jl
add
(bad)
dec
add
add
add
pop
push
add
sub
add
add
add
jnp
add
add
popf
sub
sbb
pop
add
add
add
and
add
or
pop
jge
add
add
add
pushf
sub
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
pop
sub
add
add
(bad)
(bad)
jmp
add
mov
add
and
add
xor
test
add
sub
add
sub
es
sub
sub
cmp
add
sbb
add
(bad)
(bad)
call
sub
add
es
aam
add
add
add
sbb
pop
pop
jge
add
add
or
mov
jnp
add
add
jl
add
(bad)
dec
add
add
add
pop
push
add
cmp
jnp
add
add
jl
add
(bad)
dec
add
add
add
pop
push
add
or
jae
jnp
add
add
and
add
or
pop
jge
add
add
add
pop
rcr
sbb
scas
add
push
and
inc
pop
sbb
fadd
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
jnp
add
add
push
push
add
add
and
sbb
jge
add
add
mov
add
sbb
add
xchg
(bad)
(bad)
push
(bad)
call
(bad)
(bad)
dec
(bad)
push
add
xor
(bad)
jmp
(bad)
(bad)
call
add
add
dec
add
popa
add
add
or
sub
add
add
(bad)
(bad)
jmp
push
and
add
add
aaa
sbb
add
add
(bad)
(bad)
inc
and
and
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
sbb
push
and
inc
add
add
idiv
(bad)
jmp
add
pop
pop
sub
or
cmp
(bad)
inc
sub
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
push
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
add
push
sub
adc
or
or
add
add
add
push
add
add
lock
push
sub
add
adc
or
or
add
add
add
sub
es
add
outs
into
add
push
sub
xor
add
add
add
add
sub
es
add
outs
mov
xor
add
add
add
add
add
add
push
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
outs
in
add
push
sub
xor
add
add
add
add
add
add
push
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
outs
int
add
sub
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
enter
sub
add
adc
or
loopne
add
sub
add
sub
es
sub
es
push
sub
add
add
sub
or
inc
or
add
jnp
add
data16
add
add
add
add
add
add
add
(bad)
(bad)
call
rol
add
and
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
lods
add
jge
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
nop
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
add
and
add
cmp
inc
sub
add
push
sbb
push
(bad)
(bad)
inc
add
sub
add
and
add
iret
es
cmp
(bad)
(bad)
jmp
adc
or
sub
add
add
add
sub
es
add
add
add
jo
add
jnp
add
add
xchg
and
inc
add
jnp
add
add
xchg
sub
add
push
sub
adc
or
adc
add
add
add
sub
es
add
jge
add
add
add
jge
add
add
xor
add
add
adc
add
push
push
sub
or
or
cs
or
sub
or
jnp
add
add
add
add
add
(bad)
(bad)
call
sub
add
cmp
adc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
push
add
add
add
add
add
xchg
(bad)
(bad)
(bad)
inc
add
in
add
push
add
add
add
add
add
pop
add
add
push
sub
add
add
and
add
and
add
push
and
add
pop
sub
add
add
(bad)
(bad)
jmp
sub
add
add
add
xchg
adc
or
push
and
(bad)
call
idiv
(bad)
(bad)
cmp
dec
add
add
add
rcl
inc
add
add
idiv
(bad)
call
(bad)
(bad)
(bad)
inc
jnp
add
add
add
add
and
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
sbb
(bad)
inc
adc
pop
(bad)
add
add
pop
adc
add
pop
pop
pop
bound
dec
add
add
pop
pop
or
(bad)
(bad)
call
add
xor
sbb
add
(bad)
(bad)
call
or
xlat
(bad)
(bad)
inc
jnp
add
add
push
adc
pop
xchg
sub
add
push
and
mov
mov
(bad)
inc
or
sahf
pop
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
sbb
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
pop
or
push
(bad)
(bad)
jmp
pop
or
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
or
(bad)
jmp
add
add
xor
add
add
adc
add
push
sbb
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
or
add
add
sub
add
and
or
pop
pop
sbb
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
pop
sbb
sub
push
add
add
add
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
pop
sbb
pop
add
add
pop
pop
adc
pop
or
add
add
pop
pop
push
sahf
cmp
add
add
pop
cmp
add
add
add
add
push
pop
adc
add
add
add
add
popa
add
add
inc
add
add
idiv
(bad)
call
cmp
add
add
add
pop
(bad)
add
add
pop
or
add
add
add
pop
(bad)
add
add
pop
or
cmp
add
push
sub
add
push
and
(bad)
add
add
jnp
add
add
or
adc
push
add
add
or
jnp
add
add
pop
aas
int
add
sbb
add
add
(bad)
(bad)
dec
push
cmp
sbb
add
(bad)
(bad)
call
or
rol
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
pop
adc
rol
add
and
add
sbb
add
add
idiv
(bad)
(bad)
cmp
add
add
add
sbb
add
add
adc
adc
and
or
leave
add
add
or
pop
adc
pop
sbb
mov
add
add
add
and
add
and
add
push
and
add
or
call
add
add
add
add
or
pop
xchg
adc
cmp
add
add
add
or
xchg
pop
adc
push
sub
or
inc
jnp
add
add
push
sahf
pop
push
pop
sub
add
add
(bad)
(bad)
jmp
or
add
add
(bad)
(bad)
jmp
add
add
add
pop
adc
pop
pop
sub
or
pop
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
sbb
add
adc
idiv
(bad)
call
inc
and
add
(bad)
std
(bad)
call
add
xchg
add
mov
(bad)
jmp
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
push
std
(bad)
push
add
add
add
add
std
(bad)
dec
(bad)
(bad)
jmp
add
add
(bad)
call
std
(bad)
dec
add
add
(bad)
(bad)
inc
(bad)
dec
add
call
(bad)
mov
add
add
add
add
(bad)
(bad)
inc
std
(bad)
call
add
add
(bad)
jmp
rol
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
pop
pop
(bad)
add
add
pop
or
cmp
(bad)
(bad)
(bad)
cmp
add
add
pop
cmp
or
pop
adc
adc
cmp
inc
add
add
idiv
(bad)
call
and
pop
(bad)
(bad)
call
add
add
sbb
add
(bad)
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
or
pop
and
lock
inc
add
add
idiv
(bad)
call
sbb
mov
or
cmp
sbb
add
add
(bad)
(bad)
call
push
pop
cmp
inc
add
add
idiv
(bad)
jmp
add
or
pop
xchg
adc
add
add
idiv
(bad)
call
or
jns
(bad)
inc
jnp
add
add
or
and
add
pop
or
add
pop
pop
and
add
add
add
pop
or
add
add
add
pop
adc
pop
pop
pop
pop
bound
or
ds
add
add
(bad)
(bad)
call
push
(bad)
(bad)
inc
pop
pop
adc
inc
sbb
add
adc
call
inc
add
add
idiv
(bad)
call
adc
in
std
(bad)
call
or
sbb
inc
jnp
add
add
adc
adc
rcr
(bad)
jmp
add
add
xor
add
add
push
pop
adc
mov
add
pop
adc
cmp
adc
pop
or
add
add
inc
add
add
idiv
(bad)
call
sub
add
cmp
add
add
sbb
add
adc
add
and
inc
add
add
idiv
(bad)
jmp
sbb
add
sbb
add
add
(bad)
(bad)
jmp
adc
adc
xchg
adc
pop
sbb
cmp
add
pop
inc
add
add
idiv
(bad)
jmp
adc
adc
pop
and
xor
add
adc
adc
adc
push
xor
add
idiv
(bad)
inc
jnp
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
add
inc
add
add
idiv
(bad)
inc
adc
adc
sbb
repnz
add
or
adc
add
sbb
add
add
(bad)
(bad)
call
pop
cmp
add
add
adc
adc
and
cmp
add
add
add
(bad)
(bad)
jmp
pop
push
xchg
adc
cmp
or
adc
add
add
pop
adc
add
aas
adc
add
add
idiv
(bad)
(bad)
cmp
add
add
sbb
add
add
inc
add
add
idiv
(bad)
call
push
cmp
add
pop
or
pop
and
pop
sbb
bound
add
adc
pop
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
sbb
add
add
(bad)
(bad)
inc
adc
adc
sahf
pop
and
cmp
inc
add
add
idiv
(bad)
jmp
adc
sbb
pop
adc
pop
sub
sbb
add
adc
or
addr16
(bad)
call
inc
add
add
idiv
(bad)
call
or
push
and
add
sbb
add
(bad)
(bad)
jmp
adc
adc
xchg
and
add
add
or
adc
and
add
add
aad
add
and
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
push
xchg
adc
pop
adc
cmp
add
add
idiv
(bad)
jmp
cmp
adc
pop
adc
xchg
sahf
pop
adc
cmp
add
add
idiv
(bad)
jmp
or
xor
sbb
add
add
(bad)
(bad)
call
pop
cmp
add
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
xor
add
idiv
(bad)
inc
adc
adc
sahf
pop
adc
inc
add
add
or
pop
sub
add
push
and
xor
cmp
inc
add
add
idiv
(bad)
jmp
push
sub
or
and
or
add
add
or
adc
adc
sbb
or
sahf
pop
push
cmp
add
add
adc
xor
cmp
add
add
inc
add
add
idiv
(bad)
jmp
or
or
sbb
retf
add
add
or
or
add
push
xchg
push
bound
add
add
ret
std
(bad)
inc
adc
and
add
or
pop
sub
add
push
and
or
or
sbb
mov
add
adc
and
cmp
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
ins
add
add
or
add
add
inc
add
add
idiv
(bad)
jmp
adc
pop
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
xor
sbb
add
(bad)
(bad)
call
sbb
push
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
pop
pop
adc
pop
adc
pop
adc
xchg
sahf
pop
sub
add
adc
mov
(bad)
call
inc
add
add
idiv
(bad)
call
sub
rol
add
and
add
sbb
add
add
(bad)
(bad)
jmp
add
pop
pop
add
add
add
aam
add
and
add
or
les
add
cmp
(bad)
(bad)
inc
adc
pop
adc
xchg
sahf
pop
or
mov
add
or
push
cmp
inc
adc
pop
adc
xchg
sahf
pop
and
rol
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
or
aas
out
cld
(bad)
call
inc
add
add
idiv
(bad)
call
pop
sub
add
add
(bad)
(bad)
jmp
push
sub
add
push
and
push
adc
pop
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
xor
add
(bad)
(bad)
call
adc
pop
adc
pop
das
sub
adc
xchg
sahf
pop
movntps
pop
adc
cmp
add
add
adc
pop
or
in
inc
add
add
idiv
(bad)
jmp
mov
adc
push
adc
inc
xor
add
pop
add
add
(bad)
(bad)
jmp
sti
(bad)
call
std
(bad)
dec
(bad)
call
(bad)
inc
(bad)
jmp
std
(bad)
(bad)
cmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
jmp
(bad)
call
(bad)
push
add
cmp
sti
(bad)
(bad)
mov
(bad)
(bad)
push
(bad)
(bad)
call
sti
(bad)
inc
add
add
add
mov
(bad)
inc
(bad)
(bad)
dec
std
(bad)
jmp
add
add
cli
(bad)
inc
cld
(bad)
push
cli
(bad)
(bad)
cmp
add
stos
cld
(bad)
jmp
std
(bad)
call
add
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
std
(bad)
(bad)
cmp
(bad)
dec
add
add
push
cmp
(bad)
call
or
adc
or
sete
or
adc
pop
adc
adc
sahf
push
adc
pop
or
add
(bad)
call
or
adc
pop
pop
pop
adc
pop
or
lock
(bad)
call
adc
pop
pop
pop
adc
adc
or
(bad)
(bad)
(bad)
call
add
(bad)
(bad)
call
and
iret
(bad)
(bad)
call
or
pop
pop
adc
adc
or
adc
pop
adc
sahf
pop
sub
mov
(bad)
inc
jnp
add
add
and
add
and
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
adc
out
(bad)
inc
jnp
add
add
add
adc
cli
(bad)
call
inc
add
add
idiv
(bad)
call
sub
fs
(bad)
call
adc
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
or
retf
push
pop
xor
rol
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
adc
pop
cmp
add
xor
mov
add
add
adc
add
push
pop
cmp
add
pop
pop
pop
or
pop
es
rol
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
add
and
add
and
sbb
add
add
(bad)
(bad)
call
push
sub
push
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
push
add
add
add
xchg
add
add
add
xchg
pop
pop
or
sub
or
inc
or
add
sar
jmp
(bad)
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
add
add
sub
add
push
and
(bad)
call
add
(bad)
(bad)
jmp
sbb
rol
add
adc
or
fld
add
sub
add
sub
es
pop
or
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
adc
and
add
pop
push
add
adc
cmps
add
add
jnp
add
add
add
add
add
pop
push
add
or
add
pop
adc
push
add
add
jnp
add
add
add
adc
add
push
and
inc
add
add
idiv
(bad)
jmp
push
adc
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
inc
add
add
idiv
(bad)
jmp
cmp
add
add
or
adc
and
or
sub
sub
sub
cmp
add
add
add
pop
adc
ret
add
or
push
adc
inc
pop
add
add
(bad)
dec
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
clc
add
add
add
add
(bad)
(bad)
jg
add
xchg
add
add
(bad)
(bad)
inc
add
xlat
(bad)
(bad)
call
add
add
add
dec
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
push
add
xchg
add
add
adc
cmp
(bad)
call
add
(bad)
(bad)
call
adc
xchg
jnp
add
add
adc
and
add
pop
push
add
sub
pop
or
pop
inc
add
add
idiv
(bad)
call
or
rol
add
and
(bad)
call
idiv
(bad)
jmp
adc
jnp
add
add
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
push
cmp
(bad)
(bad)
jmp
loopne
sub
pop
inc
add
add
idiv
(bad)
call
adc
or
(bad)
call
rol
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
jmp
stos
add
add
add
adc
and
add
pop
push
add
push
cmp
(bad)
(bad)
dec
add
add
add
add
cmp
inc
add
add
idiv
(bad)
call
adc
cmps
(bad)
(bad)
dec
adc
call
idiv
(bad)
call
cmp
jnp
add
add
(bad)
dec
add
add
add
push
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
dec
pop
pop
and
sbb
add
add
(bad)
(bad)
call
add
jnp
add
add
int3
sbb
add
add
(bad)
(bad)
call
sbb
(bad)
jmp
mov
add
or
cmp
(bad)
jmp
add
add
xor
add
add
add
add
adc
add
push
pop
cmp
add
add
mov
add
adc
pop
adc
sbb
rol
add
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
adc
adc
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
add
add
jo
add
sbb
sub
add
push
cmp
add
sbb
rol
add
and
add
sbb
add
add
idiv
(bad)
jmp
push
or
add
pop
adc
or
mov
add
or
add
add
add
idiv
(bad)
call
adc
jb
add
add
add
add
jo
add
sbb
sub
add
push
pop
or
pop
adc
jnp
add
add
and
inc
add
add
idiv
(bad)
dec
add
add
add
add
cmp
inc
add
add
idiv
(bad)
dec
pop
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
or
pop
and
sbb
add
add
(bad)
(bad)
jmp
stos
pop
adc
adc
inc
sbb
add
(bad)
(bad)
(bad)
jmp
add
add
add
sbb
add
bound
add
and
(bad)
dec
(bad)
(bad)
push
add
cmp
add
cmps
add
add
add
add
add
mov
(bad)
call
add
add
add
cmp
(bad)
jmp
add
add
add
(bad)
(bad)
call
add
add
add
stc
(bad)
(bad)
(bad)
jp
(bad)
push
add
pop
adc
(bad)
cmp
(bad)
(bad)
call
pop
adc
inc
add
add
idiv
(bad)
jmp
add
add
add
add
adc
sbb
add
add
(bad)
(bad)
call
cmp
(bad)
jmp
mov
add
or
or
adc
dec
(bad)
(bad)
dec
and
xor
sbb
add
add
idiv
(bad)
call
or
xor
(bad)
jmp
in
or
(bad)
add
push
pop
push
cmp
(bad)
(bad)
call
add
jnp
add
add
cmps
add
add
idiv
(bad)
call
sbb
rol
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
adc
(bad)
add
push
push
cmp
(bad)
(bad)
inc
jnp
add
add
jo
add
pop
or
outs
lock
push
sbb
jmp
mov
xor
idiv
(bad)
call
or
lods
(bad)
(bad)
jmp
mov
sub
sbb
add
add
(bad)
(bad)
inc
pop
adc
add
push
sbb
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
inc
pop
adc
add
push
pop
(bad)
(bad)
(bad)
call
or
jae
(bad)
(bad)
cmp
(bad)
call
or
sub
add
push
and
(bad)
call
add
(bad)
(bad)
jmp
pop
push
sub
add
push
and
(bad)
call
idiv
(bad)
jmp
add
add
push
pop
pop
cmp
(bad)
call
and
(bad)
jmp
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
lock
push
sub
add
adc
or
push
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
add
add
push
add
add
je
add
and
xor
add
add
add
add
add
add
push
add
add
outs
add
or
xor
add
add
add
add
sub
es
add
outs
mov
xor
and
add
sub
add
push
sub
es
push
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
jge
add
add
sub
add
push
and
add
sbb
add
add
idiv
(bad)
jmp
add
add
add
push
and
add
xor
sbb
jbe
add
add
jae
add
push
jge
add
add
sub
sub
add
push
pop
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
push
and
add
push
sub
sbb
add
(bad)
(bad)
jmp
add
pop
and
add
jge
add
add
or
pop
add
add
add
sub
add
push
and
add
xor
or
inc
or
add
ins
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
call
inc
(bad)
(bad)
call
(bad)
call
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
mov
xor
add
add
add
add
push
add
jnp
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
add
adc
or
rol
add
add
adc
add
push
push
cmp
test
add
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
pop
cmp
add
add
jge
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
sub
jnp
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
jecxz
add
and
inc
add
add
idiv
(bad)
jmp
sbb
adc
jnp
add
add
add
add
add
popf
sub
or
inc
pop
add
add
(bad)
call
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
(bad)
dec
add
add
imul
jmp
sbb
(bad)
push
and
inc
add
adc
or
add
add
adc
add
push
push
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
pop
cmp
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
mov
add
cmp
add
add
add
add
xchg
add
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
cmp
add
add
jnp
add
add
xchg
and
inc
add
pop
or
cmc
add
add
and
add
xor
add
idiv
(bad)
call
push
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
jmp
sub
add
add
add
xchg
and
inc
add
push
cmp
pop
pop
or
mov
add
add
and
add
add
mov
add
or
or
loop
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
or
cmp
add
add
add
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
or
add
popf
sbb
dec
add
add
add
pop
and
add
das
or
add
idiv
(bad)
call
sub
pop
and
add
pop
push
and
pop
pop
or
and
add
aas
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
mov
adc
add
sldt
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
or
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
add
lea
add
and
add
sub
add
push
sbb
mov
add
adc
or
add
add
push
push
sub
and
add
pop
jge
add
add
sub
jnp
add
add
push
add
add
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
or
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
pop
jge
add
add
inc
push
or
inc
push
add
add
add
add
add
add
add
add
add
inc
add
add
(bad)
push
add
adc
add
or
add
and
add
inc
add
add
add
addr16
(bad)
jmp
sbb
mov
add
aas
sub
add
pop
inc
add
add
idiv
(bad)
call
sub
add
jnp
add
add
mov
add
sbb
add
(bad)
(bad)
call
or
jg
(bad)
inc
jnp
add
add
cli
inc
add
sub
(bad)
call
add
(bad)
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
add
add
add
jnp
add
add
mov
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
or
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
fadd
add
pop
or
inc
sub
add
push
cmp
add
add
add
add
add
add
add
add
or
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
cmp
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
sub
add
push
pop
or
test
(bad)
jmp
add
adc
or
pop
add
add
sub
es
pop
adc
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
sub
add
push
and
add
sbb
add
add
idiv
(bad)
jmp
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
add
add
push
sub
add
sbb
add
add
add
pop
pop
and
lea
add
add
pop
and
mov
add
pop
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
adc
inc
and
add
mov
add
adc
add
das
(bad)
(bad)
push
add
add
add
adc
add
push
add
add
add
add
add
sbb
add
add
add
push
add
add
add
(bad)
(bad)
call
add
mov
add
add
add
add
add
add
(bad)
push
add
add
add
add
add
jp
add
jmp
add
add
bound
add
in
add
add
sbb
loop
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
add
inc
add
add
idiv
(bad)
inc
add
add
add
adc
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
pop
and
lea
add
add
pop
and
mov
add
idiv
(bad)
call
cmp
(bad)
(bad)
dec
adc
aas
into
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
icebp
(bad)
(bad)
inc
pop
pop
and
add
sbb
add
add
idiv
(bad)
call
sbb
inc
jnp
add
add
add
add
add
pop
or
sar
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
inc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
adc
xchg
(bad)
(bad)
inc
jnp
add
add
add
or
jnp
add
add
add
jnp
add
add
pop
sbb
imul
jmp
add
add
sbb
pop
(bad)
(bad)
dec
adc
add
add
adc
pop
or
dec
(bad)
(bad)
call
push
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
cmps
es
sbb
das
(bad)
(bad)
call
push
push
aas
and
inc
add
add
idiv
(bad)
call
adc
push
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
adc
(bad)
dec
add
(bad)
jg
add
and
inc
add
dec
add
adc
ds
add
sbb
add
add
(bad)
(bad)
call
push
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
pop
and
lea
add
add
pop
and
dec
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
and
(bad)
call
inc
add
add
idiv
(bad)
call
or
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
pop
and
lea
add
add
pop
and
in
(bad)
call
inc
add
add
idiv
(bad)
call
pop
cmp
adc
add
add
add
out
add
and
add
pop
cmp
std
(bad)
inc
jnp
add
add
xchg
add
add
add
xchg
inc
add
(bad)
call
inc
add
add
idiv
(bad)
call
adc
repz
(bad)
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
jb
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
cld
(bad)
inc
jnp
add
add
sub
add
push
and
push
cmp
jnp
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
xchg
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
movhps
cmp
call
inc
add
add
idiv
(bad)
jmp
add
add
add
add
add
pop
pop
pop
adc
add
add
add
add
or
push
cmp
(bad)
call
add
(bad)
(bad)
jmp
add
add
add
cli
jle
add
sub
add
push
and
or
sub
(bad)
inc
jnp
add
add
adc
pop
pop
pop
xchg
adc
inc
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
push
cmp
cld
(bad)
inc
sbb
pop
add
add
add
sbb
add
(bad)
(bad)
inc
jnp
add
add
pop
adc
loope
(bad)
inc
jnp
add
add
adc
pop
xchg
adc
inc
into
std
(bad)
call
add
(bad)
(bad)
call
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
ds
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
(bad)
sti
(bad)
inc
jnp
add
add
inc
inc
sub
adc
or
add
add
adc
add
push
pop
and
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
jge
add
add
sbb
adc
add
add
idiv
(bad)
call
sbb
jmp
add
add
push
add
add
inc
add
add
idiv
(bad)
call
and
add
and
add
pop
jge
add
add
sbb
mov
jnp
add
add
jnp
add
add
and
adc
add
test
inc
add
add
idiv
(bad)
call
and
call
mov
add
pop
jge
add
add
cmp
and
add
pop
jge
add
add
jnp
add
add
jmp
aas
add
add
inc
add
add
idiv
(bad)
call
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
jnp
add
add
or
add
add
jnp
add
add
inc
sub
push
adc
jnp
add
add
jnp
add
add
jnp
add
add
adc
call
adc
cmp
add
add
inc
add
add
idiv
(bad)
jmp
or
pop
or
call
inc
add
add
idiv
(bad)
jmp
add
mov
inc
add
add
idiv
(bad)
call
or
leave
add
add
pop
jge
add
add
sbb
add
sub
add
push
and
pop
and
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
add
sub
add
push
and
xchg
add
add
add
add
cmp
sbb
add
add
(bad)
(bad)
call
and
ins
push
sub
jnp
add
add
cli
inc
add
add
add
inc
add
add
idiv
(bad)
inc
sub
add
push
cmp
add
es
or
inc
add
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
out
add
and
sub
add
add
(bad)
(bad)
jmp
pop
sbb
cmp
(bad)
(bad)
call
and
add
add
add
(bad)
(bad)
inc
add
add
std
(bad)
push
add
add
add
add
(bad)
(bad)
jmp
add
idiv
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
push
add
add
add
add
std
(bad)
call
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
fdivr
(bad)
dec
std
(bad)
jmp
add
add
(bad)
inc
add
mov
add
pop
std
(bad)
jmp
add
add
(bad)
dec
add
pop
adc
loop
add
and
(bad)
call
add
(bad)
(bad)
jmp
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
call
add
add
add
mov
add
loop
add
and
add
and
(bad)
call
idiv
(bad)
jmp
pop
pop
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
add
add
add
add
aas
xlat
cld
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
jnp
add
add
aas
(bad)
std
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
lahf
(bad)
(bad)
inc
push
jge
add
add
adc
xchg
(bad)
(bad)
inc
and
add
pop
jge
add
add
cmp
(bad)
inc
jnp
add
add
pop
and
jle
add
sbb
add
(bad)
(bad)
inc
or
fadd
add
and
(bad)
call
add
(bad)
(bad)
inc
jnp
add
add
cmp
sbb
add
add
idiv
(bad)
call
and
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
jnp
add
add
pop
push
pop
pop
sub
add
push
and
pop
cmp
std
(bad)
call
idiv
(bad)
jmp
or
jmp
(bad)
call
inc
add
add
idiv
(bad)
call
push
cmp
std
(bad)
inc
and
add
pop
jge
add
add
and
add
pop
jge
add
add
push
jge
add
add
push
cmp
jnp
add
add
test
(bad)
call
inc
add
add
idiv
(bad)
call
or
xchg
std
(bad)
call
sub
jnp
add
add
pop
std
(bad)
call
inc
add
add
idiv
(bad)
call
adc
inc
jnp
add
add
iret
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
pop
std
(bad)
inc
sub
add
add
(bad)
(bad)
call
push
cmp
(bad)
inc
jnp
add
add
popa
cld
(bad)
call
inc
add
add
idiv
(bad)
call
and
sub
add
inc
sub
jnp
add
add
push
add
add
test
idiv
(bad)
call
pop
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
jae
(bad)
inc
jnp
add
add
pop
cld
(bad)
call
idiv
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
out
add
and
cmp
mov
add
push
add
add
inc
add
add
idiv
(bad)
call
push
cmp
inc
add
add
idiv
(bad)
jmp
add
add
add
inc
jno
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
cmp
(bad)
call
idiv
(bad)
jmp
pop
sub
add
adc
or
lds
add
cmp
add
sub
es
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
addr16
cmp
inc
add
add
idiv
(bad)
call
xchg
add
add
icebp
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
inc
add
add
idiv
(bad)
jmp
add
pop
sub
add
add
add
jnp
add
add
add
add
or
pop
add
fld
add
and
sbb
inc
or
add
add
add
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
sub
add
fild
add
sbb
iret
push
sub
add
adc
or
mov
add
sub
add
sub
es
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
sub
imul
sub
push
jge
add
add
and
or
inc
push
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
ret
es
sub
add
jge
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
add
adc
or
adc
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
add
add
je
add
and
xor
add
add
add
add
add
add
push
add
add
outs
add
or
xor
add
add
add
add
add
add
push
add
outs
mov
add
and
adc
or
add
add
add
add
push
add
add
push
add
mov
add
sub
xor
add
add
add
add
add
add
push
add
add
mov
add
and
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
sub
es
add
add
add
sub
add
push
and
add
sub
add
push
sub
add
adc
or
cmp
add
sub
add
push
add
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
sub
adc
or
add
add
add
add
push
add
jnp
add
add
jnp
add
add
sub
add
add
add
pop
jge
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
xor
pop
add
add
add
adc
add
push
pop
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
cmp
inc
add
add
idiv
(bad)
jmp
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
sbb
jle
add
add
jge
add
add
cmp
add
add
add
add
xor
sbb
add
add
(bad)
(bad)
call
push
and
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
sub
add
add
add
xor
add
idiv
(bad)
jmp
add
sbb
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
inc
or
add
data16
(bad)
jmp
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
push
(bad)
inc
add
add
aam
add
xor
add
add
adc
add
push
push
cmp
add
add
add
add
add
add
pop
pop
bound
xchg
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
xchg
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
sub
push
or
inc
or
add
sub
add
sbb
add
mov
(bad)
jmp
add
add
add
add
(bad)
(bad)
call
(bad)
call
mov
sbb
hlt
add
push
and
inc
add
add
idiv
(bad)
jmp
mov
add
add
adc
add
add
sub
add
add
adc
cwde
add
add
or
xchg
add
add
add
adc
push
sbb
add
add
(bad)
(bad)
jmp
hlt
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
pop
jge
add
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
add
add
add
add
push
add
add
add
inc
sub
add
xor
add
add
push
sbb
jge
add
add
or
dec
add
jge
add
add
sub
add
add
add
jnp
add
add
ds
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
add
add
jnp
add
add
add
sub
add
sub
add
add
(bad)
(bad)
cmp
add
scas
(bad)
(bad)
push
(bad)
call
(bad)
(bad)
inc
add
add
add
add
add
add
test
add
jbe
(bad)
jmp
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
fs
add
add
and
add
pop
jge
add
add
sub
add
jnp
add
add
dec
add
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
pop
(bad)
(bad)
inc
jnp
add
add
aas
or
inc
add
add
idiv
(bad)
call
or
hlt
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
or
adc
(bad)
jmp
inc
add
add
add
jnp
add
add
add
sub
add
push
sbb
idiv
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
pop
or
sar
(bad)
inc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
adc
add
sub
adc
or
adc
add
add
add
sub
es
sub
es
add
push
sub
add
push
sub
add
adc
or
and
add
add
add
sub
es
add
and
add
add
outs
jne
add
add
push
arpl
inc
add
pop
shr
std
add
push
sub
adc
or
push
add
add
add
add
add
push
add
sub
add
push
add
pop
adc
stc
add
push
sub
add
xor
add
add
add
add
add
add
push
add
add
add
and
add
push
and
sub
xor
add
add
add
add
add
add
push
add
sti
add
push
and
add
push
and
pusha
sub
add
adc
or
or
add
add
add
sub
es
add
outs
jne
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
add
add
sub
add
push
add
add
sub
add
sub
add
add
sub
add
add
add
push
add
add
sbb
push
add
add
sub
add
add
add
push
add
sub
add
add
jbe
add
sub
add
add
add
sub
add
push
add
sbb
push
add
add
sub
add
sub
add
sub
add
push
add
sub
add
add
sub
add
sub
add
sub
add
add
add
push
add
add
sub
add
add
add
push
add
add
add
push
add
add
add
and
add
js
add
sub
add
push
add
sub
add
add
sub
add
sub
add
adc
add
sub
add
sub
add
sub
add
push
add
add
add
push
add
add
add
push
add
pop
add
sbb
push
add
add
sub
add
add
add
push
add
add
sub
add
sub
add
jge
adc
pop
push
mov
or
mov
mov
and
retf
rcl
dec
mov
or
cmp
add
ins
dec
mov
xchg
xor
ror
(bad)
or
rol
fsubr
aad
mov
jmp
sbb
and
pushf
test
fdiv
and
push
ins
cmps
pop
pop
mov
lea
scas
jmp
push
cmp
dec
mov
call
arpl
mov
scas
int3
hlt
mov
jmp
gs
aaa
jp
stc
stos
jns
js
dec
out
mov
retf
ja
dec
jle
mov
ja
sbb
inc
pop
std
movs
mov
js
sbb
dec
mov
fild
pop
je
push
and
pop
xor
sbb
icebp
fs
cmps
xchg
cmp
xor
jb
or
or
push
pop
sub
jp
add
jle
push
fnsave
out
(bad)
jns
jmp
in
lahf
jb
cli
and
imul
inc
fwait
ret
fisttp
jl
jnp
aam
(bad)
jl
sbb
mov
repnz
popf
test
mov
fst
sbb
dec
outs
inc
jle
les
mov
add
lods
xor
push
ja
pop
cmp
jne
sti
cmp
push
mov
jge
fimul
push
popf
cwde
add
addr16
call
fisttp
outs
(bad)
bound
ret
in
mov
add
jl
loope
xor
hlt
sbb
pushf
inc
cmp
inc
push
jg
out
xor
rol
xor
ds
pop
sub
add
jmp
mov
sub
adc
ss
pop
shr
or
add
xor
pop
fadd
(bad)
and
xchg
push
cmp
nop
lock
loope
test
jmp
mov
out
sub
jge
mov
scas
inc
mov
inc
mov
sub
je
ja
pop
push
xchg
inc
into
jae
pop
mov
and
adc
aam
repnz
fistp
xor
or
(bad)
js
push
mov
ret
mov
ror
push
sub
pop
mov
cmp
xchg
mov
int3
fmul
inc
int3
mov
cdq
xchg
pushf
adc
icebp
mov
je
jo
aaa
add
ins
dec
imul
int
jbe
sti
std
jl
ins
sar
jne
inc
cmc
dec
and
shr
xor
pop
inc
and
jmp
pop
fild
out
in
mov
call
push
and
and
shr
cli
sbb
into
and
popf
in
dec
ins
xor
call
(bad)
cmps
add
les
sbb
adc
sub
sub
mov
call
adc
ret
sbb
fisttp
jns
imul
cmp
bound
enter
inc
jnp
xchg
and
pop
shl
fcmovbe
lds
pop
sub
sahf
test
fdivr
rcr
jns
ror
mov
icebp
call
mov
jmp
(bad)
add
jle
mov
stos
mov
les
out
ins
movs
add
mov
fldcw
xchg
ja
stos
adc
fcomp
inc
loopne
adc
mov
jb
mov
cmp
or
jne
int3
mov
push
mov
xchg
jle
retf
movhps
mov
shr
jl
push
sbb
inc
ins
pop
cld
jl
mov
dec
jbe
dec
hlt
ins
mov
cli
inc
lahf
cld
adc
or
xchg
jo
fadd
icebp
into
mov
les
pop
cmp
dec
pusha
mov
inc
pusha
pop
sbb
gs
or
mov
add
push
add
pop
jg
push
jo
call
cmp
inc
mov
aad
cmp
jmp
push
stos
jbe
ss
ret
leave
pop
pop
call
cmp
mov
daa
adc
pop
push
push
cmp
jbe
inc
cmps
cmp
aaa
std
dec
add
mov
sar
movs
sbb
jmp
cmp
push
call
mov
adc
rol
stos
dec
scas
loope
mov
or
ror
sub
(bad)
fisttp
mov
pop
fcomp
les
clc
push
fstp
inc
out
(bad)
adc
push
mov
push
xchg
enter
inc
and
aas
dec
push
arpl
(bad)
pop
lock
cmp
mov
push
jecxz
out
loopne
popa
call
and
cvtpi2ps
mov
adc
pop
sti
mov
test
gs
pop
dec
pop
gs
add
inc
scas
pop
and
pop
mov
retf
sub
ficomp
jne
(bad)
xchg
clc
jb
mov
ror
cmp
pop
in
rcl
mov
dec
aad
ins
scas
sub
mov
dec
lea
retf
jecxz
or
adc
(bad)
xor
mov
mov
cmp
out
mov
push
mov
dec
push
and
out
dec
loope
xlat
cmp
add
pop
pop
push
aaa
jb
cmp
arpl
add
fld
pop
(bad)
push
adc
jg
loopne
sar
mov
retf
add
fiadd
mov
push
sahf
xor
pop
lock
into
call
out
mov
repz
mov
cmps
aam
push
in
cld
add
mov
mov
fstp
cmp
and
add
test
mov
xor
jge
aas
ficom
xlat
in
xlat
ror
or
dec
loopne
hlt
pop
loop
mov
in
add
sub
data16
xor
lods
addr16
fstp
loope
fst
mov
leave
out
mov
aam
dec
pop
xchg
stos
outs
out
ins
les
(bad)
sbb
mov
xor
fdiv
push
lods
outs
int
cmc
push
frstor
and
sbb
or
mov
inc
sub
push
mov
call
mov
outs
xchg
enter
jle
or
dec
xchg
pop
out
dec
repnz
add
add
cmc
add
ds
pop
add
push
iret
jnp
scas
cmp
jmp
repz
(bad)
jp
sti
das
shl
(bad)
sbb
or
cmps
inc
xchg
cmp
ins
out
(bad)
cmp
(bad)
inc
jp
mov
push
push
inc
pop
jnp
and
leave
sbb
cdq
in
cmp
mov
(bad)
loop
es
add
jg
jne
xor
test
mov
dec
mov
xor
sar
aaa
sub
pop
rcl
inc
dec
xchg
scas
cmp
pop
cdq
lods
clc
and
xor
(bad)
xor
mov
push
ins
mov
mov
lock
ins
push
in
pop
repz
ds
cdq
out
push
cwde
xchg
pop
xor
jmp
das
add
xchg
dec
dec
cmp
fistp
(bad)
push
dec
add
shl
push
mov
dec
les
add
adc
pop
jnp
add
push
mov
mov
fsubr
mov
push
data16
outs
xchg
das
jo
inc
and
icebp
scas
hlt
sbb
mov
xor
xlat
push
xor
inc
fs
adc
jle
mov
mov
setne
and
pusha
xor
stc
fcom
xor
jg
push
add
cs
rol
cmps
sub
je
scas
shl
sub
push
xchg
add
js
inc
ret
cmc
shr
push
sbb
aad
dec
shl
sub
mov
xchg
or
inc
mov
add
outs
in
js
leave
sahf
mov
rcr
adc
fld
jae
mov
pop
nop
jne
(bad)
aad
pop
mov
cmp
cmp
das
outs
adc
movs
enter
xor
into
in
inc
aas
ror
mov
fistp
mov
xchg
mov
repz
imul
fcomi
mov
mov
pop
pop
inc
dec
bound
cmp
loope
mov
xor
mov
push
call
push
add
fist
jne
and
inc
out
mov
sbb
outs
jnp
inc
mov
(bad)
mov
call
lds
outs
not
je
ds
sub
xchg
dec
or
add
and
sbb
push
imul
cli
(bad)
fdiv
test
repz
pop
inc
push
push
push
xchg
sub
pop
pushf
adc
ins
loop
or
lahf
jmp
mov
and
xor
xor
popf
mov
(bad)
jb
sbb
pop
or
cmp
jnp
mov
icebp
pop
scas
jg
mov
aam
in
sub
stc
(bad)
out
cmp
aas
pop
ret
sbb
rcl
fsub
sub
push
push
mov
jmp
cs
xor
inc
(bad)
adc
js
outs
cli
xchg
jo
mov
sahf
fnsave
or
adc
int
arpl
icebp
push
cmc
movs
adc
retf
outs
icebp
stos
dec
xchg
jmp
cmp
rol
push
mov
inc
fdivr
cwde
push
movs
push
xchg
lds
aas
scas
jp
scas
mov
and
cs
or
lahf
mov
cmps
add
and
mov
add
aad
jne
test
jmp
(bad)
cdq
push
cmps
add
pop
pop
inc
xchg
xchg
xor
jp
adc
lods
out
(bad)
retf
loope
imul
push
(bad)
xchg
pop
stos
push
fld
loopne
jge
inc
fsub
and
adc
jnp
jge
and
dec
ror
lods
and
jmp
out
mov
stos
clc
fbstp
adc
sub
push
fcmovnbe
or
loope
pop
pop
shl
mov
in
xor
jg
out
repnz
out
mov
jbe
mov
dec
in
push
lahf
pop
(bad)
psrlq
dec
or
shr
jo
and
push
mov
jecxz
jge
sbb
cdq
adc
xor
sbb
pop
and
jo
xchg
int3
(bad)
aas
fnstsw
in
iret
loop
mov
enter
(bad)
aam
addr16
lock
or
mov
dec
mov
mov
push
cmp
(bad)
mul
or
scas
inc
clc
sahf
stos
cmp
sbb
jb
ret
mov
fidivr
mov
test
aaa
scas
xor
lods
xchg
sub
in
mov
sbb
jnp
cmp
pop
push
inc
cmp
fidivr
pusha
dec
inc
not
and
dec
mov
xchg
mov
ss
jo
sub
inc
dec
clc
jnp
or
inc
push
test
mov
iret
adc
sbb
gs
cli
mov
js
(bad)
mov
mov
movs
xlat
sti
out
mov
inc
sbb
aas
je
inc
(bad)
movs
pop
pop
lods
into
repz
adc
xchg
inc
pop
add
ja
dec
ret
xchg
mov
mov
das
in
mov
mov
aad
inc
(bad)
xchg
pop
pop
(bad)
icebp
push
mov
call
cmps
jp
push
mov
fcom
repz
adc
jae
sub
xchg
aas
daa
mov
aad
and
repnz
fdivr
fbld
test
ret
jge
int3
add
sbb
inc
ret
mov
cmps
cmp
xchg
inc
out
or
aas
pop
push
call
(bad)
in
xlat
mov
xor
mov
push
or
or
and
loop
rcl
and
cmps
mov
ins
sbb
mov
les
(bad)
retf
inc
test
jb
pop
pusha
dec
lds
movs
mov
jae
sub
or
in
scas
mov
fist
into
cwde
jmp
cmp
sbb
push
(bad)
es
dec
pop
pop
and
push
pushf
test
push
push
xchg
enter
or
push
push
xchg
dec
or
pop
push
imul
ret
dec
and
jmp
xor
hlt
lods
sub
sar
push
icebp
dec
jb
jmp
sub
gs
mov
jp
xor
dec
dec
add
imul
cmp
int
div
sbb
call
test
daa
push
fxam
icebp
mov
mov
cwde
cmps
lahf
imul
push
sub
aad
loop
jno
or
cmp
pusha
xchg
ss
ret
dec
cwde
retf
in
jnp
dec
jecxz
icebp
mov
pusha
rcl
fs
das
mov
pop
push
push
into
int3
fs
pop
add
push
je
dec
mov
cli
dec
push
(bad)
je
stc
movs
adc
xor
mov
pop
shr
push
jmp
sub
lahf
cs
dec
mov
sar
sbb
add
mul
outs
das
mov
loopne
adc
iret
movs
cmp
dec
cmc
mov
outs
lods
xor
adc
ret
int
out
sub
cmp
xor
inc
adc
out
outs
arpl
stc
and
ret
or
jne
test
adc
mov
add
clc
retf
xchg
sti
test
cmp
jmp
(bad)
lods
in
and
out
dec
mov
mov
dec
mov
in
fdiv
adc
pop
jge
xchg
pop
push
adc
lahf
pop
cmp
adc
or
mov
sbb
adc
aam
add
loope
adc
out
call
lods
mov
pop
sbb
jecxz
and
cmps
add
inc
fldenv
xlat
(bad)
scas
mov
in
sbb
fld
(bad)
fmul
inc
xchg
fucomi
sbb
jecxz
push
xlat
mov
ret
int3
xchg
jmp
push
mov
dec
fwait
leave
ins
inc
dec
adc
mov
mov
xchg
sub
xor
jmp
cmp
xchg
pop
frstor
sti
std
pop
mov
sbb
mov
test
cmp
out
push
jb
scas
pop
mov
or
iret
add
sahf
fs
and
addr16
sbb
aad
stos
add
mov
xchg
(bad)
sbb
push
pop
mov
xchg
bound
es
push
call
push
std
not
cli
idiv
and
stc
repz
cmps
out
sub
dec
cmp
shr
jns
neg
in
xchg
scas
jl
or
addr16
pop
or
sbb
cli
stos
test
cld
adc
repz
jl
(bad)
ja
sub
sub
pop
adc
adc
sbb
push
outs
add
fcomp
sub
push
sub
sbb
sahf
outs
push
cmp
cli
(bad)
mov
adc
fistp
in
adc
ja
sub
pop
aas
fs
add
mov
in
or
and
mov
js
(bad)
or
mov
dec
in
add
out
dec
push
ror
in
push
jne
sbb
dec
mov
inc
data16
pop
mov
fs
xor
or
ficom
mov
push
mov
call
push
mov
mov
mov
pop
imul
cmp
(bad)
jl
cld
aam
scas
jo
sbb
in
jo
rcl
pushf
dec
sub
or
pop
dec
dec
(bad)
inc
sub
daa
imul
(bad)
mov
push
jmp
mov
cmps
fisttp
sbb
(bad)
imul
sub
out
xchg
test
add
pop
mov
ds
cmp
(bad)
out
jecxz
cmp
ds
sbb
es
cmp
enter
dec
data16
(bad)
dec
pusha
pop
ins
mov
repz
dec
mov
pop
(bad)
sti
cld
mov
sahf
and
xor
dec
add
sub
sbb
sub
xchg
outs
push
cdq
lds
xor
xchg
int
mov
leave
(bad)
fmul
sbb
fldcw
iret
aaa
fcomp
jb
into
in
fs
dec
leave
jge
imul
dec
scas
sbb
jbe
loope
and
ins
inc
cmp
clc
in
or
aas
(bad)
imul
hlt
data16
dec
aas
std
lahf
adc
ror
jns
fnstcw
lods
jnp
popf
sub
aaa
mov
iret
push
cmp
jmp
fisub
lock
push
xlat
sub
imul
cmp
jmp
adc
xchg
lock
or
jne
lods
mov
jge
jo
xchg
mov
pop
jmp
fist
dec
fidivr
ret
inc
xchg
xchg
fstp
pushf
pop
(bad)
out
add
loop
pop
cs
call
jb
or
inc
les
xchg
scas
fmul
adc
test
out
les
xor
xchg
push
and
cli
shl
ror
jo
jge
cld
add
xchg
mov
retf
inc
or
lds
and
fdiv
out
xor
jmp
mov
aad
inc
fdiv
push
je
xchg
mov
pusha
push
loope
push
rcl
pop
push
lea
stos
or
sbb
popa
push
fisub
dec
mov
test
mov
cmps
lods
aaa
pop
or
ret
cdq
je
(bad)
js
(bad)
cmp
jmp
repnz
out
hlt
paddusw
dec
or
mov
mov
test
sahf
call
cmp
push
nop
jp
cmp
add
cli
retf
and
outs
ins
lods
add
mov
xor
das
push
xor
jmp
into
push
push
repz
sar
adc
mov
cmp
test
jne
sbb
(bad)
xor
in
mov
sbb
int3
stos
outs
iret
jmp
or
stos
loopne
or
adc
ret
sub
xchg
iret
jle
in
dec
sbb
test
jnp
xor
mov
(bad)
dec
popa
jge
xchg
retf
test
faddp
test
sti
loopne
es
xor
pop
xlat
(bad)
call
mov
add
pop
ins
cmp
or
pop
or
cmp
mov
inc
cmp
adc
jecxz
inc
mov
xor
sbb
push
dec
sub
jmp
hlt
es
popa
push
dec
pop
mov
ret
adc
push
sub
mov
jbe
cmc
sub
mov
test
mov
cmp
push
sub
push
jmp
int
push
mov
fild
sbb
je
xor
jnp
popa
enter
adc
(bad)
sti
xchg
(bad)
fwait
mov
jmp
xor
jbe
mov
xchg
or
scas
sbb
jno
add
and
cmp
in
jge
sbb
stc
adc
jmp
loopne
jmp
ret
enter
xchg
jle
out
xor
pop
or
das
int3
leave
mov
mov
xchg
cwde
jbe
mov
imul
or
(bad)
lock
mov
add
gs
icebp
out
inc
mov
ror
sub
mov
or
sbb
fs
test
in
ss
(bad)
in
inc
mov
xchg
es
inc
fcom
lahf
push
outs
ud1
pop
outs
nop
mov
test
jge
mov
xchg
xor
repz
xlat
cdq
fs
repz
in
lock
sar
cli
sub
enter
movs
jecxz
inc
iret
and
add
push
lds
ds
adc
push
or
or
jnp
xchg
sbb
(bad)
int
inc
or
(bad)
and
cs
cmp
fnstcw
dec
es
mov
gs
push
mov
mov
mov
stos
jns
das
popa
or
mov
fwait
inc
jle
pop
fnstsw
cpuid
sbb
xchg
in
push
xor
imul
sub
xchg
aas
ret
call
inc
scas
int3
sub
mov
leave
pop
and
adc
cmps
xchg
test
pop
xchg
adc
add
fwait
or
cmp
pop
adc
xor
mov
jae
or
dec
mov
ja
push
punpcklbw
mov
inc
leave
or
mov
mov
inc
sahf
(bad)
syscall
retf
and
dec
and
ret
clc
push
adc
pop
std
push
movs
sub
dec
loope
push
data16
(bad)
cmp
call
shr
scas
(bad)
or
mov
pushf
sbb
div
movs
loop
push
mov
push
mov
push
loopne
scas
cmp
(bad)
sti
in
retf
inc
sub
mov
jae
adc
xor
fild
pop
xchg
adc
dec
outs
dec
(bad)
mov
xchg
jge
stos
push
js
mov
and
sub
xchg
xchg
adc
pop
and
add
push
ins
fsub
into
das
retf
cmp
jmp
push
fidiv
lahf
jb
out
sbb
xchg
adc
fimul
loopne
xor
pop
mov
(bad)
push
ja
jmp
cld
sub
add
shl
or
movs
push
(bad)
int
adc
cmp
pop
jecxz
ins
das
mov
mov
repz
jae
leave
push
out
lds
adc
xchg
retf
xchg
push
jmp
push
and
inc
out
adc
push
vandnpd
ins
inc
cmp
sub
neg
adc
mov
dec
in
iret
rcr
data16
enter
adc
jo
call
retf
(bad)
fsubr
cmc
push
xor
sti
jg
push
out
mov
dec
out
mov
or
imul
or
sbb
pop
nop
jae
push
add
push
cmp
pop
push
mov
pop
xchg
scas
and
and
lods
movs
test
pop
or
xor
pop
mul
and
bound
ret
xchg
lahf
push
fbld
sbb
out
idiv
outs
pop
jbe
sbb
icebp
jmp
pop
mov
popf
jnp
mov
ds
and
in
jl
mov
call
in
xor
call
xor
in
inc
rcr
xchg
add
std
jmp
adc
adc
mov
test
pop
and
aas
inc
jae
in
mov
mov
push
ins
mov
push
nop
das
or
cmp
jne
sbb
push
(bad)
iret
push
or
test
in
adc
dec
xchg
aas
inc
call
pop
aam
jns
add
sbb
outs
jb
fsubr
ins
retf
loope
cmps
loop
rcr
(bad)
fisubr
mov
ror
pop
fsubr
add
test
ret
or
in
(bad)
(bad)
lods
jg
add
mov
ins
aaa
cmp
xchg
mov
outs
test
push
xchg
ret
adc
jns
stc
das
add
(bad)
sar
jns
xchg
or
fld
test
ret
fcmovnbe
inc
in
rcr
cdq
ret
cdq
dec
dec
dec
pop
cmp
and
ins
add
sub
aaa
or
and
call
sbb
cld
out
aam
sbb
dec
cld
jnp
push
or
pop
ror
dec
lds
je
out
dec
mov
push
std
ds
data16
push
or
aam
pop
stos
mov
in
call
(bad)
xchg
cmp
push
or
fs
(bad)
cli
dec
sbb
pop
ret
mov
push
cmp
iret
inc
cwde
push
mov
jne
in
fs
and
push
mov
or
push
mov
gs
pop
or
movzx
(bad)
frstor
loopne
push
mov
and
call
xchg
sbb
and
pop
(bad)
and
inc
into
push
xor
push
sub
jge
fsubr
push
mov
clc
sbb
jmp
pop
aaa
ficom
jmp
fwait
ins
repz
mov
jg
jno
push
pop
scas
adc
jno
retf
out
xor
hlt
push
jp
scas
(bad)
mov
add
cmp
test
push
ss
ins
lods
jecxz
add
mov
arpl
es
cli
or
and
or
push
or
mov
ficom
xor
shl
es
pop
scas
and
mov
mov
sbb
push
sbb
dec
push
in
(bad)
mov
pop
lods
inc
lods
dec
ret
out
pushf
mov
pop
jnp
int
ins
push
ret
(bad)
cmp
out
xor
pop
cld
mov
cld
jp
xchg
xor
jno
ss
or
mov
jae
mov
mov
push
xor
ja
cwde
jle
mov
cmc
imul
cmp
retf
clc
cmps
sub
cmp
hlt
add
inc
xchg
pop
push
cs
dec
xlat
sbb
(bad)
js
pusha
in
mov
sub
jecxz
and
dec
outs
outs
lds
test
adc
mov
and
rcl
outs
or
inc
sahf
pop
push
shl
pop
xchg
xchg
lods
(bad)
cmp
jo
shl
retf
imul
push
push
in
pop
mov
xchg
addr16
gs
cli
dec
sbb
push
mov
fwait
pop
xor
and
mov
or
xor
lds
sbb
(bad)
fdiv
sbb
pop
dec
push
adc
fs
push
stos
ins
repnz
(bad)
pop
cs
stc
pop
fimul
fsubp
or
mov
clc
sub
loop
push
mov
push
das
call
rcl
push
xor
jae
test
(bad)
das
clc
push
int
xor
push
inc
xchg
imul
les
ss
nop
mov
shl
retf
jno
xchg
mov
adc
xchg
jecxz
jg
ja
shl
pop
fidivr
aam
popa
adc
les
push
inc
inc
sub
jge
pop
mov
xor
popa
iret
jle
and
pop
mov
pop
jmp
sbb
fwait
stos
cs
pop
and
ficom
inc
push
cmps
jb
repnz
or
pop
in
xchg
or
adc
sbb
mov
ror
jbe
pushf
xchg
add
(bad)
ss
jecxz
rol
xor
test
mov
ins
lds
jo
mov
ja
jl
sub
mov
dec
xchg
(bad)
adc
ds
add
sti
je
imul
mov
jmp
mov
mov
fucom
cmp
ret
lea
pushf
add
shl
cdq
popf
add
adc
mov
sar
mov
xchg
loop
add
cmp
pop
movs
not
scas
dec
push
cmp
xor
loop
leave
popa
sahf
mov
pop
lock
mov
repnz
ins
cmp
aam
int
(bad)
fmul
test
hlt
sub
ror
movs
pop
ds
xor
data16
in
dec
push
loope
dec
fidiv
sub
add
push
out
sub
adc
jmp
xor
shl
or
sub
pop
push
mov
xor
dec
mov
call
mov
repz
sti
scas
cmp
stos
mov
add
xor
cmp
xchg
cdq
sub
(bad)
jmp
inc
(bad)
lea
mov
sbb
call
call
or
cbw
les
lock
mov
rol
arpl
jb
(bad)
ret
cmc
fimul
mov
nop
nop
clc
(bad)
jb
aad
repz
push
mov
or
enter
fpatan
xor
pusha
push
mov
ins
pop
dec
inc
test
jnp
stc
clc
imul
mov
xor
and
mov
jno
(bad)
fidiv
mov
fiadd
pop
jae
cmp
dec
cmps
mov
sbb
or
sub
(bad)
cmps
(bad)
fcomp
dec
dec
inc
push
and
adc
push
dec
nop
push
push
sbb
(bad)
xor
ins
nop
sub
daa
adc
cmp
sub
fdiv
lods
fnstcw
sbb
data16
push
mov
cmp
push
sub
dec
push
mov
push
mov
ins
gs
xor
push
sbb
mov
xchg
stos
dec
stc
xchg
aas
in
sbb
in
popf
xchg
call
ins
mov
sbb
and
(bad)
std
mov
lahf
pop
xchg
add
prefetch
or
sbb
aad
arpl
and
adc
mov
xor
repnz
sub
(bad)
repz
call
jecxz
and
ret
int3
xor
push
inc
and
cmc
(bad)
ficomp
pop
jp
sbb
push
xchg
icebp
mov
aas
int
test
inc
inc
xor
xchg
and
cdq
jnp
xor
pop
mov
push
imul
push
xchg
push
jmp
jmp
push
mov
cmp
sub
cmp
fwait
pop
xor
pop
mov
fst
push
jmp
jg
add
enter
adc
pusha
jecxz
mov
adc
jl
lahf
fldenv
cmps
aam
iret
xchg
(bad)
jns
push
sub
fiadd
mov
leave
dec
(bad)
aad
lods
rcl
aam
scas
int3
cmps
test
call
aaa
pop
xor
fst
jge
popf
je
and
add
dec
(bad)
mov
adc
xor
or
and
push
stos
ins
(bad)
pop
mov
test
xor
pop
mov
xor
popf
mov
scas
test
lods
xor
push
rol
cmps
push
imul
fist
sti
lods
cli
jp
clc
xor
xchg
aaa
mov
mov
loop
dec
scas
adc
enter
and
xlat
xchg
sub
and
into
repz
jmp
adc
(bad)
xchg
lds
mov
(bad)
movs
lock
sti
call
(bad)
cdq
pop
clc
jnp
push
test
and
xor
sub
hlt
frstor
cmps
(bad)
sti
int
sub
enter
jp
lahf
sbb
in
pop
xchg
and
test
sub
das
cmp
jg
(bad)
(bad)
mov
out
movs
jmp
push
popa
dec
neg
(bad)
lock
xchg
lods
mov
push
xchg
pop
mov
(bad)
jae
leave
out
push
movs
mov
pushf
jmp
not
lahf
rol
pop
mov
inc
(bad)
push
fs
mov
mov
sub
and
xchg
imul
cli
add
call
pop
sbb
ret
jge
lods
xchg
adc
stos
inc
xchg
jl
or
ss
inc
clc
movs
fwait
cdq
shl
arpl
mov
cmp
dec
xor
xchg
dec
dec
fcom
out
fild
into
lock
jo
or
jge
adc
mov
(bad)
dec
cli
test
jb
leave
mov
adc
bound
gs
add
repz
cmp
ins
inc
push
add
scas
fst
xchg
pop
jne
call
add
(bad)
mov
adc
in
jmp
cli
imul
js
jle
out
mov
adc
cmps
or
stos
jo
push
mov
sbb
jmp
push
cmp
ret
pop
add
loopne
mov
sub
in
cli
pop
sub
enter
sub
xchg
repnz
mov
sub
adc
les
les
std
cli
inc
mov
or
daa
cmp
xchg
fimul
inc
mov
inc
(bad)
mul
cdq
add
xchg
out
or
inc
fcmovnu
xchg
inc
test
cmps
sub
aam
push
jg
cmp
xchg
xchg
lds
add
hlt
fwait
add
mov
mov
jmp
or
or
xor
push
int3
fadd
pushf
adc
ret
or
enter
mov
bsr
sbb
aaa
jl
dec
es
vmovaps
popa
fcomp
rol
mov
xchg
dec
call
out
mov
jl
popa
dec
lock
push
fisub
(bad)
and
stos
add
or
movs
ss
popa
xor
div
push
imul
je
and
or
and
xor
int
dec
mov
cmps
jp
mov
add
pop
cmp
push
out
das
(bad)
std
js
jb
push
(bad)
aam
cld
push
sbb
push
sbb
shl
pop
loope
cmp
xchg
inc
scas
lods
xchg
jle
fucomip
pop
push
sbb
and
div
sbb
or
or
imul
aam
adc
fs
jge
ins
jmp
loop
push
ret
loop
pop
shl
pop
outs
jo
add
pop
sbb
xchg
pop
movs
cmps
inc
lock
call
repnz
adc
test
and
push
sub
mov
neg
pop
sub
cmps
hlt
inc
sar
nop
mov
shl
cmp
add
into
add
mov
(bad)
push
xchg
add
call
add
xchg
adc
xchg
adc
ja
ror
jp
out
jl
jno
lods
add
sub
jno
sar
add
xchg
stos
nop
mov
inc
or
enter
int
mov
xor
dec
mov
es
das
int3
add
retf
jno
jg
add
pop
push
fsub
jae
clc
mov
cmp
cmps
mov
test
push
cmp
cmps
cmp
call
movs
stc
sbb
sbb
xchg
jne
cmp
movs
pop
sub
mov
mov
xchg
test
lock
xchg
retf
mov
cmc
inc
and
pop
inc
sbb
mov
fcomp
xlat
jb
imul
mov
inc
xor
not
shl
sar
add
mov
fs
dec
mov
aaa
call
push
jb
jl
xchg
jne
push
aam
sub
cs
int
fwait
lds
(bad)
repnz
cmps
jp
mov
adc
out
jp
push
mov
ja
fcomi
and
jg
push
stos
sub
jmp
(bad)
and
(bad)
inc
into
add
ins
out
add
scas
sub
cs
bound
push
ret
out
stos
jmp
adc
mov
cld
push
mov
dec
popa
and
jge
pop
mov
mov
adc
cmp
hlt
cld
ins
cmp
fdiv
fwait
xor
js
pop
repnz
ret
pop
pop
jne
push
jno
fwait
or
gs
das
mov
or
mov
add
std
(bad)
jmp
scas
sar
pop
lahf
cmp
ds
mov
leave
add
pushf
add
retf
aaa
gs
push
jle
push
mov
hlt
push
sbb
adc
movs
cdq
inc
(bad)
xor
mov
xor
push
into
stc
mov
and
dec
lds
gs
into
cli
adc
mov
cs
cdq
sahf
mov
jg
cwde
les
mul
(bad)
les
aaa
jge
sbb
mov
test
fmulp
loopne
sti
outs
cmps
pop
push
mov
shl
sbb
mov
and
std
sbb
pop
mov
pop
mov
inc
pop
dec
dec
fist
cld
sub
mov
or
jmp
pop
xchg
enter
sbb
push
(bad)
push
call
lods
dec
xchg
push
int3
jbe
add
ss
push
addr16
cmp
sub
je
jo
inc
jb
jae
shr
adc
mov
outs
enter
add
sbb
fstp
dec
imul
jo
xchg
std
mov
mov
pop
mov
not
sbb
mov
retf
in
test
push
repnz
jae
icebp
jecxz
jp
push
clc
int3
movs
fild
mov
pop
mov
dec
and
push
jns
sub
jge
mov
test
push
mov
inc
cmp
mov
shl
push
fs
nop
aad
(bad)
mov
and
xor
add
inc
shr
adc
xor
pop
dec
movs
iretw
xchg
(bad)
xor
outs
jecxz
adc
push
clc
retf
inc
rol
or
ss
sub
aaa
mov
int
or
inc
push
cs
fldcw
jne
dec
adc
call
rol
in
test
push
bound
mov
rol
clc
add
movs
rol
je
(bad)
lods
mov
pop
cld
outs
xchg
cmp
push
test
and
ret
enter
sub
lods
or
and
pop
clc
mov
cli
sub
dec
inc
dec
sbb
rcr
cmp
fcomp
aas
inc
call
adc
int3
pop
clc
lods
inc
mov
test
retf
test
inc
and
mov
(bad)
fadd
mov
mov
sub
sub
imul
jae
mov
add
push
mov
(bad)
xor
pop
ins
in
cld
jb
inc
outs
xor
push
jnp
ja
pop
adc
cmp
inc
(bad)
cmp
stc
inc
mov
sbb
scas
in
push
imul
fidiv
out
dec
jbe
call
and
jmp
xor
out
stos
(bad)
les
jnp
scas
dec
push
mov
pop
ror
adc
aam
outs
mov
push
ins
scas
lds
call
xor
xor
enter
mov
movs
mov
repz
sub
push
mov
cmp
stc
xchg
pop
pop
std
fs
inc
mov
addr16
aad
ds
aad
jle
(bad)
mov
pop
lods
mov
add
movs
xor
jnp
mov
add
inc
dec
xlat
mov
fnstcw
icebp
mov
mov
jb
cmp
inc
or
add
cli
inc
out
sbb
(bad)
int
push
mov
mov
sahf
add
push
test
xor
push
es
pop
xchg
shl
mov
hlt
retf
test
mov
daa
push
in
push
lds
or
jns
call
dec
arpl
int
pop
xchg
stc
sbb
xchg
fdivr
movs
jae
cmp
jg
push
push
sub
loopne
pop
ja
stos
and
bound
push
sbb
shl
sbb
cmps
xchg
(bad)
cmps
cmp
addr16
mov
pushf
mul
cwde
add
aaa
cmp
xchg
dec
movs
arpl
fmul
mov
push
and
imul
xor
add
sub
in
or
test
call
pop
sti
push
scas
adc
pop
bound
pop
xchg
jg
cdq
pop
out
fld
idiv
pop
push
lods
and
(bad)
mov
(bad)
pop
test
mov
(bad)
sub
js
pop
in
dec
xchg
and
push
lock
div
loop
gs
inc
mov
shl
call
inc
cmp
scas
jecxz
or
cdq
daa
push
es
icebp
es
jg
inc
(bad)
fmul
mov
das
sub
popf
xchg
inc
and
test
push
cld
dec
fs
inc
test
cmp
dec
xor
jae
jg
jp
fdivrp
pop
or
outs
inc
cmp
std
sbb
ret
push
sar
das
cwde
jno
arpl
imul
pop
dec
push
pop
or
sbb
mov
mov
and
inc
adc
(bad)
(bad)
xor
sub
(bad)
ss
sahf
mov
movs
enter
mov
int3
jo
push
in
sub
(bad)
mov
adc
dec
vphaddwq
add
mov
push
mov
pop
aaa
mov
sub
sbb
pushf
je
gs
sbb
sti
out
and
and
jle
addr16
inc
xchg
sbb
pop
xchg
ins
and
shl
push
fcom
sbb
mov
mov
or
loop
xchg
mov
adc
mov
and
and
stos
test
int
sahf
and
sub
mov
jge
mov
mov
push
dec
loop
cld
popf
ins
inc
push
shl
mov
push
out
cmp
daa
jne
mov
sub
sahf
cmp
mov
fldcw
push
add
xor
xor
pop
les
push
cmp
jns
push
cmp
push
clc
mov
fidiv
mov
adc
aaa
jmp
sub
mov
enter
bound
add
ins
push
jle
out
jne
retf
add
fwait
mov
sub
out
or
jb
das
not
jno
push
or
mov
test
cmp
cld
lods
sub
js
js
xchg
dec
push
or
inc
cmp
imul
je
shl
push
sub
inc
aas
arpl
paddusb
dec
inc
aam
es
mov
aas
jae
sbb
sbb
(bad)
cmps
pop
scas
push
enter
pop
jmp
sti
push
sbb
arpl
mul
xchg
push
das
xor
hlt
movs
sub
ins
jnp
movs
inc
mov
fmul
mov
xchg
ror
and
out
lahf
mov
jne
shl
jp
loope
xlat
cmp
inc
(bad)
jmp
or
mov
fisubr
mov
cld
xor
mov
xor
jne
cmp
ins
loop
push
mov
sub
sub
sbb
data16
cmp
inc
jo
mov
sbb
dec
or
jbe
jno
mov
xchg
mov
pop
loopne
cmp
fisttp
lds
add
xchg
push
shl
mov
mov
push
leave
jmp
xor
sbb
push
mov
outs
mov
dec
call
push
xor
rcl
push
arpl
jnp
aas
imul
out
int
pop
shr
pop
out
jne
aam
fucomp
sub
mov
mov
mov
and
out
mov
sbb
xor
ror
mov
test
inc
ror
dec
es
icebp
cli
jge
dec
frstor
popa
ds
vpermw
add
fimul
add
dec
dec
fld
ror
xchg
out
cmp
out
mov
push
mov
int3
leave
pop
cmp
push
mov
cwde
loope
into
dec
jge
fcom
push
dec
sbb
lahf
rol
mov
les
jns
stos
sbb
enter
jmp
cmps
repnz
xor
adc
div
dec
(bad)
out
inc
sub
jbe
cli
gs
clc
rcr
call
loop
icebp
inc
xor
test
leave
pop
aas
rcl
mov
ror
adc
adc
push
adc
inc
jmp
pop
xor
push
retf
adc
dec
adc
jl
inc
push
addr16
sub
stc
out
jno
nop
aaa
(bad)
jnp
jae
push
(bad)
jne
sti
inc
(bad)
pop
cs
mov
scas
test
jmp
mov
aad
div
(bad)
inc
xchg
inc
push
ins
rol
mov
les
xor
(bad)
enter
or
rcr
in
jmp
xor
sub
push
mov
mov
adc
enter
jb
hlt
hlt
test
xchg
imul
sbb
mov
add
mov
pop
cmp
popa
aam
pop
out
mov
(bad)
xchg
retf
cmp
add
in
mov
push
jne
ror
fld
sti
sti
and
dec
int3
sub
and
dec
retf
push
shr
or
cmps
(bad)
out
push
adc
add
dec
mov
stos
in
xchg
adc
jo
sbb
loope
into
mov
jbe
dec
jne
cmc
mov
retf
aas
mov
sar
ror
cmp
cmp
test
jecxz
nop
test
mov
sub
cmps
psraw
loopne
push
or
push
icebp
inc
rdmsr
lock
inc
(bad)
mov
inc
and
loope
mov
retf
arpl
jnp
enter
pop
stc
ins
ror
sub
retf
pushf
jbe
cmp
mov
push
xchg
jle
(bad)
in
enter
push
(bad)
dec
in
add
clc
cmp
(bad)
in
cmps
sub
lahf
aaa
int
jge
aaa
fstp
ins
call
pop
sbb
movs
mov
div
push
retf
iret
repnz
push
mov
js
and
or
mov
clc
mov
addr16
sub
xchg
push
mov
or
int
mov
sbb
fistp
daa
sbb
jb
mov
(bad)
shl
loop
call
jbe
sbb
sar
push
inc
inc
aad
mov
mov
mov
mov
jle
stc
dec
aam
jmp
(bad)
nop
or
xor
int
fst
mov
out
sbb
or
repz
mov
out
inc
push
xor
xor
outs
fsub
add
cmps
fwait
(bad)
mov
jne
pop
dec
mov
mov
in
sub
jb
push
cmp
jge
ins
jns
xchg
pop
add
stos
rcr
mov
pop
push
xor
dec
jge
sbb
dec
jg
retf
into
mov
imul
aam
sub
jb
push
add
mov
fwait
lods
push
sbb
jne
scas
jns
fist
cmp
sub
(bad)
test
sti
inc
xchg
inc
mov
sbb
pop
sbb
je
in
hlt
mov
adc
mov
or
jmp
adc
fwait
jb
xor
into
dec
sbb
jmp
bound
retf
ja
and
xor
xor
mov
aas
enter
lods
mov
mov
aad
mov
es
ins
push
push
add
and
adc
fnsave
loop
add
call
jmp
jp
add
leave
adc
pop
and
push
push
test
test
or
mov
and
fcmovbe
jl
push
enter
xchg
pop
xchg
lock
lds
inc
jno
das
pop
add
je
mov
mov
adc
icebp
inc
inc
pop
not
in
adc
mov
add
cli
jns
xor
pop
xor
add
cli
es
adc
mov
push
arpl
jg
and
and
mov
sbb
(bad)
shl
sahf
lock
jmp
jo
or
fstp
aad
push
lds
sub
jne
ins
nop
pop
aas
xchg
adc
cmp
xchg
cmp
test
jmp
ds
pop
popf
clc
inc
retf
retf
sub
sub
push
mov
fstp
mov
sbb
pop
xor
push
push
xor
div
inc
mov
pop
xchg
fisub
leave
push
dec
push
and
out
test
pop
sar
out
inc
retf
jmp
xchg
or
or
mov
push
fild
ficom
cmps
add
sub
pop
adc
movs
pop
xor
loop
movs
(bad)
(bad)
fisub
sub
arpl
jb
inc
pop
sbb
cmp
mov
mov
mov
call
addr16
fsub
scas
fs
nop
push
js
push
fidiv
dec
push
hlt
or
movs
push
mov
add
cmp
leave
mov
ins
push
int
push
inc
cmc
out
fild
jg
dec
shl
xor
cmp
ja
enter
pop
pop
sbb
cmps
bound
lock
int3
popf
dec
int3
aas
out
sbb
or
xchg
shr
hlt
inc
mov
pusha
mov
movs
cs
aam
push
xchg
jno
pop
mov
pusha
aad
add
mov
mov
rcr
pop
and
pop
pop
cs
push
ficomp
scas
out
les
dec
cmc
sbb
push
enter
psubd
(bad)
inc
adc
push
lds
ja
cs
mov
cdq
ror
loope
push
xor
inc
ret
dec
sbb
mov
loop
(bad)
popf
pop
ret
mov
push
inc
mov
gs
loop
sbb
fcom
adc
mov
scas
int3
(bad)
test
out
stc
jg
add
int
sbb
cmps
out
adc
cmp
retf
sti
test
cli
mov
fimul
repnz
not
jle
push
inc
sahf
inc
ins
out
lds
rcr
lds
xlat
hlt
mov
frstor
test
mov
add
outs
mov
xor
pop
daa
cmp
popf
adc
jmp
xor
enter
xchg
mov
jo
(bad)
xchg
cld
inc
popf
rol
ret
jle
xchg
lea
and
dec
das
adc
mov
mov
fwait
movs
fld
cli
pop
test
lock
jb
jl
mov
xchg
mov
cs
jns
adc
jae
test
adc
pushf
pcmpgtb
or
xchg
stos
int3
call
jbe
cld
pop
out
ror
jb
jmp
or
into
cmp
xchg
cwde
dec
dec
adc
call
neg
sti
mov
and
movups
in
addr16
push
mov
retf
ja
shl
xchg
ror
mov
enter
jo
inc
push
fld
lods
push
push
shl
adc
movs
push
push
mov
cmp
and
adc
push
mov
and
mov
inc
(bad)
pop
mov
imul
mov
in
jmp
pop
repz
ja
ss
loopne
ins
push
loop
mov
mov
(bad)
(bad)
pop
mov
sbb
xor
sti
sub
xchg
mov
cmp
jle
out
cmps
les
sar
inc
fwait
and
xor
inc
cmp
not
imul
out
loop
call
jbe
xchg
icebp
pop
gs
stc
and
push
repnz
movs
sbb
mov
mov
add
test
jb
xchg
outs
pop
pushf
in
(bad)
pop
push
mov
fcmovbe
dec
cwde
mov
in
(bad)
adc
add
test
cmp
adc
stos
(bad)
leave
call
call
cmp
repnz
pop
dec
imul
adc
adc
sbb
test
fisttp
jl
mov
mov
in
les
call
mov
add
rcr
imul
mov
jno
pop
dec
sub
test
jle
(bad)
dec
loope
cmp
stos
sbb
pop
push
pop
jmp
jg
das
int3
jmp
pop
ficom
cwde
(bad)
shl
repnz
sbb
pop
and
cmc
loopne
lods
call
sbb
in
fs
xchg
lahf
out
or
ffreep
(bad)
lods
mov
dec
mov
cmp
pop
xor
pusha
xor
or
addr16
jo
aad
jmp
movs
cld
fiadd
je
xchg
jns
inc
ror
push
mov
shl
lea
mov
pop
inc
or
aad
sahf
xchg
inc
rcr
jl
inc
mov
shl
sbb
mov
test
rcr
jmp
(bad)
shl
xchg
das
jnp
test
fldcw
dec
xor
call
inc
loopne
mov
jno
fwait
into
ret
cmps
and
cmp
xchg
in
ins
retf
push
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
mov
push
stos
push
mov
push
stos
push
mov
push
stos
push
mov
push
stos
pop
mov
push
stos
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
dec
add
push
dec
add
push
add
add
push
add
test
push
test
push
xchg
push
xchg
push
mov
push
mov
push
mov
add
push
mov
add
push
movs
add
push
movs
add
push
cmps
add
push
cmps
add
push
stos
add
push
stos
add
push
rol
rol
ret
push
ret
add
push
les
push
lds
push
mov
mov
push
int
dec
push
loopne
dec
push
loope
dec
push
loop
dec
push
jecxz
dec
push
in
dec
push
in
dec
push
out
dec
push
out
dec
push
in
add
push
in
add
push
add
dec
push
add
dec
push
add
dec
push
add
add
dec
push
push
add
dec
push
and
dec
push
and
dec
push
and
dec
push
and
add
dec
push
cs
dec
push
pusha
add
dec
push
imul
dec
push
ins
add
dec
push
outs
add
dec
push
cmp
add
daa
add
add
add
add
add
add
in
or
add
or
add
push
add
ja
add
dec
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
mov
add
lar
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
jno
add
dec
or
add
add
push
pop
add
int
add
movs
pop
add
ret
or
add
push
add
pop
push
add
xchg
add
mov
add
xchg
add
add
jecxz
add
or
add
fld
add
add
add
repz
add
or
add
or
add
add
or
add
or
add
or
add
add
sbb
add
or
add
xor
add
mov
add
loopne
add
or
add
or
add
add
pop
or
add
add
xchg
or
add
or
add
or
add
bound
add
mov
add
sub
adc
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
dec
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
popa
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
movs
je
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
scas
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
aad
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
adc
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
fs
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
cwde
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
in
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
and
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
ins
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
xchg
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
iret
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
repz
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
sbb
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
push
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
jle
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
movs
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
ror
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
push
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
sub
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
push
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
mov
and
add
add
add
add
add
add
add
sub
add
xor
add
add
fwait
mov
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
fild
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
push
add
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
arpl
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
addr16
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
lds
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
in
add
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
adc
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
push
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
cmp
add
add
add
add
add
add
add
add
sub
add
xor
add
add
cmp
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
je
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
xor
xor
xor
xor
cmp
cmp
xor
add
add
xor
add
add
add
call
add
add
add
add
add
add
sub
add
xor
add
add
arpl
cmp
xor
data16
xor
add
add
cmp
sub
add
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
sahf
jbe
xchg
shl
in
mov
jmp
fwait
out
out
out
pushf
jmp
dec
mov
pop
jns
iret
add
mov
hlt
mov
or
xor
dec
push
xor
sbb
ss
add
shl
arpl
or
push
push
test
fs
or
in
sbb
push
jl
stos
push
test
add
push
jg
enter
aad
add
xor
mov
out
daa
shr
lock
cmp
inc
jp
test
add
cmp
(bad)
into
xlat
retf
sbb
pop
jns
daa
(bad)
jmp
xor
dec
sbb
mov
inc
icebp
aas
int3
iret
push
pop
movs
ins
fbstp
pop
arpl
das
je
dec
xor
cmc
mov
out
add
icebp
repz
or
cmp
inc
cs
or
jmp
push
mov
jge
dec
movs
pop
ret
push
fidiv
jmp
scas
mov
pusha
mov
sbb
cmp
jge
loopne
mov
and
cmp
xlat
xlat
(bad)
cmps
mov
test
(bad)
jb
sbb
sbb
mov
or
aas
fbstp
jl
cmp
cli
mov
jge
xchg
sub
ret
lds
div
or
addr16
lock
fucomp
add
xchg
sbb
pushf
pop
out
popf
les
cmps
inc
adc
jg
mov
xor
jb
push
es
mov
adc
or
call
outs
scas
pop
test
and
ins
fwait
rcl
or
jb
xchg
stos
mov
or
inc
cmp
repnz
popa
scas
in
fisub
scas
loop
cdq
lea
(bad)
in
mov
dec
jmp
adc
jl
stc
dec
or
cmps
stos
test
lock
ja
or
ds
sbb
ret
repz
pop
and
daa
jle
jecxz
mov
fstp
dec
retf
xchg
cs
arpl
lock
(bad)
js
add
mov
xchg
mov
jmp
rcr
jmp
dec
shr
jae
sub
or
fwait
lock
sub
arpl
adc
xor
mov
movs
in
sub
sahf
jmp
adc
xchg
mov
popa
jns
iret
xchg
sbb
mov
sti
idiv
xor
arpl
das
(bad)
or
xor
fimul
btr
call
cmp
(bad)
fld
mov
shl
shl
cmp
imul
pop
sar
ficom
jo
stos
push
xchg
fnstcw
jo
adc
sub
xchg
(bad)
xor
ja
xor
lds
adc
retf
in
aas
mov
clc
mov
xchg
cmp
xchg
push
retf
aaa
(bad)
test
dec
rol
(bad)
mov
push
test
sbb
sbb
sbb
fcomp
push
adc
call
ins
call
sbb
cmp
xchg
lock
cmp
mov
fcomp
add
jp
or
xchg
sbb
into
push
pop
or
pop
xor
xor
mov
neg
pop
outs
dec
fcomi
(bad)
cmps
(bad)
mov
popf
xchg
xor
(bad)
cwde
pop
jne
pop
push
sub
mov
xchg
int
das
mov
xchg
pop
mov
cmp
or
push
inc
(bad)
call
jne
jo
xchg
cmp
jmp
imul
std
jnp
xchg
jg
call
dec
push
js
push
push
xlat
sbb
pop
mov
jp
and
aad
aas
imul
and
enter
add
or
cld
mov
xchg
mov
mov
mov
sub
xor
scas
data16
or
jne
ins
xlat
ins
test
in
mov
mov
mov
paddd
jmp
fs
jbe
adc
or
fmulp
pushf
and
jmp
xchg
mov
enter
lock
sbb
out
mov
cmps
sub
neg
adc
fidivr
jmp
xor
and
leave
and
push
mov
hlt
sahf
cmp
test
mov
mov
mov
das
movs
mov
fnstenv
ss
int
xor
add
ins
jns
call
inc
js
add
push
jo
pop
mov
adc
jbe
jb
cmps
push
aad
ins
inc
sbb
int3
push
xchg
inc
vcvtsi2ss
arpl
jecxz
lea
loope
ja
pop
adc
add
adc
je
mov
jl
xor
rcr
add
dec
push
fbstp
push
xchg
scas
std
sbb
and
repnz
fsubr
enter
mov
es
push
in
mov
clc
(bad)
fwait
sub
cmp
jge
push
arpl
mov
mov
jmp
and
(bad)
(bad)
loopne
mov
push
(bad)
mov
lds
xchg
(bad)
in
int3
xchg
gs
pop
fwait
int3
sahf
push
test
sti
xchg
lods
lock
lock
loopne
test
pop
or
inc
pop
sub
xlat
xrelease
mov
push
int3
mov
sbb
xchg
lods
les
mov
jmp
jns
or
cpuid
xchg
pop
inc
addr16
jecxz
sub
push
xchg
pop
icebp
cmp
and
inc
jmp
add
fild
xchg
mov
xchg
push
mov
inc
adc
pop
push
pop
into
and
cwde
data16
sub
pop
add
mov
outs
int3
mov
out
leave
jle
mov
sahf
xchg
adc
cmp
idiv
adc
stos
stos
mov
jge
sbb
sub
mov
in
adc
and
mov
jge
jmp
xchg
repz
iret
imul
add
mov
fisubr
and
xor
sub
mov
mov
ins
into
dec
mov
(bad)
imul
cld
sbb
cld
or
push
jp
movs
imul
(bad)
out
sbb
and
(bad)
and
and
loope
mov
mov
and
fdivr
gs
xor
jo
sti
out
in
(bad)
popf
sub
movs
clc
or
xchg
xor
push
es
int
je
push
mov
ds
sbb
hlt
ret
movs
es
outs
mov
pop
sbb
add
adc
mov
fimul
sub
lods
inc
retf
stos
jns
pop
and
xor
jo
retf
loopne
or
aaa
push
div
or
ins
sar
and
dec
out
fld
push
add
cmp
sbb
test
jae
es
push
scas
test
pop
loop
mov
mov
in
ss
dec
ins
mov
repnz
imul
push
xor
stos
xlat
fst
in
dec
jo
cli
xchg
imul
push
cmc
ret
mov
cmps
mov
cmovnp
xlat
popf
clc
jmp
dec
or
mov
test
mov
xor
pop
and
ja
test
es
mov
loope
cmp
mov
sub
jbe
in
mov
sub
leave
jl
test
jnp
lahf
out
daa
ins
out
xlat
arpl
je
(bad)
sbb
pop
setbe
mov
jmp
add
sub
imul
and
je
xchg
stc
fnsave
fucomi
jno
and
pop
cmc
adc
jg
sbb
repz
dec
iret
fs
sbb
or
in
jecxz
mov
push
rol
dec
addr16
dec
inc
xchg
rcr
fcomp
lahf
xchg
cmps
rol
dec
xor
add
stos
mov
dec
in
mov
xlat
cwde
sub
cmps
dec
aam
test
imul
mov
aad
retf
ret
dec
ret
jecxz
inc
and
fmul
sbb
cdq
cli
scas
jnp
ffreep
push
lods
push
cld
imul
mov
(bad)
dec
pop
retf
frstor
repz
mov
out
sub
mov
mov
das
out
je
pop
aam
xchg
xchg
xchg
movs
stc
adc
test
pop
xlat
sub
push
jns
and
inc
xor
or
pop
sub
movs
mov
imul
sub
loopne
xchg
cs
mov
add
cwde
lods
test
(bad)
pop
fadd
aas
sub
(bad)
push
dec
addr16
mov
cli
cmp
mov
in
jmp
mov
add
cmp
arpl
es
in
prefetcht0
stos
push
adc
fadd
sub
jmp
sub
adc
add
cdq
in
loope
push
fisttp
fsub
mov
xor
bound
or
jge
bound
fld
fmul
fcom
imul
or
fs
inc
cmp
fsubr
ins
adc
mov
aam
cmps
pop
std
js
ins
stos
sbb
mov
out
and
not
cmp
sbb
(bad)
and
dec
or
mov
adc
sub
int3
xchg
jbe
rcr
ds
mov
movs
ret
inc
data16
cmp
mov
push
lods
(bad)
jle
xchg
lods
pop
inc
and
dec
dec
mov
cld
bound
inc
dec
and
(bad)
xor
or
mov
push
mov
fisubr
inc
inc
fdivp
or
stc
xchg
dec
mov
inc
fcomp
or
cs
sbb
pop
and
cli
sub
push
sbb
(bad)
and
sub
fsub
mov
jb
fyl2x
sub
enter
out
not
mov
cmps
test
mov
ret
je
cmp
test
cwde
add
imul
mov
cmp
cmp
clc
mov
cdq
xor
scas
mov
ja
mov
xor
aaa
mov
(bad)
cmp
xlat
lods
cli
data16
fisub
dec
inc
call
xchg
xor
lock
jno
rol
out
adc
fmul
jmp
cmps
dec
mov
movs
inc
lea
xchg
and
arpl
dec
js
jmp
pop
push
bound
mov
outs
xchg
popa
xor
gs
inc
sbb
xor
mov
adc
(bad)
ins
(bad)
mov
pop
mov
xchg
clc
fs
mov
test
into
pop
xor
ins
test
dec
sbb
test
mov
pop
mov
jo
movs
fcmove
sbb
jg
fdivrp
cmc
mov
sbb
test
inc
add
stos
das
dec
bound
div
add
cdq
push
dec
xor
sahf
bound
mov
hlt
gs
push
mov
aad
cmp
fistp
sub
jmp
mov
imul
xor
hlt
test
pop
inc
mov
dec
int3
or
lods
clc
call
xor
push
adc
add
mov
inc
push
sbb
out
push
fsub
add
dec
js
lock
sbb
pop
push
dec
mov
icebp
out
(bad)
frstor
cld
sbb
in
push
inc
dec
mov
or
repz
iret
jge
into
cdq
outs
mov
iret
icebp
repnz
div
pop
repnz
push
fs
lods
aam
out
mov
jl
xchg
adc
cli
jge
fs
inc
call
jmp
(bad)
in
cdq
je
push
push
int3
push
mov
jnp
mov
mov
stos
xor
outs
dec
mov
inc
sbb
fidiv
in
mov
leave
sub
sbb
add
push
mov
fsqrt
pop
enter
fs
lahf
arpl
jmp
jae
add
not
inc
push
xchg
pop
aas
and
mov
fs
mov
(bad)
stos
mov
in
xchg
lods
cmps
mov
jae
es
push
sbb
repz
shr
out
std
and
sahf
cli
rol
in
call
ja
sbb
sbb
cli
pop
cmc
mov
pop
pop
fsubr
or
fs
push
mov
mov
cmc
pop
xchg
mov
dec
jge
fisttp
outs
(bad)
imul
inc
mov
out
cmp
jno
sub
pop
es
mov
push
sbb
pushf
scas
je
cli
es
inc
add
cld
jmp
add
xor
ror
in
mov
mov
jmp
mov
sbb
hlt
out
call
out
xchg
xor
pop
push
call
jns
mov
sub
inc
loopne
mov
les
mov
(bad)
pop
mov
ja
mov
in
shr
or
ret
and
mov
jno
retf
(bad)
dec
mov
jo
mov
pop
nop
and
arpl
(bad)
pop
sub
jo
sub
inc
and
add
inc
mov
and
add
xchg
repz
mov
movlps
jp
popf
xchg
(bad)
pop
xchg
xlat
(bad)
outs
std
nop
jmp
fisub
mov
pop
jbe
add
enter
lods
in
push
(bad)
fsubr
jp
cmc
sub
sub
jp
(bad)
inc
das
inc
enter
push
leave
push
aam
adc
retf
xchg
add
retf
mov
inc
xchg
mov
and
test
push
scas
jo
sub
push
mov
out
lods
adc
not
lea
lahf
lds
adc
cmp
mov
je
int3
xor
push
popa
lds
dec
loope
mov
cmps
push
repnz
mov
test
add
js
(bad)
cmc
into
pop
jnp
xchg
jmp
fldcw
pop
mov
push
dec
dec
adc
or
and
dec
jp
push
mov
outs
stc
mov
mov
stos
daa
outs
inc
inc
sub
xchg
fidivr
and
cmps
pop
repnz
jge
xchg
call
add
push
fcmovb
outs
mov
out
jnp
gs
mov
test
cmp
(bad)
fdiv
mov
lea
stc
mov
push
sub
pushw
mov
into
(bad)
xchg
sub
xchg
adc
and
cmps
in
xlat
sub
mov
jae
mov
int
jl
sar
lock
aas
sub
test
fcom
gs
repnz
sbb
ror
add
mov
dec
sub
mov
(bad)
loope
outs
or
daa
adc
popf
arpl
pop
pop
fimul
fsubr
std
fucomi
cmp
pushf
mov
sub
sbb
or
xchg
jno
pusha
test
jmp
mov
sbb
xchg
stc
pop
clc
mov
fwait
cmp
ins
push
dec
pop
cmp
xchg
popf
inc
fst
sbb
mov
push
in
mov
cwde
add
cmp
mov
sub
pop
fdivr
rcr
es
mov
cs
fwait
retf
cdq
aad
iret
dec
cs
imul
clc
xor
sub
jbe
inc
mov
lock
loope
xor
xchg
in
push
jne
and
xlat
lds
out
ins
dec
movs
sbb
inc
bound
adc
js
call
leave
mov
ret
dec
push
(bad)
cdq
inc
(bad)
pop
das
jmp
sahf
retf
in
dec
fidiv
pop
xchg
in
sbb
dec
xor
mov
mov
fbld
out
mov
ds
js
cli
fstp
mov
hlt
adc
mov
mov
cmps
fucomi
sbb
pop
push
loope
leave
sub
add
rcr
enter
inc
sahf
cmc
pop
cmps
adc
mov
push
out
sti
mov
xchg
xchg
xor
inc
(bad)
jne
movs
bound
push
imul
call
mov
or
mov
fwait
bnd
add
iret
mov
cmps
pop
lods
es
daa
sbb
stc
jmp
fdiv
int
add
jbe
mov
jle
and
add
int3
loope
cmp
jns
(bad)
and
mov
(bad)
repz
(bad)
cld
out
(bad)
stc
iret
push
cmp
sub
xor
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
and
pop
add
das
out
neg
fnstenv
jno
test
mov
iret
xchg
cmc
mov
xchg
cmp
mov
fs
push
ds
ds
loope
add
inc
inc
test
jbe
test
jns
add
in
arpl
sar
add
push
jbe
cmp
mov
hlt
popa
das
mov
mov
lahf
aaa
mov
push
xchg
rcr
jnp
and
cmp
or
nop
jno
add
vaddpd
lahf
adc
or
adc
or
push
dec
lods
sub
xabort
sub
adc
jmp
fcom
cmc
mov
outs
je
push
repz
dec
push
add
pop
sar
cli
xchg
arpl
push
cmc
out
pop
xor
sub
dec
in
aas
loopne
int3
pop
jne
addr16
ds
inc
sbb
cmp
sbb
mov
test
jge
out
mov
cmp
cli
mov
mov
jp
jp
or
lods
js
pop
sar
int
push
lods
xchg
jle
or
pop
push
sar
arpl
inc
pop
arpl
imul
into
leave
rcr
stos
jg
aaa
xor
lock
add
(bad)
enter
dec
dec
fidiv
dec
movs
adc
mov
xchg
xchg
inc
jge
ins
jle
add
cmps
and
pop
xchg
loope
hlt
je
lods
rep
in
retf
adc
add
lea
jns
lods
dec
pushf
sti
add
lods
sbb
movs
ds
jbe
or
jb
mov
sbb
pushf
mov
and
xchg
popa
ds
jge
(bad)
cs
or
xchg
cmc
lods
in
and
enter
lods
ret
mov
mov
push
cs
sbb
push
add
or
cli
and
sbb
jmp
lods
xlat
mov
pop
pushf
mov
or
shr
mov
pusha
dec
ffree
mov
or
sub
mov
dec
nop
push
and
scas
xor
jecxz
mov
daa
push
push
or
push
dec
pop
sub
pop
sbb
jae
faddp
repz
hlt
pop
arpl
in
out
push
dec
call
ins
push
loop
push
add
mov
pop
and
popa
push
(bad)
xchg
ret
push
out
jg
cmp
leave
rcl
xchg
or
mov
jg
aaa
rcr
nop
mov
inc
sub
mov
mov
push
std
inc
popa
sbb
(bad)
jp
sub
xor
jecxz
and
push
inc
aaa
dec
int3
in
ror
(bad)
xchg
push
pushw
xor
lea
mov
mov
ror
in
and
std
(bad)
jg
or
mov
in
movs
jmp
lea
mov
sar
inc
inc
ds
mov
inc
(bad)
ins
push
ja
test
xor
sub
push
shl
movhlps
call
aam
mov
shl
mov
clc
cmp
in
fist
and
jmp
xchg
retf
push
pop
imul
cli
push
cld
retf
popf
jo
test
int
stos
adc
rol
not
adc
mov
mov
shl
(bad)
mov
and
not
cmc
ror
pop
fadd
imul
cmps
push
jae
(bad)
add
shl
enter
push
into
add
fcmovbe
mov
ret
dec
test
push
jl
pop
inc
xor
jge
out
cmp
arpl
fwait
in
inc
cmps
repnz
jns
adc
test
pushf
xchg
gs
icebp
popf
mov
std
shl
mov
jg
mov
dec
fist
aad
pop
call
push
nop
popa
push
fs
aad
xchg
or
popf
ss
xchg
pop
mov
lock
dec
lea
jmp
stc
dec
jae
clc
sbb
dec
sahf
in
xchg
(bad)
or
pop
jg
shr
sub
(bad)
pop
addr16
mov
test
xor
inc
sbb
push
mov
pop
loope
jo
scas
(bad)
int3
in
mov
xchg
xor
and
pop
cmp
sbb
push
pushf
in
inc
xor
and
mov
and
adc
jmp
jnp
mov
pusha
icebp
mov
test
jbe
mov
div
mov
adc
(bad)
popa
inc
inc
por
fst
mov
cmp
cdq
cwde
mov
loope
jbe
in
or
sub
inc
lahf
jle
mov
pop
xor
mov
test
scas
stc
sbb
sub
daa
push
cwde
sbb
imul
pop
mov
aas
lds
or
inc
leave
test
in
aaa
jnp
adc
enter
mov
das
clc
cli
jne
add
and
(bad)
or
jle
dec
mov
aad
loope
dec
aam
mov
dec
xlat
push
stos
repz
add
xchg
xor
daa
dec
(bad)
jmp
and
ss
jge
out
push
movs
stos
xchg
xor
mov
stos
xor
jmp
fsub
aam
mov
in
cld
into
test
and
fcmovu
mov
cwde
cwde
aad
mov
inc
mul
add
stc
or
cdq
(bad)
push
push
mov
and
sbb
sbb
fistp
adc
paddb
fsub
dec
push
ss
dec
fadd
loopne
hlt
imul
iret
mov
js
add
pop
or
cmps
(bad)
in
push
mov
dec
repz
sti
mov
das
jg
and
jae
stc
lea
jle
cmp
int3
pop
in
inc
push
push
mov
lock
bound
rol
sub
movs
cmp
jmp
imul
and
mov
pop
cld
jmp
ins
dec
lods
adc
and
fistp
popa
inc
(bad)
pop
call
in
cmps
push
inc
in
test
add
std
cmps
pop
daa
sbb
outs
out
ja
movs
loop
ins
(bad)
(bad)
push
xor
add
mov
cli
popa
xor
mov
push
in
pusha
xor
xor
mov
jb
cld
inc
mov
mov
and
pop
add
push
aam
js
mov
mov
push
lds
inc
ret
xchg
lds
fs
cmps
mov
jb
ins
adc
imul
mov
movs
inc
inc
pop
sub
push
repz
outs
mov
jno
in
pushf
cmp
(bad)
ficomp
push
popf
pop
jmp
lods
inc
es
mov
inc
fnstsw
aaa
cs
push
ins
test
inc
stc
and
(bad)
popf
pop
lea
test
jbe
mov
cwde
hlt
push
mov
mov
jle
sahf
inc
test
scas
cld
jnp
xchg
and
aam
idiv
pop
inc
push
aad
retf
cmp
arpl
pop
scas
mov
imul
xchg
(bad)
out
or
les
in
stos
or
adc
push
mov
mov
aad
shl
retf
into
lds
mov
xor
(bad)
add
mov
cs
loop
xor
jnp
mov
in
shl
sti
inc
imul
ins
call
cmc
and
add
popa
into
jae
cmps
outs
lods
mov
jne
popa
pop
ret
pop
enter
sbb
call
enter
jmp
push
xchg
iret
outs
repnz
push
pusha
loope
push
rol
into
cmp
cwde
xor
out
scas
mov
add
inc
imul
inc
std
xchg
add
cmp
cli
movs
je
ins
out
mov
push
push
stc
xlat
jae
je
mov
adc
iret
jbe
mov
(bad)
push
inc
lahf
scas
popf
ficom
ret
ret
cdq
jmp
pop
xor
sbb
fisub
or
push
in
or
(bad)
ror
aaa
xor
add
dec
into
fcomip
xchg
mov
mov
push
imul
inc
bound
clc
and
addr16
fisttp
add
jae
outs
inc
hlt
xchg
sub
jae
sti
punpckldq
xchg
(bad)
call
xchg
push
aas
pop
data16
mov
xchg
mov
jmp
je
xor
int
cmps
push
mov
mov
push
add
je
sbb
lahf
iret
call
in
adc
scas
add
cmp
leave
sub
out
call
push
xchg
dec
rcl
out
add
std
je
pop
data16
pop
sub
mov
xor
mov
jae
dec
mov
xchg
in
sbb
pop
mov
xor
mov
inc
sbb
xor
mov
cmp
aad
lock
cmc
pop
rcl
sahf
jne
sbb
test
jecxz
fsubr
add
xchg
pop
mov
movs
cmps
dec
repz
jp
pop
out
push
nop
pop
mov
jb
movs
inc
in
mov
mov
or
ins
aaa
xlat
ja
in
(bad)
retf
aad
inc
xchg
sbb
adc
outs
clc
jno
aad
jg
scas
mov
mov
js
mov
jge
cmc
cmp
xchg
std
mov
outs
and
neg
cmps
cmp
cdq
push
dec
out
arpl
ror
call
add
outs
ret
loope
mov
imul
xchg
pop
stos
inc
mov
addr16
ss
xchg
mov
xor
mov
out
and
and
mov
jl
not
cmp
stc
xlat
push
jno
test
fs
inc
test
jno
mov
push
jae
mov
push
movs
sar
pop
cli
out
repz
xchg
ret
pop
adc
call
pop
out
cmp
mov
shl
jmp
jne
test
(bad)
inc
ret
jns
and
xor
fs
fnstcw
pushf
lods
mov
js
mov
dec
inc
dec
xor
jnp
pop
mov
les
push
imul
sub
push
inc
cdq
cmps
push
stc
cmp
mov
test
sar
popf
lahf
int
pop
imul
int
pop
fisub
mov
dec
fcom
addr16
jl
pop
scas
mov
jne
xchg
fcom
xchg
cmp
mov
xchg
jae
call
xchg
xor
loopne
pmulhuw
cmp
cmp
push
mov
pop
add
pop
or
push
bound
or
fst
dec
mov
jecxz
ror
jecxz
pop
popa
or
out
test
movs
cmc
popf
mov
sbb
and
jecxz
jg
push
retf
mov
lods
aad
ret
mov
mov
and
mov
dec
cmovae
cmp
jns
adc
(bad)
ins
mov
pop
cli
fmul
push
pop
sub
outs
push
pop
pop
call
out
into
fcom
lods
sub
frndint
mov
fwait
aaa
outs
pop
xor
(bad)
cli
pop
xchg
int3
sub
outs
mov
sbb
jle
inc
out
in
cdq
sbb
sbb
add
pop
jp
loopne
push
jne
pop
xchg
stos
xor
loop
ins
scas
jg
dec
int3
inc
or
push
push
sahf
adc
outs
push
cmp
retf
loopne
cld
stos
mov
call
or
jmp
xor
fs
fsubr
ja
xchg
jb
div
into
call
out
sahf
(bad)
mov
jae
mov
(bad)
adc
mov
push
pop
imul
sti
mov
adc
and
addr16
xchg
ror
stos
sti
push
pop
add
mov
mov
or
aaa
js
imul
imul
outs
dec
setae
jge
mov
cdq
bound
jmp
jge
dec
pop
add
pushaw
hlt
and
fsubr
aam
xor
lock
ds
inc
ror
sbb
in
add
mov
xchg
and
repnz
ja
inc
daa
ss
jno
imul
and
mov
fs
pop
popf
cmps
mov
pop
aad
push
out
neg
jecxz
shr
push
sbb
xchg
jmp
mov
sbb
or
in
jae
into
dec
jbe
ss
inc
scas
rcr
loopne
(bad)
hlt
popf
mov
mov
cmp
aad
dec
(bad)
mov
add
test
test
pop
mov
cmp
dec
daa
adc
cs
das
addr16
aam
cmp
cmc
adc
sahf
rcr
xor
ror
push
int
and
jmp
bound
daa
out
outs
shl
test
mov
movs
xor
repz
ret
push
push
mov
adc
sub
jle
lock
sbb
mov
call
outs
sbb
stos
in
hlt
js
into
cwde
and
neg
mov
mov
push
bnd
push
cs
scas
test
comiss
movs
ret
lahf
dec
and
mov
inc
mov
xchg
sub
add
fbstp
mov
add
or
sbb
push
cdq
push
fisttp
std
mov
bound
shr
fadd
mov
sbb
retf
sub
jne
ret
or
mov
stos
mov
dec
(bad)
mov
cmps
sbb
fnsetpm(287
out
mov
ret
cld
hlt
pop
jbe
mov
pusha
inc
shl
push
out
cmp
push
inc
shr
push
ja
mov
sub
add
das
mov
ss
xor
mov
(bad)
fild
call
jne
inc
sub
jp
mov
and
push
addr16
data16
in
cli
push
and
inc
enter
in
cmp
das
ja
mov
inc
mov
sub
out
and
sub
outs
fwait
movs
sbb
(bad)
cmps
ins
pop
popf
mov
sub
dec
outs
mov
mov
mov
xchg
(bad)
fistp
jae
or
out
rcr
add
add
jb
jae
jne
fdiv
lds
out
cmp
mov
(bad)
xchg
std
dec
ret
cmp
icebp
fimul
mov
push
pop
leave
adc
adc
in
or
in
or
xor
xor
mov
in
in
jbe
bound
sbb
and
gs
nop
inc
push
out
test
dec
mov
mov
push
fsub
popf
jg
popa
nop
out
movs
add
add
pop
mov
enter
stos
js
push
adc
and
push
jb
inc
cdq
pushf
cli
jno
jb
push
test
bound
out
imul
push
pop
mov
jg
retf
shl
mov
ret
jno
hlt
fld
out
js
pushf
and
pop
imul
push
mov
xchg
in
popf
(bad)
xor
loope
jae
sub
push
sub
fdivp
xlat
das
xlat
jecxz
pop
call
rol
in
popa
mov
lock
je
(bad)
push
stos
cmps
inc
popf
jl
lods
sub
jae
ror
xor
xchg
stos
gs
repnz
push
push
pop
movs
jmp
rol
inc
outs
jbe
inc
pop
push
xchg
pop
or
add
sahf
mov
fist
loope
iret
dec
je
fs
movsx
sub
jnp
ret
out
mov
xor
mov
sub
mov
cmp
and
xchg
aam
(bad)
std
mov
iret
in
ins
add
sbb
ret
nop
pop
xchg
imul
mov
mov
(bad)
int
call
push
sbb
pop
scas
pop
stos
and
(bad)
sub
sub
nop
in
repz
push
aam
pop
fmul
sub
iret
pop
cmp
push
lock
jl
retf
mov
and
pop
push
arpl
xchg
inc
(bad)
in
mov
cld
dec
xor
stos
in
fstp
add
sub
sub
mov
ins
mov
push
xchg
fwait
or
xor
pop
add
test
adc
dec
icebp
adc
ficomp
test
push
lds
shl
cwde
fst
mov
cmp
sbb
out
cs
mov
aad
fdiv
jmp
lea
repnz
dec
cmp
push
in
inc
pop
sub
in
repz
or
out
sbb
and
adc
das
pop
icebp
test
in
pushf
rol
ret
inc
data16
or
xor
mov
xor
enter
stc
out
jg
stc
out
call
add
jg
mov
cli
rol
aas
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
cmc
and
(bad)
jecxz
icebp
xchg
sahf
xor
popf
xor
int
push
dec
ja
pushf
mov
call
pushfw
mov
test
xor
loop
mov
(bad)
pop
lock
stc
or
movs
aas
or
add
inc
sbb
sbb
enter
cmp
rcr
loope
cli
(bad)
push
push
mov
shr
movs
jno
xchg
repz
retf
aad
fmul
test
mov
cli
(bad)
loop
movs
or
sahf
neg
daa
out
mov
jmp
shl
cwde
int3
push
jno
sub
out
adc
push
aam
mov
xor
xchg
es
fidiv
xchg
add
sbb
xchg
shl
sbb
(bad)
jmp
xor
inc
xchg
inc
xlat
movs
or
std
mov
dec
pop
(bad)
xchg
ror
dec
pop
adc
imul
xor
mov
jmp
lahf
stos
scas
mov
mov
inc
jecxz
mov
stos
adc
adc
xchg
pusha
outs
ret
fidivr
ds
sahf
push
movs
sub
(bad)
call
xor
aas
aad
ret
push
outs
test
jnp
jno
pushf
sbb
(bad)
pop
test
add
bound
mov
aas
or
adc
test
jno
or
or
mov
sbb
xchg
jmp
dec
fcomip
push
and
(bad)
in
out
shl
sbb
and
enter
frstor
je
add
call
jle
lods
int
push
sbb
rol
retf
add
pop
fisubr
aad
int
loop
test
aad
out
sub
and
jo
sub
int3
cmp
cli
in
xchg
jns
add
or
mov
xchg
in
gs
int
(bad)
mov
inc
js
loope
xchg
nop
mov
mov
outs
pop
inc
repnz
xchg
push
sub
mov
cmps
pop
add
out
add
jmp
addr16
repnz
test
mov
mov
mov
and
mov
repnz
or
aad
and
movs
sbb
sahf
movs
test
mov
loop
rol
lea
test
shr
inc
pusha
adc
sahf
sbb
mov
leave
sub
and
mov
pop
mov
(bad)
cmps
xchg
xchg
mov
stos
fbld
aad
imul
pusha
dec
mov
pop
imul
movs
xchg
mov
or
sub
mov
and
nop
mov
repnz
ins
iret
ins
mov
pop
daa
adc
js
and
ins
mov
das
push
push
stos
pop
lock
in
pop
or
jne
dec
push
movs
(bad)
adc
not
xor
mov
jb
icebp
out
xchg
sub
arpl
(bad)
lods
fstp
rol
loop
adc
pop
inc
sub
jne
stos
int
and
push
lods
jnp
cmp
jbe
sbb
leave
fcmove
mul
cmps
push
rcl
sub
stos
int
mov
fist
aas
addr16
xchg
mov
adc
test
mov
mov
cmp
ror
xor
pop
gs
test
or
add
call
jns
mov
pop
(bad)
std
cmps
das
and
push
jecxz
cmp
imul
push
xchg
int3
ja
fnstsw
in
aam
(bad)
int
pop
push
mov
popf
sbb
(bad)
sbb
movs
pop
sbb
js
sbb
sub
call
mov
movs
push
add
loop
sub
mov
mov
jl
aad
pop
ret
add
xor
and
leave
or
or
(bad)
cld
jp
mov
in
xchg
(bad)
lahf
fisttp
outs
dec
fwait
repz
pushf
test
xchg
shl
mov
not
out
mov
mov
sub
enter
sub
outs
add
(bad)
ss
loop
jbe
mov
sub
xchg
imul
jmp
mov
fbstp
fucomip
mov
sub
cwde
gs
and
retf
shl
cmp
mov
(bad)
std
mov
out
push
(bad)
xor
enter
mov
mov
mov
loopne
rcl
pop
ins
pop
lds
and
inc
scas
or
jle
retf
imul
std
retf
mov
test
jbe
iret
push
addr16
sub
cmp
sub
add
pop
mov
mov
xchg
outs
das
outs
mov
xor
scas
je
stos
fmul
push
sub
dec
jbe
add
xlat
sub
inc
loop
push
fdivrp
sub
popa
mov
leave
jmp
clc
sub
lahf
icebp
dec
xor
or
jbe
push
pop
mov
mov
sub
nop
ja
jns
loop
pop
add
pop
ins
dec
sti
out
mov
aad
cmp
les
in
les
nop
mov
movs
pop
cmp
lock
not
cmp
sub
je
pusha
test
(bad)
dec
test
pop
std
mov
jle
ja
cmp
pop
jl
popf
mov
push
pop
jo
mov
cmp
in
fild
xor
sahf
pushf
call
push
rol
mov
aaa
mov
and
aas
mov
test
in
jmp
fcmovbe
cmp
add
adc
movs
popf
les
xor
imul
sti
xchg
and
fisub
xchg
or
jns
call
cmps
in
or
test
sbb
sbb
sub
fucom
ror
inc
sbb
push
cli
pop
scas
popf
mov
(bad)
xor
lock
cmp
pop
sbb
in
mov
test
sahf
lods
das
or
movs
dec
lods
sub
mov
loope
sahf
gs
jns
pop
mov
lock
in
cmp
cli
sbb
xor
iret
fsub
cmp
xor
pop
loopne
xchg
enter
jnp
adc
ret
jne
jmp
movs
stc
fisubr
in
sar
ret
loop
(bad)
xor
adc
imul
ja
and
jmp
xchg
data16
sbb
or
push
ds
inc
xchg
(bad)
and
pop
neg
test
inc
mov
mov
adc
(bad)
stos
hlt
ss
jmp
(bad)
mov
shl
(bad)
adc
loope
dec
jecxz
ret
pop
es
inc
psrlq
push
mov
sbb
mov
mov
(bad)
mov
in
push
lods
rcl
and
stos
inc
inc
sub
aas
(bad)
mov
js
add
imul
sub
shl
sub
push
in
add
or
mov
cmp
adc
lds
xor
sar
dec
inc
fs
mov
ret
mov
push
lahf
out
mov
hlt
xor
sub
rcl
lahf
mov
push
dec
lods
dec
jb
pop
inc
das
or
divps
(bad)
iret
hlt
and
xchg
test
push
xor
daa
push
movs
mov
fcmovu
xchg
add
stc
xchg
clc
mov
(bad)
lahf
movs
lods
mul
jo
add
or
in
inc
test
lea
xor
sub
xor
mov
xor
rcr
es
sti
xor
aam
cmps
ret
jb
(bad)
xor
test
xchg
jns
mov
lea
jno
xchg
cmc
data16
lods
jmp
sub
aam
inc
push
pop
pushf
retf
cld
daa
pop
adc
loopne
mov
inc
ins
je
xchg
lods
(bad)
push
pop
push
jg
lds
mov
add
lods
int3
xchg
or
jb
inc
xlat
xor
xchg
ins
out
jle
aam
out
js
ins
or
pop
loopne
mov
pop
push
inc
out
iret
add
add
enterw
cmp
je
shr
loopne
leave
inc
outs
(bad)
xor
mov
test
iret
add
cwde
mov
das
retf
rcl
add
int
test
jmp
shl
mov
or
gs
mov
movs
lods
cmps
xchg
dec
ja
stos
(bad)
jge
ja
jp
mov
movs
fwait
mov
repnz
xor
cmp
push
ss
test
addr16
jae
sub
jl
push
out
pop
jb
inc
jmp
sbb
xchg
mov
or
cmovge
aaa
nop
jl
(bad)
arpl
xchg
shr
xlat
rol
mov
push
test
cmp
and
sub
(bad)
bound
inc
pop
xor
daa
mov
add
mov
inc
push
test
and
cli
mov
or
push
(bad)
test
add
cmp
push
pop
mov
loop
xchg
mov
mov
cli
hlt
retf
arpl
movs
mov
sub
daa
leave
cmp
add
jp
dec
dec
loopne
xchg
cmp
call
lock
fnstenv
neg
ss
retf
or
int3
pop
cli
in
mov
mov
jge
sahf
inc
adc
out
xor
xor
nop
frndint
dec
add
(bad)
push
lods
and
mov
push
rcr
and
inc
pop
ja
lock
mov
dec
mov
call
out
jp
loope
adc
scas
lods
cmovae
sub
cmp
out
fnstcw
jmp
dec
cwde
or
inc
jp
cmps
and
ret
jns
fdivrp
lock
imul
mov
ja
sti
stos
sahf
adc
xchg
in
cdq
adc
mov
repnz
push
sbb
xchg
push
scas
and
popf
and
movsx
nop
cmps
cmps
pop
cwde
cwde
sbb
fmul
in
xchg
mov
and
lods
scas
mov
sbb
mov
popw
and
cmp
or
inc
push
lahf
mov
hlt
ret
xrelease
fsub
fdivr
add
xor
lods
mov
in
cdq
push
iret
push
test
sti
xor
jge
dec
stc
clc
mul
div
xchg
out
out
lods
jg
call
retf
xor
dec
aas
mov
sbb
inc
mov
cli
rcr
aam
xchg
sbb
loopne
nop
cdq
dec
push
cmp
cmp
xor
pop
mov
pop
shl
sub
cwde
cmp
sub
sub
aas
(bad)
daa
inc
mov
les
cmp
icebp
pop
dec
jle
sub
xchg
lock
stc
inc
daa
in
add
xor
movzx
lods
xchg
ss
leave
push
fstp
pop
repz
xchg
mov
shl
(bad)
call
imul
pusha
mov
dec
xchg
outs
out
xor
adc
xchg
jg
mov
or
lahf
sahf
div
cmps
fidivr
cld
xor
stc
fstp
inc
mov
add
int3
ins
shr
mov
pushw
loop
fdivr
or
data16
dec
mov
pop
mov
push
or
pop
adc
push
cdq
jbe
test
arpl
fisttp
cmps
(bad)
aad
add
adc
and
sbb
outs
in
ins
pop
inc
sub
mov
pop
in
dec
into
xchg
hlt
cmc
pusha
push
or
jns
and
mov
imul
fnsave
push
shl
enter
pop
xchg
(bad)
adc
pop
rcr
stos
inc
clc
retf
or
mov
adc
inc
jle
mov
jne
lock
push
mov
(bad)
jmp
bound
loopne
dec
cdq
mov
cmp
call
dec
and
sub
outs
movs
pusha
retf
sbb
loop
idiv
stos
adc
push
mov
xchg
pop
fild
or
sbb
sahf
mov
or
cmp
out
mov
jb
jg
daa
mov
fldenv
(bad)
popa
sbb
mul
adc
add
inc
xor
js
dec
(bad)
int
push
gs
jecxz
cmps
pushf
pop
(bad)
xor
ret
in
pop
fs
movs
addr16
mov
push
ins
xlat
push
inc
fbld
mov
mov
mov
out
push
out
mov
xchg
pop
sbb
gs
pop
(bad)
(bad)
sbb
adc
xchg
jmp
sbb
hlt
ja
push
push
mov
iret
les
and
or
cmp
sub
call
adc
and
and
hlt
clc
das
outs
inc
jmp
cmp
aam
test
xchg
cmp
mov
fwait
lock
in
and
and
jle
int3
cmp
adc
cmps
mov
pop
xchg
rcl
aad
adc
push
dec
je
into
pop
lods
jbe
jo
dec
mov
shr
scas
aas
test
xchg
fsub
push
(bad)
mov
xchg
idiv
jb
inc
(bad)
mov
gs
and
scas
stos
out
cs
xchg
out
fsubrp
adc
stc
jge
mov
dec
and
sar
dec
lock
push
out
(bad)
ins
movs
ret
push
dec
lahf
pop
dec
lods
xchg
sar
xchg
ret
mov
clc
lods
sub
call
jecxz
pop
int3
adc
repz
(bad)
data16
movs
test
mov
mov
mov
call
stc
jmp
scas
cdq
js
cmc
or
fmul
ror
rcr
out
xor
jl
xchg
ror
imul
fld
je
aas
mov
imul
ds
dec
sbb
in
pop
sub
sbb
push
or
ja
push
mov
xchg
loop
jmp
fimul
adc
ss
es
aam
stos
jbe
movs
(bad)
fistp
lods
jb
dec
adc
pop
and
(bad)
xchg
push
adc
std
dec
pushf
arpl
xchg
dec
cmp
add
mov
xlat
das
aam
nop
add
xor
push
mov
test
mov
arpl
das
out
push
pop
out
std
xor
dec
push
ficom
out
ror
daa
inc
jmp
xchg
iret
dec
sahf
and
mov
(bad)
fistp
test
out
test
or
pop
(bad)
std
sub
dec
sar
loope
adc
jp
lock
in
clc
mov
jo
xor
cmc
retf
mov
jle
push
stos
retf
mov
mov
leave
mov
adc
jne
jo
rcl
hlt
sbb
shl
inc
lea
xor
fisttp
call
jl
shl
sub
scas
hlt
push
mov
retf
xor
adc
popf
repz
mov
pop
push
inc
sahf
or
std
jae
lds
inc
rdmsr
sbb
lds
dec
cli
or
xchg
(bad)
xchg
ret
mov
(bad)
stc
call
or
jp
(bad)
out
scas
test
jp
sbb
ror
scas
mov
mov
xchg
adc
push
scas
jmp
fldenv
adc
and
xchg
iret
mov
pop
std
mov
mov
imul
ins
xor
xchg
icebp
pop
leave
fmul
movs
mov
dec
cs
lods
sub
(bad)
out
movs
bound
inc
popf
repz
aas
retf
push
ins
mov
aas
add
das
data16
in
out
sbb
cmps
or
int
movs
fsub
push
xchg
fstp
movs
inc
jo
fwait
mov
pushfw
sbb
adc
inc
out
cmc
ss
sar
mov
mov
dec
dec
aam
inc
adc
mov
stos
mov
ja
cld
add
push
pop
inc
dec
push
scas
fld
mov
and
and
push
and
lahf
xchg
jg
scas
inc
add
push
lds
rcl
and
test
inc
(bad)
fisub
xchg
stos
sar
mov
loop
adc
pop
sub
test
(bad)
add
cmp
inc
pop
mov
cmps
push
and
shl
xor
mov
xchg
add
in
ss
mov
jecxz
dec
pop
das
sbb
out
lods
mov
jo
cmp
sbb
mov
(bad)
mov
mov
push
out
addr16
jae
ins
jl
dec
cmp
ins
sti
pop
adc
push
add
push
and
icebp
shr
push
cli
pop
cmp
shr
lahf
jg
stc
out
jg
stc
jg
add
psubb
clc
shl
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
mov
loop
ja
bnd
cwde
out
out
mov
jmp
popa
push
dec
ja
ja
out
cmp
mov
add
adc
add
imul
imul
jne
jns
xchg
lods
jmp
xchg
pop
pop
push
call
pop
jle
inc
in
popf
mov
xchg
mov
daa
or
pop
push
jo
and
inc
iret
sub
or
and
mov
fist
jmp
inc
add
sbb
mov
add
nop
fbstp
dec
xlat
jns
jmp
int3
call
cld
stc
repnz
sahf
jge
sbb
xchg
mov
loop
fs
popf
pop
clc
fucom
dec
xor
xlat
into
aaa
inc
or
mov
inc
lock
cwde
ins
xchg
mov
pop
xchg
mov
add
cwde
and
dec
out
loop
or
iret
les
dec
push
mov
test
in
jecxz
xchg
outs
sahf
mov
ret
movs
pop
jb
mov
mov
hlt
jbe
shl
in
push
mov
in
sahf
fwait
adc
lock
push
sbb
pop
cmp
jmp
clc
fld
add
jg
lods
in
jno
adc
add
and
push
stos
std
loope
xchg
sbb
mov
pushf
and
jl
test
nop
bswap
std
jmp
cmp
jp
adc
es
ja
xor
xor
hlt
repnz
fdivr
push
mul
push
call
fwait
fs
loope
mov
xchg
aas
call
inc
jne
mov
nop
jmp
mov
out
cmp
jbe
or
rcl
inc
aaa
lahf
inc
and
jno
shl
es
mov
call
mov
hlt
repz
xchg
jns
cmp
adc
adc
(bad)
out
icebp
test
cmc
xlat
es
mov
dec
bound
cmp
push
pop
jae
loop
inc
mov
or
add
(bad)
jmp
icebp
stos
rcl
cli
inc
stc
pop
arpl
sbb
aad
or
int
xchg
into
xchg
or
pop
(bad)
adc
aaa
add
mov
into
xor
mov
jg
mov
mov
popa
(bad)
dec
xor
into
aam
dec
inc
and
mov
sub
in
or
add
shl
enter
movs
aam
sbb
cld
push
(bad)
out
stos
es
ss
es
je
jl
push
mov
(bad)
(bad)
mov
sti
push
and
ins
(bad)
lea
in
ja
xor
adc
outs
adc
(bad)
sahf
loopne
sub
ret
jge
add
mov
jge
push
(bad)
adc
cwde
int3
and
mov
sbb
xchg
add
jb
inc
popf
ret
xor
jmp
in
and
jne
hlt
xor
je
or
(bad)
adc
xchg
cli
hlt
lds
dec
adc
(bad)
cmc
adc
mov
inc
outs
dec
cmp
arpl
and
ret
cld
mov
sub
cmps
add
jge
jbe
jns
iret
les
arpl
jl
jns
pop
inc
sub
add
cmps
xchg
out
dec
cmps
xchg
jne
dec
test
test
outs
(bad)
push
ds
iret
(bad)
adc
cmps
les
jmp
arpl
add
ins
aad
sar
mov
cli
hlt
rol
push
mov
push
jmp
(bad)
outs
fisubr
int
fwait
mov
jg
retf
xor
adc
pop
nop
inc
push
adc
dec
push
rcl
call
lds
add
and
dec
retf
test
and
sub
sbb
stc
sub
in
outs
add
fst
rcr
test
dec
xchg
pop
inc
in
shl
(bad)
and
mov
fcomi
fwait
sbb
mov
frndint
cwde
inc
int3
jo
inc
fldcw
push
or
inc
jp
cld
adc
cli
cs
inc
(bad)
cli
in
ins
mov
xchg
ja
rcr
bound
mov
(bad)
jl
jmp
jae
jnp
add
and
mov
or
mov
and
aaa
inc
imul
mov
in
mov
retw
stos
fstp
in
xor
mov
sbb
out
in
or
stc
les
imul
and
enter
push
push
lods
sbb
js
call
xlat
inc
and
cs
jo
mov
xor
ror
cmc
aam
xor
sti
cmps
jo
and
aad
mov
loopne
mov
mov
cmps
(bad)
out
xor
retf
mov
popa
mov
hlt
pushf
ja
jmp
ss
mov
fild
inc
add
xchg
(bad)
out
and
icebp
mov
cdq
inc
movs
mov
mov
addr16
(bad)
cdq
imul
lahf
daa
rol
push
xlat
jmp
xchg
in
es
movs
sub
repnz
cmp
lea
test
pop
(bad)
lahf
push
gs
dec
ins
pushf
pop
test
xchg
shr
jmp
dec
clc
popf
(bad)
jb
xor
mov
addps
dec
nop
mov
scas
push
dec
jecxz
jg
xchg
mov
xchg
ror
sbb
xchg
icebp
ds
adc
sbb
cwde
xchg
dec
aad
inc
stc
addr16
xchg
daa
xchg
push
call
xchg
test
mov
mov
(bad)
inc
(bad)
hlt
pusha
xchg
jge
mov
dec
dec
ja
aam
inc
and
and
pop
or
sbb
jb
mov
gs
xchg
pop
aas
outs
pop
pop
jmp
mov
pop
pop
add
popa
sbb
push
mov
popf
arpl
test
je
dec
out
loop
adc
fdiv
clc
ja
push
scas
ret
sahf
lods
or
mov
jmp
pop
in
iret
mov
outs
or
adc
retf
jl
inc
test
cmp
add
xor
push
ds
imul
jb
lea
shr
xchg
dec
js
fnstsw
cld
addr16
jmp
mov
xchg
inc
or
ins
sbb
push
repnz
mul
mov
and
xor
mov
xchg
frstor
pop
lods
mov
mov
mov
and
stc
cmps
cmp
ror
sub
mov
(bad)
(bad)
sub
mov
repz
cwde
fwait
repz
lahf
mov
retf
es
vandnps
imul
push
xor
cli
dec
cmps
int3
jmp
out
and
cmps
retf
push
cmp
ja
xor
jae
push
ficom
aaa
jb
sub
data16
cmp
mov
adc
outs
sub
aas
in
fisttp
pop
xlat
popa
mov
add
push
les
loope
call
(bad)
(bad)
lock
xchg
outs
les
lahf
mov
add
xor
pop
push
fimul
imul
xchg
adc
loopne
or
xor
push
dec
or
mov
lods
mov
enter
jb
sub
addr16
call
lods
dec
jmp
push
or
imul
inc
push
mov
les
add
ror
iret
xchg
mov
add
in
out
fwait
mov
inc
cmc
int3
lock
or
jae
adc
dec
sub
loopne
out
in
inc
mov
and
jmp
(bad)
xor
inc
sub
bound
stos
sbb
jg
dec
xchg
adc
lea
aam
mov
lds
test
aad
cmp
outs
test
mov
push
jle
xchg
out
loopne
mov
push
dec
dec
pop
pusha
addr16
mov
ins
jp
imul
(bad)
scas
sub
jnp
call
cmp
push
mov
cmp
or
(bad)
or
jnp
pinsrw
retf
imul
div
inc
xor
aas
jle
sub
cmp
mov
ds
aam
lock
dec
cli
or
inc
dec
popf
sar
add
in
adc
jb
xlat
mov
adc
loop
and
xor
das
add
les
andnps
add
(bad)
idiv
push
fdiv
push
dec
push
adc
add
repnz
into
fldcw
ret
(bad)
sbb
mov
push
dec
sbb
push
jo
lods
iret
pop
lods
(bad)
inc
inc
nop
popf
(bad)
inc
out
out
push
dec
and
or
sbb
loopne
out
sub
inc
idiv
fisub
mov
aad
out
enter
sub
loope
xor
push
xor
ret
popa
push
mov
push
push
xor
and
pop
inc
fld
(bad)
sub
popa
xchg
lea
stc
cmp
hlt
inc
out
pop
movs
pop
aam
bound
push
sbb
aam
cmp
push
fistp
scas
dec
push
arpl
stos
mov
mov
pop
jp
cmp
outs
sbb
sub
add
sub
pusha
sbb
pushf
pop
(bad)
rol
pop
rol
push
cmp
push
arpl
pushf
les
test
xor
push
leave
adc
jle
stc
fistp
scas
iret
sbb
mov
frstor
adc
lea
cdq
xor
addr16
inc
rol
mov
cmp
adc
xor
icebp
in
mov
mov
push
clc
fst
loope
push
adc
mov
call
push
fcom
jge
(bad)
iret
ret
jmp
dec
push
or
dec
pop
mov
(bad)
rol
call
add
lds
mov
mov
idiv
pop
ins
xchg
je
xor
jmp
in
jno
push
fadd
in
es
loope
sub
out
add
xor
ins
cli
cmc
fucom
daa
sub
inc
fisub
dec
leave
and
out
mov
dec
hlt
sub
push
lods
jb
or
pop
mov
movs
fs
sub
push
adc
or
jle
stc
(bad)
dec
mov
out
sahf
pop
push
sub
clc
mov
in
cmp
aad
test
jb
stc
in
sbb
inc
sbb
sub
rol
pop
mov
jp
js
adc
sbb
out
mov
(bad)
js
aaa
jae
cs
and
mov
icebp
pusha
sbb
lock
fbstp
or
push
addr16
int
sbb
jne
scas
fst
test
jo
scas
div
mov
push
call
sti
cmps
and
push
dec
enter
jp
inc
adc
add
or
mov
cmps
test
push
cmp
add
push
in
out
fstp
(bad)
test
sbb
push
div
inc
cmp
mov
push
or
icebp
mov
pop
in
xor
inc
test
and
lahf
jg
mov
test
std
mov
popa
jg
cld
aaa
pushf
retf
aas
test
jge
aad
jmp
dec
sbb
mov
mov
hlt
dec
iret
cmc
in
inc
jmp
or
add
mov
jnp
adc
jno
mov
add
sbb
inc
call
jne
pop
(bad)
jmp
outs
and
xchg
cwde
cmp
int3
mov
std
push
sti
or
sub
in
cmp
fs
ins
xor
add
add
mov
xchg
popf
hlt
popf
fwait
adc
push
arpl
and
mov
xor
inc
dec
into
lds
push
retf
add
aaa
adc
push
xlat
(bad)
mov
mov
jo
stos
sub
inc
and
xchg
inc
cmp
and
lock
adc
sbb
mov
dec
xchg
test
pand
ret
mov
jle
scas
in
inc
ss
mov
movs
jle
sub
mov
push
dec
rcr
mov
sbb
sbb
lock
pop
and
sub
dec
rcl
mov
jmp
enter
inc
mov
adc
dec
sahf
sbb
mov
jno
fist
out
jmp
and
xor
push
pop
fild
pop
pushf
mov
stc
pop
or
mov
mov
push
leave
in
scas
jns
cmp
mov
clc
mov
pop
jge
ret
jne
arpl
dec
lods
xor
stc
jmp
ja
(bad)
stos
pop
xchg
mov
clc
mov
rcl
outs
movs
and
stc
mov
pop
mov
add
mov
mov
add
fdiv
fistp
mov
test
rcr
dec
dec
jmp
add
ror
jge
js
adc
out
imul
jb
xchg
lds
das
fist
outs
mov
test
mov
sbb
pop
sbb
test
loope
fisttp
xchg
shl
stos
add
cmps
lods
sub
out
mov
adc
inc
(bad)
add
scas
mov
xchg
jecxz
pop
xchg
xor
cld
add
lea
loopne
cmp
dec
mov
add
add
loopne
inc
std
pop
inc
jne
mov
dec
rcr
sbb
push
mov
int
mul
shl
aas
int3
aas
fmul
es
or
pop
inc
add
out
cdq
inc
in
pop
sbb
xchg
sahf
xchg
lock
gs
xor
jnp
xor
stc
fs
cmc
mov
mov
aad
int3
push
data16
cld
dec
inc
jbe
adc
sub
test
ins
sbb
sub
lds
jbe
sahf
scas
in
out
sbb
lods
or
mov
cmp
cli
push
cwde
mov
mov
jle
mov
dec
movs
fwait
and
fbld
(bad)
shl
and
mov
cld
ltr
outs
mov
mov
pop
jp
xor
sub
jge
mov
add
add
mov
pop
jmp
fdiv
stos
(bad)
fsubr
xlat
cdq
lds
xor
shl
iret
xor
imul
mov
rcl
mov
ds
shl
or
out
test
inc
rcr
pop
imul
sub
call
jb
inc
and
jmp
rcl
adc
push
test
call
mov
nop
cmp
aad
js
cmp
ja
dec
pop
out
cmp
fnsave
mov
lahf
xlat
pop
(bad)
data16
shl
sbb
xor
addr16
cli
adc
dec
scas
add
adc
in
das
pop
mov
cmp
dec
dec
pop
dec
pop
sar
pusha
dec
scas
rol
sbb
test
dec
sbb
mov
ds
and
xchg
dec
jnp
mov
jb
push
ja
ftst
mov
les
xor
into
aad
xchg
mov
jecxz
sub
jl
adc
pop
ja
dec
adc
imul
xor
and
lods
icebp
mov
add
mov
int
mov
cld
jo
and
sbb
clc
mov
xlat
xchg
fadd
lds
es
hlt
xchg
sub
sbb
out
adc
cmp
dec
sbb
or
xor
pop
test
int3
mul
cmp
imul
or
shl
rcl
or
stc
fbld
and
clc
outs
stos
jg
popa
mov
mov
out
ins
jb
scas
sbb
pushf
push
rol
pop
aam
sub
push
stos
jecxz
dec
push
sub
and
mov
int3
int3
pop
mov
xchg
imul
shl
mov
mov
lods
fwait
adc
pusha
sub
dec
test
movs
in
push
push
(bad)
sub
scas
aam
ja
push
push
xchg
rcl
pop
mov
pushf
sbb
jp
inc
add
lods
jp
out
call
push
into
mov
imul
adc
or
lods
mov
push
or
fwait
mov
mov
pop
cdq
in
add
repnz
aaa
or
jl
mov
jecxz
xor
jle
xchg
pusha
pop
js
(bad)
dec
aad
inc
mov
cmp
pop
aaa
int
jle
mov
mov
ror
adc
outs
fist
adc
inc
jnp
cmp
mov
out
idiv
inc
mov
xor
dec
inc
and
pop
dec
cwde
hlt
or
shrd
sub
cmp
mov
test
inc
dec
and
xchg
arpl
(bad)
cld
repz
aas
(bad)
cld
repz
aas
jmp
adc
repz
push
fsub
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ss
cmp
xor
pushf
out
outs
mov
cmp
jmp
outs
daa
dec
or
mov
std
and
(bad)
jns
and
add
mov
call
enter
mov
outs
loop
std
mov
push
je
retf
imul
mov
mov
out
push
sub
int3
ret
shr
jmp
cwde
mov
aas
aas
jecxz
inc
dec
repz
push
lea
out
sbb
sbb
cmp
mov
pusha
push
in
xchg
cmps
adc
xlat
aaa
out
mov
fsub
sahf
mov
or
mov
xor
push
add
lea
fistp
pop
cmp
push
popa
pop
in
and
pop
add
test
lahf
aam
mov
mov
out
outs
jge
pop
xor
sbb
jecxz
cli
xchg
inc
adc
(bad)
aas
push
shl
movs
dec
das
dec
jnp
add
sbb
dec
pop
(bad)
xor
push
nop
push
sbb
out
ins
adc
inc
jle
imul
ret
push
jae
jnp
cmp
xchg
mov
aaa
jg
cmp
jmp
and
jle
ja
jns
xchg
leave
and
enter
scas
xor
jmp
vpaddw
in
sub
frstor
les
fmul
mov
retf
push
fs
jmp
jl
icebp
inc
xchg
pop
mov
mov
aas
cld
ret
mov
lock
mov
bound
add
clc
es
sub
push
jl
dec
push
mov
iret
inc
out
mov
cmc
mov
loopne
adc
and
not
sbb
lahf
loop
push
rcr
mov
icebp
rcl
cli
test
sbb
mov
fdivr
jno
or
mov
push
push
inc
sub
(bad)
iret
adc
scas
call
adc
jmp
outs
dec
mov
fcom
addr16
cmp
adc
call
jmp
lea
dec
sti
iret
stos
and
mov
sbb
push
jmp
ss
mov
sbb
retf
mov
popa
pusha
into
bound
loope
mov
pushf
cdq
mov
std
jne
mov
sub
dec
mov
xor
sub
mov
pop
inc
adc
rcl
neg
mov
outs
scas
cld
hlt
rcr
mov
sti
fwait
mov
ins
gs
sbb
push
daa
in
jg
test
int
mov
sub
mov
or
push
push
je
push
mov
dec
hlt
jnp
pop
adc
in
dec
xor
jg
or
fs
xchg
sbb
mov
mov
xchg
pop
inc
fldcw
mov
push
cwde
push
sbb
mov
mov
mov
mov
(bad)
test
and
stos
sbb
call
xor
inc
mov
ret
and
mov
inc
cmp
lahf
into
xchg
dec
mov
pop
leave
jg
or
lea
jno
mov
sub
shl
xchg
sbb
mov
and
mov
enter
pop
push
ret
mov
imul
sbb
sub
sub
cld
enter
cmp
mov
aaa
scas
mov
or
stos
rcl
pop
jnp
(bad)
inc
jmp
jg
sbb
out
int
ja
jp
jecxz
jo
lods
frstor
in
xor
jl
(bad)
aad
pushf
fsub
xor
stos
loop
icebp
and
inc
fisub
inc
rcl
dec
js
push
mov
enter
ins
mov
arpl
cmp
idiv
cmc
data16
rol
data16
inc
into
(bad)
stos
inc
add
out
clc
xchg
mov
xor
mov
movs
jmp
xor
and
mov
repz
cmp
test
cs
icebp
xor
outs
in
push
mov
gs
outs
aas
pop
cli
jbe
out
int3
movs
push
and
retf
mov
int3
ins
xchg
loope
test
out
jb
rcr
hlt
(bad)
sub
pop
nop
ins
daa
fdiv
ins
ja
cdq
xchg
in
or
retf
pusha
sub
out
sar
add
psubq
or
into
movs
je
(bad)
pop
jge
call
pushf
ret
imul
aad
imul
xchg
mov
jp
cmp
es
mov
out
dec
xchg
pop
loop
loop
pop
adc
or
es
cmc
loop
cmc
lock
pop
not
test
pop
call
add
sub
das
aad
or
outs
cld
cs
cdq
inc
data16
(bad)
mov
cmps
cdq
loope
mov
push
or
sub
sub
xchg
iret
jp
pusha
popf
fistp
mov
xor
jmp
rcr
or
stc
or
loopne
push
dec
mov
jge
mov
or
fsub
mov
lods
xchg
mov
push
idiv
dec
movs
mov
lahf
push
test
lock
adc
stc
inc
fwait
dec
pop
lock
add
mov
or
inc
xor
clc
xor
(bad)
xchg
pop
outs
cli
lock
and
nop
aaa
mov
ret
stos
or
jg
ror
jmp
shr
sub
add
test
lods
popf
ja
pop
adc
arpl
push
sub
push
out
mov
pop
div
(bad)
mov
loope
mov
ret
or
mov
(bad)
pop
jae
jmp
adc
cmp
mov
(bad)
xchg
or
inc
ss
xchg
(bad)
test
fld
aas
aaa
cdq
fwait
or
mov
retf
xlat
ds
mov
or
mov
push
jno
mov
data16
or
or
pop
jns
xor
or
jp
movs
fidivr
pop
ins
sub
mov
xchg
and
psrlq
movs
(bad)
cs
adc
mov
pop
mov
sub
inc
dec
jmp
ror
and
mov
outs
xchg
stos
cmps
jp
enter
js
lds
add
mov
repnz
aaa
je
loop
pop
inc
push
push
ja
inc
sar
pop
aad
xor
jmp
sub
cmp
mov
loop
cld
loop
ret
sti
std
int
jae
(bad)
inc
pop
jnp
dec
(bad)
push
imul
or
outs
push
cmc
daa
add
iret
dec
test
pop
adc
dec
sub
pop
es
sbb
ret
lock
es
jnp
mov
fwait
repz
fcmovne
mov
sub
cld
div
std
and
inc
test
or
jo
dec
add
popa
mov
mov
popf
fnstsw
push
es
xchg
mov
xor
cdq
jmp
int3
sub
out
call
and
lds
inc
call
add
add
retf
cs
call
jnp
in
in
aaa
pop
fstp
imul
xchg
popa
addr16
repnz
mov
cdq
pop
push
(bad)
lock
out
push
dec
pop
movs
jb
jecxz
jl
mov
mov
mov
(bad)
jb
adc
dec
test
adc
ss
fcmovne
fmul
mov
jns
pop
sub
call
mov
loopne
xchg
outs
scas
lock
repz
jmp
pop
test
stos
sahf
repz
and
stos
push
or
sar
sub
lock
gs
popa
in
xor
es
(bad)
mov
jle
ins
and
ret
(bad)
int
ja
push
mov
sbb
lods
push
xchg
fwait
add
lea
mov
jle
in
add
(bad)
imul
sar
sub
in
xor
cs
push
(bad)
cmp
das
xchg
and
cld
fwait
jae
fcom
enter
xor
xor
pop
nop
sub
sub
retf
mov
cmp
(bad)
fwait
test
cwde
repz
push
pop
mov
ja
jle
mov
std
jb
xchg
pop
loopne
push
mov
mov
cwde
adc
les
mov
test
aad
xchg
(bad)
sbb
test
dec
fld
pop
cs
push
out
int3
jle
jnp
je
mov
jge
mov
mov
mov
push
sahf
ins
cdq
sub
jbe
inc
aaa
call
outs
bound
mov
sbb
test
mov
mov
outs
into
push
out
pusha
call
push
jg
jl
imul
leave
push
daa
(bad)
hlt
xchg
mov
inc
pop
pop
cmp
fs
scas
mov
cmp
mov
dec
int
xchg
les
adc
jecxz
(bad)
jo
push
add
cmp
sbb
pusha
mov
or
mov
xchg
add
cld
push
push
icebp
adc
jecxz
inc
mov
leave
sub
adc
jnp
int3
jne
ds
ja
paddusw
test
sbb
mov
loop
jns
test
xor
xchg
repnz
neg
xor
aas
outs
push
lock
push
mul
add
xlat
jbe
cmp
(bad)
jecxz
xchg
cli
inc
and
leave
add
inc
movs
sub
inc
adc
add
pop
in
and
mov
adc
aaa
push
sub
and
fimul
add
rcr
adc
xor
cmps
or
pop
fwait
(bad)
adc
push
xchg
mov
cli
leave
dec
dec
retf
xchg
mov
ret
test
sub
fsubrp
retf
std
ja
mov
out
xor
xchg
out
mov
push
call
(bad)
imul
ds
inc
cmp
sbb
pop
fwait
cmps
movs
test
in
pop
(bad)
jg
inc
sub
xchg
mov
mov
mov
outs
(bad)
adc
sbb
push
sbb
add
add
mov
jbe
jne
sahf
push
mov
test
and
fistp
sbb
push
or
call
push
xor
outs
xchg
fwait
daa
xchg
inc
add
icebp
jb
fisub
repnz
movs
aad
push
scas
fiadd
ret
fwait
(bad)
xchg
jg
xlat
cmp
loope
mov
ret
cmp
or
mov
call
sti
xchg
pop
push
and
imul
xchg
push
shr
dec
shl
jmp
loop
test
sbb
int
sar
inc
into
push
es
pop
jp
mov
stos
sub
adc
or
push
jp
sbb
je
add
cmp
popf
(bad)
je
fist
(bad)
int
sti
jno
enter
sar
mov
jg
sbb
cmp
xor
pop
aad
aas
mov
test
bound
aam
ret
jmp
test
pushf
in
lock
mov
cmps
cmps
sbb
fild
add
stos
in
add
jl
push
fwait
push
pop
mov
sbb
adc
(bad)
aad
push
sub
cs
jmp
sbb
fistp
test
js
fmul
movs
inc
(bad)
fdiv
mov
(bad)
pop
retf
lods
push
retf
daa
dec
loop
pop
lods
aas
jle
ds
call
fsubp
cmp
shl
cmp
sub
popa
loopne
cmp
fistp
pop
mov
cmp
or
stos
adc
cmps
iret
sub
inc
shl
jecxz
shl
mov
jecxz
leave
aaa
imul
xchg
mov
lds
in
out
aas
jno
adc
inc
xchg
adc
lods
jno
or
in
mov
push
das
or
add
mov
imul
fild
sbb
xor
movs
sub
push
rcl
faddp
push
(bad)
ds
xchg
aas
jmp
xor
ins
fndisi(8087
add
retf
fsub
(bad)
fadd
cmp
nop
pop
mov
dec
ss
ja
ret
sub
aad
xchg
mov
mov
cmps
pop
dec
dec
stc
xchg
pop
pop
or
(bad)
dec
cmp
jmp
das
ret
out
push
lods
dec
fcomi
div
cmp
imul
pop
cmp
loop
dec
sub
mov
imul
and
rcr
aaa
jmp
xlat
loope
loop
cmps
xor
(bad)
repnz
or
mov
cmp
mov
cs
stos
cmps
pop
mov
repnz
enter
hlt
jle
sbb
xor
out
jp
mov
dec
and
mov
sbb
sub
xchg
cwde
xchg
pop
adc
arpl
cmp
dec
fiadd
dec
sbb
shr
gs
fcmovne
in
or
out
loopne
mov
inc
aad
sbb
mov
cmp
sti
add
xor
xchg
std
cmp
sub
mov
cmp
out
adc
cmp
out
mov
xor
not
sub
and
adc
ds
gs
int3
icebp
push
mov
lods
call
cmp
mov
and
fs
or
sub
xchg
xlat
cmp
fcomp
popa
mov
xchg
retf
pop
lea
aas
ins
adc
dec
test
mov
pmaddwd
imul
or
pop
add
ret
push
pop
sub
pop
addr16
test
jmp
push
pop
sbb
add
jmp
pop
or
call
fstp
sub
mov
mov
push
in
in
xor
je
push
xor
dec
aaa
ret
sbb
sbb
out
stos
fcmovb
fcomi
iret
mov
cmp
in
mov
popa
push
bound
iret
mov
xchg
jns
pop
sub
stc
stc
mov
and
push
iret
push
jno
or
jb
mov
jecxz
clc
mov
cmp
sbb
aaa
mov
inc
mov
gs
sbb
xor
ror
xchg
cmp
sti
mov
(bad)
push
xor
mov
push
add
xor
lar
dec
xor
or
push
aas
or
aas
or
sbb
(bad)
xchg
stos
xchg
sub
jbe
popf
adc
shl
mov
sbb
int
aaa
jae
mov
jne
xor
stos
or
int
push
outs
out
into
mov
and
arpl
cli
stos
inc
or
and
xor
xor
sub
not
pop
fcom
and
repnz
(bad)
fstp
lea
jbe
out
mov
xor
push
lods
pop
or
push
ins
outs
sbb
push
lock
cmp
movs
or
test
cmp
ret
scas
sahf
add
stc
pushf
push
fsub
cmc
fsub
and
pop
aad
fs
jp
cld
cli
or
jo
in
icebp
test
test
pminsw
cmps
or
arpl
xchg
sbb
enter
icebp
mov
adc
mov
mov
adc
add
and
cmp
and
test
mov
push
or
out
mov
scas
mov
push
imul
sub
outs
xchg
push
cmp
rol
cmp
aam
fimul
sbb
(bad)
jno
jo
test
lods
pop
push
push
add
cmp
pop
jno
sbb
repz
aas
and
mov
jo
bnd
cmp
and
dec
xor
or
sahf
inc
jge
fwait
je
stos
popa
inc
popa
jg
and
enter
push
xchg
stos
inc
or
clc
je
or
es
push
scas
sub
add
sbb
xor
ja
push
mov
or
ja
es
xchg
in
cld
jo
push
imul
enter
xchg
pop
sti
xor
lds
scas
adc
cmp
dec
mov
lock
mov
push
push
and
push
dec
in
ja
xor
cmp
call
and
push
xor
dec
shufps
(bad)
ins
inc
mov
scas
fcmove
or
mov
pop
mov
enter
jbe
sub
fld
and
xor
xor
mov
xchg
jbe
mov
popa
inc
(bad)
rcl
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
pop
add
shl
xlat
cmc
jle
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
aam
and
pop
add
scas
cmp
jp
outs
fisubr
ret
mov
fnsave
ret
xor
xor
int
aam
popf
pushf
fwait
mov
dec
dec
mov
cmp
iret
sti
js
jns
pop
add
push
push
fbstp
call
mov
pop
cmps
or
outs
mov
and
shl
repz
push
xchg
loop
push
xor
ins
inc
jmp
test
mov
jecxz
jge
or
xor
sub
cmp
aam
call
push
xchg
mov
cwde
fcomip
sub
std
cld
enter
mov
mov
in
jbe
mov
ret
push
mov
and
sbb
(bad)
sar
stc
xor
xchg
adc
test
adc
sbb
pushf
jmp
cmp
xor
mov
test
cmp
mov
idiv
cmps
repz
and
retf
adc
mov
xor
xchg
cwde
pop
(bad)
aad
jmp
or
sti
inc
movs
push
xor
retf
arpl
adc
imul
pop
movs
std
int
dec
jo
dec
push
jmp
retf
or
pushf
fisub
cmp
sbb
xchg
sahf
inc
sub
or
or
mov
(bad)
cdq
and
pop
dec
idiv
pop
and
and
leave
adc
loop
data16
sbb
loope
shl
inc
movs
cmps
leave
cmp
cmp
cld
mov
imul
in
clc
aam
xchg
add
adc
aas
mov
call
(bad)
js
dec
outs
dec
stc
cmp
mov
cmps
jmp
jmp
test
imul
jge
aam
mov
retf
sahf
scas
pop
cdq
mov
pop
jae
in
mov
ret
cmp
inc
pushf
xor
sub
fstp
test
aas
lea
xchg
out
gs
mov
inc
cwde
jp
ja
in
inc
jmp
inc
aas
aam
adc
std
repnz
sub
js
cmps
inc
push
dec
dec
push
test
dec
adc
movs
retf
movs
cmp
adc
pop
inc
pop
mov
or
cdq
test
ret
aad
pop
or
inc
cmp
jg
mov
or
mov
inc
inc
pop
sbb
std
ins
fsubr
shl
rcr
push
das
xor
mov
mov
inc
inc
jns
enter
(bad)
pop
rol
imul
sbb
push
cmp
test
into
(bad)
dec
mov
jb
xchg
rol
or
sbb
movs
lods
sbb
or
and
mov
int
popa
ror
xor
shr
mov
xchg
mov
dec
mov
add
jmp
test
or
repz
pusha
mov
hlt
adc
arpl
cmps
psubusb
popf
sub
cmc
lahf
test
fcomp
mov
rep
fisubr
cmp
ss
shr
jnp
jmp
retf
mov
jmp
jg
fmul
(bad)
inc
pusha
nop
repz
dec
loop
xor
mov
xchg
enter
mov
dec
and
loop
repnz
icebp
mov
and
scas
mov
jno
cmp
xchg
loope
cmc
test
std
push
shl
mov
mov
and
and
add
or
push
pop
pusha
push
aaa
das
push
inc
push
out
sbb
inc
test
jmp
stc
stc
jle
add
xchg
sub
int3
add
in
xchg
data16
cmc
or
pusha
aaa
call
push
or
test
xchg
test
jg
mov
cli
xchg
popa
cmp
jb
mov
call
mov
pop
retf
loope
pop
jge
inc
es
inc
or
adc
push
cmp
rol
or
lods
es
leave
adc
sbb
lods
or
jmp
dec
sub
sub
and
fsub
(bad)
aam
pop
mov
or
(bad)
push
fist
out
in
shl
ficomp
je
leave
adc
and
pop
ins
push
out
xchg
adc
xchg
int
jno
or
ins
push
in
stos
popf
adc
in
stos
xchg
pop
sbb
js
mov
gs
stos
mov
fsubr
(bad)
xchg
sbb
rol
loopne
das
push
inc
jnp
jl
dec
jb
pop
(bad)
jmp
lock
iret
(bad)
scas
ins
cmps
or
jno
cld
rcl
(bad)
loop
xor
mov
jns
lea
adc
std
int
cli
fwait
pusha
add
ror
cwde
add
scas
stc
sbb
mov
call
outs
push
lahf
mov
movs
mov
ss
jo
or
rcr
add
cs
les
jo
dec
movs
stc
add
add
adc
jne
cmp
popa
pop
add
dec
sbb
iret
pop
adc
pop
adc
cmp
fwait
cmp
nop
jmp
popf
enter
scas
dec
or
inc
popf
adc
mov
jno
sbb
push
jne
xchg
(bad)
jle
test
std
out
fsubr
xor
lds
jae
xor
inc
dec
lods
mov
test
out
mov
mov
enter
and
adc
sub
mov
arpl
mov
lahf
mov
scas
iret
pop
leave
pop
xchg
ins
lahf
ds
aad
adc
cs
aam
pop
sub
aaa
call
cmp
in
jns
push
rcl
stos
or
xchg
in
shl
mov
add
sar
into
test
lods
sar
push
(bad)
inc
in
clc
sub
nop
test
movs
mov
sub
shr
fcmovbe
jl
jg
sbb
pop
jge
xlat
dec
loopne
adc
leave
movs
xchg
cmp
sbb
fdivr
mov
bound
xchg
addr16
lock
std
int
xchg
jle
mov
or
int3
loop
in
call
aad
jmp
imul
cli
sub
push
retf
push
sar
std
sub
pop
jno
test
call
leave
add
mov
imul
xchg
popf
popa
cld
sbb
lds
mov
lahf
push
xchg
xchg
and
jnp
test
mov
loope
mov
sub
pop
imul
pop
jnp
test
mov
mov
inc
lods
lds
xchg
outs
cmps
cmp
mov
fnstcw
cmp
movs
and
inc
mov
outs
test
dec
retf
call
outs
adc
add
mov
test
sbb
xor
sub
mov
imul
into
repz
in
dec
lods
das
mov
sbb
aam
mov
mov
shr
mov
cs
adc
xchg
lea
dec
shr
xchg
gs
sti
cs
retf
sbb
lods
in
hlt
xchg
shl
(bad)
lock
and
fild
mov
cmp
and
bound
rcl
dec
leave
mov
out
push
dec
popa
push
jg
push
repz
(bad)
retf
in
cmps
adc
fwait
(bad)
jmp
jmp
sbb
retf
xor
and
mov
ror
mov
jp
dec
retf
js
(bad)
les
repnz
add
mov
bswap
js
inc
clc
pop
xchg
jb
int3
lods
cmp
int
mov
jecxz
fbld
mov
test
test
imul
jmp
inc
shr
xchg
push
xor
dec
mov
mov
add
mov
pop
iret
jns
sti
mov
(bad)
push
sbb
dec
mov
jecxz
je
jne
enter
push
sub
mov
jb
xor
push
xor
jae
jbe
sub
and
std
ret
xchg
ficom
sar
ret
rcr
fsubr
cmp
movs
(bad)
sbb
lock
or
mov
dec
ja
or
mov
dec
into
repnz
mov
push
jo
push
push
outs
inc
dec
repz
enter
push
fisubr
cs
ret
add
adc
loope
and
sub
ja
mov
xor
and
add
scas
mov
mov
aaa
cmps
and
push
ins
ret
cdq
mov
mov
jl
push
xor
mov
add
xchg
jbe
stos
xchg
push
lahf
pop
jae
pop
add
sub
pop
pusha
int
pusha
les
inc
int
mov
jbe
xchg
icebp
sub
out
ins
int
sbb
fucomp
sahf
pop
fisubr
es
push
push
push
sub
sbb
dec
or
daa
xchg
jo
jmp
or
das
test
ficom
in
sub
sbb
push
mov
push
cmps
xlat
jmp
sbb
mov
dec
push
push
shl
xlat
(bad)
stc
push
imul
fwait
js
(bad)
or
ror
mov
loope
retf
imul
sar
push
test
lods
push
add
push
ja
retf
sub
ins
shl
pop
test
cmps
xchg
mov
adc
sbb
pusha
ja
xchg
imul
add
mov
imul
iret
test
sar
push
fiadd
pop
jae
push
mov
pop
cmps
fld
add
sbb
mov
adc
(bad)
(bad)
mov
fmul
mov
jmp
lods
xor
dec
sub
dec
cmp
mul
xor
mov
add
sub
add
sub
sbb
add
sub
mov
mov
xchg
or
mov
jmp
shl
mov
mov
adc
push
imul
int3
add
pop
(bad)
data16
mov
gs
in
xor
cmp
cs
rcl
je
nop
sub
add
pop
dec
outs
mov
cld
inc
jle
pop
pushf
imul
pop
shl
mov
lods
xchg
jecxz
sbb
inc
jp
in
or
enter
fsub
push
nop
mov
nop
cmc
repnz
push
mov
and
mov
cmp
push
cmps
inc
std
cli
js
or
mov
out
inc
test
mov
xchg
cmp
sbb
jb
or
in
js
cmp
(bad)
loop
adc
scas
fld
outs
(bad)
mov
js
hlt
pop
test
inc
push
(bad)
in
xchg
add
jl
imul
imul
cmp
add
pop
out
call
out
dec
sub
dec
movs
ins
push
pop
fwait
add
mov
mov
daa
iret
jae
daa
cs
mov
jp
daa
add
adc
cmc
pusha
(bad)
cmps
stos
out
dec
(bad)
or
mov
out
test
hlt
jne
dec
int
movs
or
mov
call
repnz
loop
iret
div
ss
pop
push
push
xchg
call
sahf
push
cmp
inc
and
fwait
loop
jg
popa
hlt
push
test
shl
rcr
icebp
retf
fwait
out
jno
sahf
push
jmp
lds
scas
repnz
and
mov
pop
mov
xchg
mov
outs
or
retf
push
stos
in
movs
loope
xor
push
aas
push
repz
cmp
and
fisttp
and
cmp
lock
jns
sbb
push
movs
ins
imul
out
and
jbe
das
test
fisttp
xchg
repnz
sahf
jae
cmp
fisub
aad
push
cmp
sub
push
jge
dec
push
sub
cdq
mov
pop
cwde
fistp
mov
jmp
fdiv
fcmovu
ja
lods
xchg
loop
cs
xchg
es
hlt
ins
push
push
or
fadd
div
sbb
in
jle
push
mov
pop
ss
jae
std
sbb
into
frstor
jae
aaa
pop
inc
and
mov
push
sub
xor
or
aad
push
sbb
lahf
push
mov
mov
fld
mov
rol
mov
mov
sbb
mov
cmp
dec
fmul
adc
mov
and
adc
(bad)
rcl
mov
ss
and
or
xchg
sbb
mov
aas
subps
cli
scas
pusha
xchg
adc
xlat
rol
cmps
lahf
sahf
fimul
dec
add
ficom
push
ja
mov
inc
cld
inc
push
push
cmp
or
(bad)
push
clc
fld
mov
lods
pop
retf
lods
jno
mov
add
int
push
push
mov
in
imul
sti
inc
inc
cmp
xlat
stos
ret
or
dec
out
mov
and
jmp
jmp
in
(bad)
xchg
mov
pusha
fcomip
int
iret
mov
mov
(bad)
cld
enter
ins
pop
pop
mov
lock
enter
imul
daa
mov
fbld
mov
xor
adc
retf
jno
outs
bound
(bad)
repz
mov
push
sbb
mov
fldenv
cmp
mov
sbb
mov
inc
mov
nop
fwait
jl
xor
sub
idiv
lahf
push
jmp
push
dec
jl
mov
test
push
push
jno
sbb
jae
popa
call
retf
pop
xor
scas
inc
repz
stos
(bad)
loope
shr
mov
or
addr16
ins
(bad)
cmc
leave
inc
or
jbe
ins
std
loope
mov
es
in
cmp
sbb
ds
maxps
shl
or
inc
dec
add
jb
pusha
jnp
mov
sub
cmp
add
pop
cs
(bad)
repnz
hlt
cld
xchg
idiv
push
(bad)
(bad)
aad
pop
xchg
out
cwde
push
aaa
daa
mov
popa
xchg
mov
lods
cmps
hlt
adc
fwait
adc
enter
mov
stc
dec
cmc
das
xlat
fcomp
jl
xchg
movs
cwde
mov
pushf
repz
sbb
das
leave
pop
jp
mov
dec
dec
imul
add
cmp
hlt
jecxz
sub
mov
es
out
sbb
test
ins
dec
neg
pop
xor
pop
sbb
push
jl
gs
(bad)
mov
inc
pop
stc
mov
pop
dec
inc
jle
mov
mov
xor
bound
je
int3
nop
mov
jp
adc
in
ror
lods
imul
add
cmps
mov
ds
pop
lahf
in
sbb
lods
sbb
mov
adc
lahf
mov
pop
sub
dec
popa
xchg
or
jb
push
fisubr
or
sub
pop
hlt
movs
jae
pop
sbb
sahf
mov
pop
pop
sub
pop
aas
mov
movs
ja
mov
jle
pop
enter
adc
hlt
adc
xor
xchg
adc
aaa
ss
add
aad
sbb
cld
jne
xor
ja
(bad)
sbb
outs
clc
rcl
ret
test
lds
mov
mov
mov
xchg
aam
setb
ret
std
mov
hlt
add
fwait
push
mov
pop
push
mov
mov
jecxz
mul
jbe
add
and
movs
cmp
mov
out
or
leave
jno
inc
ja
ret
dec
dec
in
out
or
cmp
mov
and
mov
test
fidiv
repz
or
mov
sub
scas
push
xchg
mov
xchg
jg
neg
fcom
ins
sar
sti
and
push
ins
je
(bad)
jne
xor
xor
pop
cli
js
leave
jle
sub
mov
pusha
adc
in
mov
mov
cli
or
dec
sbb
es
sub
add
cli
in
lods
pop
daa
test
out
push
das
or
push
and
repnz
cmp
fnsave
aas
jo
inc
jmp
pushf
dec
fwait
bound
add
fs
aam
sbb
sub
sub
out
iret
pop
sahf
popa
mov
inc
stos
mov
pop
ret
jg
mov
les
arpl
fdiv
lods
and
ficom
das
xchg
dec
push
cmp
out
jg
stc
out
call
add
jg
sbb
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
fldenv
mov
(bad)
fstp
int3
cmp
xchg
cdq
sub
in
cdq
mov
leave
cmp
jnp
jg
sbb
in
cmc
jle
mov
add
stos
sub
inc
mov
ins
ins
call
xor
sbb
shr
push
mov
mov
fidiv
scas
cmc
mov
xor
fwait
push
or
rep
dec
jl
push
rcl
cli
sbb
push
out
and
xchg
mov
jge
icebp
xchg
(bad)
pop
maskmovq
not
xor
jbe
or
dec
je
out
or
lea
nop
js
cmp
jnp
sahf
rcl
mov
in
mov
fisubr
and
push
inc
pop
lea
movs
mov
lock
stc
inc
lods
pop
sbb
adc
add
in
cmps
pop
jecxz
adc
mov
arpl
xor
imul
int
aad
push
stos
adc
popf
pop
jmp
sbb
hlt
jmp
mov
inc
popf
cmps
ss
jmp
adc
mov
push
pop
pop
shr
lods
sbb
call
sbb
pop
div
jge
xor
inc
pop
retf
pushf
xchg
popa
iret
xor
fstp
fistp
pop
fdivr
outs
icebp
dec
(bad)
or
jl
test
jecxz
xchg
movs
out
cld
cmc
fs
dec
push
mov
xlat
loope
push
leave
cwde
mov
ins
cli
mov
push
sahf
iret
nop
(bad)
imul
xchg
out
scas
xchg
stos
sti
icebp
in
das
adc
sbb
cmp
cmps
xor
sbb
shl
adc
out
sbb
and
fdivr
adc
movs
and
loope
jge
test
cmp
aas
adc
mov
mov
lea
xchg
xchg
or
xor
jmp
adc
push
cmc
mov
int
daa
mov
adc
aam
push
mov
mov
push
jge
stos
xor
push
xchg
sbb
cmps
repnz
mov
mov
jns
mov
loop
rcr
xlat
xchg
std
test
jne
cli
xchg
or
mov
mov
lock
ret
out
stos
pop
rcl
jge
ja
aas
xchg
mov
fidivr
je
jecxz
repnz
pushf
or
cmp
jmp
dec
cmp
pop
sub
fimul
out
test
ffreep
loop
mov
dec
jecxz
mov
cmp
addr16
mov
jb
ds
mov
(bad)
jns
retf
mov
test
fwait
std
add
out
es
push
lods
sub
ins
adc
(bad)
fcom
popf
cld
mov
push
sub
out
dec
dec
sbb
dec
arpl
cmp
fild
ror
xchg
nop
arpl
push
add
mov
jl
cli
ficomp
shr
(bad)
jns
push
mov
bound
mov
daa
int
jmp
popf
inc
jbe
outs
mov
sub
sub
sbb
fimul
cwde
fidivr
aaa
add
and
xor
xor
xor
loopne
(bad)
call
jmp
mov
mov
dec
jg
lea
sub
inc
push
out
cmc
push
nop
(bad)
test
(bad)
call
xchg
and
ins
mov
pop
loope
and
cld
mov
mov
enter
test
sbb
or
retf
sub
cmps
shl
or
ficomp
pusha
sub
xor
sbb
ss
xchg
lods
dec
jecxz
mov
mov
cmp
jo
xchg
lahf
je
je
dec
pop
retf
mov
sbb
lods
lds
push
jle
cld
push
sbb
xor
sbb
mov
xchg
pop
xlat
icebp
dec
test
repz
(bad)
rcr
jbe
push
adc
mov
ror
mov
pop
xchg
jp
cmp
lods
fs
leave
xchg
test
call
pop
dec
and
int
mov
mov
jl
mov
(bad)
xor
shl
or
adc
std
stc
stos
cwde
popa
loope
fldcw
jno
jg
mov
xor
mov
in
mov
add
inc
arpl
xor
pop
cmc
rcl
lods
cmc
pop
shr
xchg
pusha
cmc
sbb
fs
mov
rcr
adc
xlat
mov
in
xchg
loop
loope
xor
jg
inc
pop
ja
pop
sub
jmp
or
dec
jns
sbb
and
jmp
mov
fisttp
arpl
push
scas
pop
pop
sub
(bad)
mov
aas
jmp
and
cmp
jae
mov
mov
dec
cs
adc
xor
mov
mov
and
adc
test
mov
and
push
pushf
rcl
sbb
pop
jl
stc
retf
xor
cmps
ret
ins
push
ss
stos
push
dec
imul
mov
mov
cmp
(bad)
in
jns
into
mov
mov
and
out
cmp
dec
cmp
pop
hlt
dec
lock
int
outs
in
jb
dec
hlt
mov
std
ins
ficom
dec
div
mov
test
sub
rcl
out
pop
mov
lds
lds
dec
push
int3
pop
sub
das
imul
stc
cmovo
mov
dec
packsswb
in
xchg
fwait
enter
popf
hlt
jecxz
iret
mov
lods
mov
je
call
mov
dec
sbb
imul
xor
dec
loopne
hlt
inc
sub
sbb
adc
into
in
sub
fdivr
int3
xchg
inc
jecxz
xchg
inc
mov
push
adc
dec
jl
in
mov
lds
xchg
add
lock
xchg
sub
imul
arpl
or
xchg
cmp
enter
xchg
mov
stos
xlat
push
fcmovb
pop
mov
xor
mov
mov
(bad)
mov
rcl
cmp
int
and
xor
xchg
fs
jp
popf
xchg
jp
imul
call
loope
xchg
les
pop
data16
mov
sbb
cvtps2pi
pop
out
mov
sub
dec
inc
imul
jne
pop
sub
mov
ins
mov
pop
not
fcom
add
dec
pop
mov
pop
adc
mov
fstp
jmp
inc
sub
test
mov
sar
cmp
adc
inc
push
leave
xchg
sub
nop
jg
mov
xor
cwde
cdq
aad
mov
das
sub
fidiv
xor
sub
ins
jb
mov
adc
sbb
pop
or
jg
lahf
shl
out
stos
jmp
movs
jge
xor
fsubr
add
fs
add
fmul
arpl
fld
mov
adc
sub
jmp
es
test
mov
ret
push
add
jb
fsub
jb
mov
lds
mov
mov
fadd
jae
jmp
(bad)
lea
sub
push
adc
in
fwait
lahf
mov
mov
cs
pop
adc
dec
xor
cmp
push
sar
and
daa
push
mov
shl
sbb
dec
fcmovbe
add
aam
mov
cmp
ja
(bad)
adc
js
mov
sbb
dec
jecxz
retf
sbb
and
pusha
mov
adc
mov
jl
mov
cmp
enter
pop
enter
cmp
(bad)
add
push
xchg
in
push
shl
or
out
inc
(bad)
mov
leave
aam
add
mov
fs
repz
ins
or
lahf
sbb
call
out
xor
pop
inc
and
sbb
jge
daa
movs
cmp
add
mov
add
out
test
adc
dec
ds
mov
xchg
enter
neg
add
js
sub
call
jo
dec
pop
neg
pop
mov
dec
push
pop
mov
pop
aas
sub
dec
daa
xor
xor
mov
ficom
mov
bound
lahf
jmp
lea
std
mov
cmp
and
aad
jbe
push
and
dec
adc
rep
push
lahf
les
xor
mov
adc
push
push
dec
sbb
jl
xor
cwde
fdiv
sbb
cld
data16
mov
les
iret
out
in
aad
add
jmp
mov
push
jge
rcr
pop
(bad)
adc
imul
xor
fs
inc
mov
jbe
cdq
mov
dec
and
rol
(bad)
xor
mov
stos
popf
repnz
cmp
add
xchg
arpl
out
sbb
xor
test
in
loop
sbb
ret
clc
xlat
mov
inc
pop
push
xor
mov
into
pop
sub
mov
mov
xchg
mov
sub
cmp
call
lahf
push
mov
icebp
outs
cmp
mov
sbb
jmp
sub
ds
jge
aaa
cmps
xor
dec
adc
jge
lahf
aad
ja
xchg
arpl
es
repz
cdq
mov
jecxz
sbb
out
cmps
or
test
dec
cli
mov
inc
cmp
adc
js
mov
lea
sbb
ret
in
mov
lahf
ja
mov
adc
mov
push
sti
or
pop
fsubrp
dec
rep
(bad)
scas
leave
sub
jae
sub
out
icebp
ficomp
jno
jbe
inc
add
mov
inc
push
enter
fcom
xor
mov
lods
inc
jmp
add
and
movs
cli
jg
ins
or
mov
xor
loope
stc
mov
push
aaa
cmp
iret
push
sbb
jns
loop
inc
push
push
jno
xchg
(bad)
lods
adc
test
add
jecxz
into
mov
cwde
xchg
das
outs
jle
je
cmp
out
cmc
fwait
outs
and
adc
hlt
pop
rol
adc
clc
cmps
stos
jnp
xchg
and
dec
and
jmp
inc
jae
sub
push
push
xchg
or
cwde
inc
mov
(bad)
xchg
or
push
ret
fld
mov
out
mov
dec
adc
xchg
dec
loopne
stc
adc
mov
push
and
fidivr
fild
ins
lds
sbb
and
out
imul
sub
and
pmuludq
add
inc
and
sub
inc
mov
jg
adc
fisubr
enter
mov
jg
clc
cmp
mov
in
mov
dec
or
cld
call
sub
test
cli
mov
imul
leave
xchg
scas
(bad)
test
or
pop
ds
mov
out
(bad)
push
and
outs
adc
mov
int3
sub
aas
mov
fsub
push
popf
mov
xchg
sub
pop
or
movs
mov
sub
push
and
not
xchg
adc
shr
adc
into
or
and
cmp
div
sub
popa
and
fdivr
inc
fild
cmp
and
jnp
mov
jno
mov
inc
and
mov
add
xchg
pop
lock
retf
outs
jno
jmp
mov
dec
(bad)
in
js
push
inc
popf
sbb
jg
movs
arpl
xchg
daa
fisttp
pop
inc
outs
sahf
xor
xchg
and
pop
scas
mov
les
fcomp
add
adc
push
imul
stc
dec
mov
fcom
inc
cmps
inc
mov
jl
test
inc
pop
sbb
repnz
cs
imul
mov
dec
pop
pop
call
(bad)
fadd
sbb
mov
dec
repnz
cmps
enter
xlat
fst
xor
or
mov
daa
sahf
jne
cdq
aas
and
repnz
add
dec
cdq
sub
xchg
mov
cmc
fst
fucomip
ffree
in
pop
nop
push
repnz
jne
cmps
lahf
xchg
xchg
std
jbe
push
add
test
loopne
in
mov
xchg
in
sbb
sbb
adc
mov
ins
sub
je
jb
cdq
outs
sbb
loope
pop
dec
cmp
dec
xchg
call
dec
(bad)
fadd
add
mov
or
ror
mov
mov
loopne
scas
lds
in
mov
test
mov
sub
outs
cdq
ja
fs
add
jbe
xor
addr16
or
mov
cmp
fisttp
adc
(bad)
shl
repz
jmp
outs
fnstenv
ins
mov
mov
jmp
sti
jmp
pusha
jp
pop
iret
jnp
push
out
js
push
pop
mov
mov
jo
pop
mov
pop
dec
push
xchg
mov
pop
and
xchg
inc
pushf
or
std
cmp
mov
nop
sub
in
cld
enter
into
push
cli
es
lds
pop
fwait
jne
or
lods
mov
adc
dec
fild
ja
repz
cmc
lods
mov
icebp
movs
cwde
xor
push
inc
mov
sbb
add
pop
lods
inc
mov
in
imul
stos
in
dec
mov
xchg
mov
xchg
mov
sub
outs
dec
add
dec
pop
pop
leave
mov
(bad)
pop
adc
repnz
addr16
clc
(bad)
mov
xor
bound
mov
push
cld
rcl
fdivr
sbb
inc
ins
jmp
movs
fs
(bad)
fisub
xchg
sbb
imul
dec
js
ror
pop
js
and
bnd
test
mov
out
mov
push
dec
xor
loopne
xor
push
jmp
mov
test
push
bound
loopne
sub
jo
rcr
cmp
dec
xchg
jle
pop
ret
sub
dec
inc
enter
popf
sbb
mov
dec
dec
and
rcr
jb
stos
js
(bad)
or
sbb
mov
cdq
jb
cmp
lds
(bad)
jnp
in
pop
cmp
push
(bad)
out
stos
ja
pop
or
push
mov
or
pop
or
sub
retf
mov
dec
or
mov
pop
test
in
cs
sub
sbb
stc
jo
mov
scas
mov
pop
mov
adc
xchg
in
push
mov
sub
aam
sbb
cmp
cmps
or
imul
sbb
and
xchg
add
test
and
xchg
lds
lahf
push
pop
cmc
out
rol
pushf
test
jp
xchg
mov
xchg
fs
je
lea
rol
(bad)
cld
cmps
sbb
ja
mov
fisub
jmp
jae
jge
sub
or
stos
xchg
push
dec
sar
out
sbb
ja
cmps
cs
xchg
mov
xlat
pop
sub
aad
je
lea
adc
push
jae
jge
sub
fdivr
mov
and
sub
aas
sub
xlat
cmp
and
in
cdq
xor
(bad)
sahf
mov
pop
inc
out
shr
cmp
bound
inc
xor
mov
jnp
ins
jb
iret
pop
mov
push
push
mov
arpl
add
pop
inc
pop
shl
rcr
xlat
inc
repz
push
(bad)
xor
push
inc
iret
inc
cmp
adc
cs
stc
hlt
add
mov
jl
jecxz
repnz
rcl
inc
jmp
jb
push
sbb
in
push
(bad)
les
in
dec
lock
aaa
or
fs
sub
push
mov
jge
les
iret
inc
repnz
mov
pop
(bad)
adc
je
or
js
or
jno
inc
xchg
fld
push
pop
daa
aaa
sub
imul
sbb
jecxz
sub
dec
mov
add
jnp
and
mov
sub
idiv
inc
mov
retf
clc
lock
(bad)
jno
out
mov
arpl
imul
fcomp
add
or
sbb
mov
push
jns
mov
es
mov
mov
call
mov
scas
hlt
xchg
jae
xchg
mov
xor
ss
movs
push
pop
mov
jg
stc
out
jg
stc
out
jmp
lock
or
adc
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
int
and
pop
add
das
fstp
sub
jno
div
jno
inc
fs
lods
jecxz
cmp
xchg
mov
imul
into
into
div
addr16
lahf
div
hlt
jns
pop
add
mov
in
cmp
call
sar
push
iret
xor
jecxz
shr
add
cmp
pop
lds
ss
pop
jge
mov
pop
pop
dec
jnp
jb
sti
sbb
xor
mov
repnz
push
jne
mov
xchg
(bad)
iret
mov
imul
ror
bnd
xchg
jmp
inc
and
mov
add
jae
pop
outs
mov
in
jmp
push
xchg
scas
inc
add
jno
cmp
stc
arpl
adc
mov
arpl
sbb
loope
xchg
xor
rcr
cmps
mov
or
in
sbb
xchg
out
loop
ret
(bad)
sbb
mul
rcr
push
movs
je
bnd
aas
arpl
mov
fnstcw
mov
dec
push
jbe
cmps
jne
xchg
sub
shl
xor
repnz
pop
push
jmp
inc
push
add
mov
fiadd
jnp
fsub
fcmovnu
mov
ret
mov
das
xchg
cmps
mul
pop
mov
mov
xor
es
xor
cmps
enter
ja
in
sbb
test
sub
and
mov
and
rcl
repnz
mov
and
sbb
mov
inc
and
mov
add
and
sbb
xor
inc
stos
daa
sbb
lods
aaa
bound
fmul
(bad)
pop
test
xor
jl
adc
dec
dec
sub
jge
mov
sbb
pushf
add
and
xor
mov
jb
xor
lock
call
test
adc
jp
and
mov
cli
add
jge
push
pop
sbb
(bad)
ins
cli
ins
inc
jg
nop
inc
les
adc
je
test
fistp
cmp
adc
inc
sub
dec
mov
rep
cmp
jne
test
xor
add
retf
(bad)
sub
call
stc
sub
scas
mov
ja
inc
out
push
gs
jge
inc
or
and
std
add
rol
dec
dec
jmp
and
sbb
js
xchg
cmp
movs
cmp
adc
scas
push
scas
cmp
outs
jmp
dec
jmp
jp
and
ret
sar
sub
clc
test
sub
jle
xchg
lock
ret
retf
and
ds
jne
xor
pop
outs
fldcw
es
lods
int3
pop
sar
xor
inc
jl
stos
inc
in
bound
imul
xchg
outs
dec
out
ins
mov
cdq
jns
mov
lods
mov
lea
fld
arpl
and
cwde
fwait
arpl
aas
bound
sar
xchg
mov
or
add
ins
test
test
adc
mov
push
xchg
push
sub
sub
xchg
movs
enter
adc
add
push
adc
cwde
out
loope
mov
cmp
inc
repnz
add
es
fdiv
mov
cmp
test
and
int
sar
push
je
lods
div
mov
pop
push
push
std
(bad)
or
cwde
fsub
pop
test
cmp
(bad)
mov
test
es
inc
in
stos
jno
add
icebp
retf
outs
mov
sub
jle
push
push
dec
sub
movs
popf
call
add
xlat
push
cmp
jmp
pushf
sbb
in
scas
mov
push
jnp
enter
out
jno
mov
cmc
aad
cmps
mov
xchg
(bad)
push
jno
pop
cmps
das
adc
push
sub
xlat
sub
sub
cmps
or
jnp
jns
and
adc
inc
mov
jne
push
sub
and
aad
fsub
es
xchg
(bad)
out
jmp
int3
sbb
mov
outs
mov
mov
or
jl
outs
dec
push
aam
imul
jnp
pop
lods
call
mov
in
or
loop
sahf
xchg
(bad)
ffree
call
sbb
cld
push
cld
jae
mov
jle
retf
sti
mov
pusha
out
mov
sub
jo
int3
movs
push
dec
sti
bound
fstp
sbb
xchg
mov
push
arpl
sbb
sbb
scas
mov
les
and
ret
dec
xchg
(bad)
mov
adc
stos
shl
fbld
nop
stos
stos
push
mov
add
shl
lods
mov
scas
fdivrp
xor
hlt
push
(bad)
stc
xor
cmps
out
data16
scas
add
cld
cmp
push
inc
mov
call
add
jnp
dec
sub
in
mov
fidivr
cmp
mov
lds
adc
push
movs
sub
out
push
jmp
jg
mov
fist
stc
inc
mov
clc
mov
sub
cmps
inc
xchg
iret
xchg
mov
xchg
aaa
(bad)
fst
push
mov
(bad)
cmp
in
popa
pop
and
fdivr
std
jmp
adc
mov
push
in
pop
cmp
frstor
aas
test
jae
pop
pushf
prefetcht1
cmp
push
data16
jg
je
ja
shr
clc
sub
jmp
dec
push
les
and
inc
rcl
mov
imul
inc
out
out
jo
sbb
sub
cld
test
into
pop
out
and
mov
push
xor
lods
shl
jg
mov
cmp
inc
in
pusha
push
das
sub
(bad)
js
dec
xor
xor
mov
movs
pop
xlat
je
(bad)
aaa
enter
xchg
into
push
mov
test
lods
sti
mov
popa
cld
mov
cmp
sub
ja
xchg
xor
retf
sbb
mov
push
ret
in
mov
inc
fisttp
leave
jmp
cmp
outs
and
out
cmp
mov
je
addr16
sbb
addr16
ins
sub
inc
mov
pop
das
cmc
add
add
jle
adc
mov
dec
push
cmp
out
cs
(bad)
out
into
dec
ror
mov
(bad)
shl
xor
fimul
sti
jmp
scas
mov
(bad)
mov
and
mov
jmp
xchg
movs
psrad
inc
enter
push
leave
mov
test
pop
pushf
jb
or
aad
pop
pop
jecxz
das
aaa
mov
dec
jg
pop
sbb
cdq
add
mov
jecxz
pop
in
jmp
inc
mov
rol
lahf
shl
push
mov
xchg
jmp
and
adc
sub
lods
sub
mov
(bad)
lods
adc
mov
jmp
mov
call
cmp
cmps
cmp
cmp
gs
adc
shl
outs
test
sub
and
mov
jmp
mov
add
retf
mov
call
mov
sbb
mov
fisub
jg
push
pop
into
imul
(bad)
jp
adc
xor
jne
jl
lods
pop
bound
inc
jl
popa
mov
or
sub
imul
mov
dec
stos
mov
add
je
xchg
jg
cwde
xchg
sub
ffreep
push
push
push
jg
xchg
push
js
add
cmps
dec
add
es
mov
adc
dec
in
aad
mov
clc
adc
iret
loopne
fsubr
xchg
sub
loopne
xchg
(bad)
dec
(bad)
cmps
dec
jmp
sbb
mov
dec
jmp
push
xchg
in
scas
pop
fdivr
jae
pusha
sbb
retf
aas
test
pop
push
ds
pop
or
das
es
dec
mov
or
int
inc
fist
outs
push
iret
inc
xchg
ja
cli
pushf
out
mov
fnsetpm(287
outs
or
loop
adc
push
dec
enter
or
test
or
and
xor
mov
inc
repz
adc
nop
pop
sar
push
imul
mov
jmp
std
xchg
add
stc
es
ins
rcl
sub
test
inc
clc
dec
dec
mov
ins
or
add
mov
mov
call
mov
fcomi
jb
cmp
push
xor
mov
cmps
nop
ins
sbb
call
lock
mov
jne
mov
sub
fs
and
fs
jne
mov
add
mov
ja
cmp
or
fdivr
pop
and
pop
dec
cmp
cs
sub
shl
(bad)
and
xchg
in
(bad)
xor
ins
ror
test
cdq
add
adc
dec
xchg
push
mov
mov
xchg
in
int
jge
sub
sbb
sub
pop
or
push
adc
push
jge
rcr
or
adc
jns
mov
cmc
mov
mov
pop
scas
jl
cmp
ins
test
rcr
aad
push
es
dec
ins
nop
(bad)
leave
(bad)
jno
xor
mov
ja
inc
nop
(bad)
pushf
inc
das
icebp
std
or
rcr
pop
and
cmp
scas
rcr
fcom
loopne
push
push
sahf
mov
sub
mov
cmp
mov
dec
inc
sbb
pop
arpl
das
xchg
push
mov
sub
inc
pop
or
push
loope
push
test
bound
cli
xor
mov
cmp
lods
out
in
xor
addr16
ds
mov
jmp
sub
or
fcomip
ds
repnz
bound
gs
fcom
out
out
jnp
push
jmp
inc
or
hlt
add
xor
jnp
add
les
stos
inc
sbb
cdq
es
mov
cmp
xor
jno
rol
inc
out
out
dec
lods
mov
shl
sub
jne
fstp
ins
ret
loope
mov
rol
sbb
out
ror
ret
xor
and
push
lds
mov
test
out
pusha
adc
cmps
jb
and
pop
push
push
push
add
mov
jl
loope
fwait
scas
push
sbb
mov
cmp
cld
xchg
pop
fisttp
outs
loop
and
rcr
cmp
jb
repz
jp
cmp
dec
add
loopne
xchg
push
pop
int3
call
cli
sbb
shr
stos
mov
cmc
ret
push
movhps
add
add
mov
pushf
mov
test
sti
pop
xor
sbb
ins
jo
je
sub
inc
daa
mov
retf
pop
sbb
push
enter
dec
lods
and
ins
sbb
(bad)
jge
(bad)
jo
sbb
scas
in
leave
sbb
fwait
cmp
into
rcr
push
dec
out
inc
adc
mov
fdiv
xor
out
jp
xchg
shr
or
dec
cmp
int
loop
in
int
imul
jl
mov
xchg
jb
imul
pop
dec
icebp
add
das
out
pop
and
adc
cld
mov
pop
jecxz
clc
dec
ja
xchg
ja
jne
scas
in
dec
enter
ret
shl
inc
add
comiss
xchg
fidiv
xor
retf
sub
mov
in
iret
sbb
xor
cwde
xchg
aaa
cwde
push
mov
xchg
sbb
lock
imul
sub
test
loopne
sbb
jae
mov
pop
pop
(bad)
retf
sub
dec
imul
div
add
mov
out
push
inc
sub
add
mov
add
or
outs
mov
mov
xor
mov
imul
adc
xchg
scas
imul
pusha
xchg
or
mov
cmp
imul
inc
xchg
fldlg2
js
call
push
mov
popa
sbb
or
or
nop
adc
(bad)
mul
fcom
into
sbb
mov
outs
cmp
xor
adc
lods
dec
in
imul
inc
mov
xchg
movs
clc
outs
sub
ins
xchg
es
int3
in
outs
imul
xor
dec
popa
in
add
out
imul
cwde
call
mov
inc
(bad)
dec
mov
jb
mov
stos
cwde
fmul
push
loopne
cmp
lahf
call
mov
xchg
jmp
fisttp
gs
js
std
mov
xchg
inc
dec
xchg
repnz
xor
out
or
jecxz
ds
push
call
adc
cmc
sbb
xor
mov
scas
jge
outs
dec
scas
or
add
inc
pop
dec
cld
push
mov
fistp
mov
xchg
sbb
and
jecxz
ins
mov
mov
iret
or
push
das
adc
sub
fidivr
push
inc
xchg
mov
imul
retf
repnz
sub
fs
lds
pusha
mov
aas
sahf
inc
enter
jl
in
xor
call
pop
js
inc
inc
mov
dec
in
fadd
xor
inc
xchg
xchg
imul
jecxz
movs
in
inc
das
pop
retf
mov
pop
inc
call
and
fcomp
jl
bound
sub
enter
jmp
movs
mov
push
imul
sub
rcr
dec
outs
aad
jbe
push
(bad)
stos
lock
jno
les
inc
rcr
xor
dec
cmp
sbb
dec
dec
adc
in
aad
jne
ficom
es
mov
or
push
fs
js
loope
xor
xchg
lds
mov
out
mov
sub
inc
fsubrp
clc
mov
and
push
jl
nop
mov
in
dec
call
shr
push
jbe
aam
dec
data16
addr16
fcom
in
jmp
fsub
das
stc
jecxz
xor
fwait
arpl
stc
push
dec
aaa
daa
dec
ja
hlt
bound
cmp
test
mov
jno
rcl
sbb
ficomp
jg
xchg
dec
lahf
mov
inc
adc
stc
(bad)
jl
in
jnp
jle
nop
push
leave
movs
scas
call
xlat
ins
cmps
mov
(bad)
cli
aaa
push
inc
cmp
loop
dec
scas
cld
adc
xchg
cmc
add
mov
and
mov
addr16
adc
cld
ror
loope
cmps
push
pinsrw
(bad)
push
cmps
(bad)
repnz
mov
adc
ret
push
adc
imul
mov
dec
in
lea
or
pop
fmul
in
xchg
jp
ror
aaa
mov
and
and
repz
sbb
lods
xor
cmc
es
ss
aad
sbb
push
xchg
pop
jb
sbb
mov
mov
and
shl
xchg
ret
ret
rcl
mov
and
pop
aas
in
jp
cmp
mov
ds
cmp
ret
stos
adc
xchg
mov
std
fsubr
out
sub
add
inc
xor
lods
push
loop
nop
fidivr
(bad)
mov
pop
mov
vpunpckhdq
loopne
retf
dec
jl
xlat
inc
inc
xor
iret
dec
sar
jl
outs
push
in
adc
vrcpps
(bad)
ins
scas
pop
setae
mov
leave
push
fwait
pusha
pop
stc
mov
aas
movs
outs
adc
and
sub
sub
mov
out
sahf
inc
jmp
mov
mov
or
je
xchg
mov
mov
shl
mov
pop
adc
adc
retf
lock
sbb
dec
cmp
jnp
cmp
sub
jle
fisub
ins
dec
and
inc
adc
and
in
pop
adc
mov
movs
sti
ins
out
aaa
mov
push
imul
imul
dec
aaa
cwde
push
fcmovnb
sar
loopne
cmps
loop
in
push
pop
jbe
arpl
xchg
sar
cld
repz
aas
(bad)
cld
repz
jmp
lock
xchg
push
loop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
xlat
add
add
scas
cmp
cmp
cmp
test
jmp
jmp
popf
jae
cmp
cmp
ret
mov
out
mov
icebp
add
xchg
sbb
gs
mov
scas
in
dec
loope
mov
sub
cli
xchg
jmp
jns
sub
bound
lods
mov
mov
in
push
(bad)
(bad)
in
fisubr
cmc
or
push
pop
jle
ror
mov
sbb
sbb
add
inc
jp
sbb
mov
or
jge
(bad)
lahf
ficomp
adc
popa
cmp
add
test
jae
xor
dec
push
stc
lahf
inc
and
mov
add
cmc
fwait
push
mov
cdq
(bad)
movs
into
(bad)
sub
test
dec
xchg
inc
imul
icebp
jl
rcr
sti
add
sub
rol
mov
into
dec
dec
ds
fbld
xor
test
rcl
inc
rcl
div
fmul
xchg
mov
in
mov
xor
inc
xchg
das
jge
jle
mov
push
adc
cmp
xor
outs
and
jo
xchg
je
inc
xor
fucomi
(bad)
outs
lahf
mov
xchg
sti
and
sbb
mov
add
push
dec
repnz
clc
loopne
mov
out
mov
popf
dec
gs
stos
cmps
mov
or
ret
adc
mov
fnstcw
movs
call
jle
pop
pop
aas
jbe
icebp
xor
mov
test
int
cmp
mov
sbb
in
mov
mov
hlt
pmaxub
out
adc
lock
pop
sub
imul
fdivr
inc
jae
(bad)
jae
out
sahf
popa
dec
inc
jbe
inc
vunpckhps
jmp
xchg
scas
aad
imul
hlt
std
mov
and
(bad)
movs
pop
cmc
adc
aam
out
xor
xor
mov
movs
call
mov
bound
jo
fsubr
pop
iret
sti
push
mov
nop
jne
aam
(bad)
pushf
inc
out
cmp
std
aaa
pop
fild
popf
(bad)
cld
into
aaa
(bad)
xlat
cmps
pop
lods
out
shl
push
cmps
mov
mov
and
jmp
mov
(bad)
and
push
pop
cmps
xor
and
mov
in
mov
ror
ror
outs
xor
bound
fsincos
xchg
ss
stos
fsub
hlt
dec
adc
dec
fsubr
std
or
fnsave
nop
mov
enter
(bad)
aaa
add
cmp
sub
adc
(bad)
inc
les
pop
ins
std
cmc
mov
xor
out
mov
adc
push
fisubr
imul
out
(bad)
add
shr
add
mov
imul
cmp
mov
sub
in
repz
enter
push
jl
xchg
jmp
or
xor
scas
pop
inc
int3
mov
adc
loopne
dec
test
fdiv
mov
inc
xor
or
mov
(bad)
fcom
xchg
mov
pop
mov
stos
mov
sub
xor
or
mov
jp
imul
jb
in
aas
push
inc
mov
ins
rcr
ficom
add
pop
hlt
cwde
repnz
fsubr
shr
push
repz
es
jno
mov
les
mov
jle
sbb
pop
mov
ss
mov
lds
(bad)
cld
call
fdiv
retf
out
or
mov
lock
mov
into
dec
cs
dec
xchg
inc
jecxz
pop
aad
hlt
push
(bad)
sbb
mov
jp
add
mov
adc
loopne
pop
ss
call
or
mov
jbe
(bad)
dec
in
push
test
lock
stos
outs
dec
movs
stos
mov
out
pusha
cmp
hlt
shl
push
xchg
data16
aad
xchg
xor
shl
xchg
mov
inc
fld
int
movs
loopne
enter
scas
mov
mov
cld
dec
mov
adc
outs
xchg
xchg
ret
lock
push
cmp
(bad)
sbb
retf
mov
and
cmc
xor
loopne
mov
mov
popf
into
inc
pop
das
mov
out
jae
cs
fnstcw
fcomp
movs
jno
sahf
sbb
arpl
ss
push
xor
jp
addr16
mov
mov
pop
inc
movs
je
imul
add
ja
sbb
pop
je
mov
mov
and
push
mov
pop
add
inc
fidiv
movs
jle
in
dec
out
push
push
mov
add
mov
jge
cmp
xchg
retf
aad
xor
xchg
dec
mov
js
outs
fwait
enter
jne
pop
in
ret
aad
cwde
mov
mov
push
lahf
jnp
retf
popf
arpl
mov
fsubrp
ja
loop
in
add
sbb
jo
scas
(bad)
fcomp
ins
fwait
xchg
mov
cwde
out
pop
jle
aaa
jge
icebp
sbb
jmp
dec
or
cmp
js
xchg
or
inc
jnp
dec
retf
std
in
jg
xchg
inc
push
test
jl
or
jecxz
jo
cmp
and
bound
pop
mov
xlat
test
call
xchg
les
jecxz
shl
jne
and
xchg
jge
fist
sti
sbb
dec
lods
xchg
cdq
jmp
ss
fcom
cmp
xor
loop
lds
or
(bad)
xor
out
push
jmp
mov
push
test
loopne
xor
inc
ds
add
dec
or
std
dec
adc
cmp
mov
or
cmp
into
inc
jg
lahf
xchg
imul
clc
mov
mov
pop
xchg
pop
cmp
dec
or
xchg
stos
xor
sub
jmp
and
xchg
jne
mov
mov
in
jae
xchg
or
xchg
cmp
inc
out
adc
fild
xor
aas
or
add
jb
jg
inc
jecxz
(bad)
jecxz
lea
and
fwait
pop
sbb
popf
mov
sbb
pop
or
push
add
and
mov
das
inc
sub
repnz
sub
test
lock
test
(bad)
xchg
ds
jo
test
xchg
mov
lock
(bad)
jnp
aad
dec
fmulp
cmc
add
jmp
lock
jns
ins
das
cmc
test
inc
xchg
push
pop
ror
jp
jo
out
push
sti
repz
retf
lahf
movs
cmp
push
pop
lods
fstp
push
cmp
test
retf
xor
mov
mov
popa
ret
jno
sub
or
push
xlat
shr
or
out
add
pop
mov
sbb
inc
mov
jns
rcr
sbb
aam
mov
dec
int
fcmovu
push
jnp
rol
xchg
adc
test
scas
shld
jno
mov
xchg
xchg
pop
xchg
pop
mov
jmp
stos
js
jne
loopne
cmps
jge
jo
js
xchg
adc
loope
or
mov
or
aas
cmp
test
sbb
cdq
and
xor
aam
cs
jmp
pop
in
jle
and
fadd
dec
mov
jo
loop
inc
push
push
mov
mov
jg
stos
pop
neg
data16
pushf
and
aam
inc
test
push
into
mov
vpsubb
push
imul
int3
jl
mov
xchg
repz
sbb
mov
outs
cmp
jae
cli
clc
adc
push
mov
or
dec
and
sbb
or
ficom
out
out
ret
jo
stos
push
(bad)
fisttp
jmp
div
inc
xchg
cmp
daa
sbb
sti
lea
(bad)
clc
sub
add
or
mov
fdivr
lods
or
(bad)
mov
cmp
mov
sub
scas
xlat
push
je
out
call
(bad)
popa
fdiv
test
jmp
push
cli
or
dec
mov
and
jg
out
icebp
test
(bad)
push
mov
test
out
shr
xchg
dec
fst
pop
and
sub
sbb
push
sbb
jecxz
(bad)
lea
adc
mov
jae
int
(bad)
data16
jmp
push
xchg
sub
je
ss
scas
push
sbb
mov
popf
mov
mov
movs
or
shl
or
ja
mov
pushf
sbb
sbb
xor
mov
pop
and
fdiv
jp
mov
inc
jle
dec
sbb
xchg
shrd
pop
ja
retf
add
mov
pop
mov
sbb
cmps
add
sbb
sub
in
pushf
fidiv
outs
mov
cs
adc
cs
clc
in
and
push
fsubr
je
xor
stos
test
mov
cmps
jg
adc
in
sar
mov
xor
dec
cmp
in
push
ja
mov
cmp
imul
push
das
dec
sahf
pop
dec
xlat
stos
inc
not
mov
adc
dec
mov
iret
addr16
fmul
pop
jne
leave
add
xchg
out
sbb
das
mov
and
dec
(bad)
adc
cli
fabs
sti
push
xchg
aad
xor
outs
mov
aaa
imul
xor
rcr
stc
inc
xor
outs
add
aas
mov
mov
std
fmul
(bad)
ins
xchg
jecxz
pop
or
pushf
adc
cmp
rol
xor
jno
push
loopne
jg
cmp
xor
aaa
out
nop
mov
jl
stc
jae
pop
and
pop
out
inc
add
pop
retf
aaa
loope
mov
test
xor
mul
out
mov
das
(bad)
jae
je
rol
out
mov
(bad)
add
cli
sbb
jl
nop
inc
stos
(bad)
les
pop
mov
sahf
jmp
mov
xor
out
xchg
retf
xchg
add
sub
or
fisttp
adc
arpl
arpl
mov
jo
mov
es
aad
in
call
fisttp
daa
idiv
aaa
imul
jno
shl
ret
mov
popf
jno
fwait
mov
mov
and
fnstsw
or
(bad)
mov
js
sub
jne
stos
mov
mov
loopne
dec
sbb
adc
movaps
push
push
movs
cmp
sbb
int3
shr
cwde
not
pushf
inc
mov
xchg
inc
jmp
xchg
in
jecxz
outs
loopne
clc
pusha
inc
push
add
lahf
fsub
ds
push
mov
cmp
mov
clc
and
mov
or
jg
and
pop
push
xchg
outs
dec
popa
clc
mov
inc
cmp
aad
ss
sti
or
loopne
add
inc
jg
jb
mov
ret
adc
sub
jg
push
dec
(bad)
sbb
mov
mov
out
adc
adc
add
or
and
mov
mov
movs
or
mov
ja
adc
test
lahf
rcr
inc
push
dec
lods
inc
repz
inc
push
mov
inc
fsub
dec
jge
dec
add
and
sbb
mov
xchg
stos
int3
scas
add
outs
xchg
push
jns
dec
push
ror
jne
sbb
(bad)
icebp
repnz
scas
adc
fild
xor
aas
xor
popa
aad
add
ret
dec
clc
movs
shr
xor
jge
push
xor
out
add
ins
inc
jle
sub
lahf
icebp
stos
test
pop
loope
clc
gs
cmc
inc
je
scas
int3
or
loope
pop
repnz
aam
outs
ins
pop
pop
cmp
sub
fisub
pop
test
cmp
ret
adc
in
dec
xor
ja
and
call
test
push
test
jmp
sar
outs
iret
fidivr
pop
push
push
fidivr
mov
sbb
dec
or
ds
int
mov
jnp
loop
movs
mov
push
xchg
or
and
mov
call
cmp
in
and
xchg
jmp
in
sar
inc
ret
sbb
repz
mov
jmp
push
mov
dec
in
add
out
cmp
test
(bad)
xchg
add
cwde
out
(bad)
dec
cs
push
in
nop
adc
dec
push
repz
cs
xchg
stos
xchg
or
cmp
ds
retf
cmp
sub
popf
es
push
cmc
inc
adc
out
xor
mov
shr
sub
dec
mov
xor
sub
dec
cmp
and
mov
rcl
into
in
inc
sahf
ficom
sbb
pop
fwait
sbb
mov
pop
pop
sbb
adc
cwde
mov
jb
pop
fsubr
inc
pop
add
outs
ret
ss
daa
pushf
jmp
mov
mov
hlt
jmp
sub
fcom
xchg
in
mov
or
(bad)
mov
call
xchg
lds
out
jle
(bad)
mov
aam
inc
jge
fdiv
call
in
cmc
jns
inc
sbb
cmp
pop
outs
xchg
xchg
cmps
in
movs
or
cld
xchg
ins
retf
in
popa
and
out
push
scas
dec
dec
fild
daa
cmc
mov
aas
aas
ficomp
xor
or
shl
push
sti
inc
pop
sbb
test
hlt
aad
mov
xor
jle
push
sub
sbb
icebp
mov
and
xchg
mov
(bad)
pop
stos
std
xchg
push
inc
sub
sahf
fist
out
call
mov
xor
outs
xlat
sbb
jecxz
stc
mov
nop
js
das
rcl
and
sti
mov
pop
sub
ss
dec
test
idiv
xchg
inc
loopne
rcr
neg
mov
sub
es
mov
cli
mov
fild
loop
lods
cmp
call
xchg
test
mov
xor
jae
jae
loope
cdq
dec
cwde
aaa
out
or
mov
pop
das
aaa
jmp
mov
cwde
push
shl
inc
ficomp
pushf
(bad)
dec
adc
in
(bad)
mov
dec
es
jle
mov
cli
daa
sub
outs
xchg
popa
xor
mov
mov
or
popa
addr16
in
fcomp
es
int
sub
jo
ret
or
ret
or
int3
hlt
adc
xor
ss
cmp
clc
dec
inc
mov
push
xchg
rol
(bad)
xor
idiv
sahf
mov
push
enter
pop
cdq
push
push
push
call
mov
je
mov
stos
jne
imul
mov
xor
leave
mov
sahf
xor
outs
adc
and
not
sar
cli
stos
add
push
inc
sbb
xchg
jae
aam
xchg
jp
dec
out
push
in
cmps
in
dec
clc
shr
jle
dec
push
mov
imul
repz
or
pop
push
fdivr
jp
sti
cdq
xor
fsub
add
ins
xor
cdq
jmp
xchg
jno
mov
sahf
shl
loope
jge
pop
ja
sub
inc
fmul
xor
jmp
or
loope
xor
push
mov
jbe
int
push
pusha
pop
xor
mov
aaa
nop
lahf
pop
test
jmp
repz
stos
lods
push
pop
adc
sub
clc
jmp
sbb
movs
popa
sub
fisttp
pushf
xor
(bad)
sahf
adc
data16
sbb
push
push
jmp
fcmovnu
in
sar
push
sahf
inc
push
fmul
ror
cmp
jmp
pushf
jge
xor
fld
sbb
dec
test
jnp
add
dec
outs
sub
ret
sbb
add
jl
fs
(bad)
sbb
and
ficomp
sbb
clc
pusha
pop
push
xchg
cmp
sub
movs
loopne
mov
dec
xor
pop
aas
shr
dec
in
xor
inc
test
data16
adc
enter
mov
std
sub
pop
mov
mov
imul
push
pushf
je
sbb
lods
ret
ja
add
(bad)
mov
out
jg
stc
out
jg
pop
add
fst
in
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
leave
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmps
arpl
arpl
jno
cmps
cmp
cmps
daa
cmps
jae
xor
xor
mov
jno
int3
je
mov
add
(bad)
jge
and
out
rol
mov
cmp
jl
xchg
fs
mov
dec
push
xor
mov
es
addr16
sub
loope
fistp
cmps
aam
ret
(bad)
mov
jne
push
cmp
jmp
push
aad
adc
stos
mov
aad
sub
push
xor
jp
jge
add
adc
test
mov
int3
les
inc
nop
ret
jb
mov
in
sbb
scas
jge
pop
sahf
inc
push
(bad)
dec
add
jl
jmp
xor
adc
pop
or
mov
pusha
or
mov
sbb
mov
sti
mov
jbe
jae
mov
mov
rcr
iret
dec
les
jb
or
push
adc
les
adc
mov
xor
sbb
adc
fistp
dec
dec
xchg
arpl
mov
or
addr16
mov
push
cmp
stos
mov
push
sub
outs
xor
or
popa
cmp
cmp
dec
stos
and
mov
lods
hlt
test
pop
in
pop
pop
push
std
js
mov
fisttp
in
cwde
shl
lahf
aas
adc
inc
popa
popa
cmp
xor
aas
cs
pusha
and
jns
mov
call
mov
mov
loop
mov
or
loope
fsub
test
in
and
std
jp
cdq
cmps
mov
ja
push
pop
cmp
jle
(bad)
outs
mov
pop
cmp
lds
adc
aam
jecxz
xor
inc
repnz
jle
pop
push
xchg
jns
cmp
neg
dec
fstp
shr
std
ja
jge
out
cdq
push
into
imul
push
aam
sbb
push
in
xchg
out
in
stc
push
cmp
xchg
and
mov
popf
fcom
movs
cmp
pushf
cmc
frstor
dec
mov
dec
test
xchg
cmp
int3
xchg
mov
and
and
sub
out
mov
fiadd
ds
sbb
mov
scas
mov
sbb
pop
mov
out
out
mov
iret
dec
or
sub
fiadd
jl
fld
or
sbb
pop
pop
mov
(bad)
cmp
out
fcom
or
mov
lahf
fisubr
out
fcomp
hlt
cld
mov
mov
cmp
push
pop
adc
push
cmp
inc
jbe
mov
int
jae
sbb
adc
push
sbb
cld
or
pushf
jle
(bad)
mov
(bad)
cmps
out
cmp
cs
push
dec
mov
pushf
scas
dec
dec
cld
out
dec
adc
dec
mov
fld
fwait
pop
stc
inc
(bad)
xchg
mov
adc
ins
mov
xchg
dec
popa
inc
mov
add
xchg
bts
dec
xor
or
push
jge
sbb
jmp
mov
mov
lahf
sar
and
sahf
lods
pop
stos
imul
jecxz
jbe
sub
jmp
xchg
dec
add
stos
stc
pop
fstp
cmp
mov
xchg
ins
push
dec
mov
cmp
shr
nop
sbb
sub
ja
mov
pop
and
jmp
imul
xor
stc
push
dec
mov
ror
inc
cmp
idiv
xlat
jne
dec
in
outs
outs
adc
push
jecxz
daa
dec
lds
retf
cmps
iret
fsubp
adc
sub
push
(bad)
push
mov
shl
and
jne
ja
aam
nop
imul
daa
jns
enter
popf
or
fdiv
push
not
mov
ja
retf
push
xchg
mov
imul
lods
out
shr
nop
pop
xchg
mov
push
cmp
adc
cwde
push
fimul
nop
push
int
inc
in
inc
or
into
sub
push
adc
fwait
cmps
sbb
mov
(bad)
jle
repz
lods
and
xor
out
ret
sub
in
icebp
(bad)
lock
retf
cmp
xchg
ss
aas
je
arpl
cmp
or
dec
out
in
mov
mov
ror
jno
jne
fldcw
push
test
xchg
pop
sbb
fistp
dec
cmps
ror
dec
inc
dec
lock
cmp
leave
pop
cmps
mov
mov
loop
mov
jo
sub
sub
(bad)
xor
adc
jmp
sub
popa
(bad)
xchg
shr
repnz
int
mov
shr
std
jmp
jns
sbb
loope
dec
popf
cs
sbb
xor
add
repz
cmp
push
imul
leave
(bad)
pop
movs
popf
pop
inc
cmp
xchg
into
or
jge
aad
xor
xor
sti
sub
xchg
mov
or
pop
push
or
out
fs
jno
push
push
out
ret
or
push
icebp
mov
jne
add
cld
xor
retf
jae
jg
cmp
sub
sbb
ret
ins
sub
bound
and
jmp
add
push
cmp
mov
ds
xchg
and
inc
into
enter
jge
push
ss
leave
mov
xor
scas
das
sub
push
sub
in
push
xor
push
or
fs
inc
in
icebp
inc
sbb
dec
fbstp
popf
jns
and
cli
sbb
pop
call
test
sub
data16
mov
ins
nop
xchg
shl
call
or
mov
leave
mov
arpl
pop
popf
ret
xchg
aas
mov
push
jnp
pop
dec
add
aaa
movs
and
aad
dec
scas
jmp
xchg
mov
mov
cmps
hlt
mov
cdq
jae
inc
or
mov
mov
cld
in
xchg
pop
jl
dec
(bad)
jmp
xchg
(bad)
sub
xor
xlat
jmp
push
fdiv
fs
stos
cmps
mov
jecxz
or
je
add
mov
and
test
adc
sahf
jbe
test
test
stos
jg
cli
aas
test
jnp
add
nop
(bad)
push
and
enter
dec
sbb
inc
jecxz
movs
data16
popa
and
xchg
xchg
(bad)
aas
mov
out
mov
xchg
ss
div
cmps
mov
fiadd
pop
push
ins
adc
mov
arpl
jl
jle
mov
ret
and
xchg
je
mov
cmp
jnp
lahf
mov
cmp
hlt
retf
je
outs
inc
mov
jne
lock
adc
inc
push
ffreep
out
xchg
mov
xor
fisubr
fucom
sub
xchg
cmp
push
pop
cmp
pop
ins
jae
lods
fsubp
setl
les
test
(bad)
push
cmp
xlat
inc
and
ficomp
pop
jmp
leave
and
outs
mov
(bad)
sbb
jo
ret
in
dec
cmp
out
sub
js
sbb
ficomp
outs
mov
and
pop
clc
iret
mov
adc
cld
dec
xchg
in
call
(bad)
mov
mov
test
xlat
cmp
dec
mov
mov
into
push
xlat
stc
sub
movs
pushf
mov
jl
push
cdq
dec
xchg
or
sbb
jnp
mul
aad
cmp
mov
jg
and
pop
les
xor
in
ds
xor
adc
xor
aam
lods
pop
scas
jmp
xor
push
cwde
inc
iret
inc
lods
inc
mov
adc
or
push
aad
je
iret
jmp
test
add
xchg
(bad)
dec
aam
les
aad
addr16
mov
cmp
push
lahf
mov
inc
inc
mov
xchg
ds
adc
mov
or
push
adc
loop
jle
test
outs
shr
add
inc
mov
das
and
fiadd
pop
mov
xchg
(bad)
stc
(bad)
(bad)
out
and
aad
idiv
or
jne
xor
lock
popa
add
and
outs
mov
push
xor
mov
add
shr
pushf
aad
mov
add
loop
jne
call
cmps
pop
repz
push
sub
and
fiadd
lea
dec
and
daa
in
sub
lods
sub
jle
jmp
cmp
cwde
push
mov
ins
mov
jmp
gs
sar
ret
inc
adc
sub
cmp
lds
out
mov
mov
jmp
(bad)
lods
ja
xchg
pop
inc
call
dec
mov
mov
sar
pop
mov
sub
call
mov
sar
jb
out
adc
das
pop
push
out
and
pop
test
test
inc
mov
je
hlt
xor
fisttp
sub
out
mov
aam
mov
jns
cmc
ror
loop
jl
rcl
pop
jg
div
fbstp
aad
sub
stos
pop
xor
sub
lea
pop
mov
cmp
xchg
in
push
inc
js
push
dec
dec
jns
mov
dec
loopne
mov
jb
nop
cwde
aam
outs
ds
xor
les
push
aad
mov
mov
pop
pop
inc
imul
jb
sub
pop
ja
add
dec
dec
xor
inc
cdq
adc
cld
(bad)
cmp
fs
mov
xor
mov
jns
out
out
data16
dec
mov
aam
fistp
fadd
enter
lds
ror
jae
cmp
jbe
ret
fs
icebp
cdq
lea
cmps
add
into
neg
add
lods
pusha
(bad)
mov
daa
push
jmp
mul
in
fcomip
out
das
outs
lahf
pop
imul
cmovle
jae
pusha
stc
in
outs
fisttp
jns
ror
ss
aad
(bad)
aad
into
jl
(bad)
into
sub
test
rcl
sub
aas
movs
adc
clc
cli
push
std
repz
sahf
mov
outs
push
outs
pop
dec
iret
xchg
jb
mov
ss
add
jno
sub
in
cdq
lahf
lahf
jmp
inc
out
neg
inc
mov
inc
ret
add
arpl
into
dec
daa
nop
pop
fneni(8087
xor
adc
call
jo
jmp
sub
movs
dec
sti
sahf
mov
sahf
hlt
and
movs
daa
lahf
pop
fistp
js
shl
fnstenv
or
mov
push
sti
popa
sub
ret
push
fidiv
xlat
scas
jb
cld
retf
loopne
aam
push
fisttp
mov
call
mov
and
int3
or
jmp
cmc
aaa
fucomi
add
aaa
cmp
xor
lahf
cs
test
fsub
dec
mov
push
ret
mov
les
cwde
mov
and
mov
lahf
outs
ins
cmps
in
sub
mov
in
icebp
test
mov
addr16
(bad)
sbb
gs
jle
in
aaa
mov
xchg
(bad)
and
pusha
jle
sub
add
jae
sahf
jbe
addr16
leave
adc
inc
fmul
cli
pushf
push
pop
punpckhdq
push
xlat
jns
cmp
push
jle
fstp
data16
mov
cdq
pop
cmc
xchg
mov
cwde
cmp
or
movs
jle
pop
cmp
leave
xchg
cwde
inc
imul
xchg
out
jge
or
add
mov
and
lock
ror
out
cmp
js
xchg
jecxz
into
jg
in
jae
out
mul
ins
mov
jnp
into
in
out
int3
loope
ja
ficom
mov
mov
mov
and
call
xor
push
jp
adc
in
jmp
iret
mov
jg
(bad)
ficomp
dec
rcl
mov
loop
or
outs
xor
jo
sbb
(bad)
mov
xor
out
pushf
aaa
sti
in
mov
out
mov
jno
xor
movs
sbb
das
test
lock
xor
jl
mov
in
jg
dec
addr16
outs
jb
std
and
fwait
rcl
cs
xchg
adc
mov
inc
dec
lahf
push
sti
int3
or
pop
inc
pop
add
xchg
fnstcw
iret
xor
bound
mov
ret
push
mov
das
in
jp
or
stos
retf
sub
xor
push
and
sahf
sti
sahf
ret
mov
inc
cs
dec
imul
scas
cmps
xor
jns
inc
mov
fcom
push
xchg
push
out
iret
cmp
mov
push
ja
push
push
out
lahf
mov
jo
push
inc
ss
add
add
pop
or
and
adc
sub
push
out
fimul
inc
pop
gs
sti
xchg
(bad)
scas
adc
call
pop
cmp
jae
and
mov
stc
sbb
or
adc
pop
jp
jle
cmp
mov
fistp
outs
and
jle
xor
sub
test
fldcw
mov
int3
mov
in
or
jns
pop
inc
and
(bad)
ja
inc
clc
ss
pop
cmp
mov
aas
nop
retf
in
sub
inc
push
loope
mov
lods
in
xchg
xor
mov
(bad)
push
sbb
stos
nop
pop
inc
jg
cmp
xlat
stc
fist
js
inc
adc
sbb
dec
mov
mov
int
lods
pop
xlat
sar
cmp
mov
in
int3
jp
pushf
cmps
jne
fs
retf
cmp
gs
cmp
jnp
leave
in
ja
movs
ja
mov
push
mov
inc
test
mov
outs
and
ret
repz
sti
pop
xchg
in
push
sbb
or
mov
adc
jmp
sbb
into
add
hlt
cmp
(bad)
ins
mov
jne
shl
jecxz
fnstsw
cli
movs
xor
ss
inc
pushf
xchg
mov
test
out
inc
push
fs
xsaves
add
pop
(bad)
repz
fs
icebp
retf
aas
or
xlat
dec
mov
shr
jo
dec
or
sub
inc
js
pop
idiv
push
add
xchg
xlat
ja
xchg
xchg
sub
pop
pop
push
dec
frstor
inc
adc
xchg
movs
stc
cmp
add
in
pop
cs
inc
add
bound
test
lea
xchg
sti
mov
das
outs
mov
dec
cwde
imul
outs
pop
cmps
out
ret
cs
pop
leave
fs
jbe
lods
rol
jle
mov
dec
mov
dec
pop
cdq
enter
in
mov
call
ret
jp
cmps
rcl
fist
in
mov
dec
cld
iret
test
xor
movs
scas
cmps
mov
in
mov
push
dec
dec
movs
sub
ret
push
pop
rol
jg
mov
xchg
pop
mov
inc
daa
scas
jb
inc
bswap
add
push
rol
cs
stc
mov
mov
(bad)
xchg
fisub
mov
outs
xor
jmp
(bad)
or
inc
or
xchg
aad
xchg
call
jnp
or
mov
inc
(bad)
push
cli
cmp
pop
pop
cmp
jmp
call
sub
mov
cs
fldcw
jb
mov
gs
mov
jb
div
stos
push
pop
add
fiadd
push
dec
cmps
lods
mov
or
adc
and
jo
push
in
test
or
xchg
push
addr16
push
xchg
mov
pushf
aam
pop
icebp
enter
das
jno
mov
das
mov
out
(bad)
test
adc
fidivr
call
adc
std
int
fcmovu
jg
out
ror
sub
popf
inc
and
sahf
xchg
mov
add
push
push
jne
into
enter
jl
fmul
adc
test
fidiv
retf
addr16
xchg
cmp
jno
dec
outs
mov
and
iret
(bad)
icebp
dec
fdiv
push
push
jmp
test
dec
mov
test
enter
lds
into
xlat
iret
in
ss
xchg
cmps
mov
mov
jns
mov
and
xor
loopne
push
imul
aam
sub
out
jg
stc
out
jg
stc
mov
xor
inc
pop
lea
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
int
ret
(bad)
jmp
fwait
jmp
dec
dec
ja
out
ss
jae
imul
cmps
mov
out
xchg
add
les
fdiv
push
ins
mov
aas
loope
mov
retf
pop
push
lods
sub
dec
xor
cmp
popf
xchg
sar
push
inc
push
je
rcl
retf
shl
and
rcr
jmp
push
xchg
shr
jmp
push
ffree
loope
xor
out
mov
or
add
aaa
or
das
fsub
jmp
jl
jecxz
sahf
sub
stos
out
xchg
loopne
nop
xchg
and
pop
cmps
add
enter
pop
aaa
iret
fld
mov
jae
popa
imul
sbb
std
in
jge
mov
frstor
xchg
and
mov
shr
xchg
pop
int
push
inc
jp
test
inc
pop
dec
sbb
fstp
xor
pop
cmps
mov
and
sub
(bad)
or
out
fwait
xchg
in
and
enter
mov
fs
iret
sub
test
lahf
dec
sub
add
into
pusha
pop
sub
shr
fdiv
icebp
out
push
loopne
dec
(bad)
leave
pop
out
pop
add
aaa
scas
or
aaa
dec
retf
in
or
mov
pop
mov
ins
stos
jmp
mov
(bad)
cmps
pop
int
mov
call
jmp
cdq
fsub
jmp
mov
and
push
mov
jne
mov
cmp
popa
pop
add
scas
rcl
daa
jge
pop
push
pop
adc
cwde
and
add
ins
jle
sbb
xchg
xchg
push
mov
pop
jl
pop
xchg
push
jg
xor
ins
add
jmp
adc
stc
call
jp
push
or
out
stc
jle
mov
movs
enter
push
int3
nop
and
mov
push
jp
adc
lods
inc
mov
into
call
jns
sahf
jb
nop
pushf
jl
xor
jp
call
mov
loope
push
(bad)
fmul
gs
mov
jl
nop
xchg
fimul
add
xor
cmp
into
in
(bad)
mov
adc
xor
mov
js
pusha
fdiv
sub
ret
adc
ins
mov
jae
push
cmps
adc
in
hlt
(bad)
int
icebp
inc
pop
inc
into
inc
jno
lahf
push
mov
je
jp
(bad)
loop
outs
mov
dec
fiadd
lea
popf
loope
xlat
sbb
cmp
stos
rol
call
xchg
push
or
xor
sahf
pusha
jle
mov
sub
or
xchg
fs
(bad)
mov
pop
or
fldenv
pop
daa
push
dec
fist
or
push
xchg
sbb
int3
mov
cmps
repnz
inc
mov
push
div
adc
int3
xor
pop
in
cwde
lahf
inc
sti
test
ret
xor
inc
lods
push
mov
mov
cdq
pusha
int
jp
loopne
sbb
sub
add
cmp
lock
jl
das
mov
dec
fidiv
sbb
(bad)
faddp
je
ret
inc
dec
cdq
data16
in
(bad)
mov
jle
mov
or
cwde
inc
leave
cmp
push
adc
dec
adc
in
mov
jnp
test
cmps
adc
mov
xchg
or
mov
out
pop
hlt
dec
inc
sbb
imul
ret
inc
cli
jno
hlt
dec
jnp
(bad)
aad
out
sub
aas
xchg
jmp
(bad)
push
in
xchg
dec
sbb
stos
dec
mov
and
jnp
xor
dec
pop
jae
(bad)
sub
mov
pop
fisttp
dec
jg
mov
std
mov
jle
iret
xchg
popf
clc
jecxz
je
(bad)
dec
ficom
aas
adc
mov
retf
push
xchg
in
or
imul
ficom
test
in
mov
in
push
or
int
(bad)
fistp
out
dec
sbb
cmc
push
(bad)
cli
mov
in
dec
cwde
test
cmp
xor
sbb
stc
or
inc
lea
cmp
mov
cmc
out
and
cdq
add
mov
xor
xchg
xor
lds
out
popa
adc
das
jle
cs
mov
outs
sbb
fist
mov
pop
jecxz
sti
sub
aam
lds
fadd
test
out
push
pop
mov
push
cld
test
mov
dec
push
adc
mov
ret
es
cmp
mov
mov
push
jg
das
pop
out
adc
ins
hlt
data16
cmps
adc
(bad)
jge
jns
pop
movs
retf
imul
push
adc
popa
(bad)
sti
icebp
test
int
adc
xchg
add
mov
cmc
ins
scas
les
je
xchg
adc
dec
out
xor
push
pop
mov
sub
or
and
mov
xlat
bound
inc
inc
add
xor
push
movs
imul
scas
test
retf
push
aaa
jecxz
or
add
mov
aad
push
daa
add
(bad)
test
xor
out
fdiv
cmp
fld
cmp
(bad)
cmp
aas
(bad)
xlat
rcl
pop
call
mov
in
inc
jnp
xor
scas
test
dec
sbb
mov
inc
xchg
push
jle
(bad)
ins
push
(bad)
dec
push
mov
shr
jmp
out
stos
in
mov
adc
or
jnp
xor
jno
mov
(bad)
fild
shl
adc
int3
rcl
fs
call
out
and
pop
jb
test
jbe
frstor
xchg
jne
ret
scas
push
fldenv
loopne
adc
sub
neg
ds
stos
je
mov
and
push
inc
gs
and
mov
lods
adc
mov
aam
(bad)
iret
fild
pop
ja
cmp
(bad)
or
push
add
push
mov
fistp
iret
jp
dec
outs
cmc
pop
scas
ret
pop
data16
retf
jno
in
rep
sbb
scas
(bad)
cmp
jbe
fwait
push
adc
or
mov
adc
sub
mov
xchg
or
push
xor
div
xchg
int3
call
stos
cli
or
inc
jns
jns
test
ins
enter
sub
ret
and
aas
(bad)
hlt
sub
addr16
and
adc
add
xchg
ror
dec
xchg
pop
mov
(bad)
push
push
cmpxchg
call
imul
stos
test
add
mov
lock
push
mov
hlt
loop
cmp
lea
jp
cmp
out
enter
mov
repz
jge
pop
(bad)
xor
pop
xor
or
inc
ins
and
fstp
dec
dec
sbb
pop
je
sbb
cmp
xchg
xor
cmps
cld
xor
aas
add
loop
xchg
fcmovbe
imul
push
vstmxcsr
ins
xchg
(bad)
cmp
repnz
js
cs
(bad)
in
xchg
clc
dec
loop
out
pop
movs
jbe
inc
jl
mov
sub
test
inc
fsubr
movs
sub
mov
stc
jmp
sbb
jmp
mov
jmp
push
dec
mov
lods
aas
xor
adc
pop
in
cwde
retf
cmp
cmp
push
outs
aad
cmp
add
inc
add
add
jno
lods
outs
sbb
dec
dec
push
xchg
lds
lods
cld
int
mov
mov
rcl
cs
iret
ss
cld
pop
rol
adc
pop
in
not
data16
mov
cwde
pop
xor
imul
adc
mov
cmp
xchg
(bad)
scas
enter
jo
test
shr
mov
imul
sar
sbb
cld
jo
and
mov
repnz
cmps
fs
aam
leave
xchg
add
loopne
xor
push
leave
jae
push
hlt
or
pop
sbb
adc
push
push
(bad)
pop
sbb
jmp
jl
or
fdivr
inc
stos
int3
je
mov
fild
out
fcom
fsub
aam
mov
jno
ss
mov
add
push
mov
stos
cmp
mov
(bad)
mov
inc
jmp
dec
mov
push
push
cld
push
mov
das
loop
and
wrmsr
sub
add
cs
dec
pop
xchg
retf
lods
adc
jno
jl
sub
cmp
retf
sbb
pop
lahf
repnz
mov
add
jmp
ret
scas
dec
gs
xor
pop
aaa
jle
aam
mov
enter
cwde
lahf
hlt
dec
dec
js
arpl
xor
adc
pop
dec
cmp
push
rcl
int
not
(bad)
loope
or
faddp
mov
mov
dec
inc
xor
ret
lods
mov
push
sbb
and
(bad)
retf
bound
aam
and
test
movs
fiadd
sub
movs
movs
cmc
push
sub
inc
sbb
out
cld
mov
pop
out
pushf
and
data16
iret
mov
daa
jle
mov
cmc
mov
in
mov
xchg
jno
inc
out
jmp
push
adc
outs
mov
ret
mov
popa
cwde
push
sub
and
je
mov
and
pop
fisubr
ds
push
add
or
idiv
in
mov
mov
add
dec
repnz
adc
mov
out
sub
push
cbw
mov
js
(bad)
push
mov
popf
mov
push
jbe
jae
cli
scas
push
ss
or
add
cmp
lahf
and
in
data16
xor
xchg
cli
sbb
test
pop
sub
lods
push
mov
cmp
retf
xchg
adc
jle
in
cmp
sahf
mov
mov
(bad)
and
pop
imul
sbb
scas
call
icebp
inc
or
xchg
mov
push
(bad)
mov
fist
inc
shl
cmp
mov
jno
fwait
mov
in
imul
jae
es
xor
sub
fst
push
(bad)
mov
jmp
mov
xchg
jmp
sub
cmp
xchg
scas
ret
ret
movs
push
inc
pop
mov
dec
fidivr
mov
push
and
inc
mul
adc
add
jp
pop
in
jnp
mov
cmp
dec
or
sbb
clc
popf
cmp
push
cmp
push
sub
xchg
jmp
pop
outs
push
xor
ins
mov
popa
in
push
inc
popa
ret
pop
es
xchg
inc
pop
sar
aam
ja
fisttp
ins
dec
adc
pop
add
ficomp
out
xchg
cld
test
pop
ret
push
dec
pop
pop
adc
mov
fbld
and
push
jmp
xor
ret
fnstsw
mov
xchg
stos
arpl
dec
jle
int3
les
dec
icebp
into
pop
cmp
(bad)
test
mov
sub
cmp
mov
or
je
jb
vpmuludq
cs
nop
pop
es
mov
xchg
add
imul
stos
push
popf
(bad)
sti
in
cwde
xchg
adc
cmps
jne
repz
push
data16
sub
jecxz
in
cmp
inc
sbb
dec
push
pop
dec
(bad)
fidiv
push
cli
adc
aas
dec
popa
out
sbb
(bad)
xchg
enter
fwait
lahf
pop
icebp
ja
imul
movs
outs
jb
xchg
loop
ja
xchg
clc
xchg
xchg
aas
push
out
xor
cmp
out
xor
shr
ins
or
popa
xchg
sub
xchg
cwde
in
je
call
xlat
js
mov
clc
fisub
push
or
add
movs
inc
cdq
(bad)
(bad)
sbb
cmp
inc
mov
fbld
aas
les
pop
jg
jle
movs
or
or
adc
jmp
(bad)
cmp
enter
add
push
sub
mov
mov
or
in
jle
pop
into
xor
fdivr
sbb
cmp
das
gs
xor
stc
pop
jo
sub
sbb
push
scas
mov
pop
clc
mov
int
in
xchg
out
push
jge
and
cmps
rcr
mov
aad
push
scas
mov
mov
add
std
add
nop
das
mov
rcr
cmp
or
in
call
cmps
das
(bad)
not
cmps
inc
dec
xchg
repnz
gs
into
aam
mov
dec
sahf
iret
adc
pop
lds
jl
jae
ins
jp
adc
enter
mov
jb
cmp
jne
fwait
and
dec
das
mov
jge
ret
push
call
pusha
dec
in
mov
adc
cdq
mov
jl
shl
cs
add
in
jg
pop
hlt
pop
retf
jmp
or
sbb
mov
daa
jmp
adc
ss
mov
and
(bad)
and
push
adc
mov
adc
push
sbb
dec
nop
push
(bad)
xchg
pop
inc
lahf
mov
mov
cdq
inc
in
aam
loopne
mov
iret
ja
daa
inc
test
sub
ror
popf
cmc
and
outs
sahf
and
addr16
cs
mov
mov
jecxz
inc
ja
cdq
call
mov
cmp
xlat
cmp
push
stc
test
(bad)
cmp
mov
or
out
pop
sti
inc
ror
out
jecxz
inc
xor
pop
adc
inc
aas
adc
mov
jmp
std
and
aad
movs
pusha
cld
inc
lds
sahf
hlt
and
pop
scas
or
xor
cld
rcl
fstp
inc
cdq
mov
and
mov
jae
pop
or
cmp
dec
push
xor
cdq
inc
sub
cmp
retf
gs
pop
movs
outs
stc
jp
jmp
icebp
cld
push
pop
cmps
inc
jnp
fmul
fisttp
mov
fistp
mov
fild
pop
xchg
push
mov
xlat
dec
imul
xor
adc
test
popa
in
jmp
and
fwait
inc
scas
or
mov
(bad)
call
mov
push
sbb
sbb
aad
push
popa
pop
mov
push
imul
sbb
mov
mov
xchg
cmp
pusha
std
in
ret
imul
out
pop
sbb
mov
inc
icebp
mov
inc
fmul
cmc
int
cmp
jmp
into
add
inc
ret
xor
mov
sbb
pop
cmp
popf
sub
xor
cmps
or
xor
or
inc
pop
lahf
mov
popa
pop
loope
jne
bound
das
ins
add
loope
add
daa
pop
pop
jmp
test
push
mov
add
call
(bad)
stos
mov
push
mov
xchg
add
adc
mov
dec
lods
sbb
popf
jecxz
inc
jmp
jo
outs
or
lods
mov
scas
mov
add
dec
rcr
mov
mov
mov
mov
ins
or
dec
mov
stos
cmps
and
jne
add
mov
aaa
push
inc
pop
ret
lahf
outs
push
dec
mov
(bad)
push
pop
pop
cmp
and
shr
rcr
sahf
repz
in
add
dec
jne
dec
add
in
and
rcl
sti
fsubr
jle
test
cld
push
push
adc
cli
and
js
shl
inc
imul
mov
jae
(bad)
mov
sub
jmp
cdq
sub
data16
inc
rcr
xor
xchg
dec
fdivr
mov
sti
out
pop
mov
mov
and
add
in
lahf
daa
push
and
jae
cmp
das
mov
(bad)
lods
cmp
xchg
fsubr
loope
hlt
rol
cwde
enter
js
xchg
repz
in
nop
and
adc
rcr
loop
aas
mov
inc
sbb
pop
adc
aam
mov
fs
cmp
outs
sti
js
loop
and
sbb
pop
jp
cld
adc
mov
xor
test
or
xchg
mov
push
or
mov
sub
out
pop
add
repz
(bad)
cld
out
(bad)
stc
iret
jg
scas
add
inc
imul
imul
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
xor
dec
(bad)
xchg
inc
movs
sbb
sar
fstp
and
and
xchg
push
add
fcomip
mov
add
inc
sbb
pop
dec
jae
inc
ins
movs
out
imul
mov
jge
pop
shr
iret
cmc
das
test
mov
add
mov
std
bound
cmp
inc
inc
inc
jnp
int
mov
in
xor
in
pop
sar
repnz
and
push
bound
aas
mov
add
jecxz
out
cs
sbb
cli
bound
test
sub
daa
mov
stos
mov
mov
fnstsw
stc
clc
(bad)
push
jmp
jno
jp
and
pop
xor
(bad)
dec
das
je
xor
push
js
fistp
mov
(bad)
sub
push
std
retf
loope
mov
sbb
xchg
push
adc
pop
push
pop
fimul
xchg
xchg
scas
or
adc
push
mov
ror
sub
or
sub
lods
mov
rol
add
mov
xor
in
cmp
xor
push
jge
scas
sub
push
pop
push
jg
add
xor
jnp
loopne
pop
mov
cld
fbstp
pop
les
fld
test
ss
les
fimul
clc
jnp
pop
xor
scas
or
sub
inc
dec
pop
xor
(bad)
mov
enter
sbb
or
inc
jmp
ret
lods
sbb
(bad)
bswap
into
sti
pusha
cwde
push
pop
mov
and
inc
or
pop
mov
call
(bad)
xchg
jp
jle
icebp
pushf
fiadd
fs
and
arpl
sar
clc
or
shl
cmps
test
es
dec
add
sar
movs
cmp
xor
inc
sti
repnz
outs
inc
sbb
not
mov
sub
jb
mov
out
xchg
pushf
popa
loope
or
outs
dec
adc
test
or
pushf
test
inc
shl
cmp
pop
add
mov
iret
fdiv
push
jle
inc
sbb
iret
sti
add
adc
pop
cmp
dec
jmp
xchg
jbe
jle
popf
retf
scas
stc
pushf
add
(bad)
and
movs
jge
clc
(bad)
cmp
lea
ret
dec
cmp
imul
bound
mov
stos
fcmovbe
in
jge
fisttp
into
test
dec
xor
dec
call
in
pop
inc
jns
loop
fadd
cmp
pop
mov
adc
adc
mov
cs
sbb
shr
dec
jne
push
dec
test
pop
div
xchg
push
add
mov
mov
rol
dec
push
jg
das
adc
push
xchg
sbb
mov
add
dec
or
rol
pop
sub
adc
jl
cdq
shl
sub
or
inc
inc
and
cmps
dec
add
mov
sahf
inc
in
ins
cmp
xchg
in
rol
push
loope
add
ficomp
cmps
dec
movs
cmp
jl
ror
ins
mov
enter
mov
xor
nop
scas
or
sbb
mov
push
cli
daa
daa
scas
imul
adc
mov
xchg
sub
enter
adc
cmp
push
dec
fnsave
lock
bnd
mov
ror
and
push
cdq
pop
imul
dec
out
pop
add
push
jo
test
jp
sbb
cmp
in
adc
mov
pop
mov
aas
sti
ret
lods
mov
mov
cmp
mov
xor
sub
mov
sbb
pop
mov
mov
inc
push
mov
daa
arpl
mov
mov
mov
push
ins
pop
and
sbb
adc
inc
push
mov
imul
inc
and
js
movs
push
scas
adc
inc
in
mov
jne
lock
mov
and
js
(bad)
xlat
mov
test
xor
push
pop
xchg
outs
es
ja
popa
ds
xor
mov
or
mov
iret
fcmove
dec
cmp
mov
mov
adc
xchg
shr
adc
daa
xor
imul
push
adc
mov
sub
cmp
pop
fisttp
dec
mov
stos
repnz
mov
add
aam
sbb
inc
call
dec
nop
sbb
loope
xchg
sub
xor
fimul
xchg
call
adc
mov
mov
in
or
mov
xchg
mov
jo
das
mov
xchg
add
mov
mov
sahf
adc
test
and
pop
iret
rcl
jp
fimul
push
sub
js
jmp
scas
inc
aaa
xor
adc
or
aad
and
lods
push
sub
fidivr
inc
(bad)
jmp
clc
out
les
sbb
and
icebp
pop
cdq
inc
popf
lock
rcl
cmp
arpl
out
pop
push
mov
sbb
mov
in
call
adc
stc
(bad)
jl
add
pop
imul
adc
adc
fiadd
das
mov
sar
pop
or
(bad)
pop
xchg
xlat
cmc
inc
dec
pop
test
aad
xor
cmc
js
xchg
push
mov
pop
std
jl
add
ins
cwde
xor
outs
sub
xor
jbe
or
out
push
loope
aam
mov
fstp
scas
add
js
and
retf
jp
cld
mov
pusha
loop
(bad)
mov
jl
and
mov
mov
mov
paddsb
mov
mov
pop
push
cmp
jle
xchg
mov
imul
lds
mov
pop
outs
push
cmp
xchg
std
sub
sub
repz
shl
push
sbb
in
or
dec
scas
(bad)
(bad)
stos
repnz
lea
xchg
popa
mov
pop
adc
movs
and
aas
lea
pop
push
int
pop
or
jle
fs
mov
sti
pop
out
cmp
dec
mov
fisubr
dec
mov
addr16
pusha
add
xlat
repnz
mov
adc
mov
add
jno
pop
or
scas
bound
mov
cmps
adc
out
cld
jns
inc
scas
mov
xchg
and
or
mov
xlat
cmp
cmp
jnp
cs
outs
or
in
push
hlt
and
aaa
sbb
ror
add
xlat
pop
add
xlat
mov
(bad)
iret
push
lods
dec
cmp
jnp
cmc
mov
sub
data16
mul
or
cmc
jl
adc
mov
fnstsw
rcl
adc
loopne
loope
cmp
jge
(bad)
jp
loop
sub
inc
ja
pop
pop
(bad)
mov
div
adc
jnp
and
in
lea
xor
adc
mov
(bad)
mov
cli
movs
sbb
dec
out
(bad)
loop
pusha
call
or
aad
lahf
push
xor
in
jecxz
stos
or
or
cdq
dec
push
dec
nop
popf
into
lods
call
fucompp
jle
mov
fwait
jecxz
ficom
in
adc
pop
inc
dec
es
push
or
in
into
pop
xchg
xchg
pop
adc
adc
je
aaa
xor
jg
mov
dec
mov
stos
xor
jno
xor
sahf
mov
dec
inc
(bad)
push
imul
rol
mov
sub
adc
mov
fisub
cdq
xor
push
cmp
dec
cmps
sub
hlt
retf
jl
fmul
or
in
leave
jmp
fcomp
sub
mov
nop
fidiv
cmp
pop
mov
in
in
js
shr
nop
(bad)
addr16
ds
fwait
jl
ficom
imul
mov
int3
hlt
out
cmps
mov
clc
inc
popf
jecxz
js
push
mov
int
imul
jns
hlt
adc
arpl
push
fcomp
enter
mov
dec
and
push
xor
rcl
rcl
push
dec
stc
icebp
shl
sub
sbb
imul
inc
cmps
pushf
jne
int3
pop
sub
popf
sub
push
push
lods
les
iret
data16
mov
mov
add
sub
enter
dec
sub
retf
fwait
(bad)
loopne
mov
cdq
and
retf
icebp
or
pop
cwde
mov
pop
jl
adc
xchg
mov
les
push
mov
cld
mov
pop
pop
stc
inc
(bad)
gs
fldenv
fiadd
mov
scas
or
mov
fstp
xchg
add
push
add
xchg
pop
xor
repnz
ret
inc
add
ficom
pushf
or
cmp
jle
gs
imul
jge
pop
cmc
stc
je
push
rcr
xor
jmp
les
loope
and
jecxz
or
cli
push
xor
(bad)
(bad)
push
pop
sti
xchg
int3
dec
(bad)
sti
inc
fdiv
gs
call
sti
dec
jle
sbb
ja
adc
push
push
gs
mov
sbb
fst
sub
dec
add
add
scas
aad
sbb
mov
or
ror
mov
cs
and
sbb
mov
fsub
and
pop
add
dec
mov
mov
jecxz
out
cld
and
sahf
std
call
nop
pusha
loop
cmp
inc
cmp
xor
push
rcr
xchg
nop
jno
stos
aaa
clc
movs
inc
pushf
shr
ins
cwde
or
add
adc
push
sbb
mov
lea
jne
sbb
xchg
jge
repnz
stos
mov
lock
adc
repz
js
leave
lds
push
mov
xchg
(bad)
out
push
es
jg
dec
icebp
mov
addr16
out
enter
push
call
add
ds
pop
out
or
ja
cmp
xchg
mov
les
sbb
xchg
push
pop
xchg
inc
inc
cmp
paddusb
js
stos
mov
loop
adc
xor
dec
pop
or
pop
loop
dec
fsubrp
cmp
(bad)
adc
jnp
mov
cmps
xor
ss
add
popf
in
or
jb
not
add
je
(bad)
cmp
push
xlat
pop
clc
mov
cmc
mov
xchg
or
aaa
push
inc
js
cdq
push
mov
fdiv
jle
sbb
stc
rol
xor
inc
gs
push
shl
sbb
mov
mov
fs
and
xchg
add
add
xor
push
pusha
rcl
in
dec
push
fsubr
shr
sub
stc
mov
sub
adc
sbb
lahf
(bad)
stc
adc
xchg
fist
jo
ins
adc
xchg
stos
in
mov
mov
mov
add
pop
daa
jg
stc
addr16
jmp
call
jb
clc
out
jl
movs
and
scas
stos
sar
mov
jae
jb
adc
dec
cmc
outs
ror
in
inc
inc
mov
scas
jl
add
ss
push
test
mov
inc
mov
jmp
lods
cli
lock
inc
fsubrp
sbb
ins
jle
(bad)
xor
mov
mov
mov
sub
jne
adc
lahf
fiadd
popf
cld
movlps
cmp
and
cdq
in
arpl
lahf
outs
rcr
addr16
jb
out
dec
push
sub
xchg
adc
xchg
sub
fisttp
cdq
sub
addr16
(bad)
dec
jb
jecxz
jns
add
xlat
test
inc
in
leave
movs
(bad)
imul
por
popf
repnz
(bad)
sub
mov
sub
and
xor
jno
jecxz
les
fstp
pop
add
pop
sub
xchg
das
es
sub
scas
mov
mov
daa
sub
push
cmps
nop
jmp
and
jns
rcr
test
fldcw
and
pop
cmp
jmp
into
and
aaa
fisttp
movs
stos
into
mov
int
mov
cmp
inc
jecxz
pop
pop
icebp
bound
xlat
loopne
add
jl
repnz
je
js
(bad)
push
lea
mov
fcom
test
adc
jns
adc
xor
fsub
fstp
arpl
inc
pop
es
cmp
jecxz
mov
jecxz
pop
sbb
shr
fist
out
push
inc
xor
stos
jmp
int3
scas
xor
add
xor
pop
ja
sbb
mov
clc
mov
jno
stos
inc
push
int
or
dec
add
iret
or
test
pop
ror
sbb
jle
into
imul
out
bound
or
xchg
data16
mov
sar
sar
ret
cmp
mov
fistp
outs
icebp
jmp
lea
jbe
test
loope
test
fwait
arpl
leave
xchg
loopne
out
retf
adc
fcom
int
fst
add
rcr
pop
dec
arpl
mov
jle
fstp
mov
mov
and
jbe
mov
pop
aaa
mov
jno
inc
mul
stos
cmps
sbb
arpl
fisttp
push
les
or
push
adc
push
push
mov
in
mov
stc
scas
mov
sub
jmp
pop
jp
nop
fwait
test
data16
add
retf
sti
hlt
dec
mov
repz
sahf
push
dec
pop
in
push
dec
rcr
sbb
sbb
push
imul
pop
imul
leave
push
loopne
dec
xor
sub
dec
inc
cmps
or
ror
retf
cmp
jle
outs
ror
adc
xlat
mov
aas
aas
(bad)
mov
adc
mov
mov
xor
js
out
pop
add
neg
mov
scas
dec
std
mov
iret
or
jp
sbb
cmc
add
mov
mov
pop
cdq
cmp
fwait
pop
jmp
dec
sub
loope
cmps
mov
mov
fwait
add
add
cli
test
hlt
sub
ficomp
cwde
in
dec
mov
add
out
stos
pop
std
addr16
in
dec
push
cmc
dec
xchg
jno
test
clc
cmovg
mov
jns
repnz
sbb
out
outs
scas
in
add
mov
call
fwait
push
lds
sub
push
lock
mov
jl
xor
in
mov
push
imul
stos
inc
adc
test
pop
js
iret
sar
out
call
mov
stos
movs
(bad)
push
or
and
leave
or
enter
and
xor
and
(bad)
cli
ins
inc
mov
pop
or
nop
jp
test
in
push
dec
int
jno
jmp
(bad)
xor
pop
fcom
or
jmp
mov
ss
pop
fisub
dec
jne
dec
xchg
test
sbb
and
cmps
sbb
in
mov
jae
sub
lods
into
mov
add
imul
adc
push
pop
loopne
pop
out
retf
repz
aaa
or
fisttp
dec
adc
cmps
pop
add
shl
lods
xor
push
mov
xchg
dec
pushf
and
adc
ja
pop
inc
xchg
pop
push
mov
mov
loop
(bad)
xlat
jmp
push
(bad)
fs
push
mov
pop
addr16
mov
xchg
mov
mov
inc
lds
push
dec
or
xchg
clc
gs
pusha
arpl
cmps
pop
pop
adc
addr16
mov
add
aaa
jne
push
jo
add
jnp
xor
cmps
ds
ins
push
cli
dec
cmc
cld
push
add
repnz
inc
sbb
dec
aam
test
jge
add
addr16
test
scas
jmp
not
call
mul
jns
cmps
cmc
popf
pop
adc
dec
mov
pop
test
in
test
sub
addr16
dec
adc
dec
jle
and
pop
jb
rcl
inc
push
add
or
repz
(bad)
cld
out
(bad)
stc
jg
add
pop
xchg
or
clc
cmp
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
scas
out
cmp
xchg
adc
xor
ss
into
mov
jno
aaa
fwait
outs
out
rcr
cmps
arpl
aas
out
jecxz
out
jl
and
or
cmp
sti
mov
mov
aad
fdivr
mov
sub
cmp
push
(bad)
test
push
div
mov
jmp
(bad)
pop
fs
arpl
scas
(bad)
pop
push
jae
sub
lahf
mov
add
retf
leave
movs
imul
nop
std
adc
out
jnp
retf
stos
iret
sti
je
call
scas
sub
ror
fild
jb
pop
aam
sahf
push
xchg
std
test
ret
ficom
jl
es
cs
sbb
int3
repz
fs
push
loopne
shl
push
push
xor
(bad)
cli
sbb
jns
(bad)
cmp
push
imul
jbe
mov
pusha
popf
pop
fucomi
or
or
push
(bad)
mov
pop
xor
inc
jbe
sub
jge
lods
pop
inc
push
loope
in
fdivp
jb
jnp
test
sbb
scas
mov
jb
xor
dec
nop
clc
pusha
add
push
stc
push
aad
repnz
mov
xchg
add
call
pop
fadd
dec
cdq
or
cld
neg
shl
push
and
jge
jno
dec
sbb
dec
sbb
(bad)
aas
imul
cmp
js
pop
jo
sub
shr
bound
add
out
cmps
pop
mov
mov
push
sbb
aas
or
xchg
mov
mov
mov
lock
call
jle
adc
cdq
adc
sbb
test
jle
jle
dec
and
dec
mov
(bad)
rol
retf
dec
push
sbb
retf
xchg
cmps
or
es
pushf
lods
lahf
mov
jle
push
sub
jecxz
mov
push
cmps
jg
loop
lahf
mov
cmp
(bad)
and
scas
sti
sar
ror
ret
sbb
push
jge
pop
mov
sub
std
fnstcw
add
ss
(bad)
(bad)
repnz
stos
leave
xlat
loopne
fistp
fistp
pop
neg
cli
aam
cmp
mov
outs
xor
jle
dec
stos
repz
(bad)
dec
jecxz
sub
fdivr
xor
inc
inc
cmp
jmp
pop
(bad)
or
hlt
(bad)
js
dec
xor
jmp
aaa
jo
pop
dec
cmp
es
fimul
leave
lock
push
out
(bad)
pop
test
in
loope
rol
fwait
inc
js
xor
mov
nop
mov
adc
call
mov
retf
sbb
bound
out
pop
movs
sub
adc
lahf
pop
leave
sbb
sar
rcr
and
cdq
mov
lahf
or
imul
(bad)
ins
xor
and
rol
mov
inc
sbb
and
dec
repnz
or
jbe
dec
data16
sahf
movs
mov
xchg
lds
xor
repnz
or
(bad)
sahf
pusha
push
and
push
mov
cwde
repnz
je
mov
inc
int
fstp
or
xor
mov
fdivr
push
adc
jecxz
aaa
cmps
ficom
scas
daa
std
cli
cmps
(bad)
test
push
jg
mov
cmc
shl
xlat
mov
push
loopne
mov
inc
ja
ret
fisub
sub
es
sub
daa
lods
fcmovbe
aam
loopne
pop
dec
push
or
mov
scas
mov
into
dec
test
adc
cli
test
pop
mov
adc
iret
lahf
(bad)
xchg
stc
push
and
imul
lods
add
xchg
push
and
push
cmc
push
pop
mov
out
ret
iret
movs
leave
pop
or
retf
sbb
mov
fwait
sub
popa
out
test
push
mov
imul
loopne
add
(bad)
enter
les
and
(bad)
call
es
cmp
mov
mov
and
nop
in
push
mov
pop
stos
nop
mov
pop
push
mul
sbb
or
dec
outs
dec
call
sbb
or
adc
ins
mov
aad
pop
cmps
enter
pop
sbb
cmp
inc
dec
pop
sub
fnstsw
fist
sub
cld
inc
cli
cli
mov
and
xor
or
ins
fsubr
out
bound
mov
shl
fwait
xchg
pop
add
cs
fdivr
xchg
icebp
push
pop
mov
lods
push
pop
or
cmps
sbb
adc
rol
ds
xchg
inc
mov
aaa
xlat
pop
or
sbb
xlat
xchg
adc
adc
popf
inc
fucom
out
repz
inc
in
jg
ins
mov
push
mov
out
cwde
add
push
mov
mov
jns
sub
add
sub
inc
iret
and
data16
jne
pusha
jno
icebp
and
mov
xchg
inc
sbb
xor
mul
pushf
in
mov
call
jno
add
mov
or
push
in
inc
sub
aas
shl
add
lods
ja
int3
(bad)
iret
mov
stos
mov
fdivr
outs
jnp
xchg
mov
inc
out
push
aam
sti
or
pusha
sahf
(bad)
loope
fist
test
hlt
and
loop
add
cs
retf
pusha
or
xchg
repz
sub
sub
(bad)
stmxcsr
out
(bad)
cmovbe
call
test
xchg
mov
test
in
jns
jne
mov
out
sbb
cmp
daa
cmps
gs
shl
push
mov
xor
sbb
int
out
int3
mov
jmp
mov
pushf
sub
push
inc
cmp
inc
out
stos
stc
mov
adc
out
mov
(bad)
outs
adc
stos
in
sti
popf
into
pop
inc
xchg
add
rcr
outs
shr
sub
jo
ret
push
mov
xor
nop
ds
rcr
rcl
add
sub
jl
lods
pop
bound
push
jbe
sub
and
jbe
daa
jmp
rcr
(bad)
lds
mov
push
in
pop
dec
popf
fcmovne
sbb
xchg
fisttp
or
jns
fdivr
cs
adc
push
data16
jnp
push
idiv
xchg
mov
ds
add
mov
jecxz
fcomp
pop
xlat
(bad)
and
push
aam
clc
inc
pushf
mov
leave
xchg
cmp
(bad)
pop
xor
sub
ret
lds
sbb
jl
mov
daa
push
(bad)
pop
sub
pop
cli
or
loope
fild
mov
stos
push
es
aaa
gs
dec
addr16
retf
add
adc
xor
leave
inc
mov
and
int
pop
add
xor
xchg
scas
pop
in
not
aad
mov
loope
(bad)
test
push
outs
adc
cmp
jbe
cmps
xchg
sub
xchg
pop
inc
das
pop
push
scas
cs
add
out
repz
mov
mov
sbb
popf
mov
scas
mov
test
adc
repnz
add
sub
ss
and
(bad)
xchg
pusha
jle
sbb
jae
sub
push
test
ret
out
jnp
iret
loope
lods
sub
(bad)
fistp
adc
sub
std
or
in
or
xchg
(bad)
lods
(bad)
retf
mov
jb
addr16
adc
pop
xor
outs
cmps
cli
clc
in
sbb
loope
mov
or
mov
loop
cli
pop
cmp
jo
jmp
pushf
call
repnz
dec
lahf
mov
xchg
adc
jg
into
ficomp
hlt
dec
and
add
jmp
push
cmp
mov
push
ins
ins
fcmovu
les
retf
xchg
fs
std
adc
mov
jg
inc
shr
aas
mov
enter
enter
nop
jp
nop
es
jns
dec
call
neg
outs
aam
adc
int3
loop
cmp
and
iret
mov
jmp
(bad)
mov
gs
xor
xchg
sbb
jl
in
jnp
mov
cld
shr
inc
cmps
and
xor
ja
jl
nop
call
fadd
mov
cmp
sti
in
retf
imul
xchg
sahf
push
push
mov
jl
sbb
aam
mov
into
(bad)
ja
pop
dec
mov
and
(bad)
jae
mov
and
repz
pop
sub
popa
lds
mov
inc
mov
push
dec
fsubr
lock
sbb
dec
cmps
pop
cmp
sbb
fcomp
in
(bad)
xor
pushf
lock
imul
js
cmp
hlt
cmp
inc
sbb
cmc
scas
xchg
xchg
mov
mov
fldcw
cmp
dec
and
test
test
sbb
movs
mov
jae
in
mov
popf
imul
jge
fisub
mov
ret
sahf
mov
push
mov
add
repz
mov
je
jge
je
fld
jb
mov
mov
mov
push
out
mov
push
mov
mov
(bad)
iret
shl
pop
inc
cli
mov
jmp
stos
in
and
adc
popa
ds
xchg
pop
xchg
mov
mov
dec
mov
into
gs
inc
pop
test
jmp
ret
push
xor
and
jge
add
mov
out
lds
and
xor
jge
loop
push
push
outs
sub
mov
mov
push
mov
cmp
rcr
call
jle
cld
ja
(bad)
hlt
xchg
mov
inc
push
fadd
call
in
fisttp
cmp
dec
fwait
int
xchg
cmp
inc
adc
mov
addr16
sub
mov
sub
sbb
sub
mov
cmp
jbe
jb
inc
mov
retf
mov
xchg
call
fucomi
daa
movs
in
call
lods
ret
xchg
dec
and
add
mov
retf
out
mov
hlt
jbe
fcom
jl
xchg
mov
xchg
mov
inc
ins
(bad)
pop
and
xchg
mov
mov
mov
cmp
lods
(bad)
dec
ss
arpl
mov
add
mov
pop
lods
inc
in
aam
push
sub
test
inc
cwde
js
in
arpl
xor
inc
dec
lahf
push
frstor
imul
mov
js
push
pushf
in
call
fs
int3
xchg
and
shr
push
es
and
out
sti
fmul
cmp
repz
dec
retf
clc
pop
xchg
ins
rcl
inc
cmp
push
outs
out
push
mov
mov
or
fidivr
std
stos
outs
or
sub
mov
(bad)
fs
dec
js
pop
cmps
les
ret
xchg
call
or
imul
mov
shr
mul
mov
scas
mov
and
int3
icebp
add
mov
sub
jl
leave
jnp
imul
test
test
and
scas
movs
shl
mov
jno
mov
test
sbb
inc
fisub
sub
test
icebp
inc
cmps
sar
cld
fs
outs
cmp
mov
rol
xor
cmp
mov
in
fnstenv
or
sbb
je
imul
cmp
xor
xchg
ins
pop
int3
jge
(bad)
cwde
adc
mov
adc
retf
repnz
ret
in
push
rol
sbb
and
in
sbb
cwde
clc
ins
cmc
or
arpl
mov
push
fstp
les
nop
out
in
mov
cmp
gs
cmps
jecxz
ror
addr16
mov
lock
fdivr
cmp
jno
mov
cli
test
pop
sbb
xchg
cmc
aad
icebp
push
mov
mov
loop
mov
scas
inc
retf
fild
ds
ins
scas
pop
and
cmc
inc
jb
adc
push
add
mov
sbb
cmp
out
mov
and
inc
jp
push
mov
sbb
pop
xor
mov
iret
mov
fs
xchg
xchg
mov
mov
and
xchg
loope
adc
in
jmp
jnp
rcl
add
mov
pop
in
dec
add
sub
jl
push
std
aam
dec
mov
xor
xchg
sbb
jl
or
ins
xor
pop
rcl
(bad)
jle
and
(bad)
into
test
fld
mov
ss
push
sbb
inc
data16
xor
mov
test
icebp
in
jno
push
cli
mov
scas
(bad)
fnstsw
adc
scas
xchg
xchg
xchg
jp
dec
pop
ror
add
mov
clc
push
stc
mov
pop
mov
cmc
cmc
imul
cmp
rcl
pop
call
push
je
mov
or
adc
dec
ror
ins
(bad)
in
mov
sbb
sub
cmp
mov
jmp
mov
dec
mov
mov
dec
ja
loopne
daa
in
jnp
add
popa
ffreep
mov
outs
movsx
jl
push
inc
sti
gs
ret
loope
push
and
repnz
pop
mov
mov
add
xchg
movs
cmp
ret
les
retf
mov
repz
(bad)
mov
jg
xchg
loopne
cmp
shl
(bad)
xchg
jne
cmc
sub
outs
lds
push
nop
aaa
cmp
xchg
mov
aaa
out
xchg
inc
or
dec
push
dec
hlt
push
loopne
loopne
jns
jne
fistp
sub
stc
aam
mov
ja
mov
xor
ins
adc
lods
stc
cmc
test
inc
mov
arpl
pop
inc
mov
test
ins
ret
in
je
cmp
fld
mov
push
and
and
gs
jo
adc
lahf
lahf
push
sbb
inc
dec
xchg
fwait
cld
jp
push
pop
out
inc
inc
dec
retf
adc
out
retf
fwait
retf
stc
jmp
out
nop
and
adc
pop
jnp
mov
pop
(bad)
addr16
and
fnstsw
cwde
repz
pop
add
add
mov
out
sbb
sbb
sub
mov
adc
sub
mov
mov
mov
int
popf
test
movs
xchg
mov
out
out
scas
push
inc
xchg
fist
aas
ds
mov
jg
add
xchg
sar
push
data16
scas
inc
jne
jb
sbb
add
loop
imul
ins
(bad)
dec
push
in
scas
mov
les
sbb
push
inc
jmp
xor
(bad)
dec
xor
jmp
fnstcw
vmwrite
cwde
pop
(bad)
push
rcl
cmp
aaa
popa
ss
clc
jbe
test
adc
dec
sub
xor
pop
xchg
enter
je
mov
jmp
(bad)
lods
unpcklps
push
mov
fisttp
mov
cmps
push
lahf
mov
jo
jae
xchg
mov
dec
shl
push
sub
in
pop
movs
jle
repz
sbb
xchg
cli
cdq
mov
loopne
out
push
jb
push
adc
inc
(bad)
outs
jns
rcr
repz
and
in
retf
repnz
cmp
scas
mov
pusha
jle
inc
pop
cmp
and
add
test
jecxz
inc
mov
mov
jne
sahf
(bad)
dec
mov
mov
pop
in
std
in
fidivr
xchg
jmp
sbb
cmps
shl
push
cwde
sbb
sti
mov
call
and
div
mov
jmp
out
in
xor
imul
and
shr
mov
stos
push
jmp
imul
mov
jnp
test
push
or
rol
mov
sub
adc
addr16
add
data16
and
mov
sbb
xchg
jp
popaw
adc
sbb
shl
mov
gs
jle
jns
cmp
cmps
mov
xchg
arpl
mov
inc
(bad)
rcl
jae
jns
imul
fisttp
fisttp
mov
xchg
jg
stc
out
jg
stc
out
call
add
jg
cmp
xchg
mov
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
shl
sahf
jmp
int
daa
cmps
jecxz
jecxz
test
cmp
(bad)
je
test
out
jmp
js
add
nop
mov
jp
cmp
pop
add
adc
sbb
xlat
ror
ins
dec
ret
daa
cmp
clc
mov
int3
sbb
jmp
nop
fs
pop
shl
xchg
mov
add
das
inc
addr16
xor
push
sbb
push
imul
sbb
mov
imul
lods
dec
or
cmps
ret
dec
mov
out
jmp
or
and
mov
pop
daa
fcmovnu
mov
in
stc
sbb
mov
sbb
(bad)
hlt
inc
mov
adc
or
iret
push
fldcw
out
inc
mov
push
orps
or
mov
sbb
inc
sahf
retf
add
(bad)
pop
enter
xor
hlt
and
pop
mov
push
leave
pop
int3
cli
imul
push
push
(bad)
pop
mov
int3
mov
cmp
pop
ins
xor
pop
stos
mov
icebp
pop
scas
mov
aaa
test
or
xor
xchg
loopne
xor
inc
jo
adc
sub
idiv
out
pop
or
lods
push
(bad)
fcmovne
jle
mov
cmp
leave
les
repnz
cmp
mov
fwait
dec
lods
sbb
rcr
mov
and
jb
xchg
loopne
inc
mov
not
loopne
in
push
jg
xor
push
retf
xchg
rcr
test
fild
cmps
data16
pop
xchg
sub
aad
popf
cmps
inc
inc
or
in
xor
int3
popf
fisttp
leave
mov
or
mov
xchg
xchg
push
retf
ins
stos
ret
rol
and
int
loope
sbb
mov
mov
dec
xor
adc
(bad)
jg
inc
adc
mov
hlt
inc
mov
adc
daa
icebp
mov
pop
mov
ret
mov
test
pop
add
sbb
lods
sti
and
movs
xor
and
fild
pop
das
cs
ins
cmp
mov
frstor
push
jge
mov
add
xchg
int
sub
addr16
inc
cmp
ret
push
push
js
sbb
jnp
enter
enter
mov
in
cmps
aas
sti
outs
mov
push
jg
push
mov
push
push
sbb
cmp
clc
outs
movs
(bad)
loope
jecxz
fcmove
push
in
pop
(bad)
fisub
dec
rcl
adc
aam
test
in
dec
jmp
cmp
push
mov
inc
push
(bad)
outs
(bad)
adc
mov
cli
pop
dec
ja
jp
mov
aad
jo
mov
jo
xchg
hlt
aaa
leave
cdq
fst
repnz
les
mov
pushf
jg
test
cmc
loope
xor
mov
hlt
(bad)
mov
(bad)
mov
(bad)
push
call
lahf
rol
neg
rcr
inc
push
dec
cmp
inc
cmp
jne
xchg
ret
xor
loop
test
sbb
adc
adc
imul
xlat
adc
sub
(bad)
mov
and
jns
int3
pop
xchg
inc
sbb
mov
mov
and
push
int
in
inc
inc
into
movs
mov
fisubr
daa
test
mov
inc
arpl
or
enter
fld
and
test
cmp
sub
adc
and
adc
les
das
mov
std
and
adc
mov
shl
dec
push
test
mov
dec
retf
pop
mov
jmp
adc
(bad)
(bad)
in
xchg
jmp
sub
icebp
loopne
add
inc
imul
xchg
hlt
cli
cmc
cld
mov
and
mov
clc
neg
mov
ror
mov
leave
cld
cmc
pop
lock
out
out
icebp
test
addr16
jmp
xchg
test
jmp
xlat
retw
daa
ja
lea
shl
jbe
loopne
push
cmps
sub
fidiv
adc
xchg
mov
dec
shr
mov
out
(bad)
aad
mov
mov
push
pop
(bad)
shl
xor
or
sub
xor
push
nop
pop
fcmovnbe
lds
repnz
jmp
adc
mov
gs
jne
outs
mov
ss
mov
(bad)
jl
sbb
aas
shl
sub
sub
lahf
mov
in
ret
ins
in
sub
jns
xchg
sti
jle
push
xchg
sub
sub
jg
dec
mov
ss
shl
xchg
lea
(bad)
div
fxtract
xchg
pop
loopne
stos
jnp
popa
mov
dec
or
push
xchg
sbb
mov
out
push
cli
cmp
mov
cmp
lods
push
adc
or
jno
loope
outs
jae
adc
fcomi
mov
xchg
pop
or
ins
fild
loop
pop
mov
push
repz
imul
retf
das
push
adc
sahf
dec
mov
push
call
movs
outs
push
imul
pop
loop
sar
mov
jmp
adc
test
dec
out
xlat
mov
cmp
adc
cli
xchg
and
leave
lods
xchg
xchg
and
jns
loop
test
cdq
sbb
mov
xchg
cmc
cmp
repnz
cdq
jae
mov
xor
adc
sbb
jns
call
mov
daa
sub
and
sub
idiv
mov
lahf
ds
jl
adc
out
pop
or
iret
test
mov
out
fwait
jb
lahf
mov
test
dec
sub
mov
sbb
ror
cmp
test
jne
int
loop
add
lods
and
xchg
mov
push
lea
pop
loop
lock
stos
add
dec
push
adc
inc
imul
nop
cmp
movs
cmp
push
mov
jno
call
sbb
dec
mov
imul
mov
cdq
pop
cmp
idiv
mov
cli
scas
fistp
inc
popa
cmps
push
ret
mov
hlt
sub
aam
retf
push
pusha
dec
push
mov
hlt
or
xor
mov
and
out
mov
sbb
sub
test
scas
(bad)
arpl
xor
push
add
push
(bad)
cmps
gs
ss
loope
fbld
lds
ins
jl
cmp
scas
pushf
push
popf
xlat
out
ds
and
pop
shl
cmp
xchg
test
ficomp
pusha
mov
dec
jae
xchg
lds
sar
inc
mov
stos
mov
xor
enter
daa
push
or
cmc
cld
xchg
test
in
fidivr
xor
out
nop
push
dec
cmp
gs
pop
out
inc
out
jecxz
sahf
or
inc
ins
xchg
xor
fldenv
xchg
mov
adc
inc
inc
jns
add
in
fbstp
addr16
ret
mov
and
xchg
icebp
sbb
ins
leave
xchg
push
pop
jbe
push
xor
(bad)
jns
pop
lods
inc
in
sub
inc
(bad)
ror
add
outs
shr
mov
out
not
inc
pusha
repnz
pop
adc
out
mov
pop
push
retf
gs
cli
ror
adc
jg
enter
out
mov
xchg
mov
fist
mov
dec
stc
xchg
das
cdq
test
lea
xchg
add
lds
shl
cmps
cmps
ja
mov
adc
lds
loopne
mov
xor
xchg
inc
jbe
mov
or
sub
popf
ror
mov
repnz
in
les
sub
adc
jle
xchg
out
mov
into
popa
les
jl
add
ret
stos
mov
test
cwde
or
mov
nop
sub
pop
jg
imul
and
or
mov
mov
cli
stos
mov
ins
mov
int3
jmp
test
cmp
push
in
mov
sub
mul
or
or
cmps
retf
sub
push
fstp
fist
cmp
jge
inc
test
inc
mov
or
or
(bad)
nop
cmp
mov
mov
sbb
jae
mov
and
sbb
daa
sti
xchg
inc
aam
(bad)
xchg
fwait
mov
inc
mov
scas
aad
push
mov
jle
in
dec
jmp
movs
xchg
sahf
pop
push
inc
jle
ss
aaa
bound
in
push
and
mov
test
outs
sub
jecxz
in
out
add
sar
repnz
leave
fist
scas
xor
jns
ja
fild
xor
sbb
pop
xor
cmp
pop
and
in
xor
cld
inc
lahf
xchg
sbb
adc
sub
stos
fistp
push
in
xchg
pop
in
mov
mov
mov
pop
sub
jnp
scas
mov
cmps
mov
sahf
dec
stos
push
adc
cdq
cmp
sahf
add
ss
jge
xor
jnp
xor
bound
stos
adc
jno
int3
popf
fnstcw
adc
mov
xchg
jo
sub
jle
out
pop
cmps
jg
mov
std
std
adc
sub
push
sub
mov
ins
push
ja
inc
outs
mov
push
pushf
jns
cmps
call
xor
adc
pop
sub
arpl
aad
aas
xchg
xchg
lods
jne
loope
int3
sub
call
mov
bound
pop
xchg
and
outs
adc
imul
xchg
or
xor
leave
mov
push
stos
pop
dec
xchg
push
jns
aaa
adc
retf
dec
lds
mov
rcr
push
xchg
mov
xor
jb
ss
not
jne
add
hlt
js
fwait
pusha
bnd
jns
dec
mov
inc
retf
sub
imul
lea
cmp
fmul
mov
faddp
or
add
call
push
cdq
xchg
mov
inc
mov
adc
inc
cli
mov
shl
push
not
int
test
loope
cmps
call
jge
pop
adc
mov
or
rcr
sti
mov
loop
xchg
sbb
push
mov
jb
sub
(bad)
or
pop
pop
push
adc
fs
rcl
push
pop
adc
dec
mov
nop
pop
jns
or
(bad)
mov
rcl
or
mov
in
xchg
cmp
or
call
pop
sub
inc
dec
mov
mov
popf
rcl
xor
inc
add
push
cmps
inc
(bad)
jl
jb
fist
ret
cs
int3
dec
inc
xchg
mov
and
xchg
(bad)
fimul
fs
push
pushf
or
xor
jmp
sbb
les
xor
test
out
mov
xchg
(bad)
adc
push
pop
jne
adc
shl
pop
mov
or
stos
dec
sti
loope
mov
xchg
mov
xor
fbstp
cwde
daa
and
fst
jg
cmp
mov
pop
cmps
push
ret
mov
pop
inc
aaa
add
dec
leave
push
in
sub
mov
fcom
sbb
mov
adc
fiadd
mov
ins
jns
mov
in
mov
movs
(bad)
std
bt
jecxz
push
(bad)
in
out
popa
add
loope
xchg
ret
dec
pop
aas
jns
lea
jecxz
stc
xor
jmp
js
ficomp
dec
jmp
push
and
cmc
fs
dec
xchg
mov
xchg
retf
xlat
mov
(bad)
loop
cmc
cmp
adc
dec
fisttp
and
aad
xlat
and
or
push
std
push
outs
into
fst
stos
iret
dec
inc
mov
jmp
pop
aad
and
icebp
jmp
(bad)
pop
arpl
pop
repnz
dec
int3
sbb
push
shr
mov
dec
fsubr
sub
sub
dec
sub
add
dec
adc
cdq
pop
mov
test
es
movs
or
cmp
push
inc
sbb
push
fstp
sub
bound
lock
shl
test
fdiv
adc
inc
adc
fstp
jnp
test
imul
neg
cmp
push
push
je
sub
dec
mov
and
(bad)
in
repz
aad
leave
add
dec
aam
cmps
cmp
sub
jmp
sbb
loopne
sub
out
icebp
pop
sahf
callw
rcl
jge
ds
xchg
xor
mov
test
mov
stc
xchg
mov
mov
stc
add
test
shr
mov
pop
daa
repnz
inc
add
xchg
dec
push
adc
pop
(bad)
arpl
idiv
xor
push
ror
inc
add
adc
lahf
lods
aas
dec
or
das
outs
push
ins
shl
fdiv
fdiv
popf
jecxz
mov
cmp
xchg
(bad)
xchg
sbb
bnd
bound
mov
fwait
les
cmp
arpl
adc
lods
mov
cmp
(bad)
cmps
or
addr16
jae
add
push
mov
pop
cmc
arpl
js
inc
std
jl
pop
aas
cdq
bound
cmp
adc
jb
stos
adc
cmps
mov
cmp
pop
inc
call
rol
out
in
pop
jae
xchg
inc
pop
popa
faddp
ss
into
nop
adc
jns
cmp
in
rol
mov
push
lahf
retf
dec
cmp
xchg
xchg
lods
and
push
pop
cwde
cmp
mov
(bad)
out
gs
cmps
push
jae
dec
stc
cmp
mov
aas
int
(bad)
cmp
leave
les
sub
popf
test
mov
mov
jg
js
cmps
mov
mov
xchg
push
or
jle
jmp
adc
xchg
dec
cdq
sbb
shr
test
movs
ja
(bad)
adc
mov
dec
(bad)
in
sbb
and
ja
(bad)
mov
and
jns
lods
(bad)
ss
jp
add
out
std
mov
jae
or
push
pop
jl
lods
add
sbb
xor
mov
movs
jmp
jno
stos
inc
gs
test
cmp
lahf
xchg
push
in
jl
fcom
outs
movs
mov
pop
push
pop
pop
xchg
cdq
imul
pop
or
and
fsub
pcmpeqb
push
test
sti
ds
movs
mov
adc
lahf
sti
ret
retf
lock
mov
jle
shl
mov
aam
push
dec
cmps
mov
mov
out
mov
rcr
enter
lock
repz
cld
sbb
mov
sbb
sub
scas
xchg
int3
shr
add
cmp
aas
mov
dec
xchg
mov
(bad)
sub
ins
fld
add
repz
stos
pop
xor
pop
push
dec
lea
xor
stos
lods
push
sbb
les
in
adc
sahf
test
cwde
(bad)
fcomp
outs
hlt
xor
inc
arpl
push
clc
rol
mov
xchg
pop
dec
add
fidiv
fcomp
pop
in
ret
pop
mov
dec
jns
dec
lods
xchg
ins
repz
mov
inc
test
mov
pop
ja
std
adc
retf
aaa
inc
sahf
push
mov
add
fcomp
adc
lahf
push
push
test
lock
dec
cmc
lds
dec
ins
xchg
aam
rcl
or
xchg
cmp
adc
mov
push
repnz
dec
jle
mov
loopne
pcmpgtw
cmp
xchg
test
mov
mov
test
jo
dec
pop
popf
xor
push
and
inc
rol
mov
fsubp
inc
aam
dec
mov
add
retf
add
scas
scas
xor
je
aam
(bad)
mov
fnsave
and
pop
mov
jle
mov
push
mov
test
lods
dec
sbb
stc
into
mov
sti
out
jo
data16
xor
mov
lahf
dec
push
dec
iret
(bad)
fldcw
lock
into
sbb
(bad)
stc
iret
jg
repz
call
add
inc
dec
sub
out
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ss
dec
pushf
data16
imul
cmp
fstp
adc
adc
jmp
xlat
xor
pop
in
repz
shl
pop
dec
inc
test
mov
rcl
jo
movs
cwde
xor
in
ror
and
sub
leave
in
and
ja
ins
xchg
mov
jmp
shr
pop
mov
popf
jnp
fdiv
sti
in
sbb
stos
mov
sti
inc
mov
inc
into
inc
pushf
sti
xor
jmp
mov
fcmovbe
mov
cmps
(bad)
xchg
sub
mov
das
int3
mov
dec
mov
bound
xchg
add
or
jnp
push
rcl
call
pop
popf
mov
mov
xor
xor
and
out
dec
mov
pop
or
push
pop
mov
push
or
cmp
pop
xchg
fcmovb
mov
(bad)
out
push
adc
(bad)
into
rcl
movs
popa
dec
jge
in
popa
jne
mov
xchg
dec
icebp
(bad)
and
in
retf
mov
dec
movs
in
push
and
add
movs
dec
ins
pop
and
jnp
cwde
fadd
int3
lahf
push
mov
jecxz
loopne
adc
xchg
adc
cdq
xchg
ret
push
fs
inc
push
mov
or
jl
sub
addr16
mov
jnp
loopne
mov
pushf
inc
or
aaa
or
cmp
das
(bad)
add
sbb
mov
mov
xchg
mov
mov
xor
loope
push
mov
ins
stos
mov
test
inc
cmp
shl
ins
cs
movs
in
stc
mov
jbe
xor
movs
cmp
mov
popf
jno
jnp
mov
fsub
scas
mov
or
pop
push
sub
fdiv
cmc
push
fcomp
arpl
mov
(bad)
jmp
adc
sub
std
jne
stc
jle
clc
clc
ret
dec
shl
jle
inc
ss
fs
test
outs
mov
inc
dec
push
imul
fimul
outs
mov
pushf
pop
mov
(bad)
lea
rcr
xchg
cwde
imul
or
add
pop
hlt
dec
not
rcl
ficomp
xor
inc
(bad)
pop
sub
sub
dec
imul
and
(bad)
dec
cdq
idiv
jmp
lds
lods
sub
inc
les
retf
loop
leave
or
out
lea
mov
jae
jae
out
icebp
cmp
jge
xchg
adc
stc
and
pop
pop
cmp
dec
(bad)
lds
js
push
pusha
shl
mov
imul
stos
xchg
mov
mov
xor
add
jne
cmps
push
sbb
sbb
rcl
push
dec
sbb
mov
jnp
sbb
or
call
fist
inc
xor
dec
and
call
into
jae
cld
and
repnz
sub
int
fcom
aas
cmp
xchg
es
ins
icebp
cmp
inc
xchg
repz
hlt
mov
popf
les
repz
jne
lods
xchg
test
sti
test
jl
in
mov
jmp
fcmovbe
ja
mov
cmp
push
fisubr
test
outs
(bad)
and
std
xchg
int
inc
test
imul
mov
ret
call
sbb
push
add
pop
sub
je
dec
cli
mov
push
iret
out
jg
xchg
retf
push
mov
rcl
xchg
in
icebp
inc
jmp
push
arpl
jge
fxch
rol
add
pop
cs
ret
ror
cmp
frstor
(bad)
mov
sti
add
add
xor
js
sub
push
jns
aaa
add
push
push
xor
rol
mov
or
imul
iret
pop
dec
sbb
arpl
mov
imul
fidivr
mov
xchg
xor
push
xchg
mov
pop
inc
cld
inc
mov
mov
adc
out
pusha
xchg
repz
or
and
jo
cld
add
inc
daa
in
aam
ret
sub
inc
jg
enter
leave
jmp
cmp
adc
data16
lea
pop
mov
push
pop
or
stos
sbb
mov
je
push
aad
sbb
mov
sub
int
mov
lds
mul
out
popf
stos
add
ins
sub
movs
dec
(bad)
into
sub
ret
retf
mov
ins
sti
mov
xchg
push
xor
iret
jle
scas
pop
mov
sub
cs
mov
cmp
pop
pop
out
in
jo
jmp
test
cmp
cwde
mov
out
xor
popf
leave
jb
pop
imul
fisub
ins
push
dec
ins
loop
arpl
sti
mov
rcr
mov
lea
and
fwait
mov
adc
lds
rcl
add
pop
int3
inc
fild
js
call
mov
and
fmul
sub
ds
jecxz
outs
jle
mov
imul
ja
sbb
xchg
cmp
jnp
shl
mov
std
push
cmp
ret
and
push
retf
pop
and
sbb
ficomp
pop
push
popf
lds
add
jle
xchg
or
(bad)
retf
sbb
das
cmc
je
imul
inc
inc
aas
in
imul
mov
pop
cld
pop
inc
push
mov
shr
stc
lods
mov
push
aas
dec
test
les
shr
inc
pop
pop
add
mov
sbb
enter
fcomi
(bad)
jb
fs
fld
cmp
push
(bad)
mov
mov
pop
(bad)
aad
mov
mov
rcl
add
gs
dec
mov
fwait
repnz
leave
sldt
and
shl
jecxz
mov
push
repz
lahf
int
stc
gs
inc
xlat
sub
jge
leave
mov
out
xchg
pushf
xor
popa
sti
fwait
dec
dec
pop
push
sub
inc
xchg
in
add
add
dec
jns
iret
dec
clc
fst
jle
or
shr
jb
in
int3
jnp
sbb
loopne
mov
sbb
jae
jbe
out
fmul
cmc
popa
lahf
stos
inc
add
jb
xchg
(bad)
stos
fnstcw
jp
mov
sub
pop
les
(bad)
xchg
cmp
movs
test
mov
pop
sbb
cmp
aaa
loope
sub
ror
mov
pop
jmp
inc
into
push
arpl
sbb
popa
ds
icebp
in
sbb
and
push
xchg
push
xlat
pop
xor
cmp
mov
pusha
adc
sub
jb
inc
pushf
adc
call
mov
cmps
mov
retf
in
mov
out
add
dec
ret
pop
fiadd
retf
xchg
sbb
mov
push
push
sbb
sbb
mov
push
outs
test
movs
daa
adc
rol
stc
out
push
fsubr
sbb
pushf
lods
rol
fcmovu
sbb
sbb
hlt
mov
stos
mov
mov
jmp
dec
jg
cdq
ret
les
jle
cmp
fcmovu
shl
push
sbb
pop
lahf
jecxz
pop
and
in
dec
rcr
cmp
iret
(bad)
js
pop
mov
fidivr
loop
push
push
push
cmp
sti
or
mov
mov
cwde
add
xchg
dec
add
or
pshufw
dec
mov
xor
inc
loopne
hlt
mov
dec
cli
mov
jp
push
jbe
cmp
push
mov
add
daa
jp
cmp
sahf
inc
loop
add
cmp
mov
outs
add
addr16
ret
push
(bad)
pop
push
jecxz
sub
loope
and
sbb
dec
fnstenv
push
adc
(bad)
leave
xlat
jl
idiv
inc
ss
bswap
adc
and
addr16
push
or
cwde
mov
dec
xor
(bad)
pop
inc
iret
xchg
and
in
push
daa
(bad)
sbb
clc
mov
or
mov
scas
jl
push
or
test
pop
cmc
scas
push
jmp
lea
pop
xor
and
fistp
addr16
sub
mov
add
mov
inc
or
xchg
pop
and
daa
cwde
fnstenv
js
mov
popf
shr
jmp
clc
sbb
adc
movs
jbe
iret
test
mov
cmp
mov
push
xlat
jmp
rcl
sbb
pop
and
outs
mov
fdiv
les
test
cmps
xlat
inc
mov
inc
out
and
xchg
dec
lods
std
xchg
loopne
jge
out
pusha
aas
ret
sbb
repz
mul
push
imul
fcomp
jg
popf
ja
mov
(bad)
sub
mov
clc
sbb
je
mov
sbb
aaa
pop
adc
rcl
push
ja
call
dec
push
sub
sub
mov
or
push
outs
or
sti
repz
hlt
int
or
push
mov
es
dec
mov
js
xchg
xchg
and
fwait
xor
sbb
fisubr
lock
push
lea
fsubr
xchg
cmp
xchg
cmps
stos
sub
jecxz
mov
jmp
out
cwde
dec
icebp
push
shl
sub
cld
push
and
inc
sahf
mov
test
mov
dec
je
test
shr
adc
into
cmp
pop
mov
retf
aad
and
cs
jns
lods
push
xchg
pop
mov
mov
pop
hlt
jle
sbb
xor
call
into
fwait
in
sti
loop
je
fwait
push
call
inc
or
lock
add
loop
mov
sub
popa
test
jmp
in
sti
call
pop
out
retf
neg
(bad)
and
std
sub
adc
aaa
(bad)
mov
and
daa
lock
jl
fld
enter
sbb
adc
xor
aaa
stos
mov
ds
jae
jae
loop
mov
dec
iretw
pop
mov
test
mov
mov
popa
test
jns
adc
popa
pop
dec
adc
in
mov
out
pushf
lods
nop
leave
in
cmps
pop
movs
or
pop
sti
pop
or
push
imul
jl
add
call
popf
sbb
jns
add
outs
in
ins
jmp
rcl
pop
lock
jnp
mov
adc
pop
jge
xor
das
ins
add
sub
mov
adc
adc
mov
jb
inc
mov
inc
sub
pushf
push
div
mov
pop
add
enter
mov
int3
(bad)
ficom
inc
dec
or
ss
push
in
out
pop
std
xchg
(bad)
in
sbb
inc
or
mov
jmp
cli
repz
aaa
(bad)
in
or
daa
pop
add
xchg
retf
outs
inc
cmp
sub
add
or
test
mov
pop
int3
xchg
mov
add
push
sub
cmp
mov
fld
xchg
mov
inc
pushf
xor
out
outs
in
mov
cli
cld
xor
ins
fadd
aam
xchg
jo
in
js
iret
push
cli
add
aam
pop
jne
cld
pop
push
loope
fisubr
ret
(bad)
mov
out
sbb
or
sub
cmps
fisub
mov
mov
out
xchg
ins
test
dec
(bad)
and
dec
pop
fisub
push
lock
push
mov
sub
sub
test
xor
ret
or
popa
data16
sub
mov
push
(bad)
xchg
sub
and
lods
sbb
clc
enter
ins
popf
pop
lods
xchg
adc
cdq
outs
xchg
test
add
mov
cdq
dec
push
jmp
mov
mov
(bad)
shl
sbb
xor
pop
iret
retf
cmps
into
add
xor
daa
retf
loop
xchg
popf
sbb
ja
mov
out
jnp
jle
push
adc
(bad)
mov
pop
and
call
push
or
test
inc
fbld
pop
lods
pop
arpl
iret
jnp
pusha
aam
shld
jo
stc
and
pop
xor
outs
jp
ficom
(bad)
sbb
fwait
jno
pop
std
cmp
lahf
pop
pop
call
cmp
lods
dec
or
mov
(bad)
out
dec
fnstsw
lea
mov
xor
stos
loope
jmp
retf
jl
test
lock
xor
repz
mov
adc
int
cmp
test
mov
and
add
jg
sub
pop
add
mov
loope
(bad)
fimul
fild
shl
ror
(bad)
cmp
or
fisub
das
lock
cmps
cli
mov
dec
mov
out
lahf
ins
inc
mov
inc
push
jno
leave
in
lds
jo
push
push
fbld
fcom
push
xor
jae
call
bound
mov
pop
jns
xchg
ins
sbb
stc
jmp
and
xchg
mov
mov
hlt
sti
jmp
jl
jnp
pop
rcr
pop
inc
pop
sbb
sub
addr16
xchg
rcr
sub
jnp
sahf
jecxz
sub
lea
daa
sbb
jmp
out
stos
fist
stc
or
rcr
mov
jecxz
pop
push
pushf
leave
push
xor
and
xchg
cmp
(bad)
sub
push
inc
in
jge
inc
aas
aaa
(bad)
lahf
jo
ins
scas
push
jb
jp
adc
sbb
into
lods
cmps
test
push
mov
test
frstor
cdq
jl
aad
mov
push
add
mov
jp
fistp
stc
test
(bad)
lock
clc
pusha
ret
cli
cmp
outs
mov
imul
xchg
scas
mov
mov
shl
mov
jmp
jmp
jg
sbb
push
jo
or
push
dec
mov
rcr
dec
dec
sbb
xchg
jo
or
sar
mov
cmp
and
out
add
jo
dec
mov
dec
or
ins
dec
out
dec
push
mov
push
sbb
add
xchg
push
xchg
sub
or
sub
loopne
cmp
fnstenv
rol
rcr
cld
mov
sbb
adc
fbstp
adc
inc
ins
add
mov
cmp
call
fiadd
dec
imul
fstp
cmp
sub
mov
mov
lods
enter
push
stos
scas
int
jmp
mov
out
dec
call
dec
(bad)
or
mov
push
sub
push
in
sub
(bad)
lock
sub
aad
imul
movs
xchg
jle
dec
jmp
jne
dec
fsub
lock
or
out
inc
add
inc
inc
lahf
arpl
iret
dec
das
mov
pop
pop
dec
or
bnd
hlt
push
test
enter
jmp
gs
ficomp
xchg
loopne
out
mov
or
out
ds
ss
jne
popf
jb
test
adc
pop
push
mov
push
repz
clc
aam
sbb
adc
add
push
inc
sbb
jno
cld
adc
(bad)
mov
jno
in
xchg
dec
or
test
add
fsubr
mov
aam
lahf
mov
or
mov
xor
pop
stc
dec
push
ret
in
cwde
pusha
mov
imul
and
inc
enter
inc
test
movs
mov
cmp
mov
inc
push
push
push
xchg
cli
pop
int3
js
jo
hlt
pop
outs
cld
xchg
ja
push
cmps
iret
pop
push
mov
sbb
dec
sub
or
adc
add
aad
mov
adc
nop
popa
shl
fist
sbb
cmps
aaa
push
mov
iret
(bad)
fwait
or
inc
xchg
stos
inc
mov
bound
pop
bswap
pop
imul
movs
xchg
dec
jecxz
sub
(bad)
cmp
xor
outs
mov
adc
ins
cmp
and
mov
xor
(bad)
scas
pop
addr16
fild
sub
xchg
xchg
or
jae
in
sub
jg
or
out
jg
stc
out
jg
stc
mov
fsub
std
(bad)
call
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
call
cwde
mov
jmp
je
cmp
ficomp
cmps
mov
xor
pop
jns
cmp
cmp
mov
mov
dec
mov
push
xchg
cmp
icebp
stos
ins
and
sahf
lods
ins
inc
fistp
push
test
sub
push
std
cdq
mov
js
xor
mov
sub
mov
scas
jmp
stos
jbe
out
dec
inc
adc
push
sbb
mov
ds
mov
push
and
xor
add
adc
(bad)
call
xchg
mov
(bad)
jb
je
dec
cmp
imul
add
sub
lock
jno
movs
or
jo
sbb
cli
ins
mov
sub
mov
mov
ret
cmp
inc
jmp
sbb
mov
cwde
aas
mov
fstp
jbe
jp
mov
dec
fst
dec
pop
loope
sbb
stos
cmp
pop
iret
shl
cmc
jmp
jb
mov
loope
adc
jb
bound
cmp
mov
imul
xor
push
repnz
imul
add
dec
jle
and
push
pushf
sbb
and
push
je
test
jae
sbb
sbb
cmp
inc
movs
sar
and
ret
xor
fs
cmp
xchg
lods
jecxz
cld
pop
stos
push
push
mov
mov
lods
out
inc
mov
push
stc
pushf
mov
lods
mov
sbb
jns
out
neg
int3
and
push
nop
ins
and
jg
leave
or
pop
leave
ret
fdivr
test
(bad)
and
push
pop
push
inc
(bad)
dec
clc
aas
in
jmp
pop
pop
or
jnp
in
push
jge
aas
pop
nop
shl
push
adc
inc
in
inc
sti
jb
sahf
test
add
cmp
push
sbb
popf
cmp
or
sahf
sti
xchg
popf
mov
pop
sub
sbb
adc
jmp
mov
pop
mov
nop
outs
test
cdq
pop
inc
icebp
lahf
jbe
cmp
sub
dec
dec
cmps
cli
ins
not
out
pop
dec
sub
add
lds
cli
cld
out
cmp
pop
push
retf
cmp
(bad)
mov
add
or
popf
rcl
ins
rcl
add
imul
pop
out
lds
sbb
scas
push
jg
jns
scas
je
and
mov
jnp
add
mov
std
jle
lock
add
mov
or
popa
cdq
test
das
mov
fsubr
add
sbb
lock
mov
retf
jae
jl
loopne
(bad)
cwde
xchg
xchg
add
stc
fsubr
mov
push
mov
inc
cmc
js
adc
bound
jl
scas
ss
mov
mov
popf
iret
jge
adc
mov
add
mov
repz
xchg
add
fisubr
mov
daa
js
xchg
push
xlat
les
cmp
inc
dec
lahf
jmp
dec
inc
aas
adc
xchg
mov
inc
mov
push
cmp
lahf
adc
fcom
leave
mov
test
and
repz
push
in
test
push
jne
and
or
scas
clc
mov
xchg
arpl
int
jp
xchg
fcom
fnstsw
and
mov
out
and
push
sub
mov
dec
ret
and
rol
mov
movs
xchg
dec
mov
(bad)
dec
mov
dec
or
xchg
retf
ret
sbb
(bad)
hlt
out
add
cmps
xor
sbb
leave
popf
sbb
enter
jnp
dec
sti
das
mov
out
dec
jp
mov
pop
push
jne
pop
inc
sbb
xor
push
pop
mov
fwait
stc
and
inc
inc
rcr
pusha
int3
cmps
aas
pop
jns
dec
cdq
pop
imul
xchg
cdq
jmp
push
mov
out
inc
and
xor
mov
push
fcmovu
shr
je
cwde
push
mov
fs
jb
test
adc
ror
es
js
jo
mov
repnz
mov
call
and
cmp
das
mov
and
pop
sub
or
inc
mov
cmps
ror
mov
shr
and
and
xor
mov
add
sbb
sbb
mov
retf
cmps
push
(bad)
aad
(bad)
fldcw
call
nop
fistp
xchg
xchg
inc
retf
std
dec
cmp
sbb
retf
pop
push
and
pop
daa
inc
push
jl
jp
jmp
jle
ja
push
or
test
jmp
enter
dec
jno
or
test
mov
repz
fist
hlt
das
pop
add
int
xchg
popf
std
test
or
jns
pop
and
xor
xchg
cmp
sbb
(bad)
lods
dec
ins
push
mov
cld
mov
mov
mov
icebp
and
pushf
les
fld
aad
in
mov
jg
add
mov
dec
push
pusha
ds
icebp
push
cmp
jl
test
pop
pop
lock
xchg
ins
mov
push
push
sub
cmc
jg
xor
xchg
std
test
xlat
dec
aaa
adc
data16
pop
mov
push
sar
pop
daa
fcom
popf
or
test
(bad)
fisub
test
xchg
call
leave
mov
cmp
leave
pop
pop
movs
out
add
jne
mov
inc
push
in
xor
push
jne
wrmsr
push
pop
push
lds
pushf
add
push
dec
data16
(bad)
retf
and
add
jmp
rcr
sti
gs
dec
sbb
cs
out
test
sub
xor
cmp
std
mov
jne
js
sbb
sbb
xchg
(bad)
outs
pop
movhps
pop
adc
mov
fwait
std
bound
jo
outs
jb
lods
inc
jle
cld
les
mov
addr16
push
cmp
arpl
mov
bound
loope
mov
fiadd
mov
fcomp
scas
inc
cmc
dec
mov
sub
dec
push
lahf
sub
mov
scas
clc
jecxz
test
inc
mov
test
ffree
mov
std
fstp
inc
pop
jns
sub
adc
icebp
mov
dec
cdq
and
jge
out
dec
pop
repnz
push
jp
xchg
xchg
xchg
mov
or
mul
je
(bad)
fwait
cmp
xor
popf
dec
movs
xlat
adc
mov
inc
mov
sbb
cmp
loop
jns
retf
outs
(bad)
mov
xor
xor
adc
inc
sbb
or
ror
cmp
in
mov
and
inc
push
stc
loop
ficom
cmps
mov
xor
mov
dec
or
jbe
add
call
sbb
jmp
or
pop
in
sub
imul
mov
bound
and
sbb
mov
add
(bad)
aad
sti
imul
jg
ins
scas
or
cmp
data16
stc
(bad)
cdq
sbb
rcl
out
pop
cmps
(bad)
push
or
xchg
cmp
mov
cmp
cmp
sub
mov
cmp
pop
stos
out
mov
pop
enter
pop
loopne
fnsave
push
sbb
hlt
jae
iret
loopne
lock
and
sbb
sub
outs
out
adc
mov
sub
and
cmp
movs
lods
in
jg
mov
adc
mov
xchg
shl
fucomi
push
xor
jo
or
hlt
mov
mov
push
sub
sub
cmp
push
test
mov
sub
mov
enter
mov
lods
jmp
or
sub
inc
push
dec
and
shl
repz
mov
les
or
mov
add
movs
xor
pushf
mov
fstp
(bad)
mov
popf
inc
mov
dec
mov
(bad)
hlt
dec
xchg
fadd
pop
dec
xor
adc
loop
cli
sti
xchg
xchg
in
cmp
jmp
inc
xchg
outs
jno
(bad)
into
or
push
int3
ja
lods
jecxz
out
fidivr
ja
pop
outs
mov
fxam
cmp
pop
inc
(bad)
in
in
cmp
mov
(bad)
pop
call
sub
retf
push
xor
imul
neg
mov
sbb
sbb
inc
inc
call
ss
ja
adc
(bad)
and
mov
adc
cmp
xor
loope
mov
adc
shl
cld
xchg
jb
call
adc
ret
or
call
xchg
retf
push
sbb
(bad)
loop
jge
fist
pop
mov
mov
lods
fcmovnu
out
sbb
xchg
jg
sub
jmp
and
retf
pop
sub
(bad)
enter
retf
movs
xor
inc
jmp
ds
sub
retf
or
rcl
call
add
adc
fidivr
xchg
or
sbb
enter
add
inc
pop
shl
sbb
xor
lock
lea
and
push
ja
sub
jmp
mov
mov
movs
xor
push
adc
inc
test
xlat
jle
(bad)
fist
ret
mov
call
aas
test
push
lods
add
cmps
mov
in
jo
jge
mov
inc
push
js
jmp
cmp
push
xlat
ja
lods
mov
mov
dec
inc
or
pusha
sbb
xor
pop
or
(bad)
(bad)
jmp
sbb
jmp
rol
or
pusha
mov
or
push
cmp
movs
sbb
mov
pop
stc
pop
sbb
(bad)
(bad)
and
pop
fbld
push
adc
ins
fcmovbe
mov
pop
ficomp
loop
js
mov
sub
inc
cmps
test
or
out
fwait
dec
daa
mov
sub
pusha
jno
int3
les
cwde
in
mov
fcmovnu
push
sbb
adc
outs
push
mov
inc
sbb
fdivp
and
ins
test
cs
xor
add
(bad)
ret
ror
or
push
cmps
xchg
out
std
add
push
popa
imul
xchg
and
inc
aad
or
loope
jb
pop
sbb
out
cdq
xlat
lea
or
sbb
sbb
sbb
sbb
out
dec
arpl
(bad)
push
jp
or
cli
inc
xchg
aam
sub
repnz
daa
xchg
push
jg
jmp
in
adc
rol
inc
add
outs
mov
jecxz
jbe
dec
xchg
dec
sbb
scas
dec
sti
push
push
adc
addr16
adc
in
sbb
xchg
stc
mov
cmp
pop
jmp
push
sar
push
push
(bad)
cli
xor
pop
ds
jmp
mov
jge
mov
or
xchg
xor
mov
call
lds
xchg
pop
mov
ins
pop
sti
push
rol
pop
push
lea
mov
sti
(bad)
std
mov
mov
sti
push
or
and
jmp
sbb
or
std
cmp
pop
pop
(bad)
sub
leave
mov
ror
(bad)
push
mov
sbb
mov
or
aas
inc
arpl
rcr
cld
aad
mov
leave
(bad)
retf
es
jne
leave
or
std
xchg
mov
jbe
pop
cmp
mov
cmp
sbb
mov
daa
mov
bsf
bound
add
sbb
jg
jnp
jae
test
rcl
retf
je
xchg
or
xchg
lds
cld
in
mov
cmp
(bad)
scas
jl
mov
pop
sahf
sbb
push
xor
mov
adc
cs
or
rcl
pop
call
dec
cmp
add
xchg
fldenv
data16
mov
ins
ins
cmp
clc
mov
adc
mov
lds
fimul
or
xor
fistp
sbb
xchg
cmps
cmp
cwde
mul
jbe
xor
mov
test
stc
fldenv
sub
sub
adc
mov
stos
pusha
cmp
mov
in
lock
xchg
test
test
adc
jmp
bound
je
jno
xor
xchg
mov
mov
push
mov
pop
mov
mov
jp
aaa
sbb
mov
cmp
adc
push
push
push
xor
(bad)
xchg
lods
test
in
cmp
pop
and
daa
sbb
jo
xor
scas
push
sub
jnp
aam
in
mov
adc
sbb
cmp
xor
push
pop
jl
aas
add
into
mov
aas
adc
adc
xlat
lods
dec
xlat
mov
push
sbb
fisttp
imul
jp
or
push
push
mov
mov
mov
mov
int3
push
fdiv
mov
aad
or
jo
and
sbb
mov
sti
cli
aad
pop
loope
add
fadd
mov
(bad)
aam
les
jns
lods
mov
das
pusha
sbb
sub
test
fidiv
movs
xchg
fdiv
call
push
xor
pop
xchg
aam
xchg
pop
mov
stc
jne
pop
pop
sti
pop
rol
rcr
jecxz
movs
sub
pop
mov
mov
jge
xor
movs
aam
mov
movs
shl
aad
fs
xor
stos
in
push
sbb
pop
js
sbb
mov
int
sar
popa
icebp
movs
loopne
add
(bad)
jnp
pop
push
mov
dec
popa
adc
int3
xchg
inc
dec
and
add
scas
iret
mov
xchg
sti
cld
jg
add
mov
xchg
inc
or
jns
iret
jns
inc
hlt
cwde
sub
ja
ret
imul
jmp
out
and
outs
(bad)
icebp
dec
sub
inc
sbb
jo
and
xchg
leave
fdivp
add
mov
test
leave
inc
nop
jmp
movs
cmovno
arpl
sti
push
in
cmc
cmp
xor
add
sbb
jns
pusha
mov
dec
shl
(bad)
je
inc
sub
and
aaa
jne
pushf
jns
adc
sub
mov
sbb
xchg
xchg
inc
fnsave
xchg
out
jae
mov
je
(bad)
in
mov
movs
pushf
jns
es
ins
(bad)
mov
cli
fs
xchg
fwait
or
push
xchg
xor
outs
sub
shr
and
cs
aad
out
xor
outs
jno
pop
sbb
sub
or
add
leave
cld
sar
not
test
push
mov
into
out
sbb
int
xor
in
fisttp
iret
(bad)
mov
or
and
push
mov
push
xchg
mov
add
fcom
cmp
les
fst
jp
mov
sbb
lods
inc
addr16
and
inc
xor
inc
imul
cmp
inc
xor
push
mov
xchg
jge
pop
push
fs
mov
or
add
and
repnz
dec
inc
inc
add
xchg
xor
mov
add
test
cmps
xor
leave
jbe
movs
inc
add
imul
and
stos
sbb
pop
push
sub
sbb
hlt
dec
adc
test
outs
jmp
mov
out
(bad)
hlt
fsubr
aas
sti
popa
outs
aaa
fistp
mov
inc
out
ja
mov
push
jmp
cmc
push
div
mov
js
imul
(bad)
push
mov
sahf
inc
test
daa
pop
in
and
clc
out
jg
stc
out
jg
stc
mov
pop
cld
out
aad
fld
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
cmp
xor
xor
(bad)
ss
pushf
mov
push
jae
fwait
jmp
popa
ficomp
pop
in
repz
fld
xor
mov
xchg
mov
das
bound
sub
int
shr
xor
push
push
fs
pushf
imul
push
mov
sbb
add
addr16
sahf
xchg
pop
inc
or
cmc
xor
and
mov
xor
fdiv
mov
pushf
imul
jmp
ds
ins
and
xchg
sbb
ins
into
ja
cmp
lock
mov
sar
and
add
ja
pop
mov
cmp
mov
mov
(bad)
dec
mov
adc
push
call
adc
push
sbb
out
pop
les
mov
adc
movs
pop
jns
add
add
shl
mov
mov
bound
dec
(bad)
(bad)
clc
scas
fcom
loopne
push
sub
xchg
mov
clc
aad
mov
gs
mov
imul
xchg
mov
inc
sysret
push
loopne
pop
mov
ss
mov
aad
jnp
jbe
dec
aad
sbb
bound
xor
mov
test
mov
loopne
lock
xor
test
inc
stos
mov
mov
(bad)
lock
dec
pop
cmps
ins
les
in
and
lds
inc
(bad)
push
xchg
xchg
mov
pop
xlat
cli
ret
(bad)
cdq
jmp
div
into
xchg
or
xlat
inc
imul
rcl
pop
mov
mov
and
out
out
mov
nop
cs
mov
mov
mov
inc
pushf
cld
call
aad
push
ret
mov
push
mov
push
scas
imul
cmp
enter
push
cli
les
push
mov
mov
inc
xchg
push
and
sub
fsubr
mov
jo
aaa
cmp
cwde
pushf
popa
sbb
pop
sti
movs
out
leave
mov
push
push
icebp
or
out
daa
or
js
call
(bad)
lahf
repnz
mov
push
adc
outs
xchg
cmps
mov
loope
push
cmp
or
mov
or
and
and
push
dec
mov
mov
(bad)
out
mov
in
mov
imul
push
lock
fiadd
sbb
aad
sub
dec
fldcw
adc
cmp
dec
icebp
sbb
jp
or
retf
xchg
mov
call
out
xor
sbb
leave
scas
or
mov
xor
sbb
ja
popa
rol
and
pop
push
xor
shl
xchg
xchg
int3
in
dec
push
jnp
aas
push
sbb
pop
xor
clc
inc
ss
mov
push
pop
lahf
sbb
mov
mov
pop
push
mov
cwde
pop
add
dec
lds
push
bound
std
cmp
sbb
xchg
adc
(bad)
pop
(bad)
mov
cmps
call
movs
cmc
sar
xor
cmp
pop
push
push
xlat
push
lds
scas
popa
sub
cmp
(bad)
div
(bad)
push
xchg
pop
sti
mov
call
sbb
retf
ins
mov
scas
fimul
push
jae
mov
xchg
sahf
sbb
sub
pop
jnp
xchg
adc
cmc
jo
fcmovne
sub
sbb
iret
call
adc
movs
xchg
stc
push
and
mov
iret
inc
loop
sbb
push
or
fimul
stos
ficomp
or
repz
ja
add
loop
mov
xor
xchg
mov
idiv
xor
jecxz
inc
popa
xchg
xor
mov
test
fst
xchg
loop
xchg
push
mov
xchg
push
je
ss
stc
fdivr
adc
pusha
pop
aam
mov
jle
pop
xchg
aad
push
adc
punpckldq
jno
fistp
ror
arpl
int
push
inc
mov
je
into
jmp
push
ret
mov
and
xchg
dec
sbb
(bad)
dec
leave
hlt
or
(bad)
aas
pop
hlt
jbe
or
add
sbb
mov
ss
jne
fwait
push
fisttp
push
inc
in
adc
out
add
cld
addr16
jp
dec
icebp
push
pop
xchg
ret
pop
dec
scas
cs
or
arpl
add
cmp
sbb
cmp
lahf
mov
mov
inc
(bad)
sbb
sub
jb
clc
mov
scas
xor
jmp
cmps
pop
fdivr
clc
sbb
sbb
jmp
fsub
xor
rol
ror
inc
sub
aam
fcom
and
dec
adc
xchg
ret
mov
into
xor
push
or
pop
xchg
mov
pop
pop
aaa
mov
xor
and
mov
pop
jae
pop
xlat
and
adc
mov
test
int
or
in
mov
push
cmp
daa
fwait
mov
mov
sub
add
ror
cmp
fwait
lahf
lea
or
mov
cmc
xchg
sbb
push
jne
outs
repz
add
fsubr
adc
pop
(bad)
mov
ret
jmp
or
push
rol
out
in
pop
adc
or
(bad)
fstp
lods
pop
cmps
xlat
lahf
push
sbb
adc
pop
fidivr
in
xor
pop
(bad)
xlat
or
sbb
arpl
in
stos
push
call
push
leave
sbb
(bad)
mov
adc
dec
and
xchg
fsubr
mov
call
cmps
fcomp
xchg
mov
out
mov
or
jecxz
jmp
push
xor
enter
inc
mov
push
aas
mov
stos
pushf
mov
mov
inc
ror
jnp
mov
outs
pop
es
dec
psrad
mov
cmps
sub
cmc
cmp
iret
cs
out
mov
xchg
jg
sbb
mov
add
cmp
adc
ins
test
cmp
pushf
fstp
bnd
hlt
or
cmp
gs
pop
out
popf
mov
fs
in
push
push
cmp
push
lock
mov
cmc
inc
movzx
mov
xchg
fdivr
sub
and
clc
in
loop
xchg
mov
jb
dec
jg
nop
je
cli
movs
push
jge
int3
stos
pop
pop
pop
fnstenv
out
fs
cld
stc
imul
pop
cmp
(bad)
or
int
inc
in
and
and
sbb
jnp
cmp
jg
(bad)
int3
ror
ficom
xchg
adc
inc
mov
fisub
mov
pusha
mov
mov
rcr
lea
stos
rol
das
loopne
scas
call
test
sub
cli
jae
mov
clc
dec
in
pop
pop
pop
xchg
add
ins
daa
jae
mov
aas
repz
mov
es
iret
mov
(bad)
in
ret
in
les
out
xor
xchg
das
jle
out
xchg
cmp
jns
ror
adc
cmp
retf
movs
xlat
dec
xor
mov
push
fst
add
mov
jae
ja
adc
lods
iret
arpl
imul
outs
sub
mov
test
lds
pop
ds
ja
ds
jne
cwde
aas
adc
repz
sub
mov
and
mov
xor
push
(bad)
loope
cwde
jns
mov
(bad)
or
imul
xor
ror
add
sbb
test
shl
gs
rcl
lods
xchg
push
xor
dec
mov
pop
mov
cmp
mov
cmps
dec
ror
mov
inc
jmp
sub
fcomip
jb
les
jge
sbb
sbb
leave
jne
scas
fwait
scas
sbb
xor
adc
mov
jo
psllq
(bad)
xlat
jp
cwde
push
addr16
mov
adc
pushf
repz
lea
mov
mov
jl
fs
movs
je
bound
rol
adc
hlt
fcmovnbe
jl
enter
pop
test
test
es
ror
pop
into
pop
mov
push
mov
jmp
data16
repz
bnd
and
cmp
loop
add
xchg
sub
xchg
inc
sub
sub
push
adc
dec
repz
and
xchg
xor
idiv
mul
cdq
push
ds
add
mov
movs
cld
add
jmp
leave
add
dec
(bad)
push
lods
mov
fimul
sahf
jecxz
xchg
fnstenv
inc
mov
sbb
xchg
inc
jne
adc
lds
jp
scas
arpl
scas
pop
add
jns
das
lods
jno
mov
pop
sub
shl
pop
into
sbb
mov
dec
(bad)
push
fsub
sbb
mov
inc
test
push
mov
out
icebp
xor
add
mov
pop
int
mov
xor
aas
rcl
and
add
push
or
ins
and
dec
fisttp
adc
jg
push
ret
lds
push
add
lock
push
inc
and
retf
popf
inc
popf
dec
popf
fcom
mov
scas
fstp
and
stos
sbb
push
or
xor
(bad)
jbe
mov
punpckhwd
jnp
lahf
xor
je
mov
inc
xor
pushf
test
sub
ficom
pushf
mov
popa
stos
repnz
lahf
into
inc
cdq
mov
lds
pushf
and
pop
push
dec
(bad)
cmp
cmp
and
xchg
rcr
das
das
out
dec
xor
xchg
cmp
and
std
or
mov
xlat
mov
sub
jmp
in
adc
or
and
and
or
sbb
inc
rcl
rol
aad
adc
aad
test
mov
(bad)
cmc
ret
int
lock
cdq
das
les
jmp
js
sub
les
mov
popa
hlt
clc
ds
rcr
push
jg
mov
pop
xor
dec
sar
ins
jl
mov
bound
mov
fidivr
in
std
stos
mov
mov
rep
ss
out
pop
shr
jge
arpl
arpl
add
scas
setge
xchg
sub
cmp
stc
in
pop
out
retf
add
stos
jecxz
ror
in
arpl
mov
in
sub
(bad)
cmp
scas
call
sti
dec
xchg
fst
mov
push
push
mov
mov
pop
loope
mov
push
sub
inc
or
test
jmp
call
sbb
cmps
push
sub
hlt
cmp
repnz
int3
lahf
je
dec
in
sub
xlat
pop
pop
mov
out
pop
sub
mov
mov
div
into
jecxz
inc
mov
adc
cs
xchg
cmp
(bad)
ins
jo
rcr
pop
mov
call
shl
je
std
(bad)
cld
repnz
hlt
ss
in
inc
mov
test
cmp
je
xchg
adc
icebp
in
call
(bad)
out
mov
xchg
jno
cdq
rol
das
shl
cli
sbb
scas
fld
jo
xor
mov
pop
jae
icebp
sbb
fcmovu
cmc
ins
out
dec
jp
imul
retf
arpl
inc
scas
dec
int
pop
push
fnstsw
dec
xchg
mov
sub
dec
popa
inc
and
mov
push
inc
cmp
add
aaa
fs
xchg
pop
out
inc
cmp
or
mov
xor
dec
sub
clc
outs
inc
cdq
jnp
sub
mov
and
int3
add
xlat
dec
dec
rol
cmp
and
and
cs
stos
mov
jmp
cmps
inc
loop
and
test
scas
mov
imul
adc
xor
shl
imul
jbe
scas
inc
mov
(bad)
ds
imul
aas
jb
ja
inc
dec
(bad)
mov
cmps
or
mov
and
fs
jo
push
outs
pushf
hlt
inc
ins
fsubr
push
in
daa
call
mov
les
sub
push
sar
scas
retf
jecxz
cmp
in
cmps
cli
iret
ds
xor
and
daa
sbb
movs
mov
fcom
cmps
adc
inc
fisttp
scas
jmp
ss
rol
jmp
rcl
mov
mov
mov
mov
push
xchg
jb
push
imul
loopne
push
stos
mov
call
inc
pop
jmp
pop
jbe
xor
xchg
pushf
and
sub
nop
arpl
or
repnz
ret
xor
shr
add
cdq
sub
jns
inc
xchg
sub
jecxz
call
retf
into
or
push
push
xlat
stos
mov
sti
jle
retf
mov
pop
inc
or
mov
push
and
jbe
mov
stos
mov
push
sbb
mov
sti
iret
repnz
out
cmc
movs
test
mov
dec
mov
add
mov
push
ins
ins
push
mov
enter
sbb
sub
push
(bad)
mov
outs
ja
fistp
mov
(bad)
fld
xchg
pop
ds
mov
xor
mov
jno
sub
adc
bound
daa
outs
cdq
pushf
imul
add
xchg
scas
mov
add
sub
ficom
mov
ins
movs
outs
clc
imul
aam
lods
or
call
sahf
popa
and
arpl
and
mov
and
lods
inc
adc
mov
les
sbb
mov
scas
movs
sbb
iret
std
jns
sbb
clc
sub
sub
fnstenv
popf
aad
push
mov
(bad)
push
not
mov
jmp
daa
loopne
pop
in
arpl
dec
jl
enter
add
jo
cmp
pop
nop
es
lea
inc
mov
dec
or
into
push
or
stos
sub
or
ins
aad
fadd
mov
jl
ror
cdq
jle
cmc
(bad)
cmp
stos
push
sbb
js
or
imul
and
in
repz
ret
out
sahf
jmp
sub
sbb
xlat
lods
movs
push
stos
sbb
or
push
push
mov
(bad)
ficomp
mov
sub
icebp
dec
xor
frstor
jmp
int3
stos
xor
in
cmp
mov
retfw
lock
or
cmp
lahf
out
sbb
les
push
iret
clc
jmp
push
(bad)
clc
inc
inc
add
adc
retf
sbb
sbb
adc
movs
out
aaa
push
es
cmps
xor
cmp
xchg
int
lods
fwait
fwait
cmps
stos
dec
inc
es
mov
xchg
adc
stc
ss
cmp
pop
jle
jns
fistp
cmp
adc
add
lods
adc
inc
pop
jnp
cmc
xchg
hlt
push
js
int
(bad)
shr
jg
or
and
in
call
add
cld
or
imul
in
cmp
pop
mov
test
mov
push
or
add
xchg
sbb
cmp
mov
xor
fisub
in
in
or
ja
push
lods
test
jbe
mov
mov
jnp
hlt
fnsave
jge
inc
loope
imul
fidivr
in
jl
sub
ins
mov
int3
dec
inc
pop
pop
jo
mov
les
nop
mov
and
adc
nop
ja
push
and
pop
not
xor
xchg
ds
and
mov
jge
adc
(bad)
and
test
cmps
outs
pop
pop
push
(bad)
lds
pop
mov
(bad)
movs
fbld
dec
jle
outs
inc
test
rol
cmp
cmps
rcr
adc
mov
imul
out
les
in
or
or
sbb
lahf
jnp
jmp
xchg
sar
mov
fwait
cmovbe
sar
cld
repz
aas
(bad)
cld
repz
push
pop
in
xlat
jns
inc
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmp
rcl
popf
adc
jno
dec
into
jmp
(bad)
je
(bad)
popf
das
mov
cmp
fcomi
add
test
jge
or
or
mov
aas
test
ret
bound
mov
fisttp
mov
nop
nop
and
in
jmp
popa
mov
out
aas
inc
cli
aas
mov
cli
cmp
adc
cmps
bound
popa
int3
fwait
test
cli
test
fwait
pop
imul
(bad)
pop
in
dec
das
lock
popa
bound
mov
xor
sbb
jae
and
mov
push
xchg
movs
dec
test
sub
adc
fdivr
pop
fwait
sbb
inc
call
adc
jp
stos
push
fcom
adc
(bad)
pop
adc
jo
and
adc
movs
jmp
jge
jge
mov
cmps
mov
mov
popf
movs
sti
push
xor
fs
push
mov
loope
push
lods
pop
enter
retf
mov
(bad)
fdivr
test
sbb
and
(bad)
cmc
ror
test
inc
pusha
into
movs
fsub
inc
xor
jo
and
mov
inc
scas
fild
xor
aaa
sbb
or
add
std
call
jnp
dec
loope
ret
xchg
ds
jae
gs
aas
inc
sar
mov
push
mov
adc
mov
xchg
enter
ins
in
xchg
adc
adc
loopne
fdivr
and
cdq
or
xor
popa
push
popf
shl
div
aas
je
fwait
push
cwde
cs
mov
sar
inc
sub
jmp
mov
sbb
xchg
inc
repnz
and
aad
cmp
mov
jge
xor
(bad)
sbb
cli
jge
adc
push
pushf
jge
jl
mov
xchg
pushf
icebp
push
neg
into
test
scas
test
dec
or
or
xchg
sub
add
mov
movs
(bad)
jge
mov
test
rcl
ds
jne
addr16
imul
aas
cmp
ror
and
sbb
int
fcmovu
pop
and
pop
mov
bound
in
test
pusha
pusha
pop
adc
xchg
and
mov
jle
mov
push
jnp
aas
push
pop
xchg
cmc
dec
mov
stos
loop
and
mov
repz
mov
fcomp
cli
loopne
bound
(bad)
ja
mov
fcomi
hlt
xor
je
sbb
aam
movs
mov
lds
stos
aad
push
or
jge
and
out
repnz
fsin
aam
test
pop
cli
sbb
xchg
loop
sub
jg
enter
inc
push
sti
(bad)
(bad)
outs
push
or
daa
stos
add
das
(bad)
jno
and
xor
popa
fwait
(bad)
cmp
(bad)
cld
jno
ret
sbb
mov
aas
push
push
(bad)
movs
sbb
stos
movs
xor
xchg
das
in
and
xchg
stos
icebp
mov
cmp
clc
frstor
call
jb
sub
out
or
test
cld
inc
pop
mov
and
hlt
(bad)
mov
jne
ror
jb
adc
mov
cmp
dec
pop
jb
inc
sub
mov
adc
outs
fsubp
es
cmc
pop
(bad)
ss
cli
ret
sbb
xchg
out
mov
mov
lods
mov
iret
idiv
test
push
mov
or
inc
dec
clc
sbb
das
xor
into
mov
in
ret
call
adc
aaa
rol
xchg
fld
jae
aas
imul
push
das
imul
lds
sbb
push
dec
div
test
call
push
sub
xchg
add
dec
jl
call
popf
aaa
dec
push
mov
adc
sbb
loopne
pop
push
mov
add
sbb
mov
cmp
xchg
mov
sbb
adc
rol
loopne
mov
rcl
int
inc
aam
shl
loop
cld
repz
inc
add
mul
repnz
stos
push
add
push
out
xlat
data16
ss
add
fdiv
imul
mov
mov
sahf
das
scas
mul
jl
or
jno
retf
addr16
jmp
ins
dec
cmps
add
pop
sar
les
js
sbb
jle
mov
push
jmp
xchg
inc
pop
push
ins
test
inc
mul
fld
aas
push
adc
push
popf
call
pop
aaa
nop
bsr
das
xchg
push
stos
inc
mov
pop
mov
pop
adc
test
mov
aad
sbb
les
enter
(bad)
scas
mov
add
sbb
jne
jmp
mov
cmp
cmp
mov
sub
mov
lea
jb
fdivrp
and
sub
pop
or
out
int3
pop
sub
ret
xor
call
add
xor
movs
inc
inc
imul
xchg
pop
frstor
test
mov
gs
xlat
inc
cmc
dec
xor
jno
loop
jge
pop
retf
movs
and
loopne
jecxz
pusha
fist
or
jb
ins
xchg
retf
aad
push
mov
add
clc
cmp
das
lahf
call
popf
mov
fcomp
ror
add
push
dec
ret
cmp
xchg
loop
ja
out
xchg
(bad)
test
ja
dec
mov
mov
ret
adc
dec
jnp
dec
mov
mov
call
out
push
test
adc
out
cmp
sub
jmp
outs
das
js
fsubr
push
clc
push
out
or
rcl
scas
push
mov
xor
or
mov
mov
sub
retf
outs
push
xchg
fbld
jmp
call
xor
jl
iret
retf
les
sbb
inc
jb
push
cmps
xor
test
jp
aaa
mov
ret
and
jge
fsubr
lea
lds
sbb
xchg
jbe
outs
outs
fs
dec
cmp
xchg
aaa
lock
or
js
sbb
mov
mov
(bad)
shr
mov
iret
dec
int3
jecxz
retf
mov
sbb
add
xchg
xchg
mov
cmp
pop
push
mov
mov
push
mov
push
int
(bad)
cmps
adc
gs
xlat
sbb
mov
xor
cmp
mov
jnp
or
int3
cmc
mov
dec
lods
adc
mov
int3
aad
pop
je
xor
mov
fidiv
mov
mov
hlt
scas
xchg
xor
inc
jg
(bad)
lea
sub
mov
ss
sar
mov
das
push
add
bound
sbb
sub
add
ins
sub
mov
ins
jl
xchg
and
jb
aad
xchg
jae
repz
movs
mov
push
mov
jl
gs
jo
lds
aaa
add
jge
scas
mov
imul
mov
xchg
mov
inc
mov
movs
push
cmp
lods
mov
je
fdiv
lahf
cwde
push
add
ss
xchg
jns
leave
and
ds
hlt
and
cmc
scas
sub
dec
cmp
daa
adc
cdq
jge
dec
mov
xchg
not
pusha
adc
mov
lahf
push
dec
mov
xchg
in
jbe
dec
adc
inc
int3
cmp
mov
daa
jno
int
xor
leave
jmp
lds
out
jae
dec
add
mov
icebp
pop
hlt
imul
repz
sub
loopne
jle
sub
mov
xor
fwait
cmps
sbb
cs
mov
push
sub
cdq
fldenv
fcmove
lods
into
(bad)
xor
in
sub
lds
jge
xchg
adc
mov
pop
std
imul
test
jmp
enter
cmc
mov
mov
sub
shr
gs
popa
out
les
sar
jmp
js
icebp
fld
xlat
dec
cmp
repz
ins
push
sahf
xchg
and
sbb
mov
gs
fucomp
pop
sbb
push
cdq
clc
inc
scas
loop
and
dec
dec
mov
stc
push
and
xchg
cmp
lahf
cmc
popf
and
add
pop
daa
jns
into
scas
or
mov
xchg
test
or
into
enter
jge
sub
cmp
pop
mov
stc
push
or
ins
sub
pop
leave
cmp
inc
idiv
fs
sbb
jnp
rol
or
vpor
xor
and
ds
movs
dec
mov
push
and
scas
cmps
add
sbb
pusha
popa
adc
jo
rol
loop
xor
mov
addr16
dec
fild
mov
push
xchg
fiadd
push
bound
inc
pusha
inc
jb
sbb
sbb
jbe
xchg
in
mov
int
push
clc
call
std
or
out
jge
call
cmp
dec
fsubr
fisubr
inc
mov
sti
and
pop
dec
sub
fstp
pop
pop
in
test
stos
push
inc
push
sub
shl
jl
dec
out
(bad)
xor
lods
inc
test
loopne
fldenv
sub
ja
loopne
or
add
popa
xchg
bnd
jb
dec
pop
inc
xchg
mov
ret
lahf
sbb
movs
lahf
and
es
(bad)
nop
pushf
pop
and
pop
ja
pop
lods
test
in
movs
inc
iret
fild
add
fyl2xp1
pop
sub
ret
push
mov
sub
fwait
mov
fisttp
stc
cmp
das
retf
stos
cwde
fistp
jmp
sub
push
push
hlt
nop
inc
or
jecxz
pop
mov
push
or
test
stos
and
(bad)
shl
sub
jne
iret
dec
pop
lods
jno
mov
or
or
mov
ror
out
lods
fimul
repz
inc
shl
sbb
xchg
aaa
pushf
test
inc
in
(bad)
xlat
mov
movs
les
in
and
test
fcomi
sub
dec
xor
and
pushf
out
sub
sbb
xchg
in
push
frstor
sub
jns
jp
sbb
adc
rol
rol
mov
addr16
sbb
add
adc
dec
movs
jo
xlat
pop
adc
mov
pop
xlat
or
lock
sub
mov
push
sbb
sub
sbb
and
inc
mov
jne
mov
pusha
jl
cld
pop
jae
mov
push
adc
sbb
add
jnp
xchg
shl
iret
pop
jmp
sbb
lock
ss
push
pop
(bad)
outs
lahf
mov
inc
shl
cmp
jns
inc
stos
pusha
div
call
or
pop
lahf
rcl
es
dec
leave
add
in
enter
sub
iretw
mov
and
clc
dec
push
jo
inc
cwde
mov
shr
sahf
mov
and
mov
xchg
push
push
inc
sbb
daa
fldenv
les
push
scas
push
int
dec
pop
mov
sbb
push
(bad)
cmps
dec
lea
lock
cmp
cmc
push
push
cwde
cmp
sahf
sub
adc
push
sub
test
sbb
pop
mov
adc
and
inc
add
out
xchg
repnz
cli
test
lahf
cmp
xchg
test
and
jp
sbb
outs
aad
pop
in
xchg
cmp
test
in
mov
rcr
add
js
jbe
xlat
clc
sbb
push
mov
add
mov
jno
movs
sub
addr16
out
ds
lods
ret
dec
lods
pop
and
or
leave
in
sub
lahf
push
xor
pop
pop
stos
add
xor
mov
pusha
rol
dec
sub
leave
cdq
pop
shr
inc
dec
shr
lds
jp
sub
or
cmps
jmp
sbb
add
ror
jbe
fmul
out
sbb
(bad)
or
lea
gs
add
mov
out
inc
(bad)
mov
pop
rcl
aam
sbb
sub
test
push
test
jae
outs
loope
inc
mov
rol
iret
push
ja
sbb
in
gs
pushf
sbb
rcl
xor
add
and
ffree
dec
pop
into
inc
jp
cvttps2pi
adc
sub
mov
shr
nop
out
mov
add
and
arpl
(bad)
adc
push
cmp
je
mov
fwait
push
mov
pop
jle
mov
call
inc
jb
movs
dec
mov
xor
jae
adc
add
(bad)
mov
adc
fild
scas
mov
jbe
cli
jae
ficomp
gs
dec
cli
shl
push
(bad)
lds
scas
mov
dec
or
adc
xlat
pop
out
adc
or
adc
cmps
inc
cli
xchg
add
push
dec
cmps
lods
inc
mov
repnz
movs
daa
out
movs
dec
add
pop
dec
mov
add
adc
cmp
jbe
dec
leave
cmp
cmp
or
jne
out
cmp
dec
mov
push
jns
add
mov
or
out
push
cmp
mov
fsubr
inc
add
push
mov
dec
inc
sbb
mov
xlat
sti
xchg
popa
push
and
pop
sub
sub
jne
push
push
push
sar
rcr
mov
out
stc
pop
mov
mov
(bad)
test
out
jns
and
jle
xchg
mov
iret
lahf
(bad)
sbb
push
cmps
xor
test
(bad)
sar
fidiv
arpl
mov
gs
dec
push
repz
sbb
popf
repnz
mov
cmp
cmp
push
sub
mov
lahf
xchg
mov
adc
cmp
sub
add
adc
mov
fs
xor
add
dec
imul
push
jbe
or
nop
daa
je
js
repnz
inc
jns
pop
mov
je
cli
pop
(bad)
hlt
arpl
mov
sbb
pushf
sub
xor
push
iret
mov
fistp
loopne
or
mov
jl
push
out
hlt
inc
cld
mov
dec
cmp
je
or
xor
mov
pop
maskmovq
div
out
fs
lea
test
inc
cmp
(bad)
out
add
sub
mov
push
xchg
xor
loope
sbb
inc
xor
mov
sub
pop
or
pushf
push
bound
lods
sbb
outs
movs
add
mov
sti
mov
stos
dec
iret
clc
int3
cmp
retf
movs
jae
retf
dec
addr16
add
sub
mov
arpl
not
cwde
sahf
fidiv
mov
enter
mov
out
pop
or
lock
jmp
std
clc
xchg
dec
(bad)
cmp
push
sahf
inc
xchg
sub
lea
pop
push
iret
mov
and
rol
bound
dec
pop
or
mov
inc
das
push
shr
push
test
jb
push
jne
push
mov
cmc
(bad)
cmp
mov
adc
xor
sbb
retf
fsubr
loopne
popf
push
ins
mov
test
std
loop
pop
sbb
or
mov
clc
lock
xchg
in
popf
pusha
jo
(bad)
je
mov
lods
lahf
pop
daa
pop
in
test
scas
sub
clc
jle
push
imul
xor
mov
xor
stos
in
mov
int
fyl2xp1
lea
add
hlt
mov
inc
xchg
pop
iret
mov
jge
mov
sub
retf
mov
mov
mov
(bad)
pushf
sub
sahf
repnz
xlat
movs
inc
arpl
mul
or
jne
dec
daa
push
add
dec
fwait
inc
inc
xor
push
mov
arpl
dec
fild
jae
sbb
movs
push
jo
sbb
mov
mov
jb
mov
add
out
jns
pop
jmp
mov
test
jle
out
add
popa
cmp
ret
mov
cmps
pushf
sbb
repnz
shl
(bad)
sti
sbb
pop
(bad)
(bad)
outs
cmc
push
xchg
jno
fld
ins
repnz
ja
push
sub
out
jg
stc
out
jg
scas
add
inc
add
clc
or
xchg
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
aas
sbb
jecxz
icebp
sar
xor
int3
je
fnsave
popf
daa
aas
mov
les
sbb
test
sti
(bad)
pop
mov
jecxz
add
or
shl
rcr
(bad)
mov
sbb
jbe
jb
pop
dec
cdq
js
outs
fcomi
sbb
inc
inc
mov
push
mov
xchg
and
pop
adc
dec
mov
sahf
repz
cmc
sbb
add
mov
cli
cmp
and
std
and
xchg
shl
out
js
add
xchg
sub
xor
(bad)
xor
push
imul
sbb
(bad)
stos
sub
mov
dec
movs
mov
imul
dec
cmp
mov
(bad)
xor
xchg
out
xchg
xchg
add
xor
jne
cdq
aam
stc
outs
rcl
and
sub
pop
pop
cdq
jns
out
rcr
fidivr
jno
ja
test
add
inc
movs
and
outs
jnp
mov
repz
icebp
sbb
mov
adc
sbb
adc
inc
jecxz
popa
dec
mov
dec
stc
cmp
in
sub
fidivr
jbe
in
imul
in
ror
(bad)
adc
jp
jno
gs
mov
mov
sbb
repnz
fisubr
loope
cld
and
fistp
pushf
pop
jge
sbb
mov
icebp
push
and
xor
in
mov
es
mov
jmp
sbb
sub
out
adc
icebp
data16
adc
stc
xor
test
(bad)
retf
shl
(bad)
or
int
ss
cmp
jbe
mov
mov
jge
jge
cli
test
sbb
dec
adc
iret
or
stos
or
pop
sub
enter
ror
fisubr
pop
or
dec
mov
popa
add
out
ss
test
jl
xchg
mov
stc
test
clc
pop
sahf
mov
push
adc
jecxz
mov
jle
pop
dec
jns
xchg
(bad)
ficom
push
(bad)
cmc
in
outs
mov
(bad)
ins
push
xor
xchg
shl
hlt
or
(bad)
mov
lock
push
mov
retf
add
mov
lods
(bad)
inc
pop
(bad)
inc
pop
das
lods
ret
loope
mov
mov
movs
xchg
jnp
pop
and
push
leave
and
je
mov
ja
retf
mov
fs
push
fist
or
je
les
popa
fistp
call
mov
xlat
mov
iret
loope
jne
out
cld
fdivrp
pop
rcl
add
jp
jl
mov
pop
std
cmp
inc
inc
jno
aad
shl
enter
retf
inc
mov
mov
dec
idiv
out
and
retf
fdiv
out
mov
mov
aaa
movs
adc
hlt
mov
jmp
push
mov
cmps
add
push
mov
shl
iret
sub
in
mov
js
test
push
push
(bad)
push
das
jl
xor
cmp
pop
mov
iret
imul
aas
sub
(bad)
xor
mov
adc
jae
std
lods
mov
xchg
sub
imul
cmp
imul
(bad)
(bad)
jnp
jne
add
inc
add
inc
out
loopne
and
add
imul
(bad)
xchg
dec
push
pop
sar
outs
repz
data16
clc
js
dec
jae
or
rdpmc
lea
fistp
int3
inc
jmp
xor
or
or
cmp
dec
mov
mov
inc
push
inc
dec
cmps
xchg
(bad)
int3
mov
jne
add
mov
push
add
xchg
push
ds
or
mov
fstp
ins
shl
mov
xchg
and
inc
xor
cwde
mov
and
test
inc
xchg
xchg
jg
pop
(bad)
sti
mov
and
jge
push
push
mov
sbb
and
mov
xchg
scas
mov
nop
pop
or
gs
and
sti
xchg
sub
sub
push
leave
mov
(bad)
aam
mov
fcmove
sub
(bad)
jae
out
dec
sar
bound
adc
cmp
lods
jmp
leave
xchg
lods
mov
jp
sub
into
sub
dec
stos
xor
mov
mov
shl
jmp
mov
(bad)
adc
std
shl
out
lods
xlat
cwde
cmc
jae
in
test
mov
xor
cmp
inc
xchg
scas
dec
adc
mov
adc
loopne
arpl
push
inc
push
mov
inc
jbe
dec
(bad)
adc
rcr
mov
arpl
mov
and
pop
push
sbb
addr16
test
jmp
cli
fidivr
repnz
jmp
or
daa
in
push
fimul
push
sbb
test
dec
and
dec
(bad)
test
out
xor
icebp
sub
add
mov
movs
pop
mov
test
lock
fistp
loop
inc
into
adc
and
loope
jecxz
push
xor
xor
pop
pop
fdivr
mov
jecxz
outs
test
and
add
hlt
fild
dec
mov
mov
pop
(bad)
in
mov
loope
add
mov
jge
in
je
push
in
sbb
xor
clc
adc
bound
inc
cmc
push
fcom
movs
xor
lods
xchg
and
fst
and
div
aaa
in
mov
dec
push
int
cmp
mov
jns
rol
add
or
and
jmp
dec
add
(bad)
(bad)
pushf
call
(bad)
sub
and
mov
cmp
leave
push
mov
sbb
pop
xchg
call
ds
ss
cmps
inc
sti
dec
leave
push
das
mov
sbb
shl
xor
xchg
cmp
cs
cmps
std
mov
xor
lods
or
mov
or
cdq
sbb
xchg
cmp
sub
pop
xor
cmp
data16
xlat
add
xchg
out
addr16
inc
movs
arpl
jmp
mov
(bad)
shl
cmp
fwait
adc
mov
inc
push
(bad)
or
sub
lods
or
push
std
std
and
mov
add
mov
push
xchg
push
push
lock
das
stc
imul
lods
js
mov
fs
inc
scas
fistp
test
or
outs
cmps
outs
stos
push
jns
imul
inc
jne
cmp
(bad)
cmp
xor
ds
dec
pop
mov
out
sub
enter
sbb
cmps
and
inc
out
sbb
push
into
cmp
sbb
jb
dec
js
xchg
and
cmp
mov
(bad)
clc
push
sbb
sbb
jae
xor
movs
and
int
push
test
dec
js
and
dec
js
fdiv
sbb
inc
jmp
popf
loope
jmp
mov
mov
aas
je
pop
aad
fsubr
jg
call
mov
scas
dec
xor
int3
adc
mov
lds
idiv
xchg
inc
adc
mov
and
jl
inc
mov
pop
fwait
addr16
(bad)
jmp
mov
enter
jb
cld
rcl
test
cmp
mov
xchg
leave
cdq
dec
add
xlat
mov
aaa
repz
jmp
dec
xchg
mov
ins
adc
imul
ficomp
lods
pop
or
xadd
add
push
sbb
xor
push
aam
xchg
jge
int
mov
sbb
daa
out
sar
sub
aad
inc
lock
mov
fdiv
sub
(bad)
pop
aas
in
mov
mov
jmp
pop
jp
stos
fisub
pop
scas
push
addr16
retf
jae
sub
movs
mov
add
fdivr
pop
push
lahf
or
fwait
xchg
xchg
jecxz
loope
cdq
nop
sub
fwait
mov
mov
loopne
pop
cmova
pop
mov
add
add
in
nop
fsubr
aad
xchg
addr16
pop
sti
shl
dec
es
push
idiv
pop
not
leave
repz
pop
in
js
movs
fild
imul
adc
sahf
ret
outs
stos
nop
jl
(bad)
sbb
dec
test
(bad)
mov
push
call
inc
mov
mov
ja
mov
cmp
lock
test
addr16
aas
clc
dec
jle
inc
test
ja
jne
and
jmp
xor
out
stos
movs
xchg
jo
jl
pop
(bad)
fisubr
pusha
stos
xlat
in
mov
ins
lods
fisubr
cs
inc
jns
lods
retf
scas
shr
push
outs
das
lahf
stc
pop
test
pop
mov
mov
adc
cld
into
iret
add
or
mov
and
xor
mov
nop
mov
retf
sbb
jmp
fdivr
data16
retf
jb
xchg
jecxz
dec
aam
lahf
stc
fstp
stos
sbb
and
mov
jns
adc
pop
mov
sahf
andps
repz
cmp
sbb
mov
cwde
and
(bad)
out
ja
es
jb
sub
nop
sbb
call
adc
cli
enter
hlt
cmp
in
inc
dec
pop
inc
lahf
shr
aam
pop
pop
imul
fcom
shl
ficom
xor
or
sub
arpl
push
jbe
imul
call
(bad)
stos
pop
mov
ficomp
jge
dec
push
loope
add
inc
add
fild
xor
pop
lock
cld
sbb
jns
mov
add
pop
pusha
lods
into
jle
sahf
add
arpl
mov
add
movs
jecxz
ds
(bad)
xchg
cmp
inc
cmc
xchg
scas
(bad)
arpl
and
cld
js
and
add
xor
pop
call
scas
and
push
cmc
pop
imul
mov
test
lea
and
mov
fwait
test
mov
movs
inc
xlat
adc
data16
inc
pop
stos
xor
sbb
sub
sbb
cld
mov
ror
jl
jmp
stos
stc
loopne
mov
jl
test
(bad)
scas
sbb
std
sub
repz
inc
and
mov
stos
pop
test
inc
sub
sbb
jns
(bad)
fimul
push
ins
sti
das
mov
push
push
push
popa
xchg
adc
call
and
cli
dec
loopne
mov
fadd
adc
mov
pop
mov
icebp
mov
xor
mov
xor
pop
rcr
mov
xchg
fild
dec
call
or
out
iret
ror
ja
mov
push
lock
jo
test
or
inc
push
call
dec
clc
adc
pop
mov
jo
push
or
jecxz
or
adc
sar
aad
sub
jb
cmp
pop
sub
push
inc
cmc
aam
add
hlt
push
loopne
pop
mov
dec
nop
rol
in
inc
jl
mov
retf
pop
add
jmp
jo
jne
push
lods
aaa
jnp
cmp
(bad)
sti
push
dec
(bad)
loope
xchg
or
or
shl
and
inc
add
(bad)
ins
cdq
test
mov
sbb
pop
in
test
hlt
mov
rcr
repz
inc
inc
mov
fmul
(bad)
mov
gs
pop
jb
pop
jle
fld
loope
mov
lods
pushw
popf
out
and
sub
or
cmp
jne
fdivr
mov
rcr
ret
inc
mov
adc
dec
daa
xchg
adc
mov
dec
cmp
xchg
pushf
ins
int3
pop
cmp
int
mov
add
pop
sbb
hlt
gs
add
retf
or
ret
and
out
movs
icebp
mov
cmp
aaa
stos
lods
pop
add
dec
xchg
pop
mov
xchg
and
in
loope
cwde
dec
dec
je
stos
xor
jecxz
xor
pop
pop
add
fisub
or
hlt
jb
xchg
sbb
mov
jmp
mov
(bad)
addr16
mov
ins
scas
popf
pop
mov
loop
movs
into
cmp
push
jle
mov
(bad)
(bad)
fsubr
sbb
mov
cmp
mov
dec
sub
mov
mov
fwait
push
daa
adc
inc
outs
hlt
xchg
jp
cwde
pop
enter
inc
dec
fnsave
gs
dec
(bad)
ja
rcl
mov
rol
and
mov
das
test
sti
and
jge
test
mov
jb
ffree
pop
mov
dec
cmp
shr
mov
and
mov
xchg
cmp
mov
arpl
xchg
sbb
cmps
shr
xor
shl
fdiv
fdivr
cli
xor
sbb
scas
movs
dec
xor
fcom
movs
xchg
je
sub
fild
mov
xchg
dec
push
jle
je
mov
and
mov
test
push
push
inc
ud1
ins
pop
bound
xor
fstp
cmps
or
or
(bad)
cwd
scas
neg
imul
jno
int
loope
mov
xchg
arpl
mov
or
ret
mov
ficom
ret
adc
push
aam
adc
sbb
pop
mov
(bad)
into
(bad)
dec
mov
popf
jp
rcr
leave
mov
mov
(bad)
adc
sar
sbb
inc
sar
in
jnp
iret
cld
pop
xchg
jne
inc
fnsave
push
out
nop
sbb
xchg
jge
lock
add
iret
pop
sbb
mov
rol
mov
lock
mov
add
out
push
pop
push
pop
aam
mov
push
addr16
push
pusha
retf
inc
inc
add
mov
lea
pop
mov
sbb
dec
rcr
dec
popf
fimul
pusha
mov
imul
sub
bound
mov
xor
xchg
ret
xchg
sbb
mov
inc
xor
jae
mov
fs
xor
fs
pop
lahf
jge
call
mov
sub
sub
pop
and
cmps
adc
sbb
xchg
xor
and
adc
enter
mov
xchg
je
xchg
call
stc
mov
sbb
pop
test
mov
cmp
test
pop
jmp
xor
and
pop
xor
jo
ficomp
ror
js
dec
xor
push
in
add
fndisi(8087
xlat
nop
push
xchg
pop
pop
mov
loope
ins
retf
cwde
or
mov
lock
push
ror
lea
js
pop
inc
pop
sbb
fist
sti
test
enter
gs
adc
(bad)
mov
mov
dec
or
cdq
xor
cmps
dec
jg
bound
fst
push
aam
lods
jno
xchg
outs
mulps
stc
int
dec
push
mov
popf
sub
test
(bad)
enter
adc
adc
stos
popa
pusha
mov
ficomp
nop
cmp
and
cdq
ins
push
dec
enter
sbb
out
addr16
push
cmp
cdq
jmp
fiadd
jle
jns
jg
inc
and
adc
nop
jg
sub
or
out
xor
or
mov
fs
inc
dec
(bad)
pushf
mov
pop
popf
xchg
(bad)
jmp
mov
aaa
int3
retf
pop
scas
sbb
xchg
dec
cmps
(bad)
xor
xchg
cmp
add
iret
push
and
adc
std
sbb
fdiv
outs
fsubr
sahf
sbb
mov
and
mov
and
push
(bad)
into
shl
aad
or
inc
dec
js
push
mov
fisub
jae
popa
xlat
ja
shr
inc
inc
ja
pop
ja
mov
jle
lahf
pushf
jmp
cmp
imul
or
(bad)
ins
mov
cmps
jecxz
adc
pop
xor
jecxz
test
scas
mov
add
(bad)
stc
out
jg
stc
jg
add
aas
idiv
out
adc
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
test
fmul
js
cmp
or
cwde
out
scas
jmp
int
cdq
cwde
out
out
cwde
cmp
ja
jb
sbb
fwait
ss
adc
out
(bad)
js
stc
sub
add
jge
add
scas
fsubr
pop
test
mov
cwde
push
pop
inc
push
loope
imul
pop
or
push
mov
call
xlat
loop
jp
jecxz
movs
aam
mov
nop
sub
dec
outs
cli
retf
push
jge
adc
inc
stos
mov
(bad)
fmul
sbb
scas
pushaw
es
ins
test
data16
fdivr
push
mov
mov
cmc
inc
mov
scas
push
jnp
shr
shl
push
rol
retf
js
sbb
sub
in
xor
sar
fwait
sbb
xchg
in
inc
call
xor
call
imul
or
fisttp
hlt
xor
bound
add
add
sub
cmp
dec
aam
(bad)
pop
movs
dec
imul
data16
pushf
sbb
mov
push
jge
(bad)
(bad)
adc
sbb
push
pusha
in
cld
popa
mov
into
mov
(bad)
cmp
mov
inc
adc
div
mov
stc
pop
inc
inc
cdq
jne
add
mov
fmulp
cld
pop
jbe
rcl
adc
adc
inc
ret
leave
ret
sub
les
in
mov
hlt
out
push
push
pop
loop
lods
out
fwait
or
fldenv
push
shl
out
cmc
or
sahf
or
scas
outs
add
dec
stc
mov
sbb
and
(bad)
outs
jp
imul
int
mov
inc
jnp
sub
cdq
push
and
js
or
xacquire
sub
cwde
aas
jmp
fld
arpl
cmps
xchg
(bad)
mov
jg
sub
mov
repnz
ret
ins
dec
xchg
arpl
jae
sbb
xchg
cld
ja
or
sub
jge
mov
adc
jl
pop
movs
cdq
test
loopne
dec
int3
aam
sub
stos
lods
adc
push
xchg
out
lods
pop
lahf
call
inc
cdq
loop
pop
adc
call
out
fs
test
pushf
clc
test
(bad)
xchg
xor
jmp
cmp
mov
rol
cmc
(bad)
jl
adc
fdiv
push
xor
daa
iret
mov
movs
ins
mul
jnp
lods
int3
lods
pop
ds
fcmovu
lods
(bad)
jb
adc
jmp
mov
push
cld
fldcw
adc
dec
jecxz
cmps
test
imul
lea
ds
dec
mov
inc
sbb
cld
push
cmp
movs
xchg
mov
fst
ins
pop
push
push
aas
and
cld
stc
clc
cmps
pop
xchg
(bad)
call
pop
xchg
in
add
ja
jmp
push
inc
in
pushf
repnz
mov
jno
mov
ror
fs
pop
cmp
jnp
jne
cmp
mov
mov
shl
loope
jecxz
dec
sti
test
or
pop
int
loop
mov
push
ins
lahf
les
mov
sbb
pop
loope
sbb
or
adc
call
jmp
or
lea
in
cmp
lods
push
(bad)
or
push
push
xor
dec
clc
inc
dec
jp
(bad)
lods
and
sahf
int3
iret
mov
sbb
dec
cwde
xchg
aaa
inc
sbb
gs
aam
in
mov
cmp
pop
adc
push
cmp
push
icebp
sub
jle
dec
push
mov
sub
xor
jmp
arpl
dec
arpl
dec
addr16
pop
jge
jne
popa
mov
cld
sub
push
rol
(bad)
push
and
jbe
cmps
xchg
cmp
dec
push
pushf
rcr
and
jbe
adc
loope
inc
push
jl
mov
stos
cmps
into
pop
push
out
pop
js
mov
dec
xchg
ds
jbe
loopne
lds
shl
pop
test
push
xchg
int3
mov
ss
retf
lods
sub
ins
push
or
jo
pop
sahf
repz
das
xor
ret
pop
sub
loopne
pop
mov
inc
stc
call
out
test
jae
call
jmp
sub
out
dec
and
push
fsub
cmp
iret
in
lock
ds
or
mov
and
pop
sbb
lods
sub
push
sbb
inc
sub
ins
retf
pusha
mov
movs
xchg
sbb
jno
int3
sub
enter
sub
ins
in
mov
dec
cld
mov
pop
sub
inc
cmp
inc
into
repnz
xor
(bad)
pop
(bad)
stos
fcmove
xchg
adc
es
pop
inc
ficomp
dec
push
ja
(bad)
xchg
(bad)
out
sub
xor
or
sar
push
out
js
aaa
stos
mov
add
sbb
in
mov
inc
add
aad
push
mov
nop
addr16
(bad)
loop
retf
ss
push
js
test
outs
lds
repz
sub
(bad)
(bad)
stc
movs
mov
mov
call
sub
push
sub
adc
dec
stos
mov
pop
and
pop
or
in
retf
pop
test
sti
int
jmp
inc
push
cmp
ficomp
je
bound
add
push
test
daa
adc
fwait
sahf
loope
lds
dec
cmp
cmps
scas
mov
jge
cwde
xor
cmp
fidiv
xchg
inc
fistp
and
addr16
cli
cwde
scas
or
cwde
push
inc
jmp
test
ins
cld
pop
jg
retf
or
ds
sbb
xchg
push
adc
or
(bad)
sti
popa
dec
jo
out
mov
jge
mov
mov
jnp
lds
inc
add
dec
aad
push
stos
xchg
jecxz
outs
or
imul
push
xor
pusha
std
sub
xor
dec
jmp
and
not
ins
cs
mov
aas
repz
lods
shr
xchg
pop
pop
popa
xlat
xchg
pop
sar
jmp
dec
idiv
push
ds
adc
mov
cli
scas
xlat
jmp
mov
pslld
ret
cdq
shl
sbb
sub
fnstsw
cmp
xchg
cld
jae
mov
into
cmps
adc
out
sahf
or
adc
cwde
and
jmp
bts
xchg
jmp
out
or
js
ret
push
inc
cmps
mul
adc
sub
rcl
popa
jne
mov
ins
call
xor
mov
ret
xchg
pandn
loope
lea
shl
stos
call
std
retfw
icebp
ficomp
inc
push
or
les
scas
in
push
in
lods
loopne
add
mov
xlat
lahf
xchg
or
pop
(bad)
sub
or
gs
movs
and
push
pop
lods
or
jbe
icebp
adc
xchg
xlat
adc
call
xor
icebp
inc
rcr
and
cmps
push
scas
pop
cmps
sahf
je
cmps
iret
inc
jle
xor
stos
xor
outs
sbb
adc
pop
(bad)
(bad)
cmp
dec
lock
xor
(bad)
mov
xor
jp
and
mov
xor
icebp
aas
std
cmp
pop
in
dec
push
adc
test
sub
aas
or
cld
xchg
mov
and
mov
out
sub
dec
clc
es
xchg
loope
or
sbb
sbb
mov
mov
cmp
jle
outs
cwde
retf
dec
jnp
mov
(bad)
clc
push
inc
inc
fsubr
sahf
push
pop
(bad)
out
cmps
scas
int3
mov
in
xchg
push
jo
repz
mov
and
or
jo
push
mov
mov
inc
aaa
ja
jle
or
cmp
and
or
cmp
jno
bound
lea
hlt
or
fs
sbb
das
cmp
iret
movs
mov
in
gs
dec
fucomi
cwde
sub
xor
popf
cmp
aam
dec
outs
dec
mul
fwait
add
lods
pop
(bad)
mov
pop
mov
lock
cs
int
push
inc
jmp
push
shl
ret
cmp
cmp
xchg
dec
xor
or
jmp
jb
pop
mov
jns
je
lock
bound
cs
call
call
mov
adc
push
(bad)
leave
rcl
das
in
sahf
punpcklwd
invd
and
pop
and
push
ja
jne
pusha
dec
jb
retf
nop
push
in
jecxz
das
lods
push
adc
popa
xlat
loop
scas
jnp
sbb
shr
scas
repnz
mov
das
cmp
and
test
fstp
not
lea
or
out
sbb
xor
mov
mov
fcomp
in
cmp
stc
pop
jmp
(bad)
pop
mov
or
xchg
push
f2xm1
popf
jnp
dec
sub
jl
mov
(bad)
inc
mov
pop
shr
out
pop
push
loope
dec
mov
sahf
mov
je
mov
cwde
(bad)
push
retf
lods
jg
das
inc
jae
inc
xchg
ret
cmps
mov
jp
jnp
out
xor
int
test
sbb
xchg
or
ss
cmp
ret
shl
xchg
jne
jmp
inc
add
fwait
sahf
adc
sbb
(bad)
popa
icebp
scas
jno
sahf
xchg
mov
or
arpl
ret
or
pop
cli
mov
lods
arpl
xlat
sbb
enter
jo
lods
sti
fnstcw
push
enter
retf
sub
scas
jns
push
into
dec
and
mov
cmp
jge
fcom
xchg
dec
push
jae
mov
mov
test
jo
(bad)
xchg
test
mov
jno
or
sti
xchg
int
ss
xchg
in
dec
push
imul
add
xor
in
aam
xor
inc
dec
xlat
lods
ja
and
push
and
retf
xchg
call
lock
bound
cmp
je
dec
sbb
pop
mov
pop
clc
fcmove
adc
pop
push
or
movs
pop
loop
popf
icebp
out
out
stc
stc
dec
jmp
nop
repz
mov
or
dec
jo
inc
and
movs
rcr
ret
push
iret
and
pushf
dec
jge
jle
cmps
daa
fstp
test
add
les
xor
div
sub
aas
xor
or
(bad)
sub
lahf
cld
inc
rol
js
inc
jmp
mov
loop
test
fist
out
not
popa
xlat
xchg
jns
or
out
in
data16
in
xchg
ret
icebp
bound
jge
test
xor
in
scas
jae
pop
inc
xchg
outs
mov
and
xchg
mov
xor
sbb
jle
scas
lahf
test
cwde
cmp
fiadd
fwait
sar
into
retf
std
ficom
push
mov
test
sub
cmp
sbb
mov
or
pushf
jl
ds
mov
fmul
ins
cli
call
jns
lods
pop
arpl
nop
scas
bound
aam
xchg
js
ins
adc
lods
xchg
icebp
repnz
inc
xchg
xlat
js
aas
jbe
push
add
test
inc
hlt
stos
or
cdq
push
pushf
push
xor
cmp
xchg
dec
mov
loope
jne
pop
add
xchg
repnz
adc
fbld
fldln2
imul
adc
push
push
xor
into
cld
pop
movs
xor
or
and
sub
ins
dec
outs
adc
pop
aas
sub
daa
and
jno
inc
mov
out
movs
push
xor
push
mov
jle
test
repz
int3
push
push
iret
push
mov
sub
mov
mov
cmp
jne
test
scas
push
inc
aad
push
pop
pop
lods
jae
sub
retf
add
fld
stos
dec
ror
xchg
mov
add
bound
outs
cld
cdq
adc
inc
jbe
adc
dec
lmsw
mov
sub
daa
dec
std
int
and
push
or
js
repnz
ret
mov
push
xor
inc
inc
out
push
repnz
inc
push
stc
pop
fist
loope
mov
push
xchg
rcr
in
pop
inc
dec
cmps
adc
push
mov
cmp
mov
les
mov
pop
push
movs
pop
fsub
test
daa
lahf
and
rol
jb
call
in
test
lahf
mov
movs
out
pop
jb
push
enter
cmp
dec
mov
iret
inc
sub
xor
lds
mov
loope
ins
fwait
or
and
sub
inc
dec
pushf
ja
cmc
push
push
rcr
cmp
mov
and
xchg
ss
scas
es
retf
xor
pusha
jae
and
inc
push
pop
inc
adc
xor
xchg
cmp
int
(bad)
js
xchg
or
loope
fdivrp
mov
cli
mov
jl
dec
jo
dec
cmp
sbb
mov
dec
jno
rcr
rcl
dec
retf
fstp
xlat
mov
add
cmps
xchg
and
mov
shr
mov
dec
pop
aas
mov
sbb
das
xchg
jnp
ret
xor
dec
pop
out
aaa
adc
xor
stc
mov
js
inc
jle
xlat
movs
sub
jmp
mov
popa
cmp
aad
pop
jle
sbb
scas
lds
pushf
sbb
jmp
xlat
mov
or
push
stos
into
inc
mov
call
shl
mov
cmp
js
loopne
sbb
aaa
bound
loope
cs
cmp
adc
pushf
inc
nop
sbb
mov
daa
lahf
sbb
mov
ja
pop
cwde
or
ret
adc
dec
pop
cmp
or
cwde
cld
cmps
loopne
add
test
cmp
movs
ds
(bad)
push
js
add
dec
or
scas
sbb
out
movs
in
in
adc
sub
in
out
mov
shl
loope
adc
les
ins
xor
mov
enter
(bad)
icebp
mov
ja
(bad)
mov
fsubp
shl
xor
mov
xchg
hlt
cmp
ror
jne
out
call
in
pop
xchg
mov
ret
xlat
push
mov
mov
popa
in
aad
jno
pop
inc
push
mov
mov
fadd
loopne
or
pop
add
xor
cmps
push
loopne
sbb
ficom
fbstp
das
or
or
leave
xchg
xor
loop
or
push
out
ret
shr
sbb
adc
dec
push
(bad)
pop
adc
(bad)
nop
adc
fcmovne
lea
add
inc
dec
rcl
jbe
and
retf
(bad)
fnstcw
xchg
fucom
mov
mov
mov
out
not
inc
movs
pop
or
pusha
inc
call
ins
idiv
jnp
mov
add
das
jno
jne
push
stos
xor
loop
cli
mov
sub
adc
(bad)
cmp
dec
mov
dec
ds
(bad)
xor
fiadd
xchg
shr
add
ucomiss
in
popa
(bad)
lods
and
push
dec
mov
inc
stos
pop
jmp
add
clc
dec
cmp
pop
pop
pop
mov
dec
sub
or
push
bound
addr16
xor
leave
pop
in
add
xor
jo
sbb
lea
repz
xor
mov
hlt
ss
repz
repz
pushf
push
fstp
sbb
or
mov
stc
lock
mov
pop
sbb
outs
test
dec
jecxz
mov
pop
cmp
xchg
mov
jp
outs
movs
xchg
sbb
popf
test
and
std
popa
adc
shr
mov
test
rcl
int3
mov
imul
sbb
popf
mov
adc
call
cmp
inc
xor
pop
mov
adc
xchg
pusha
inc
dec
out
hlt
dec
neg
out
xlat
nop
(bad)
xchg
lea
add
sub
and
nop
gs
xor
xchg
xchg
movs
and
push
pop
jbe
mov
mov
aam
sub
jp
pop
mov
mov
dec
add
mov
int3
or
inc
inc
push
and
add
push
push
dec
cmc
aam
mov
popf
cmps
hlt
pop
cld
jns
cld
cmc
xlat
pop
jg
cmc
xlat
pop
jg
mov
arpl
add
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
je
je
sbb
cmp
cmp
fcmove
jmp
popf
push
fwait
call
fstp
pslld
jns
sub
fdivr
ss
adc
jmp
mov
shl
out
xor
shl
mov
popa
and
je
xor
push
je
sbb
or
xlat
sub
into
cmps
mov
cmp
daa
mov
mov
push
outs
sub
inc
inc
or
int
out
and
pop
(bad)
jg
jge
jno
(bad)
ss
outs
jne
sbb
mov
xor
mov
push
and
js
xchg
dec
in
sub
(bad)
dec
pop
fild
lock
pop
jno
loope
(bad)
sub
pop
cli
mov
clc
sbb
adc
mov
leave
stos
adc
(bad)
fild
shl
sub
pop
das
outs
fwait
cmc
push
std
(bad)
mov
sub
sub
inc
mov
pop
imul
pop
dec
dec
fwait
cmps
test
xor
dec
xor
mov
pop
or
mov
pop
pop
(bad)
je
jmp
pop
iret
loop
adc
pop
mov
xor
(bad)
push
test
pop
pop
xchg
pop
das
pusha
(bad)
pop
xor
pop
aad
jmp
mov
xor
and
outs
inc
(bad)
mov
adc
xchg
cli
retf
popf
in
inc
and
mov
iret
sbb
cmp
or
inc
int3
stos
shr
in
sahf
clc
sbb
xor
mov
sar
xor
mov
push
push
lds
jns
mov
in
sub
dec
and
sub
cmp
jle
jp
ja
and
retf
iret
retf
jmp
outs
test
push
cdq
sub
and
int
cmp
push
xchg
stos
daa
push
and
jne
adc
bswap
jecxz
sbb
fcmovbe
(bad)
or
jle
pop
jge
add
or
aas
cmps
cli
mov
add
push
push
fdiv
stc
push
and
jbe
repnz
ds
int
sbb
dec
jo
cdq
push
fcom
retf
rcr
xchg
repz
adc
stc
mov
mov
scas
stos
fdivr
sbb
mov
das
mov
ds
int3
or
js
out
rol
and
cmps
jmp
and
ret
pop
imul
ror
ins
scas
mov
adc
cmp
ficom
pop
movs
fwait
arpl
jo
inc
dec
icebp
es
cmp
rol
js
dec
(bad)
test
mov
pop
or
sbb
jno
lods
mov
sbb
or
ss
mov
loop
fnstcw
xor
aam
dec
fstp
pop
pop
rcr
out
call
js
pop
mov
xchg
mov
adc
movs
pusha
sub
or
test
xor
add
dec
mov
lahf
sbb
stos
sub
aad
sbb
dec
cmp
mov
jmp
in
lods
or
dec
call
clc
lea
idiv
fwait
in
jns
sbb
clc
imul
(bad)
fbstp
es
mov
fwait
movs
and
xchg
dec
xchg
sbb
cmp
jecxz
mov
(bad)
popf
outs
test
les
push
push
shl
arpl
(bad)
test
sub
das
rcr
xor
mov
cwde
mov
les
mov
jbe
mov
and
stos
pop
pop
retf
out
rcr
inc
pop
add
mov
adc
in
push
jp
and
push
cwde
push
dec
out
out
imul
sub
push
pop
dec
inc
push
xchg
dec
adc
(bad)
push
lods
mov
loopne
jl
je
push
mov
xchg
ja
adc
sbb
lahf
xchg
lods
lea
in
inc
sub
shl
xchg
push
out
test
ja
retf
ror
xchg
or
fiadd
frstor
mov
mov
mov
cdq
iret
xchg
movs
push
shr
mov
aas
cmps
daa
inc
cmps
iret
mov
outs
in
sti
pop
int
and
dec
sub
inc
daa
sahf
test
mov
inc
push
mov
dec
lods
pop
jl
hlt
push
and
das
fstp
dec
retf
aad
test
or
cwde
addr16
sti
outs
pop
adc
mov
addr16
xchg
sbb
jp
or
jne
cmp
sbb
cmp
push
movs
pop
das
popa
jecxz
les
aas
ds
fwait
mov
cmc
out
push
cdq
inc
popf
fimul
sub
mov
push
push
pusha
push
pop
xor
xor
gs
in
frstor
loope
mov
adc
push
pop
leave
fidiv
out
shl
aad
pop
pop
daa
push
retf
clc
jg
xor
aad
xor
inc
xchg
out
cmps
loope
add
mov
add
bound
imul
push
cmp
dec
cwde
gs
cwde
dec
(bad)
cs
lds
add
scas
sub
cs
mov
or
daa
retf
xlat
cli
std
mov
fwait
pop
cmp
jl
neg
cmp
mov
jp
jno
push
push
gs
jmp
push
sub
inc
jmp
mov
loop
das
jno
hlt
xor
fs
adc
cmp
adc
cwde
mov
xchg
jge
mov
jb
pop
mov
jp
xchg
mov
ja
mov
stos
inc
fisub
hlt
jge
cs
test
stc
dec
(bad)
fucom
push
ret
pop
imul
fisub
mov
pop
test
rcr
(bad)
jns
and
fucom
mov
lock
xchg
test
stc
xor
enter
xchg
jle
sti
iret
or
sub
int3
jo
sub
adc
dec
jns
xor
cmps
add
sbb
mov
(bad)
jnp
cmp
adc
out
inc
inc
sbb
lea
pop
in
cmp
cmp
frstor
neg
je
jge
add
push
pop
sbb
or
mov
mov
pop
cmp
scas
or
into
iret
cld
cli
repnz
or
cmps
pop
ss
inc
adc
loop
adc
fwait
mov
cwde
fldenv
imul
ds
xor
cmps
sbb
xchg
retf
push
mov
das
movs
jg
nop
or
test
aaa
clc
out
push
pop
(bad)
push
cdq
mov
dec
add
sub
jno
shl
call
jle
neg
(bad)
sub
ret
jnp
fdivp
fadd
cmp
popf
dec
mov
cld
cwde
mov
mov
cwde
jne
jae
test
(bad)
mov
(bad)
rcl
jge
mov
int3
pop
adc
xor
xchg
shr
test
jo
fild
sahf
mov
or
sbb
push
(bad)
push
add
cmp
shr
push
or
jmp
sub
clc
jecxz
mov
outs
idiv
sub
push
(bad)
in
or
ja
scas
pop
(bad)
scas
sahf
jg
or
fcmovnbe
test
es
push
inc
sub
lds
shr
cmp
mov
pop
dec
je
adc
(bad)
lahf
fwait
xor
in
cmc
mov
jle
jne
sahf
call
mov
inc
test
cmps
pop
adc
xor
repnz
mov
and
inc
fild
inc
mov
das
lea
pop
stos
popa
cdq
jae
xor
ret
aam
pushf
jmp
cmp
add
jmp
and
jg
pop
ins
lea
add
mov
and
(bad)
and
or
out
aam
sbb
call
out
ret
dec
add
push
cld
pushf
stc
(bad)
adc
pop
imul
std
mov
mov
ret
jg
mov
xor
jns
scas
es
call
adc
ins
push
in
xor
jae
jp
adc
clc
mov
ins
jae
pop
in
stc
adc
adc
sbb
into
sar
jno
inc
xchg
mov
dec
mov
sahf
cmp
fs
cmps
in
scas
(bad)
(bad)
fstp
xor
mov
not
sbb
ja
add
(bad)
out
cmp
mov
std
xchg
(bad)
cmp
sbb
sti
repz
cli
jae
sub
mov
xchg
sbb
cmovbe
mov
iret
outs
mov
nop
lea
int3
sbb
pop
mov
jbe
mov
xchg
jmp
cs
jmp
jg
pop
xor
into
js
pop
xor
jg
ds
push
cmp
jecxz
or
mov
leave
xchg
and
(bad)
jmp
sub
xor
loopne
xor
sar
or
mov
cld
and
pushf
test
lds
jp
cmps
jecxz
mov
stos
pop
mul
aas
mov
adc
push
jbe
pop
push
movs
pop
sbb
or
rcr
sbb
mov
enter
ss
aad
lods
fcom
mul
add
add
pop
inc
push
dec
out
(bad)
int
jg
ins
dec
adc
ja
sub
push
cmps
xchg
scas
push
pop
jge
jmp
shl
out
fisubr
push
adc
mov
jnp
push
inc
pop
pushf
push
sbb
movs
repnz
cmp
fsubr
test
pop
adc
int
shl
aad
rol
xchg
xor
mov
xor
sti
aam
scas
adc
out
out
gs
test
js
int
sbb
xor
sbb
ins
int
loopne
(bad)
xchg
gs
xor
xchg
and
cmp
sbb
aam
jne
mov
push
cmp
lock
fldcw
xor
adc
sub
mov
ja
inc
(bad)
pushf
repnz
jge
mov
add
or
cmp
sbb
into
adc
out
lea
fsub
pop
aam
cwde
mov
push
xor
loope
movs
pop
jmp
movs
or
xchg
pop
mov
sub
jns
das
fbld
push
mov
mov
(bad)
cmc
pop
(bad)
sti
jae
clc
adc
cmc
test
std
dec
jmp
mov
lahf
or
test
es
daa
push
repnz
inc
jae
jmp
mov
mov
stos
pusha
les
enter
mov
sub
inc
(bad)
pop
adc
nop
cmp
test
push
dec
jmp
mov
icebp
xor
or
ret
jmp
hlt
add
mov
mov
mov
pop
dec
sbb
and
imul
lahf
out
inc
clc
jecxz
push
mov
movs
or
das
(bad)
imul
stos
out
iret
inc
mov
aam
push
lock
sar
mov
push
cmp
jmp
or
mov
lea
jo
push
lea
adc
mov
fild
(bad)
xchg
xor
or
xor
mov
dec
mov
fidivr
dec
test
rcr
push
cmps
sub
adc
out
push
xchg
test
daa
into
jmp
push
cmp
mov
hlt
int3
or
les
ins
aam
popa
popf
cmp
pop
icebp
(bad)
adc
pop
(bad)
pop
test
or
ja
imul
popa
outs
mov
mov
inc
sub
inc
(bad)
push
adc
and
sahf
mov
ss
jbe
shl
pop
sti
ins
je
mov
nop
xacquire
and
adc
and
cmp
inc
sub
scas
pop
sbb
fld
es
jne
lea
cmp
and
and
sti
xchg
sub
adc
pop
jp
or
sbb
xchg
push
push
icebp
test
mov
inc
xor
xor
or
jle
and
dec
mov
push
or
pop
cmp
shr
and
movs
les
ins
jbe
clc
sub
add
ret
xchg
mov
mov
nop
mov
jbe
nop
push
inc
mov
gs
mov
stos
call
sbb
mov
fadd
in
int3
adc
pop
pusha
idiv
xchg
popf
ss
pop
jp
out
pop
or
cld
std
or
adc
mov
adc
sbb
iret
out
push
mov
sub
lds
or
xchg
push
mov
or
xor
retf
push
sbb
movs
nop
sahf
ja
ds
rcr
dec
jb
movs
sbb
push
mov
xchg
(bad)
aad
ror
or
push
fs
cmp
xchg
inc
mov
iret
fstp
jnp
inc
test
sbb
popa
aam
and
jb
and
and
fs
out
push
jg
cmc
stos
loope
arpl
js
mov
mov
jo
(bad)
div
or
xchg
mul
ins
inc
mov
add
ins
jmp
and
int3
mul
pop
call
addr16
inc
pop
sub
clc
popf
or
inc
sbb
inc
sub
pop
shr
(bad)
aas
mov
neg
outs
ss
inc
repz
mov
sub
inc
push
(bad)
jmp
mov
mov
and
adc
jl
addr16
inc
xor
dec
dec
in
jb
enter
mov
(bad)
(bad)
mov
enter
nop
sub
inc
pop
cmc
into
stos
mov
fld
cmp
and
sub
mov
pop
sbb
js
push
jbe
pop
mov
pop
mov
mov
loop
jno
out
cmp
mov
mov
retf
mov
pushf
scas
lahf
mov
(bad)
push
outs
stos
and
outs
and
push
(bad)
daa
mov
cmp
fisttp
in
pop
pop
sub
mov
dec
cmp
or
add
(bad)
out
fwait
jae
xor
pop
daa
push
lea
das
push
sbb
push
xchg
loop
push
xor
pusha
out
(bad)
fbstp
adc
out
xchg
jb
addr16
jb
mov
repnz
sbb
jae
jp
(bad)
ja
retf
loopne
xor
popf
outs
mov
add
test
scas
cwde
test
inc
lods
repz
clc
call
adc
mov
fsubr
dec
arpl
dec
pop
mov
lahf
sbb
std
sbb
jo
popa
cdq
and
ins
sub
add
jae
fdivr
pop
mov
loop
ss
dec
arpl
xchg
div
neg
bound
pop
inc
or
in
out
enter
jg
and
scas
enter
xor
xchg
(bad)
ds
call
cmp
and
xchg
aad
push
cmp
lock
loop
in
sbb
test
cmps
je
pop
pop
dec
adc
mov
int
or
fs
imul
ds
pop
sahf
(bad)
sbb
(bad)
movs
jbe
iret
daa
sahf
cmps
xchg
js
push
xor
inc
std
xor
pushf
pushf
xchg
mov
mov
push
mov
sbb
retf
stc
sbb
or
pop
cmp
out
in
and
lahf
inc
pop
xchg
pop
jns
add
fwait
mov
mov
xchg
push
jnp
mov
pop
scas
inc
jnp
jmp
push
add
lods
fdivr
xor
jg
fsub
cmp
xchg
sbb
lods
jecxz
or
repnz
pop
push
sub
nop
mov
sahf
lock
out
mov
loop
pop
push
(bad)
push
push
rol
push
movs
pop
sbb
pop
push
inc
iret
ret
push
dec
xchg
sbb
dec
stos
leave
jmp
lods
or
scas
imul
(bad)
test
jo
rol
push
loop
mov
push
xor
dec
cmp
ss
jno
xor
(bad)
loop
push
jge
das
jo
into
sti
and
outs
mov
adc
mov
adc
xor
lds
mov
and
neg
stc
(bad)
and
cs
out
sub
and
cdq
or
iret
push
push
mov
cli
mov
fs
pop
pop
push
scas
fnstcw
inc
cmp
cmp
idiv
push
stos
test
mov
(bad)
and
mov
cmp
(bad)
in
push
dec
xor
shl
inc
add
movs
xchg
fnstenv
add
imul
loope
adc
add
mov
sti
xchg
ja
or
loop
sub
repz
movs
xchg
cmp
xlat
xor
imul
pushf
arpl
cwde
push
(bad)
push
mov
jmp
mov
push
movs
jo
mov
clc
mov
jbe
jno
(bad)
mov
add
adc
pop
in
mov
stos
xchg
aam
call
jge
sti
fcomp
bound
or
enter
into
repnz
enter
xchg
jns
mov
clc
cmp
iret
aas
(bad)
cld
repz
aas
call
add
jg
sbb
jb
lds
sub
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
xlat
add
xor
cmps
cdq
out
out
ins
mov
sbb
xor
je
(bad)
xor
dec
ja
inc
ja
xchg
fistp
(bad)
mov
mov
sub
adc
mov
sub
and
fs
out
and
loopne
jge
(bad)
cmp
push
repz
mov
sti
jno
jmp
mov
scas
push
dec
sub
cmp
inc
cli
cmp
stos
add
imul
fmul
jns
adc
pop
test
push
enter
(bad)
(bad)
stos
std
sti
outs
mov
mov
push
leave
cmps
shl
rol
inc
pop
mov
push
dec
mov
aam
pop
(bad)
popf
(bad)
adc
in
ss
jno
mov
cmp
repz
ror
stc
mov
mov
jle
out
sbb
popf
imul
dec
cmp
push
hlt
adc
mov
or
jg
test
aad
jmp
cli
or
cmp
std
add
cmp
(bad)
cmp
jl
jne
jb
inc
retf
(bad)
inc
test
fucomp
(bad)
xchg
test
in
push
fdivrp
pop
movs
jge
inc
add
sub
lds
xchg
stc
add
pusha
dec
pop
sub
mov
jmp
dec
inc
jp
aaa
imul
out
push
cmps
mov
xlat
sbb
shl
ins
jg
or
js
mov
jle
dec
push
inc
add
call
lea
idiv
add
sbb
jmp
xchg
pop
sbb
(bad)
cmc
mov
leave
and
jo
rcr
test
jnp
sahf
clc
pop
rol
push
xchg
cmp
cmp
xchg
xlat
cdq
es
into
jl
loopne
cmp
jbe
lea
or
call
mov
rcr
(bad)
xchg
cmp
push
movs
sub
cs
outs
(bad)
jno
ins
xchg
mov
test
test
jg
jge
xchg
std
movs
ds
outs
sti
aam
adc
fs
dec
mov
sub
mov
xchg
lds
inc
ja
call
sbb
stc
mov
fistp
retf
fs
jbe
and
and
sti
push
push
dec
xor
mov
cmp
mov
sti
dec
or
ret
hlt
test
out
dec
imul
jecxz
ret
mov
movs
ror
xchg
lods
mov
or
mov
call
mov
pop
dec
pop
push
pushf
retf
cld
push
sar
xor
cmp
outs
jne
out
cdq
cmps
ins
pop
in
xchg
mov
xor
xchg
scas
enter
in
sbb
cmp
jmp
lds
xchg
push
add
pop
jae
push
or
adc
pop
shl
or
rcl
je
mul
jnp
dec
inc
shr
loop
pushf
add
push
cmp
push
sbb
xor
and
sbb
cwde
mov
or
xchg
add
jecxz
pushf
daa
mov
inc
dec
je
cmp
imul
sbb
mov
mov
push
adc
retf
movs
gs
outs
out
popf
in
in
inc
sbb
sub
mov
test
lods
xchg
inc
push
mov
inc
test
inc
mov
dec
jnp
adc
fwait
xor
idiv
sub
sti
repz
out
jbe
mov
and
stos
mov
and
(bad)
cmp
das
inc
xchg
fiadd
idiv
cmp
ret
fcomip
cmp
lods
jmp
cmp
cmp
mov
or
xor
or
scas
sti
and
cmp
(bad)
add
sbb
fnstcw
loop
xchg
xchg
cdq
sbb
sub
dec
sar
mov
sbb
pop
(bad)
fucomp
pop
lods
or
out
xchg
or
ret
test
shl
jle
mov
jge
pop
arpl
pop
out
movs
cmp
fld
inc
add
cmc
jmp
fs
(bad)
fs
(bad)
fisttp
test
push
mov
ins
xchg
or
and
jmp
dec
stc
sub
test
xchg
call
sub
mov
add
cli
test
shr
xor
fist
sbb
and
inc
mov
add
push
mov
mov
fs
cmp
adc
push
mov
sbb
mov
popf
jmp
mov
dec
mov
fmul
dec
idiv
outs
jle
push
repz
dec
in
pop
push
lock
outs
mov
and
shr
sbb
(bad)
xchg
retf
loop
lods
jecxz
jbe
xor
inc
inc
fbstp
pushf
(bad)
xchg
xchg
xor
xchg
aas
push
and
cmp
mov
mov
ds
mov
(bad)
or
adc
mov
fadd
pop
fst
or
pmulhuw
inc
hlt
jg
jo
cmps
call
gs
jae
test
lods
mov
leave
fwait
ret
shl
clc
adc
scas
js
xchg
mov
out
stc
jne
movs
inc
mov
pop
or
add
xor
aam
cmps
xor
jmp
cdq
xor
nop
leave
lock
in
add
and
das
addr16
ret
cmps
sti
pop
sbb
dec
pop
pushf
lods
aaa
cdq
sbb
sub
dec
loopne
push
or
sub
retf
cmp
fcmovbe
call
mov
xor
inc
mov
mov
dec
aam
(bad)
cmp
dec
stc
inc
sbb
push
(bad)
shl
adc
push
stos
sar
jg
and
adc
lods
aaa
int
inc
jbe
mov
fcmovb
add
retf
(bad)
int3
pop
test
in
push
fild
inc
xor
arpl
xlat
cli
pop
imul
outs
cmp
mov
and
push
lods
imul
bound
jecxz
jae
mov
fimul
jge
sub
pushf
pop
push
popf
or
pop
mov
xchg
movs
mov
ret
test
cmp
test
push
or
add
dec
sbb
push
jmp
push
mov
sub
and
pushf
pushf
push
or
mov
dec
sub
mov
dec
pop
pop
inc
and
pop
mov
outs
enter
test
xchg
cmp
cmp
push
add
(bad)
test
xor
ds
dec
pop
mov
gs
out
stos
cs
inc
test
int3
adc
popa
outs
hlt
sbb
ficom
adc
bnd
adc
les
push
dec
push
xor
clc
add
sbb
test
mov
enter
bound
sahf
lgs
sub
jg
retf
pusha
adc
xlat
call
das
adc
cwde
in
jne
ins
ret
sbb
neg
aad
mov
push
mov
xchg
and
xor
mov
sbb
pop
call
xor
out
jno
in
inc
xor
mov
fcomp
cs
cmp
leave
stos
test
push
inc
aas
std
movs
ja
mov
imul
dec
shl
std
fstp
(bad)
icebp
dec
jae
lds
cmp
or
jns
jecxz
mov
loope
je
lods
popf
ja
leave
loop
mov
and
pop
fisttp
xchg
stc
pop
fst
fnsave
popf
rcl
imul
pop
repz
pusha
xor
pop
add
dec
adc
jo
out
aad
fild
into
xor
retf
aam
xor
ds
arpl
aad
xchg
adc
daa
jg
or
add
sbb
mov
inc
imul
test
mov
repnz
(bad)
mov
shl
xchg
movs
adc
xchg
mov
int3
movs
fidivr
sub
cmp
mov
mov
mov
xchg
cld
jb
inc
ins
fstp
pop
or
ret
xor
jecxz
mov
mov
arpl
dec
mov
xchg
int
mov
xchg
sbb
ret
adc
test
arpl
popf
es
repz
nop
in
adc
scas
jl
and
push
sahf
or
sub
mov
arpl
inc
and
adc
and
inc
test
pop
popf
adc
lods
test
xchg
bound
sbb
pop
push
nop
and
dec
adc
inc
xchg
or
sbb
or
and
mov
or
adc
loop
and
mov
mov
jl
or
mov
mov
lahf
scas
push
mov
add
div
fbstp
jmp
scas
clc
jb
xor
mov
push
ja
inc
add
movs
aad
jns
dec
mov
out
push
dec
jmp
retf
ret
mov
stc
fimul
out
lahf
stos
pop
call
ja
sub
fild
dec
cmps
jp
adc
arpl
dec
sbb
jo
ret
rcl
mov
aaa
push
test
fidivr
repz
lahf
inc
jno
pushf
pusha
aam
pushf
fadd
aaa
lahf
les
push
adc
adc
test
outs
xchg
and
rcr
out
fs
sbb
jo
mov
push
sub
jg
push
cmps
mov
int3
jmp
mov
dec
push
xchg
cs
mov
dec
inc
jb
adc
(bad)
inc
test
cmp
pop
pop
inc
shl
pop
sbb
hlt
test
sti
push
or
scas
retf
in
imul
or
jle
mov
lea
(bad)
stos
cdq
clc
xor
mov
add
push
mov
adc
add
cdq
outs
xchg
jbe
arpl
sub
pop
aad
out
rol
cmps
(bad)
mov
(bad)
adc
xchg
pop
and
mov
in
out
cmp
xor
mov
cmp
pmaddwd
inc
ins
pusha
adc
sbb
xchg
sub
cmp
sbb
and
push
cmps
or
jb
mov
cmps
je
fwait
stos
mov
dec
pop
imul
push
adc
xchg
jnp
test
stos
loopne
xor
xchg
push
inc
push
jb
mov
aam
add
(bad)
push
loop
das
push
dec
mov
(bad)
or
xchg
sub
fnsave
cmc
sbb
mov
cmp
das
mov
out
rcr
repz
xor
out
ds
jns
cmp
xor
lock
cmc
test
shl
xchg
(bad)
icebp
add
mov
dec
sbb
stc
stc
cmc
in
push
mov
neg
in
mov
pop
push
popa
or
xor
mov
mov
mov
push
pushf
cmp
clc
dec
call
movs
nop
fmul
inc
or
addr16
pop
or
jno
cmp
ins
adc
ins
imul
inc
(bad)
dec
dec
push
mov
stos
xchg
inc
ds
ss
js
mov
cmp
cmp
popa
sub
cmp
nop
mov
mov
xchg
jns
dec
adc
mov
sub
mov
xchg
sbb
pop
test
mov
outs
fsub
ja
lahf
mov
outs
mov
cmp
mov
mov
fisubr
cmp
movs
int3
js
lds
xor
cld
xchg
jae
std
inc
jae
stos
daa
adc
aam
stc
pop
(bad)
xchg
pop
xabort
stos
pop
mov
shl
aad
mov
int
sub
push
pusha
imul
mov
add
mov
test
and
out
popa
test
sbb
mov
stc
mov
jns
out
jnp
mov
leave
in
push
int3
ffree
dec
pop
jmp
pop
fidiv
into
outs
nop
pop
lea
ins
jnp
fisttp
inc
dec
std
(bad)
sub
jmp
imul
cmps
mov
(bad)
out
(bad)
fwait
push
fcomp
stos
outs
lock
lods
test
fsub
inc
jmp
push
jl
imul
adc
push
clc
or
(bad)
and
xchg
shr
inc
and
push
mov
pop
adc
inc
sbb
lock
test
jecxz
imul
xchg
mov
inc
stos
pop
pop
sub
repnz
retf
cmp
in
dec
sbb
and
mov
test
imul
jp
jo
adc
xor
inc
xchg
cmp
pop
retf
js
inc
push
and
imul
loope
sti
sbb
scas
dec
xor
std
push
fnstenv
mov
popf
popa
test
cmp
stc
es
inc
sub
imul
movs
retf
rol
ins
lahf
and
popf
mov
fist
inc
cwde
mov
xchg
sbb
xor
retf
mov
ins
stc
arpl
loope
data16
mov
call
push
jns
test
daa
cld
cmc
clc
pop
mov
shl
dec
sub
outs
sbb
adc
pop
es
push
xchg
inc
inc
test
or
outs
pop
iret
das
and
(bad)
jnp
pop
jmp
fcmove
pushf
mov
fst
ss
jne
add
inc
dec
addr16
fimul
mov
dec
ins
int3
pushf
popa
jmp
retf
cld
cmp
jae
mov
sbb
pusha
push
je
xor
gs
retf
sbb
(bad)
sbb
inc
mov
jmp
jle
cwde
or
ins
bound
jmp
pop
mov
jl
adc
sbb
jo
hlt
movs
fild
test
sti
pop
dec
data16
stos
and
or
cld
rol
inc
(bad)
lock
add
and
mov
(bad)
fcomp
lahf
call
fsub
and
shr
int3
dec
fisub
add
or
sti
sub
movs
repz
(bad)
into
aad
(bad)
sub
xchg
pop
cld
cs
and
clc
mov
enter
jecxz
push
fnstsw
out
xor
dec
xchg
xchg
scas
bound
push
ret
retf
inc
dec
ja
mov
push
test
call
call
jmp
push
mov
test
push
clc
iret
lds
pop
mov
jmp
push
(bad)
call
xchg
xor
fdiv
and
mov
into
inc
(bad)
push
fnsave
pusha
inc
cmps
clc
imul
xchg
call
adc
fcomp
inc
int3
fist
test
xor
fild
call
cmp
pop
pop
movs
xor
or
lock
aam
sub
adc
loopne
pusha
sbb
out
mov
xchg
mov
outs
out
cmp
clc
push
into
pop
or
sbb
pushf
cmp
mov
push
clc
rcr
test
repz
ret
pop
lds
js
xlat
(bad)
std
call
out
jbe
imul
imul
int
data16
pop
(bad)
in
mov
mov
sti
out
sub
dec
out
outs
iret
add
mov
pusha
push
or
lahf
scas
(bad)
sbb
dec
cmp
es
arpl
scas
xor
adc
mov
push
push
addr16
lahf
js
pop
push
mov
mov
xchg
sbb
test
cwde
jge
cwde
fnstenv
xor
fcomp
push
mov
mov
pop
mov
sub
stc
mov
cmp
adc
and
fisubr
dec
je
pusha
(bad)
call
sbb
adc
mov
ret
sub
adc
gs
and
dec
add
add
jmp
inc
outs
inc
pushf
inc
pushf
push
mov
pop
xlat
lea
adc
ds
mov
test
or
jl
in
imul
jle
neg
and
cvtps2pd
push
mov
jp
movs
(bad)
test
xlat
xor
mov
or
jnp
mov
pop
es
ret
jp
xor
push
pop
inc
fbld
or
(bad)
loope
dec
ret
mov
xchg
mov
out
dec
sti
dec
jb
pop
mov
jge
and
xchg
call
add
rol
loop
int3
pusha
enter
div
cmp
or
adc
cmp
xchg
and
mov
ss
stos
outs
into
scas
add
mov
xchg
lods
mov
fs
jmp
cli
scas
cli
stos
add
popa
jns
into
xor
jmp
retf
xchg
nop
popf
push
pop
lea
dec
mov
xchg
jge
mul
aad
add
jne
imul
imul
mov
xor
jnp
dec
pop
mov
mov
pop
cmp
sbb
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
aas
mov
and
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
int
inc
xchg
or
push
inc
jp
dec
dec
ja
ja
dec
aaa
ror
fs
or
or
mov
xchg
dec
xlat
inc
pop
push
imul
add
push
xlat
scas
inc
pop
ret
sub
dec
xor
iret
lds
push
mov
jb
int
jbe
add
mov
test
mov
in
cmps
sub
gs
imul
add
jmp
pop
push
sub
je
lods
cmc
xchg
cmp
jmp
inc
test
stos
pushf
ja
jmp
cmp
xchg
pop
and
jecxz
test
mov
sbb
stc
dec
push
loop
aas
cmp
mov
cmp
push
adc
or
call
ins
sub
sbb
hlt
mov
adc
scas
nop
xchg
scas
inc
xchg
lea
test
pop
dec
or
mov
dec
stos
cmps
cmp
mov
pop
es
fwait
lods
jmp
jmp
sbb
sub
add
xchg
sbb
(bad)
jne
xchg
jge
out
rcr
mov
mov
inc
enter
xchg
and
arpl
out
(bad)
pop
cwde
push
or
xor
push
addr16
repnz
inc
dec
adc
xchg
jo
fstp
sti
daa
sti
push
sub
or
sbb
xchg
cmp
test
cmps
or
imul
dec
jecxz
or
add
cmp
repnz
repnz
ret
retf
lods
push
imul
(bad)
(bad)
sub
pop
cmp
xor
or
cmp
or
iret
aaa
jmp
xchg
jns
outs
dec
loop
mov
jbe
data16
test
pop
ins
inc
xchg
xchg
cdq
scas
or
rol
sub
mov
enter
jl
lods
js
jl
cdq
in
fstp
fsub
adc
inc
pop
out
sbb
mov
adc
dec
pop
leave
inc
and
in
sbb
inc
inc
popa
fdiv
ja
or
pop
scas
xchg
jns
(bad)
mov
dec
jl
mov
int3
adc
fsubr
repz
jmp
test
xlat
loope
enter
lds
test
mov
push
rol
push
(bad)
retf
popf
sbb
fldcw
ret
dec
add
call
(bad)
cmp
popf
dec
cmc
data16
jb
movs
outs
icebp
mov
pop
addr16
fistp
sub
in
xchg
inc
stos
pop
adc
xor
and
cli
fwait
mov
and
sbb
das
mov
(bad)
popa
les
je
pop
push
fld
cmp
in
push
inc
fld
jno
and
arpl
movs
mov
das
test
fstp
or
jle
cs
cmp
mov
icebp
xchg
pusha
sub
or
sub
imul
dec
mov
imul
dec
call
xchg
das
sti
pop
dec
into
push
addr16
cmc
push
mov
xor
dec
es
fwait
dec
xchg
shl
iret
nop
mov
mov
mov
mov
ja
in
popa
mov
push
adc
xor
sub
push
mov
pop
xor
lahf
pop
out
mov
fbstp
rcl
fabs
xchg
jne
and
les
ds
inc
fdivr
jle
jle
jle
xchg
fld
ds
and
sub
movs
or
inc
sbb
ins
add
jb
jmp
mov
mov
pop
mov
pop
jge
xchg
jge
pop
inc
fdiv
push
out
adc
clc
or
jecxz
dec
cli
shl
mov
stos
push
mov
out
data16
das
jge
push
sti
inc
sub
push
mov
iret
adc
adc
cs
mov
mov
pop
test
adc
inc
test
jnp
mov
mov
out
into
or
sub
sbb
nop
push
movs
sub
push
cmova
mov
mov
mov
not
(bad)
push
mov
(bad)
and
jno
cmp
retf
sub
les
jecxz
bound
stos
adc
stos
ins
shl
out
out
mov
sub
mov
and
xor
out
loopne
lods
(bad)
xchg
xchg
data16
ins
in
sbb
into
adc
in
enter
inc
(bad)
shl
push
arpl
inc
cmps
adc
mov
(bad)
retf
dec
out
adc
cmp
or
hlt
or
cmc
popf
ror
ror
mov
xor
sti
dec
pop
data16
or
mov
call
shl
mov
ds
es
jmp
test
fld
pop
fist
jecxz
mov
in
lods
int3
mov
repnz
retf
movs
pop
add
mov
jae
int3
jne
adc
data16
shr
push
xchg
in
add
aam
ret
inc
mov
adc
push
ret
dec
pop
mov
add
iret
or
(bad)
loopne
push
xchg
mov
out
loop
lahf
xchg
ins
sub
nop
dec
mov
ret
bts
fwait
lds
mov
jecxz
mov
arpl
gs
loopne
pop
or
xor
or
pop
jmp
push
rcl
pop
fst
fdiv
aaa
imul
and
mov
test
cmp
mov
outs
mov
jl
pop
pop
out
ja
adc
and
adc
mov
sahf
retf
mov
jns
scas
xchg
sahf
push
retf
jmp
leave
fisttp
sbb
pop
jbe
test
imul
sub
mov
pop
daa
and
add
cmc
mov
xchg
xacquire
jmp
and
sbb
movs
xor
ficomp
or
fs
inc
mov
ret
jae
rcr
jecxz
dec
inc
aaa
jb
xor
xchg
pop
pop
push
xor
js
fisttp
outs
jmp
shr
inc
adc
scas
call
push
ret
add
inc
push
mov
pop
push
sar
push
scas
sub
aaa
mov
repz
scas
aaa
leave
inc
mov
add
inc
test
mov
xor
pop
je
ds
repz
add
cmp
cs
dec
or
inc
jns
test
push
mov
and
and
push
cmp
loope
(bad)
popf
push
or
push
dec
(bad)
loopne
popf
(bad)
cmp
sar
add
fwait
enter
clc
jns
test
pop
push
daa
sar
push
mov
rcr
and
mov
outs
xchg
adc
xchg
out
sbb
dec
jmp
(bad)
cmps
sub
imul
outs
aad
mov
test
clc
xchg
sbb
sub
pop
popf
retf
sbb
neg
or
repz
fdiv
pop
pusha
repz
neg
push
xchg
stos
out
mov
in
scas
pop
ins
sub
dec
push
call
inc
lods
std
test
enter
ficomp
adc
cmp
jmp
adc
jp
call
outs
push
pop
lods
cli
clc
and
in
sub
das
int
imul
jg
push
aas
shr
push
in
xor
(bad)
lods
jae
(bad)
icebp
out
ror
ror
jns
lods
je
jne
mov
in
pop
cs
or
and
mov
adc
jl
sub
sub
stos
adc
outs
push
or
cmp
and
repz
xchg
sub
cdq
sbb
sub
xchg
outs
leave
sbb
xor
fild
inc
adc
loopne
outs
std
in
outs
xchg
iret
int3
sbb
mov
add
xchg
lahf
jns
add
mov
scas
inc
sub
and
sbb
sbb
mov
pop
mov
leave
jmp
fcomp
cmp
iret
sbb
nop
call
jge
inc
adc
push
in
xlat
sub
pop
push
inc
and
pop
mov
das
cmc
or
iret
std
gs
jns
dec
mov
in
xor
adc
push
fild
sub
mov
outs
mov
je
icebp
dec
fs
push
sbb
ret
or
add
pop
lods
and
mov
addr16
lods
aad
test
jle
(bad)
(bad)
(bad)
mov
sbb
fdiv
mov
pusha
xor
test
mov
dec
mov
cmp
int
in
mov
add
xchg
dec
jle
int
sar
mov
div
aas
sbb
(bad)
into
xchg
dec
sbb
mov
push
rcr
imul
fst
aaa
jbe
xor
jne
cmp
push
and
lock
push
ficomp
outs
cmp
cld
cld
sbb
lea
imul
imul
test
out
(bad)
cmps
fadd
imul
out
jmp
add
jl
dec
jl
jle
xor
mov
cdq
call
or
inc
loop
fucom
inc
push
adc
or
and
xor
retf
xchg
lds
or
xchg
sbb
push
add
xlat
push
jbe
std
outs
dec
pop
and
sbb
mul
pop
out
(bad)
mov
dec
mov
test
or
scas
test
jb
out
sub
fcomp
popa
outs
and
hlt
retf
push
adc
adc
pusha
ins
dec
mov
(bad)
mov
dec
mov
sub
push
mov
lahf
repnz
sub
pop
push
clc
pop
ins
cmp
add
nop
mov
das
adc
iret
call
xchg
gs
inc
aam
fimul
jo
mov
and
outs
mov
or
jmp
outs
sub
add
adc
dec
cmp
mov
xlat
mov
adc
add
sub
jge
ins
in
nop
xchg
adc
xchg
jne
cli
push
cmp
repnz
scas
adc
leave
dec
xchg
mov
cmp
cmp
jbe
idiv
das
aas
pop
dec
adc
aas
arpl
inc
xchg
xor
dec
and
xor
addr16
mov
cmp
loopne
test
ins
fimul
sub
sbb
rol
push
inc
fs
adc
(bad)
retf
repz
sub
mov
xchg
inc
daa
xor
rol
icebp
(bad)
cdq
dec
jb
ins
lds
dec
dec
stos
repz
sub
pop
mov
mov
lods
(bad)
add
sub
and
(bad)
cmp
xor
xor
adc
cs
jle
inc
gs
sbb
(bad)
(bad)
adc
sbb
iret
(bad)
jae
push
test
repz
xor
scas
push
aas
jmp
cmps
or
add
jae
pusha
push
mov
addr16
fs
popa
cmps
jns
scas
movs
hlt
adc
push
sbb
in
push
in
sbb
test
jo
div
cld
test
(bad)
adc
es
inc
add
loop
pop
or
sahf
mov
fsubr
adc
add
inc
xlat
(bad)
dec
mov
cmc
cmp
fistp
das
xchg
(bad)
xchg
inc
(bad)
shl
push
mov
out
jge
dec
push
xor
pop
(bad)
aad
les
jns
bound
lds
mov
xchg
fild
(bad)
mov
rcl
xlat
cdq
(bad)
mov
aad
ret
mov
out
and
mov
jecxz
test
cs
or
jge
fisttp
jae
js
xor
lods
(bad)
push
pop
mov
jle
adc
push
hlt
cmps
lods
sub
loop
pop
jp
adc
mov
mov
fwait
enter
sbb
lods
mov
or
fwait
sahf
mov
cwde
mov
pop
repnz
mov
gs
dec
push
or
add
xchg
mov
or
ins
test
xchg
mov
adc
lock
sbb
loopne
rcl
loop
(bad)
(bad)
jbe
stos
sub
call
fchs
imul
stos
mov
push
xchg
pop
and
jmp
dec
call
loop
daa
retf
pop
mov
mov
bound
add
mov
popa
sub
stos
inc
mov
dec
xor
loopne
inc
cmp
mov
ja
add
add
test
cmp
das
jmp
dec
jmp
pop
push
fdiv
inc
test
mov
je
cli
mov
es
out
push
loopne
inc
mov
rcr
sub
cdq
or
or
ja
popa
mov
loope
cmp
clc
das
aaa
(bad)
out
or
and
pop
jb
dec
mov
sub
dec
dec
fwait
sbb
icebp
jecxz
icebp
(bad)
outs
or
xor
iret
xor
lahf
imul
es
or
(bad)
push
ja
pop
or
lods
adc
cld
cmps
dec
push
push
rol
cmp
xchg
and
jmp
sti
test
test
or
lock
sub
adc
ins
xchg
or
movs
push
cmp
cld
xor
and
xchg
in
mul
pop
jge
out
lds
pop
jne
lods
ret
or
aas
push
sahf
les
cs
aaa
inc
(bad)
stc
mov
sub
fwait
jecxz
rol
sub
icebp
fistp
test
stos
pop
inc
(bad)
sub
pop
and
sbb
sbb
jno
pushf
mov
adc
mov
out
ss
inc
ja
inc
mov
popa
movs
jbe
jmp
inc
and
mov
xor
pop
sub
xor
loop
pop
test
sahf
sbb
das
cmc
loop
dec
sub
pop
xchg
pop
mov
dec
data16
mov
hlt
xchg
sahf
jecxz
sar
leave
xchg
lds
lods
(bad)
and
call
sbb
jle
and
mov
test
sub
shr
inc
xchg
shr
not
sub
iret
es
push
jo
mov
xchg
and
fstp
adc
test
iret
aam
inc
inc
cmc
bound
inc
jno
je
mov
or
cmp
cmp
and
push
jp
jl
jecxz
or
and
inc
push
inc
lds
and
mov
dec
(bad)
lods
sbb
movs
jae
adc
lahf
add
lods
adc
mov
ja
inc
xor
dec
int
adc
mov
js
sbb
adc
in
lods
mov
pop
cmp
iret
out
(bad)
in
or
push
cmc
push
xor
push
sub
xor
or
rcr
cmp
adc
fnstcw
push
setge
clc
test
jb
sub
cs
lds
(bad)
mov
xchg
mov
sub
inc
repnz
mov
call
or
(bad)
sub
out
mov
sbb
sbb
imul
test
dec
mov
mov
lods
cmc
imul
fbstp
pusha
mov
sub
fld
adc
repz
test
(bad)
inc
push
call
xor
dec
in
loopne
out
iret
mov
mov
es
fwait
or
mov
adc
out
adc
jecxz
mov
sar
inc
fdivrp
dec
adc
and
shl
fistp
out
mov
xchg
fnstsw
fs
ror
ds
fwait
retf
in
call
pop
push
daa
and
cmp
push
icebp
or
mov
pusha
sbb
dec
in
stos
cmp
cld
and
shr
fwait
in
outs
xor
xlat
stc
sbb
sti
ror
xor
mov
pop
add
mov
cmps
mov
movs
push
mov
add
mov
mov
push
push
fisubr
cmp
mov
mov
sti
das
retf
jno
iret
adc
pop
pop
fdivrp
out
dec
mov
xchg
add
repz
scas
adc
sbb
adc
push
loopne
cmp
test
iret
shl
mov
mov
mov
jecxz
aas
popa
clc
neg
push
clc
iret
jg
repz
(bad)
cld
out
(bad)
stc
jg
add
pop
jb
out
xor
xor
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
leave
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
pushf
out
out
fnsave
fstp
aaa
std
jmp
jae
fwait
out
call
pushf
out
xor
jl
in
repz
add
clc
mov
inc
addr16
inc
fs
cdq
test
sbb
out
push
add
jecxz
fwait
test
add
adc
mov
repz
mov
in
scas
fcomip
sub
aas
cmp
ret
pop
leave
pop
lock
mov
xchg
ror
jmp
in
push
out
dec
or
in
leave
das
sahf
sub
jmp
clc
cmp
and
stos
cmp
and
arpl
sahf
(bad)
cli
scas
imul
add
loopne
lahf
fiadd
jmp
sbb
inc
das
call
std
jmp
mul
mov
jge
sahf
sbb
movs
repnz
adc
mov
lock
push
stos
mov
dec
retf
mov
ins
pop
sub
or
cld
mov
fucomip
dec
mov
push
pushf
gs
lea
cli
xor
in
cmps
movs
bound
ss
test
mov
xchg
fbstp
sti
aad
cmc
adc
and
outs
rcl
aad
pusha
retf
pop
sar
loop
xchg
data16
call
popa
sbb
(bad)
lahf
pop
or
mov
aam
inc
xor
jne
cmps
lods
jecxz
pushf
int
enter
push
jmp
xchg
mov
sahf
xlat
or
inc
add
dec
and
shl
sbb
xchg
mov
pusha
push
mov
(bad)
ja
aaa
ss
mov
mov
lds
clc
std
push
push
lds
dec
repnz
scas
add
int
inc
neg
icebp
jle
push
jg
scas
mov
xchg
je
imul
popa
jl
dec
add
or
shl
dec
jbe
mov
jno
push
cld
fnstsw
ins
cwde
ins
mov
loope
push
rep
movs
scas
push
mov
sar
sar
scas
lods
xchg
mov
xchg
push
mov
add
jo
push
xchg
inc
(bad)
jbe
mov
scas
inc
push
mov
loopne
call
sub
push
xchg
and
shl
dec
and
pop
jg
adc
ins
mov
jecxz
cmp
pop
fstp
daa
icebp
iret
(bad)
xor
xor
dec
pushw
je
mov
fwait
stc
jb
push
or
inc
fst
cs
lods
fsub
fist
jle
enter
jnp
and
push
xor
sub
xlat
cmp
es
pop
and
pop
pop
mov
cmc
inc
cmp
mov
adc
dec
das
mov
out
xlat
fcom
mov
outs
xchg
inc
inc
aad
mov
pusha
shr
cli
aad
loopne
sbb
ss
out
cmps
inc
adc
mov
cmp
aad
adc
test
xor
push
leave
nop
or
std
ins
jl
es
in
shr
rcr
pop
aam
(bad)
or
hlt
add
push
sub
(bad)
iret
mov
dec
pop
mov
shl
jb
dec
dec
jmp
pop
mov
sbb
retf
cmps
fwait
std
inc
fmul
xchg
movlps
dec
mov
sbb
push
movaps
ja
fadd
jg
mov
and
sahf
imul
inc
outs
(bad)
pop
div
cmp
sbb
xor
ret
cmc
int3
sbb
jmp
adc
mov
xor
out
dec
push
push
(bad)
push
pop
repnz
cwde
xchg
mov
test
and
leave
mov
add
es
add
fs
mov
jae
popa
inc
inc
xor
push
(bad)
in
push
movs
sub
stc
pop
and
out
(bad)
in
adc
mov
add
out
cmp
(bad)
jo
dec
idiv
int
out
movs
dec
ins
test
pop
pop
cmp
mov
pop
and
dec
repnz
inc
(bad)
movs
jle
ja
xchg
or
das
(bad)
lock
in
inc
push
ret
push
adc
fisubr
pop
(bad)
mov
sar
shl
shl
or
adc
mov
dec
pop
fsub
sub
cmp
out
jns
retf
scas
mov
fwait
icebp
icebp
push
pop
cld
jle
call
ror
sahf
dec
scas
push
mov
xor
retf
fsubr
cwde
call
add
dec
and
adc
(bad)
dec
pop
push
inc
push
imul
cmp
cmp
mov
js
addr16
cmp
daa
shl
fwait
xchg
shr
sbb
and
(bad)
in
out
ss
sar
mov
sbb
ss
or
call
add
fst
outs
mov
ret
mov
fwait
mov
push
lock
gs
xchg
test
cs
leave
stc
sub
mov
pop
repz
jns
movs
das
dec
jl
movs
and
pop
mov
in
in
or
es
push
les
dec
mov
inc
mov
jns
sub
imul
int
push
mov
nop
aam
es
sbb
test
mov
xor
out
pop
(bad)
test
into
cld
jmp
pop
retf
fistp
mov
int3
pop
ret
repz
mov
xchg
cld
xor
or
out
je
test
aam
sub
lods
popa
pop
pop
pop
cdq
lea
ds
mov
cmp
in
das
and
mov
(bad)
aad
frstor
ret
jne
or
jns
xor
and
sbb
in
jmp
or
nop
addr16
cmp
sbb
test
sbb
repnz
outs
fld
mov
jmp
ret
mov
fucomip
add
jmp
mov
push
and
fsubr
push
(bad)
bound
adc
sub
add
sbb
loopne
fisub
je
inc
je
mov
fimul
dec
or
xchg
rcl
and
sub
dec
addr16
popa
dec
cld
loopne
xchg
lods
mov
push
dec
pop
xchg
or
aad
cmp
aas
jne
adc
sbb
dec
repz
imul
jno
dec
or
sub
adc
loop
push
fdivr
ficom
test
das
loopne
ins
popf
adc
jg
cdq
sbb
movs
leave
mov
inc
aaa
xor
mov
loopne
adc
jnp
addr16
mov
je
stos
adc
popf
mov
push
int3
mov
adc
adc
dec
mov
jo
cmp
fmul
and
pushf
xchg
mov
sbb
fld
sub
fbstp
xor
sub
pop
stos
pop
mov
das
xor
loop
stos
pop
call
inc
out
sub
mov
dec
in
push
fisub
ret
clc
and
(bad)
loop
sub
loope
mov
xor
jno
and
fld
in
jns
test
ficom
dec
hlt
(bad)
jnp
rcr
jmp
mov
sub
rcr
(bad)
mov
xor
fsub
cmp
jl
addr16
dec
test
jne
dec
aas
inc
pop
mov
sbb
arpl
imul
xchg
(bad)
fcomp
sar
push
dec
add
mov
repz
leave
cmps
xlat
scas
les
clc
iret
movs
and
mov
cld
push
dec
jno
std
jmp
fbstp
or
mov
(bad)
cmp
in
jne
fsub
mov
or
mov
dec
ins
test
add
mov
nop
xchg
out
mov
loop
jmp
loop
nop
stc
jb
loope
mov
dec
sti
outs
push
pop
xlat
ret
inc
xchg
dec
jg
or
rcl
mov
mov
iret
movs
ss
mov
or
push
std
mov
jae
xchg
(bad)
pop
mov
jl
(bad)
mov
cmp
jmp
out
ins
dec
cmp
in
addr16
sbb
sub
das
xchg
in
inc
jle
fmul
jmp
loopne
xchg
push
dec
adc
pop
xor
dec
dec
or
cmp
sbb
stos
lds
xlat
scas
in
mov
js
dec
xchg
int3
test
mov
lock
stos
or
mov
(bad)
(bad)
push
shl
fs
sbb
call
hlt
and
loopne
xor
dec
shr
nop
xor
sbb
es
scas
and
adc
and
in
and
and
jecxz
mov
push
out
fldenv
sbb
add
jnp
call
xor
mov
les
jmp
push
cmp
mov
outs
retf
pop
jne
pop
int
dec
rep
imul
jge
mov
fcmovnb
in
loop
das
push
adc
pop
mov
xor
jge
mov
stc
popf
jae
mov
mov
mov
pop
in
lock
adc
jmp
add
mov
scas
mov
mov
xchg
cmp
imul
adc
mov
adc
arpl
jb
ins
fwait
xchg
stos
cli
jmp
sbb
lds
inc
xchg
mul
inc
mov
sub
jo
in
add
cmp
repz
inc
int
fnstcw
mov
test
lods
add
imul
push
cmp
ins
mov
stos
add
sbb
fdiv
fisub
cmp
mov
adc
push
clc
dec
cmp
xchg
int
(bad)
cmp
mov
clc
add
(bad)
sbb
es
mov
and
aas
mov
ja
jge
loop
call
ret
pop
and
mov
fidiv
aas
pop
push
call
dec
retf
push
push
add
dec
pop
retf
cmp
and
mov
jge
outs
fisttp
mov
in
xor
js
movs
sub
inc
mov
pop
test
outs
(bad)
mov
dec
cmp
xor
stc
jb
cmp
jns
dec
shl
lods
add
and
mov
jmp
mov
add
ins
clc
xlat
cwde
add
packsswb
mov
movs
cmp
ins
movs
or
imul
dec
loope
ror
fwait
arpl
cmp
stos
inc
jecxz
dec
inc
pushf
sbb
rol
ds
(bad)
jnp
stos
adc
daa
mov
pop
xor
jecxz
mov
jb
jp
mov
shr
dec
xchg
sahf
arpl
ja
jge
aam
cld
cmp
adc
adc
out
stc
repz
aam
inc
maxps
mov
je
sub
inc
mov
cmc
(bad)
mov
(bad)
cmpps
xor
adc
xor
xchg
xchg
lock
(bad)
in
sub
bound
cwde
pop
xchg
inc
mov
bound
arpl
dec
mov
retf
clc
sbb
xor
in
push
sub
sbb
test
or
sub
pop
pop
dec
or
sbb
inc
stos
into
cmp
out
cs
addr16
lods
jo
jl
cdq
int
mov
cmp
sbb
dec
jp
loop
cmps
jge
sub
jmp
into
loopne
gs
shl
cdq
mov
and
adc
call
mov
cmc
sti
les
mov
sti
pop
in
jle
sub
and
retfw
pop
sbb
scas
rcr
popa
push
cwde
test
cmp
sub
dec
cmp
xor
div
les
pop
mov
mov
pop
cmp
int
xchg
aaa
dec
lods
inc
fiadd
inc
fimul
mov
dec
sbb
jo
bound
mov
xchg
aas
or
imul
sub
push
xchg
imul
scas
(bad)
jmp
jge
test
pusha
mov
cdq
fst
bound
xor
push
push
scas
mov
fiadd
sub
dec
add
mov
stos
mov
or
inc
out
bound
inc
loope
imul
gs
jge
stc
push
rol
or
or
mov
add
cwde
out
push
push
out
pop
test
add
mov
test
or
aaa
mov
leave
add
gs
fimul
iret
mov
push
fdiv
pop
aam
add
dec
sub
pop
sub
fdiv
sbb
repz
iret
sbb
mov
sbb
mov
je
in
in
call
and
std
xor
lea
jl
sub
mov
int
rcr
loope
sub
and
aam
enter
sbb
jge
into
in
lods
es
xchg
sub
mov
jmp
aaa
lahf
fstp
xor
mov
jg
mov
push
dec
popf
sbb
lods
inc
fs
pop
mov
out
aad
xor
js
dec
jge
sbb
fisub
das
mov
outs
push
jmp
push
adc
adc
hlt
push
pop
xor
pop
nop
in
imul
adc
cld
clc
and
inc
in
aad
dec
test
test
neg
out
cmp
push
pop
mov
fwait
xor
jle
sti
popf
inc
add
cmps
stos
(bad)
das
xor
(bad)
out
push
cmp
xchg
jl
test
cmp
dec
adc
push
lds
xor
or
adc
cmps
shl
dec
ror
ja
add
dec
jno
jnp
shl
(bad)
cs
lahf
mov
or
adc
mov
or
mov
arpl
fistp
mov
out
jmp
call
and
pop
in
stos
ins
adc
mov
arpl
loopne
cmp
ret
cdq
int
xor
inc
call
pop
pop
xchg
lds
das
xor
push
cmp
in
and
sti
cmps
jmp
cmp
sub
fadd
arpl
xchg
in
fadd
or
jb
xchg
sar
loope
mov
stos
mov
repz
sub
aaa
popf
mov
pushf
sub
shl
cmp
rol
pop
sub
xor
dec
cld
sbb
xchg
xlat
mov
shl
(bad)
pop
repnz
xor
sub
adc
data16
sbb
add
jne
sbb
pushf
push
imul
xchg
cmp
inc
xchg
(bad)
sub
hlt
repz
jbe
adc
or
in
hlt
xor
jbe
inc
retf
outs
add
and
xor
out
xchg
mov
dec
cwde
sbb
jge
cs
(bad)
mov
je
mov
dec
nop
push
pop
adc
pop
cwde
ja
aam
pop
jne
mov
or
jmp
mov
xchg
ins
jle
dec
dec
mov
dec
cmp
mov
fucom
xor
(bad)
cli
sub
jns
inc
xor
sub
js
div
movs
push
sbb
(bad)
cmp
scas
call
pop
push
pop
xchg
push
ss
xchg
fsubr
or
and
jecxz
mov
movs
xor
jp
in
retf
push
fwait
pop
das
repnz
push
dec
imul
movs
mov
cmp
shl
imul
sub
pop
mov
push
jl
pop
push
sub
outs
dec
ret
push
dec
(bad)
sub
loop
cmp
mov
mov
sbb
in
xor
mov
popa
xchg
bnd
adc
shr
das
les
adc
iret
jecxz
lods
in
fldenv
sbb
xor
sbb
sub
ins
inc
sub
aam
dec
mov
retf
jmp
dec
outs
push
into
dec
stc
sbb
cmps
adc
out
mov
cmps
lds
fdiv
xchg
push
xlat
aas
icebp
fmulp
mov
sbb
dec
push
and
pop
mov
pop
jb
test
mov
xor
jno
dec
stos
pop
mov
sub
jne
jmp
xor
neg
arpl
popa
stos
inc
into
inc
adc
xchg
outs
jl
sbb
or
out
push
cmp
mov
in
adc
and
es
fimul
jmp
aaa
iret
jmp
lahf
sub
mov
jbe
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
inc
ss
in
pop
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
dec
dec
ja
ja
dec
dec
dec
cmp
les
dec
dec
ja
leave
jmp
jmp
je
jmp
in
lahf
pop
add
sahf
scas
pusha
add
dec
cwde
pop
test
xor
fcmovnu
or
hlt
cmp
pop
dec
inc
jl
call
add
push
into
lea
push
mov
pop
sub
loopne
pop
popa
aam
movs
loope
dec
sub
sbb
adc
add
xchg
pop
push
clc
aad
push
icebp
dec
mov
daa
daa
out
jge
adc
shl
ror
mov
movs
cmp
std
mul
sar
stc
ret
ins
lods
mov
push
pop
int
pop
js
jmp
mov
mov
or
cmc
ins
push
pop
push
mov
mov
test
stos
in
adc
cs
lea
sti
inc
jnp
cmps
scas
mov
adc
mov
(bad)
ficom
aas
pop
pop
aas
xchg
pusha
int3
fidivr
mov
aad
je
sub
or
ret
sahf
push
mov
cmc
xor
test
pusha
(bad)
rcr
pop
mov
retf
inc
imul
scas
jbe
pop
xor
es
push
sub
jl
mov
pusha
push
lahf
nop
sbb
fstp
mov
add
pop
cmps
jge
repz
inc
mov
mov
cmp
cdq
dec
stos
repz
in
clc
pop
xchg
movs
jmp
test
and
xor
mov
stc
sub
movs
stc
jne
cli
stos
ret
loopne
mov
pop
lahf
mov
stc
adc
outs
and
or
add
push
movs
adc
icebp
ds
ss
dec
icebp
and
imul
inc
inc
daa
xor
cmps
stc
call
pop
xchg
add
lods
cmp
add
out
fnsave
adc
mov
outs
repz
pop
add
(bad)
mov
jne
test
adc
repz
inc
sub
fbstp
mov
cli
pop
clc
shl
sbb
sub
es
inc
lahf
shl
outs
loop
mov
cmps
add
movs
sbb
sub
ss
std
popf
leave
dec
cmps
jne
(bad)
push
sbb
push
inc
mov
in
pop
imul
pop
or
mov
xchg
sub
nop
add
push
leave
and
sub
arpl
inc
mov
push
test
mov
push
in
aas
or
mov
(bad)
dec
cmp
je
dec
jecxz
aaa
in
popf
dec
jl
sbb
pushf
cdq
sbb
add
jo
cmp
cdq
inc
add
mov
popa
cmp
xchg
mov
ror
imul
cwde
sar
nop
call
arpl
das
rol
push
(bad)
push
mov
dec
push
in
or
out
adc
sbb
push
pop
xlat
jmp
stos
jecxz
and
retf
(bad)
pop
cmp
rep
fisubr
fild
(bad)
(bad)
sahf
mov
div
mov
pop
jg
sub
mov
bound
aas
add
xor
dec
(bad)
xor
cmp
(bad)
xor
and
movs
inc
repnz
fst
rcl
jg
push
mov
pusha
movs
loopne
mov
push
daa
movs
xor
(bad)
xor
pop
movs
mov
sbb
cs
mov
loope
push
icebp
in
loope
jnp
xchg
dec
dec
cvtpi2ps
arpl
out
fucom
aaa
enter
movs
push
add
js
repnz
or
jle
cmp
xor
sub
push
mov
clc
mov
dec
or
jmp
sub
dec
jae
imul
pop
mov
xchg
sbb
pop
push
mov
test
mov
out
pop
stc
sar
mov
pop
dec
cmps
(bad)
sbb
aam
ret
mov
jl
fdiv
jmp
mov
mov
div
dec
xchg
and
es
fldcw
int3
(bad)
jl
adc
ret
cmc
inc
int3
call
ja
cmp
add
pop
xchg
lods
push
jl
in
mov
push
jae
xlat
push
nop
lods
cmp
jae
adc
jp
fcomp
in
sub
dec
xchg
pop
push
out
add
mov
pop
test
adc
xchg
push
jp
xor
xor
xchg
dec
jno
jnp
mov
in
ror
cmp
fwait
sub
scas
xchg
jl
sbb
hlt
mov
push
stos
or
movs
xor
cdq
and
xchg
imul
push
aas
mov
cmps
fcomp
aam
mov
stos
stos
push
call
jae
mov
inc
out
in
mov
fsub
push
add
jl
dec
(bad)
(bad)
mov
pop
pusha
push
add
hlt
jp
mov
add
cdq
xchg
aad
add
add
ds
fld
sub
sbb
adc
dec
cmp
lahf
into
aaa
sar
fidivr
ror
or
in
popf
sub
aad
mov
test
xlat
and
les
inc
and
rcr
popa
inc
gs
jge
push
fs
mov
mov
push
test
cmp
icebp
data16
repz
sar
xor
cs
ins
push
repnz
popa
inc
fsubrp
mov
imul
psllq
ror
push
inc
aaa
cmc
sbb
fld
or
adc
fs
or
loop
fs
xlat
xor
mov
pop
sbb
xor
cs
out
aam
pop
in
add
mov
inc
mov
outs
cmp
xor
fld
mov
add
cmp
cmp
icebp
call
movs
jae
pop
outs
adc
dec
jmp
shl
shr
outs
movs
sbb
movs
(bad)
mov
in
pop
test
pop
jmp
push
xchg
or
push
jle
pop
push
mov
push
push
rol
xlat
sar
jo
ins
jp
dec
iret
aad
aaa
jle
add
arpl
js
cwde
xor
daa
popa
mov
js
shr
movs
xor
adc
push
mov
js
fisub
jbe
inc
lods
stc
leave
dec
iret
dec
aaa
test
push
pusha
mov
das
jle
ins
dec
clc
movs
imul
pusha
mov
xchg
cmp
push
xor
jle
jl
jecxz
mov
movs
fmul
push
imul
cs
fld
sbb
aad
xlat
ss
cmps
mov
jmp
mov
fbstp
push
mov
aad
jmp
js
pop
jge
(bad)
out
pop
sar
and
sbb
out
lods
fistp
dec
movs
mov
xor
leave
aam
fsub
outs
jp
sbb
add
std
hlt
mov
xchg
sbb
sahf
aaa
add
mov
mov
sbb
xchg
(bad)
sbb
xchg
adc
pop
dec
icebp
aam
cwde
(bad)
and
retf
cmps
push
aaa
retf
push
icebp
cmp
cmp
xchg
je
pop
or
sbb
jbe
mov
inc
cmp
jg
xor
aam
out
add
ret
mov
inc
pop
xchg
outs
xchg
(bad)
jbe
add
in
mov
test
or
inc
or
aad
jae
adc
jns
(bad)
into
lahf
imul
mov
loop
mov
shr
fwait
shl
xchg
or
ins
adc
movs
ja
mov
adc
sub
shl
(bad)
into
sti
fcomp
rcr
popa
or
repz
and
mov
fs
and
mov
push
sbb
cwde
mov
cmps
mov
jbe
sbb
jno
pop
stc
adc
dec
ins
push
test
int3
sahf
cmp
sbb
sub
addr16
lea
mov
sub
adc
cmp
inc
dec
ss
ss
call
add
jne
adc
dec
mov
retf
test
scas
sahf
adc
add
ds
pop
dec
lahf
inc
in
ficom
pop
pusha
cli
sbb
fisub
pop
ins
ss
push
(bad)
mov
(bad)
neg
dec
in
mov
retf
push
rol
shl
xchg
pop
pop
retf
or
imul
loopne
(bad)
nop
out
pop
(bad)
fild
mov
and
outs
mov
adc
push
xor
cmp
int3
dec
aas
cmps
das
jecxz
pop
inc
test
xor
adc
xlat
and
clc
sub
in
fs
mov
ss
pmulhuw
and
cmp
ds
ins
lods
out
mov
fdiv
add
xchg
sbb
pop
or
jbe
retf
scas
jg
cmp
std
pop
add
pop
dec
pop
pmaddwd
retf
int3
sub
mov
sahf
repz
mov
jmp
mov
cs
or
pop
gs
adc
stos
xchg
nop
mov
lock
hlt
xchg
pop
jno
je
lods
mov
dec
sar
or
jle
neg
iret
mov
pop
aas
sbb
popf
je
cdq
fmul
xchg
inc
scas
xor
and
or
stc
mul
dec
pop
test
fbstp
push
xor
cwde
les
sub
fs
push
or
jmp
or
ja
pop
xchg
in
(bad)
jne
mov
mov
or
inc
jp
arpl
cwde
and
scas
loope
or
clc
xor
add
pop
mov
mov
psllw
jmp
push
add
xchg
shr
imul
loop
dec
in
xor
es
in
sbb
or
fsub
fdivp
mov
inc
and
ret
lock
(bad)
(bad)
ror
stos
sar
xchg
leave
call
dec
add
mov
mov
cmp
cmp
jne
xchg
repz
lods
loopne
dec
inc
fst
aas
movs
mov
xor
rcl
mov
mov
xchg
mov
inc
lea
sub
sub
retf
push
push
dec
arpl
inc
loop
cmp
mov
push
in
loope
cdq
cmp
inc
inc
cs
(bad)
sbb
mov
les
cmp
inc
inc
add
lahf
xchg
sub
xor
lods
mov
outs
movs
cmp
push
dec
(bad)
jmp
test
lods
cwde
sbb
mov
pop
loop
iret
inc
pop
inc
clc
or
sub
adc
mov
aas
push
ds
jns
mov
push
mov
rcr
dec
and
lahf
mov
mov
pop
mov
mov
popa
test
scas
inc
movs
pop
fidivr
sbb
mov
xchg
je
pop
lock
cmp
in
jg
pop
push
cld
lods
lods
sahf
movs
in
xor
xor
pop
(bad)
cdq
movs
mov
xor
out
or
imul
fcmovnu
mov
repz
aam
dec
iret
ins
aas
shr
pop
mov
adc
push
mov
jp
lds
add
cmp
sub
pushf
and
ins
cmp
pop
push
pop
jb
scas
jno
dec
push
push
lahf
xchg
jmp
imul
pop
and
mov
cmp
hlt
call
lods
arpl
adc
push
sar
dec
scas
es
cmps
or
(bad)
aad
push
js
stos
cli
push
sub
xlat
cld
mov
inc
mov
xchg
test
test
(bad)
jne
jp
mov
jl
aad
es
xchg
bndldx
jecxz
inc
and
test
stos
je
mov
sub
shr
cdq
loop
jns
test
dec
mov
imul
lahf
sub
mov
sahf
cmp
sbb
dec
mov
popa
ror
js
cmc
sub
jb
adc
aad
mov
dec
(bad)
xchg
xchg
(bad)
mov
js
popa
and
lock
out
mov
sub
int3
push
adc
push
push
aas
add
imul
push
sbb
cmp
aaa
cmp
lea
ds
xchg
mov
pop
jp
cmp
sbb
mov
cmp
xchg
mov
sbb
xor
pop
mov
push
xor
ins
sub
inc
sub
and
ds
ftst
sub
add
mov
inc
cwde
inc
loope
scas
adc
sbb
leave
jmp
cmp
test
add
out
daa
adc
(bad)
(bad)
mov
aad
fst
rcr
stos
and
jnp
js
mov
movs
arpl
je
jb
enter
and
pop
pop
inc
xchg
push
and
test
mov
sub
xchg
mov
movs
outs
push
jne
cmp
ret
sbb
mov
jnp
mov
in
mov
xchg
cmp
scas
xor
jmp
mov
or
jge
(bad)
mov
mov
sub
(bad)
and
mov
add
xchg
not
xchg
xchg
stos
pop
stc
pusha
adc
dec
lock
add
add
(bad)
sub
repz
div
(bad)
xchg
(bad)
in
mov
repz
sub
inc
movs
enter
ins
cld
cmps
aaa
sbb
int
jbe
out
dec
inc
jb
push
sbb
fadd
pop
push
pop
mov
xor
(bad)
pop
sbb
ret
and
es
test
out
mov
(bad)
pop
dec
stos
push
pop
xor
xor
scas
push
clc
jns
iret
fild
cmc
fiadd
fst
lahf
lods
retf
jnp
out
scas
or
punpckhdq
in
inc
cdq
inc
imul
clc
xlat
shl
ins
loopne
dec
icebp
in
adc
and
dec
shl
cmp
sbb
push
in
mov
inc
mov
les
inc
icebp
lods
imul
and
or
mov
movs
cdq
outs
dec
das
or
pop
imul
inc
mov
ss
stos
and
fsubp
inc
xor
jns
pop
xchg
call
jp
fcomp
or
lahf
int
dec
ds
push
mov
and
aam
ins
push
xor
lock
scas
adc
leave
out
fst
leave
jle
fist
ret
ins
(bad)
pop
mov
js
mov
add
retf
add
push
outs
mov
das
push
xchg
sahf
xchg
scas
push
lea
test
test
ficomp
(bad)
cmp
js
jmp
rcl
dec
cmps
imul
pop
pop
mov
sub
stc
out
pop
add
data16
or
or
jne
xchg
in
dec
sbb
div
call
jnp
rol
xor
ins
arpl
es
pop
dec
call
cs
pop
add
cmp
shr
jns
mov
test
mov
(bad)
ins
cli
pop
adc
clc
js
dec
out
and
and
stc
shl
adc
es
sbb
pop
xchg
div
or
pop
(bad)
in
inc
iret
and
lods
iret
mov
xor
sub
mov
cmps
test
movs
movs
inc
pop
aad
outs
retf
adc
ja
jge
aaa
shr
xchg
dec
xor
inc
xchg
dec
ja
mov
pop
mov
jo
push
scas
popf
loope
jno
pop
sub
movs
dec
aad
sbb
sbb
push
xor
and
xlat
shr
push
dec
arpl
and
jecxz
mov
xchg
mov
xor
dec
aam
into
leave
and
xchg
test
lods
sbb
int
jbe
into
jmp
dec
xchg
imul
je
popf
xchg
inc
or
cmp
sbb
retf
mov
scas
fidivr
ret
pop
jmp
mov
arpl
out
dec
jb
mov
stc
(bad)
popa
sbb
mov
jo
xor
xchg
push
mov
pop
int
pop
or
aad
inc
cwde
pop
xlat
rol
icebp
inc
and
fdivr
or
inc
mov
jne
cmp
xchg
inc
xor
pop
jbe
mov
inc
loop
neg
cmc
int
test
stc
fild
lods
sbb
cmp
rcr
jns
xor
clc
iret
jg
repz
(bad)
cld
out
(bad)
stc
mov
test
xchg
jo
pop
data16
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
sbb
cmps
fcmovne
jmp
dec
jae
int
test
fnsetpm(287
je
scas
mov
cmp
rcl
xor
jns
sub
fcom
dec
cmps
loop
aaa
hlt
sbb
mov
inc
push
pop
xchg
test
sub
scas
loopne
mov
fwait
arpl
xchg
and
and
repz
daa
stc
mov
int
jns
enter
pop
js
mov
mov
cs
bound
mov
pop
adc
push
outs
call
mov
cmp
sbb
add
cdq
test
xor
shl
jg
add
pop
mov
mov
pop
pop
mov
loope
adc
or
cmp
mov
daa
cmp
pushf
fs
stos
call
mov
dec
lock
out
sub
cmp
test
xor
sahf
xchg
not
push
cli
(bad)
mov
dec
pop
cmp
out
push
cwde
mov
addr16
loop
adc
pop
jp
rol
pop
xor
add
test
xlat
mov
retf
ins
sbb
xchg
sbb
jae
stos
rcr
xchg
fs
ret
jbe
inc
cs
mov
cld
add
fs
pop
inc
inc
jne
inc
std
dec
dec
push
(bad)
mov
hlt
out
repz
les
ret
cmp
sbb
adc
lahf
dec
fstp
outs
std
mov
inc
or
add
(bad)
stc
inc
out
mul
fcomp
xor
push
mov
mul
xlat
push
outs
adc
push
aaa
cmp
aam
xchg
aaa
cmp
seta
sub
inc
and
push
(bad)
cs
std
leave
fisttp
or
mov
retf
mov
nop
data16
loopne
jge
jmp
pop
jb
dec
into
jecxz
bound
scas
movs
in
push
imul
shr
inc
outs
sahf
xchg
sub
jp
scas
outs
mov
mov
xlat
fwait
xchg
pop
aas
dec
add
sti
bound
dec
out
lods
popf
pop
push
cmp
and
cdq
test
stos
mov
add
out
fisub
or
pusha
fcom
jns
sub
push
pop
shr
pusha
stos
stc
push
call
cmp
or
cmp
mov
sbb
jns
cmp
dec
lods
arpl
pusha
jno
pop
pop
inc
dec
xor
pop
jmp
xor
in
xchg
dec
or
push
pop
cmc
out
lock
shl
rcl
in
fsubr
cmps
cli
enter
push
push
retf
pop
pop
lock
icebp
fcom
shl
adc
pop
pop
jbe
jbe
rcr
sbb
movs
movs
xlat
xchg
stc
ins
jge
sub
icebp
mov
and
mov
fcmovnbe
dec
xchg
test
js
mov
and
lea
inc
push
mov
xor
adc
push
adc
out
jp
push
int3
aaa
mov
adc
lahf
push
xchg
mov
mov
jecxz
popf
aad
mov
fs
push
leave
mov
add
add
ds
sub
les
and
outs
push
push
xor
inc
mov
ret
stc
popf
cmp
jmp
jmp
jno
and
fcomp
xchg
lods
adc
inc
mov
mov
out
add
xor
adc
cmp
ficom
repz
xchg
(bad)
jg
xor
mov
out
fnsave
pushf
movs
cmp
ficom
sbb
icebp
cld
or
add
frstor
imul
sbb
xor
repz
rcr
cmp
(bad)
dec
sahf
imul
clc
test
fisubr
rcl
fadd
or
test
fmul
out
movs
xchg
and
and
(bad)
fsubr
out
(bad)
pop
imul
cmp
clts
dec
and
fldenv
lds
mov
call
sahf
add
adc
cmp
mov
push
idiv
aad
jle
mov
add
daa
ds
inc
cmp
out
mov
ficom
fadd
xchg
sbb
lods
sbb
fadd
loopne
inc
(bad)
mov
sbb
jo
(bad)
scas
lds
out
fbstp
xchg
les
outs
cli
pop
movs
stos
push
movs
jl
dec
ja
hlt
dec
push
jb
in
int
movs
xor
enter
call
je
mov
fld
stc
xchg
je
out
push
(bad)
stos
int
push
mov
sti
jne
add
dec
sbb
cmp
out
inc
lock
cwde
sar
and
mov
mov
js
mov
bound
mov
(bad)
dec
dec
fcom
enter
stos
mov
jp
add
or
aad
pop
movs
cld
add
(bad)
mov
adc
xchg
and
aaa
pusha
popf
lahf
mov
dec
out
jns
popa
jbe
retf
mov
fidiv
(bad)
mov
popa
mov
sbb
or
(bad)
sti
push
into
adc
neg
es
mov
mov
xchg
popa
int3
out
int3
xchg
or
data16
in
mov
dec
ins
or
mov
fistp
push
jno
repnz
(bad)
not
mov
cs
mov
(bad)
mov
fimul
fbld
retf
dec
cmp
loopne
fdiv
xabort
arpl
dec
jbe
jmp
or
stc
lds
(bad)
out
jne
(bad)
fs
mov
test
mov
inc
cli
mov
xlat
hlt
mov
int
adc
xchg
addr16
mov
lea
sub
sti
adc
jno
cmp
fdivr
repnz
jnp
cdq
scas
inc
scas
mov
(bad)
outs
pop
fcomi
push
dec
in
loopne
sti
test
mov
pop
sahf
aaa
jnp
(bad)
add
mov
or
dec
je
push
jae
test
pop
js
repnz
not
lods
xor
cld
jmp
cld
test
cmps
jl
shl
jmp
mov
inc
cdq
test
xchg
push
sbb
mov
or
jp
mov
mov
out
xor
sub
ins
mov
jmp
push
mov
retf
push
adc
dec
adc
inc
pusha
in
rol
lahf
adc
inc
ret
shl
stos
mov
mov
test
push
mov
adc
sbb
sbb
or
popa
clc
ds
dec
out
fidivr
movs
je
scas
add
test
jno
aaa
hlt
ret
cld
ds
inc
arpl
xchg
ss
out
mov
xchg
xor
fcomp
cmps
mov
pop
in
pop
in
cmp
stos
xchg
inc
pop
jnp
cld
mov
mov
leave
push
push
push
call
test
ret
aas
imul
div
shr
and
jecxz
sbb
mov
lock
cmc
mov
mov
push
xchg
(bad)
xchg
imul
pop
loopne
jns
div
test
xor
mov
adc
loop
hlt
pop
mov
adc
adc
pop
iret
pop
jb
cmp
jmp
ror
inc
push
cmp
push
adc
int3
bound
pop
shufps
cmps
jb
and
cld
stos
pop
(bad)
cmp
out
test
xchg
xchg
into
xchg
mov
dec
pop
aas
fild
mov
adc
add
pop
inc
pop
mov
xchg
(bad)
movs
into
test
adc
mov
push
int3
(bad)
out
xor
pop
sbb
and
xlat
mov
mov
and
les
sbb
loop
nop
add
fwait
outs
mov
jp
pop
mov
test
jg
ficomp
pushf
mov
ror
fcomp
jge
inc
in
loope
xor
mov
sbb
cli
js
xchg
cli
sbb
sub
mov
jo
fidiv
push
dec
mov
shl
xor
pop
ins
(bad)
ins
lods
stc
and
cwde
sub
out
and
movs
mov
fisttp
add
pusha
jno
js
sbb
push
pop
icebp
imul
bound
mov
shl
imul
cmp
mov
in
out
enter
mov
test
mov
arpl
xchg
sbb
rcl
outs
jnp
mov
das
loope
sub
inc
fwait
push
adc
enter
dec
nop
add
jecxz
sbb
popa
stc
add
and
push
(bad)
jne
add
stos
dec
adc
jnp
push
cmps
aad
in
push
mov
mov
aaa
cmc
pop
lahf
inc
push
aaa
jo
add
adc
mov
mov
iret
cld
xchg
loope
adc
add
cmps
out
pusha
mov
pop
inc
fs
xchg
sub
fnstenv
mov
adc
cmp
mov
test
push
sbb
cmp
ins
inc
xor
xchg
dec
inc
test
mul
clc
jne
cwde
mov
adc
cmp
shl
xchg
mov
push
fidivr
inc
xor
repnz
test
mov
daa
add
aad
sbb
repnz
retf
pop
(bad)
daa
mov
data16
icebp
add
and
push
in
aas
int
cwde
jnp
leave
cmp
gs
clc
jmp
into
mov
pop
cs
fild
clc
jg
xor
adc
lahf
jmp
stos
ds
int3
mov
push
xchg
outs
out
push
clc
icebp
leave
xchg
outs
scas
outs
add
sar
repnz
out
xchg
ret
dec
pop
inc
in
cs
push
sub
(bad)
punpcklbw
popa
repnz
shl
jg
pop
vpsubw
loope
jg
inc
adc
outs
cmps
xchg
jg
mov
mov
pop
les
test
push
add
ret
mov
cmp
inc
xchg
fdivr
out
and
imul
scas
xchg
jle
adc
mov
xor
mov
ret
push
retf
clc
push
mov
mov
dec
dec
xor
adc
movs
rol
vphaddudq
jmp
xchg
add
cdq
cmp
push
das
add
(bad)
shl
shl
rol
es
mov
adc
mov
scas
xor
ror
mov
pop
pop
sbb
mov
iret
push
test
cmp
xor
jle
mov
adc
into
in
(bad)
rcr
xor
mov
inc
sbb
inc
into
pop
xchg
addr16
or
add
jp
xchg
ins
movs
out
sahf
xor
mov
push
pop
jne
xor
pop
xor
mov
sbb
mov
ret
sub
adc
add
or
out
(bad)
hlt
rol
xor
enter
push
(bad)
jbe
and
clc
sub
adc
out
data16
add
dec
push
dec
ins
xor
or
cmp
push
or
in
push
fidivr
push
aaa
mov
adc
pop
mov
xor
inc
mov
xchg
xchg
retf
js
stos
xchg
lea
fist
or
mov
jle
inc
jae
out
out
pop
leave
push
repnz
xor
add
sub
xchg
fucom
add
sub
inc
xchg
shr
sub
(bad)
loop
dec
mov
loope
inc
paddq
nop
das
push
adc
jo
dec
test
aad
fidivr
pushf
imul
hlt
mov
push
push
pop
cmps
cmp
jl
push
or
push
push
mov
ins
fs
inc
and
out
fisttp
sub
pop
bound
aas
sbb
fucomip
sub
ja
mov
mov
jle
inc
push
xchg
retf
mov
sbb
inc
fidiv
cmc
movs
cmps
push
sub
aaa
sti
mov
xor
movs
jnp
cli
leave
mov
or
mov
mov
jg
clc
push
jl
jp
sbb
out
cmp
sbb
jl
mov
imul
push
xchg
push
adc
ret
pop
and
or
inc
faddp
mov
push
test
and
mov
and
push
ret
pop
or
mov
mov
and
shl
fistp
or
mov
aaa
mov
addr16
xor
fisttp
mov
gs
jmp
cwde
or
jmp
rol
jecxz
adc
repnz
popf
xchg
inc
adc
js
jne
cmc
test
pop
retf
ds
push
sbb
adc
inc
shl
sti
xor
mov
inc
jl
test
add
rcr
mov
jae
jg
(bad)
xor
(bad)
leave
icebp
push
shl
pop
sub
les
loope
xor
dec
dec
mov
mov
mov
mov
imul
hlt
xchg
xor
xchg
outs
call
and
inc
cmp
push
mov
pop
(bad)
mov
ss
dec
jnp
cs
call
enter
rol
and
int
adc
cwde
push
mov
jbe
jge
mov
jnp
inc
jmp
je
(bad)
std
mov
ficomp
jmp
fdivr
cmp
push
push
push
cmp
pop
jge
dec
mov
cmps
ss
jge
aam
xor
enter
mov
stc
jecxz
out
lahf
sbb
daa
sub
stos
pop
test
int3
addr16
sub
leave
imul
add
sbb
mov
jle
shr
or
push
cwde
sbb
and
into
fnclex
repz
movs
sbb
jg
mov
and
jl
xor
push
or
psubusw
add
mov
pop
pop
cli
dec
jb
aam
mov
ror
arpl
xchg
fnstcw
scas
cmp
aas
jmp
fistp
mov
jecxz
dec
and
jne
dec
nop
sub
dec
aad
cmp
mov
ss
push
das
push
sbb
lods
jge
nop
inc
adc
fsub
fs
xchg
mov
cld
jae
in
mov
pop
stos
ins
das
push
mov
jbe
lock
pop
and
xchg
push
adc
sub
popf
jmp
xor
sub
inc
inc
aad
sub
es
repz
mov
xchg
call
enter
pop
sbb
add
cmps
mov
lea
jp
sub
jecxz
mov
(bad)
jp
je
inc
xchg
popa
mov
fnstenv
(bad)
add
lock
rcr
(bad)
sub
dec
cli
gs
xchg
loope
cmp
in
push
mov
je
not
popf
scas
shl
and
or
xlat
sub
mov
push
cdq
fsubr
xor
cmps
(bad)
xchg
mov
int3
push
ins
loopne
sub
loope
ret
inc
mov
and
adc
pushf
xor
mov
test
sub
mov
shl
sub
cmp
sbb
jmp
xor
push
mov
add
int
outs
dec
xor
adc
and
mov
jbe
mov
ins
jne
loopne
sar
sub
jo
push
fistp
dec
(bad)
das
mov
fwait
sahf
xor
fdivrp
mov
cmc
pushf
(bad)
fstp
in
adc
stos
mov
push
mov
mov
jns
les
popa
add
nop
push
out
xchg
(bad)
data16
adc
add
icebp
aaa
jg
sub
and
(bad)
in
test
int3
mov
ds
mov
pop
loope
clc
mov
mov
adc
dec
imul
xor
loop
push
or
cmc
pop
cmp
xchg
jnp
test
mov
gs
mov
adc
in
test
jno
push
adc
shl
test
or
in
push
js
vpaddw
sub
iret
fdiv
jg
or
sbb
cmp
jge
rol
jg
pop
js
dec
jbe
(bad)
mov
fwait
mov
dec
jmp
jbe
(bad)
mov
clc
mov
ret
les
cmp
(bad)
stc
out
jmp
lock
or
(bad)
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
rcl
xor
lea
inc
cmp
inc
sub
inc
lea
xchg
sbb
cmp
cmp
add
dec
cmps
icebp
cli
add
sbb
js
mov
adc
mov
push
mov
mov
rcl
rcl
stos
sub
out
adc
neg
mov
adc
imul
sbb
leave
adc
gs
test
and
xchg
cmp
fimul
and
outs
gs
imul
jp
mov
jmp
xlat
mov
out
enter
jno
daa
mov
fs
mov
push
cmp
fld
mov
cmp
rol
mov
(bad)
fcom
xor
inc
mov
mov
bound
push
mov
xlat
lods
adc
paddsb
(bad)
jp
adc
jle
jmp
and
ins
movs
mov
mov
mov
int
add
test
push
(bad)
cmp
mov
inc
hlt
es
gs
jmp
xlat
mov
fs
cmp
cli
in
mov
add
xor
call
or
leave
aam
leave
(bad)
or
sahf
xor
ret
scas
push
data16
or
xchg
arpl
xchg
cwde
cmp
xchg
rcl
daa
into
xlat
xor
addr16
sub
sbb
pop
cld
lock
mov
rcr
dec
mov
adc
fdivr
or
adc
jmp
sub
aas
mov
push
scas
push
(bad)
push
lea
cmp
les
lahf
or
inc
mov
not
ds
mov
push
push
daa
add
inc
dec
dec
add
int
hlt
sub
pushf
movs
push
movs
dec
ds
cmp
pop
and
mov
(bad)
fwait
popa
add
adc
mov
rcl
jae
(bad)
call
xor
js
jmp
(bad)
retf
pop
std
cmps
in
icebp
es
pop
outs
push
jae
outs
and
adc
push
cli
popf
sbb
adc
and
push
ret
cmp
mov
std
add
mov
xchg
jmp
imul
and
mov
jmp
shr
cld
xor
sti
xor
arpl
xchg
js
inc
mov
jb
xchg
pop
xor
mov
xchg
xor
push
retf
or
arpl
push
cmps
mov
sahf
xchg
pop
dec
cmp
add
rol
lods
imul
outs
push
add
or
jmp
or
call
call
in
mov
(bad)
sub
dec
xor
sub
mov
push
lahf
leave
loop
jae
and
inc
sti
mov
and
(bad)
repz
retf
sub
mov
sub
movs
into
daa
dec
lahf
js
fcomp
add
push
retf
cmp
lods
cld
jmp
mov
mov
mov
mov
pop
mov
call
xchg
iret
mov
retf
aaa
cmp
and
xchg
adc
imul
jmp
call
jp
hlt
or
ret
mov
push
add
jecxz
test
adc
mov
dec
outs
ins
jg
add
sub
sbb
scas
jmp
mov
pop
clc
cmp
pop
stos
fild
aad
mov
out
fcomp
jbe
push
push
mov
pop
mov
pop
push
mov
lods
ja
mov
mov
ss
cmps
xchg
adc
xchg
cs
push
mov
out
mov
test
not
stos
fwait
sub
aam
inc
repz
aaa
xchg
out
inc
sbb
call
jno
iret
xchg
cdq
stos
movs
imul
out
(bad)
xchg
xchg
and
retf
jne
pop
jmp
and
bound
inc
sbb
mov
inc
nop
sahf
fadd
adc
push
adc
adc
xlat
adc
jecxz
sar
(bad)
adc
jmp
adc
lods
push
mov
mov
xlat
lock
push
push
push
xor
leave
sahf
mov
add
dec
mov
ds
add
xchg
sub
jl
stos
xchg
pop
(bad)
pop
sbb
sbb
ss
jnp
test
xor
and
jo
inc
repnz
push
dec
jo
ja
sub
jae
mov
xchg
repz
ret
jl
(bad)
cmp
retf
cld
inc
outs
dec
or
sar
add
ins
mov
ror
es
stos
in
xor
sub
js
ins
int3
arpl
push
or
pop
div
pop
xor
pushf
aas
adc
ss
add
or
push
push
das
movs
daa
test
rol
(bad)
jo
xor
inc
mov
call
repz
fwait
aad
les
xchg
jmp
push
pop
stos
test
cmp
test
test
mov
sbb
cmp
test
mov
std
bound
jmp
dec
pop
or
enter
jmp
in
ins
adc
sub
sar
mov
cmp
gs
xor
neg
pop
and
dec
fisub
(bad)
(bad)
push
jae
xlat
xor
pop
out
out
retf
scas
jg
retf
cmps
jmp
and
shl
mov
lods
je
push
loop
pop
dec
and
xchg
je
iret
shl
jg
inc
out
xor
jb
push
mov
sub
jg
test
and
cmp
jle
call
rcr
cmps
push
frstor
mov
pop
ja
cmp
loope
mov
test
cmc
clc
inc
jle
jno
fsub
push
bound
imul
shl
repz
stos
dec
jle
sahf
cmp
fnstcw
and
mov
shl
mov
xor
ffree
je
mov
jecxz
arpl
and
or
in
sub
push
pop
cmps
repz
(bad)
in
rcl
sub
(bad)
mov
xor
hlt
int3
pop
out
dec
je
into
xchg
sar
jbe
fst
jge
dec
mov
and
in
inc
sti
dec
(bad)
out
mov
xor
sub
jp
add
not
inc
int
movs
inc
xor
jae
ss
fldcw
xchg
popf
push
aam
mov
pop
xlat
xchg
adc
pop
pop
xchg
mov
and
fst
inc
clc
adc
div
jae
out
stos
scas
movs
std
rcl
(bad)
mov
mov
cdq
or
push
movs
push
jae
int3
or
add
int
js
sub
in
push
mov
(bad)
scas
push
push
popa
jo
xchg
pop
ss
imul
fisttp
dec
int3
icebp
nop
fwait
xchg
stc
out
jmp
mov
mov
jo
imul
std
rcr
cmp
gs
xchg
mov
mov
inc
sub
jb
xor
addr16
sbb
xor
ficom
sbb
and
mov
cmc
mov
mov
pop
cdq
push
lea
jl
push
add
(bad)
les
mov
mov
sub
xor
sbb
ins
push
jbe
call
mov
std
in
lea
leave
adc
sbb
jnp
or
sbb
xor
ja
dec
test
dec
xchg
shl
mov
adc
and
loope
sbb
jns
cmp
dec
ja
mov
dec
xor
xchg
enter
and
imul
sti
sub
loopne
xor
sbb
rcr
xor
cmp
pop
cmp
mov
fcomp
add
and
and
adc
loop
xchg
mov
push
repnz
test
cmp
ins
dec
add
and
lock
leave
(bad)
inc
cs
sbb
in
adc
(bad)
add
push
imul
sahf
jecxz
aad
adc
lods
aaa
adc
mov
push
jae
xchg
mov
or
inc
and
sbb
mov
or
dec
in
ret
dec
fsubr
dec
jecxz
push
inc
mov
js
jmp
scas
cmc
xor
dec
pop
mov
imul
or
adc
mov
sbb
sbb
xchg
inc
xchg
lahf
in
mov
pop
dec
xor
and
mov
repz
xchg
stc
ins
mov
cli
test
jg
lods
pusha
nop
in
dec
adc
add
pusha
pop
lods
(bad)
or
mov
mov
jne
cmc
jb
fs
stos
add
ins
in
retf
rol
and
test
xchg
sub
repz
mov
fwait
call
fcomp
popa
or
out
sub
sub
add
jg
or
int
xchg
jmp
jnp
rol
inc
dec
sub
mov
rcl
pop
or
lods
xor
and
inc
and
mov
dec
out
cmp
mov
mov
add
inc
cmp
fadd
jle
adc
mov
pop
cdq
adc
pop
nop
jnp
dec
mov
cmp
scas
fistp
(bad)
pop
inc
daa
iret
outs
(bad)
mov
sti
aam
test
dec
jmp
xchg
loopne
xchg
lods
jno
fs
pop
xlat
cmps
adc
cmp
inc
sub
pop
(bad)
daa
jle
das
mov
mov
pop
int3
jno
mov
mov
sbb
push
pop
mov
repz
es
test
jns
fistp
add
mov
sub
pop
lock
cmps
cdq
inc
loopne
das
shl
mov
or
xchg
in
aad
sbb
xor
mov
jo
ja
xchg
mov
out
sub
test
ficomp
sub
mov
(bad)
jl
mov
or
ds
aaa
(bad)
out
scas
aaa
push
fdivr
fstp
fsub
inc
sbb
(bad)
in
jbe
jmp
xor
inc
push
arpl
jno
inc
ins
and
mov
xor
pop
(bad)
popa
ret
sbb
mov
int3
pop
lds
cld
je
movaps
aam
ret
(bad)
in
(bad)
into
out
push
jns
adc
dec
pushw
mov
(bad)
les
aaa
cld
and
in
mov
in
dec
ror
mov
jmp
xlat
cld
popa
cmp
gs
jle
inc
jge
sub
inc
jl
shl
sbb
neg
mov
jecxz
clc
dec
pop
dec
push
ror
lsl
in
nop
sub
jnp
loopne
cmp
fst
hlt
sbb
push
lods
leave
jmp
xchg
sbb
pop
je
out
xchg
aaa
js
dec
mov
jle
pop
pop
inc
mov
daa
sahf
jno
aad
das
dec
xchg
pop
pusha
jecxz
sti
or
(bad)
das
(bad)
fsub
idiv
push
and
cmp
pop
outs
jp
xchg
and
(bad)
adc
movs
je
cli
movs
pop
xchg
int
sub
lahf
test
into
dec
and
adc
out
fidiv
mov
mov
mov
pop
fisttp
ficomp
ret
xchg
push
and
or
dec
ins
retf
mov
or
dec
nop
outs
mov
rcl
xchg
test
sbb
inc
movs
pop
sbb
jae
ja
sub
push
cmp
mov
sbb
retf
icebp
pop
jb
dec
fild
inc
imul
(bad)
arpl
popf
dec
shl
jb
or
mov
call
xchg
in
hlt
loope
movs
inc
sbb
mov
xor
lock
cmp
and
test
int
imul
mov
out
movs
(bad)
push
sbb
ss
pop
sbb
push
xchg
cmps
lock
mov
fcomp
(bad)
div
jmp
dec
clc
fnstenv
adc
cmc
inc
xor
sbb
ins
pop
outs
and
add
scas
sbb
pop
jne
ret
and
lock
loop
add
adc
std
in
jmp
int3
stc
nop
in
fs
inc
adc
mov
leave
gs
out
rcl
loope
in
mov
clc
jno
sub
in
jecxz
push
jmp
repnz
in
cmp
(bad)
idiv
inc
jecxz
sar
push
jmp
fdiv
movs
test
fistp
add
lahf
(bad)
push
xor
mov
mov
push
ret
jno
(bad)
aas
movs
in
dec
popf
div
mov
jecxz
test
push
shl
ja
pushf
add
pop
mov
cmps
cli
pop
test
xor
aad
in
mov
or
out
setae
mov
bound
cmps
ins
push
jp
pusha
jo
sahf
adc
jecxz
inc
mov
push
test
retf
xor
and
xchg
and
xchg
inc
in
or
fisub
xor
cmps
movs
mov
call
ret
mov
adc
arpl
mov
mov
(bad)
(bad)
add
push
sub
aad
add
out
(bad)
out
(bad)
and
mov
add
not
arpl
ss
mov
nop
mov
jb
jbe
aas
jne
mov
scas
cwde
pop
mov
movs
and
aad
stos
mov
enter
cmp
xlat
ds
sbb
mov
jb
xchg
cld
punpckhdq
sbb
mov
push
pop
test
rol
pop
dec
jnp
popf
cwde
pop
test
leave
jmp
or
arpl
add
dec
cli
add
mov
sub
sub
clc
fsub
aaa
test
rol
or
mov
in
jge
cld
xor
dec
lock
fs
movs
sbb
ins
out
scas
jmp
jne
lods
test
push
in
jns
xchg
jb
out
pusha
and
cmp
loop
jp
or
lea
xchg
lea
push
imul
outs
ss
inc
cld
mov
or
xor
jne
mov
sub
inc
jle
dec
jp
sahf
dec
imul
std
xchg
sub
shl
les
sub
mov
outs
jne
fist
sbb
cmp
dec
ja
mov
jb
aas
mov
dec
test
xchg
dec
mov
test
outs
(bad)
jmp
push
adc
or
mov
lds
xor
sti
fimul
out
gs
icebp
(bad)
(bad)
pop
les
inc
jmp
inc
adc
stos
sub
push
mov
psraw
jmp
xchg
test
xchg
push
or
cmc
adc
ficom
jecxz
retf
pop
in
xchg
or
add
adc
push
movs
mov
in
out
pushf
test
dec
cmps
ret
mov
jmp
add
pusha
std
cmp
out
ret
add
repnz
push
(bad)
jmp
cmp
push
mov
add
hlt
dec
push
xor
fsub
pop
cld
pop
cmp
movs
jmp
push
loopne
sbb
or
lahf
xchg
or
add
cmp
(bad)
and
retf
jbe
or
or
je
mov
ja
pop
sbb
stc
imul
lea
div
je
movs
mov
adc
and
in
rcl
stos
iret
aas
jnp
push
sub
jne
lods
js
pop
js
add
sub
and
xor
(bad)
sbb
push
shl
lock
adc
dec
dec
push
add
cdq
mov
stos
(bad)
pop
inc
js
sbb
imul
lods
out
mov
stc
xlat
or
mov
xchg
xchg
ins
fcmovnb
cmp
clc
out
jb
lea
jbe
mov
and
or
push
aaa
jno
cmps
add
ss
arpl
mov
data16
fild
icebp
dec
cmp
scas
fadd
push
sbb
xchg
hlt
imul
mov
data16
lea
popf
or
xchg
test
pushf
int
pop
popf
int3
sbb
test
das
clc
push
sub
(bad)
cld
repz
aas
(bad)
cld
repz
aas
call
add
mul
mov
cmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
das
cmps
sti
in
shr
(bad)
rcr
sbb
jecxz
(bad)
jmp
test
jmp
out
mov
icebp
add
lock
cmp
push
inc
fdivp
fcmovbe
repz
fdecstp
push
pusha
cmp
cmp
imul
retf
mov
scas
mov
int3
imul
call
jns
xchg
mov
call
popf
fadd
mov
je
ret
and
push
mov
xchg
mov
sbb
xchg
sbb
mov
push
ret
xlat
daa
test
push
(bad)
or
cwde
movs
push
fidiv
outs
push
div
ja
push
call
push
add
test
out
lods
fldenv
mov
mov
cdq
adc
mov
or
mov
ffree
(bad)
fadd
mov
popf
cli
leave
cmc
mov
push
(bad)
pushf
div
mov
dec
aad
push
ja
in
sub
adc
test
mov
jecxz
mov
and
sub
jl
mov
add
rol
call
dec
(bad)
in
mov
inc
cmps
push
setbe
sbb
dec
lods
shr
mov
rcl
daa
jp
std
mov
or
mov
aas
data16
jb
ja
daa
jmp
jns
dec
dec
adc
scas
or
aad
inc
inc
push
scas
mov
ja
imul
mov
and
jmp
jno
sub
call
loop
pop
jmp
test
test
cmp
fnsave
push
sti
jo
(bad)
(bad)
cdq
mov
jnp
js
adc
and
jo
stos
imul
ins
int3
out
mov
(bad)
bswap
xchg
repnz
sbb
leave
jo
sub
mov
outs
xchg
fnstcw
cli
dec
pusha
retf
sbb
into
push
mov
cmp
push
loope
lock
jmp
js
test
push
adc
jb
dec
mov
shl
or
lock
jmp
out
jne
add
mov
pop
push
xchg
les
cmp
push
mov
inc
add
xor
inc
pop
test
push
cs
fistp
pop
test
pop
adc
and
inc
aad
jns
and
fmul
sar
fcom
cwde
nop
stos
inc
push
ja
(bad)
jbe
imul
leave
push
adc
call
push
cmp
sbb
in
xor
(bad)
iret
sbb
fild
and
jae
mov
icebp
jo
loop
cmp
sub
and
je
(bad)
cmp
sbb
mov
iret
pushf
mov
push
sub
out
stos
fcom
stos
je
sub
aas
fmul
scas
pop
add
mov
mov
mov
aad
fnsave
or
inc
icebp
aaa
jnp
push
pop
aaa
repnz
not
aaa
in
fidivr
lahf
out
add
jb
jle
sbb
mov
cmp
adc
aam
inc
jmp
movs
mov
or
fcom
dec
popf
lods
jl
stos
cmc
fcomp
popf
shr
mov
dec
lods
not
xlat
push
adc
cmps
adc
sub
mov
xchg
push
pop
mov
(bad)
fisub
pushf
dec
stos
xchg
aad
and
bound
push
in
icebp
inc
inc
call
inc
xor
dec
mov
mov
push
nop
sub
dec
adc
fist
mov
sbb
movs
xchg
xchg
aaa
jp
push
push
xchg
mov
push
arpl
lods
and
dec
pop
pop
int3
dec
xchg
cmps
lds
loope
inc
and
push
data16
fsub
stc
sub
jbe
out
(bad)
iret
mov
scas
push
lods
adc
int
jg
jo
xchg
outs
adc
bound
jg
das
cs
test
push
jae
add
mov
lock
cmc
add
ins
xor
jecxz
loop
push
lods
mov
mov
cmp
(bad)
stc
aam
out
inc
test
mov
hlt
inc
dec
in
cmp
imul
(bad)
sbb
cmps
das
or
out
pop
ret
mov
aaa
jp
wbinvd
scas
ds
dec
out
adc
std
enter
movs
jne
ins
pop
shl
jge
jbe
jl
das
sbb
mov
pop
add
int
inc
dec
(bad)
dec
sbb
xor
push
fist
movs
jae
and
(bad)
fwait
scas
dec
int3
jne
stos
pop
mov
push
push
arpl
cmp
xor
mov
(bad)
fwait
repnz
inc
push
lods
sub
xlat
mov
and
imul
xchg
cs
mov
call
add
mov
push
cmp
push
mov
and
mov
icebp
xor
js
inc
fst
cs
jmp
not
(bad)
dec
jg
jmp
pxor
cmp
rcr
xchg
and
fsub
xchg
movs
cmp
jne
(bad)
scas
xchg
ss
push
adc
sbb
mov
cmp
jmp
es
cdq
pop
mov
adc
pop
popa
iret
fimul
mov
push
mov
loope
loop
inc
aad
mov
and
xor
test
adc
and
ins
pop
or
(bad)
xor
jp
xchg
sub
and
call
bound
inc
mov
cmc
xchg
(bad)
mov
sbb
aaa
popf
inc
sub
xchg
ins
aas
pop
sbb
ds
ins
adc
popf
jmp
pop
sub
cmp
add
or
addr16
adc
mov
cmp
and
rcl
fcmovu
ds
xor
movs
pop
mov
test
xor
fs
out
movs
bound
ret
xchg
pop
jno
xlat
sub
add
out
jne
mov
sbb
pop
rcr
jle
mov
or
ficom
movs
sub
or
push
xchg
movs
dec
movs
sbb
dec
mov
out
icebp
(bad)
rcr
fistp
rol
xchg
jmp
jg
push
and
pop
or
je
mov
add
cdq
(bad)
sahf
aad
fst
out
push
sub
push
jl
fist
jns
jns
mov
call
mov
xchg
jmp
test
adc
pop
push
mov
inc
jbe
rcr
aas
xchg
pop
mov
sbb
inc
aaa
(bad)
(bad)
push
add
xchg
dec
or
std
fwait
sbb
mov
dec
or
les
dec
ret
inc
aam
jmp
dec
cli
outs
pop
pop
jl
dec
mov
movs
pushf
pop
(bad)
lock
ret
pop
jae
mov
cmps
call
fst
std
gs
rcl
adc
xchg
cmp
mov
stos
rcr
mov
(bad)
gs
in
aas
cmp
mov
mov
lock
jmp
lods
imul
lods
sbb
jl
add
dec
sbb
add
(bad)
dec
aas
ret
sbb
fisttp
add
push
aaa
jecxz
ror
jns
inc
push
popa
scas
leave
stos
cdq
or
ds
test
mov
xchg
sub
call
or
adc
(bad)
sub
jp
jno
jmp
and
mov
mov
mov
in
jl
(bad)
sbb
xor
hlt
cs
neg
mov
shl
call
sbb
xchg
add
test
mov
iret
fidivr
mov
imul
mov
sbb
xchg
push
dec
xor
sar
pop
jmp
dec
std
cmp
ret
or
ja
and
(bad)
fucomi
jecxz
lods
dec
enter
ret
xlat
fwait
ins
scas
in
mov
mov
inc
mov
jl
hlt
mov
in
outs
ficomp
in
or
inc
popf
es
mov
rep
das
inc
test
repnz
push
fsub
test
rcr
in
pop
not
mov
lahf
in
fsub
inc
jne
ins
fsub
cli
out
and
js
lds
push
outs
cmp
add
std
xchg
les
mov
mov
add
sub
mov
xchg
data16
aaa
sbb
(bad)
aam
jge
push
mov
mov
xchg
and
mov
push
sub
aam
cmps
(bad)
jmp
mov
inc
push
rol
sub
scas
fdivr
pop
gs
lods
cmps
mov
add
out
pop
xor
xor
mov
scas
xchg
lods
dec
repnz
out
lea
loop
arpl
push
aaa
mov
daa
in
addr16
mov
jo
aad
and
adc
xchg
push
scas
jae
into
lods
(bad)
(bad)
bound
jecxz
push
(bad)
sub
cmp
pop
in
cmp
in
or
ret
mov
jnp
jg
movs
ficomp
aam
xchg
jo
jns
movs
jnp
std
mov
inc
scas
(bad)
stos
retf
pop
out
mov
add
sbb
pop
or
xchg
fstp
ds
xchg
repz
repnz
xchg
stos
mov
sbb
sub
mov
(bad)
jg
ror
mov
aaa
scas
xlat
pop
inc
ins
out
xchg
sbb
dec
lock
dec
outs
ds
xchg
jo
(bad)
popa
inc
push
adc
lahf
push
mov
xor
mov
sbb
mov
icebp
jbe
and
pop
daa
jge
icebp
push
cwde
push
xchg
mov
or
cli
mov
pop
push
push
xor
xchg
cmp
hlt
lea
adc
ins
add
dec
leave
inc
jmp
movs
cmp
jmp
popf
xor
ja
outs
(bad)
pushf
adc
jmp
sub
mov
loope
ins
in
inc
iret
push
retf
push
mov
or
sub
dec
ins
sahf
mov
out
add
(bad)
cld
push
sub
shr
push
cmp
mov
inc
in
sub
dec
scas
jnp
frstor
cmp
(bad)
into
mov
nop
cmp
lock
icebp
repnz
sbb
mov
les
dec
fldenv
xchg
test
inc
xchg
mov
sub
xchg
sbb
and
ficom
dec
aam
call
dec
jae
cmp
push
(bad)
adc
pushf
pushf
outs
mov
dec
sub
(bad)
jbe
mov
mov
or
outs
mov
adc
mov
sahf
cmp
jae
(bad)
sbb
sti
xchg
sub
adc
adc
add
out
std
xchg
(bad)
imul
push
pusha
mov
jnp
adc
popf
(bad)
fldenv
jmp
out
xchg
pop
gs
jmp
adc
cmp
cmps
test
push
xor
popa
lods
(bad)
mov
mov
mov
rcr
push
mov
gs
xchg
pop
adc
xor
xchg
mov
(bad)
popa
out
int3
aas
xchg
jmp
scas
jb
call
ja
int
shl
mov
jo
and
movs
push
cmc
pop
or
(bad)
(bad)
leave
xor
scas
int3
fstp
movs
popf
in
add
sbb
sub
imul
xor
call
data16
shl
push
in
mov
xbegin
jmp
sbb
dec
out
sar
and
sbb
test
or
ret
pop
fsubrp
ror
fiadd
mov
test
mov
sub
fmul
test
daa
adc
sbb
gs
xlat
out
fild
ins
daa
dec
jp
ins
mov
inc
pop
adc
dec
jno
in
call
mov
std
sahf
call
mov
inc
xlat
popa
push
add
dec
cmp
sbb
call
pop
imul
scas
es
adc
inc
push
loopne
(bad)
mov
jl
jno
cmp
iret
inc
imul
shl
adc
push
add
je
mov
jl
mov
xchg
inc
fsubr
int
mov
add
jle
push
int
mov
and
sbb
mov
mov
and
mov
icebp
push
mov
js
scas
jl
and
test
adc
aam
test
pop
mov
push
fstp
xchg
(bad)
mov
pop
cs
inc
ret
retf
mov
lods
fs
out
fbld
call
js
add
dec
(bad)
sub
mov
cmp
(bad)
mov
or
outs
xchg
(bad)
or
jg
stos
shl
push
aam
mov
lahf
mov
adc
loope
and
mov
lds
scas
cmp
lahf
adc
pushf
cmp
int3
out
div
dec
int
pop
lds
xchg
call
and
repnz
fucomp
pop
jne
nop
call
cdq
push
mov
or
(bad)
aad
pop
xchg
idiv
sbb
add
inc
cmps
cmp
icebp
fcmovnb
fucomi
icebp
cli
push
cwde
retf
jnp
pop
aam
mov
pop
icebp
loope
push
fistp
lahf
(bad)
add
icebp
scas
sbb
popa
js
cmps
add
sahf
test
jmp
mov
test
aaa
jg
fcomp
dec
sar
leave
lods
lahf
xchg
dec
fcompp
xlat
push
add
(bad)
jmp
in
jp
pop
jb
xor
int
(bad)
jmp
(bad)
mov
jbe
fcmove
dec
xor
push
scas
push
adc
xchg
outs
retf
adc
vcmpps
inc
or
clc
mov
in
push
pop
xchg
in
ficom
(bad)
cmps
xor
add
sub
jg
cli
adc
or
cmp
ror
repz
scas
sub
(bad)
jns
xchg
scas
(bad)
ins
sub
or
jbe
cs
bound
xchg
shl
sahf
dec
add
xor
aad
sub
shr
fwait
addr16
or
popf
mov
je
mov
jmp
pushf
sbb
(bad)
mov
add
xchg
stc
pop
in
nop
lds
mov
and
xor
lock
aad
sbb
out
add
xchg
pop
lods
xlat
jno
adc
fist
push
cmp
mov
xchg
mov
das
mov
push
xchg
or
and
sbb
fsubr
int
sbb
adc
test
dec
jno
mov
jbe
pop
scas
sbb
jecxz
jno
shr
jae
sub
inc
shl
xchg
and
add
into
lds
ins
movs
push
lock
outs
cwde
aas
push
push
das
sub
(bad)
jns
and
ss
lods
mov
jecxz
or
(bad)
mov
mov
jno
mov
pop
mov
das
lods
mov
fistp
pushf
jo
test
mov
mov
imul
aad
sbb
es
and
sub
mov
call
aad
popa
hlt
pop
jns
mov
jmp
fisttp
(bad)
bound
aam
xchg
dec
pop
or
stos
mov
shr
adc
mov
mov
in
cdq
scas
pop
lahf
pop
int3
scas
loop
iret
call
scas
bound
push
dec
xchg
aad
mov
mov
push
outs
in
xor
cmp
adc
rol
or
jmp
adc
pop
shr
push
pushf
pusha
jne
sar
in
xchg
adc
cmp
jne
mov
inc
cmp
push
rcl
mov
dec
retf
mov
jbe
fwait
jge
imul
popa
iret
enter
call
adc
mov
mov
xchg
imul
pop
fdiv
mov
mov
mul
or
es
movs
iret
cmp
pop
(bad)
jns
mov
mov
dec
ss
jle
cvtps2pi
inc
aaa
pop
jns
inc
pop
pop
out
dec
lahf
xor
stc
stos
in
push
test
push
jne
lods
mov
cmp
mov
cmp
cld
test
stc
jecxz
inc
cmc
out
je
repz
or
jg
imul
and
push
pusha
sar
int
jl
xchg
xor
or
imul
fs
rol
mov
xor
adc
call
inc
adc
push
call
movs
pop
cmc
mov
mov
mov
push
cmps
inc
pushf
mov
push
clc
dec
mov
daa
xchg
dec
mov
sti
aas
fadd
xchg
inc
aad
jae
stos
jne
leave
mov
xchg
hlt
lds
push
aam
sbb
add
cmp
nop
xlat
add
retf
call
ror
loopne
jg
stc
out
jg
stc
out
xor
sahf
call
jb
sub
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmp
sbb
outs
jb
xor
sbb
adc
jmp
cwde
out
pushf
sahf
cmp
out
cmp
je
sti
inc
fidivr
dec
clc
add
inc
mov
jbe
inc
imul
stos
mov
xor
xor
fs
loopne
pop
sbb
ja
mov
and
out
les
pop
pop
pop
push
pop
jp
and
mov
mov
ficom
rcr
mov
lea
push
push
jae
xor
rcr
cmp
mov
xchg
dec
shr
jge
mov
cs
jnp
imul
mov
or
sbb
xchg
clc
adc
adc
iret
add
gs
push
daa
int
jl
ror
fwait
dec
hlt
lods
sbb
mov
imul
ret
push
jne
into
sar
jb
mov
leave
mov
ins
sahf
clc
sti
daa
dec
xor
call
(bad)
adc
ficom
fidivr
and
aaa
daa
xchg
out
pushf
inc
xor
nop
(bad)
mov
pop
sahf
mov
test
jecxz
xchg
int
sti
jns
jecxz
lods
mov
imul
inc
add
pop
fisub
retf
pop
add
mov
xchg
lahf
shl
pop
je
mov
jbe
adc
aaa
cli
and
test
(bad)
in
sbb
ret
jb
inc
out
movs
sbb
outs
int
xchg
cld
stos
xchg
xor
inc
mov
mov
push
adc
sbb
or
or
cmp
pusha
dec
lea
push
sub
test
jae
cmps
push
sbb
push
add
xchg
cmp
repz
loope
mov
stc
sub
xrelease
les
push
sub
push
bound
jle
inc
cmp
pop
xor
sbb
enter
iret
jmp
dec
xchg
adc
in
jmp
push
aad
adc
stos
push
ret
mov
jnp
fnstenv
stos
lahf
mov
jle
sbb
mov
jbe
loop
adc
jecxz
lods
mov
push
jne
xchg
stos
neg
test
imul
aam
stc
repz
jb
xor
nop
js
cmps
int
mov
stos
shl
jae
shl
movs
test
das
xor
call
or
lock
in
xlat
cld
dec
mov
xchg
mov
mov
dec
and
sbb
lods
adc
pusha
cmp
bound
cwde
push
xchg
aad
dec
lds
lea
mov
repz
inc
mov
jbe
test
mov
(bad)
push
rcl
or
test
cmc
cmp
jl
or
aas
dec
mov
xor
push
and
test
jmp
cmp
mov
je
push
or
sub
ror
outs
sub
retf
mov
push
in
cmp
pop
sbb
loope
test
inc
ins
cs
fisubr
test
js
jg
les
in
stc
jmp
inc
dec
fld
daa
retf
fld
fmul
or
ds
fcmovnu
push
in
sahf
in
bound
not
mov
add
mov
mov
cmp
sar
scas
scas
cli
xlat
jne
jecxz
repz
idiv
xchg
mov
xchg
aam
jns
enter
push
popa
icebp
xchg
jb
mov
and
dec
xchg
ret
fsubr
cmps
cmp
push
fsub
retf
sbb
out
jge
jmp
xchg
cld
mov
mov
dec
cmp
mov
rcr
adc
and
jmp
xor
jne
or
fst
or
ds
inc
into
pop
add
enter
imul
stos
sbb
jecxz
popf
mov
mov
xor
jo
sbb
(bad)
js
cwde
jno
lds
and
mov
mov
lahf
xor
les
and
adc
idiv
mov
gs
xor
pusha
inc
sbb
daa
adc
pop
outs
ds
test
in
xchg
push
fyl2x
outs
stc
pop
addr16
mov
cmp
in
mov
add
iret
sti
fdivrp
xchg
scas
mov
test
sbb
sbb
xchg
mov
(bad)
lds
in
sbb
lahf
lods
imul
test
cdq
dec
jge
xchg
cli
hlt
ret
fwait
dec
xor
(bad)
cmp
stos
mov
and
iret
cmps
cmp
or
push
jmp
not
popa
pusha
popf
mov
mov
out
mov
idiv
push
sbb
mov
jg
cwde
shl
mov
ficom
push
push
push
inc
mov
fs
pop
fsub
xor
pop
sbb
popa
mov
and
lods
inc
ins
mov
addr16
sbb
lods
in
add
xor
in
xor
es
outs
popa
inc
push
loope
xchg
mov
pop
les
xchg
xchg
fstp
inc
(bad)
in
mov
es
lods
(bad)
loopne
xor
xchg
imul
jae
mov
imul
mov
repz
inc
jns
adc
aaa
dec
xchg
xchg
adc
hlt
adc
in
dec
ja
fdiv
pop
out
mov
int
pop
inc
test
out
inc
pop
cmp
mov
mov
sti
adc
pop
retf
fsubr
dec
and
push
rcl
jmp
xlat
retf
mov
cmp
in
mov
out
push
sub
jp
mov
js
xor
cmps
int
sub
add
mov
mov
xchg
popf
cmp
stos
xor
xor
rcr
mov
xchg
xor
in
shr
push
paddsb
mov
mov
push
cmps
push
(bad)
iret
fnsave
ds
push
and
mov
fsubr
aas
in
cwde
push
ret
push
sbb
pusha
stos
jnp
mov
call
ds
mov
call
mov
aam
or
enter
xchg
fnstenv
jge
pop
xchg
inc
(bad)
nop
dec
jns
mov
cmp
mov
out
sahf
fcmovb
add
shl
rcl
mov
outs
mov
cli
cmp
stos
jle
dec
stc
cmp
mov
jae
mov
cmp
push
sub
int
dec
sbb
lock
dec
inc
push
pop
in
dec
inc
sbb
jge
push
ss
retf
movs
aam
popf
cmp
mov
cmp
push
pop
inc
dec
rcl
es
jl
or
mov
faddp
sbb
icebp
xor
push
in
imul
shl
adc
movs
mov
mov
clc
addr16
jns
mov
pop
xor
push
jg
out
lock
xchg
mov
and
cmps
pop
dec
mov
into
dec
(bad)
xchg
sti
cwde
pop
jbe
(bad)
aas
fst
adc
mov
xor
pusha
gs
jns
dec
dec
push
and
push
mov
out
call
ins
movs
mov
int
shl
popf
pop
inc
xchg
push
mov
xchg
mov
scas
push
stos
mov
cs
or
out
xchg
dec
das
inc
add
mov
ja
bound
(bad)
sbb
sbb
cmc
in
and
mov
div
push
pop
add
inc
stos
lds
jp
std
test
cmps
push
shr
push
ret
imul
pop
xlat
mov
inc
pusha
imul
xor
jecxz
xor
or
aas
shr
leave
xor
and
fwait
inc
aaa
dec
mov
lock
pop
out
clc
push
pop
mov
int3
pop
or
popa
mov
popf
ja
ins
cmp
jmp
std
jo
sbb
or
sbb
add
lods
sbb
pusha
push
std
push
clc
adc
aas
test
int3
or
or
pop
gs
add
xchg
stos
fcomp
test
(bad)
xor
mov
fst
and
pushf
pop
pushw
jle
stc
shl
repnz
retf
cmp
mov
inc
add
push
mov
test
movs
gs
mov
in
jg
mov
xor
inc
mov
add
loopne
shl
push
jp
ss
retf
jmp
cmp
aaa
in
jne
sbb
mov
(bad)
repz
scas
cli
cmp
mov
(bad)
jmp
xchg
scas
dec
pop
call
add
std
(bad)
sti
imul
ror
out
int
mov
xchg
mov
aas
shl
dec
out
inc
dec
stos
pop
aam
int
(bad)
fwait
xchg
mov
out
pop
aam
inc
shl
mov
xor
add
maxps
jae
push
jle
into
iret
lea
xchg
sub
xchg
dec
movs
mov
add
(bad)
pop
mov
(bad)
stc
mov
loopne
ins
sti
(bad)
neg
(bad)
and
mov
ja
ror
fcomp
outs
jb
sar
jo
dec
pop
push
out
xchg
not
adc
out
sub
pop
shl
jp
imul
repnz
xor
lds
pop
or
push
or
outs
xchg
popf
cs
scas
pop
fdiv
mov
neg
icebp
jge
(bad)
scas
adc
cdq
inc
pop
jae
pop
xor
in
sub
outs
mov
lods
jae
sub
out
leave
xchg
sbb
push
mov
pop
call
dec
xor
push
(bad)
push
popa
lods
pop
dec
sbb
int
push
in
movs
enter
xchg
scas
dec
inc
cli
popf
imul
and
movs
lods
inc
imul
popa
dec
out
add
pusha
repz
test
mov
fsubr
push
mov
je
dec
inc
mov
addr16
(bad)
adc
(bad)
pusha
enter
push
adc
inc
push
call
xor
pop
rcl
lds
dec
jg
imul
sub
mov
mov
jmp
cmp
imul
push
mov
sub
loop
inc
stos
sahf
jae
(bad)
fcom
les
lods
pop
popf
dec
stc
div
imul
mov
repnz
int3
fwait
xchg
push
mov
add
(bad)
mov
xchg
add
fwait
sbb
iret
clc
(bad)
mov
mov
imul
(bad)
fmul
pop
ins
sub
mov
jecxz
int3
lods
and
test
repnz
cdq
retf
sub
dec
mov
mov
sahf
pop
popa
mov
out
cmp
loopne
push
mov
inc
stos
(bad)
dec
and
cmp
movs
(bad)
icebp
out
lahf
pop
nop
sub
fild
cmps
jp
loopne
mov
mov
mov
sti
add
das
std
add
scas
outs
fucomi
xchg
or
shl
jbe
sbb
loop
jb
and
(bad)
clc
cmp
push
lods
mov
dec
xor
scas
push
div
in
std
shr
popf
xchg
out
nop
or
adc
xor
add
in
add
loope
mov
out
shl
ds
pop
call
in
sub
sub
mov
stos
xchg
(bad)
sub
nop
push
or
cli
test
sub
rol
fidivr
mov
xor
sub
sti
(bad)
mov
std
lods
mov
(bad)
fcomp
sti
sbb
cmp
dec
ds
fild
in
in
enter
int3
jae
pusha
inc
pop
jg
ds
xor
cmp
pop
jl
sub
out
std
gs
dec
xlat
(bad)
jne
inc
sbb
sti
pop
mov
push
dec
xor
add
xchg
lods
and
cdq
jl
in
lds
mov
rcl
fcmovu
std
out
movs
sub
dec
and
xor
adc
pop
xchg
scas
mov
(bad)
div
xchg
mov
add
xchg
push
or
jmp
dec
fdivr
push
push
mov
inc
cmps
iret
cmps
sub
cmps
adc
and
jno
push
mov
lods
and
jg
scas
pop
or
sub
test
mov
jno
jmp
aam
sbb
es
and
add
stc
add
pop
dec
adc
popa
loope
inc
sbb
xchg
addr16
lgs
(bad)
push
or
stos
xchg
outs
dec
ror
fcomp
mov
movs
retf
mov
dec
push
repnz
sbb
sub
test
push
pop
outs
push
js
xor
(bad)
popa
mov
push
mov
std
int3
mov
stos
shl
icebp
fisubr
cmp
inc
push
xchg
ret
ins
mov
mov
or
jg
mov
inc
push
sahf
push
xor
clc
lods
xchg
dec
retf
in
push
push
sub
push
sahf
inc
add
rcr
xchg
not
es
out
xchg
cdq
mov
xchg
fucom
dec
test
mov
jb
sub
lods
and
or
pop
xor
xchg
ins
mov
pop
mov
mov
push
jns
jge
inc
fbld
push
sbb
pop
cmc
jae
mov
adc
out
sbb
imul
inc
sbb
mov
fstp
icebp
dec
inc
int3
push
(bad)
test
(bad)
das
xchg
popf
dec
and
xlat
sub
adc
xor
repnz
or
dec
mul
and
popf
das
outs
shl
cs
aam
inc
xchg
pusha
xor
add
dec
popa
popa
mov
iret
ins
pop
in
dec
xor
mov
inc
xor
movs
fmul
jb
mov
add
pop
adc
jnp
mov
add
mov
sar
adc
int3
jg
std
test
retf
int
add
fiadd
jl
inc
jmp
pop
mov
retf
into
mov
mov
lods
and
pop
movs
pop
aas
push
jns
rol
stos
inc
pop
dec
out
scas
aaa
stos
add
jae
sbb
xor
and
pop
test
ret
je
adc
jns
ficomp
icebp
daa
cld
pop
pop
test
mov
xlat
cmp
push
jbe
les
mov
repnz
sar
push
or
sub
scas
cmp
cmps
add
jne
cmps
arpl
inc
movs
sbb
cmp
int
add
cld
sbb
loopne
pop
pop
nop
pop
jne
adc
dec
pop
mov
jnp
pusha
popf
loopne
inc
mov
or
in
push
int3
into
cmp
lods
inc
das
xor
out
in
fiadd
mov
jg
ds
and
popf
inc
test
sub
ins
sub
fs
adc
out
and
ins
jg
(bad)
test
adc
fisub
jnp
aad
jg
jge
pusha
xchg
in
inc
jle
jo
cmps
mov
xchg
adc
out
std
fwait
and
lock
sbb
sahf
and
jp
aad
add
xor
sub
xor
popa
(bad)
dec
fs
fwait
mov
jns
sub
inc
mov
mov
push
retf
and
js
fstp
ret
into
cmp
jne
lock
pop
jae
push
cmp
aad
xor
mov
push
cdq
push
jno
mov
std
popf
mov
ror
or
dec
aas
xchg
dec
sub
adc
mov
fadd
pop
aas
xlat
repz
lock
pop
xor
or
jl
mov
cmc
retf
outs
in
jl
out
xor
movs
ja
cli
pop
jo
mov
mov
in
shrd
mov
xor
or
inc
mul
sub
ret
daa
adc
and
int
in
sub
add
xchg
push
xchg
cmp
pop
mov
jmp
dec
lods
jmp
fidivr
retf
add
add
out
push
imul
js
fwait
xor
in
pusha
test
push
and
and
test
scas
mov
cmp
jbe
jae
push
clc
mov
inc
je
xor
cmp
inc
adc
push
and
or
mov
cs
xlat
pop
push
cs
sti
iret
mov
mov
push
xchg
push
sub
cwde
dec
mov
ds
adc
xchg
pop
call
stos
lds
mov
lahf
jg
stc
out
jg
scas
add
inc
jmp
jmp
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
into
xchg
xchg
jmp
lea
xor
cmp
jns
push
bound
dec
sahf
pushf
scas
adc
cmp
dec
mov
std
and
sahf
pop
add
(bad)
mov
mov
fisub
push
xor
cmp
and
idiv
shr
mov
or
mov
popf
test
fsubr
mov
jae
adc
loopne
dec
sub
fst
mov
loope
xchg
mov
and
or
push
popa
dec
stos
xchg
mov
jecxz
adc
sub
aas
xchg
fcomp
in
stos
or
and
pop
mov
inc
es
pop
and
hlt
in
and
ret
retf
pop
xchg
push
jp
xor
frstor
mov
outs
out
jb
loope
ror
mov
push
dec
mov
pop
adc
mov
ds
push
repnz
push
das
sbb
aad
dec
and
pop
and
inc
mov
inc
stc
sbb
in
lahf
xor
mov
dec
mov
jne
cmp
add
fwait
xchg
cmp
and
jo
stos
mov
js
mov
into
js
retf
out
add
and
dec
push
cdq
call
cmp
ret
and
sbb
sub
inc
movs
enter
or
cmp
lahf
out
pushf
adc
test
add
aas
(bad)
popa
cmp
mov
fiadd
daa
stos
dec
not
les
push
adc
je
dec
and
push
lods
mov
jo
mov
push
push
(bad)
stc
movs
lods
enter
mov
mov
out
mov
xchg
jo
xor
inc
cdq
icebp
xor
adc
aam
add
lods
fist
mov
mov
mov
lahf
push
retf
mov
enter
pop
jecxz
shl
and
push
pop
(bad)
in
fwait
(bad)
jo
iret
(bad)
imul
sub
dec
mov
xor
outs
into
push
dec
inc
push
xchg
clc
mov
cdq
ja
fwait
jb
inc
adc
inc
out
jecxz
push
in
enter
fmul
inc
(bad)
and
mov
ds
jl
mov
mov
in
push
cwde
sub
push
imul
cli
cmp
loop
clc
pop
(bad)
or
retf
mov
popf
mov
add
sub
cmps
dec
sub
push
cmps
arpl
cmp
or
rol
scas
enter
jne
push
das
sbb
hlt
adc
mov
shr
mov
cmp
push
jl
mov
cmp
hlt
stos
fwait
mov
movq
sbb
popa
bound
xor
icebp
ja
retf
dec
mov
mov
xchg
dec
mov
xor
ins
push
or
shl
cmp
mov
mov
std
mov
vrcpss
pop
pop
movs
mov
shr
xor
push
imul
push
clc
js
gs
xchg
pop
lahf
push
mov
out
mov
sbb
cmp
rol
or
into
push
sub
add
mov
bound
cmp
imul
in
mov
jnp
dec
xor
dec
fidivr
arpl
sub
ins
pusha
xor
xor
sub
movs
cwde
test
push
pop
inc
outs
sbb
rcl
test
or
mov
jns
into
fwait
mov
pop
mov
adc
je
fild
push
dec
hlt
aam
cli
or
or
jae
pop
dec
sub
mov
dec
(bad)
push
push
xlat
sub
outs
data16
in
pusha
rol
retf
jne
add
sbb
lock
test
stc
mov
adc
hlt
out
inc
inc
mov
aas
cmp
xor
addr16
addr16
data16
xchg
lock
bound
lds
(bad)
adc
aam
and
mov
push
clc
es
sbb
loopne
loop
out
sub
sbb
dec
add
sub
dec
add
adc
popa
pushf
push
arpl
lods
mov
retf
and
jle
mov
xor
jecxz
lahf
rcr
push
in
sahf
cmc
cwde
and
push
and
push
pop
jmp
fisttp
fadd
mov
adc
cmp
push
mov
pmulhuw
adc
mov
rcl
out
add
outs
add
test
xor
mov
imul
dec
and
adc
xor
mov
xchg
and
clc
xor
cdq
call
enter
adc
in
lea
push
retf
and
scas
and
(bad)
std
loop
or
mov
xor
mov
sub
mov
mov
ins
loopne
cmp
cs
push
out
pop
test
(bad)
sub
stc
adc
scas
jmp
test
adc
or
mov
sbb
mov
sub
dec
test
call
adc
push
fmul
mov
loop
imul
(bad)
fucom
inc
dec
icebp
pusha
imul
clc
cmp
xchg
dec
adc
scas
dec
test
mov
xlat
mov
jo
mov
dec
repz
neg
ins
xchg
test
cld
stos
mov
bound
fwait
and
or
pusha
fild
or
push
mov
or
xchg
pop
push
pushf
fiadd
push
test
aam
fnstenv
jl
lods
inc
dec
mov
xchg
jg
jne
lods
inc
pop
mov
adc
ja
adc
fs
xor
adc
mov
jns
mov
mov
sbb
push
leave
mov
jno
pop
stc
jmp
call
pop
cmp
aam
jb
out
in
shl
or
xchg
sar
mov
arpl
push
lahf
out
jne
pop
lock
fs
add
retf
cmp
arpl
mov
(bad)
icebp
sbb
pop
out
push
mov
call
stos
push
dec
jo
sbb
stos
pop
test
hlt
cwde
lds
movs
xchg
ror
or
mov
(bad)
dec
pop
movs
mov
pop
sub
test
push
mov
xor
xchg
inc
cmc
out
mov
in
dec
aam
or
fwait
leave
fist
ror
cli
xor
pop
mov
mov
stos
mov
neg
test
ins
test
fistp
not
sbb
shl
imul
xor
lock
sbb
addr16
and
out
sub
out
dec
push
das
adc
and
xor
stc
jo
pop
push
nop
xor
and
sub
jbe
movs
fisubr
retf
xchg
dec
dec
mov
fsub
cmp
mov
sbb
retf
cmp
add
ret
pop
fidiv
shr
lods
xchg
jmp
pop
stos
jmp
add
mov
loop
mov
mov
xchg
push
clc
xlat
hlt
dec
xchg
shr
std
sbb
mov
sti
stc
mov
js
(bad)
loopne
(bad)
test
mov
fwait
mov
add
pop
jle
and
sbb
fcomp
scas
xor
or
(bad)
std
stc
aaa
ins
out
cmps
in
mov
ja
ret
repz
rcl
pop
ins
rol
dec
outs
jmp
loope
jecxz
movs
cwde
cmp
or
add
cli
dec
xchg
mov
ror
push
test
daa
shl
js
and
fwait
and
or
shl
fidiv
pop
(bad)
shl
fsub
xchg
test
imul
and
xor
imul
sahf
mov
mov
fisub
(bad)
fistp
repz
sahf
mov
xchg
mov
mov
enter
(bad)
out
lods
pushf
stc
movs
ins
fwait
call
stos
ret
(bad)
and
(bad)
outs
mov
add
push
sub
jne
or
pop
lods
inc
lea
and
ret
sbb
cmp
pop
jne
adc
xor
fsubr
dec
es
mov
outs
iret
aaa
xor
jmp
mov
inc
mov
ret
lods
pop
cs
rcl
imul
retf
push
(bad)
icebp
push
push
fucomi
jp
sbb
jbe
rol
shl
fwait
pushf
imul
xchg
dec
inc
jns
lods
mov
pop
dec
outs
mov
popf
cmp
mov
mov
and
call
shl
fs
int
pushf
test
lods
es
cmp
ror
ds
mov
(bad)
or
sub
(bad)
enter
xor
test
sub
cmp
jmp
je
idiv
repz
jp
sub
pop
mov
in
sub
mov
mov
ret
inc
ins
inc
pop
dec
push
pop
in
idiv
fnstenv
jne
test
enterw
and
push
pop
mov
pop
nop
pop
xor
pop
dec
int3
adc
cli
xchg
ja
imul
add
inc
cmp
int3
fldcw
cmps
icebp
popf
pop
push
cmps
mov
sar
push
(bad)
(bad)
in
inc
mov
mov
sbb
scas
ins
and
int3
adc
movs
xchg
daa
sub
or
push
add
or
retf
mov
test
fisttp
jecxz
push
cmp
mov
jg
lock
push
(bad)
repz
(bad)
cmc
xchg
repz
jae
repnz
sar
xor
ror
and
retf
fldenv
icebp
xor
push
mov
jns
push
dec
jbe
loope
and
repz
sbb
into
lea
sub
gs
xor
cld
add
add
sub
xor
cdq
inc
fwait
aad
fsub
nop
gs
stc
fidivr
sti
les
mov
sti
cli
dec
sbb
xchg
out
xchg
dec
shr
out
fist
or
xor
fistp
sub
ds
ds
adc
jecxz
and
xor
cwde
add
dec
sub
dec
push
sbb
jle
push
stos
ins
leave
or
adc
jne
sti
xchg
pop
mov
nop
div
jle
loopne
(bad)
push
test
jne
cmc
xor
xchg
xor
je
shl
adc
inc
pop
pop
xlat
rcr
push
leave
xchg
(bad)
(bad)
cmps
or
jle
popf
sub
and
jb
jmp
sub
mov
add
push
clc
or
sbb
mov
movs
mov
dec
pop
cmp
ret
iret
mov
stos
xor
in
cmps
push
enter
cli
gs
ins
cmovge
out
dec
mov
dec
dec
mov
mov
mov
xchg
sahf
push
movs
cmp
loope
(bad)
ds
mov
xor
das
fdivr
cmps
or
mov
movs
xor
loop
imul
call
outs
icebp
mov
mov
ret
repnz
dec
js
push
or
xchg
mov
mov
xor
sti
lock
clc
jne
adc
in
push
cmps
mov
or
mov
out
adc
mov
fisttp
test
push
cmp
cmp
inc
adc
mov
jle
mov
outs
inc
jne
pop
mov
lods
arpl
pop
xchg
or
xchg
sahf
mov
mov
or
fstp
adc
test
inc
sub
sbb
in
mov
jle
adc
jg
mov
pusha
aam
and
sbb
loop
loop
push
sub
and
hlt
add
js
mov
xor
leave
dec
lahf
out
lahf
or
aaa
out
jbe
push
std
pop
pusha
cdq
sar
cmp
add
push
xchg
imul
mov
mov
aam
cmps
inc
mov
out
hlt
loope
xor
mov
mov
aas
adc
les
test
push
pop
idiv
pop
pop
mov
lahf
mov
jle
adc
sub
mov
aad
stos
in
pop
in
pop
loopne
(bad)
ds
je
fst
xchg
int
cmps
test
push
(bad)
je
adc
fs
mov
jp
ret
out
xor
jp
(bad)
ss
test
int3
mov
cmps
arpl
pop
add
test
imul
sti
rol
push
movs
scas
fcomp
jle
sub
in
repnz
ins
push
pop
jmp
jmp
test
sbb
mov
in
popf
shl
xchg
mov
push
idiv
loope
neg
mov
inc
imul
retf
sub
das
fwait
out
addr16
mov
repnz
add
leave
cmp
jle
lods
lods
(bad)
pop
fmulp
adc
rol
mov
fidiv
jle
mov
jb
mov
jecxz
jg
cmp
sub
ins
jns
into
ja
mov
mov
fld
push
clc
push
adc
cld
nop
sub
mov
test
lds
cmp
int3
or
in
call
adc
xor
inc
xlat
ins
jnp
leave
mov
icebp
popf
sub
adc
pop
sbb
pushf
mov
and
add
jmp
add
inc
mov
sti
sti
movs
ds
iret
hlt
mov
fisttp
(bad)
pop
sbb
push
inc
mov
jnp
xor
jge
and
adc
ss
cdq
fucomip
dec
jo
push
pop
je
cmps
imul
adc
mov
dec
cmps
sub
xchg
adc
icebp
dec
inc
daa
adc
mov
cmp
dec
repz
sbb
jbe
add
mov
repz
push
movs
imul
test
sbb
mov
pusha
and
xchg
pop
jae
xor
sub
jnp
sub
mov
dec
cmp
pop
push
mov
mov
fild
adc
cmps
and
mov
scas
test
fdivr
stc
sti
pop
sbb
mov
sbb
and
lods
repnz
jge
pop
arpl
xchg
and
mov
push
inc
gs
aad
inc
lahf
inc
(bad)
lock
mov
imul
(bad)
(bad)
pop
(bad)
sbb
mov
jae
loopne
cmp
xor
mov
out
not
stos
sbb
sbb
data16
int
jno
pop
dec
mov
ins
inc
scas
jge
push
pushf
icebp
xor
cmp
dec
jo
iret
xchg
adc
xchg
cmp
aad
fwait
mov
mov
jb
fwait
jg
adc
and
add
scas
mov
mov
(bad)
popf
push
lahf
stos
aam
rcr
mov
xchg
scas
add
stc
cmp
sbb
mov
mov
or
rcl
jae
push
jecxz
mov
leave
jmp
push
in
add
fwait
repz
sub
mov
ret
mov
dec
adc
cmp
call
cmps
xchg
out
into
pop
push
fs
outs
(bad)
dec
ror
xor
pop
sub
shr
call
inc
sbb
hlt
jno
xor
xor
icebp
ret
les
icebp
jno
jae
mov
xlat
scas
push
lods
lahf
add
int
stos
pop
add
push
in
dec
pop
fidivr
push
sbb
jge
stos
and
jp
push
pop
aas
(bad)
(bad)
xor
lds
mov
jno
repnz
inc
in
xchg
xchg
lock
inc
loopne
movs
jp
rcl
xchg
in
(bad)
sbb
jno
mov
test
ret
ror
in
arpl
adc
mov
mov
jle
mov
stos
adc
dec
in
pop
mov
out
lea
fldenv
add
push
repnz
nop
jecxz
and
rcr
minps
mov
jae
rol
add
mov
addr16
pop
mov
div
push
ret
imul
les
mov
lods
fnsave
adc
aad
in
mov
jge
cmp
sar
cdq
or
pop
xchg
pop
sub
addr16
in
cs
outs
fs
push
(bad)
jnp
jns
movs
xor
test
mov
(bad)
xchg
dec
mov
cmps
scas
cmp
lea
jnp
movs
movs
xor
push
test
pop
gs
hlt
jb
rcr
pop
xchg
sub
inc
push
dec
mov
fmul
push
outs
test
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
es
(bad)
ins
out
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
fldenv
jnp
out
dec
cdq
dec
inc
data16
(bad)
xor
repz
addr16
cmp
lahf
cdq
jne
ja
je
dec
data16
enter
add
xor
add
pop
std
lods
mov
pop
aaa
xchg
sti
test
inc
sub
pop
repz
xchg
cwde
(bad)
pop
push
cmp
inc
push
call
enter
stc
cmp
mov
push
shr
fld
fs
out
leave
jmp
scas
je
adc
jge
inc
sub
mov
and
daa
push
add
and
dec
fstp
mov
sub
push
lods
cwde
push
push
dec
retf
add
add
lds
mov
push
cmp
repz
sub
pop
mov
daa
sbb
lods
data16
and
xor
outs
adc
cs
mov
inc
movs
adc
pop
push
sbb
icebp
dec
dec
xchg
mov
out
add
sbb
jo
dec
outs
imul
jp
repz
pop
outs
xor
jnp
cmp
pop
xor
pop
dec
xor
aad
jmp
cmc
ja
out
mov
(bad)
mov
cmp
outs
and
push
xor
ds
jb
cwde
sbb
dec
shl
jle
and
jp
cmp
mov
je
data16
xchg
pushw
or
mov
mov
mov
sbb
push
sub
mov
mov
push
out
push
pushf
adc
pop
push
mov
dec
scas
loop
addr16
sbb
dec
mov
and
lods
pusha
jp
jae
test
outs
jmp
pop
lods
push
and
mov
mov
push
sbb
add
out
imul
jmp
and
jl
movs
(bad)
stc
cld
jecxz
jnp
push
mov
mov
jnp
push
mov
les
popa
push
(bad)
(bad)
xlat
jge
push
adc
dec
out
shl
sub
jno
add
ret
mov
adc
mov
inc
and
aaa
(bad)
loope
aaa
push
int3
clc
push
adc
jge
hlt
fwait
inc
dec
(bad)
ds
adc
stos
sbb
jo
mov
cli
dec
add
inc
adc
mov
sub
retf
imul
js
aaa
lds
inc
fidiv
jae
mov
imul
adc
cli
daa
or
imul
and
lods
loop
ds
add
fnsave
iret
xchg
or
das
xchg
fcomp
xor
(bad)
stos
imul
mov
mov
in
mov
rcr
cmp
dec
sub
mov
pop
cs
ret
mov
test
dec
or
xchg
aad
or
push
push
lds
jae
and
mov
cmp
cmp
call
ds
push
cmp
xor
lods
in
in
(bad)
sub
push
popa
outs
test
addr16
push
fstp
out
icebp
jbe
jg
aam
clc
sbb
ds
pop
call
mov
into
in
(bad)
jp
shl
aad
sbb
push
push
scas
mov
cmc
aas
(bad)
fbld
iret
push
dec
or
and
sub
js
sbb
out
cmps
ret
aas
dec
outs
jne
ret
jg
or
call
jno
fwait
pop
sbb
nop
mov
sbb
xchg
jecxz
and
repz
popa
sbb
mov
sbb
iret
call
adc
jns
and
inc
push
xchg
mov
push
in
shl
in
adc
cli
push
stc
shr
stos
push
gs
push
push
int3
rcl
inc
test
lock
retf
popf
jecxz
and
mov
jge
aad
fimul
ins
mov
lahf
or
jns
mov
aas
add
mov
push
cs
fdiv
sub
bound
or
std
push
nop
fisttp
jecxz
cli
jb
xor
jbe
pop
push
sbb
loop
fcom
(bad)
int
scas
cmp
mov
or
mov
and
push
adc
adc
xlat
push
cvtpi2ps
out
ins
fbstp
mov
adc
pop
xchg
sub
ds
mov
cdq
stc
movs
test
arpl
lds
aaa
mov
es
xchg
push
or
stc
pop
jb
lods
pop
(bad)
div
adc
aaa
(bad)
jno
xchg
jns
das
jno
sbb
xchg
sbb
or
call
sub
call
jb
sbb
cwde
arpl
sti
add
es
mov
xchg
fsub
jno
ins
cdq
daa
xor
jle
lea
out
and
ficom
pop
int
pop
pop
jle
outs
mov
jae
mov
xchg
ins
adc
and
(bad)
fld
mov
mov
jmp
and
inc
xchg
sbb
movs
in
movs
in
cmp
sub
cmp
xchg
mov
cmp
xlat
pop
fwait
(bad)
fcomp
sar
shl
jmp
das
mov
xor
pop
pop
cmps
lods
cmps
ficomp
nop
js
dec
mov
add
sbb
sub
test
inc
or
sbb
pop
push
jmp
jbe
sbb
out
add
xchg
jne
push
sbb
daa
call
xor
sub
or
(bad)
cmp
in
mov
daa
adc
mov
cmp
mov
jmp
jnp
sbb
pop
test
pop
lock
push
shl
mov
cmp
mov
cmp
inc
mov
push
push
inc
dec
jg
retf
mov
xchg
out
movs
cmc
(bad)
inc
mov
inc
sbb
iret
leave
jg
jmp
cmps
push
std
jp
shl
add
jne
dec
adc
nop
es
js
stos
mov
and
dec
pusha
loop
xchg
leave
inc
mov
out
daa
jp
add
scas
xchg
lods
fmul
xor
cmp
or
std
inc
(bad)
sub
call
shl
jmp
das
in
std
add
sbb
mov
nop
cmps
out
sub
mov
in
(bad)
cmp
pusha
imul
movs
push
xor
inc
pop
out
ins
arpl
shl
cmp
and
or
mul
addr16
push
mov
pop
adc
and
or
pop
ins
inc
mov
(bad)
dec
enter
jg
mov
mov
clc
lea
and
mov
add
sbb
cld
ds
push
mov
(bad)
inc
lods
jg
jle
ins
jo
scas
fmulp
and
push
add
loopne
pop
fwait
dec
xchg
mov
cmp
fbstp
sahf
(bad)
add
add
imul
xchg
sub
cwde
mov
add
mov
out
mov
pop
aad
pop
jmp
push
cmp
lock
cmps
shl
push
sahf
pop
mov
dec
push
mov
sub
and
adc
inc
js
or
mov
int3
mov
(bad)
adc
sub
arpl
ds
mov
movs
out
in
inc
xchg
pop
mov
jo
or
adc
fdivrp
jl
sbb
mov
js
mov
jp
in
cmp
repz
int
xor
out
cwde
sub
mov
cli
in
sub
inc
adc
jmp
or
icebp
jno
jge
clc
je
sahf
outs
aaa
sti
movs
xchg
into
jmp
jle
sub
repnz
inc
cmp
loope
ficom
sub
and
jge
(bad)
fs
sbb
jecxz
ja
mov
rcr
ins
adc
mov
cmp
into
add
mov
mov
jl
lea
shr
stc
ins
sub
adc
stos
xor
or
sbb
(bad)
pop
aas
xchg
pop
push
push
and
call
mov
adc
les
dec
jmp
xchg
mov
sti
mov
aad
repz
mov
outs
dec
mov
push
in
movs
cmp
add
jmp
sub
arpl
(bad)
retf
cmc
mov
xchg
sbb
xchg
gs
and
std
call
xchg
div
ret
sbb
outs
repnz
push
test
retf
ret
xor
stos
fst
bound
shl
or
jo
pop
adc
outs
ja
aaa
mov
retf
cwde
fcmovne
jbe
call
and
inc
int3
mov
out
cs
cli
fdivr
sub
push
(bad)
cdq
lahf
cmp
jmp
ins
mov
shl
lds
bts
mov
mov
jle
xchg
sbb
or
aad
or
push
push
lods
cmp
data16
in
xchg
test
push
iret
cmp
rol
jmp
popf
cmps
add
inc
mov
imul
test
(bad)
clc
mov
adc
cmp
dec
dec
cwde
push
nop
fistp
call
sbb
clc
sbb
enter
test
jmp
rcl
movs
lahf
ror
mov
out
lds
sub
inc
sub
int3
lods
lea
movs
aas
or
call
jmp
std
leave
imul
loopne
cwde
arpl
test
xor
pop
int
in
sbb
sar
lahf
sti
ds
push
fwait
(bad)
aam
pop
aam
ret
ret
in
jg
jmp
and
push
aas
and
cli
jae
or
add
jge
pop
int3
cwde
jnp
js
jb
mov
sub
das
mov
out
popf
cmp
fsubr
adc
loopne
xchg
mov
fild
jo
movs
sbb
(bad)
rol
add
(bad)
lods
or
nop
mov
(bad)
mov
cmp
pop
mov
mov
arpl
and
das
jmp
jg
jne
mov
sub
xchg
inc
in
push
retf
cs
push
(bad)
jae
xchg
(bad)
xchg
xor
in
out
repnz
ss
cmovne
or
cmp
mov
lea
std
(bad)
cmps
jmp
lds
cs
ret
ss
mov
cld
in
xlat
lods
aaa
mov
and
sbb
mov
fnstsw
lods
mov
retf
sbb
je
mov
std
jl
and
icebp
cld
pop
loopne
fild
out
adc
jmp
mov
sub
lea
imul
div
jne
rcl
clc
pop
stos
mov
repz
or
pop
call
fs
gs
sti
into
cmps
xor
loop
sub
(bad)
sub
xchg
xor
imul
sbb
jo
or
daa
ja
jmp
enter
jo
cmp
and
rol
dec
mov
(bad)
adc
xor
mov
push
add
adc
(bad)
loope
pop
cmc
push
daa
xor
and
adc
jge
cmp
outs
mov
rcl
xchg
dec
jae
sub
imul
aam
ins
les
cmp
in
xor
cwde
(bad)
jo
dec
fabs
fs
fcmovu
jmp
xor
(bad)
cmp
fadd
lods
add
cmp
mov
mov
repnz
xor
lock
arpl
imul
repnz
lea
loop
scas
jg
inc
xor
outs
dec
mov
cld
cmps
cld
aam
ror
scas
psrad
xchg
sar
or
(bad)
repnz
jns
jp
and
jnp
xor
mov
shl
aad
repz
push
jg
xchg
stos
mov
in
mov
scas
sub
out
bound
cmc
rcr
xchg
cmp
push
mov
pop
gs
or
cmp
into
test
mov
push
or
iret
inc
in
dec
jmp
ret
xchg
sbb
popf
dec
push
test
or
push
test
dec
aaa
xchg
cmp
es
adc
pop
push
xor
fist
pop
rol
jp
shl
dec
imul
mov
dec
mov
xchg
pop
mov
dec
mov
or
shl
mov
jb
sbb
adc
and
iret
dec
sub
adc
in
sub
add
mov
shl
lahf
dec
arpl
pop
(bad)
mov
pop
adc
and
out
xor
cmp
jl
repnz
sub
mov
mov
pusha
or
jg
mov
call
mov
dec
or
pop
nop
adc
and
bound
push
pop
dec
mov
jne
dec
pop
out
dec
fwait
jp
xchg
dec
mov
hlt
rcr
cmp
popa
xchg
mov
mov
mov
cmc
jne
scas
outs
cdq
jnp
fcomp
mov
loopne
rcr
cli
jnp
jne
jmp
scas
idiv
jne
dec
fld
ins
cmp
bound
adc
test
dec
ret
jmp
int3
jecxz
jnp
xchg
(bad)
inc
ffreep
popf
test
push
sbb
cmc
mov
cli
fisttp
cmp
loope
call
pop
cmp
cmp
fcmovu
daa
and
(bad)
je
adc
cmp
mov
mov
and
loop
add
lea
in
clc
jmp
mov
(bad)
fnstcw
push
fdiv
adc
jne
out
mov
outs
and
or
ret
aas
les
jns
xor
neg
sub
cmp
xchg
fsubr
stos
jno
mov
mov
push
and
pop
daa
or
sbb
fild
int
stc
enter
inc
jmp
retf
psrlq
jge
xrelease
inc
test
test
fwait
sub
adc
push
mov
int3
lahf
pop
frstor
cld
push
test
pop
mov
jb
cli
test
rcl
repnz
sub
pop
adc
cmp
lods
inc
cmp
(bad)
loop
sbb
adc
inc
mov
pop
repnz
call
ret
outs
inc
fsub
mov
loop
pop
mov
jg
fbstp
xor
mov
adc
sbb
mov
or
js
imul
cmps
cmp
cmc
sbb
pop
mov
data16
mov
mov
sub
sub
retf
pusha
mov
adc
or
enter
(bad)
stc
test
test
pop
pop
mov
out
es
jbe
mov
sbb
push
mov
pop
jecxz
sbb
adc
clc
test
inc
and
mov
add
push
mov
and
pusha
xchg
jge
pop
push
push
(bad)
in
inc
mov
adc
(bad)
fnstcw
ins
fdivr
inc
add
mov
out
mov
xchg
enter
cmp
fmul
push
pop
jnp
xor
cld
das
test
xor
jmp
arpl
out
jecxz
(bad)
fnstcw
ret
mov
add
xlat
popf
xchg
out
inc
pop
mov
ss
stos
stos
cmp
std
fs
add
inc
add
bnd
jle
out
push
cmps
div
pop
hlt
fcmove
(bad)
int3
retf
sbb
add
xor
sub
xor
out
mov
xor
cld
stc
cmp
mov
xlat
outs
xor
stos
xor
xchg
jge
jp
or
xchg
iret
push
push
rol
jbe
cs
xor
cmps
dec
dec
shl
xchg
push
mov
mov
jne
mov
add
xchg
lock
mov
stos
fstp
stc
mov
mov
sub
jnp
cmps
in
imul
push
nop
pop
out
mov
jmp
ins
or
adc
and
repnz
lods
or
mov
leave
cdq
scas
and
sbb
push
adc
lds
inc
xor
xchg
inc
and
aaa
test
repnz
xor
retf
pusha
mov
call
or
fs
test
jl
shl
cmp
xor
sub
out
pop
and
enter
xchg
add
push
add
lea
add
mov
add
into
test
aas
ror
xchg
push
mov
mul
xor
daa
ret
repz
xor
mov
lock
stc
push
mov
pusha
mov
and
fwait
leave
nop
push
xor
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
and
sbb
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
frstor
sbb
xchg
imul
out
aam
pushf
xor
dec
fwait
out
cmp
in
jns
add
gs
int
jbe
and
leave
cmc
or
out
add
gs
push
adc
jnp
sbb
ret
push
pop
(bad)
ja
xchg
xchg
movs
sub
adc
int
dec
stos
mov
sbb
addr16
pop
sub
pop
mov
in
mov
ss
ins
repz
cld
into
in
xchg
xor
and
pop
or
pop
cwde
xor
fcmovne
ja
jmp
out
pop
lea
jle
aad
dec
mov
push
aas
sbb
add
stos
cld
mov
test
jmp
pop
jmp
pushf
les
ja
mov
push
scas
mov
repz
hlt
aam
mov
jmp
fiadd
mov
retf
adc
lds
pop
repnz
sub
inc
bound
adc
hlt
das
jno
dec
pop
in
mov
push
cmp
lea
aas
stos
enter
jg
or
mov
int3
mov
cmp
push
imul
fadd
jo
(bad)
mov
iret
stc
mov
xchg
div
inc
push
scas
aam
jno
call
pop
(bad)
cmc
jns
dec
shl
jne
in
fistp
xor
inc
jb
or
push
ficom
pop
sbb
retf
rcr
nop
icebp
cmp
dec
or
cmc
pop
aaa
into
jl
in
push
fs
xchg
pop
lea
mov
pop
and
xchg
sbb
or
mov
xchg
cld
xchg
mov
pop
imul
jmp
mov
add
push
ja
sub
sbb
repnz
in
mov
jne
push
test
es
movs
cmp
outs
mov
or
stos
mov
out
(bad)
push
retf
cmps
movs
pop
mov
rcr
(bad)
pandn
inc
mov
mov
and
and
sub
(bad)
mov
xchg
rcr
push
rcl
shl
xchg
adc
cmps
movs
icebp
retf
aam
test
adc
leave
or
dec
sub
repnz
sbb
movs
div
adc
pop
adc
jecxz
leave
ins
nop
jne
shr
sar
ja
mov
xchg
inc
push
jnp
mov
dec
jne
icebp
ds
lahf
cmc
jb
bound
jl
iret
iret
mov
movs
xor
loope
fsub
popf
adc
ins
pusha
or
movs
aas
add
xchg
inc
int
neg
mov
and
adc
push
in
push
ds
ins
xchg
push
rcr
jns
push
loope
adc
lods
out
xchg
and
sub
sbb
pop
xchg
data16
cmp
loope
enter
inc
imul
add
add
dec
xchg
inc
repz
xchg
lods
adc
sahf
(bad)
pop
out
push
mov
add
hlt
pop
hlt
popf
push
mov
icebp
jl
jp
arpl
cmp
inc
or
jecxz
mov
ins
xchg
dec
cmp
data16
int
fs
dec
adc
dec
aam
cmps
dec
mov
jo
xchg
test
sub
iret
xor
jnp
xchg
dec
ret
les
adc
and
pop
push
aam
jl
iret
stos
xor
iret
push
in
mov
or
add
sahf
jne
in
dec
xchg
jb
cmp
(bad)
js
and
push
cwde
movs
and
retf
xchg
leave
lahf
imul
dec
fs
fist
iret
sahf
and
sub
clc
mov
sub
xlat
cs
mov
scas
jbe
shl
mov
mov
dec
rcl
push
sub
movs
shl
jle
jle
push
es
jecxz
mov
dec
jmp
(bad)
nop
movs
pop
aam
ror
lods
jbe
ins
rcl
add
push
hlt
and
xchg
jl
lock
inc
push
and
sub
sub
hlt
pop
mov
bound
push
and
movs
mov
fiadd
fisttp
push
gs
add
enter
ror
mov
xchg
(bad)
out
sub
add
out
daa
aad
loopne
jmp
and
push
sub
lods
fcomp
out
push
dec
fistp
or
cmp
out
and
ret
sahf
sti
and
mov
add
jmp
dec
push
push
xor
pop
(bad)
adc
ja
mov
mov
or
dec
inc
dec
xor
ins
movs
xchg
shl
jle
outs
sbb
mov
xor
(bad)
cmp
out
mov
xor
(bad)
not
jle
add
mov
mov
xlat
sbb
(bad)
imul
fidivr
repnz
xchg
inc
ins
and
retf
pop
test
xchg
ss
into
icebp
cld
jo
sbb
lods
sbb
ret
xlat
jl
call
lock
in
mov
rcpps
mov
and
pop
idiv
jecxz
add
mov
cld
pop
outs
aaa
es
xchg
stos
in
ficomp
pop
sbb
cld
push
xchg
int3
cmp
jl
and
imul
push
lods
jb
loope
adc
push
jae
xor
mov
xchg
add
inc
repz
xor
mov
addr16
(bad)
shl
and
das
fsubr
pop
adc
fistp
lock
loop
mov
scas
add
xchg
pop
inc
sub
mov
sub
push
push
popf
cmp
rol
mov
sub
jnp
jp
inc
xchg
js
aas
fwait
adc
xchg
xlat
inc
pusha
dec
fwait
xchg
jg
scas
icebp
pop
lods
jae
mov
fucomp
fbld
push
add
sahf
sub
mov
add
cwde
mov
popf
jno
and
(bad)
es
jl
push
inc
test
push
(bad)
loope
(bad)
jns
cmp
sahf
add
sti
aas
add
xor
out
cmp
dec
jecxz
lods
add
mov
clc
or
fucomi
es
fucomp
or
popf
push
(bad)
mov
packuswb
add
repz
jl
xor
mov
xor
add
xor
sub
add
pop
jmp
sbb
loopne
mov
or
xchg
pop
mov
sbb
push
and
mov
pushf
mov
add
rcr
jmp
cmc
inc
lds
jp
rcr
adc
in
mov
cmc
retf
inc
in
push
stos
maskmovq
idiv
mov
mov
or
popa
imul
xor
lods
mov
add
xor
sbb
and
das
cmps
push
mov
(bad)
cdq
fcom
cmps
sar
cmp
lock
outs
push
std
fstp
mov
in
add
inc
jno
daa
sbb
pop
inc
loop
adc
rep
and
test
pusha
hlt
dec
jo
js
in
inc
clc
test
imul
dec
stos
retf
or
(bad)
loopne
repz
mov
(bad)
lahf
out
gs
mov
xchg
push
sbb
mov
repz
jnp
mov
or
mov
in
push
(bad)
loop
test
(bad)
sbb
mov
cwde
mov
mov
pushw
int
das
cs
jns
shl
mov
sub
pop
sub
push
fldcw
push
cmp
stos
push
xchg
pop
mov
cli
adc
xchg
out
loop
cli
int3
add
aas
cmps
ja
popf
xor
mov
add
mov
pop
daa
movs
mov
int
push
mov
xchg
jae
xchg
sar
lock
(bad)
mov
out
leave
adc
dec
push
jl
dec
push
fwait
(bad)
jmp
push
ret
mov
mov
cmps
into
xor
scas
js
mov
int
adc
pop
push
imul
aaa
(bad)
cmp
sbb
or
shl
dec
pop
cmc
gs
lahf
lods
sbb
aam
cdq
push
add
das
xor
xor
mov
call
into
test
(bad)
shr
mov
out
cs
imul
sbb
(bad)
jns
movs
mov
call
fsubr
repnz
out
sub
stc
daa
adc
push
ss
(bad)
jmp
push
push
jle
arpl
lock
je
mov
cmp
mov
rol
sbb
push
jmp
aam
sbb
cmp
test
(bad)
jb
int
fcom
out
or
inc
test
push
and
cs
xchg
jmp
in
or
jno
and
in
cmp
cli
inc
fisttp
jmp
cmp
xchg
cld
and
xor
or
pop
in
or
clc
pop
xchg
adc
loopne
div
jge
fcomp
mov
adc
bound
(bad)
xchg
pop
les
pop
je
adc
stos
test
jecxz
lea
jae
ja
cmp
and
cmp
mov
mov
jecxz
cmp
scas
stos
adc
lock
jns
xchg
inc
jmp
mov
addr16
adc
cmp
loope
xor
xchg
jle
cmc
out
add
and
cmp
daa
fcomp
sub
xchg
clc
push
icebp
pop
jg
cmp
jmp
jl
loop
or
inc
push
rol
push
shl
clc
into
and
ret
movs
push
aaa
and
mov
(bad)
push
outs
add
sub
mov
pop
scas
int
imul
mov
imul
and
mov
sub
out
mov
sub
(bad)
cli
out
inc
and
push
fisubr
aam
or
outs
es
and
mov
and
mov
cs
push
push
imul
mov
pop
in
mov
out
fsub
je
mov
dec
lock
or
ss
fsubr
pop
int3
xchg
arpl
pop
xor
mov
out
stos
dec
sti
add
cmp
inc
add
mov
loope
dec
xor
rcr
fild
push
mov
jp
data16
fisttp
ins
scas
push
ss
inc
cmp
xor
push
or
fsubr
imul
je
push
mov
cli
ja
push
pop
xor
mov
fbstp
xchg
dec
jno
imul
leave
fsubr
outs
rol
dec
push
push
jae
in
out
inc
jl
outs
sub
dec
(bad)
mov
(bad)
or
sub
int3
add
add
lahf
or
cli
add
mov
mov
not
xor
repnz
xchg
adc
fs
inc
arpl
inc
pop
hlt
mov
sub
loope
dec
jmp
pop
(bad)
mov
aam
or
mov
sbb
mov
cwde
cli
fidiv
retf
or
(bad)
fwait
in
ror
(bad)
movs
jns
daa
jg
add
sbb
out
mov
and
test
je
dec
push
push
nop
mov
push
dec
add
push
sub
js
ins
push
adc
jb
or
std
xor
cmc
imul
adc
stos
dec
inc
adc
jae
cmp
mov
mov
mov
push
out
push
and
mov
leave
xor
add
inc
hlt
sub
jnp
adc
cmp
or
mov
inc
cld
push
(bad)
push
fucompp
adc
pop
in
cmp
out
inc
pop
push
ror
jmp
fisubr
xor
xchg
scas
xchg
in
dec
mov
icebp
and
xchg
mov
cmp
xor
mov
nop
popa
in
in
inc
ins
sbb
mov
jle
(bad)
data16
mov
in
jnp
mov
cmove
je
imul
pop
in
std
into
mov
gs
sub
(bad)
pop
ret
inc
fisub
out
mov
mov
(bad)
outs
add
push
sub
adc
add
sub
sbb
pop
jo
imul
fstp
repnz
pop
lea
clc
mov
aas
dec
sub
xlat
adc
enter
jb
pop
and
sti
sub
jge
mov
stc
mov
mov
xchg
loopne
mov
sbb
or
cmps
(bad)
adc
jmp
je
push
outs
push
shl
lods
fs
push
cmp
(bad)
arpl
xor
les
sub
and
push
leave
cmps
sub
inc
or
sbb
ds
adc
lock
mov
mov
loop
cs
popf
(bad)
outs
lods
gs
loop
test
gs
push
mov
push
sub
mov
cli
or
mov
test
pop
jns
jmp
pop
mov
jne
call
arpl
jmp
fnsetpm(287
not
xor
mov
fwait
hlt
pop
mov
pushf
adc
arpl
aas
imul
into
ror
cwde
dec
or
jl
cmp
sub
sub
(bad)
push
xchg
repz
repz
and
fcmovnbe
jle
push
sbb
sahf
ds
loop
inc
aas
dec
adc
cmp
shl
lea
pop
enter
(bad)
ins
shl
dec
jo
push
fwait
mov
and
push
xor
arpl
inc
mov
cwd
and
cdq
sbb
stos
or
sub
mov
sbb
xchg
test
das
jl
dec
lods
or
in
imul
mov
push
dec
js
lods
xchg
cmp
xor
push
out
(bad)
arpl
loope
jl
and
adc
call
(bad)
in
inc
mov
outs
out
jo
xchg
xchg
mov
pop
out
sub
mov
fisttp
popa
push
test
popf
and
call
retf
jp
or
jns
gs
jp
loopne
xchg
fcomip
pop
jmp
jmp
aaa
inc
pop
fmul
add
fwait
mov
mov
push
adc
clc
cli
bound
adc
fst
jne
jbe
jns
push
fdiv
(bad)
fldcw
adc
inc
imul
jp
sbb
push
loope
test
cs
in
xchg
int3
gs
inc
loope
aas
xlat
lea
sahf
stos
mov
jl
ss
aas
add
in
jbe
ins
retf
in
sbb
shr
test
test
sahf
adc
push
adc
push
je
std
and
and
sub
push
js
jmp
clc
fisttp
ficom
mov
fistp
out
jb
pop
xchg
(bad)
jge
mov
or
sbb
fisttp
jl
dec
add
int
mov
mov
out
js
repnz
jno
xor
jle
in
jns
dec
icebp
inc
lahf
jae
and
outs
xchg
mov
and
adc
mov
aad
addr16
cmp
call
sbb
inc
cli
retf
aas
cld
dec
mov
(bad)
xor
movs
mov
(bad)
retf
fisubr
ror
cmp
repz
xchg
in
and
sub
or
and
scas
pop
jmp
aad
out
inc
xchg
icebp
dec
jmp
imul
sar
outs
mov
in
or
nop
into
int3
jno
out
das
imul
pop
ror
ds
call
cmps
mov
jl
mov
dec
loop
test
iret
sub
test
xchg
repz
pop
sbb
hlt
imul
add
arpl
out
cmp
inc
cmp
(bad)
imul
aam
daa
push
gs
in
inc
or
mov
adc
mov
jbe
enter
or
push
pop
mov
ret
cld
push
push
jno
lock
mov
xchg
dec
xchg
fistp
call
sahf
rcr
cmp
cld
inc
inc
sub
sub
retf
and
je
loopne
call
std
sub
in
imul
pop
leave
bnd
or
aas
add
imul
pop
mov
in
rol
addr16
mov
(bad)
mov
jbe
adc
cmps
mov
fst
push
in
outs
mov
outs
jbe
fnstcw
repnz
add
ror
xchg
(bad)
jmp
or
in
int
bound
push
adc
sub
pop
sbb
ins
call
and
iret
inc
int
sub
out
inc
out
lods
cmc
pop
call
mov
inc
dec
pop
jl
pop
int
popa
jg
shl
mov
or
out
jg
stc
out
jg
stc
mov
mov
cmc
sub
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
popf
xor
ffree
cmp
xor
xor
pand
outs
outs
mov
fwait
into
mov
mov
add
ror
mov
mov
xchg
jp
mov
fst
stos
push
jbe
xor
push
out
add
clc
adc
ficom
aaa
scas
mov
and
sub
cmc
xchg
lods
setns
aam
in
movs
mov
loop
fstp
call
fidivr
pop
sbb
scas
mov
xchg
adc
mov
xor
xchg
push
dec
ret
bnd
xor
cmp
cmp
stc
psubusb
sbb
adc
xchg
pop
xlat
mov
movs
sbb
xchg
in
mov
cmp
pop
inc
hlt
mov
pop
mov
fwait
ins
lahf
hlt
dec
xor
mov
into
aad
fidiv
mov
push
jo
adc
push
dec
pop
xlat
dec
retf
loopne
arpl
cwde
xchg
sub
outs
idiv
dec
pop
add
clc
aam
in
test
aad
pop
adc
call
imul
add
sub
in
xor
in
jns
jae
stc
stos
inc
lods
lods
test
adc
jle
(bad)
iret
push
pop
fistp
(bad)
jb
and
outs
push
stos
and
in
imul
jmp
mov
and
repnz
mov
std
rcl
clc
pop
adc
ficom
pop
cwde
sub
fsincos
leave
dec
pushw
repz
lods
pop
sbb
cmp
inc
xchg
cmps
inc
jge
xchg
adc
(bad)
push
jge
inc
out
pop
push
xchg
mov
or
add
mov
fld
adc
loope
mov
jmp
jmp
mov
sahf
fcom
add
(bad)
mov
ret
rcr
fisttp
xor
enter
or
arpl
popa
jg
jae
xchg
add
test
aas
out
es
push
inc
adc
in
cmp
test
repz
imul
lock
mov
pop
out
gs
inc
fwait
lods
mov
adc
sbb
xchg
dec
jg
mov
scas
mov
mov
ficom
call
out
mov
retf
sbb
mov
push
dec
mov
push
ds
in
cdq
xchg
hlt
xchg
xchg
sar
imul
mov
adc
cmp
vmovhpd
add
adc
jmp
xor
(bad)
popf
cmps
adc
inc
fsubr
movs
je
dec
adc
retf
push
mov
pop
xchg
mov
mov
int3
xor
pushf
cs
sbb
shr
mov
cmp
mov
lods
add
adc
xchg
pop
xor
ins
dec
sbb
je
fidivr
cli
mov
mov
arpl
hlt
inc
lods
jmp
idiv
div
cmp
mov
cdq
retf
int
js
mov
jns
cmp
shl
sbb
mov
sbb
jb
adc
inc
(bad)
es
retf
mov
sbb
cmp
fcom
stos
jnp
mov
cmp
lock
dec
adc
stos
dec
bound
or
add
ss
sbb
ins
xlat
shl
jae
push
xchg
push
jne
lock
shl
mov
pop
retf
mov
aas
rcl
in
icebp
fcom
imul
lds
adc
retf
lock
hlt
popa
cmp
test
rcl
sbb
(bad)
mov
iret
bound
std
fdivp
mov
(bad)
jecxz
ja
dec
outs
push
push
not
xchg
lods
in
sbb
call
and
sub
cdq
cli
pop
popa
jae
pop
in
xor
out
add
sbb
xchg
mov
sbb
loop
mov
xor
popf
or
lock
mov
adc
repnz
scas
rol
stos
lods
test
repnz
stos
add
sub
loop
jno
popa
sbb
cmp
sub
pop
xchg
mov
dec
out
xor
jns
vmulss
push
mov
icebp
daa
xchg
sbb
jecxz
ret
mov
dec
and
jle
adc
cs
adc
pop
loopne
jae
dec
cwde
jno
fs
add
retf
retf
jns
iret
fiadd
(bad)
jle
xchg
xor
div
xchg
xchg
pushf
pop
repz
push
pop
cld
mov
iret
mov
mov
and
mov
sub
push
clc
xchg
cmp
mov
cmp
mov
loope
ja
outs
jnp
cmps
cmp
loope
ins
fist
mov
popa
stos
bound
scas
inc
xor
jge
imul
add
les
add
ja
mov
push
pop
jno
cdq
add
dec
mov
and
ret
(bad)
stc
pop
(bad)
movs
mov
mov
fwait
js
rcl
mov
push
ja
loope
not
hlt
into
(bad)
imul
test
aas
mov
imul
in
and
xacquire
add
popf
xchg
enter
fidivr
aam
or
scas
xchg
or
stos
push
sub
les
test
in
das
repz
and
(bad)
imul
les
sub
xor
xchg
jns
arpl
jmp
ds
mov
call
mov
shl
icebp
dec
and
fimul
mov
cmc
xchg
adc
add
daa
xor
cmps
jmp
mov
dec
jle
dec
sahf
jnp
out
aaa
sub
ret
out
call
ins
scas
jp
mov
jo
das
(bad)
adc
mov
mov
mov
mov
outs
adc
dec
fsubr
mov
inc
pop
mov
psrlw
fisubr
inc
jb
pop
xor
cmp
sub
mov
push
add
sub
and
add
mov
and
mov
add
int
sbb
and
xchg
push
push
movs
imul
dec
inc
dec
aam
fnstsw
hlt
hlt
pop
dec
outs
repz
xchg
jnp
add
stos
(bad)
shr
jmp
jle
iret
sbb
pop
push
cld
inc
into
int3
sbb
mov
inc
rcl
push
and
and
pop
mov
mov
push
fs
mov
mul
mov
pop
sbb
sbb
sahf
pop
mov
test
es
fnsave
mov
jmp
cmp
adc
add
adc
repnz
fiadd
sub
pop
retf
fwait
jmp
mov
pop
out
aad
or
add
mov
lock
out
cmp
fisttp
sbb
xor
cdq
xchg
sub
lds
or
mov
js
mov
pop
arpl
mov
push
outs
cmp
jmp
dec
xor
jle
sub
addr16
imul
jno
add
scas
sub
xor
out
mov
mov
out
sub
sub
mov
iret
xchg
rol
test
sbb
push
pop
call
rcl
in
push
nop
dec
xor
xor
test
mov
repz
(bad)
sub
fsubr
addr16
scas
jns
pop
sub
mov
jno
out
popa
jge
(bad)
popf
xchg
xchg
not
mov
fiadd
je
mov
push
imul
jg
into
xchg
ret
pop
xor
scas
lea
sbb
cld
addr16
jmp
xlat
or
push
out
call
cmps
xor
(bad)
out
aad
test
jmp
xor
movs
jge
fmul
popa
pop
popw
push
ror
mov
jno
pop
jb
xor
xor
inc
xchg
mov
xor
jg
sbb
je
push
jbe
xchg
jo
mov
cmc
jbe
sbb
mov
or
sbb
fwait
inc
xor
outs
xor
push
sbb
jl
fimul
or
jae
xor
out
jmp
lahf
sbb
cmp
xor
xchg
aaa
xchg
out
inc
xor
test
and
aaa
fdivr
(bad)
jns
xor
ds
jmp
(bad)
cmp
mov
mov
add
mov
push
stos
(bad)
xchg
leave
sbb
mov
push
adc
xchg
jle
stc
mov
(bad)
fnstsw
sbb
and
rcr
in
shl
add
inc
lea
or
les
test
pop
push
mov
or
and
fst
outs
mov
xchg
scas
out
aas
fcom
aad
cdq
or
aam
sub
fisttp
push
es
movs
jmp
ror
inc
shl
and
cmp
jle
fisubr
or
xchg
mov
mov
inc
pop
test
stos
dec
mov
jmp
outs
mov
test
movs
mov
cmp
shl
sbb
sub
test
jae
daa
pushf
rcr
dec
pusha
cmp
push
or
loope
(bad)
adc
(bad)
fiadd
lds
repnz
leave
dec
jl
mov
movs
cwde
repnz
adc
outs
fsubr
add
dec
ret
xchg
(bad)
xor
sub
imul
jp
outs
in
pop
std
or
fdiv
in
cmp
push
xor
push
add
mov
scas
in
out
push
jmp
stos
jl
jle
pusha
mov
push
adc
pop
leave
cmps
cwde
aad
scas
nop
(bad)
loope
push
aas
xchg
mov
or
js
jae
dec
sub
mov
add
movs
int3
jne
mov
movs
mov
push
push
aad
int3
mov
sbb
mov
pop
pop
int
ret
cld
fild
and
sub
scas
add
jmp
jnp
xor
and
int
push
inc
imul
xlat
or
mov
scas
sbb
pop
ror
and
data16
icebp
jne
sub
xlat
xchg
xchg
cmps
jae
call
jo
push
dec
sub
add
sub
pusha
scas
stos
call
adc
or
sbb
mov
aad
(bad)
jo
mov
das
test
inc
cmp
(bad)
loope
lods
in
add
xor
das
inc
adc
mov
jne
in
jg
inc
sbb
call
(bad)
aad
mov
xchg
sub
cmps
mov
push
add
test
sbb
imul
fsubr
jecxz
mul
mov
xchg
enter
bound
ja
test
sbb
out
test
pop
xchg
mov
movs
jae
sub
in
sbb
sub
push
arpl
fsubrp
shl
sbb
sbb
lock
push
sbb
dec
mov
into
arpl
push
jae
jmp
inc
es
pusha
mov
cmp
movs
out
mov
jg
das
push
into
out
mov
pop
xchg
rep
xor
fisttp
add
mov
popf
(bad)
int
bound
xor
xor
cld
xlat
jge
outs
mov
or
push
scas
and
dec
div
ss
(bad)
pushw
cmps
cli
aam
stos
pusha
(bad)
pusha
out
push
shl
jecxz
xor
cmc
mov
cmp
mov
call
xchg
imul
sub
push
sbb
in
cmp
cmc
mov
call
lahf
clc
out
cmp
sbb
stos
xor
jb
dec
rol
inc
(bad)
dec
mov
cmp
fnstsw
mov
(bad)
test
cmp
sub
jp
iret
xchg
mov
dec
adc
mov
inc
retf
and
ret
cmps
fcmovne
inc
xchg
mov
adc
loopne
and
mov
jge
push
popf
arpl
jo
cmps
int3
or
in
mov
push
not
sbb
sub
mov
out
add
adc
fs
mov
pop
ds
inc
shl
scas
adc
fimul
inc
pop
not
sbb
mov
sbb
push
jmp
retf
(bad)
loopne
arpl
pushf
not
jne
frstor
test
pusha
sbb
push
jp
lods
pop
mov
dec
fdivp
and
in
sub
sub
adc
xchg
imul
ja
mov
nop
xlat
in
mov
mov
dec
es
cmp
mov
jmp
test
add
xor
gs
imul
stc
push
dec
mov
pop
and
pop
clc
dec
pop
push
pop
popa
sti
mov
loope
aad
out
outs
push
mov
inc
pop
mov
adc
push
outs
enter
(bad)
adc
call
pop
inc
adc
ins
mov
xor
jp
jb
into
pop
xor
hlt
sti
add
mov
push
pop
lds
lods
hlt
mov
outs
rcr
jbe
mov
and
push
dec
mov
imul
sahf
mov
clc
pop
push
push
jg
sub
loop
ja
jmp
cmp
mov
out
sbb
(bad)
out
retf
loop
jmp
ins
xor
repnz
out
loop
cmc
stos
mov
(bad)
popa
or
jle
cwde
or
test
add
dec
aad
fmul
push
xchg
cmp
aas
jo
or
xor
dec
sbb
out
jmp
or
loop
out
inc
push
adc
jbe
out
jne
and
imul
scas
xor
jo
aam
data16
test
mov
leave
sbb
mov
mov
jecxz
adc
inc
xor
cs
shl
cli
jmp
retf
inc
add
sub
ret
jae
ins
dec
(bad)
push
nop
ror
push
xchg
shl
pop
mov
pushf
in
jnp
addr16
adc
ins
je
out
adc
ftst
out
push
int
iret
mov
arpl
cmp
mov
mov
dec
push
mov
mov
setnp
ror
(bad)
sbb
cdq
test
jnp
scas
adc
gs
dec
cmp
or
add
mov
in
fxch
fidiv
inc
jge
sbb
xchg
push
mov
daa
fisttp
ss
test
imul
pop
clc
cld
in
mov
push
ins
mov
xlat
pusha
dec
arpl
inc
das
adc
cld
push
ds
adc
sbb
mov
and
fld
int
xor
test
int3
pop
ins
push
call
(bad)
pop
cli
xor
imul
jge
sbb
push
inc
sbb
retf
jmp
jo
sub
aas
push
adc
sub
test
xchg
jge
dec
rcl
call
adc
call
jl
mov
jbe
fwait
(bad)
sbb
ror
scas
inc
xor
shl
loop
fidivr
mov
xor
stos
add
cmps
mov
test
sbb
dec
jnp
outs
icebp
push
dec
(bad)
dec
mov
inc
lods
pop
mov
leave
(bad)
sub
jns
push
(bad)
jno
dec
imul
sbb
push
push
shr
xchg
stc
mov
push
lahf
jmp
enter
or
fistp
hlt
and
push
rcl
fdiv
inc
pop
adc
cld
or
stos
aaa
push
inc
call
test
movs
xchg
into
jnp
push
inc
cwde
int3
(bad)
push
add
jl
movs
repnz
jle
fiadd
cli
fucomip
arpl
pop
arpl
inc
mov
xlat
mov
pop
mov
pop
out
sbb
shl
mov
aaa
cmp
aas
xchg
call
adc
mov
cdq
add
out
xor
inc
sbb
xchg
and
inc
or
xchg
ret
sub
fld
(bad)
mov
sub
nop
into
sub
fs
jge
push
inc
js
jmp
xor
rol
xchg
cmps
or
push
adc
bnd
lock
add
lock
or
lahf
ja
mov
out
and
cld
ins
lods
repz
icebp
out
popf
jp
mov
enter
mov
jb
loop
repz
jp
mov
add
lock
dec
loop
add
leave
cs
out
jp
es
mov
push
pop
push
pop
sbb
mov
sbb
push
adc
(bad)
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
add
shl
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
xchg
adc
out
sahf
xor
and
inc
add
and
fstp
call
adc
aas
div
cs
add
dec
pop
xor
test
adc
test
push
std
adc
popf
ss
stos
jg
hlt
neg
add
jmp
jp
adc
les
pop
sbb
cmp
mov
add
push
fistp
aad
shl
(bad)
sbb
(bad)
mov
or
sbb
jle
fisub
outs
and
wbinvd
loope
mov
jmp
fbstp
popa
inc
mov
jb
stc
jl
jne
fdivp
pop
jb
into
xor
adc
lods
fwait
add
lods
iret
cwde
pop
sub
fst
xor
pop
aaa
or
fwait
out
popa
xchg
dec
lods
mov
shr
jmp
test
ret
mov
iret
dec
sti
icebp
retf
dec
popf
test
push
fs
push
les
mov
mov
jmp
sub
sub
hlt
data16
xor
xchg
sub
mov
mov
loopne
idiv
sub
inc
ret
ins
(bad)
and
push
(bad)
int3
mov
mov
pop
adc
inc
js
arpl
cld
jns
jns
ss
jge
out
and
adc
(bad)
dec
or
nop
movs
(bad)
ror
and
push
mov
dec
pop
adc
jg
jo
and
into
push
iret
arpl
(bad)
loopne
jns
mov
push
xchg
cld
ja
mov
in
dec
jge
mov
and
push
sub
ret
mov
ds
and
ret
or
dec
or
jb
(bad)
add
cli
adc
push
or
ins
scas
fistp
xor
test
jne
xor
xchg
call
out
cmovnp
xchg
mov
pop
test
cmovae
out
xchg
lods
scas
inc
xchg
mov
adc
lahf
pop
call
sub
ror
rcr
shl
jae
mov
add
lds
ret
inc
mov
mov
fstp
cdq
outs
sar
test
mov
retf
cmp
mov
mov
iret
mov
inc
aam
idiv
jecxz
lods
shr
lahf
imul
movs
clc
test
out
int
fild
add
iret
jmp
std
ret
add
retf
movs
bound
pop
into
imul
xchg
sub
cdq
dec
in
xor
add
cwde
popf
sti
mov
mov
mov
les
mov
lahf
std
int
push
jge
in
xchg
xor
lds
adc
push
jmp
cmp
scas
pop
mov
test
xor
in
pop
xchg
(bad)
cmp
push
adc
and
repz
sub
fist
or
in
arpl
add
xchg
mov
sub
fdiv
add
xlat
popf
dec
imul
jbe
pop
enter
mov
mov
jmp
sub
inc
push
push
push
sbb
clc
and
push
sbb
dec
pop
jge
xchg
pop
push
push
push
pop
in
inc
mov
cmp
mov
xchg
mov
push
sub
out
inc
jne
xchg
(bad)
retf
ins
xchg
int3
mov
imul
or
loope
pushf
add
xchg
test
inc
int
add
outs
jbe
push
in
psubd
sbb
push
jmp
jb
fiadd
sub
pusha
movs
cmp
fld
arpl
lods
stos
dec
mov
pop
and
or
push
int
das
mov
out
xor
mov
jp
clc
mov
cs
jnp
xchg
jp
into
or
cmp
ss
adc
push
push
dec
mov
inc
jnp
aaa
int
xchg
xor
pusha
stos
mov
jbe
dec
add
jecxz
cli
fistp
pop
add
push
mov
outs
inc
push
test
(bad)
push
hlt
mov
imul
cmps
add
iret
sub
xor
mov
stos
scas
arpl
int
mov
mov
cmp
mov
call
rcr
add
xchg
mov
gs
or
out
or
je
mov
sahf
stos
(bad)
adc
jge
pop
cmp
mov
stos
or
bound
push
pop
or
jmp
mov
(bad)
lods
ja
xor
pop
pop
enter
outs
cmp
shl
xor
movs
jno
mov
retf
rol
lahf
out
std
add
sbb
pop
jne
test
or
push
sbb
in
xor
pop
cmp
pop
dec
addr16
mul
jmp
sub
retf
mov
icebp
cmp
ret
ret
xchg
xchg
ins
and
(bad)
cld
push
xor
add
mov
cmp
cmp
sub
adc
mov
pop
cmc
sub
push
je
and
push
fst
inc
cmp
fs
mov
int3
scas
cs
mov
into
mov
mov
shl
loopne
sub
mov
mov
pop
dec
aam
mov
ss
stos
jne
shl
movs
jo
dec
sub
jns
jno
iret
arpl
cvtps2pd
cmp
pop
cmp
xchg
loope
sbb
out
cld
fmul
pop
adc
cmp
jl
jmp
jmp
cmps
or
mov
add
jmp
xor
arpl
js
cli
cmp
out
ds
fistp
hlt
lock
adc
or
add
push
xchg
push
jbe
out
inc
in
out
add
lods
gs
dec
xlat
sbb
cmp
sti
(bad)
sub
es
aam
xor
xchg
mov
mov
pusha
cli
inc
fwait
cmp
jo
lods
mov
inc
bound
dec
xor
daa
sub
pop
jns
mov
ds
sub
push
xchg
lods
dec
xbegin
addr16
call
into
sub
clc
inc
xchg
lods
stos
cmps
cmps
sti
dec
push
cmp
scas
lahf
int3
mov
and
out
rcl
jle
test
scas
bound
inc
sub
out
test
or
fimul
or
xchg
push
shl
jg
and
and
fisttp
in
push
sets
je
pop
mov
add
cmp
test
mov
gs
dec
push
ins
jl
sub
call
scas
mov
jns
mov
sbb
cmp
ins
xchg
sub
sub
mov
and
jg
icebp
push
lock
cmp
jg
ret
arpl
(bad)
stc
addr16
pop
jb
test
push
cmps
push
mov
(bad)
shl
cmp
aaa
mov
das
icebp
xor
out
shl
in
cmp
sahf
ins
cmp
mov
ins
or
aam
adc
jmp
dec
or
or
add
cmps
xchg
dec
cmps
jns
(bad)
sub
cmps
or
arpl
les
jno
mov
sub
lods
sahf
mov
test
and
int
pop
jb
sub
pop
mov
dec
into
retf
rcl
jmp
(bad)
jmp
outs
popa
mov
xor
xor
push
icebp
mov
fs
(bad)
mov
xchg
cmp
adc
test
push
pop
mov
sub
xchg
xor
ss
xchg
adc
fst
jmp
(bad)
and
or
mov
or
adc
ret
jno
imul
int3
stos
repnz
sub
cmps
scas
pop
or
mov
scas
js
dec
scas
xor
adc
sbb
pop
sti
pop
daa
adc
ret
cwde
and
mov
in
jmp
stos
stos
jo
mov
jecxz
mov
(bad)
shl
ds
mov
cmps
sub
bts
pushf
mov
push
cmp
adc
push
sub
scas
jp
xchg
lahf
or
mov
pop
jle
jge
sbb
repnz
cli
mov
xchg
arpl
daa
shl
mov
ret
xchg
jmp
fist
rcl
jecxz
(bad)
fcomp
test
fwait
movs
mov
pop
enter
cmp
pop
pop
aad
les
pop
fstp
getsec
mov
sub
cmp
mov
add
dec
jae
jns
movs
fsubr
std
int3
xchg
repnz
fsubr
mov
jns
popf
sub
jl
cs
jne
fdiv
jmp
cs
clc
inc
iret
dec
mov
pushf
push
cdq
lock
(bad)
fidiv
arpl
or
dec
pop
adc
mov
je
das
xor
cmp
and
int
add
jnp
and
int
cmp
nop
mov
jbe
in
gs
mov
pop
shr
xchg
mov
dec
addr16
outs
sbb
jmp
(bad)
(bad)
mov
lds
and
push
loop
mov
pop
pop
cmp
neg
push
mov
repz
lahf
sub
mov
xchg
adc
mov
mov
shr
xor
add
cmp
dec
or
into
sub
gs
mov
mov
out
add
cmp
sub
test
mov
das
dec
iret
push
pop
mov
xlat
pop
lock
pop
sbb
dec
jge
mov
sub
xor
loopne
jl
xor
cs
out
daa
cmp
out
(bad)
mov
in
mov
mov
mov
lahf
mov
xchg
pop
out
or
jecxz
out
js
adc
pushf
inc
shr
daa
out
and
push
test
jno
pop
dec
sbb
jo
add
call
dec
inc
mov
nop
or
je
sbb
jl
xchg
cmps
xchg
xor
xchg
pop
mov
mov
lock
pop
idiv
aad
mov
adc
dec
pop
scas
mov
push
jnp
cmp
test
and
inc
inc
jbe
cmp
push
sbb
push
fbstp
cld
xor
xor
sahf
ds
stc
jmp
loope
adc
xor
mov
fistp
pushf
or
add
pusha
inc
loop
xlat
rol
adc
and
cli
retf
fmul
into
lods
retf
call
mov
and
out
pop
push
sbb
fwait
int
adc
jmp
cmp
dec
fcomp
arpl
sub
sbb
stc
push
or
js
or
mov
rcr
sub
js
cmp
outs
mov
sar
enter
or
das
mov
pop
scas
stos
sub
push
imul
and
mov
push
stc
mov
out
(bad)
add
sbb
mov
adc
mov
call
jmp
(bad)
enter
jae
cmp
or
aas
xor
fcmovnb
adc
popfw
(bad)
jnp
jmp
aam
sub
jb
movs
push
sbb
aaa
pop
out
adc
rol
xor
data16
xchg
not
out
neg
gs
jmp
scas
push
mov
daa
add
or
push
in
repnz
mov
dec
jp
cmps
mov
mov
imul
mov
push
xchg
adc
mov
retf
jb
add
cmp
cmc
jne
push
push
out
inc
xchg
std
or
mov
or
or
les
(bad)
shl
ror
mov
fld
scas
cmps
push
jmp
push
pop
ret
fstp
cmps
stos
cdq
push
mov
js
dec
jno
fsubr
xlat
mov
jmp
mov
pop
les
sub
mov
adc
cmp
mov
push
test
and
adc
jo
idiv
cmp
je
cmp
push
sahf
pop
adc
ficom
fnstsw
pop
sub
repnz
rcr
push
dec
leave
rol
dec
loop
icebp
jno
(bad)
inc
inc
sar
dec
fcomp
sbb
scas
jg
outs
jmp
cmp
in
jb
xor
mov
scas
arpl
test
and
loope
outs
pop
cmp
cli
mov
mov
aam
imul
cs
frstor
mov
pop
add
adc
or
jne
adc
xor
and
lods
inc
shl
loop
mov
sub
jnp
inc
jae
and
pop
js
inc
popa
xchg
fstp
cmps
mov
xchg
in
sub
pop
mov
iret
mov
scas
cmp
retf
add
out
or
retf
inc
ins
shl
es
rcl
xchg
and
in
mov
in
push
add
mov
movs
xchg
stc
imul
test
call
or
cmovnp
outs
scas
and
sub
mov
rcr
out
cwde
push
mov
cwde
stc
call
and
add
xchg
retf
push
and
mov
lahf
js
mov
lods
mov
jge
and
loope
xor
addr16
mov
mov
dec
scas
ja
test
inc
adc
mov
daa
lods
rol
xchg
arpl
jecxz
inc
pop
xor
mov
call
push
add
push
push
mov
sahf
popf
retf
inc
xchg
inc
mov
imul
add
pop
enter
hlt
scas
test
(bad)
xor
push
outs
mov
mov
inc
outs
mov
sub
inc
pop
ins
mov
outs
movs
inc
mov
cmp
xchg
int3
mov
outs
ja
and
ds
cmps
cli
mov
sahf
mov
in
sub
mov
adc
shl
std
xor
sbb
jle
imul
sub
out
mov
mov
inc
xchg
jle
outs
dec
xchg
jge
ja
push
xor
dec
shr
mov
xchg
pusha
jle
movs
xchg
xchg
jmp
mov
leave
inc
adc
fist
popf
fbld
push
in
mov
mov
mov
idiv
mov
mov
nop
inc
or
les
cmps
hlt
mov
clc
ss
jo
xchg
xor
shl
sti
or
aad
lods
dec
add
popa
pop
mov
pushf
fbld
mov
in
pop
or
add
push
daa
pop
mov
inc
imul
mov
push
in
mov
push
inc
inc
popa
push
cli
mov
imul
sub
leave
ja
pushf
leave
add
test
push
mov
cmp
aam
stos
aad
push
ret
std
repnz
add
mov
and
rol
cmp
outs
loop
shr
xchg
xchg
mov
pop
xor
lock
xchg
cmc
push
icebp
mov
cmp
ins
jp
in
inc
mov
add
ins
popf
les
fidiv
mov
enter
mov
dec
or
pop
addr16
sbb
and
dec
mov
movs
sub
gs
fidiv
jb
adc
xchg
sbb
and
pop
scas
cld
push
or
ficomp
push
xlat
fimul
outs
pop
mov
pop
outs
pusha
mov
lock
sub
jb
or
jbe
jae
mov
mov
jmp
and
out
movs
hlt
jl
pushf
or
(bad)
sbb
mov
jge
mov
ror
lahf
xchg
ret
movs
lods
jmp
mov
popa
mov
xlat
push
test
mov
sbb
maskmovdqu
test
jns
jmp
and
pop
popa
pop
cmp
or
test
scas
aad
pusha
out
pop
leave
adc
inc
ret
mov
das
pop
outs
in
jg
sub
dec
push
mov
cmc
leave
or
scas
dec
pop
inc
jg
ins
lods
mov
inc
outs
cli
mov
push
sbb
std
cld
repz
ins
push
(bad)
jb
je
or
sbb
dec
cmp
mov
cmps
pushf
add
daa
cmp
mov
jecxz
mov
dec
cmp
push
sbb
inc
cmp
aaa
mov
push
out
cmp
into
dec
push
leave
fwait
xor
fmul
pop
jnp
add
jge
push
adc
mov
pop
dec
stos
aaa
fcom
je
fs
ja
movs
cmp
push
mov
push
fwait
stc
retf
pop
jp
out
mov
xor
out
xchg
mov
adc
dec
jo
add
and
sub
lahf
jg
stc
out
call
add
jg
mov
inc
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
sbb
dec
dec
dec
dec
int3
popa
(bad)
fwait
adc
fstp
xor
mov
mov
cmps
mov
sahf
pop
add
or
leave
popa
dec
popf
fucomp
(bad)
inc
mov
xchg
pusha
outs
cwde
rcr
xchg
cdq
cmp
add
xchg
lahf
and
es
xchg
jnp
into
xchg
nop
adc
mov
push
sbb
addr16
mov
pusha
mov
popf
sub
jne
and
pop
cmc
maxps
gs
push
jge
cmp
repz
jns
inc
mov
sar
aaa
pop
ja
push
loopne
inc
push
aad
mov
sub
call
xor
retf
mov
(bad)
jbe
pop
call
and
mov
cmps
dec
adc
xor
sti
enter
loopne
sub
enter
push
sar
xor
stc
mov
iret
push
pushf
mov
jg
ins
mov
xor
mov
pop
push
sub
ins
mov
and
fcmovnu
inc
inc
daa
jmp
mov
or
pop
imul
movq
rcl
aam
push
fstp
call
mov
dec
adc
fdiv
and
pop
or
cmp
cwde
xchg
into
loope
cmp
in
xchg
sbb
aad
fisttp
sub
aaa
pusha
movq
xchg
push
mov
lahf
(bad)
and
dec
push
mov
or
addr16
jecxz
cmp
inc
dec
jmp
pop
push
lahf
xor
in
sbb
lds
ret
sbb
aaa
hlt
fwait
js
jbe
adc
(bad)
out
mov
fs
std
adc
jo
push
adc
fwait
inc
pop
cli
dec
es
movs
add
xor
inc
jmp
add
and
(bad)
iret
fld
xor
adc
test
mov
mov
gs
fs
fst
out
and
loope
push
in
movlps
stos
dec
loope
push
hlt
gs
(bad)
movd
daa
ins
mov
cmp
std
arpl
or
inc
stos
push
jecxz
dec
int3
add
fs
push
mov
hlt
jp
scas
sub
aad
in
mov
out
xchg
or
ins
cld
add
push
sub
cmp
sbb
or
cmps
arpl
or
retf
push
sbb
inc
in
cwde
lock
cmps
leave
into
or
pop
daa
mov
(bad)
les
adc
cli
and
adc
xchg
cmp
lods
rcl
sub
xlat
xor
cmp
ss
imul
shl
add
xor
bnd
xor
inc
(bad)
mov
mov
and
jle
pop
stc
jmp
push
mov
test
div
jnp
ins
mov
jae
mov
push
sar
xchg
cmp
in
push
(bad)
adc
fld
cdq
retf
pop
sar
adc
jns
test
popf
jb
aas
pop
pusha
mov
shl
(bad)
mov
clc
(bad)
jbe
cmp
(bad)
scas
stos
pop
jae
pusha
pop
xchg
xor
pop
dec
dec
adc
push
out
movs
repz
mov
pause
in
mov
add
sub
fmul
inc
sub
sar
inc
fisubr
sub
jmp
imul
in
dec
mov
mov
pushf
aas
rol
lock
mov
inc
pusha
cmps
lock
popa
xor
xor
fcom
in
iret
and
xchg
lods
movs
mov
inc
cdq
mov
ds
pop
jo
xchg
push
(bad)
loop
add
cmps
sub
inc
std
inc
xor
fwait
mov
(bad)
cmc
(bad)
arpl
mov
jmp
mov
add
mov
cs
adc
cmp
mov
test
sbb
dec
adc
push
movs
rcl
cmp
addr16
sbb
adc
inc
sub
xchg
jbe
sub
inc
xchg
enter
cdq
mov
fsub
into
sti
in
call
inc
retf
pushf
mov
dec
jg
cmp
and
aad
adc
adc
and
shl
mov
pop
sti
mov
(bad)
cmps
movs
cmp
repz
push
clc
fistp
repz
shl
adc
imul
mov
mov
fisubr
test
shl
movs
pop
scas
(bad)
sar
(bad)
clc
fiadd
and
add
mov
add
adc
jo
test
mov
lds
shr
pop
jbe
fcmovnbe
xchg
inc
iret
push
mov
mov
jmp
mov
sbb
iret
test
pop
out
(bad)
jp
in
mov
xchg
jno
push
add
movs
push
xchg
add
push
outs
xor
popf
and
fisttp
jno
cmp
dec
(bad)
ins
cmp
test
addr16
push
push
cwde
(bad)
mov
push
mov
jecxz
jbe
cdq
sub
and
fimul
in
mov
xlat
ins
rcr
scas
sbb
pop
fcom
scas
xor
pop
pop
sbb
out
ror
mov
cli
cmp
lock
ds
and
adc
aam
add
rcl
test
(bad)
mov
mov
retf
sub
xlat
shl
mov
and
into
adc
pushf
ins
mov
mov
xor
movs
gs
jns
cmp
rcl
imul
inc
lods
pop
fdivp
imul
outs
fimul
sub
cli
mov
call
pop
mov
pop
lds
jecxz
je
add
fwait
addr16
or
ins
dec
in
add
sbb
inc
mov
and
push
push
aad
test
add
stos
ss
fstp
cmps
imul
(bad)
sti
mov
(bad)
repz
aad
jns
fistp
and
xchg
movs
mov
dec
or
add
es
mov
mov
jne
or
sub
xchg
and
nop
stc
dec
pop
add
lods
div
movs
pop
sbb
xchg
(bad)
loopne
jno
fwait
jecxz
into
inc
jnp
test
in
loop
or
and
shl
(bad)
fild
xchg
jge
push
in
cmp
loop
std
cwde
lods
gs
adc
cmp
xchg
mov
push
sub
pop
mov
cmp
xor
test
dec
dec
data16
jns
mov
push
cmps
or
xchg
mov
dec
adc
sti
inc
in
add
lds
lock
mov
and
mov
(bad)
cmps
jne
dec
adc
(bad)
stos
test
mov
mov
in
mov
push
jmp
arpl
jge
xor
ret
mov
jnp
jnp
or
pop
dec
dec
test
packsswb
retf
or
shl
jmp
or
mov
fcomp
pop
sub
adc
mov
and
iret
lods
pop
mov
and
and
inc
sub
cmp
jmp
mov
call
das
dec
cmp
int3
lods
outs
jmp
or
and
adc
jl
dec
mov
sub
jl
push
dec
hlt
push
imul
rol
jle
stc
sbb
mov
lods
xchg
add
or
push
xor
js
xor
jns
mov
mov
jmp
arpl
jae
div
mov
fs
jle
jmp
lods
(bad)
iret
or
ror
jo
call
cli
or
cwde
aaa
cmps
in
add
mov
test
xchg
clc
ret
xchg
cli
add
dec
cmp
pusha
inc
repz
pop
sbb
ins
mov
or
sbb
(bad)
xchg
sbb
call
xchg
pop
pushf
aad
mov
pop
add
inc
and
das
lahf
pop
pop
mov
cdq
(bad)
or
(bad)
in
nop
push
adc
stos
push
mov
adc
stos
aas
and
pop
jg
jge
adc
dec
ror
lods
bound
cmp
sub
in
ficom
into
ins
push
bound
cs
les
fwait
mov
push
enter
je
pop
push
test
mov
xchg
dec
pop
test
je
add
mov
mov
ret
arpl
sub
or
cs
ja
jns
push
push
lock
add
scas
cmps
in
test
add
sbb
inc
(bad)
mov
adc
xor
aad
push
movs
outs
lock
adc
sbb
fild
push
call
cmp
and
xlat
adc
fimul
popa
fwait
push
repnz
cmp
cwde
sar
push
jge
xor
and
adc
pop
and
mov
xor
mov
ds
data16
ja
jnp
dec
pushf
push
(bad)
in
les
iret
push
(bad)
jne
out
xlat
push
in
jl
xor
push
out
jl
or
les
daa
ins
sbb
fdivr
dec
loopne
cmc
push
pop
jecxz
iret
fmul
sub
shl
in
gs
pop
fcomip
cmp
adc
dec
xor
loope
std
adc
addr16
stos
add
push
jmp
iret
mov
(bad)
mov
call
xor
dec
ficom
loope
rcr
adc
das
(bad)
ds
pop
xor
je
push
mov
repnz
scas
cmp
and
mov
call
dec
scas
fwait
jmp
stc
scas
aaa
loop
shr
sub
adc
pop
inc
jle
ss
div
movs
es
pop
or
ds
inc
push
xchg
test
les
cli
sbb
js
(bad)
stos
(bad)
and
iret
(bad)
mov
lea
test
int3
xchg
das
xor
jae
adc
pop
retf
lods
mov
fnstsw
dec
xor
jno
sti
iret
daa
sbb
imul
stos
int3
mov
pop
jns
int3
sar
or
mov
jge
xchg
ret
call
loop
data16
cmp
pop
aaa
cmps
add
jmp
jae
lods
es
nop
sahf
mov
in
shr
lea
dec
mov
or
cmps
dec
or
test
xchg
mov
sbb
icebp
movs
mov
ins
add
push
pop
xor
mov
pop
je
out
in
mov
cwde
xor
les
xor
xchg
loopne
daa
jg
jo
lea
mov
inc
lea
int3
push
cs
pushf
(bad)
adc
in
int
push
lods
fdiv
hlt
repnz
push
out
les
inc
fisub
mov
aam
mov
pop
aaa
fndisi(8087
movs
and
cdq
or
loope
dec
xchg
lds
add
or
(bad)
mov
test
stos
call
ficomp
loopne
xlat
mov
ins
mov
bound
mov
stos
outs
cmp
int3
outs
rcl
rcl
repz
cwde
jbe
inc
emms
stc
add
jp
cmp
mov
or
mov
ja
cmp
fild
in
xchg
out
mov
fidivr
inc
xor
pop
inc
aas
inc
cmp
push
pop
xlat
fsub
int3
jmp
pop
repnz
push
push
iret
jle
lock
mov
cmp
fist
jnp
cmp
mov
jmp
sti
mov
je
ins
sbb
aas
cmp
xchg
jo
imul
stos
ss
mov
cli
test
xchg
mov
ret
dec
push
ja
(bad)
jne
mov
(bad)
out
fdivr
pop
xchg
sub
sub
outs
jg
fmul
add
ss
mov
jnp
dec
dec
xchg
popf
jl
dec
stc
retf
pusha
sbb
pop
sbb
mov
push
loopne
cmp
mov
jle
and
lods
sbb
test
rcl
lahf
fwait
sub
push
inc
dec
and
ins
inc
icebp
or
pusha
xchg
loopne
dec
dec
inc
out
retf
mov
xchg
jmp
push
ds
leave
fcmovnb
inc
retf
repz
dec
or
xchg
adc
movs
inc
icebp
retf
jne
pushf
inc
enter
repz
push
or
js
retf
out
push
add
cmp
dec
adc
mov
cmp
outs
xchg
dec
rol
popf
pop
scas
push
hlt
dec
pop
fwait
addr16
cmp
mov
retf
mov
xor
jg
or
push
scas
cmps
cmp
cs
cmp
sbb
(bad)
or
xor
fidivr
push
out
push
addr16
xchg
ins
jmp
scas
xchg
or
sar
push
sub
out
ins
aaa
bound
arpl
adc
inc
push
(bad)
inc
jbe
inc
repz
and
loope
xor
ins
pushw
cs
sbb
and
or
cmp
js
mov
repz
dec
stos
movs
and
push
aam
cli
mov
scas
mov
mov
dec
adc
adc
pop
push
mov
scas
xchg
stos
outs
int
idiv
jmp
not
push
or
push
mov
test
inc
add
fwait
call
push
push
mov
scas
xchg
add
cdq
or
mov
mov
mov
aad
rcr
mov
pop
cmp
add
ja
mov
rol
(bad)
pop
sbb
or
or
xlat
push
sbb
lds
jle
xchg
inc
sub
repz
dec
lahf
push
adc
popf
(bad)
dec
popf
lods
adc
test
cmc
test
push
mov
(bad)
arpl
addr16
in
jbe
adc
(bad)
loope
and
loopne
neg
add
mov
repnz
inc
jno
popf
lods
(bad)
cdq
dec
push
ficom
xlat
mov
cmp
les
push
xor
xor
fild
outs
pop
sti
mov
inc
mov
out
push
jp
jae
lods
pop
out
mov
dec
ds
rol
pop
out
adc
pop
jae
rcr
movs
icebp
out
sub
lea
nop
pop
movs
xor
repz
loopne
call
pop
mov
push
sub
jle
retf
rcr
xchg
scas
lock
xchg
(bad)
inc
stc
icebp
test
iret
fstp
movs
jo
pop
scas
inc
jmp
fadd
jmp
jmp
jge
ror
push
mov
test
lock
inc
mov
or
call
xor
sub
adc
jmp
daa
out
repnz
dec
in
push
popf
mov
mov
(bad)
ficom
aas
mov
inc
pop
loopne
aaa
mov
add
add
(bad)
sub
cld
mov
push
(bad)
lods
hlt
(bad)
add
mov
sbb
cmp
mov
arpl
xlat
mov
inc
push
cmp
sahf
(bad)
mov
jmp
out
das
pop
mov
jge
dec
mov
mov
cmc
sbb
rol
xor
xchg
fimul
lahf
clc
push
movq
das
sbb
jns
js
jb
mov
push
mov
mov
pusha
lahf
push
ds
jae
aas
cmps
popa
adc
sub
cld
addr16
test
add
jecxz
inc
push
cld
fdiv
lea
shr
je
and
mov
cmps
pusha
outs
(bad)
pushf
sub
lahf
or
mov
and
cmp
and
xchg
pop
cmp
jmp
cmps
mov
xchg
or
(bad)
fmul
retf
retf
scas
and
and
test
and
cmps
int3
pop
idiv
out
repnz
mov
fsubr
fldenv
inc
cld
and
je
stos
stos
xchg
mov
hlt
sar
inc
dec
fdiv
pop
dec
mov
ja
cwde
je
sar
sub
cmp
mov
mov
xor
mov
shr
sub
cmp
retf
add
or
or
push
hlt
in
or
not
xor
imul
cmps
adc
jg
pop
cmp
xchg
or
sbb
enter
lods
stos
not
add
stc
out
jg
stc
out
jg
scas
add
inc
pop
mov
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
shl
out
out
scas
push
arpl
(bad)
leave
dec
not
aam
cmp
cmps
arpl
dec
xor
hlt
clc
test
ror
jmp
mov
repz
js
push
das
add
stos
gs
ins
xchg
jle
out
mov
pop
outs
clc
cmp
adc
int3
mov
jge
cdq
ror
mov
push
in
sbb
inc
es
pop
ss
lods
jg
scas
int
mov
push
aam
xchg
mov
and
fcmovbe
jno
adc
arpl
and
fcom
popf
(bad)
lahf
stos
sub
pop
in
jns
stc
push
sbb
pop
mov
loope
retf
outs
loope
outs
sub
fldl2t
loopne
xor
add
repnz
fcomp
dec
je
fnstsw
xchg
inc
mov
in
jp
addr16
add
dec
push
xchg
fdivr
jae
inc
inc
jmp
add
je
sbb
call
or
adc
dec
aad
xor
mov
and
cmp
cmp
pop
out
pop
bound
pop
sbb
mov
gs
dec
pusha
sti
mov
mov
and
cdq
lea
inc
cld
test
cmc
dec
jb
sbb
adc
stos
in
push
cmps
jp
imul
stc
hlt
sahf
pop
jne
dec
or
jae
push
mov
push
stos
ret
fsubp
xchg
test
std
faddp
xchg
ins
inc
scas
int3
ret
dec
pop
out
pop
es
fsubp
push
jmp
push
inc
push
cmp
lea
cli
xchg
sbb
add
pop
cmps
cli
(bad)
popa
mov
and
dec
int3
(bad)
hlt
pop
xchg
cmc
dec
aam
cmp
pop
shl
out
mov
out
frstor
adc
adc
jg
xchg
jbe
stos
ret
inc
pop
add
sbb
and
pusha
jg
mov
mov
jmp
inc
fst
outs
jge
ror
mov
shl
fnstenv
xor
sbb
mov
cmc
int3
(bad)
dec
test
xor
pop
sar
jg
movs
xchg
fistp
push
jge
loop
cmp
xchg
or
test
fild
pop
sbb
xor
aaa
lods
xchg
jg
scas
push
xor
shr
mov
cmp
daa
mov
jl
das
cmp
sahf
jle
cmc
xchg
into
in
pop
call
sbb
into
test
sbb
mov
or
push
inc
call
in
leave
sub
stc
popa
cmc
push
les
fs
cwde
loope
sub
jl
rcr
adc
lea
pushf
iret
sub
dec
xor
mov
or
dec
imul
xchg
mov
lods
push
into
cmps
xchg
mov
xor
push
xchg
fldcw
xor
sti
xor
jb
inc
pop
and
lds
mov
sbb
stc
jecxz
test
sub
cmp
push
adc
inc
sbb
mov
mov
add
and
popa
fiadd
loope
stos
push
outs
(bad)
mov
xchg
ror
scas
xor
mov
push
lods
sahf
pop
sahf
jno
scas
inc
test
stos
(bad)
out
dec
(bad)
daa
dec
xchg
js
adc
add
daa
retf
adc
dec
mov
repnz
(bad)
in
je
ficom
outs
arpl
add
daa
add
jge
pop
loop
ins
ret
mov
push
inc
mov
fwait
jge
dec
mov
adc
popa
mov
push
imul
inc
daa
inc
out
pushf
jp
sti
fadd
pop
int3
outs
sub
mov
xchg
pushf
adc
enter
pop
sahf
jb
es
add
pop
iret
(bad)
jp
sar
sahf
cdq
gs
push
popf
aam
dec
xchg
mov
sti
mov
out
fwait
repnz
sbb
pop
sub
sbb
jae
ins
lods
sti
test
xor
mov
sbb
inc
add
cmc
xor
adc
xchg
add
xor
jle
push
adc
jne
repz
lock
sbb
mov
lock
dec
iret
test
pusha
ret
fiadd
dec
das
(bad)
mov
in
mov
ja
cmp
jnp
adc
or
mov
mov
xor
push
pop
fsubr
adc
mov
inc
jmp
jecxz
pcmpeqb
enter
lods
(bad)
stos
out
dec
dec
aad
pop
and
repz
ret
addr16
fmul
ss
addr16
fisubr
aam
xchg
aam
lods
sbb
adc
out
(bad)
xor
and
xchg
push
mov
cmp
inc
fistp
cmp
xor
jg
push
pop
iret
xchg
pop
data16
in
sub
(bad)
dec
retf
push
jns
loope
fdivr
dec
fisttp
out
push
jle
stc
cld
ret
in
fst
fs
dec
xchg
movs
jge
mov
cmp
push
xor
(bad)
jmp
mov
add
sub
dec
push
pop
or
mov
mov
adc
(bad)
hlt
xchg
xchg
cmc
popf
xchg
call
cmp
test
call
mov
jne
repnz
push
repnz
pop
pandn
and
mov
outs
mov
xchg
(bad)
out
or
fs
jae
icebp
shr
das
hlt
dec
sar
dec
sbb
aad
mov
jg
cmp
mov
xchg
mul
cs
pop
push
mov
outs
dec
pop
fs
popf
mov
aad
sub
xor
cmp
pop
push
popf
mov
outs
movs
aad
in
jl
pop
xor
lods
xchg
fnsave
add
jno
dec
cmc
push
xchg
or
or
cmp
adc
test
dec
dec
xor
cli
mov
ror
test
add
rcr
dec
in
sbb
sub
jle
and
test
je
push
adc
clc
std
jne
mov
and
scas
push
adc
cmps
hlt
sbb
push
xor
stos
ret
lahf
or
or
and
mov
cmc
iret
push
fadd
xchg
popa
push
cmp
push
fild
mov
sbb
push
mov
lods
pop
out
pop
mov
fcmove
in
aam
mov
xor
out
pop
dec
dec
sbb
mov
adc
cmp
loop
mov
cmp
jp
xchg
jl
fisub
outs
fwait
pop
jg
jb
xchg
and
xor
outs
lock
add
sub
inc
mov
movups
fwait
mov
mov
idiv
iret
push
imul
out
xor
add
and
adc
test
mov
ds
push
mov
mov
in
(bad)
push
sub
adc
mov
xchg
or
and
push
add
repnz
mov
and
xchg
sub
arpl
pusha
inc
push
lock
sbb
and
mov
int3
mov
fcomp
leave
push
or
lods
fimul
lds
xchg
adc
push
neg
std
dec
aad
lea
iret
jp
dec
and
xor
jb
retf
cwde
push
and
add
int3
push
lods
sar
adc
pop
sub
jecxz
and
pop
repz
push
mov
sub
push
stc
inc
mov
dec
jne
and
and
adc
push
mov
cmp
mov
mov
rcr
xchg
sbb
imul
jnp
dec
dec
loope
cmps
pop
push
dec
gs
(bad)
push
push
outs
and
mul
nop
sub
fwait
sub
xchg
jmp
inc
js
jae
or
outs
inc
scas
dec
add
sub
sbb
push
dec
push
out
inc
push
and
out
retf
push
aas
xchg
inc
int
xchg
push
xchg
xor
add
mov
shl
lock
mov
mov
cld
lods
or
mov
jns
movs
push
sbb
pop
mov
inc
sahf
cld
loop
ret
div
push
and
dec
jmp
adc
push
test
adc
or
sbb
ins
in
fistp
lds
adc
jmp
and
and
repz
es
jae
adc
xlat
in
je
loop
or
ja
mov
and
sbb
lds
mov
lods
ins
push
fsubr
pop
bound
fimul
dec
push
lods
lds
dec
cmp
mov
pop
push
jb
into
sub
cwde
addr16
test
inc
(bad)
mov
or
addr16
sub
pop
and
leave
ret
mov
movs
xor
icebp
(bad)
in
cdq
adc
cwde
jns
xchg
mov
xor
or
xchg
arpl
adc
pop
fs
pusha
in
fcom
int3
or
lahf
ins
sub
inc
mov
pop
and
dec
xchg
ins
(bad)
sbb
pop
xchg
mov
pop
in
bound
ret
lods
ds
loope
mov
jae
adc
(bad)
fwait
pop
(bad)
dec
ss
pop
bound
mov
out
pop
cmp
in
or
sti
sub
jns
stos
dec
rcl
jae
(bad)
aam
aam
shl
xchg
neg
loopne
(bad)
aad
movs
pusha
mov
jns
jg
jmp
or
sbb
cmps
adc
test
xchg
push
lds
push
push
jmp
xor
inc
out
call
lods
dec
imul
xor
mov
mov
test
mov
push
lock
push
ins
repnz
ds
call
stc
jb
shrd
dec
push
cwde
(bad)
loop
dec
int
push
adc
xor
fldcw
imul
pop
xor
adc
cmp
imul
ja
popa
ret
mov
inc
jne
cmp
dec
(bad)
dec
test
or
call
aam
fidivr
or
mov
and
sub
scas
(bad)
cmc
inc
mov
hlt
mov
inc
mov
fwait
push
mov
std
push
lea
xor
sub
xchg
gs
aaa
femms
sbb
inc
fimul
sbb
dec
or
repnz
jg
xor
out
shl
in
fwait
pop
pop
arpl
sub
cmps
scas
jp
xchg
jmp
pop
lahf
jecxz
xor
scas
imul
mov
push
xchg
(bad)
xchg
sbb
stos
out
pop
aaa
mov
sub
sub
and
into
mov
ins
leave
mov
sub
js
ret
test
je
adc
push
add
mov
dec
xor
cwde
cmps
stos
mov
aaa
mov
and
lods
ficom
cld
jge
data16
jmp
push
mul
imul
addr16
fidivr
movs
fild
das
inc
ins
add
and
pop
or
sbb
sub
enter
cmps
xchg
jmp
xchg
retf
pop
shl
xchg
jp
adc
push
add
mov
fst
clc
(bad)
pop
or
stos
shl
fcom
sub
mov
jnp
imul
mov
inc
add
mov
(bad)
in
lods
lahf
sub
popa
and
in
sbb
dec
push
aas
sub
(bad)
dec
jns
cwde
dec
ins
aad
call
call
lahf
jmp
retf
xchg
pop
aad
fld
ret
inc
add
inc
mov
jmp
mov
or
(bad)
pop
and
mov
cld
mov
mov
jmp
in
movs
mov
fmul
mov
aam
wbinvd
xor
sub
es
add
movs
(bad)
mov
in
ret
pop
call
lock
adc
in
push
mov
aas
scas
call
jg
jmp
pop
cmps
dec
cmp
fsincos
push
sbb
and
mov
mov
mov
mov
shl
ja
mov
mov
mov
mov
imul
adc
in
sub
scas
gs
push
pop
inc
dec
fistp
xor
ret
shr
leave
scas
pop
ss
js
ins
sub
call
aas
add
pop
or
aam
xor
into
push
sar
call
bound
adc
lea
ror
xor
inc
add
ja
addr16
loopne
ins
mov
cdq
mov
or
xchg
sbb
div
push
mov
int3
sti
sbb
xor
imul
fisubr
test
adc
inc
(bad)
lahf
pop
nop
and
fwait
sbb
mov
pop
hlt
jne
ds
cli
inc
pusha
and
nop
arpl
inc
xor
mov
pop
aaa
fs
mov
dec
jle
jecxz
mov
pushf
stos
jle
mov
rcr
imul
xchg
mov
cmp
jmp
lock
dec
mov
mov
outs
cmp
jmp
sbb
loop
adc
or
push
jge
or
mov
or
add
fsubr
jge
not
addr16
leave
mov
inc
out
cld
inc
jl
or
arpl
cdq
outs
std
cdq
mov
enter
repz
sbb
call
fs
sub
mov
test
push
pushf
jo
mov
xchg
jg
ins
mov
ins
shr
add
push
pusha
mov
(bad)
cs
(bad)
cmp
hlt
mov
pop
shl
loopne
mov
mov
xchg
xchg
lahf
jmp
rol
scas
mov
fcomp
pop
(bad)
mov
mov
sub
sahf
(bad)
dec
enter
outs
int
sbb
cli
push
fsubp
adc
shl
jge
mov
loopne
pop
hlt
mov
or
pop
cmp
push
mov
jmp
jbe
xchg
mov
je
fucom
sub
mov
add
sar
iret
into
or
call
sar
gs
cmp
fdivr
sub
test
xchg
mov
ror
cld
and
rcr
loope
mov
jno
jl
inc
fld
push
nop
repz
out
cmp
call
xchg
dec
retf
(bad)
xchg
cmp
inc
test
push
pop
xchg
xchg
arpl
add
xchg
sub
(bad)
(bad)
je
int
and
sbb
inc
pop
or
cld
imul
(bad)
push
std
sbb
hlt
sbb
add
jl
sahf
add
pop
cdq
retf
(bad)
(bad)
pop
clc
test
cmp
jb
call
icebp
cwde
mov
jo
xchg
pop
cmps
xor
sub
std
fs
std
dec
inc
adc
and
ror
push
(bad)
aad
mov
scas
nop
sub
jne
fisttp
das
jo
jp
sbb
pushf
enter
rol
lea
dec
mov
sbb
jns
ficom
movs
adc
jns
inc
cmp
or
jmp
mov
cmp
jmp
ss
pop
(bad)
stos
pop
inc
jl
pop
aas
sar
test
retf
(bad)
push
fldcw
sub
inc
cli
inc
pop
add
(bad)
mov
jbe
test
push
es
test
adc
stos
aaa
aam
ja
inc
jno
out
add
xchg
cmp
iret
dec
mov
sub
push
nop
lods
aad
mov
or
mov
and
and
xchg
ds
cli
push
inc
retf
cwde
int3
movs
push
shr
or
mov
inc
jp
mov
dec
inc
jmp
in
(bad)
push
push
jle
push
mov
xor
sahf
pop
push
inc
retf
adc
loopne
pop
and
fdivr
cdq
jae
mov
scas
jle
cmps
and
mov
shl
inc
push
cld
mov
push
(bad)
mov
es
pop
jmp
xor
inc
scas
imul
les
test
sbb
pop
mov
cmp
imul
add
cmp
ret
rol
jp
jle
iret
js
sti
sub
xor
enter
dec
mov
retf
fist
mov
outs
jg
imul
bswap
ins
inc
and
or
jb
inc
lods
mov
pop
add
sbb
sub
xchg
(bad)
xchg
fmul
mov
ret
aad
mov
cmp
sahf
cmc
pop
out
add
xor
mov
inc
into
iret
lods
sbb
neg
aas
and
adc
cmp
(bad)
cld
repz
aas
(bad)
cld
repz
aas
jmp
ds
daa
mov
sub
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ret
je
popf
out
call
sbb
jecxz
shl
cmps
arpl
cmps
int
in
jo
mov
add
nop
int3
sbb
cld
push
mov
mov
(bad)
xchg
aad
dec
sub
jecxz
div
lahf
cmp
stos
xor
lods
scas
clc
std
fisub
jns
push
mov
rol
shl
shl
jecxz
sbb
cld
(bad)
inc
pop
scas
or
push
jae
cdq
cwde
popf
xor
push
push
cmp
test
rcr
or
popf
push
mov
sti
jne
shl
dec
mov
aad
cmp
(bad)
es
fnstsw
stos
jmp
cbw
cmp
xlat
sub
inc
cmp
lods
out
mov
aad
ror
jmp
mov
mov
and
(bad)
mov
xor
fs
jbe
div
add
inc
fs
push
gs
sbb
and
xchg
iret
loopne
pop
movs
jmp
dec
and
arpl
mov
mov
popa
retf
ss
out
cmps
stos
xlat
repnz
push
stc
xlat
xchg
retf
imul
and
or
mov
sub
add
shl
bound
jns
outs
test
loope
mov
xor
iret
cmps
xor
sahf
loopne
xchg
cmp
stos
mov
inc
lahf
jle
clc
test
ins
adc
retf
fucomp
add
outs
(bad)
fisub
sub
mov
xchg
add
jmp
test
es
push
retf
cmc
(bad)
add
dec
loope
add
pusha
rcl
cmp
sbb
outs
inc
mov
pop
mov
out
inc
iret
movs
inc
mov
retf
add
test
xchg
xchg
out
pop
jmp
std
jmp
jne
idiv
popa
dec
sub
out
rcr
mov
cs
shr
ins
gs
fmul
nop
stos
mov
mov
sbb
push
and
xchg
fidivr
jmp
movs
inc
imul
lahf
sub
movs
sub
cmp
dec
lods
mov
cld
(bad)
popf
jle
aam
add
popf
outs
rol
outs
mov
imul
lods
and
dec
jns
scas
icebp
shl
push
(bad)
adc
in
sub
fidivr
idiv
cmps
scas
add
lods
not
or
outs
xlat
cmps
mov
xchg
rol
lods
xlat
stos
nop
aam
xor
cs
addr16
pop
adc
retf
mov
push
mov
jne
pop
xchg
mov
and
push
jle
jae
inc
in
in
jmp
cmp
mov
push
jmp
or
iret
ins
std
dec
imul
fadd
mov
add
sahf
ds
xor
enter
mov
(bad)
shl
sbb
sbb
dec
cmp
jg
jecxz
loop
xchg
lods
fnstcw
int
movs
jg
(bad)
mov
repz
push
(bad)
jl
lahf
fdiv
cmp
mov
adc
sub
pop
call
sbb
xchg
(bad)
pop
repnz
mov
inc
jmp
sar
scas
cs
adc
dec
rol
mov
imul
mov
jl
cmp
idiv
not
mov
cli
mov
push
xchg
pushf
retf
int
jbe
pushf
xchg
adc
gs
sar
iret
fwait
call
adc
ins
mov
clc
int
shl
ret
neg
jle
jp
outs
out
jne
aas
gs
sti
mov
cmp
add
ds
or
jmp
jge
and
stos
icebp
add
ja
cmp
add
jg
mov
jne
mov
nop
cmps
pop
add
inc
sbb
clc
adc
rep
aad
pop
mov
sub
jne
or
lea
bound
fs
pop
sahf
and
and
lea
rcr
out
xchg
jg
xor
mov
daa
call
cmp
jmp
or
mov
jns
enter
add
and
lahf
fsub
loopne
or
pop
fstp
and
arpl
mov
out
mov
jae
add
inc
out
fcmove
push
jo
and
js
sub
add
cdq
or
push
pop
sbb
les
mov
and
and
inc
dec
jb
adc
aaa
jecxz
ins
arpl
dec
pop
test
sbb
mov
lock
xchg
fimul
push
mov
stos
sahf
(bad)
mov
data16
pop
rol
mov
push
mov
enter
retf
scas
and
xor
xlat
test
jl
das
xor
xchg
repnz
jge
out
add
outs
inc
push
inc
xchg
popa
fild
sahf
inc
cmps
dec
retf
push
sub
scas
push
pusha
repz
fldenv
popa
cmps
adc
add
aad
jp
nop
xor
add
in
and
fdivr
xchg
cmp
js
jo
stc
fbld
in
dec
aad
stc
mov
ror
jge
mov
push
xchg
addr16
jle
adc
clc
mov
mov
mov
or
mov
and
mov
xchg
shl
or
and
or
pop
sbb
inc
mov
push
sub
sbb
pop
pushf
dec
js
inc
sbb
mov
dec
mov
push
xor
aaa
cdq
fadd
sbb
cmp
outs
jp
jno
cmc
aad
mov
pop
jo
or
mov
mov
lds
inc
out
retf
pop
je
movs
int3
hlt
push
arpl
jle
sub
fnsave
push
clc
pop
dec
sbb
xchg
popf
pop
ins
xchg
and
mov
pop
mov
cmp
inc
mov
sub
retf
cmp
dec
jns
popa
sar
dec
mul
sbb
push
mov
cmp
nop
rol
sub
dec
jmp
mov
mov
fbld
mov
leave
out
mov
sub
out
mov
pusha
shl
xor
pop
xor
sar
push
cmc
jl
aas
jmp
cmp
xchg
add
fstp
mov
mov
adc
mov
and
push
sbb
lock
imul
cld
xor
mov
(bad)
out
ret
cmps
mov
out
shl
sahf
lahf
or
cmp
add
bound
repz
loop
inc
sbb
mov
sbb
sahf
mov
fdiv
fcom
clc
test
jnp
inc
add
cmp
pusha
sub
jns
(bad)
les
adc
xor
out
movs
mov
(bad)
mov
pop
and
mov
mov
jb
jmp
push
out
fisttp
sbb
mov
rcl
jp
es
dec
out
xchg
cmp
push
pop
ret
int
xor
cmp
pop
jbe
icebp
fidivr
cmp
mov
push
xchg
scas
adc
stos
jb
add
sbb
cmps
xchg
imul
lods
mov
pop
je
shl
dec
lea
fidivr
pop
xlat
xor
mov
inc
movlhps
(bad)
fnstsw
xor
sbb
retf
in
dec
lds
xor
push
rol
and
mov
sbb
push
push
stc
cld
call
jmp
pushw
mov
dec
in
push
mov
fwait
aam
jp
out
mov
pop
imul
jne
sbb
outs
mov
and
xchg
jle
scas
pop
lods
mov
dec
add
mov
or
lods
xor
sub
and
pop
inc
scas
test
fistp
pop
cwde
jecxz
mov
adc
adc
mov
or
mov
sbb
push
and
jp
lods
loope
jnp
nop
fdiv
push
add
daa
jl
gs
mov
push
sub
cmps
sar
ficom
mov
and
bound
mov
xchg
popf
out
xchg
les
inc
cmp
repnz
mov
repz
jg
imul
dec
and
fst
dec
fistp
test
jmp
mov
pop
mov
and
inc
and
mov
or
fist
and
cmp
add
mov
bound
not
out
jmp
and
xor
pop
xchg
jecxz
lds
inc
jne
xor
mov
scas
aas
lea
add
cdq
and
fbstp
retf
xchg
mov
leave
and
test
icebp
mov
sub
cs
pop
fist
push
xor
push
je
mov
ffreep
lock
mov
jecxz
xor
pop
outs
test
xchg
shl
mov
dec
lea
int3
out
inc
(bad)
mov
ja
mov
ins
or
ret
xchg
enter
or
push
adc
int
into
xchg
push
inc
sar
ins
out
lds
rol
iret
popa
ja
push
cmps
sub
fild
fidiv
stos
jecxz
push
dec
push
dec
fnstsw
mov
fs
sub
stos
pushf
mov
adc
dec
mov
loopne
es
adc
pop
mov
pop
sbb
ins
xchg
ret
add
sbb
cmc
into
inc
add
xchg
out
(bad)
ja
mov
mov
xor
shl
gs
ficomp
lock
test
(bad)
test
cmp
mov
stc
sti
ret
movups
xor
or
pop
pop
cmp
and
fdivr
jp
fwait
(bad)
or
xchg
add
jmp
bound
add
mov
sbb
lods
mov
xor
pop
cmp
retf
out
or
outs
cli
lock
loopne
mov
ins
xchg
loop
push
xchg
push
lahf
mov
retf
lock
push
sbb
repnz
sbb
xor
test
adc
mov
jbe
(bad)
jecxz
add
imul
xor
push
scas
sbb
lds
jecxz
shl
lea
pop
or
pop
mov
call
jo
sub
sub
pushf
ror
dec
ss
push
fld
cmp
cmp
xor
dec
xchg
and
mov
sbb
test
retf
outs
out
adc
imul
shl
cmps
pop
ja
mov
call
pop
ret
mov
inc
mov
cmp
popa
mov
punpckldq
ss
xor
scas
cmc
std
sub
outs
(bad)
outs
aas
fucom
stos
es
ins
stc
clc
and
and
std
ins
jl
push
push
dec
cmps
or
fnstcw
pop
lahf
repnz
cdq
mov
mov
ss
mov
test
fld
out
adc
inc
mov
cmp
out
jecxz
jge
scas
sbb
pusha
into
enter
pusha
arpl
mov
stos
sahf
push
das
enter
push
add
scas
int3
add
pop
jne
mov
lds
cmps
push
adc
mov
xchg
sub
or
xor
jecxz
or
das
add
add
enter
inc
call
pop
es
int
inc
daa
out
(bad)
js
ret
push
outs
neg
outs
add
xchg
cmp
in
jae
es
jle
mov
jns
ins
pop
out
add
iret
test
iret
gs
cmp
mov
inc
push
sahf
cld
cmp
mov
mov
je
pop
outs
push
jmp
(bad)
js
push
(bad)
pop
pop
mov
sub
mov
neg
fist
es
repz
jns
je
push
sbb
mov
aaa
xor
out
movs
jle
data16
cdq
in
mov
mov
lods
cmp
test
outs
pop
dec
sbb
int
xchg
loopne
cmps
inc
xor
sar
and
xchg
pop
dec
sub
enter
mov
hlt
mov
xor
mov
adc
lea
retf
dec
or
xchg
cmp
std
jbe
jno
mov
std
sub
adc
es
inc
js
xchg
daa
sti
addr16
pop
popa
xor
dec
pop
pop
out
sub
pop
ret
test
jmp
xor
cmp
jne
call
loope
and
xchg
test
xchg
rcr
lock
ret
dec
cmps
cli
out
jno
or
xchg
cmp
xor
mov
and
jl
js
sti
ja
push
iret
sahf
fsub
or
(bad)
clc
xor
jge
sub
mov
xor
in
fs
sbb
(bad)
es
sbb
gs
pusha
mov
inc
pop
mov
pop
xor
jbe
les
adc
cld
xor
inc
fld
outs
fcom
ror
sub
pop
imul
push
pop
inc
mov
mov
sub
ja
or
fidivr
lock
cmp
push
xchg
xchg
mov
shl
jo
scas
xor
imul
loopne
mov
pusha
ret
shr
adc
jmp
stos
ror
loope
leave
shl
lea
retf
repnz
(bad)
daa
nop
out
rol
test
lahf
mov
ss
imul
mov
or
cmps
outs
dec
outs
lahf
xchg
pop
cdq
(bad)
jno
pop
sbb
xlat
sbb
lods
mov
add
add
loop
xchg
in
fsubr
and
sti
mov
repnz
cmps
mov
sub
push
adc
out
(bad)
cmps
sub
fs
ret
arpl
mov
push
(bad)
fidivr
cld
int
sub
mov
stc
test
push
push
adc
cmps
scas
dec
jge
mov
pop
aas
out
jp
out
aaa
(bad)
stc
int3
nop
xchg
aas
mul
outs
shl
jp
retf
call
and
fcmove
adc
rcl
pop
into
add
jo
int
pop
fincstp
les
movs
jmp
sbb
(bad)
lods
ins
push
lds
cmp
dec
jl
clc
and
mov
clc
inc
dec
dec
pop
out
cmp
mov
fcom
push
mov
push
dec
ds
pusha
sbb
ds
ins
pop
repnz
inc
test
shl
cmps
mov
xor
imul
loopne
ins
scas
sbb
popf
jns
mov
pop
pop
xor
fcomp
or
in
ret
push
nop
push
cmc
pop
(bad)
sar
sahf
iret
retf
mov
sub
pusha
inc
and
sub
addr16
push
add
ss
stos
pop
sub
icebp
sub
call
test
ficom
fwait
dec
movs
push
aas
ins
push
jg
cmp
hlt
and
jle
mov
mov
sub
jmp
sbb
inc
mov
and
dec
adc
data16
push
pop
(bad)
outs
mov
push
into
mov
mov
xor
xor
cmps
icebp
push
sbb
icebp
jmp
(bad)
xor
(bad)
or
mov
test
mov
mov
push
pop
movs
test
fstp
repnz
jecxz
dec
jne
xlat
inc
(bad)
aas
pop
jle
mov
pop
(bad)
repnz
outs
daa
outs
mov
push
mov
xchg
(bad)
cld
mov
fnstenv
ret
in
xor
jae
lahf
sub
shl
imul
xchg
add
js
xor
adc
cmps
push
sar
in
jns
cdq
cmp
adc
push
sub
pop
jmp
adc
into
push
rol
add
aaa
stc
call
lahf
push
jmp
push
xor
or
fwait
pop
addr16
rcl
adc
adc
pop
js
repnz
test
fstp
xchg
fcomp
cmc
sub
call
and
jle
lds
dec
jl
mov
pop
push
adc
push
jge
aad
addr16
(bad)
mul
stc
std
pop
cmc
push
shl
rcr
retf
xor
imul
addr16
push
mov
lods
cli
stos
jecxz
nop
mov
add
loop
mov
mov
mov
inc
jmp
xchg
push
mov
push
movs
ss
pop
jmp
or
mov
icebp
pop
int
xor
xchg
mov
jnp
dec
jae
or
cdq
pop
mov
xchg
jecxz
loopne
sub
out
icebp
add
stc
iret
jg
repz
(bad)
cld
pop
add
inc
cmp
div
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
je
ja
test
arpl
dec
pushf
jbe
cmp
xchg
xor
pop
fwait
mov
jecxz
and
sahf
pop
add
fldcw
dec
lock
mov
adc
dec
jp
hlt
mov
pop
clc
add
inc
cmp
push
xchg
shr
mov
xor
push
xchg
inc
das
or
in
sahf
xor
xchg
or
mov
push
test
dec
loopne
or
loope
mov
cs
repz
daa
movs
popa
or
clc
xor
and
or
outs
test
mov
test
lds
xor
sub
popa
ret
iret
jbe
aam
call
xchg
xchg
leave
lea
(bad)
in
ins
xchg
add
mov
mov
inc
outs
das
or
jg
or
ss
std
lea
or
int
add
xchg
fisttp
push
pop
mov
fdiv
dec
shl
jmp
lahf
adc
mov
inc
xchg
mov
mov
push
mov
mov
mov
mul
jecxz
mov
xor
imul
jmp
add
pushf
sub
and
push
pusha
enter
mov
cld
enter
dec
mov
push
jbe
mov
sub
jmp
xchg
int
mov
jbe
call
repnz
sbb
lahf
cmp
xchg
push
mov
ret
cld
pop
jmp
lods
std
into
xchg
repz
dec
(bad)
outs
in
cld
sar
outs
cmps
xchg
fnstenv
or
hlt
pop
lock
enter
add
adc
inc
or
dec
xchg
cdq
arpl
and
lods
inc
test
cmp
xor
in
jbe
dec
jl
xor
pop
xor
inc
xchg
adc
jnp
gs
daa
repnz
idiv
movs
sbb
fistp
or
cmp
(bad)
aas
sub
xchg
clc
movs
sti
jo
jg
inc
sub
aam
jmp
pop
xor
push
fwait
pop
cld
jae
dec
inc
ss
xlat
jecxz
aas
test
sti
cmp
jmp
mov
popa
rcr
pop
(bad)
sub
imul
adc
rcl
ds
leave
repz
jno
xchg
mov
inc
imul
leave
repnz
stc
out
popf
jmp
dec
ret
pop
push
jae
adc
int
jae
sbb
mov
inc
or
repnz
or
xor
push
aaa
mov
lods
mov
jg
and
jbe
jae
pop
mov
push
or
fiadd
aad
ret
and
push
repnz
adc
call
xchg
(bad)
cmps
in
dec
lods
mov
sar
repz
mov
and
dec
aas
cmp
jg
bound
loopne
sub
data16
sbb
mov
xlat
jge
arpl
inc
ror
sbb
aam
jle
int
int3
sub
xlat
add
lahf
push
mov
(bad)
rcr
jp
arpl
dec
pop
or
sti
imul
in
bnd
daa
or
cmps
adc
pop
rcl
cmps
shl
pop
mov
std
clc
in
(bad)
adc
cmp
dec
cdq
jecxz
jecxz
sbb
push
mov
cmp
mov
xlat
sbb
sbb
int
fadd
xor
jge
ror
ds
lods
or
push
or
jns
sbb
out
cmp
jecxz
lods
sub
pop
mov
xchg
std
cli
sub
mov
and
movs
xchg
mov
aaa
es
mov
lods
in
xchg
movs
or
lock
mov
dec
cdq
movs
sbb
in
retf
aaa
mov
mov
mov
pushf
lea
mov
es
dec
pop
mov
call
dec
fdiv
ja
pop
leave
shr
push
in
shl
hlt
lock
adc
mul
in
pop
mov
mov
(bad)
mov
sbb
test
test
icebp
adc
and
sahf
pop
pop
xor
sahf
fs
lea
adc
rol
leave
add
jb
pop
or
in
jg
aaa
adc
mov
dec
and
sahf
sub
outs
pop
fadd
pusha
pusha
and
mov
add
jle
leave
mov
cmp
mov
mov
test
popa
(bad)
scas
mov
mov
and
jge
(bad)
fsub
push
push
dec
rol
mov
inc
inc
mov
jmp
sub
sub
mov
push
jp
rol
hlt
ss
mov
scas
jl
outs
fs
push
jmp
adc
cmp
fcom
push
pop
test
fmulp
arpl
xchg
mov
enter
inc
call
add
inc
inc
shr
fisub
mov
cwde
das
push
dec
loopne
das
cmp
movs
cmp
dec
mov
or
aaa
pusha
fbld
dec
pop
xor
pushf
or
ss
icebp
imul
call
mov
fld
dec
cld
jno
pop
into
pop
jmp
dec
leave
jl
xchg
ret
add
aad
push
mul
fnstsw
mov
sti
gs
imul
push
into
fwait
stc
lods
mov
(bad)
into
loope
jmp
in
dec
xchg
sub
or
stc
out
jmp
add
adc
movs
cmp
cmps
cmps
scas
aas
clc
into
pop
add
fdivp
mov
mov
stc
add
xchg
jge
int
xchg
sahf
pop
rol
test
shl
cmp
retf
pop
add
shr
add
jg
add
push
or
ja
pushf
fwait
in
mov
imul
push
or
clc
hlt
mov
mov
popf
fcom
(bad)
bound
push
(bad)
jb
mov
mov
cmc
loopne
sub
pop
imul
mov
dec
cmc
jne
push
rcr
jbe
mov
ins
pop
data16
fs
iret
inc
daa
mov
int
pushf
clc
bound
loope
mov
inc
xchg
div
pop
cmp
imul
xor
push
xchg
enter
into
mov
bnd
dec
dec
loopne
xor
add
and
sub
fcom
loope
sub
jnp
out
call
pop
retf
jle
movs
mov
or
lea
inc
or
xchg
pop
in
mov
or
push
xor
jae
leave
leave
or
test
ins
movs
cmp
pop
push
sub
test
retf
dec
adc
sti
ret
pop
call
fwait
ins
(bad)
dec
sub
ins
outs
sub
loop
sbb
hlt
push
push
and
mov
inc
mov
pop
sahf
in
int3
adc
repz
fs
pushf
les
jnp
push
(bad)
repnz
es
ins
and
sbb
loope
out
scas
pop
or
(bad)
test
jmp
push
mov
sbb
mov
fs
xchg
add
ja
jno
int
xchg
cli
inc
cmp
jg
outs
jbe
mov
jge
sub
jno
xchg
cmp
jmp
cmp
ja
popf
fwait
pop
in
lods
adc
inc
jns
pop
popa
pop
lahf
adc
dec
fidivr
or
fcmove
jns
fbld
mov
inc
ret
loop
ins
and
dec
dec
call
bound
mov
retf
scas
sbb
add
or
lock
(bad)
and
push
push
sahf
xchg
adc
pop
and
adc
outs
push
cmc
(bad)
in
nop
jne
sbb
or
nop
shl
inc
mov
mov
jno
mov
cs
stos
sub
es
inc
addr16
xchg
jb
push
aad
js
xor
jl
data16
and
into
adc
fstp
add
mov
push
mov
pop
pop
xchg
sbb
cli
rcr
loop
pop
sbb
scas
pop
lods
(bad)
push
call
retf
hlt
movs
es
aad
and
pushf
mov
dec
push
mov
fnsave
cmp
ret
xor
adc
cmp
enter
and
mov
xor
popf
and
fs
mov
int
sbb
movs
sub
xlat
inc
pop
jp
xchg
mov
(bad)
out
movs
lea
stos
cs
movs
aad
jmp
sti
les
dec
loopne
lahf
cli
ror
stc
sbb
or
jp
jl
xchg
add
mov
jmp
mov
aaa
or
movs
movs
mov
pop
movs
loope
push
mov
mov
xacquire
xlat
add
test
sub
sbb
push
mov
and
sub
cmp
lods
addr16
movs
enter
movs
mov
out
aam
lds
repz
ins
or
adc
xlat
rol
mov
ss
mov
mov
cmp
mov
cmp
dec
enter
(bad)
xchg
mov
jp
pop
mov
fdiv
out
ins
(bad)
lahf
cwde
cmps
add
push
iret
out
mov
jnp
lods
lods
imul
xchg
pop
test
inc
inc
and
sbb
sti
iret
sti
pop
pop
das
push
sub
shr
fnsave
not
mov
adc
movs
inc
mov
fsubr
inc
js
and
stos
imul
jecxz
loop
(bad)
dec
cli
in
cdq
add
fisttp
jns
aas
adc
aam
jmp
pop
(bad)
sbb
pop
(bad)
fnstenv
lods
out
mov
nop
dec
rcl
mov
push
ins
fistp
push
mov
mov
les
cwde
retf
lods
das
and
fcmovu
(bad)
fmul
clc
push
fld
push
push
repnz
push
(bad)
hlt
push
cmc
(bad)
jecxz
sub
fisttp
inc
sti
inc
jns
ret
push
cmps
call
stos
pop
fwait
adc
pop
ret
movs
pop
mov
inc
add
jle
mov
dec
cmp
pop
ror
sahf
add
cmp
inc
push
fcom
push
pop
sbb
mov
inc
mov
mov
gs
fwait
in
imul
retf
xor
test
movs
jecxz
(bad)
into
cmp
fisub
push
jo
sub
and
sub
inc
pop
popa
mov
xor
jbe
(bad)
xor
pop
mov
adc
and
adc
or
scas
sbb
xchg
jecxz
xor
in
xlat
int3
bound
aam
movs
mov
and
pop
std
cmp
push
enter
dec
test
pop
sbb
sub
or
mov
jmp
xchg
cmp
jg
add
into
test
mov
adc
in
hlt
xor
ss
xor
dec
fisubr
out
push
fisttp
or
fld
mov
cmp
jmp
jmp
xchg
cmps
mov
sub
mov
cld
mov
adc
xchg
stos
call
adc
cmp
jge
adc
das
sbb
jle
es
ret
fist
cdq
test
mov
hlt
cli
mov
ja
fimul
xchg
aaa
hlt
mov
jge
leave
call
std
sbb
outs
sbb
mov
imul
xchg
cld
aam
mov
test
sbb
stos
jmp
push
jo
aad
adc
outs
call
push
jmp
pop
sbb
pop
lldt
imul
ss
ins
sahf
mov
mov
push
fist
xchg
jl
dec
test
cmp
cmp
punpckhwd
ficomp
stos
aas
sti
mov
inc
out
and
stos
out
aaa
call
jo
push
inc
out
sar
and
in
fisub
icebp
ror
sbb
pop
xchg
aaa
xchg
jne
dec
xchg
add
jne
je
fisubr
pushf
sbb
std
jle
outs
jmp
(bad)
aad
mov
adc
xor
adc
xor
out
and
push
int
imul
push
mov
loop
cmp
int
xchg
(bad)
mov
pop
or
adc
xlat
out
pop
data16
fadd
mov
push
jne
xchg
sbb
xor
push
movs
jbe
lods
ret
pop
clc
mov
or
leave
mov
imul
ds
pop
mov
fcmovnbe
sub
les
ds
jg
js
rcr
pop
cdq
cmc
jb
movs
add
xlat
dec
jge
mov
adc
sbb
repz
daa
adc
jg
gs
sub
adc
sbb
popa
hlt
out
inc
and
outs
div
std
cwde
fnstenvw
pop
int3
ror
inc
pop
retf
mov
inc
ret
movs
adc
dec
scas
fistp
fldcw
mov
lods
mov
scas
cs
(bad)
mov
clc
jne
(bad)
cld
nop
pmaxsw
cmps
retf
inc
cwde
dec
ss
and
je
mov
clc
jo
inc
sub
test
cmc
movs
pop
xor
jmp
adc
pop
add
dec
stc
ins
and
inc
add
sbb
xchg
xchg
push
mov
test
dec
dec
cmps
imul
jns
xlat
out
sbb
fxch
and
scas
xor
test
xchg
jecxz
lahf
dec
push
xchg
in
mov
les
mov
rcl
mov
(bad)
xchg
push
adc
and
cmps
xchg
das
sbb
inc
add
rol
cmp
aas
sbb
mov
arpl
mov
arpl
enter
in
dec
mov
outs
jmp
push
adc
sub
ret
jb
jmp
outs
cmc
mov
(bad)
sbb
mov
retf
jmp
cmp
cld
inc
es
fstp
and
fidivr
imul
ins
hlt
xor
and
std
xchg
mov
xchg
stc
jmp
jo
or
fild
(bad)
loopne
jno
stc
pop
mov
sub
jb
sub
jle
mov
lods
jge
push
mov
pop
test
or
add
sbb
ror
imul
and
sub
(bad)
ds
or
or
jbe
icebp
data16
shl
lock
aam
mov
inc
jns
sbb
sbb
dec
xchg
adc
movs
test
scas
sbb
loop
or
or
jecxz
jp
mov
int3
push
mov
sbb
test
rcl
repz
and
pminsw
hlt
in
and
mov
pushw
in
test
jge
inc
mov
dec
aas
and
stos
(bad)
aad
sub
adc
jmp
fcomp
imul
xchg
jnp
aaa
imul
add
jecxz
ds
pop
mov
jmp
fisubr
xchg
pushf
cmc
mov
out
mov
(bad)
push
cdq
retf
loopne
xchg
sbb
adc
fadd
pop
rcl
into
mov
pop
mov
add
int3
adc
je
stos
in
test
adc
dec
jmp
xor
sub
jmp
adc
dec
add
inc
data16
test
mov
pop
push
pop
in
leave
inc
sub
sub
mov
fwait
xor
inc
xor
js
mov
int3
jg
mov
enter
cmp
cmc
cmp
and
dec
out
pop
ret
add
push
add
xor
push
leave
scas
les
sbb
jo
dec
cmp
shr
or
cmp
xor
into
jb
pop
fstp
ds
jo
int3
mov
lock
inc
sbb
sub
in
out
enter
jmp
aam
inc
push
out
imul
stos
rcl
adc
ss
push
inc
int
(bad)
imul
xor
scas
cdq
aaa
mov
sbb
leave
xor
loopne
nop
ds
call
jg
mov
test
sti
dec
daa
jae
or
sti
lods
stos
inc
inc
xchg
call
cwde
lahf
ss
or
pusha
lahf
push
imul
dec
out
dec
dec
cmp
imul
adc
stos
cwde
jb
jl
lahf
pop
mov
jb
cmps
jnp
sbb
fisttp
iret
mov
sub
scas
loopne
cmp
mov
sbb
ja
les
jecxz
xchg
hlt
enter
xlat
outs
inc
or
pop
jmp
or
sbb
cdq
xor
mov
dec
mov
stos
and
ret
stc
daa
or
out
jg
stc
out
jg
stc
mov
xchg
xchg
out
jb
cmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
leave
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
ror
dec
sbb
nop
out
push
dec
ja
xchg
je
imul
cmps
test
or
ror
inc
ja
or
dec
ja
movs
ret
sti
lahf
add
(bad)
rcr
add
or
pop
ret
push
adc
or
sbb
jmp
adc
jp
pop
or
fwait
mov
ss
mov
mov
in
(bad)
dec
jno
lods
sar
ins
pop
sbb
les
cmp
jg
icebp
sbb
sub
push
xor
test
jno
cld
bound
inc
ja
pop
adc
imul
(bad)
and
call
fiadd
call
jp
bound
imul
sbb
daa
aas
sbb
mov
(bad)
jl
push
test
jbe
inc
sub
xor
std
or
cmc
xchg
mov
icebp
and
jg
rcr
ror
cmp
mov
pop
dec
dec
dec
mov
cmp
or
pop
lock
lock
stc
pop
push
inc
repz
call
(bad)
(bad)
cmps
pop
loope
fld
fnstcw
mov
shl
xor
cmp
mov
jns
mov
mov
xchg
mov
jp
outs
cmp
and
call
sub
sbb
bound
mov
or
xchg
fdivr
test
mov
and
pop
cdq
(bad)
(bad)
dec
jmp
jp
push
inc
add
mov
sub
dec
in
jbe
stos
add
pusha
mov
cmp
popf
fsub
fcomp
test
xchg
stos
aad
jne
shl
repz
and
jp
cmp
add
jmp
arpl
dec
jns
test
mov
nop
cmc
add
hlt
or
std
(bad)
xchg
les
sub
or
and
lfs
rol
in
jge
pop
add
mov
inc
xor
and
or
pop
sbb
mov
jo
shl
fidiv
mov
push
mov
hlt
cmps
push
loop
sub
ficom
push
das
mov
xor
add
loope
ins
xor
les
push
data16
cdq
fdiv
iret
in
sub
arpl
inc
outs
call
jg
push
mov
xor
scas
dec
loope
loope
js
dec
cld
test
push
lods
stc
js
sub
and
inc
in
pop
cli
adc
push
adc
adc
scas
arpl
dec
shl
rol
sbb
iret
dec
scas
cmp
fadd
je
(bad)
cmc
outs
pop
pushf
psubsw
xor
mov
imul
gs
js
cdq
addr16
pop
gs
cwde
ret
test
jmp
push
xchg
es
push
mov
dec
pop
iret
les
jns
sbb
fmul
cmp
test
inc
(bad)
add
xchg
adc
jl
cmps
(bad)
sub
int
push
mov
sti
xchg
ss
add
mov
jbe
add
xchg
ins
pop
pushf
sub
in
cmp
ficom
nop
sbb
call
in
dec
adc
or
inc
cdq
push
daa
and
mov
dec
adc
sbb
add
or
(bad)
pop
and
push
mov
hlt
jno
enter
adc
cmp
cmps
idiv
xchg
mov
outs
mov
and
lahf
xlat
adc
mov
retf
mov
cmps
repnz
push
xor
aaa
and
xchg
cs
dec
jns
cmps
mov
mov
ret
mov
sar
mov
jmp
dec
push
xchg
outs
(bad)
(bad)
(bad)
pop
hlt
outs
les
sahf
imul
pop
sub
pop
or
jl
mov
push
jl
sub
mov
xchg
push
movs
shl
or
sbb
stos
mov
mov
jp
adc
iret
lods
jle
test
sub
xor
test
aaa
xchg
mov
mov
in
add
fcom
sahf
inc
xor
push
mov
dec
scas
cld
push
cmps
test
pop
fmul
stos
test
retf
rol
sub
mov
sub
loope
in
sub
dec
(bad)
(bad)
int3
jle
lock
cmp
mov
data16
jp
imul
mov
call
or
cmp
mov
aaa
mov
icebp
js
(bad)
not
xor
dec
adc
mov
aam
or
adc
mov
lahf
sysexit
inc
mov
push
adc
xchg
arpl
pop
scas
jbe
scas
leave
clc
and
in
jp
xor
dec
lods
sub
jmp
xchg
xchg
je
mov
inc
sahf
mov
jp
cdq
shl
mov
call
and
xchg
push
or
ds
mov
popa
(bad)
push
adc
jns
jg
sbb
push
jns
push
inc
xor
aaa
and
adc
ret
icebp
adc
(bad)
retf
inc
jnp
or
test
(bad)
bound
jle
in
stos
aaa
test
sub
jne
ss
adc
xchg
pop
jbe
mov
xor
outs
inc
das
mov
call
(bad)
push
add
jb
or
jnp
pop
mov
popa
movs
std
cmps
daa
push
push
mov
stc
mov
push
ret
adc
popa
lods
test
int
xchg
or
inc
adc
cwde
sbb
inc
xlat
mov
pop
cwde
xchg
data16
jge
sub
pop
inc
stc
outs
adc
push
dec
into
jmp
jb
arpl
sub
mov
stos
cmp
push
prefetcht0
push
pop
dec
cmps
push
stos
pop
pop
(bad)
test
cwde
shl
mov
and
imul
add
push
sbb
push
add
js
push
pop
cmp
push
mov
inc
and
mov
inc
sbb
(bad)
jmp
les
lea
inc
mov
pop
cmp
sti
inc
mov
push
sub
inc
test
mov
mov
sbb
fwait
ja
je
enter
retf
or
and
es
(bad)
test
dec
push
mov
retf
div
cmp
jl
in
mov
adc
mov
cmp
mov
jnp
(bad)
pusha
jb
mov
ja
or
fsub
int
adc
xchg
adc
pop
xchg
call
push
push
pop
jp
das
fistp
push
lods
repz
sub
or
shl
icebp
push
jmp
mov
(bad)
daa
clc
cmp
test
sbb
retf
sbb
in
out
fsubr
fwait
xor
mov
inc
xlat
cmc
pusha
cmp
je
sbb
or
mov
out
push
mov
pop
popf
pop
in
mov
loope
outs
push
inc
sbb
fsub
int3
(bad)
(bad)
cmp
push
or
jle
and
dec
jns
xchg
push
adc
loopne
jl
xchg
jns
mov
or
adc
mov
adc
xchg
ret
and
mov
int
dec
mov
mov
jecxz
push
mov
rcl
xchg
xchg
pop
and
lock
repz
sti
inc
or
mov
call
jmp
dec
out
popf
mov
mov
or
jmp
lahf
inc
lds
and
in
mov
xchg
cs
dec
fisubr
mov
xor
repnz
jne
pushf
enter
shl
cld
xor
jbe
ror
dec
sbb
cmp
cld
fistp
and
call
xor
(bad)
push
(bad)
dec
ret
arpl
not
or
jg
js
mov
adc
pop
or
add
lods
test
add
int
jl
jl
lea
add
ds
sub
jge
std
rol
jg
out
xchg
clc
adc
popa
cwde
imul
or
iret
mov
push
addr16
jecxz
and
(bad)
out
or
movs
or
(bad)
frstor
shr
jne
mov
jno
jo
mov
outs
out
jmp
cmp
xchg
mov
popa
pop
adc
addr16
popf
sub
repnz
fisttp
cmps
shl
or
in
mov
inc
js
hlt
jmp
push
je
and
aam
(bad)
push
inc
adc
sub
inc
test
movs
mov
pop
dec
jp
stos
adc
xor
fiadd
jp
fwait
push
dec
mov
inc
bound
pop
mov
fist
fdivp
sbb
inc
ja
inc
in
jbe
pop
movs
inc
scas
not
out
scas
sbb
aam
dec
xchg
sti
xlat
icebp
mov
pop
outs
add
fst
mov
daa
pop
xor
cmp
sub
add
mov
push
dec
and
dec
in
and
push
aam
(bad)
jmp
lods
(bad)
jae
mov
daa
pop
or
and
inc
fdiv
sbb
adc
gs
in
sub
adc
dec
cmp
pop
outs
push
push
cld
ret
and
neg
jns
cmp
or
pop
cmp
push
scas
ss
or
in
xchg
jno
xchg
inc
dec
lds
popf
lods
pop
loopne
mov
cmp
gs
loope
add
iret
scas
into
and
mov
adc
fbstp
pop
cdq
and
lea
and
cdq
jns
in
jbe
pop
movs
out
mov
in
rol
or
pop
mov
pop
mov
aad
push
das
jmp
pop
jg
jne
imul
test
ins
sbb
pusha
xchg
adc
jo
xor
or
setp
sbb
idiv
ret
ret
shl
lds
pop
xor
xor
rcl
mov
push
mov
jns
(bad)
mov
stos
out
xor
jmp
das
(bad)
jmp
inc
leave
sar
jbe
pushf
cwde
inc
xchg
pop
rcr
lods
sahf
dec
and
fwait
mov
scas
nop
jne
lahf
int3
pop
or
cs
sbb
and
xor
mov
and
mov
stos
ret
jne
push
inc
or
(bad)
test
int3
ret
adc
imul
jns
mov
sub
ret
mov
push
cmp
ds
enter
cs
in
pusha
stos
sub
stos
sub
je
lock
sub
or
adc
in
ins
lahf
sub
loopne
jmpw
push
jge
bound
add
test
xchg
push
and
sbb
aaa
cwde
xchg
call
test
push
sbb
in
xor
ins
push
inc
sbb
bnd
cli
out
lods
mov
into
icebp
scas
mov
sbb
sahf
cdq
fsubp
mov
pop
clc
inc
dec
cwde
xchg
cmp
sbb
cmp
movs
out
retf
inc
or
jmp
or
sbb
test
test
fwait
adc
and
cmp
xor
je
icebp
xor
jb
fldenv
jge
pop
shl
xchg
inc
jo
mov
(bad)
leave
ffree
mov
rcl
aas
retf
fwait
iret
enter
inc
mov
sti
mov
mov
inc
sti
add
sub
add
sub
les
jnp
pop
in
add
inc
ds
std
xchg
das
mov
bound
xor
std
xchg
es
and
ja
cmp
fwait
jbe
mov
pop
xchg
fadd
jno
pushf
xor
mov
sti
cdq
(bad)
inc
test
scas
lock
pop
mov
jle
adc
xchg
movs
out
aad
mov
nop
push
dec
lds
lea
mov
sbb
clc
xchg
sbb
retf
loop
adc
loop
icebp
and
nop
mov
add
sub
xchg
ss
arpl
push
pop
out
cwde
fstp
fdivr
lea
mov
pusha
mov
rol
or
mov
add
cmps
mov
dec
push
loop
ja
jecxz
mov
fwait
jb
sub
adc
jbe
push
scas
add
xchg
or
push
pop
arpl
ss
into
(bad)
in
pusha
pop
push
std
cmps
lock
jo
outs
xacquire
and
mov
test
pop
cmp
icebp
pusha
je
mov
dec
loope
gs
jne
adc
push
fimul
sub
retf
sar
push
jo
cs
jbe
stos
into
ja
cmps
call
add
js
fimul
movs
sub
mov
push
cmps
fidivr
lea
js
test
in
mov
nop
fdiv
push
jg
sbb
cmc
mov
std
ror
dec
mov
mov
sub
push
movs
dec
cmp
sar
in
push
ss
inc
bound
jmp
mov
call
jne
test
push
pop
xor
mov
js
fisttp
outs
int3
cmps
(bad)
loope
cmc
ficom
ins
outs
outs
dec
icebp
mov
repnz
sub
cmp
push
test
out
jo
dec
aad
out
(bad)
push
cs
dec
imul
cmp
mov
and
das
das
cli
in
retf
mov
lea
mov
pop
and
pop
and
inc
dec
inc
cmps
mov
fiadd
or
sbb
inc
(bad)
push
adc
sbb
xor
fbstp
int
ret
cmp
clc
or
adc
adc
es
mov
jnp
jp
and
and
xchg
(bad)
dec
dec
gs
inc
scas
nop
scas
sub
int3
xchg
push
retf
xor
mov
std
div
std
sbb
cmps
pop
mov
lods
cwde
nop
jl
test
xchg
dec
dec
addr16
(bad)
xchg
in
mov
jmp
outs
mov
xchg
in
sub
(bad)
cmp
pop
ins
and
pop
jle
xchg
test
xchg
bound
cli
clc
sbb
out
jle
scas
fsubr
mov
or
jno
mov
jb
out
sbb
test
and
mov
mov
lods
mov
mov
leave
movs
scas
imul
mov
ror
or
xchg
lods
call
mov
nop
stc
int3
push
rcr
adc
lods
dec
xchg
sti
ret
pop
jg
sahf
(bad)
mov
repz
and
(bad)
jle
lods
cmp
xchg
mov
lds
sbb
std
sub
movs
or
sbb
or
or
popf
mov
ins
dec
test
sbb
call
add
fsubr
es
pop
test
dec
mov
or
and
jnp
sub
cmp
mov
ror
outs
dec
cmp
mov
(bad)
jne
cmp
out
out
lods
fldcw
fcomp
dec
dec
cdq
jmp
dec
jl
push
and
int
adc
mov
sub
lods
retf
in
add
aam
adc
inc
ins
sbb
adc
(bad)
or
add
xchg
out
jg
out
in
add
mov
test
sahf
lods
cwde
cld
cmp
ins
jno
cmp
xlat
fst
scas
or
inc
test
dec
mov
(bad)
mov
jnp
loop
xor
stc
add
jno
(bad)
jnp
xchg
xchg
mov
(bad)
test
xor
jl
and
sub
xchg
push
or
push
mov
mov
ret
not
mov
sub
movs
push
in
(bad)
cld
enter
jg
mov
in
cmps
adc
inc
iret
cli
mov
xchg
pop
xchg
jp
pop
sbb
(bad)
dec
movs
call
push
xchg
sub
rol
(bad)
into
cmp
(bad)
retf
ss
xchg
xchg
cdq
push
mov
sub
pop
scas
cmp
fwait
mov
pop
nop
jne
arpl
ja
adc
lds
(bad)
xchg
icebp
mov
sbb
mov
fist
inc
jnp
inc
jb
cwde
sub
xor
push
mov
xchg
mov
scas
add
inc
sahf
enter
inc
imul
shr
pop
clc
xor
pop
sbb
test
mov
shr
lea
fsubr
inc
xor
or
cmps
int
jp
push
shl
call
pop
jl
mov
outs
fsubr
mov
adc
xor
leave
test
dec
xor
sub
arpl
(bad)
jp
lods
mov
call
mov
xchg
out
or
sar
in
mov
pop
data16
lds
adc
add
repz
(bad)
cld
out
(bad)
stc
iret
jg
scas
add
inc
addr16
repnz
pushf
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
and
pop
add
scas
sub
mov
jae
xor
fs
mov
jbe
cmp
neg
and
sbb
jnp
lahf
div
cld
ds
loope
add
adc
in
test
jmp
inc
stc
test
arpl
addr16
stos
out
push
ds
lahf
popf
rol
(bad)
xor
dec
and
leave
inc
cmps
into
repnz
movs
clc
jge
aaa
jbe
(bad)
lods
mov
movs
mov
and
lds
pop
push
mov
fldcw
iret
jp
or
leave
or
cli
call
mov
push
stc
mov
jmp
fdiv
add
xchg
sub
pop
ret
arpl
push
mov
inc
and
daa
retf
outs
setp
inc
or
xor
or
loop
int3
and
cmp
sbb
fsub
std
sub
js
jb
or
es
xchg
mov
leave
test
fsubp
fsubr
jae
pop
popa
xchg
mov
adc
dec
arpl
xchg
addr16
test
jo
sbb
aam
cmp
mov
stc
inc
lahf
adc
or
jmp
fwait
or
jne
cmp
popa
dec
mov
movs
arpl
pop
repz
mov
fstp
cmp
ret
or
std
adc
jne
xchg
fcomip
push
fidiv
sar
arpl
lahf
scas
pop
call
mov
push
sub
sub
sub
inc
loopne
popf
sahf
pop
jle
cmp
pop
jae
mov
iret
fimul
mov
dec
leave
outs
lahf
adc
lock
xchg
stos
daa
mov
sbb
adc
rol
add
and
rol
sbb
scas
icebp
(bad)
pop
cmp
jns
(bad)
in
call
inc
mov
jmp
pop
sub
xor
pop
adc
xor
push
pop
mov
es
mov
mov
cmp
mov
cmp
in
ins
out
imul
(bad)
sbb
fsubp
xlat
adc
xchg
dec
lahf
sar
ret
mov
mov
push
in
xor
push
movs
(bad)
adc
inc
or
fwait
in
mov
shl
pop
lods
jle
(bad)
mov
jae
js
cmc
mov
cld
and
fs
dec
hlt
arpl
jns
xchg
test
mov
dec
mov
mov
ret
fwait
lods
lds
hlt
je
adc
xchg
fisub
ss
stos
stc
and
jl
int3
aas
mov
cli
jmp
mov
jne
push
xchg
imul
mov
pop
xchg
jns
inc
leave
shr
outs
pop
std
push
jo
jbe
clc
clc
das
data16
test
pop
push
xchg
jge
ins
mov
ins
push
fwait
cmp
inc
jle
daa
push
fstp
or
shl
mov
mov
jmp
mov
(bad)
rol
outs
cs
pop
fnstenv
bound
cli
jle
pop
cmps
stos
push
jle
(bad)
mov
and
in
and
loop
movs
sub
sub
cli
cmp
mov
(bad)
imul
fbstp
mov
dec
adc
iret
scas
mov
and
lods
repnz
push
sbb
xor
out
shr
retf
lds
adc
xor
mov
sbb
xchg
or
mov
into
aam
jno
rcr
ins
gs
pushf
adc
jne
sbb
(bad)
lahf
xor
push
pop
xor
inc
dec
inc
sahf
jnp
jl
(bad)
in
or
rcl
scas
inc
cmp
jl
cmc
into
hlt
cmp
arpl
or
push
mov
pop
fsub
add
sub
sub
(bad)
pop
or
inc
mov
pop
lds
xchg
sbb
ja
ins
mov
repz
mov
out
stos
jnp
(bad)
cmp
das
and
push
in
inc
mov
jns
addr16
fidiv
mov
xchg
std
sbb
dec
cli
int
movs
dec
clts
jns
mov
cmc
xor
sbb
std
cmp
gs
es
sub
mov
push
xchg
jle
bound
sbb
popa
shl
fcmovbe
(bad)
mov
push
es
add
mov
push
ror
loop
std
mov
(bad)
imul
aaa
dec
mov
setne
fbstp
or
stos
nop
push
adc
push
push
mov
(bad)
mov
mov
arpl
or
adc
push
jne
or
aas
push
cdq
dec
mov
dec
mov
jecxz
es
xchg
sub
xor
jne
sti
mov
push
xchg
aad
jae
fldenv
mov
les
cmp
xlat
push
je
gs
cmps
enter
mov
or
jecxz
xor
sub
popf
add
adc
fisub
(bad)
jmp
sbb
(bad)
push
add
sbb
adc
popf
in
lods
aaa
std
cmp
aad
jo
imul
ja
xchg
rcr
ins
std
adc
stos
dec
addr16
adc
xchg
cmp
xchg
jo
in
fwait
mov
sar
lock
stc
movs
lods
sub
adc
push
adc
jb
jmp
stos
imul
cdq
adc
pop
or
xor
xchg
adc
cmp
call
outs
mov
jecxz
and
daa
push
cmps
xchg
out
sub
test
inc
cmp
repz
(bad)
imul
popa
inc
lahf
mov
xor
jl
fwait
popf
cmp
or
jl
cwde
in
or
dec
retf
push
sub
loop
dec
jo
fprem1
fstp
mov
sub
dec
bound
mov
imul
in
(bad)
pop
jmp
loope
fisub
jmp
xchg
std
jmp
stos
out
jmp
leave
jne
push
lahf
mov
outs
mov
aam
aas
int
icebp
adc
popf
jbe
enter
and
sub
xchg
outs
sub
movs
cmp
pusha
mul
repz
leave
fisttp
push
dec
or
mov
fnstenv
sbb
mov
enter
test
xchg
pop
jo
jb
dec
xchg
scas
and
and
(bad)
jo
outs
fsubr
stos
mov
ret
leave
add
aas
push
mov
jno
fmulp
sbb
mov
out
mov
xchg
std
xchg
daa
ins
daa
stc
fdivr
xor
xchg
inc
adc
outs
in
fadd
aad
adc
loop
test
rol
adc
adc
ror
js
(bad)
sbb
xor
xor
jo
jb
adc
stos
jmp
movs
iret
jo
mov
mov
shl
inc
in
shl
jmp
(bad)
in
neg
pop
sar
sub
inc
loopne
jle
and
stc
enter
imul
repz
repz
cli
repz
sub
mov
jo
daa
cmp
mov
fisub
mov
jae
movs
inc
cmp
sbb
jp
dec
sub
inc
scas
mov
dec
xor
stos
aam
scas
scas
add
pop
jmp
scas
jmp
sbb
push
jb
xor
lahf
cs
aaa
icebp
or
dec
ins
cmps
dec
mov
mov
js
adc
sbb
cmps
push
je
pop
enter
nop
sbb
(bad)
adc
sub
xchg
mov
cmps
gs
mov
push
cmp
mov
sub
sub
fldcw
lods
idiv
mov
sub
jno
jno
rcr
pop
into
call
add
jmp
push
fsubr
xlat
adc
lea
imul
shr
sub
rcr
cmp
adc
pop
les
cli
cmps
shr
imul
dec
aaa
(bad)
pop
in
jne
jmp
js
clc
adc
pop
(bad)
aam
sub
push
outs
lahf
cmp
mov
push
jb
jmp
mov
out
mov
add
repz
fst
cmps
or
enter
stos
jne
push
or
ss
das
xchg
loop
iret
cmp
jp
out
(bad)
xchg
inc
sub
and
xchg
push
inc
dec
xor
jg
mov
fwait
jecxz
clc
js
popf
sbb
loopne
in
lods
loop
pushf
int3
dec
(bad)
jne
lds
inc
adc
cld
js
cmp
mov
jecxz
out
retf
icebp
jle
dec
out
out
scas
cdq
dec
sub
mov
rol
cmp
retf
or
inc
mov
clc
jle
mov
ret
shl
push
add
push
add
and
and
dec
daa
inc
sbb
add
ret
outs
rcr
mov
stc
mov
movs
aam
inc
pop
cli
push
stos
xor
test
fist
add
ficomp
aam
mov
sbb
xor
(bad)
rcl
adc
ja
fstp
mov
fcmovu
xor
fidivr
jmp
mov
int3
xor
in
sbb
(bad)
in
fadd
mov
cmps
ret
push
xchg
div
add
lods
ja
cmp
mov
ss
push
(bad)
cmc
and
sbb
fs
repnz
inc
dec
les
data16
add
xchg
mov
xor
dec
rol
fiadd
retf
or
xor
lods
and
repz
push
mov
cmp
add
mov
xchg
dec
cdq
cld
mov
dec
icebp
lahf
in
aaa
test
fdiv
sub
data16
data16
add
iret
xchg
cld
sbb
mov
repz
sub
cli
pop
in
xchg
sub
fiadd
sahf
adc
leave
icebp
mov
xor
jle
inc
mov
dec
push
sub
xchg
jo
push
mov
jge
stos
rol
iret
sub
xor
jge
arpl
push
jns
add
xchg
les
push
xchg
xor
push
cmps
xchg
ror
jp
ins
or
aam
cmp
into
aas
xor
arpl
xchg
xor
lds
bound
sbb
sbb
add
lods
jno
sub
(bad)
push
stos
add
mov
push
sub
pop
xor
mov
stos
inc
xor
iret
push
xchg
stc
retf
sbb
retf
jb
push
pop
stos
mov
mov
push
(bad)
inc
sub
jno
int
mov
cli
jge
(bad)
cdq
pop
out
xchg
iret
in
sbb
mul
movs
dec
dec
sub
push
dec
xchg
mov
push
call
push
shl
out
mov
fcomp
or
ficomp
dec
popa
mov
xchg
mov
subps
push
test
lods
(bad)
ret
ins
ss
mov
out
out
mov
outs
dec
add
or
rcr
icebp
imul
sbb
out
mov
jmp
ins
shl
add
mov
cmp
popa
jbe
jle
test
clc
dec
ret
sbb
fild
fwait
inc
mov
outs
sub
adc
in
(bad)
sar
repz
loop
xchg
xchg
pop
dec
aas
js
frstor
cmc
lds
cmp
fldz
xor
ja
cli
sub
sbb
out
push
shld
mov
test
sahf
dec
jns
add
dec
fdivr
ds
repz
test
dec
sahf
inc
or
push
push
(bad)
sbb
cmp
sbb
test
jg
cmp
and
cwde
push
push
mov
sub
ficomp
sub
push
out
mov
ss
jne
data16
sub
movs
cmp
je
pop
adc
xchg
push
cmps
jle
imul
rcl
cmp
bound
inc
inc
adc
out
push
aad
(bad)
mov
inc
and
pop
adc
xchg
rol
mov
test
cld
loope
addr16
das
xor
dec
sub
stos
inc
cmp
adc
inc
lahf
add
push
cmps
shl
js
(bad)
cld
jo
iret
sbb
pop
out
pop
scas
(bad)
int
es
out
out
push
jp
(bad)
outs
cmps
jnp
push
fucomip
xchg
gs
sbb
daa
shr
loopne
and
inc
mov
ficomp
daa
cli
mov
pusha
xor
and
add
arpl
fdivr
lahf
sbb
scas
mov
push
mov
repz
jnp
imul
dec
sub
xor
movs
or
mov
mov
push
xlat
rcr
adc
fs
stos
fs
ins
ret
les
mov
or
gs
je
ffree
ficom
or
rcr
ins
and
cmp
mov
add
and
loop
clc
xchg
sub
fwait
cmp
cmp
nop
cs
int
fprem1
jmp
les
mov
jmp
xchg
jp
xor
int
push
inc
and
jmp
ins
push
loop
and
in
adc
mov
mov
cs
movzx
xor
rcr
test
daa
lock
lods
push
mov
jmp
xchg
fpatan
je
dec
repnz
dec
cmps
fisttp
and
call
cs
pop
loope
cdq
in
out
push
cmp
(bad)
xchg
gs
arpl
out
aaa
push
in
out
push
xchg
outs
es
(bad)
mov
cmp
xchg
add
or
retf
cwde
hlt
xor
add
cmp
cmp
enter
ror
jle
mov
inc
rcr
and
int
mov
mov
inc
jbe
mov
inc
inc
nop
push
xor
sti
or
push
int
mov
push
add
movs
sub
add
jae
push
(bad)
push
ds
mov
or
fdivr
mov
or
jle
push
and
stos
aas
pop
call
scas
ins
dec
pop
adc
mov
aaa
leave
and
jno
adc
mov
xor
inc
mov
inc
in
adc
xchg
nop
jmp
dec
jmp
jbe
sti
repz
jns
xor
add
mov
push
inc
mov
push
fidiv
dec
xchg
mov
pop
shr
pop
xor
ror
call
adc
shl
popf
dec
xchg
push
sbb
cmp
fbstp
dec
pop
idiv
stc
dec
stos
int3
js
add
or
test
adc
pop
mov
pop
jp
cwde
dec
stos
fwait
sub
xor
rcl
jmp
std
add
cmp
call
cmp
mov
jne
cmp
push
imul
cs
fdivr
mov
out
scas
mov
xchg
(bad)
and
ins
sub
mov
js
aas
fidiv
pushf
push
push
cld
add
sbb
mov
sbb
in
aad
mov
jbe
sar
cmp
xor
adc
aas
jmp
xchg
loope
push
outs
stos
mov
call
mov
mov
lar
mov
mov
es
sar
pusha
mov
push
ins
into
push
push
lea
ja
mov
(bad)
mov
out
ror
pop
nop
ds
test
arpl
stc
es
fisub
cli
jmp
mov
aas
sbb
dec
cmp
pushf
ins
outs
gs
add
mov
xchg
out
stos
mov
call
popf
fcmovbe
jl
inc
iret
xor
push
mov
add
scas
loope
call
push
sbb
mov
jmp
inc
dec
inc
clc
and
xchg
fstp
mov
std
jp
iret
out
nop
sbb
cld
sbb
mov
adc
mov
xchg
mov
and
test
add
clc
aad
(bad)
retf
mov
dec
and
sbb
dec
nop
cs
addr16
push
or
cmp
(bad)
mov
sahf
mov
cs
fild
(bad)
or
inc
es
mov
lock
nop
outs
mov
out
jo
ja
pop
in
pushf
addr16
pop
pop
bound
inc
and
pop
aad
(bad)
mov
push
and
in
hlt
ja
outs
xchg
push
div
jl
cmp
retf
cmps
jbe
sub
scas
ror
jg
fstp
inc
popa
sar
lahf
(bad)
cld
out
(bad)
stc
iret
jmp
lock
mov
mov
arpl
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
scas
sbb
dec
sbb
jmp
mov
cmps
addr16
shl
cwde
out
out
cmps
mov
pslld
jns
sub
pop
xor
out
xchg
call
jae
loop
out
push
mov
mov
jnp
les
dec
xor
je
xchg
xchg
or
stc
mov
retf
cmp
fisubr
push
mov
arpl
and
movs
retf
mov
add
sub
pop
fs
ins
fmul
out
dec
mov
inc
sub
inc
fisttp
mov
push
mov
dec
push
xor
lds
inc
dec
dec
or
fcom
pop
push
jo
in
adc
sub
into
mov
out
sub
(bad)
loopne
mov
lahf
lds
cld
mov
xor
outs
mov
jp
push
jge
test
data16
out
call
cmc
xchg
out
sub
ror
jbe
dec
xor
hlt
rol
pop
sbb
dec
sahf
inc
movs
std
imul
pop
jnp
fistp
sbb
mov
adc
push
cmp
daa
cdq
add
or
arpl
sahf
mov
shl
inc
sub
cmps
or
movs
dec
rcr
and
bound
(bad)
fbld
dec
mov
fsubr
repz
and
ret
cwde
nop
jmp
sub
int
xor
aas
sbb
dec
lea
jbe
push
ds
xchg
mov
dec
mov
xor
mov
sub
les
mov
mul
cli
inc
bound
pop
dec
scas
pop
and
xchg
rol
stos
xor
call
out
pop
jl
mov
mov
(bad)
(bad)
shl
into
arpl
jns
std
lds
cwde
call
xor
movs
sub
fstp
pop
jns
cmp
mov
adc
icebp
ins
ret
push
scas
sub
imul
and
gs
pop
lods
add
adc
sbb
mov
pop
(bad)
rcr
xor
idiv
pop
cld
or
sub
sub
dec
fisttp
imul
push
sub
aaa
push
mov
pusha
jp
push
pushf
pop
enter
mov
cmp
popa
sbb
mov
inc
or
inc
inc
xchg
shl
imul
sbb
sbb
xchg
outs
pop
dec
cdq
mov
inc
mov
adc
lods
ss
add
mov
movs
popa
aaa
xor
dec
mov
repnz
rcl
mov
sar
out
das
mov
xor
jg
mov
ins
sbb
jp
and
push
fist
mov
mov
ins
aas
mov
sbb
mov
fstp
aam
mov
mov
sub
adc
repz
ss
xor
or
cmp
(bad)
in
jmp
cli
mov
add
xchg
inc
lock
sbb
loope
ret
xchg
xchg
(bad)
jl
xchg
pop
jl
test
in
mov
mov
cmp
mov
sbb
mov
cmp
mov
and
(bad)
shl
inc
jg
cmps
loopne
cmp
in
scas
adc
dec
cmp
lahf
mov
cwde
loopne
(bad)
cli
sub
pop
adc
jne
cmp
aas
mov
sub
rol
mov
stos
mov
fucomi
push
xor
iret
mov
pop
mov
call
jp
repz
nop
lock
ja
inc
neg
xchg
(bad)
xor
xchg
or
lock
out
jge
ftst
cmp
adc
jecxz
outs
dec
in
cmp
out
inc
in
add
call
cmp
dec
jae
inc
(bad)
sbb
cmp
cmp
out
push
xor
sbb
fstp
cmp
or
in
jb
test
push
sbb
mov
mov
in
mov
popf
jae
pop
aaa
stos
add
fidivr
sbb
sbb
(bad)
push
xor
in
pop
cmp
adc
adc
pushf
xchg
sar
repnz
fs
nop
cmp
jno
cmp
mov
sub
iret
dec
mov
lds
cmps
jo
and
mov
cmc
and
pop
dec
mov
mov
jno
mov
dec
sbb
push
in
scas
push
mov
sahf
loope
jb
loopne
call
addr16
ret
sbb
push
(bad)
arpl
pop
pop
ins
repz
retf
mov
mov
out
adc
and
push
xchg
lahf
jae
inc
and
push
stc
push
pusha
push
pop
repz
movs
mov
xchg
sub
mov
(bad)
push
(bad)
mov
(bad)
popa
xor
imul
sub
std
sub
jo
into
mov
jmp
dec
xor
push
es
mov
push
fld
mov
jle
inc
(bad)
dec
cld
jbe
dec
mov
fucomip
jmp
aam
pop
jo
retf
dec
add
stos
sub
sbb
sahf
test
sbb
mov
pop
dec
jno
in
jmp
dec
or
ja
lock
dec
push
adc
cmp
and
sub
imul
dec
ja
jle
or
xchg
pop
mov
add
xchg
repz
cmp
(bad)
cmp
pop
test
fldcw
or
push
cmp
adc
push
push
std
push
ret
pop
jns
dec
xchg
dec
js
aam
jno
iret
inc
aam
fild
mov
adc
inc
cli
cmps
int
sahf
daa
adc
fs
xchg
in
stos
repz
ret
mov
push
movs
sub
or
jae
or
sub
sub
cmps
sahf
jecxz
jno
daa
or
or
mov
pop
aaa
into
int
inc
fisttp
inc
jecxz
xor
adc
ss
sbb
sub
dec
mov
dec
or
cli
sar
lds
jl
cwde
adc
xor
adc
scas
xchg
jp
dec
jae
ja
movs
jle
test
outs
test
dec
stos
dec
add
add
jle
sbb
xchg
jge
mov
in
sbb
movs
pop
aad
loope
pop
and
outs
sub
enter
and
jmp
(bad)
mov
ins
pop
imul
pop
jecxz
es
in
or
loopne
pop
dec
or
cmps
sar
dec
clc
cld
rcr
mov
cmps
push
add
dec
adc
pop
std
call
push
rcr
sbb
test
pop
(bad)
xchg
adc
cmps
cmp
sub
fistp
leave
push
dec
mov
pop
xchg
push
dec
inc
sti
inc
inc
inc
imul
pop
in
hlt
stc
ja
mov
add
imul
repnz
dec
mov
in
not
dec
ret
jmp
fist
cmp
dec
mov
mov
mov
in
adc
in
in
jne
shl
ret
fbld
scas
js
mov
fst
mov
sar
call
ins
fiadd
add
cmps
jae
fidivr
jno
aaa
ret
sbb
jg
aad
ds
adc
cmc
cmc
jno
repz
in
push
xor
mov
js
fcomp
xchg
xor
pop
xchg
pop
mov
(bad)
test
shl
pop
push
jmp
outs
mov
xchg
inc
stc
in
inc
jo
push
cmp
sub
add
pop
mov
and
inc
test
sbb
mov
out
outs
loop
lahf
sahf
mov
xchg
stos
add
add
gs
xchg
div
and
sbb
sbb
sbb
mov
xchg
mov
xchg
clc
int
outs
repnz
xchg
sub
inc
(bad)
popf
div
repnz
jmp
sahf
add
pusha
mov
int
jge
add
add
push
xchg
fmul
lods
xchg
repz
outs
pop
mov
xlat
lods
int3
push
stos
sahf
mov
sbb
mov
ds
outs
push
jg
repnz
pop
into
mov
sbb
bswap
int
jb
xchg
jmp
pop
jb
mov
push
(bad)
push
(bad)
mov
and
xchg
jmp
popf
pop
int
test
dec
out
adc
push
stos
lds
push
inc
clc
jecxz
jmp
gs
adc
mov
hlt
and
inc
stos
mov
loopne
outs
clc
ret
popa
addr16
mov
inc
pop
jb
sbb
movs
std
pop
or
loopne
mov
mov
ins
mov
jns
mov
retf
dec
shr
dec
mov
mov
(bad)
sbb
fild
sub
pop
fstp
cmp
sbb
or
out
aaa
cs
ret
pop
div
ss
(bad)
mov
cdq
cmp
ins
fstp
pushf
and
iret
jb
es
retf
aas
xchg
jno
lea
mov
gs
ret
pusha
and
or
icebp
icebp
aad
add
pop
fcmovnu
data16
(bad)
repnz
xor
and
das
pop
mov
push
push
pop
jg
bound
push
jmp
and
repz
call
out
(bad)
daa
les
xor
push
xor
loope
xchg
mov
dec
dec
pop
fs
leave
mov
imul
jge
imul
cwde
int
int
add
sbb
sbb
mov
aad
cmp
jbe
pop
inc
and
xor
out
or
(bad)
adc
jecxz
mov
fstp
dec
pop
iret
mov
xchg
sbb
adc
or
push
cmp
stos
outs
js
adc
xchg
call
and
pop
mov
not
sbb
mov
mov
pop
pop
cwde
fiadd
fisubr
nop
pop
mov
movs
popf
lahf
enter
push
or
xor
ja
pushf
xor
mov
std
int3
xchg
inc
(bad)
xor
rcl
xchg
rcl
fnstcw
sbb
ret
mov
xchg
stos
mov
in
clc
das
cmps
add
fldcw
mov
push
js
fsub
mov
scas
test
ja
add
es
fistp
imul
mov
aaa
retf
lock
daa
dec
mov
push
sti
stos
xchg
stos
les
mov
into
les
sbb
cmps
and
mov
movs
sbb
inc
xor
shl
loope
sbb
xlat
repz
icebp
in
adc
xchg
(bad)
fcomp
or
stos
sbb
sbb
mov
lods
cmp
test
lods
mov
or
sbb
mov
daa
pop
pop
aam
sub
xchg
jbe
jbe
movs
pop
ja
pusha
lea
popf
xor
cmp
pusha
push
ins
sahf
push
cld
call
push
mov
pop
cmp
xor
or
in
push
sbb
cmp
sti
outs
push
call
xor
(bad)
cmps
mov
jae
aas
(bad)
stos
fdiv
xchg
jne
xor
jae
mov
cwde
(bad)
sub
inc
push
jl
xchg
fldcw
(bad)
push
push
icebp
push
jmp
frstor
sbb
movs
push
(bad)
cmc
fucomp
mov
xor
ror
out
std
aas
stos
movs
(bad)
jecxz
aad
enter
push
cwde
in
cld
hlt
sbb
sbb
call
sbb
test
xchg
aaa
out
int
pop
or
mov
ss
das
ss
in
in
sub
stos
outs
sbb
xor
int
mov
pop
pop
mov
cmp
cmp
pop
adc
movs
sub
mov
cwde
pop
fcmove
xchg
lods
test
pop
mov
outs
arpl
mov
cmp
cdq
in
adc
dec
sub
hlt
dec
xchg
dec
sti
test
in
push
cmp
jmp
pop
idiv
xchg
or
ds
cli
xchg
mov
jp
xor
popf
retf
dec
fcomp
xor
popf
sub
push
mov
repz
jb
call
fwait
mov
ret
mov
adc
push
clc
in
sub
mov
jbe
adc
rcr
je
mov
call
loopne
pop
clc
push
sar
lods
mov
out
cli
fmulp
div
or
rol
inc
xchg
test
shl
push
adc
test
(bad)
xchg
sub
mov
pop
ror
(bad)
lahf
sub
pusha
xor
and
int
push
xor
aam
mov
and
call
nop
push
or
sub
repz
sbb
mov
cmc
scas
jns
ret
xchg
mov
int
out
and
scas
shr
and
adc
and
and
cld
rol
fbstp
lahf
test
or
mov
push
fsub
push
adc
imul
jecxz
gs
sub
imul
inc
sbb
jp
inc
sbb
lods
push
add
icebp
inc
xchg
sbb
sbb
jl
and
or
cwde
daa
clc
cmp
cs
stc
mov
mov
jo
xor
jb
in
es
pop
sub
pop
sub
loope
test
shl
push
pop
sbb
mov
xlat
push
cmps
jns
xor
jbe
dec
call
push
cld
fstp
jecxz
mov
mov
cmovle
ret
repz
loop
(bad)
pop
je
sub
xchg
add
fcmovnu
fcomip
and
sbb
int
ins
aad
mov
fwait
push
cmp
cdq
adc
push
ret
sub
cdq
and
cld
in
mov
mov
cmp
mov
xor
xor
or
xlat
aam
(bad)
push
xchg
fcmove
push
add
cmp
xchg
fild
ins
clc
test
mov
sub
jns
call
aaa
stos
mov
int
sub
fldcw
push
enter
loopne
jmp
mov
cmp
sahf
pushf
out
outs
dec
dec
loopne
(bad)
jns
jb
dec
(bad)
jae
lock
call
test
int3
scas
mov
dec
fs
push
sub
and
cmp
adc
jns
push
push
cmps
inc
add
xchg
loopne
push
jecxz
nop
lock
push
call
xor
xor
jmp
sub
pop
data16
cmp
cmc
iret
daa
and
les
aas
cdq
cmps
pop
and
push
xlat
mov
pop
mov
pushf
add
ja
retf
jmp
jo
push
xchg
inc
arpl
fs
push
mov
ret
lods
out
int
or
adc
dec
pop
inc
daa
mov
jg
dec
sbb
add
cmps
int
(bad)
dec
aaa
add
popf
(bad)
adc
mov
mov
rol
inc
ss
leave
fld
es
pop
jo
pop
inc
adc
adc
mov
jns
add
cmp
dec
mov
or
adc
and
nop
mov
fisubr
inc
popf
jmp
retf
sub
sub
popf
out
in
cmps
popa
add
syscall
sbb
jecxz
sub
adc
xor
pop
frstor
jg
xchg
dec
(bad)
or
sub
or
pop
aam
pop
ja
stc
(bad)
dec
mov
inc
mov
xlat
out
jnp
popf
xor
inc
outs
out
or
pushf
xchg
stc
adc
aad
fidiv
sar
ror
adc
int3
dec
xchg
jnp
mov
fimul
mov
xor
pop
push
or
popa
push
cmps
adc
es
mov
fs
push
iret
or
call
lds
and
cmc
aad
loopne
movs
mov
pop
repz
mov
out
cmp
and
shl
test
lds
shl
or
out
std
(bad)
jne
rcr
enter
cli
out
adc
mov
pop
not
je
mov
or
mov
retf
push
adc
les
xchg
fbld
call
pop
adc
lds
imul
pop
ins
cdq
and
mov
jecxz
mov
mov
mov
jns
adc
xchg
rcl
pop
push
pusha
mov
adc
(bad)
stc
out
jg
stc
out
jg
scas
add
inc
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
sbb
mov
jno
cmp
int
imul
xor
fsub
cmps
cmps
out
cmps
xchg
loope
jle
div
jl
pop
add
popf
fmul
add
lea
jne
inc
sub
inc
jl
mov
pop
popa
test
out
in
jne
lods
jb
pop
cmp
sahf
push
jmp
fimul
test
data16
shr
pop
mov
ins
outs
aaa
neg
inc
test
push
or
in
jno
out
inc
jb
clc
inc
repz
sub
inc
xchg
xor
mov
and
arpl
mov
sub
jbe
xchg
push
fcomp
fs
xor
fs
mov
inc
(bad)
pop
aad
inc
dec
shr
movs
cmp
xor
add
aaa
jns
lods
leave
mov
lock
jge
push
call
popf
sub
(bad)
ins
push
xchg
into
scas
lahf
dec
leave
pop
loopne
jno
aam
xor
movs
xchg
fwait
mov
mov
mov
cs
in
pusha
sbb
mov
cmp
out
iret
test
out
cdq
mov
iret
or
and
fst
add
sbb
shl
xor
and
or
mov
lods
cmp
bound
jecxz
jl
sub
mov
inc
je
jnp
inc
je
int
cmps
jecxz
mov
pop
cmp
retf
adc
push
mov
cmp
push
sti
push
mov
bound
iret
loope
(bad)
adc
mov
js
push
repnz
into
int
stos
mov
lock
and
pop
jno
imul
lods
fwait
cmp
sub
retf
shl
outs
test
push
xchg
inc
les
call
(bad)
retf
xor
inc
mov
mov
lahf
stc
ds
ins
data16
icebp
mov
jmp
sub
in
cmp
adc
das
cmp
les
push
add
hlt
dec
pushf
hlt
add
pusha
sbb
mov
leave
cmp
jb
mov
shl
jecxz
jg
or
xor
outs
mov
bound
jge
fild
push
sub
loope
imul
pop
(bad)
jp
(bad)
ficomp
cmp
jge
xchg
push
cli
imul
add
mov
mov
dec
pop
mov
imul
and
sub
dec
pop
mov
das
sahf
and
popf
(bad)
ins
and
fiadd
cli
je
mov
stos
cmp
and
popa
inc
mov
test
lahf
inc
jp
popa
bound
sbb
sbb
shr
pushf
aaa
mov
lods
sahf
movs
cmp
add
(bad)
pop
cmp
xchg
out
inc
adc
sub
pop
mov
cmp
(bad)
shl
jns
fild
sub
mov
push
aas
cli
add
adc
rcr
xchg
pop
popa
jnp
(bad)
(bad)
sbb
mov
das
xchg
pop
mov
adc
inc
rcl
xchg
mov
rcr
xor
cmps
sahf
inc
loopne
addr16
or
mov
jno
pop
xchg
cli
movs
xchg
sub
jbe
outs
ret
cld
mov
leave
ins
ret
ja
add
push
xor
jl
and
adc
jle
jecxz
adc
cmp
jecxz
idiv
movs
jnp
mov
mov
mov
aaa
xchg
or
adc
dec
sub
mov
xor
sbb
lock
pop
mov
ins
aad
adc
or
add
jne
mov
push
shr
leave
imul
fs
iret
bound
sbb
xchg
fcomip
pop
leave
call
scas
jno
in
lods
xchg
add
outs
loop
cli
or
aam
mov
push
cdq
lea
maskmovq
mul
movs
out
loopne
dec
sub
test
mov
push
fs
mov
and
sahf
shl
aad
fdivr
xchg
cmp
sbb
mov
outs
mov
out
dec
xlat
lods
xlat
stos
ror
fdivr
(bad)
call
nop
(bad)
sti
jl
fadd
into
loope
jl
xor
or
adc
sub
push
sub
jns
into
sbb
shl
add
addr16
xchg
stos
mov
cmp
sbb
shr
fnstenv
pop
test
iret
cmp
jnp
loop
les
cdq
push
data16
es
sar
aas
cld
out
scas
push
int
cmp
leave
xchg
into
rcr
xor
mov
arpl
addr16
mov
outs
push
push
jae
ins
int
or
jae
or
cwde
mov
xor
pop
(bad)
js
mov
repz
hlt
shl
push
push
jnp
sbb
sub
mov
or
mov
mov
jne
ss
sar
lahf
dec
cmp
sti
sub
(bad)
retf
inc
rcr
mov
mov
stos
ins
dec
sbb
lds
dec
mov
dec
xchg
dec
lds
push
lea
sub
mov
mov
push
daa
stos
mov
push
mov
das
cmp
les
ret
sbb
ds
mov
retf
jecxz
hlt
xchg
iret
push
pop
push
outs
aaa
xor
pushf
mov
enter
add
sub
or
xchg
ret
pop
pop
xchg
lahf
dec
dec
cli
xchg
cmp
pop
outs
out
adc
addr16
mov
pop
je
mov
sti
lds
stc
imul
out
pop
or
(bad)
mul
loop
and
jmpw
aaa
sub
cmc
aam
fild
in
loope
xchg
fst
dec
mov
shl
mov
rol
cmc
outs
daa
xor
mov
pushf
cwde
inc
xor
pop
jns
lahf
pop
mov
push
cmp
(bad)
stos
add
add
sbb
test
ret
dec
pop
jge
pop
gs
call
imul
aaa
mov
push
pop
lock
iret
push
mov
xchg
jmp
inc
bound
push
cmp
mov
in
test
arpl
sbb
out
imul
in
xchg
push
shl
jp
stos
push
adc
add
pop
mov
(bad)
pop
dec
push
push
stos
pop
je
arpl
jl
mov
jge
mov
hlt
jmp
or
push
inc
and
xor
pop
push
gs
jmp
or
mov
pop
mov
hlt
sbb
inc
clc
pop
ror
pop
inc
retf
loope
push
mov
cmp
fadd
ja
sub
loope
lea
push
mov
pop
adc
sbb
es
stc
ins
dec
push
xchg
pop
and
jmp
stc
xchg
fcom
test
fisub
sbb
xchg
add
aaa
pop
pop
lds
fadd
(bad)
cmps
fcomp
jae
add
xchg
leave
fist
add
mov
add
sub
dec
sar
lea
inc
repnz
arpl
adc
ficomp
int
and
pop
gs
jo
adc
sbb
ficomp
sub
cdq
adc
in
cmps
jg
ret
pop
outs
outs
test
(bad)
dec
push
push
cmps
cs
ins
ror
xchg
adc
jg
xlat
mov
xor
pushf
jno
fwait
popa
inc
jg
outs
bound
sahf
mov
repz
(bad)
popa
lahf
xchg
jb
xchg
fdivrp
dec
repz
cmp
stos
ds
dec
cmp
out
clc
push
popa
push
xor
out
scas
das
fisttp
jns
jge
adc
xor
jmp
ss
pop
xchg
pop
sahf
mov
fstp
mov
dec
xchg
out
ins
nop
mov
jmp
or
sbb
in
pop
mov
ds
push
cli
aaa
cmp
aaa
adc
pop
je
mov
ins
or
or
sub
adc
test
in
mov
push
or
xlat
cmp
test
xor
jmp
movs
mov
dec
(bad)
retf
(bad)
bound
rcl
xor
or
or
or
and
sbb
das
mov
xor
shl
out
cli
in
addr16
fld
repnz
jae
(bad)
xor
bsr
jmp
push
stos
pop
pop
loop
js
xor
in
arpl
or
add
adc
pushf
lea
add
mov
pop
or
mov
out
mov
loopne
pop
ficom
cmp
push
mov
mov
sub
gs
dec
mov
push
push
jns
lea
sti
dec
and
push
test
push
ins
jae
dec
inc
mov
stos
bound
xor
fisub
pusha
jecxz
adc
out
dec
inc
and
cs
test
in
mov
fdivr
test
test
cmp
(bad)
xor
xor
add
add
or
push
push
aas
cmp
sub
adc
xor
in
lds
push
scas
xchg
xchg
bt
cmp
rcr
stos
push
inc
cs
lds
cmps
mov
mov
mov
lds
dec
bound
mov
inc
pop
rcr
push
test
lds
cmp
lahf
call
mov
cmps
sti
jo
pop
jno
or
mov
dec
sub
call
mov
push
mov
xchg
fld
push
aas
mov
lahf
cwde
shl
loope
mov
push
cmp
and
and
call
xchg
jno
mov
pop
mov
xlat
pushf
call
nop
push
xor
imul
sub
fwait
into
xchg
outs
dec
add
and
nop
adc
sbb
and
mov
push
push
aam
in
cdq
hlt
addr16
xchg
addr16
pop
mov
inc
xchg
xchg
add
ret
(bad)
pop
movs
ins
sbb
out
and
mov
sub
out
push
cmp
xchg
xor
jo
(bad)
repnz
and
sahf
mov
dec
pusha
not
(bad)
xor
jle
or
or
push
nop
push
xchg
jmp
add
retf
push
je
sbb
pop
add
ret
dec
push
mov
mov
or
or
fistp
(bad)
jmp
sbb
pop
ret
xor
mov
inc
jg
pushf
sub
adc
loope
mov
inc
mov
mov
xor
dec
or
movs
inc
sub
or
in
sti
dec
call
add
aas
fs
inc
jg
in
aas
inc
cmp
push
fstp
add
mov
sub
push
mov
into
pop
mov
or
ins
push
push
fmul
mov
dec
stos
and
pushf
and
jmp
test
sbb
mov
shr
sub
pop
cmp
loop
push
add
push
cs
out
ins
add
cs
fs
push
cld
and
mov
shr
add
sbb
mov
jno
xchg
jno
dec
jno
int3
iret
fidivr
data16
mov
jb
imul
iret
out
and
cmp
fs
mov
mov
(bad)
outs
outs
and
enter
ins
loopne
xchg
push
add
dec
mov
in
xchg
aaa
dec
and
adc
sub
cld
adc
aam
test
test
jnp
jo
(bad)
sub
ins
(bad)
push
and
outs
xchg
call
mov
popf
xchg
jo
jne
nop
mov
sub
xor
push
jge
movs
xlat
and
mov
pop
mov
xor
inc
inc
and
lock
call
(bad)
mov
add
pop
popf
adc
lock
mov
dec
push
or
int3
call
or
push
jb
outs
in
pop
jmp
rcr
fwait
push
jno
rol
neg
sub
sti
pusha
inc
movs
mov
sub
icebp
cmc
xchg
ins
movs
mov
xor
xchg
outs
int
and
xchg
out
adc
or
iret
out
popa
jle
mov
lods
(bad)
aam
(bad)
jg
cmc
test
jmp
ficom
sub
scas
push
adc
fst
pop
pop
jae
or
clc
cmp
test
xor
neg
xchg
xor
sahf
pop
aam
loope
mov
pop
or
xchg
out
add
ret
shr
mov
and
mov
dec
xchg
adc
fldlg2
xchg
jae
shl
inc
xor
cmp
mov
retf
cmps
dec
push
mov
ret
ja
iret
sub
cdq
mov
lock
enter
pop
out
fnstsw
not
jmp
das
jae
xor
mov
or
aas
pushf
rol
or
fsubr
jb
and
sub
ficom
push
aas
loope
pop
xchg
out
lock
cli
add
add
sbb
mov
push
mov
adc
sub
mov
shl
nop
(bad)
cwde
rcr
movs
outs
add
pminsw
jnp
or
and
push
xchg
retf
fstp
jns
scas
fsubr
and
or
push
xor
aad
ins
jae
stc
jae
xchg
je
sbb
mov
push
imul
into
cs
int3
inc
ret
(bad)
das
rcr
into
shl
mov
sub
retf
sbb
and
push
xchg
cmp
in
iret
mov
sbb
call
shld
icebp
pop
ins
mov
jae
leave
mov
mov
mov
hlt
push
inc
repz
inc
retf
xchg
jbe
popa
ss
aaa
xor
js
push
cdq
ret
mov
test
call
clc
mov
adc
into
xor
inc
popf
sub
ret
adc
loop
arpl
xor
cmc
xchg
aas
das
in
mov
sub
cld
stos
aam
cmp
sbb
out
sbb
movs
es
movs
sbb
and
inc
adc
jl
pusha
xor
or
loope
jl
mov
dec
mov
and
(bad)
rdseed
push
add
addr16
jl
(bad)
jg
pop
jmp
pop
popf
arpl
adc
cwde
mov
lods
mov
dec
sbb
cmp
aaa
mov
pushf
fidivr
test
sub
les
scas
fbld
jo
ret
rcr
add
add
push
(bad)
or
je
fild
lods
ror
pop
ret
and
mov
sti
sbb
xchg
dec
push
les
inc
cmp
jb
or
aad
cmp
xlat
push
pop
ins
mov
popf
sub
pop
aas
adc
adc
pop
cmp
jnp
gs
xlat
imul
xchg
ror
ins
and
call
ret
nop
cmp
movs
loopne
aam
lea
pop
sub
cmp
and
and
push
int
cld
pause
js
test
(bad)
data16
std
sar
call
jle
sub
xor
xchg
sub
cld
cmps
stos
sbb
in
push
or
mov
loop
push
cwde
jmp
push
and
das
mov
jl
xchg
cld
sub
xor
test
js
mov
imul
lds
xchg
xchg
test
pop
jns
push
popf
xchg
in
add
pop
shr
vmovntps
mov
aaa
mov
ds
cmp
mov
and
pusha
xchg
(bad)
pop
test
in
ins
dec
cmps
jge
test
sub
jne
push
(bad)
cli
mov
pop
or
pushf
xchg
fdivr
xor
stos
retf
jmp
cmp
nop
jmp
pop
jg
mul
jecxz
sbb
push
sahf
(bad)
cmc
jg
sub
outs
test
clc
add
out
iret
pop
cdq
nop
jno
rcr
movs
pop
pop
xor
cmp
call
dec
dec
lahf
and
in
and
(bad)
int3
test
pop
push
pop
cs
cmp
xor
adc
sbb
lea
adc
(bad)
jne
mov
jne
pop
mov
mov
call
shr
xor
movs
sub
and
ret
jns
xor
aad
aas
add
pop
in
xor
lds
or
loopne
push
pop
sub
jns
outs
aam
adc
jg
repz
(bad)
cld
out
(bad)
stc
jg
add
pop
xor
and
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
das
jle
cmp
push
xchg
out
cmp
mov
mov
cmps
mov
cmps
fcmovne
je
cmp
xor
out
cmp
mov
dec
leave
fwait
add
hlt
iret
push
ss
pop
cmp
mov
push
fcom
out
xchg
loopne
adc
xchg
push
(bad)
loope
mov
mov
out
jmp
add
shr
jle
dec
jno
sub
xchg
sub
clc
xchg
leave
ftst
mov
in
rol
and
pop
adc
pop
and
pusha
das
push
(bad)
xchg
iret
aam
fnstcw
fdiv
cmp
dec
movs
in
push
mov
cmps
pop
test
dec
shl
enter
ins
and
mov
push
xor
or
and
or
mov
push
stc
jns
xor
sub
movs
ins
xor
(bad)
fidiv
jae
and
jns
(bad)
pop
push
std
push
push
and
or
add
mov
test
dec
mov
fs
mov
aaa
xchg
stos
and
inc
mov
stos
movs
leave
out
sbb
mov
jle
jo
mov
or
mov
mov
xchg
push
pop
addr16
aad
adc
dec
mul
mov
fist
icebp
mov
pop
jecxz
mov
mov
adc
jmp
jbe
mov
adc
jp
add
inc
push
popa
out
pop
adc
cmp
(bad)
jno
icebp
pop
dec
fldcw
xor
fcomp
mov
les
xchg
jge
mov
sbb
ret
out
rol
call
xor
dec
inc
sub
jo
xor
inc
jmp
in
mov
xor
dec
leave
retf
add
dec
cmp
mov
push
jnp
pushf
xchg
cwde
sub
fwait
sbb
push
pop
xor
jbe
cmps
adc
out
mov
pop
xchg
out
(bad)
int3
pop
daa
push
pusha
mul
inc
cmp
push
sub
add
pushf
daa
jae
les
jl
lea
or
pop
mov
lahf
dec
push
add
scas
mov
xor
mov
inc
jns
loope
mov
cmp
sbb
fwait
std
sbb
lar
imul
fistp
lahf
sub
xchg
inc
outs
mov
mov
pop
add
or
jo
inc
movs
lods
inc
dec
dec
imul
icebp
push
sbb
and
ret
(bad)
es
cli
xchg
fistp
sub
mov
pop
(bad)
test
cmp
jmp
xchg
in
lds
or
imul
or
inc
loope
rcl
loope
jge
sahf
test
add
cmps
mov
and
xchg
js
pop
push
jecxz
cmp
jb
mov
push
in
cld
cmp
and
xchg
sub
into
test
xor
inc
scas
push
mov
icebp
hlt
mov
test
vcmpsd
lahf
mov
mov
test
call
movs
xchg
inc
sbb
pop
ss
out
mov
mov
push
mov
mov
pop
addr16
pop
jecxz
call
dec
lea
cmp
cs
ror
xchg
mov
aaa
cmp
mov
or
in
pop
jmp
aad
loope
dec
popa
push
jb
test
ins
mov
sbb
clc
ins
call
pop
and
test
cld
aad
js
inc
dec
push
jnp
pop
bnd
das
fcmovbe
outs
lods
jmp
std
jae
pop
mov
fbstp
xchg
mov
mov
sub
push
mov
movs
mov
adc
sbb
dec
adc
(bad)
push
(bad)
into
lods
clc
xchg
addr16
int
pop
or
push
mov
jnp
movs
mov
pop
cmps
pusha
pop
cli
xor
inc
xor
pop
pop
add
sub
test
rcl
mov
pop
lds
ret
les
ins
mov
fwait
sub
pop
rcr
out
jnp
dec
aaa
sahf
or
sahf
mov
lds
cmp
dec
adc
jns
sysret
js
or
xchg
sub
cmp
sub
cmp
repz
popf
mov
jo
mov
cli
ins
out
mov
and
mov
pop
scas
cwde
mov
xchg
aaa
int3
push
aas
jmp
xlat
call
push
cmps
(bad)
(bad)
xchg
mov
bound
test
call
mov
mov
or
xchg
and
dec
loop
aas
jl
xchg
jno
in
and
loopne
into
ss
popa
outs
xchg
icebp
xor
mov
inc
call
add
mov
or
xchg
pop
outs
jmp
or
sub
sub
push
ror
imul
(bad)
xor
out
sar
or
cmp
cmp
shl
or
stos
xor
sti
sbb
cmps
xchg
pop
call
in
inc
std
xchg
std
pop
mov
inc
shr
cld
(bad)
scas
loope
cmp
mov
in
(bad)
or
sbb
scas
inc
and
and
je
inc
xchg
test
scas
dec
inc
mov
(bad)
xlat
sub
sbb
or
outs
mov
loop
rcr
iret
pop
cli
loope
xchg
js
pop
retf
push
cwde
sbb
push
lahf
lods
cld
add
rol
mov
test
aam
xchg
or
jae
add
loopne
jecxz
mov
dec
sub
cmp
mov
dec
in
pusha
fmul
adc
ds
inc
sbb
(bad)
scas
xchg
dec
shr
(bad)
mov
xchg
fist
sbb
mov
cmps
xor
pop
jmp
adc
sub
and
(bad)
rcl
(bad)
mov
adc
into
fnstenv
mov
dec
int3
cmp
dec
cmp
jg
sub
jmp
gs
ds
pop
or
xchg
cmp
mov
cmc
addr16
pop
loope
ret
pop
xor
and
outs
or
add
mov
xor
clc
rcr
add
pusha
push
or
scas
cmp
int
iret
sub
out
jno
scas
popaw
xlat
pop
inc
jg
adc
ins
pop
cmp
(bad)
vpaddq
jl
aam
sub
mov
js
out
mov
in
add
push
add
call
nop
xchg
(bad)
sti
stc
sub
jns
adc
push
cmc
jmp
rcr
test
int3
sbb
mov
mov
cwde
inc
and
xchg
mov
fwait
jne
pop
pop
outs
mov
ret
inc
mov
cwde
or
in
push
aam
xchg
adc
jo
hlt
and
repz
dec
addr16
inc
hlt
xor
lahf
repz
neg
jns
call
push
imul
scas
stos
(bad)
sub
ror
es
int
push
pop
mov
pop
push
mov
sti
in
fldcw
aam
mov
sub
xor
add
adc
(bad)
and
popf
dec
push
ret
stos
(bad)
jmp
push
adc
fcmovnbe
xchg
pop
sbb
mov
xchg
dec
adc
xchg
lsl
sub
adc
imul
dec
aam
xor
push
loopne
jg
fsubp
fist
mov
fadd
pop
jecxz
or
xchg
jmp
popa
sti
xor
(bad)
or
std
scas
jle
sub
leave
push
cmp
push
fild
out
in
(bad)
aam
popf
call
out
push
lods
sbb
fisttp
sub
cmp
sub
mov
mov
test
aad
hlt
or
outs
mov
add
imul
cmc
and
popf
scas
push
in
and
mov
dec
pop
je
mov
dec
lock
lock
pop
dec
in
jle
jbe
mov
jmp
add
and
jmp
imul
ss
arpl
pusha
add
or
(bad)
cld
mov
mov
rcl
std
into
push
lock
shl
into
jne
or
ins
out
rcl
ror
imul
jbe
jle
inc
push
mov
sub
fcmovbe
clc
call
sbb
inc
mov
pusha
jmp
ds
push
inc
jle
sbb
jmp
ds
ret
sar
xchg
imul
mov
leave
repnz
sbb
xchg
mov
stos
call
push
popa
outs
out
inc
pcmpgtd
shr
sbb
rcr
cmps
jge
ret
mov
shl
inc
xor
pop
push
movs
jbe
icebp
jo
xchg
jge
jns
sbb
sub
rcl
int3
dec
pop
pop
xor
or
aas
add
xchg
cmps
xchg
mov
shl
cmp
pop
or
ja
jns
loop
and
mov
int
mov
sbb
std
mov
test
arpl
xchg
daa
or
popf
cmp
mov
test
sbb
(bad)
push
cmp
sbb
xchg
daa
mov
mov
out
test
or
mov
rcl
jmp
outs
jp
lock
pop
rcr
lock
jno
cs
inc
xlat
test
cwde
in
jge
into
dec
popa
push
retf
fst
or
aam
ffreep
shl
retf
faddp
(bad)
sti
jb
mov
shr
cmp
mov
inc
push
ins
aad
sub
repz
es
(bad)
jno
pusha
imul
add
lock
retf
xchg
or
cmps
push
pop
repnz
in
xor
mov
or
or
add
cld
out
add
add
jecxz
sub
jle
push
pop
cmp
pop
loop
cmp
cli
test
sub
ds
xchg
cmc
aad
hlt
fwait
add
lahf
push
out
int
ds
in
push
sbb
lahf
xor
pslld
jae
xor
repnz
mov
cli
ret
mov
out
shr
dec
push
mov
fnstenv
jno
les
ja
pop
or
movd
jge
icebp
jle
sub
fadd
(bad)
sar
scas
cmp
(bad)
out
push
mov
movs
fadd
jnp
dec
jmp
jb
xor
or
push
in
into
cmp
fcom
(bad)
jnp
movs
sti
pop
sub
inc
test
fisubr
(bad)
or
mov
fs
xchg
lods
dec
bound
pusha
dec
mov
or
push
das
aad
pusha
fninit
call
jo
div
dec
into
inc
sbb
pop
rcl
dec
ja
mov
dec
movs
dec
xchg
movs
sbb
lahf
fcomp
inc
lahf
retf
jg
cdq
js
mov
loope
jl
or
fidiv
ficomp
arpl
mov
mov
imul
sbb
(bad)
(bad)
push
and
mov
test
std
fnstcw
sti
cs
loop
popf
sub
cli
inc
adc
or
into
(bad)
cmp
pop
imul
cld
or
pop
dec
mov
xchg
sub
pop
sbb
dec
sbb
adc
retf
xchg
adc
mov
fcomp
inc
mov
or
int3
cmp
lahf
xor
mov
test
push
dec
mov
or
ss
mov
jno
adc
bound
dec
loop
jmp
dec
pop
mov
fstp
call
dec
mov
ins
jne
cmp
dec
ins
fcmove
fwait
mov
repz
punpckhbw
imul
sti
jo
add
push
xchg
sbb
inc
and
seta
jbe
leave
loopne
sbb
aas
jo
jge
mov
jne
inc
out
mov
inc
dec
(bad)
xchg
mov
pop
push
and
sbb
push
bound
pop
out
test
fwait
iret
pop
pop
bound
push
mov
shr
sub
int3
inc
ficomp
mov
dec
outs
(bad)
pop
and
mov
and
ins
push
rcr
jb
ins
pop
adc
mov
(bad)
lods
cmp
loopne
nop
and
fbstp
push
or
fbstp
addr16
adc
mov
je
adc
push
lea
in
or
jmp
jp
pop
fwait
(bad)
cmp
loop
ja
les
and
ja
retf
mov
and
jge
dec
mov
jle
in
fwait
fwait
push
jns
xchg
mov
int
cld
push
les
jl
xor
lods
push
fdiv
inc
(bad)
fistp
in
push
clc
fnstcw
pop
xchg
jmp
mov
out
test
imul
or
gs
das
cmp
(bad)
scas
jae
inc
rcl
sar
test
ret
pop
ret
sahf
cmp
das
loopne
fnstsw
jle
cs
xor
sbb
mov
push
pop
adc
sar
jnp
inc
push
pop
lea
sbb
jae
jl
mov
jg
or
gs
pop
fwait
aas
loop
cdq
push
scas
jmp
int
test
pop
mov
inc
pushf
xor
shl
jecxz
imul
mov
pop
fdiv
repz
int3
leave
dec
in
push
dec
mov
frstor
and
cld
sar
icebp
sar
fldcw
repz
daa
or
js
cmc
hlt
daa
imul
xchg
xlat
pop
dec
sub
or
or
fdivr
adc
retf
lods
iret
cwde
cs
adc
push
hlt
xchg
ret
cmp
scas
ficom
mov
addr16
cmp
sub
test
pusha
jecxz
adc
cld
xchg
test
ficomp
ror
lock
iret
and
fdivp
jecxz
cmps
fadd
mov
fcomp
ror
sbb
or
stos
jmp
dec
adc
pop
mov
ficomp
sub
ja
mov
(bad)
repz
ds
jg
xor
cld
mov
(bad)
movs
mov
mov
jge
push
mov
or
pop
jmp
mov
mov
push
mov
cmp
mov
jmp
cdq
xchg
push
add
dec
and
fs
sub
popf
mov
xor
sub
in
pushf
repnz
xchg
scas
jb
sub
lods
push
sbb
dec
imul
arpl
mov
aas
dec
or
int3
cwde
jb
inc
cmp
dec
xchg
adc
or
ss
(bad)
mov
fidiv
fmul
pusha
xchg
neg
aam
cmp
shr
push
sbb
pop
or
xchg
clc
mov
ins
mov
xor
in
stc
mov
xor
jmp
cli
dec
call
jecxz
adc
jbe
fbld
mov
fiadd
sbb
inc
pop
ins
shl
(bad)
or
pop
push
sti
jo
ss
and
or
fist
outs
ret
jmp
daa
mov
inc
sbb
aad
and
nop
sahf
pop
pushf
jmp
mov
pop
loope
push
rcl
pop
ret
stos
jb
mov
fwait
and
bound
popa
mov
nop
sub
cmp
jmp
push
mov
aam
aad
mov
fpatan
int3
adc
mov
bswap
mov
add
test
aad
popf
jle
nop
ror
popa
add
and
mov
xor
push
jmp
arpl
mov
(bad)
retf
mov
push
or
push
xor
xchg
jo
(bad)
neg
aaa
xor
sbb
xchg
jnp
cmp
add
mov
dec
or
ins
inc
ror
pop
outs
lahf
jne
sti
fdivr
(bad)
ror
jmp
fcomi
neg
mov
xchg
xor
jge
fcom
adc
scas
outs
and
jmp
inc
call
in
retf
aam
inc
(bad)
lock
retf
in
jge
arpl
jmp
aaa
imul
call
xor
retf
push
cs
push
aaa
jno
out
int3
sub
je
inc
add
dec
mov
jle
jnp
fnstenv
jg
mov
movs
sub
hlt
adc
xchg
aam
cmp
rol
push
push
jmp
adc
jg
inc
sub
fstp
push
add
out
jg
stc
out
jg
stc
jg
add
pop
xchg
(bad)
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
inc
adc
add
dec
mov
out
outs
sbb
fs
shr
xor
and
and
sbb
popf
shl
cli
xchg
sbb
fcomip
mov
add
dec
pop
cmp
mov
mov
shr
sub
and
sbb
xchg
cmc
and
mov
jmp
mov
stc
repz
fimul
lods
retf
aas
mov
aas
and
push
fsubr
stos
cmps
xchg
pop
adc
pop
cmps
pop
shl
out
and
and
inc
dec
js
and
inc
xor
jmp
pop
stc
aad
fsub
sti
adc
sbb
retf
mov
mov
mov
js
add
mov
dec
ss
pop
jae
imul
dec
and
imul
pop
cmc
or
push
in
addr16
out
mov
imul
mov
call
mov
pop
push
ins
or
fistp
sub
adc
mov
test
icebp
sahf
mov
fiadd
add
mov
sub
pop
cmc
outs
mov
sub
push
mov
movs
mov
add
mov
dec
lods
cmps
movq
cmps
push
xor
push
adc
jno
stos
je
retf
sub
popf
aam
mov
dec
dec
rcr
sbb
retf
(bad)
gs
sub
or
out
and
sub
jmp
mov
(bad)
xlat
pop
pop
xor
lds
mov
or
push
xor
inc
icebp
push
fst
sbb
adc
adc
jg
push
jmp
mov
pop
fnsave
jnp
imul
dec
inc
push
add
fwait
ret
iret
cmps
pop
mov
in
xchg
add
fistp
jo
pop
pop
lods
dec
imul
or
dec
dec
add
mov
cmp
leave
xchg
retf
adc
cmp
mov
jle
or
xchg
leave
(bad)
pop
les
dec
adc
pop
leave
pop
mov
or
int
stc
jmp
pop
adc
cs
and
aaa
adc
dec
mov
push
dec
jg
popa
push
gs
movs
dec
lods
jl
out
jb
pushf
sar
clc
and
aas
jnp
jo
mov
cwde
or
cs
pop
(bad)
(bad)
aam
jns
jo
lea
jns
jmp
mov
adc
loope
arpl
out
sub
loopne
jb
sbb
dec
cli
and
fisub
es
pop
in
jecxz
push
dec
aaa
shl
loop
cmp
call
into
ins
jmp
rcl
mov
xchg
jb
and
adc
or
push
cdq
leave
push
pop
mov
arpl
xchg
inc
mov
push
pusha
mov
jg
jg
lods
outs
adc
push
in
pop
pusha
lahf
test
jge
push
movs
or
mov
pop
jmp
stos
jecxz
jl
mov
sbb
push
mov
dec
popf
cmp
jae
fiadd
push
(bad)
stc
push
fmul
fild
out
call
mov
dec
sbb
rcr
cmp
cmp
dec
stos
xlat
loop
xlat
sub
pop
out
loopne
xor
int3
xor
das
cld
lea
iret
push
fwait
daa
adc
mov
add
mov
mov
add
cdq
das
sub
mov
fbstp
push
ret
retf
jg
pop
xchg
mov
inc
xchg
ja
in
push
xchg
ret
mov
int
cmp
mov
test
sub
jl
ins
popa
mov
aas
imul
adc
lahf
inc
les
adc
or
mov
sub
or
sar
std
cmp
(bad)
adc
jle
rol
jle
mov
pop
rcr
adc
push
fmul
imul
inc
test
adc
je
(bad)
push
repz
push
retf
dec
fsub
and
inc
daa
call
push
or
xlat
adc
outs
mov
ret
jns
iret
ret
push
(bad)
fsubr
retf
jbe
cmc
or
pop
test
and
pusha
xchg
mov
push
das
imul
sar
dec
inc
cmp
ror
sahf
jmp
frstor
add
nop
std
movs
addr16
jo
pusha
les
es
xor
lods
fnsave
std
pop
repz
xchg
cwde
sub
sbb
pop
aas
ins
adc
rol
and
arpl
lods
outs
sbb
add
push
dec
mov
in
jno
and
cwde
lods
xchg
ins
sti
mov
hlt
addr16
icebp
and
push
or
movs
mov
and
pushf
icebp
mov
test
xchg
inc
mov
loope
ret
int
sub
popf
or
mov
lock
xor
pushf
cdq
nop
sbb
cmc
jg
out
xor
(bad)
loop
cs
ins
dec
mov
jbe
or
shl
and
imul
test
ins
(bad)
cmps
in
scas
lods
mov
scas
inc
xchg
inc
in
not
pop
xor
add
icebp
arpl
mov
push
stc
cmp
pop
add
mov
pop
mul
ja
inc
pop
bound
adc
dec
idiv
xor
call
and
sbb
jmp
mov
inc
repz
pop
jecxz
xor
sub
repnz
add
(bad)
mov
loop
sbb
adc
out
daa
out
adc
dec
push
push
adc
add
imul
push
call
stos
sub
mov
and
out
pop
(bad)
stos
enter
lods
sbb
sub
sbb
jbe
loope
je
jno
and
(bad)
lods
xor
int
sbb
inc
in
inc
(bad)
iret
jb
jle
and
stos
pop
jmp
adc
and
fcos
add
push
cmp
aaa
adc
pop
call
and
push
test
mov
outs
fucomi
cdq
or
loope
aad
pop
movs
and
add
add
lods
in
into
pop
pushf
sbb
cli
xchg
inc
xchg
sub
int3
pop
inc
shr
fst
push
inc
xlat
retf
mov
xor
jg
in
adc
inc
loop
ins
xchg
xchg
movs
std
test
jmp
fld
pop
cmp
pop
cwde
add
stos
cmp
add
and
pushf
xchg
loope
inc
push
stc
jae
test
push
or
xchg
cs
lods
add
mov
imul
imul
lahf
mov
jmp
xor
jne
stos
int
pop
daa
repz
ds
test
sub
fsubr
mov
dec
push
(bad)
stc
xor
loop
xchg
mov
fwait
mov
sub
cdq
xor
in
ret
popa
xor
sub
mov
or
retf
mov
imul
cli
les
push
mov
and
xor
cmc
(bad)
fcmovnbe
sub
fadd
and
pushf
cmc
lds
push
cmp
add
retf
movs
idiv
bound
mov
xor
jmp
aam
ja
enter
mov
mov
fisubr
adc
sar
(bad)
popa
dec
call
xor
movs
in
sbb
test
dec
pop
fist
add
pop
movs
bound
jmp
repnz
test
mov
fidiv
mov
gs
push
jns
cmp
ja
mov
scas
xchg
aad
cli
xor
out
pusha
cwde
adc
ror
sub
sbb
cmp
shl
adc
sbb
daa
xor
(bad)
jl
xor
aaa
test
test
aam
test
jge
cs
out
scas
std
and
into
xchg
(bad)
xchg
jmp
push
shr
push
movs
daa
push
imul
add
(bad)
mov
xchg
and
adc
ret
cmps
jecxz
jmp
adc
pop
cmp
jle
push
outs
repz
inc
jnp
aaa
inc
inc
adc
nop
jmp
pop
out
sbb
push
mov
sub
mov
sub
(bad)
push
stc
repnz
dec
aam
das
mov
pop
and
add
sbb
push
ins
(bad)
cmp
inc
ins
cmp
fs
pop
js
(bad)
or
das
bound
iret
push
inc
scas
dec
xlat
loope
cmps
and
cmc
scas
jbe
or
shl
in
and
jecxz
pop
mov
jl
gs
fs
and
in
mov
pop
mov
mov
ret
xchg
retf
(bad)
outs
movs
mov
sub
sbb
add
jae
std
cmps
js
xlat
gs
dec
scas
xchg
sub
mov
retf
das
lods
jge
movs
pusha
xor
pusha
arpl
xchg
mov
push
push
cli
in
in
jnp
frstor
das
pop
push
xor
jae
add
shl
jns
adc
test
leave
jmp
lea
add
push
sbb
cs
sahf
lds
inc
jnp
lods
sub
cmc
and
jb
(bad)
jmp
rcl
inc
(bad)
dec
fsubr
mov
inc
pop
cwde
cld
in
mov
in
imul
cwde
fistp
sahf
std
or
jp
jmp
jmp
xchg
in
das
adc
mov
push
icebp
in
jl
stos
push
sar
xor
(bad)
out
push
dec
idiv
fistp
es
lea
xchg
cli
adc
pop
sbb
outs
mov
daa
jp
dec
push
jb
add
add
adc
je
add
or
cmp
sub
ror
js
aad
mov
fs
sub
and
push
out
rcl
dec
shl
cli
xor
inc
sti
rol
pop
scas
std
(bad)
xlat
xchg
bound
das
xor
retf
gs
sbb
test
in
xor
or
and
(bad)
mov
out
cdq
cmp
jl
movs
sub
fild
or
pushf
scas
or
ins
test
mov
xor
out
in
ret
cdq
xchg
sbb
mov
(bad)
mov
dec
sbb
and
nop
gs
push
pop
out
jb
lods
les
mov
and
into
movs
scas
arpl
xchg
inc
mov
mov
adc
sub
xor
xchg
cli
push
popa
inc
mov
lahf
pop
add
into
dec
mov
or
inc
fistp
xchg
cmp
scas
iret
dec
bnd
dec
call
inc
sbb
inc
pop
ret
pop
xchg
icebp
cmps
scas
lock
je
cmp
xchg
fstp
cli
inc
xlat
adc
nop
ja
movs
bswap
cmps
sbb
or
es
pop
adc
jbe
add
sbb
data16
lahf
cmps
mov
rol
div
xchg
bound
mov
xchg
icebp
nop
add
mov
(bad)
(bad)
mov
stos
jbe
mov
sub
mov
pop
push
pop
fs
popa
call
punpckhwd
movs
push
xchg
adc
cmp
adc
mov
and
addr16
sahf
jp
mov
test
call
fxch
ja
ret
fs
lea
iret
fadd
outs
pop
pop
pop
inc
jl
cmp
lods
shr
fcom
les
cmp
sub
add
jne
and
xchg
call
cmp
or
mov
jb
dec
inc
or
add
stos
xchg
pop
dec
or
or
int3
mov
shl
xchg
ret
pop
shl
ficomp
mov
dec
xchg
(bad)
mov
fwait
mov
dec
mov
cmp
xchg
cmp
inc
jno
idiv
fnstsw
int
mov
(bad)
pop
movs
jo
mov
add
dec
mov
push
movs
mov
sti
dec
fisubr
push
pop
test
inc
and
cmp
addr16
mov
add
shl
adc
mov
loopne
mov
das
xchg
loope
sub
fnstcw
xchg
(bad)
retf
push
bound
rol
fist
sbb
rcr
fdiv
jmp
pop
push
jecxz
iret
in
xchg
jmp
ins
xchg
cmp
cmps
mov
fld
ja
rcr
(bad)
unpcklps
leave
jmp
cmps
jo
add
sbb
cmc
ins
outs
xchg
out
in
xchg
xchg
cmc
repnz
add
je
jle
sub
jns
xor
xchg
xor
jg
mov
imul
lods
jnp
stos
fisttp
out
xor
sub
(bad)
mov
lds
cs
and
push
or
pop
dec
mov
aad
xchg
stos
push
pop
out
jge
or
fs
sbb
pop
adc
movs
clc
into
lock
jle
mov
mov
ror
add
sub
or
add
xor
(bad)
dec
xchg
je
jno
in
mov
jae
cmps
jmp
pop
or
mov
cmps
in
cmp
scas
xchg
dec
pop
ins
scas
sub
call
bound
dec
icebp
push
push
pop
mov
adc
enter
aaa
imul
jno
cmc
ficom
cmps
push
int
scas
cmp
xor
cmc
shl
mov
push
pop
das
retf
(bad)
adc
dec
outs
fwait
(bad)
cmp
fidivr
pop
das
out
mov
xchg
addr16
sbb
xor
fcmovnbe
dec
leave
ja
rcr
pop
or
aam
mov
mov
jno
mov
repz
or
call
jnp
xor
adc
(bad)
scas
int3
xor
lods
leave
mov
popf
aam
(bad)
adc
lea
lea
or
push
test
pop
out
cdq
mov
add
ficom
outs
neg
add
in
in
addr16
inc
push
fldl2e
dec
mov
sti
sub
icebp
inc
xor
mov
jg
push
dec
or
pop
mov
retf
xchg
xchg
aam
test
xor
(bad)
or
xchg
add
mov
fdivr
sbb
and
popa
push
(bad)
idiv
pusha
fcomp
stc
lods
and
retf
pop
dec
add
mov
mov
mov
cmps
mov
or
jmp
dec
jbe
jbe
bound
mov
adc
mov
push
call
pop
loopne
retf
sub
mov
mov
xor
mov
imul
push
pop
jmp
push
loop
out
rcr
fisttp
push
inc
cmc
cdq
or
aad
cmp
rcl
arpl
mov
aad
call
jmp
adc
pop
add
cmps
inc
sub
test
icebp
cmp
in
sti
adc
mov
in
aaa
cmc
daa
mov
loopne
xchg
pop
mov
mov
xlat
push
and
shl
mov
cs
dec
out
sub
cmp
ins
mov
cmps
cdq
rcl
jnp
(bad)
sub
push
add
fisttp
jne
add
cmp
jne
dec
xor
sbb
push
loop
out
jl
dec
(bad)
out
repz
repz
mov
call
jge
fbstp
lock
xchg
sub
out
push
pop
imul
fcmovnu
add
xor
jp
adc
jecxz
dec
inc
sub
xor
into
jae
shl
jnp
sti
cmc
add
mov
cmp
jnp
leave
jg
pop
imul
sbb
inc
xchg
sub
inc
cld
add
pop
rol
in
cdq
int
ja
fs
adc
fstp
clc
cmp
jo
pop
ins
xchg
(bad)
scas
cmp
cmp
mov
lods
adc
mov
cmp
sub
ficom
cmp
out
arpl
lds
pop
pop
jne
sub
jge
fsubp
sar
jae
jno
jmp
mov
scas
sub
imul
dec
xor
sub
(bad)
xor
das
rcl
mov
call
loop
(bad)
daa
aam
mov
xchg
repnz
(bad)
mov
movs
int
pop
fisttp
push
jno
cmps
lods
cs
push
push
xchg
adc
fsubrp
or
sub
lds
stc
bound
cmps
pop
adc
mov
sub
push
lods
push
in
fnstenv
mov
adc
jne
or
ss
cmp
out
jg
stc
out
jg
stc
jg
add
pop
push
mov
ds
lock
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fidiv
mov
jb
mov
test
cmp
rcr
je
fwait
data16
sbb
test
push
add
fwait
inc
les
ret
lock
mov
xor
sub
push
mov
mov
mov
hlt
push
cmp
call
outs
mov
mov
daa
pop
inc
neg
xor
shl
jle
mov
xchg
jecxz
sbb
mov
fcmovbe
sahf
ss
inc
jge
and
call
pop
mov
dec
imul
outs
imul
cmc
inc
jg
sti
fldenv
enter
and
push
(bad)
or
push
and
or
leave
xor
icebp
inc
enter
adc
mov
push
in
imul
cmc
mov
xor
stos
fisubr
adc
movs
jo
rcl
push
scas
add
xor
adc
movs
xchg
xchg
or
adc
ss
cld
mov
inc
inc
mov
int
xchg
sahf
cmc
sbb
push
in
dec
repnz
iret
pop
test
mov
push
das
and
mov
(bad)
push
in
stos
jecxz
movs
in
lods
xchg
dec
loopne
xor
leave
sbb
leave
int
imul
ja
ror
rol
mov
mov
push
jns
loope
loope
and
or
lea
sti
xor
mov
loop
cmp
(bad)
outs
sbb
nop
enter
cmc
or
and
dec
fdivr
lock
mov
xchg
imul
test
or
push
inc
sbb
pusha
arpl
push
pop
xchg
or
neg
sub
jbe
xor
clc
inc
add
and
xchg
sbb
in
jmp
xchg
dec
xchg
jmp
cmp
cmp
mov
pop
rol
and
ss
movs
fisubr
pop
jnp
pop
cmp
mov
adc
das
fucom
mov
mov
in
aaa
aam
mov
adc
inc
adc
mov
push
add
dec
es
in
arpl
mov
jl
xor
iret
cli
outs
mov
cmc
js
push
mov
test
mov
mov
shl
js
adc
hlt
and
call
data16
sar
shr
aaa
mov
stc
stc
jnp
xor
out
jno
mov
hlt
out
mov
fs
cmp
out
add
jnp
xor
and
call
add
dec
call
mov
dec
retf
mov
imul
ret
gs
dec
mov
mov
sti
leave
popa
lods
mov
pushf
jmp
dec
rol
fwait
jge
les
add
sbb
clc
not
xchg
test
pop
mov
push
jmp
bound
sub
popa
push
aam
and
loop
pop
xlat
and
shr
or
pop
xlat
retf
outs
push
mov
les
adc
data16
mov
in
xor
ret
ret
(bad)
int
mov
bswap
or
ficomp
mov
mov
stc
scas
mov
inc
shr
bndldx
cmp
and
sbb
sbb
sti
outs
dec
inc
inc
push
mov
add
(bad)
scas
out
adc
cmp
fs
fucomp
es
fmul
mov
pop
or
stos
adc
xchg
adc
test
jl
dec
rcl
adc
das
leave
bound
pop
in
or
pop
in
repnz
imul
aam
jmp
int3
sub
xchg
popa
nop
scas
leave
xchg
xor
icebp
dec
inc
push
xor
dec
jle
sbb
lock
push
pusha
inc
push
lock
cdq
into
pop
int
jns
cwde
popa
rcl
stc
and
xchg
xor
stos
mov
into
lock
mov
stos
dec
xchg
push
mov
mov
aad
mov
fcom
fild
jb
mov
adc
cmps
adc
into
mov
sub
dec
sbb
int3
test
repnz
mov
movs
mov
mov
jl
imul
lods
test
outs
cmp
jp
outs
add
mov
adc
fiadd
scas
scas
movs
aam
xchg
(bad)
or
and
xchg
xchg
xchg
fimul
mov
dec
cmp
cld
daa
daa
clc
push
pop
outs
in
mov
aam
cli
addr16
or
mov
inc
and
cmp
in
jle
(bad)
jns
xor
(bad)
sbb
std
nop
movs
ret
nop
imul
mov
jl
push
mov
dec
sbb
fcmovnu
fcom
(bad)
jmp
bound
repnz
jae
push
push
adc
out
stc
js
shr
dec
xor
(bad)
dec
idiv
inc
hlt
xlat
pushf
ror
fwait
and
gs
or
fmul
test
pop
dec
jg
pushf
shr
stc
(bad)
out
out
aad
jle
adc
loope
sbb
or
jb
jg
stc
sbb
jp
add
sti
clc
inc
xlat
cmp
and
jecxz
mov
arpl
lock
cmps
outs
pushf
fsubrp
adc
dec
loop
xor
xor
addr16
mov
stc
fist
(bad)
jge
cmc
inc
dec
and
mov
mov
lods
scas
imul
mov
shl
push
and
or
loope
cmp
sahf
jo
mov
adc
bound
movs
sahf
dec
int
mov
test
jmp
push
push
pusha
out
stos
lods
test
push
lds
mov
outs
arpl
xchg
mov
sbb
pusha
js
mov
push
leave
push
fcomp
mov
add
jp
out
push
dec
test
and
cld
push
int3
adc
sub
pop
push
cmps
outs
mov
mov
data16
scas
int3
or
popa
clc
mov
cs
mov
aad
cmps
fxtract
ins
adc
cmps
mov
jle
movs
or
and
ret
lahf
aas
ret
push
repz
ds
cwde
movs
loop
jnp
test
lods
loope
jecxz
inc
xor
push
mov
repz
add
or
add
sbb
call
xchg
push
out
fadd
out
aaa
cmc
sub
jge
dec
daa
in
cwde
in
jle
jg
xor
sub
fist
stc
mov
and
or
mov
xor
lods
test
jmp
lahf
ret
jne
add
dec
sti
lock
xchg
mov
mov
imul
or
sub
jne
in
push
add
(bad)
jo
sbb
fstp
and
stos
dec
cmp
out
pop
cmp
fimul
pop
mov
enter
ins
stos
je
mov
mov
les
xchg
imul
mov
sub
add
cmp
and
fld
sti
jbe
addr16
and
stos
cmps
lea
or
aam
mov
inc
pop
imul
daa
mov
stc
mov
daa
xchg
inc
outs
mov
push
sub
mov
lahf
into
mov
call
sub
inc
ret
rcr
push
ror
aad
pop
imul
add
xchg
jnp
cmp
(bad)
lods
aam
sub
leave
push
in
in
jecxz
retf
(bad)
(bad)
out
jge
in
lea
loopne
mov
(bad)
xchg
push
sbb
aas
sbb
pop
push
pop
lods
cdq
and
loopne
sub
mov
dec
or
dec
inc
jae
out
and
bound
(bad)
mov
inc
mov
cmp
out
mov
inc
push
push
mov
xchg
pop
ins
(bad)
sahf
dec
pop
movs
aaa
or
lods
dec
in
repnz
mov
sbb
push
fprem1
loope
pop
aas
inc
mov
sub
test
imul
sub
imul
lods
popa
fwait
loope
nop
or
mov
and
scas
cmp
inc
lds
sbb
and
fisttp
into
push
mov
xchg
test
or
rcl
cwde
mov
scas
ss
(bad)
xchg
jle
sub
sbb
outs
fiadd
js
jge
add
outs
imul
dec
pop
(bad)
es
jns
inc
sti
gs
cli
pop
mov
pop
xor
cdq
mov
sub
jnp
mov
and
inc
dec
aaa
and
mov
xchg
jl
fnstenv
inc
ds
mov
aaa
dec
lods
or
mov
jno
sub
jecxz
mov
imul
or
je
add
repnz
inc
frstpm(287
sub
mov
(bad)
sub
cmp
sub
outs
imul
push
arpl
das
dec
shl
mov
repz
add
cwde
rcr
fcmovnu
mov
dec
cmp
mov
sub
(bad)
xor
les
sbb
lock
pusha
shl
rol
je
inc
xchg
sbb
sbb
sub
cmp
addr16
add
sub
out
add
out
or
(bad)
fnstsw
clc
dec
pushf
neg
cmps
ficom
fbstp
mov
mov
add
fadd
repnz
rol
cld
sub
pop
jp
(bad)
rcl
jl
js
cmps
je
ret
nop
push
lods
cwde
neg
xor
pop
add
cmp
ret
in
adc
xchg
loopne
push
ss
inc
xchg
nop
mov
lds
out
ins
jge
jne
mov
test
enter
imul
ins
push
sbb
in
push
fst
rcr
ror
mov
mov
xor
pop
push
fisub
mov
dec
inc
add
hlt
lds
add
mov
add
or
xchg
loop
dec
mov
adc
ds
jmp
imul
or
cmps
dec
repz
cmp
pop
aam
mov
add
dec
outs
mov
in
mov
cdq
mov
mov
inc
nop
cmps
ret
mov
cs
jno
retf
and
call
ficom
(bad)
enter
sbb
xchg
jbe
mov
int3
hlt
pop
std
mov
cmps
sub
cwde
in
lahf
call
aam
call
mov
xor
xor
cmp
push
cmp
or
nop
stc
mov
fild
ins
sub
push
adc
(bad)
daa
inc
mov
cmp
pop
sbb
ret
pop
loop
cmp
mov
inc
lea
test
pop
mov
repnz
push
rcr
sub
dec
es
test
xor
scas
jp
mov
lea
lods
or
sub
int3
into
mov
mov
sub
fcmovu
mov
neg
mov
popa
mov
cld
push
add
inc
inc
xlat
icebp
xchg
fisttp
int3
xor
outs
dec
test
dec
or
movs
push
adc
popf
xchg
pop
stc
mov
pusha
stos
(bad)
rol
and
sbb
xor
sub
js
xor
cmp
aas
mov
adc
xor
xor
je
cs
adc
cmp
cwde
xchg
nop
ja
dec
lods
fild
dec
jle
imul
lds
push
add
mov
inc
cmps
fsubr
cmps
mov
(bad)
jecxz
mul
adc
call
bound
dec
sbb
and
(bad)
jmp
pushf
pop
jnp
xchg
dec
(bad)
imul
push
or
adc
nop
pop
jbe
enter
pop
pop
shl
jmp
xor
adc
call
call
jbe
mov
sub
stos
push
push
sbb
(bad)
adc
xor
mov
pop
ret
faddp
mov
fiadd
test
and
shr
mov
scas
and
pushf
pusha
mov
pop
mov
inc
sub
jnp
xor
test
push
lock
push
sti
ficom
jne
mov
mov
sbb
and
pop
mov
xchg
ror
popa
cwde
push
push
xchg
xchg
repnz
(bad)
xor
inc
cmovnp
sub
xchg
ss
push
or
cmc
pop
imul
into
call
push
dec
sub
test
(bad)
mov
in
movs
(bad)
pop
sub
outs
scas
mov
xchg
test
add
cmp
sub
dec
fsubr
sbb
loopne
enter
pop
sahf
pop
xlat
inc
and
pop
ror
fmul
(bad)
loope
pop
inc
repnz
dec
pop
xor
dec
fdivr
(bad)
pop
xor
mov
movs
xchg
jbe
fisttp
cld
movs
not
test
rcl
sub
xchg
into
add
cmp
sbb
jmp
in
dec
movs
(bad)
sbb
popa
add
imul
push
hlt
outs
add
test
data16
add
int3
push
xor
sar
out
mov
xchg
ror
iret
mul
neg
sub
xchg
and
mov
inc
lods
scas
xlat
outs
test
in
lods
(bad)
lock
js
push
arpl
adc
mov
pop
clc
stos
pop
int3
ds
mov
cmp
and
sar
ret
dec
dec
jno
add
test
shl
push
jnp
push
aas
mov
fwait
cmp
push
inc
adc
xchg
lock
fadd
fmul
sbb
add
ins
pop
and
push
xor
lds
adc
or
mov
cmp
xor
rcr
cmc
jno
fwait
or
or
cmp
loop
xchg
jne
cmp
mov
test
icebp
(bad)
jb
jne
jmp
fisttp
dec
jmp
in
test
inc
int3
lahf
inc
data16
(bad)
push
pop
mov
fnsave
jb
shl
push
les
and
int3
jns
rcr
push
pop
imul
in
pop
loopne
rcl
ror
cdq
or
call
call
data16
mov
inc
shl
div
sub
mov
and
pusha
add
outs
push
aas
shl
jno
jl
pop
adc
push
cmp
fs
sti
cld
sahf
cmp
cli
fmul
and
inc
(bad)
adc
pop
nop
cmp
mov
adc
dec
mov
into
xlat
fs
in
shl
inc
out
dec
pop
pop
sub
add
out
stos
lock
push
repnz
inc
inc
out
ret
push
push
cs
pop
popa
cdq
dec
ds
sbb
jb
bound
xchg
iret
fs
pop
repnz
push
mov
mov
push
int
ret
mov
icebp
or
cmp
push
mov
ror
pop
push
mov
dec
(bad)
lea
aam
mov
cmp
sbb
cli
mov
mov
xor
imul
jmp
pop
movs
iret
xor
pop
add
lahf
(bad)
mov
call
int
out
out
sub
dec
mov
xchg
add
push
push
daa
int3
xor
sub
mov
cmps
out
fwait
call
dec
rol
aad
push
hlt
neg
mov
adc
inc
fldz
and
arpl
adc
popf
xchg
and
movs
inc
aas
std
or
push
fstp
bound
mov
mov
add
out
push
dec
aad
popf
es
(bad)
out
or
and
or
push
cmp
mov
jns
or
iret
fiadd
mov
addr16
and
push
call
in
out
out
dec
sub
idiv
xchg
adc
(bad)
(bad)
mov
out
scas
mov
int
or
loopne
and
je
mov
iret
jmp
pop
jnp
fnstsw
in
icebp
(bad)
into
fs
int3
pushf
mov
inc
retf
sar
and
mov
mov
jbe
int3
jmp
fisttp
movs
fidivr
adc
xlat
adc
cmp
jge
and
arpl
repnz
or
and
in
and
pop
call
retf
sub
add
(bad)
cmps
cmp
movs
ficomp
test
cmp
(bad)
or
call
sti
les
imul
xchg
cmps
mov
push
or
or
sub
aas
cdq
addr16
sub
sar
dec
jae
add
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
std
jge
xlat
loopne
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
pop
movs
xchg
data16
je
fisttp
mov
adc
nop
xchg
xchg
push
xchg
scas
(bad)
out
outs
jmp
push
push
rcr
jae
lldt
dec
or
mov
cmps
or
aas
inc
xchg
hlt
dec
rcl
inc
das
iret
(bad)
inc
mov
stos
into
sbb
adc
das
out
nop
push
add
sbb
popf
fs
cld
sti
or
rep
xchg
cmp
xchg
or
aas
xchg
lahf
inc
lock
inc
pushf
mov
mov
fmul
fnstsw
mov
add
mov
sbb
nop
test
(bad)
sub
dec
jbe
dec
not
in
adc
pop
add
sub
shl
ss
mov
call
xchg
dec
mov
adc
xor
push
jnp
sar
sub
idiv
ja
xchg
mov
cmp
and
xchg
jmp
in
xchg
cmp
push
pop
sbb
cmp
dec
pop
sub
ins
fimul
jmp
pop
jae
xchg
test
rcr
sub
jmp
nop
aam
repnz
push
shl
retf
mov
xor
and
dec
ja
mov
mov
and
add
inc
xchg
scas
or
rol
xor
outs
sbb
sub
aam
xlat
dec
sub
out
sbb
push
mov
ins
cmp
nop
cwde
fwait
loope
call
push
jne
bnd
mov
aas
ins
cld
clc
adc
xchg
push
aad
mov
inc
pop
xchg
cmps
popf
mov
fistp
test
addr16
jl
push
sbb
push
mov
cs
cmps
aad
sub
fld
call
cmp
test
(bad)
push
out
(bad)
loope
call
scas
mov
stc
sti
cs
push
retf
movs
fnclex
mov
xchg
out
mov
(bad)
bound
addr16
pop
movs
call
push
aad
(bad)
lahf
in
lock
sti
xor
push
es
and
scas
cmp
pop
ds
cs
or
dec
cmp
retf
or
ret
in
xchg
(bad)
icebp
jbe
fmul
ror
leave
js
jp
mov
mov
stos
sub
jbe
xchg
mov
sar
mov
adc
dec
repnz
push
mov
jmp
mov
inc
scas
ret
or
imul
jne
arpl
nop
mov
cmp
cs
mov
jl
mov
das
jge
outs
jne
and
loope
push
xchg
js
cmps
cmp
les
fwait
icebp
xchg
or
outs
cmp
sahf
cli
dec
xchg
mov
stc
adc
fist
hlt
fcomp
pop
jge
mov
movs
mov
push
lea
dec
es
mov
imul
inc
sbb
sbb
pop
sub
push
inc
bound
add
shl
jns
cmps
xchg
shl
cmp
rol
aad
or
mov
xlat
icebp
mov
mov
xchg
push
jmp
ret
movs
mov
comiss
add
pop
push
jge
push
jl
xlat
dec
push
dec
and
outs
loope
loope
sahf
xor
adc
sub
inc
fcom
movs
add
cmp
scas
fdiv
es
pop
push
mov
push
xor
jb
inc
xchg
sub
out
add
in
jp
sub
movs
into
pop
ficomp
jb
sub
sbb
pop
jne
cli
int
pop
xchg
cmp
xchg
push
cmp
mov
pop
loopne
rol
nop
clc
lods
xor
jl
(bad)
int3
inc
jmp
stos
movs
push
mov
pop
push
xchg
mul
cli
cs
push
xchg
lods
add
sti
call
das
push
sub
push
sub
mov
mov
test
popa
add
mov
int
push
or
test
xchg
cmp
add
call
sahf
dec
lds
iret
ins
(bad)
shr
sar
xor
(bad)
push
(bad)
mov
mov
jle
and
pop
push
push
sti
xor
mov
aas
jecxz
aas
jge
push
cmc
mov
mov
push
imul
cdq
in
call
fild
in
inc
xchg
adc
mov
adc
lock
outs
pop
imul
sub
xor
push
cmp
ja
push
mov
shr
mov
mov
mov
mov
or
xor
xor
enter
mov
out
add
(bad)
lods
aad
data16
(bad)
aad
jmp
out
lods
retf
(bad)
je
add
daa
fdivr
pop
mov
jno
lods
cmp
bound
xchg
lds
lock
cmp
test
jge
jg
dec
cmp
push
ins
or
test
adc
rcr
jnp
mov
inc
(bad)
cld
xchg
retf
sub
cld
test
fdivr
mov
dec
std
mov
adc
cs
ins
retf
aad
mov
lods
or
lds
mov
ins
aad
push
out
pusha
mov
jg
mov
imul
sbb
sub
xlat
or
inc
vpunpckhwd
push
sbb
les
jns
fidivr
jle
retf
sbb
sbb
mov
and
stos
dec
ins
outs
cmp
jns
xchg
gs
repnz
ror
pusha
fisub
inc
mov
jo
popw
inc
mov
mov
ret
ins
leave
xor
adc
(bad)
pop
pop
out
mov
mov
mov
jae
mov
push
fsub
jecxz
mov
enter
retf
retf
push
or
test
mov
aas
mov
and
xor
in
test
jecxz
into
outs
aas
lea
add
pop
(bad)
inc
retf
sbb
adc
ficom
or
xchg
int3
sbb
lods
ins
call
sbb
sbb
ret
ss
clc
dec
inc
xor
jno
enter
xchg
test
xor
inc
xchg
cld
mov
pop
pushf
dec
dec
dec
scas
inc
sub
push
pop
(bad)
sub
sbb
jo
shl
dec
repnz
xchg
and
ret
cli
mov
loopne
int3
call
or
mov
cmp
lods
data16
adc
daa
push
cmp
xchg
lea
arpl
(bad)
int3
or
add
in
lods
rcl
jle
daa
test
sar
in
cwde
jae
sub
xchg
iret
inc
mov
rol
add
stos
sbb
and
push
aas
sbb
and
fdivr
mov
icebp
ss
sub
repnz
cmps
sub
add
jo
and
fidiv
push
mov
(bad)
cdq
sbb
inc
pop
hlt
mov
xchg
mov
aad
push
or
add
fwait
mov
call
aad
cmp
mov
popa
hlt
rep
sub
push
jbe
lahf
shr
test
push
into
push
mov
xchg
outs
test
lock
dec
pop
xchg
push
and
mov
or
and
jp
mov
test
pop
mov
sar
mov
jge
pushf
cmps
leave
fimul
mov
cli
mov
push
mov
scas
stos
ficomp
push
mov
jb
pop
xchg
jbe
dec
ja
pop
fwait
and
adc
lods
leave
mov
test
inc
(bad)
dec
push
xor
dec
std
mov
xor
cli
pop
pop
repz
pop
call
(bad)
push
das
pop
sti
mov
out
test
sub
sbb
out
pop
dec
jecxz
push
sti
inc
(bad)
pop
mov
loopne
test
pop
cmp
sbb
pop
iret
ja
scas
push
std
out
pop
mov
xchg
mov
jg
loopne
paddq
in
loopne
jmp
push
cmp
pop
push
addr16
loop
fldcw
jb
adc
mov
int
aad
sbb
lds
mov
sub
je
fsubr
nop
pop
inc
xor
xchg
dec
mov
xor
inc
inc
mov
cdq
adc
test
mov
jae
pop
add
mov
push
push
pop
xlat
push
ret
retf
mov
cwde
or
jmp
aas
cmp
stc
xchg
js
sub
pushf
sar
call
jecxz
loope
fdivr
jne
in
lods
popa
inc
add
idiv
popa
add
or
sti
ins
enter
mov
ds
loop
stos
and
gs
xor
pop
into
mov
mov
mov
mov
xchg
repz
repnz
inc
and
fisubr
imul
inc
xchg
adc
jp
xor
sbb
jmp
outs
fcom
test
adc
jb
stc
lahf
je
jp
mov
shl
cs
je
out
repz
enter
cmp
mov
pop
pop
cmp
ss
lods
adc
cli
enter
mov
inc
js
xor
push
add
cdq
stos
pop
mov
adc
mov
xchg
inc
icebp
cld
je
cs
xor
clc
jae
lahf
mov
out
fnstenv
(bad)
scas
jne
inc
inc
scas
outs
loopne
pusha
sbb
call
popa
xor
outs
dec
rcl
adc
and
push
cmps
inc
arpl
jmp
clc
cmps
dec
add
jo
sbb
lea
cs
in
test
repz
into
leave
fldcw
jp
pop
lods
(bad)
imul
not
adc
int3
and
pushf
cmp
test
out
push
mov
xchg
aaa
shl
xchg
xchg
pop
inc
test
dec
pop
sub
mov
jnp
add
shr
lock
sub
mov
pop
cmp
popf
and
neg
and
fld
jge
push
jmp
push
ror
adc
pop
xor
cwde
ja
cli
xchg
push
(bad)
sub
mov
(bad)
in
retf
push
cs
scas
loope
rcr
sbb
int3
jp
xchg
mov
sahf
xchg
(bad)
stos
out
ins
rol
jge
mov
cmps
aad
mul
push
inc
sbb
jno
or
shl
repnz
pop
or
adc
sub
mov
(bad)
jmp
jne
mul
add
fdivr
dec
pop
daa
(bad)
mov
push
jnp
cmps
sbb
cmp
jle
ins
movs
xchg
cmp
inc
cmc
in
in
jne
inc
add
out
cmp
call
stos
out
sbb
je
pop
ins
adc
xchg
data16
pop
mov
xor
rcr
shl
or
mov
xchg
cs
ret
idiv
push
add
mov
add
pusha
pop
pop
mov
out
int
or
int
mov
mov
inc
and
(bad)
in
sbb
aas
fnstsw
xchg
iret
xchg
fnstsw
push
call
and
sub
fld
test
mov
lds
test
pop
icebp
jnp
sbb
sbb
sub
rep
lahf
test
jmp
loop
dec
stos
pop
fcomi
jae
jle
inc
mov
ins
dec
xchg
inc
inc
mov
pop
daa
jne
push
add
and
shl
movs
xchg
or
dec
cmp
inc
outs
iret
inc
sbb
cmps
clc
push
fwait
dec
ja
jnp
dec
or
mov
out
xor
popf
mov
ds
mov
lds
popa
push
sar
stc
dec
mov
cmps
xor
shl
jl
and
and
add
lods
call
mov
xchg
retf
sbb
mov
sbb
adc
jns
add
ins
ror
inc
push
mov
(bad)
jl
push
mov
mov
fidivr
mov
int3
push
sbb
adc
mov
mov
iret
xchg
sbb
pusha
iret
xlat
mov
shl
fsub
aaa
add
arpl
mov
outs
push
dec
ret
pop
sbb
mov
lods
ds
mov
cmp
mov
sub
lea
in
aad
cmp
mov
mov
jmp
cmp
push
fwait
les
es
sub
adc
jbe
aaa
(bad)
mov
cmps
and
cdq
xlat
sbb
in
cwd
jbe
xor
inc
aam
gs
icebp
dec
outs
jg
inc
icebp
popa
mov
or
pop
mov
repnz
cmp
adc
(bad)
aaa
ret
jno
push
stc
adc
addr16
dec
sub
sub
test
push
adc
aaa
and
mov
ins
loopne
xchg
les
(bad)
clc
das
push
icebp
lock
inc
shl
mov
dec
pusha
pop
(bad)
jecxz
jns
pop
pop
pop
test
lods
popa
pop
dec
ret
inc
mov
xchg
(bad)
mov
dec
cld
jns
or
jmp
inc
jne
mov
imul
lods
jne
test
(bad)
and
jg
adc
mov
dec
inc
mov
push
push
repz
test
and
xchg
mov
bound
jnp
data16
mov
shr
add
sub
cmp
in
mov
mov
cmp
push
out
mov
mov
mov
mov
xchg
fcmove
fiadd
stos
mov
push
dec
cmp
movs
bsf
sar
add
pop
and
aaa
dec
and
outs
adc
mov
gs
mov
add
clc
into
cmp
stc
imul
mov
scas
lock
jb
mov
mov
xor
lods
stos
cmps
inc
dec
xchg
pop
into
nop
dec
adc
xchg
dec
xor
mov
xchg
mov
stos
mov
pop
sbb
jmp
xchg
or
in
je
mov
sub
dec
mov
or
imul
mov
outs
sar
and
ss
mov
and
dec
push
inc
lds
mov
dec
cdq
jno
cdq
test
cmp
cwde
ins
inc
das
push
into
sub
leave
out
call
data16
sub
xchg
imul
int3
out
xor
cmp
movs
sbb
xlat
cmps
je
call
pop
cmp
aad
popa
jmp
mov
cmp
gs
lods
call
push
out
dec
jo
dec
leave
mov
or
mov
jmp
jmp
or
push
sti
push
add
inc
jp
inc
and
mov
test
jnp
popf
stos
outs
fisub
in
inc
dec
mov
mov
inc
add
sbb
icebp
das
push
ret
cmp
push
dec
popf
in
xor
in
cmp
into
in
xchg
pop
arpl
mov
mov
cmps
popf
gs
sbb
ins
mov
pusha
call
pop
xlat
add
dec
adc
mov
dec
mov
push
mov
push
test
clc
jle
ins
stos
repnz
push
enter
test
rol
pop
lock
add
mov
scas
xor
xor
in
aaa
int3
mov
movs
pop
div
(bad)
mov
adc
push
mov
daa
ins
mov
outs
pushf
lock
aaa
call
retf
pop
sbb
not
mov
push
jg
or
clc
jae
jae
mov
sub
(bad)
and
cmps
mov
and
jmp
cmc
retf
mov
push
out
inc
clc
out
xchg
imul
push
sub
jns
das
sbb
add
mov
cmp
pop
jmp
pop
icebp
push
lods
sbb
jecxz
fs
pop
xchg
dec
mov
imul
hlt
cdq
lods
sub
dec
out
js
hlt
pusha
add
sub
fild
jg
adc
or
das
rcr
dec
cwde
fistp
adc
test
ja
jmp
stc
sub
xchg
(bad)
jb
mov
into
mov
(bad)
inc
movs
fisubr
test
xchg
xor
dec
js
ja
in
jns
aad
jns
lahf
jg
stc
out
jg
stc
out
xor
xchg
in
pop
ret
jnp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
xlat
cmc
and
ret
shl
jmp
pushf
call
pop
push
ror
dec
popf
cmp
in
ja
out
fcmovnu
dec
ja
(bad)
imul
cli
pop
fidivr
mov
push
jle
mov
push
inc
out
xor
cmp
and
or
adc
nop
inc
movs
icebp
pop
sub
cmp
cmp
stos
add
add
pop
rol
xchg
nop
ja
mov
(bad)
lds
outs
rcr
std
sar
shl
arpl
or
jl
fdiv
lds
rcl
ss
pop
dec
dec
mov
aad
ret
jl
mov
in
sub
mov
pop
lods
pop
sar
mov
mov
paddb
push
cmp
dec
fsubrp
pop
inc
sub
adc
xchg
lahf
movs
inc
je
sub
lock
jo
jge
movs
pop
aaa
loopne
pop
sbb
sub
aad
ins
sti
sti
push
addr16
loope
out
mov
test
fbstp
je
adc
pop
pop
(bad)
addr16
gs
loopne
jae
fwait
movs
sbb
fst
stc
popa
add
out
loop
in
das
and
jo
add
adc
push
and
(bad)
dec
mov
cmp
fwait
sub
arpl
jg
mov
mov
scas
aaa
test
cmp
aam
adc
pop
push
push
and
and
mov
(bad)
mov
ficom
and
dec
lods
jge
or
popa
fcmovu
xchg
ins
or
(bad)
sar
retf
xor
clc
shr
fild
or
retf
mov
or
mul
cmp
fisub
aaa
scas
xchg
std
jbe
dec
aam
xchg
xchg
leave
fs
(bad)
push
pop
or
loop
clc
xchg
mov
sbb
xchg
nop
xchg
stc
mov
mov
ret
dec
repz
mov
(bad)
stc
ret
jg
into
xlat
sbb
cmp
shr
cld
mov
retf
xor
popa
and
or
dec
adc
pushf
dec
xor
pop
lahf
jns
mov
js
pushf
pushf
xor
xchg
mov
cmp
and
in
push
inc
shr
mov
mov
mov
or
call
in
mov
sub
adc
pop
add
stos
jne
cmps
es
dec
stc
mov
and
adc
sbb
push
jnp
lds
and
dec
adc
scas
xchg
je
test
pop
ss
jle
fcmovu
je
sub
xor
adc
call
xchg
jp
jae
imul
(bad)
fcomp
and
mov
jbe
movs
test
jmp
shr
push
enter
mov
pop
sub
loope
(bad)
and
ficom
and
xchg
lock
add
push
adc
mov
fist
inc
pushf
or
cmp
xor
pop
daa
ds
push
pop
push
xor
jnp
jb
lock
(bad)
pop
pusha
mov
pop
push
push
enter
cmc
dec
jg
or
(bad)
arpl
xor
pop
loop
movs
pop
pop
popa
and
je
cmp
dec
int3
icebp
jb
aam
mov
test
lahf
sub
mov
or
jne
sbb
jns
xor
xor
(bad)
mov
ins
mov
and
pop
cmp
fs
push
mov
xchg
xchg
adc
inc
(bad)
aad
test
mov
inc
cmp
or
cdq
xor
scas
loop
dec
jp
addr16
loopne
ja
xchg
movs
xchg
(bad)
(bad)
not
aad
retf
xor
pop
pop
ja
and
in
sahf
xlat
push
aad
dec
inc
enter
shr
cmp
call
fcmovb
sti
adc
inc
xor
dec
cli
ins
or
stc
mov
std
sti
push
push
jae
sub
push
sub
sub
cli
in
xchg
cmp
mov
or
shl
imul
sbb
push
scas
pop
ror
fcomp
adc
ss
cdq
xor
dec
xchg
pushf
js
xchg
or
sub
inc
mov
outs
call
mov
loop
sub
xor
lock
mov
cmp
cmps
pop
xchg
fld
mov
jb
pop
nop
or
mov
add
(bad)
dec
or
jmp
repnz
or
into
mov
in
pop
mov
adc
push
pop
mov
out
inc
mov
retf
pop
xchg
mov
ja
out
out
retf
jae
es
cmps
out
sub
stos
loop
jl
xchg
int3
clc
int3
cmc
xor
mov
jo
mov
push
ss
mov
fs
aaa
mov
cwde
rcr
sbb
gs
movs
fs
js
adc
mov
bound
adc
pop
sbb
dec
pop
add
dec
aad
in
ret
sbb
repz
pop
mov
adc
cmps
inc
mov
jnp
jnp
test
(bad)
std
cmps
pop
(bad)
pop
out
aaa
push
inc
js
pop
retf
inc
add
dec
inc
lock
js
or
mov
or
sub
popa
jno
push
and
enter
sub
imul
add
mov
cmc
(bad)
mov
pop
in
and
push
cld
enter
push
std
retf
xor
rcr
jge
sub
daa
add
cld
icebp
sub
push
test
popf
scas
ss
cs
pop
pop
aad
ret
sub
fmul
push
pusha
mov
inc
iret
cld
(bad)
inc
or
pop
adc
mov
sub
ret
js
dec
ds
inc
mov
jne
mov
jecxz
sub
mov
(bad)
jecxz
sub
aas
call
or
sahf
leave
out
test
mov
je
sub
xor
xchg
aas
mov
icebp
hlt
add
push
test
push
mov
mul
mov
lods
neg
mov
sbb
jecxz
or
push
call
cs
sbb
stos
call
aad
mov
out
sti
inc
sub
mov
aaa
aam
popf
rcr
or
inc
stos
pop
ds
fldcw
mov
mov
or
xchg
jg
std
cli
out
int
mov
mov
call
xor
rcr
push
jo
outs
jge
push
sub
sahf
xor
cmps
lea
rcl
test
inc
outs
cmp
stos
fistp
aad
(bad)
into
adc
cmps
std
pop
aaa
sub
fcom
lds
int3
mov
pop
cs
inc
pop
push
movs
mul
in
dec
aam
ins
sub
pop
jmp
stos
les
mov
out
mov
stos
push
mov
pop
rol
fcmovb
pop
dec
arpl
push
push
es
daa
repnz
add
xchg
and
xchg
adc
shl
mov
(bad)
adc
pop
scas
inc
repz
hlt
into
sub
pusha
sbb
jo
mov
xchg
xor
mov
ds
in
mov
and
sbb
or
inc
push
push
ret
arpl
lock
ds
push
push
pop
mov
loop
cwde
and
fimul
es
mov
add
sub
dec
pusha
dec
xchg
lods
sub
stos
fst
daa
lock
add
rcr
push
aam
cwde
mov
adc
leave
nop
or
icebp
(bad)
dec
mov
data16
gs
jo
xor
dec
int3
pusha
aaa
xchg
fist
xor
pop
adc
dec
push
inc
int3
sub
mov
ret
ret
mov
dec
std
lods
shl
mov
add
push
test
lods
(bad)
iret
retf
or
cli
in
mov
popf
xchg
test
inc
call
cmc
ins
fldcw
add
or
movs
neg
lea
std
inc
inc
xchg
and
add
dec
mov
or
ds
cwde
in
dec
or
mov
repz
fidivr
cmp
mov
std
outs
pop
mov
or
js
popa
das
out
leave
(bad)
pop
mov
int3
adc
xchg
popf
sar
adc
ja
pop
std
adc
gs
test
in
in
call
das
les
xchg
mov
jns
xchg
mov
fld
cmp
or
or
pop
xor
js
add
cwde
mov
(bad)
ror
jg
fidiv
sti
push
ds
mov
fs
test
retf
aaa
push
push
int3
inc
fldl2e
inc
push
addr16
pop
mov
and
cmp
outs
fwait
ja
addr16
enter
rol
mov
sti
imul
jae
cmc
add
aad
out
call
add
movs
xor
ret
cs
sti
adc
mov
test
mov
mov
xchg
aam
ss
push
or
rcr
cmp
push
jns
or
mov
dec
clc
in
les
icebp
jns
mov
sub
mov
jg
ja
cmp
add
in
neg
in
mov
lea
cmp
sbb
(bad)
inc
or
add
lods
ficom
je
icebp
or
xchg
rcl
icebp
ret
xchg
cld
xchg
sub
fisub
pop
jecxz
shl
cmc
or
popf
mov
fist
cli
adc
jmp
pop
int
mov
call
push
repz
daa
mov
dec
and
jne
pop
push
xchg
sbb
das
cmp
cmps
fcom
cmp
fbld
shufps
pop
leave
sti
int3
call
pop
sub
in
mov
add
addr16
fldenv
push
popf
mov
das
sub
xor
jg
cld
aam
(bad)
cwde
mov
dec
xchg
pushf
and
adc
jl
xor
bnd
add
rcr
addr16
pop
adc
jae
aas
xchg
shr
mov
jecxz
dec
in
mov
pop
jnp
popf
ret
cmps
jp
sbb
cld
sti
or
js
mov
push
lods
popf
mov
cmp
loop
in
scas
hlt
dec
inc
scas
popf
(bad)
repz
and
lahf
and
sar
add
dec
cmp
jmp
repz
push
lods
and
inc
in
lahf
xchg
dec
mov
out
mul
mov
repnz
jp
mov
test
(bad)
mov
cld
push
dec
ins
pop
stos
or
inc
fld
cmc
push
shl
and
mov
xchg
popf
add
in
mov
sub
pop
outs
xchg
retf
retf
push
(bad)
xor
fdivr
ror
stos
jp
ins
nop
mov
cmps
(bad)
bound
and
data16
mov
xchg
jno
mov
in
sub
cmp
shl
leave
iret
jecxz
repnz
xchg
adc
sbb
int3
jne
call
mov
push
sub
xchg
aaa
xchg
cmc
out
cmp
inc
fcom
xor
js
inc
fcmove
cmp
out
js
ss
mov
arpl
mov
mov
fs
mov
popa
push
ret
in
ds
dec
test
mov
and
aas
icebp
lock
cmp
and
push
(bad)
and
dec
nop
xchg
scas
cmc
mov
rol
or
into
aam
jmp
arpl
icebp
shl
and
sar
mov
stos
ja
outs
xchg
inc
push
sub
adc
test
pop
shl
sub
rol
add
lahf
push
in
sub
jmp
mov
(bad)
cli
mov
scas
outs
scas
shl
iret
sub
sbb
mov
cdq
in
fs
jne
mov
shl
repnz
cmp
idiv
out
(bad)
xor
in
mov
mov
adc
mov
inc
(bad)
fisttp
and
cmp
inc
dec
mov
mov
sub
push
xor
mov
cli
enter
adc
inc
xor
dec
icebp
jbe
push
arpl
pop
push
jg
test
pushf
ret
and
mov
xrelease
jp
in
nop
and
cmps
mov
int
cmp
cmp
mov
lahf
scas
popf
jne
mov
jmp
mov
fwait
sbb
mov
retf
imul
call
mov
ficomp
xlat
xchg
ret
lahf
xchg
inc
into
cs
lods
xchg
jo
jle
shl
sahf
push
push
xor
repnz
mov
jg
cmc
mov
xchg
movs
shr
ficom
popf
push
inc
mov
imul
fwait
add
adc
mov
jno
into
sbb
xlat
mov
xchg
cmps
fwait
mov
push
lea
mov
(bad)
stos
ja
xchg
call
mov
pop
add
ins
xor
fnstsw
std
mov
push
sbb
test
xor
and
lea
cmp
sti
sbb
(bad)
sub
pop
lods
in
int
lock
outs
dec
mov
imul
jne
adc
in
mov
int3
(bad)
cld
inc
mov
mov
mov
(bad)
in
cld
adc
jmp
cmc
dec
addr16
push
jae
inc
(bad)
jne
pop
fsubr
cmps
aad
mov
out
and
rcr
add
in
aas
dec
mov
ret
popf
mov
fisub
lods
and
inc
fsubrp
mov
push
out
stos
sbb
cmp
adc
jns
or
leave
bound
mov
std
cli
ror
es
test
and
inc
add
(bad)
sbb
loope
in
leave
mov
icebp
dec
stos
cmp
(bad)
and
inc
xchg
shl
mov
stos
mov
pop
out
xor
cli
jo
imul
pop
cmps
je
xor
mov
mov
mov
pop
neg
pop
pop
jl
out
pop
fs
jns
imul
mov
sbb
leave
cmp
imul
mov
arpl
and
mov
mov
push
sbb
xchg
ja
mov
test
cld
push
push
adc
inc
push
cld
push
ja
cwde
test
iret
lds
jb
scas
retf
add
push
cmp
cmps
rcr
fnstsw
lds
sbb
sub
push
sti
or
mov
dec
push
lea
add
ins
repnz
push
lds
xor
xchg
addr16
or
loopne
push
dec
xchg
call
cwde
(bad)
cmp
or
hlt
add
cdq
enter
pop
mov
jecxz
sbb
pop
mov
iret
xchg
nop
outs
dec
scas
les
jmp
cmp
ret
es
(bad)
lods
inc
pop
jno
(bad)
dec
loop
ins
xchg
(bad)
pop
xchg
out
lahf
rcr
iret
sub
adc
inc
add
int3
sbb
or
push
mov
scas
jmp
and
xor
xor
out
mov
jmp
test
pop
cmp
jbe
jecxz
and
cmp
cmp
jne
jns
popf
jl
hlt
ins
sbb
cmc
cmps
aas
cmp
or
(bad)
clc
mov
push
out
iret
xchg
cmp
xor
jp
pop
mov
push
jle
push
loopne
add
mov
cmc
idiv
add
sbb
(bad)
cmps
inc
(bad)
cwde
cdq
ffreep
aam
enter
jp
jge
inc
sbb
aas
retf
dec
popa
push
inc
je
jl
or
imul
adc
fadd
mov
adc
push
sbb
dec
shr
std
imul
daa
mov
dec
cmps
movs
mov
out
jge
test
aam
stc
test
shl
sbb
mov
jns
mov
add
jp
rcl
push
daa
fld
pop
adc
das
adc
in
sub
mov
mov
scas
xchg
arpl
pop
inc
xchg
jae
fwait
addr16
movs
pushf
mov
push
ficom
test
push
mov
ret
aaa
lds
ins
enter
jg
ins
sbb
add
jl
sbb
dec
and
aaa
clc
sub
sub
xchg
stos
pop
(bad)
imul
inc
sbb
jae
xchg
inc
lods
xor
fmul
aam
xchg
popf
xchg
in
mov
js
add
jmp
cld
repz
aas
(bad)
cld
repz
aas
jmp
les
test
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
call
ret
in
push
mov
repz
mov
mov
int3
cdq
call
nop
idiv
cmp
inc
cmp
push
add
movs
mov
mov
das
add
inc
sbb
adc
jne
imul
(bad)
cmc
ror
sti
and
pop
push
int3
mov
fmul
sbb
std
sbb
(bad)
das
cmp
nop
mov
mov
imul
cmp
or
(bad)
test
test
sbb
scas
call
mov
ror
mov
or
test
into
outs
adc
fadd
sub
xor
cld
fs
inc
mov
call
fnstenv
cdq
jns
popa
daa
jmp
sbb
lods
scas
fidivr
popa
jle
adc
fwait
mov
ror
push
test
cs
dec
and
arpl
rcr
push
push
sar
pop
imul
jne
int3
xchg
stos
xor
repz
ror
sub
sbb
popf
push
popf
adc
enter
ins
pop
call
push
pop
and
movs
or
push
icebp
xor
aas
cmp
cli
sahf
mov
jecxz
mov
stos
jmp
dec
add
mov
pextrw
mov
cmc
daa
popa
jg
inc
scas
das
push
sub
pop
push
mov
scas
test
push
shl
stos
xor
cli
mov
fcomip
xor
push
jbe
mov
xor
push
sbb
sbb
fisttp
or
sbb
push
mov
dec
dec
or
jno
adc
adc
inc
(bad)
xor
das
mov
add
in
inc
jl
repz
mov
inc
jmp
xchg
jge
cmps
push
pop
pop
int
daa
or
ss
sub
scas
inc
imul
mov
cwde
movs
adc
mov
out
cmps
or
movs
adc
jmp
loop
inc
sub
mov
inc
loop
mov
into
mov
xchg
cmps
(bad)
mov
mov
call
push
cmp
xor
sar
jmp
pop
sbb
and
in
add
add
mov
std
jo
(bad)
pop
mov
mov
(bad)
jge
int
sub
ss
test
(bad)
push
cmp
call
in
ja
inc
clc
popf
mov
pop
loop
jp
movs
test
cdq
stos
or
pop
enter
fs
shr
je
sbb
cmp
mov
inc
xchg
or
jno
adc
repz
(bad)
movs
sub
jns
repz
inc
push
sbb
aas
cmp
xchg
std
sub
sub
repnz
jmp
test
ret
xchg
(bad)
fmul
in
js
cmp
adc
cli
pop
jmp
jp
jne
or
jmp
mov
cmp
push
ds
adc
jp
(bad)
(bad)
repz
sbb
fisttp
int3
jmp
loopne
push
cmp
icebp
adc
add
clc
mov
mov
pop
lods
xchg
push
(bad)
leave
mov
and
pushf
fld
mov
xchg
mov
mov
pop
je
ja
enter
mov
add
hlt
cmc
fisttp
xchg
jecxz
or
mov
xchg
and
aad
fcomp
in
outs
js
adc
shl
mov
inc
inc
xchg
or
ins
jge
push
cmp
xor
fild
cmp
retf
movs
shl
cmps
xor
mov
add
frstor
test
icebp
sub
hlt
stc
add
adc
xor
jno
movs
mov
aas
dec
mov
cli
mov
ret
mov
imul
pop
outs
fldcw
sub
push
and
mov
pop
imul
mov
mov
pop
cmc
ret
retf
jno
sub
or
test
sbb
jne
(bad)
stos
out
sub
es
(bad)
mov
pop
jge
jecxz
test
jge
adc
ret
pop
mov
sbb
sub
mov
nop
jmp
push
mov
scas
stc
test
imul
push
mov
sbb
aaa
fwait
ret
push
(bad)
cmps
shl
stos
inc
sbb
ja
xlat
(bad)
adc
or
pop
mov
or
arpl
lahf
scas
mov
mov
and
jbe
adc
jl
mov
popf
or
dec
push
repnz
and
(bad)
dec
clc
mov
push
adc
shr
inc
scas
aas
imul
in
outs
dec
outs
out
mov
mov
stc
mov
sar
cmc
mov
test
ja
addr16
(bad)
shl
sbb
jne
mov
cmc
sbb
sub
fisubr
xlat
jecxz
out
stos
xchg
cmc
cmp
mov
jae
and
cmps
dec
dec
sbb
jno
fcmovne
xor
mov
fstp
les
sahf
or
das
das
and
ret
ds
scas
in
cs
enter
arpl
inc
push
fdivr
pop
test
lea
mov
ret
outs
fidiv
repz
dec
inc
mov
pushw
test
lds
xchg
out
lahf
mov
(bad)
imul
es
dec
repnz
mov
or
test
in
repnz
dec
jecxz
loope
pop
pushf
push
push
test
sbb
dec
sar
scas
sub
out
dec
push
call
jecxz
mov
out
out
cmovs
dec
push
int3
scas
pop
pop
and
repnz
outs
sbb
out
jg
loopne
inc
js
add
into
retf
inc
mov
pop
cmps
repnz
sbb
sbb
xchg
je
sub
into
sbb
not
pop
adc
sbb
pop
push
pop
or
push
or
aas
fmul
jmp
push
(bad)
daa
aas
iret
sbb
inc
popf
call
stos
xchg
repnz
fadd
adc
pop
and
pop
jbe
jno
jmp
pop
les
push
outs
shl
ins
inc
cmp
push
push
cmp
int
xor
xchg
mov
adc
pop
xor
jge
ficomp
push
sub
fnstcw
loope
loope
jbe
mov
not
sbb
(bad)
addr16
sar
pop
and
out
jae
test
out
and
cmp
xchg
push
jne
test
or
sub
xor
or
daa
rol
mov
mov
test
pop
imul
cli
leave
scas
js
(bad)
mov
dec
xor
mov
jp
ret
dec
xor
sbb
icebp
movs
jl
or
cmp
in
daa
cmp
cmp
cmp
pop
movs
hlt
pop
pusha
cmp
inc
cmp
add
cmc
scas
jne
pop
je
push
add
in
inc
cmc
lds
test
mov
jo
jg
sbb
loope
enter
mov
dec
cmp
push
imul
ins
test
jnp
adc
fidivr
clc
pop
lods
mov
sub
or
dec
ds
lgs
mov
repz
adc
loop
pop
lahf
dec
clc
pop
icebp
mov
sti
stos
adc
test
push
imul
das
mov
sar
cdq
add
ja
daa
xchg
aam
sbb
inc
mov
addr16
not
jp
int
push
sti
sub
cmc
mov
fs
mov
pop
jo
aad
(bad)
and
clc
cmp
adc
xchg
inc
in
push
(bad)
mov
sub
jae
call
mov
fldcw
icebp
cwde
sub
scas
stc
and
out
cmp
test
pop
pop
imul
inc
cli
rcr
inc
(bad)
dec
or
mov
cmp
cmp
inc
push
mov
mov
push
iret
out
mov
pop
adc
cmp
pop
mov
and
adc
jnp
fdivr
add
jns
mov
cvtps2pd
mov
out
dec
fmul
pop
xor
in
xchg
and
lds
dec
mov
sbb
fsubr
sbb
aad
retf
mov
add
or
jmp
and
mov
dec
sbb
pop
ins
cmp
xor
movs
loope
shr
xor
std
xor
inc
jp
fadd
mov
out
xlat
retf
jge
mov
arpl
ror
push
mov
sub
ins
pushf
neg
stos
pusha
xchg
lock
ret
push
out
pop
cmp
xlat
xchg
pop
sbb
cld
in
div
mov
inc
cmps
popf
add
sbb
fstp
push
call
xor
inc
jae
jl
gs
test
iret
sub
push
mov
sbb
(bad)
leave
xchg
dec
mov
and
inc
mov
mov
pop
out
stc
scas
scas
lods
addr16
stc
add
jnp
(bad)
cmp
sbb
test
fadd
(bad)
sub
int
arpl
xchg
cli
mov
fimul
mov
dec
fwait
push
dec
mov
out
imul
std
(bad)
retf
sbb
stos
xchg
int3
xchg
ror
xchg
fs
stc
stos
or
fnstenv
add
sbb
xchg
fisttp
(bad)
xlat
and
push
mov
pop
ds
add
mov
or
xor
cmp
movs
int3
(bad)
test
outs
xchg
stos
jns
movs
lahf
xchg
iret
cmc
pop
sub
add
sub
das
movs
rcr
mov
out
sub
fidiv
shl
fcomp
dec
push
mov
in
mov
leave
js
xchg
jg
sub
cmp
out
fisttp
scas
mov
cmc
or
or
push
inc
push
out
ins
(bad)
es
lahf
dec
aaa
dec
test
inc
outs
stc
or
push
in
push
cmp
outs
stos
in
into
repz
or
mov
icebp
sbb
int
adc
inc
(bad)
loopne
jno
push
out
(bad)
sbb
in
jle
das
jl
jae
add
ds
mov
retf
sbb
pop
xchg
or
int3
jge
idiv
je
adc
pop
jl
daa
xchg
inc
or
pop
mov
add
div
and
dec
push
pop
(bad)
retf
inc
pop
mov
jge
pop
in
sar
das
jb
jl
lods
dec
push
sbb
(bad)
mov
imul
sub
es
inc
adc
pop
aas
dec
out
into
das
or
xchg
jg
mov
ds
pop
in
int
retf
icebp
mov
mov
rol
xchg
add
pop
add
pusha
in
inc
sub
jp
or
aam
fwait
xchg
les
lahf
(bad)
mov
ds
imul
sbb
sbb
inc
inc
stos
jns
cmp
iret
cld
jp
mov
jae
leave
imul
push
mov
push
adc
push
jbe
cmp
lock
scas
out
xor
into
fldcw
mov
pop
cmp
test
pushf
daa
jecxz
sub
(bad)
(bad)
addr16
xchg
jbe
pop
add
cli
dec
sbb
fs
std
pop
pop
addr16
cmp
sub
test
dec
int
pop
push
retf
cmc
xor
sti
in
jmp
loopne
xchg
pop
stos
lds
aad
xchg
outs
mov
xlat
neg
repnz
daa
test
xchg
out
or
aaa
aas
and
mov
cdq
add
in
xchg
inc
stc
call
sub
pushf
push
popf
jle
pop
aam
dec
outs
fs
in
popa
cmp
test
jb
jmp
xor
fst
push
mov
xor
push
xor
jb
aad
clc
mov
xor
fnstsw
std
xchg
and
push
dec
stos
(bad)
(bad)
jb
pop
iret
pop
addr16
jno
sub
pop
movs
scas
and
loop
mov
call
cdq
dec
aas
jle
ss
aad
ret
clc
mov
add
out
and
cmp
add
movs
pop
gs
cdq
xor
pop
pop
ss
mov
and
push
pop
in
mov
ficom
jno
xchg
aas
sub
inc
mov
(bad)
stc
xchg
cmp
(bad)
xchg
xchg
dec
push
ret
sar
jmp
mov
(bad)
movs
or
aaa
or
cmp
movs
add
xchg
daa
inc
jae
adc
xchg
xchg
sbb
or
sub
(bad)
repz
outs
dec
inc
xlat
cdq
ret
fwait
jl
out
jae
test
arpl
retf
push
sbb
(bad)
pop
popa
mov
push
xor
sbb
scas
aad
lods
inc
test
int
or
jl
mov
xchg
cdq
(bad)
jb
mov
and
pop
dec
cmp
dec
shld
aas
inc
movs
pop
mov
aad
scas
cmp
jbe
(bad)
xchg
stos
and
xchg
lock
dec
imul
sub
stos
jp
jl
mov
stos
call
mov
in
sar
add
sub
ret
sbb
retf
aad
sub
out
or
cmps
mov
and
sahf
arpl
jae
push
imul
cmps
dec
out
mov
ins
jge
adc
or
cmps
add
hlt
pop
push
cmps
test
push
cmp
mov
mov
inc
test
ret
icebp
cmps
jb
loopne
sub
xchg
bnd
arpl
leave
not
mov
aad
pop
aam
popf
xchg
imul
test
dec
call
aaa
sti
aaa
dec
adc
popa
sti
call
mov
mov
or
inc
fst
dec
lds
push
sbb
mov
xchg
cmp
mov
jge
or
cmp
dec
fcomp
cmp
int
outs
lods
rcl
das
in
repz
in
cmp
lock
lahf
push
fdivr
cmps
dec
rol
sbb
std
bound
inc
dec
gs
mov
add
jo
mov
sub
and
lds
sar
or
sub
test
js
mov
into
mov
add
inc
pop
dec
inc
adc
(bad)
push
lock
xor
cmp
jmp
push
jmp
add
icebp
imul
ss
fstp
push
xor
bound
aad
sti
(bad)
dec
sahf
clc
shl
sbb
push
mov
xchg
mov
mov
jns
dec
mov
cmps
cli
shl
cmps
mov
dec
notrack
xor
mov
call
hlt
xor
mov
pop
mov
jmp
out
(bad)
lock
mov
clc
jns
pop
aaa
jecxz
dec
cmps
out
mov
or
push
les
mov
scas
push
xor
pop
lahf
xlat
int3
dec
data16
outs
stos
add
jb
loop
cmp
fwait
push
jg
push
sbb
pusha
pop
int
add
jbe
and
es
jle
jne
lea
sbb
aam
push
cmp
or
push
stos
dec
jge
cmps
or
gs
stos
mov
rol
scas
test
loope
out
stos
shl
dec
and
mov
and
or
sbb
cmps
je
push
neg
lods
out
icebp
push
pop
mov
mov
js
fcom
ret
imul
div
xor
(bad)
ins
mov
pop
jae
or
pusha
xor
fs
jl
(bad)
ins
arpl
xor
fcmovnb
sbb
mov
lea
sbb
ret
aaa
mov
rcr
je
xor
gs
shl
jl
mov
ret
out
(bad)
sub
les
and
xchg
mov
jg
in
out
mov
xor
cmp
xor
test
xor
movs
jle
mov
mov
js
jae
mov
out
sahf
cmp
cmps
jne
test
jg
add
popa
jle
fs
outs
jg
sub
push
das
lds
imul
test
xchg
mov
xor
popa
xlat
add
popa
dec
jnp
outs
stos
(bad)
pusha
into
ret
iret
sub
int3
in
outs
test
test
mov
fadd
mov
sbb
pop
sbb
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
pop
add
out
pop
adc
test
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
call
dec
xlat
jmp
jmp
xor
dec
dec
out
jbe
ret
cdq
out
cmp
pop
fisttp
stc
idiv
add
fdivr
rcr
push
test
push
cmc
lock
xchg
sbb
retf
push
test
mov
or
inc
lahf
fisttp
dec
sbb
sub
lods
sar
dec
repz
sub
test
rol
ret
push
fnstcw
out
dec
inc
aas
call
pop
call
mov
push
inc
outs
inc
sub
push
xchg
adc
mov
adc
pop
xor
out
in
pop
addr16
cmp
sti
fisttp
mov
icebp
aas
lods
sub
push
es
pop
push
(bad)
in
adc
mov
or
dec
dec
sbb
mov
movs
inc
xchg
test
sti
cmp
pop
scas
pop
xchg
clc
sbb
in
sub
je
lods
dec
adc
pop
stos
loop
repnz
sub
out
pop
(bad)
lods
fnsave
mov
and
add
pop
mov
or
je
hlt
or
push
jecxz
(bad)
mov
or
hlt
ja
xor
loope
mov
(bad)
sbb
sbb
movs
jmp
mov
lea
je
xchg
jb
cs
(bad)
jmp
sub
in
arpl
inc
repz
div
test
ss
xchg
and
xchg
ret
mov
test
call
rcr
xchg
rcl
push
mov
adc
shr
out
mov
loope
ret
jb
jbe
cmp
(bad)
jae
int3
mov
(bad)
mov
inc
inc
push
push
pop
pop
mov
mov
xor
or
js
push
pop
retf
fcom
or
push
jae
mov
dec
sar
dec
sar
adc
idiv
retf
push
(bad)
adc
inc
mov
fsubr
ret
or
sub
pushf
les
xor
str
inc
stos
cmps
cmp
push
mov
adc
add
fsubr
dec
aam
mov
xchg
cmps
cdq
sbb
dec
scas
mov
or
bound
xchg
loop
xchg
shr
and
xchg
push
sbb
pop
(bad)
int3
mov
(bad)
add
fnstsw
sti
clc
jp
clc
or
pop
fucom
clc
mov
pop
and
sub
or
movs
jmp
ins
iret
pusha
lods
imul
mov
mov
sbb
out
xor
xor
mov
xor
sub
xchg
pop
pop
sbb
mov
cmp
or
adc
mov
call
pop
mov
sub
adc
inc
cmp
ror
jnp
mov
dec
jmp
repnz
stos
cmp
fs
call
push
cmp
push
pushf
pop
mov
jmp
or
xchg
ja
js
mov
(bad)
stc
loope
push
mov
jmp
inc
adc
cmps
pop
jmp
fs
mov
pop
xor
mov
leave
xor
cmp
xor
push
loopne
pop
jo
sub
ficomp
xchg
and
sar
call
(bad)
or
add
mov
cwde
push
jp
lods
es
and
(bad)
repnz
mov
icebp
push
out
loope
mov
std
adc
push
fisubr
mov
mov
jno
inc
xor
mov
pop
loopne
imul
stc
daa
daa
mov
xchg
jns
xchg
add
lahf
sbb
jg
shl
mov
loope
mov
fcomp
inc
mov
dec
mov
mov
icebp
mov
fwait
aas
or
neg
mov
into
xchg
pop
push
push
inc
push
mov
and
pop
mov
jecxz
sahf
and
fdivr
je
out
pop
ret
cmps
mov
in
jmp
js
inc
sub
cmp
rol
shr
inc
cmp
call
(bad)
dec
mov
pop
pop
mov
pop
mov
mov
and
movs
push
mov
pop
cmp
adc
push
stc
mov
sub
add
out
jae
xchg
ficomp
adc
pop
daa
retf
xchg
lahf
pop
cmp
or
js
stos
push
mov
adc
into
in
ds
(bad)
ja
outs
push
cdq
(bad)
into
pop
jmp
cmp
pop
or
cdq
mov
data16
mov
sbb
cmp
jg
fdivr
rcr
cmp
sbb
mov
ficom
imul
aad
mov
xor
pushf
xchg
adc
dec
pop
sub
mov
jo
sar
std
add
pusha
sbb
push
jns
add
popa
es
jle
adc
cs
scas
sub
fidivr
cli
xchg
add
sub
test
dec
lods
xor
or
(bad)
xchg
adc
std
pop
jnp
pushf
cmp
sub
jecxz
mov
add
dec
bound
mov
pop
push
xchg
mov
jp
xor
cmp
out
add
sub
and
ror
pop
aaa
mov
imul
into
pop
std
rcr
mov
dec
ret
in
inc
jl
int3
sbb
mov
ins
ret
pop
faddp
bound
cmp
xor
push
pop
jle
jmp
mov
mov
xchg
adc
mov
fldcw
call
xchg
add
xchg
inc
(bad)
loopne
push
adc
xchg
es
add
jno
and
into
ret
and
inc
dec
cmc
mov
scas
xchg
add
mov
movs
pop
mov
sub
scas
test
ja
mov
in
arpl
xchg
cmp
test
push
aad
addr16
out
dec
sub
iret
mov
(bad)
adc
sub
test
inc
call
push
in
out
adc
lock
mov
dec
enter
(bad)
hlt
cmc
and
dec
scas
test
or
fstp
jg
stc
push
leave
hlt
into
leave
in
xchg
mov
pop
lea
dec
popf
cmc
into
pop
jb
gs
sub
jno
fcomp
js
adc
push
movs
xor
retf
imul
dec
inc
push
mov
call
xchg
sbb
push
mov
movs
pop
push
push
pop
or
dec
retf
call
adc
test
rcl
fldenv
lods
mov
xor
and
jb
dec
addr16
cmp
mov
sbb
gs
mov
out
sahf
daa
adc
repz
out
out
and
retf
add
scas
push
jecxz
call
jbe
popa
lock
bound
push
push
sbb
std
xchg
sbb
es
aas
xchg
shl
xor
mov
or
push
(bad)
sar
or
cmp
fnsave
sub
adc
sahf
jp
mov
fst
pop
sbb
stos
jp
in
xor
add
lods
lea
or
mov
retf
inc
cmp
add
inc
cwde
repz
cmp
lods
pop
aam
in
xor
xchg
imul
xor
dec
fcmovb
xor
xor
pop
mov
enter
fwait
inc
nop
cmps
in
dec
stos
sbb
cs
sub
lahf
ss
xchg
xchg
or
mov
dec
int3
adc
mov
ja
and
dec
cmp
cs
leave
or
jnp
jmp
hlt
out
scas
adc
mov
and
cmp
push
jb
xchg
xrelease
test
dec
adc
adc
cmp
aam
inc
xor
addr16
xchg
xlat
and
repz
lods
cs
push
not
std
xor
popf
sbb
cmps
(bad)
in
dec
movzx
in
inc
inc
jl
cmp
inc
push
mov
aaa
mov
arpl
aas
(bad)
out
aaa
mov
push
out
ficom
arpl
xlat
ds
idiv
inc
arpl
(bad)
xor
sti
cmp
add
add
stos
pop
sub
pop
cli
or
xor
push
lea
sub
add
xor
push
enter
and
jbe
loop
xchg
cli
cld
sbb
sbb
jmp
jmp
(bad)
xchg
push
out
aaa
sub
mov
mov
jg
adc
mov
dec
or
leave
cmp
pusha
adc
mov
sahf
sbb
outs
mov
dec
push
mov
je
and
sub
jmp
clc
repnz
sbb
cld
test
pop
push
fldcw
cmps
pop
stc
cld
in
add
jp
rcl
inc
push
jbe
push
clc
jns
push
xchg
cmp
sbb
fs
pushf
popf
xor
std
mov
sbb
sbb
outs
popf
loopne
xchg
ret
push
push
stos
ror
pop
fild
shl
push
call
test
push
fs
dec
jae
(bad)
ret
inc
adc
adc
jmp
and
call
cwde
out
imul
scas
pop
call
xchg
add
jg
or
cs
jo
push
mov
ret
test
mov
ss
or
retf
xchg
pop
or
pop
sbb
jmp
push
out
jnp
movs
dec
dec
gs
pop
pop
ins
stos
cmps
jg
pop
cmp
xchg
pop
sub
cs
mov
xchg
push
mov
(bad)
cmp
movs
push
mov
and
mov
xor
(bad)
dec
retf
sub
mov
dec
adc
arpl
ins
jns
sbb
out
jnp
dec
xchg
int3
mov
pop
imul
enter
inc
mov
in
retf
loope
sub
jns
sub
dec
xchg
mov
xor
dec
test
aam
push
scas
and
xor
or
or
loop
rcr
fnstenv
xlat
int3
jb
mov
xor
push
test
jp
fisttp
test
lahf
(bad)
mov
das
xchg
test
mov
leave
cmp
std
les
test
das
inc
cmps
pop
dec
push
(bad)
xchg
and
clc
xchg
xor
ror
sbb
add
int3
mov
inc
and
xchg
nop
inc
out
pop
fadd
inc
loopne
sub
adc
xor
adc
mov
sbb
nop
xor
jo
jmp
outs
es
adc
(bad)
stc
xor
fldcw
in
loopne
idiv
lahf
in
adc
push
cmp
add
cli
mov
lds
cdq
(bad)
mov
retf
jp
add
sub
jnp
out
dec
mov
mov
cmps
scas
and
push
(bad)
popa
cmp
jae
xchg
mov
jae
pop
mov
repnz
je
sub
push
dec
loop
dec
lods
(bad)
mov
ror
outs
test
mov
js
shl
adc
xchg
mov
fwait
call
inc
ds
xor
icebp
test
xchg
jne
add
and
retf
repz
retf
out
sbb
and
xlat
mov
fisttp
push
in
add
mov
inc
in
daa
jbe
dec
nop
mov
and
gs
pusha
ins
pushf
leave
xchg
dec
sbb
hlt
push
jns
jge
cli
xor
xchg
imul
fdivr
push
sahf
cli
add
int
popf
mov
test
pushf
xor
outs
mov
popa
mov
aam
mov
adc
add
jmp
lods
cwde
js
jnp
sbb
iret
jb
mov
inc
mov
aas
(bad)
and
push
out
div
hlt
fild
push
pop
bound
adc
in
psadbw
jae
cmp
fdivr
retf
sbb
test
hlt
imul
mov
push
test
jbe
push
fistp
mov
pop
lahf
adc
fadd
sub
rcr
fsubr
dec
(bad)
out
aaa
dec
(bad)
rcr
pop
bound
inc
mov
cmp
dec
sbb
dec
and
sub
and
push
push
(bad)
pop
cmp
cmps
add
pushf
pop
stos
push
ds
clc
loopne
add
adc
sbb
or
xor
lods
fisub
push
(bad)
cdq
mov
int
xor
(bad)
sbb
repnz
lods
xor
or
inc
pop
ins
mov
xor
out
daa
or
ja
sbb
and
ror
cmc
mov
cmp
xchg
push
adc
dec
lahf
push
pop
or
mov
callw
sbb
sbb
cmp
adc
vpmovmskb
sahf
dec
out
outs
je
into
mov
xor
push
jmp
inc
and
out
call
sbb
dec
xchg
jne
test
xchg
daa
test
or
adc
dec
clc
fwait
in
push
cwde
ss
jae
lods
xchg
cmp
dec
pushf
mov
jmp
pop
gs
jecxz
cwde
sub
mov
xlat
push
pop
pop
add
add
gs
call
adc
ds
lods
xchg
cmp
idiv
fcom
jge
fucomp
les
fsub
adc
inc
sbb
and
(bad)
shl
sbb
inc
sbb
pop
es
xchg
dec
jne
cmp
sub
sub
nop
inc
dec
xor
ja
jb
xchg
cmc
xchg
rcl
xor
dec
fiadd
iret
iret
aas
add
and
inc
jo
xchg
xor
jo
test
xchg
add
jge
jle
in
repnz
adc
mov
hlt
mov
add
fdiv
ins
add
xchg
mov
fsincos
outs
mov
inc
push
jmp
in
aad
fistp
pop
jo
aam
into
addr16
jge
cmps
jns
dec
in
lahf
icebp
lahf
outs
loopne
gs
xchg
mov
inc
loope
or
pushf
sub
mov
mov
pop
mov
xor
cmc
pushf
mov
pusha
cmp
jne
loopne
movs
(bad)
ja
add
rcr
stc
pop
xor
inc
cld
imul
aas
test
(bad)
pushf
push
cmp
inc
cmp
jl
dec
jb
lock
cmp
xchg
xor
mov
mov
ja
and
hlt
js
sbb
imul
jge
mov
jo
cdq
dec
xlat
cmps
mov
sub
push
inc
je
call
mov
add
mov
outs
cmp
jnp
ror
ins
sub
ins
int3
lock
or
rcr
mov
(bad)
xor
and
mov
pushf
test
(bad)
(bad)
sub
aas
js
pusha
bt
div
fcmovnb
pushf
adc
cmp
pop
cld
imul
in
gs
xchg
mov
fldcw
dec
fnstcw
jmp
cld
inc
jge
or
lock
in
xchg
add
ret
cmc
and
mov
popf
daa
(bad)
mov
and
das
sar
ins
retf
jno
xchg
or
nop
mov
or
in
jae
add
fucomip
push
movs
mov
mov
or
aaa
outs
mov
cld
mov
pushf
addr16
fdiv
into
ret
pop
repnz
call
sar
pop
and
stos
cdq
cmc
adc
sub
test
es
inc
jmp
lock
mov
xchg
fcmovbe
mov
inc
popa
cmp
addr16
daa
in
aad
mov
cmps
iret
add
push
sbb
xchg
mov
pop
cs
mov
(bad)
dec
ficomp
push
push
js
adc
push
and
cmp
mov
(bad)
stc
ret
cmp
mov
dec
outs
sti
hlt
inc
mov
push
cld
inc
sub
inc
hlt
ss
jl
retf
or
cwde
mov
jp
push
mov
outs
mov
xchg
add
and
push
pop
and
stos
mov
xor
mov
add
in
scas
fld
xchg
sub
mov
cmp
ds
or
inc
ins
jmp
pushf
xchg
mov
dec
and
in
xchg
lods
icebp
das
es
out
pop
sar
cld
repz
aas
(bad)
cld
repz
push
enter
push
jmp
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
int3
add
add
scas
out
outs
xchg
ss
cmp
dec
out
shl
dec
ja
cwde
into
fld
sbb
les
cmp
(bad)
mov
lock
xchg
imul
mov
pop
or
adc
pop
mov
mov
sub
les
outs
pop
lahf
(bad)
call
ins
js
bound
adc
pop
xor
test
int3
ins
mov
cmc
out
fistp
call
xchg
jl
pop
sahf
test
inc
aam
mov
mov
(bad)
mov
jmp
push
inc
rol
pop
adc
outs
inc
and
xor
sbb
mov
sub
push
cmc
xor
fstp
xchg
int3
xchg
iret
stc
dec
cmps
scas
dec
xor
and
cs
jnp
mov
sbb
bound
sbb
das
mov
push
and
jl
mov
xchg
mov
mov
and
shr
and
outs
or
je
int
mov
neg
loopne
xchg
push
out
loop
enter
sar
fild
sbb
or
adc
lods
int3
inc
stos
scas
inc
cdq
(bad)
pop
push
scas
cdq
test
ds
cwde
or
inc
xchg
call
in
shl
lahf
(bad)
push
int
inc
mov
into
adc
pop
outs
sbb
pop
rol
add
stc
rcr
sti
push
push
aam
std
stos
popf
out
jmp
xlat
sub
and
add
push
xchg
mov
sbb
mov
and
sbb
or
rcr
cmps
pop
test
arpl
clc
mov
popf
sbb
stos
pop
dec
sbb
push
or
leave
cdq
mov
pop
jge
das
(bad)
xor
cmc
neg
sub
and
pop
mov
jl
jmp
xlat
ror
and
or
and
jnp
sub
out
fsub
add
mov
cmps
mov
push
movs
or
test
fild
dec
mov
mov
loopne
mov
(bad)
push
mov
stos
mov
push
dec
nop
push
call
mov
push
add
pop
sub
cmp
jnp
data16
cmp
add
push
cmp
push
sub
jae
sbb
xchg
les
xchg
adc
push
cs
aaa
imul
jmp
nop
xchg
lahf
adc
lods
mov
xchg
cvtps2pd
xor
(bad)
push
pop
jg
xchg
sub
add
push
repz
lods
push
xchg
push
rcl
push
cli
add
out
mov
mov
popf
mov
ins
ficom
xor
test
adc
inc
sub
xor
(bad)
shr
fcomi
sar
cld
pop
xor
push
jp
icebp
lock
ins
xchg
mov
ret
(bad)
jns
inc
mov
retf
mov
daa
inc
lea
adc
mov
pushf
jns
int3
xchg
jmp
test
popf
popf
inc
mov
std
aad
daa
sub
fadd
lods
inc
sub
repz
push
sub
les
mov
xchg
push
cmp
jmp
pop
mov
outs
outs
ins
sub
xchg
mul
sub
xchg
mov
jb
call
out
mov
out
call
dec
cmp
add
xor
js
mov
jmp
in
lods
cdq
pop
cmp
cdq
sahf
dec
in
xchg
cmp
inc
xor
dec
jne
lods
stos
xor
ficom
cmp
jg
movq
(bad)
jl
gs
(bad)
imul
ficom
fdivr
adc
dec
enter
imul
in
gs
bound
(bad)
jbe
enter
ret
scas
fwait
xchg
jg
fdiv
in
mov
sub
jmp
mov
out
add
and
pop
push
and
adc
lds
dec
call
aaa
or
pusha
cwde
loop
add
mov
add
mov
add
stos
or
dec
jl
aas
repnz
jmp
jne
or
scas
push
stos
push
xor
or
pop
inc
xor
or
pusha
dec
fnstsw
ja
in
int3
retf
into
retf
clc
(bad)
mov
jge
das
sub
xchg
push
xchg
repnz
mov
repz
popf
das
lock
in
xchg
xor
push
add
or
imul
xchg
pop
inc
and
aaa
xchg
dec
out
push
or
mov
adc
or
mov
ret
and
into
imul
ret
es
es
aaa
imul
dec
add
pop
gs
(bad)
iret
inc
jbe
ja
outs
inc
sub
jecxz
and
push
gs
fist
movs
pop
push
fadd
xchg
jno
xor
cmps
dec
mov
pushf
(bad)
in
sar
push
movs
inc
and
cmps
mov
dec
push
adc
loop
js
pop
adc
jo
fild
mov
in
jle
fidiv
std
jge
div
test
stos
adc
test
fldcw
nop
push
dec
mov
mov
pushf
(bad)
and
loopne
(bad)
(bad)
out
pop
jp
sbb
rol
push
jbe
repnz
daa
cld
sub
xchg
cmp
cmc
push
inc
xchg
icebp
jae
repnz
mov
sub
push
jns
adc
int3
dec
sub
fidivr
loop
shl
shr
or
mov
or
push
mov
jmp
out
inc
mov
or
clc
enter
iret
ds
push
inc
adc
mov
add
call
pop
sbb
xchg
add
fist
xlat
in
xchg
gs
in
(bad)
adc
repz
mov
shl
mov
scas
jnp
out
idiv
retf
push
loop
sar
mov
inc
or
and
sbb
adc
inc
dec
cmp
push
mov
mov
cmp
mov
test
loope
not
lock
cmps
mov
rcr
shl
aad
fcomp
cld
mov
loop
push
sahf
push
sub
pop
or
in
lods
xor
cmps
jl
jl
ror
ss
stos
push
xchg
in
(bad)
in
(bad)
sbb
jbe
das
xchg
retf
(bad)
mov
cmps
loope
xchg
push
jp
xchg
and
nop
int
call
sub
cld
icebp
mov
jmp
nop
ins
push
jl
pop
bound
std
xchg
out
fdiv
stos
test
inc
mov
dec
loop
push
adc
xchg
imul
xor
sub
add
cld
mov
repz
jg
(bad)
mov
pushf
push
xchg
aas
mov
and
test
mov
addr16
arpl
xchg
mov
test
pop
fiadd
(bad)
jae
js
retf
mov
sub
xlat
in
(bad)
sub
and
fucomi
pushf
pop
jo
movs
mov
push
test
out
mov
ins
cmp
in
aam
inc
and
repnz
add
mov
pop
xlat
jg
adc
gs
mov
out
lods
add
movs
and
cmp
inc
mov
cs
jnp
cmp
fs
fwait
and
lock
jno
int
and
(bad)
and
add
inc
jle
add
mov
pop
xchg
stos
and
mov
mov
pop
js
push
shl
mov
mov
jp
in
pushf
inc
sar
or
xor
push
fimul
ror
inc
jae
jle
xor
adc
aam
xor
mov
or
js
add
cmc
sbb
out
mov
jb
into
hlt
outs
or
or
(bad)
jl
jbe
repz
test
push
mov
je
mov
int
inc
sbb
call
add
jmp
cmp
sti
adc
mov
xor
jp
xchg
xchg
cmp
daa
jns
les
mov
jno
cmps
mov
mov
jns
mov
push
mov
adc
loopne
adc
pushf
cmps
rcl
mov
in
xchg
sbb
aad
sub
ret
sbb
in
jmp
jno
pop
aad
test
pop
sahf
fstp
pop
jl
jle
mov
xchg
mov
xor
add
(bad)
adc
shr
jmp
dec
push
cwde
pop
jo
jle
xor
jmp
add
imul
push
jnp
mov
pusha
mov
jno
lock
dec
test
sbb
popa
int
inc
les
dec
sub
das
in
(bad)
adc
mov
lds
jle
inc
dec
lock
add
(bad)
sub
jge
push
int3
dec
jns
aam
and
retf
sub
loopne
add
jmp
mov
pop
sub
jb
mov
pop
mov
xor
jle
test
add
lds
mul
mov
cdq
dec
and
push
es
adc
push
dec
jle
std
sub
or
add
(bad)
or
ins
ror
jmp
jne
pop
ret
out
push
sub
sub
push
repz
mov
push
repz
mov
and
sbb
std
loope
xchg
push
mov
pop
pop
retf
and
adc
es
outs
mov
adc
cmp
xchg
(bad)
sbb
sbb
cld
mov
fisttp
ins
in
inc
mov
and
jo
mov
ds
jge
sub
inc
pop
cli
ret
jp
(bad)
inc
or
push
dec
sub
js
mov
push
repnz
outs
stos
arpl
ds
iret
mov
nop
sbb
cs
adc
pushf
and
cwde
enter
out
pop
mov
stos
xor
sbb
dec
cs
imul
push
push
lods
hlt
push
fldenv
mov
pop
jb
loopne
mov
or
mov
scas
movs
jp
push
(bad)
sub
mov
inc
cmp
adc
retf
rcl
cli
in
mov
cwde
movs
outs
ret
adc
add
pop
(bad)
or
shl
imul
mov
cdq
sbb
dec
pusha
push
stos
ins
in
(bad)
shl
mov
xor
sbb
mov
jno
pop
ror
daa
arpl
push
scas
fmul
out
loop
sbb
mov
in
mov
mov
xor
ss
inc
push
mov
or
xor
cmps
push
push
into
ret
xor
jns
in
js
mov
jecxz
ja
xchg
or
xchg
retf
mov
stc
mov
outs
test
lods
push
xor
dec
inc
fldenv
(bad)
add
dec
fsubr
int
aas
call
retf
fadd
xor
(bad)
out
daa
or
xchg
inc
(bad)
aad
dec
and
inc
ss
pop
(bad)
jmp
pushf
ss
mov
cmps
push
in
cmp
in
sub
mov
lods
push
enter
int3
and
add
sahf
mov
and
rcr
sbb
add
push
ret
cmps
ds
or
pop
call
stc
or
aas
cmp
ss
add
inc
cmps
outs
push
fild
scas
push
jae
mov
data16
mov
repnz
(bad)
leave
jbe
es
mov
test
sub
fstp
cwde
cmps
ins
std
js
outs
jl
call
imul
lock
popf
je
xor
pop
sub
mov
cdq
add
cmps
outs
pop
test
xchg
es
test
fcmovb
(bad)
lock
fidivr
(bad)
adc
in
mov
pop
das
shl
pop
mov
inc
mov
mov
push
call
inc
test
jns
push
cmps
sub
cwde
cli
(bad)
cwde
xchg
jnp
sar
test
enter
adc
ret
dec
fcomp
pop
sti
outs
mov
scas
xchg
sub
sbb
ss
int
pop
mov
sbb
mov
fistp
in
fisub
iret
xchg
fiadd
stos
mov
dec
jmp
imul
add
inc
cmp
push
(bad)
sahf
cmps
pushf
dec
int
out
mov
retfw
pop
xor
les
mov
adc
dec
mov
mov
inc
dec
(bad)
loopne
pusha
cmp
scas
xchg
das
icebp
xchg
cmc
jne
adc
cmps
mov
(bad)
stos
cmp
push
je
add
js
add
aad
mov
nop
xchg
call
fldl2e
mov
mov
cmp
inc
mov
cld
arpl
les
loopne
cmp
xchg
inc
ss
data16
repz
fsubr
aaa
adc
ins
scas
(bad)
shl
mov
popa
mov
std
cmp
adc
test
cmp
push
mov
push
dec
adc
cld
xchg
mov
(bad)
inc
xor
pusha
cmp
leave
cmc
(bad)
sub
ins
sbb
sbb
cwde
leave
mov
add
retf
mul
js
ins
pop
mov
or
and
adc
pop
and
test
lods
inc
mov
sbb
pop
inc
inc
repz
repz
mov
lea
and
mov
popf
pop
mov
adc
repnz
mov
in
inc
pop
call
xchg
(bad)
cmc
in
jb
ins
and
arpl
mov
dec
sub
mov
bnd
xor
cmp
popf
or
cmp
cmps
imul
ds
aam
test
inc
inc
jle
imul
bound
mov
sub
mov
sub
test
sbb
lea
stos
stos
call
icebp
imul
jge
xor
outs
add
cmp
int
test
sub
in
mov
cld
inc
cmp
(bad)
popa
out
outs
rcr
jle
ss
xor
mov
dec
pop
or
xchg
repz
and
mov
cs
and
cmp
outs
imul
sbb
lods
ins
jmp
arpl
arpl
lods
dec
mov
outs
or
es
add
xchg
sub
mov
jle
push
leave
mov
and
mov
hlt
jmp
pop
mov
inc
sub
mov
xchg
jmp
imul
xchg
sub
push
sbb
dec
adc
imul
sub
scas
sbb
mov
(bad)
jnp
xor
loopne
xchg
fisubr
inc
pop
pushf
in
fcom
into
mov
aaa
popa
ficomp
pop
inc
loop
cwde
xchg
nop
loop
ficomp
out
je
add
pop
(bad)
push
adc
pop
add
je
adc
dec
adc
std
stc
je
xchg
ins
push
or
stc
je
pop
inc
arpl
jno
sub
mov
pop
test
stos
fidiv
ficomp
push
or
sub
xor
and
call
mov
cmp
lahf
loope
push
mov
cmp
adc
nop
sar
lods
jb
shr
out
je
fild
pop
xor
push
aad
mov
outs
push
addr16
mov
sub
lods
iret
mov
jge
and
adc
inc
jle
add
or
jne
(bad)
lock
lea
xchg
aad
sub
jmp
fstp
iret
sti
push
inc
icebp
mov
fs
daa
repnz
sub
cdq
dec
mov
out
inc
pop
test
jmp
(bad)
out
outs
sub
fsubr
jne
cmp
scas
cmp
adc
and
cli
(bad)
cli
cmp
cmp
data16
jne
inc
lods
cmps
jle
shr
loop
in
fdivr
pop
or
cwde
dec
lea
xor
and
icebp
psrlq
adc
dec
fmul
ret
sub
inc
mov
scas
out
mov
in
sbb
inc
sub
jnp
icebp
es
jo
je
sub
dec
repz
dec
mov
push
neg
fcomi
scas
or
dec
jae
js
push
sub
lahf
jg
stc
out
jg
stc
out
xor
add
mov
xor
sbb
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
aam
inc
xchg
or
jmp
je
or
fstp
fisttp
lea
xor
mov
inc
sbb
adc
iret
jge
lahf
mov
sub
add
cmp
xchg
cld
lea
inc
xchg
push
jle
push
cmps
ja
adc
push
(bad)
mov
xchg
fcmovnb
inc
cmc
ss
repnz
lds
mov
ss
iret
pop
jb
fdivr
fucomp
cwde
div
push
test
sub
enter
mov
sbb
mov
cmp
mov
neg
pushf
hlt
in
mov
out
inc
outs
or
in
out
sub
jns
cli
iret
mov
inc
data16
mov
mov
pop
pop
nop
xor
mov
cmp
stc
test
imul
inc
adc
or
xchg
dec
in
sub
sbb
push
adc
jecxz
lock
mov
sbb
aad
adc
cld
leave
mov
mov
xor
cdq
pop
sub
jno
bound
stc
or
push
cmps
sbb
imul
jecxz
and
fmul
cwde
inc
test
xor
iret
mov
in
or
hlt
mov
fdivr
test
out
jb
cmp
sbb
sub
or
sbb
lods
or
(bad)
fdiv
aas
push
popf
loope
inc
adc
jg
fcom
nop
fisub
xchg
fs
push
ds
pop
jns
inc
jo
fs
dec
test
jb
cli
aam
inc
and
push
shl
xor
addr16
fbld
inc
out
and
and
cmc
xor
jae
and
aas
mov
dec
scas
sub
jmp
dec
test
mov
aaa
movs
idiv
repz
sti
cld
adc
dec
jnp
mov
rol
fdiv
sub
ret
mov
daa
and
les
stc
and
stc
xlat
(bad)
sbb
inc
mov
pushf
mov
and
test
stos
mov
add
cmp
jg
inc
pop
and
fdiv
or
inc
ss
fld
dec
call
adc
loop
inc
mov
mov
cmp
mov
nop
xchg
out
fistp
and
test
push
pop
int
or
stos
rcl
lods
adc
arpl
sub
popf
in
cwde
pop
jmp
and
stc
dec
push
sbb
inc
xchg
leave
mov
gs
cmp
popa
inc
sub
cli
xor
outs
rcl
pop
add
mov
jl
imul
inc
lahf
pop
shl
add
push
cmc
leave
pop
push
sub
jo
gs
ins
inc
gs
rcr
jne
cmps
xor
sar
jge
loop
std
in
xchg
pop
(bad)
sbb
dec
jmp
dec
push
add
test
imul
pop
rol
scas
test
sub
in
xor
mov
js
pop
cmp
pusha
mov
sub
fnsave
cs
mov
dec
xlat
ds
fmul
hlt
test
or
and
pop
adc
mov
sub
lds
dec
hlt
dec
std
int
retf
or
movs
jecxz
(bad)
push
int
and
push
not
xchg
push
push
sub
arpl
mov
cmp
bound
test
cmp
and
cli
jge
and
push
add
mov
stos
push
leave
neg
ja
inc
(bad)
mov
or
fmul
dec
inc
loopne
sbb
xchg
shl
js
stos
jne
in
mov
rol
ret
adc
mov
xchg
adc
popf
ins
push
jle
sbb
or
xchg
xor
lods
(bad)
(bad)
xchg
pop
loopne
nop
es
(bad)
cdq
or
outs
dec
mov
pushf
cmps
scas
inc
jnp
or
jp
test
out
bound
ja
sti
cmp
addr16
xor
sbb
jp
fild
push
pop
out
fnsave
aam
xchg
sbb
retf
jl
jnp
mov
push
aad
ds
xor
jae
das
push
and
jo
imul
pop
and
cs
sahf
ins
fwait
mov
in
mov
push
pusha
fwait
xchg
stos
aaa
add
int
mov
data16
jno
cmp
dec
sahf
mov
cld
cs
sahf
push
dec
adc
outs
cmps
js
mov
in
lds
mov
mov
fst
stos
push
or
jp
sbb
adc
or
push
in
stc
in
jns
in
cdq
int3
mov
test
ja
repnz
sub
or
jo
(bad)
or
sub
xchg
and
cs
cs
or
and
or
add
test
add
(bad)
push
mov
ret
clc
outs
scas
mov
shl
fcom
cmp
inc
or
and
movs
push
test
xlat
or
mov
push
cmps
push
cmp
and
mov
mov
scas
mov
jecxz
cmp
ss
pop
cmp
sub
fwait
sbb
aas
and
mov
dec
out
lods
ja
cmp
jmp
jmp
outs
jnp
mov
cmp
cld
mov
dec
adc
xor
retf
xchg
fistp
xor
repnz
sbb
jle
adc
cmc
mov
push
mov
rol
inc
fimul
lahf
int3
dec
ins
loope
cmp
push
fld
pop
jmp
cs
shl
dec
mov
call
jae
es
jg
or
aad
movs
das
imul
jno
jns
mov
addr16
outs
xchg
dec
dec
xor
fdivr
or
fs
inc
test
test
js
sbb
mov
push
sub
or
(bad)
dec
jo
popa
sub
scas
mov
dec
(bad)
push
clc
mov
cdq
cwde
jp
inc
outs
jle
mov
(bad)
dec
arpl
xchg
mov
call
jne
adc
scas
lds
push
jg
daa
inc
aas
int3
fcmovb
scas
aad
cmp
dec
das
or
inc
lahf
or
imul
push
mov
(bad)
mov
mov
cwde
je
add
add
push
mov
les
adc
mov
xchg
push
(bad)
mov
loop
jbe
pop
pop
sar
and
and
pop
sub
mov
mov
not
lock
and
ja
inc
sar
mov
out
push
push
icebp
movs
bound
call
stos
shr
in
or
sti
fcomp
fisttp
adc
mov
jge
out
xchg
out
lock
(bad)
xchg
xor
repnz
pusha
or
ror
jmp
in
aam
sub
stos
stc
leave
inc
jae
xor
lahf
push
adc
not
fwait
sbb
ficom
clc
es
idiv
mov
cwde
mov
xchg
push
xchg
(bad)
cvtpi2ps
dec
daa
repz
daa
in
data16
neg
mov
ja
fdivr
adc
jne
outs
sub
(bad)
ins
je
je
in
inc
ins
ss
sbb
lods
push
pop
es
or
inc
sub
cmp
fisttp
scas
repz
adc
int
mov
rcl
dec
sub
xchg
push
js
out
sub
ror
cmovno
loope
or
jg
aaa
jmp
gs
daa
in
push
and
scas
mov
in
xor
das
sbb
adc
sbb
(bad)
xchg
mov
retf
lea
mov
cli
push
sub
push
or
push
popf
jmp
pop
sub
mov
pop
push
clc
mov
leave
mov
and
sar
popf
cmp
adc
movs
sbb
ins
add
push
jne
mov
test
jmp
xchg
fst
jg
(bad)
scas
fldcw
pop
mov
jb
lods
arpl
icebp
stos
xor
or
jle
add
xchg
jmp
dec
inc
mov
xchg
stc
je
loope
fild
adc
sahf
sub
in
sbb
inc
xchg
sbb
xchg
dec
mov
mov
sub
cmc
(bad)
pop
ins
jnp
add
mov
scas
inc
cs
sar
jns
repz
pop
daa
xor
push
iret
ret
hlt
mov
jnp
xor
and
mov
pop
xchg
xchg
mov
les
loopne
dec
mov
inc
ins
scas
mov
imul
stos
push
icebp
lock
xchg
imul
test
in
mov
jl
mov
lods
jnp
loop
adc
xor
call
ins
mov
mov
push
pop
xchg
aad
in
mov
pusha
and
in
inc
(bad)
push
test
adc
mov
es
fbld
pop
sub
and
mov
(bad)
mov
push
sbb
clc
dec
shr
sahf
imul
fsub
es
mov
stos
out
imul
pop
mov
jns
test
lods
ins
push
(bad)
in
xor
push
xchg
retf
xor
adc
out
(bad)
aad
imul
in
or
retf
or
call
mov
(bad)
call
ss
ret
pusha
cdq
cli
int3
js
or
add
dec
int
mov
jo
retf
retf
sbb
(bad)
push
(bad)
jne
call
xor
lds
jg
cli
out
fimul
jecxz
sub
fsubr
adc
adc
jecxz
push
jmp
inc
jg
shr
sbb
adc
jbe
mov
rol
mov
and
inc
shl
out
(bad)
ret
jecxz
popa
pop
jne
jmp
xlat
add
pop
add
and
mov
ja
pop
into
retf
cli
test
or
pop
mov
clc
push
jmp
scas
xchg
sbb
xor
sbb
leave
cli
xchg
and
test
je
(bad)
int
inc
jno
xchg
cmc
fs
hlt
test
and
addr16
mov
sbb
xchg
loopne
dec
pop
shr
lock
cmps
inc
mov
test
or
mov
inc
push
sub
dec
xchg
fbld
(bad)
mov
cmc
lea
pop
outs
dec
xor
mov
data16
(bad)
lods
lds
test
mov
imul
xor
adc
sub
lock
pop
sub
dec
leave
fsubr
cmp
movs
lods
imul
inc
cld
cs
cld
mov
jno
cwde
push
mov
mov
ret
lods
xor
addr16
outs
into
(bad)
dec
pop
cs
sub
fwait
(bad)
(bad)
pop
data16
fild
aaa
push
jne
scas
cld
arpl
sub
call
push
iret
and
(bad)
outs
sbb
mov
repnz
mov
popf
rcr
jp
jo
pusha
int
je
ins
fldcw
mov
inc
stos
jnp
jmp
not
jp
fsub
mov
and
scas
dec
pusha
push
popf
mov
jle
mov
sbb
not
sbb
add
jl
mov
aaa
cmps
fdivp
inc
mov
sub
dec
movs
lods
inc
xchg
adc
adc
or
rol
adc
fldcw
adc
pushf
loopne
ja
cmc
scas
add
or
or
cmp
stos
fcom
imul
dec
imul
cmp
mov
dec
mov
dec
popf
movs
dec
ret
ror
aad
jge
sbb
mov
repz
xchg
rol
jp
mov
sub
push
loopne
jno
pop
jg
jp
pop
nop
mov
xor
(bad)
jmp
jmp
shl
pop
stc
ds
(bad)
push
jle
imul
scas
inc
inc
inc
(bad)
ret
cli
pop
(bad)
loop
xchg
adc
cwde
das
add
inc
mov
adc
xlat
mov
ds
aas
sbb
jno
ror
enter
adc
lock
xor
and
sti
pop
mov
jns
or
pop
(bad)
std
test
sub
or
cwde
ja
inc
sahf
jl
ds
or
sbb
test
(bad)
or
dec
data16
call
xchg
std
sub
arpl
movs
mov
out
pop
mov
cmp
icebp
mov
dec
jo
sub
jb
jp
mov
movs
mov
push
cmc
mov
xchg
adc
mov
inc
mov
cmp
xor
jns
int3
xlat
ja
adc
loop
arpl
pushf
test
inc
xchg
repnz
daa
push
stos
mov
sbb
inc
loope
aam
rcr
sbb
bnd
rcr
fiadd
lahf
xchg
add
mov
into
jp
(bad)
scas
cmps
mul
xchg
and
test
or
cdq
mov
xlat
js
test
fiadd
repz
add
sub
and
and
or
(bad)
movs
jb
stos
es
mov
jecxz
(bad)
repnz
jns
rcr
retf
mov
retf
and
movs
(bad)
addr16
jb
jmp
xchg
popf
movs
mov
out
xor
mov
adc
xchg
test
enter
mov
stos
outs
mov
(bad)
stc
sub
mov
jno
test
ror
arpl
and
ret
test
push
in
mov
into
jmp
enter
(bad)
mov
rcpps
(bad)
sar
mov
add
jge
loop
mov
iret
rcr
iret
xchg
sbb
xchg
mov
std
and
and
leave
outs
push
mov
add
mov
je
add
push
and
xchg
pop
jae
aaa
call
xor
jge
outs
cmp
add
jno
shl
call
mov
movs
jg
movs
cmp
cmps
loope
enter
std
fwait
call
ret
popa
(bad)
and
push
stc
imul
ss
dec
in
mov
ins
in
jae
push
fstp
sub
popa
sub
retf
scas
pop
sub
(bad)
push
movhlps
imul
push
inc
cli
cld
or
mov
lahf
and
push
mov
in
pop
ins
jne
pop
pop
sbb
xchg
cmps
loope
cmc
xchg
xchg
data16
(bad)
addr16
jge
shl
pop
retw
xchg
xchg
and
ja
push
icebp
aam
ficom
imul
mov
fst
xchg
and
or
jbe
jb
mov
xor
push
xor
inc
xor
mov
imul
xor
movs
data16
cmovle
fisttp
lahf
lods
and
in
push
sub
mov
xor
push
adc
popa
in
lock
or
and
repnz
xchg
sub
aam
mov
add
jg
pushf
push
mov
push
cld
push
sar
(bad)
xchg
outs
pop
mov
imul
outs
inc
popf
sti
fimul
mov
mov
pop
ss
cmp
adc
outs
jmp
and
mov
in
inc
xchg
test
fsqrt
jmp
dec
icebp
fldcw
out
pop
fs
mov
imul
daa
ret
(bad)
out
mov
dec
mov
inc
sub
fnstsw
xchg
sahf
pop
call
ret
ss
fistp
loopne
jo
aam
add
adc
mov
pop
mov
shr
daa
sub
xchg
mov
cmps
stos
jo
lahf
xlat
fild
dec
mov
sbb
cmps
pop
call
cwde
mov
jge
lods
call
mov
lock
stos
inc
pop
and
movs
mov
push
cmps
shr
or
mov
adc
jg
mov
xor
ret
sar
xchg
fst
dec
xchg
mov
dec
sar
mov
loope
pop
(bad)
(bad)
test
(bad)
daa
xor
adc
cmp
cs
stc
outs
mov
aas
mov
mov
in
or
arpl
cmps
sub
inc
pop
jle
test
jae
push
sbb
jmp
mov
inc
xor
mov
leave
jb
jmp
lods
cmp
test
popf
xor
vmovdqa
into
sbb
pop
jo
scas
add
adc
xor
cli
pop
add
aam
adc
shr
loop
inc
adc
aas
(bad)
cld
repz
aas
(bad)
cld
mov
add
test
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
enter
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
ror
nop
inc
jb
(bad)
out
out
xchg
push
dec
jmp
inc
jmp
hlt
call
nop
outs
adc
shl
in
push
add
mov
stos
jmp
scas
xlat
fnsave
cmp
dec
movs
cli
mov
inc
dec
push
rol
push
push
mov
jns
imul
or
nop
inc
and
aaa
mov
or
push
xor
and
mov
imul
push
or
push
movs
stos
sbb
xor
inc
or
push
call
jl
jae
enter
xor
mov
jmp
aas
ds
mov
aaa
push
pop
mov
xchg
inc
add
les
dec
pusha
repz
mov
aaa
stc
mov
popa
or
mov
pop
jo
push
and
push
call
pop
ret
idiv
enter
cmps
jnp
call
and
imul
test
and
xchg
cs
test
arpl
cmovae
retf
test
enter
fsub
xlat
cmp
shl
inc
add
mov
adc
nop
jb
adc
inc
sub
fwait
xor
das
repz
and
mov
ss
out
dec
mov
jmp
push
leave
jns
bound
push
(bad)
fidivr
and
repnz
pushf
jp
xor
aad
and
in
xchg
mov
lods
xor
xchg
stos
pop
shl
imul
stos
arpl
dec
(bad)
mov
cwde
fwait
xor
mov
in
outs
and
xchg
pusha
lahf
sahf
cld
push
xchg
sbb
in
call
imul
cs
dec
shl
cmp
test
inc
stos
cmp
in
cmps
fwait
inc
xlat
or
ja
pop
xor
push
ret
mov
int
out
push
add
stos
repnz
cmps
ficom
pop
fsubr
mov
loope
push
lea
ja
mov
into
div
test
xor
pop
or
js
mov
xchg
dec
mov
mov
into
adc
fcmovnu
jp
sub
sbb
add
fcom
add
adc
xchg
sub
mov
(bad)
test
pop
or
sub
enter
ss
call
rcr
mov
push
mov
ret
pop
(bad)
push
cmp
ss
inc
fcom
mov
fisub
xchg
fwait
out
jge
idiv
int3
shr
xlat
and
add
or
iret
ret
sbb
int3
xor
sahf
out
cmps
test
shr
bound
aam
xchg
push
dec
jl
es
aas
std
xchg
js
jle
cmp
mov
fistp
pusha
adc
mov
loop
pop
mov
mov
pop
pusha
pop
je
fsubr
nop
in
retf
iret
mov
dec
aaa
push
test
nop
cs
jo
or
pop
(bad)
leave
mov
xor
shr
outs
jle
push
movs
imul
jo
ficomp
pop
mov
bound
dec
and
jo
daa
push
imul
in
add
in
in
in
pop
adc
adc
inc
xor
mov
pop
cmps
rcl
movs
popa
imul
arpl
fld
add
dec
fld
dec
add
adc
lods
clc
push
fistp
xchg
scas
or
test
(bad)
mov
aas
mov
cmps
dec
sub
and
mov
loop
test
jmp
stos
not
mov
inc
mov
cli
sub
shl
cli
cmp
xchg
mov
loope
dec
xchg
inc
add
retf
adc
into
push
loope
fnstcw
xlat
mov
inc
rol
ja
cmc
cwde
sub
cmp
cmp
xor
inc
and
add
les
xchg
ins
jle
mov
out
mov
in
jmp
hlt
iret
retf
xchg
cmp
bound
test
dec
push
cmp
adc
pop
cs
out
xchg
sahf
fsubr
inc
adc
lods
test
in
call
sub
and
mov
mov
ror
ror
mov
movs
push
(bad)
sti
add
push
adc
jo
sub
mov
into
and
jg
jmp
inc
pop
cmp
(bad)
popf
fs
(bad)
dec
aad
std
ja
pop
jg
pop
mov
aam
std
sti
cmp
imul
and
cli
stos
jmp
sahf
sbb
mov
int
lods
sbb
aaa
repz
dec
popf
mov
jmp
call
pop
pop
scas
push
fcomp
jg
cmp
stos
xlat
or
xor
add
ret
mov
jmp
call
popf
(bad)
lds
mov
xchg
cmp
or
xor
sar
jmp
jecxz
gs
dec
icebp
fld
imul
mov
or
es
ret
ret
notrack
sub
sahf
ja
adc
scas
addr16
xor
pop
dec
mov
pop
push
dec
les
addr16
pop
icebp
jb
rol
inc
arpl
xor
sub
cmps
sub
fadd
xlat
test
or
or
mov
pop
xchg
(bad)
hlt
outs
inc
icebp
inc
sub
add
inc
pushf
pusha
mov
loopne
or
xchg
jmp
xchg
in
stos
aas
inc
xchg
push
mov
xchg
jae
(bad)
mov
push
in
xor
xor
and
or
mov
or
mov
xchg
mov
cmp
rcl
and
add
adc
mov
cmc
sub
div
xor
jne
pop
lock
mov
pop
and
inc
fcomp
fs
dec
or
sub
cmps
and
out
daa
sbb
mov
jp
jecxz
mov
jb
sub
xchg
xchg
sahf
jae
ret
rcr
adc
jo
pop
mov
inc
ds
pop
push
cmps
ror
mov
jo
xchg
rcl
ins
in
pop
cmp
xor
jmp
sub
xchg
scas
cmps
push
(bad)
push
cmp
sub
mov
ret
jb
mov
pop
dec
out
les
shr
dec
pusha
jge
outs
loopne
bound
rcl
lahf
test
out
xor
jg
dec
mov
dec
dec
idiv
aaa
and
data16
sbb
out
aaa
dec
jge
dec
gs
iret
pop
dec
imul
(bad)
repnz
xchg
bound
or
shl
pop
jg
cmp
call
dec
fwait
xor
stos
jmp
xchg
or
nop
and
xchg
bound
sbb
cmp
jns
(bad)
push
inc
add
xchg
pop
cmps
jo
jnp
ret
mov
mov
dec
inc
aas
test
sub
jnp
in
movs
cmp
cmp
sub
mov
xor
dec
or
jmp
mov
ror
mov
xchg
daa
(bad)
jg
lods
push
cmps
add
das
ja
xchg
lea
fisttp
sub
cmp
push
dec
cmp
xlat
adc
mov
jns
js
jl
enter
adc
shr
out
mov
je
or
xor
lods
jns
push
addr16
dec
or
rcl
sub
dec
xchg
aad
icebp
pusha
jge
(bad)
adc
fwait
or
retf
repnz
fucom
xlat
mov
adc
rcl
int3
adc
sbb
(bad)
imul
sbb
jns
xchg
std
mov
sbb
out
fidivr
sub
xor
neg
out
mov
push
dec
jg
xchg
imul
jge
(bad)
je
bound
mov
in
pop
frstor
dec
in
mov
add
adc
pop
xor
data16
(bad)
cmps
outs
cmp
add
repnz
jo
mov
fisttp
xchg
xchg
add
test
mov
xchg
adc
and
mov
mov
mov
js
(bad)
ja
xor
push
inc
mov
lods
sbb
or
popf
lea
inc
imul
sub
hlt
nop
jne
lods
xchg
ins
sti
push
test
sbb
test
jle
jo
cmps
xor
es
or
test
out
and
rcl
stos
cli
movs
sbb
fwait
lea
fisub
xchg
in
cmps
mov
in
sbb
into
in
faddp
xchg
mov
pop
jl
and
pop
stos
dec
xchg
loop
inc
jb
loopne
je
or
jle
xchg
shr
stc
mov
or
add
lahf
and
cmp
adc
mov
sti
mov
mov
dec
inc
pop
sub
les
ficom
ds
cwde
loope
xlat
rdtsc
push
fmulp
mov
lahf
pop
sub
loop
popa
adc
data16
adc
out
outs
mov
rcl
jmp
mov
out
gs
dec
dec
in
mov
stc
clc
std
stos
jmp
stos
mov
sub
ja
ror
jge
mov
scas
fstp
mov
rcr
movs
pop
adc
dec
push
dec
mov
inc
sbb
scas
out
pop
repnz
imul
adc
pop
dec
out
sub
arpl
inc
ficom
xor
jp
dec
std
xchg
lods
call
imul
fist
aam
jle
pop
xchg
add
fmul
pushf
and
push
cmp
sbb
add
xchg
add
xchg
aaa
pop
jp
bound
cmc
hlt
imul
or
pop
mov
imul
adc
cmc
cs
ret
ficom
lock
rcr
stc
jl
cmp
pop
xchg
or
test
cld
push
adc
xchg
jl
lds
jg
jo
out
outs
movs
or
ret
xor
and
ret
jp
(bad)
shr
ja
std
jae
cdq
cmp
add
and
mov
xor
xor
jb
fs
jge
dec
xor
push
mov
pop
add
dec
xchg
or
fwait
addr16
mov
(bad)
sbb
pop
cmps
ins
add
into
mov
and
movs
add
jmp
test
sub
mov
into
dec
pop
sar
push
repz
sub
outs
push
xchg
xor
popa
(bad)
pop
jo
sbb
push
repz
push
div
imul
sub
fs
inc
or
(bad)
dec
mov
pushf
fst
out
pop
xor
mov
lahf
jbe
ds
mov
cmps
in
sbb
mulps
std
(bad)
test
std
loope
sti
into
jge
fild
push
lea
mov
je
mov
rcr
cld
loope
cmp
test
arpl
jb
push
out
mov
les
dec
pop
dec
and
fwait
xor
test
inc
lods
mov
ins
adc
cli
aad
jo
cmp
mov
xchg
xor
xchg
inc
xchg
repnz
jecxz
pop
fistp
or
fisttp
jne
adc
stos
cmp
inc
or
inc
or
test
fndisi(8087
pusha
sbb
loop
mov
push
mov
mov
(bad)
repz
jecxz
push
lods
mov
push
test
sub
jo
or
das
sbb
les
cmp
sahf
imul
pop
mov
call
xchg
or
addr16
jmp
cmp
in
loopne
ss
repnz
daa
jae
jns
sbb
lods
fild
adc
es
imul
push
mov
push
fs
push
sub
aam
aas
mov
push
arpl
aas
xchg
sbb
pop
sti
jae
mov
pop
stc
sub
sbb
mov
mov
fdiv
push
xchg
push
pop
dec
and
sbb
lock
cmp
dec
adc
test
std
xor
clc
and
stc
dec
or
add
pop
pushf
adc
gs
sub
sub
dec
xchg
and
jmp
push
xchg
mov
jno
aas
fisubr
and
ret
jno
shr
inc
ret
out
sbb
sbb
mov
push
and
es
jp
in
sbb
js
push
(bad)
je
sbb
ins
jle
out
dec
out
xchg
cmp
lods
or
test
stos
sub
and
jnp
or
mov
or
lahf
test
fistp
pop
(bad)
adc
fcmovb
fs
out
cmp
cmp
pop
cli
jo
cmps
pop
icebp
push
dec
cmp
(bad)
cmps
push
icebp
mov
nop
push
push
push
(bad)
retf
fldcw
and
call
jnp
push
xor
fwait
cmc
out
mov
dec
int
and
jl
sahf
loope
sbb
jge
dec
sub
adc
or
dec
mov
aaa
sti
mov
jb
fdivrp
je
jmp
popf
fisub
fcomp
adc
fnsave
scas
pop
mov
ret
jmp
icebp
or
scas
sahf
(bad)
iret
adc
mov
cmc
xor
fsub
add
not
pop
mov
repnz
jbe
jl
ficom
clc
sub
ror
xchg
sti
jnp
pop
outs
mov
and
imul
push
retf
pop
nop
fisub
add
mov
or
sub
(bad)
pop
push
jg
push
movs
mov
xor
and
jnp
dec
xchg
sti
ins
sub
pop
test
xor
mov
dec
push
leave
out
add
fstp
ds
pop
cmp
ins
push
loope
push
jno
repz
in
js
mov
(bad)
mul
aam
int3
inc
mov
mov
cmp
arpl
and
rol
dec
ins
scas
xchg
stos
mov
jns
cmp
mov
in
ds
lea
adc
(bad)
out
dec
dec
aam
and
jno
in
outs
push
mov
movs
and
std
movs
sbb
jle
lock
lods
dec
dec
sub
pop
push
xor
rcr
loopne
sahf
mov
jl
stos
mov
cmps
pop
inc
out
or
jg
imul
mov
mov
jnp
inc
out
sub
jo
popf
push
sbb
sub
mov
ss
cwde
push
sub
fsubr
outs
jne
mov
out
xor
adc
imul
jge
inc
iret
inc
das
inc
imul
aas
inc
into
push
out
add
retf
mov
mov
xchg
cmovg
sub
addr16
lahf
or
int3
dec
sbb
frstor
mov
jmp
arpl
xlat
call
out
dec
mov
jg
dec
xor
inc
xchg
lahf
push
mov
push
mov
shr
out
lods
mov
bound
cmp
jne
mov
dec
fmul
or
jl
aaa
xor
outs
cmps
neg
arpl
add
out
push
jns
test
pop
daa
sub
dec
dec
rcl
rcr
adc
scas
aam
adc
xor
sub
xor
mov
lds
cmps
int3
mov
ins
cmp
scas
ret
out
add
push
jmp
imul
lahf
inc
enter
out
mov
ss
das
in
pop
mov
add
dec
scas
outs
cmp
movs
xchg
rcr
inc
xchg
jg
popa
retf
fs
ret
xor
fst
call
icebp
sti
inc
sbb
jecxz
mov
jne
clc
pop
out
adc
dec
mov
data16
xor
adc
test
mov
out
and
add
mov
gs
pop
and
cmp
lods
xor
es
inc
mov
inc
push
mov
pop
mov
cmp
gs
add
jmp
inc
sahf
icebp
imul
mov
es
das
ss
dec
push
mov
inc
rcr
shl
aam
pop
cwde
adc
jecxz
mov
(bad)
retf
out
mov
addr16
mov
xchg
jecxz
push
inc
clc
sbb
iret
fld
xor
pop
retf
jg
add
mov
mov
mov
or
mov
je
test
retf
mov
mov
aad
lods
adc
xor
jb
and
aas
(bad)
cld
repz
aas
(bad)
cld
repz
push
idiv
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
xlat
add
add
out
je
out
outs
cmps
sti
pushf
out
mov
(bad)
dec
dec
sbb
cmp
jae
outs
cwde
cmp
cwde
stc
aas
out
jecxz
jge
lds
add
jno
mov
iret
aam
jnp
scas
dec
xchg
mov
movs
mov
aam
xchg
xchg
mov
fisub
push
lds
out
sbb
mov
(bad)
jmp
inc
or
sub
mov
cs
mov
mov
pop
xchg
add
add
xlat
idiv
mov
cmp
lock
and
mov
inc
or
pushf
cdq
mov
adc
mov
pop
loope
and
add
pop
push
sbb
repz
cmp
mov
sbb
addr16
add
neg
ror
mov
push
pop
out
repnz
idiv
(bad)
arpl
test
loop
stos
mov
sub
sbb
add
das
fldcw
dec
repz
xor
jp
std
add
dec
fiadd
std
or
cmps
scas
or
repnz
lock
mov
(bad)
adc
xchg
ror
je
(bad)
mov
cmc
ins
hlt
lods
cmps
test
inc
call
loope
adc
inc
in
lods
add
or
stc
ret
out
cmc
(bad)
fcomp
fwait
mov
daa
sbb
dec
scas
mov
or
dec
adc
or
dec
mov
shr
fist
mov
pop
xchg
pushf
and
(bad)
sbb
mov
adc
imul
add
jmp
outs
cmp
dec
std
cli
or
cmc
xor
xor
outs
repz
xchg
and
in
adc
(bad)
ja
arpl
mov
int3
adc
cwde
cmp
(bad)
adc
cdq
jmp
add
movs
nop
dec
xor
ficomp
(bad)
(bad)
jl
enter
push
into
inc
outs
mov
mov
sub
pop
in
movs
inc
popf
jno
xchg
enter
in
pop
push
mov
outs
sbb
fimul
xchg
enter
je
jl
mov
leave
add
cmp
pop
mov
xor
loopne
jl
iret
sub
lds
dec
aad
or
cmp
xlat
rol
dec
sub
call
ret
cld
(bad)
movs
push
mov
stc
aad
add
pop
test
jg
xchg
inc
mov
movs
sahf
add
or
fsub
repnz
push
mov
data16
xor
adc
mov
pop
dec
mov
enter
push
cdq
fsubr
pop
adc
lods
push
pusha
xor
adc
inc
adc
cmp
addr16
or
retf
aas
or
ret
(bad)
jne
or
dec
push
inc
outs
(bad)
jmp
dec
std
sub
push
sub
mov
aad
jb
push
add
call
std
sbb
test
cmp
push
outs
push
fs
addr16
mov
sub
repz
dec
and
push
push
ins
mov
outs
xchg
sub
mov
xchg
jp
xchg
sahf
retf
sbb
movs
mov
inc
dec
lods
sub
xchg
push
cmp
je
lds
push
push
xchg
in
jg
inc
in
sub
sbb
jne
sahf
pop
rol
aaa
lock
xlat
dec
les
push
sub
retf
mov
out
out
pop
sbb
adc
out
sub
push
xor
push
mov
imul
xchg
mov
mov
out
(bad)
pop
jmp
(bad)
cmp
push
mov
and
jle
push
cli
xchg
dec
out
int3
xchg
add
retf
jecxz
js
mov
push
stos
shl
not
stc
jmp
inc
cli
push
adc
xor
aaa
mov
or
cmps
dec
cmp
rol
adc
inc
loop
inc
jp
icebp
xor
ds
jnp
jmp
or
mov
and
push
dec
mov
pop
xchg
ret
dec
jp
inc
(bad)
ins
lods
out
sbb
inc
hlt
mov
cdq
add
enter
mov
jecxz
sbb
lea
or
dec
nop
and
psubusw
int3
mov
in
clc
sar
sbb
loop
fidivr
push
or
or
into
cmp
mov
cmps
dec
stc
xchg
cmps
push
or
add
sub
jnp
out
pop
mov
sub
out
jb
xor
(bad)
loopne
pop
sar
jnp
mov
fadd
cmc
lods
mov
lea
std
dec
mov
pop
dec
gs
or
mov
pop
out
aam
fwait
mov
or
out
sbb
popf
test
js
adc
hlt
loopne
sbb
mov
pop
ins
push
pop
mov
shr
stc
mov
lods
sbb
sbb
sbb
test
add
add
mov
leave
(bad)
popa
mov
test
dec
out
jmp
movs
mov
push
call
retf
ds
into
or
outs
or
jecxz
sahf
das
mov
out
int
push
add
test
and
cs
mov
xchg
mov
mov
int
cwde
sub
(bad)
dec
mov
lods
fwait
and
inc
scas
xor
jne
clc
xchg
ja
inc
ja
(bad)
enter
add
test
pop
adc
out
pop
xor
mov
adc
mov
loope
adc
scas
mov
(bad)
xor
sub
mov
cmps
repnz
test
out
mov
loopne
dec
call
ds
fisub
rol
xchg
call
cmp
push
fld
inc
cld
cwde
pop
pop
imul
push
out
mov
imul
mov
cmps
out
dec
(bad)
shl
dec
push
loopne
push
mov
jae
lds
jg
jne
adc
(bad)
xor
or
cmp
push
mov
jns
scas
leave
push
out
push
mov
add
xchg
inc
ret
ins
adc
in
mov
push
inc
xor
pop
retf
movd
mov
cmp
adc
mov
in
adc
or
mov
or
xchg
cli
push
and
lea
das
addr16
idiv
(bad)
cli
outs
push
pop
cdq
repnz
enter
add
push
jmp
dec
pop
cmps
popf
dec
sub
mov
aad
das
clc
cs
and
mov
or
pop
ret
jne
mov
nop
or
sub
push
cmc
mov
daa
inc
inc
add
add
add
sub
sbb
fst
sbb
mov
pop
sar
fisubr
cmp
cli
mov
push
sbb
ror
mov
mov
cmp
dec
je
jp
fisub
inc
repz
jge
xchg
jp
inc
and
mov
cmp
jg
jb
mov
mov
lea
jmp
push
aam
sub
(bad)
jmp
scas
mov
lds
(bad)
aaa
lahf
es
leave
sbb
sbb
sub
sub
(bad)
icebp
cmps
ins
sub
or
(bad)
sbb
ror
mov
les
xchg
or
(bad)
fcmovb
sbb
lahf
mov
mov
pmulhw
inc
(bad)
push
sub
cmp
jns
adc
pop
add
jns
sti
es
loope
rcl
cmp
cld
ins
cmp
cmps
dec
xor
push
rcr
add
aad
test
test
ins
stos
push
mov
adc
leave
mov
xchg
jmp
jle
stos
push
xchg
loope
scas
in
scas
mov
or
das
in
imul
(bad)
mov
(bad)
test
xor
ja
pop
push
daa
sbb
vaddpd
mov
fiadd
cmp
or
xchg
cmp
out
cmp
out
mov
out
and
fist
ror
pop
sub
test
add
retf
xchg
cmp
cld
sbb
bts
fwait
std
cvtpi2ps
repnz
mov
int
mov
dec
and
dec
loop
jne
push
in
push
cmp
xchg
xchg
daa
pop
push
vcvttss2si
pushf
mov
push
pop
stc
(bad)
out
idiv
adc
mov
ret
add
mov
pop
lds
sbb
aam
adc
loop
push
stos
nop
jge
pop
in
cld
pusha
sbb
(bad)
mov
sbb
dec
mov
hlt
mov
pushf
mov
lods
mov
test
push
jbe
retf
xor
stc
out
cmp
mov
mov
lods
les
push
daa
mov
xchg
lds
mov
push
sti
mov
sub
xor
out
sub
into
add
mov
fwait
push
sbb
and
bound
or
mov
ins
dec
sub
xchg
mov
adc
mov
call
xor
pop
cli
adc
test
inc
call
mov
xchg
rcl
icebp
fwait
sub
adc
sti
mov
lea
mov
or
mov
(bad)
jl
sbb
cs
push
push
gs
out
pop
mov
mov
(bad)
(bad)
aad
mov
call
add
sbb
in
in
sub
fist
popa
mov
sub
hlt
jbe
xor
sub
jmp
js
push
jecxz
xor
sub
sub
out
cli
cmp
int
ja
mov
ror
pushf
mov
neg
jmp
pushf
test
mov
and
sub
ins
push
pushf
xchg
mov
pop
push
mov
push
movs
xchg
jmp
cmp
sub
pop
xor
cmp
xchg
adc
dec
shl
jno
jb
movs
add
call
jge
int3
sub
add
movs
clc
hlt
cld
sahf
sub
jbe
scas
(bad)
loope
mov
repnz
mov
xchg
inc
(bad)
cmp
fwait
xor
pop
adc
mov
sbb
jnp
fadd
int
sbb
mov
sub
pop
and
sub
mov
int
mov
push
xor
retf
repnz
xchg
rcr
dec
and
in
xchg
out
xchg
push
push
jp
cmp
fstp
xor
jb
cmp
jno
fs
cli
lock
bound
lahf
jle
jmp
inc
push
cs
pop
xchg
sbb
retf
cmp
mov
repnz
cmp
fdivrp
and
scas
mov
xchg
ds
cdq
in
mov
sbb
inc
push
mov
xor
mov
jns
and
xchg
dec
aad
lahf
pop
add
xor
icebp
push
fcom
jmp
je
out
pop
out
pop
mov
cld
ret
push
and
mov
(bad)
or
adc
pop
or
out
stos
enter
jg
inc
test
xlat
fst
jno
test
mov
(bad)
scas
cmps
lods
call
nop
test
repz
dec
ins
xchg
movs
xchg
out
xlat
call
call
xor
cmps
adc
cmp
mov
rcr
xor
jo
mov
sahf
out
push
fcom
arpl
call
mov
dec
mov
pusha
lock
es
out
inc
jg
leave
mov
cli
pop
inc
daa
loop
(bad)
jge
mov
lock
push
cmp
add
push
mov
sahf
jmp
cmp
sub
movs
fwait
cmp
mov
sub
mov
jnp
mov
sub
js
test
push
xor
imul
lds
xor
mov
ins
add
mov
fwait
cmps
and
mov
lahf
inc
adc
cdq
or
jl
dec
cdq
scas
or
mov
das
or
jb
pop
test
enter
std
mov
je
mov
push
mov
cwde
and
and
xchg
daa
cs
adc
fldcw
outs
mov
pusha
outs
and
out
inc
movs
int3
hlt
push
iret
sub
imul
retf
xor
(bad)
cmps
fsqrt
xchg
xchg
inc
les
sub
fisttp
sbb
(bad)
cs
mov
mov
dec
adc
and
cmp
nop
adc
xchg
in
adc
xchg
into
cmp
inc
pop
mov
push
lods
xchg
mov
inc
jb
pusha
xchg
mov
fs
jmp
add
inc
movs
push
cwde
mov
ror
iret
test
ja
jmp
jmp
cmp
out
dec
or
scas
ret
fiadd
stos
dec
dec
ds
jg
in
fwait
add
mov
out
cmps
adc
aam
jp
ja
dec
or
ss
cmc
push
test
mov
(bad)
es
loop
dec
out
xchg
jno
popf
fcmovnbe
cmp
lock
stos
mov
xchg
xchg
out
jmp
shr
std
scas
sub
pop
push
xchg
dec
fidiv
in
pop
pop
xchg
scas
push
outs
lock
sbb
(bad)
out
ja
ret
pop
gs
push
aaa
daa
cmp
xor
in
daa
cli
pop
test
or
(bad)
inc
xor
push
jne
mov
int
pop
mov
adc
fiadd
lds
retf
inc
pop
ficom
out
sub
push
sub
ins
nop
push
or
pop
cmc
call
or
(bad)
ffreep
cmp
or
ss
pusha
or
mov
mov
add
xor
sti
test
popf
mov
jg
xor
xor
ficomp
jbe
fdivr
aad
push
nop
gs
jmp
in
popf
mov
mov
inc
sub
test
test
push
stos
ss
leave
ror
mov
out
mov
sub
or
inc
pushf
je
pop
adc
pop
icebp
aaa
inc
push
inc
shl
add
sbb
pop
popw
lahf
cli
retf
jmp
out
scas
adc
fcom
(bad)
sar
inc
sub
dec
jnp
cli
cmp
fsubr
addr16
inc
out
(bad)
jl
xor
inc
or
(bad)
jge
inc
sub
mov
retf
jbe
dec
mov
mov
xchg
adc
mov
mov
mov
sub
je
movs
jp
test
or
cmp
mov
imul
xchg
outs
or
(bad)
jmp
mov
lods
mov
mov
outs
call
fnsave
int
adc
mov
mov
(bad)
fisttp
xchg
nop
popa
js
jmp
arpl
dec
retf
cmp
aad
xchg
adc
iret
inc
mov
fidivr
mov
dec
int
out
stc
push
fild
ret
dec
fwait
pop
scas
push
mov
int3
mov
test
ret
ret
movs
out
mov
(bad)
inc
pop
in
hlt
js
xor
mov
add
sbb
cmps
sbb
and
push
mov
lds
in
or
or
nop
retf
sar
sub
call
test
je
dec
mov
mov
test
dec
(bad)
dec
mov
jmp
push
aaa
adc
or
and
es
test
cmp
xchg
hlt
inc
add
push
pop
out
cli
das
(bad)
in
jb
scas
push
dec
jge
xchg
fild
mov
inc
daa
mov
pop
ins
shr
fsub
aas
jb
mov
jae
pop
xor
repnz
shl
push
idiv
cs
shl
xchg
sub
into
and
mov
ret
punpcklbw
push
mov
jmp
mov
call
xor
mov
xor
cmp
dec
(bad)
cdq
pop
aad
mov
dec
jge
push
mov
pop
jge
shr
pop
std
sbb
out
sub
gs
cmp
cmps
nop
fucomp
xor
jmp
(bad)
loopne
ds
mov
cmp
in
mov
shl
fld1
xchg
bound
ret
add
fwait
aam
arpl
inc
mov
mov
dec
add
pop
mov
fwait
into
push
sbb
mov
test
das
pop
sub
push
stos
mov
jne
daa
shr
stc
cmps
jmp
lods
mov
icebp
or
inc
ins
scas
mov
jo
fldcw
lahf
fmul
add
lods
hlt
dec
ja
adc
imul
inc
or
jmp
pop
sbb
add
shr
sbb
mul
and
lds
clc
iret
jg
repz
(bad)
cld
out
(bad)
stc
jg
add
pop
xchg
es
xchg
xchg
sub
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
fmul
add
loopne
xchg
in
outs
mov
pop
fcmovbe
lds
mov
mov
fcomi
mov
fld
in
mov
int3
in
cmp
pop
add
pop
inc
test
push
dec
xor
xchg
enter
inc
jge
or
jl
or
cmp
adc
dec
popa
push
pop
sbb
jge
jmp
sub
inc
movs
enter
das
hlt
movs
xchg
les
sub
xchg
sub
and
adc
in
loop
xlat
(bad)
mov
movs
repz
test
push
mov
test
cmps
mov
push
out
xchg
mov
out
push
mov
stos
xchg
cmp
dec
pop
push
aaa
jmp
or
adc
call
ins
sub
in
rol
inc
dec
sbb
xchg
inc
xlat
popa
jmp
add
rcr
cmp
addr16
pop
or
lock
sbb
xor
push
sub
or
mov
in
cmp
out
dec
js
pop
dec
pop
out
jmp
cmp
jl
int
mov
or
jae
jae
stc
xchg
scas
shr
movs
(bad)
gs
(bad)
neg
(bad)
xor
push
mov
repnz
es
lahf
or
sbb
cmp
arpl
cdq
out
ins
adc
int
lahf
fld
xor
aas
call
cs
pop
jg
hlt
cmp
in
pushf
mov
or
jno
and
ret
and
mov
cmps
outs
mov
mov
jmp
sbb
lods
ins
or
fsub
stos
cld
or
pop
push
jnp
mov
sbb
dec
movs
imul
cmp
jl
adc
cwde
inc
pop
push
push
scas
add
test
sahf
cld
out
mov
movs
out
jb
jl
fwait
fwait
jge
hlt
mov
or
mov
in
xor
sub
inc
imul
jp
ss
outs
out
aad
add
and
popa
xchg
push
inc
dec
out
mov
mov
pop
lahf
repnz
inc
(bad)
in
test
jmp
lea
pop
inc
adc
xlat
aaa
jbe
cwde
cmp
mov
scas
(bad)
cmp
xchg
or
in
push
adc
test
dec
inc
dec
dec
or
cmp
adc
inc
ds
loope
add
dec
imul
jne
fwait
inc
xor
ins
outs
int3
mov
add
xchg
jb
push
rol
dec
or
cmp
sub
mov
jl
dec
inc
call
fstp
aad
test
cld
nop
dec
push
mov
pop
ret
sub
sti
stos
js
repz
aad
fiadd
jbe
mov
repnz
cld
sar
push
fisttp
sub
std
cmp
js
jnp
cdq
mov
ret
aad
es
sbb
xchg
jne
jg
inc
movs
movs
hlt
cmp
(bad)
cld
pop
add
mov
(bad)
rcr
clc
aaa
fs
or
scas
mov
or
(bad)
inc
mov
cmp
jne
pop
dec
adc
and
jg
jge
leave
js
(bad)
fmul
nop
cld
sub
push
ins
inc
and
jg
les
loop
fist
push
cwde
cs
or
mov
xchg
pop
dec
popa
jae
cmp
jge
mov
arpl
fisubr
pop
in
sbb
aad
or
pop
xchg
(bad)
dec
xor
jl
shr
pop
pop
data16
or
jp
jp
addr16
cmp
push
jl
lds
lods
jge
sub
inc
jp
xchg
ret
sub
icebp
repnz
cmps
and
mov
xchg
ja
js
push
xchg
(bad)
pop
mov
sbb
fdivr
adc
ret
ret
sti
push
mov
cmc
mov
sti
ds
ins
out
xchg
jl
(bad)
bound
mov
pop
jns
neg
push
push
data16
cmp
push
mov
call
mov
idiv
push
or
mov
arpl
rcr
xor
out
jbe
mov
daa
mov
mov
js
in
in
jns
or
rcl
cmp
xor
inc
push
mov
clc
out
rcl
mov
sbb
add
pop
push
inc
pusha
test
in
bound
mov
mov
or
xor
repnz
repz
mul
ss
sar
xor
push
sub
mov
xchg
adc
pushf
inc
add
stos
adc
mov
cmc
not
or
dec
push
icebp
push
pop
stc
or
mov
cmp
adc
inc
mov
ins
rcr
js
dec
cmps
imul
repnz
retf
mov
or
cmp
dec
xchg
xchg
ds
das
or
pusha
and
mov
adc
or
mov
imul
mov
or
pushf
dec
mov
repnz
xor
mov
sub
ffree
pop
pop
inc
stos
retf
lds
sub
stos
dec
outs
shl
lods
int
fmul
into
fild
in
in
inc
pop
add
les
test
bndcn
repz
fistp
cwde
imul
mov
or
fist
mov
xchg
add
js
hlt
dec
call
fmul
inc
adc
push
adc
stos
mov
int
xor
pushf
int3
ja
aaa
sub
cwde
out
nop
aam
aam
inc
mov
cwde
retf
push
daa
xchg
gs
jmp
mov
cmps
dec
(bad)
clc
sub
mov
cmp
pop
xchg
xor
loope
push
jno
pushf
fnstsw
cmps
jno
inc
into
movs
sbb
(bad)
rol
iret
and
adc
outs
pop
mov
pop
movs
push
imul
add
cld
and
sar
xor
imul
outs
jge
outs
into
push
or
lods
retf
mov
fadd
cmps
lods
sbb
mov
add
adc
mov
scas
mov
xchg
mov
pop
jecxz
sub
add
ins
cdq
dec
push
sbb
push
(bad)
mov
pop
test
or
mov
adc
arpl
inc
jae
inc
ret
inc
sbb
lea
cmp
pop
xchg
iret
out
and
push
js
xor
add
test
cs
jg
xor
cdq
popa
cmc
cmc
int
adc
pop
scas
pop
push
ret
repz
cmp
sub
loop
xor
jnp
lds
lods
loope
add
leave
sbb
cwde
sub
bound
or
popa
mov
or
inc
lods
add
xchg
std
add
js
mov
frstor
bound
add
je
xor
jnp
pop
shl
(bad)
pusha
pop
test
xor
push
adc
mov
pop
inc
rcl
pop
pop
and
(bad)
or
push
mov
test
repz
fsubr
cmp
xchg
push
push
pop
test
cld
inc
fwait
dec
call
sbb
(bad)
lods
fisttp
cmp
cwde
js
mov
sbb
clc
mov
inc
popa
xlat
(bad)
mov
sbb
dec
(bad)
add
push
scas
cmp
jo
dec
pop
arpl
jbe
jle
in
mov
sahf
test
div
mov
sub
fldenv
test
sahf
leave
xchg
xchg
xchg
test
pop
sub
ds
icebp
add
addr16
lods
and
pop
mov
pop
inc
out
inc
cmp
rol
ficom
mov
imul
(bad)
xchg
js
sub
sub
xchg
stos
pushf
ss
mov
adc
out
push
sub
mov
mov
daa
push
mov
pop
xchg
lock
pop
loop
and
sar
pop
jg
lahf
cwde
mov
sub
in
fstp
adc
add
fldcw
lds
fwait
clc
shl
in
mov
jmp
jno
dec
or
je
call
add
jno
ins
push
mov
jnp
fdivr
sti
in
and
cmp
or
gs
rol
mov
sub
jne
pause
or
gs
xchg
ret
test
dec
dec
inc
out
mov
je
aad
add
xor
fcom
es
dec
pop
dec
cmp
xchg
pop
adc
retf
lock
mov
fisub
push
cmp
adc
dec
jl
jmp
pop
mov
shl
pop
repz
pop
je
sar
push
push
pop
inc
fnsave
push
shl
inc
mov
sbb
xchg
pop
loop
ds
xchg
dec
and
les
aaa
and
xor
jne
add
sub
pop
dec
mov
pop
test
cmp
push
enter
js
push
in
pop
pop
add
and
or
mov
arpl
fld
cmp
ret
std
mov
cmp
xchg
adc
inc
cwde
sbb
shl
cmp
stc
push
and
mov
jo
dec
xor
mov
pop
sti
inc
sbb
cmps
ss
push
jne
lods
pop
jae
cmps
fild
mov
shl
lods
neg
xchg
and
adc
int
ret
(bad)
rol
jo
call
lock
data16
sar
daa
(bad)
pop
mov
mov
sub
(bad)
outs
repz
pushf
sub
mov
mov
mov
cli
cmp
aam
pop
pop
mov
ret
ins
test
mov
or
inc
out
imul
call
dec
dec
xor
mov
movs
pusha
outs
jne
xor
sub
fidivr
or
fstp
shl
mov
std
xor
(bad)
movs
xchg
mov
and
imul
ds
frstor
iret
mov
aad
mov
imul
in
mov
(bad)
mov
pop
add
or
clc
pop
push
jmp
jae
pop
mov
out
ret
inc
sbb
adc
dec
and
(bad)
add
jmp
or
mov
xchg
les
cwde
daa
cmp
mov
repnz
xchg
jecxz
stos
ins
push
retf
daa
out
sbb
aaa
push
repnz
scas
mov
mov
inc
sbb
push
xchg
mov
movs
push
aam
xchg
xchg
sbb
scas
add
mov
cmp
push
in
inc
sub
imul
dec
jmp
xchg
jecxz
cmp
sub
in
ins
jp
sbb
mov
test
pop
inc
mov
mov
push
arpl
xchg
mov
push
scas
outs
cmp
lds
pop
sub
(bad)
in
mov
dec
lods
aad
ins
popf
push
sub
pop
xchg
add
les
push
dec
fcmovbe
lds
into
int3
lods
pop
ret
pop
inc
jp
outs
mov
out
add
inc
jmp
inc
out
adc
pop
jecxz
inc
mov
inc
jmp
aas
ds
xor
repnz
popa
out
inc
cmp
cmovge
xor
dec
xchg
jnp
push
jg
idiv
adc
cmc
dec
mov
fst
mov
mov
jmp
es
js
call
pop
mov
push
ret
adc
repz
sbb
sahf
stos
mov
fimul
mov
mov
das
pushf
cdq
into
arpl
shl
xchg
std
js
sti
mov
call
(bad)
push
sub
lea
and
sti
xchg
push
cli
popa
add
jo
sub
dec
loopne
fist
int
aas
(bad)
out
out
cdq
xchg
xchg
jge
or
imul
jnp
push
xchg
cwde
div
in
outs
fs
sbb
pop
arpl
jg
add
or
cmps
jg
dec
adc
pop
cmc
scas
js
mov
(bad)
in
jmp
movq
mov
js
dec
xchg
xor
addr16
not
mov
mov
fisub
rol
pop
xchg
mov
fnstenv
sbb
add
fs
mov
jae
out
jl
aad
mov
sahf
push
mov
xchg
into
imul
dec
rol
sbb
test
mov
jge
sub
ret
sbb
sub
dec
push
repnz
loopne
es
fstp
retf
popf
xchg
push
cmp
in
inc
es
push
mov
pusha
sbb
mov
fwait
bound
mov
push
shl
fiadd
fisub
adc
xchg
movs
xor
or
or
pusha
cmps
xchg
aad
out
mov
fdiv
sbb
int
xor
mov
pop
inc
fadd
and
sbb
aas
(bad)
into
dec
adc
pop
sbb
into
scas
loop
nop
shl
or
push
jne
sbb
mov
aas
repnz
neg
jns
cmp
movs
fist
dec
mov
mov
cmps
fsubrp
jmp
push
mov
dec
and
xchg
pop
fnstcw
cld
adc
popf
outs
add
pop
cdq
pusha
std
jae
jbe
int
jno
jns
addr16
add
push
pop
adc
add
dec
add
mov
repz
xor
cmc
push
movs
fmul
(bad)
into
mov
jecxz
jmp
push
in
movs
shr
xchg
leave
dec
and
(bad)
push
stos
scas
cmps
retf
pushf
or
jp
lods
dec
lods
ret
popf
mov
shr
jl
adc
faddp
aad
and
dec
or
jmp
mov
js
imul
lods
jmp
mov
je
mov
and
ficomp
jecxz
adc
and
dec
sbb
fsub
les
push
popf
mov
out
test
pop
repz
sbb
dec
or
out
aam
test
lock
mov
daa
scas
sub
shl
iret
jno
pop
movs
das
jp
dec
pop
mov
push
repnz
pop
adc
sbb
mov
cmp
sar
ss
jmp
loop
ret
mov
jmp
rol
and
jns
and
cmp
pop
ja
dec
adc
stc
js
jp
pop
push
lods
out
jmp
es
push
sbb
xlat
ficomp
hlt
push
pop
add
out
pop
(bad)
mov
and
sub
sbb
cmp
std
fsubr
ror
or
outs
fiadd
test
std
xchg
xchg
and
jo
scas
jnp
nop
repz
adc
dec
mov
jecxz
call
(bad)
mov
lods
(bad)
mov
push
arpl
ins
add
ja
jge
or
mov
mov
ret
cs
inc
ins
in
or
or
sbb
mov
ins
cmp
sub
fmulp
sub
in
xchg
call
jb
cmp
out
push
xor
daa
mov
shl
out
pop
iret
stos
mov
gs
out
mov
sbb
nop
das
(bad)
(bad)
ins
inc
mov
out
or
ror
sbb
sub
aad
add
mov
cli
jbe
sub
dec
stc
faddp
(bad)
pop
call
add
sbb
sbb
addr16
gs
pop
jge
pusha
sbb
call
sub
out
cmp
xor
in
xchg
pop
push
rcl
jb
enter
dec
scas
push
lea
(bad)
mov
mov
mov
(bad)
adc
mov
movs
inc
ret
xor
sar
fs
pop
loopne
push
mov
push
xor
xor
and
pop
test
lods
pop
cmp
or
xchg
nop
out
pop
icebp
outs
mov
aam
es
gs
enter
clc
pop
or
mov
cs
xor
push
fstp
sub
sub
xor
test
or
or
sbb
dec
gs
mov
pop
fcom
cmp
popf
bound
xchg
jecxz
and
add
es
cmc
mov
sub
add
add
jmp
inc
es
fldcw
stc
pop
(bad)
sub
inc
mov
in
mov
fstp
xor
sbb
mov
sub
(bad)
jl
inc
cdq
xchg
mov
sbb
cmp
dec
inc
stos
cmc
arpl
cdq
in
adc
mov
(bad)
xchg
rcr
xor
xchg
xchg
repz
mov
dec
cmps
cmps
vcvtsd2ss
imul
ins
cmp
out
ins
mov
add
mov
sahf
inc
xchg
dec
adc
sub
movs
xor
mov
xchg
scas
int3
cmp
(bad)
stc
out
jmp
lock
mov
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
scas
ss
fnsave
xor
popf
xchg
ss
jno
mov
(bad)
ja
outs
jb
repz
(bad)
mov
mov
add
loope
sahf
sbb
ins
dec
lea
das
mov
scas
mov
gs
stos
add
div
repnz
dec
cld
cmp
int3
and
(bad)
xor
xor
daa
outs
cmp
not
push
cmc
jl
sbb
sub
add
xor
sbb
xor
push
push
jge
test
lds
xchg
mov
fmul
jmp
les
int
test
fmul
inc
div
das
movs
jnp
adc
pushf
rol
push
enter
add
cmp
fwait
pushf
mov
loop
mov
out
or
pop
jo
pop
xchg
int
mov
xor
call
add
xor
ret
mov
hlt
mov
lods
jecxz
jo
out
movs
cdq
inc
stc
(bad)
adc
pop
push
sbb
stc
outs
rcr
aad
fwait
sbb
repz
ja
or
pop
sbb
pop
push
repnz
jl
xlat
inc
and
mov
jge
pop
cmc
punpckldq
add
push
and
ds
xor
xchg
dec
mov
fs
add
gs
push
cmc
xor
add
xchg
retf
dec
daa
imul
cmps
xchg
(bad)
inc
lahf
xchg
inc
gs
stos
push
pusha
xchg
xor
lock
dec
aas
or
or
std
push
jmp
and
femms
pop
or
cmp
push
mov
cmp
aas
inc
adc
mov
mov
xor
adc
sar
push
or
retf
neg
inc
mov
rcr
fild
and
jns
push
mov
cmps
fisttp
imul
nop
mov
jae
fmul
arpl
pop
ficomp
mov
xor
and
jo
test
mov
and
shl
mov
jno
test
not
and
mov
cmp
push
dec
bound
push
xchg
mov
and
mov
cmp
rcl
sbb
dec
push
jae
add
and
pop
and
ins
ficom
lahf
xor
cmps
popa
adc
xor
lahf
add
(bad)
mov
and
popa
lods
popa
repz
rcl
pop
movs
pop
jo
stc
add
aaa
(bad)
in
iret
adc
xor
xchg
pop
xor
push
jl
pop
shr
cmp
test
fld
dec
jl
jmp
and
popa
enter
mov
sub
sbb
nop
xor
mov
cmp
mov
sbb
shr
adc
sbb
inc
lahf
leave
jnp
jmp
call
iret
xor
jl
call
sub
fadd
ins
mov
cmp
imul
leave
cmp
loope
sub
push
cmp
cmps
add
mov
jnp
cmp
push
pop
xchg
clc
and
in
out
sbb
cmp
jno
jle
dec
nop
mov
push
out
jp
pop
xchg
push
ins
inc
repnz
mov
mov
cmp
cs
loope
adc
lods
or
jae
mov
add
(bad)
lods
std
cmp
add
fwait
test
xchg
ins
cmp
mov
mov
out
mov
sbb
xchg
inc
fst
adc
aaa
adc
jl
(bad)
inc
xor
mov
push
adc
cmc
(bad)
call
xchg
push
adc
pop
and
mov
test
xchg
retf
jmp
lea
sub
mov
jp
mov
cmp
lock
sub
cmp
fistp
loopne
es
ja
jmp
push
xchg
inc
in
lods
jno
div
mov
cmps
shr
(bad)
test
sub
(bad)
out
fmul
add
xchg
nop
jecxz
jmp
scas
sub
fdivr
lods
push
ror
sub
imul
shl
fimul
stc
les
push
faddp
stos
cmc
shl
dec
and
sub
loope
sub
or
scas
or
call
cmp
and
sub
aam
sti
push
lds
fdivr
stos
pop
js
stc
sub
jns
mov
test
dec
das
add
push
inc
or
clts
ss
int3
sar
dec
retf
jge
cmc
xor
pop
cmp
out
in
bound
mov
jge
or
xchg
js
and
add
les
xchg
jae
inc
fisttp
mov
jnp
popa
ficom
xor
mov
xor
or
pushf
test
mov
xchg
call
sub
out
cmp
lock
call
loope
in
fldcw
xor
mov
clc
jg
aad
mov
ja
sub
fnstsw
(bad)
nop
fldl2t
mov
gs
jo
in
(bad)
jmp
xor
aam
mov
xor
cmp
das
lods
iret
ins
retf
les
pop
add
nop
cli
inc
scas
arpl
rcl
(bad)
add
mov
sub
(bad)
mov
aad
enter
jne
pop
mov
mov
pop
sbb
inc
sti
fwait
or
daa
jae
pop
cmp
lgs
out
pop
mov
sub
mov
or
vpsrlw
arpl
rcr
jmp
inc
stos
or
(bad)
das
addr16
xchg
cmc
daa
jmp
push
rcl
inc
lea
cmps
test
(bad)
outs
hlt
push
push
out
sbb
pop
js
jbe
sbb
sbb
ins
push
aam
add
push
sub
mov
retf
ins
cdq
sub
xor
(bad)
push
test
cld
(bad)
sbb
push
(bad)
popf
cs
dec
inc
dec
adc
cmp
or
cmp
jle
arpl
pusha
lock
adc
and
iret
imul
push
dec
sub
cld
in
adc
dec
arpl
and
mov
repnz
je
jmp
dec
ss
inc
xlat
in
xchg
nop
pushf
add
xor
jg
lds
mov
popf
pop
lahf
test
mov
dec
retf
xchg
div
push
mov
or
xor
in
scas
(bad)
push
push
test
cwde
mov
mov
pop
sbb
fsubr
imul
adc
mov
aaa
fmul
lods
push
aaa
nop
ficomp
inc
in
std
push
call
lahf
hlt
sub
pop
push
xchg
jecxz
add
push
(bad)
sar
sbb
add
retf
cmp
mov
int3
add
or
mov
popf
pushf
cmp
dec
pushf
jae
cmp
mov
inc
mov
pop
push
dec
std
dec
daa
or
xor
or
mov
stc
unpckhps
lods
daa
jmp
and
inc
ret
mov
daa
mov
jns
call
jecxz
dec
shl
in
fwait
(bad)
cmps
mov
inc
jp
in
jbe
(bad)
jno
mov
xchg
push
jo
aas
xor
outs
sub
push
(bad)
xchg
adc
outs
add
es
arpl
fcom
in
xchg
cwde
sbb
xchg
stos
in
mov
pushf
stc
dec
cdq
pop
(bad)
inc
mov
js
or
call
shl
scas
inc
push
jge
addr16
imul
mov
mov
mov
mov
test
scas
inc
pop
cwde
mov
or
cmp
cmp
sub
rcl
loop
mov
xchg
and
out
push
inc
sub
sub
xchg
std
cld
push
leave
cmp
cmp
inc
push
and
push
shl
mov
pop
pop
sbb
sbb
or
pop
push
push
in
mov
or
sti
fwait
cmp
mov
push
imul
cmp
nop
call
popa
jecxz
stos
and
outs
inc
add
retf
fist
(bad)
xor
pusha
in
pop
cmp
adc
in
in
out
lods
dec
js
adc
(bad)
jp
sti
js
mov
pop
fcomp
or
icebp
aas
xlat
push
rcl
aad
mov
push
push
adc
inc
jne
ins
pop
or
add
and
stos
scas
jmp
test
cmps
dec
cs
inc
xor
repnz
cli
fcomp
push
mov
(bad)
or
retf
mul
lods
repnz
bound
pop
aam
sysexit
inc
imul
(bad)
outs
pop
xlat
rol
imul
cmc
add
pop
repnz
aas
or
add
pop
sbb
repnz
aad
lahf
adc
pop
mov
dec
mov
push
inc
mov
sbb
mov
sahf
jge
in
ror
inc
inc
outs
xor
cs
sub
pop
push
adc
adc
je
out
push
aam
add
test
and
xchg
xchg
inc
clc
push
cwde
outs
ins
jle
mov
pop
(bad)
fnstenv
in
mov
mov
inc
daa
or
out
into
or
cmps
xor
xchg
movs
int3
pop
and
(bad)
hlt
movs
mov
add
imul
or
fisub
test
(bad)
jmp
jmp
test
lods
inc
xchg
das
sti
mov
inc
das
jmp
and
(bad)
sbb
add
dec
repz
out
jb
jns
push
mov
xchg
sbb
ret
daa
and
movs
movs
xchg
dec
cli
les
sub
sbb
sbb
sbb
adc
mov
out
and
xchg
clc
jmp
sti
cli
test
std
lds
(bad)
out
or
ret
das
data16
and
inc
addr16
inc
cmps
hlt
jecxz
out
xchg
ss
xchg
dec
(bad)
iret
retf
or
xchg
cmp
sbb
loope
sahf
jns
ficomp
fiadd
ret
je
sub
xor
jne
push
adc
jl
nop
jle
mov
jae
cwde
or
jo
leave
jae
add
iret
inc
hlt
mov
sbb
out
jae
adc
push
mov
pop
ds
shl
shl
stc
into
test
popf
fsubr
(bad)
sub
imul
mov
sbb
push
loopne
mov
je
outs
or
lods
mov
out
lock
pop
arpl
call
dec
jne
nop
jbe
jns
out
bound
sbb
pushf
lock
mov
das
data16
add
fild
not
mov
xor
into
jp
mov
jne
pop
out
fisttp
test
rol
pushf
int
sbb
inc
int3
lods
push
popa
mov
jo
xchg
inc
rcl
sbb
dec
sub
lods
or
cmc
mov
sub
xor
dec
mov
int
test
sbb
popf
in
inc
sub
xchg
pop
jecxz
inc
fwait
and
xchg
ret
mov
(bad)
cli
jns
xchg
mov
inc
mov
aam
and
mov
dec
test
cmp
push
int
push
les
dec
gs
test
pop
xor
(bad)
icebp
sub
cs
lods
call
lock
or
push
imul
push
stos
and
adc
and
mov
add
pop
loope
pusha
pushf
jne
or
cld
fs
mov
ja
fimul
and
fwait
mov
repnz
cmp
jo
dec
fcmovnb
enter
cmp
fld
xchg
scas
repnz
mov
mov
jae
aad
repnz
pop
pop
iret
scas
add
pop
(bad)
cmp
mov
inc
xlat
iret
mov
ror
dec
xor
rcr
aaa
lahf
push
cdq
pop
push
mov
lds
push
icebp
movs
mov
or
clc
mov
leave
pop
mov
mov
fs
pop
push
(bad)
repz
ret
cdq
and
sub
scas
mov
dec
mov
mov
mov
ret
int
mov
pop
iret
mov
lods
movs
nop
mov
adc
enter
iret
rcr
fldcw
or
sar
fcom
call
pop
jle
pushf
test
pop
jg
add
cmp
rcr
ror
scas
(bad)
outs
jnp
call
cmp
and
jne
jnp
in
cmp
stc
mov
sbb
fadd
les
push
pop
mov
lea
lahf
mov
dec
jnp
out
mov
mov
push
sub
js
dec
aad
sbb
mov
mov
add
push
in
in
not
and
ins
sbb
test
icebp
push
aas
pop
scas
xchg
xor
mov
lea
dec
pop
xor
add
call
mov
mov
push
out
or
add
mov
dec
mov
sub
mov
xchg
add
mov
pop
cdq
sbb
mov
mov
cmps
or
cmp
and
mov
hlt
cmps
jmp
(bad)
dec
jecxz
retf
mov
icebp
xchg
out
mov
repnz
ins
or
test
inc
sti
or
add
into
shl
dec
fcomip
cmp
xor
and
ja
mov
push
xlat
pop
lahf
or
mov
xlat
jno
mov
mov
outs
dec
xchg
add
out
aam
ja
mov
mov
or
xchg
hlt
clc
dec
push
popf
out
dec
(bad)
push
adc
or
mov
pop
cmp
aaa
cmp
lea
mov
sbb
or
leave
ins
or
(bad)
out
imul
xchg
push
push
adc
sti
jmp
enter
sbb
test
mov
int3
mov
ins
iret
mov
int3
sbb
add
mov
imul
xor
sub
pop
push
mov
and
sbb
push
loope
push
cdq
test
test
inc
in
fadd
pushf
(bad)
pop
push
or
adc
fiadd
mov
pop
push
js
and
dec
sub
dec
pop
jmp
stos
adc
inc
ret
(bad)
mov
pop
cmp
int3
adc
sub
cmp
daa
lods
ret
(bad)
loopne
push
jmp
dec
std
lods
cmp
scas
pop
sub
retf
sub
sar
jae
lahf
mov
shl
ss
xchg
test
je
dec
push
ror
and
jno
sbb
cwde
mov
push
jns
stos
mov
(bad)
enter
jp
stos
shr
mov
popa
mov
fwait
push
xor
pop
iret
adc
pop
mov
sar
sbb
jmp
jno
jnp
or
das
out
mov
dec
mov
retf
popa
push
retw
inc
lock
out
jae
or
cmp
xchg
push
add
ins
les
jg
sub
xchg
xlat
add
sbb
or
mov
in
pusha
loope
aas
xor
gs
xchg
sbb
enter
adc
sbb
mov
pop
mov
fs
add
xor
inc
test
jle
leave
gs
cli
in
sbb
test
jp
or
and
jp
inc
das
cmp
add
fisub
fcom
nop
mov
mov
rol
xchg
out
jae
test
push
xor
das
mov
mov
xchg
div
jmp
push
ret
mov
or
(bad)
enter
and
xchg
out
dec
pop
ss
pop
dec
add
xchg
cmps
xchg
jbe
mov
adc
mov
inc
mov
or
jb
jo
and
jge
mov
mov
jmp
call
dec
or
mov
xor
out
jno
ret
sub
mov
lahf
mov
repz
push
pop
scas
dec
loopne
mov
aad
sub
hlt
cmps
std
es
ror
add
stc
out
jg
stc
out
jg
pop
add
fsub
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jbe
dec
out
xlat
cmp
lahf
cwde
jmp
push
dec
int3
in
xor
cmp
cmps
cmp
imul
out
(bad)
jns
add
test
pop
fisttp
mov
adc
and
(bad)
xor
clc
pop
or
xchg
popf
add
test
inc
mov
int
pop
xchg
and
stos
lea
jl
fiadd
sahf
jbe
stos
or
mov
scas
xor
mov
lea
mov
push
(bad)
retf
jmp
sti
mov
pop
push
xchg
xchg
sub
mov
movs
xor
test
cmp
cmps
test
sub
hlt
add
lods
sub
push
jecxz
jp
dec
pop
sbb
mov
add
(bad)
sti
ss
pop
out
mov
mov
loopne
daa
mov
mov
std
xor
outs
out
test
push
jbe
fs
out
xchg
cmc
cmps
jbe
or
daa
bound
mov
sub
out
dec
cs
xchg
xor
cwde
cs
dec
cwde
mov
push
push
xor
sahf
sqrtps
cmp
dec
out
nop
sub
ret
adc
inc
in
pop
mov
push
cli
mov
dec
addr16
fnstenv
dec
add
mov
pop
jg
test
(bad)
jns
add
sbb
int
xlat
pop
pop
cs
retf
pop
mov
inc
or
adc
scas
and
cdq
not
jne
int3
inc
add
inc
mov
ret
in
xor
dec
push
popa
dec
inc
aad
mov
gs
push
hlt
js
lea
leave
sti
cmp
iret
aaa
div
push
push
addr16
out
pop
adc
mov
sub
mov
mov
pushf
aaa
out
jge
adc
add
shr
int3
mov
(bad)
jcxz
jp
adc
bound
sbb
jg
push
sar
int3
out
push
fmul
xor
test
inc
jl
into
aas
jmp
(bad)
dec
lods
sbb
push
push
fsub
push
cmp
stos
sub
xchg
pop
pop
sbb
sahf
outs
xchg
imul
inc
push
mov
loop
mov
stos
neg
jns
outs
fmulp
jo
lahf
fst
pop
ja
xchg
popa
(bad)
cmc
cs
ds
mov
aad
cmp
inc
dec
cdq
push
jo
cld
pop
mov
mov
jmp
mov
xor
repnz
out
cmp
cld
inc
xor
stos
sub
mov
fistp
sub
adc
or
jno
fstp
push
shl
clc
dec
gs
fistp
jmp
xchg
sbb
data16
icebp
xchg
or
sub
pop
inc
xlat
dec
sub
lock
mov
jle
scas
mov
push
jg
adc
hlt
and
sbb
jne
shr
outs
jmp
add
scas
mov
mov
test
sbb
dec
scas
cmp
adc
outs
sub
test
add
xchg
jnp
inc
(bad)
fld
cmp
jnp
nop
ret
jle
inc
inc
jmp
popa
sub
dec
shl
je
je
sbb
in
out
out
add
jecxz
add
fld
cmps
mov
repz
sub
xor
mov
enter
ins
ret
mov
mov
(bad)
scas
cmc
sub
cld
jmp
jno
imul
xchg
mov
(bad)
fbld
jne
lds
mov
adc
pop
inc
jmp
cmps
adc
call
std
shr
jecxz
in
pop
adc
jnp
sar
imul
les
jo
rcl
mov
inc
lea
jge
aad
(bad)
out
stc
(bad)
jb
xchg
call
inc
push
test
in
loope
icebp
jb
xchg
std
(bad)
retf
dec
pop
lahf
test
in
stos
mov
mov
mov
sbb
adc
sbb
popf
xor
test
xor
mov
outs
push
ja
or
cld
adc
out
or
or
frstpm(287
mov
xor
dec
push
mov
xor
pop
and
dec
imul
or
mov
fninit
mov
mov
dec
sub
aam
pop
jne
mov
test
xchg
out
outs
cli
std
and
enter
(bad)
lahf
jae
(bad)
leave
test
cld
sub
stc
arpl
xchg
or
scas
dec
test
and
stos
mov
enter
mov
push
(bad)
mov
jmp
xchg
nop
sbb
sub
push
enter
mov
es
mov
es
xchg
cmp
pop
(bad)
cmps
imul
xchg
(bad)
inc
sti
jbe
popa
into
sbb
xchg
add
cmps
pop
push
sub
mov
pop
mov
add
inc
xchg
sar
dec
inc
mov
loop
jns
mov
jnp
mov
mov
jnp
rcl
mov
data16
addr16
in
adc
enter
int3
(bad)
retf
aas
mov
xor
sub
or
ds
jecxz
mov
push
inc
pusha
push
or
xchg
mov
mov
xor
mov
setae
fisub
xchg
in
dec
or
xchg
jp
sti
and
jae
dec
mov
sbb
fwait
and
out
adc
cdq
jb
jmp
test
mov
fistp
mov
mov
punpcklwd
mov
(bad)
into
sahf
push
int
add
lds
(bad)
movs
out
xchg
sbb
jl
hlt
hlt
dec
jecxz
jno
cmc
mov
jp
cli
in
push
sbb
or
lea
repnz
loopne
aaa
sahf
adc
sbb
push
arpl
xor
jecxz
das
xchg
and
(bad)
cmps
test
neg
mov
inc
test
sbb
push
mov
or
mov
mov
mov
mov
cmp
ret
stos
outs
cmps
push
movs
lahf
dec
gs
xor
rol
push
pop
mov
(bad)
push
(bad)
lods
jnp
xor
sbb
add
cmp
out
inc
sub
aaa
cmp
pushf
mov
movs
fxch
inc
fcom
push
dec
xor
ret
ror
fst
jl
into
dec
and
inc
icebp
add
sub
sbb
iret
test
aam
ins
in
inc
ror
dec
mov
sbb
loopne
mov
jmp
repz
pop
xor
xor
out
paddb
test
xor
icebp
and
arpl
xor
mov
movs
add
mov
push
pop
nop
and
fdivr
loop
jge
and
repnz
jnp
mov
xchg
jp
fs
es
movs
popa
ss
in
mov
sub
sub
lock
mov
iret
enter
cmp
adc
add
mov
dec
neg
mov
loope
dec
pop
cmp
add
xchg
mov
daa
dec
pop
mov
push
or
or
sbb
cmc
imul
in
cdq
adc
aas
jle
pop
in
or
jb
int3
cmp
(bad)
test
daa
jnp
jle
hlt
inc
fisubr
sbb
cmp
push
sti
push
lock
add
jl
mov
and
jae
int
call
sbb
cmps
stos
popa
mov
div
or
or
and
mov
mov
jmp
pop
cdq
sahf
pop
cmps
adc
mov
retf
pop
je
push
loop
add
in
je
push
sub
xor
push
leave
dec
(bad)
sbb
or
leave
xor
daa
cmps
push
add
adc
cld
nop
js
out
loop
jmp
cs
fcom
jg
cmp
cli
push
inc
sbb
add
or
inc
sub
or
sub
sbb
inc
xor
outs
call
in
rol
add
js
jbe
mov
xor
mov
mov
stos
mov
les
dec
lahf
lea
sbb
retf
push
inc
pop
add
jmp
loopne
inc
out
push
xor
pop
jns
icebp
jmp
stos
xchg
and
cmp
xchg
fcomp
out
fcomip
ret
jge
mov
pop
rcl
cld
cwde
xchg
ins
in
add
push
popfw
add
mov
mov
mov
sub
mov
adc
mov
mov
cld
jle
mov
pop
pop
in
lahf
fisubr
fyl2xp1
pop
(bad)
idiv
sar
mov
fisub
fcmovbe
add
jbe
shl
pushf
jne
ss
and
sar
int3
sbb
and
imul
ins
shl
pop
mov
in
pop
pop
jmp
mov
xor
xor
movs
daa
push
outs
sbb
sti
cmp
rcr
mov
add
or
in
cs
rol
jg
pusha
cmp
mov
repnz
sub
(bad)
gs
mov
aam
dec
dec
jge
iret
stos
push
test
lods
out
mov
or
mov
xor
push
jle
lods
stos
dec
pop
leave
or
sub
xor
push
mov
lods
cmc
mov
xor
mov
(bad)
push
imul
jne
out
cmp
pop
add
ins
push
iret
mov
repz
js
inc
repnz
and
mov
and
das
aaa
das
inc
inc
test
adc
sahf
ss
add
inc
xor
cmp
pop
adc
addr16
pop
stc
adc
cs
mov
inc
jg
test
xlat
xor
cs
adc
aad
dec
retf
fild
sbb
inc
jns
loop
(bad)
ins
pop
jmp
pop
push
add
fidivr
repz
jmp
and
xor
ror
pop
pop
mov
xchg
add
sub
aad
aaa
je
stos
and
and
fbstp
mov
fsub
fdiv
sub
retf
and
push
jbe
hlt
jns
and
xlat
into
xlat
in
cmp
dec
ret
loopne
stos
out
and
daa
push
jg
into
sbb
lahf
int
mov
call
enter
sub
inc
cld
jno
pop
retf
add
scas
and
sub
cmp
cmps
push
mov
mov
adc
adc
test
push
dec
(bad)
pop
dec
dec
leave
dec
fs
dec
and
xchg
inc
cmp
cmp
xor
lds
(bad)
hlt
jae
dec
inc
adc
or
inc
sub
push
inc
test
hlt
cld
cmps
das
mov
cld
sub
xor
retf
jmp
cld
jmp
xlat
dec
sbb
xor
push
push
out
add
xchg
or
call
js
sub
xor
js
ret
xor
(bad)
es
mov
nop
xor
sub
repnz
inc
pop
cmp
jbe
mov
dec
push
popf
mov
idiv
sub
fcmovu
cwde
lods
ins
xchg
push
cdq
sbb
pushf
xlat
pop
fidiv
dec
int
pop
and
pop
sub
stc
inc
fld
jp
in
push
xchg
sbb
rcl
cmp
xchg
push
dec
fmul
cdq
push
sbb
cmp
(bad)
jbe
xchg
push
ja
push
nop
push
jno
cmp
sbb
gs
mov
enter
mov
leave
ror
push
movs
(bad)
push
mov
mov
xlat
(bad)
data16
sbb
mov
jg
ds
aas
or
xchg
xchg
dec
mov
push
push
adc
mov
hlt
sub
pop
popf
iret
xchg
stc
fcmovnb
jp
rol
imul
jle
dec
sbb
or
mov
cmps
push
out
adc
stos
lock
lods
jmp
loop
cmp
xchg
cmp
test
xchg
out
test
mov
inc
adc
int
test
pop
sub
lods
or
sub
outs
mov
sahf
jns
xor
test
cdq
lea
stos
(bad)
nop
push
xchg
movs
mov
mov
aam
jmp
imul
lock
xor
out
movs
sbb
pop
int3
mov
call
sub
adc
in
cmp
out
fwait
mov
movntq
push
stos
sbb
adc
cmc
mov
jb
ins
bnd
mov
jge
and
out
rol
or
jmp
pushf
inc
add
popa
outs
dec
out
and
out
in
mov
mov
cmc
mov
xchg
cmp
mov
sbb
xchg
inc
out
scas
mov
jecxz
cmp
ja
fisttp
push
ds
push
adc
sub
out
imul
push
adc
int3
movs
mov
lods
adc
lahf
movs
inc
mov
shl
jmp
add
mov
inc
inc
bnd
or
sbb
pop
xchg
mov
jge
xor
jae
je
and
icebp
lock
push
lahf
sub
fwait
dec
iret
mov
push
pop
rcr
jmp
das
xor
test
arpl
arpl
sbb
pop
pop
call
push
lds
imul
lock
jbe
(bad)
mov
js
cmp
dec
inc
aam
test
sbb
cmp
sar
scas
(bad)
retf
lahf
jmp
sar
inc
xchg
and
mov
jle
mov
jge
sub
adc
jae
add
xor
mov
fwait
movs
dec
mov
adc
lock
and
sahf
jle
aad
icebp
pop
fld
loope
jbe
push
xor
ret
(bad)
scas
mov
push
aas
mov
pusha
pop
(bad)
mov
mov
dec
js
icebp
sbb
mov
(bad)
jp
out
inc
test
shl
dec
mov
popa
push
cwde
inc
push
std
popa
fnstcw
fsubr
loop
pop
sahf
cmp
and
loopne
fidiv
jmp
rcr
cmp
repnz
mov
mov
(bad)
mov
cmp
xor
test
push
rcr
popa
jno
jae
loop
mov
dec
leave
movs
inc
or
les
lds
shr
retf
mov
repnz
mov
ins
in
scas
pop
outs
and
and
jge
dec
clc
push
scas
pcmpeqw
xchg
push
(bad)
loopne
in
mov
addr16
cwde
jb
pop
jb
fsub
cli
pop
xchg
or
daa
sti
aam
xor
fisttp
push
add
les
and
bnd
cld
stc
aad
cmp
es
inc
pop
cdq
into
and
sub
movs
scas
cmc
mov
xchg
xor
push
sti
hlt
call
stos
(bad)
cmp
cmc
and
daa
popa
lds
adc
sbb
jecxz
jae
aad
push
jnp
mov
retf
and
adc
xchg
xchg
outs
pop
sbb
xor
sbb
adc
(bad)
fcmovu
or
xor
div
enter
fbld
add
mov
add
outs
cvttps2pi
aaa
inc
cwde
lea
jb
mov
into
cld
lds
test
sbb
call
ss
mov
adc
jge
xchg
or
retf
adc
cwde
je
jnp
iret
das
inc
cwde
shr
mov
popf
cmc
adc
shl
hlt
mov
dec
lods
mov
cmp
mov
and
mov
into
popa
xor
imul
mov
fisubr
les
push
pop
add
xor
dec
je
inc
packssdw
xchg
push
mov
xchg
outs
sub
jne
inc
jl
repz
xchg
ins
lds
mov
inc
mov
in
mov
outs
sub
scas
inc
xchg
xor
mov
mov
sub
push
jge
add
cmps
outs
inc
mov
sti
push
mov
cmc
retf
adc
pop
hlt
adc
pushf
retf
pop
pop
retf
sub
out
sbb
mov
mov
retf
sbb
push
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
pop
add
xlat
out
push
xor
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
xlat
add
add
scas
call
xlat
cdq
pushf
sbb
sti
imul
leave
imul
out
scas
jmp
pushf
out
std
lahf
div
in
repz
ror
push
cs
aas
xchg
ror
pop
push
rol
pop
push
fsubr
fisttp
push
cmp
push
mov
xor
dec
mov
sbb
(bad)
in
cmc
mov
mov
ss
or
mov
sbb
outs
mov
jnp
popf
lods
clc
hlt
int
mov
jg
repz
aam
sbb
inc
stos
pop
jg
in
test
jnp
pushf
pop
add
aas
test
ja
dec
xchg
jmp
int
out
cmp
sbb
iret
vpunpckhdq
or
imul
ins
cmp
fistp
cmps
push
popf
jp
rol
cli
push
in
xchg
mov
fdivrp
clc
sub
jecxz
scas
(bad)
retf
add
push
cmp
mov
fiadd
xor
stc
adc
les
mov
xchg
mov
mov
sub
scas
in
fdivr
hlt
push
jp
fisub
femms
xchg
xor
test
jns
test
out
(bad)
cmp
shr
jp
add
cmp
(bad)
sbb
jecxz
cs
movs
xchg
add
stos
daa
fimul
sti
sbb
rcr
xchg
mov
outs
dec
std
enter
sti
pop
inc
ds
rol
jns
pop
pop
addr16
scas
sbb
jbe
test
clc
xchg
mov
ins
retf
mov
pushf
mov
clc
pop
stos
adc
mov
pop
in
fstp
jne
mov
jl
sub
out
shr
arpl
call
jmp
movs
(bad)
sti
xor
movs
jcxz
cmp
xchg
jmp
xchg
clc
xlat
sbb
cmps
add
lea
imul
xchg
hlt
es
inc
imul
adc
push
je
stos
dec
cmp
clc
inc
icebp
xchg
(bad)
retf
les
mov
test
adc
lds
jp
mov
sbb
scas
gs
imul
sahf
pop
push
pop
jle
in
popf
jmp
fldenv
inc
jae
nop
sub
adc
or
ss
xchg
mov
cs
cmp
scas
mov
push
ins
cwde
ins
mov
das
push
imul
aaa
xor
stos
enter
into
mov
push
pop
into
icebp
push
adc
stos
mov
les
cmp
push
imul
in
inc
retf
ja
std
sbb
clc
xor
aas
fcomp
out
adc
inc
fwait
cmps
int3
je
cs
movs
mov
push
bnd
and
movs
cmps
test
xor
cmp
add
cmps
mov
sub
hlt
and
aas
xchg
cmp
inc
sbb
stc
xchg
ins
retf
lahf
data16
sub
hlt
inc
scas
pop
and
gs
mov
push
leave
jbe
sub
jne
push
pop
or
sub
test
inc
jp
bound
pop
add
ja
test
repz
cmp
imul
pop
jns
aas
es
lahf
or
xor
pop
aaa
into
mov
lods
xchg
jae
push
adc
test
call
neg
mov
add
js
add
pop
pop
push
cmp
rol
xchg
sbb
icebp
js
imul
mov
and
data16
sbb
repz
or
shr
aad
dec
sub
call
loope
pop
xchg
lea
sahf
int3
rol
je
mov
and
pop
inc
inc
jmp
jmp
rcr
bound
cdq
lahf
cmp
icebp
outs
mov
pop
icebp
scas
mov
addr16
pop
mov
out
ret
enter
sub
inc
addr16
cmp
xchg
out
ficomp
scas
lds
pop
shl
sub
gs
xchg
fmul
mov
ja
shl
cmp
sbb
mov
dec
in
mov
int3
clc
mov
cmp
test
sub
cmp
cld
mov
arpl
daa
cwde
imul
xchg
fisttp
ret
(bad)
(bad)
adc
or
jle
not
adc
xchg
rol
(bad)
cmp
lahf
fistp
add
push
and
fdivp
add
sbb
sbb
and
jne
je
aam
clc
cld
into
pusha
pusha
test
mov
cli
movs
mov
sbb
dec
arpl
xlat
retf
mov
out
or
push
imul
add
repz
xor
repz
mul
arpl
sbb
cwde
clts
scas
sbb
jae
ins
stos
out
shr
sub
fisubr
out
or
enter
aad
shl
mov
gs
movs
cmp
xchg
addr16
pop
mov
dec
cmp
mov
sti
add
lds
cs
push
retf
cmp
jns
dec
mov
mov
pop
aas
adc
mov
into
nop
loopne
imul
or
leave
cmp
pop
fwait
xchg
dec
add
loopne
cs
call
sahf
mov
jb
jns
sub
or
cli
movs
loopne
aad
iret
movs
inc
mov
ret
setno
and
or
or
sub
push
fstp
sbb
mov
jmp
cmp
or
repnz
clc
dec
pop
xchg
pop
mov
lods
dec
sub
sbb
lds
adc
cmc
mov
xchg
jmp
mov
pusha
mov
enter
clc
outs
loopne
sbb
dec
or
in
scas
fwait
movs
and
in
call
movs
aaa
stc
fdivr
out
test
retf
cdq
jmp
iret
jo
outs
sub
add
jne
popf
popf
in
js
dec
or
adc
int
push
adc
adc
mov
int3
cli
fld
scas
adc
inc
jmp
retf
mov
jmp
loope
and
dec
aaa
pushf
xchg
jnp
cmps
inc
dec
movs
xchg
mov
lock
fadd
fmul
fistp
dec
shr
xor
xor
div
cs
inc
sar
cmc
xchg
pushf
cmps
enter
push
cmp
dec
ins
test
or
jae
retf
jb
xlat
scas
adc
repnz
test
ss
(bad)
cld
mov
imul
ja
add
(bad)
mov
out
repz
cdq
lods
in
fdivr
jmp
jp
clc
les
(bad)
imul
jmp
push
jbe
mov
mov
stos
popa
add
mov
(bad)
or
fwait
das
iret
jne
ins
lock
mov
jmp
jecxz
mov
mov
je
ja
scas
mov
mov
or
movs
jb
ror
popf
inc
fadd
pop
adc
ja
pusha
mov
es
add
sbb
dec
mov
xchg
mov
xchg
xchg
xor
mov
fmul
mov
mov
fwait
out
mov
and
push
jae
inc
jne
ret
leave
in
add
and
mov
push
push
in
shr
mov
jl
pop
out
cmps
ret
adc
call
je
test
in
psubq
fwait
rcl
inc
adc
sahf
(bad)
sbb
int3
fwait
sbb
repnz
repz
adc
add
push
jecxz
xchg
sbb
push
push
push
pmaxub
ss
add
cmp
push
add
inc
shr
jbe
jmp
mov
mov
inc
pop
jp
movs
shl
or
jmp
and
aam
iret
iret
pop
mov
push
mov
mov
ret
pop
xor
dec
inc
popf
pop
fwait
outs
push
xor
sub
clc
mov
fst
in
adc
mov
and
adc
loop
push
xor
sahf
ss
pushf
adc
mov
dec
xchg
imul
daa
mov
inc
pop
push
retf
and
xchg
sub
sub
xchg
inc
mov
xlat
les
movs
cmp
cld
mov
not
mov
pop
jne
mov
fwait
fwait
cmps
cdq
cmp
adc
fcomp
mov
xor
jo
mov
jo
ins
test
sbb
out
push
test
mov
arpl
adc
cli
mov
fs
pop
xchg
push
shl
jmp
adc
inc
ret
aaa
push
mov
cmp
lods
or
or
rcr
in
jnp
retf
pop
outs
push
inc
in
das
pop
mov
lods
bound
adc
sar
add
mov
jo
cmp
pop
popf
cmp
cld
popa
sbb
jbe
lock
in
xlat
mov
inc
retf
add
mov
sub
xchg
add
inc
push
popf
fistp
fidiv
dec
inc
lods
cmp
repz
sahf
jno
fdivp
adc
jmp
retf
dec
rol
or
je
add
dec
lds
pop
cmc
push
test
push
pop
adc
test
fst
add
lds
push
test
repnz
and
jns
jg
in
mov
pop
das
into
cwde
mov
mov
sbb
aad
ret
jl
test
push
cmp
(bad)
int
scas
or
mov
pop
pop
pop
fistp
hlt
dec
pop
sbb
mov
pop
cld
push
ins
add
pop
jns
out
(bad)
inc
out
pop
jecxz
cmp
sbb
and
fisubr
popa
add
aaa
outs
(bad)
mov
(bad)
dec
sbb
dec
and
sub
jbe
sub
imul
mov
retf
cs
pop
sub
fwait
inc
rcr
gs
popf
sub
jmp
in
dec
ss
sbb
add
pop
fldz
out
inc
or
fwait
xchg
add
mov
imul
mov
sub
in
mov
jmp
shld
cmp
popf
shr
shr
loop
jl
cmp
pop
mov
repnz
es
js
mov
lds
mov
adc
inc
icebp
mov
xchg
adc
jns
rcl
xchg
mov
retf
mov
adc
(bad)
jo
xchg
popf
sbb
xchg
xchg
jb
xor
mov
fld
jbe
xchg
pop
pop
xchg
jecxz
gs
cwde
xchg
rol
or
mov
jb
das
ror
push
xchg
idiv
(bad)
push
int
pop
(bad)
mov
repz
mov
mov
xor
pop
lods
mov
mov
(bad)
movs
xchg
mov
xchg
inc
scas
mov
xchg
mov
retf
ja
xor
sbb
imul
push
mov
adc
cmps
dec
int
inc
mov
inc
and
add
mov
inc
pop
push
(bad)
push
dec
(bad)
fist
iret
int3
mov
movs
jb
lahf
push
push
cmp
inc
and
iret
push
adc
and
outs
pusha
or
lods
repz
push
clc
dec
outs
stc
push
adc
xchg
xlat
xor
cli
mov
push
sbb
inc
jp
mov
jns
xor
cli
ss
das
test
inc
adc
and
adc
popa
xor
xchg
jge
mov
std
adc
je
cmps
push
(bad)
std
jmp
pop
cmp
mov
add
lds
leavew
test
inc
das
retf
scas
inc
xor
jecxz
mov
data16
(bad)
or
sar
out
jbe
push
repz
dec
repz
rcl
inc
pop
(bad)
clc
push
div
pop
aaa
inc
push
push
pop
jo
xor
xchg
stos
xor
mov
je
adc
xor
dec
and
xchg
push
jnp
xor
xchg
fild
jecxz
mov
adc
mov
mov
rcr
jl
pop
test
cmp
cmp
repz
stc
mov
xchg
(bad)
mov
ins
enter
retf
xlat
popa
push
dec
ds
aad
lahf
fstp
pop
ins
out
jg
cdq
aas
mov
sbb
and
jl
mov
pop
adc
movs
add
movs
inc
pop
mov
cld
jecxz
mov
jns
xchg
in
push
int
(bad)
push
rcr
add
mov
mov
div
test
xchg
inc
lock
(bad)
stos
xchg
jmp
push
fcom
js
iret
(bad)
retf
pop
(bad)
bound
push
dec
or
mov
xchg
aam
cmp
adc
dec
jns
or
lea
dec
adc
mov
pop
mov
sbb
push
add
fist
jge
out
lods
in
and
stos
mov
sbb
out
pop
lar
jge
mov
ret
pop
hlt
mov
or
cmp
push
imul
push
test
or
pop
xor
test
test
lods
loope
icebp
mov
pop
sub
out
ins
adc
push
lods
jmp
mov
div
sbb
cli
enter
sub
jo
fcom
mov
push
xchg
fdiv
lds
call
aam
push
ins
fsubr
pop
das
mov
retf
in
or
call
(bad)
sbb
or
xchg
stos
cli
inc
or
jns
inc
loopne
cdq
pop
cmp
mov
shl
dec
pop
sar
dec
test
jmp
and
cmp
push
mov
hlt
dec
push
cdq
sbb
sahf
cs
cmp
je
std
xchg
lds
or
lods
dec
fisubr
mov
hlt
sub
mov
mov
pop
cs
sbb
or
cmps
jbe
je
push
or
daa
loope
xor
xor
and
pop
test
repz
add
sbb
pop
jb
int3
inc
xor
xchg
lahf
dec
retf
ja
ficom
xchg
adc
sahf
mov
test
mov
lds
std
sub
cmps
pushf
push
pop
enter
or
jg
cmp
rol
xchg
popa
inc
inc
push
jl
pop
(bad)
jp
outs
mov
out
adc
push
push
inc
jle
sub
mov
mov
in
xchg
mov
mov
popa
xor
jo
add
fld
or
dec
scas
in
xlat
adc
fcmovnbe
stos
inc
jge
ins
mov
pop
in
dec
mov
inc
popf
ret
sbb
fisubr
inc
js
mov
mov
mov
ss
lods
ins
mov
push
xor
xchg
jae
mov
div
xchg
idiv
hlt
shr
add
cmps
fs
add
sbb
cmc
fwait
xchg
leave
push
in
scas
xchg
push
mov
dec
adc
mov
imul
(bad)
pushf
dec
int
inc
push
cmp
jle
test
xor
mov
fucomi
fisub
mov
jecxz
xor
dec
inc
loope
push
inc
sbb
pop
mov
pop
pop
fwait
dec
mov
cmp
add
sub
dec
pop
outs
call
mov
sbb
ins
mov
call
iret
push
push
int
xor
add
mov
push
pop
inc
pop
pop
push
mov
push
sar
fwait
push
sbb
jmp
mov
pusha
pop
icebp
stc
xor
and
add
fcomip
mov
jle
jle
dec
data16
push
sbb
test
xchg
ins
lds
mov
pushw
inc
aad
aad
fimul
test
mov
adc
pushf
out
js
push
push
movs
stos
mov
or
push
inc
inc
or
dec
mov
mov
movs
inc
das
jecxz
in
clc
pop
fcom
outs
mov
sub
movs
mov
xor
je
jl
push
lock
jb
das
imul
xor
test
ins
stc
push
jle
jb
adc
cmps
movs
clc
not
mov
outs
fs
ins
je
jge
mov
jb
int
ins
lods
test
add
xchg
jmp
mov
test
(bad)
jno
mov
mov
fwait
ror
ins
inc
cmp
cmp
out
imul
pop
push
mov
push
lods
cdq
je
pop
je
rol
xchg
lock
dec
stos
jmp
fld
and
repz
loopne
inc
adc
cmp
add
sbb
sbb
mov
test
test
cld
dec
dec
pop
enter
in
pop
or
fld
mov
jb
dec
add
or
adc
or
push
cdq
(bad)
mov
sub
push
repz
push
(bad)
jne
ja
retf
dec
mov
(bad)
icebp
rcl
fbld
push
arpl
repnz
cmp
xchg
push
pop
int
pop
idiv
push
and
mov
out
sub
and
lods
mul
imul
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
push
outs
add
xchg
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
enter
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
into
jae
xlat
xchg
mov
cmps
mov
jb
fcomp
loope
ja
pop
in
repz
fidiv
xor
cs
inc
fcomi
(bad)
cld
xor
push
jns
scas
rcr
cmp
cmp
call
nop
mov
and
int
mov
lods
xchg
mov
xlat
and
bnd
mov
in
popf
jno
add
lods
xor
(bad)
in
(bad)
sub
adc
mov
lock
push
jge
push
xor
aas
inc
popa
loope
jle
es
lea
inc
push
and
add
lods
or
dec
dec
cmp
hlt
and
mov
data16
(bad)
push
sbb
jne
lahf
inc
mov
in
das
sbb
mov
das
repnz
push
mov
xchg
inc
cmp
cmp
out
scas
sbb
mov
sbb
pop
lods
pop
in
xor
ffreep
or
fiadd
enter
mov
sub
inc
movs
pop
dec
xor
inc
mov
and
inc
push
xchg
mov
push
mov
(bad)
pop
inc
lods
jae
cmp
add
arpl
add
das
or
cld
push
sub
out
nop
cmp
sbb
mov
add
sub
lods
outs
inc
dec
stos
push
jp
or
sbb
add
aad
mov
pop
into
cmp
loopne
sbb
push
mov
mov
repz
sub
jno
dec
pop
lds
ss
dec
xchg
pop
aad
mov
lods
jno
movs
repz
loop
pop
ds
in
fnsave
cmp
lods
lods
les
dec
cmps
cwde
cld
push
pop
test
pop
(bad)
dec
cmc
mov
mov
ja
dec
or
stos
adc
test
int
mov
ss
dec
movs
inc
or
and
fwait
sti
in
test
and
mov
das
xchg
addr16
nop
shr
and
or
lahf
mul
outs
ins
add
mov
les
icebp
sbb
xchg
imul
xchg
ret
in
add
retf
aas
div
mov
dec
mov
in
jle
mov
and
inc
sbb
shl
dec
shl
ret
shl
jno
shl
dec
hlt
mov
mov
stc
mov
inc
pop
loope
xchg
or
jg
add
mov
jns
adc
fadd
cli
ret
lods
xor
cmps
test
ins
test
aas
cmp
sub
push
push
and
push
jg
nop
clc
sub
packuswb
adc
daa
mov
test
push
test
jmp
iret
fxch
xor
xor
inc
cld
xchg
scas
inc
or
dec
nop
adc
adc
addr16
pop
aas
mov
outs
ror
in
stos
pop
jno
adc
leave
outs
adc
pop
out
and
cmp
call
call
pop
sbb
dec
imul
pop
mov
sub
loope
sbb
mov
pop
dec
cmp
and
sbb
pextrw
lds
not
cdq
dec
retf
pop
adc
lods
sub
xchg
imul
cmc
xchg
psllq
xor
std
xchg
xchg
mov
adc
mov
jmp
mov
jmp
sbb
fistp
fdivp
push
push
jl
cli
adc
out
(bad)
test
pop
push
repz
inc
into
cmps
xchg
dec
inc
cmp
test
sub
or
cld
test
jmp
sbb
adc
cmc
loopne
fild
int
jne
mul
inc
add
rep
dec
ja
mov
sbb
cmc
xchg
retf
bound
fcmovnbe
rcr
loopne
cdq
test
ret
aas
out
lock
fist
ss
xchg
and
mov
pop
and
dec
lods
pop
in
sub
cwde
repnz
adc
sar
cs
sbb
mov
xor
push
sbb
mov
sub
call
pushf
xchg
lahf
mov
xor
test
lods
adc
dec
pusha
jno
data16
sbb
cli
pop
sub
lock
push
popf
jae
dec
aas
adc
fisttp
cmp
push
dec
push
ins
ficomp
sahf
loop
ror
mov
ins
mov
je
or
mov
(bad)
push
cmps
adc
movs
mov
jle
js
loopne
and
push
leave
sub
(bad)
xor
inc
mov
ss
fyl2xp1
call
cld
jp
jns
aam
xchg
js
fist
test
pop
sahf
push
data16
push
add
test
cmp
std
inc
enter
imul
fst
loop
popa
push
mov
xor
lds
pop
fcmovne
and
sbb
push
dec
fistp
mov
rcr
scas
mov
cmp
repnz
xor
push
fwait
les
jge
jo
mov
jnp
sbb
mov
lods
nop
call
mov
xchg
je
loop
sti
sbb
push
add
mov
jb
sub
stc
xchg
test
retf
or
xor
add
pop
arpl
dec
dec
mov
mov
xchg
repnz
sbb
mov
sub
pop
sbb
repz
movhps
mov
sub
jp
dec
inc
inc
lock
mov
daa
mov
push
test
dec
and
std
pop
xor
push
mov
shl
add
popf
pop
xchg
jl
pop
test
adc
daa
aas
nop
mov
jle
dec
adc
mov
loopne
push
lock
minps
cmc
mov
jno
cmps
xor
push
sub
stos
jl
in
clc
gs
push
mov
dec
jb
outs
scas
scas
out
mov
pop
sub
mov
mov
mov
xor
xlat
jge
movs
xlat
fucomip
mov
sub
pop
push
stc
(bad)
loop
test
push
mov
sub
(bad)
mov
or
lahf
pusha
sbb
or
cmps
pop
mov
mov
jg
ins
sbb
test
and
stos
mov
out
inc
pusha
sahf
scas
adc
xchg
int3
pop
mov
test
fsub
add
js
jecxz
push
ins
xlat
scas
aad
es
test
(bad)
fld
sahf
xchg
dec
out
fist
imul
test
ror
sub
adc
js
sub
cmp
movs
aam
stc
inc
int
inc
push
in
stos
ins
ins
mov
popa
fidivr
nop
xor
ror
ret
dec
mov
xchg
adc
cmps
mov
retf
scas
sbb
dec
jecxz
mov
push
sub
call
out
rcr
lods
fistp
mov
div
or
xchg
pop
xor
lods
adc
in
inc
aam
dec
mov
rcl
call
lods
hlt
(bad)
outs
mov
sti
pop
cs
xor
repnz
movs
push
mov
js
jmp
adc
xchg
ins
sbb
push
xchg
cdq
(bad)
mov
sbb
mov
add
iret
push
ror
cmp
and
lea
mov
pop
inc
xchg
xlat
jne
int
or
add
jb
leave
xor
repz
xlat
test
pop
or
(bad)
fstp
into
lock
dec
cmp
mov
ins
out
and
pop
xor
out
daa
(bad)
cli
dec
shl
push
(bad)
iret
dec
sbb
mov
retf
inc
xchg
stc
sub
cmp
stos
rol
je
addr16
mov
inc
xor
push
dec
sbb
cmp
stc
sbb
fnsave
fst
sbb
cmp
adc
mov
push
xchg
inc
clc
add
push
jp
cmps
popa
jbe
mov
xlat
add
ror
bound
dec
push
pop
sbb
xchg
out
xor
icebp
scas
movs
fcom
xchg
xor
fimul
ret
xor
stos
data16
daa
add
cdq
aaa
movs
xchg
mov
add
movs
lahf
xlat
cmp
sub
cmps
adc
xor
mov
cli
lock
sbb
jg
xchg
mov
mov
sbb
out
gs
stc
cmc
xor
fmulp
jl
add
xchg
ret
adc
mov
sbb
out
adc
aas
sub
push
fdivr
in
ret
in
outs
add
mov
jle
mov
sahf
push
push
cmp
inc
cld
outs
or
adc
xchg
rcl
sbb
nop
jno
retf
mov
lock
xchg
outs
(bad)
push
(bad)
cld
xor
(bad)
adc
enter
xor
pop
fsubr
xchg
sub
xchg
xchg
je
mov
cmp
jmp
add
daa
imul
sbb
xchg
sbb
pop
test
jg
and
push
mov
jmp
test
stos
std
sub
xchg
sti
retf
sub
pop
pop
gs
jmp
movs
std
rol
push
ret
cmp
lahf
xor
xchg
dec
push
(bad)
sbb
jb
add
dec
push
jnp
dec
loop
fcomp
bound
or
int3
pop
hlt
jae
jns
iret
or
shl
outs
xor
inc
cs
icebp
aas
(bad)
mov
push
sbb
add
xor
ds
into
(bad)
cmps
stos
ss
xchg
ds
test
fwait
outs
push
inc
dec
pop
add
out
lahf
out
neg
add
and
fwait
into
adc
dec
sahf
xor
aad
jge
inc
hlt
sub
in
fisub
repnz
adc
dec
mov
imul
jl
jmp
fst
xchg
ret
pop
mov
in
pop
or
and
push
shr
mov
lahf
movs
popf
loopne
out
test
sahf
dec
sbb
imul
inc
push
popa
lods
out
push
push
mov
into
jge
dec
inc
mov
punpckldq
adc
fsubr
jnp
inc
pop
add
mov
pop
rcr
lea
or
imul
or
stos
sti
push
in
aad
imul
push
cmps
add
inc
cli
mov
addr16
inc
pop
mov
jmp
xchg
pusha
in
xor
not
dec
icebp
div
xchg
fmul
stos
add
inc
fnclex
mov
call
jmp
stc
(bad)
fsubr
arpl
pop
repz
xor
fnstsw
cmp
xchg
into
out
ins
mov
or
bound
aaa
sub
aam
scas
dec
adc
jno
mov
pop
repz
cmp
in
int3
add
inc
(bad)
aad
adc
sti
test
mov
retf
clc
fldenv
icebp
sub
sbb
xlat
and
in
out
test
push
clc
xchg
pop
iret
mov
les
and
mov
lods
dec
pop
ret
call
retf
inc
retf
(bad)
loopne
stc
into
mov
sub
mov
test
jp
pop
das
jno
arpl
js
pop
pop
push
push
add
ds
or
xor
mov
aam
add
adc
push
pop
push
adc
loop
imul
sar
int
les
jno
cmp
loope
and
ins
mov
dec
or
outs
pop
cmp
stos
mov
cmps
lods
dec
sar
jle
mov
ja
jmp
sbb
pushf
xor
(bad)
shl
scas
outs
xor
enter
das
inc
pop
pop
fdivr
cmps
xchg
addr16
push
cmp
lock
jb
cmc
cmps
sub
push
test
inc
icebp
std
xchg
ret
cs
jge
push
cs
pop
jl
inc
cdq
outs
mov
mov
dec
int3
ds
loop
sti
shr
pop
movs
aam
mov
inc
out
adc
jb
pop
mov
pop
jmp
lods
mov
sbb
dec
and
rcr
dec
mov
sbb
jns
add
xor
jg
shl
cmp
jo
stos
cmp
mov
mov
jnp
push
(bad)
sbb
mov
test
and
test
in
popa
sub
inc
(bad)
or
or
sbb
movs
mov
stc
mov
jmp
mov
adc
dec
mov
cmp
fbstp
(bad)
popw
sbb
lahf
cmp
(bad)
outs
bound
push
pop
xchg
inc
call
adc
(bad)
mov
inc
sar
xor
cmp
das
stos
xor
pop
jmp
rcl
cmp
xor
jmp
xchg
and
imul
pop
fmul
ret
in
mov
or
rcr
retf
and
mov
les
xor
push
repnz
ret
and
loopne
cmp
adc
xor
sahf
sub
adc
cli
push
sub
adc
out
rol
mov
in
fbld
sbb
lds
lods
push
std
shl
imul
mov
fs
pusha
out
lahf
dec
hlt
stos
lea
fcmovnb
jmp
cmp
or
sti
xor
jge
xor
sub
leave
js
and
sub
cmps
ret
xchg
push
jnp
dec
ss
inc
lea
sbb
pop
pop
inc
xchg
arpl
movs
and
add
lahf
dec
mov
mul
mov
mov
fisttp
int3
xor
in
dec
sub
pop
sub
js
les
dec
fwait
pushf
add
jae
cwde
scas
repnz
xchg
pop
je
ja
stos
jae
ins
repz
mov
inc
ins
ins
push
cld
in
cmp
push
mov
cmp
fidivr
pop
mov
scas
xchg
ror
jp
lahf
leave
iret
mov
in
push
pop
dec
and
adc
popf
mov
gs
js
jecxz
push
repnz
xor
(bad)
in
sbb
pop
fild
mov
mov
(bad)
mov
xchg
ins
xchg
push
pop
outs
xchg
jno
and
arpl
or
movs
inc
xchg
inc
in
out
stos
push
test
pop
sub
(bad)
cmp
jle
mov
ja
dec
xchg
ja
mov
call
mov
cwde
sbb
cmp
mov
mov
int
sbb
mov
push
and
adc
inc
inc
push
popa
lds
and
sbb
sahf
and
push
pop
inc
xchg
mov
mov
inc
and
mov
test
pop
dec
sub
dec
mov
pop
stos
xor
repz
dec
xor
fstp
lahf
cmc
mov
popa
mov
adc
or
shl
push
(bad)
in
pop
adc
das
or
inc
ja
sbb
cmp
push
ret
pop
mov
pop
mov
inc
fs
stc
ror
and
mov
and
add
mov
mov
shl
arpl
shl
jl
cld
test
pop
stos
fsub
dec
add
push
add
stos
sub
inc
jne
mov
jb
test
dec
sahf
mov
sbb
push
mov
mov
arpl
shl
fwait
and
into
dec
mov
jg
or
add
pop
in
cmp
push
aad
(bad)
cmp
jns
cld
repz
bound
leave
or
adc
test
mov
fst
stc
enter
and
push
sbb
lahf
inc
pop
ret
int3
jmp
mov
ds
shr
add
xchg
fcom
cwde
daa
cmp
fs
mov
xchg
or
sub
dec
scas
not
pop
xor
mov
inc
and
scas
jnp
pop
jmp
(bad)
test
daa
fld
jl
xchg
sbb
cmps
sub
or
out
cwde
mov
jecxz
enter
dec
out
sahf
shl
mov
dec
dec
mov
iret
daa
sub
cmps
mov
icebp
pop
jmp
ja
in
add
jmp
mov
movs
(bad)
int
dec
jno
movs
inc
dec
loopne
inc
mov
sub
mov
mov
push
pop
inc
into
pop
mov
ret
mov
imul
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
icebp
pop
and
in
aam
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
adc
jmp
out
mov
in
int
and
(bad)
clc
xchg
int
fwait
fs
ss
mov
xchg
int3
ins
mov
in
out
pop
jns
push
add
test
mov
adc
es
ror
fcom
mov
in
jb
cs
mov
jg
lahf
sbb
sub
jns
jg
jns
test
pushf
mov
or
sbb
out
add
mov
das
jae
inc
imul
mov
or
outs
jne
push
in
sbb
scas
push
mov
push
call
fdivr
scas
mov
cmp
cmp
fld
lea
pushf
aas
jb
repnz
sub
mov
clc
inc
push
add
pop
xchg
xchg
out
test
mov
pop
fdivp
mov
outs
cmp
stc
inc
jmp
mov
or
mov
std
rcl
out
sub
xchg
retf
sahf
adc
jo
call
rcl
cwde
loop
aas
inc
cld
fimul
cmp
xor
(bad)
fcom
aas
push
push
out
jp
pusha
mov
xor
cs
loopne
cmp
push
ja
inc
push
shr
xor
add
xlat
shl
pop
xor
xchg
mov
rcr
dec
or
out
cvtdq2ps
xchg
or
cmp
cdq
cmps
pop
rol
jb
retf
jbe
or
popa
xor
and
push
jno
jp
popf
stos
jnp
mov
xchg
fs
and
mov
pop
xchg
in
mov
sub
jecxz
mov
in
icebp
push
jo
push
jb
xlat
xlat
inc
fimul
jp
mov
jp
dec
cmc
mov
jns
mov
pushf
in
sub
scas
xor
shr
ror
sbb
out
push
test
retf
(bad)
push
leave
icebp
adc
(bad)
cdq
lock
fisub
xor
fcomp
pop
jns
sahf
dec
mov
sti
mov
test
xchg
rcr
(bad)
add
push
push
inc
xchg
sbb
mov
imul
mov
fiadd
mov
les
pop
xchg
mov
loop
sub
pop
ret
arpl
sub
ins
mov
jno
xchg
cs
mov
outs
sahf
aam
icebp
mov
inc
jae
out
rcl
(bad)
aas
push
int
fwait
xor
popa
mov
sub
call
pop
fdiv
enter
dec
sbb
adc
dec
sbb
ret
cmc
lock
jle
mov
(bad)
cmc
mov
add
loope
fnsave
or
inc
jbe
and
or
cs
fild
or
int
xor
mov
js
add
push
aas
jbe
push
imul
cmp
clc
push
mov
stos
repnz
loop
mov
out
sbb
mov
pop
arpl
cdq
jno
retf
jmp
mov
mov
xlat
(bad)
jmp
imul
retf
leave
jne
unpcklps
push
test
fild
push
pop
xor
lea
fbstp
mov
loop
mov
jp
sbb
fdivr
xlat
lds
popa
jle
cmp
jmp
bound
or
iret
in
cmp
jge
jmp
aaa
pop
add
inc
jp
xchg
out
inc
jecxz
adc
xchg
add
loop
aaa
icebp
dec
sar
dec
in
sbb
out
dec
jl
sbb
sub
out
dec
iret
scas
fcmovne
dec
icebp
aaa
ins
not
aam
loope
xchg
inc
dec
add
and
outs
or
or
cmp
lock
push
mov
cdq
adc
ja
hlt
cmpxchg
mov
nop
popf
das
leave
mov
push
or
retf
nop
push
mov
popf
dec
or
stos
aad
mov
push
lock
cmp
int
lods
aam
pop
xor
dec
and
scas
jnp
pop
std
sbb
cwde
ins
xchg
test
mov
mov
sub
mov
push
or
mov
mov
std
rol
icebp
ret
sub
mov
push
pop
jle
scas
jo
adc
and
push
shl
sbb
add
jle
cmps
adc
les
jnp
fld
pop
rol
add
lock
sub
mov
jbe
pop
int3
neg
out
idiv
jge
jns
inc
add
mov
push
lds
dec
popa
iret
push
nop
ins
and
push
pop
cwde
popf
xlat
mov
data16
pop
pop
dec
and
pop
stos
mov
cwde
(bad)
xor
jmp
cli
cdq
xchg
aam
cmp
inc
mov
lahf
ins
pop
jae
and
shl
xchg
in
scas
cwde
adc
inc
out
mov
gs
adc
popa
push
mov
cmps
jb
hlt
imul
adc
gs
(bad)
movzx
dec
mov
mov
out
sbb
inc
ins
aas
add
push
xor
out
push
jle
arpl
pop
adc
pop
sbb
retf
fs
xlat
mul
mov
jnp
je
outs
test
xchg
pop
clc
jge
ret
jb
inc
inc
pop
sub
sub
mov
aad
dec
jge
call
add
out
adc
enter
jno
(bad)
push
mov
and
cld
dec
movs
inc
bound
fdivr
imul
ja
push
lods
ss
hlt
fwait
outs
ins
scas
movs
mov
push
jge
inc
or
test
inc
es
mov
mov
xchg
imul
call
mov
hlt
fdivp
push
cmc
cld
ret
fst
fld
add
adc
xor
push
sub
add
test
cld
jne
fild
inc
bound
test
mov
sti
gs
inc
pop
pop
mov
or
hlt
and
cmp
call
mov
dec
inc
movsx
push
and
mov
xor
(bad)
push
xlat
shr
push
pop
push
aam
stos
lock
dec
cmp
push
push
(bad)
imul
mov
clc
icebp
jbe
push
and
lock
pop
ins
mov
lock
push
sar
add
push
mov
mov
ror
and
pop
push
pop
jns
mov
xor
or
cmp
adc
mov
gs
jo
outs
sbb
push
mov
jp
lds
sbb
pop
mov
test
mov
jne
icebp
cmp
jbe
and
pop
pop
mov
stos
in
(bad)
(bad)
(bad)
mov
das
push
imul
lock
push
and
outs
cld
ins
jno
mov
imul
push
add
sbb
jle
mov
add
add
lods
es
jmp
cmp
dec
lahf
ins
ret
jmp
mov
xchg
jge
sti
mov
cmp
addr16
push
int3
fist
mov
mov
out
int3
mov
fs
jnp
pushf
ret
jle
pushf
xchg
inc
mov
push
in
mov
out
mov
retf
je
inc
mov
xor
aad
dec
push
inc
mov
push
stos
das
xchg
mov
cmc
ins
adc
jge
cmps
dec
fstp
jns
mov
pop
or
int3
or
xchg
mov
mov
dec
mov
or
inc
add
push
popf
dec
int3
into
repz
retf
xchg
lea
push
in
jecxz
or
inc
mov
and
adc
std
cli
adc
adc
stos
adc
xchg
ss
add
mov
fst
aam
ja
xchg
dec
xchg
pushf
cmp
out
inc
loop
inc
sbb
mov
repz
out
sbb
cmp
mov
inc
push
aaa
cmps
and
sub
rcr
sub
xor
icebp
mov
dec
or
dec
cmp
cmc
pop
pushf
movs
jmp
sar
xlat
(bad)
jmp
daa
jno
in
mov
stos
adc
or
lods
add
mov
jno
jbe
(bad)
sbb
out
mov
and
or
adc
xchg
rcr
sti
adc
xor
sbb
gs
cmp
test
(bad)
movs
sti
out
outs
mov
pop
lock
push
mov
pushf
movs
stos
test
(bad)
into
sbb
test
stos
outs
and
sbb
fldcw
fcmovne
out
les
xchg
(bad)
adc
pop
xchg
pop
and
xchg
jecxz
popf
sub
nop
jmp
loop
mov
or
neg
sbb
movs
mov
xchg
lods
dec
xlat
inc
repz
aam
fucomp
mov
dec
loop
stc
adc
sbb
inc
outs
xor
ds
fmul
out
gs
push
inc
cmps
xchg
mov
sar
mov
xor
jp
lock
fwait
push
cli
inc
popa
adc
xchg
push
test
out
mov
scas
(bad)
movs
imul
push
inc
sbb
retf
stc
popf
loope
call
jmp
push
xchg
mov
cmp
sahf
jle
cwde
shl
mov
sbb
lea
mov
fsub
(bad)
mov
aas
or
rcr
dec
jnp
in
addr16
inc
mov
leave
bound
mov
sub
xor
mov
pop
xchg
add
cmp
mov
lods
cmp
sub
sub
ficom
fistp
xchg
iret
sub
sbb
cmps
sti
fucom
(bad)
cmps
lock
adc
frstor
retf
mov
fwait
lahf
push
cmp
leave
sub
jo
sub
addr16
pop
mov
fstp
jnp
adc
cmp
ror
aam
scas
ss
sahf
push
lods
jmp
cmp
push
sbb
fcomip
mov
call
aam
dec
inc
enter
mov
mov
popf
mov
jae
push
push
xchg
xor
inc
repnz
mov
push
fdivr
adc
adc
aam
and
sti
imul
push
mov
sbb
leave
sub
add
jle
repz
sub
test
retf
cmp
movs
fwait
push
ss
in
cmc
mov
int
jns
lea
imul
aam
jle
or
ret
movs
(bad)
cmp
imul
(bad)
or
fcomp
xchg
loope
xor
mov
mov
mov
or
mov
ret
sbb
jge
ss
ss
and
je
out
data16
out
sub
dec
pop
or
stos
xchg
mov
icebp
jae
add
pop
fld
and
imul
fdivr
pop
xchg
or
jmp
aaa
mov
cmc
movs
xlat
aaa
jo
movs
movs
cmps
mov
daa
adc
or
in
leave
movzx
je
jb
or
adc
pop
clc
jo
pusha
sahf
mov
push
ss
data16
ins
mov
out
xlat
mov
(bad)
push
aas
(bad)
mov
shl
mov
mov
and
and
popa
cmc
mov
sub
mov
pop
std
push
sub
pop
addr16
fst
or
dec
sahf
dec
call
loop
jbe
mov
fwait
lds
enter
jne
fiadd
neg
mov
mov
pop
cld
fidivr
xlat
ins
das
xchg
std
sti
ds
sub
es
int
test
dec
ins
dec
fdivr
sub
fs
dec
sub
jge
aad
jo
std
xor
ret
adc
jns
xchg
sbb
mov
and
xchg
jl
popa
xor
mov
pop
call
clc
ret
jg
popa
(bad)
jl
or
or
int3
sahf
xor
inc
push
sar
pop
int3
sbb
out
xor
push
push
add
pop
cmps
cmp
sbb
test
add
ins
ja
cmp
mov
push
mov
nop
fmul
push
retf
and
clc
fucomp
aad
push
or
mov
push
dec
pop
lock
and
jnp
sbb
add
adc
or
dec
push
push
fsubp
xchg
cmp
mov
xchg
pop
cmp
push
repnz
cld
loop
push
mov
cmp
adc
sahf
pop
dec
cmp
in
imul
fld
mov
std
fsubr
ss
mov
cmp
add
mov
cli
popa
fcmovnbe
add
cmp
mov
aam
sar
loop
cmc
ucomiss
imul
cli
xchg
mov
sbb
push
(bad)
movs
mov
mov
pushf
mov
popa
(bad)
enter
jne
test
aaa
mov
cmp
jp
je
jp
mov
nop
jbe
jg
scas
jp
pop
cmp
test
cmp
xlat
lea
(bad)
fprem1
pushf
jne
adc
aas
test
lahf
pop
and
pop
sti
mov
cmp
xor
add
cwde
jnp
dec
mov
call
out
out
and
and
int3
sbb
add
out
xchg
jnp
inc
ins
mov
push
dec
repz
pop
lods
mov
(bad)
cmc
inc
(bad)
jmp
mov
pop
(bad)
mov
clc
mov
sbb
adc
mov
inc
test
dec
pop
push
dec
ss
cmp
xchg
push
sbb
iret
pop
loopne
xor
in
aas
mov
bound
sbb
not
sub
pusha
adc
pop
jmp
sbb
xchg
mov
int3
jno
sti
pop
jmp
sti
jno
pop
cs
and
enter
adc
test
mov
sbb
push
test
das
or
bound
inc
cli
inc
add
jmp
add
lds
xchg
xchg
and
ds
fxch
test
push
(bad)
cmp
cwde
cmp
add
imul
int3
dec
xor
or
xor
lods
int
popf
lahf
out
jb
add
(bad)
bound
jnp
push
mov
fnstenv
outs
stos
jno
and
test
xor
ret
mov
out
outs
sbb
arpl
(bad)
mov
lods
push
loop
push
jl
push
aas
js
cmp
cmp
xor
xor
jo
mov
out
lods
jno
xchg
sub
dec
jmp
stc
dec
mov
imul
int
shr
(bad)
fdivr
jo
popa
xchg
pop
shl
aas
push
sub
cmp
dec
push
mov
scas
jmp
cli
dec
mov
cwde
(bad)
mov
pop
ror
cmp
pop
mov
xchg
into
fadd
icebp
repnz
(bad)
sub
and
cmp
jg
mov
add
push
ret
loope
int
lods
add
xchg
jecxz
pop
pop
fisttp
xchg
jecxz
push
dec
xchg
movs
ds
pop
mov
imul
retf
dec
and
add
inc
mov
mov
and
ret
loop
sbb
mov
mov
shr
call
clc
sub
add
xor
sub
cld
clc
jnp
aam
jnp
scas
jmp
(bad)
test
xchg
inc
shl
adc
and
xchg
push
stc
outs
cmp
call
aaa
leave
jno
push
mov
or
das
fnstsw
in
movs
lea
adc
or
push
fstp
imul
push
loopne
dec
xor
dec
imul
sbb
adc
test
add
jge
ja
mov
jo
mov
push
adc
pop
jl
fsubr
fs
jmp
jl
mov
adc
jns
ins
ret
dec
std
pop
jp
and
dec
ret
aad
jmp
inc
push
shr
sub
push
dec
rcl
movs
cmps
fidiv
push
mov
icebp
imul
fstp
addr16
cwde
cmps
mov
call
mov
repz
data16
iret
dec
pop
mov
je
mov
repz
daa
outs
scas
sub
push
cmps
sub
and
xor
xchg
call
adc
bound
dec
je
push
mov
fisttp
cmp
mov
das
ja
push
daa
in
adc
popf
push
scas
fwait
push
jae
mov
out
(bad)
scas
loope
xor
call
dec
stos
push
cwde
scas
fcom
jns
clc
pop
xor
pushf
dec
mov
fcom
js
or
out
jg
stc
out
jg
stc
mov
jns
in
sbb
xchg
xchg
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
xlat
test
sbb
ret
shl
cmps
dec
dec
ja
out
xlat
jmp
cwde
mov
cdq
out
mov
dec
xor
fdivr
cmp
jmp
fsincos
(bad)
clc
mov
jo
lahf
push
inc
and
into
jb
or
jne
inc
or
mov
pop
inc
fs
aas
rol
out
sar
mov
dec
jmp
jmp
shr
outs
es
push
inc
loop
adc
jle
arpl
iret
mov
div
sahf
loope
mov
jle
push
ins
inc
xlat
fild
mov
es
jp
dec
hlt
add
das
mov
fnstcw
xchg
and
ins
mov
mov
add
fimul
pop
cmp
xchg
(bad)
push
jge
fcomp
je
pop
popf
and
cli
fdiv
and
pop
push
or
call
mov
mov
push
cmp
stc
pop
adc
shl
xor
cwde
iret
hlt
dec
in
mov
push
jbe
ins
in
pop
stc
arpl
pop
xlat
pop
sbb
adc
adc
xor
in
pop
push
jmp
mov
je
lds
sbb
push
inc
fnstenv
inc
jg
push
jmp
shr
imul
unpcklps
adc
cmp
fsubr
jno
cmp
data16
pop
outs
sbb
(bad)
cdq
mov
xor
cmps
sbb
dec
sbb
stos
(bad)
mov
inc
and
cs
or
test
aas
sub
sbb
lods
imul
retf
sub
shr
mov
test
and
dec
pop
not
dec
popa
icebp
outs
jno
pusha
ret
test
xor
scas
ss
into
clc
add
fist
dec
in
daa
cdq
cmps
(bad)
cmp
rol
sar
mov
int
xchg
lods
pop
jg
mov
xchg
mov
call
setne
lds
ret
xor
(bad)
mov
js
xchg
aad
adc
cmps
lock
and
sbb
mov
inc
xchg
jbe
ror
retf
test
mov
xchg
out
je
sbb
pop
scas
icebp
aas
or
aad
mov
mov
gs
mov
nop
or
pop
dec
and
fsubr
push
lahf
test
ficom
cli
add
mov
hlt
mov
inc
jo
not
fmul
or
jl
retf
inc
retf
adc
inc
xchg
stos
inc
ins
out
jge
call
(bad)
cmps
adc
fwait
in
push
pop
jmp
pop
retf
and
mov
fldcw
aad
pop
inc
loop
popa
xchg
xor
inc
add
jbe
pop
out
push
test
sbb
add
icebp
int3
sbb
cs
ds
cmps
test
mov
inc
xor
stos
mov
dec
lock
cdq
mov
adc
sbb
popa
or
lds
int
jbe
ins
jae
ins
jno
(bad)
in
aaa
jmp
push
adc
nop
push
arpl
mov
fadd
cmp
pop
adc
push
pop
call
pop
adc
popf
stc
mov
jecxz
mov
paddusw
loopne
xor
(bad)
fwait
loope
or
push
(bad)
add
fcomp
iret
jmp
mov
mov
cmps
imul
inc
gs
mov
jmp
sub
adc
sub
test
scas
pop
jo
sahf
andps
cdq
pushf
add
(bad)
pusha
xlat
adc
cmp
sub
stc
add
in
ret
xor
mov
(bad)
loopne
lahf
scas
mov
xchg
es
(bad)
pop
retf
stos
in
or
loopne
and
cmp
(bad)
mov
stos
stos
jbe
add
sub
call
add
sahf
scas
imul
push
aam
leave
call
pop
xor
loope
mov
inc
stos
dec
hlt
pushf
icebp
xchg
fwait
mov
lahf
movs
sti
fild
in
idiv
xchg
add
test
pop
xchg
cmc
sbb
int3
mul
inc
cwde
pop
clc
(bad)
sub
cdq
(bad)
ins
cld
or
int3
pop
mov
fnstcw
xchg
push
inc
jecxz
daa
movs
enter
clc
fwait
jo
jecxz
aas
cli
(bad)
xchg
xor
pop
addr16
aas
addr16
xor
jbe
mov
std
shr
(bad)
rcl
jg
xor
imul
into
sti
outs
mov
mov
xor
jae
repz
mov
fmul
sti
xchg
or
push
mov
call
(bad)
mov
aas
cmp
dec
cmp
mov
fcom
sub
loop
push
leave
sub
ret
aam
sub
imul
push
dec
bound
adc
daa
pop
ror
jno
mov
rol
rcl
cmps
ds
mov
pop
xor
add
jbe
add
push
mov
cmp
xchg
sbb
jp
sahf
jle
jmp
push
xor
jmp
adc
lods
or
gs
mov
jp
sub
inc
in
fstp
push
push
pop
pop
dec
xor
test
imul
pusha
shr
icebp
das
pusha
push
inc
stos
pop
shr
sub
shl
pusha
loopne
enter
add
cmc
int
adc
mov
xor
jns
fnstsw
stc
pop
add
push
ds
mov
icebp
cdq
ja
fisubr
sti
fs
pushf
xchg
xor
ret
xchg
cmc
not
sbb
mov
mov
pop
call
fs
mov
ins
fwait
pop
pop
jmp
nop
cmps
mov
push
push
popa
nop
push
fwait
sti
movs
loopne
es
add
or
iret
outs
push
cwd
stos
loop
ja
imul
mov
jb
shl
mov
ss
in
jecxz
scas
popa
or
cmp
jns
push
ret
(bad)
cmc
daa
inc
mov
add
xor
daa
push
test
sbb
sub
pop
fdiv
gs
push
fistp
sub
fucom
mov
xchg
popa
fild
call
outs
lock
enter
and
cmp
sub
ja
mov
(bad)
jns
add
stc
xchg
fistp
mul
neg
pop
fistp
cld
pmuludq
inc
clc
xchg
not
rol
jo
ret
shld
rol
cmps
dec
test
jns
(bad)
daa
and
push
xor
sbb
pop
fistp
sub
xchg
jne
ds
cdq
mov
loopne
jg
outs
repnz
fstp
popa
jecxz
xlat
inc
inc
and
add
lock
cmc
pop
cmp
jl
mov
mov
js
sbb
ret
int
inc
test
lds
cmps
mov
cwde
xor
xchg
sbb
fdivr
push
ror
pop
cmp
dec
add
jbe
or
push
pushf
mov
sahf
sub
loop
mov
add
(bad)
in
cli
les
and
add
xlat
js
jno
dec
sub
aas
ins
adc
add
dec
xor
sub
jae
push
std
call
test
pop
xor
ss
ret
dec
jecxz
fdiv
inc
jmp
stos
call
pop
push
pushf
int
xor
(bad)
mov
adc
gs
in
es
pop
mov
add
leave
add
je
and
jae
outs
shl
sbb
add
cli
inc
mov
add
loope
pushf
cmps
clc
test
jle
int
(bad)
popw
fcom
test
jmp
jmp
or
test
call
inc
xor
pusha
popa
mov
loopne
xchg
jbe
xchg
or
outs
dec
cmp
inc
mov
mov
imul
mov
dec
jbe
mov
not
fistp
ret
mov
clc
sub
inc
jmp
push
ror
pop
ds
and
sbb
inc
out
cmp
das
pop
aas
cdq
cmp
dec
call
arpl
retf
add
dec
cmp
xor
aaa
loopne
in
jle
xor
pusha
imul
mov
push
popf
adc
mov
xchg
fs
out
rol
xlat
pop
sbb
sahf
int
push
call
xchg
iret
frstor
es
xchg
std
repnz
out
push
xchg
add
xor
lods
or
in
(bad)
clc
in
pcmpgtd
scas
loopne
pusha
pop
cmp
ret
jne
gs
xor
xchg
add
push
bound
push
into
dec
cmps
cmp
rol
and
adc
jl
jmp
out
mov
adc
cld
lods
xchg
ret
pop
jmp
jmp
sbb
sbb
std
pusha
in
leave
mov
jmp
sub
(bad)
jmp
mov
push
cwde
mov
push
push
sar
mov
pop
push
int3
inc
imul
scas
ins
rcr
out
xor
adc
cmps
(bad)
xchg
xlat
scas
sbb
jbe
icebp
push
clc
cmps
xchg
mov
jl
mov
movs
sar
loope
(bad)
fsub
das
out
dec
rcr
sub
xsaves
fisubr
jmp
xor
movs
nop
pop
test
fldcw
fmulp
outs
xor
ins
sub
cli
in
hlt
sub
ret
dec
aaa
dec
add
xchg
mov
fadd
stos
push
sbb
sbb
xor
in
mov
ss
pushf
stos
aas
push
stos
gs
push
inc
cwde
xor
push
add
cld
shr
in
imul
sbb
jg
jge
dec
cmp
(bad)
dec
or
xor
and
adc
fstp
adc
xchg
mov
test
mov
dec
pop
and
push
sub
mov
and
pop
or
jmp
jg
sub
jns
nop
cmp
jl
es
and
jb
adc
fild
test
xchg
outs
out
pop
push
jmp
pushf
in
sub
mov
or
je
sahf
mov
cmps
lock
int3
repz
sub
shl
cmps
mov
cwde
loop
cli
cwde
and
stos
fiadd
retf
in
push
shl
xor
fadd
(bad)
xor
(bad)
out
push
mov
inc
call
sar
adc
mov
inc
cld
jl
(bad)
outs
fs
bound
cld
in
test
jmp
pop
call
cmc
bound
lods
test
cli
xchg
or
jne
mov
sub
mov
daa
sub
std
in
push
mov
repz
out
lods
sub
cli
popf
xchg
test
and
xor
mov
in
jno
add
lock
cmp
sub
(bad)
sub
xor
adc
cmp
cmp
out
mov
cmps
jno
test
pop
int3
sbb
cmps
mov
inc
cmp
pop
sbb
mov
jmp
inc
push
les
(bad)
ss
outs
xor
aam
jle
popf
aad
in
xor
and
ret
sub
outs
cmp
mov
call
les
or
ret
sbb
bound
call
fcom
loopne
(bad)
pop
xchg
xor
sub
dec
mov
xchg
pop
inc
fadd
add
jnp
scas
sub
cmp
mov
bound
sar
das
dec
pop
(bad)
jns
mov
stc
sub
pop
adc
dec
adc
dec
pusha
movs
inc
mov
sub
lods
mov
pushf
sbb
retf
lahf
inc
adc
pop
out
shl
xor
mov
lods
push
outs
cmp
push
shl
pusha
xchg
fdivp
sub
je
movs
and
pop
jecxz
cmps
xor
cmps
cmp
push
mov
mov
or
jecxz
xchg
test
das
mov
adc
xchg
in
bound
imul
iret
addr16
hlt
sti
ror
test
nop
xchg
cmps
call
xchg
adc
test
sahf
shl
imul
mov
inc
shl
lea
mov
add
imul
push
add
repnz
jns
sahf
xchg
xor
mov
je
cwde
cmps
mov
xchg
loop
mov
mov
fs
out
hlt
lea
loopne
fisub
pop
adc
es
mov
xor
cmp
push
mov
sbb
movaps
enter
fsubr
lods
mov
adc
mov
js
retf
adc
call
sahf
cmp
test
mov
pop
js
add
sbb
or
mov
pop
pop
subps
js
jmp
shl
adc
cs
les
hlt
and
ffree
imul
stos
adc
cmp
hlt
das
inc
ins
cmps
push
outs
xor
je
push
je
jg
mov
push
aam
adc
dec
and
out
idiv
inc
or
push
sub
aaa
jecxz
xchg
lods
jbe
add
sbb
fidivr
mov
push
mov
xchg
cwde
pop
jnp
inc
(bad)
(bad)
jp
fwait
cmp
add
jl
shl
lds
rol
push
sbb
arpl
xlat
mov
jg
retf
and
jmp
out
out
cmp
mov
sub
mov
in
retf
das
pop
dec
into
stos
jnp
retf
adc
pop
xor
std
in
lahf
sub
shl
sub
jmp
call
mov
cmp
push
mov
add
jae
sbb
or
fcom
cmps
inc
repnz
jp
xchg
ins
push
fldcw
leave
ja
push
ret
(bad)
movs
xchg
dec
mov
add
je
or
pusha
pop
mov
in
outs
and
xor
out
daa
outs
pop
popa
stos
pop
stos
ror
sbb
outs
fisub
icebp
mov
js
test
xchg
scas
xor
push
and
es
rol
fwait
add
mov
cmp
stos
sbb
pop
push
mov
mov
pop
jb
or
repnz
jb
xor
cmc
jb
xor
loop
cmp
enter
xchg
mov
adc
xchg
dec
push
stos
adc
mov
mov
mov
xchg
jmp
sbb
retf
aad
(bad)
movs
cwde
out
shl
mov
lock
jnp
xor
in
xor
ins
inc
mov
pop
test
mov
xor
rol
add
pop
ins
mov
enter
or
scas
aaa
(bad)
out
test
loop
adc
mov
int3
dec
scas
mov
call
fwait
or
or
aad
jne
fst
cs
iret
jecxz
popf
jnp
inc
jb
ss
pop
retf
adc
das
mul
cmovg
repnz
data16
push
scas
ror
outs
xor
mov
stos
pop
cdq
sar
int
aam
add
push
movs
lock
mov
in
xchg
test
test
repnz
fbld
mov
loopne
loop
repz
sbb
das
add
xor
sbb
mov
(bad)
jl
xchg
arpl
pop
(bad)
lock
jns
leave
push
adc
mov
fstp
ret
pushf
stos
icebp
cmp
cmc
jmp
int
lock
shr
add
xchg
loopne
dec
add
xor
mov
les
int
out
push
jmp
repz
(bad)
xchg
mov
xchg
mov
xor
arpl
rcr
les
dec
inc
div
mov
call
mov
jbe
mov
inc
cld
mov
inc
stos
inc
hlt
fcmovnb
xor
enter
sub
pop
js
mov
add
(bad)
push
dec
jae
dec
mov
outs
shl
xor
pop
push
ins
mov
aaa
scas
in
aad
pop
data16
xor
lahf
sbb
outs
outs
add
repz
sub
(bad)
and
std
ret
cmps
jle
popf
(bad)
in
inc
xor
cli
and
icebp
xchg
adc
es
pop
inc
sbb
leave
retf
mov
stc
loop
jnp
jecxz
cmp
mov
push
dec
mov
or
popf
jge
pop
outs
inc
or
adc
jecxz
push
jl
mov
jo
fadd
xchg
repnz
xor
lds
sub
push
rol
aad
sbb
inc
and
retf
mov
mov
or
mov
pop
hlt
pusha
ja
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
adc
aas
lock
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
and
pop
add
scas
xor
pushf
dec
enter
inc
into
push
ja
fnstcw
jnp
jnp
push
cdq
mov
adc
inc
(bad)
psubusw
clc
aas
out
jecxz
repz
add
(bad)
mov
sbb
dec
pop
ror
sub
out
lods
popf
and
and
sti
outs
rcr
add
loope
mov
cmp
jge
imul
dec
(bad)
int3
(bad)
sub
push
ins
jle
sub
ret
es
pop
mov
jecxz
lahf
adc
mov
popa
cmp
je
out
retf
dec
gs
or
jbe
ins
bound
xchg
fld
ret
dec
scas
inc
jnp
das
or
jnp
or
enter
sub
jae
(bad)
out
(bad)
jle
dec
xchg
add
xor
push
add
movs
add
and
mov
add
xor
dec
cmps
(bad)
outs
pop
inc
ds
push
mov
and
out
shr
xchg
or
addr16
push
push
outs
clc
(bad)
mov
das
popf
xchg
xor
popa
arpl
push
cli
loopne
clc
cli
add
xor
or
dec
mov
fpatan
scas
pop
test
ja
sub
pop
lahf
js
dec
sub
xchg
mov
and
stc
push
mov
stc
pusha
(bad)
lods
and
mov
mov
sub
mov
jno
lds
dec
sbb
sub
(bad)
xchg
and
xor
xchg
fbld
push
iret
cld
ficom
adc
or
daa
lods
push
out
mov
std
add
lock
pop
or
fst
les
in
test
int3
aad
(bad)
mov
test
repnz
add
fld
jno
aam
nop
scas
into
mov
fucomip
cli
xor
sti
dec
pop
pop
fcomp
and
jno
mov
icebp
xlat
cmps
iret
xchg
std
iret
imul
push
shr
in
scas
sbb
jb
or
xor
popa
(bad)
mov
aaa
xchg
inc
pop
lock
test
sub
imul
scas
push
sub
outs
mov
inc
cmp
(bad)
sub
jl
lock
out
add
cmc
in
mov
push
(bad)
icebp
mov
inc
jbe
in
stc
jmp
ret
mov
pusha
cmp
sub
mov
jecxz
(bad)
(bad)
mov
push
cli
imul
in
inc
sub
sbb
dec
leave
and
sbb
pop
out
lea
(bad)
sar
adc
outs
cld
addr16
(bad)
sub
imul
mov
fs
mov
(bad)
jecxz
stos
hlt
movs
(bad)
out
idiv
dec
cwde
xchg
aam
dec
push
mov
jge
into
ja
pop
inc
and
ds
scas
fisttp
mov
mov
sbb
repz
outs
std
cmp
inc
stos
or
xor
enter
test
or
jle
repnz
mov
(bad)
sub
shr
xor
scas
mov
lds
sahf
enter
mov
movs
inc
test
test
jmp
(bad)
in
not
sahf
imul
pop
push
loopne
cli
mov
sar
lock
mov
out
and
fwait
push
in
dec
xor
sbb
jmp
movs
xchg
cmp
test
or
mov
push
sub
or
xchg
push
xlat
cmps
es
fild
shl
sbb
(bad)
in
xchg
test
adc
push
adc
push
lea
jl
jecxz
stc
push
mov
scas
jle
add
jbe
ret
mov
inc
pop
aas
xchg
bound
inc
mov
mov
in
dec
add
jl
scas
data16
test
mov
mov
jae
inc
ins
dec
or
mov
or
call
mov
xchg
fsubr
icebp
or
movs
popa
sub
mov
ins
ds
adc
xchg
out
dec
out
adc
mov
outs
out
retf
pop
jne
mov
mov
and
mov
fadd
jbe
fist
test
inc
sbb
dec
int3
xor
jno
inc
shl
cmc
add
(bad)
mov
push
mov
retf
cli
cmp
adc
mov
ret
sti
fld
inc
mov
sub
push
mov
inc
and
xchg
mov
xor
dec
mov
pushf
pop
shr
test
pop
int
fwait
push
out
icebp
arpl
dec
adc
nop
aaa
in
mov
cmp
adc
lahf
mov
inc
gs
pop
mov
push
mov
ror
enter
fs
sbb
pop
in
xor
or
out
in
fidiv
sub
adc
jl
enter
and
sti
js
cwde
pusha
inc
loopne
cmc
mov
sbb
mov
sub
ins
adc
lods
call
div
popa
and
sub
cmp
leave
icebp
dec
popf
xchg
dec
popa
dec
inc
in
cwde
js
es
jmp
in
retf
loop
push
aad
aad
fidivr
int3
or
repnz
xchg
xor
mov
mul
pushf
jp
ret
or
inc
cmp
add
push
xchg
test
repnz
int3
mov
shr
hlt
mov
aam
add
scas
add
aam
mov
sar
mov
mov
(bad)
cmp
inc
push
mov
pop
pop
cmp
fs
ss
adc
rcl
in
jne
scas
mov
or
xor
add
(bad)
fs
out
xchg
std
xchg
pusha
outs
mov
ss
enter
cmp
jp
inc
jp
arpl
pop
mov
or
(bad)
adc
add
rol
lods
xor
pop
jne
stc
test
je
jg
mov
cmp
mov
cmp
xchg
push
pop
imul
and
mov
and
pop
sub
adc
jle
(bad)
and
push
push
out
daa
test
xchg
gs
jl
push
xchg
sbb
test
sahf
outs
mov
in
mov
addr16
sahf
sbb
xor
(bad)
jp
push
iret
pop
das
cdq
cmps
jmp
je
inc
lea
cmp
or
fld
jle
sub
sub
test
cli
pop
(bad)
jbe
dec
or
add
mov
stos
cli
adc
push
or
xchg
lods
xchg
push
mov
mov
int
xchg
out
ja
pushf
arpl
sbb
mov
popf
(bad)
mov
cmp
jle
jg
rcr
imul
pop
scas
push
mov
xlat
arpl
xor
outs
(bad)
mov
push
pushf
push
jl
clc
jns
dec
mov
adc
cmps
imul
in
test
fs
push
push
fst
aad
inc
jp
out
sti
xor
sub
test
add
jno
inc
mov
add
sbb
pop
data16
mov
lea
inc
jb
aad
fdivr
cmp
jnp
sbb
aas
jae
mov
cmp
jmp
pop
movs
bound
aam
lock
xlat
ins
test
ss
sti
jb
ret
and
pop
(bad)
mov
stc
jge
and
mov
(bad)
mov
stos
test
out
pop
push
idiv
fs
push
push
lahf
mov
iret
fwait
sti
std
out
lock
dec
mov
aad
(bad)
and
mov
repz
sub
pop
shl
ins
out
out
fidivr
push
out
sub
jmp
adc
imul
cli
or
cmps
dec
pop
in
les
ins
stos
ud1
xor
or
inc
cld
(bad)
aad
dec
xchg
jmp
pop
jnp
xchg
jecxz
rcl
(bad)
cmp
stos
cmp
aad
jg
jae
js
jecxz
dec
xchg
jae
in
jmp
stos
mov
sub
into
cmps
xlat
dec
imul
cs
ss
mov
jecxz
or
call
loope
sub
sbb
fnstsw
dec
ins
and
test
movs
pop
lea
jae
mov
mov
push
or
loopne
out
aaa
xlat
hlt
sti
ss
adc
push
sub
pop
add
lea
mov
loopne
inc
out
sbb
add
punpcklwd
pop
clc
loopne
xchg
sub
pop
jl
mov
push
imul
addr16
jle
push
cmp
and
pop
xchg
pop
pop
add
int3
sbb
jns
or
retf
pop
jge
cmp
(bad)
cwde
pusha
fsubp
stos
mov
arpl
sti
fcomip
(bad)
mov
fistp
lock
lods
movs
jbe
lods
call
(bad)
pop
xor
sti
fnstcw
stos
pop
cmc
xor
mov
or
lock
sub
or
mov
add
leave
lds
icebp
sbb
pop
jle
inc
xchg
(bad)
fistp
int
les
sub
xchg
sbb
add
dec
and
ret
jecxz
movs
mov
dec
test
cmc
rcl
mov
in
xchg
push
add
iret
add
fcmovnb
jo
mov
call
xchg
dec
call
mov
or
in
jp
out
jae
push
xchg
fbstp
mov
pop
test
pop
enter
push
mov
pop
inc
inc
xchg
and
fsub
test
outs
xchg
xchg
ds
dec
dec
js
jb
aam
in
jns
pop
mov
ins
sbb
or
stos
and
call
inc
jl
arpl
mov
cmp
xor
popf
in
daa
sbb
jle
test
call
push
adc
xchg
imul
xor
fistp
movs
mov
jmp
in
dec
dec
mov
cmp
call
popf
pop
movs
cmp
push
cmp
arpl
sbb
cmps
dec
(bad)
inc
or
in
sti
inc
sbb
in
aam
sub
pop
lock
mov
pop
cs
pop
mov
xor
or
movs
cdq
sub
in
test
stos
hlt
into
daa
push
out
test
in
sub
(bad)
xchg
sar
xor
push
pop
xchg
sbb
mov
mul
shl
adc
cmps
xor
and
stc
or
popa
mov
push
jl
adc
fsubr
xor
push
pop
scas
adc
cli
scas
loop
mov
push
adc
push
ins
and
ret
pushf
sbb
push
call
icebp
cmp
mov
cmps
inc
cmc
mov
mov
es
xchg
mov
mov
sbb
pop
add
dec
mov
loope
call
mov
inc
(bad)
adc
mov
cmps
lds
push
jge
pop
out
enter
arpl
(bad)
ins
or
icebp
push
sbb
fsubr
dec
in
lea
adc
jmp
aas
cmp
daa
cld
daa
sti
adc
sbb
push
clc
mov
add
push
mov
xor
imul
in
es
push
adc
cmp
fcomp
adc
jmp
inc
or
retf
in
mov
mov
adc
mov
stc
ret
into
add
mov
sbb
into
cmps
jo
(bad)
xchg
push
jecxz
xchg
push
and
rcr
test
mov
fst
xor
cmp
push
dec
dec
fild
cmp
mov
xchg
repnz
ret
fcmovb
dec
in
xchg
inc
adc
jmp
ja
imul
jb
xor
mov
sub
(bad)
mov
icebp
pop
sbb
fwait
pop
loop
aad
add
sbb
into
pushf
dec
out
pop
not
inc
sbb
mov
pop
mov
add
cmc
and
in
scas
and
push
cli
dec
data16
cli
mov
or
xor
retf
mov
cwde
stos
das
mov
fs
add
or
xchg
data16
dec
xor
scas
fwait
xchg
and
push
psubd
mov
mov
xchg
das
outs
sbb
lock
mov
add
ins
aad
pop
xchg
sbb
adc
out
jmp
movs
in
push
jp
test
push
sbb
jp
aas
pop
loopne
retf
mov
fstp
stos
in
popf
mov
loop
sub
repz
inc
xchg
inc
add
(bad)
pop
adc
lahf
and
fwait
add
add
rcl
aam
jb
dec
popf
push
fdivr
popf
pop
xor
fiadd
out
jbe
loope
test
rcl
cmps
int3
jne
iret
push
pop
dec
push
cdq
mov
popa
movs
or
sbb
xchg
mov
js
(bad)
jmp
scas
addr16
cmp
shl
xchg
mov
cmps
push
test
lahf
ret
push
and
sub
aad
das
cs
inc
outs
jno
daa
pop
dec
inc
push
ins
pop
and
(bad)
out
shl
jl
leave
push
mov
pushf
push
cmp
jae
stos
idiv
outs
rcl
das
iret
or
inc
xor
add
icebp
push
fs
mov
(bad)
int
jae
add
adc
jecxz
cwde
sub
jbe
xorps
mov
mov
daa
mov
lock
pushf
push
push
pop
les
clc
bswap
(bad)
std
sbb
std
push
pop
sar
fidivr
push
jae
mov
loopne
fcmovnbe
cli
inc
shl
(bad)
cmp
push
rol
icebp
fisttp
cmps
mov
in
outs
dec
es
mov
(bad)
push
pop
pop
std
outs
and
sbb
mov
lods
dec
in
lea
or
fld
mov
or
or
mov
in
mov
rcl
ror
mov
xlat
(bad)
fimul
adc
xchg
adc
call
mov
jns
mov
rol
leave
les
and
push
das
je
xchg
jecxz
fsubp
xchg
adc
mov
sar
in
fst
mov
add
dec
cmps
fbstp
pusha
push
inc
xor
test
sbb
sub
or
push
(bad)
pop
adc
mov
dec
and
push
(bad)
jbe
les
push
addr16
jmp
and
pop
aad
cmps
stos
les
movs
xor
mov
test
adc
jle
arpl
std
xor
push
rol
nop
sub
ret
mul
jbe
dec
mov
dec
aam
mov
xchg
enter
into
cmp
(bad)
stc
int3
pop
iret
sahf
cwde
loopne
stos
xor
das
aas
sbb
stos
aas
jl
cmp
out
mov
cdq
or
nop
retf
inc
or
inc
fstp
xor
inc
sbb
in
adc
xor
(bad)
leave
inc
xor
jl
retf
bound
jmp
inc
inc
(bad)
iret
stc
dec
adc
add
ret
adc
in
pop
into
adc
push
pop
jl
repz
fucom
ret
sbb
hlt
sbb
jg
js
and
rcr
call
pop
pop
loopne
push
sbb
leave
shl
popf
inc
mov
cdq
rol
ins
jns
or
cmp
push
jge
sub
cmp
push
or
nop
push
cs
and
add
jmp
stc
adc
fist
out
adc
dec
push
cmp
jle
mov
leave
dec
mov
js
xchg
inc
jmp
inc
adc
xor
fwait
adc
inc
ins
mov
pop
cdq
call
mov
int3
push
ss
fs
pop
sub
inc
xchg
inc
pop
in
mov
in
cdq
mov
jp
adc
mov
jmp
xchg
xchg
mov
lds
das
ins
dec
sub
dec
add
mov
rol
js
gs
push
int3
dec
jl
jae
jle
popa
test
jle
fnstsw
aad
ss
add
cmovo
and
bound
dec
jg
pop
test
xor
xor
add
inc
es
lock
jo
in
xchg
movs
mov
sti
adc
icebp
jae
icebp
je
jmp
xlat
jnp
(bad)
and
out
add
pop
hlt
and
push
(bad)
fist
je
fsubr
aam
aam
push
push
(bad)
fadd
or
pop
mov
jl
test
adc
push
aad
push
icebp
and
rol
stc
out
jg
stc
out
call
add
jg
xchg
push
or
test
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
pop
xchg
or
push
xchg
outs
movs
pop
dec
not
ja
in
dec
cmps
je
or
adc
outs
and
adc
cld
fdivrp
icebp
jns
xchg
mov
out
add
shr
clc
cmp
mov
pop
pop
push
jmp
enter
xchg
dec
push
fisttp
movs
cmp
in
fs
push
xor
in
xchg
mov
adc
adc
je
adc
(bad)
fidivr
ins
mov
cli
cld
mov
push
sub
pop
mov
adc
loope
mov
or
hlt
adc
dec
ss
leave
pop
pop
js
cmc
jg
mov
add
mov
mov
jmp
outs
mov
adc
(bad)
push
adc
pop
(bad)
scas
sbb
mov
adc
fadd
or
(bad)
xor
cmp
add
mov
mov
inc
fcom
es
or
pushf
push
bnd
ror
dec
es
out
enter
pop
mov
cmp
xor
retf
ficomp
push
mov
inc
dec
push
call
xor
cmps
pop
fisttp
push
test
je
jb
add
aaa
dec
adc
add
mov
mov
push
xor
ins
arpl
mov
mov
dec
adc
pop
push
mov
cli
ds
out
dec
call
test
retf
dec
inc
pop
sub
mov
pop
inc
test
inc
icebp
xchg
push
aam
adc
inc
xchg
ret
cwde
dec
mov
movs
clc
push
add
std
mov
stos
out
and
xchg
mov
xchg
aaa
lods
mov
dec
sbb
mov
mov
mov
add
mov
jmp
mov
outs
sub
pop
lds
pusha
retf
xchg
xor
and
sub
pop
out
stos
pop
xchg
or
dec
in
bound
(bad)
out
lds
xlat
and
fs
cli
fsubp
mov
mov
xor
dec
sub
(bad)
in
xchg
(bad)
pop
(bad)
cmp
mov
mov
scas
adc
sub
movs
outs
popa
push
or
in
add
leave
fwait
adc
hlt
pop
jne
jns
mov
(bad)
mov
push
(bad)
adc
add
int
xchg
test
cwde
cdq
pop
or
lods
mov
sub
mul
xchg
cwde
mov
in
(bad)
jecxz
aaa
pop
mov
jo
mov
inc
inc
push
push
mov
adc
ror
jge
pop
sub
stos
mov
mov
add
or
xchg
ret
movs
daa
pop
inc
and
jmp
in
or
xor
in
mov
nop
outs
sahf
out
movs
xor
imul
mov
(bad)
in
out
arpl
push
mov
and
ins
daa
shl
dec
xchg
xor
pop
(bad)
pop
std
loop
loope
or
aas
stos
(bad)
xlat
jno
mov
pop
mov
test
and
ins
jecxz
fmul
mov
jbe
into
popf
jo
cld
imul
imul
mov
movs
mov
je
mov
mov
mov
add
les
cld
in
or
lock
sub
sub
imul
mov
add
aam
imul
mov
mov
leave
xchg
jecxz
xchg
(bad)
int3
sti
xchg
arpl
push
(bad)
fisubr
push
mov
cmp
outs
mul
cmp
mov
sbb
sbb
xchg
fimul
inc
inc
arpl
xchg
lods
mov
mov
dec
dec
jmp
out
outs
adc
mov
leave
stc
cmp
push
adc
pop
daa
mov
push
cmp
pusha
and
ds
(bad)
es
clc
loop
mov
call
cmp
aad
inc
cmp
xchg
sbb
xchg
or
pop
pop
xor
dec
addr16
fsubr
and
push
mov
jo
cli
mov
lods
adc
dec
cmps
ficom
lods
or
mov
push
dec
or
sbb
cmp
inc
mov
in
out
loope
fnstenv
jp
pop
sti
ret
mov
rcl
adc
push
cmp
fwait
std
add
inc
adc
add
ror
xor
out
cld
mov
ins
fwait
dec
pushf
jle
stc
aad
mov
rcr
es
dec
and
icebp
js
xchg
add
les
shl
mov
add
dec
pop
jmp
dec
xor
in
ss
jecxz
mov
in
mov
pop
ins
in
push
ret
adc
add
pop
out
xor
sub
leave
inc
ds
enter
push
pop
lea
sub
das
mov
in
sahf
sbb
scas
dec
fdivr
and
bound
jbe
lods
cmc
repnz
adc
jl
jnp
popa
jbe
pop
sbb
pop
mov
mov
(bad)
jmp
cmp
xchg
scas
movs
inc
lods
adc
pop
rcl
fnstcw
cwde
adc
mov
push
mov
repz
pop
adc
inc
inc
movs
or
mov
mov
or
fnstcw
ds
popf
xor
push
aaa
pop
test
int3
mov
sahf
movs
mov
scas
cld
sbb
cmc
iret
mov
sub
xchg
jle
scas
mov
pop
and
test
inc
xchg
(bad)
cmp
push
test
cmp
in
mov
(bad)
enter
jmp
cs
xor
adc
push
jg
fimul
pushf
sbb
xchg
arpl
push
ret
pop
mov
in
mov
jmp
mov
pusha
div
out
scas
out
pop
(bad)
mov
aaa
xlat
and
pop
inc
mov
in
pop
js
cld
pusha
test
or
retf
div
jle
pop
stc
sbb
(bad)
pushf
xor
fidiv
inc
mov
adc
mov
(bad)
or
jmpw
pushf
jbe
out
inc
sub
dec
sbb
push
cs
hlt
loopne
rcr
mov
push
arpl
push
xchg
push
and
shl
hlt
lods
jnp
pusha
add
call
cmps
jg
adc
mov
aad
sub
aaa
sar
(bad)
fdiv
push
(bad)
call
mov
movs
xchg
ds
jo
jp
jg
in
fistp
je
and
dec
sub
(bad)
sbb
push
std
pop
lea
xchg
pop
inc
xor
mov
xor
retf
jne
std
mov
mov
scas
mov
jno
pop
pop
sub
push
inc
dec
rcl
fnstcw
retf
cmp
outs
jns
fwait
dec
lds
mov
pushf
outs
dec
mov
inc
cli
(bad)
(bad)
scas
fldcw
popf
cmps
outs
push
xor
iret
nop
int
xor
int
es
jecxz
sub
push
ins
fistp
mov
mov
out
test
pop
icebp
(bad)
fldenv
jge
xor
(bad)
sbb
fwait
jmp
or
out
add
retf
and
ficom
ret
xchg
std
es
(bad)
adc
inc
add
(bad)
or
mov
dec
jb
mov
jg
shl
movs
mov
jmp
mov
mov
iret
mov
shr
fcomp
xchg
jecxz
into
sub
imul
test
push
cmp
push
xor
cmc
fs
sti
aaa
mov
push
and
je
inc
movs
xlat
stc
lahf
sahf
jmp
call
repz
xchg
push
cdq
(bad)
xor
es
call
push
xchg
gs
out
jge
push
rcl
sub
outs
div
push
inc
mov
aaa
arpl
inc
nop
enter
int
or
dec
cmp
jb
add
sbb
or
jmpw
sub
movs
loop
mov
lds
(bad)
lods
sub
xlat
mov
xlat
pop
push
rol
neg
jne
mov
and
mov
not
push
aas
add
cmp
add
out
cmp
nop
jg
fadd
inc
shl
cmp
out
mov
dec
push
rcr
jb
cmp
jge
clc
cld
jmp
mov
dec
lock
ja
movs
(bad)
gs
and
xor
xlat
mov
jle
loope
mov
or
mov
xor
xor
das
call
imul
movs
retf
loop
(bad)
mov
leave
hlt
pop
rcl
jecxz
cmp
fcom
aaa
xor
mov
outs
pop
in
leave
sub
or
les
int
pop
sub
daa
inc
gs
pop
add
(bad)
retf
adc
fisttp
cmp
mov
in
shl
test
pop
dec
cwde
push
xor
das
push
lahf
sbb
push
out
jb
mov
sub
mov
rcr
fmul
mov
arpl
inc
adc
mov
push
mov
xchg
imul
add
(bad)
mov
movs
sub
xchg
imul
shl
addr16
mov
xor
xchg
mov
sbb
pop
fwait
push
ret
mov
std
cmp
ret
loopne
cmp
pop
pop
jecxz
pop
outs
jb
lods
(bad)
xor
adc
cdq
out
daa
xchg
xchg
sub
inc
dec
mov
gs
inc
cdq
dec
pop
sub
cs
or
(bad)
jns
adc
ror
dec
xor
dec
iret
xchg
push
shl
mov
fistp
(bad)
cmp
or
adc
sub
ret
mov
push
test
popa
cwde
idiv
es
into
jmp
fisub
jp
pop
mov
or
div
mov
sub
iret
inc
cmp
and
loop
mov
shl
xor
outs
mov
mov
push
xor
jbe
jg
push
fistp
sbb
mov
sub
and
out
sbb
out
scas
fild
mov
daa
pop
adc
mov
add
popa
push
fiadd
cld
sar
aas
jecxz
in
cwde
jae
scas
mov
jno
mov
or
and
cwde
mov
pop
pop
pop
push
adc
jb
pop
pop
xchg
mov
loopne
xchg
aaa
dec
add
push
ja
nop
jmp
mov
fcomp
stc
pop
dec
aaa
add
clc
add
mov
pop
call
jecxz
dec
cmp
push
imul
jns
adc
popa
sbb
jecxz
loope
xchg
jecxz
lock
fbstp
sbb
xchg
sbb
pminsw
jle
adc
mov
dec
aam
aad
ss
and
int3
pop
cld
jge
and
aad
iret
daa
sti
movs
sub
xor
ja
mov
mov
adc
imul
test
movs
and
sti
fiadd
mov
cmp
fisubr
jmp
ja
stc
and
test
fsubr
data16
in
fwait
add
xchg
mov
and
fnstsw
push
and
jno
jbe
sti
cmp
call
(bad)
aam
push
lods
pop
pop
out
push
cmp
and
mov
push
mov
xchg
in
daa
dec
jno
jmp
out
imul
(bad)
les
popf
adc
rcr
int3
enter
repnz
cwde
outs
dec
cmp
inc
fistp
xor
out
std
jl
sub
push
fld
and
xor
add
jo
mov
push
push
retf
aas
and
in
fcom
std
and
xchg
fcom
sbb
sbb
inc
mov
popf
push
inc
add
(bad)
mov
push
mov
push
movs
jg
sahf
movs
out
xor
mov
fmul
jne
and
xchg
in
jae
ret
mov
ins
inc
sub
repnz
mov
xor
test
xor
pop
scas
jno
jne
xor
mov
push
sar
ss
aaa
jae
mov
and
ficom
sbb
jge
xor
ret
pusha
arpl
fstp
mov
lods
or
mov
jbe
mov
mov
stos
mov
(bad)
in
adc
pop
into
(bad)
data16
sub
jno
in
dec
retf
hlt
in
inc
adc
lods
pusha
pop
xor
jnp
cmp
push
aas
int
push
inc
loopne
xchg
cmp
test
(bad)
xor
pushf
je
dec
scas
repnz
jmp
dec
ret
outs
movs
dec
jae
(bad)
call
mov
(bad)
cs
out
stos
jnp
gs
fisttp
mov
dec
dec
jbe
adc
dec
outs
(bad)
jg
pop
jmp
(bad)
lock
mov
fisub
add
mov
dec
ins
fwait
ret
mov
xchg
or
jecxz
push
dec
lods
sub
sub
in
lods
pop
int
dec
adc
rsm
out
daa
sub
in
sahf
xchg
and
dec
shl
fisttp
add
into
fisttp
pushf
stos
cmps
rcr
jmp
cld
sbb
or
fisub
cld
scas
loop
call
lods
ret
stos
and
jbe
ins
in
shl
mov
test
or
stos
cmp
popf
jl
push
or
cmc
das
sbb
rcl
mov
fs
inc
jge
enter
sbb
cmp
lock
sahf
neg
addr16
add
xlat
inc
scas
cmp
jecxz
jl
mov
rcr
add
push
rol
adc
(bad)
jge
rcr
inc
cmp
out
outs
pop
mov
cwde
icebp
test
or
pop
loopne
or
xchg
icebp
jo
sar
fild
cli
or
retf
in
and
test
stc
xchg
and
push
jb
adc
dec
pop
ins
enter
adc
jne
jecxz
pop
jmp
mov
or
fmul
push
lea
jns
jge
shl
movs
xor
mov
call
daa
test
add
mov
movs
ins
xor
jmp
cli
out
cmp
and
and
aaa
(bad)
inc
inc
pop
adc
mov
imul
movs
adc
push
ds
or
jb
jmp
ss
out
pop
pop
add
push
mov
push
movs
xchg
fldenv
xor
in
or
daa
fsubr
adc
(bad)
jmp
jmp
outs
arpl
mov
push
ins
dec
(bad)
mov
aaa
mov
das
cs
cmp
xchg
xchg
ffree
das
out
jbe
stc
std
add
push
mov
mov
shl
inc
daa
test
cmps
push
daa
ret
out
sar
dec
cmp
lods
into
and
cmc
aad
mov
jg
jo
rcr
repz
out
push
jmp
stos
enter
out
int
mov
or
dec
dec
icebp
stos
or
sbb
aad
pop
xchg
push
xchg
test
frstor
iret
repnz
push
cmps
push
xchg
sub
int3
push
(bad)
cmp
aas
xchg
retf
mov
fdivrp
jmp
stos
mov
mov
cld
je
int
cmp
sub
add
pop
leave
rol
call
js
dec
jno
shl
loop
cld
adc
inc
ds
mov
mov
daa
jl
jae
test
mov
mov
dec
sar
inc
mov
mov
stos
fdivrp
cmp
lods
dec
addr16
or
or
mov
ja
adc
hlt
sub
test
mov
xor
mov
(bad)
jp
test
mov
xchg
dec
fmul
push
int3
fsubr
fwait
mov
sbb
pop
mov
dec
sbb
and
icebp
mov
inc
mov
sub
mov
lea
adc
outs
cs
dec
inc
dec
xchg
cmp
pop
sub
(bad)
nop
and
outs
test
pop
test
jp
pop
cmc
xor
mov
mov
mov
loope
cmp
xor
ins
fadd
and
push
out
mov
leave
dec
js
xchg
ins
sar
std
dec
mov
ja
push
ja
loopne
pop
pop
cdq
clc
sub
(bad)
jle
cmp
lods
cld
test
pop
ror
add
arpl
cmc
or
pop
xor
out
cmp
rcl
in
xor
pop
pop
sub
hlt
xchg
mov
pop
cmp
push
add
retf
jle
or
jle
push
inc
enter
cmp
js
hlt
ror
mov
xor
gs
mov
mov
ss
ficomp
jmp
push
movs
enter
and
cmp
(bad)
stc
out
call
add
inc
push
cmp
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
leave
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cwde
fdiv
dec
in
les
ds
xlat
cmp
xor
aam
jae
cmp
cwde
out
outs
rcl
cmp
jle
add
movs
jnp
stc
iret
ins
push
lods
cmp
xor
popf
push
inc
mov
pop
lods
lds
(bad)
shr
xor
jbe
and
mov
ror
cmps
test
xchg
lods
pop
ret
test
call
dec
mov
cli
fdivr
jl
fidiv
adc
in
sub
pop
in
cdq
shl
and
push
stos
xchg
sub
jle
shl
mov
test
xor
add
add
test
lods
pop
out
hlt
fisttp
ficomp
cmp
or
inc
aas
jne
mov
pop
sbb
loope
mov
dec
loope
fsub
enter
dec
test
mov
mov
sub
dec
inc
lods
push
mov
neg
xor
push
out
sbb
push
stos
xchg
inc
mov
mov
jge
inc
xor
fcomp
test
mov
pop
mov
xchg
stos
jle
add
int3
out
sbb
cli
sbb
mov
les
repz
mov
retf
ins
xchg
or
and
or
adc
and
imul
shl
push
dec
movs
jmp
lock
je
xchg
dec
mov
or
ret
rcr
in
mov
sub
rep
adc
test
popa
ins
ins
pop
adc
pop
cmp
sbb
and
bound
repnz
je
frstor
adc
int3
mov
pop
(bad)
fdiv
jle
inc
iret
mov
dec
xchg
aaa
or
std
nop
jge
sbb
adc
cld
push
or
sbb
jmp
jne
les
pop
inc
movs
or
call
aaa
push
dec
je
jmp
jne
push
mov
outs
mov
fsub
(bad)
ja
vzeroall
mov
and
jmp
clc
les
lock
jmp
loop
adc
pop
xor
inc
cmp
dec
lods
sub
(bad)
cwde
loope
pop
mov
xchg
lahf
js
add
and
in
lds
aad
syscall
ret
mov
xor
mov
lds
mov
adc
aas
pop
jmp
xor
and
(bad)
mov
movs
push
or
mov
add
repnz
or
enter
and
loopne
sub
loopne
inc
mov
inc
rcl
mov
rol
jg
out
mov
push
pop
push
sbb
cmp
or
inc
iret
cmp
mov
imul
cmp
cmps
push
movs
mov
shl
sahf
adc
push
push
pop
xchg
mov
push
mov
and
cmp
retf
inc
popa
jg
xchg
out
fwait
sub
mov
add
and
iret
outs
into
aam
jge
and
inc
pop
popfw
ja
inc
lea
cmp
fisubr
jnp
xlat
popa
push
call
retf
lock
pop
dec
jb
pop
popf
ja
pop
add
add
sub
mov
or
sub
xchg
push
fild
pop
je
or
fldcw
ret
test
enter
jmp
shl
inc
inc
es
jae
inc
mov
adc
push
dec
lock
sub
jmp
dec
pop
xor
push
mov
or
mov
jnp
fist
test
inc
cmp
pop
dec
pop
scas
adc
dec
pop
mov
loope
pop
and
(bad)
add
ror
push
lahf
fild
ss
gs
call
pop
fcomp
xchg
sub
in
popf
xlat
ja
hlt
das
scas
adc
jae
xchg
cmps
fimul
stos
fisubr
jb
pop
pop
jnp
idiv
xchg
mov
push
xor
call
cmps
or
jno
mov
pop
sub
push
out
mov
shr
dec
leave
jl
mov
dec
loope
ja
dec
lds
sub
repz
data16
daa
leave
div
jae
xor
and
scas
xor
icebp
repz
jmp
ret
add
scas
out
popa
jg
push
int
out
sub
add
aaa
push
pop
out
lods
ins
inc
pop
adc
ss
xchg
clc
fcmovb
(bad)
jne
mov
cmps
sbb
popf
aaa
fadd
mov
sub
mov
jl
adc
arpl
in
not
aad
pop
stos
adc
test
mov
sbb
pop
or
aas
leave
xchg
adc
nop
cmp
gs
pop
xlat
add
mov
(bad)
or
sbb
push
popa
cld
pop
jge
sar
mov
mov
jb
popf
inc
out
nop
mov
(bad)
sbb
mov
dec
shr
(bad)
lods
push
mov
xchg
aaa
aad
mov
adc
rcl
pushf
aaa
xchg
cmc
in
cmps
retf
adc
pop
push
cli
xchg
jno
lods
cmps
and
inc
jne
jg
cmp
jb
cmp
inc
xchg
scas
jecxz
jnp
mov
daa
lahf
and
and
push
or
push
jns
fadd
mov
sub
cmps
cwde
in
xchg
adc
ins
mov
shl
mov
mov
inc
loopne
shl
lds
movs
enter
dec
in
and
fisubr
test
nop
in
lods
pop
pop
dec
out
xchg
into
add
pop
cmp
adc
push
xchg
mov
jecxz
dec
mov
jno
sar
cmp
les
aam
std
fcomp
xchg
aad
jmp
mov
aas
cmp
cmp
test
mov
outs
inc
aaa
hlt
pop
push
mov
sbb
(bad)
out
adc
icebp
mov
cmp
test
and
dec
das
cmc
jmp
cmp
hlt
rcr
or
dec
in
and
fist
push
mov
leave
pop
in
sbb
retf
mov
das
int
outs
adc
fsub
enter
or
mov
adc
and
pop
bound
cmp
jg
add
sub
mov
pop
sub
push
in
retf
sti
mov
inc
aad
ins
ja
pop
mov
mov
test
jg
mov
fs
arpl
xchg
retf
outs
or
jbe
mov
cli
inc
test
aaa
mov
mov
movs
jnp
test
hlt
aas
pop
jne
add
push
xor
cwde
adc
jno
xchg
or
xchg
and
test
cmps
ror
push
shr
add
push
cmp
or
xchg
dec
loopne
in
fxch
xor
fs
push
lea
fidiv
sbb
lahf
mov
mov
cmp
pop
call
push
jge
int3
cli
cmp
adc
ins
xchg
(bad)
push
repnz
jmp
push
dec
aaa
and
mov
(bad)
fistp
xchg
ins
pop
mov
adc
ins
sub
push
mov
sub
mov
dec
inc
or
aaa
lods
add
push
xor
mov
call
pop
pop
repnz
ins
dec
xor
lea
jbe
xlat
mov
jnp
imul
mov
cmps
push
xor
arpl
test
cmp
clc
shl
mov
cmp
jbe
rcr
sar
dec
xlat
xchg
adc
mov
jns
(bad)
sbb
pop
cmp
mov
lea
movs
test
cmp
cli
xchg
add
inc
in
test
in
fidivr
fwait
jb
rol
(bad)
and
jb
stc
in
jmp
dec
or
or
ficomp
xlat
iret
arpl
xor
jg
jne
addr16
fsub
div
jmp
sar
pop
xchg
push
in
sbb
mov
push
jnp
int
xor
jp
inc
add
add
mov
cmp
repnz
mov
cmp
xchg
es
adc
repnz
cdq
scas
sub
sub
ins
sub
outs
test
jge
cwde
aaa
jecxz
push
sbb
add
(bad)
push
xlat
js
out
sar
cmp
inc
outs
mov
jns
stos
xchg
adc
jmp
jecxz
cmp
hlt
pop
mul
mov
stc
jmp
movs
mov
cs
adc
mov
cmp
adc
lock
lds
mov
rcl
xchg
sub
sbb
fsub
or
mov
mov
cmp
(bad)
test
mov
je
data16
retf
xchg
lods
fs
mov
jecxz
ret
retf
sar
mov
stc
(bad)
arpl
call
je
pusha
cwde
and
lahf
dec
in
loop
adc
pop
mov
into
fnsave
fadd
cmps
sub
adc
push
ja
test
clc
or
mov
mov
cmp
push
mov
in
scas
jb
pop
mov
inc
mov
fldenv
xchg
outs
jmp
fcmovnu
cmp
call
cmp
mov
mov
cmp
mov
mov
adc
rcl
nop
mov
jg
out
popf
rcl
cdq
dec
pusha
das
push
mov
daa
xchg
stc
push
lods
mov
loop
inc
gs
inc
sub
pop
lods
inc
fisubr
movs
pop
add
xchg
sub
bound
mov
stc
or
sbb
pushf
out
and
mov
dec
mov
adc
xor
mov
out
(bad)
stc
in
shr
xchg
push
aas
dec
adc
ins
ins
sbb
adc
test
add
jbe
dec
jp
mov
aas
pop
loopne
retf
xor
xchg
and
mov
inc
mov
test
stos
mov
adc
jae
stc
pop
push
xchg
or
jmp
xchg
aam
dec
cmp
mov
xchg
jbe
loopne
data16
xor
mov
retf
xor
out
jns
sub
jmp
push
stc
neg
sub
sub
repz
mov
xchg
icebp
ins
movs
cmp
je
jle
xchg
les
test
pop
sar
scas
mov
sbb
dec
shl
das
loopne
lods
pop
sbb
cmp
sub
cwde
test
aaa
movs
sub
fsub
xor
and
es
jo
(bad)
cmc
cli
or
sahf
mov
and
push
sub
hlt
cmp
sbb
enter
mov
das
jmp
(bad)
jl
jl
outs
int3
mov
pop
mov
adc
movs
dec
xchg
inc
inc
or
lods
ret
adc
jno
out
(bad)
clc
inc
jp
or
cmps
test
rcr
jnp
cmp
xchg
jmp
adc
mov
mov
dec
jge
inc
add
out
lahf
xor
mov
loop
lds
pushf
rol
into
test
js
mov
xor
sbb
aad
(bad)
jecxz
xchg
mov
cmp
fldenv
xchg
dec
add
pop
pop
fisttp
loope
idiv
das
mov
fisubr
call
sbb
sub
sub
cwde
jns
mov
and
sub
ds
mov
push
jp
in
lahf
fs
inc
push
mov
cdq
xchg
shl
jg
popf
xchg
icebp
and
lock
(bad)
pop
fimul
cmp
mov
mov
sub
mov
adc
push
cmp
sbb
push
daa
cmp
pop
mov
inc
xchg
arpl
(bad)
push
pop
mov
cmp
outs
adc
adc
pushf
adc
sub
adc
sar
leave
push
push
sbb
in
outs
je
cs
hlt
push
pop
ret
xor
cmps
xchg
in
mov
scas
dec
jb
jno
mov
jmp
rcl
and
xchg
jo
out
test
fmul
dec
fnstsw
add
iret
fwait
jecxz
hlt
lods
add
imul
js
pop
or
mov
sub
fcomp
sub
cld
inc
add
sub
push
mov
xlat
sub
jb
rol
out
inc
mov
xor
loope
push
out
lock
aas
cwde
and
jmp
cmp
inc
adc
ins
xchg
xchg
mov
(bad)
and
jae
stc
add
loop
in
pop
xor
sub
xchg
xlat
sbb
sbb
arpl
push
xchg
scas
push
inc
retf
or
les
or
mov
ret
les
or
inc
xchg
mov
push
int
test
and
dec
and
push
call
mov
or
fild
retf
aam
jae
jae
xor
lea
mov
mov
jle
sub
mov
int
fisttp
test
dec
add
xchg
push
sub
stos
sub
jle
cmps
(bad)
ins
scas
jmp
xor
outs
scas
or
mov
je
xor
sub
icebp
es
pop
sub
jl
movs
mov
aam
add
not
mov
dec
std
xor
movs
mov
outs
mov
pop
jecxz
cmp
mov
jmp
sbb
pop
jmp
jg
test
cli
sahf
fsubp
fst
repz
aad
dec
movs
and
out
mov
sar
pop
sar
inc
inc
xchg
nop
cld
pop
xor
xchg
stc
xchg
mov
pushf
cli
nop
add
or
gs
clc
sbb
call
jmp
mov
test
and
pop
aaa
aas
jae
sub
in
sbb
retf
mul
push
bound
mov
dec
in
mov
rcl
mov
imul
push
xchg
mov
xchg
dec
cmp
and
cdq
cmp
dec
out
out
xchg
adc
test
add
push
or
stos
push
outs
inc
jecxz
mov
jmp
mov
imul
inc
pop
fldcw
fdiv
ror
hlt
cmp
xchg
and
ss
(bad)
aad
js
mov
out
je
fwait
sub
and
inc
xor
mov
jge
jl
mov
ret
mov
out
mov
(bad)
repz
js
dec
clc
leave
stos
xchg
js
push
mov
fidiv
push
push
test
fld
outs
pop
(bad)
and
ret
mov
call
test
lods
lods
loope
jbe
hlt
inc
les
inc
fiadd
push
repnz
pop
and
test
fdivr
loopne
movs
out
js
sbb
mov
imul
sub
clc
or
(bad)
jns
test
sub
je
outs
ins
std
in
aaa
xchg
push
xor
(bad)
add
lock
outs
push
xlat
or
jp
mov
mov
and
call
add
lahf
mov
xchg
dec
push
aas
sub
fcmovb
xor
inc
out
mov
daa
xchg
out
jnp
xchg
cmovns
icebp
repnz
pop
retf
adc
mov
push
repz
mov
pop
jge
push
ret
dec
jge
adc
inc
jb
test
xchg
fcmovu
xor
jecxz
mov
jbe
cmp
mov
sar
jecxz
pop
cmp
mov
pop
test
sar
or
adc
inc
add
sbb
xchg
mov
cmp
movs
mov
mov
(bad)
iret
pop
mov
xlat
pop
inc
or
jnp
adc
push
push
and
xlat
call
out
test
xor
lea
xchg
fisttp
push
xor
out
xchg
div
aas
sub
sub
sahf
mov
sub
stos
in
cmp
fdiv
fmul
cmp
arpl
ins
(bad)
xor
icebp
jmp
mov
popf
mov
adc
pop
jp
call
stos
lods
(bad)
xchg
retf
aam
dec
jp
jo
hlt
stos
jns
std
test
fs
xor
cmp
xchg
fild
push
loope
ins
outs
jbe
(bad)
pop
rol
scas
jge
enter
popa
(bad)
jge
sub
push
ins
jmp
idiv
or
(bad)
jmp
lods
dec
jp
cmc
fdiv
stos
test
aas
(bad)
cld
repz
aas
(bad)
cld
repz
push
or
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
leave
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fdiv
fstp
fwait
out
dec
dec
dec
dec
jae
ficomp
mov
jno
push
cmps
sti
xchg
out
scas
sti
jmp
(bad)
xor
pop
jns
cmp
inc
cmp
xor
(bad)
lea
pushf
ja
and
movs
adc
adc
daa
mov
push
pop
adc
js
or
in
aaa
div
mov
scas
mov
push
jo
sub
sub
mov
or
lock
or
repnz
cmps
addr16
jp
adc
adc
pop
je
lods
pop
dec
mov
push
jmp
push
sub
dec
and
repz
push
mov
xor
pop
int
fldcw
add
(bad)
sub
inc
mov
add
lods
push
xor
js
cmp
jmp
sbb
movs
ret
les
mov
inc
lea
and
les
(bad)
nop
fimul
lods
pop
sahf
pusha
and
mov
aad
shl
add
ins
push
imul
cmp
xor
or
mov
mov
es
add
pop
push
mov
add
div
scas
xor
int
and
aaa
push
in
jecxz
inc
xor
mov
add
sar
jl
pop
add
movs
mov
mov
mov
mov
das
(bad)
repnz
add
mov
cld
sbb
cmp
je
mov
movs
inc
mov
test
je
push
pop
add
push
sub
dec
fmul
iret
ss
aaa
push
ds
stos
scas
push
scas
mov
aas
adc
mov
add
lock
pmaxub
mov
push
xlat
push
ja
mov
dec
or
push
push
adc
sub
jg
jp
mov
and
mov
in
imul
jne
int
sbb
sar
fidivr
add
mov
push
test
in
push
dec
sub
push
retf
in
(bad)
jp
mov
sub
prefetchwt1
xchg
jmp
std
fcmovu
inc
inc
dec
pop
ja
cwde
pop
loope
std
ins
push
cmps
ja
mov
push
mov
jmp
push
mov
push
and
cmps
scas
pop
repz
retf
jne
pusha
in
or
pusha
lock
bound
jnp
in
xchg
cmp
pop
push
hlt
cmp
mov
repz
mov
popa
aas
(bad)
loop
rol
out
into
call
bound
add
fidiv
stos
mov
outs
stc
ins
(bad)
push
add
mov
xchg
dec
adc
mov
xchg
mov
inc
rcr
(bad)
jae
and
mov
sub
cmp
push
or
js
aad
pop
sub
repnz
mov
mov
mov
mov
xchg
icebp
shr
shl
pop
test
dec
scas
xchg
pop
imul
retf
hlt
(bad)
bound
push
cmps
push
cmp
adc
gs
cmc
out
ja
jb
inc
xchg
fldcw
lahf
sbb
inc
loopne
dec
inc
ror
inc
jns
pushf
les
imul
adc
pushf
push
cmps
xchg
sub
popa
rcl
pop
sbb
pushw
mov
stc
cmp
mov
stos
stos
jmp
mov
repz
or
test
cmp
cdq
rol
ret
dec
push
lahf
xchg
jp
push
shl
sub
and
cdq
add
push
pushf
fsub
mov
ror
in
xchg
in
in
add
or
xchg
jge
sbb
fs
ins
xchg
mov
mov
push
pop
les
(bad)
pushf
dec
push
push
movs
mov
pop
jecxz
xchg
cmp
add
test
jecxz
sub
lock
into
xor
loop
mov
mov
test
mov
mov
imul
sahf
sbb
xchg
sub
inc
jae
adc
fistp
mov
iret
sar
(bad)
enter
clc
xlat
dec
in
fsubp
jecxz
or
and
leave
sbb
fnstsw
push
and
cmp
ja
sbb
mov
movs
(bad)
or
mov
lock
int3
mov
xor
adc
repnz
push
int
add
mov
dec
cmp
and
adc
sub
mov
aad
cmp
dec
mov
add
fmul
movs
pop
push
pop
fidivr
popf
xchg
sbb
jno
pop
outs
mov
mov
inc
in
cmp
add
daa
lock
sbb
cld
out
arpl
sahf
adc
repnz
push
adc
shl
push
outs
mov
mov
pop
aaa
adc
out
sahf
mov
mov
iret
jp
je
and
mov
xlat
dec
inc
jle
inc
mov
jecxz
rol
pop
dec
(bad)
stc
(bad)
push
or
sbb
cmc
jo
call
mov
(bad)
mov
arpl
dec
inc
mov
cmp
data16
mul
(bad)
push
sub
(bad)
sbb
dec
mov
xchg
sahf
fnstsw
and
test
pop
std
mov
xor
aam
hlt
std
mov
jmp
lds
jge
sti
pop
dec
dec
or
(bad)
mov
mov
pop
outs
inc
pop
dec
lea
jo
cmp
pop
and
cwde
inc
cwde
in
loop
push
cmp
cmp
push
inc
je
dec
mov
pop
int3
jnp
inc
test
push
mov
jmp
test
sbb
iret
push
retf
add
pop
cli
clc
call
in
or
xor
ins
in
push
sub
xchg
jbe
in
mov
cli
sahf
test
jp
mov
movs
adc
mov
and
nop
xor
retf
cmc
mov
in
(bad)
test
loopne
inc
in
add
cmps
out
sbb
outs
mov
or
add
jg
dec
mov
pop
mov
dec
or
mov
dec
das
mov
das
js
add
movs
xchg
push
sub
(bad)
stc
imul
pushf
out
xor
fisttp
adc
or
xchg
dec
mov
or
push
mov
dec
mov
xchg
sub
iret
inc
inc
adc
test
mov
jnp
fidivr
jle
cmp
leave
and
int3
xor
xor
jbe
xor
div
lods
push
cli
shr
xchg
jae
mov
aad
jno
mov
leave
nop
dec
out
test
cdq
pushf
inc
and
(bad)
xchg
adc
xor
pop
pushw
push
call
mov
push
lods
xchg
repnz
jl
push
jae
mov
lds
mov
jmp
std
scas
shl
test
fidiv
sub
sbb
mov
pop
daa
leave
out
sub
inc
pop
retf
or
popf
add
sbb
inc
pusha
sbb
cmc
dec
sub
pop
ins
xor
ins
pop
je
xchg
out
sub
add
mov
push
jl
mov
jmp
std
cmp
in
xchg
fcmove
sub
cs
(bad)
mov
xor
jne
sub
pop
fcmovnbe
mov
lock
lds
pop
mov
inc
outs
pop
dec
xor
jmp
and
jmp
or
dec
adc
and
mov
fs
mov
or
xchg
adc
mov
movs
mov
(bad)
addr16
add
dec
cmc
in
das
fisttp
aad
lods
jns
mov
push
sub
cmc
and
dec
mov
and
rcl
lds
lock
in
retf
stos
repnz
jns
into
int
js
std
jge
jl
int3
inc
loope
cmps
outs
push
push
xchg
sub
aas
in
mov
mov
push
nop
dec
fcmovnbe
ret
das
mov
dec
sahf
dec
mov
fimul
xlat
lods
arpl
sub
enter
pop
push
aaa
jmp
(bad)
mov
fisub
pop
int
mov
icebp
pop
jecxz
push
and
fimul
pop
xor
push
push
xchg
(bad)
repnz
xchg
jnp
xchg
push
arpl
out
pop
leave
sub
test
(bad)
push
daa
push
in
add
mov
jnp
ret
cdq
test
outs
sub
data16
xchg
leave
dec
ss
outs
dec
sub
cmp
out
aam
into
daa
xor
mov
fbld
sbb
js
jecxz
stos
imul
addr16
or
retf
loope
retf
(bad)
mov
and
je
rcl
in
jne
rcr
mov
pusha
and
sub
jnp
cmp
cmc
xor
shl
scas
add
fisttp
xchg
repnz
das
fs
retf
adc
pop
sar
mov
push
ss
loopne
lods
xor
dec
imul
dec
cmp
in
jp
lea
leave
cmp
or
movs
repz
and
dec
xor
sub
shl
cmp
dec
addr16
in
sub
clc
sub
mov
sbb
jbe
inc
int3
and
hlt
mov
jns
clc
js
jb
jmp
xchg
mov
(bad)
cli
dec
(bad)
jg
out
pop
jecxz
sub
pop
clc
(bad)
push
out
inc
dec
and
mov
inc
in
movs
les
mov
gs
retf
cli
cld
test
mov
sub
out
ja
pusha
(bad)
mov
les
xor
loopne
(bad)
push
inc
adc
inc
adc
cdq
out
pushf
movs
mov
jo
retf
add
push
(bad)
mov
mov
sbb
inc
cli
cmp
xor
xor
fcmove
gs
mov
push
push
jno
xor
aaa
jle
jge
jmp
test
mov
dec
xor
adc
xchg
in
adc
sbb
mov
daa
sub
xlat
icebp
(bad)
mov
xor
mov
cmp
push
test
mov
fsubr
out
add
pop
scas
sar
mov
shl
xor
dec
xor
pop
adc
das
icebp
ja
sbb
xor
and
sti
ja
sub
mov
enter
xor
scas
xor
int
mov
rcl
and
scas
cmp
(bad)
enter
in
aam
inc
int
mov
js
(bad)
pushf
mov
std
pop
mov
cld
outs
mov
aam
(bad)
scas
jmp
xor
enter
int
sbb
sub
jp
inc
mov
push
cmps
mov
dec
xchg
(bad)
xor
jo
ins
push
adc
retf
rcr
inc
add
nop
loop
cmp
cmp
cmp
jle
das
inc
out
push
mov
push
in
cmps
cmp
inc
or
push
or
iret
and
sti
xchg
dec
imul
dec
ja
xor
jae
mov
ds
jecxz
test
fbld
and
repnz
pop
mov
nop
mov
mov
and
hlt
sbb
or
mov
movs
jns
jp
retf
lea
cld
cmp
fdiv
int
outs
aaa
pusha
pop
push
gs
iret
es
xor
int3
aaa
idiv
nop
xor
imul
and
mov
xchg
enter
sub
mov
push
cmp
xor
arpl
leave
cli
lea
outs
pop
lods
inc
nop
cmps
xchg
jle
sub
(bad)
jmp
and
push
mov
or
movs
sbb
cmp
xchg
sub
movs
or
or
and
mov
xchg
(bad)
(bad)
js
inc
hlt
dec
lods
(bad)
sub
xchg
out
mov
test
cs
pop
int3
(bad)
aas
cli
inc
rol
push
jo
mov
mov
(bad)
dec
xor
jne
es
jle
sahf
pop
sub
cmps
inc
pushf
imul
mov
or
mov
mov
lea
das
dec
jmp
push
xchg
ret
imul
pop
dec
in
xchg
int3
(bad)
add
inc
ins
mov
shl
das
dec
mov
je
cmps
adc
cmps
(bad)
xchg
pop
mov
bound
test
inc
iret
ss
mov
int3
rcr
gs
xor
dec
outs
fs
fild
inc
dec
lahf
addr16
dec
push
sub
retf
je
mov
mov
mov
jl
and
(bad)
xchg
jmp
cli
aaa
jge
mov
cmp
into
(bad)
pop
cmp
cwde
mov
cmp
std
ja
add
xor
add
aas
test
les
imul
adc
pop
xor
adc
test
das
dec
mov
adc
std
fcmovu
mov
stc
or
mov
pop
mov
mov
push
push
leave
mov
adc
xchg
fsub
ins
cmp
repnz
out
inc
add
retf
jmp
adc
call
push
loopne
inc
popf
sbb
dec
cdq
sbb
dec
mov
out
jge
cs
aam
push
push
xchg
call
dec
or
mov
jb
adc
mov
ja
cld
aad
jge
(bad)
lods
pop
sub
jne
nop
lds
test
lds
dec
sbb
and
pop
jmp
outs
es
fisttp
xchg
test
dec
jmp
aas
fcmovne
fyl2xp1
dec
inc
(bad)
adc
outs
mov
aam
and
gs
jge
jb
mov
cmp
mov
aas
pop
sar
les
sbb
mov
jo
cmp
scas
test
rol
enter
dec
dec
in
adc
sbb
jae
popf
mov
dec
mov
cmps
into
gs
jo
sbb
add
sub
push
pop
fldenv
jecxz
into
sbb
mov
pop
and
(bad)
mov
push
aad
aam
in
outs
xlat
repnz
addr16
scas
push
aas
lock
or
jl
js
mov
jns
sbb
push
lods
dec
es
dec
mov
inc
arpl
fwait
mov
adc
jae
cmp
mov
loope
into
mul
loope
popf
fild
call
je
fsubr
icebp
xchg
daa
ror
cmps
or
sub
xor
fldlg2
clc
push
pop
stos
dec
mov
test
push
and
cmp
call
jecxz
mov
test
cli
dec
popa
fild
inc
test
and
mov
into
je
inc
idiv
jp
lds
xchg
xchg
iret
ins
pop
mov
cmp
push
jne
mov
inc
fld
add
lahf
loopne
(bad)
retf
cmc
lods
dec
mov
in
xor
adc
out
fsub
das
loope
xor
sbb
pop
jp
ret
and
jle
mov
fidivr
fist
fcom
out
mov
cli
data16
dec
aam
imul
std
movs
je
pop
or
sub
push
mov
sub
enter
cmc
mov
mov
aam
pop
push
jp
cdq
hlt
sti
adc
mov
icebp
pop
scas
lahf
scas
lahf
(bad)
adc
jl
and
sbb
sub
dec
pop
pop
outs
aas
out
js
mov
dec
mov
inc
mov
pop
icebp
gs
mov
sub
imul
push
and
mov
cmc
iret
jle
imul
pop
loope
mov
jb
dec
shl
or
nop
ror
call
sar
mov
adc
adc
mov
cmp
pop
jbe
xor
ins
daa
test
sub
rcl
hlt
dec
cmp
adc
or
dec
sbb
(bad)
jge
cmp
icebp
ins
cmp
loope
retf
pop
dec
xchg
jp
inc
shl
sub
xchg
js
xor
jo
sbb
mov
aad
shl
out
xchg
mov
dec
clc
ja
ficom
pop
push
fnstenv
mov
push
pop
or
ins
inc
cmp
mov
pop
sti
inc
fdiv
xor
(bad)
xchg
outs
das
aad
jge
jo
div
dec
into
jo
call
ja
sub
add
popf
cdq
inc
push
fucom
xchg
(bad)
movs
xor
and
shl
repnz
pop
das
adc
xchg
ficom
movlps
test
jnp
retf
inc
sub
pushf
xchg
movs
add
and
int3
jmp
arpl
in
jne
mov
loopne
pusha
inc
sbb
out
xchg
pop
jb
leave
(bad)
push
mov
iret
leave
add
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
mov
ret
pusha
pushf
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
popa
pushf
out
dec
ja
jne
popf
cwde
out
out
cwde
out
cdq
sbb
ins
cmp
out
outs
arpl
sti
inc
fidivr
mov
ins
push
(bad)
bound
inc
jne
add
outs
pushf
mov
scas
popa
neg
push
out
jg
sar
push
ins
imul
jns
fisttp
push
mov
sbb
pop
inc
push
jo
adc
ss
inc
cmp
les
ds
stos
fadd
dec
pushf
mov
fisub
sub
(bad)
adc
sbb
and
dec
sbb
inc
push
sahf
xchg
retf
outs
xchg
xor
pop
mul
movs
aaa
dec
pop
test
add
jecxz
dec
fiadd
mov
sub
sub
dec
sbb
out
dec
and
leave
xchg
mov
sbb
jo
add
mov
xor
xor
retf
dec
push
dec
es
out
loopne
push
xor
inc
stos
xor
pop
mov
pushf
adc
repnz
add
enter
(bad)
movs
mov
xchg
inc
pop
push
in
leave
push
call
ret
inc
mov
jns
and
lods
loop
dec
neg
inc
pop
mov
mov
jns
scas
sti
inc
mov
shl
sub
in
int3
adc
mov
pop
(bad)
jg
fisubr
mov
pop
les
push
pop
mov
out
fsubr
push
jns
repnz
fidivr
sub
adc
xor
into
push
adc
xchg
imul
sbb
dec
mov
ss
sti
cmp
(bad)
lock
cmp
pusha
inc
mov
gs
mov
adc
dec
(bad)
retf
mov
mov
push
sub
pushf
mov
add
sub
enter
mov
inc
or
sub
movs
push
je
imul
cs
mov
int
mov
shl
cmp
jp
cmp
(bad)
addr16
or
mov
sbb
xlat
pop
dec
pop
out
sub
sub
xlat
mov
mov
lahf
outs
or
jns
sbb
jp
mov
mov
repz
push
lods
xor
sbb
pop
aaa
fs
stc
cmps
stc
mov
enter
push
pop
int
mov
sahf
add
jp
in
xor
lahf
dec
ja
mul
mov
arpl
mov
jae
and
mov
mov
or
mov
fs
(bad)
lock
mov
fistp
sti
sbb
clc
mov
adc
aas
dec
(bad)
std
das
mov
cmps
push
out
ret
mov
mov
loop
jb
pop
repz
cmp
mov
aad
mov
(bad)
sar
mov
pop
and
sbb
cmp
or
adc
enter
pop
jne
stos
jo
sbb
imul
mov
mov
clc
out
pop
sub
rol
enter
fs
movs
push
xchg
mov
mov
add
mov
pop
xchg
or
aaa
pop
pusha
inc
mov
xchg
(bad)
jmp
xor
cmc
aad
sbb
fld
pop
pop
adc
jp
fdiv
jno
inc
(bad)
and
mov
jo
fwait
lods
push
stos
pop
sub
push
test
or
dec
and
mov
shr
mov
mov
ja
xchg
or
xor
fs
sbb
adc
test
push
lods
xchg
pusha
aad
fs
(bad)
jecxz
jne
rcr
dec
fucomip
or
inc
mov
dec
add
pushf
stos
call
gs
dec
imul
push
ja
aas
out
add
inc
inc
jmp
ror
daa
push
sbb
and
rcr
inc
movs
xchg
mov
lea
mov
test
popa
iret
jbe
adc
(bad)
les
dec
sub
pop
mov
sbb
ja
ret
mov
adc
aaa
mov
xchg
clc
ins
stos
das
adc
jl
fiadd
add
add
push
push
inc
cmps
jbe
inc
push
mov
ins
mov
dec
sub
loope
inc
mov
aaa
dec
pop
cmp
es
jno
arpl
push
fidiv
or
mov
ret
xchg
dec
jp
pop
inc
cli
idiv
sbb
cmp
fbstp
push
mov
jmp
sbb
sbb
inc
dec
lahf
mov
iret
or
mov
xchg
push
fnstsw
rcl
adc
push
cs
pushf
lock
push
adc
pushf
xor
mov
xchg
out
jo
fs
into
imul
lahf
jnp
xchg
mov
adc
cmp
popf
fnstenv
out
aas
cmc
push
adc
jb
(bad)
mov
call
pop
test
and
hlt
add
cld
adc
stos
int
int
in
loop
xor
jge
div
das
std
mov
movs
pop
repnz
gs
retf
dec
dec
bound
xchg
and
mov
ds
js
jnp
mov
(bad)
movd
mov
aaa
adc
mov
jecxz
(bad)
retf
lahf
mov
or
call
xchg
daa
push
xchg
icebp
jmp
push
or
xchg
push
sahf
in
sbb
inc
pop
and
add
psrld
dec
pop
call
pop
xchg
and
xchg
add
stos
mov
push
js
jo
std
out
mov
xchg
jle
icebp
mov
mov
sbb
push
es
sahf
enter
adc
dec
sub
pushf
xor
iret
sub
(bad)
out
or
mov
mov
inc
sbb
pop
in
(bad)
dec
pop
bound
cld
add
(bad)
xor
mov
data16
xchg
mov
or
xchg
sbb
mov
sbb
adc
or
add
std
adc
mov
mov
dec
xchg
xchg
mov
push
(bad)
mov
repz
mov
jle
sti
sub
fcomp
ret
push
fnstsw
cmp
loope
fcmovnu
movs
and
push
jo
cmp
je
leave
xchg
sbb
(bad)
xchg
pop
bound
stos
cwde
out
xor
pop
adc
in
push
push
les
push
sar
sbb
iret
rcl
xchg
pusha
aaa
adc
jle
push
dec
pop
mov
mov
test
xchg
pop
jl
dec
sti
push
or
add
adc
jg
mov
dec
xor
push
dec
pop
cdq
xor
aad
imul
mov
int3
ficom
out
xor
xor
out
mov
ins
int
sub
mov
out
inc
xor
loop
xchg
xor
nop
dec
mov
popa
enter
mov
inc
mov
sbb
adc
stc
push
or
or
push
(bad)
mov
adc
cmps
xor
and
(bad)
inc
add
inc
xor
xor
popa
aaa
push
aam
push
xor
out
jno
dec
inc
xor
int3
movs
iret
mov
ins
lea
jae
jmp
xchg
pop
mov
cli
sub
mov
push
inc
xchg
mov
repnz
mov
xchg
pop
ss
pop
jmp
dec
jmp
dec
les
cmc
jns
mov
cmp
adc
xor
cmp
cmp
mov
inc
mov
outs
mov
sbb
xor
cld
cmps
mov
ins
cmp
pop
fcom
ret
popa
xchg
push
syscall
lods
cwde
fstp
and
int
shl
jnp
inc
mov
cmp
and
cmc
int3
push
or
jge
dec
mov
mov
aas
mov
cmp
xchg
xchg
mov
jns
aam
out
loop
xchg
xlat
ss
lock
sbb
sti
xor
pop
push
pop
in
test
ret
ret
out
int3
pop
test
cmc
inc
dec
cdq
call
xchg
or
xchg
mov
push
in
cmp
pop
cli
in
inc
xchg
lahf
sbb
ror
shl
adc
inc
mov
xor
test
fadd
push
xchg
sbb
cdq
retf
jg
fidiv
daa
(bad)
sbb
test
or
out
add
ss
add
inc
bsr
dec
adc
inc
add
in
add
inc
outs
in
sar
xor
add
sahf
sar
push
mov
sbb
pop
add
lds
sub
ss
stc
mov
in
add
cmc
data16
add
inc
sub
arpl
xor
pop
sbb
ret
cmp
pop
push
dec
mov
jmp
pop
dec
ret
test
inc
adc
aad
outs
out
shr
inc
pop
xlat
shl
adc
cmps
dec
mov
xchg
jle
hlt
retf
pushf
leave
mov
stos
jne
scas
lods
test
inc
push
push
add
sub
cmps
mov
pop
arpl
cmp
test
aas
mov
cmp
rol
(bad)
add
or
adc
(bad)
fld
nop
push
inc
popf
(bad)
sub
inc
fstp
fstp
jae
xor
shl
inc
call
mov
add
ds
add
call
fiadd
mov
fldl2t
mov
cmps
and
aaa
xor
push
adc
jno
ja
xor
dec
sub
in
test
cmp
es
mov
aaa
fwait
dec
inc
mov
mov
xor
int3
ret
cdq
jl
pusha
sbb
push
out
mov
or
xchg
jbe
(bad)
ficom
(bad)
leave
xchg
xor
and
nop
shr
add
pop
pop
data16
pop
mov
sbb
stos
leave
retf
dec
jl
ffreep
dec
inc
sti
mov
js
jne
fxtract
fwait
retf
cmp
daa
sub
pop
or
push
lock
(bad)
mov
inc
jp
xor
rcl
les
inc
dec
cmp
cmp
push
ffree
enter
daa
mov
icebp
add
ja
inc
xor
sar
in
jne
gs
cmc
loope
jle
popa
movs
jns
mov
or
push
pop
jmp
xchg
ja
mov
pop
outs
push
ret
test
dec
cmp
sbb
ds
pushf
ret
or
jnp
cmp
add
cmc
pushf
test
add
xor
mov
cld
inc
loop
sbb
sub
push
fldenv
aas
inc
push
data16
lahf
or
jns
jo
std
inc
in
add
jo
push
shl
push
push
test
add
inc
inc
xor
inc
push
loopne
leave
dec
shr
inc
std
into
cli
lds
mul
pop
push
test
movs
mov
and
int3
inc
dec
test
or
(bad)
cmps
push
(bad)
cmps
inc
mov
jp
das
lock
cwde
pop
or
add
xlat
jmp
test
adc
jge
pop
shr
sub
(bad)
in
shl
mov
ins
xor
and
jno
sahf
cdq
adc
xor
inc
jp
jle
lods
jp
les
(bad)
cs
xchg
ins
lahf
cmp
sbb
cmp
in
test
popa
or
in
jp
lea
xlat
int
mov
push
adc
call
add
rcr
push
pop
enter
mov
mov
xchg
mov
ds
out
cmp
into
mov
into
pop
popf
xor
xor
ins
adc
call
ins
pop
ds
mov
aam
mov
neg
ds
pop
mov
mov
cwde
dec
mov
jno
out
(bad)
pushf
inc
mov
mov
mov
lds
xor
ds
dec
mov
outs
ror
test
ds
cmps
jle
mov
stc
push
cmp
adc
push
mov
and
cmp
or
xchg
scas
fs
dec
add
stos
imul
mov
mov
dec
inc
out
mov
icebp
lock
xchg
in
neg
jno
dec
mov
dec
scas
(bad)
sub
add
jmp
push
or
add
pop
dec
(bad)
repnz
pop
push
sbb
outs
aas
retf
pop
(bad)
sar
fbld
adc
xchg
mov
sbb
out
cli
inc
ud1
iret
call
mov
adc
xor
xor
push
xchg
shl
cmc
push
je
and
(bad)
mov
fwait
in
add
jb
adc
push
adc
pusha
fcom
dec
test
scas
repnz
jecxz
mov
inc
fistp
rcl
mov
mov
test
pop
and
test
pop
mov
fstp
or
mov
xchg
mov
xor
xchg
scas
mov
hlt
mov
scas
int3
and
shr
ss
xchg
mov
cmp
aad
aad
sub
pushf
or
les
mov
jmp
test
shl
mov
mov
das
or
mov
push
arpl
gs
cld
(bad)
sub
fucomip
xchg
enter
mov
aam
lods
(bad)
jbe
int
cli
inc
ja
dec
out
clc
loope
rcl
add
retf
sbb
out
inc
ret
mov
push
lahf
mov
cmp
sbb
mov
push
pop
sbb
push
or
jnp
test
fisubr
retf
add
test
push
inc
push
(bad)
inc
(bad)
xor
call
push
push
sub
mov
xor
push
adc
call
adc
inc
xchg
mov
add
das
out
inc
rcr
jl
imul
mov
in
fiadd
mov
in
mov
into
jge
(bad)
cdq
pop
inc
jno
ret
inc
mov
pop
into
fistp
sbb
fnstenv
shl
xchg
sub
jp
pop
je
inc
ja
add
loop
push
repnz
jbe
mov
shl
mov
test
ins
cld
in
stos
scas
sbb
xchg
or
xchg
lods
outs
jae
pusha
sub
cmp
xchg
loopne
and
aam
je
or
and
jl
cmp
lods
(bad)
in
aas
jge
data16
xchg
out
pop
mov
test
cdq
dec
or
adc
sbb
xchg
ret
jmp
dec
cmp
hlt
xchg
push
lods
pop
popf
(bad)
and
pop
ror
scas
mov
xchg
sar
lahf
add
jnp
pop
loop
dec
int3
shr
xchg
mov
cmp
dec
or
sbb
jae
in
inc
xlat
mov
fbld
add
xchg
push
push
pop
xor
out
movs
push
outs
xlat
(bad)
sbb
jp
mov
imul
(bad)
mov
cs
jb
and
sbb
jmp
inc
icebp
out
in
cwde
sar
outs
jns
inc
scas
lods
or
mov
ss
shr
popa
xchg
in
jmp
jae
rcl
and
jecxz
jecxz
xor
xchg
push
cmps
cdq
das
inc
fs
dec
mov
xchg
inc
mov
inc
sti
cmp
mov
dec
call
sar
nop
sub
jecxz
imul
mov
push
das
inc
cwde
jno
jg
mov
sub
in
fwait
jmp
repnz
call
mov
mov
scas
fadd
cmp
pop
fistp
lds
push
mov
sbb
and
sahf
out
sbb
push
imul
test
fcomp
inc
mov
mov
ja
out
pop
push
sub
push
(bad)
in
adc
lods
sbb
ja
adc
std
and
sbb
pop
lds
mov
shl
sub
push
mov
(bad)
ins
mov
adc
shl
xor
cli
ins
adc
sub
xchg
sub
ror
dec
fs
outs
into
cmps
mov
mov
and
cmc
fidiv
test
sub
pop
retf
mov
and
or
sbb
int
bound
js
sbb
test
aas
adc
mov
mov
dec
add
push
popa
stos
pop
data16
mov
or
inc
(bad)
js
cmp
pop
sub
icebp
sub
cmp
add
jae
bound
push
cmp
stos
lock
popf
(bad)
inc
fldcw
pop
mov
adc
aas
(bad)
cld
repz
aas
(bad)
cld
repz
push
clc
repnz
sub
fld
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
scas
ror
mov
mov
cmp
cmps
dec
xor
in
neg
ror
jp
ja
cmps
jmp
jg
(bad)
mov
dec
clc
add
shl
or
bound
aam
cmp
imul
ret
mov
repz
call
das
lahf
push
pop
lods
cmps
into
mov
js
push
push
loope
ds
jns
movs
pop
and
pop
pop
movs
xchg
out
mov
push
pop
xor
stos
xor
jbe
fwait
sub
daa
js
sub
dec
pop
leave
idiv
mov
pop
xor
test
xchg
add
aam
jecxz
(bad)
outs
shl
lods
(bad)
repz
xor
mov
jnp
mov
lahf
xchg
cmp
mov
jne
js
out
and
adc
(bad)
push
cmp
xchg
les
shl
xchg
scas
scas
mul
sub
cmp
movs
lods
or
popa
mov
mov
sbb
cld
add
cmp
cmc
xchg
jmp
stc
(bad)
dec
mov
pop
ficom
dec
pop
(bad)
jns
xor
int
test
je
and
jge
std
pop
fsub
xchg
mov
xor
mov
(bad)
or
test
or
push
mul
push
stc
outs
rcr
(bad)
pop
aad
sti
and
cmps
push
ds
int3
push
neg
in
js
repz
xchg
int3
adc
xor
fiadd
ins
cmp
bound
sti
mov
pop
call
shl
xor
mov
wrmsr
and
ins
mov
(bad)
sar
pop
sbb
cld
sub
(bad)
mov
adc
add
(bad)
imul
xor
push
jo
icebp
pop
xor
dec
lahf
dec
daa
sub
fcomp
sbb
test
inc
es
jle
pop
cmp
out
idiv
sbb
sub
leave
fld
pop
lahf
inc
test
sti
dec
shr
xor
add
xor
lods
jp
mov
(bad)
cld
scas
ins
sub
adc
jge
pop
jp
jnp
pop
scas
call
pusha
jbe
xor
pop
pop
cmp
call
add
mov
sub
pushf
retf
pop
jecxz
push
mov
jne
mov
dec
push
push
retf
and
adc
in
enter
cld
adc
xor
adc
icebp
fs
outs
and
mov
fidiv
jecxz
(bad)
stc
jp
(bad)
fucomi
lea
fwait
adc
mov
fdivr
movsx
(bad)
cmc
in
sbb
lods
shl
or
xor
push
or
dec
mov
dec
rcr
sbb
(bad)
cdq
jnp
repz
in
cmp
icebp
(bad)
loope
and
or
shr
mov
jl
add
inc
or
call
sbb
or
push
push
push
ss
js
fild
or
sti
mov
xchg
cs
pushf
lock
(bad)
cdq
and
js
loopne
and
iret
sub
stos
scas
push
loopne
fdiv
popf
call
scas
out
sub
lahf
mov
jmp
xchg
pop
addr16
sti
js
ins
es
jle
pop
jo
js
sub
add
mov
xchg
repz
pop
push
mov
test
(bad)
je
pop
mov
aas
aaa
mov
add
outs
sbb
cmps
jnp
data16
test
mov
ja
stos
jne
int
ins
out
retf
cmp
mov
push
data16
ficom
out
mov
or
lods
add
sbb
popf
hlt
jae
inc
dec
and
es
repnz
cli
mov
rcl
shr
mov
cld
or
adc
in
mov
add
xchg
pop
mov
jae
pop
cmp
inc
jmp
or
cmps
cld
mov
add
add
out
mov
or
stc
jp
stc
cmp
xchg
pop
add
bound
cmp
les
jp
sub
call
shr
push
sbb
rcl
int
ror
aam
cmps
mov
xchg
retf
aam
mov
push
sub
mov
jne
aas
loope
ss
xor
xor
ret
fcomp
(bad)
adc
ret
ret
xor
and
gs
popa
test
xchg
fdivr
call
inc
movs
xor
jne
and
lahf
es
ret
add
dec
int
xchg
dec
addr16
int
rol
cmps
cmc
bound
jno
mov
stos
lds
inc
jge
and
mov
push
lea
xchg
jmp
add
mov
ja
or
in
jmp
cs
int3
xor
fld
fstp
and
xor
sahf
dec
or
push
mov
dec
imul
test
push
test
mov
div
sbb
iret
mov
mov
pop
xchg
adc
mov
cli
sahf
jns
mov
mov
idiv
mov
sbb
push
movs
sbb
cmps
pop
mov
mov
dec
xor
mov
lahf
dec
gs
daa
push
xlat
in
iret
dec
jmp
jbe
ins
mov
pop
aad
xor
mov
loope
sbb
arpl
pop
test
mov
addr16
or
loope
icebp
mov
cdq
shr
mov
cmps
lods
ja
enter
jne
pushf
pop
test
mov
jb
adc
aas
mov
and
sub
neg
add
ss
push
mov
hlt
loopne
inc
data16
inc
sbb
sbb
inc
add
cmp
mov
shl
xor
jmp
ins
and
fstp
jne
sahf
test
jmp
mov
push
push
sub
out
adc
shr
std
clc
sbb
mov
stos
pop
jmp
movs
xchg
jbe
jns
xlat
test
xor
jno
dec
add
fstp
jle
adc
pushf
xlat
add
jp
gs
mov
fs
in
dec
ins
shr
dec
stos
enter
pop
ins
outs
out
mov
and
clc
scas
nop
and
xchg
mul
dec
mov
stos
retf
std
pop
ret
dec
std
dec
jmp
loop
xchg
pop
in
sub
xchg
aad
loop
aaa
xchg
dec
cmp
inc
xlat
jp
or
std
pop
test
aam
dec
int3
rol
jno
cmp
mov
sar
aad
fwait
nop
adc
sar
sbb
lods
div
xchg
call
jg
jge
(bad)
and
iret
sbb
dec
(bad)
loop
pop
sub
aam
mov
inc
shr
fs
aad
xchg
mov
test
push
mov
xchg
xor
pop
xor
or
loope
sbb
mov
scas
shl
lock
fistp
mov
pop
ja
dec
jne
fwait
mov
cmc
loop
pop
retf
adc
imul
movs
out
cmps
pop
shr
mov
cmp
and
mov
arpl
sti
jmp
sti
scas
adc
pop
pushf
addr16
sbb
rcl
pop
mov
test
add
fisubr
inc
test
mov
or
call
xchg
xor
and
movs
and
jge
out
test
cli
push
push
cwde
push
fnstcw
in
scas
test
in
and
push
xchg
add
test
das
jno
add
std
gs
jno
push
and
cmp
cmps
mov
inc
push
inc
jnp
mov
dec
rcr
sbb
fldcw
mov
cs
out
jl
cmp
xchg
xchg
push
sub
mov
mov
xor
fcmovbe
cmp
pop
lods
in
outs
hlt
jo
xor
cdq
call
icebp
sar
jmp
cdq
sbb
dec
ss
aas
xchg
inc
or
pop
mov
mov
xor
(bad)
cmp
xlat
lods
inc
retf
stos
mov
adc
pop
popf
ja
movs
int
push
sahf
or
sub
test
shl
hlt
into
jge
mov
dec
pop
or
ins
call
into
pop
ficom
mov
xor
into
mov
cdq
jg
or
mov
mov
add
pop
mov
pusha
mov
ficom
xlat
sub
movs
sbb
retf
add
jle
xor
test
stos
jmp
inc
nop
jmp
ja
cmc
cmp
cmp
dec
sub
cmp
or
sbb
jne
cmc
es
dec
cld
sti
lock
test
push
andnps
fadd
sbb
xor
mov
jne
addr16
xor
in
mov
pop
adc
lds
rol
pop
cmp
int
xchg
pop
(bad)
popa
(bad)
cmp
sbb
into
daa
push
int
cmps
ret
dec
mov
in
lea
push
or
fcom
loop
stos
jo
dec
inc
mov
leave
stos
call
sbb
inc
dec
movs
inc
arpl
mov
ret
ins
mov
imul
xor
in
xchg
aas
or
mov
movs
frstor
sete
pop
sub
push
rcr
imul
and
sub
and
adc
out
test
mov
(bad)
fdivr
clc
cmc
mov
inc
les
lds
xor
stc
imul
jb
xchg
dec
data16
mov
ret
nop
cmps
les
mov
call
xchg
jbe
cmp
fst
pop
jns
sub
(bad)
mov
das
jno
out
jb
jecxz
pop
stc
cwde
xchg
cld
jbe
cmp
mov
sub
iret
test
imul
jg
imul
adc
or
das
xchg
dec
push
nop
(bad)
push
jge
add
jmp
(bad)
nop
je
jp
adc
fld
test
scas
dec
icebp
ret
pop
xchg
aas
jmp
mov
pop
bound
test
fsubr
nop
adc
inc
and
push
imul
or
pop
iret
mov
mov
add
sub
or
pop
push
xchg
lds
leave
mov
or
pop
int
aad
cmp
retf
pop
hlt
push
stos
scas
sub
loope
mov
fiadd
fwait
jb
push
adc
rcr
cmc
push
movs
push
out
sub
pop
push
sub
xchg
(bad)
shr
(bad)
sub
pop
loopne
ror
std
outs
ret
lahf
sub
imul
scas
test
xchg
fs
inc
mov
enter
sbb
and
popa
outs
dec
call
shl
inc
cmp
mov
(bad)
stos
and
ss
int
pop
or
mov
sbb
jg
ret
fstp
into
xchg
inc
add
bound
jbe
add
mov
dec
(bad)
xor
xor
xchg
call
or
adc
repnz
push
add
push
outs
popf
neg
popf
fld
fwait
cdq
shl
adc
adc
pop
repnz
push
mov
lea
(bad)
xor
(bad)
loop
dec
(bad)
pop
adc
ret
xor
daa
ins
cwde
inc
and
leave
jmp
jge
sbb
mov
pminsw
hlt
pushf
das
rcr
push
xor
loop
sub
xor
imul
cli
cmp
les
out
adc
div
dec
clc
ds
shl
lock
xchg
and
sub
sub
fs
cmp
lods
sar
jb
add
repz
xchg
pxor
in
ss
or
cmp
iret
push
sbb
push
lock
and
pushf
jno
repnz
cmp
pop
test
xor
test
cmp
daa
mov
cld
inc
jmp
mov
or
out
pop
or
fdiv
fcomp
daa
mov
(bad)
jb
test
retf
ret
adc
mov
inc
std
push
iret
xor
cmps
sbb
(bad)
stc
int
mov
stos
mov
(bad)
push
cld
arpl
push
in
lock
cmps
mov
push
imul
mov
sub
ror
enter
sti
repnz
jecxz
mov
xlat
jae
xchg
dec
adc
int
test
mov
mov
movs
int
fisubr
rol
std
mov
pop
adc
shl
add
jge
push
popa
add
iret
gs
xchg
mov
lods
rol
xor
mov
repnz
rol
faddp
push
dec
lods
jno
ja
adc
jne
push
mov
in
or
das
test
lea
popf
in
and
cmps
out
or
icebp
xchg
sahf
pop
ins
mov
ret
inc
cdq
call
icebp
in
and
data16
ja
push
fwait
in
rcl
cmp
and
add
stc
aam
mov
or
jl
xor
lods
imul
or
retf
call
std
ins
jecxz
int
pop
mov
sub
or
sbb
pop
imul
sbb
pop
mov
sbb
imul
int3
and
int3
sbb
lea
jp
mov
inc
movs
mov
and
push
and
push
je
loop
in
sbb
sub
or
fs
pop
mov
shl
adc
rcr
in
stos
test
cmp
shr
and
adc
rcr
int3
cmp
mov
shl
inc
in
pop
iret
fisub
rdtsc
je
sub
mov
sub
mov
(bad)
xor
lods
and
sub
push
loop
inc
aaa
mov
and
adc
inc
test
add
rcl
jle
inc
add
shl
outs
vmread
fcom
btc
pop
sub
push
inc
repnz
nop
dec
idiv
out
sub
out
cli
jns
setne
je
adc
adc
cdq
jl
inc
es
inc
lds
sti
pop
jo
jb
or
mov
mov
pop
mov
xchg
outs
mov
xchg
std
movs
xor
mov
js
mov
or
mov
cmp
add
mov
mov
mov
xchg
jmp
enter
icebp
jns
push
repnz
dec
lods
lods
cmc
shl
rcr
mov
std
mov
ficom
scas
and
pop
cli
(bad)
std
mov
xlat
stos
adc
test
stos
mov
(bad)
arpl
cmp
add
repnz
mov
enter
in
lock
sbb
out
leave
or
mov
jo
inc
cmp
dec
sar
int
cdq
dec
les
sbb
aad
dec
mov
stos
mov
push
(bad)
pop
mov
dec
jae
sbb
mov
call
push
ins
inc
shl
aaa
add
xchg
lds
unpckhps
pop
mov
ja
shl
add
cmp
(bad)
enter
aam
popf
cmp
adc
sbb
cdq
aas
xchg
leave
test
pop
aam
call
leave
sar
gs
mov
in
popf
add
mov
mov
push
test
mov
addr16
outs
aam
fadd
data16
and
or
icebp
out
xchg
push
sub
push
mov
push
and
jp
or
sahf
ins
jb
(bad)
arpl
movs
pop
stos
mov
stos
inc
add
xor
in
mov
data16
or
mov
lds
sub
das
shr
(bad)
xor
push
aaa
bnd
pop
mov
mov
sbb
into
mov
call
and
sbb
mov
dec
mov
xchg
add
lds
icebp
xor
pop
imul
mov
dec
ins
push
or
or
lods
les
in
lahf
pop
dec
outs
push
stos
mov
idiv
cmc
push
fidivr
pop
xchg
fnstcw
pop
pop
in
retf
cwde
cld
retf
mov
adc
fsubr
fmul
cmps
mov
sbb
mulps
(bad)
mov
add
(bad)
test
ja
movs
pop
out
or
div
or
mov
popa
push
mov
dec
adc
and
mov
leave
test
sub
call
jno
lahf
dec
jne
pop
cmp
mov
enter
sub
(bad)
stc
out
jg
stc
out
jg
pop
add
add
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
test
or
out
nop
out
adc
inc
mov
xchg
hlt
call
test
adc
pop
sbb
nop
and
sbb
nop
adc
push
(bad)
out
push
add
xor
mov
mov
(bad)
movs
add
jb
pop
jge
daa
test
lods
jmp
mov
loop
out
adc
sub
pop
cmps
pushf
mov
les
lock
mov
das
(bad)
enter
xchg
outs
push
rcl
or
dec
push
fnstenv
mov
and
mov
xchg
imul
mov
popf
leave
mov
inc
pop
jmp
or
mov
pop
mov
xor
movs
cdq
or
bound
and
data16
dec
out
hlt
call
dec
jno
mov
rcl
sbb
push
jl
inc
stc
hlt
out
popf
mov
stos
push
push
(bad)
(bad)
clc
std
pop
loope
add
and
cmps
out
(bad)
push
push
les
loop
pop
sahf
dec
sub
dec
or
xor
sbb
mov
inc
sub
sub
jo
loop
cli
ror
imul
nop
scas
test
addr16
rcl
adc
xor
cs
sti
lods
movs
or
fwait
xor
mov
jmp
imul
xor
scas
and
aad
mov
(bad)
outs
dec
jge
dec
and
pop
aaa
jge
imul
xchg
daa
mov
sbb
dec
adc
mov
mov
inc
adc
pusha
adc
mov
leave
pop
mov
gs
int
mov
ret
or
mov
lods
inc
dec
push
jge
pop
pop
icebp
mov
mov
out
push
punpckhbw
cmp
in
pop
cmps
shl
dec
sbb
scas
js
xor
inc
push
popa
mov
fild
dec
jne
xor
fisubr
sbb
out
mov
hlt
or
fwait
mov
out
mov
ja
add
mov
mov
pop
mov
add
push
adc
sahf
test
cmp
mov
mov
imul
(bad)
sub
dec
xor
and
arpl
call
jl
add
fmulp
test
adc
mov
adc
xchg
and
lahf
popa
mov
aam
pushf
mov
pop
or
xor
xchg
and
cdq
lea
pusha
or
xchg
(bad)
and
cmp
push
je
push
gs
sbb
fisttp
jle
sub
dec
call
xor
inc
mov
icebp
push
(bad)
bound
mov
sbb
les
adc
pushf
mov
mov
imul
or
out
mov
adc
in
outs
retf
cmp
retf
sub
xlat
mov
mov
sbb
into
lock
imul
or
loope
and
inc
xchg
add
in
mov
fistp
push
(bad)
inc
jp
add
bound
stos
sbb
mov
cmp
xchg
push
test
mov
and
scas
scas
test
ds
gs
std
call
enter
aas
xchg
cmp
ds
mov
test
test
mov
and
sub
fimul
cmp
ss
(bad)
out
fldcw
push
jns
cmps
add
test
sub
fisubr
push
ret
cld
jb
shl
ins
cmp
xlat
mov
scas
fcomip
xor
push
pop
cmc
xor
push
leave
inc
fidivr
dec
cmp
cmp
push
dec
mov
mov
dec
fwait
push
xchg
adc
stc
mov
(bad)
cmps
(bad)
loopne
adc
mov
cs
and
ret
cld
aam
int
adc
loopne
(bad)
int3
not
inc
sar
pop
loope
lea
inc
ss
jb
cmp
dec
retf
fstp
arpl
cmp
jmp
clc
ret
mov
mov
adc
adc
in
leave
adc
pop
xchg
cmp
mov
enter
ins
sub
jge
jp
dec
ja
jns
xor
mov
cwde
sahf
lods
adc
pop
push
outs
pop
push
das
call
test
mov
movs
adc
mov
shl
js
mov
movs
shr
rol
cmps
ja
popa
jae
rcr
pop
dec
(bad)
jns
xor
hlt
popf
push
mov
test
add
cli
(bad)
add
lds
fst
mov
mov
fadd
xchg
imul
mov
cmps
cmps
add
jge
(bad)
idiv
sub
cmp
(bad)
aaa
cmps
in
jnp
xor
xchg
push
movs
jl
(bad)
shr
into
dec
(bad)
std
mov
jecxz
xchg
ds
out
out
test
out
jmp
iret
pushf
leave
ja
cmp
mov
mov
popf
fndisi(8087
push
or
add
jae
aaa
(bad)
js
shr
scas
pop
movs
mov
iret
or
jl
or
mov
sti
mov
cmp
xchg
jne
push
jge
in
push
loop
call
ret
lea
jnp
jnp
dec
shr
ret
pop
or
sbb
or
push
das
mov
or
clc
dec
xchg
mov
arpl
in
scas
(bad)
adc
xor
cdq
xor
pop
(bad)
fwait
(bad)
pop
call
mov
mov
lds
ins
pop
pop
cmp
popf
jbe
xchg
stc
sub
test
mov
ror
adc
mov
or
sub
loop
lds
sar
cmps
aad
pop
adc
ja
mov
add
or
ffreep
or
add
xchg
(bad)
fcomp
fild
int
sub
out
jge
es
and
mov
outs
jl
fstp
ja
dec
lds
out
xor
push
out
jne
xlat
xchg
fisubr
add
sbb
dec
test
cmp
add
xor
inc
popa
rol
xor
std
sbb
popf
cmps
adc
in
and
imul
out
xchg
sub
lahf
retf
cmp
jge
popf
test
out
sbb
and
push
and
icebp
mov
sub
ds
scas
shl
adc
and
or
call
xchg
mov
push
std
leave
hlt
call
mov
movs
add
ja
scas
cdq
enter
xchg
in
cli
push
(bad)
mov
dec
sbb
mov
call
jbe
call
mov
jae
pop
add
bound
dec
cld
mov
adc
into
mov
push
add
outs
arpl
adc
dec
jno
jmp
sub
add
int3
mov
in
inc
popf
push
int
dec
ror
add
movs
je
mov
push
xchg
jmp
nop
mov
jmp
fild
pop
bound
jns
xlat
sti
jmp
icebp
jge
iret
out
les
sub
retf
neg
shl
in
aaa
push
add
mov
push
pushf
jae
call
test
inc
test
inc
pop
xchg
inc
mov
or
ja
clc
cmp
lods
pop
fidiv
fwait
dec
fidivr
jbe
test
sub
das
lods
test
aas
hlt
out
movs
mov
into
test
xlat
mov
nop
mov
mov
popf
loope
pop
mov
cmp
sbb
shl
cmp
pop
or
adc
mov
out
stos
pop
inc
xchg
es
ret
rol
mov
sub
into
xor
pop
dec
push
frstor
lods
cwde
loop
jno
jb
push
pusha
fsub
cld
fistp
cmps
(bad)
jae
pop
push
fld
dec
push
adc
stos
ret
mov
iret
jno
and
pop
jge
es
mov
mov
mov
leave
sbb
imul
dec
sub
div
jmp
(bad)
xor
out
stc
fsub
scas
imul
add
enter
xor
sub
inc
cmc
lods
mov
sbb
mov
hlt
pop
jns
dec
pop
(bad)
sub
xor
call
mov
movs
sub
int3
lods
aad
hlt
stos
or
das
test
pop
jmp
cmp
add
ss
shl
or
push
stos
add
lahf
scas
adc
cmp
lahf
mov
mov
dec
ins
pop
push
ficomp
and
fst
ins
clc
dec
out
std
mov
aam
cmp
(bad)
push
add
or
jmp
pop
test
push
mov
xor
xor
loopne
ds
mov
jbe
push
or
movs
mov
mov
fimul
xlat
icebp
sti
int3
or
call
sti
stos
ret
idiv
pop
pushf
lock
imul
jge
pop
ret
div
cmp
in
inc
mov
mov
pop
dec
cmp
xor
pop
sti
mov
jmp
push
femms
mov
or
add
call
fstp
into
xchg
mov
imul
dec
push
les
sub
add
nop
mov
xchg
sbb
rcr
pop
inc
test
add
fldcw
jg
imul
or
xor
sti
(bad)
push
mov
jmp
pop
pop
add
div
cmp
pop
cdq
inc
(bad)
sbb
aaa
iret
or
pop
imul
mov
ficomp
ds
jnp
push
push
out
mov
pop
fstp
pop
daa
repnz
sub
mov
add
sbb
in
fisub
in
imul
rcl
push
mov
retf
into
call
pop
and
xchg
inc
cmp
dec
enter
jmp
xor
xchg
loop
ror
cmp
mov
xor
leave
rol
lds
and
push
push
mov
mov
adc
stos
jle
or
inc
loop
aad
pop
es
push
xor
iret
ja
movs
enter
mov
push
scas
or
fistp
cld
sub
dec
bound
inc
mov
fsubr
dec
movs
mov
sbb
pop
mov
jg
icebp
test
cmp
mov
fidivr
into
pop
pop
mov
test
test
push
stos
dec
mov
sbb
sahf
test
std
jp
test
nop
xlat
mov
cld
div
or
int3
fistp
shl
ds
aad
outs
jmp
in
inc
stos
and
psllq
outs
pop
xor
mov
add
inc
xor
lock
adc
jbe
mov
inc
(bad)
mov
data16
cmc
js
or
pusha
cld
fcomp
push
xchg
dec
daa
(bad)
jno
pusha
enter
xor
jbe
fstp
jmp
outs
dec
stos
mov
pop
adc
retf
stos
cs
cwde
pop
jno
shl
or
enter
push
xchg
stos
dec
xchg
ins
aaa
fstp
sar
ficomp
push
enter
(bad)
sub
sahf
cdq
ins
mov
and
nop
div
xchg
je
xchg
push
std
aam
ret
das
inc
xor
int
aad
jns
xor
xor
shl
imul
imul
push
xchg
in
loope
fbstp
(bad)
sar
or
and
mov
leave
aaa
sbb
push
adc
imul
ds
push
aam
cli
xchg
lds
sub
adc
lods
adc
rcl
add
mov
retf
clc
adc
inc
pop
cmp
sub
and
mov
xchg
adc
mov
add
and
jl
aaa
sub
rcr
lahf
(bad)
jo
and
add
adc
add
jl
cli
mov
test
bound
sub
data16
dec
(bad)
out
(bad)
jg
aam
aaa
leave
sbb
adc
test
push
jecxz
sbb
fst
push
dec
and
mov
cmp
dec
mov
imul
pop
enter
xchg
cmp
xor
in
and
push
sbb
pop
push
dec
lods
cdq
dec
cmps
add
mov
dec
test
xor
inc
xchg
jecxz
not
js
rcr
in
xchg
std
xchg
add
setle
xor
cmp
cmc
mov
in
jmp
dec
dec
sahf
mov
leave
aas
loope
jo
stos
aam
(bad)
dec
cli
inc
cmp
retf
out
into
(bad)
rol
and
cmp
dec
aad
not
jmp
aaa
mov
lods
cmp
mov
lahf
sti
pop
jb
ret
loopne
inc
jb
mov
ss
pop
pop
pusha
aaa
mov
sar
cmps
ds
mov
xchg
sub
movs
rol
xchg
js
sbb
fwait
div
jp
xchg
xchg
jb
div
mov
jne
(bad)
daa
sahf
add
sbb
(bad)
push
inc
(bad)
xchg
add
aaa
ficomp
rcl
jbe
xchg
retf
pop
mov
xchg
loop
jae
inc
xchg
call
cmp
repz
push
(bad)
cmp
mov
leave
mov
add
aam
in
adc
das
cmp
sub
mov
or
mov
adc
(bad)
aaa
popa
nop
jmp
sub
call
jbe
addr16
frstor
fwait
es
clc
xor
xor
iret
fninit
cmp
es
in
add
movs
sbb
aaa
das
xchg
xchg
jg
push
dec
in
push
jbe
std
repz
pop
test
add
mov
mov
and
stc
mov
stos
test
and
arpl
je
aam
imul
pop
cmp
repz
xchg
test
cdq
in
test
out
push
add
rcl
jl
pop
call
loop
xor
daa
leave
push
push
pop
(bad)
mov
xchg
mov
popa
add
pushf
scas
dec
ret
dec
sti
mov
cmp
out
loopne
imul
cmp
aas
lea
sub
rep
inc
pop
dec
bound
mov
xchg
hlt
test
imul
rcr
mov
dec
fmul
pop
in
dec
test
repz
popf
aaa
mov
jg
std
xlat
outs
sbb
jge
daa
jle
sub
push
cmp
stos
test
xchg
cmp
mov
adc
fadd
(bad)
mov
scas
push
mov
ret
dec
mov
inc
sbb
cli
(bad)
imul
rcr
mov
loope
inc
cmp
outs
movs
js
add
mov
jmp
xchg
call
int
push
movs
aas
dec
ret
or
xor
or
test
iret
mov
test
sbb
inc
scas
mov
xchg
lahf
retf
ror
xchg
cli
push
cmp
bswap
in
inc
outs
pop
sbb
or
aam
adc
out
cmp
cmp
adc
and
cmc
pushf
push
pop
push
leave
and
inc
inc
ins
(bad)
aas
xlat
hlt
iret
outs
jge
xlat
bound
pop
and
cmp
int
jbe
(bad)
or
xchg
jge
data16
xchg
jecxz
jge
jg
cs
out
ja
xchg
push
add
add
cmc
xchg
xchg
(bad)
retf
dec
sbb
retf
mov
in
cmp
sub
xor
(bad)
and
(bad)
fdivr
lods
xchg
mov
mov
push
retf
pop
cmp
sub
out
xchg
addr16
idiv
push
call
jecxz
ja
mov
adc
mov
pop
push
fdivr
mov
jns
test
push
lds
and
movsx
dec
inc
cmp
xchg
ins
cwde
cli
jae
sar
out
shl
inc
and
dec
add
jno
mov
mov
mov
imul
push
inc
inc
inc
pop
jbe
add
mov
enter
xor
xchg
sbb
or
mov
(bad)
(bad)
and
inc
mov
das
adc
mov
jg
int
adc
jge
jecxz
mov
imul
vpminub
into
mov
out
xor
scas
ja
cmp
ins
pop
(bad)
lahf
pop
(bad)
stc
out
jg
stc
out
jg
pop
add
int3
inc
push
out
fild
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
int
dec
ja
mov
les
imul
cmp
int
dec
outs
fidiv
mov
xchg
leave
mov
xchg
enter
mov
add
cli
or
dec
xchg
lock
pop
in
cli
push
aaa
xchg
adc
or
arpl
mov
xor
(bad)
xchg
ins
lods
jle
ret
mov
rcr
mov
stc
jmp
inc
sar
popa
jecxz
pop
jns
(bad)
call
popa
push
in
outs
std
pop
jg
rcl
hlt
dec
pop
out
and
ss
cdq
jmp
je
test
icebp
out
jb
add
mov
push
xchg
je
ins
push
mov
repz
enter
jmp
push
push
cmp
cmp
push
sbb
jb
push
push
sub
inc
test
jmp
icebp
call
imul
pop
bound
leave
test
pusha
dec
pop
add
sub
out
ins
ffree
jp
call
jne
pop
xor
add
(bad)
xor
and
add
in
lods
dec
cmp
fistp
xchg
ret
add
push
mov
add
or
imul
out
sbb
xchg
imul
xchg
icebp
icebp
sbb
cmp
dec
mov
jecxz
jnp
gs
int
mov
xor
mov
ret
lods
mov
rcl
mov
pop
outs
mov
ficomp
mov
push
jp
ret
ror
gs
jo
and
mov
addr16
(bad)
pop
pop
pop
xchg
push
adc
mov
xor
div
ret
cdq
int3
repz
pop
ret
xor
pop
imul
and
xor
pop
dec
ror
pop
xor
inc
scas
jmp
mov
cmp
inc
ret
fsub
dec
js
adc
push
inc
ja
retf
cs
lock
int3
adc
int
push
push
loope
in
(bad)
cmc
pop
or
test
imul
dec
jae
push
and
pop
jnp
mov
mov
scas
xor
push
rcr
xlat
jnp
jo
mov
retf
or
js
and
xchg
xor
xor
test
retf
and
xor
out
lock
gs
xchg
bound
scas
outs
adc
(bad)
lods
stos
sbb
mov
retf
es
mov
stos
(bad)
dec
nop
jbe
sar
adc
inc
call
aaa
aaa
cmc
repnz
aad
or
jno
aas
xchg
xlat
pop
cmp
dec
pop
inc
or
push
xor
and
inc
sbb
and
cmp
repnz
clc
hlt
ror
jo
and
cwd
arpl
mov
sub
dec
xchg
jmp
fld
dec
fst
push
xor
cmp
cld
cs
and
sub
mov
jnp
jg
jae
pop
sbb
cmps
js
cmp
xchg
icebp
xchg
xchg
push
jno
ret
add
push
pop
jg
retf
inc
fidivr
data16
push
xchg
jmp
xchg
frstor
dec
popf
xlat
jge
push
push
pop
pop
jg
cld
addr16
lds
mov
mov
in
out
push
in
imul
iret
cmp
pop
sar
inc
aam
outs
xchg
and
jle
xor
es
xchg
(bad)
jl
enter
arpl
xchg
cmp
dec
jle
lahf
xchg
fsubr
mov
sbb
fnstcw
jb
cmp
xchg
jge
loope
into
aad
shl
mov
xchg
or
cs
jne
inc
fadd
bound
ds
clc
jno
(bad)
aas
adc
js
retf
cmps
lock
pop
ins
sub
xor
xchg
(bad)
in
push
inc
into
(bad)
jmp
and
in
out
sub
outs
or
push
call
dec
scas
ins
xor
clc
xor
dec
add
cwde
ret
lahf
pop
inc
dec
test
adc
scas
in
outs
push
fdiv
int3
cmps
cld
cwde
add
mov
mov
push
sbb
dec
retf
or
xchg
xor
arpl
xchg
dec
inc
jb
xor
and
popa
jne
fwait
mov
mov
adc
dec
pop
stos
(bad)
pop
jno
sar
repz
cmc
jle
sub
xchg
out
jno
mov
push
cmps
lds
sbb
imul
pusha
push
mov
pop
pushf
mov
push
fstp
repnz
sub
daa
jb
inc
cmc
add
mov
xor
or
bound
mov
cmps
xlat
test
fs
lock
sahf
jo
add
sahf
stc
and
test
cmps
sub
mov
xchg
int3
bound
or
push
inc
xadd
lds
popa
jg
bound
jp
cdq
out
aaa
aas
push
ror
xor
sbb
in
lods
clc
and
out
xchg
leave
sahf
dec
add
inc
mov
push
mov
adc
test
out
ret
cmp
cmp
ins
daa
out
add
fimul
fidivr
lods
mov
stos
push
sub
cmp
mov
mov
sub
jbe
fwait
arpl
xor
mov
ror
adc
mov
or
push
scas
and
pop
pop
add
xchg
push
loope
test
imul
mov
mov
or
xchg
mov
and
mov
fistp
cld
inc
shl
sub
int3
mov
dec
les
xor
ror
adc
inc
add
popf
mov
out
inc
mov
sbb
std
into
adc
push
or
cmp
mov
mov
jmp
lahf
test
cmp
leave
sub
dec
pusha
cdq
jmp
inc
jb
loope
xchg
test
or
and
stc
imul
rcr
aas
pop
pop
cld
movs
mov
or
push
jg
int
aaa
cmp
mov
adc
mov
pop
xlat
pushf
mov
cwde
and
pop
out
clc
fisub
lods
mov
jb
movs
add
loopne
mov
fdivr
cmps
inc
into
pop
push
and
mov
fs
aad
ficom
repz
fs
pop
push
jecxz
mov
addr16
mov
cmc
nop
not
cmps
(bad)
loop
add
ds
cld
mov
test
sub
xor
and
jl
pusha
aaa
sbb
stc
dec
mov
mov
adc
in
clc
push
mov
addr16
into
mov
mov
in
push
out
mov
cli
in
jl
add
xor
jge
cmp
cdq
mov
ins
push
mov
dec
mov
je
into
ins
push
int3
inc
fistp
mov
dec
sbb
in
bound
push
mov
stos
mov
and
ins
mov
fcom
push
mov
mov
sar
mov
test
ja
xlat
xor
cmp
cmps
lods
jo
das
retf
or
scas
icebp
test
icebp
cld
lods
inc
stos
les
mov
aad
mov
mov
ins
xchg
adc
push
add
pop
cmp
mov
imul
pop
push
adc
dec
push
movs
retf
(bad)
push
aaa
cld
cmp
jb
jne
push
sbb
cmc
push
dec
dec
pop
mov
or
pop
or
adc
gs
aam
or
mov
bound
sub
sub
xchg
cli
js
out
div
cmps
xchg
jmp
ja
mov
(bad)
jns
sub
icebp
or
lea
and
pusha
add
pop
icebp
ja
push
lahf
movs
or
xchg
fnstenv
loopne
cmp
aas
sub
pop
add
clc
pop
in
or
cmp
pop
scas
in
repz
adc
fcomip
jg
or
mov
pop
jae
jmp
int3
mov
lock
or
push
in
pop
inc
mov
popa
hlt
jg
mov
inc
stos
sub
aas
test
lock
cwde
jbe
xchg
jmp
test
shl
sub
imul
inc
rol
push
mov
push
dec
xchg
mov
out
push
cmps
fnclex
push
jge
je
fs
add
dec
mov
rcr
push
mov
movs
jns
push
inc
adc
push
pop
ret
jp
mov
xlat
shl
cmp
push
mov
mov
call
push
daa
(bad)
retf
movs
mov
pop
leave
jne
int
in
std
pop
je
pop
cli
add
mov
mov
lods
movs
jbe
addr16
scas
(bad)
and
shl
mov
or
out
push
mov
mov
push
inc
cmps
mov
mov
test
xchg
outs
fcomp
iret
mov
xchg
test
js
movs
adc
pop
daa
sub
mov
push
int
and
or
fucomp
mov
popf
fs
jge
rcl
fst
mov
or
xor
xchg
cmps
cli
aaa
jae
inc
sar
out
int3
ret
sar
loopne
inc
cmp
mov
mov
(bad)
push
mov
mov
xchg
icebp
xchg
cdq
arpl
fcmovne
sbb
jns
loope
inc
sub
outs
or
fstp
push
xchg
(bad)
push
mov
jbe
lods
sbb
dec
leave
xchg
sbb
scas
mov
dec
and
push
test
jnp
mov
adc
mov
ret
add
sub
(bad)
addr16
cmps
push
adc
mov
stc
out
es
sub
hlt
mov
aas
ins
mov
shl
sahf
or
ins
pop
sbb
pop
lods
fmul
lock
pushf
movs
cmc
stc
pusha
xor
xlat
and
shl
sbb
hlt
in
push
sbb
cmp
xchg
clc
cld
call
mov
jb
gs
push
fisttp
dec
mov
cdq
aad
xor
mov
imul
adc
(bad)
fmul
mov
inc
mov
dec
movs
mov
cmp
add
(bad)
cmps
push
sub
out
xor
mov
ja
jo
popa
adc
jns
enter
mov
sbb
add
mov
pop
or
std
sbb
dec
mov
pop
mov
pushf
mov
retf
and
mov
and
stos
jecxz
dec
in
cli
add
fistp
gs
adc
dec
jno
xor
aas
sbb
cmp
xchg
inc
and
imul
leave
jge
stc
mov
retf
loopne
ja
aam
mov
cmp
out
mov
ficomp
inc
stos
xchg
dec
cmp
lods
in
xchg
out
cli
mov
rcr
call
jne
test
adc
jb
or
das
pop
push
je
and
lds
mov
cli
leave
or
mov
sub
(bad)
rcl
aas
adc
aas
mov
push
push
inc
cmp
jge
xchg
dec
push
mov
mov
cld
sub
stos
push
mov
pop
jecxz
je
push
xor
int3
addr16
sbb
sub
(bad)
xchg
sub
lods
mov
inc
jbe
ficomp
xchg
jno
push
add
imul
cmp
inc
into
push
loop
mov
(bad)
ja
mov
jnp
mov
movs
dec
pop
js
sahf
push
push
in
mov
aas
pop
ret
inc
jo
div
in
sub
test
int
lods
xchg
in
sbb
xor
mov
pushf
clc
fcmovnbe
and
bound
or
mov
daa
jnp
fsubr
ins
add
mov
lahf
add
lea
sbb
jg
pop
nop
push
sbb
push
ss
pop
mov
dec
adc
clc
push
sub
ss
imul
jg
cli
push
adc
ss
hlt
jge
into
fcomp
inc
push
in
mov
push
dec
ret
movs
(bad)
push
loop
push
or
(bad)
xor
mov
cmp
pop
fwait
push
movs
push
nop
adc
out
mov
fdivr
clc
sbb
push
sahf
xor
and
bnd
aaa
sbb
inc
push
sub
fs
jnp
loope
cmp
test
cmp
out
add
repz
inc
popf
ficomp
jne
cdq
adc
dec
jae
clc
inc
jno
int
sbb
dec
mov
iret
arpl
add
popf
sbb
or
fwait
inc
cmp
mov
fisubr
shl
mov
test
pop
fcomp
fbld
and
and
sub
mov
mov
sbb
mov
in
lock
nop
or
ja
and
inc
pop
repnz
and
xchg
loop
out
pop
ret
das
mov
outs
jo
add
mov
cld
jns
retf
jne
aaa
retf
pusha
aaa
xor
in
xchg
data16
adc
jmp
pusha
jp
cdq
cmp
(bad)
xor
shr
and
inc
push
cmp
ja
xchg
dec
cmps
sub
imul
xchg
(bad)
push
sbb
dec
ins
(bad)
jb
das
mov
out
mov
cmp
xor
mov
add
and
loop
gs
pop
fisttp
retf
sub
or
pop
sub
shl
clc
inc
mov
ja
adc
sbb
scas
aas
push
dec
pop
xor
movs
arpl
lds
ss
pop
jmp
idiv
jbe
pop
pushf
nop
f2xm1
rol
fwait
mov
fucom
mov
sbb
mov
push
jbe
bndldx
neg
cmp
lods
lea
lds
loop
add
fstp
das
adc
test
inc
stos
test
pop
mov
icebp
int3
mov
repnz
cmc
sti
mov
jne
jle
push
sub
fnstenv
retf
xchg
jmp
add
dec
cwde
scas
in
mov
out
xor
stc
mov
mov
retf
sub
repz
rol
push
outs
xchg
add
xchg
jecxz
icebp
mov
es
or
retf
sub
mov
daa
sbb
or
add
push
mov
ror
or
popf
mov
cmp
jo
bnd
out
pushf
mov
or
dec
outs
xchg
retf
test
inc
enter
iret
mov
out
inc
loope
ret
dec
inc
adc
mov
adc
dec
adc
repnz
scas
call
scas
sub
ficomp
mov
not
inc
jg
jbe
test
add
jnp
(bad)
(bad)
jle
jae
retf
adc
dec
pop
jb
stos
clc
xchg
ret
dec
sti
scas
retf
hlt
xchg
cmp
add
stc
jg
sbb
retf
fnstenv
jl
movs
aam
inc
(bad)
shl
and
mov
pop
sbb
sub
adc
es
add
arpl
push
sub
push
lea
mov
add
aam
lods
das
cwde
xor
dec
(bad)
popa
lods
push
pusha
and
jnp
dec
(bad)
fwait
mov
dec
mov
jns
mov
inc
movs
mov
dec
add
or
jmp
fcomp
fsubr
ret
push
(bad)
xchg
xchg
xchg
in
or
inc
sub
add
pop
out
jmp
ret
adc
pop
xor
dec
jge
xor
(bad)
sub
clc
clc
pop
mov
shl
sbb
imul
repnz
sar
cmp
inc
and
and
retf
mov
mov
and
out
stc
mov
adc
cmp
sar
fwait
popa
aam
cli
fbld
loope
inc
int
lahf
jmp
sub
or
fst
rol
push
sub
jecxz
lods
push
jle
fsubr
lahf
test
shl
mov
test
(bad)
pop
xchg
pop
fist
xor
sbb
std
enter
xchg
les
sub
or
fcom
xor
movs
sub
xor
mov
fmul
(bad)
fist
cmp
mov
dec
cdq
(bad)
daa
push
in
mov
sub
jmp
iret
jg
repz
(bad)
cld
out
(bad)
stc
mov
jns
cmc
add
lods
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
aam
xor
xor
adc
xchg
out
out
cmp
jmp
dec
ja
data16
out
and
(bad)
jns
and
cmp
xchg
int3
cwde
das
shr
repnz
(bad)
cmp
adc
lea
xor
daa
mov
popf
loop
repz
jp
dec
in
out
xchg
mov
in
cli
add
icebp
icebp
ret
pop
pop
iret
test
mov
xchg
shr
leave
push
inc
pop
push
sahf
gs
ret
xchg
mov
hlt
cld
lds
movs
push
ficomp
imul
outs
add
aaa
jg
je
adc
mov
adc
in
xor
push
je
shl
outs
sub
fmul
into
daa
scas
or
stos
jo
push
mov
(bad)
xor
jb
sbb
and
ret
xchg
call
xchg
xor
dec
mov
xor
jne
pop
je
jmp
jecxz
add
pop
sbb
addr16
seta
ret
xor
int
iret
jmp
push
stc
je
js
aaa
lea
add
xchg
inc
or
push
mov
jne
aas
inc
arpl
inc
retf
dec
mov
add
sbb
je
dec
shl
push
stc
rol
xchg
xchg
pop
in
adc
inc
or
add
imul
retf
pop
adc
mov
(bad)
push
mov
dec
push
push
repz
nop
adc
xor
dec
sti
in
mov
hlt
fisubr
cdq
jb
xchg
push
stos
mov
inc
mov
xchg
sub
push
push
lahf
mov
xchg
ss
nop
int3
daa
or
shl
or
scas
inc
imul
ins
sub
xor
xor
xor
jecxz
mov
adc
xchg
js
dec
scas
out
test
cmps
dec
mov
lahf
jnp
dec
dec
data16
loope
(bad)
sub
jge
xor
cld
push
fs
jl
push
mov
lea
add
leave
xchg
inc
movs
inc
and
int
and
out
retf
or
or
xchg
inc
test
pop
adc
mov
ror
pop
sbb
sbb
cmp
mov
jnp
sub
test
popf
scas
pop
dec
sbb
adc
and
test
cmp
cld
aam
repnz
mov
cmps
out
retf
and
cmp
and
xchg
push
and
fnstsw
jns
dec
je
jg
lods
cmc
ror
lahf
dec
cs
xchg
jno
jmp
dec
imul
push
sub
cdq
das
scas
push
cld
and
(bad)
dec
dec
iret
jl
mov
mov
cld
inc
sahf
lea
adc
mov
gs
push
add
jecxz
les
stos
adc
and
xchg
mov
jmp
retf
out
dec
cmp
icebp
cmp
hlt
cmps
xchg
jnp
mov
arpl
cs
arpl
cmp
into
clc
pop
fwait
xor
jecxz
je
sub
fst
in
cmps
or
std
out
call
sar
fcom
je
(bad)
or
push
(bad)
mov
es
mov
push
mov
cmps
mov
mov
mov
hlt
jmp
xor
lea
lock
dec
ror
mov
xor
adc
vminsd
sbb
and
push
inc
mov
jne
or
lahf
retf
pop
push
fild
mov
sub
(bad)
push
int3
add
push
sub
mov
arpl
aam
loopne
mov
vdivsd
gs
retf
sbb
mov
and
inc
leave
out
int3
ud1
cmp
fdiv
jmp
push
mov
cmps
sub
xchg
dec
and
daa
ror
mov
inc
stos
ss
js
cmp
push
imul
xor
scas
fs
jae
out
ret
jns
xor
mov
pop
jecxz
sbb
cmp
adc
jne
leave
mov
sbb
lea
or
(bad)
in
xor
jl
loope
add
cli
(bad)
scas
ret
mov
pusha
cmp
aad
ror
xchg
pop
out
out
jecxz
es
mov
jmp
or
shl
pushf
add
out
bound
les
popa
xor
mov
mov
sahf
xor
loope
sbb
pusha
mov
dec
dec
out
jo
push
pop
jne
int
fs
clc
cli
fsubr
daa
xchg
jo
pop
rcl
das
mov
xchg
mov
ror
test
hlt
mov
mov
add
pop
jg
add
inc
jl
jecxz
inc
pop
enter
adc
and
mov
fwait
jecxz
xchg
jle
xchg
mul
into
(bad)
and
ins
jo
mov
clc
mov
cmp
and
jns
icebp
push
dec
sub
in
(bad)
(bad)
pop
fcom
inc
mov
push
sub
jge
lock
xchg
dec
in
shr
mov
mov
loopne
loopne
fst
loop
sbb
jmp
scas
aam
xor
sub
push
adc
pushf
and
cwde
mov
jo
stos
loope
stc
jno
mov
xor
pushf
shl
push
and
mov
pop
aad
jmp
loope
cmps
aam
pop
retf
fwait
repz
fprem
cmp
aam
push
and
lods
xor
adc
xchg
nop
adc
mov
fs
cmp
loope
pop
cmps
mov
or
data16
xchg
cmc
ficom
les
pop
jle
add
xchg
jmp
fiadd
retf
mov
jb
div
lahf
mov
mov
adc
mov
inc
xchg
out
pop
mov
push
sbb
aad
mov
in
mov
xlat
jl
jle
rol
push
cdq
mov
jb
cmp
push
es
int3
sbb
rcr
cwde
dec
sbb
dec
inc
pop
pop
fild
jb
mov
mul
aad
imul
ds
test
cwde
or
retf
in
fadd
jmp
lods
call
pop
cmc
ins
pop
pop
call
scas
sti
mov
sbb
mov
sub
imul
in
adc
add
into
icebp
test
scas
mov
jl
adc
in
push
push
mov
add
fcomp
sar
les
push
std
loopne
ja
and
(bad)
into
sub
pop
fwait
adc
cmp
mov
inc
xor
mov
nop
inc
lds
jmp
daa
shl
cli
xor
rcr
mov
xor
je
mov
add
repnz
cmp
(bad)
mov
pop
dec
push
repz
push
xchg
out
push
and
push
(bad)
loope
dec
jo
cmc
push
mov
mov
call
cmps
pop
cwde
xchg
fnsave
mov
fsubr
aam
push
cmp
cmp
lahf
mov
stos
dec
xor
and
adc
and
mov
sbb
call
jmp
inc
xor
or
mov
imul
add
mov
bnd
das
pop
mov
mov
push
add
repnz
push
fimul
call
lock
std
xor
cmp
shr
je
mov
dec
js
fdivr
daa
enter
or
cmp
jmp
(bad)
mov
pop
jb
or
xchg
popf
xchg
(bad)
push
inc
xchg
add
ja
out
jne
std
int
sub
loop
das
jp
pop
loopne
jbe
(bad)
jle
rep
mov
sbb
xchg
or
shl
or
sbb
nop
add
repz
adc
rcl
push
jo
lds
das
into
cmp
lahf
inc
stos
dec
enter
loope
xlat
xor
outs
xchg
sbb
and
cmps
imul
adc
out
pushf
push
std
sbb
sar
mov
mov
mov
js
and
or
dec
dec
ret
shr
pop
cmp
mov
not
cdq
and
in
loope
or
inc
jp
retf
add
sbb
loopne
pop
std
fbld
sti
push
sub
mov
mul
adc
cmp
xor
mov
pop
stos
cmp
enter
iret
adc
xchg
lods
pop
hlt
xchg
nop
adc
test
push
(bad)
mov
les
jmp
dec
(bad)
mov
mov
ins
and
jae
hlt
mov
sub
add
mov
add
stc
jae
inc
xor
dec
hlt
(bad)
fst
out
mov
rcl
lock
sti
jl
jp
xor
adc
cmp
mov
pushf
pop
inc
rol
jne
pop
(bad)
(bad)
cmp
inc
mov
pop
hlt
adc
cmps
jl
ror
xchg
cwde
lds
iret
outs
in
mov
ret
push
stos
cmps
pop
rcr
(bad)
jg
loopne
xor
or
fwait
push
test
mov
and
les
cld
imul
mov
or
jns
cld
call
sbb
test
lds
fs
std
push
rol
int3
loop
cmp
fwait
hlt
retf
xor
pop
test
repz
mov
xor
sbb
mov
xchg
mov
mov
adc
pop
icebp
xchg
sbb
bnd
xchg
add
mov
or
adc
push
cwde
fmul
mov
jnp
mov
xor
jno
cli
je
xor
out
and
xchg
push
pop
sub
push
mov
mov
xor
add
cmp
pop
loope
jb
(bad)
sti
loop
cmp
sub
mov
mov
cmps
sbb
test
push
jp
int3
jmp
and
clc
cmc
push
call
jg
lock
arpl
pop
lock
or
mov
pop
cmp
cmp
(bad)
xchg
std
fucom
outs
mov
loope
jge
retf
mov
mov
mov
xchg
sub
ss
fisub
int
dec
ins
mov
jecxz
imul
jnp
and
iret
adc
scas
sub
pop
and
push
cld
xlat
or
imul
mov
iret
sahf
adc
mov
pmaxub
in
arpl
lods
add
jbe
cmp
jb
mov
into
xor
mov
mov
cmps
imul
mov
push
scas
and
add
ins
shl
xor
push
dec
xchg
mov
fdivr
mov
sub
retf
pop
or
adc
xor
jecxz
jg
std
mov
xchg
popa
lods
mov
out
or
add
int
pop
push
ins
(bad)
xor
sbb
mov
imul
aam
add
pop
je
enter
push
jmp
enter
inc
aam
sbb
hlt
addr16
xor
jns
out
dec
(bad)
aas
jmp
pop
inc
pop
jbe
cmps
in
adc
jmp
sub
xlat
aam
cmp
aad
aam
inc
push
outs
jmp
pushf
icebp
not
and
data16
loope
cmp
arpl
pop
scas
jno
jl
pop
sbb
nop
syscall
jo
add
mov
xchg
mov
cmp
mov
std
mov
retf
pop
pop
repnz
xor
sub
push
adc
mov
cdq
mov
cmps
mov
jbe
or
inc
push
jmp
shr
aam
push
jle
pusha
adc
mov
(bad)
xchg
ins
mov
loopne
ins
fwait
dec
push
enter
mov
sbb
fsub
mov
push
cmp
jmp
in
or
loopne
pop
inc
ror
sbb
pop
addr16
mov
push
mov
jnp
mov
xor
pop
push
neg
popf
mov
xchg
xor
push
mov
clc
cld
scas
mov
sub
mov
shr
mov
jmp
outs
fild
inc
fidiv
fnstenv
jae
jno
ss
xchg
cdq
xor
iret
or
cmp
leave
pop
adc
fisubr
test
popa
mov
xor
into
(bad)
repnz
arpl
in
dec
inc
mov
or
outs
and
sbb
mov
cmp
mov
and
imul
out
and
lods
sbb
add
mov
mov
cmp
icebp
add
clc
loope
mov
jbe
mov
pop
sub
enter
jmp
out
js
pop
mov
loopne
jne
ja
cmp
sbb
imul
repz
cmp
out
jg
cmps
jb
stos
sub
ja
adc
das
shl
mov
addr16
mov
sahf
mov
cmc
test
dec
scas
retf
data16
xchg
cmp
repnz
and
sar
sub
and
daa
sub
repnz
or
add
inc
pop
movs
adc
movs
mov
imul
imul
pusha
ins
mov
jnp
in
in
fcmovb
in
pop
cmp
xlat
sbb
pop
popa
push
(bad)
jmp
mov
stc
jge
out
test
pop
lds
pop
(bad)
cmps
xchg
xor
stos
jl
cmp
push
div
pusha
jle
xor
add
jb
pop
mov
js
std
mov
mov
jmpw
push
ret
pop
adc
mov
cmps
sub
jo
xor
xor
xor
xor
mov
xchg
xchg
mov
movs
mov
(bad)
nop
loopne
jo
outs
ins
shl
movs
ds
bnd
sbb
xor
sbb
dec
adc
mov
or
jae
mov
retf
hlt
jne
mov
scas
pop
retf
jmp
mov
jmp
rcr
outs
mov
sbb
xchg
jnp
xor
scas
xchg
stc
sub
int
sub
popf
rcr
mov
data16
outs
jo
mov
aaa
aad
xchg
inc
jnp
pop
jno
movs
popa
and
mov
xchg
ins
jmp
ss
mov
jecxz
mov
(bad)
mov
xchg
mov
ret
(bad)
adc
lods
adc
push
mov
mov
mov
or
push
lahf
test
loopne
call
cwde
push
push
dec
adc
adc
cmp
pop
test
sbb
mov
sub
sbb
cld
cdq
xlat
xor
mov
mov
jno
jne
push
adc
aas
out
inc
ins
and
xor
mov
cmp
fcomp
call
fbld
add
dec
inc
add
sbb
in
cdq
adc
movs
cmp
leave
dec
lds
gs
adc
or
xor
cmc
fcmove
retf
icebp
mov
int
and
aad
cmc
xchg
aad
fidivr
stos
gs
(bad)
dec
lods
js
mov
mov
push
iret
pop
addr16
clc
dec
sub
jmp
test
fcom
out
jne
out
or
pop
out
push
sbb
les
sti
xchg
xchg
xor
cmp
cdq
retf
mov
mov
pop
das
push
or
dec
cmp
(bad)
dec
mov
lahf
cwde
mov
std
ins
jbe
jns
mov
scas
push
sti
xchg
test
push
push
adc
dec
push
fwait
clc
cs
rcl
push
xchg
inc
js
hlt
jle
scas
mov
sbb
repnz
outs
ja
mov
nop
or
fmul
cdq
stc
mov
dec
test
xor
int3
inc
adc
(bad)
imul
call
xchg
mov
stos
inc
sbb
das
fst
push
fidivr
pop
pop
pop
cmps
out
int3
adc
call
dec
xor
cld
clc
daa
sub
mov
or
adc
shr
int
cmps
sub
call
aaa
xchg
sti
ds
xchg
jge
mov
fiadd
xchg
cmp
xor
push
and
aas
adc
mov
jo
mov
or
and
push
js
loope
repnz
jl
lods
pusha
mov
pop
dec
mov
imul
retf
retf
push
(bad)
stc
iret
jg
repz
(bad)
cld
out
sbb
cld
bswap
jo
cld
lock
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
into
pop
and
pop
add
scas
jno
fs
sbb
jnp
mov
jno
addr16
mov
inc
div
fisub
retf
into
and
xchg
int
mov
ds
loopne
add
push
dec
xor
push
jle
retf
mov
js
adc
ins
sub
inc
cdq
dec
out
or
(bad)
jbe
add
or
out
push
dec
lock
mov
outs
movs
sar
fidiv
mov
xchg
mov
sub
call
mov
ror
aam
xchg
inc
mov
stos
mov
mov
mov
nop
rol
push
cmp
or
stos
inc
ss
or
mov
sbb
dec
pop
shr
pop
movs
and
sbb
(bad)
out
push
popa
dec
add
push
jp
add
jge
ret
hlt
xchg
les
push
jge
fidivr
jl
imul
int
stc
push
mov
sub
xchg
cli
mov
xchg
icebp
sahf
call
push
aam
pop
sbb
push
pop
arpl
call
inc
popf
adc
or
xchg
add
mov
cmp
setns
jae
cdq
das
lahf
jle
mov
adc
ret
stos
and
and
push
imul
inc
jnp
mov
ret
(bad)
imul
and
fs
mov
xchg
sbb
lods
clc
faddp
mov
pop
xlat
xlat
push
jo
pop
mov
ror
aam
fdivr
and
test
mov
in
test
sub
mov
fs
mov
imul
loope
loope
xor
xchg
loop
mov
pop
loop
cmps
ins
mov
or
mov
(bad)
push
je
inc
dec
xchg
pop
mov
lock
lods
mov
mov
div
mov
push
(bad)
xchg
jo
out
adc
jl
stos
out
sar
xchg
push
pop
lock
stos
dec
mov
xor
lods
cmp
inc
dec
loopne
mov
clc
cmp
xor
stos
ins
movs
push
sbb
and
pop
or
adc
daa
mov
fcomp
adc
into
mov
ins
stos
inc
lock
jl
jnp
jmp
inc
fld
js
imul
shl
cli
xchg
mov
outs
test
dec
push
mov
or
or
sbb
clc
and
or
mov
jo
jns
mov
xchg
add
imul
cmps
outs
std
retf
daa
dec
fidivr
jb
ret
xor
dec
cmp
sti
call
cdq
scas
popf
das
push
int
mov
movs
push
f2xm1
cwde
(bad)
xchg
lock
and
or
popf
mov
jns
pop
and
mov
std
push
aas
rcl
int3
jo
es
inc
popf
fwait
jecxz
push
sbb
push
lea
dec
daa
lods
lds
and
enter
cdq
mov
stos
jge
call
mov
sub
xor
jecxz
add
adc
rcr
movs
xchg
pop
fdiv
ffree
(bad)
repnz
adc
ds
xchg
xchg
fst
ror
inc
test
xchg
repnz
sahf
cmps
push
jmp
loope
xchg
adc
sub
sbb
aaa
cmc
stos
dec
fidivr
mov
pop
(bad)
pop
adc
pop
pop
sbb
fnstcw
dec
icebp
into
xor
sbb
fisttp
push
and
popf
push
xchg
addr16
shl
mov
add
lods
outs
inc
pop
jmp
add
mov
movs
mov
fimul
pusha
mov
lahf
ror
pop
mov
push
mov
cdq
ja
jle
(bad)
mov
sub
mov
mov
cmps
es
pop
mov
dec
mov
in
inc
jb
xor
ret
sahf
mov
mov
xlat
jne
cmps
out
daa
mov
out
and
mov
retf
iret
jmp
scas
ss
mov
neg
(bad)
push
fisubr
stos
add
iret
inc
pop
outs
and
and
mov
ja
pop
(bad)
in
fwait
jmp
in
jns
outs
scas
adc
push
adc
xchg
push
jae
and
xchg
mov
jno
mov
lds
test
int
xchg
repnz
cs
mov
scas
or
es
cmp
pushf
(bad)
sbb
xor
jno
and
lds
sar
push
or
leave
loope
or
mov
div
pop
(bad)
clc
ror
in
xchg
in
sbb
dec
(bad)
imul
loopne
or
pop
xchg
gs
sahf
jle
call
push
sbb
(bad)
xor
repnz
je
retf
dec
xchg
hlt
jle
mov
mov
mov
scas
(bad)
leave
aaa
ror
mov
(bad)
retf
ds
pop
shl
adc
jmp
test
into
cmp
mov
xchg
test
sub
js
jg
fsubr
mov
mov
sub
cmp
test
jnp
xchg
add
movs
iret
adc
cmc
pop
cdq
sbb
add
cmp
and
adc
pusha
and
xchg
leave
sahf
test
mov
pop
sub
outs
mov
mov
push
rol
pushf
out
dec
mov
std
lea
test
lds
js
test
inc
out
push
push
in
xchg
addr16
pop
add
icebp
and
jg
jbe
push
sub
inc
bound
and
mov
cmp
hlt
add
ins
call
xlat
mov
enter
inc
(bad)
bound
pop
push
data16
and
and
or
pop
stos
mov
xchg
ret
icebp
icebp
aam
mov
out
(bad)
cld
neg
xor
jbe
fs
pop
pop
rol
cmp
cmc
dec
jns
xchg
retf
sub
repz
sub
adc
sbb
mov
stos
cwde
cmps
dec
and
or
cmp
in
fldcw
adc
sub
or
xchg
mov
rol
imul
mov
movs
das
call
jno
xor
cmp
iret
xor
sub
jmp
cmc
cmp
mov
push
lds
sbb
push
call
fld
inc
daa
jne
jmp
cmp
adc
das
xchg
je
sub
jmp
in
test
mov
(bad)
mov
dec
dec
cmc
sbb
in
mov
popf
or
mov
cmp
test
dec
fcomi
neg
fidiv
stos
sub
stos
jmp
pop
sbb
lods
out
sub
test
dec
jns
xor
jp
jecxz
sub
push
xchg
cmp
push
jecxz
add
xchg
xlat
adc
pop
lds
stos
ficomp
fdivr
pop
popf
ud2
pop
xor
jmp
dec
mov
xor
frstor
mov
cmps
stos
lea
push
or
fstp
jbe
or
sub
adc
push
add
cmp
(bad)
loope
push
inc
jns
xchg
test
cdq
and
sbb
out
pop
jecxz
hlt
sub
xchg
ror
sahf
rcl
je
mov
scas
fmul
xchg
loop
adc
loope
clc
push
lahf
test
hlt
sbb
jne
mov
es
scas
fs
xor
inc
cmp
dec
pushf
pop
es
mov
shl
fst
add
sbb
and
jg
js
push
in
test
and
add
iret
mov
mov
hlt
outs
mov
cmps
push
shl
std
xor
add
jmp
gs
sub
outs
dec
inc
arpl
sbb
lahf
stc
into
sbb
mov
ins
jecxz
sti
mov
sbb
cmp
ror
mov
inc
fcmovne
adc
fnsave
lds
div
xlat
repz
jg
cwde
adc
xor
push
stc
ret
xchg
add
inc
dec
lock
cmp
(bad)
adc
push
ret
in
mov
(bad)
out
push
loop
mov
xchg
repz
xchg
mov
outs
call
pop
pop
aam
xor
aad
cmp
mov
mov
push
inc
sbb
rol
mov
sar
les
adc
clc
addr16
dec
sub
test
ror
cmp
ret
repz
fnstsw
xor
pushf
into
inc
jb
je
jg
cs
call
cmp
and
addr16
push
pop
mov
push
addr16
repnz
test
mov
inc
xor
cmp
mov
xchg
loopne
dec
out
push
lahf
clc
nop
das
adc
loopne
(bad)
sbb
data16
add
dec
pop
jecxz
out
pop
(bad)
jns
add
sub
or
fsub
hlt
das
scas
lea
add
shrd
mov
scas
loopne
pop
rol
cmp
cwde
fbstp
cmp
imul
pop
out
ret
pop
ins
xchg
xor
xor
sahf
push
fcomp
cmp
inc
sbb
jg
aaa
fwait
push
xchg
into
add
aam
les
std
add
scas
je
fcom
push
or
int
ficom
mov
push
jl
dec
out
cmp
mov
data16
iret
xor
clc
ror
mov
dec
push
inc
xor
jae
adc
out
je
outs
dec
xchg
sbb
repnz
jmp
mov
retf
pop
mov
pop
js
out
mov
cs
dec
repz
mov
mov
fcmovnbe
jmp
out
mov
or
sub
int3
push
mov
adc
adc
xchg
pop
outs
es
xchg
call
das
div
jno
fimul
repnz
xor
lock
inc
and
dec
adc
arpl
jmp
jae
dec
jb
in
fcom
(bad)
jge
mov
mov
add
pop
rcl
and
hlt
inc
or
dec
adc
out
arpl
and
mov
xor
rol
jmp
lahf
(bad)
fwait
test
imul
test
xor
push
loop
jmp
(bad)
retf
xchg
inc
add
xchg
into
fstp
mov
push
ins
push
pop
mov
inc
add
pushf
daa
test
scas
xchg
int
ins
in
cmp
jne
xor
dec
loope
ficomp
jmp
inc
int
pop
movs
rol
fcom
push
mov
sbb
jmp
adc
es
std
and
adc
add
es
cmp
sti
in
sub
mov
push
inc
xor
icebp
shl
(bad)
lods
lods
xor
sbb
daa
adc
rol
pop
aaa
sub
into
sbb
fld
mov
icebp
ja
and
fs
inc
mov
imul
sub
xchg
jbe
jl
iret
dec
cs
shl
push
xor
nop
sbb
test
jns
fimul
mov
call
push
cs
(bad)
mov
loop
mov
push
mov
les
or
add
mov
mov
stc
push
or
arpl
lods
icebp
mov
push
jno
push
loopne
mov
ficomp
jae
lods
and
sbb
sub
sub
loopne
(bad)
nop
imul
imul
jnp
shl
push
dec
jmp
jmp
loop
adc
push
mov
sub
pop
clc
sbb
and
xchg
or
stc
mov
into
mov
inc
pusha
push
es
mov
pop
add
fldcw
xchg
icebp
out
push
mov
pop
sub
lods
mov
mov
mov
push
jmp
fadd
jbe
pop
retf
mul
adc
jge
dec
aaa
cmps
xchg
pop
aad
lds
or
cs
pop
dec
cmp
in
sbb
aas
inc
cmp
push
mov
dec
(bad)
adc
sub
mov
sub
xor
mov
and
imul
shl
int
popf
xchg
mov
in
adc
(bad)
mov
mov
gs
xor
lods
cdq
aaa
frstor
ret
mov
push
test
pop
xlat
out
mov
retf
mov
ins
clc
xchg
aaa
ret
pop
and
pop
sbb
loope
mov
ret
mov
test
push
ror
imul
push
imul
data16
inc
mov
push
push
inc
imul
mov
push
scas
jge
adc
xor
rol
outs
lods
outs
hlt
xor
popf
xchg
rcl
push
outs
jno
add
lahf
xor
xchg
and
inc
xchg
call
inc
fisub
std
cdq
mov
dec
inc
in
pop
sub
in
cmp
push
mov
leave
gs
ds
pop
iret
xchg
jl
push
ret
repz
lds
ins
mov
test
xchg
inc
clc
jns
and
scas
out
es
sbb
dec
dec
mov
sbb
bound
and
and
mov
inc
xchg
mov
push
push
loope
fcom
add
jle
cdq
bound
arpl
ja
jle
jnp
mov
aad
or
fist
enter
and
test
stos
outs
or
push
mov
ins
mov
mov
pop
jae
adc
push
(bad)
sbb
sub
in
(bad)
mov
mov
(bad)
cs
(bad)
sar
pop
push
loop
out
mov
xchg
outs
rcl
xor
div
in
or
int3
cmps
pop
dec
cmc
sar
inc
pop
add
mov
xor
ret
or
dec
(bad)
shr
repnz
jne
jle
sahf
xchg
xchg
test
add
xchg
out
lds
mov
cmp
adc
push
inc
dec
cmp
cli
xor
or
push
lods
shr
fcom
lods
jle
adc
mov
inc
fsubr
sub
cmp
dec
dec
cdq
fs
mov
cmp
add
imul
xchg
and
test
popf
outs
xor
out
lea
sahf
and
push
loopne
or
xchg
stc
xor
repnz
lahf
ins
pop
int
pushf
push
cli
mov
cmc
and
fsub
(bad)
dec
push
push
aaa
dec
pop
cs
xor
jge
xor
and
push
sar
aas
mov
dec
dec
dec
mov
hlt
jns
lods
mov
dec
pusha
arpl
sbb
pop
mov
pop
repnz
popa
mov
cmovg
or
cli
aaa
std
dec
pop
sbb
test
ror
dec
push
push
and
inc
pop
mov
(bad)
inc
cdq
arpl
cmp
inc
jns
mov
nop
int3
leave
mov
cmp
mov
xor
aad
cmps
imul
dec
loopne
xlat
enter
popf
sti
shl
mov
push
xchg
cmp
retf
lea
cwde
cli
cmp
dec
xchg
aas
mov
sub
outs
int
xor
loop
mov
call
ror
jg
cmp
add
fidiv
pop
test
test
ja
mov
adc
dec
test
outs
mov
shl
mov
jno
adc
pop
sbb
mov
call
(bad)
fstp
div
(bad)
scas
ss
pop
(bad)
sti
int
pop
and
mov
and
aad
or
jb
dec
push
test
sub
test
aas
pop
jg
in
and
pop
stc
cs
in
stos
xchg
mov
jg
mov
repz
sti
loope
and
cmps
inc
xor
lods
lods
imul
retf
ss
sar
mov
outs
data16
(bad)
rcl
jecxz
mov
jecxz
or
cmc
lock
ja
in
dec
inc
and
out
cmp
push
sub
(bad)
add
mov
push
jmp
mov
push
ret
mov
adc
scas
test
or
frstor
jo
sbb
xlat
sub
shl
jno
lods
test
mov
ja
fsubr
cmp
mov
shl
dec
stos
jmp
fild
lahf
jg
stc
out
call
add
jg
clc
cmc
call
xchg
or
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
and
ret
add
ret
hlt
dec
ja
sahf
cwde
data16
aaa
jne
jle
mov
cmps
sti
les
ret
cmp
jne
loope
sahf
imul
js
jl
pop
add
lahf
rcr
dec
fmul
cmp
in
hlt
dec
(bad)
(bad)
lds
sub
xor
nop
lahf
add
push
xor
and
lods
clc
dec
pop
mov
adc
(bad)
iret
sar
add
cld
jge
dec
(bad)
aaa
jb
cmp
test
sbb
mov
jle
scas
cmp
jbe
push
push
in
ficomp
gs
pop
or
jmp
fsubr
xchg
rol
pop
daa
jecxz
cdq
fdiv
mov
ds
mov
fstp
push
fist
dec
and
je
pop
sub
jnp
jbe
outs
xchg
cs
out
push
fwait
gs
inc
sbb
jmp
push
scas
push
or
jbe
cdq
movs
call
lods
sub
mov
pop
jne
in
inc
push
cmp
jmp
sub
lods
dec
clc
xor
cmp
mov
test
outs
scas
push
icebp
push
stos
or
xchg
dec
and
cdq
dec
pop
mov
into
sub
inc
pushf
add
cmp
xchg
outs
mov
mov
stc
ins
outs
xchg
or
aam
gs
cmp
lea
stc
sub
xor
jmp
call
pusha
xchg
adc
add
cld
test
mov
or
mov
pop
cwde
sbb
aaa
enter
imul
int3
mov
clc
adc
add
and
mov
push
int3
dec
popa
and
test
xor
(bad)
dec
stos
movs
imul
add
fwait
pop
pop
call
loope
xor
or
xor
add
or
inc
jb
mov
(bad)
stc
and
mov
jp
push
repz
lds
in
into
jbe
cld
aaa
mov
stos
aaa
add
inc
lods
push
aas
mov
sbb
test
pop
lock
outs
fild
cvtpi2ps
inc
fidivr
sahf
jo
push
mov
lods
jbe
push
pop
lds
inc
sar
icebp
adc
and
pop
ret
repnz
mov
mov
out
retf
inc
cmc
cwde
js
shl
and
into
mov
mov
mov
in
in
xor
jns
mov
shr
pop
or
dec
mov
xchg
inc
imul
stos
pop
jb
cdq
dec
or
cmp
xchg
out
mov
sub
sbb
pop
imul
push
mov
(bad)
imul
push
inc
movs
xchg
fcmovnbe
leave
movs
jbe
cmp
(bad)
push
(bad)
mov
in
push
es
dec
push
cli
sahf
out
loopne
lods
xor
dec
cmp
repz
cmps
pop
mov
mov
js
aaa
or
test
dec
and
cmp
stos
xchg
inc
jmp
dec
xchg
push
cmp
xchg
xchg
mov
out
pushf
scas
mov
loop
bound
lods
sbb
pop
or
int
push
fbld
jle
sub
jmp
inc
out
jo
xor
movs
and
cli
pusha
mov
and
imul
sbb
enter
xor
fisttp
stc
add
popf
jge
in
shl
xor
mov
jnp
fiadd
cmp
pop
xor
sbb
leave
test
sti
and
ror
lock
ret
pop
outs
adc
popa
xor
adc
imul
fwait
or
aam
sbb
adc
jnp
jecxz
add
inc
js
ins
sahf
mov
mov
imul
lods
int3
push
mov
ds
retf
push
jmp
push
push
(bad)
rcr
inc
cmps
push
mov
fwait
xchg
loop
cmp
sbb
push
mov
pop
or
xor
scas
and
sar
pop
adc
xchg
hlt
shr
pop
pop
div
xchg
dec
cmps
add
inc
jo
or
lea
mov
arpl
fldenv
jl
bound
daa
jmp
xor
sti
jle
in
push
push
sub
and
lds
push
popa
loop
stos
xor
jnp
add
cmp
out
rol
mov
jmp
sahf
in
push
mov
rep
dec
mov
pop
stos
add
lds
stc
cmp
mov
clc
mov
and
add
sub
inc
push
fidivr
bound
aaa
xchg
in
sub
lock
nop
pop
xchg
adc
ja
jg
jne
test
pop
jns
scas
mov
sbb
sub
fsub
mov
mov
xor
inc
xchg
sbb
rcl
inc
dec
push
mov
(bad)
arpl
pop
out
pop
movs
adc
cmp
sub
or
pop
scas
inc
fidiv
lock
mov
into
dec
xor
lock
cld
jo
inc
ror
mov
out
out
(bad)
aad
xlat
xor
addr16
ret
jmp
jg
retf
or
dec
add
or
dec
mov
sbb
xor
int3
imul
xchg
mov
inc
leave
ins
mov
xor
sub
mov
jmp
mov
sbb
(bad)
sub
lahf
mov
xor
(bad)
outs
xor
shl
pop
inc
test
inc
sub
cmp
out
dec
xor
adc
xchg
call
ret
aaa
push
push
cs
cmp
push
dec
scas
cmc
jcxz
ret
cmp
jmp
mov
daa
cli
adc
in
mov
sub
call
fdiv
lods
pop
scas
mov
mov
data16
pop
or
jg
xor
test
sub
mov
cmp
dec
bnd
ja
lods
lea
dec
sub
jp
loope
add
mov
jle
stos
xchg
std
fild
push
or
pop
jg
jle
cmp
push
sti
pop
or
fisub
repnz
cmp
adc
repz
and
aas
jle
sub
ja
adc
fidiv
movs
xchg
ja
out
dec
push
sub
sti
mov
xor
pushf
mov
test
mov
outs
mov
test
push
lea
jne
add
mov
adc
lods
pop
mov
sub
test
retf
mov
hlt
enter
and
stos
mov
mov
ja
fcomip
call
lods
aas
iret
mov
pop
into
add
das
jmp
xchg
mov
pop
sbb
mov
cmp
mul
(bad)
xchg
pop
adc
sbb
fisttp
cld
jns
inc
out
sbb
ins
jecxz
popa
add
adc
iret
cdq
retf
dec
call
or
pop
and
sbb
shr
test
je
sub
push
inc
in
mov
sub
idiv
jmp
mov
xor
mov
call
shl
lods
fucomp
or
mov
adc
jge
imul
lahf
pop
push
jmp
push
jle
inc
sub
jge
ja
ret
mov
jb
mov
mov
xchg
iret
sbb
and
sub
movs
lods
xor
dec
or
push
inc
fdivrp
inc
js
cmps
into
int3
stos
inc
cmp
and
inc
out
jae
xchg
mov
xchg
popf
scas
mov
or
outs
mov
sub
stos
or
lock
popa
fldenv
fs
sbb
hlt
cmp
fdivr
jmp
xor
fdivr
int
add
push
pop
cdq
mov
mov
mov
jae
lahf
xchg
jle
repnz
xchg
jne
xor
jecxz
jae
mov
sti
call
push
pop
cmps
sahf
mov
adc
mov
in
test
scas
dec
dec
xchg
loop
push
out
out
lds
mov
cmp
fisub
mov
adc
in
pop
mov
push
adc
enter
pop
cwde
mov
xor
rcr
popf
test
mov
(bad)
scas
shl
scas
fwait
stos
pop
sbb
aaa
push
mov
fimul
sbb
jmp
leave
leave
mov
push
jnp
test
inc
pop
adc
mov
ins
sub
(bad)
push
not
xor
(bad)
out
adc
ror
sub
pop
pop
lea
xchg
in
sti
dec
push
arpl
xor
(bad)
cmp
outs
mov
inc
ins
test
sub
in
inc
rol
xchg
cwde
outs
out
sub
jnp
fldcw
div
jb
jae
mov
loope
pop
mov
jo
xor
pop
jecxz
sti
cmp
pop
lea
dec
and
(bad)
cmp
mov
mov
pop
push
arpl
mov
adc
pop
addr16
or
lock
loope
jne
(bad)
cs
mov
es
test
outs
mov
pop
lods
sub
ficom
and
add
out
pop
inc
cli
cmp
xchg
loopne
leave
xchg
xchg
pop
test
addr16
cmp
mov
dec
enter
sbb
inc
dec
pop
or
aad
daa
sub
cmp
inc
fdivp
ins
inc
and
push
cmp
inc
jo
dec
pop
(bad)
fist
dec
sbb
int3
push
sub
mov
pop
push
test
pop
int
add
fs
cwde
sbb
push
scas
test
fbld
pop
call
inc
retf
and
xor
(bad)
(bad)
out
fs
js
pop
mov
xor
js
adc
sbb
push
jg
ss
jmp
dec
cmps
movs
push
stc
mov
mov
sbb
ins
call
clc
adc
add
cli
push
dec
mov
repz
es
or
idiv
mov
hlt
repnz
aam
or
jb
lea
push
sbb
sbb
cmp
imul
xchg
push
push
jbe
(bad)
iret
hlt
sar
sbb
and
in
mov
int
mov
push
mov
or
sar
jo
ret
imul
fiadd
sbb
push
xchg
jo
jge
mov
pop
pop
(bad)
cmp
mov
sar
cmp
xchg
cmp
call
pop
cdq
sub
or
mov
ret
xchg
lds
repz
push
cmps
fnsave
pop
push
sar
mov
adc
dec
jnp
cmp
mov
adc
mov
mov
call
repz
mov
inc
xor
cmp
ror
sub
imul
push
fstp
clc
cdq
in
xchg
retf
imul
popa
test
lods
adc
retf
pop
sbb
jno
hlt
jnp
rol
sub
fistp
add
and
dec
enter
ja
jp
mov
mov
int3
and
adc
push
fdivr
jl
jb
xor
dec
out
pop
xchg
ret
pop
inc
bsr
daa
addr16
ret
movs
or
adc
rcl
mov
cmp
push
movs
test
xchg
mov
ins
std
shr
mov
stos
inc
add
xchg
or
int
cmc
inc
out
xor
jo
push
fnstsw
clc
push
mov
xchg
jle
inc
adc
xchg
in
jmp
pop
lods
in
scas
loopne
cld
popa
xchg
add
pop
push
dec
arpl
fidivr
mov
mov
sbb
leave
xchg
cld
inc
aam
sbb
cmps
pop
lds
xor
scas
sahf
mov
pop
fadd
lock
cmps
inc
popa
jne
mov
xchg
movs
aaa
add
xor
inc
loopne
pop
or
mov
mov
jl
pop
pop
mov
sub
adc
lea
lods
sub
add
push
or
add
cmp
cli
es
pop
mov
fisubr
daa
mov
aad
loop
xchg
dec
add
ror
pop
xchg
or
sbb
sub
pusha
pushw
push
or
pop
je
aam
(bad)
loopne
movs
dec
call
mov
fcom
call
pop
cdq
or
jb
leave
int
mov
xor
dec
xor
lods
mov
lock
sbb
or
test
dec
add
pop
xchg
cld
es
mov
or
adc
outs
ret
nop
mov
jp
sbb
cmp
sbb
mov
mov
mov
push
mov
cmp
push
call
and
or
adc
test
sbb
sar
ds
arpl
in
je
xor
inc
mov
retf
cmps
cld
in
arpl
test
inc
xchg
xchg
ret
call
inc
mov
sbb
js
mov
or
lock
sub
jb
sub
es
mov
mov
inc
in
ins
mov
les
in
aaa
add
in
sbb
sub
gs
fwait
pop
mov
retf
test
xchg
sahf
imul
lock
pop
sub
xor
int3
gs
out
jg
jmp
pop
sbb
xor
int
pop
sub
adc
xor
dec
mov
adc
push
xchg
aam
mov
out
dec
push
cmp
jge
fwait
dec
and
outs
pop
push
or
push
lahf
movs
push
std
mov
pop
push
jge
cdq
push
fadd
sahf
pop
xchg
push
mov
stos
mov
fidiv
imul
fst
mov
sbb
data16
jmp
fistp
aaa
push
inc
not
inc
xchg
test
aaa
xor
xor
(bad)
jp
or
loop
and
cli
lods
data16
or
test
das
iret
cld
mov
cwde
jbe
fnstenv
mov
dec
ja
(bad)
cmps
mov
mov
in
loop
push
adc
iret
sbb
inc
sbb
inc
mov
jns
dec
pusha
xchg
mov
movs
out
mov
int3
jns
ss
stos
cs
int
bswap
mov
outs
mov
dec
imul
push
hlt
mov
mov
sahf
jge
pushf
(bad)
add
xchg
hlt
pop
sub
push
outs
xor
les
dec
xor
cmp
fmulp
mov
pop
test
mov
stos
call
or
fistp
je
mov
outs
repnz
sub
xchg
out
inc
addr16
jb
pop
sub
out
jl
stos
jge
hlt
add
scas
out
mov
addr16
xchg
cmc
adc
and
mov
xor
xor
pop
push
inc
out
inc
and
(bad)
fdivr
(bad)
xchg
xchg
in
xchg
cmps
in
lock
fsubr
mov
add
(bad)
jl
adc
loope
and
jbe
and
scas
sub
scas
and
iret
jmp
cli
out
pop
inc
das
xor
loopne
cwde
mov
loopne
fst
or
add
daa
mov
jno
pop
rep
xor
and
(bad)
fsub
lea
pop
pop
movs
hlt
les
jns
enter
out
leave
std
mov
retf
dec
mov
jnp
push
fisubr
jbe
into
push
xchg
std
sahf
xchg
xor
xchg
add
cmp
jns
lods
scas
mov
test
popa
mov
(bad)
sahf
mov
mov
cmp
pop
mov
pop
cmp
cmp
cs
call
test
jmp
ret
mov
pop
pop
(bad)
aas
lods
fs
loope
jmp
jecxz
sub
test
or
or
jb
aas
mov
and
aad
mov
mov
cmp
retf
cmps
sub
js
push
mov
sbb
pop
mov
cmp
test
mov
scas
push
sbb
cdq
xchg
pushf
imul
mov
push
pop
cmc
pop
imul
add
and
inc
mov
jp
retf
sahf
aam
jecxz
rol
sub
jmp
cmp
cmps
movs
das
cld
or
push
movs
mov
or
xlat
dec
and
scas
jo
sahf
push
call
(bad)
into
call
pop
adc
cmp
popf
mov
movs
ds
jnp
popa
dec
lahf
mov
std
repz
ds
or
jns
lahf
add
and
iret
cmp
cmp
adc
add
in
stos
popf
pop
sar
cld
repz
aas
(bad)
cld
repz
jmp
sar
int
push
dec
aaa
xchg
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
popf
mov
jno
je
mov
out
call
mov
cmp
jmp
(bad)
cmp
add
push
cs
sahf
cmp
out
push
sbb
pusha
pop
ins
sbb
xchg
push
rcr
push
sbb
jns
add
mov
sbb
and
pop
or
out
push
ins
jne
push
mov
je
imul
mov
mov
enter
sbb
or
xchg
push
xor
shl
pop
iret
fwait
add
nop
inc
in
pop
inc
test
(bad)
adc
cli
cmp
loop
mov
dec
cld
out
adc
call
mov
(bad)
fbstp
into
clc
je
mov
mov
test
xlat
in
mov
dec
ficomp
push
cs
in
(bad)
cmps
std
xor
(bad)
loope
sbb
dec
push
pop
push
adc
stc
jbe
mov
xchg
pop
mov
sub
pop
dec
les
xor
jae
int
(bad)
stos
aam
int3
adc
jecxz
push
retf
pop
mov
mov
out
les
movs
syscall
xor
movs
test
add
pop
mov
cmp
ror
push
repz
and
shl
jbe
mov
mov
xor
xchg
imul
pop
ins
imul
cmp
in
(bad)
rol
push
mov
stc
mov
push
adc
fstp
scas
aad
dec
neg
jge
mov
data16
pop
mov
js
or
xor
sbb
ins
ss
lods
xor
icebp
in
xor
add
add
sub
fcomp
in
(bad)
inc
dec
inc
(bad)
addr16
xor
mov
lods
inc
aaa
(bad)
arpl
retf
or
mov
fs
mov
mov
repz
sub
and
gs
inc
inc
sub
repnz
dec
(bad)
jecxz
pop
sub
test
mov
div
push
cmps
mov
or
add
and
xor
or
outs
add
ds
mov
adc
xchg
fidivr
inc
cmp
lea
call
repz
in
xchg
sahf
sub
mov
mov
sbb
xchg
push
sbb
pusha
push
test
out
fdivp
push
iret
fcomp
clc
stos
mov
call
aam
(bad)
fidiv
std
fnstsw
cmc
je
sbb
xchg
outs
sbb
mov
cmps
push
mov
sbb
ins
sar
call
rcl
adc
cld
dec
jg
add
cmp
mov
xor
aas
push
mov
fs
jecxz
and
mov
push
sub
cmp
push
repnz
sbb
stc
mov
sub
cmp
shl
popf
mov
retf
out
or
add
adc
in
xchg
call
loope
push
(bad)
xor
sbb
cmp
xchg
(bad)
mov
fs
and
fwait
test
fwait
cmps
jne
stc
or
repnz
inc
call
push
fbld
stos
es
shl
add
pop
mov
inc
mov
sbb
jge
lock
adc
adc
cld
push
mul
mov
hlt
lahf
push
leave
outs
sub
cmp
ins
sar
sbb
or
test
push
mov
pop
dec
imul
stos
xchg
repz
imul
cwde
adc
or
push
sbb
loope
pusha
std
and
adc
ins
push
pop
call
test
fs
test
jbe
cmp
aad
retf
xor
mov
test
and
pop
pop
and
jg
xchg
into
rcr
ds
jmp
movs
mov
mov
fdivp
mov
jo
cwde
pop
adc
inc
fiadd
dec
shl
in
std
(bad)
scas
in
fist
mov
repz
jnp
and
out
mov
pop
pop
dec
test
mov
jecxz
or
add
dec
dec
fcomi
fcomp
into
push
xor
int
dec
lock
lahf
xchg
lods
or
xor
adc
or
or
popa
cmp
not
(bad)
js
cli
xchg
adc
cmc
fstp
pusha
pop
jb
pop
or
leave
jbe
mov
cs
or
in
mov
ret
add
xchg
xchg
jb
(bad)
sub
inc
push
jle
jge
cmp
cmp
push
adc
jle
stos
lahf
inc
pop
xor
ins
(bad)
fst
into
mov
jle
add
mov
outs
mov
sbb
mov
pushf
and
push
int3
pop
pop
aad
pop
push
sub
jl
dec
repnz
es
iret
out
xchg
ret
jecxz
mov
repnz
lods
inc
or
sub
das
in
hlt
leave
test
mov
adc
shl
push
push
sar
inc
add
xchg
es
retf
(bad)
sbb
xor
icebp
dec
(bad)
adc
retf
sbb
scas
lock
stc
in
jmp
int
jge
arpl
aaa
or
cmp
mov
dec
mov
mov
adc
sbb
bound
pusha
mov
cmc
sub
mov
xchg
sahf
pop
jmp
(bad)
mov
fild
sti
das
ja
cmps
jae
inc
dec
sub
sbb
jno
sub
cmp
mov
cmp
mov
repz
inc
xchg
or
push
dec
rcr
cld
outs
scas
sub
add
test
sbb
mov
jl
inc
mov
(bad)
out
cmp
pop
sub
fs
js
in
ins
(bad)
dec
aam
cs
(bad)
jmp
jl
cmp
sub
movs
add
stos
fst
xchg
shl
xchg
mov
inc
ja
cld
imul
mov
aam
icebp
push
ja
in
xor
dec
ins
inc
popf
adc
cli
sbb
pop
cmp
xlat
jp
inc
int
rcl
sub
(bad)
lahf
outs
mov
push
xchg
gs
xchg
test
xor
add
sbb
fadd
push
and
mov
shr
popf
fmul
sub
cmp
inc
mov
imul
stos
mov
repnz
push
dec
and
cmp
popf
arpl
mov
mov
lea
aas
iret
cdq
ja
sbb
jae
xor
arpl
add
and
pop
sbb
mov
std
xlat
inc
in
xlat
stos
(bad)
mov
mov
push
in
push
add
pop
enter
push
jnp
outs
add
cs
repnz
test
repz
adc
and
rcl
sub
push
adc
xchg
xor
jnp
jne
adc
sbb
pop
enter
or
daa
adc
outs
push
ret
lahf
cdq
lods
xor
loopne
js
cmp
pop
cdq
retf
sbb
mov
fsub
call
or
push
push
sub
mov
adc
mov
adc
(bad)
in
mov
cmp
lds
lahf
pop
xchg
or
sub
sbb
lods
das
test
fstp
sbb
dec
and
pop
xchg
sti
push
pop
mov
popa
ds
in
(bad)
rcr
enter
ja
pop
fnstcw
mov
mov
clc
mov
jns
mov
out
adc
daa
xor
cmp
rcl
aam
cmp
mov
push
sub
rol
in
pop
push
repnz
adc
jg
sbb
out
scas
pop
sbb
pop
xor
inc
push
iret
xchg
push
jmp
or
jno
scas
enter
mov
pushf
xchg
test
and
(bad)
mov
out
push
into
test
mov
xor
xor
retf
mov
dec
dec
mov
fistp
pop
and
xor
cmp
mov
fst
or
xor
mov
jl
pop
dec
(bad)
iret
adc
int
(bad)
jmp
inc
or
xchg
pop
outs
imul
dec
pop
cwde
or
jmp
dec
(bad)
out
scas
mov
inc
jmp
fwait
sbb
leave
cld
mov
xchg
xor
add
push
adc
es
stc
(bad)
mov
mov
add
cmp
xchg
inc
mov
shr
cld
push
cmp
cmps
leave
repz
sub
mov
fs
lahf
fld
out
ds
fwait
xor
sub
mov
fstp
sbb
jb
stos
shl
sub
lods
popa
inc
cld
cmps
daa
les
cmp
retf
cmp
rol
test
or
xchg
dec
or
pop
cmp
jnp
shr
xor
mov
jne
jl
dec
push
push
push
or
call
or
aas
rcl
jge
retf
push
call
push
std
sbb
sbb
out
pop
movs
(bad)
(bad)
ficom
xor
pop
adc
xchg
jge
cmp
xchg
out
sub
jns
leave
repz
pusha
icebp
or
bound
leave
ins
xor
mov
ins
sbb
imul
push
loopne
clc
stos
leave
xchg
je
mov
gs
iret
jmp
loop
jle
outs
out
push
fisttp
ins
or
add
mov
xchg
push
imul
jl
(bad)
and
push
xchg
xchg
lea
mov
mov
and
push
xor
shl
mov
cs
add
push
cli
fistp
jbe
dec
xchg
inc
loop
pop
pop
test
je
xor
push
dec
pusha
(bad)
xchg
or
ins
dec
dec
test
dec
loopne
arpl
and
jmp
shl
or
in
sub
mov
jo
outs
and
shr
and
stc
mov
dec
mov
xchg
test
pop
xchg
test
mov
aas
ret
jecxz
mov
xor
mov
icebp
int3
cmp
jae
inc
stos
lods
push
(bad)
ins
sub
jae
sbb
cmp
inc
jns
js
ret
jno
push
cli
cld
sub
mov
xchg
jge
out
xor
adc
in
or
fwait
lods
jb
sub
sti
pop
nop
clc
rol
movs
jp
jl
xchg
mov
sahf
jmp
pop
cmp
in
xor
call
inc
dec
mov
lds
(bad)
out
jns
clc
in
jge
dec
and
xchg
mov
rcr
out
loopne
ror
mov
mov
arpl
xor
mov
mov
push
arpl
ins
mov
ss
daa
shl
and
sbb
mov
sub
sub
adc
inc
sub
bound
xchg
pop
push
push
stos
adc
not
dec
pop
pop
pop
push
mul
push
shl
push
mov
push
cmp
ds
and
jbe
sub
mov
(bad)
rol
cmp
sti
and
add
push
jns
fwait
or
mov
dec
sub
xchg
jmp
push
lods
popa
test
jo
pop
aad
dec
stc
shr
pop
mov
fisub
rol
imul
xor
das
je
out
adc
jb
mov
adc
sub
xor
adc
push
sub
add
push
push
lahf
inc
rol
or
mov
pop
pop
out
mov
out
xor
call
fdiv
inc
mov
stos
popa
ret
mov
xchg
pushf
pop
shr
sub
cmp
ret
adc
ss
sub
(bad)
jno
add
mov
mov
inc
mov
sub
push
aas
push
pop
ret
pop
xor
sbb
arpl
and
(bad)
mov
movs
inc
inc
mov
test
out
rol
repnz
call
mov
fidivr
pop
push
shr
pop
in
in
lahf
loop
xor
xchg
popa
add
dec
push
sahf
fcom
scas
jl
add
lds
inc
inc
int
(bad)
in
sub
fwait
jmp
ins
or
nop
cli
popa
popf
scas
cmp
retf
adc
mov
not
loope
push
addr16
xchg
jae
inc
dec
dec
dec
xchg
jno
(bad)
arpl
retf
out
aam
jbe
ror
scas
mov
popf
scas
and
ficom
rcr
sbb
call
mov
cmp
(bad)
jp
mov
jmp
dec
ins
inc
and
sub
ss
jne
push
pop
xor
sti
call
aaa
push
popa
scas
loop
aaa
call
mov
(bad)
push
add
mov
cmps
push
jle
fiadd
mov
pop
or
movs
pop
mov
lahf
pushf
imul
or
mov
jmp
shl
js
and
xlat
cwde
call
fcmovne
fadd
cmp
mov
adc
sbb
daa
xchg
stos
gs
pushf
mov
inc
mov
push
je
add
retf
xor
mov
xchg
jmp
es
sub
loopne
icebp
rcl
aam
adc
add
shl
mov
(bad)
adc
lock
jg
pop
add
leave
stos
jecxz
or
fstp
xor
dec
dec
shr
jnp
test
jbe
mov
pop
cmp
shl
push
repz
sbb
sub
add
loopne
cdq
pop
adc
sub
in
(bad)
std
push
imul
cmps
cmp
dec
inc
cmp
fs
adc
adc
pop
std
push
sub
pop
in
or
cmp
push
sub
fstp
inc
inc
pop
retf
in
or
cmp
ins
fcomi
xor
mov
call
fs
in
cwde
add
inc
neg
movs
ds
dec
mov
and
ja
sbb
mov
pop
jns
add
jmp
dec
das
sti
fs
mov
repnz
fs
sub
inc
or
pop
add
mov
jns
jg
repnz
push
inc
clc
retf
push
mov
pop
inc
or
push
(bad)
push
dec
dec
xor
cmp
sti
repz
jp
adc
dec
aad
fld
mov
(bad)
stc
into
in
mov
or
mov
push
or
movs
push
mov
pop
aad
and
sti
xchg
mov
pop
nop
loope
and
add
stos
mov
cmc
mov
jo
cld
jmp
mov
sbb
or
stc
das
xchg
cmp
stc
retf
sbb
xchg
dec
sub
repnz
mov
lahf
mov
xor
adc
jo
repz
(bad)
test
jmp
mov
std
pop
mov
lods
int
inc
pop
popf
xchg
int3
xlat
in
add
mov
mov
jle
or
push
ror
(bad)
push
push
jae
sub
stos
out
inc
jo
xchg
xchg
mov
dec
xchg
push
dec
int3
jmp
xchg
imul
mov
adc
inc
aam
fcomi
jno
push
fbstp
sub
inc
inc
fldenv
jb
fs
stos
test
xor
or
cld
sbb
push
test
inc
jnp
jge
aas
bound
ret
xor
shl
sub
and
inc
ins
lahf
pop
jnp
inc
js
(bad)
cdq
(bad)
iret
lahf
dec
mov
ja
clc
mov
adc
adc
mov
pop
cmp
or
mov
xchg
imul
test
imul
mov
sub
int
or
daa
inc
cmc
adc
mov
cmp
in
shl
or
jmp
add
sbb
push
fild
jmp
push
mov
inc
inc
dec
icebp
cmps
addr16
call
dec
lds
adc
mov
(bad)
imul
push
mov
enter
sbb
pusha
pop
xor
cmps
fidivr
xor
les
loop
fidiv
(bad)
and
jae
pushf
scas
cmp
int
cli
outs
add
(bad)
fld
or
aas
(bad)
stc
iret
jg
repz
jmp
sar
imul
pop
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
sbb
add
loopne
xchg
scas
ficom
in
pop
jbe
ins
jae
fnstenv
push
cs
or
das
jg
in
lahf
pop
add
popf
lods
cmc
pop
test
mov
inc
popa
cmps
fidiv
es
in
jge
ss
xchg
mov
(bad)
dec
movs
jo
ins
and
int
pop
shl
ja
(bad)
jg
inc
cmp
ret
add
add
inc
or
pop
mov
leave
dec
sub
jb
dec
push
mul
or
pop
repnz
(bad)
imul
xchg
std
cwde
or
test
ret
and
dec
das
mov
pop
sub
and
mov
sbb
packuswb
jmp
out
adc
pusha
jge
int
mov
and
(bad)
mov
popa
mov
call
out
and
movs
pushf
mov
lods
aam
dec
add
retf
sub
push
popf
xchg
(bad)
iret
or
(bad)
push
cld
and
push
ss
mov
mov
cmp
dec
pop
out
int
mov
mov
mov
lock
push
(bad)
cdq
and
cs
sbb
cmp
(bad)
ret
cld
lock
pop
stos
sub
pop
cmp
mov
mov
mov
je
loopne
jo
mov
(bad)
or
pop
lahf
pop
xchg
das
repz
jo
add
test
cs
test
add
outs
jno
loope
bound
not
ds
adc
(bad)
dec
inc
adc
jl
aas
and
sbb
fnstenv
stc
cmp
or
outs
dec
loopne
(bad)
xchg
pop
ret
and
pusha
sbb
cmp
(bad)
test
sbb
leave
popa
pop
and
dec
inc
jmp
in
aam
cs
in
cmp
mov
inc
test
andps
pop
inc
aas
je
jne
xor
cmp
mov
sar
and
fcomp
stos
dec
adc
aam
and
sub
push
das
xchg
xchg
imul
mov
in
shr
mov
ds
fidivr
and
mov
(bad)
hlt
mov
pop
cmp
popf
js
mov
dec
call
mov
iret
sub
xor
mov
adc
inc
(bad)
push
aad
test
test
xchg
adc
sub
jo
push
mov
mov
call
jnp
or
out
jecxz
scas
mov
jmp
xchg
dec
ret
push
cmp
pop
rep
mov
dec
nop
add
cmp
mov
bnd
in
scas
loopne
out
dec
and
inc
jne
aam
mov
cmc
mov
or
lods
push
lahf
add
adc
es
in
pop
pop
rol
or
nop
push
into
mov
xor
jne
jp
mov
hlt
or
push
(bad)
cmovno
jbe
mov
jmp
mov
cld
dec
and
test
repnz
ins
fisub
rol
jbe
popf
xor
mov
nop
aad
aad
cmc
fwait
jg
sbb
mov
fwait
push
mov
daa
xor
call
dec
xchg
in
in
scas
jmp
std
daa
jmp
or
aas
das
and
xor
lods
retf
lahf
jno
mov
inc
jns
adc
sbb
push
xchg
mov
add
ret
dec
mov
lock
mov
jle
lds
add
pop
mov
or
or
gs
dec
scas
retf
dec
and
repnz
call
xchg
mov
xor
mov
mov
cli
rcl
add
inc
jno
(bad)
(bad)
gs
push
repz
cdq
lahf
into
cmp
loopne
dec
pop
jle
xchg
fdiv
ret
cdq
jge
jl
lahf
pop
add
std
dec
pop
mov
test
dec
je
sub
popa
stos
mov
pop
mov
fild
cmc
fld
(bad)
mov
sahf
mov
inc
out
lods
movs
in
mov
xchg
inc
sbb
loopne
mov
cmp
mov
scas
inc
pop
cmps
bound
out
fst
cld
shl
mov
sbb
cwde
sbb
pusha
stc
mov
movs
es
call
loope
pop
adc
sbb
mov
cmc
imul
push
das
inc
sub
xchg
cmp
ins
popa
mov
sar
mov
sbb
aas
mov
add
inc
lock
neg
cmp
sub
add
pop
test
lock
push
mov
shl
mov
cmp
mov
outs
pushf
add
call
jmp
pusha
call
xor
adc
into
jo
adc
xor
(bad)
sbb
jb
jae
jl
neg
xchg
dec
xor
mov
out
pop
mov
cwde
ins
loopne
sub
ret
mov
inc
xchg
mov
adc
mov
ds
push
mov
dec
mov
and
xchg
xchg
mov
inc
mov
lods
jne
lock
push
dec
pop
fisttp
cdq
div
loopne
jns
lock
daa
pop
pop
imul
pop
mov
ja
gs
pop
dec
inc
mov
cs
sbb
ja
mov
scas
xlat
jb
push
dec
push
outs
adc
mov
push
fimul
jl
js
xor
dec
mov
adc
sbb
cmps
retf
stos
inc
xor
sbb
in
je
xor
scas
cmp
push
in
vhsubpd
mul
cmp
ins
int3
inc
fwait
push
sbb
add
adc
push
or
push
or
lods
xchg
in
jmp
test
add
(bad)
cmp
sar
and
adc
and
or
add
cli
std
test
in
aam
std
rol
(bad)
sbb
movs
ja
ja
ins
test
mov
push
xor
jb
jno
ss
cmp
and
xor
sbb
xor
inc
inc
cmc
sub
in
jbe
ss
jp
stc
imul
fsubrp
loope
sub
pop
push
push
push
push
pop
xor
jmp
jge
lds
pop
dec
adc
mov
push
and
mov
out
cwde
push
rol
sbb
add
mov
gs
loopne
jmp
sbb
lahf
sub
xchg
mov
xchg
ja
retf
push
push
sub
lods
ins
(bad)
jl
fwait
pop
cwde
les
xlat
dec
push
js
imul
neg
fstp
mov
mov
push
adc
and
mov
movs
gs
push
dec
dec
mov
addr16
ins
add
call
daa
retf
cmps
mov
sbb
repnz
or
xor
push
push
and
test
mov
ret
bnd
jle
pop
or
mov
lahf
imul
iret
aaa
test
inc
out
or
pop
ret
mov
aam
add
retf
push
cmps
xchg
xchg
add
jmp
mov
sub
sbb
pop
in
xlat
mov
retf
mov
cmp
pop
xchg
jbe
xchg
sub
mov
inc
popf
inc
lea
jecxz
cmp
popf
outs
pop
sub
fiadd
fcom
xchg
mov
cmp
stos
jo
dec
sub
inc
ficom
xchg
jns
ds
xor
inc
xlat
nop
fistp
mov
hlt
sbb
in
test
jge
fimul
loop
cmps
xchg
lahf
stc
mov
ftst
test
sub
mov
dec
loope
stc
pop
fucomip
push
cmp
sbb
cmp
mov
(bad)
mov
inc
nop
sub
int3
or
or
fldcw
push
stos
(bad)
in
lea
fcmove
outs
pop
sub
cdq
stc
out
add
icebp
mov
loop
je
push
fsqrt
push
xchg
push
std
jecxz
dec
adc
call
or
pop
push
test
sbb
or
cmp
pop
retf
ss
imul
push
fnstsw
in
sbb
mov
sbb
in
imul
inc
jmp
lds
cmp
mov
imul
pusha
pop
fincstp
mov
push
(bad)
shl
jg
imul
icebp
cli
lods
xor
push
retf
add
or
gs
push
popa
out
sbb
mov
push
mov
aam
mov
nop
shr
push
mov
jmp
ffreep
push
mov
cmc
jne
inc
mov
(bad)
int
(bad)
xor
into
outs
enter
sbb
mov
or
dec
dec
add
fdivr
sbb
push
mov
mov
cmp
pop
adc
or
(bad)
aad
xlat
imul
shr
cmp
in
sahf
sbb
stos
loope
arpl
ins
xchg
sbb
add
jle
and
test
pop
mov
mov
cmp
cmp
xor
ins
xchg
push
fwait
les
daa
ret
or
gs
add
scas
mov
fucomip
jg
iret
cmp
mov
ffree
scas
gs
lock
ret
add
sti
aam
xor
push
retf
ins
pop
push
jecxz
sbb
nop
pop
dec
jae
jne
lods
call
lock
mov
stos
xor
adc
cmp
int3
xlat
data16
pop
shl
jecxz
sub
push
lds
xchg
pop
jo
imul
xchg
rcl
xchg
push
push
mov
jnp
shr
xchg
ror
cmc
pop
jle
test
mov
lods
push
mov
xchg
das
in
xchg
mov
pusha
into
push
mov
daa
dec
mov
popa
lea
pusha
ja
out
push
es
sbb
jae
out
mov
inc
sti
call
daa
jp
or
test
push
adc
xor
lods
mov
fldenv
dec
fidiv
pop
nop
sub
dec
mov
(bad)
jmp
xor
cmp
fisttp
xor
add
outs
retf
arpl
cmc
test
popa
push
ret
sti
xchg
and
jp
sbb
push
xor
mov
and
inc
pop
jno
pop
jne
mov
inc
cmp
mov
retf
test
loopne
shl
js
adc
and
ins
stos
push
call
fld
dec
outs
push
jmp
cmp
dec
xor
cli
mov
cmps
mov
es
imul
cmp
pop
push
push
sbb
push
mov
aam
mov
popa
mov
pop
rcr
mov
xchg
(bad)
pmuludq
sub
xchg
sub
xor
js
fist
hlt
cld
das
das
shl
imul
pushf
xchg
mov
push
imul
jns
out
sbb
je
(bad)
pushf
mov
mov
sub
pop
dec
dec
add
xchg
push
and
xor
mov
sub
mov
or
push
cmc
stos
movs
xor
stos
imul
jl
pushf
mov
sbb
cmp
push
rol
lods
retf
mov
fs
fidiv
sbb
gs
fstp
mov
pop
fcomp
(bad)
cmp
push
inc
inc
pop
and
or
jmp
idiv
aaa
lahf
jnp
mov
iret
jge
addr16
outs
adc
int3
out
sub
and
int
(bad)
add
mov
dec
add
dec
push
inc
retf
ret
mov
scas
in
xchg
out
or
fcomp
gs
cmp
loope
cwde
mov
inc
daa
(bad)
(bad)
(bad)
jge
mov
cmp
jge
imul
cdq
adc
sbb
rol
pop
mov
pop
in
jp
call
inc
ret
lods
cmc
(bad)
int3
popf
jle
xchg
or
ss
test
push
jmp
rcl
jo
push
ret
jg
lods
bsr
mov
loop
cmp
pop
call
std
xchg
pop
imul
pop
retf
sbb
iret
movs
dec
sub
shr
add
jbe
pop
push
hlt
push
add
or
shl
shr
pop
out
push
cmp
sahf
pop
data16
sahf
outs
jns
leave
pop
sbb
adc
inc
dec
aas
stos
inc
clc
jno
push
cli
test
add
add
bound
xchg
test
fmulp
ds
pop
dec
and
push
aam
(bad)
in
xchg
mov
loope
test
mov
cli
jbe
add
test
mov
loop
xchg
or
mov
or
pop
jne
cmp
adc
jg
cmp
fsubp
out
dec
rol
dec
gs
sbb
xchg
cmp
fbld
jmp
in
push
jbe
xor
std
cmp
lahf
pop
push
cmp
mov
mov
push
sub
jmp
sbb
push
loopne
add
arpl
inc
mov
dec
(bad)
mov
dec
scas
pusha
test
xchg
push
push
cmp
jg
inc
out
icebp
push
mov
mov
ret
ffreep
ffree
and
ret
outs
mov
add
test
cmp
aaa
fxch
lods
xchg
or
sbb
pusha
in
(bad)
(bad)
int
xor
inc
mov
imul
or
cmp
test
cmp
out
or
retf
ret
cmp
pop
fadd
cwde
sub
ret
lods
imul
dec
lds
mov
pop
inc
lea
repnz
mov
jns
dec
retf
dec
repz
in
hlt
call
daa
jp
add
ror
xchg
scas
mov
scas
mov
loop
enter
mov
jo
outs
ror
bound
jmp
ja
dec
out
pop
iret
mov
fisubr
cs
mov
(bad)
jmp
shl
pop
inc
call
dec
les
fwait
xchg
dec
pop
fwait
das
hlt
int
and
cdq
xchg
push
mov
add
pushf
and
inc
mov
jmp
scas
mov
cli
adc
mov
inc
pop
push
pop
inc
sbb
inc
xor
mov
xor
stos
(bad)
(bad)
push
scas
or
std
pop
push
cmp
jno
cmp
sti
push
mov
sbb
xchg
fild
cmp
and
jae
mov
lahf
mul
in
adc
inc
imul
das
test
dec
in
mov
push
test
xchg
leave
pop
out
sbb
lods
gs
retf
mov
adc
sbb
mov
sub
mov
mov
jne
aaa
das
inc
ins
mov
mov
das
and
stc
sbb
xchg
jl
(bad)
int3
push
out
inc
popa
(bad)
pop
cld
aas
push
ret
(bad)
sahf
push
inc
loop
(bad)
jns
sub
cmp
jmp
dec
ds
push
neg
sbb
lods
jae
fstp
pop
jnp
dec
fdiv
add
jns
enter
mov
sbb
mov
fistp
cmp
jne
xchg
leave
in
mov
pop
and
aaa
aam
inc
jmp
jns
aad
ins
in
sub
pop
dec
fst
loope
lea
in
adc
in
popa
mov
inc
pop
bound
dec
adc
bound
ret
add
fstp
push
pop
pop
jle
mov
inc
pop
mov
sbb
shl
push
jns
gs
fistp
ja
sti
mov
mov
dec
int3
cdq
push
mov
xlat
iret
jmp
je
sub
mov
jno
fnstsw
mov
fist
inc
add
push
push
hlt
(bad)
push
pop
jae
fdivr
scas
sbb
jno
loopne
cmp
stos
sbb
push
sub
or
popa
xor
pusha
push
aad
mov
out
loope
jle
mov
bound
dec
lods
test
sbb
jecxz
lahf
fwait
popf
aad
and
or
jecxz
inc
repz
nop
inc
lock
sub
jb
sbb
dec
jae
ror
mov
add
push
inc
sti
inc
or
push
inc
into
mov
pop
outs
xor
push
sbb
sti
adc
sbb
loope
push
(bad)
outs
jmp
inc
pop
xor
jmp
sbb
or
jno
movs
jne
mov
out
pushf
call
fstp
jle
push
cwde
mov
(bad)
(bad)
mov
in
mov
xor
inc
xlat
mov
sbb
push
jbe
sbb
xchg
daa
sbb
imul
cs
ja
inc
adc
pop
dec
dec
mov
(bad)
cld
out
(bad)
stc
iret
jg
repz
jmp
sar
mov
(bad)
xor
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
out
int3
jo
push
ror
cwde
pushf
into
test
mov
xor
mov
mov
out
cmp
je
lahf
div
in
repz
add
test
cmp
or
repnz
dec
ror
xor
fst
pop
(bad)
and
js
cdq
fidivr
jnp
loopne
ins
in
pop
(bad)
lods
andnps
nop
es
adc
mov
jns
retf
mov
and
xchg
cwde
pop
jae
cmp
in
or
jl
not
ret
call
xchg
jb
(bad)
daa
repz
pop
rol
outs
arpl
out
ficomp
into
ss
xor
std
jg
not
shr
std
in
mov
sub
out
enter
pop
or
push
adc
ss
sub
cmp
sub
(bad)
retf
push
cmps
imul
mov
xchg
xchg
lds
enter
cmp
mov
arpl
and
push
jbe
bound
arpl
mov
inc
scas
xlat
fdivr
sub
in
inc
dec
jb
inc
in
mov
xchg
in
je
push
stos
mov
xor
sbb
ins
and
ret
inc
clc
adc
ins
test
push
(bad)
or
push
mov
push
adc
xor
push
arpl
pop
in
or
fisubr
add
je
inc
call
dec
popf
jae
in
lahf
jb
jp
stos
mov
mov
lods
test
xchg
sar
cmp
icebp
mov
jmp
dec
and
les
sbb
lds
mov
ins
mov
inc
shl
imul
fisubr
int
cmp
div
mov
pop
push
loopne
xchg
icebp
rcl
push
les
rcl
std
rcr
rol
outs
dec
xor
hlt
ret
ja
or
enter
sbb
pop
cld
(bad)
xlat
pushf
push
and
cmp
mov
sub
and
pop
jecxz
pop
ins
in
js
push
not
das
inc
ins
mov
jg
loopne
loop
pop
shl
aad
out
cmps
xchg
mov
out
test
int
cwde
out
jnp
dec
fdivrp
xor
scas
popa
cli
mov
xchg
sub
stc
adc
(bad)
dec
mov
push
bound
sbb
mov
lods
std
call
xor
sub
in
in
mov
cmp
mov
fcmovnb
ss
mov
sti
mov
loopne
xchg
xor
push
add
jg
pop
jp
xchg
mov
int3
cmp
data16
inc
inc
cmp
outs
add
iret
adc
mov
data16
ds
nop
popf
es
add
aam
sbb
out
repnz
test
inc
mov
and
mov
cmp
xor
shl
mov
xor
cmp
sbb
aas
out
or
xor
outs
loop
not
dec
xchg
ja
inc
ss
pop
cmp
add
idiv
out
icebp
inc
stc
mov
lods
cld
jns
and
pop
xchg
adc
inc
xchg
lods
adc
in
stc
jle
dec
jecxz
sub
mov
add
imul
jbe
leavew
in
dec
popf
adc
ss
rcr
sub
clc
and
int
xchg
rcr
ss
or
(bad)
arpl
in
pop
imul
dec
enter
scas
inc
bsf
js
sti
inc
ret
sub
gs
(bad)
sbb
in
repz
out
pop
pushf
js
ret
hlt
xchg
ficom
mov
xchg
fidivr
jle
leave
xor
adc
retf
fld
mov
repnz
push
jg
call
sahf
push
fld
ss
das
movd
add
aad
xlat
in
push
inc
lds
push
popa
sub
imul
or
mov
pop
jmp
pop
pop
inc
add
pushf
and
add
mov
ja
test
icebp
into
sbb
dec
ins
add
jp
or
and
pop
mov
push
mov
cwde
xchg
lods
push
inc
sbb
cld
and
adc
ror
mov
in
lahf
cmp
fs
jmp
sub
jb
jns
sbb
jne
xchg
and
xchg
ins
inc
or
pop
jb
imul
adc
mul
lds
jg
pop
push
mov
xor
jbe
retf
call
jo
and
(bad)
jl
fs
mov
arpl
push
dec
inc
or
leave
xchg
mov
paddd
cwde
div
stos
popf
hlt
push
inc
mov
nop
les
fmul
fld
dec
mov
or
pop
mov
or
mov
rcr
xchg
aas
jno
xlat
repnz
pop
pop
pop
cmc
sub
sbb
mov
pop
in
retf
ins
sub
in
sahf
call
mov
xchg
push
cmp
mov
jo
aas
div
xor
ins
cmps
movs
dec
inc
dec
mov
cmps
xor
scas
lock
leave
xchg
pop
fwait
and
add
clc
cmp
aaa
repnz
adc
push
retf
adc
outs
jp
jp
fld
lods
xor
mov
jb
xor
or
jl
mov
xchg
mov
push
leave
mov
sbb
push
xchg
loop
dec
test
adc
lea
adc
xor
shl
and
sub
dec
cmc
mov
div
mov
fldcw
pop
xchg
xchg
pop
outs
or
pop
je
clc
or
sub
push
push
push
movs
jo
movs
movups
inc
xor
arpl
shl
adc
mov
call
bound
jmp
jne
inc
je
lock
test
mov
and
pop
jne
daa
add
cmp
stc
fcom
ror
aad
scas
mov
in
js
jl
and
je
fstp
push
cmp
call
jge
jns
jmp
adc
and
clc
dec
sub
bnd
sub
sbb
outs
stos
(bad)
adc
repnz
add
ret
pop
sub
and
ds
jo
(bad)
pop
adc
inc
xor
fst
sub
jg
push
inc
call
sub
xor
imul
stos
mov
mov
sub
rcl
jns
sti
lock
pop
and
(bad)
js
jg
sar
mov
or
jae
xor
cs
lock
push
out
and
mov
sub
ss
stc
mov
and
push
jns
xchg
push
imul
mov
cmps
jg
mov
push
mov
mov
std
cmps
dec
(bad)
loope
and
push
pop
shl
mov
das
aad
not
js
pop
xchg
in
jbe
inc
adc
jp
xchg
mov
jae
mov
push
xor
add
mul
dec
or
sub
dec
mov
loope
(bad)
test
ins
popa
call
lock
leave
mov
js
mov
aas
xchg
lock
xor
and
icebp
dec
jb
dec
imul
ss
xor
sar
push
jae
push
sbb
push
dec
rol
xor
sti
xlat
or
and
into
out
and
push
movs
or
mov
(bad)
lods
sbb
ret
xchg
adc
pop
outs
ret
fisub
mov
out
leave
sbb
movs
xor
dec
mov
jle
out
mov
fcmovbe
stos
push
mov
out
pop
and
int3
es
mul
div
cdq
stc
cwde
jecxz
int
mov
lods
test
mov
les
ins
out
aaa
imul
stos
sbb
aas
daa
iret
ds
fld
sub
movs
sub
cs
in
ins
addr16
mov
mov
push
adc
cmp
add
bound
pop
retf
aad
xchg
dec
pop
push
add
xchg
jne
sub
adc
fcmovnu
or
icebp
adc
jmp
pop
mov
pop
xchg
(bad)
inc
iret
data16
jmp
adc
cmp
push
xchg
xchg
xor
and
xor
fmul
add
pop
adc
test
xor
jo
stos
fstp
cli
int
loop
pusha
out
dec
xor
jnp
popf
xor
dec
sahf
push
xor
js
add
push
mov
sar
out
dec
jae
rcr
popa
mov
push
lods
xor
lods
es
dec
icebp
lods
lock
jle
sbb
and
xchg
xchg
jecxz
imul
pop
mov
xchg
push
retf
not
push
out
stos
or
movs
pop
bndstx
in
xchg
jg
sub
call
adc
fcomp
in
ror
mov
mov
scas
mov
mov
rcr
xchg
or
dec
cmps
mov
aad
lea
aas
int3
fld
xor
xchg
mov
jo
jbe
sub
sub
cmp
popf
sbb
jo
(bad)
hlt
add
cmps
jae
adc
pop
enter
and
inc
adc
lahf
iret
sahf
cmc
mov
jne
or
(bad)
sbb
mov
out
(bad)
and
(bad)
movs
scas
scas
xchg
inc
adc
cmc
cdq
fs
mov
cmp
cmp
add
adc
in
repnz
xchg
lds
xor
aas
mov
lods
jl
mov
mov
in
dec
sbb
and
ja
pop
inc
cmp
sbb
sub
pop
icebp
dec
mov
add
lea
mov
push
bound
pop
xchg
aam
cs
out
out
test
mov
cmp
iret
pop
in
sub
daa
xor
adc
rcr
xchg
adc
(bad)
mov
stos
cmp
xor
pop
mov
cmc
ja
xor
int
xlat
mov
shl
inc
bound
jle
arpl
mov
pop
add
push
or
cwde
not
xor
outs
sub
rol
add
popf
push
cld
push
aas
sbb
retf
movs
sub
push
add
fs
cmp
aaa
pop
shr
inc
mov
arpl
jle
int3
into
lahf
push
retf
dec
or
loope
loopne
push
mov
(bad)
or
push
repnz
ja
mov
ret
mov
test
add
pop
in
and
inc
jb
pop
(bad)
ds
mov
das
adc
jae
daa
fcomip
into
mov
cmp
imul
movs
ss
(bad)
(bad)
jg
push
jg
enter
dec
sbb
pop
or
(bad)
mov
sbb
sbb
pop
in
loope
push
out
(bad)
mov
cmp
into
les
mov
fsubrp
add
and
adc
scas
ret
push
mov
pop
call
sbb
stos
test
cli
xor
jmp
into
loope
hlt
out
or
inc
addr16
(bad)
stc
mov
fld
mov
push
imul
dec
stc
or
xor
push
add
out
mov
dec
daa
outs
(bad)
ins
in
cmp
fdivr
test
and
cmp
dec
dec
scas
or
mov
(bad)
add
adc
mov
jno
lock
jnp
call
sbb
pop
repnz
fistp
jecxz
inc
adc
xor
xchg
sbb
imul
jo
arpl
aaa
mov
pop
push
inc
jl
adc
and
push
(bad)
or
mov
or
repnz
inc
xlat
fcom
pop
arpl
or
shr
jns
jle
hlt
inc
and
cmp
shr
and
rcl
les
push
stc
sar
icebp
mov
mov
movs
push
mov
fcomp
push
push
mov
fwait
ins
fcmovnu
arpl
jecxz
lods
dec
call
sub
cmps
mov
push
mul
(bad)
pop
rcr
out
mov
fild
lods
and
xlat
out
mov
fisubr
mov
retf
pop
xor
stc
fdivr
dec
mov
inc
and
mov
fwait
add
imul
push
inc
jg
sbb
out
scas
mov
test
inc
cmp
iret
xchg
cmps
inc
lds
mov
xchg
mov
(bad)
pop
(bad)
sar
push
fucomp
and
into
int3
xor
ror
ror
or
mov
mov
mov
ss
out
dec
xor
xor
xor
(bad)
pushf
add
daa
pushf
test
jp
sub
mov
bound
dec
fwait
call
out
mov
enter
push
repz
sbb
ret
xor
fwait
int3
mov
loop
pushf
data16
ins
push
push
fdivrp
hlt
and
xchg
sub
dec
cmp
sti
push
add
mov
push
lods
jae
gs
sbb
add
retf
jne
in
ds
fisttp
sbb
test
in
push
or
ffreep
mov
sbb
xchg
fcomip
jmp
push
mov
mov
out
das
sub
aam
jae
jmp
jge
sbb
nop
cmp
(bad)
int3
or
retf
xlat
out
dec
clc
clc
dec
push
cmps
or
in
out
sub
jl
(bad)
mov
add
jge
std
fcmovnb
sbb
shl
mov
popf
cwde
xor
add
in
jmp
jle
mov
mov
sbb
mov
cli
mov
pop
ret
mov
call
jle
mov
repz
es
fwait
fwait
jmp
sub
fdivr
rcl
cmps
sbb
inc
call
cld
std
dec
lods
xlat
cmp
ds
and
xchg
addr16
jl
(bad)
in
pop
int3
rcr
adc
pop
jg
xchg
popf
sub
mov
in
adc
dec
pop
shl
sbb
sbb
cmp
je
push
lock
mov
adc
arpl
stos
fsubrp
mov
pop
xchg
or
movs
cdq
push
xchg
cdq
fs
sub
jecxz
daa
(bad)
in
jmp
std
sub
arpl
enter
dec
fbstp
jg
pushw
scas
stos
jle
dec
mov
and
mov
push
dec
retf
push
mov
mov
cmp
sbb
arpl
add
jns
push
nop
in
and
mov
sbb
pop
sti
fild
dec
inc
pop
stc
add
fdivr
cmp
test
stos
and
fidivr
sbb
sbb
dec
push
popf
inc
pop
sbb
stc
mov
out
xor
mov
jnp
fld
mov
sbb
imul
jbe
test
clc
sahf
test
cli
mov
ret
jg
sbb
(bad)
push
add
pop
or
push
add
adc
cli
cli
les
sbb
or
fcmovu
pop
leave
and
sub
ds
push
call
mov
fcom
push
test
jb
dec
sbb
inc
into
pop
and
aam
ret
jp
mov
movs
jl
xor
xchg
cmps
push
(bad)
data16
fs
mov
inc
mov
xchg
fst
sbb
mov
bswap
test
fs
(bad)
test
cmps
add
mov
(bad)
sbb
repnz
mov
mov
jle
inc
ins
shl
or
clc
shr
sbb
test
fcom
sti
int3
lods
and
sub
movs
int3
pop
add
cmps
jnp
loopne
xchg
sub
sahf
dec
mov
ins
mov
sub
mov
jmp
nop
cmp
bsr
lahf
(bad)
ins
sub
ret
ins
movs
sar
cmp
arpl
mov
sbb
sbb
sbb
repnz
jmp
rcr
icebp
sbb
call
mov
pusha
stos
je
mov
mov
xlat
mov
dec
add
jnp
cmps
mov
sbb
inc
(bad)
or
inc
sbb
cs
shl
int
add
xchg
pop
fnstcw
jmp
push
pop
mov
mov
sub
es
mov
cmp
mov
test
jns
xchg
sbb
and
jl
in
aaa
leave
inc
in
push
inc
or
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
ins
pop
clc
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aad
pop
xchg
or
out
push
imul
nop
scas
shl
jp
dec
push
dec
xchg
adc
movs
xchg
adc
sub
push
cli
jge
(bad)
jmp
sub
(bad)
jecxz
add
enter
or
bound
or
fs
lock
out
jp
dec
inc
clc
repnz
and
and
mov
ret
cmp
mov
mov
fcmovnbe
xchg
dec
adc
aam
jmp
ffreep
cmps
xchg
lods
push
dec
(bad)
js
xor
pop
push
xchg
pop
adc
jmp
xchg
aaa
dec
mov
imul
jmp
lods
lods
and
aad
dec
int3
movs
dec
pop
inc
mov
lods
pop
adc
jecxz
add
xchg
mov
cmp
movs
or
(bad)
fst
popf
out
adc
xchg
out
lods
cmps
or
xor
jg
call
xor
cmp
or
out
and
or
fstp
mov
adc
out
jo
int
mov
scas
ret
in
mov
jle
mov
lahf
es
sbb
repnz
pop
fsubr
add
cli
shl
cwde
loopne
mov
into
cld
pop
mov
fs
call
sbb
(bad)
inc
adc
ret
ret
iret
xor
and
ja
sub
mov
cmp
imul
int
fs
dec
popf
pusha
mov
inc
cmps
adc
inc
cmp
dec
cdq
enter
in
push
cmp
repnz
enter
add
sub
rol
ins
ja
jecxz
xor
shl
xor
popfw
rcr
je
dec
add
inc
push
xlat
retf
mov
leave
mov
mov
add
test
push
shl
mov
loop
mov
pushf
sbb
xor
loop
call
scas
js
gs
jecxz
dec
push
inc
retfw
inc
xor
lock
push
inc
loopne
xchg
iret
jmp
add
sub
cmp
push
jo
inc
inc
sub
inc
push
out
sbb
jl
or
sub
stos
pop
dec
loope
jbe
xchg
push
clc
add
or
xchg
test
push
add
ss
mov
adc
cmps
xchg
dec
pushf
sub
rol
ins
dec
xor
and
add
dec
cmp
push
dec
loope
out
cmc
movs
repz
call
or
cli
lea
mov
mov
in
pop
xchg
in
in
jne
into
out
pop
aad
(bad)
pop
sbb
jae
fucomip
cmp
push
daa
int3
lods
ds
xchg
push
add
dec
fsubrp
cmp
icebp
cmp
pop
cmpxchg
rol
rcl
jp
int3
push
imul
neg
loopne
fnstsw
push
in
and
inc
xchg
lods
outs
dec
xchg
movs
mov
gs
push
push
sbb
cld
lods
fs
(bad)
lock
jge
xchg
int3
call
inc
xor
push
aad
das
(bad)
mov
sti
ror
mov
popf
shl
xor
mov
xchg
xchg
sbb
add
ins
iret
or
sub
jno
push
mov
and
sbb
rcr
mov
jmp
jecxz
jmp
xor
jb
cmc
sub
or
push
inc
inc
push
mov
xchg
ja
pop
cwde
pop
mov
and
int
sub
les
call
inc
adc
push
mov
loop
mov
cdq
cdq
push
jmp
sbb
xor
fyl2xp1
(bad)
sub
inc
(bad)
ret
out
shl
sub
mov
sbb
rol
sbb
into
mov
loop
jl
and
jbe
or
dec
(bad)
imul
mov
or
pop
xchg
mov
les
push
and
or
stos
lods
mov
ja
das
bound
lea
stc
xor
repnz
lahf
cmp
arpl
and
imul
in
les
fiadd
aam
data16
arpl
daa
push
imul
pop
jmp
sbb
loop
fistp
sbb
dec
mov
pcmpeqw
mov
sbb
sub
jne
in
mov
sbb
addr16
jae
inc
xchg
cmp
pushf
test
icebp
mov
ja
mov
sub
stos
inc
xchg
pop
fidiv
cmps
imul
push
(bad)
mov
test
aam
xor
xor
jmp
loopne
sbb
nop
and
or
and
or
cmp
loop
(bad)
mov
adc
mov
cmps
jb
sbb
push
sbb
sbb
pusha
test
cli
add
(bad)
cmp
out
ja
sbb
xor
test
mov
mov
jg
mov
out
or
mov
je
inc
ficomp
jp
into
jnp
loope
push
push
imul
movs
xchg
xchg
adc
dec
sbb
push
adc
iret
xor
enter
aad
jmp
adc
test
in
hlt
mov
dec
out
dec
and
cmc
push
cld
mov
aaa
dec
fwait
jmp
pushf
jns
pop
pop
push
imul
or
xor
add
add
jecxz
sub
dec
pop
arpl
movs
push
or
cmp
jle
xor
cmp
in
push
adc
xchg
add
pop
into
jl
cwde
add
mov
shl
jg
xor
out
mov
stos
cmp
inc
cmps
(bad)
test
xchg
imul
rcl
jl
ret
int
mov
sub
mov
mov
dec
or
mov
sbb
adc
pop
(bad)
push
std
push
cmp
ins
adc
adc
sahf
jl
lods
sti
push
xchg
mov
ja
ins
push
aas
ds
jl
int3
and
data16
repz
ins
call
pop
jae
ins
dec
dec
cmp
xor
dec
lods
jg
xor
adc
dec
xor
in
repnz
mov
inc
inc
sub
dec
adc
xchg
mov
out
pop
sbb
sub
dec
mov
in
adc
fs
mov
add
lock
mov
mov
pop
mov
in
lock
sbb
mov
jns
out
xor
into
stos
in
movs
mov
adc
sbb
xchg
lods
cli
dec
aaa
jmp
js
aas
stc
dec
sbb
lods
inc
leave
xchg
pop
fdivr
push
dec
pop
icebp
sbb
mov
(bad)
and
mov
lods
cmp
pop
sub
aaa
fsubr
popf
adc
outs
mov
retf
call
push
test
push
fstp
push
inc
push
ins
sub
test
pop
cwde
inc
and
and
js
(bad)
pusha
mov
(bad)
pop
jecxz
in
aas
imul
repnz
xor
mov
add
cld
pop
cwde
inc
cmp
arpl
lods
dec
leave
js
mov
mov
stc
(bad)
cmp
push
mov
push
dec
sahf
pop
popa
jge
sbb
cmp
lods
pop
sti
in
arpl
outs
mov
pusha
mov
leave
jmp
outs
shl
or
or
ss
sub
sti
in
(bad)
in
pop
push
test
in
xor
ja
sub
inc
push
xchg
stc
add
adc
jecxz
pop
ins
call
cmp
aam
ror
cld
push
xchg
shl
pop
in
jle
push
mov
mov
cmps
pusha
xlat
push
adc
add
sub
fcmovbe
sub
loopne
sahf
(bad)
mov
push
out
cmp
ror
in
jmp
repz
(bad)
jnp
inc
cmp
pop
gs
ja
add
sbb
fstp
fisubr
ficom
sti
dec
pop
jle
aas
outs
mov
lods
clc
arpl
adc
ja
mov
jecxz
test
fbstp
mov
gs
(bad)
rcr
fstp
push
cmp
xchg
nop
dec
test
jge
call
jmp
loope
call
pop
fisttp
sub
mov
retf
cmp
sbb
push
cmps
mov
push
sub
pop
js
cmps
xchg
(bad)
dec
dec
leave
loopne
hlt
jg
dec
jl
inc
push
fsub
bnd
arpl
inc
xchg
mov
push
xchg
push
mov
aas
lds
xchg
xor
jmp
push
(bad)
push
cdq
dec
push
stc
jmp
fcomp
mov
int
push
movs
in
push
lods
ss
xchg
and
mov
cmp
jne
fdiv
outs
pop
out
test
dec
sbb
ins
ds
lds
push
mov
and
jmp
mov
(bad)
test
hlt
sub
jo
push
xchg
dec
cmp
xor
pusha
xor
das
push
jecxz
lods
sbb
add
mov
fucomip
enter
ret
sbb
dec
jp
call
xlat
(bad)
add
sub
xchg
xor
fs
retf
pop
arpl
sub
icebp
leave
mov
fwait
scas
mov
(bad)
pop
pop
stos
sub
aad
mov
and
ins
xor
pop
fld
sbb
push
dec
jecxz
ss
rcr
inc
mov
test
arpl
test
inc
or
repz
std
push
mov
(bad)
sub
stos
xor
sbb
inc
adc
jmp
std
xor
repnz
jnp
xor
sbb
mov
dec
and
cmp
inc
xor
fbld
or
jmp
push
ret
mov
mov
adc
adc
jno
push
mov
and
cmp
and
pop
pop
imul
inc
fwait
xor
mov
cmp
jo
push
fild
leave
adc
mov
add
xor
mov
mov
mov
mov
push
jl
mov
int3
ret
pushf
scas
(bad)
popf
clc
mov
cmp
xchg
inc
push
jne
sub
sub
add
test
or
dec
popa
ins
and
sub
movs
mov
xor
pushf
xchg
sub
leave
dec
inc
add
sbb
dec
and
sub
div
int3
and
aad
fs
movs
xchg
sbb
in
pusha
clc
sbb
push
lods
cmp
not
cdq
jne
jae
dec
inc
mov
out
sbb
in
es
retf
dec
dec
inc
mov
jne
xchg
adc
jmp
ds
fwait
mov
and
ins
(bad)
leave
clc
cmp
jmp
inc
out
call
adc
sbb
push
mov
ins
or
je
out
fsqrt
dec
push
sub
js
sub
mov
xchg
(bad)
hlt
dec
push
cmp
sar
iret
xchg
test
or
adc
loop
arpl
sbb
dec
pop
call
mov
fcomi
push
stc
(bad)
jo
mov
int3
pop
add
test
daa
cwde
mov
bound
imul
and
push
cmps
sbb
xor
in
in
ss
jmp
loopne
push
and
xchg
push
dec
pop
mov
add
cmps
inc
push
in
mov
jnp
int
popa
xchg
les
out
out
push
push
adc
shr
push
jg
cdq
outs
lds
(bad)
pop
in
xor
dec
mov
data16
icebp
mov
pop
mov
lahf
fs
or
data16
lods
fisubr
mov
add
inc
dec
call
fs
cmc
adc
adc
cli
push
mov
popa
xor
retf
stc
rcr
aas
mov
aad
mov
adc
pushf
mov
ror
cmc
cmp
dec
leave
dec
push
mov
xchg
cmp
push
cmp
fwait
cmp
adc
xchg
mov
xchg
sti
fidivr
out
sti
data16
mov
sub
test
pop
scas
test
outs
into
fwait
repz
es
arpl
lods
sub
out
in
dec
test
pop
sub
push
pop
push
fild
xchg
mov
imul
sub
mov
push
dec
call
push
push
pop
add
mov
push
js
frstor
mov
ret
mov
mov
icebp
xchg
dec
push
cwde
retf
mov
adc
sub
cld
dec
bound
mov
add
inc
test
push
retf
fld
adc
cmp
(bad)
enter
ins
addr16
and
cmp
sti
shl
push
mov
in
(bad)
cs
push
idiv
xlat
popa
cmp
cmps
fimul
test
pushf
pop
fisttp
in
add
mov
jle
add
mov
nop
lods
stos
mov
adc
test
or
push
push
aad
adc
clc
js
repnz
shr
or
adc
aad
dec
add
dec
lahf
sbb
lods
adc
pusha
js
jnp
cmp
ins
movs
stos
repz
shl
imul
inc
fs
fiadd
icebp
loopne
sub
cmc
sub
fild
mov
scas
pop
xchg
jae
sbb
push
sub
adc
xchg
sbb
inc
xchg
aad
jns
cmc
mov
xchg
call
outs
ja
loope
not
(bad)
ror
sbb
mov
icebp
test
xchg
add
sbb
inc
mov
movs
xchg
jmp
int3
je
pop
mov
ficom
pop
(bad)
jnp
gs
mov
popf
icebp
lds
add
mov
mov
cmp
adc
and
push
rol
cwde
mov
rcl
mov
fwait
push
nop
fs
mov
mov
inc
pop
push
add
or
dec
scas
pop
sahf
xchg
push
call
rcr
mov
jb
adc
jae
stos
ret
out
fldcw
pop
jle
mov
mov
cld
and
jnp
outs
mov
xchg
mov
add
ret
and
sub
inc
jmp
xchg
inc
daa
fistp
sbb
sbb
ja
cwde
imul
xchg
cmps
mov
retf
adc
ror
dec
or
dec
pop
push
adc
or
fs
xor
je
in
(bad)
test
add
sub
pop
sbb
cwde
fisubr
int3
(bad)
(bad)
clc
or
jg
add
mov
and
pop
cld
sub
mov
lods
sbb
arpl
out
jo
pop
cli
pusha
add
pop
mov
cmp
mov
jno
mov
neg
inc
dec
imul
mov
pusha
loopne
outs
(bad)
and
push
mov
not
push
ret
jp
pop
inc
ss
dec
nop
lds
inc
loopne
cmp
mov
fwait
cmp
test
sahf
sub
clc
mov
loop
ror
(bad)
retf
or
fisub
dec
call
dec
xchg
mov
jge
test
sbb
xlat
push
outs
pop
icebp
loope
pop
cld
and
jnp
out
fsub
mov
aam
jecxz
in
sti
mov
dec
fcomi
out
inc
stos
jne
cdq
inc
call
adc
jb
sahf
cmp
in
inc
mov
pusha
xor
aad
or
cmp
lods
jecxz
daa
jmp
push
xchg
cmp
daa
pop
mov
icebp
push
in
mov
cld
punpckhwd
inc
arpl
xchg
dec
iret
push
adc
das
mov
adc
ss
test
in
ja
jns
mov
push
pop
sub
or
dec
ds
xor
cmps
cmp
xor
arpl
add
and
test
in
ss
retf
rol
sub
dec
out
push
sar
fldenv
mov
jo
mov
aaa
lahf
pop
sub
fwait
stc
and
into
icebp
loope
sub
mov
and
dec
mov
leave
scas
sbb
pop
scas
(bad)
aam
dec
adc
(bad)
push
data16
mov
aaa
jo
cmp
lea
or
cdq
cdq
int
int
adc
cmp
push
inc
sti
fdivp
mov
fs
lea
lea
loop
retf
loope
nop
jo
jmp
(bad)
stc
inc
sbb
clc
out
jg
stc
out
jg
stc
jg
add
pcmpgtb
out
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
das
xor
pushf
out
pushf
out
jmp
fldenv
int3
imul
cmp
or
data16
test
mov
icebp
add
repnz
and
push
pop
cmp
xor
inc
mov
and
out
aaa
and
xor
lds
out
cmp
ret
sbb
hlt
mov
out
dec
sub
shl
jmp
lods
lock
pop
pop
mov
pop
outs
fisubr
add
stos
int3
dec
dec
les
mov
xor
cdq
stos
sub
mov
jge
cmps
pop
and
leave
inc
xor
mov
or
pusha
lahf
sbb
pushf
cwde
sbb
push
dec
popf
push
push
into
and
cwde
(bad)
out
dec
div
lods
xchg
into
ret
push
pop
pop
sub
shr
xchg
enter
push
xlat
xchg
lods
leave
popf
xchg
jp
jnp
mov
sti
retf
push
jecxz
pop
ja
pusha
je
and
clc
aam
fcomi
mov
data16
adc
sbb
ds
test
(bad)
push
adc
mov
sahf
gs
mov
stos
rcr
lea
or
dec
addr16
in
aam
cmp
sub
enter
inc
ins
mov
pop
bnd
cwde
jmp
loopne
jmp
aam
out
sbb
cmp
inc
sub
hlt
loopne
pop
jae
stc
iret
add
hlt
cli
test
imul
and
push
jl
ss
fcmovu
out
imul
shl
dec
xor
call
sbb
into
inc
mov
clc
push
pop
push
xor
and
hlt
mov
lahf
into
inc
xor
and
call
dec
lock
xor
out
sbb
jnp
stos
mov
out
das
inc
retf
enter
lock
sub
in
lds
call
and
sbb
dec
test
int3
cld
pusha
out
mov
inc
xchg
jecxz
sahf
pop
sub
push
or
bound
ss
jae
push
sahf
sbb
call
jne
mov
pop
pop
jno
movs
pop
mov
xchg
int3
cmp
in
mov
add
fld
push
call
jae
inc
cli
mov
daa
or
adc
in
bswap
aas
mov
pop
pushf
aas
cmp
cmps
dec
rcl
jo
aad
push
adc
sub
push
jecxz
movs
sub
mov
shl
add
xchg
fwait
xchg
ds
inc
mov
mov
mov
cdq
and
or
adc
out
outs
call
jle
rcr
adc
es
or
jo
call
rcl
xchg
mov
or
sbb
mov
sbb
scas
xchg
gs
xor
push
or
icebp
ins
push
mov
cs
aad
xchg
fimul
sbb
mov
imul
icebp
push
scas
scas
ja
jg
add
mov
jbe
(bad)
(bad)
dec
or
(bad)
jmp
(bad)
repnz
(bad)
test
test
(bad)
fs
fidivr
repz
int3
enter
inc
cmc
add
inc
dec
pusha
add
inc
icebp
sbb
jne
iret
ds
jge
xor
(bad)
out
mov
stos
jecxz
push
jl
or
adc
pop
dec
test
mov
pop
mov
adc
push
popa
cmp
pop
lea
test
stos
and
icebp
xor
test
inc
cmc
or
fldcw
adc
adc
cli
pop
mov
dec
inc
out
ret
movs
lods
movs
mov
adc
fdivr
ret
lods
add
std
mov
adc
out
and
stc
movs
xchg
push
fdivr
push
dec
push
clc
mov
test
push
mov
call
into
dec
mov
push
stc
add
mov
scas
popa
test
dec
fbstp
fs
mov
jp
mov
hlt
mov
jae
or
loop
jge
xor
rcr
enter
push
loop
fimul
mov
(bad)
jecxz
aam
test
mov
cwde
sub
loope
jb
or
dec
mov
push
dec
fmul
jge
test
fst
push
in
push
xchg
js
adc
cdq
inc
and
xchg
mov
mov
ret
std
pusha
mov
xchg
push
popf
xchg
aas
outs
arpl
mov
jmp
imul
push
cld
xor
or
aaa
mov
push
sti
mov
fstp
jae
xchg
jae
ret
inc
fnstsw
sub
mov
push
pushf
jge
and
(bad)
push
ins
push
sbb
sub
add
(bad)
mov
rcl
test
out
mov
test
out
dec
addr16
out
aaa
xor
mov
(bad)
xchg
dec
loope
mov
fwait
cld
add
cmps
pusha
stos
pop
push
xchg
pop
sub
int
sub
xchg
xor
sahf
adc
and
aaa
add
push
in
aam
ret
xchg
xor
retf
adc
jge
(bad)
or
xor
enter
stc
mov
jmp
sub
in
jecxz
out
fimul
add
inc
mov
adc
(bad)
xchg
hlt
imul
ja
add
test
jmp
lahf
pusha
xchg
push
adc
pop
mov
loop
aam
pop
cmp
fdivr
xor
cmp
mov
mov
movs
ins
cmp
adc
cs
add
and
std
repnz
mov
rol
xor
mov
mov
test
fist
clc
xchg
or
les
outs
call
ins
pusha
ror
adc
lahf
sbb
or
mov
arpl
xbegin
sub
out
push
fld
sub
std
mov
inc
push
popa
std
xor
cmp
jno
cmp
pop
jbe
pop
in
int
xchg
cmps
xchg
ror
push
cwde
mov
out
and
bound
xor
pop
mov
ror
sbb
xor
scas
ret
or
les
fiadd
ins
mov
xchg
and
xchg
mov
push
and
lods
aas
push
fmul
in
sahf
pusha
jmp
movs
movs
out
dec
sub
daa
sbb
ds
lahf
jmp
out
pop
jmp
ret
ffree
(bad)
sbb
sub
lea
mov
movs
xor
jle
and
push
and
jl
ds
les
es
pop
imul
sar
pop
pop
fistp
sub
scas
jge
arpl
pushf
push
push
mov
les
jmp
out
cmps
rol
loop
xor
jmp
(bad)
int3
pushf
(bad)
pop
dec
jge
loop
retf
push
fstp
enter
mul
ret
lock
rol
retf
sahf
test
mov
dec
jecxz
push
(bad)
mov
bound
sbb
in
sub
and
pop
adc
in
sahf
retf
(bad)
jno
mov
pop
adc
adc
mov
mov
xor
inc
iret
pusha
sub
cli
jo
cdq
add
daa
cmp
daa
(bad)
les
pop
cmc
sub
in
(bad)
hlt
dec
push
outs
push
adc
jp
cdq
pop
ror
arpl
aam
inc
scas
push
jp
es
add
ret
push
cli
ffreep
arpl
jne
pushf
retf
and
push
in
push
dec
out
stos
ret
fwait
loop
mov
sbb
das
(bad)
adc
mov
add
jecxz
inc
ret
icebp
repz
xchg
in
xor
push
out
xlat
mov
jp
fst
push
rcl
push
mov
adc
sti
push
dec
xor
inc
(bad)
cli
ja
mov
sahf
daa
in
inc
jle
data16
retf
add
icebp
outs
or
mov
dec
add
sub
leave
sbb
cmps
in
sub
(bad)
sar
fwait
in
dec
cld
push
add
aad
sub
xchg
dec
add
out
test
inc
ret
jnp
addr16
in
in
xchg
ret
lock
and
imul
mov
mov
inc
mov
sbb
inc
lods
sub
push
jp
std
mov
push
dec
call
mov
jle
mov
int3
pop
jl
loope
pop
and
sar
mov
fcomp
jno
retf
bound
xchg
push
inc
sub
mov
pop
add
out
loopne
hlt
rol
dec
jg
jne
aam
pop
adc
sub
fwait
(bad)
out
jge
xchg
or
sub
or
jmp
cs
push
call
cmp
jmp
pop
mov
ds
xchg
pusha
xchg
arpl
(bad)
xchg
mov
(bad)
(bad)
jle
mov
in
add
out
retf
cs
lahf
push
movs
pop
sub
shr
push
in
dec
mov
ficom
mov
dec
or
dec
pop
fs
pop
mov
mov
in
jg
nop
das
dec
repnz
mov
cs
(bad)
aaa
ret
(bad)
fistp
cmc
or
jae
cmps
xchg
rcl
jns
xchg
and
sahf
repnz
jnp
repz
mov
push
cmp
jmp
neg
push
movs
fidiv
xor
lds
sbb
adc
mov
je
pop
push
jbe
cmps
xlat
cs
mov
push
or
popa
rcl
test
or
pop
xchg
in
push
cmp
ins
xor
test
push
xchg
inc
js
jne
imul
cld
ins
cmc
xchg
test
shr
sbb
sahf
(bad)
xor
mov
jae
dec
xchg
push
nop
cs
mov
xor
xchg
ret
dec
jge
cmc
out
test
into
push
pop
mov
mov
dec
jne
loop
dec
lahf
(bad)
cli
lods
(bad)
xor
adc
dec
adc
mov
and
dec
mov
or
js
leave
mov
sub
neg
pop
enter
mov
mov
or
test
add
mov
mov
(bad)
neg
jle
enter
stos
loopne
imul
fcomip
scas
scas
inc
or
clc
outs
retf
sbb
cdq
cli
in
push
add
leave
pop
fs
sti
movs
jne
mov
out
retf
push
(bad)
imul
data16
js
dec
xchg
xchg
loope
lea
dec
cmp
ret
imul
frstor
arpl
lods
dec
jnp
fnstsw
mov
mov
lahf
cmps
and
pop
cmc
sbb
push
push
fsub
xchg
adc
mov
nop
aad
sub
xor
mov
mov
popf
cmp
xchg
scas
jmp
cmp
scas
lds
push
add
fisttp
dec
int3
pop
xchg
ret
mov
imul
mov
jmp
loope
imul
fninit
fisub
pop
or
(bad)
leave
cmp
xchg
sub
jne
gs
pop
popa
adc
sbb
(bad)
out
push
mov
pop
xor
dec
jl
out
in
ret
push
call
jno
and
add
cmp
sub
push
xchg
movs
(bad)
pop
cmc
pop
push
retf
push
loop
mov
mov
xlat
or
push
daa
mov
pop
sub
mov
loope
xchg
sbb
jbe
das
xlat
call
xor
mov
mov
and
push
xchg
mov
js
stos
dec
fisubr
frstor
fcomp
outs
pop
fcom
loopne
or
lock
dec
jg
pop
and
rcr
xor
shl
sbb
and
jge
shl
push
daa
sub
mov
jbe
xchg
mov
cmps
cld
dec
in
dec
in
push
inc
lds
adc
cli
mov
cmp
mov
mov
loop
mov
xchg
outs
js
pop
sbb
add
pop
xor
ret
dec
mov
inc
inc
or
dec
adc
adc
pop
or
mov
loop
xor
inc
xor
jns
leave
xlat
pop
scas
xor
cmps
call
sbb
cmp
shr
addr16
pusha
or
(bad)
jno
or
retf
dec
hlt
fisttp
cdq
arpl
mov
add
adc
(bad)
dec
jno
jae
cli
ret
cmps
pop
jbe
mov
nop
fcom
or
fimul
mov
xor
dec
mov
push
ss
mov
ins
leave
mov
cmp
(bad)
ror
adc
outs
pop
aas
aas
test
inc
sub
retf
push
(bad)
adc
cmp
les
inc
retf
add
movs
add
sar
mov
xchg
push
xchg
sbb
sar
fdivp
xchg
lahf
pop
mov
xor
into
shl
in
dec
jnp
es
out
mov
mov
jge
pop
adc
mov
mov
ret
mov
shufps
or
clc
mov
ret
sbb
push
mov
sbb
mov
inc
dec
mov
push
out
inc
push
nop
sub
daa
mov
shl
mov
dec
pmullw
(bad)
fsub
mov
test
neg
shl
cmp
mov
pop
mov
xchg
ss
cmp
popf
cmps
mov
(bad)
std
cmc
xchg
lds
add
(bad)
loopne
pop
mov
movhps
lock
jmp
xchg
bound
aam
jecxz
inc
out
dec
(bad)
mov
push
xchg
(bad)
xor
jl
cmps
add
push
ds
ins
sbb
(bad)
loope
sbb
in
pop
scas
rcr
test
jbe
mov
lahf
shl
dec
and
pop
in
pop
sahf
pop
push
pop
push
adc
out
mov
mov
pop
leave
and
mov
sub
movs
pop
rol
js
xor
push
cmp
(bad)
mov
mov
or
jns
mov
out
adc
pop
test
or
adc
(bad)
into
mov
mov
sub
or
test
rol
mul
and
scas
lea
cli
ret
pop
fisttp
mov
ss
scas
adc
and
lea
fild
(bad)
jmp
test
mov
aad
sub
ds
sar
iret
sti
scas
aad
sbb
je
mov
mov
data16
test
pop
mov
pop
jmp
inc
add
and
loop
loop
cmp
sahf
inc
aam
jmp
aaa
not
ins
pop
sbb
sbb
or
in
adc
mov
or
nop
adc
outs
ss
pop
scas
jbe
aam
push
loop
push
jnp
aad
dec
xchg
add
add
mov
mov
dec
fisttp
fcom
stc
push
sub
mov
aas
and
(bad)
add
les
mov
fld
rol
dec
sbb
pushf
mov
dec
push
(bad)
icebp
les
mov
in
call
push
lods
gs
adc
lods
iret
adc
movs
aam
push
mov
pop
adc
(bad)
in
ficomp
das
jo
mov
imul
pusha
sbb
rcl
add
cmp
and
sub
jb
fldenv
test
stos
hlt
push
jbe
scas
inc
repz
es
std
push
call
out
mov
nop
jne
inc
ret
mov
cmp
repnz
fstp
push
xchg
inc
dec
adc
fstp
add
loope
aam
in
inc
jae
not
stos
mov
out
imul
ins
xor
fistp
sub
mov
push
in
xor
in
sahf
xchg
shrd
or
cmc
push
xchg
clc
jge
pop
es
clc
pushf
dec
fbld
dec
sub
loopne
inc
dec
gs
dec
(bad)
sbb
jle
mov
pop
sub
mov
lods
adc
test
jmp
pushf
add
out
jg
stc
out
jg
stc
jg
add
pop
sbb
push
cld
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
daa
data16
je
dec
mul
cwde
out
scas
mov
dec
neg
cwde
cwde
pushfw
jbe
xchg
pop
cmp
jle
ja
add
scas
es
loopne
or
adc
mov
or
cs
nop
push
inc
or
xchg
pop
(bad)
sar
ds
fs
pop
fs
add
cld
scas
add
sbb
mov
into
sysenter
fucomp
stc
dec
adc
lea
cmc
mov
mov
dec
stos
pop
fisub
push
es
dec
js
xlat
mov
jbe
mov
jmp
xor
cmps
in
mov
adc
jae
aad
pusha
cmps
mov
mov
test
not
inc
xor
test
xor
test
(bad)
ret
xor
sbb
dec
xor
xor
jbe
mov
add
mov
mov
and
xor
mov
or
lahf
and
mov
pop
inc
in
xor
ret
fs
cmp
xchg
add
call
jmp
push
mov
cmp
clc
add
xchg
std
scas
(bad)
xchg
je
loope
xchg
push
aaa
push
xchg
mov
pop
adc
scas
pop
pop
pop
retf
xchg
xchg
xor
stos
add
sar
fcom
rcl
push
cmps
cs
adc
ins
fs
nop
cmp
shl
cmp
ret
jbe
in
outs
sbb
cmc
and
into
test
jmp
dec
mov
mov
cmps
imul
ret
add
adc
inc
inc
add
scas
inc
add
mov
push
mov
xacquire
xchg
mov
mov
cld
jmp
mov
xchg
fstp
mov
xor
inc
mov
or
mov
jne
popf
push
fwait
out
fmul
add
mov
ror
sbb
sbb
jmp
jl
out
or
sbb
ins
into
retf
int
mov
(bad)
popf
les
cmps
cmc
stos
mov
in
retf
(bad)
jae
outs
(bad)
fist
sub
mov
xchg
jno
push
addr16
in
retf
mov
scas
cmp
iret
or
mov
dec
iret
retf
push
(bad)
cmp
cmp
adc
pop
jp
test
iret
dec
dec
mov
scas
jmp
cmc
xor
and
pop
mov
mov
mov
iret
mov
mov
xchg
fs
ins
push
inc
scas
js
inc
and
fdivr
cmp
dec
popf
jb
loope
and
xchg
ror
push
fs
xchg
dec
ja
add
adc
movs
aaa
cli
cmp
mov
cmp
jmp
xchg
aad
push
xor
inc
jnp
push
mov
mov
pusha
into
idiv
or
ds
pop
mov
mov
sub
int
mov
aaa
(bad)
enter
and
mov
ss
push
mov
scas
daa
mov
mov
cmps
fisttp
xor
test
out
gs
fwait
pop
out
ja
lahf
add
jl
js
sbb
xchg
bound
lahf
xor
or
jg
xlat
or
adc
jno
call
cmps
jg
pop
cmp
out
cmp
(bad)
mov
sub
ret
adc
lock
inc
ret
mov
fcomp
push
cmps
adc
push
addr16
aaa
jb
imul
out
and
mov
icebp
mov
sub
ret
pop
push
mov
sub
mov
retf
jne
pop
fiadd
cmp
in
and
call
out
iret
pop
pop
lods
(bad)
je
xchg
sbb
stos
rol
ja
ret
push
mov
and
or
mov
inc
in
xchg
cmps
pop
es
mov
retf
dec
repnz
pop
jle
rol
and
inc
jno
push
jp
xchg
lock
inc
pop
jle
and
adc
stos
adc
lds
pop
jb
(bad)
test
daa
jae
in
enter
jmp
mov
mov
push
in
pop
clc
push
jb
cmps
mov
test
and
icebp
xchg
iret
jae
retf
imul
xchg
loop
icebp
sbb
and
xchg
mov
fstp
rcl
mov
daa
test
inc
lahf
adc
test
fcmove
ror
fistp
mov
push
jbe
movs
imul
addr16
push
xchg
mov
in
push
clc
jmp
jle
mov
(bad)
xchg
sub
push
adc
xchg
inc
cmps
mov
(bad)
adc
xor
cmc
inc
call
inc
sbb
out
aad
or
xchg
aas
scas
push
sbb
adc
xlat
fucomip
add
dec
jns
fcom
and
sub
xor
std
mov
bound
test
sbb
loope
mov
test
aam
xchg
inc
add
mov
in
or
adc
mov
or
in
cmp
call
test
sbb
and
xor
push
test
sbb
jo
dec
stc
mov
(bad)
fisub
adc
pmulhuw
fidiv
cmp
pop
(bad)
cmp
jle
dec
adc
cmp
adc
jmp
jns
mov
cli
mov
(bad)
test
iret
nop
jnp
mov
inc
or
fbstp
cmp
out
mov
sub
cmc
jae
cs
loopne
inc
fsubr
jno
in
jo
jns
sbb
mov
jl
(bad)
scas
and
push
mov
jg
hlt
popf
shr
cmp
xor
jbe
xchg
cli
daa
mov
pop
cmp
shr
add
pushf
test
es
pop
cmps
repnz
inc
pop
mov
arpl
mov
inc
push
inc
dec
js
stos
xchg
mov
mov
(bad)
lods
sahf
mov
(bad)
fbstp
jne
push
pop
jge
sub
ficomp
mov
aaa
das
jmp
lock
test
pop
xchg
sbb
jmp
(bad)
push
pop
dec
sbb
ds
dec
add
push
call
dec
sub
xor
dec
and
ds
pop
gs
imul
xor
push
mov
adc
fsub
cmp
xchg
add
and
fsub
mov
sbb
inc
xchg
adc
pop
movs
ins
dec
shr
cdq
cmp
addps
not
shr
test
mov
sbb
lock
sahf
sbb
push
arpl
dec
or
bound
es
cmps
inc
dec
leave
sub
mov
and
mov
cs
xor
scas
mov
sbb
cmp
je
adc
in
inc
push
cdq
repnz
sub
add
mov
inc
sbb
out
(bad)
jmp
aam
ror
adc
cwde
loopne
mov
ds
pop
mov
cs
outs
sub
aam
imul
pop
repnz
inc
cmp
jmp
fndisi(8087
call
ret
(bad)
retf
cli
sub
cwde
(bad)
icebp
out
call
out
dec
inc
mov
cmp
scas
and
into
or
sbb
test
pop
popf
int3
jge
adc
xchg
push
dec
push
outs
jae
push
out
cli
inc
repz
push
dec
add
cld
idiv
out
xor
ror
mov
pcmpeqb
call
repnz
or
push
mov
xor
idiv
ins
jmp
test
sbb
(bad)
shl
stc
shr
mov
lods
sub
and
dec
test
push
out
xchg
dec
mov
pop
mov
push
add
xor
jo
inc
loope
imul
pop
mov
mov
stos
xlat
dec
xchg
jnp
xchg
in
inc
aam
sbb
test
shl
movs
push
mov
jne
mov
test
mov
fwait
shl
loopne
pop
daa
sbb
in
das
jno
mov
cmp
cmps
sub
and
ja
pop
aad
fmul
fs
stc
in
out
arpl
jae
movs
jg
cmps
repnz
adc
inc
push
ja
or
mov
das
je
inc
mov
(bad)
in
mov
mov
icebp
xchg
cli
ret
sub
imul
aam
cmp
fwait
in
pop
jno
jb
xlat
or
pop
sub
das
retf
daa
retf
cmp
enter
mov
cmps
stc
push
mov
or
add
jge
test
adc
dec
push
pop
sti
out
sbb
out
mov
cdq
adc
aad
(bad)
pusha
jl
sub
shl
jg
rcl
in
ss
push
and
rol
dec
cmc
stc
loopne
fisubr
dec
into
push
jbe
mov
sub
cli
sub
adc
clc
(bad)
call
xchg
cdq
stos
mov
aaa
(bad)
sti
xor
xchg
sbb
sbb
outs
pop
rol
test
add
ret
pushf
dec
jo
inc
repnz
mov
push
leave
(bad)
xor
std
cmp
xor
aaa
fnstenv
imul
loope
jl
jmp
mov
popf
cmc
stc
and
add
ret
les
sbb
pop
enter
lds
loopne
mov
inc
dec
sbb
retf
mov
sahf
aam
adc
leave
sar
in
data16
mov
dec
push
inc
mov
das
rcr
aaa
xor
dec
fild
sti
(bad)
iret
add
or
std
ins
xor
push
pop
jbe
jecxz
faddp
pop
xchg
sbb
scas
cwde
sbb
(bad)
sbb
pop
jp
lods
fdivr
pop
lock
ss
in
or
jae
ins
jne
cmps
arpl
push
(bad)
imul
iret
addr16
xchg
movs
push
mov
cmp
xchg
jo
xor
dec
addr16
(bad)
loop
es
xlat
push
mov
gs
outs
cdq
jmp
stc
add
dec
cmp
adc
dec
xchg
ds
mov
and
cld
daa
jnp
xchg
jo
jb
push
pop
mov
jp
lods
xchg
or
repnz
sbb
arpl
repz
test
imul
and
(bad)
(bad)
jp
xor
jle
push
(bad)
mov
cdq
push
hlt
(bad)
mov
mov
mov
xchg
fisttp
les
cmp
stos
push
repnz
dec
mov
(bad)
pop
lock
jl
sbb
dec
cmp
mov
adc
mov
pop
lock
addr16
fdivr
push
add
jl
mov
cmps
out
outs
test
aaa
xlat
dec
fs
pop
mov
push
mov
cmp
jns
xor
xor
push
ficomp
pop
and
mov
adc
sub
xor
movs
or
rcr
push
lock
and
pop
sbb
out
in
scas
push
add
jae
(bad)
outs
sahf
mov
dec
fwait
xor
call
ss
(bad)
data16
xchg
mov
mov
xchg
adc
cmp
adc
add
into
lds
(bad)
jne
sub
ss
jl
loopne
jnp
fmul
out
out
mov
push
add
and
and
sti
jb
xor
call
xorps
inc
call
mov
test
test
xchg
test
dec
ins
inc
sbb
imul
icebp
adc
ret
mov
mov
test
fwait
lds
fstp
sbb
sahf
aaa
lock
and
push
in
stos
push
aad
and
push
not
mov
cmp
mov
(bad)
lock
lods
(bad)
int3
in
dec
movs
jl
pop
push
pop
inc
jmp
jns
test
leave
ret
and
out
xchg
test
pusha
mov
mov
jae
mov
inc
aas
rol
std
popf
shl
inc
loopne
imul
popa
(bad)
xchg
pushf
cmc
repz
push
mov
retf
test
push
lahf
sbb
into
inc
loop
loope
add
pop
iret
pop
cdq
lock
out
outs
call
pop
or
movs
js
cli
retf
or
aad
sub
adc
mov
call
and
mov
sub
and
lods
mov
fcmovne
add
test
cmp
xchg
ret
(bad)
aam
mov
lods
les
adc
sbb
ret
sar
js
jo
fild
cmp
inc
data16
inc
call
or
mov
nop
leave
xchg
scas
les
(bad)
jb
push
mov
adc
adc
mov
sbb
xchg
add
or
mov
sbb
imul
fnsave
hlt
icebp
push
jge
leave
dec
rcr
jp
(bad)
jne
les
add
arpl
dec
pop
push
fnstenv
ss
loop
sub
dec
mov
sbb
xchg
fistp
and
xchg
adc
ss
xchg
push
cs
ss
mov
mov
lea
push
mov
loope
pop
dec
mov
pop
in
cwde
pop
loope
sub
cmp
mov
mov
call
cmp
sar
xor
add
rcr
ret
loope
push
jns
pop
adc
lahf
fdiv
in
cli
aas
stos
or
mov
push
sbb
scas
test
cmps
(bad)
in
xor
stos
or
pop
jmp
sahf
inc
and
and
repnz
es
jle
xchg
movs
push
xlat
rcl
mov
addr16
in
adc
mov
mov
and
scas
imul
mov
adc
mov
xchg
fwait
in
cli
(bad)
iret
inc
cmp
or
mov
xchg
xor
or
sar
push
pushf
mov
sub
push
test
sar
add
jns
sub
and
pop
jmp
pop
stc
into
sbb
inc
test
scas
fistp
xor
ins
pop
popf
call
and
test
pop
outs
retf
pop
outs
shr
xchg
nop
test
repz
jg
inc
fistp
sbb
loope
movs
(bad)
in
enter
repnz
inc
or
push
or
mov
push
scas
cwde
sahf
mov
sbb
pop
(bad)
out
enter
bound
inc
cmc
leave
xlat
dec
sti
sbb
jns
add
dec
mov
jns
jecxz
inc
xor
aaa
cmp
fst
stos
pop
xchg
push
dec
xchg
retf
mov
adc
test
lock
jg
clc
push
adc
inc
dec
jle
enter
mov
inc
and
xor
or
jge
xchg
xchg
mov
jle
std
mov
adc
sub
mov
or
fdiv
dec
in
xchg
jne
sbb
cdq
sub
addr16
xor
jns
sbb
push
dec
mov
nop
dec
rcl
arpl
mul
out
jmp
jmp
push
ficom
movs
out
push
ret
ins
xchg
out
test
retf
pusha
inc
retf
out
inc
sahf
or
je
or
xchg
dec
(bad)
loope
jmp
daa
xchg
sbb
push
mov
mov
inc
add
sbb
repnz
leave
or
pop
mov
mov
(bad)
aad
mov
cs
cmp
repz
pusha
idiv
dec
jecxz
std
test
sbb
or
js
jne
and
mov
jo
imul
call
fmul
xchg
jnp
push
inc
xchg
das
pop
ucomiss
xchg
movs
push
imul
mov
inc
xchg
jnp
out
in
imul
xchg
js
ins
addr16
sbb
add
cli
retf
daa
pop
dec
xor
sar
pop
in
aam
or
add
pop
ins
pop
loopne
pop
adc
cmp
inc
or
push
ins
sar
mov
add
jne
dec
sub
lods
sti
shr
clc
mov
test
xchg
fadd
sub
out
adc
xchg
push
pop
mov
or
cld
repz
aas
(bad)
cld
repz
push
pop
add
inc
xchg
hlt
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
iret
add
add
das
xchg
addr16
sbb
int
xor
fwait
cwde
out
cwde
cmp
jbe
les
or
cmp
xor
dec
sti
js
jns
pop
add
sahf
popa
fwait
push
sbb
push
test
mov
outs
popf
jnp
add
fdiv
scas
cmp
sbb
mov
jle
jb
push
mov
call
in
cmp
xor
in
or
xor
icebp
sub
fsubr
mov
adc
push
pop
iret
cmp
icebp
xchg
ds
cwde
and
pop
and
rep
mov
imul
mov
out
xchg
call
sbb
pop
cli
xchg
rcl
jb
cmp
shl
fisttp
out
sbb
cmp
not
xor
out
imul
ret
test
dec
dec
xor
and
in
lea
mov
jne
outs
and
push
jge
jae
icebp
lahf
inc
pop
and
ins
xchg
mov
in
pop
jno
je
out
and
mov
pop
fwait
mov
fcmovbe
mov
int
ins
sub
xchg
mov
cld
in
pop
and
(bad)
xlat
iret
or
mov
std
into
cmps
mov
mov
sahf
clc
and
rcl
cwde
jmp
pusha
leave
call
mov
into
test
mov
mov
sti
push
pushf
in
imul
out
adc
mov
xchg
inc
movs
push
outs
sbb
cs
in
(bad)
loopne
cmp
iret
repnz
frndint
outs
mov
and
(bad)
sbb
adc
lods
jbe
and
in
adc
fstp
lds
jb
cdq
push
mov
lahf
or
mov
inc
mov
inc
sbb
and
add
xchg
jecxz
iret
jmp
pop
out
mov
mov
dec
dec
lea
pushf
rcl
add
cmp
adc
xor
(bad)
push
loop
pushf
cmp
xor
jnp
ds
popf
xchg
div
lods
dec
out
out
fidiv
cmps
lock
push
sahf
sub
push
(bad)
loope
pop
inc
mov
dec
mov
(bad)
cli
pop
call
enter
(bad)
dec
jo
push
lahf
rcl
mov
test
mov
outs
movs
sbb
int
lods
add
outs
sahf
dec
mov
in
xchg
push
sbb
rcl
ret
push
stos
xchg
retf
bound
ficom
out
or
sar
cmc
jp
test
xchg
jg
outs
add
mov
adc
mov
add
push
lods
add
cmp
inc
sub
in
xchg
xchg
sub
pmaddwd
cmc
stos
iret
test
js
adc
es
int3
mov
lea
inc
mov
push
and
push
int3
xor
pop
push
das
pop
dec
mov
mov
fisttp
lods
add
xchg
adc
ins
cmp
xor
scas
cmp
add
dec
lods
mov
mov
xchg
aad
data16
lods
stc
fistp
add
inc
pusha
loop
sub
test
mov
inc
popf
movs
pop
push
or
pusha
mov
test
xchg
shl
xchg
mov
repnz
movs
lock
push
jne
mov
jnp
mov
(bad)
dec
dec
adc
fnsave
pop
xor
or
sar
push
push
sbb
movs
in
mov
mov
mov
xor
mov
push
adc
xchg
in
cmp
jp
clc
aad
stc
in
mov
jecxz
imul
or
jo
mov
cmp
mov
jmp
je
outs
dec
shr
sub
ret
stos
jle
std
pop
test
(bad)
nop
das
mov
aaa
dec
xlat
xchg
pop
imul
ja
or
fwait
pop
out
dec
shl
push
lock
inc
fisttp
cmp
test
dec
push
dec
mov
pop
push
fidiv
push
fisub
push
scas
add
mov
cld
xor
fisub
test
mov
xor
push
push
test
mov
bound
ins
ds
pop
xchg
scas
cdq
jmp
fild
or
ret
xlat
ja
jbe
dec
out
mov
and
std
test
xlat
add
test
xchg
mov
clc
jmp
(bad)
repz
push
xchg
movs
xor
outs
jae
sub
xchg
fst
mov
jle
icebp
mov
ffree
xlat
test
les
add
lea
mov
stc
dec
data16
dec
mov
ret
das
or
je
rol
out
fild
adc
jno
addr16
imul
cwde
pop
cmps
xchg
dec
jecxz
mov
and
lods
pop
call
clc
nop
push
imul
cmps
inc
das
stos
aam
or
xor
bound
fcomp
adc
mov
fndisi(8087
sbb
lods
push
cld
test
xchg
mov
xor
cmc
loopne
pop
jb
popf
fld
or
inc
cwde
pop
in
outs
cdq
adc
push
cs
mov
ret
test
loopne
sbb
clc
pop
pusha
sti
aam
push
out
or
(bad)
mov
mov
aaa
mov
mov
fxam
mov
jg
stos
call
js
mov
les
sub
jp
push
fnstsw
sbb
stos
jle
pop
leave
jnp
push
ds
cld
out
mov
mov
fstp
fbld
jge
arpl
enter
sub
cs
ds
xchg
add
aaa
ret
mov
mov
cmps
dec
adc
cmp
test
(bad)
sbb
xor
jno
popf
cmp
cmp
xchg
lods
adc
lods
and
dec
gs
iret
daa
hlt
push
ret
mov
dec
xor
enter
xor
push
jg
outs
mov
inc
push
int
rol
lock
sub
and
iret
or
popf
push
push
adc
and
cmp
push
xchg
shl
sub
sub
(bad)
mov
in
sbb
or
pop
shl
xchg
es
dec
inc
loop
mov
in
or
xchg
repz
adc
outs
(bad)
(bad)
test
outs
push
lods
retf
jo
mov
mov
pop
dec
or
xlat
and
daa
pop
pushf
outs
fs
mov
or
std
sbb
mov
mov
mov
sbb
(bad)
(bad)
jne
cmp
mov
jp
xchg
jmp
or
(bad)
push
jg
xor
in
pop
cmp
jns
push
(bad)
test
mov
xor
movs
shl
test
and
test
stc
pop
rol
es
rcl
inc
xor
scas
jg
mov
cmps
xor
sti
or
daa
adc
xor
fcomp
call
pop
mov
stos
popa
jp
adc
bound
sub
jmp
in
test
cmp
daa
add
mov
out
xor
call
dec
xchg
jge
push
xchg
dec
scas
(bad)
dec
fidiv
or
push
xlat
or
outs
fidivr
sbb
jns
inc
xchg
fldenv
cmp
stos
aam
(bad)
je
jnp
adc
xchg
aad
inc
scas
xchg
sbb
mov
(bad)
push
fiadd
or
adc
je
out
ins
xchg
mov
push
lea
fisttp
adc
cmp
out
pop
push
sbb
dec
pop
call
addr16
ss
mov
pop
lock
out
ss
(bad)
jecxz
dec
out
nop
push
retf
mov
push
imul
mov
inc
leave
adc
in
iret
sub
cld
mov
mov
dec
addr16
lods
fdivr
xchg
jb
call
sbb
fiadd
shr
sbb
cmps
sub
hlt
mov
clc
nop
popf
fwait
sbb
fcom
shl
mov
xor
test
cdq
cmc
and
call
xor
pop
push
ja
push
test
mov
js
cmps
jnp
mov
nop
sti
jg
and
xchg
mov
inc
mov
pop
add
mov
mov
cld
dec
pushf
xor
cwde
xchg
or
mov
inc
sahf
and
xchg
sub
lods
aam
cmp
jmp
fiadd
mov
xchg
ja
bnd
punpckhwd
icebp
sbb
dec
and
jo
loopne
xchg
jge
xor
js
xchg
mov
mov
jge
cmp
(bad)
nop
jbe
ins
mov
jae
leave
push
fsubr
inc
outs
cdq
xor
cli
adc
clc
mov
enter
int
das
mov
jmp
xchg
ja
stos
shr
mov
fcom
not
je
and
movs
xchg
sbb
retf
pop
ja
sub
push
sbb
cmp
jl
xchg
fdivr
pop
leave
(bad)
xlat
frstor
into
icebp
bound
mov
mov
out
mov
test
int
dec
xchg
adc
push
sahf
aam
pop
sti
sti
mov
sub
gs
add
dec
jge
sti
les
pop
cmc
hlt
mov
idiv
sti
(bad)
add
pop
test
xor
sub
sub
ds
test
lahf
and
xchg
stc
sbb
add
add
call
(bad)
mov
sub
xchg
repnz
loop
dec
pop
jne
push
clc
pop
dec
inc
mov
add
into
jmp
rcl
mov
bound
cwde
and
add
sbb
xor
retf
scas
scas
dec
dec
ins
mov
sub
lods
in
je
ins
(bad)
adc
push
dec
and
jo
into
cmp
je
ficomp
cmp
stc
dec
jb
dec
out
out
jmp
stos
jp
jl
sti
sbb
adc
mov
test
lahf
inc
fcomp
or
jo
ret
pop
pop
mov
fisub
cli
in
cmp
out
neg
jg
and
stc
sub
fisub
sbb
mov
mov
ds
ror
pop
imul
jl
movs
shl
pop
xor
movs
nop
rcr
pop
movs
fsub
add
bound
inc
xor
mov
outs
jmp
cwde
ficomp
mov
test
cmp
test
pusha
mov
int
mov
cmp
adc
ret
mul
mov
pop
mov
(bad)
das
fnstenv
sar
add
dec
mov
lock
pop
xor
cmp
push
leave
xor
movs
std
and
cmc
push
sub
sahf
stc
sbb
xchg
cs
sbb
hlt
(bad)
mov
add
xlat
push
jl
mov
imul
out
out
mov
xchg
and
imul
jle
pop
pop
xor
repnz
in
mov
pop
cs
popf
pop
(bad)
mov
inc
jle
rcr
or
cwde
add
mov
faddp
sub
lea
les
dec
add
in
inc
mov
lods
xchg
xor
xor
test
add
test
cmp
xlat
sbb
cwde
mov
jno
push
xchg
js
fidivr
jb
shl
dec
add
arpl
(bad)
pop
test
in
cdq
shl
bound
mov
mov
pop
lock
into
adc
arpl
adc
es
inc
rcr
mov
sub
sbb
dec
adc
(bad)
push
cmps
lods
mov
pop
pop
enter
hlt
int3
ins
push
sbb
mov
push
div
fcom
stos
cmp
je
mov
push
dec
sti
jp
dec
adc
push
rcr
dec
push
jge
jecxz
add
ret
pop
mov
(bad)
push
cli
nop
push
mov
movs
out
or
cmp
js
ins
in
xchg
repz
ds
jno
aas
sbb
cs
mov
push
and
sbb
mov
daa
sbb
rcl
sar
fcmovne
mov
pop
fistp
sub
shl
imul
aaa
jb
repnz
pop
popa
and
cmps
into
scas
sti
sub
(bad)
(bad)
mov
imul
xchg
in
mov
adc
out
mov
nop
and
mov
(bad)
pop
inc
xor
int
xor
addr16
jl
fstp
cmp
fld
sub
mov
mov
bound
dec
stos
pop
(bad)
xchg
rcr
iret
shl
push
shl
fcomp
dec
inc
lds
jecxz
inc
iret
jl
loopne
jmp
inc
jp
test
call
jl
test
sub
dec
inc
not
sbb
jmp
fstp
xchg
(bad)
sbb
adc
lods
jbe
out
inc
push
pop
push
pop
fs
rcl
in
mov
push
xlat
xchg
(bad)
inc
out
pop
repnz
xlat
pop
data16
aam
leave
(bad)
addr16
aam
xbegin
jno
pop
mov
imul
xor
pop
mov
sbb
inc
mov
xchg
add
cwde
add
add
sub
arpl
dec
cld
push
popa
xchg
inc
pop
hlt
retf
mov
mov
inc
xchg
add
pushf
push
push
dec
push
jp
(bad)
popf
imul
mov
jmp
jmp
xchg
add
jmp
add
sbb
push
outs
inc
ins
stc
out
aaa
inc
mov
ja
dec
jnp
repnz
ins
out
aaa
adc
call
pop
pop
mov
enter
aad
dec
mov
lds
in
movs
adc
rol
push
retf
repnz
(bad)
xchg
cdq
call
out
inc
out
push
push
fnstenv
(bad)
shl
ja
test
mov
and
xchg
or
mov
pop
dec
xor
sub
idiv
cmps
cli
adc
dec
inc
or
fidivr
xchg
xchg
add
jbe
repnz
(bad)
cmc
sub
sar
data16
push
xchg
mov
xor
pop
lea
xchg
shl
mov
lds
mov
inc
xor
scas
jmp
sub
add
dec
inc
into
add
jbe
cwde
and
dec
fs
dec
loopne
dec
mov
sub
mov
jno
xchg
adc
push
aam
xchg
xchg
xor
aas
(bad)
movs
sar
cmps
adc
add
ror
inc
addr16
push
jbe
popa
mov
adc
icebp
or
out
mov
mov
pushf
arpl
adc
add
iret
in
pop
adc
outs
and
adc
mov
xor
dec
mov
fdiv
in
mov
shr
mov
ins
mov
add
xlat
gs
(bad)
les
popa
xor
and
int3
loope
mov
xor
sub
les
aam
int
int3
mov
pop
dec
cli
ins
ror
test
cmp
cmp
fwait
sub
dec
cmp
sar
adc
jb
fwait
push
inc
imul
es
ror
mov
retf
mov
out
test
repz
mov
cdq
fwait
daa
lock
jnp
mov
xor
sub
sub
in
icebp
cmp
test
ret
mov
(bad)
popf
mov
sub
pop
jb
loop
pop
xchg
ins
dec
mov
xor
add
je
push
outs
mov
(bad)
out
fmul
jo
xchg
fst
arpl
sbb
inc
adc
inc
push
sub
popa
mov
fst
cmp
cli
hlt
fwait
ss
mov
aad
inc
dec
jecxz
sub
(bad)
std
mov
push
cwde
out
adc
mov
es
invd
shr
cmc
sub
or
sbb
es
movs
or
js
seta
pop
jecxz
(bad)
adc
nop
cmp
mov
call
pop
cli
ja
adc
jge
add
jbe
mov
pop
push
sti
mov
push
xlat
rcl
test
in
and
nop
xor
out
ja
xchg
dec
aaa
pop
cmove
ss
pop
dec
xchg
jecxz
adc
mov
sbb
int
lods
icebp
ret
sub
ficom
jae
int3
mov
shl
scas
pop
stc
outs
stos
fmul
mov
push
lea
test
call
call
cmp
(bad)
mov
push
sub
push
outs
xchg
mov
cmps
or
fwait
stos
sub
or
add
or
jle
cmc
lods
out
inc
jle
sub
push
dec
ja
xchg
(bad)
cmp
(bad)
stc
out
jg
stc
out
xor
imul
cdq
or
je
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xor
cmps
mov
shr
mov
jae
mov
outs
jmp
arpl
jl
in
repz
xchg
xor
add
imul
xor
sti
xor
idiv
push
xchg
pop
int3
xchg
jns
dec
xchg
mov
dec
xlat
sub
sub
pop
stos
ret
dec
fdiv
(bad)
sub
in
enter
pop
mov
push
ins
jns
mov
call
cwde
push
clc
and
pop
and
lds
mov
ins
fistp
mov
inc
(bad)
fisttp
mov
cmp
mov
dec
stos
in
push
inc
xchg
jecxz
add
adc
shl
(bad)
push
sbb
(bad)
sahf
xor
fild
or
push
hlt
out
inc
(bad)
ja
jnp
jecxz
adc
mov
adc
test
sub
pop
and
lock
xor
sbb
rcr
(bad)
mov
cli
and
int
push
leave
in
xchg
ret
arpl
loop
bound
jns
jns
xchg
into
xlat
push
or
sahf
adc
mov
leave
jle
jge
and
into
or
ds
xor
or
xlat
(bad)
cli
xchg
dec
push
cmps
xchg
add
jle
jno
loop
jl
gs
fs
jle
fistp
mov
ja
and
jns
fdiv
cwde
mov
sub
xor
pop
call
repz
(bad)
xchg
jns
lods
mov
out
mov
(bad)
jmp
lods
call
xchg
or
rol
fnstsw
mov
icebp
fs
jmp
xlat
or
dec
jbe
nop
ror
sbb
stos
mov
dec
leave
pop
dec
add
(bad)
fbld
cmp
push
and
xor
stos
nop
inc
js
es
pop
outs
pop
push
out
test
fld
pop
leave
enter
xor
call
add
jne
jb
and
mov
xor
aaa
cdq
(bad)
mov
jae
ret
ret
mov
and
popa
repz
xor
outs
xchg
jnp
jl
xor
push
repnz
xor
mov
out
add
in
xchg
xchg
push
(bad)
jne
(bad)
sbb
fstp
jo
adc
jmp
bound
and
xchg
retf
ficom
mov
mov
sub
pop
stc
adc
movs
popf
jns
jecxz
xor
out
mov
pop
rcr
rcr
ja
gs
mov
movs
stc
fnsave
push
dec
dec
not
adc
dec
mov
sbb
cmps
xor
das
aas
push
pop
int3
clc
adc
push
loope
jne
stos
test
movq
add
addr16
xor
retf
pop
cmp
mov
sbb
sbb
cmp
ret
mov
sub
fidiv
xor
or
cmp
lea
sub
inc
imul
sahf
push
pusha
inc
repnz
cmp
push
es
sbb
jae
jne
outs
lock
es
cmp
pop
inc
or
push
cmp
inc
mov
dec
jg
ss
add
inc
lea
inc
mov
and
stos
xchg
rol
xchg
mov
jbe
imul
out
cmp
inc
mov
jmp
sbb
fisttp
js
mul
add
shl
enter
fild
inc
sub
jno
cmp
les
(bad)
or
lahf
push
fsubr
call
mov
sar
movs
jecxz
jmp
mov
icebp
adc
add
sahf
push
push
push
adc
clc
jmp
or
outs
mov
add
cld
jno
(bad)
mov
inc
leave
es
push
(bad)
xchg
das
fidivr
sbb
mov
add
repz
xchg
mov
imul
fisttp
dec
lea
(bad)
outs
mov
push
sbb
pop
push
xlat
ins
repz
mov
jns
dec
hlt
mov
and
call
stos
retf
rcr
mov
sbb
cmp
cmps
cmc
mov
inc
mov
push
push
dec
xchg
js
xor
repz
sbb
pop
pop
pop
out
outs
pop
adc
out
fdivr
dec
sbb
(bad)
xchg
adc
inc
xlat
mov
es
adc
add
xor
sbb
xchg
hlt
adc
leave
inc
call
retf
int3
test
jo
push
pop
pop
mov
fist
jmp
sbb
sbb
sub
in
mov
or
xchg
jmp
and
pop
out
stc
scas
xchg
jbe
cli
and
retf
cmc
pop
dec
inc
jb
out
jge
das
scas
inc
int
(bad)
imul
add
mov
cs
sti
push
ss
cli
jns
out
pop
add
ficom
lock
mov
gs
pop
fistp
mov
idiv
mov
add
inc
pop
jg
jmp
lea
xchg
out
xchg
call
xor
dec
imul
jbe
test
sub
mov
pop
mov
mov
lea
jo
add
adc
dec
imul
and
shl
mov
jno
push
in
xor
loop
fs
cmp
repz
mov
imul
pop
jl
lahf
xor
repz
js
hlt
mov
and
aam
icebp
div
into
cmp
ja
mov
mov
or
movs
push
in
movs
pop
in
and
and
bound
retf
call
mov
(bad)
in
xor
cwde
push
aam
xchg
sbb
mov
in
fmulp
out
xor
es
enter
jne
out
inc
ja
jnp
outs
fwait
pop
scas
pop
sub
sbb
jo
call
inc
lock
xor
les
and
out
mov
cmp
(bad)
pop
in
dec
and
(bad)
stos
inc
lods
sub
and
add
jge
cmps
cs
nop
mov
leave
jp
cld
das
fwait
idiv
pop
scas
or
cwde
test
cld
fcomp
ins
mov
inc
out
pusha
add
daa
cmp
aad
jp
out
daa
mov
cmp
ds
shr
dec
pop
inc
inc
dec
xchg
inc
pusha
jge
movs
ret
jmp
call
arpl
push
sbb
push
mov
jmp
aaa
sbb
test
mov
cmp
fwait
das
in
(bad)
aad
adc
xchg
inc
das
xor
mov
in
ja
cmp
call
cmps
mov
mov
loopne
inc
fist
fld1
xchg
adc
mov
and
scas
add
mov
jbe
dec
fpatan
cli
cmp
in
add
in
sub
add
movs
mov
mov
jb
nop
adc
out
rcl
inc
jg
out
int3
xchg
mov
or
lods
fcom
rol
jg
jnp
outs
(bad)
xor
jmp
out
pop
pop
xchg
inc
ds
xchg
aam
test
cmp
movs
mov
test
jle
mov
cmc
(bad)
adc
test
retf
sub
adc
test
cmp
cmp
cli
adc
shl
jns
cli
pop
sbb
or
xor
enter
sbb
fs
sti
les
xchg
stos
or
(bad)
fistp
xchg
fs
mov
push
mov
out
adc
pop
lods
xchg
sbb
fidivr
xor
lea
sub
repnz
outs
imul
adc
pop
jmp
mov
cmp
scas
mov
mov
mov
test
push
retf
inc
xchg
mov
in
pop
loop
add
mov
mov
inc
sbb
pop
movs
aaa
jnp
(bad)
ror
mov
enter
and
lods
dec
push
retf
adc
scas
aas
jns
pushf
sub
and
out
rcl
mov
sub
inc
popa
push
outs
push
adc
outs
call
mov
xchg
call
mov
daa
mov
outs
ret
lds
sbb
mov
cdq
cmp
add
jge
mov
xchg
jmp
ins
hlt
stos
xchg
fidiv
jecxz
xlat
pop
in
ja
mov
push
outs
cli
jo
sahf
xchg
push
hlt
mov
loop
xor
(bad)
je
xchg
mov
dec
dec
inc
mov
xchg
jb
xchg
cwd
jge
shr
lea
push
mov
fcmove
mov
movs
mov
push
cs
sub
in
popa
repz
rol
mov
cmp
adc
push
pushf
adc
mov
xor
mov
ss
dec
sub
add
dec
aaa
cmp
cwde
fidivr
push
cmp
cli
int3
out
jg
test
adc
in
into
mov
imul
mov
mov
call
popf
pop
pusha
jecxz
mul
stc
dec
std
xchg
jae
push
pop
jl
xchg
nop
dec
(bad)
push
mov
mov
mov
pop
mov
(bad)
sbb
sbb
adc
test
mov
jno
pop
sbb
sub
inc
inc
push
xor
js
test
repz
rcr
clc
adc
pop
push
scas
xchg
(bad)
(bad)
call
dec
repnz
push
jmp
jmp
pop
sti
retf
mov
jl
cmp
mov
xor
mov
inc
mov
cmp
stos
arpl
xchg
in
cmp
adc
fdiv
mov
outs
push
cmps
fst
icebp
xchg
push
dec
ror
mov
das
ret
iret
aas
jne
dec
mov
xchg
fwait
inc
stc
outs
pop
and
jo
jnp
push
cmps
jmp
sahf
mov
inc
xchg
sti
loope
mov
and
add
dec
jl
or
pop
mov
mov
int3
out
sub
jmp
js
js
jo
lods
xchg
add
jl
gs
dec
mov
and
int3
jg
sbb
inc
cmp
mov
ret
aaa
xchg
xchg
push
in
jg
cdq
sub
pop
daa
mov
xor
sbb
sbb
xchg
lock
cmp
or
lea
out
sbb
and
dec
adc
gs
test
jmp
jbe
test
push
cld
xor
or
or
xor
pushf
aam
sub
arpl
xor
pop
and
xchg
mov
add
sub
movs
push
xchg
fistp
and
and
rcr
xchg
test
xlat
push
mov
sahf
std
cs
std
mov
xchg
call
push
lea
xor
or
mov
mov
push
adc
xchg
test
out
and
mov
in
ins
dec
mov
adc
loope
mov
cmp
movs
adc
fist
xor
popa
fild
out
add
das
mov
jae
push
push
mov
cld
cmc
push
mov
push
ss
inc
jg
xor
and
and
das
or
cmps
jge
jns
xlat
cwde
inc
pop
out
scas
add
or
cmc
leave
mov
xor
dec
add
sub
div
loopne
jmp
mov
push
mov
add
lahf
add
mov
mov
jmp
je
jp
je
xchg
mov
mov
sub
pusha
and
stos
in
nop
adc
rcl
cdq
fadd
imul
ds
cdq
(bad)
lock
mov
cmc
hlt
or
aas
cmc
xchg
jl
enter
sbb
mov
dec
(bad)
mov
mov
sti
jo
jbe
mov
cmp
mov
dec
add
xchg
lock
add
mov
sub
ds
inc
inc
out
xor
adc
push
(bad)
sahf
bound
test
repnz
pop
fs
gs
(bad)
xlat
stos
stos
fxch
in
leave
or
cmp
ret
(bad)
adc
popf
les
mov
loop
loopne
mov
ja
pop
cmc
fnclex
sub
sub
dec
cmp
fst
shr
jne
repz
jo
pop
cmp
leave
fcom
pop
ja
repnz
push
push
pop
mov
sub
aad
lea
mov
and
pop
sub
dec
lahf
lea
in
pop
xor
mov
add
or
pusha
mov
xchg
or
add
mov
pop
lods
inc
ins
or
xchg
test
push
cmps
lods
ret
pop
aam
xchg
cmc
ret
ja
data16
jo
mov
ins
call
push
loop
aad
and
pop
sbb
mov
out
(bad)
scas
fadd
xchg
scas
fistp
mov
xor
xchg
in
cli
push
call
ins
add
clc
add
xchg
js
mov
aas
mov
out
repz
psadbw
xor
aas
add
sub
in
ja
aaa
xchg
popf
test
repnz
or
sbb
aas
ds
stos
test
call
test
imul
cmp
sbb
rcr
mov
movs
adc
adc
sbb
add
or
inc
adc
xor
push
inc
push
adc
jg
mul
push
jmp
and
xor
(bad)
xchg
mov
jnp
xchg
sar
sub
or
cdq
pusha
mov
push
fisub
push
(bad)
ins
(bad)
ret
mov
call
ja
xchg
minps
jg
or
call
sbb
mov
inc
iret
adc
icebp
int
mov
jns
rcr
jno
test
lds
imul
out
and
stc
xchg
sbb
adc
retf
cmp
push
jo
mov
cmc
loopne
and
arpl
out
xchg
or
and
mov
je
push
jns
push
arpl
xchg
loope
or
fisub
lea
imul
hlt
dec
(bad)
inc
(bad)
sub
shl
rol
js
xor
scas
pop
xchg
icebp
call
pusha
pop
dec
mov
push
lods
fucom
cmp
adc
mov
push
pop
push
lock
and
jmp
data16
test
or
xchg
je
test
dec
cmps
psllw
cmps
arpl
sbb
mov
ss
add
push
dec
dec
adc
push
lea
loopne
xor
in
ins
jmp
leave
mov
jle
jl
mov
mov
cdq
enter
xor
pop
mov
fld
ja
and
aam
in
mov
mov
mov
add
das
sbb
push
cmp
iret
mov
sub
adc
xchg
ret
out
ret
pop
daa
in
cld
test
jmp
ret
test
mov
dec
pop
loop
scas
cs
ins
fwait
push
(bad)
lea
pop
and
ins
mov
test
nop
jp
push
pop
sbb
(bad)
in
out
jo
icebp
cmp
push
and
xchg
neg
mov
movs
inc
mov
out
stc
add
loopne
dec
mov
fwait
lods
fwait
jmp
imul
cld
mov
mov
rcr
and
retf
mov
test
inc
jg
setg
mov
pop
ss
loope
neg
xor
in
and
mov
test
jg
mov
xlat
mov
jns
into
fucomip
pop
mov
clc
dec
cmp
jmp
(bad)
(bad)
xchg
cmps
(bad)
js
xchg
in
dec
call
es
jmp
stos
push
pop
repnz
bound
lods
icebp
jbe
xchg
sbb
(bad)
adc
sbb
sbb
and
sbb
test
stc
mov
mov
sub
jbe
cmp
add
xchg
xor
xchg
mov
xchg
mov
(bad)
out
cmp
xchg
add
repnz
xor
dec
loope
xchg
shl
jge
dec
jg
pop
cdq
aad
pop
add
cmp
repnz
or
mov
mov
push
ss
loope
xor
mov
arpl
inc
sar
sub
push
jle
(bad)
(bad)
adc
rcl
mov
repnz
inc
mov
xor
xchg
xchg
fimul
push
(bad)
jl
imul
xchg
xchg
clc
(bad)
into
or
pop
mov
(bad)
stc
out
jg
stc
out
jg
scas
add
inc
in
or
cmp
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
and
lsl
icebp
pop
fldl2e
mov
mov
push
sbb
sub
shl
das
fs
sbb
xchg
retf
(bad)
fnstcw
(bad)
pop
dec
sub
fs
and
js
mov
shl
(bad)
in
fidiv
lods
mov
and
inc
lahf
jns
mov
lock
inc
and
or
arpl
xchg
cmp
stc
icebp
xlat
out
int3
sub
inc
rcl
out
sbb
fmul
gs
(bad)
and
inc
imul
sbb
out
mov
mov
mov
jne
stc
add
call
push
imul
daa
mov
pop
into
dec
xchg
stos
ficomp
ja
sbb
inc
sub
push
test
scas
jg
sub
jns
ja
inc
dec
out
or
push
dec
xchg
rcl
ins
lock
pushf
push
xchg
push
xchg
add
loope
sub
aad
js
mov
and
test
mov
ret
pushf
cwde
mov
sbb
arpl
popa
ins
loopne
(bad)
loopne
jne
pop
xor
movs
adc
sbb
rcl
fstp
sahf
xchg
scas
mov
and
out
sub
les
int3
daa
cmp
cmp
cmps
sub
out
mov
push
cmp
fld
and
pop
dec
inc
loop
push
std
pop
mov
retf
or
adc
cmp
cmp
fs
jmp
dec
movs
adc
jge
icebp
imul
fild
dec
mov
aam
test
inc
jno
popa
vcvtpd2ps
leave
(bad)
jecxz
inc
pop
mov
lds
andps
gs
sub
ja
push
xlat
mov
loop
dec
or
dec
outs
or
fs
xchg
(bad)
dec
ja
aas
adc
ror
sbb
and
pop
(bad)
cmps
xor
lea
mov
jl
leave
sbb
xor
xchg
inc
es
(bad)
cmp
fcomp
xchg
xchg
xchg
sbb
xlat
ja
inc
add
adc
push
rol
nop
fwait
mov
inc
neg
outs
pop
popf
mov
jge
push
imul
in
push
stc
inc
and
xchg
sub
jb
fst
dec
outs
sbb
add
push
sub
stos
sbb
push
push
xchg
ja
xchg
mov
inc
mov
mov
shl
shl
cs
adc
push
xchg
and
jmp
mov
js
jno
fs
pop
(bad)
xor
(bad)
out
rcl
repz
retf
faddp
lods
inc
add
lods
test
arpl
jmp
xor
xlat
ss
push
lahf
dec
xchg
daa
pop
mov
repnz
sti
sti
ror
sbb
adc
rep
js
leave
and
inc
lock
repz
mov
and
aas
and
sbb
into
stos
dec
mov
sub
ret
jl
in
scas
or
(bad)
cli
loop
pop
push
stc
jecxz
iret
sahf
xor
ficom
mov
push
push
cmp
xchg
std
xchg
push
ret
mov
stc
into
test
pop
call
or
add
repz
push
mov
dec
jmp
xor
call
pop
adc
cmp
lods
adc
pop
push
jae
mov
push
cmp
adc
out
cli
push
enter
pop
jne
call
fwait
adc
mov
add
push
das
hlt
push
xor
jmp
pop
retf
lahf
sub
addr16
mov
jl
ds
fdiv
push
push
and
sti
cmp
ret
out
sbb
ficom
add
fdivr
das
in
fdivr
jl
sub
inc
cdq
ror
mov
movs
mov
sub
inc
push
push
mov
(bad)
jo
out
test
push
outs
inc
xchg
sub
cwde
aam
dec
inc
aas
ja
ret
outs
cmp
cmovb
leave
jmp
xor
pop
outs
daa
in
call
clc
jb
aad
inc
and
in
outs
xlat
adc
pop
loopne
sub
shl
in
jl
clc
mov
fist
fcom
cdq
mov
mov
dec
fcmovbe
call
stos
mov
stc
or
add
jl
xchg
or
jg
pop
pop
xchg
fdivr
loop
out
xor
mov
fnstsw
ficom
push
popf
inc
test
leave
xor
repz
stos
cld
push
jp
push
test
shr
scas
sub
or
sub
js
(bad)
sbb
cmp
mov
mov
into
and
ds
shl
pushf
call
sbb
nop
icebp
in
ret
in
ret
cmovae
sub
sub
xor
imul
aad
mov
inc
push
call
icebp
cmp
jmp
movs
std
pop
jo
out
add
xor
(bad)
enter
pushf
scas
sbb
loope
sub
ins
push
xchg
ror
adc
mov
movs
das
ficom
xchg
cdq
daa
fstp
mov
aas
adc
push
sub
icebp
jle
retf
rol
inc
sub
outs
call
fld
or
mov
dec
jle
xlat
mov
rcl
xchg
jo
mov
jmp
inc
loope
jp
out
cmp
jns
cmp
adc
shl
push
outs
inc
lds
xchg
mov
pop
add
add
lods
(bad)
sar
xchg
mov
ret
mov
loopne
pushf
aad
icebp
pop
fimul
jp
loope
sbb
(bad)
into
bound
std
push
xor
popa
fs
adc
inc
into
cmp
xor
inc
pop
shl
lods
push
jne
and
ret
push
mov
inc
(bad)
in
(bad)
mov
dec
push
pop
stc
test
fwait
xchg
test
jp
sub
sub
xor
jl
call
jae
xchg
push
push
jg
dec
sbb
xor
mov
pop
mov
not
and
mov
jne
mov
xchg
in
lods
jbe
or
shr
xchg
(bad)
cmps
addr16
lds
sar
sub
mov
pop
bound
lock
(bad)
(bad)
fsub
pop
xchg
into
in
pop
or
outs
sbb
xchg
ds
xchg
push
cmp
outs
loop
stos
(bad)
and
out
ret
dec
cdq
(bad)
jbe
cmp
mov
pop
leave
jg
cmp
out
scas
mov
test
inc
test
cmp
jmp
adc
jne
(bad)
aaa
sbb
pop
pop
ds
lds
fs
int
mov
cmp
fcom
and
inc
icebp
pop
mov
sub
ja
fisttp
inc
pusha
jns
sub
push
loop
cmp
inc
mov
popf
repz
std
sbb
in
je
(bad)
add
inc
int3
xor
out
cdq
pop
loope
lds
and
div
mov
fucomip
in
push
xchg
addr16
outs
inc
inc
and
int
pop
dec
es
aad
mov
dec
xor
inc
ficom
(bad)
jmp
jecxz
scas
mov
js
sub
test
rol
mov
cdq
inc
sub
inc
pop
retf
mov
mov
in
xchg
sbb
xor
ss
xchg
jg
push
mov
add
jns
xchg
xchg
test
jp
mov
int
mov
fild
jns
xor
std
movs
jbe
add
in
sbb
lds
cmp
mov
or
jge
cmp
fcmovbe
cmp
and
loop
movs
xor
(bad)
loope
aad
mov
mov
mov
sbb
xchg
js
jne
std
cmc
mov
sub
push
icebp
imul
adc
push
xchg
enter
pushf
xchg
inc
lock
sub
mov
cmp
inc
and
cmps
adc
fimul
sub
xlat
or
sub
loopne
or
lds
dec
lods
cmp
jae
mov
jmp
jae
ret
repz
clc
hlt
jno
das
lahf
mov
cmp
loop
and
outs
(bad)
mov
iret
mov
sub
pop
pop
stos
mov
dec
movs
mov
cmp
enter
mov
add
mov
and
aaa
cmps
adc
into
push
add
aaa
es
add
pop
and
psubusw
mov
jecxz
shl
pop
in
push
pop
or
push
imul
js
movs
mov
push
xchg
ins
iret
add
lods
mov
xlat
adc
ss
clc
movs
xor
xchg
nop
out
das
loope
inc
inc
xchg
dec
adc
and
cmp
xchg
call
mov
adc
sbb
sub
ret
retf
fsubr
pop
sbb
or
sbb
pop
and
fdivr
push
(bad)
(bad)
loopne
xchg
mov
add
mov
imul
pop
and
call
stos
mov
mov
fcom
pop
inc
scas
mov
xchg
sbb
retf
fisttp
inc
pop
popa
call
push
call
dec
mov
lods
scas
sbb
aad
push
and
div
stc
jmp
pop
or
les
sbb
js
test
jo
or
popf
and
jne
add
retf
loope
fchs
addr16
xchg
aaa
repz
mov
jne
ja
mov
aam
adc
cmp
movs
(bad)
cmp
mov
hlt
and
(bad)
jmp
jnp
jl
movs
cmps
pusha
jno
xor
sahf
xchg
adc
fadd
jmp
push
pop
jb
lods
out
cmps
imul
jno
js
mov
loop
adc
add
lea
pop
pop
mov
loop
movs
mov
push
test
pop
stos
test
fisub
pop
xor
das
sbb
aad
mov
xor
mov
mov
clc
sbb
jmp
hlt
push
out
adc
in
sbb
test
and
call
or
retf
(bad)
clc
or
dec
cdq
push
xchg
mov
fldz
and
jne
js
jmp
stos
(bad)
cmp
dec
mov
enter
gs
test
jno
les
pop
sbb
sub
jno
push
shl
add
mov
jmp
pop
fsubr
xor
movs
xchg
not
jb
pusha
push
lods
dec
fwait
push
icebp
mov
mov
(bad)
icebp
jle
sar
lock
sti
add
das
dec
mov
add
pop
fdivrp
call
sub
idiv
sahf
sti
mov
jge
jae
mov
cld
test
cmp
xchg
repz
sub
ret
in
or
jle
push
test
mov
dec
imul
jns
xor
outs
mov
(bad)
mov
test
popa
inc
pop
adc
in
sti
cmp
bound
sub
sub
and
fidivr
ja
das
xchg
xlat
mov
pop
movs
sub
mov
ins
pop
(bad)
add
dec
lea
mov
dec
out
cmp
cmp
clc
sar
into
dec
sbb
pop
imul
xchg
test
and
mov
in
pop
dec
pushf
adc
mov
btc
sahf
repz
cs
sti
mov
pop
dec
imul
push
mov
mov
stos
add
or
int
mov
shl
rol
cwde
rcl
xchg
aad
jns
push
mov
sub
cld
fcom
add
test
xor
xchg
xchg
(bad)
int3
sub
mov
push
mov
and
sbb
xchg
outs
jmp
xor
lock
fisub
jnp
dec
fstp
imul
data16
add
lock
imul
push
and
popf
sbb
popf
int3
ss
clc
xchg
sbb
mov
jns
jbe
mov
cmp
push
leave
ins
popa
adc
ficomp
add
sar
add
call
inc
iret
or
mul
and
sub
ins
push
aas
fldcw
aad
ja
test
ror
mov
cmps
cli
or
fwait
and
cmp
xchg
xchg
ja
push
mov
and
xchg
mov
sbb
bound
adc
addr16
out
or
imul
fist
and
leave
and
or
cmp
shl
arpl
fisttp
(bad)
out
push
adc
ins
add
mov
pop
nop
xchg
pop
in
jg
push
in
hlt
add
jle
sub
mov
stc
jge
or
push
test
mov
fs
xchg
jp
mov
sbb
sub
pop
sti
out
add
popa
add
sti
dec
les
push
pusha
push
js
cld
ror
sar
xchg
cmp
mov
adc
xchg
push
rcr
sub
cmp
add
lock
xor
call
(bad)
mov
retf
leave
test
out
push
pop
mov
(bad)
pop
sar
mov
and
jno
or
mov
mov
loope
shl
fmul
movs
push
add
push
jp
add
test
or
dec
(bad)
push
jl
cld
pop
imul
mov
cld
jmp
enter
sbb
data16
js
ins
mov
adc
(bad)
ins
cmp
test
out
jp
outs
stc
pop
xchg
jl
pop
rol
pop
mov
imul
or
dec
ins
or
dec
mov
int
call
imul
adc
cmp
out
and
mov
cli
jmp
in
call
leave
(bad)
mov
push
pop
sbb
adc
ins
dec
dec
gs
xor
mov
or
push
jge
(bad)
cmps
xchg
mov
sti
mov
sbb
mov
dec
jae
xchg
pop
xchg
loope
repz
push
das
xlat
push
mov
add
xchg
cmp
pop
sti
sbb
pop
mov
jmp
loop
rol
push
outs
test
inc
inc
add
cmp
out
sbb
je
dec
fsubr
fadd
push
jge
cmps
call
jmp
ins
loopne
pop
jns
sub
push
jle
dec
dec
fbld
xchg
mov
jle
dec
je
xchg
into
xchg
and
arpl
popf
shr
int3
xchg
inc
(bad)
xchg
add
add
test
call
and
inc
xchg
repnz
adc
shrd
sbb
push
je
sub
cmp
or
xchg
in
or
lods
jmp
loopne
cmp
push
arpl
sbb
out
je
sbb
retf
aaa
ins
jb
sahf
cmp
add
ins
and
mov
(bad)
ins
mov
lahf
mov
lods
sar
call
imul
fbld
lods
fisttp
sub
outs
add
call
mov
out
mov
pushf
push
ins
repnz
imul
inc
mov
cmps
add
mov
push
mov
mov
or
into
jg
mov
in
es
jnp
imul
rcr
push
mov
dec
in
rcr
shr
movs
adc
pop
mov
mov
sahf
(bad)
out
stc
inc
int
sub
add
ins
add
adc
lea
repz
shr
in
mov
outs
lods
sbb
ret
call
fstp
mov
ret
push
pop
cmps
push
cdq
loopne
fcompp
or
nop
mov
mul
jge
(bad)
jbe
push
pop
sbb
sub
ins
mov
pop
jl
(bad)
sti
aad
push
mov
clc
xor
mov
cli
lods
jp
jb
into
nop
inc
in
mov
sti
jo
xchg
or
or
ror
pushf
scas
mov
and
inc
cmp
outs
hlt
daa
js
retf
cmp
or
jnp
pop
aad
int3
outs
sbb
dec
pop
int
in
setg
fimul
ja
xchg
push
sub
xchg
push
into
xor
sbb
mov
cmp
not
out
movs
mov
loopne
jg
stc
out
jg
stc
out
sbb
cld
paddusb
cmps
(bad)
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
fmul
add
loopne
mov
ret
(bad)
mov
jns
pop
retf
ss
xchg
(bad)
mov
mov
ins
pop
stos
dec
stos
xchg
jns
jle
ja
add
test
inc
push
rcl
cmp
fistp
mov
jl
xchg
cld
jbe
mov
stos
out
jae
jmp
ret
pop
stos
inc
les
sub
jl
fucomi
adc
push
iret
and
xchg
jbe
and
lods
adc
pop
repz
add
mov
xor
jp
mov
adc
popa
and
fnstenv
icebp
add
inc
jae
aam
inc
add
je
xor
push
or
retf
xor
mov
jo
aas
stos
mov
jo
icebp
clc
cmovnp
dec
mov
and
mov
xor
pop
rcr
dec
(bad)
stos
int3
jbe
xchg
jp
add
or
pop
(bad)
push
mov
xchg
cmp
test
(bad)
cmps
jnp
push
jg
ja
xor
stos
movs
rcr
lods
sti
sub
cmp
cmp
in
push
lods
adc
test
movs
pop
sbb
daa
aas
mov
cld
out
push
ja
rcl
test
adc
mov
push
jno
mul
popf
ins
cmp
stos
push
add
push
xor
out
sub
and
(bad)
cmp
mov
fidiv
mov
xor
mov
repnz
push
cmp
lds
int3
movs
mov
sbb
ds
xchg
push
loopne
(bad)
xchg
jo
(bad)
xor
dec
pop
call
push
(bad)
in
loop
stc
jecxz
fild
scas
pushf
push
mov
jmp
pop
test
out
in
loop
jne
add
dec
popa
dec
enter
shl
jb
jg
daa
sti
scas
neg
pop
repz
push
xor
xchg
cli
setnp
push
or
(bad)
mov
cli
aam
sbb
push
pop
fisub
outs
mov
xlat
inc
jo
push
jmp
stos
xor
or
mov
jo
cmps
jae
mov
pop
ficomp
sbb
cs
jns
add
cmp
and
hlt
sbb
add
push
fs
loope
add
sbb
call
std
xchg
sbb
or
sbb
mov
fdivr
test
sbb
and
xchg
aaa
ds
repz
or
jmp
dec
popf
mov
xchg
popf
repz
imul
mov
fwait
pop
fild
mov
push
jmp
leave
cmps
xor
fidivr
out
and
setns
nop
stc
xchg
(bad)
aaa
push
jmp
xchg
push
bound
je
loope
adc
cdq
(bad)
cwde
mov
add
mov
cld
pop
add
imul
retf
adc
loope
into
mov
iret
add
lods
sbb
lods
sbb
idiv
sbb
pushf
jle
aas
jne
pop
cmp
(bad)
les
mov
sti
test
pop
ins
mov
sub
add
test
add
popa
jbe
retf
pop
daa
dec
jno
pop
push
(bad)
cdq
aas
repnz
inc
int
(bad)
outs
dec
adc
mov
mov
fdivr
sub
movs
mov
mov
pop
add
mov
xor
dec
jle
lock
and
xor
cli
mov
popf
cwde
mov
mov
repz
loopne
mov
sub
gs
scas
rcr
or
dec
movs
imul
cmp
lahf
and
outs
sub
in
mov
pop
retf
call
test
inc
dec
pop
bound
jo
mov
cmp
lods
mov
stos
sbb
cmp
or
xchg
fwait
sahf
and
jecxz
cmc
out
mov
jb
jne
and
pop
arpl
sti
(bad)
outs
push
loopne
out
push
sub
dec
imul
inc
movlps
jns
mov
mov
sar
cmps
pop
lea
jecxz
dec
repz
fs
push
enter
or
jg
lahf
sbb
jl
push
hlt
rcr
pop
and
enter
add
mov
sub
jecxz
in
daa
arpl
nop
add
out
sub
enter
dec
fnstsw
inc
rol
cli
cmp
cmp
mov
enter
test
fst
add
fisttp
mov
fcmovu
sbb
(bad)
mov
push
cld
push
test
call
(bad)
jns
popf
data16
scas
mov
pusha
sub
ret
mov
test
into
mov
sti
cmp
xchg
retf
cmp
push
ins
fucomip
movs
es
aad
fsub
and
jmp
scas
outs
aam
leave
enter
push
pop
or
sub
dec
clc
sub
vunpckhps
mov
repz
fst
push
jmp
pop
test
addr16
jne
sti
pusha
sbb
ds
cmc
aad
add
movs
or
xor
arpl
aad
mov
jp
mov
mov
lahf
les
pop
mov
cmps
rcr
mov
cs
jnp
ins
mov
pop
inc
xchg
cs
mov
jae
fbstp
and
(bad)
stc
dec
jae
out
imul
xor
push
sahf
das
sbb
rol
rcr
inc
adc
push
xchg
pop
mov
cmp
sbb
inc
mov
xor
ss
lods
push
mov
inc
in
or
and
pop
ret
movs
call
cli
xor
jnp
and
movs
and
mov
xchg
out
les
add
mov
in
xchg
ja
fadd
xchg
jb
repnz
stos
daa
jo
and
xchg
int
neg
push
rcr
xchg
mov
mov
imul
rcl
dec
cwde
retf
loop
pop
lods
popa
sub
mov
bound
(bad)
in
or
dec
out
lds
call
mov
add
push
(bad)
clc
cwde
rcr
pop
push
ins
mov
fcomp
popf
rol
push
push
sub
or
inc
out
or
into
std
imul
mov
ret
jmp
adc
(bad)
shl
loope
dec
(bad)
loop
mov
(bad)
retf
loopne
pop
pushf
or
dec
call
inc
cmps
jg
aam
cs
sub
dec
icebp
pop
(bad)
test
lods
(bad)
xor
into
pop
ins
mov
or
mov
push
or
sbb
sbb
pop
shr
push
mov
add
xor
out
mov
cld
out
lahf
mov
dec
out
mov
inc
out
xchg
push
pop
stc
shl
vunpcklps
adc
mov
shl
jg
ficomp
mov
test
lods
or
popf
mov
xchg
pop
test
les
js
xchg
das
jbe
dec
popf
ds
into
jl
inc
lea
stos
cmp
loop
scas
mov
push
outs
sub
sub
jns
sub
movs
popf
repz
pop
shl
push
dec
stc
scas
out
test
jnp
loope
scas
push
rol
jmp
cmc
mov
ret
adc
push
call
pop
retf
mov
outs
inc
daa
adc
push
movs
push
(bad)
push
movs
inc
jns
mov
arpl
cmp
stos
in
ja
out
ret
ret
aam
mov
sti
inc
sbb
pusha
pop
aas
into
inc
mov
cmp
cmc
outs
rcl
popa
aad
pop
sub
cmps
push
jo
loop
std
dec
dec
inc
mov
dec
pushf
and
add
adc
push
sahf
fdivr
out
lds
xchg
mov
xchg
xchg
jno
mov
xchg
lds
pop
call
jbe
jge
inc
lds
or
push
mov
repnz
leave
cs
jno
jmp
gs
or
jne
cmps
lods
mov
adc
mov
mov
pop
sub
lahf
fcmovne
loop
out
int
hlt
repnz
or
rcl
mov
in
loopne
adc
mov
mov
hlt
mov
or
fprem1
jnp
scas
sub
iret
xor
in
daa
cmp
in
sub
jno
in
jmp
pop
stos
data16
xor
popa
mov
call
dec
add
cmp
hlt
ins
(bad)
lea
lods
stc
(bad)
mov
jecxz
out
cld
fcomp
cmp
pop
cmp
dec
dec
cwde
(bad)
loopne
jp
lahf
and
dec
mov
xlat
je
clc
int3
xchg
dec
mov
scas
nop
aad
sbb
or
ret
das
pop
push
sub
mov
jmp
push
mov
add
or
iret
jl
cmp
pop
in
cmps
clc
inc
adc
inc
cmc
mov
leave
mov
xlat
jl
idiv
into
in
cli
out
sub
rcl
or
dec
xchg
cmp
imul
lods
imul
imul
inc
aad
cld
leave
sub
fsub
jns
mov
inc
rol
(bad)
fistp
mov
call
inc
or
inc
fmul
inc
or
jmp
adc
repnz
sub
jbe
mov
push
or
sub
popf
inc
out
cmp
mov
or
cld
cmp
dec
pop
dec
jmp
(bad)
js
repnz
std
lea
push
adc
(bad)
push
push
jmp
sub
rcl
dec
lods
dec
jecxz
je
in
jo
pop
add
not
sahf
movs
mov
jns
test
push
(bad)
push
aad
pop
leave
data16
mov
ins
pop
repz
jo
nop
push
cmp
and
jbe
dec
adc
pop
xor
push
xor
call
out
sar
sar
jne
sub
loope
mov
leave
shr
ja
out
xor
jno
dec
fcomp
sahf
sub
jb
idiv
jmp
bound
jg
mov
xlat
mov
js
(bad)
pop
test
iret
cwde
leave
jp
jns
sub
dec
xor
xor
scas
arpl
ror
add
gs
mov
in
jbe
in
inc
xchg
dec
(bad)
sub
add
ficomp
or
sbb
mov
pop
sar
cld
sub
fucomp
xor
int3
mov
sbb
jmp
adc
xor
outs
lock
jp
cmp
mov
fs
and
or
adc
mov
or
fwait
hlt
in
in
mov
cmps
gs
cmps
push
scas
loop
addr16
out
cmp
cmp
mov
leave
and
cmp
push
pop
(bad)
cmps
push
mov
xchg
popa
push
clc
add
pop
jmp
movs
xchg
cmp
or
sbb
xor
je
cmps
fistp
push
loop
add
pop
mov
bound
jmp
(bad)
arpl
fisttp
mov
mov
jno
pop
jl
jnp
pushf
jnp
pop
mov
(bad)
sbb
pop
lea
ins
add
mov
jl
ret
xor
push
arpl
shr
in
and
jmp
mov
scas
lock
sub
push
inc
loop
push
test
or
jns
out
mov
stos
imul
or
rcl
pop
xor
clc
jp
int3
add
lahf
pop
fstp
cmp
and
inc
mov
cmp
pop
ja
cmps
mov
pop
fiadd
xchg
sub
pop
in
sub
(bad)
pop
mov
adc
mov
add
scas
and
mov
and
sahf
jmp
mov
pushf
sti
add
push
mov
arpl
test
nop
ret
fcom
xor
test
xchg
ins
jl
pop
add
into
call
mov
cmp
inc
outs
cmp
ficomp
mov
pop
cmp
push
fnstcw
pop
shr
mov
mov
data16
pop
out
and
jl
push
pop
das
mov
adc
jno
aas
push
jmp
fnstenv
mov
pop
dec
push
daa
les
bound
add
leave
xchg
pop
sbb
sbb
in
std
imul
xor
jb
cdq
pop
je
pop
add
call
cs
in
mov
nop
or
aad
jo
je
not
js
xchg
rcl
xchg
mov
and
adc
ins
jae
and
neg
jb
push
and
ins
iret
jno
xchg
inc
repnz
ins
add
jge
test
cli
pop
cmps
mov
aas
dec
cdq
jmp
add
test
and
mov
sbb
jmp
movs
push
imul
and
daa
mov
push
sti
imul
add
in
push
sub
(bad)
in
movs
cli
adc
jne
adc
add
mov
cdq
ja
push
ret
jg
std
fmul
push
dec
push
(bad)
fild
sbb
push
adc
scas
lock
and
iret
mov
sbb
ins
das
aaa
push
jno
or
sti
cmps
lds
push
inc
scas
mov
dec
fs
sub
xchg
nop
std
mov
or
shl
out
outs
push
adc
sub
(bad)
mov
push
int
jp
mov
into
les
rol
pop
jmp
outs
loop
clc
mov
mov
out
jbe
jecxz
dec
leave
push
push
and
inc
ins
(bad)
mov
outs
shr
mov
test
mov
retf
xchg
loopne
ret
push
xlat
mov
pop
aam
scas
jmp
popa
lea
out
pop
inc
ret
ins
push
enter
mov
into
inc
sar
add
xchg
xor
rol
aam
js
sbb
rcl
lahf
(bad)
fs
xchg
inc
add
lea
lahf
mul
mov
sbb
jp
cmp
icebp
adc
sub
inc
or
sub
out
mov
jmp
sub
xor
jl
imul
pop
add
fisttp
or
cld
mov
test
into
repz
push
out
mov
test
sbb
dec
or
call
inc
pop
leave
es
jge
jbe
adc
dec
cmp
shr
add
sti
aaa
pop
fist
jbe
jle
cmps
les
icebp
inc
push
mov
fwait
cmps
or
push
push
sub
pop
mov
xor
adc
xor
xlat
xor
fistp
addr16
pop
mov
ins
(bad)
mov
mov
xchg
fdiv
inc
es
sbb
pop
mov
inc
into
out
imul
dec
sbb
pop
call
pop
(bad)
out
and
mov
retf
push
pop
xchg
pop
sub
adc
or
je
push
jae
adc
rcr
lahf
add
sbb
sti
add
xchg
xchg
sbb
ja
mov
dec
xor
mov
push
mov
arpl
sbb
push
call
inc
inc
xor
ja
movs
and
das
or
jmp
ss
aaa
sub
push
push
cdq
push
(bad)
cmc
ret
fisttp
ins
push
xlat
ds
mov
add
pop
push
push
pop
lahf
xchg
jne
sub
mov
xchg
stc
les
in
ret
(bad)
jmp
or
or
ret
(bad)
stc
sti
sub
ins
dec
aaa
test
cmp
mov
cmp
add
mov
sub
mov
push
adc
cmp
push
and
adc
cli
cmps
movs
dec
cmps
xchg
jae
mov
mov
shl
stc
retf
repnz
test
dec
stos
inc
dec
fisttp
movs
and
popf
cmp
pop
ret
or
lods
adc
clc
xor
adc
mov
jae
jb
dec
pop
ret
cmc
js
cmp
sub
sti
jns
out
sub
jp
clc
stos
add
fldcw
outs
push
rol
inc
cdq
xchg
mov
xor
and
sbb
cmps
add
fdivr
lds
shl
in
ret
xchg
repnz
imul
mov
xchg
enter
sbb
and
xchg
mov
cld
cmp
sbb
je
clc
out
jg
stc
out
jg
stc
mov
shl
repz
les
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
mov
sub
sbb
xor
(bad)
mov
and
jnp
xchg
jns
daa
fs
into
cmp
fwait
mov
ins
mov
neg
xor
pslld
cmp
inc
mov
push
add
ja
arpl
lea
pop
jae
mov
add
sub
cmp
mov
movs
push
lea
stos
xchg
bound
out
loopne
(bad)
(bad)
adc
loope
push
cs
jno
test
test
push
fcom
hlt
mov
(bad)
frstor
mov
mov
jle
std
sub
daa
mov
jnp
xchg
nop
retf
test
outs
shr
fst
aas
int
lods
retf
outs
and
and
add
mov
sbb
push
fisttp
or
in
pop
test
nop
or
fsubr
jle
pop
sub
mov
xchg
push
push
in
fsub
cld
jo
mov
imul
stc
cmp
mov
inc
loopne
jg
jmp
pop
enter
scas
sub
jmp
pop
push
scas
in
pop
sub
lock
js
retf
aam
sbb
mov
xor
leave
xchg
sbb
fmul
add
cmp
imul
mov
test
cmp
imul
jbe
sbb
stos
arpl
mov
repz
and
sub
sub
lahf
dec
in
cwde
orps
shl
mov
cmps
test
mov
and
ja
ret
icebp
std
jp
cmps
jne
inc
mov
jbe
inc
lahf
lods
loope
sbb
mov
jg
add
sbb
push
cmp
or
push
enter
sub
mov
(bad)
push
xor
stc
mov
mov
sahf
sti
faddp
xchg
xchg
fistp
adc
icebp
adc
ins
mov
jns
dec
mov
mov
pop
mov
sbb
rcl
push
pushf
pop
fmul
mov
pop
outs
push
push
in
stos
mov
or
xor
xchg
out
clc
mov
sbb
jbe
mov
ret
cmp
sub
sbb
sub
loope
or
or
dec
shl
leave
xor
in
ds
or
or
mov
lock
push
retf
scas
cmp
adc
mov
pop
in
lea
das
jle
scas
cdq
add
xchg
mov
imul
loope
bound
inc
xchg
pop
ret
loop
(bad)
mov
xor
xchg
pushf
dec
(bad)
iret
ret
icebp
sub
enter
retf
xlat
aam
shr
cmp
inc
into
ins
cmp
je
gs
outs
cwde
cmp
xor
xchg
jne
gs
movs
and
or
rol
call
jae
das
cmp
mov
jg
lock
leave
aam
push
or
cdq
inc
mov
jmp
add
and
dec
gs
or
inc
pop
mov
ret
test
es
inc
mov
leave
test
clc
or
jmp
popf
dec
scas
pop
mov
mov
mov
sub
pop
sub
sbb
(bad)
pop
push
(bad)
add
rcl
inc
cmps
pusha
popa
imul
fs
aam
lods
mov
mov
mov
movs
jns
outs
sub
jp
lds
gs
cli
or
mov
(bad)
push
sbb
sti
jns
xlat
and
mov
pushf
jbe
inc
(bad)
xor
adc
sub
movs
stc
cmp
fxch
ja
and
sbb
add
rep
and
sub
fstp
mov
mov
sub
push
sahf
(bad)
out
call
loopne
into
dec
cwde
cwde
movs
inc
sub
(bad)
neg
sahf
rol
movs
aad
out
in
cmp
inc
xor
lds
xlat
out
jbe
jae
ret
cli
in
xchg
mov
loope
(bad)
in
inc
imul
pop
inc
dec
sub
mov
sub
pop
enter
fs
or
mov
mov
xchg
mul
sub
adc
cmc
retf
fcomp
in
mov
inc
sti
adc
xchg
push
jnp
(bad)
and
jecxz
icebp
jnp
inc
or
mov
repnz
mov
jge
movq
and
push
cmp
adc
loopne
mov
mov
(bad)
push
movs
xchg
sbb
cmp
data16
dec
aam
adc
cmp
call
xor
sub
push
mov
lahf
sub
mov
call
cmps
int3
out
inc
fs
jle
push
inc
lods
dec
dec
add
dec
pop
loop
sub
sbb
cmps
and
hlt
jle
mov
xchg
mov
in
inc
and
cwde
jle
lea
dec
je
xchg
push
jmp
nop
jge
push
scas
std
adc
sbb
cs
shr
mov
(bad)
fist
jne
in
push
jbe
call
fld
les
and
jg
cmps
inc
inc
mov
sbb
xlat
jb
icebp
scas
dec
pop
pop
xchg
mov
or
std
xor
out
mov
popa
push
add
fld
int
rcr
mov
jno
xchg
call
scas
jnp
repnz
sub
push
cmp
cli
ds
jp
out
xor
mov
aad
jge
shl
dec
jecxz
mov
sub
stos
es
movs
pop
mov
adc
add
add
dec
sbb
retf
aas
xchg
(bad)
sbb
and
inc
pop
inc
sbb
fild
in
repnz
fist
outs
test
pop
cwde
xchg
and
js
pop
in
loope
mov
pop
inc
int3
jmp
shl
ficom
mov
mov
fimul
out
pop
xchg
mov
hlt
pop
fucomi
pop
in
je
retf
mov
loop
xor
jmp
inc
ret
pop
getsec
arpl
jbe
xor
aam
sbb
fisubr
inc
imul
mov
nop
int3
call
push
adc
(bad)
xor
adc
jge
dec
or
out
jb
mov
cmovs
jnp
adc
ret
movs
mov
mov
inc
fisub
scas
iret
mov
inc
imul
pop
data16
aam
inc
inc
jmp
lahf
retf
lods
adc
addr16
lock
pop
mov
push
lods
pop
retf
int3
leave
pop
fidivr
movs
jo
(bad)
cmp
adc
shr
dec
push
push
inc
mov
imul
sbb
inc
dec
popf
shrd
loop
enter
jg
adc
cmp
lock
push
cmp
loope
lea
push
imul
mov
xchg
xlat
test
pop
sub
dec
xchg
inc
mov
xor
enter
hlt
push
pop
or
or
call
mov
xor
lds
scas
leave
gs
adc
cdq
jge
popf
movs
fldenv
push
lods
cmp
scas
push
inc
fisubr
sbb
into
movs
jmp
ror
ret
mov
movs
(bad)
cmp
push
push
xchg
or
adc
out
ficomp
lock
sub
sbb
(bad)
xchg
and
dec
push
adc
icebp
cdq
sub
in
sub
sbb
adc
rcr
ja
dec
lahf
adc
retf
fs
push
lea
mov
ret
mov
(bad)
jnp
call
test
dec
int3
(bad)
xchg
mov
ja
call
push
jge
ja
retf
dec
mov
bound
stos
cli
stos
cmp
push
dec
mov
retf
pop
in
cli
test
shl
cwde
outs
cmp
mov
mov
ret
sub
inc
iret
rcl
es
nop
(bad)
cmps
enter
scas
ins
push
test
inc
lahf
sub
icebp
stos
imul
sti
(bad)
popa
jmp
cmps
(bad)
xor
lods
cmps
or
ins
push
das
ret
pop
jb
dec
lods
jp
pop
wbinvd
push
lds
sbb
jle
xor
out
pop
vhaddps
push
icebp
(bad)
mov
iret
mov
mov
lds
sbb
test
fldcw
call
mov
add
jmp
xchg
test
xchg
int3
shl
push
movs
mov
ficomp
enter
xor
shl
arpl
and
jns
xor
aaa
and
call
and
jecxz
shl
in
add
ja
xor
pop
and
add
adc
sbb
cdq
scas
aad
popf
je
(bad)
push
push
jbe
loop
sub
dec
(bad)
ror
xor
xchg
lahf
adc
and
adc
push
or
dec
sub
dec
lahf
hlt
sahf
pop
push
iret
jmp
jbe
popa
arpl
cmc
stos
inc
dec
inc
sub
cmp
(bad)
and
(bad)
jmp
lods
sbb
fdivr
rcl
int
cmp
push
(bad)
mov
push
aam
imul
out
int
add
leave
and
cwde
cmp
out
dec
xchg
cld
jecxz
cmp
pushf
pop
adc
test
ins
(bad)
and
into
jnp
mov
mov
hlt
cmovl
push
ja
jp
aas
test
xlat
popf
fcom
and
jmp
sub
mov
lock
cmp
dec
retf
aad
out
sbb
sahf
mov
rcl
ins
cmps
and
mov
xor
or
pop
sbb
mov
fld
retf
outs
add
(bad)
fisub
sbb
adc
in
popa
cmc
pop
and
cmp
das
mov
iret
std
mov
aas
push
jbe
stos
sti
mov
stc
ja
sub
sbb
(bad)
mov
jmp
loope
lds
shl
cmp
idiv
out
sbb
adc
lds
cmc
shl
(bad)
sbb
out
inc
std
iret
(bad)
jle
adc
mov
mov
cld
lahf
imul
les
int
aas
xor
xchg
xor
fldenv
xor
adc
ins
xchg
ror
sbb
cdq
adc
loope
xchg
(bad)
mov
and
icebp
jecxz
int
pop
cwde
mov
scas
(bad)
iret
fadd
idiv
int
arpl
push
cmc
and
and
mov
xor
arpl
dec
jle
cmc
xchg
or
arpl
retw
cs
(bad)
and
sbb
mov
jl
mov
ret
ds
cmps
add
lods
dec
repnz
push
ja
xchg
js
adc
int
jecxz
sub
push
push
aaa
mov
mov
xor
mov
in
and
jnp
enter
es
pop
add
push
js
(bad)
push
xchg
cmp
shl
inc
xchg
pop
adc
out
xchg
mov
and
scas
cmp
mov
pop
push
sub
adc
mov
mov
fiadd
das
mov
fidiv
popf
cmp
in
loopne
xchg
inc
mov
(bad)
fist
enter
pushf
mov
lock
mov
xchg
pop
ins
push
mov
mov
xchg
adc
cwde
inc
int
push
or
cld
cmp
pop
pop
push
jnp
mov
aam
clc
push
clc
xor
xor
mov
repnz
mov
fs
dec
push
inc
adc
or
bound
pop
stc
shr
pop
jg
sub
std
sub
test
(bad)
cmp
in
inc
(bad)
ds
lods
mov
dec
fcmove
jae
fadd
cmp
cmc
mov
jl
mov
jbe
icebp
push
sar
jmp
mov
xor
aas
inc
lock
sbb
cld
cmp
stos
jno
cld
aaa
ins
mov
push
xchg
in
push
enter
xor
sbb
jne
(bad)
pop
into
pop
mov
jecxz
mov
cmp
pop
jo
xchg
lock
cmc
jb
and
dec
je
inc
icebp
mov
and
movs
retf
mov
mov
int
js
pop
xchg
jo
(bad)
out
pop
mov
daa
cli
xchg
(bad)
mov
es
pusha
lock
movs
movs
loopne
ja
movntq
or
pop
(bad)
out
cld
jo
or
pop
in
pop
call
loop
popf
jp
xlat
call
mov
sti
xchg
iret
mov
add
aaa
(bad)
outs
xor
and
inc
(bad)
scas
sahf
and
xchg
loopne
rcr
into
retf
push
test
icebp
sub
repnz
pop
mov
movs
aam
mov
sbb
jp
cld
int
dec
mov
cmp
out
sub
inc
fcmovne
mov
cmps
jmp
in
mov
dec
xor
mov
cmp
fcomp
or
xchg
add
fidiv
add
inc
add
bound
popa
xchg
dec
mov
inc
pop
xchg
pop
cmp
inc
cli
jecxz
mov
(bad)
icebp
dec
data16
jno
add
stc
xchg
pop
sub
adc
fiadd
push
aaa
cs
dec
cmp
mov
inc
and
ds
in
sub
adc
daa
lea
js
xchg
test
shl
cli
vorpd
cmp
jne
inc
xchg
cmp
stc
mov
aad
fist
push
mov
or
pushf
in
sti
or
test
inc
aad
mov
out
mov
pop
ret
or
retf
or
inc
xchg
(bad)
int3
ja
sub
movs
arpl
adc
or
or
int3
(bad)
and
cmp
cmp
xor
mov
xor
in
pop
(bad)
idiv
dec
ficomp
pop
xor
adc
sbb
mov
or
adc
push
imul
hlt
mov
movs
pop
jg
adc
mov
sahf
or
cli
ret
mov
pop
ja
fsub
mov
add
dec
das
aam
repz
adc
loopne
mov
mov
mov
ss
es
lea
sti
jmp
dec
fldcw
lds
test
pop
ds
push
aas
xor
sub
bound
xor
xchg
(bad)
pop
mov
retf
aaa
and
iret
fcomp
push
or
dec
pop
pop
and
(bad)
xchg
mov
dec
aad
inc
push
test
inc
xlat
pop
sub
loope
add
cli
mov
std
ins
fcomp
push
in
mov
das
xor
nop
push
or
outs
push
dec
pop
cwde
push
lods
inc
xor
mov
cmp
stos
push
pop
sbb
lds
inc
cmps
ins
(bad)
mov
outs
sbb
loop
and
mov
pop
rcl
cmp
jg
sub
and
jmp
or
pop
adc
mov
imul
stc
jl
push
pop
imul
add
int3
adc
daa
sti
mov
jge
ins
jno
jle
cmp
push
aam
imul
ins
push
add
sbb
repnz
pop
mov
call
pop
mov
js
cmp
sub
rcl
imul
data16
pushf
xchg
jg
add
daa
cwde
shl
je
clc
sub
mov
mov
adc
push
mov
fistp
jmp
sbb
std
outs
imul
sbb
push
in
inc
in
jecxz
dec
adc
adc
mov
jmp
int3
push
dec
mov
test
add
repz
rcr
jmp
in
mov
push
(bad)
sub
or
xchg
test
add
and
mov
sub
mov
or
sub
dec
(bad)
add
mov
sbb
(bad)
pop
inc
add
mov
jno
(bad)
test
fst
rol
sti
cmp
cmp
inc
fdiv
mov
add
out
mov
je
push
dec
jbe
imul
pop
push
cmp
cli
mov
repz
cmp
aam
xchg
mov
xchg
aas
popa
cmc
out
jmp
iret
ss
mov
ret
cmp
sbb
fst
(bad)
xor
inc
in
popf
xchg
cdq
cdq
in
xor
xchg
cmp
(bad)
fst
mov
or
out
jg
stc
out
jg
stc
mov
rcr
mov
icebp
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
enter
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
pushf
out
pushf
out
ja
ss
shl
fnstsw
push
cmps
int
mov
cmps
cdq
call
cmps
dec
pushf
out
and
sahf
pop
add
addr16
add
push
add
sahf
jae
scas
(bad)
leave
sbb
ins
mov
sbb
int
aaa
(bad)
sub
ss
pushf
imul
mov
je
(bad)
into
adc
dec
(bad)
jmp
dec
jge
fdivr
jl
pusha
xchg
mov
add
xchg
pop
or
mov
xchg
mov
mov
sub
cmp
and
jge
in
jmp
cmp
pushf
and
xor
(bad)
jl
(bad)
jns
or
pop
mov
leave
test
outs
fcom
pushf
nop
adc
ja
pop
mov
(bad)
pop
popf
pop
mov
dec
mov
add
movs
jns
and
or
jns
push
and
je
dec
adc
out
jnp
pop
cmps
dec
push
jg
mov
xchg
dec
(bad)
arpl
scas
repz
dec
test
pop
fisubr
xlat
retf
pushf
xchg
popf
xor
loope
add
test
aas
xchg
ja
scas
and
imul
scas
(bad)
xlat
arpl
dec
and
hlt
inc
repz
jle
arpl
jmp
xor
movs
retf
jg
scas
daa
psubb
aaa
std
sub
jl
loopne
inc
add
sbb
aas
push
push
mov
ins
cld
xchg
cwde
or
and
xor
mov
daa
mov
jmp
pop
gs
sub
popa
or
retf
xchg
ror
dec
or
push
shr
cmp
sahf
sbb
jp
fcom
xchg
inc
arpl
into
ja
add
fimul
xchg
xchg
mov
ficomp
or
inc
add
gs
js
mov
and
jl
cwde
cs
cld
dec
cwde
test
mov
retf
sub
jl
adc
out
repz
jns
sbb
mov
inc
cli
imul
ins
nop
aas
xchg
xchg
jle
iret
test
push
fcomp
xlat
jo
ficomp
push
das
mov
stc
cs
or
jg
cmp
mov
mov
add
jmp
stos
sub
jmp
in
stos
jle
pop
xor
lods
dec
call
pushf
arpl
loopne
mov
xor
sbb
jbe
xor
xchg
daa
sbb
enter
paddd
sbb
or
rcr
imul
adc
mov
and
mov
or
xor
xchg
lock
fild
push
inc
and
cmp
push
cwde
mov
sub
pushf
(bad)
fdivr
scas
ret
(bad)
clc
sbb
pop
xchg
sub
(bad)
shl
out
xor
sti
pop
jmp
jl
mov
pushf
mov
out
pop
stc
and
jl
shl
xchg
push
xchg
xchg
jnp
or
mov
and
arpl
mov
scas
outs
pop
imul
or
int3
arpl
ds
pop
push
fmul
xor
repz
(bad)
fisub
jae
push
in
adc
dec
pop
cli
pop
mov
je
ror
js
push
aad
outs
cmp
push
push
cmps
fprem
mov
xchg
mov
inc
or
cmc
jae
push
mov
out
neg
cwde
sar
sbb
retf
out
cwde
shl
cmp
mov
pop
sub
push
mov
cmp
mov
xor
inc
imul
pusha
movs
daa
mov
jo
out
jg
ficomp
aam
scas
mov
inc
scas
xor
(bad)
jecxz
xchg
mov
and
gs
jp
add
jge
sub
(bad)
mov
and
push
std
jge
in
out
addr16
das
das
push
in
adc
popa
leave
dec
aaa
xchg
inc
popf
outs
xor
daa
sub
xor
inc
call
out
js
loop
push
das
das
loop
pop
mov
jecxz
movs
adc
pop
inc
push
mov
outs
cs
mov
leave
mov
jecxz
cli
fld
xor
sub
fmul
adc
sbb
in
push
repnz
movs
arpl
cmps
adc
mov
add
retf
push
and
mov
mov
imul
adc
push
dec
cmc
adc
sub
xor
cmps
cmp
inc
scas
jl
cmc
mov
(bad)
(bad)
xrelease
jp
dec
icebp
in
iret
or
ja
dec
ins
inc
imul
into
cmp
pop
js
mov
and
push
repz
adc
pushf
pusha
xchg
mov
and
xor
mov
xor
fldcw
mov
xchg
push
sbb
xchg
int
(bad)
das
jge
(bad)
jnp
fs
jp
sar
shl
xor
sbb
pop
or
(bad)
cmps
pop
mov
call
cdq
inc
test
cwde
ss
into
(bad)
pop
adc
call
sbb
pop
nop
movs
aam
dec
add
out
xor
scas
inc
mov
inc
lahf
mov
sub
stos
div
test
sub
sbb
mov
fild
push
imul
icebp
sub
movs
mov
xor
mov
adc
icebp
mov
pop
repnz
push
imul
jno
pop
aaa
(bad)
adc
push
fwait
data16
and
sar
xchg
call
out
ret
sub
shr
mov
sbb
pop
and
aas
push
xor
jl
test
pusha
push
jno
retf
in
int3
pop
adc
test
add
out
jle
pop
lock
add
lahf
iret
pusha
mov
xchg
jb
push
jge
xor
out
clc
and
enter
push
mov
shr
(bad)
mov
ins
pop
pop
cmc
cld
cwde
into
cwde
ret
(bad)
imul
fild
inc
hlt
cdq
sub
gs
jnp
hlt
mov
mov
pushf
(bad)
jno
xchg
and
sub
(bad)
mov
push
mov
outs
inc
bound
test
ss
or
mov
push
in
or
xor
in
jge
push
mov
sub
pop
out
sub
fs
test
mov
and
xor
es
xor
fld
push
pop
icebp
cmp
jnp
ja
push
dec
clc
test
or
and
movs
lea
call
rol
jno
push
inc
push
pop
mov
dec
adc
adc
inc
movs
push
(bad)
ficomp
mov
mov
out
sub
lahf
mov
aaa
lods
stos
test
mov
dec
in
xchg
daa
adc
push
xchg
call
push
mov
xor
enter
into
adc
inc
je
stos
in
mov
and
inc
lods
jnp
(bad)
shl
frstor
(bad)
jp
jp
adc
and
call
loope
mov
imul
nop
push
(bad)
test
out
mov
ret
mov
je
cmc
sahf
jmp
aas
xor
das
mov
stos
loope
inc
out
iret
outs
test
sar
push
repz
sbb
ret
jb
pusha
sub
xchg
cmp
adc
push
stos
push
cmc
cmc
push
dec
lods
pop
xor
lahf
scas
mov
fwait
add
ret
daa
shl
mov
fwait
fwait
jnp
mov
jno
mov
gs
pop
fstp
lea
fstp
mov
mov
clc
out
jno
mov
cmp
loope
jbe
push
cmp
loope
sbb
jmp
pop
pop
je
pop
shl
push
leave
xor
mov
mov
sub
clc
mov
and
lahf
mov
ins
popa
sar
mov
mov
(bad)
dec
dec
push
pop
push
push
mov
mov
adc
test
adc
popa
pop
inc
fistp
(bad)
jecxz
dec
jp
jle
movs
add
cld
ins
xor
ror
xor
imul
cwde
ds
rol
repnz
xlat
shl
mov
mov
sbb
or
lods
test
adc
outs
clc
scas
push
pop
dec
iret
sub
jg
test
(bad)
jle
and
call
retf
adc
aam
(bad)
xchg
(bad)
pop
mov
sbb
stos
cmp
mul
push
and
mov
int3
and
cdq
enter
pop
(bad)
mov
scas
int
aad
push
pusha
loop
into
pop
call
jo
hlt
jl
sbb
imul
div
call
out
push
sub
dec
push
inc
rol
and
sbb
xor
int3
xchg
es
(bad)
mov
aaa
test
sub
xchg
mov
das
data16
ror
stos
push
or
aaa
push
pop
cld
loop
movs
jg
inc
cmp
inc
cmps
fs
outs
ins
aam
xor
sbb
dec
adc
xor
pop
dec
mov
jns
(bad)
pop
in
cs
ins
lods
test
sbb
xchg
aaa
fdiv
jb
scas
and
mov
pop
outs
dec
lds
out
xor
cdq
stc
out
ins
ds
loopne
lea
pop
cmc
cmp
scas
inc
loopne
fdiv
out
jl
iret
inc
into
adc
fcom
mov
jb
mov
movs
scas
xchg
jno
inc
jo
mov
cmc
popa
imul
xchg
jae
jmp
test
ss
xchg
pop
add
loopne
(bad)
or
jmp
sbb
mov
sar
clc
jb
jbe
and
and
mov
and
mov
mov
and
pop
test
aad
and
imul
bound
and
rcr
add
push
sbb
xchg
fs
jge
loopne
mov
mov
call
cmp
retf
push
mul
inc
ror
test
push
outs
test
sti
push
mov
mov
xchg
mov
out
adc
js
call
mul
stos
icebp
(bad)
jnp
scas
xchg
cmp
aad
sub
dec
dec
mov
pop
out
sar
ja
add
pop
imul
pop
inc
push
add
ret
lds
push
gs
(bad)
fbld
adc
sub
les
inc
imul
int3
mov
or
xchg
add
push
adc
and
stc
mov
jecxz
nop
mov
push
sbb
xor
call
push
repnz
pushf
pop
pop
(bad)
fcomp
and
add
inc
sbb
mov
movs
aaa
adc
rcr
jp
retf
xchg
in
in
adc
sbb
jno
into
popa
ja
fidivr
je
(bad)
je
daa
ficomp
jle
call
stos
in
adc
test
inc
rcl
push
xor
sbb
xor
test
pop
add
push
inc
or
mov
xlat
ret
out
pop
adc
pop
push
adc
mov
test
(bad)
lahf
xor
cmps
ret
iret
outs
mov
push
dec
test
retf
dec
pop
mov
(bad)
mov
mov
fdivr
dec
and
imul
mov
mov
ret
pop
ins
fbld
jg
sbb
cmp
aaa
sbb
lods
les
pop
xlat
mov
jnp
xchg
nop
cmps
les
out
out
xlat
nop
ins
cdq
mov
ret
scas
shr
jmp
adc
call
pop
jecxz
push
xor
cdq
and
out
(bad)
(bad)
js
sti
push
es
repz
jmp
out
pop
lock
movs
jnp
cmp
outs
movs
fdivr
lock
mov
ret
imul
or
inc
dec
mov
fbld
in
mov
ja
push
mov
or
dec
(bad)
push
iret
cmp
adc
sahf
popf
jg
cs
aam
out
push
nop
sar
jmp
mov
popa
mov
jo
lock
fwait
dec
cmp
sbb
iret
iret
repz
outs
push
dec
push
mov
mov
aaa
push
outs
xor
mov
ret
movs
es
adc
mul
ja
das
xor
adc
mov
mov
subps
fmul
test
jmp
shr
push
xchg
jns
xor
stc
mov
mov
arpl
fcomp
fisubr
imul
xchg
leave
lods
sbb
mov
dec
inc
outs
pop
mov
jl
xchg
and
adc
inc
call
xor
ins
into
dec
iret
loop
mov
mov
sbb
popa
mov
aad
cmps
and
in
(bad)
adc
jnp
sbb
xchg
pop
jo
and
cdq
dec
sbb
imul
jg
xchg
xchg
retf
cs
xor
ss
or
adc
stc
or
xchg
pop
jo
lods
(bad)
jmp
dec
or
in
(bad)
push
and
call
and
popf
and
pop
inc
pop
sbb
mov
std
fld
clc
mov
cmp
mov
xor
mov
cmp
das
sahf
cmp
mov
jns
push
iret
(bad)
retf
fidivr
(bad)
lods
pushf
push
sar
rcr
out
sub
ins
lahf
jmp
outs
cdq
pop
sbb
sbb
retf
xchg
es
ret
and
call
pop
div
enter
movs
push
jb
loopne
imul
xrelease
jmp
and
inc
and
cmp
add
mov
js
and
and
jp
jno
lock
stos
jmp
jo
cmp
jae
jne
(bad)
mov
adc
lahf
mov
es
push
or
rcl
mov
cmp
repz
out
mov
cmp
ds
rcr
add
jae
dec
adc
and
add
in
(bad)
aas
mov
das
jmp
cmp
lock
push
dec
xchg
shr
aaa
and
push
(bad)
push
jbe
aas
inc
into
inc
fs
sbb
push
and
push
cmp
sub
or
(bad)
out
ret
int
(bad)
push
push
sub
scas
lea
dec
sub
jg
fbstp
lods
pop
mov
pusha
fldenv
xchg
clc
ss
cmp
imul
xchg
pusha
ja
les
fwait
iret
push
pop
lods
cmp
inc
mov
dec
js
pop
cmc
mov
jmp
push
mov
fstp
sbb
pop
and
mov
(bad)
push
sti
hlt
pop
jle
das
push
leave
push
or
in
les
shl
add
mov
and
cwde
mov
ins
sub
push
int
adc
mov
cmp
adc
sbb
dec
fwait
pushf
loope
mov
mov
sub
sbb
(bad)
pop
pusha
mov
pop
lods
int3
out
(bad)
fldcw
inc
mov
mov
and
add
xor
mov
repz
push
clc
retf
test
push
push
cdq
pop
inc
dec
xchg
cdq
stos
cmp
jnp
dec
jo
repz
ret
imul
mov
or
lock
mov
or
ja
push
cdq
adc
pop
mov
cwde
push
push
adc
push
ins
fdiv
out
int
mov
loopne
add
das
retf
xchg
dec
mov
mov
shl
jns
mov
fldcw
je
mov
retf
jnp
mov
cmc
stc
sub
mov
mov
inc
aas
loop
xchg
mov
push
sub
ret
in
in
dec
(bad)
cdq
movs
inc
das
cmp
bound
(bad)
and
imul
sbb
and
inc
test
pop
push
enter
xor
cmp
push
mov
pop
mov
dec
sub
data16
adc
inc
jb
cmp
call
out
(bad)
out
or
fidiv
pop
or
ret
cmps
into
push
mov
dec
jg
stos
test
mov
cmp
call
inc
push
aam
lods
fild
sahf
in
cmps
cmp
out
jg
stc
out
jmp
lock
jnp
std
out
push
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
leave
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
add
or
arpl
fnstenv
ins
mov
fidiv
push
sub
push
fsubrp
jg
iret
cmc
sub
add
sahf
pop
add
out
popa
retf
xchg
pop
lock
(bad)
xor
and
std
imul
aad
js
pusha
sbb
iret
push
movs
or
cs
sub
push
enter
pop
jge
mov
dec
jae
sub
icebp
fcom
jmp
out
call
stc
xchg
nop
repz
push
fmul
inc
pop
jle
jno
test
test
xor
fnstsw
and
push
cs
sub
mov
test
and
mov
pop
retf
and
loopne
jmp
call
xchg
(bad)
and
jns
adc
icebp
stos
adc
xchg
mov
mov
cli
mov
aam
or
cmp
jne
pop
into
mul
sbb
push
sub
adc
jg
lods
sbb
xchg
ss
repnz
daa
xor
inc
bound
adc
xor
dec
mov
and
jl
dec
mov
adc
jbe
ds
iret
(bad)
fdivr
int3
xchg
fsubr
sbb
cmp
jbe
push
div
inc
mov
sbb
dec
fs
das
xchg
cmp
ret
dec
(bad)
imul
retf
movs
jae
movs
setae
mov
or
pop
jg
lds
outs
sar
inc
push
xchg
inc
lock
repnz
xchg
jbe
xchg
shl
jle
jne
mov
(bad)
test
in
aaa
aam
pop
sub
fmulp
cld
xchg
sub
lahf
push
gs
fnstcw
mov
nop
out
push
sbb
repnz
xchg
loope
ret
je
sahf
cmps
ja
test
imul
sub
sbb
add
dec
lea
dec
push
xchg
dec
mov
loope
fstp
cmp
jns
dec
jb
cmc
jns
or
add
std
iret
push
cs
xchg
aam
out
jg
or
add
dec
cmps
outs
icebp
push
add
xchg
ret
out
or
xchg
sahf
mov
jno
arpl
iret
fistp
pop
movs
scas
rol
jl
ret
mov
cmps
mov
sar
cmc
jae
xor
and
leave
push
adc
arpl
pop
mov
(bad)
repnz
xchg
xchg
(bad)
ficomp
xor
out
jmp
int3
repz
jnp
addr16
dec
(bad)
sti
into
adc
jne
outs
lds
imul
aad
test
scas
jp
dec
xor
(bad)
mov
push
sahf
pusha
test
scas
xchg
pop
movs
int
test
xchg
in
push
dec
mov
add
shl
xor
and
stos
adc
lods
(bad)
aad
nop
pop
pop
cmp
int3
imul
arpl
and
(bad)
ror
xor
cld
int
pusha
jns
lahf
push
cmps
and
in
xor
pop
pop
lahf
adc
cmp
sahf
xchg
cld
nop
stc
std
ret
out
ja
sbb
mov
pop
mov
xor
and
dec
adc
add
sub
mov
je
push
jecxz
fwait
and
cmp
dec
push
mov
cmps
jle
jmp
cld
dec
mov
std
xchg
mov
rol
pop
idiv
dec
js
test
fwait
in
inc
fadd
fwait
push
push
dec
xor
and
cdq
es
aad
xor
adc
lahf
jmp
xor
xor
int3
inc
sbb
lahf
jne
and
fiadd
cmp
mov
xor
mov
cmp
test
dec
dec
add
leave
cmp
movs
das
pushf
sbb
ret
rcr
sti
imul
movs
stos
cmp
leave
hlt
add
sbb
jmp
imul
and
sbb
lods
push
fst
shl
inc
jmp
lds
(bad)
pop
inc
aad
dec
ficom
test
ins
arpl
xchg
add
push
jo
shl
lods
inc
mov
mov
ror
add
mov
gs
ins
bound
iret
mov
cmps
fdiv
dec
adc
sbb
cmp
cli
mov
fnclex
sar
add
pop
call
in
dec
jns
repz
xor
add
push
stc
fsubr
mov
outs
call
retf
adc
dec
iret
xchg
bound
fcomi
ret
lock
nop
imul
or
cdq
loope
psadbw
stc
outs
mov
cmc
add
inc
cmc
imul
int3
xlat
jbe
hlt
jne
(bad)
fcom
ret
mov
jle
rol
mov
imul
mov
(bad)
mov
jbe
mov
pop
imul
and
dec
xlat
rcr
adc
jecxz
pop
mov
push
xchg
jmp
(bad)
sti
cli
pop
ret
mov
mov
ja
ins
aas
fs
pop
and
stos
out
mov
sbb
and
into
repz
adc
rcr
cwde
cs
mov
inc
ret
loop
mov
ror
hlt
sub
xor
jg
xor
nop
scas
inc
inc
jecxz
jmp
fdivr
outs
inc
icebp
pushf
dec
jp
xor
loop
loop
ja
mov
xchg
daa
pop
mov
push
cs
adc
test
rcl
mov
sar
inc
cmps
xchg
es
xchg
sahf
out
dec
je
sub
movs
sahf
(bad)
dec
push
js
ja
lods
add
aam
test
in
or
dec
mov
jp
push
daa
scas
mov
cmp
or
cmps
out
mov
push
call
arpl
sbb
xchg
cdq
add
arpl
stos
enter
xchg
mov
or
sub
jle
fidivr
fild
in
(bad)
adc
pop
je
lahf
out
inc
stc
test
push
xchg
movs
enter
push
pop
inc
xchg
push
cli
xchg
aam
rol
in
dec
mov
pusha
xchg
outs
shl
inc
add
test
xor
aam
out
mov
outs
(bad)
xor
push
cmp
jmp
enter
es
mov
mov
pop
lahf
es
ret
cs
mov
iret
lock
out
mov
jle
sbb
pop
sar
or
outs
out
xchg
xchg
adc
int
and
idiv
fisub
ret
push
dec
popa
and
bound
icebp
pop
rcr
test
rcl
shl
in
sub
sub
sub
pop
sub
ret
mov
or
dec
cmc
mov
fidiv
hlt
lock
adc
sbb
xchg
pusha
cld
shl
leave
lods
rcr
mov
sub
ja
push
cmp
mov
daa
scas
and
xchg
cmp
push
or
jnp
repz
lds
das
add
xor
mov
jmp
test
xchg
mov
inc
inc
adc
imul
cmp
dec
and
test
pop
mov
or
into
adc
xlat
ss
stos
jno
mov
lea
add
lea
inc
cmp
retf
(bad)
icebp
(bad)
call
xor
mov
xor
inc
jne
imul
push
jo
mov
jno
jg
mov
dec
(bad)
and
mov
sub
pop
xor
inc
stos
ins
add
push
outs
pop
jae
xlat
inc
jp
stos
push
out
jmp
mov
sub
sub
push
das
jge
es
pop
and
push
or
aam
rcl
test
(bad)
inc
jbe
daa
ins
shr
retf
add
mov
push
dec
pop
fabs
icebp
mov
psrad
or
shl
and
es
cmps
jmp
out
(bad)
and
stos
mov
cmp
repnz
lods
cmp
or
gs
mov
or
lods
and
int3
shl
arpl
popa
outs
sbb
mov
outs
or
idiv
push
mov
push
xor
pop
adc
inc
add
dec
sub
mov
mov
jae
mov
push
dec
add
inc
inc
mov
cmp
mov
mov
stc
inc
jns
dec
aaa
xor
cmps
out
push
addr16
ja
inc
sub
push
jb
cld
fsubr
cli
test
cmp
fwait
mov
fwait
loope
cmp
lods
(bad)
xor
adc
jmp
or
fs
out
pop
shl
push
add
ret
push
adc
mov
(bad)
xchg
js
pop
mov
xchg
cdq
pop
das
jl
sbb
aaa
push
loopne
(bad)
js
mov
cmps
push
or
push
jo
jg
sub
popa
pop
cs
int3
pushf
push
fsubrp
fs
xor
fdivr
xor
ins
cmc
jmp
adc
mov
xchg
sahf
xor
adc
add
fisttp
pop
cmp
sahf
or
mov
xchg
or
sub
nop
inc
dec
mov
ins
aad
push
(bad)
jb
mov
cdq
pop
cmp
cmc
sar
ret
dec
ret
dec
and
int3
repz
cmp
ja
push
scas
int3
and
(bad)
in
ret
mov
cmp
xchg
movs
scas
pop
xor
mov
test
icebp
pop
inc
mov
xor
or
inc
daa
jl
dec
sti
lahf
push
xor
mov
int
adc
inc
out
and
int
pushf
rcr
mov
sub
cmp
lds
pop
mov
pop
xchg
pop
add
adc
and
enter
adc
retf
fstp
ret
in
and
ins
(bad)
xor
jne
(bad)
fisttp
inc
fsub
ja
jmp
cmp
psubusb
jecxz
dec
pop
jmp
bnd
dec
vmwrite
dec
enter
xchg
cdq
inc
push
cmc
fs
lock
xor
inc
nop
inc
aaa
dec
test
neg
jmp
adc
push
and
pop
neg
cld
pop
imul
xchg
push
fistp
ficom
test
xchg
pop
mov
jb
mov
adc
fwait
aam
call
push
fistp
or
call
mov
fcmovnb
clc
hlt
adc
ror
push
sbb
ins
mov
mov
movs
jl
jae
aad
push
(bad)
fistp
movs
mov
arpl
dec
xchg
xor
shl
jno
mov
dec
in
xor
retf
xchg
fist
xor
ret
push
xchg
adc
xor
xchg
push
hlt
sub
mov
mov
je
pushf
pop
add
fsub
movs
arpl
pop
pop
std
les
and
repz
lds
add
or
retf
mov
leave
mov
test
pop
mov
xor
fnstcw
mov
push
xchg
ss
inc
and
aaa
push
aad
repz
aad
arpl
mov
sbb
dec
or
add
xor
lds
and
(bad)
sbb
in
pop
or
mov
mov
ret
mov
push
fwait
cmps
cmp
mov
sub
sub
ins
and
loop
push
sub
out
ja
lds
movs
add
mov
inc
aam
and
addr16
push
int
push
sar
fisub
xchg
cmp
inc
pushf
jbe
inc
aaa
les
pop
mov
pusha
xor
lea
xchg
jo
data16
mov
push
mov
push
xchg
pop
xchg
es
mov
scas
mov
push
adc
fimul
lahf
out
jne
push
test
adc
out
imul
outs
inc
das
mul
or
outs
fnstcw
rol
stc
inc
and
push
les
xchg
iret
fnstsw
bound
ror
das
outs
jne
rcr
(bad)
mov
ss
movs
mov
mov
sbb
jl
pop
push
inc
std
and
mov
push
cwde
jae
in
imul
sub
xor
jl
fs
jno
aad
mov
pop
cli
mov
sbb
test
repz
and
push
add
in
ret
mov
sub
arpl
mov
xor
pop
xchg
fiadd
pop
jno
xchg
idiv
mov
sbb
je
cmc
(bad)
shr
xor
ret
push
lea
inc
mov
mov
mov
xor
mov
ret
les
movzx
pop
cdq
inc
js
mov
pop
pop
cmp
(bad)
sti
ja
jb
(bad)
cmp
cmp
xor
or
clc
stos
sub
std
idiv
sbb
jp
loop
dec
add
iret
mov
mov
or
jge
sub
sub
xchg
push
adc
sti
loop
jmp
std
rcr
pop
sbb
adc
xchg
shl
dec
push
nop
scas
cli
mov
jns
in
or
xchg
ret
iret
dec
hlt
daa
cmp
add
sahf
rol
ins
fisubr
imul
enter
ins
aaa
daa
push
repz
in
in
mov
xchg
mov
and
mov
lea
ins
movs
jmp
jmp
jmp
fwait
test
cmp
ja
mov
jp
cli
in
mov
ins
jle
cmp
fild
sbb
mov
sub
jg
xchg
paddd
sbb
nop
pop
das
push
in
dec
and
sbb
les
sbb
repz
mov
pop
je
in
mov
sub
aam
xchg
rcr
retf
es
out
cli
out
pop
cmp
dec
jae
dec
lods
jns
js
sbb
in
jmp
mov
es
retf
rol
add
(bad)
and
test
mov
ret
sbb
xchg
jge
add
fwait
lahf
adc
loop
fsub
and
(bad)
jge
movs
sti
mov
dec
jge
sbb
sub
mov
hlt
xor
adc
(bad)
adc
and
sub
and
aaa
xor
dec
sbb
call
ret
(bad)
add
aam
stos
addr16
scas
pop
cli
lahf
pop
test
jmp
mov
add
iret
mov
cmps
repz
std
repz
push
sub
inc
mov
mov
push
aas
aas
cmp
das
mov
out
outs
cs
push
and
pop
test
ror
aam
es
outs
retf
test
(bad)
movs
or
inc
sahf
cld
xor
pop
outs
add
leave
jmp
pop
ss
and
cs
or
in
cld
cdq
fisubr
push
and
lds
cdq
and
pop
arpl
and
jo
mov
cmps
jmp
shl
inc
add
mov
cmp
inc
outs
cli
daa
popa
les
pop
add
push
and
loop
out
add
imul
inc
add
push
fisub
fwait
inc
movs
dec
xchg
aas
test
call
out
sbb
fimul
ffreep
ss
in
lahf
pop
xchg
cs
out
dec
movs
iret
push
jmp
mov
mov
push
mov
pusha
fdivp
sbb
sbb
rol
add
stos
movs
mov
stos
out
call
fs
pop
dec
pop
xor
push
les
test
inc
daa
xor
stos
in
sbb
xchg
stos
mov
mov
jmp
test
icebp
sbb
jnp
not
into
xchg
dec
mov
push
fwait
mov
cs
mov
pop
jp
pusha
jo
sti
in
aaa
addr16
mov
add
mov
push
mov
dec
sti
ret
test
fucomp
xor
rcr
fwait
push
adc
rcl
xor
xchg
jecxz
(bad)
mov
std
aam
mov
jbe
dec
and
iret
js
dec
sbb
sbb
in
xchg
dec
jns
cmp
adc
xchg
mov
xchg
rol
xor
fdivr
jb
in
pusha
dec
in
mov
(bad)
repz
xchg
mov
xlat
dec
mov
fdivr
out
xchg
cmp
cmps
push
pop
xchg
adc
into
cmc
adc
in
out
cmps
mov
(bad)
mov
sar
lahf
(bad)
cld
out
(bad)
stc
iret
jmp
lock
mov
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
inc
fmul
mov
jb
mov
in
cli
lods
scas
gs
(bad)
stos
gs
dec
pop
outs
fnstcw
mov
jnp
(bad)
mov
icebp
add
or
xlat
repz
sar
push
jl
cdq
mov
pop
les
rcl
gs
or
clc
hlt
cmps
sbb
inc
movs
mov
movs
jecxz
iret
mov
rcl
inc
jo
mov
mov
cli
loopne
mov
mov
mov
clc
xor
mov
mov
mov
and
mov
loope
and
sub
add
jne
jecxz
mov
adc
fisub
fsub
sbb
cmp
addr16
nop
fwait
mov
out
pop
dec
dec
dec
mov
aaa
cmp
clc
add
inc
push
out
mov
or
sbb
xchg
fwait
inc
(bad)
push
pop
push
sub
pusha
jns
retf
mov
icebp
push
xchg
fdivr
pop
push
xchg
mov
or
adc
xchg
xchg
into
mov
cmps
add
sar
adc
lds
out
les
mov
jnp
add
or
mov
pop
pop
mov
pop
cli
outs
neg
inc
dec
jb
push
sahf
pushf
jge
scas
loope
mov
pop
fild
test
stos
ja
xchg
mov
ds
fstp
enter
push
mov
jecxz
hlt
(bad)
sbb
scas
mov
mov
movs
scas
clc
pop
pop
push
cli
pop
push
xor
cmp
jle
sbb
(bad)
ror
inc
xor
sbb
adc
lds
popa
and
test
mov
popf
and
jae
pop
bound
movsx
mov
loop
dec
scas
je
cli
dec
in
mov
ins
adc
dec
idiv
xor
loop
mov
fwait
aas
mov
inc
pop
sti
stc
arpl
adc
cmp
mov
fs
test
jne
jmp
das
dec
and
xchg
std
jne
ret
jmp
cmp
or
out
popf
add
jno
loope
jnp
psubd
in
fcmovne
std
add
adc
jbe
stos
xchg
out
stos
(bad)
hlt
mov
sub
pop
dec
cmps
clc
and
mov
js
jmp
sub
sub
rol
lea
pop
inc
sti
sub
mov
loopne
and
pop
mov
out
jl
sub
add
fwait
(bad)
or
dec
mov
stos
xor
sahf
mov
aaa
clc
xchg
jmp
jmp
fisubr
add
mov
in
inc
push
pop
dec
and
scas
mov
pop
jmp
push
push
mul
push
scas
xchg
mov
mov
dec
jl
gs
mov
or
(bad)
lahf
cmp
dec
and
hlt
add
vmwrite
inc
pop
xchg
std
sar
aas
push
call
imul
cmp
cmps
scas
test
ja
lods
pushf
mov
add
xor
and
sti
push
popf
stos
scas
dec
mov
jle
xor
mov
imul
retf
xchg
dec
pop
mov
inc
jp
jmp
adc
mov
lock
ret
test
icebp
mov
ja
fistp
retf
cld
call
mov
and
rol
lock
daa
test
int
test
cmp
sbb
sbb
jb
pop
pop
cmc
repnz
cli
push
mov
sub
adc
imul
scas
pop
inc
cmp
xor
ins
cmc
addr16
add
add
je
pop
pop
mov
mov
and
dec
scas
js
mov
xor
pusha
pop
aas
mov
pop
push
cdq
imul
sbb
xchg
call
jns
cld
inc
pop
pop
in
fcmove
push
mov
add
sti
data16
adc
call
jmp
add
adc
es
push
outs
and
pop
mov
jmp
int3
cmp
push
cwde
scas
dec
push
adc
test
xchg
in
popf
add
mov
jg
xor
rcl
in
xchg
or
cdq
push
inc
out
fsubr
dec
outs
fstp
inc
outs
dec
imul
rol
or
popa
xor
popa
scas
cmp
xor
rcr
adc
not
test
xchg
cld
xchg
xchg
outs
loope
mov
int
dec
cmps
jmp
fisubr
cld
mov
cli
retf
and
mov
(bad)
pop
pop
cmp
shr
inc
call
clc
shr
outs
movs
xchg
mov
mov
fidivr
and
or
out
mov
cld
retf
push
xchg
inc
add
jb
jle
nop
jo
gs
adc
into
(bad)
icebp
clc
fisubr
inc
xchg
cmp
push
cmps
pop
xchg
xchg
mov
int3
fwait
cmp
aad
or
mov
mov
ss
ins
mov
daa
mov
retf
ret
mov
or
in
lea
adc
sub
pop
hlt
dec
pop
add
mov
sub
or
adc
xchg
sbb
or
(bad)
sbb
outs
jle
mov
fld
jge
out
inc
cwde
stos
push
mov
or
repnz
fdivr
outs
sub
mov
xchg
ss
dec
fdiv
repz
sbb
test
cmp
inc
push
mov
pop
push
fchs
mov
ret
sysret
xor
jae
lea
adc
cmc
sub
ds
pop
das
mov
ins
cdq
(bad)
pop
xor
inc
lds
mov
add
cdq
test
hlt
push
xchg
pop
(bad)
std
dec
dec
lods
(bad)
cdq
adc
push
mov
mov
daa
fbstp
push
dec
mov
inc
loopne
icebp
xchg
into
jl
mov
scas
je
add
cmp
ja
addr16
mov
push
fidivr
push
pop
inc
scas
mov
pop
jb
in
int3
cs
dec
jle
xchg
imul
call
pusha
lds
outs
shl
retf
cmps
mov
adc
call
scas
pop
out
loopne
push
sub
mov
xchg
lahf
mov
mov
adc
data16
mov
sbb
mov
cmp
xor
cmps
nop
mov
out
enter
mov
mov
clc
inc
nop
mov
sub
dec
mov
push
loope
inc
(bad)
jecxz
call
push
lock
loope
popf
xor
lods
(bad)
(bad)
loopne
shr
mov
add
iret
pop
pop
scas
pop
cmc
jg
iret
rcr
xor
and
sub
aad
in
xchg
cld
dec
pop
ss
add
mov
xor
mov
nop
sahf
cmps
add
fs
loope
arpl
or
adc
mov
cmp
mov
sub
paddw
ins
aam
and
inc
xchg
or
cmp
inc
mov
addr16
scas
inc
jnp
out
call
pushf
cmp
inc
mov
mov
and
fmul
push
(bad)
jo
pop
cmc
mov
or
aam
cmp
xor
xchg
mov
mov
movs
mov
inc
inc
jl
add
out
adc
mov
aaa
and
and
mov
dec
sbb
adc
pop
bound
push
movs
cmp
stc
inc
dec
addr16
movhps
int
retf
sbb
frstor
test
mov
mov
test
sti
or
jmp
mov
lea
add
push
ss
movs
inc
push
mov
stos
xchg
adc
pop
test
lock
popa
cmp
push
cwde
mov
ins
lods
xchg
push
cld
push
push
push
jmp
mov
cli
rcl
mov
std
cdq
aam
push
jmp
xchg
mul
dec
enter
popf
int
(bad)
in
into
mov
pop
jle
pop
xlat
or
pop
inc
push
adc
in
cmps
mov
stos
inc
inc
retf
(bad)
jmp
push
fstp
add
scas
or
inc
add
scas
pop
dec
inc
out
adc
xor
mov
sub
(bad)
sub
xlat
xchg
mov
dec
mov
stos
cwde
lods
in
inc
(bad)
dec
mov
adc
or
lock
dec
retf
mov
ret
mov
push
xchg
mov
cmps
xchg
sbb
cmps
clc
(bad)
popa
into
inc
push
sahf
aam
jo
daa
pusha
rcl
xor
ins
pop
mov
add
in
fcom
add
out
adc
cmp
and
es
rcl
push
mov
pop
xor
fldenv
mov
jo
pop
ret
loope
leave
arpl
in
je
mov
movs
mov
pushf
adc
repz
sub
xor
or
xchg
cmp
retf
(bad)
fild
leave
jnp
mov
adc
outs
fist
iret
fdivp
(bad)
pop
retf
cld
add
popa
stc
enter
(bad)
mov
dec
sub
mov
mov
pop
movs
call
repnz
ror
lds
lahf
(bad)
cmps
jno
xchg
out
adc
push
jmp
sbb
fld
pop
mov
and
leave
pop
(bad)
ja
(bad)
mov
push
cmp
scas
lods
call
leave
fidiv
mov
dec
gs
(bad)
out
ret
jmp
mov
int3
idiv
adc
cmp
ins
lods
adc
and
pop
inc
fsubr
cdq
and
xchg
(bad)
mov
jecxz
jno
push
dec
sub
and
pop
inc
jnp
dec
and
pop
push
jmp
and
div
popf
cli
fwait
mov
in
mov
sti
dec
sub
stos
gs
(bad)
jp
(bad)
daa
mov
loop
inc
aaa
xor
mov
adc
mov
idiv
dec
dec
or
lahf
dec
mov
pop
out
rcl
inc
out
sbb
mov
mov
dec
jg
ins
int3
sbb
arpl
sbb
movs
std
neg
in
les
stos
push
hlt
loope
dec
gs
sbb
popf
test
sub
cmps
jbe
or
inc
fcom
adc
cs
ror
sti
mov
aad
inc
ficomp
sbb
or
ret
outs
sahf
mov
addr16
pop
jecxz
jb
daa
outs
js
inc
pop
mov
add
aad
push
test
cwde
repnz
push
jecxz
out
sub
enter
outs
repz
mov
jmp
les
mov
enter
pop
cld
mov
outs
jg
adc
dec
enter
aam
xor
loope
int
dec
enter
jo
enter
fs
in
loop
push
dec
cld
stos
lahf
iret
jp
popf
scas
or
push
es
dec
daa
repnz
out
test
jmp
aas
add
or
popa
xor
test
jo
cmp
(bad)
cmps
(bad)
pop
mov
dec
gs
ja
and
xchg
jl
or
mov
and
shl
jb
jo
cs
and
pop
sub
cli
xor
add
mov
lods
sbb
cld
ins
xor
call
jg
xchg
in
xor
xchg
(bad)
mov
mov
add
add
mov
mov
mov
popf
sbb
jnp
imul
(bad)
cmp
leave
inc
imul
cmp
ja
aam
cdq
push
imul
aas
or
or
dec
lods
out
dec
pop
imul
leave
xor
cmc
jl
mov
jmp
jb
sub
xrelease
ret
int
call
imul
mov
pop
jmp
fdiv
fprem
dec
dec
mov
xchg
aam
daa
push
(bad)
hlt
xlat
hlt
in
push
in
and
xchg
cmp
stos
push
outs
sbb
retf
xchg
je
retf
push
adc
push
cmp
cmp
in
out
(bad)
jecxz
not
jl
and
icebp
adc
or
call
adc
dec
fs
or
shrd
cli
mov
adc
mov
aad
es
addr16
into
imul
add
inc
adc
mov
repz
xor
ins
imul
sbb
dec
mov
sar
data16
loope
std
cmps
push
popf
mov
loopne
std
mov
lds
mov
pop
adc
add
dec
repnz
add
pop
adc
cdq
daa
mov
aas
xor
jecxz
jne
mov
int
dec
xchg
pusha
pop
fild
hlt
and
cmc
add
lds
popf
mov
movs
shr
cmp
and
xor
inc
rol
cwde
imul
inc
inc
(bad)
in
ficom
leave
ins
xlat
cdq
enter
les
jae
mov
sub
mov
ret
lods
mov
call
pop
jbe
leave
mov
push
add
jns
call
pop
sbb
inc
rcl
das
loope
sbb
out
push
dec
and
int
cmps
pop
or
call
hlt
pop
pop
out
out
ret
adc
xor
cmc
xor
pop
stos
cmp
repz
dec
ret
fcomp
xchg
cmps
pushf
jle
pop
or
pop
xlat
test
push
test
aas
push
not
pop
pushf
dec
xchg
outs
sub
or
sahf
mov
mov
pop
xchg
lock
imul
aas
outs
movs
sbb
push
sbb
mov
call
es
and
jg
xor
pop
xchg
adc
inc
div
jg
xor
int3
mov
mov
sbb
and
int3
sbb
add
and
pop
in
push
mov
lods
or
xor
test
or
mov
mov
imul
cmp
dec
sbb
ss
inc
pop
cmp
fnsave
cmp
dec
inc
cmp
mov
call
xchg
sbb
xchg
jbe
pop
mov
or
cwde
(bad)
jbe
cmp
(bad)
jb
pop
retf
mov
fmul
mov
mov
push
jl
ss
aas
mov
pop
add
not
int
scas
xor
mov
fnstcw
mov
mov
scas
add
add
cdq
jl
xor
je
popa
mov
aad
outs
jmp
mov
add
push
dec
(bad)
fnsave
jle
into
ja
lahf
repz
ror
cmp
fldenv
sahf
inc
(bad)
out
call
sbb
push
jae
fcomp
ds
dec
mov
xor
cmp
sahf
pop
jno
ins
test
stc
mov
jmp
int
adc
test
adc
fwait
adc
adc
in
popa
xor
mov
sbb
mov
retf
jge
hlt
mov
addr16
sti
push
aad
je
icebp
(bad)
push
xchg
in
sti
sti
lods
xor
mov
mov
movs
sub
cs
cmp
mov
mov
(bad)
inc
push
push
call
mov
daa
and
inc
inc
add
loopne
in
xor
js
fidiv
push
and
inc
clc
cmp
fcomp
pop
in
cmp
dec
xchg
sub
or
in
mov
loope
test
fadd
sub
(bad)
and
mov
jecxz
xchg
rol
inc
dec
dec
jecxz
xor
sbb
ja
push
popa
push
sbb
mov
outs
inc
sub
mov
inc
aas
adc
clc
add
mov
and
and
gs
mov
cwde
cdq
ret
dec
and
call
(bad)
cmps
data16
out
test
sbb
mov
arpl
mov
test
xchg
cmp
mov
inc
or
or
jle
inc
lds
stos
dec
mov
ret
mov
arpl
pop
rol
push
jmp
push
xchg
jg
and
stos
inc
push
push
dec
iret
jmp
fmul
aaa
jl
cmp
std
xor
cmps
(bad)
ret
xchg
lods
daa
or
inc
retf
das
test
inc
xor
call
add
cld
test
into
xlat
lods
lods
aaa
or
outs
cdq
inc
idiv
sub
iret
sub
adc
and
aam
mov
fiadd
add
daa
jle
out
das
cli
mov
loopne
jg
stc
out
jg
stc
out
xor
scas
icebp
xchg
(bad)
adc
ja
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
xchg
xchg
xchg
cs
pop
dec
(bad)
xchg
xchg
out
outs
jmp
mov
and
pop
(bad)
mov
lock
rol
ja
test
scas
jne
push
stos
stos
pop
xchg
pop
push
arpl
arpl
in
lds
sti
sahf
test
add
lods
xor
loopne
addr16
jns
xor
or
inc
retf
push
bound
addr16
push
cmp
jns
dec
mov
cmps
fild
inc
cmp
mov
sbb
inc
dec
lahf
inc
arpl
int
in
arpl
inc
lock
lahf
push
stos
dec
and
xlat
mov
xor
cmc
dec
inc
adc
or
aas
popa
cwde
xchg
and
dec
and
cwde
setnp
cli
fwait
pushf
in
test
and
fist
mov
movs
lods
rol
daa
aaa
push
adc
shr
or
addr16
inc
mov
mov
mov
or
fs
stos
or
jg
ins
stos
ins
adc
test
inc
jl
jo
jns
and
fsubr
and
dec
jo
repz
outs
popa
cdq
mov
jne
loopne
ja
cmps
xchg
(bad)
call
add
cmp
rcr
ja
sub
cwde
push
int3
or
ins
lock
imul
pop
(bad)
(bad)
(bad)
sbb
cs
ins
lock
jae
in
xchg
adc
(bad)
push
cmps
jne
push
repnz
scas
xor
inc
lahf
cdq
out
into
xchg
xchg
in
ss
loopne
sbb
lods
fisttp
add
outs
dec
fs
nop
pop
or
inc
dec
mov
imul
dec
inc
dec
xchg
jns
xor
dec
jb
cdq
jb
jno
jbe
cmp
push
jb
sub
ror
inc
xchg
test
sbb
and
fs
out
push
dec
sub
jns
push
jb
jae
icebp
(bad)
cdq
inc
or
pusha
in
pop
xchg
and
mov
jcxz
cmp
shr
mov
push
shr
movs
out
leave
lods
push
add
pop
mul
pop
in
jge
cwde
mov
pop
jns
mov
sub
pop
xchg
sub
es
std
jge
scas
shl
push
push
sub
dec
les
mov
xchg
adc
cmp
es
and
mov
movs
cmp
ret
dec
test
push
inc
push
and
adc
cmp
out
scas
repz
mov
cmp
fadd
mov
inc
xchg
jmp
in
xchg
mov
and
pop
sbb
fisttp
nop
cmps
mov
mov
cmc
iret
in
jecxz
test
jecxz
add
(bad)
adc
fisttp
cmp
sbb
xchg
push
dec
xor
(bad)
shl
(bad)
jae
inc
fisttp
and
mov
ds
pop
movs
popa
add
gs
fcomp
outs
push
mov
sbb
cli
push
jl
xor
retf
std
dec
push
mov
or
mov
imul
jnp
pop
cmp
ss
inc
sbb
cmps
popf
pop
mov
xchg
out
int3
adc
jge
push
dec
adc
outs
lods
cmp
js
ss
push
fild
sbb
mov
shl
outs
mov
mov
stos
arpl
add
ror
out
je
mov
mov
mov
pop
in
outs
mov
popa
dec
inc
xchg
jmp
sbb
fwait
inc
xchg
shl
xor
enter
jp
mov
jae
pushf
cmps
xchg
jl
jg
mov
retf
(bad)
jno
add
push
or
dec
out
call
cmp
push
jmp
in
cmp
jmp
push
fdiv
mov
call
or
fnstsw
add
inc
xchg
sar
cwde
ins
mov
or
out
adc
adc
cmps
cmp
ret
jmp
pop
pop
cmc
cs
pop
mov
int3
ja
xor
sar
cli
and
push
shr
stos
xor
mov
in
popf
dec
adc
mov
std
inc
fs
movs
xor
mov
dec
xor
in
stos
or
jbe
movs
(bad)
jmp
jnp
adc
sbb
lock
pop
in
jmp
aam
jle
jle
inc
push
ret
nop
fdivrp
inc
ficom
cmp
scas
pop
lods
bound
dec
fs
pop
fnstenv
push
mul
pop
rcr
and
push
dec
movs
push
test
(bad)
ins
xor
stc
clc
sub
mov
pop
fs
mov
push
jg
(bad)
movs
jg
cmps
adc
jl
add
mov
add
cmp
in
jno
rcr
js
enter
inc
inc
inc
aad
mov
adc
shr
push
mov
int
and
xlat
xchg
iret
lock
jecxz
pop
cmp
nop
push
inc
sub
fidivr
ret
mov
sti
jl
es
pop
push
sbb
push
rcl
cmp
sub
mov
gs
test
loop
sbb
fdivp
jge
mov
stc
es
outs
jno
sbb
push
aad
faddp
mov
lock
cdq
dec
mov
add
pop
mov
inc
jae
mov
add
mov
adc
dec
push
jp
jb
aad
mov
mov
rdpmc
mov
cmps
cli
nop
mov
lods
mov
mov
stos
xor
test
daa
inc
js
xchg
ret
ins
sbb
xchg
fucomip
and
or
shr
inc
fdiv
out
push
inc
fimul
cwde
mov
xchg
test
adc
inc
in
pushf
cld
in
mov
xchg
vxorps
mov
xor
push
mov
cmp
scas
imul
in
ret
sub
inc
js
pushf
dec
mov
lea
daa
jne
sub
bnd
in
xor
pop
fsubr
leave
shl
ja
icebp
xchg
dec
inc
outs
inc
and
mov
ret
lds
sbb
jb
cld
and
sbb
call
sbb
cmp
add
push
fcom
loope
inc
retf
jae
ret
cmps
and
dec
rol
xchg
call
dec
adc
fldenv
xchg
inc
movs
mov
stc
rcl
sbb
stos
aaa
adc
add
fisubr
pop
pop
adc
inc
push
lods
daa
mov
or
repz
xchg
pop
dec
mov
pop
aad
test
imul
imul
cmp
arpl
add
and
and
in
shl
imul
xchg
mov
mov
xor
xchg
rcl
arpl
push
fdivr
adc
adc
jp
call
push
es
push
mov
cli
xchg
add
jb
mov
dec
cmp
shr
lods
fwait
push
adc
(bad)
dec
rcl
mov
fcmovbe
adc
sar
xor
push
jle
mov
fist
fadd
es
test
jge
pushf
dec
inc
xchg
outs
lods
cli
add
push
sbb
adc
or
jp
mov
jnp
push
xchg
mov
xor
sti
mov
pushf
xchg
iret
ins
push
mov
sub
rol
jo
push
jnp
cmp
xchg
jb
fsubrp
jmp
ror
in
cli
call
adc
vmovddup
jge
call
and
sbb
dec
retf
test
jmp
test
cmp
mov
lods
push
xor
cmp
add
jl
and
mov
push
and
xchg
fadd
sti
sbb
(bad)
dec
aad
scas
pop
jecxz
pushf
std
push
mov
mov
jae
shl
jbe
repnz
cmps
(bad)
adc
push
sbb
aad
mov
xchg
cmp
rol
xlat
push
ins
std
ror
push
sbb
push
pop
in
aaa
or
mov
std
mov
inc
test
pop
addr16
pop
sbb
pop
(bad)
mov
div
repz
pop
add
(bad)
rol
add
repnz
cld
scas
jg
or
cmp
cli
add
shl
bound
or
sahf
loop
fisubr
mov
(bad)
data16
out
div
mov
shrd
push
(bad)
aas
and
int
mov
outs
or
rcr
sbb
call
mov
es
inc
call
inc
cmp
call
sbb
ds
mov
jns
loope
pop
clc
push
sub
adc
fild
cmp
in
sub
cld
push
add
pop
cmp
xchg
push
scas
xor
icebp
pop
jno
cmp
out
jmp
ins
sub
pop
xor
jb
stos
jg
push
xchg
adc
push
arpl
dec
xchg
call
shr
fsub
xchg
(bad)
dec
xchg
adc
mov
push
push
or
mov
aad
pop
clc
ins
xchg
mov
cs
mov
push
sub
out
in
xor
jo
jb
inc
mov
pop
cld
pop
pop
adc
push
popf
sub
scas
jb
dec
aaa
add
mov
pop
xchg
imul
stos
mov
cwde
or
fsubrp
call
push
mov
add
dec
jp
js
xor
jmp
cmc
popf
out
xchg
mov
fnstcw
ja
mov
scas
jmp
push
add
imul
inc
mov
loop
nop
sub
scas
rol
pop
scas
jne
add
jnp
jbe
push
not
hlt
(bad)
or
inc
in
dec
inc
mov
jmp
jp
std
inc
call
cli
sub
cmp
stc
out
mov
push
sub
mov
cmp
lea
in
std
inc
stos
and
leave
sub
sub
mov
inc
pushf
sbb
scas
nop
mov
arpl
loop
mov
xor
adc
js
mov
cmp
cmp
mov
std
ss
and
sub
push
sti
sub
push
mov
jmp
jnp
jo
jge
lods
das
out
clc
pop
stc
aad
ja
fmul
test
mov
jmp
in
les
adc
fs
dec
call
out
inc
push
push
rcr
fsub
sbb
rcl
xchg
dec
jnp
xchg
add
dec
cmp
dec
mov
into
repnz
ins
in
repnz
jecxz
sbb
imul
sahf
shr
sti
shl
pop
jns
push
in
and
mov
jl
scas
loope
dec
div
pop
cmc
jg
data16
xor
pop
pusha
jo
shl
sbb
stc
lods
jne
cmps
or
ins
gs
sbb
stos
mov
adc
loope
and
clc
cli
arpl
ds
adc
stos
ret
cmps
pop
jbe
mov
outs
jo
inc
scas
xor
lods
sbb
aaa
adc
sbb
aaa
sahf
jge
int3
cmp
fisttp
out
pop
push
data16
(bad)
int
jmp
test
repnz
jo
mov
pop
or
xor
nop
mov
stos
sbb
shr
adc
inc
jno
mov
mov
int3
xchg
add
ins
mov
push
mov
xchg
div
pop
jo
adc
(bad)
fisubr
xchg
dec
loop
ja
mov
sbb
jmp
inc
adc
aas
sub
cmc
pop
mov
idiv
loopne
adc
add
outs
mov
dec
popa
dec
les
pop
adc
dec
push
lea
push
cli
test
out
std
mov
jo
imul
jl
je
jnp
ret
jno
movs
leave
je
sub
aaa
icebp
sti
popf
xor
and
(bad)
xor
lds
push
adc
xchg
push
sbb
pop
jg
mov
cs
jbe
adc
push
dec
xor
mov
ss
ss
add
adc
repz
cmps
jns
shl
cmps
pushf
inc
pop
sub
call
add
lods
inc
jecxz
jle
call
mov
pusha
inc
clc
sub
inc
outs
daa
jb
es
push
sub
ret
xchg
arpl
test
bound
xor
shl
mov
jno
mov
fiadd
mov
inc
add
mov
mov
xchg
aad
gs
mov
mov
mov
mov
pusha
cmps
inc
xchg
cmp
mov
jns
jnp
outs
out
mov
out
xor
jge
inc
add
retf
lock
outs
fmul
inc
pop
ret
or
mov
add
test
jb
adc
xchg
pop
jmp
inc
lods
jp
xchg
push
and
jmp
inc
inc
jne
arpl
cmc
jne
sar
aam
mov
cmp
in
(bad)
loop
sbb
sub
push
mov
mov
ror
xchg
pop
rcr
push
adc
add
mov
xchg
jge
dec
mov
test
into
add
push
sub
(bad)
sti
jne
ins
or
sbb
rcl
dec
inc
and
scas
cmp
sbb
out
sub
scas
inc
shl
pop
jle
jnp
push
fs
enter
loop
push
push
push
inc
cs
inc
sbb
fisttp
ss
movs
cmps
and
xor
hlt
mov
mov
inc
ret
cmps
mov
ret
sbb
inc
adc
mov
mov
movs
cli
jp
pop
mov
leave
mov
stos
lahf
cdq
loop
rcr
jmp
mul
movs
xor
sbb
xchg
sub
adc
fsub
xchg
popf
pushf
(bad)
(bad)
lock
push
in
push
or
pop
nop
out
push
jge
bound
jg
fisubr
mov
mov
aam
js
push
jecxz
fwait
mov
sti
ds
jl
imul
cli
pop
jge
cdq
and
pop
jp
pushf
sbb
clc
and
iret
mov
mov
cmp
push
cs
(bad)
inc
mov
sbb
adc
mov
add
inc
cmp
and
jnp
scas
repnz
xchg
(bad)
outs
stc
std
in
sub
xor
mov
push
pusha
test
jns
fadd
mov
int3
push
adc
jno
cdq
inc
push
mov
icebp
push
or
ja
lods
aaa
iret
add
aam
xchg
pop
mov
dec
inc
xchg
push
in
xor
fs
or
nop
adc
call
(bad)
movs
add
fldenv
rol
mov
adc
dec
pop
sub
or
adc
cwde
repnz
sti
pop
mov
in
sahf
mov
inc
call
add
in
mov
repnz
sbb
inc
mov
jne
addr16
add
jmp
pop
push
int3
outs
mov
aas
into
jge
inc
rcr
cwde
adc
cmp
cdq
out
add
or
imul
jae
in
push
iret
in
mov
jb
or
ret
aad
pop
dec
in
pop
sbb
push
cdq
hlt
or
fidiv
es
retf
lds
mov
inc
addr16
ins
xchg
loope
dec
call
sti
inc
xor
(bad)
xchg
cmp
out
add
sbb
(bad)
cwde
fsub
ins
mov
fimul
ret
out
or
push
ja
mov
cmp
jbe
out
ds
retf
or
sub
lods
repz
jle
xchg
(bad)
rol
pop
jns
dec
push
add
jae
int3
cmp
adc
out
iret
and
mov
sub
into
leave
push
inc
cmps
popa
push
sbb
xor
mov
jp
mov
loop
fs
ror
neg
mov
xor
pop
test
fldenv
cli
lds
cmp
and
in
ins
iret
ror
mov
dec
adc
jmp
call
mov
(bad)
pushf
and
lea
stos
(bad)
(bad)
or
cdq
inc
mov
enter
aam
data16
mov
js
add
stc
iret
jg
repz
(bad)
cld
out
jmp
out
into
or
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
int3
stos
arpl
xor
shl
jns
popf
into
arpl
cmps
dec
fwait
out
jbe
jae
imul
popf
outs
rcl
cmp
add
mov
stos
sub
arpl
je
fmul
sbb
xlat
push
loopne
add
dec
rcr
pop
lods
jmp
xor
ret
lea
bnd
pop
int
ror
call
adc
sbb
stos
cmps
aam
fmul
pop
imul
xor
lahf
ret
fsubr
sub
and
(bad)
fidiv
lods
rol
imul
vpaddb
sub
js
xor
fwait
push
push
or
mov
jb
nop
ret
repz
ret
jnp
mov
stc
retf
push
mov
pop
xlat
out
sub
loope
pop
cli
mov
nop
adc
outs
mov
add
mov
add
xor
fcom
repnz
cmc
arpl
shl
lock
push
ss
add
cmp
out
(bad)
in
jb
pop
sbb
and
inc
cmp
xor
loopne
loopne
ret
mov
enter
xchg
cmc
mov
(bad)
jae
sbb
repz
mov
pop
adc
ins
jle
push
stos
pop
test
je
gs
mov
xchg
stos
ss
jns
push
(bad)
int3
jmp
adc
sbb
imul
dec
sbb
scas
mov
stc
inc
scas
sbb
shl
mov
sbb
xor
jp
cmp
add
adc
(bad)
int
test
add
push
sub
call
sbb
jae
fwait
and
es
push
test
inc
sbb
adc
mov
jmp
idiv
(bad)
outs
mov
pop
pop
retf
or
or
cwde
mov
loope
mov
xchg
xor
popa
mov
fadd
jae
ds
adc
out
rcl
or
mov
dec
jp
test
sbb
fdivr
adc
jne
retf
ins
and
xchg
sub
inc
push
pop
inc
jg
pop
jns
ds
pop
mov
jmp
cmp
call
jns
mov
imul
mov
mov
retf
xchg
cmp
or
cmc
div
adc
fwait
pop
cdq
sahf
push
call
sub
and
popf
addr16
mov
neg
imul
das
cdq
imul
pushf
dec
jb
mov
dec
ins
(bad)
mov
or
mov
push
adc
shl
ins
aam
xor
lods
mov
out
(bad)
nop
sub
or
(bad)
test
mov
xchg
dec
or
out
cmp
neg
js
or
sahf
pusha
ror
sahf
div
and
in
and
out
repz
lock
mov
les
(bad)
pop
imul
xor
je
sub
or
sbb
stos
jae
xchg
(bad)
adc
sub
sbb
cmp
retf
fs
fnsave
sbb
mov
mov
mov
dec
pushf
mov
xchg
push
aaa
mov
add
lahf
push
cmps
jl
cmc
icebp
fisub
lock
jmp
ss
je
adc
rcl
cmps
aam
mov
sbb
adc
in
jg
push
pop
test
push
add
sbb
out
mov
cmps
js
in
in
fisttp
sub
and
adc
inc
in
fstp
ds
push
or
or
or
test
mov
pop
cdq
test
xchg
push
mov
jecxz
pop
push
add
movq
adc
cmp
packuswb
and
cli
aaa
cs
mov
addr16
out
movs
mov
xchg
inc
jle
jp
xor
lahf
enter
retf
fisubr
int
xor
in
xor
icebp
jmp
jne
daa
push
loopne
hlt
rcr
dec
and
xchg
jmp
popa
mov
mulps
mov
cld
sub
lods
mov
inc
push
ffreep
js
fucom
inc
lods
(bad)
cli
add
ror
(bad)
jo
xor
loop
leave
push
dec
pop
outs
pminsw
mov
jl
xor
outs
retf
xor
test
call
or
jp
aaa
push
xor
jmp
les
push
jbe
inc
pop
sub
(bad)
and
push
mov
inc
(bad)
mov
push
out
or
inc
(bad)
jp
jge
test
cmc
outs
aas
dec
(bad)
test
addr16
ins
xchg
gs
popa
adc
jg
sub
loop
cmp
loope
cmp
sti
outs
push
lods
add
(bad)
cmp
inc
mov
fst
cmp
mov
xor
shr
js
popf
push
xchg
jmp
mov
dec
ret
int
mov
retf
(bad)
mov
xor
add
adc
cmp
stos
outs
scas
push
jecxz
mov
sub
inc
jecxz
sti
aad
pushf
ret
sub
ds
sbb
retf
je
mov
scas
pop
ins
les
mov
in
lods
xchg
test
cli
push
mov
push
stos
cmp
and
jmp
and
xchg
xor
ds
call
lods
arpl
jo
outs
(bad)
xchg
outs
dec
mov
ret
fdivr
std
retf
jge
int3
push
xor
adc
pop
adc
inc
jp
clc
mov
in
ss
lock
je
xor
inc
mov
or
mov
jae
pusha
jbe
xlat
mov
jmp
xor
jo
in
loopne
ror
xor
(bad)
cmp
fmul
mov
je
nop
push
jge
clc
loope
shl
xor
frstpm(287
test
ret
dec
pop
push
mov
and
ja
sub
lds
jmp
sbb
mov
dec
and
inc
pop
pusha
push
test
push
(bad)
mov
add
cs
add
inc
cmps
add
pop
outs
dec
xor
into
and
movs
push
push
xchg
call
adc
cmps
xor
loopne
jg
shr
dec
(bad)
scas
xor
ficomp
xchg
idiv
push
mov
sub
mov
push
and
push
dec
adc
jo
in
gs
pop
popa
xchg
cs
jl
sub
fwait
sar
ins
xor
and
push
in
mov
jno
push
mov
stc
(bad)
retf
jecxz
mov
pop
sbb
sbb
and
add
ins
adc
shl
jns
neg
loop
and
rcr
and
xchg
test
cs
call
adc
pop
ret
inc
dec
call
sti
(bad)
je
es
inc
pop
mov
(bad)
ss
mov
fsubrp
pop
(bad)
xchg
scas
cdq
imul
jae
add
call
jmp
(bad)
cmps
jno
mov
sbb
mov
les
fstp
mov
je
push
and
lea
arpl
ret
inc
dec
sub
dec
shl
cmc
jns
iret
in
inc
inc
addr16
dec
cmp
push
mov
test
sti
add
cdq
or
hlt
dec
inc
or
test
inc
enter
sbb
ret
push
dec
mov
lahf
cmp
sub
test
inc
test
adc
cmp
inc
popf
(bad)
movs
ja
mov
sar
pop
js
cs
add
fidivr
mov
lods
sub
pushf
stos
and
or
fs
pop
in
jne
dec
popa
cmp
xchg
sbb
mov
sub
adc
lods
fcmove
popf
retf
outs
bound
sub
and
cld
test
xor
cmp
stos
sub
add
push
fucompp
sub
pop
cli
fsub
dec
xchg
dec
cdq
cmps
jns
out
pop
sahf
scas
sub
sbb
pop
sub
or
dec
rcl
jns
fidivr
dec
pop
add
mov
jp
je
pop
mov
lock
in
xor
sbb
pushf
pop
in
out
mov
xchg
jbe
and
and
inc
std
aas
xchg
imul
(bad)
lock
call
sti
sbb
(bad)
xchg
adc
push
mov
or
rol
push
and
bswap
mov
mov
xchg
shr
inc
inc
(bad)
out
jns
mov
xor
dec
inc
adc
push
or
push
push
adc
push
std
in
je
fistp
push
ds
sbb
pusha
jne
cmp
fld
dec
cld
pop
adc
stos
mov
inc
icebp
pop
mov
pop
sub
sahf
adc
cmp
(bad)
pop
and
adc
mov
jnp
mov
nop
pop
sub
popa
mov
pop
ja
(bad)
mov
push
(bad)
(bad)
imul
(bad)
jge
add
popf
push
adc
shr
or
out
test
sub
or
enter
mov
xchg
jmp
out
into
add
sbb
int3
psrld
ror
ja
xor
movs
pop
setae
or
push
aam
jge
push
ss
inc
mov
sbb
ficom
pop
mov
sbb
jmp
stos
add
leave
lods
jle
xlat
bound
add
test
adc
sub
ficomp
add
leave
stc
dec
pop
(bad)
das
push
call
je
lock
scas
dec
test
ret
add
mov
jl
fwait
jp
aam
add
retf
jo
iret
in
lods
inc
jbe
je
fimul
pop
mov
test
movs
fcmove
hlt
int3
and
mov
cli
cmp
cmp
dec
xchg
mov
gs
daa
and
loop
add
jb
cmp
mov
push
out
imul
in
mov
adc
mov
jl
dec
retf
mov
aaa
push
mov
test
rcl
sub
lds
mov
repnz
repz
xchg
fist
test
mov
inc
(bad)
pusha
lods
add
ds
lods
pop
jl
aaa
call
inc
xor
pop
lods
loopne
xchg
hlt
movs
jns
cwde
(bad)
adc
lods
jmp
xor
in
lea
mov
add
(bad)
sahf
int3
in
test
pop
or
adc
mov
aaa
sti
pop
mov
pop
clc
imul
xor
(bad)
jp
aas
mov
sti
in
stos
sub
sti
movs
jl
scas
mov
mov
push
jnp
lahf
push
xor
jb
cmps
dec
pop
aas
or
int3
push
(bad)
loopne
in
jp
hlt
fst
cdq
in
faddp
or
cmp
push
inc
stc
add
enter
addr16
sub
jo
push
and
add
addr16
(bad)
lods
dec
in
and
addr16
repz
mov
pop
lods
fidivr
repz
out
sub
(bad)
xchg
dec
and
pop
mov
ss
and
jmp
sub
dec
aad
mov
mov
xchg
std
pop
jmp
ret
mov
fsub
test
lock
sub
inc
dec
sbb
jnp
xor
std
icebp
movs
daa
push
retf
mov
adc
in
neg
jecxz
mov
or
mov
lahf
test
popa
retf
pop
mov
shl
sar
inc
cmp
xchg
fcom
mov
in
and
movs
(bad)
mov
out
gs
xchg
xchg
fisubr
mov
xchg
mov
sbb
dec
adc
call
into
stc
jp
push
ins
xchg
cmc
pop
scas
dec
cmp
sbb
jbe
pop
(bad)
scas
out
nop
sbb
sbb
dec
adc
pop
or
push
ins
mov
test
scas
cmps
jbe
mov
mov
mov
(bad)
dec
hlt
mov
sub
scas
scas
ficomp
jge
jg
cld
or
aas
inc
nop
sar
and
pop
jge
sub
aas
cmp
in
jge
enter
dec
(bad)
push
arpl
ins
and
ret
loopne
ja
fild
jnp
adc
inc
cmp
(bad)
fs
call
cmp
fcom
sbb
aas
xor
jno
popa
test
cmp
sub
imul
pop
push
push
fdivr
cdq
ins
or
jecxz
mov
mov
cmp
lods
mov
xor
out
adc
mov
shr
out
lods
mov
movs
outs
xchg
dec
ins
pop
mov
push
adc
popa
bt
sbb
cmc
mov
push
jecxz
pop
xchg
push
jbe
or
xchg
sbb
outs
pushf
xchg
mov
mov
aad
enter
dec
sub
push
rep
push
cli
mov
scas
lods
xchg
fidivr
mov
mov
pop
adc
xlat
sub
xchg
or
and
pop
sbb
movs
mov
mov
sbb
inc
xchg
jmp
in
mov
mov
data16
mov
and
jbe
jb
scas
in
pop
add
aaa
mov
test
(bad)
and
mov
push
sub
or
xor
mov
lahf
mov
cmp
xchg
jnp
cmc
mov
mov
std
dec
mov
mov
mov
movs
mov
xor
ja
das
test
call
mov
daa
data16
pop
mov
mov
scas
mov
outs
(bad)
cld
jb
out
jb
jo
sbb
jmp
sbb
and
mov
lods
lock
pop
mov
or
jnp
cli
pop
je
jae
sub
cmp
call
and
cmp
stos
test
shl
xor
xchg
fcmovu
add
loopne
inc
fsubp
pop
dec
pop
mov
sbb
push
xchg
jmp
and
adc
jle
xor
mov
xor
mov
pop
adc
in
fwait
outs
call
mov
mov
cmc
fdiv
aaa
in
stc
outs
cmc
push
ss
jae
add
xchg
test
lock
push
std
int
in
xchg
les
ins
mov
call
nop
iret
fidivr
call
xchg
inc
popa
inc
gs
test
ficomp
inc
pop
aaa
mov
cmp
sbb
not
cmp
arpl
outs
jmp
push
xor
(bad)
mov
(bad)
fdiv
sub
mov
mov
sbb
imul
repz
ins
sti
cli
enter
mov
cli
outs
xchg
rcr
xchg
mov
les
scas
(bad)
not
les
xchg
xor
inc
mov
ss
sahf
xchg
cld
clc
in
out
push
mov
inc
or
lds
stos
cmc
inc
cwde
pusha
sub
aaa
mov
push
dec
adc
push
mov
imul
test
cmc
arpl
push
loope
adc
and
int3
push
mov
jno
icebp
pop
and
into
sahf
xchg
xor
ret
sub
ror
dec
jmp
cld
jecxz
xor
sub
add
xor
mov
inc
xchg
(bad)
bound
cld
fucomip
fwait
add
or
retf
jne
or
cdq
xor
mov
scas
mov
sbb
test
push
dec
shl
mov
and
lahf
call
jl
xchg
mov
or
scas
inc
pop
pop
cmp
rcr
imul
scas
lods
addr16
(bad)
cmp
inc
xchg
fild
fisub
shl
mov
jnp
fstp
(bad)
pop
cmp
push
push
clc
or
xor
fidiv
stc
xchg
loope
cld
mov
fsubr
xchg
stos
movs
in
inc
mov
lods
mov
lods
jle
loop
fmul
mov
std
test
test
arpl
stc
pop
push
ja
retf
rcr
out
icebp
jg
cs
inc
(bad)
lds
dec
div
iret
mov
mov
movs
xor
inc
jo
adc
(bad)
outs
retf
jle
inc
mov
jae
mov
jg
sbb
dec
fadd
sub
and
ficomp
ret
xchg
cdq
sub
mov
sub
ja
sbb
jo
in
loopne
jg
stc
out
jg
stc
out
sbb
lock
imul
jp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
and
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
pop
inc
in
rol
lock
xchg
int
adc
jb
fxtract
sbb
xchg
test
sbb
js
jo
int3
and
inc
icebp
call
sub
mov
jnp
idiv
cmp
jae
(bad)
xor
and
fisubr
movs
test
pop
xchg
dec
jecxz
shl
loop
jecxz
loop
sub
xchg
int
fucom
rcl
push
and
dec
enter
inc
pop
mov
(bad)
sbb
dec
ins
les
pop
xchg
es
and
cli
cli
gs
ins
popf
int3
movs
dec
or
adc
lods
jmp
aad
out
xchg
into
movs
(bad)
loope
in
ss
add
xchg
mov
or
add
fdiv
mov
jns
in
jge
inc
dec
inc
push
xor
daa
dec
aaa
leave
xor
test
cwde
cmp
xor
sahf
xchg
mov
inc
cld
inc
retf
aas
adc
mov
lea
lahf
cmps
add
or
call
pop
out
inc
mov
rol
cmc
loopne
(bad)
cdq
jp
nop
shr
adc
test
inc
lea
cmps
rcr
sbb
out
(bad)
ss
pop
sahf
stos
movs
clc
pop
sub
pop
mov
mov
sub
jbe
pop
stos
mov
or
rol
or
xchg
mov
and
add
mov
sbb
sbb
cmp
es
jb
aaa
inc
jmp
leave
inc
clc
int
mov
push
mov
mov
js
hlt
mov
retf
cmc
in
aam
xchg
cwde
sbb
jo
xor
xlat
imul
pop
mov
fwait
pop
pop
add
fdivr
xchg
push
repz
push
add
ffree
pushf
clc
mov
lds
xchg
adc
shl
neg
add
(bad)
mov
push
pop
aaa
test
jge
aad
inc
hlt
jle
(bad)
jl
xlat
jmp
adc
inc
jns
dec
movs
mov
mov
xchg
(bad)
and
loope
inc
xchg
test
aam
mov
jnp
iret
mov
and
cmps
jae
out
fsubr
in
push
jp
cmp
push
lods
lahf
imul
sar
ins
arpl
sysret
ja
sysenter
dec
(bad)
shl
xchg
sbb
pop
sub
cmp
ja
sbb
rol
rcl
adc
retf
sahf
pop
mov
ret
(bad)
and
inc
sbb
scas
xchg
jmp
ins
push
dec
xchg
mov
aaa
mov
xchg
(bad)
cmp
mov
test
fcomi
cmp
fsubrp
aaa
aam
adc
and
fisubr
dec
push
out
scas
(bad)
cmps
adc
dec
inc
(bad)
aas
xor
ins
test
loopne
mov
xchg
and
fcom
psubq
pop
or
not
cld
into
and
jecxz
sbb
fucomp
mov
ror
cmp
xor
sub
jmp
movs
cwde
push
dec
je
hlt
adc
pop
cs
mov
ins
int3
out
(bad)
push
sbb
and
pushf
(bad)
or
sub
jae
fsubp
in
imul
loopne
xor
jae
adc
shl
push
mov
jne
adc
mov
test
test
mov
dec
jmp
and
mov
mov
adc
leave
inc
out
int
icebp
je
(bad)
push
dec
scas
scas
mov
retf
push
and
sub
inc
cmp
in
push
loope
retf
rep
or
(bad)
ja
mov
out
sbb
repz
out
repz
sbb
cmp
sbb
das
js
repz
mov
adc
mov
dec
(bad)
adc
mov
cmps
mov
or
jb
xor
jbe
jp
sbb
jmp
and
pop
xor
mov
cs
(bad)
sub
sbb
std
inc
sar
xchg
fadd
lods
jl
stos
movs
jmp
inc
push
sub
sub
popf
adc
push
mov
xor
hlt
leave
jno
xchg
ror
scas
add
repnz
sbb
ins
jbe
cmp
ja
xchg
jmp
iret
retf
push
and
test
icebp
shl
push
shl
xchg
dec
outs
add
cs
push
sub
outs
or
call
inc
imul
test
lock
inc
movs
call
cmp
add
jg
gs
xor
int3
mov
mov
lods
mov
test
ficom
fstp
aaa
pop
inc
test
dec
inc
loop
and
ins
lods
mov
mov
mov
and
xor
addr16
jno
test
mov
test
clc
xchg
add
adc
jbe
inc
jnp
lea
mov
fsubr
cmp
das
pop
add
lea
das
test
int3
sbb
test
bound
or
cmc
mov
stos
int3
test
daa
cmp
out
add
jno
xchg
outs
inc
dec
leave
mov
loope
mov
pop
icebp
lock
dec
out
mov
ss
ja
sub
rcr
test
(bad)
icebp
lock
or
mov
leave
jbe
bound
mov
push
cmp
sar
add
fbld
aaa
sbb
mov
out
enter
cmps
push
test
retf
sbb
jae
std
xlat
jp
lahf
data16
mov
out
mov
(bad)
loope
jbe
dec
loopne
sub
dec
push
dec
jo
jo
icebp
(bad)
pop
xchg
push
dec
in
pop
xor
mov
xchg
jl
mul
pop
cmps
ds
cli
push
lods
ins
scas
ds
sbb
mov
push
mov
xor
(bad)
out
popf
outs
mov
jg
repz
jp
fbld
in
hlt
scas
adc
pop
lock
lock
hlt
out
ds
or
mov
mov
(bad)
stc
lds
cwde
pop
ror
jb
push
rol
push
sbb
mov
inc
sbb
push
(bad)
aas
out
xchg
inc
xchg
jecxz
xchg
test
sbb
mov
xor
cmps
lods
xor
loopne
and
stos
push
dec
scas
fisub
into
mov
popf
imul
cmp
push
push
imul
adc
test
sub
cmc
scas
pushf
jbe
sahf
push
dec
jo
sub
out
(bad)
mov
sub
ret
cwde
mov
loope
push
sub
call
xlat
dec
sub
in
data16
bound
cwde
scas
loop
std
out
rol
fist
mov
movs
pop
push
lahf
mov
xlat
rcl
pop
repnz
sbb
loope
jo
(bad)
mov
fwait
jae
jae
ins
jnp
jmp
jg
xchg
pop
sti
or
pushf
cmp
scas
xchg
and
jmp
imul
aaa
rcl
scas
(bad)
and
aam
push
mov
pusha
pop
dec
cdq
inc
iret
lods
imul
clc
bound
jecxz
push
scas
xor
scas
xor
in
ins
xchg
pop
jmp
daa
call
sbb
adc
(bad)
cmp
or
ss
cmp
sbb
xchg
shl
jb
adc
popa
repz
pop
mov
push
ja
test
fstp
sbb
or
jl
daa
mov
out
popf
(bad)
add
cs
repz
mov
stos
pinsrw
lods
pop
gs
in
cmp
sbb
adc
rcl
and
ret
(bad)
xlat
push
jmp
cli
mov
lods
mov
outs
adc
punpckhbw
mov
add
inc
adc
int3
cmp
mov
inc
add
into
sub
rcr
jle
adc
call
fucomp
or
mov
fcom
ret
inc
out
lds
call
or
mov
cwde
push
fisub
push
imul
jnp
sbb
or
mov
xchg
aad
in
jns
fst
cmp
dec
cs
mov
imul
and
jae
and
shl
xlat
out
leave
lock
stos
cs
or
test
jmp
imul
loop
xchg
inc
mov
mov
ins
xchg
dec
mov
test
adc
movs
mov
pop
mov
jl
cld
mov
and
iret
push
pop
mov
mov
cmp
xchg
mov
jmp
xchg
or
sbb
call
push
or
xor
xchg
or
sbb
mov
mov
xchg
(bad)
mov
dec
add
xor
xor
xor
xor
xor
xor
xor
xor
pop
add
jg
mov
imul
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
rcr
jno
aad
ror
test
xor
pop
jecxz
aaa
cmps
fwait
imul
nop
outs
iret
add
adc
jg
call
je
and
lods
adc
sbb
jae
jne
ins
jle
les
pop
xchg
and
outs
shl
sahf
pop
rol
nop
cmp
and
sbb
daa
xchg
sahf
sub
dec
jl
xchg
imul
fisttp
xor
xchg
sbb
fs
adc
inc
scas
in
xor
xor
mov
jmp
aas
and
push
push
mov
call
(bad)
inc
movs
movs
mov
cdq
mov
inc
ror
jg
dec
or
cdq
add
stos
outs
jae
je
jbe
jno
sub
add
mov
push
dec
shl
xor
fdivr
xchg
ja
(bad)
add
mov
test
int3
jmp
or
push
xlat
adc
imul
jmp
stos
add
mov
xchg
das
dec
out
inc
rol
mov
push
movs
push
add
cmp
jb
lods
aad
push
cmp
mov
sub
dec
cld
xchg
sahf
or
sbb
or
mov
stos
push
call
sub
jmp
(bad)
mov
mov
loop
retf
pop
or
push
loope
test
jmp
stos
and
add
dec
adc
dec
push
push
inc
pop
out
in
jmp
inc
test
xor
sbb
push
lods
xchg
pop
fs
cli
mov
mov
dec
fldcw
jg
adc
jbe
sti
jmp
into
int
sub
(bad)
sbb
or
add
inc
call
mov
imul
mul
xchg
icebp
mov
dec
iret
xchg
icebp
jecxz
push
mov
in
cwde
aas
ins
ret
aaa
lods
mov
outs
pop
jecxz
movs
js
and
fcomp
jne
cmp
sub
aaa
leave
pop
mov
xchg
mov
xor
jl
stc
(bad)
sti
pop
xchg
add
jae
jns
cs
cmc
jecxz
mov
adc
adc
xchg
sub
inc
xor
mov
sbb
jg
jmp
mov
ins
pop
addr16
pop
adc
pop
cld
into
jmp
mov
push
lock
lock
out
dec
ss
fist
sub
cmps
das
retf
(bad)
cs
jo
xchg
pusha
jle
lds
(bad)
xchg
mov
mov
in
sar
aaa
(bad)
nop
fimul
mov
mov
aas
cld
popa
and
cmp
sub
test
pop
xchg
retf
push
or
bound
ins
ror
popf
dec
sbb
aad
add
cmp
out
fist
out
jbe
aaa
sbb
sub
push
jecxz
aas
jp
xchg
std
imul
nop
inc
xor
mov
cli
and
adc
pop
mov
jb
push
lds
add
fisubr
call
jle
mov
jno
xor
test
pop
sar
lods
outs
mov
push
xchg
sahf
fmul
dec
cmp
out
sbb
in
ja
jns
popf
int
xor
dec
loopne
fmul
das
jle
pop
xor
fmul
mov
and
xlat
mov
mov
div
sbb
mov
cmp
push
repnz
outs
cmp
lods
and
pop
mov
test
div
call
dec
jo
mov
xchg
jl
test
leave
sbb
jecxz
cmp
and
push
loop
inc
aam
sbb
and
sbb
aad
pushf
shr
jo
lea
outs
ins
int
lahf
ret
mov
add
pusha
ret
ret
add
cmps
ror
(bad)
lods
stos
xchg
sbb
mov
and
cmp
sbb
std
xor
cdq
in
mov
outs
push
xchg
repz
add
call
clc
jle
enter
(bad)
mov
mov
test
mov
hlt
pop
pop
sub
int
pop
or
dec
rcr
jle
nop
xchg
sbb
and
rcr
push
push
(bad)
mov
xor
mov
int
sbb
sbb
jmp
imul
dec
fdivr
jno
and
gs
jp
xor
inc
xor
cwde
xor
mov
jae
stc
out
imul
sbb
cmp
xchg
adc
repz
cmp
test
imul
mov
push
and
sti
sahf
(bad)
push
adc
sbb
js
dec
jo
and
icebp
mov
out
sbb
and
pusha
mov
push
mov
js
clc
push
add
jae
call
int3
shr
xor
cmp
(bad)
xor
shr
fild
aaa
cmp
push
mov
fstp
imul
xchg
jo
mov
gs
lea
mov
xchg
mov
dec
dec
adc
sbb
leave
shl
push
icebp
mov
mov
aas
in
jle
enter
dec
inc
push
jno
gs
test
mov
add
pushf
adc
popf
pop
push
aas
cmp
push
in
xor
pop
mov
ror
js
mov
xor
movs
cdq
and
(bad)
arpl
std
mov
or
rcl
jne
stos
rcr
push
and
jnp
mov
rcl
dec
mov
xchg
add
jnp
sbb
xor
sub
call
mov
cmp
sub
dec
int3
lds
sub
push
out
push
xor
mov
mov
dec
popf
and
mov
out
cwde
sti
hlt
fwait
adc
cmp
scas
test
lahf
sub
addr16
pop
mov
mov
jb
ficomp
jecxz
(bad)
sti
hlt
mov
cmp
xor
xchg
and
push
test
(bad)
stos
adc
test
sub
sub
sub
cmps
and
sub
es
shl
dec
pop
jle
fisttp
inc
fstp
cmp
movs
push
loop
cmps
retf
jae
int3
pop
or
loope
and
xchg
pop
in
xor
fisubr
pop
mov
and
std
loopne
jmp
jg
jle
std
scas
lds
mov
mov
push
movs
and
mov
xor
or
pop
dec
xor
(bad)
scas
xchg
scas
and
mov
lods
fimul
lock
imul
mov
pusha
xor
push
dec
stc
jbe
lods
xchg
push
mov
push
dec
(bad)
mov
xchg
(bad)
fdivr
test
or
mov
hlt
out
ret
sahf
sbb
inc
fs
and
jge
loope
sbb
jbe
xchg
jle
call
cwde
lock
sbb
pop
jmp
xchg
pop
lock
dec
cwde
sti
int
outs
jmp
fisubr
push
stos
cmp
and
ret
call
push
and
mov
arpl
sti
dec
mov
stos
push
out
call
repnz
cs
scas
sbb
mov
and
mov
xor
lods
es
fimul
mov
call
mov
push
dec
fistp
mov
movs
shl
push
or
addr16
mov
mov
sub
jo
push
push
imul
fistp
push
xchg
mov
dec
push
jnp
fidiv
stos
or
sbb
pushf
popf
jnp
inc
movs
pop
pop
sbb
push
mov
int
bound
test
cmc
ret
(bad)
pavgb
jae
xchg
sti
mov
push
arpl
leave
int
sub
add
shl
mov
dec
mov
ss
and
mov
ins
imul
push
out
mov
pop
std
cmc
adc
retf
mov
cmp
mov
xor
adc
push
jmp
xor
imul
inc
retf
and
ins
dec
jecxz
ficom
pop
push
sub
cmp
outs
movs
nop
add
cmps
aam
jno
cmp
test
jmp
into
sti
rcr
cmp
lea
push
or
or
mov
adc
repnz
(bad)
mov
mov
clc
xor
(bad)
ret
hlt
sub
mov
jae
adc
cli
dec
ins
add
xor
call
cmp
stos
cwde
dec
dec
xor
aaa
dec
idiv
mov
xchg
fisttp
cmp
fcomp
xchg
inc
in
pop
pushf
add
fiadd
les
sahf
js
inc
cmps
inc
call
mov
adc
movs
in
cmps
outs
mov
jne
test
and
aam
mov
ss
ss
pop
sub
sbb
dec
ror
push
(bad)
mov
pop
xchg
xchg
adc
rcr
lods
dec
jbe
adc
mov
cwde
jmp
cs
inc
inc
add
mov
mov
imul
dec
push
jmp
stos
xchg
mov
pop
aaa
jmp
pop
mov
lds
jae
ror
mov
fisttp
outs
ins
lock
das
test
adc
cmp
or
push
xlat
mov
jne
dec
sbb
push
nop
dec
int3
xchg
or
arpl
cld
int
push
repz
dec
sub
push
lods
imul
xor
xchg
ret
or
js
jb
cmp
jb
sub
loope
sub
adc
add
ficom
shl
punpcklbw
add
mov
aaa
sbb
or
outs
das
pop
cmp
les
(bad)
(bad)
jmp
xor
and
aad
outs
mov
mov
xchg
icebp
popa
sbb
sub
and
(bad)
aad
pusha
mov
scas
ret
nop
jmp
jmp
mov
(bad)
fild
movs
lds
dec
sti
inc
cmp
xor
push
or
(bad)
inc
push
ret
xor
xor
ret
jl
and
sbb
not
mov
cwde
icebp
outs
pop
sbb
pop
pop
cmc
push
lods
ds
add
adc
mov
sub
ret
enter
xchg
sub
push
daa
and
sar
int
cld
and
std
mov
shl
add
das
add
scas
adc
jmp
inc
test
cmp
sub
cmp
or
repz
mov
mov
push
add
aaa
inc
push
nop
mov
jne
push
shr
mov
push
mov
hlt
leave
push
cmps
mov
in
pop
imul
call
add
mov
(bad)
mov
push
xchg
mov
cmps
pop
aaa
mov
sbb
(bad)
ret
xchg
inc
jge
retf
cmps
cmps
jo
jmp
mov
mov
test
cmp
lods
pop
inc
xchg
inc
mov
xchg
mov
ret
inc
or
inc
inc
jp
mov
in
fs
dec
loop
pushf
inc
xor
ds
jb
aas
mov
and
push
xlat
mov
sub
pop
xchg
push
mov
dec
sbb
jbe
push
mov
mov
lahf
fwait
test
add
jg
mov
cmp
movs
outs
daa
outs
mov
sbb
popf
cmps
mov
aad
scas
mov
aam
lods
mov
lods
das
cwde
sub
or
jmp
fcom
mov
loope
push
mov
(bad)
stos
xchg
add
xchg
out
push
lods
jl
jg
pop
pop
mov
jno
cmp
sub
inc
mov
cmc
outs
dec
enter
cmps
or
dec
out
cmp
mov
sbb
into
jecxz
sar
mov
mov
js
jmp
in
adc
mov
dec
retf
mov
push
jne
cs
pop
ja
or
mov
ins
jbe
pop
xchg
pop
(bad)
frstor
pop
inc
cmps
sub
icebp
popf
mov
fwait
js
(bad)
cmp
cwde
or
mov
arpl
rcr
pop
lock
enter
sbb
je
jle
pop
adc
sub
adc
sbb
jl
aad
sub
fdiv
dec
mov
sub
push
les
push
rol
xchg
mov
push
gs
mov
(bad)
pop
aam
or
lods
int
arpl
or
or
sbb
ja
jg
sbb
pop
push
push
leave
or
adc
push
aad
sub
lahf
mov
cmc
add
jecxz
mov
loope
daa
jo
push
iret
call
push
cmp
jmp
xor
ret
xchg
pop
pushf
xor
fwait
into
adc
(bad)
iret
cmc
out
push
test
gs
pop
mov
loop
dec
leave
xor
sahf
sbb
pop
sbb
jp
xor
inc
lods
pop
es
mov
enter
and
jae
xor
jg
jnp
jbe
adc
test
cmp
xchg
push
ins
jmp
or
or
sub
add
sub
(bad)
push
out
mov
es
pop
cmp
cmp
pop
add
and
jecxz
shl
lahf
mov
jb
add
shl
out
push
and
push
mov
cs
jne
stc
xor
cdq
push
pop
arpl
mov
aad
and
(bad)
scas
add
test
fwait
jg
jnp
rol
dec
xlat
lods
push
adc
jmp
into
inc
mov
out
push
inc
inc
pop
fwait
lods
popa
cdq
or
add
mov
call
fs
pop
fisttp
(bad)
rcr
dec
loop
arpl
js
into
mov
scas
or
pop
cld
cmp
in
std
pop
cs
mov
jne
int
mov
scas
(bad)
adc
jne
or
push
cmp
add
mov
test
xchg
fild
shl
push
sbb
lds
fstp
into
outs
or
or
dec
idiv
xchg
jnp
xchg
loope
adc
cdq
or
movs
xor
mov
or
jbe
cwde
jmp
or
mov
std
dec
mov
je
sub
out
pop
sti
push
cld
inc
add
dec
outs
jg
cmp
shr
inc
pop
in
les
test
imul
in
and
ficom
das
lock
(bad)
retf
les
mov
sar
imul
shr
cmp
pop
push
cmp
popa
lock
shl
in
sub
xor
xor
sbb
out
arpl
ds
mov
bound
arpl
js
popf
pop
xor
xchg
sub
cwde
inc
jecxz
leave
fsubrp
fist
push
repnz
or
lahf
sub
icebp
(bad)
scas
out
iret
push
or
call
add
jecxz
mov
cmp
cdq
repnz
xchg
cmps
cmp
mov
mov
loop
daa
or
dec
movs
mov
loopne
dec
and
cmps
mov
lahf
or
imul
dec
in
mov
aad
mov
fdivr
dec
dec
inc
ret
jno
cdq
jle
stc
mov
sbb
xlat
cmp
(bad)
jle
es
jmp
in
xchg
mov
jge
push
mov
push
xchg
mov
xor
jmp
pop
das
sub
sub
cmps
dec
and
mov
dec
push
paddq
mov
jne
aam
popa
jle
(bad)
scas
jmp
mov
sbb
mov
test
sbb
stos
or
cs
mov
dec
pop
lea
mov
into
mov
jmp
adc
pushf
dec
dec
and
inc
ret
push
push
outs
xlat
jns
call
adc
or
shr
mov
cmp
add
mov
mov
inc
sbb
jno
or
sbb
cwde
cmc
jno
repz
test
pop
xor
fsub
enter
ror
mov
xor
xlat
pop
push
mov
div
adc
jg
stc
out
jg
stc
out
jmp
sar
jo
icebp
push
ds
stos
sbb
add
add
dec
inc
scas
inc
pusha
or
pop
add
add
aad
mov
ins
xor
nop
les
pop
xchg
push
xor
aad
call
inc
aad
js
pop
xchg
mov
xchg
sub
xor
popf
jbe
or
or
or
cmp
pop
xor
shr
adc
and
xor
cdq
sub
lods
into
cli
idiv
hlt
sub
dec
in
in
aad
cli
jne
ja
jbe
gs
sub
ret
mov
xchg
add
push
lock
in
out
jecxz
and
pop
sub
push
jg
jl
js
imul
add
dec
or
arpl
adc
test
mov
push
movs
dec
hlt
sub
inc
jg
ret
mov
pop
mov
dec
test
xor
(bad)
ret
mov
jo
cmp
or
inc
loop
inc
(bad)
pushf
jl
xlat
mov
scas
pop
lahf
fcmovnbe
aaa
inc
retf
repz
cmp
xchg
aas
mov
in
mov
push
test
cmps
imul
add
inc
dec
jle
xor
inc
mov
les
pop
loop
out
add
cdq
inc
popf
xchg
sbb
ror
dec
adc
ja
jl
bound
ins
cmc
adc
push
loope
scas
repnz
popa
xor
dec
movs
xor
adc
jg
mov
mov
(bad)
jp
mov
test
(bad)
gs
out
sbb
test
idiv
jno
mov
leave
mul
mov
pop
lods
add
ror
sahf
cli
clc
push
into
repnz
xor
dec
xchg
push
xchg
retf
daa
frstor
or
cdq
mov
add
std
mov
outs
jno
mov
mov
pushf
cmc
dec
test
inc
addr16
xchg
jo
xlat
jecxz
jl
push
and
movs
cmps
mov
popa
pop
push
lods
push
jae
push
pop
dec
cmp
retf
push
dec
jg
pop
and
fwait
test
pop
sbb
jno
fbstp
dec
stos
push
adc
ds
or
pop
sbb
je
cmps
ins
mov
inc
fimul
inc
lea
jge
inc
or
pop
gs
lds
push
xchg
jae
xchg
movs
cmp
dec
dec
ss
mov
or
pop
fs
cdq
mov
or
mul
(bad)
jmp
arpl
and
hlt
pop
retf
pop
retf
adc
pop
mov
cmp
push
push
mov
push
repz
xlat
inc
mov
scas
ret
in
mov
pusha
add
test
push
jmp
shl
popf
pop
mov
xchg
mov
sub
mov
jne
pop
lods
fsubrp
fs
inc
pop
fnstsw
pushf
xor
sub
cmp
repnz
test
pop
or
inc
rcr
mov
sub
cmc
stos
add
and
xor
jmp
add
rcr
sub
popa
dec
test
loope
pushf
push
xor
jmp
sub
stc
mov
ret
inc
xlat
mov
in
xor
dec
nop
out
mov
addr16
cmp
sbb
lea
jns
jmp
mov
add
out
dec
xchg
ficomp
sub
js
repnz
mov
(bad)
int
mov
stos
ins
outs
ds
jle
mov
sub
and
nop
out
jg
xchg
lea
xchg
xchg
scas
loop
cli
imul
sbb
pop
jmp
cdq
mov
inc
mov
std
jmp
les
sub
into
mov
xchg
fadd
jb
test
xor
call
jp
rol
push
imul
jo
and
test
ins
enter
je
sahf
aas
cmc
push
jecxz
shr
bound
cli
mov
xor
or
in
add
pop
inc
aad
sub
dec
adc
push
enter
lods
ss
mul
mov
push
lahf
xor
pop
push
test
jg
scas
mov
add
sbb
cmp
dec
leave
fistp
sahf
adc
cwde
les
cmp
sti
jecxz
cld
sti
fadd
mov
imul
sbb
aam
(bad)
lea
cmp
rol
outs
or
push
mov
pusha
cld
(bad)
pop
mov
loopne
or
and
jne
pop
adc
(bad)
cmp
xchg
repz
mov
jns
jnp
addr16
xchg
test
push
or
jmp
cdq
sub
les
add
aad
pmaxsw
out
dec
into
cmp
xacquire
fidiv
pop
dec
pop
cs
xchg
or
fwait
pushf
mov
lds
lds
cs
clc
or
fist
mov
scas
out
fmul
mov
cmps
int
repz
adc
je
fistp
cmps
dec
cli
inc
jmp
and
push
push
mov
vcvttss2si
pushf
push
jl
cmp
sbb
inc
repz
jo
leave
loopne
in
retf
icebp
aas
imul
sti
pop
push
sbb
call
push
inc
lock
pop
jp
lods
icebp
enter
loop
sub
test
es
ds
jnp
inc
jge
sbb
inc
mov
fisubr
in
jns
jl
fcomp
fidivr
adc
mov
mov
push
lods
mov
xlat
sbb
cwde
lahf
mov
push
or
xchg
adc
pushf
add
sbb
xchg
xchg
mov
retf
mov
dec
pop
pop
xor
mov
hlt
stc
and
retf
sbb
jmp
pusha
mov
cmps
mov
mov
sbb
add
(bad)
ins
mov
nop
adc
lock
cmp
ss
mov
bound
cmp
inc
push
iret
mov
sub
adc
rcr
jl
mov
(bad)
xchg
retf
fs
pushf
xchg
and
(bad)
call
xchg
sahf
test
cmps
mov
add
inc
frstor
and
mov
mov
adc
lgs
icebp
or
pop
cmp
mov
add
push
vpaddsb
fidivr
dec
xchg
pushf
pop
outs
or
nop
or
dec
mov
jnp
neg
rcr
repz
xor
dec
outs
ss
pop
retf
xchg
xor
adc
push
jb
jo
shl
arpl
(bad)
push
retf
test
bound
fld
mov
inc
inc
sub
mov
and
add
cmp
int3
shl
sub
add
mov
scas
and
push
mov
sbb
adc
or
xor
cmps
clc
add
test
inc
aad
jae
cmp
cmp
lock
stos
mov
jno
cmps
test
aad
xor
dec
cmps
or
(bad)
int
arpl
repz
loopne
bound
call
mov
dec
push
jle
inc
imul
cmp
pop
and
push
and
inc
pop
or
jge
repnz
(bad)
push
mov
call
push
pop
rcr
sbb
or
pop
cmps
mov
ja
mov
fstp
ds
pop
enter
jno
scas
push
add
scas
(bad)
fidiv
jmp
and
cmp
ins
(bad)
mov
aaa
mov
or
aam
mov
test
outs
mov
push
jl
add
mov
sub
push
loope
idiv
pop
pop
adc
loopne
adc
imul
xor
iret
inc
scas
cmp
ja
push
std
icebp
repnz
xchg
loope
lea
movs
call
clc
push
adc
test
or
test
xor
or
add
pop
imul
sar
fwait
out
jg
mov
sub
dec
nop
mov
mov
nop
xlat
sbb
mov
dec
les
jp
shr
dec
imul
xor
icebp
mov
imul
popa
add
movs
pop
pop
jne
retf
dec
bound
mov
popf
adc
popa
cmps
movs
enter
jns
daa
imul
into
leave
mov
fnstcw
cmps
dec
push
pop
popf
(bad)
test
mov
movs
dec
inc
jge
iret
jnp
dec
or
jmp
stos
or
loopne
sahf
dec
cmp
mov
retf
add
jbe
clc
or
jge
or
mov
push
test
sbb
jl
daa
inc
in
sbb
add
stos
jmp
cmp
pop
jb
adc
addr16
push
dec
shl
imul
test
push
cmps
jecxz
fwait
push
add
das
outs
jp
inc
lock
dec
scas
add
sti
bound
pop
jno
push
jp
cmp
inc
xor
cdq
mov
das
iret
adc
dec
and
cmp
dec
mov
pop
ret
jne
push
cmp
into
push
cmp
mov
sbb
in
imul
adc
out
aas
cld
push
cmp
adc
pusha
mov
aaa
inc
dec
aas
pop
lds
cmps
dec
(bad)
lods
inc
test
xchg
push
and
pusha
stos
cld
dec
cmp
cmc
retf
mov
inc
cmc
push
test
call
in
jmp
push
lahf
mov
pop
dec
ror
fidivr
iret
loope
leave
sbb
add
inc
stc
and
jbe
fistp
fnstenv
xchg
add
enter
push
push
cmp
or
(bad)
xor
fild
test
mov
fbld
adc
xchg
mov
push
repnz
shr
fld
sub
mov
mov
out
das
add
sbb
sub
mov
adc
loopne
aaa
adc
push
nop
cmps
jb
pop
sub
pop
and
outs
push
and
sbb
jo
jge
stos
(bad)
xchg
jmp
jp
(bad)
mov
mov
adc
aaa
pop
and
and
neg
add
mov
xchg
sbb
or
cmp
lods
rcr
mov
aam
pop
lea
outs
das
inc
mov
xchg
(bad)
and
into
mov
xor
sti
jbe
leave
xor
stos
pop
int3
clc
or
(bad)
adc
out
xlat
popa
sub
fidivr
and
gs
mov
inc
pop
imul
fisubr
aaa
lods
hlt
bound
push
jae
int
fcomp
lock
xchg
fwait
ins
fldenv
sahf
cmp
add
mov
dec
retf
inc
fs
addr16
clc
setl
in
das
push
mov
mov
sub
xor
jg
mov
les
push
jno
sub
outs
pusha
loopne
or
mov
mov
mov
imul
gs
mov
xor
rcl
jmp
push
and
ret
and
arpl
push
cwde
cmp
sbb
mov
neg
push
imul
fild
push
dec
cmp
inc
and
clc
loope
xchg
adc
repz
pop
aas
mov
push
fisttp
xchg
mov
push
and
xchg
push
sbb
iret
lds
cli
daa
sahf
sub
int
mov
mov
popf
sahf
cld
aad
mov
jmp
mov
mov
mov
not
xor
lds
pop
iret
mov
pop
nop
mov
fsub
loopne
in
cmps
cmp
rol
stos
add
pop
sbb
pusha
or
test
adc
mov
adc
retf
lea
mov
pop
pop
addr16
sti
jns
ds
mov
(bad)
hlt
adc
xchg
cmp
mov
xor
cmp
or
push
pop
sub
and
pop
(bad)
dec
xor
loopne
xchg
pop
jle
pop
pop
cmc
gs
sub
adc
imul
mov
adc
(bad)
cmp
dec
mov
adc
xor
cmp
stc
sbb
pop
sub
push
in
jg
sbb
clc
cmp
adc
xchg
sbb
gs
sub
sub
mov
xor
jns
clc
jnp
jb
mov
push
movs
jb
xor
test
mov
mov
push
cmp
adc
pop
jmp
mov
in
call
jl
and
das
mov
sti
fwait
jb
add
mov
jbe
adc
dec
in
not
call
cmp
out
ja
or
cmp
pusha
inc
ds
xchg
xchg
push
inc
jg
scas
mov
pop
inc
lods
fisttp
(bad)
jecxz
add
cli
mov
push
in
nop
mov
add
(bad)
and
lock
lods
or
pop
sub
adc
fcom
mov
aas
jo
repnz
in
into
in
cmp
mov
jmp
jns
xlat
(bad)
std
mov
aad
loop
add
inc
mov
sub
scas
aas
test
xor
ins
fld
lahf
mov
mov
cmp
in
mov
in
lahf
inc
xor
jb
mov
mov
inc
mov
and
sti
sub
or
sbb
pop
and
or
adc
imul
out
dec
imul
(bad)
shl
push
xor
sar
sub
add
or
sbb
xor
mov
and
div
cmp
in
fdivrp
int
mov
push
push
dec
xor
iret
cmps
faddp
sub
retf
mov
cmp
shr
mov
sub
and
rcr
mov
jb
test
push
add
mov
jl
add
(bad)
and
sub
test
addr16
sahf
mov
cmp
mov
cmp
in
imul
daa
or
popa
push
imul
lds
retf
inc
retf
test
cmp
push
(bad)
test
in
icebp
mov
pusha
in
push
enter
inc
enter
mov
ss
loope
push
aas
push
fdiv
lahf
loop
adc
test
fiadd
scas
fcmove
push
les
int3
dec
fcom
mov
in
loope
pop
mov
dec
inc
stos
jle
fst
scas
in
arpl
or
add
nop
es
cld
dec
pop
dec
sub
out
fistp
dec
gs
and
repz
idiv
popa
mov
sbb
push
dec
shl
xlat
jb
bound
(bad)
jecxz
mov
ret
aaa
add
test
inc
mov
pop
mov
dec
dec
out
or
pop
push
lods
mov
in
cmp
loop
mov
sti
inc
in
xlat
stos
mov
fnstsw
rol
or
mov
clc
retf
xchg
das
icebp
test
(bad)
push
inc
mov
test
(bad)
mov
loope
shr
mov
adc
xor
and
mov
adc
test
adc
push
(bad)
(bad)
adc
test
fdiv
or
or
imul
gs
repnz
movs
xlat
mov
test
stos
imul
or
xor
loopne
pop
std
jmp
dec
or
mov
inc
pop
mov
arpl
sbb
sbb
dec
jmp
imul
xchg
clc
sub
data16
addr16
or
push
inc
xchg
or
jns
mov
mov
inc
ins
inc
(bad)
xchg
cmp
loope
ja
out
test
into
lock
pop
jbe
xchg
sub
xchg
push
scas
mov
pop
ret
mov
mov
fidivr
lods
clc
xchg
push
cmps
jmp
push
out
jle
dec
lock
loopne
pop
xlat
shl
jl
movs
jno
add
out
push
and
sbb
mov
aad
jg
inc
sub
jge
lods
mov
lds
(bad)
aaa
push
adc
leave
ret
shl
fwait
adc
xor
lahf
push
pop
pop
lods
stos
mov
lds
ds
or
add
or
add
mov
mov
mov
and
mov
xchg
add
add
jecxz
cdq
pop
cmps
mov
inc
add
mov
jbe
rcr
cli
mov
ja
scas
jae
and
cmp
call
adc
stc
dec
arpl
call
fist
sub
loopne
mov
js
and
int
popf
int
sub
dec
clc
fwait
xchg
sub
cmp
and
ret
fld
mov
sbb
into
push
pop
aaa
pop
and
mov
push
and
inc
pop
sbb
and
mov
push
repz
add
xor
jmp
mov
and
cld
repnz
sub
arpl
mov
repz
mov
shr
lods
in
inc
mov
or
mov
mov
lea
stc
cmp
into
and
mov
rcr
in
pop
mov
punpckhwd
pushf
leave
pushf
gs
xchg
adc
gs
dec
mov
jmp
push
pop
pop
sub
adc
adc
cs
dec
ds
dec
cmp
jg
adc
jge
xchg
adc
jecxz
movs
lock
lock
push
pop
or
cmp
mov
pop
sub
sar
pop
stos
xchg
pop
call
aam
jo
push
add
iret
mov
vcvtdq2pd
mov
daa
or
mov
ins
pushf
aaa
xor
sbb
adc
fild
in
mov
leave
sbb
or
nop
clc
out
aas
ret
xor
imul
inc
lahf
sbb
add
retf
mov
sbb
fcom
inc
addr16
sub
push
mov
or
(bad)
jge
adc
xor
shr
adc
test
mov
outs
or
ja
ret
lea
stos
pop
mov
nop
add
jecxz
addr16
hlt
add
scas
mov
push
iret
mov
and
jno
imul
jg
sbb
mov
jle
mov
arpl
sub
or
out
dec
or
fiadd
cmp
mov
push
sub
cmp
jl
sub
push
or
mov
pop
fnstcw
adc
mov
push
inc
xor
mov
push
js
aam
(bad)
adc
sub
adc
sub
or
mov
mul
jns
call
or
pop
xor
and
mov
mov
mov
add
fisubr
mov
add
mov
mov
xor
dec
jb
in
fnstenv
cmps
pop
add
adc
push
popa
mov
mov
add
jno
call
inc
fiadd
cmps
cmps
outs
cld
loopne
pop
imul
(bad)
clc
test
sub
icebp
(bad)
pop
shl
jecxz
(bad)
or
fsub
inc
aas
movs
loopne
dec
cmp
cmp
xchg
mov
cmp
idiv
test
and
loope
xchg
add
movs
jmp
sub
in
push
push
xchg
pop
(bad)
push
lock
imul
mov
adc
fdivr
xor
xor
leave
js
jo
mov
cmp
dec
not
mov
lock
sub
mov
dec
sub
icebp
jmp
cmp
aad
mov
inc
neg
mov
mov
xor
or
adc
push
loopne
xor
js
stos
mov
mov
ins
xchg
sub
or
addr16
ja
jae
stc
sete
cld
dec
aam
or
imul
in
xchg
sub
mov
(bad)
fidivr
xchg
mov
out
sar
fs
jb
adc
les
pop
and
retf
lods
lods
loopne
gs
sub
inc
in
push
sub
jne
sub
mov
repz
ja
push
aad
pop
aaa
add
mov
cmp
scas
loope
loop
in
jge
iret
push
repnz
or
(bad)
mov
jne
push
cmps
(bad)
cld
adc
mov
xchg
and
xor
stc
dec
mov
jbe
jns
or
xor
lock
cli
xchg
into
pop
adc
test
into
and
dec
sub
mov
repz
lods
push
outs
sub
fdiv
mov
jmp
in
or
sahf
xlat
xor
sub
test
lods
sub
fidiv
mov
push
push
xbegin
and
jb
and
cmp
adc
test
add
ret
fdivr
push
cmp
nop
arpl
stc
dec
sub
retf
and
xchg
in
gs
inc
int3
inc
ds
or
mov
(bad)
into
fdivr
stc
out
mov
call
push
into
adc
cmp
xor
xchg
mov
int
or
add
cmp
adc
adc
call
mov
pop
cmp
sahf
les
int3
rcl
add
cmp
pushf
push
xor
add
or
stos
shl
sbb
inc
sbb
pusha
les
pushf
xor
cwde
cmp
or
loopne
sbb
xor
add
cmp
ds
fcom
inc
jnp
sub
icebp
mov
xor
add
fscale
aaa
mov
imul
push
sbb
(bad)
data16
pushf
or
(bad)
mov
mov
pop
add
jns
bound
in
or
std
je
movs
cmp
cli
hlt
mov
adc
and
mov
xchg
out
sbb
test
adc
jp
xor
sbb
retf
fild
daa
adc
scas
mov
xchg
jb
mov
pop
inc
inc
es
adc
or
(bad)
adc
aas
ds
mov
ret
add
call
aam
inc
lahf
mov
mov
gs
rol
dec
push
fdiv
sbb
sti
or
mov
dec
mov
xchg
mov
nop
mov
xor
cmp
fadd
pop
cmp
cmc
jno
xchg
mov
cmps
xchg
xchg
jnp
in
das
ins
addr16
(bad)
sub
sbb
sub
ds
jne
aad
scas
leave
sar
mov
out
cmp
enter
(bad)
retf
ret
jae
and
inc
jmp
cmps
lahf
push
out
add
push
mov
dec
in
inc
push
lea
js
iret
mov
cs
lods
mov
adc
pop
fisttp
jne
mov
enter
icebp
jmp
in
jmp
ins
cld
in
shr
inc
out
stos
(bad)
hlt
inc
add
cmp
pop
popa
or
jmp
or
dec
push
and
inc
jle
jne
push
dec
mov
xor
and
out
inc
retf
sbb
adc
mov
xlat
int3
rcr
repz
std
inc
xor
sbb
fidivr
in
dec
jnp
frstor
inc
aad
rcr
dec
or
dec
push
scas
repz
leave
lahf
in
ror
jl
sbb
xchg
mov
adc
fcom
jp
dec
loopne
mov
pop
pop
or
bound
jp
bound
sti
repnz
enter
xchg
sub
lods
jle
mov
movs
xor
leave
inc
sub
(bad)
imul
fcom
sbb
and
jno
or
fmul
jge
test
out
arpl
mov
sbb
je
(bad)
(bad)
push
pop
xchg
inc
lods
movs
or
add
push
or
sahf
mov
push
push
dec
and
in
cmp
clc
loope
int3
es
or
test
or
lds
adc
pop
out
repz
mov
inc
xor
add
shr
inc
jbe
dec
adc
or
mov
dec
mov
dec
ret
inc
aaa
and
cdq
cmp
inc
sti
scas
jmp
out
arpl
not
and
popf
and
arpl
jnp
fcom
jp
push
cdq
mov
gs
xor
fadd
cli
shr
int3
cmp
or
push
ret
xchg
hlt
dec
fwait
hlt
push
out
inc
and
cmp
and
ins
ins
mov
push
sbb
rol
inc
out
pop
int
arpl
shr
movs
mov
mov
mov
xchg
retf
jmp
add
push
popf
fmul
dec
ss
and
(bad)
iret
pop
loopne
pop
out
pop
cld
int
mov
dec
inc
fmul
std
xchg
(bad)
pop
cwde
loopne
xchg
add
jl
dec
cli
cli
adc
inc
inc
out
test
jnp
retf
xor
lahf
fsubr
push
mov
fcomp
mov
into
arpl
cmps
cmps
stos
mov
rcr
add
inc
pop
and
pop
adc
pop
sbb
sar
sub
mov
idiv
pop
(bad)
sub
imul
scas
shr
inc
test
std
shl
fs
adc
cmp
add
sub
jns
or
mov
sbb
add
jmp
daa
push
push
aas
push
mov
pop
sbb
mov
jmp
xor
xor
and
push
and
pusha
test
xchg
and
xor
mov
inc
pushf
pop
lods
xchg
sub
mov
or
dec
fdiv
cs
and
xchg
lods
cld
cmc
in
movs
dec
(bad)
mov
sbb
mov
iret
jle
mov
mov
test
(bad)
(bad)
clc
mov
je
xchg
movs
add
mov
and
mov
pop
aad
dec
(bad)
icebp
gs
inc
popf
xchg
sbb
inc
sbb
sbb
repnz
das
sbb
and
sbb
repz
aad
int
imul
cmp
unpckhps
mov
cmp
xchg
sti
in
push
dec
xor
push
ds
jecxz
mov
mov
mov
jno
repnz
mov
xchg
add
std
jno
pop
and
dec
fisubr
in
call
and
mov
xor
addr16
pop
leave
sbb
cdq
dec
jp
mov
in
dec
iret
(bad)
test
test
mov
int3
cld
mov
push
push
fisubr
sbb
imul
mov
fdiv
mov
loop
popf
imul
(bad)
enter
jo
in
sbb
xor
fs
gs
adc
add
push
test
mov
sbb
push
or
xchg
test
out
add
mov
xor
push
jp
movs
inc
sub
retf
aam
xchg
out
mov
dec
(bad)
fwait
lea
and
lea
cli
or
dec
or
fisttp
pop
mov
xor
add
sbb
push
jle
sbb
popf
mov
sbb
xor
and
mov
adc
call
data16
scas
fwait
jae
xchg
lahf
idiv
push
dec
add
test
aam
mov
cmp
xor
les
jg
mov
retf
dec
sbb
outs
mov
pop
sub
adc
(bad)
popf
call
adc
cmp
ret
cwde
sub
cmp
aad
sbb
xor
lods
dec
cmp
into
out
test
jmp
lea
jo
cwde
pop
cli
add
inc
xchg
les
xchg
sbb
rcl
xor
push
les
or
add
mov
test
arpl
scas
repnz
inc
lods
jge
mov
addr16
mov
int3
mov
xchg
push
sahf
aad
adc
cmps
cmp
jae
xor
dec
mov
retf
(bad)
call
mov
xchg
add
fild
ja
sub
jne
push
mov
or
fwait
or
pop
out
mov
mov
icebp
mov
std
sti
in
mov
adc
out
mov
mov
jp
xchg
sub
adc
movs
xor
cmc
sbb
movs
jmp
xchg
lds
pop
dec
ds
sub
fwait
stc
add
jnp
xor
mov
movs
mov
stos
scas
pop
push
inc
data16
aam
outs
push
scas
repz
mov
inc
(bad)
and
shl
dec
cmp
fcomp
cdq
inc
nop
lea
add
lods
push
pop
mov
sbb
push
or
(bad)
adc
aas
jne
xor
in
inc
mov
mov
ret
mov
jecxz
add
movs
jo
adc
cmc
push
clc
movs
mov
out
popa
pop
pop
add
cmps
(bad)
and
mov
mov
push
clc
mov
call
jne
mov
jmp
scas
sbb
rcl
cli
(bad)
jecxz
mov
cwde
loop
lods
mov
jo
out
jns
lahf
mov
mov
adc
out
or
popf
xor
std
dec
and
fs
or
or
mov
ds
retf
mov
arpl
fcom
xor
imul
fisub
pop
cmps
jns
cmp
push
jbe
cmc
mov
jno
jne
inc
xlat
adc
jp
cdq
shl
call
push
jbe
jnp
rcl
into
mov
repz
jmp
mov
mov
movs
shl
lods
ds
out
adc
mov
in
dec
jle
add
aas
bound
mov
xor
cs
adc
ins
pop
rcl
rcl
mov
add
fistp
stos
sub
(bad)
xchg
and
bound
dec
test
pop
pop
xchg
pushf
xchg
xchg
js
sar
loope
mov
add
lahf
(bad)
movs
xchg
or
ins
inc
in
jp
or
mov
mov
mov
pandn
mov
mov
cmc
test
sbb
push
ds
mov
xchg
mov
mov
inc
lea
sub
out
pop
nop
sub
dec
loopne
jne
int
popa
ror
je
in
or
sahf
push
and
test
inc
inc
imul
jae
or
daa
bound
pop
imul
mov
cmp
mov
(bad)
sub
ja
mov
das
cdq
ret
shl
sub
idiv
enter
jl
std
rol
test
add
retf
and
fcomi
dec
ret
stos
stos
rol
ja
js
ja
add
(bad)
ins
stos
add
hlt
cmp
lds
xchg
push
loope
push
jb
cli
xchg
pop
sub
movs
xchg
stc
pushf
pusha
in
inc
push
ja
arpl
inc
ficom
ja
pop
(bad)
xor
clc
pusha
xchg
aaa
jg
out
lock
and
imul
add
dec
enter
inc
lahf
mov
or
push
mov
mov
xchg
cmp
ins
(bad)
mov
mov
pop
fxch
adc
mov
test
cmp
pop
or
add
sbb
inc
fild
gs
cdq
dec
xor
bound
ficomp
xchg
mov
sbb
aaa
sbb
add
xor
mov
imul
adc
scas
mov
call
xchg
pop
add
in
sub
adc
call
leave
pop
call
lahf
pop
and
or
movs
popf
cld
sub
adc
out
test
adc
and
mov
xor
xor
xchg
add
sbb
cs
add
inc
ja
fsub
and
call
xchg
push
dec
cmp
in
adc
sbb
add
mov
cmp
cmp
dec
fadd
adc
push
sub
retf
inc
inc
xor
(bad)
addr16
test
mov
sbb
pusha
add
pop
outs
movs
mov
cmp
push
imul
jmp
jb
mov
retf
add
test
(bad)
jae
mov
sbb
retf
movs
xchg
push
daa
fsub
jno
xor
xchg
push
jge
pop
(bad)
jmp
fsub
ins
adc
or
jmp
or
das
das
xchg
pop
or
jl
adc
pop
dec
mov
jp
xchg
sbb
cmp
cld
pop
cmp
sub
adc
add
movs
shr
fstp
enter
xor
pushf
cmp
pop
xchg
stos
rcr
lock
or
(bad)
repnz
jbe
in
mov
imul
mov
push
gs
mov
retf
rcr
xchg
xchg
xchg
outs
sbb
fucomip
jne
in
cmps
sbb
in
mov
stc
rol
dec
ds
sbb
lea
push
add
sub
out
jmp
mov
xchg
hlt
sti
or
test
aaa
fwait
fs
jae
mov
test
mov
in
aad
imul
icebp
cmp
ret
scas
or
out
int3
inc
jecxz
mov
leave
push
mov
aam
inc
xchg
xor
sar
fldenv
xchg
xchg
lahf
mov
mov
fidivr
push
cmc
xchg
xor
pop
fsubr
push
(bad)
cld
arpl
mov
fbld
daa
xchg
sub
clc
sub
push
and
fadd
(bad)
fmul
int
popf
and
mov
pop
dec
cmp
pop
movs
outs
push
in
(bad)
cli
lock
jge
sub
pop
popa
in
cmp
shr
ins
out
or
cmps
pop
inc
ret
sbb
add
sbb
(bad)
mov
inc
xchg
jecxz
gs
jbe
ror
inc
cld
cmp
into
inc
dec
xor
jle
rcl
ret
mov
(bad)
xchg
sub
jg
dec
adc
cmps
xor
(bad)
movs
cs
inc
lahf
int
inc
mov
adc
jecxz
cmp
lods
imul
adc
arpl
jl
retf
jmp
cs
adc
mov
xchg
jbe
mov
popf
pop
dec
push
sub
pop
into
aaa
sub
dec
mov
retf
rol
inc
cmp
ficom
retf
xor
fdivr
repz
lods
dec
ja
pop
inc
cs
retf
xchg
movs
out
add
dec
xor
adc
pop
push
bound
enter
loopne
inc
add
gs
inc
xchg
int3
nop
iret
sbb
(bad)
das
ds
xchg
mov
ror
cmp
in
icebp
push
mov
cli
xlat
ins
cmp
imul
or
sbb
sub
jns
cmp
fidiv
outs
dec
mov
add
xor
or
add
iret
ret
aas
add
add
adc
(bad)
cmp
xor
mov
pop
ja
cmp
les
and
push
daa
sub
xchg
(bad)
sub
out
les
mov
sub
push
push
cmps
aam
ins
adc
scas
cmp
xchg
jbe
stos
lahf
or
stc
jge
xor
clc
vmovq
sub
mov
mov
in
addr16
mov
jo
out
ret
es
call
cmc
sar
movs
dec
mov
ss
xor
inc
daa
arpl
das
jnp
xchg
stos
mov
adc
outs
movs
cmc
pop
cmp
and
stc
pop
ins
inc
mov
lock
repnz
pop
shr
repnz
shr
iret
or
ja
jle
push
shl
icebp
in
xchg
lock
stos
in
data16
fsub
je
or
jmp
or
push
inc
pop
loop
loopne
retf
inc
movs
dec
push
mov
mov
jecxz
rol
call
sub
add
cmp
not
xor
mov
daa
and
gs
xchg
stc
jmp
dec
pop
xchg
push
out
cmp
pusha
add
lock
and
add
dec
sbb
fwait
out
retf
sbb
pop
cli
popf
push
mov
movs
sbb
inc
cmc
(bad)
into
lahf
push
mov
std
outs
xor
mov
test
add
xor
test
call
dec
add
mov
push
aam
jp
cli
in
jno
cmc
pop
and
push
pop
adc
pop
adc
movs
stos
jp
(bad)
ror
mov
arpl
aam
xchg
mov
imul
add
adc
dec
dec
jecxz
stos
mov
sbb
xlat
mov
nop
(bad)
push
iret
push
pusha
cld
mov
data16
ds
sub
lahf
(bad)
clc
jo
jecxz
shr
call
pop
js
mov
xchg
ret
xchg
pop
(bad)
mov
out
clc
iret
cmp
(bad)
cld
popa
or
adc
stos
outs
mov
xchg
jge
jmp
add
retf
mov
sbb
sub
test
cs
ins
pop
mov
sbb
sbb
retf
pop
and
loop
repnz
mov
push
mov
cmp
pop
adc
scas
fldcw
scas
jo
adc
jp
adc
xor
jmp
sahf
pop
lds
icebp
mov
xor
ficomp
sbb
stos
loope
mul
into
jg
jle
xor
clc
aas
ins
sbb
popa
jl
jo
jge
push
xchg
rcl
scas
scas
rcr
div
arpl
imul
fucom
inc
or
dec
push
jl
ficom
arpl
pop
jo
jle
in
add
call
push
cdq
pop
mov
xchg
es
aaa
icebp
(bad)
jno
ret
mov
and
push
gs
or
hlt
adc
add
xor
cmp
ror
gs
mov
jp
mov
pusha
repnz
dec
popa
ja
cli
xchg
pop
cmp
push
cmp
sub
dec
push
iret
popf
mov
int3
psllq
out
inc
rcl
jnp
mov
les
jns
mov
shr
jle
mov
jno
xchg
es
icebp
pop
ins
outs
push
mov
out
xchg
inc
xchg
mov
cwde
fsubr
inc
mov
cmp
daa
(bad)
pusha
pop
add
sbb
jecxz
inc
sbb
stos
repz
push
inc
iret
sub
jae
jmp
leave
(bad)
enter
mov
mov
iret
push
hlt
in
ins
out
jb
pop
int
xchg
push
leave
inc
mov
dec
xchg
bound
xlat
push
inc
lods
mov
push
pop
mov
mov
inc
fwait
or
add
popf
xchg
jo
push
pushf
or
add
stos
shr
popf
jns
jno
shl
pop
push
stos
xchg
outs
sub
fldcw
pop
fcomp
push
pushf
popa
stc
pop
push
icebp
and
daa
pop
xor
mov
aam
push
jnp
dec
fmul
sti
push
jo
pop
ss
fs
jp
test
in
or
adc
stos
inc
test
dec
retf
xor
xchg
push
aaa
inc
xor
add
int3
ins
dec
push
xchg
fwait
and
jne
jmp
or
shl
daa
add
mov
pop
pop
jg
jmp
mov
dec
jge
scas
popf
xchg
scas
stos
enter
fwait
outs
jbe
mov
lods
ret
arpl
loop
aaa
dec
dec
aaa
stc
loope
nop
mov
imul
jle
dec
pop
sahf
mov
and
fild
jno
add
inc
shl
call
fwait
and
out
int3
addr16
repnz
les
inc
repnz
xor
pusha
xchg
dec
sbb
div
mov
xor
sub
in
push
leave
jmp
call
add
inc
in
dec
loope
in
jmp
or
add
or
mov
or
and
sub
movs
lock
adc
nop
cmp
(bad)
mov
lods
stc
mov
ins
pushf
clc
dec
mov
stos
add
and
mov
inc
shr
add
cmp
lock
nop
cdq
pop
arpl
(bad)
mov
or
push
mov
ret
mov
not
pop
jecxz
shr
push
out
xlat
ja
dec
cmp
std
das
mov
sbb
cmp
out
in
popa
std
cdq
fwait
jmp
inc
std
pop
jg
push
mov
js
jmp
stos
das
mov
imul
cmp
push
mov
mov
push
jp
jb
aam
mov
jne
rcl
adc
frstor
push
push
jp
in
popf
adc
addr16
inc
pusha
(bad)
test
xor
jmp
inc
cli
rcr
das
out
cmp
paddsw
sar
fs
xchg
xchg
or
inc
test
jl
loop
std
mov
test
dec
pop
test
(bad)
cmp
mov
ret
cmc
jl
cmp
pop
xor
ss
daa
mov
sub
es
sbb
push
in
jno
mov
or
into
nop
push
stos
call
aad
ss
test
inc
cwde
add
shld
or
adc
fnstenv
movs
xor
sub
dec
pop
jle
jbe
shr
xchg
add
retf
sbb
and
call
iret
mov
mov
jp
mov
and
lds
add
in
stos
xlat
(bad)
stos
push
and
push
jl
push
mov
adc
xchg
mov
pop
push
push
ins
je
push
repnz
xor
test
cdq
push
push
stc
scas
push
and
add
dec
or
adc
jmp
js
sbb
ins
inc
mov
popf
pop
pop
sbb
cdq
repnz
dec
into
push
imul
sub
cld
or
call
xchg
pop
in
stc
dec
sbb
out
mov
xor
les
push
loope
bsr
aad
sub
inc
outs
aam
inc
and
stos
nop
sbb
sub
pusha
or
push
mov
clc
and
sbb
imul
mov
ret
(bad)
out
cmps
mov
jbe
add
push
not
mov
bound
loop
std
jge
sahf
(bad)
mov
or
jo
add
push
jbe
add
ins
adc
mov
(bad)
popa
sbb
stc
sbb
mov
out
ret
and
and
pushf
add
mov
jp
(bad)
xchg
inc
ror
jns
mov
nop
dec
xor
mov
jmp
or
std
les
repnz
adc
push
hlt
dec
repz
or
sub
pop
push
mov
xor
jle
xor
push
pusha
lea
(bad)
cmp
push
jnp
cmc
(bad)
pop
mov
or
js
pop
sbb
jmp
sbb
repz
mov
xchg
xchg
fld
xchg
dec
sub
inc
adc
xchg
sub
ret
or
fst
mov
imul
imul
popa
mov
mov
or
or
adc
jmp
(bad)
jnp
mov
or
jne
pop
pop
and
js
fnstsw
or
data16
push
inc
(bad)
xchg
jmp
movs
jnp
and
daa
scas
mov
dec
and
rcr
xchg
cli
imul
and
cmp
daa
je
sub
sub
sbb
addr16
mov
and
mov
jae
call
add
sub
push
je
repz
fist
loope
xor
pop
mov
out
push
es
mov
dec
add
loope
je
jp
stos
cmp
out
mov
push
iret
gs
sub
jns
mov
in
fsub
or
jae
shl
div
les
sub
push
mov
xchg
jge
fs
mov
mov
cmp
xchg
sbb
cli
in
adc
cmp
dec
pop
cld
push
das
jnp
xchg
jb
push
sbb
leave
jmp
xchg
popf
mov
jecxz
call
fild
mov
out
shl
xchg
push
add
sub
push
push
pop
dec
sub
addr16
pushf
xchg
int3
test
jl
ror
hlt
mov
aaa
dec
call
cs
call
fisub
or
push
popf
sbb
int3
jp
ss
jmp
adc
push
jae
or
lock
pop
cmp
xchg
es
push
mov
mov
shl
scas
cmps
xor
pop
xor
outs
jp
mov
pop
jmp
sbb
xor
je
cmp
(bad)
xor
xor
pushf
mov
jle
test
into
jp
cmp
retf
or
or
popf
jecxz
or
scas
inc
aaa
fild
push
out
fldenv
movs
mov
pop
xlat
adc
pop
arpl
adc
pop
fwait
add
and
retf
mov
pop
lea
aad
int3
ror
jo
jecxz
ret
mov
ret
jmp
cmp
jne
retf
stc
cmp
mov
or
jns
fldenv
enter
cli
idiv
hlt
pop
fidivr
cli
sub
shr
add
xchg
shl
add
xchg
(bad)
dec
int3
dec
(bad)
cmp
xchg
xchg
shr
and
(bad)
jns
daa
hlt
stos
mov
xor
or
cmp
adc
pop
aad
enter
test
pop
jle
stos
mov
push
xor
cmp
mov
(bad)
aas
cmp
int3
imul
fistp
mov
sar
scas
dec
sub
retf
add
xchg
lock
std
push
out
cmp
pop
or
sbb
shr
jmp
jecxz
rcl
mov
mov
pop
cmp
aas
test
call
push
dec
jmp
mov
inc
(bad)
push
jns
xchg
sbb
mov
mov
pop
(bad)
and
sbb
mov
push
adc
lea
lock
inc
ja
adc
add
in
outs
lds
clc
aad
enter
xchg
cdq
(bad)
fiadd
dec
retf
adc
mov
xor
pop
sbb
data16
xchg
scas
mov
(bad)
cmp
pop
push
lahf
je
mov
mov
pop
rcl
push
xchg
addr16
sbb
add
xchg
aad
sub
jl
mov
enter
outs
push
outs
xor
jno
xchg
xlat
mov
in
icebp
adc
and
adc
ret
dec
mov
dec
mov
jmp
neg
push
out
icebp
inc
mov
mov
cld
inc
adc
sub
lahf
pop
ret
in
mov
inc
stos
xchg
fdivp
jmp
(bad)
mov
add
gs
(bad)
mov
in
rcl
fidiv
shr
adc
call
xchg
sbb
loope
xchg
loop
jp
push
call
aad
lea
aaa
pop
test
int
repnz
sub
bound
jns
sub
push
or
fdivr
jno
ror
jno
jecxz
mov
leave
jns
dec
pop
rol
mov
and
sbb
pop
add
or
pop
imul
(bad)
sub
sub
cdq
push
xchg
fimul
inc
retf
pop
xor
(bad)
mov
jl
jo
mov
(bad)
xor
fwait
mov
(bad)
ins
stos
sbb
loope
int3
cld
mov
cmps
imul
iret
dec
cmp
mov
jo
ins
pusha
(bad)
rol
repnz
lods
mov
sar
mov
cmp
push
jle
fistp
jbe
mov
idiv
(bad)
adc
fistp
jae
dec
ins
jnp
mov
push
xor
(bad)
mov
call
std
add
adc
movs
fist
popf
out
cmp
pop
jo
jecxz
mov
push
add
sub
adc
mov
mov
(bad)
mov
shl
pop
cld
mov
mov
std
outs
sub
imul
xchg
call
shld
push
sahf
arpl
inc
pusha
mov
(bad)
mov
adc
lds
pop
add
fidiv
call
test
pop
push
mov
inc
ins
xor
das
enter
adc
mov
add
ror
adc
adc
ins
shr
adc
fisubr
subps
inc
scas
adc
jmp
push
retf
arpl
sub
das
adc
jge
xor
cmp
xor
inc
push
mov
dec
fiadd
sbb
ins
aas
push
jle
sbb
aam
inc
and
add
les
loopne
lea
push
es
and
mov
call
adc
lock
adc
repnz
cmp
iret
adc
and
das
int3
or
or
out
jmp
push
jp
mov
cmp
mov
aam
dec
sbb
pop
(bad)
shl
mov
andnps
add
pop
xchg
or
enter
pop
pusha
lods
loop
sub
out
push
or
and
bound
jo
mov
(bad)
cmc
and
mov
dec
dec
or
mov
push
sbb
cld
dec
xchg
call
cmps
push
adc
cld
imul
sub
jne
(bad)
aas
xchg
mov
cmovno
sbb
js
inc
es
sub
cmp
mov
pop
jecxz
call
retf
aam
push
pop
jno
jae
cmp
mov
and
repnz
lods
push
loope
std
push
(bad)
shr
je
adc
aam
imul
or
or
add
mov
pop
mov
xor
out
jl
mov
cmp
cdq
pusha
dec
out
mov
sbb
daa
jb
stos
es
(bad)
clc
call
pop
pop
loop
fidiv
iret
pop
aam
push
push
pop
pop
test
push
scas
loope
jne
sbb
pusha
cld
push
pop
dec
ins
inc
rol
dec
push
dec
sub
add
dec
int
scas
popa
or
add
and
repnz
data16
mov
mov
movs
cmps
stc
jmp
push
fnstcw
sar
or
retf
dec
and
mov
(bad)
inc
add
push
or
in
ret
ror
sbb
sub
test
push
ret
(bad)
adc
adc
loop
call
jno
call
(bad)
aam
pop
cmp
les
aad
xor
jmp
stos
stos
or
pusha
xor
cdq
add
jne
lahf
das
mov
arpl
inc
out
in
shl
sbb
or
ja
stos
xchg
add
adc
sbb
outs
mov
iret
jbe
lahf
test
adc
daa
jmp
push
stos
out
shr
cmp
pop
out
xor
lods
fcmovbe
add
or
add
bound
xchg
fisttp
sahf
xor
mov
cmp
cmp
cdq
(bad)
mov
dec
lds
mov
push
fwait
push
icebp
push
sub
out
mov
cld
imul
cmc
dec
in
lahf
jmp
out
sbb
push
ja
lahf
adc
inc
mov
inc
loope
xchg
dec
add
stos
dec
(bad)
sti
aam
jno
sbb
loopne
test
(bad)
push
shl
fndisi(8087
cli
enter
iret
repz
clc
cwde
jnp
pop
jno
jbe
fld
sub
scas
fs
sbb
test
mov
dec
lods
xchg
popf
test
imul
daa
inc
lea
ret
data16
and
mov
pop
fadd
xchg
or
sbb
sub
mov
repnz
cmp
aad
cmp
add
leave
jle
test
inc
jne
scas
pop
sbb
jns
push
out
adc
sbb
push
in
jecxz
in
outs
addr16
cmps
xor
out
sub
xchg
and
jge
mov
cdq
aam
pop
outs
jo
xchg
adc
outs
int
add
bound
xor
push
xchg
inc
jne
cmp
enter
adc
(bad)
rcl
jb
cwde
and
movs
sub
jbe
pop
sbb
push
fld
(bad)
push
popf
mov
mov
xchg
mov
pop
jmp
test
mov
sbb
test
xor
(bad)
lea
jnp
mov
dec
jno
mov
neg
dec
or
and
inc
push
mov
test
scas
xchg
push
out
ins
mov
hlt
cmp
data16
mov
hlt
int
jb
push
or
(bad)
fwait
gs
dec
adc
dec
das
test
ja
shr
sbb
out
xor
xor
xor
sbb
push
lock
fs
xor
fimul
add
jmp
mov
mov
add
sub
push
test
sahf
fld
fisub
fsincos
repz
push
addr16
ret
xor
loop
int3
pop
sub
aas
stc
(bad)
cmp
xlat
fldenv
call
ja
pop
xlat
mov
repz
and
xor
mov
xor
fsubr
and
mov
and
sahf
stos
xchg
pop
shl
hlt
sub
aad
popf
push
hlt
sbb
jmp
jp
mov
mov
mov
jno
sar
aaa
leave
inc
xchg
xchg
mov
in
loop
or
scas
or
ds
xchg
outs
jns
fsubr
sbb
mov
gs
jne
dec
daa
aad
xchg
xchg
sub
and
pop
xor
dec
add
add
push
push
int
sahf
jo
test
push
mov
das
sub
stos
fistp
outs
(bad)
xchg
jb
(bad)
(bad)
xor
mov
cmp
add
mov
cmps
fsub
test
push
gs
dec
or
scas
and
shr
scas
icebp
jg
pop
les
(bad)
loop
lea
aam
mov
cli
lea
mov
add
push
xchg
repnz
xchg
adc
or
mov
mov
sub
fwait
out
dec
(bad)
lods
mov
and
or
mov
mul
(bad)
mov
je
sbb
and
call
es
push
mov
push
inc
loopne
inc
sbb
or
xor
pop
sub
int3
dec
es
sahf
in
jbe
mov
(bad)
add
mov
pop
leave
bound
dec
call
ja
dec
arpl
mov
xor
jg
jno
ds
dec
push
mov
cmp
fisttp
icebp
arpl
movs
movs
fadd
shr
inc
test
and
pop
inc
stc
and
push
inc
sub
jae
jge
mov
xor
scas
mov
push
imul
mov
pop
sub
js
test
stos
icebp
pop
pop
test
and
mov
(bad)
imul
mov
xor
aad
push
(bad)
push
mov
add
out
das
xor
push
jg
sbb
ins
ja
mov
mov
out
es
sbb
icebp
ins
stos
mov
cmp
jecxz
in
retf
cmps
(bad)
rol
dec
ss
push
fwait
popa
jae
shl
lods
adc
inc
mov
(bad)
leave
add
sar
popf
mov
cmc
cmps
hlt
cwde
inc
adc
pop
push
jns
jne
loope
sub
push
mov
mov
mov
jmp
cmp
loopne
inc
lock
lods
cmp
rcl
js
outs
dec
sub
push
js
enter
jnp
jmp
fcom
out
cmps
dec
lea
ret
add
mov
rcl
or
gs
mov
in
mov
and
into
and
aam
leave
out
out
call
mov
mov
es
es
xchg
(bad)
cli
push
dec
int
(bad)
test
icebp
xchg
push
popa
jne
mov
lea
inc
je
dec
or
jno
jecxz
cmp
jl
add
nop
sub
lds
dec
std
xor
test
inc
jmp
inc
sahf
jb
push
mov
xor
or
imul
push
or
(bad)
leave
aam
es
popa
push
dec
push
int3
pop
dec
int
out
mov
cmp
adc
sub
cmc
push
into
aam
dec
add
stc
mov
cwde
gs
movs
mov
ret
inc
(bad)
xchg
or
les
and
push
pop
xor
icebp
add
js
xchg
and
sbb
jb
jge
or
pusha
in
loope
xor
inc
ss
sti
xor
inc
arpl
int3
cmps
out
adc
xor
xlat
xchg
sub
pop
xchg
(bad)
jmp
sub
dec
inc
fist
xor
and
repnz
clc
cmp
mov
mov
xlat
retf
fild
xor
xchg
xor
pop
push
jbe
imul
mov
or
add
fbstp
jle
sbb
xchg
pushf
icebp
adc
mov
repnz
sub
icebp
out
mov
push
sbb
mov
sbb
outs
mov
test
mov
dec
ins
jnp
ss
ins
ficom
jnp
loopne
xchg
cld
mov
mov
out
push
cdq
pop
cmps
xchg
jl
push
repnz
sub
cmps
cmp
jmp
xchg
lods
pop
pop
sbb
cmps
(bad)
sahf
stos
lods
movs
xchg
push
retf
jno
pushf
retf
call
(bad)
stos
sbb
xor
idiv
xor
repnz
aaa
jge
and
es
dec
and
out
inc
jns
sbb
mov
(bad)
les
ja
in
xchg
bound
scas
test
inc
cmp
adc
inc
inc
das
jge
popa
xor
and
das
dec
out
mov
xchg
ror
xchg
sbb
mov
ds
es
in
xchg
cmp
cmp
xchg
bswap
pop
pop
adc
jp
dec
push
push
shl
pop
sub
or
sub
lds
std
mov
push
jo
adc
rcr
sbb
or
inc
dec
out
test
int3
aaa
sbb
sub
jecxz
inc
dec
leave
jno
pop
xor
nop
mov
pushf
dec
adc
(bad)
nop
xchg
push
jle
test
iret
imul
adc
fst
jno
xor
xor
push
inc
ret
mov
push
inc
sbb
enter
in
sbb
mov
(bad)
xchg
dec
popa
cmps
fidiv
fld
mov
bound
clc
push
outs
mov
xor
test
(bad)
or
or
mov
push
push
lahf
jecxz
cmp
inc
pop
mov
add
cdq
(bad)
repnz
or
fdivr
iret
fsub
daa
sub
data16
and
dec
jb
ret
xor
or
dec
add
cmc
hlt
lahf
xchg
push
or
(bad)
in
push
sbb
call
rcr
add
call
ins
ja
fisubr
mov
sbb
mov
pop
(bad)
pushf
scas
mov
pop
xor
xchg
jmp
push
in
cmp
jle
pop
pop
fadd
popa
outs
mov
mov
aad
pop
dec
push
jle
test
push
jbe
test
dec
sub
jns
sub
xor
mov
out
inc
clc
sar
ja
pop
jl
sahf
daa
inc
retf
(bad)
out
mov
jns
enter
mov
mov
and
mov
mov
xrelease
pop
push
mov
idiv
push
fcomip
cli
jmp
xchg
inc
repnz
jb
jae
jmp
adc
(bad)
retf
es
into
test
pusha
scas
or
push
movs
mov
sub
pushf
pop
push
sub
lea
movs
add
mov
add
call
mov
mov
sub
fisttp
daa
ins
mov
add
in
mov
jnp
retf
mov
imul
mov
cmps
ja
push
dec
arpl
mov
mov
aam
jge
rcl
test
cmp
adc
out
pop
test
dec
ins
sbb
repnz
push
test
sti
ror
icebp
imul
shl
shl
adc
inc
fisttp
mov
push
sti
adc
xor
mov
xchg
or
cmp
fs
mov
mov
shl
fs
ffreep
stos
inc
jae
xchg
dec
and
enter
jo
mov
push
shl
dec
cmp
mov
pop
dec
call
fiadd
es
dec
cmps
in
retf
jecxz
movs
retf
movs
or
aas
hlt
push
ds
add
and
sub
in
xchg
lahf
out
shl
dec
xchg
xchg
daa
pop
mov
and
xor
es
inc
inc
retf
and
xchg
and
pushf
scas
cmp
pop
push
mov
clc
fcom
lock
rcr
sub
outs
mov
je
cli
js
clc
mov
ins
mov
cmp
mov
dec
mov
or
in
cli
xchg
dec
test
(bad)
ret
dec
xor
pop
neg
add
mov
pop
xor
push
cmp
add
jge
loope
loope
cld
mov
mov
cmps
mov
cli
dec
out
or
and
retf
jne
mov
or
sbb
lods
shr
les
rol
dec
(bad)
mov
adc
pushf
aas
test
cld
mov
fisub
push
cmps
and
sbb
(bad)
movs
movs
pop
mov
aad
popa
rcr
add
xchg
cwde
mov
lea
daa
sub
adc
mov
(bad)
and
aad
out
sbb
mov
inc
xchg
jmp
cmps
xor
into
sbb
add
jmp
mov
inc
pop
sub
(bad)
and
clc
sbb
mov
gs
add
or
push
push
test
stc
xchg
adc
jp
inc
cmp
pop
dec
out
sbb
daa
sbb
movs
dec
repz
(bad)
call
gs
xchg
push
xchg
int
jmp
mov
xor
sub
lods
and
mov
add
fcmovnbe
pop
cli
scas
push
sbb
js
add
mov
mov
loopne
cmps
xchg
pop
sahf
add
mov
mov
arpl
rol
dec
ss
cmp
push
imul
jecxz
adc
test
dec
(bad)
xchg
ss
and
sbb
jbe
in
sub
adc
shl
cwde
cmp
xchg
ret
mov
test
jne
pop
retf
mov
push
dec
jmp
or
adc
mov
and
pop
mov
lock
dec
jo
clc
data16
mov
dec
out
mov
(bad)
mov
test
mov
mov
push
inc
test
pop
repnz
cmp
cs
or
sbb
inc
dec
vpaddsb
dec
out
jno
fisubr
xchg
dec
jmp
jmp
aad
pushf
xchg
dec
inc
add
cmp
mov
ror
into
xlat
into
std
mov
cmp
(bad)
fld
sub
xor
cs
dec
out
push
mov
xlat
inc
jge
push
sbb
dec
(bad)
ror
int3
add
stos
fdiv
pusha
inc
or
test
adc
mov
and
xor
test
dec
xchg
icebp
mov
loope
fs
push
xor
fadd
pop
jmp
mov
loope
rcr
cli
jns
adc
push
push
inc
sub
xor
xor
jge
pushf
into
sbb
sub
jg
mov
std
mov
test
movs
push
dec
jp
leave
mov
adc
call
cmp
xchg
inc
and
pop
mov
lahf
mov
in
jp
push
sub
movs
cwde
add
clc
scas
jmp
pop
(bad)
or
ins
xchg
mov
dec
jne
les
cmps
dec
aaa
sub
push
iret
scas
adc
mov
adc
arpl
pop
sub
ret
cmps
mov
mov
xchg
stos
xor
out
ror
sub
fnstsw
pop
mov
(bad)
jo
jmp
jmp
call
cmps
mov
jp
test
addr16
gs
repnz
fdivr
outs
xor
ficomp
sar
lea
inc
xchg
stc
fsubrp
push
adc
std
xchg
add
jo
js
shl
imul
pop
gs
es
mov
ror
repnz
mov
rcr
xor
sti
(bad)
iretw
sub
sbb
imul
out
mov
lock
scas
and
in
ja
pop
xchg
xchg
addr16
ficom
push
into
mov
fs
adc
sbb
pusha
popa
push
cmp
mov
dec
and
je
enter
add
push
xor
or
fwait
repnz
push
xchg
daa
cmps
bound
mov
jo
mov
xor
xchg
inc
test
pop
xor
fistp
cmp
fdivp
xchg
dec
lahf
push
push
in
test
push
int
xchg
cmp
jns
jle
bound
jle
mov
(bad)
je
(bad)
xchg
mov
mov
push
add
sbb
cmc
rol
mov
jmp
imul
pop
cmps
int3
stos
ret
sbb
cdq
pop
and
mov
pop
add
add
in
imul
pop
fwait
test
dec
cmps
rol
pop
cmps
sahf
repz
pop
leave
jmp
aad
fisubr
mov
jns
jb
int3
cmp
xor
mov
mov
aas
xchg
mov
rcr
in
jo
lods
add
pop
jecxz
cmp
xchg
leave
shr
xchg
cwde
enter
jge
hlt
fcomi
fldcw
sub
dec
and
inc
push
adc
aas
fistp
call
js
dec
cmp
xchg
inc
ss
daa
pop
jle
xor
loopne
mov
aam
jno
lock
add
ja
push
sti
xchg
xchg
addr16
pop
mov
inc
out
das
mov
push
sbb
mov
add
out
in
mov
fnstsw
cld
std
mov
fst
dec
mul
aas
in
jmp
sbb
ret
mov
jnp
adc
sub
xor
outs
aas
dec
aas
dec
pusha
ja
imul
jnp
outs
mov
dec
pushf
jbe
movs
adc
fist
sbb
(bad)
push
(bad)
xlat
sub
mov
(bad)
repz
xor
(bad)
pusha
ret
mov
xchg
pushf
mov
lds
dec
cld
retf
sar
(bad)
lahf
mov
mov
std
push
mov
push
pop
pop
xor
rcl
mov
mov
pusha
pop
mov
xchg
(bad)
pushf
(bad)
jne
mov
pop
cmps
imul
into
outs
sub
ins
cmc
pop
xchg
xchg
fs
rol
xchg
pop
mov
xor
shl
rcr
jmp
and
repz
dec
pop
sbb
push
pop
call
xchg
ins
jns
mov
dec
jle
ins
pop
mov
sbb
sbb
fwait
mov
lock
pop
into
aam
mov
mov
out
cmp
adc
add
jle
jne
ror
mov
pop
movs
lahf
pop
mov
xchg
mov
imul
inc
push
shr
scas
pop
dec
lock
jne
and
jnp
mov
mov
lods
cmp
dec
dec
xchg
mov
stos
sbb
xchg
jmp
aad
div
(bad)
xchg
fdiv
sbb
jmp
outs
dec
std
adc
imul
add
jle
loop
ret
or
fadd
cmps
push
iret
push
lods
vprotw
mov
(bad)
sbb
adc
cmp
adc
add
in
sub
mov
adc
test
mov
lahf
ret
into
outs
shl
jecxz
xor
lds
popf
mov
and
mov
add
xchg
aam
lods
test
ins
xor
adc
sub
mov
ja
iret
jecxz
cmp
retf
arpl
into
adc
or
sbb
mov
loop
sub
ds
add
imul
or
imul
cmp
dec
add
int
das
out
sbb
fsub
cmc
xor
push
dec
sti
and
sub
mov
xchg
rol
pop
mov
loope
cmps
pop
pop
mov
lods
mov
adc
inc
push
idiv
add
dec
mov
xchg
mov
(bad)
test
sahf
inc
(bad)
pusha
xchg
lods
push
xor
aaa
in
cmps
cmp
add
(bad)
xchg
adc
cmp
mov
lock
add
outs
dec
xchg
icebp
nop
push
add
lahf
adc
ins
jmp
shl
movs
(bad)
daa
mov
(bad)
lahf
xchg
jl
pop
dec
add
fdiv
push
fsubr
jmp
addr16
sub
mov
and
push
and
retf
and
and
aas
add
pop
cmc
nop
aad
std
jnp
(bad)
jp
jle
cs
out
mov
test
and
pop
and
inc
xor
imul
bound
push
xor
push
stos
outs
xchg
ret
aaa
cmp
jle
xor
(bad)
mov
inc
xchg
and
jg
addr16
ret
jno
and
xchg
ret
mov
ret
inc
icebp
inc
dec
cmp
push
mov
mov
sbb
sub
inc
icebp
ret
adc
out
xchg
pop
add
mov
sbb
(bad)
ja
in
or
jmp
inc
rcl
sar
ins
xor
dec
or
mov
mov
sbb
retf
dec
dec
sub
clc
mov
xchg
(bad)
jg
xchg
addr16
imul
xlat
or
dec
mov
jae
test
es
mov
mov
jge
jno
test
push
out
sub
inc
daa
mov
sti
push
sbb
or
(bad)
jae
sub
fst
cmp
sbb
es
bswap
mov
ds
xor
imul
dec
push
ret
add
push
pop
push
imul
fidivr
dec
rcr
push
loopne
retf
test
test
sbb
iret
push
pop
loop
push
iret
adc
mov
fimul
dec
test
enter
xchg
fidivr
push
mov
or
aad
bound
test
sbb
jbe
sbb
scas
xchg
fcmovne
ror
pop
cmove
pushf
lea
mov
push
jp
retf
jbe
sbb
repz
das
rcr
cmps
mov
push
jmp
retf
das
jns
call
cwde
jg
add
ret
jo
test
push
jg
fwait
mov
ror
test
cmp
enter
inc
into
cmp
loop
cmp
and
jo
lods
jnp
cmp
aaa
ror
rcr
pop
pop
into
or
pop
gs
push
sar
je
xor
jmp
test
mov
pop
pop
add
mov
fsubr
ret
(bad)
enter
ficom
fstp
ins
and
xchg
ficomp
xchg
aam
cli
sbb
sti
xchg
das
inc
xchg
outs
jle
bound
or
dec
pop
enter
scas
imul
adc
xchg
jecxz
sbb
out
cmp
std
fucom
push
or
jl
gs
test
test
pop
add
pop
pop
adc
cmp
jmp
cmp
adc
mov
jge
and
adc
(bad)
jge
in
xchg
mov
jecxz
mov
mov
mov
retf
dec
retf
and
jl
pop
jae
fwait
inc
int
xchg
mov
mov
cld
shr
mov
mov
call
and
dec
loopne
call
rcr
outs
sub
mov
mov
jle
mov
xor
xchg
adc
jmp
call
lods
push
in
cmp
pop
fwait
in
rcr
xchg
icebp
lahf
mov
iret
mov
pop
lods
pop
pushf
(bad)
or
adc
shl
test
add
sbb
and
pop
out
ss
int3
cmp
jl
jmp
in
xchg
inc
xchg
test
mov
jbe
xor
push
nop
mov
cmps
xchg
fiadd
sub
pop
(bad)
ins
cmp
push
mov
(bad)
fbstp
outs
std
ret
pop
pushf
into
stc
or
aas
ja
inc
in
jecxz
dec
cli
test
les
xchg
retf
sub
(bad)
xchg
icebp
inc
dec
and
stos
cdq
mov
outs
test
push
test
scas
mov
call
mov
ds
movs
inc
inc
pop
cdq
das
test
lods
sbb
out
fsubr
outs
aas
xchg
mov
int
inc
adc
lods
push
pop
ds
std
out
mov
mov
test
std
pop
and
jmp
cdq
imul
inc
inc
popa
adc
repz
sub
shl
dec
in
sbb
or
ret
add
mov
fisub
(bad)
lock
aam
scas
cmc
pop
jo
and
mov
out
xchg
adc
inc
das
ins
adc
xchg
iret
xor
mov
mov
loopne
push
dec
js
lea
or
movs
jnp
rol
ins
stos
outs
movs
imul
xchg
jno
sbb
push
ins
stos
test
lods
and
and
fisub
push
xor
mov
adc
mov
push
push
jmp
sbb
jg
(bad)
pop
movs
push
dec
dec
outs
rol
push
sbb
sbb
(bad)
jmp
and
cdq
ins
(bad)
js
sub
lods
ret
lds
push
out
xchg
je
pop
and
and
iret
fisttp
mov
call
ja
mov
add
pop
or
sub
push
sbb
sub
adc
adc
push
sahf
lock
jae
and
and
xor
inc
ror
adc
jno
push
mov
rcl
hlt
cmps
in
mov
jmp
mov
adc
add
fmul
(bad)
call
test
or
loope
lds
add
shl
push
add
pop
bound
mov
inc
jae
sbb
ss
addr16
or
xchg
push
aas
stos
loop
sub
pop
xor
sub
sub
or
ins
adc
pop
and
sub
pop
sti
mov
nop
pushf
movs
dec
stos
repz
xchg
(bad)
mov
gs
mov
sbb
lahf
cmc
jl
cmp
mov
push
leave
push
jo
sbb
sub
repnz
pusha
shl
sbb
lods
push
push
fs
dec
xor
or
push
aaa
mov
xchg
pushf
ffree
sub
leave
scas
rol
sar
std
sub
in
out
outs
mov
and
std
mov
stos
arpl
push
pop
ins
push
inc
mov
das
xor
imul
outs
lods
and
cdq
test
or
xchg
sti
push
inc
ds
stc
dec
(bad)
mov
and
fdiv
xor
imul
adc
push
xor
mov
shl
mov
(bad)
cmp
push
mov
dec
sub
and
jo
and
mov
sub
aam
inc
call
and
popf
pop
es
mov
(bad)
lea
es
test
push
mov
pop
rol
pop
in
rcr
dec
stc
jns
cld
mov
aad
jae
into
sbb
clc
lea
mov
add
lods
ins
cmps
mov
fs
pusha
rol
cmc
out
adc
in
lock
mov
pop
rcl
rol
xchg
mov
mov
out
push
dec
jae
std
ret
adc
fsub
aaa
scas
repz
sub
sbb
sbb
imul
push
and
push
and
sbb
mov
and
sti
dec
or
sbb
adc
pop
xor
pop
inc
pop
enter
mov
pop
icebp
xor
mov
jmp
rcl
add
daa
xor
mov
push
cmp
dec
(bad)
arpl
fild
imul
ja
sbb
retf
loope
mov
ins
pusha
cmp
sahf
adc
clc
(bad)
xor
arpl
push
jno
dec
or
call
xchg
rcr
mov
sub
mov
enter
pushf
fmul
scas
fild
jl
xor
mov
test
call
ins
sub
mov
(bad)
fldcw
sub
mov
mov
sub
jmp
out
dec
les
into
jmp
xchg
cmp
stos
arpl
xchg
outs
mov
mul
pop
in
jnp
test
lods
mov
and
xor
jecxz
mov
sub
add
outs
or
cdq
and
int3
ror
mov
shl
xchg
mov
data16
sti
dec
pop
js
xor
out
iret
jae
lahf
pusha
fsubr
rcr
ss
mov
sar
cld
sub
lock
sub
add
xor
scas
in
jp
imul
pop
lock
lds
jmp
jge
pop
mov
push
aas
jmp
xchg
and
pop
jnp
shl
mov
fs
push
pop
imul
movs
add
(bad)
mov
add
xchg
jns
mov
mov
push
lea
sub
call
rcl
pop
xlat
pop
jmp
iret
jnp
xchg
aas
dec
repz
xor
icebp
punpckldq
cmps
or
int
out
inc
ja
(bad)
push
mov
cmp
sti
xchg
stc
inc
shl
jns
hlt
lods
sub
jnp
retf
jno
rcl
repnz
mov
cwde
stc
inc
arpl
lods
out
sub
xchg
imul
mov
mov
sti
mov
inc
imul
mov
mov
inc
xchg
ja
fld1
jmp
jmp
(bad)
in
mov
sbb
aas
fisub
aas
pop
pop
inc
rol
jno
push
imul
js
hlt
adc
xor
sbb
clc
out
mov
repnz
movs
inc
add
inc
test
jno
mov
nop
jl
ret
xchg
xor
mov
in
ss
in
and
repz
enter
imul
sbb
or
mov
inc
jp
lods
mov
inc
sbb
pop
icebp
pop
xor
cli
repnz
push
xor
jno
pop
inc
fst
ret
in
inc
push
test
shl
loopne
jmp
xor
xchg
cli
push
shl
mov
pop
clc
int3
jb
cmc
out
sub
mov
cmps
js
fisub
fistp
(bad)
je
int3
loop
xlat
jle
sbb
cmp
mov
retf
sbb
dec
cld
push
push
in
ja
retf
mov
pop
test
fs
cmp
stos
shr
sti
adc
jne
jb
pushf
jmp
lods
jmp
ficomp
push
loopne
outs
out
and
mov
push
mov
adc
dec
pop
in
xor
push
test
test
retf
aad
and
js
xchg
mov
aad
lahf
outs
jl
sub
xlat
hlt
xor
mov
mov
repnz
mov
ins
sbb
(bad)
hlt
xchg
or
aas
pop
dec
jp
adc
push
or
in
stos
fadd
ds
inc
and
test
jno
sbb
scas
cmp
in
xchg
lock
xor
and
dec
push
push
cmp
(bad)
les
push
mov
adc
ds
cmp
cwde
xchg
aas
cdq
js
mov
mov
add
or
dec
add
test
xchg
cmp
or
add
xchg
fstp
pop
xchg
cmp
jmp
fidivr
mov
(bad)
push
pop
cli
lea
fldenv
mov
push
jnp
stc
dec
popf
mov
movs
push
mov
and
cmp
aam
jnp
push
or
ficomp
jge
stos
sub
cs
push
(bad)
mov
xchg
pop
xchg
cmp
fs
retf
clc
test
rol
enter
pushf
jge
mov
(bad)
(bad)
mov
stos
loop
mov
shl
xchg
js
por
sti
jl
fwait
xchg
adc
jb
push
cmp
cmp
and
cmps
mov
pop
jbe
sub
inc
sbb
cmp
scas
mov
(bad)
(bad)
mov
nop
fdiv
loope
or
enter
call
test
mov
add
call
ins
fistp
sub
cmp
sahf
int3
test
sbb
fnsetpm(287
xchg
ret
mov
test
ja
and
xor
sbb
fdiv
add
lahf
out
jns
inc
pushf
jg
cmp
daa
dec
cmps
cld
loop
mov
mov
clc
pop
sub
lock
jne
setp
ss
call
call
jecxz
loopne
mov
repz
push
cmp
aas
xchg
or
or
(bad)
and
cmp
repz
aad
mov
mov
loop
not
inc
std
inc
std
lahf
cmp
cli
xor
xlat
fistp
xor
dec
call
fcomp
push
sbb
aam
inc
stos
in
imul
in
dec
aas
dec
jl
add
jns
stos
ss
loop
mov
pop
retf
and
pop
xor
stos
cld
inc
and
mov
sbb
out
jge
xchg
popf
jle
xor
pop
aam
imul
push
addr16
mov
inc
ja
iret
ret
cmp
cli
repnz
jg
dec
std
cmp
clc
push
fdivp
sbb
stos
std
aas
mov
cwde
rcr
pop
add
ins
xor
xchg
jl
mov
jno
arpl
or
pop
lods
in
jnp
int3
nop
push
push
push
fcmovne
std
or
popa
fldcw
je
xor
jmp
or
(bad)
mov
jl
inc
mov
inc
mov
retf
outs
aad
xor
mov
push
adc
mov
(bad)
cwde
retf
clc
rcr
ins
xchg
jg
jmp
xor
stc
fst
xor
aad
sub
pop
imul
idiv
popf
add
mov
jbe
cmp
cwde
cmc
jecxz
hlt
fs
and
ja
cmp
mov
dec
cmp
inc
repz
clc
call
push
cmps
cwde
mov
cs
ret
push
or
int3
sbb
movs
add
push
cwde
into
cmp
jecxz
adc
sar
and
push
adc
cmp
std
test
addr16
cwde
imul
sub
loopne
or
adc
adc
sbb
and
jmp
pop
cld
pop
mov
hlt
lea
and
js
xchg
and
mov
push
rol
mov
test
xadd
cmp
imul
pop
mov
cmp
mov
xchg
ins
inc
jmp
adc
inc
jne
(bad)
xor
sub
shl
xchg
lea
or
mov
lds
adc
fisttp
pop
dec
adc
fsubr
test
mov
ins
inc
test
xor
jg
mov
in
cmp
mov
adc
daa
je
cmp
outs
xchg
cmp
les
dec
stos
cmp
or
hlt
loop
loope
sbb
and
adc
add
add
loop
mov
data16
adc
not
test
dec
stos
lods
adc
pop
in
imul
inc
and
and
mov
pop
inc
test
push
xchg
adc
mov
int3
pop
pop
dec
loope
push
mov
xor
sbb
sub
cmp
mov
jle
jg
neg
push
hlt
stc
stos
movs
xchg
adc
lahf
sub
(bad)
mov
in
xchg
or
(bad)
jmp
ficom
imul
mov
cmp
dec
aam
repnz
mov
dec
std
push
cwde
inc
sbb
fbld
mov
pop
sahf
xchg
dec
fnstsw
inc
mov
adc
or
pop
lahf
mov
adc
and
add
mov
pop
xchg
xchg
mov
and
dec
addr16
(bad)
(bad)
mov
(bad)
fwait
or
sub
pop
nop
scas
js
push
test
mov
xchg
test
cmp
ret
adc
iret
not
cli
popf
or
mov
(bad)
xor
adc
pop
xor
or
cmp
mov
xor
mov
jae
mov
xlat
push
add
call
and
dec
push
inc
xchg
jbe
out
dec
mov
jns
inc
fwait
leave
pop
mov
add
fs
pop
into
cs
dec
mov
xor
in
xchg
(bad)
mov
jb
pop
test
std
xchg
dec
jbe
push
dec
ins
ror
fmul
mov
fidiv
lahf
lds
ds
shr
mov
stos
jbe
adc
or
jg
clc
adc
xor
std
imul
push
ss
adc
jmp
jg
cmp
js
(bad)
mov
jns
push
push
push
mov
cwde
mov
cmps
lods
pop
inc
fstp
in
mov
addr16
xchg
push
loop
jno
ret
sub
jne
repz
enter
js
es
das
pusha
mov
pop
pop
lock
int3
push
gs
jns
ss
mov
out
sub
add
shr
jmp
fisubr
sbb
ja
push
inc
ds
dec
mov
lods
jo
hlt
rcr
cmovb
rol
cdq
dec
retf
movs
div
mov
push
jno
dec
xor
outs
(bad)
call
in
stos
sbb
scas
les
push
outs
pop
cmp
mov
push
mov
loope
sbb
ja
daa
and
dec
xor
jmp
add
mov
mov
scas
adc
mov
push
add
add
retf
jno
loope
into
mov
jbe
ds
jns
aam
mov
mov
es
adc
jp
movs
stc
ins
or
ins
imul
gs
shr
cwde
mov
dec
mov
js
dec
jae
popf
jmp
sbb
stos
movs
in
arpl
(bad)
mov
sti
jo
jnp
dec
scas
inc
xchg
mov
cli
arpl
add
mov
pop
and
xlat
sbb
add
sbb
aaa
inc
dec
ja
movs
adc
or
sbb
xchg
iret
jae
mov
adc
in
outs
dec
inc
out
ja
jns
ds
mov
mov
mov
enter
push
mov
fistp
or
cmps
fnstsw
or
(bad)
loopne
pushf
sar
movs
push
mov
adc
pop
adc
jge
iret
iret
sbb
jge
xor
lds
push
pop
(bad)
retf
iret
retf
lea
loope
xchg
dec
and
jl
imul
shr
ror
aas
mov
sub
mov
lock
or
inc
pop
scas
adc
sbb
or
mov
call
add
shl
in
or
iret
fsubp
orps
jg
mov
dec
inc
push
xchg
scas
fmul
mov
(bad)
jl
les
jae
aaa
mov
addr16
fs
aam
mov
push
stc
popa
repnz
shl
cdq
repnz
fsub
push
movs
jae
in
test
pop
or
icebp
test
mov
push
push
xor
outs
outs
cdq
dec
sbb
bound
aas
(bad)
cmp
pop
std
jb
adc
fst
pop
outs
lock
test
sti
sub
mov
push
add
frstor
pop
loop
outs
test
int3
xor
xchg
mov
jae
retf
out
fdiv
cld
scas
shl
aas
clc
adc
pop
cmp
aad
sub
in
(bad)
imul
mov
mov
iret
call
loope
loopne
test
gs
mov
aam
pop
push
push
rcl
jp
addr16
fwait
pusha
test
push
cwde
idiv
arpl
hlt
or
mov
cdq
icebp
xchg
mov
cmp
out
imul
push
and
and
out
mov
dec
inc
scas
and
push
xor
popa
int
jb
mov
mov
loop
js
jmp
hlt
fs
retf
bound
dec
and
cmp
lock
adc
call
cs
daa
sbb
outs
pop
adc
xchg
add
rcr
fdivp
pop
popf
inc
sar
in
cs
jge
pop
cld
xchg
loop
cmp
pop
out
jbe
cmp
pop
mov
jmp
stc
jns
ins
je
into
retf
sub
adc
adc
xchg
mov
dec
int3
arpl
add
adc
popa
adc
pop
add
enter
inc
clc
loopne
push
pop
into
out
mov
loopne
leave
jno
in
inc
inc
xor
xchg
loop
mov
jmp
dec
cwde
dec
pop
nop
push
dec
fcomi
mov
lds
cmp
call
jo
fidivr
cmp
cli
call
loope
and
adc
movs
jmp
jne
stc
or
retf
push
inc
mov
jl
fst
pushw
adc
loope
push
enter
cmp
cwde
les
jo
adc
hlt
add
cmp
das
sub
add
and
jbe
arpl
fld
jg
rol
aam
in
dec
fs
inc
push
mov
out
sbb
(bad)
cmp
pop
(bad)
outs
call
bound
pop
and
mov
dec
lods
sub
fld
add
imul
test
nop
inc
ret
or
popf
popf
in
sbb
(bad)
jge
pushf
call
rol
(bad)
jne
sbb
jne
mov
mov
sub
pop
lea
xor
mov
stos
imul
cs
cld
sub
ins
test
cmp
mov
or
and
mov
or
call
jge
sbb
mov
mov
into
rol
pop
inc
cmp
or
jg
stc
dec
lods
ret
outs
cmps
es
out
imul
jae
push
ret
idiv
mov
jg
outs
movs
xchg
push
inc
inc
add
dec
(bad)
(bad)
aad
fst
frstor
jmp
and
xchg
jmp
xor
or
enter
ss
jbe
jp
push
xor
sbb
loopne
loop
(bad)
aam
jmp
sub
cmp
sbb
jp
test
mov
imul
push
mov
mov
bnd
retf
jge
jae
pop
je
ja
jg
dec
daa
jecxz
xchg
fldenv
movs
add
je
mov
aas
inc
mov
or
ins
stos
dec
push
inc
(bad)
pop
repz
adc
sub
(bad)
lods
push
pop
mov
cmp
pop
dec
ins
out
aas
jge
mov
xor
mov
push
in
and
movs
or
fwait
mov
in
push
test
cwde
mov
sar
fstp
std
sbb
and
movs
sub
test
enter
retf
mov
(bad)
cdq
out
shl
xchg
push
into
std
dec
fwait
push
scas
popf
test
jbe
in
sbb
sub
(bad)
pop
arpl
imul
not
jle
xor
push
jns
call
mov
ret
loope
test
sub
xchg
and
pop
dec
shr
js
scas
pop
xor
lahf
rcl
aam
push
fdivr
sub
dec
int3
inc
pop
jmp
sub
xchg
loop
or
out
xor
dec
adc
les
mov
scas
cmps
(bad)
or
outs
cli
cmp
adc
push
clc
in
sbb
mov
aaa
xor
or
frstor
(bad)
fistp
shl
mov
push
and
and
xchg
dec
retf
push
push
push
std
mov
mov
jl
xor
jno
mov
stos
in
push
outs
arpl
sbb
lea
xchg
aam
push
xchg
fadd
mov
ret
dec
retf
test
cmp
inc
adc
pop
push
iret
lods
inc
out
push
and
out
inc
cmp
in
pop
mov
shl
les
mov
dec
mov
(bad)
mov
fldenv
xor
cmps
ror
enter
outs
(bad)
icebp
mov
es
lds
pushf
shl
ror
je
jg
pop
popa
movs
adc
adc
fld
enter
pop
hlt
mov
pop
inc
aaa
ret
pop
add
repz
mov
pop
imul
loope
push
mov
inc
sbb
push
ds
adc
shl
adc
scas
imul
lods
(bad)
(bad)
push
pop
std
out
call
fucomi
aaa
jmp
sub
push
int
pop
pop
xabort
and
sbb
lahf
mov
dec
sub
sub
push
or
div
leave
or
int3
jnp
jp
sub
mov
adc
push
stos
mov
sti
add
jae
in
mov
xor
cmp
sbb
jns
dec
jno
scas
je
push
cdq
pop
fcomip
(bad)
loopne
add
popa
adc
stc
push
mov
xlat
mov
(bad)
adc
dec
loope
(bad)
pop
mov
rcl
pop
stos
imul
loopne
in
es
push
push
pop
in
mov
mov
(bad)
rcr
mov
ins
cmps
bound
nop
jmp
pop
(bad)
mov
cmc
fcom
jg
jbe
outs
and
clc
mov
add
push
push
in
push
icebp
daa
mov
retf
add
mov
loop
in
popf
and
leave
loopne
mov
jecxz
add
and
and
jmp
adc
ja
inc
mov
je
or
lods
in
mov
mov
push
ret
pusha
xchg
out
adc
jle
pop
mov
pop
and
in
adc
dec
iret
adc
cmp
in
cwde
push
ret
cmp
(bad)
(bad)
fistp
retf
xlat
lods
sbb
add
jb
sbb
push
cmp
fadd
mov
mov
ds
icebp
xchg
shl
push
cmp
retf
out
add
daa
cmp
and
jl
outs
inc
ins
jecxz
rol
pop
int3
mov
(bad)
and
call
jecxz
scas
(bad)
xor
retf
cld
fcom
shl
add
inc
out
jge
push
aam
lahf
rcr
or
retf
fadd
leave
mov
push
dec
dec
jnp
adc
jns
out
lea
iret
mov
lods
hlt
xor
ror
jo
pop
push
loopne
fdivr
fbld
data16
xor
(bad)
sbb
repz
mov
fcomp
(bad)
jl
sahf
fcmovnu
ins
in
ret
mov
pop
mov
mov
mov
pop
lods
imul
and
jns
inc
xlat
jae
jge
popf
call
fisttp
pop
js
jp
(bad)
xor
push
fld
xchg
test
adc
movs
cmp
adc
jno
stos
mov
mov
(bad)
jo
les
xor
lds
movs
aam
mov
repnz
gs
in
movs
pop
mov
push
sbb
mov
hlt
pop
xor
mov
jle
jno
std
int3
sbb
ja
mov
jb
aas
cli
test
rcl
iret
fst
mov
mov
or
je
xchg
lea
mov
cwde
nop
inc
mov
rol
mov
test
xchg
inc
(bad)
jo
and
sub
aaa
jmp
js
sbb
xor
ds
test
daa
add
mov
xchg
jl
in
in
mov
push
xchg
sahf
sub
mov
ret
and
movs
int
rol
test
mov
aam
fld
arpl
cmp
loop
dec
mov
lahf
and
or
pop
ds
in
sub
jns
cmp
xor
add
loop
push
stos
mov
pop
inc
sub
jae
pop
xlat
repnz
and
shl
cmp
push
imul
mov
jg
mov
xlat
movs
jle
cmps
adc
push
dec
adc
test
pop
fwait
xchg
iret
add
pop
jbe
sahf
dec
push
jbe
lock
cmc
lods
lahf
inc
xor
mov
add
shr
mov
mov
cdq
lock
xor
outs
inc
sub
xor
push
inc
xchg
jmp
test
data16
adc
aam
fist
clc
xchg
mov
mov
in
jge
in
fsub
xor
or
cmp
out
or
push
dec
ror
lahf
mov
mov
push
or
xor
rcr
enter
push
outs
sahf
sub
jmp
(bad)
push
data16
mov
push
ds
cmp
xchg
lahf
xchg
sub
push
cmps
scas
ins
mov
(bad)
int
aas
push
out
dec
fwait
in
add
js
push
jl
push
imul
std
sub
mul
mov
arpl
inc
rol
jecxz
inc
dec
ror
adc
sub
cmp
outs
(bad)
xlat
or
xchg
dec
call
faddp
sbb
add
xchg
in
fdiv
sub
inc
mov
movs
cmp
jns
int3
and
pop
into
addr16
scas
fld
mov
inc
pop
stos
add
mov
in
int
cmp
and
out
ret
scas
shl
scas
call
or
mov
push
xchg
mov
xchg
push
add
das
dec
inc
addr16
sub
mov
cwde
fwait
in
push
int
pop
and
push
fs
bound
clc
pop
icebp
fs
sbb
sub
in
sbb
pop
pushf
push
rcr
inc
push
imul
push
sub
push
shl
inc
push
sti
xor
mov
pop
std
lahf
mov
scas
adc
mov
test
test
mov
mov
xor
clc
pop
ror
je
retf
hlt
jae
pushf
add
mov
jne
(bad)
aam
loope
cld
mov
mov
(bad)
scas
mov
xchg
loop
xchg
stos
mov
psrad
fcom
mov
dec
fcom
ins
fld
int3
sti
mov
xchg
push
and
bound
stos
push
mov
push
shl
test
mov
test
mov
mov
inc
(bad)
pop
cmc
les
enter
sbb
push
ds
add
nop
stc
stos
lods
bound
jno
fs
repnz
hlt
mov
dec
xor
outs
add
ror
xchg
rol
cmp
dec
adc
jno
adc
repnz
imul
xchg
pushf
stos
push
mov
rcr
shl
popa
or
and
sub
cwde
jp
push
sbb
or
xchg
push
mov
enter
pusha
mov
pop
cmps
inc
add
cmps
pushf
dec
cmp
inc
(bad)
and
sahf
xor
pop
pop
jp
loop
scas
add
add
pushf
or
fs
xor
adc
jg
(bad)
pop
loopne
into
or
adc
mov
lods
mov
jp
push
(bad)
jp
pop
icebp
dec
(bad)
jge
call
scas
xor
mov
enter
dec
mov
outs
out
ret
pop
jo
imul
pop
pushf
jo
jmp
mov
sub
dec
test
rcpps
xor
ret
sub
imul
and
pop
mov
test
shl
sbb
cwde
pushf
fidivr
cli
cmp
cwde
xor
mov
fild
mov
sub
pop
sub
jmp
inc
push
mov
push
dec
movs
icebp
cmps
sub
mov
cwde
cmps
pop
dec
(bad)
ror
and
popa
xchg
jl
out
pop
push
push
aaa
jmp
int
sbb
pop
and
and
lea
fcom
test
nop
addr16
std
xchg
sti
imul
xlat
inc
push
add
sbb
dec
mov
movs
mov
adc
push
xor
jno
sub
and
pushf
xchg
add
pusha
les
popf
lods
jae
mov
sahf
push
inc
sub
sbb
popf
test
and
jle
xor
dec
xchg
cdq
rcl
(bad)
lds
loope
scas
mov
addr16
jp
ins
jmp
jb
imul
inc
fiadd
push
into
dec
addr16
jecxz
adc
movs
repnz
shr
test
pop
in
fsubr
(bad)
stos
pop
pop
add
xlat
jo
push
sub
mov
inc
xor
(bad)
or
sub
arpl
and
mov
cmp
clc
jae
inc
call
hlt
iret
clc
cmps
or
pop
mov
into
ret
test
pop
cmp
cmp
es
dec
push
sub
aaa
dec
add
repz
pop
dec
ffreep
mov
ror
adc
jne
adc
inc
icebp
cmc
xor
sub
les
hlt
xor
jno
sub
les
push
xor
mov
xor
in
mov
pop
fs
jge
jp
mov
loop
hlt
adc
ss
cmc
sbb
mov
push
or
(bad)
sbb
mov
add
leave
sub
addr16
std
popf
jg
ins
shr
popf
test
dec
xchg
mov
and
mov
in
retf
and
std
es
mov
or
push
pusha
and
rcr
pop
xor
push
test
xchg
seto
jmp
jge
cld
repz
mov
xor
lock
mov
jnp
jl
and
add
test
outs
and
sbb
push
int3
imul
and
(bad)
and
nop
movs
or
jg
inc
push
ss
fdiv
es
jne
pusha
push
iret
loopne
push
lods
jge
inc
mov
xchg
mov
pop
cvtps2pi
mov
dec
xor
ror
scas
aam
cmc
push
push
pusha
dec
lods
jne
push
(bad)
xor
mov
push
dec
push
mov
inc
cmps
mov
stos
mov
push
mov
jle
sub
fimul
jb
mul
xor
test
xchg
and
sub
mov
adc
inc
mov
(bad)
cmc
mov
scas
and
push
sahf
lds
retf
in
(bad)
push
into
add
das
pop
int3
(bad)
sbb
test
mov
push
iret
xchg
push
cmp
out
jae
mov
xor
mov
push
outs
ds
jbe
stos
sti
retf
retf
pop
pushf
jp
xor
movs
xlat
cmp
xchg
ret
mov
jmp
or
in
(bad)
scas
pop
lahf
sub
pushf
iret
movs
add
mov
mov
pushf
adc
mov
cmp
push
add
push
fcom
mov
xchg
mov
adc
stos
aas
je
neg
in
push
jb
fwait
das
dec
pusha
adc
and
sbb
ret
pop
iret
pushf
loope
mov
into
jae
ret
out
or
mov
mov
add
sub
sbb
loope
adc
fistp
in
xor
or
test
loope
ret
cli
sub
imul
xor
sub
(bad)
into
rcr
push
mov
imul
xchg
sbb
xchg
clc
jno
int3
dec
scas
and
adc
sbb
in
lods
cmps
not
popa
pop
repnz
ds
jne
cmc
cmp
int
out
adc
addr16
jo
fwait
cmc
fadd
xchg
pop
cmp
mov
cmps
repnz
lock
or
outs
out
mov
mov
inc
or
dec
in
dec
jns
aas
enter
shr
sbb
retf
pop
loop
in
add
lods
push
mov
push
rol
push
add
sub
jo
es
int
dec
outs
mov
aad
and
stos
and
add
ins
push
and
and
iret
xchg
add
fnstcw
ins
inc
dec
mov
(bad)
sub
mov
int
adc
loope
arpl
dec
daa
xchg
push
xchg
add
nop
test
mov
cmp
xor
cs
cmp
rcl
out
movs
jge
mov
adc
jmp
daa
xchg
add
ja
call
lods
sti
lods
mov
addr16
add
popa
push
mov
arpl
test
repnz
cmc
out
push
enter
adc
fild
(bad)
cmp
lods
xchg
or
xchg
sbb
or
aam
mov
inc
(bad)
call
pushf
sahf
outs
mov
inc
test
mov
mov
add
add
xchg
mov
stos
dec
push
retf
fisttp
add
fstp
dec
or
mov
cmps
and
sbb
jg
ret
jb
push
mov
fidivr
mov
pop
test
(bad)
fist
mov
std
jg
sbb
push
outs
jmp
and
jmp
int3
outs
mov
ror
inc
in
out
xchg
mov
push
push
(bad)
mov
or
ins
cmp
imul
jmp
inc
outs
(bad)
cmc
js
sub
push
lods
mov
cmp
js
pop
xlat
popf
sbb
or
dec
mov
xchg
out
out
jnp
outs
mov
call
and
mov
outs
xchg
ret
jg
xchg
cmps
sbb
shr
sub
or
jg
popa
mov
jl
sahf
je
jo
movs
pop
push
js
sbb
mov
jb
sbb
pusha
inc
mov
in
add
int
(bad)
jbe
nop
dec
push
inc
mov
test
cdq
mov
aam
adc
mov
push
push
xlat
dec
mul
xchg
jns
xchg
mov
popa
push
pushf
jo
pop
add
and
mov
(bad)
sub
aam
sbb
(bad)
cmp
ins
sub
push
daa
shl
jbe
adc
popf
lock
jecxz
xchg
push
iret
fs
and
(bad)
pop
xchg
inc
or
dec
mov
jnp
(bad)
(bad)
dec
jmp
ret
ja
(bad)
pop
mov
lahf
or
inc
cmp
dec
pop
pop
data16
(bad)
ins
mov
push
and
mov
test
xchg
add
adc
push
addr16
into
mov
test
add
mov
pop
and
pop
adc
shr
and
fcomip
pop
nop
sti
sbb
pop
fdiv
aaa
xlat
lock
cmp
clc
or
mov
adc
outs
cmp
xor
and
push
icebp
shl
mov
cmp
mov
push
push
out
fadd
pop
into
(bad)
adc
test
aam
mov
xor
lahf
xor
and
out
xchg
into
sub
or
jns
call
das
in
movs
scas
pop
mov
scas
inc
ror
pop
jmp
mov
mov
in
lock
call
sbb
push
pusha
or
nop
mov
jae
imul
jne
movs
repz
lock
inc
cmp
mov
in
jge
aam
xor
or
icebp
pop
mov
ins
ret
das
scas
dec
add
cmps
popa
inc
inc
repz
inc
mov
in
xchg
cmp
into
ds
cmp
and
(bad)
xor
dec
cmp
retf
push
(bad)
retf
ins
test
out
jl
xchg
push
and
and
adc
xchg
jg
js
xlat
jp
xchg
push
imul
dec
scas
pop
xor
cli
idiv
or
xor
xor
jmp
xchg
movs
fild
add
sbb
ins
out
sub
xor
pop
jl
add
lock
dec
jae
out
pop
fcmovnu
in
aas
test
mov
cmp
push
ret
and
aaa
pop
in
stos
push
ins
cmp
push
push
retf
xor
les
mov
test
mov
adc
inc
fwait
cmp
addr16
dec
dec
daa
mov
std
jmp
inc
or
mov
cwde
xlat
and
out
js
push
xchg
fs
jmp
test
and
repz
std
imul
enter
cmc
out
jbe
sbb
inc
push
fst
mov
imul
mov
int
gs
scas
and
xor
and
ror
and
movs
leave
or
mov
into
push
outs
fstp
out
push
adc
add
cs
cmp
pop
hlt
and
sbb
dec
lods
mov
mov
jns
cmp
daa
repz
or
sub
xchg
and
aam
dec
push
add
scas
stos
sub
cmp
xor
pop
retf
lock
pop
push
lock
sbb
mov
cli
cmp
add
xchg
or
pop
fcomp
mov
push
enter
int
mov
mov
xlat
push
mov
xor
jg
jmp
adc
std
inc
std
aaa
call
in
jae
test
jge
data16
and
cmp
int3
fimul
mov
out
ins
sbb
scas
out
jb
sub
sbb
loope
or
loop
(bad)
jmp
xchg
add
adc
hlt
xor
cmc
stos
cmpps
imul
addr16
jmp
pop
retf
out
mov
sbb
dec
inc
lods
mov
and
and
dec
add
push
jecxz
mov
inc
xlat
and
out
adc
(bad)
push
movs
push
xchg
and
sub
lahf
call
lds
outs
xchg
lea
in
mov
cmp
jae
cmps
push
sahf
dec
fldcw
jno
dec
daa
xchg
adc
mov
mov
js
shl
inc
jno
mov
or
mov
int3
xor
and
leave
cwde
mov
or
inc
mov
xchg
cli
outs
arpl
adc
into
push
lea
(bad)
shl
xchg
sub
push
getsec
sahf
xchg
and
retf
ficomp
mov
xor
cdq
or
std
pop
mov
jb
add
sub
mov
mov
fwait
in
pusha
imul
dec
(bad)
fcom
or
or
add
push
inc
mov
mov
push
sti
lods
mov
aaa
or
pusha
cdq
mov
or
adc
lds
pop
jmp
inc
sti
adc
mov
outs
xchg
mov
push
leave
pop
outs
cld
jle
(bad)
into
push
cmp
cli
mov
mov
and
retf
or
stc
mov
mov
pop
imul
push
loopne
mov
sub
shl
cmp
jg
test
sub
arpl
test
xchg
(bad)
rcl
lea
sbb
mov
dec
sub
mov
push
push
fnstenv
ficom
inc
ja
cli
sub
dec
sti
int3
xor
nop
push
inc
ds
xchg
xlat
leave
das
aad
mov
popf
push
retf
loop
loope
cmp
nop
push
or
imul
ja
add
loop
inc
enter
push
outs
jl
push
mov
pop
xor
mov
loopne
and
jmp
loopne
xchg
daa
cmp
lock
push
rep
mov
repz
push
addr16
sub
out
and
jp
loopne
pop
fsubp
mov
lods
aam
out
clc
sub
jb
lods
mov
pop
mov
push
mov
(bad)
jl
cmps
scas
lea
adc
nop
call
dec
mov
ror
rcr
sbb
out
pop
xchg
in
je
cmp
mov
or
or
div
sbb
fidiv
leave
imul
ret
or
inc
dec
ror
dec
rcr
in
bound
pop
push
mov
mov
and
gs
call
lds
or
sub
add
(bad)
pop
lods
fisttp
test
xchg
mov
push
cwde
jno
(bad)
pop
movs
scas
xchg
(bad)
and
rol
lahf
arpl
mov
gs
mov
out
jp
push
mov
jmp
lods
pop
pop
mov
add
sbb
jp
mov
scas
loop
sbb
dec
les
mov
add
mov
pop
cmp
dec
aaa
fucom
cmc
adc
adc
jmp
imul
push
mov
cmp
xlat
pop
mov
push
test
ins
cdq
jbe
fmul
jg
imul
sbb
mov
xchg
mov
jge
push
mov
or
lea
xor
outs
fwait
mov
retf
inc
movs
sub
adc
sti
add
out
sub
sbb
loope
bound
mov
adc
sub
or
neg
ret
sbb
pop
movnti
aam
and
loope
xor
cmc
(bad)
or
outs
mov
setle
ror
inc
xor
jp
jg
mov
pop
mov
push
mov
inc
out
retf
sbb
imul
sub
push
mov
inc
add
mov
(bad)
mov
mov
and
outs
push
cwde
aaa
inc
jbe
aaa
scas
loopne
pusha
rep
xor
aad
out
in
iret
jmp
cmp
xor
mul
push
shr
jmp
jecxz
and
and
shl
jg
data16
jae
mov
fnstcw
adc
jno
mov
cmp
cdq
jmp
neg
loope
cmp
mov
mov
xor
pop
outs
cdq
add
gs
sbb
sbb
dec
pushf
sbb
mov
xchg
add
jns
jns
sar
cs
and
cmp
mov
mov
push
pop
xchg
mov
cmp
imul
mov
shr
ds
aam
jb
gs
adc
xchg
sbb
cmp
dec
xchg
push
add
add
xchg
sub
lahf
lahf
shl
cmps
push
(bad)
jo
mov
test
je
sbb
cwde
mov
std
loopne
pop
sub
cmps
lods
mov
out
mov
in
int
sub
mov
or
adc
cmp
fidiv
popa
pop
dec
es
hlt
test
add
mov
sbb
push
inc
xchg
inc
fwait
std
dec
fistp
and
jno
xor
stos
xchg
pushf
into
xor
xchg
inc
jo
push
js
ja
pushf
test
fwait
mov
or
xor
sbb
xor
test
mov
dec
ins
mov
add
into
mov
xor
js
aas
sbb
and
in
clc
enter
addr16
cmps
prefetchw
or
scas
push
sub
(bad)
xor
jae
jne
push
arpl
cs
cmps
mov
test
adc
(bad)
jnp
clc
pop
scas
loopne
push
push
mov
addr16
xchg
xchg
int3
jae
sahf
push
and
push
es
fisttp
cmp
ror
in
adc
gs
inc
mov
xlat
xor
pop
movs
inc
es
pop
cmps
cmps
mov
in
mov
adc
dec
shl
add
sub
cld
movs
dec
je
or
pop
retf
cmp
mov
xor
ret
popa
(bad)
fmul
inc
test
sbb
mov
aas
push
in
jae
dec
or
std
mov
inc
mov
in
mov
xchg
cwde
ja
or
(bad)
cmp
pop
adc
jbe
add
cmp
jg
sbb
push
mov
push
std
hlt
ror
jae
xchg
lock
pop
mov
xor
rcl
inc
adc
aam
jno
push
fnsave
dec
or
aas
mov
rol
movs
outs
mov
lods
leave
sar
push
sar
inc
call
pop
mov
scas
in
test
pop
into
push
cmc
cmp
fistp
xor
aad
inc
add
aad
adc
jo
pushf
dec
dec
fs
int
mov
enter
xor
push
push
inc
adc
aam
sahf
aas
add
add
dec
pop
lods
in
push
mov
cmp
mov
cmp
sbb
dec
sub
and
ds
mov
movs
ins
cmp
mov
movs
mov
fnsave
mov
push
sbb
in
adc
mov
cmp
hlt
aas
cmp
outs
aad
lods
stos
sub
and
iret
mov
pop
or
mov
and
mov
xor
or
mov
xor
mov
cmc
daa
jae
sbb
push
ret
dec
dec
pop
adc
in
aad
and
add
jp
cli
dec
(bad)
pop
push
inc
or
ja
pop
(bad)
mov
(bad)
lods
les
cmp
mov
xchg
into
arpl
loope
pop
xchg
inc
inc
(bad)
jns
push
lahf
loope
cmps
lahf
xchg
jns
bound
push
push
dec
call
pop
inc
cmp
pop
aas
sar
inc
fisubr
je
mov
(bad)
sti
call
push
clc
sbb
sbb
scas
adc
out
and
mov
xchg
iret
pop
jp
jmp
push
cmp
pushf
out
inc
or
cld
aas
clc
sbb
add
sub
pop
inc
icebp
mov
jg
jmp
and
mov
inc
jno
mov
cmp
(bad)
push
and
nop
adc
iret
ins
clc
mov
aaa
jae
jmp
outs
cwde
out
je
add
mov
dec
out
push
pop
xor
adc
js
add
mov
sub
test
push
repnz
lock
adc
nop
movs
dec
jae
jno
test
pop
(bad)
sahf
xor
mov
push
mov
pop
or
je
or
cmp
or
retf
push
push
dec
sahf
mov
repnz
xchg
sub
dec
cmp
pop
xchg
push
hlt
mov
test
not
inc
jns
sub
xchg
mov
mov
rcr
sahf
sbb
sti
sti
data16
jecxz
not
scas
imul
test
cmp
inc
fisub
loop
ss
adc
test
movs
xor
sbb
retf
stos
dec
jg
xchg
mov
xor
push
ret
pop
outs
out
dec
xor
ret
rcr
xacquire
outs
jge
push
inc
scas
inc
pusha
mov
imul
mov
ret
(bad)
pop
out
cmps
xlat
movs
outs
js
scas
adc
test
rol
fsubr
mov
jmp
sub
push
xchg
add
fnstsw
ss
test
xchg
sub
sahf
push
sbb
adc
fidiv
test
inc
repz
cmp
es
and
mov
js
jae
fcmove
mov
sbb
mov
cmps
lock
out
add
test
mov
xchg
mov
mov
jg
mov
jl
sbb
mov
dec
(bad)
js
les
lods
nop
outs
gs
ret
hlt
xor
scas
xor
sub
mov
xchg
jecxz
mov
sbb
pop
xor
inc
sbb
(bad)
lea
lods
fdiv
adc
push
mov
xchg
pop
movs
sbb
xor
xchg
scas
and
cs
jmp
rcr
test
popf
gs
push
jno
addr16
mov
adc
xor
inc
xor
ins
xchg
in
das
data16
cwde
cmps
or
jno
jmp
inc
mov
and
or
cmps
arpl
inc
pop
xor
pop
(bad)
inc
loopne
test
lods
cmp
popf
aad
or
sub
inc
cmp
(bad)
jle
jno
shl
mov
fdivr
in
cmp
xchg
stos
ror
sahf
mul
es
push
leave
xchg
mov
xchg
push
int
(bad)
cli
adc
mov
cld
ja
cmc
and
xor
xchg
loop
inc
test
cmp
in
dec
pop
daa
aas
mov
inc
out
retf
push
nop
or
shl
sar
ins
imul
xor
pop
fwait
outs
and
mov
into
and
outs
dec
dec
mov
lahf
add
adc
fsubr
stc
cmp
(bad)
test
cmc
sub
mov
stos
mov
xchg
inc
mov
gs
rcl
pop
not
mov
imul
icebp
add
pop
jmp
mov
cmp
imul
push
jae
nop
fstp
call
in
test
xchg
jb
cmp
mov
in
lea
xor
add
daa
fistp
cli
lods
mov
mov
je
dec
loop
aas
or
or
shl
mov
and
and
dec
jo
test
push
mov
ret
pushf
(bad)
(bad)
shl
shl
mov
nop
sbb
in
scas
stos
and
mov
icebp
lods
add
or
mov
dec
scas
outs
jnp
and
and
push
push
mov
rcr
sti
pop
mov
adc
sahf
aam
mov
fdivr
xor
and
or
leave
push
push
popf
test
adc
ja
sub
pusha
fstp
test
add
out
rcl
or
xchg
aam
add
in
aas
cmp
popa
in
sbb
or
xchg
cdq
cld
ja
repz
addr16
mov
push
jnp
jae
pushf
test
sbb
inc
mov
sbb
(bad)
retf
pop
sbb
enter
sub
sahf
add
mov
ret
or
ror
jno
mov
hlt
mov
or
jl
inc
lea
xor
jmp
xchg
inc
and
in
jbe
std
inc
inc
push
fiadd
dec
cdq
les
push
jl
movs
lahf
add
xchg
fs
dec
loop
js
jbe
dec
pop
sti
pusha
xchg
jecxz
adc
or
into
test
(bad)
call
mov
mov
enter
xor
(bad)
pop
std
mov
push
mov
mov
xor
in
in
ret
jge
xchg
ret
das
lahf
test
aam
imul
push
dec
int
(bad)
xchg
mov
push
adc
pop
or
(bad)
mov
arpl
mov
mov
or
push
into
test
stos
into
pop
leave
jp
loop
outs
and
add
jbe
(bad)
loop
add
outs
shl
inc
jne
cmps
mov
cmp
repz
out
pop
or
call
push
sbb
mov
pop
lods
or
push
sub
xor
push
adc
mov
sub
and
cmp
add
or
lahf
retf
pop
jmp
mov
pop
sahf
fistp
mov
jmp
mov
mov
jle
push
push
cmp
fisttp
inc
cs
das
outs
inc
mov
(bad)
cmp
mov
sbb
fs
jmp
retf
sub
cmp
xor
mov
inc
and
push
sub
arpl
rcr
mov
fimul
xchg
(bad)
aaa
xor
sbb
std
repnz
int3
in
mov
icebp
out
aaa
add
stos
mov
test
push
mov
xor
sub
mov
dec
xor
es
dec
xchg
rcr
inc
test
into
movs
daa
add
mov
pusha
iret
popf
mov
(bad)
push
mov
cld
lods
fs
out
push
inc
pusha
leave
retf
jge
mov
dec
adc
int3
or
and
pusha
pop
mov
(bad)
aam
pop
xlat
in
enter
jno
fdiv
aaa
inc
std
sub
xchg
imul
jo
cli
xchg
add
outs
rcl
xchg
mov
retf
push
mov
fild
xchg
xor
fs
push
(bad)
mov
aam
mov
mov
and
cmp
pop
arpl
jge
inc
int3
imul
jns
out
out
sar
fiadd
mov
imul
and
mov
add
inc
and
inc
inc
push
add
in
jp
mov
xchg
loope
and
dec
or
rol
shr
loop
jle
inc
cmp
movs
addr16
sahf
or
test
aam
dec
mov
loope
fimul
out
sub
pop
shr
mov
adc
mov
inc
jmp
cld
(bad)
jnp
pushf
in
ror
jns
cmp
out
mov
in
xchg
fist
xchg
fdivr
or
(bad)
hlt
imul
add
sub
or
mov
xchg
pop
cmp
cwde
call
xor
sub
adc
iret
jne
xchg
pop
movaps
or
inc
mov
outs
mov
mov
test
loope
(bad)
scas
mov
in
push
pop
sbb
mov
(bad)
mov
cli
fbstp
aam
xor
xchg
gs
sbb
clc
dec
ror
jns
push
(bad)
dec
out
pop
push
sub
xchg
in
dec
xchg
mov
inc
xor
lock
mov
xchg
dec
xor
arpl
push
out
call
je
dec
(bad)
fistp
int3
xor
and
push
scas
add
call
pop
daa
rol
mov
jmp
jmp
jne
test
in
addr16
in
ins
jae
(bad)
call
push
adc
mov
xchg
mov
sub
cmp
call
xor
movs
sub
jp
sti
pop
dec
cmp
sar
leave
pop
xor
neg
jbe
jo
pusha
dec
sahf
aas
outs
xor
bound
addr16
pop
mov
imul
push
xor
in
std
push
push
pop
mov
popa
xor
adc
out
dec
cmp
cmp
cld
aas
or
jmp
inc
mov
xor
sub
pop
and
pop
inc
pop
cmp
call
xor
std
cmps
or
jge
xor
pop
push
loop
leave
or
lods
sahf
sbb
mov
(bad)
fsubr
sbb
call
jp
inc
or
fimul
or
imul
fisubr
gs
aad
loope
inc
xchg
lock
push
cmp
lahf
cmp
ja
pop
mov
fmul
inc
mov
add
jl
sbb
mov
cmp
adc
cld
lock
fld
hlt
mov
jb
and
outs
(bad)
out
inc
nop
adc
or
(bad)
cmp
retf
and
aas
jle
mov
adc
scas
add
mov
mov
cld
out
push
(bad)
push
xchg
adc
and
pop
push
hlt
push
xor
jge
test
pop
hlt
and
dec
or
and
jae
call
repz
int3
or
pop
lahf
outs
hlt
pop
sbb
pop
mov
(bad)
adc
and
(bad)
sub
push
pushf
das
(bad)
les
and
mov
arpl
adc
dec
and
jno
xchg
repnz
dec
xor
push
or
sbb
dec
or
push
xor
add
movs
jno
fxch
xchg
cmp
mov
outs
sub
push
gs
in
sahf
add
call
dec
mov
mov
lahf
and
fist
aam
in
fs
fistp
mov
call
fidiv
cmp
add
in
jmp
xchg
add
dec
std
test
xor
sub
addr16
push
cmp
add
mov
lods
lods
sub
jle
scas
add
in
pop
push
out
jp
scas
fucomp
hlt
inc
aad
loop
pop
iret
mov
neg
or
outs
ins
xchg
xor
sbb
pop
xor
push
cmp
repnz
inc
push
xchg
sub
mov
push
inc
dec
push
or
sub
mov
repz
xchg
(bad)
adc
loope
push
mov
pop
mov
hlt
xchg
pop
call
movs
call
out
cmp
mov
pop
push
adc
loopne
or
loopne
inc
stos
or
sbb
or
pushf
aad
mov
out
sbb
pop
add
hlt
xlat
daa
scas
and
fist
mov
jle
retf
gs
ror
fcmovnbe
push
cmp
mov
int3
and
neg
mov
dec
(bad)
aas
addr16
jns
jp
mov
pop
dec
inc
mov
mov
aad
test
clc
pop
imul
sub
ins
fdiv
sbb
loopne
ins
int3
in
xchg
jmp
lods
fcomi
xchg
test
icebp
repnz
into
push
in
add
ins
xchg
cmps
(bad)
cmc
ss
adc
xor
jo
mov
cmps
mov
leave
lea
and
mov
loop
mov
enterw
push
pop
addr16
pop
push
not
clc
ss
xchg
rcl
fwait
mov
les
sbb
pop
pop
fidiv
xchg
mov
mov
jmp
cwde
aad
fld
dec
fild
ret
dec
out
in
outs
mov
mov
les
pop
cmps
ins
mov
hlt
pop
lods
call
push
push
lods
jmp
mov
adc
cs
pop
jno
xchg
ret
xchg
mov
rcr
mov
push
inc
jl
outs
inc
or
jmp
push
cmp
stc
addr16
loope
sub
retf
jae
fidivr
pop
inc
fwait
movs
or
dec
pop
repnz
lahf
aam
ffreep
jl
frstor
sbb
fnstcw
inc
and
and
and
inc
push
inc
arpl
out
sahf
mov
pushf
nop
pop
in
sub
fwait
sub
retf
ffreep
pop
inc
mov
fwait
jns
push
mov
adc
out
sbb
aas
int3
add
sbb
mov
fucomip
xchg
and
mov
jnp
xchg
push
jg
addr16
pop
cwde
cli
shl
lock
cmp
pop
test
ss
jmp
or
pop
add
sbb
jne
into
jnp
dec
lea
push
aaa
fst
add
nop
scas
lea
jmp
(bad)
xor
clc
mov
imul
outs
mov
(bad)
test
sbb
mov
in
mov
sahf
inc
out
repnz
daa
jl
xor
es
idiv
shr
pop
test
test
sbb
xchg
adc
xor
dec
push
call
pop
pop
movs
sbb
add
cmp
mov
mov
lods
stos
cmp
call
and
adc
aam
or
or
inc
movs
dec
mov
cmp
cmp
adc
xlat
push
and
fidivr
(bad)
and
ins
push
aad
jbe
js
(bad)
mov
cmps
ss
js
js
mov
rol
push
xor
sub
(bad)
jb
scas
dec
and
mov
mov
sbb
cmp
nop
jmp
mov
xor
adc
or
sbb
int3
retf
jecxz
or
cld
jbe
push
add
shl
std
mov
mov
cmovp
xchg
imul
sub
xchg
(bad)
cmps
jg
xchg
adc
jl
jne
stc
mov
call
clc
add
popa
mov
aas
int
jl
sub
inc
sub
mov
out
ds
sbb
and
shl
dec
lea
shr
xchg
pop
ins
inc
push
xor
enter
pop
xchg
xchg
jnp
gs
jle
into
jl
and
jno
jne
fistp
sub
fdiv
pop
pop
mov
ret
lahf
push
xchg
ja
sub
in
pop
test
mov
fnsave
or
jb
(bad)
hlt
fcmovbe
fsubp
ss
out
call
leave
add
mov
sbb
(bad)
out
dec
es
out
jg
dec
loop
inc
dec
xor
fcmovne
enter
movd
ins
outs
pushf
jno
imul
or
mul
jmp
bound
enter
jp
push
jae
mov
jno
ss
int3
fisttp
lods
mov
aaa
or
jae
ss
imul
push
sbb
inc
repnz
ds
test
and
dec
test
js
dec
(bad)
xchg
push
or
bound
cmp
ret
and
addr16
mov
aam
lahf
mov
adc
cld
psrlw
je
and
xor
jle
mov
xchg
call
push
push
dec
xor
js
sub
sbb
xchg
enter
inc
gs
lds
aas
jmp
or
mov
mov
sbb
test
test
iret
jo
adc
pop
xor
pop
jnp
sti
cmp
xchg
aad
sbb
pop
inc
inc
fldcw
into
push
add
cmp
dec
sahf
enter
ins
dec
cmps
jb
sar
out
std
in
xor
not
mov
xchg
mov
cdq
dec
icebp
out
rcr
xchg
fnstcw
jl
ror
pop
test
test
inc
daa
mov
xchg
stos
test
add
push
sahf
shl
and
ja
or
mov
mov
xchg
adc
mov
cmp
sbb
mov
hlt
cs
jno
data16
or
ins
out
xchg
sbb
clc
sub
add
int3
push
lea
shr
fild
fist
cmc
into
jg
jmp
and
aaa
popa
fscale
inc
clc
push
fisubr
jo
push
or
mov
nop
pop
pop
std
cmp
(bad)
dec
xor
add
dec
out
jno
inc
mov
cmp
sub
ds
push
push
sbb
inc
outs
gs
shl
jns
xchg
cwde
fild
daa
dec
ficomp
mov
pop
mov
dec
fiadd
cmps
mov
jae
jo
neg
pop
mov
push
push
xor
les
sahf
ficomp
mov
jo
push
cld
(bad)
adc
push
int3
cmp
jmp
jecxz
cmc
rol
sub
ins
ds
jo
sub
mov
push
push
xchg
out
(bad)
inc
and
ins
bswap
iret
out
mov
and
sub
retf
jge
jmp
pop
jmp
push
rol
dec
fnstenv
xchg
fdivr
popf
adc
sbb
(bad)
mov
aas
pop
and
call
pop
mov
or
cmp
dec
lods
lock
xchg
mov
xor
and
test
sub
sbb
sub
iret
and
or
mov
and
imul
pop
jmp
push
xchg
inc
jmp
cli
push
sbb
jle
into
push
mov
sub
out
xlat
dec
inc
mov
sbb
sahf
das
stos
enter
add
and
cmp
jns
and
fdivr
push
sub
jle
jg
cmp
ss
xor
movd
jmp
jb
push
mov
hlt
add
xor
push
xor
mov
iret
into
push
xor
loopne
in
sbb
gs
xor
shl
jecxz
cmc
jns
popa
push
xchg
ret
adc
rcl
sbb
jo
push
shr
adc
imul
and
popf
mov
ret
dec
pop
fsubr
or
and
inc
mov
sbb
iret
repnz
lods
cmp
pop
not
sub
enter
or
(bad)
sub
js
(bad)
andnps
jnp
cli
cmp
clc
adc
lods
leave
push
gs
mov
test
push
int3
mov
retf
arpl
dec
mov
repz
repnz
es
push
adc
(bad)
hlt
imul
mov
pop
sbb
popf
int
xor
jp
or
dec
push
paddusb
aad
lock
sub
adc
(bad)
jmp
fild
mov
ficomp
inc
mov
sub
add
cmp
jecxz
rol
dec
std
inc
jo
jns
jp
adc
cwde
lahf
mov
nop
push
inc
sbb
jecxz
pop
adc
dec
lahf
aad
adc
jmp
inc
pop
call
jge
adc
sbb
lods
mov
jo
add
sbb
mov
ins
ror
and
iret
xor
adc
or
enter
sbb
dec
cmp
(bad)
movs
sub
out
sub
in
jb
push
mov
jp
cwde
lds
mov
xor
outs
inc
jmp
fistp
xchg
cs
sahf
rcl
jp
imul
(bad)
mov
xor
push
mov
dec
lods
fbstp
pop
jbe
out
loopne
mov
mov
adc
cdq
jb
mov
retf
shl
sbb
xchg
push
mov
mov
mov
shl
lock
inc
mov
jle
jmp
push
cs
add
xchg
inc
adc
ds
mov
adc
out
mov
mov
sbb
pop
xchg
(bad)
in
xchg
inc
xchg
mov
mov
rcl
cwde
inc
mov
sbb
in
push
bound
test
into
jo
std
sub
or
jae
jg
pop
pop
push
test
and
popf
cmps
gs
dec
adc
push
mov
pop
scas
mov
test
lds
iret
fistp
enter
add
sbb
iret
loope
not
push
in
(bad)
stc
cmps
out
scas
aad
loop
inc
cmp
mov
mov
mov
mov
bsr
sbb
or
xchg
mov
cmc
fimul
add
pop
ins
jmp
scas
inc
mov
jp
cmp
mov
leave
out
stc
sub
jne
loope
mov
add
jns
inc
lods
mov
adc
xchg
jns
scas
shr
cld
les
push
sbb
sbb
cmp
and
mov
pop
je
lods
cwde
out
rol
ret
dec
fs
js
adc
push
add
adc
sub
adc
repz
leave
cld
jl
shl
and
push
addr16
test
mov
pop
or
mov
stos
stos
xchg
aaa
repnz
xchg
mov
lods
sbb
sahf
mov
loopne
sti
imul
fdiv
mov
(bad)
push
fistp
rcr
fwait
sahf
or
ss
loop
jmp
pop
mov
js
mov
jg
mov
sbb
xor
shl
inc
or
data16
lods
and
(bad)
jne
pusha
pop
fs
inc
retf
xor
jmp
dec
adc
retf
fdiv
adc
xor
mov
fdiv
xchg
push
sbb
int
or
leave
neg
(bad)
mov
jge
fwait
cld
shl
jbe
mov
dec
lock
repz
addr16
outs
dec
test
xchg
inc
mov
loopne
ja
(bad)
in
loopne
data16
xchg
inc
mov
jg
ins
add
xchg
xor
mov
mov
adc
std
adc
push
sub
and
inc
adc
add
bound
sub
je
xchg
aaa
mov
popf
push
dec
pop
aaa
data16
mov
in
cli
jo
stos
or
ja
gs
pop
dec
(bad)
xchg
icebp
push
jnp
xchg
rol
stos
std
into
sti
loopne
xor
pushf
cwde
in
and
lds
adc
inc
(bad)
jmp
mov
jecxz
and
cli
retf
xchg
sbb
jb
cmps
dec
ja
or
scas
add
push
or
stos
xor
jg
dec
and
addr16
jno
mov
and
aaa
and
push
js
mov
mov
mov
movs
jmp
lods
xchg
shl
sub
dec
shl
pop
inc
pop
jecxz
dec
fisub
imul
mov
sbb
push
in
mov
(bad)
jmp
mov
retf
sahf
(bad)
inc
and
mov
cmp
jb
pop
shl
jecxz
je
mov
outs
pop
adc
lar
cwde
mov
xchg
dec
je
outs
mov
mov
cmps
dec
inc
dec
imul
sbb
push
inc
gs
pop
xlat
outs
sti
jnp
push
ret
lahf
icebp
scas
xor
sbb
scas
dec
fs
xlat
push
cmps
and
aad
push
sbb
aam
mov
add
sbb
pop
adc
or
out
cld
xchg
ror
jmp
daa
jmp
pop
lods
mov
inc
push
clc
(bad)
in
aam
xchg
call
lods
ins
jae
and
xchg
adc
ret
mov
ret
inc
mov
cmp
not
push
mov
out
shr
push
rol
and
ins
mov
es
dec
(bad)
lods
ret
push
(bad)
stc
cmc
div
and
push
repnz
dec
sbb
mov
inc
movs
(bad)
repz
dec
clc
jp
(bad)
jnp
sub
inc
stos
add
aam
leave
mov
pop
out
jb
jmp
sub
mov
mov
add
mul
mov
xor
inc
push
fwait
sbb
rcr
fwait
jno
sbb
or
sub
xor
std
pop
and
iret
jb
mov
ror
add
mov
xchg
test
ret
pop
cdq
cmp
cmp
nop
out
fcom
or
jecxz
add
outs
dec
xchg
scas
mov
loopne
lds
mov
das
push
sbb
(bad)
push
ret
aaa
movs
in
sbb
lods
cmp
call
idiv
call
xor
cmp
fwait
pop
xor
call
or
add
jae
ins
mov
in
push
sti
out
cmc
xchg
pop
loopne
ds
out
fwait
cdq
jmp
out
fiadd
iret
adc
jnp
push
movs
(bad)
and
adc
mov
mov
or
mov
(bad)
(bad)
pop
jae
(bad)
call
jbe
or
out
dec
xor
and
je
clc
lock
mov
adc
push
cmps
scas
jge
mov
jno
stc
jle
leave
in
mov
add
xor
lods
pop
js
push
push
sbb
clc
mov
push
adc
int3
mov
sbb
or
stc
rcl
rcr
test
ficom
xor
mov
stos
loop
stc
int3
out
or
(bad)
fisubr
xchg
aas
mov
add
fistp
xchg
out
hlt
adc
mov
mov
lods
or
jne
das
retf
sub
loope
mov
or
std
or
jmp
add
ins
in
sbb
mov
fs
aad
repnz
cmp
popf
adc
into
dec
push
aad
hlt
or
out
pop
push
push
mul
pop
pop
pop
mov
inc
sbb
ja
test
stc
xchg
sub
bound
hlt
sub
sub
movs
(bad)
(bad)
pop
aad
call
jbe
pop
and
test
mov
and
loop
(bad)
and
cmp
into
inc
hlt
test
cmp
(bad)
ja
cmp
dec
lock
sbb
fimul
xor
inc
scas
sti
xor
fisubr
sub
pop
jne
stos
dec
push
cmps
dec
movs
and
sbb
adc
in
loopne
and
lock
sbb
sbb
mov
push
add
pop
jnp
loop
push
enter
das
cld
jl
add
jo
aad
inc
jns
stos
xchg
xor
(bad)
in
fisttp
jmp
lds
ja
add
bound
xchg
call
popf
mov
push
dec
xor
sub
outs
imul
(bad)
scas
mov
and
sub
lods
(bad)
adc
xchg
int
jmp
dec
jge
mov
rol
cld
push
in
pop
xchg
and
test
ret
sub
scas
sub
lods
push
ror
sub
in
mov
dec
cld
push
sub
and
je
jl
(bad)
cmps
test
dec
mov
call
xchg
push
pop
into
mov
jl
add
mov
push
xchg
xchg
sub
mov
inc
jl
hlt
inc
adc
inc
xchg
xchg
shl
(bad)
test
mov
add
sub
in
scas
add
or
mov
imul
(bad)
mov
fist
pushf
push
test
push
mov
pop
add
pop
hlt
xchg
pusha
mov
and
out
fcmovnbe
add
inc
pop
jp
ret
adc
adc
hlt
cld
in
jo
sahf
fldenv
cmp
mov
outs
push
int
jecxz
sar
test
lahf
inc
into
xchg
not
(bad)
fcom
dec
pop
pop
repz
aad
bswap
xor
add
mov
lahf
jne
repz
xor
cmp
inc
out
add
jmp
lods
dec
pop
aaa
call
sub
std
push
mov
pop
adc
xchg
addr16
dec
pop
and
int
inc
sahf
repnz
fsub
and
fst
(bad)
hlt
vpsubusb
repz
test
mov
add
in
adc
hlt
xchg
clc
je
and
push
xor
add
pop
retf
repnz
ss
dec
int3
fst
ins
movs
in
test
dec
movs
loop
sbb
sar
shr
test
bound
sbb
cld
frstor
cld
int
std
scas
push
mov
add
addr16
(bad)
or
test
push
xchg
inc
sub
push
cmps
or
es
mov
push
(bad)
push
or
cmp
into
push
mov
fst
push
retf
idiv
add
test
arpl
jns
icebp
push
(bad)
mov
(bad)
mov
mov
or
cmc
popa
and
inc
imul
cmp
in
mov
aas
adc
pop
nop
push
xor
icebp
adc
and
dec
(bad)
aad
inc
retf
int
dec
fdivr
mov
aaa
popa
jmp
cmps
in
cli
arpl
mov
pop
push
push
repnz
and
fwait
iret
clc
dec
mov
cmp
xor
outs
hlt
push
add
loop
xchg
adc
aaa
lock
xchg
jp
mov
mov
sbb
jno
push
jg
out
loope
adc
out
out
sti
test
push
mov
pushf
fs
mov
and
div
inc
pop
xlat
repz
and
shr
stc
add
xchg
xor
and
arpl
cmp
lahf
pop
out
mov
stc
adc
scas
mov
mov
lods
iret
addps
aad
stos
imul
dec
stos
loopne
das
loopne
and
mov
xor
sbb
ror
inc
sbb
(bad)
xor
cld
adc
(bad)
int3
in
mov
sbb
retf
(bad)
ret
cmp
add
and
mov
cdq
mov
ror
lock
mov
inc
jno
mov
outs
mov
out
ror
cmps
xor
leave
mov
sub
popf
xchg
js
pop
mov
or
inc
dec
(bad)
repz
xchg
mov
xchg
dec
cmps
pop
cmp
repnz
cmps
daa
neg
cmps
sbb
mov
push
inc
fnstenv
mov
stc
add
(bad)
xor
pop
mov
mov
(bad)
je
test
mov
movs
popa
(bad)
pop
add
jnp
xor
sub
sbb
enter
xchg
outs
or
lds
sub
sub
xchg
mov
mov
retf
xor
test
xchg
std
call
mov
popf
jo
sub
push
ins
pop
dec
pop
(bad)
jle
ds
sbb
and
test
mov
(bad)
clc
aas
dec
xchg
inc
add
in
xor
cdq
aas
aaa
xchg
mov
dec
jb
adc
das
jmp
rcr
imul
push
ret
pop
jae
fs
jbe
sub
mov
pop
and
pop
adc
test
outs
iret
mov
(bad)
ret
fdivr
stos
sbb
movs
fld1
aad
movs
mov
jb
ja
scas
out
pop
mov
xchg
jp
mov
mov
xchg
not
fst
add
outs
neg
ins
jle
xor
mov
stc
adc
fidivr
push
ins
xor
cld
(bad)
fisub
push
rol
dec
mov
fsubr
and
jecxz
mov
add
mov
sti
mov
sbb
or
stos
xchg
dec
mov
cmovg
lea
and
adc
push
les
sub
mov
xor
mov
icebp
or
daa
mov
call
dec
shr
popf
or
push
mov
fbstp
jae
fiadd
aad
lea
imul
std
or
sti
das
mov
xor
pop
rcr
mov
fistp
sub
dec
(bad)
aad
ret
rcr
mov
xchg
and
push
or
clc
cmps
mov
(bad)
(bad)
mov
push
lock
sub
sub
inc
or
jbe
pop
loope
rcr
cmps
jns
inc
(bad)
dec
es
movs
cs
jge
pop
jae
pop
(bad)
std
push
arpl
xchg
xor
lahf
mov
rcr
xchg
push
test
cmp
dec
clc
nop
fisubr
test
push
cmp
movs
jmp
fs
mov
cmp
rcl
lods
shl
in
loop
mov
mov
cli
push
in
pop
sbb
outs
cdq
sbb
stos
mov
inc
inc
xchg
or
mov
inc
and
imul
loopne
jns
push
pusha
xchg
ror
mov
aad
xchg
xchg
mov
in
add
xor
xor
push
rcl
scas
mov
xchg
test
push
out
push
add
push
and
sub
add
retf
add
dec
xchg
dec
xor
jp
test
cmp
loope
sub
loope
aam
dec
pop
pusha
fdiv
fisttp
daa
or
or
scas
mov
cdq
dec
sar
arpl
inc
aad
mov
add
mov
adc
out
xchg
push
aad
or
dec
jg
ins
in
lods
xlat
xchg
sub
fidivr
adc
arpl
cmc
hlt
movs
int3
(bad)
jne
mov
mov
push
push
repz
mov
gs
mov
scas
pop
fnstcw
mov
inc
xor
xchg
jo
and
call
ret
out
xchg
mov
xor
push
sub
popf
pop
jb
rol
sahf
data16
ja
xchg
xchg
cmps
icebp
push
dec
adc
stos
stos
call
adc
pusha
ret
rcl
jb
sahf
xlat
pop
cmp
dec
sub
pop
or
setl
push
lods
jl
mov
out
pop
xor
xchg
xchg
stos
xor
std
jecxz
jg
std
push
or
xchg
repz
int
cmp
pushf
sbb
xor
repz
cld
mov
repz
push
fist
iret
das
adc
or
xor
add
inc
jg
push
jl
inc
or
aad
xor
(bad)
xor
xchg
pop
xor
sub
ret
aam
stos
ja
lahf
sub
outs
push
retf
fld
xor
arpl
loopne
(bad)
sub
push
(bad)
xor
jg
ret
bound
ror
mov
xchg
scas
mov
xchg
mov
iret
(bad)
pop
jle
je
and
call
loop
pop
pusha
jnp
cmp
in
sbb
mov
sub
add
push
xchg
les
outs
ret
cmps
daa
ins
push
mov
jmp
stos
sbb
jno
jo
xchg
test
clc
stc
shl
pop
jnp
lahf
push
lds
nop
push
xlat
stos
out
add
sub
or
dec
xor
and
retf
sbb
mov
aas
rcl
outs
cmp
std
jle
out
pop
xor
adc
inc
dec
pop
ja
sti
push
aaa
mov
cmc
mov
mov
xchg
int
pushf
in
mov
movs
fwait
mov
mov
dec
pop
sub
pushf
fldl2t
(bad)
in
retf
(bad)
jge
inc
fcmove
fsubr
call
jmp
ins
inc
dec
(bad)
int3
xor
add
push
xchg
or
les
and
mov
test
call
fdivr
call
adc
adc
sub
sbb
cmc
sbb
jmp
inc
dec
or
cwde
inc
lods
(bad)
and
pop
fiadd
sbb
mov
adc
sbb
xchg
xor
ss
lahf
mov
adc
lods
cs
cdq
ss
dec
add
jb
ins
xchg
leave
test
mov
mov
sub
pusha
sar
mov
mov
push
lods
or
or
icebp
cmc
aad
push
jmp
jle
ja
and
mov
mov
mov
hlt
and
ret
add
arpl
mov
clc
cld
stc
or
pop
mov
test
ret
mov
xor
arpl
sbb
xlat
data16
xchg
dec
dec
push
arpl
cli
add
jns
cmp
in
out
add
bound
jecxz
ror
add
scas
mov
das
mov
xor
data16
(bad)
arpl
xchg
sti
xchg
cs
inc
push
ss
inc
jns
ins
js
cmp
ret
out
mov
(bad)
pop
inc
push
shl
outs
inc
or
mov
add
adc
jo
out
dec
test
xor
push
pop
mov
nop
bnd
xchg
xchg
lock
test
inc
inc
orps
xor
xor
call
sti
mov
sub
sub
out
cmp
stos
xor
jmp
shl
cwde
ret
jp
mov
cdq
outs
mov
inc
sub
cmp
sbb
pop
sub
jne
int3
jp
dec
jb
loop
std
sbb
push
xor
mov
fdiv
gs
push
mov
inc
sub
or
mov
xor
out
pop
test
es
repnz
iret
jle
add
jle
sub
fsubr
lahf
xchg
icebp
push
cmp
xchg
arpl
out
js
add
xor
cmp
and
jbe
mov
pop
add
push
inc
sub
in
stos
pop
aad
repz
push
mov
cmp
inc
ds
xor
lahf
je
popf
xchg
jle
fimul
mov
adc
add
loope
icebp
loope
pusha
sbb
mov
stos
ins
pop
sar
sbb
or
push
xor
vpavgw
sahf
fstp
jb
cmp
in
xlat
xor
jmp
ret
inc
ret
data16
adc
xchg
dec
add
xchg
pop
add
fimul
mov
icebp
or
push
daa
dec
shl
mov
push
les
jge
sub
pop
pop
fild
push
(bad)
int
mov
fdivr
sti
ficomp
or
popf
jp
aas
jns
gs
xchg
enter
outs
jmp
mov
mov
call
mov
dec
jmp
iret
(bad)
and
imul
cmps
jle
(bad)
inc
add
mov
addr16
cmp
jmp
pusha
xor
stc
mov
dec
mov
xchg
aaa
ds
test
inc
cmp
nop
fmul
jo
jmp
adc
test
dec
aam
aad
mov
cld
cmp
dec
(bad)
shl
mov
loop
add
mov
inc
push
pushf
loopne
cmove
push
jo
mov
xchg
pop
sub
xor
adc
ja
inc
loop
je
sahf
imul
popf
inc
inc
stos
or
sbb
mov
and
xor
sbb
adc
sbb
or
das
hlt
rcl
lds
data16
mov
lods
in
mov
ror
pop
lea
fs
xchg
push
call
mul
dec
jl
mov
fst
(bad)
mov
movs
push
stos
sbb
xchg
repz
pusha
gs
sub
inc
add
cs
dec
ds
fmul
out
mov
pushf
loop
jecxz
mov
jl
shl
mov
xchg
mov
jg
lods
test
adc
mov
jno
xor
or
clc
mov
xchg
mov
arpl
xor
dec
add
bound
fwait
call
cmp
sar
mov
xlat
ss
mov
fisub
sbb
imul
(bad)
lods
mov
xor
mov
mov
ins
mov
popf
sub
movs
into
mov
dec
sar
push
add
sbb
xchg
push
out
mov
jecxz
punpcklwd
repnz
mov
test
in
lock
out
int3
jbe
stc
adc
xchg
cmp
xchg
rcl
pop
mov
ss
icebp
adc
(bad)
popa
sbb
xchg
fstp
inc
push
jmp
arpl
mov
mov
outs
in
enter
retf
mov
push
push
stos
fist
push
cdq
xchg
sub
xor
gs
add
xchg
inc
and
(bad)
call
sar
in
mov
xor
xchg
pushf
dec
nop
mov
daa
sub
adc
daa
test
aam
xchg
adc
inc
clc
sub
fwait
push
dec
cmp
out
mov
iret
push
push
and
shl
clc
pop
pop
cmp
jle
bound
sub
cmc
out
mov
(bad)
in
call
retf
jl
test
test
call
mov
jae
jne
push
test
jmp
movs
add
xchg
loope
(bad)
cld
sahf
sub
xchg
stos
or
and
lahf
push
pop
jns
cmp
pop
fstp
fdiv
sbb
inc
std
pop
loop
loop
adc
mov
out
push
or
xchg
clc
iret
sub
jecxz
ja
jb
test
pop
push
xchg
push
jnp
and
test
out
aas
sbb
mov
imul
lods
push
mov
es
sub
shr
mov
sbb
mov
push
pop
retf
ja
push
pop
inc
jbe
test
mov
pop
gs
loop
test
mov
add
and
cmp
dec
ja
les
adc
xor
cmp
repz
sahf
xor
mov
mov
es
das
call
mov
int
xchg
jno
imul
bswap
jno
out
fadd
fs
push
sti
jp
and
(bad)
(bad)
popf
jl
jne
push
pop
mov
scas
sub
pop
jae
inc
stos
mov
mov
xchg
out
xchg
enter
fdiv
leave
retf
daa
sub
sbb
popf
ins
sub
adc
jne
mov
sahf
sbb
mov
cmps
jns
inc
pop
shl
shl
repz
jp
xchg
sub
pop
inc
in
jmp
push
xor
xchg
xor
mov
int3
push
pop
sar
mov
sbb
outs
ins
push
dec
cmc
nop
sbb
out
sbb
dec
mov
ffree
push
jl
scas
adc
xor
or
adc
mov
or
clc
test
mov
bound
(bad)
movs
int
mov
in
cmp
in
loopne
repnz
xchg
mov
scas
mov
enter
sbb
mov
leave
mov
cmps
push
int
(bad)
mov
iret
into
xchg
setg
fcom
inc
sahf
adc
dec
rcl
lock
vmovshdup
cmp
xchg
sbb
ss
jo
in
pop
hlt
xor
outs
xchg
pop
ror
push
cmp
push
ja
popf
inc
call
mov
cli
test
jo
pop
jne
adc
inc
mov
mov
add
stos
cmp
(bad)
mov
sbb
fwait
and
lahf
call
jo
loop
mov
push
jae
mov
add
rcl
fwait
test
or
call
jno
inc
sub
or
lods
fsub
mov
pop
jns
loope
scas
add
(bad)
ds
xlat
(bad)
mov
loopne
cmp
lea
(bad)
(bad)
loop
mov
outs
jo
movs
jnp
call
mov
lds
shl
or
pop
push
cmc
xchg
(bad)
std
mov
cs
xchg
mov
pusha
stos
jo
sub
ret
lods
ss
ret
imul
sbb
dec
jl
lods
sub
push
in
inc
call
xor
lods
fist
sub
(bad)
cmp
stos
mov
popf
mov
out
cdq
push
add
shl
dec
js
jmp
add
cmps
xchg
scas
sbb
jns
(bad)
lahf
or
sub
cwde
rcr
pop
xlat
fnstenv
mov
pop
je
cmps
xor
cmc
mov
js
push
xor
push
stos
cdq
out
xchg
pop
enter
mov
adc
xor
data16
xchg
(bad)
push
cld
cmp
addr16
pop
add
sbb
fucom
or
inc
adc
pop
(bad)
mov
jb
or
xchg
dec
inc
pushf
les
popa
dec
test
loopne
loopne
pop
ror
dec
jg
push
or
jge
inc
xor
(bad)
xchg
xor
dec
mov
loope
xchg
xchg
sbb
inc
xchg
add
popf
adc
jns
std
mov
adc
jns
push
loopne
pushf
sub
mov
pop
out
cmps
mov
test
(bad)
les
adc
cdq
dec
out
cmp
cmp
nop
je
push
lock
cwde
adc
add
aas
(bad)
sub
or
outs
xchg
clc
bound
test
out
xchg
and
pop
mov
fst
ins
inc
mov
iret
mov
aam
into
dec
mov
in
out
inc
push
cmps
jle
sub
cmc
jo
xchg
mov
pop
fistp
ret
pop
test
xor
cmc
dec
loopne
stos
mov
test
out
sub
mov
add
xor
pop
sbb
pop
adc
ss
cs
cmp
jne
mov
retf
adc
cmps
and
pop
xor
dec
mov
aas
out
aam
in
inc
dec
dec
cmp
sar
call
and
cmc
jae
lahf
in
push
sbb
bound
test
sbb
xchg
cmc
cmp
xor
repnz
addr16
push
jl
ins
pop
aas
add
mov
adc
cld
(bad)
push
ss
xor
pop
mov
aad
push
iret
xor
sub
pop
fisubr
pop
cmp
cmc
mov
ret
sbb
mov
mov
not
int
imul
aam
sbb
fild
pop
aad
xlat
stos
sbb
sub
add
jmp
xchg
jo
pop
mov
cmps
sub
dec
pusha
mov
enter
dec
xor
mov
cmps
hlt
cmp
adc
cdq
scas
adc
jp
das
adc
xchg
aaa
push
sbb
adc
loopne
gs
fwait
cmps
out
ret
cmp
test
pop
mov
adc
push
scas
mov
add
jb
mov
jle
lds
shl
push
xor
mov
aad
xchg
push
push
xor
jb
xchg
call
inc
hlt
test
lahf
push
in
inc
pop
xor
jl
push
dec
fidiv
scas
dec
dec
mov
mov
inc
pop
(bad)
sahf
adc
mov
popa
mov
push
pop
das
inc
xchg
cmp
adc
or
sahf
cmp
stc
test
sbb
xchg
stos
retfw
mov
push
fimul
adc
rcr
push
dec
push
mov
adc
sbb
or
aad
(bad)
and
rcr
adc
das
sbb
idiv
dec
arpl
pop
aaa
out
sub
stc
push
or
jle
cdq
(bad)
out
out
jae
call
xor
ds
sub
xor
sbb
sar
cmps
mov
(bad)
sbb
enter
jmp
inc
in
jp
or
add
jb
dec
test
fisub
xchg
sbb
sub
sbb
fldenv
mov
ret
(bad)
dec
adc
sub
lods
xor
pop
push
pusha
aam
loopne
rcl
mov
icebp
cmps
add
in
jle
es
mov
popa
aaa
sbb
imul
hlt
fidiv
fsubr
ins
sbb
aam
es
inc
fldcw
jb
dec
pop
mov
and
int3
fcomip
fiadd
or
call
arpl
mov
loop
xlat
(bad)
xchg
push
(bad)
int3
stos
pusha
iret
add
jle
dec
pop
cwde
jge
hlt
repz
into
in
sbb
movs
addr16
push
xchg
cmps
es
mov
or
int
cmp
fdiv
jl
test
fldl2t
mov
sbb
jbe
push
pop
push
rcl
in
mov
es
jns
push
mov
xchg
icebp
cmps
jecxz
fwait
stos
mov
jp
jge
xor
inc
jo
xchg
xchg
arpl
fiadd
adc
ss
pop
loopne
push
in
aaa
add
test
lahf
dec
leave
jmp
adc
sub
mov
leave
bound
out
push
stos
fxtract
jb
jnp
mov
mov
inc
cmp
adc
cwde
pop
cmp
aaa
dec
inc
mul
sub
jle
add
xchg
repz
xchg
inc
arpl
out
call
mov
ds
fisub
fist
push
pop
fld
mov
pop
pop
cmp
clc
dec
pop
lahf
imul
mov
sbb
or
test
mov
dec
fs
cmc
cmp
lods
push
add
ror
cmps
cmp
pop
inc
repnz
cmp
frstor
(bad)
fs
dec
dec
mov
(bad)
sub
and
(bad)
pop
das
ss
xor
sub
and
hlt
imul
loopne
call
pop
jle
or
push
fwait
mov
add
fnsave
retf
jne
pop
sahf
inc
popa
(bad)
lods
mov
jl
icebp
add
jbe
adc
int
sub
dec
popf
ins
dec
aas
jmp
push
stos
icebp
sub
xchg
ins
sub
mov
ret
movs
push
enter
(bad)
(bad)
dec
mov
mov
xor
sahf
push
leave
inc
sbb
add
cmps
xchg
sbb
cld
mov
cmps
cs
and
add
xchg
aaa
sbb
jl
push
scas
add
aaa
hlt
or
mov
cdq
adc
or
stos
and
jnp
pop
xchg
cwde
shr
imul
popf
xchg
inc
xchg
out
xor
in
sbb
stos
daa
cmp
fwait
sbb
rcr
loope
jne
mov
ret
es
aas
mov
jle
mov
aad
xchg
jmp
pop
and
iret
ror
jp
jle
or
xchg
pop
or
test
mov
int3
adc
mov
push
cli
or
fldenv
ret
jp
push
sbb
push
dec
lods
xchg
jl
inc
inc
out
push
inc
arpl
xchg
gs
call
xchg
call
ss
adc
push
jne
jbe
dec
out
push
in
mov
ja
pop
jo
xchg
in
inc
out
(bad)
push
pop
(bad)
dec
dec
mov
xchg
loope
mov
push
rcr
loope
xor
pop
jbe
loop
retf
bound
fld
jne
ret
int
push
cmp
iret
lds
dec
mov
dec
nop
daa
ret
xchg
mov
lds
add
dec
aas
jmp
fisub
cmp
cmp
fsub
sub
sbb
cmp
inc
jle
push
dec
mov
mov
cdq
mov
jmp
retf
xor
cmp
ds
cli
(bad)
adc
clc
mov
cdq
jmp
aam
outs
mov
sub
add
lahf
fcmovbe
adc
mov
mov
fnsave
dec
sbb
(bad)
cmp
mov
sbb
adc
(bad)
fcom
jbe
mov
test
push
add
mov
cwde
sbb
adc
mov
mov
mov
jns
push
xchg
iret
mov
mov
sbb
pop
repz
iret
imul
fs
or
arpl
arpl
pop
mov
inc
popa
or
adc
xor
xor
imul
unpcklps
retf
mov
cmp
xchg
pop
sub
dec
sub
mov
adc
mov
icebp
cdq
cmp
pusha
repz
pop
imul
out
ds
mov
mov
xchg
dec
ret
jge
inc
retf
das
and
mov
(bad)
pusha
scas
js
lea
fsub
push
or
mov
add
xchg
mov
xchg
sub
push
mov
cwde
dec
sbb
es
inc
(bad)
or
shl
sub
jmp
inc
dec
test
xor
(bad)
dec
xor
cmp
push
sar
mov
sahf
int3
sub
shl
cs
cmps
pop
inc
cmp
retf
mov
clc
arpl
inc
push
mov
test
push
cli
pusha
add
clc
pop
or
popf
test
loopne
fidiv
or
sbb
or
jmp
cmp
pop
adc
sub
xchg
repnz
adc
push
mov
jbe
xor
pop
int
in
inc
pop
cmps
mov
cmp
mov
cmp
(bad)
mov
dec
cdq
mov
sbb
fld
pop
sbb
jno
cmp
xlat
mov
adc
fwait
dec
mov
dec
into
shl
sub
fcomp
inc
push
sahf
mov
adc
imul
push
(bad)
xchg
mov
int
loopne
imul
sub
div
loop
xor
in
pop
mov
es
jmp
pusha
iret
xchg
mov
mov
in
fcomp
lods
pushf
test
addr16
jmp
retf
in
inc
lea
mov
int3
mov
push
or
and
sbb
xchg
popa
dec
(bad)
xchg
sub
push
aam
daa
push
loop
cld
mov
cmc
cs
xor
sub
jg
or
push
xor
xchg
sbb
repz
fisubr
jmp
inc
inc
mov
rol
inc
jp
enter
xchg
mov
push
cmp
jge
es
imul
jecxz
push
xchg
jle
push
inc
mov
cmp
retf
sbb
in
(bad)
jp
lods
into
fisub
jb
into
fsub
sbb
cld
std
jmp
inc
inc
dec
pusha
inc
(bad)
cli
sbb
dec
push
xchg
sub
or
dec
outs
gs
cmp
mov
stos
sbb
sbb
loope
sti
int3
sub
popa
push
inc
in
sub
movs
mov
mov
bound
push
inc
arpl
dec
mov
into
adc
int
out
ror
(bad)
scas
or
je
xor
push
push
arpl
div
mov
xchg
je
cs
jo
push
cli
ins
aam
jne
push
push
add
push
and
mov
mov
out
aam
xor
jmp
and
jl
add
jl
outs
aaa
and
ret
aaa
jp
(bad)
(bad)
lea
out
sub
fisub
lods
and
cld
push
xchg
dec
cli
xchg
sub
or
cld
es
and
retf
movs
ret
and
adc
xor
xor
inc
clc
outs
pop
sub
sbb
nop
inc
inc
mov
enter
jle
(bad)
cmp
lods
lahf
dec
or
(bad)
and
outs
push
out
mov
or
sub
std
cmp
call
sbb
jmp
adc
pop
ret
mov
adc
not
inc
test
test
mov
dec
jae
outs
sub
mov
sub
ja
ds
push
data16
pop
mov
fwait
mov
push
mov
cdq
out
hlt
cmp
and
jmp
cdq
jmp
es
jbe
(bad)
cmps
pop
or
lods
jae
mov
(bad)
loopne
inc
jp
xchg
xchg
cwde
js
sub
pop
push
pop
or
adc
jle
outs
sbb
cmp
(bad)
sbb
lds
clc
push
adc
inc
sub
cmc
call
mov
cmps
or
mov
leave
dec
mov
push
push
aas
sub
iret
imul
xchg
mov
cwde
push
inc
ja
not
add
aam
jns
in
mov
test
push
pop
icebp
idiv
push
pop
inc
xchg
out
pop
push
daa
mov
fisubr
ins
jg
inc
hlt
(bad)
(bad)
out
test
bound
pop
mov
loope
fdiv
jnp
or
or
loope
sub
jmp
cmp
jecxz
mov
mov
cld
stc
imul
mov
stos
int
mov
cwde
sub
test
shr
jmp
pop
mov
push
mov
jmp
out
and
xor
sub
pushf
mov
mov
sbb
add
out
xor
dec
mov
in
mov
dec
pop
mov
nop
push
aaa
jbe
aam
call
lods
push
mov
push
loope
lds
pop
lock
leave
cmp
sbb
fidiv
jns
add
dec
(bad)
call
mov
mov
stc
fwait
xchg
leave
aaa
lea
jae
mov
sbb
iret
fsubr
adc
das
xchg
mov
sbb
data16
mov
out
jb
mov
outs
mov
cmp
or
mov
test
jp
inc
jg
popf
out
std
fild
and
ror
and
cmp
and
int
mov
mov
mov
sub
push
mov
(bad)
xchg
pusha
jnp
ss
sahf
adc
lods
int3
shl
sub
popf
outs
rol
lea
ins
aam
mov
and
jecxz
aaa
fimul
xor
pop
mov
pop
fidivr
inc
mov
sub
jp
cwde
inc
and
hlt
xchg
sub
xor
sub
je
rol
xchg
inc
into
push
dec
mov
into
pop
std
idiv
repz
push
test
and
mov
inc
dec
sbb
icebp
push
jno
or
pop
iret
add
pop
and
mov
mov
stc
hlt
out
imul
data16
arpl
mov
mov
out
push
sbb
arpl
in
mov
shl
push
mov
and
test
cmp
ja
add
jmp
scas
lahf
add
dec
imul
jmp
idiv
fnstsw
mov
pop
or
repz
lds
out
popa
pop
adc
ins
jmp
mov
push
dec
xor
popa
cmps
pop
pop
es
mov
xor
aad
ret
fcom
mov
or
jge
adc
adc
or
not
mov
mov
out
inc
and
push
jp
inc
pop
fisttp
jp
adc
xor
dec
ficom
dec
inc
nop
mov
test
daa
sti
push
cmp
add
or
dec
fcmovne
cmps
push
xor
stc
stos
call
pop
push
ret
xchg
test
shl
pop
test
stos
rcr
in
cmp
fdiv
popf
stos
cmp
stos
jnp
xchg
pop
jecxz
aam
mov
jle
jbe
int
adc
inc
push
stc
mov
mov
test
outs
(bad)
mov
jecxz
lock
dec
ja
scas
(bad)
(bad)
mov
cmp
fisttp
mov
mov
adc
xchg
shl
cli
call
retf
xchg
jnp
cmp
push
daa
push
dec
pop
jp
xor
loopne
xor
inc
xor
sahf
imul
jne
call
fiadd
xchg
xchg
adc
cmp
ret
jmp
xor
adc
mov
nop
retf
shl
call
gs
fsubr
or
(bad)
xchg
jnp
leave
pop
stc
mov
and
or
(bad)
mov
adc
fnstenv
clc
dec
outs
repnz
lds
(bad)
inc
daa
sub
jle
pop
xchg
fisub
rcl
sub
out
ins
mul
jo
scas
mov
les
clc
push
xchg
rol
into
and
dec
repz
mov
sbb
(bad)
push
jg
(bad)
std
fcom
dec
push
shl
and
jnp
test
cmp
das
and
sbb
cdq
adc
xlat
(bad)
pushf
div
push
pop
(bad)
leave
scas
push
movs
push
shr
mov
call
jg
stos
jp
out
add
add
fisttp
lods
out
in
stos
(bad)
push
outs
je
mov
jg
enter
mov
js
xchg
out
mov
mov
mov
and
pusha
mov
pusha
jp
cs
pop
retf
xchg
adc
mov
jl
cmc
jl
or
int
ret
dec
pop
push
pusha
push
jge
ja
xchg
push
data16
ret
mov
mov
mov
addr16
mov
and
mov
jmp
lods
xchg
out
repz
lock
adc
rcr
jmp
out
scas
inc
push
cli
cs
imul
std
ret
loop
pop
test
les
popf
(bad)
fcmovnbe
jb
lea
(bad)
lds
int
sub
imul
and
xchg
into
imul
cmp
leave
jo
in
int3
sub
push
inc
ins
mov
sub
dec
out
in
(bad)
xchg
sahf
outs
pop
mov
hlt
call
(bad)
mov
cwde
xor
cld
imul
jmp
lahf
push
cmp
loop
mov
not
sub
loope
push
lahf
cmps
cdq
mov
(bad)
adc
out
ins
rcl
test
cli
mov
cmp
mov
rcl
dec
push
push
nop
inc
fisub
and
xor
daa
add
sub
scas
(bad)
test
test
inc
jnp
lock
outs
dec
(bad)
or
inc
out
push
sub
pusha
je
(bad)
cmc
xchg
outs
cmp
dec
push
sbb
fld
mov
lods
add
es
mov
mov
and
sub
mov
mov
add
cwde
(bad)
push
xor
aad
cmp
xor
mov
cmc
add
push
dec
leave
pop
outs
stc
push
dec
in
sub
mov
xlat
adc
fisttp
les
movs
test
cmp
movs
mov
push
ret
dec
sub
call
jb
sahf
inc
icebp
nop
and
mov
push
or
cmp
push
ins
mov
retf
test
scas
fwait
jl
sbb
inc
pop
mov
mov
daa
scas
stos
stos
or
pop
mov
mov
dec
mov
pop
push
(bad)
pop
inc
gs
mov
jg
pop
bound
fidiv
dec
call
fistp
jns
push
loope
std
es
mov
xor
data16
pop
shl
inc
push
mov
int
leave
xchg
mov
jg
mov
ins
sbb
mov
movs
cmp
cmp
leave
test
clc
adc
mov
mov
xchg
xor
add
scas
int3
imul
inc
dec
ficom
(bad)
mov
retf
mov
xchg
stc
outs
xchg
es
mov
int
pop
mov
cs
or
cdq
jo
(bad)
jne
cli
mov
ss
loop
mov
(bad)
clc
jns
(bad)
sbb
mov
cmp
mov
mov
add
popa
fisub
scas
es
xchg
stc
jle
repz
jo
mov
sub
or
sbb
outs
lea
cli
jnp
(bad)
int
xor
mov
retf
cld
jb
sar
js
mov
mov
repz
jne
lods
xor
push
xor
scas
fcmovb
push
or
xor
das
sub
mov
in
fs
push
aas
mov
mov
leave
xor
idiv
out
pop
push
xor
xchg
mov
scas
aam
outs
push
imul
fcmovne
xor
test
pop
add
bound
mov
mov
lods
(bad)
sbb
repnz
add
cwde
xlat
mov
sub
data16
jns
arpl
ins
inc
add
push
call
fs
test
push
pop
dec
fnstsw
inc
popa
ins
pop
cli
xor
loop
cmps
inc
inc
sbb
int3
xchg
fnsave
lahf
sbb
ins
jae
mov
cmc
stc
pop
data16
mov
jbe
adc
pop
pop
mov
cmp
mov
xlat
stos
repz
push
das
fdiv
call
sub
push
int
test
cmp
rol
arpl
or
rcl
add
and
retf
mov
call
adc
sbb
push
test
js
es
and
test
mov
mov
stos
mov
mov
imul
mov
and
fdiv
int3
lock
enter
mov
cmp
shl
not
dec
sbb
xor
cmp
outs
push
pop
and
cmp
std
cmp
inc
movs
mov
or
push
pop
stc
das
xchg
lea
retf
mov
ret
push
mov
mov
cmps
ss
add
out
mov
dec
mov
out
sbb
mov
jo
push
je
mov
mov
repz
xchg
cmp
(bad)
mov
and
ror
jle
cmps
xchg
scas
retf
lock
jae
push
xchg
outs
daa
jmp
pop
xchg
or
dec
test
mov
cmps
mov
dec
std
push
test
xchg
int
and
ja
inc
mov
add
test
daa
and
in
fimul
jno
std
ret
sahf
push
test
mov
out
rcr
(bad)
into
pop
loop
repnz
std
inc
js
dec
jnp
clc
test
dec
jecxz
dec
pop
mov
inc
lods
out
movs
out
stos
jb
loopne
ss
imul
ficom
adc
xor
lahf
lods
adc
out
movs
pop
jg
xchg
outs
push
jnp
push
jae
nop
adc
pop
rcr
mov
push
(bad)
cmp
dec
pushf
mov
lock
jmp
loopne
rol
xchg
cmp
in
out
jbe
and
or
je
jge
out
inc
inc
icebp
neg
mov
loopne
mov
mov
and
out
sub
lea
mov
mov
add
adc
mov
jge
dec
or
xchg
test
inc
inc
mov
and
in
jmp
xor
and
pop
call
cmps
lahf
cmc
and
xor
lahf
cwde
retf
jo
adc
and
jg
cli
cld
jp
dec
push
sub
scas
push
cmp
cmp
mov
or
fcomp
daa
pop
mov
mov
aam
jecxz
or
add
or
in
or
add
inc
mov
scas
lods
xchg
rol
fmul
mov
mov
mov
and
mov
enter
aad
pop
inc
ss
sar
lock
inc
in
aaa
test
push
push
test
xor
imul
xchg
nop
dec
ret
(bad)
loope
fsubr
sbb
add
and
(bad)
(bad)
out
js
inc
stos
stc
adc
imul
in
push
mov
sbb
popf
inc
inc
data16
ja
mov
loop
loope
out
fisttp
sar
shl
jae
test
test
push
mov
mov
test
jmp
movs
xchg
and
loope
add
jmp
das
inc
inc
and
ins
cwde
xchg
stos
adc
mov
jecxz
push
lds
pop
mov
fist
inc
fidivr
pop
xor
sbb
mov
scas
or
and
fwait
push
sbb
lods
cld
int3
xor
neg
icebp
in
pop
inc
add
mov
push
adc
xchg
adc
jmp
scas
pop
mov
and
sub
dec
dec
in
lock
mov
dec
ret
sbb
mov
mov
cmp
inc
(bad)
stc
mov
out
push
and
jle
fld
test
jb
addr16
das
xchg
sbb
sub
repnz
dec
sbb
jno
mov
mov
nop
xchg
and
cmp
adc
mov
jle
cmp
cmp
mov
add
int
popa
inc
mov
pop
fsub
xor
dec
aad
jns
xchg
cmps
retf
enter
sub
sbb
cli
dec
fsubr
stos
adc
test
outs
mov
fst
lea
xchg
nop
and
repnz
jmp
fbstp
stos
pusha
pop
xor
push
sar
aad
iret
ins
test
sub
out
dec
std
ds
xor
dec
sub
mov
lea
mov
or
adc
jmp
dec
jno
sbb
mov
cmc
add
ficom
inc
cdq
mov
cld
xchg
inc
mov
push
or
clc
pop
inc
mov
cmp
adc
or
dec
loope
scas
mov
lea
retf
popf
xor
data16
xchg
loopne
pop
inc
(bad)
std
and
xor
jg
inc
cmp
sub
scas
xor
out
sbb
mov
aaa
test
outs
mov
inc
mov
and
fisttp
xchg
adc
mov
fild
mov
mov
icebp
ds
xor
(bad)
mov
(bad)
movs
sbb
dec
mov
and
push
add
pop
cmp
adc
into
inc
dec
xchg
outs
dec
aam
ds
or
jb
sub
jle
fs
rol
xchg
les
xchg
pop
push
mov
aaa
call
sbb
loopne
sahf
call
retf
xor
cwde
jp
jp
sub
push
and
pop
inc
enter
lock
inc
(bad)
or
stc
ins
pop
and
mov
popa
movs
in
lods
or
pop
or
cld
xchg
push
add
push
(bad)
clc
jmp
lahf
push
pop
mov
js
inc
sbb
in
aaa
mov
sub
icebp
and
add
xchg
sbb
cmp
xchg
stc
nop
push
pop
fwait
pop
enterw
jb
into
adc
push
sbb
(bad)
adc
mov
mul
outs
jb
daa
mov
test
or
cmp
movs
repz
xchg
fidivr
loope
(bad)
pop
(bad)
ja
inc
xor
add
pop
xor
and
ins
xchg
jbe
mov
fwait
retf
mov
cmp
push
clc
inc
add
jle
out
inc
stos
aam
adc
test
fbld
retf
fwait
dec
inc
push
mov
dec
jne
push
push
push
push
pop
out
dec
ds
in
dec
test
cmp
fwait
lods
fist
(bad)
push
loop
or
imul
sub
sbb
rol
call
fstp
jg
movs
mov
xor
mov
ins
and
loopne
in
test
dec
cmp
push
(bad)
pop
sbb
mov
xchg
add
mov
mov
enter
fcomp
inc
rol
imul
ficomp
adc
repnz
sbb
das
(bad)
in
and
test
push
imul
mov
mov
ret
mov
push
jbe
sub
in
outs
xchg
mov
std
jne
inc
retf
push
mov
xchg
sbb
inc
inc
jmp
js
push
arpl
fcomp
or
sub
loope
sub
and
fs
fcomp
adc
pop
fistp
into
iret
mov
gs
push
push
dec
xchg
dec
push
pop
bswap
mov
push
push
push
sahf
or
jne
mov
push
cmp
ds
or
cs
dec
fadd
aam
(bad)
mov
cmps
jle
out
clc
stc
inc
push
jge
stos
leave
adc
xor
in
in
cmp
mov
mov
lods
in
into
neg
cmc
aad
dec
mov
mov
push
push
pop
and
cmp
ror
push
dec
xor
dec
mov
lds
mov
lods
test
sbb
cdq
cmps
std
ja
sbb
test
lahf
test
inc
sub
cmp
sbb
push
mov
lds
int3
ret
sbb
mov
lea
fidiv
jno
cmp
lock
jge
sbb
sbb
into
outs
ins
adc
leave
xchg
inc
shl
cmps
shl
pop
sbb
jg
dec
rol
ja
and
sbb
and
lods
jnp
pop
pop
das
push
call
sub
adc
das
mov
in
sub
lea
add
push
sbb
test
sub
or
push
mov
std
ror
neg
and
sbb
and
scas
div
rcl
shl
ret
push
std
rcl
(bad)
push
mov
sbb
icebp
sub
pop
push
and
push
dec
neg
retf
iret
jmp
pop
popf
push
test
push
fisubr
pop
push
add
jecxz
das
cld
lea
mov
dec
dec
push
(bad)
retf
pop
pop
int
(bad)
(bad)
and
and
xchg
or
(bad)
mov
outs
jp
sbb
jne
lods
stos
jge
mov
(bad)
outs
inc
push
or
pusha
test
adc
dec
or
cmps
shr
adc
in
ja
nop
pop
push
cmp
ror
int3
cmp
out
fnstsw
push
ror
jmp
or
mov
neg
ret
adc
popf
imul
dec
lock
or
add
movs
in
pusha
mov
pop
out
jmp
aas
adc
or
stos
push
xor
adc
mov
ins
retf
fwait
shr
call
jnp
pop
push
pop
jne
sbb
mov
pusha
push
arpl
jb
pusha
mov
jb
cmps
sub
cmp
pusha
mov
pop
mov
test
adc
or
pop
scas
pop
mov
test
je
inc
call
inc
dec
sub
pop
repz
xchg
jl
bound
adc
mov
scas
mov
dec
mov
sbb
dec
shr
call
adc
cmps
xlat
rcr
xor
call
jg
ror
mov
das
aaa
stos
jo
ret
sub
mov
rcl
int3
jp
or
xor
sub
jle
mov
or
inc
ins
in
stc
in
and
xor
jmp
pop
mov
call
cmp
mov
mov
adc
xor
jl
add
into
icebp
fcmovb
mov
jb
or
jo
adc
xor
outs
mov
imul
xchg
cmp
or
pop
sub
(bad)
push
sub
xchg
test
loop
mov
mov
mov
cmps
ror
pop
(bad)
pop
out
ror
mov
mov
mov
and
das
mov
(bad)
mov
lods
test
aad
pop
and
xchg
lods
addr16
leave
pop
setbe
jp
push
mov
es
lahf
retf
jmp
dec
add
push
adc
mov
imul
jp
dec
push
jb
cmp
std
push
and
imul
push
arpl
pop
mov
fs
push
fdiv
je
mov
pop
pop
xchg
mov
jg
dec
xor
jp
lahf
loopne
ins
(bad)
js
or
dec
mov
add
imul
ds
mov
and
das
xor
pop
out
int
(bad)
xchg
cmc
aad
aas
test
or
inc
mov
stc
mov
and
scas
mov
lds
or
sub
out
push
cli
pop
test
sbb
gs
mov
cli
out
add
ss
push
push
add
dec
sub
pushw
or
emms
popf
inc
enter
pop
jmp
xor
iret
mov
stos
mov
loop
mov
lods
sbb
test
ins
push
sub
fldcw
and
dec
mov
push
pop
pop
inc
cmp
fist
(bad)
sub
mov
xchg
fwait
cmps
cmp
ins
add
adc
cmp
push
repz
pop
test
(bad)
xor
sub
fwait
test
mov
xor
arpl
push
imul
pop
push
std
mov
(bad)
cli
pushf
shl
jmp
sub
(bad)
ficom
das
mov
mov
ins
sub
mov
cmp
mov
jle
pushf
jne
push
ficom
xlat
sub
xchg
jne
or
or
dec
cmc
fadd
and
mov
fisub
push
inc
mov
sbb
sub
popa
cdq
xor
mov
stos
arpl
inc
out
fimul
push
sub
pop
pop
pusha
loopne
(bad)
mov
add
xchg
xchg
sbb
retf
les
or
imul
test
push
pop
xchg
cmp
or
sub
cmp
pop
cmps
mov
inc
jge
jge
and
dec
sahf
push
or
and
xor
inc
rcl
daa
or
test
jg
jg
stos
test
adc
inc
or
cs
sub
repnz
jle
mov
mov
sar
sbb
(bad)
push
mov
mov
loop
cdq
(bad)
fs
js
push
movs
sbb
push
cwde
movs
xor
xor
mov
and
inc
out
pop
sbb
or
ja
sub
xchg
mov
xor
push
xchg
cmc
mov
jnp
jno
(bad)
pop
popf
bound
inc
xchg
xchg
mov
jnp
enter
mov
(bad)
daa
or
add
mov
mov
ins
cdq
loopne
and
push
xlat
popa
pop
push
repnz
stos
xor
daa
mov
lods
(bad)
aad
test
mov
daa
call
stc
xchg
fild
jb
mov
fwait
jne
frstor
mov
add
(bad)
sub
xor
loop
ins
xlat
in
sbb
aaa
movs
out
leave
sar
neg
out
retf
stos
jmp
inc
test
sub
call
adc
push
push
dec
dec
mov
dec
fdivr
or
ds
sub
into
jp
mov
imul
sub
ret
ror
pop
(bad)
(bad)
or
mov
inc
lds
xchg
pop
mov
aad
xlat
xor
cmp
(bad)
jae
add
je
dec
bound
jge
or
and
lods
cmp
dec
or
clc
mov
mov
int
pop
jns
jbe
adc
retf
retf
sbb
cmp
mov
fisttp
push
imul
jns
pop
push
jp
sub
retf
push
xlat
xor
mov
in
xor
aad
pop
scas
or
stc
sahf
mov
xchg
stc
xchg
pop
je
and
xor
stc
std
bound
cmps
test
mov
or
div
ror
mov
and
leave
imul
cmp
jo
fdivr
icebp
js
mov
xchg
fwait
das
test
std
pop
in
xchg
fs
add
dec
push
xchg
out
out
sub
or
loope
neg
sub
inc
cs
int
clc
ins
lods
sub
xor
lds
lahf
loopne
push
or
test
pop
scas
xor
jl
clc
sbb
out
or
xor
cmps
idiv
loope
mov
add
shr
xor
cmp
add
inc
scas
sub
(bad)
push
and
out
mov
mov
stc
or
or
or
xchg
and
shr
call
int
fld
xchg
jle
inc
ror
fld
js
in
aam
xor
les
call
sub
mov
push
gs
inc
fisttp
in
xor
sbb
fnstsw
or
(bad)
pop
dec
sub
jg
neg
shl
icebp
aaa
inc
sbb
add
inc
mov
out
fcomp
fist
push
and
sbb
jle
adc
cmp
out
je
in
pop
movs
ins
fbld
mov
retf
cmps
mov
sbb
movs
loop
xchg
mov
rcl
mov
xor
sub
out
adc
leave
mov
hlt
test
push
sub
cld
inc
jbe
mov
push
or
stos
repnz
daa
inc
(bad)
cdq
push
loop
or
mov
or
and
sub
mov
xchg
mov
inc
into
adc
mov
xor
mov
dec
pop
pop
ret
icebp
mov
std
mov
cmp
jmp
ss
shl
popa
push
xchg
mov
scas
xchg
ret
and
pop
test
inc
test
out
lahf
ins
sub
out
inc
sti
inc
jmp
cwde
nop
sub
mov
jns
ds
push
pop
mov
call
js
fild
sahf
repz
cmps
mov
lahf
mov
adc
addr16
xchg
and
cld
sahf
imul
mov
fnstsw
outs
ins
in
mov
push
aaa
ins
jge
mov
cdq
test
call
inc
and
popf
mov
pushf
das
sub
push
stos
pusha
dec
adc
fild
adc
retf
fdivr
(bad)
cmp
push
mov
jbe
jle
sub
je
pop
mov
repnz
arpl
fist
cmp
mov
mov
retf
pop
test
sub
or
mov
sub
fnstsw
pusha
pop
and
mov
add
add
push
push
ins
lahf
pop
imul
sbb
pusha
scas
pop
mov
dec
pop
push
outs
or
mov
fild
popf
mov
out
in
mov
adc
(bad)
jno
adc
mov
in
jp
or
xor
fidivr
and
cli
(bad)
adc
xchg
or
jnp
call
cli
xchg
shr
ins
and
aam
mov
sbb
pop
scas
sub
push
xor
out
ins
adc
loope
jmp
xchg
mov
loop
(bad)
in
jmp
movs
repnz
out
pop
and
push
jmp
outs
push
shr
fst
nop
pushf
out
sti
sbb
xchg
fisubr
and
inc
mov
or
xchg
sub
add
adc
sub
or
jb
mov
pop
inc
and
in
fcomp
jle
mov
mov
xchg
mov
push
out
adc
dec
xchg
mov
popa
push
lods
push
jmp
mov
xor
mov
mov
pop
inc
ffreep
jns
mov
mov
mov
add
xor
jmp
xor
add
pop
fsub
retf
daa
pop
loop
mov
push
cmps
dec
nop
sti
fsubr
int3
inc
pop
dec
loopne
sub
lods
mov
pop
into
xor
inc
push
aam
rol
fcomip
pushf
loopne
outs
movs
mov
push
lock
jg
loop
push
add
jae
cmc
dec
adc
bound
xchg
div
popf
cmc
inc
imul
bound
pop
jns
ins
xchg
pop
mov
and
dec
pop
repz
ret
sbb
sub
jb
ret
cmc
mov
mov
movs
cmp
pop
xabort
push
mov
ins
jp
cmps
adc
ins
cwde
inc
jge
in
hlt
cmc
enter
mov
cli
xchg
mov
sbb
mov
sub
fucomp
cmp
es
pop
clc
adc
mov
mov
ja
int3
icebp
pushf
stos
mov
gs
dec
sub
ins
mov
(bad)
jp
jg
rcl
mov
sar
imul
mov
rol
xor
std
mov
mov
pop
mov
cmps
or
xor
fisub
lods
or
jge
mov
stos
loope
leave
jns
jmp
jp
add
mov
mov
ror
popf
dec
sub
add
nop
xchg
and
jbe
idiv
xor
stos
inc
stos
jnp
mov
pause
(bad)
iret
out
xor
mov
nop
retf
sbb
inc
fs
inc
push
fcom
and
cmps
movs
inc
dec
xchg
int3
inc
jmp
div
and
fs
dec
xor
out
dec
ficomp
icebp
dec
test
into
sbb
pop
in
dec
icebp
popf
dec
xchg
inc
ficomp
std
fcmovb
and
test
stos
dec
out
jmp
mov
sti
mov
aad
stos
dec
mov
mov
fild
(bad)
gs
(bad)
icebp
push
dec
rol
push
ret
movs
iret
inc
inc
add
hlt
push
(bad)
aam
mov
shl
fisubr
mov
mov
mov
das
adc
cli
int3
in
xor
cmp
sbb
ja
xchg
cmovbe
call
pop
add
arpl
and
cmp
mov
fst
pop
mov
mov
mov
call
rcl
jecxz
mov
and
xor
ins
fst
xchg
nop
mov
test
(bad)
xlat
add
cdq
xchg
sub
push
xchg
(bad)
jmp
scas
mov
mov
mov
imul
es
mov
fwait
rol
les
icebp
rol
pop
inc
dec
mov
pop
jo
fndisi(8087
push
ficom
xchg
add
daa
fcmovnbe
add
fs
cli
shl
xor
gs
mov
adc
bound
inc
repz
push
or
jae
ss
ins
cs
adc
jae
push
inc
and
mov
arpl
push
ror
mov
imul
mov
cmps
push
lock
das
test
mov
add
and
and
xor
jnp
shl
js
sbb
cmp
movs
nop
xchg
sbb
pop
xchg
aaa
leave
mov
in
mov
and
pop
shl
ret
sub
repz
aam
cs
mov
push
add
out
ins
jne
mov
and
dec
inc
push
stos
or
sub
std
movs
xchg
out
mov
adc
push
push
ret
add
mov
js
push
cmps
int
push
cli
push
mov
cmp
add
jl
push
lock
jnp
retf
les
jne
push
mov
ror
push
inc
in
dec
mov
repnz
dec
jmp
imul
dec
cmp
stos
mov
sti
inc
mov
pop
xchg
or
jmp
push
in
ret
mov
repnz
sbb
and
add
dec
jle
fbstp
mov
jg
mov
mov
lea
jne
xor
adc
mov
test
rcr
(bad)
cmc
jo
daa
sub
push
sbb
adc
popf
mov
fnstenv
cmp
ins
stos
jne
and
stos
jmp
je
adc
shl
and
ins
iret
xchg
cmp
sbb
push
rcl
or
loope
jle
add
adc
fidiv
movs
mov
(bad)
mov
int3
dec
imul
scas
sub
fwait
jbe
fisubr
(bad)
jns
fwait
std
(bad)
sbb
lds
xchg
sbb
sti
imul
cmps
mov
push
add
mov
inc
lods
test
clc
xchg
pop
int
call
mov
dec
push
shr
aaa
pop
pop
(bad)
jns
pop
loope
xchg
sub
shl
add
call
mov
(bad)
aaa
aam
scas
fimul
leave
mov
in
adc
xchg
sbb
jne
push
inc
cmps
in
adc
movs
std
adc
inc
(bad)
fdivr
arpl
jns
inc
lock
lods
cmp
in
push
jmp
stc
cdq
push
cmps
xchg
shr
jg
pop
or
or
mov
das
inc
cli
jo
pop
or
mov
mov
adc
popa
rcr
gs
jbe
test
test
xchg
out
jno
test
aam
and
dec
sar
repnz
outs
ds
les
mov
test
and
lods
test
mov
in
dec
clc
inc
mov
jmp
wbinvd
sub
or
out
adc
mov
mov
push
and
cwde
ins
jg
das
push
jecxz
adc
(bad)
dec
test
imul
pop
mov
pusha
icebp
jge
bound
cmc
push
rcl
out
mov
(bad)
shr
mov
cmp
pushf
xchg
xchg
ret
ffree
or
push
dec
mov
cmp
adc
cmp
push
and
movs
sub
adc
add
fild
jle
xor
jne
sub
cli
pop
mov
sbb
je
inc
mov
lock
sub
jle
dec
movs
fdivr
scas
mov
push
add
cmp
and
scas
(bad)
mov
inc
fstp
inc
inc
push
das
and
mov
jae
jo
dec
cmps
jne
add
in
shl
jp
inc
add
outs
and
adc
cmc
adc
loop
pop
sub
pop
xor
jnp
call
cmp
sahf
rcr
mov
sahf
push
xlat
and
out
xchg
xor
or
es
mov
int3
xor
test
jno
push
fisttp
popa
into
dec
push
pop
xchg
jo
adc
es
xor
shl
movs
mov
callw
gs
bound
data16
popf
movs
arpl
shl
add
or
(bad)
ins
push
inc
push
or
push
mov
outs
and
inc
inc
mov
imul
outs
jg
mov
inc
sub
add
dec
sbb
imul
je
movs
push
add
mov
mov
and
jmp
fnstenv
ficom
sub
popa
or
adc
or
inc
cmp
jmp
lds
test
(bad)
int
lahf
adc
mov
sbb
xchg
cmp
sbb
adc
cld
call
shl
js
add
out
dec
sbb
in
inc
in
aam
push
push
inc
inc
les
xor
(bad)
dec
push
sbb
jns
xchg
sar
jns
cmp
outs
jno
test
cmp
add
mov
mov
jmp
sbb
cmp
out
sub
std
mov
addr16
xor
adc
lods
iret
pop
cmc
addr16
xchg
ds
das
jno
inc
jl
into
and
adc
adc
inc
out
popf
dec
mov
jmp
or
mov
xor
das
sbb
loopne
das
aam
cld
imul
jmp
pop
push
pusha
sahf
mov
push
pusha
ret
push
mov
jmp
test
test
sub
lds
xor
add
add
scas
test
add
out
push
xchg
or
scas
in
dec
cmp
xchg
neg
sub
xor
movs
inc
cs
test
ret
push
aam
int
inc
loopne
pop
sbb
mov
jnp
ins
xor
xor
ja
stos
pop
sbb
dec
mov
ret
out
and
data16
xor
push
and
pushf
test
fsubr
movs
out
jmp
xchg
fs
jle
xchg
ins
sets
(bad)
imul
retf
retf
mov
fwait
inc
mov
dec
scas
mov
aaa
ret
jmp
or
jl
jno
sub
rcr
addr16
imul
repz
cs
pop
call
xor
sbb
cmps
test
pushf
mov
out
dec
sbb
pop
clc
rep
or
inc
inc
xor
fcmovnb
jmp
adc
jo
and
hlt
mov
push
or
rcr
(bad)
in
outs
lds
in
xchg
jno
adc
sbb
inc
jbe
ffreep
pop
add
adc
retf
and
or
fdiv
inc
ins
push
xchg
out
push
push
call
sbb
cli
(bad)
or
imul
call
jp
nop
sti
jae
shl
(bad)
xchg
and
aas
add
in
cwde
loope
xor
ja
imul
nop
xchg
inc
aam
shr
mov
or
cmps
inc
call
add
xchg
aad
loopne
mov
cmp
sbb
arpl
fs
retf
aam
scas
jp
or
not
mov
xor
add
or
pop
stc
lods
fsubr
aas
clc
mov
mov
jecxz
inc
inc
pushf
out
bswap
mov
adc
rcl
clc
arpl
xor
test
out
fisub
test
push
xor
xchg
add
call
loopne
push
mov
sbb
ror
mov
jnp
(bad)
cmp
xchg
cmc
inc
clc
out
in
sbb
pop
jo
(bad)
and
in
mov
test
fsub
ret
dec
or
aas
or
loopne
ret
and
push
lahf
rol
(bad)
(bad)
cli
sub
ds
cmps
xchg
inc
mov
push
cmp
jle
inc
cwde
jbe
sbb
sub
cmps
imul
mov
je
push
push
push
das
mov
jb
xchg
cmp
cwde
and
add
mov
mov
test
inc
test
sub
fidiv
push
shl
xor
dec
bound
int
call
mov
cmp
retf
in
call
rol
lock
arpl
jae
push
imul
test
addr16
mov
mov
aas
setns
mov
cmp
pop
nop
out
sahf
jl
cmp
mov
aas
mov
sub
pop
arpl
jge
enter
push
hlt
aad
stos
lods
rcl
dec
addr16
jp
dec
cmc
or
mov
mov
in
pop
push
or
out
scas
in
xchg
cmps
push
fsub
std
sbb
cli
repz
or
inc
stos
push
loopne
out
bound
pop
popf
xor
mov
outs
mov
rcl
inc
or
cli
sub
aas
in
inc
and
(bad)
fs
pop
add
aam
push
cld
into
(bad)
outs
add
mov
mov
dec
mov
sub
pop
push
(bad)
adc
cld
sti
jmp
lods
and
jp
push
test
sahf
mov
idiv
scas
shr
jl
xchg
cmp
addr16
mov
cmc
jne
rol
sub
neg
mov
jl
xchg
or
mov
out
mov
fidivr
dec
add
or
in
scas
xchg
cmp
add
repz
push
inc
mov
sbb
mov
jne
stos
iret
mov
stc
jno
inc
jge
push
call
mov
ret
dec
add
xchg
inc
(bad)
out
dec
add
cmp
dec
(bad)
movs
addr16
sub
mov
ficomp
nop
and
jo
xchg
shr
push
cmp
mov
xchg
xchg
add
jne
dec
mov
pop
popa
and
pop
cdq
imul
dec
pushf
mov
in
(bad)
jae
adc
jno
test
lahf
adc
jge
jno
pop
inc
inc
js
sub
cmp
pop
in
xor
or
stc
inc
dec
jne
pop
pop
or
aam
mov
pop
ror
loopne
in
pop
sub
mov
icebp
(bad)
out
pop
div
js
mov
mov
arpl
sub
ins
dec
aad
ds
and
addr16
push
jg
hlt
lds
and
push
sbb
jl
xor
dec
xor
in
imul
aam
pop
push
pop
add
jae
jnp
jns
jno
(bad)
jg
cdq
jmp
mov
stos
or
adc
and
jae
push
cmp
jbe
sub
repz
pop
fnstsw
dec
in
fistp
mov
ins
loop
push
jne
and
cmp
scas
jno
clc
test
jne
cmp
lods
call
dec
add
jmp
test
jge
stos
fisttp
div
pop
movs
aas
ins
and
sbb
lea
pusha
hlt
shl
lds
lock
movs
pop
test
es
(bad)
cmp
lock
(bad)
and
imul
dec
dec
nop
jle
js
sub
jmp
fs
scas
ret
mov
(bad)
shl
adc
fldcw
fbstp
sti
adc
or
xor
xor
shr
addr16
cdq
mov
clc
xchg
inc
mov
push
ds
bound
pop
adc
add
dec
jae
cs
xchg
push
mov
fistp
sti
inc
jne
data16
test
nop
dec
call
inc
add
cmp
(bad)
or
cmp
aas
mov
je
cmp
aas
test
std
(bad)
or
and
jb
cmc
fistp
adc
and
sbb
dec
dec
je
mov
push
or
test
scas
sub
sbb
and
(bad)
(bad)
or
push
outs
inc
jns
fs
aas
out
xor
nop
dec
daa
or
and
test
xor
pop
fcmovnu
xlat
lock
xchg
aam
loope
loopne
push
icebp
dec
push
adc
fdivr
or
jb
or
adc
mov
fiadd
scas
mov
xor
or
pop
mov
je
ja
rcl
sbb
movs
fisubr
fs
cs
popf
(bad)
dec
scas
add
fist
jne
rcl
push
jno
mov
add
stc
add
mov
fwait
aas
cmp
(bad)
mov
mov
sahf
outs
adc
cmps
sti
fsub
pop
pusha
xchg
dec
gs
mov
aad
imul
pop
outs
movs
ja
scas
pop
adc
call
jge
fild
mov
mov
add
sbb
mov
pop
sahf
in
xchg
dec
inc
clc
jo
ins
jnp
adc
imul
mov
dec
xor
in
repnz
adc
(bad)
push
(bad)
jmp
test
mov
mov
add
and
add
mov
rep
adc
ja
rcl
adc
dec
int
inc
cld
cmp
lock
in
push
out
cmp
mov
stos
jbe
push
jg
bound
rcr
jge
out
pop
xlat
cmp
cli
pushf
dec
pop
push
xchg
clc
test
jl
imul
mov
das
mov
xchg
lods
inc
ja
mov
iret
int3
stos
call
jle
psadbw
ins
out
or
test
cmc
pop
es
mov
mov
test
retf
cmp
jne
mov
inc
mov
sub
clc
sti
xchg
mov
cld
retf
ret
or
mov
in
inc
inc
inc
stc
test
mov
cli
sbb
lahf
or
inc
or
retf
loope
jle
out
xchg
xchg
cmp
mov
or
push
cmps
or
dec
and
ret
mov
syscall
in
in
add
ins
dec
jns
outs
in
mov
inc
repz
mov
imul
pop
pop
addr16
jno
cmp
push
inc
or
cmp
and
mov
adc
loope
mov
in
fcomp
cmp
and
xchg
(bad)
retf
cmp
cdq
ss
pop
retf
mov
out
mov
mov
cmp
mov
xchg
cmc
pusha
pop
aas
jo
xchg
(bad)
and
cmps
sbb
and
retf
sbb
call
and
push
retf
cmc
xlat
retf
movs
inc
daa
(bad)
js
fdiv
int
mov
inc
paddq
aaa
test
adc
jge
or
out
mov
mov
inc
xor
(bad)
mov
or
adc
cs
shl
adc
retf
ins
jae
pop
pop
cwde
jl
cmp
sbb
rcl
or
pusha
push
push
pop
or
and
lods
out
xchg
mov
xor
push
xlat
lea
sar
repnz
repnz
jbe
pop
fsub
out
jns
scas
adc
mov
add
pop
int
mov
leave
mov
outs
xor
inc
mov
cmc
in
sub
mov
dec
jmp
jl
push
xlat
xor
mov
hlt
jne
push
or
pop
pop
scas
cmc
imul
inc
cmp
cmp
push
in
dec
stos
xor
in
xor
(bad)
hlt
inc
in
in
mov
mov
and
push
lods
hlt
xchg
inc
in
xchg
mov
out
js
and
clc
icebp
fdivr
cld
dec
lds
jecxz
add
dec
fcomip
mov
pop
rcl
pusha
push
(bad)
in
in
sbb
test
fild
dec
or
inc
adc
pusha
or
dec
jg
ror
aam
mov
aam
sub
sahf
fsub
ds
mov
push
push
ss
mov
inc
fistp
xor
push
or
je
mov
mov
pushf
imul
(bad)
mov
mov
into
inc
mov
mov
pop
push
dec
jl
add
jnp
retf
(bad)
pop
pop
sub
inc
in
sub
xchg
(bad)
stos
bound
cmps
and
mov
mov
dec
les
inc
icebp
dec
xchg
mov
retf
ret
or
lock
repz
jno
xor
or
mov
aam
out
test
out
pop
xchg
and
cmp
mov
and
inc
sub
push
push
pushw
retw
or
repnz
cmp
out
sbb
xchg
add
call
mov
push
int3
neg
cs
and
dec
dec
pusha
push
xor
dec
jnp
sbb
add
pop
adc
xchg
in
inc
xor
aas
sbb
pop
sub
jecxz
mov
out
ss
mov
bound
repz
cli
sbb
mov
fstp
inc
(bad)
jg
push
stc
das
call
retf
mov
cmp
in
adc
push
test
cwde
dec
repnz
(bad)
sub
mov
loop
js
sbb
fild
int
es
imul
sbb
mov
pop
fcomp
inc
push
push
fistp
dec
xor
and
fwait
push
stos
sub
es
xor
mov
inc
or
cmps
mov
mov
fwait
sub
dec
xchg
jmp
mov
cmp
aaa
and
ror
and
and
cli
cmp
aas
out
fdiv
cwde
cdq
stc
inc
jmp
mov
cld
out
lea
out
add
cwde
and
jbe
jle
mov
rcr
shrd
sbb
dec
jns
cld
shr
jb
pop
sbb
jbe
inc
(bad)
daa
mov
mov
mov
adc
aad
adc
pop
sti
inc
stos
or
jge
adc
fst
shr
and
mov
jne
or
div
test
js
push
adc
mov
fsubr
popf
jp
mov
out
fld
push
jecxz
gs
and
mov
in
scas
or
cli
ret
push
sbb
out
push
lahf
leave
mov
rol
daa
imul
in
test
mov
popa
push
dec
call
rcl
sub
pushf
inc
cmp
sub
jp
pop
sahf
jmp
int
sub
in
xchg
aaa
dec
push
xchg
addr16
aam
inc
addr16
adc
test
push
pop
jnp
dec
pop
mov
jo
repz
lea
outs
push
sub
aad
es
dec
jmp
sahf
jbe
inc
or
pop
jmp
cmp
ja
je
xchg
push
xchg
lahf
push
daa
push
and
xor
(bad)
ficom
cmp
sub
nop
outs
aad
jge
mov
cmp
dec
stos
ror
loop
in
call
pop
cdq
inc
xchg
adc
or
daa
fwait
jne
pop
jno
fdivr
and
test
repz
pop
mov
inc
imul
xor
(bad)
ret
sub
out
es
and
les
daa
or
cmp
dec
les
mov
jo
in
loop
ins
mov
sub
je
cli
and
mov
xlat
loopne
or
(bad)
pop
test
push
or
in
mov
arpl
push
pop
std
repnz
cmp
outs
call
out
dec
icebp
movs
sub
add
add
adc
mov
sbb
pop
pusha
neg
fiadd
adc
mov
sbb
dec
test
dec
icebp
mov
pop
sbb
adc
mov
popf
ss
jmp
xchg
inc
mov
inc
push
ins
and
pop
xchg
mov
out
pop
jae
clc
mov
pop
xchg
mul
mov
jmp
lods
cwde
hlt
aam
inc
xchg
push
sbb
push
jp
mov
push
retf
or
push
xchg
retf
push
stc
stos
js
movs
xor
jnp
jg
int
dec
jmp
xor
fidiv
mov
inc
call
sti
xchg
sar
mov
out
xchg
and
les
lds
adc
or
jle
push
push
mov
inc
daa
sbb
iret
out
pop
xor
cmp
push
popa
movs
rcr
mov
ss
movs
xor
into
inc
push
add
pop
fidiv
call
jl
jl
std
inc
imul
jmp
pop
and
cmp
and
addr16
jns
pop
or
xchg
loope
cmc
nop
sahf
repz
cmp
mov
mov
fcomp
cld
out
and
sbb
pop
test
mov
adc
cwde
mov
iret
dec
ja
fisub
jo
xor
add
mov
shl
loopne
not
jg
pop
jo
xchg
pusha
dec
jg
jge
loopne
rcl
jo
repnz
mov
dec
lock
push
adc
lahf
xchg
inc
dec
in
arpl
cmp
fild
push
minps
sbb
pop
mov
xchg
pop
jle
clc
pop
aam
out
xchg
mov
repnz
or
pop
enter
push
hlt
inc
sub
mov
outs
mov
xor
dec
jge
cmp
jg
inc
xchg
test
xchg
(bad)
jno
inc
int
sub
pop
jmp
mov
cmp
or
fstcw
mov
mov
leave
sub
jge
scas
jno
(bad)
mov
inc
and
movs
lods
retf
sub
je
cmp
(bad)
adc
and
cwde
stos
xchg
test
nop
xchg
int
xchg
mov
xchg
fnstcw
clc
xchg
jle
repz
mov
jg
shl
enter
(bad)
hlt
pop
inc
jae
sub
stos
ret
scas
cmps
cwde
jae
and
ds
dec
into
repnz
es
dec
fiadd
cli
lea
add
fst
shl
(bad)
div
inc
arpl
fbld
movs
xchg
xchg
(bad)
sbb
sti
adc
xchg
dec
ss
daa
inc
adc
lock
rcr
fist
jmp
call
sbb
sbb
stc
mov
xchg
and
mov
sbb
mov
mov
mov
aam
add
call
repnz
fidiv
and
cmps
shl
mov
jb
xchg
jge
cmps
or
mov
outs
cdq
xor
mov
xchg
sbb
and
retf
pop
push
imul
mov
lods
jl
and
jmp
add
xchg
scas
mov
pop
mov
xor
into
outs
xchg
(bad)
pop
dec
jg
cmp
fsub
pop
pop
call
push
es
imul
push
cmp
not
pop
aad
xor
adc
add
aam
pop
out
cs
add
cmp
movs
stos
cwde
pop
sub
push
adc
popa
enter
ins
cmp
push
dec
popf
sub
jecxz
sbb
xor
add
sbb
pop
add
adc
pop
xchg
xlat
in
and
xchg
sahf
xchg
and
mov
inc
adc
cmp
adc
add
call
sbb
addr16
jbe
or
jg
shl
pop
retf
sbb
adc
push
cdq
pop
sub
mov
cmp
mov
jns
int3
inc
inc
or
out
mov
test
mov
mov
pop
xor
enter
rol
jle
and
loop
cdq
xchg
cdq
scas
out
jns
movs
sbb
pop
xchg
adc
inc
fs
mov
(bad)
and
pop
(bad)
jmp
imul
sar
int
shl
add
mov
sbb
cwde
add
jecxz
repz
idiv
pop
mov
fstp
lds
mov
loopne
fisttp
pop
in
mov
test
das
icebp
sub
cmp
or
test
or
mov
enter
sti
xor
lahf
xor
jmp
cli
and
mov
gs
dec
jns
in
cmps
retf
cmp
mov
rol
fdiv
(bad)
pop
inc
fsubr
mov
add
jno
or
cwde
fcomp
(bad)
sbb
push
sbb
pop
stos
mov
sub
xchg
push
xchg
inc
sbb
mov
sbb
mov
mov
xchg
push
cld
xchg
jge
sbb
sub
mov
mov
(bad)
sbb
icebp
xor
in
dec
sbb
lods
xor
jmp
jmp
addr16
mov
or
or
adc
ret
xlat
dec
mov
inc
sub
dec
mov
dec
jg
xor
fsub
ins
xchg
test
nop
dec
mov
dec
in
adc
jmp
jb
int
dec
adc
js
pop
xchg
mov
push
push
xor
and
mov
imul
xchg
mov
or
les
aad
push
faddp
or
push
repz
aaa
add
(bad)
mov
shr
adc
loope
retf
jno
or
xor
or
adc
pop
push
sahf
xor
(bad)
push
push
fwait
and
xchg
cmp
stc
jge
or
mov
mov
fyl2xp1
ret
test
jp
push
sbb
je
xor
mov
push
pop
push
ret
loopne
iret
and
pop
xor
xchg
jecxz
jbe
xor
mov
rcl
or
jns
pop
lea
pushf
jnp
(bad)
cli
imul
call
out
(bad)
aad
xchg
cmps
xor
into
lock
aaa
repz
fiadd
mov
mov
in
sub
push
lods
loope
mov
repz
or
in
(bad)
movs
jb
retf
xor
stc
jae
push
loope
push
sub
test
jmp
setl
imul
jmp
inc
ins
cmp
fstp
stos
cmp
iret
sbb
sti
cmps
cwde
jle
retf
fstp
fadd
dec
sub
rcl
sbb
xchg
sbb
sbb
es
inc
mov
ret
cmp
adc
fsubr
sub
cli
cmp
imul
push
jl
fs
lea
outs
div
sub
mov
ds
sar
sti
cmc
sbb
jecxz
aam
and
lahf
aad
pop
cmp
xor
call
test
imul
retf
adc
pushf
in
loopne
jg
cmp
adc
mov
je
(bad)
pop
cdq
sub
cmp
pop
test
sar
cmps
sbb
mov
mov
sub
mov
sub
cmc
fisubr
(bad)
aad
gs
gs
sub
adc
cmc
retf
fisttp
sub
lds
xchg
jae
ret
push
movs
js
inc
shl
rol
jb
dec
and
jae
fistp
imul
xlat
xor
sbb
push
inc
cs
(bad)
pop
out
and
xchg
hlt
adc
ucomiss
pop
mov
rcl
nop
je
mov
pusha
nop
test
jbe
mov
sub
out
enter
xchg
add
fistp
jne
jns
sbb
pop
jns
gs
push
ins
repnz
xchg
popa
mov
push
loope
imul
js
jle
mov
inc
adc
mov
mov
imul
xchg
mov
ds
fisub
push
imul
ret
xchg
xor
mov
push
gs
lods
into
(bad)
pop
fadd
pop
imul
and
sbb
sub
sti
test
cmp
sbb
iret
in
outs
leave
mov
into
shr
sbb
mov
lahf
call
fwait
and
push
loope
dec
sub
shr
js
add
arpl
or
push
cmp
sbb
icebp
sti
jbe
loopne
cmp
inc
jbe
inc
dec
stos
aad
loop
mov
scas
bound
mov
push
mov
hlt
pop
int3
add
out
adc
cmp
bound
or
push
add
xor
mov
and
dec
out
and
into
add
sbb
dec
cwde
shl
sti
mov
rol
hlt
ret
push
shl
dec
push
das
push
push
sbb
out
repnz
jecxz
iret
xlat
fwait
ds
ds
jae
sub
cmp
xchg
xor
xchg
enter
cli
adc
mov
mov
iret
mov
mov
popa
dec
push
mov
repz
clc
out
std
bound
in
ror
mov
cmps
xchg
sub
sub
test
test
mov
add
ret
outs
inc
dec
mov
mov
inc
into
sbb
xor
dec
xor
xor
sub
adc
mov
pop
dec
pushf
popa
data16
inc
call
adc
fs
dec
mov
xchg
movs
push
xchg
in
cld
stos
repz
adc
pop
loop
sbb
fisubr
rcl
mov
(bad)
cmps
cmp
mov
stos
je
aad
jne
jo
ss
adc
mov
sub
pop
pop
xchg
jmp
fisubr
mov
mov
xor
sbb
dec
sbb
pop
into
in
test
mov
mov
fistp
lahf
outs
fucomp
imul
adc
ficom
or
(bad)
and
xlat
xor
sub
cli
or
in
lods
test
jo
mov
pop
in
out
ins
mov
and
in
repz
imul
into
sti
sbb
sub
int3
jb
movs
pop
xor
inc
jp
mov
cmp
daa
mov
hlt
dec
pop
scas
jno
xor
nop
fisttp
jmp
inc
ds
ret
cli
mov
sbb
xchg
fwait
mov
int3
int3
sar
sub
xlat
cld
mov
sub
rcr
int3
mov
mov
pop
jmp
stc
in
shl
dec
enter
fmul
imul
rol
cs
cmp
jmp
sar
sbb
fnstenv
add
add
sbb
loope
push
sub
loop
push
je
dec
int3
adc
or
repz
test
adc
add
inc
push
cld
mov
add
mov
jo
lahf
xchg
jns
fxch
gs
pop
ret
(bad)
pop
jle
jo
int
addr16
pop
lods
mov
retf
sahf
(bad)
mov
movs
mov
retf
pop
cwde
lock
or
test
pop
(bad)
scas
sbb
mov
add
inc
imul
icebp
jmp
xchg
xor
xchg
mov
outs
and
aad
jmp
adc
fldl2t
push
sbb
call
daa
adc
shl
loopne
mov
ret
mov
pop
dec
and
mov
cld
dec
movups
adc
sub
outs
push
adc
call
fdivr
fidivr
les
and
jmp
dec
aad
push
(bad)
repz
inc
loop
xchg
pop
xor
in
and
and
call
dec
jmp
repz
push
mov
shl
mov
push
dec
xor
add
mov
pop
lea
mov
(bad)
fs
xchg
mov
(bad)
and
cli
push
xor
in
add
fdiv
ror
and
ficom
adc
cmp
(bad)
adc
mov
scas
mov
cmp
inc
sub
xchg
or
xchg
mov
bound
add
xor
push
mov
scas
jge
lods
ret
adc
pop
pop
add
jnp
push
in
stos
mov
inc
push
scas
mov
rcr
mov
xor
mov
xchg
lods
inc
jns
xchg
push
scas
mov
inc
xlat
sbb
das
es
inc
fmul
out
xlat
cwde
xor
das
xchg
sbb
push
movs
xor
daa
in
scas
mov
adc
sbb
js
cmp
nop
js
retf
cwde
movs
jg
cmp
pop
add
shl
dec
xchg
ins
dec
fcomp
jmp
jmp
inc
jecxz
push
stc
sub
sbb
fnstenv
popf
sahf
jbe
(bad)
xor
ret
std
imul
sub
push
push
rcr
cmp
retf
in
ror
lods
ret
outs
dec
pop
pop
js
dec
dec
cmc
push
test
imul
imul
rcr
lods
mov
les
adc
sbb
pop
jbe
jl
jne
push
fdivr
push
cld
xchg
add
push
jbe
xchg
push
and
ins
retf
mov
test
int
pop
xlat
push
addr16
call
cwde
ror
cmc
pop
lahf
sub
and
mov
push
stos
cmp
fsubrp
aad
pop
stos
cmp
push
cwde
add
mov
inc
sub
hlt
mov
or
cld
mov
pop
in
addr16
jne
inc
out
inc
add
scas
je
js
inc
(bad)
pop
xlat
pop
es
push
pop
retf
xor
push
aaa
mov
mov
test
mul
mov
mov
(bad)
enter
and
push
dec
cmp
jnp
push
push
cmc
ss
or
mov
call
xor
xchg
out
or
aam
sbb
pop
jb
out
pop
retf
sbb
ja
sub
add
or
in
xor
mov
cmp
(bad)
push
sub
mov
lods
cmp
add
out
mov
jne
daa
fstp
test
stos
into
es
fst
xchg
push
popf
je
lds
xchg
cmp
in
ins
dec
pop
jp
and
mov
aad
mov
push
mov
lods
dec
fbld
jl
aad
mov
xlat
xchg
fdivr
or
sahf
xor
and
sar
rcr
popf
pop
mov
mov
cmc
xchg
ins
jp
fbld
arpl
sub
cld
xor
xchg
jmp
rcl
lds
cmp
xchg
leave
out
add
cdq
add
jo
push
call
adc
ror
mov
daa
icebp
std
xor
repnz
jb
shl
std
push
dec
aaa
outs
sub
div
add
fcom
inc
in
mov
hlt
sub
pop
jae
aam
xchg
mov
pop
loopne
fcmovbe
fbstp
test
jbe
sbb
mov
ins
or
mov
call
aad
lahf
adc
mov
out
loope
and
mov
scas
pop
jge
les
sbb
add
call
(bad)
in
jbe
aas
or
inc
add
cdq
add
lea
fld
add
out
movs
es
sbb
xchg
sti
dec
dec
movs
test
sbb
mov
out
out
loope
xchg
call
lea
test
in
lods
pusha
jb
jge
xchg
pop
cmp
out
test
and
adc
lods
das
xor
mov
je
xchg
sbb
es
in
gs
stos
pushf
test
inc
mov
inc
push
fistp
scas
dec
outs
ds
in
xchg
out
add
pop
cmp
aad
xchg
adc
sub
mov
push
sub
stos
adc
call
(bad)
lar
daa
(bad)
xchg
adc
call
sub
push
add
add
fidivr
in
lahf
adc
in
repz
jmp
stc
(bad)
loope
inc
shl
adc
ret
ins
repnz
cmp
bound
retf
jns
sub
adc
add
jg
pop
xchg
pop
pop
push
out
shl
cmc
test
mov
or
jns
hlt
pop
inc
or
outs
add
or
sub
test
scas
jbe
adc
cmp
inc
mov
scas
inc
add
add
xor
push
int
jp
mov
in
dec
add
stc
xor
sub
jne
(bad)
js
jb
inc
xchg
or
xor
mov
mov
cmp
push
ins
test
daa
ja
fdivr
push
nop
sub
cmp
sub
ins
loopne
outs
daa
mov
and
mov
pop
retf
add
in
xor
in
inc
repnz
add
retf
adc
sahf
sub
mov
mov
push
push
daa
ja
aad
shr
loop
cmp
dec
inc
test
out
xor
jmp
sbb
jns
xor
daa
sub
cmp
xor
comiss
sbb
stos
dec
dec
mov
push
aaa
out
push
in
and
scas
inc
pushf
daa
and
int
push
push
sub
je
or
sbb
dec
cmp
das
sbb
sbb
(bad)
scas
add
scas
push
mov
and
lods
mov
aas
cmp
and
rcl
outs
addr16
fld
pop
dec
cmps
aam
xor
(bad)
mov
push
andnps
pop
xchg
rcl
sbb
retf
test
sub
pop
inc
mov
cmp
repz
sahf
pop
mov
dec
loope
pop
mov
ret
cmp
scas
ficom
pop
jbe
lods
dec
ds
(bad)
mov
ds
cmpxchg
frstor
outs
or
sti
xor
ret
inc
sbb
mov
jecxz
mov
dec
xchg
adc
cmp
hlt
aaa
popa
loope
push
rol
(bad)
and
mov
xchg
aad
push
test
jae
mov
ins
cwde
jno
pusha
sahf
aam
sbb
ret
ins
jle
inc
ror
dec
cmp
dec
push
xchg
lock
mov
repnz
lahf
jb
clc
movs
xor
pop
adc
ror
in
adc
hlt
ret
js
das
push
pop
test
ss
out
ret
repz
jmp
pusha
push
adc
mov
rcl
mov
outs
icebp
cmps
xchg
xchg
cs
push
fld
stc
push
imul
rcr
add
jl
out
fisubr
xor
xchg
xchg
outs
movs
aam
aaa
inc
xchg
and
add
jnp
(bad)
push
xchg
in
lea
push
loope
and
sbb
xchg
sbb
xchg
mov
push
test
xlat
inc
pop
in
call
mov
xchg
cmps
arpl
xchg
jl
or
fstp
jecxz
pop
ret
inc
mov
mov
mov
mov
ins
test
cmp
and
mov
cmp
dec
loop
mov
adc
dec
mov
out
ss
push
fwait
xor
dec
lds
mov
imul
in
add
in
rcr
test
dec
leave
retf
cmp
xchg
and
sbb
sbb
por
jmp
repz
cli
xor
mov
inc
sub
mov
mov
cld
nop
sbb
dec
or
dec
xchg
pop
and
inc
push
xchg
retf
xchg
push
cwde
ins
retf
and
jle
test
js
call
das
iret
mul
adc
xlat
lock
mov
(bad)
mov
mov
mov
aaa
movs
inc
jo
add
pop
xor
xchg
xchg
lods
mov
cmps
fadd
inc
mov
xor
repz
loope
pop
push
sbb
cld
jmp
into
psubw
cmps
gs
das
inc
jb
jg
adc
mov
scas
ins
(bad)
sub
jns
xor
or
push
ret
jae
dec
mov
int
cmp
retf
imul
mov
xlat
mov
enter
xchg
fs
dec
sub
add
pop
or
std
cli
dec
es
lods
mul
mov
in
xorps
mov
xchg
ds
jle
out
cs
mov
mov
enter
lock
mov
xor
jmp
and
mov
mov
iret
sbb
xchg
xchg
mov
int
mov
mov
jp
adc
enter
push
jl
das
add
sub
aam
ins
cmp
popa
mov
iret
sbb
in
cmp
xchg
rcl
mov
add
scas
xor
mov
dec
sbb
xchg
inc
je
shl
int3
push
fistp
sar
aaa
fldcw
jle
gs
dec
or
jp
rcl
push
pop
test
icebp
int
sub
lds
xchg
clc
ins
rcr
pop
shl
mov
inc
jnp
lds
popa
inc
mov
(bad)
imul
add
fcmove
jbe
cwde
and
mov
loop
adc
inc
jb
jo
add
inc
test
(bad)
test
and
ja
sti
cld
fdivr
pop
or
cmp
inc
dec
int
xchg
fdivr
std
xor
pop
mov
dec
shl
xor
mov
hlt
gs
cdq
mov
mov
mov
and
out
push
cmp
fs
xor
xchg
das
popf
lea
retf
fcmovb
add
scas
das
add
movs
push
movs
jp
aas
mov
jae
loopne
into
and
jbe
or
sub
test
aad
pop
add
repz
imul
jge
rol
add
(bad)
mov
popa
repz
cld
in
xor
ins
mov
mov
(bad)
jo
int
outs
mov
ins
xor
inc
or
jns
(bad)
not
adc
fld1
push
cli
xor
rcr
pop
pushf
in
or
movs
jecxz
push
pop
cdq
ror
fwait
movs
or
outs
in
cmps
sbb
cmp
push
outs
mov
inc
jo
loopne
or
mov
cdq
cmps
mov
fsubr
fwait
sbb
popa
push
xor
sbb
mov
movs
ins
ins
js
jne
pop
mov
sahf
(bad)
pop
ret
es
sti
push
(bad)
inc
icebp
mov
in
pushf
mov
xor
mov
sahf
pop
xchg
add
push
jno
icebp
addr16
scas
inc
aam
retf
dec
rcr
adc
call
test
pop
in
std
rcr
and
cmp
(bad)
add
int3
and
imul
(bad)
push
mov
std
add
add
xchg
add
fwait
icebp
or
in
xchg
adc
lock
clc
test
jo
sar
push
push
movs
sahf
xchg
dec
jno
sbb
aad
inc
je
out
add
sbb
jno
and
ins
or
cmp
call
cmp
mov
lods
outs
lock
and
out
jae
retf
dec
out
aas
(bad)
mov
imul
ret
mov
ret
mov
jecxz
fidiv
push
(bad)
call
cmps
xchg
mov
pop
push
data16
add
jecxz
push
add
ret
mov
(bad)
outs
cwd
sbb
mov
mov
and
push
loope
out
lods
int3
sub
inc
xchg
shr
cs
fs
dec
ins
jnp
test
inc
and
push
loope
dec
jnp
mov
push
xchg
xchg
jecxz
jmp
xchg
out
adc
or
popf
jecxz
mov
fs
test
dec
rcl
sub
hlt
or
out
arpl
and
mov
jl
adc
mov
loope
pop
push
test
add
xchg
enter
and
inc
jecxz
push
push
lods
sar
pop
ds
cmps
aad
add
jmp
pushf
push
fcomp
xor
inc
in
adc
retf
cld
lock
in
stos
push
mov
sbb
mov
hlt
inc
pop
test
mov
cdq
sbb
jge
dec
stos
inc
out
mov
lds
(bad)
std
mov
ror
rol
pop
sahf
pop
and
mov
ret
inc
fidivr
or
repnz
call
xchg
hlt
test
add
sbb
fbstp
lods
sbb
out
xchg
sbb
aas
rcr
out
arpl
cmps
cli
mov
in
add
fidiv
out
or
sbb
cld
or
push
addr16
mov
jecxz
pop
idiv
or
ret
repnz
repnz
js
ins
inc
fisub
es
test
xchg
and
lods
mov
push
in
or
scas
cmps
push
fs
sbb
mov
or
iret
aad
out
and
jnp
and
pop
and
popf
imul
pop
cmps
xchg
or
sbb
mov
push
pop
inc
push
add
shl
ret
popa
rol
or
sbb
sahf
adc
cld
fmul
adc
jp
jbe
movs
mov
mov
stos
dec
add
and
push
sbb
mov
or
stos
mov
mov
pop
jbe
scas
jmp
inc
push
cmps
pop
jl
bound
adc
retf
xor
and
mov
inc
add
addr16
sub
fld
xchg
ds
mov
imul
sbb
lock
movs
inc
push
push
test
mul
jge
movs
mov
jmp
lahf
(bad)
pop
mov
enter
mov
sbb
frstor
pushf
pop
dec
(bad)
in
jmp
cli
and
movs
mov
(bad)
fnstcw
mov
in
fistp
xchg
ret
cdq
mov
repnz
fcmovnu
js
out
jecxz
and
and
rcr
movs
inc
mov
stc
outs
sub
pop
dec
cld
ss
(bad)
xor
in
inc
out
(bad)
outs
sub
(bad)
sbb
or
jge
or
cdq
and
push
xor
sub
sub
sub
fisubr
cmc
repz
hlt
loop
(bad)
push
jns
in
xchg
imul
loop
add
cmp
mov
and
add
mov
popf
jno
and
jmp
cmps
scas
popa
js
sub
push
ret
ror
xchg
push
mov
jo
lock
stos
enter
sbb
sbb
cmp
jb
(bad)
xor
cmp
pusha
rcr
push
cmp
add
dec
sbb
sahf
cs
mov
fist
push
xchg
(bad)
sbb
jl
out
int3
(bad)
mov
sbb
xor
fisubr
aas
add
jae
cmps
scas
(bad)
ins
push
sahf
inc
mov
rcr
scas
test
sub
ins
fwait
dec
add
addr16
pop
dec
sbb
mov
mov
xchg
pop
push
pop
dec
scas
mov
cwde
clc
pop
nop
cmp
out
shl
repz
adc
(bad)
rcr
repnz
lods
inc
scas
push
mov
xor
add
xchg
and
ins
jb
push
out
mov
inc
xchg
inc
push
or
pop
cmps
or
xor
out
aam
into
lahf
aam
pop
hlt
adc
outs
push
or
jp
ret
daa
ds
jnp
xchg
inc
push
inc
sti
cwde
pop
xchg
out
add
in
cwde
mov
pop
pop
push
(bad)
fdiv
ds
mov
in
arpl
xchg
les
push
in
test
test
aas
sbb
push
pop
leave
aaa
cwde
mov
mov
mov
xor
shl
cmps
push
mov
cs
mov
popa
ficom
aaa
fadd
pop
push
ss
dec
imul
push
cld
mov
out
jb
mov
daa
(bad)
movs
push
jge
iret
movs
mov
sub
push
push
pusha
jne
lds
mov
push
jmp
cs
jns
inc
mov
xchg
fld
loope
sbb
add
mov
out
cdq
xlat
cld
xchg
stos
data16
push
call
xchg
dec
sbb
adc
and
repnz
or
or
ret
lock
jmp
jp
push
xor
inc
add
test
cwde
iret
repnz
shr
scas
sub
or
sar
icebp
popa
icebp
lods
xor
xor
push
punpckhwd
pop
ja
pop
out
mov
mov
push
mov
dec
fnstcw
mov
cmps
add
(bad)
mul
cli
and
hlt
and
mov
shl
aaa
(bad)
mov
test
into
mov
adc
pop
mov
sbb
sub
mov
mov
jg
ror
jmp
adc
ja
fisttp
shl
jl
daa
aad
shr
dec
or
test
test
adc
inc
imul
sbb
push
fisubr
cld
jl
mov
movs
sub
push
adc
xchg
pop
or
mov
inc
fld
inc
or
sub
ja
fadd
aaa
pop
xor
jmp
mov
push
adc
aaa
cmp
or
jp
into
add
je
cld
sahf
stos
or
mov
push
xchg
retf
test
adc
cmp
inc
mov
xchg
or
jg
test
push
retf
jmp
test
leave
dec
inc
ins
mov
not
xchg
lods
ret
xchg
sub
adc
inc
stc
push
sub
fiadd
ds
in
push
das
or
mov
cli
fs
inc
mov
(bad)
out
ficom
and
sbb
js
test
test
jecxz
rcr
(bad)
add
pop
xchg
mov
jle
xchg
(bad)
jbe
sbb
rcl
enter
cmps
sbb
inc
sbb
sti
xchg
in
xchg
xor
in
pop
outs
dec
mov
add
fucomp
rol
ja
in
clc
and
mov
daa
movs
mov
push
xlat
in
sar
out
xor
int3
cmps
nop
rol
xchg
aas
jno
shl
and
scas
addr16
mov
scas
mov
movs
pop
adc
cdq
daa
cmp
xchg
mov
das
(bad)
ss
and
push
adc
mov
(bad)
stc
mov
outs
(bad)
xchg
dec
mov
iret
fisub
xor
call
mov
lods
bswap
scas
push
fistp
inc
fst
mov
adc
push
cmp
in
loop
push
xchg
leave
inc
mov
inc
cmp
(bad)
(bad)
shl
ret
cs
pop
out
jb
cmps
lods
sub
xchg
and
or
mov
lock
or
lods
enter
nop
pop
fidiv
fistp
cld
popf
sbb
jge
addr16
rcl
adc
(bad)
cmps
xchg
or
and
push
in
jge
or
in
sub
lock
inc
xchg
jno
stos
jo
test
cld
cmps
mov
fdiv
dec
dec
dec
ins
jnp
iret
mov
jae
push
xchg
jbe
push
push
xor
leave
xchg
cmc
cwde
test
push
push
jle
sub
sub
outs
mov
adc
adc
mov
mov
addr16
xor
fnstenv
sub
or
jecxz
call
xchg
(bad)
lea
ins
scas
jo
add
xchg
pop
fcomp
out
jmp
fistp
push
xchg
arpl
clc
cmp
jg
enter
inc
push
xchg
jns
mov
mov
pop
cmp
or
inc
cmp
jecxz
mov
mov
repnz
pop
aam
inc
xor
cwde
out
retf
dec
adc
leave
pop
lahf
mov
mov
sub
cmps
scas
call
das
cmp
pushf
adc
mov
stos
xor
pop
inc
dec
xor
jge
add
adc
cmp
out
cmp
out
jbe
inc
movs
jmp
inc
xchg
or
pop
mov
int
sbb
dec
mov
inc
add
cmp
shr
lods
push
gs
daa
adc
jno
popa
call
les
test
arpl
aaa
clc
rep
mov
cmps
pop
movs
popa
pop
adc
shr
jae
jno
outs
je
jmp
in
into
push
std
outs
fimul
in
mov
jg
call
cmp
xchg
retf
mov
dec
xor
fcom
jno
fiadd
inc
jp
pop
test
das
xor
or
and
push
js
mov
jecxz
aas
in
and
xchg
push
sub
stos
pop
cdq
outs
nop
cmp
inc
sub
inc
pop
dec
shl
add
sub
push
fmul
xchg
and
neg
add
sbb
add
push
push
sbb
lds
ins
dec
jno
push
sub
outs
mov
and
mov
loope
xchg
sub
pop
adc
cmps
jo
xor
lock
jb
mov
ret
dec
cmps
mov
cld
out
iret
outs
jle
adc
mov
(bad)
clc
pop
es
jecxz
mov
jnp
push
push
fsub
or
jle
jle
sbb
push
cmp
xchg
pop
jg
repnz
jmp
loope
inc
cwde
push
push
movs
das
mov
int
mov
push
fs
mov
icebp
inc
lock
enter
and
out
retf
jp
cmp
fcmovbe
fnstcw
fwait
sub
jle
cwde
leave
jne
cmps
movs
mov
xor
sar
scas
cmc
out
(bad)
(bad)
fimul
(bad)
sub
test
fcomp
jecxz
add
test
imul
jmp
aaa
sbb
adc
jbe
in
loop
adc
ds
adc
pop
out
enter
ret
(bad)
push
test
out
fcmovne
xchg
xor
xor
das
jnp
pop
push
push
loopne
pop
inc
mov
mov
fld
and
push
pop
xchg
mov
pusha
retf
popf
xchg
mov
mov
push
dec
xlat
jl
pushf
xor
cmp
shl
adc
xor
aad
outs
fsubr
outs
(bad)
cwde
test
ds
mov
jecxz
cmp
jle
sub
iret
lds
gs
aaa
test
push
rcr
(bad)
dec
xor
test
mov
jmp
repnz
xchg
ds
jo
cwde
sbb
shl
add
sbb
dec
aam
mov
lea
add
mov
int
inc
sahf
arpl
fiadd
xor
out
mov
out
pop
icebp
cli
aad
icebp
popa
lahf
cli
dec
leave
dec
mov
xlat
push
or
push
enter
mov
cmc
aam
push
lock
mov
and
int3
ret
repnz
push
ret
retf
ror
jecxz
xor
mov
xor
push
pop
xchg
cmp
inc
loope
(bad)
pop
fwait
xchg
xlat
add
in
xchg
mov
mov
jb
push
in
mov
lea
test
cmps
xor
ins
cmp
mov
enter
add
push
(bad)
icebp
dec
jle
pop
das
and
cmps
lds
gs
jno
js
sbb
js
cmp
adc
pop
call
jbe
(bad)
cmp
ins
retf
jl
push
iret
jmp
dec
out
outs
cmc
js
(bad)
(bad)
inc
(bad)
ret
cld
repz
shl
cmpxchg
push
daa
mov
test
out
xchg
add
movs
lods
test
dec
fs
pusha
sub
je
and
push
ret
mov
shl
out
dec
lods
pushf
stos
jnp
pop
mov
push
inc
popa
fimul
cli
callw
push
adc
cmc
int3
test
jl
inc
mov
loope
aam
or
xor
push
cmps
bnd
sub
loop
fstp
test
lods
add
push
inc
in
inc
aam
pop
hlt
cld
jns
dec
and
cld
scas
and
mov
das
pop
or
push
mov
pop
icebp
int
iret
call
in
fdivr
dec
outs
fistp
jmp
outs
arpl
in
and
xchg
cmp
push
popa
cmc
lahf
(bad)
jo
lods
nop
movs
mov
les
rcl
push
arpl
mov
mov
rcr
sbb
out
jbe
adc
stos
adc
lock
sub
outs
xor
sbb
and
dec
sub
cld
call
cwde
shl
add
scas
stos
pop
out
mov
xchg
push
push
push
(bad)
xor
div
sbb
pop
sub
enter
xchg
dec
mov
push
mov
pop
ja
pop
and
fnstcw
pop
add
loop
mov
test
ins
mov
loop
fwait
stos
cli
mov
inc
inc
dec
mov
xchg
push
ins
adc
sti
into
jno
jg
retf
xor
mov
movs
js
dec
stos
sbb
out
lea
leave
sbb
xchg
dec
ret
jns
push
clc
mov
xchg
jle
cmp
or
push
ins
cmp
mov
mov
sti
sub
jbe
out
sub
ins
call
or
inc
xor
sbb
and
loopne
div
idiv
sub
cwde
scas
lods
loop
rcl
sbb
cld
adc
inc
inc
mov
pop
fsubp
imul
sar
add
inc
call
mov
mov
push
push
mov
cmp
ins
jnp
movs
dec
fist
or
aas
in
sbb
daa
jl
ficom
pop
dec
adc
mov
stc
mov
cmps
out
mov
cli
(bad)
sbb
mov
cmc
mov
cmp
gs
xlat
out
or
pop
jnp
cmp
push
add
push
pop
test
clc
fisttp
or
imul
xor
mov
stc
adc
dec
(bad)
int
xor
cmp
mov
jl
inc
iret
stos
ds
mov
push
pop
sbb
push
and
fcmovnu
sbb
div
out
loop
push
mov
push
fdiv
xchg
push
jnp
xlat
ret
aam
fwait
lahf
dec
pop
push
ja
inc
or
jmp
sub
mov
aas
cmp
ret
and
enter
out
cli
loop
mov
cmps
xlat
dec
fadd
in
mov
les
ins
mov
ror
adc
and
pop
push
imul
mov
inc
inc
sub
push
sub
mov
push
inc
mov
(bad)
int3
push
ins
iret
pop
fadd
clc
add
inc
imul
(bad)
or
dec
mov
dec
(bad)
(bad)
imul
xchg
jnp
into
std
or
sar
sub
sub
mov
int3
mov
xlat
int3
repz
(bad)
ins
push
rol
and
out
mov
cmps
push
and
hlt
add
or
dec
xchg
aam
stc
jge
loopne
push
(bad)
fld
push
push
loopne
dec
pop
iret
dec
pop
add
xchg
pusha
clc
and
xchg
pop
(bad)
adc
test
adc
and
dec
outs
pmuludq
push
adc
cmps
add
inc
pop
jb
sub
ficomp
push
jmp
adc
fincstp
pop
cmp
arpl
push
push
add
shr
xor
ret
mov
cli
xor
xchg
jmp
es
add
les
jo
adc
jns
and
cmc
test
push
xchg
jmp
fnstcw
xor
fcmovnu
iret
scas
jp
dec
pop
inc
push
outs
loopne
pop
jp
pop
sub
adc
pop
adc
je
jp
cwde
pop
scas
fidivr
xchg
ficom
(bad)
pushf
mov
and
aaa
inc
test
sub
push
sub
or
adc
mov
dec
pop
(bad)
xchg
sbb
gs
addps
mov
mov
js
jnp
sub
lods
dec
(bad)
sar
inc
dec
dec
stc
xchg
es
or
test
imul
push
xor
push
or
mov
cmp
xchg
add
lods
out
ds
repz
mov
inc
sti
aaa
pusha
mov
sbb
lods
shl
jns
add
add
mov
mov
test
cli
lds
lds
jne
shl
out
call
test
retf
and
stc
add
mov
fs
test
rcl
pop
pop
jle
sub
mov
mov
dec
test
loope
jl
daa
cmps
hlt
sbb
adc
fisubr
dec
ror
sbb
and
in
and
cmp
iret
out
cmp
adc
loopne
mov
mov
imul
hlt
rcr
in
and
shl
push
mov
and
into
std
cli
sbb
adc
imul
fidivr
dec
push
test
inc
mov
dec
test
fwait
xor
mov
stos
and
ror
aam
push
lahf
sahf
lock
or
sbb
jmp
push
mov
mov
sub
jl
pop
lock
cs
dec
pop
lds
rcr
mov
out
loopne
scas
imul
pop
sub
aas
jl
gs
fmul
ds
mov
mov
outs
(bad)
ror
movs
mov
or
dec
mov
stos
cwde
mov
dec
sti
jo
rcl
lds
and
jae
sub
mov
pop
cs
cld
pop
arpl
fistp
sbb
retf
jle
cld
pushf
and
retf
enter
sub
(bad)
inc
dec
mov
sti
repz
pop
mov
jmp
fstp
xor
and
cmp
cmp
inc
cmp
cmp
(bad)
jne
dec
(bad)
pop
and
arpl
mov
xlat
mov
popa
mov
xchg
add
mov
ror
push
pop
push
daa
fwait
jbe
(bad)
and
or
pop
leave
push
inc
loope
jg
or
out
pop
pop
or
pop
cmp
xor
pop
fnsave
inc
xchg
stos
xchg
mov
jnp
mov
rcr
cwde
mov
push
jae
or
aad
or
and
or
dec
push
test
ins
pop
push
jg
adc
inc
dec
pop
int
xchg
mov
cld
adc
add
(bad)
in
dec
outs
aam
dec
enter
scas
shr
jmp
mov
sub
fisubr
push
push
(bad)
adc
adc
jp
jae
lods
test
pop
adc
mov
nop
lock
pusha
std
sub
sbb
scas
mov
mov
fwait
xor
pop
(bad)
cdq
retf
sbb
cmc
or
das
imul
mov
sbb
mov
fsub
sbb
enter
out
mov
adc
xchg
bound
cmps
out
loope
or
shl
fwait
bound
std
jmp
and
dec
sub
xor
cmp
inc
pop
dec
stos
dec
or
bound
xchg
test
outs
add
mov
xlat
out
ja
or
sbb
cmp
or
push
rcl
or
lea
fadd
cmp
les
mov
sbb
iret
mov
mov
and
repnz
fisub
mov
sub
pop
ficomp
enter
out
xchg
mov
xchg
jnp
push
test
jmp
xor
push
mov
pop
clc
leave
or
push
sub
stos
inc
push
arpl
fwait
sar
xchg
push
in
push
or
or
outs
out
aam
mov
xchg
push
sbb
adc
je
sub
lods
ret
cs
jg
sub
sbb
mov
stos
loopne
xlat
sbb
popf
sbb
push
outs
adc
dec
or
cmp
cmps
js
mov
pop
pop
ins
pusha
imul
add
int
pushf
inc
sbb
ins
add
in
fcomp
out
in
xchg
pop
pushf
dec
pop
pop
sub
jae
ret
rcl
cdq
inc
cdq
adc
call
or
sbb
out
dec
(bad)
ins
sub
dec
mov
push
xor
mov
cli
loopne
ficomp
xchg
sahf
popa
std
loop
sbb
std
sub
dec
pop
cmp
std
pusha
push
mov
nop
dec
out
jb
inc
adc
dec
adc
mov
lods
xchg
push
mov
data16
dec
mov
arpl
loop
jg
cmp
push
ror
hlt
mov
sub
aaa
mov
sti
add
mov
arpl
icebp
es
add
mov
leave
imul
push
fistp
outs
inc
add
loope
push
ret
xor
adc
es
movs
push
mov
cld
cdq
sti
pop
cwde
cwde
popf
mov
adc
xor
inc
jno
pop
out
fucomp
mov
mov
dec
cmps
scas
and
aaa
aam
xchg
popf
mov
(bad)
sbb
xchg
mul
ficom
cdq
adc
add
enter
das
pop
sbb
cmp
cli
and
mov
rol
xor
sbb
sbb
inc
sti
add
es
call
push
(bad)
push
in
cmp
cmp
in
jg
das
ror
mov
in
cmps
pop
sub
jmp
sub
pop
call
xchg
push
jmp
aas
push
jmp
sub
sub
nop
or
aad
sti
ss
or
inc
lock
call
rol
in
clc
push
and
add
movs
sti
sbb
dec
in
jp
shl
mov
test
push
or
or
or
call
cmps
cmp
mov
cwde
ins
xchg
pushf
leave
bound
xor
pop
fst
xchg
adc
sbb
rcr
aas
jno
push
adc
jl
(bad)
mov
fist
imul
out
fcom
aam
adc
jle
adc
push
xor
dec
scas
xor
out
add
or
lock
mov
jmp
cdq
in
or
xor
or
lds
cld
fild
sub
pushf
frstor
mov
pusha
int3
ds
inc
jmp
sub
jle
mov
jbe
mov
hlt
ds
push
pop
out
sub
lods
dec
test
sahf
(bad)
icebp
daa
push
outs
lea
jmp
loope
pushf
xchg
ja
fnstcw
pop
inc
pop
test
adc
and
push
cdq
fbld
jno
push
push
lods
fldenv
xor
jae
fisub
lea
shl
outs
arpl
dec
test
xor
lahf
push
cmp
adc
dec
popf
cmp
stc
rol
mov
jecxz
sub
mov
fcom
sub
lds
xor
out
mov
xor
mov
ret
call
add
jae
(bad)
xor
nop
js
rol
jp
push
pop
xchg
aam
neg
inc
sub
push
jo
clc
xor
scas
in
sub
dec
mov
adc
mov
xchg
xadd
push
xchg
fwait
adc
icebp
add
pusha
call
mov
dec
fcmovnb
mov
jmp
pop
mov
add
push
cmp
pop
pop
pop
dec
mov
mov
cmps
das
les
pop
pop
pop
ds
mov
out
sbb
sti
out
pusha
sar
out
xor
es
xchg
retf
ds
xchg
and
pop
mov
daa
pop
js
ret
(bad)
rol
xchg
daa
leave
push
or
and
xor
ins
call
cmps
aaa
out
scas
mov
mov
mov
repnz
cs
scas
test
jl
sbb
or
les
push
jecxz
push
nop
rol
and
daa
jnp
push
jae
cmp
leave
pop
cmp
test
loope
loop
out
dec
sub
das
push
xor
out
rcl
sub
push
leave
shr
inc
mov
or
or
sbb
inc
xor
pusha
shl
mov
cmps
xchg
subps
std
mov
enter
(bad)
mov
in
retf
jb
ret
(bad)
aam
ds
xchg
and
sbb
int3
mov
push
mov
xor
rcl
add
and
sti
das
shl
inc
add
lock
jl
fld
test
and
pop
sbb
add
clc
(bad)
and
mov
test
das
nop
fmul
pop
int
dec
les
fimul
jp
sbb
inc
pop
retf
ins
aas
or
cmp
mov
lahf
ror
aad
inc
cmp
call
push
call
aad
repnz
and
inc
sahf
in
add
sub
push
sbb
mov
xor
(bad)
push
xor
push
mov
loop
lock
in
mov
lea
addr16
push
xchg
out
xor
sbb
push
mov
jl
popa
mov
mov
cmp
push
stos
pop
mov
pop
jle
pop
ins
mov
dec
inc
in
lock
pop
pop
push
push
dec
mov
pop
mov
sub
in
(bad)
data16
(bad)
retf
in
sbb
jge
retf
sahf
cmc
int
push
fbld
std
xchg
mov
repnz
push
adc
xchg
and
mov
sbb
aam
lock
rcl
js
jne
ins
pop
inc
imul
nop
pop
js
popf
xchg
pop
stc
or
mov
and
dec
out
aas
xchg
(bad)
jns
fcomp
push
aas
clc
retf
and
sub
sbb
cmps
outs
xchg
jnp
cdq
addr16
(bad)
out
int3
(bad)
(bad)
loop
add
cmp
(bad)
cmc
xor
push
test
lods
cld
jle
inc
lahf
popa
cwde
stos
out
mov
and
shl
push
adc
ja
push
xor
push
sub
mov
fwait
inc
sbb
ja
movs
cmp
sbb
sbb
add
(bad)
cmc
(bad)
mov
out
cmp
jmp
gs
out
inc
(bad)
loope
push
aad
test
sbb
jnp
test
cmp
ret
stos
or
and
jno
sub
cli
stc
pop
pop
fwait
sbb
in
retf
retf
mov
dec
enter
mov
mov
sub
dec
xchg
xlat
mov
pop
push
adc
scas
test
mov
xchg
dec
nop
leave
push
in
push
push
push
cmps
cmp
xor
dec
and
or
in
mov
std
jmp
mov
adc
mov
fbld
mov
pop
and
push
and
mov
(bad)
fist
in
xchg
xor
(bad)
and
xchg
mov
and
xchg
shr
push
es
cmps
sahf
frstor
dec
stos
mov
adc
aaa
inc
lds
jae
or
pop
jmp
jbe
xchg
icebp
xor
jb
xchg
xlat
xchg
push
mov
sar
xor
bound
jnp
call
push
shl
(bad)
out
push
lods
xchg
xchg
inc
push
jl
test
mov
retf
xor
js
jp
add
adc
popa
and
and
pop
xor
stc
daa
ret
das
cld
lods
cmc
cmp
sbb
pop
daa
pop
xchg
adc
test
mov
es
pop
ds
jo
loope
loope
pop
inc
cld
adc
push
inc
mov
fld
pop
add
and
cmp
xor
sub
mov
xchg
pusha
xor
pop
inc
sbb
int3
push
repnz
adc
int
cmp
lock
popa
das
dec
sbb
movs
xchg
xlat
jecxz
pushf
in
xor
mov
call
pop
sub
fiadd
sahf
cmp
cmp
iret
inc
sub
(bad)
gs
push
xor
sbb
int3
cmp
rcr
sub
loope
dec
add
sbb
sbb
je
push
adc
loopne
sahf
(bad)
xchg
add
ret
pop
fild
push
scas
mov
or
iret
inc
imul
cld
daa
lea
mov
test
xchg
or
pop
inc
lahf
add
sti
pop
mov
adc
arpl
fmul
mov
dec
leave
pop
mov
mov
cld
mov
shl
icebp
mov
movs
xchg
cwde
pop
mov
rcl
inc
pop
sub
cs
loop
sbb
fs
test
mov
adc
aad
add
icebp
pop
ins
shr
fwait
lods
xchg
test
mov
call
and
cwde
xchg
dec
mov
mov
mov
jl
in
xchg
mov
pushf
gs
fnstcw
pop
jo
mov
sbb
jbe
or
jecxz
sar
imul
push
pop
pop
repnz
xchg
or
pop
xchg
or
fisub
pop
cmc
scas
sbb
dec
fwait
mov
cmp
xor
pop
push
jns
sbb
loopne
mov
cmp
rcr
div
cli
and
and
xor
push
nop
or
ins
push
add
das
or
imul
inc
mov
aaa
mov
xchg
popf
int
xor
ja
pop
jae
push
push
enter
mov
imul
jne
and
and
push
mul
loop
into
cmp
ins
xchg
(bad)
movs
add
jecxz
mov
outs
adc
xor
out
mov
outs
dec
adc
(bad)
inc
hlt
loope
ret
push
retf
pop
ret
retf
add
inc
mov
or
add
xchg
mov
jp
in
mov
mov
add
sbb
mov
add
push
mov
xchg
inc
movs
cld
cld
pop
xchg
addr16
mov
and
(bad)
mov
mov
xlat
enter
jbe
shld
push
std
(bad)
adc
das
test
nop
(bad)
fdiv
mov
cmps
push
xor
jl
mov
pop
mov
test
adc
dec
(bad)
push
iret
pop
sub
xor
jp
jmp
inc
mov
push
ror
pushf
cli
mov
mov
pop
pop
mov
xchg
and
or
cmp
xor
jns
pop
repz
adc
rdtsc
mov
imul
jmp
aad
loope
dec
aas
or
jl
pop
bound
or
mov
mov
sbb
call
pop
push
jl
ret
sub
xchg
xor
outs
shl
es
cmp
mov
xor
push
mov
pop
cmp
xchg
popf
daa
jb
shl
mov
mov
add
inc
(bad)
sbb
mov
or
aad
mov
mov
and
push
daa
int
xchg
xchg
ret
ret
sbb
(bad)
pop
push
ret
inc
pop
xor
mov
stos
jne
scas
pop
stos
movs
xor
inc
mov
iret
or
sub
sbb
mov
dec
das
cld
push
aas
jae
jle
jb
dec
fadd
push
mov
not
(bad)
(bad)
mov
sbb
jmp
xor
or
pusha
or
dec
fcom
xor
xlat
js
pop
aad
push
xchg
outs
mov
std
sub
sbb
fiadd
push
imul
mov
jns
in
add
aaa
dec
into
in
inc
mov
inc
cld
fisubr
dec
pop
dec
jnp
jmp
xor
push
mov
jle
and
dec
and
pop
in
xor
jp
(bad)
push
jp
inc
stos
je
ins
inc
stc
pop
jp
jecxz
inc
jg
pop
adc
ds
push
outs
loope
mov
pop
cmp
dec
dec
xchg
cmc
inc
sub
jae
adc
sub
dec
push
push
xchg
stos
leave
outs
adc
aad
jge
add
jg
cmp
adc
sbb
out
in
aad
(bad)
les
es
icebp
jmp
cmp
hlt
fld
pop
cmp
cmp
jb
cmp
mov
xchg
adc
jge
lea
(bad)
and
ins
iret
neg
mov
lock
mov
cwde
or
into
pop
gs
repnz
fadd
xchg
test
in
or
xor
iret
ret
dec
pop
and
ss
cli
fidiv
push
(bad)
xlat
jno
fisub
ds
mov
push
push
repz
jb
data16
pop
mov
and
cmp
mov
sbb
jecxz
clc
and
sub
call
fidiv
jp
mov
push
xchg
in
and
scas
std
movs
stos
push
test
cmp
in
and
clc
cdq
sahf
cld
leave
cmp
jns
stos
mov
push
mov
or
mov
neg
and
jle
xchg
shl
in
or
lds
arpl
adc
mov
adc
jl
je
call
mov
and
mov
les
mov
iret
mov
jp
vdivps
dec
imul
call
neg
and
sub
dec
rcr
das
inc
loopne
pushf
leave
and
add
aas
cmp
sbb
push
cmps
inc
or
ret
adc
add
rcr
div
outs
in
adc
dec
stc
pusha
mov
inc
pop
faddp
stos
xchg
fcomp
(bad)
in
repz
jae
mov
out
idiv
adc
out
sahf
sub
leave
dec
out
add
inc
add
jbe
gs
xchg
rcl
jge
ja
mov
call
lods
sahf
mov
xchg
cmp
push
test
daa
(bad)
out
dec
cmp
inc
cmp
push
xor
xchg
(bad)
mov
and
add
test
cmp
ret
fimul
xchg
xor
adc
stos
xchg
mov
enter
or
mov
sub
sub
jae
jb
(bad)
call
fs
sbb
sbb
in
cli
inc
xlat
jo
out
jnp
mov
inc
in
stc
(bad)
push
push
test
ret
mov
and
cmps
ret
inc
lods
popf
pop
cmps
add
dec
fiadd
lods
pop
xor
jae
pop
pop
test
popa
sbb
sbb
sar
and
push
mov
out
cmp
mov
cmps
add
jno
fild
scas
in
out
cli
std
or
pop
jge
cli
stos
enter
sbb
jbe
mov
int
cmps
stc
and
dec
sub
jecxz
pop
scas
jecxz
push
inc
push
cmps
leave
inc
mov
fldcw
push
repz
(bad)
cmp
imul
aad
add
cmps
push
cmc
push
aad
mov
dec
mov
lods
addr16
xchg
jo
call
cmps
shl
push
xchg
xor
dec
mov
scas
push
mov
inc
ficom
dec
cwde
inc
(bad)
dec
mov
mov
mov
push
mov
mov
push
jecxz
mov
sub
clc
shl
fisub
neg
aaa
jge
lea
std
out
add
ins
(bad)
aam
ds
jno
xchg
adc
dec
mov
fsubr
jecxz
mov
inc
jmp
btr
add
jp
stos
psllw
je
add
adc
test
retf
outs
and
inc
outs
push
add
add
and
jae
fld
adc
sbb
ds
push
fsincos
mul
icebp
nop
or
cmp
and
out
mov
retf
sbb
cwde
idiv
pusha
cli
out
sbb
es
test
or
sub
inc
popf
mov
frstor
arpl
mul
or
stos
mov
jns
jmp
inc
sub
pop
xchg
(bad)
(bad)
clc
add
test
sub
out
adc
xor
ror
cmps
aaa
jle
and
cld
in
in
sub
xchg
dec
cmp
cmps
pop
pop
fnstcw
pushf
test
test
add
or
cdq
mov
ins
data16
sti
mov
add
(bad)
icebp
jne
int
sbb
das
test
enter
inc
pusha
jno
lods
push
aas
mov
popf
pop
mov
xchg
mov
pop
mov
rol
sub
or
int3
dec
dec
mov
daa
sti
cwde
sub
sbb
add
jno
mov
outs
xlat
cmp
pop
imul
(bad)
ds
push
adc
hlt
fist
cmc
pop
inc
sub
adc
push
cmp
lds
imul
sub
mov
clc
sub
sub
lds
inc
inc
adc
xchg
test
ja
xchg
shl
dec
sub
lahf
cmp
cwde
xchg
stc
or
enter
jae
jae
jmp
push
jnp
leave
data16
adc
and
inc
sub
push
xor
scas
jl
lods
ret
adc
test
clc
rcl
scas
ds
(bad)
pop
ss
shr
lock
(bad)
cmp
jl
test
icebp
jle
por
movs
jmp
inc
mov
xor
dec
fisttp
fisttp
and
adc
push
inc
outs
jnp
adc
aas
test
cmp
ins
xchg
mov
or
fnstcw
mov
or
nop
loop
and
and
fstp
xchg
xchg
test
loopne
fstp
leave
into
sbb
cmps
fild
ror
lds
rcl
inc
stos
pop
cmp
mov
cmc
shr
iret
cmps
retf
jno
pop
jbe
div
push
shr
les
mov
mov
jle
pop
js
lock
sar
repz
stos
test
cs
or
loope
xlat
lock
cli
inc
lods
fdivr
mov
adc
das
dec
scas
mov
aam
inc
pop
ss
sbb
mov
enter
leave
fcomp
lock
call
push
sti
inc
iret
cli
pushf
jb
pusha
jp
xchg
adc
xor
inc
in
xor
out
pop
dec
sub
out
and
xor
std
dec
es
adc
loope
idiv
test
inc
jle
imul
scas
loop
lods
jl
je
jl
ds
mov
imul
push
add
cmp
pop
mov
xchg
or
pop
mov
dec
or
repz
aaa
fmul
(bad)
jge
fwait
vpaddusw
imul
ins
out
leave
ds
rol
aam
loop
ins
pop
stos
mov
pop
cmp
std
(bad)
xor
jp
pushf
dec
je
sbb
scas
aaa
test
mov
sar
(bad)
or
inc
mov
cmp
mov
adc
pop
mov
jmp
inc
idiv
fistp
rcl
(bad)
test
mov
sbb
jecxz
jo
mov
mov
lock
inc
jg
fild
nop
inc
shl
and
push
mov
fld
sub
aaa
mov
xlat
mov
jo
pcmpeqw
or
imul
jg
sbb
push
test
popf
xor
and
ret
popa
int
nop
leave
fadd
adc
(bad)
mov
xchg
sub
shr
or
mov
popf
and
cs
loope
gs
jecxz
test
daa
scas
jge
stos
fs
hlt
xchg
(bad)
push
mov
or
bound
or
jle
jnp
retf
(bad)
add
push
hlt
sar
adc
and
(bad)
or
scas
pop
adc
cdq
jmp
(bad)
jmp
loope
loopne
gs
cmc
aaa
cs
pop
or
pop
sub
sub
xchg
or
jne
inc
retf
lock
cmp
and
jnp
in
sbb
inc
sti
(bad)
jge
je
ret
lea
mov
mov
xchg
inc
push
movs
rcr
jmp
arpl
es
mov
push
scas
out
rcr
cs
mov
retf
stos
hlt
ficom
pushf
mov
and
adc
inc
adc
ss
ja
or
or
pop
pushf
clc
or
pop
dec
into
hlt
xor
(bad)
sbb
mov
adc
out
retf
fist
or
inc
mov
push
fwait
mov
cld
push
test
push
in
mov
add
inc
call
(bad)
pop
lods
mov
dec
arpl
(bad)
int
(bad)
cld
inc
(bad)
in
adc
and
arpl
callw
sub
inc
and
test
call
jns
inc
ins
pop
outs
int
aaa
dec
fld
iret
jecxz
jne
pop
fstp
pushf
xor
sub
add
cmc
push
repnz
(bad)
adc
jb
out
daa
call
retf
pop
movs
push
shr
jno
and
mov
push
xchg
cs
das
jle
mov
or
stc
mov
and
fnsave
cdq
add
xchg
sti
popf
icebp
cmp
cmp
sbb
push
aaa
mov
pop
out
adc
jne
aad
ins
add
lahf
dec
mov
imul
mov
imul
sbb
lods
or
sbb
xor
push
sub
not
fild
es
jb
shl
outs
shl
aas
sub
frstor
sbb
push
cs
and
adc
dec
leave
(bad)
bound
fcom
mov
mov
and
out
add
nop
fdiv
fisttp
sub
and
push
add
adc
aas
das
ret
inc
in
std
and
arpl
sahf
retf
shl
inc
imul
test
pusha
fadd
out
dec
cs
mov
imul
je
movs
xchg
repnz
mov
jl
call
sbb
or
jo
cmps
inc
test
and
cmp
pop
movs
addr16
(bad)
mov
inc
das
jb
outs
dec
push
mov
dec
fsubr
inc
lock
hlt
fwait
cli
lock
js
jp
int3
es
ins
xor
adc
lea
lods
mov
pop
xchg
adc
add
pop
xchg
stos
add
adc
mov
mov
cmps
scas
add
jb
mov
stos
xchg
add
mov
mov
icebp
sbb
(bad)
pusha
pop
add
inc
push
mov
jmp
outs
jg
ffree
mov
push
jmp
inc
call
mov
retf
cmc
jg
mov
push
add
mov
pushf
or
push
pop
cmp
jo
xchg
lea
add
and
int3
mov
pop
aad
push
and
jnp
inc
std
das
iret
repz
je
loope
int3
add
add
jp
and
ror
xchg
pop
xchg
xchg
stc
jnp
retf
jns
xor
je
aas
lods
rol
in
es
(bad)
hlt
xchg
loopne
push
(bad)
stos
fcmovbe
aas
aaa
inc
into
mov
mov
sbb
gs
add
mov
test
push
popa
cdq
adc
pop
and
not
xor
out
int
lea
push
hlt
cwde
jle
popf
rcr
dec
or
movs
stos
(bad)
jge
movs
mov
sbb
dec
jmp
dec
test
cs
push
shr
add
sbb
scas
fwait
std
fdivr
out
inc
xchg
cdq
out
pusha
push
xchg
sub
xlat
std
sti
inc
jp
adc
sub
jno
ss
pop
sbb
stc
lods
aam
out
add
jl
rcl
push
sub
and
jmp
lahf
lods
sbb
movs
push
inc
jmp
loop
sbb
stc
adc
shl
mov
repz
mov
(bad)
push
fdiv
inc
fs
retf
mov
or
lock
call
pop
sbb
inc
mov
xor
out
mov
push
clc
mov
dec
les
jb
aaa
or
cmp
inc
add
sti
out
push
mov
mov
mov
test
jno
sub
push
int3
mov
js
mov
fcom
sub
lods
dec
and
mov
or
sub
shl
xchg
leave
lahf
sti
jbe
push
sbb
xor
and
fsubr
xchg
mov
pop
movs
pop
dec
(bad)
(bad)
pusha
add
inc
cmps
je
push
mov
jmp
xor
mov
sbb
outs
add
rcr
cli
outs
dec
fwait
jbe
movs
pop
mov
mov
test
(bad)
adc
ja
jae
xchg
ins
inc
add
shr
mov
xchg
inc
push
dec
rcl
mul
cwde
lahf
inc
inc
loopne
mov
add
in
jp
mov
call
les
pop
jp
push
inc
push
pop
ins
mov
dec
in
js
or
sahf
push
mov
add
and
stos
cmp
ror
arpl
mov
jmp
cmp
cmp
xor
out
or
fs
and
rol
repz
and
ja
mov
sub
rcl
xchg
or
push
dec
iret
(bad)
sti
bnd
pop
sti
cwde
inc
and
jno
movs
aad
sub
jbe
ret
jp
pop
fisub
rcl
push
pusha
cmp
loop
sub
xor
test
adc
scas
fs
push
ds
cmp
and
sbb
push
ds
xchg
fisub
sub
inc
cmp
adc
push
add
in
imul
jnp
jge
add
sub
mov
pop
sbb
xlat
mov
div
sbb
in
das
(bad)
int
jne
add
push
push
add
and
jnp
rol
jle
mov
adc
shl
push
popa
add
leave
out
ins
stos
ss
xchg
xchg
sub
js
add
pop
sub
pop
push
jae
add
sbb
repz
outs
lock
test
xor
mov
pop
wrmsr
pop
(bad)
(bad)
out
cwde
fmul
int3
mov
cwde
sub
inc
push
inc
shl
xor
mov
sub
or
in
mov
xchg
enter
mov
jge
jl
mov
adc
or
jno
or
cmp
mov
pushf
cmp
inc
pop
sub
icebp
cdq
cmp
in
stc
jle
cwde
rcr
in
(bad)
jp
jge
and
add
stc
jmp
(bad)
push
cmp
mov
cmp
pop
cmp
jmp
lea
adc
push
mov
out
aas
je
adc
cmps
movs
popa
out
add
mov
xchg
mov
mov
dec
sub
int3
cmp
out
push
pop
movs
or
out
cmp
lods
mov
dec
xchg
nop
mov
inc
or
xor
repz
jb
outs
mov
pop
jb
pop
sti
out
inc
mov
add
mov
shl
mov
popf
cld
imul
push
xor
lea
daa
or
cs
cmp
mov
cmp
(bad)
int3
scas
and
and
xor
ja
push
sar
imul
pop
outs
add
mov
test
mov
popf
push
cmp
inc
sbb
cli
fdiv
fcmovne
nop
aam
and
xlat
mov
mov
pop
pop
mov
adc
dec
sub
xor
sar
cmps
dec
cdq
or
adc
ret
cmps
mov
mov
mov
and
je
fdivr
not
cdq
mov
aaa
xor
leave
es
in
popa
ret
dec
mov
stc
icebp
mov
clc
jge
mov
ror
fcom
xchg
jp
sub
fs
xor
sub
int
mov
lods
xchg
dec
push
or
div
scas
mov
lock
cmps
pop
and
jb
stos
mov
lods
cmp
xor
or
cli
sub
xor
retf
push
cmp
push
lds
loopne
or
(bad)
pop
xchg
jne
stos
mov
sbb
push
fld
arpl
sti
fist
div
push
push
xor
xor
out
(bad)
int
jge
mov
add
aaa
xchg
repz
fmul
dec
mov
adc
jnp
add
push
cld
push
je
pop
dec
rol
or
dec
aas
ja
pop
cmp
rol
add
mov
fsub
pushf
jb
xchg
mov
inc
fninit
mov
mov
sti
mov
inc
cdq
or
push
cmp
inc
movs
jno
mov
movs
pop
div
pop
mov
or
in
adc
std
mov
aas
cwde
repz
je
out
ficomp
out
mov
call
xor
xor
cmp
xchg
xor
mov
faddp
pop
inc
or
arpl
lahf
mov
xchg
push
mov
sub
pop
pop
dec
adc
dec
sahf
push
mov
ret
jmp
stos
and
fdiv
sbb
in
inc
pop
push
add
sahf
mov
pop
ffreep
add
(bad)
dec
idiv
inc
je
scas
pop
enter
jbe
sbb
mov
scas
push
imul
sub
or
mov
dec
jl
add
dec
mov
out
or
mov
dec
sbb
pop
sub
mov
shl
sub
adc
fistp
das
popf
rol
jb
pop
nop
ins
arpl
fidivr
push
ins
sub
out
(bad)
int3
lds
fistp
mov
dec
sbb
sti
xor
dec
xor
shl
movs
mov
push
inc
pop
mov
adc
pop
push
sub
sti
inc
xor
cmp
sbb
sub
popa
fimul
lds
cdq
cmp
pop
hlt
jg
(bad)
xchg
and
cdq
jno
loopne
not
jb
data16
(bad)
adc
gs
out
fld
pminsw
sti
ret
push
cmp
loop
popa
out
xchg
fucomip
cmp
(bad)
xor
imul
or
dec
inc
out
xchg
mov
retf
inc
outs
adc
push
retf
jnp
jecxz
icebp
sub
in
lock
stos
movnti
jne
popf
push
pop
call
inc
pop
push
cs
jbe
push
mov
xor
push
or
loopne
sub
imul
mov
inc
or
iret
add
xchg
inc
stos
nop
movs
shr
pop
cmovg
ss
inc
mov
add
clc
iret
jge
in
mov
xchg
cmp
es
cmc
test
cmp
cmp
xor
cmp
js
retf
sub
stos
hlt
and
push
push
jne
inc
jl
mov
sub
lds
cmp
inc
shl
inc
(bad)
fisub
scas
test
cld
in
dec
and
pushf
setns
test
std
and
leave
aam
retf
outs
ss
mov
cwde
js
mov
repnz
fbstp
lea
repnz
pop
xor
adc
lods
mov
inc
scas
ja
jmp
add
xchg
fcom
(bad)
and
test
aas
in
jmp
gs
ds
std
jns
jge
xor
inc
pop
adc
dec
lods
mov
jmp
nop
clc
jns
sbb
arpl
sbb
leave
ss
test
(bad)
cvtps2pd
lods
out
fistp
and
jae
jecxz
mov
(bad)
push
dec
in
test
lods
push
ret
and
dec
outs
mov
dec
cmp
inc
aam
mov
adc
xchg
cmps
int
vphaddudq
adc
cmp
cmc
fcomip
hlt
mov
and
pushf
xor
out
loopne
dec
xchg
aas
jl
jbe
inc
cld
adc
jb
xor
fiadd
mov
and
jle
mov
cli
fstp
adc
mov
jl
push
mov
adc
lods
or
dec
mov
jecxz
xor
dec
lock
popw
xchg
imul
jbe
fwait
xor
xor
ins
dec
js
and
add
mov
test
push
in
mov
push
push
in
adc
mov
xor
sub
sbb
sbb
fs
mov
mov
sahf
push
or
(bad)
loopne
jbe
mov
mov
cmps
call
neg
pop
cmp
xor
pop
and
inc
sub
pop
mov
add
mov
stos
fist
xchg
sahf
movs
call
out
lahf
mov
sub
je
imul
lods
push
sbb
push
or
pusha
push
sar
cmp
push
imul
aaa
push
cmp
jp
clc
push
sub
and
pop
xor
aaa
dec
jle
popf
xchg
jns
pop
or
mov
dec
dec
cmps
js
xchg
sub
in
cmps
out
outs
leave
mov
push
xor
mov
cli
mov
mov
ret
push
(bad)
les
mov
sub
fwait
std
ja
stos
sub
push
push
dec
icebp
push
mov
mov
push
or
inc
sbb
or
jmp
int3
inc
mov
lock
rcr
popa
repnz
mov
sbb
or
ret
and
mov
jge
ret
inc
(bad)
ds
and
and
push
loop
cmp
fwait
and
std
loope
dec
cmp
or
pop
cmp
sbb
cwde
and
rcl
lock
repz
pushf
cmp
mov
mov
frstor
out
and
stos
popa
sbb
jns
cwde
inc
or
data16
cmp
(bad)
(bad)
xor
sbb
mov
movs
add
sub
cmps
fdivp
mov
nop
and
mov
xchg
les
xor
and
retf
pop
or
sar
inc
stos
jp
aad
or
test
cmps
xchg
aam
sub
ret
and
out
adc
sar
stos
lods
sbb
cmps
cmp
push
test
in
inc
das
mov
idiv
lock
ins
in
or
fwait
sar
mov
fcmovbe
cmp
cmc
sbb
inc
cwde
jecxz
cdq
xchg
rcr
xchg
out
add
inc
xchg
je
sbb
ins
adc
push
je
lea
imul
push
or
mov
(bad)
sub
out
or
add
push
push
mov
add
in
sub
push
loope
out
or
(bad)
jmp
adc
cld
std
sub
mov
xchg
pop
push
xor
fstp
sbb
mov
movs
je
push
cmp
aad
out
mov
bound
in
xor
dec
and
jg
jbe
shr
fs
mov
call
cmp
es
or
fwait
int3
push
or
repnz
dec
push
test
push
xchg
lds
nop
(bad)
rcr
in
and
pop
push
stos
cwde
(bad)
in
pop
jb
xchg
stos
mov
scas
ja
mov
fs
cmc
in
icebp
or
leave
ins
sbb
das
sbb
pushf
and
inc
dec
aad
test
inc
or
ds
ja
push
(bad)
loope
cmp
pusha
xchg
cmp
test
jg
mov
pop
add
adc
push
test
or
cmp
push
xchg
pop
cli
pusha
stos
fcmovne
xchg
xchg
xchg
jp
shl
mov
add
dec
shr
call
(bad)
and
loope
jae
out
dec
inc
rol
enter
fild
cdq
leave
pop
xchg
repz
cmps
call
fwait
cli
pop
cmc
outs
(bad)
cmp
dec
stos
lods
loope
(bad)
mov
jp
sbb
out
mov
lods
pop
sub
pop
cmp
jbe
ds
mov
push
call
aam
(bad)
sbb
test
repz
xor
sbb
fiadd
mov
retf
lods
js
test
stos
movs
lods
ss
mov
fcmovnb
mov
aaa
sbb
aaa
jno
push
mov
ja
push
aam
cmp
test
sbb
inc
jmp
cs
cmp
stc
les
nop
mov
xchg
push
in
mov
push
mov
mov
cmps
out
xchg
or
dec
mov
sub
dec
ret
test
out
shr
push
test
jns
sub
dec
dec
adc
push
jmp
push
push
js
cmp
fwait
sub
push
(bad)
mov
cld
mov
jnp
cmps
cmp
sbb
jns
stc
mov
jns
jns
mov
scas
cmps
mov
push
test
dec
xchg
jae
cld
jge
fld
and
sti
(bad)
mov
mov
push
pusha
scas
inc
jae
jo
sbb
inc
inc
mov
dec
dec
pusha
(bad)
loopne
mov
enter
cdq
cmp
push
pop
hlt
lea
test
jmp
jge
ins
int
mov
sbb
dec
mov
bound
jnp
pop
repz
scas
arpl
loope
sahf
jno
ret
jbe
pop
dec
pop
dec
adc
sub
push
fidiv
pop
adc
data16
gs
inc
repz
sti
dec
into
std
(bad)
fimul
cmp
mov
(bad)
fdivrp
or
jle
leave
mov
xchg
lods
int
ds
push
dec
int3
pushf
mov
das
stos
loope
jbe
das
fistp
test
cmc
imul
jns
and
xchg
and
inc
inc
(bad)
call
xchg
push
lods
and
or
scas
and
adc
xlat
mov
or
jp
ss
test
cld
dec
mov
xor
mov
adc
pop
es
pop
ja
xchg
mov
lock
lods
arpl
and
je
xchg
sub
sub
fldlg2
xchg
xchg
sbb
es
mov
jg
test
and
in
pop
pop
inc
std
cmp
mov
mov
fmul
icebp
popa
xchg
hlt
in
sub
adc
and
inc
mov
stc
xor
pop
call
or
mov
idiv
repz
clc
int
mov
add
cmc
mov
pop
pop
jmp
jae
xor
push
ds
fs
xchg
xchg
ret
cmc
mov
out
mov
or
hlt
or
xor
stos
cmps
mov
xchg
ss
jle
pop
pop
loop
add
add
sti
sub
leave
out
mov
push
mov
rcl
iret
lods
add
xchg
les
(bad)
in
inc
dec
dec
cld
retf
or
popf
sub
movs
movs
(bad)
adc
xor
cli
push
sub
jle
sbb
and
or
push
repz
pop
call
xchg
icebp
mov
ror
repnz
dec
push
into
imul
aad
mov
jl
inc
jns
addr16
or
fs
jbe
sbb
call
test
dec
cmp
jle
rcr
sbb
test
mov
sub
ss
pushf
mov
test
ss
sbb
aam
jbe
fisttp
sbb
pop
cmp
xchg
(bad)
aad
mov
mov
pop
xchg
push
das
and
xor
inc
xlat
aas
hlt
adc
cli
sub
sub
dec
adc
mov
movs
xchg
enter
pop
loopne
leave
sbb
push
les
js
fnsave
int3
mov
dec
daa
mov
outs
and
arpl
mov
into
scas
cwde
dec
and
cmovne
loop
mov
jnp
jnp
xchg
iret
ins
aas
and
ja
sar
jl
inc
mov
rol
lock
in
mov
cs
xchg
mov
push
cmp
imul
js
push
rol
inc
mov
pop
bound
add
xchg
xchg
dec
jle
ficomp
mov
(bad)
leave
xlat
(bad)
jmp
gs
js
(bad)
mov
push
pop
outs
inc
lea
outs
jo
jmp
aam
lds
adc
or
lods
mov
dec
mov
and
fwait
(bad)
mov
jl
je
outs
adc
pushf
ins
xchg
mov
rcr
test
pop
lahf
daa
in
das
(bad)
xlat
jno
cmp
(bad)
lds
arpl
pminub
dec
popa
jle
ucomiss
iret
cmc
and
xor
mov
in
test
jmp
ins
pop
push
mov
pop
in
out
fst
das
in
pop
in
imul
sti
push
mov
pushf
imul
clc
cmps
mov
aaa
jecxz
cmp
stc
push
leave
xor
mov
into
jo
add
jno
je
ss
imul
stc
or
xchg
xor
inc
pop
or
rol
dec
sub
int
dec
mov
xor
or
lahf
int
jno
ins
ins
pop
imul
and
adc
push
mov
es
add
retf
cmp
enter
retf
pop
xor
xor
xor
mov
js
xchg
stos
inc
sbb
cmp
aas
jnp
xchg
(bad)
jp
lds
mov
pop
ins
push
and
sbb
adc
push
push
mov
scas
pop
jmp
movs
jo
hlt
inc
and
neg
std
jnp
xchg
jmp
lea
dec
xor
and
loope
loope
loope
jne
rcl
mov
adc
pop
dec
mov
jp
lea
ins
addr16
sti
and
push
in
in
adc
stc
rcl
push
imul
sbb
add
loop
inc
push
inc
bnd
and
ret
pcmpgtd
xor
dec
lock
outs
(bad)
fild
push
fidiv
pop
xor
(bad)
cld
and
aaa
jmp
js
push
fs
call
jns
sar
shr
std
add
pushf
add
arpl
lock
mov
clc
xor
push
pop
ins
data16
adc
lea
adc
mov
rcl
shl
inc
loopne
jb
sar
inc
push
xor
retf
dec
jecxz
xchg
popa
scas
sbb
mov
xchg
aam
loope
inc
dec
xor
das
mov
ins
aaa
pop
popa
fst
and
jo
xor
out
lea
pop
enter
inc
mov
or
(bad)
jle
pusha
in
loope
outs
mov
inc
loopne
daa
lods
in
lods
mov
icebp
lods
addr16
rcl
sbb
xchg
inc
add
lods
jl
cmps
xor
adc
or
popa
call
ins
push
ja
or
ficomp
xor
pop
into
ja
and
loop
jl
cwde
mov
sub
dec
(bad)
xor
fisubr
mov
test
pop
xor
mov
jb
mov
ret
inc
test
dec
cmp
push
xor
jmp
or
popf
outs
sbb
cdq
ret
dec
cld
or
add
push
outs
jns
hlt
out
dec
pop
cs
aaa
shl
outs
add
sbb
mov
xchg
loop
cli
mov
ret
movs
push
jae
test
(bad)
add
sbb
pop
xor
test
jb
jecxz
adc
dec
sub
dec
(bad)
outs
jl
adc
mov
pop
int3
cmp
cld
in
cwde
add
jmp
dec
ret
adc
add
pop
ds
mov
pop
int3
xor
xchg
movs
sub
xor
ficomp
jp
jmp
in
mov
pop
loop
or
inc
movs
sbb
adc
pop
pusha
fidivr
cmp
rol
das
jp
ins
mov
jl
ror
ret
jno
push
cmp
test
cli
mov
jg
mov
scas
xchg
jbe
data16
xor
and
lods
ficomp
dec
out
cmp
movs
clc
jns
xor
movsx
into
iret
inc
aaa
shl
and
and
jbe
mov
ror
or
ror
mov
add
sbb
push
cmp
outs
sti
outs
movsx
mov
xchg
pop
mov
cmp
dec
or
(bad)
ja
pop
jmp
bound
int3
mov
iret
and
into
movs
nop
in
inc
xchg
test
jle
out
cmp
or
and
pushf
adc
mov
jmp
not
and
pop
pop
les
cmp
cmps
fld
cmp
adc
sbb
out
pop
js
leave
xor
mov
stos
dec
jle
loope
push
enter
dec
xchg
mov
aad
inc
mov
cmc
adc
repz
sbb
js
push
xchg
aam
int3
std
ins
and
mov
les
aad
iret
es
mov
xor
xchg
jno
cmp
mov
and
jne
in
movs
push
scas
sbb
jge
push
shr
mov
dec
adc
icebp
mul
and
jecxz
fistp
xchg
movs
stc
data16
jmp
enter
xor
cld
add
retf
xor
js
out
and
ror
xor
adc
xchg
dec
xchg
pusha
cmp
pop
or
pop
fistp
pop
jbe
jecxz
or
out
push
jne
es
cmp
inc
test
neg
and
hlt
outs
push
xchg
and
sub
adc
iret
xchg
jae
push
gs
sbb
in
jo
push
pusha
xchg
or
and
add
icebp
sub
(bad)
mov
and
imul
scas
mov
mov
sbb
mov
aam
xchg
sbb
cmps
pop
xchg
(bad)
jge
(bad)
cmp
repz
out
mov
call
sub
loope
in
xchg
xchg
fild
arpl
pop
mov
movs
jns
mov
jge
shl
es
sbb
popa
loopne
mov
mov
fmul
stos
inc
fwait
and
xchg
adc
mov
push
mov
push
mov
ins
es
aas
mulps
fsubrp
pop
sbb
sbb
les
sar
neg
out
in
sub
mov
imul
push
xor
ins
es
lods
xor
sbb
idiv
push
frstor
lock
nop
loopne
scas
jmp
out
pop
and
call
in
mov
sub
nop
mov
scas
test
dec
stos
pop
aam
fisubr
int
mov
gs
stos
dec
adc
fs
cmp
cmps
dec
push
pop
sahf
imul
bound
jnp
jnp
mov
pushf
repnz
cmp
in
cdq
add
push
enter
shl
psubq
mov
icebp
sub
jbe
and
sbb
inc
sub
hlt
mov
rcl
adc
mov
cs
xor
mov
out
test
loope
jno
adc
imul
sti
inc
jo
sub
sub
in
retf
inc
daa
mov
(bad)
mov
retf
push
dec
mov
int3
out
icebp
aad
xchg
ror
push
pop
sbb
stos
jg
xchg
add
ret
or
cld
dec
xchg
fwait
jl
iret
cdq
xchg
mov
mov
ja
sbb
or
and
loop
mov
mov
outs
pop
pop
cdq
lods
mov
jg
mov
inc
add
add
popf
rol
jmp
pop
xchg
push
pop
ja
inc
test
in
pop
cmp
xor
mov
mov
stos
fst
lock
aaa
rcl
dec
shl
jp
repz
out
pop
cmp
lock
icebp
stos
cvttps2pi
pop
stos
jb
ins
or
sbb
xchg
mov
fsub
imul
xchg
jl
mov
jbe
cdq
aas
inc
jmp
sahf
into
xchg
add
dec
pop
xor
add
inc
aam
add
pop
rcl
or
and
scas
xchg
pop
rcl
cmps
and
push
nop
xchg
dec
mov
fmul
jl
cmp
popa
pop
or
aad
mov
sbb
arpl
hlt
sbb
or
pop
sbb
cs
dec
jecxz
lock
jp
mov
movs
cmp
or
mov
hlt
cmp
push
cmps
mov
xlat
xor
fcom
aam
or
push
xchg
hlt
idiv
adc
lock
dec
ins
pop
xor
adc
inc
xchg
imul
(bad)
sbb
add
sbb
and
dec
sahf
pop
call
inc
pop
push
hlt
lods
push
lahf
pop
jmp
add
les
in
pop
call
test
cdq
jg
lods
mov
rol
std
mov
imul
jle
into
gs
shr
push
neg
scas
mov
mov
(bad)
rcr
mov
inc
push
sbb
hlt
pop
push
and
in
push
pop
cdq
xchg
push
ret
pop
xchg
cwde
fs
cmps
jecxz
lods
mov
sbb
hlt
je
repz
mov
rcr
fs
ret
and
inc
sub
mov
fistp
loop
sti
pop
loop
ss
jmp
xchg
pop
sub
loopne
popf
mov
lea
shl
cli
sub
scas
iret
mov
repz
out
(bad)
aad
das
lods
lea
or
push
cs
or
iret
xor
aas
std
mov
clc
push
dec
mov
in
jne
frstor
cmp
test
cwde
sub
sbb
mov
push
cmp
mov
sub
popf
mov
dec
popf
cmp
rcl
gs
mov
add
cli
xor
mov
shr
lods
aam
fsub
(bad)
dec
shl
mov
es
jl
xor
cmps
xor
bound
ret
or
lods
pushf
push
test
push
jns
fadd
fsubr
sbb
ret
mov
xchg
xor
lahf
(bad)
je
inc
sbb
jne
dec
std
nop
test
push
sbb
fs
pop
cmp
aad
loop
mov
sbb
in
mov
add
or
mov
retf
and
neg
dec
(bad)
jbe
lahf
dec
mov
and
lods
(bad)
cmp
clc
mov
inc
ret
mov
fsub
mov
mov
imul
xor
(bad)
jmp
cmc
mov
inc
aas
inc
es
es
and
daa
jl
aam
push
mov
mov
outs
xor
add
pop
add
rcr
or
xchg
pop
std
push
test
repz
push
mov
xchg
shr
and
xor
scas
cmp
hlt
test
mov
inc
mov
jns
hlt
(bad)
cs
ror
mov
lods
test
(bad)
cmp
inc
nop
bswap
adc
mov
xchg
bound
iret
pxor
xchg
into
and
adc
in
jo
and
aaa
mov
jg
stos
cmp
adc
mov
jno
shr
out
add
les
jmp
mov
jns
inc
addr16
xchg
jmp
cmp
push
js
int
xor
mov
jns
push
fst
jmp
inc
rcl
mov
jns
mov
or
nop
adc
scas
movs
inc
dec
and
cmps
data16
call
sbb
fimul
scas
fild
pop
adc
aas
jb
shl
xor
jb
xor
cmp
jle
mov
push
fcom
scas
adc
cwde
dec
sbb
inc
add
or
mov
fisttp
ins
je
xchg
add
push
pop
les
pop
das
or
ret
icebp
movsx
sbb
dec
in
shl
xchg
mov
push
addr16
movs
sub
push
and
or
outs
xchg
lock
movs
xor
dec
in
jno
test
xor
popa
jno
pop
cwde
dec
(bad)
test
dec
loop
icebp
cld
ins
test
xchg
(bad)
push
sub
mov
sub
cmps
xor
push
mov
fisttp
movs
pop
mov
jp
xchg
std
pop
xchg
in
sbb
pop
mov
mov
les
shr
push
pop
leave
fbld
inc
pop
arpl
mov
ds
xchg
ja
mov
inc
mov
(bad)
popa
pop
sbb
ss
cmp
leave
mov
cmps
mov
cmc
mul
out
push
leave
das
push
fs
mov
int3
dec
inc
push
fcom
push
aam
xchg
cdq
push
cmps
add
fst
in
dec
test
ror
or
push
dec
in
mov
and
js
add
lds
push
int3
inc
popa
out
inc
fwait
icebp
cmps
cmps
sub
dec
adc
sub
push
nop
aaa
(bad)
pop
or
mov
dec
cmps
mov
call
dec
pop
retf
js
mov
lock
or
fidiv
xchg
cmp
push
leave
adc
cwde
cmps
fsubr
mov
inc
or
xor
dec
(bad)
sub
jb
push
cmp
call
lea
popf
jnp
jecxz
mov
dec
sti
lahf
out
(bad)
adc
(bad)
shl
test
daa
push
pop
sahf
mov
imul
jmp
xor
xchg
std
and
pop
add
inc
aaa
xor
loop
jb
dec
aad
aam
or
stos
mov
sar
and
sbb
xor
dec
sbb
outs
jne
das
test
pop
lea
aad
aaa
inc
dec
mov
add
aad
xchg
cmp
mov
and
sti
pop
adc
adc
shr
mov
mov
call
xor
mov
and
(bad)
pop
imul
lods
and
movs
mov
mov
ins
imul
cld
ret
shl
add
xchg
push
imul
sub
(bad)
cmc
xor
fisub
xchg
call
fucomp
xchg
mov
in
in
fmul
dec
adc
mov
and
arpl
push
mov
(bad)
(bad)
inc
iret
in
pusha
pop
inc
dec
or
jge
cmp
dec
popa
out
dec
ror
xchg
inc
clc
mov
or
adc
out
arpl
fyl2x
dec
jae
and
movs
gs
arpl
test
leave
(bad)
jno
sbb
jno
or
pop
sub
inc
ret
jl
jb
and
rcl
sbb
pusha
jp
rcr
rcl
mov
retf
std
ja
es
call
clc
and
jl
loopne
outs
xor
sti
cmp
xor
inc
leave
sub
mov
(bad)
(bad)
xor
shl
das
dec
jp
call
int3
sahf
ret
push
pusha
fldenv
jge
stos
xor
mov
adc
popf
xchg
test
xor
jmp
hlt
(bad)
call
xadd
daa
repnz
pop
in
jl
fld
mov
cmp
loopne
faddp
enter
jne
pop
nop
fs
outs
push
lods
mov
aam
xor
mov
push
mov
push
out
fst
gs
mov
icebp
xor
pop
jns
aaa
das
jle
mov
lahf
ds
cmp
sbb
das
sub
call
jge
jno
out
out
add
inc
nop
cdq
sbb
test
pushf
mov
xor
or
test
popf
jne
int3
adc
mov
cmp
stc
je
xchg
mov
stos
sbb
stos
push
cld
fld
adc
pushf
lock
es
call
inc
sub
mov
or
xchg
pusha
sbb
cs
mov
xchg
jno
dec
aas
mov
jg
mov
lods
jb
scas
cwde
shl
xor
adc
fmul
inc
jae
inc
xchg
sub
jae
pop
outs
aaa
xchg
cdq
mov
mov
retf
xor
dec
pop
jmp
clc
cld
xchg
inc
bound
nop
out
cs
in
pop
pop
mov
xchg
inc
mov
ret
xchg
push
cmp
pop
je
add
std
ret
and
test
lea
jmp
js
dec
pop
xlat
inc
(bad)
das
das
push
arpl
jp
cmp
pusha
fs
push
mov
fsub
mov
in
aas
hlt
add
rcr
inc
xor
out
cmp
jbe
cmp
int
mov
stos
es
div
outs
shl
clc
adc
dec
fldenv
xor
in
sub
ins
xchg
aaa
push
or
lea
and
dec
setne
in
and
sahf
iret
lahf
out
cld
dec
push
not
pop
ret
es
or
pop
push
mov
shl
cli
lds
in
fld
sbb
mov
xchg
sahf
mov
cwde
cdq
add
stc
cld
cmp
jg
fstp
into
mov
xchg
and
inc
icebp
out
dec
(bad)
cmp
lock
and
inc
test
mov
fstp
push
pop
scas
xchg
pop
sahf
push
aam
mov
cmp
xchg
inc
jl
imul
push
nop
xor
mov
pop
sbb
xchg
add
stos
cdq
inc
(bad)
push
pop
mov
pop
xchg
and
mov
push
sbb
cld
daa
sub
push
and
stos
adc
xor
(bad)
adc
xchg
jmp
and
in
daa
adc
cmp
push
xor
xchg
ja
pusha
clc
and
push
or
mov
ret
popf
adc
retf
add
in
and
jns
mov
outs
adc
cld
mov
and
xor
jmp
xor
jbe
or
or
lods
mov
aad
arpl
or
sbb
add
mov
mov
lods
or
retf
xchg
xchg
sti
pop
jge
xchg
mov
imul
test
repnz
sub
mov
cmp
mov
(bad)
push
jae
mov
outs
repz
arpl
inc
add
outs
push
adc
push
out
sbb
ficomp
iret
in
ins
cli
add
add
pop
adc
(bad)
push
mov
stos
cmps
xchg
lods
mov
fwait
push
and
dec
jno
inc
in
inc
sub
stos
retf
call
mov
hlt
mov
push
lods
jmp
ds
push
push
test
mov
not
cmp
cmp
mov
sub
sbb
shl
add
push
(bad)
push
cmp
or
arpl
cmp
push
sar
(bad)
cdq
or
or
in
call
cmp
idiv
xor
mov
adc
jmp
enter
cs
dec
adc
das
js
sbb
cwde
rcl
mov
mov
jl
pop
test
mov
(bad)
jl
sbb
xchg
xchg
xchg
sub
movs
jno
push
rol
jne
fwait
scas
jp
mov
sub
lods
sub
outs
push
cmps
xchg
push
add
ror
jnp
add
xor
sbb
push
stc
xor
test
mov
dec
mov
sbb
mov
or
xlat
loopne
adc
dec
push
sbb
mov
fld
into
mov
jnp
pop
imul
xchg
imul
out
ds
mov
and
cmps
sub
cmp
call
inc
add
popf
jnp
mov
scas
or
test
sub
(bad)
jb
stos
jp
jo
fcmovnbe
gs
push
mov
mov
ror
sub
test
out
in
sub
and
fidiv
mov
sahf
mov
and
arpl
ror
ins
jne
aaa
iret
(bad)
retf
mov
mov
pop
inc
pop
cmp
cmp
adc
sbb
push
mov
jp
push
push
movs
fs
mov
jecxz
or
and
add
ins
and
jle
cdq
xor
push
and
cmc
cmp
popa
mov
or
lods
out
xor
dec
jmp
daa
xchg
or
fistp
xor
sti
add
adc
fidivr
mov
jmp
add
movs
push
call
mov
dec
rcl
stos
sbb
retf
aaa
enter
jmp
cmp
dec
ss
sbb
dec
lahf
cmp
add
test
and
jl
adc
xchg
push
pop
bnd
jle
mov
inc
pop
(bad)
les
clc
call
jnp
hlt
aas
fs
mov
push
cmps
sbb
xchg
xor
sbb
nop
or
sbb
dec
inc
xchg
adc
and
cwde
xchg
inc
cmp
sub
ds
jb
mov
add
icebp
jg
dec
dec
fadd
cmp
sbb
iret
(bad)
push
xor
mov
sbb
xor
adc
sbb
and
cmp
stc
and
mov
inc
shl
les
mov
in
or
adc
xchg
and
stos
jp
sub
cwde
dec
push
and
std
xor
mov
or
sti
aad
push
inc
add
cmp
(bad)
and
mov
jo
es
and
cmps
push
aas
mov
test
and
sbb
aas
add
iret
outs
es
das
loopne
aad
xor
push
aad
jmp
mov
xchg
ret
cmps
popa
xchg
(bad)
and
sbb
(bad)
(bad)
cmc
inc
and
mov
mov
xchg
(bad)
ja
ja
dec
or
in
test
dec
pop
push
inc
jno
jg
stos
stos
lock
mov
bswap
call
neg
adc
push
pop
jg
push
pop
je
mov
imul
pop
add
mov
stos
add
adc
mov
scas
push
push
loope
and
or
lock
mov
jle
mov
lds
fnstenv
mov
or
sti
fcmovu
jmp
or
ins
dec
dec
xor
test
daa
jmp
sub
mov
add
ret
inc
loope
pop
add
cdq
ffreep
leave
mov
push
pushf
cwde
dec
adc
dec
retf
das
test
out
xchg
fldz
jo
pop
inc
mov
sub
jmp
fimul
mov
mov
lea
cmps
test
movs
int
mov
fwait
jp
lods
mov
jle
jmp
mov
fimul
stos
ja
dec
sbb
xchg
or
push
out
jg
cmp
mov
pushw
inc
push
(bad)
sub
fist
mov
setnp
(bad)
in
xor
push
in
fs
fstp
cmp
jnp
int
test
xchg
dec
pop
jmp
inc
push
(bad)
cmc
bound
mov
push
into
leave
push
mov
adc
mov
cmp
and
ss
scas
call
repz
jge
aad
push
xchg
data16
push
add
scas
sbb
mov
(bad)
cmp
stos
cmc
out
adc
mov
adc
cmp
lods
(bad)
mov
mov
movs
mov
lds
in
dec
jno
lds
jmp
and
rcl
jle
sub
imul
fsubr
jnp
mov
inc
inc
mov
mov
sbb
dec
test
ins
push
sub
xchg
mov
pop
mov
xchg
or
int3
mov
mov
mov
inc
adc
les
add
add
cmp
mov
xchg
pop
pop
push
scas
ret
xor
push
mov
imul
es
sar
mov
fdivr
push
je
loop
int
or
push
push
push
jb
mov
push
loopne
xchg
push
mov
dec
sbb
(bad)
pushfw
aam
sub
push
dec
jbe
cmp
jmp
call
fimul
lods
aaa
or
(bad)
cdq
sahf
dec
iret
fs
(bad)
movs
jmp
mov
jmp
inc
dec
cs
std
jl
ror
or
cwde
stos
dec
cmc
retf
rol
gs
mov
outs
into
mov
out
(bad)
ss
add
leave
xchg
aam
jle
jo
out
in
imul
push
sti
sbb
(bad)
sbb
mov
adc
dec
stos
mov
inc
out
adc
test
or
add
mov
sub
mov
cmps
and
clc
out
ret
inc
bound
sbb
and
push
xor
add
xchg
call
idiv
jo
mov
nop
sbb
dec
and
in
xchg
ffree
jae
fwait
mov
test
iret
cwde
add
mov
les
test
and
add
add
test
sub
sub
xchg
fs
jae
cld
scas
sahf
clc
call
adc
cmps
mov
adc
je
in
inc
xchg
jne
inc
in
sbb
mov
push
mov
adc
adc
popa
pop
jg
jo
ss
gs
lock
mov
out
jno
ret
cmp
push
or
xchg
inc
xchg
mov
cmp
int
lods
rol
mov
cmps
dec
push
jl
or
push
into
retf
repnz
sbb
sub
repz
mov
leave
cs
mov
in
test
xor
or
inc
idiv
in
push
xor
jl
movs
js
inc
test
jg
mov
sub
push
xchg
xchg
and
cmp
mov
daa
(bad)
mov
lds
mov
fimul
inc
jno
adc
inc
pop
dec
stos
push
fdiv
jmp
mov
mov
or
mov
in
sbb
je
scas
clc
ds
dec
adc
cmc
popa
lahf
xchg
and
or
add
mov
aaa
sub
arpl
adc
loope
xor
pop
bound
or
aad
sub
push
jmp
sahf
xchg
out
jno
pop
push
retf
sbb
mov
push
jb
sbb
jmp
sbb
outs
idiv
adc
mov
out
mov
rol
push
push
xor
fsubr
mov
mov
cs
aad
cmp
ret
xchg
outs
dec
addr16
mov
imul
sub
int3
mov
mov
push
cmp
idiv
mov
lds
repnz
mov
xor
xchg
stos
std
xor
jge
mov
jg
fs
mov
inc
into
scas
aas
push
adc
push
xlat
rol
jg
test
ret
jl
pop
pop
in
lock
mov
xor
gs
popa
mov
xchg
xor
dec
sub
lods
mov
pusha
push
and
cli
dec
iret
mov
(bad)
push
add
mov
add
pop
xchg
in
jo
and
pop
mov
jecxz
stos
sbb
cmps
das
mov
push
aad
mov
ss
sbb
add
push
das
sbb
(bad)
fcomp
cs
nop
je
mov
inc
and
add
outs
ins
ficomp
icebp
push
xor
(bad)
out
jmp
mov
cmp
jge
jns
movs
adc
cdq
les
xchg
mov
lock
jg
stc
and
cwde
fdiv
ins
pop
adc
scas
add
imul
adc
sbb
je
dec
sbb
sbb
movs
or
loopne
aaa
jno
daa
mov
inc
shl
pusha
test
stc
pushf
sbb
push
cli
sti
ja
leave
inc
retf
pop
push
pop
pop
sbb
ins
xlat
(bad)
sub
clc
sub
and
pusha
(bad)
hlt
pop
xchg
dec
(bad)
and
fnsave
shl
mov
sbb
std
mov
das
data16
leave
pusha
xchg
arpl
ret
or
dec
imul
bound
cwde
sub
sbb
les
lea
and
pop
test
add
sar
rcl
cmp
(bad)
mov
cwde
(bad)
enter
in
adc
push
std
adc
fnstenv
das
cmp
into
in
pop
xchg
out
mov
mov
stos
fstp
mov
fmul
aas
cmp
or
in
sub
sbb
mov
aam
sahf
jmp
add
(bad)
jbe
call
dec
rcl
in
cmp
adc
mov
int3
inc
sbb
test
dec
push
or
lea
push
push
sub
inc
pop
fiadd
enter
jmp
inc
test
cli
xchg
sbb
inc
loope
jmp
xchg
cmp
adc
mov
and
in
inc
jb
adc
cld
inc
mov
add
mov
cmp
jno
adc
dec
dec
popf
add
and
cmp
adc
xchg
test
add
clc
sub
loop
mov
lds
inc
je
loop
push
aad
test
(bad)
daa
gs
jmp
mov
jmp
or
adc
xor
or
xor
mov
xchg
out
cld
mov
ror
add
adc
pushf
jmp
add
inc
mov
fisub
or
inc
mov
add
mov
dec
mov
xchg
cmp
loope
mov
pop
mov
mov
lods
(bad)
(bad)
inc
xchg
and
sbb
iret
xrelease
mov
jle
mov
daa
cwde
loope
or
mov
mov
fldenv
and
rol
aas
push
xor
aad
imul
add
and
loopne
(bad)
mov
jae
ja
(bad)
in
pop
in
xchg
les
iret
int
sbb
cwde
ret
pushf
push
or
push
mov
js
adc
jae
mov
inc
mov
lock
(bad)
sti
in
aas
inc
dec
lods
addr16
inc
xor
xchg
mov
and
jle
push
or
(bad)
int3
or
adc
xchg
test
sub
jge
ret
mov
dec
pushf
aam
out
push
(bad)
repz
add
jmp
add
adc
pop
movs
movs
mov
std
arpl
dec
add
repz
cmp
movs
cmps
sbb
jno
mov
xchg
adc
fadd
dec
pop
jo
mov
fwait
inc
push
cli
hlt
jmp
ud2
push
movs
mov
(bad)
adc
ds
movs
xchg
pop
xor
imul
mov
push
mov
or
add
inc
jp
enter
sub
add
sub
push
cmp
jle
add
mov
dec
xor
jb
or
push
ret
xor
sbb
outs
imul
mov
xor
xchg
adc
mov
lds
ins
(bad)
rol
pop
jb
and
pop
lods
mov
test
repz
mov
lods
push
xor
pop
sbb
ficom
xchg
lds
xchg
lods
sbb
bound
fsubr
ror
outs
popf
push
sar
dec
loopne
pop
add
push
jb
lea
sbb
add
setns
loop
fcomp
cmp
xchg
ins
stc
push
xchg
stos
bound
add
xor
dec
xchg
cmc
iret
mov
cmp
pop
cli
fiadd
lahf
inc
out
xor
sbb
(bad)
retf
idiv
jle
xor
or
(bad)
mov
stos
mov
mov
movs
fsub
test
xchg
xor
jge
and
ja
sbb
add
push
lds
rcl
sub
inc
mov
dec
aam
sbb
adc
stc
jmp
or
sub
out
(bad)
mul
jne
(bad)
retf
dec
int
xchg
mov
push
test
or
push
sbb
cmp
pop
pushf
add
or
push
mov
pop
xor
fstp
nop
ja
add
pop
int3
into
fisttp
addr16
fdiv
xchg
addr16
enter
or
and
pusha
bnd
dec
xchg
cld
outs
push
or
adc
push
(bad)
push
xchg
sbb
add
mov
mov
outs
dec
push
jo
dec
loopne
xor
into
mov
cmp
in
jmp
push
mov
and
add
iret
stos
lock
ja
add
and
aad
mov
arpl
aaa
or
ins
ds
sub
mov
mov
cs
xlat
or
push
popa
sbb
sbb
pop
inc
xchg
and
xor
mov
sar
stos
sbb
enter
mov
ret
xor
test
scas
int
jge
test
push
mov
adc
daa
jg
loopne
add
xchg
jmp
jae
inc
fwait
lea
gs
(bad)
lea
pop
imul
ds
xor
push
scas
mov
mov
dec
mov
inc
jnp
mov
mov
mov
repz
dec
mov
pop
xor
lahf
ins
inc
movs
jg
push
scas
hlt
lea
stos
xor
mov
ja
adc
je
xchg
push
push
mov
jmp
mov
int3
outs
popa
adc
mov
cmp
mov
(bad)
pop
mov
jne
loopne
and
push
mov
jle
out
popa
mov
scas
stos
movs
cmps
cwde
or
xchg
int3
inc
rol
fst
add
cld
call
xchg
cmp
repnz
jge
or
sbb
loopne
test
jle
cmp
inc
out
pop
shl
lock
xchg
add
push
dec
sbb
outs
xor
popf
xor
outs
xor
adc
adc
dec
out
movs
mov
out
in
mov
inc
cmps
push
and
mov
call
lea
inc
lods
xor
push
sbb
pop
ja
out
sbb
mov
mov
call
ror
gs
test
inc
fstp
add
shr
cwde
fdiv
mov
(bad)
inc
push
push
mov
cmc
mov
int3
cmp
mov
push
fstp
cmps
mov
loop
xor
les
daa
mov
adc
or
jp
fistp
stos
dec
bound
mov
aas
and
push
cmp
inc
inc
clc
mov
out
leave
inc
daa
jnp
test
cli
inc
sbb
mov
scas
mov
imul
test
xchg
fisubr
out
ror
cwde
fild
fs
adc
xchg
nop
or
aas
outs
lods
rcl
je
dec
mov
xor
(bad)
sub
mov
dec
or
mov
stos
mov
cmps
enter
push
jns
jecxz
push
daa
inc
popa
and
lods
mov
mov
movs
jb
(bad)
out
inc
adc
mov
mov
outs
test
and
pop
and
push
sub
inc
jo
aad
mov
dec
jb
mov
xor
in
add
rcl
inc
rcl
test
add
imul
push
lods
cld
and
sar
fld
fimul
mov
mov
adc
jae
mov
paddusb
mov
ins
(bad)
cwde
pusha
int
or
clc
push
mov
outs
lods
pop
xchg
cdq
sub
pop
mov
aas
xor
jo
dec
cmp
and
lods
sub
pop
add
push
lahf
lahf
les
daa
ins
sar
mov
aad
mov
into
push
dec
rcl
xchg
and
fidivr
push
pop
pop
movs
mov
xor
jmp
lock
xor
lds
sbb
xchg
jl
rcl
xor
pop
popa
ins
xchg
xor
stc
(bad)
ret
push
jmp
pop
xchg
mov
push
fdiv
jae
sbb
inc
pop
and
cmps
pop
mov
jle
mov
sahf
inc
into
jecxz
ins
jle
sbb
rcr
ret
lods
mov
adc
fcmovnb
sbb
clc
mov
xchg
ror
mov
xchg
inc
xchg
xchg
pop
pop
and
fsin
into
mov
adc
aas
sbb
push
jae
add
ret
pop
cmp
inc
or
inc
jmp
das
(bad)
mov
mov
test
pop
gs
and
movnti
jno
inc
or
adc
jbe
cmp
mov
cwde
fisub
jmp
adc
mov
sbb
add
xchg
mov
add
out
ins
mov
rol
mov
std
push
mov
xor
cmc
popf
add
loopne
inc
mov
cmc
rcl
pop
adc
cmp
mov
cli
and
mov
add
inc
std
fnstcw
pusha
mov
out
cdq
xchg
xchg
cmp
dec
popf
push
dec
fstp
inc
movs
dec
int3
jmp
repnz
xchg
les
sahf
sub
fcomp
mov
cmps
(bad)
loope
push
imul
push
inc
dec
shl
mov
fnsave
push
mov
ins
div
mov
mov
repnz
jecxz
sub
xor
ds
mov
iret
and
dec
add
loopne
popa
jne
imul
jmp
pop
cmps
movs
mov
adc
xor
cs
cli
mov
mov
sbb
add
cld
or
sbb
fcomi
cdq
pop
cmp
mov
mov
hlt
ins
hlt
mov
xchg
push
ins
jne
fist
push
call
and
sub
mov
out
lods
retf
sar
loopne
jbe
enter
in
jecxz
mov
popf
hlt
mov
popa
pop
mov
dec
sub
adc
cmp
pop
push
(bad)
stc
pushf
pop
iret
xchg
cmp
mov
loopne
test
cmp
mov
xor
daa
pop
cmp
add
sar
push
mov
movs
(bad)
adc
jo
cmp
xor
mov
xor
ins
test
clc
mov
pop
sub
out
test
inc
and
scas
push
retf
shr
pop
or
sub
dec
push
sbb
push
shl
leave
shl
lods
xchg
les
dec
and
test
inc
ja
adc
dec
mov
loopne
push
enter
into
dec
je
aas
test
mov
push
mov
cmp
nop
mov
jnp
cmp
jo
or
jecxz
sub
mov
pop
mov
mov
out
jp
sub
in
jnp
test
push
repz
nop
scas
(bad)
mov
(bad)
push
push
int3
fadd
pusha
pushf
jns
or
dec
test
jp
in
loop
fisttp
xchg
adc
xor
(bad)
dec
push
mov
daa
cmp
pop
mov
pop
lods
fldcw
or
out
mov
in
xchg
mov
int
xor
mov
sar
mov
gs
scas
and
sub
add
or
cdq
jae
ret
es
and
lock
push
and
cmp
sbb
(bad)
sub
cmps
jge
and
idiv
or
popf
scas
rcr
test
fistp
mov
jg
ror
(bad)
jo
xchg
mov
stos
out
test
pop
dec
sbb
pop
inc
lock
(bad)
mov
xchg
pop
inc
xchg
xlat
loop
arpl
fdivr
in
xor
jp
not
addr16
cmp
popa
add
icebp
push
sub
xchg
jmp
movs
sbb
sub
clc
inc
sbb
cdq
movs
cli
xor
xchg
xchg
xlat
push
inc
outs
xchg
out
ror
lods
sbb
inc
jne
dec
inc
sub
jp
or
cmp
enter
loopne
sub
jle
xchg
push
sahf
movs
and
cmp
xor
add
pushf
mov
gs
xchg
jmp
jmp
dec
das
imul
cdq
xor
popf
fwait
push
call
imul
mov
neg
popa
push
mov
stc
out
add
or
xor
test
fldenv
sub
pop
sbb
adc
pop
ja
mov
std
jle
loopne
xchg
sbb
jp
into
dec
jmp
iret
repnz
cld
pushf
inc
ja
pop
inc
mov
adc
sbb
in
repz
mov
je
in
in
push
stos
inc
jp
arpl
fcom
add
fisubr
movs
jmp
push
les
or
inc
ret
ins
(bad)
pop
ins
inc
mov
mov
sbb
sub
add
mov
inc
cmp
popf
ja
stos
add
inc
jno
pop
imul
rcl
sbb
shr
inc
inc
or
push
add
test
loop
sbb
daa
dec
stc
scas
cmp
inc
cmp
int
(bad)
push
loopne
and
in
inc
mov
not
and
jno
loope
pop
lds
std
neg
call
mov
gs
sbb
aaa
es
(bad)
mov
test
inc
stos
push
int
aas
mov
dec
sbb
add
aad
pop
mov
and
adc
in
in
xor
arpl
cwde
push
in
scas
mov
sbb
adc
arpl
mov
or
mov
shl
add
and
inc
cmps
push
mov
loopne
inc
and
pop
ds
push
xor
jg
add
lods
dec
cdq
and
pop
ret
nop
or
(bad)
bound
jne
cmp
mov
(bad)
push
lds
fwait
inc
ret
sbb
xor
jae
push
shr
cld
sbb
add
cs
push
or
xchg
mov
test
ins
cld
stc
rcl
dec
fidiv
push
pop
inc
ror
scas
xlat
sub
movs
aad
ror
mov
int
xor
dec
les
inc
push
sub
ja
mov
(bad)
lods
cmp
dec
(bad)
fisub
imul
popf
je
fnstenv
lds
leave
gs
pusha
inc
repz
fwait
daa
in
cmp
push
pop
test
xchg
dec
int
cmp
push
cmps
mov
les
(bad)
sahf
test
inc
mov
in
call
(bad)
sbb
ficomp
aaa
pop
xor
xor
lds
iret
cmps
ret
out
call
adc
ret
std
cmp
in
shr
not
inc
daa
pavgw
fisub
pop
mov
adc
jle
movs
ror
jmp
and
pop
jns
cmp
mov
add
sbb
inc
cmp
movs
mov
cmp
jb
and
daa
mov
sub
pop
dec
push
jge
js
xchg
stc
push
fnstcw
das
push
in
js
cmp
int
(bad)
cmp
or
sbb
scas
(bad)
pusha
lahf
stos
xor
mov
leave
sbb
ss
pop
or
jg
pop
jle
in
shr
cs
loopne
push
push
push
shl
sahf
call
test
shl
imul
cld
aad
enter
das
jmp
jb
push
push
lds
ja
int3
cmp
sub
fmul
stos
and
xchg
mov
cmps
test
popf
xchg
adc
repz
retf
mov
jl
jmp
xchg
int3
loope
cs
out
ret
dec
and
(bad)
in
push
xchg
cmp
(bad)
xlat
in
pop
icebp
inc
fxch
push
add
mov
mov
pop
mov
sbb
fsubr
fistp
cmp
jecxz
mov
mov
add
sar
pop
repz
pop
dec
ja
dec
les
pop
cmp
push
ret
pop
push
das
or
push
mov
add
jge
scas
loopne
into
or
(bad)
stos
pop
popa
ja
aas
inc
shr
cmp
or
dec
pop
icebp
int
xor
scas
adc
mov
or
or
inc
int3
sub
lock
test
pop
bound
mov
xor
imul
pop
repz
je
xor
cdq
sar
test
scas
aas
cld
test
xor
rol
and
retf
dec
pop
pusha
imul
mov
call
call
xor
retf
aaa
loope
push
es
xchg
dec
xchg
xor
into
sbb
sbb
nop
cmp
xchg
sbb
pop
(bad)
sti
inc
jecxz
fdivr
mov
idiv
xchg
dec
mov
xchg
sahf
inc
pop
xor
or
dec
pop
add
or
mov
or
sub
out
fadd
enter
pusha
dec
les
xor
cld
mov
pusha
push
mov
and
sbb
mov
or
mov
test
movs
jne
mov
popf
sub
push
shl
jg
sbb
enter
ret
sbb
dec
mov
cmc
or
shr
inc
cli
rcr
ds
add
icebp
int
ja
pop
jmp
xchg
xchg
das
jecxz
xchg
dec
xlat
stos
add
xor
or
mov
xor
xchg
adc
ins
xor
les
jl
push
or
test
pop
(bad)
test
jecxz
test
pop
mov
inc
sub
mov
push
and
mov
js
inc
data16
jmp
push
aad
int
xor
sub
add
jg
sar
pop
or
iret
jb
loope
lea
icebp
cmp
dec
inc
or
push
popa
test
sub
shl
sbb
repnz
cli
cwde
outs
test
icebp
dec
in
rcl
mov
add
icebp
cld
push
and
out
cmp
stos
mov
cmps
out
sbb
mov
cmp
iret
add
mov
aaa
dec
daa
movs
out
mov
int3
dec
mov
cmps
inc
cdq
rcl
xchg
shl
aad
sbb
push
push
ins
imul
bound
push
and
mov
pushf
cmp
jecxz
cs
add
jmp
fwait
mov
rcl
not
cmp
outs
lods
add
mov
mov
out
rcr
or
sahf
xor
push
and
imul
push
stos
icebp
and
dec
pop
adc
xor
xchg
loopne
sbb
xlat
out
cmp
xor
pop
mov
sbb
sbb
add
or
xor
pop
mov
loope
dec
paddw
jg
push
aaa
enter
loope
loope
cdq
push
daa
ins
jnp
lock
out
fadd
xchg
and
push
fucomi
fwait
add
inc
sub
xor
lea
and
out
sub
shr
push
mov
test
xchg
cwde
loopne
mov
aam
cld
(bad)
xor
stos
sbb
mov
cmp
and
call
xchg
or
add
sbb
and
xchg
fisubr
cmps
and
pop
xchg
mov
push
icebp
test
sbb
pop
rcl
jmp
pop
push
test
or
or
sbb
clc
jne
dec
fs
jle
add
mov
mov
fcomip
clc
rcr
ficomp
and
hlt
fiadd
(bad)
adc
and
adc
dec
mov
shl
(bad)
leave
sbb
push
fisub
daa
aas
mov
push
retf
and
inc
ret
pop
movs
int3
adc
outs
int
pop
out
stos
cmps
in
aam
or
daa
mov
push
and
ret
mov
inc
in
push
xor
pop
xchg
leave
outs
hlt
adc
and
lock
cmp
or
push
test
ror
jns
and
call
fyl2xp1
cmp
xor
push
sub
push
hlt
sahf
fsubr
test
mov
and
mov
xchg
sti
pop
jge
adc
sbb
adc
aad
hlt
jecxz
popa
arpl
aad
pop
sub
inc
ret
mov
sahf
ins
in
test
xor
mov
push
retf
jno
pop
pop
push
(bad)
ficom
mov
jecxz
and
es
xchg
dec
dec
ret
fs
imul
sbb
cwde
adc
int3
loope
cmps
xor
daa
fistp
fld
das
pop
mov
call
mov
ja
xor
inc
push
lahf
lock
pop
sar
test
xchg
xor
je
shl
or
or
cmp
nop
xchg
jb
xor
stc
push
scas
outs
sbb
cmp
neg
adc
imul
jg
push
jmp
imul
sbb
shr
call
or
sbb
div
or
hlt
stos
xchg
jge
jo
add
das
stos
xchg
push
popf
fidivr
pop
sbb
daa
cmc
es
or
lods
call
addr16
ss
cmovs
push
mov
pop
in
inc
loope
cmps
lods
and
mov
iret
idiv
xchg
ret
mov
push
xchg
or
push
jbe
cmp
inc
pop
shr
test
sub
mov
icebp
test
das
out
and
inc
mov
fcomp
scas
inc
jl
cwde
ja
xchg
pop
or
gs
xchg
jnp
movs
ss
mov
lea
xor
(bad)
stos
aam
fcmovb
xchg
(bad)
mov
push
fwait
out
dec
mov
jmp
jle
sub
add
scas
test
xor
mov
dec
inc
hlt
inc
dec
sbb
iret
pop
out
and
sti
jo
repnz
jle
aas
pop
mov
xchg
sbb
iret
(bad)
mov
aad
push
push
sbb
adc
cmp
mov
inc
daa
xchg
xlat
int
(bad)
and
cmp
mov
mov
fld
jecxz
mov
(bad)
sub
das
loopne
daa
sbb
adc
jno
cmp
inc
retf
push
fist
jo
scas
sbb
add
fisttp
add
xor
sub
pop
and
mov
and
sbb
pop
sub
out
lahf
inc
aam
mov
adc
jmp
popf
pop
mov
jns
rcr
in
popa
hlt
push
int
and
jp
add
popa
retf
sti
pop
inc
mov
xchg
sbb
sahf
ret
rcr
neg
xchg
cmc
imul
sbb
lea
(bad)
mov
mov
mov
stos
and
adc
(bad)
adc
aaa
mov
add
scas
mov
shl
in
add
add
in
cdq
das
lock
xor
les
(bad)
xor
mov
inc
sub
sub
sub
outs
int3
inc
rol
stc
test
mov
adc
push
pop
mov
xor
shl
mov
xchg
lahf
xchg
(bad)
push
rcr
enter
add
sub
int3
sbb
out
sbb
lods
int
ret
fdiv
push
jmp
mov
jne
xor
bound
ret
jmp
xchg
push
adc
mov
sbb
aaa
out
bound
add
mov
jns
(bad)
call
dec
loop
sbb
inc
xchg
xor
push
pop
test
idiv
imul
dec
fcomp
jbe
dec
pushf
stc
jne
jnp
ror
sub
dec
sub
dec
dec
in
sbb
test
mov
cmps
mov
and
jle
xchg
sub
jmp
ins
sub
push
and
mov
sub
add
(bad)
push
add
xor
dec
adc
rcr
(bad)
call
xor
(bad)
iret
or
js
cwde
loop
imul
xor
xchg
sbb
retf
or
popa
sub
push
(bad)
inc
mov
test
jno
jns
or
out
shl
inc
pop
push
xor
and
ret
jmp
scas
sbb
or
ins
mov
gs
lea
enter
cdq
hlt
xor
adc
xor
mov
pop
sub
inc
jp
call
int
sub
gs
xor
scas
xchg
test
ja
mov
xchg
sbb
ins
mov
or
ins
sbb
sbb
jl
or
jo
pop
mov
xchg
pop
or
pusha
inc
call
mov
sti
sbb
daa
inc
mov
pop
test
pop
and
inc
xchg
mov
sub
pop
mov
xor
fisttp
clc
cmps
outs
in
add
pop
add
jmp
lods
icebp
and
mov
push
jbe
pop
in
in
movs
and
adc
pop
or
pop
add
iret
cmc
xchg
daa
adc
xchg
in
xor
lods
or
lock
aam
scas
sbb
icebp
popf
pop
fistp
cmp
sub
sbb
fs
iret
shl
jg
mov
push
add
icebp
(bad)
jnp
inc
in
aam
and
xor
xchg
call
jle
mov
mov
arpl
es
dec
pop
mov
aam
xchg
xchg
cmp
and
rcr
dec
ror
das
loopne
out
inc
and
js
pop
(bad)
jmp
jb
xor
imul
enter
or
inc
(bad)
and
inc
dec
xor
cmp
lods
adc
or
dec
cmps
xchg
mov
push
cmp
pop
and
popa
aaa
js
adc
mov
out
jb
dec
stos
cmps
ja
push
pop
jmp
call
mov
cld
xchg
push
push
add
lods
in
sbb
and
out
mov
push
mov
stc
lods
adc
jge
clc
mov
xor
or
aam
sub
jb
cs
or
cwde
xchg
sar
dec
pop
pop
add
push
xor
fadd
push
lds
pop
shl
pop
pop
out
inc
mov
dec
cmp
lock
(bad)
inc
sbb
push
into
push
retf
addr16
mov
fisttp
or
or
mov
mov
xchg
sub
sub
inc
dec
pop
inc
add
icebp
rcr
pop
loopne
aaa
lds
sub
add
shl
popf
imul
retf
imul
xchg
dec
jns
jg
(bad)
aam
cmps
hlt
outs
nop
add
add
mov
inc
jecxz
mov
pushf
cmps
jb
ret
imul
jmp
add
mov
nop
mov
in
shr
xor
add
sbb
test
aas
je
inc
add
or
(bad)
iret
out
or
inc
sub
cmp
push
hlt
pop
dec
mov
or
push
jns
popa
js
jecxz
(bad)
inc
mov
sahf
mov
jbe
push
xchg
dec
outs
(bad)
or
cli
pop
xchg
mov
cmc
jo
lods
jne
lds
dec
sahf
inc
repnz
ret
popa
into
jmp
jne
out
jmp
pop
(bad)
push
bound
cmc
sub
lahf
fisttp
arpl
push
aas
push
daa
xchg
xor
mov
sbb
push
ret
jo
test
stc
into
and
xor
jo
jmp
lahf
adc
pusha
loope
push
mov
in
jmp
ins
leave
or
xchg
inc
das
rcr
adc
fucom
hlt
jno
sub
mul
push
mov
dec
arpl
adc
add
jge
test
mov
mov
in
pop
and
leave
mov
xor
stc
xor
cmps
add
or
dec
mov
inc
xor
push
cmp
stc
call
pop
dec
xlat
inc
jno
pop
outs
pop
cmp
jp
push
xchg
xchg
std
nop
clc
ins
or
jmp
lahf
jle
icebp
aaa
adc
cmp
or
int
xchg
in
xchg
cmps
cli
mov
fs
movs
test
loope
test
es
xchg
push
ss
xor
and
(bad)
data16
fwait
sub
retf
aaa
rcr
loope
in
loop
add
pop
sbb
push
cmps
xor
jno
mov
push
adc
dec
retf
dec
cmps
sub
pop
pop
xchg
dec
int3
sub
pop
mov
mov
hlt
into
sahf
lea
jnp
das
test
std
clc
sub
xchg
imul
xchg
mov
mov
xor
in
leave
int3
out
call
mov
cdq
add
out
ss
or
lock
out
cmps
(bad)
fdiv
mov
add
push
jp
xor
pop
dec
push
mov
ret
stos
rcl
and
jb
jecxz
or
cdq
(bad)
inc
push
push
push
cld
test
addr16
pop
mov
push
pop
stos
jns
mov
les
jbe
xchg
pop
fistp
cwde
push
aam
adc
cmps
outs
icebp
adc
or
dec
bound
inc
cmp
cmps
push
sti
repnz
push
inc
or
in
or
(bad)
and
and
out
inc
add
jecxz
in
xlat
and
jbe
or
mov
mov
loop
cmp
and
(bad)
or
sbb
xchg
(bad)
and
call
daa
cmp
ror
(bad)
hlt
pusha
sub
or
push
jnp
lock
push
lods
adc
pop
dec
dec
repz
int
or
scas
sbb
add
cmps
jg
dec
int
xchg
inc
jp
sub
iret
movs
jmp
xchg
cmp
jmp
test
sti
pop
pop
sub
out
ret
scas
dec
sub
ja
cmp
sbb
sbb
pop
retf
mov
sub
jl
div
jns
push
pop
sbb
cwde
fmulp
xor
mov
jo
add
fstp
sbb
dec
add
aad
cmp
outs
xchg
repnz
cld
mov
xchg
sub
push
inc
popa
pop
dec
sti
mov
jl
jmp
mov
inc
cmps
add
xchg
dec
ds
test
shl
or
adc
xchg
out
enter
pusha
push
cmovb
adc
pop
dec
loope
lds
int
arpl
inc
repz
into
je
mov
clc
xchg
pop
xor
inc
adc
push
jnp
inc
mov
inc
pop
add
jae
sub
dec
push
ficomp
mov
or
out
cmp
cmc
push
and
mov
rcl
in
stos
push
ret
lea
xor
es
cmps
rcl
xchg
rcr
mov
fisub
out
jnp
mov
inc
pop
fdiv
leave
mov
sub
sub
xchg
push
ret
xor
pop
jo
or
test
mov
inc
hlt
ret
dec
push
jae
push
pushf
xor
jg
sbb
mov
sub
int
mov
push
add
push
add
or
aaa
movs
ss
cmp
and
xor
or
xchg
ret
dec
add
push
push
fwait
mov
pop
sbb
sub
(bad)
xchg
fistp
push
dec
push
adc
sbb
repnz
sbb
outs
or
ret
retf
leave
push
jmp
mov
sti
test
xchg
jns
ins
popf
repz
xor
test
xchg
arpl
dec
mov
adc
xchg
popf
scas
fsubr
and
mov
cmp
push
leave
jmp
dec
pop
xor
loope
lock
movs
loopne
fmul
mov
ret
mov
daa
mov
out
fmul
cwde
test
ss
jle
int
sahf
add
(bad)
fdivr
push
int3
pop
add
cmp
pop
cwde
jge
push
mov
sub
ins
sahf
out
icebp
test
out
fs
fistp
inc
mov
jae
call
pop
adc
sbb
ret
sbb
add
(bad)
dec
hlt
xchg
sub
inc
int
pop
adc
outs
jp
jo
movs
addr16
jle
in
aas
jecxz
inc
cmp
jp
cwde
jae
push
mov
push
jg
mov
sbb
cmps
iret
jle
shr
adc
in
rol
xor
outs
jo
push
cmc
mov
cli
add
test
repnz
pop
pop
or
loope
mov
in
test
jno
gs
cmc
sbb
xor
push
push
dec
outs
out
sbb
add
xor
xchg
stc
test
jmp
inc
cld
mov
push
in
outs
pop
sti
xchg
inc
dec
push
jl
loope
pop
mov
sbb
retf
bound
sub
jle
icebp
adc
add
mov
push
jnp
or
movs
or
ds
out
jp
cmp
pop
mov
enter
xchg
xchg
jbe
imul
push
(bad)
dec
xchg
push
enter
fist
loop
inc
test
jl
aas
fwait
clc
shl
or
jb
jecxz
mov
xchg
retf
dec
fistp
mov
sub
stos
mov
fst
xor
inc
xor
inc
pusha
or
lods
pop
(bad)
in
xchg
outs
(bad)
into
push
fmul
jbe
in
add
mov
stc
dec
and
data16
out
mov
add
icebp
sub
std
not
adc
pop
out
ins
mov
inc
sar
data16
in
aas
lahf
push
ror
push
dec
sbb
int
push
jmp
jle
xchg
(bad)
imul
jmp
and
pop
or
pushf
leave
mov
or
out
add
add
test
and
(bad)
cmp
cld
and
loopne
add
xchg
cmp
stos
popa
adc
inc
mov
push
cmp
clc
(bad)
push
aam
xchg
mov
push
sub
add
push
out
dec
sub
scas
sbb
adc
(bad)
jae
mov
mov
push
stos
retf
inc
out
(bad)
or
cmp
fsub
pop
movhps
push
addr16
mov
and
jecxz
inc
pop
jae
cwde
or
and
mov
cmp
and
ror
bnd
cdq
popf
mov
add
arpl
sahf
pop
jg
les
outs
jl
clc
fst
(bad)
push
mov
mov
mov
lods
cli
mov
adc
in
addr16
xchg
dec
inc
js
add
nop
iret
push
retf
push
xchg
xchg
mov
cdq
das
fwait
sbb
and
adc
jne
cmps
dec
mov
ja
movs
lahf
cld
add
mov
in
pop
xchg
in
dec
mov
jns
fisubr
xchg
out
fstp
fldcw
and
xchg
dec
adc
dec
add
push
push
imul
dec
(bad)
imul
sar
push
test
sub
punpckldq
lea
dec
(bad)
(bad)
stc
loopne
mov
mov
adc
add
daa
inc
nop
pusha
test
sub
hlt
nop
lods
mov
neg
frstor
adc
outs
adc
push
cli
loope
call
jne
and
or
push
cmps
xchg
fwait
mov
adc
jbe
jae
pop
mov
xor
adc
jecxz
fcom
sub
std
int3
mov
mov
fwait
test
jnp
ror
sbb
push
dec
int3
test
adc
jmp
(bad)
movs
sbb
loopne
inc
mov
mov
push
stos
out
in
out
aad
and
dec
jp
mov
in
push
push
mov
dec
out
sti
mov
pop
cmp
mov
inc
mov
dec
or
push
std
adc
pop
jnp
clc
jmp
cmp
mov
into
pop
rcr
push
test
sub
adc
in
fcmovu
adc
add
dec
sub
stos
inc
or
mov
clc
mov
movs
fs
mov
jmp
dec
mov
mov
fild
sahf
push
ins
fist
push
aam
stos
(bad)
mov
add
jbe
xchg
lea
idiv
(bad)
jge
inc
mov
in
scas
pushf
or
stc
iret
div
xchg
adc
adc
mov
repnz
mov
lods
and
ds
test
xor
pop
jl
iret
jecxz
jg
lea
mov
xchg
xor
push
mov
sbb
movs
js
mov
(bad)
lea
cmp
fiadd
arpl
xor
(bad)
jmp
lds
je
loop
sbb
push
pop
popf
out
fst
sub
jl
sub
dec
(bad)
xor
jns
pop
xor
add
cmp
and
cmps
jnp
and
or
push
pop
data16
out
cli
nop
ins
xchg
sub
sub
popf
in
push
inc
lahf
dec
in
bound
rcr
inc
xor
push
mov
adc
out
push
add
test
jo
test
and
int3
icebp
loop
sbb
sub
mov
repz
pop
mov
mov
adc
push
jno
push
adc
jmp
mov
retf
mov
cmc
dec
dec
lahf
xchg
fwait
xor
or
dec
popa
dec
push
adc
xchg
fdiv
(bad)
cmp
dec
ficomp
or
adc
adc
push
cmp
pushf
loopne
mov
inc
or
pop
xchg
test
xchg
dec
xchg
or
sub
add
pop
imul
lahf
arpl
iret
and
loop
jb
pop
or
loopne
pop
cmps
ja
xor
adc
pop
xchg
push
sbb
jo
test
add
adc
xchg
jo
mov
push
cmp
or
fsub
cwde
add
retf
movs
nop
(bad)
sti
xor
push
push
push
inc
push
je
xchg
repz
mov
ficomp
lea
enter
adc
mov
xchg
jne
into
xchg
mov
test
scas
mov
sar
es
sub
pop
push
push
ds
sub
in
out
outs
pushf
jecxz
imul
xchg
push
pop
clc
mov
xor
mov
push
dec
cld
xlat
(bad)
lea
xchg
fwait
mov
jmp
push
pop
pop
jecxz
shl
mov
adc
sti
aas
add
lock
jbe
das
push
xchg
xchg
dec
daa
(bad)
mov
jg
cmc
into
pop
inc
test
retf
icebp
(bad)
test
add
imul
loop
pop
adc
in
mov
pusha
cmps
mov
in
cdq
loope
into
repnz
out
mov
imul
das
das
ret
leave
mov
(bad)
aas
int
cmps
mov
cli
ins
push
cld
mov
ss
fbld
(bad)
cmp
in
pushf
push
lods
jp
jmp
inc
and
mov
aam
xchg
outs
out
jmp
call
sbb
call
(bad)
fimul
int
push
fimul
mov
outs
push
lds
(bad)
cmp
xlat
sub
and
fistp
mov
popf
dec
pushf
out
jo
addr16
sub
fcom
icebp
mov
sub
les
cmps
adc
inc
repz
scas
jb
call
fs
dec
leave
pop
das
mov
cmp
js
xchg
dec
lea
sbb
dec
pop
sub
sbb
adc
inc
fadd
loope
mov
adc
(bad)
xor
das
lock
and
sub
jecxz
sti
loope
out
adc
cmp
cmp
and
and
scas
cmps
sbb
cmovb
xchg
popa
movs
loope
add
icebp
(bad)
popf
dec
or
ins
mov
retf
in
ja
mov
scas
sub
mov
or
movs
retf
xchg
cmp
cwde
jle
xor
add
jae
dec
repz
inc
push
aas
neg
loop
outs
scas
out
xchg
xor
or
dec
inc
rol
push
outs
lahf
push
and
sti
cmp
xor
retf
lds
adc
sbb
inc
out
out
mov
cs
pusha
inc
adc
std
adc
xor
push
call
gs
sbb
or
cld
loop
call
call
mov
or
nop
ins
in
or
lahf
xchg
ret
cld
fwait
xor
xor
jae
sbb
push
adc
in
mov
cld
push
daa
shr
inc
dec
sar
and
mov
dec
in
call
test
or
jbe
(bad)
adc
and
push
push
xchg
lods
adc
popa
sbb
push
hlt
dec
leave
aad
jmp
cmp
cmp
cwde
mov
push
sbb
ja
pop
dec
mov
mov
and
loopne
dec
rol
cwde
retf
ins
mov
nop
sub
adc
or
pop
es
mov
mov
mov
push
cmc
and
nop
fbstp
ret
add
cmc
iret
jle
adc
addr16
in
and
mov
mov
outs
movs
sub
cmps
jo
pop
lods
push
daa
push
loopne
mov
mov
test
in
cwde
push
inc
push
rcl
fwait
ins
jmp
sahf
mov
repz
mov
movs
inc
and
or
pop
imul
imul
ja
ins
push
push
push
retf
es
sub
lods
imul
push
sbb
mov
jg
scas
icebp
loope
in
out
and
xchg
or
xchg
cmp
adc
shl
cmp
data16
sbb
mov
and
push
pop
cmp
fisttp
test
cmc
inc
cmp
cmp
in
fcom
cs
xor
mov
adc
xor
mov
in
and
pop
loop
stos
and
ret
cli
ret
push
adc
adc
sbb
inc
sub
cmp
xchg
or
outs
and
fmul
inc
push
push
(bad)
sbb
movs
shr
add
or
or
ret
push
and
mov
ror
test
jae
xlat
sbb
fistp
pop
mov
movs
adc
sbb
xchg
add
push
cmps
ja
test
xor
ret
pop
clc
dec
jle
add
test
inc
sbb
loopne
cmp
fs
mov
cmp
addr16
xor
repnz
cmp
dec
fimul
mov
test
cmp
scas
xlat
push
imul
loopne
xchg
adc
cmp
dec
inc
sti
inc
push
jae
add
retf
dec
ds
push
inc
movq
out
div
xchg
lahf
push
pop
push
jmp
cli
xchg
add
arpl
sub
cwde
imul
aam
(bad)
ret
add
xchg
call
sbb
jae
jmp
mov
sub
jmp
and
mov
adc
daa
sbb
icebp
add
dec
loopne
dec
dec
inc
adc
add
inc
pop
xor
push
rol
lea
(bad)
and
sub
or
repz
ds
cdq
out
idiv
xor
or
mov
jl
daa
cs
and
mov
in
imul
jb
jnp
push
pushf
scas
sbb
gs
iret
ret
xchg
jb
mov
dec
add
(bad)
(bad)
sbb
daa
sub
dec
call
push
push
dec
icebp
cld
pop
out
stos
xchg
xor
mov
cmp
and
fisttp
call
es
jno
lds
jp
and
fidiv
jnp
and
push
ss
loopne
(bad)
fld
bound
jge
arpl
cmps
dec
mov
popa
or
into
retf
leave
aas
clc
xor
in
int
xor
mov
in
fiadd
jle
(bad)
xor
out
call
ret
or
inc
inc
inc
mov
not
adc
cs
sbb
xchg
das
inc
outs
aas
mov
test
movs
dec
sbb
inc
mov
pop
in
pushf
leave
adc
pop
dec
jb
mov
push
ss
adc
outs
push
fld
mov
lahf
dec
lea
inc
ret
dec
jne
test
mov
fisttp
jno
rcr
mov
sbb
cmp
pop
xor
out
cmp
jge
adc
(bad)
mul
jno
adc
or
imul
leave
ror
and
xchg
enter
jl
sti
in
pop
loope
push
cmps
push
or
dec
dec
dec
stos
pushf
dec
cmp
cmps
mov
jecxz
retf
cmp
xchg
enter
cmp
pusha
or
mov
mov
pop
cmp
aam
dec
out
int
test
sub
cmc
mov
(bad)
call
repz
mov
pushf
xchg
xchg
add
test
cmp
imul
(bad)
cmp
mov
out
jo
in
outs
cld
mov
mov
pop
mov
sahf
popf
push
cmp
stos
mov
mov
das
aas
das
pop
sbb
inc
jge
cmp
inc
adc
pop
cmp
xor
jmp
shl
retf
mov
jo
js
(bad)
adc
and
push
pop
jge
dec
pop
out
xchg
pop
cmp
mov
push
cmp
lea
mul
gs
clc
xchg
jecxz
int3
popa
bound
cs
inc
or
out
push
cmps
ss
ret
mov
cmp
(bad)
ret
inc
pop
mov
movs
rol
jne
aam
ret
cld
repnz
call
stos
sbb
test
or
jecxz
jae
clc
rol
add
mov
xchg
jl
push
sbb
sbb
cmp
push
sahf
std
dec
imul
jne
jo
movs
push
hlt
in
dec
push
push
add
sub
loopne
mov
mov
test
or
jo
pop
pop
fistp
pop
xor
scas
iret
add
fimul
jno
sub
les
adc
mov
push
adc
out
xor
push
repz
int
mov
mov
ss
pushw
shl
mov
xchg
add
movntq
out
jmp
sbb
icebp
imul
sti
inc
jae
adc
jo
int3
(bad)
(bad)
iret
(bad)
leave
fistp
or
xor
pop
ins
sar
repz
(bad)
mov
inc
mov
icebp
cmp
aam
pusha
inc
mov
sub
xor
jg
mov
xor
sbb
repnz
push
cmp
mov
in
test
add
inc
adc
std
rcr
adc
ss
scas
data16
adc
push
mov
cs
pop
test
jmp
mov
pop
out
mov
fidivr
enter
sbb
jle
aam
or
add
mov
push
(bad)
jge
div
pop
adc
in
pushf
mov
mov
cwde
pusha
loopne
fnstcw
or
fstp
sbb
pop
jmp
mov
mov
cld
out
jg
adc
sti
mov
ja
mov
sbb
jmp
cmp
or
sbb
xor
daa
(bad)
cmp
mov
leave
adc
fcomp
xacquire
mov
minps
push
outs
cld
repz
mov
xor
aaa
jne
mov
push
aaa
jae
stc
and
ins
add
sub
push
cmps
sub
dec
cmp
call
or
ja
sub
jns
pusha
jbe
mov
dec
arpl
pop
stc
popf
sub
xchg
mov
xchg
popf
adc
jle
push
adc
mov
jmp
cmps
add
jmp
cwde
dec
dec
lahf
cmp
cli
dec
mov
xor
dec
sbb
adc
fst
enter
ins
push
push
(bad)
and
ret
shl
adc
jle
sub
enter
stos
dec
sahf
loopne
popa
jo
ss
shl
add
mov
xlat
cs
and
cs
fadd
jns
in
jl
(bad)
std
sti
push
mov
push
in
stos
xor
icebp
out
stc
cdq
or
sub
sbb
adc
push
jne
adc
mov
mov
and
adc
movs
inc
xor
popf
cmp
in
or
pop
push
push
lods
ror
jge
xchg
(bad)
dec
xor
add
mov
ret
mov
adc
pop
inc
int
mov
push
out
adc
mov
or
ds
and
repnz
nop
push
fbstp
lods
js
and
pop
mov
mov
pop
test
mov
or
mov
fisttp
rcr
xor
scas
into
call
xchg
jle
mov
jp
push
sbb
or
sbb
adc
imul
cmp
ror
stc
xor
push
sbb
aaa
inc
xchg
stos
pop
retf
push
jl
or
or
mov
cmp
fnclex
adc
cld
nop
lock
ss
data16
dec
cmp
(bad)
jge
pop
and
sbb
addr16
rol
mov
inc
sbb
xor
iret
ds
cmp
pushf
popa
pop
jbe
sti
xchg
pop
xchg
in
fiadd
imul
addr16
mov
imul
test
lds
inc
add
sub
jbe
arpl
cmp
fwait
pop
loope
sti
dec
jmp
pop
aad
jmp
in
inc
cdq
neg
dec
push
xchg
mov
jge
add
xchg
scas
mov
mov
lahf
push
fnstsw
ss
inc
add
retf
xchg
fnstenv
cs
(bad)
(bad)
pushf
pop
mov
cs
mov
call
mov
pop
or
xor
adc
icebp
sub
mov
rcr
or
fwait
jg
mov
sbb
xchg
push
(bad)
(bad)
lods
jp
call
jl
xchg
fwait
jno
imul
dec
not
mov
mov
xchg
daa
adc
call
div
les
and
cmp
add
scas
inc
scas
mov
test
inc
push
sbb
mov
retf
frstor
pop
sti
cmp
jecxz
cdq
retf
repz
add
fdivr
mov
add
aaa
cld
outs
push
out
scas
sar
(bad)
xor
mov
inc
les
fdiv
cmp
sbb
cli
cmc
adc
and
dec
cmp
fs
sti
jmp
sub
fld
push
shr
cwde
adc
ins
sbb
sbb
loop
imul
scas
mov
(bad)
push
icebp
adc
es
test
movs
adc
jb
ficom
add
lock
nop
push
ss
xor
jmp
outs
mov
sub
ss
test
in
xor
mov
mov
cmp
inc
sbb
sbb
add
dec
xchg
repz
mov
xchg
mov
pop
stos
push
mov
push
(bad)
xor
cmp
add
pop
or
in
jecxz
mov
and
loope
sub
stc
and
or
push
pop
add
push
pusha
ja
cmps
push
and
fwait
call
popf
jne
mov
adc
call
out
mov
hlt
add
push
push
jns
push
xor
shr
test
xchg
das
(bad)
out
lods
das
push
pop
mul
cld
(bad)
add
push
jno
iret
hlt
or
in
stos
iret
jb
push
mov
mov
ds
repnz
outs
les
mov
xor
or
dec
fdiv
mov
fwait
mov
cmps
jmp
lods
retf
xor
dec
ret
mov
or
leave
test
and
cmc
mov
inc
(bad)
inc
mov
xchg
mov
cmp
cmp
stos
jp
xchg
xchg
test
jne
loopne
push
stos
mov
mov
jle
test
shl
out
mov
retf
loope
fild
mov
inc
cmp
dec
sbb
push
push
cmp
int3
ss
mov
jp
cmps
sub
(bad)
mov
sub
(bad)
call
ins
mov
cli
sub
cmps
jns
jg
in
neg
xchg
enter
sbb
das
push
ror
adc
add
inc
fld
add
xor
in
mov
jbe
call
jmp
js
cmp
shl
shl
jp
je
data16
push
sbb
aam
push
outs
push
cs
push
inc
sbb
xor
or
pop
das
dec
retf
mov
jns
nop
jo
jo
or
mov
in
cmp
pop
test
mov
lods
scas
or
gs
or
pop
(bad)
repz
movs
and
sbb
pusha
fs
or
adc
gs
mov
dec
je
mov
jno
mov
adc
stc
fbstp
iret
repz
mov
and
fld
sbb
jmp
(bad)
test
xchg
addr16
xchg
fmulp
and
cs
push
call
in
mov
out
ret
sar
repz
cs
movs
test
jns
aaa
gs
mov
jmp
imul
push
adc
test
and
cmp
inc
popa
fnsave
fs
ret
cmp
push
(bad)
imul
loopne
ret
sbb
cmp
cmp
out
les
mov
jo
and
mov
lock
mov
and
pop
ss
mov
mov
out
and
jns
sbb
mov
ret
mov
popa
push
xor
vmovntps
icebp
sub
mov
cmp
ins
sub
dec
mov
mov
adc
cli
mov
outs
repz
iret
dec
xor
xor
adc
or
mov
add
xchg
and
ror
xchg
mov
and
popf
movs
pop
lock
loopne
and
xor
(bad)
movs
stos
inc
inc
(bad)
adc
ret
ins
or
idiv
fist
pushf
outs
pop
test
dec
xor
pop
cmc
clc
pop
and
dec
mov
std
iret
imul
(bad)
mov
jb
mov
(bad)
adc
xor
call
test
aad
popf
sar
jbe
fs
cmp
ins
mov
outs
adc
mov
and
adc
mov
mov
or
inc
fstp
icebp
mov
ds
xor
pop
mov
cs
inc
jp
rol
aad
fisttp
push
pop
and
popf
inc
xor
imul
xor
ret
dec
arpl
xlat
stos
push
es
pushf
jge
arpl
stc
(bad)
lahf
mov
inc
test
call
or
jb
xlat
sbb
mov
and
stc
div
(bad)
push
jae
sbb
inc
mov
icebp
aaa
aas
mov
ja
jbe
mov
add
mov
int3
adc
sbb
mov
aam
sbb
rcl
rcr
mov
shr
jbe
inc
std
xor
loopne
stos
sub
int
test
test
dec
mov
in
pusha
jae
jno
pop
mov
inc
popa
push
push
mov
fidivr
mov
in
mov
lock
mov
add
shr
jbe
leave
loopne
movs
lods
or
aas
das
int3
retw
aaa
push
mov
pusha
fwait
adc
inc
sub
jmp
jecxz
mov
inc
adc
xchg
push
stc
popa
add
fst
shl
xchg
pop
ror
push
rcr
in
mov
arpl
retf
je
in
leave
repz
push
ret
push
adc
fs
dec
shl
cmp
out
push
retf
xor
rcl
jns
outs
mov
and
out
fwait
and
in
call
add
jmp
sub
cmp
int
inc
gs
inc
loopne
(bad)
xor
inc
sbb
mov
outs
mov
pop
dec
add
sbb
and
inc
(bad)
cmp
mov
pop
leave
add
imul
and
retf
cmp
in
jp
and
push
dec
jmp
push
sub
aaa
ret
push
inc
imul
enter
cs
mov
outs
lods
adc
enter
or
add
xor
popa
add
inc
fwait
sbb
push
pop
(bad)
in
and
cmps
retf
shr
sbb
jno
inc
cmp
or
push
rcl
xor
fidivr
xor
call
jae
mov
daa
cdq
cmp
aad
sbb
clc
mov
sub
leave
(bad)
arpl
pause
retf
popf
sub
pop
xchg
fnstsw
sub
sbb
and
xor
cmp
ss
sahf
pop
dec
popf
data16
sbb
fdivr
cdq
enter
cmc
ja
dec
popf
fcmovb
push
mov
jp
or
inc
out
ret
xor
or
ss
inc
into
cld
xor
std
out
(bad)
sbb
aaa
mov
arpl
inc
mov
adc
sub
mov
xchg
pop
in
out
psrlw
(bad)
add
xchg
arpl
sbb
imul
mov
xchg
test
mov
cmp
cmp
and
ins
(bad)
retf
fmul
jnp
ins
inc
dec
imul
jmp
mov
jl
and
gs
cmp
inc
and
jo
daa
or
in
xchg
lock
mov
sbb
jecxz
cmp
xlat
jo
pop
jmp
mov
imul
ds
shl
sbb
popa
pop
add
jnp
addr16
sub
ja
pop
clc
push
popf
fisub
mov
jge
inc
jge
sbb
leave
inc
test
test
push
xchg
and
inc
retf
sbb
daa
mov
mov
xor
js
in
dec
jne
test
cmp
cmp
aaa
in
adc
push
loope
fst
test
scas
clc
adc
dec
xchg
jnp
or
xchg
pop
mov
into
push
mov
add
and
inc
or
outs
mov
jno
mov
and
sbb
mov
lds
sar
sbb
ret
push
fdivr
sub
pop
jl
movs
cs
mov
xchg
imul
adc
push
jo
retf
int3
mov
pop
(bad)
jns
mov
mov
add
sub
or
jl
fadd
ss
into
add
xchg
cmps
and
or
cmp
int3
dec
xor
popa
push
fimul
inc
mul
cdq
out
pop
xchg
sbb
add
imul
cli
les
or
mov
inc
add
mov
(bad)
mov
aad
jmp
mov
neg
dec
push
pusha
pop
fsub
ficomp
fwait
xor
retf
aam
pop
enter
sbb
rol
cmp
clc
out
mov
cdq
(bad)
loope
cdq
popf
add
js
cmp
sub
das
(bad)
xor
jo
jle
or
sahf
out
or
xchg
popa
or
lods
mov
adc
pop
jp
xor
inc
ret
ret
or
or
jo
leave
or
jo
test
movs
xor
frstor
js
or
mov
enter
nop
fnstenv
push
cmp
test
or
or
xor
and
nop
mov
inc
or
dec
add
adc
xchg
lahf
jb
cdq
adc
fild
xor
xor
ffree
xabort
and
jo
adc
or
mov
out
cmc
lahf
sub
jnp
push
ins
or
push
ss
retf
push
enter
in
icebp
mov
lock
out
mov
lock
lock
clc
push
adc
sub
mov
das
xor
cli
mov
jno
icebp
in
push
(bad)
ds
pop
outs
stos
adc
das
adc
dec
inc
and
mov
lea
push
xchg
fiadd
rol
sbb
aad
cdq
jnp
imul
jmp
xchg
lea
jecxz
jp
icebp
and
pop
std
nop
add
(bad)
fadd
inc
dec
ret
shr
xor
ds
mov
xor
cmp
sbb
test
push
(bad)
and
mov
mov
shr
jb
xor
xor
cmp
add
ins
arpl
mov
mov
xchg
dec
dec
hlt
out
add
xchg
mov
ja
pop
xchg
push
dec
jg
into
pop
or
xchg
adc
xchg
std
pushf
in
arpl
popa
mov
in
iret
mov
test
jbe
pop
mov
clc
aas
shl
pushf
call
cli
test
add
sub
push
jl
xchg
popa
in
rol
or
mov
ret
popa
fs
adc
push
in
cld
sbb
es
into
stos
pushf
push
cmovo
cmps
iret
jmp
inc
test
in
mov
aaa
addr16
into
(bad)
xor
mov
xchg
mov
fiadd
mov
mov
(bad)
mov
ret
daa
int
stos
test
sub
cmp
push
outs
dec
mov
inc
enter
fst
inc
jns
call
push
mov
(bad)
cld
sub
(bad)
lock
div
mov
loop
(bad)
jle
ja
cmps
cmp
int3
fwait
gs
dec
xchg
adc
clc
xchg
stc
xor
inc
cmp
add
daa
repz
lea
dec
mov
retf
lock
call
and
jno
jbe
push
inc
add
popa
pop
pop
pop
mov
fxam
ret
lock
pop
rcr
xlat
mov
repz
cwde
mov
sti
push
or
fild
movs
xor
inc
add
jno
sub
pop
xor
jb
fbld
or
jae
imul
shl
xor
inc
mov
mov
jmp
xor
fdivr
jmp
jbe
(bad)
addr16
ins
push
dec
sub
pop
test
ss
sub
mov
stos
inc
add
outs
add
push
(bad)
mov
pop
lahf
jecxz
sub
nop
icebp
int
cwde
xor
mov
mov
aam
in
ja
xor
test
xor
enter
push
inc
cmp
jg
outs
mov
rcl
xor
pushf
(bad)
sbb
xchg
mov
add
jp
mov
mov
es
(bad)
cs
push
arpl
cwde
es
sbb
stc
fsubr
pop
sbb
jnp
gs
outs
mov
pusha
dec
movs
aaa
dec
pop
mov
scas
cli
push
lahf
repz
ins
cld
inc
cmps
dec
inc
jge
lea
and
jbe
repnz
adc
cmp
cwde
dec
pop
clc
sbb
jmp
push
mov
and
dec
and
data16
xor
mov
fist
jle
adc
sar
inc
push
inc
retf
fild
or
xchg
stos
mov
movs
mov
or
add
loopne
cli
pop
ja
popf
nop
xor
mov
jbe
inc
ins
sahf
aad
fld
lods
int
ins
sub
cmp
and
pop
test
mov
fadd
xchg
(bad)
movs
mov
rcr
into
mov
mov
mov
jbe
data16
cld
push
add
(bad)
rcl
push
dec
movs
cmp
mov
xchg
or
fnstenv
adc
add
pop
icebp
pop
xor
sbb
xlat
mov
mov
sbb
aam
imul
push
retf
pop
lods
in
test
mov
sub
jae
fwait
xor
repnz
jnp
jne
sub
xlat
iret
ins
shl
imul
call
dec
jecxz
sbb
mov
cwde
iret
imul
inc
and
mov
inc
fwait
push
xlat
lods
pushf
and
aas
mov
ror
outs
jmp
lea
(bad)
and
push
imul
(bad)
mov
data16
jle
inc
cwde
out
(bad)
add
push
out
test
loopne
aam
je
mov
bound
mov
out
lock
jnp
hlt
push
test
sbb
ret
inc
mov
out
sub
add
mov
pop
mov
mov
out
fs
iret
and
addr16
test
ret
jno
and
jp
mov
inc
mov
mov
or
add
icebp
and
rol
(bad)
ss
fisub
jbe
pop
push
xor
aas
push
dec
fisttp
es
inc
adc
ja
add
stc
test
mov
lods
inc
mov
test
adc
cmp
test
mov
stos
arpl
(bad)
movs
addr16
arpl
and
(bad)
mov
jl
test
es
push
retf
arpl
jae
out
push
(bad)
push
fcom
inc
repz
push
and
jge
fsubp
cwde
xor
cs
sbb
scas
mov
mov
mov
mov
jecxz
jecxz
xchg
es
cmps
dec
inc
rol
test
sub
imul
push
push
repnz
out
gs
scas
lods
lock
nop
out
iret
test
arpl
adc
add
stos
and
clc
fidiv
cmp
mov
shl
lods
hlt
push
push
cmp
or
ss
push
cmps
loop
pushf
mov
jge
pop
push
pop
out
out
sbb
icebp
jbe
in
loope
jl
into
test
fnsave
mov
jo
gs
loope
stos
test
addr16
scas
arpl
cmp
dec
cmc
pop
and
cwde
and
or
cwde
loope
cli
jle
in
fild
fcomp
into
out
dec
(bad)
iret
imul
sbb
pop
inc
call
add
mov
fmul
xchg
dec
std
or
jae
mov
cmps
xchg
jbe
and
xor
add
xchg
fnsave
sbb
call
ds
dec
inc
adc
add
cwde
repnz
popa
mov
push
cld
aam
pop
je
bound
das
add
xor
aam
xchg
iret
mov
enter
dec
sub
xor
out
xchg
sub
aas
lds
std
inc
xchg
repnz
fsubr
mov
(bad)
stos
cmp
aaa
retf
mov
vpperm
mov
xor
jo
test
xchg
add
cmp
jne
jl
test
jg
or
mov
mov
xchg
call
outs
(bad)
xor
adc
xchg
mov
dec
fdivp
push
rcl
sub
test
mov
cmp
loope
mov
cmp
mov
icebp
daa
pop
jnp
ror
push
and
sahf
pop
mov
mov
jne
push
je
push
clc
sub
sub
sbb
adc
mov
loop
cmc
mov
fadd
ret
popa
jmp
ins
pop
dec
push
pop
xor
int
sub
ror
sti
test
sub
mov
test
add
sahf
ja
pop
repz
xchg
push
int3
ss
sub
fnstcw
inc
mov
loope
push
scas
push
or
push
sbb
popa
pop
push
dec
pusha
pop
lahf
adc
test
imul
mov
xor
fstp
xchg
data16
mov
jp
ss
and
add
imul
lods
rol
cmps
lahf
push
inc
retf
cmp
int3
push
jns
ds
dec
std
in
sti
mov
daa
dec
test
cwde
(bad)
xlat
outs
jecxz
pop
bound
pusha
fdivr
cmp
or
aas
xchg
mov
retf
clc
mov
mov
jne
stos
scas
jno
lock
mov
cli
sub
ds
popa
(bad)
stc
mov
add
fdiv
push
out
or
imul
cmp
pop
aad
test
addr16
add
pop
xor
dec
bnd
push
sahf
cli
(bad)
jmp
aaa
dec
push
xchg
adc
mov
leave
dec
sti
ins
cmps
cmp
sbb
mov
cwde
fldcw
cmp
or
push
in
mov
sbb
inc
lea
loopne
sahf
shr
lahf
int3
in
mov
retf
xchg
jl
lea
clc
mov
or
inc
dec
pop
popa
or
sbb
mov
ret
xor
jl
xchg
leave
dec
mov
(bad)
enter
(bad)
inc
adc
outs
jl
repz
nop
adc
xchg
jl
into
cmps
pop
idiv
sub
ret
mov
neg
xor
dec
mov
ret
sub
sbb
mov
jle
leave
ret
cmp
adc
mov
adc
cmp
jmp
enter
test
push
push
xor
cmp
sub
sub
inc
lahf
dec
pop
retf
mov
movs
test
add
add
aam
xor
pop
xor
mov
in
and
push
inc
lods
imul
in
jae
jl
ins
not
js
dec
fldenv
pop
mov
push
xchg
add
retf
test
xchg
cwde
in
pop
mov
out
push
xor
add
(bad)
loop
or
xchg
loop
outs
sub
and
xor
cwde
fs
dec
pop
int
sti
imul
fcomp
sbb
lods
iret
(bad)
or
jmp
sbb
mov
sub
adc
mov
jmp
shl
ja
test
shl
mov
fst
retf
xor
pop
adc
inc
xor
adc
cmp
fcomp
mov
jp
sbb
sbb
mov
xor
lods
jns
adc
jle
jge
and
mov
cmps
inc
cmp
cmp
out
inc
inc
int
dec
std
in
rol
punpckhdq
bound
aad
mov
jae
pop
sub
outs
mov
pop
fdivr
sbb
shl
jne
fs
inc
pushf
cli
fiadd
jecxz
pop
jne
outs
xchg
sub
pushf
mov
retf
stc
jmp
jmp
sbb
mov
fwait
mov
fstp
xchg
cmc
sub
xchg
and
mov
int
fisttp
mov
fld
pop
and
neg
or
(bad)
imul
into
jnp
mov
dec
fwait
xor
xchg
mov
mov
xor
mov
and
cld
ds
stc
mov
jns
sti
imul
jmp
inc
iret
add
push
push
aaa
inc
cmp
mov
cmp
add
or
dec
xor
adc
xchg
xchg
mov
test
mov
rol
adc
cmp
mov
push
add
inc
sub
data16
mov
jmp
inc
sub
mov
bound
pusha
rcl
jb
mov
jmp
adc
and
sub
lods
dec
dec
mov
scas
ror
fmul
inc
adc
cmc
inc
mov
cmp
cmp
push
nop
popf
sbb
mov
je
dec
sbb
lods
xchg
xchg
ja
fwait
and
(bad)
int
sub
mov
scas
mov
pop
push
jae
sahf
mov
push
sub
mov
pop
pop
pop
sbb
loop
and
call
ins
jbe
pop
inc
sbb
std
pop
lahf
outs
ins
mov
clc
lock
movs
je
fst
and
pop
adc
dec
dec
sub
shr
jnp
xor
pop
imul
ret
push
movs
sub
mov
adc
outs
int
arpl
sahf
in
mov
test
push
mov
mov
jae
enter
popa
pop
xchg
(bad)
sti
div
inc
xchg
imul
mov
(bad)
jmp
xchg
push
not
shl
and
and
sub
rcl
cdq
xchg
pop
loope
xor
and
add
adc
enter
ins
int
jo
cmp
mov
inc
sub
push
and
mov
adc
(bad)
push
xor
and
sbb
daa
pop
stc
(bad)
das
xor
pop
sbb
xlat
and
pop
les
jmp
mov
or
jg
adc
nop
pop
lea
add
ss
inc
mov
add
dec
in
jp
sub
loope
cmps
in
xchg
and
dec
or
ja
aad
or
push
or
cmp
outs
aaa
loop
pop
pop
icebp
and
mov
push
inc
adc
lods
and
lds
mov
neg
push
ror
stc
lods
lahf
test
sbb
pusha
lea
(bad)
mov
or
pop
push
rcr
or
jbe
in
and
popf
jo
sbb
lock
xchg
cmp
cmp
mov
push
sti
test
add
outs
(bad)
cmp
jle
dec
ror
sub
adc
aaa
mov
ret
aaa
cmps
xchg
(bad)
int
pop
sbb
cmp
pop
push
int
add
push
push
adc
loopne
in
push
jmp
lahf
add
jne
cmp
loope
imul
fidivr
fwait
dec
xor
aam
pop
loope
jbe
xchg
call
in
dec
enter
cmc
sti
mov
pop
cld
cmp
xchg
or
cmp
aad
pop
rcl
dec
pop
fld
push
aad
mov
jo
xor
push
mov
gs
fwait
add
pop
sbb
xchg
pop
or
loope
rcr
ins
jmp
mov
ucomiss
adc
cs
scas
mov
mov
sbb
or
aaa
xchg
mov
out
les
inc
cs
xor
enter
push
pop
dec
popf
inc
mov
pop
lea
sbb
inc
xchg
arpl
xor
in
fs
sub
xchg
sbb
dec
gs
lods
mov
fmul
mov
jno
pusha
inc
fisttp
push
adc
dec
movs
ss
and
in
stos
jns
push
leave
retf
inc
pop
out
push
or
js
xor
and
clc
sti
fst
dec
sub
inc
retf
push
xchg
or
inc
scas
mov
mov
and
pop
movs
nop
jo
sbb
(bad)
jmp
dec
sub
(bad)
out
xchg
sbb
push
call
jns
fld
pop
stos
and
jnp
stos
jno
jmp
sub
or
(bad)
in
xor
mov
mov
jmp
in
mov
push
dec
xor
shl
sub
das
clc
mov
out
xchg
mov
and
sub
jl
scas
add
out
pop
ins
push
pusha
mov
imul
clc
push
mov
add
inc
xor
adc
xchg
outs
in
xchg
in
pop
inc
out
mov
in
mov
jg
test
mov
mov
pop
leave
call
mov
idiv
jbe
rcr
repz
and
adc
mov
cwde
test
call
iret
fwait
je
dec
mov
and
outs
push
cmp
cmps
arpl
dec
enter
push
sbb
cmps
jo
cwde
loopne
pop
pop
push
mov
test
dec
icebp
clc
nop
dec
lods
mov
cmp
jge
xchg
mov
mov
jle
push
push
add
pop
jl
and
cli
xchg
jg
adc
pop
xor
sbb
adc
outs
adc
retf
jmp
xor
int
in
lds
dec
jnp
mov
(bad)
retf
or
xor
mov
das
leave
test
push
movs
cmp
fs
jmp
mov
shr
xchg
or
fisubr
fnstcw
pop
xor
sbb
es
xor
ror
cmps
push
mov
into
(bad)
pop
cwde
mov
je
popa
mov
imul
inc
and
fisubr
clc
int3
ins
or
fs
ret
pop
push
xor
(bad)
popf
push
shl
es
out
out
cmp
and
dec
jae
adc
sbb
cmp
or
mov
cmps
cmps
inc
es
push
or
in
test
test
and
xchg
and
jg
imul
dec
fnstenv
cmp
push
xchg
dec
xchg
gs
addr16
mov
add
test
or
pop
mov
call
(bad)
test
jbe
inc
mov
cs
sti
popf
push
add
push
lods
jmp
jp
jbe
retf
in
xor
jecxz
jo
xchg
jns
pop
or
inc
repnz
mov
add
sub
xchg
retf
fidivr
adc
rcr
cmp
in
(bad)
(bad)
stos
sbb
pop
pop
and
mov
inc
out
mov
add
nop
loope
sub
push
mov
out
cmp
add
test
add
movs
push
cmps
into
adc
dec
push
xor
pmullw
(bad)
cld
adc
mul
inc
test
adc
shr
ror
xor
mov
in
mov
loop
adc
mov
push
xchg
xchg
les
push
pop
aaa
dec
adc
push
vmovaps
cmps
scas
stos
mov
push
arpl
loop
inc
jl
fadd
pusha
sbb
mov
ins
mov
movs
mov
out
add
push
push
sub
ret
fs
dec
xor
push
sub
cmps
mov
cwde
adc
das
xchg
or
rcr
int
jb
adc
cmp
imul
or
cld
push
imul
addr16
xchg
sub
test
mov
nop
jecxz
out
iret
fdiv
mov
mov
imul
push
add
adc
jb
jle
and
lods
mov
sub
popf
dec
add
push
push
pavgb
and
inc
cdq
ins
fcmovnbe
std
cmps
pop
enter
or
or
scas
jns
mov
push
dec
sub
fistp
xor
inc
or
cld
push
shl
lock
imul
push
xchg
mov
in
add
mov
cmps
int
call
cmps
lods
dec
xor
sbb
mov
sbb
rol
adc
lea
cdq
cmp
in
mov
(bad)
xchg
jg
out
push
cmp
lods
mov
aad
xlat
pop
bound
lds
xchg
cmp
push
cmp
cmp
inc
xor
fistp
or
scas
jno
ror
fs
xor
retf
(bad)
sbb
push
cmp
aad
loop
lea
cmp
scas
add
lods
hlt
call
push
cmp
sub
mov
repz
fs
add
loopne
ror
or
pop
dec
fwait
jns
imul
sub
add
xchg
push
lods
icebp
push
inc
cmp
xor
or
lds
jb
xchg
xchg
in
icebp
fistp
sbb
int3
(bad)
mov
cmp
push
ins
sti
add
lods
adc
aas
ror
jbe
stc
aam
sbb
pop
jmp
or
pop
(bad)
(bad)
jle
inc
and
(bad)
jl
cmp
gs
and
push
call
adc
and
stos
and
xchg
inc
int
das
fidivr
shr
outs
stos
and
cmp
scas
les
push
sub
cmp
adc
mov
inc
jo
cdq
dec
imul
inc
inc
pop
bound
or
popf
jbe
scas
push
ficom
add
xchg
xchg
(bad)
jle
dec
inc
mul
lds
mov
mov
sbb
mov
mov
push
mov
adc
rol
test
push
pop
xchg
ins
jne
daa
(bad)
loop
idiv
pop
gs
dec
jmp
sbb
out
and
mov
pop
ret
sub
fisttp
cli
pop
push
add
mov
add
jmp
int3
xor
or
xor
movs
fwait
sbb
cmp
outs
add
mov
sahf
fst
scas
dec
mov
adc
inc
push
inc
mov
jno
aad
sub
add
mov
repz
pushf
test
sti
clc
ins
adc
sub
jl
add
xchg
adc
adc
mov
lahf
sub
pop
and
dec
iret
push
xor
test
popf
and
mov
mov
imul
movs
std
(bad)
test
inc
inc
or
mov
ss
mov
inc
lea
xor
aad
ficom
sbb
adc
cwde
jp
push
or
test
cmp
aas
jo
cmp
dec
cdq
mov
loop
mov
sub
fwait
test
cmp
(bad)
pop
jecxz
popf
aaa
push
jmp
and
pop
movs
nop
out
mov
ins
das
fisttp
xor
(bad)
dec
and
mov
mov
mov
jnp
sub
sub
std
shl
jne
std
retf
div
outs
xor
and
cmp
push
and
add
cwde
and
mov
add
iret
mov
mov
repz
lods
(bad)
or
mov
fwait
data16
repz
pop
stos
stc
loope
and
retf
xor
sbb
sbb
pop
push
test
test
jmp
test
and
add
sbb
dec
sbb
push
jb
sbb
out
mov
sar
scas
xor
jp
(bad)
cmp
nop
mov
stc
jle
adc
sub
arpl
push
enter
clc
addr16
and
mov
sbb
and
mov
adc
pop
test
mov
mov
loope
paddusb
push
test
(bad)
fisttp
shl
arpl
lods
arpl
push
shr
out
int3
or
mov
add
das
sti
pop
sub
sahf
stos
cmp
cmp
jp
sbb
test
ret
pop
mov
cli
lods
aas
add
iret
dec
jbe
(bad)
dec
sahf
xchg
xchg
sbb
pop
adc
(bad)
jg
(bad)
fucomi
in
es
ins
mov
bound
lea
cdq
test
inc
adc
imul
lods
fidiv
xor
dec
push
lods
mov
lods
out
loope
jno
pushw
movs
cmp
fsub
ins
xor
dec
cdq
cmp
sbb
(bad)
out
xor
jns
dec
pop
jno
ror
(bad)
sti
add
push
mov
add
clc
cmp
pop
repz
hlt
es
xchg
fdivr
inc
sbb
xchg
push
mov
fwait
arpl
inc
sti
imul
jnp
lock
shr
cwde
dec
leave
lods
test
add
aas
mov
lods
mov
dec
jno
mov
xchg
dec
divps
pop
fiadd
push
mov
dec
call
shl
xchg
xor
pop
fst
inc
or
imul
push
out
mov
pop
int3
repnz
adc
xor
adc
mov
rol
popf
rcr
push
and
stos
xchg
jmp
sbb
pop
sub
not
cmp
js
adc
jge
xor
push
inc
or
movs
pop
not
mov
scas
adc
pop
sahf
mov
ret
pop
xlat
mov
aad
mov
test
jne
sar
cld
pop
(bad)
pop
push
push
sbb
jbe
shr
rcr
push
addps
push
mov
dec
mov
sub
idiv
call
es
dec
push
jae
aaa
dec
js
popa
rol
sub
and
loopne
pop
in
jno
cdq
ret
movs
hlt
xchg
cmp
enter
call
sub
int
inc
into
mov
adc
popa
es
inc
sbb
fwait
or
rcr
and
xchg
xlat
leave
inc
cmps
inc
pop
mov
xchg
jge
dec
ret
mov
mov
sahf
mov
sbb
mov
popf
mov
and
mov
dec
scas
mov
jmp
sub
fidiv
dec
int
mov
ds
mov
mov
xchg
xor
mov
cs
cmp
add
imul
jecxz
mov
sbb
and
or
out
cli
push
and
stos
aad
pop
sub
adc
push
xchg
sub
test
iret
add
push
and
jno
mov
add
sbb
icebp
scas
jo
ins
(bad)
fwait
mov
sbb
dec
retf
sahf
jnp
mov
in
(bad)
cdq
cli
rcr
(bad)
jle
int3
xor
mov
gs
mov
push
sub
dec
mul
xchg
retf
jge
pop
cli
in
sub
add
(bad)
sbb
stc
and
jge
dec
add
(bad)
xchg
lods
aaa
push
(bad)
(bad)
or
mov
adc
add
icebp
push
or
xor
xchg
jb
mov
test
dec
punpcklbw
and
(bad)
das
ss
popa
aam
inc
les
xchg
mov
inc
sbb
jae
fiadd
xchg
inc
mov
(bad)
cmps
stos
mov
stc
outs
pusha
dec
jl
inc
outs
cmc
icebp
int3
jp
stc
ss
cmps
scas
add
pushf
fld
sub
(bad)
cmp
in
cld
aad
jae
sub
and
jne
push
popa
in
jmp
push
enter
and
outs
std
sbb
sar
fidivr
adc
inc
icebp
lods
push
outs
push
outs
add
mov
cs
mov
adc
or
xchg
inc
mov
or
pushf
inc
rcl
pop
xor
in
(bad)
int
mov
std
sub
pop
sub
inc
aaa
hlt
xchg
(bad)
fcomp
pop
sub
or
enter
jmp
loopne
shr
pushf
aaa
mov
mov
repz
js
test
mov
push
(bad)
mov
xor
pop
imul
iret
(bad)
lock
mov
xchg
dec
pushw
mov
dec
cmp
(bad)
int3
push
and
sub
(bad)
or
sbb
push
leave
into
popa
in
out
or
les
(bad)
loopne
outs
dec
idiv
pop
or
imul
mov
into
cmc
outs
fs
mov
outs
dec
add
ret
fld
add
mov
or
pop
lds
dec
mov
sti
add
ja
jg
jno
jmp
jl
fbstp
enter
into
pop
xchg
and
out
dec
(bad)
mov
xchg
lahf
sbb
mov
cmc
or
xor
mov
gs
sbb
cmp
fiadd
test
jnp
adc
nop
dec
out
stos
je
mov
inc
jg
inc
gs
repnz
xchg
inc
mov
aaa
xor
popf
frstor
out
inc
stos
sbb
repnz
stos
cmp
cmp
mov
push
mov
test
(bad)
mov
sub
cld
cmps
sti
xor
sahf
cmp
adc
out
out
mov
out
cmc
test
jnp
mov
jno
loop
jmp
inc
and
mov
shl
adc
scas
mov
leave
cmp
lods
inc
adc
imul
add
mov
and
and
cld
xchg
and
or
sub
add
mov
dec
xchg
fisubr
push
(bad)
(bad)
sbb
dec
push
dec
and
scas
pop
push
lahf
call
inc
pusha
xchg
in
fist
bound
mul
outs
cdq
hlt
jo
and
adc
and
dec
aas
mov
(bad)
push
clts
pop
pop
sbb
loopne
sub
and
push
lods
les
dec
aam
jne
push
push
dec
rol
pop
jp
or
and
pop
cmc
mov
or
std
daa
stos
mov
ins
sub
aad
test
push
jecxz
clc
push
mov
sbb
jmp
fcmovnb
xchg
push
out
pop
idiv
stos
adc
(bad)
mov
pusha
jo
jo
outs
stc
pop
mov
ss
pop
mov
push
xor
imul
mov
pusha
add
popa
pop
add
jge
push
pop
cmps
mov
cmps
push
scas
gs
lahf
call
xchg
xchg
add
jg
or
xchg
xlat
test
dec
popf
or
or
xchg
jg
jbe
(bad)
mov
jbe
enter
push
xlat
scas
mov
cmp
clc
jbe
rcr
dec
jp
cmp
(bad)
xlat
jmp
cmps
push
jge
icebp
mov
pop
mov
pop
fldcw
sahf
hlt
das
push
outs
cmp
adc
xchg
fisttp
push
add
stos
jae
dec
cmc
shl
mov
cmp
xor
inc
imul
cmps
xor
popa
repnz
aad
imul
mov
or
dec
int
popf
jns
dec
cmp
push
test
fstp
outs
iret
movs
into
fdiv
xor
rol
mov
je
cwde
sbb
bndstx
imul
sub
sbb
arpl
outs
test
fmul
(bad)
enter
xor
cmps
pop
nop
ficom
mov
cmp
or
or
int
and
mov
jne
loopne
data16
call
jecxz
lods
cld
and
pop
stos
pusha
test
mov
loope
xchg
mov
test
in
(bad)
cmp
cmp
mov
dec
push
ss
cmps
les
or
cmp
fisubr
sub
test
int
jl
xchg
scas
push
mov
iret
push
jle
dec
cdq
dec
xchg
in
mov
scas
popa
jmp
shr
jae
cmp
mov
test
jle
inc
push
add
add
mov
mov
pop
push
mov
xchg
add
cdq
(bad)
int3
ficomp
sbb
or
adc
inc
inc
cmp
pop
mov
gs
pop
and
inc
or
and
pushf
js
movs
add
or
sub
pusha
mov
add
stos
loopne
loopne
pop
cdq
xchg
xor
adc
inc
not
enter
ficom
jmp
fimul
pop
xor
jecxz
add
retf
mov
retf
(bad)
jae
xchg
mov
aas
add
outs
pushf
pop
pushf
xchg
adc
push
bound
outs
adc
cwde
lahf
cmp
cdq
dec
inc
mov
cdq
or
test
inc
addr16
pop
cmp
mov
pop
mov
sub
movs
mov
sub
std
jmp
out
and
dec
addr16
mov
push
dec
xchg
push
jae
sbb
adc
pop
outs
pop
push
inc
fdivr
div
pop
dec
xchg
cmps
aad
mov
je
je
mov
adc
add
pop
rcr
xchg
test
cmp
sub
mov
popa
jns
popf
in
cld
je
adc
bound
mov
dec
dec
push
call
sbb
gs
adc
test
mov
pop
inc
inc
rcl
xchg
cmp
ins
(bad)
sbb
mov
das
outs
dec
cmc
gs
jnp
fldcw
(bad)
outs
lea
or
jle
jl
dec
inc
fmul
not
dec
fcom
fwait
(bad)
adc
dec
fadd
enter
(bad)
mov
push
xor
sub
jle
cwde
sbb
stc
jae
cld
sahf
pop
jbe
fidivr
popf
test
push
dec
addr16
jmp
movs
mov
jge
ins
and
in
repnz
mul
mov
lahf
jmp
inc
xor
cdq
push
jmp
sbb
mov
fcom
pusha
call
bound
xchg
les
and
inc
lock
dec
lods
ss
xchg
out
or
push
in
(bad)
imul
aaa
stos
shl
add
js
cmp
push
jmp
test
cwde
adc
repz
cmp
adc
adc
inc
mov
or
xchg
cli
gs
dec
push
sbb
fnsave
add
sbb
into
(bad)
in
ror
in
js
adc
cmp
sub
les
ins
dec
ins
jae
test
jno
(bad)
movs
fsubr
repnz
push
jl
xor
loope
ins
(bad)
lahf
iret
adc
jae
push
adc
bound
sti
xchg
jae
(bad)
aas
(bad)
fmul
inc
xchg
sbb
add
jb
movs
clc
inc
ins
pop
mov
out
jp
jns
sete
js
jno
add
mov
data16
nop
data16
ror
fcomp
inc
lods
out
retf
cmp
dec
test
mov
dec
fidiv
in
cli
lods
fwait
sbb
mov
ins
mov
cmp
jne
xchg
cdq
stos
inc
inc
push
push
and
cld
cmp
inc
(bad)
loope
pop
cs
lds
cli
xor
and
movs
int3
add
push
fisttp
movs
arpl
push
pop
dec
jge
into
pushf
inc
cmp
(bad)
mov
ret
idiv
cmp
les
fisub
mov
xchg
mov
xchg
xchg
jmp
xor
in
or
lods
shl
das
adc
mov
test
jge
(bad)
xchg
pop
data16
push
stos
and
pop
cli
fist
hlt
fisttp
dec
jne
pop
pop
or
xor
fild
sar
or
bound
imul
mov
ret
mov
jge
sub
xor
loope
inc
rcr
scas
out
or
enter
mov
dec
cmp
fnstsw
adc
call
mov
lahf
sar
cmp
lahf
test
cmp
jbe
push
imul
lds
mov
mov
mov
enter
jno
xor
loopne
lahf
push
xor
(bad)
cli
dec
repz
ja
push
xchg
inc
jo
sub
js
shr
inc
test
xchg
inc
pop
jnp
ins
mov
in
ficom
mov
test
sbb
mov
clc
add
popa
jno
call
shl
or
dec
inc
inc
ffreep
sbb
push
adc
leave
jns
mov
pop
cmps
icebp
(bad)
mov
mov
mov
jmp
test
jge
pop
cmp
cmps
aad
or
xor
xor
repnz
xchg
mov
adc
imul
xchg
sub
or
ret
push
cwde
pushf
inc
inc
rcr
jbe
mov
mov
mov
push
push
nop
xor
push
mov
mov
cdq
pop
mov
ror
rcr
daa
and
mov
mov
cmp
addr16
lock
jmp
call
adc
adc
sbb
inc
jb
ins
mov
xchg
popa
cmp
rol
nop
push
xchg
mov
xor
fstp
retf
xchg
repz
test
fisub
aad
inc
mov
mov
fsub
xor
fbstp
cld
imul
sbb
add
outs
inc
scas
or
fdivr
retf
movs
cdq
addr16
popf
ja
mov
shr
enter
push
sub
test
add
ret
cmps
mov
outs
add
je
dec
jne
and
or
xor
je
popf
fcomp
xor
ja
lods
and
jle
mov
inc
or
jp
repz
sbb
cmps
out
or
cmp
icebp
mov
cmp
pop
or
jb
sub
inc
pop
iret
cwde
push
stos
es
xchg
popa
into
jle
data16
mov
test
repnz
dec
jmp
or
bound
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
or
retf
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
cmovb
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
inc
add
and
add
add
or
add
push
je
imul
add
add
and
add
add
and
dec
inc
add
add
dec
add
dec
or
add
inc
ins
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
push
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
add
add
add
xor
push
add
add
add
in
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
xor
push
add
jne
push
add
add
add
fadd
or
push
add
add
add
add
add
push
add
add
add
add
add
add
add
xor
push
add
add
add
xor
push
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
sub
bound
ins
add
je
jg
push
add
add
add
add
loopne
repz
add
push
xor
push
add
mov
push
xor
push
add
xor
push
add
in
add
add
add
add
push
in
add
add
push
in
add
add
push
in
add
add
pop
xor
push
add
pop
xor
or
dec
pop
xor
push
add
xor
push
add
add
pop
fiadd
push
add
or
add
add
xor
push
add
xor
push
add
xor
push
add
mov
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
add
xor
push
add
or
add
add
or
add
add
or
push
add
add
or
push
add
or
push
add
add
add
or
or
add
or
push
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
jo
add
adc
add
add
xor
add
add
add
sub
jp
add
adc
mov
add
add
add
add
add
mov
add
adc
aad
add
xor
add
add
add
add
xor
xor
pushf
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
mov
add
add
add
xor
add
add
add
add
cmp
loop
add
add
fld
cmp
in
add
add
add
add
cmp
in
add
add
add
add
cmp
in
add
add
add
push
add
xor
cmp
in
add
add
add
add
xor
add
add
add
push
add
xor
add
or
add
add
add
add
add
std
add
and
add
adc
xchg
add
std
add
and
add
add
add
and
add
add
push
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
xor
cmps
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
xor
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
xor
add
add
add
lods
add
add
add
add
add
add
enter
xor
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
enter
and
enter
and
loope
add
and
enter
and
enter
and
aam
dec
add
add
add
add
enter
add
aam
out
add
add
add
add
(bad)
add
add
add
add
and
aam
pop
add
add
add
add
add
add
add
add
add
add
enter
add
enter
add
enter
add
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
enter
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
xor
enter
adc
enter
push
add
add
push
add
add
add
push
add
add
push
add
add
xor
enter
xor
aam
in
pop
xor
(bad)
add
pop
xor
fadd
in
pop
add
enter
add
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
or
add
add
or
add
add
pop
xor
aam
in
pop
add
enter
add
aam
or
add
enter
add
enter
add
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
enter
add
enter
add
enter
add
enter
xor
enter
xor
enter
add
enter
add
enter
add
aam
(bad)
or
add
add
or
add
add
add
aam
or
add
enter
add
aam
push
add
add
add
xor
(bad)
add
add
add
add
xor
fadd
or
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
(bad)
add
add
add
add
or
add
add
add
add
add
add
aam
pop
or
add
add
add
add
add
add
add
add
add
fadd
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
enter
add
enter
add
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
push
and
add
add
add
add
add
add
add
jl
add
or
xchg
add
dec
and
add
add
add
add
sub
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
or
xchg
add
add
cmp
add
add
add
add
add
or
xchg
add
add
cmp
add
add
add
add
add
add
add
add
add
or
xchg
add
add
cmp
add
add
add
add
xchg
add
add
add
add
add
add
cmp
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
sbb
add
add
add
add
add
add
fdivr
add
or
add
add
add
inc
inc
add
or
add
add
add
add
add
add
add
xchg
add
add
inc
add
or
xchg
add
add
inc
add
or
sbb
add
add
add
inc
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
dec
add
or
xchg
add
add
dec
add
or
xchg
add
add
dec
add
or
xchg
add
add
add
or
xchg
add
add
or
add
add
add
add
add
add
add
add
dec
add
or
add
add
verr
dec
add
or
add
add
add
add
dec
add
or
add
add
add
push
add
or
add
add
popa
add
or
add
add
sbb
and
add
or
xchg
add
add
add
or
xchg
add
add
sbb
and
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
int3
add
or
xchg
add
add
daa
add
add
or
xchg
add
add
sub
cld
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
hlt
add
or
xchg
add
add
aas
add
add
or
sbb
add
add
in
add
or
add
add
inc
add
add
or
add
add
add
loopne
add
or
add
add
add
mov
add
add
add
mov
add
add
mov
add
or
xchg
add
add
inc
add
imul
or
sbb
add
add
imul
or
add
add
inc
add
add
add
add
test
add
or
add
add
add
fsubr
add
add
add
or
add
or
add
add
jo
add
add
add
push
jo
add
add
add
push
add
add
xor
or
add
add
add
movs
jo
add
add
add
aam
add
or
add
add
add
les
add
add
add
sbb
add
add
add
sub
add
or
xchg
add
add
jne
add
add
add
pop
jne
add
add
add
pushf
jbe
add
add
add
ja
add
add
add
pushf
js
add
add
add
je
add
or
add
add
add
sar
add
add
sar
add
add
add
mov
add
add
sar
add
add
add
in
add
or
xchg
add
add
pop
add
add
or
xchg
add
add
pop
add
jg
add
add
add
cmp
add
add
add
mov
add
add
lock
or
add
add
add
sub
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
sbb
add
add
les
xchg
add
add
arpl
hlt
add
add
add
add
add
add
add
test
add
add
add
int3
test
add
add
add
call
add
add
cld
test
add
add
add
adc
xchg
add
add
data16
test
add
add
add
inc
test
add
add
add
pusha
test
add
add
add
mov
add
or
adc
enter
push
add
add
add
add
mov
add
add
add
cld
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
push
mov
add
add
add
jo
add
or
xchg
add
add
add
cwde
mov
add
add
add
lods
mov
add
add
add
ror
add
add
jo
fmul
sbb
add
add
hlt
mov
add
add
add
or
add
or
xchg
test
sub
xchg
sbb
add
add
add
xchg
add
add
add
sub
adc
enter
jb
cmp
add
or
adc
enter
jne
mov
adc
enter
jns
push
cwde
add
or
adc
enter
jl
ins
cwde
add
or
adc
enter
jle
mov
adc
enter
jg
mov
add
add
add
jg
mov
add
add
add
add
or
adc
enter
add
cwde
add
or
xchg
add
add
cdq
add
or
xchg
add
add
cdq
add
or
xchg
add
add
add
cdq
add
or
xchg
add
add
cdq
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
enter
mov
sbb
add
add
call
aam
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
adc
enter
mov
add
add
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
add
add
add
add
add
add
or
xchg
or
add
add
or
xchg
add
add
add
or
les
enter
movs
add
mov
add
movs
add
add
or
adc
enter
movs
add
add
add
add
test
add
add
add
add
scas
add
test
adc
enter
mov
inc
test
adc
enter
mov
pop
test
adc
enter
mov
jo
add
or
adc
enter
mov
mov
adc
enter
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
or
les
enter
ret
add
add
les
mov
adc
enter
les
mov
adc
enter
leave
add
add
or
adc
enter
int
adc
add
or
adc
enter
rol
call
add
add
add
mov
add
add
add
add
aad
sbb
adc
enter
aad
xor
adc
enter
xlat
add
add
add
add
add
add
or
adc
enter
fadd
xor
add
add
add
or
xchg
add
add
fild
mov
add
or
xchg
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
or
xchg
sbb
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
test
nop
mov
les
enter
out
add
add
add
add
add
adc
enter
lock
adc
enter
icebp
add
xchg
add
add
icebp
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
hlt
add
xchg
test
inc
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
cmc
add
xchg
test
enter
or
xchg
sbb
add
add
add
add
add
add
mov
xchg
or
add
add
add
mov
xchg
add
add
add
add
add
or
xchg
add
add
stc
add
les
add
add
add
add
xchg
add
add
add
add
lds
add
add
push
std
add
xchg
add
add
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
lds
add
add
push
add
in
lds
add
add
add
or
add
or
xchg
add
add
add
or
xchg
add
add
push
add
add
or
xchg
add
add
or
pop
mov
or
xchg
add
add
add
add
or
xchg
add
add
mov
or
xchg
add
add
(bad)
lods
mov
or
xchg
add
add
mov
or
xchg
add
add
add
mov
or
xchg
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
xchg
add
add
mov
add
add
sbb
add
add
add
add
mov
add
add
and
fadd
add
or
xchg
add
add
and
hlt
mov
sbb
add
add
add
or
xchg
enter
and
add
add
push
add
add
push
sub
(bad)
int3
add
or
xchg
add
add
add
int3
add
or
xchg
add
add
add
or
xchg
add
add
int
add
add
add
add
add
push
sub
add
add
add
add
add
add
push
xor
js
add
or
xchg
add
add
int
add
add
push
xor
mov
add
or
xchg
test
int3
int
add
add
add
add
int
add
add
add
add
into
add
or
xchg
add
add
aaa
add
into
add
or
xchg
add
add
push
cmp
pop
iret
add
or
xchg
add
add
push
cmp
enter
or
xchg
add
add
push
cmp
add
add
add
call
add
add
or
add
or
xchg
add
add
inc
add
add
or
xchg
add
add
inc
add
add
or
xchg
add
add
fld
add
add
add
fld
add
add
add
(bad)
fld
add
add
add
fcomp
add
or
xchg
add
add
fld
add
add
add
adc
add
or
xchg
add
add
push
add
fiadd
add
add
add
fiadd
add
add
push
push
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
mov
add
or
xchg
add
add
add
fiadd
add
add
add
in
fiadd
add
add
add
or
add
or
xchg
add
add
fild
add
add
pop
add
add
or
xchg
add
add
fild
add
add
add
js
add
or
xchg
add
add
pop
ins
add
add
pop
jo
mov
add
or
xchg
add
add
pop
jo
int3
fild
add
add
pop
jb
in
add
or
xchg
add
add
loopne
add
add
push
je
sbb
add
or
xchg
add
add
jbe
cmp
add
or
xchg
add
add
add
push
loopne
add
add
push
jl
ins
loopne
add
add
push
jge
mov
add
or
xchg
add
add
pop
jle
movs
loopne
add
add
pop
add
loopne
add
add
add
add
add
pop
add
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
js
add
or
xchg
test
dec
loop
add
add
add
or
add
mov
and
add
or
add
mov
push
jmp
add
add
add
or
xchg
add
add
pop
mov
add
add
add
add
add
or
xchg
add
add
in
add
or
xchg
add
add
add
or
xchg
add
add
pop
xchg
add
xchg
add
add
pop
xchg
add
add
add
pop
cdq
add
add
or
xchg
add
add
or
add
add
add
add
add
or
add
add
push
mov
add
add
push
movs
add
in
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
test
sub
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
xchg
enter
mov
add
add
or
add
cli
add
or
xchg
enter
ret
add
add
or
xchg
enter
mov
sti
add
or
xchg
aam
mov
sti
add
or
xchg
enter
mov
std
add
or
xchg
aam
icebp
add
add
add
or
xchg
add
add
std
add
or
xchg
add
add
std
add
or
xchg
add
add
pop
leave
add
xchg
add
add
add
add
add
add
add
std
add
or
xchg
add
add
aam
fdivr
add
or
xchg
sbb
add
add
add
xchg
test
loopne
add
or
add
(bad)
add
add
add
add
or
add
add
add
add
add
add
or
xchg
add
add
pop
add
or
xchg
add
add
fadd
pushf
pop
add
or
xchg
add
add
pop
add
or
xchg
add
add
or
add
pop
add
or
xchg
add
add
pop
fadd
in
pop
add
or
xchg
add
add
add
or
xchg
test
and
add
or
xchg
sbb
add
add
add
or
add
add
or
add
add
add
or
add
add
or
add
push
add
or
xchg
add
add
loopne
call
add
or
add
add
or
xchg
add
add
pop
jecxz
sbb
add
or
xchg
add
add
pop
in
cmp
add
or
xchg
add
add
sgdtd
or
xchg
add
add
sgdtd
or
xchg
add
add
sgdtd
or
xchg
test
xor
add
or
xchg
fiadd
add
add
add
or
xchg
enter
jmp
add
add
add
add
add
add
add
adc
add
add
add
add
adc
add
add
or
add
add
or
xchg
add
add
jmp
pusha
adc
add
add
add
add
add
add
add
add
add
push
in
add
xchg
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
or
xchg
test
xor
add
or
xchg
add
add
sbb
add
add
add
add
add
or
add
add
or
add
test
sbb
add
add
add
add
xchg
aam
icebp
add
add
add
or
xchg
enter
clc
add
add
or
xchg
aam
ror
cld
add
and
add
add
add
add
and
add
add
or
add
add
or
add
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
push
add
add
or
xchg
add
add
pop
add
add
or
xchg
add
add
daa
add
or
xchg
add
add
add
add
daa
add
or
xchg
add
add
pop
or
add
add
add
add
add
or
xchg
add
add
pop
adc
push
add
add
add
add
add
add
add
add
add
add
or
add
daa
add
or
xchg
test
mov
add
add
add
add
or
add
add
or
xchg
enter
and
cld
sub
add
add
or
add
das
add
or
xchg
aam
icebp
add
add
add
or
xchg
enter
and
dec
aaa
add
or
xchg
enter
and
cmp
add
or
xchg
aam
inc
or
add
xchg
add
add
and
push
cmp
xchg
add
add
cmp
xchg
add
add
cmp
xchg
add
add
cmp
xchg
add
add
cmp
xchg
add
add
pop
sub
sar
xchg
add
add
pop
sub
in
cmp
xchg
add
add
pop
sub
add
add
or
xchg
test
xor
add
or
add
das
add
add
add
add
add
add
or
add
das
add
add
or
xchg
(bad)
add
add
add
inc
add
or
add
das
add
add
add
or
add
add
or
xchg
aam
imul
add
add
or
xchg
enter
xor
lods
push
add
or
xchg
(bad)
add
xor
add
add
add
add
add
add
add
push
add
or
xchg
add
add
push
add
or
xchg
add
add
add
add
or
xchg
add
add
pop
cmp
dec
push
add
or
xchg
add
add
pop
cmp
add
add
or
add
add
or
pushf
push
add
or
xchg
add
add
push
add
or
xchg
add
add
push
add
or
xchg
test
add
add
or
xchg
enter
dec
add
add
add
add
adc
or
xchg
fiadd
add
cwde
push
add
or
xchg
enter
dec
add
xchg
aam
outs
add
or
add
add
add
and
add
or
xchg
enter
push
add
push
add
or
xchg
add
add
push
add
or
xchg
add
add
push
add
or
xchg
add
add
push
add
push
add
or
xchg
add
add
pop
add
push
add
or
xchg
test
cmp
add
or
xchg
test
pop
push
add
or
xchg
enter
pop
add
xchg
aam
or
pop
add
add
add
push
add
or
xchg
aam
mov
push
add
or
xchg
add
add
add
pop
add
or
xchg
add
add
pop
add
or
xchg
add
add
pop
add
or
xchg
add
add
add
or
xchg
add
add
add
je
add
add
xchg
add
add
pop
add
add
xchg
add
add
pop
add
add
xchg
add
add
pop
add
add
xchg
add
add
pop
add
add
xchg
add
add
or
pushf
pop
add
add
xchg
add
add
or
movs
pop
add
add
xchg
add
add
or
lods
pop
add
add
xchg
add
add
or
mov
add
add
xchg
add
add
or
rcr
add
xchg
add
add
or
enter
add
xchg
add
add
or
int3
pop
add
add
xchg
add
add
or
aam
add
add
xchg
add
add
or
fcomp
add
add
or
call
add
or
lock
add
add
xchg
add
add
or
pop
add
add
xchg
add
add
or
add
add
add
or
or
add
add
add
adc
add
add
or
sbb
add
add
or
and
add
add
or
sub
add
add
or
xor
add
add
or
pop
add
add
xchg
add
add
jle
inc
pop
add
add
xchg
add
add
pop
add
add
xchg
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
add
xchg
je
add
add
xchg
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
add
lea
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
jne
sub
sub
add
add
mov
inc
add
xchg
add
jp
cdq
add
mov
mov
add
add
cmp
add
rol
add
add
add
add
in
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
xor
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
fwait
add
add
add
add
add
add
add
cmp
das
add
ss
icebp
add
add
dec
add
push
add
pop
add
jge
pop
add
add
add
add
add
add
add
test
test
inc
push
mov
push
push
add
add
out
add
inc
add
test
add
add
dec
add
add
add
push
push
push
mov
in
push
adc
push
sbb
add
rol
push
pop
push
add
add
cmp
fld
add
push
leave
add
add
inc
push
loope
cmps
pop
push
push
dec
add
mov
pop
pop
push
dec
add
pop
arpl
dec
add
pop
outs
push
dec
add
pop
jnp
jmp
add
icebp
pop
add
push
or
add
add
push
jns
daa
or
or
dec
add
stos
push
icebp
add
add
add
mov
leave
add
add
push
dec
add
push
add
add
add
add
add
add
push
jns
mov
call
add
add
add
add
add
add
add
add
mov
or
or
or
or
or
or
add
sub
lea
pop
add
or
or
or
or
add
pop
jns
js
add
add
add
add
add
add
add
add
test
jmp
mov
jno
in
add
pop
pop
add
or
dec
add
fimul
dec
add
hlt
or
pop
or
or
add
add
add
add
test
test
test
test
test
test
test
test
test
test
jmp
test
add
or
add
add
add
cs
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
push
add
add
push
mov
add
mov
add
adc
adc
adc
loopne
mov
add
pop
mov
add
pop
mov
add
sbb
sbb
sbb
sbb
sbb
add
add
add
or
add
nop
add
add
add
add
fiadd
add
add
add
add
sbb
add
mov
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
xor
add
dec
add
add
add
add
add
add
arpl
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
push
fild
test
pop
sysret
push
pop
add
or
xor
cmp
dec
or
push
xchg
or
or
or
or
jno
adc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
aam
inc
or
add
add
add
add
or
add
add
add
add
add
add
add
enter
add
mov
add
add
hlt
add
add
add
add
add
add
or
add
popf
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
pusha
add
int
dec
add
jmp
sub
add
out
and
add
js
or
add
mov
add
or
xor
clc
popa
or
cmp
adc
or
cmp
and
or
cdq
add
or
call
add
add
popf
add
add
add
add
add
add
add
add
movs
add
inc
or
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
mov
add
add
pop
add
add
add
add
enter
add
outs
add
add
add
add
enter
add
jae
enter
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
jp
cwde
add
add
int3
add
rol
push
add
add
add
add
add
pop
add
add
add
or
xchg
add
add
add
add
add
add
(bad)
jns
add
add
ret
mov
test
les
js
add
add
ret
mov
test
les
jae
outs
jb
imul
gs
add
jae
gs
cs
imul
inc
outs
jb
jae
popa
jae
dec
outs
popa
add
jae
gs
cs
outs
jb
add
jb
gs
xor
add
xor
cmp
xor
sub
sub
sub
cmp
cmp
gs
data16
aaa
cmp
sub
sub
gs
jne
arpl
cs
jae
jne
arpl
add
xor
add
add
add
arpl
outs
jb
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
arpl
add
outs
je
xor
push
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
ins
gs
outs
je
jns
add
gs
je
dec
outs
jae
popa
outs
arpl
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
imul
gs
add
add
add
data16
dec
cmp
push
dec
outs
push
inc
jns
ja
xor
push
ins
je
bound
dec
push
ins
dec
ins
fs
outs
fs
push
dec
xor
pop
inc
jb
bound
inc
add
push
inc
outs
inc
dec
inc
jb
dec
push
outs
arpl
xor
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
push
xor
push
jae
pop
push
dec
push
push
fs
push
je
gs
ins
add
popa
fs
jns
add
dec
pop
dec
dec
pop
push
ins
fs
ss
cmp
imul
dec
outs
addr16
add
jbe
inc
jo
push
jno
inc
imul
dec
dec
imul
cmp
dec
push
jbe
push
inc
ja
js
cmp
push
push
xor
xor
inc
inc
ss
xor
push
fs
imul
gs
add
fs
push
xor
xor
dec
push
cmp
bound
cmp
pop
push
pop
push
add
ins
jne
push
jns
add
add
add
arpl
adc
and
or
dec
popa
je
add
js
adc
add
imul
adc
or
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
ins
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
push
imul
add
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
je
add
adc
dec
inc
imul
ins
add
jo
jae
add
adc
dec
gs
outs
fs
popa
jae
add
adc
dec
inc
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
adc
dec
inc
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
dec
inc
outs
outs
jbe
jb
imul
je
outs
fs
outs
outs
add
jb
outs
addr16
jne
ins
fs
inc
jo
outs
add
je
imul
jae
xor
dec
outs
popa
add
je
inc
outs
je
jns
outs
imul
add
add
imul
jae
push
data16
cmp
cmp
imul
jae
jae
je
dec
gs
push
popa
fs
add
je
jns
gs
jae
je
dec
push
add
adc
inc
jb
jo
outs
push
je
gs
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
dec
outs
fs
gs
je
inc
arpl
jo
outs
jb
adc
inc
outs
ins
jo
outs
outs
je
addr16
or
inc
jne
outs
push
arpl
gs
outs
fs
outs
je
imul
outs
je
imul
je
outs
ins
add
jb
popa
jns
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
adc
inc
outs
jb
add
outs
je
outs
ins
add
je
push
gs
add
jbe
imul
gs
push
popa
fs
jae
inc
imul
arpl
or
inc
jns
add
jb
add
outs
arpl
add
jne
gs
bound
push
jns
je
ins
cs
imul
arpl
inc
outs
jne
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
push
inc
push
push
inc
je
jb
bound
add
adc
push
jae
jb
outs
outs
je
outs
ins
add
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
add
add
arpl
je
outs
outs
add
adc
inc
imul
jb
pusha
xor
dec
outs
jbe
inc
imul
outs
arpl
jae
push
jns
je
ins
cs
imul
imul
inc
jne
jb
outs
je
jb
arpl
jae
push
outs
dec
outs
ja
jb
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
inc
imul
ins
add
ins
imul
add
outs
je
imul
addr16
dec
je
ins
add
je
add
je
gs
jo
popa
je
add
jb
popa
je
inc
ins
outs
jae
add
arpl
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
ins
add
outs
push
jb
je
add
je
dec
je
ins
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
outs
ins
jbe
inc
jbe
outs
je
jb
jae
addr16
dec
popa
imul
add
outs
arpl
jae
outs
fs
add
je
dec
outs
fs
gs
popa
ins
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
jae
gs
bound
gs
ins
jbe
add
je
dec
popa
ins
add
outs
jbe
jb
add
popa
jae
ss
je
imul
pop
inc
push
dec
outs
fs
data16
bound
jb
outs
add
outs
imul
je
ins
cs
push
imul
gs
inc
gs
js
arpl
imul
ins
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
imul
popa
fs
imul
add
adc
push
gs
imul
jb
jae
imul
add
je
imul
je
jb
bound
gs
jae
addr16
je
jb
bound
add
je
imul
jb
gs
add
adc
or
add
je
popa
ins
add
jae
ins
bound
popa
ins
add
push
fs
gs
dec
popa
outs
popa
gs
push
inc
jb
jo
outs
push
gs
imul
imul
ins
popa
je
js
gs
imul
gs
imul
pop
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
je
push
outs
jae
je
outs
outs
add
imul
gs
imul
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
imul
arpl
inc
gs
jne
ins
imul
jb
popa
je
inc
outs
arpl
jo
outs
jb
inc
gs
popa
ins
ins
imul
ins
bound
addr16
dec
outs
ja
dec
imul
push
pop
dec
gs
popa
add
add
je
or
dec
outs
jbe
ins
imul
imul
jo
imul
jne
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
jns
pop
adc
or
dec
outs
je
xor
sbb
unpcklps
adc
add
je
add
adc
adc
add
push
add
push
add
imul
or
add
push
add
push
add
push
add
push
add
push
add
add
push
add
push
add
push
add
push
add
add
add
push
add
push
add
popa
jb
or
add
outs
arpl
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
inc
jno
popa
ins
imul
push
add
push
add
push
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
add
add
push
add
push
add
pop
dec
outs
gs
popa
ins
imul
push
add
push
add
push
add
push
add
push
add
push
add
add
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
imul
jne
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
add
adc
xor
ja
jo
add
js
add
sbb
jae
jo
outs
add
je
pop
add
jo
add
js
add
or
add
dec
add
push
add
cmp
push
add
add
xor
push
add
add
push
add
pop
add
add
pop
add
push
add
add
ins
add
jae
dec
add
inc
add
add
dec
add
popa
add
dec
add
add
ins
add
bound
xor
je
ins
add
push
xor
jne
add
js
jae
sub
pop
add
pop
add
cmp
xor
add
aaa
add
add
add
add
add
popa
add
add
add
add
add
add
sub
add
popa
add
add
xor
add
add
xor
add
add
jnp
xor
jge
jnp
xor
jge
pop
add
or
add
add
pop
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
jb
jae
imul
cmp
add
jne
je
jb
popa
add
or
jne
ins
add
adc
jne
ins
add
add
add
add
add
jne
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
add
jae
imul
cmp
add
add
jne
ins
add
add
add
add
outs
add
add
add
add
add
jb
and
push
add
add
popa
add
add
add
sbb
imul
add
ja
outs
add
add
add
add
jb
add
popa
add
add
add
push
add
add
add
add
add
add
add
add
add
shl
imul
movs
dec
sub
mov
pop
push
sbb
mov
push
sbb
sub
pop
add
or
add
add
pop
add
pop
add
add
add
or
or
or
or
or
push
and
add
add
sbb
sbb
pop
push
or
or
or
or
or
push
pop
or
push
add
sbb
adc
push
add
adc
add
adc
add
add
adc
add
and
and
push
sbb
add
push
push
push
adc
add
add
add
add
push
add
add
or
and
or
add
sbb
and
or
add
sbb
add
or
add
sbb
and
or
add
sbb
or
add
add
add
or
and
add
or
adc
sbb
or
add
or
pop
add
or
or
pop
push
or
or
or
or
add
sbb
adc
add
adc
or
add
sub
or
or
or
add
add
or
add
sbb
push
adc
add
adc
push
adc
push
sbb
adc
add
add
push
adc
and
add
add
or
pop
add
or
and
add
sub
adc
sub
or
or
or
or
or
or
and
adc
or
or
or
or
or
or
add
or
or
add
add
or
or
add
add
add
add
or
or
or
add
sbb
sbb
or
add
add
add
sbb
or
push
adc
push
and
or
adc
add
sbb
add
or
or
add
adc
or
adc
or
add
add
and
add
sub
add
or
add
add
or
add
or
pop
and
add
add
sbb
or
add
add
add
add
cmp
adc
or
or
or
add
adc
add
add
add
add
inc
add
add
pop
push
sbb
dec
adc
add
or
or
add
inc
add
add
or
adc
add
sbb
sbb
add
push
push
add
add
push
add
sbb
push
adc
or
pop
sbb
or
or
add
or
pop
or
or
sbb
or
add
adc
sbb
adc
or
pop
sbb
or
or
sbb
add
add
add
adc
pop
or
sbb
or
sbb
or
add
adc
add
or
add
adc
add
gs
add
add
adc
add
and
push
add
add
sbb
add
adc
cmp
popa
add
adc
sbb
adc
add
add
ins
add
push
pop
and
add
sbb
add
jno
sbb
add
adc
add
add
add
adc
and
sbb
add
or
pop
or
dec
adc
or
or
or
add
jns
or
adc
or
add
adc
pop
or
sbb
or
or
or
add
adc
add
push
or
add
adc
or
adc
add
add
adc
inc
add
adc
or
adc
or
and
add
add
or
pop
pop
or
or
or
add
push
add
or
or
or
sbb
or
or
add
add
add
or
adc
add
or
lea
add
add
adc
add
adc
add
add
sbb
add
add
push
and
add
or
adc
adc
pop
add
or
or
pop
push
adc
or
or
adc
or
add
add
pop
or
or
or
sbb
or
or
add
push
add
jne
or
adc
add
add
push
or
add
add
add
add
add
add
sbb
adc
sbb
add
inc
adc
add
add
jns
and
add
push
and
sbb
sbb
add
jne
add
add
jne
push
push
add
sbb
add
and
add
sbb
sbb
add
adc
push
add
push
add
push
add
add
add
add
sbb
sub
add
sbb
or
add
adc
push
adc
adc
push
adc
mov
push
add
add
push
or
or
shr
pop
adc
push
sbb
or
or
adc
cmp
leave
adc
cmp
or
and
sbb
and
add
add
and
adc
adc
add
add
push
add
push
push
sbb
push
add
adc
add
or
pop
and
add
add
add
add
adc
add
jmp
sbb
add
in
push
and
add
add
and
sbb
add
sbb
add
push
sbb
add
add
or
add
add
add
or
add
sbb
or
add
add
or
push
add
add
push
add
add
sbb
add
adc
add
adc
push
push
sbb
or
add
push
add
or
push
add
add
add
sbb
and
add
add
add
add
outs
add
add
add
pop
add
add
add
or
add
add
cmp
add
inc
adc
add
adc
add
pop
add
adc
pop
adc
mov
add
or
or
add
or
or
adc
add
sbb
add
or
add
sbb
add
and
xor
sbb
sbb
or
sbb
sbb
sbb
pushf
sbb
or
sbb
add
sbb
sbb
or
adc
add
or
add
or
add
sbb
and
adc
add
add
sbb
pop
add
sbb
or
pop
add
sbb
sbb
add
sbb
or
or
sbb
add
add
add
sbb
or
push
adc
adc
push
or
or
or
or
pop
or
or
or
or
or
or
add
or
or
add
or
pop
add
or
or
add
or
sub
or
sub
add
and
add
or
pop
pop
add
or
and
or
or
pop
add
pop
adc
or
or
or
or
or
or
or
or
or
and
or
or
push
add
or
or
or
add
adc
sbb
adc
add
adc
sub
add
add
adc
add
sub
or
add
add
or
or
add
add
sbb
push
adc
add
and
add
sbb
pop
push
sbb
or
adc
invd
or
or
or
or
or
or
or
pop
or
or
or
or
or
or
or
or
or
push
and
add
and
sysret
or
or
or
or
push
or
or
add
add
add
or
or
add
or
push
add
add
or
adc
cmp
push
adc
or
push
adc
adc
sbb
add
jns
add
sbb
sbb
sbb
add
popa
sbb
add
adc
add
or
add
push
push
push
push
add
or
sbb
sbb
add
push
push
add
or
sbb
add
sbb
add
add
inc
sbb
add
adc
push
push
push
add
or
sbb
sbb
add
sbb
inc
add
adc
sbb
sbb
adc
or
add
adc
add
sbb
add
sbb
pop
add
or
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
jo
jae
arpl
add
sbb
add
inc
push
outs
and
jb
outs
jb
je
outs
outs
add
adc
add
dec
gs
inc
jb
and
gs
jns
add
add
inc
jb
jo
outs
addr16
jo
imul
gs
outs
and
imul
add
or
inc
sub
xor
xor
add
add
add
add
and
cmp
data16
ss
sub
sub
sub
data16
xor
xor
add
add
or
xor
xor
xor
add
add
sub
or
dec
mov
add
inc
mov
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
