jae
pusha
hlt
push
dec
and
add
jg
ins
push
jo
sub
leave
cmp
retf
outs
cwde
jl
ins
and
dec
xor
sub
and
mov
ins
inc
mul
and
out
pop
(bad)
out
ja
sbb
cld
mov
sbb
ss
dec
xor
sub
leave
and
leave
and
cld
fbld
aaa
mov
retf
scas
es
jg
ins
and
xchg
and
scas
jne
cmps
aas
jbe
pop
push
and
add
dec
test
inc
ins
jge
sbb
test
sub
mov
sub
out
jae
sub
fmul
fsub
retf
jno
iret
add
inc
push
jg
arpl
test
stos
cmp
gs
nop
cmp
retf
das
fdiv
xor
add
out
fiadd
inc
ins
lods
jae
out
pop
lock
ins
push
add
lods
adc
out
xchg
leave
ins
stos
jg
pop
nop
cmp
leave
outs
or
and
add
inc
repnz
adc
ins
and
jg
nop
cmp
repnz
cs
jg
nop
cmp
mov
xor
or
adc
cmp
push
test
repnz
stos
scas
fiadd
iret
pusha
push
hlt
inc
jecxz
cmp
xchg
je
dec
out
ja
pusha
push
hlt
jbe
leave
sbb
add
adc
mov
pusha
dec
jg
imul
jg
ins
dec
je
pop
pop
jg
out
in
dec
lods
push
pop
sub
push
fsub
dec
ins
and
fs
and
xchg
aaa
imul
gs
fadd
ja
nop
cmp
inc
ins
mov
outs
repnz
shr
jg
xor
retf
cmp
push
or
add
inc
aam
jg
ins
retf
xchg
jecxz
nop
cmp
mov
ins
and
ins
and
retf
mov
sub
cmp
add
retf
dec
and
ins
mov
sub
or
das
fwait
push
add
ret
pusha
add
inc
mov
pop
shr
pop
push
bound
dec
nop
cmp
add
ds
and
inc
xchg
adc
xor
cmp
repnz
shr
adc
adc
inc
ins
jmp
jg
ins
jecxz
pop
in
(bad)
push
and
jg
sti
push
jg
aas
jbe
std
out
push
sbb
fmul
icebp
xchg
fcomip
test
and
inc
push
and
inc
ins
and
sub
inc
test
pop
inc
ins
test
cmp
mov
dec
add
mov
xchg
fild
sub
inc
loope
xchg
xchg
fild
adc
xchg
mov
call
inc
loope
dec
mov
test
jle
ins
mov
add
jp
lods
pusha
xchg
push
in
xlat
push
test
retf
fiadd
sbb
cmp
sub
test
xchg
test
das
iret
sub
das
sub
inc
arpl
adc
inc
xchg
push
jae
sbb
xchg
(bad)
push
and
stos
mov
jg
call
mov
js
or
and
mov
ins
test
xchg
ficom
and
call
rcl
jle
imul
dec
in
mov
stos
adc
cmp
ja
dec
inc
std
push
retf
xchg
or
mov
outs
and
mov
push
and
stos
sub
test
xchg
push
imul
push
outs
mov
push
and
stos
fisttp
mov
ins
sub
test
xchg
inc
xor
cmp
add
adc
stos
or
xchg
sub
test
test
(bad)
retf
sub
test
fistp
fsub
ror
jg
or
jg
add
movs
leave
sub
test
test
fwait
retf
sub
test
fistp
fsub
jae
retf
inc
leave
sub
jle
out
ja
shl
jnp
push
jle
in
cld
mov
and
mov
xchg
gs
sub
inc
pop
cwde
push
jp
sub
xchg
jp
xchg
outs
and
in
cld
mov
and
mov
xchg
gs
sub
sub
add
sbb
inc
sbb
inc
pop
nop
das
std
cmp
fistp
xor
mov
and
inc
ins
enter
and
cmp
outs
test
fadd
icebp
or
sub
and
imul
in
cld
mov
and
mov
stos
movs
jle
xchg
fistp
pop
test
xchg
stos
sub
xor
retf
jle
xchg
fistp
jnp
pop
xchg
leave
jmp
test
jmp
or
inc
xchg
fistp
jmp
jg
sbb
mov
sub
xor
pop
nop
xchg
bound
cmp
gs
sub
mov
xchg
test
xor
pop
stos
daa
pop
jg
out
ja
mov
test
test
fldenv
cmps
test
cld
or
mov
dec
stos
and
inc
out
or
int3
test
xlat
sbb
sub
and
jmp
cld
scas
jl
sub
sub
pop
pop
lea
hlt
pop
nop
test
sub
test
pop
inc
ins
stos
add
repz
jl
test
loope
pop
inc
jmp
scas
inc
not
inc
pushf
adc
add
cmp
test
jg
sub
test
test
xchg
sub
test
jg
sbb
mov
sub
sbb
hlt
pop
js
cmp
out
or
and
inc
sbb
pop
out
ja
shl
retf
xchg
or
cld
js
inc
xchg
sbb
add
add
sub
test
xlat
sbb
sub
dec
xor
and
scas
jne
cmps
cmp
sub
lods
adc
ret
stos
jnp
inc
ins
fistp
fsub
mov
(bad)
bound
test
mov
out
jae
cmp
mov
pop
fld
mov
test
cmp
jmp
adc
ja
pop
pusha
lahf
cmp
push
idiv
xchg
push
ja
das
push
jg
in
adc
mov
cmp
or
and
inc
ins
out
jno
test
or
and
retf
stos
jg
sbb
jno
adc
stos
or
pop
arpl
test
mov
add
dec
int
fadd
ins
jo
pop
xchg
jae
leave
sub
xor
stos
addr16
xchg
push
hlt
pop
xchg
jae
retf
xchg
xlat
cwde
retf
sub
test
jg
sbb
mov
sub
sbb
rol
jbe
retf
xchg
and
inc
out
inc
jnp
push
and
iret
sub
das
sub
inc
test
mov
inc
ins
adc
and
xchg
dec
lods
push
es
nop
pushf
add
sub
mov
enter
and
sbb
mov
sbb
div
add
pushf
add
mov
js
jg
ins
and
and
gs
retf
stos
adc
and
lahf
dec
lods
push
jp
lods
pusha
xchg
dec
cmp
ja
xchg
fbld
ret
or
ins
adc
cmp
and
test
push
inc
ins
jae
adc
add
jg
push
pop
retf
add
inc
ins
push
js
dec
pop
retf
add
cmp
bound
sub
(bad)
movs
and
out
jae
adc
cmp
inc
ins
xlat
pushf
retf
jmp
test
fadd
ins
and
pop
int
fadd
ins
jo
jb
jbe
ret
lahf
push
add
mov
jg
in
retf
(bad)
(bad)
and
mov
jmp
jo
aaa
pusha
enter
and
add
mov
test
test
push
fild
ror
add
or
and
jmp
ret
test
fild
pop
cwde
jo
pop
fs
aas
inc
cmp
inc
mov
nop
mov
sti
pusha
ins
and
adc
jg
jmp
mov
inc
fsub
mov
dec
test
mov
add
mov
and
or
add
jg
adc
ret
xchg
sub
dec
jg
outs
push
jg
xor
test
lahf
inc
ins
stos
cmp
adc
adc
push
lahf
rol
jg
ins
rcr
leave
adc
hlt
cmp
xchg
ja
retf
sub
(bad)
mov
sbb
gs
sbb
fadd
ins
dec
mov
pop
pushf
jo
jp
xor
inc
ins
and
sub
jbe
sbb
test
fild
(bad)
mov
cmp
push
fucomip
(bad)
ins
and
sub
jbe
sbb
cmp
inc
out
jae
jmp
push
dec
retf
mov
cmps
retf
scas
mov
jg
sbb
(bad)
iret
bound
out
adc
cmp
sub
jo
inc
fild
loope
and
mov
cmps
retf
scas
jg
sbb
mov
sub
dec
adc
fdivr
in
dec
mov
shl
mov
out
inc
add
ja
push
adc
jmp
sub
ins
and
in
(bad)
mov
add
div
xchg
xor
and
gs
sub
jle
pop
push
ja
pop
push
jnp
or
jg
sub
repnz
outs
and
sub
cmp
ins
mov
imul
int3
cmp
xchg
fbstp
sbb
cld
daa
nop
and
mov
out
pop
add
ficom
int3
bound
or
mov
push
jg
out
inc
add
xchg
pusha
in
dec
mov
sbb
mov
and
push
and
jb
and
daa
nop
and
mov
pop
jg
sub
dec
inc
arpl
cld
daa
nop
and
aas
nop
and
dec
xchg
push
ja
pop
mov
adc
retf
or
xchg
or
sub
sub
sub
add
loope
ins
enter
and
pop
xchg
dec
jge
ins
dec
jg
test
inc
ins
stos
cmp
loope
mov
and
mov
loope
mov
fisttp
dec
xchg
push
xchg
push
and
pop
cwde
jo
inc
add
popf
add
mov
ins
mov
jg
sbb
xchg
push
add
jg
xor
cmp
and
test
adc
jae
adc
dec
test
mov
mov
mov
stos
out
jg
in
mov
test
cmp
lods
das
sti
lods
and
mov
cmps
retf
scas
dec
jg
cmp
inc
test
cli
mov
cmp
inc
ins
jo
(bad)
test
cmp
pusha
mov
jg
sbb
(bad)
mov
es
loope
lahf
mov
lock
cmp
pop
nop
sub
sahf
xchg
fiadd
add
mov
out
adc
jg
ins
test
sub
arpl
repnz
lods
fild
loope
and
leave
push
fild
cmp
gs
adc
mov
and
cmp
ds
xchg
xchg
mov
xchg
fild
test
test
or
in
cmp
inc
loope
sar
cmp
cmp
nop
sub
inc
ins
inc
cld
call
fild
fisubr
jg
rcr
cmp
jg
push
and
sbb
bound
jmp
jo
fwait
call
test
test
or
xlat
pushf
retf
jmp
test
int
xchg
fild
xchg
and
call
das
enter
cmp
cmp
das
loop
and
shr
cmp
ds
ins
mov
add
adc
and
jmp
cwde
fcomp
ins
and
mov
push
and
xchg
mov
sub
ds
test
mov
push
fild
sub
mov
cs
call
enter
(bad)
xchg
cmp
movs
retf
mov
ins
and
add
loop
and
shr
jg
dec
dec
jle
aad
cmp
mov
pushf
aad
mov
xchg
fistp
sbb
mov
mov
push
and
out
mov
sub
ds
test
mov
push
fild
sub
(bad)
mov
xchg
fild
mov
(bad)
xchg
cmp
movs
retf
mov
ins
and
mov
pop
jg
push
and
loope
bound
cmp
ds
test
mov
inc
ins
push
pop
sub
(bad)
mov
xchg
fild
mov
(bad)
xchg
cmp
movs
retf
mov
ins
and
add
loop
and
shr
jg
out
not
and
ins
dec
cld
mov
int3
popa
jg
jo
cmp
fistp
sbb
mov
mov
push
and
cmp
cmp
test
mov
push
fild
sub
(bad)
mov
xchg
fild
mov
(bad)
xchg
cmp
and
xor
fld
call
sub
mov
out
not
and
xchg
inc
ins
mov
add
mov
inc
ins
lods
cli
mov
test
test
stos
and
jle
cmp
retf
add
inc
mov
mov
mov
imul
cmps
retf
scas
lods
cli
call
mov
leave
push
fild
push
in
or
cli
inc
imul
cmp
cmp
nop
test
mov
dec
jmp
mov
add
dec
call
cmp
arpl
(bad)
mov
jno
inc
or
cli
jmp
cli
repnz
fiadd
iret
jmp
jo
mov
stos
cli
call
adc
mov
iret
jmp
jo
ror
add
xchg
xor
inc
ins
and
sub
jbe
arpl
repnz
mov
stos
cli
xchg
xchg
fiadd
aad
and
in
or
adc
mov
push
enter
jo
(bad)
mov
stos
inc
mov
nop
sub
inc
ins
and
mov
adc
sbb
mov
in
cld
aas
nop
and
mov
jg
in
mov
xchg
fcomip
and
fild
leave
jmp
jo
jp
ja
retf
sub
jbe
arpl
(bad)
sbb
test
or
mov
add
xchg
int3
popa
jg
jmp
jo
add
jg
test
cld
out
fild
inc
ins
and
inc
ins
test
mov
mov
xchg
fiadd
add
mov
test
inc
ins
mov
cli
rcl
stos
cli
scas
xchg
fiadd
mov
xchg
fiadd
mov
jl
cwde
sti
push
test
idiv
fild
retf
mov
mov
out
xchg
mov
push
fild
outs
in
add
aad
inc
ins
sub
inc
ins
mov
add
xlat
mov
in
ret
cmp
mov
push
fild
ins
and
in
add
sub
ins
sub
inc
ins
lods
cli
out
fiadd
mov
push
fild
cs
cmp
pop
jg
fwait
ret
test
fild
aas
nop
and
push
jg
out
test
mov
test
jg
push
and
sbb
clc
mov
xchg
fcomip
or
fiadd
out
xchg
fiadd
mov
xchg
fiadd
mov
jl
cwde
sti
push
test
neg
cmp
ins
and
xchg
fild
leave
push
fild
ss
add
sbb
ins
sub
inc
ins
mov
add
idiv
sbb
cmp
mov
push
fild
ins
and
in
or
cli
pop
ins
and
shr
jo
jle
jg
loope
pop
mov
ins
(bad)
mov
fiadd
mov
xchg
ja
retf
sub
(bad)
rcr
and
(bad)
xchg
fiadd
mov
ins
and
out
popf
pop
mov
jmp
mov
add
mov
(bad)
xor
(bad)
sub
rol
retf
stos
addr16
cmp
cmp
and
push
das
sti
int
and
jmp
and
ins
dec
jnp
(bad)
mov
add
popf
add
mov
test
inc
ins
mov
push
call
cmp
sbb
test
fild
mov
xor
stos
cli
mov
call
fild
stos
cmps
dec
jg
out
in
sub
cli
mov
add
popf
add
mov
test
adc
push
in
jle
in
cld
jmp
fild
leave
jmp
jo
jb
jbe
cli
hlt
inc
jg
fwait
ret
test
fild
mov
movs
fstp
rcr
mov
xchg
fcomip
mov
stos
dec
mov
int3
fild
mov
sbb
mov
xchg
fild
sbb
mov
xchg
(bad)
call
js
jmp
and
call
xchg
mov
pop
fild
dec
out
popf
scas
mov
pusha
stos
cli
xchg
xchg
fiadd
adc
cwde
jo
ins
and
mov
out
popf
stos
mov
pusha
stos
cli
xchg
xchg
fiadd
adc
stos
cli
call
adc
cli
sahf
xchg
fiadd
adc
cwde
imul
mov
xchg
fcomip
and
fild
leave
pop
fild
dec
test
mov
movs
jecxz
retf
mov
sub
xchg
cmp
add
inc
ins
and
or
jg
cmp
adc
test
fwait
adc
es
adc
idiv
mov
fwait
test
fdivr
ins
and
pop
mov
inc
ins
dec
daa
inc
ins
and
shr
add
mov
or
and
or
test
stos
add
sub
cmp
mov
leave
sub
mov
pop
mov
push
in
dec
mov
jg
xchg
mov
std
stos
cmp
ins
and
mov
lds
adc
lahf
imul
test
dec
jg
ins
dec
push
addr16
adc
or
jg
stos
jbe
scas
or
jg
outs
or
fwait
(bad)
test
test
mov
scas
jo
sub
xor
(bad)
sbb
sub
retf
movs
or
fsub
retf
mov
pop
inc
cld
pusha
jg
aam
pusha
inc
ins
xlat
sahf
retf
sub
test
and
dec
sbb
add
addr16
inc
ins
out
scas
icebp
popa
jg
ins
and
lods
cmc
jae
ins
out
push
cmc
popa
jg
ins
and
pushf
data16
inc
into
pusha
out
ins
das
leave
inc
sub
ds
gs
into
jmp
jg
push
fistp
ins
das
lock
and
dec
movs
out
imul
and
dec
je
ds
sub
push
inc
ins
and
inc
pop
loopne
jl
das
jmp
test
inc
(bad)
and
popa
cmp
add
inc
push
das
cli
jp
and
imul
dec
int
loop
ins
and
repz
jg
push
jp
repz
jg
test
jno
ins
leave
outs
inc
ins
and
inc
test
jge
ins
fistp
fsub
mov
cmp
add
inc
pop
loopne
add
and
pop
sub
fwait
shl
pushf
test
loopne
ins
xor
add
popa
jg
jl
aas
inc
test
cmp
popa
jg
sbb
dec
add
mov
ret
loopne
ins
and
dec
xchg
fild
add
inc
pop
loopne
mov
and
popa
cmp
add
mov
test
cmp
sub
fild
add
inc
pop
loopne
test
jg
popa
cmp
add
or
inc
stos
and
jge
ins
and
mov
cmp
add
inc
pop
loopne
fsubr
jg
movs
or
pop
repz
jg
stos
and
jge
ins
and
mov
ins
fistp
repz
jg
movs
adc
pop
repz
jg
test
jle
ins
adc
inc
in
jle
in
dec
mov
xchg
inc
ins
and
scas
icebp
popa
jg
lods
and
push
mov
jg
ins
cmp
inc
fs
inc
test
jg
ins
adc
inc
test
jp
fsub
shr
add
jmp
jg
fwait
shl
sub
add
shr
jae
leave
mov
dec
je
ds
dec
cwde
pop
inc
ins
and
retf
lods
test
fst
int3
bound
fisub
jbe
adc
addr16
js
dec
movs
out
cli
and
ins
and
sub
and
js
add
sbb
jg
popa
cmp
add
jne
and
xchg
ins
int
loop
ins
and
repz
jg
dec
fistp
repz
jg
lods
jno
inc
ins
mov
jg
xchg
jle
ins
test
mov
add
pop
repz
jg
arpl
mov
stos
jg
sbb
cmp
mov
lods
das
leave
inc
sbb
cmp
inc
ins
test
mov
xchg
jp
int
jg
mov
test
fwait
sbb
jo
in
jg
in
pop
mov
sbb
add
aas
inc
aam
add
xlat
sahf
retf
sub
test
mov
je
sub
ja
sub
cld
jg
mov
push
adc
jg
and
cmp
imul
xchg
jg
pop
mov
add
dec
je
ds
in
test
mov
inc
into
(bad)
das
leave
inc
mov
js
sub
(bad)
aas
call
inc
sbb
cld
inc
fs
inc
push
pusha
jg
xchg
div
cld
pusha
jg
ins
test
push
push
mov
jae
sub
fimul
pusha
jg
imul
ret
popf
pop
inc
inc
ins
mov
jg
xchg
div
cld
pusha
jg
ins
test
push
les
jae
sub
fidivr
popa
jg
imul
mov
ins
test
jnp
sub
dec
sub
ret
lods
rcr
ins
jle
mov
jo
adc
cs
loop
ins
and
retf
stos
fistp
fsub
sub
cmp
inc
ins
test
cmp
and
push
int3
bound
inc
call
ins
and
push
repz
jg
push
jb
inc
fwait
(bad)
test
test
cmp
and
mov
popa
jg
daa
call
ins
and
jb
popa
jg
xor
jb
ins
and
sbb
bound
xor
mov
scas
add
sub
push
cmps
inc
mov
mov
add
clc
cs
pop
les
push
xor
xchg
pop
ins
and
mov
cmps
retf
scas
mov
cmp
in
pop
ins
and
daa
xchg
and
test
out
inc
add
or
cs
daa
mov
and
(bad)
in
cld
daa
mov
and
ins
out
sahf
ins
and
loope
or
cs
pop
mov
jp
fsub
test
nop
jge
ins
and
sub
gs
inc
ins
and
or
repnz
mov
and
add
jg
ins
lods
cmp
icebp
popa
jg
scas
rol
lods
cmp
cmp
jg
sub
sub
jns
sbb
xchg
ret
jg
sub
repnz
fdiv
inc
test
jp
fsub
sub
loop
and
inc
xchg
push
fwait
stos
xor
inc
in
retf
mov
ins
and
sbb
and
inc
loope
xchg
adc
les
mov
ins
stos
cmp
cmps
pop
jg
xor
mov
int3
arpl
pop
add
pop
nop
test
sub
sub
hlt
(bad)
test
mov
repnz
sub
inc
push
and
pop
xchg
jo
pop
test
aaa
xchg
dec
jg
sub
das
sub
xor
hlt
pop
cwde
retf
jno
clc
imul
inc
or
(bad)
test
jmp
sub
daa
ja
pop
in
xlat
(bad)
sub
inc
sbb
sub
popa
jg
xor
sub
mov
sub
sbb
hlt
pop
pusha
fistp
fsub
jae
das
leave
inc
push
sbb
or
xchg
cmp
sbb
or
xchg
cmp
sbb
or
xchg
cmp
sbb
or
xchg
cmp
sbb
jo
data16
out
outs
iret
sub
jp
js
not
out
mov
xchg
das
leave
inc
imul
push
push
sbb
inc
ins
test
imul
(bad)
in
jg
in
cld
test
das
leave
push
jp
mov
rol
inc
sbb
idiv
fisub
jg
and
sbb
hlt
sub
adc
arpl
cmp
pop
ins
and
cmp
adc
js
imul
cmp
push
xor
jg
sub
cld
mov
je
inc
ins
(bad)
test
or
stos
push
outs
iret
sub
jp
xchg
mov
mov
js
jle
ins
and
pop
loopne
ret
lods
(bad)
and
arpl
dec
mov
sbb
inc
sbb
and
inc
inc
push
mov
jns
sbb
mov
push
es
pop
test
jo
push
xor
ins
and
addr16
(bad)
jle
add
push
in
jl
jl
sub
mov
js
push
and
jle
and
daa
in
aaa
ret
jge
xor
(bad)
jle
and
adc
fdivr
stos
outs
mov
cmp
xchg
mov
jnp
push
enter
push
js
test
jg
sbb
cld
mov
je
inc
ins
(bad)
test
or
inc
in
xchg
sub
repnz
outs
and
jnp
cmp
not
and
ins
mov
sub
jle
and
or
fdivr
stos
outs
mov
inc
retf
xchg
mov
jns
sbb
idiv
fisub
jle
push
jno
xchg
and
sbb
inc
mov
je
ficomp
ins
and
pop
jl
sub
and
inc
jns
jg
ins
addr16
mov
arpl
and
jmp
cld
scas
pusha
jae
adc
cs
aaa
fs
arpl
retf
js
push
push
jg
gs
mov
sbb
(bad)
mov
pop
xor
leave
sub
stos
outs
and
stos
push
cmps
stos
test
jg
out
out
mov
ins
das
leave
pop
jl
popf
inc
out
push
std
pusha
jg
mov
xchg
jo
(bad)
call
imul
and
push
and
dec
sbb
or
inc
add
neg
js
not
fistp
mov
ins
sbb
mov
out
pusha
retf
repnz
jae
hlt
inc
in
xchg
sahf
and
inc
mov
scas
retf
sub
repnz
jb
hlt
pop
cwde
test
out
add
inc
push
stos
cld
mov
or
inc
mov
xchg
ds
cmp
not
and
cld
mov
ds
mov
xchg
and
ins
jae
dec
fidiv
or
ret
add
mov
pusha
jg
sbb
cwde
and
and
adc
ja
mov
jmp
and
jg
and
pop
daa
mov
mov
sbb
inc
out
and
js
rol
mov
push
arpl
add
and
jle
jbe
ret
fild
hlt
jmp
mov
cmp
test
lahf
iret
cmp
fist
arpl
cmp
sbb
xlat
(bad)
inc
adc
popa
jg
fidiv
adc
jb
jae
mov
cmp
inc
in
fistp
jo
add
sbb
xlat
enter
in
push
std
pusha
jg
jmp
and
jmp
dec
mov
pushf
xlat
bound
arpl
mov
mov
lahf
iret
cmp
xor
jg
call
das
leave
xlat
lahf
iret
cmp
xor
not
mov
and
(bad)
dec
das
sti
aad
and
xor
cmp
fild
inc
out
stos
popf
xchg
fcomip
xchg
lods
retf
imul
ins
test
xor
pop
sub
inc
aas
enter
and
test
(bad)
jle
mov
div
rcr
nop
mov
ins
xor
push
mov
or
xchg
fild
stos
cmp
inc
xchg
and
cld
out
iret
cmp
and
mov
fxch
nop
mov
mov
sub
in
retf
sub
jbe
sbb
out
inc
ret
sub
loope
inc
lods
ret
cmp
hlt
jbe
mov
ret
fild
mov
push
std
(bad)
mov
push
das
neg
ins
test
sub
and
xchg
and
mov
xchg
fild
lods
xchg
fistp
ins
and
(bad)
loopne
cmp
sbb
scas
sbb
dec
jmp
fsub
mov
xchg
enter
and
dec
fidiv
mov
push
dec
mov
inc
in
mov
cwde
iret
cmp
fild
fwait
lods
leave
jge
lea
jl
nop
stos
jae
in
push
mov
or
aam
mov
in
mov
inc
outs
ins
add
jne
xchg
movs
mov
cwde
iret
cmp
xchg
add
cmp
popf
xchg
fistp
aaa
dec
and
and
retf
jmp
test
inc
inc
ins
and
xlat
lock
inc
outs
test
or
and
mov
add
cmp
inc
in
jmp
xchg
fcomip
(bad)
int3
inc
pushf
xchg
fistp
movs
out
pushf
xchg
fcomip
mov
movs
stos
popf
xchg
fcomip
(bad)
mov
cmp
inc
sahf
mov
sub
movs
stos
popf
xchg
fild
sar
cmp
inc
popf
xchg
fistp
mov
cmp
fistp
scas
dec
jg
push
adc
popf
xchg
fistp
xlat
aam
cmp
sub
jmp
fistp
fsub
dec
fidiv
mov
sahf
mov
sub
mov
push
pop
mov
inc
arpl
add
add
add
mov
fild
inc
ds
and
(bad)
fdivr
cmp
and
in
pop
ja
arpl
(bad)
cwde
iret
cmp
and
sbb
(bad)
aas
and
push
and
test
jle
ins
stos
cli
mov
fild
inc
ins
and
test
lods
cmp
test
add
cld
out
mov
cmp
fild
jp
push
push
retf
pushf
mov
jg
jb
pop
test
(bad)
jp
push
imul
mov
jg
test
test
jbe
xchg
add
cmp
loope
fild
idiv
movs
mov
mov
add
jns
test
jg
sbb
hlt
inc
pop
and
ins
mov
dec
inc
in
fwait
popf
xchg
fist
out
mov
inc
shl
push
in
cmp
les
ret
mov
hlt
stc
and
out
push
mov
add
jg
ins
and
push
sbb
inc
ins
and
sbb
(bad)
jle
and
ins
and
push
in
sbb
inc
ins
and
sbb
(bad)
jle
and
or
retf
mov
fisub
jbe
adc
or
xchg
cli
mov
fild
popf
xchg
fild
mov
xchg
mov
pushf
popf
xchg
fistp
mov
add
mov
outs
test
mov
mov
mov
or
xor
mov
xchg
fistp
ins
and
imul
and
ret
nop
mov
jmp
dec
mov
pushf
xlat
bound
arpl
and
jmp
cld
scas
sub
sub
sub
out
or
adc
push
pop
and
or
test
test
add
cwde
iret
pop
push
ret
cdq
outs
inc
ins
and
scas
or
aas
mov
dec
(bad)
shl
sti
arpl
jg
lahf
test
aas
mov
bound
imul
inc
lahf
test
jns
push
jo
out
xchg
scas
or
pop
xchg
and
push
out
jo
cmp
inc
push
jns
or
add
inc
xchg
and
aas
xchg
xor
jo
and
sub
jg
enter
out
jo
cmp
inc
push
jns
jo
cld
and
in
add
cmp
push
loopne
inc
ins
pop
adc
sub
inc
fwait
inc
xchg
sub
test
das
leave
add
mov
mov
sub
jle
fisub
retf
scas
mov
jnp
mov
cld
mov
sub
jle
fisub
mov
and
inc
out
fdivr
push
das
leave
add
mov
ret
jg
push
mov
jg
arpl
jg
sbb
mov
ins
sbb
inc
in
add
add
or
sub
pop
nop
and
cmp
inc
push
jns
or
add
inc
nop
and
aas
nop
daa
or
retf
sub
test
xlat
sbb
sub
jo
outs
sbb
or
add
cmp
scas
jne
cmps
cmp
push
ja
leave
xor
aam
and
xlat
cwde
retf
sub
test
jbe
inc
test
sub
shl
aaa
xchg
test
inc
jl
push
js
sub
jle
xchg
xor
xchg
and
scas
xor
mov
sub
ins
enter
and
adc
sets
movs
in
sbb
push
jae
xchg
push
ja
jmp
jo
inc
cmp
jg
int
jg
fwait
(bad)
test
inc
(bad)
ins
rol
ins
and
xchg
retf
xchg
or
mov
ja
rol
jnp
or
jg
fwait
(bad)
test
test
jg
sbb
adc
inc
ins
jg
cmp
xor
cmp
(bad)
lods
push
and
ret
jg
outs
dec
jg
outs
dec
jg
ins
mov
mov
ins
and
test
fiadd
dec
ins
push
jns
sub
bound
and
and
lods
retf
sub
ins
jbe
sahf
cmp
mov
aas
stos
div
inc
in
cmp
pop
jg
fwait
(bad)
test
test
add
push
ja
sub
pop
pushf
retf
jns
sub
test
fisttp
mov
fisttp
mov
ins
and
stos
xlat
jno
inc
in
dec
mov
nop
jg
sbb
jno
adc
ja
es
sub
or
inc
ins
dec
jg
in
and
push
and
inc
push
and
inc
ins
and
push
and
stos
mov
dec
add
jg
push
and
stos
aas
jb
inc
out
jae
lods
mov
inc
inc
ins
push
xchg
scas
dec
jg
cmp
sub
adc
mov
jg
sub
das
sub
(bad)
mov
out
jg
cmp
push
adc
nop
push
and
mov
xchg
stos
cwde
jle
ins
and
sbb
jmp
adc
ja
into
pop
mov
inc
inc
ins
dec
jg
in
and
push
and
inc
push
and
inc
ins
and
repnz
test
mov
inc
pop
loopne
jno
and
stos
(bad)
inc
push
and
pop
nop
jo
aaa
jl
or
enter
and
stos
ret
jo
inc
aam
or
retf
sub
test
jmp
cld
scas
jl
sub
sub
mov
ret
aaa
nop
shl
adc
fisub
inc
scas
addr16
aas
pusha
pop
mov
xchg
push
jae
sub
sub
stos
cmp
in
sub
ret
test
sub
mov
xchg
push
arpl
dec
mov
cmp
jg
test
cmp
xor
stos
pop
fist
sbb
inc
push
push
cmp
sub
mov
dec
push
mov
aas
and
test
hlt
pop
nop
test
mov
pushf
test
and
scas
jne
cmps
out
int3
outs
adc
ja
pop
fs
or
sbb
or
sub
test
test
xchg
sub
test
dec
inc
mov
aas
and
pop
fist
cmp
dec
mov
aas
and
test
cmp
push
xchg
sub
cmp
inc
ins
jns
das
nop
ss
ins
jg
sbb
mov
sub
gs
jmp
aam
jne
ins
xlat
pushf
retf
sub
test
and
daa
and
daa
test
cld
daa
mov
repnz
sahf
lods
dec
(bad)
bound
outs
and
lahf
test
mov
cmp
in
pop
outs
inc
sbb
sbb
out
ja
(bad)
retf
xchg
fs
mov
scas
das
leave
pop
xchg
das
leave
push
imul
cmp
sbb
das
and
das
xchg
and
aas
xchg
and
xchg
aam
inc
inc
ins
xlat
pushf
retf
sub
test
pusha
jge
sub
xchg
popa
arpl
cmp
mov
xchg
ret
jge
push
test
mov
ret
jg
mov
and
retf
scas
stos
cmp
xchg
jg
cmp
jo
jle
scas
sub
enter
rol
and
test
ins
popf
mov
test
fwait
ret
scas
pop
adc
stos
cmp
xchg
aas
inc
out
ja
(bad)
imul
sub
leave
sub
cmc
sub
hlt
pop
fs
enter
scas
inc
sub
hlt
pop
mov
sbb
mov
rcl
and
ins
mov
cs
jg
aad
jae
inc
mov
cmp
out
rcr
push
out
sar
mov
dec
cld
mov
shr
out
sar
mov
sar
mov
shr
out
sar
mov
sar
mov
rcl
out
sar
mov
cwde
cld
mov
rcl
and
add
xchg
(bad)
bound
aad
cmp
mov
cmp
out
rcr
cmp
sar
mov
dec
cld
mov
shr
loopne
sar
mov
call
out
sar
mov
sar
mov
ror
leave
not
fistp
cld
inc
xchg
inc
ins
and
cld
mov
sar
and
out
outs
cmp
aas
inc
cld
stos
addr16
mov
leave
and
out
sar
stos
das
dec
cld
mov
jae
mov
sar
mov
out
jnp
mov
sar
pop
xchg
sar
mov
shr
inc
cld
mov
aaa
movs
mov
sar
inc
out
sar
mov
and
xchg
and
ins
dec
lock
test
pushf
add
jbe
jecxz
sar
mov
rcl
and
ins
mov
inc
cld
mov
shl
mov
sar
mov
mov
sbb
sar
mov
cs
jg
in
out
sar
mov
cmp
out
rcr
out
sar
mov
sar
mov
shl
call
mov
std
mov
sar
mov
sar
mov
rcl
ins
jae
inc
mov
jb
mov
shr
out
sar
mov
mov
mov
rcl
and
add
mov
sbb
sar
mov
xchg
(bad)
bound
in
out
sar
mov
cmp
out
rcr
out
sar
mov
sar
mov
shl
call
mov
std
mov
sar
mov
sar
mov
rcl
push
cmp
mov
jb
mov
shr
out
sar
mov
mov
mov
ror
mov
stos
push
xor
retf
mov
sub
xor
hlt
pop
pusha
inc
test
out
mov
in
dec
adc
jg
call
retf
sub
mov
sub
and
pop
leave
sahf
inc
ins
and
call
cmp
fcomi
pop
nop
test
sub
sbb
mov
push
ins
test
add
lahf
js
ins
and
cmp
idiv
xchg
test
out
xchg
test
cmc
inc
jb
wrmsr
js
add
pushf
pusha
jo
jl
leave
setbe
mov
jl
leave
inc
jb
popf
inc
ins
and
push
in
jle
sub
leave
push
arpl
not
mov
inc
ins
xlat
sbb
sub
adc
inc
ins
lods
cmp
ins
and
sub
das
retf
mov
(bad)
adc
lea
jne
inc
mov
and
push
cmp
pushf
jo
bound
and
test
hlt
pop
nop
test
sub
xchg
gs
dec
(bad)
or
jo
jle
cmp
jne
cmps
out
int3
inc
adc
ja
mov
mov
cdq
retf
sub
test
jb
outs
loopne
retf
lods
xlat
xchg
inc
cmps
loope
dec
lods
fldenv
cmps
test
not
sub
call
cmp
jae
leave
aaa
inc
ins
and
pop
mov
aaa
fs
(bad)
xchg
dec
lods
das
sti
ins
outs
and
ficomp
or
ret
or
les
xor
adc
sub
pop
nop
or
ret
test
ret
ja
sbb
and
sbb
test
test
jg
mov
jp
shl
inc
sub
das
stos
das
outs
jg
out
in
jecxz
popf
cmp
test
sub
hlt
push
mov
xor
mov
shl
test
add
ret
and
shl
jnp
fmul
add
mov
ins
shl
test
clc
jl
xchg
stos
push
shl
jae
mov
stos
jmp
and
popf
cmp
xor
and
pop
mov
and
aas
mov
loop
cmc
mov
div
jg
popf
cmp
inc
ins
test
xor
stos
add
scas
das
enter
outs
dec
mov
bound
add
inc
ins
dec
aas
sub
popf
cmp
inc
lods
popf
cmp
(bad)
and
xchg
mov
cs
pop
cwde
retf
gs
pushf
xlat
cdq
retf
sub
test
push
shl
jae
mov
mov
and
popf
cmp
xor
and
pop
pushf
retf
push
retf
stos
test
hlt
push
mov
cmp
pop
pushf
and
xchg
shl
inc
imul
cmp
outs
sbb
jo
cmp
scas
mov
shl
leave
popa
lock
test
jl
test
cmp
lods
mov
(bad)
stos
jb
shl
retf
pusha
sbb
mov
(bad)
test
test
jle
push
das
enter
neg
and
stos
push
fadd
sub
sub
jg
ins
dec
jg
ins
pusha
xor
enter
and
pop
mov
iret
sub
das
mov
sbb
xchg
dec
and
sbb
cmps
test
xchg
push
and
pusha
and
jmp
(bad)
scas
js
jg
aas
jbe
cld
push
xor
in
into
pop
jno
and
inc
sbb
inc
loope
and
shl
test
lods
femms
xor
retf
lods
xlat
xchg
adc
mov
mov
out
retf
xchg
test
mov
sub
jle
inc
enter
and
adc
lds
in
mov
xchg
aas
push
mov
lock
scas
mov
inc
mov
sub
jle
sub
inc
dec
sbb
mov
mov
ins
and
sbb
cli
inc
xchg
fild
mov
pushf
xlat
cdq
retf
jmp
test
cmp
cdq
sar
xchg
fild
stos
cmps
imul
and
inc
push
and
inc
ins
and
iret
jmp
jo
sub
jg
jmp
test
mov
retf
jg
test
jg
jmp
jo
inc
jbe
jg
xchg
popf
cmp
mov
and
jg
(bad)
cmp
and
inc
aas
dec
mov
(bad)
xchg
fiadd
or
mov
shl
test
movs
test
mov
cmp
mov
ins
and
test
ins
fistp
fsub
sub
in
sahf
add
mov
add
jg
in
enter
and
add
cmp
add
inc
ins
mov
jg
test
(bad)
mov
jne
inc
xor
mov
jo
adc
test
pop
in
iret
enter
add
cmp
add
and
daa
nop
and
pop
xchg
jo
pop
nop
jo
inc
add
jg
ins
dec
jg
ins
dec
jg
sbb
aaa
fs
and
mov
in
cld
mov
and
mov
sbb
sub
ins
dec
jg
sbb
xor
enter
and
or
sbb
jecxz
retf
mov
std
mov
fmul
retf
stos
fisttp
push
test
jle
xchg
push
imul
fisttp
dec
test
jg
ins
mov
mov
std
idiv
arpl
iret
sbb
and
pop
js
xor
fisttp
dec
xchg
push
ja
push
jg
out
in
sbb
mov
adc
dec
mov
jg
sub
das
iret
sub
das
sub
inc
outs
and
inc
xchg
push
jae
sbb
xchg
inc
and
push
jnp
lods
retf
dec
mov
js
or
and
mov
ins
sub
mov
ins
adc
inc
xchg
test
xchg
xchg
and
jg
lods
pusha
and
out
int3
outs
adc
stos
or
gs
gs
dec
and
sbb
fdivr
in
mov
jae
test
das
sub
jge
push
and
dec
test
mov
test
cmp
adc
aaa
jl
or
ins
sub
mov
ins
adc
mov
ins
das
enter
jbe
xchg
xlat
cwde
retf
sub
test
test
sub
add
fdivr
in
cld
jg
idiv
stos
ret
fs
cmp
ss
xchg
mov
jg
nop
idiv
aaa
inc
adc
inc
add
jg
ins
dec
jg
ins
dec
jg
or
and
inc
ins
add
jne
jg
gs
inc
pop
loopne
push
xchg
adc
xchg
mov
and
sub
xchg
inc
in
out
aaa
ins
and
sbb
jecxz
pop
add
sbb
popf
(bad)
jge
ins
stos
cmp
lods
push
lea
retf
cmp
mov
adc
ja
aaa
fs
je
jle
inc
out
jae
push
mov
dec
leave
sub
mov
sahf
and
stos
imul
out
in
retf
xchg
or
dec
out
outs
test
jg
xchg
mov
neg
sub
mov
ss
mov
popa
retf
xchg
push
or
outs
test
call
mov
test
sub
stos
daa
gs
in
neg
fisttp
pop
in
jl
pusha
jo
aaa
jl
pop
add
call
mov
mov
xchg
neg
nop
test
mov
cmp
sub
cmp
(bad)
push
pop
inc
inc
ret
sub
imul
stos
and
gs
stos
icebp
cwde
shr
bound
ins
and
pop
cwde
stos
cmp
in
(bad)
jae
retf
imul
push
jbe
sbb
jo
push
test
jno
sbb
mov
sub
jg
xchg
cmc
adc
jo
push
sbb
mov
ins
mov
cld
test
cmp
ins
call
lods
retf
cmp
not
out
mov
ins
ja
push
sub
jg
test
sbb
sub
inc
pop
xchg
push
ror
sub
xchg
dec
out
(bad)
retf
scas
and
sbb
jmp
(bad)
push
ins
and
bound
aas
jbe
stc
(bad)
jge
push
in
jle
in
cld
out
fild
scas
xchg
fld
mov
sbb
adc
test
jbe
sbb
dec
add
ret
fiadd
stos
pop
arpl
pop
loopne
popa
and
sbb
call
cmp
and
mov
xchg
fcomip
push
cmps
mov
stc
hlt
cmp
and
inc
cmp
stos
mov
jg
in
cmp
and
vprotd
fisttp
dec
add
jle
ins
enter
and
xor
(bad)
xchg
fld
dec
in
mov
xchg
fcomip
sub
add
sbb
inc
sbb
test
fild
stos
mov
in
sub
sar
imul
out
in
sub
sar
xchg
fist
shr
jg
data16
cmc
xlat
xchg
xchg
and
popf
add
mov
mov
in
stos
out
jg
aad
jg
ins
mov
jp
dec
enter
and
and
fistp
fadd
jl
bound
test
inc
ins
mov
push
call
jg
data16
cmc
xlat
xchg
xchg
and
popf
add
mov
add
inc
out
in
sub
cmp
mov
sub
jg
test
xchg
pop
sub
jg
data16
cmc
xlat
xchg
xchg
and
popf
add
mov
pop
gs
out
in
stos
lahf
fs
aad
jg
ins
mov
jp
dec
enter
and
and
fistp
fadd
jl
bound
test
cmp
mov
pop
sub
cmp
mov
dec
sar
ins
and
xchg
cmps
jae
test
jg
aad
jg
ins
mov
jp
jg
(bad)
mov
nop
fild
inc
ins
mov
sahf
add
mov
retf
fs
out
in
stos
pcmpgtb
aad
jg
ins
mov
jp
jg
(bad)
mov
nop
fild
inc
ins
mov
sahf
add
mov
add
out
in
ret
scas
es
inc
ins
enter
and
dec
ins
and
frndint
mov
jg
jg
aad
jg
ins
mov
ret
fiadd
add
push
sub
jg
test
xchg
mov
and
test
jg
cmc
xlat
xchg
add
lahf
add
pushf
xchg
fld
inc
ins
lods
cli
pushf
xchg
fld
leave
jmp
jo
xchg
mov
adc
mov
inc
ins
cdq
jne
ins
and
mov
mov
xchg
loop
and
mov
inc
cmc
xlat
xchg
out
cmp
sar
ins
and
xchg
cmp
mov
xchg
fcomip
add
out
xchg
mov
pop
mov
bound
(bad)
cmp
cld
xchg
add
dec
ins
and
frndint
mov
cmps
sar
xchg
fist
shr
jg
data16
cmc
xlat
xchg
xchg
and
popf
add
mov
das
arpl
out
in
ret
xchg
inc
ins
dec
call
aaa
js
cli
mov
add
lahf
add
mov
test
xchg
sahf
and
data16
cmc
xlat
xchg
xchg
and
lahf
add
mov
xchg
bound
out
in
stos
(bad)
inc
aad
jg
ins
mov
jp
jg
(bad)
mov
nop
fild
inc
ins
mov
cmp
inc
ins
and
mov
mov
xchg
ret
jg
mov
inc
cmc
xlat
xchg
out
cmp
sar
ins
and
xchg
bound
ss
and
leave
loopne
mov
ins
and
jmp
and
pop
sbb
jg
(bad)
xchg
fld
(bad)
xchg
fld
(bad)
lods
fild
mov
xchg
fild
jmp
ret
mov
push
push
idiv
ins
mov
push
adc
fadd
pop
ins
and
and
mov
test
test
or
mov
ret
fild
add
inc
ins
fild
inc
ins
mov
ret
mov
rcr
cmp
movs
xor
fild
iret
jmp
jo
(bad)
nop
fild
mov
retf
popa
jg
out
in
ret
lahf
pop
or
enter
and
dec
ins
and
frndint
mov
xor
cmp
mov
sub
sub
sti
data16
cmc
xlat
xchg
xchg
and
lahf
add
mov
pop
popa
jg
out
in
stos
pop
popa
jg
aad
jg
ins
mov
jp
jg
(bad)
mov
nop
fild
inc
ins
mov
mov
inc
ins
and
mov
xchg
fild
lods
fild
mov
sbb
mov
ins
and
leave
sub
(bad)
xchg
fild
inc
ins
mov
add
cmp
mov
jns
inc
out
arpl
call
xchg
and
jg
out
xchg
sbb
mov
xor
movs
mov
retf
pusha
jg
out
in
iret
loope
cmp
mov
xchg
stos
inc
idiv
scas
fild
call
cmp
fild
mov
fld
inc
ins
lods
cli
mov
fld
mov
in
(bad)
mov
cwde
fild
mov
xchg
stos
cli
mov
add
lahf
add
jbe
and
test
xchg
push
sub
jg
data16
cmc
xlat
xchg
xchg
and
lahf
add
mov
pop
pusha
jg
out
in
ret
scas
add
inc
ins
enter
and
dec
ins
and
frndint
mov
cmps
sar
xchg
fist
shr
jg
data16
cmc
xlat
xchg
xchg
and
popf
add
mov
(bad)
pop
jg
out
in
mov
xchg
enter
and
mov
in
ret
mov
loope
jg
xchg
fild
mov
xchg
jbe
dec
fild
(bad)
xchg
fild
(bad)
loope
cmp
(bad)
mov
jecxz
jg
out
in
ret
xchg
ins
enter
and
dec
ins
and
frndint
mov
xor
cmp
mov
push
and
test
xchg
bound
jg
data16
cmc
xlat
xchg
xchg
and
lahf
add
mov
push
pop
jg
out
in
stos
xchg
push
jg
aad
jg
ins
mov
jp
jg
(bad)
mov
nop
fild
inc
ins
mov
lahf
add
mov
imul
inc
out
in
retf
mov
cmps
retf
scas
enter
and
dec
ins
and
frndint
mov
(bad)
push
jg
aad
jg
ins
mov
ret
fiadd
add
jmp
xchg
retf
jg
data16
cmc
xlat
xchg
xchg
and
lahf
add
mov
retf
push
jg
out
in
stos
nop
aad
jg
ins
mov
jp
jg
mov
and
mov
ins
mov
inc
inc
ins
cdq
jne
ins
and
mov
mov
pop
mov
bound
(bad)
cmp
cld
xchg
pop
add
jg
jg
jg
aad
jg
ins
mov
jp
dec
enter
and
and
fistp
fadd
jl
bound
test
inc
inc
ins
mov
lahf
add
mov
arpl
jg
out
in
stos
cmps
sbb
jg
ins
mov
jp
jg
(bad)
mov
nop
fild
inc
ins
mov
cmp
xlat
pushf
retf
jmp
test
cmp
mov
push
and
test
xchg
(bad)
push
and
data16
cmc
xlat
xchg
xchg
and
popf
add
mov
iret
sbb
ja
jbe
cmp
mov
push
and
test
(bad)
jmp
cli
(bad)
xchg
fld
jg
and
dec
ins
and
frndint
mov
pushf
ret
xchg
xchg
cmp
and
test
repnz
mov
cmp
fiadd
add
pop
push
and
test
xchg
mov
data16
cmc
xlat
xchg
xchg
and
popf
add
mov
ja
jg
out
in
sub
inc
xchg
xchg
cmp
and
test
inc
test
jne
ins
and
mov
mov
pop
mov
bound
(bad)
cmp
cld
xchg
jle
and
stos
outs
and
fdecstp
xchg
in
out
gs
and
leave
rcr
cmp
jg
test
mov
inc
ins
cdq
jne
ins
and
mov
mov
pop
mov
bound
(bad)
cmp
cld
xchg
jl
and
mov
add
mov
mov
pop
sbb
inc
out
in
stos
dec
sbb
inc
aad
jg
ins
mov
jp
jg
(bad)
mov
nop
fild
inc
ins
mov
inc
inc
ins
cdq
jne
ins
and
mov
mov
xchg
mov
and
mov
inc
cmc
xlat
xchg
out
cmp
sar
ins
and
xchg
popf
and
mov
ins
mov
adc
inc
push
and
inc
ins
and
mov
push
and
jmp
test
mov
mov
ins
and
mov
xchg
xchg
cmp
fild
inc
ins
(bad)
stos
xchg
fld
inc
xchg
xchg
cmp
and
lahf
sbb
stos
arpl
jg
out
xchg
mov
aaa
jmp
(bad)
scas
push
lahf
push
cmp
popa
idiv
stos
add
idiv
arpl
hlt
popf
cs
(bad)
xchg
fiadd
jns
and
add
mov
add
jg
in
enter
(bad)
xchg
cmp
push
and
pop
jp
bound
es
cmp
inc
in
enter
fist
xchg
mov
jg
mov
cmp
add
inc
ins
mov
add
add
mov
xor
mov
scas
lock
aas
jbe
std
gs
push
in
mov
xchg
fcomip
test
test
mov
sub
(bad)
jp
das
jmp
out
sar
mov
mov
out
jp
ins
and
jmp
test
cli
cmp
adc
out
out
adc
sahf
dec
inc
ins
stos
sub
je
inc
cs
adc
dec
inc
ins
test
cmp
enter
and
pop
fs
repnz
fild
iret
cmp
jle
in
out
xchg
fcomip
mov
cmp
or
and
(bad)
sbb
cmp
fist
retf
jmp
(bad)
ficom
pop
jg
out
ja
loope
cmp
stos
repnz
fild
iret
cmp
jle
in
idiv
(bad)
jg
inc
add
cmps
add
je
and
xbegin
xlat
in
ins
and
(bad)
enter
cmp
or
and
adc
jnp
ins
and
(bad)
fcomp
cmp
and
div
and
test
nop
mov
gs
push
cmp
data16
and
test
inc
ins
mov
jg
outs
fiadd
mov
ins
and
jmp
jo
(bad)
fcomp
cmp
and
mov
xchg
fild
mov
xchg
fild
mov
xchg
fild
iret
jmp
jo
push
fild
(bad)
lock
dec
cmp
fidiv
and
test
jle
ins
dec
fistp
fiadd
jnp
and
lods
jns
jg
loope
retf
mov
jmp
jo
mov
fmul
cmp
(bad)
mov
outs
jg
push
fs
mov
sbb
jg
out
in
ret
fwait
or
inc
ins
out
cli
xchg
fild
test
les
inc
ins
inc
mov
mov
call
push
arpl
movs
xchg
mov
in
push
mov
aam
cmp
fbld
iret
jmp
jo
(bad)
aam
cmp
dec
pop
sub
sub
mov
push
and
dec
lods
das
sti
mov
(bad)
data16
and
scas
push
and
mov
or
(bad)
(bad)
xchg
fild
inc
add
mov
mov
test
inc
inc
ins
mov
adc
xchg
fistp
inc
test
mov
mov
mov
jg
pop
adc
jbe
sbb
pop
stos
outs
and
scas
adc
inc
in
movs
adc
xchg
fistp
jmp
sbb
xor
jg
ins
and
rcl
cmp
and
jbe
and
inc
ins
and
jmp
jo
stos
arpl
pop
sub
fadd
xlat
rcr
add
sub
mov
jae
fcmovu
xchg
fild
out
fld
call
imul
inc
loope
retf
mov
xlat
adc
inc
in
out
and
stos
mov
and
mov
ins
(bad)
out
fild
inc
out
jecxz
xchg
fist
in
pop
mov
xor
mov
(bad)
jo
sub
xor
and
fdivr
in
xor
enter
and
or
sub
and
jbe
and
or
sub
jnp
jg
in
sbb
cmp
sub
addr16
inc
in
sbb
cmp
jo
sub
jo
cmp
jle
arpl
jo
cmp
repnz
jl
das
sub
jno
and
test
mov
xlat
cwde
retf
sub
test
and
lods
test
adc
adc
sar
adc
mov
retf
pushf
mov
loop
ins
and
lods
dec
xor
xchg
push
jae
(bad)
iret
sub
jp
cmp
cli
jae
and
pop
xchg
lods
cmp
enter
cmp
jo
cs
and
arpl
jns
arpl
jo
cmp
repnz
jl
das
stos
and
jg
aam
or
xlat
cwde
retf
sub
test
and
sub
je
inc
push
and
inc
ins
test
xchg
inc
pop
and
sub
das
adc
scas
dec
inc
ins
test
cmp
ret
adc
out
xchg
cmp
jg
test
dec
inc
ins
jae
adc
int3
or
jle
in
mov
xchg
fcomip
test
fistp
pop
ins
and
(bad)
rol
cmp
fild
add
jb
and
test
jo
(bad)
and
in
xlat
jnp
ins
and
xchg
enter
and
xchg
aaa
jne
retf
fild
retf
jg
xchg
or
add
rol
loope
ret
mov
jmp
jo
stos
mov
loopne
jbe
fmul
in
sub
ftst
lahf
mov
ins
and
xchg
aaa
jne
retf
fild
jbe
and
add
add
loopne
inc
in
jle
in
and
jmp
(bad)
pop
dec
and
xchg
jg
aas
jbe
leave
xor
shl
test
mov
inc
ins
test
mov
inc
ins
enter
and
fwait
out
call
jle
sbb
test
fisubr
mov
pushf
and
mov
sti
adc
inc
out
in
retf
pushf
xlat
cdq
retf
jmp
stos
cli
mov
fild
mov
ins
rol
ins
and
xchg
jbe
and
dec
ins
and
frndint
mov
pushf
ret
loope
jg
xchg
fild
stos
daa
adc
inc
out
in
stos
imul
aad
jg
ins
mov
jp
inc
enter
and
and
fistp
and
sbb
and
scas
pop
and
test
xchg
mov
jg
data16
cmc
xlat
xchg
xchg
and
popf
add
inc
mov
adc
retf
ins
mov
js
ins
and
jne
bound
jmp
jo
xchg
pop
and
test
xchg
into
pop
and
data16
cmc
xlat
xchg
xchg
and
popf
add
inc
mov
adc
mov
mov
dec
inc
ins
cdq
jne
ins
and
mov
mov
xchg
push
pop
and
mov
inc
cmc
xlat
xchg
loope
jg
xchg
fild
sub
cmp
mov
daa
adc
out
in
mov
lea
iret
jmp
jo
arpl
and
push
and
test
div
test
dec
inc
ins
cdq
jne
ins
and
mov
mov
pop
mov
bound
jmp
jo
bound
jg
test
pop
dec
lea
iret
jmp
jo
dec
pop
and
test
xchg
mov
jg
data16
cmc
xlat
xchg
xchg
and
popf
add
inc
mov
adc
(bad)
dec
inc
ins
mov
sahf
add
inc
mov
adc
repnz
inc
ins
mov
jle
in
xchg
retf
jg
data16
cmc
xlat
xchg
xchg
and
dec
inc
ins
cdq
sbb
ins
and
mov
jb
jmp
mov
cs
jmp
mov
ins
and
xchg
mov
ins
rol
ins
and
xchg
jo
and
dec
ins
and
frndint
mov
pushf
ret
loope
jg
xchg
fild
stos
cmp
jg
out
in
cli
jl
jg
fwait
(bad)
test
inc
or
and
jbe
and
test
xchg
mov
and
data16
cmc
xlat
xchg
xchg
and
popf
add
inc
mov
adc
cs
inc
ins
mov
lahf
add
inc
mov
adc
fimul
ins
mov
lods
and
repnz
and
data16
cmc
xlat
xchg
xchg
and
popf
add
inc
mov
adc
out
dec
inc
ins
mov
jae
jmp
jo
ins
mov
jg
jmp
jo
into
pop
and
test
xchg
cs
and
data16
cmc
xlat
xchg
xchg
and
popf
add
inc
mov
adc
stos
dec
inc
ins
mov
lahf
add
inc
mov
adc
push
dec
inc
ins
mov
dec
inc
ins
cdq
jne
ins
and
mov
mov
pop
mov
bound
jmp
jo
adc
jg
test
(bad)
mov
jg
mov
or
enter
and
stos
outs
and
fdecstp
xchg
in
out
gs
and
iret
shl
lahf
mov
mov
jg
shl
lahf
mov
pop
and
test
xchg
mov
sti
data16
cmc
xlat
xchg
xchg
and
popf
add
inc
mov
adc
retf
ins
mov
mov
inc
mov
adc
test
mov
mov
fcomip
test
jne
ins
and
mov
mov
pop
mov
bound
jmp
jo
out
and
test
xchg
and
sti
data16
cmc
xlat
xchg
xchg
and
dec
inc
ins
cdq
sbb
ins
and
mov
jb
jmp
mov
cs
jmp
mov
ins
and
xchg
popf
cs
(bad)
ins
rol
ins
and
xchg
sub
sub
sub
add
enter
and
(bad)
nop
inc
cmp
(bad)
ins
rol
ins
and
popf
xchg
fild
adc
popf
jg
xchg
fild
mov
xchg
enter
and
mov
ins
adc
mov
xor
inc
xor
mov
int3
out
inc
ins
and
cmp
inc
out
test
mov
call
leave
xor
sub
or
out
ja
cmp
jle
stc
mov
mov
mov
or
enter
and
stos
out
movq
mov
ins
and
mov
add
cmps
add
imul
mov
in
add
push
xor
mov
xchg
push
jg
add
jle
ins
lods
cli
not
(bad)
mov
pushf
and
inc
ins
and
stos
sbb
cmp
das
sti
nop
outs
and
push
movs
cmp
cmp
and
xchg
adc
loop
fild
mov
fiadd
in
dec
lods
das
sti
aam
and
int3
(bad)
cmp
mov
(bad)
push
jg
loope
retf
mov
jmp
jo
xchg
inc
and
in
cmp
(bad)
mov
adc
push
fs
mov
and
jg
out
in
cli
hlt
add
fwait
(bad)
test
fild
(bad)
aam
cmp
movs
fwait
mov
ins
and
push
fld
and
movs
xchg
mov
aam
jbe
ins
xlat
cwde
retf
jmp
test
cmp
loope
fstp
jmp
jo
inc
push
and
inc
push
and
(bad)
nop
fiadd
stos
dec
or
gs
(bad)
sti
and
xchg
xchg
xlat
mov
inc
and
xchg
and
loop
fild
inc
add
mov
mov
test
push
inc
ins
mov
or
pop
test
cli
xor
lods
cli
mov
add
mov
imul
pop
add
jl
ins
enter
and
(bad)
sbb
cmp
fild
dec
call
sub
inc
test
inc
ins
dec
jnp
ins
and
(bad)
cld
fadd
mov
and
xor
inc
ins
dec
jle
push
(bad)
cmp
mov
sbb
cmp
fistp
arpl
(bad)
loopne
cmp
fild
and
inc
ins
and
mov
loopne
cmp
and
(bad)
lock
(bad)
xchg
fild
mov
sbb
jg
mov
or
(bad)
(bad)
xchg
fild
inc
add
mov
push
addr16
cmp
outs
ins
and
xchg
mov
pushf
and
leave
icebp
mov
xchg
js
test
xor
fld
mov
xchg
hlt
(bad)
lock
adc
(bad)
(bad)
xchg
fild
mov
fwait
xor
ins
jbe
bound
jg
jmp
and
ins
test
mov
mov
inc
and
ins
(bad)
out
fild
inc
in
mov
xchg
fcomip
test
fist
leave
jmp
jg
sbb
test
sub
cmp
or
push
and
test
inc
ins
test
jae
xor
jg
out
xchg
cmp
outs
adc
pusha
xchg
rol
retf
stos
test
mov
gs
and
push
or
xchg
push
jae
cmp
jle
test
pop
inc
ins
jae
ss
and
xchg
or
mov
add
and
ins
dec
jg
ins
enter
and
test
fild
stos
mov
ss
inc
ins
xlat
cwde
retf
sub
test
enter
and
stos
adc
jg
out
sub
test
and
jmp
mov
push
jg
cmp
xchg
jge
pop
retf
xchg
adc
mov
inc
and
stos
sub
test
xchg
test
jg
loope
jle
xchg
fild
adc
into
push
inc
ins
dec
jle
sbb
(bad)
ins
rol
repnz
(bad)
xchg
cmp
rcl
xlat
or
in
xchg
div
jle
cmp
xor
std
popf
sbb
cmp
fmul
retf
stos
inc
mov
test
xchg
test
adc
ins
lods
cmp
and
pop
xor
add
jle
ins
fisttp
int
jg
pop
or
arpl
jl
add
mov
lods
cmp
(bad)
push
je
cmp
and
xchg
adc
xchg
inc
inc
and
fwait
daa
sbb
pop
xchg
das
enter
xchg
scas
and
cmp
cwde
jge
cmp
(bad)
mov
test
adc
inc
push
and
inc
push
and
inc
ins
dec
jg
ins
dec
jns
jl
cmp
and
test
and
sub
(bad)
int
jg
iret
or
push
and
sub
stos
icebp
popa
jg
dec
jg
in
mov
dec
jle
push
adc
inc
test
inc
ins
dec
jle
push
adc
inc
test
inc
ins
dec
jle
push
adc
inc
test
inc
ins
dec
jle
push
adc
inc
test
inc
ins
mov
jg
ins
ja
jb
adc
xchg
jbe
and
ins
ja
jb
adc
xchg
inc
and
ins
ja
jb
adc
xchg
push
inc
and
xor
adc
pop
mov
pop
inc
ins
dec
jle
push
adc
inc
test
pop
inc
ins
dec
jle
push
adc
inc
test
pop
inc
ins
dec
jle
push
adc
inc
test
pop
inc
ins
jg
mov
clc
push
retf
xchg
adc
mov
ins
enter
and
(bad)
stc
pusha
jg
test
xor
ds
test
inc
ins
dec
cmp
enter
and
jle
popa
jg
test
xor
cmp
inc
ins
dec
cmp
enter
and
repz
jg
test
xor
ds
test
pop
inc
ins
test
mov
pop
stc
pusha
jg
xchg
jg
iret
and
add
lds
adc
xlat
sub
xchg
mov
nop
fisttp
repz
jg
stos
push
jg
iret
pop
fiadd
ins
dec
xchg
lds
adc
(bad)
and
nop
fisttp
repz
jg
iret
push
jg
iret
or
add
lds
adc
(bad)
and
nop
fisttp
int
jg
adc
jg
iret
cmp
add
lds
adc
jecxz
and
sbb
out
int3
addr16
lahf
les
and
test
fisttp
dec
test
mov
inc
cmp
out
xchg
(bad)
xchg
(bad)
enter
and
mov
cmp
inc
loope
(bad)
adc
enter
and
(bad)
stos
cmp
out
xchg
shr
sub
sub
adc
sahf
add
lahf
and
inc
outs
and
aaa
push
jg
iret
fild
ins
dec
jg
pop
adc
add
adc
sbb
pop
xchg
or
mov
enter
xor
push
add
jg
cmp
mov
cwde
mov
jg
ins
enter
and
inc
repz
jg
sub
inc
ins
dec
jg
pop
adc
add
mov
ins
dec
out
inc
ins
and
pop
xchg
or
mov
enter
jno
push
add
jg
cmp
mov
cwde
mov
jg
ins
enter
and
and
bound
ins
dec
jge
ins
dec
jg
imul
sub
inc
ins
and
dec
push
xor
dec
and
stos
dec
jle
push
adc
inc
test
jg
pop
adc
add
mov
ins
dec
outs
sub
jg
push
inc
adc
inc
cmp
adc
mov
jg
ins
enter
and
ds
jg
ins
fisttp
repz
jg
ins
fisttp
int3
popa
jg
jl
pop
inc
ins
and
inc
ins
and
sub
inc
add
mov
stos
push
add
fadd
ins
test
cmp
xchg
adc
adc
loop
and
inc
ins
dec
fild
and
inc
cmp
mov
and
cwde
mov
jg
ins
enter
and
dec
repz
jg
ins
fisttp
repz
jg
ins
fisttp
int3
popa
jg
jl
pop
inc
ins
and
cld
ins
and
inc
dec
jg
ins
jo
int3
mov
jg
mov
cmp
xchg
jg
js
ds
push
and
inc
push
and
inc
push
inc
adc
inc
ins
dec
imul
and
adc
sahf
add
sahf
and
inc
ins
adc
pop
inc
jg
add
mov
sub
and
cmp
xor
and
aaa
mov
jg
ins
dec
cmp
ins
and
inc
test
pop
inc
ins
dec
jg
pop
adc
add
mov
ins
dec
push
inc
ins
and
inc
ins
dec
add
adc
sahf
add
sahf
and
inc
ins
cmp
and
(bad)
adc
pop
outs
ins
and
push
dec
aad
ins
and
in
ins
and
outs
and
adc
sahf
add
sahf
and
inc
ins
adc
and
sub
jbe
popa
jg
ins
fisttp
int3
popa
jg
jl
inc
sub
dec
jle
ins
dec
jg
ins
jo
sub
std
cmp
out
dec
and
cld
cmp
in
xchg
retf
stos
dec
jg
pop
adc
add
mov
ins
dec
outs
sub
and
add
jg
ins
dec
imul
pop
inc
ins
and
sub
cld
cmp
add
stos
or
jg
iret
push
fiadd
ins
dec
jg
pop
adc
add
mov
ins
dec
outs
sub
dec
addr16
ins
and
sub
adc
mov
lahf
and
inc
ins
or
and
(bad)
adc
adc
inc
ins
dec
dec
inc
ins
and
inc
cmp
ins
sahf
and
cwde
mov
jg
ins
enter
and
mov
popa
jg
ins
fisttp
repz
jg
ins
fisttp
int3
popa
jg
jl
sub
and
add
jg
ins
dec
jg
ins
jo
inc
mov
jg
mov
cmp
dec
jg
clc
cmp
pop
mov
xor
cmp
outs
ins
and
std
and
push
xor
inc
ins
mov
cmp
add
inc
ins
and
loope
cmp
inc
push
and
inc
push
cmp
shr
scas
and
push
xor
inc
ins
mov
cmp
add
inc
ins
and
loope
mov
inc
in
xlat
add
and
(bad)
adc
adc
sahf
ins
and
js
jg
in
jo
sahf
lea
sub
cmp
inc
ins
enter
and
push
popa
jg
ins
fisttp
repz
jg
ins
fisttp
int3
bound
je
sbb
cdq
and
push
xor
inc
ins
mov
cmp
add
inc
ins
and
loope
mov
xor
ds
push
and
inc
push
aaa
pop
fldcw
sub
and
push
ds
inc
ins
mov
cmp
add
stos
inc
jg
iret
mov
or
ins
fdiv
test
and
out
int3
imul
push
or
jp
jg
add
mov
dec
test
mov
cmp
inc
cmp
dec
mov
(bad)
xchg
(bad)
and
mov
adc
(bad)
and
sub
das
adc
cmp
ins
mov
jg
ins
fisttp
repz
jg
ins
jbe
pop
nop
or
mov
stos
cmp
push
and
ret
mov
mov
ins
and
test
pop
inc
ins
cmp
sub
adc
adc
leave
sub
push
pop
pushf
mov
imul
dec
jg
in
jo
mov
std
cmp
repnz
and
push
and
inc
push
and
inc
add
jle
ins
stos
cmp
test
cmp
and
adc
sahf
add
lahf
and
inc
ins
sbb
and
inc
push
and
inc
push
and
inc
ins
dec
jg
ins
dec
ja
js
retf
and
test
out
inc
ins
and
mov
ins
enter
and
(bad)
adc
adc
push
push
xor
inc
ins
mov
cmp
add
stos
outs
add
iret
enter
test
mov
inc
push
and
add
jg
pop
enter
enter
and
aaa
mov
jg
ins
dec
cmp
ins
and
inc
test
inc
ror
bound
sbb
adc
or
and
pop
enter
enter
and
add
jle
ins
fisttp
icebp
popa
jg
pop
aas
jg
push
and
inc
push
and
inc
add
jle
ins
dec
dec
sub
add
adc
sahf
add
sahf
and
inc
ins
cmp
cs
mov
push
and
inc
push
and
inc
add
jle
ins
dec
inc
sub
rol
and
inc
ins
mov
cmp
add
stos
dec
aas
jg
iret
or
add
mov
fist
(bad)
adc
adc
inc
ins
dec
adc
js
jg
add
jg
cmp
sub
and
cwde
mov
jg
ins
enter
and
ss
jg
fwait
jae
inc
ins
dec
jg
pop
adc
add
mov
ins
dec
outs
sub
dec
clc
inc
ins
and
sub
adc
mov
lahf
and
inc
ins
or
and
(bad)
adc
adc
inc
ins
dec
fild
and
inc
cmp
ins
sahf
and
cwde
mov
jg
ins
enter
and
mov
popa
jg
ins
fisttp
repz
jg
ins
fisttp
int3
popa
jg
jl
sub
aad
jg
add
jg
ins
dec
jg
ins
jo
inc
mov
jg
mov
cmp
jp
and
clc
cmp
pop
mov
xor
ds
push
xor
cmps
ins
and
mov
jg
push
ds
inc
ins
and
sub
sti
cmp
add
stos
xchg
cmp
fiadd
ins
test
mov
jbe
popa
jg
ins
fisttp
int3
popa
jg
jl
add
pop
mov
jb
jg
ins
jo
adc
mov
cmp
xor
loope
cmp
pop
mov
xor
cmp
shr
inc
dec
imul
and
adc
fld
ins
dec
jle
and
inc
outs
and
jmp
jg
iret
cmp
add
mov
ins
dec
jg
pop
inc
fild
ins
dec
sub
cmp
js
jg
in
jo
sahf
lea
sub
cmp
inc
ins
enter
and
push
popa
jg
fwait
sub
inc
ins
dec
jg
pop
adc
add
mov
ins
dec
sub
dec
and
js
jg
in
jo
sahf
lea
sub
cmp
inc
ins
enter
and
(bad)
popa
jg
ins
fisttp
repz
jg
ins
fisttp
int3
popa
jg
jnp
in
ins
and
add
jg
jb
jg
in
jo
mov
xchg
sti
cmp
sahf
jo
jg
hlt
cmp
xchg
enter
(bad)
test
inc
jg
xor
cmp
cmp
cmp
(bad)
push
push
test
adc
inc
ins
dec
jl
ins
dec
jl
ins
and
xchg
push
ja
ret
cmp
in
cld
mov
ins
and
ins
jbe
out
jne
jg
scas
mov
jg
test
inc
ins
mov
cmp
loope
(bad)
adc
mov
loope
adc
push
outs
sub
cmp
inc
in
enter
(bad)
xchg
mov
test
inc
pop
nop
push
sub
mov
ins
dec
sub
pusha
fisttp
dec
test
mov
in
xchg
xchg
and
mov
push
fsubr
mov
fsub
sub
jg
test
mov
mov
int3
jnp
ins
and
shl
xchg
pop
test
mov
inc
ins
dec
(bad)
cs
(bad)
ins
fild
pop
ins
and
sti
arpl
jg
cmc
xlat
xchg
mov
pop
add
pop
(bad)
fsub
iret
jmp
jo
add
ret
jge
jge
cmps
repnz
(bad)
ins
fild
pop
ins
and
lods
pop
pop
jg
in
pop
add
pop
mov
bound
jmp
jo
dec
je
jg
adc
jnp
jge
imul
and
(bad)
ins
fild
push
ins
and
aas
xchg
and
into
add
inc
xchg
fild
inc
ins
mov
outs
sub
xchg
cmp
mov
stos
aaa
jg
in
(bad)
data16
and
aas
xchg
daa
or
inc
into
add
inc
xchg
fild
inc
ins
mov
outs
sub
xchg
cmp
mov
push
jg
in
pop
or
pop
loopne
bound
jmp
jo
ds
jg
adc
jne
jge
mov
(bad)
ins
fild
push
ins
and
mov
(bad)
test
fiadd
aas
xchg
sub
push
add
int
ins
lods
cli
inc
xchg
fild
inc
ins
mov
outs
sub
cmp
mov
inc
aaa
jg
in
pop
or
pop
jnp
bound
jmp
jo
push
jnp
jg
adc
jno
jge
sub
cs
(bad)
ins
fild
push
ins
and
add
sti
cmp
mov
ins
mov
fwait
mov
and
cld
frstor
sub
ds
test
mov
and
shr
test
and
scas
and
pop
in
adc
ja
aaa
fs
xor
cmp
jg
mov
div
ins
and
push
push
sub
test
nop
mov
gs
dec
push
and
stos
(bad)
inc
xor
mov
(bad)
inc
sub
aas
jbe
cld
ds
sub
rcl
in
div
add
int
ins
lods
cli
scas
fild
inc
ins
enter
and
dec
ins
and
fincstp
xlat
lahf
fadd
mov
jge
shl
cs
mov
and
push
ins
and
mov
or
mov
add
pop
test
bound
jmp
jo
cmps
jns
jg
rcl
xchg
add
int
ins
lods
cli
scas
fild
inc
ins
mov
add
pop
inc
fbld
iret
jmp
jo
bnd
jg
rcl
xchg
add
int3
add
scas
fild
inc
ins
test
cli
mov
stos
mov
add
jbe
bound
jmp
jo
xor
jg
rcl
xchg
add
int3
add
scas
fild
inc
ins
mov
or
pop
fbld
iret
jmp
jo
jle
and
pushf
xlat
cdq
retf
jmp
test
xchg
add
int3
add
scas
fild
inc
ins
mov
or
pop
call
jmp
jo
mov
rcl
xchg
add
int3
add
scas
fild
inc
ins
mov
or
pop
stos
fbld
iret
jmp
jo
mov
jg
stos
test
mov
or
pop
inc
fsub
iret
jmp
jo
jmp
xchg
add
retf
add
scas
fild
inc
ins
dec
psrad
and
mov
(bad)
mov
adc
fild
ins
dec
lock
shr
cmp
fisttp
popa
mov
add
ins
inc
ins
and
mov
shl
test
out
dec
ins
and
push
and
xor
bound
in
loop
mov
jmp
sub
inc
ins
leave
pushf
inc
ins
and
call
das
sti
jmp
rcr
cmp
and
in
popf
cmp
cmp
inc
ins
out
mov
in
jle
in
repnz
xchg
fadd
cdq
cs
(bad)
nop
fadd
pop
ins
and
xchg
ret
fild
push
je
jg
scas
mov
and
loope
inc
lods
fldenv
cmps
test
cmp
fadd
jne
and
push
inc
loop
ins
and
jne
mov
add
cdq
cs
(bad)
nop
fiadd
pop
ins
and
mov
jb
inc
add
fiadd
ins
dec
pusha
cdq
cs
(bad)
nop
fadd
pop
ins
and
xchg
sub
inc
loope
cmp
xor
inc
in
(bad)
idiv
and
(bad)
nop
fadd
cdq
cs
(bad)
nop
fiadd
push
ins
and
inc
mov
jg
jmp
jo
mov
and
test
repnz
nop
fiadd
push
ins
and
(bad)
nop
fadd
adc
movs
cmp
cli
cmp
mov
repz
jg
out
in
sub
mov
test
imul
jle
cwde
cli
cmp
mov
hlt
mov
jae
lods
das
cli
adc
jmp
mov
jle
ins
and
retf
jmp
test
mov
mov
inc
and
xchg
xchg
xchg
int
jg
mov
cmp
mov
inc
aaa
jg
out
in
sub
xchg
cmp
mov
xor
jg
loope
cmp
jg
in
cmps
mov
fist
xchg
(bad)
(bad)
imul
or
movs
cmps
mov
fistp
mov
xchg
lods
cmps
mov
(bad)
push
scas
ret
call
mov
jmp
jo
xchg
mov
jg
jmp
jo
bnd
jg
test
repnz
nop
fadd
push
ins
and
(bad)
mov
popf
cmp
jg
out
stos
mov
fcomip
imul
sub
outs
push
ins
and
(bad)
cwde
fadd
mov
(bad)
xchg
ins
and
(bad)
nop
fadd
push
ins
and
call
stos
ret
fild
adc
ins
mov
jg
jmp
jo
inc
xchg
xchg
mov
pop
pusha
jg
ins
dec
jg
out
jg
cmp
jp
ins
and
(bad)
nop
fadd
test
mov
jbe
arpl
xor
fadd
inc
ins
mov
jg
sub
fs
test
inc
ins
jns
lea
jnp
sub
retf
mov
xchg
scas
jl
jg
cmp
ins
push
cmp
ret
scas
mov
cmps
imul
inc
push
and
inc
ins
aas
jg
daa
xor
in
fld
cs
stos
pop
xor
push
and
sbb
gs
pop
mov
daa
inc
ins
xlat
pushf
retf
jmp
test
loop
ins
mov
inc
ins
dec
das
fild
and
xchg
and
add
fiadd
ins
enter
and
adc
xchg
pop
pop
and
push
movs
into
lods
xchg
fild
mov
jl
jg
ins
dec
out
jecxz
and
(bad)
(bad)
cmp
(bad)
xchg
mov
pop
and
out
and
ja
dec
push
retf
add
fsub
cli
fistp
jg
fwait
ret
test
int3
cmp
and
mov
test
test
fldenv
cmps
test
cld
test
adc
sbb
xchg
fidivr
jg
ficomp
lds
in
mov
xchg
aas
push
mov
lock
stos
mov
not
push
adc
sbb
int3
scas
xchg
fild
sbb
mov
mov
ins
and
sbb
cli
jmp
fild
scas
xchg
fisttp
mov
cmps
retf
scas
lods
cli
loope
fild
add
cwde
cs
(bad)
repz
cmp
and
scas
xchg
fild
iret
jmp
jo
ss
jg
jmp
jo
mov
adc
stos
fild
call
repnz
repz
cmp
and
pop
inc
and
vphadduwd
dec
jle
daa
das
jg
add
movs
add
jecxz
and
test
mov
ins
inc
ins
mov
jg
rol
mov
mov
jg
dec
and
lahf
inc
fisubr
fdivr
cmp
add
cwde
and
xor
bound
out
jg
loope
push
lods
xchg
fcomip
ja
clc
cmp
inc
ins
rcr
out
clc
push
call
jg
cld
cmp
shr
xchg
sbb
jg
rol
xchg
mov
mov
jg
dec
and
lahf
inc
fisubr
into
cli
cmp
add
cwde
and
inc
repnz
jg
inc
xor
out
in
iret
rcr
dec
test
jg
lahf
test
adc
and
inc
push
and
inc
ins
and
sub
inc
test
cmp
push
and
stos
scas
das
jg
in
jecxz
pop
ins
and
inc
ins
lods
cmp
cmp
cli
test
lods
repnz
and
xchg
dec
jg
sbb
retf
fild
mov
arpl
jg
ins
lods
cmp
cmp
jge
pushf
ret
xchg
push
retf
stos
mov
gs
mov
sub
nop
mov
jge
jg
loope
nop
mov
sub
inc
inc
ins
push
xchg
ins
lods
or
cmp
(bad)
fxch
cmp
mov
jg
sub
(bad)
mov
fmul
cli
dec
ins
and
dec
ins
and
call
sahf
lahf
cs
pop
mov
test
lods
jp
adc
retf
sub
pop
inc
adc
jg
ins
enter
and
pop
mov
and
scas
xchg
fcomip
(bad)
fmul
cmp
and
ins
enter
and
pop
mov
and
push
and
retf
sub
mov
inc
ins
mov
jg
sub
jg
ins
and
inc
ins
lods
cmp
cmp
(bad)
dec
ins
and
(bad)
and
inc
push
and
inc
ins
jmp
add
mov
stos
ja
jg
iret
and
add
repnz
sbb
jg
ins
enter
(bad)
xchg
test
inc
inc
ins
and
xor
jmp
and
adc
cmp
dec
ins
and
mov
pop
sbb
xlat
pushf
retf
jmp
stos
cli
jmp
mov
ins
and
out
sbb
xchg
mov
ins
mov
jg
jmp
jo
mov
dec
adc
and
cmp
xchg
cmp
inc
in
enter
(bad)
xchg
aaa
imul
inc
stos
and
jle
ins
and
retf
mov
cmps
retf
scas
lods
cli
jmp
adc
add
sub
dec
ins
and
stos
jecxz
jg
loope
xlat
lods
xchg
fild
sub
sub
adc
inc
ins
jo
xor
jg
ins
dec
mov
and
(bad)
and
je
cmp
ins
and
call
fwait
adc
jg
ins
dec
jg
sub
das
stos
aaa
cs
gs
xchg
xor
mov
(bad)
push
and
aas
jbe
std
loope
addr16
iret
cmp
pop
pusha
mov
in
ins
and
dec
out
fdivr
call
leave
mov
push
ins
and
call
sbb
or
xor
ins
das
repz
and
push
and
arpl
xlat
and
push
dec
retf
add
(bad)
mov
jg
add
mov
sub
bound
push
les
mov
fwait
(bad)
test
fld
scas
mov
jg
fxch
cmp
(bad)
xchg
stos
xchg
fild
mov
test
cmp
sub
inc
ins
lods
cli
mov
adc
xchg
mov
lods
push
adc
jmp
or
call
hlt
xlat
mov
mov
mov
sbb
hlt
(bad)
mov
cmp
(bad)
stos
push
fild
mov
pop
dec
jle
jmp
or
sahf
xchg
fild
mov
mov
cmp
fisttp
int3
popa
jg
(bad)
sub
push
mov
or
lock
jecxz
xchg
cmp
add
inc
xchg
test
retf
add
jg
xchg
cmp
mov
ins
enter
fbld
ret
retf
add
(bad)
adc
adc
xchg
sbb
fild
inc
ins
test
mov
inc
push
gs
jmp
dec
jg
outs
sub
js
ins
cmp
fs
ja
sbb
xchg
push
popa
and
xchg
adc
inc
ins
and
pop
js
cli
mov
fwait
pop
jb
ins
sbb
iret
bound
sub
jp
int
jg
push
sbb
cmc
popa
jg
pop
sbb
icebp
popa
jg
inc
sbb
iret
bound
dec
sbb
int
jg
jo
jp
iret
bound
js
jp
repz
jg
pusha
sbb
repz
jg
jmp
dec
jg
sbb
xchg
stos
pusha
and
jmp
sbb
int
jg
jl
jp
iret
bound
sbb
cmc
popa
jg
popa
dec
iret
push
jl
xor
enter
and
mov
sbb
xchg
out
and
and
ins
mov
add
fwait
mov
jmp
jo
fisub
jg
jmp
leave
sbb
ins
and
mov
test
inc
ins
mov
jg
xchg
and
loope
jle
xchg
fild
mov
ins
enter
and
jmp
cmp
dec
jg
aas
cli
cmp
and
jg
pop
enter
enter
and
ret
fwait
cld
dec
inc
ins
stos
cli
inc
xchg
fild
mov
xchg
fild
imul
and
jmp
dec
add
repnz
ins
fild
(bad)
int
jg
jecxz
jg
loope
jle
xchg
(bad)
mov
and
mov
jno
jle
xor
cmp
mov
ins
mov
mov
xchg
fistp
sbb
adc
jno
bound
ins
enter
and
inc
test
inc
ins
leave
sbb
and
mov
loope
jle
xchg
fild
iret
jmp
jo
outs
mov
jg
jmp
jo
(bad)
pusha
and
test
pop
mov
jmp
jo
ja
mov
inc
test
jbe
ins
mov
add
adc
dec
mov
jg
ins
enter
and
inc
test
jne
ins
leave
add
repnz
ins
fild
add
sbb
inc
sbb
cld
mov
ins
dec
jg
mov
cmp
jbe
and
pop
cmp
add
dec
ins
and
test
and
jg
xchg
cli
inc
xchg
fild
mov
adc
jnp
add
movs
mov
jg
ins
enter
and
inc
test
test
fild
inc
xchg
fild
retf
xchg
and
inc
xchg
fild
mov
inc
cli
cmp
mov
retf
sub
out
in
sub
movs
jle
xchg
fild
mov
ins
enter
and
jmp
cmp
dec
jg
stos
stc
cmp
ds
pop
mov
push
dec
ins
and
cli
and
(bad)
test
fld
(bad)
ins
fild
mov
fild
add
mov
fild
inc
ins
mov
jg
ins
lods
cli
inc
xchg
fild
(bad)
and
shl
cmp
and
add
stos
sub
xchg
adc
xchg
cli
and
repnz
loope
jle
xchg
fild
iret
jmp
jo
loopne
bound
jmp
jo
xchg
data16
test
pop
mov
jmp
jo
ja
mov
ja
ins
mov
add
adc
sub
enter
and
inc
test
inc
ins
leave
inc
inc
ins
and
iret
ins
fild
add
sbb
inc
sbb
cld
mov
ins
dec
jg
inc
stc
cmp
ss
pop
or
add
dec
ins
and
test
fild
jg
xchg
cli
mov
call
fild
adc
jnp
add
outs
mov
jg
ins
enter
and
inc
test
js
ins
leave
mov
ins
and
(bad)
xchg
fiadd
mov
outs
push
(bad)
retf
xchg
and
inc
xchg
fild
mov
inc
cli
cmp
mov
mov
jg
out
in
sub
movs
jle
xchg
fild
mov
ins
enter
and
jmp
cmp
dec
jg
jge
cmp
(bad)
imul
mov
ins
enter
and
test
fiadd
jg
xchg
cli
mov
call
fild
adc
jnp
add
lods
mov
jg
ins
enter
and
inc
test
js
ins
leave
outs
inc
ins
and
(bad)
xchg
fiadd
inc
xchg
fild
ret
jg
xchg
das
leave
xlat
xchg
fiadd
jmp
xchg
mov
test
cmp
fild
mov
fild
add
mov
fild
inc
ins
mov
mov
xchg
fcomip
(bad)
mov
cmp
and
inc
add
jg
sub
aas
(bad)
and
jmp
dec
jge
ins
dec
jg
(bad)
cmp
sbb
cmp
iret
popa
adc
add
mov
ins
push
xchg
scas
dec
jg
stc
rol
sub
inc
xchg
xchg
mov
and
ins
lods
cli
mov
fild
mov
bound
(bad)
cmp
cdq
fld
add
sbb
inc
sbb
adc
mov
loope
mov
(bad)
cmp
loope
(bad)
mov
outs
dec
(bad)
mov
cwde
fiadd
inc
ins
test
mov
mov
ins
and
inc
test
jg
ins
dec
jnp
ins
dec
jg
ins
and
add
out
add
inc
ins
and
(bad)
cwde
fiadd
or
inc
push
and
mov
push
mov
add
mov
ins
push
xchg
scas
dec
jg
stc
rol
sub
cmp
xchg
fist
sub
mov
fild
scas
mov
jg
(bad)
cmp
cwde
fiadd
inc
ins
out
fsub
inc
ins
and
xchg
and
sub
adc
and
cmp
xchg
cmp
inc
in
enter
(bad)
xchg
mov
ins
enter
and
mov
mov
cmp
push
imul
fisttp
dec
test
jp
ins
jg
sbb
test
sub
cmp
ins
icebp
ins
cwde
mov
ins
and
retf
stos
stos
cmp
and
ins
das
cli
mov
rcl
jbe
jmp
sbb
int
jg
fisttp
icebp
popa
jg
retf
and
inc
aam
or
xlat
cwde
retf
sub
test
and
dec
xchg
adc
xchg
retf
jg
pop
mov
je
pop
or
add
inc
ins
and
mov
xor
aas
inc
test
inc
ins
test
mov
add
mov
ins
enter
and
mov
xor
ds
test
jnp
ins
sbb
repz
jg
js
inc
xor
bound
sbb
xor
ds
test
jnp
ins
test
mov
add
ret
retf
add
dec
xchg
adc
xchg
mov
mov
dec
stos
icebp
popa
jg
push
bound
pusha
jg
xchg
or
ret
jg
push
bound
popa
jg
pop
or
add
leave
jno
loopne
ins
sbb
stc
pusha
jg
push
bound
pusha
jg
pop
or
add
leave
jno
fiadd
ins
mov
jg
pop
add
add
leave
jno
out
ins
sbb
int
jg
push
bound
popa
jg
mov
ins
mov
jl
or
jae
ds
cwde
fdiv
and
retf
stos
jg
sbb
and
dec
sub
ins
and
dec
sub
add
inc
ins
and
dec
xor
ins
and
dec
xor
add
inc
ins
and
dec
add
ins
and
dec
or
add
inc
ins
and
dec
adc
ins
and
dec
adc
add
inc
ins
and
in
cs
ins
test
or
add
mov
imul
test
sub
add
push
add
mov
shl
jbe
sbb
mov
imul
imul
jg
ins
dec
jle
push
and
stos
iretw
cmp
int3
jg
ins
and
jl
jg
push
and
xchg
mov
mov
cmp
jae
cdq
cmp
mov
leave
sub
aam
pop
pop
inc
lahf
test
lds
loop
inc
ins
and
dec
pusha
mov
ins
mov
inc
ins
and
dec
mov
ins
mov
inc
ins
and
dec
push
out
inc
ins
and
dec
ins
mov
ins
mov
inc
ins
and
dec
jo
add
inc
ins
and
dec
je
add
inc
ins
and
dec
js
add
inc
ins
and
dec
jl
add
inc
ins
and
dec
inc
mov
ins
mov
inc
ins
and
dec
inc
mov
ins
mov
inc
ins
and
dec
dec
mov
ins
mov
inc
ins
and
dec
dec
mov
ins
mov
inc
ins
and
dec
push
mov
ins
mov
inc
ins
and
dec
push
mov
ins
mov
inc
ins
and
dec
pop
mov
ins
mov
inc
ins
and
dec
pop
mov
ins
mov
inc
ins
and
dec
mov
out
inc
ins
and
dec
movs
mov
ins
mov
inc
ins
and
dec
test
add
inc
ins
and
dec
lods
mov
ins
mov
inc
ins
and
dec
mov
add
inc
ins
and
dec
mov
add
inc
ins
and
dec
mov
out
inc
ins
and
dec
mov
out
inc
ins
and
dec
or
and
dec
test
ins
and
dec
mov
ins
and
dec
mov
ins
and
dec
nop
mov
ins
mov
inc
ins
and
dec
xchg
mov
ins
mov
inc
ins
and
dec
cwde
mov
ins
mov
inc
ins
and
dec
pushf
mov
ins
mov
inc
ins
and
dec
loopne
add
inc
ins
and
dec
in
add
inc
ins
and
dec
call
out
inc
ins
and
dec
in
mov
ins
mov
inc
ins
and
dec
lock
ins
mov
inc
ins
and
dec
hlt
mov
ins
mov
inc
ins
and
dec
clc
mov
ins
mov
inc
ins
and
dec
cld
mov
ins
mov
inc
ins
and
dec
ror
and
dec
les
ins
and
dec
enter
mov
inc
ins
and
dec
int3
mov
ins
mov
inc
ins
and
dec
fmul
ins
and
dec
fmul
ins
and
dec
and
inc
ins
and
dec
and
add
inc
ins
and
dec
sub
inc
ins
and
dec
sub
add
inc
ins
and
dec
xor
inc
ins
and
dec
xor
add
inc
ins
and
dec
cmp
inc
ins
and
dec
cmp
add
inc
ins
and
dec
add
inc
ins
and
dec
add
add
inc
ins
and
dec
or
inc
ins
and
dec
or
add
inc
ins
and
dec
adc
inc
ins
and
dec
adc
add
inc
ins
and
dec
sbb
inc
ins
and
dec
sbb
add
inc
ins
and
dec
pusha
mov
ins
mov
inc
ins
and
dec
mov
ins
mov
inc
ins
and
dec
push
out
inc
ins
and
dec
ins
mov
ins
mov
inc
ins
and
dec
jo
add
inc
ins
and
dec
je
add
inc
ins
and
dec
js
add
inc
ins
and
dec
jl
add
inc
ins
and
dec
inc
mov
ins
mov
inc
ins
and
dec
inc
mov
ins
mov
inc
ins
and
dec
push
mov
ins
mov
inc
ins
and
dec
push
mov
ins
mov
inc
ins
and
dec
pop
mov
ins
mov
inc
ins
and
dec
pop
mov
ins
mov
inc
ins
and
dec
mov
out
inc
ins
and
dec
lods
mov
ins
mov
inc
ins
and
dec
mov
add
inc
ins
and
dec
mov
add
inc
ins
and
dec
mov
out
inc
ins
and
dec
mov
out
inc
ins
and
dec
or
ins
and
dec
test
inc
ins
and
dec
mov
inc
ins
and
dec
mov
inc
ins
and
dec
cwde
mov
ins
mov
inc
ins
and
dec
pushf
mov
ins
mov
inc
ins
and
dec
loopne
add
inc
ins
and
dec
in
add
inc
ins
and
dec
call
out
inc
ins
and
dec
in
mov
ins
mov
inc
ins
and
dec
lock
ins
mov
inc
ins
and
dec
hlt
mov
ins
mov
inc
ins
and
dec
clc
mov
ins
mov
inc
ins
and
dec
cld
mov
ins
mov
inc
ins
and
dec
ror
ins
and
dec
les
inc
ins
and
dec
enter
mov
inc
ins
and
dec
int3
mov
ins
mov
inc
ins
and
dec
ror
inc
ins
and
dec
aam
add
inc
ins
and
dec
fmul
inc
ins
and
dec
fmul
inc
ins
.byte
.byte
