add
add
or
add
sbb
add
lods
nop
lahf
aaa
add
add
add
add
mov
add
or
add
(bad)
add
adc
add
lods
nop
lahf
aaa
add
add
add
add
add
add
pop
add
add
rol
pop
pop
add
lods
nop
lahf
aaa
add
add
add
add
add
add
add
add
add
adc
add
lods
nop
lahf
aaa
add
add
add
add
add
add
test
add
pusha
sbb
add
add
add
add
pop
add
add
add
dec
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
dec
cmp
sub
jnp
adc
scas
push
dec
inc
(bad)
adc
idiv
shl
push
cmc
pop
and
gs
test
cmp
adc
push
adc
div
lds
sbb
mov
dec
inc
mov
sub
sbb
mov
mov
iret
stos
pop
pop
cdq
push
mov
idiv
cs
push
cmp
sub
in
dec
lods
jg
sbb
xor
nop
mov
mov
push
int3
iret
pop
or
adc
xchg
mov
int3
movs
push
stc
imul
icebp
add
and
call
in
mov
fsubp
xchg
call
mov
inc
cmp
xchg
ror
mov
xchg
pop
rcl
push
das
xor
outs
xchg
sbb
xlat
fmul
pop
xor
imul
mov
cmp
lds
rcr
ror
inc
mov
je
iret
fnstsw
aad
std
sahf
xor
fdiv
pusha
xchg
ret
stc
xchg
data16
push
daa
dec
outs
call
mov
movups
ds
outs
ins
data16
or
xchg
or
jno
int
pushf
pop
bound
mov
cld
and
cld
fild
xlat
cmp
fs
mov
add
js
mov
(bad)
pop
mov
or
outs
test
and
ret
jg
add
xor
pop
sub
lds
nop
aas
sbb
fidiv
fild
pop
or
pop
imul
push
sahf
mov
in
test
sbb
dec
(bad)
jae
push
add
xchg
(bad)
mov
enter
xchg
cwde
(bad)
xchg
shl
push
pop
add
xor
pop
and
fcmovb
outs
push
cld
out
add
inc
not
ror
lock
or
pusha
inc
inc
cmp
adc
lods
rcr
cmp
mov
cmp
and
xchg
sbb
jge
ds
loope
adc
jmp
stc
jg
inc
test
sub
aaa
dec
stc
and
cmp
sbb
cs
loopne
clc
shl
dec
mov
fcomp
addr16
in
pop
sbb
scas
arpl
(bad)
popa
mov
out
pushf
adc
nop
lods
stc
xchg
xchg
or
jno
aas
xchg
cmps
je
or
out
and
fstp
inc
out
mov
cmovbe
mov
js
jl
sub
stc
sbb
sbb
stos
push
mov
xor
add
out
jns
pop
sbb
retf
sub
sar
push
xchg
mov
fwait
push
xor
mov
xchg
test
push
outs
and
outs
xchg
push
scas
es
sub
sti
enter
pop
jmp
repz
retf
clc
ins
pop
enter
(bad)
bound
call
in
out
push
(bad)
push
aad
retf
(bad)
pop
fnstenv
mov
dec
mov
mov
sbb
iret
add
aaa
mov
fisttp
int
dec
xchg
adc
jb
jp
mov
cmp
fisubr
mov
xor
add
adc
in
(bad)
lods
movs
data16
ret
mov
add
retf
shl
and
jcxz
dec
mov
fwait
inc
test
stos
lahf
(bad)
sbb
cli
mov
fadd
jl
push
push
cmp
test
(bad)
call
jmp
or
mov
test
out
sbb
push
or
adc
(bad)
mov
mov
mov
icebp
xlat
movs
lods
jns
dec
pop
pop
repnz
ja
fsub
idiv
jbe
push
sub
add
adc
not
test
sbb
idiv
inc
adc
inc
aam
mov
xlat
shl
jl
arpl
mov
sub
dec
out
pop
(bad)
cmp
xor
frstor
add
sub
lods
lods
pop
dec
jne
loopne
and
call
fsubr
xor
or
xchg
arpl
inc
or
sub
in
inc
or
ja
outs
xchg
xor
in
cmp
popf
pop
repz
or
test
jnp
add
cdq
mov
push
int3
cmp
test
ds
es
jecxz
cwde
repnz
and
inc
hlt
jl
leave
mov
cdq
push
cwde
sbb
adc
mov
fbld
lods
aaa
dec
jecxz
movs
enter
add
pop
ins
push
lea
adc
sbb
int
sbb
icebp
or
rcl
cmp
fs
hlt
cdq
dec
mov
jge
ret
xor
gs
daa
packsswb
sbb
iret
ror
or
ins
loopne
es
push
cli
xchg
mov
ss
and
fnstsw
outs
adc
mov
pop
cmps
mov
add
ins
movs
push
ds
dec
leave
call
sub
inc
push
or
xor
lea
fucom
pusha
sbb
fsubr
repnz
xor
pop
scas
adc
jecxz
mov
jl
adc
fwait
cdq
out
jl
jmp
cld
mov
dec
cdq
aas
mov
push
loope
popf
or
loop
out
lods
jne
mov
scas
lahf
cs
enter
fbld
xchg
nop
aam
cdq
push
scas
cmp
mov
pavgw
or
add
lods
jmp
sub
outs
stos
in
pop
fucomip
pop
inc
adc
(bad)
mov
sti
je
std
popa
stos
cwde
pop
jno
loope
pusha
popf
mov
es
xor
imul
cmp
fidivr
aas
mov
pop
jmp
aaa
push
pusha
dec
daa
add
iret
je
adc
dec
sbb
lods
into
xchg
xchg
aas
push
inc
clc
push
arpl
sbb
in
cmps
inc
dec
or
jnp
aad
rol
in
jg
push
mov
dec
pop
pushf
pop
mov
push
inc
cmp
call
cmps
xlat
cs
arpl
or
push
xor
or
add
jecxz
inc
lds
lods
fnstcw
mov
out
sbb
jno
movs
imul
sbb
jp
stos
or
pop
jp
add
or
or
and
sbb
sub
pop
cs
std
lock
(bad)
or
adc
sub
jp
pop
daa
jmp
pop
sub
int
dec
mov
in
outs
xchg
aad
inc
mov
dec
stos
push
xor
movs
mov
pop
int3
fdiv
sbb
sub
mov
inc
or
adc
cli
iret
out
cmp
in
imul
sub
xor
and
gs
pusha
(bad)
push
repnz
pop
and
adc
(bad)
add
or
sbb
mov
js
cmc
mov
lods
push
shr
sbb
sbb
mov
fst
add
ret
ins
clc
call
mov
sar
add
jbe
fnstenv
xlat
scas
aaa
popa
dec
mov
mov
dec
xor
jmp
or
outs
dec
add
sbb
add
imul
xor
popf
push
retf
push
mov
fsubr
mov
test
inc
les
loopne
sub
sub
fnsave
jecxz
jmp
(bad)
mov
inc
and
push
jno
loope
pushf
xchg
dec
stos
nop
cmp
cmp
add
loop
add
dec
push
adc
jge
imul
sub
pop
sbb
cld
cmp
lea
fadd
dec
sbb
cwde
jmp
adc
or
out
ins
sti
je
sar
(bad)
fsubr
jmp
rcl
stc
jbe
jae
ficomp
ret
aaa
(bad)
sbb
mov
leave
sbb
jb
fidivr
out
cmp
pop
pop
dec
popf
jno
push
jmp
fsub
fisttp
adc
lea
jmp
(bad)
jo
sbb
jnp
jl
adc
and
push
enter
aaa
lds
icebp
cmp
neg
das
into
push
push
cmc
or
cmp
sahf
adc
add
lods
push
mov
xchg
dec
outs
jae
pop
daa
sbb
dec
sbb
mov
call
(bad)
das
dec
jmp
xlat
(bad)
in
or
mov
iret
sbb
imul
pmaxub
inc
pop
js
dec
xchg
cmp
or
fwait
inc
rcl
adc
std
sub
cld
push
mov
inc
repz
jge
inc
push
add
cmp
sbb
movs
hlt
mov
test
fidivr
mov
adc
pop
ss
enter
movs
(bad)
rol
imul
gs
imul
push
(bad)
push
cmp
pop
cmp
xor
pop
pop
(bad)
jae
or
imul
pinsrw
xchg
pop
mov
adc
xor
js
in
sub
int3
icebp
rcr
jno
ss
and
cdq
mov
push
or
mov
out
push
cli
dec
jns
fisubr
sbb
adc
repz
nop
jae
jp
es
adc
retf
mov
loope
mov
xor
mov
add
dec
mov
sub
in
inc
push
sub
xor
fucomip
and
cmp
movs
sbb
ins
dec
fcom
in
xchg
inc
cmp
scas
outs
mov
scas
pop
in
cs
mov
ins
sbb
fwait
gs
add
int
mov
sar
fwait
int
adc
(bad)
xlat
out
bound
daa
rcr
std
rcr
push
loopne
pop
inc
(bad)
pop
adc
xor
retf
int3
ficom
ja
cmp
sub
inc
enter
push
adc
jbe
movs
aas
bswap
mov
popa
fwait
retf
popf
or
add
loope
(bad)
pop
sub
inc
cs
adc
ficom
mov
jmp
mov
fwait
push
cdq
push
push
ins
retf
aas
push
fcom
pop
sahf
cmp
cmp
out
call
fwait
dec
fidivr
xor
dec
cmp
add
jp
mov
icebp
neg
(bad)
ss
ret
sub
sub
mov
bound
xor
frstor
fcomp
loop
push
pop
xor
aad
xlat
sbb
rcr
mov
sbb
ja
addr16
ret
sbb
pushf
out
jb
and
fld
xchg
imul
sbb
add
fs
in
test
pop
rol
push
and
pop
cmp
stos
mov
rcr
fcom
lds
inc
sbb
mov
dec
movs
repz
loop
pop
xchg
pop
jl
mov
fistp
jg
lds
sbb
div
movs
and
ins
into
xor
mov
mov
mov
repz
add
dec
xchg
cs
mov
jno
dec
add
jo
leave
push
dec
pop
mov
daa
sar
pop
add
aad
push
push
inc
out
mov
sahf
mov
pop
jnp
adc
(bad)
cmp
movs
dec
push
sar
ds
ret
aam
gs
test
sbb
test
sbb
lods
test
cmp
xchg
ins
mov
inc
test
pop
ror
sub
cmp
arpl
and
retf
aad
mov
mov
les
aas
cld
div
call
push
test
daa
sbb
in
pop
or
in
push
push
out
inc
or
repz
ret
loop
(bad)
pop
test
shl
pushf
or
out
les
dec
(bad)
adc
pop
rcl
loopne
xor
jecxz
cmp
mov
lds
push
or
pop
fstp
fucomp
sar
pop
xchg
inc
ret
sbb
ret
sub
cmc
lock
mov
pop
xor
addr16
lods
movs
jg
pop
arpl
and
aaa
test
js
push
popf
pop
call
pop
push
push
mov
xor
lahf
pop
retf
cmp
sti
test
mov
cmp
jle
mov
loopne
and
enter
push
call
jecxz
adc
pushf
mov
inc
dec
xchg
dec
stos
(bad)
gs
mov
push
mov
je
pop
jo
sbb
lds
dec
jmp
pushf
(bad)
push
outs
not
jmp
daa
inc
mov
shl
adc
mov
cmps
and
inc
adc
adc
add
aaa
test
daa
dec
push
xchg
push
pushf
movs
xchg
add
xor
xchg
mov
mov
adc
je
push
test
sar
pusha
add
jmp
pop
call
pop
(bad)
test
sub
pusha
test
cli
xchg
push
mov
out
retf
outs
mov
sub
dec
lea
out
cmps
jl
xchg
(bad)
fcomp
ins
mov
not
ins
inc
adc
dec
adc
xchg
hlt
adc
xor
xlat
mov
add
(bad)
mov
pop
or
mov
dec
xor
rcr
xlat
scas
inc
pop
stos
(bad)
cwde
cwde
jnp
repz
retf
and
xor
in
jne
sub
hlt
pushf
and
loopne
xchg
mov
lods
mov
or
mov
and
mov
js
jge
pop
repnz
sahf
das
sahf
sbb
mov
mov
(bad)
inc
lods
stos
mov
push
ds
and
stos
xchg
pop
loope
(bad)
(bad)
int
dec
jmp
pop
inc
in
and
cmp
fisttp
adc
sub
sbb
add
fst
pop
(bad)
xor
pop
fimul
dec
inc
fdivr
add
xchg
retf
test
inc
mov
sub
push
mov
rep
inc
and
push
cmp
pop
mov
jmp
cld
mov
loope
and
call
or
xchg
mov
xchg
je
mov
ret
neg
xlat
pop
int3
xor
mov
inc
mov
inc
mov
cmp
jmp
xor
ins
xchg
xchg
outs
call
aam
es
sahf
jge
fisttp
push
cwde
rcr
ss
push
call
sub
mov
xchg
mov
rcr
jp
cmp
int
retf
inc
mov
add
sbb
(bad)
fdiv
into
aam
movs
sbb
loopne
pop
cmp
mov
sub
mov
pop
sub
cdq
jo
and
outs
ja
ds
xchg
repnz
fdivrp
sar
enter
mov
cld
pop
call
fild
out
lods
sbb
aam
xchg
mov
ret
xchg
int3
pop
enter
sti
mov
pop
mov
xlat
jmp
dec
push
retf
mov
add
mov
cdq
add
mov
xor
mov
mov
ins
test
cdq
push
out
xchg
daa
mov
mov
dec
push
jge
scas
pop
pop
sub
ins
sbb
fstp
pop
pushw
popf
stos
(bad)
xchg
jl
mov
mov
jp
dec
out
sbb
pop
js
jbe
fdivr
cld
mov
(bad)
sbb
xchg
movs
and
jp
jge
sbb
pop
(bad)
out
fisubr
fild
mov
jbe
inc
rcr
cmp
bound
jg
or
(bad)
mov
or
and
aad
add
cmp
adc
jl
(bad)
icebp
or
lahf
test
jns
adc
mov
dec
sbb
adc
inc
into
mov
sub
mov
test
ret
mov
mov
adc
outs
nop
xchg
pusha
xchg
inc
jmp
cmps
std
ret
mov
push
mov
call
lods
push
cmp
mov
push
dec
sbb
mov
push
popa
adc
das
int3
jle
sub
or
jnp
inc
sbb
inc
ja
sub
mov
cdq
(bad)
cmp
mov
dec
xor
loope
mov
pop
ss
lahf
xchg
mov
cmp
inc
dec
pushf
mov
mov
dec
push
push
es
xor
mov
push
loope
movs
sar
sbb
cli
outs
mov
imul
fbld
and
push
push
ficomp
jae
cmp
inc
ror
xor
cmp
mov
dec
mov
mov
and
push
and
fldenv
jae
push
mov
das
clc
pop
leave
sbb
bnd
inc
and
cmp
neg
mov
int3
push
loope
push
pop
cmp
cwde
add
mul
sti
hlt
push
mov
cs
cs
lods
add
xor
lahf
bnd
std
sub
(bad)
pop
xlat
sub
sahf
or
mov
iret
xor
cmp
sbb
fwait
cmps
xor
fst
inc
movs
push
ror
pop
sbb
mov
jo
rcl
jge
cwde
mov
mov
fsub
jae
mov
mov
es
dec
je
icebp
daa
jecxz
leave
mov
shl
(bad)
xlat
adc
dec
aaa
and
xchg
std
sbb
test
lods
jmp
fimul
aam
add
fidiv
inc
idiv
ror
movs
cld
in
int
dec
adc
call
outs
mov
and
mov
xchg
pop
test
in
sbb
test
mov
jns
ds
sub
(bad)
push
push
imul
jmp
ins
xchg
mov
cmp
jb
mov
jns
in
outs
repz
push
mov
or
mov
jge
dec
and
sar
adc
cs
pop
mov
out
cmc
lahf
xlat
in
cdq
xchg
test
or
push
push
aaa
movs
das
sti
dec
aas
sti
mov
jmp
pop
daa
(bad)
push
shl
pop
adc
sti
sbb
jl
scas
fstp
call
test
cmps
mov
clc
pop
into
pop
(bad)
push
xchg
adc
mov
and
push
ss
sbb
mov
lock
xchg
xchg
push
je
sbb
jbe
pusha
pushf
je
jle
jle
jecxz
nop
stos
mov
mov
popf
ins
xchg
mov
mov
mov
ret
fiadd
daa
mov
ret
fidiv
sbb
into
popf
into
(bad)
adc
jno
loope
(bad)
adc
cmc
dec
aas
repz
dec
sahf
push
cmp
mov
cmp
jmp
xchg
repnz
cld
push
movs
jle
mov
xchg
pop
js
in
xchg
call
aam
(bad)
ret
or
loope
dec
xchg
test
jno
mov
mov
inc
pusha
sub
mov
and
popf
clc
fisub
push
enter
xor
xor
dec
mov
pop
pop
push
and
mov
adc
jp
pop
push
mov
retf
mov
sbb
js
inc
icebp
aas
push
rcr
std
inc
std
inc
adc
xor
test
ins
push
lods
xor
(bad)
xchg
mov
shl
pop
pushf
sub
pop
xchg
ins
fs
cmp
je
push
cdq
retf
push
mov
xor
std
repz
push
sbb
bound
scas
mov
inc
xchg
mov
add
jnp
in
mov
push
lock
pop
push
mov
dec
xchg
push
mov
fisub
mov
not
pop
adc
repnz
adc
pop
and
pop
mov
cmp
rol
and
and
addr16
push
nop
pop
test
cmc
add
stc
xor
or
mov
(bad)
sub
sub
fcomip
cmps
cli
js
pop
into
popa
xchg
add
jp
fidiv
xlat
xor
pushf
mov
fbld
inc
test
mov
(bad)
push
mov
(bad)
push
mov
push
pop
loope
push
fild
mov
pop
inc
sbb
std
mov
pushf
data16
dec
mov
cmp
mov
sbb
(bad)
pop
je
imul
inc
xchg
int
fimul
lds
enter
fdivr
les
stos
div
push
jo
leave
ds
adc
mov
sub
mov
aam
sub
loopne
cmps
retf
cmp
dec
punpcklbw
cmps
lea
mul
rcr
mov
mov
cmp
dec
or
sar
out
add
shr
or
push
mov
pushf
loope
in
xchg
jl
jo
sbb
mov
fistp
jbe
hlt
pusha
push
mov
sbb
add
aaa
les
inc
mov
movs
iret
mov
in
rol
nop
mov
and
imul
mov
in
push
fidivr
popf
pop
and
rol
ins
(bad)
pop
in
sub
jecxz
shr
fwait
dec
inc
jp
les
xor
and
aaa
mov
arpl
out
gs
xor
jno
add
ret
ret
xchg
mov
adc
aam
cli
sub
cwde
sbb
mov
sbb
jp
retf
mov
mov
(bad)
(bad)
hlt
jmp
mov
cmc
dec
or
retf
pop
xor
fdivr
movs
bound
add
cld
push
jl
adc
xchg
retf
push
mov
mov
mov
xor
add
stos
sbb
stos
jecxz
nop
cmp
cmp
and
dec
movs
mov
jmp
dec
mov
or
es
int3
retf
mov
mov
lods
pop
jo
mov
div
iret
mov
cmps
cmp
jb
addr16
les
cld
sbb
lahf
stos
add
xlat
pop
push
out
ja
je
(bad)
scas
repz
dec
fdivr
cmp
(bad)
fdivr
sub
(bad)
cmp
inc
mov
hlt
push
sub
cmp
jno
sbb
jbe
cmp
mov
or
cwde
movs
fadd
xor
and
dec
push
test
leave
in
loopne
loope
pusha
test
stos
xchg
push
ret
xlat
or
lds
das
lods
retf
pop
sbb
addr16
adc
or
pusha
out
sub
cmp
jp
mov
add
adc
xchg
jge
and
(bad)
stc
les
stos
aaa
jmp
fsubp
mov
xor
in
inc
mov
or
fwait
xchg
fstp
push
mov
mov
mov
adc
mov
pop
pop
sti
scas
add
movs
cmps
cwde
adc
mov
cmc
sub
dec
int
xchg
push
outs
stos
inc
arpl
pop
mov
cwde
cmp
mov
jmp
xchg
in
dec
mov
out
dec
adc
fbld
jg
dec
push
xchg
jbe
lahf
(bad)
xchg
dec
lods
mov
std
adc
xchg
ins
mov
es
adc
inc
aad
bound
(bad)
sub
popa
mov
lds
xor
jmp
cli
and
inc
out
ficomp
in
repz
neg
and
in
mov
repz
or
fild
inc
cmp
sub
jl
mov
sub
xchg
mov
imul
dec
dec
jne
movs
adc
cwde
pop
mov
cs
adc
sbb
mov
call
pop
push
(bad)
cli
mov
cmps
scas
mov
(bad)
adc
mov
fmul
mov
mov
(bad)
in
shl
sub
pop
js
pusha
add
push
ret
outs
or
jmp
jo
out
mov
les
test
data16
push
ss
cdq
mov
out
cwde
mov
test
xchg
or
mov
inc
dec
xor
pop
cmp
xor
imul
in
push
and
jmp
pusha
adc
xchg
jb
in
rol
int3
aad
or
enter
xor
in
mov
jb
sub
rcl
mov
jns
xor
jp
sub
arpl
jb
or
movs
add
xchg
push
or
daa
inc
add
into
lods
jl
mov
je
ror
dec
daa
push
loopne
xchg
mov
call
push
inc
repz
push
push
add
xchg
jnp
test
xchg
xchg
push
ins
in
retf
stos
jge
jno
sbb
push
mov
cli
push
add
std
mov
pushf
call
jbe
aas
stos
dec
mov
mov
mov
inc
mov
arpl
jmp
pop
xchg
xchg
adc
sbb
outs
pop
stos
fnsave
xor
ss
pusha
adc
mov
or
pushf
lea
xor
dec
and
inc
jl
into
pusha
jae
dec
xor
call
push
dec
jno
cmp
imul
out
leave
je
sub
mov
test
inc
arpl
inc
push
or
jge
add
pop
dec
ror
dec
daa
nop
push
xchg
or
arpl
push
out
push
or
sbb
mov
xchg
mov
sbb
cmp
ret
lock
jp
sub
xchg
es
mov
in
xchg
arpl
in
pushf
push
xor
in
xor
dec
es
cmp
cdq
cdq
and
jmp
imul
test
daa
int3
scas
movs
cmp
push
pushf
ss
popf
cmc
lds
je
or
sbb
xchg
add
(bad)
cmc
hlt
or
adc
xlat
mov
outs
ds
adc
inc
jl
das
imul
mov
sub
fistp
or
(bad)
jmp
(bad)
cmp
and
mov
rol
xor
test
push
jp
xor
xor
adc
(bad)
adc
or
pop
pushf
cmp
jo
inc
cwde
xor
pop
inc
jp
sti
cwde
or
les
inc
pop
mov
scas
ss
and
rcl
gs
gs
jns
jp
push
es
aad
imul
push
mul
or
int3
out
inc
mov
add
push
cdq
xchg
xchg
cmps
enter
(bad)
cmp
js
test
sti
imul
scas
inc
adc
xor
mov
cmp
in
xor
or
(bad)
and
ds
das
push
cli
add
pusha
mov
fidivr
xchg
push
push
das
imul
fistp
adc
cld
icebp
adc
retf
inc
cmc
pusha
outs
dec
xor
add
fmul
fadd
pop
pop
mov
or
cmp
pushf
stos
cmp
test
ror
and
push
test
pop
xor
jnp
popa
push
fmul
push
add
mov
and
repnz
mov
iret
sub
aaa
in
cmp
xor
jg
fstp
pop
fs
stc
fwait
pop
test
call
fadd
sub
adc
mov
or
enter
sub
sar
sub
aad
gs
stos
inc
pop
xor
push
sbb
test
mov
enter
shl
xor
punpckhdq
rcl
pusha
pop
in
retf
adc
je
(bad)
dec
mov
dec
xor
(bad)
gs
and
sub
in
mov
div
arpl
mov
mov
xchg
popf
cmps
xchg
aam
mov
fdiv
je
(bad)
ds
jmp
loop
std
mov
movs
dec
adc
cmps
inc
test
pop
mov
cmp
lahf
mov
and
imul
inc
retf
popa
mov
cli
inc
lods
pop
pop
sbb
jg
jae
push
popa
scas
sbb
pop
into
test
ins
adc
or
pop
xor
dec
fisubr
xor
movs
fs
jge
movs
xchg
lods
int3
mov
push
cld
mov
fidivr
mov
shr
jg
pusha
leave
push
mov
and
loopne
out
jmp
push
mov
mov
idiv
ret
ret
imul
sbb
mov
mov
jg
ret
mov
push
fs
div
sbb
iret
mov
xchg
clc
sbb
call
js
cmp
pusha
add
stos
scas
(bad)
out
xchg
rol
mov
xor
pop
jecxz
scas
(bad)
retf
or
push
inc
lods
adc
aas
jae
mov
lahf
jmp
sub
pop
inc
adc
xchg
(bad)
or
xchg
mov
sub
add
mov
mov
test
cwde
movs
adc
lock
pop
popa
dec
fsub
outs
aad
pop
xchg
mov
inc
les
add
mov
pop
sub
lea
xchg
inc
sub
mov
xchg
adc
mov
fldenv
fst
adc
leave
call
test
push
or
(bad)
mov
jbe
neg
jne
mov
adc
and
sub
push
pop
je
sub
push
(bad)
inc
test
cmp
test
call
sub
and
iret
movs
popa
inc
jb
jg
or
add
sub
push
(bad)
sbb
inc
fimul
jp
dec
fsub
inc
pop
pop
pop
or
adc
aas
sub
add
cld
and
ins
call
push
sbb
arpl
(bad)
or
(bad)
mov
cwde
sbb
fsubr
sar
inc
push
mov
xchg
dec
mov
rol
cdq
jl
cs
das
pop
out
xchg
fwait
ds
mov
xor
jg
xor
dec
lods
int
add
sub
dec
sahf
mov
cmp
adc
cmp
cmc
inc
mov
mov
adc
dec
adc
inc
sbb
pop
ret
ficomp
mov
inc
and
icebp
jg
inc
push
repnz
mov
sbb
dec
cmc
pop
and
ins
inc
jp
iret
jno
pop
adc
outs
repnz
in
dec
retf
rol
push
xor
pop
and
and
jl
ret
jbe
mov
cmp
sbb
pop
in
push
jno
pop
xchg
push
pushf
outs
jmp
mov
cmp
test
ja
cmp
push
jg
sbb
and
leave
sub
or
and
icebp
dec
or
aaa
jno
and
push
jle
mul
loopne
add
jae
pop
pop
int3
stos
shl
nop
loope
mov
std
xchg
jno
ss
jnp
aas
push
dec
inc
mov
mov
addr16
in
das
or
test
loope
jns
std
lock
call
mov
sbb
or
add
cmps
xchg
push
inc
jp
adc
push
and
xor
adc
repz
adc
mov
push
stc
adc
call
sub
mov
rol
mov
fstp
fist
and
inc
fmul
out
test
sar
or
adc
xchg
sub
leave
(bad)
out
mov
out
add
(bad)
fiadd
inc
pop
fs
adc
mov
xor
inc
hlt
or
add
por
and
mov
jge
enter
xchg
movs
jmp
ss
xor
out
in
adc
add
jmp
outs
popf
mov
loopne
lods
sbb
(bad)
test
clc
lea
sbb
retf
adc
mov
pop
or
and
inc
adc
adc
in
in
inc
(bad)
and
pop
push
pop
stc
es
scas
pop
inc
mov
push
pop
imul
(bad)
xchg
xor
imul
jne
sar
mov
jnp
push
(bad)
stos
shl
(bad)
push
sub
dec
lds
sub
mov
and
jnp
and
(bad)
mov
out
inc
pop
out
js
es
xor
jg
fidiv
popa
add
out
js
iret
mov
xchg
and
loop
xlat
cmp
retf
push
lea
adc
xchg
mov
and
aam
sub
dec
mov
stos
pusha
jbe
and
mov
mov
push
mov
daa
test
loop
cmp
inc
popf
pop
pop
js
out
cld
popw
lahf
clc
loopne
rcl
ja
push
cmp
xor
jmp
push
cwde
mov
adc
call
mov
(bad)
cmc
popf
movs
cmps
pop
xor
lea
mov
mov
fistp
ins
mov
push
aaa
cmp
dec
test
jmp
loope
sbb
mov
lar
stc
test
clc
clc
mov
dec
imul
scas
cmp
mov
test
leave
lods
ret
adc
mov
mov
gs
sub
jmp
push
sahf
jbe
mov
sysexit
or
loope
jg
jne
pop
lock
imul
add
jns
inc
cmp
pop
sbb
xchg
cld
jge
retf
(bad)
sbb
mov
pop
mov
dec
sbb
aaa
sbb
sbb
mov
fild
rol
pop
bound
repnz
fisub
xchg
test
xchg
mov
or
ret
pop
movs
out
cmp
sub
popa
pushf
jnp
jmp
enter
sar
sar
sbb
leave
inc
pop
mov
jo
push
(bad)
xor
mov
sahf
push
push
xchg
jnp
mov
cmc
les
aam
sar
dec
jnp
inc
mov
fldpi
scas
pop
int3
fld
not
int
jmp
add
push
cmps
jbe
jo
push
fs
pusha
mov
imul
clc
dec
sub
jmp
jle
jns
push
or
mov
repnz
mov
inc
ins
jg
cmps
sbb
inc
adc
add
add
sub
pop
in
mov
pop
lock
jo
push
imul
or
clc
push
into
inc
retf
imul
pop
mov
or
repz
and
sub
inc
mov
es
sub
push
xor
fisubr
in
jae
jmp
repz
int3
cmc
add
push
dec
pop
into
mov
inc
jmp
mov
dec
or
call
repz
pop
dec
push
ror
(bad)
loope
jg
jo
push
pop
push
and
pop
jge
fdiv
jmp
outs
xor
(bad)
scas
xor
jmp
leave
enter
loope
or
inc
mov
fisttp
mov
and
mov
mov
mov
ins
jmp
nop
ins
inc
retf
clc
push
add
mov
xchg
xor
inc
pop
into
xor
int
outs
and
xchg
daa
pop
stc
les
or
jne
fbld
lds
or
call
xchg
xchg
jns
repz
leave
aaa
xchg
repnz
jecxz
lds
jno
stos
loope
add
cmp
ret
out
ret
mov
jo
(bad)
pop
int3
mov
adc
out
js
ret
inc
test
or
xor
in
add
inc
xchg
mov
mov
mov
inc
sti
je
dec
bound
int3
in
(bad)
popf
in
movs
fs
jo
mov
(bad)
mov
enter
add
xor
movs
(bad)
sbb
mov
dec
adc
sbb
lds
je
inc
dec
shl
inc
fnstcw
scas
dec
xlat
stc
lods
push
loope
mov
mul
add
les
icebp
inc
push
gs
loop
pop
jae
pop
cmp
mov
xchg
dec
das
mov
test
pop
jbe
les
ja
test
clc
inc
jb
out
test
sub
mov
pusha
pop
rcr
call
rcr
scas
cmp
ret
in
cmp
sub
retf
dec
mov
rcr
inc
retf
dec
xchg
jne
push
jp
xchg
add
fistp
ins
dec
sbb
pusha
popa
push
cli
(bad)
jmp
mov
call
and
test
mov
pop
mov
and
pop
mov
ins
xor
pop
lods
sub
cwde
pop
out
jae
pop
jmp
inc
add
push
pmaddwd
cs
cmp
add
cmp
xor
xor
mov
arpl
bound
jmp
cmc
add
mov
scas
xor
retf
cmp
cmps
inc
mov
lahf
inc
jle
cli
push
imul
or
xchg
stos
sbb
les
stos
out
lods
dec
xor
rcr
call
cdq
dec
inc
sub
shl
sbb
mov
popa
sbb
mov
inc
xlat
stc
fcmovne
dec
jg
mov
rcr
adc
mov
sbb
cmp
test
xor
repz
call
cmp
cmp
ins
dec
push
out
adc
xor
jns
or
lahf
mov
mov
test
mov
add
xchg
or
inc
adc
cld
jp
push
mov
inc
adc
xchg
fiadd
sub
leave
or
hlt
lahf
fs
cmp
movs
lds
lahf
mov
sub
gs
in
push
jo
mov
and
pop
mov
jo
push
je
adc
sub
bound
fucomi
and
inc
and
xlat
cmps
idiv
mov
xor
mov
stc
arpl
pop
lea
add
arpl
(bad)
(bad)
ins
(bad)
xor
jmp
sbb
aaa
adc
and
retf
mov
ja
outs
adc
bound
fsubrp
dec
imul
dec
fcom
push
dec
mul
int
inc
in
cmp
ret
mov
and
pop
mov
test
pop
fnstsw
cmp
ja
jg
lahf
or
es
lds
xchg
add
(bad)
cmp
xlat
pop
sbb
mov
xor
pop
out
pop
and
ja
imul
sub
push
push
outs
push
cmp
das
call
mov
push
and
mov
aad
xchg
scas
xor
xchg
jo
sub
lea
sub
std
cmp
mov
(bad)
shr
pop
pop
rcl
inc
mov
leave
iret
dec
mov
jecxz
and
cmp
and
pusha
mov
pop
jns
xchg
jnp
mov
pop
(bad)
pop
mov
fstp
jne
ins
jbe
jge
loope
adc
jns
or
mov
stos
inc
mov
cmp
call
inc
fistp
push
sbb
popa
or
sti
inc
out
sahf
xor
xor
ret
fdivr
pop
repnz
push
sahf
hlt
ss
dec
fisub
mov
jbe
dec
adc
pop
pop
js
popa
or
(bad)
jnp
and
retf
sbb
xchg
ficom
push
imul
mov
mov
pop
mov
push
jnp
and
sub
lea
sti
xor
dec
out
(bad)
cmp
ss
cmp
and
push
sbb
inc
jbe
fs
retf
cmp
or
xchg
fs
push
repz
xchg
out
test
aad
and
in
fsubr
mov
loop
xchg
mov
mov
inc
aas
repz
ins
mov
jge
adc
or
rcr
xor
mov
mov
out
nop
jae
pop
xchg
(bad)
popf
mov
push
sbb
fdiv
aaa
cli
cmp
jmp
cdq
icebp
xor
xchg
jecxz
pop
sub
mov
int
(bad)
leave
adc
mov
pop
arpl
adc
(bad)
icebp
xor
mov
sub
mov
mov
jge
pop
mov
push
ja
neg
add
xchg
shl
mov
in
out
sbb
(bad)
xlat
test
cmps
in
and
out
push
add
outs
xchg
push
xor
icebp
int
mov
xchg
xchg
fwait
or
xchg
push
mov
xor
jp
repnz
adc
sub
ins
scas
jl
inc
jmp
xchg
lods
shr
jg
jo
mov
sub
outs
jae
movs
aad
icebp
repnz
jmp
lods
mov
loope
ror
je
std
cdq
pop
les
dec
xor
push
hlt
push
(bad)
push
int
je
jne
push
sub
jne
xchg
push
cmp
mov
mov
dec
push
push
inc
xchg
cmp
xchg
jle
jecxz
aaa
rcr
xchg
jb
stc
in
jo
push
mov
popa
adc
add
stos
xor
aam
mov
out
cmps
push
outs
daa
test
cmp
jns
and
push
or
lock
xor
aam
loopne
pop
mov
xchg
stos
pop
cmps
pop
jmp
sbb
sbb
aad
bound
int
inc
sar
ret
ins
jbe
(bad)
dec
mul
mov
dec
add
popa
push
mov
(bad)
shl
mov
rcl
loopne
shr
repnz
out
dec
test
mov
mov
dec
fmul
imul
xor
push
or
push
popa
movs
cmp
or
add
xor
ss
and
xor
or
mov
ja
adc
xchg
mov
loope
jge
pushf
xchg
sub
les
call
popa
outs
adc
les
(bad)
cdq
ins
out
fisttp
cdq
pusha
sahf
or
dec
dec
push
dec
imul
pop
jmp
popf
(bad)
sti
test
repnz
aam
xchg
push
and
repnz
hlt
adc
or
push
push
cmp
add
xor
jnp
call
clc
cmps
sbb
in
inc
or
xchg
in
scas
adc
test
(bad)
(bad)
push
or
push
xor
stc
jb
cwde
ror
ror
cmp
push
mov
cdq
or
ss
repz
xor
dec
or
mov
inc
sub
push
(bad)
cld
imul
xchg
lds
stc
and
cmps
xchg
mov
(bad)
int3
fisttp
repz
push
dec
in
inc
mov
xchg
cmc
sub
ds
pop
inc
cmp
test
cmp
push
push
pop
out
sub
dec
rol
popf
sar
push
call
clc
sti
sbb
(bad)
mov
jecxz
aaa
mov
out
stos
jb
shl
test
mov
arpl
mov
js
push
mov
and
xor
outs
dec
data16
aad
push
pop
jmp
cmp
sbb
or
fcom
pop
mov
jb
fwait
mov
mov
mov
inc
dec
sahf
inc
jb
lea
inc
or
sar
in
popf
jmp
mov
mov
xchg
push
fs
cdq
shl
and
adc
sub
xor
dec
jmp
outs
loopne
pop
xor
sti
push
adc
xchg
retf
mov
ss
cwde
jl
jbe
in
loope
mov
pop
jo
shl
cmp
in
and
in
push
nop
mov
fiadd
push
push
mov
(bad)
mov
shl
mov
(bad)
repz
aas
mov
outs
cmp
sbb
in
sub
sbb
mov
lahf
dec
mov
(bad)
mov
fsub
mov
inc
xchg
imul
(bad)
into
repz
retf
movs
and
cmc
inc
scas
(bad)
cdq
inc
call
sub
mov
jmp
xor
aad
and
in
(bad)
cli
add
push
(bad)
data16
lahf
jp
daa
cwde
out
xchg
sbb
fisub
add
int
pop
mov
dec
retf
fbld
fcmovnb
mov
scas
lock
or
data16
xchg
or
or
jb
test
pop
adc
xor
out
push
out
xchg
inc
hlt
xchg
fcmovnu
sub
mov
out
jnp
pop
cwde
mov
out
mov
mov
movs
ins
add
xchg
cmc
add
and
jle
sub
or
push
push
bnd
adc
push
xchg
jo
ja
cld
sahf
in
or
test
scas
xor
pop
mov
test
movs
mov
xchg
dec
jl
and
cmp
adc
mov
inc
inc
xchg
scas
sti
mov
dec
retf
jmp
ror
xchg
inc
out
xchg
push
jmp
popf
dec
and
jno
xchg
sbb
mov
out
xor
in
push
lock
dec
inc
xor
xor
dec
xlat
mov
push
(bad)
sbb
popa
dec
jns
cmp
loope
imul
add
mov
jle
and
mov
scas
popf
mov
dec
mov
rol
sbb
aas
imul
adc
pop
dec
dec
popa
mov
xchg
jle
repz
mov
push
loop
stos
(bad)
aam
jmp
ficom
sub
cmp
push
mov
(bad)
hlt
jo
mov
scas
mov
mov
add
jno
xor
cmp
dec
mov
and
adc
repnz
into
mov
fdiv
stos
sbb
add
ss
sbb
and
push
cmp
stos
and
push
in
(bad)
fsub
loope
movs
out
ret
pusha
fcom
mov
dec
enter
pusha
xor
cbw
popf
popf
adc
test
inc
xchg
loopne
xchg
out
pop
mov
lods
or
sbb
int
mov
movs
or
dec
ror
repz
mov
dec
and
cld
dec
mov
fcomi
call
test
call
mov
fldcw
xor
fdiv
scas
or
(bad)
push
out
inc
xor
mov
adc
xlat
mov
push
push
out
test
sti
sub
adc
push
xor
pop
into
in
out
lea
xor
call
pop
xor
mov
in
push
and
retf
pop
or
jb
push
cmps
ret
jmp
and
or
jno
jnp
mov
adc
imul
sub
(bad)
hlt
mov
xor
int
cmc
lds
mov
ret
pop
cdq
les
adc
xor
mov
lahf
out
xor
fwait
cmp
mov
cld
aad
xchg
pop
cmp
or
(bad)
fcomp
or
push
enter
fidiv
mov
stc
lock
push
(bad)
and
out
je
(bad)
test
(bad)
bound
dec
mov
adc
cmc
out
pop
sub
sub
cmp
in
ins
or
jmp
lods
dec
(bad)
pop
rol
lods
mov
mov
jge
dec
sar
mov
push
push
lahf
mov
in
sub
(bad)
push
jno
dec
loopne
ins
sbb
arpl
js
xchg
das
jecxz
add
popa
inc
pushf
sbb
mov
sahf
shl
cmp
adc
or
adc
sub
lahf
in
mov
retf
mov
xor
stc
pop
xor
mov
or
sub
adc
xrelease
fdivr
shl
jmp
mov
push
xor
xor
scas
icebp
mov
adc
cmc
into
add
lahf
add
xchg
mov
dec
mov
dec
push
jnp
data16
(bad)
mov
mov
cmps
cmp
movs
pushf
jbe
jge
(bad)
loopne
cs
xchg
xchg
mov
les
(bad)
ret
pushf
nop
fs
cmps
or
retf
inc
mov
push
push
ds
(bad)
call
mov
pop
stos
dec
jmp
ins
jge
jb
sbb
rcr
cmc
inc
fimul
scas
sbb
xor
push
jbe
fdivr
xchg
test
fsubr
dec
pushf
out
cwde
jo
jmp
ficomp
cdq
out
push
dec
ret
rol
enter
aaa
mov
cwde
lahf
lds
frstor
add
div
imul
mov
(bad)
jbe
in
test
lds
fisub
aad
cmps
das
pop
xchg
lds
push
mov
mov
imul
dec
cld
push
cmp
addr16
xchg
and
ins
je
ins
fnstcw
push
push
adc
cmp
gs
cmp
xor
push
cld
jns
push
fmul
icebp
adc
push
call
mov
add
sar
es
(bad)
dec
push
lds
ss
mov
cmp
fs
cmp
sahf
stos
imul
imul
mov
fwait
sub
les
mov
jne
out
imul
pushf
cmps
push
gs
and
adc
iret
clc
sub
xor
hlt
mov
stos
mov
inc
pushf
inc
push
xchg
pop
cmp
mov
mov
pop
and
jae
xchg
(bad)
cdq
inc
movs
mov
xchg
lods
dec
mov
sub
leave
xchg
mov
push
stos
daa
xadd
jl
aam
dec
mov
and
pop
clc
imul
mov
jp
mov
loope
rcl
xor
mov
jl
fimul
mov
loopne
in
vandpd
and
jno
pop
xor
rcl
imul
mov
cld
cs
sub
xchg
mov
outs
cmp
mov
dec
imul
inc
sub
mov
fist
inc
mov
cmp
dec
leave
scas
pushw
xor
jp
cmp
mov
jne
mov
or
xchg
mov
sub
xor
push
shr
xchg
dec
dec
lahf
mov
leave
out
cmc
cs
xchg
pop
adc
push
cmp
adc
es
jge
lods
enter
xor
xor
es
pop
mov
(bad)
cmp
repz
in
mov
imul
std
enter
je
lea
loopne
push
and
pop
xchg
pop
sub
retf
std
push
dec
lds
and
test
imul
inc
cs
in
sbb
cmp
adc
cld
mov
(bad)
lock
pop
ins
fidiv
mov
add
mov
outs
cdq
sar
sbb
inc
inc
rcl
aaa
inc
and
pop
rol
inc
(bad)
adc
push
sub
sbb
(bad)
push
inc
or
pop
dec
push
dec
mov
mov
in
ins
pop
es
adc
mov
mov
pop
cmp
adc
outs
pop
mov
add
jmp
scas
dec
inc
inc
xchg
xlat
mov
and
int3
pop
fwait
cmp
repz
into
jle
mov
lock
stos
pop
sbb
pop
push
cmc
hlt
xor
nop
xchg
jg
xor
mov
bound
jb
clc
push
cmp
out
shl
ret
and
xchg
fnstenv
pop
not
xchg
cmp
rol
lods
xchg
(bad)
pop
push
cmp
pushf
data16
cmps
daa
(bad)
rcr
add
inc
jmp
pop
(bad)
repnz
(bad)
adc
inc
push
ja
daa
pop
out
add
icebp
fsubr
xchg
mov
(bad)
cmc
jnp
jbe
fdiv
hlt
fucompp
and
movs
fld
sbb
fdivp
jge
cs
mov
push
imul
push
test
pop
xor
mov
push
pop
cmp
xchg
cli
inc
sbb
ss
sbb
aam
fimul
nop
dec
cld
and
xor
shl
xchg
and
dec
dec
mov
xchg
ins
pop
mov
not
invd
sbb
mov
in
mov
cmp
retf
inc
icebp
int
imul
leave
lock
adc
aam
mov
aaa
(bad)
mov
fsubr
pop
int3
cmp
dec
xor
aam
scas
mov
sbb
sahf
sbb
pop
mov
pop
cmp
stos
(bad)
pop
jmp
dec
sti
sbb
cmp
jg
fucomip
in
arpl
test
cld
mov
dec
sbb
push
std
cmp
jo
or
lods
cmp
ror
pusha
mov
push
cmc
pop
mov
xor
out
lds
pop
or
ret
pop
dec
sbb
cdq
mov
retf
mov
mov
pop
or
in
shl
ret
mov
mov
in
push
xchg
loope
dec
fmul
sub
lea
mov
mov
add
push
fild
mov
mov
cld
jmp
mov
mov
mov
push
sbb
nop
je
retf
and
jmp
mov
hlt
test
push
loop
pop
mov
xor
add
shr
stos
xchg
xchg
pop
movs
add
xor
jmp
pop
shr
push
popa
(bad)
dec
cmp
std
sbb
cli
adc
push
loop
aas
fistp
cmovp
mov
jno
inc
mov
add
cmps
and
sbb
cmp
data16
xchg
jo
cmp
jle
push
mov
repnz
and
pop
jb
dec
sar
cli
call
and
imul
cmp
sbb
inc
dec
leave
or
jmp
mov
dec
jp
xchg
bound
jnp
sbb
int
fld
movs
mov
add
enter
pop
mov
xchg
inc
jo
out
(bad)
movs
jb
inc
add
ja
mov
push
mov
jmp
xchg
sbb
cwde
fistp
div
mov
push
adc
fcomp
rep
cmp
cs
xor
adc
dec
rol
push
fwait
push
fwait
stc
mov
pusha
and
repz
mov
cmc
xchg
mov
sbb
jp
fild
mov
bound
jns
or
pop
outs
xchg
adc
mov
pusha
sub
and
aaa
cmp
cmps
cld
ja
adc
stos
pusha
sub
stos
sahf
imul
loope
jl
pop
pop
add
sar
cld
data16
pop
and
out
inc
inc
nop
sbb
jne
jns
sar
xchg
movs
mov
retf
and
push
call
fnsave
lea
jmp
xchg
popa
icebp
cmp
sub
sti
push
pop
into
popa
imul
addr16
in
push
add
hlt
xor
mov
sti
xor
or
outs
test
or
jno
enter
je
inc
fidivr
hlt
sbb
ins
sbb
xchg
loope
js
xchg
push
xor
mov
xor
and
in
inc
pop
sub
(bad)
clc
pop
xor
call
enter
mov
sub
mov
push
repz
int
pop
adc
std
test
lods
jmp
add
mov
push
and
hlt
pop
sbb
jl
sbb
fwait
jmp
nop
bound
call
jecxz
dec
out
mov
imul
shr
fmul
adc
test
dec
(bad)
shl
retf
idiv
aad
call
jb
sbb
int
mov
cwde
lock
aad
addr16
mov
xor
movs
inc
or
loope
ret
movs
mov
pop
fidivr
jb
jno
sub
sub
movs
xchg
add
inc
ficom
fcmovb
add
inc
cmp
pop
data16
adc
jbe
xor
sbb
stc
adc
add
nop
jge
outs
clc
lock
movs
imul
add
xchg
sub
mov
gs
hlt
pop
xor
inc
jo
mov
lods
push
or
dec
or
aad
sub
inc
aad
shl
adc
xchg
loope
push
xlat
into
das
and
hlt
and
daa
mov
ins
cmp
sub
pop
out
xor
inc
stos
out
cwde
cs
lock
mov
dec
xlat
gs
sbb
bound
addr16
jp
ss
xchg
adc
test
pop
test
and
fcmovu
xchg
ins
cli
idiv
add
jbe
cmp
retf
addr16
or
jge
push
push
cdq
dec
mov
nop
movd
mov
mov
stos
sub
add
xor
jb
pop
pusha
and
ja
jg
mov
push
pop
cmps
mov
iret
pushf
push
hlt
mov
enter
push
stos
js
les
dec
pop
mov
sar
mov
sub
in
fld
push
jnp
or
scas
das
ja
mov
lds
rcr
call
sti
push
pop
mov
lods
hlt
xchg
in
mov
lahf
cmp
call
hlt
xchg
aad
pop
clc
hlt
repz
ficomp
dec
pop
jmp
and
jne
retf
loopne
(bad)
push
rol
xchg
test
or
ins
enter
fisub
stc
jge
ins
imul
inc
aaa
add
scas
jmp
es
cwde
daa
adc
out
push
popa
shl
(bad)
ficomp
mov
add
outs
cmp
pop
es
lds
jb
dec
jo
call
call
jnp
ret
push
(bad)
push
test
adc
je
ins
pop
enter
and
rol
fcomp
xchg
jl
inc
pop
mov
out
dec
xchg
jecxz
pop
or
test
sub
jecxz
movs
pop
stc
rcl
cmp
js
jns
call
scas
or
sub
fwait
mov
loopne
(bad)
lock
imul
xor
inc
test
mov
mov
jne
(bad)
cmc
sub
or
adc
xchg
or
movs
mov
mov
sub
pop
pop
ds
dec
xor
inc
(bad)
out
nop
lea
jmp
cwde
test
das
fiadd
push
jbe
mov
jae
popf
fidivr
jbe
sbb
(bad)
imul
and
enter
mov
mov
inc
pop
jmp
shl
mov
cmps
gs
scas
sbb
push
in
sub
fdivr
jmp
lahf
xchg
inc
push
or
or
mov
push
push
mov
ins
cli
hlt
gs
ins
xchg
add
shl
inc
fisttp
popf
jp
jp
ret
fld
or
lock
mov
xor
shr
dec
rcl
or
mov
xchg
xor
mov
in
test
inc
dec
ret
push
cmp
gs
add
xor
pop
dec
push
aam
xchg
rcr
ja
mov
aad
adc
in
or
jp
xchg
loopne
jbe
loopne
js
jb
icebp
test
loope
jne
mov
pop
or
enter
sbb
inc
mov
fsubr
or
fild
inc
xor
inc
pushf
daa
mov
mov
(bad)
aad
fwait
xchg
jb
les
std
or
dec
ss
(bad)
push
dec
sbb
call
add
into
adc
ficom
out
push
mov
xchg
cmps
xchg
call
pop
out
jp
bound
ins
retf
std
dec
jge
fxam
push
div
iret
in
adc
stos
out
fwait
retf
jnp
fldcw
mov
nop
dec
dec
in
or
(bad)
jg
pop
push
fsubr
icebp
stc
cmp
mov
imul
jb
retf
xor
data16
add
push
jmp
lea
mov
mov
push
pop
add
xor
fdiv
pop
jmp
stos
sar
xor
pop
fsub
mov
in
mov
adc
mov
(bad)
mov
sbb
enter
ret
or
sub
and
push
fwait
test
mov
add
mov
xchg
push
xor
cmp
aad
or
jmp
adc
sub
clc
pop
push
data16
or
in
sti
and
retf
or
cld
jmp
jae
mov
cmc
xchg
retf
adc
xor
xor
xlat
pop
pushf
repz
out
(bad)
ffreep
pop
shl
std
mov
fdiv
ins
fs
arpl
mov
(bad)
imul
loop
ins
movs
aas
mov
sbb
xor
xor
inc
jae
mov
nop
jp
les
adc
in
sbb
ins
std
inc
sub
and
rol
inc
inc
jbe
pop
push
(bad)
scas
push
ficomp
int3
mov
mov
retf
mov
fwait
mov
dec
es
sahf
leave
aad
mov
fimul
xchg
lea
stos
lods
loope
stos
mov
(bad)
movs
pusha
je
retf
xor
jbe
mov
dec
in
fidivr
jge
jae
pop
popf
iret
push
lahf
jmp
sub
adc
mov
and
movs
repnz
pop
and
faddp
test
and
jne
xchg
mov
jmp
into
inc
dec
ja
jb
lods
icebp
add
lods
sub
jbe
cmp
scas
inc
pop
ja
jmp
add
int
push
mov
iret
(bad)
pop
(bad)
lea
jle
xor
inc
cmps
mov
std
das
test
xchg
jmp
mov
aam
leave
outs
(bad)
clc
cmps
cmp
(bad)
push
sbb
sub
cmp
or
jmp
mov
sbb
ins
add
out
fiadd
(bad)
and
cdq
sub
mov
dec
jbe
in
test
pop
inc
outs
or
inc
(bad)
popa
movs
inc
enter
je
neg
(bad)
sbb
pop
or
fcomp
xor
arpl
xor
(bad)
pusha
sub
push
add
jo
je
das
pop
les
sub
retf
aaa
jl
adc
cmp
ins
leave
es
ds
jbe
jl
jle
gs
repz
pop
loopne
rcl
cmp
cmps
and
dec
lock
arpl
je
push
les
push
jmp
mov
out
outs
pop
mov
mov
mov
jle
cwde
push
sub
xor
aas
out
nop
mov
xchg
lods
pop
jmp
add
push
(bad)
rcr
or
add
mov
loope
push
pop
cmc
(bad)
iret
xor
scas
sub
iret
adc
test
in
out
(bad)
cmp
add
sub
stc
sti
dec
xchg
ins
jae
mov
mov
add
cmp
sub
into
leave
xchg
loopne
pop
inc
stos
inc
add
mov
add
dec
sub
add
stos
aas
retf
ins
cld
fs
leave
imul
retf
jge
in
rol
mov
jne
cmp
jmp
push
xlat
retf
aas
add
aaa
fld
je
jmp
mov
outs
popa
jge
dec
aam
cmc
xchg
push
sub
jecxz
inc
push
adc
jae
inc
pop
mov
pop
call
sbb
sar
push
and
int
inc
mov
mov
es
push
cwde
add
sub
adc
and
ds
rcl
mov
fisttp
js
or
jecxz
mov
sub
clc
test
fld
mov
shl
outs
xchg
stos
cmp
pusha
cmovp
ds
test
push
retf
(bad)
and
loope
ror
jae
push
push
(bad)
adc
jae
shr
fsubr
test
jo
outs
cmps
jae
sub
xlat
dec
cdq
jmp
push
cmp
cli
stos
stos
mov
popa
xchg
cmp
and
test
cmp
stc
fucom
xchg
mov
sbb
xor
and
imul
lods
mov
sub
xor
(bad)
sahf
daa
inc
ds
out
es
out
les
xchg
xchg
add
imul
cmp
imul
pop
pop
or
push
mov
sahf
aaa
(bad)
cld
mov
jl
in
jmp
cmp
call
pop
and
jo
inc
jecxz
test
adc
mov
idiv
inc
jmp
cmp
jmp
rcl
popf
add
shl
xor
jno
sti
mov
push
call
dec
out
fld
push
jns
mov
inc
xchg
es
mov
sahf
cmp
sbb
bnd
inc
dec
(bad)
pushf
mov
inc
out
adc
add
es
hlt
mov
cmc
rcr
cmc
cmps
lods
mov
pop
fucomp
sub
hlt
push
push
jg
retf
mov
lahf
sub
push
in
inc
mov
inc
sbb
dec
dec
retf
addr16
pop
out
mov
and
sub
int
xor
in
mov
cmp
cmp
in
push
outs
out
ret
arpl
or
ins
nop
je
repnz
pop
inc
ret
out
sti
mov
aas
jmp
outs
test
sub
imul
pushf
ss
js
(bad)
ins
stos
cwde
dec
push
add
fild
or
mul
jae
add
dec
inc
and
mov
nop
mov
jmp
in
cmps
xor
popa
add
enter
pushf
mov
push
mov
mov
pop
dec
adc
dec
ret
ins
out
dec
fwait
ret
fsub
jl
cmp
adc
into
jnp
bnd
sbb
pop
adc
sbb
popa
add
sbb
pop
push
fld
push
ins
call
pop
stc
mov
push
adc
int
add
xor
neg
sbb
mov
inc
pmulhuw
mov
sbb
(bad)
out
push
xchg
stc
cs
mov
pop
dec
xor
mov
enter
xchg
in
push
or
push
jb
outs
adc
repz
push
in
sub
out
cld
pop
pop
add
mov
icebp
rcl
aas
push
inc
inc
aaa
movs
(bad)
js
jmp
mov
rol
cmp
pop
cmps
xor
fbstp
mov
dec
fsubr
out
or
repz
and
push
or
jge
(bad)
movs
stos
mov
inc
and
jmp
or
cmp
or
(bad)
sub
fcom
jo
xchg
mov
mov
lods
sub
jg
aas
pop
xchg
inc
clc
gs
pop
mov
push
add
sbb
xor
ret
mov
or
jmp
pop
mov
inc
ins
lahf
lds
stc
inc
xchg
jle
or
mov
jns
in
push
xor
ror
mov
test
jmp
clc
inc
sbb
ficom
cwde
or
rcl
xor
jb
aas
jp
mov
and
xor
movs
or
pop
test
and
sbb
xor
sbb
mov
data16
(bad)
lahf
cmp
nop
enter
(bad)
xchg
inc
or
jle
call
mov
shl
test
push
mov
shr
push
mov
sbb
dec
rcr
ins
dec
fnstcw
(bad)
int3
pop
es
jns
xchg
dec
mov
jo
outs
lds
fst
sbb
gs
test
jns
pop
shr
inc
fs
popa
fs
mov
ins
xchg
aad
addr16
aad
mov
cmp
jge
out
iret
mov
arpl
sbb
cmps
mov
in
int
adc
pushf
iret
clc
pop
addr16
sbb
(bad)
cmp
adc
(bad)
pop
out
cmp
mov
fcomi
mov
dec
fst
jmp
sub
jle
arpl
push
jno
daa
cmp
lea
sbb
aaa
out
adc
xchg
and
movs
movs
xchg
imul
ret
add
mov
or
call
pop
cmp
lock
mov
cdq
mov
arpl
mov
std
inc
js
add
outs
xor
mov
icebp
or
mov
retf
loop
cmc
xlat
xor
les
ret
cmps
push
xchg
cmps
push
push
push
cmps
jno
push
inc
pop
repnz
(bad)
in
pop
inc
stc
dec
push
ret
adc
int3
sbb
aaa
adc
scas
loope
push
stos
jnp
push
icebp
jle
(bad)
xchg
mov
call
pop
add
xor
jge
mov
adc
pop
gs
pop
cmp
cmp
adc
(bad)
stos
in
cmps
or
sbb
(bad)
and
jecxz
pop
aas
cmp
(bad)
int3
scas
push
push
or
push
and
loop
mov
fcmovbe
rcl
push
jns
pop
retf
jno
pop
cmp
in
cmp
adc
xchg
push
out
fs
push
mov
mov
pop
fisubr
sbb
mul
test
mov
dec
cld
add
jecxz
jmp
lds
hlt
push
add
ret
xchg
test
movs
nop
test
outs
xchg
inc
push
in
mov
aam
movs
js
xchg
mov
ds
out
jb
and
and
mov
and
test
mov
mov
and
call
ds
loop
mov
fiadd
pop
out
inc
pop
test
add
sub
inc
aam
jae
xor
nop
push
(bad)
push
idiv
scas
jge
lds
sbb
call
sub
push
xchg
cmp
std
jge
push
pop
mov
sahf
lock
ds
arpl
jns
push
inc
ja
mov
adc
push
jo
out
retf
dec
and
xor
stc
shl
shl
ins
js
sbb
and
adc
mov
ins
or
pushf
mov
jnp
xchg
aad
jge
ror
test
dec
into
in
cmp
mov
push
xchg
aaa
js
sub
in
pusha
enter
xor
sbb
imul
ins
repnz
fbstp
inc
xchg
aad
push
xor
or
pop
and
gs
pop
dec
xchg
fdivp
push
outs
push
aam
ret
data16
mov
cmp
inc
bound
cmps
xor
lock
iret
cwde
sub
stc
inc
(bad)
push
rcr
adc
in
fucomi
xchg
dec
inc
jae
ds
imul
enter
push
pop
jp
lahf
jns
cwde
mov
ror
dec
add
cli
pop
mov
inc
sti
hlt
in
sub
or
push
mov
mov
in
sub
cli
shl
xchg
xchg
int3
push
repnz
or
mov
popa
push
je
stc
cmc
adc
push
(bad)
mov
inc
ror
sar
outs
and
scas
push
leave
pop
out
inc
inc
clc
cwde
iret
ja
add
aad
cs
dec
retf
sbb
fisttp
dec
stos
sub
bound
dec
xchg
repz
adc
cwde
push
fdiv
out
mov
sub
cmp
mov
bound
push
stos
xchg
(bad)
fs
cdq
mov
repnz
(bad)
rcr
retf
lds
cld
ins
dec
es
stos
(bad)
in
js
pop
out
jge
les
cld
inc
(bad)
inc
jp
xor
test
dec
or
cli
in
in
push
aaa
hlt
push
pusha
pushf
cli
ja
mov
cmps
add
enter
cmp
or
ins
outs
jmp
dec
inc
fcomp
jl
loop
shl
scas
mov
dec
fs
inc
int
jno
mov
pop
nop
lods
pop
pop
inc
or
jae
scas
shr
sbb
xchg
adc
gs
adc
fnsave
fst
xchg
add
pop
jnp
imul
movs
outs
(bad)
mov
imul
int3
add
scas
call
int3
pushf
inc
out
retf
push
xor
in
fwait
adc
aam
rcr
sub
pop
inc
xchg
das
add
std
xor
adc
mov
test
dec
sbb
repnz
sbb
pop
inc
pop
call
push
mov
cld
pop
and
fild
sbb
or
rcr
mov
sar
lea
ja
je
jg
retf
xchg
mov
out
into
sub
out
inc
pop
inc
mov
mov
mov
ret
mov
xor
jb
xchg
or
xchg
test
ds
jae
mov
push
call
mov
popf
cmps
test
pop
leave
out
fs
enter
lea
repz
bnd
mov
ud2
retf
dec
pop
push
pop
imul
adc
xor
push
mov
cmp
data16
pop
in
cmps
xor
sti
and
add
push
add
sub
fcom
fiadd
or
stos
jmp
test
rcr
mov
xor
sub
es
xor
cmp
or
outs
inc
cmp
sub
loop
inc
clc
popf
in
pop
cmp
inc
shl
push
jmp
push
mov
stos
rol
and
cmp
inc
pop
ss
xor
popf
(bad)
jmp
mov
and
push
mov
test
iret
mov
inc
fsub
dec
xor
lahf
lods
dec
(bad)
je
icebp
hlt
jbe
jecxz
adc
mov
xor
pop
sahf
cmps
sub
push
sub
test
pushf
pushf
mov
adc
mov
jo
data16
int
loope
fs
xor
loope
jp
pushf
add
and
xor
mov
inc
adc
xor
inc
xchg
retf
mov
pop
inc
and
push
mov
outs
jo
inc
sub
or
xor
cmc
fwait
sar
cli
jbe
pop
and
cmp
and
sti
in
ja
into
jne
pop
cmp
mov
repz
outs
xor
jecxz
push
stc
jne
lds
int
je
imul
mov
push
std
jmp
loope
aad
push
jmp
pop
or
stc
sbb
retf
pop
enter
or
pop
mov
inc
js
push
int
mov
mov
ret
mov
test
sub
mov
push
arpl
lods
push
xor
pop
retf
jecxz
xor
not
dec
xlat
(bad)
cmc
pop
mov
ss
scas
push
(bad)
xchg
lods
jae
mov
push
icebp
sbb
call
dec
cmp
mov
push
add
mov
stos
rcl
xor
(bad)
loope
jo
dec
rcl
icebp
pop
je
dec
jge
and
ins
xchg
mov
rcl
sub
sub
hlt
rcr
and
sub
std
xchg
mov
push
ss
adc
call
and
sub
in
nop
aad
adc
adc
cli
int
xchg
outs
ret
jns
cmp
xor
test
lods
dec
mul
out
pop
or
std
jo
push
daa
xchg
sub
push
pop
test
leave
pusha
repz
popf
(bad)
and
jp
into
inc
paddusw
add
pop
mov
idiv
pop
mov
mov
movs
psllq
dec
retf
cmp
mov
xor
fsub
inc
std
(bad)
movntq
fist
adc
sbb
push
les
push
add
xor
aad
push
lock
retf
sub
dec
imul
sbb
jo
or
vunpcklps
pop
idiv
and
pop
popf
xor
and
mov
push
fcmovnb
inc
pop
je
pop
rcr
popa
cmp
aam
(bad)
xchg
mov
pmuludq
push
aam
cld
push
and
cld
add
imul
adc
mov
ss
adc
push
div
fwait
test
rcr
js
mov
mov
std
add
mov
dec
shr
shl
imul
mov
inc
pop
cmp
mov
jb
scas
cmps
adc
mov
mov
loop
loope
es
rol
fistp
pop
fld
xchg
adc
jb
mov
inc
dec
mov
sti
js
iret
sub
call
cmp
(bad)
cmp
movs
mov
push
inc
dec
jb
leave
lock
sbb
sbb
out
push
push
in
inc
mov
push
jb
scas
dec
in
mov
push
and
jb
xchg
push
and
cmp
neg
jne
sub
xchg
sub
sahf
arpl
stos
cmp
adc
inc
jb
jg
jecxz
mov
das
and
mov
dec
(bad)
cli
inc
enter
add
cmp
jb
xchg
call
fist
outs
mov
push
sub
push
cmp
jge
test
out
or
jmp
xor
(bad)
mov
fcom
cwde
xlat
iret
inc
jl
test
cmp
cmps
push
adc
sub
mov
lea
pop
dec
sub
leave
lds
pop
push
cmp
pop
inc
loope
mov
div
call
(bad)
and
mov
mov
pop
xor
stos
jmp
cmp
mov
add
rol
sbb
shl
sbb
mov
test
mov
mov
push
mov
pop
xchg
fisub
xchg
sbb
add
cmps
push
call
fcmove
rcl
mov
mov
aas
adc
cmp
aas
cmp
les
push
or
and
or
cld
lock
cmp
mov
repnz
data16
push
jg
scas
mov
jo
fld
jg
pop
int3
xchg
into
sbb
int3
or
ins
add
mov
sub
mov
dec
hlt
jae
call
test
cwde
adc
mov
and
sub
fadd
call
cmps
sub
ret
and
adc
mov
inc
add
adc
mov
pop
mov
sbb
call
ins
adc
nop
icebp
push
int3
int
out
ficomp
movs
mov
xchg
fistp
ja
push
call
pop
push
icebp
and
adc
(bad)
shl
call
mov
mov
repnz
push
xor
fild
mov
cwde
das
xchg
dec
jmp
scas
aaa
lock
out
out
hlt
iret
xchg
and
(bad)
cmps
push
xor
inc
inc
mov
scas
jl
add
xchg
mov
mov
inc
xchg
outs
and
adc
mov
mov
nop
mov
cmp
test
int3
pop
xchg
fisub
out
mov
dec
dec
dec
mov
cmp
aam
shl
ror
jle
sahf
data16
shr
jnp
pop
movzx
jecxz
xchg
cmp
push
mov
sbb
mov
movs
push
inc
int
jnp
rcl
es
rol
and
and
loop
jge
jmp
xchg
sub
dec
xchg
push
sti
ror
sbb
xchg
sbb
(bad)
nop
aad
xchg
pop
xor
dec
cmp
push
dec
mov
in
enter
into
jne
ds
pop
and
mov
xchg
ds
call
or
mov
out
cmp
sbb
adc
push
cmps
mov
pop
mov
scas
push
inc
xchg
call
iret
cmp
mov
ror
js
mov
xlat
out
or
mov
fdiv
sub
jmp
adc
inc
mov
(bad)
pop
jge
and
dec
loop
dec
mov
add
int
cmp
inc
aam
sbb
jg
mov
ss
jp
test
bound
lock
mov
pop
call
mov
aas
inc
rcr
into
or
aam
cmps
mov
adc
xor
orps
sbb
repz
dec
fsubr
(bad)
push
xlat
jg
in
or
cmp
(bad)
cmp
mov
icebp
nop
push
mov
sahf
repz
scas
inc
xor
inc
rcl
(bad)
lahf
shl
mov
repnz
add
fs
fcom
pop
and
pop
pop
xor
vmovss
adc
fndisi(8087
ins
mov
sub
jecxz
push
jge
mov
mov
and
dec
lods
xor
out
cdq
ret
ret
add
mov
mov
shl
dec
in
push
fst
or
imul
ins
icebp
stos
vsqrtsd
cmp
jle
jmp
adc
pop
imul
cmp
sub
dec
add
pop
push
xchg
add
xchg
out
sbb
mov
aas
sub
xor
push
in
mov
out
repz
shl
mov
arpl
inc
mov
test
test
sbb
outs
shl
mov
sahf
adc
mov
or
js
fcomip
adc
cmp
pop
push
mov
push
jmp
mov
test
sbb
enter
cli
sub
cs
mov
xor
adc
dec
into
inc
jg
fcomp
jge
or
jae
sub
sbb
clc
out
daa
es
add
jmp
sub
push
add
or
push
mov
hlt
mov
retf
idiv
cmps
dec
clc
loop
cli
ret
dec
popf
push
test
shr
adc
bswap
cmc
mov
mov
loop
ret
and
mov
imul
aas
adc
jecxz
test
rcl
sub
inc
mov
jae
cmc
push
mov
lahf
clc
xchg
inc
loopne
or
adc
sub
cdq
in
mov
lea
jg
lds
div
xchg
adc
jbe
mov
call
mov
bound
inc
jmp
and
mov
push
aad
in
and
mov
push
(bad)
aas
xchg
sbb
pop
sbb
mov
test
rcr
cmp
adc
lds
xchg
call
movs
sbb
add
adc
mov
ja
ss
sub
movs
xor
je
outs
(bad)
hlt
mov
jle
and
sti
call
cmps
pop
inc
mov
(bad)
pop
pop
jae
not
sub
movs
jmp
and
int
pop
movs
dec
cld
fucomip
mov
inc
std
shl
mov
jg
std
bound
mov
and
jge
sbb
xchg
or
div
pop
dec
jbe
scas
push
je
xchg
xchg
jno
cli
dec
(bad)
mov
push
and
jg
and
retf
fidivr
fcomp
cmps
inc
pushf
pop
(bad)
scas
mov
adc
std
bound
dec
xchg
div
leave
cmp
fbld
in
cmp
sbb
inc
retf
pop
adc
mov
push
push
inc
add
and
jle
pop
hlt
push
adc
pusha
imul
cli
push
pop
xchg
data16
das
int3
(bad)
ins
or
pop
jle
add
rcr
sub
repnz
cmps
andps
into
add
inc
push
sbb
test
das
daa
call
sbb
add
addr16
push
and
cmp
sbb
jmp
and
cli
inc
outs
pop
daa
movs
jb
adc
push
ins
xchg
and
mov
ss
jae
pmullw
shl
mov
or
or
lds
call
add
(bad)
(bad)
idiv
pop
fcmovnb
mov
adc
cmp
cmp
push
inc
sub
popa
test
shr
test
test
cs
test
in
loop
and
retf
std
(bad)
sbb
ret
bound
icebp
ja
sub
das
pop
lds
out
pop
pop
xor
inc
add
pop
lods
test
sbb
shl
or
sbb
(bad)
into
inc
jmp
xor
and
movs
(bad)
popa
jp
or
mov
cmc
mov
push
pop
mov
xor
inc
jle
in
into
inc
pop
cld
or
lods
cmp
pop
fsub
cmp
test
lock
push
sub
jg
mov
pusha
sbb
or
sub
mov
mov
or
dec
js
sub
mov
and
gs
xchg
movs
(bad)
xchg
ja
xchg
mov
stos
lock
push
aad
in
mov
lock
mov
jns
arpl
lods
cmc
cli
mov
cmps
in
pop
jo
shl
movs
add
push
ins
ret
add
stos
std
jo
cmp
and
inc
adc
cmp
mov
in
mov
push
repz
nop
push
test
add
push
mov
loope
test
pop
mov
jnp
jl
(bad)
push
rcr
test
add
dec
adc
or
pushf
cmovbe
std
repz
cmc
adc
int
or
push
dec
push
es
cmp
inc
test
mov
pop
nop
mov
and
in
cmp
push
call
imul
popa
mov
pop
dec
fdiv
jle
push
into
xlat
sar
cwde
inc
clc
jne
daa
rcl
test
inc
or
ds
gs
adc
call
cs
and
fcom
idiv
imul
imul
stos
mov
outs
add
cli
sbb
add
cmps
into
iret
or
out
pop
jmp
cmps
pop
ja
retf
mov
jb
jmp
inc
adc
mov
mov
add
outs
fwait
mov
push
inc
or
fwait
cmp
retf
les
scas
push
data16
fsub
mov
cdq
pop
lea
xor
repnz
adc
mov
ds
fstp
pop
fwait
cmps
cmp
fstp
and
and
mov
js
pop
add
jge
mov
push
jmp
and
in
ja
out
push
mov
mov
cmp
pop
(bad)
sbb
pop
mov
sub
xchg
call
inc
mul
jbe
imul
pop
cs
mov
in
cld
imul
shr
sub
push
outs
mov
mov
xchg
jg
dec
xchg
or
sbb
lods
neg
cmp
or
sahf
movs
call
jne
cmps
cmps
mov
popa
repnz
dec
ror
ret
sub
xchg
cmp
(bad)
and
xchg
xor
push
int3
(bad)
fdivr
push
aad
cli
in
cli
leave
in
mov
popa
dec
bound
sub
movs
cld
popf
adc
test
or
add
inc
dec
jle
and
js
add
les
adc
imul
add
fbstp
sub
mov
scas
ins
xchg
cmps
ret
mov
add
jg
sbb
or
inc
sahf
inc
sbb
fldcw
inc
fs
jge
xchg
jp
mov
xchg
or
xchg
call
inc
outs
jne
pop
push
lock
sub
imul
ins
mov
mov
fucomip
jb
out
jecxz
call
je
cld
loop
call
sbb
or
cdq
sbb
pop
mov
sbb
xor
mov
pop
dec
push
push
and
jns
lods
ficomp
hlt
into
imul
pop
daa
push
jl
push
jg
pushw
cmp
add
or
and
arpl
add
fdivr
and
push
mov
mov
inc
and
pop
jnp
jle
scas
leave
(bad)
sub
push
sub
and
dec
data16
push
and
adc
out
mov
sub
enter
inc
and
pushf
push
xor
aam
fcmovb
and
sbb
int
lds
in
inc
push
and
and
or
into
jae
push
sub
or
xor
jmp
idiv
gs
or
xchg
push
adc
loop
sub
aad
aas
scas
stos
xchg
shr
push
jno
jge
ret
add
fisttp
inc
cwde
int3
or
pop
sub
sub
pmulhuw
jmp
xchg
push
ret
add
adc
sub
add
or
out
sbb
imul
push
xchg
jg
(bad)
and
and
adc
adc
pop
push
jecxz
cmp
jae
mov
outs
push
xlat
dec
mov
add
imul
inc
or
jl
addr16
jecxz
nop
mov
fwait
or
pop
and
push
jge
pop
cmp
mov
(bad)
sub
fld
mov
movs
push
mov
push
mov
cmp
in
jmp
fwait
lds
cmp
lahf
(bad)
rcr
sub
gs
add
into
xchg
movs
movs
add
into
scas
jecxz
imul
xchg
es
(bad)
popa
dec
sbb
rol
xchg
cmp
jmp
jb
hlt
sub
mov
jmp
pop
sbb
or
out
out
cld
call
sahf
mov
lahf
mov
(bad)
mov
dec
dec
mov
pop
outs
pop
jmp
loop
pop
cmps
pop
add
mov
les
test
cmp
xchg
xchg
ficomp
lahf
jae
ss
sub
popa
js
jb
out
cli
mov
cmp
sti
mov
div
int3
rcl
mov
xchg
jbe
inc
mov
jge
call
cmp
xor
mul
and
in
pushf
shl
push
out
repz
(bad)
pop
cld
(bad)
xor
dec
imul
sar
stos
xchg
stc
xor
mov
xchg
enter
mov
out
std
movs
push
iret
or
ins
sbb
js
je
into
xlat
mov
je
rcr
popf
movs
jns
dec
mov
push
iret
ror
sbb
pop
add
cs
imul
add
push
shr
push
leave
cmps
xor
sub
mov
jnp
adc
push
fdiv
es
(bad)
sub
div
aaa
push
test
(bad)
fcomp
and
cmc
jmp
xor
imul
jmp
popf
inc
retf
mov
jns
mov
mov
(bad)
retf
add
call
js
test
xchg
cmc
cmp
jmp
push
in
inc
aas
nop
mov
xchg
or
jo
std
cmp
dec
aad
mov
xchg
mov
sub
retf
sub
loope
jae
push
fnstenv
iret
test
cmc
data16
out
xor
push
ss
adc
(bad)
je
ja
aas
fpatan
fnstenv
div
pop
cmp
cmp
push
cmp
push
sbb
(bad)
aad
sbb
cmp
nop
sti
lods
data16
test
xor
push
js
xchg
pop
and
adc
scas
ins
mov
aad
jno
add
cs
jl
cld
mov
fldcw
test
sbb
cs
add
mov
sbb
in
xchg
cwde
clc
mov
jp
pop
imul
mov
jle
adc
sar
mov
loop
lock
retf
pusha
rcpps
inc
pop
push
pop
dec
cmp
fistp
(bad)
movs
mov
leave
out
test
rcr
js
pop
(bad)
adc
pop
addr16
xchg
jb
adc
imul
mov
ja
data16
mov
gs
xlat
push
jecxz
not
aaa
sub
cdq
cwde
push
mov
inc
inc
adc
fld
inc
mov
sahf
xchg
fs
and
adc
sahf
data16
sbb
dec
dec
dec
jb
hlt
jmp
jmp
jmp
or
leave
hlt
lods
push
dec
lods
outs
mov
or
aaa
movntq
(bad)
mov
not
xchg
dec
adc
add
xchg
pop
out
mov
xor
jno
inc
lods
fsub
fcmovnu
cld
and
stos
push
int
dec
pop
iret
adc
mov
leave
jecxz
mov
ficom
aad
and
ret
mov
test
shr
mov
stos
and
out
in
aaa
cdq
clc
pop
mov
cmp
mov
cmp
sar
sbb
jns
push
or
xlat
and
push
add
pop
aaa
push
sub
inc
jb
fisub
jno
es
punpckhdq
(bad)
cmps
push
inc
jge
inc
ret
or
scas
inc
loopne
cdq
rcr
pop
adc
lock
add
mov
push
(bad)
jecxz
daa
js
adc
lds
rol
daa
push
jae
jp
sbb
and
repnz
imul
mov
scas
jmp
lea
dec
lods
lds
(bad)
jmp
addr16
(bad)
out
fdivr
add
cmps
popf
mov
xchg
inc
test
daa
push
mov
add
bound
in
or
push
pop
iret
cmps
iret
cmp
loop
shl
cdq
neg
sahf
xor
jo
test
pop
xchg
or
mov
and
lahf
sbb
repz
push
test
add
es
test
mov
xchg
mov
xor
popf
mov
xor
test
call
adc
lods
jg
or
sbb
imul
and
and
dec
push
movs
cli
pop
scas
mov
fdiv
push
sbb
push
repz
mov
mov
enter
hlt
jge
sti
popa
ds
sub
iret
adc
test
inc
xchg
mov
stos
xchg
inc
call
ret
xor
mov
stc
push
mov
in
sub
test
fstp
adc
sbb
or
xchg
push
or
jecxz
enter
adc
gs
test
cmp
fdivrp
jnp
xchg
sbb
pop
movs
std
and
sbb
adc
lods
adc
dec
cmp
aas
(bad)
pcmpgtb
xor
dec
in
imul
push
outs
ins
xchg
movs
loopne
or
mov
lods
aaa
push
outs
push
es
lea
adc
adc
add
pop
or
call
fisttp
dec
inc
retf
enter
adc
jmp
adc
test
sbb
in
jl
dec
jae
hlt
cmp
je
fwait
repz
and
outs
jbe
jmp
retf
xor
idiv
jb
mov
sub
sbb
jnp
(bad)
icebp
adc
inc
cmp
xor
mov
aaa
xor
or
cmc
inc
dec
jnp
cdq
jae
jge
jge
(bad)
fdiv
or
mov
cmp
out
xor
popf
adc
sbb
sub
xor
add
mov
push
add
enter
sbb
mov
ins
push
ret
retf
retf
adc
movs
outs
jle
aas
pop
lods
repz
jge
fcom
cmps
or
jnp
retf
mov
mov
push
mov
cmp
cmps
dec
in
jo
add
sbb
shl
and
jo
sub
ss
nop
mov
cli
jno
fstp
jbe
adc
xchg
xchg
sub
add
push
sbb
cmps
pop
mov
xor
and
or
fild
push
cmp
shl
les
jmp
movs
push
xchg
xchg
xor
push
sbb
stos
jle
xchg
mov
pinsrw
movs
shl
je
ins
push
fcmovbe
cs
cmp
repz
lods
sub
outs
pop
nop
shl
mov
in
aam
jmp
stc
pop
cmp
das
sbb
loopne
add
adc
adc
(bad)
sbb
into
fcmove
and
lods
loop
loope
xlat
xor
pop
inc
cmp
or
lds
cmp
mov
mov
ret
mov
ror
ret
xchg
(bad)
xchg
int
jg
sbb
je
xor
xor
sahf
pop
cmps
pop
lock
jb
movs
jns
xlat
jp
lods
shl
(bad)
pop
cmp
dec
cmps
call
sahf
popf
push
sbb
mov
pop
aaa
mov
mov
add
sbb
fnstcw
fwait
dec
mov
retf
jb
sbb
mov
sbb
lahf
or
add
pop
cmps
lock
aam
lea
add
sbb
sub
jne
jbe
push
aam
mov
adc
jne
sub
add
mov
sbb
inc
xchg
cdq
or
ret
sub
call
cmps
test
jmp
iret
inc
or
movs
or
ds
adc
sbb
sti
sub
mov
jne
mov
scas
pop
add
push
data16
push
(bad)
or
push
icebp
jne
popf
std
jecxz
mov
dec
data16
fild
adc
out
out
add
popf
adc
cs
fldenv
xlat
jge
(bad)
std
jl
out
in
rcr
mov
ins
inc
cmps
cdq
mov
into
clc
pop
rcl
ins
cmp
push
or
adc
fcmovnb
nop
push
xchg
(bad)
scas
test
fxch
xchg
jl
or
pextrw
ds
icebp
je
idiv
nop
cmps
pop
add
leave
xor
xchg
jbe
mov
mov
push
cmp
outs
inc
adc
mov
lea
add
in
test
dec
and
cmp
inc
mov
fdivr
out
lods
xchg
jp
jp
mov
sbb
mov
ss
pop
in
adc
dec
clc
lods
pusha
inc
test
std
jmp
jg
push
inc
mov
inc
mov
jbe
lds
adc
ds
clc
(bad)
out
sub
xor
sbb
mov
or
mov
call
pop
fwait
mov
enter
jmp
push
adc
cs
(bad)
std
out
or
repz
fidiv
and
push
cmp
out
ret
outs
cmps
mov
mov
hlt
(bad)
rcr
in
fist
mov
pop
jge
pop
ss
std
push
jb
pop
and
inc
out
xor
jnp
xchg
jns
sbb
cmp
and
inc
lods
pusha
jmp
loope
xchg
adc
push
mov
ret
adc
jnp
retf
retf
ret
stc
pop
mov
mov
leave
pop
fs
popa
mov
mov
das
push
sub
fwait
and
mov
push
in
add
iret
or
or
call
adc
inc
push
pop
cmps
pop
repnz
icebp
push
pop
(bad)
imul
fwait
add
push
pop
jae
push
mov
daa
aas
hlt
enter
adc
cmp
mov
push
mov
cwde
and
mov
es
loopne
cmp
shl
(bad)
mov
in
repz
add
icebp
xlat
lahf
imul
bound
test
adc
jecxz
leave
push
add
sub
pop
add
jmp
dec
push
cmp
xchg
ror
retf
lods
lock
sub
retf
push
lahf
ficom
mov
shl
stc
push
(bad)
data16
sbb
pop
movs
xor
gs
imul
ins
jp
mov
jmp
mov
sub
push
int3
mov
lea
js
jmp
sub
mov
jae
xor
imul
mov
(bad)
out
push
pop
xchg
push
sbb
add
dec
popa
aam
das
cwde
ins
nop
dec
mov
mov
cmp
jmp
retf
mov
jne
aas
cmps
ficomp
xchg
mov
ja
jne
inc
sbb
inc
sbb
aaa
adc
arpl
loop
xor
mov
pop
and
scas
ins
or
retf
push
fadd
pusha
xchg
xchg
dec
push
cld
mov
jne
xchg
jnp
push
fistp
adc
cs
jmp
lods
mov
pushf
fdivr
jb
sbb
cmp
sahf
stos
mov
push
rol
ins
pop
fs
ja
mov
hlt
in
cdq
test
inc
mov
in
jne
mov
mov
mov
aam
lds
push
cmp
popf
cmp
push
icebp
js
retf
add
cmp
mov
inc
scas
lods
xchg
xchg
adc
cmp
mov
pushf
mov
loope
cdq
div
add
stos
shr
inc
cmp
dec
aam
xchg
mov
mov
retf
cmp
push
in
and
test
std
stc
leave
rol
sbb
inc
cs
sbb
and
inc
fisttp
adc
(bad)
call
popf
jg
mov
xchg
clc
xor
adc
jge
shl
int3
sub
mov
cwde
inc
mov
push
xchg
aam
sub
in
aas
inc
movs
adc
add
fidiv
adc
cmps
push
push
add
fmul
clc
inc
push
push
cmc
lods
daa
dec
push
jmp
sub
jle
sar
cmp
sbb
inc
pop
loopne
push
pop
test
enter
pop
into
js
dec
xor
sub
adc
jge
loope
sbb
cmps
loope
loope
cmp
sbb
pop
(bad)
sbb
jae
outs
sti
int3
xchg
(bad)
push
sub
ja
push
jmp
xchg
jecxz
cmps
stos
bnd
pusha
retf
les
test
add
fsubr
sbb
loope
ins
and
xchg
hlt
ret
movs
push
mov
mov
outs
mov
sub
xchg
pop
test
clc
jge
rcl
fild
lahf
(bad)
and
cld
cmp
test
push
cli
inc
push
sbb
loop
out
add
mov
inc
into
cli
cmp
push
(bad)
pop
sub
repz
ins
jo
fstp
adc
imul
xchg
lds
fild
sbb
cmp
in
mov
ins
das
lock
(bad)
scas
sbb
aam
mov
cs
mov
stos
int
dec
lds
pop
inc
fs
adc
or
pop
inc
aad
push
aam
hlt
add
lods
mov
mov
dec
retf
push
addr16
retf
scas
fwait
ja
cmps
adc
sar
loopne
leave
aad
out
fsubr
dec
scas
cwde
and
dec
inc
out
push
cmp
add
push
sar
imul
jo
mov
repnz
stos
out
push
ror
jne
inc
or
xchg
test
push
push
dec
pushf
in
or
fld
sbb
cmp
add
push
cmps
jmp
jae
xor
ja
xor
mov
adc
push
outs
inc
xchg
out
cmp
popf
ja
out
adc
add
xchg
mul
std
mov
outs
mov
sbb
mov
sub
ret
pop
cmp
cmp
scas
or
dec
mov
sub
cmps
dec
jns
in
dec
dec
cwde
cli
add
pop
and
cli
xchg
and
rcr
sub
outs
imul
(bad)
out
xor
xchg
mov
sub
adc
aas
loop
add
(bad)
(bad)
jge
out
in
mov
xlat
jno
push
and
xchg
adc
and
inc
and
ss
lea
or
pop
inc
inc
cmp
test
add
imul
popa
fcom
cmps
dec
cwde
jmp
ss
sbb
inc
mov
in
push
adc
lea
daa
xchg
pop
sar
(bad)
sbb
int
or
loop
mov
adc
neg
je
ror
jo
mov
or
inc
cmp
fwait
cmps
xchg
adc
pop
cmp
inc
jno
cmp
ds
pop
ficomp
mov
xchg
mov
sub
jle
jns
xchg
cdq
or
retf
cmps
sti
rcr
ins
call
sbb
or
add
push
scas
pop
das
mov
jp
mov
adc
je
cmp
jge
inc
and
jno
dec
cmp
popa
jp
stc
outs
mov
dec
fwait
sub
lods
mov
jo
sub
and
mov
mov
fstp
cmps
rcl
dec
repnz
in
repnz
loopne
mov
adc
loop
jae
add
lahf
jg
xchg
sbb
pop
jg
mov
inc
in
sbb
sbb
and
fcomi
mov
call
add
mov
mov
lahf
ret
int3
std
mov
sub
(bad)
call
out
cmp
pop
push
adc
and
jo
imul
in
push
adc
out
cmps
cmps
and
jns
(bad)
and
pop
dec
rol
jae
sbb
in
in
or
jns
add
cmp
mov
ss
lds
mov
popf
add
rol
add
dec
scas
pop
adc
mov
(bad)
retf
cmp
sub
pop
add
cmp
sbb
sub
fiadd
mov
repz
inc
pusha
mov
cmp
fst
mov
cmps
cwde
shl
mov
in
data16
enter
jmp
popf
out
push
pop
pop
test
popa
jns
jg
xor
pop
xchg
pop
xchg
mov
mov
loope
cmp
iret
pop
repnz
(bad)
xor
dec
popa
stos
pop
adc
aam
or
mov
aaa
dec
sahf
mov
mov
sbb
sbb
clc
xor
jl
mov
dec
cmp
mov
ds
mov
adc
fwait
cmp
idiv
gs
test
mov
push
(bad)
clc
sbb
retf
call
mov
fld
es
dec
push
call
inc
dec
and
pop
jmp
outs
adc
pop
xchg
jb
ja
inc
cdq
adc
cmp
sbb
ror
mov
mul
cmp
mov
repnz
rcl
inc
and
mov
loop
test
ret
rcl
test
(bad)
int3
imul
stos
call
aad
push
ret
mov
arpl
cmp
xor
and
xchg
fcomp
rcr
lea
or
mov
int
pop
mov
xor
pop
cmps
mov
fdivr
ja
jmp
nop
and
fcom
iret
pop
sub
and
sub
xor
push
jge
adc
xlat
bound
dec
bound
mov
jnp
lahf
pop
or
outs
dec
jg
fistp
aas
cmp
out
cdq
add
mov
add
push
pop
mov
jbe
fadd
mov
adc
ret
ja
mov
sbb
sbb
adc
movups
ficom
inc
mul
imul
ins
or
pop
or
inc
adc
and
loopne
jmp
jmp
cmps
das
movs
and
in
adc
adc
les
or
es
and
gs
mov
pop
test
mov
mov
(bad)
or
cdq
add
inc
jmp
cmp
fucompp
jmp
and
loopne
call
jne
popf
jns
lea
and
cli
loopne
xchg
aaa
(bad)
scas
ja
adc
xor
stc
mov
jle
popa
mov
xchg
movs
ds
stc
sbb
sbb
(bad)
repz
xor
dec
xchg
imul
jge
push
inc
jbe
push
loope
mov
jne
loopne
cmp
out
adc
cmp
shr
cwde
lock
scas
inc
aas
cmp
repnz
aaa
daa
fisttp
js
jmp
adc
dec
clc
bound
mov
sbb
ins
push
dec
fild
ret
ins
in
cdq
neg
arpl
mov
mov
sbb
inc
outs
push
in
push
jnp
mov
mov
retf
xchg
ja
leave
arpl
daa
mov
mov
jne
sub
imul
jmp
sub
(bad)
add
mov
mov
sahf
xchg
dec
scas
mov
retf
adc
mov
leave
cmp
fstp
xor
add
push
mov
test
cmp
sbb
(bad)
scas
jne
bound
lds
mov
jmp
lods
mov
mov
mov
xor
pop
lock
push
ret
stos
arpl
push
push
repz
cmc
mov
inc
clc
retf
sub
jns
mov
leave
or
jne
fsubr
repnz
fidiv
bnd
test
inc
lock
jb
sbb
stc
xlat
mov
pop
fisttp
lods
ja
and
movs
pop
jno
fs
lock
pop
push
mov
daa
sub
adc
mov
xor
fld
xchg
xor
xor
sti
xchg
or
cmps
cmp
xor
pop
push
xabort
and
push
loope
adc
call
lahf
mov
int
mov
cs
sbb
cmp
bound
add
aam
ffree
not
or
pop
mov
(bad)
aas
pop
adc
sub
cmp
cwde
out
pusha
int3
add
dec
add
sahf
fldenv
xor
stc
or
push
ret
pop
jbe
arpl
loop
cmp
inc
jno
mov
adc
jb
hlt
mov
inc
imul
push
cmp
adc
sub
xchg
xor
jns
data16
push
jae
cli
(bad)
outs
xor
(bad)
repnz
mov
scas
sbb
mov
cmp
inc
add
push
dec
adc
les
cmp
aas
ja
adc
nop
and
aam
push
push
shl
sar
add
not
and
movs
add
push
retf
push
adc
into
loop
lock
pusha
jmp
mov
sti
pop
fcom
mov
adc
ds
or
adc
int
(bad)
in
push
popf
or
mul
(bad)
test
mov
popf
sub
xor
jl
loopne
push
sub
aaa
in
in
pop
xchg
out
out
shl
push
(bad)
les
xor
push
fwait
xor
aam
pop
sbb
inc
sub
mov
lds
test
jae
cwde
pop
lods
mov
jmp
(bad)
popf
popf
pop
sub
daa
in
das
and
mov
in
into
(bad)
mov
retf
xor
in
jecxz
push
lea
mov
lea
test
sti
imul
fist
pop
mov
in
xor
pop
sbb
in
repz
sahf
xchg
mov
scas
or
in
push
and
push
rcl
sub
mov
jae
or
inc
fisubr
sti
or
or
inc
push
xchg
cmc
dec
pop
je
mov
int3
arpl
lea
rcl
mov
xor
xchg
lods
imul
mov
add
jge
dec
pop
arpl
mov
test
xchg
clc
cwde
jae
in
mov
gs
sub
xchg
inc
fmul
ds
mov
xor
pop
adc
dec
pop
push
inc
sahf
dec
mov
je
mov
sbb
jp
mov
inc
iret
aas
mov
pop
or
mov
shl
mov
push
push
into
sbb
cs
mov
ret
pop
mov
ins
mov
xor
push
cwde
cld
mov
xor
jge
int
jp
cmp
xor
adc
cmc
push
int3
inc
ret
jp
fidiv
push
mov
(bad)
push
shr
push
pop
inc
outs
retf
imul
cmc
test
push
pop
cmp
mov
sti
add
cld
shr
jnp
dec
dec
stos
cmp
xchg
xchg
fsubr
ss
int
lods
gs
lods
cmps
jne
nop
inc
xor
jp
mov
retf
xchg
fxch
outs
(bad)
mov
leave
jb
popf
mov
ror
in
cld
jnp
test
dec
nop
out
gs
or
scas
pop
lock
test
dec
fld
pop
retf
push
hlt
in
mov
xchg
add
(bad)
and
sbb
sub
mov
mov
inc
cld
mov
adc
pop
xor
aad
test
mov
inc
clc
shl
jne
loop
in
cmp
int
adc
and
(bad)
adc
mov
mov
aas
sub
mov
push
xchg
test
mov
adc
cld
mov
sbb
cmp
jecxz
mov
js
dec
sub
sbb
mov
mov
(bad)
imul
inc
cmc
and
mov
mov
adc
(bad)
test
jne
imul
jmp
jmp
sbb
hlt
dec
daa
retf
add
jb
maskmovq
test
mov
dec
xor
fild
je
loope
xchg
pop
push
sub
push
mov
test
out
jle
nop
icebp
ret
arpl
fidiv
sub
mov
loope
sbb
jmp
cmp
fistp
and
mov
adc
pop
pop
fwait
ret
in
sub
jp
mov
or
adc
outs
jp
shl
or
les
fdivr
lods
pop
cmp
mov
cmc
hlt
sbb
ins
jbe
arpl
xor
int
and
xor
stos
and
icebp
jmp
loop
adc
repz
call
bound
outs
mov
or
cmp
jmp
or
push
mov
retf
scas
(bad)
repz
movs
ins
(bad)
es
rcl
push
add
(bad)
loopne
mov
jl
xlat
leave
sub
pop
and
mov
ins
xchg
mov
(bad)
xlat
stos
jns
push
pop
sub
adc
mov
mov
retf
and
adc
(bad)
pop
jbe
into
pop
(bad)
push
sbb
loope
mov
adc
aam
sar
pop
mov
pushf
mov
(bad)
or
test
mov
loop
(bad)
retf
cld
mov
sbb
sahf
int3
xor
sub
outs
in
std
pop
aas
lods
inc
mov
jno
leave
fstp
push
xchg
dec
xor
lods
mov
test
dec
pusha
dec
loope
sub
pushf
imul
sbb
out
(bad)
push
(bad)
mov
jne
cmp
mov
push
mov
jle
test
es
adc
jl
movs
xor
or
dec
add
es
push
cwde
mov
fcomp
pop
sub
adc
mov
loopne
and
xchg
add
xor
inc
je
stos
cmp
inc
inc
mov
dec
sub
js
adc
pop
test
and
sti
loop
dec
fsubp
mov
ret
(bad)
out
mov
pop
push
push
imul
or
ins
push
enter
jmp
inc
xor
sbb
mov
add
cs
int3
and
ffreep
nop
mul
add
(bad)
dec
not
and
dec
aas
sbb
xor
mov
xor
mov
aam
fsubp
xchg
sbb
aam
inc
xchg
nop
cmps
adc
sbb
mov
pop
fistp
mov
xchg
jo
sbb
xchg
xor
pusha
mov
dec
ret
xor
out
daa
(bad)
scas
out
push
dec
out
cmovle
dec
repnz
jb
clc
test
jno
test
push
loop
mov
les
retf
nop
inc
add
push
int
shr
fbstp
inc
ja
rol
dec
jg
mov
cmp
push
pop
cmp
popa
rcl
mov
repz
mul
jmp
mov
inc
sbb
sbb
sbb
push
int3
sahf
loop
test
repnz
inc
add
pop
out
(bad)
push
mul
mov
pop
xor
or
out
pop
inc
imul
push
nop
cdq
jmp
xor
inc
adc
movs
fist
test
cwde
cmp
push
cmps
lods
shl
xchg
aaa
sbb
aad
mov
shr
mov
pop
xor
(bad)
fsub
ja
dec
jbe
mov
mov
pop
loopne
push
mov
or
dec
mov
outs
mov
je
jns
adc
cmp
enter
movs
inc
sub
xchg
dec
dec
or
add
aam
mov
jge
(bad)
fst
out
mov
fcmovbe
jg
xchg
aad
pop
ins
pop
test
(bad)
shl
push
daa
adc
lds
xor
and
add
mov
dec
sub
sub
inc
loop
or
cld
pop
popa
sbb
mov
xlat
dec
(bad)
je
test
mov
dec
(bad)
xor
sbb
mov
or
inc
sbb
lods
pop
push
into
(bad)
jp
hlt
in
nop
daa
mov
clc
test
sub
fldcw
out
loope
data16
dec
and
inc
pop
ret
push
jmp
cmps
mov
out
mov
mov
(bad)
dec
push
sub
popf
pop
cld
add
out
or
les
mov
outs
lahf
sbb
xor
outs
or
push
ret
mov
add
lea
mov
jg
dec
repnz
(bad)
lods
lock
jmp
int3
enter
xchg
aas
mov
jge
pop
cmp
cs
outs
xchg
jo
ds
xchg
jne
push
inc
xchg
or
mov
mov
fnsave
cmp
and
jge
out
mov
lds
rcl
aaa
xchg
fnstsw
mov
and
pop
jge
adc
mov
and
or
pop
rcr
lds
cmp
aam
xchg
lock
jae
mov
cmc
dec
aam
test
cmp
inc
add
fxch
pop
fcom
jne
mov
ds
mov
sti
jl
pusha
call
push
ret
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzx
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shr
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mul
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmp
jne
inc
shl
shl
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
inc
add
add
add
add
add
add
add
