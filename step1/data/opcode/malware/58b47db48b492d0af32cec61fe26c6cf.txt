scas
(bad)
sti
fistp
out
or
sbb
int3
add
dec
int3
sbb
pop
push
setle
mov
pop
hlt
jecxz
or
pop
call
or
sbb
call
sub
ins
in
pusha
loop
sub
imul
cmp
xchg
in
adc
push
in
loop
in
or
retf
sub
xchg
in
or
sbb
mov
(bad)
test
mov
data16
jne
sbb
sbb
xchg
sbb
popa
loopne
ficom
pop
clc
imul
dec
mov
add
lods
stos
or
add
fcomp
call
mov
sbb
arpl
xchg
lods
lock
nop
lods
hlt
pop
pop
adc
in
adc
xchg
sahf
push
repz
cdq
inc
or
sbb
xchg
sbb
mov
adc
sub
mov
cmp
pop
call
xor
pop
call
sbb
and
sahf
xchg
fnstsw
cs
call
xor
pop
call
dec
sahf
inc
mov
popa
dec
addr16
inc
arpl
adc
js
fadd
mov
pop
repz
or
push
repz
sahf
sub
adc
sahf
xchg
loop
adc
sahf
xchg
loop
cmp
adc
popaw
dec
add
pop
adc
mov
sahf
sbb
xchg
or
sahf
sub
xchg
fstp
or
sbb
add
sbb
loope
jmp
push
or
mov
aaa
mov
dec
sahf
cmc
mov
enter
sbb
pop
call
or
fldlg2
mov
sbb
mov
pop
icebp
mov
sbb
sbb
jmp
in
xor
sahf
ja
repz
push
or
dec
jns
or
sbb
xor
add
sahf
jne
sbb
sbb
call
loopne
dec
mov
pop
inc
and
push
adc
or
(bad)
les
sbb
ja
fs
stos
or
cmp
sahf
jne
mov
in
call
dec
sahf
loop
sub
pop
call
dec
sahf
xchg
int
cs
call
or
f2xm1
cmp
into
cmc
mov
iret
cli
mov
sub
xchg
or
or
mov
or
dec
mov
pop
out
xchg
adc
jns
ins
cld
sub
ja
data16
ja
data16
ja
fs
sbb
js
sahf
cmc
cli
je
sbb
retf
jmp
popa
xchg
das
(bad)
gs
or
sbb
push
repz
jne
inc
lahf
sbb
push
repz
dec
add
jmp
rcl
sahf
dec
add
jmp
ja
fs
mov
(bad)
sub
cmp
or
sahf
sub
mov
imul
adc
inc
call
mov
push
repz
fcmovbe
mov
in
fcompp
int3
rol
pop
dec
popa
jmp
and
fiadd
clc
sbb
mov
data16
jne
or
sbb
or
in
jmp
add
pop
pushf
das
inc
mov
imul
repz
pop
jns
loop
adc
sbb
popf
lock
xchg
or
xchg
cs
add
push
idiv
(bad)
jecxz
jmp
or
sbb
mov
int3
fiadd
lds
popa
jmp
leave
mov
push
cmp
sbb
lods
hlt
pop
fisub
bound
adc
sahf
loop
add
loopne
retf
or
fndisi(8087
cli
jmp
jns
loop
sbb
hlt
data16
loop
sbb
push
call
jns
cmc
div
sbb
fxch
jne
fxch
fdivp
loope
jmp
popa
retf
rol
retf
xchg
or
pop
leave
xchg
popf
add
adc
mov
popa
into
scas
fbld
data16
js
pop
call
(bad)
sti
loope
out
sub
xchg
in
into
lahf
fbld
data16
js
pop
call
xchg
loope
hlt
adc
sbb
add
or
xor
pop
in
imul
pop
push
cmc
cmps
ficomp
xchg
or
in
xchg
loope
xor
and
(bad)
hlt
pop
pop
sbb
outs
sahf
and
ficomp
adc
fndisi(8087
arpl
xchg
sub
mov
and
lock
lahf
xchg
repz
loop
repz
sbb
and
retf
xchg
or
or
es
or
dec
mov
xchg
or
push
rep
sub
jno
cwde
adc
pusha
loop
into
mov
popa
cdq
(bad)
sbb
xchg
xchg
sub
mov
and
jp
fld
sahf
loop
or
push
popa
sti
jne
popa
hlt
mov
arpl
xchg
cld
ss
mov
or
cmps
ret
adc
loop
mov
push
repz
cwde
sbb
pusha
loop
test
pop
cwde
sbb
pusha
loop
mov
push
repz
vpaddb
in
or
adc
mov
vmovntps
clc
imul
dec
mov
retf
fndisi(8087
dec
xor
mov
loope
dec
xchg
lods
lock
jmp
sub
nop
or
xchg
xchg
add
into
movs
outs
mov
imul
adc
mov
popa
fadd
xchg
sub
test
retf
arpl
fucomi
adc
xchg
lods
lock
pop
sbb
fucomi
pop
imul
adc
rol
retf
xchg
or
pop
adc
loope
daa
bound
dec
bound
lock
jmp
sub
lahf
or
xchg
xchg
add
into
movs
outs
mov
imul
adc
mov
popa
fadd
xchg
sub
test
retf
push
aad
sbb
popa
dec
xchg
lods
lock
sbb
xchg
fucomi
adc
inc
mov
push
fidivr
pop
leave
xchg
popf
sbb
inc
cld
retf
fndisi(8087
ins
xor
arpl
xchg
sub
popa
sbb
jne
arpl
adc
cmps
xchg
adc
xchg
mov
pushf
or
pop
rcl
loop
imul
sub
push
rol
retf
xchg
or
pop
adc
sub
pop
in
hlt
pop
ficom
or
test
in
sar
or
cmc
scas
icebp
popa
loop
dec
bound
adc
call
repz
dec
arpl
pop
mov
repz
sahf
sub
jne
popa
hlt
imul
das
push
rol
retf
xchg
or
pop
adc
add
sahf
jmp
popa
push
call
or
sbb
call
add
sbb
fwait
or
movs
lods
add
pop
pop
adc
sahf
xchg
sbb
inc
and
retf
xchg
or
xchg
adc
mov
imul
or
push
dec
nop
cmp
add
scas
or
in
xchg
sbb
cmp
xchg
adc
jns
lods
lock
fiadd
aad
sbb
and
retf
xchg
or
pop
leave
xchg
popf
add
pop
aad
mov
xchg
das
(bad)
mov
sbb
cwde
or
nop
lods
cld
into
jne
in
fcomp
call
or
pop
adc
add
frstor
jb
sub
dec
cmp
call
in
ins
call
int3
xchg
(bad)
out
pop
xchg
lods
in
fstp
int3
call
xchg
loop
sbb
fisubr
(bad)
push
call
xlat
xchg
sub
int3
jmp
fxch
fdivp
out
data16
test
add
popa
loop
push
scas
fnsave
pop
pop
clc
push
and
ins
call
mov
outs
dec
and
vpaddq
fisubr
loop
stos
or
loop
or
sbb
out
stos
or
mov
ror
adc
sbb
dec
je
pop
call
or
sahf
aad
cmp
add
call
pop
xchg
pushf
add
mov
sbb
call
repnz
dec
pop
jns
cmc
jbe
sahf
sbb
or
nop
ins
in
popa
jecxz
pop
jbe
adc
popa
sahf
sub
mov
push
dec
dec
sahf
sbb
call
or
pushf
sbb
int
call
xchg
adc
arpl
dec
hlt
test
loope
jno
sbb
call
or
cwde
ror
sbb
stos
or
loop
or
xor
imul
push
repz
ficom
or
test
sbb
fwait
popa
pop
dec
sahf
imul
mov
sbb
call
iret
fwait
jae
or
sbb
call
aam
fimul
or
pop
adc
sub
sbb
std
imul
xchg
lgs
mov
xchg
or
xchg
xlat
repz
cmp
xor
jge
ins
aam
jecxz
test
xchg
lock
push
stos
or
fisttp
dec
sahf
xchg
lods
cld
into
xchg
shl
mov
call
dec
bound
jns
xchg
xor
sbb
pop
repnz
dec
dec
nop
cmp
and
call
add
fwait
popa
pop
dec
sahf
loop
or
xchg
lods
add
loop
xor
out
imul
add
jecxz
add
fdiv
enter
xchg
lods
clc
cmps
pop
adc
sbb
pop
repz
sahf
int
cmp
pop
jecxz
sahf
jmp
popa
xchg
sub
inc
and
retf
xchg
or
pop
leave
mov
imul
scas
jmp
call
jmp
bound
aam
call
add
fndisi(8087
jmp
call
in
jmp
pop
adc
outs
xor
inc
sbb
xchg
lods
add
pop
jmp
mov
sub
adc
push
jmp
dec
sahf
cmc
bnd
sbb
adc
jns
lods
hlt
pop
fisubr
or
mov
xchg
popa
loop
int3
jmp
jno
sbb
dec
dec
sahf
mov
add
in
hlt
pop
fisubr
bound
pop
jmp
pop
adc
inc
imul
out
xchg
lods
add
sbb
xor
pusha
in
(bad)
sti
loope
test
adc
xchg
popf
aam
sahf
adc
popa
loop
(bad)
sti
loope
(bad)
jecxz
call
add
sub
cmp
sbb
jp
sahf
sbb
or
sbb
call
xchg
fistp
call
push
hlt
sbb
fisub
sbb
sub
mov
xchg
sub
nop
movs
clc
iret
dec
pop
jns
loop
hlt
jbe
xchg
ja
sbb
jne
in
fcomp
and
popa
hlt
imul
lods
cld
pop
ficom
jns
cmc
adc
sbb
sub
clc
push
movs
sahf
pop
call
or
dec
mov
adc
scas
sahf
or
jmp
popa
xchg
sub
sahf
fld
popa
jecxz
or
stc
or
cmc
mov
sbb
push
repz
mov
repz
adc
add
ret
sahf
xchg
xor
sahf
cmc
(bad)
jge
sbb
call
repnz
xchg
xor
sub
pop
repnz
nop
ins
enter
pop
jbe
adc
popa
sahf
sub
sbb
sbb
mov
sahf
sbb
pop
repz
loop
iret
adc
mov
or
xchg
shl
leave
push
popa
dec
bound
jns
xchg
xor
jge
ins
mov
pop
nop
ins
shl
pop
pop
idiv
dec
sahf
xchg
ins
in
popa
jecxz
pop
adc
sbb
lods
lock
fucom
mov
fiadd
sahf
sbb
push
repz
mov
mov
je
pop
adc
pop
adc
xchg
sbb
test
repz
loop
cmc
addr16
(bad)
pop
adc
push
hlt
popa
jecxz
xchg
rcl
repnz
mov
popa
aam
lds
adc
mov
or
xchg
shl
leave
popa
popa
dec
bound
add
movs
out
or
jnp
mov
loop
repz
adc
sbb
pop
repnz
sbb
call
push
jg
call
repnz
dec
add
pop
adc
clc
xchg
push
stos
popa
jecxz
lea
ror
adc
cmp
push
repz
adc
sbb
dec
repz
loop
pop
adc
mov
or
out
or
sahf
sub
xchg
stos
ins
stos
popa
jecxz
retf
mov
(bad)
cmp
imul
test
ins
iret
lahf
sbb
int
sahf
ja
fs
std
stos
or
dec
dec
dec
sahf
cmc
ret
loop
enter
repz
sbb
add
pop
call
repnz
dec
add
push
adc
repz
sbb
ins
movs
popa
jecxz
or
lahf
jne
in
fcomp
call
repz
loop
or
cmp
dec
sahf
nop
push
icebp
popa
jecxz
pop
jbe
sbb
add
imul
repnz
sbb
or
ja
fs
stos
or
dec
dec
dec
sahf
cmc
dec
stc
popa
loop
enter
repz
sbb
xor
loopne
repnz
dec
add
pop
adc
repz
sbb
ins
movs
popa
jecxz
or
lahf
jne
in
fcomp
call
repz
loop
or
cmp
dec
sahf
nop
push
icebp
popa
jecxz
pop
jbe
sbb
add
imul
repnz
sbb
or
xchg
xor
jge
ins
lods
popa
jecxz
test
jmp
or
dec
dec
dec
sahf
cmc
(bad)
stc
popa
loop
enter
repz
sbb
inc
repz
loop
or
sbb
or
jne
lods
fistp
pop
(bad)
pop
adc
repz
sbb
ins
movs
popa
jecxz
or
lahf
jne
in
fcomp
call
repz
loop
or
pop
or
nop
push
icebp
popa
jecxz
pop
jbe
sbb
popa
sahf
sub
mov
push
cwde
in
fcomp
push
repz
cmc
jp
popa
loop
enter
repz
sbb
inc
repz
loop
or
sbb
call
repz
loop
jns
fucomi
jl
pop
call
repz
loop
in
out
repz
idiv
retf
pop
dec
sahf
sbb
pop
ds
call
or
vpaddq
fisubr
mov
push
repz
hlt
repz
sbb
or
cwde
xor
pusha
loop
xchg
rcl
popa
dec
arpl
dec
mov
fndisi(8087
loope
xchg
cwde
pop
or
loop
repz
xchg
ins
aam
jecxz
pop
adc
xchg
lods
lock
vpaddq
fisubr
bound
call
repz
loop
lea
mov
fsub
pop
or
mov
jmp
or
pushf
sub
loopne
call
repz
loop
or
cwde
dec
repz
loop
or
sbb
push
repz
nop
ins
xchg
popa
jecxz
pop
adc
loop
xchg
lds
out
pop
cwde
ins
repz
loop
iret
adc
mov
or
cwde
js
pusha
loop
xchg
sbb
adc
pop
adc
call
repnz
dec
arpl
into
xchg
shl
or
call
lock
vpaddq
fisubr
bound
call
repz
loop
xchg
int
repnz
dec
arpl
dec
rol
xchg
cwde
and
push
call
mov
push
repz
xchg
ins
shl
pop
pop
adc
xchg
lods
lock
or
popa
xchg
sub
sbb
jmp
sahf
nop
ins
call
adc
loop
xchg
pop
adc
inc
sub
test
xchg
lock
adc
popf
sbb
mov
sahf
dec
cld
popa
jecxz
or
test
repz
loop
pop
ds
call
repnz
dec
add
pop
adc
jb
push
repz
hlt
call
or
test
fistp
pop
repnz
nop
ins
icebp
popa
jecxz
pop
idiv
dec
sahf
nop
ins
icebp
popa
jecxz
pop
jbe
test
sahf
sub
pop
vpaddq
fimul
repnz
pop
call
repnz
xchg
ins
pushf
popa
jecxz
sbb
dec
gs
sbb
movs
in
or
sbb
pusha
repz
loop
loopne
xchg
lgs
mov
push
repz
xchg
xlat
repz
xor
bound
add
jb
or
sahf
dec
test
jecxz
or
ficom
inc
sahf
sbb
push
repz
jne
in
fcomp
push
repz
xchg
shl
mov
call
dec
bound
add
xor
or
pushf
sbb
sbb
pop
repnz
dec
arpl
into
xchg
shl
leave
jno
dec
bound
add
loop
or
sahf
dec
movs
popa
jecxz
or
cld
jmp
in
ja
or
xchg
xor
pop
cwde
cwde
repz
loop
or
cwde
inc
repz
loop
mov
loop
repz
mov
repnz
sahf
add
pop
cli
push
or
nop
pop
jl
jecxz
(bad)
jb
popa
jmp
sbb
or
out
dec
xchg
mov
arpl
popa
dec
pushf
test
loope
jge
sbb
ins
push
popa
jecxz
test
xchg
lock
adc
lahf
sbb
pop
repnz
sbb
push
repz
jne
in
fcomp
push
repz
xchg
shl
mov
call
dec
bound
add
or
or
sahf
push
mov
pop
or
cdq
loope
sahf
sbb
push
repz
ja
repz
pop
repnz
xchg
ins
mov
pop
pop
adc
xchg
lods
lock
vpaddq
fisubr
bound
call
ins
popa
jecxz
add
cwde
and
mov
loop
repz
adc
sbb
pop
icebp
popa
dec
pop
mov
jbe
sbb
popa
sahf
sub
pop
fisubr
icebp
popa
pushf
sub
and
icebp
popa
sbb
call
repz
loop
or
sbb
inc
repz
loop
mov
push
repz
jne
in
fcomp
push
repz
cmc
into
data16
sbb
gs
popa
jecxz
(bad)
push
loop
mov
xchg
ins
hlt
popa
jecxz
lea
cmc
or
loop
push
popa
loopne
sbb
dec
arpl
adc
pop
pop
jbe
or
sbb
arpl
push
repz
jne
in
fcomp
push
repz
cmc
and
sbb
sbb
call
repnz
sbb
push
xchg
lds
out
pop
cwde
mov
pusha
loop
iret
popa
cwde
inc
repz
loop
mov
loop
repz
cwde
inc
repz
loop
mov
cwde
dec
repz
loop
xchg
cwde
je
pusha
loop
xchg
cwde
add
pusha
loop
mov
push
repz
cwde
add
pusha
loop
mov
pop
repz
loop
jns
fld
popa
jecxz
or
cmp
or
jmp
popa
xchg
sub
popa
dec
arpl
dec
loopne
and
pop
repnz
sbb
cmp
pusha
loop
xchg
mov
call
fsub
pop
pop
adc
xchg
ins
aam
jecxz
pop
adc
xchg
ins
shl
pop
pop
adc
xchg
xor
sbb
pop
repnz
dec
arpl
dec
loopne
mov
inc
mov
pop
dec
popa
jmp
sub
fs
test
cli
mov
mov
or
sbb
mov
retf
(bad)
sar
add
imul
fisubr
or
pop
or
mov
pop
call
or
sahf
sub
jbe
push
repz
sahf
aad
sub
or
ret
add
popa
loop
out
fisubr
or
pop
or
adc
shl
sbb
inc
xchg
push
cmp
jne
das
dec
(bad)
inc
mov
setbe
or
sbb
call
pop
and
cs
xchg
adc
jns
lods
lock
fiadd
data16
ja
fs
cmp
or
jb
or
xchg
das
pop
jbe
mov
inc
and
retf
xchg
or
pop
adc
and
pop
in
jmp
or
test
imul
lea
or
mov
sbb
test
add
pop
call
xchg
fistp
das
or
test
or
aad
xchg
sbb
jno
sahf
adc
add
arpl
or
and
or
sbb
call
pushf
sub
mov
pop
add
call
dec
sahf
sub
mov
push
imul
pop
popa
dec
data16
xor
pop
call
or
adc
xchg
fistp
out
mov
call
xchg
fistp
add
fistp
test
or
in
pop
jmp
in
push
sahf
sbb
test
or
loop
js
pop
call
dec
sahf
or
add
popf
sbb
out
or
popf
in
add
ds
jno
sahf
mov
add
fwait
add
pushf
or
sbb
clc
or
popf
in
add
ja
pop
repz
jmp
adc
pop
call
int3
ja
jmp
sbb
ja
sahf
adc
call
or
(bad)
push
repz
jmp
adc
pop
call
int3
ja
jmp
xchg
mov
sbb
or
test
or
stos
push
repz
jmp
adc
pop
call
int3
ja
jmp
sbb
ja
sahf
pop
das
or
test
or
xchg
push
repz
loop
js
pop
call
dec
sahf
xchg
sbb
xchg
add
add
lahf
sbb
test
xchg
fistp
call
cld
pop
fld
xchg
or
sbb
call
or
shr
or
mov
jmp
or
mov
add
fistp
test
or
loop
js
pop
call
dec
sahf
pop
add
outs
xor
test
in
xor
pop
call
or
sub
in
sbb
or
adc
xchg
fistp
out
sahf
xchg
and
sbb
call
lods
fcomp
imul
(bad)
out
repz
sbb
call
or
sbb
ins
int3
sub
mov
pop
add
popa
sbb
aas
icebp
jne
sahf
sbb
xor
pop
call
xor
pop
call
test
in
add
jne
fxch
ja
jmp
movs
(bad)
sbb
pop
dec
sahf
jmp
adc
pop
call
or
sbb
call
or
in
sar
(bad)
mov
sahf
cmp
or
sbb
pop
or
mov
out
test
out
mov
sahf
sbb
call
neg
push
js
sahf
pushf
push
adc
sbb
adc
push
sbb
dec
dec
pop
pop
call
dec
sahf
sahf
aad
pop
pop
call
jno
sbb
adc
jmp
imul
lea
mov
out
jns
popf
in
add
pop
in
jmp
(bad)
fist
test
call
jle
pusha
dec
fs
xchg
neg
out
jns
sahf
in
add
pop
call
cld
pop
fld
xchg
lea
test
arpl
xchg
lea
or
loop
add
pop
call
or
sbb
pushf
ficomp
mov
sahf
sbb
test
sahf
div
test
arpl
xchg
lea
or
loop
add
pop
call
or
sbb
pushf
ficomp
pushf
mov
mov
dec
or
pop
call
push
push
fidivr
pop
leave
mov
push
rcr
call
lock
fist
or
test
push
dec
sahf
cmc
sahf
push
sahf
sbb
push
dec
sahf
dec
add
ret
or
xor
add
sbb
test
or
jmp
mul
push
dec
sahf
dec
add
sbb
test
dec
sahf
dec
add
sbb
test
dec
sahf
dec
add
rcr
or
inc
and
retf
xchg
or
pop
leave
cmps
xor
cwde
arpl
lahf
lds
popa
sbb
and
call
repz
dec
sahf
fisubr
or
vpaddq
fisubr
jb
gs
ss
lods
cld
pop
pop
sbb
sahf
sbb
aam
sahf
sahf
(bad)
hlt
sahf
sahf
(bad)
lock
loop
js
pop
call
test
xor
sahf
fisubr
or
pop
xor
sahf
sbb
call
dec
push
xchg
sub
sahf
xchg
lods
in
popa
sbb
cs
call
push
sahf
sbb
jl
pop
fisubr
or
js
or
pusha
push
sub
sbb
lods
in
jne
or
sbb
pop
sbb
test
aam
fisub
add
or
pop
dec
pop
hlt
sbb
or
push
call
pop
popa
push
mov
ins
sahf
sbb
stos
or
sbb
call
cbw
loop
call
sahf
movs
and
pop
out
pop
pop
js
pop
loop
call
sahf
loop
js
pop
call
repz
gs
jp
pop
sbb
test
out
pushf
add
rol
retf
xchg
or
dec
bound
out
dec
rcl
or
(bad)
pop
imul
adc
fist
popa
dec
outs
xchg
movs
sbb
push
adc
dec
xchg
mov
call
nop
lods
hlt
into
nop
lods
in
loop
hlt
hlt
sbb
xor
push
ja
sahf
xchg
lods
clc
jne
imul
aam
pop
pop
clc
mov
adc
xchg
adc
fwait
imul
loop
sbb
cli
xchg
or
jmp
rcl
pop
pop
clc
imul
dec
mov
xchg
adc
or
test
out
call
jns
adc
test
sbb
pop
dec
test
sbb
pop
dec
test
sbb
pop
dec
test
sbb
jmp
pop
jmp
adc
(bad)
test
sbb
out
call
mov
xchg
cwde
jg
sahf
sbb
pop
sbb
xchg
call
(bad)
je
out
mov
ror
jmp
popa
neg
or
xor
data16
add
xchg
stos
in
or
push
pop
addr16
adc
fwait
je
dec
sahf
dec
add
sbb
pop
addr16
or
mov
push
dec
sahf
dec
mov
or
pop
adc
mov
adc
popf
pop
adc
push
lods
sbb
pop
jmp
lahf
in
in
xchg
mov
or
mov
jbe
sbb
and
fisub
pop
call
dec
popa
sbb
cmp
pop
repz
imul
push
push
inc
pop
in
in
popf
aam
call
nop
out
or
sub
sbb
sbb
xor
imul
or
push
popa
hlt
sbb
sbb
jns
xchg
xor
fisttp
imul
sahf
sub
pop
sbb
or
mov
xchg
adc
out
push
jmp
popa
hlt
sbb
sbb
jns
xchg
adc
cwde
pop
popf
dec
pop
in
in
adc
cwde
and
or
sbb
call
(bad)
push
loop
pop
mov
adc
lahf
lds
call
sbb
sahf
add
adc
sbb
or
sbb
popf
pop
pop
in
mov
xchg
adc
cwde
sbb
xor
in
in
popf
aam
lahf
push
add
xchg
stos
in
or
jecxz
or
imul
or
add
call
pop
lea
jmp
test
sbb
in
or
adc
arpl
pop
push
rol
retf
xchg
or
pop
leave
loop
js
pop
call
adc
and
or
adc
lea
jmp
sahf
imul
popa
cmc
jmp
sahf
outs
cli
dec
adc
push
call
aam
hlt
call
push
popa
sbb
retf
or
aam
mov
(bad)
popa
hlt
lahf
lds
repz
loop
js
pop
call
xor
call
in
sbb
(bad)
lock
mul
test
lods
lock
out
test
mov
ror
outs
add
mov
sbb
sbb
xchg
lods
hlt
pop
out
jmp
neg
pop
sbb
fiadd
jmp
sbb
add
pushf
ficomp
arpl
lahf
mov
(bad)
lahf
int
in
xchg
lods
hlt
pop
sbb
in
pop
test
loop
js
pop
call
hlt
adc
or
xchg
lods
hlt
pop
sbb
test
sbb
mov
rep
or
js
loop
(bad)
pop
adc
pop
pop
clc
push
push
mov
inc
call
in
in
repz
cwde
or
popa
loop
in
inc
call
or
outs
out
retf
aaa
repz
sbb
mov
pop
repz
sahf
in
js
pop
call
shl
call
mov
pop
repz
and
ins
and
or
jge
pop
repz
imul
jecxz
loop
xor
pop
popf
push
jne
out
or
pop
repz
xchg
jge
inc
loop
addr16
adc
xchg
and
add
or
in
cdq
into
test
push
pop
addr16
add
xchg
ret
push
dec
sahf
dec
sub
pushf
xchg
jge
inc
loop
rep
or
jmp
or
in
sbb
cwde
sbb
popa
loop
add
cwde
sbb
popa
loop
int3
sbb
or
adc
popa
loop
retf
pop
repz
sbb
pop
repz
fmul
push
sbb
pop
call
or
out
pop
repz
fmul
push
adc
pop
call
repz
loop
js
pop
call
repz
sbb
call
repz
xchg
ins
aam
loop
repz
imul
loop
test
add
pop
(bad)
inc
ficomp
pop
repz
loop
sub
sahf
dec
add
pop
sahf
push
or
sub
scas
lea
clc
or
es
jno
pop
jp
nop
ins
mov
pop
pop
jbe
mov
sahf
loop
js
pop
call
repz
sbb
call
or
test
jecxz
loop
mov
jbe
adc
popa
sahf
sub
pop
pop
adc
pop
imul
xchg
push
ret
pop
repz
fpatan
pop
(bad)
sub
pushf
fmul
push
popf
dec
adc
stos
cmps
imul
es
mov
repnz
repz
scas
lea
in
or
outs
xor
or
outs
out
inc
sbb
sbb
sbb
pop
repz
imul
pop
out
cld
sahf
sbb
adc
xchg
out
repz
pushf
ins
loopne
loop
or
sbb
xchg
xchg
ss
xor
repz
sbb
pop
repz
fwait
mov
popa
loop
or
test
xor
popa
loop
xor
ficomp
call
push
pop
int
pop
arpl
mov
jge
jno
pop
(bad)
cmp
pop
repz
sbb
pop
repz
(bad)
jmp
cld
jmp
xchg
sbb
pop
repz
loop
out
pushf
xchg
xor
ja
sub
pushf
push
movs
lock
xlat
push
clc
jno
pop
lea
jmp
in
or
outs
pop
repz
imul
loop
or
inc
adc
call
or
cwde
dec
shl
popa
into
popf
or
xor
xor
je
pop
popa
mov
ret
pop
repz
loop
cdq
push
ret
pop
repz
xchg
ins
cwde
inc
loop
xchg
mov
jge
inc
loop
setl
test
mov
repz
xchg
ins
fadd
pop
test
shl
popa
ja
sbb
dec
pop
mov
jbe
mov
fadd
pop
xor
popa
push
aaa
repz
xchg
ins
mov
sbb
aaa
repz
popf
push
out
inc
loop
or
fiadd
data16
xchg
jge
inc
loop
int
adc
repz
fadd
add
jne
or
sbb
pop
repz
pop
or
test
jge
jno
pop
int
pop
arpl
mov
cmp
popa
loop
add
adc
ins
repnz
repz
(bad)
jmp
sbb
pop
repz
add
enter
sbb
sub
sbb
or
popf
xchg
add
adc
sbb
pop
repz
adc
mov
imul
add
and
or
hlt
repz
push
pop
repz
sbb
gs
pushf
sbb
jp
pop
repz
cwde
dec
shl
call
repz
sbb
jp
pop
repz
in
mov
and
in
imul
popf
ror
add
sbb
sbb
imul
popf
ror
pop
popa
cld
sbb
sbb
and
dec
sahf
adc
cmp
(bad)
jmp
loop
mov
adc
mov
push
jmp
in
nop
lods
cmp
xchg
ins
call
sbb
pop
out
xchg
ins
clc
jno
pop
or
mov
or
popa
loop
in
mov
shl
jmp
shl
sub
pushf
xchg
push
sbb
(bad)
pop
repz
sbb
mov
sbb
aam
pushf
sbb
test
call
xor
push
in
or
sbb
add
xchg
stos
ins
scas
inc
loop
add
jecxz
jmp
mov
pop
repz
loop
rol
pop
repz
aaa
repz
cmc
sahf
cmc
popa
loop
enter
out
inc
loop
or
pop
imul
xchg
jge
jno
pop
int
pop
popa
aad
hlt
jmp
xchg
ins
sbb
pop
repz
sbb
repz
pop
repz
pushf
push
clc
jno
pop
or
sbb
in
js
pop
call
repz
cwde
sbb
popa
loop
add
cwde
sbb
popa
loop
int3
sbb
or
adc
gs
push
rol
retf
xchg
or
pop
leave
xchg
mov
pop
pop
adc
lods
cld
leave
(bad)
repz
push
popa
sbb
jno
nop
fnstsw
pop
call
or
mov
lods
rcl
and
sti
shl
pop
xchg
lods
hlt
adc
sub
sbb
cmp
sahf
movs
out
or
sbb
adc
movs
sbb
popf
add
popf
lods
repz
xchg
lods
hlt
pop
fucomip
into
pop
dec
adc
fninit
call
add
dec
push
fimul
vmwrite
mul
mov
jecxz
mov
jecxz
jle
fld
or
sbb
mov
aam
cwde
fs
sbb
test
sahf
popf
lods
repz
adc
lahf
and
or
sbb
stos
or
sahf
sahf
adc
push
mov
sbb
sbb
xchg
sahf
adc
push
mov
lahf
fstp
(bad)
data16
unpckhps
test
test
in
mov
sahf
sbb
call
dec
popa
sbb
mov
sahf
sbb
jmp
dec
popa
sbb
arpl
jno
adc
mov
loop
repz
pop
adc
jne
bound
xchg
stos
mov
fucomp
sbb
popa
sbb
push
push
pop
adc
push
pusha
adc
in
stc
imul
adc
mov
push
jmp
push
rol
retf
xchg
or
jns
cmps
pop
sbb
fimul
call
or
dec
or
mov
(bad)
push
loop
mov
xchg
das
out
popf
aam
ret
retf
jmp
(bad)
popa
sbb
loope
vpaddq
fidiv
pop
pop
clc
push
or
dec
call
mov
add
test
jne
popa
xchg
das
and
jmp
mov
mov
cmc
(bad)
pop
sahf
sbb
pop
repz
cmc
out
sahf
sbb
adc
push
dec
popa
jmp
aaa
xor
add
call
or
push
jbe
sahf
sbb
popa
jmp
enter
rol
lea
jmp
fs
sbb
or
or
push
adc
sbb
push
repz
imul
pushf
or
sbb
popa
dec
push
das
cmp
sahf
dec
add
iret
sbb
sub
ja
in
dec
call
lea
jmp
sahf
ja
(bad)
jecxz
call
add
pop
sbb
cwde
nop
lods
hlt
pop
pop
sbb
jmp
mov
in
dec
call
pop
sahf
sbb
out
test
adc
push
fidivr
pop
leave
mov
popa
hlt
lahf
in
retf
hlt
sbb
call
data16
jne
or
fst
jns
cmc
xchg
pop
sahf
sbb
mov
repnz
push
mov
data16
dec
add
fist
popa
int
aad
dec
push
and
or
in
iret
hlt
sbb
mov
in
dec
call
dec
bound
push
imul
or
dec
add
imul
add
sbb
call
lds
popa
jmp
leave
mov
push
das
fstp
lods
hlt
pop
fiadd
or
ja
data16
ja
fs
sbb
loopne
jle
call
hlt
imul
das
(bad)
pusha
loop
or
pop
or
mov
or
sbb
pop
jns
loop
add
cmc
(bad)
pop
sahf
sbb
popa
retf
enter
sahf
sbb
mov
pop
dec
popa
jmp
adc
loope
outs
adc
imul
sub
test
out
add
sbb
or
xchg
popa
sbb
popa
push
stos
or
mov
pushf
popf
lock
or
or
cmc
sbb
imul
sub
out
adc
or
jle
call
or
fchs
dec
movs
inc
in
jbe
pop
out
popf
aam
sahf
push
(bad)
dec
movs
pusha
in
outs
dec
and
call
or
fchs
xchg
loope
into
lahf
fbld
bound
push
push
fidivr
pop
leave
xchg
mov
adc
loope
sbb
imul
jne
in
fcomp
call
pop
xchg
stos
in
aaa
into
jne
in
fcomp
call
xor
mov
sar
dec
bound
lock
pop
dec
popa
jmp
enter
shl
fild
pop
jnp
dec
jl
call
(bad)
sti
cmc
call
and
mov
call
mov
jge
or
(bad)
popa
dec
inc
xchg
sub
jnp
dec
jl
call
mov
popa
test
jo
call
dec
inc
xchg
sub
sub
add
pop
in
std
sbb
icebp
push
or
test
sbb
push
(bad)
adc
pop
jmp
test
sahf
sbb
out
ficomp
sbb
jbe
xchg
repnz
push
jmp
jecxz
jns
xchg
xor
jge
lods
aam
fisub
xchg
adc
adc
xadd
neg
test
retf
jmp
mov
pop
vpaddq
fisub
jbe
and
fcomi
out
sar
pop
in
pop
pop
cmp
(bad)
arpl
adc
cwde
xchg
mov
or
jmp
mov
adc
pop
loopne
retf
adc
rcr
pop
or
(bad)
add
pop
vpaddq
fidiv
ins
push
lea
push
movs
call
mov
xchg
test
push
movs
nop
adc
lea
push
imul
cmp
push
pop
js
push
lea
push
lea
push
pop
js
push
lea
push
lea
push
and
pushf
push
lea
inc
lea
push
movs
call
mov
cld
stos
or
movs
scas
add
js
pop
lea
push
imul
cmp
push
sahf
sub
push
lea
inc
lea
push
push
js
push
lea
push
jp
test
lea
push
lea
or
lea
push
(bad)
in
jbe
pop
call
dec
sahf
lea
push
lea
adc
lea
xchg
lea
scas
push
js
push
lea
call
pushf
push
lea
sbb
lea
sahf
lea
jmp
js
push
lea
pushf
stc
hlt
pop
sbb
ficomp
nop
adc
sbb
scas
add
sub
js
push
movs
call
call
inc
js
push
lea
sbb
push
imul
or
xchg
xor
lea
push
sub
pushf
push
lea
push
lea
push
xchg
and
lea
push
mov
push
lea
push
lea
push
mov
js
scas
lea
push
sbb
pushf
push
lea
ins
lea
push
movs
call
(bad)
sbb
push
imul
or
xchg
xor
lea
push
sub
pushf
push
lea
push
lea
push
xchg
and
lea
push
mov
push
lea
push
lea
push
mov
js
scas
lea
push
sbb
pushf
push
lea
ins
lea
push
jl
pushf
push
lea
ja
stc
icebp
popa
fisubr
pop
pop
clc
imul
dec
mov
xchg
adc
dec
(bad)
lock
xor
xchg
lods
lock
fucomip
into
pop
dec
adc
push
sbb
call
cld
into
cmc
jbe
popa
loop
test
neg
pusha
adc
sbb
dec
fs
cmps
or
xchg
lods
loopne
loop
or
mov
out
retf
out
cmc
mov
jno
addr16
sub
addr16
sub
sbb
popa
dec
jbe
lods
lock
div
out
outs
cld
xor
push
test
sbb
clc
add
push
adc
sub
div
jl
call
aam
in
test
sub
rol
or
xchg
or
ja
fs
sbb
sbb
cmps
or
adc
gs
popa
aam
in
mov
mov
into
cmc
bound
sbb
sbb
jmp
inc
sahf
sbb
or
push
call
add
pop
in
cmps
(bad)
mov
inc
mov
pop
dec
popa
jmp
enter
mov
repz
ret
cmc
xchg
sbb
sub
fcomp
out
xlat
sub
xchg
fcom
adc
xchg
sub
mov
out
cmp
sahf
sbb
pop
jns
cmc
push
hlt
popa
loop
enter
add
pushf
sbb
pop
int
pop
arpl
mov
ss
xor
mov
cmps
test
cmc
mov
int
pop
pop
cmp
xchg
pop
bt
push
dec
sahf
dec
add
rcr
call
enter
pand
mov
or
f2xm1
lods
push
mov
adc
mov
test
lods
lock
sbb
adc
aas
aad
dec
sahf
push
in
shl
call
aad
leave
push
dec
sahf
xchg
lods
hlt
jne
push
repz
call
rcl
fisub
popf
pop
adc
sahf
sub
(bad)
frstpm(287
in
lods
dec
mov
xor
outs
cmp
repnz
call
in
push
call
add
loop
into
xchg
stos
cmp
jl
loope
pop
and
mov
sbb
call
or
xchg
lods
aam
movs
or
xchg
xchg
aam
stos
pop
test
ficomp
clc
add
and
data16
mov
sbb
sub
jle
call
lods
push
mov
sbb
mov
test
lods
clc
adc
sbb
sbb
aas
aad
dec
sahf
push
in
shl
call
aad
leave
push
dec
sahf
xchg
lods
cld
jne
popa
cld
popf
pop
sbb
sahf
sub
(bad)
fucomi
in
lods
dec
mov
xor
outs
outs
aaa
test
aad
and
add
dec
pop
fnstsw
cdq
jle
stos
or
adc
mov
sbb
pop
bt
push
dec
sahf
adc
jno
or
fcomp
stos
or
adc
lea
out
sahf
popf
xchg
jecxz
push
lock
pop
add
jmp
pop
mov
inc
lock
loop
enter
data16
ja
data16
ja
fs
sbb
loopne
xchg
push
call
lea
dec
ja
sbb
std
mov
jno
sbb
add
jbe
mov
dec
jne
push
or
sbb
lods
fcom
fidiv
pop
pop
clc
imul
int
mov
jg
mov
push
test
icebp
adc
lea
mov
or
nop
cmc
repz
pop
call
test
push
inc
sahf
sbb
clc
pop
pop
fcomp
out
out
int
add
(bad)
pop
int
test
das
dec
pop
out
cdq
popa
jecxz
repz
pop
pop
or
aad
call
mov
push
mov
xchg
sub
je
adc
pop
in
and
pop
fild
call
pop
repz
pop
pop
or
xchg
imul
sbb
pop
repz
sbb
call
or
fwait
loop
rep
fld
popa
loop
ds
jmp
push
sahf
sbb
pop
repz
jne
lods
fcomp
call
repz
dec
add
aad
call
pushfw
ja
data16
jne
or
pop
mov
pop
repz
cmc
cmp
sbb
pop
repz
push
stos
or
cmc
out
inc
sahf
sbb
sbb
popa
loop
fs
add
push
dec
sahf
loop
clc
arpl
pop
in
push
call
cld
pop
fist
mov
jbe
scas
or
loop
js
pop
call
dec
sahf
nop
ins
repz
loop
pop
jbe
mov
mul
pop
pop
test
dec
sahf
nop
ins
repz
loop
pop
neg
mov
(bad)
xlat
sbb
ins
in
loop
test
in
js
pop
call
or
shl
dec
sahf
nop
ins
repz
loop
pop
neg
retf
or
sbb
stos
or
pusha
aaa
dec
sahf
jne
or
popf
add
sahf
sbb
imul
rol
pop
dec
popa
jmp
enter
mov
popa
hlt
mov
popa
retf
popa
sbb
imul
das
(bad)
sti
loope
sbb
loope
data16
jne
or
sbb
or
in
jmp
add
outs
sahf
and
ficomp
adc
dec
or
loop
lock
mov
xor
loope
icebp
(bad)
sbb
and
retf
xchg
or
outs
iret
pushf
pop
sbb
jmp
add
fstp
pop
jns
loop
sbb
push
add
sahf
sbb
mov
pop
dec
popa
jmp
mov
jmp
hlt
sbb
pop
popa
push
pop
jns
cmc
out
or
sbb
and
retf
xchg
or
mov
repz
test
lods
hlt
into
nop
lods
lock
ja
fs
sbb
or
pop
jns
loop
add
inc
mov
js
sub
out
loop
adc
push
or
clc
repz
add
sbb
in
jmp
add
(bad)
sbb
stc
test
adc
jbe
mov
dec
rcl
pop
pop
clc
imul
dec
mov
dec
xchg
dec
xchg
imul
pop
sbb
test
adc
into
jne
or
sbb
in
jmp
add
fstp
in
cmp
fild
or
clc
repz
add
fstp
in
jmp
add
fstp
bnd
add
sub
out
movs
add
sahf
sbb
sbb
pop
dec
popa
jmp
and
das
dec
std
sbb
cmp
das
jbe
lods
or
dec
add
frstpm(287
popa
hlt
scas
in
retf
aas
loope
dec
sahf
and
hlt
jmp
fxch
fdivp
test
sahf
jne
or
sbb
or
aaa
dec
sahf
cmc
mov
sahf
sbb
call
or
adc
jns
sub
out
loop
lock
pop
call
or
pop
adc
cwde
pushf
pop
jmp
sbb
sub
pop
aad
les
fsub
mov
ret
pop
dec
loopne
retf
xchg
or
xchg
adc
lods
lock
cmp
xor
test
loope
shl
push
and
in
aam
xchg
sbb
mov
mov
sahf
sbb
adc
pop
sbb
or
in
int3
pushf
test
sahf
sbb
call
js
popf
aam
sahf
push
push
push
adc
sbb
int
sahf
xchg
xor
popa
cld
lahf
lds
or
fisubr
bound
pop
js
xchg
sbb
mov
xchg
dec
sahf
sbb
sub
pop
vpmuludq
fxch
rol
pop
dec
popa
jmp
enter
xchg
fisubr
or
push
call
or
xchg
lods
hlt
pop
fidivr
jmp
(bad)
pop
hlt
pop
add
fucomi
fsqrt
jne
out
call
js
adc
lods
sahf
sbb
sbb
dec
movs
push
test
mov
fisubr
inc
xchg
stos
xchg
repnz
stos
aam
pop
in
push
sahf
sbb
popa
ficomp
in
push
sahf
sbb
sub
imul
mov
retf
dec
jno
dec
adc
call
or
sahf
sub
clc
loop
repnz
stos
lods
repnz
pop
adc
xchg
lods
clc
rol
pop
dec
popa
jmp
sahf
cmc
xchg
dec
sahf
sbb
movs
dec
bound
sub
call
or
mov
call
repnz
dec
pop
jns
cmc
jae
popa
loop
enter
test
sbb
cdq
sub
in
push
call
repz
loop
jns
dec
add
pop
hlt
cli
pop
sahf
sbb
cmps
dec
sahf
sbb
adc
or
jmp
sbb
pop
icebp
popa
xchg
push
aam
loopne
addr16
pop
icebp
popa
das
arpl
adc
call
pop
fcomp
pop
repnz
pushf
cs
sbb
or
sbb
call
cld
pop
(bad)
xchg
xchg
ins
fsub
pop
test
and
ficomp
adc
or
pop
icebp
popa
sbb
pop
jbe
and
add
dec
aaa
dec
sahf
loop
add
xchg
lods
or
sahf
sub
not
dec
sahf
loop
lock
jecxz
in
pop
call
in
pop
call
or
test
cmc
sbb
jne
in
fcomp
push
repz
lods
or
sahf
sub
pop
in
frndint
pop
fild
add
sbb
call
(bad)
sbb
or
movs
mov
sbb
arpl
leave
jne
rcr
sbb
call
in
pop
call
or
test
cmc
sbb
jne
in
fcomp
push
repz
lods
or
sahf
sub
imul
aaa
dec
sahf
loop
lock
jecxz
in
pop
call
in
pop
call
or
test
cmc
sbb
jne
in
fcomp
push
repz
lods
or
sahf
sub
jbe
lods
or
movs
loop
sahf
sbb
adc
jecxz
add
sbb
call
pop
adc
loop
mov
cmc
mov
sbb
popf
sub
getsec
dec
sahf
xchg
ins
lock
jecxz
pop
idiv
dec
sahf
dec
add
sbb
imul
jbe
lods
or
movs
loop
sahf
sbb
adc
jecxz
cmp
pop
call
repnz
cmc
stos
dec
sahf
sbb
loop
fcomp
push
repz
lods
or
sahf
sub
jbe
stos
or
movs
loop
sahf
sbb
adc
jecxz
cmp
pop
call
repnz
cmc
loop
sahf
sbb
jmp
fcomp
push
repz
stos
or
sahf
sub
jbe
stos
or
movs
loop
sahf
sbb
adc
jecxz
add
std
sbb
adc
mov
mov
or
cmc
jbe
sahf
sbb
popf
popa
sahf
sbb
and
arpl
popa
retf
stos
or
movs
add
sahf
sbb
xor
pop
call
icebp
popa
dec
add
sbb
pop
icebp
popa
dec
pop
jns
xchg
ins
lock
jecxz
pop
test
dec
sahf
dec
add
sbb
add
xchg
sbb
adc
jbe
stos
or
movs
mov
sbb
arpl
leave
jne
rcr
sbb
call
test
push
test
aad
icebp
popa
xchg
cs
pop
call
or
test
cmc
sbb
jne
in
fcomp
push
repz
stos
or
sahf
sub
jbe
stos
or
movs
loop
sahf
sbb
adc
jecxz
add
pop
call
repnz
cmc
add
sbb
dec
dec
sahf
sbb
call
neg
std
stos
or
test
repz
loop
leave
fcomp
popa
cld
scas
in
popa
retf
ss
sahf
loop
sbb
loop
fs
stos
or
cmc
xchg
dec
sahf
sbb
mov
sahf
sbb
call
neg
ret
stos
or
test
repz
loop
jno
sbb
add
xchg
sbb
adc
imul
or
loop
lock
jecxz
in
pop
call
in
pop
call
or
test
cmc
sbb
cmc
jmp
sbb
mov
repnz
dec
xor
pop
call
or
sahf
sub
sbb
cdq
ins
or
pop
loop
repz
hlt
cmps
or
sahf
sbb
push
pop
in
sbb
pop
icebp
popa
sbb
sub
arpl
jmp
pop
loop
rep
cwde
adc
pusha
loop
ja
mov
jmp
pop
loop
repz
stos
aam
pop
in
push
sahf
sbb
imul
dec
popa
hlt
daa
pop
call
loopne
push
pop
out
pop
imul
test
mov
aas
(bad)
pop
jl
and
dec
adc
call
repz
dec
add
sbb
push
and
sbb
ins
mov
loopne
test
ins
int3
popa
loopne
lea
fst
icebp
popa
popf
call
jge
loop
repz
pop
repnz
loop
adc
cwde
call
xchg
loope
repnz
dec
sub
call
or
sahf
sub
jbe
test
sahf
movs
loop
sahf
sbb
adc
jecxz
adc
call
repnz
cmc
test
imul
cmc
xor
push
push
sahf
sbb
imul
pusha
sti
fs
ret
stos
or
test
repz
loop
cmc
ficomp
popa
cld
scas
in
popa
retf
test
sahf
movs
loop
sahf
sbb
adc
jecxz
cmp
pop
call
repnz
cmc
es
sahf
sbb
ins
enter
mov
jmp
ins
hlt
popa
jecxz
xor
popa
adc
pusha
loop
test
icebp
pop
icebp
popa
xchg
sbb
js
ins
int3
popa
loopne
test
xchg
or
adc
xlat
sbb
or
mov
call
or
xchg
sbb
fild
in
or
sbb
pop
repnz
adc
lahf
sbb
pop
repnz
xchg
ins
loopne
loopne
repz
adc
call
icebp
popa
dec
add
pop
adc
push
adc
dec
push
and
or
in
retf
clc
xchg
push
retf
pop
test
sbb
sahf
loop
pop
xchg
stos
ins
retf
pop
sbb
loop
in
es
repz
mov
repz
in
pop
icebp
popa
loop
clc
popa
jecxz
repz
pop
mov
adc
loop
fs
ret
stos
or
cmc
dec
xor
cmc
outs
xor
sbb
imul
pusha
sti
fs
ret
stos
or
test
repz
loop
test
pop
adc
popa
retf
xlat
or
movs
loop
sahf
sbb
adc
jecxz
add
pop
call
repnz
cmc
xchg
xor
cmc
fidiv
sahf
sbb
call
neg
std
stos
or
test
repz
loop
pop
mov
adc
adc
or
pushf
cs
mov
pop
repnz
nop
ins
or
loop
pop
popa
test
repz
loop
in
jmp
sbb
pop
repnz
adc
add
mov
repz
jne
rcr
sbb
push
repz
xlat
or
sahf
sub
jbe
(bad)
or
movs
loop
sahf
sbb
adc
jecxz
adc
call
repnz
cmc
or
sahf
sbb
jbe
sahf
sbb
call
neg
ret
stos
or
test
repz
loop
mov
sbb
popa
cld
imul
adc
popa
mov
sbb
adc
imul
or
loop
lock
jecxz
in
and
or
fchs
lods
ret
stos
or
test
repz
loop
jne
sbb
add
mov
sbb
adc
jbe
(bad)
or
movs
mov
sbb
arpl
leave
jne
rcr
sbb
call
in
and
or
pop
call
cmc
sbb
jne
rcr
sbb
push
repz
(bad)
or
sahf
sub
pop
jmp
es
sbb
call
or
jmp
not
ss
sahf
loop
lock
jecxz
in
and
or
fchs
in
and
or
pop
call
cmc
sbb
jne
in
fcomp
push
repz
aad
sahf
sahf
sub
jbe
aad
sahf
movs
loop
sahf
sbb
adc
jecxz
add
sbb
call
pop
adc
loop
mov
cmc
sahf
xor
jne
rcr
sbb
push
repz
aad
sahf
sahf
sub
pop
in
sar
fild
xor
sbb
adc
imul
or
loop
lock
jecxz
in
and
or
fchs
fs
or
test
repz
loop
inc
mov
adc
call
or
jmp
imul
or
loop
lock
jecxz
in
and
or
fchs
fs
stos
or
test
repz
loop
sbb
pop
adc
call
or
movs
loop
sahf
sbb
adc
jecxz
cmp
pop
call
repnz
cmc
push
xor
nop
ins
shl
pop
pop
adc
loop
fs
ret
stos
or
cmc
dec
xor
cmc
outs
xor
sbb
imul
pusha
sti
outs
std
stos
or
test
repz
loop
test
pop
adc
call
repnz
cmc
jp
sahf
sbb
cmps
xor
sbb
imul
pusha
sti
outs
std
stos
or
test
repz
loop
popa
mov
adc
call
int3
popa
loopne
test
repnz
sbb
popa
fistp
(bad)
sub
loope
repnz
dec
and
pop
call
or
sahf
sub
jbe
ror
movs
loop
sahf
sbb
adc
jecxz
cmp
pop
call
repnz
cmc
out
sahf
sbb
ss
sbb
push
repz
ror
sahf
sub
jbe
ror
movs
loop
sahf
sbb
adc
jecxz
cmp
pop
call
repnz
cmc
ds
sahf
sbb
push
jg
sbb
call
or
test
cmc
sbb
cmc
xchg
aaa
sahf
sbb
call
xchg
loope
repnz
dec
xor
pop
call
or
sahf
sub
test
dec
sahf
loop
lock
jecxz
in
es
data16
ja
pushfw
ja
data16
jne
or
pop
pop
jns
cmc
jmp
loop
repz
(bad)
sahf
sbb
push
repz
ror
ja
and
dec
mov
repnz
loop
in
loopne
in
and
add
arpl
add
test
call
repnz
cmc
dec
cmp
in
popa
retf
jle
sahf
sbb
adc
lds
popa
jmp
sahf
sbb
in
pop
in
jmp
cwde
adc
popa
loop
retf
pop
pop
pop
or
es
fnclex
mov
or
cwde
pop
repnz
loop
in
daa
call
hlt
pop
fiadd
dec
sahf
nop
ins
repz
loop
pop
neg
or
cmc
pop
cld
popa
loop
enter
repz
xchg
lods
repz
sbb
call
or
sbb
or
cmc
cmp
popa
loop
fiadd
call
or
div
sahf
jne
or
popf
add
pop
cmp
call
pop
pop
clc
imul
int
mov
jl
in
hlt
pop
fisubr
add
pop
repz
xchg
lods
add
and
imul
xchg
ins
pushf
arpl
pop
xchg
adc
call
and
test
adc
fist
in
pop
jbe
fisttp
xchg
mov
or
xchg
jge
arpl
pop
pop
jbe
fisttp
xchg
ins
jo
loop
repz
into
cmp
xchg
gs
loop
or
pop
jmp
icebp
popa
loop
hlt
lahf
in
retf
enter
sahf
sbb
pop
repz
test
icebp
popa
loop
std
test
call
repz
loop
xchg
arpl
pop
in
sub
or
dec
loopne
adc
repz
nop
mov
js
loop
or
pop
jmp
icebp
popa
loop
sti
sti
das
call
dec
sahf
cmc
push
cmp
loopne
repz
jmp
hlt
sbb
pop
repz
cmc
jmp
sbb
ror
jne
or
sub
pop
repz
jne
rcr
sbb
call
mov
sbb
popa
sahf
sub
xchg
fstp
cmp
inc
jmp
loop
or
loope
repz
dec
mov
loopne
repz
cmc
mov
sahf
sbb
pop
repz
test
icebp
popa
loop
mov
popa
test
icebp
popa
loop
mov
popa
test
icebp
popa
loop
sbb
dec
add
loop
(bad)
pop
cmp
pop
repz
fstp
cmp
jmp
or
jne
rcr
sbb
pop
repz
cmc
inc
xor
sbb
popa
retf
adc
mov
repz
dec
add
outs
repnz
repz
cwde
ins
icebp
popa
loop
dec
hlt
sbb
pop
repz
cmc
(bad)
xor
sbb
adc
sbb
call
call
sahf
sbb
add
popa
loop
or
mov
call
mov
pop
repz
sbb
call
repnz
loop
in
in
pop
repz
nop
ins
test
loop
pop
adc
mov
mov
data16
ja
sbb
dec
or
fmul
adc
add
(bad)
call
movs
arpl
pop
in
cs
hlt
pop
ficom
mov
test
dec
sahf
jne
rcr
sbb
pop
repz
cmc
inc
cmp
fld
arpl
pop
or
xor
xchg
inc
call
repnz
loop
fs
stos
or
fisttp
xchg
sub
jbe
call
or
popf
ins
jg
loop
or
popa
loop
or
aad
xlat
jmp
in
sub
or
mov
call
cld
sahf
sbb
call
or
cwde
adc
popa
loop
pop
jbe
fmul
ja
fs
shr
popa
loop
in
mov
in
popa
loop
or
cmp
add
pop
repz
div
(bad)
cmp
imul
jne
imul
pushf
das
xchg
scas
sbb
adc
push
stos
sbb
call
mov
loopne
repz
fidivr
or
sbb
pop
repz
fisttp
loop
test
loop
in
das
call
icebp
popa
loop
add
inc
loop
sahf
jmp
popa
xchg
das
push
rol
call
sbb
dec
mov
mov
sub
test
popf
add
rcr
or
xchg
sub
dec
push
test
adc
jbe
fisttp
xchg
sub
dec
adc
jmp
add
pop
jnp
pop
push
sbb
popa
pop
push
pop
dec
pusha
adc
bound
add
dec
push
or
push
lods
sbb
dec
or
fimul
xchg
lea
cmps
or
sub
(bad)
jecxz
jmp
dec
outs
xchg
out
call
xchg
sbb
push
cmp
loop
add
in
imul
dec
add
jmp
out
fninit
gs
cwde
sbb
or
xchg
adc
jmp
out
fninit
gs
cwde
sbb
mov
mov
mov
or
adc
pusha
nop
lods
or
sbb
add
dec
push
sbb
neg
or
nop
lods
hlt
into
ja
pop
idiv
mov
data16
cmc
adc
sahf
sbb
push
sub
cmc
dec
ds
sbb
mov
or
cmc
mov
sahf
sbb
mov
push
fidivr
adc
sbb
arpl
mov
popa
hlt
mov
popa
retf
es
loopne
sahf
jmp
popa
xchg
das
retf
sbb
test
loop
pop
adc
mov
or
faddp
or
xchg
cs
sahf
sbb
dec
dec
pop
mov
jbe
fmul
sahf
sub
xchg
fstp
in
popa
loop
jns
cmc
(bad)
cmp
sbb
popa
mov
std
pop
repz
fcmovu
int3
fdivp
mov
sbb
test
loop
pop
adc
mov
or
adc
js
xchg
adc
popa
test
in
popa
loop
cmp
adc
pop
mov
popa
push
call
out
pushf
pop
xor
sbb
sub
inc
and
retf
xchg
or
or
mov
or
dec
mov
mov
inc
sbb
cmp
in
popa
retf
in
or
scas
sbb
and
ficomp
adc
inc
sbb
pop
jbe
push
repz
sahf
sub
test
sahf
dec
add
sbb
imul
pop
in
sar
fild
sbb
dec
add
pop
adc
call
or
jmp
imul
or
nop
ins
or
loop
pop
jbe
fisttp
sahf
sub
jbe
fisttp
movs
loop
sahf
sbb
adc
jecxz
add
std
sbb
adc
mov
mov
or
mov
mov
or
fprem
in
cs
or
test
cmc
sbb
jne
in
fcomp
pop
repz
cmc
jbe
sahf
sbb
sbb
test
cwde
call
in
cs
in
cs
or
test
cmc
sbb
jne
in
fcomp
pop
repz
cmc
mov
sahf
sbb
repnz
sahf
sbb
call
neg
cs
or
test
cmc
int3
nop
push
or
loop
pop
test
sahf
nop
push
or
loop
pop
jbe
fimul
sahf
sub
popa
push
stos
or
cwde
call
fs
cwde
call
in
das
call
test
push
test
jmp
cs
das
call
or
test
cmc
sbb
jne
in
fcomp
pop
repz
cmc
es
sbb
loop
fcomp
pop
repz
cmc
push
ds
sbb
sahf
ds
sbb
call
neg
std
stos
or
cwde
call
in
das
call
fs
ret
adc
mov
or
fchs
test
push
test
in
aaa
repz
xchg
cs
das
call
or
test
cmc
sbb
cmc
idiv
sahf
sbb
call
and
dec
adc
and
dec
add
lods
sbb
and
sbb
add
lods
sbb
add
scas
sbb
call
(bad)
sbb
dec
sahf
nop
ins
or
loop
pop
jbe
(bad)
sahf
sub
not
dec
sahf
nop
ins
or
loop
pop
jbe
(bad)
sahf
sub
pop
in
frndint
pop
fild
lods
scas
sbb
call
(bad)
sbb
dec
sahf
nop
ins
or
loop
pop
jbe
(bad)
sahf
sub
test
dec
sahf
nop
ins
or
loop
pop
jbe
(bad)
sahf
sub
jbe
(bad)
movs
loop
sahf
sbb
adc
jecxz
cmp
pop
call
repz
dec
add
pop
adc
call
sbb
dec
and
pop
call
repz
dec
add
scas
sbb
add
scas
sbb
call
(bad)
sbb
dec
sahf
nop
ins
or
loop
pop
jbe
(bad)
sahf
sub
neg
ins
or
loop
pop
jbe
(bad)
sahf
sub
jbe
fmul
movs
loop
sahf
sbb
adc
jecxz
cmp
pop
call
repz
dec
add
pop
adc
call
loopne
loop
test
inc
cmp
sbb
call
fistp
(bad)
sub
sbb
sbb
pop
call
repz
dec
add
pop
or
call
or
jmp
imul
or
nop
ins
or
loop
pop
jbe
fmul
sahf
sub
test
dec
sahf
nop
ins
or
loop
pop
jbe
fmul
sahf
sub
pop
repz
dec
sahf
sbb
call
or
jmp
imul
or
nop
ins
or
loop
pop
jbe
fmul
sahf
sub
jbe
fmul
movs
loop
sahf
sbb
adc
jecxz
add
scas
sbb
call
pop
adc
mov
or
mov
mov
or
fprem
fs
shr
popa
loop
in
sub
loopne
sahf
ja
pushfw
ja
data16
jne
or
pop
mov
or
cwde
adc
popa
loop
retf
call
in
popa
loop
in
xor
or
sbb
pop
repz
dec
gs
std
pop
repz
loop
lock
loop
in
xor
or
test
shl
add
sbb
add
pop
in
sar
(bad)
pop
pop
clc
imul
int
mov
addr16
in
jmp
cwde
ins
mul
popa
retf
sbb
loop
cmp
jmp
in
xor
or
dec
loopne
retf
test
mov
sti
jns
ins
mov
pop
test
mov
in
xor
or
and
das
(bad)
retf
stos
or
push
or
xchg
ins
lods
arpl
pop
data16
sbb
dec
add
mov
call
or
cwde
pop
icebp
popa
loop
fs
stos
or
test
jmp
loop
(bad)
pop
cmp
int3
xchg
cdq
inc
push
sahf
sbb
call
repz
dec
mov
loopne
repz
cmc
shl
sahf
sbb
popa
retf
popa
test
icebp
popa
loop
sbb
dec
add
pop
adc
int3
xchg
cdq
cdq
push
sahf
sbb
call
repz
dec
add
sbb
mov
pop
repz
cmc
jle
sahf
sbb
pop
test
test
or
fidiv
sbb
dec
add
mov
call
retf
mov
or
cwde
push
repnz
loop
or
sbb
pop
repz
sbb
jo
popa
loop
js
jnp
mov
pop
repz
sbb
call
repnz
loop
in
sti
pop
repz
nop
ins
test
loop
pop
adc
mov
mov
data16
ja
sbb
dec
or
ret
adc
add
lahf
jmp
movs
arpl
pop
in
xor
or
in
hlt
pop
ficom
mov
test
dec
sahf
jne
rcr
sbb
pop
repz
cmc
pop
and
fld
gs
or
xor
out
and
adc
popa
loop
fs
stos
or
ss
or
xchg
cs
jbe
call
or
popf
ins
jae
loop
or
popa
loop
or
aad
cli
xchg
cdq
loope
sahf
sbb
call
or
in
hlt
pop
fiadd
sbb
dec
mov
or
sbb
inc
pop
call
repz
dec
add
loop
(bad)
pop
adc
repz
sbb
call
and
pop
int
pop
sti
popa
loop
enter
add
mov
or
ja
repz
ins
and
pop
jbe
ror
pop
jae
sbb
adc
mov
jbe
aas
repz
xchg
repz
mov
pop
inc
pop
call
or
jne
rcr
sbb
call
add
xchg
shr
sahf
xchg
jne
arpl
pop
(bad)
jne
mov
pop
popa
test
icebp
popa
loop
cmp
pop
(bad)
pop
adc
adc
loop
in
dec
mov
repz
cmc
repz
loop
enter
jmp
jbe
ror
ins
nop
arpl
pop
or
sbb
add
mov
call
test
call
repz
cmc
(bad)
and
cmp
pop
repz
ror
ins
nop
arpl
pop
out
pushf
pop
add
sbb
and
call
sbb
dec
mov
sti
sti
cmp
lea
mov
pop
mov
call
jns
cmc
mov
pop
xchg
mov
dec
jbe
ror
cs
enter
sahf
sbb
call
clc
pop
fidivr
or
push
jmp
or
dec
add
sbb
mov
mov
sahf
ja
in
xor
or
fild
and
sbb
popa
dec
outs
xchg
das
sbb
pop
iret
or
dec
add
sbb
mov
vmovntps
clc
push
or
sbb
call
jp
imul
pop
adc
or
ja
repz
add
mov
call
and
push
imul
or
cwde
jmp
pop
jbe
ror
jmp
mov
cmc
scas
mov
xchg
and
repz
sbb
add
pop
jmp
enter
sahf
sbb
mov
push
fidivr
add
mov
imul
clc
fisubr
outs
xchg
stos
lods
repnz
jne
rcr
sbb
add
mov
call
or
nop
lods
clc
into
ja
fstp
or
sub
fcomp
call
(bad)
pop
push
mov
or
pop
sbb
jbe
ret
sahf
sub
adc
pop
hlt
sbb
call
dec
sahf
cmc
adc
sbb
out
fninit
imul
popa
jge
push
fidivr
add
dec
push
js
add
call
dec
bound
data16
ja
data16
ja
data16
ja
data16
jne
or
hlt
sbb
add
mov
call
push
sahf
sbb
adc
hlt
sub
stos
or
xchg
ror
jmp
cmp
test
or
ja
pop
hlt
sub
stos
or
jb
or
ja
pop
hlt
sub
test
or
ja
pop
hlt
sub
test
jbe
ror
push
xchg
enter
lahf
dec
cmp
rcl
sbb
cmp
enter
add
lahf
dec
cmp
js
fcomp
call
cmp
sub
mov
call
test
jmp
cmp
out
iret
or
ja
pop
hlt
sub
test
or
ja
pop
hlt
sub
stos
or
into
iret
or
ja
pop
hlt
sub
stos
or
fmulp
or
movs
pop
and
sbb
sbb
pop
inc
mov
pop
dec
push
iret
add
or
ja
rep
cmc
jne
sahf
cmc
scas
sub
pop
call
or
loope
cmp
test
or
ja
rep
popf
dec
dec
sahf
cmc
retf
sbb
call
or
loope
cmp
mov
iret
or
pushf
pop
dec
xchg
sbb
frstor
add
cmp
or
cmp
sahf
jne
mov
sbb
les
mov
loop
adc
pop
call
or
sbb
clc
mov
sbb
hlt
cdq
ficomp
call
and
pop
call
or
gs
dec
sahf
jne
mov
sbb
rcl
sbb
(bad)
pop
call
or
xor
sahf
jne
mov
sbb
enter
add
data16
test
adc
stos
cdq
dec
dec
sahf
cmc
mov
sahf
sbb
call
or
loope
cmp
mov
into
or
inc
sub
clc
imul
dec
mov
adc
repnz
stc
inc
pop
call
pushf
(bad)
jne
xlat
fcomp
pop
repz
sub
out
call
adc
dec
mov
or
sbb
test
xchg
loope
dec
push
arpl
lods
cld
into
ja
data16
jne
or
dec
adc
pop
call
or
sbb
(bad)
sub
pop
call
cmp
pop
call
xor
in
imul
dec
sbb
or
fs
(bad)
stos
or
(bad)
xor
ja
in
cmp
or
sbb
sahf
xchg
adc
sahf
loop
cmp
pop
call
dec
ds
call
or
pop
adc
fucomi
imul
dec
sbb
add
ret
test
dec
sahf
ja
in
cmp
or
jge
dec
sahf
ja
pushfw
ja
data16
ja
data16
ja
data16
ja
and
call
or
adc
into
or
xchg
cs
dec
cmp
in
xchg
fistp
call
cmp
pop
call
dec
ds
call
push
sahf
sbb
or
mov
or
(bad)
xor
ja
in
cmp
or
popa
dec
dec
sahf
pushf
pop
cmp
sbb
fnstsw
add
sahf
loop
dec
ds
call
push
sahf
sbb
or
mov
or
(bad)
xor
ja
in
cmp
or
mov
call
dec
sahf
ja
rep
pop
dec
dec
sahf
ja
fs
sbb
or
mov
shl
pop
not
xor
jne
xlat
fcomp
int3
or
mov
or
fcom
popa
sub
mul
or
jne
or
sbb
call
(bad)
fcomp
call
sub
pop
call
cmp
pop
call
ins
ds
call
fs
call
setle
stos
or
cwde
xor
ja
in
cmp
or
cmc
jne
sahf
pushf
das
xchg
(bad)
stos
or
sbb
call
or
jne
(bad)
fcomp
jmp
in
pop
call
or
sbb
test
cmp
mov
jmp
fs
call
setle
stos
or
cwde
xor
ja
in
cmp
or
popf
dec
dec
sahf
pushf
das
push
fstp
fnstsw
add
sahf
loop
ins
ds
call
or
and
xor
call
rcr
sbb
call
das
sahf
sbb
call
repz
sbb
test
cmp
mov
xor
sti
call
or
sahf
sbb
stos
or
(bad)
xor
ja
in
ds
dec
sahf
xchg
adc
jns
lods
loopne
fiadd
xchg
fistp
lods
lods
fistp
call
or
sbb
call
pop
test
sahf
jne
xlat
fcomp
retf
or
mov
or
fcom
popa
sub
hlt
jp
adc
sbb
call
or
jne
(bad)
fcomp
call
das
sahf
sbb
call
cmp
pop
call
dec
ds
call
or
sbb
call
or
dec
sbb
pop
call
or
sbb
call
or
sbb
test
cmp
mov
sbb
jmp
or
sbb
mov
or
(bad)
xor
ja
in
aas
call
dec
sahf
ja
rep
sub
sahf
ja
rep
jge
dec
sahf
ja
fs
call
or
ja
fs
sbb
aaa
dec
sahf
jne
(bad)
fcomp
call
or
cdq
dec
dec
sahf
ja
rep
sub
sahf
ja
rep
jge
dec
sahf
ja
fs
call
or
ja
fs
sbb
dec
dec
sahf
jne
(bad)
fcomp
call
or
add
sahf
xchg
adc
sahf
loop
cmp
pop
call
ins
ds
call
fs
sbb
or
mov
or
sbb
dec
sahf
jne
push
sahf
sbb
call
or
sbb
test
cmp
mov
sub
call
fs
sbb
aaa
dec
sahf
jne
(bad)
fcomp
call
or
cmp
call
dec
sahf
ja
rep
pop
dec
dec
sahf
ja
fs
mov
or
ja
fs
sbb
xor
jne
aad
sbb
leave
or
mov
add
loop
test
adc
popa
loop
push
push
fidivr
adc
dec
push
cmp
cli
hlt
test
adc
fcomp
sar
loop
retf
xor
dec
add
imul
dec
add
pop
call
test
call
dec
sahf
cmc
out
sub
outs
dec
mov
or
sbb
test
xchg
loope
dec
push
arpl
lods
cld
into
ja
data16
jne
or
dec
adc
pop
call
or
sbb
cmp
sbb
call
cmp
pop
call
xor
in
imul
dec
sbb
or
fs
les
dec
sahf
ja
in
cmp
ja
sahf
pushf
pop
popa
ficomp
fnstsw
add
sahf
loop
dec
ds
call
or
pop
adc
fucomi
imul
dec
sbb
add
ret
test
dec
sahf
ja
in
cmp
dec
dec
sahf
ja
pushfw
ja
data16
ja
data16
ja
data16
ja
and
call
or
adc
enter
cs
dec
cmp
in
xchg
fistp
call
cmp
pop
call
ins
ds
call
data16
fs
sbb
aaa
dec
sahf
jne
(bad)
fcomp
test
sbb
call
dec
sahf
ja
fstp
or
cmc
inc
adc
pop
call
or
jbe
test
or
popf
aad
cmp
call
or
sbb
inc
lahf
sbb
jne
sahf
cmc
xchg
adc
sbb
jmp
in
pop
call
or
sbb
test
cmp
mov
jmp
data16
fs
sbb
aaa
dec
sahf
jne
(bad)
fcomp
test
sbb
popa
retf
hlt
sbb
test
cmp
mov
jmp
data16
or
sbb
mov
or
cwde
xor
ja
in
add
or
xor
sahf
cmc
nop
stc
popa
loop
or
sub
xchg
fistp
lods
lods
fistp
call
mov
or
sbb
mov
(bad)
inc
pop
call
adc
pop
call
cmp
pop
call
dec
ds
call
sbb
call
or
dec
or
call
or
sbb
call
or
hlt
fimul
jmp
hlt
sbb
test
cmp
mov
xor
sbb
call
or
sbb
stos
or
(bad)
xor
ja
in
add
or
in
jne
sahf
ja
rep
sub
sahf
ja
rep
pop
dec
dec
sahf
ja
enterw
sahf
sbb
call
pop
neg
xor
jne
xlat
fcomp
test
jl
fcomp
fcom
popa
sub
idiv
jmp
or
sbb
call
aad
sbb
call
adc
pop
call
cmp
pop
call
dec
ds
call
or
sbb
call
or
dec
sbb
call
or
sbb
call
or
sbb
test
cmp
mov
or
ja
fs
sbb
dec
dec
sahf
jne
(bad)
fcomp
call
or
add
sahf
pushf
pop
(bad)
out
call
cmp
pop
call
ins
ds
call
data16
fs
sbb
aaa
dec
sahf
jne
(bad)
fcomp
call
or
xor
call
dec
sahf
ja
rep
jge
dec
sahf
ja
data16
ja
data16
or
dec
adc
pop
call
or
sbb
out
adc
pop
call
cmp
pop
call
dec
ds
call
or
sbb
call
or
dec
sub
pop
call
or
sbb
call
or
test
repz
movs
xor
sbb
add
popa
loop
push
push
fidivr
adc
dec
mov
add
in
jmp
pop
add
pop
ja
fs
sbb
or
or
push
xchg
test
push
repz
cdq
jns
sahf
sbb
jb
sahf
sbb
pop
adc
bound
call
sti
jns
lods
in
fisub
outs
dec
gs
push
gs
bound
jns
jne
mov
sahf
sbb
pop
repz
loope
dec
hlt
sbb
mov
pop
inc
pop
call
jns
cmc
xor
popa
loop
enter
hlt
xchg
fstp
adc
pop
popa
push
stos
or
sbb
or
cmc
xchg
scas
popa
loop
enter
cmp
rol
retf
xchg
or
or
dec
mov
push
pop
fld
sub
mov
ins
or
loop
pop
jbe
lock
cmc
adc
sahf
sbb
call
fist
inc
pop
mov
loop
jns
jne
mov
sahf
loop
repz
cmc
ficom
sbb
popa
retf
pop
push
jmp
adc
pop
call
repz
dec
add
jecxz
jmp
(bad)
jne
mov
sahf
loop
repz
cmc
jmp
sbb
dec
sahf
nop
ins
or
loop
pop
jbe
dec
xchg
sbb
jecxz
in
jns
jne
mov
sahf
loop
repz
cmc
sbb
sbb
dec
sahf
nop
ins
or
loop
pop
jbe
dec
popf
xchg
repz
push
stos
or
cwde
call
in
or
or
pusha
pop
add
or
(bad)
das
pop
call
repz
dec
add
outs
xor
test
xchg
repz
push
stos
or
cwde
call
in
or
or
pusha
pop
push
jmp
adc
pop
call
repz
dec
add
sbb
jecxz
(bad)
jne
mov
sahf
loop
repz
cmc
(bad)
sbb
adc
dec
sahf
nop
ins
or
loop
pop
jbe
dec
popf
xchg
repz
push
stos
or
cwde
call
in
or
or
in
pop
jmp
popa
retf
pop
add
or
pop
sub
call
repz
dec
add
mov
call
or
push
xor
nop
ins
or
loop
pop
neg
add
popa
loop
aaa
inc
pop
call
or
pop
ja
sahf
cmc
mov
popa
loop
int3
mov
pop
call
test
push
test
in
repz
xchg
cs
jecxz
repz
call
pop
adc
sbb
pop
in
hlt
pop
fisub
enter
sahf
sbb
mov
repz
sahf
sub
xchg
fstp
retf
or
inc
mov
pop
sbb
pop
pop
clc
imul
int
mov
xor
jmp
pusha
sahf
sbb
call
dec
sahf
nop
ins
loope
loop
pop
jbe
dec
cmc
cs
sahf
sbb
call
cdq
ins
in
repz
mov
jmp
mov
jae
pop
repz
cmc
push
sbb
in
repz
push
stos
or
cwde
add
in
or
or
mov
jmp
(bad)
jne
mov
jae
pop
repz
cmc
and
sahf
sbb
call
call
pop
popf
push
jmp
pop
or
or
or
sbb
pop
repz
dec
add
and
adc
popa
sbb
dec
sahf
nop
ins
loope
loop
pop
jbe
std
or
popf
push
jmp
pop
or
or
cmp
lock
repz
dec
add
sbb
adc
popa
sbb
dec
sahf
nop
ins
loope
loop
pop
jbe
std
or
xchg
sbb
and
adc
popa
adc
pop
dec
sahf
nop
ins
loope
loop
pop
jbe
std
or
popf
push
jmp
pop
add
sub
lock
repz
dec
add
and
adc
popa
pop
popf
sbb
sahf
nop
ins
loope
loop
pop
jbe
cld
or
popf
push
jmp
pop
pop
jmp
add
pop
call
repz
dec
add
mov
push
test
std
pop
repz
xchg
mov
out
adc
popa
adc
dec
sahf
nop
ins
loope
loop
pop
jbe
cld
or
popf
push
jmp
pop
add
or
cvtpi2ps
sbb
dec
add
and
adc
popa
adc
dec
sahf
nop
ins
loope
loop
pop
jbe
cld
or
jne
lods
fcomp
pop
repz
cmc
cld
loope
loop
cld
imul
pop
repz
fild
adc
add
popa
sahf
sub
pop
cwde
add
popa
loop
mov
in
rep
imul
repz
sbb
call
pop
sahf
sbb
popa
mov
pop
repz
fcmovnb
cld
pop
fcmovnu
xlat
hlt
sbb
call
repz
icebp
adc
popa
adc
add
(bad)
jmp
sbb
pop
repz
adc
sbb
adc
popa
daa
out
movs
sbb
or
mov
rol
sbb
jmp
repz
push
fmul
jmp
popa
xchg
sbb
dec
cmp
pop
call
repz
dec
add
pop
adc
in
repz
imul
or
fidivr
cld
dec
popa
int
imul
neg
xlat
popa
fadd
xchg
das
dec
movs
mov
out
rcr
call
xchg
fistp
js
fcomp
call
repz
dec
add
xchg
sbb
fcomp
call
repz
dec
add
mov
add
sbb
ins
lock
pop
jbe
cld
or
movs
pop
push
sahf
sbb
cmp
popa
loop
retf
adc
popa
loop
fs
stos
or
cwde
adc
popa
loop
in
or
or
push
xor
nop
ins
lock
pop
jbe
dec
sahf
sub
adc
mov
or
cwde
adc
popa
loop
int3
call
repz
jne
aam
sbb
pop
repz
cmc
xchg
sbb
ja
sbb
dec
add
lahf
jne
aam
sbb
pop
repz
cmc
xchg
xchg
popa
loop
enter
add
jle
or
nop
ins
lock
sbb
or
xchg
ins
hlt
data16
test
push
test
int
repz
xchg
cs
and
adc
popa
pop
out
stos
sbb
or
test
hlt
popa
loop
pushf
aas
pop
call
or
cwde
adc
popa
loop
in
or
or
fprem
adc
adc
popa
loop
in
psubsb
cwde
adc
popa
loop
in
or
or
cwde
cmp
popa
loop
sub
loop
mov
loope
repz
xor
sti
popa
loop
mov
sbb
cmp
popa
loop
mov
jmp
outs
jmp
popa
xchg
cs
adc
popa
nop
ins
lock
loop
pop
test
dec
sahf
nop
ins
lock
loop
pop
jbe
dec
sahf
sub
adc
mov
or
cwde
and
popa
loop
mov
jecxz
repz
cmc
pop
pop
sahf
sbb
pop
repz
sbb
ja
in
psubsb
cwde
sbb
popa
loop
cli
xor
cwde
adc
popa
loop
repz
adc
popa
cmc
sahf
sbb
(bad)
in
repz
cmc
sahf
pop
sahf
sbb
pop
repz
xchg
push
clc
data16
and
dec
stc
or
nop
ins
hlt
data16
pop
hlt
sbb
pop
repz
call
cmc
mov
sahf
sbb
call
lock
loop
pop
popa
test
hlt
popa
loop
cmc
push
loop
(bad)
pop
adc
xchg
fucom
mov
add
popa
loop
push
mov
cmps
or
jne
jnp
sbb
call
repz
inc
mov
push
fucomip
or
xchg
or
or
cmps
clc
or
dec
mov
icebp
mov
xchg
sub
stos
or
sbb
call
or
cwde
dec
loop
loop
int3
jmp
or
sbb
add
pop
div
sahf
sbb
fcom
into
sub
pop
lds
out
pop
cwde
pop
loope
loop
iret
test
sahf
cmc
mov
sahf
sbb
stos
or
ds
or
cmc
ficomp
mov
imul
sub
sbb
push
repz
dec
pop
jns
cmc
es
sbb
dec
dec
sahf
nop
ins
mov
jbe
jae
popa
sahf
sub
mov
adc
lahf
sbb
pop
dec
sahf
adc
stos
or
sbb
cli
pop
call
or
cmps
cmp
or
add
sbb
cmc
xor
retf
sbb
xchg
jge
jae
pop
retf
add
cmp
cld
or
adc
sub
into
movs
outs
mov
imul
adc
mov
popa
fadd
xchg
cs
pop
jl
(bad)
push
mov
scas
jae
pop
mov
scas
add
mov
adc
xchg
js
sbb
pop
repz
cmc
into
sbb
fucomip
jns
fld
jae
pop
aas
pop
cwde
inc
loope
loop
sbb
dec
sbb
stos
or
cwde
ja
popa
loop
in
or
or
out
scas
push
sahf
sbb
ja
popa
loop
sbb
dec
add
sbb
add
popa
dec
add
loop
sbb
dec
add
pop
loop
(bad)
pop
add
ja
popa
loop
in
or
or
sbb
cmp
jmp
fcomp
call
or
pop
ja
sahf
cmc
dec
pop
sahf
sbb
pop
repz
in
fcmovu
sbb
call
mov
push
mov
xor
jne
lods
fcomp
call
test
push
and
loop
sub
sbb
inc
aam
sbb
call
or
cmp
stos
pop
sahf
sbb
pop
repz
push
das
sahf
sbb
sub
mov
xor
jne
xchg
fistp
call
mov
lock
repz
cs
sbb
call
and
sahf
ja
call
jne
or
pop
or
call
or
pop
pop
pushfw
ja
data16
dec
add
(bad)
gs
es
mov
repnz
repz
cmc
mov
sub
aad
dec
push
and
or
in
or
push
push
mov
popa
push
call
dec
es
or
in
or
loop
mov
sahf
pushf
add
fcomp
pop
add
dec
mov
repnz
repz
cmc
call
repnz
repz
and
or
in
or
push
push
mov
popa
push
call
dec
es
or
in
or
loop
mov
sahf
loop
mov
sahf
movs
cmp
sahf
sbb
pop
loope
loop
mov
lock
repz
fisub
jg
stos
or
pop
or
pop
pop
and
fwait
out
dec
sahf
xchg
lods
int3
neg
call
or
pop
cmp
popf
(bad)
call
mov
sbb
imul
pop
pop
xor
sahf
sbb
jp
sahf
sbb
lods
mov
sbb
rcl
fisubr
dec
pop
sbb
lods
les
pop
push
pop
jbe
out
sahf
ja
rep
sub
sahf
ja
data16
ja
data16
ja
data16
jne
or
sbb
call
or
sbb
call
or
mov
sahf
ja
data16
cmc
stos
add
mov
sub
jbe
in
sahf
and
or
popf
call
cmc
repnz
pop
call
or
xchg
ins
mov
jne
dec
cmc
sub
sahf
sbb
jge
jae
pop
retf
sbb
call
and
sbb
mov
repz
repz
jne
mov
inc
pop
call
or
sbb
or
cmc
addr16
sub
sahf
int
sub
or
sbb
sahf
sbb
pop
test
xor
jo
pop
pop
hlt
sbb
cwde
dec
sahf
ja
data16
cmc
out
sahf
sbb
call
loop
loop
data16
ja
sub
or
repnz
sahf
dec
add
sbb
sbb
sahf
sbb
call
push
nop
sbb
lods
call
sahf
sbb
call
pop
jbe
out
sahf
ja
data16
ja
sbb
adc
or
fstp
lds
pop
pop
clc
imul
int
mov
ins
pop
fimul
xchg
sahf
adc
cdq
js
sahf
sbb
jmp
hlt
and
sbb
call
or
and
or
mov
adc
sbb
call
or
xchg
sbb
pop
dec
sahf
sbb
call
dec
sahf
loop
sub
in
stc
pop
repz
cwde
add
popa
loop
hlt
lahf
in
retf
div
xor
loop
loopne
loop
in
stc
pop
repz
cmc
adc
aam
loop
pop
popa
test
icebp
popa
loop
sbb
pop
adc
sbb
adc
cmp
mov
in
sahf
adc
js
xchg
ins
in
arpl
pop
daa
sbb
adc
or
loop
cdq
push
loopne
repz
int
adc
loop
mov
pop
repz
leave
adc
shl
xor
lahf
xchg
ins
call
sbb
adc
mov
pop
repz
xor
popa
loop
data16
ja
rep
pop
dec
dec
sahf
cmc
inc
add
adc
or
and
sbb
out
or
mov
dec
sub
lea
ror
sahf
int
sub
or
and
jns
dec
add
jne
pop
push
push
and
add
xchg
out
or
loop
sub
in
sti
pop
repz
hlt
xchg
or
in
retf
aas
sbb
lods
add
cwde
(bad)
or
sbb
or
hlt
mov
sahf
sbb
call
add
push
call
or
jmp
popa
xchg
das
in
sbb
or
pop
cld
test
in
repz
pushf
pop
fs
call
dec
sahf
imul
fwait
sub
fdiv
fwait
in
jne
sahf
imul
dec
sahf
imul
dec
sahf
imul
dec
sahf
imul
dec
sahf
imul
dec
sahf
adc
cwde
sbb
popf
sbb
(bad)
in
sahf
xchg
ins
hlt
pusha
loop
aaa
fwait
popa
dec
dec
sahf
imul
dec
sahf
imul
dec
sahf
push
clc
or
push
call
repz
loop
sbb
and
sahf
movs
lds
sahf
sbb
xor
popa
loop
retf
sbb
loop
(bad)
cmp
adc
mov
pop
repz
cmc
data16
loopne
repz
fisubr
sbb
call
test
pop
or
sbb
pop
repz
loop
in
pop
call
or
mov
call
data16
jne
aam
sbb
jecxz
sahf
loop
in
pop
call
or
jmp
or
xchg
adc
sbb
repz
xchg
ins
stc
arpl
pop
retf
adc
xor
test
ins
xchg
sahf
sbb
call
repz
loop
rep
cdq
dec
dec
sahf
cmc
outs
push
sahf
sbb
pop
repz
and
or
in
hlt
fwait
outs
cmc
data16
jne
in
fcomp
pop
repz
push
sahf
popa
loop
enter
repz
sbb
or
xor
ja
in
pop
call
lods
fcomp
call
or
fwait
aad
sahf
jmp
popa
xchg
das
sbb
dec
mov
pop
repz
jne
aam
sbb
pop
repz
cmc
push
sahf
sbb
pop
or
sbb
pop
repz
loop
adc
pop
call
or
mov
call
data16
jne
aam
sbb
loop
sahf
loop
adc
pop
call
or
jmp
or
nop
gs
push
loop
mov
sahf
adc
cmp
sub
pop
call
push
sahf
sbb
test
jbe
loope
sahf
hlt
sub
sahf
sbb
pop
repz
not
add
cwde
call
mov
and
jo
and
jb
ja
data16
jne
fcmovnu
sbb
loope
sahf
loop
adc
pop
call
or
lahf
in
or
popf
ins
or
loop
or
popa
loop
sbb
movs
popa
hlt
mov
popa
retf
adc
mov
repz
dec
and
pop
call
repz
dec
add
pop
or
call
repz
dec
pop
cmp
mov
loopne
sahf
popf
push
or
jmp
or
or
pop
call
add
push
mov
loope
sahf
hlt
loope
sahf
sbb
call
repz
loop
sbb
dec
and
pop
call
repz
dec
add
xchg
sbb
xor
sbb
pop
repz
dec
pop
cmp
mov
or
popf
push
or
jmp
or
and
jmp
sub
sahf
hlt
dec
setle
popa
retf
adc
mov
repz
dec
sub
call
add
xchg
sbb
xor
sbb
pop
repz
dec
pop
cmp
xor
or
popf
push
or
jmp
or
and
call
add
sbb
test
or
hlt
ror
sahf
sbb
pop
repz
and
or
in
hlt
popf
imul
fs
stos
or
sbb
call
dec
sahf
cmc
cli
add
sbb
call
repz
sbb
ins
repz
loop
xchg
sbb
repz
loop
cmp
sbb
xor
hlt
sbb
call
add
sbb
test
or
hlt
sub
mov
pop
repz
xchg
ins
repz
loop
xor
xor
test
ins
or
adc
mov
or
cwde
sbb
in
adc
or
fprem
fs
sbb
jmp
rep
cmp
stos
or
loop
repz
push
call
or
sbb
call
dec
sahf
cmc
mov
sahf
sbb
call
repz
sbb
ins
repnz
loop
xchg
sbb
repz
loop
cmp
sbb
xor
hlt
sbb
call
or
sub
sahf
hlt
in
sahf
sbb
pop
repz
nop
gs
push
loop
mov
adc
pusha
jecxz
repz
fistp
hlt
pop
fisub
lahf
loop
repz
nop
ins
stc
arpl
pop
pop
div
xor
nop
ins
stc
arpl
pop
pop
jbe
loope
sahf
sahf
sub
mov
jne
popa
xchg
ins
in
loop
test
call
data16
ja
fs
sbb
ja
sahf
cmc
jle
sahf
sbb
pop
repz
pop
or
pop
mov
jbe
in
or
popf
aad
sub
or
pop
add
aad
dec
push
and
or
in
iret
hlt
sbb
pop
repz
dec
cmp
call
repz
cmc
xor
sahf
sbb
sbb
popa
loop
pushfw
jne
in
fcomp
pop
repz
in
or
nop
gs
arpl
pop
(bad)
push
loop
mov
ja
or
dec
mov
repz
dec
pop
mov
jbe
in
or
ja
sbb
dec
or
in
or
loop
clc
pusha
loop
in
sbb
or
test
repnz
loop
sbb
stos
pop
dec
dec
sahf
cmc
push
or
sbb
or
call
pushf
ficomp
call
repz
xchg
adc
jns
ins
call
sbb
adc
pushfw
ja
data16
loop
clc
pusha
loop
in
sbb
or
adc
fcomp
push
cmc
pop
fiadd
icebp
popa
loop
pop
test
clc
pusha
loop
in
sbb
or
sbb
pop
repz
ja
fs
stos
or
test
repnz
loop
aad
sbb
push
repz
cmc
call
test
call
hlt
pop
fiadd
pusha
sub
fs
stos
or
dec
pop
dec
sahf
jne
or
popf
add
pop
add
loopne
fistp
call
or
cli
popa
mov
pop
repz
fiadd
sbb
jmp
pop
jns
loop
add
(bad)
in
or
inc
mov
push
(bad)
or
xchg
or
pop
leave
xchg
popf
add
jl
mov
xchg
das
xchg
adc
or
sbb
call
sbb
adc
sahf
sbb
dec
dec
sahf
push
jne
sahf
cmc
jbe
sahf
sbb
popa
dec
xchg
das
aaa
stos
cmc
jne
sahf
push
dec
dec
sahf
cmc
push
sahf
sbb
stos
or
push
pop
cmp
jb
or
frstor
add
xchg
loop
adc
pop
call
or
in
jmp
pop
sbb
pop
fst
or
jns
loop
and
pop
call
or
sub
xchg
fistp
enter
add
call
dec
sahf
push
pop
dec
sahf
sbb
add
call
dec
sahf
push
pop
dec
sahf
sbb
sbb
ins
lods
fcomp
call
sti
jns
lods
cld
pop
fcmovu
xlat
movs
sub
xchg
fistp
enter
sar
push
mov
arpl
mov
sub
xchg
fistp
int3
xchg
fistp
call
cdq
ficomp
call
cmp
sbb
out
stos
or
sub
xchg
fistp
les
sbb
adc
(bad)
pushf
push
popa
push
pop
jns
dec
mov
or
sbb
cwde
pop
call
lds
or
cmp
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
pop
leave
cmc
push
or
sbb
retf
ja
test
mov
or
fchs
test
loope
int3
jmp
dec
push
and
js
div
dec
xchg
mov
in
(bad)
cmp
jne
scas
add
sbb
int3
jmp
data16
cmc
cs
sbb
call
repz
inc
and
(bad)
pushf
add
mov
call
xor
test
sbb
int3
repz
call
add
fst
popa
loop
mov
sti
inc
nop
mov
add
xchg
xchg
sub
retf
mov
sbb
test
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
(bad)
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
call
clc
fcomp
.byte
.byte
