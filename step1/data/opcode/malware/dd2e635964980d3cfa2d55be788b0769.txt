mov
adc
rcl
fwait
aaa
xchg
xor
cmp
je
aas
sbb
sbb
and
hlt
shl
xlat
adc
addr16
into
cmc
aaa
xor
ins
add
stc
mov
xchg
mov
lds
sbb
mov
iret
jmp
adc
sub
add
mov
mov
mov
sbb
and
jbe
idiv
popf
mov
cmp
imul
arpl
pusha
(bad)
pop
popf
pop
xchg
pop
(bad)
shl
bound
fmul
dec
xchg
xor
push
into
repz
bound
aad
fistp
mov
xchg
xchg
pop
sbb
sbb
push
xchg
ss
aaa
xchg
aas
sbb
(bad)
enter
mov
sub
iret
sbb
mov
fwait
mov
enter
aaa
xchg
xor
cmp
mov
mov
lds
pop
cmp
aaa
xor
sub
fistp
xor
add
jb
mov
and
popa
les
and
or
jne
mov
popf
les
mov
popf
mov
xchg
imul
xor
outs
push
push
cmp
mov
cmp
fistp
hlt
cdq
mov
jnp
arpl
ins
mov
aas
push
cmp
mov
lahf
iret
leave
mov
push
cmp
mov
ins
iret
bound
push
fucomi
bound
pop
lea
arpl
ins
iret
bound
xor
xchg
aaa
xchg
xor
cmp
pop
loopne
xchg
mov
aas
call
xor
xor
data16
xor
mul
aaa
and
fdiv
int
cmps
and
dec
xchg
xor
repz
iret
test
and
fistp
hlt
cdq
(bad)
xchg
xor
ins
sbb
shl
or
popf
inc
xchg
mov
xor
enter
ss
xor
aaa
xchg
xor
enter
jne
pop
pop
daa
shl
int
sbb
push
fild
push
jne
dec
or
push
adc
aaa
nop
jmp
cdq
pop
xchg
pop
popf
pop
mov
adc
jne
pop
mov
sbb
xor
jne
iret
test
and
enter
jne
mov
popf
(bad)
inc
popf
aaa
adc
test
pop
mov
scas
dec
xchg
xor
xchg
popf
aaa
xchg
xor
(bad)
mov
pushf
aaa
jnp
jmp
mov
shl
and
bound
xchg
pop
sahf
pop
xchg
pop
popf
pop
xchg
xor
ja
fsub
xchg
xor
adc
aaa
jo
xor
int3
ins
inc
cdq
push
push
fcmovnb
pop
xchg
mov
bound
cmp
ss
mov
bound
fadd
xchg
xor
fild
popf
aaa
mov
mov
sbb
imul
ss
xor
repz
or
jmp
fadd
xor
and
enter
test
gs
adc
xchg
popa
les
adc
xchg
enter
jne
addr16
jne
addr16
xor
or
pop
popf
pop
xchg
iret
call
fild
dec
popf
aaa
sbb
sbb
not
popf
aaa
call
jbe
inc
test
out
bound
pop
popf
enter
inc
outs
fcomp
xchg
xor
ins
inc
popa
fisttp
dec
popf
aaa
call
adc
ss
and
fcomp
mov
lods
not
outs
ret
(bad)
push
gs
ret
mov
enter
not
jb
pusha
cmc
cs
xor
cmp
(bad)
dec
popf
aaa
sbb
xchg
shl
lods
idiv
bound
iret
call
pop
xchg
iret
call
(bad)
dec
popf
aaa
sbb
bound
fdivr
shl
lods
idiv
lods
not
fistp
aaa
xchg
outs
ret
(bad)
push
gs
adc
mov
inc
lahf
neg
iret
les
push
sbb
mov
jg
clc
(bad)
sbb
mov
out
fbstp
adc
aaa
adc
aaa
js
lods
in
sbb
mov
jae
clc
rcr
jne
mov
out
fbstp
mov
jne
imul
xor
stos
loopne
sar
fnsave
push
pop
inc
or
ret
sbb
push
(bad)
(bad)
call
fsubr
xor
mov
iret
fnsave
push
pop
inc
and
fmul
sbb
mov
shl
fs
(bad)
int3
xchg
mov
iret
(bad)
enter
aaa
xchg
outs
ret
ins
pop
repz
cdq
aaa
xchg
xor
out
popf
lds
inc
lahf
mov
popa
enter
jp
push
sbb
outs
iret
arpl
(bad)
das
popf
aaa
ins
xor
push
jb
mov
fnsave
push
pop
inc
call
aaa
js
adc
js
adc
mov
mov
cwde
ss
iret
bound
out
loope
sbb
adc
mov
iret
arpl
sbb
mov
push
mov
ss
iret
bound
push
mov
aaa
ins
iret
ret
stc
pop
bound
aad
fisttp
ins
xchg
lock
int3
sub
fisub
jb
mov
imul
arpl
jbe
jnp
in
xchg
mov
rcl
popa
adc
ficomp
icebp
sub
mov
adc
jmp
fwait
neg
retf
sbb
mov
jg
fcom
sbb
push
(bad)
mov
into
popa
les
popa
adc
rcr
cmc
mov
add
mov
jg
xchg
xor
dec
fwait
mov
icebp
and
mov
imul
push
mov
adc
cld
mov
dec
dec
dec
enter
jne
mov
test
sbb
mov
addr16
mov
enter
sbb
push
fild
inc
lea
ja
and
mov
pushf
cmc
sbb
enter
jne
mov
fdivr
pushf
mov
lds
jge
cmp
inc
cwde
push
push
jo
cs
inc
dec
jae
fmul
sbb
mov
imul
push
push
outs
ret
ins
pop
repz
retf
pusha
sbb
mov
push
adc
(bad)
outs
xchg
xor
out
fbstp
ins
inc
xchg
pop
int
fbstp
(bad)
retf
adc
outs
mov
cmc
imul
pusha
enter
dec
outs
ja
popa
jnp
pusha
enter
adc
outs
push
hlt
(bad)
mov
retf
cmp
jo
mov
gs
jnp
call
pop
xchg
pop
popf
pop
ins
das
popf
aaa
shl
fwait
pop
popf
pop
xchg
fsub
xchg
xor
mov
cmp
inc
mov
mov
ret
stc
pop
bound
aad
lds
inc
fwait
(bad)
out
xchg
adc
adc
adc
popf
inc
cwde
xchg
add
iret
into
aas
sbb
enter
das
ins
arpl
mov
sbb
push
sbb
mov
xchg
xor
imul
aad
(bad)
inc
xchg
mov
cs
jae
enter
neg
adc
pop
popf
fild
inc
popf
aaa
push
jne
addr16
and
xchg
fadd
inc
xchg
xor
adc
pop
adc
call
fistp
pop
sub
xor
xor
jb
pusha
jne
loop
popf
mov
dec
aas
add
sbb
ds
inc
stos
mov
ret
pop
cmp
xor
daa
ins
and
aaa
xchg
xor
shl
sbb
lods
neg
mov
call
fcomp
bound
fcomip
inc
xchg
xor
push
gs
sub
popf
ss
fcomp
xchg
xor
popa
les
sbb
add
aaa
adc
(bad)
enter
xor
adc
popf
xchg
jmp
fbstp
stos
jne
cmp
stc
pushf
aaa
xchg
mov
sub
mov
ins
xchg
xor
sbb
adc
adc
popf
inc
mov
int
mov
ret
jmp
xchg
xor
adc
xchg
fbstp
xchg
mov
inc
fidiv
popf
pop
ins
iret
popf
aaa
push
mov
enter
enter
xchg
loopne
popf
pop
xchg
pop
outs
aad
xor
mov
iret
arpl
ret
fdivr
repz
or
call
xchg
shl
popf
(bad)
xor
aaa
xchg
(bad)
jle
push
in
leave
ins
mov
int
(bad)
cmp
ja
pusha
push
(bad)
cmp
xchg
mov
xor
aaa
pushf
mov
ss
xor
push
imul
or
test
aaa
ins
iret
popf
aaa
out
adc
xchg
call
loope
shl
push
jb
or
inc
xchg
mov
dec
daa
jb
aaa
xor
xchg
mov
mov
aaa
jnp
call
out
mov
neg
xlat
xchg
xor
jb
mov
sub
mov
call
mov
xchg
xor
sbb
mov
lods
iret
retf
jne
mov
in
aaa
xchg
cmp
enter
shl
cmc
div
popf
mov
stos
iret
mov
xchg
xor
ds
inc
mov
mov
ins
mov
(bad)
leave
ins
pusha
cmp
xor
sbb
bound
sbb
ds
inc
mov
xchg
dec
sub
iret
bound
xchg
mov
inc
enter
add
call
push
or
xchg
fbstp
xchg
inc
xchg
xchg
setae
aaa
ret
mov
bound
mov
cmp
sbb
ins
mov
stos
xor
aaa
sbb
lods
out
sbb
ret
stc
pop
bound
aad
fistp
adc
imul
mov
push
mov
retf
xchg
mov
lods
xor
xchg
in
out
pop
jb
xor
mov
stos
mov
mov
adc
lea
mov
sahf
ss
add
aas
scas
add
popa
aaa
sbb
mov
sti
mov
mov
xchg
xor
repz
mov
and
xor
jne
xor
fs
bound
push
inc
xchg
mov
int3
popf
mov
push
mov
retf
xchg
inc
leave
xchg
(bad)
nop
fbstp
xor
xchg
fcmovnbe
mov
shl
retf
xchg
add
mov
gs
imul
push
pusha
inc
lahf
fadd
xor
or
dec
cdq
mov
int3
popf
mov
inc
loop
xchg
jbe
jb
mov
pop
xchg
aas
sbb
ins
iret
bound
int3
popf
inc
pushf
iret
call
ja
fdivr
xchg
xor
sbb
mov
sbb
div
stc
xor
xor
xor
aaa
sti
xor
test
jecxz
popf
mov
stc
xor
aaa
ret
fcom
inc
xchg
xor
jb
mov
fnsave
push
pop
pop
xchg
mov
bound
iret
call
aaa
xchg
pop
popf
mov
xchg
pop
ins
aad
xor
imul
inc
xchg
xor
int3
setge
ins
inc
fild
outs
(bad)
(bad)
push
gs
sub
pop
xchg
xor
popa
les
adc
mov
mov
enter
pop
ja
fbstp
jnp
lock
xchg
mov
bound
ins
pusha
jne
push
lock
mov
cmp
out
sbb
div
jnp
out
aaa
xchg
fmul
inc
xchg
xor
pop
iret
arpl
adc
xor
push
hlt
(bad)
leave
ins
pusha
jne
outs
iret
bound
xchg
fbstp
xchg
inc
push
mov
push
fwait
aaa
xchg
mov
bound
lods
ds
pusha
push
(bad)
addr16
(bad)
int3
xchg
mul
adc
dec
iret
arpl
ret
pop
std
aam
xor
mov
iret
arpl
ret
mov
popf
aaa
xchg
xor
outs
mov
arpl
xor
ins
fwait
xor
leave
ins
pusha
cmp
xor
sbb
bound
mov
lods
out
sbb
push
dec
outs
xor
aaa
sti
pusha
cmp
imul
fbstp
hlt
xchg
mov
imul
enter
enter
arpl
jb
mov
jl
aaa
xchg
mov
bound
lods
ds
pusha
push
(bad)
addr16
(bad)
int3
xchg
neg
sti
mov
mov
ins
xor
aaa
adc
popf
cmp
test
pop
int
fbstp
push
mov
enter
fisttp
(bad)
enter
mov
and
arpl
sbb
push
sbb
adc
pushf
xchg
test
or
aaa
pushf
mov
xor
push
and
jo
mov
ins
pusha
cmc
xor
fbld
hlt
xchg
cmp
pop
xor
xor
xchg
daa
iret
arpl
xchg
mov
pop
daa
jb
aaa
pushf
mov
ss
xor
shl
lahf
ins
into
bound
inc
rcr
aaa
sti
pusha
cmp
shr
lahf
or
jmp
stc
jno
popf
mov
ins
addr16
gs
bound
xor
sub
xchg
xor
aad
xor
xor
fistp
hlt
xchg
or
aaa
out
div
sti
mov
xchg
mov
bound
shr
mov
cmp
inc
xchg
lock
test
ins
xor
pop
ds
aaa
sti
pusha
cmp
ret
push
repz
or
jmp
mov
popf
mov
ins
addr16
iretw
bound
xor
sub
xchg
xor
aaa
xchg
pop
pushf
pop
xor
fbstp
sti
pusha
cmp
ret
push
repz
or
jmp
mov
popf
mov
ins
addr16
iretw
bound
xor
sub
xchg
xor
aad
xor
xor
(bad)
lds
adc
xchg
or
aaa
out
pop
mov
iret
arpl
xchg
xor
mov
jb
pop
ret
nop
fdiv
jnp
push
cmp
inc
xchg
lock
test
ins
xor
pop
jmp
fbstp
sti
pusha
cmp
ret
ins
iret
push
repz
or
jmp
mov
popf
mov
ins
addr16
addr16
bound
xor
pop
jecxz
fbstp
push
lea
ins
iret
retf
les
adc
xchg
or
aaa
out
pop
mov
iret
arpl
xchg
xor
add
iret
arpl
xchg
inc
mov
xchg
inc
sub
xor
mov
iret
arpl
ret
fcom
iret
(bad)
fadd
jb
xor
xchg
xchg
stc
adc
adc
xchg
call
pusha
enter
fidivr
call
adc
ret
mov
bound
or
iret
mov
xchg
mov
xor
and
mov
ins
pusha
push
(bad)
addr16
out
mov
dec
popa
aaa
pushf
mov
xor
iret
arpl
xchg
mov
pop
mov
loopne
leave
ins
xor
mov
iret
arpl
xchg
aas
adc
pusha
mov
pop
mov
iret
arpl
test
pop
mov
iret
arpl
xchg
xor
enter
mov
ins
pusha
push
mov
iret
arpl
ret
mov
sbb
mov
popf
aaa
push
mov
enter
pop
add
fbstp
sbb
int
stos
iret
mov
xchg
xor
ds
aas
sbb
popf
mov
ins
pusha
push
mov
iret
arpl
ret
mov
popf
aaa
xchg
mov
lods
out
sbb
push
dec
outs
xor
aaa
push
mov
enter
mov
ins
pusha
push
(bad)
movs
mov
out
je
nop
xor
leave
ins
pusha
push
mov
iret
arpl
ret
mov
adc
outs
mov
pop
mov
int3
popf
cmp
aad
aaa
xchg
mov
sbb
push
mov
bound
mov
enter
mov
sbb
ds
aas
sbb
xor
aaa
rcl
and
arpl
sbb
push
xchg
arpl
arpl
xchg
iret
sub
ins
into
bound
nop
fdiv
push
mov
enter
(bad)
pop
popf
aaa
adc
xchg
mov
fsub
ins
xor
xor
pop
xchg
xor
mov
test
ins
iret
adc
ret
pop
clc
aad
xor
mov
iret
arpl
ret
fsub
pop
xchg
xor
xrelease
mov
iret
arpl
xchg
xor
mov
iret
arpl
sbb
adc
ret
mov
bound
xor
aaa
xchg
ret
cmp
ins
mov
daa
sbb
and
xchg
xor
fild
pusha
sbb
bound
mov
push
neg
push
xchg
cmp
arpl
xchg
mov
bound
mov
jne
mov
bound
or
scas
xor
retf
adc
xchg
adc
mov
xor
aaa
iret
arpl
ret
mov
bound
or
(bad)
mov
out
xchg
(bad)
jle
push
mov
pop
mov
int3
popf
cmp
ss
aaa
xchg
mov
fwait
ins
into
bound
jp
pushf
aaa
xchg
pop
popf
fistp
mov
sbb
into
bound
jecxz
arpl
xchg
xor
mov
iret
arpl
sbb
adc
ret
mov
bound
xor
aaa
xchg
ret
cmp
ins
mov
daa
sbb
and
xchg
xor
lahf
ins
into
bound
punpckldq
mov
movs
es
xor
xchg
xor
xchg
sbb
arpl
xchg
mov
bound
inc
jle
xchg
mov
bound
or
scas
xor
retf
call
aaa
adc
popf
cmp
and
ins
into
bound
xor
addr16
arpl
sbb
int
stos
iret
retf
jne
pop
inc
popf
aaa
rcl
retf
iret
arpl
sbb
push
dec
outs
xor
aaa
cmc
mov
push
ins
into
bound
pushf
mov
aaa
xchg
xor
mov
iret
arpl
xchg
aas
sbb
xchg
xor
retf
bound
jnp
outs
enter
aas
sbb
fidivr
ins
mov
div
imul
sbb
popf
aaa
push
mov
enter
aaa
xchg
xor
xor
enter
mov
iret
arpl
ret
pop
rcl
xor
mov
iret
arpl
ret
fmul
pop
xchg
xor
xrelease
pop
mov
ins
mov
enter
ss
inc
fs
ins
iret
sub
int
mov
ins
pusha
push
mov
iret
arpl
push
mov
retf
bound
sti
div
xchg
mov
cmp
xor
mov
iret
arpl
ret
pop
vpsrlw
adc
ret
fsubr
xchg
xor
repz
mov
mov
jmp
enter
mov
sub
jle
push
fs
leave
ins
mov
(bad)
leave
ins
mov
bound
push
pushf
(bad)
leave
ins
aas
pop
xor
bound
pusha
push
pop
ins
xchg
mov
ins
pusha
push
pop
ins
xchg
enter
leave
ins
mov
bound
push
fsub
ins
aas
pop
jmp
iret
bound
xor
xor
pusha
enter
mov
push
mov
bound
add
fwait
mov
out
into
bound
out
push
mov
iret
arpl
ret
mov
and
shl
fwait
ins
into
bound
ins
into
bound
out
push
mov
iret
arpl
ret
mov
push
mov
iret
arpl
ret
mov
push
mov
iret
arpl
ret
mov
and
shl
lahf
ins
into
bound
ins
into
bound
add
fld
imul
aad
enter
jne
pop
pop
daa
shl
stc
xchg
xchg
xor
adc
fadd
push
jnp
fcom
rcr
sbb
mov
(bad)
rcl
dec
jae
loopne
push
jne
aaa
xchg
xor
add
xor
outs
xchg
xor
aaa
adc
cdq
(bad)
(bad)
(bad)
enter
adc
popf
inc
dec
(bad)
aaa
fs
jns
(bad)
in
push
dec
dec
mov
popa
enter
fdiv
xor
hlt
sbb
lock
call
sbb
dec
scas
shl
fstp
lock
int3
(bad)
enter
imul
push
ds
xchg
xor
aaa
(bad)
mov
and
mov
add
push
pop
sbb
aaa
stc
xor
sbb
pop
popf
(bad)
push
popf
aaa
sbb
retf
fistp
popf
aaa
sub
mov
xchg
(bad)
jp
(bad)
int3
adc
int3
outs
push
hlt
(bad)
mov
into
popa
sbb
mov
dec
xchg
bound
clc
mov
sbb
bound
out
fbstp
sbb
push
adc
mov
xchg
xor
sbb
mov
or
popf
aaa
adc
popf
mov
cmp
xor
fdiv
xchg
xor
cmp
test
popf
aaa
sbb
fstp
shl
xchg
adc
mov
aaa
xchg
or
xchg
mov
ins
adc
cmps
daa
jb
mov
sub
jbe
jo
pop
xchg
xor
jne
add
lods
adc
xlat
xchg
jo
jb
xor
(bad)
xor
test
xor
rcl
popf
aaa
gs
pushf
inc
sahf
xchg
jno
shl
pushf
xor
bound
stos
scas
fdiv
adc
mov
xchg
xor
xor
jbe
fstp
xor
test
aaa
gs
lea
add
aad
popf
aaa
sub
xchg
aaa
xchg
(bad)
jl
(bad)
rcl
cmp
lea
xor
or
enter
xor
inc
call
xor
loopne
popf
aaa
adc
cdq
ficomp
xor
xchg
inc
xchg
add
popa
xor
test
xor
mov
shl
aas
ja
jno
fidiv
(bad)
enter
test
xor
push
xor
test
xor
xchg
neg
xor
daa
into
(bad)
enter
test
xor
fimul
xor
call
icebp
sbb
aaa
xchg
neg
xor
sbb
(bad)
enter
adc
bound
stos
scas
fdiv
sbb
lods
call
icebp
sbb
aaa
rcr
xchg
ss
xor
push
jno
ss
or
jbe
mov
pop
mov
sub
jbe
jo
ficom
lods
fdiv
adc
lahf
ss
or
jbe
fld
xchg
xor
or
ss
cmp
aaa
xchg
xor
push
jno
ss
or
jbe
fldenv
aaa
xchg
xor
out
fbstp
adc
lahf
fidivr
xor
aaa
xchg
(bad)
jl
(bad)
fcom
adc
sahf
fiadd
xor
call
sahf
sub
jbe
adc
shl
fistp
icebp
adc
aad
popf
xchg
ret
nop
fbstp
pushf
xchg
ds
dec
leave
mov
cmp
xor
cmps
sub
or
xor
clc
xchg
xor
mov
xchg
aaa
adc
fstp
movs
iret
cwde
inc
daa
jb
fdivr
pushf
xor
adc
stos
scas
fdiv
adc
int3
adc
scas
fdiv
rcr
nop
push
push
fld
ss
xor
mov
xor
imul
scas
fdiv
sar
sbb
xchg
xor
aaa
xor
jne
mov
fadd
sbb
xchg
adc
xor
xor
xchg
fbstp
adc
call
(bad)
mov
cmp
mov
loopne
rol
enter
ja
mov
(bad)
sbb
mov
fs
call
jbe
xor
mov
je
jbe
xor
and
dec
push
out
sbb
jno
xor
lahf
fsubr
inc
mov
jbe
mov
call
rcr
xchg
xchg
jns
shl
xchg
adc
jne
mov
(bad)
cwde
inc
sahf
mov
rcl
or
adc
fild
and
xor
jbe
iret
cwde
cmp
jo
xchg
fwait
mov
xchg
cmps
shl
out
in
adc
loop
xchg
xor
adc
fild
and
xor
jne
iret
cwde
cmp
jo
xchg
stos
scas
fdiv
stos
xor
out
in
ins
xor
adc
mov
jo
push
push
jo
xor
icebp
outs
adc
repz
int
les
and
shl
retf
sbb
bound
out
fbstp
sti
cmp
jne
fcom
push
xchg
xor
sti
and
jne
addr16
repz
aaa
sti
sbb
jne
addr16
repz
aaa
sub
iret
aaa
xchg
(bad)
jnp
(bad)
enter
or
jne
repz
aaa
sti
jnp
jne
addr16
repz
aaa
sti
outs
daa
jne
addr16
repz
aaa
int3
outs
push
hlt
(bad)
mov
into
popa
les
adc
xchg
call
jmp
mov
jb
mov
xchg
xchg
neg
fisttp
call
push
push
jg
adc
mov
imul
enter
push
mov
xchg
mov
retf
xchg
iret
cwde
inc
daa
jb
mov
loopne
(bad)
aaa
rcl
or
popf
lock
call
pop
jb
xor
inc
sub
mov
out
fbstp
push
jne
xor
push
mov
aaa
xchg
neg
adc
and
mov
xchg
xor
ffreep
pop
popf
aaa
xchg
xor
jb
pusha
bound
lods
fdiv
adc
jge
xchg
xor
jb
pusha
div
push
jne
addr16
xor
aaa
stc
xor
xor
fist
push
popf
aaa
push
jne
ins
inc
cmp
xchg
fcomp
push
xchg
xor
out
fbstp
stc
xor
xor
pop
xchg
pop
cdq
pop
xchg
iret
call
aaa
xchg
mov
(bad)
enter
out
jne
int
popf
enter
jne
mov
call
ins
and
push
jb
fistp
aaa
xchg
outs
ret
ins
pop
repz
jno
push
jne
inc
ret
mov
mov
mov
ins
mov
imul
mov
jnp
cdq
pop
xchg
pop
pushf
mov
(bad)
fmul
enter
aaa
push
jne
addr16
iret
bound
iret
mov
or
popf
mov
sub
retf
sbb
mov
(bad)
mov
retf
mov
mov
xor
jne
iret
call
and
ins
pop
bound
aad
fistp
inc
xchg
mov
out
fbstp
mov
push
mov
inc
cmps
aas
sub
xor
inc
mov
xor
inc
(bad)
aas
sub
xor
inc
cmp
jae
xor
enter
cmp
cmp
daa
push
je
xor
and
mov
ins
xor
adc
push
movs
cmc
pushf
mov
aaa
xchg
xor
test
pop
cmp
mov
addr16
xor
cmc
out
adc
adc
sahf
cmp
inc
repz
pushf
xchg
aaa
xchg
inc
ret
cmp
aas
adc
xchg
pop
and
pusha
jne
into
xor
pop
inc
and
and
(bad)
int
(bad)
ins
popf
aaa
sbb
mov
iret
push
bound
xor
jns
mov
nop
jne
mov
xor
jb
mov
sahf
xor
mov
cwde
ss
xor
jb
pop
pop
and
or
in
jb
aaa
out
sbb
add
enter
jne
mov
or
js
or
enter
mov
xor
mov
xor
or
xor
add
cdq
cmp
inc
(bad)
popf
aaa
out
adc
adc
cwde
mov
ss
xor
and
arpl
mov
xor
xor
ss
xor
inc
idiv
fwait
xor
adc
lahf
mov
ss
inc
ret
mov
xor
jno
enter
aas
sub
xchg
or
jmp
aaa
xchg
inc
mov
pop
iret
push
bound
xor
jns
mov
xchg
call
fmul
sbb
mov
imul
mov
xchg
xor
gs
aad
scas
ss
inc
fidivr
sbb
or
enter
mov
xor
mov
xor
jmp
aaa
xchg
inc
call
sub
enter
(bad)
and
arpl
ficomp
aaa
xchg
xor
mov
xor
sub
push
(bad)
mov
into
popa
(bad)
iret
cwde
inc
daa
jb
mov
mov
or
aaa
out
fidiv
xchg
inc
ins
mov
fcomp
jno
jne
sbb
popf
aaa
stos
imul
out
jp
popf
aaa
xchg
mov
cmp
shl
xchg
add
mov
fnsave
mov
call
(bad)
enter
inc
daa
jb
cmp
xor
ficom
mov
retf
xchg
fist
retf
sbb
mov
outs
xchg
cdq
cmps
shl
movs
jb
inc
jne
mov
cdq
sub
xor
mov
xchg
mov
pushf
in
mov
jmp
xlat
cs
mov
nop
sub
push
int3
xchg
inc
push
mov
iret
adc
xchg
jmp
xchg
loopne
fist
xor
ficomp
je
sbb
mov
daa
jb
mov
iret
mov
push
xor
loopne
fist
aaa
je
xchg
or
into
popa
pushf
xchg
daa
push
rcr
mov
xor
outs
iret
bound
stc
pop
bound
aad
imul
popf
aaa
shl
ins
leave
(bad)
enter
call
and
aaa
scas
xor
icebp
push
rol
ins
xor
pusha
fbld
xchg
mov
inc
daa
jb
xor
lea
ins
iret
popf
inc
cmp
mov
fbld
adc
push
das
jb
ss
sbb
enter
cmp
iret
sbb
jne
xor
xor
push
ret
jb
ins
mov
bound
adc
sahf
or
jne
popa
jne
leave
xor
enter
mov
pushf
xchg
les
pop
pop
adc
sahf
out
es
popa
pop
aad
mov
(bad)
enter
scas
shl
jne
retf
mov
ins
mov
fnsave
adc
pushf
cmp
iret
div
lea
fbstp
xchg
aas
sbb
iret
(bad)
enter
add
icebp
jg
adc
pop
add
aaa
pushf
mov
xor
ret
jb
ins
icebp
jg
sbb
or
mov
ins
iret
cwde
inc
daa
jb
mov
rol
ins
xor
aaa
jnp
fs
out
dec
iret
(bad)
enter
jne
mov
bound
push
ror
aaa
shl
adc
fbld
mov
xor
xchg
retf
mov
push
(bad)
lahf
mov
ins
iret
fidiv
xchg
or
ret
jl
bound
mov
bound
les
xchg
iret
cwde
inc
daa
jb
mov
fdiv
ins
xor
xor
aaa
ins
test
ins
iret
bound
jnp
addr16
cmp
jne
ds
inc
push
xor
stos
adc
(bad)
enter
enter
fst
gs
mov
xchg
or
mov
(bad)
enter
mov
xor
mov
iret
sahf
aaa
xchg
inc
xchg
mov
xchg
xor
adc
(bad)
enter
hlt
xchg
and
(bad)
xchg
xor
sub
enter
fstp
aaa
xchg
xor
enter
enter
mov
fbld
pushf
mov
enter
xor
test
aaa
ins
test
ins
iret
jne
retf
xor
aaa
pushf
xchg
les
div
push
and
mov
bound
xor
mov
push
rcr
xor
fmulp
push
cmp
out
(bad)
enter
fsubr
aad
mov
pop
(bad)
xchg
xor
retf
xchg
cli
sbb
ret
jl
bound
ins
xor
enter
jne
mov
aam
iret
bound
out
cmc
imul
addr16
aaa
sbb
adc
nop
and
or
lods
inc
enter
dec
nop
xor
or
(bad)
enter
jmp
or
(bad)
enter
xor
mov
bound
mov
bound
mov
bound
ins
mov
bound
ins
pop
cmp
dec
out
(bad)
enter
aaa
xchg
mov
bound
push
mov
ins
inc
fidivr
mov
bound
push
in
inc
enter
aam
iret
bound
out
cmc
aaa
xchg
ss
or
jns
iret
mov
ins
icebp
ja
rcr
xchg
xor
aas
out
(bad)
enter
xor
test
aaa
pushf
xchg
les
div
push
mov
mov
iret
adc
xchg
or
aas
sub
push
rcr
cmps
shl
adc
fbld
sti
xor
add
xor
enter
cmp
push
pushf
aaa
xchg
mov
aas
xchg
aas
sbb
push
les
ins
aas
sub
scas
fstp
mov
cmp
xchg
fld
mov
fbld
sbb
ss
xor
jae
xor
mov
out
(bad)
enter
jmp
ds
enter
xor
enter
mov
xor
pop
sbb
push
fist
cs
adc
sahf
mov
xor
and
rcr
xchg
mov
aaa
out
adc
adc
cwde
mov
xor
ds
push
enter
jne
aas
sub
push
rcr
in
ins
iret
sbb
enter
xor
inc
mov
xor
fild
pop
xchg
mov
(bad)
fcom
mov
sbb
jl
bound
imul
mov
test
jns
ins
iret
out
ficom
popf
ds
and
iret
pop
aad
mov
(bad)
enter
mov
or
popf
inc
mov
xor
mov
or
popf
inc
xchg
popf
aaa
xchg
inc
xchg
mov
or
popf
inc
nop
ja
call
bound
push
dec
cmp
(bad)
aas
sub
ret
iret
sub
dec
iret
(bad)
enter
enter
into
ins
iret
push
repz
mov
aam
iret
bound
out
push
xchg
fbld
xchg
mov
(bad)
div
adc
push
fstp
jp
mov
(bad)
enter
enter
enter
ret
jl
bound
xchg
xor
inc
daa
jb
fidivr
mov
fsubr
cmp
iret
div
lea
fbstp
xchg
aas
sbb
push
imul
js
jg
into
popa
les
cmps
fnstsw
pop
push
gs
imul
enter
rcr
add
and
xchg
xor
iret
sbb
mov
sbb
mov
push
(bad)
fbstp
sub
popf
aaa
xchg
ret
cmp
pop
(bad)
fbstp
sub
popf
aaa
xchg
ret
cmp
sar
mov
sbb
mov
iret
pushf
icebp
(bad)
into
popf
fadd
arpl
xchg
mov
enter
mov
into
pushf
mov
into
mov
mov
iret
mov
jne
aaa
jp
popf
aaa
xchg
mov
pusha
or
push
mov
fmul
xchg
aas
sub
pop
aaa
xchg
xor
pop
sub
xchg
xbegin
mov
shl
mov
mov
jo
xor
jne
ss
xchg
ss
push
aad
mov
xor
cmp
int
inc
xchg
mov
jo
xor
jne
ss
xchg
ss
mul
cmp
xlat
xchg
mov
xor
xor
jb
xor
not
xor
jb
xor
jb
sbb
xor
(bad)
popf
aaa
xchg
inc
xchg
rcl
movs
inc
xchg
mov
enter
retf
loopne
pushf
aas
pop
gs
iret
(bad)
fadd
gs
or
xchg
mov
enter
mov
int3
pushf
mov
int3
call
jne
mov
pop
mov
cmp
xor
enter
jb
outs
ret
ins
pop
repz
into
popa
les
lea
cmps
mov
imul
pop
bound
xchg
xor
pop
xchg
fdiv
xchg
xor
adc
bound
or
aaa
out
adc
js
sbb
xor
stos
ss
fistp
dec
jle
ret
ins
pop
repz
xchg
pop
xchg
xor
shl
popa
les
and
shl
dec
iret
bound
(bad)
aas
push
mov
xlat
ins
iret
int
xchg
addr16
aaa
sub
jp
push
enter
mov
jge
ins
pusha
jne
xchg
xor
rcr
mov
sbb
ret
repz
retf
sbb
xor
push
fbstp
xchg
(bad)
jp
(bad)
int3
adc
stc
xor
aaa
ins
inc
xchg
pop
xchg
fsubr
arpl
gs
adc
lea
and
jl
lea
xchg
pop
popf
pop
adc
popf
aaa
stc
xor
aaa
stc
xor
aaa
xchg
xor
mov
popf
mov
out
push
dec
lahf
xor
xor
jne
mov
xor
repz
aaa
mov
xor
fisttp
popf
aaa
sbb
push
test
mov
jecxz
xchg
(bad)
jp
(bad)
les
stc
xor
dec
lahf
xor
aas
sbb
mov
push
jne
mov
arpl
inc
outs
data16
shl
popa
jnp
int3
aaa
xchg
mov
pop
mov
enter
sbb
int3
shl
div
adc
jbe
xchg
xor
aaa
sti
mov
aaa
xchg
pop
cdq
pop
xchg
pop
popf
pop
xchg
xor
(bad)
bound
leave
ins
inc
cdq
push
push
(bad)
mov
mov
lahf
pop
xchg
pop
popf
popa
jnp
iret
aaa
xchg
mov
push
jmp
or
repz
push
gs
gs
cmp
fadd
gs
xor
aaa
push
jne
addr16
xor
(bad)
jno
popf
popa
jnp
iret
aaa
xchg
data16
ret
pop
popf
aaa
xlat
adc
imul
ss
xor
hlt
(bad)
mov
retf
pop
add
or
mov
aaa
xchg
pop
cdq
pop
xchg
pop
popf
pop
xchg
xor
fbld
popa
popf
aaa
sbb
adc
xchg
enter
into
bound
add
mov
pop
popf
popa
jnp
int3
aaa
xchg
pop
popf
mov
out
bound
data16
shl
popa
jnp
int
xchg
mov
rcr
jne
mov
int3
outs
push
hlt
(bad)
mov
into
popa
les
popa
cld
lods
sahf
aam
out
jge
xchg
xor
pushf
xchg
or
cmp
ret
ror
cmp
jno
jne
fcomp
arpl
mov
enter
jg
xchg
fsubr
repz
fadd
pusha
cmc
add
popf
fisttp
hlt
xchg
je
ins
xchg
dec
jnp
(bad)
fcomp
inc
cdq
icebp
xchg
push
mov
test
xchg
dec
arpl
pop
jno
popf
fbld
popf
aaa
adc
xchg
mov
imul
mov
outs
outs
ret
ins
pop
repz
jno
shl
into
cmp
inc
lahf
neg
retf
mov
popa
mov
addr16
mov
jno
popf
fistp
arpl
fadd
pusha
cmc
add
popf
fild
arpl
jo
(bad)
out
fdivrp
push
jg
xchg
fcomp
fs
xor
mov
int3
mov
xchg
xor
imul
aad
(bad)
cmp
cmp
sbb
mov
jno
popf
mov
fcomp
mov
aam
mov
or
popf
aaa
xchg
ret
cmp
xchg
mov
daa
xchg
inc
fwait
push
push
jne
das
xchg
mov
fnsave
mov
inc
shl
out
sbb
xchg
adc
xor
pushf
jb
mov
enter
mov
fcomp
mov
iret
popf
inc
inc
mov
aam
jne
mov
pushf
xchg
xor
mov
sub
aas
sub
rcr
lea
fcomp
adc
xor
jnp
adc
mov
pop
arpl
adc
aaa
out
and
shl
jecxz
repz
jb
aas
sub
sbb
cmp
mov
cli
lock
xor
cwde
push
xor
rcr
jge
mov
pushf
xchg
aad
rcl
inc
xor
rcl
repz
jb
aas
sub
mov
iret
xor
rcl
rcr
jne
cmp
xchg
mov
sar
out
jne
mov
enter
add
popf
daa
shl
or
aaa
add
or
cmps
add
add
or
cmps
add
or
cmps
add
or
cmps
add
or
xchg
xor
aaa
add
or
cmps
add
add
or
xor
mov
or
cmps
add
or
mov
repz
cli
fist
mov
cwde
popf
scas
jo
cmps
mov
mov
or
cmps
add
or
cmps
add
or
cmps
add
or
cmps
add
or
cmps
add
or
outs
iret
popf
daa
shl
icebp
mov
sbb
aam
xor
push
add
popf
daa
shl
or
cmps
add
cmps
add
or
cmps
add
fnsave
add
or
cmps
add
dec
cmps
add
or
cmps
add
or
cmps
add
or
cmp
sbb
cmps
add
cmps
add
or
xchg
xor
cmps
add
add
fbstp
add
or
cmps
add
dec
cmps
add
or
cmps
add
or
cmps
add
or
jae
add
cmps
add
cmps
add
or
cmps
add
mov
ins
repz
bound
aad
(bad)
ins
xchg
mov
(bad)
cmp
jb
dec
cli
mov
mov
retf
xchg
popf
aaa
mov
mov
jne
neg
adc
ja
fmul
cmc
neg
(bad)
xchg
xor
xor
addr16
push
ins
imul
xchg
repnz
outs
mov
int3
xchg
inc
fwait
icebp
(bad)
retf
mov
xor
jae
bound
xor
xor
gs
dec
scas
fs
adc
sbb
scas
fs
adc
sbb
mov
loope
mov
out
xchg
rcr
and
retf
sbb
xchg
adc
mov
xchg
add
mov
or
mov
popa
pop
fwait
pop
or
jb
pusha
jne
fdiv
popf
cmp
call
fadd
pushf
xchg
int
loopne
fbld
adc
pusha
adc
xchg
ror
mov
popf
aaa
adc
mov
cmc
mov
mov
xor
iret
fadd
pushf
xchg
cmp
or
adc
(bad)
enter
ins
pop
repz
jno
shl
sub
cmp
shr
jne
mov
xchg
xor
cmp
icebp
push
xchg
cli
pop
int
icebp
sub
mov
adc
fs
adc
dec
mov
and
xor
xor
xor
enter
dec
imul
mov
cmp
call
aaa
pushf
xchg
fcom
lahf
mov
shl
mov
scas
cwde
and
mov
jne
pushf
xchg
fcom
lahf
enter
mov
xor
nop
or
retf
jle
aaa
sub
aaa
xchg
(bad)
jnp
(bad)
in
icebp
stc
cmp
aaa
sbb
sahf
xor
fbstp
nop
jne
addr16
shl
xchg
mov
das
xor
and
mov
adc
nop
jne
mov
xchg
add
mov
xchg
xchg
push
mov
xor
aaa
stos
jne
inc
dec
xchg
dec
mov
xor
imul
mov
push
mov
push
and
fbstp
mov
xor
jecxz
jb
xor
call
fmul
loope
jne
fidiv
popf
mov
fidiv
popf
mov
ins
mov
pop
aad
cmp
scas
loopne
jne
fadd
xchg
xor
pop
fmul
xchg
xor
dec
pop
aas
sub
sbb
xchg
add
daa
call
aaa
adc
mov
ja
mov
jne
mov
and
pusha
jne
fidiv
popf
mov
cmp
jmp
jb
mov
sbb
push
sbb
mov
(bad)
les
and
fbstp
mov
xor
jmp
jb
xor
cld
and
or
ret
loope
cmp
cs
mov
sbb
pushf
(bad)
sbb
adc
nop
jne
mov
xchg
add
xchg
inc
(bad)
fbstp
nop
xor
movs
jb
inc
inc
mov
cs
cmp
mov
fbstp
sbb
adc
test
hlt
and
aas
sub
loope
mov
shl
push
cmp
fbstp
sbb
mov
(bad)
clc
adc
adc
ss
push
pop
jnp
xchg
adc
int
dec
xor
addr16
popa
enter
aas
stc
xor
aaa
stc
xor
aaa
stc
xor
aaa
xchg
xor
enter
mov
(bad)
aam
aaa
push
jne
ins
inc
jge
ins
inc
jns
fwait
jp
aaa
adc
and
inc
ja
add
xor
(bad)
jns
aaa
mov
imul
js
jg
lahf
aaa
xchg
arpl
pusha
sub
mov
adc
inc
sub
call
jb
popf
mov
push
fadd
jnp
xor
in
push
lea
icebp
push
push
retf
push
mov
sbb
les
sbb
adc
enter
ss
jne
fbstp
popf
cmp
jge
daa
ret
sar
xor
sbb
mov
push
cmc
repnz
(bad)
enter
sbb
or
aaa
(bad)
enter
(bad)
fdiv
popf
mov
out
pop
mov
iret
(bad)
enter
xor
add
sbb
adc
push
mov
leave
ins
iret
int
add
jl
xchg
mov
bound
sti
(bad)
aaa
xchg
pop
popf
pop
xchg
pop
lahf
pop
xchg
pop
popf
pop
xchg
xor
retf
int
sti
js
aaa
sbb
adc
mov
inc
xchg
(bad)
sbb
fbstp
ret
fmul
jl
xor
aaa
push
mov
retf
int
xchg
sub
jne
iret
sub
outs
iret
(bad)
fist
popf
aaa
ins
test
ins
iret
jne
aam
popf
enter
jne
arpl
jmp
arpl
ins
pusha
jne
fdiv
popf
mov
push
mov
bound
in
jl
xchg
mov
bound
xor
aaa
xchg
xor
out
fbstp
sti
repz
xchg
pop
push
(bad)
shl
adc
ret
pop
popf
aaa
xchg
mov
adc
xor
jne
pop
loopne
shl
cmc
xor
popf
xor
mov
ins
enter
ret
ins
pop
repz
int
les
mov
(bad)
mov
sbb
popf
enter
jne
mov
push
aad
popf
mov
int3
popf
mov
(bad)
int3
int
xchg
pop
mov
aaa
stc
xor
aaa
ins
inc
xchg
enter
repnz
popf
mov
push
mov
fnsave
push
fmul
ins
inc
gs
stc
xor
aaa
ins
inc
(bad)
enter
cli
fidiv
popf
enter
xchg
fidiv
popf
push
sbb
int3
pusha
sub
fnsave
mov
fmul
sbb
bound
fdiv
jo
xor
ss
iret
call
enter
inc
fsubr
mov
hlt
(bad)
mov
(bad)
push
mov
jb
mov
pop
cdq
mov
out
bound
iret
call
aaa
xchg
mov
das
int3
ins
pop
bound
aad
les
lods
adc
sbb
aaa
push
jne
addr16
jne
addr16
xor
xor
pop
popf
pop
xchg
iret
call
fist
lock
add
enter
inc
(bad)
pop
popf
enter
inc
outs
fmul
mul
cmp
inc
outs
fdivr
xchg
xor
xchg
enter
inc
popa
fild
popf
aaa
mov
repz
jno
lds
inc
xchg
fsubr
sub
pushf
inc
retf
imul
iret
mov
jne
addr16
sub
enter
inc
fadd
jg
xor
js
adc
pusha
retf
pop
xchg
pop
popf
enter
inc
outs
fcom
jg
xor
outs
fdivr
jg
xor
outs
fadd
jg
xor
ds
push
sbb
mov
push
gs
ret
pusha
sub
fisttp
imul
jne
xor
adc
lahf
fnstenv
xchg
pusha
jne
aam
popf
mov
js
popf
aaa
xor
dec
jne
or
iret
out
lods
not
fcmovnu
pop
xchg
pop
pop
aaa
xchg
xor
aaa
stc
xor
aaa
sti
push
jl
xchg
fcomp
retf
inc
jb
mov
sub
aaa
xchg
cmp
xchg
add
test
test
inc
jb
fbld
popf
aaa
sbb
fcom
xor
mov
xor
mov
adc
repnz
aaa
sbb
hlt
(bad)
mov
retf
cmp
cmp
and
mov
es
aaa
xchg
mov
sbb
push
sbb
mov
sbb
pushf
cmc
ror
daa
jnp
aad
xchg
mov
cmp
enter
mov
lahf
aaa
sbb
push
not
sbb
push
ja
or
dec
xchg
aaa
out
sbb
sub
enter
ss
inc
xchg
popf
mov
(bad)
int3
adc
sbb
ja
jb
(bad)
nop
jne
addr16
fdiv
xchg
mov
inc
mov
lea
int
out
jne
shl
popf
mov
(bad)
int3
adc
sbb
ss
push
push
fist
(bad)
int3
adc
int3
outs
(bad)
(bad)
push
gs
adc
mov
push
push
neg
(bad)
iret
push
std
movlps
and
(bad)
aaa
xchg
mov
dec
rcl
not
sub
xor
jb
mov
enter
jbe
pushf
xchg
ds
inc
xchg
cmp
inc
adc
inc
imul
push
jne
aaa
xchg
fcmovnbe
cmp
cmps
mov
xchg
xor
push
dec
mov
push
retf
mov
xchg
xor
js
hlt
rol
jno
ja
sbb
mov
les
(bad)
(bad)
shl
retf
ja
aaa
adc
mov
jne
cmp
out
cwde
sbb
fcomp
repnz
cmc
sbb
push
(bad)
mov
lahf
aaa
jnp
fbstp
xchg
arpl
pusha
sub
inc
ss
mov
(bad)
leave
ins
xor
xchg
jg
pusha
enter
iret
ins
into
bound
inc
xchg
ffreep
shl
hlt
xchg
mov
fnstenv
popf
ds
call
xor
mov
arpl
xchg
inc
nop
popa
jnp
fidiv
xchg
add
mov
popf
aaa
ins
inc
mov
dec
jae
aaa
sbb
and
shl
(bad)
leave
ins
mov
bound
pop
and
ins
int
add
outs
iret
adc
xchg
div
out
fbstp
xchg
mov
bound
rcl
inc
iret
pusha
enter
inc
fwait
pop
cdq
ss
xor
shl
popf
(bad)
in
popf
aaa
rcl
pop
iret
pusha
enter
jb
mov
bound
shl
fs
push
clc
(bad)
retf
addr16
push
enter
aas
sti
gs
xchg
iret
call
aaa
xchg
mov
aas
sti
jle
jne
iret
sub
ins
into
(bad)
fild
popf
aaa
adc
xchg
fbld
jne
aaa
sub
popf
aaa
xchg
test
cwde
dec
sbb
shl
bound
jnp
fdiv
xchg
mov
aas
jnp
fdiv
xchg
mov
shr
xor
adc
(bad)
xor
aaa
or
fs
retf
rcr
aaa
(bad)
fsubr
jb
xor
repz
ffreep
jne
aaa
sub
popf
aaa
xchg
test
cwde
dec
sbb
shl
bound
jnp
fdiv
xchg
mov
aas
sti
pop
jl
xchg
iret
sub
ins
into
(bad)
(bad)
jne
aaa
adc
xchg
fisttp
cmp
into
adc
cwde
dec
sbb
shl
bound
jnp
fdiv
xchg
mov
aas
jnp
fnstenv
xchg
mov
shr
xor
adc
xlat
xor
aaa
or
fs
retf
rcr
aaa
(bad)
fadd
xchg
xor
repz
adc
and
mov
bound
adc
pusha
jne
xlat
xor
out
mov
stos
fnstenv
xchg
mov
shr
xor
and
(bad)
jno
popf
enter
leave
ins
fsub
jae
xor
repz
pop
xchg
(bad)
shl
bound
jnp
fnstenv
xchg
mov
aas
jnp
fnstenv
xchg
mov
shr
xor
and
(bad)
jno
popf
enter
leave
ins
fcomp
jae
xor
repz
pop
sahf
(bad)
shl
bound
jnp
fnstenv
xchg
mov
aas
adc
fwait
add
xor
aaa
or
fs
xor
fnstenv
xchg
mov
aaa
xchg
xor
push
push
mov
arpl
les
(bad)
shl
retf
je
aaa
adc
(bad)
fbld
popf
aaa
sub
sahf
aaa
xchg
test
pusha
xlat
shl
adc
(bad)
fdiv
xchg
xor
mov
iret
pusha
enter
daa
sbb
int
inc
rcr
aaa
ret
fmul
xchg
xor
repz
das
je
xor
fs
push
int
dec
mov
aaa
sub
aaa
xchg
test
and
ins
into
bound
push
jl
xchg
addr16
shl
popf
mov
and
shl
rep
int
mov
xchg
xor
fs
push
int
dec
mov
rcr
aaa
ins
test
ins
iret
jne
shl
popf
mov
cmp
shl
popf
mov
(bad)
fs
xor
jge
xchg
iret
sub
ins
into
(bad)
(bad)
jae
aaa
adc
xchg
fbstp
cmp
into
adc
cwde
dec
sbb
shl
bound
jnp
fidiv
xchg
mov
aas
adc
jecxz
xchg
xor
mov
out
push
mov
iret
arpl
ret
pop
pop
xlat
shl
int
outs
jb
aaa
adc
mov
dec
jb
aaa
sub
popf
aaa
xchg
test
cwde
dec
sbb
shl
bound
jnp
fbstp
xchg
mov
aas
jnp
fbstp
xchg
mov
shr
xor
and
(bad)
jno
popf
enter
leave
ins
fmul
xchg
xor
repz
jne
xor
fs
push
int
dec
mov
aaa
sub
aaa
xchg
test
and
ins
into
bound
push
jl
xchg
addr16
shl
popf
mov
and
dec
mov
xchg
mov
xor
enter
(bad)
xor
aaa
ins
iret
popf
(bad)
mov
rcl
sub
pusha
enter
xchg
das
iret
pusha
enter
mov
ins
xor
mov
or
enter
inc
cmc
mov
ins
xor
mov
cmp
mov
shr
push
sar
aaa
sub
repz
jg
jns
adc
daa
iret
pusha
enter
lock
(bad)
enter
(bad)
shl
adc
(bad)
fadd
xchg
xor
repz
sbb
mov
ins
mov
aaa
xchg
inc
sbb
les
ins
iret
call
aaa
ins
iret
int
push
int3
(bad)
leave
ins
pusha
cmc
push
jae
popf
addr16
fdiv
xchg
mov
das
adc
stos
inc
xchg
xor
shl
popf
mov
(bad)
fs
xor
jge
xchg
iret
sub
ins
into
(bad)
fbstp
jno
aaa
adc
xchg
(bad)
jno
aaa
sub
popf
aaa
xchg
test
cwde
dec
sbb
shl
bound
jnp
fdiv
xchg
mov
aas
jnp
fdiv
xchg
mov
shr
xor
and
(bad)
jno
popf
enter
leave
ins
fmul
jbe
xor
repz
mov
imul
mov
xor
leave
ins
mov
bound
push
lock
retf
pop
sahf
ins
iret
bound
ins
mov
iret
cli
xor
aaa
sbb
mov
ins
(bad)
ss
xor
enter
jne
xor
aaa
xchg
mov
push
aaa
xchg
or
iret
ins
into
bound
adc
xchg
mov
bound
ins
iret
call
jne
mov
bound
xchg
fnsave
xchg
mov
cmp
mov
push
jmp
or
idiv
mov
ins
mov
pop
mov
ins
pusha
xchg
adc
(bad)
retf
sbb
addr16
pusha
enter
or
xor
mov
iret
pusha
enter
iret
ins
iret
push
repz
mov
(bad)
enter
leave
ins
iret
call
enter
mov
iret
arpl
ret
pop
stc
xlat
shl
int
cmps
jo
aaa
adc
test
xchg
aaa
sub
popf
aaa
xchg
test
cwde
dec
sbb
shl
bound
jnp
fnsave
xchg
mov
aas
adc
mov
fisubr
popf
aaa
or
fs
xor
jge
xchg
iret
sub
ins
into
(bad)
fistp
hlt
xchg
fist
popf
aaa
sub
popf
aaa
xchg
test
cwde
dec
sbb
shl
bound
jnp
mov
aas
ins
test
outs
iret
jne
scas
xor
leave
ins
mov
sbb
push
mov
bound
test
ins
iret
retf
fistp
hlt
xchg
mov
ins
cmp
push
mov
cmps
xlat
shl
bound
jnp
mov
aas
adc
stc
or
xor
aaa
or
fs
xor
jge
xchg
iret
sub
ins
into
(bad)
fcomip
setge
adc
xchg
fbstp
cmp
into
adc
cwde
dec
sbb
shl
bound
jnp
mov
aas
jnp
mov
aaa
xchg
xor
push
addr16
and
(bad)
jno
popf
enter
leave
ins
fadd
repz
pop
scas
xlat
shl
bound
jnp
mov
aas
sbb
mov
sbb
jne
lods
xor
aaa
or
fs
xor
mov
aaa
xchg
xor
push
push
mov
arpl
les
(bad)
shl
retf
push
popf
aaa
adc
(bad)
fistp
push
popf
aaa
sub
popf
aaa
xchg
test
cwde
dec
sbb
shl
bound
jnp
mov
aas
jnp
mov
aaa
xchg
xor
push
addr16
and
cld
jae
popf
enter
leave
ins
fcomp
or
fsub
cmp
fs
push
int
dec
mov
rcr
aaa
ins
test
ins
iret
jne
lods
xor
fmul
and
aaa
xchg
xor
push
addr16
adc
lods
xor
aaa
or
fs
retf
rcr
aaa
(bad)
fsub
xchg
xor
repz
shl
bound
jnp
mov
aas
jnp
mov
aaa
xchg
xor
push
addr16
and
(bad)
jno
popf
enter
leave
ins
fdiv
xchg
xor
repz
mov
aam
mov
enter
hlt
sti
sub
jne
iret
sub
ins
into
(bad)
fistp
popf
aaa
adc
xchg
fist
or
popf
aaa
xchg
test
cwde
dec
sbb
shl
bound
jnp
mov
aas
sti
sub
xchg
iret
sub
ins
into
(bad)
fild
or
xchg
(bad)
cmp
popf
aaa
rcl
das
iret
pusha
enter
or
xor
mov
xor
jg
xchg
iret
sub
ins
into
(bad)
(bad)
or
xchg
mov
ins
pusha
push
mov
iret
arpl
ret
pop
lahf
xlat
shl
int
(bad)
or
(bad)
fild
popf
aaa
sub
popf
aaa
xchg
test
cwde
dec
sbb
shl
bound
jnp
mov
aas
sti
xor
xchg
iret
sub
ins
into
(bad)
fistp
hlt
xchg
mov
stos
sahf
aaa
xchg
fsub
or
xor
int
dec
mov
rcr
aaa
ins
test
ins
iret
jne
scas
xor
scas
scas
xor
aaa
or
fs
mov
popf
pusha
sbb
retf
out
fbstp
(bad)
fcom
or
fdiv
or
xor
int
dec
mov
rcr
aaa
ins
test
ins
iret
jne
scas
xor
cmp
jo
sbb
push
pop
inc
call
outs
iret
arpl
jnp
mov
aas
jnp
mov
aaa
xchg
xor
push
addr16
and
(bad)
jno
popf
enter
leave
ins
fcomp
or
fcomp
cmp
fs
push
int
dec
mov
aaa
sub
aaa
xchg
test
and
ins
into
bound
push
jl
xchg
addr16
test
popf
mov
and
out
jb
enter
leave
ins
fsub
xchg
xor
repz
pop
popf
pop
xchg
pop
lahf
pop
xchg
pop
popf
pop
xchg
xor
fucomip
or
enter
out
xchg
call
popa
enter
retf
popf
pop
xchg
mov
bound
iret
sub
ins
into
(bad)
enter
retf
dec
setae
bound
jnp
stos
aaa
xchg
iret
sub
ins
into
(bad)
fisttp
ret
cmps
popa
jnp
movs
aaa
xchg
mov
bound
imul
js
jg
pushf
aaa
xchg
and
in
mov
mov
push
neg
enter
mov
push
aas
sub
pusha
cmc
mov
push
iret
arpl
ins
pusha
jne
test
popf
pop
xchg
pop
sbb
shl
adc
ret
pop
pushf
aaa
xchg
mov
loop
iret
bound
xor
jb
or
inc
sub
out
fbstp
sti
jp
jne
pop
pushf
aaa
xchg
mov
xchg
bound
out
fbstp
sti
jmp
shl
cmc
xor
xor
enter
mov
push
outs
push
hlt
(bad)
mov
lahf
aaa
xchg
arpl
pusha
sub
mul
mov
mov
bound
outs
iret
bound
sbb
mov
xor
sbb
push
jb
mov
popf
aaa
sbb
adc
xlat
adc
jmp
(bad)
enter
in
sbb
mov
(bad)
add
mov
adc
xor
(bad)
enter
add
int
enter
retf
jne
movs
xor
mov
push
fs
xor
fs
sar
bound
push
data16
movs
xor
enter
xchg
outs
iret
(bad)
fcomip
pop
popf
aaa
sbb
bound
jnp
stos
aaa
xchg
mov
in
retf
adc
xor
(bad)
enter
ss
fs
sar
bound
xchg
pop
popf
out
shl
jne
movs
xor
enter
lods
cld
xor
mov
ins
pusha
jne
stos
xor
aaa
ret
fsubr
push
xchg
xor
xor
test
ins
pusha
cmc
cwde
dec
jb
pop
daa
out
fbstp
sti
xor
fsubr
repz
pop
inc
and
movs
xor
xor
pop
push
popf
aaa
jnp
arpl
ins
mov
pop
pop
xchg
xor
leave
ins
iret
int
push
test
ins
pusha
jne
cmps
xor
enter
cmps
outs
iret
(bad)
enter
enter
mov
es
enter
xchg
outs
iret
bound
mov
retf
int
mov
hlt
mov
enter
inc
sahf
data16
cmps
xor
ss
xor
xchg
dec
jb
mov
ins
pusha
jne
stos
xor
aaa
xchg
mov
bound
mov
leave
ins
iret
int
imul
aaa
jnp
jb
ins
mov
bound
xchg
pop
fstp
mov
bound
inc
movs
aaa
xchg
mov
sub
(bad)
mov
xchg
xor
sub
(bad)
enter
aaa
push
mov
leave
ins
iret
pushf
aaa
xchg
xor
lock
fsub
ins
xor
enter
sub
neg
fild
bound
xchg
mov
pop
mov
ins
pusha
jne
jl
bound
mov
retf
int
push
mov
ins
pusha
div
stc
xor
pop
stc
xor
aaa
stc
xor
mov
into
(bad)
enter
(bad)
add
xchg
mov
xor
retf
jne
cmps
xor
aaa
xlat
adc
test
bound
sti
and
pop
loopne
shl
adc
ret
fcomp
repz
pop
outs
iret
bound
js
adc
mov
mov
leave
ins
iret
int
out
fbstp
jnp
test
xchg
mov
xchg
xor
aaa
xchg
mov
pop
outs
iret
bound
sbb
mov
in
out
cmc
aaa
jmp
popf
fbstp
add
aaa
adc
popf
inc
cdq
pop
popf
(bad)
xchg
xor
cmps
xor
aaa
push
mov
leave
ins
iret
int
jnp
test
xchg
pop
pushf
pop
stc
out
fbstp
push
mov
leave
ins
iret
int
push
mov
adc
xchg
or
aaa
out
push
xchg
bswap
(bad)
enter
mov
lods
pusha
enter
fdivr
pop
popf
aaa
js
push
xchg
bswap
(bad)
enter
sub
addr16
test
pop
lock
aaa
xchg
pop
popf
enter
enter
add
int
enter
aaa
xchg
mov
(bad)
fcomp
mov
bound
pop
repnz
aaa
(bad)
mov
into
popa
les
shl
imul
push
cmps
xor
bound
pop
cmp
xor
adc
push
adc
outs
iret
call
aaa
xchg
mov
imul
aaa
xchg
mov
imul
and
popa
ss
aas
sub
xor
and
imul
mov
mov
xor
xor
sbb
mov
out
sub
cmp
lock
jg
fwait
pop
xchg
mov
ins
ja
fadd
repz
iret
call
not
xor
aaa
xchg
iret
call
leave
push
je
xor
pusha
jne
mov
and
jae
xor
adc
xor
(bad)
add
jb
mov
sub
xor
and
imul
jg
aaa
xchg
mov
xchg
xor
sbb
mov
ret
pop
popf
popa
sti
jl
ja
pop
popf
pop
xchg
fmul
add
xor
stc
iret
retf
fist
jne
vmovlps
adc
xlat
adc
ja
pop
popa
jnp
lods
aaa
xchg
mov
(bad)
(bad)
push
gs
sub
aaa
xchg
fmul
xchg
xor
popa
les
mov
fdivr
pop
shl
jae
bound
jae
bound
xor
enter
mov
shl
ret
pop
sti
jmp
mov
cmp
pop
mov
push
xchg
xor
xlat
ins
iret
jne
cmps
xor
mul
sub
pop
shl
ins
inc
xchg
fistp
add
iret
sbb
lods
not
(bad)
lock
mov
ins
jo
aaa
xchg
mov
bound
mov
xlat
ins
iret
int
jnp
mov
xchg
cmp
cmps
mov
pop
fs
test
ins
iret
jne
cmps
xor
mul
sub
pop
shl
ins
inc
xchg
fbld
fistp
cmp
xor
cmp
pop
fcom
mov
push
hlt
(bad)
mov
popf
aaa
jnp
mov
xchg
arpl
pusha
sbb
mov
inc
dec
or
fimul
fs
xor
xchg
rcl
pop
cdq
ss
xor
mov
mov
enter
ss
inc
fs
dec
xor
jnp
es
aas
sbb
pushf
(bad)
sbb
cmc
bound
popf
fs
test
aas
sbb
push
sbb
push
mov
out
(bad)
enter
jns
jb
mov
ins
pusha
jne
cmps
xor
sbb
xor
mov
xor
jg
xchg
mov
bound
jnp
aaa
xchg
mov
aas
jnp
test
aaa
xchg
xor
push
addr16
sbb
mov
xor
gs
lea
pop
retf
out
fbstp
push
lea
fistp
popf
aaa
adc
(bad)
fistp
popf
aaa
sub
popf
aaa
xchg
test
cwde
dec
xchg
aad
xor
mov
shl
ret
fdiv
xchg
xor
repz
mov
xor
rcr
aaa
push
mov
xlat
ins
iret
int
inc
add
fistp
add
aaa
xchg
test
cwde
dec
xchg
aad
xor
mov
shl
ret
fdiv
add
xor
repz
add
xor
fs
push
int
dec
mov
mov
popf
aaa
xchg
test
and
jae
bound
push
and
jae
bound
jnp
aaa
xchg
mov
daa
ins
inc
lea
rcr
aaa
push
mov
xlat
ins
iret
int
mov
fbstp
push
mov
xlat
ins
iret
int
mov
hlt
mov
push
fcomp
cmp
fs
push
int
dec
mov
rcr
aaa
push
mov
xlat
ins
iret
int
mov
popf
aaa
adc
xchg
pop
cdq
rcr
aaa
push
mov
xlat
ins
iret
int
lahf
add
fistp
popf
aaa
sub
popf
aaa
xchg
test
cwde
dec
xchg
aad
xor
mov
shl
ret
fdivr
xchg
xor
repz
pop
sahf
(bad)
shl
adc
ret
fmul
xchg
xor
repz
mov
pop
fistp
add
aaa
xchg
test
cwde
dec
mov
xor
xchg
xor
mov
ins
addr16
outs
dec
jb
mov
ins
addr16
mov
and
push
jae
popf
mov
ins
pusha
jne
mov
cmp
mov
xor
mov
xor
jg
xchg
mov
bound
scas
aaa
xchg
mov
aas
sub
fbstp
xchg
(bad)
jnp
push
rol
mov
fbstp
push
mov
xlat
ins
iret
int
cmps
add
fbld
popf
aaa
sub
popf
aaa
xchg
test
cwde
dec
xchg
aad
xor
mov
shl
ret
fcom
repz
pop
xchg
shl
adc
ret
fsub
xchg
xor
repz
mov
in
xor
aaa
sub
popf
aaa
xchg
test
cwde
dec
xchg
aad
xor
mov
shl
ret
fcom
xchg
xor
repz
iret
call
xlat
ins
iret
int
mov
mov
xlat
ins
iret
int
pop
add
(bad)
add
aaa
xchg
test
cwde
dec
xchg
aad
xor
mov
shl
ret
fcom
push
xchg
xor
repz
pop
popf
xlat
shl
adc
ret
fsubr
push
xchg
xor
repz
cmp
fs
push
int
dec
mov
rcr
aaa
push
mov
xlat
ins
iret
int
ret
add
(bad)
pop
xor
mov
out
(bad)
enter
retf
popf
mov
popf
aaa
or
fs
mov
popf
pusha
push
lea
pop
test
fbstp
push
lea
fistp
popf
aaa
adc
(bad)
fistp
popf
aaa
sub
popf
aaa
xchg
test
cwde
dec
xchg
aad
xor
mov
shl
ret
fdiv
xchg
xor
repz
pop
inc
call
xchg
shl
ret
fmul
xchg
xor
repz
mov
sbb
dec
iret
bound
xchg
xor
fs
push
int
dec
mov
rcr
aaa
push
mov
xlat
ins
iret
int
aaa
add
fcomip
add
aaa
xchg
test
cwde
dec
mov
xor
xchg
xor
mov
ins
addr16
outs
dec
jb
mov
ins
addr16
mov
and
out
jb
mov
ins
pusha
jne
mov
cmp
aaa
stc
xor
xor
sti
xor
out
xor
enter
xor
xor
enter
bound
mov
bound
mov
bound
test
ins
iret
jne
mov
int3
inc
enter
sbb
xor
sbb
ins
pop
repz
jno
xchg
xor
mov
push
and
aaa
xchg
mov
stos
outs
iret
bound
mov
xor
xchg
fs
mov
xchg
mov
lahf
sbb
adc
xlat
adc
pop
retf
(bad)
enter
scas
mov
mov
aaa
xchg
fcom
scas
sti
xor
mov
iret
bound
shl
jne
mov
nop
pusha
enter
shl
push
pop
lea
mov
bound
retf
mov
xchg
pop
cdq
ss
xor
mov
int
enter
jmp
dec
jb
pop
xchg
xor
enter
adc
xor
aaa
xchg
mov
bound
mov
retf
int
out
popf
aaa
sbb
lods
iret
sbb
bound
sar
addr16
addr16
cmp
xor
jne
mov
bound
shl
sub
addr16
mov
leave
ins
iret
int
inc
push
popf
aaa
jnp
js
ins
mov
bound
xchg
pop
fstp
mov
bound
jg
aaa
xchg
mov
sub
test
aaa
xchg
(bad)
jp
push
dec
enterw
lock
mov
ins
je
aaa
xchg
neg
shr
bound
xchg
xor
enter
adc
neg
fild
bound
xchg
mov
ds
xor
sbb
adc
push
mov
leave
ins
iret
int
or
(bad)
enter
xchg
outs
iret
bound
mov
leave
ins
iret
int
xchg
pop
popf
pop
mov
popf
pop
xchg
pop
popf
mov
ins
pusha
div
jnp
mov
xchg
cmp
pop
cmps
pushf
aaa
xchg
iret
sub
jnp
popf
aaa
sbb
pushf
iret
sbb
bound
sti
and
pop
loopne
shl
adc
ret
fadd
xchg
xor
repz
inc
push
add
iret
xlat
adc
jecxz
(bad)
enter
mov
into
(bad)
enter
jmp
mov
cmp
mov
xor
xor
mov
inc
enterw
mov
retf
(bad)
enter
cmc
call
aaa
sti
xor
xchg
fsubr
sbb
xchg
xor
enter
fbld
popf
aaa
adc
dec
popa
xchg
xor
ss
pop
inc
jne
mov
bound
inc
das
enter
cmp
aas
sbb
xchg
xor
enter
fucomip
(bad)
(bad)
enter
ds
aas
sbb
xchg
iret
sub
push
mov
jne
mov
lods
pusha
enter
add
(bad)
enter
enter
(bad)
aaa
xlat
adc
jecxz
(bad)
enter
add
(bad)
enter
aaa
xchg
pop
xchg
jmp
mov
cmp
xchg
data16
mov
and
mul
sbb
cmp
jb
fisttp
lods
add
ins
iret
push
fsubr
ret
into
enter
enter
loopne
iret
push
repz
fild
enter
add
bound
jnp
dec
enter
cmp
(bad)
aas
js
xor
fbstp
mov
retf
pushf
aaa
xchg
xor
mov
mov
retf
int
dec
sbb
xor
(bad)
enter
aaa
xchg
mov
sbb
iret
bound
outs
iret
(bad)
fistp
mov
retf
ret
stc
pop
xor
fmul
push
(bad)
loope
mov
lock
fdiv
push
xchg
xor
imul
cmp
mov
xchg
mov
lahf
daa
rcr
add
popf
aaa
sbb
adc
mov
data16
mov
popf
fs
mov
xchg
iret
call
ss
adc
push
popf
aaa
sbb
mov
sbb
adc
pusha
div
lds
push
stc
xor
mov
pop
bound
jecxz
aaa
xchg
mov
rcr
jne
mov
ret
data16
mov
popf
popa
jnp
mov
retf
js
adc
xlat
adc
arpl
push
hlt
(bad)
mov
popf
aaa
jnp
mov
mov
pop
sbb
lods
iret
sbb
div
ins
inc
xchg
fist
not
js
adc
mov
iret
xchg
aaa
xchg
mov
bound
fdiv
xchg
xor
ss
inc
xchg
mov
ins
pusha
jne
and
bound
xor
fcomp
mov
fsub
outs
ret
(bad)
push
gs
adc
mov
shl
je
fmul
sbb
sti
lock
into
pushf
aaa
js
adc
mov
xchg
leave
ret
pop
fwait
jmp
jge
jne
mov
fmulp
pop
xchg
pop
fidiv
xchg
xor
adc
mov
xchg
aas
sub
mov
xor
pop
(bad)
jmp
jne
mov
sub
jb
pusha
div
sti
jae
aaa
xchg
iret
test
or
popf
fist
(bad)
call
into
xchg
adc
push
iret
sahf
dec
adc
repz
int
les
adc
fs
adc
outs
mov
lahf
pop
xchg
pop
popf
pop
xchg
pop
pushf
pop
xchg
pop
popf
pop
xchg
pop
or
aaa
stc
xor
xor
and
mov
pop
pushf
pusha
stc
add
pop
xchg
fbstp
jnp
mov
xchg
pop
pushf
pusha
stc
add
jnp
fdiv
jnp
mov
xchg
mov
fmul
sbb
div
les
enter
jne
fsub
pop
xchg
xor
les
enter
jbe
fdiv
pop
xchg
xor
les
enter
ja
fadd
pop
xchg
xor
les
enter
jbe
fcom
pop
xchg
xor
out
popf
aaa
stc
xor
pop
mov
jno
fbld
xor
pop
mov
jb
fbstp
xor
pop
mov
jb
fild
fimul
les
enter
jbe
fsub
xchg
xor
les
enter
jbe
fdiv
xchg
xor
les
enter
jne
fadd
xchg
xor
les
enter
jne
fcom
xchg
xor
imul
inc
sbb
enter
div
retf
ins
add
jne
mov
popf
xchg
mov
fnsave
sti
fstp
ja
pop
popa
enter
jbe
fmul
adc
add
jne
mov
popf
xchg
scas
scas
fdiv
sti
fstp
ja
pop
popa
enter
jne
fdiv
retf
ins
add
jne
mov
popf
xchg
mov
fdiv
sti
fstp
ja
pop
popa
enter
jbe
fcom
iret
mov
int3
bound
(bad)
movs
fnsave
jnp
mov
cmps
shl
cmc
ficom
popf
pop
outs
iret
test
push
jo
fbstp
popf
aaa
stc
int3
bound
mov
idiv
xchg
shl
cmc
ficom
popf
pop
outs
iret
test
or
popf
fild
push
popf
aaa
stc
int3
bound
mov
fdiv
jnp
mov
scas
shl
cmc
ficom
popf
pop
outs
iret
test
or
popf
fisttp
push
popf
aaa
stc
int3
bound
pop
xchg
fbstp
jnp
mov
test
xor
ficom
popf
pop
outs
iret
test
xor
(bad)
push
popf
aaa
int3
repz
jno
lds
mov
push
mov
push
pop
push
inc
fdivr
retf
ins
iret
adc
sti
fadd
xchg
data16
outs
iret
bound
jno
pop
xchg
pusha
jne
mov
popf
mov
stos
xor
ret
data16
mov
popf
pop
xchg
iret
test
or
popf
pop
xchg
pushw
jb
sbb
ret
ret
mov
ins
addr16
xor
aaa
sti
xor
(bad)
shl
cmc
(bad)
dec
jb
pop
xchg
xor
aaa
xchg
xchg
fst
ins
add
div
ret
pop
mov
jb
mov
push
ret
pop
mov
pop
popf
aaa
adc
repz
jb
pop
dec
in
fbstp
stc
xor
mov
popf
xchg
xchg
scas
fdiv
adc
xchg
inc
xchg
xor
aaa
ins
add
div
ins
add
cmc
cmps
xchg
xor
jb
mov
push
ret
pop
int3
pop
xchg
aaa
adc
jmp
jb
pop
dec
in
fbstp
stc
xor
mov
popf
xchg
pause
fbstp
stc
xor
xor
stc
xor
div
stc
xor
mov
pop
popf
pop
fwait
pop
mov
mov
popf
aaa
sbb
div
lds
enter
jbe
fcomp
adc
add
div
ins
add
mul
sti
push
lahf
aaa
xchg
pop
stc
pop
mov
pusha
cmc
pop
dec
jb
pop
dec
in
fbstp
stc
xor
mov
popf
xchg
out
xchg
fbstp
stc
xor
cmps
scas
fdiv
stc
xor
xlat
nop
fdiv
stc
and
adc
xor
pop
xchg
xor
jne
pop
inc
jmp
mov
xchg
shl
adc
xlat
adc
jg
pop
pop
xchg
iret
test
or
popf
pop
xchg
iret
test
xor
pop
sbb
xchg
xor
xchg
xchg
xor
aaa
xchg
pusha
cmc
stc
dec
jb
pop
dec
in
fbstp
stc
xor
mov
popf
xchg
lahf
scas
fdiv
stc
xor
cmps
scas
fdiv
stc
xor
xlat
nop
fdiv
stc
and
dec
xchg
xor
aaa
stc
sbb
aaa
xchg
xor
pop
sbb
jmp
push
adc
aaa
xor
jbe
pop
popf
enter
jbe
pop
popf
enter
jne
pop
stc
pop
neg
aaa
xchg
xor
and
xor
(bad)
shl
cmc
mov
jb
pop
xchg
fcom
adc
jno
mov
dec
cli
aaa
xchg
pop
out
shl
div
sti
jae
aaa
xchg
pusha
jne
mov
popf
pop
out
fbstp
stc
xor
je
xor
jbe
fsubr
aaa
ins
add
div
ins
add
cmc
sbb
pop
aaa
aaa
xchg
xor
dec
sti
xor
(bad)
shl
cmc
mov
jb
pop
xchg
fdivr
mov
jb
pop
xchg
iret
test
or
popf
pop
xchg
iret
test
xor
pop
mov
or
popf
xchg
xor
aaa
sti
xor
(bad)
shl
cmc
mov
jb
pop
xchg
fdiv
xchg
xor
sbb
popf
fild
xor
cmps
scas
fdiv
stc
xor
xlat
nop
fdiv
stc
and
or
(bad)
popf
aaa
xchg
pop
cmc
ss
xor
aaa
xchg
xor
pop
clc
in
fbstp
sti
jmp
aas
adc
jne
mov
fcomp
sbb
div
ins
add
div
ins
add
mul
sti
mov
aaa
xchg
pop
bound
xchg
xor
and
xor
jne
pop
inc
jmp
mov
xchg
shl
div
ins
add
div
ins
add
mul
stc
push
cmc
das
xchg
xor
aaa
sti
xor
jmp
xor
in
dec
jb
pop
xchg
fdiv
pop
or
pop
xchg
iret
test
or
popf
pop
xchg
iret
test
xor
pop
sbb
xchg
xor
push
xchg
xor
aaa
xchg
pusha
cmc
and
jb
pop
dec
in
fbstp
stc
xor
mov
popf
xchg
arpl
bound
cmps
scas
fdiv
stc
xor
xlat
nop
fdiv
stc
and
popa
sti
jp
aaa
xchg
pop
cmp
aaa
xchg
xor
pop
xchg
in
fbstp
sti
jmp
das
adc
jne
pop
popf
enter
jbe
pop
popf
enter
jne
pop
test
xor
aaa
xchg
pop
mov
xor
jne
pop
pushf
jmp
xor
aaa
xchg
xor
aaa
xor
enter
jbe
pop
popf
enter
jne
pop
test
xor
aaa
xchg
pop
mov
xor
jne
pop
pushf
jmp
xor
aaa
xchg
xor
aaa
xor
ja
mov
dec
xchg
popf
pop
xchg
iret
test
or
popf
pop
xchg
iret
test
xor
pop
mov
pop
dec
xor
aaa
xchg
mov
pop
dec
rcr
aaa
sti
xor
xchg
pop
popf
xor
mov
popf
xchg
mov
xor
cmps
scas
fdiv
stc
xor
pause
fbstp
stc
sub
push
sti
lds
pop
xchg
xor
jne
pop
pushf
jmp
xor
aaa
xchg
xor
aaa
xor
add
pop
popf
enter
jbe
pop
popf
enter
jbe
pop
mov
xor
aaa
xchg
pop
sbb
sbb
jne
pop
addr16
shl
div
jnp
mov
xchg
shl
jne
imul
mov
push
fmul
imul
jno
lds
push
fsub
jmp
xchg
pop
push
inc
fcomp
shr
sti
fadd
xchg
data16
fs
bound
jno
(bad)
scas
popfw
aaa
xlat
adc
jg
pop
pop
xchg
iret
test
or
popf
fbstp
jne
addr16
pop
xchg
xor
sub
bound
cmps
scas
fdiv
stc
xor
mov
addr16
push
jb
sbb
mov
pop
popf
aaa
adc
jmp
jb
pop
jb
fbstp
sti
xor
pop
xchg
xor
jae
jno
pop
xchg
iret
test
or
popf
pop
xchg
pusha
test
(bad)
rcr
mul
and
and
aaa
xchg
mov
pop
pop
jmp
aaa
sti
jmp
and
popf
aaa
xor
jbe
pop
popf
enter
jbe
pop
popf
enter
jbe
pop
mov
xchg
xor
jb
sbb
(bad)
adc
stc
addr16
popa
mul
sti
cmp
(bad)
shl
cmc
in
dec
jb
pop
xchg
fsubr
pop
xchg
xor
push
xor
pop
xchg
pop
lahf
pop
xchg
pop
popf
pop
xchg
pop
pushf
pop
xchg
pop
popf
pop
xchg
pop
and
stc
xor
aas
stc
and
xor
pop
jmp
xor
pop
ins
add
jne
mov
popf
pop
xchg
iret
test
or
popf
pop
xchg
iret
test
xor
pop
neg
pop
xchg
pop
nop
xor
jne
pop
sbb
shl
div
jnp
mov
stos
shl
adc
mov
dec
inc
jne
pop
popf
pop
shl
popf
aaa
ins
add
jne
mov
popf
pop
out
fbstp
stc
xor
je
xor
jbe
fdivr
sub
xchg
fbstp
cmps
inc
mov
pop
pushf
pop
fnsave
popf
aaa
ins
add
jne
mov
popf
fadd
pop
shl
xchg
xor
jnp
fdiv
jnp
xor
pop
popf
enter
jbe
pop
popf
enter
jne
pop
mov
xchg
xor
add
sti
xor
(bad)
shl
cmc
mov
jb
pop
xchg
fdivr
sub
jb
mov
push
pop
popf
enter
jbe
pop
popf
enter
jne
pop
mov
xchg
xor
or
and
cdq
xchg
xor
addr16
in
jl
xchg
pop
sbb
shl
div
jnp
xor
xchg
mov
shl
jne
iretw
bound
iret
test
or
popf
pop
xchg
iret
test
xor
pop
sbb
xchg
xor
pop
sti
and
aaa
xchg
pop
popf
aaa
xchg
pusha
cmc
fs
jb
pop
dec
in
fbstp
stc
xor
lea
popf
xchg
out
fbstp
adc
into
pop
xchg
xor
aaa
ins
add
div
ins
add
mul
stc
push
cmc
mov
xor
aaa
sti
xor
jmp
xor
in
dec
jb
pop
xchg
fdiv
sub
jno
pop
xchg
iret
test
or
popf
pop
xchg
iret
test
xor
pop
sbb
xchg
xor
xchg
xchg
xor
aaa
xchg
pusha
cmc
and
jb
pop
dec
in
fbstp
stc
xor
lea
popf
xchg
arpl
bound
cmps
scas
fdiv
stc
xor
xlat
nop
fdiv
stc
and
popa
sti
mov
aaa
xchg
xor
aaa
xchg
xor
pop
xchg
in
fbstp
sti
jmp
stos
cs
aaa
xor
enter
jbe
pop
popf
enter
jbe
pop
lea
xor
aaa
xchg
pop
sbb
popf
addr16
dec
inc
jne
pop
inc
jmp
xor
xchg
loope
shl
adc
mov
xor
cmps
scas
fdiv
stc
xor
xlat
nop
fdiv
stc
and
retf
popf
pop
ins
xor
aaa
xchg
xor
pop
(bad)
jmp
aaa
sti
jmp
push
sub
ds
pop
popf
enter
jbe
pop
popf
enter
jne
pop
test
xor
and
xor
xchg
shl
cmc
ss
jb
pop
xchg
xor
aaa
xchg
xchg
and
shl
div
ins
add
imul
stc
sbb
jno
and
aaa
xchg
mov
pop
dec
rcr
aaa
sti
xor
xchg
pop
popf
xor
mov
popf
xchg
mov
(bad)
xchg
xchg
xor
aaa
ins
add
div
ins
add
imul
stc
push
imul
and
aaa
xchg
mov
pop
dec
rcr
aaa
sti
xor
xchg
pop
popf
xor
mov
popf
xchg
mov
fdiv
stc
xor
cmps
scas
fdiv
stc
xor
xlat
nop
fdiv
stc
daa
cmc
lods
xchg
xor
aaa
stc
cs
aaa
xchg
mov
pop
jo
fbstp
sti
retf
xchg
pop
popf
fisttp
popf
aaa
xor
pop
les
call
push
je
aaa
xchg
outs
ret
(bad)
push
gs
adc
test
and
movs
cli
pop
xor
aaa
xlat
adc
jg
pop
pop
xchg
pop
sbb
xor
xor
xor
xor
aas
jnp
xchg
xchg
mov
xchg
mov
xor
fistp
sub
fsub
popf
aaa
vmaxps
xchg
xor
push
outs
xor
addr16
aaa
xchg
mov
fadd
ret
mov
call
jne
pop
pushf
aaa
xchg
mov
push
xor
bound
xlat
adc
jnp
pop
push
into
int3
out
jle
xor
outs
pop
iret
in
shl
cmc
arpl
popf
enter
inc
fsub
shr
repz
pushf
iret
sbb
push
dec
imul
sub
xor
xor
jne
ins
inc
lea
test
aaa
sti
xor
xchg
ins
iret
push
repz
ins
pop
repz
jno
xchg
xor
cmp
adc
mov
imul
xchg
and
mov
ins
pusha
jne
mov
popf
fist
aas
popf
aaa
xchg
test
adc
enter
pop
cs
push
mov
enter
(bad)
sub
xor
and
mov
ins
pusha
jne
mov
popf
mov
pop
in
xchg
mov
enter
pop
data16
push
mov
enter
fistp
dec
bound
out
cmc
and
jb
mov
ins
pusha
jne
test
popf
mov
iret
cwde
inc
sbb
shl
adc
ret
fadd
xchg
xor
es
jnp
jne
mov
bound
test
mov
iret
call
xor
mov
iret
(bad)
enter
and
cmp
es
mov
jne
mov
bound
mov
loopne
call
aaa
push
mov
enter
fucomip
daa
popf
aaa
adc
cmp
and
mov
ins
pusha
jne
test
popf
mov
push
int3
arpl
ins
mov
xchg
inc
sbb
shl
adc
ret
fcomp
and
cmp
es
adc
jne
mov
bound
sbb
enter
pop
stos
sbb
push
mov
enter
fild
dec
bound
out
cmc
bound
jb
mov
ins
pusha
jne
test
popf
pop
xchg
pop
popf
pop
shr
fbstp
sti
jnp
jne
mov
bound
xor
jbe
fmul
shr
or
jb
pop
sub
jo
jbe
fmul
retf
cmc
div
popf
aaa
adc
mov
arpl
ins
mov
ins
iret
ret
ins
pop
repnz
aaa
(bad)
mov
retf
cmp
jp
mov
popf
aaa
xlat
adc
outs
mov
jne
mov
popf
mov
rcr
fsubr
repz
cmp
fwait
pop
popf
pusha
jnp
test
xchg
outs
ret
ins
pop
repnz
aaa
(bad)
mov
xchg
aaa
xchg
arpl
pusha
sub
mov
pop
mov
push
pop
out
test
xor
mov
(bad)
(bad)
enter
and
xor
aaa
or
fs
ins
mov
les
bound
out
cmc
fwait
and
mov
ins
pusha
jne
test
popf
(bad)
iret
xor
mov
(bad)
(bad)
enter
mov
(bad)
enter
pop
push
sbb
push
mov
shr
ja
popf
aaa
adc
sahf
inc
sbb
shl
adc
ret
fcom
xchg
xor
enter
pop
xchg
sbb
push
mov
shr
and
outs
iret
ins
iret
cwde
inc
sbb
shl
adc
ret
fmul
and
(bad)
adc
jae
(bad)
enter
mov
(bad)
enter
pop
cmps
sbb
push
mov
shr
jecxz
popf
aaa
adc
call
xor
mov
(bad)
(bad)
enter
and
enter
inc
mov
sbb
push
mov
shr
scas
and
push
sbb
adc
adc
xchg
inc
sbb
shl
adc
ret
fmul
mov
(bad)
enter
pop
cmp
jo
ins
iret
int
outs
and
aaa
adc
xchg
inc
sbb
shl
adc
ret
fdivr
xchg
xor
enter
pop
jnp
fbstp
push
mov
shr
pop
and
aaa
adc
dec
dec
xchg
xor
enter
pop
nop
test
aaa
push
mov
shr
cmp
iret
ins
iret
xchg
inc
sbb
shl
adc
ret
fcom
and
jb
mov
ins
pusha
jne
jle
bound
xchg
pop
in
xchg
shl
cmc
mov
jle
(bad)
enter
mov
ins
mov
les
bound
jnp
(bad)
enter
and
xor
mov
cwde
xor
pop
jecxz
fbstp
jnp
pop
enter
aas
sbb
xchg
neg
je
xchg
xor
enter
mov
xor
retf
ins
iret
cmps
cmp
sbb
outs
iret
bound
xchg
xor
ins
int3
(bad)
enter
arpl
gs
add
popf
mov
ins
pusha
jne
mov
popf
mov
cmp
mov
(bad)
enter
(bad)
sub
sub
popa
adc
ficomp
icebp
sub
mov
gs
ins
iret
xchg
mov
xor
stos
shl
lahf
inc
movs
pop
or
sbb
push
int3
arpl
ins
pusha
jne
mov
popf
mov
outs
iret
aaa
xchg
pop
or
sub
popf
mov
ins
pusha
jne
mov
popf
mov
sub
sti
xor
retf
imul
addr16
mov
xchg
mov
mov
push
int3
gs
daa
dec
jb
mov
ins
pusha
jne
test
popf
pop
nop
jmp
aaa
push
mov
iret
ins
iret
int
addr16
popf
aaa
adc
mov
ins
pusha
jne
xchg
popf
mov
ins
mov
xor
mov
bound
retf
xchg
mov
bound
scas
mov
xchg
mov
daa
stc
xor
mov
enter
fcom
xchg
xor
ss
les
xchg
mov
bound
test
enter
cmp
xor
retf
ins
iret
push
not
xor
iret
ins
iret
adc
xchg
rcl
lea
ins
iret
xchg
cmp
iret
sub
imul
pop
add
inc
jne
mov
bound
sbb
daa
sti
mov
sbb
ins
iret
bound
outs
(bad)
aaa
xchg
mov
bound
outs
mov
xchg
mov
(bad)
fdiv
iret
bound
ins
iret
mov
cmp
icebp
pop
xor
popf
fcomp
bound
xor
out
(bad)
and
xor
imul
enter
leave
ins
iret
int
inc
jmp
ins
iret
int
and
popf
aaa
adc
lea
ins
pusha
jne
xor
mov
ins
mov
bound
ror
jecxz
iret
bound
stc
jo
xor
mov
ins
mov
bound
test
ins
iret
jne
xor
mov
ins
pusha
jne
xor
mov
ins
addr16
mov
(bad)
enter
ss
fcom
es
xor
jbe
popf
aaa
push
mov
iret
ins
iret
int
xchg
iret
sub
imul
pop
daa
inc
fnsave
stc
xor
aaa
jnp
mov
xchg
pusha
jne
xor
popa
enter
enter
enter
cli
ins
iret
push
repz
mov
sbb
outs
iret
(bad)
enter
enter
and
loop
popf
aaa
sti
jo
sub
fdivr
and
retf
int3
outs
(bad)
(bad)
push
xor
bound
aad
pop
xor
fistp
popf
aaa
shl
mov
repz
adc
call
sub
pop
xchg
xor
aaa
xchg
mov
bound
push
inc
xchg
addr16
mov
xchg
pop
pushf
fbld
mov
add
mov
aam
mov
fisubr
hlt
push
xor
or
xchg
xor
addr16
jno
fild
and
aaa
xchg
pop
or
data16
fcomip
and
and
add
aaa
sti
xor
aaa
xchg
mov
bound
inc
xchg
fild
popf
aaa
stc
xor
cmps
xor
mov
ins
pusha
jne
or
bound
xor
aaa
xchg
mov
inc
daa
jb
aas
inc
adc
bound
out
fbstp
sub
jle
push
test
enter
fistp
popf
aaa
sub
rcl
popa
adc
ficomp
icebp
sub
mov
adc
sbb
pop
mov
frstor
xchg
fld
aaa
pushf
xchg
test
bound
ret
sar
xor
sbb
mov
push
icebp
repnz
fisubr
mov
frstor
xchg
mov
bound
fwait
inc
pop
icebp
push
fwait
jo
ins
xor
xchg
popf
mov
out
pop
mov
frstor
mov
iret
bound
sbb
adc
ret
pop
or
sti
dec
jb
mov
ins
pusha
jne
xchg
popf
pop
xchg
mov
bound
mov
fldcw
(bad)
and
fld
fistp
(bad)
enter
fisubr
fcomip
mul
adc
test
push
pop
popf
mov
ins
pusha
jne
xor
(bad)
aaa
rcl
pop
fsub
sbb
div
jnp
xchg
aaa
xchg
pop
and
shl
cmc
cmps
xor
pop
push
jmp
xchg
fsub
and
xor
call
(bad)
(bad)
fldcw
add
adc
xchg
sti
test
xchg
pop
or
icebp
dec
jb
pop
jecxz
fbstp
jnp
mov
xchg
mov
bound
xchg
mov
push
ss
pop
pop
cmp
fbstp
sti
mov
pop
in
shl
cmc
pop
add
(bad)
and
fisubr
add
call
popf
aaa
xchg
ret
sti
xchg
sti
xchg
inc
jne
pop
or
icebp
dec
jb
pop
xchg
scas
fdiv
jnp
mov
xchg
mov
ja
lea
fisubr
add
fbstp
sub
popf
aaa
xchg
ret
cmp
xchg
pop
popf
pop
xchg
pop
cdq
pop
xchg
pop
popf
pop
xchg
xor
jbe
fdiv
cmp
pop
lahf
pop
xchg
pop
popf
addr16
xchg
aaa
xchg
mov
retf
popf
lock
mov
xchg
xor
jb
pusha
adc
ret
fdivr
cmp
fbld
adc
bound
or
aaa
out
div
push
inc
and
cmp
ins
inc
sub
jg
popf
aaa
stc
xor
jb
pusha
div
xchg
iret
call
aaa
xchg
neg
(bad)
ins
aas
popf
aaa
push
jne
addr16
mov
fsubr
fistp
and
fsubr
jmp
or
xor
inc
sub
mov
ins
bound
fadd
cmp
jne
addr16
xor
(bad)
jno
popf
enter
mov
xor
push
popf
xor
mov
dec
jb
mov
or
popf
mov
dec
dec
fnsave
sbb
pop
xchg
dec
popf
aaa
stc
xor
pushf
xor
xchg
fnsave
popf
shl
xchg
bound
mov
popf
aaa
stc
xor
pushf
xor
jb
xor
fistp
and
lock
mov
fmul
popf
aaa
push
jne
aaa
xchg
xor
aaa
xchg
xor
jb
pusha
jne
pushf
xor
add
popf
pop
xchg
pop
popf
pop
xchg
pop
popf
pop
xchg
pop
popf
pop
xchg
xor
sti
rol
xchg
pop
jl
shl
div
jnp
lea
xchg
xchg
popf
test
xor
mov
xchg
pop
popf
(bad)
ds
aaa
stc
xor
and
bound
xor
mov
push
cmc
mov
mov
dec
inc
jne
pusha
jne
sahf
xor
enter
push
xchg
xor
sbb
push
mov
frstor
sbb
jne
lahf
xor
mov
push
mov
fldcw
aaa
xchg
xor
jae
popf
aaa
push
mov
fisubr
mov
ins
pusha
cmc
pop
daa
jb
pop
jmp
jne
pop
pushf
aaa
xchg
mov
lods
push
iret
bound
aaa
push
adc
test
aaa
xchg
neg
ss
xor
enter
out
sbb
adc
ret
pop
popf
pop
xchg
pop
push
inc
shl
div
stc
xor
popf
xor
aaa
xchg
mov
bound
xor
aaa
sti
enter
pop
popf
pop
xchg
fsubr
xchg
xor
(bad)
cmp
aaa
stc
xor
ret
xchg
xor
aaa
or
popf
fcomip
ds
aaa
js
adc
pusha
jne
popf
xor
mov
ret
fsub
cmp
xor
aaa
push
jne
addr16
xchg
aaa
xchg
cmp
inc
outs
ret
ins
pop
repnz
(bad)
mov
lahf
aaa
xchg
arpl
pusha
sub
out
das
mov
xor
iret
cmp
lods
xchg
xor
xor
xchg
xor
xor
aaa
pushf
mov
xor
xchg
xor
ss
xor
aaa
scas
or
xchg
xor
aaa
adc
popf
cmp
jmp
shl
bound
sti
test
aaa
jnp
jns
ins
mov
bound
push
hlt
pusha
enter
pop
jg
fbstp
ins
test
ins
iret
jne
ja
bound
int
enter
retf
int
fsub
ins
fmul
neg
adc
ret
iret
test
xor
fild
popf
aaa
call
retf
mov
dec
int
enter
mov
ins
sbb
jmp
bound
inc
inc
cmp
sbb
outs
iret
bound
int
enter
retf
movs
out
add
sbb
mov
dec
int
enter
xlat
outs
iret
bound
call
div
stc
xor
xlat
nop
fdiv
jnp
nop
aaa
xchg
mov
pop
mov
push
sub
xor
aaa
xor
xchg
xchg
cmc
adc
adc
xchg
enter
adc
popf
mov
inc
sub
xor
cmp
adc
jne
js
bound
or
pushf
cmp
dec
call
jb
(bad)
(bad)
(bad)
enter
xor
enter
xor
jbe
or
aas
pushf
mov
xor
xor
xor
jno
push
(bad)
cmp
aas
ins
inc
xchg
fild
enter
div
xor
mov
into
(bad)
enter
cmp
xchg
fbstp
out
cmps
xor
xchg
fbstp
out
cmps
xor
add
xor
fdiv
out
cmps
xor
xchg
fbstp
out
cmps
xor
xchg
fbstp
out
cmps
xor
xchg
fbstp
out
cmps
xor
cmp
xor
mov
xor
inc
(bad)
fistp
popf
aaa
sbb
cmps
xor
xchg
fbstp
out
cmps
xor
xchg
fbstp
out
cmps
xor
cmp
popf
enter
mov
iret
bound
ins
inc
(bad)
fbstp
cmp
aaa
adc
(bad)
xor
xchg
jae
(bad)
enter
shr
bound
push
mov
retf
int
(bad)
popf
aaa
sbb
je
xchg
xor
mov
xchg
xor
inc
aas
popf
aaa
sti
iret
popf
aaa
xchg
mov
bound
add
jne
cdq
xor
enter
pop
stc
xor
aaa
sti
arpl
xchg
pop
popf
fcomip
cmp
stos
shl
jne
cwde
xor
aaa
adc
inc
add
iret
(bad)
enter
retf
pop
mov
int
enter
inc
daa
jb
ss
mov
aaa
xchg
xor
enter
mov
ins
pusha
bound
pop
xchg
fbstp
jnp
xchg
aaa
xchg
mov
bound
xor
xor
sub
jle
xchg
mov
bound
bswap
ins
mov
cmp
inc
mov
pop
mov
xor
cdq
xor
jne
fsub
cmp
xchg
xor
mov
ins
iret
bound
mov
retf
int
mov
mov
retf
int
pop
cmp
aaa
adc
lea
xor
enter
enter
ja
fsub
xchg
xor
enter
pop
xchg
pop
popf
pop
popf
jmp
cdq
xor
ja
fmul
retf
xchg
xor
enter
enter
ss
inc
fs
and
pop
stc
xor
aaa
sti
xlat
inc
jne
pop
popf
fbld
add
jne
call
aaa
push
mov
enter
fsubr
iret
(bad)
enter
ss
iret
bound
mov
dec
mov
pop
je
fbstp
stc
xor
call
ja
fdivr
ds
xor
xor
enter
mov
iret
(bad)
enter
mov
enter
not
mov
iret
(bad)
enter
ret
bound
sbb
sbb
outs
iret
bound
xchg
xchg
aaa
xchg
mov
daa
sti
iret
popf
aaa
xchg
mov
bound
add
jne
call
enter
pop
stc
xor
aaa
sti
test
cmp
xchg
shl
jne
call
aaa
sub
aaa
xchg
(bad)
jp
push
fsub
ins
mov
(bad)
enter
mov
int
enter
in
shl
adc
ret
fsubr
repz
xchg
xor
mov
iret
(bad)
enter
sbb
popf
fbstp
cmp
enter
inc
mov
popf
pop
xchg
pop
xor
aaa
jnp
xchg
aaa
xchg
iret
test
or
popf
fild
cmp
aaa
xchg
mov
bound
mov
retf
int
xor
fbstp
push
mov
retf
int
inc
cmp
pop
ins
xor
enter
enter
jbe
fsub
mov
inc
mov
pop
clc
jmp
jne
fwait
xor
jbe
fmul
aas
xchg
xor
xor
enter
enter
ss
inc
fs
xor
pop
stc
xor
aaa
sti
sbb
jne
pop
popf
(bad)
cmp
test
xor
fwait
xor
aaa
push
mov
leave
ins
iret
popf
fsubr
into
(bad)
enter
ss
iret
bound
mov
dec
mov
pop
mov
xor
fwait
xor
jbe
fdivr
xchg
xor
xor
enter
mov
into
(bad)
enter
mov
enter
not
mov
iret
(bad)
enter
ret
bound
sbb
sbb
outs
iret
bound
xlat
xchg
aaa
xchg
mov
daa
sti
iret
popf
aaa
xchg
mov
bound
add
jne
xchg
xor
enter
pop
stc
xor
aaa
sti
and
pop
popf
fild
aaa
popf
aaa
ins
add
jne
xchg
xor
aaa
push
mov
leave
ins
iret
popf
fsubr
into
(bad)
enter
ss
iret
bound
mov
dec
mov
pop
jge
fbstp
stc
xor
xchg
xor
jbe
fdiv
daa
xchg
xor
enter
mov
adc
bound
or
aaa
out
xchg
add
or
cmp
sbb
outs
iret
bound
mov
(bad)
enter
mov
int
enter
in
shl
adc
ret
fmul
repz
shr
bound
mov
popf
pop
xchg
pop
popf
pop
xchg
pop
popf
aaa
xchg
jo
ja
jno
fisttp
xor
imul
stc
xor
aaa
ins
test
ins
iret
jne
xchg
xor
jne
xor
jo
cmp
push
jmp
or
repz
push
movs
ins
retf
iret
fs
add
xchg
iret
sub
ins
iret
(bad)
fbstp
popf
aaa
stc
xor
mov
int
enter
pop
arpl
fbstp
ins
test
ins
iret
jne
xchg
xor
enter
enter
ss
inc
fs
xchg
mov
bound
mov
bound
imul
xchg
xor
(bad)
outs
iret
bound
xor
(bad)
jno
popf
enter
enter
xor
enter
test
ins
iret
jne
xchg
xor
jbe
fsub
xor
xor
xor
xor
aaa
sti
xor
cmps
shl
jne
xchg
xor
enter
jb
xor
pop
xchg
iret
sub
ins
iret
(bad)
fist
popf
aaa
push
cmp
push
jmp
or
repz
push
movs
ins
retf
iret
fs
mov
sub
ins
iret
(bad)
fist
xor
mov
int
enter
pop
jg
fbstp
ins
test
ins
iret
jne
xchg
xor
enter
xor
xor
inc
aaa
sbb
pushf
iret
sbb
div
stc
xor
pop
daa
jb
pop
jmp
jne
pop
pushf
aaa
xchg
mov
movs
sbb
bound
add
jne
xchg
xor
mov
ins
mov
call
enter
inc
fsubr
xchg
xor
imul
gs
adc
xchg
lds
inc
fwait
(bad)
jmp
and
and
shl
sbb
push
jb
or
xchg
mov
xor
ds
mov
aaa
xchg
xor
aaa
out
bound
jnp
fdiv
jnp
cdq
aaa
xchg
mov
inc
xchg
xor
sbb
mov
push
jno
inc
cwde
iret
test
xor
fistp
xor
aaa
test
sbb
cmp
add
jne
xchg
xor
jbe
inc
xchg
enter
ja
fdivr
xor
enter
add
call
test
xor
xchg
xor
jbe
inc
xchg
enter
jbe
fsubr
add
and
or
test
aaa
xchg
inc
xchg
enter
jbe
fadd
iret
mov
add
call
adc
pushf
inc
cwde
iret
test
xor
fild
popf
aaa
mov
lods
fdiv
out
push
sub
enter
mul
aaa
out
push
sub
add
call
test
xor
aaa
out
push
sub
add
call
xchg
shl
sbb
xchg
push
popf
aaa
test
mov
xor
sub
cmps
add
xchg
fbstp
out
push
sub
jmp
and
out
bound
data16
fucomip
xor
aaa
js
and
shl
sbb
ret
stc
pop
daa
xchg
xor
(bad)
shl
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
(bad)
mov
and
xchg
xor
adc
mov
mov
ret
xor
xchg
mov
out
adc
aam
pushf
jo
bsr
fild
ds
inc
cwde
mov
adc
les
fidivr
sub
xor
outs
pop
xchg
fcomp
xchg
xor
les
addr16
jb
ins
outs
push
hlt
retf
aaa
xor
sbb
xor
or
(bad)
jb
popf
aaa
sbb
mov
iret
bound
dec
mov
mov
adc
out
jae
xor
aas
xchg
xor
(bad)
shl
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
ins
adc
or
aaa
